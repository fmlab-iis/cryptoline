(* frege: -v -isafety -isafety_timeout 14400 -jobs 24 -slicing -no_carry_constraint asm_negacyclic_intt_32.cl
Parsing Cryptoline file:                [OK]            0.456965 seconds
Checking well-formedness:               [OK]            0.104386 seconds
Transforming to SSA form:               [OK]            0.084633 seconds
Rewriting assignments:                  [OK]            0.045229 seconds
Verifying program safety:               [OK]            2754.070767 seconds
Verifying range assertions:             [OK]            0.053503 seconds
Verifying range specification:          [OK]            853.422171 seconds
Rewriting value-preserved casting:      [OK]            0.000269 seconds
Verifying algebraic assertions:         [OK]            142.023288 seconds
Verifying algebraic specification:      [OK]            3108.528747 seconds
Verification result:                    [OK]            6858.834448 seconds
*)

(* server@szu: -v -no_carry_constraint -slicing -jobs 4 -isafety asm_negacyclic_intt_32.cl 
Parsing Cryptoline file:                [OK]            0.505251 seconds
Checking well-formedness:               [OK]            0.097703 seconds
Transforming to SSA form:               [OK]            0.081823 seconds
Rewriting assignments:                  [OK]            0.040504 seconds
Verifying program safety:               [OK]            8853.745104 seconds
Verifying range assertions:             [OK]            0.182558 seconds
Verifying range specification:          [OK]            2871.196616 seconds
Rewriting value-preserved casting:      [OK]            0.000897 seconds
Verifying algebraic assertions:         [OK]            110.805889 seconds
Verifying algebraic specification:      [OK]            5905.688619 seconds
Verification result:                    [OK]            17742.382226 seconds
*)


proc main (
  sint32 x,
  sint32 a000, sint32 a001, sint32 a002, sint32 a003,
  sint32 a004, sint32 a005, sint32 a006, sint32 a007,
  sint32 a008, sint32 a009, sint32 a010, sint32 a011,
  sint32 a012, sint32 a013, sint32 a014, sint32 a015,
  sint32 a016, sint32 a017, sint32 a018, sint32 a019,
  sint32 a020, sint32 a021, sint32 a022, sint32 a023,
  sint32 a024, sint32 a025, sint32 a026, sint32 a027,
  sint32 a028, sint32 a029, sint32 a030, sint32 a031,
  sint32 a032, sint32 a033, sint32 a034, sint32 a035,
  sint32 a036, sint32 a037, sint32 a038, sint32 a039,
  sint32 a040, sint32 a041, sint32 a042, sint32 a043,
  sint32 a044, sint32 a045, sint32 a046, sint32 a047,
  sint32 a048, sint32 a049, sint32 a050, sint32 a051,
  sint32 a052, sint32 a053, sint32 a054, sint32 a055,
  sint32 a056, sint32 a057, sint32 a058, sint32 a059,
  sint32 a060, sint32 a061, sint32 a062, sint32 a063,
  sint32 a064, sint32 a065, sint32 a066, sint32 a067,
  sint32 a068, sint32 a069, sint32 a070, sint32 a071,
  sint32 a072, sint32 a073, sint32 a074, sint32 a075,
  sint32 a076, sint32 a077, sint32 a078, sint32 a079,
  sint32 a080, sint32 a081, sint32 a082, sint32 a083,
  sint32 a084, sint32 a085, sint32 a086, sint32 a087,
  sint32 a088, sint32 a089, sint32 a090, sint32 a091,
  sint32 a092, sint32 a093, sint32 a094, sint32 a095,
  sint32 a096, sint32 a097, sint32 a098, sint32 a099,
  sint32 a100, sint32 a101, sint32 a102, sint32 a103,
  sint32 a104, sint32 a105, sint32 a106, sint32 a107,
  sint32 a108, sint32 a109, sint32 a110, sint32 a111,
  sint32 a112, sint32 a113, sint32 a114, sint32 a115,
  sint32 a116, sint32 a117, sint32 a118, sint32 a119,
  sint32 a120, sint32 a121, sint32 a122, sint32 a123,
  sint32 a124, sint32 a125, sint32 a126, sint32 a127,
  sint32 a128, sint32 a129, sint32 a130, sint32 a131,
  sint32 a132, sint32 a133, sint32 a134, sint32 a135,
  sint32 a136, sint32 a137, sint32 a138, sint32 a139,
  sint32 a140, sint32 a141, sint32 a142, sint32 a143,
  sint32 a144, sint32 a145, sint32 a146, sint32 a147,
  sint32 a148, sint32 a149, sint32 a150, sint32 a151,
  sint32 a152, sint32 a153, sint32 a154, sint32 a155,
  sint32 a156, sint32 a157, sint32 a158, sint32 a159,
  sint32 a160, sint32 a161, sint32 a162, sint32 a163,
  sint32 a164, sint32 a165, sint32 a166, sint32 a167,
  sint32 a168, sint32 a169, sint32 a170, sint32 a171,
  sint32 a172, sint32 a173, sint32 a174, sint32 a175,
  sint32 a176, sint32 a177, sint32 a178, sint32 a179,
  sint32 a180, sint32 a181, sint32 a182, sint32 a183,
  sint32 a184, sint32 a185, sint32 a186, sint32 a187,
  sint32 a188, sint32 a189, sint32 a190, sint32 a191,
  sint32 a192, sint32 a193, sint32 a194, sint32 a195,
  sint32 a196, sint32 a197, sint32 a198, sint32 a199,
  sint32 a200, sint32 a201, sint32 a202, sint32 a203,
  sint32 a204, sint32 a205, sint32 a206, sint32 a207,
  sint32 a208, sint32 a209, sint32 a210, sint32 a211,
  sint32 a212, sint32 a213, sint32 a214, sint32 a215,
  sint32 a216, sint32 a217, sint32 a218, sint32 a219,
  sint32 a220, sint32 a221, sint32 a222, sint32 a223,
  sint32 a224, sint32 a225, sint32 a226, sint32 a227,
  sint32 a228, sint32 a229, sint32 a230, sint32 a231,
  sint32 a232, sint32 a233, sint32 a234, sint32 a235,
  sint32 a236, sint32 a237, sint32 a238, sint32 a239,
  sint32 a240, sint32 a241, sint32 a242, sint32 a243,
  sint32 a244, sint32 a245, sint32 a246, sint32 a247,
  sint32 a248, sint32 a249, sint32 a250, sint32 a251,
  sint32 a252, sint32 a253, sint32 a254, sint32 a255
) =

{
  true
  &&
  (* range *)
  and [
    (-25570049)@32 <=s a000, a000 <s 25570049@32,
    (-25570049)@32 <=s a001, a001 <s 25570049@32,
    (-25570049)@32 <=s a002, a002 <s 25570049@32,
    (-25570049)@32 <=s a003, a003 <s 25570049@32,
    (-25570049)@32 <=s a004, a004 <s 25570049@32,
    (-25570049)@32 <=s a005, a005 <s 25570049@32,
    (-25570049)@32 <=s a006, a006 <s 25570049@32,
    (-25570049)@32 <=s a007, a007 <s 25570049@32,
    (-25570049)@32 <=s a008, a008 <s 25570049@32,
    (-25570049)@32 <=s a009, a009 <s 25570049@32,
    (-25570049)@32 <=s a010, a010 <s 25570049@32,
    (-25570049)@32 <=s a011, a011 <s 25570049@32,
    (-25570049)@32 <=s a012, a012 <s 25570049@32,
    (-25570049)@32 <=s a013, a013 <s 25570049@32,
    (-25570049)@32 <=s a014, a014 <s 25570049@32,
    (-25570049)@32 <=s a015, a015 <s 25570049@32,
    (-25570049)@32 <=s a016, a016 <s 25570049@32,
    (-25570049)@32 <=s a017, a017 <s 25570049@32,
    (-25570049)@32 <=s a018, a018 <s 25570049@32,
    (-25570049)@32 <=s a019, a019 <s 25570049@32,
    (-25570049)@32 <=s a020, a020 <s 25570049@32,
    (-25570049)@32 <=s a021, a021 <s 25570049@32,
    (-25570049)@32 <=s a022, a022 <s 25570049@32,
    (-25570049)@32 <=s a023, a023 <s 25570049@32,
    (-25570049)@32 <=s a024, a024 <s 25570049@32,
    (-25570049)@32 <=s a025, a025 <s 25570049@32,
    (-25570049)@32 <=s a026, a026 <s 25570049@32,
    (-25570049)@32 <=s a027, a027 <s 25570049@32,
    (-25570049)@32 <=s a028, a028 <s 25570049@32,
    (-25570049)@32 <=s a029, a029 <s 25570049@32,
    (-25570049)@32 <=s a030, a030 <s 25570049@32,
    (-25570049)@32 <=s a031, a031 <s 25570049@32,
    (-25570049)@32 <=s a032, a032 <s 25570049@32,
    (-25570049)@32 <=s a033, a033 <s 25570049@32,
    (-25570049)@32 <=s a034, a034 <s 25570049@32,
    (-25570049)@32 <=s a035, a035 <s 25570049@32,
    (-25570049)@32 <=s a036, a036 <s 25570049@32,
    (-25570049)@32 <=s a037, a037 <s 25570049@32,
    (-25570049)@32 <=s a038, a038 <s 25570049@32,
    (-25570049)@32 <=s a039, a039 <s 25570049@32,
    (-25570049)@32 <=s a040, a040 <s 25570049@32,
    (-25570049)@32 <=s a041, a041 <s 25570049@32,
    (-25570049)@32 <=s a042, a042 <s 25570049@32,
    (-25570049)@32 <=s a043, a043 <s 25570049@32,
    (-25570049)@32 <=s a044, a044 <s 25570049@32,
    (-25570049)@32 <=s a045, a045 <s 25570049@32,
    (-25570049)@32 <=s a046, a046 <s 25570049@32,
    (-25570049)@32 <=s a047, a047 <s 25570049@32,
    (-25570049)@32 <=s a048, a048 <s 25570049@32,
    (-25570049)@32 <=s a049, a049 <s 25570049@32,
    (-25570049)@32 <=s a050, a050 <s 25570049@32,
    (-25570049)@32 <=s a051, a051 <s 25570049@32,
    (-25570049)@32 <=s a052, a052 <s 25570049@32,
    (-25570049)@32 <=s a053, a053 <s 25570049@32,
    (-25570049)@32 <=s a054, a054 <s 25570049@32,
    (-25570049)@32 <=s a055, a055 <s 25570049@32,
    (-25570049)@32 <=s a056, a056 <s 25570049@32,
    (-25570049)@32 <=s a057, a057 <s 25570049@32,
    (-25570049)@32 <=s a058, a058 <s 25570049@32,
    (-25570049)@32 <=s a059, a059 <s 25570049@32,
    (-25570049)@32 <=s a060, a060 <s 25570049@32,
    (-25570049)@32 <=s a061, a061 <s 25570049@32,
    (-25570049)@32 <=s a062, a062 <s 25570049@32,
    (-25570049)@32 <=s a063, a063 <s 25570049@32,
    (-25570049)@32 <=s a064, a064 <s 25570049@32,
    (-25570049)@32 <=s a065, a065 <s 25570049@32,
    (-25570049)@32 <=s a066, a066 <s 25570049@32,
    (-25570049)@32 <=s a067, a067 <s 25570049@32,
    (-25570049)@32 <=s a068, a068 <s 25570049@32,
    (-25570049)@32 <=s a069, a069 <s 25570049@32,
    (-25570049)@32 <=s a070, a070 <s 25570049@32,
    (-25570049)@32 <=s a071, a071 <s 25570049@32,
    (-25570049)@32 <=s a072, a072 <s 25570049@32,
    (-25570049)@32 <=s a073, a073 <s 25570049@32,
    (-25570049)@32 <=s a074, a074 <s 25570049@32,
    (-25570049)@32 <=s a075, a075 <s 25570049@32,
    (-25570049)@32 <=s a076, a076 <s 25570049@32,
    (-25570049)@32 <=s a077, a077 <s 25570049@32,
    (-25570049)@32 <=s a078, a078 <s 25570049@32,
    (-25570049)@32 <=s a079, a079 <s 25570049@32,
    (-25570049)@32 <=s a080, a080 <s 25570049@32,
    (-25570049)@32 <=s a081, a081 <s 25570049@32,
    (-25570049)@32 <=s a082, a082 <s 25570049@32,
    (-25570049)@32 <=s a083, a083 <s 25570049@32,
    (-25570049)@32 <=s a084, a084 <s 25570049@32,
    (-25570049)@32 <=s a085, a085 <s 25570049@32,
    (-25570049)@32 <=s a086, a086 <s 25570049@32,
    (-25570049)@32 <=s a087, a087 <s 25570049@32,
    (-25570049)@32 <=s a088, a088 <s 25570049@32,
    (-25570049)@32 <=s a089, a089 <s 25570049@32,
    (-25570049)@32 <=s a090, a090 <s 25570049@32,
    (-25570049)@32 <=s a091, a091 <s 25570049@32,
    (-25570049)@32 <=s a092, a092 <s 25570049@32,
    (-25570049)@32 <=s a093, a093 <s 25570049@32,
    (-25570049)@32 <=s a094, a094 <s 25570049@32,
    (-25570049)@32 <=s a095, a095 <s 25570049@32,
    (-25570049)@32 <=s a096, a096 <s 25570049@32,
    (-25570049)@32 <=s a097, a097 <s 25570049@32,
    (-25570049)@32 <=s a098, a098 <s 25570049@32,
    (-25570049)@32 <=s a099, a099 <s 25570049@32,
    (-25570049)@32 <=s a100, a100 <s 25570049@32,
    (-25570049)@32 <=s a101, a101 <s 25570049@32,
    (-25570049)@32 <=s a102, a102 <s 25570049@32,
    (-25570049)@32 <=s a103, a103 <s 25570049@32,
    (-25570049)@32 <=s a104, a104 <s 25570049@32,
    (-25570049)@32 <=s a105, a105 <s 25570049@32,
    (-25570049)@32 <=s a106, a106 <s 25570049@32,
    (-25570049)@32 <=s a107, a107 <s 25570049@32,
    (-25570049)@32 <=s a108, a108 <s 25570049@32,
    (-25570049)@32 <=s a109, a109 <s 25570049@32,
    (-25570049)@32 <=s a110, a110 <s 25570049@32,
    (-25570049)@32 <=s a111, a111 <s 25570049@32,
    (-25570049)@32 <=s a112, a112 <s 25570049@32,
    (-25570049)@32 <=s a113, a113 <s 25570049@32,
    (-25570049)@32 <=s a114, a114 <s 25570049@32,
    (-25570049)@32 <=s a115, a115 <s 25570049@32,
    (-25570049)@32 <=s a116, a116 <s 25570049@32,
    (-25570049)@32 <=s a117, a117 <s 25570049@32,
    (-25570049)@32 <=s a118, a118 <s 25570049@32,
    (-25570049)@32 <=s a119, a119 <s 25570049@32,
    (-25570049)@32 <=s a120, a120 <s 25570049@32,
    (-25570049)@32 <=s a121, a121 <s 25570049@32,
    (-25570049)@32 <=s a122, a122 <s 25570049@32,
    (-25570049)@32 <=s a123, a123 <s 25570049@32,
    (-25570049)@32 <=s a124, a124 <s 25570049@32,
    (-25570049)@32 <=s a125, a125 <s 25570049@32,
    (-25570049)@32 <=s a126, a126 <s 25570049@32,
    (-25570049)@32 <=s a127, a127 <s 25570049@32,
    (-25570049)@32 <=s a128, a128 <s 25570049@32,
    (-25570049)@32 <=s a129, a129 <s 25570049@32,
    (-25570049)@32 <=s a130, a130 <s 25570049@32,
    (-25570049)@32 <=s a131, a131 <s 25570049@32,
    (-25570049)@32 <=s a132, a132 <s 25570049@32,
    (-25570049)@32 <=s a133, a133 <s 25570049@32,
    (-25570049)@32 <=s a134, a134 <s 25570049@32,
    (-25570049)@32 <=s a135, a135 <s 25570049@32,
    (-25570049)@32 <=s a136, a136 <s 25570049@32,
    (-25570049)@32 <=s a137, a137 <s 25570049@32,
    (-25570049)@32 <=s a138, a138 <s 25570049@32,
    (-25570049)@32 <=s a139, a139 <s 25570049@32,
    (-25570049)@32 <=s a140, a140 <s 25570049@32,
    (-25570049)@32 <=s a141, a141 <s 25570049@32,
    (-25570049)@32 <=s a142, a142 <s 25570049@32,
    (-25570049)@32 <=s a143, a143 <s 25570049@32,
    (-25570049)@32 <=s a144, a144 <s 25570049@32,
    (-25570049)@32 <=s a145, a145 <s 25570049@32,
    (-25570049)@32 <=s a146, a146 <s 25570049@32,
    (-25570049)@32 <=s a147, a147 <s 25570049@32,
    (-25570049)@32 <=s a148, a148 <s 25570049@32,
    (-25570049)@32 <=s a149, a149 <s 25570049@32,
    (-25570049)@32 <=s a150, a150 <s 25570049@32,
    (-25570049)@32 <=s a151, a151 <s 25570049@32,
    (-25570049)@32 <=s a152, a152 <s 25570049@32,
    (-25570049)@32 <=s a153, a153 <s 25570049@32,
    (-25570049)@32 <=s a154, a154 <s 25570049@32,
    (-25570049)@32 <=s a155, a155 <s 25570049@32,
    (-25570049)@32 <=s a156, a156 <s 25570049@32,
    (-25570049)@32 <=s a157, a157 <s 25570049@32,
    (-25570049)@32 <=s a158, a158 <s 25570049@32,
    (-25570049)@32 <=s a159, a159 <s 25570049@32,
    (-25570049)@32 <=s a160, a160 <s 25570049@32,
    (-25570049)@32 <=s a161, a161 <s 25570049@32,
    (-25570049)@32 <=s a162, a162 <s 25570049@32,
    (-25570049)@32 <=s a163, a163 <s 25570049@32,
    (-25570049)@32 <=s a164, a164 <s 25570049@32,
    (-25570049)@32 <=s a165, a165 <s 25570049@32,
    (-25570049)@32 <=s a166, a166 <s 25570049@32,
    (-25570049)@32 <=s a167, a167 <s 25570049@32,
    (-25570049)@32 <=s a168, a168 <s 25570049@32,
    (-25570049)@32 <=s a169, a169 <s 25570049@32,
    (-25570049)@32 <=s a170, a170 <s 25570049@32,
    (-25570049)@32 <=s a171, a171 <s 25570049@32,
    (-25570049)@32 <=s a172, a172 <s 25570049@32,
    (-25570049)@32 <=s a173, a173 <s 25570049@32,
    (-25570049)@32 <=s a174, a174 <s 25570049@32,
    (-25570049)@32 <=s a175, a175 <s 25570049@32,
    (-25570049)@32 <=s a176, a176 <s 25570049@32,
    (-25570049)@32 <=s a177, a177 <s 25570049@32,
    (-25570049)@32 <=s a178, a178 <s 25570049@32,
    (-25570049)@32 <=s a179, a179 <s 25570049@32,
    (-25570049)@32 <=s a180, a180 <s 25570049@32,
    (-25570049)@32 <=s a181, a181 <s 25570049@32,
    (-25570049)@32 <=s a182, a182 <s 25570049@32,
    (-25570049)@32 <=s a183, a183 <s 25570049@32,
    (-25570049)@32 <=s a184, a184 <s 25570049@32,
    (-25570049)@32 <=s a185, a185 <s 25570049@32,
    (-25570049)@32 <=s a186, a186 <s 25570049@32,
    (-25570049)@32 <=s a187, a187 <s 25570049@32,
    (-25570049)@32 <=s a188, a188 <s 25570049@32,
    (-25570049)@32 <=s a189, a189 <s 25570049@32,
    (-25570049)@32 <=s a190, a190 <s 25570049@32,
    (-25570049)@32 <=s a191, a191 <s 25570049@32,
    (-25570049)@32 <=s a192, a192 <s 25570049@32,
    (-25570049)@32 <=s a193, a193 <s 25570049@32,
    (-25570049)@32 <=s a194, a194 <s 25570049@32,
    (-25570049)@32 <=s a195, a195 <s 25570049@32,
    (-25570049)@32 <=s a196, a196 <s 25570049@32,
    (-25570049)@32 <=s a197, a197 <s 25570049@32,
    (-25570049)@32 <=s a198, a198 <s 25570049@32,
    (-25570049)@32 <=s a199, a199 <s 25570049@32,
    (-25570049)@32 <=s a200, a200 <s 25570049@32,
    (-25570049)@32 <=s a201, a201 <s 25570049@32,
    (-25570049)@32 <=s a202, a202 <s 25570049@32,
    (-25570049)@32 <=s a203, a203 <s 25570049@32,
    (-25570049)@32 <=s a204, a204 <s 25570049@32,
    (-25570049)@32 <=s a205, a205 <s 25570049@32,
    (-25570049)@32 <=s a206, a206 <s 25570049@32,
    (-25570049)@32 <=s a207, a207 <s 25570049@32,
    (-25570049)@32 <=s a208, a208 <s 25570049@32,
    (-25570049)@32 <=s a209, a209 <s 25570049@32,
    (-25570049)@32 <=s a210, a210 <s 25570049@32,
    (-25570049)@32 <=s a211, a211 <s 25570049@32,
    (-25570049)@32 <=s a212, a212 <s 25570049@32,
    (-25570049)@32 <=s a213, a213 <s 25570049@32,
    (-25570049)@32 <=s a214, a214 <s 25570049@32,
    (-25570049)@32 <=s a215, a215 <s 25570049@32,
    (-25570049)@32 <=s a216, a216 <s 25570049@32,
    (-25570049)@32 <=s a217, a217 <s 25570049@32,
    (-25570049)@32 <=s a218, a218 <s 25570049@32,
    (-25570049)@32 <=s a219, a219 <s 25570049@32,
    (-25570049)@32 <=s a220, a220 <s 25570049@32,
    (-25570049)@32 <=s a221, a221 <s 25570049@32,
    (-25570049)@32 <=s a222, a222 <s 25570049@32,
    (-25570049)@32 <=s a223, a223 <s 25570049@32,
    (-25570049)@32 <=s a224, a224 <s 25570049@32,
    (-25570049)@32 <=s a225, a225 <s 25570049@32,
    (-25570049)@32 <=s a226, a226 <s 25570049@32,
    (-25570049)@32 <=s a227, a227 <s 25570049@32,
    (-25570049)@32 <=s a228, a228 <s 25570049@32,
    (-25570049)@32 <=s a229, a229 <s 25570049@32,
    (-25570049)@32 <=s a230, a230 <s 25570049@32,
    (-25570049)@32 <=s a231, a231 <s 25570049@32,
    (-25570049)@32 <=s a232, a232 <s 25570049@32,
    (-25570049)@32 <=s a233, a233 <s 25570049@32,
    (-25570049)@32 <=s a234, a234 <s 25570049@32,
    (-25570049)@32 <=s a235, a235 <s 25570049@32,
    (-25570049)@32 <=s a236, a236 <s 25570049@32,
    (-25570049)@32 <=s a237, a237 <s 25570049@32,
    (-25570049)@32 <=s a238, a238 <s 25570049@32,
    (-25570049)@32 <=s a239, a239 <s 25570049@32,
    (-25570049)@32 <=s a240, a240 <s 25570049@32,
    (-25570049)@32 <=s a241, a241 <s 25570049@32,
    (-25570049)@32 <=s a242, a242 <s 25570049@32,
    (-25570049)@32 <=s a243, a243 <s 25570049@32,
    (-25570049)@32 <=s a244, a244 <s 25570049@32,
    (-25570049)@32 <=s a245, a245 <s 25570049@32,
    (-25570049)@32 <=s a246, a246 <s 25570049@32,
    (-25570049)@32 <=s a247, a247 <s 25570049@32,
    (-25570049)@32 <=s a248, a248 <s 25570049@32,
    (-25570049)@32 <=s a249, a249 <s 25570049@32,
    (-25570049)@32 <=s a250, a250 <s 25570049@32,
    (-25570049)@32 <=s a251, a251 <s 25570049@32,
    (-25570049)@32 <=s a252, a252 <s 25570049@32,
    (-25570049)@32 <=s a253, a253 <s 25570049@32,
    (-25570049)@32 <=s a254, a254 <s 25570049@32,
    (-25570049)@32 <=s a255, a255 <s 25570049@32
  ]
}

(* === params === *)

mov Q 25570049@sint32;
mov Qprime (-1991431425)@sint32;

(* === inits === *)

(* src *)
mov L0x2001a248 a000;  mov L0x2001a24c a001;
mov L0x2001a250 a002;  mov L0x2001a254 a003;
mov L0x2001a258 a004;  mov L0x2001a25c a005;
mov L0x2001a260 a006;  mov L0x2001a264 a007;
mov L0x2001a268 a008;  mov L0x2001a26c a009;
mov L0x2001a270 a010;  mov L0x2001a274 a011;
mov L0x2001a278 a012;  mov L0x2001a27c a013;
mov L0x2001a280 a014;  mov L0x2001a284 a015;
mov L0x2001a288 a016;  mov L0x2001a28c a017;
mov L0x2001a290 a018;  mov L0x2001a294 a019;
mov L0x2001a298 a020;  mov L0x2001a29c a021;
mov L0x2001a2a0 a022;  mov L0x2001a2a4 a023;
mov L0x2001a2a8 a024;  mov L0x2001a2ac a025;
mov L0x2001a2b0 a026;  mov L0x2001a2b4 a027;
mov L0x2001a2b8 a028;  mov L0x2001a2bc a029;
mov L0x2001a2c0 a030;  mov L0x2001a2c4 a031;
mov L0x2001a2c8 a032;  mov L0x2001a2cc a033;
mov L0x2001a2d0 a034;  mov L0x2001a2d4 a035;
mov L0x2001a2d8 a036;  mov L0x2001a2dc a037;
mov L0x2001a2e0 a038;  mov L0x2001a2e4 a039;
mov L0x2001a2e8 a040;  mov L0x2001a2ec a041;
mov L0x2001a2f0 a042;  mov L0x2001a2f4 a043;
mov L0x2001a2f8 a044;  mov L0x2001a2fc a045;
mov L0x2001a300 a046;  mov L0x2001a304 a047;
mov L0x2001a308 a048;  mov L0x2001a30c a049;
mov L0x2001a310 a050;  mov L0x2001a314 a051;
mov L0x2001a318 a052;  mov L0x2001a31c a053;
mov L0x2001a320 a054;  mov L0x2001a324 a055;
mov L0x2001a328 a056;  mov L0x2001a32c a057;
mov L0x2001a330 a058;  mov L0x2001a334 a059;
mov L0x2001a338 a060;  mov L0x2001a33c a061;
mov L0x2001a340 a062;  mov L0x2001a344 a063;
mov L0x2001a348 a064;  mov L0x2001a34c a065;
mov L0x2001a350 a066;  mov L0x2001a354 a067;
mov L0x2001a358 a068;  mov L0x2001a35c a069;
mov L0x2001a360 a070;  mov L0x2001a364 a071;
mov L0x2001a368 a072;  mov L0x2001a36c a073;
mov L0x2001a370 a074;  mov L0x2001a374 a075;
mov L0x2001a378 a076;  mov L0x2001a37c a077;
mov L0x2001a380 a078;  mov L0x2001a384 a079;
mov L0x2001a388 a080;  mov L0x2001a38c a081;
mov L0x2001a390 a082;  mov L0x2001a394 a083;
mov L0x2001a398 a084;  mov L0x2001a39c a085;
mov L0x2001a3a0 a086;  mov L0x2001a3a4 a087;
mov L0x2001a3a8 a088;  mov L0x2001a3ac a089;
mov L0x2001a3b0 a090;  mov L0x2001a3b4 a091;
mov L0x2001a3b8 a092;  mov L0x2001a3bc a093;
mov L0x2001a3c0 a094;  mov L0x2001a3c4 a095;
mov L0x2001a3c8 a096;  mov L0x2001a3cc a097;
mov L0x2001a3d0 a098;  mov L0x2001a3d4 a099;
mov L0x2001a3d8 a100;  mov L0x2001a3dc a101;
mov L0x2001a3e0 a102;  mov L0x2001a3e4 a103;
mov L0x2001a3e8 a104;  mov L0x2001a3ec a105;
mov L0x2001a3f0 a106;  mov L0x2001a3f4 a107;
mov L0x2001a3f8 a108;  mov L0x2001a3fc a109;
mov L0x2001a400 a110;  mov L0x2001a404 a111;
mov L0x2001a408 a112;  mov L0x2001a40c a113;
mov L0x2001a410 a114;  mov L0x2001a414 a115;
mov L0x2001a418 a116;  mov L0x2001a41c a117;
mov L0x2001a420 a118;  mov L0x2001a424 a119;
mov L0x2001a428 a120;  mov L0x2001a42c a121;
mov L0x2001a430 a122;  mov L0x2001a434 a123;
mov L0x2001a438 a124;  mov L0x2001a43c a125;
mov L0x2001a440 a126;  mov L0x2001a444 a127;
mov L0x2001a448 a128;  mov L0x2001a44c a129;
mov L0x2001a450 a130;  mov L0x2001a454 a131;
mov L0x2001a458 a132;  mov L0x2001a45c a133;
mov L0x2001a460 a134;  mov L0x2001a464 a135;
mov L0x2001a468 a136;  mov L0x2001a46c a137;
mov L0x2001a470 a138;  mov L0x2001a474 a139;
mov L0x2001a478 a140;  mov L0x2001a47c a141;
mov L0x2001a480 a142;  mov L0x2001a484 a143;
mov L0x2001a488 a144;  mov L0x2001a48c a145;
mov L0x2001a490 a146;  mov L0x2001a494 a147;
mov L0x2001a498 a148;  mov L0x2001a49c a149;
mov L0x2001a4a0 a150;  mov L0x2001a4a4 a151;
mov L0x2001a4a8 a152;  mov L0x2001a4ac a153;
mov L0x2001a4b0 a154;  mov L0x2001a4b4 a155;
mov L0x2001a4b8 a156;  mov L0x2001a4bc a157;
mov L0x2001a4c0 a158;  mov L0x2001a4c4 a159;
mov L0x2001a4c8 a160;  mov L0x2001a4cc a161;
mov L0x2001a4d0 a162;  mov L0x2001a4d4 a163;
mov L0x2001a4d8 a164;  mov L0x2001a4dc a165;
mov L0x2001a4e0 a166;  mov L0x2001a4e4 a167;
mov L0x2001a4e8 a168;  mov L0x2001a4ec a169;
mov L0x2001a4f0 a170;  mov L0x2001a4f4 a171;
mov L0x2001a4f8 a172;  mov L0x2001a4fc a173;
mov L0x2001a500 a174;  mov L0x2001a504 a175;
mov L0x2001a508 a176;  mov L0x2001a50c a177;
mov L0x2001a510 a178;  mov L0x2001a514 a179;
mov L0x2001a518 a180;  mov L0x2001a51c a181;
mov L0x2001a520 a182;  mov L0x2001a524 a183;
mov L0x2001a528 a184;  mov L0x2001a52c a185;
mov L0x2001a530 a186;  mov L0x2001a534 a187;
mov L0x2001a538 a188;  mov L0x2001a53c a189;
mov L0x2001a540 a190;  mov L0x2001a544 a191;
mov L0x2001a548 a192;  mov L0x2001a54c a193;
mov L0x2001a550 a194;  mov L0x2001a554 a195;
mov L0x2001a558 a196;  mov L0x2001a55c a197;
mov L0x2001a560 a198;  mov L0x2001a564 a199;
mov L0x2001a568 a200;  mov L0x2001a56c a201;
mov L0x2001a570 a202;  mov L0x2001a574 a203;
mov L0x2001a578 a204;  mov L0x2001a57c a205;
mov L0x2001a580 a206;  mov L0x2001a584 a207;
mov L0x2001a588 a208;  mov L0x2001a58c a209;
mov L0x2001a590 a210;  mov L0x2001a594 a211;
mov L0x2001a598 a212;  mov L0x2001a59c a213;
mov L0x2001a5a0 a214;  mov L0x2001a5a4 a215;
mov L0x2001a5a8 a216;  mov L0x2001a5ac a217;
mov L0x2001a5b0 a218;  mov L0x2001a5b4 a219;
mov L0x2001a5b8 a220;  mov L0x2001a5bc a221;
mov L0x2001a5c0 a222;  mov L0x2001a5c4 a223;
mov L0x2001a5c8 a224;  mov L0x2001a5cc a225;
mov L0x2001a5d0 a226;  mov L0x2001a5d4 a227;
mov L0x2001a5d8 a228;  mov L0x2001a5dc a229;
mov L0x2001a5e0 a230;  mov L0x2001a5e4 a231;
mov L0x2001a5e8 a232;  mov L0x2001a5ec a233;
mov L0x2001a5f0 a234;  mov L0x2001a5f4 a235;
mov L0x2001a5f8 a236;  mov L0x2001a5fc a237;
mov L0x2001a600 a238;  mov L0x2001a604 a239;
mov L0x2001a608 a240;  mov L0x2001a60c a241;
mov L0x2001a610 a242;  mov L0x2001a614 a243;
mov L0x2001a618 a244;  mov L0x2001a61c a245;
mov L0x2001a620 a246;  mov L0x2001a624 a247;
mov L0x2001a628 a248;  mov L0x2001a62c a249;
mov L0x2001a630 a250;  mov L0x2001a634 a251;
mov L0x2001a638 a252;  mov L0x2001a63c a253;
mov L0x2001a640 a254;  mov L0x2001a644 a255;

(* inv_roots *)
mov L0x800f7a0 (  -800936)@sint32;  mov L0x800f7a4 (  -800936)@sint32;
mov L0x800f7a8 ( 10790239)@sint32;  mov L0x800f7ac (  -800936)@sint32;
mov L0x800f7b0 (  6257664)@sint32;  mov L0x800f7b4 ( 10790239)@sint32;
mov L0x800f7b8 (  9536204)@sint32;  mov L0x800f7bc (  -800936)@sint32;
mov L0x800f7c0 (  -800936)@sint32;  mov L0x800f7c4 ( 10790239)@sint32;
mov L0x800f7c8 (  -800936)@sint32;  mov L0x800f7cc (  6257664)@sint32;
mov L0x800f7d0 ( 10790239)@sint32;  mov L0x800f7d4 (  9536204)@sint32;
mov L0x800f7d8 (   -45519)@sint32;  mov L0x800f7dc ( -9785872)@sint32;
mov L0x800f7e0 (  8741751)@sint32;  mov L0x800f7e4 (-12555915)@sint32;
mov L0x800f7e8 (  9222792)@sint32;  mov L0x800f7ec ( -3974469)@sint32;
mov L0x800f7f0 (  6186724)@sint32;  mov L0x800f7f4 ( -1752018)@sint32;
mov L0x800f7f8 (  6308437)@sint32;  mov L0x800f7fc (  1279366)@sint32;
mov L0x800f800 (  9214817)@sint32;  mov L0x800f804 (-11739496)@sint32;
mov L0x800f808 (  -851137)@sint32;  mov L0x800f80c ( -7869959)@sint32;
mov L0x800f810 ( -5757708)@sint32;  mov L0x800f814 (  4113944)@sint32;
mov L0x800f818 ( 11492079)@sint32;  mov L0x800f81c (  2504776)@sint32;
mov L0x800f820 (  -564125)@sint32;  mov L0x800f824 (  2964683)@sint32;
mov L0x800f828 ( -2036310)@sint32;  mov L0x800f82c (  7029166)@sint32;
mov L0x800f830 (  2951251)@sint32;  mov L0x800f834 (  6257664)@sint32;
mov L0x800f838 (  6308437)@sint32;  mov L0x800f83c ( 11013493)@sint32;
mov L0x800f840 (  1279366)@sint32;  mov L0x800f844 (  1556720)@sint32;
mov L0x800f848 (  9214817)@sint32;  mov L0x800f84c (  2917062)@sint32;
mov L0x800f850 (-10111425)@sint32;  mov L0x800f854 ( -4039544)@sint32;
mov L0x800f858 ( -1461286)@sint32;  mov L0x800f85c (  7718709)@sint32;
mov L0x800f860 (  9738183)@sint32;  mov L0x800f864 (-10403380)@sint32;
mov L0x800f868 ( 11943422)@sint32;  mov L0x800f86c ( -7769673)@sint32;
mov L0x800f870 ( -2216394)@sint32;  mov L0x800f874 ( -4530982)@sint32;
mov L0x800f878 ( -2927433)@sint32;  mov L0x800f87c (  2683865)@sint32;
mov L0x800f880 ( -8679711)@sint32;  mov L0x800f884 (  4045107)@sint32;
mov L0x800f888 ( -8224194)@sint32;  mov L0x800f88c ( -2249904)@sint32;
mov L0x800f890 ( -7863363)@sint32;  mov L0x800f894 ( 12440447)@sint32;
mov L0x800f898 (-10742070)@sint32;  mov L0x800f89c ( -3018363)@sint32;
mov L0x800f8a0 ( -3083871)@sint32;  mov L0x800f8a4 ( -3820015)@sint32;
mov L0x800f8a8 ( -8140660)@sint32;  mov L0x800f8ac ( 10790239)@sint32;
mov L0x800f8b0 (  6257664)@sint32;  mov L0x800f8b4 (  9536204)@sint32;
mov L0x800f8b8 (  6308437)@sint32;  mov L0x800f8bc ( -2216394)@sint32;
mov L0x800f8c0 ( 11013493)@sint32;  mov L0x800f8c4 (-10276457)@sint32;
mov L0x800f8c8 (-10327566)@sint32;  mov L0x800f8cc ( -4435558)@sint32;
mov L0x800f8d0 (  2610308)@sint32;  mov L0x800f8d4 (  5372942)@sint32;
mov L0x800f8d8 ( -8646977)@sint32;  mov L0x800f8dc (  3434759)@sint32;
mov L0x800f8e0 (  1700428)@sint32;  mov L0x800f8e4 ( -1560502)@sint32;
mov L0x800f8e8 ( 11013493)@sint32;  mov L0x800f8ec (  1556720)@sint32;
mov L0x800f8f0 (  2917062)@sint32;  mov L0x800f8f4 ( -8378129)@sint32;
mov L0x800f8f8 (  -371460)@sint32;  mov L0x800f8fc (  6592493)@sint32;
mov L0x800f900 ( 10270322)@sint32;  mov L0x800f904 ( -7732673)@sint32;
mov L0x800f908 ( -6689674)@sint32;  mov L0x800f90c (  2456345)@sint32;
mov L0x800f910 ( -7861158)@sint32;  mov L0x800f914 ( 10371470)@sint32;
mov L0x800f918 ( -9485354)@sint32;  mov L0x800f91c ( 11616061)@sint32;
mov L0x800f920 (  4175938)@sint32;  mov L0x800f924 (  9536204)@sint32;
mov L0x800f928 ( -2216394)@sint32;  mov L0x800f92c (-10276457)@sint32;
mov L0x800f930 ( -4530982)@sint32;  mov L0x800f934 ( -4935045)@sint32;
mov L0x800f938 ( -2927433)@sint32;  mov L0x800f93c (  2952568)@sint32;
mov L0x800f940 (  1891592)@sint32;  mov L0x800f944 ( -6151042)@sint32;
mov L0x800f948 ( -7828647)@sint32;  mov L0x800f94c (  -617246)@sint32;
mov L0x800f950 (  2503574)@sint32;  mov L0x800f954 ( -9072878)@sint32;
mov L0x800f958 ( -3135900)@sint32;  mov L0x800f95c ( 10766842)@sint32;
mov L0x800f960 (-10276457)@sint32;  mov L0x800f964 ( -4935045)@sint32;
mov L0x800f968 (  2952568)@sint32;  mov L0x800f96c (  2522583)@sint32;
mov L0x800f970 (  6526839)@sint32;  mov L0x800f974 ( 12696742)@sint32;
mov L0x800f978 ( 12652760)@sint32;  mov L0x800f97c ( -5847575)@sint32;
mov L0x800f980 (  4072115)@sint32;  mov L0x800f984 (   853026)@sint32;
mov L0x800f988 (  5000199)@sint32;  mov L0x800f98c ( -3241236)@sint32;
mov L0x800f990 (  2941196)@sint32;  mov L0x800f994 ( -4942030)@sint32;
mov L0x800f998 (  2549034)@sint32;

(* regs *)
nondet sp@uint32;
mov L0x200194f0 sp;
nondet r0@uint32;
nondet r1@uint32;
mov r2 Qprime;
mov r3 Q;

(* inp_polys *)
ghost inp_poly_0@bit :
  inp_poly_0 * inp_poly_0 = 
    L0x2001a248 * (x**0) + L0x2001a24c * (x**1) + 
    L0x2001a250 * (x**2) + L0x2001a254 * (x**3)
  && true;

ghost inp_poly_1@bit :
  inp_poly_1 * inp_poly_1 = 
    L0x2001a258 * (x**0) + L0x2001a25c * (x**1) + 
    L0x2001a260 * (x**2) + L0x2001a264 * (x**3)
  && true;

ghost inp_poly_2@bit :
  inp_poly_2 * inp_poly_2 = 
    L0x2001a268 * (x**0) + L0x2001a26c * (x**1) + 
    L0x2001a270 * (x**2) + L0x2001a274 * (x**3)
  && true;

ghost inp_poly_3@bit :
  inp_poly_3 * inp_poly_3 = 
    L0x2001a278 * (x**0) + L0x2001a27c * (x**1) + 
    L0x2001a280 * (x**2) + L0x2001a284 * (x**3)
  && true;

ghost inp_poly_4@bit :
  inp_poly_4 * inp_poly_4 = 
    L0x2001a288 * (x**0) + L0x2001a28c * (x**1) + 
    L0x2001a290 * (x**2) + L0x2001a294 * (x**3)
  && true;

ghost inp_poly_5@bit :
  inp_poly_5 * inp_poly_5 = 
    L0x2001a298 * (x**0) + L0x2001a29c * (x**1) + 
    L0x2001a2a0 * (x**2) + L0x2001a2a4 * (x**3)
  && true;

ghost inp_poly_6@bit :
  inp_poly_6 * inp_poly_6 = 
    L0x2001a2a8 * (x**0) + L0x2001a2ac * (x**1) + 
    L0x2001a2b0 * (x**2) + L0x2001a2b4 * (x**3)
  && true;

ghost inp_poly_7@bit :
  inp_poly_7 * inp_poly_7 = 
    L0x2001a2b8 * (x**0) + L0x2001a2bc * (x**1) + 
    L0x2001a2c0 * (x**2) + L0x2001a2c4 * (x**3)
  && true;

ghost inp_poly_8@bit :
  inp_poly_8 * inp_poly_8 = 
    L0x2001a2c8 * (x**0) + L0x2001a2cc * (x**1) + 
    L0x2001a2d0 * (x**2) + L0x2001a2d4 * (x**3)
  && true;

ghost inp_poly_9@bit :
  inp_poly_9 * inp_poly_9 = 
    L0x2001a2d8 * (x**0) + L0x2001a2dc * (x**1) + 
    L0x2001a2e0 * (x**2) + L0x2001a2e4 * (x**3)
  && true;

ghost inp_poly_10@bit :
  inp_poly_10 * inp_poly_10 = 
    L0x2001a2e8 * (x**0) + L0x2001a2ec * (x**1) + 
    L0x2001a2f0 * (x**2) + L0x2001a2f4 * (x**3)
  && true;

ghost inp_poly_11@bit :
  inp_poly_11 * inp_poly_11 = 
    L0x2001a2f8 * (x**0) + L0x2001a2fc * (x**1) + 
    L0x2001a300 * (x**2) + L0x2001a304 * (x**3)
  && true;

ghost inp_poly_12@bit :
  inp_poly_12 * inp_poly_12 = 
    L0x2001a308 * (x**0) + L0x2001a30c * (x**1) + 
    L0x2001a310 * (x**2) + L0x2001a314 * (x**3)
  && true;

ghost inp_poly_13@bit :
  inp_poly_13 * inp_poly_13 = 
    L0x2001a318 * (x**0) + L0x2001a31c * (x**1) + 
    L0x2001a320 * (x**2) + L0x2001a324 * (x**3)
  && true;

ghost inp_poly_14@bit :
  inp_poly_14 * inp_poly_14 = 
    L0x2001a328 * (x**0) + L0x2001a32c * (x**1) + 
    L0x2001a330 * (x**2) + L0x2001a334 * (x**3)
  && true;

ghost inp_poly_15@bit :
  inp_poly_15 * inp_poly_15 = 
    L0x2001a338 * (x**0) + L0x2001a33c * (x**1) + 
    L0x2001a340 * (x**2) + L0x2001a344 * (x**3)
  && true;

ghost inp_poly_16@bit :
  inp_poly_16 * inp_poly_16 = 
    L0x2001a348 * (x**0) + L0x2001a34c * (x**1) + 
    L0x2001a350 * (x**2) + L0x2001a354 * (x**3)
  && true;

ghost inp_poly_17@bit :
  inp_poly_17 * inp_poly_17 = 
    L0x2001a358 * (x**0) + L0x2001a35c * (x**1) + 
    L0x2001a360 * (x**2) + L0x2001a364 * (x**3)
  && true;

ghost inp_poly_18@bit :
  inp_poly_18 * inp_poly_18 = 
    L0x2001a368 * (x**0) + L0x2001a36c * (x**1) + 
    L0x2001a370 * (x**2) + L0x2001a374 * (x**3)
  && true;

ghost inp_poly_19@bit :
  inp_poly_19 * inp_poly_19 = 
    L0x2001a378 * (x**0) + L0x2001a37c * (x**1) + 
    L0x2001a380 * (x**2) + L0x2001a384 * (x**3)
  && true;

ghost inp_poly_20@bit :
  inp_poly_20 * inp_poly_20 = 
    L0x2001a388 * (x**0) + L0x2001a38c * (x**1) + 
    L0x2001a390 * (x**2) + L0x2001a394 * (x**3)
  && true;

ghost inp_poly_21@bit :
  inp_poly_21 * inp_poly_21 = 
    L0x2001a398 * (x**0) + L0x2001a39c * (x**1) + 
    L0x2001a3a0 * (x**2) + L0x2001a3a4 * (x**3)
  && true;

ghost inp_poly_22@bit :
  inp_poly_22 * inp_poly_22 = 
    L0x2001a3a8 * (x**0) + L0x2001a3ac * (x**1) + 
    L0x2001a3b0 * (x**2) + L0x2001a3b4 * (x**3)
  && true;

ghost inp_poly_23@bit :
  inp_poly_23 * inp_poly_23 = 
    L0x2001a3b8 * (x**0) + L0x2001a3bc * (x**1) + 
    L0x2001a3c0 * (x**2) + L0x2001a3c4 * (x**3)
  && true;

ghost inp_poly_24@bit :
  inp_poly_24 * inp_poly_24 = 
    L0x2001a3c8 * (x**0) + L0x2001a3cc * (x**1) + 
    L0x2001a3d0 * (x**2) + L0x2001a3d4 * (x**3)
  && true;

ghost inp_poly_25@bit :
  inp_poly_25 * inp_poly_25 = 
    L0x2001a3d8 * (x**0) + L0x2001a3dc * (x**1) + 
    L0x2001a3e0 * (x**2) + L0x2001a3e4 * (x**3)
  && true;

ghost inp_poly_26@bit :
  inp_poly_26 * inp_poly_26 = 
    L0x2001a3e8 * (x**0) + L0x2001a3ec * (x**1) + 
    L0x2001a3f0 * (x**2) + L0x2001a3f4 * (x**3)
  && true;

ghost inp_poly_27@bit :
  inp_poly_27 * inp_poly_27 = 
    L0x2001a3f8 * (x**0) + L0x2001a3fc * (x**1) + 
    L0x2001a400 * (x**2) + L0x2001a404 * (x**3)
  && true;

ghost inp_poly_28@bit :
  inp_poly_28 * inp_poly_28 = 
    L0x2001a408 * (x**0) + L0x2001a40c * (x**1) + 
    L0x2001a410 * (x**2) + L0x2001a414 * (x**3)
  && true;

ghost inp_poly_29@bit :
  inp_poly_29 * inp_poly_29 = 
    L0x2001a418 * (x**0) + L0x2001a41c * (x**1) + 
    L0x2001a420 * (x**2) + L0x2001a424 * (x**3)
  && true;

ghost inp_poly_30@bit :
  inp_poly_30 * inp_poly_30 = 
    L0x2001a428 * (x**0) + L0x2001a42c * (x**1) + 
    L0x2001a430 * (x**2) + L0x2001a434 * (x**3)
  && true;

ghost inp_poly_31@bit :
  inp_poly_31 * inp_poly_31 = 
    L0x2001a438 * (x**0) + L0x2001a43c * (x**1) + 
    L0x2001a440 * (x**2) + L0x2001a444 * (x**3)
  && true;

ghost inp_poly_32@bit :
  inp_poly_32 * inp_poly_32 = 
    L0x2001a448 * (x**0) + L0x2001a44c * (x**1) + 
    L0x2001a450 * (x**2) + L0x2001a454 * (x**3)
  && true;

ghost inp_poly_33@bit :
  inp_poly_33 * inp_poly_33 = 
    L0x2001a458 * (x**0) + L0x2001a45c * (x**1) + 
    L0x2001a460 * (x**2) + L0x2001a464 * (x**3)
  && true;

ghost inp_poly_34@bit :
  inp_poly_34 * inp_poly_34 = 
    L0x2001a468 * (x**0) + L0x2001a46c * (x**1) + 
    L0x2001a470 * (x**2) + L0x2001a474 * (x**3)
  && true;

ghost inp_poly_35@bit :
  inp_poly_35 * inp_poly_35 = 
    L0x2001a478 * (x**0) + L0x2001a47c * (x**1) + 
    L0x2001a480 * (x**2) + L0x2001a484 * (x**3)
  && true;

ghost inp_poly_36@bit :
  inp_poly_36 * inp_poly_36 = 
    L0x2001a488 * (x**0) + L0x2001a48c * (x**1) + 
    L0x2001a490 * (x**2) + L0x2001a494 * (x**3)
  && true;

ghost inp_poly_37@bit :
  inp_poly_37 * inp_poly_37 = 
    L0x2001a498 * (x**0) + L0x2001a49c * (x**1) + 
    L0x2001a4a0 * (x**2) + L0x2001a4a4 * (x**3)
  && true;

ghost inp_poly_38@bit :
  inp_poly_38 * inp_poly_38 = 
    L0x2001a4a8 * (x**0) + L0x2001a4ac * (x**1) + 
    L0x2001a4b0 * (x**2) + L0x2001a4b4 * (x**3)
  && true;

ghost inp_poly_39@bit :
  inp_poly_39 * inp_poly_39 = 
    L0x2001a4b8 * (x**0) + L0x2001a4bc * (x**1) + 
    L0x2001a4c0 * (x**2) + L0x2001a4c4 * (x**3)
  && true;

ghost inp_poly_40@bit :
  inp_poly_40 * inp_poly_40 = 
    L0x2001a4c8 * (x**0) + L0x2001a4cc * (x**1) + 
    L0x2001a4d0 * (x**2) + L0x2001a4d4 * (x**3)
  && true;

ghost inp_poly_41@bit :
  inp_poly_41 * inp_poly_41 = 
    L0x2001a4d8 * (x**0) + L0x2001a4dc * (x**1) + 
    L0x2001a4e0 * (x**2) + L0x2001a4e4 * (x**3)
  && true;

ghost inp_poly_42@bit :
  inp_poly_42 * inp_poly_42 = 
    L0x2001a4e8 * (x**0) + L0x2001a4ec * (x**1) + 
    L0x2001a4f0 * (x**2) + L0x2001a4f4 * (x**3)
  && true;

ghost inp_poly_43@bit :
  inp_poly_43 * inp_poly_43 = 
    L0x2001a4f8 * (x**0) + L0x2001a4fc * (x**1) + 
    L0x2001a500 * (x**2) + L0x2001a504 * (x**3)
  && true;

ghost inp_poly_44@bit :
  inp_poly_44 * inp_poly_44 = 
    L0x2001a508 * (x**0) + L0x2001a50c * (x**1) + 
    L0x2001a510 * (x**2) + L0x2001a514 * (x**3)
  && true;

ghost inp_poly_45@bit :
  inp_poly_45 * inp_poly_45 = 
    L0x2001a518 * (x**0) + L0x2001a51c * (x**1) + 
    L0x2001a520 * (x**2) + L0x2001a524 * (x**3)
  && true;

ghost inp_poly_46@bit :
  inp_poly_46 * inp_poly_46 = 
    L0x2001a528 * (x**0) + L0x2001a52c * (x**1) + 
    L0x2001a530 * (x**2) + L0x2001a534 * (x**3)
  && true;

ghost inp_poly_47@bit :
  inp_poly_47 * inp_poly_47 = 
    L0x2001a538 * (x**0) + L0x2001a53c * (x**1) + 
    L0x2001a540 * (x**2) + L0x2001a544 * (x**3)
  && true;

ghost inp_poly_48@bit :
  inp_poly_48 * inp_poly_48 = 
    L0x2001a548 * (x**0) + L0x2001a54c * (x**1) + 
    L0x2001a550 * (x**2) + L0x2001a554 * (x**3)
  && true;

ghost inp_poly_49@bit :
  inp_poly_49 * inp_poly_49 = 
    L0x2001a558 * (x**0) + L0x2001a55c * (x**1) + 
    L0x2001a560 * (x**2) + L0x2001a564 * (x**3)
  && true;

ghost inp_poly_50@bit :
  inp_poly_50 * inp_poly_50 = 
    L0x2001a568 * (x**0) + L0x2001a56c * (x**1) + 
    L0x2001a570 * (x**2) + L0x2001a574 * (x**3)
  && true;

ghost inp_poly_51@bit :
  inp_poly_51 * inp_poly_51 = 
    L0x2001a578 * (x**0) + L0x2001a57c * (x**1) + 
    L0x2001a580 * (x**2) + L0x2001a584 * (x**3)
  && true;

ghost inp_poly_52@bit :
  inp_poly_52 * inp_poly_52 = 
    L0x2001a588 * (x**0) + L0x2001a58c * (x**1) + 
    L0x2001a590 * (x**2) + L0x2001a594 * (x**3)
  && true;

ghost inp_poly_53@bit :
  inp_poly_53 * inp_poly_53 = 
    L0x2001a598 * (x**0) + L0x2001a59c * (x**1) + 
    L0x2001a5a0 * (x**2) + L0x2001a5a4 * (x**3)
  && true;

ghost inp_poly_54@bit :
  inp_poly_54 * inp_poly_54 = 
    L0x2001a5a8 * (x**0) + L0x2001a5ac * (x**1) + 
    L0x2001a5b0 * (x**2) + L0x2001a5b4 * (x**3)
  && true;

ghost inp_poly_55@bit :
  inp_poly_55 * inp_poly_55 = 
    L0x2001a5b8 * (x**0) + L0x2001a5bc * (x**1) + 
    L0x2001a5c0 * (x**2) + L0x2001a5c4 * (x**3)
  && true;

ghost inp_poly_56@bit :
  inp_poly_56 * inp_poly_56 = 
    L0x2001a5c8 * (x**0) + L0x2001a5cc * (x**1) + 
    L0x2001a5d0 * (x**2) + L0x2001a5d4 * (x**3)
  && true;

ghost inp_poly_57@bit :
  inp_poly_57 * inp_poly_57 = 
    L0x2001a5d8 * (x**0) + L0x2001a5dc * (x**1) + 
    L0x2001a5e0 * (x**2) + L0x2001a5e4 * (x**3)
  && true;

ghost inp_poly_58@bit :
  inp_poly_58 * inp_poly_58 = 
    L0x2001a5e8 * (x**0) + L0x2001a5ec * (x**1) + 
    L0x2001a5f0 * (x**2) + L0x2001a5f4 * (x**3)
  && true;

ghost inp_poly_59@bit :
  inp_poly_59 * inp_poly_59 = 
    L0x2001a5f8 * (x**0) + L0x2001a5fc * (x**1) + 
    L0x2001a600 * (x**2) + L0x2001a604 * (x**3)
  && true;

ghost inp_poly_60@bit :
  inp_poly_60 * inp_poly_60 = 
    L0x2001a608 * (x**0) + L0x2001a60c * (x**1) + 
    L0x2001a610 * (x**2) + L0x2001a614 * (x**3)
  && true;

ghost inp_poly_61@bit :
  inp_poly_61 * inp_poly_61 = 
    L0x2001a618 * (x**0) + L0x2001a61c * (x**1) + 
    L0x2001a620 * (x**2) + L0x2001a624 * (x**3)
  && true;

ghost inp_poly_62@bit :
  inp_poly_62 * inp_poly_62 = 
    L0x2001a628 * (x**0) + L0x2001a62c * (x**1) + 
    L0x2001a630 * (x**2) + L0x2001a634 * (x**3)
  && true;

ghost inp_poly_63@bit :
  inp_poly_63 * inp_poly_63 = 
    L0x2001a638 * (x**0) + L0x2001a63c * (x**1) + 
    L0x2001a640 * (x**2) + L0x2001a644 * (x**3)
  && true;

(* y's for layer 0 *)
ghost y_0_00@bit : true && true;
ghost y_0_01@bit : true && true;
ghost y_0_02@bit : true && true;
ghost y_0_03@bit : true && true;
ghost y_0_04@bit : true && true;
ghost y_0_05@bit : true && true;
ghost y_0_06@bit : true && true;
ghost y_0_07@bit : true && true;
ghost y_0_08@bit : true && true;
ghost y_0_09@bit : true && true;
ghost y_0_10@bit : true && true;
ghost y_0_11@bit : true && true;
ghost y_0_12@bit : true && true;
ghost y_0_13@bit : true && true;
ghost y_0_14@bit : true && true;
ghost y_0_15@bit : true && true;
ghost y_0_16@bit : true && true;
ghost y_0_17@bit : true && true;
ghost y_0_18@bit : true && true;
ghost y_0_19@bit : true && true;
ghost y_0_20@bit : true && true;
ghost y_0_21@bit : true && true;
ghost y_0_22@bit : true && true;
ghost y_0_23@bit : true && true;
ghost y_0_24@bit : true && true;
ghost y_0_25@bit : true && true;
ghost y_0_26@bit : true && true;
ghost y_0_27@bit : true && true;
ghost y_0_28@bit : true && true;
ghost y_0_29@bit : true && true;
ghost y_0_30@bit : true && true;
ghost y_0_31@bit : true && true;
ghost y_0_32@bit : true && true;
ghost y_0_33@bit : true && true;
ghost y_0_34@bit : true && true;
ghost y_0_35@bit : true && true;
ghost y_0_36@bit : true && true;
ghost y_0_37@bit : true && true;
ghost y_0_38@bit : true && true;
ghost y_0_39@bit : true && true;
ghost y_0_40@bit : true && true;
ghost y_0_41@bit : true && true;
ghost y_0_42@bit : true && true;
ghost y_0_43@bit : true && true;
ghost y_0_44@bit : true && true;
ghost y_0_45@bit : true && true;
ghost y_0_46@bit : true && true;
ghost y_0_47@bit : true && true;
ghost y_0_48@bit : true && true;
ghost y_0_49@bit : true && true;
ghost y_0_50@bit : true && true;
ghost y_0_51@bit : true && true;
ghost y_0_52@bit : true && true;
ghost y_0_53@bit : true && true;
ghost y_0_54@bit : true && true;
ghost y_0_55@bit : true && true;
ghost y_0_56@bit : true && true;
ghost y_0_57@bit : true && true;
ghost y_0_58@bit : true && true;
ghost y_0_59@bit : true && true;
ghost y_0_60@bit : true && true;
ghost y_0_61@bit : true && true;
ghost y_0_62@bit : true && true;
ghost y_0_63@bit : true && true;


(* vmov	s0, r0                                     #! PC = 0x8005144 *)
mov s0 r0;
(* ldr.w	r0, [sp]                                  #! EA = L0x200194f0; Value = 0x2001a248; PC = 0x8005148 *)
mov r0 L0x200194f0;
(* vldmia	r1!, {s4-s10}                            #! EA = L0x800f7a0; PC = 0x8005154 *)
mov s4 L0x800f7a0;
mov s5 L0x800f7a4;
mov s6 L0x800f7a8;
mov s7 L0x800f7ac;
mov s8 L0x800f7b0;
mov s9 L0x800f7b4;
mov s10 L0x800f7b8;
(* vmov	s1, r1                                     #! PC = 0x8005158 *)
mov s1 r1;
(* add.w	r12, r0, #1024	; 0x400                    #! PC = 0x800515c *)
adds discard r12 r0 1024@uint32;
(* vmov	s2, r12                                    #! PC = 0x8005160 *)
mov s2 r12;
(* ldr.w	r8, [r0, #64]	; 0x40                      #! EA = L0x2001a288; Value = 0x000e00ca; PC = 0x8005164 *)
mov r8 L0x2001a288;
(* ldr.w	r5, [r0, #80]	; 0x50                      #! EA = L0x2001a298; Value = 0x01a405b6; PC = 0x8005168 *)
mov r5 L0x2001a298;
(* ldr.w	r10, [r0, #96]	; 0x60                     #! EA = L0x2001a2a8; Value = 0xff97f48c; PC = 0x800516c *)
mov r10 L0x2001a2a8;
(* ldr.w	r7, [r0, #112]	; 0x70                     #! EA = L0x2001a2b8; Value = 0xffb086fa; PC = 0x8005170 *)
mov r7 L0x2001a2b8;
(* add	r8, r5                                      #! PC = 0x8005174 *)
add r8 r8 r5;
(* add	r10, r7                                     #! PC = 0x8005176 *)
add r10 r10 r7;
(* sub.w	r5, r8, r5, lsl #1                        #! PC = 0x8005178 *)
shl tmp r5 1;
sub r5 r8 tmp;
(* sub.w	r7, r10, r7, lsl #1                       #! PC = 0x800517c *)
shl tmp r7 1;
sub r7 r10 tmp;
(* add.w	r8, r8, r10                               #! PC = 0x8005180 *)
add r8 r8 r10;
(* sub.w	r10, r8, r10, lsl #1                      #! PC = 0x8005184 *)
shl tmp r10 1;
sub r10 r8 tmp;
(* vmov	r12, s8                                    #! PC = 0x8005188 *)
mov r12 s8;
(* vmov	lr, s10                                    #! PC = 0x800518c *)
mov lr s10;
(* smull	r4, r9, r5, r12                           #! PC = 0x8005190 *)
smull r9 r4 r5 r12;
(* smlal	r4, r9, r7, lr                            #! PC = 0x8005194 *)
cast r7@sint32 r7;
smull tmp_h tmp_l r7 lr;
uadds carry r4 tmp_l r4;
sadc r9 tmp_h r9 carry;
(* mul.w	r1, r4, r2                                #! PC = 0x8005198 *)
cast r4_s@sint32 r4;
mull discard r1 r4_s r2;
(* smlal	r4, r9, r1, r3                            #! PC = 0x800519c *)
cast r1@sint32 r1;
smull tmp_h tmp_l r1 r3;
uadds carry r4 tmp_l r4;
sadc r9 tmp_h r9 carry;
assert eqmod r4 0 (2**32) && true;
assume eq r4 0 && true;
(* smull	r6, r11, r5, lr                           #! PC = 0x80051a0 *)
smull r11 r6 r5 lr;
(* smlal	r6, r11, r7, r12                          #! PC = 0x80051a4 *)
cast r7@sint32 r7;
smull tmp_h tmp_l r7 r12;
uadds carry r6 tmp_l r6;
sadc r11 tmp_h r11 carry;
(* mul.w	r1, r6, r2                                #! PC = 0x80051a8 *)
cast r6_s@sint32 r6;
mull discard r1 r6_s r2;
(* smlal	r6, r11, r1, r3                           #! PC = 0x80051ac *)
cast r1@sint32 r1;
smull tmp_h tmp_l r1 r3;
uadds carry r6 tmp_l r6;
sadc r11 tmp_h r11 carry;
assert eqmod r6 0 (2**32) && true;
assume eq r6 0 && true;
(* ldr.w	r4, [r0]                                  #! EA = L0x2001a248; Value = 0xff49dbde; PC = 0x80051b0 *)
mov r4 L0x2001a248;
(* ldr.w	r5, [r0, #16]                             #! EA = L0x2001a258; Value = 0x012ac1b3; PC = 0x80051b4 *)
mov r5 L0x2001a258;
(* ldr.w	r6, [r0, #32]                             #! EA = L0x2001a268; Value = 0xff23a26e; PC = 0x80051b8 *)
mov r6 L0x2001a268;
(* ldr.w	r7, [r0, #48]	; 0x30                      #! EA = L0x2001a278; Value = 0x0061b9f6; PC = 0x80051bc *)
mov r7 L0x2001a278;
(* add	r4, r5                                      #! PC = 0x80051c0 *)
add r4 r4 r5;
(* add	r6, r7                                      #! PC = 0x80051c2 *)
add r6 r6 r7;
(* sub.w	r5, r4, r5, lsl #1                        #! PC = 0x80051c4 *)
shl tmp r5 1;
sub r5 r4 tmp;
(* sub.w	r7, r6, r7, lsl #1                        #! PC = 0x80051c8 *)
shl tmp r7 1;
sub r7 r6 tmp;
(* vmov	r1, s6                                     #! PC = 0x80051cc *)
mov r1 s6;
(* smull	r12, r7, r7, r1                           #! PC = 0x80051d0 *)
smull r7 r12 r7 r1;
(* mul.w	lr, r12, r2                               #! PC = 0x80051d4 *)
cast r12_s@sint32 r12;
mull discard lr r12_s r2;
(* smlal	r12, r7, lr, r3                           #! PC = 0x80051d8 *)
cast lr@sint32 lr;
smull tmp_h tmp_l lr r3;
uadds carry r12 tmp_l r12;
sadc r7 tmp_h r7 carry;
assert eqmod r12 0 (2**32) && true;
assume eq r12 0 && true;
(* add	r4, r6                                      #! PC = 0x80051dc *)
add r4 r4 r6;
(* add	r5, r7                                      #! PC = 0x80051de *)
add r5 r5 r7;
(* sub.w	r6, r4, r6, lsl #1                        #! PC = 0x80051e0 *)
shl tmp r6 1;
sub r6 r4 tmp;
(* sub.w	r7, r5, r7, lsl #1                        #! PC = 0x80051e4 *)
shl tmp r7 1;
sub r7 r5 tmp;
(* smull	r12, r10, r10, r1                         #! PC = 0x80051e8 *)
smull r10 r12 r10 r1;
(* mul.w	lr, r12, r2                               #! PC = 0x80051ec *)
cast r12_s@sint32 r12;
mull discard lr r12_s r2;
(* smlal	r12, r10, lr, r3                          #! PC = 0x80051f0 *)
cast lr@sint32 lr;
smull tmp_h tmp_l lr r3;
uadds carry r12 tmp_l r12;
sadc r10 tmp_h r10 carry;
assert eqmod r12 0 (2**32) && true;
assume eq r12 0 && true;
(* add	r4, r8                                      #! PC = 0x80051f4 *)
add r4 r4 r8;
(* add	r5, r9                                      #! PC = 0x80051f6 *)
add r5 r5 r9;
(* add	r6, r10                                     #! PC = 0x80051f8 *)
add r6 r6 r10;
(* add	r7, r11                                     #! PC = 0x80051fa *)
add r7 r7 r11;
(* sub.w	r8, r4, r8, lsl #1                        #! PC = 0x80051fc *)
shl tmp r8 1;
sub r8 r4 tmp;
(* sub.w	r9, r5, r9, lsl #1                        #! PC = 0x8005200 *)
shl tmp r9 1;
sub r9 r5 tmp;
(* sub.w	r10, r6, r10, lsl #1                      #! PC = 0x8005204 *)
shl tmp r10 1;
sub r10 r6 tmp;
(* sub.w	r11, r7, r11, lsl #1                      #! PC = 0x8005208 *)
shl tmp r11 1;
sub r11 r7 tmp;
(* str.w	r8, [r0, #64]	; 0x40                      #! EA = L0x2001a288; PC = 0x800520c *)
mov L0x2001a288 r8;
(* str.w	r9, [r0, #80]	; 0x50                      #! EA = L0x2001a298; PC = 0x8005210 *)
mov L0x2001a298 r9;
(* str.w	r10, [r0, #96]	; 0x60                     #! EA = L0x2001a2a8; PC = 0x8005214 *)
mov L0x2001a2a8 r10;
(* str.w	r11, [r0, #112]	; 0x70                    #! EA = L0x2001a2b8; PC = 0x8005218 *)
mov L0x2001a2b8 r11;
(* str.w	r5, [r0, #16]                             #! EA = L0x2001a258; PC = 0x800521c *)
mov L0x2001a258 r5;
(* str.w	r6, [r0, #32]                             #! EA = L0x2001a268; PC = 0x8005220 *)
mov L0x2001a268 r6;
(* str.w	r7, [r0, #48]	; 0x30                      #! EA = L0x2001a278; PC = 0x8005224 *)
mov L0x2001a278 r7;
(* str.w	r4, [r0], #4                              #! EA = L0x2001a248; PC = 0x8005228 *)
mov L0x2001a248 r4;
(* ldr.w	r8, [r0, #64]	; 0x40                      #! EA = L0x2001a28c; Value = 0x004b7b98; PC = 0x800522c *)
mov r8 L0x2001a28c;
(* ldr.w	r5, [r0, #80]	; 0x50                      #! EA = L0x2001a29c; Value = 0xfefa177d; PC = 0x8005230 *)
mov r5 L0x2001a29c;
(* ldr.w	r10, [r0, #96]	; 0x60                     #! EA = L0x2001a2ac; Value = 0xffcd4645; PC = 0x8005234 *)
mov r10 L0x2001a2ac;
(* ldr.w	r7, [r0, #112]	; 0x70                     #! EA = L0x2001a2bc; Value = 0x005e7ea5; PC = 0x8005238 *)
mov r7 L0x2001a2bc;
(* add	r8, r5                                      #! PC = 0x800523c *)
add r8 r8 r5;
(* add	r10, r7                                     #! PC = 0x800523e *)
add r10 r10 r7;
(* sub.w	r5, r8, r5, lsl #1                        #! PC = 0x8005240 *)
shl tmp r5 1;
sub r5 r8 tmp;
(* sub.w	r7, r10, r7, lsl #1                       #! PC = 0x8005244 *)
shl tmp r7 1;
sub r7 r10 tmp;
(* add.w	r8, r8, r10                               #! PC = 0x8005248 *)
add r8 r8 r10;
(* sub.w	r10, r8, r10, lsl #1                      #! PC = 0x800524c *)
shl tmp r10 1;
sub r10 r8 tmp;
(* vmov	r12, s8                                    #! PC = 0x8005250 *)
mov r12 s8;
(* vmov	lr, s10                                    #! PC = 0x8005254 *)
mov lr s10;
(* smull	r4, r9, r5, r12                           #! PC = 0x8005258 *)
smull r9 r4 r5 r12;
(* smlal	r4, r9, r7, lr                            #! PC = 0x800525c *)
cast r7@sint32 r7;
smull tmp_h tmp_l r7 lr;
uadds carry r4 tmp_l r4;
sadc r9 tmp_h r9 carry;
(* mul.w	r1, r4, r2                                #! PC = 0x8005260 *)
cast r4_s@sint32 r4;
mull discard r1 r4_s r2;
(* smlal	r4, r9, r1, r3                            #! PC = 0x8005264 *)
cast r1@sint32 r1;
smull tmp_h tmp_l r1 r3;
uadds carry r4 tmp_l r4;
sadc r9 tmp_h r9 carry;
assert eqmod r4 0 (2**32) && true;
assume eq r4 0 && true;
(* smull	r6, r11, r5, lr                           #! PC = 0x8005268 *)
smull r11 r6 r5 lr;
(* smlal	r6, r11, r7, r12                          #! PC = 0x800526c *)
cast r7@sint32 r7;
smull tmp_h tmp_l r7 r12;
uadds carry r6 tmp_l r6;
sadc r11 tmp_h r11 carry;
(* mul.w	r1, r6, r2                                #! PC = 0x8005270 *)
cast r6_s@sint32 r6;
mull discard r1 r6_s r2;
(* smlal	r6, r11, r1, r3                           #! PC = 0x8005274 *)
cast r1@sint32 r1;
smull tmp_h tmp_l r1 r3;
uadds carry r6 tmp_l r6;
sadc r11 tmp_h r11 carry;
assert eqmod r6 0 (2**32) && true;
assume eq r6 0 && true;
(* ldr.w	r4, [r0]                                  #! EA = L0x2001a24c; Value = 0xff2e35c1; PC = 0x8005278 *)
mov r4 L0x2001a24c;
(* ldr.w	r5, [r0, #16]                             #! EA = L0x2001a25c; Value = 0x00945ae3; PC = 0x800527c *)
mov r5 L0x2001a25c;
(* ldr.w	r6, [r0, #32]                             #! EA = L0x2001a26c; Value = 0xff109b8e; PC = 0x8005280 *)
mov r6 L0x2001a26c;
(* ldr.w	r7, [r0, #48]	; 0x30                      #! EA = L0x2001a27c; Value = 0xff381f65; PC = 0x8005284 *)
mov r7 L0x2001a27c;
(* add	r4, r5                                      #! PC = 0x8005288 *)
add r4 r4 r5;
(* add	r6, r7                                      #! PC = 0x800528a *)
add r6 r6 r7;
(* sub.w	r5, r4, r5, lsl #1                        #! PC = 0x800528c *)
shl tmp r5 1;
sub r5 r4 tmp;
(* sub.w	r7, r6, r7, lsl #1                        #! PC = 0x8005290 *)
shl tmp r7 1;
sub r7 r6 tmp;
(* vmov	r1, s6                                     #! PC = 0x8005294 *)
mov r1 s6;
(* smull	r12, r7, r7, r1                           #! PC = 0x8005298 *)
smull r7 r12 r7 r1;
(* mul.w	lr, r12, r2                               #! PC = 0x800529c *)
cast r12_s@sint32 r12;
mull discard lr r12_s r2;
(* smlal	r12, r7, lr, r3                           #! PC = 0x80052a0 *)
cast lr@sint32 lr;
smull tmp_h tmp_l lr r3;
uadds carry r12 tmp_l r12;
sadc r7 tmp_h r7 carry;
assert eqmod r12 0 (2**32) && true;
assume eq r12 0 && true;
(* add	r4, r6                                      #! PC = 0x80052a4 *)
add r4 r4 r6;
(* add	r5, r7                                      #! PC = 0x80052a6 *)
add r5 r5 r7;
(* sub.w	r6, r4, r6, lsl #1                        #! PC = 0x80052a8 *)
shl tmp r6 1;
sub r6 r4 tmp;
(* sub.w	r7, r5, r7, lsl #1                        #! PC = 0x80052ac *)
shl tmp r7 1;
sub r7 r5 tmp;
(* smull	r12, r10, r10, r1                         #! PC = 0x80052b0 *)
smull r10 r12 r10 r1;
(* mul.w	lr, r12, r2                               #! PC = 0x80052b4 *)
cast r12_s@sint32 r12;
mull discard lr r12_s r2;
(* smlal	r12, r10, lr, r3                          #! PC = 0x80052b8 *)
cast lr@sint32 lr;
smull tmp_h tmp_l lr r3;
uadds carry r12 tmp_l r12;
sadc r10 tmp_h r10 carry;
assert eqmod r12 0 (2**32) && true;
assume eq r12 0 && true;
(* add	r4, r8                                      #! PC = 0x80052bc *)
add r4 r4 r8;
(* add	r5, r9                                      #! PC = 0x80052be *)
add r5 r5 r9;
(* add	r6, r10                                     #! PC = 0x80052c0 *)
add r6 r6 r10;
(* add	r7, r11                                     #! PC = 0x80052c2 *)
add r7 r7 r11;
(* sub.w	r8, r4, r8, lsl #1                        #! PC = 0x80052c4 *)
shl tmp r8 1;
sub r8 r4 tmp;
(* sub.w	r9, r5, r9, lsl #1                        #! PC = 0x80052c8 *)
shl tmp r9 1;
sub r9 r5 tmp;
(* sub.w	r10, r6, r10, lsl #1                      #! PC = 0x80052cc *)
shl tmp r10 1;
sub r10 r6 tmp;
(* sub.w	r11, r7, r11, lsl #1                      #! PC = 0x80052d0 *)
shl tmp r11 1;
sub r11 r7 tmp;
(* str.w	r8, [r0, #64]	; 0x40                      #! EA = L0x2001a28c; PC = 0x80052d4 *)
mov L0x2001a28c r8;
(* str.w	r9, [r0, #80]	; 0x50                      #! EA = L0x2001a29c; PC = 0x80052d8 *)
mov L0x2001a29c r9;
(* str.w	r10, [r0, #96]	; 0x60                     #! EA = L0x2001a2ac; PC = 0x80052dc *)
mov L0x2001a2ac r10;
(* str.w	r11, [r0, #112]	; 0x70                    #! EA = L0x2001a2bc; PC = 0x80052e0 *)
mov L0x2001a2bc r11;
(* str.w	r5, [r0, #16]                             #! EA = L0x2001a25c; PC = 0x80052e4 *)
mov L0x2001a25c r5;
(* str.w	r6, [r0, #32]                             #! EA = L0x2001a26c; PC = 0x80052e8 *)
mov L0x2001a26c r6;
(* str.w	r7, [r0, #48]	; 0x30                      #! EA = L0x2001a27c; PC = 0x80052ec *)
mov L0x2001a27c r7;
(* str.w	r4, [r0], #4                              #! EA = L0x2001a24c; PC = 0x80052f0 *)
mov L0x2001a24c r4;
(* ldr.w	r8, [r0, #64]	; 0x40                      #! EA = L0x2001a290; Value = 0x00e977d0; PC = 0x80052f4 *)
mov r8 L0x2001a290;
(* ldr.w	r5, [r0, #80]	; 0x50                      #! EA = L0x2001a2a0; Value = 0xff8fd872; PC = 0x80052f8 *)
mov r5 L0x2001a2a0;
(* ldr.w	r10, [r0, #96]	; 0x60                     #! EA = L0x2001a2b0; Value = 0xff2087c1; PC = 0x80052fc *)
mov r10 L0x2001a2b0;
(* ldr.w	r7, [r0, #112]	; 0x70                     #! EA = L0x2001a2c0; Value = 0x00b87224; PC = 0x8005300 *)
mov r7 L0x2001a2c0;
(* add	r8, r5                                      #! PC = 0x8005304 *)
add r8 r8 r5;
(* add	r10, r7                                     #! PC = 0x8005306 *)
add r10 r10 r7;
(* sub.w	r5, r8, r5, lsl #1                        #! PC = 0x8005308 *)
shl tmp r5 1;
sub r5 r8 tmp;
(* sub.w	r7, r10, r7, lsl #1                       #! PC = 0x800530c *)
shl tmp r7 1;
sub r7 r10 tmp;
(* add.w	r8, r8, r10                               #! PC = 0x8005310 *)
add r8 r8 r10;
(* sub.w	r10, r8, r10, lsl #1                      #! PC = 0x8005314 *)
shl tmp r10 1;
sub r10 r8 tmp;
(* vmov	r12, s8                                    #! PC = 0x8005318 *)
mov r12 s8;
(* vmov	lr, s10                                    #! PC = 0x800531c *)
mov lr s10;
(* smull	r4, r9, r5, r12                           #! PC = 0x8005320 *)
smull r9 r4 r5 r12;
(* smlal	r4, r9, r7, lr                            #! PC = 0x8005324 *)
cast r7@sint32 r7;
smull tmp_h tmp_l r7 lr;
uadds carry r4 tmp_l r4;
sadc r9 tmp_h r9 carry;
(* mul.w	r1, r4, r2                                #! PC = 0x8005328 *)
cast r4_s@sint32 r4;
mull discard r1 r4_s r2;
(* smlal	r4, r9, r1, r3                            #! PC = 0x800532c *)
cast r1@sint32 r1;
smull tmp_h tmp_l r1 r3;
uadds carry r4 tmp_l r4;
sadc r9 tmp_h r9 carry;
assert eqmod r4 0 (2**32) && true;
assume eq r4 0 && true;
(* smull	r6, r11, r5, lr                           #! PC = 0x8005330 *)
smull r11 r6 r5 lr;
(* smlal	r6, r11, r7, r12                          #! PC = 0x8005334 *)
cast r7@sint32 r7;
smull tmp_h tmp_l r7 r12;
uadds carry r6 tmp_l r6;
sadc r11 tmp_h r11 carry;
(* mul.w	r1, r6, r2                                #! PC = 0x8005338 *)
cast r6_s@sint32 r6;
mull discard r1 r6_s r2;
(* smlal	r6, r11, r1, r3                           #! PC = 0x800533c *)
cast r1@sint32 r1;
smull tmp_h tmp_l r1 r3;
uadds carry r6 tmp_l r6;
sadc r11 tmp_h r11 carry;
assert eqmod r6 0 (2**32) && true;
assume eq r6 0 && true;
(* ldr.w	r4, [r0]                                  #! EA = L0x2001a250; Value = 0x0079b806; PC = 0x8005340 *)
mov r4 L0x2001a250;
(* ldr.w	r5, [r0, #16]                             #! EA = L0x2001a260; Value = 0xffaa443f; PC = 0x8005344 *)
mov r5 L0x2001a260;
(* ldr.w	r6, [r0, #32]                             #! EA = L0x2001a270; Value = 0x00dfe75d; PC = 0x8005348 *)
mov r6 L0x2001a270;
(* ldr.w	r7, [r0, #48]	; 0x30                      #! EA = L0x2001a280; Value = 0xfeb18efa; PC = 0x800534c *)
mov r7 L0x2001a280;
(* add	r4, r5                                      #! PC = 0x8005350 *)
add r4 r4 r5;
(* add	r6, r7                                      #! PC = 0x8005352 *)
add r6 r6 r7;
(* sub.w	r5, r4, r5, lsl #1                        #! PC = 0x8005354 *)
shl tmp r5 1;
sub r5 r4 tmp;
(* sub.w	r7, r6, r7, lsl #1                        #! PC = 0x8005358 *)
shl tmp r7 1;
sub r7 r6 tmp;
(* vmov	r1, s6                                     #! PC = 0x800535c *)
mov r1 s6;
(* smull	r12, r7, r7, r1                           #! PC = 0x8005360 *)
smull r7 r12 r7 r1;
(* mul.w	lr, r12, r2                               #! PC = 0x8005364 *)
cast r12_s@sint32 r12;
mull discard lr r12_s r2;
(* smlal	r12, r7, lr, r3                           #! PC = 0x8005368 *)
cast lr@sint32 lr;
smull tmp_h tmp_l lr r3;
uadds carry r12 tmp_l r12;
sadc r7 tmp_h r7 carry;
assert eqmod r12 0 (2**32) && true;
assume eq r12 0 && true;
(* add	r4, r6                                      #! PC = 0x800536c *)
add r4 r4 r6;
(* add	r5, r7                                      #! PC = 0x800536e *)
add r5 r5 r7;
(* sub.w	r6, r4, r6, lsl #1                        #! PC = 0x8005370 *)
shl tmp r6 1;
sub r6 r4 tmp;
(* sub.w	r7, r5, r7, lsl #1                        #! PC = 0x8005374 *)
shl tmp r7 1;
sub r7 r5 tmp;
(* smull	r12, r10, r10, r1                         #! PC = 0x8005378 *)
smull r10 r12 r10 r1;
(* mul.w	lr, r12, r2                               #! PC = 0x800537c *)
cast r12_s@sint32 r12;
mull discard lr r12_s r2;
(* smlal	r12, r10, lr, r3                          #! PC = 0x8005380 *)
cast lr@sint32 lr;
smull tmp_h tmp_l lr r3;
uadds carry r12 tmp_l r12;
sadc r10 tmp_h r10 carry;
assert eqmod r12 0 (2**32) && true;
assume eq r12 0 && true;
(* add	r4, r8                                      #! PC = 0x8005384 *)
add r4 r4 r8;
(* add	r5, r9                                      #! PC = 0x8005386 *)
add r5 r5 r9;
(* add	r6, r10                                     #! PC = 0x8005388 *)
add r6 r6 r10;
(* add	r7, r11                                     #! PC = 0x800538a *)
add r7 r7 r11;
(* sub.w	r8, r4, r8, lsl #1                        #! PC = 0x800538c *)
shl tmp r8 1;
sub r8 r4 tmp;
(* sub.w	r9, r5, r9, lsl #1                        #! PC = 0x8005390 *)
shl tmp r9 1;
sub r9 r5 tmp;
(* sub.w	r10, r6, r10, lsl #1                      #! PC = 0x8005394 *)
shl tmp r10 1;
sub r10 r6 tmp;
(* sub.w	r11, r7, r11, lsl #1                      #! PC = 0x8005398 *)
shl tmp r11 1;
sub r11 r7 tmp;
(* str.w	r8, [r0, #64]	; 0x40                      #! EA = L0x2001a290; PC = 0x800539c *)
mov L0x2001a290 r8;
(* str.w	r9, [r0, #80]	; 0x50                      #! EA = L0x2001a2a0; PC = 0x80053a0 *)
mov L0x2001a2a0 r9;
(* str.w	r10, [r0, #96]	; 0x60                     #! EA = L0x2001a2b0; PC = 0x80053a4 *)
mov L0x2001a2b0 r10;
(* str.w	r11, [r0, #112]	; 0x70                    #! EA = L0x2001a2c0; PC = 0x80053a8 *)
mov L0x2001a2c0 r11;
(* str.w	r5, [r0, #16]                             #! EA = L0x2001a260; PC = 0x80053ac *)
mov L0x2001a260 r5;
(* str.w	r6, [r0, #32]                             #! EA = L0x2001a270; PC = 0x80053b0 *)
mov L0x2001a270 r6;
(* str.w	r7, [r0, #48]	; 0x30                      #! EA = L0x2001a280; PC = 0x80053b4 *)
mov L0x2001a280 r7;
(* str.w	r4, [r0], #4                              #! EA = L0x2001a250; PC = 0x80053b8 *)
mov L0x2001a250 r4;
(* ldr.w	r8, [r0, #64]	; 0x40                      #! EA = L0x2001a294; Value = 0xffa9eeba; PC = 0x80053bc *)
mov r8 L0x2001a294;
(* ldr.w	r5, [r0, #80]	; 0x50                      #! EA = L0x2001a2a4; Value = 0xffededd6; PC = 0x80053c0 *)
mov r5 L0x2001a2a4;
(* ldr.w	r10, [r0, #96]	; 0x60                     #! EA = L0x2001a2b4; Value = 0x003be758; PC = 0x80053c4 *)
mov r10 L0x2001a2b4;
(* ldr.w	r7, [r0, #112]	; 0x70                     #! EA = L0x2001a2c4; Value = 0xffcb39a7; PC = 0x80053c8 *)
mov r7 L0x2001a2c4;
(* add	r8, r5                                      #! PC = 0x80053cc *)
add r8 r8 r5;
(* add	r10, r7                                     #! PC = 0x80053ce *)
add r10 r10 r7;
(* sub.w	r5, r8, r5, lsl #1                        #! PC = 0x80053d0 *)
shl tmp r5 1;
sub r5 r8 tmp;
(* sub.w	r7, r10, r7, lsl #1                       #! PC = 0x80053d4 *)
shl tmp r7 1;
sub r7 r10 tmp;
(* add.w	r8, r8, r10                               #! PC = 0x80053d8 *)
add r8 r8 r10;
(* sub.w	r10, r8, r10, lsl #1                      #! PC = 0x80053dc *)
shl tmp r10 1;
sub r10 r8 tmp;
(* vmov	r12, s8                                    #! PC = 0x80053e0 *)
mov r12 s8;
(* vmov	lr, s10                                    #! PC = 0x80053e4 *)
mov lr s10;
(* smull	r4, r9, r5, r12                           #! PC = 0x80053e8 *)
smull r9 r4 r5 r12;
(* smlal	r4, r9, r7, lr                            #! PC = 0x80053ec *)
cast r7@sint32 r7;
smull tmp_h tmp_l r7 lr;
uadds carry r4 tmp_l r4;
sadc r9 tmp_h r9 carry;
(* mul.w	r1, r4, r2                                #! PC = 0x80053f0 *)
cast r4_s@sint32 r4;
mull discard r1 r4_s r2;
(* smlal	r4, r9, r1, r3                            #! PC = 0x80053f4 *)
cast r1@sint32 r1;
smull tmp_h tmp_l r1 r3;
uadds carry r4 tmp_l r4;
sadc r9 tmp_h r9 carry;
assert eqmod r4 0 (2**32) && true;
assume eq r4 0 && true;
(* smull	r6, r11, r5, lr                           #! PC = 0x80053f8 *)
smull r11 r6 r5 lr;
(* smlal	r6, r11, r7, r12                          #! PC = 0x80053fc *)
cast r7@sint32 r7;
smull tmp_h tmp_l r7 r12;
uadds carry r6 tmp_l r6;
sadc r11 tmp_h r11 carry;
(* mul.w	r1, r6, r2                                #! PC = 0x8005400 *)
cast r6_s@sint32 r6;
mull discard r1 r6_s r2;
(* smlal	r6, r11, r1, r3                           #! PC = 0x8005404 *)
cast r1@sint32 r1;
smull tmp_h tmp_l r1 r3;
uadds carry r6 tmp_l r6;
sadc r11 tmp_h r11 carry;
assert eqmod r6 0 (2**32) && true;
assume eq r6 0 && true;
(* ldr.w	r4, [r0]                                  #! EA = L0x2001a254; Value = 0xff6ab7a7; PC = 0x8005408 *)
mov r4 L0x2001a254;
(* ldr.w	r5, [r0, #16]                             #! EA = L0x2001a264; Value = 0xff124520; PC = 0x800540c *)
mov r5 L0x2001a264;
(* ldr.w	r6, [r0, #32]                             #! EA = L0x2001a274; Value = 0x0063da3d; PC = 0x8005410 *)
mov r6 L0x2001a274;
(* ldr.w	r7, [r0, #48]	; 0x30                      #! EA = L0x2001a284; Value = 0xffa9b8de; PC = 0x8005414 *)
mov r7 L0x2001a284;
(* add	r4, r5                                      #! PC = 0x8005418 *)
add r4 r4 r5;
(* add	r6, r7                                      #! PC = 0x800541a *)
add r6 r6 r7;
(* sub.w	r5, r4, r5, lsl #1                        #! PC = 0x800541c *)
shl tmp r5 1;
sub r5 r4 tmp;
(* sub.w	r7, r6, r7, lsl #1                        #! PC = 0x8005420 *)
shl tmp r7 1;
sub r7 r6 tmp;
(* vmov	r1, s6                                     #! PC = 0x8005424 *)
mov r1 s6;
(* smull	r12, r7, r7, r1                           #! PC = 0x8005428 *)
smull r7 r12 r7 r1;
(* mul.w	lr, r12, r2                               #! PC = 0x800542c *)
cast r12_s@sint32 r12;
mull discard lr r12_s r2;
(* smlal	r12, r7, lr, r3                           #! PC = 0x8005430 *)
cast lr@sint32 lr;
smull tmp_h tmp_l lr r3;
uadds carry r12 tmp_l r12;
sadc r7 tmp_h r7 carry;
assert eqmod r12 0 (2**32) && true;
assume eq r12 0 && true;
(* add	r4, r6                                      #! PC = 0x8005434 *)
add r4 r4 r6;
(* add	r5, r7                                      #! PC = 0x8005436 *)
add r5 r5 r7;
(* sub.w	r6, r4, r6, lsl #1                        #! PC = 0x8005438 *)
shl tmp r6 1;
sub r6 r4 tmp;
(* sub.w	r7, r5, r7, lsl #1                        #! PC = 0x800543c *)
shl tmp r7 1;
sub r7 r5 tmp;
(* smull	r12, r10, r10, r1                         #! PC = 0x8005440 *)
smull r10 r12 r10 r1;
(* mul.w	lr, r12, r2                               #! PC = 0x8005444 *)
cast r12_s@sint32 r12;
mull discard lr r12_s r2;
(* smlal	r12, r10, lr, r3                          #! PC = 0x8005448 *)
cast lr@sint32 lr;
smull tmp_h tmp_l lr r3;
uadds carry r12 tmp_l r12;
sadc r10 tmp_h r10 carry;
assert eqmod r12 0 (2**32) && true;
assume eq r12 0 && true;
(* add	r4, r8                                      #! PC = 0x800544c *)
add r4 r4 r8;
(* add	r5, r9                                      #! PC = 0x800544e *)
add r5 r5 r9;
(* add	r6, r10                                     #! PC = 0x8005450 *)
add r6 r6 r10;
(* add	r7, r11                                     #! PC = 0x8005452 *)
add r7 r7 r11;
(* sub.w	r8, r4, r8, lsl #1                        #! PC = 0x8005454 *)
shl tmp r8 1;
sub r8 r4 tmp;
(* sub.w	r9, r5, r9, lsl #1                        #! PC = 0x8005458 *)
shl tmp r9 1;
sub r9 r5 tmp;
(* sub.w	r10, r6, r10, lsl #1                      #! PC = 0x800545c *)
shl tmp r10 1;
sub r10 r6 tmp;
(* sub.w	r11, r7, r11, lsl #1                      #! PC = 0x8005460 *)
shl tmp r11 1;
sub r11 r7 tmp;
(* str.w	r8, [r0, #64]	; 0x40                      #! EA = L0x2001a294; PC = 0x8005464 *)
mov L0x2001a294 r8;
(* str.w	r9, [r0, #80]	; 0x50                      #! EA = L0x2001a2a4; PC = 0x8005468 *)
mov L0x2001a2a4 r9;
(* str.w	r10, [r0, #96]	; 0x60                     #! EA = L0x2001a2b4; PC = 0x800546c *)
mov L0x2001a2b4 r10;
(* str.w	r11, [r0, #112]	; 0x70                    #! EA = L0x2001a2c4; PC = 0x8005470 *)
mov L0x2001a2c4 r11;
(* str.w	r5, [r0, #16]                             #! EA = L0x2001a264; PC = 0x8005474 *)
mov L0x2001a264 r5;
(* str.w	r6, [r0, #32]                             #! EA = L0x2001a274; PC = 0x8005478 *)
mov L0x2001a274 r6;
(* str.w	r7, [r0, #48]	; 0x30                      #! EA = L0x2001a284; PC = 0x800547c *)
mov L0x2001a284 r7;
(* str.w	r4, [r0], #4                              #! EA = L0x2001a254; PC = 0x8005480 *)
mov L0x2001a254 r4;
(* add.w	r0, r0, #112	; 0x70                       #! PC = 0x8005484 *)
adds discard r0 r0 112@uint32;
(* vmov	r12, s2                                    #! PC = 0x8005488 *)
mov r12 s2;
(* ldr.w	r8, [r0, #64]	; 0x40                      #! EA = L0x2001a308; Value = 0xfecfc0b1; PC = 0x8005164 *)
mov r8 L0x2001a308;
(* ldr.w	r5, [r0, #80]	; 0x50                      #! EA = L0x2001a318; Value = 0x01c4bd54; PC = 0x8005168 *)
mov r5 L0x2001a318;
(* ldr.w	r10, [r0, #96]	; 0x60                     #! EA = L0x2001a328; Value = 0xff74e4d9; PC = 0x800516c *)
mov r10 L0x2001a328;
(* ldr.w	r7, [r0, #112]	; 0x70                     #! EA = L0x2001a338; Value = 0xff9e0b25; PC = 0x8005170 *)
mov r7 L0x2001a338;
(* add	r8, r5                                      #! PC = 0x8005174 *)
add r8 r8 r5;
(* add	r10, r7                                     #! PC = 0x8005176 *)
add r10 r10 r7;
(* sub.w	r5, r8, r5, lsl #1                        #! PC = 0x8005178 *)
shl tmp r5 1;
sub r5 r8 tmp;
(* sub.w	r7, r10, r7, lsl #1                       #! PC = 0x800517c *)
shl tmp r7 1;
sub r7 r10 tmp;
(* add.w	r8, r8, r10                               #! PC = 0x8005180 *)
add r8 r8 r10;
(* sub.w	r10, r8, r10, lsl #1                      #! PC = 0x8005184 *)
shl tmp r10 1;
sub r10 r8 tmp;
(* vmov	r12, s8                                    #! PC = 0x8005188 *)
mov r12 s8;
(* vmov	lr, s10                                    #! PC = 0x800518c *)
mov lr s10;
(* smull	r4, r9, r5, r12                           #! PC = 0x8005190 *)
smull r9 r4 r5 r12;
(* smlal	r4, r9, r7, lr                            #! PC = 0x8005194 *)
cast r7@sint32 r7;
smull tmp_h tmp_l r7 lr;
uadds carry r4 tmp_l r4;
sadc r9 tmp_h r9 carry;
(* mul.w	r1, r4, r2                                #! PC = 0x8005198 *)
cast r4_s@sint32 r4;
mull discard r1 r4_s r2;
(* smlal	r4, r9, r1, r3                            #! PC = 0x800519c *)
cast r1@sint32 r1;
smull tmp_h tmp_l r1 r3;
uadds carry r4 tmp_l r4;
sadc r9 tmp_h r9 carry;
assert eqmod r4 0 (2**32) && true;
assume eq r4 0 && true;
(* smull	r6, r11, r5, lr                           #! PC = 0x80051a0 *)
smull r11 r6 r5 lr;
(* smlal	r6, r11, r7, r12                          #! PC = 0x80051a4 *)
cast r7@sint32 r7;
smull tmp_h tmp_l r7 r12;
uadds carry r6 tmp_l r6;
sadc r11 tmp_h r11 carry;
(* mul.w	r1, r6, r2                                #! PC = 0x80051a8 *)
cast r6_s@sint32 r6;
mull discard r1 r6_s r2;
(* smlal	r6, r11, r1, r3                           #! PC = 0x80051ac *)
cast r1@sint32 r1;
smull tmp_h tmp_l r1 r3;
uadds carry r6 tmp_l r6;
sadc r11 tmp_h r11 carry;
assert eqmod r6 0 (2**32) && true;
assume eq r6 0 && true;
(* ldr.w	r4, [r0]                                  #! EA = L0x2001a2c8; Value = 0x00fad3f6; PC = 0x80051b0 *)
mov r4 L0x2001a2c8;
(* ldr.w	r5, [r0, #16]                             #! EA = L0x2001a2d8; Value = 0xffaaba76; PC = 0x80051b4 *)
mov r5 L0x2001a2d8;
(* ldr.w	r6, [r0, #32]                             #! EA = L0x2001a2e8; Value = 0xff280530; PC = 0x80051b8 *)
mov r6 L0x2001a2e8;
(* ldr.w	r7, [r0, #48]	; 0x30                      #! EA = L0x2001a2f8; Value = 0xfee44d6e; PC = 0x80051bc *)
mov r7 L0x2001a2f8;
(* add	r4, r5                                      #! PC = 0x80051c0 *)
add r4 r4 r5;
(* add	r6, r7                                      #! PC = 0x80051c2 *)
add r6 r6 r7;
(* sub.w	r5, r4, r5, lsl #1                        #! PC = 0x80051c4 *)
shl tmp r5 1;
sub r5 r4 tmp;
(* sub.w	r7, r6, r7, lsl #1                        #! PC = 0x80051c8 *)
shl tmp r7 1;
sub r7 r6 tmp;
(* vmov	r1, s6                                     #! PC = 0x80051cc *)
mov r1 s6;
(* smull	r12, r7, r7, r1                           #! PC = 0x80051d0 *)
smull r7 r12 r7 r1;
(* mul.w	lr, r12, r2                               #! PC = 0x80051d4 *)
cast r12_s@sint32 r12;
mull discard lr r12_s r2;
(* smlal	r12, r7, lr, r3                           #! PC = 0x80051d8 *)
cast lr@sint32 lr;
smull tmp_h tmp_l lr r3;
uadds carry r12 tmp_l r12;
sadc r7 tmp_h r7 carry;
assert eqmod r12 0 (2**32) && true;
assume eq r12 0 && true;
(* add	r4, r6                                      #! PC = 0x80051dc *)
add r4 r4 r6;
(* add	r5, r7                                      #! PC = 0x80051de *)
add r5 r5 r7;
(* sub.w	r6, r4, r6, lsl #1                        #! PC = 0x80051e0 *)
shl tmp r6 1;
sub r6 r4 tmp;
(* sub.w	r7, r5, r7, lsl #1                        #! PC = 0x80051e4 *)
shl tmp r7 1;
sub r7 r5 tmp;
(* smull	r12, r10, r10, r1                         #! PC = 0x80051e8 *)
smull r10 r12 r10 r1;
(* mul.w	lr, r12, r2                               #! PC = 0x80051ec *)
cast r12_s@sint32 r12;
mull discard lr r12_s r2;
(* smlal	r12, r10, lr, r3                          #! PC = 0x80051f0 *)
cast lr@sint32 lr;
smull tmp_h tmp_l lr r3;
uadds carry r12 tmp_l r12;
sadc r10 tmp_h r10 carry;
assert eqmod r12 0 (2**32) && true;
assume eq r12 0 && true;
(* add	r4, r8                                      #! PC = 0x80051f4 *)
add r4 r4 r8;
(* add	r5, r9                                      #! PC = 0x80051f6 *)
add r5 r5 r9;
(* add	r6, r10                                     #! PC = 0x80051f8 *)
add r6 r6 r10;
(* add	r7, r11                                     #! PC = 0x80051fa *)
add r7 r7 r11;
(* sub.w	r8, r4, r8, lsl #1                        #! PC = 0x80051fc *)
shl tmp r8 1;
sub r8 r4 tmp;
(* sub.w	r9, r5, r9, lsl #1                        #! PC = 0x8005200 *)
shl tmp r9 1;
sub r9 r5 tmp;
(* sub.w	r10, r6, r10, lsl #1                      #! PC = 0x8005204 *)
shl tmp r10 1;
sub r10 r6 tmp;
(* sub.w	r11, r7, r11, lsl #1                      #! PC = 0x8005208 *)
shl tmp r11 1;
sub r11 r7 tmp;
(* str.w	r8, [r0, #64]	; 0x40                      #! EA = L0x2001a308; PC = 0x800520c *)
mov L0x2001a308 r8;
(* str.w	r9, [r0, #80]	; 0x50                      #! EA = L0x2001a318; PC = 0x8005210 *)
mov L0x2001a318 r9;
(* str.w	r10, [r0, #96]	; 0x60                     #! EA = L0x2001a328; PC = 0x8005214 *)
mov L0x2001a328 r10;
(* str.w	r11, [r0, #112]	; 0x70                    #! EA = L0x2001a338; PC = 0x8005218 *)
mov L0x2001a338 r11;
(* str.w	r5, [r0, #16]                             #! EA = L0x2001a2d8; PC = 0x800521c *)
mov L0x2001a2d8 r5;
(* str.w	r6, [r0, #32]                             #! EA = L0x2001a2e8; PC = 0x8005220 *)
mov L0x2001a2e8 r6;
(* str.w	r7, [r0, #48]	; 0x30                      #! EA = L0x2001a2f8; PC = 0x8005224 *)
mov L0x2001a2f8 r7;
(* str.w	r4, [r0], #4                              #! EA = L0x2001a2c8; PC = 0x8005228 *)
mov L0x2001a2c8 r4;
(* ldr.w	r8, [r0, #64]	; 0x40                      #! EA = L0x2001a30c; Value = 0xff03f74d; PC = 0x800522c *)
mov r8 L0x2001a30c;
(* ldr.w	r5, [r0, #80]	; 0x50                      #! EA = L0x2001a31c; Value = 0xffe05e62; PC = 0x8005230 *)
mov r5 L0x2001a31c;
(* ldr.w	r10, [r0, #96]	; 0x60                     #! EA = L0x2001a32c; Value = 0x00922ae6; PC = 0x8005234 *)
mov r10 L0x2001a32c;
(* ldr.w	r7, [r0, #112]	; 0x70                     #! EA = L0x2001a33c; Value = 0xffb81600; PC = 0x8005238 *)
mov r7 L0x2001a33c;
(* add	r8, r5                                      #! PC = 0x800523c *)
add r8 r8 r5;
(* add	r10, r7                                     #! PC = 0x800523e *)
add r10 r10 r7;
(* sub.w	r5, r8, r5, lsl #1                        #! PC = 0x8005240 *)
shl tmp r5 1;
sub r5 r8 tmp;
(* sub.w	r7, r10, r7, lsl #1                       #! PC = 0x8005244 *)
shl tmp r7 1;
sub r7 r10 tmp;
(* add.w	r8, r8, r10                               #! PC = 0x8005248 *)
add r8 r8 r10;
(* sub.w	r10, r8, r10, lsl #1                      #! PC = 0x800524c *)
shl tmp r10 1;
sub r10 r8 tmp;
(* vmov	r12, s8                                    #! PC = 0x8005250 *)
mov r12 s8;
(* vmov	lr, s10                                    #! PC = 0x8005254 *)
mov lr s10;
(* smull	r4, r9, r5, r12                           #! PC = 0x8005258 *)
smull r9 r4 r5 r12;
(* smlal	r4, r9, r7, lr                            #! PC = 0x800525c *)
cast r7@sint32 r7;
smull tmp_h tmp_l r7 lr;
uadds carry r4 tmp_l r4;
sadc r9 tmp_h r9 carry;
(* mul.w	r1, r4, r2                                #! PC = 0x8005260 *)
cast r4_s@sint32 r4;
mull discard r1 r4_s r2;
(* smlal	r4, r9, r1, r3                            #! PC = 0x8005264 *)
cast r1@sint32 r1;
smull tmp_h tmp_l r1 r3;
uadds carry r4 tmp_l r4;
sadc r9 tmp_h r9 carry;
assert eqmod r4 0 (2**32) && true;
assume eq r4 0 && true;
(* smull	r6, r11, r5, lr                           #! PC = 0x8005268 *)
smull r11 r6 r5 lr;
(* smlal	r6, r11, r7, r12                          #! PC = 0x800526c *)
cast r7@sint32 r7;
smull tmp_h tmp_l r7 r12;
uadds carry r6 tmp_l r6;
sadc r11 tmp_h r11 carry;
(* mul.w	r1, r6, r2                                #! PC = 0x8005270 *)
cast r6_s@sint32 r6;
mull discard r1 r6_s r2;
(* smlal	r6, r11, r1, r3                           #! PC = 0x8005274 *)
cast r1@sint32 r1;
smull tmp_h tmp_l r1 r3;
uadds carry r6 tmp_l r6;
sadc r11 tmp_h r11 carry;
assert eqmod r6 0 (2**32) && true;
assume eq r6 0 && true;
(* ldr.w	r4, [r0]                                  #! EA = L0x2001a2cc; Value = 0x006b992f; PC = 0x8005278 *)
mov r4 L0x2001a2cc;
(* ldr.w	r5, [r0, #16]                             #! EA = L0x2001a2dc; Value = 0x00d63985; PC = 0x800527c *)
mov r5 L0x2001a2dc;
(* ldr.w	r6, [r0, #32]                             #! EA = L0x2001a2ec; Value = 0xff1cac83; PC = 0x8005280 *)
mov r6 L0x2001a2ec;
(* ldr.w	r7, [r0, #48]	; 0x30                      #! EA = L0x2001a2fc; Value = 0xff454cbf; PC = 0x8005284 *)
mov r7 L0x2001a2fc;
(* add	r4, r5                                      #! PC = 0x8005288 *)
add r4 r4 r5;
(* add	r6, r7                                      #! PC = 0x800528a *)
add r6 r6 r7;
(* sub.w	r5, r4, r5, lsl #1                        #! PC = 0x800528c *)
shl tmp r5 1;
sub r5 r4 tmp;
(* sub.w	r7, r6, r7, lsl #1                        #! PC = 0x8005290 *)
shl tmp r7 1;
sub r7 r6 tmp;
(* vmov	r1, s6                                     #! PC = 0x8005294 *)
mov r1 s6;
(* smull	r12, r7, r7, r1                           #! PC = 0x8005298 *)
smull r7 r12 r7 r1;
(* mul.w	lr, r12, r2                               #! PC = 0x800529c *)
cast r12_s@sint32 r12;
mull discard lr r12_s r2;
(* smlal	r12, r7, lr, r3                           #! PC = 0x80052a0 *)
cast lr@sint32 lr;
smull tmp_h tmp_l lr r3;
uadds carry r12 tmp_l r12;
sadc r7 tmp_h r7 carry;
assert eqmod r12 0 (2**32) && true;
assume eq r12 0 && true;
(* add	r4, r6                                      #! PC = 0x80052a4 *)
add r4 r4 r6;
(* add	r5, r7                                      #! PC = 0x80052a6 *)
add r5 r5 r7;
(* sub.w	r6, r4, r6, lsl #1                        #! PC = 0x80052a8 *)
shl tmp r6 1;
sub r6 r4 tmp;
(* sub.w	r7, r5, r7, lsl #1                        #! PC = 0x80052ac *)
shl tmp r7 1;
sub r7 r5 tmp;
(* smull	r12, r10, r10, r1                         #! PC = 0x80052b0 *)
smull r10 r12 r10 r1;
(* mul.w	lr, r12, r2                               #! PC = 0x80052b4 *)
cast r12_s@sint32 r12;
mull discard lr r12_s r2;
(* smlal	r12, r10, lr, r3                          #! PC = 0x80052b8 *)
cast lr@sint32 lr;
smull tmp_h tmp_l lr r3;
uadds carry r12 tmp_l r12;
sadc r10 tmp_h r10 carry;
assert eqmod r12 0 (2**32) && true;
assume eq r12 0 && true;
(* add	r4, r8                                      #! PC = 0x80052bc *)
add r4 r4 r8;
(* add	r5, r9                                      #! PC = 0x80052be *)
add r5 r5 r9;
(* add	r6, r10                                     #! PC = 0x80052c0 *)
add r6 r6 r10;
(* add	r7, r11                                     #! PC = 0x80052c2 *)
add r7 r7 r11;
(* sub.w	r8, r4, r8, lsl #1                        #! PC = 0x80052c4 *)
shl tmp r8 1;
sub r8 r4 tmp;
(* sub.w	r9, r5, r9, lsl #1                        #! PC = 0x80052c8 *)
shl tmp r9 1;
sub r9 r5 tmp;
(* sub.w	r10, r6, r10, lsl #1                      #! PC = 0x80052cc *)
shl tmp r10 1;
sub r10 r6 tmp;
(* sub.w	r11, r7, r11, lsl #1                      #! PC = 0x80052d0 *)
shl tmp r11 1;
sub r11 r7 tmp;
(* str.w	r8, [r0, #64]	; 0x40                      #! EA = L0x2001a30c; PC = 0x80052d4 *)
mov L0x2001a30c r8;
(* str.w	r9, [r0, #80]	; 0x50                      #! EA = L0x2001a31c; PC = 0x80052d8 *)
mov L0x2001a31c r9;
(* str.w	r10, [r0, #96]	; 0x60                     #! EA = L0x2001a32c; PC = 0x80052dc *)
mov L0x2001a32c r10;
(* str.w	r11, [r0, #112]	; 0x70                    #! EA = L0x2001a33c; PC = 0x80052e0 *)
mov L0x2001a33c r11;
(* str.w	r5, [r0, #16]                             #! EA = L0x2001a2dc; PC = 0x80052e4 *)
mov L0x2001a2dc r5;
(* str.w	r6, [r0, #32]                             #! EA = L0x2001a2ec; PC = 0x80052e8 *)
mov L0x2001a2ec r6;
(* str.w	r7, [r0, #48]	; 0x30                      #! EA = L0x2001a2fc; PC = 0x80052ec *)
mov L0x2001a2fc r7;
(* str.w	r4, [r0], #4                              #! EA = L0x2001a2cc; PC = 0x80052f0 *)
mov L0x2001a2cc r4;
(* ldr.w	r8, [r0, #64]	; 0x40                      #! EA = L0x2001a310; Value = 0x005d2757; PC = 0x80052f4 *)
mov r8 L0x2001a310;
(* ldr.w	r5, [r0, #80]	; 0x50                      #! EA = L0x2001a320; Value = 0x000034ff; PC = 0x80052f8 *)
mov r5 L0x2001a320;
(* ldr.w	r10, [r0, #96]	; 0x60                     #! EA = L0x2001a330; Value = 0x00dff07a; PC = 0x80052fc *)
mov r10 L0x2001a330;
(* ldr.w	r7, [r0, #112]	; 0x70                     #! EA = L0x2001a340; Value = 0xfec592b6; PC = 0x8005300 *)
mov r7 L0x2001a340;
(* add	r8, r5                                      #! PC = 0x8005304 *)
add r8 r8 r5;
(* add	r10, r7                                     #! PC = 0x8005306 *)
add r10 r10 r7;
(* sub.w	r5, r8, r5, lsl #1                        #! PC = 0x8005308 *)
shl tmp r5 1;
sub r5 r8 tmp;
(* sub.w	r7, r10, r7, lsl #1                       #! PC = 0x800530c *)
shl tmp r7 1;
sub r7 r10 tmp;
(* add.w	r8, r8, r10                               #! PC = 0x8005310 *)
add r8 r8 r10;
(* sub.w	r10, r8, r10, lsl #1                      #! PC = 0x8005314 *)
shl tmp r10 1;
sub r10 r8 tmp;
(* vmov	r12, s8                                    #! PC = 0x8005318 *)
mov r12 s8;
(* vmov	lr, s10                                    #! PC = 0x800531c *)
mov lr s10;
(* smull	r4, r9, r5, r12                           #! PC = 0x8005320 *)
smull r9 r4 r5 r12;
(* smlal	r4, r9, r7, lr                            #! PC = 0x8005324 *)
cast r7@sint32 r7;
smull tmp_h tmp_l r7 lr;
uadds carry r4 tmp_l r4;
sadc r9 tmp_h r9 carry;
(* mul.w	r1, r4, r2                                #! PC = 0x8005328 *)
cast r4_s@sint32 r4;
mull discard r1 r4_s r2;
(* smlal	r4, r9, r1, r3                            #! PC = 0x800532c *)
cast r1@sint32 r1;
smull tmp_h tmp_l r1 r3;
uadds carry r4 tmp_l r4;
sadc r9 tmp_h r9 carry;
assert eqmod r4 0 (2**32) && true;
assume eq r4 0 && true;
(* smull	r6, r11, r5, lr                           #! PC = 0x8005330 *)
smull r11 r6 r5 lr;
(* smlal	r6, r11, r7, r12                          #! PC = 0x8005334 *)
cast r7@sint32 r7;
smull tmp_h tmp_l r7 r12;
uadds carry r6 tmp_l r6;
sadc r11 tmp_h r11 carry;
(* mul.w	r1, r6, r2                                #! PC = 0x8005338 *)
cast r6_s@sint32 r6;
mull discard r1 r6_s r2;
(* smlal	r6, r11, r1, r3                           #! PC = 0x800533c *)
cast r1@sint32 r1;
smull tmp_h tmp_l r1 r3;
uadds carry r6 tmp_l r6;
sadc r11 tmp_h r11 carry;
assert eqmod r6 0 (2**32) && true;
assume eq r6 0 && true;
(* ldr.w	r4, [r0]                                  #! EA = L0x2001a2d0; Value = 0x00e53557; PC = 0x8005340 *)
mov r4 L0x2001a2d0;
(* ldr.w	r5, [r0, #16]                             #! EA = L0x2001a2e0; Value = 0xfeea08e3; PC = 0x8005344 *)
mov r5 L0x2001a2e0;
(* ldr.w	r6, [r0, #32]                             #! EA = L0x2001a2f0; Value = 0x0026acc7; PC = 0x8005348 *)
mov r6 L0x2001a2f0;
(* ldr.w	r7, [r0, #48]	; 0x30                      #! EA = L0x2001a300; Value = 0xffdbbe06; PC = 0x800534c *)
mov r7 L0x2001a300;
(* add	r4, r5                                      #! PC = 0x8005350 *)
add r4 r4 r5;
(* add	r6, r7                                      #! PC = 0x8005352 *)
add r6 r6 r7;
(* sub.w	r5, r4, r5, lsl #1                        #! PC = 0x8005354 *)
shl tmp r5 1;
sub r5 r4 tmp;
(* sub.w	r7, r6, r7, lsl #1                        #! PC = 0x8005358 *)
shl tmp r7 1;
sub r7 r6 tmp;
(* vmov	r1, s6                                     #! PC = 0x800535c *)
mov r1 s6;
(* smull	r12, r7, r7, r1                           #! PC = 0x8005360 *)
smull r7 r12 r7 r1;
(* mul.w	lr, r12, r2                               #! PC = 0x8005364 *)
cast r12_s@sint32 r12;
mull discard lr r12_s r2;
(* smlal	r12, r7, lr, r3                           #! PC = 0x8005368 *)
cast lr@sint32 lr;
smull tmp_h tmp_l lr r3;
uadds carry r12 tmp_l r12;
sadc r7 tmp_h r7 carry;
assert eqmod r12 0 (2**32) && true;
assume eq r12 0 && true;
(* add	r4, r6                                      #! PC = 0x800536c *)
add r4 r4 r6;
(* add	r5, r7                                      #! PC = 0x800536e *)
add r5 r5 r7;
(* sub.w	r6, r4, r6, lsl #1                        #! PC = 0x8005370 *)
shl tmp r6 1;
sub r6 r4 tmp;
(* sub.w	r7, r5, r7, lsl #1                        #! PC = 0x8005374 *)
shl tmp r7 1;
sub r7 r5 tmp;
(* smull	r12, r10, r10, r1                         #! PC = 0x8005378 *)
smull r10 r12 r10 r1;
(* mul.w	lr, r12, r2                               #! PC = 0x800537c *)
cast r12_s@sint32 r12;
mull discard lr r12_s r2;
(* smlal	r12, r10, lr, r3                          #! PC = 0x8005380 *)
cast lr@sint32 lr;
smull tmp_h tmp_l lr r3;
uadds carry r12 tmp_l r12;
sadc r10 tmp_h r10 carry;
assert eqmod r12 0 (2**32) && true;
assume eq r12 0 && true;
(* add	r4, r8                                      #! PC = 0x8005384 *)
add r4 r4 r8;
(* add	r5, r9                                      #! PC = 0x8005386 *)
add r5 r5 r9;
(* add	r6, r10                                     #! PC = 0x8005388 *)
add r6 r6 r10;
(* add	r7, r11                                     #! PC = 0x800538a *)
add r7 r7 r11;
(* sub.w	r8, r4, r8, lsl #1                        #! PC = 0x800538c *)
shl tmp r8 1;
sub r8 r4 tmp;
(* sub.w	r9, r5, r9, lsl #1                        #! PC = 0x8005390 *)
shl tmp r9 1;
sub r9 r5 tmp;
(* sub.w	r10, r6, r10, lsl #1                      #! PC = 0x8005394 *)
shl tmp r10 1;
sub r10 r6 tmp;
(* sub.w	r11, r7, r11, lsl #1                      #! PC = 0x8005398 *)
shl tmp r11 1;
sub r11 r7 tmp;
(* str.w	r8, [r0, #64]	; 0x40                      #! EA = L0x2001a310; PC = 0x800539c *)
mov L0x2001a310 r8;
(* str.w	r9, [r0, #80]	; 0x50                      #! EA = L0x2001a320; PC = 0x80053a0 *)
mov L0x2001a320 r9;
(* str.w	r10, [r0, #96]	; 0x60                     #! EA = L0x2001a330; PC = 0x80053a4 *)
mov L0x2001a330 r10;
(* str.w	r11, [r0, #112]	; 0x70                    #! EA = L0x2001a340; PC = 0x80053a8 *)
mov L0x2001a340 r11;
(* str.w	r5, [r0, #16]                             #! EA = L0x2001a2e0; PC = 0x80053ac *)
mov L0x2001a2e0 r5;
(* str.w	r6, [r0, #32]                             #! EA = L0x2001a2f0; PC = 0x80053b0 *)
mov L0x2001a2f0 r6;
(* str.w	r7, [r0, #48]	; 0x30                      #! EA = L0x2001a300; PC = 0x80053b4 *)
mov L0x2001a300 r7;
(* str.w	r4, [r0], #4                              #! EA = L0x2001a2d0; PC = 0x80053b8 *)
mov L0x2001a2d0 r4;
(* ldr.w	r8, [r0, #64]	; 0x40                      #! EA = L0x2001a314; Value = 0xff0e2adf; PC = 0x80053bc *)
mov r8 L0x2001a314;
(* ldr.w	r5, [r0, #80]	; 0x50                      #! EA = L0x2001a324; Value = 0xff3f626f; PC = 0x80053c0 *)
mov r5 L0x2001a324;
(* ldr.w	r10, [r0, #96]	; 0x60                     #! EA = L0x2001a334; Value = 0x0005ff10; PC = 0x80053c4 *)
mov r10 L0x2001a334;
(* ldr.w	r7, [r0, #112]	; 0x70                     #! EA = L0x2001a344; Value = 0x00891c5f; PC = 0x80053c8 *)
mov r7 L0x2001a344;
(* add	r8, r5                                      #! PC = 0x80053cc *)
add r8 r8 r5;
(* add	r10, r7                                     #! PC = 0x80053ce *)
add r10 r10 r7;
(* sub.w	r5, r8, r5, lsl #1                        #! PC = 0x80053d0 *)
shl tmp r5 1;
sub r5 r8 tmp;
(* sub.w	r7, r10, r7, lsl #1                       #! PC = 0x80053d4 *)
shl tmp r7 1;
sub r7 r10 tmp;
(* add.w	r8, r8, r10                               #! PC = 0x80053d8 *)
add r8 r8 r10;
(* sub.w	r10, r8, r10, lsl #1                      #! PC = 0x80053dc *)
shl tmp r10 1;
sub r10 r8 tmp;
(* vmov	r12, s8                                    #! PC = 0x80053e0 *)
mov r12 s8;
(* vmov	lr, s10                                    #! PC = 0x80053e4 *)
mov lr s10;
(* smull	r4, r9, r5, r12                           #! PC = 0x80053e8 *)
smull r9 r4 r5 r12;
(* smlal	r4, r9, r7, lr                            #! PC = 0x80053ec *)
cast r7@sint32 r7;
smull tmp_h tmp_l r7 lr;
uadds carry r4 tmp_l r4;
sadc r9 tmp_h r9 carry;
(* mul.w	r1, r4, r2                                #! PC = 0x80053f0 *)
cast r4_s@sint32 r4;
mull discard r1 r4_s r2;
(* smlal	r4, r9, r1, r3                            #! PC = 0x80053f4 *)
cast r1@sint32 r1;
smull tmp_h tmp_l r1 r3;
uadds carry r4 tmp_l r4;
sadc r9 tmp_h r9 carry;
assert eqmod r4 0 (2**32) && true;
assume eq r4 0 && true;
(* smull	r6, r11, r5, lr                           #! PC = 0x80053f8 *)
smull r11 r6 r5 lr;
(* smlal	r6, r11, r7, r12                          #! PC = 0x80053fc *)
cast r7@sint32 r7;
smull tmp_h tmp_l r7 r12;
uadds carry r6 tmp_l r6;
sadc r11 tmp_h r11 carry;
(* mul.w	r1, r6, r2                                #! PC = 0x8005400 *)
cast r6_s@sint32 r6;
mull discard r1 r6_s r2;
(* smlal	r6, r11, r1, r3                           #! PC = 0x8005404 *)
cast r1@sint32 r1;
smull tmp_h tmp_l r1 r3;
uadds carry r6 tmp_l r6;
sadc r11 tmp_h r11 carry;
assert eqmod r6 0 (2**32) && true;
assume eq r6 0 && true;
(* ldr.w	r4, [r0]                                  #! EA = L0x2001a2d4; Value = 0x0000f6c0; PC = 0x8005408 *)
mov r4 L0x2001a2d4;
(* ldr.w	r5, [r0, #16]                             #! EA = L0x2001a2e4; Value = 0x00385647; PC = 0x800540c *)
mov r5 L0x2001a2e4;
(* ldr.w	r6, [r0, #32]                             #! EA = L0x2001a2f4; Value = 0xff02c917; PC = 0x8005410 *)
mov r6 L0x2001a2f4;
(* ldr.w	r7, [r0, #48]	; 0x30                      #! EA = L0x2001a304; Value = 0x000c0d30; PC = 0x8005414 *)
mov r7 L0x2001a304;
(* add	r4, r5                                      #! PC = 0x8005418 *)
add r4 r4 r5;
(* add	r6, r7                                      #! PC = 0x800541a *)
add r6 r6 r7;
(* sub.w	r5, r4, r5, lsl #1                        #! PC = 0x800541c *)
shl tmp r5 1;
sub r5 r4 tmp;
(* sub.w	r7, r6, r7, lsl #1                        #! PC = 0x8005420 *)
shl tmp r7 1;
sub r7 r6 tmp;
(* vmov	r1, s6                                     #! PC = 0x8005424 *)
mov r1 s6;
(* smull	r12, r7, r7, r1                           #! PC = 0x8005428 *)
smull r7 r12 r7 r1;
(* mul.w	lr, r12, r2                               #! PC = 0x800542c *)
cast r12_s@sint32 r12;
mull discard lr r12_s r2;
(* smlal	r12, r7, lr, r3                           #! PC = 0x8005430 *)
cast lr@sint32 lr;
smull tmp_h tmp_l lr r3;
uadds carry r12 tmp_l r12;
sadc r7 tmp_h r7 carry;
assert eqmod r12 0 (2**32) && true;
assume eq r12 0 && true;
(* add	r4, r6                                      #! PC = 0x8005434 *)
add r4 r4 r6;
(* add	r5, r7                                      #! PC = 0x8005436 *)
add r5 r5 r7;
(* sub.w	r6, r4, r6, lsl #1                        #! PC = 0x8005438 *)
shl tmp r6 1;
sub r6 r4 tmp;
(* sub.w	r7, r5, r7, lsl #1                        #! PC = 0x800543c *)
shl tmp r7 1;
sub r7 r5 tmp;
(* smull	r12, r10, r10, r1                         #! PC = 0x8005440 *)
smull r10 r12 r10 r1;
(* mul.w	lr, r12, r2                               #! PC = 0x8005444 *)
cast r12_s@sint32 r12;
mull discard lr r12_s r2;
(* smlal	r12, r10, lr, r3                          #! PC = 0x8005448 *)
cast lr@sint32 lr;
smull tmp_h tmp_l lr r3;
uadds carry r12 tmp_l r12;
sadc r10 tmp_h r10 carry;
assert eqmod r12 0 (2**32) && true;
assume eq r12 0 && true;
(* add	r4, r8                                      #! PC = 0x800544c *)
add r4 r4 r8;
(* add	r5, r9                                      #! PC = 0x800544e *)
add r5 r5 r9;
(* add	r6, r10                                     #! PC = 0x8005450 *)
add r6 r6 r10;
(* add	r7, r11                                     #! PC = 0x8005452 *)
add r7 r7 r11;
(* sub.w	r8, r4, r8, lsl #1                        #! PC = 0x8005454 *)
shl tmp r8 1;
sub r8 r4 tmp;
(* sub.w	r9, r5, r9, lsl #1                        #! PC = 0x8005458 *)
shl tmp r9 1;
sub r9 r5 tmp;
(* sub.w	r10, r6, r10, lsl #1                      #! PC = 0x800545c *)
shl tmp r10 1;
sub r10 r6 tmp;
(* sub.w	r11, r7, r11, lsl #1                      #! PC = 0x8005460 *)
shl tmp r11 1;
sub r11 r7 tmp;
(* str.w	r8, [r0, #64]	; 0x40                      #! EA = L0x2001a314; PC = 0x8005464 *)
mov L0x2001a314 r8;
(* str.w	r9, [r0, #80]	; 0x50                      #! EA = L0x2001a324; PC = 0x8005468 *)
mov L0x2001a324 r9;
(* str.w	r10, [r0, #96]	; 0x60                     #! EA = L0x2001a334; PC = 0x800546c *)
mov L0x2001a334 r10;
(* str.w	r11, [r0, #112]	; 0x70                    #! EA = L0x2001a344; PC = 0x8005470 *)
mov L0x2001a344 r11;
(* str.w	r5, [r0, #16]                             #! EA = L0x2001a2e4; PC = 0x8005474 *)
mov L0x2001a2e4 r5;
(* str.w	r6, [r0, #32]                             #! EA = L0x2001a2f4; PC = 0x8005478 *)
mov L0x2001a2f4 r6;
(* str.w	r7, [r0, #48]	; 0x30                      #! EA = L0x2001a304; PC = 0x800547c *)
mov L0x2001a304 r7;
(* str.w	r4, [r0], #4                              #! EA = L0x2001a2d4; PC = 0x8005480 *)
mov L0x2001a2d4 r4;
(* add.w	r0, r0, #112	; 0x70                       #! PC = 0x8005484 *)
adds discard r0 r0 112@uint32;
(* vmov	r12, s2                                    #! PC = 0x8005488 *)
mov r12 s2;
(* ldr.w	r8, [r0, #64]	; 0x40                      #! EA = L0x2001a388; Value = 0xff5b1680; PC = 0x8005164 *)
mov r8 L0x2001a388;
(* ldr.w	r5, [r0, #80]	; 0x50                      #! EA = L0x2001a398; Value = 0xffc3f4dc; PC = 0x8005168 *)
mov r5 L0x2001a398;
(* ldr.w	r10, [r0, #96]	; 0x60                     #! EA = L0x2001a3a8; Value = 0xffecbc52; PC = 0x800516c *)
mov r10 L0x2001a3a8;
(* ldr.w	r7, [r0, #112]	; 0x70                     #! EA = L0x2001a3b8; Value = 0x00000c2c; PC = 0x8005170 *)
mov r7 L0x2001a3b8;
(* add	r8, r5                                      #! PC = 0x8005174 *)
add r8 r8 r5;
(* add	r10, r7                                     #! PC = 0x8005176 *)
add r10 r10 r7;
(* sub.w	r5, r8, r5, lsl #1                        #! PC = 0x8005178 *)
shl tmp r5 1;
sub r5 r8 tmp;
(* sub.w	r7, r10, r7, lsl #1                       #! PC = 0x800517c *)
shl tmp r7 1;
sub r7 r10 tmp;
(* add.w	r8, r8, r10                               #! PC = 0x8005180 *)
add r8 r8 r10;
(* sub.w	r10, r8, r10, lsl #1                      #! PC = 0x8005184 *)
shl tmp r10 1;
sub r10 r8 tmp;
(* vmov	r12, s8                                    #! PC = 0x8005188 *)
mov r12 s8;
(* vmov	lr, s10                                    #! PC = 0x800518c *)
mov lr s10;
(* smull	r4, r9, r5, r12                           #! PC = 0x8005190 *)
smull r9 r4 r5 r12;
(* smlal	r4, r9, r7, lr                            #! PC = 0x8005194 *)
cast r7@sint32 r7;
smull tmp_h tmp_l r7 lr;
uadds carry r4 tmp_l r4;
sadc r9 tmp_h r9 carry;
(* mul.w	r1, r4, r2                                #! PC = 0x8005198 *)
cast r4_s@sint32 r4;
mull discard r1 r4_s r2;
(* smlal	r4, r9, r1, r3                            #! PC = 0x800519c *)
cast r1@sint32 r1;
smull tmp_h tmp_l r1 r3;
uadds carry r4 tmp_l r4;
sadc r9 tmp_h r9 carry;
assert eqmod r4 0 (2**32) && true;
assume eq r4 0 && true;
(* smull	r6, r11, r5, lr                           #! PC = 0x80051a0 *)
smull r11 r6 r5 lr;
(* smlal	r6, r11, r7, r12                          #! PC = 0x80051a4 *)
cast r7@sint32 r7;
smull tmp_h tmp_l r7 r12;
uadds carry r6 tmp_l r6;
sadc r11 tmp_h r11 carry;
(* mul.w	r1, r6, r2                                #! PC = 0x80051a8 *)
cast r6_s@sint32 r6;
mull discard r1 r6_s r2;
(* smlal	r6, r11, r1, r3                           #! PC = 0x80051ac *)
cast r1@sint32 r1;
smull tmp_h tmp_l r1 r3;
uadds carry r6 tmp_l r6;
sadc r11 tmp_h r11 carry;
assert eqmod r6 0 (2**32) && true;
assume eq r6 0 && true;
(* ldr.w	r4, [r0]                                  #! EA = L0x2001a348; Value = 0xffd7ee0c; PC = 0x80051b0 *)
mov r4 L0x2001a348;
(* ldr.w	r5, [r0, #16]                             #! EA = L0x2001a358; Value = 0x002fdc9e; PC = 0x80051b4 *)
mov r5 L0x2001a358;
(* ldr.w	r6, [r0, #32]                             #! EA = L0x2001a368; Value = 0xff9ef874; PC = 0x80051b8 *)
mov r6 L0x2001a368;
(* ldr.w	r7, [r0, #48]	; 0x30                      #! EA = L0x2001a378; Value = 0x0031b4f7; PC = 0x80051bc *)
mov r7 L0x2001a378;
(* add	r4, r5                                      #! PC = 0x80051c0 *)
add r4 r4 r5;
(* add	r6, r7                                      #! PC = 0x80051c2 *)
add r6 r6 r7;
(* sub.w	r5, r4, r5, lsl #1                        #! PC = 0x80051c4 *)
shl tmp r5 1;
sub r5 r4 tmp;
(* sub.w	r7, r6, r7, lsl #1                        #! PC = 0x80051c8 *)
shl tmp r7 1;
sub r7 r6 tmp;
(* vmov	r1, s6                                     #! PC = 0x80051cc *)
mov r1 s6;
(* smull	r12, r7, r7, r1                           #! PC = 0x80051d0 *)
smull r7 r12 r7 r1;
(* mul.w	lr, r12, r2                               #! PC = 0x80051d4 *)
cast r12_s@sint32 r12;
mull discard lr r12_s r2;
(* smlal	r12, r7, lr, r3                           #! PC = 0x80051d8 *)
cast lr@sint32 lr;
smull tmp_h tmp_l lr r3;
uadds carry r12 tmp_l r12;
sadc r7 tmp_h r7 carry;
assert eqmod r12 0 (2**32) && true;
assume eq r12 0 && true;
(* add	r4, r6                                      #! PC = 0x80051dc *)
add r4 r4 r6;
(* add	r5, r7                                      #! PC = 0x80051de *)
add r5 r5 r7;
(* sub.w	r6, r4, r6, lsl #1                        #! PC = 0x80051e0 *)
shl tmp r6 1;
sub r6 r4 tmp;
(* sub.w	r7, r5, r7, lsl #1                        #! PC = 0x80051e4 *)
shl tmp r7 1;
sub r7 r5 tmp;
(* smull	r12, r10, r10, r1                         #! PC = 0x80051e8 *)
smull r10 r12 r10 r1;
(* mul.w	lr, r12, r2                               #! PC = 0x80051ec *)
cast r12_s@sint32 r12;
mull discard lr r12_s r2;
(* smlal	r12, r10, lr, r3                          #! PC = 0x80051f0 *)
cast lr@sint32 lr;
smull tmp_h tmp_l lr r3;
uadds carry r12 tmp_l r12;
sadc r10 tmp_h r10 carry;
assert eqmod r12 0 (2**32) && true;
assume eq r12 0 && true;
(* add	r4, r8                                      #! PC = 0x80051f4 *)
add r4 r4 r8;
(* add	r5, r9                                      #! PC = 0x80051f6 *)
add r5 r5 r9;
(* add	r6, r10                                     #! PC = 0x80051f8 *)
add r6 r6 r10;
(* add	r7, r11                                     #! PC = 0x80051fa *)
add r7 r7 r11;
(* sub.w	r8, r4, r8, lsl #1                        #! PC = 0x80051fc *)
shl tmp r8 1;
sub r8 r4 tmp;
(* sub.w	r9, r5, r9, lsl #1                        #! PC = 0x8005200 *)
shl tmp r9 1;
sub r9 r5 tmp;
(* sub.w	r10, r6, r10, lsl #1                      #! PC = 0x8005204 *)
shl tmp r10 1;
sub r10 r6 tmp;
(* sub.w	r11, r7, r11, lsl #1                      #! PC = 0x8005208 *)
shl tmp r11 1;
sub r11 r7 tmp;
(* str.w	r8, [r0, #64]	; 0x40                      #! EA = L0x2001a388; PC = 0x800520c *)
mov L0x2001a388 r8;
(* str.w	r9, [r0, #80]	; 0x50                      #! EA = L0x2001a398; PC = 0x8005210 *)
mov L0x2001a398 r9;
(* str.w	r10, [r0, #96]	; 0x60                     #! EA = L0x2001a3a8; PC = 0x8005214 *)
mov L0x2001a3a8 r10;
(* str.w	r11, [r0, #112]	; 0x70                    #! EA = L0x2001a3b8; PC = 0x8005218 *)
mov L0x2001a3b8 r11;
(* str.w	r5, [r0, #16]                             #! EA = L0x2001a358; PC = 0x800521c *)
mov L0x2001a358 r5;
(* str.w	r6, [r0, #32]                             #! EA = L0x2001a368; PC = 0x8005220 *)
mov L0x2001a368 r6;
(* str.w	r7, [r0, #48]	; 0x30                      #! EA = L0x2001a378; PC = 0x8005224 *)
mov L0x2001a378 r7;
(* str.w	r4, [r0], #4                              #! EA = L0x2001a348; PC = 0x8005228 *)
mov L0x2001a348 r4;
(* ldr.w	r8, [r0, #64]	; 0x40                      #! EA = L0x2001a38c; Value = 0x00eccd06; PC = 0x800522c *)
mov r8 L0x2001a38c;
(* ldr.w	r5, [r0, #80]	; 0x50                      #! EA = L0x2001a39c; Value = 0xffddc1dd; PC = 0x8005230 *)
mov r5 L0x2001a39c;
(* ldr.w	r10, [r0, #96]	; 0x60                     #! EA = L0x2001a3ac; Value = 0xffdcb566; PC = 0x8005234 *)
mov r10 L0x2001a3ac;
(* ldr.w	r7, [r0, #112]	; 0x70                     #! EA = L0x2001a3bc; Value = 0x00e3b380; PC = 0x8005238 *)
mov r7 L0x2001a3bc;
(* add	r8, r5                                      #! PC = 0x800523c *)
add r8 r8 r5;
(* add	r10, r7                                     #! PC = 0x800523e *)
add r10 r10 r7;
(* sub.w	r5, r8, r5, lsl #1                        #! PC = 0x8005240 *)
shl tmp r5 1;
sub r5 r8 tmp;
(* sub.w	r7, r10, r7, lsl #1                       #! PC = 0x8005244 *)
shl tmp r7 1;
sub r7 r10 tmp;
(* add.w	r8, r8, r10                               #! PC = 0x8005248 *)
add r8 r8 r10;
(* sub.w	r10, r8, r10, lsl #1                      #! PC = 0x800524c *)
shl tmp r10 1;
sub r10 r8 tmp;
(* vmov	r12, s8                                    #! PC = 0x8005250 *)
mov r12 s8;
(* vmov	lr, s10                                    #! PC = 0x8005254 *)
mov lr s10;
(* smull	r4, r9, r5, r12                           #! PC = 0x8005258 *)
smull r9 r4 r5 r12;
(* smlal	r4, r9, r7, lr                            #! PC = 0x800525c *)
cast r7@sint32 r7;
smull tmp_h tmp_l r7 lr;
uadds carry r4 tmp_l r4;
sadc r9 tmp_h r9 carry;
(* mul.w	r1, r4, r2                                #! PC = 0x8005260 *)
cast r4_s@sint32 r4;
mull discard r1 r4_s r2;
(* smlal	r4, r9, r1, r3                            #! PC = 0x8005264 *)
cast r1@sint32 r1;
smull tmp_h tmp_l r1 r3;
uadds carry r4 tmp_l r4;
sadc r9 tmp_h r9 carry;
assert eqmod r4 0 (2**32) && true;
assume eq r4 0 && true;
(* smull	r6, r11, r5, lr                           #! PC = 0x8005268 *)
smull r11 r6 r5 lr;
(* smlal	r6, r11, r7, r12                          #! PC = 0x800526c *)
cast r7@sint32 r7;
smull tmp_h tmp_l r7 r12;
uadds carry r6 tmp_l r6;
sadc r11 tmp_h r11 carry;
(* mul.w	r1, r6, r2                                #! PC = 0x8005270 *)
cast r6_s@sint32 r6;
mull discard r1 r6_s r2;
(* smlal	r6, r11, r1, r3                           #! PC = 0x8005274 *)
cast r1@sint32 r1;
smull tmp_h tmp_l r1 r3;
uadds carry r6 tmp_l r6;
sadc r11 tmp_h r11 carry;
assert eqmod r6 0 (2**32) && true;
assume eq r6 0 && true;
(* ldr.w	r4, [r0]                                  #! EA = L0x2001a34c; Value = 0xfed7dd29; PC = 0x8005278 *)
mov r4 L0x2001a34c;
(* ldr.w	r5, [r0, #16]                             #! EA = L0x2001a35c; Value = 0xff62f8e5; PC = 0x800527c *)
mov r5 L0x2001a35c;
(* ldr.w	r6, [r0, #32]                             #! EA = L0x2001a36c; Value = 0xffc40988; PC = 0x8005280 *)
mov r6 L0x2001a36c;
(* ldr.w	r7, [r0, #48]	; 0x30                      #! EA = L0x2001a37c; Value = 0x008608ef; PC = 0x8005284 *)
mov r7 L0x2001a37c;
(* add	r4, r5                                      #! PC = 0x8005288 *)
add r4 r4 r5;
(* add	r6, r7                                      #! PC = 0x800528a *)
add r6 r6 r7;
(* sub.w	r5, r4, r5, lsl #1                        #! PC = 0x800528c *)
shl tmp r5 1;
sub r5 r4 tmp;
(* sub.w	r7, r6, r7, lsl #1                        #! PC = 0x8005290 *)
shl tmp r7 1;
sub r7 r6 tmp;
(* vmov	r1, s6                                     #! PC = 0x8005294 *)
mov r1 s6;
(* smull	r12, r7, r7, r1                           #! PC = 0x8005298 *)
smull r7 r12 r7 r1;
(* mul.w	lr, r12, r2                               #! PC = 0x800529c *)
cast r12_s@sint32 r12;
mull discard lr r12_s r2;
(* smlal	r12, r7, lr, r3                           #! PC = 0x80052a0 *)
cast lr@sint32 lr;
smull tmp_h tmp_l lr r3;
uadds carry r12 tmp_l r12;
sadc r7 tmp_h r7 carry;
assert eqmod r12 0 (2**32) && true;
assume eq r12 0 && true;
(* add	r4, r6                                      #! PC = 0x80052a4 *)
add r4 r4 r6;
(* add	r5, r7                                      #! PC = 0x80052a6 *)
add r5 r5 r7;
(* sub.w	r6, r4, r6, lsl #1                        #! PC = 0x80052a8 *)
shl tmp r6 1;
sub r6 r4 tmp;
(* sub.w	r7, r5, r7, lsl #1                        #! PC = 0x80052ac *)
shl tmp r7 1;
sub r7 r5 tmp;
(* smull	r12, r10, r10, r1                         #! PC = 0x80052b0 *)
smull r10 r12 r10 r1;
(* mul.w	lr, r12, r2                               #! PC = 0x80052b4 *)
cast r12_s@sint32 r12;
mull discard lr r12_s r2;
(* smlal	r12, r10, lr, r3                          #! PC = 0x80052b8 *)
cast lr@sint32 lr;
smull tmp_h tmp_l lr r3;
uadds carry r12 tmp_l r12;
sadc r10 tmp_h r10 carry;
assert eqmod r12 0 (2**32) && true;
assume eq r12 0 && true;
(* add	r4, r8                                      #! PC = 0x80052bc *)
add r4 r4 r8;
(* add	r5, r9                                      #! PC = 0x80052be *)
add r5 r5 r9;
(* add	r6, r10                                     #! PC = 0x80052c0 *)
add r6 r6 r10;
(* add	r7, r11                                     #! PC = 0x80052c2 *)
add r7 r7 r11;
(* sub.w	r8, r4, r8, lsl #1                        #! PC = 0x80052c4 *)
shl tmp r8 1;
sub r8 r4 tmp;
(* sub.w	r9, r5, r9, lsl #1                        #! PC = 0x80052c8 *)
shl tmp r9 1;
sub r9 r5 tmp;
(* sub.w	r10, r6, r10, lsl #1                      #! PC = 0x80052cc *)
shl tmp r10 1;
sub r10 r6 tmp;
(* sub.w	r11, r7, r11, lsl #1                      #! PC = 0x80052d0 *)
shl tmp r11 1;
sub r11 r7 tmp;
(* str.w	r8, [r0, #64]	; 0x40                      #! EA = L0x2001a38c; PC = 0x80052d4 *)
mov L0x2001a38c r8;
(* str.w	r9, [r0, #80]	; 0x50                      #! EA = L0x2001a39c; PC = 0x80052d8 *)
mov L0x2001a39c r9;
(* str.w	r10, [r0, #96]	; 0x60                     #! EA = L0x2001a3ac; PC = 0x80052dc *)
mov L0x2001a3ac r10;
(* str.w	r11, [r0, #112]	; 0x70                    #! EA = L0x2001a3bc; PC = 0x80052e0 *)
mov L0x2001a3bc r11;
(* str.w	r5, [r0, #16]                             #! EA = L0x2001a35c; PC = 0x80052e4 *)
mov L0x2001a35c r5;
(* str.w	r6, [r0, #32]                             #! EA = L0x2001a36c; PC = 0x80052e8 *)
mov L0x2001a36c r6;
(* str.w	r7, [r0, #48]	; 0x30                      #! EA = L0x2001a37c; PC = 0x80052ec *)
mov L0x2001a37c r7;
(* str.w	r4, [r0], #4                              #! EA = L0x2001a34c; PC = 0x80052f0 *)
mov L0x2001a34c r4;
(* ldr.w	r8, [r0, #64]	; 0x40                      #! EA = L0x2001a390; Value = 0xff886d0b; PC = 0x80052f4 *)
mov r8 L0x2001a390;
(* ldr.w	r5, [r0, #80]	; 0x50                      #! EA = L0x2001a3a0; Value = 0x004ff56f; PC = 0x80052f8 *)
mov r5 L0x2001a3a0;
(* ldr.w	r10, [r0, #96]	; 0x60                     #! EA = L0x2001a3b0; Value = 0x00987578; PC = 0x80052fc *)
mov r10 L0x2001a3b0;
(* ldr.w	r7, [r0, #112]	; 0x70                     #! EA = L0x2001a3c0; Value = 0x0125f8ac; PC = 0x8005300 *)
mov r7 L0x2001a3c0;
(* add	r8, r5                                      #! PC = 0x8005304 *)
add r8 r8 r5;
(* add	r10, r7                                     #! PC = 0x8005306 *)
add r10 r10 r7;
(* sub.w	r5, r8, r5, lsl #1                        #! PC = 0x8005308 *)
shl tmp r5 1;
sub r5 r8 tmp;
(* sub.w	r7, r10, r7, lsl #1                       #! PC = 0x800530c *)
shl tmp r7 1;
sub r7 r10 tmp;
(* add.w	r8, r8, r10                               #! PC = 0x8005310 *)
add r8 r8 r10;
(* sub.w	r10, r8, r10, lsl #1                      #! PC = 0x8005314 *)
shl tmp r10 1;
sub r10 r8 tmp;
(* vmov	r12, s8                                    #! PC = 0x8005318 *)
mov r12 s8;
(* vmov	lr, s10                                    #! PC = 0x800531c *)
mov lr s10;
(* smull	r4, r9, r5, r12                           #! PC = 0x8005320 *)
smull r9 r4 r5 r12;
(* smlal	r4, r9, r7, lr                            #! PC = 0x8005324 *)
cast r7@sint32 r7;
smull tmp_h tmp_l r7 lr;
uadds carry r4 tmp_l r4;
sadc r9 tmp_h r9 carry;
(* mul.w	r1, r4, r2                                #! PC = 0x8005328 *)
cast r4_s@sint32 r4;
mull discard r1 r4_s r2;
(* smlal	r4, r9, r1, r3                            #! PC = 0x800532c *)
cast r1@sint32 r1;
smull tmp_h tmp_l r1 r3;
uadds carry r4 tmp_l r4;
sadc r9 tmp_h r9 carry;
assert eqmod r4 0 (2**32) && true;
assume eq r4 0 && true;
(* smull	r6, r11, r5, lr                           #! PC = 0x8005330 *)
smull r11 r6 r5 lr;
(* smlal	r6, r11, r7, r12                          #! PC = 0x8005334 *)
cast r7@sint32 r7;
smull tmp_h tmp_l r7 r12;
uadds carry r6 tmp_l r6;
sadc r11 tmp_h r11 carry;
(* mul.w	r1, r6, r2                                #! PC = 0x8005338 *)
cast r6_s@sint32 r6;
mull discard r1 r6_s r2;
(* smlal	r6, r11, r1, r3                           #! PC = 0x800533c *)
cast r1@sint32 r1;
smull tmp_h tmp_l r1 r3;
uadds carry r6 tmp_l r6;
sadc r11 tmp_h r11 carry;
assert eqmod r6 0 (2**32) && true;
assume eq r6 0 && true;
(* ldr.w	r4, [r0]                                  #! EA = L0x2001a350; Value = 0x00351bbb; PC = 0x8005340 *)
mov r4 L0x2001a350;
(* ldr.w	r5, [r0, #16]                             #! EA = L0x2001a360; Value = 0xff744743; PC = 0x8005344 *)
mov r5 L0x2001a360;
(* ldr.w	r6, [r0, #32]                             #! EA = L0x2001a370; Value = 0xffca1918; PC = 0x8005348 *)
mov r6 L0x2001a370;
(* ldr.w	r7, [r0, #48]	; 0x30                      #! EA = L0x2001a380; Value = 0xff13d351; PC = 0x800534c *)
mov r7 L0x2001a380;
(* add	r4, r5                                      #! PC = 0x8005350 *)
add r4 r4 r5;
(* add	r6, r7                                      #! PC = 0x8005352 *)
add r6 r6 r7;
(* sub.w	r5, r4, r5, lsl #1                        #! PC = 0x8005354 *)
shl tmp r5 1;
sub r5 r4 tmp;
(* sub.w	r7, r6, r7, lsl #1                        #! PC = 0x8005358 *)
shl tmp r7 1;
sub r7 r6 tmp;
(* vmov	r1, s6                                     #! PC = 0x800535c *)
mov r1 s6;
(* smull	r12, r7, r7, r1                           #! PC = 0x8005360 *)
smull r7 r12 r7 r1;
(* mul.w	lr, r12, r2                               #! PC = 0x8005364 *)
cast r12_s@sint32 r12;
mull discard lr r12_s r2;
(* smlal	r12, r7, lr, r3                           #! PC = 0x8005368 *)
cast lr@sint32 lr;
smull tmp_h tmp_l lr r3;
uadds carry r12 tmp_l r12;
sadc r7 tmp_h r7 carry;
assert eqmod r12 0 (2**32) && true;
assume eq r12 0 && true;
(* add	r4, r6                                      #! PC = 0x800536c *)
add r4 r4 r6;
(* add	r5, r7                                      #! PC = 0x800536e *)
add r5 r5 r7;
(* sub.w	r6, r4, r6, lsl #1                        #! PC = 0x8005370 *)
shl tmp r6 1;
sub r6 r4 tmp;
(* sub.w	r7, r5, r7, lsl #1                        #! PC = 0x8005374 *)
shl tmp r7 1;
sub r7 r5 tmp;
(* smull	r12, r10, r10, r1                         #! PC = 0x8005378 *)
smull r10 r12 r10 r1;
(* mul.w	lr, r12, r2                               #! PC = 0x800537c *)
cast r12_s@sint32 r12;
mull discard lr r12_s r2;
(* smlal	r12, r10, lr, r3                          #! PC = 0x8005380 *)
cast lr@sint32 lr;
smull tmp_h tmp_l lr r3;
uadds carry r12 tmp_l r12;
sadc r10 tmp_h r10 carry;
assert eqmod r12 0 (2**32) && true;
assume eq r12 0 && true;
(* add	r4, r8                                      #! PC = 0x8005384 *)
add r4 r4 r8;
(* add	r5, r9                                      #! PC = 0x8005386 *)
add r5 r5 r9;
(* add	r6, r10                                     #! PC = 0x8005388 *)
add r6 r6 r10;
(* add	r7, r11                                     #! PC = 0x800538a *)
add r7 r7 r11;
(* sub.w	r8, r4, r8, lsl #1                        #! PC = 0x800538c *)
shl tmp r8 1;
sub r8 r4 tmp;
(* sub.w	r9, r5, r9, lsl #1                        #! PC = 0x8005390 *)
shl tmp r9 1;
sub r9 r5 tmp;
(* sub.w	r10, r6, r10, lsl #1                      #! PC = 0x8005394 *)
shl tmp r10 1;
sub r10 r6 tmp;
(* sub.w	r11, r7, r11, lsl #1                      #! PC = 0x8005398 *)
shl tmp r11 1;
sub r11 r7 tmp;
(* str.w	r8, [r0, #64]	; 0x40                      #! EA = L0x2001a390; PC = 0x800539c *)
mov L0x2001a390 r8;
(* str.w	r9, [r0, #80]	; 0x50                      #! EA = L0x2001a3a0; PC = 0x80053a0 *)
mov L0x2001a3a0 r9;
(* str.w	r10, [r0, #96]	; 0x60                     #! EA = L0x2001a3b0; PC = 0x80053a4 *)
mov L0x2001a3b0 r10;
(* str.w	r11, [r0, #112]	; 0x70                    #! EA = L0x2001a3c0; PC = 0x80053a8 *)
mov L0x2001a3c0 r11;
(* str.w	r5, [r0, #16]                             #! EA = L0x2001a360; PC = 0x80053ac *)
mov L0x2001a360 r5;
(* str.w	r6, [r0, #32]                             #! EA = L0x2001a370; PC = 0x80053b0 *)
mov L0x2001a370 r6;
(* str.w	r7, [r0, #48]	; 0x30                      #! EA = L0x2001a380; PC = 0x80053b4 *)
mov L0x2001a380 r7;
(* str.w	r4, [r0], #4                              #! EA = L0x2001a350; PC = 0x80053b8 *)
mov L0x2001a350 r4;
(* ldr.w	r8, [r0, #64]	; 0x40                      #! EA = L0x2001a394; Value = 0xfe84e6fd; PC = 0x80053bc *)
mov r8 L0x2001a394;
(* ldr.w	r5, [r0, #80]	; 0x50                      #! EA = L0x2001a3a4; Value = 0x00ae9abf; PC = 0x80053c0 *)
mov r5 L0x2001a3a4;
(* ldr.w	r10, [r0, #96]	; 0x60                     #! EA = L0x2001a3b4; Value = 0xff7aed44; PC = 0x80053c4 *)
mov r10 L0x2001a3b4;
(* ldr.w	r7, [r0, #112]	; 0x70                     #! EA = L0x2001a3c4; Value = 0x00cdcf08; PC = 0x80053c8 *)
mov r7 L0x2001a3c4;
(* add	r8, r5                                      #! PC = 0x80053cc *)
add r8 r8 r5;
(* add	r10, r7                                     #! PC = 0x80053ce *)
add r10 r10 r7;
(* sub.w	r5, r8, r5, lsl #1                        #! PC = 0x80053d0 *)
shl tmp r5 1;
sub r5 r8 tmp;
(* sub.w	r7, r10, r7, lsl #1                       #! PC = 0x80053d4 *)
shl tmp r7 1;
sub r7 r10 tmp;
(* add.w	r8, r8, r10                               #! PC = 0x80053d8 *)
add r8 r8 r10;
(* sub.w	r10, r8, r10, lsl #1                      #! PC = 0x80053dc *)
shl tmp r10 1;
sub r10 r8 tmp;
(* vmov	r12, s8                                    #! PC = 0x80053e0 *)
mov r12 s8;
(* vmov	lr, s10                                    #! PC = 0x80053e4 *)
mov lr s10;
(* smull	r4, r9, r5, r12                           #! PC = 0x80053e8 *)
smull r9 r4 r5 r12;
(* smlal	r4, r9, r7, lr                            #! PC = 0x80053ec *)
cast r7@sint32 r7;
smull tmp_h tmp_l r7 lr;
uadds carry r4 tmp_l r4;
sadc r9 tmp_h r9 carry;
(* mul.w	r1, r4, r2                                #! PC = 0x80053f0 *)
cast r4_s@sint32 r4;
mull discard r1 r4_s r2;
(* smlal	r4, r9, r1, r3                            #! PC = 0x80053f4 *)
cast r1@sint32 r1;
smull tmp_h tmp_l r1 r3;
uadds carry r4 tmp_l r4;
sadc r9 tmp_h r9 carry;
assert eqmod r4 0 (2**32) && true;
assume eq r4 0 && true;
(* smull	r6, r11, r5, lr                           #! PC = 0x80053f8 *)
smull r11 r6 r5 lr;
(* smlal	r6, r11, r7, r12                          #! PC = 0x80053fc *)
cast r7@sint32 r7;
smull tmp_h tmp_l r7 r12;
uadds carry r6 tmp_l r6;
sadc r11 tmp_h r11 carry;
(* mul.w	r1, r6, r2                                #! PC = 0x8005400 *)
cast r6_s@sint32 r6;
mull discard r1 r6_s r2;
(* smlal	r6, r11, r1, r3                           #! PC = 0x8005404 *)
cast r1@sint32 r1;
smull tmp_h tmp_l r1 r3;
uadds carry r6 tmp_l r6;
sadc r11 tmp_h r11 carry;
assert eqmod r6 0 (2**32) && true;
assume eq r6 0 && true;
(* ldr.w	r4, [r0]                                  #! EA = L0x2001a354; Value = 0x00ffac61; PC = 0x8005408 *)
mov r4 L0x2001a354;
(* ldr.w	r5, [r0, #16]                             #! EA = L0x2001a364; Value = 0xff8cf90b; PC = 0x800540c *)
mov r5 L0x2001a364;
(* ldr.w	r6, [r0, #32]                             #! EA = L0x2001a374; Value = 0x00969b11; PC = 0x8005410 *)
mov r6 L0x2001a374;
(* ldr.w	r7, [r0, #48]	; 0x30                      #! EA = L0x2001a384; Value = 0xffaebcee; PC = 0x8005414 *)
mov r7 L0x2001a384;
(* add	r4, r5                                      #! PC = 0x8005418 *)
add r4 r4 r5;
(* add	r6, r7                                      #! PC = 0x800541a *)
add r6 r6 r7;
(* sub.w	r5, r4, r5, lsl #1                        #! PC = 0x800541c *)
shl tmp r5 1;
sub r5 r4 tmp;
(* sub.w	r7, r6, r7, lsl #1                        #! PC = 0x8005420 *)
shl tmp r7 1;
sub r7 r6 tmp;
(* vmov	r1, s6                                     #! PC = 0x8005424 *)
mov r1 s6;
(* smull	r12, r7, r7, r1                           #! PC = 0x8005428 *)
smull r7 r12 r7 r1;
(* mul.w	lr, r12, r2                               #! PC = 0x800542c *)
cast r12_s@sint32 r12;
mull discard lr r12_s r2;
(* smlal	r12, r7, lr, r3                           #! PC = 0x8005430 *)
cast lr@sint32 lr;
smull tmp_h tmp_l lr r3;
uadds carry r12 tmp_l r12;
sadc r7 tmp_h r7 carry;
assert eqmod r12 0 (2**32) && true;
assume eq r12 0 && true;
(* add	r4, r6                                      #! PC = 0x8005434 *)
add r4 r4 r6;
(* add	r5, r7                                      #! PC = 0x8005436 *)
add r5 r5 r7;
(* sub.w	r6, r4, r6, lsl #1                        #! PC = 0x8005438 *)
shl tmp r6 1;
sub r6 r4 tmp;
(* sub.w	r7, r5, r7, lsl #1                        #! PC = 0x800543c *)
shl tmp r7 1;
sub r7 r5 tmp;
(* smull	r12, r10, r10, r1                         #! PC = 0x8005440 *)
smull r10 r12 r10 r1;
(* mul.w	lr, r12, r2                               #! PC = 0x8005444 *)
cast r12_s@sint32 r12;
mull discard lr r12_s r2;
(* smlal	r12, r10, lr, r3                          #! PC = 0x8005448 *)
cast lr@sint32 lr;
smull tmp_h tmp_l lr r3;
uadds carry r12 tmp_l r12;
sadc r10 tmp_h r10 carry;
assert eqmod r12 0 (2**32) && true;
assume eq r12 0 && true;
(* add	r4, r8                                      #! PC = 0x800544c *)
add r4 r4 r8;
(* add	r5, r9                                      #! PC = 0x800544e *)
add r5 r5 r9;
(* add	r6, r10                                     #! PC = 0x8005450 *)
add r6 r6 r10;
(* add	r7, r11                                     #! PC = 0x8005452 *)
add r7 r7 r11;
(* sub.w	r8, r4, r8, lsl #1                        #! PC = 0x8005454 *)
shl tmp r8 1;
sub r8 r4 tmp;
(* sub.w	r9, r5, r9, lsl #1                        #! PC = 0x8005458 *)
shl tmp r9 1;
sub r9 r5 tmp;
(* sub.w	r10, r6, r10, lsl #1                      #! PC = 0x800545c *)
shl tmp r10 1;
sub r10 r6 tmp;
(* sub.w	r11, r7, r11, lsl #1                      #! PC = 0x8005460 *)
shl tmp r11 1;
sub r11 r7 tmp;
(* str.w	r8, [r0, #64]	; 0x40                      #! EA = L0x2001a394; PC = 0x8005464 *)
mov L0x2001a394 r8;
(* str.w	r9, [r0, #80]	; 0x50                      #! EA = L0x2001a3a4; PC = 0x8005468 *)
mov L0x2001a3a4 r9;
(* str.w	r10, [r0, #96]	; 0x60                     #! EA = L0x2001a3b4; PC = 0x800546c *)
mov L0x2001a3b4 r10;
(* str.w	r11, [r0, #112]	; 0x70                    #! EA = L0x2001a3c4; PC = 0x8005470 *)
mov L0x2001a3c4 r11;
(* str.w	r5, [r0, #16]                             #! EA = L0x2001a364; PC = 0x8005474 *)
mov L0x2001a364 r5;
(* str.w	r6, [r0, #32]                             #! EA = L0x2001a374; PC = 0x8005478 *)
mov L0x2001a374 r6;
(* str.w	r7, [r0, #48]	; 0x30                      #! EA = L0x2001a384; PC = 0x800547c *)
mov L0x2001a384 r7;
(* str.w	r4, [r0], #4                              #! EA = L0x2001a354; PC = 0x8005480 *)
mov L0x2001a354 r4;
(* add.w	r0, r0, #112	; 0x70                       #! PC = 0x8005484 *)
adds discard r0 r0 112@uint32;
(* vmov	r12, s2                                    #! PC = 0x8005488 *)
mov r12 s2;
(* ldr.w	r8, [r0, #64]	; 0x40                      #! EA = L0x2001a408; Value = 0xff483200; PC = 0x8005164 *)
mov r8 L0x2001a408;
(* ldr.w	r5, [r0, #80]	; 0x50                      #! EA = L0x2001a418; Value = 0xfe682ef7; PC = 0x8005168 *)
mov r5 L0x2001a418;
(* ldr.w	r10, [r0, #96]	; 0x60                     #! EA = L0x2001a428; Value = 0x00872915; PC = 0x800516c *)
mov r10 L0x2001a428;
(* ldr.w	r7, [r0, #112]	; 0x70                     #! EA = L0x2001a438; Value = 0x007d2c5f; PC = 0x8005170 *)
mov r7 L0x2001a438;
(* add	r8, r5                                      #! PC = 0x8005174 *)
add r8 r8 r5;
(* add	r10, r7                                     #! PC = 0x8005176 *)
add r10 r10 r7;
(* sub.w	r5, r8, r5, lsl #1                        #! PC = 0x8005178 *)
shl tmp r5 1;
sub r5 r8 tmp;
(* sub.w	r7, r10, r7, lsl #1                       #! PC = 0x800517c *)
shl tmp r7 1;
sub r7 r10 tmp;
(* add.w	r8, r8, r10                               #! PC = 0x8005180 *)
add r8 r8 r10;
(* sub.w	r10, r8, r10, lsl #1                      #! PC = 0x8005184 *)
shl tmp r10 1;
sub r10 r8 tmp;
(* vmov	r12, s8                                    #! PC = 0x8005188 *)
mov r12 s8;
(* vmov	lr, s10                                    #! PC = 0x800518c *)
mov lr s10;
(* smull	r4, r9, r5, r12                           #! PC = 0x8005190 *)
smull r9 r4 r5 r12;
(* smlal	r4, r9, r7, lr                            #! PC = 0x8005194 *)
cast r7@sint32 r7;
smull tmp_h tmp_l r7 lr;
uadds carry r4 tmp_l r4;
sadc r9 tmp_h r9 carry;
(* mul.w	r1, r4, r2                                #! PC = 0x8005198 *)
cast r4_s@sint32 r4;
mull discard r1 r4_s r2;
(* smlal	r4, r9, r1, r3                            #! PC = 0x800519c *)
cast r1@sint32 r1;
smull tmp_h tmp_l r1 r3;
uadds carry r4 tmp_l r4;
sadc r9 tmp_h r9 carry;
assert eqmod r4 0 (2**32) && true;
assume eq r4 0 && true;
(* smull	r6, r11, r5, lr                           #! PC = 0x80051a0 *)
smull r11 r6 r5 lr;
(* smlal	r6, r11, r7, r12                          #! PC = 0x80051a4 *)
cast r7@sint32 r7;
smull tmp_h tmp_l r7 r12;
uadds carry r6 tmp_l r6;
sadc r11 tmp_h r11 carry;
(* mul.w	r1, r6, r2                                #! PC = 0x80051a8 *)
cast r6_s@sint32 r6;
mull discard r1 r6_s r2;
(* smlal	r6, r11, r1, r3                           #! PC = 0x80051ac *)
cast r1@sint32 r1;
smull tmp_h tmp_l r1 r3;
uadds carry r6 tmp_l r6;
sadc r11 tmp_h r11 carry;
assert eqmod r6 0 (2**32) && true;
assume eq r6 0 && true;
(* ldr.w	r4, [r0]                                  #! EA = L0x2001a3c8; Value = 0x0022b7e1; PC = 0x80051b0 *)
mov r4 L0x2001a3c8;
(* ldr.w	r5, [r0, #16]                             #! EA = L0x2001a3d8; Value = 0xff220440; PC = 0x80051b4 *)
mov r5 L0x2001a3d8;
(* ldr.w	r6, [r0, #32]                             #! EA = L0x2001a3e8; Value = 0x002dee73; PC = 0x80051b8 *)
mov r6 L0x2001a3e8;
(* ldr.w	r7, [r0, #48]	; 0x30                      #! EA = L0x2001a3f8; Value = 0x0175fc84; PC = 0x80051bc *)
mov r7 L0x2001a3f8;
(* add	r4, r5                                      #! PC = 0x80051c0 *)
add r4 r4 r5;
(* add	r6, r7                                      #! PC = 0x80051c2 *)
add r6 r6 r7;
(* sub.w	r5, r4, r5, lsl #1                        #! PC = 0x80051c4 *)
shl tmp r5 1;
sub r5 r4 tmp;
(* sub.w	r7, r6, r7, lsl #1                        #! PC = 0x80051c8 *)
shl tmp r7 1;
sub r7 r6 tmp;
(* vmov	r1, s6                                     #! PC = 0x80051cc *)
mov r1 s6;
(* smull	r12, r7, r7, r1                           #! PC = 0x80051d0 *)
smull r7 r12 r7 r1;
(* mul.w	lr, r12, r2                               #! PC = 0x80051d4 *)
cast r12_s@sint32 r12;
mull discard lr r12_s r2;
(* smlal	r12, r7, lr, r3                           #! PC = 0x80051d8 *)
cast lr@sint32 lr;
smull tmp_h tmp_l lr r3;
uadds carry r12 tmp_l r12;
sadc r7 tmp_h r7 carry;
assert eqmod r12 0 (2**32) && true;
assume eq r12 0 && true;
(* add	r4, r6                                      #! PC = 0x80051dc *)
add r4 r4 r6;
(* add	r5, r7                                      #! PC = 0x80051de *)
add r5 r5 r7;
(* sub.w	r6, r4, r6, lsl #1                        #! PC = 0x80051e0 *)
shl tmp r6 1;
sub r6 r4 tmp;
(* sub.w	r7, r5, r7, lsl #1                        #! PC = 0x80051e4 *)
shl tmp r7 1;
sub r7 r5 tmp;
(* smull	r12, r10, r10, r1                         #! PC = 0x80051e8 *)
smull r10 r12 r10 r1;
(* mul.w	lr, r12, r2                               #! PC = 0x80051ec *)
cast r12_s@sint32 r12;
mull discard lr r12_s r2;
(* smlal	r12, r10, lr, r3                          #! PC = 0x80051f0 *)
cast lr@sint32 lr;
smull tmp_h tmp_l lr r3;
uadds carry r12 tmp_l r12;
sadc r10 tmp_h r10 carry;
assert eqmod r12 0 (2**32) && true;
assume eq r12 0 && true;
(* add	r4, r8                                      #! PC = 0x80051f4 *)
add r4 r4 r8;
(* add	r5, r9                                      #! PC = 0x80051f6 *)
add r5 r5 r9;
(* add	r6, r10                                     #! PC = 0x80051f8 *)
add r6 r6 r10;
(* add	r7, r11                                     #! PC = 0x80051fa *)
add r7 r7 r11;
(* sub.w	r8, r4, r8, lsl #1                        #! PC = 0x80051fc *)
shl tmp r8 1;
sub r8 r4 tmp;
(* sub.w	r9, r5, r9, lsl #1                        #! PC = 0x8005200 *)
shl tmp r9 1;
sub r9 r5 tmp;
(* sub.w	r10, r6, r10, lsl #1                      #! PC = 0x8005204 *)
shl tmp r10 1;
sub r10 r6 tmp;
(* sub.w	r11, r7, r11, lsl #1                      #! PC = 0x8005208 *)
shl tmp r11 1;
sub r11 r7 tmp;
(* str.w	r8, [r0, #64]	; 0x40                      #! EA = L0x2001a408; PC = 0x800520c *)
mov L0x2001a408 r8;
(* str.w	r9, [r0, #80]	; 0x50                      #! EA = L0x2001a418; PC = 0x8005210 *)
mov L0x2001a418 r9;
(* str.w	r10, [r0, #96]	; 0x60                     #! EA = L0x2001a428; PC = 0x8005214 *)
mov L0x2001a428 r10;
(* str.w	r11, [r0, #112]	; 0x70                    #! EA = L0x2001a438; PC = 0x8005218 *)
mov L0x2001a438 r11;
(* str.w	r5, [r0, #16]                             #! EA = L0x2001a3d8; PC = 0x800521c *)
mov L0x2001a3d8 r5;
(* str.w	r6, [r0, #32]                             #! EA = L0x2001a3e8; PC = 0x8005220 *)
mov L0x2001a3e8 r6;
(* str.w	r7, [r0, #48]	; 0x30                      #! EA = L0x2001a3f8; PC = 0x8005224 *)
mov L0x2001a3f8 r7;
(* str.w	r4, [r0], #4                              #! EA = L0x2001a3c8; PC = 0x8005228 *)
mov L0x2001a3c8 r4;
(* ldr.w	r8, [r0, #64]	; 0x40                      #! EA = L0x2001a40c; Value = 0xff9fd03d; PC = 0x800522c *)
mov r8 L0x2001a40c;
(* ldr.w	r5, [r0, #80]	; 0x50                      #! EA = L0x2001a41c; Value = 0x00a26014; PC = 0x8005230 *)
mov r5 L0x2001a41c;
(* ldr.w	r10, [r0, #96]	; 0x60                     #! EA = L0x2001a42c; Value = 0x00d73d94; PC = 0x8005234 *)
mov r10 L0x2001a42c;
(* ldr.w	r7, [r0, #112]	; 0x70                     #! EA = L0x2001a43c; Value = 0xff8a7053; PC = 0x8005238 *)
mov r7 L0x2001a43c;
(* add	r8, r5                                      #! PC = 0x800523c *)
add r8 r8 r5;
(* add	r10, r7                                     #! PC = 0x800523e *)
add r10 r10 r7;
(* sub.w	r5, r8, r5, lsl #1                        #! PC = 0x8005240 *)
shl tmp r5 1;
sub r5 r8 tmp;
(* sub.w	r7, r10, r7, lsl #1                       #! PC = 0x8005244 *)
shl tmp r7 1;
sub r7 r10 tmp;
(* add.w	r8, r8, r10                               #! PC = 0x8005248 *)
add r8 r8 r10;
(* sub.w	r10, r8, r10, lsl #1                      #! PC = 0x800524c *)
shl tmp r10 1;
sub r10 r8 tmp;
(* vmov	r12, s8                                    #! PC = 0x8005250 *)
mov r12 s8;
(* vmov	lr, s10                                    #! PC = 0x8005254 *)
mov lr s10;
(* smull	r4, r9, r5, r12                           #! PC = 0x8005258 *)
smull r9 r4 r5 r12;
(* smlal	r4, r9, r7, lr                            #! PC = 0x800525c *)
cast r7@sint32 r7;
smull tmp_h tmp_l r7 lr;
uadds carry r4 tmp_l r4;
sadc r9 tmp_h r9 carry;
(* mul.w	r1, r4, r2                                #! PC = 0x8005260 *)
cast r4_s@sint32 r4;
mull discard r1 r4_s r2;
(* smlal	r4, r9, r1, r3                            #! PC = 0x8005264 *)
cast r1@sint32 r1;
smull tmp_h tmp_l r1 r3;
uadds carry r4 tmp_l r4;
sadc r9 tmp_h r9 carry;
assert eqmod r4 0 (2**32) && true;
assume eq r4 0 && true;
(* smull	r6, r11, r5, lr                           #! PC = 0x8005268 *)
smull r11 r6 r5 lr;
(* smlal	r6, r11, r7, r12                          #! PC = 0x800526c *)
cast r7@sint32 r7;
smull tmp_h tmp_l r7 r12;
uadds carry r6 tmp_l r6;
sadc r11 tmp_h r11 carry;
(* mul.w	r1, r6, r2                                #! PC = 0x8005270 *)
cast r6_s@sint32 r6;
mull discard r1 r6_s r2;
(* smlal	r6, r11, r1, r3                           #! PC = 0x8005274 *)
cast r1@sint32 r1;
smull tmp_h tmp_l r1 r3;
uadds carry r6 tmp_l r6;
sadc r11 tmp_h r11 carry;
assert eqmod r6 0 (2**32) && true;
assume eq r6 0 && true;
(* ldr.w	r4, [r0]                                  #! EA = L0x2001a3cc; Value = 0x00c1a881; PC = 0x8005278 *)
mov r4 L0x2001a3cc;
(* ldr.w	r5, [r0, #16]                             #! EA = L0x2001a3dc; Value = 0x0055779a; PC = 0x800527c *)
mov r5 L0x2001a3dc;
(* ldr.w	r6, [r0, #32]                             #! EA = L0x2001a3ec; Value = 0xffed73c3; PC = 0x8005280 *)
mov r6 L0x2001a3ec;
(* ldr.w	r7, [r0, #48]	; 0x30                      #! EA = L0x2001a3fc; Value = 0x0128a577; PC = 0x8005284 *)
mov r7 L0x2001a3fc;
(* add	r4, r5                                      #! PC = 0x8005288 *)
add r4 r4 r5;
(* add	r6, r7                                      #! PC = 0x800528a *)
add r6 r6 r7;
(* sub.w	r5, r4, r5, lsl #1                        #! PC = 0x800528c *)
shl tmp r5 1;
sub r5 r4 tmp;
(* sub.w	r7, r6, r7, lsl #1                        #! PC = 0x8005290 *)
shl tmp r7 1;
sub r7 r6 tmp;
(* vmov	r1, s6                                     #! PC = 0x8005294 *)
mov r1 s6;
(* smull	r12, r7, r7, r1                           #! PC = 0x8005298 *)
smull r7 r12 r7 r1;
(* mul.w	lr, r12, r2                               #! PC = 0x800529c *)
cast r12_s@sint32 r12;
mull discard lr r12_s r2;
(* smlal	r12, r7, lr, r3                           #! PC = 0x80052a0 *)
cast lr@sint32 lr;
smull tmp_h tmp_l lr r3;
uadds carry r12 tmp_l r12;
sadc r7 tmp_h r7 carry;
assert eqmod r12 0 (2**32) && true;
assume eq r12 0 && true;
(* add	r4, r6                                      #! PC = 0x80052a4 *)
add r4 r4 r6;
(* add	r5, r7                                      #! PC = 0x80052a6 *)
add r5 r5 r7;
(* sub.w	r6, r4, r6, lsl #1                        #! PC = 0x80052a8 *)
shl tmp r6 1;
sub r6 r4 tmp;
(* sub.w	r7, r5, r7, lsl #1                        #! PC = 0x80052ac *)
shl tmp r7 1;
sub r7 r5 tmp;
(* smull	r12, r10, r10, r1                         #! PC = 0x80052b0 *)
smull r10 r12 r10 r1;
(* mul.w	lr, r12, r2                               #! PC = 0x80052b4 *)
cast r12_s@sint32 r12;
mull discard lr r12_s r2;
(* smlal	r12, r10, lr, r3                          #! PC = 0x80052b8 *)
cast lr@sint32 lr;
smull tmp_h tmp_l lr r3;
uadds carry r12 tmp_l r12;
sadc r10 tmp_h r10 carry;
assert eqmod r12 0 (2**32) && true;
assume eq r12 0 && true;
(* add	r4, r8                                      #! PC = 0x80052bc *)
add r4 r4 r8;
(* add	r5, r9                                      #! PC = 0x80052be *)
add r5 r5 r9;
(* add	r6, r10                                     #! PC = 0x80052c0 *)
add r6 r6 r10;
(* add	r7, r11                                     #! PC = 0x80052c2 *)
add r7 r7 r11;
(* sub.w	r8, r4, r8, lsl #1                        #! PC = 0x80052c4 *)
shl tmp r8 1;
sub r8 r4 tmp;
(* sub.w	r9, r5, r9, lsl #1                        #! PC = 0x80052c8 *)
shl tmp r9 1;
sub r9 r5 tmp;
(* sub.w	r10, r6, r10, lsl #1                      #! PC = 0x80052cc *)
shl tmp r10 1;
sub r10 r6 tmp;
(* sub.w	r11, r7, r11, lsl #1                      #! PC = 0x80052d0 *)
shl tmp r11 1;
sub r11 r7 tmp;
(* str.w	r8, [r0, #64]	; 0x40                      #! EA = L0x2001a40c; PC = 0x80052d4 *)
mov L0x2001a40c r8;
(* str.w	r9, [r0, #80]	; 0x50                      #! EA = L0x2001a41c; PC = 0x80052d8 *)
mov L0x2001a41c r9;
(* str.w	r10, [r0, #96]	; 0x60                     #! EA = L0x2001a42c; PC = 0x80052dc *)
mov L0x2001a42c r10;
(* str.w	r11, [r0, #112]	; 0x70                    #! EA = L0x2001a43c; PC = 0x80052e0 *)
mov L0x2001a43c r11;
(* str.w	r5, [r0, #16]                             #! EA = L0x2001a3dc; PC = 0x80052e4 *)
mov L0x2001a3dc r5;
(* str.w	r6, [r0, #32]                             #! EA = L0x2001a3ec; PC = 0x80052e8 *)
mov L0x2001a3ec r6;
(* str.w	r7, [r0, #48]	; 0x30                      #! EA = L0x2001a3fc; PC = 0x80052ec *)
mov L0x2001a3fc r7;
(* str.w	r4, [r0], #4                              #! EA = L0x2001a3cc; PC = 0x80052f0 *)
mov L0x2001a3cc r4;
(* ldr.w	r8, [r0, #64]	; 0x40                      #! EA = L0x2001a410; Value = 0xff6259d5; PC = 0x80052f4 *)
mov r8 L0x2001a410;
(* ldr.w	r5, [r0, #80]	; 0x50                      #! EA = L0x2001a420; Value = 0x0067ff31; PC = 0x80052f8 *)
mov r5 L0x2001a420;
(* ldr.w	r10, [r0, #96]	; 0x60                     #! EA = L0x2001a430; Value = 0x003b7896; PC = 0x80052fc *)
mov r10 L0x2001a430;
(* ldr.w	r7, [r0, #112]	; 0x70                     #! EA = L0x2001a440; Value = 0xff2201a6; PC = 0x8005300 *)
mov r7 L0x2001a440;
(* add	r8, r5                                      #! PC = 0x8005304 *)
add r8 r8 r5;
(* add	r10, r7                                     #! PC = 0x8005306 *)
add r10 r10 r7;
(* sub.w	r5, r8, r5, lsl #1                        #! PC = 0x8005308 *)
shl tmp r5 1;
sub r5 r8 tmp;
(* sub.w	r7, r10, r7, lsl #1                       #! PC = 0x800530c *)
shl tmp r7 1;
sub r7 r10 tmp;
(* add.w	r8, r8, r10                               #! PC = 0x8005310 *)
add r8 r8 r10;
(* sub.w	r10, r8, r10, lsl #1                      #! PC = 0x8005314 *)
shl tmp r10 1;
sub r10 r8 tmp;
(* vmov	r12, s8                                    #! PC = 0x8005318 *)
mov r12 s8;
(* vmov	lr, s10                                    #! PC = 0x800531c *)
mov lr s10;
(* smull	r4, r9, r5, r12                           #! PC = 0x8005320 *)
smull r9 r4 r5 r12;
(* smlal	r4, r9, r7, lr                            #! PC = 0x8005324 *)
cast r7@sint32 r7;
smull tmp_h tmp_l r7 lr;
uadds carry r4 tmp_l r4;
sadc r9 tmp_h r9 carry;
(* mul.w	r1, r4, r2                                #! PC = 0x8005328 *)
cast r4_s@sint32 r4;
mull discard r1 r4_s r2;
(* smlal	r4, r9, r1, r3                            #! PC = 0x800532c *)
cast r1@sint32 r1;
smull tmp_h tmp_l r1 r3;
uadds carry r4 tmp_l r4;
sadc r9 tmp_h r9 carry;
assert eqmod r4 0 (2**32) && true;
assume eq r4 0 && true;
(* smull	r6, r11, r5, lr                           #! PC = 0x8005330 *)
smull r11 r6 r5 lr;
(* smlal	r6, r11, r7, r12                          #! PC = 0x8005334 *)
cast r7@sint32 r7;
smull tmp_h tmp_l r7 r12;
uadds carry r6 tmp_l r6;
sadc r11 tmp_h r11 carry;
(* mul.w	r1, r6, r2                                #! PC = 0x8005338 *)
cast r6_s@sint32 r6;
mull discard r1 r6_s r2;
(* smlal	r6, r11, r1, r3                           #! PC = 0x800533c *)
cast r1@sint32 r1;
smull tmp_h tmp_l r1 r3;
uadds carry r6 tmp_l r6;
sadc r11 tmp_h r11 carry;
assert eqmod r6 0 (2**32) && true;
assume eq r6 0 && true;
(* ldr.w	r4, [r0]                                  #! EA = L0x2001a3d0; Value = 0xff3a9882; PC = 0x8005340 *)
mov r4 L0x2001a3d0;
(* ldr.w	r5, [r0, #16]                             #! EA = L0x2001a3e0; Value = 0x01831856; PC = 0x8005344 *)
mov r5 L0x2001a3e0;
(* ldr.w	r6, [r0, #32]                             #! EA = L0x2001a3f0; Value = 0xff59917b; PC = 0x8005348 *)
mov r6 L0x2001a3f0;
(* ldr.w	r7, [r0, #48]	; 0x30                      #! EA = L0x2001a400; Value = 0xffb7bd82; PC = 0x800534c *)
mov r7 L0x2001a400;
(* add	r4, r5                                      #! PC = 0x8005350 *)
add r4 r4 r5;
(* add	r6, r7                                      #! PC = 0x8005352 *)
add r6 r6 r7;
(* sub.w	r5, r4, r5, lsl #1                        #! PC = 0x8005354 *)
shl tmp r5 1;
sub r5 r4 tmp;
(* sub.w	r7, r6, r7, lsl #1                        #! PC = 0x8005358 *)
shl tmp r7 1;
sub r7 r6 tmp;
(* vmov	r1, s6                                     #! PC = 0x800535c *)
mov r1 s6;
(* smull	r12, r7, r7, r1                           #! PC = 0x8005360 *)
smull r7 r12 r7 r1;
(* mul.w	lr, r12, r2                               #! PC = 0x8005364 *)
cast r12_s@sint32 r12;
mull discard lr r12_s r2;
(* smlal	r12, r7, lr, r3                           #! PC = 0x8005368 *)
cast lr@sint32 lr;
smull tmp_h tmp_l lr r3;
uadds carry r12 tmp_l r12;
sadc r7 tmp_h r7 carry;
assert eqmod r12 0 (2**32) && true;
assume eq r12 0 && true;
(* add	r4, r6                                      #! PC = 0x800536c *)
add r4 r4 r6;
(* add	r5, r7                                      #! PC = 0x800536e *)
add r5 r5 r7;
(* sub.w	r6, r4, r6, lsl #1                        #! PC = 0x8005370 *)
shl tmp r6 1;
sub r6 r4 tmp;
(* sub.w	r7, r5, r7, lsl #1                        #! PC = 0x8005374 *)
shl tmp r7 1;
sub r7 r5 tmp;
(* smull	r12, r10, r10, r1                         #! PC = 0x8005378 *)
smull r10 r12 r10 r1;
(* mul.w	lr, r12, r2                               #! PC = 0x800537c *)
cast r12_s@sint32 r12;
mull discard lr r12_s r2;
(* smlal	r12, r10, lr, r3                          #! PC = 0x8005380 *)
cast lr@sint32 lr;
smull tmp_h tmp_l lr r3;
uadds carry r12 tmp_l r12;
sadc r10 tmp_h r10 carry;
assert eqmod r12 0 (2**32) && true;
assume eq r12 0 && true;
(* add	r4, r8                                      #! PC = 0x8005384 *)
add r4 r4 r8;
(* add	r5, r9                                      #! PC = 0x8005386 *)
add r5 r5 r9;
(* add	r6, r10                                     #! PC = 0x8005388 *)
add r6 r6 r10;
(* add	r7, r11                                     #! PC = 0x800538a *)
add r7 r7 r11;
(* sub.w	r8, r4, r8, lsl #1                        #! PC = 0x800538c *)
shl tmp r8 1;
sub r8 r4 tmp;
(* sub.w	r9, r5, r9, lsl #1                        #! PC = 0x8005390 *)
shl tmp r9 1;
sub r9 r5 tmp;
(* sub.w	r10, r6, r10, lsl #1                      #! PC = 0x8005394 *)
shl tmp r10 1;
sub r10 r6 tmp;
(* sub.w	r11, r7, r11, lsl #1                      #! PC = 0x8005398 *)
shl tmp r11 1;
sub r11 r7 tmp;
(* str.w	r8, [r0, #64]	; 0x40                      #! EA = L0x2001a410; PC = 0x800539c *)
mov L0x2001a410 r8;
(* str.w	r9, [r0, #80]	; 0x50                      #! EA = L0x2001a420; PC = 0x80053a0 *)
mov L0x2001a420 r9;
(* str.w	r10, [r0, #96]	; 0x60                     #! EA = L0x2001a430; PC = 0x80053a4 *)
mov L0x2001a430 r10;
(* str.w	r11, [r0, #112]	; 0x70                    #! EA = L0x2001a440; PC = 0x80053a8 *)
mov L0x2001a440 r11;
(* str.w	r5, [r0, #16]                             #! EA = L0x2001a3e0; PC = 0x80053ac *)
mov L0x2001a3e0 r5;
(* str.w	r6, [r0, #32]                             #! EA = L0x2001a3f0; PC = 0x80053b0 *)
mov L0x2001a3f0 r6;
(* str.w	r7, [r0, #48]	; 0x30                      #! EA = L0x2001a400; PC = 0x80053b4 *)
mov L0x2001a400 r7;
(* str.w	r4, [r0], #4                              #! EA = L0x2001a3d0; PC = 0x80053b8 *)
mov L0x2001a3d0 r4;
(* ldr.w	r8, [r0, #64]	; 0x40                      #! EA = L0x2001a414; Value = 0xffa65b11; PC = 0x80053bc *)
mov r8 L0x2001a414;
(* ldr.w	r5, [r0, #80]	; 0x50                      #! EA = L0x2001a424; Value = 0xff18e499; PC = 0x80053c0 *)
mov r5 L0x2001a424;
(* ldr.w	r10, [r0, #96]	; 0x60                     #! EA = L0x2001a434; Value = 0x0073893f; PC = 0x80053c4 *)
mov r10 L0x2001a434;
(* ldr.w	r7, [r0, #112]	; 0x70                     #! EA = L0x2001a444; Value = 0xffeadc7b; PC = 0x80053c8 *)
mov r7 L0x2001a444;
(* add	r8, r5                                      #! PC = 0x80053cc *)
add r8 r8 r5;
(* add	r10, r7                                     #! PC = 0x80053ce *)
add r10 r10 r7;
(* sub.w	r5, r8, r5, lsl #1                        #! PC = 0x80053d0 *)
shl tmp r5 1;
sub r5 r8 tmp;
(* sub.w	r7, r10, r7, lsl #1                       #! PC = 0x80053d4 *)
shl tmp r7 1;
sub r7 r10 tmp;
(* add.w	r8, r8, r10                               #! PC = 0x80053d8 *)
add r8 r8 r10;
(* sub.w	r10, r8, r10, lsl #1                      #! PC = 0x80053dc *)
shl tmp r10 1;
sub r10 r8 tmp;
(* vmov	r12, s8                                    #! PC = 0x80053e0 *)
mov r12 s8;
(* vmov	lr, s10                                    #! PC = 0x80053e4 *)
mov lr s10;
(* smull	r4, r9, r5, r12                           #! PC = 0x80053e8 *)
smull r9 r4 r5 r12;
(* smlal	r4, r9, r7, lr                            #! PC = 0x80053ec *)
cast r7@sint32 r7;
smull tmp_h tmp_l r7 lr;
uadds carry r4 tmp_l r4;
sadc r9 tmp_h r9 carry;
(* mul.w	r1, r4, r2                                #! PC = 0x80053f0 *)
cast r4_s@sint32 r4;
mull discard r1 r4_s r2;
(* smlal	r4, r9, r1, r3                            #! PC = 0x80053f4 *)
cast r1@sint32 r1;
smull tmp_h tmp_l r1 r3;
uadds carry r4 tmp_l r4;
sadc r9 tmp_h r9 carry;
assert eqmod r4 0 (2**32) && true;
assume eq r4 0 && true;
(* smull	r6, r11, r5, lr                           #! PC = 0x80053f8 *)
smull r11 r6 r5 lr;
(* smlal	r6, r11, r7, r12                          #! PC = 0x80053fc *)
cast r7@sint32 r7;
smull tmp_h tmp_l r7 r12;
uadds carry r6 tmp_l r6;
sadc r11 tmp_h r11 carry;
(* mul.w	r1, r6, r2                                #! PC = 0x8005400 *)
cast r6_s@sint32 r6;
mull discard r1 r6_s r2;
(* smlal	r6, r11, r1, r3                           #! PC = 0x8005404 *)
cast r1@sint32 r1;
smull tmp_h tmp_l r1 r3;
uadds carry r6 tmp_l r6;
sadc r11 tmp_h r11 carry;
assert eqmod r6 0 (2**32) && true;
assume eq r6 0 && true;
(* ldr.w	r4, [r0]                                  #! EA = L0x2001a3d4; Value = 0xffcbe1a7; PC = 0x8005408 *)
mov r4 L0x2001a3d4;
(* ldr.w	r5, [r0, #16]                             #! EA = L0x2001a3e4; Value = 0xffece7c9; PC = 0x800540c *)
mov r5 L0x2001a3e4;
(* ldr.w	r6, [r0, #32]                             #! EA = L0x2001a3f4; Value = 0x01194f44; PC = 0x8005410 *)
mov r6 L0x2001a3f4;
(* ldr.w	r7, [r0, #48]	; 0x30                      #! EA = L0x2001a404; Value = 0x001cbf66; PC = 0x8005414 *)
mov r7 L0x2001a404;
(* add	r4, r5                                      #! PC = 0x8005418 *)
add r4 r4 r5;
(* add	r6, r7                                      #! PC = 0x800541a *)
add r6 r6 r7;
(* sub.w	r5, r4, r5, lsl #1                        #! PC = 0x800541c *)
shl tmp r5 1;
sub r5 r4 tmp;
(* sub.w	r7, r6, r7, lsl #1                        #! PC = 0x8005420 *)
shl tmp r7 1;
sub r7 r6 tmp;
(* vmov	r1, s6                                     #! PC = 0x8005424 *)
mov r1 s6;
(* smull	r12, r7, r7, r1                           #! PC = 0x8005428 *)
smull r7 r12 r7 r1;
(* mul.w	lr, r12, r2                               #! PC = 0x800542c *)
cast r12_s@sint32 r12;
mull discard lr r12_s r2;
(* smlal	r12, r7, lr, r3                           #! PC = 0x8005430 *)
cast lr@sint32 lr;
smull tmp_h tmp_l lr r3;
uadds carry r12 tmp_l r12;
sadc r7 tmp_h r7 carry;
assert eqmod r12 0 (2**32) && true;
assume eq r12 0 && true;
(* add	r4, r6                                      #! PC = 0x8005434 *)
add r4 r4 r6;
(* add	r5, r7                                      #! PC = 0x8005436 *)
add r5 r5 r7;
(* sub.w	r6, r4, r6, lsl #1                        #! PC = 0x8005438 *)
shl tmp r6 1;
sub r6 r4 tmp;
(* sub.w	r7, r5, r7, lsl #1                        #! PC = 0x800543c *)
shl tmp r7 1;
sub r7 r5 tmp;
(* smull	r12, r10, r10, r1                         #! PC = 0x8005440 *)
smull r10 r12 r10 r1;
(* mul.w	lr, r12, r2                               #! PC = 0x8005444 *)
cast r12_s@sint32 r12;
mull discard lr r12_s r2;
(* smlal	r12, r10, lr, r3                          #! PC = 0x8005448 *)
cast lr@sint32 lr;
smull tmp_h tmp_l lr r3;
uadds carry r12 tmp_l r12;
sadc r10 tmp_h r10 carry;
assert eqmod r12 0 (2**32) && true;
assume eq r12 0 && true;
(* add	r4, r8                                      #! PC = 0x800544c *)
add r4 r4 r8;
(* add	r5, r9                                      #! PC = 0x800544e *)
add r5 r5 r9;
(* add	r6, r10                                     #! PC = 0x8005450 *)
add r6 r6 r10;
(* add	r7, r11                                     #! PC = 0x8005452 *)
add r7 r7 r11;
(* sub.w	r8, r4, r8, lsl #1                        #! PC = 0x8005454 *)
shl tmp r8 1;
sub r8 r4 tmp;
(* sub.w	r9, r5, r9, lsl #1                        #! PC = 0x8005458 *)
shl tmp r9 1;
sub r9 r5 tmp;
(* sub.w	r10, r6, r10, lsl #1                      #! PC = 0x800545c *)
shl tmp r10 1;
sub r10 r6 tmp;
(* sub.w	r11, r7, r11, lsl #1                      #! PC = 0x8005460 *)
shl tmp r11 1;
sub r11 r7 tmp;
(* str.w	r8, [r0, #64]	; 0x40                      #! EA = L0x2001a414; PC = 0x8005464 *)
mov L0x2001a414 r8;
(* str.w	r9, [r0, #80]	; 0x50                      #! EA = L0x2001a424; PC = 0x8005468 *)
mov L0x2001a424 r9;
(* str.w	r10, [r0, #96]	; 0x60                     #! EA = L0x2001a434; PC = 0x800546c *)
mov L0x2001a434 r10;
(* str.w	r11, [r0, #112]	; 0x70                    #! EA = L0x2001a444; PC = 0x8005470 *)
mov L0x2001a444 r11;
(* str.w	r5, [r0, #16]                             #! EA = L0x2001a3e4; PC = 0x8005474 *)
mov L0x2001a3e4 r5;
(* str.w	r6, [r0, #32]                             #! EA = L0x2001a3f4; PC = 0x8005478 *)
mov L0x2001a3f4 r6;
(* str.w	r7, [r0, #48]	; 0x30                      #! EA = L0x2001a404; PC = 0x800547c *)
mov L0x2001a404 r7;
(* str.w	r4, [r0], #4                              #! EA = L0x2001a3d4; PC = 0x8005480 *)
mov L0x2001a3d4 r4;
(* add.w	r0, r0, #112	; 0x70                       #! PC = 0x8005484 *)
adds discard r0 r0 112@uint32;
(* vmov	r12, s2                                    #! PC = 0x8005488 *)
mov r12 s2;
(* ldr.w	r8, [r0, #64]	; 0x40                      #! EA = L0x2001a488; Value = 0x004cb523; PC = 0x8005164 *)
mov r8 L0x2001a488;
(* ldr.w	r5, [r0, #80]	; 0x50                      #! EA = L0x2001a498; Value = 0xff6902ff; PC = 0x8005168 *)
mov r5 L0x2001a498;
(* ldr.w	r10, [r0, #96]	; 0x60                     #! EA = L0x2001a4a8; Value = 0xff35279b; PC = 0x800516c *)
mov r10 L0x2001a4a8;
(* ldr.w	r7, [r0, #112]	; 0x70                     #! EA = L0x2001a4b8; Value = 0x001456a8; PC = 0x8005170 *)
mov r7 L0x2001a4b8;
(* add	r8, r5                                      #! PC = 0x8005174 *)
add r8 r8 r5;
(* add	r10, r7                                     #! PC = 0x8005176 *)
add r10 r10 r7;
(* sub.w	r5, r8, r5, lsl #1                        #! PC = 0x8005178 *)
shl tmp r5 1;
sub r5 r8 tmp;
(* sub.w	r7, r10, r7, lsl #1                       #! PC = 0x800517c *)
shl tmp r7 1;
sub r7 r10 tmp;
(* add.w	r8, r8, r10                               #! PC = 0x8005180 *)
add r8 r8 r10;
(* sub.w	r10, r8, r10, lsl #1                      #! PC = 0x8005184 *)
shl tmp r10 1;
sub r10 r8 tmp;
(* vmov	r12, s8                                    #! PC = 0x8005188 *)
mov r12 s8;
(* vmov	lr, s10                                    #! PC = 0x800518c *)
mov lr s10;
(* smull	r4, r9, r5, r12                           #! PC = 0x8005190 *)
smull r9 r4 r5 r12;
(* smlal	r4, r9, r7, lr                            #! PC = 0x8005194 *)
cast r7@sint32 r7;
smull tmp_h tmp_l r7 lr;
uadds carry r4 tmp_l r4;
sadc r9 tmp_h r9 carry;
(* mul.w	r1, r4, r2                                #! PC = 0x8005198 *)
cast r4_s@sint32 r4;
mull discard r1 r4_s r2;
(* smlal	r4, r9, r1, r3                            #! PC = 0x800519c *)
cast r1@sint32 r1;
smull tmp_h tmp_l r1 r3;
uadds carry r4 tmp_l r4;
sadc r9 tmp_h r9 carry;
assert eqmod r4 0 (2**32) && true;
assume eq r4 0 && true;
(* smull	r6, r11, r5, lr                           #! PC = 0x80051a0 *)
smull r11 r6 r5 lr;
(* smlal	r6, r11, r7, r12                          #! PC = 0x80051a4 *)
cast r7@sint32 r7;
smull tmp_h tmp_l r7 r12;
uadds carry r6 tmp_l r6;
sadc r11 tmp_h r11 carry;
(* mul.w	r1, r6, r2                                #! PC = 0x80051a8 *)
cast r6_s@sint32 r6;
mull discard r1 r6_s r2;
(* smlal	r6, r11, r1, r3                           #! PC = 0x80051ac *)
cast r1@sint32 r1;
smull tmp_h tmp_l r1 r3;
uadds carry r6 tmp_l r6;
sadc r11 tmp_h r11 carry;
assert eqmod r6 0 (2**32) && true;
assume eq r6 0 && true;
(* ldr.w	r4, [r0]                                  #! EA = L0x2001a448; Value = 0xff661cd8; PC = 0x80051b0 *)
mov r4 L0x2001a448;
(* ldr.w	r5, [r0, #16]                             #! EA = L0x2001a458; Value = 0xff2342d1; PC = 0x80051b4 *)
mov r5 L0x2001a458;
(* ldr.w	r6, [r0, #32]                             #! EA = L0x2001a468; Value = 0x003c1e72; PC = 0x80051b8 *)
mov r6 L0x2001a468;
(* ldr.w	r7, [r0, #48]	; 0x30                      #! EA = L0x2001a478; Value = 0x0066b736; PC = 0x80051bc *)
mov r7 L0x2001a478;
(* add	r4, r5                                      #! PC = 0x80051c0 *)
add r4 r4 r5;
(* add	r6, r7                                      #! PC = 0x80051c2 *)
add r6 r6 r7;
(* sub.w	r5, r4, r5, lsl #1                        #! PC = 0x80051c4 *)
shl tmp r5 1;
sub r5 r4 tmp;
(* sub.w	r7, r6, r7, lsl #1                        #! PC = 0x80051c8 *)
shl tmp r7 1;
sub r7 r6 tmp;
(* vmov	r1, s6                                     #! PC = 0x80051cc *)
mov r1 s6;
(* smull	r12, r7, r7, r1                           #! PC = 0x80051d0 *)
smull r7 r12 r7 r1;
(* mul.w	lr, r12, r2                               #! PC = 0x80051d4 *)
cast r12_s@sint32 r12;
mull discard lr r12_s r2;
(* smlal	r12, r7, lr, r3                           #! PC = 0x80051d8 *)
cast lr@sint32 lr;
smull tmp_h tmp_l lr r3;
uadds carry r12 tmp_l r12;
sadc r7 tmp_h r7 carry;
assert eqmod r12 0 (2**32) && true;
assume eq r12 0 && true;
(* add	r4, r6                                      #! PC = 0x80051dc *)
add r4 r4 r6;
(* add	r5, r7                                      #! PC = 0x80051de *)
add r5 r5 r7;
(* sub.w	r6, r4, r6, lsl #1                        #! PC = 0x80051e0 *)
shl tmp r6 1;
sub r6 r4 tmp;
(* sub.w	r7, r5, r7, lsl #1                        #! PC = 0x80051e4 *)
shl tmp r7 1;
sub r7 r5 tmp;
(* smull	r12, r10, r10, r1                         #! PC = 0x80051e8 *)
smull r10 r12 r10 r1;
(* mul.w	lr, r12, r2                               #! PC = 0x80051ec *)
cast r12_s@sint32 r12;
mull discard lr r12_s r2;
(* smlal	r12, r10, lr, r3                          #! PC = 0x80051f0 *)
cast lr@sint32 lr;
smull tmp_h tmp_l lr r3;
uadds carry r12 tmp_l r12;
sadc r10 tmp_h r10 carry;
assert eqmod r12 0 (2**32) && true;
assume eq r12 0 && true;
(* add	r4, r8                                      #! PC = 0x80051f4 *)
add r4 r4 r8;
(* add	r5, r9                                      #! PC = 0x80051f6 *)
add r5 r5 r9;
(* add	r6, r10                                     #! PC = 0x80051f8 *)
add r6 r6 r10;
(* add	r7, r11                                     #! PC = 0x80051fa *)
add r7 r7 r11;
(* sub.w	r8, r4, r8, lsl #1                        #! PC = 0x80051fc *)
shl tmp r8 1;
sub r8 r4 tmp;
(* sub.w	r9, r5, r9, lsl #1                        #! PC = 0x8005200 *)
shl tmp r9 1;
sub r9 r5 tmp;
(* sub.w	r10, r6, r10, lsl #1                      #! PC = 0x8005204 *)
shl tmp r10 1;
sub r10 r6 tmp;
(* sub.w	r11, r7, r11, lsl #1                      #! PC = 0x8005208 *)
shl tmp r11 1;
sub r11 r7 tmp;
(* str.w	r8, [r0, #64]	; 0x40                      #! EA = L0x2001a488; PC = 0x800520c *)
mov L0x2001a488 r8;
(* str.w	r9, [r0, #80]	; 0x50                      #! EA = L0x2001a498; PC = 0x8005210 *)
mov L0x2001a498 r9;
(* str.w	r10, [r0, #96]	; 0x60                     #! EA = L0x2001a4a8; PC = 0x8005214 *)
mov L0x2001a4a8 r10;
(* str.w	r11, [r0, #112]	; 0x70                    #! EA = L0x2001a4b8; PC = 0x8005218 *)
mov L0x2001a4b8 r11;
(* str.w	r5, [r0, #16]                             #! EA = L0x2001a458; PC = 0x800521c *)
mov L0x2001a458 r5;
(* str.w	r6, [r0, #32]                             #! EA = L0x2001a468; PC = 0x8005220 *)
mov L0x2001a468 r6;
(* str.w	r7, [r0, #48]	; 0x30                      #! EA = L0x2001a478; PC = 0x8005224 *)
mov L0x2001a478 r7;
(* str.w	r4, [r0], #4                              #! EA = L0x2001a448; PC = 0x8005228 *)
mov L0x2001a448 r4;
(* ldr.w	r8, [r0, #64]	; 0x40                      #! EA = L0x2001a48c; Value = 0x0141c39c; PC = 0x800522c *)
mov r8 L0x2001a48c;
(* ldr.w	r5, [r0, #80]	; 0x50                      #! EA = L0x2001a49c; Value = 0x00f17803; PC = 0x8005230 *)
mov r5 L0x2001a49c;
(* ldr.w	r10, [r0, #96]	; 0x60                     #! EA = L0x2001a4ac; Value = 0x002c7086; PC = 0x8005234 *)
mov r10 L0x2001a4ac;
(* ldr.w	r7, [r0, #112]	; 0x70                     #! EA = L0x2001a4bc; Value = 0x009567c6; PC = 0x8005238 *)
mov r7 L0x2001a4bc;
(* add	r8, r5                                      #! PC = 0x800523c *)
add r8 r8 r5;
(* add	r10, r7                                     #! PC = 0x800523e *)
add r10 r10 r7;
(* sub.w	r5, r8, r5, lsl #1                        #! PC = 0x8005240 *)
shl tmp r5 1;
sub r5 r8 tmp;
(* sub.w	r7, r10, r7, lsl #1                       #! PC = 0x8005244 *)
shl tmp r7 1;
sub r7 r10 tmp;
(* add.w	r8, r8, r10                               #! PC = 0x8005248 *)
add r8 r8 r10;
(* sub.w	r10, r8, r10, lsl #1                      #! PC = 0x800524c *)
shl tmp r10 1;
sub r10 r8 tmp;
(* vmov	r12, s8                                    #! PC = 0x8005250 *)
mov r12 s8;
(* vmov	lr, s10                                    #! PC = 0x8005254 *)
mov lr s10;
(* smull	r4, r9, r5, r12                           #! PC = 0x8005258 *)
smull r9 r4 r5 r12;
(* smlal	r4, r9, r7, lr                            #! PC = 0x800525c *)
cast r7@sint32 r7;
smull tmp_h tmp_l r7 lr;
uadds carry r4 tmp_l r4;
sadc r9 tmp_h r9 carry;
(* mul.w	r1, r4, r2                                #! PC = 0x8005260 *)
cast r4_s@sint32 r4;
mull discard r1 r4_s r2;
(* smlal	r4, r9, r1, r3                            #! PC = 0x8005264 *)
cast r1@sint32 r1;
smull tmp_h tmp_l r1 r3;
uadds carry r4 tmp_l r4;
sadc r9 tmp_h r9 carry;
assert eqmod r4 0 (2**32) && true;
assume eq r4 0 && true;
(* smull	r6, r11, r5, lr                           #! PC = 0x8005268 *)
smull r11 r6 r5 lr;
(* smlal	r6, r11, r7, r12                          #! PC = 0x800526c *)
cast r7@sint32 r7;
smull tmp_h tmp_l r7 r12;
uadds carry r6 tmp_l r6;
sadc r11 tmp_h r11 carry;
(* mul.w	r1, r6, r2                                #! PC = 0x8005270 *)
cast r6_s@sint32 r6;
mull discard r1 r6_s r2;
(* smlal	r6, r11, r1, r3                           #! PC = 0x8005274 *)
cast r1@sint32 r1;
smull tmp_h tmp_l r1 r3;
uadds carry r6 tmp_l r6;
sadc r11 tmp_h r11 carry;
assert eqmod r6 0 (2**32) && true;
assume eq r6 0 && true;
(* ldr.w	r4, [r0]                                  #! EA = L0x2001a44c; Value = 0xffcd074b; PC = 0x8005278 *)
mov r4 L0x2001a44c;
(* ldr.w	r5, [r0, #16]                             #! EA = L0x2001a45c; Value = 0x01349d7b; PC = 0x800527c *)
mov r5 L0x2001a45c;
(* ldr.w	r6, [r0, #32]                             #! EA = L0x2001a46c; Value = 0x00534d91; PC = 0x8005280 *)
mov r6 L0x2001a46c;
(* ldr.w	r7, [r0, #48]	; 0x30                      #! EA = L0x2001a47c; Value = 0x004379ed; PC = 0x8005284 *)
mov r7 L0x2001a47c;
(* add	r4, r5                                      #! PC = 0x8005288 *)
add r4 r4 r5;
(* add	r6, r7                                      #! PC = 0x800528a *)
add r6 r6 r7;
(* sub.w	r5, r4, r5, lsl #1                        #! PC = 0x800528c *)
shl tmp r5 1;
sub r5 r4 tmp;
(* sub.w	r7, r6, r7, lsl #1                        #! PC = 0x8005290 *)
shl tmp r7 1;
sub r7 r6 tmp;
(* vmov	r1, s6                                     #! PC = 0x8005294 *)
mov r1 s6;
(* smull	r12, r7, r7, r1                           #! PC = 0x8005298 *)
smull r7 r12 r7 r1;
(* mul.w	lr, r12, r2                               #! PC = 0x800529c *)
cast r12_s@sint32 r12;
mull discard lr r12_s r2;
(* smlal	r12, r7, lr, r3                           #! PC = 0x80052a0 *)
cast lr@sint32 lr;
smull tmp_h tmp_l lr r3;
uadds carry r12 tmp_l r12;
sadc r7 tmp_h r7 carry;
assert eqmod r12 0 (2**32) && true;
assume eq r12 0 && true;
(* add	r4, r6                                      #! PC = 0x80052a4 *)
add r4 r4 r6;
(* add	r5, r7                                      #! PC = 0x80052a6 *)
add r5 r5 r7;
(* sub.w	r6, r4, r6, lsl #1                        #! PC = 0x80052a8 *)
shl tmp r6 1;
sub r6 r4 tmp;
(* sub.w	r7, r5, r7, lsl #1                        #! PC = 0x80052ac *)
shl tmp r7 1;
sub r7 r5 tmp;
(* smull	r12, r10, r10, r1                         #! PC = 0x80052b0 *)
smull r10 r12 r10 r1;
(* mul.w	lr, r12, r2                               #! PC = 0x80052b4 *)
cast r12_s@sint32 r12;
mull discard lr r12_s r2;
(* smlal	r12, r10, lr, r3                          #! PC = 0x80052b8 *)
cast lr@sint32 lr;
smull tmp_h tmp_l lr r3;
uadds carry r12 tmp_l r12;
sadc r10 tmp_h r10 carry;
assert eqmod r12 0 (2**32) && true;
assume eq r12 0 && true;
(* add	r4, r8                                      #! PC = 0x80052bc *)
add r4 r4 r8;
(* add	r5, r9                                      #! PC = 0x80052be *)
add r5 r5 r9;
(* add	r6, r10                                     #! PC = 0x80052c0 *)
add r6 r6 r10;
(* add	r7, r11                                     #! PC = 0x80052c2 *)
add r7 r7 r11;
(* sub.w	r8, r4, r8, lsl #1                        #! PC = 0x80052c4 *)
shl tmp r8 1;
sub r8 r4 tmp;
(* sub.w	r9, r5, r9, lsl #1                        #! PC = 0x80052c8 *)
shl tmp r9 1;
sub r9 r5 tmp;
(* sub.w	r10, r6, r10, lsl #1                      #! PC = 0x80052cc *)
shl tmp r10 1;
sub r10 r6 tmp;
(* sub.w	r11, r7, r11, lsl #1                      #! PC = 0x80052d0 *)
shl tmp r11 1;
sub r11 r7 tmp;
(* str.w	r8, [r0, #64]	; 0x40                      #! EA = L0x2001a48c; PC = 0x80052d4 *)
mov L0x2001a48c r8;
(* str.w	r9, [r0, #80]	; 0x50                      #! EA = L0x2001a49c; PC = 0x80052d8 *)
mov L0x2001a49c r9;
(* str.w	r10, [r0, #96]	; 0x60                     #! EA = L0x2001a4ac; PC = 0x80052dc *)
mov L0x2001a4ac r10;
(* str.w	r11, [r0, #112]	; 0x70                    #! EA = L0x2001a4bc; PC = 0x80052e0 *)
mov L0x2001a4bc r11;
(* str.w	r5, [r0, #16]                             #! EA = L0x2001a45c; PC = 0x80052e4 *)
mov L0x2001a45c r5;
(* str.w	r6, [r0, #32]                             #! EA = L0x2001a46c; PC = 0x80052e8 *)
mov L0x2001a46c r6;
(* str.w	r7, [r0, #48]	; 0x30                      #! EA = L0x2001a47c; PC = 0x80052ec *)
mov L0x2001a47c r7;
(* str.w	r4, [r0], #4                              #! EA = L0x2001a44c; PC = 0x80052f0 *)
mov L0x2001a44c r4;
(* ldr.w	r8, [r0, #64]	; 0x40                      #! EA = L0x2001a490; Value = 0x012b618f; PC = 0x80052f4 *)
mov r8 L0x2001a490;
(* ldr.w	r5, [r0, #80]	; 0x50                      #! EA = L0x2001a4a0; Value = 0x00c4065d; PC = 0x80052f8 *)
mov r5 L0x2001a4a0;
(* ldr.w	r10, [r0, #96]	; 0x60                     #! EA = L0x2001a4b0; Value = 0xff98eae0; PC = 0x80052fc *)
mov r10 L0x2001a4b0;
(* ldr.w	r7, [r0, #112]	; 0x70                     #! EA = L0x2001a4c0; Value = 0xffa5dfd8; PC = 0x8005300 *)
mov r7 L0x2001a4c0;
(* add	r8, r5                                      #! PC = 0x8005304 *)
add r8 r8 r5;
(* add	r10, r7                                     #! PC = 0x8005306 *)
add r10 r10 r7;
(* sub.w	r5, r8, r5, lsl #1                        #! PC = 0x8005308 *)
shl tmp r5 1;
sub r5 r8 tmp;
(* sub.w	r7, r10, r7, lsl #1                       #! PC = 0x800530c *)
shl tmp r7 1;
sub r7 r10 tmp;
(* add.w	r8, r8, r10                               #! PC = 0x8005310 *)
add r8 r8 r10;
(* sub.w	r10, r8, r10, lsl #1                      #! PC = 0x8005314 *)
shl tmp r10 1;
sub r10 r8 tmp;
(* vmov	r12, s8                                    #! PC = 0x8005318 *)
mov r12 s8;
(* vmov	lr, s10                                    #! PC = 0x800531c *)
mov lr s10;
(* smull	r4, r9, r5, r12                           #! PC = 0x8005320 *)
smull r9 r4 r5 r12;
(* smlal	r4, r9, r7, lr                            #! PC = 0x8005324 *)
cast r7@sint32 r7;
smull tmp_h tmp_l r7 lr;
uadds carry r4 tmp_l r4;
sadc r9 tmp_h r9 carry;
(* mul.w	r1, r4, r2                                #! PC = 0x8005328 *)
cast r4_s@sint32 r4;
mull discard r1 r4_s r2;
(* smlal	r4, r9, r1, r3                            #! PC = 0x800532c *)
cast r1@sint32 r1;
smull tmp_h tmp_l r1 r3;
uadds carry r4 tmp_l r4;
sadc r9 tmp_h r9 carry;
assert eqmod r4 0 (2**32) && true;
assume eq r4 0 && true;
(* smull	r6, r11, r5, lr                           #! PC = 0x8005330 *)
smull r11 r6 r5 lr;
(* smlal	r6, r11, r7, r12                          #! PC = 0x8005334 *)
cast r7@sint32 r7;
smull tmp_h tmp_l r7 r12;
uadds carry r6 tmp_l r6;
sadc r11 tmp_h r11 carry;
(* mul.w	r1, r6, r2                                #! PC = 0x8005338 *)
cast r6_s@sint32 r6;
mull discard r1 r6_s r2;
(* smlal	r6, r11, r1, r3                           #! PC = 0x800533c *)
cast r1@sint32 r1;
smull tmp_h tmp_l r1 r3;
uadds carry r6 tmp_l r6;
sadc r11 tmp_h r11 carry;
assert eqmod r6 0 (2**32) && true;
assume eq r6 0 && true;
(* ldr.w	r4, [r0]                                  #! EA = L0x2001a450; Value = 0x011292a8; PC = 0x8005340 *)
mov r4 L0x2001a450;
(* ldr.w	r5, [r0, #16]                             #! EA = L0x2001a460; Value = 0x002dd496; PC = 0x8005344 *)
mov r5 L0x2001a460;
(* ldr.w	r6, [r0, #32]                             #! EA = L0x2001a470; Value = 0xff06f86f; PC = 0x8005348 *)
mov r6 L0x2001a470;
(* ldr.w	r7, [r0, #48]	; 0x30                      #! EA = L0x2001a480; Value = 0xff721f1c; PC = 0x800534c *)
mov r7 L0x2001a480;
(* add	r4, r5                                      #! PC = 0x8005350 *)
add r4 r4 r5;
(* add	r6, r7                                      #! PC = 0x8005352 *)
add r6 r6 r7;
(* sub.w	r5, r4, r5, lsl #1                        #! PC = 0x8005354 *)
shl tmp r5 1;
sub r5 r4 tmp;
(* sub.w	r7, r6, r7, lsl #1                        #! PC = 0x8005358 *)
shl tmp r7 1;
sub r7 r6 tmp;
(* vmov	r1, s6                                     #! PC = 0x800535c *)
mov r1 s6;
(* smull	r12, r7, r7, r1                           #! PC = 0x8005360 *)
smull r7 r12 r7 r1;
(* mul.w	lr, r12, r2                               #! PC = 0x8005364 *)
cast r12_s@sint32 r12;
mull discard lr r12_s r2;
(* smlal	r12, r7, lr, r3                           #! PC = 0x8005368 *)
cast lr@sint32 lr;
smull tmp_h tmp_l lr r3;
uadds carry r12 tmp_l r12;
sadc r7 tmp_h r7 carry;
assert eqmod r12 0 (2**32) && true;
assume eq r12 0 && true;
(* add	r4, r6                                      #! PC = 0x800536c *)
add r4 r4 r6;
(* add	r5, r7                                      #! PC = 0x800536e *)
add r5 r5 r7;
(* sub.w	r6, r4, r6, lsl #1                        #! PC = 0x8005370 *)
shl tmp r6 1;
sub r6 r4 tmp;
(* sub.w	r7, r5, r7, lsl #1                        #! PC = 0x8005374 *)
shl tmp r7 1;
sub r7 r5 tmp;
(* smull	r12, r10, r10, r1                         #! PC = 0x8005378 *)
smull r10 r12 r10 r1;
(* mul.w	lr, r12, r2                               #! PC = 0x800537c *)
cast r12_s@sint32 r12;
mull discard lr r12_s r2;
(* smlal	r12, r10, lr, r3                          #! PC = 0x8005380 *)
cast lr@sint32 lr;
smull tmp_h tmp_l lr r3;
uadds carry r12 tmp_l r12;
sadc r10 tmp_h r10 carry;
assert eqmod r12 0 (2**32) && true;
assume eq r12 0 && true;
(* add	r4, r8                                      #! PC = 0x8005384 *)
add r4 r4 r8;
(* add	r5, r9                                      #! PC = 0x8005386 *)
add r5 r5 r9;
(* add	r6, r10                                     #! PC = 0x8005388 *)
add r6 r6 r10;
(* add	r7, r11                                     #! PC = 0x800538a *)
add r7 r7 r11;
(* sub.w	r8, r4, r8, lsl #1                        #! PC = 0x800538c *)
shl tmp r8 1;
sub r8 r4 tmp;
(* sub.w	r9, r5, r9, lsl #1                        #! PC = 0x8005390 *)
shl tmp r9 1;
sub r9 r5 tmp;
(* sub.w	r10, r6, r10, lsl #1                      #! PC = 0x8005394 *)
shl tmp r10 1;
sub r10 r6 tmp;
(* sub.w	r11, r7, r11, lsl #1                      #! PC = 0x8005398 *)
shl tmp r11 1;
sub r11 r7 tmp;
(* str.w	r8, [r0, #64]	; 0x40                      #! EA = L0x2001a490; PC = 0x800539c *)
mov L0x2001a490 r8;
(* str.w	r9, [r0, #80]	; 0x50                      #! EA = L0x2001a4a0; PC = 0x80053a0 *)
mov L0x2001a4a0 r9;
(* str.w	r10, [r0, #96]	; 0x60                     #! EA = L0x2001a4b0; PC = 0x80053a4 *)
mov L0x2001a4b0 r10;
(* str.w	r11, [r0, #112]	; 0x70                    #! EA = L0x2001a4c0; PC = 0x80053a8 *)
mov L0x2001a4c0 r11;
(* str.w	r5, [r0, #16]                             #! EA = L0x2001a460; PC = 0x80053ac *)
mov L0x2001a460 r5;
(* str.w	r6, [r0, #32]                             #! EA = L0x2001a470; PC = 0x80053b0 *)
mov L0x2001a470 r6;
(* str.w	r7, [r0, #48]	; 0x30                      #! EA = L0x2001a480; PC = 0x80053b4 *)
mov L0x2001a480 r7;
(* str.w	r4, [r0], #4                              #! EA = L0x2001a450; PC = 0x80053b8 *)
mov L0x2001a450 r4;
(* ldr.w	r8, [r0, #64]	; 0x40                      #! EA = L0x2001a494; Value = 0x0025d9bb; PC = 0x80053bc *)
mov r8 L0x2001a494;
(* ldr.w	r5, [r0, #80]	; 0x50                      #! EA = L0x2001a4a4; Value = 0xff168a3a; PC = 0x80053c0 *)
mov r5 L0x2001a4a4;
(* ldr.w	r10, [r0, #96]	; 0x60                     #! EA = L0x2001a4b4; Value = 0x00a5f802; PC = 0x80053c4 *)
mov r10 L0x2001a4b4;
(* ldr.w	r7, [r0, #112]	; 0x70                     #! EA = L0x2001a4c4; Value = 0xffb32b80; PC = 0x80053c8 *)
mov r7 L0x2001a4c4;
(* add	r8, r5                                      #! PC = 0x80053cc *)
add r8 r8 r5;
(* add	r10, r7                                     #! PC = 0x80053ce *)
add r10 r10 r7;
(* sub.w	r5, r8, r5, lsl #1                        #! PC = 0x80053d0 *)
shl tmp r5 1;
sub r5 r8 tmp;
(* sub.w	r7, r10, r7, lsl #1                       #! PC = 0x80053d4 *)
shl tmp r7 1;
sub r7 r10 tmp;
(* add.w	r8, r8, r10                               #! PC = 0x80053d8 *)
add r8 r8 r10;
(* sub.w	r10, r8, r10, lsl #1                      #! PC = 0x80053dc *)
shl tmp r10 1;
sub r10 r8 tmp;
(* vmov	r12, s8                                    #! PC = 0x80053e0 *)
mov r12 s8;
(* vmov	lr, s10                                    #! PC = 0x80053e4 *)
mov lr s10;
(* smull	r4, r9, r5, r12                           #! PC = 0x80053e8 *)
smull r9 r4 r5 r12;
(* smlal	r4, r9, r7, lr                            #! PC = 0x80053ec *)
cast r7@sint32 r7;
smull tmp_h tmp_l r7 lr;
uadds carry r4 tmp_l r4;
sadc r9 tmp_h r9 carry;
(* mul.w	r1, r4, r2                                #! PC = 0x80053f0 *)
cast r4_s@sint32 r4;
mull discard r1 r4_s r2;
(* smlal	r4, r9, r1, r3                            #! PC = 0x80053f4 *)
cast r1@sint32 r1;
smull tmp_h tmp_l r1 r3;
uadds carry r4 tmp_l r4;
sadc r9 tmp_h r9 carry;
assert eqmod r4 0 (2**32) && true;
assume eq r4 0 && true;
(* smull	r6, r11, r5, lr                           #! PC = 0x80053f8 *)
smull r11 r6 r5 lr;
(* smlal	r6, r11, r7, r12                          #! PC = 0x80053fc *)
cast r7@sint32 r7;
smull tmp_h tmp_l r7 r12;
uadds carry r6 tmp_l r6;
sadc r11 tmp_h r11 carry;
(* mul.w	r1, r6, r2                                #! PC = 0x8005400 *)
cast r6_s@sint32 r6;
mull discard r1 r6_s r2;
(* smlal	r6, r11, r1, r3                           #! PC = 0x8005404 *)
cast r1@sint32 r1;
smull tmp_h tmp_l r1 r3;
uadds carry r6 tmp_l r6;
sadc r11 tmp_h r11 carry;
assert eqmod r6 0 (2**32) && true;
assume eq r6 0 && true;
(* ldr.w	r4, [r0]                                  #! EA = L0x2001a454; Value = 0xfe7b68d9; PC = 0x8005408 *)
mov r4 L0x2001a454;
(* ldr.w	r5, [r0, #16]                             #! EA = L0x2001a464; Value = 0x009a1c3e; PC = 0x800540c *)
mov r5 L0x2001a464;
(* ldr.w	r6, [r0, #32]                             #! EA = L0x2001a474; Value = 0xffb9aab3; PC = 0x8005410 *)
mov r6 L0x2001a474;
(* ldr.w	r7, [r0, #48]	; 0x30                      #! EA = L0x2001a484; Value = 0x010f0fa5; PC = 0x8005414 *)
mov r7 L0x2001a484;
(* add	r4, r5                                      #! PC = 0x8005418 *)
add r4 r4 r5;
(* add	r6, r7                                      #! PC = 0x800541a *)
add r6 r6 r7;
(* sub.w	r5, r4, r5, lsl #1                        #! PC = 0x800541c *)
shl tmp r5 1;
sub r5 r4 tmp;
(* sub.w	r7, r6, r7, lsl #1                        #! PC = 0x8005420 *)
shl tmp r7 1;
sub r7 r6 tmp;
(* vmov	r1, s6                                     #! PC = 0x8005424 *)
mov r1 s6;
(* smull	r12, r7, r7, r1                           #! PC = 0x8005428 *)
smull r7 r12 r7 r1;
(* mul.w	lr, r12, r2                               #! PC = 0x800542c *)
cast r12_s@sint32 r12;
mull discard lr r12_s r2;
(* smlal	r12, r7, lr, r3                           #! PC = 0x8005430 *)
cast lr@sint32 lr;
smull tmp_h tmp_l lr r3;
uadds carry r12 tmp_l r12;
sadc r7 tmp_h r7 carry;
assert eqmod r12 0 (2**32) && true;
assume eq r12 0 && true;
(* add	r4, r6                                      #! PC = 0x8005434 *)
add r4 r4 r6;
(* add	r5, r7                                      #! PC = 0x8005436 *)
add r5 r5 r7;
(* sub.w	r6, r4, r6, lsl #1                        #! PC = 0x8005438 *)
shl tmp r6 1;
sub r6 r4 tmp;
(* sub.w	r7, r5, r7, lsl #1                        #! PC = 0x800543c *)
shl tmp r7 1;
sub r7 r5 tmp;
(* smull	r12, r10, r10, r1                         #! PC = 0x8005440 *)
smull r10 r12 r10 r1;
(* mul.w	lr, r12, r2                               #! PC = 0x8005444 *)
cast r12_s@sint32 r12;
mull discard lr r12_s r2;
(* smlal	r12, r10, lr, r3                          #! PC = 0x8005448 *)
cast lr@sint32 lr;
smull tmp_h tmp_l lr r3;
uadds carry r12 tmp_l r12;
sadc r10 tmp_h r10 carry;
assert eqmod r12 0 (2**32) && true;
assume eq r12 0 && true;
(* add	r4, r8                                      #! PC = 0x800544c *)
add r4 r4 r8;
(* add	r5, r9                                      #! PC = 0x800544e *)
add r5 r5 r9;
(* add	r6, r10                                     #! PC = 0x8005450 *)
add r6 r6 r10;
(* add	r7, r11                                     #! PC = 0x8005452 *)
add r7 r7 r11;
(* sub.w	r8, r4, r8, lsl #1                        #! PC = 0x8005454 *)
shl tmp r8 1;
sub r8 r4 tmp;
(* sub.w	r9, r5, r9, lsl #1                        #! PC = 0x8005458 *)
shl tmp r9 1;
sub r9 r5 tmp;
(* sub.w	r10, r6, r10, lsl #1                      #! PC = 0x800545c *)
shl tmp r10 1;
sub r10 r6 tmp;
(* sub.w	r11, r7, r11, lsl #1                      #! PC = 0x8005460 *)
shl tmp r11 1;
sub r11 r7 tmp;
(* str.w	r8, [r0, #64]	; 0x40                      #! EA = L0x2001a494; PC = 0x8005464 *)
mov L0x2001a494 r8;
(* str.w	r9, [r0, #80]	; 0x50                      #! EA = L0x2001a4a4; PC = 0x8005468 *)
mov L0x2001a4a4 r9;
(* str.w	r10, [r0, #96]	; 0x60                     #! EA = L0x2001a4b4; PC = 0x800546c *)
mov L0x2001a4b4 r10;
(* str.w	r11, [r0, #112]	; 0x70                    #! EA = L0x2001a4c4; PC = 0x8005470 *)
mov L0x2001a4c4 r11;
(* str.w	r5, [r0, #16]                             #! EA = L0x2001a464; PC = 0x8005474 *)
mov L0x2001a464 r5;
(* str.w	r6, [r0, #32]                             #! EA = L0x2001a474; PC = 0x8005478 *)
mov L0x2001a474 r6;
(* str.w	r7, [r0, #48]	; 0x30                      #! EA = L0x2001a484; PC = 0x800547c *)
mov L0x2001a484 r7;
(* str.w	r4, [r0], #4                              #! EA = L0x2001a454; PC = 0x8005480 *)
mov L0x2001a454 r4;
(* add.w	r0, r0, #112	; 0x70                       #! PC = 0x8005484 *)
adds discard r0 r0 112@uint32;
(* vmov	r12, s2                                    #! PC = 0x8005488 *)
mov r12 s2;
(* ldr.w	r8, [r0, #64]	; 0x40                      #! EA = L0x2001a508; Value = 0xfffb6000; PC = 0x8005164 *)
mov r8 L0x2001a508;
(* ldr.w	r5, [r0, #80]	; 0x50                      #! EA = L0x2001a518; Value = 0xffdc080c; PC = 0x8005168 *)
mov r5 L0x2001a518;
(* ldr.w	r10, [r0, #96]	; 0x60                     #! EA = L0x2001a528; Value = 0xff737971; PC = 0x800516c *)
mov r10 L0x2001a528;
(* ldr.w	r7, [r0, #112]	; 0x70                     #! EA = L0x2001a538; Value = 0xfe6b328a; PC = 0x8005170 *)
mov r7 L0x2001a538;
(* add	r8, r5                                      #! PC = 0x8005174 *)
add r8 r8 r5;
(* add	r10, r7                                     #! PC = 0x8005176 *)
add r10 r10 r7;
(* sub.w	r5, r8, r5, lsl #1                        #! PC = 0x8005178 *)
shl tmp r5 1;
sub r5 r8 tmp;
(* sub.w	r7, r10, r7, lsl #1                       #! PC = 0x800517c *)
shl tmp r7 1;
sub r7 r10 tmp;
(* add.w	r8, r8, r10                               #! PC = 0x8005180 *)
add r8 r8 r10;
(* sub.w	r10, r8, r10, lsl #1                      #! PC = 0x8005184 *)
shl tmp r10 1;
sub r10 r8 tmp;
(* vmov	r12, s8                                    #! PC = 0x8005188 *)
mov r12 s8;
(* vmov	lr, s10                                    #! PC = 0x800518c *)
mov lr s10;
(* smull	r4, r9, r5, r12                           #! PC = 0x8005190 *)
smull r9 r4 r5 r12;
(* smlal	r4, r9, r7, lr                            #! PC = 0x8005194 *)
cast r7@sint32 r7;
smull tmp_h tmp_l r7 lr;
uadds carry r4 tmp_l r4;
sadc r9 tmp_h r9 carry;
(* mul.w	r1, r4, r2                                #! PC = 0x8005198 *)
cast r4_s@sint32 r4;
mull discard r1 r4_s r2;
(* smlal	r4, r9, r1, r3                            #! PC = 0x800519c *)
cast r1@sint32 r1;
smull tmp_h tmp_l r1 r3;
uadds carry r4 tmp_l r4;
sadc r9 tmp_h r9 carry;
assert eqmod r4 0 (2**32) && true;
assume eq r4 0 && true;
(* smull	r6, r11, r5, lr                           #! PC = 0x80051a0 *)
smull r11 r6 r5 lr;
(* smlal	r6, r11, r7, r12                          #! PC = 0x80051a4 *)
cast r7@sint32 r7;
smull tmp_h tmp_l r7 r12;
uadds carry r6 tmp_l r6;
sadc r11 tmp_h r11 carry;
(* mul.w	r1, r6, r2                                #! PC = 0x80051a8 *)
cast r6_s@sint32 r6;
mull discard r1 r6_s r2;
(* smlal	r6, r11, r1, r3                           #! PC = 0x80051ac *)
cast r1@sint32 r1;
smull tmp_h tmp_l r1 r3;
uadds carry r6 tmp_l r6;
sadc r11 tmp_h r11 carry;
assert eqmod r6 0 (2**32) && true;
assume eq r6 0 && true;
(* ldr.w	r4, [r0]                                  #! EA = L0x2001a4c8; Value = 0x00c0db1d; PC = 0x80051b0 *)
mov r4 L0x2001a4c8;
(* ldr.w	r5, [r0, #16]                             #! EA = L0x2001a4d8; Value = 0x002f20de; PC = 0x80051b4 *)
mov r5 L0x2001a4d8;
(* ldr.w	r6, [r0, #32]                             #! EA = L0x2001a4e8; Value = 0xff7ae486; PC = 0x80051b8 *)
mov r6 L0x2001a4e8;
(* ldr.w	r7, [r0, #48]	; 0x30                      #! EA = L0x2001a4f8; Value = 0x005cd486; PC = 0x80051bc *)
mov r7 L0x2001a4f8;
(* add	r4, r5                                      #! PC = 0x80051c0 *)
add r4 r4 r5;
(* add	r6, r7                                      #! PC = 0x80051c2 *)
add r6 r6 r7;
(* sub.w	r5, r4, r5, lsl #1                        #! PC = 0x80051c4 *)
shl tmp r5 1;
sub r5 r4 tmp;
(* sub.w	r7, r6, r7, lsl #1                        #! PC = 0x80051c8 *)
shl tmp r7 1;
sub r7 r6 tmp;
(* vmov	r1, s6                                     #! PC = 0x80051cc *)
mov r1 s6;
(* smull	r12, r7, r7, r1                           #! PC = 0x80051d0 *)
smull r7 r12 r7 r1;
(* mul.w	lr, r12, r2                               #! PC = 0x80051d4 *)
cast r12_s@sint32 r12;
mull discard lr r12_s r2;
(* smlal	r12, r7, lr, r3                           #! PC = 0x80051d8 *)
cast lr@sint32 lr;
smull tmp_h tmp_l lr r3;
uadds carry r12 tmp_l r12;
sadc r7 tmp_h r7 carry;
assert eqmod r12 0 (2**32) && true;
assume eq r12 0 && true;
(* add	r4, r6                                      #! PC = 0x80051dc *)
add r4 r4 r6;
(* add	r5, r7                                      #! PC = 0x80051de *)
add r5 r5 r7;
(* sub.w	r6, r4, r6, lsl #1                        #! PC = 0x80051e0 *)
shl tmp r6 1;
sub r6 r4 tmp;
(* sub.w	r7, r5, r7, lsl #1                        #! PC = 0x80051e4 *)
shl tmp r7 1;
sub r7 r5 tmp;
(* smull	r12, r10, r10, r1                         #! PC = 0x80051e8 *)
smull r10 r12 r10 r1;
(* mul.w	lr, r12, r2                               #! PC = 0x80051ec *)
cast r12_s@sint32 r12;
mull discard lr r12_s r2;
(* smlal	r12, r10, lr, r3                          #! PC = 0x80051f0 *)
cast lr@sint32 lr;
smull tmp_h tmp_l lr r3;
uadds carry r12 tmp_l r12;
sadc r10 tmp_h r10 carry;
assert eqmod r12 0 (2**32) && true;
assume eq r12 0 && true;
(* add	r4, r8                                      #! PC = 0x80051f4 *)
add r4 r4 r8;
(* add	r5, r9                                      #! PC = 0x80051f6 *)
add r5 r5 r9;
(* add	r6, r10                                     #! PC = 0x80051f8 *)
add r6 r6 r10;
(* add	r7, r11                                     #! PC = 0x80051fa *)
add r7 r7 r11;
(* sub.w	r8, r4, r8, lsl #1                        #! PC = 0x80051fc *)
shl tmp r8 1;
sub r8 r4 tmp;
(* sub.w	r9, r5, r9, lsl #1                        #! PC = 0x8005200 *)
shl tmp r9 1;
sub r9 r5 tmp;
(* sub.w	r10, r6, r10, lsl #1                      #! PC = 0x8005204 *)
shl tmp r10 1;
sub r10 r6 tmp;
(* sub.w	r11, r7, r11, lsl #1                      #! PC = 0x8005208 *)
shl tmp r11 1;
sub r11 r7 tmp;
(* str.w	r8, [r0, #64]	; 0x40                      #! EA = L0x2001a508; PC = 0x800520c *)
mov L0x2001a508 r8;
(* str.w	r9, [r0, #80]	; 0x50                      #! EA = L0x2001a518; PC = 0x8005210 *)
mov L0x2001a518 r9;
(* str.w	r10, [r0, #96]	; 0x60                     #! EA = L0x2001a528; PC = 0x8005214 *)
mov L0x2001a528 r10;
(* str.w	r11, [r0, #112]	; 0x70                    #! EA = L0x2001a538; PC = 0x8005218 *)
mov L0x2001a538 r11;
(* str.w	r5, [r0, #16]                             #! EA = L0x2001a4d8; PC = 0x800521c *)
mov L0x2001a4d8 r5;
(* str.w	r6, [r0, #32]                             #! EA = L0x2001a4e8; PC = 0x8005220 *)
mov L0x2001a4e8 r6;
(* str.w	r7, [r0, #48]	; 0x30                      #! EA = L0x2001a4f8; PC = 0x8005224 *)
mov L0x2001a4f8 r7;
(* str.w	r4, [r0], #4                              #! EA = L0x2001a4c8; PC = 0x8005228 *)
mov L0x2001a4c8 r4;
(* ldr.w	r8, [r0, #64]	; 0x40                      #! EA = L0x2001a50c; Value = 0xfef458e8; PC = 0x800522c *)
mov r8 L0x2001a50c;
(* ldr.w	r5, [r0, #80]	; 0x50                      #! EA = L0x2001a51c; Value = 0x01020bd3; PC = 0x8005230 *)
mov r5 L0x2001a51c;
(* ldr.w	r10, [r0, #96]	; 0x60                     #! EA = L0x2001a52c; Value = 0xfef68aa8; PC = 0x8005234 *)
mov r10 L0x2001a52c;
(* ldr.w	r7, [r0, #112]	; 0x70                     #! EA = L0x2001a53c; Value = 0x0083165d; PC = 0x8005238 *)
mov r7 L0x2001a53c;
(* add	r8, r5                                      #! PC = 0x800523c *)
add r8 r8 r5;
(* add	r10, r7                                     #! PC = 0x800523e *)
add r10 r10 r7;
(* sub.w	r5, r8, r5, lsl #1                        #! PC = 0x8005240 *)
shl tmp r5 1;
sub r5 r8 tmp;
(* sub.w	r7, r10, r7, lsl #1                       #! PC = 0x8005244 *)
shl tmp r7 1;
sub r7 r10 tmp;
(* add.w	r8, r8, r10                               #! PC = 0x8005248 *)
add r8 r8 r10;
(* sub.w	r10, r8, r10, lsl #1                      #! PC = 0x800524c *)
shl tmp r10 1;
sub r10 r8 tmp;
(* vmov	r12, s8                                    #! PC = 0x8005250 *)
mov r12 s8;
(* vmov	lr, s10                                    #! PC = 0x8005254 *)
mov lr s10;
(* smull	r4, r9, r5, r12                           #! PC = 0x8005258 *)
smull r9 r4 r5 r12;
(* smlal	r4, r9, r7, lr                            #! PC = 0x800525c *)
cast r7@sint32 r7;
smull tmp_h tmp_l r7 lr;
uadds carry r4 tmp_l r4;
sadc r9 tmp_h r9 carry;
(* mul.w	r1, r4, r2                                #! PC = 0x8005260 *)
cast r4_s@sint32 r4;
mull discard r1 r4_s r2;
(* smlal	r4, r9, r1, r3                            #! PC = 0x8005264 *)
cast r1@sint32 r1;
smull tmp_h tmp_l r1 r3;
uadds carry r4 tmp_l r4;
sadc r9 tmp_h r9 carry;
assert eqmod r4 0 (2**32) && true;
assume eq r4 0 && true;
(* smull	r6, r11, r5, lr                           #! PC = 0x8005268 *)
smull r11 r6 r5 lr;
(* smlal	r6, r11, r7, r12                          #! PC = 0x800526c *)
cast r7@sint32 r7;
smull tmp_h tmp_l r7 r12;
uadds carry r6 tmp_l r6;
sadc r11 tmp_h r11 carry;
(* mul.w	r1, r6, r2                                #! PC = 0x8005270 *)
cast r6_s@sint32 r6;
mull discard r1 r6_s r2;
(* smlal	r6, r11, r1, r3                           #! PC = 0x8005274 *)
cast r1@sint32 r1;
smull tmp_h tmp_l r1 r3;
uadds carry r6 tmp_l r6;
sadc r11 tmp_h r11 carry;
assert eqmod r6 0 (2**32) && true;
assume eq r6 0 && true;
(* ldr.w	r4, [r0]                                  #! EA = L0x2001a4cc; Value = 0xff88d90c; PC = 0x8005278 *)
mov r4 L0x2001a4cc;
(* ldr.w	r5, [r0, #16]                             #! EA = L0x2001a4dc; Value = 0xffc86cef; PC = 0x800527c *)
mov r5 L0x2001a4dc;
(* ldr.w	r6, [r0, #32]                             #! EA = L0x2001a4ec; Value = 0xffe446b9; PC = 0x8005280 *)
mov r6 L0x2001a4ec;
(* ldr.w	r7, [r0, #48]	; 0x30                      #! EA = L0x2001a4fc; Value = 0x00b9e1e3; PC = 0x8005284 *)
mov r7 L0x2001a4fc;
(* add	r4, r5                                      #! PC = 0x8005288 *)
add r4 r4 r5;
(* add	r6, r7                                      #! PC = 0x800528a *)
add r6 r6 r7;
(* sub.w	r5, r4, r5, lsl #1                        #! PC = 0x800528c *)
shl tmp r5 1;
sub r5 r4 tmp;
(* sub.w	r7, r6, r7, lsl #1                        #! PC = 0x8005290 *)
shl tmp r7 1;
sub r7 r6 tmp;
(* vmov	r1, s6                                     #! PC = 0x8005294 *)
mov r1 s6;
(* smull	r12, r7, r7, r1                           #! PC = 0x8005298 *)
smull r7 r12 r7 r1;
(* mul.w	lr, r12, r2                               #! PC = 0x800529c *)
cast r12_s@sint32 r12;
mull discard lr r12_s r2;
(* smlal	r12, r7, lr, r3                           #! PC = 0x80052a0 *)
cast lr@sint32 lr;
smull tmp_h tmp_l lr r3;
uadds carry r12 tmp_l r12;
sadc r7 tmp_h r7 carry;
assert eqmod r12 0 (2**32) && true;
assume eq r12 0 && true;
(* add	r4, r6                                      #! PC = 0x80052a4 *)
add r4 r4 r6;
(* add	r5, r7                                      #! PC = 0x80052a6 *)
add r5 r5 r7;
(* sub.w	r6, r4, r6, lsl #1                        #! PC = 0x80052a8 *)
shl tmp r6 1;
sub r6 r4 tmp;
(* sub.w	r7, r5, r7, lsl #1                        #! PC = 0x80052ac *)
shl tmp r7 1;
sub r7 r5 tmp;
(* smull	r12, r10, r10, r1                         #! PC = 0x80052b0 *)
smull r10 r12 r10 r1;
(* mul.w	lr, r12, r2                               #! PC = 0x80052b4 *)
cast r12_s@sint32 r12;
mull discard lr r12_s r2;
(* smlal	r12, r10, lr, r3                          #! PC = 0x80052b8 *)
cast lr@sint32 lr;
smull tmp_h tmp_l lr r3;
uadds carry r12 tmp_l r12;
sadc r10 tmp_h r10 carry;
assert eqmod r12 0 (2**32) && true;
assume eq r12 0 && true;
(* add	r4, r8                                      #! PC = 0x80052bc *)
add r4 r4 r8;
(* add	r5, r9                                      #! PC = 0x80052be *)
add r5 r5 r9;
(* add	r6, r10                                     #! PC = 0x80052c0 *)
add r6 r6 r10;
(* add	r7, r11                                     #! PC = 0x80052c2 *)
add r7 r7 r11;
(* sub.w	r8, r4, r8, lsl #1                        #! PC = 0x80052c4 *)
shl tmp r8 1;
sub r8 r4 tmp;
(* sub.w	r9, r5, r9, lsl #1                        #! PC = 0x80052c8 *)
shl tmp r9 1;
sub r9 r5 tmp;
(* sub.w	r10, r6, r10, lsl #1                      #! PC = 0x80052cc *)
shl tmp r10 1;
sub r10 r6 tmp;
(* sub.w	r11, r7, r11, lsl #1                      #! PC = 0x80052d0 *)
shl tmp r11 1;
sub r11 r7 tmp;
(* str.w	r8, [r0, #64]	; 0x40                      #! EA = L0x2001a50c; PC = 0x80052d4 *)
mov L0x2001a50c r8;
(* str.w	r9, [r0, #80]	; 0x50                      #! EA = L0x2001a51c; PC = 0x80052d8 *)
mov L0x2001a51c r9;
(* str.w	r10, [r0, #96]	; 0x60                     #! EA = L0x2001a52c; PC = 0x80052dc *)
mov L0x2001a52c r10;
(* str.w	r11, [r0, #112]	; 0x70                    #! EA = L0x2001a53c; PC = 0x80052e0 *)
mov L0x2001a53c r11;
(* str.w	r5, [r0, #16]                             #! EA = L0x2001a4dc; PC = 0x80052e4 *)
mov L0x2001a4dc r5;
(* str.w	r6, [r0, #32]                             #! EA = L0x2001a4ec; PC = 0x80052e8 *)
mov L0x2001a4ec r6;
(* str.w	r7, [r0, #48]	; 0x30                      #! EA = L0x2001a4fc; PC = 0x80052ec *)
mov L0x2001a4fc r7;
(* str.w	r4, [r0], #4                              #! EA = L0x2001a4cc; PC = 0x80052f0 *)
mov L0x2001a4cc r4;
(* ldr.w	r8, [r0, #64]	; 0x40                      #! EA = L0x2001a510; Value = 0xff50b822; PC = 0x80052f4 *)
mov r8 L0x2001a510;
(* ldr.w	r5, [r0, #80]	; 0x50                      #! EA = L0x2001a520; Value = 0x00920641; PC = 0x80052f8 *)
mov r5 L0x2001a520;
(* ldr.w	r10, [r0, #96]	; 0x60                     #! EA = L0x2001a530; Value = 0xff71061d; PC = 0x80052fc *)
mov r10 L0x2001a530;
(* ldr.w	r7, [r0, #112]	; 0x70                     #! EA = L0x2001a540; Value = 0x00ba6381; PC = 0x8005300 *)
mov r7 L0x2001a540;
(* add	r8, r5                                      #! PC = 0x8005304 *)
add r8 r8 r5;
(* add	r10, r7                                     #! PC = 0x8005306 *)
add r10 r10 r7;
(* sub.w	r5, r8, r5, lsl #1                        #! PC = 0x8005308 *)
shl tmp r5 1;
sub r5 r8 tmp;
(* sub.w	r7, r10, r7, lsl #1                       #! PC = 0x800530c *)
shl tmp r7 1;
sub r7 r10 tmp;
(* add.w	r8, r8, r10                               #! PC = 0x8005310 *)
add r8 r8 r10;
(* sub.w	r10, r8, r10, lsl #1                      #! PC = 0x8005314 *)
shl tmp r10 1;
sub r10 r8 tmp;
(* vmov	r12, s8                                    #! PC = 0x8005318 *)
mov r12 s8;
(* vmov	lr, s10                                    #! PC = 0x800531c *)
mov lr s10;
(* smull	r4, r9, r5, r12                           #! PC = 0x8005320 *)
smull r9 r4 r5 r12;
(* smlal	r4, r9, r7, lr                            #! PC = 0x8005324 *)
cast r7@sint32 r7;
smull tmp_h tmp_l r7 lr;
uadds carry r4 tmp_l r4;
sadc r9 tmp_h r9 carry;
(* mul.w	r1, r4, r2                                #! PC = 0x8005328 *)
cast r4_s@sint32 r4;
mull discard r1 r4_s r2;
(* smlal	r4, r9, r1, r3                            #! PC = 0x800532c *)
cast r1@sint32 r1;
smull tmp_h tmp_l r1 r3;
uadds carry r4 tmp_l r4;
sadc r9 tmp_h r9 carry;
assert eqmod r4 0 (2**32) && true;
assume eq r4 0 && true;
(* smull	r6, r11, r5, lr                           #! PC = 0x8005330 *)
smull r11 r6 r5 lr;
(* smlal	r6, r11, r7, r12                          #! PC = 0x8005334 *)
cast r7@sint32 r7;
smull tmp_h tmp_l r7 r12;
uadds carry r6 tmp_l r6;
sadc r11 tmp_h r11 carry;
(* mul.w	r1, r6, r2                                #! PC = 0x8005338 *)
cast r6_s@sint32 r6;
mull discard r1 r6_s r2;
(* smlal	r6, r11, r1, r3                           #! PC = 0x800533c *)
cast r1@sint32 r1;
smull tmp_h tmp_l r1 r3;
uadds carry r6 tmp_l r6;
sadc r11 tmp_h r11 carry;
assert eqmod r6 0 (2**32) && true;
assume eq r6 0 && true;
(* ldr.w	r4, [r0]                                  #! EA = L0x2001a4d0; Value = 0xffb86d98; PC = 0x8005340 *)
mov r4 L0x2001a4d0;
(* ldr.w	r5, [r0, #16]                             #! EA = L0x2001a4e0; Value = 0x00cfcb9e; PC = 0x8005344 *)
mov r5 L0x2001a4e0;
(* ldr.w	r6, [r0, #32]                             #! EA = L0x2001a4f0; Value = 0xffbbaa5f; PC = 0x8005348 *)
mov r6 L0x2001a4f0;
(* ldr.w	r7, [r0, #48]	; 0x30                      #! EA = L0x2001a500; Value = 0xff49789b; PC = 0x800534c *)
mov r7 L0x2001a500;
(* add	r4, r5                                      #! PC = 0x8005350 *)
add r4 r4 r5;
(* add	r6, r7                                      #! PC = 0x8005352 *)
add r6 r6 r7;
(* sub.w	r5, r4, r5, lsl #1                        #! PC = 0x8005354 *)
shl tmp r5 1;
sub r5 r4 tmp;
(* sub.w	r7, r6, r7, lsl #1                        #! PC = 0x8005358 *)
shl tmp r7 1;
sub r7 r6 tmp;
(* vmov	r1, s6                                     #! PC = 0x800535c *)
mov r1 s6;
(* smull	r12, r7, r7, r1                           #! PC = 0x8005360 *)
smull r7 r12 r7 r1;
(* mul.w	lr, r12, r2                               #! PC = 0x8005364 *)
cast r12_s@sint32 r12;
mull discard lr r12_s r2;
(* smlal	r12, r7, lr, r3                           #! PC = 0x8005368 *)
cast lr@sint32 lr;
smull tmp_h tmp_l lr r3;
uadds carry r12 tmp_l r12;
sadc r7 tmp_h r7 carry;
assert eqmod r12 0 (2**32) && true;
assume eq r12 0 && true;
(* add	r4, r6                                      #! PC = 0x800536c *)
add r4 r4 r6;
(* add	r5, r7                                      #! PC = 0x800536e *)
add r5 r5 r7;
(* sub.w	r6, r4, r6, lsl #1                        #! PC = 0x8005370 *)
shl tmp r6 1;
sub r6 r4 tmp;
(* sub.w	r7, r5, r7, lsl #1                        #! PC = 0x8005374 *)
shl tmp r7 1;
sub r7 r5 tmp;
(* smull	r12, r10, r10, r1                         #! PC = 0x8005378 *)
smull r10 r12 r10 r1;
(* mul.w	lr, r12, r2                               #! PC = 0x800537c *)
cast r12_s@sint32 r12;
mull discard lr r12_s r2;
(* smlal	r12, r10, lr, r3                          #! PC = 0x8005380 *)
cast lr@sint32 lr;
smull tmp_h tmp_l lr r3;
uadds carry r12 tmp_l r12;
sadc r10 tmp_h r10 carry;
assert eqmod r12 0 (2**32) && true;
assume eq r12 0 && true;
(* add	r4, r8                                      #! PC = 0x8005384 *)
add r4 r4 r8;
(* add	r5, r9                                      #! PC = 0x8005386 *)
add r5 r5 r9;
(* add	r6, r10                                     #! PC = 0x8005388 *)
add r6 r6 r10;
(* add	r7, r11                                     #! PC = 0x800538a *)
add r7 r7 r11;
(* sub.w	r8, r4, r8, lsl #1                        #! PC = 0x800538c *)
shl tmp r8 1;
sub r8 r4 tmp;
(* sub.w	r9, r5, r9, lsl #1                        #! PC = 0x8005390 *)
shl tmp r9 1;
sub r9 r5 tmp;
(* sub.w	r10, r6, r10, lsl #1                      #! PC = 0x8005394 *)
shl tmp r10 1;
sub r10 r6 tmp;
(* sub.w	r11, r7, r11, lsl #1                      #! PC = 0x8005398 *)
shl tmp r11 1;
sub r11 r7 tmp;
(* str.w	r8, [r0, #64]	; 0x40                      #! EA = L0x2001a510; PC = 0x800539c *)
mov L0x2001a510 r8;
(* str.w	r9, [r0, #80]	; 0x50                      #! EA = L0x2001a520; PC = 0x80053a0 *)
mov L0x2001a520 r9;
(* str.w	r10, [r0, #96]	; 0x60                     #! EA = L0x2001a530; PC = 0x80053a4 *)
mov L0x2001a530 r10;
(* str.w	r11, [r0, #112]	; 0x70                    #! EA = L0x2001a540; PC = 0x80053a8 *)
mov L0x2001a540 r11;
(* str.w	r5, [r0, #16]                             #! EA = L0x2001a4e0; PC = 0x80053ac *)
mov L0x2001a4e0 r5;
(* str.w	r6, [r0, #32]                             #! EA = L0x2001a4f0; PC = 0x80053b0 *)
mov L0x2001a4f0 r6;
(* str.w	r7, [r0, #48]	; 0x30                      #! EA = L0x2001a500; PC = 0x80053b4 *)
mov L0x2001a500 r7;
(* str.w	r4, [r0], #4                              #! EA = L0x2001a4d0; PC = 0x80053b8 *)
mov L0x2001a4d0 r4;
(* ldr.w	r8, [r0, #64]	; 0x40                      #! EA = L0x2001a514; Value = 0x0009e4c1; PC = 0x80053bc *)
mov r8 L0x2001a514;
(* ldr.w	r5, [r0, #80]	; 0x50                      #! EA = L0x2001a524; Value = 0xff714d16; PC = 0x80053c0 *)
mov r5 L0x2001a524;
(* ldr.w	r10, [r0, #96]	; 0x60                     #! EA = L0x2001a534; Value = 0x003ad404; PC = 0x80053c4 *)
mov r10 L0x2001a534;
(* ldr.w	r7, [r0, #112]	; 0x70                     #! EA = L0x2001a544; Value = 0xffe89ad0; PC = 0x80053c8 *)
mov r7 L0x2001a544;
(* add	r8, r5                                      #! PC = 0x80053cc *)
add r8 r8 r5;
(* add	r10, r7                                     #! PC = 0x80053ce *)
add r10 r10 r7;
(* sub.w	r5, r8, r5, lsl #1                        #! PC = 0x80053d0 *)
shl tmp r5 1;
sub r5 r8 tmp;
(* sub.w	r7, r10, r7, lsl #1                       #! PC = 0x80053d4 *)
shl tmp r7 1;
sub r7 r10 tmp;
(* add.w	r8, r8, r10                               #! PC = 0x80053d8 *)
add r8 r8 r10;
(* sub.w	r10, r8, r10, lsl #1                      #! PC = 0x80053dc *)
shl tmp r10 1;
sub r10 r8 tmp;
(* vmov	r12, s8                                    #! PC = 0x80053e0 *)
mov r12 s8;
(* vmov	lr, s10                                    #! PC = 0x80053e4 *)
mov lr s10;
(* smull	r4, r9, r5, r12                           #! PC = 0x80053e8 *)
smull r9 r4 r5 r12;
(* smlal	r4, r9, r7, lr                            #! PC = 0x80053ec *)
cast r7@sint32 r7;
smull tmp_h tmp_l r7 lr;
uadds carry r4 tmp_l r4;
sadc r9 tmp_h r9 carry;
(* mul.w	r1, r4, r2                                #! PC = 0x80053f0 *)
cast r4_s@sint32 r4;
mull discard r1 r4_s r2;
(* smlal	r4, r9, r1, r3                            #! PC = 0x80053f4 *)
cast r1@sint32 r1;
smull tmp_h tmp_l r1 r3;
uadds carry r4 tmp_l r4;
sadc r9 tmp_h r9 carry;
assert eqmod r4 0 (2**32) && true;
assume eq r4 0 && true;
(* smull	r6, r11, r5, lr                           #! PC = 0x80053f8 *)
smull r11 r6 r5 lr;
(* smlal	r6, r11, r7, r12                          #! PC = 0x80053fc *)
cast r7@sint32 r7;
smull tmp_h tmp_l r7 r12;
uadds carry r6 tmp_l r6;
sadc r11 tmp_h r11 carry;
(* mul.w	r1, r6, r2                                #! PC = 0x8005400 *)
cast r6_s@sint32 r6;
mull discard r1 r6_s r2;
(* smlal	r6, r11, r1, r3                           #! PC = 0x8005404 *)
cast r1@sint32 r1;
smull tmp_h tmp_l r1 r3;
uadds carry r6 tmp_l r6;
sadc r11 tmp_h r11 carry;
assert eqmod r6 0 (2**32) && true;
assume eq r6 0 && true;
(* ldr.w	r4, [r0]                                  #! EA = L0x2001a4d4; Value = 0x0061b857; PC = 0x8005408 *)
mov r4 L0x2001a4d4;
(* ldr.w	r5, [r0, #16]                             #! EA = L0x2001a4e4; Value = 0xff943b2c; PC = 0x800540c *)
mov r5 L0x2001a4e4;
(* ldr.w	r6, [r0, #32]                             #! EA = L0x2001a4f4; Value = 0x008b29f0; PC = 0x8005410 *)
mov r6 L0x2001a4f4;
(* ldr.w	r7, [r0, #48]	; 0x30                      #! EA = L0x2001a504; Value = 0xfffefb31; PC = 0x8005414 *)
mov r7 L0x2001a504;
(* add	r4, r5                                      #! PC = 0x8005418 *)
add r4 r4 r5;
(* add	r6, r7                                      #! PC = 0x800541a *)
add r6 r6 r7;
(* sub.w	r5, r4, r5, lsl #1                        #! PC = 0x800541c *)
shl tmp r5 1;
sub r5 r4 tmp;
(* sub.w	r7, r6, r7, lsl #1                        #! PC = 0x8005420 *)
shl tmp r7 1;
sub r7 r6 tmp;
(* vmov	r1, s6                                     #! PC = 0x8005424 *)
mov r1 s6;
(* smull	r12, r7, r7, r1                           #! PC = 0x8005428 *)
smull r7 r12 r7 r1;
(* mul.w	lr, r12, r2                               #! PC = 0x800542c *)
cast r12_s@sint32 r12;
mull discard lr r12_s r2;
(* smlal	r12, r7, lr, r3                           #! PC = 0x8005430 *)
cast lr@sint32 lr;
smull tmp_h tmp_l lr r3;
uadds carry r12 tmp_l r12;
sadc r7 tmp_h r7 carry;
assert eqmod r12 0 (2**32) && true;
assume eq r12 0 && true;
(* add	r4, r6                                      #! PC = 0x8005434 *)
add r4 r4 r6;
(* add	r5, r7                                      #! PC = 0x8005436 *)
add r5 r5 r7;
(* sub.w	r6, r4, r6, lsl #1                        #! PC = 0x8005438 *)
shl tmp r6 1;
sub r6 r4 tmp;
(* sub.w	r7, r5, r7, lsl #1                        #! PC = 0x800543c *)
shl tmp r7 1;
sub r7 r5 tmp;
(* smull	r12, r10, r10, r1                         #! PC = 0x8005440 *)
smull r10 r12 r10 r1;
(* mul.w	lr, r12, r2                               #! PC = 0x8005444 *)
cast r12_s@sint32 r12;
mull discard lr r12_s r2;
(* smlal	r12, r10, lr, r3                          #! PC = 0x8005448 *)
cast lr@sint32 lr;
smull tmp_h tmp_l lr r3;
uadds carry r12 tmp_l r12;
sadc r10 tmp_h r10 carry;
assert eqmod r12 0 (2**32) && true;
assume eq r12 0 && true;
(* add	r4, r8                                      #! PC = 0x800544c *)
add r4 r4 r8;
(* add	r5, r9                                      #! PC = 0x800544e *)
add r5 r5 r9;
(* add	r6, r10                                     #! PC = 0x8005450 *)
add r6 r6 r10;
(* add	r7, r11                                     #! PC = 0x8005452 *)
add r7 r7 r11;
(* sub.w	r8, r4, r8, lsl #1                        #! PC = 0x8005454 *)
shl tmp r8 1;
sub r8 r4 tmp;
(* sub.w	r9, r5, r9, lsl #1                        #! PC = 0x8005458 *)
shl tmp r9 1;
sub r9 r5 tmp;
(* sub.w	r10, r6, r10, lsl #1                      #! PC = 0x800545c *)
shl tmp r10 1;
sub r10 r6 tmp;
(* sub.w	r11, r7, r11, lsl #1                      #! PC = 0x8005460 *)
shl tmp r11 1;
sub r11 r7 tmp;
(* str.w	r8, [r0, #64]	; 0x40                      #! EA = L0x2001a514; PC = 0x8005464 *)
mov L0x2001a514 r8;
(* str.w	r9, [r0, #80]	; 0x50                      #! EA = L0x2001a524; PC = 0x8005468 *)
mov L0x2001a524 r9;
(* str.w	r10, [r0, #96]	; 0x60                     #! EA = L0x2001a534; PC = 0x800546c *)
mov L0x2001a534 r10;
(* str.w	r11, [r0, #112]	; 0x70                    #! EA = L0x2001a544; PC = 0x8005470 *)
mov L0x2001a544 r11;
(* str.w	r5, [r0, #16]                             #! EA = L0x2001a4e4; PC = 0x8005474 *)
mov L0x2001a4e4 r5;
(* str.w	r6, [r0, #32]                             #! EA = L0x2001a4f4; PC = 0x8005478 *)
mov L0x2001a4f4 r6;
(* str.w	r7, [r0, #48]	; 0x30                      #! EA = L0x2001a504; PC = 0x800547c *)
mov L0x2001a504 r7;
(* str.w	r4, [r0], #4                              #! EA = L0x2001a4d4; PC = 0x8005480 *)
mov L0x2001a4d4 r4;
(* add.w	r0, r0, #112	; 0x70                       #! PC = 0x8005484 *)
adds discard r0 r0 112@uint32;
(* vmov	r12, s2                                    #! PC = 0x8005488 *)
mov r12 s2;
(* ldr.w	r8, [r0, #64]	; 0x40                      #! EA = L0x2001a588; Value = 0x003efe2f; PC = 0x8005164 *)
mov r8 L0x2001a588;
(* ldr.w	r5, [r0, #80]	; 0x50                      #! EA = L0x2001a598; Value = 0xfec8c9ee; PC = 0x8005168 *)
mov r5 L0x2001a598;
(* ldr.w	r10, [r0, #96]	; 0x60                     #! EA = L0x2001a5a8; Value = 0x0086afbc; PC = 0x800516c *)
mov r10 L0x2001a5a8;
(* ldr.w	r7, [r0, #112]	; 0x70                     #! EA = L0x2001a5b8; Value = 0x0109ae75; PC = 0x8005170 *)
mov r7 L0x2001a5b8;
(* add	r8, r5                                      #! PC = 0x8005174 *)
add r8 r8 r5;
(* add	r10, r7                                     #! PC = 0x8005176 *)
add r10 r10 r7;
(* sub.w	r5, r8, r5, lsl #1                        #! PC = 0x8005178 *)
shl tmp r5 1;
sub r5 r8 tmp;
(* sub.w	r7, r10, r7, lsl #1                       #! PC = 0x800517c *)
shl tmp r7 1;
sub r7 r10 tmp;
(* add.w	r8, r8, r10                               #! PC = 0x8005180 *)
add r8 r8 r10;
(* sub.w	r10, r8, r10, lsl #1                      #! PC = 0x8005184 *)
shl tmp r10 1;
sub r10 r8 tmp;
(* vmov	r12, s8                                    #! PC = 0x8005188 *)
mov r12 s8;
(* vmov	lr, s10                                    #! PC = 0x800518c *)
mov lr s10;
(* smull	r4, r9, r5, r12                           #! PC = 0x8005190 *)
smull r9 r4 r5 r12;
(* smlal	r4, r9, r7, lr                            #! PC = 0x8005194 *)
cast r7@sint32 r7;
smull tmp_h tmp_l r7 lr;
uadds carry r4 tmp_l r4;
sadc r9 tmp_h r9 carry;
(* mul.w	r1, r4, r2                                #! PC = 0x8005198 *)
cast r4_s@sint32 r4;
mull discard r1 r4_s r2;
(* smlal	r4, r9, r1, r3                            #! PC = 0x800519c *)
cast r1@sint32 r1;
smull tmp_h tmp_l r1 r3;
uadds carry r4 tmp_l r4;
sadc r9 tmp_h r9 carry;
assert eqmod r4 0 (2**32) && true;
assume eq r4 0 && true;
(* smull	r6, r11, r5, lr                           #! PC = 0x80051a0 *)
smull r11 r6 r5 lr;
(* smlal	r6, r11, r7, r12                          #! PC = 0x80051a4 *)
cast r7@sint32 r7;
smull tmp_h tmp_l r7 r12;
uadds carry r6 tmp_l r6;
sadc r11 tmp_h r11 carry;
(* mul.w	r1, r6, r2                                #! PC = 0x80051a8 *)
cast r6_s@sint32 r6;
mull discard r1 r6_s r2;
(* smlal	r6, r11, r1, r3                           #! PC = 0x80051ac *)
cast r1@sint32 r1;
smull tmp_h tmp_l r1 r3;
uadds carry r6 tmp_l r6;
sadc r11 tmp_h r11 carry;
assert eqmod r6 0 (2**32) && true;
assume eq r6 0 && true;
(* ldr.w	r4, [r0]                                  #! EA = L0x2001a548; Value = 0xff89be56; PC = 0x80051b0 *)
mov r4 L0x2001a548;
(* ldr.w	r5, [r0, #16]                             #! EA = L0x2001a558; Value = 0x00b6dbab; PC = 0x80051b4 *)
mov r5 L0x2001a558;
(* ldr.w	r6, [r0, #32]                             #! EA = L0x2001a568; Value = 0x009e3f6c; PC = 0x80051b8 *)
mov r6 L0x2001a568;
(* ldr.w	r7, [r0, #48]	; 0x30                      #! EA = L0x2001a578; Value = 0x00c985d2; PC = 0x80051bc *)
mov r7 L0x2001a578;
(* add	r4, r5                                      #! PC = 0x80051c0 *)
add r4 r4 r5;
(* add	r6, r7                                      #! PC = 0x80051c2 *)
add r6 r6 r7;
(* sub.w	r5, r4, r5, lsl #1                        #! PC = 0x80051c4 *)
shl tmp r5 1;
sub r5 r4 tmp;
(* sub.w	r7, r6, r7, lsl #1                        #! PC = 0x80051c8 *)
shl tmp r7 1;
sub r7 r6 tmp;
(* vmov	r1, s6                                     #! PC = 0x80051cc *)
mov r1 s6;
(* smull	r12, r7, r7, r1                           #! PC = 0x80051d0 *)
smull r7 r12 r7 r1;
(* mul.w	lr, r12, r2                               #! PC = 0x80051d4 *)
cast r12_s@sint32 r12;
mull discard lr r12_s r2;
(* smlal	r12, r7, lr, r3                           #! PC = 0x80051d8 *)
cast lr@sint32 lr;
smull tmp_h tmp_l lr r3;
uadds carry r12 tmp_l r12;
sadc r7 tmp_h r7 carry;
assert eqmod r12 0 (2**32) && true;
assume eq r12 0 && true;
(* add	r4, r6                                      #! PC = 0x80051dc *)
add r4 r4 r6;
(* add	r5, r7                                      #! PC = 0x80051de *)
add r5 r5 r7;
(* sub.w	r6, r4, r6, lsl #1                        #! PC = 0x80051e0 *)
shl tmp r6 1;
sub r6 r4 tmp;
(* sub.w	r7, r5, r7, lsl #1                        #! PC = 0x80051e4 *)
shl tmp r7 1;
sub r7 r5 tmp;
(* smull	r12, r10, r10, r1                         #! PC = 0x80051e8 *)
smull r10 r12 r10 r1;
(* mul.w	lr, r12, r2                               #! PC = 0x80051ec *)
cast r12_s@sint32 r12;
mull discard lr r12_s r2;
(* smlal	r12, r10, lr, r3                          #! PC = 0x80051f0 *)
cast lr@sint32 lr;
smull tmp_h tmp_l lr r3;
uadds carry r12 tmp_l r12;
sadc r10 tmp_h r10 carry;
assert eqmod r12 0 (2**32) && true;
assume eq r12 0 && true;
(* add	r4, r8                                      #! PC = 0x80051f4 *)
add r4 r4 r8;
(* add	r5, r9                                      #! PC = 0x80051f6 *)
add r5 r5 r9;
(* add	r6, r10                                     #! PC = 0x80051f8 *)
add r6 r6 r10;
(* add	r7, r11                                     #! PC = 0x80051fa *)
add r7 r7 r11;
(* sub.w	r8, r4, r8, lsl #1                        #! PC = 0x80051fc *)
shl tmp r8 1;
sub r8 r4 tmp;
(* sub.w	r9, r5, r9, lsl #1                        #! PC = 0x8005200 *)
shl tmp r9 1;
sub r9 r5 tmp;
(* sub.w	r10, r6, r10, lsl #1                      #! PC = 0x8005204 *)
shl tmp r10 1;
sub r10 r6 tmp;
(* sub.w	r11, r7, r11, lsl #1                      #! PC = 0x8005208 *)
shl tmp r11 1;
sub r11 r7 tmp;
(* str.w	r8, [r0, #64]	; 0x40                      #! EA = L0x2001a588; PC = 0x800520c *)
mov L0x2001a588 r8;
(* str.w	r9, [r0, #80]	; 0x50                      #! EA = L0x2001a598; PC = 0x8005210 *)
mov L0x2001a598 r9;
(* str.w	r10, [r0, #96]	; 0x60                     #! EA = L0x2001a5a8; PC = 0x8005214 *)
mov L0x2001a5a8 r10;
(* str.w	r11, [r0, #112]	; 0x70                    #! EA = L0x2001a5b8; PC = 0x8005218 *)
mov L0x2001a5b8 r11;
(* str.w	r5, [r0, #16]                             #! EA = L0x2001a558; PC = 0x800521c *)
mov L0x2001a558 r5;
(* str.w	r6, [r0, #32]                             #! EA = L0x2001a568; PC = 0x8005220 *)
mov L0x2001a568 r6;
(* str.w	r7, [r0, #48]	; 0x30                      #! EA = L0x2001a578; PC = 0x8005224 *)
mov L0x2001a578 r7;
(* str.w	r4, [r0], #4                              #! EA = L0x2001a548; PC = 0x8005228 *)
mov L0x2001a548 r4;
(* ldr.w	r8, [r0, #64]	; 0x40                      #! EA = L0x2001a58c; Value = 0xff66d49c; PC = 0x800522c *)
mov r8 L0x2001a58c;
(* ldr.w	r5, [r0, #80]	; 0x50                      #! EA = L0x2001a59c; Value = 0xffe4202b; PC = 0x8005230 *)
mov r5 L0x2001a59c;
(* ldr.w	r10, [r0, #96]	; 0x60                     #! EA = L0x2001a5ac; Value = 0x014b9de5; PC = 0x8005234 *)
mov r10 L0x2001a5ac;
(* ldr.w	r7, [r0, #112]	; 0x70                     #! EA = L0x2001a5bc; Value = 0xff8daf7d; PC = 0x8005238 *)
mov r7 L0x2001a5bc;
(* add	r8, r5                                      #! PC = 0x800523c *)
add r8 r8 r5;
(* add	r10, r7                                     #! PC = 0x800523e *)
add r10 r10 r7;
(* sub.w	r5, r8, r5, lsl #1                        #! PC = 0x8005240 *)
shl tmp r5 1;
sub r5 r8 tmp;
(* sub.w	r7, r10, r7, lsl #1                       #! PC = 0x8005244 *)
shl tmp r7 1;
sub r7 r10 tmp;
(* add.w	r8, r8, r10                               #! PC = 0x8005248 *)
add r8 r8 r10;
(* sub.w	r10, r8, r10, lsl #1                      #! PC = 0x800524c *)
shl tmp r10 1;
sub r10 r8 tmp;
(* vmov	r12, s8                                    #! PC = 0x8005250 *)
mov r12 s8;
(* vmov	lr, s10                                    #! PC = 0x8005254 *)
mov lr s10;
(* smull	r4, r9, r5, r12                           #! PC = 0x8005258 *)
smull r9 r4 r5 r12;
(* smlal	r4, r9, r7, lr                            #! PC = 0x800525c *)
cast r7@sint32 r7;
smull tmp_h tmp_l r7 lr;
uadds carry r4 tmp_l r4;
sadc r9 tmp_h r9 carry;
(* mul.w	r1, r4, r2                                #! PC = 0x8005260 *)
cast r4_s@sint32 r4;
mull discard r1 r4_s r2;
(* smlal	r4, r9, r1, r3                            #! PC = 0x8005264 *)
cast r1@sint32 r1;
smull tmp_h tmp_l r1 r3;
uadds carry r4 tmp_l r4;
sadc r9 tmp_h r9 carry;
assert eqmod r4 0 (2**32) && true;
assume eq r4 0 && true;
(* smull	r6, r11, r5, lr                           #! PC = 0x8005268 *)
smull r11 r6 r5 lr;
(* smlal	r6, r11, r7, r12                          #! PC = 0x800526c *)
cast r7@sint32 r7;
smull tmp_h tmp_l r7 r12;
uadds carry r6 tmp_l r6;
sadc r11 tmp_h r11 carry;
(* mul.w	r1, r6, r2                                #! PC = 0x8005270 *)
cast r6_s@sint32 r6;
mull discard r1 r6_s r2;
(* smlal	r6, r11, r1, r3                           #! PC = 0x8005274 *)
cast r1@sint32 r1;
smull tmp_h tmp_l r1 r3;
uadds carry r6 tmp_l r6;
sadc r11 tmp_h r11 carry;
assert eqmod r6 0 (2**32) && true;
assume eq r6 0 && true;
(* ldr.w	r4, [r0]                                  #! EA = L0x2001a54c; Value = 0x00e095af; PC = 0x8005278 *)
mov r4 L0x2001a54c;
(* ldr.w	r5, [r0, #16]                             #! EA = L0x2001a55c; Value = 0x002a07e7; PC = 0x800527c *)
mov r5 L0x2001a55c;
(* ldr.w	r6, [r0, #32]                             #! EA = L0x2001a56c; Value = 0x00fc4cd5; PC = 0x8005280 *)
mov r6 L0x2001a56c;
(* ldr.w	r7, [r0, #48]	; 0x30                      #! EA = L0x2001a57c; Value = 0xfee09515; PC = 0x8005284 *)
mov r7 L0x2001a57c;
(* add	r4, r5                                      #! PC = 0x8005288 *)
add r4 r4 r5;
(* add	r6, r7                                      #! PC = 0x800528a *)
add r6 r6 r7;
(* sub.w	r5, r4, r5, lsl #1                        #! PC = 0x800528c *)
shl tmp r5 1;
sub r5 r4 tmp;
(* sub.w	r7, r6, r7, lsl #1                        #! PC = 0x8005290 *)
shl tmp r7 1;
sub r7 r6 tmp;
(* vmov	r1, s6                                     #! PC = 0x8005294 *)
mov r1 s6;
(* smull	r12, r7, r7, r1                           #! PC = 0x8005298 *)
smull r7 r12 r7 r1;
(* mul.w	lr, r12, r2                               #! PC = 0x800529c *)
cast r12_s@sint32 r12;
mull discard lr r12_s r2;
(* smlal	r12, r7, lr, r3                           #! PC = 0x80052a0 *)
cast lr@sint32 lr;
smull tmp_h tmp_l lr r3;
uadds carry r12 tmp_l r12;
sadc r7 tmp_h r7 carry;
assert eqmod r12 0 (2**32) && true;
assume eq r12 0 && true;
(* add	r4, r6                                      #! PC = 0x80052a4 *)
add r4 r4 r6;
(* add	r5, r7                                      #! PC = 0x80052a6 *)
add r5 r5 r7;
(* sub.w	r6, r4, r6, lsl #1                        #! PC = 0x80052a8 *)
shl tmp r6 1;
sub r6 r4 tmp;
(* sub.w	r7, r5, r7, lsl #1                        #! PC = 0x80052ac *)
shl tmp r7 1;
sub r7 r5 tmp;
(* smull	r12, r10, r10, r1                         #! PC = 0x80052b0 *)
smull r10 r12 r10 r1;
(* mul.w	lr, r12, r2                               #! PC = 0x80052b4 *)
cast r12_s@sint32 r12;
mull discard lr r12_s r2;
(* smlal	r12, r10, lr, r3                          #! PC = 0x80052b8 *)
cast lr@sint32 lr;
smull tmp_h tmp_l lr r3;
uadds carry r12 tmp_l r12;
sadc r10 tmp_h r10 carry;
assert eqmod r12 0 (2**32) && true;
assume eq r12 0 && true;
(* add	r4, r8                                      #! PC = 0x80052bc *)
add r4 r4 r8;
(* add	r5, r9                                      #! PC = 0x80052be *)
add r5 r5 r9;
(* add	r6, r10                                     #! PC = 0x80052c0 *)
add r6 r6 r10;
(* add	r7, r11                                     #! PC = 0x80052c2 *)
add r7 r7 r11;
(* sub.w	r8, r4, r8, lsl #1                        #! PC = 0x80052c4 *)
shl tmp r8 1;
sub r8 r4 tmp;
(* sub.w	r9, r5, r9, lsl #1                        #! PC = 0x80052c8 *)
shl tmp r9 1;
sub r9 r5 tmp;
(* sub.w	r10, r6, r10, lsl #1                      #! PC = 0x80052cc *)
shl tmp r10 1;
sub r10 r6 tmp;
(* sub.w	r11, r7, r11, lsl #1                      #! PC = 0x80052d0 *)
shl tmp r11 1;
sub r11 r7 tmp;
(* str.w	r8, [r0, #64]	; 0x40                      #! EA = L0x2001a58c; PC = 0x80052d4 *)
mov L0x2001a58c r8;
(* str.w	r9, [r0, #80]	; 0x50                      #! EA = L0x2001a59c; PC = 0x80052d8 *)
mov L0x2001a59c r9;
(* str.w	r10, [r0, #96]	; 0x60                     #! EA = L0x2001a5ac; PC = 0x80052dc *)
mov L0x2001a5ac r10;
(* str.w	r11, [r0, #112]	; 0x70                    #! EA = L0x2001a5bc; PC = 0x80052e0 *)
mov L0x2001a5bc r11;
(* str.w	r5, [r0, #16]                             #! EA = L0x2001a55c; PC = 0x80052e4 *)
mov L0x2001a55c r5;
(* str.w	r6, [r0, #32]                             #! EA = L0x2001a56c; PC = 0x80052e8 *)
mov L0x2001a56c r6;
(* str.w	r7, [r0, #48]	; 0x30                      #! EA = L0x2001a57c; PC = 0x80052ec *)
mov L0x2001a57c r7;
(* str.w	r4, [r0], #4                              #! EA = L0x2001a54c; PC = 0x80052f0 *)
mov L0x2001a54c r4;
(* ldr.w	r8, [r0, #64]	; 0x40                      #! EA = L0x2001a590; Value = 0x00078857; PC = 0x80052f4 *)
mov r8 L0x2001a590;
(* ldr.w	r5, [r0, #80]	; 0x50                      #! EA = L0x2001a5a0; Value = 0x00bfe20f; PC = 0x80052f8 *)
mov r5 L0x2001a5a0;
(* ldr.w	r10, [r0, #96]	; 0x60                     #! EA = L0x2001a5b0; Value = 0x01a0f3ed; PC = 0x80052fc *)
mov r10 L0x2001a5b0;
(* ldr.w	r7, [r0, #112]	; 0x70                     #! EA = L0x2001a5c0; Value = 0xffba6835; PC = 0x8005300 *)
mov r7 L0x2001a5c0;
(* add	r8, r5                                      #! PC = 0x8005304 *)
add r8 r8 r5;
(* add	r10, r7                                     #! PC = 0x8005306 *)
add r10 r10 r7;
(* sub.w	r5, r8, r5, lsl #1                        #! PC = 0x8005308 *)
shl tmp r5 1;
sub r5 r8 tmp;
(* sub.w	r7, r10, r7, lsl #1                       #! PC = 0x800530c *)
shl tmp r7 1;
sub r7 r10 tmp;
(* add.w	r8, r8, r10                               #! PC = 0x8005310 *)
add r8 r8 r10;
(* sub.w	r10, r8, r10, lsl #1                      #! PC = 0x8005314 *)
shl tmp r10 1;
sub r10 r8 tmp;
(* vmov	r12, s8                                    #! PC = 0x8005318 *)
mov r12 s8;
(* vmov	lr, s10                                    #! PC = 0x800531c *)
mov lr s10;
(* smull	r4, r9, r5, r12                           #! PC = 0x8005320 *)
smull r9 r4 r5 r12;
(* smlal	r4, r9, r7, lr                            #! PC = 0x8005324 *)
cast r7@sint32 r7;
smull tmp_h tmp_l r7 lr;
uadds carry r4 tmp_l r4;
sadc r9 tmp_h r9 carry;
(* mul.w	r1, r4, r2                                #! PC = 0x8005328 *)
cast r4_s@sint32 r4;
mull discard r1 r4_s r2;
(* smlal	r4, r9, r1, r3                            #! PC = 0x800532c *)
cast r1@sint32 r1;
smull tmp_h tmp_l r1 r3;
uadds carry r4 tmp_l r4;
sadc r9 tmp_h r9 carry;
assert eqmod r4 0 (2**32) && true;
assume eq r4 0 && true;
(* smull	r6, r11, r5, lr                           #! PC = 0x8005330 *)
smull r11 r6 r5 lr;
(* smlal	r6, r11, r7, r12                          #! PC = 0x8005334 *)
cast r7@sint32 r7;
smull tmp_h tmp_l r7 r12;
uadds carry r6 tmp_l r6;
sadc r11 tmp_h r11 carry;
(* mul.w	r1, r6, r2                                #! PC = 0x8005338 *)
cast r6_s@sint32 r6;
mull discard r1 r6_s r2;
(* smlal	r6, r11, r1, r3                           #! PC = 0x800533c *)
cast r1@sint32 r1;
smull tmp_h tmp_l r1 r3;
uadds carry r6 tmp_l r6;
sadc r11 tmp_h r11 carry;
assert eqmod r6 0 (2**32) && true;
assume eq r6 0 && true;
(* ldr.w	r4, [r0]                                  #! EA = L0x2001a550; Value = 0x01b2bd8f; PC = 0x8005340 *)
mov r4 L0x2001a550;
(* ldr.w	r5, [r0, #16]                             #! EA = L0x2001a560; Value = 0xff76166f; PC = 0x8005344 *)
mov r5 L0x2001a560;
(* ldr.w	r6, [r0, #32]                             #! EA = L0x2001a570; Value = 0x000702b2; PC = 0x8005348 *)
mov r6 L0x2001a570;
(* ldr.w	r7, [r0, #48]	; 0x30                      #! EA = L0x2001a580; Value = 0xff45df60; PC = 0x800534c *)
mov r7 L0x2001a580;
(* add	r4, r5                                      #! PC = 0x8005350 *)
add r4 r4 r5;
(* add	r6, r7                                      #! PC = 0x8005352 *)
add r6 r6 r7;
(* sub.w	r5, r4, r5, lsl #1                        #! PC = 0x8005354 *)
shl tmp r5 1;
sub r5 r4 tmp;
(* sub.w	r7, r6, r7, lsl #1                        #! PC = 0x8005358 *)
shl tmp r7 1;
sub r7 r6 tmp;
(* vmov	r1, s6                                     #! PC = 0x800535c *)
mov r1 s6;
(* smull	r12, r7, r7, r1                           #! PC = 0x8005360 *)
smull r7 r12 r7 r1;
(* mul.w	lr, r12, r2                               #! PC = 0x8005364 *)
cast r12_s@sint32 r12;
mull discard lr r12_s r2;
(* smlal	r12, r7, lr, r3                           #! PC = 0x8005368 *)
cast lr@sint32 lr;
smull tmp_h tmp_l lr r3;
uadds carry r12 tmp_l r12;
sadc r7 tmp_h r7 carry;
assert eqmod r12 0 (2**32) && true;
assume eq r12 0 && true;
(* add	r4, r6                                      #! PC = 0x800536c *)
add r4 r4 r6;
(* add	r5, r7                                      #! PC = 0x800536e *)
add r5 r5 r7;
(* sub.w	r6, r4, r6, lsl #1                        #! PC = 0x8005370 *)
shl tmp r6 1;
sub r6 r4 tmp;
(* sub.w	r7, r5, r7, lsl #1                        #! PC = 0x8005374 *)
shl tmp r7 1;
sub r7 r5 tmp;
(* smull	r12, r10, r10, r1                         #! PC = 0x8005378 *)
smull r10 r12 r10 r1;
(* mul.w	lr, r12, r2                               #! PC = 0x800537c *)
cast r12_s@sint32 r12;
mull discard lr r12_s r2;
(* smlal	r12, r10, lr, r3                          #! PC = 0x8005380 *)
cast lr@sint32 lr;
smull tmp_h tmp_l lr r3;
uadds carry r12 tmp_l r12;
sadc r10 tmp_h r10 carry;
assert eqmod r12 0 (2**32) && true;
assume eq r12 0 && true;
(* add	r4, r8                                      #! PC = 0x8005384 *)
add r4 r4 r8;
(* add	r5, r9                                      #! PC = 0x8005386 *)
add r5 r5 r9;
(* add	r6, r10                                     #! PC = 0x8005388 *)
add r6 r6 r10;
(* add	r7, r11                                     #! PC = 0x800538a *)
add r7 r7 r11;
(* sub.w	r8, r4, r8, lsl #1                        #! PC = 0x800538c *)
shl tmp r8 1;
sub r8 r4 tmp;
(* sub.w	r9, r5, r9, lsl #1                        #! PC = 0x8005390 *)
shl tmp r9 1;
sub r9 r5 tmp;
(* sub.w	r10, r6, r10, lsl #1                      #! PC = 0x8005394 *)
shl tmp r10 1;
sub r10 r6 tmp;
(* sub.w	r11, r7, r11, lsl #1                      #! PC = 0x8005398 *)
shl tmp r11 1;
sub r11 r7 tmp;
(* str.w	r8, [r0, #64]	; 0x40                      #! EA = L0x2001a590; PC = 0x800539c *)
mov L0x2001a590 r8;
(* str.w	r9, [r0, #80]	; 0x50                      #! EA = L0x2001a5a0; PC = 0x80053a0 *)
mov L0x2001a5a0 r9;
(* str.w	r10, [r0, #96]	; 0x60                     #! EA = L0x2001a5b0; PC = 0x80053a4 *)
mov L0x2001a5b0 r10;
(* str.w	r11, [r0, #112]	; 0x70                    #! EA = L0x2001a5c0; PC = 0x80053a8 *)
mov L0x2001a5c0 r11;
(* str.w	r5, [r0, #16]                             #! EA = L0x2001a560; PC = 0x80053ac *)
mov L0x2001a560 r5;
(* str.w	r6, [r0, #32]                             #! EA = L0x2001a570; PC = 0x80053b0 *)
mov L0x2001a570 r6;
(* str.w	r7, [r0, #48]	; 0x30                      #! EA = L0x2001a580; PC = 0x80053b4 *)
mov L0x2001a580 r7;
(* str.w	r4, [r0], #4                              #! EA = L0x2001a550; PC = 0x80053b8 *)
mov L0x2001a550 r4;
(* ldr.w	r8, [r0, #64]	; 0x40                      #! EA = L0x2001a594; Value = 0xff853b19; PC = 0x80053bc *)
mov r8 L0x2001a594;
(* ldr.w	r5, [r0, #80]	; 0x50                      #! EA = L0x2001a5a4; Value = 0x004d81ab; PC = 0x80053c0 *)
mov r5 L0x2001a5a4;
(* ldr.w	r10, [r0, #96]	; 0x60                     #! EA = L0x2001a5b4; Value = 0x0161e5fd; PC = 0x80053c4 *)
mov r10 L0x2001a5b4;
(* ldr.w	r7, [r0, #112]	; 0x70                     #! EA = L0x2001a5c4; Value = 0xff50a5d5; PC = 0x80053c8 *)
mov r7 L0x2001a5c4;
(* add	r8, r5                                      #! PC = 0x80053cc *)
add r8 r8 r5;
(* add	r10, r7                                     #! PC = 0x80053ce *)
add r10 r10 r7;
(* sub.w	r5, r8, r5, lsl #1                        #! PC = 0x80053d0 *)
shl tmp r5 1;
sub r5 r8 tmp;
(* sub.w	r7, r10, r7, lsl #1                       #! PC = 0x80053d4 *)
shl tmp r7 1;
sub r7 r10 tmp;
(* add.w	r8, r8, r10                               #! PC = 0x80053d8 *)
add r8 r8 r10;
(* sub.w	r10, r8, r10, lsl #1                      #! PC = 0x80053dc *)
shl tmp r10 1;
sub r10 r8 tmp;
(* vmov	r12, s8                                    #! PC = 0x80053e0 *)
mov r12 s8;
(* vmov	lr, s10                                    #! PC = 0x80053e4 *)
mov lr s10;
(* smull	r4, r9, r5, r12                           #! PC = 0x80053e8 *)
smull r9 r4 r5 r12;
(* smlal	r4, r9, r7, lr                            #! PC = 0x80053ec *)
cast r7@sint32 r7;
smull tmp_h tmp_l r7 lr;
uadds carry r4 tmp_l r4;
sadc r9 tmp_h r9 carry;
(* mul.w	r1, r4, r2                                #! PC = 0x80053f0 *)
cast r4_s@sint32 r4;
mull discard r1 r4_s r2;
(* smlal	r4, r9, r1, r3                            #! PC = 0x80053f4 *)
cast r1@sint32 r1;
smull tmp_h tmp_l r1 r3;
uadds carry r4 tmp_l r4;
sadc r9 tmp_h r9 carry;
assert eqmod r4 0 (2**32) && true;
assume eq r4 0 && true;
(* smull	r6, r11, r5, lr                           #! PC = 0x80053f8 *)
smull r11 r6 r5 lr;
(* smlal	r6, r11, r7, r12                          #! PC = 0x80053fc *)
cast r7@sint32 r7;
smull tmp_h tmp_l r7 r12;
uadds carry r6 tmp_l r6;
sadc r11 tmp_h r11 carry;
(* mul.w	r1, r6, r2                                #! PC = 0x8005400 *)
cast r6_s@sint32 r6;
mull discard r1 r6_s r2;
(* smlal	r6, r11, r1, r3                           #! PC = 0x8005404 *)
cast r1@sint32 r1;
smull tmp_h tmp_l r1 r3;
uadds carry r6 tmp_l r6;
sadc r11 tmp_h r11 carry;
assert eqmod r6 0 (2**32) && true;
assume eq r6 0 && true;
(* ldr.w	r4, [r0]                                  #! EA = L0x2001a554; Value = 0xffdda925; PC = 0x8005408 *)
mov r4 L0x2001a554;
(* ldr.w	r5, [r0, #16]                             #! EA = L0x2001a564; Value = 0x00d08fd4; PC = 0x800540c *)
mov r5 L0x2001a564;
(* ldr.w	r6, [r0, #32]                             #! EA = L0x2001a574; Value = 0x00d9b496; PC = 0x8005410 *)
mov r6 L0x2001a574;
(* ldr.w	r7, [r0, #48]	; 0x30                      #! EA = L0x2001a584; Value = 0xff11bba7; PC = 0x8005414 *)
mov r7 L0x2001a584;
(* add	r4, r5                                      #! PC = 0x8005418 *)
add r4 r4 r5;
(* add	r6, r7                                      #! PC = 0x800541a *)
add r6 r6 r7;
(* sub.w	r5, r4, r5, lsl #1                        #! PC = 0x800541c *)
shl tmp r5 1;
sub r5 r4 tmp;
(* sub.w	r7, r6, r7, lsl #1                        #! PC = 0x8005420 *)
shl tmp r7 1;
sub r7 r6 tmp;
(* vmov	r1, s6                                     #! PC = 0x8005424 *)
mov r1 s6;
(* smull	r12, r7, r7, r1                           #! PC = 0x8005428 *)
smull r7 r12 r7 r1;
(* mul.w	lr, r12, r2                               #! PC = 0x800542c *)
cast r12_s@sint32 r12;
mull discard lr r12_s r2;
(* smlal	r12, r7, lr, r3                           #! PC = 0x8005430 *)
cast lr@sint32 lr;
smull tmp_h tmp_l lr r3;
uadds carry r12 tmp_l r12;
sadc r7 tmp_h r7 carry;
assert eqmod r12 0 (2**32) && true;
assume eq r12 0 && true;
(* add	r4, r6                                      #! PC = 0x8005434 *)
add r4 r4 r6;
(* add	r5, r7                                      #! PC = 0x8005436 *)
add r5 r5 r7;
(* sub.w	r6, r4, r6, lsl #1                        #! PC = 0x8005438 *)
shl tmp r6 1;
sub r6 r4 tmp;
(* sub.w	r7, r5, r7, lsl #1                        #! PC = 0x800543c *)
shl tmp r7 1;
sub r7 r5 tmp;
(* smull	r12, r10, r10, r1                         #! PC = 0x8005440 *)
smull r10 r12 r10 r1;
(* mul.w	lr, r12, r2                               #! PC = 0x8005444 *)
cast r12_s@sint32 r12;
mull discard lr r12_s r2;
(* smlal	r12, r10, lr, r3                          #! PC = 0x8005448 *)
cast lr@sint32 lr;
smull tmp_h tmp_l lr r3;
uadds carry r12 tmp_l r12;
sadc r10 tmp_h r10 carry;
assert eqmod r12 0 (2**32) && true;
assume eq r12 0 && true;
(* add	r4, r8                                      #! PC = 0x800544c *)
add r4 r4 r8;
(* add	r5, r9                                      #! PC = 0x800544e *)
add r5 r5 r9;
(* add	r6, r10                                     #! PC = 0x8005450 *)
add r6 r6 r10;
(* add	r7, r11                                     #! PC = 0x8005452 *)
add r7 r7 r11;
(* sub.w	r8, r4, r8, lsl #1                        #! PC = 0x8005454 *)
shl tmp r8 1;
sub r8 r4 tmp;
(* sub.w	r9, r5, r9, lsl #1                        #! PC = 0x8005458 *)
shl tmp r9 1;
sub r9 r5 tmp;
(* sub.w	r10, r6, r10, lsl #1                      #! PC = 0x800545c *)
shl tmp r10 1;
sub r10 r6 tmp;
(* sub.w	r11, r7, r11, lsl #1                      #! PC = 0x8005460 *)
shl tmp r11 1;
sub r11 r7 tmp;
(* str.w	r8, [r0, #64]	; 0x40                      #! EA = L0x2001a594; PC = 0x8005464 *)
mov L0x2001a594 r8;
(* str.w	r9, [r0, #80]	; 0x50                      #! EA = L0x2001a5a4; PC = 0x8005468 *)
mov L0x2001a5a4 r9;
(* str.w	r10, [r0, #96]	; 0x60                     #! EA = L0x2001a5b4; PC = 0x800546c *)
mov L0x2001a5b4 r10;
(* str.w	r11, [r0, #112]	; 0x70                    #! EA = L0x2001a5c4; PC = 0x8005470 *)
mov L0x2001a5c4 r11;
(* str.w	r5, [r0, #16]                             #! EA = L0x2001a564; PC = 0x8005474 *)
mov L0x2001a564 r5;
(* str.w	r6, [r0, #32]                             #! EA = L0x2001a574; PC = 0x8005478 *)
mov L0x2001a574 r6;
(* str.w	r7, [r0, #48]	; 0x30                      #! EA = L0x2001a584; PC = 0x800547c *)
mov L0x2001a584 r7;
(* str.w	r4, [r0], #4                              #! EA = L0x2001a554; PC = 0x8005480 *)
mov L0x2001a554 r4;
(* add.w	r0, r0, #112	; 0x70                       #! PC = 0x8005484 *)
adds discard r0 r0 112@uint32;
(* vmov	r12, s2                                    #! PC = 0x8005488 *)
mov r12 s2;
(* ldr.w	r8, [r0, #64]	; 0x40                      #! EA = L0x2001a608; Value = 0x00032069; PC = 0x8005164 *)
mov r8 L0x2001a608;
(* ldr.w	r5, [r0, #80]	; 0x50                      #! EA = L0x2001a618; Value = 0x0103172b; PC = 0x8005168 *)
mov r5 L0x2001a618;
(* ldr.w	r10, [r0, #96]	; 0x60                     #! EA = L0x2001a628; Value = 0x0088e27b; PC = 0x800516c *)
mov r10 L0x2001a628;
(* ldr.w	r7, [r0, #112]	; 0x70                     #! EA = L0x2001a638; Value = 0xff7aca32; PC = 0x8005170 *)
mov r7 L0x2001a638;
(* add	r8, r5                                      #! PC = 0x8005174 *)
add r8 r8 r5;
(* add	r10, r7                                     #! PC = 0x8005176 *)
add r10 r10 r7;
(* sub.w	r5, r8, r5, lsl #1                        #! PC = 0x8005178 *)
shl tmp r5 1;
sub r5 r8 tmp;
(* sub.w	r7, r10, r7, lsl #1                       #! PC = 0x800517c *)
shl tmp r7 1;
sub r7 r10 tmp;
(* add.w	r8, r8, r10                               #! PC = 0x8005180 *)
add r8 r8 r10;
(* sub.w	r10, r8, r10, lsl #1                      #! PC = 0x8005184 *)
shl tmp r10 1;
sub r10 r8 tmp;
(* vmov	r12, s8                                    #! PC = 0x8005188 *)
mov r12 s8;
(* vmov	lr, s10                                    #! PC = 0x800518c *)
mov lr s10;
(* smull	r4, r9, r5, r12                           #! PC = 0x8005190 *)
smull r9 r4 r5 r12;
(* smlal	r4, r9, r7, lr                            #! PC = 0x8005194 *)
cast r7@sint32 r7;
smull tmp_h tmp_l r7 lr;
uadds carry r4 tmp_l r4;
sadc r9 tmp_h r9 carry;
(* mul.w	r1, r4, r2                                #! PC = 0x8005198 *)
cast r4_s@sint32 r4;
mull discard r1 r4_s r2;
(* smlal	r4, r9, r1, r3                            #! PC = 0x800519c *)
cast r1@sint32 r1;
smull tmp_h tmp_l r1 r3;
uadds carry r4 tmp_l r4;
sadc r9 tmp_h r9 carry;
assert eqmod r4 0 (2**32) && true;
assume eq r4 0 && true;
(* smull	r6, r11, r5, lr                           #! PC = 0x80051a0 *)
smull r11 r6 r5 lr;
(* smlal	r6, r11, r7, r12                          #! PC = 0x80051a4 *)
cast r7@sint32 r7;
smull tmp_h tmp_l r7 r12;
uadds carry r6 tmp_l r6;
sadc r11 tmp_h r11 carry;
(* mul.w	r1, r6, r2                                #! PC = 0x80051a8 *)
cast r6_s@sint32 r6;
mull discard r1 r6_s r2;
(* smlal	r6, r11, r1, r3                           #! PC = 0x80051ac *)
cast r1@sint32 r1;
smull tmp_h tmp_l r1 r3;
uadds carry r6 tmp_l r6;
sadc r11 tmp_h r11 carry;
assert eqmod r6 0 (2**32) && true;
assume eq r6 0 && true;
(* ldr.w	r4, [r0]                                  #! EA = L0x2001a5c8; Value = 0xffed85ae; PC = 0x80051b0 *)
mov r4 L0x2001a5c8;
(* ldr.w	r5, [r0, #16]                             #! EA = L0x2001a5d8; Value = 0xffb63cc8; PC = 0x80051b4 *)
mov r5 L0x2001a5d8;
(* ldr.w	r6, [r0, #32]                             #! EA = L0x2001a5e8; Value = 0x0024b907; PC = 0x80051b8 *)
mov r6 L0x2001a5e8;
(* ldr.w	r7, [r0, #48]	; 0x30                      #! EA = L0x2001a5f8; Value = 0x01277a34; PC = 0x80051bc *)
mov r7 L0x2001a5f8;
(* add	r4, r5                                      #! PC = 0x80051c0 *)
add r4 r4 r5;
(* add	r6, r7                                      #! PC = 0x80051c2 *)
add r6 r6 r7;
(* sub.w	r5, r4, r5, lsl #1                        #! PC = 0x80051c4 *)
shl tmp r5 1;
sub r5 r4 tmp;
(* sub.w	r7, r6, r7, lsl #1                        #! PC = 0x80051c8 *)
shl tmp r7 1;
sub r7 r6 tmp;
(* vmov	r1, s6                                     #! PC = 0x80051cc *)
mov r1 s6;
(* smull	r12, r7, r7, r1                           #! PC = 0x80051d0 *)
smull r7 r12 r7 r1;
(* mul.w	lr, r12, r2                               #! PC = 0x80051d4 *)
cast r12_s@sint32 r12;
mull discard lr r12_s r2;
(* smlal	r12, r7, lr, r3                           #! PC = 0x80051d8 *)
cast lr@sint32 lr;
smull tmp_h tmp_l lr r3;
uadds carry r12 tmp_l r12;
sadc r7 tmp_h r7 carry;
assert eqmod r12 0 (2**32) && true;
assume eq r12 0 && true;
(* add	r4, r6                                      #! PC = 0x80051dc *)
add r4 r4 r6;
(* add	r5, r7                                      #! PC = 0x80051de *)
add r5 r5 r7;
(* sub.w	r6, r4, r6, lsl #1                        #! PC = 0x80051e0 *)
shl tmp r6 1;
sub r6 r4 tmp;
(* sub.w	r7, r5, r7, lsl #1                        #! PC = 0x80051e4 *)
shl tmp r7 1;
sub r7 r5 tmp;
(* smull	r12, r10, r10, r1                         #! PC = 0x80051e8 *)
smull r10 r12 r10 r1;
(* mul.w	lr, r12, r2                               #! PC = 0x80051ec *)
cast r12_s@sint32 r12;
mull discard lr r12_s r2;
(* smlal	r12, r10, lr, r3                          #! PC = 0x80051f0 *)
cast lr@sint32 lr;
smull tmp_h tmp_l lr r3;
uadds carry r12 tmp_l r12;
sadc r10 tmp_h r10 carry;
assert eqmod r12 0 (2**32) && true;
assume eq r12 0 && true;
(* add	r4, r8                                      #! PC = 0x80051f4 *)
add r4 r4 r8;
(* add	r5, r9                                      #! PC = 0x80051f6 *)
add r5 r5 r9;
(* add	r6, r10                                     #! PC = 0x80051f8 *)
add r6 r6 r10;
(* add	r7, r11                                     #! PC = 0x80051fa *)
add r7 r7 r11;
(* sub.w	r8, r4, r8, lsl #1                        #! PC = 0x80051fc *)
shl tmp r8 1;
sub r8 r4 tmp;
(* sub.w	r9, r5, r9, lsl #1                        #! PC = 0x8005200 *)
shl tmp r9 1;
sub r9 r5 tmp;
(* sub.w	r10, r6, r10, lsl #1                      #! PC = 0x8005204 *)
shl tmp r10 1;
sub r10 r6 tmp;
(* sub.w	r11, r7, r11, lsl #1                      #! PC = 0x8005208 *)
shl tmp r11 1;
sub r11 r7 tmp;
(* str.w	r8, [r0, #64]	; 0x40                      #! EA = L0x2001a608; PC = 0x800520c *)
mov L0x2001a608 r8;
(* str.w	r9, [r0, #80]	; 0x50                      #! EA = L0x2001a618; PC = 0x8005210 *)
mov L0x2001a618 r9;
(* str.w	r10, [r0, #96]	; 0x60                     #! EA = L0x2001a628; PC = 0x8005214 *)
mov L0x2001a628 r10;
(* str.w	r11, [r0, #112]	; 0x70                    #! EA = L0x2001a638; PC = 0x8005218 *)
mov L0x2001a638 r11;
(* str.w	r5, [r0, #16]                             #! EA = L0x2001a5d8; PC = 0x800521c *)
mov L0x2001a5d8 r5;
(* str.w	r6, [r0, #32]                             #! EA = L0x2001a5e8; PC = 0x8005220 *)
mov L0x2001a5e8 r6;
(* str.w	r7, [r0, #48]	; 0x30                      #! EA = L0x2001a5f8; PC = 0x8005224 *)
mov L0x2001a5f8 r7;
(* str.w	r4, [r0], #4                              #! EA = L0x2001a5c8; PC = 0x8005228 *)
mov L0x2001a5c8 r4;
(* ldr.w	r8, [r0, #64]	; 0x40                      #! EA = L0x2001a60c; Value = 0xffb9c2ce; PC = 0x800522c *)
mov r8 L0x2001a60c;
(* ldr.w	r5, [r0, #80]	; 0x50                      #! EA = L0x2001a61c; Value = 0xff7a5229; PC = 0x8005230 *)
mov r5 L0x2001a61c;
(* ldr.w	r10, [r0, #96]	; 0x60                     #! EA = L0x2001a62c; Value = 0x01249483; PC = 0x8005234 *)
mov r10 L0x2001a62c;
(* ldr.w	r7, [r0, #112]	; 0x70                     #! EA = L0x2001a63c; Value = 0xffe41849; PC = 0x8005238 *)
mov r7 L0x2001a63c;
(* add	r8, r5                                      #! PC = 0x800523c *)
add r8 r8 r5;
(* add	r10, r7                                     #! PC = 0x800523e *)
add r10 r10 r7;
(* sub.w	r5, r8, r5, lsl #1                        #! PC = 0x8005240 *)
shl tmp r5 1;
sub r5 r8 tmp;
(* sub.w	r7, r10, r7, lsl #1                       #! PC = 0x8005244 *)
shl tmp r7 1;
sub r7 r10 tmp;
(* add.w	r8, r8, r10                               #! PC = 0x8005248 *)
add r8 r8 r10;
(* sub.w	r10, r8, r10, lsl #1                      #! PC = 0x800524c *)
shl tmp r10 1;
sub r10 r8 tmp;
(* vmov	r12, s8                                    #! PC = 0x8005250 *)
mov r12 s8;
(* vmov	lr, s10                                    #! PC = 0x8005254 *)
mov lr s10;
(* smull	r4, r9, r5, r12                           #! PC = 0x8005258 *)
smull r9 r4 r5 r12;
(* smlal	r4, r9, r7, lr                            #! PC = 0x800525c *)
cast r7@sint32 r7;
smull tmp_h tmp_l r7 lr;
uadds carry r4 tmp_l r4;
sadc r9 tmp_h r9 carry;
(* mul.w	r1, r4, r2                                #! PC = 0x8005260 *)
cast r4_s@sint32 r4;
mull discard r1 r4_s r2;
(* smlal	r4, r9, r1, r3                            #! PC = 0x8005264 *)
cast r1@sint32 r1;
smull tmp_h tmp_l r1 r3;
uadds carry r4 tmp_l r4;
sadc r9 tmp_h r9 carry;
assert eqmod r4 0 (2**32) && true;
assume eq r4 0 && true;
(* smull	r6, r11, r5, lr                           #! PC = 0x8005268 *)
smull r11 r6 r5 lr;
(* smlal	r6, r11, r7, r12                          #! PC = 0x800526c *)
cast r7@sint32 r7;
smull tmp_h tmp_l r7 r12;
uadds carry r6 tmp_l r6;
sadc r11 tmp_h r11 carry;
(* mul.w	r1, r6, r2                                #! PC = 0x8005270 *)
cast r6_s@sint32 r6;
mull discard r1 r6_s r2;
(* smlal	r6, r11, r1, r3                           #! PC = 0x8005274 *)
cast r1@sint32 r1;
smull tmp_h tmp_l r1 r3;
uadds carry r6 tmp_l r6;
sadc r11 tmp_h r11 carry;
assert eqmod r6 0 (2**32) && true;
assume eq r6 0 && true;
(* ldr.w	r4, [r0]                                  #! EA = L0x2001a5cc; Value = 0x0003333b; PC = 0x8005278 *)
mov r4 L0x2001a5cc;
(* ldr.w	r5, [r0, #16]                             #! EA = L0x2001a5dc; Value = 0x00763fac; PC = 0x800527c *)
mov r5 L0x2001a5dc;
(* ldr.w	r6, [r0, #32]                             #! EA = L0x2001a5ec; Value = 0xff4ee503; PC = 0x8005280 *)
mov r6 L0x2001a5ec;
(* ldr.w	r7, [r0, #48]	; 0x30                      #! EA = L0x2001a5fc; Value = 0x01f0acae; PC = 0x8005284 *)
mov r7 L0x2001a5fc;
(* add	r4, r5                                      #! PC = 0x8005288 *)
add r4 r4 r5;
(* add	r6, r7                                      #! PC = 0x800528a *)
add r6 r6 r7;
(* sub.w	r5, r4, r5, lsl #1                        #! PC = 0x800528c *)
shl tmp r5 1;
sub r5 r4 tmp;
(* sub.w	r7, r6, r7, lsl #1                        #! PC = 0x8005290 *)
shl tmp r7 1;
sub r7 r6 tmp;
(* vmov	r1, s6                                     #! PC = 0x8005294 *)
mov r1 s6;
(* smull	r12, r7, r7, r1                           #! PC = 0x8005298 *)
smull r7 r12 r7 r1;
(* mul.w	lr, r12, r2                               #! PC = 0x800529c *)
cast r12_s@sint32 r12;
mull discard lr r12_s r2;
(* smlal	r12, r7, lr, r3                           #! PC = 0x80052a0 *)
cast lr@sint32 lr;
smull tmp_h tmp_l lr r3;
uadds carry r12 tmp_l r12;
sadc r7 tmp_h r7 carry;
assert eqmod r12 0 (2**32) && true;
assume eq r12 0 && true;
(* add	r4, r6                                      #! PC = 0x80052a4 *)
add r4 r4 r6;
(* add	r5, r7                                      #! PC = 0x80052a6 *)
add r5 r5 r7;
(* sub.w	r6, r4, r6, lsl #1                        #! PC = 0x80052a8 *)
shl tmp r6 1;
sub r6 r4 tmp;
(* sub.w	r7, r5, r7, lsl #1                        #! PC = 0x80052ac *)
shl tmp r7 1;
sub r7 r5 tmp;
(* smull	r12, r10, r10, r1                         #! PC = 0x80052b0 *)
smull r10 r12 r10 r1;
(* mul.w	lr, r12, r2                               #! PC = 0x80052b4 *)
cast r12_s@sint32 r12;
mull discard lr r12_s r2;
(* smlal	r12, r10, lr, r3                          #! PC = 0x80052b8 *)
cast lr@sint32 lr;
smull tmp_h tmp_l lr r3;
uadds carry r12 tmp_l r12;
sadc r10 tmp_h r10 carry;
assert eqmod r12 0 (2**32) && true;
assume eq r12 0 && true;
(* add	r4, r8                                      #! PC = 0x80052bc *)
add r4 r4 r8;
(* add	r5, r9                                      #! PC = 0x80052be *)
add r5 r5 r9;
(* add	r6, r10                                     #! PC = 0x80052c0 *)
add r6 r6 r10;
(* add	r7, r11                                     #! PC = 0x80052c2 *)
add r7 r7 r11;
(* sub.w	r8, r4, r8, lsl #1                        #! PC = 0x80052c4 *)
shl tmp r8 1;
sub r8 r4 tmp;
(* sub.w	r9, r5, r9, lsl #1                        #! PC = 0x80052c8 *)
shl tmp r9 1;
sub r9 r5 tmp;
(* sub.w	r10, r6, r10, lsl #1                      #! PC = 0x80052cc *)
shl tmp r10 1;
sub r10 r6 tmp;
(* sub.w	r11, r7, r11, lsl #1                      #! PC = 0x80052d0 *)
shl tmp r11 1;
sub r11 r7 tmp;
(* str.w	r8, [r0, #64]	; 0x40                      #! EA = L0x2001a60c; PC = 0x80052d4 *)
mov L0x2001a60c r8;
(* str.w	r9, [r0, #80]	; 0x50                      #! EA = L0x2001a61c; PC = 0x80052d8 *)
mov L0x2001a61c r9;
(* str.w	r10, [r0, #96]	; 0x60                     #! EA = L0x2001a62c; PC = 0x80052dc *)
mov L0x2001a62c r10;
(* str.w	r11, [r0, #112]	; 0x70                    #! EA = L0x2001a63c; PC = 0x80052e0 *)
mov L0x2001a63c r11;
(* str.w	r5, [r0, #16]                             #! EA = L0x2001a5dc; PC = 0x80052e4 *)
mov L0x2001a5dc r5;
(* str.w	r6, [r0, #32]                             #! EA = L0x2001a5ec; PC = 0x80052e8 *)
mov L0x2001a5ec r6;
(* str.w	r7, [r0, #48]	; 0x30                      #! EA = L0x2001a5fc; PC = 0x80052ec *)
mov L0x2001a5fc r7;
(* str.w	r4, [r0], #4                              #! EA = L0x2001a5cc; PC = 0x80052f0 *)
mov L0x2001a5cc r4;
(* ldr.w	r8, [r0, #64]	; 0x40                      #! EA = L0x2001a610; Value = 0x01897044; PC = 0x80052f4 *)
mov r8 L0x2001a610;
(* ldr.w	r5, [r0, #80]	; 0x50                      #! EA = L0x2001a620; Value = 0xffca1585; PC = 0x80052f8 *)
mov r5 L0x2001a620;
(* ldr.w	r10, [r0, #96]	; 0x60                     #! EA = L0x2001a630; Value = 0xff604847; PC = 0x80052fc *)
mov r10 L0x2001a630;
(* ldr.w	r7, [r0, #112]	; 0x70                     #! EA = L0x2001a640; Value = 0x00546bea; PC = 0x8005300 *)
mov r7 L0x2001a640;
(* add	r8, r5                                      #! PC = 0x8005304 *)
add r8 r8 r5;
(* add	r10, r7                                     #! PC = 0x8005306 *)
add r10 r10 r7;
(* sub.w	r5, r8, r5, lsl #1                        #! PC = 0x8005308 *)
shl tmp r5 1;
sub r5 r8 tmp;
(* sub.w	r7, r10, r7, lsl #1                       #! PC = 0x800530c *)
shl tmp r7 1;
sub r7 r10 tmp;
(* add.w	r8, r8, r10                               #! PC = 0x8005310 *)
add r8 r8 r10;
(* sub.w	r10, r8, r10, lsl #1                      #! PC = 0x8005314 *)
shl tmp r10 1;
sub r10 r8 tmp;
(* vmov	r12, s8                                    #! PC = 0x8005318 *)
mov r12 s8;
(* vmov	lr, s10                                    #! PC = 0x800531c *)
mov lr s10;
(* smull	r4, r9, r5, r12                           #! PC = 0x8005320 *)
smull r9 r4 r5 r12;
(* smlal	r4, r9, r7, lr                            #! PC = 0x8005324 *)
cast r7@sint32 r7;
smull tmp_h tmp_l r7 lr;
uadds carry r4 tmp_l r4;
sadc r9 tmp_h r9 carry;
(* mul.w	r1, r4, r2                                #! PC = 0x8005328 *)
cast r4_s@sint32 r4;
mull discard r1 r4_s r2;
(* smlal	r4, r9, r1, r3                            #! PC = 0x800532c *)
cast r1@sint32 r1;
smull tmp_h tmp_l r1 r3;
uadds carry r4 tmp_l r4;
sadc r9 tmp_h r9 carry;
assert eqmod r4 0 (2**32) && true;
assume eq r4 0 && true;
(* smull	r6, r11, r5, lr                           #! PC = 0x8005330 *)
smull r11 r6 r5 lr;
(* smlal	r6, r11, r7, r12                          #! PC = 0x8005334 *)
cast r7@sint32 r7;
smull tmp_h tmp_l r7 r12;
uadds carry r6 tmp_l r6;
sadc r11 tmp_h r11 carry;
(* mul.w	r1, r6, r2                                #! PC = 0x8005338 *)
cast r6_s@sint32 r6;
mull discard r1 r6_s r2;
(* smlal	r6, r11, r1, r3                           #! PC = 0x800533c *)
cast r1@sint32 r1;
smull tmp_h tmp_l r1 r3;
uadds carry r6 tmp_l r6;
sadc r11 tmp_h r11 carry;
assert eqmod r6 0 (2**32) && true;
assume eq r6 0 && true;
(* ldr.w	r4, [r0]                                  #! EA = L0x2001a5d0; Value = 0xfeb13ceb; PC = 0x8005340 *)
mov r4 L0x2001a5d0;
(* ldr.w	r5, [r0, #16]                             #! EA = L0x2001a5e0; Value = 0x00359527; PC = 0x8005344 *)
mov r5 L0x2001a5e0;
(* ldr.w	r6, [r0, #32]                             #! EA = L0x2001a5f0; Value = 0xfe5718de; PC = 0x8005348 *)
mov r6 L0x2001a5f0;
(* ldr.w	r7, [r0, #48]	; 0x30                      #! EA = L0x2001a600; Value = 0x001a77b9; PC = 0x800534c *)
mov r7 L0x2001a600;
(* add	r4, r5                                      #! PC = 0x8005350 *)
add r4 r4 r5;
(* add	r6, r7                                      #! PC = 0x8005352 *)
add r6 r6 r7;
(* sub.w	r5, r4, r5, lsl #1                        #! PC = 0x8005354 *)
shl tmp r5 1;
sub r5 r4 tmp;
(* sub.w	r7, r6, r7, lsl #1                        #! PC = 0x8005358 *)
shl tmp r7 1;
sub r7 r6 tmp;
(* vmov	r1, s6                                     #! PC = 0x800535c *)
mov r1 s6;
(* smull	r12, r7, r7, r1                           #! PC = 0x8005360 *)
smull r7 r12 r7 r1;
(* mul.w	lr, r12, r2                               #! PC = 0x8005364 *)
cast r12_s@sint32 r12;
mull discard lr r12_s r2;
(* smlal	r12, r7, lr, r3                           #! PC = 0x8005368 *)
cast lr@sint32 lr;
smull tmp_h tmp_l lr r3;
uadds carry r12 tmp_l r12;
sadc r7 tmp_h r7 carry;
assert eqmod r12 0 (2**32) && true;
assume eq r12 0 && true;
(* add	r4, r6                                      #! PC = 0x800536c *)
add r4 r4 r6;
(* add	r5, r7                                      #! PC = 0x800536e *)
add r5 r5 r7;
(* sub.w	r6, r4, r6, lsl #1                        #! PC = 0x8005370 *)
shl tmp r6 1;
sub r6 r4 tmp;
(* sub.w	r7, r5, r7, lsl #1                        #! PC = 0x8005374 *)
shl tmp r7 1;
sub r7 r5 tmp;
(* smull	r12, r10, r10, r1                         #! PC = 0x8005378 *)
smull r10 r12 r10 r1;
(* mul.w	lr, r12, r2                               #! PC = 0x800537c *)
cast r12_s@sint32 r12;
mull discard lr r12_s r2;
(* smlal	r12, r10, lr, r3                          #! PC = 0x8005380 *)
cast lr@sint32 lr;
smull tmp_h tmp_l lr r3;
uadds carry r12 tmp_l r12;
sadc r10 tmp_h r10 carry;
assert eqmod r12 0 (2**32) && true;
assume eq r12 0 && true;
(* add	r4, r8                                      #! PC = 0x8005384 *)
add r4 r4 r8;
(* add	r5, r9                                      #! PC = 0x8005386 *)
add r5 r5 r9;
(* add	r6, r10                                     #! PC = 0x8005388 *)
add r6 r6 r10;
(* add	r7, r11                                     #! PC = 0x800538a *)
add r7 r7 r11;
(* sub.w	r8, r4, r8, lsl #1                        #! PC = 0x800538c *)
shl tmp r8 1;
sub r8 r4 tmp;
(* sub.w	r9, r5, r9, lsl #1                        #! PC = 0x8005390 *)
shl tmp r9 1;
sub r9 r5 tmp;
(* sub.w	r10, r6, r10, lsl #1                      #! PC = 0x8005394 *)
shl tmp r10 1;
sub r10 r6 tmp;
(* sub.w	r11, r7, r11, lsl #1                      #! PC = 0x8005398 *)
shl tmp r11 1;
sub r11 r7 tmp;
(* str.w	r8, [r0, #64]	; 0x40                      #! EA = L0x2001a610; PC = 0x800539c *)
mov L0x2001a610 r8;
(* str.w	r9, [r0, #80]	; 0x50                      #! EA = L0x2001a620; PC = 0x80053a0 *)
mov L0x2001a620 r9;
(* str.w	r10, [r0, #96]	; 0x60                     #! EA = L0x2001a630; PC = 0x80053a4 *)
mov L0x2001a630 r10;
(* str.w	r11, [r0, #112]	; 0x70                    #! EA = L0x2001a640; PC = 0x80053a8 *)
mov L0x2001a640 r11;
(* str.w	r5, [r0, #16]                             #! EA = L0x2001a5e0; PC = 0x80053ac *)
mov L0x2001a5e0 r5;
(* str.w	r6, [r0, #32]                             #! EA = L0x2001a5f0; PC = 0x80053b0 *)
mov L0x2001a5f0 r6;
(* str.w	r7, [r0, #48]	; 0x30                      #! EA = L0x2001a600; PC = 0x80053b4 *)
mov L0x2001a600 r7;
(* str.w	r4, [r0], #4                              #! EA = L0x2001a5d0; PC = 0x80053b8 *)
mov L0x2001a5d0 r4;
(* ldr.w	r8, [r0, #64]	; 0x40                      #! EA = L0x2001a614; Value = 0xffccda6d; PC = 0x80053bc *)
mov r8 L0x2001a614;
(* ldr.w	r5, [r0, #80]	; 0x50                      #! EA = L0x2001a624; Value = 0x007abdf0; PC = 0x80053c0 *)
mov r5 L0x2001a624;
(* ldr.w	r10, [r0, #96]	; 0x60                     #! EA = L0x2001a634; Value = 0xfff03b2c; PC = 0x80053c4 *)
mov r10 L0x2001a634;
(* ldr.w	r7, [r0, #112]	; 0x70                     #! EA = L0x2001a644; Value = 0xff8a253d; PC = 0x80053c8 *)
mov r7 L0x2001a644;
(* add	r8, r5                                      #! PC = 0x80053cc *)
add r8 r8 r5;
(* add	r10, r7                                     #! PC = 0x80053ce *)
add r10 r10 r7;
(* sub.w	r5, r8, r5, lsl #1                        #! PC = 0x80053d0 *)
shl tmp r5 1;
sub r5 r8 tmp;
(* sub.w	r7, r10, r7, lsl #1                       #! PC = 0x80053d4 *)
shl tmp r7 1;
sub r7 r10 tmp;
(* add.w	r8, r8, r10                               #! PC = 0x80053d8 *)
add r8 r8 r10;
(* sub.w	r10, r8, r10, lsl #1                      #! PC = 0x80053dc *)
shl tmp r10 1;
sub r10 r8 tmp;
(* vmov	r12, s8                                    #! PC = 0x80053e0 *)
mov r12 s8;
(* vmov	lr, s10                                    #! PC = 0x80053e4 *)
mov lr s10;
(* smull	r4, r9, r5, r12                           #! PC = 0x80053e8 *)
smull r9 r4 r5 r12;
(* smlal	r4, r9, r7, lr                            #! PC = 0x80053ec *)
cast r7@sint32 r7;
smull tmp_h tmp_l r7 lr;
uadds carry r4 tmp_l r4;
sadc r9 tmp_h r9 carry;
(* mul.w	r1, r4, r2                                #! PC = 0x80053f0 *)
cast r4_s@sint32 r4;
mull discard r1 r4_s r2;
(* smlal	r4, r9, r1, r3                            #! PC = 0x80053f4 *)
cast r1@sint32 r1;
smull tmp_h tmp_l r1 r3;
uadds carry r4 tmp_l r4;
sadc r9 tmp_h r9 carry;
assert eqmod r4 0 (2**32) && true;
assume eq r4 0 && true;
(* smull	r6, r11, r5, lr                           #! PC = 0x80053f8 *)
smull r11 r6 r5 lr;
(* smlal	r6, r11, r7, r12                          #! PC = 0x80053fc *)
cast r7@sint32 r7;
smull tmp_h tmp_l r7 r12;
uadds carry r6 tmp_l r6;
sadc r11 tmp_h r11 carry;
(* mul.w	r1, r6, r2                                #! PC = 0x8005400 *)
cast r6_s@sint32 r6;
mull discard r1 r6_s r2;
(* smlal	r6, r11, r1, r3                           #! PC = 0x8005404 *)
cast r1@sint32 r1;
smull tmp_h tmp_l r1 r3;
uadds carry r6 tmp_l r6;
sadc r11 tmp_h r11 carry;
assert eqmod r6 0 (2**32) && true;
assume eq r6 0 && true;
(* ldr.w	r4, [r0]                                  #! EA = L0x2001a5d4; Value = 0xff72fa20; PC = 0x8005408 *)
mov r4 L0x2001a5d4;
(* ldr.w	r5, [r0, #16]                             #! EA = L0x2001a5e4; Value = 0x01a8cb09; PC = 0x800540c *)
mov r5 L0x2001a5e4;
(* ldr.w	r6, [r0, #32]                             #! EA = L0x2001a5f4; Value = 0xff81678a; PC = 0x8005410 *)
mov r6 L0x2001a5f4;
(* ldr.w	r7, [r0, #48]	; 0x30                      #! EA = L0x2001a604; Value = 0x00b2914e; PC = 0x8005414 *)
mov r7 L0x2001a604;
(* add	r4, r5                                      #! PC = 0x8005418 *)
add r4 r4 r5;
(* add	r6, r7                                      #! PC = 0x800541a *)
add r6 r6 r7;
(* sub.w	r5, r4, r5, lsl #1                        #! PC = 0x800541c *)
shl tmp r5 1;
sub r5 r4 tmp;
(* sub.w	r7, r6, r7, lsl #1                        #! PC = 0x8005420 *)
shl tmp r7 1;
sub r7 r6 tmp;
(* vmov	r1, s6                                     #! PC = 0x8005424 *)
mov r1 s6;
(* smull	r12, r7, r7, r1                           #! PC = 0x8005428 *)
smull r7 r12 r7 r1;
(* mul.w	lr, r12, r2                               #! PC = 0x800542c *)
cast r12_s@sint32 r12;
mull discard lr r12_s r2;
(* smlal	r12, r7, lr, r3                           #! PC = 0x8005430 *)
cast lr@sint32 lr;
smull tmp_h tmp_l lr r3;
uadds carry r12 tmp_l r12;
sadc r7 tmp_h r7 carry;
assert eqmod r12 0 (2**32) && true;
assume eq r12 0 && true;
(* add	r4, r6                                      #! PC = 0x8005434 *)
add r4 r4 r6;
(* add	r5, r7                                      #! PC = 0x8005436 *)
add r5 r5 r7;
(* sub.w	r6, r4, r6, lsl #1                        #! PC = 0x8005438 *)
shl tmp r6 1;
sub r6 r4 tmp;
(* sub.w	r7, r5, r7, lsl #1                        #! PC = 0x800543c *)
shl tmp r7 1;
sub r7 r5 tmp;
(* smull	r12, r10, r10, r1                         #! PC = 0x8005440 *)
smull r10 r12 r10 r1;
(* mul.w	lr, r12, r2                               #! PC = 0x8005444 *)
cast r12_s@sint32 r12;
mull discard lr r12_s r2;
(* smlal	r12, r10, lr, r3                          #! PC = 0x8005448 *)
cast lr@sint32 lr;
smull tmp_h tmp_l lr r3;
uadds carry r12 tmp_l r12;
sadc r10 tmp_h r10 carry;
assert eqmod r12 0 (2**32) && true;
assume eq r12 0 && true;
(* add	r4, r8                                      #! PC = 0x800544c *)
add r4 r4 r8;
(* add	r5, r9                                      #! PC = 0x800544e *)
add r5 r5 r9;
(* add	r6, r10                                     #! PC = 0x8005450 *)
add r6 r6 r10;
(* add	r7, r11                                     #! PC = 0x8005452 *)
add r7 r7 r11;
(* sub.w	r8, r4, r8, lsl #1                        #! PC = 0x8005454 *)
shl tmp r8 1;
sub r8 r4 tmp;
(* sub.w	r9, r5, r9, lsl #1                        #! PC = 0x8005458 *)
shl tmp r9 1;
sub r9 r5 tmp;
(* sub.w	r10, r6, r10, lsl #1                      #! PC = 0x800545c *)
shl tmp r10 1;
sub r10 r6 tmp;
(* sub.w	r11, r7, r11, lsl #1                      #! PC = 0x8005460 *)
shl tmp r11 1;
sub r11 r7 tmp;
(* str.w	r8, [r0, #64]	; 0x40                      #! EA = L0x2001a614; PC = 0x8005464 *)
mov L0x2001a614 r8;
(* str.w	r9, [r0, #80]	; 0x50                      #! EA = L0x2001a624; PC = 0x8005468 *)
mov L0x2001a624 r9;
(* str.w	r10, [r0, #96]	; 0x60                     #! EA = L0x2001a634; PC = 0x800546c *)
mov L0x2001a634 r10;
(* str.w	r11, [r0, #112]	; 0x70                    #! EA = L0x2001a644; PC = 0x8005470 *)
mov L0x2001a644 r11;
(* str.w	r5, [r0, #16]                             #! EA = L0x2001a5e4; PC = 0x8005474 *)
mov L0x2001a5e4 r5;
(* str.w	r6, [r0, #32]                             #! EA = L0x2001a5f4; PC = 0x8005478 *)
mov L0x2001a5f4 r6;
(* str.w	r7, [r0, #48]	; 0x30                      #! EA = L0x2001a604; PC = 0x800547c *)
mov L0x2001a604 r7;
(* str.w	r4, [r0], #4                              #! EA = L0x2001a5d4; PC = 0x8005480 *)
mov L0x2001a5d4 r4;
(* add.w	r0, r0, #112	; 0x70                       #! PC = 0x8005484 *)
adds discard r0 r0 112@uint32;
(* vmov	r12, s2                                    #! PC = 0x8005488 *)
mov r12 s2;
(* # END of layer i_0_1_2 *)
# END of layer i_0_1_2;

(* === layer i_0_1_2 === *)

(* y's for layer 3 *)
ghost y_3_0@bit :
  and [
    y_3_0 = y_0_00 * 1,
    y_3_0 = y_0_01 * 25570048,
    y_3_0 = y_0_02 * 19606210,
    y_3_0 = y_0_03 * 5963839,
    y_3_0 = y_0_04 * 1222492,
    y_3_0 = y_0_05 * 24347557,
    y_3_0 = y_0_06 * 17034533,
    y_3_0 = y_0_07 * 8535516
  ] && true;
ghost y_3_1@bit :
  and [
    y_3_1 = y_0_08 * 1,
    y_3_1 = y_0_09 * 25570048,
    y_3_1 = y_0_10 * 19606210,
    y_3_1 = y_0_11 * 5963839,
    y_3_1 = y_0_12 * 1222492,
    y_3_1 = y_0_13 * 24347557,
    y_3_1 = y_0_14 * 17034533,
    y_3_1 = y_0_15 * 8535516
  ] && true;
ghost y_3_2@bit :
  and [
    y_3_2 = y_0_16 * 1,
    y_3_2 = y_0_17 * 25570048,
    y_3_2 = y_0_18 * 19606210,
    y_3_2 = y_0_19 * 5963839,
    y_3_2 = y_0_20 * 1222492,
    y_3_2 = y_0_21 * 24347557,
    y_3_2 = y_0_22 * 17034533,
    y_3_2 = y_0_23 * 8535516
  ] && true;
ghost y_3_3@bit :
  and [
    y_3_3 = y_0_24 * 1,
    y_3_3 = y_0_25 * 25570048,
    y_3_3 = y_0_26 * 19606210,
    y_3_3 = y_0_27 * 5963839,
    y_3_3 = y_0_28 * 1222492,
    y_3_3 = y_0_29 * 24347557,
    y_3_3 = y_0_30 * 17034533,
    y_3_3 = y_0_31 * 8535516
  ] && true;
ghost y_3_4@bit :
  and [
    y_3_4 = y_0_32 * 1,
    y_3_4 = y_0_33 * 25570048,
    y_3_4 = y_0_34 * 19606210,
    y_3_4 = y_0_35 * 5963839,
    y_3_4 = y_0_36 * 1222492,
    y_3_4 = y_0_37 * 24347557,
    y_3_4 = y_0_38 * 17034533,
    y_3_4 = y_0_39 * 8535516
  ] && true;
ghost y_3_5@bit :
  and [
    y_3_5 = y_0_40 * 1,
    y_3_5 = y_0_41 * 25570048,
    y_3_5 = y_0_42 * 19606210,
    y_3_5 = y_0_43 * 5963839,
    y_3_5 = y_0_44 * 1222492,
    y_3_5 = y_0_45 * 24347557,
    y_3_5 = y_0_46 * 17034533,
    y_3_5 = y_0_47 * 8535516
  ] && true;
ghost y_3_6@bit :
  and [
    y_3_6 = y_0_48 * 1,
    y_3_6 = y_0_49 * 25570048,
    y_3_6 = y_0_50 * 19606210,
    y_3_6 = y_0_51 * 5963839,
    y_3_6 = y_0_52 * 1222492,
    y_3_6 = y_0_53 * 24347557,
    y_3_6 = y_0_54 * 17034533,
    y_3_6 = y_0_55 * 8535516
  ] && true;
ghost y_3_7@bit :
  and [
    y_3_7 = y_0_56 * 1,
    y_3_7 = y_0_57 * 25570048,
    y_3_7 = y_0_58 * 19606210,
    y_3_7 = y_0_59 * 5963839,
    y_3_7 = y_0_60 * 1222492,
    y_3_7 = y_0_61 * 24347557,
    y_3_7 = y_0_62 * 17034533,
    y_3_7 = y_0_63 * 8535516
  ] && true;

cut (* 0 *)
  (* algebraic *)
  and [
    (* inp_poly_0 *)
    eqmod 8 * (inp_poly_0 * inp_poly_0)
          (
            L0x2001a248 * (x**0) * ((y_3_0)**0) + 
            L0x2001a24c * (x**1) * ((y_3_0)**0) + 
            L0x2001a250 * (x**2) * ((y_3_0)**0) + 
            L0x2001a254 * (x**3) * ((y_3_0)**0) + 
            L0x2001a258 * (x**0) * ((y_3_0)**1) + 
            L0x2001a25c * (x**1) * ((y_3_0)**1) + 
            L0x2001a260 * (x**2) * ((y_3_0)**1) + 
            L0x2001a264 * (x**3) * ((y_3_0)**1) + 
            L0x2001a268 * (x**0) * ((y_3_0)**2) + 
            L0x2001a26c * (x**1) * ((y_3_0)**2) + 
            L0x2001a270 * (x**2) * ((y_3_0)**2) + 
            L0x2001a274 * (x**3) * ((y_3_0)**2) + 
            L0x2001a278 * (x**0) * ((y_3_0)**3) + 
            L0x2001a27c * (x**1) * ((y_3_0)**3) + 
            L0x2001a280 * (x**2) * ((y_3_0)**3) + 
            L0x2001a284 * (x**3) * ((y_3_0)**3) + 
            L0x2001a288 * (x**0) * ((y_3_0)**4) + 
            L0x2001a28c * (x**1) * ((y_3_0)**4) + 
            L0x2001a290 * (x**2) * ((y_3_0)**4) + 
            L0x2001a294 * (x**3) * ((y_3_0)**4) + 
            L0x2001a298 * (x**0) * ((y_3_0)**5) + 
            L0x2001a29c * (x**1) * ((y_3_0)**5) + 
            L0x2001a2a0 * (x**2) * ((y_3_0)**5) + 
            L0x2001a2a4 * (x**3) * ((y_3_0)**5) + 
            L0x2001a2a8 * (x**0) * ((y_3_0)**6) + 
            L0x2001a2ac * (x**1) * ((y_3_0)**6) + 
            L0x2001a2b0 * (x**2) * ((y_3_0)**6) + 
            L0x2001a2b4 * (x**3) * ((y_3_0)**6) + 
            L0x2001a2b8 * (x**0) * ((y_3_0)**7) + 
            L0x2001a2bc * (x**1) * ((y_3_0)**7) + 
            L0x2001a2c0 * (x**2) * ((y_3_0)**7) + 
            L0x2001a2c4 * (x**3) * ((y_3_0)**7)
          )
          [25570049, x**4 - y_0_00 * 6103972, y_0_00 - 1],
    (* inp_poly_1 *)
    eqmod 8 * (inp_poly_1 * inp_poly_1)
          (
            L0x2001a248 * (x**0) * ((y_3_0)**0) + 
            L0x2001a24c * (x**1) * ((y_3_0)**0) + 
            L0x2001a250 * (x**2) * ((y_3_0)**0) + 
            L0x2001a254 * (x**3) * ((y_3_0)**0) + 
            L0x2001a258 * (x**0) * ((y_3_0)**1) + 
            L0x2001a25c * (x**1) * ((y_3_0)**1) + 
            L0x2001a260 * (x**2) * ((y_3_0)**1) + 
            L0x2001a264 * (x**3) * ((y_3_0)**1) + 
            L0x2001a268 * (x**0) * ((y_3_0)**2) + 
            L0x2001a26c * (x**1) * ((y_3_0)**2) + 
            L0x2001a270 * (x**2) * ((y_3_0)**2) + 
            L0x2001a274 * (x**3) * ((y_3_0)**2) + 
            L0x2001a278 * (x**0) * ((y_3_0)**3) + 
            L0x2001a27c * (x**1) * ((y_3_0)**3) + 
            L0x2001a280 * (x**2) * ((y_3_0)**3) + 
            L0x2001a284 * (x**3) * ((y_3_0)**3) + 
            L0x2001a288 * (x**0) * ((y_3_0)**4) + 
            L0x2001a28c * (x**1) * ((y_3_0)**4) + 
            L0x2001a290 * (x**2) * ((y_3_0)**4) + 
            L0x2001a294 * (x**3) * ((y_3_0)**4) + 
            L0x2001a298 * (x**0) * ((y_3_0)**5) + 
            L0x2001a29c * (x**1) * ((y_3_0)**5) + 
            L0x2001a2a0 * (x**2) * ((y_3_0)**5) + 
            L0x2001a2a4 * (x**3) * ((y_3_0)**5) + 
            L0x2001a2a8 * (x**0) * ((y_3_0)**6) + 
            L0x2001a2ac * (x**1) * ((y_3_0)**6) + 
            L0x2001a2b0 * (x**2) * ((y_3_0)**6) + 
            L0x2001a2b4 * (x**3) * ((y_3_0)**6) + 
            L0x2001a2b8 * (x**0) * ((y_3_0)**7) + 
            L0x2001a2bc * (x**1) * ((y_3_0)**7) + 
            L0x2001a2c0 * (x**2) * ((y_3_0)**7) + 
            L0x2001a2c4 * (x**3) * ((y_3_0)**7)
          )
          [25570049, x**4 - y_0_01 * 19466077, y_0_01 - 1],
    (* inp_poly_2 *)
    eqmod 8 * (inp_poly_2 * inp_poly_2)
          (
            L0x2001a248 * (x**0) * ((y_3_0)**0) + 
            L0x2001a24c * (x**1) * ((y_3_0)**0) + 
            L0x2001a250 * (x**2) * ((y_3_0)**0) + 
            L0x2001a254 * (x**3) * ((y_3_0)**0) + 
            L0x2001a258 * (x**0) * ((y_3_0)**1) + 
            L0x2001a25c * (x**1) * ((y_3_0)**1) + 
            L0x2001a260 * (x**2) * ((y_3_0)**1) + 
            L0x2001a264 * (x**3) * ((y_3_0)**1) + 
            L0x2001a268 * (x**0) * ((y_3_0)**2) + 
            L0x2001a26c * (x**1) * ((y_3_0)**2) + 
            L0x2001a270 * (x**2) * ((y_3_0)**2) + 
            L0x2001a274 * (x**3) * ((y_3_0)**2) + 
            L0x2001a278 * (x**0) * ((y_3_0)**3) + 
            L0x2001a27c * (x**1) * ((y_3_0)**3) + 
            L0x2001a280 * (x**2) * ((y_3_0)**3) + 
            L0x2001a284 * (x**3) * ((y_3_0)**3) + 
            L0x2001a288 * (x**0) * ((y_3_0)**4) + 
            L0x2001a28c * (x**1) * ((y_3_0)**4) + 
            L0x2001a290 * (x**2) * ((y_3_0)**4) + 
            L0x2001a294 * (x**3) * ((y_3_0)**4) + 
            L0x2001a298 * (x**0) * ((y_3_0)**5) + 
            L0x2001a29c * (x**1) * ((y_3_0)**5) + 
            L0x2001a2a0 * (x**2) * ((y_3_0)**5) + 
            L0x2001a2a4 * (x**3) * ((y_3_0)**5) + 
            L0x2001a2a8 * (x**0) * ((y_3_0)**6) + 
            L0x2001a2ac * (x**1) * ((y_3_0)**6) + 
            L0x2001a2b0 * (x**2) * ((y_3_0)**6) + 
            L0x2001a2b4 * (x**3) * ((y_3_0)**6) + 
            L0x2001a2b8 * (x**0) * ((y_3_0)**7) + 
            L0x2001a2bc * (x**1) * ((y_3_0)**7) + 
            L0x2001a2c0 * (x**2) * ((y_3_0)**7) + 
            L0x2001a2c4 * (x**3) * ((y_3_0)**7)
          )
          [25570049, x**4 - y_0_02 * 830930, y_0_02 - 1],
    (* inp_poly_3 *)
    eqmod 8 * (inp_poly_3 * inp_poly_3)
          (
            L0x2001a248 * (x**0) * ((y_3_0)**0) + 
            L0x2001a24c * (x**1) * ((y_3_0)**0) + 
            L0x2001a250 * (x**2) * ((y_3_0)**0) + 
            L0x2001a254 * (x**3) * ((y_3_0)**0) + 
            L0x2001a258 * (x**0) * ((y_3_0)**1) + 
            L0x2001a25c * (x**1) * ((y_3_0)**1) + 
            L0x2001a260 * (x**2) * ((y_3_0)**1) + 
            L0x2001a264 * (x**3) * ((y_3_0)**1) + 
            L0x2001a268 * (x**0) * ((y_3_0)**2) + 
            L0x2001a26c * (x**1) * ((y_3_0)**2) + 
            L0x2001a270 * (x**2) * ((y_3_0)**2) + 
            L0x2001a274 * (x**3) * ((y_3_0)**2) + 
            L0x2001a278 * (x**0) * ((y_3_0)**3) + 
            L0x2001a27c * (x**1) * ((y_3_0)**3) + 
            L0x2001a280 * (x**2) * ((y_3_0)**3) + 
            L0x2001a284 * (x**3) * ((y_3_0)**3) + 
            L0x2001a288 * (x**0) * ((y_3_0)**4) + 
            L0x2001a28c * (x**1) * ((y_3_0)**4) + 
            L0x2001a290 * (x**2) * ((y_3_0)**4) + 
            L0x2001a294 * (x**3) * ((y_3_0)**4) + 
            L0x2001a298 * (x**0) * ((y_3_0)**5) + 
            L0x2001a29c * (x**1) * ((y_3_0)**5) + 
            L0x2001a2a0 * (x**2) * ((y_3_0)**5) + 
            L0x2001a2a4 * (x**3) * ((y_3_0)**5) + 
            L0x2001a2a8 * (x**0) * ((y_3_0)**6) + 
            L0x2001a2ac * (x**1) * ((y_3_0)**6) + 
            L0x2001a2b0 * (x**2) * ((y_3_0)**6) + 
            L0x2001a2b4 * (x**3) * ((y_3_0)**6) + 
            L0x2001a2b8 * (x**0) * ((y_3_0)**7) + 
            L0x2001a2bc * (x**1) * ((y_3_0)**7) + 
            L0x2001a2c0 * (x**2) * ((y_3_0)**7) + 
            L0x2001a2c4 * (x**3) * ((y_3_0)**7)
          )
          [25570049, x**4 - y_0_03 * 24739119, y_0_03 - 1],
    (* inp_poly_4 *)
    eqmod 8 * (inp_poly_4 * inp_poly_4)
          (
            L0x2001a248 * (x**0) * ((y_3_0)**0) + 
            L0x2001a24c * (x**1) * ((y_3_0)**0) + 
            L0x2001a250 * (x**2) * ((y_3_0)**0) + 
            L0x2001a254 * (x**3) * ((y_3_0)**0) + 
            L0x2001a258 * (x**0) * ((y_3_0)**1) + 
            L0x2001a25c * (x**1) * ((y_3_0)**1) + 
            L0x2001a260 * (x**2) * ((y_3_0)**1) + 
            L0x2001a264 * (x**3) * ((y_3_0)**1) + 
            L0x2001a268 * (x**0) * ((y_3_0)**2) + 
            L0x2001a26c * (x**1) * ((y_3_0)**2) + 
            L0x2001a270 * (x**2) * ((y_3_0)**2) + 
            L0x2001a274 * (x**3) * ((y_3_0)**2) + 
            L0x2001a278 * (x**0) * ((y_3_0)**3) + 
            L0x2001a27c * (x**1) * ((y_3_0)**3) + 
            L0x2001a280 * (x**2) * ((y_3_0)**3) + 
            L0x2001a284 * (x**3) * ((y_3_0)**3) + 
            L0x2001a288 * (x**0) * ((y_3_0)**4) + 
            L0x2001a28c * (x**1) * ((y_3_0)**4) + 
            L0x2001a290 * (x**2) * ((y_3_0)**4) + 
            L0x2001a294 * (x**3) * ((y_3_0)**4) + 
            L0x2001a298 * (x**0) * ((y_3_0)**5) + 
            L0x2001a29c * (x**1) * ((y_3_0)**5) + 
            L0x2001a2a0 * (x**2) * ((y_3_0)**5) + 
            L0x2001a2a4 * (x**3) * ((y_3_0)**5) + 
            L0x2001a2a8 * (x**0) * ((y_3_0)**6) + 
            L0x2001a2ac * (x**1) * ((y_3_0)**6) + 
            L0x2001a2b0 * (x**2) * ((y_3_0)**6) + 
            L0x2001a2b4 * (x**3) * ((y_3_0)**6) + 
            L0x2001a2b8 * (x**0) * ((y_3_0)**7) + 
            L0x2001a2bc * (x**1) * ((y_3_0)**7) + 
            L0x2001a2c0 * (x**2) * ((y_3_0)**7) + 
            L0x2001a2c4 * (x**3) * ((y_3_0)**7)
          )
          [25570049, x**4 - y_0_04 * 678652, y_0_04 - 1],
    (* inp_poly_5 *)
    eqmod 8 * (inp_poly_5 * inp_poly_5)
          (
            L0x2001a248 * (x**0) * ((y_3_0)**0) + 
            L0x2001a24c * (x**1) * ((y_3_0)**0) + 
            L0x2001a250 * (x**2) * ((y_3_0)**0) + 
            L0x2001a254 * (x**3) * ((y_3_0)**0) + 
            L0x2001a258 * (x**0) * ((y_3_0)**1) + 
            L0x2001a25c * (x**1) * ((y_3_0)**1) + 
            L0x2001a260 * (x**2) * ((y_3_0)**1) + 
            L0x2001a264 * (x**3) * ((y_3_0)**1) + 
            L0x2001a268 * (x**0) * ((y_3_0)**2) + 
            L0x2001a26c * (x**1) * ((y_3_0)**2) + 
            L0x2001a270 * (x**2) * ((y_3_0)**2) + 
            L0x2001a274 * (x**3) * ((y_3_0)**2) + 
            L0x2001a278 * (x**0) * ((y_3_0)**3) + 
            L0x2001a27c * (x**1) * ((y_3_0)**3) + 
            L0x2001a280 * (x**2) * ((y_3_0)**3) + 
            L0x2001a284 * (x**3) * ((y_3_0)**3) + 
            L0x2001a288 * (x**0) * ((y_3_0)**4) + 
            L0x2001a28c * (x**1) * ((y_3_0)**4) + 
            L0x2001a290 * (x**2) * ((y_3_0)**4) + 
            L0x2001a294 * (x**3) * ((y_3_0)**4) + 
            L0x2001a298 * (x**0) * ((y_3_0)**5) + 
            L0x2001a29c * (x**1) * ((y_3_0)**5) + 
            L0x2001a2a0 * (x**2) * ((y_3_0)**5) + 
            L0x2001a2a4 * (x**3) * ((y_3_0)**5) + 
            L0x2001a2a8 * (x**0) * ((y_3_0)**6) + 
            L0x2001a2ac * (x**1) * ((y_3_0)**6) + 
            L0x2001a2b0 * (x**2) * ((y_3_0)**6) + 
            L0x2001a2b4 * (x**3) * ((y_3_0)**6) + 
            L0x2001a2b8 * (x**0) * ((y_3_0)**7) + 
            L0x2001a2bc * (x**1) * ((y_3_0)**7) + 
            L0x2001a2c0 * (x**2) * ((y_3_0)**7) + 
            L0x2001a2c4 * (x**3) * ((y_3_0)**7)
          )
          [25570049, x**4 - y_0_05 * 24891397, y_0_05 - 1],
    (* inp_poly_6 *)
    eqmod 8 * (inp_poly_6 * inp_poly_6)
          (
            L0x2001a248 * (x**0) * ((y_3_0)**0) + 
            L0x2001a24c * (x**1) * ((y_3_0)**0) + 
            L0x2001a250 * (x**2) * ((y_3_0)**0) + 
            L0x2001a254 * (x**3) * ((y_3_0)**0) + 
            L0x2001a258 * (x**0) * ((y_3_0)**1) + 
            L0x2001a25c * (x**1) * ((y_3_0)**1) + 
            L0x2001a260 * (x**2) * ((y_3_0)**1) + 
            L0x2001a264 * (x**3) * ((y_3_0)**1) + 
            L0x2001a268 * (x**0) * ((y_3_0)**2) + 
            L0x2001a26c * (x**1) * ((y_3_0)**2) + 
            L0x2001a270 * (x**2) * ((y_3_0)**2) + 
            L0x2001a274 * (x**3) * ((y_3_0)**2) + 
            L0x2001a278 * (x**0) * ((y_3_0)**3) + 
            L0x2001a27c * (x**1) * ((y_3_0)**3) + 
            L0x2001a280 * (x**2) * ((y_3_0)**3) + 
            L0x2001a284 * (x**3) * ((y_3_0)**3) + 
            L0x2001a288 * (x**0) * ((y_3_0)**4) + 
            L0x2001a28c * (x**1) * ((y_3_0)**4) + 
            L0x2001a290 * (x**2) * ((y_3_0)**4) + 
            L0x2001a294 * (x**3) * ((y_3_0)**4) + 
            L0x2001a298 * (x**0) * ((y_3_0)**5) + 
            L0x2001a29c * (x**1) * ((y_3_0)**5) + 
            L0x2001a2a0 * (x**2) * ((y_3_0)**5) + 
            L0x2001a2a4 * (x**3) * ((y_3_0)**5) + 
            L0x2001a2a8 * (x**0) * ((y_3_0)**6) + 
            L0x2001a2ac * (x**1) * ((y_3_0)**6) + 
            L0x2001a2b0 * (x**2) * ((y_3_0)**6) + 
            L0x2001a2b4 * (x**3) * ((y_3_0)**6) + 
            L0x2001a2b8 * (x**0) * ((y_3_0)**7) + 
            L0x2001a2bc * (x**1) * ((y_3_0)**7) + 
            L0x2001a2c0 * (x**2) * ((y_3_0)**7) + 
            L0x2001a2c4 * (x**3) * ((y_3_0)**7)
          )
          [25570049, x**4 - y_0_06 * 9510986, y_0_06 - 1],
    (* inp_poly_7 *)
    eqmod 8 * (inp_poly_7 * inp_poly_7)
          (
            L0x2001a248 * (x**0) * ((y_3_0)**0) + 
            L0x2001a24c * (x**1) * ((y_3_0)**0) + 
            L0x2001a250 * (x**2) * ((y_3_0)**0) + 
            L0x2001a254 * (x**3) * ((y_3_0)**0) + 
            L0x2001a258 * (x**0) * ((y_3_0)**1) + 
            L0x2001a25c * (x**1) * ((y_3_0)**1) + 
            L0x2001a260 * (x**2) * ((y_3_0)**1) + 
            L0x2001a264 * (x**3) * ((y_3_0)**1) + 
            L0x2001a268 * (x**0) * ((y_3_0)**2) + 
            L0x2001a26c * (x**1) * ((y_3_0)**2) + 
            L0x2001a270 * (x**2) * ((y_3_0)**2) + 
            L0x2001a274 * (x**3) * ((y_3_0)**2) + 
            L0x2001a278 * (x**0) * ((y_3_0)**3) + 
            L0x2001a27c * (x**1) * ((y_3_0)**3) + 
            L0x2001a280 * (x**2) * ((y_3_0)**3) + 
            L0x2001a284 * (x**3) * ((y_3_0)**3) + 
            L0x2001a288 * (x**0) * ((y_3_0)**4) + 
            L0x2001a28c * (x**1) * ((y_3_0)**4) + 
            L0x2001a290 * (x**2) * ((y_3_0)**4) + 
            L0x2001a294 * (x**3) * ((y_3_0)**4) + 
            L0x2001a298 * (x**0) * ((y_3_0)**5) + 
            L0x2001a29c * (x**1) * ((y_3_0)**5) + 
            L0x2001a2a0 * (x**2) * ((y_3_0)**5) + 
            L0x2001a2a4 * (x**3) * ((y_3_0)**5) + 
            L0x2001a2a8 * (x**0) * ((y_3_0)**6) + 
            L0x2001a2ac * (x**1) * ((y_3_0)**6) + 
            L0x2001a2b0 * (x**2) * ((y_3_0)**6) + 
            L0x2001a2b4 * (x**3) * ((y_3_0)**6) + 
            L0x2001a2b8 * (x**0) * ((y_3_0)**7) + 
            L0x2001a2bc * (x**1) * ((y_3_0)**7) + 
            L0x2001a2c0 * (x**2) * ((y_3_0)**7) + 
            L0x2001a2c4 * (x**3) * ((y_3_0)**7)
          )
          [25570049, x**4 - y_0_07 * 16059063, y_0_07 - 1],
    (* inp_poly_8 *)
    eqmod 8 * (inp_poly_8 * inp_poly_8)
          (
            L0x2001a2c8 * (x**0) * ((y_3_1)**0) + 
            L0x2001a2cc * (x**1) * ((y_3_1)**0) + 
            L0x2001a2d0 * (x**2) * ((y_3_1)**0) + 
            L0x2001a2d4 * (x**3) * ((y_3_1)**0) + 
            L0x2001a2d8 * (x**0) * ((y_3_1)**1) + 
            L0x2001a2dc * (x**1) * ((y_3_1)**1) + 
            L0x2001a2e0 * (x**2) * ((y_3_1)**1) + 
            L0x2001a2e4 * (x**3) * ((y_3_1)**1) + 
            L0x2001a2e8 * (x**0) * ((y_3_1)**2) + 
            L0x2001a2ec * (x**1) * ((y_3_1)**2) + 
            L0x2001a2f0 * (x**2) * ((y_3_1)**2) + 
            L0x2001a2f4 * (x**3) * ((y_3_1)**2) + 
            L0x2001a2f8 * (x**0) * ((y_3_1)**3) + 
            L0x2001a2fc * (x**1) * ((y_3_1)**3) + 
            L0x2001a300 * (x**2) * ((y_3_1)**3) + 
            L0x2001a304 * (x**3) * ((y_3_1)**3) + 
            L0x2001a308 * (x**0) * ((y_3_1)**4) + 
            L0x2001a30c * (x**1) * ((y_3_1)**4) + 
            L0x2001a310 * (x**2) * ((y_3_1)**4) + 
            L0x2001a314 * (x**3) * ((y_3_1)**4) + 
            L0x2001a318 * (x**0) * ((y_3_1)**5) + 
            L0x2001a31c * (x**1) * ((y_3_1)**5) + 
            L0x2001a320 * (x**2) * ((y_3_1)**5) + 
            L0x2001a324 * (x**3) * ((y_3_1)**5) + 
            L0x2001a328 * (x**0) * ((y_3_1)**6) + 
            L0x2001a32c * (x**1) * ((y_3_1)**6) + 
            L0x2001a330 * (x**2) * ((y_3_1)**6) + 
            L0x2001a334 * (x**3) * ((y_3_1)**6) + 
            L0x2001a338 * (x**0) * ((y_3_1)**7) + 
            L0x2001a33c * (x**1) * ((y_3_1)**7) + 
            L0x2001a340 * (x**2) * ((y_3_1)**7) + 
            L0x2001a344 * (x**3) * ((y_3_1)**7)
          )
          [25570049, x**4 - y_0_08 * 24972806, y_0_08 - 1],
    (* inp_poly_9 *)
    eqmod 8 * (inp_poly_9 * inp_poly_9)
          (
            L0x2001a2c8 * (x**0) * ((y_3_1)**0) + 
            L0x2001a2cc * (x**1) * ((y_3_1)**0) + 
            L0x2001a2d0 * (x**2) * ((y_3_1)**0) + 
            L0x2001a2d4 * (x**3) * ((y_3_1)**0) + 
            L0x2001a2d8 * (x**0) * ((y_3_1)**1) + 
            L0x2001a2dc * (x**1) * ((y_3_1)**1) + 
            L0x2001a2e0 * (x**2) * ((y_3_1)**1) + 
            L0x2001a2e4 * (x**3) * ((y_3_1)**1) + 
            L0x2001a2e8 * (x**0) * ((y_3_1)**2) + 
            L0x2001a2ec * (x**1) * ((y_3_1)**2) + 
            L0x2001a2f0 * (x**2) * ((y_3_1)**2) + 
            L0x2001a2f4 * (x**3) * ((y_3_1)**2) + 
            L0x2001a2f8 * (x**0) * ((y_3_1)**3) + 
            L0x2001a2fc * (x**1) * ((y_3_1)**3) + 
            L0x2001a300 * (x**2) * ((y_3_1)**3) + 
            L0x2001a304 * (x**3) * ((y_3_1)**3) + 
            L0x2001a308 * (x**0) * ((y_3_1)**4) + 
            L0x2001a30c * (x**1) * ((y_3_1)**4) + 
            L0x2001a310 * (x**2) * ((y_3_1)**4) + 
            L0x2001a314 * (x**3) * ((y_3_1)**4) + 
            L0x2001a318 * (x**0) * ((y_3_1)**5) + 
            L0x2001a31c * (x**1) * ((y_3_1)**5) + 
            L0x2001a320 * (x**2) * ((y_3_1)**5) + 
            L0x2001a324 * (x**3) * ((y_3_1)**5) + 
            L0x2001a328 * (x**0) * ((y_3_1)**6) + 
            L0x2001a32c * (x**1) * ((y_3_1)**6) + 
            L0x2001a330 * (x**2) * ((y_3_1)**6) + 
            L0x2001a334 * (x**3) * ((y_3_1)**6) + 
            L0x2001a338 * (x**0) * ((y_3_1)**7) + 
            L0x2001a33c * (x**1) * ((y_3_1)**7) + 
            L0x2001a340 * (x**2) * ((y_3_1)**7) + 
            L0x2001a344 * (x**3) * ((y_3_1)**7)
          )
          [25570049, x**4 - y_0_09 * 597243, y_0_09 - 1],
    (* inp_poly_10 *)
    eqmod 8 * (inp_poly_10 * inp_poly_10)
          (
            L0x2001a2c8 * (x**0) * ((y_3_1)**0) + 
            L0x2001a2cc * (x**1) * ((y_3_1)**0) + 
            L0x2001a2d0 * (x**2) * ((y_3_1)**0) + 
            L0x2001a2d4 * (x**3) * ((y_3_1)**0) + 
            L0x2001a2d8 * (x**0) * ((y_3_1)**1) + 
            L0x2001a2dc * (x**1) * ((y_3_1)**1) + 
            L0x2001a2e0 * (x**2) * ((y_3_1)**1) + 
            L0x2001a2e4 * (x**3) * ((y_3_1)**1) + 
            L0x2001a2e8 * (x**0) * ((y_3_1)**2) + 
            L0x2001a2ec * (x**1) * ((y_3_1)**2) + 
            L0x2001a2f0 * (x**2) * ((y_3_1)**2) + 
            L0x2001a2f4 * (x**3) * ((y_3_1)**2) + 
            L0x2001a2f8 * (x**0) * ((y_3_1)**3) + 
            L0x2001a2fc * (x**1) * ((y_3_1)**3) + 
            L0x2001a300 * (x**2) * ((y_3_1)**3) + 
            L0x2001a304 * (x**3) * ((y_3_1)**3) + 
            L0x2001a308 * (x**0) * ((y_3_1)**4) + 
            L0x2001a30c * (x**1) * ((y_3_1)**4) + 
            L0x2001a310 * (x**2) * ((y_3_1)**4) + 
            L0x2001a314 * (x**3) * ((y_3_1)**4) + 
            L0x2001a318 * (x**0) * ((y_3_1)**5) + 
            L0x2001a31c * (x**1) * ((y_3_1)**5) + 
            L0x2001a320 * (x**2) * ((y_3_1)**5) + 
            L0x2001a324 * (x**3) * ((y_3_1)**5) + 
            L0x2001a328 * (x**0) * ((y_3_1)**6) + 
            L0x2001a32c * (x**1) * ((y_3_1)**6) + 
            L0x2001a330 * (x**2) * ((y_3_1)**6) + 
            L0x2001a334 * (x**3) * ((y_3_1)**6) + 
            L0x2001a338 * (x**0) * ((y_3_1)**7) + 
            L0x2001a33c * (x**1) * ((y_3_1)**7) + 
            L0x2001a340 * (x**2) * ((y_3_1)**7) + 
            L0x2001a344 * (x**3) * ((y_3_1)**7)
          )
          [25570049, x**4 - y_0_10 * 4410275, y_0_10 - 1],
    (* inp_poly_11 *)
    eqmod 8 * (inp_poly_11 * inp_poly_11)
          (
            L0x2001a2c8 * (x**0) * ((y_3_1)**0) + 
            L0x2001a2cc * (x**1) * ((y_3_1)**0) + 
            L0x2001a2d0 * (x**2) * ((y_3_1)**0) + 
            L0x2001a2d4 * (x**3) * ((y_3_1)**0) + 
            L0x2001a2d8 * (x**0) * ((y_3_1)**1) + 
            L0x2001a2dc * (x**1) * ((y_3_1)**1) + 
            L0x2001a2e0 * (x**2) * ((y_3_1)**1) + 
            L0x2001a2e4 * (x**3) * ((y_3_1)**1) + 
            L0x2001a2e8 * (x**0) * ((y_3_1)**2) + 
            L0x2001a2ec * (x**1) * ((y_3_1)**2) + 
            L0x2001a2f0 * (x**2) * ((y_3_1)**2) + 
            L0x2001a2f4 * (x**3) * ((y_3_1)**2) + 
            L0x2001a2f8 * (x**0) * ((y_3_1)**3) + 
            L0x2001a2fc * (x**1) * ((y_3_1)**3) + 
            L0x2001a300 * (x**2) * ((y_3_1)**3) + 
            L0x2001a304 * (x**3) * ((y_3_1)**3) + 
            L0x2001a308 * (x**0) * ((y_3_1)**4) + 
            L0x2001a30c * (x**1) * ((y_3_1)**4) + 
            L0x2001a310 * (x**2) * ((y_3_1)**4) + 
            L0x2001a314 * (x**3) * ((y_3_1)**4) + 
            L0x2001a318 * (x**0) * ((y_3_1)**5) + 
            L0x2001a31c * (x**1) * ((y_3_1)**5) + 
            L0x2001a320 * (x**2) * ((y_3_1)**5) + 
            L0x2001a324 * (x**3) * ((y_3_1)**5) + 
            L0x2001a328 * (x**0) * ((y_3_1)**6) + 
            L0x2001a32c * (x**1) * ((y_3_1)**6) + 
            L0x2001a330 * (x**2) * ((y_3_1)**6) + 
            L0x2001a334 * (x**3) * ((y_3_1)**6) + 
            L0x2001a338 * (x**0) * ((y_3_1)**7) + 
            L0x2001a33c * (x**1) * ((y_3_1)**7) + 
            L0x2001a340 * (x**2) * ((y_3_1)**7) + 
            L0x2001a344 * (x**3) * ((y_3_1)**7)
          )
          [25570049, x**4 - y_0_11 * 21159774, y_0_11 - 1],
    (* inp_poly_12 *)
    eqmod 8 * (inp_poly_12 * inp_poly_12)
          (
            L0x2001a2c8 * (x**0) * ((y_3_1)**0) + 
            L0x2001a2cc * (x**1) * ((y_3_1)**0) + 
            L0x2001a2d0 * (x**2) * ((y_3_1)**0) + 
            L0x2001a2d4 * (x**3) * ((y_3_1)**0) + 
            L0x2001a2d8 * (x**0) * ((y_3_1)**1) + 
            L0x2001a2dc * (x**1) * ((y_3_1)**1) + 
            L0x2001a2e0 * (x**2) * ((y_3_1)**1) + 
            L0x2001a2e4 * (x**3) * ((y_3_1)**1) + 
            L0x2001a2e8 * (x**0) * ((y_3_1)**2) + 
            L0x2001a2ec * (x**1) * ((y_3_1)**2) + 
            L0x2001a2f0 * (x**2) * ((y_3_1)**2) + 
            L0x2001a2f4 * (x**3) * ((y_3_1)**2) + 
            L0x2001a2f8 * (x**0) * ((y_3_1)**3) + 
            L0x2001a2fc * (x**1) * ((y_3_1)**3) + 
            L0x2001a300 * (x**2) * ((y_3_1)**3) + 
            L0x2001a304 * (x**3) * ((y_3_1)**3) + 
            L0x2001a308 * (x**0) * ((y_3_1)**4) + 
            L0x2001a30c * (x**1) * ((y_3_1)**4) + 
            L0x2001a310 * (x**2) * ((y_3_1)**4) + 
            L0x2001a314 * (x**3) * ((y_3_1)**4) + 
            L0x2001a318 * (x**0) * ((y_3_1)**5) + 
            L0x2001a31c * (x**1) * ((y_3_1)**5) + 
            L0x2001a320 * (x**2) * ((y_3_1)**5) + 
            L0x2001a324 * (x**3) * ((y_3_1)**5) + 
            L0x2001a328 * (x**0) * ((y_3_1)**6) + 
            L0x2001a32c * (x**1) * ((y_3_1)**6) + 
            L0x2001a330 * (x**2) * ((y_3_1)**6) + 
            L0x2001a334 * (x**3) * ((y_3_1)**6) + 
            L0x2001a338 * (x**0) * ((y_3_1)**7) + 
            L0x2001a33c * (x**1) * ((y_3_1)**7) + 
            L0x2001a340 * (x**2) * ((y_3_1)**7) + 
            L0x2001a344 * (x**3) * ((y_3_1)**7)
          )
          [25570049, x**4 - y_0_12 * 2389590, y_0_12 - 1],
    (* inp_poly_13 *)
    eqmod 8 * (inp_poly_13 * inp_poly_13)
          (
            L0x2001a2c8 * (x**0) * ((y_3_1)**0) + 
            L0x2001a2cc * (x**1) * ((y_3_1)**0) + 
            L0x2001a2d0 * (x**2) * ((y_3_1)**0) + 
            L0x2001a2d4 * (x**3) * ((y_3_1)**0) + 
            L0x2001a2d8 * (x**0) * ((y_3_1)**1) + 
            L0x2001a2dc * (x**1) * ((y_3_1)**1) + 
            L0x2001a2e0 * (x**2) * ((y_3_1)**1) + 
            L0x2001a2e4 * (x**3) * ((y_3_1)**1) + 
            L0x2001a2e8 * (x**0) * ((y_3_1)**2) + 
            L0x2001a2ec * (x**1) * ((y_3_1)**2) + 
            L0x2001a2f0 * (x**2) * ((y_3_1)**2) + 
            L0x2001a2f4 * (x**3) * ((y_3_1)**2) + 
            L0x2001a2f8 * (x**0) * ((y_3_1)**3) + 
            L0x2001a2fc * (x**1) * ((y_3_1)**3) + 
            L0x2001a300 * (x**2) * ((y_3_1)**3) + 
            L0x2001a304 * (x**3) * ((y_3_1)**3) + 
            L0x2001a308 * (x**0) * ((y_3_1)**4) + 
            L0x2001a30c * (x**1) * ((y_3_1)**4) + 
            L0x2001a310 * (x**2) * ((y_3_1)**4) + 
            L0x2001a314 * (x**3) * ((y_3_1)**4) + 
            L0x2001a318 * (x**0) * ((y_3_1)**5) + 
            L0x2001a31c * (x**1) * ((y_3_1)**5) + 
            L0x2001a320 * (x**2) * ((y_3_1)**5) + 
            L0x2001a324 * (x**3) * ((y_3_1)**5) + 
            L0x2001a328 * (x**0) * ((y_3_1)**6) + 
            L0x2001a32c * (x**1) * ((y_3_1)**6) + 
            L0x2001a330 * (x**2) * ((y_3_1)**6) + 
            L0x2001a334 * (x**3) * ((y_3_1)**6) + 
            L0x2001a338 * (x**0) * ((y_3_1)**7) + 
            L0x2001a33c * (x**1) * ((y_3_1)**7) + 
            L0x2001a340 * (x**2) * ((y_3_1)**7) + 
            L0x2001a344 * (x**3) * ((y_3_1)**7)
          )
          [25570049, x**4 - y_0_13 * 23180459, y_0_13 - 1],
    (* inp_poly_14 *)
    eqmod 8 * (inp_poly_14 * inp_poly_14)
          (
            L0x2001a2c8 * (x**0) * ((y_3_1)**0) + 
            L0x2001a2cc * (x**1) * ((y_3_1)**0) + 
            L0x2001a2d0 * (x**2) * ((y_3_1)**0) + 
            L0x2001a2d4 * (x**3) * ((y_3_1)**0) + 
            L0x2001a2d8 * (x**0) * ((y_3_1)**1) + 
            L0x2001a2dc * (x**1) * ((y_3_1)**1) + 
            L0x2001a2e0 * (x**2) * ((y_3_1)**1) + 
            L0x2001a2e4 * (x**3) * ((y_3_1)**1) + 
            L0x2001a2e8 * (x**0) * ((y_3_1)**2) + 
            L0x2001a2ec * (x**1) * ((y_3_1)**2) + 
            L0x2001a2f0 * (x**2) * ((y_3_1)**2) + 
            L0x2001a2f4 * (x**3) * ((y_3_1)**2) + 
            L0x2001a2f8 * (x**0) * ((y_3_1)**3) + 
            L0x2001a2fc * (x**1) * ((y_3_1)**3) + 
            L0x2001a300 * (x**2) * ((y_3_1)**3) + 
            L0x2001a304 * (x**3) * ((y_3_1)**3) + 
            L0x2001a308 * (x**0) * ((y_3_1)**4) + 
            L0x2001a30c * (x**1) * ((y_3_1)**4) + 
            L0x2001a310 * (x**2) * ((y_3_1)**4) + 
            L0x2001a314 * (x**3) * ((y_3_1)**4) + 
            L0x2001a318 * (x**0) * ((y_3_1)**5) + 
            L0x2001a31c * (x**1) * ((y_3_1)**5) + 
            L0x2001a320 * (x**2) * ((y_3_1)**5) + 
            L0x2001a324 * (x**3) * ((y_3_1)**5) + 
            L0x2001a328 * (x**0) * ((y_3_1)**6) + 
            L0x2001a32c * (x**1) * ((y_3_1)**6) + 
            L0x2001a330 * (x**2) * ((y_3_1)**6) + 
            L0x2001a334 * (x**3) * ((y_3_1)**6) + 
            L0x2001a338 * (x**0) * ((y_3_1)**7) + 
            L0x2001a33c * (x**1) * ((y_3_1)**7) + 
            L0x2001a340 * (x**2) * ((y_3_1)**7) + 
            L0x2001a344 * (x**3) * ((y_3_1)**7)
          )
          [25570049, x**4 - y_0_14 * 4363503, y_0_14 - 1],
    (* inp_poly_15 *)
    eqmod 8 * (inp_poly_15 * inp_poly_15)
          (
            L0x2001a2c8 * (x**0) * ((y_3_1)**0) + 
            L0x2001a2cc * (x**1) * ((y_3_1)**0) + 
            L0x2001a2d0 * (x**2) * ((y_3_1)**0) + 
            L0x2001a2d4 * (x**3) * ((y_3_1)**0) + 
            L0x2001a2d8 * (x**0) * ((y_3_1)**1) + 
            L0x2001a2dc * (x**1) * ((y_3_1)**1) + 
            L0x2001a2e0 * (x**2) * ((y_3_1)**1) + 
            L0x2001a2e4 * (x**3) * ((y_3_1)**1) + 
            L0x2001a2e8 * (x**0) * ((y_3_1)**2) + 
            L0x2001a2ec * (x**1) * ((y_3_1)**2) + 
            L0x2001a2f0 * (x**2) * ((y_3_1)**2) + 
            L0x2001a2f4 * (x**3) * ((y_3_1)**2) + 
            L0x2001a2f8 * (x**0) * ((y_3_1)**3) + 
            L0x2001a2fc * (x**1) * ((y_3_1)**3) + 
            L0x2001a300 * (x**2) * ((y_3_1)**3) + 
            L0x2001a304 * (x**3) * ((y_3_1)**3) + 
            L0x2001a308 * (x**0) * ((y_3_1)**4) + 
            L0x2001a30c * (x**1) * ((y_3_1)**4) + 
            L0x2001a310 * (x**2) * ((y_3_1)**4) + 
            L0x2001a314 * (x**3) * ((y_3_1)**4) + 
            L0x2001a318 * (x**0) * ((y_3_1)**5) + 
            L0x2001a31c * (x**1) * ((y_3_1)**5) + 
            L0x2001a320 * (x**2) * ((y_3_1)**5) + 
            L0x2001a324 * (x**3) * ((y_3_1)**5) + 
            L0x2001a328 * (x**0) * ((y_3_1)**6) + 
            L0x2001a32c * (x**1) * ((y_3_1)**6) + 
            L0x2001a330 * (x**2) * ((y_3_1)**6) + 
            L0x2001a334 * (x**3) * ((y_3_1)**6) + 
            L0x2001a338 * (x**0) * ((y_3_1)**7) + 
            L0x2001a33c * (x**1) * ((y_3_1)**7) + 
            L0x2001a340 * (x**2) * ((y_3_1)**7) + 
            L0x2001a344 * (x**3) * ((y_3_1)**7)
          )
          [25570049, x**4 - y_0_15 * 21206546, y_0_15 - 1],
    (* inp_poly_16 *)
    eqmod 8 * (inp_poly_16 * inp_poly_16)
          (
            L0x2001a348 * (x**0) * ((y_3_2)**0) + 
            L0x2001a34c * (x**1) * ((y_3_2)**0) + 
            L0x2001a350 * (x**2) * ((y_3_2)**0) + 
            L0x2001a354 * (x**3) * ((y_3_2)**0) + 
            L0x2001a358 * (x**0) * ((y_3_2)**1) + 
            L0x2001a35c * (x**1) * ((y_3_2)**1) + 
            L0x2001a360 * (x**2) * ((y_3_2)**1) + 
            L0x2001a364 * (x**3) * ((y_3_2)**1) + 
            L0x2001a368 * (x**0) * ((y_3_2)**2) + 
            L0x2001a36c * (x**1) * ((y_3_2)**2) + 
            L0x2001a370 * (x**2) * ((y_3_2)**2) + 
            L0x2001a374 * (x**3) * ((y_3_2)**2) + 
            L0x2001a378 * (x**0) * ((y_3_2)**3) + 
            L0x2001a37c * (x**1) * ((y_3_2)**3) + 
            L0x2001a380 * (x**2) * ((y_3_2)**3) + 
            L0x2001a384 * (x**3) * ((y_3_2)**3) + 
            L0x2001a388 * (x**0) * ((y_3_2)**4) + 
            L0x2001a38c * (x**1) * ((y_3_2)**4) + 
            L0x2001a390 * (x**2) * ((y_3_2)**4) + 
            L0x2001a394 * (x**3) * ((y_3_2)**4) + 
            L0x2001a398 * (x**0) * ((y_3_2)**5) + 
            L0x2001a39c * (x**1) * ((y_3_2)**5) + 
            L0x2001a3a0 * (x**2) * ((y_3_2)**5) + 
            L0x2001a3a4 * (x**3) * ((y_3_2)**5) + 
            L0x2001a3a8 * (x**0) * ((y_3_2)**6) + 
            L0x2001a3ac * (x**1) * ((y_3_2)**6) + 
            L0x2001a3b0 * (x**2) * ((y_3_2)**6) + 
            L0x2001a3b4 * (x**3) * ((y_3_2)**6) + 
            L0x2001a3b8 * (x**0) * ((y_3_2)**7) + 
            L0x2001a3bc * (x**1) * ((y_3_2)**7) + 
            L0x2001a3c0 * (x**2) * ((y_3_2)**7) + 
            L0x2001a3c4 * (x**3) * ((y_3_2)**7)
          )
          [25570049, x**4 - y_0_16 * 21713494, y_0_16 - 1],
    (* inp_poly_17 *)
    eqmod 8 * (inp_poly_17 * inp_poly_17)
          (
            L0x2001a348 * (x**0) * ((y_3_2)**0) + 
            L0x2001a34c * (x**1) * ((y_3_2)**0) + 
            L0x2001a350 * (x**2) * ((y_3_2)**0) + 
            L0x2001a354 * (x**3) * ((y_3_2)**0) + 
            L0x2001a358 * (x**0) * ((y_3_2)**1) + 
            L0x2001a35c * (x**1) * ((y_3_2)**1) + 
            L0x2001a360 * (x**2) * ((y_3_2)**1) + 
            L0x2001a364 * (x**3) * ((y_3_2)**1) + 
            L0x2001a368 * (x**0) * ((y_3_2)**2) + 
            L0x2001a36c * (x**1) * ((y_3_2)**2) + 
            L0x2001a370 * (x**2) * ((y_3_2)**2) + 
            L0x2001a374 * (x**3) * ((y_3_2)**2) + 
            L0x2001a378 * (x**0) * ((y_3_2)**3) + 
            L0x2001a37c * (x**1) * ((y_3_2)**3) + 
            L0x2001a380 * (x**2) * ((y_3_2)**3) + 
            L0x2001a384 * (x**3) * ((y_3_2)**3) + 
            L0x2001a388 * (x**0) * ((y_3_2)**4) + 
            L0x2001a38c * (x**1) * ((y_3_2)**4) + 
            L0x2001a390 * (x**2) * ((y_3_2)**4) + 
            L0x2001a394 * (x**3) * ((y_3_2)**4) + 
            L0x2001a398 * (x**0) * ((y_3_2)**5) + 
            L0x2001a39c * (x**1) * ((y_3_2)**5) + 
            L0x2001a3a0 * (x**2) * ((y_3_2)**5) + 
            L0x2001a3a4 * (x**3) * ((y_3_2)**5) + 
            L0x2001a3a8 * (x**0) * ((y_3_2)**6) + 
            L0x2001a3ac * (x**1) * ((y_3_2)**6) + 
            L0x2001a3b0 * (x**2) * ((y_3_2)**6) + 
            L0x2001a3b4 * (x**3) * ((y_3_2)**6) + 
            L0x2001a3b8 * (x**0) * ((y_3_2)**7) + 
            L0x2001a3bc * (x**1) * ((y_3_2)**7) + 
            L0x2001a3c0 * (x**2) * ((y_3_2)**7) + 
            L0x2001a3c4 * (x**3) * ((y_3_2)**7)
          )
          [25570049, x**4 - y_0_17 * 3856555, y_0_17 - 1],
    (* inp_poly_18 *)
    eqmod 8 * (inp_poly_18 * inp_poly_18)
          (
            L0x2001a348 * (x**0) * ((y_3_2)**0) + 
            L0x2001a34c * (x**1) * ((y_3_2)**0) + 
            L0x2001a350 * (x**2) * ((y_3_2)**0) + 
            L0x2001a354 * (x**3) * ((y_3_2)**0) + 
            L0x2001a358 * (x**0) * ((y_3_2)**1) + 
            L0x2001a35c * (x**1) * ((y_3_2)**1) + 
            L0x2001a360 * (x**2) * ((y_3_2)**1) + 
            L0x2001a364 * (x**3) * ((y_3_2)**1) + 
            L0x2001a368 * (x**0) * ((y_3_2)**2) + 
            L0x2001a36c * (x**1) * ((y_3_2)**2) + 
            L0x2001a370 * (x**2) * ((y_3_2)**2) + 
            L0x2001a374 * (x**3) * ((y_3_2)**2) + 
            L0x2001a378 * (x**0) * ((y_3_2)**3) + 
            L0x2001a37c * (x**1) * ((y_3_2)**3) + 
            L0x2001a380 * (x**2) * ((y_3_2)**3) + 
            L0x2001a384 * (x**3) * ((y_3_2)**3) + 
            L0x2001a388 * (x**0) * ((y_3_2)**4) + 
            L0x2001a38c * (x**1) * ((y_3_2)**4) + 
            L0x2001a390 * (x**2) * ((y_3_2)**4) + 
            L0x2001a394 * (x**3) * ((y_3_2)**4) + 
            L0x2001a398 * (x**0) * ((y_3_2)**5) + 
            L0x2001a39c * (x**1) * ((y_3_2)**5) + 
            L0x2001a3a0 * (x**2) * ((y_3_2)**5) + 
            L0x2001a3a4 * (x**3) * ((y_3_2)**5) + 
            L0x2001a3a8 * (x**0) * ((y_3_2)**6) + 
            L0x2001a3ac * (x**1) * ((y_3_2)**6) + 
            L0x2001a3b0 * (x**2) * ((y_3_2)**6) + 
            L0x2001a3b4 * (x**3) * ((y_3_2)**6) + 
            L0x2001a3b8 * (x**0) * ((y_3_2)**7) + 
            L0x2001a3bc * (x**1) * ((y_3_2)**7) + 
            L0x2001a3c0 * (x**2) * ((y_3_2)**7) + 
            L0x2001a3c4 * (x**3) * ((y_3_2)**7)
          )
          [25570049, x**4 - y_0_18 * 23159929, y_0_18 - 1],
    (* inp_poly_19 *)
    eqmod 8 * (inp_poly_19 * inp_poly_19)
          (
            L0x2001a348 * (x**0) * ((y_3_2)**0) + 
            L0x2001a34c * (x**1) * ((y_3_2)**0) + 
            L0x2001a350 * (x**2) * ((y_3_2)**0) + 
            L0x2001a354 * (x**3) * ((y_3_2)**0) + 
            L0x2001a358 * (x**0) * ((y_3_2)**1) + 
            L0x2001a35c * (x**1) * ((y_3_2)**1) + 
            L0x2001a360 * (x**2) * ((y_3_2)**1) + 
            L0x2001a364 * (x**3) * ((y_3_2)**1) + 
            L0x2001a368 * (x**0) * ((y_3_2)**2) + 
            L0x2001a36c * (x**1) * ((y_3_2)**2) + 
            L0x2001a370 * (x**2) * ((y_3_2)**2) + 
            L0x2001a374 * (x**3) * ((y_3_2)**2) + 
            L0x2001a378 * (x**0) * ((y_3_2)**3) + 
            L0x2001a37c * (x**1) * ((y_3_2)**3) + 
            L0x2001a380 * (x**2) * ((y_3_2)**3) + 
            L0x2001a384 * (x**3) * ((y_3_2)**3) + 
            L0x2001a388 * (x**0) * ((y_3_2)**4) + 
            L0x2001a38c * (x**1) * ((y_3_2)**4) + 
            L0x2001a390 * (x**2) * ((y_3_2)**4) + 
            L0x2001a394 * (x**3) * ((y_3_2)**4) + 
            L0x2001a398 * (x**0) * ((y_3_2)**5) + 
            L0x2001a39c * (x**1) * ((y_3_2)**5) + 
            L0x2001a3a0 * (x**2) * ((y_3_2)**5) + 
            L0x2001a3a4 * (x**3) * ((y_3_2)**5) + 
            L0x2001a3a8 * (x**0) * ((y_3_2)**6) + 
            L0x2001a3ac * (x**1) * ((y_3_2)**6) + 
            L0x2001a3b0 * (x**2) * ((y_3_2)**6) + 
            L0x2001a3b4 * (x**3) * ((y_3_2)**6) + 
            L0x2001a3b8 * (x**0) * ((y_3_2)**7) + 
            L0x2001a3bc * (x**1) * ((y_3_2)**7) + 
            L0x2001a3c0 * (x**2) * ((y_3_2)**7) + 
            L0x2001a3c4 * (x**3) * ((y_3_2)**7)
          )
          [25570049, x**4 - y_0_19 * 2410120, y_0_19 - 1],
    (* inp_poly_20 *)
    eqmod 8 * (inp_poly_20 * inp_poly_20)
          (
            L0x2001a348 * (x**0) * ((y_3_2)**0) + 
            L0x2001a34c * (x**1) * ((y_3_2)**0) + 
            L0x2001a350 * (x**2) * ((y_3_2)**0) + 
            L0x2001a354 * (x**3) * ((y_3_2)**0) + 
            L0x2001a358 * (x**0) * ((y_3_2)**1) + 
            L0x2001a35c * (x**1) * ((y_3_2)**1) + 
            L0x2001a360 * (x**2) * ((y_3_2)**1) + 
            L0x2001a364 * (x**3) * ((y_3_2)**1) + 
            L0x2001a368 * (x**0) * ((y_3_2)**2) + 
            L0x2001a36c * (x**1) * ((y_3_2)**2) + 
            L0x2001a370 * (x**2) * ((y_3_2)**2) + 
            L0x2001a374 * (x**3) * ((y_3_2)**2) + 
            L0x2001a378 * (x**0) * ((y_3_2)**3) + 
            L0x2001a37c * (x**1) * ((y_3_2)**3) + 
            L0x2001a380 * (x**2) * ((y_3_2)**3) + 
            L0x2001a384 * (x**3) * ((y_3_2)**3) + 
            L0x2001a388 * (x**0) * ((y_3_2)**4) + 
            L0x2001a38c * (x**1) * ((y_3_2)**4) + 
            L0x2001a390 * (x**2) * ((y_3_2)**4) + 
            L0x2001a394 * (x**3) * ((y_3_2)**4) + 
            L0x2001a398 * (x**0) * ((y_3_2)**5) + 
            L0x2001a39c * (x**1) * ((y_3_2)**5) + 
            L0x2001a3a0 * (x**2) * ((y_3_2)**5) + 
            L0x2001a3a4 * (x**3) * ((y_3_2)**5) + 
            L0x2001a3a8 * (x**0) * ((y_3_2)**6) + 
            L0x2001a3ac * (x**1) * ((y_3_2)**6) + 
            L0x2001a3b0 * (x**2) * ((y_3_2)**6) + 
            L0x2001a3b4 * (x**3) * ((y_3_2)**6) + 
            L0x2001a3b8 * (x**0) * ((y_3_2)**7) + 
            L0x2001a3bc * (x**1) * ((y_3_2)**7) + 
            L0x2001a3c0 * (x**2) * ((y_3_2)**7) + 
            L0x2001a3c4 * (x**3) * ((y_3_2)**7)
          )
          [25570049, x**4 - y_0_20 * 23569609, y_0_20 - 1],
    (* inp_poly_21 *)
    eqmod 8 * (inp_poly_21 * inp_poly_21)
          (
            L0x2001a348 * (x**0) * ((y_3_2)**0) + 
            L0x2001a34c * (x**1) * ((y_3_2)**0) + 
            L0x2001a350 * (x**2) * ((y_3_2)**0) + 
            L0x2001a354 * (x**3) * ((y_3_2)**0) + 
            L0x2001a358 * (x**0) * ((y_3_2)**1) + 
            L0x2001a35c * (x**1) * ((y_3_2)**1) + 
            L0x2001a360 * (x**2) * ((y_3_2)**1) + 
            L0x2001a364 * (x**3) * ((y_3_2)**1) + 
            L0x2001a368 * (x**0) * ((y_3_2)**2) + 
            L0x2001a36c * (x**1) * ((y_3_2)**2) + 
            L0x2001a370 * (x**2) * ((y_3_2)**2) + 
            L0x2001a374 * (x**3) * ((y_3_2)**2) + 
            L0x2001a378 * (x**0) * ((y_3_2)**3) + 
            L0x2001a37c * (x**1) * ((y_3_2)**3) + 
            L0x2001a380 * (x**2) * ((y_3_2)**3) + 
            L0x2001a384 * (x**3) * ((y_3_2)**3) + 
            L0x2001a388 * (x**0) * ((y_3_2)**4) + 
            L0x2001a38c * (x**1) * ((y_3_2)**4) + 
            L0x2001a390 * (x**2) * ((y_3_2)**4) + 
            L0x2001a394 * (x**3) * ((y_3_2)**4) + 
            L0x2001a398 * (x**0) * ((y_3_2)**5) + 
            L0x2001a39c * (x**1) * ((y_3_2)**5) + 
            L0x2001a3a0 * (x**2) * ((y_3_2)**5) + 
            L0x2001a3a4 * (x**3) * ((y_3_2)**5) + 
            L0x2001a3a8 * (x**0) * ((y_3_2)**6) + 
            L0x2001a3ac * (x**1) * ((y_3_2)**6) + 
            L0x2001a3b0 * (x**2) * ((y_3_2)**6) + 
            L0x2001a3b4 * (x**3) * ((y_3_2)**6) + 
            L0x2001a3b8 * (x**0) * ((y_3_2)**7) + 
            L0x2001a3bc * (x**1) * ((y_3_2)**7) + 
            L0x2001a3c0 * (x**2) * ((y_3_2)**7) + 
            L0x2001a3c4 * (x**3) * ((y_3_2)**7)
          )
          [25570049, x**4 - y_0_21 * 2000440, y_0_21 - 1],
    (* inp_poly_22 *)
    eqmod 8 * (inp_poly_22 * inp_poly_22)
          (
            L0x2001a348 * (x**0) * ((y_3_2)**0) + 
            L0x2001a34c * (x**1) * ((y_3_2)**0) + 
            L0x2001a350 * (x**2) * ((y_3_2)**0) + 
            L0x2001a354 * (x**3) * ((y_3_2)**0) + 
            L0x2001a358 * (x**0) * ((y_3_2)**1) + 
            L0x2001a35c * (x**1) * ((y_3_2)**1) + 
            L0x2001a360 * (x**2) * ((y_3_2)**1) + 
            L0x2001a364 * (x**3) * ((y_3_2)**1) + 
            L0x2001a368 * (x**0) * ((y_3_2)**2) + 
            L0x2001a36c * (x**1) * ((y_3_2)**2) + 
            L0x2001a370 * (x**2) * ((y_3_2)**2) + 
            L0x2001a374 * (x**3) * ((y_3_2)**2) + 
            L0x2001a378 * (x**0) * ((y_3_2)**3) + 
            L0x2001a37c * (x**1) * ((y_3_2)**3) + 
            L0x2001a380 * (x**2) * ((y_3_2)**3) + 
            L0x2001a384 * (x**3) * ((y_3_2)**3) + 
            L0x2001a388 * (x**0) * ((y_3_2)**4) + 
            L0x2001a38c * (x**1) * ((y_3_2)**4) + 
            L0x2001a390 * (x**2) * ((y_3_2)**4) + 
            L0x2001a394 * (x**3) * ((y_3_2)**4) + 
            L0x2001a398 * (x**0) * ((y_3_2)**5) + 
            L0x2001a39c * (x**1) * ((y_3_2)**5) + 
            L0x2001a3a0 * (x**2) * ((y_3_2)**5) + 
            L0x2001a3a4 * (x**3) * ((y_3_2)**5) + 
            L0x2001a3a8 * (x**0) * ((y_3_2)**6) + 
            L0x2001a3ac * (x**1) * ((y_3_2)**6) + 
            L0x2001a3b0 * (x**2) * ((y_3_2)**6) + 
            L0x2001a3b4 * (x**3) * ((y_3_2)**6) + 
            L0x2001a3b8 * (x**0) * ((y_3_2)**7) + 
            L0x2001a3bc * (x**1) * ((y_3_2)**7) + 
            L0x2001a3c0 * (x**2) * ((y_3_2)**7) + 
            L0x2001a3c4 * (x**3) * ((y_3_2)**7)
          )
          [25570049, x**4 - y_0_22 * 7617083, y_0_22 - 1],
    (* inp_poly_23 *)
    eqmod 8 * (inp_poly_23 * inp_poly_23)
          (
            L0x2001a348 * (x**0) * ((y_3_2)**0) + 
            L0x2001a34c * (x**1) * ((y_3_2)**0) + 
            L0x2001a350 * (x**2) * ((y_3_2)**0) + 
            L0x2001a354 * (x**3) * ((y_3_2)**0) + 
            L0x2001a358 * (x**0) * ((y_3_2)**1) + 
            L0x2001a35c * (x**1) * ((y_3_2)**1) + 
            L0x2001a360 * (x**2) * ((y_3_2)**1) + 
            L0x2001a364 * (x**3) * ((y_3_2)**1) + 
            L0x2001a368 * (x**0) * ((y_3_2)**2) + 
            L0x2001a36c * (x**1) * ((y_3_2)**2) + 
            L0x2001a370 * (x**2) * ((y_3_2)**2) + 
            L0x2001a374 * (x**3) * ((y_3_2)**2) + 
            L0x2001a378 * (x**0) * ((y_3_2)**3) + 
            L0x2001a37c * (x**1) * ((y_3_2)**3) + 
            L0x2001a380 * (x**2) * ((y_3_2)**3) + 
            L0x2001a384 * (x**3) * ((y_3_2)**3) + 
            L0x2001a388 * (x**0) * ((y_3_2)**4) + 
            L0x2001a38c * (x**1) * ((y_3_2)**4) + 
            L0x2001a390 * (x**2) * ((y_3_2)**4) + 
            L0x2001a394 * (x**3) * ((y_3_2)**4) + 
            L0x2001a398 * (x**0) * ((y_3_2)**5) + 
            L0x2001a39c * (x**1) * ((y_3_2)**5) + 
            L0x2001a3a0 * (x**2) * ((y_3_2)**5) + 
            L0x2001a3a4 * (x**3) * ((y_3_2)**5) + 
            L0x2001a3a8 * (x**0) * ((y_3_2)**6) + 
            L0x2001a3ac * (x**1) * ((y_3_2)**6) + 
            L0x2001a3b0 * (x**2) * ((y_3_2)**6) + 
            L0x2001a3b4 * (x**3) * ((y_3_2)**6) + 
            L0x2001a3b8 * (x**0) * ((y_3_2)**7) + 
            L0x2001a3bc * (x**1) * ((y_3_2)**7) + 
            L0x2001a3c0 * (x**2) * ((y_3_2)**7) + 
            L0x2001a3c4 * (x**3) * ((y_3_2)**7)
          )
          [25570049, x**4 - y_0_23 * 17952966, y_0_23 - 1],
    (* inp_poly_24 *)
    eqmod 8 * (inp_poly_24 * inp_poly_24)
          (
            L0x2001a3c8 * (x**0) * ((y_3_3)**0) + 
            L0x2001a3cc * (x**1) * ((y_3_3)**0) + 
            L0x2001a3d0 * (x**2) * ((y_3_3)**0) + 
            L0x2001a3d4 * (x**3) * ((y_3_3)**0) + 
            L0x2001a3d8 * (x**0) * ((y_3_3)**1) + 
            L0x2001a3dc * (x**1) * ((y_3_3)**1) + 
            L0x2001a3e0 * (x**2) * ((y_3_3)**1) + 
            L0x2001a3e4 * (x**3) * ((y_3_3)**1) + 
            L0x2001a3e8 * (x**0) * ((y_3_3)**2) + 
            L0x2001a3ec * (x**1) * ((y_3_3)**2) + 
            L0x2001a3f0 * (x**2) * ((y_3_3)**2) + 
            L0x2001a3f4 * (x**3) * ((y_3_3)**2) + 
            L0x2001a3f8 * (x**0) * ((y_3_3)**3) + 
            L0x2001a3fc * (x**1) * ((y_3_3)**3) + 
            L0x2001a400 * (x**2) * ((y_3_3)**3) + 
            L0x2001a404 * (x**3) * ((y_3_3)**3) + 
            L0x2001a408 * (x**0) * ((y_3_3)**4) + 
            L0x2001a40c * (x**1) * ((y_3_3)**4) + 
            L0x2001a410 * (x**2) * ((y_3_3)**4) + 
            L0x2001a414 * (x**3) * ((y_3_3)**4) + 
            L0x2001a418 * (x**0) * ((y_3_3)**5) + 
            L0x2001a41c * (x**1) * ((y_3_3)**5) + 
            L0x2001a420 * (x**2) * ((y_3_3)**5) + 
            L0x2001a424 * (x**3) * ((y_3_3)**5) + 
            L0x2001a428 * (x**0) * ((y_3_3)**6) + 
            L0x2001a42c * (x**1) * ((y_3_3)**6) + 
            L0x2001a430 * (x**2) * ((y_3_3)**6) + 
            L0x2001a434 * (x**3) * ((y_3_3)**6) + 
            L0x2001a438 * (x**0) * ((y_3_3)**7) + 
            L0x2001a43c * (x**1) * ((y_3_3)**7) + 
            L0x2001a440 * (x**2) * ((y_3_3)**7) + 
            L0x2001a444 * (x**3) * ((y_3_3)**7)
          )
          [25570049, x**4 - y_0_24 * 24859920, y_0_24 - 1],
    (* inp_poly_25 *)
    eqmod 8 * (inp_poly_25 * inp_poly_25)
          (
            L0x2001a3c8 * (x**0) * ((y_3_3)**0) + 
            L0x2001a3cc * (x**1) * ((y_3_3)**0) + 
            L0x2001a3d0 * (x**2) * ((y_3_3)**0) + 
            L0x2001a3d4 * (x**3) * ((y_3_3)**0) + 
            L0x2001a3d8 * (x**0) * ((y_3_3)**1) + 
            L0x2001a3dc * (x**1) * ((y_3_3)**1) + 
            L0x2001a3e0 * (x**2) * ((y_3_3)**1) + 
            L0x2001a3e4 * (x**3) * ((y_3_3)**1) + 
            L0x2001a3e8 * (x**0) * ((y_3_3)**2) + 
            L0x2001a3ec * (x**1) * ((y_3_3)**2) + 
            L0x2001a3f0 * (x**2) * ((y_3_3)**2) + 
            L0x2001a3f4 * (x**3) * ((y_3_3)**2) + 
            L0x2001a3f8 * (x**0) * ((y_3_3)**3) + 
            L0x2001a3fc * (x**1) * ((y_3_3)**3) + 
            L0x2001a400 * (x**2) * ((y_3_3)**3) + 
            L0x2001a404 * (x**3) * ((y_3_3)**3) + 
            L0x2001a408 * (x**0) * ((y_3_3)**4) + 
            L0x2001a40c * (x**1) * ((y_3_3)**4) + 
            L0x2001a410 * (x**2) * ((y_3_3)**4) + 
            L0x2001a414 * (x**3) * ((y_3_3)**4) + 
            L0x2001a418 * (x**0) * ((y_3_3)**5) + 
            L0x2001a41c * (x**1) * ((y_3_3)**5) + 
            L0x2001a420 * (x**2) * ((y_3_3)**5) + 
            L0x2001a424 * (x**3) * ((y_3_3)**5) + 
            L0x2001a428 * (x**0) * ((y_3_3)**6) + 
            L0x2001a42c * (x**1) * ((y_3_3)**6) + 
            L0x2001a430 * (x**2) * ((y_3_3)**6) + 
            L0x2001a434 * (x**3) * ((y_3_3)**6) + 
            L0x2001a438 * (x**0) * ((y_3_3)**7) + 
            L0x2001a43c * (x**1) * ((y_3_3)**7) + 
            L0x2001a440 * (x**2) * ((y_3_3)**7) + 
            L0x2001a444 * (x**3) * ((y_3_3)**7)
          )
          [25570049, x**4 - y_0_25 * 710129, y_0_25 - 1],
    (* inp_poly_26 *)
    eqmod 8 * (inp_poly_26 * inp_poly_26)
          (
            L0x2001a3c8 * (x**0) * ((y_3_3)**0) + 
            L0x2001a3cc * (x**1) * ((y_3_3)**0) + 
            L0x2001a3d0 * (x**2) * ((y_3_3)**0) + 
            L0x2001a3d4 * (x**3) * ((y_3_3)**0) + 
            L0x2001a3d8 * (x**0) * ((y_3_3)**1) + 
            L0x2001a3dc * (x**1) * ((y_3_3)**1) + 
            L0x2001a3e0 * (x**2) * ((y_3_3)**1) + 
            L0x2001a3e4 * (x**3) * ((y_3_3)**1) + 
            L0x2001a3e8 * (x**0) * ((y_3_3)**2) + 
            L0x2001a3ec * (x**1) * ((y_3_3)**2) + 
            L0x2001a3f0 * (x**2) * ((y_3_3)**2) + 
            L0x2001a3f4 * (x**3) * ((y_3_3)**2) + 
            L0x2001a3f8 * (x**0) * ((y_3_3)**3) + 
            L0x2001a3fc * (x**1) * ((y_3_3)**3) + 
            L0x2001a400 * (x**2) * ((y_3_3)**3) + 
            L0x2001a404 * (x**3) * ((y_3_3)**3) + 
            L0x2001a408 * (x**0) * ((y_3_3)**4) + 
            L0x2001a40c * (x**1) * ((y_3_3)**4) + 
            L0x2001a410 * (x**2) * ((y_3_3)**4) + 
            L0x2001a414 * (x**3) * ((y_3_3)**4) + 
            L0x2001a418 * (x**0) * ((y_3_3)**5) + 
            L0x2001a41c * (x**1) * ((y_3_3)**5) + 
            L0x2001a420 * (x**2) * ((y_3_3)**5) + 
            L0x2001a424 * (x**3) * ((y_3_3)**5) + 
            L0x2001a428 * (x**0) * ((y_3_3)**6) + 
            L0x2001a42c * (x**1) * ((y_3_3)**6) + 
            L0x2001a430 * (x**2) * ((y_3_3)**6) + 
            L0x2001a434 * (x**3) * ((y_3_3)**6) + 
            L0x2001a438 * (x**0) * ((y_3_3)**7) + 
            L0x2001a43c * (x**1) * ((y_3_3)**7) + 
            L0x2001a440 * (x**2) * ((y_3_3)**7) + 
            L0x2001a444 * (x**3) * ((y_3_3)**7)
          )
          [25570049, x**4 - y_0_26 * 4519508, y_0_26 - 1],
    (* inp_poly_27 *)
    eqmod 8 * (inp_poly_27 * inp_poly_27)
          (
            L0x2001a3c8 * (x**0) * ((y_3_3)**0) + 
            L0x2001a3cc * (x**1) * ((y_3_3)**0) + 
            L0x2001a3d0 * (x**2) * ((y_3_3)**0) + 
            L0x2001a3d4 * (x**3) * ((y_3_3)**0) + 
            L0x2001a3d8 * (x**0) * ((y_3_3)**1) + 
            L0x2001a3dc * (x**1) * ((y_3_3)**1) + 
            L0x2001a3e0 * (x**2) * ((y_3_3)**1) + 
            L0x2001a3e4 * (x**3) * ((y_3_3)**1) + 
            L0x2001a3e8 * (x**0) * ((y_3_3)**2) + 
            L0x2001a3ec * (x**1) * ((y_3_3)**2) + 
            L0x2001a3f0 * (x**2) * ((y_3_3)**2) + 
            L0x2001a3f4 * (x**3) * ((y_3_3)**2) + 
            L0x2001a3f8 * (x**0) * ((y_3_3)**3) + 
            L0x2001a3fc * (x**1) * ((y_3_3)**3) + 
            L0x2001a400 * (x**2) * ((y_3_3)**3) + 
            L0x2001a404 * (x**3) * ((y_3_3)**3) + 
            L0x2001a408 * (x**0) * ((y_3_3)**4) + 
            L0x2001a40c * (x**1) * ((y_3_3)**4) + 
            L0x2001a410 * (x**2) * ((y_3_3)**4) + 
            L0x2001a414 * (x**3) * ((y_3_3)**4) + 
            L0x2001a418 * (x**0) * ((y_3_3)**5) + 
            L0x2001a41c * (x**1) * ((y_3_3)**5) + 
            L0x2001a420 * (x**2) * ((y_3_3)**5) + 
            L0x2001a424 * (x**3) * ((y_3_3)**5) + 
            L0x2001a428 * (x**0) * ((y_3_3)**6) + 
            L0x2001a42c * (x**1) * ((y_3_3)**6) + 
            L0x2001a430 * (x**2) * ((y_3_3)**6) + 
            L0x2001a434 * (x**3) * ((y_3_3)**6) + 
            L0x2001a438 * (x**0) * ((y_3_3)**7) + 
            L0x2001a43c * (x**1) * ((y_3_3)**7) + 
            L0x2001a440 * (x**2) * ((y_3_3)**7) + 
            L0x2001a444 * (x**3) * ((y_3_3)**7)
          )
          [25570049, x**4 - y_0_27 * 21050541, y_0_27 - 1],
    (* inp_poly_28 *)
    eqmod 8 * (inp_poly_28 * inp_poly_28)
          (
            L0x2001a3c8 * (x**0) * ((y_3_3)**0) + 
            L0x2001a3cc * (x**1) * ((y_3_3)**0) + 
            L0x2001a3d0 * (x**2) * ((y_3_3)**0) + 
            L0x2001a3d4 * (x**3) * ((y_3_3)**0) + 
            L0x2001a3d8 * (x**0) * ((y_3_3)**1) + 
            L0x2001a3dc * (x**1) * ((y_3_3)**1) + 
            L0x2001a3e0 * (x**2) * ((y_3_3)**1) + 
            L0x2001a3e4 * (x**3) * ((y_3_3)**1) + 
            L0x2001a3e8 * (x**0) * ((y_3_3)**2) + 
            L0x2001a3ec * (x**1) * ((y_3_3)**2) + 
            L0x2001a3f0 * (x**2) * ((y_3_3)**2) + 
            L0x2001a3f4 * (x**3) * ((y_3_3)**2) + 
            L0x2001a3f8 * (x**0) * ((y_3_3)**3) + 
            L0x2001a3fc * (x**1) * ((y_3_3)**3) + 
            L0x2001a400 * (x**2) * ((y_3_3)**3) + 
            L0x2001a404 * (x**3) * ((y_3_3)**3) + 
            L0x2001a408 * (x**0) * ((y_3_3)**4) + 
            L0x2001a40c * (x**1) * ((y_3_3)**4) + 
            L0x2001a410 * (x**2) * ((y_3_3)**4) + 
            L0x2001a414 * (x**3) * ((y_3_3)**4) + 
            L0x2001a418 * (x**0) * ((y_3_3)**5) + 
            L0x2001a41c * (x**1) * ((y_3_3)**5) + 
            L0x2001a420 * (x**2) * ((y_3_3)**5) + 
            L0x2001a424 * (x**3) * ((y_3_3)**5) + 
            L0x2001a428 * (x**0) * ((y_3_3)**6) + 
            L0x2001a42c * (x**1) * ((y_3_3)**6) + 
            L0x2001a430 * (x**2) * ((y_3_3)**6) + 
            L0x2001a434 * (x**3) * ((y_3_3)**6) + 
            L0x2001a438 * (x**0) * ((y_3_3)**7) + 
            L0x2001a43c * (x**1) * ((y_3_3)**7) + 
            L0x2001a440 * (x**2) * ((y_3_3)**7) + 
            L0x2001a444 * (x**3) * ((y_3_3)**7)
          )
          [25570049, x**4 - y_0_28 * 1712131, y_0_28 - 1],
    (* inp_poly_29 *)
    eqmod 8 * (inp_poly_29 * inp_poly_29)
          (
            L0x2001a3c8 * (x**0) * ((y_3_3)**0) + 
            L0x2001a3cc * (x**1) * ((y_3_3)**0) + 
            L0x2001a3d0 * (x**2) * ((y_3_3)**0) + 
            L0x2001a3d4 * (x**3) * ((y_3_3)**0) + 
            L0x2001a3d8 * (x**0) * ((y_3_3)**1) + 
            L0x2001a3dc * (x**1) * ((y_3_3)**1) + 
            L0x2001a3e0 * (x**2) * ((y_3_3)**1) + 
            L0x2001a3e4 * (x**3) * ((y_3_3)**1) + 
            L0x2001a3e8 * (x**0) * ((y_3_3)**2) + 
            L0x2001a3ec * (x**1) * ((y_3_3)**2) + 
            L0x2001a3f0 * (x**2) * ((y_3_3)**2) + 
            L0x2001a3f4 * (x**3) * ((y_3_3)**2) + 
            L0x2001a3f8 * (x**0) * ((y_3_3)**3) + 
            L0x2001a3fc * (x**1) * ((y_3_3)**3) + 
            L0x2001a400 * (x**2) * ((y_3_3)**3) + 
            L0x2001a404 * (x**3) * ((y_3_3)**3) + 
            L0x2001a408 * (x**0) * ((y_3_3)**4) + 
            L0x2001a40c * (x**1) * ((y_3_3)**4) + 
            L0x2001a410 * (x**2) * ((y_3_3)**4) + 
            L0x2001a414 * (x**3) * ((y_3_3)**4) + 
            L0x2001a418 * (x**0) * ((y_3_3)**5) + 
            L0x2001a41c * (x**1) * ((y_3_3)**5) + 
            L0x2001a420 * (x**2) * ((y_3_3)**5) + 
            L0x2001a424 * (x**3) * ((y_3_3)**5) + 
            L0x2001a428 * (x**0) * ((y_3_3)**6) + 
            L0x2001a42c * (x**1) * ((y_3_3)**6) + 
            L0x2001a430 * (x**2) * ((y_3_3)**6) + 
            L0x2001a434 * (x**3) * ((y_3_3)**6) + 
            L0x2001a438 * (x**0) * ((y_3_3)**7) + 
            L0x2001a43c * (x**1) * ((y_3_3)**7) + 
            L0x2001a440 * (x**2) * ((y_3_3)**7) + 
            L0x2001a444 * (x**3) * ((y_3_3)**7)
          )
          [25570049, x**4 - y_0_29 * 23857918, y_0_29 - 1],
    (* inp_poly_30 *)
    eqmod 8 * (inp_poly_30 * inp_poly_30)
          (
            L0x2001a3c8 * (x**0) * ((y_3_3)**0) + 
            L0x2001a3cc * (x**1) * ((y_3_3)**0) + 
            L0x2001a3d0 * (x**2) * ((y_3_3)**0) + 
            L0x2001a3d4 * (x**3) * ((y_3_3)**0) + 
            L0x2001a3d8 * (x**0) * ((y_3_3)**1) + 
            L0x2001a3dc * (x**1) * ((y_3_3)**1) + 
            L0x2001a3e0 * (x**2) * ((y_3_3)**1) + 
            L0x2001a3e4 * (x**3) * ((y_3_3)**1) + 
            L0x2001a3e8 * (x**0) * ((y_3_3)**2) + 
            L0x2001a3ec * (x**1) * ((y_3_3)**2) + 
            L0x2001a3f0 * (x**2) * ((y_3_3)**2) + 
            L0x2001a3f4 * (x**3) * ((y_3_3)**2) + 
            L0x2001a3f8 * (x**0) * ((y_3_3)**3) + 
            L0x2001a3fc * (x**1) * ((y_3_3)**3) + 
            L0x2001a400 * (x**2) * ((y_3_3)**3) + 
            L0x2001a404 * (x**3) * ((y_3_3)**3) + 
            L0x2001a408 * (x**0) * ((y_3_3)**4) + 
            L0x2001a40c * (x**1) * ((y_3_3)**4) + 
            L0x2001a410 * (x**2) * ((y_3_3)**4) + 
            L0x2001a414 * (x**3) * ((y_3_3)**4) + 
            L0x2001a418 * (x**0) * ((y_3_3)**5) + 
            L0x2001a41c * (x**1) * ((y_3_3)**5) + 
            L0x2001a420 * (x**2) * ((y_3_3)**5) + 
            L0x2001a424 * (x**3) * ((y_3_3)**5) + 
            L0x2001a428 * (x**0) * ((y_3_3)**6) + 
            L0x2001a42c * (x**1) * ((y_3_3)**6) + 
            L0x2001a430 * (x**2) * ((y_3_3)**6) + 
            L0x2001a434 * (x**3) * ((y_3_3)**6) + 
            L0x2001a438 * (x**0) * ((y_3_3)**7) + 
            L0x2001a43c * (x**1) * ((y_3_3)**7) + 
            L0x2001a440 * (x**2) * ((y_3_3)**7) + 
            L0x2001a444 * (x**3) * ((y_3_3)**7)
          )
          [25570049, x**4 - y_0_30 * 14036261, y_0_30 - 1],
    (* inp_poly_31 *)
    eqmod 8 * (inp_poly_31 * inp_poly_31)
          (
            L0x2001a3c8 * (x**0) * ((y_3_3)**0) + 
            L0x2001a3cc * (x**1) * ((y_3_3)**0) + 
            L0x2001a3d0 * (x**2) * ((y_3_3)**0) + 
            L0x2001a3d4 * (x**3) * ((y_3_3)**0) + 
            L0x2001a3d8 * (x**0) * ((y_3_3)**1) + 
            L0x2001a3dc * (x**1) * ((y_3_3)**1) + 
            L0x2001a3e0 * (x**2) * ((y_3_3)**1) + 
            L0x2001a3e4 * (x**3) * ((y_3_3)**1) + 
            L0x2001a3e8 * (x**0) * ((y_3_3)**2) + 
            L0x2001a3ec * (x**1) * ((y_3_3)**2) + 
            L0x2001a3f0 * (x**2) * ((y_3_3)**2) + 
            L0x2001a3f4 * (x**3) * ((y_3_3)**2) + 
            L0x2001a3f8 * (x**0) * ((y_3_3)**3) + 
            L0x2001a3fc * (x**1) * ((y_3_3)**3) + 
            L0x2001a400 * (x**2) * ((y_3_3)**3) + 
            L0x2001a404 * (x**3) * ((y_3_3)**3) + 
            L0x2001a408 * (x**0) * ((y_3_3)**4) + 
            L0x2001a40c * (x**1) * ((y_3_3)**4) + 
            L0x2001a410 * (x**2) * ((y_3_3)**4) + 
            L0x2001a414 * (x**3) * ((y_3_3)**4) + 
            L0x2001a418 * (x**0) * ((y_3_3)**5) + 
            L0x2001a41c * (x**1) * ((y_3_3)**5) + 
            L0x2001a420 * (x**2) * ((y_3_3)**5) + 
            L0x2001a424 * (x**3) * ((y_3_3)**5) + 
            L0x2001a428 * (x**0) * ((y_3_3)**6) + 
            L0x2001a42c * (x**1) * ((y_3_3)**6) + 
            L0x2001a430 * (x**2) * ((y_3_3)**6) + 
            L0x2001a434 * (x**3) * ((y_3_3)**6) + 
            L0x2001a438 * (x**0) * ((y_3_3)**7) + 
            L0x2001a43c * (x**1) * ((y_3_3)**7) + 
            L0x2001a440 * (x**2) * ((y_3_3)**7) + 
            L0x2001a444 * (x**3) * ((y_3_3)**7)
          )
          [25570049, x**4 - y_0_31 * 11533788, y_0_31 - 1],
    (* inp_poly_32 *)
    eqmod 8 * (inp_poly_32 * inp_poly_32)
          (
            L0x2001a448 * (x**0) * ((y_3_4)**0) + 
            L0x2001a44c * (x**1) * ((y_3_4)**0) + 
            L0x2001a450 * (x**2) * ((y_3_4)**0) + 
            L0x2001a454 * (x**3) * ((y_3_4)**0) + 
            L0x2001a458 * (x**0) * ((y_3_4)**1) + 
            L0x2001a45c * (x**1) * ((y_3_4)**1) + 
            L0x2001a460 * (x**2) * ((y_3_4)**1) + 
            L0x2001a464 * (x**3) * ((y_3_4)**1) + 
            L0x2001a468 * (x**0) * ((y_3_4)**2) + 
            L0x2001a46c * (x**1) * ((y_3_4)**2) + 
            L0x2001a470 * (x**2) * ((y_3_4)**2) + 
            L0x2001a474 * (x**3) * ((y_3_4)**2) + 
            L0x2001a478 * (x**0) * ((y_3_4)**3) + 
            L0x2001a47c * (x**1) * ((y_3_4)**3) + 
            L0x2001a480 * (x**2) * ((y_3_4)**3) + 
            L0x2001a484 * (x**3) * ((y_3_4)**3) + 
            L0x2001a488 * (x**0) * ((y_3_4)**4) + 
            L0x2001a48c * (x**1) * ((y_3_4)**4) + 
            L0x2001a490 * (x**2) * ((y_3_4)**4) + 
            L0x2001a494 * (x**3) * ((y_3_4)**4) + 
            L0x2001a498 * (x**0) * ((y_3_4)**5) + 
            L0x2001a49c * (x**1) * ((y_3_4)**5) + 
            L0x2001a4a0 * (x**2) * ((y_3_4)**5) + 
            L0x2001a4a4 * (x**3) * ((y_3_4)**5) + 
            L0x2001a4a8 * (x**0) * ((y_3_4)**6) + 
            L0x2001a4ac * (x**1) * ((y_3_4)**6) + 
            L0x2001a4b0 * (x**2) * ((y_3_4)**6) + 
            L0x2001a4b4 * (x**3) * ((y_3_4)**6) + 
            L0x2001a4b8 * (x**0) * ((y_3_4)**7) + 
            L0x2001a4bc * (x**1) * ((y_3_4)**7) + 
            L0x2001a4c0 * (x**2) * ((y_3_4)**7) + 
            L0x2001a4c4 * (x**3) * ((y_3_4)**7)
          )
          [25570049, x**4 - y_0_32 * 7847101, y_0_32 - 1],
    (* inp_poly_33 *)
    eqmod 8 * (inp_poly_33 * inp_poly_33)
          (
            L0x2001a448 * (x**0) * ((y_3_4)**0) + 
            L0x2001a44c * (x**1) * ((y_3_4)**0) + 
            L0x2001a450 * (x**2) * ((y_3_4)**0) + 
            L0x2001a454 * (x**3) * ((y_3_4)**0) + 
            L0x2001a458 * (x**0) * ((y_3_4)**1) + 
            L0x2001a45c * (x**1) * ((y_3_4)**1) + 
            L0x2001a460 * (x**2) * ((y_3_4)**1) + 
            L0x2001a464 * (x**3) * ((y_3_4)**1) + 
            L0x2001a468 * (x**0) * ((y_3_4)**2) + 
            L0x2001a46c * (x**1) * ((y_3_4)**2) + 
            L0x2001a470 * (x**2) * ((y_3_4)**2) + 
            L0x2001a474 * (x**3) * ((y_3_4)**2) + 
            L0x2001a478 * (x**0) * ((y_3_4)**3) + 
            L0x2001a47c * (x**1) * ((y_3_4)**3) + 
            L0x2001a480 * (x**2) * ((y_3_4)**3) + 
            L0x2001a484 * (x**3) * ((y_3_4)**3) + 
            L0x2001a488 * (x**0) * ((y_3_4)**4) + 
            L0x2001a48c * (x**1) * ((y_3_4)**4) + 
            L0x2001a490 * (x**2) * ((y_3_4)**4) + 
            L0x2001a494 * (x**3) * ((y_3_4)**4) + 
            L0x2001a498 * (x**0) * ((y_3_4)**5) + 
            L0x2001a49c * (x**1) * ((y_3_4)**5) + 
            L0x2001a4a0 * (x**2) * ((y_3_4)**5) + 
            L0x2001a4a4 * (x**3) * ((y_3_4)**5) + 
            L0x2001a4a8 * (x**0) * ((y_3_4)**6) + 
            L0x2001a4ac * (x**1) * ((y_3_4)**6) + 
            L0x2001a4b0 * (x**2) * ((y_3_4)**6) + 
            L0x2001a4b4 * (x**3) * ((y_3_4)**6) + 
            L0x2001a4b8 * (x**0) * ((y_3_4)**7) + 
            L0x2001a4bc * (x**1) * ((y_3_4)**7) + 
            L0x2001a4c0 * (x**2) * ((y_3_4)**7) + 
            L0x2001a4c4 * (x**3) * ((y_3_4)**7)
          )
          [25570049, x**4 - y_0_33 * 17722948, y_0_33 - 1],
    (* inp_poly_34 *)
    eqmod 8 * (inp_poly_34 * inp_poly_34)
          (
            L0x2001a448 * (x**0) * ((y_3_4)**0) + 
            L0x2001a44c * (x**1) * ((y_3_4)**0) + 
            L0x2001a450 * (x**2) * ((y_3_4)**0) + 
            L0x2001a454 * (x**3) * ((y_3_4)**0) + 
            L0x2001a458 * (x**0) * ((y_3_4)**1) + 
            L0x2001a45c * (x**1) * ((y_3_4)**1) + 
            L0x2001a460 * (x**2) * ((y_3_4)**1) + 
            L0x2001a464 * (x**3) * ((y_3_4)**1) + 
            L0x2001a468 * (x**0) * ((y_3_4)**2) + 
            L0x2001a46c * (x**1) * ((y_3_4)**2) + 
            L0x2001a470 * (x**2) * ((y_3_4)**2) + 
            L0x2001a474 * (x**3) * ((y_3_4)**2) + 
            L0x2001a478 * (x**0) * ((y_3_4)**3) + 
            L0x2001a47c * (x**1) * ((y_3_4)**3) + 
            L0x2001a480 * (x**2) * ((y_3_4)**3) + 
            L0x2001a484 * (x**3) * ((y_3_4)**3) + 
            L0x2001a488 * (x**0) * ((y_3_4)**4) + 
            L0x2001a48c * (x**1) * ((y_3_4)**4) + 
            L0x2001a490 * (x**2) * ((y_3_4)**4) + 
            L0x2001a494 * (x**3) * ((y_3_4)**4) + 
            L0x2001a498 * (x**0) * ((y_3_4)**5) + 
            L0x2001a49c * (x**1) * ((y_3_4)**5) + 
            L0x2001a4a0 * (x**2) * ((y_3_4)**5) + 
            L0x2001a4a4 * (x**3) * ((y_3_4)**5) + 
            L0x2001a4a8 * (x**0) * ((y_3_4)**6) + 
            L0x2001a4ac * (x**1) * ((y_3_4)**6) + 
            L0x2001a4b0 * (x**2) * ((y_3_4)**6) + 
            L0x2001a4b4 * (x**3) * ((y_3_4)**6) + 
            L0x2001a4b8 * (x**0) * ((y_3_4)**7) + 
            L0x2001a4bc * (x**1) * ((y_3_4)**7) + 
            L0x2001a4c0 * (x**2) * ((y_3_4)**7) + 
            L0x2001a4c4 * (x**3) * ((y_3_4)**7)
          )
          [25570049, x**4 - y_0_34 * 19240139, y_0_34 - 1],
    (* inp_poly_35 *)
    eqmod 8 * (inp_poly_35 * inp_poly_35)
          (
            L0x2001a448 * (x**0) * ((y_3_4)**0) + 
            L0x2001a44c * (x**1) * ((y_3_4)**0) + 
            L0x2001a450 * (x**2) * ((y_3_4)**0) + 
            L0x2001a454 * (x**3) * ((y_3_4)**0) + 
            L0x2001a458 * (x**0) * ((y_3_4)**1) + 
            L0x2001a45c * (x**1) * ((y_3_4)**1) + 
            L0x2001a460 * (x**2) * ((y_3_4)**1) + 
            L0x2001a464 * (x**3) * ((y_3_4)**1) + 
            L0x2001a468 * (x**0) * ((y_3_4)**2) + 
            L0x2001a46c * (x**1) * ((y_3_4)**2) + 
            L0x2001a470 * (x**2) * ((y_3_4)**2) + 
            L0x2001a474 * (x**3) * ((y_3_4)**2) + 
            L0x2001a478 * (x**0) * ((y_3_4)**3) + 
            L0x2001a47c * (x**1) * ((y_3_4)**3) + 
            L0x2001a480 * (x**2) * ((y_3_4)**3) + 
            L0x2001a484 * (x**3) * ((y_3_4)**3) + 
            L0x2001a488 * (x**0) * ((y_3_4)**4) + 
            L0x2001a48c * (x**1) * ((y_3_4)**4) + 
            L0x2001a490 * (x**2) * ((y_3_4)**4) + 
            L0x2001a494 * (x**3) * ((y_3_4)**4) + 
            L0x2001a498 * (x**0) * ((y_3_4)**5) + 
            L0x2001a49c * (x**1) * ((y_3_4)**5) + 
            L0x2001a4a0 * (x**2) * ((y_3_4)**5) + 
            L0x2001a4a4 * (x**3) * ((y_3_4)**5) + 
            L0x2001a4a8 * (x**0) * ((y_3_4)**6) + 
            L0x2001a4ac * (x**1) * ((y_3_4)**6) + 
            L0x2001a4b0 * (x**2) * ((y_3_4)**6) + 
            L0x2001a4b4 * (x**3) * ((y_3_4)**6) + 
            L0x2001a4b8 * (x**0) * ((y_3_4)**7) + 
            L0x2001a4bc * (x**1) * ((y_3_4)**7) + 
            L0x2001a4c0 * (x**2) * ((y_3_4)**7) + 
            L0x2001a4c4 * (x**3) * ((y_3_4)**7)
          )
          [25570049, x**4 - y_0_35 * 6329910, y_0_35 - 1],
    (* inp_poly_36 *)
    eqmod 8 * (inp_poly_36 * inp_poly_36)
          (
            L0x2001a448 * (x**0) * ((y_3_4)**0) + 
            L0x2001a44c * (x**1) * ((y_3_4)**0) + 
            L0x2001a450 * (x**2) * ((y_3_4)**0) + 
            L0x2001a454 * (x**3) * ((y_3_4)**0) + 
            L0x2001a458 * (x**0) * ((y_3_4)**1) + 
            L0x2001a45c * (x**1) * ((y_3_4)**1) + 
            L0x2001a460 * (x**2) * ((y_3_4)**1) + 
            L0x2001a464 * (x**3) * ((y_3_4)**1) + 
            L0x2001a468 * (x**0) * ((y_3_4)**2) + 
            L0x2001a46c * (x**1) * ((y_3_4)**2) + 
            L0x2001a470 * (x**2) * ((y_3_4)**2) + 
            L0x2001a474 * (x**3) * ((y_3_4)**2) + 
            L0x2001a478 * (x**0) * ((y_3_4)**3) + 
            L0x2001a47c * (x**1) * ((y_3_4)**3) + 
            L0x2001a480 * (x**2) * ((y_3_4)**3) + 
            L0x2001a484 * (x**3) * ((y_3_4)**3) + 
            L0x2001a488 * (x**0) * ((y_3_4)**4) + 
            L0x2001a48c * (x**1) * ((y_3_4)**4) + 
            L0x2001a490 * (x**2) * ((y_3_4)**4) + 
            L0x2001a494 * (x**3) * ((y_3_4)**4) + 
            L0x2001a498 * (x**0) * ((y_3_4)**5) + 
            L0x2001a49c * (x**1) * ((y_3_4)**5) + 
            L0x2001a4a0 * (x**2) * ((y_3_4)**5) + 
            L0x2001a4a4 * (x**3) * ((y_3_4)**5) + 
            L0x2001a4a8 * (x**0) * ((y_3_4)**6) + 
            L0x2001a4ac * (x**1) * ((y_3_4)**6) + 
            L0x2001a4b0 * (x**2) * ((y_3_4)**6) + 
            L0x2001a4b4 * (x**3) * ((y_3_4)**6) + 
            L0x2001a4b8 * (x**0) * ((y_3_4)**7) + 
            L0x2001a4bc * (x**1) * ((y_3_4)**7) + 
            L0x2001a4c0 * (x**2) * ((y_3_4)**7) + 
            L0x2001a4c4 * (x**3) * ((y_3_4)**7)
          )
          [25570049, x**4 - y_0_36 * 5192558, y_0_36 - 1],
    (* inp_poly_37 *)
    eqmod 8 * (inp_poly_37 * inp_poly_37)
          (
            L0x2001a448 * (x**0) * ((y_3_4)**0) + 
            L0x2001a44c * (x**1) * ((y_3_4)**0) + 
            L0x2001a450 * (x**2) * ((y_3_4)**0) + 
            L0x2001a454 * (x**3) * ((y_3_4)**0) + 
            L0x2001a458 * (x**0) * ((y_3_4)**1) + 
            L0x2001a45c * (x**1) * ((y_3_4)**1) + 
            L0x2001a460 * (x**2) * ((y_3_4)**1) + 
            L0x2001a464 * (x**3) * ((y_3_4)**1) + 
            L0x2001a468 * (x**0) * ((y_3_4)**2) + 
            L0x2001a46c * (x**1) * ((y_3_4)**2) + 
            L0x2001a470 * (x**2) * ((y_3_4)**2) + 
            L0x2001a474 * (x**3) * ((y_3_4)**2) + 
            L0x2001a478 * (x**0) * ((y_3_4)**3) + 
            L0x2001a47c * (x**1) * ((y_3_4)**3) + 
            L0x2001a480 * (x**2) * ((y_3_4)**3) + 
            L0x2001a484 * (x**3) * ((y_3_4)**3) + 
            L0x2001a488 * (x**0) * ((y_3_4)**4) + 
            L0x2001a48c * (x**1) * ((y_3_4)**4) + 
            L0x2001a490 * (x**2) * ((y_3_4)**4) + 
            L0x2001a494 * (x**3) * ((y_3_4)**4) + 
            L0x2001a498 * (x**0) * ((y_3_4)**5) + 
            L0x2001a49c * (x**1) * ((y_3_4)**5) + 
            L0x2001a4a0 * (x**2) * ((y_3_4)**5) + 
            L0x2001a4a4 * (x**3) * ((y_3_4)**5) + 
            L0x2001a4a8 * (x**0) * ((y_3_4)**6) + 
            L0x2001a4ac * (x**1) * ((y_3_4)**6) + 
            L0x2001a4b0 * (x**2) * ((y_3_4)**6) + 
            L0x2001a4b4 * (x**3) * ((y_3_4)**6) + 
            L0x2001a4b8 * (x**0) * ((y_3_4)**7) + 
            L0x2001a4bc * (x**1) * ((y_3_4)**7) + 
            L0x2001a4c0 * (x**2) * ((y_3_4)**7) + 
            L0x2001a4c4 * (x**3) * ((y_3_4)**7)
          )
          [25570049, x**4 - y_0_37 * 20377491, y_0_37 - 1],
    (* inp_poly_38 *)
    eqmod 8 * (inp_poly_38 * inp_poly_38)
          (
            L0x2001a448 * (x**0) * ((y_3_4)**0) + 
            L0x2001a44c * (x**1) * ((y_3_4)**0) + 
            L0x2001a450 * (x**2) * ((y_3_4)**0) + 
            L0x2001a454 * (x**3) * ((y_3_4)**0) + 
            L0x2001a458 * (x**0) * ((y_3_4)**1) + 
            L0x2001a45c * (x**1) * ((y_3_4)**1) + 
            L0x2001a460 * (x**2) * ((y_3_4)**1) + 
            L0x2001a464 * (x**3) * ((y_3_4)**1) + 
            L0x2001a468 * (x**0) * ((y_3_4)**2) + 
            L0x2001a46c * (x**1) * ((y_3_4)**2) + 
            L0x2001a470 * (x**2) * ((y_3_4)**2) + 
            L0x2001a474 * (x**3) * ((y_3_4)**2) + 
            L0x2001a478 * (x**0) * ((y_3_4)**3) + 
            L0x2001a47c * (x**1) * ((y_3_4)**3) + 
            L0x2001a480 * (x**2) * ((y_3_4)**3) + 
            L0x2001a484 * (x**3) * ((y_3_4)**3) + 
            L0x2001a488 * (x**0) * ((y_3_4)**4) + 
            L0x2001a48c * (x**1) * ((y_3_4)**4) + 
            L0x2001a490 * (x**2) * ((y_3_4)**4) + 
            L0x2001a494 * (x**3) * ((y_3_4)**4) + 
            L0x2001a498 * (x**0) * ((y_3_4)**5) + 
            L0x2001a49c * (x**1) * ((y_3_4)**5) + 
            L0x2001a4a0 * (x**2) * ((y_3_4)**5) + 
            L0x2001a4a4 * (x**3) * ((y_3_4)**5) + 
            L0x2001a4a8 * (x**0) * ((y_3_4)**6) + 
            L0x2001a4ac * (x**1) * ((y_3_4)**6) + 
            L0x2001a4b0 * (x**2) * ((y_3_4)**6) + 
            L0x2001a4b4 * (x**3) * ((y_3_4)**6) + 
            L0x2001a4b8 * (x**0) * ((y_3_4)**7) + 
            L0x2001a4bc * (x**1) * ((y_3_4)**7) + 
            L0x2001a4c0 * (x**2) * ((y_3_4)**7) + 
            L0x2001a4c4 * (x**3) * ((y_3_4)**7)
          )
          [25570049, x**4 - y_0_38 * 25163199, y_0_38 - 1],
    (* inp_poly_39 *)
    eqmod 8 * (inp_poly_39 * inp_poly_39)
          (
            L0x2001a448 * (x**0) * ((y_3_4)**0) + 
            L0x2001a44c * (x**1) * ((y_3_4)**0) + 
            L0x2001a450 * (x**2) * ((y_3_4)**0) + 
            L0x2001a454 * (x**3) * ((y_3_4)**0) + 
            L0x2001a458 * (x**0) * ((y_3_4)**1) + 
            L0x2001a45c * (x**1) * ((y_3_4)**1) + 
            L0x2001a460 * (x**2) * ((y_3_4)**1) + 
            L0x2001a464 * (x**3) * ((y_3_4)**1) + 
            L0x2001a468 * (x**0) * ((y_3_4)**2) + 
            L0x2001a46c * (x**1) * ((y_3_4)**2) + 
            L0x2001a470 * (x**2) * ((y_3_4)**2) + 
            L0x2001a474 * (x**3) * ((y_3_4)**2) + 
            L0x2001a478 * (x**0) * ((y_3_4)**3) + 
            L0x2001a47c * (x**1) * ((y_3_4)**3) + 
            L0x2001a480 * (x**2) * ((y_3_4)**3) + 
            L0x2001a484 * (x**3) * ((y_3_4)**3) + 
            L0x2001a488 * (x**0) * ((y_3_4)**4) + 
            L0x2001a48c * (x**1) * ((y_3_4)**4) + 
            L0x2001a490 * (x**2) * ((y_3_4)**4) + 
            L0x2001a494 * (x**3) * ((y_3_4)**4) + 
            L0x2001a498 * (x**0) * ((y_3_4)**5) + 
            L0x2001a49c * (x**1) * ((y_3_4)**5) + 
            L0x2001a4a0 * (x**2) * ((y_3_4)**5) + 
            L0x2001a4a4 * (x**3) * ((y_3_4)**5) + 
            L0x2001a4a8 * (x**0) * ((y_3_4)**6) + 
            L0x2001a4ac * (x**1) * ((y_3_4)**6) + 
            L0x2001a4b0 * (x**2) * ((y_3_4)**6) + 
            L0x2001a4b4 * (x**3) * ((y_3_4)**6) + 
            L0x2001a4b8 * (x**0) * ((y_3_4)**7) + 
            L0x2001a4bc * (x**1) * ((y_3_4)**7) + 
            L0x2001a4c0 * (x**2) * ((y_3_4)**7) + 
            L0x2001a4c4 * (x**3) * ((y_3_4)**7)
          )
          [25570049, x**4 - y_0_39 * 406850, y_0_39 - 1],
    (* inp_poly_40 *)
    eqmod 8 * (inp_poly_40 * inp_poly_40)
          (
            L0x2001a4c8 * (x**0) * ((y_3_5)**0) + 
            L0x2001a4cc * (x**1) * ((y_3_5)**0) + 
            L0x2001a4d0 * (x**2) * ((y_3_5)**0) + 
            L0x2001a4d4 * (x**3) * ((y_3_5)**0) + 
            L0x2001a4d8 * (x**0) * ((y_3_5)**1) + 
            L0x2001a4dc * (x**1) * ((y_3_5)**1) + 
            L0x2001a4e0 * (x**2) * ((y_3_5)**1) + 
            L0x2001a4e4 * (x**3) * ((y_3_5)**1) + 
            L0x2001a4e8 * (x**0) * ((y_3_5)**2) + 
            L0x2001a4ec * (x**1) * ((y_3_5)**2) + 
            L0x2001a4f0 * (x**2) * ((y_3_5)**2) + 
            L0x2001a4f4 * (x**3) * ((y_3_5)**2) + 
            L0x2001a4f8 * (x**0) * ((y_3_5)**3) + 
            L0x2001a4fc * (x**1) * ((y_3_5)**3) + 
            L0x2001a500 * (x**2) * ((y_3_5)**3) + 
            L0x2001a504 * (x**3) * ((y_3_5)**3) + 
            L0x2001a508 * (x**0) * ((y_3_5)**4) + 
            L0x2001a50c * (x**1) * ((y_3_5)**4) + 
            L0x2001a510 * (x**2) * ((y_3_5)**4) + 
            L0x2001a514 * (x**3) * ((y_3_5)**4) + 
            L0x2001a518 * (x**0) * ((y_3_5)**5) + 
            L0x2001a51c * (x**1) * ((y_3_5)**5) + 
            L0x2001a520 * (x**2) * ((y_3_5)**5) + 
            L0x2001a524 * (x**3) * ((y_3_5)**5) + 
            L0x2001a528 * (x**0) * ((y_3_5)**6) + 
            L0x2001a52c * (x**1) * ((y_3_5)**6) + 
            L0x2001a530 * (x**2) * ((y_3_5)**6) + 
            L0x2001a534 * (x**3) * ((y_3_5)**6) + 
            L0x2001a538 * (x**0) * ((y_3_5)**7) + 
            L0x2001a53c * (x**1) * ((y_3_5)**7) + 
            L0x2001a540 * (x**2) * ((y_3_5)**7) + 
            L0x2001a544 * (x**3) * ((y_3_5)**7)
          )
          [25570049, x**4 - y_0_40 * 19921963, y_0_40 - 1],
    (* inp_poly_41 *)
    eqmod 8 * (inp_poly_41 * inp_poly_41)
          (
            L0x2001a4c8 * (x**0) * ((y_3_5)**0) + 
            L0x2001a4cc * (x**1) * ((y_3_5)**0) + 
            L0x2001a4d0 * (x**2) * ((y_3_5)**0) + 
            L0x2001a4d4 * (x**3) * ((y_3_5)**0) + 
            L0x2001a4d8 * (x**0) * ((y_3_5)**1) + 
            L0x2001a4dc * (x**1) * ((y_3_5)**1) + 
            L0x2001a4e0 * (x**2) * ((y_3_5)**1) + 
            L0x2001a4e4 * (x**3) * ((y_3_5)**1) + 
            L0x2001a4e8 * (x**0) * ((y_3_5)**2) + 
            L0x2001a4ec * (x**1) * ((y_3_5)**2) + 
            L0x2001a4f0 * (x**2) * ((y_3_5)**2) + 
            L0x2001a4f4 * (x**3) * ((y_3_5)**2) + 
            L0x2001a4f8 * (x**0) * ((y_3_5)**3) + 
            L0x2001a4fc * (x**1) * ((y_3_5)**3) + 
            L0x2001a500 * (x**2) * ((y_3_5)**3) + 
            L0x2001a504 * (x**3) * ((y_3_5)**3) + 
            L0x2001a508 * (x**0) * ((y_3_5)**4) + 
            L0x2001a50c * (x**1) * ((y_3_5)**4) + 
            L0x2001a510 * (x**2) * ((y_3_5)**4) + 
            L0x2001a514 * (x**3) * ((y_3_5)**4) + 
            L0x2001a518 * (x**0) * ((y_3_5)**5) + 
            L0x2001a51c * (x**1) * ((y_3_5)**5) + 
            L0x2001a520 * (x**2) * ((y_3_5)**5) + 
            L0x2001a524 * (x**3) * ((y_3_5)**5) + 
            L0x2001a528 * (x**0) * ((y_3_5)**6) + 
            L0x2001a52c * (x**1) * ((y_3_5)**6) + 
            L0x2001a530 * (x**2) * ((y_3_5)**6) + 
            L0x2001a534 * (x**3) * ((y_3_5)**6) + 
            L0x2001a538 * (x**0) * ((y_3_5)**7) + 
            L0x2001a53c * (x**1) * ((y_3_5)**7) + 
            L0x2001a540 * (x**2) * ((y_3_5)**7) + 
            L0x2001a544 * (x**3) * ((y_3_5)**7)
          )
          [25570049, x**4 - y_0_41 * 5648086, y_0_41 - 1],
    (* inp_poly_42 *)
    eqmod 8 * (inp_poly_42 * inp_poly_42)
          (
            L0x2001a4c8 * (x**0) * ((y_3_5)**0) + 
            L0x2001a4cc * (x**1) * ((y_3_5)**0) + 
            L0x2001a4d0 * (x**2) * ((y_3_5)**0) + 
            L0x2001a4d4 * (x**3) * ((y_3_5)**0) + 
            L0x2001a4d8 * (x**0) * ((y_3_5)**1) + 
            L0x2001a4dc * (x**1) * ((y_3_5)**1) + 
            L0x2001a4e0 * (x**2) * ((y_3_5)**1) + 
            L0x2001a4e4 * (x**3) * ((y_3_5)**1) + 
            L0x2001a4e8 * (x**0) * ((y_3_5)**2) + 
            L0x2001a4ec * (x**1) * ((y_3_5)**2) + 
            L0x2001a4f0 * (x**2) * ((y_3_5)**2) + 
            L0x2001a4f4 * (x**3) * ((y_3_5)**2) + 
            L0x2001a4f8 * (x**0) * ((y_3_5)**3) + 
            L0x2001a4fc * (x**1) * ((y_3_5)**3) + 
            L0x2001a500 * (x**2) * ((y_3_5)**3) + 
            L0x2001a504 * (x**3) * ((y_3_5)**3) + 
            L0x2001a508 * (x**0) * ((y_3_5)**4) + 
            L0x2001a50c * (x**1) * ((y_3_5)**4) + 
            L0x2001a510 * (x**2) * ((y_3_5)**4) + 
            L0x2001a514 * (x**3) * ((y_3_5)**4) + 
            L0x2001a518 * (x**0) * ((y_3_5)**5) + 
            L0x2001a51c * (x**1) * ((y_3_5)**5) + 
            L0x2001a520 * (x**2) * ((y_3_5)**5) + 
            L0x2001a524 * (x**3) * ((y_3_5)**5) + 
            L0x2001a528 * (x**0) * ((y_3_5)**6) + 
            L0x2001a52c * (x**1) * ((y_3_5)**6) + 
            L0x2001a530 * (x**2) * ((y_3_5)**6) + 
            L0x2001a534 * (x**3) * ((y_3_5)**6) + 
            L0x2001a538 * (x**0) * ((y_3_5)**7) + 
            L0x2001a53c * (x**1) * ((y_3_5)**7) + 
            L0x2001a540 * (x**2) * ((y_3_5)**7) + 
            L0x2001a544 * (x**3) * ((y_3_5)**7)
          )
          [25570049, x**4 - y_0_42 * 6202837, y_0_42 - 1],
    (* inp_poly_43 *)
    eqmod 8 * (inp_poly_43 * inp_poly_43)
          (
            L0x2001a4c8 * (x**0) * ((y_3_5)**0) + 
            L0x2001a4cc * (x**1) * ((y_3_5)**0) + 
            L0x2001a4d0 * (x**2) * ((y_3_5)**0) + 
            L0x2001a4d4 * (x**3) * ((y_3_5)**0) + 
            L0x2001a4d8 * (x**0) * ((y_3_5)**1) + 
            L0x2001a4dc * (x**1) * ((y_3_5)**1) + 
            L0x2001a4e0 * (x**2) * ((y_3_5)**1) + 
            L0x2001a4e4 * (x**3) * ((y_3_5)**1) + 
            L0x2001a4e8 * (x**0) * ((y_3_5)**2) + 
            L0x2001a4ec * (x**1) * ((y_3_5)**2) + 
            L0x2001a4f0 * (x**2) * ((y_3_5)**2) + 
            L0x2001a4f4 * (x**3) * ((y_3_5)**2) + 
            L0x2001a4f8 * (x**0) * ((y_3_5)**3) + 
            L0x2001a4fc * (x**1) * ((y_3_5)**3) + 
            L0x2001a500 * (x**2) * ((y_3_5)**3) + 
            L0x2001a504 * (x**3) * ((y_3_5)**3) + 
            L0x2001a508 * (x**0) * ((y_3_5)**4) + 
            L0x2001a50c * (x**1) * ((y_3_5)**4) + 
            L0x2001a510 * (x**2) * ((y_3_5)**4) + 
            L0x2001a514 * (x**3) * ((y_3_5)**4) + 
            L0x2001a518 * (x**0) * ((y_3_5)**5) + 
            L0x2001a51c * (x**1) * ((y_3_5)**5) + 
            L0x2001a520 * (x**2) * ((y_3_5)**5) + 
            L0x2001a524 * (x**3) * ((y_3_5)**5) + 
            L0x2001a528 * (x**0) * ((y_3_5)**6) + 
            L0x2001a52c * (x**1) * ((y_3_5)**6) + 
            L0x2001a530 * (x**2) * ((y_3_5)**6) + 
            L0x2001a534 * (x**3) * ((y_3_5)**6) + 
            L0x2001a538 * (x**0) * ((y_3_5)**7) + 
            L0x2001a53c * (x**1) * ((y_3_5)**7) + 
            L0x2001a540 * (x**2) * ((y_3_5)**7) + 
            L0x2001a544 * (x**3) * ((y_3_5)**7)
          )
          [25570049, x**4 - y_0_43 * 19367212, y_0_43 - 1],
    (* inp_poly_44 *)
    eqmod 8 * (inp_poly_44 * inp_poly_44)
          (
            L0x2001a4c8 * (x**0) * ((y_3_5)**0) + 
            L0x2001a4cc * (x**1) * ((y_3_5)**0) + 
            L0x2001a4d0 * (x**2) * ((y_3_5)**0) + 
            L0x2001a4d4 * (x**3) * ((y_3_5)**0) + 
            L0x2001a4d8 * (x**0) * ((y_3_5)**1) + 
            L0x2001a4dc * (x**1) * ((y_3_5)**1) + 
            L0x2001a4e0 * (x**2) * ((y_3_5)**1) + 
            L0x2001a4e4 * (x**3) * ((y_3_5)**1) + 
            L0x2001a4e8 * (x**0) * ((y_3_5)**2) + 
            L0x2001a4ec * (x**1) * ((y_3_5)**2) + 
            L0x2001a4f0 * (x**2) * ((y_3_5)**2) + 
            L0x2001a4f4 * (x**3) * ((y_3_5)**2) + 
            L0x2001a4f8 * (x**0) * ((y_3_5)**3) + 
            L0x2001a4fc * (x**1) * ((y_3_5)**3) + 
            L0x2001a500 * (x**2) * ((y_3_5)**3) + 
            L0x2001a504 * (x**3) * ((y_3_5)**3) + 
            L0x2001a508 * (x**0) * ((y_3_5)**4) + 
            L0x2001a50c * (x**1) * ((y_3_5)**4) + 
            L0x2001a510 * (x**2) * ((y_3_5)**4) + 
            L0x2001a514 * (x**3) * ((y_3_5)**4) + 
            L0x2001a518 * (x**0) * ((y_3_5)**5) + 
            L0x2001a51c * (x**1) * ((y_3_5)**5) + 
            L0x2001a520 * (x**2) * ((y_3_5)**5) + 
            L0x2001a524 * (x**3) * ((y_3_5)**5) + 
            L0x2001a528 * (x**0) * ((y_3_5)**6) + 
            L0x2001a52c * (x**1) * ((y_3_5)**6) + 
            L0x2001a530 * (x**2) * ((y_3_5)**6) + 
            L0x2001a534 * (x**3) * ((y_3_5)**6) + 
            L0x2001a538 * (x**0) * ((y_3_5)**7) + 
            L0x2001a53c * (x**1) * ((y_3_5)**7) + 
            L0x2001a540 * (x**2) * ((y_3_5)**7) + 
            L0x2001a544 * (x**3) * ((y_3_5)**7)
          )
          [25570049, x**4 - y_0_44 * 17091305, y_0_44 - 1],
    (* inp_poly_45 *)
    eqmod 8 * (inp_poly_45 * inp_poly_45)
          (
            L0x2001a4c8 * (x**0) * ((y_3_5)**0) + 
            L0x2001a4cc * (x**1) * ((y_3_5)**0) + 
            L0x2001a4d0 * (x**2) * ((y_3_5)**0) + 
            L0x2001a4d4 * (x**3) * ((y_3_5)**0) + 
            L0x2001a4d8 * (x**0) * ((y_3_5)**1) + 
            L0x2001a4dc * (x**1) * ((y_3_5)**1) + 
            L0x2001a4e0 * (x**2) * ((y_3_5)**1) + 
            L0x2001a4e4 * (x**3) * ((y_3_5)**1) + 
            L0x2001a4e8 * (x**0) * ((y_3_5)**2) + 
            L0x2001a4ec * (x**1) * ((y_3_5)**2) + 
            L0x2001a4f0 * (x**2) * ((y_3_5)**2) + 
            L0x2001a4f4 * (x**3) * ((y_3_5)**2) + 
            L0x2001a4f8 * (x**0) * ((y_3_5)**3) + 
            L0x2001a4fc * (x**1) * ((y_3_5)**3) + 
            L0x2001a500 * (x**2) * ((y_3_5)**3) + 
            L0x2001a504 * (x**3) * ((y_3_5)**3) + 
            L0x2001a508 * (x**0) * ((y_3_5)**4) + 
            L0x2001a50c * (x**1) * ((y_3_5)**4) + 
            L0x2001a510 * (x**2) * ((y_3_5)**4) + 
            L0x2001a514 * (x**3) * ((y_3_5)**4) + 
            L0x2001a518 * (x**0) * ((y_3_5)**5) + 
            L0x2001a51c * (x**1) * ((y_3_5)**5) + 
            L0x2001a520 * (x**2) * ((y_3_5)**5) + 
            L0x2001a524 * (x**3) * ((y_3_5)**5) + 
            L0x2001a528 * (x**0) * ((y_3_5)**6) + 
            L0x2001a52c * (x**1) * ((y_3_5)**6) + 
            L0x2001a530 * (x**2) * ((y_3_5)**6) + 
            L0x2001a534 * (x**3) * ((y_3_5)**6) + 
            L0x2001a538 * (x**0) * ((y_3_5)**7) + 
            L0x2001a53c * (x**1) * ((y_3_5)**7) + 
            L0x2001a540 * (x**2) * ((y_3_5)**7) + 
            L0x2001a544 * (x**3) * ((y_3_5)**7)
          )
          [25570049, x**4 - y_0_45 * 8478744, y_0_45 - 1],
    (* inp_poly_46 *)
    eqmod 8 * (inp_poly_46 * inp_poly_46)
          (
            L0x2001a4c8 * (x**0) * ((y_3_5)**0) + 
            L0x2001a4cc * (x**1) * ((y_3_5)**0) + 
            L0x2001a4d0 * (x**2) * ((y_3_5)**0) + 
            L0x2001a4d4 * (x**3) * ((y_3_5)**0) + 
            L0x2001a4d8 * (x**0) * ((y_3_5)**1) + 
            L0x2001a4dc * (x**1) * ((y_3_5)**1) + 
            L0x2001a4e0 * (x**2) * ((y_3_5)**1) + 
            L0x2001a4e4 * (x**3) * ((y_3_5)**1) + 
            L0x2001a4e8 * (x**0) * ((y_3_5)**2) + 
            L0x2001a4ec * (x**1) * ((y_3_5)**2) + 
            L0x2001a4f0 * (x**2) * ((y_3_5)**2) + 
            L0x2001a4f4 * (x**3) * ((y_3_5)**2) + 
            L0x2001a4f8 * (x**0) * ((y_3_5)**3) + 
            L0x2001a4fc * (x**1) * ((y_3_5)**3) + 
            L0x2001a500 * (x**2) * ((y_3_5)**3) + 
            L0x2001a504 * (x**3) * ((y_3_5)**3) + 
            L0x2001a508 * (x**0) * ((y_3_5)**4) + 
            L0x2001a50c * (x**1) * ((y_3_5)**4) + 
            L0x2001a510 * (x**2) * ((y_3_5)**4) + 
            L0x2001a514 * (x**3) * ((y_3_5)**4) + 
            L0x2001a518 * (x**0) * ((y_3_5)**5) + 
            L0x2001a51c * (x**1) * ((y_3_5)**5) + 
            L0x2001a520 * (x**2) * ((y_3_5)**5) + 
            L0x2001a524 * (x**3) * ((y_3_5)**5) + 
            L0x2001a528 * (x**0) * ((y_3_5)**6) + 
            L0x2001a52c * (x**1) * ((y_3_5)**6) + 
            L0x2001a530 * (x**2) * ((y_3_5)**6) + 
            L0x2001a534 * (x**3) * ((y_3_5)**6) + 
            L0x2001a538 * (x**0) * ((y_3_5)**7) + 
            L0x2001a53c * (x**1) * ((y_3_5)**7) + 
            L0x2001a540 * (x**2) * ((y_3_5)**7) + 
            L0x2001a544 * (x**3) * ((y_3_5)**7)
          )
          [25570049, x**4 - y_0_46 * 18298658, y_0_46 - 1],
    (* inp_poly_47 *)
    eqmod 8 * (inp_poly_47 * inp_poly_47)
          (
            L0x2001a4c8 * (x**0) * ((y_3_5)**0) + 
            L0x2001a4cc * (x**1) * ((y_3_5)**0) + 
            L0x2001a4d0 * (x**2) * ((y_3_5)**0) + 
            L0x2001a4d4 * (x**3) * ((y_3_5)**0) + 
            L0x2001a4d8 * (x**0) * ((y_3_5)**1) + 
            L0x2001a4dc * (x**1) * ((y_3_5)**1) + 
            L0x2001a4e0 * (x**2) * ((y_3_5)**1) + 
            L0x2001a4e4 * (x**3) * ((y_3_5)**1) + 
            L0x2001a4e8 * (x**0) * ((y_3_5)**2) + 
            L0x2001a4ec * (x**1) * ((y_3_5)**2) + 
            L0x2001a4f0 * (x**2) * ((y_3_5)**2) + 
            L0x2001a4f4 * (x**3) * ((y_3_5)**2) + 
            L0x2001a4f8 * (x**0) * ((y_3_5)**3) + 
            L0x2001a4fc * (x**1) * ((y_3_5)**3) + 
            L0x2001a500 * (x**2) * ((y_3_5)**3) + 
            L0x2001a504 * (x**3) * ((y_3_5)**3) + 
            L0x2001a508 * (x**0) * ((y_3_5)**4) + 
            L0x2001a50c * (x**1) * ((y_3_5)**4) + 
            L0x2001a510 * (x**2) * ((y_3_5)**4) + 
            L0x2001a514 * (x**3) * ((y_3_5)**4) + 
            L0x2001a518 * (x**0) * ((y_3_5)**5) + 
            L0x2001a51c * (x**1) * ((y_3_5)**5) + 
            L0x2001a520 * (x**2) * ((y_3_5)**5) + 
            L0x2001a524 * (x**3) * ((y_3_5)**5) + 
            L0x2001a528 * (x**0) * ((y_3_5)**6) + 
            L0x2001a52c * (x**1) * ((y_3_5)**6) + 
            L0x2001a530 * (x**2) * ((y_3_5)**6) + 
            L0x2001a534 * (x**3) * ((y_3_5)**6) + 
            L0x2001a538 * (x**0) * ((y_3_5)**7) + 
            L0x2001a53c * (x**1) * ((y_3_5)**7) + 
            L0x2001a540 * (x**2) * ((y_3_5)**7) + 
            L0x2001a544 * (x**3) * ((y_3_5)**7)
          )
          [25570049, x**4 - y_0_47 * 7271391, y_0_47 - 1],
    (* inp_poly_48 *)
    eqmod 8 * (inp_poly_48 * inp_poly_48)
          (
            L0x2001a548 * (x**0) * ((y_3_6)**0) + 
            L0x2001a54c * (x**1) * ((y_3_6)**0) + 
            L0x2001a550 * (x**2) * ((y_3_6)**0) + 
            L0x2001a554 * (x**3) * ((y_3_6)**0) + 
            L0x2001a558 * (x**0) * ((y_3_6)**1) + 
            L0x2001a55c * (x**1) * ((y_3_6)**1) + 
            L0x2001a560 * (x**2) * ((y_3_6)**1) + 
            L0x2001a564 * (x**3) * ((y_3_6)**1) + 
            L0x2001a568 * (x**0) * ((y_3_6)**2) + 
            L0x2001a56c * (x**1) * ((y_3_6)**2) + 
            L0x2001a570 * (x**2) * ((y_3_6)**2) + 
            L0x2001a574 * (x**3) * ((y_3_6)**2) + 
            L0x2001a578 * (x**0) * ((y_3_6)**3) + 
            L0x2001a57c * (x**1) * ((y_3_6)**3) + 
            L0x2001a580 * (x**2) * ((y_3_6)**3) + 
            L0x2001a584 * (x**3) * ((y_3_6)**3) + 
            L0x2001a588 * (x**0) * ((y_3_6)**4) + 
            L0x2001a58c * (x**1) * ((y_3_6)**4) + 
            L0x2001a590 * (x**2) * ((y_3_6)**4) + 
            L0x2001a594 * (x**3) * ((y_3_6)**4) + 
            L0x2001a598 * (x**0) * ((y_3_6)**5) + 
            L0x2001a59c * (x**1) * ((y_3_6)**5) + 
            L0x2001a5a0 * (x**2) * ((y_3_6)**5) + 
            L0x2001a5a4 * (x**3) * ((y_3_6)**5) + 
            L0x2001a5a8 * (x**0) * ((y_3_6)**6) + 
            L0x2001a5ac * (x**1) * ((y_3_6)**6) + 
            L0x2001a5b0 * (x**2) * ((y_3_6)**6) + 
            L0x2001a5b4 * (x**3) * ((y_3_6)**6) + 
            L0x2001a5b8 * (x**0) * ((y_3_6)**7) + 
            L0x2001a5bc * (x**1) * ((y_3_6)**7) + 
            L0x2001a5c0 * (x**2) * ((y_3_6)**7) + 
            L0x2001a5c4 * (x**3) * ((y_3_6)**7)
          )
          [25570049, x**4 - y_0_48 * 17500092, y_0_48 - 1],
    (* inp_poly_49 *)
    eqmod 8 * (inp_poly_49 * inp_poly_49)
          (
            L0x2001a548 * (x**0) * ((y_3_6)**0) + 
            L0x2001a54c * (x**1) * ((y_3_6)**0) + 
            L0x2001a550 * (x**2) * ((y_3_6)**0) + 
            L0x2001a554 * (x**3) * ((y_3_6)**0) + 
            L0x2001a558 * (x**0) * ((y_3_6)**1) + 
            L0x2001a55c * (x**1) * ((y_3_6)**1) + 
            L0x2001a560 * (x**2) * ((y_3_6)**1) + 
            L0x2001a564 * (x**3) * ((y_3_6)**1) + 
            L0x2001a568 * (x**0) * ((y_3_6)**2) + 
            L0x2001a56c * (x**1) * ((y_3_6)**2) + 
            L0x2001a570 * (x**2) * ((y_3_6)**2) + 
            L0x2001a574 * (x**3) * ((y_3_6)**2) + 
            L0x2001a578 * (x**0) * ((y_3_6)**3) + 
            L0x2001a57c * (x**1) * ((y_3_6)**3) + 
            L0x2001a580 * (x**2) * ((y_3_6)**3) + 
            L0x2001a584 * (x**3) * ((y_3_6)**3) + 
            L0x2001a588 * (x**0) * ((y_3_6)**4) + 
            L0x2001a58c * (x**1) * ((y_3_6)**4) + 
            L0x2001a590 * (x**2) * ((y_3_6)**4) + 
            L0x2001a594 * (x**3) * ((y_3_6)**4) + 
            L0x2001a598 * (x**0) * ((y_3_6)**5) + 
            L0x2001a59c * (x**1) * ((y_3_6)**5) + 
            L0x2001a5a0 * (x**2) * ((y_3_6)**5) + 
            L0x2001a5a4 * (x**3) * ((y_3_6)**5) + 
            L0x2001a5a8 * (x**0) * ((y_3_6)**6) + 
            L0x2001a5ac * (x**1) * ((y_3_6)**6) + 
            L0x2001a5b0 * (x**2) * ((y_3_6)**6) + 
            L0x2001a5b4 * (x**3) * ((y_3_6)**6) + 
            L0x2001a5b8 * (x**0) * ((y_3_6)**7) + 
            L0x2001a5bc * (x**1) * ((y_3_6)**7) + 
            L0x2001a5c0 * (x**2) * ((y_3_6)**7) + 
            L0x2001a5c4 * (x**3) * ((y_3_6)**7)
          )
          [25570049, x**4 - y_0_49 * 8069957, y_0_49 - 1],
    (* inp_poly_50 *)
    eqmod 8 * (inp_poly_50 * inp_poly_50)
          (
            L0x2001a548 * (x**0) * ((y_3_6)**0) + 
            L0x2001a54c * (x**1) * ((y_3_6)**0) + 
            L0x2001a550 * (x**2) * ((y_3_6)**0) + 
            L0x2001a554 * (x**3) * ((y_3_6)**0) + 
            L0x2001a558 * (x**0) * ((y_3_6)**1) + 
            L0x2001a55c * (x**1) * ((y_3_6)**1) + 
            L0x2001a560 * (x**2) * ((y_3_6)**1) + 
            L0x2001a564 * (x**3) * ((y_3_6)**1) + 
            L0x2001a568 * (x**0) * ((y_3_6)**2) + 
            L0x2001a56c * (x**1) * ((y_3_6)**2) + 
            L0x2001a570 * (x**2) * ((y_3_6)**2) + 
            L0x2001a574 * (x**3) * ((y_3_6)**2) + 
            L0x2001a578 * (x**0) * ((y_3_6)**3) + 
            L0x2001a57c * (x**1) * ((y_3_6)**3) + 
            L0x2001a580 * (x**2) * ((y_3_6)**3) + 
            L0x2001a584 * (x**3) * ((y_3_6)**3) + 
            L0x2001a588 * (x**0) * ((y_3_6)**4) + 
            L0x2001a58c * (x**1) * ((y_3_6)**4) + 
            L0x2001a590 * (x**2) * ((y_3_6)**4) + 
            L0x2001a594 * (x**3) * ((y_3_6)**4) + 
            L0x2001a598 * (x**0) * ((y_3_6)**5) + 
            L0x2001a59c * (x**1) * ((y_3_6)**5) + 
            L0x2001a5a0 * (x**2) * ((y_3_6)**5) + 
            L0x2001a5a4 * (x**3) * ((y_3_6)**5) + 
            L0x2001a5a8 * (x**0) * ((y_3_6)**6) + 
            L0x2001a5ac * (x**1) * ((y_3_6)**6) + 
            L0x2001a5b0 * (x**2) * ((y_3_6)**6) + 
            L0x2001a5b4 * (x**3) * ((y_3_6)**6) + 
            L0x2001a5b8 * (x**0) * ((y_3_6)**7) + 
            L0x2001a5bc * (x**1) * ((y_3_6)**7) + 
            L0x2001a5c0 * (x**2) * ((y_3_6)**7) + 
            L0x2001a5c4 * (x**3) * ((y_3_6)**7)
          )
          [25570049, x**4 - y_0_50 * 3627172, y_0_50 - 1],
    (* inp_poly_51 *)
    eqmod 8 * (inp_poly_51 * inp_poly_51)
          (
            L0x2001a548 * (x**0) * ((y_3_6)**0) + 
            L0x2001a54c * (x**1) * ((y_3_6)**0) + 
            L0x2001a550 * (x**2) * ((y_3_6)**0) + 
            L0x2001a554 * (x**3) * ((y_3_6)**0) + 
            L0x2001a558 * (x**0) * ((y_3_6)**1) + 
            L0x2001a55c * (x**1) * ((y_3_6)**1) + 
            L0x2001a560 * (x**2) * ((y_3_6)**1) + 
            L0x2001a564 * (x**3) * ((y_3_6)**1) + 
            L0x2001a568 * (x**0) * ((y_3_6)**2) + 
            L0x2001a56c * (x**1) * ((y_3_6)**2) + 
            L0x2001a570 * (x**2) * ((y_3_6)**2) + 
            L0x2001a574 * (x**3) * ((y_3_6)**2) + 
            L0x2001a578 * (x**0) * ((y_3_6)**3) + 
            L0x2001a57c * (x**1) * ((y_3_6)**3) + 
            L0x2001a580 * (x**2) * ((y_3_6)**3) + 
            L0x2001a584 * (x**3) * ((y_3_6)**3) + 
            L0x2001a588 * (x**0) * ((y_3_6)**4) + 
            L0x2001a58c * (x**1) * ((y_3_6)**4) + 
            L0x2001a590 * (x**2) * ((y_3_6)**4) + 
            L0x2001a594 * (x**3) * ((y_3_6)**4) + 
            L0x2001a598 * (x**0) * ((y_3_6)**5) + 
            L0x2001a59c * (x**1) * ((y_3_6)**5) + 
            L0x2001a5a0 * (x**2) * ((y_3_6)**5) + 
            L0x2001a5a4 * (x**3) * ((y_3_6)**5) + 
            L0x2001a5a8 * (x**0) * ((y_3_6)**6) + 
            L0x2001a5ac * (x**1) * ((y_3_6)**6) + 
            L0x2001a5b0 * (x**2) * ((y_3_6)**6) + 
            L0x2001a5b4 * (x**3) * ((y_3_6)**6) + 
            L0x2001a5b8 * (x**0) * ((y_3_6)**7) + 
            L0x2001a5bc * (x**1) * ((y_3_6)**7) + 
            L0x2001a5c0 * (x**2) * ((y_3_6)**7) + 
            L0x2001a5c4 * (x**3) * ((y_3_6)**7)
          )
          [25570049, x**4 - y_0_51 * 21942877, y_0_51 - 1],
    (* inp_poly_52 *)
    eqmod 8 * (inp_poly_52 * inp_poly_52)
          (
            L0x2001a548 * (x**0) * ((y_3_6)**0) + 
            L0x2001a54c * (x**1) * ((y_3_6)**0) + 
            L0x2001a550 * (x**2) * ((y_3_6)**0) + 
            L0x2001a554 * (x**3) * ((y_3_6)**0) + 
            L0x2001a558 * (x**0) * ((y_3_6)**1) + 
            L0x2001a55c * (x**1) * ((y_3_6)**1) + 
            L0x2001a560 * (x**2) * ((y_3_6)**1) + 
            L0x2001a564 * (x**3) * ((y_3_6)**1) + 
            L0x2001a568 * (x**0) * ((y_3_6)**2) + 
            L0x2001a56c * (x**1) * ((y_3_6)**2) + 
            L0x2001a570 * (x**2) * ((y_3_6)**2) + 
            L0x2001a574 * (x**3) * ((y_3_6)**2) + 
            L0x2001a578 * (x**0) * ((y_3_6)**3) + 
            L0x2001a57c * (x**1) * ((y_3_6)**3) + 
            L0x2001a580 * (x**2) * ((y_3_6)**3) + 
            L0x2001a584 * (x**3) * ((y_3_6)**3) + 
            L0x2001a588 * (x**0) * ((y_3_6)**4) + 
            L0x2001a58c * (x**1) * ((y_3_6)**4) + 
            L0x2001a590 * (x**2) * ((y_3_6)**4) + 
            L0x2001a594 * (x**3) * ((y_3_6)**4) + 
            L0x2001a598 * (x**0) * ((y_3_6)**5) + 
            L0x2001a59c * (x**1) * ((y_3_6)**5) + 
            L0x2001a5a0 * (x**2) * ((y_3_6)**5) + 
            L0x2001a5a4 * (x**3) * ((y_3_6)**5) + 
            L0x2001a5a8 * (x**0) * ((y_3_6)**6) + 
            L0x2001a5ac * (x**1) * ((y_3_6)**6) + 
            L0x2001a5b0 * (x**2) * ((y_3_6)**6) + 
            L0x2001a5b4 * (x**3) * ((y_3_6)**6) + 
            L0x2001a5b8 * (x**0) * ((y_3_6)**7) + 
            L0x2001a5bc * (x**1) * ((y_3_6)**7) + 
            L0x2001a5c0 * (x**2) * ((y_3_6)**7) + 
            L0x2001a5c4 * (x**3) * ((y_3_6)**7)
          )
          [25570049, x**4 - y_0_52 * 4002385, y_0_52 - 1],
    (* inp_poly_53 *)
    eqmod 8 * (inp_poly_53 * inp_poly_53)
          (
            L0x2001a548 * (x**0) * ((y_3_6)**0) + 
            L0x2001a54c * (x**1) * ((y_3_6)**0) + 
            L0x2001a550 * (x**2) * ((y_3_6)**0) + 
            L0x2001a554 * (x**3) * ((y_3_6)**0) + 
            L0x2001a558 * (x**0) * ((y_3_6)**1) + 
            L0x2001a55c * (x**1) * ((y_3_6)**1) + 
            L0x2001a560 * (x**2) * ((y_3_6)**1) + 
            L0x2001a564 * (x**3) * ((y_3_6)**1) + 
            L0x2001a568 * (x**0) * ((y_3_6)**2) + 
            L0x2001a56c * (x**1) * ((y_3_6)**2) + 
            L0x2001a570 * (x**2) * ((y_3_6)**2) + 
            L0x2001a574 * (x**3) * ((y_3_6)**2) + 
            L0x2001a578 * (x**0) * ((y_3_6)**3) + 
            L0x2001a57c * (x**1) * ((y_3_6)**3) + 
            L0x2001a580 * (x**2) * ((y_3_6)**3) + 
            L0x2001a584 * (x**3) * ((y_3_6)**3) + 
            L0x2001a588 * (x**0) * ((y_3_6)**4) + 
            L0x2001a58c * (x**1) * ((y_3_6)**4) + 
            L0x2001a590 * (x**2) * ((y_3_6)**4) + 
            L0x2001a594 * (x**3) * ((y_3_6)**4) + 
            L0x2001a598 * (x**0) * ((y_3_6)**5) + 
            L0x2001a59c * (x**1) * ((y_3_6)**5) + 
            L0x2001a5a0 * (x**2) * ((y_3_6)**5) + 
            L0x2001a5a4 * (x**3) * ((y_3_6)**5) + 
            L0x2001a5a8 * (x**0) * ((y_3_6)**6) + 
            L0x2001a5ac * (x**1) * ((y_3_6)**6) + 
            L0x2001a5b0 * (x**2) * ((y_3_6)**6) + 
            L0x2001a5b4 * (x**3) * ((y_3_6)**6) + 
            L0x2001a5b8 * (x**0) * ((y_3_6)**7) + 
            L0x2001a5bc * (x**1) * ((y_3_6)**7) + 
            L0x2001a5c0 * (x**2) * ((y_3_6)**7) + 
            L0x2001a5c4 * (x**3) * ((y_3_6)**7)
          )
          [25570049, x**4 - y_0_53 * 21567664, y_0_53 - 1],
    (* inp_poly_54 *)
    eqmod 8 * (inp_poly_54 * inp_poly_54)
          (
            L0x2001a548 * (x**0) * ((y_3_6)**0) + 
            L0x2001a54c * (x**1) * ((y_3_6)**0) + 
            L0x2001a550 * (x**2) * ((y_3_6)**0) + 
            L0x2001a554 * (x**3) * ((y_3_6)**0) + 
            L0x2001a558 * (x**0) * ((y_3_6)**1) + 
            L0x2001a55c * (x**1) * ((y_3_6)**1) + 
            L0x2001a560 * (x**2) * ((y_3_6)**1) + 
            L0x2001a564 * (x**3) * ((y_3_6)**1) + 
            L0x2001a568 * (x**0) * ((y_3_6)**2) + 
            L0x2001a56c * (x**1) * ((y_3_6)**2) + 
            L0x2001a570 * (x**2) * ((y_3_6)**2) + 
            L0x2001a574 * (x**3) * ((y_3_6)**2) + 
            L0x2001a578 * (x**0) * ((y_3_6)**3) + 
            L0x2001a57c * (x**1) * ((y_3_6)**3) + 
            L0x2001a580 * (x**2) * ((y_3_6)**3) + 
            L0x2001a584 * (x**3) * ((y_3_6)**3) + 
            L0x2001a588 * (x**0) * ((y_3_6)**4) + 
            L0x2001a58c * (x**1) * ((y_3_6)**4) + 
            L0x2001a590 * (x**2) * ((y_3_6)**4) + 
            L0x2001a594 * (x**3) * ((y_3_6)**4) + 
            L0x2001a598 * (x**0) * ((y_3_6)**5) + 
            L0x2001a59c * (x**1) * ((y_3_6)**5) + 
            L0x2001a5a0 * (x**2) * ((y_3_6)**5) + 
            L0x2001a5a4 * (x**3) * ((y_3_6)**5) + 
            L0x2001a5a8 * (x**0) * ((y_3_6)**6) + 
            L0x2001a5ac * (x**1) * ((y_3_6)**6) + 
            L0x2001a5b0 * (x**2) * ((y_3_6)**6) + 
            L0x2001a5b4 * (x**3) * ((y_3_6)**6) + 
            L0x2001a5b8 * (x**0) * ((y_3_6)**7) + 
            L0x2001a5bc * (x**1) * ((y_3_6)**7) + 
            L0x2001a5c0 * (x**2) * ((y_3_6)**7) + 
            L0x2001a5c4 * (x**3) * ((y_3_6)**7)
          )
          [25570049, x**4 - y_0_54 * 9845387, y_0_54 - 1],
    (* inp_poly_55 *)
    eqmod 8 * (inp_poly_55 * inp_poly_55)
          (
            L0x2001a548 * (x**0) * ((y_3_6)**0) + 
            L0x2001a54c * (x**1) * ((y_3_6)**0) + 
            L0x2001a550 * (x**2) * ((y_3_6)**0) + 
            L0x2001a554 * (x**3) * ((y_3_6)**0) + 
            L0x2001a558 * (x**0) * ((y_3_6)**1) + 
            L0x2001a55c * (x**1) * ((y_3_6)**1) + 
            L0x2001a560 * (x**2) * ((y_3_6)**1) + 
            L0x2001a564 * (x**3) * ((y_3_6)**1) + 
            L0x2001a568 * (x**0) * ((y_3_6)**2) + 
            L0x2001a56c * (x**1) * ((y_3_6)**2) + 
            L0x2001a570 * (x**2) * ((y_3_6)**2) + 
            L0x2001a574 * (x**3) * ((y_3_6)**2) + 
            L0x2001a578 * (x**0) * ((y_3_6)**3) + 
            L0x2001a57c * (x**1) * ((y_3_6)**3) + 
            L0x2001a580 * (x**2) * ((y_3_6)**3) + 
            L0x2001a584 * (x**3) * ((y_3_6)**3) + 
            L0x2001a588 * (x**0) * ((y_3_6)**4) + 
            L0x2001a58c * (x**1) * ((y_3_6)**4) + 
            L0x2001a590 * (x**2) * ((y_3_6)**4) + 
            L0x2001a594 * (x**3) * ((y_3_6)**4) + 
            L0x2001a598 * (x**0) * ((y_3_6)**5) + 
            L0x2001a59c * (x**1) * ((y_3_6)**5) + 
            L0x2001a5a0 * (x**2) * ((y_3_6)**5) + 
            L0x2001a5a4 * (x**3) * ((y_3_6)**5) + 
            L0x2001a5a8 * (x**0) * ((y_3_6)**6) + 
            L0x2001a5ac * (x**1) * ((y_3_6)**6) + 
            L0x2001a5b0 * (x**2) * ((y_3_6)**6) + 
            L0x2001a5b4 * (x**3) * ((y_3_6)**6) + 
            L0x2001a5b8 * (x**0) * ((y_3_6)**7) + 
            L0x2001a5bc * (x**1) * ((y_3_6)**7) + 
            L0x2001a5c0 * (x**2) * ((y_3_6)**7) + 
            L0x2001a5c4 * (x**3) * ((y_3_6)**7)
          )
          [25570049, x**4 - y_0_55 * 15724662, y_0_55 - 1],
    (* inp_poly_56 *)
    eqmod 8 * (inp_poly_56 * inp_poly_56)
          (
            L0x2001a5c8 * (x**0) * ((y_3_7)**0) + 
            L0x2001a5cc * (x**1) * ((y_3_7)**0) + 
            L0x2001a5d0 * (x**2) * ((y_3_7)**0) + 
            L0x2001a5d4 * (x**3) * ((y_3_7)**0) + 
            L0x2001a5d8 * (x**0) * ((y_3_7)**1) + 
            L0x2001a5dc * (x**1) * ((y_3_7)**1) + 
            L0x2001a5e0 * (x**2) * ((y_3_7)**1) + 
            L0x2001a5e4 * (x**3) * ((y_3_7)**1) + 
            L0x2001a5e8 * (x**0) * ((y_3_7)**2) + 
            L0x2001a5ec * (x**1) * ((y_3_7)**2) + 
            L0x2001a5f0 * (x**2) * ((y_3_7)**2) + 
            L0x2001a5f4 * (x**3) * ((y_3_7)**2) + 
            L0x2001a5f8 * (x**0) * ((y_3_7)**3) + 
            L0x2001a5fc * (x**1) * ((y_3_7)**3) + 
            L0x2001a600 * (x**2) * ((y_3_7)**3) + 
            L0x2001a604 * (x**3) * ((y_3_7)**3) + 
            L0x2001a608 * (x**0) * ((y_3_7)**4) + 
            L0x2001a60c * (x**1) * ((y_3_7)**4) + 
            L0x2001a610 * (x**2) * ((y_3_7)**4) + 
            L0x2001a614 * (x**3) * ((y_3_7)**4) + 
            L0x2001a618 * (x**0) * ((y_3_7)**5) + 
            L0x2001a61c * (x**1) * ((y_3_7)**5) + 
            L0x2001a620 * (x**2) * ((y_3_7)**5) + 
            L0x2001a624 * (x**3) * ((y_3_7)**5) + 
            L0x2001a628 * (x**0) * ((y_3_7)**6) + 
            L0x2001a62c * (x**1) * ((y_3_7)**6) + 
            L0x2001a630 * (x**2) * ((y_3_7)**6) + 
            L0x2001a634 * (x**3) * ((y_3_7)**6) + 
            L0x2001a638 * (x**0) * ((y_3_7)**7) + 
            L0x2001a63c * (x**1) * ((y_3_7)**7) + 
            L0x2001a640 * (x**2) * ((y_3_7)**7) + 
            L0x2001a644 * (x**3) * ((y_3_7)**7)
          )
          [25570049, x**4 - y_0_56 * 6096206, y_0_56 - 1],
    (* inp_poly_57 *)
    eqmod 8 * (inp_poly_57 * inp_poly_57)
          (
            L0x2001a5c8 * (x**0) * ((y_3_7)**0) + 
            L0x2001a5cc * (x**1) * ((y_3_7)**0) + 
            L0x2001a5d0 * (x**2) * ((y_3_7)**0) + 
            L0x2001a5d4 * (x**3) * ((y_3_7)**0) + 
            L0x2001a5d8 * (x**0) * ((y_3_7)**1) + 
            L0x2001a5dc * (x**1) * ((y_3_7)**1) + 
            L0x2001a5e0 * (x**2) * ((y_3_7)**1) + 
            L0x2001a5e4 * (x**3) * ((y_3_7)**1) + 
            L0x2001a5e8 * (x**0) * ((y_3_7)**2) + 
            L0x2001a5ec * (x**1) * ((y_3_7)**2) + 
            L0x2001a5f0 * (x**2) * ((y_3_7)**2) + 
            L0x2001a5f4 * (x**3) * ((y_3_7)**2) + 
            L0x2001a5f8 * (x**0) * ((y_3_7)**3) + 
            L0x2001a5fc * (x**1) * ((y_3_7)**3) + 
            L0x2001a600 * (x**2) * ((y_3_7)**3) + 
            L0x2001a604 * (x**3) * ((y_3_7)**3) + 
            L0x2001a608 * (x**0) * ((y_3_7)**4) + 
            L0x2001a60c * (x**1) * ((y_3_7)**4) + 
            L0x2001a610 * (x**2) * ((y_3_7)**4) + 
            L0x2001a614 * (x**3) * ((y_3_7)**4) + 
            L0x2001a618 * (x**0) * ((y_3_7)**5) + 
            L0x2001a61c * (x**1) * ((y_3_7)**5) + 
            L0x2001a620 * (x**2) * ((y_3_7)**5) + 
            L0x2001a624 * (x**3) * ((y_3_7)**5) + 
            L0x2001a628 * (x**0) * ((y_3_7)**6) + 
            L0x2001a62c * (x**1) * ((y_3_7)**6) + 
            L0x2001a630 * (x**2) * ((y_3_7)**6) + 
            L0x2001a634 * (x**3) * ((y_3_7)**6) + 
            L0x2001a638 * (x**0) * ((y_3_7)**7) + 
            L0x2001a63c * (x**1) * ((y_3_7)**7) + 
            L0x2001a640 * (x**2) * ((y_3_7)**7) + 
            L0x2001a644 * (x**3) * ((y_3_7)**7)
          )
          [25570049, x**4 - y_0_57 * 19473843, y_0_57 - 1],
    (* inp_poly_58 *)
    eqmod 8 * (inp_poly_58 * inp_poly_58)
          (
            L0x2001a5c8 * (x**0) * ((y_3_7)**0) + 
            L0x2001a5cc * (x**1) * ((y_3_7)**0) + 
            L0x2001a5d0 * (x**2) * ((y_3_7)**0) + 
            L0x2001a5d4 * (x**3) * ((y_3_7)**0) + 
            L0x2001a5d8 * (x**0) * ((y_3_7)**1) + 
            L0x2001a5dc * (x**1) * ((y_3_7)**1) + 
            L0x2001a5e0 * (x**2) * ((y_3_7)**1) + 
            L0x2001a5e4 * (x**3) * ((y_3_7)**1) + 
            L0x2001a5e8 * (x**0) * ((y_3_7)**2) + 
            L0x2001a5ec * (x**1) * ((y_3_7)**2) + 
            L0x2001a5f0 * (x**2) * ((y_3_7)**2) + 
            L0x2001a5f4 * (x**3) * ((y_3_7)**2) + 
            L0x2001a5f8 * (x**0) * ((y_3_7)**3) + 
            L0x2001a5fc * (x**1) * ((y_3_7)**3) + 
            L0x2001a600 * (x**2) * ((y_3_7)**3) + 
            L0x2001a604 * (x**3) * ((y_3_7)**3) + 
            L0x2001a608 * (x**0) * ((y_3_7)**4) + 
            L0x2001a60c * (x**1) * ((y_3_7)**4) + 
            L0x2001a610 * (x**2) * ((y_3_7)**4) + 
            L0x2001a614 * (x**3) * ((y_3_7)**4) + 
            L0x2001a618 * (x**0) * ((y_3_7)**5) + 
            L0x2001a61c * (x**1) * ((y_3_7)**5) + 
            L0x2001a620 * (x**2) * ((y_3_7)**5) + 
            L0x2001a624 * (x**3) * ((y_3_7)**5) + 
            L0x2001a628 * (x**0) * ((y_3_7)**6) + 
            L0x2001a62c * (x**1) * ((y_3_7)**6) + 
            L0x2001a630 * (x**2) * ((y_3_7)**6) + 
            L0x2001a634 * (x**3) * ((y_3_7)**6) + 
            L0x2001a638 * (x**0) * ((y_3_7)**7) + 
            L0x2001a63c * (x**1) * ((y_3_7)**7) + 
            L0x2001a640 * (x**2) * ((y_3_7)**7) + 
            L0x2001a644 * (x**3) * ((y_3_7)**7)
          )
          [25570049, x**4 - y_0_58 * 8645865, y_0_58 - 1],
    (* inp_poly_59 *)
    eqmod 8 * (inp_poly_59 * inp_poly_59)
          (
            L0x2001a5c8 * (x**0) * ((y_3_7)**0) + 
            L0x2001a5cc * (x**1) * ((y_3_7)**0) + 
            L0x2001a5d0 * (x**2) * ((y_3_7)**0) + 
            L0x2001a5d4 * (x**3) * ((y_3_7)**0) + 
            L0x2001a5d8 * (x**0) * ((y_3_7)**1) + 
            L0x2001a5dc * (x**1) * ((y_3_7)**1) + 
            L0x2001a5e0 * (x**2) * ((y_3_7)**1) + 
            L0x2001a5e4 * (x**3) * ((y_3_7)**1) + 
            L0x2001a5e8 * (x**0) * ((y_3_7)**2) + 
            L0x2001a5ec * (x**1) * ((y_3_7)**2) + 
            L0x2001a5f0 * (x**2) * ((y_3_7)**2) + 
            L0x2001a5f4 * (x**3) * ((y_3_7)**2) + 
            L0x2001a5f8 * (x**0) * ((y_3_7)**3) + 
            L0x2001a5fc * (x**1) * ((y_3_7)**3) + 
            L0x2001a600 * (x**2) * ((y_3_7)**3) + 
            L0x2001a604 * (x**3) * ((y_3_7)**3) + 
            L0x2001a608 * (x**0) * ((y_3_7)**4) + 
            L0x2001a60c * (x**1) * ((y_3_7)**4) + 
            L0x2001a610 * (x**2) * ((y_3_7)**4) + 
            L0x2001a614 * (x**3) * ((y_3_7)**4) + 
            L0x2001a618 * (x**0) * ((y_3_7)**5) + 
            L0x2001a61c * (x**1) * ((y_3_7)**5) + 
            L0x2001a620 * (x**2) * ((y_3_7)**5) + 
            L0x2001a624 * (x**3) * ((y_3_7)**5) + 
            L0x2001a628 * (x**0) * ((y_3_7)**6) + 
            L0x2001a62c * (x**1) * ((y_3_7)**6) + 
            L0x2001a630 * (x**2) * ((y_3_7)**6) + 
            L0x2001a634 * (x**3) * ((y_3_7)**6) + 
            L0x2001a638 * (x**0) * ((y_3_7)**7) + 
            L0x2001a63c * (x**1) * ((y_3_7)**7) + 
            L0x2001a640 * (x**2) * ((y_3_7)**7) + 
            L0x2001a644 * (x**3) * ((y_3_7)**7)
          )
          [25570049, x**4 - y_0_59 * 16924184, y_0_59 - 1],
    (* inp_poly_60 *)
    eqmod 8 * (inp_poly_60 * inp_poly_60)
          (
            L0x2001a5c8 * (x**0) * ((y_3_7)**0) + 
            L0x2001a5cc * (x**1) * ((y_3_7)**0) + 
            L0x2001a5d0 * (x**2) * ((y_3_7)**0) + 
            L0x2001a5d4 * (x**3) * ((y_3_7)**0) + 
            L0x2001a5d8 * (x**0) * ((y_3_7)**1) + 
            L0x2001a5dc * (x**1) * ((y_3_7)**1) + 
            L0x2001a5e0 * (x**2) * ((y_3_7)**1) + 
            L0x2001a5e4 * (x**3) * ((y_3_7)**1) + 
            L0x2001a5e8 * (x**0) * ((y_3_7)**2) + 
            L0x2001a5ec * (x**1) * ((y_3_7)**2) + 
            L0x2001a5f0 * (x**2) * ((y_3_7)**2) + 
            L0x2001a5f4 * (x**3) * ((y_3_7)**2) + 
            L0x2001a5f8 * (x**0) * ((y_3_7)**3) + 
            L0x2001a5fc * (x**1) * ((y_3_7)**3) + 
            L0x2001a600 * (x**2) * ((y_3_7)**3) + 
            L0x2001a604 * (x**3) * ((y_3_7)**3) + 
            L0x2001a608 * (x**0) * ((y_3_7)**4) + 
            L0x2001a60c * (x**1) * ((y_3_7)**4) + 
            L0x2001a610 * (x**2) * ((y_3_7)**4) + 
            L0x2001a614 * (x**3) * ((y_3_7)**4) + 
            L0x2001a618 * (x**0) * ((y_3_7)**5) + 
            L0x2001a61c * (x**1) * ((y_3_7)**5) + 
            L0x2001a620 * (x**2) * ((y_3_7)**5) + 
            L0x2001a624 * (x**3) * ((y_3_7)**5) + 
            L0x2001a628 * (x**0) * ((y_3_7)**6) + 
            L0x2001a62c * (x**1) * ((y_3_7)**6) + 
            L0x2001a630 * (x**2) * ((y_3_7)**6) + 
            L0x2001a634 * (x**3) * ((y_3_7)**6) + 
            L0x2001a638 * (x**0) * ((y_3_7)**7) + 
            L0x2001a63c * (x**1) * ((y_3_7)**7) + 
            L0x2001a640 * (x**2) * ((y_3_7)**7) + 
            L0x2001a644 * (x**3) * ((y_3_7)**7)
          )
          [25570049, x**4 - y_0_60 * 18864008, y_0_60 - 1],
    (* inp_poly_61 *)
    eqmod 8 * (inp_poly_61 * inp_poly_61)
          (
            L0x2001a5c8 * (x**0) * ((y_3_7)**0) + 
            L0x2001a5cc * (x**1) * ((y_3_7)**0) + 
            L0x2001a5d0 * (x**2) * ((y_3_7)**0) + 
            L0x2001a5d4 * (x**3) * ((y_3_7)**0) + 
            L0x2001a5d8 * (x**0) * ((y_3_7)**1) + 
            L0x2001a5dc * (x**1) * ((y_3_7)**1) + 
            L0x2001a5e0 * (x**2) * ((y_3_7)**1) + 
            L0x2001a5e4 * (x**3) * ((y_3_7)**1) + 
            L0x2001a5e8 * (x**0) * ((y_3_7)**2) + 
            L0x2001a5ec * (x**1) * ((y_3_7)**2) + 
            L0x2001a5f0 * (x**2) * ((y_3_7)**2) + 
            L0x2001a5f4 * (x**3) * ((y_3_7)**2) + 
            L0x2001a5f8 * (x**0) * ((y_3_7)**3) + 
            L0x2001a5fc * (x**1) * ((y_3_7)**3) + 
            L0x2001a600 * (x**2) * ((y_3_7)**3) + 
            L0x2001a604 * (x**3) * ((y_3_7)**3) + 
            L0x2001a608 * (x**0) * ((y_3_7)**4) + 
            L0x2001a60c * (x**1) * ((y_3_7)**4) + 
            L0x2001a610 * (x**2) * ((y_3_7)**4) + 
            L0x2001a614 * (x**3) * ((y_3_7)**4) + 
            L0x2001a618 * (x**0) * ((y_3_7)**5) + 
            L0x2001a61c * (x**1) * ((y_3_7)**5) + 
            L0x2001a620 * (x**2) * ((y_3_7)**5) + 
            L0x2001a624 * (x**3) * ((y_3_7)**5) + 
            L0x2001a628 * (x**0) * ((y_3_7)**6) + 
            L0x2001a62c * (x**1) * ((y_3_7)**6) + 
            L0x2001a630 * (x**2) * ((y_3_7)**6) + 
            L0x2001a634 * (x**3) * ((y_3_7)**6) + 
            L0x2001a638 * (x**0) * ((y_3_7)**7) + 
            L0x2001a63c * (x**1) * ((y_3_7)**7) + 
            L0x2001a640 * (x**2) * ((y_3_7)**7) + 
            L0x2001a644 * (x**3) * ((y_3_7)**7)
          )
          [25570049, x**4 - y_0_61 * 6706041, y_0_61 - 1],
    (* inp_poly_62 *)
    eqmod 8 * (inp_poly_62 * inp_poly_62)
          (
            L0x2001a5c8 * (x**0) * ((y_3_7)**0) + 
            L0x2001a5cc * (x**1) * ((y_3_7)**0) + 
            L0x2001a5d0 * (x**2) * ((y_3_7)**0) + 
            L0x2001a5d4 * (x**3) * ((y_3_7)**0) + 
            L0x2001a5d8 * (x**0) * ((y_3_7)**1) + 
            L0x2001a5dc * (x**1) * ((y_3_7)**1) + 
            L0x2001a5e0 * (x**2) * ((y_3_7)**1) + 
            L0x2001a5e4 * (x**3) * ((y_3_7)**1) + 
            L0x2001a5e8 * (x**0) * ((y_3_7)**2) + 
            L0x2001a5ec * (x**1) * ((y_3_7)**2) + 
            L0x2001a5f0 * (x**2) * ((y_3_7)**2) + 
            L0x2001a5f4 * (x**3) * ((y_3_7)**2) + 
            L0x2001a5f8 * (x**0) * ((y_3_7)**3) + 
            L0x2001a5fc * (x**1) * ((y_3_7)**3) + 
            L0x2001a600 * (x**2) * ((y_3_7)**3) + 
            L0x2001a604 * (x**3) * ((y_3_7)**3) + 
            L0x2001a608 * (x**0) * ((y_3_7)**4) + 
            L0x2001a60c * (x**1) * ((y_3_7)**4) + 
            L0x2001a610 * (x**2) * ((y_3_7)**4) + 
            L0x2001a614 * (x**3) * ((y_3_7)**4) + 
            L0x2001a618 * (x**0) * ((y_3_7)**5) + 
            L0x2001a61c * (x**1) * ((y_3_7)**5) + 
            L0x2001a620 * (x**2) * ((y_3_7)**5) + 
            L0x2001a624 * (x**3) * ((y_3_7)**5) + 
            L0x2001a628 * (x**0) * ((y_3_7)**6) + 
            L0x2001a62c * (x**1) * ((y_3_7)**6) + 
            L0x2001a630 * (x**2) * ((y_3_7)**6) + 
            L0x2001a634 * (x**3) * ((y_3_7)**6) + 
            L0x2001a638 * (x**0) * ((y_3_7)**7) + 
            L0x2001a63c * (x**1) * ((y_3_7)**7) + 
            L0x2001a640 * (x**2) * ((y_3_7)**7) + 
            L0x2001a644 * (x**3) * ((y_3_7)**7)
          )
          [25570049, x**4 - y_0_62 * 18761234, y_0_62 - 1],
    (* inp_poly_63 *)
    eqmod 8 * (inp_poly_63 * inp_poly_63)
          (
            L0x2001a5c8 * (x**0) * ((y_3_7)**0) + 
            L0x2001a5cc * (x**1) * ((y_3_7)**0) + 
            L0x2001a5d0 * (x**2) * ((y_3_7)**0) + 
            L0x2001a5d4 * (x**3) * ((y_3_7)**0) + 
            L0x2001a5d8 * (x**0) * ((y_3_7)**1) + 
            L0x2001a5dc * (x**1) * ((y_3_7)**1) + 
            L0x2001a5e0 * (x**2) * ((y_3_7)**1) + 
            L0x2001a5e4 * (x**3) * ((y_3_7)**1) + 
            L0x2001a5e8 * (x**0) * ((y_3_7)**2) + 
            L0x2001a5ec * (x**1) * ((y_3_7)**2) + 
            L0x2001a5f0 * (x**2) * ((y_3_7)**2) + 
            L0x2001a5f4 * (x**3) * ((y_3_7)**2) + 
            L0x2001a5f8 * (x**0) * ((y_3_7)**3) + 
            L0x2001a5fc * (x**1) * ((y_3_7)**3) + 
            L0x2001a600 * (x**2) * ((y_3_7)**3) + 
            L0x2001a604 * (x**3) * ((y_3_7)**3) + 
            L0x2001a608 * (x**0) * ((y_3_7)**4) + 
            L0x2001a60c * (x**1) * ((y_3_7)**4) + 
            L0x2001a610 * (x**2) * ((y_3_7)**4) + 
            L0x2001a614 * (x**3) * ((y_3_7)**4) + 
            L0x2001a618 * (x**0) * ((y_3_7)**5) + 
            L0x2001a61c * (x**1) * ((y_3_7)**5) + 
            L0x2001a620 * (x**2) * ((y_3_7)**5) + 
            L0x2001a624 * (x**3) * ((y_3_7)**5) + 
            L0x2001a628 * (x**0) * ((y_3_7)**6) + 
            L0x2001a62c * (x**1) * ((y_3_7)**6) + 
            L0x2001a630 * (x**2) * ((y_3_7)**6) + 
            L0x2001a634 * (x**3) * ((y_3_7)**6) + 
            L0x2001a638 * (x**0) * ((y_3_7)**7) + 
            L0x2001a63c * (x**1) * ((y_3_7)**7) + 
            L0x2001a640 * (x**2) * ((y_3_7)**7) + 
            L0x2001a644 * (x**3) * ((y_3_7)**7)
          )
          [25570049, x**4 - y_0_63 * 6808815, y_0_63 - 1]
  ]
  &&
  (* range *)
  and [
    8@32 * (-25570049)@32 <=s L0x2001a248, L0x2001a248 <s 8@32 * 25570049@32,
    8@32 * (-25570049)@32 <=s L0x2001a24c, L0x2001a24c <s 8@32 * 25570049@32,
    8@32 * (-25570049)@32 <=s L0x2001a250, L0x2001a250 <s 8@32 * 25570049@32,
    8@32 * (-25570049)@32 <=s L0x2001a254, L0x2001a254 <s 8@32 * 25570049@32,
    8@32 * (-25570049)@32 <=s L0x2001a258, L0x2001a258 <s 8@32 * 25570049@32,
    8@32 * (-25570049)@32 <=s L0x2001a25c, L0x2001a25c <s 8@32 * 25570049@32,
    8@32 * (-25570049)@32 <=s L0x2001a260, L0x2001a260 <s 8@32 * 25570049@32,
    8@32 * (-25570049)@32 <=s L0x2001a264, L0x2001a264 <s 8@32 * 25570049@32,
    8@32 * (-25570049)@32 <=s L0x2001a268, L0x2001a268 <s 8@32 * 25570049@32,
    8@32 * (-25570049)@32 <=s L0x2001a26c, L0x2001a26c <s 8@32 * 25570049@32,
    8@32 * (-25570049)@32 <=s L0x2001a270, L0x2001a270 <s 8@32 * 25570049@32,
    8@32 * (-25570049)@32 <=s L0x2001a274, L0x2001a274 <s 8@32 * 25570049@32,
    8@32 * (-25570049)@32 <=s L0x2001a278, L0x2001a278 <s 8@32 * 25570049@32,
    8@32 * (-25570049)@32 <=s L0x2001a27c, L0x2001a27c <s 8@32 * 25570049@32,
    8@32 * (-25570049)@32 <=s L0x2001a280, L0x2001a280 <s 8@32 * 25570049@32,
    8@32 * (-25570049)@32 <=s L0x2001a284, L0x2001a284 <s 8@32 * 25570049@32,
    8@32 * (-25570049)@32 <=s L0x2001a288, L0x2001a288 <s 8@32 * 25570049@32,
    8@32 * (-25570049)@32 <=s L0x2001a28c, L0x2001a28c <s 8@32 * 25570049@32,
    8@32 * (-25570049)@32 <=s L0x2001a290, L0x2001a290 <s 8@32 * 25570049@32,
    8@32 * (-25570049)@32 <=s L0x2001a294, L0x2001a294 <s 8@32 * 25570049@32,
    8@32 * (-25570049)@32 <=s L0x2001a298, L0x2001a298 <s 8@32 * 25570049@32,
    8@32 * (-25570049)@32 <=s L0x2001a29c, L0x2001a29c <s 8@32 * 25570049@32,
    8@32 * (-25570049)@32 <=s L0x2001a2a0, L0x2001a2a0 <s 8@32 * 25570049@32,
    8@32 * (-25570049)@32 <=s L0x2001a2a4, L0x2001a2a4 <s 8@32 * 25570049@32,
    8@32 * (-25570049)@32 <=s L0x2001a2a8, L0x2001a2a8 <s 8@32 * 25570049@32,
    8@32 * (-25570049)@32 <=s L0x2001a2ac, L0x2001a2ac <s 8@32 * 25570049@32,
    8@32 * (-25570049)@32 <=s L0x2001a2b0, L0x2001a2b0 <s 8@32 * 25570049@32,
    8@32 * (-25570049)@32 <=s L0x2001a2b4, L0x2001a2b4 <s 8@32 * 25570049@32,
    8@32 * (-25570049)@32 <=s L0x2001a2b8, L0x2001a2b8 <s 8@32 * 25570049@32,
    8@32 * (-25570049)@32 <=s L0x2001a2bc, L0x2001a2bc <s 8@32 * 25570049@32,
    8@32 * (-25570049)@32 <=s L0x2001a2c0, L0x2001a2c0 <s 8@32 * 25570049@32,
    8@32 * (-25570049)@32 <=s L0x2001a2c4, L0x2001a2c4 <s 8@32 * 25570049@32,
    8@32 * (-25570049)@32 <=s L0x2001a2c8, L0x2001a2c8 <s 8@32 * 25570049@32,
    8@32 * (-25570049)@32 <=s L0x2001a2cc, L0x2001a2cc <s 8@32 * 25570049@32,
    8@32 * (-25570049)@32 <=s L0x2001a2d0, L0x2001a2d0 <s 8@32 * 25570049@32,
    8@32 * (-25570049)@32 <=s L0x2001a2d4, L0x2001a2d4 <s 8@32 * 25570049@32,
    8@32 * (-25570049)@32 <=s L0x2001a2d8, L0x2001a2d8 <s 8@32 * 25570049@32,
    8@32 * (-25570049)@32 <=s L0x2001a2dc, L0x2001a2dc <s 8@32 * 25570049@32,
    8@32 * (-25570049)@32 <=s L0x2001a2e0, L0x2001a2e0 <s 8@32 * 25570049@32,
    8@32 * (-25570049)@32 <=s L0x2001a2e4, L0x2001a2e4 <s 8@32 * 25570049@32,
    8@32 * (-25570049)@32 <=s L0x2001a2e8, L0x2001a2e8 <s 8@32 * 25570049@32,
    8@32 * (-25570049)@32 <=s L0x2001a2ec, L0x2001a2ec <s 8@32 * 25570049@32,
    8@32 * (-25570049)@32 <=s L0x2001a2f0, L0x2001a2f0 <s 8@32 * 25570049@32,
    8@32 * (-25570049)@32 <=s L0x2001a2f4, L0x2001a2f4 <s 8@32 * 25570049@32,
    8@32 * (-25570049)@32 <=s L0x2001a2f8, L0x2001a2f8 <s 8@32 * 25570049@32,
    8@32 * (-25570049)@32 <=s L0x2001a2fc, L0x2001a2fc <s 8@32 * 25570049@32,
    8@32 * (-25570049)@32 <=s L0x2001a300, L0x2001a300 <s 8@32 * 25570049@32,
    8@32 * (-25570049)@32 <=s L0x2001a304, L0x2001a304 <s 8@32 * 25570049@32,
    8@32 * (-25570049)@32 <=s L0x2001a308, L0x2001a308 <s 8@32 * 25570049@32,
    8@32 * (-25570049)@32 <=s L0x2001a30c, L0x2001a30c <s 8@32 * 25570049@32,
    8@32 * (-25570049)@32 <=s L0x2001a310, L0x2001a310 <s 8@32 * 25570049@32,
    8@32 * (-25570049)@32 <=s L0x2001a314, L0x2001a314 <s 8@32 * 25570049@32,
    8@32 * (-25570049)@32 <=s L0x2001a318, L0x2001a318 <s 8@32 * 25570049@32,
    8@32 * (-25570049)@32 <=s L0x2001a31c, L0x2001a31c <s 8@32 * 25570049@32,
    8@32 * (-25570049)@32 <=s L0x2001a320, L0x2001a320 <s 8@32 * 25570049@32,
    8@32 * (-25570049)@32 <=s L0x2001a324, L0x2001a324 <s 8@32 * 25570049@32,
    8@32 * (-25570049)@32 <=s L0x2001a328, L0x2001a328 <s 8@32 * 25570049@32,
    8@32 * (-25570049)@32 <=s L0x2001a32c, L0x2001a32c <s 8@32 * 25570049@32,
    8@32 * (-25570049)@32 <=s L0x2001a330, L0x2001a330 <s 8@32 * 25570049@32,
    8@32 * (-25570049)@32 <=s L0x2001a334, L0x2001a334 <s 8@32 * 25570049@32,
    8@32 * (-25570049)@32 <=s L0x2001a338, L0x2001a338 <s 8@32 * 25570049@32,
    8@32 * (-25570049)@32 <=s L0x2001a33c, L0x2001a33c <s 8@32 * 25570049@32,
    8@32 * (-25570049)@32 <=s L0x2001a340, L0x2001a340 <s 8@32 * 25570049@32,
    8@32 * (-25570049)@32 <=s L0x2001a344, L0x2001a344 <s 8@32 * 25570049@32,
    8@32 * (-25570049)@32 <=s L0x2001a348, L0x2001a348 <s 8@32 * 25570049@32,
    8@32 * (-25570049)@32 <=s L0x2001a34c, L0x2001a34c <s 8@32 * 25570049@32,
    8@32 * (-25570049)@32 <=s L0x2001a350, L0x2001a350 <s 8@32 * 25570049@32,
    8@32 * (-25570049)@32 <=s L0x2001a354, L0x2001a354 <s 8@32 * 25570049@32,
    8@32 * (-25570049)@32 <=s L0x2001a358, L0x2001a358 <s 8@32 * 25570049@32,
    8@32 * (-25570049)@32 <=s L0x2001a35c, L0x2001a35c <s 8@32 * 25570049@32,
    8@32 * (-25570049)@32 <=s L0x2001a360, L0x2001a360 <s 8@32 * 25570049@32,
    8@32 * (-25570049)@32 <=s L0x2001a364, L0x2001a364 <s 8@32 * 25570049@32,
    8@32 * (-25570049)@32 <=s L0x2001a368, L0x2001a368 <s 8@32 * 25570049@32,
    8@32 * (-25570049)@32 <=s L0x2001a36c, L0x2001a36c <s 8@32 * 25570049@32,
    8@32 * (-25570049)@32 <=s L0x2001a370, L0x2001a370 <s 8@32 * 25570049@32,
    8@32 * (-25570049)@32 <=s L0x2001a374, L0x2001a374 <s 8@32 * 25570049@32,
    8@32 * (-25570049)@32 <=s L0x2001a378, L0x2001a378 <s 8@32 * 25570049@32,
    8@32 * (-25570049)@32 <=s L0x2001a37c, L0x2001a37c <s 8@32 * 25570049@32,
    8@32 * (-25570049)@32 <=s L0x2001a380, L0x2001a380 <s 8@32 * 25570049@32,
    8@32 * (-25570049)@32 <=s L0x2001a384, L0x2001a384 <s 8@32 * 25570049@32,
    8@32 * (-25570049)@32 <=s L0x2001a388, L0x2001a388 <s 8@32 * 25570049@32,
    8@32 * (-25570049)@32 <=s L0x2001a38c, L0x2001a38c <s 8@32 * 25570049@32,
    8@32 * (-25570049)@32 <=s L0x2001a390, L0x2001a390 <s 8@32 * 25570049@32,
    8@32 * (-25570049)@32 <=s L0x2001a394, L0x2001a394 <s 8@32 * 25570049@32,
    8@32 * (-25570049)@32 <=s L0x2001a398, L0x2001a398 <s 8@32 * 25570049@32,
    8@32 * (-25570049)@32 <=s L0x2001a39c, L0x2001a39c <s 8@32 * 25570049@32,
    8@32 * (-25570049)@32 <=s L0x2001a3a0, L0x2001a3a0 <s 8@32 * 25570049@32,
    8@32 * (-25570049)@32 <=s L0x2001a3a4, L0x2001a3a4 <s 8@32 * 25570049@32,
    8@32 * (-25570049)@32 <=s L0x2001a3a8, L0x2001a3a8 <s 8@32 * 25570049@32,
    8@32 * (-25570049)@32 <=s L0x2001a3ac, L0x2001a3ac <s 8@32 * 25570049@32,
    8@32 * (-25570049)@32 <=s L0x2001a3b0, L0x2001a3b0 <s 8@32 * 25570049@32,
    8@32 * (-25570049)@32 <=s L0x2001a3b4, L0x2001a3b4 <s 8@32 * 25570049@32,
    8@32 * (-25570049)@32 <=s L0x2001a3b8, L0x2001a3b8 <s 8@32 * 25570049@32,
    8@32 * (-25570049)@32 <=s L0x2001a3bc, L0x2001a3bc <s 8@32 * 25570049@32,
    8@32 * (-25570049)@32 <=s L0x2001a3c0, L0x2001a3c0 <s 8@32 * 25570049@32,
    8@32 * (-25570049)@32 <=s L0x2001a3c4, L0x2001a3c4 <s 8@32 * 25570049@32,
    8@32 * (-25570049)@32 <=s L0x2001a3c8, L0x2001a3c8 <s 8@32 * 25570049@32,
    8@32 * (-25570049)@32 <=s L0x2001a3cc, L0x2001a3cc <s 8@32 * 25570049@32,
    8@32 * (-25570049)@32 <=s L0x2001a3d0, L0x2001a3d0 <s 8@32 * 25570049@32,
    8@32 * (-25570049)@32 <=s L0x2001a3d4, L0x2001a3d4 <s 8@32 * 25570049@32,
    8@32 * (-25570049)@32 <=s L0x2001a3d8, L0x2001a3d8 <s 8@32 * 25570049@32,
    8@32 * (-25570049)@32 <=s L0x2001a3dc, L0x2001a3dc <s 8@32 * 25570049@32,
    8@32 * (-25570049)@32 <=s L0x2001a3e0, L0x2001a3e0 <s 8@32 * 25570049@32,
    8@32 * (-25570049)@32 <=s L0x2001a3e4, L0x2001a3e4 <s 8@32 * 25570049@32,
    8@32 * (-25570049)@32 <=s L0x2001a3e8, L0x2001a3e8 <s 8@32 * 25570049@32,
    8@32 * (-25570049)@32 <=s L0x2001a3ec, L0x2001a3ec <s 8@32 * 25570049@32,
    8@32 * (-25570049)@32 <=s L0x2001a3f0, L0x2001a3f0 <s 8@32 * 25570049@32,
    8@32 * (-25570049)@32 <=s L0x2001a3f4, L0x2001a3f4 <s 8@32 * 25570049@32,
    8@32 * (-25570049)@32 <=s L0x2001a3f8, L0x2001a3f8 <s 8@32 * 25570049@32,
    8@32 * (-25570049)@32 <=s L0x2001a3fc, L0x2001a3fc <s 8@32 * 25570049@32,
    8@32 * (-25570049)@32 <=s L0x2001a400, L0x2001a400 <s 8@32 * 25570049@32,
    8@32 * (-25570049)@32 <=s L0x2001a404, L0x2001a404 <s 8@32 * 25570049@32,
    8@32 * (-25570049)@32 <=s L0x2001a408, L0x2001a408 <s 8@32 * 25570049@32,
    8@32 * (-25570049)@32 <=s L0x2001a40c, L0x2001a40c <s 8@32 * 25570049@32,
    8@32 * (-25570049)@32 <=s L0x2001a410, L0x2001a410 <s 8@32 * 25570049@32,
    8@32 * (-25570049)@32 <=s L0x2001a414, L0x2001a414 <s 8@32 * 25570049@32,
    8@32 * (-25570049)@32 <=s L0x2001a418, L0x2001a418 <s 8@32 * 25570049@32,
    8@32 * (-25570049)@32 <=s L0x2001a41c, L0x2001a41c <s 8@32 * 25570049@32,
    8@32 * (-25570049)@32 <=s L0x2001a420, L0x2001a420 <s 8@32 * 25570049@32,
    8@32 * (-25570049)@32 <=s L0x2001a424, L0x2001a424 <s 8@32 * 25570049@32,
    8@32 * (-25570049)@32 <=s L0x2001a428, L0x2001a428 <s 8@32 * 25570049@32,
    8@32 * (-25570049)@32 <=s L0x2001a42c, L0x2001a42c <s 8@32 * 25570049@32,
    8@32 * (-25570049)@32 <=s L0x2001a430, L0x2001a430 <s 8@32 * 25570049@32,
    8@32 * (-25570049)@32 <=s L0x2001a434, L0x2001a434 <s 8@32 * 25570049@32,
    8@32 * (-25570049)@32 <=s L0x2001a438, L0x2001a438 <s 8@32 * 25570049@32,
    8@32 * (-25570049)@32 <=s L0x2001a43c, L0x2001a43c <s 8@32 * 25570049@32,
    8@32 * (-25570049)@32 <=s L0x2001a440, L0x2001a440 <s 8@32 * 25570049@32,
    8@32 * (-25570049)@32 <=s L0x2001a444, L0x2001a444 <s 8@32 * 25570049@32,
    8@32 * (-25570049)@32 <=s L0x2001a448, L0x2001a448 <s 8@32 * 25570049@32,
    8@32 * (-25570049)@32 <=s L0x2001a44c, L0x2001a44c <s 8@32 * 25570049@32,
    8@32 * (-25570049)@32 <=s L0x2001a450, L0x2001a450 <s 8@32 * 25570049@32,
    8@32 * (-25570049)@32 <=s L0x2001a454, L0x2001a454 <s 8@32 * 25570049@32,
    8@32 * (-25570049)@32 <=s L0x2001a458, L0x2001a458 <s 8@32 * 25570049@32,
    8@32 * (-25570049)@32 <=s L0x2001a45c, L0x2001a45c <s 8@32 * 25570049@32,
    8@32 * (-25570049)@32 <=s L0x2001a460, L0x2001a460 <s 8@32 * 25570049@32,
    8@32 * (-25570049)@32 <=s L0x2001a464, L0x2001a464 <s 8@32 * 25570049@32,
    8@32 * (-25570049)@32 <=s L0x2001a468, L0x2001a468 <s 8@32 * 25570049@32,
    8@32 * (-25570049)@32 <=s L0x2001a46c, L0x2001a46c <s 8@32 * 25570049@32,
    8@32 * (-25570049)@32 <=s L0x2001a470, L0x2001a470 <s 8@32 * 25570049@32,
    8@32 * (-25570049)@32 <=s L0x2001a474, L0x2001a474 <s 8@32 * 25570049@32,
    8@32 * (-25570049)@32 <=s L0x2001a478, L0x2001a478 <s 8@32 * 25570049@32,
    8@32 * (-25570049)@32 <=s L0x2001a47c, L0x2001a47c <s 8@32 * 25570049@32,
    8@32 * (-25570049)@32 <=s L0x2001a480, L0x2001a480 <s 8@32 * 25570049@32,
    8@32 * (-25570049)@32 <=s L0x2001a484, L0x2001a484 <s 8@32 * 25570049@32,
    8@32 * (-25570049)@32 <=s L0x2001a488, L0x2001a488 <s 8@32 * 25570049@32,
    8@32 * (-25570049)@32 <=s L0x2001a48c, L0x2001a48c <s 8@32 * 25570049@32,
    8@32 * (-25570049)@32 <=s L0x2001a490, L0x2001a490 <s 8@32 * 25570049@32,
    8@32 * (-25570049)@32 <=s L0x2001a494, L0x2001a494 <s 8@32 * 25570049@32,
    8@32 * (-25570049)@32 <=s L0x2001a498, L0x2001a498 <s 8@32 * 25570049@32,
    8@32 * (-25570049)@32 <=s L0x2001a49c, L0x2001a49c <s 8@32 * 25570049@32,
    8@32 * (-25570049)@32 <=s L0x2001a4a0, L0x2001a4a0 <s 8@32 * 25570049@32,
    8@32 * (-25570049)@32 <=s L0x2001a4a4, L0x2001a4a4 <s 8@32 * 25570049@32,
    8@32 * (-25570049)@32 <=s L0x2001a4a8, L0x2001a4a8 <s 8@32 * 25570049@32,
    8@32 * (-25570049)@32 <=s L0x2001a4ac, L0x2001a4ac <s 8@32 * 25570049@32,
    8@32 * (-25570049)@32 <=s L0x2001a4b0, L0x2001a4b0 <s 8@32 * 25570049@32,
    8@32 * (-25570049)@32 <=s L0x2001a4b4, L0x2001a4b4 <s 8@32 * 25570049@32,
    8@32 * (-25570049)@32 <=s L0x2001a4b8, L0x2001a4b8 <s 8@32 * 25570049@32,
    8@32 * (-25570049)@32 <=s L0x2001a4bc, L0x2001a4bc <s 8@32 * 25570049@32,
    8@32 * (-25570049)@32 <=s L0x2001a4c0, L0x2001a4c0 <s 8@32 * 25570049@32,
    8@32 * (-25570049)@32 <=s L0x2001a4c4, L0x2001a4c4 <s 8@32 * 25570049@32,
    8@32 * (-25570049)@32 <=s L0x2001a4c8, L0x2001a4c8 <s 8@32 * 25570049@32,
    8@32 * (-25570049)@32 <=s L0x2001a4cc, L0x2001a4cc <s 8@32 * 25570049@32,
    8@32 * (-25570049)@32 <=s L0x2001a4d0, L0x2001a4d0 <s 8@32 * 25570049@32,
    8@32 * (-25570049)@32 <=s L0x2001a4d4, L0x2001a4d4 <s 8@32 * 25570049@32,
    8@32 * (-25570049)@32 <=s L0x2001a4d8, L0x2001a4d8 <s 8@32 * 25570049@32,
    8@32 * (-25570049)@32 <=s L0x2001a4dc, L0x2001a4dc <s 8@32 * 25570049@32,
    8@32 * (-25570049)@32 <=s L0x2001a4e0, L0x2001a4e0 <s 8@32 * 25570049@32,
    8@32 * (-25570049)@32 <=s L0x2001a4e4, L0x2001a4e4 <s 8@32 * 25570049@32,
    8@32 * (-25570049)@32 <=s L0x2001a4e8, L0x2001a4e8 <s 8@32 * 25570049@32,
    8@32 * (-25570049)@32 <=s L0x2001a4ec, L0x2001a4ec <s 8@32 * 25570049@32,
    8@32 * (-25570049)@32 <=s L0x2001a4f0, L0x2001a4f0 <s 8@32 * 25570049@32,
    8@32 * (-25570049)@32 <=s L0x2001a4f4, L0x2001a4f4 <s 8@32 * 25570049@32,
    8@32 * (-25570049)@32 <=s L0x2001a4f8, L0x2001a4f8 <s 8@32 * 25570049@32,
    8@32 * (-25570049)@32 <=s L0x2001a4fc, L0x2001a4fc <s 8@32 * 25570049@32,
    8@32 * (-25570049)@32 <=s L0x2001a500, L0x2001a500 <s 8@32 * 25570049@32,
    8@32 * (-25570049)@32 <=s L0x2001a504, L0x2001a504 <s 8@32 * 25570049@32,
    8@32 * (-25570049)@32 <=s L0x2001a508, L0x2001a508 <s 8@32 * 25570049@32,
    8@32 * (-25570049)@32 <=s L0x2001a50c, L0x2001a50c <s 8@32 * 25570049@32,
    8@32 * (-25570049)@32 <=s L0x2001a510, L0x2001a510 <s 8@32 * 25570049@32,
    8@32 * (-25570049)@32 <=s L0x2001a514, L0x2001a514 <s 8@32 * 25570049@32,
    8@32 * (-25570049)@32 <=s L0x2001a518, L0x2001a518 <s 8@32 * 25570049@32,
    8@32 * (-25570049)@32 <=s L0x2001a51c, L0x2001a51c <s 8@32 * 25570049@32,
    8@32 * (-25570049)@32 <=s L0x2001a520, L0x2001a520 <s 8@32 * 25570049@32,
    8@32 * (-25570049)@32 <=s L0x2001a524, L0x2001a524 <s 8@32 * 25570049@32,
    8@32 * (-25570049)@32 <=s L0x2001a528, L0x2001a528 <s 8@32 * 25570049@32,
    8@32 * (-25570049)@32 <=s L0x2001a52c, L0x2001a52c <s 8@32 * 25570049@32,
    8@32 * (-25570049)@32 <=s L0x2001a530, L0x2001a530 <s 8@32 * 25570049@32,
    8@32 * (-25570049)@32 <=s L0x2001a534, L0x2001a534 <s 8@32 * 25570049@32,
    8@32 * (-25570049)@32 <=s L0x2001a538, L0x2001a538 <s 8@32 * 25570049@32,
    8@32 * (-25570049)@32 <=s L0x2001a53c, L0x2001a53c <s 8@32 * 25570049@32,
    8@32 * (-25570049)@32 <=s L0x2001a540, L0x2001a540 <s 8@32 * 25570049@32,
    8@32 * (-25570049)@32 <=s L0x2001a544, L0x2001a544 <s 8@32 * 25570049@32,
    8@32 * (-25570049)@32 <=s L0x2001a548, L0x2001a548 <s 8@32 * 25570049@32,
    8@32 * (-25570049)@32 <=s L0x2001a54c, L0x2001a54c <s 8@32 * 25570049@32,
    8@32 * (-25570049)@32 <=s L0x2001a550, L0x2001a550 <s 8@32 * 25570049@32,
    8@32 * (-25570049)@32 <=s L0x2001a554, L0x2001a554 <s 8@32 * 25570049@32,
    8@32 * (-25570049)@32 <=s L0x2001a558, L0x2001a558 <s 8@32 * 25570049@32,
    8@32 * (-25570049)@32 <=s L0x2001a55c, L0x2001a55c <s 8@32 * 25570049@32,
    8@32 * (-25570049)@32 <=s L0x2001a560, L0x2001a560 <s 8@32 * 25570049@32,
    8@32 * (-25570049)@32 <=s L0x2001a564, L0x2001a564 <s 8@32 * 25570049@32,
    8@32 * (-25570049)@32 <=s L0x2001a568, L0x2001a568 <s 8@32 * 25570049@32,
    8@32 * (-25570049)@32 <=s L0x2001a56c, L0x2001a56c <s 8@32 * 25570049@32,
    8@32 * (-25570049)@32 <=s L0x2001a570, L0x2001a570 <s 8@32 * 25570049@32,
    8@32 * (-25570049)@32 <=s L0x2001a574, L0x2001a574 <s 8@32 * 25570049@32,
    8@32 * (-25570049)@32 <=s L0x2001a578, L0x2001a578 <s 8@32 * 25570049@32,
    8@32 * (-25570049)@32 <=s L0x2001a57c, L0x2001a57c <s 8@32 * 25570049@32,
    8@32 * (-25570049)@32 <=s L0x2001a580, L0x2001a580 <s 8@32 * 25570049@32,
    8@32 * (-25570049)@32 <=s L0x2001a584, L0x2001a584 <s 8@32 * 25570049@32,
    8@32 * (-25570049)@32 <=s L0x2001a588, L0x2001a588 <s 8@32 * 25570049@32,
    8@32 * (-25570049)@32 <=s L0x2001a58c, L0x2001a58c <s 8@32 * 25570049@32,
    8@32 * (-25570049)@32 <=s L0x2001a590, L0x2001a590 <s 8@32 * 25570049@32,
    8@32 * (-25570049)@32 <=s L0x2001a594, L0x2001a594 <s 8@32 * 25570049@32,
    8@32 * (-25570049)@32 <=s L0x2001a598, L0x2001a598 <s 8@32 * 25570049@32,
    8@32 * (-25570049)@32 <=s L0x2001a59c, L0x2001a59c <s 8@32 * 25570049@32,
    8@32 * (-25570049)@32 <=s L0x2001a5a0, L0x2001a5a0 <s 8@32 * 25570049@32,
    8@32 * (-25570049)@32 <=s L0x2001a5a4, L0x2001a5a4 <s 8@32 * 25570049@32,
    8@32 * (-25570049)@32 <=s L0x2001a5a8, L0x2001a5a8 <s 8@32 * 25570049@32,
    8@32 * (-25570049)@32 <=s L0x2001a5ac, L0x2001a5ac <s 8@32 * 25570049@32,
    8@32 * (-25570049)@32 <=s L0x2001a5b0, L0x2001a5b0 <s 8@32 * 25570049@32,
    8@32 * (-25570049)@32 <=s L0x2001a5b4, L0x2001a5b4 <s 8@32 * 25570049@32,
    8@32 * (-25570049)@32 <=s L0x2001a5b8, L0x2001a5b8 <s 8@32 * 25570049@32,
    8@32 * (-25570049)@32 <=s L0x2001a5bc, L0x2001a5bc <s 8@32 * 25570049@32,
    8@32 * (-25570049)@32 <=s L0x2001a5c0, L0x2001a5c0 <s 8@32 * 25570049@32,
    8@32 * (-25570049)@32 <=s L0x2001a5c4, L0x2001a5c4 <s 8@32 * 25570049@32,
    8@32 * (-25570049)@32 <=s L0x2001a5c8, L0x2001a5c8 <s 8@32 * 25570049@32,
    8@32 * (-25570049)@32 <=s L0x2001a5cc, L0x2001a5cc <s 8@32 * 25570049@32,
    8@32 * (-25570049)@32 <=s L0x2001a5d0, L0x2001a5d0 <s 8@32 * 25570049@32,
    8@32 * (-25570049)@32 <=s L0x2001a5d4, L0x2001a5d4 <s 8@32 * 25570049@32,
    8@32 * (-25570049)@32 <=s L0x2001a5d8, L0x2001a5d8 <s 8@32 * 25570049@32,
    8@32 * (-25570049)@32 <=s L0x2001a5dc, L0x2001a5dc <s 8@32 * 25570049@32,
    8@32 * (-25570049)@32 <=s L0x2001a5e0, L0x2001a5e0 <s 8@32 * 25570049@32,
    8@32 * (-25570049)@32 <=s L0x2001a5e4, L0x2001a5e4 <s 8@32 * 25570049@32,
    8@32 * (-25570049)@32 <=s L0x2001a5e8, L0x2001a5e8 <s 8@32 * 25570049@32,
    8@32 * (-25570049)@32 <=s L0x2001a5ec, L0x2001a5ec <s 8@32 * 25570049@32,
    8@32 * (-25570049)@32 <=s L0x2001a5f0, L0x2001a5f0 <s 8@32 * 25570049@32,
    8@32 * (-25570049)@32 <=s L0x2001a5f4, L0x2001a5f4 <s 8@32 * 25570049@32,
    8@32 * (-25570049)@32 <=s L0x2001a5f8, L0x2001a5f8 <s 8@32 * 25570049@32,
    8@32 * (-25570049)@32 <=s L0x2001a5fc, L0x2001a5fc <s 8@32 * 25570049@32,
    8@32 * (-25570049)@32 <=s L0x2001a600, L0x2001a600 <s 8@32 * 25570049@32,
    8@32 * (-25570049)@32 <=s L0x2001a604, L0x2001a604 <s 8@32 * 25570049@32,
    8@32 * (-25570049)@32 <=s L0x2001a608, L0x2001a608 <s 8@32 * 25570049@32,
    8@32 * (-25570049)@32 <=s L0x2001a60c, L0x2001a60c <s 8@32 * 25570049@32,
    8@32 * (-25570049)@32 <=s L0x2001a610, L0x2001a610 <s 8@32 * 25570049@32,
    8@32 * (-25570049)@32 <=s L0x2001a614, L0x2001a614 <s 8@32 * 25570049@32,
    8@32 * (-25570049)@32 <=s L0x2001a618, L0x2001a618 <s 8@32 * 25570049@32,
    8@32 * (-25570049)@32 <=s L0x2001a61c, L0x2001a61c <s 8@32 * 25570049@32,
    8@32 * (-25570049)@32 <=s L0x2001a620, L0x2001a620 <s 8@32 * 25570049@32,
    8@32 * (-25570049)@32 <=s L0x2001a624, L0x2001a624 <s 8@32 * 25570049@32,
    8@32 * (-25570049)@32 <=s L0x2001a628, L0x2001a628 <s 8@32 * 25570049@32,
    8@32 * (-25570049)@32 <=s L0x2001a62c, L0x2001a62c <s 8@32 * 25570049@32,
    8@32 * (-25570049)@32 <=s L0x2001a630, L0x2001a630 <s 8@32 * 25570049@32,
    8@32 * (-25570049)@32 <=s L0x2001a634, L0x2001a634 <s 8@32 * 25570049@32,
    8@32 * (-25570049)@32 <=s L0x2001a638, L0x2001a638 <s 8@32 * 25570049@32,
    8@32 * (-25570049)@32 <=s L0x2001a63c, L0x2001a63c <s 8@32 * 25570049@32,
    8@32 * (-25570049)@32 <=s L0x2001a640, L0x2001a640 <s 8@32 * 25570049@32,
    8@32 * (-25570049)@32 <=s L0x2001a644, L0x2001a644 <s 8@32 * 25570049@32
  ]
;

(* split the algebraic conditions into 8 slices *)
cut (* 1 *)
  true && true;

(* slice 0 *)
cut (* 2 *)
  and [
    (* inp_poly_0 *)
    eqmod 8 * (inp_poly_0 * inp_poly_0)
          (
            L0x2001a248 * (x**0) * ((y_3_0)**0) + 
            L0x2001a24c * (x**1) * ((y_3_0)**0) + 
            L0x2001a250 * (x**2) * ((y_3_0)**0) + 
            L0x2001a254 * (x**3) * ((y_3_0)**0) + 
            L0x2001a258 * (x**0) * ((y_3_0)**1) + 
            L0x2001a25c * (x**1) * ((y_3_0)**1) + 
            L0x2001a260 * (x**2) * ((y_3_0)**1) + 
            L0x2001a264 * (x**3) * ((y_3_0)**1) + 
            L0x2001a268 * (x**0) * ((y_3_0)**2) + 
            L0x2001a26c * (x**1) * ((y_3_0)**2) + 
            L0x2001a270 * (x**2) * ((y_3_0)**2) + 
            L0x2001a274 * (x**3) * ((y_3_0)**2) + 
            L0x2001a278 * (x**0) * ((y_3_0)**3) + 
            L0x2001a27c * (x**1) * ((y_3_0)**3) + 
            L0x2001a280 * (x**2) * ((y_3_0)**3) + 
            L0x2001a284 * (x**3) * ((y_3_0)**3) + 
            L0x2001a288 * (x**0) * ((y_3_0)**4) + 
            L0x2001a28c * (x**1) * ((y_3_0)**4) + 
            L0x2001a290 * (x**2) * ((y_3_0)**4) + 
            L0x2001a294 * (x**3) * ((y_3_0)**4) + 
            L0x2001a298 * (x**0) * ((y_3_0)**5) + 
            L0x2001a29c * (x**1) * ((y_3_0)**5) + 
            L0x2001a2a0 * (x**2) * ((y_3_0)**5) + 
            L0x2001a2a4 * (x**3) * ((y_3_0)**5) + 
            L0x2001a2a8 * (x**0) * ((y_3_0)**6) + 
            L0x2001a2ac * (x**1) * ((y_3_0)**6) + 
            L0x2001a2b0 * (x**2) * ((y_3_0)**6) + 
            L0x2001a2b4 * (x**3) * ((y_3_0)**6) + 
            L0x2001a2b8 * (x**0) * ((y_3_0)**7) + 
            L0x2001a2bc * (x**1) * ((y_3_0)**7) + 
            L0x2001a2c0 * (x**2) * ((y_3_0)**7) + 
            L0x2001a2c4 * (x**3) * ((y_3_0)**7)
          )
          [25570049, x**4 - y_0_00 * 6103972, y_0_00 - 1],
    (* inp_poly_1 *)
    eqmod 8 * (inp_poly_1 * inp_poly_1)
          (
            L0x2001a248 * (x**0) * ((y_3_0)**0) + 
            L0x2001a24c * (x**1) * ((y_3_0)**0) + 
            L0x2001a250 * (x**2) * ((y_3_0)**0) + 
            L0x2001a254 * (x**3) * ((y_3_0)**0) + 
            L0x2001a258 * (x**0) * ((y_3_0)**1) + 
            L0x2001a25c * (x**1) * ((y_3_0)**1) + 
            L0x2001a260 * (x**2) * ((y_3_0)**1) + 
            L0x2001a264 * (x**3) * ((y_3_0)**1) + 
            L0x2001a268 * (x**0) * ((y_3_0)**2) + 
            L0x2001a26c * (x**1) * ((y_3_0)**2) + 
            L0x2001a270 * (x**2) * ((y_3_0)**2) + 
            L0x2001a274 * (x**3) * ((y_3_0)**2) + 
            L0x2001a278 * (x**0) * ((y_3_0)**3) + 
            L0x2001a27c * (x**1) * ((y_3_0)**3) + 
            L0x2001a280 * (x**2) * ((y_3_0)**3) + 
            L0x2001a284 * (x**3) * ((y_3_0)**3) + 
            L0x2001a288 * (x**0) * ((y_3_0)**4) + 
            L0x2001a28c * (x**1) * ((y_3_0)**4) + 
            L0x2001a290 * (x**2) * ((y_3_0)**4) + 
            L0x2001a294 * (x**3) * ((y_3_0)**4) + 
            L0x2001a298 * (x**0) * ((y_3_0)**5) + 
            L0x2001a29c * (x**1) * ((y_3_0)**5) + 
            L0x2001a2a0 * (x**2) * ((y_3_0)**5) + 
            L0x2001a2a4 * (x**3) * ((y_3_0)**5) + 
            L0x2001a2a8 * (x**0) * ((y_3_0)**6) + 
            L0x2001a2ac * (x**1) * ((y_3_0)**6) + 
            L0x2001a2b0 * (x**2) * ((y_3_0)**6) + 
            L0x2001a2b4 * (x**3) * ((y_3_0)**6) + 
            L0x2001a2b8 * (x**0) * ((y_3_0)**7) + 
            L0x2001a2bc * (x**1) * ((y_3_0)**7) + 
            L0x2001a2c0 * (x**2) * ((y_3_0)**7) + 
            L0x2001a2c4 * (x**3) * ((y_3_0)**7)
          )
          [25570049, x**4 - y_0_01 * 19466077, y_0_01 - 1],
    (* inp_poly_2 *)
    eqmod 8 * (inp_poly_2 * inp_poly_2)
          (
            L0x2001a248 * (x**0) * ((y_3_0)**0) + 
            L0x2001a24c * (x**1) * ((y_3_0)**0) + 
            L0x2001a250 * (x**2) * ((y_3_0)**0) + 
            L0x2001a254 * (x**3) * ((y_3_0)**0) + 
            L0x2001a258 * (x**0) * ((y_3_0)**1) + 
            L0x2001a25c * (x**1) * ((y_3_0)**1) + 
            L0x2001a260 * (x**2) * ((y_3_0)**1) + 
            L0x2001a264 * (x**3) * ((y_3_0)**1) + 
            L0x2001a268 * (x**0) * ((y_3_0)**2) + 
            L0x2001a26c * (x**1) * ((y_3_0)**2) + 
            L0x2001a270 * (x**2) * ((y_3_0)**2) + 
            L0x2001a274 * (x**3) * ((y_3_0)**2) + 
            L0x2001a278 * (x**0) * ((y_3_0)**3) + 
            L0x2001a27c * (x**1) * ((y_3_0)**3) + 
            L0x2001a280 * (x**2) * ((y_3_0)**3) + 
            L0x2001a284 * (x**3) * ((y_3_0)**3) + 
            L0x2001a288 * (x**0) * ((y_3_0)**4) + 
            L0x2001a28c * (x**1) * ((y_3_0)**4) + 
            L0x2001a290 * (x**2) * ((y_3_0)**4) + 
            L0x2001a294 * (x**3) * ((y_3_0)**4) + 
            L0x2001a298 * (x**0) * ((y_3_0)**5) + 
            L0x2001a29c * (x**1) * ((y_3_0)**5) + 
            L0x2001a2a0 * (x**2) * ((y_3_0)**5) + 
            L0x2001a2a4 * (x**3) * ((y_3_0)**5) + 
            L0x2001a2a8 * (x**0) * ((y_3_0)**6) + 
            L0x2001a2ac * (x**1) * ((y_3_0)**6) + 
            L0x2001a2b0 * (x**2) * ((y_3_0)**6) + 
            L0x2001a2b4 * (x**3) * ((y_3_0)**6) + 
            L0x2001a2b8 * (x**0) * ((y_3_0)**7) + 
            L0x2001a2bc * (x**1) * ((y_3_0)**7) + 
            L0x2001a2c0 * (x**2) * ((y_3_0)**7) + 
            L0x2001a2c4 * (x**3) * ((y_3_0)**7)
          )
          [25570049, x**4 - y_0_02 * 830930, y_0_02 - 1],
    (* inp_poly_3 *)
    eqmod 8 * (inp_poly_3 * inp_poly_3)
          (
            L0x2001a248 * (x**0) * ((y_3_0)**0) + 
            L0x2001a24c * (x**1) * ((y_3_0)**0) + 
            L0x2001a250 * (x**2) * ((y_3_0)**0) + 
            L0x2001a254 * (x**3) * ((y_3_0)**0) + 
            L0x2001a258 * (x**0) * ((y_3_0)**1) + 
            L0x2001a25c * (x**1) * ((y_3_0)**1) + 
            L0x2001a260 * (x**2) * ((y_3_0)**1) + 
            L0x2001a264 * (x**3) * ((y_3_0)**1) + 
            L0x2001a268 * (x**0) * ((y_3_0)**2) + 
            L0x2001a26c * (x**1) * ((y_3_0)**2) + 
            L0x2001a270 * (x**2) * ((y_3_0)**2) + 
            L0x2001a274 * (x**3) * ((y_3_0)**2) + 
            L0x2001a278 * (x**0) * ((y_3_0)**3) + 
            L0x2001a27c * (x**1) * ((y_3_0)**3) + 
            L0x2001a280 * (x**2) * ((y_3_0)**3) + 
            L0x2001a284 * (x**3) * ((y_3_0)**3) + 
            L0x2001a288 * (x**0) * ((y_3_0)**4) + 
            L0x2001a28c * (x**1) * ((y_3_0)**4) + 
            L0x2001a290 * (x**2) * ((y_3_0)**4) + 
            L0x2001a294 * (x**3) * ((y_3_0)**4) + 
            L0x2001a298 * (x**0) * ((y_3_0)**5) + 
            L0x2001a29c * (x**1) * ((y_3_0)**5) + 
            L0x2001a2a0 * (x**2) * ((y_3_0)**5) + 
            L0x2001a2a4 * (x**3) * ((y_3_0)**5) + 
            L0x2001a2a8 * (x**0) * ((y_3_0)**6) + 
            L0x2001a2ac * (x**1) * ((y_3_0)**6) + 
            L0x2001a2b0 * (x**2) * ((y_3_0)**6) + 
            L0x2001a2b4 * (x**3) * ((y_3_0)**6) + 
            L0x2001a2b8 * (x**0) * ((y_3_0)**7) + 
            L0x2001a2bc * (x**1) * ((y_3_0)**7) + 
            L0x2001a2c0 * (x**2) * ((y_3_0)**7) + 
            L0x2001a2c4 * (x**3) * ((y_3_0)**7)
          )
          [25570049, x**4 - y_0_03 * 24739119, y_0_03 - 1],
    (* inp_poly_4 *)
    eqmod 8 * (inp_poly_4 * inp_poly_4)
          (
            L0x2001a248 * (x**0) * ((y_3_0)**0) + 
            L0x2001a24c * (x**1) * ((y_3_0)**0) + 
            L0x2001a250 * (x**2) * ((y_3_0)**0) + 
            L0x2001a254 * (x**3) * ((y_3_0)**0) + 
            L0x2001a258 * (x**0) * ((y_3_0)**1) + 
            L0x2001a25c * (x**1) * ((y_3_0)**1) + 
            L0x2001a260 * (x**2) * ((y_3_0)**1) + 
            L0x2001a264 * (x**3) * ((y_3_0)**1) + 
            L0x2001a268 * (x**0) * ((y_3_0)**2) + 
            L0x2001a26c * (x**1) * ((y_3_0)**2) + 
            L0x2001a270 * (x**2) * ((y_3_0)**2) + 
            L0x2001a274 * (x**3) * ((y_3_0)**2) + 
            L0x2001a278 * (x**0) * ((y_3_0)**3) + 
            L0x2001a27c * (x**1) * ((y_3_0)**3) + 
            L0x2001a280 * (x**2) * ((y_3_0)**3) + 
            L0x2001a284 * (x**3) * ((y_3_0)**3) + 
            L0x2001a288 * (x**0) * ((y_3_0)**4) + 
            L0x2001a28c * (x**1) * ((y_3_0)**4) + 
            L0x2001a290 * (x**2) * ((y_3_0)**4) + 
            L0x2001a294 * (x**3) * ((y_3_0)**4) + 
            L0x2001a298 * (x**0) * ((y_3_0)**5) + 
            L0x2001a29c * (x**1) * ((y_3_0)**5) + 
            L0x2001a2a0 * (x**2) * ((y_3_0)**5) + 
            L0x2001a2a4 * (x**3) * ((y_3_0)**5) + 
            L0x2001a2a8 * (x**0) * ((y_3_0)**6) + 
            L0x2001a2ac * (x**1) * ((y_3_0)**6) + 
            L0x2001a2b0 * (x**2) * ((y_3_0)**6) + 
            L0x2001a2b4 * (x**3) * ((y_3_0)**6) + 
            L0x2001a2b8 * (x**0) * ((y_3_0)**7) + 
            L0x2001a2bc * (x**1) * ((y_3_0)**7) + 
            L0x2001a2c0 * (x**2) * ((y_3_0)**7) + 
            L0x2001a2c4 * (x**3) * ((y_3_0)**7)
          )
          [25570049, x**4 - y_0_04 * 678652, y_0_04 - 1],
    (* inp_poly_5 *)
    eqmod 8 * (inp_poly_5 * inp_poly_5)
          (
            L0x2001a248 * (x**0) * ((y_3_0)**0) + 
            L0x2001a24c * (x**1) * ((y_3_0)**0) + 
            L0x2001a250 * (x**2) * ((y_3_0)**0) + 
            L0x2001a254 * (x**3) * ((y_3_0)**0) + 
            L0x2001a258 * (x**0) * ((y_3_0)**1) + 
            L0x2001a25c * (x**1) * ((y_3_0)**1) + 
            L0x2001a260 * (x**2) * ((y_3_0)**1) + 
            L0x2001a264 * (x**3) * ((y_3_0)**1) + 
            L0x2001a268 * (x**0) * ((y_3_0)**2) + 
            L0x2001a26c * (x**1) * ((y_3_0)**2) + 
            L0x2001a270 * (x**2) * ((y_3_0)**2) + 
            L0x2001a274 * (x**3) * ((y_3_0)**2) + 
            L0x2001a278 * (x**0) * ((y_3_0)**3) + 
            L0x2001a27c * (x**1) * ((y_3_0)**3) + 
            L0x2001a280 * (x**2) * ((y_3_0)**3) + 
            L0x2001a284 * (x**3) * ((y_3_0)**3) + 
            L0x2001a288 * (x**0) * ((y_3_0)**4) + 
            L0x2001a28c * (x**1) * ((y_3_0)**4) + 
            L0x2001a290 * (x**2) * ((y_3_0)**4) + 
            L0x2001a294 * (x**3) * ((y_3_0)**4) + 
            L0x2001a298 * (x**0) * ((y_3_0)**5) + 
            L0x2001a29c * (x**1) * ((y_3_0)**5) + 
            L0x2001a2a0 * (x**2) * ((y_3_0)**5) + 
            L0x2001a2a4 * (x**3) * ((y_3_0)**5) + 
            L0x2001a2a8 * (x**0) * ((y_3_0)**6) + 
            L0x2001a2ac * (x**1) * ((y_3_0)**6) + 
            L0x2001a2b0 * (x**2) * ((y_3_0)**6) + 
            L0x2001a2b4 * (x**3) * ((y_3_0)**6) + 
            L0x2001a2b8 * (x**0) * ((y_3_0)**7) + 
            L0x2001a2bc * (x**1) * ((y_3_0)**7) + 
            L0x2001a2c0 * (x**2) * ((y_3_0)**7) + 
            L0x2001a2c4 * (x**3) * ((y_3_0)**7)
          )
          [25570049, x**4 - y_0_05 * 24891397, y_0_05 - 1],
    (* inp_poly_6 *)
    eqmod 8 * (inp_poly_6 * inp_poly_6)
          (
            L0x2001a248 * (x**0) * ((y_3_0)**0) + 
            L0x2001a24c * (x**1) * ((y_3_0)**0) + 
            L0x2001a250 * (x**2) * ((y_3_0)**0) + 
            L0x2001a254 * (x**3) * ((y_3_0)**0) + 
            L0x2001a258 * (x**0) * ((y_3_0)**1) + 
            L0x2001a25c * (x**1) * ((y_3_0)**1) + 
            L0x2001a260 * (x**2) * ((y_3_0)**1) + 
            L0x2001a264 * (x**3) * ((y_3_0)**1) + 
            L0x2001a268 * (x**0) * ((y_3_0)**2) + 
            L0x2001a26c * (x**1) * ((y_3_0)**2) + 
            L0x2001a270 * (x**2) * ((y_3_0)**2) + 
            L0x2001a274 * (x**3) * ((y_3_0)**2) + 
            L0x2001a278 * (x**0) * ((y_3_0)**3) + 
            L0x2001a27c * (x**1) * ((y_3_0)**3) + 
            L0x2001a280 * (x**2) * ((y_3_0)**3) + 
            L0x2001a284 * (x**3) * ((y_3_0)**3) + 
            L0x2001a288 * (x**0) * ((y_3_0)**4) + 
            L0x2001a28c * (x**1) * ((y_3_0)**4) + 
            L0x2001a290 * (x**2) * ((y_3_0)**4) + 
            L0x2001a294 * (x**3) * ((y_3_0)**4) + 
            L0x2001a298 * (x**0) * ((y_3_0)**5) + 
            L0x2001a29c * (x**1) * ((y_3_0)**5) + 
            L0x2001a2a0 * (x**2) * ((y_3_0)**5) + 
            L0x2001a2a4 * (x**3) * ((y_3_0)**5) + 
            L0x2001a2a8 * (x**0) * ((y_3_0)**6) + 
            L0x2001a2ac * (x**1) * ((y_3_0)**6) + 
            L0x2001a2b0 * (x**2) * ((y_3_0)**6) + 
            L0x2001a2b4 * (x**3) * ((y_3_0)**6) + 
            L0x2001a2b8 * (x**0) * ((y_3_0)**7) + 
            L0x2001a2bc * (x**1) * ((y_3_0)**7) + 
            L0x2001a2c0 * (x**2) * ((y_3_0)**7) + 
            L0x2001a2c4 * (x**3) * ((y_3_0)**7)
          )
          [25570049, x**4 - y_0_06 * 9510986, y_0_06 - 1],
    (* inp_poly_7 *)
    eqmod 8 * (inp_poly_7 * inp_poly_7)
          (
            L0x2001a248 * (x**0) * ((y_3_0)**0) + 
            L0x2001a24c * (x**1) * ((y_3_0)**0) + 
            L0x2001a250 * (x**2) * ((y_3_0)**0) + 
            L0x2001a254 * (x**3) * ((y_3_0)**0) + 
            L0x2001a258 * (x**0) * ((y_3_0)**1) + 
            L0x2001a25c * (x**1) * ((y_3_0)**1) + 
            L0x2001a260 * (x**2) * ((y_3_0)**1) + 
            L0x2001a264 * (x**3) * ((y_3_0)**1) + 
            L0x2001a268 * (x**0) * ((y_3_0)**2) + 
            L0x2001a26c * (x**1) * ((y_3_0)**2) + 
            L0x2001a270 * (x**2) * ((y_3_0)**2) + 
            L0x2001a274 * (x**3) * ((y_3_0)**2) + 
            L0x2001a278 * (x**0) * ((y_3_0)**3) + 
            L0x2001a27c * (x**1) * ((y_3_0)**3) + 
            L0x2001a280 * (x**2) * ((y_3_0)**3) + 
            L0x2001a284 * (x**3) * ((y_3_0)**3) + 
            L0x2001a288 * (x**0) * ((y_3_0)**4) + 
            L0x2001a28c * (x**1) * ((y_3_0)**4) + 
            L0x2001a290 * (x**2) * ((y_3_0)**4) + 
            L0x2001a294 * (x**3) * ((y_3_0)**4) + 
            L0x2001a298 * (x**0) * ((y_3_0)**5) + 
            L0x2001a29c * (x**1) * ((y_3_0)**5) + 
            L0x2001a2a0 * (x**2) * ((y_3_0)**5) + 
            L0x2001a2a4 * (x**3) * ((y_3_0)**5) + 
            L0x2001a2a8 * (x**0) * ((y_3_0)**6) + 
            L0x2001a2ac * (x**1) * ((y_3_0)**6) + 
            L0x2001a2b0 * (x**2) * ((y_3_0)**6) + 
            L0x2001a2b4 * (x**3) * ((y_3_0)**6) + 
            L0x2001a2b8 * (x**0) * ((y_3_0)**7) + 
            L0x2001a2bc * (x**1) * ((y_3_0)**7) + 
            L0x2001a2c0 * (x**2) * ((y_3_0)**7) + 
            L0x2001a2c4 * (x**3) * ((y_3_0)**7)
          )
          [25570049, x**4 - y_0_07 * 16059063, y_0_07 - 1]
  ] prove with [cuts [0]]
  &&
  true
;

cut (* 3 *)
  true && true;

(* slice 1 *)
cut (* 4 *)
  and [
    (* inp_poly_8 *)
    eqmod 8 * (inp_poly_8 * inp_poly_8)
          (
            L0x2001a2c8 * (x**0) * ((y_3_1)**0) + 
            L0x2001a2cc * (x**1) * ((y_3_1)**0) + 
            L0x2001a2d0 * (x**2) * ((y_3_1)**0) + 
            L0x2001a2d4 * (x**3) * ((y_3_1)**0) + 
            L0x2001a2d8 * (x**0) * ((y_3_1)**1) + 
            L0x2001a2dc * (x**1) * ((y_3_1)**1) + 
            L0x2001a2e0 * (x**2) * ((y_3_1)**1) + 
            L0x2001a2e4 * (x**3) * ((y_3_1)**1) + 
            L0x2001a2e8 * (x**0) * ((y_3_1)**2) + 
            L0x2001a2ec * (x**1) * ((y_3_1)**2) + 
            L0x2001a2f0 * (x**2) * ((y_3_1)**2) + 
            L0x2001a2f4 * (x**3) * ((y_3_1)**2) + 
            L0x2001a2f8 * (x**0) * ((y_3_1)**3) + 
            L0x2001a2fc * (x**1) * ((y_3_1)**3) + 
            L0x2001a300 * (x**2) * ((y_3_1)**3) + 
            L0x2001a304 * (x**3) * ((y_3_1)**3) + 
            L0x2001a308 * (x**0) * ((y_3_1)**4) + 
            L0x2001a30c * (x**1) * ((y_3_1)**4) + 
            L0x2001a310 * (x**2) * ((y_3_1)**4) + 
            L0x2001a314 * (x**3) * ((y_3_1)**4) + 
            L0x2001a318 * (x**0) * ((y_3_1)**5) + 
            L0x2001a31c * (x**1) * ((y_3_1)**5) + 
            L0x2001a320 * (x**2) * ((y_3_1)**5) + 
            L0x2001a324 * (x**3) * ((y_3_1)**5) + 
            L0x2001a328 * (x**0) * ((y_3_1)**6) + 
            L0x2001a32c * (x**1) * ((y_3_1)**6) + 
            L0x2001a330 * (x**2) * ((y_3_1)**6) + 
            L0x2001a334 * (x**3) * ((y_3_1)**6) + 
            L0x2001a338 * (x**0) * ((y_3_1)**7) + 
            L0x2001a33c * (x**1) * ((y_3_1)**7) + 
            L0x2001a340 * (x**2) * ((y_3_1)**7) + 
            L0x2001a344 * (x**3) * ((y_3_1)**7)
          )
          [25570049, x**4 - y_0_08 * 24972806, y_0_08 - 1],
    (* inp_poly_9 *)
    eqmod 8 * (inp_poly_9 * inp_poly_9)
          (
            L0x2001a2c8 * (x**0) * ((y_3_1)**0) + 
            L0x2001a2cc * (x**1) * ((y_3_1)**0) + 
            L0x2001a2d0 * (x**2) * ((y_3_1)**0) + 
            L0x2001a2d4 * (x**3) * ((y_3_1)**0) + 
            L0x2001a2d8 * (x**0) * ((y_3_1)**1) + 
            L0x2001a2dc * (x**1) * ((y_3_1)**1) + 
            L0x2001a2e0 * (x**2) * ((y_3_1)**1) + 
            L0x2001a2e4 * (x**3) * ((y_3_1)**1) + 
            L0x2001a2e8 * (x**0) * ((y_3_1)**2) + 
            L0x2001a2ec * (x**1) * ((y_3_1)**2) + 
            L0x2001a2f0 * (x**2) * ((y_3_1)**2) + 
            L0x2001a2f4 * (x**3) * ((y_3_1)**2) + 
            L0x2001a2f8 * (x**0) * ((y_3_1)**3) + 
            L0x2001a2fc * (x**1) * ((y_3_1)**3) + 
            L0x2001a300 * (x**2) * ((y_3_1)**3) + 
            L0x2001a304 * (x**3) * ((y_3_1)**3) + 
            L0x2001a308 * (x**0) * ((y_3_1)**4) + 
            L0x2001a30c * (x**1) * ((y_3_1)**4) + 
            L0x2001a310 * (x**2) * ((y_3_1)**4) + 
            L0x2001a314 * (x**3) * ((y_3_1)**4) + 
            L0x2001a318 * (x**0) * ((y_3_1)**5) + 
            L0x2001a31c * (x**1) * ((y_3_1)**5) + 
            L0x2001a320 * (x**2) * ((y_3_1)**5) + 
            L0x2001a324 * (x**3) * ((y_3_1)**5) + 
            L0x2001a328 * (x**0) * ((y_3_1)**6) + 
            L0x2001a32c * (x**1) * ((y_3_1)**6) + 
            L0x2001a330 * (x**2) * ((y_3_1)**6) + 
            L0x2001a334 * (x**3) * ((y_3_1)**6) + 
            L0x2001a338 * (x**0) * ((y_3_1)**7) + 
            L0x2001a33c * (x**1) * ((y_3_1)**7) + 
            L0x2001a340 * (x**2) * ((y_3_1)**7) + 
            L0x2001a344 * (x**3) * ((y_3_1)**7)
          )
          [25570049, x**4 - y_0_09 * 597243, y_0_09 - 1],
    (* inp_poly_10 *)
    eqmod 8 * (inp_poly_10 * inp_poly_10)
          (
            L0x2001a2c8 * (x**0) * ((y_3_1)**0) + 
            L0x2001a2cc * (x**1) * ((y_3_1)**0) + 
            L0x2001a2d0 * (x**2) * ((y_3_1)**0) + 
            L0x2001a2d4 * (x**3) * ((y_3_1)**0) + 
            L0x2001a2d8 * (x**0) * ((y_3_1)**1) + 
            L0x2001a2dc * (x**1) * ((y_3_1)**1) + 
            L0x2001a2e0 * (x**2) * ((y_3_1)**1) + 
            L0x2001a2e4 * (x**3) * ((y_3_1)**1) + 
            L0x2001a2e8 * (x**0) * ((y_3_1)**2) + 
            L0x2001a2ec * (x**1) * ((y_3_1)**2) + 
            L0x2001a2f0 * (x**2) * ((y_3_1)**2) + 
            L0x2001a2f4 * (x**3) * ((y_3_1)**2) + 
            L0x2001a2f8 * (x**0) * ((y_3_1)**3) + 
            L0x2001a2fc * (x**1) * ((y_3_1)**3) + 
            L0x2001a300 * (x**2) * ((y_3_1)**3) + 
            L0x2001a304 * (x**3) * ((y_3_1)**3) + 
            L0x2001a308 * (x**0) * ((y_3_1)**4) + 
            L0x2001a30c * (x**1) * ((y_3_1)**4) + 
            L0x2001a310 * (x**2) * ((y_3_1)**4) + 
            L0x2001a314 * (x**3) * ((y_3_1)**4) + 
            L0x2001a318 * (x**0) * ((y_3_1)**5) + 
            L0x2001a31c * (x**1) * ((y_3_1)**5) + 
            L0x2001a320 * (x**2) * ((y_3_1)**5) + 
            L0x2001a324 * (x**3) * ((y_3_1)**5) + 
            L0x2001a328 * (x**0) * ((y_3_1)**6) + 
            L0x2001a32c * (x**1) * ((y_3_1)**6) + 
            L0x2001a330 * (x**2) * ((y_3_1)**6) + 
            L0x2001a334 * (x**3) * ((y_3_1)**6) + 
            L0x2001a338 * (x**0) * ((y_3_1)**7) + 
            L0x2001a33c * (x**1) * ((y_3_1)**7) + 
            L0x2001a340 * (x**2) * ((y_3_1)**7) + 
            L0x2001a344 * (x**3) * ((y_3_1)**7)
          )
          [25570049, x**4 - y_0_10 * 4410275, y_0_10 - 1],
    (* inp_poly_11 *)
    eqmod 8 * (inp_poly_11 * inp_poly_11)
          (
            L0x2001a2c8 * (x**0) * ((y_3_1)**0) + 
            L0x2001a2cc * (x**1) * ((y_3_1)**0) + 
            L0x2001a2d0 * (x**2) * ((y_3_1)**0) + 
            L0x2001a2d4 * (x**3) * ((y_3_1)**0) + 
            L0x2001a2d8 * (x**0) * ((y_3_1)**1) + 
            L0x2001a2dc * (x**1) * ((y_3_1)**1) + 
            L0x2001a2e0 * (x**2) * ((y_3_1)**1) + 
            L0x2001a2e4 * (x**3) * ((y_3_1)**1) + 
            L0x2001a2e8 * (x**0) * ((y_3_1)**2) + 
            L0x2001a2ec * (x**1) * ((y_3_1)**2) + 
            L0x2001a2f0 * (x**2) * ((y_3_1)**2) + 
            L0x2001a2f4 * (x**3) * ((y_3_1)**2) + 
            L0x2001a2f8 * (x**0) * ((y_3_1)**3) + 
            L0x2001a2fc * (x**1) * ((y_3_1)**3) + 
            L0x2001a300 * (x**2) * ((y_3_1)**3) + 
            L0x2001a304 * (x**3) * ((y_3_1)**3) + 
            L0x2001a308 * (x**0) * ((y_3_1)**4) + 
            L0x2001a30c * (x**1) * ((y_3_1)**4) + 
            L0x2001a310 * (x**2) * ((y_3_1)**4) + 
            L0x2001a314 * (x**3) * ((y_3_1)**4) + 
            L0x2001a318 * (x**0) * ((y_3_1)**5) + 
            L0x2001a31c * (x**1) * ((y_3_1)**5) + 
            L0x2001a320 * (x**2) * ((y_3_1)**5) + 
            L0x2001a324 * (x**3) * ((y_3_1)**5) + 
            L0x2001a328 * (x**0) * ((y_3_1)**6) + 
            L0x2001a32c * (x**1) * ((y_3_1)**6) + 
            L0x2001a330 * (x**2) * ((y_3_1)**6) + 
            L0x2001a334 * (x**3) * ((y_3_1)**6) + 
            L0x2001a338 * (x**0) * ((y_3_1)**7) + 
            L0x2001a33c * (x**1) * ((y_3_1)**7) + 
            L0x2001a340 * (x**2) * ((y_3_1)**7) + 
            L0x2001a344 * (x**3) * ((y_3_1)**7)
          )
          [25570049, x**4 - y_0_11 * 21159774, y_0_11 - 1],
    (* inp_poly_12 *)
    eqmod 8 * (inp_poly_12 * inp_poly_12)
          (
            L0x2001a2c8 * (x**0) * ((y_3_1)**0) + 
            L0x2001a2cc * (x**1) * ((y_3_1)**0) + 
            L0x2001a2d0 * (x**2) * ((y_3_1)**0) + 
            L0x2001a2d4 * (x**3) * ((y_3_1)**0) + 
            L0x2001a2d8 * (x**0) * ((y_3_1)**1) + 
            L0x2001a2dc * (x**1) * ((y_3_1)**1) + 
            L0x2001a2e0 * (x**2) * ((y_3_1)**1) + 
            L0x2001a2e4 * (x**3) * ((y_3_1)**1) + 
            L0x2001a2e8 * (x**0) * ((y_3_1)**2) + 
            L0x2001a2ec * (x**1) * ((y_3_1)**2) + 
            L0x2001a2f0 * (x**2) * ((y_3_1)**2) + 
            L0x2001a2f4 * (x**3) * ((y_3_1)**2) + 
            L0x2001a2f8 * (x**0) * ((y_3_1)**3) + 
            L0x2001a2fc * (x**1) * ((y_3_1)**3) + 
            L0x2001a300 * (x**2) * ((y_3_1)**3) + 
            L0x2001a304 * (x**3) * ((y_3_1)**3) + 
            L0x2001a308 * (x**0) * ((y_3_1)**4) + 
            L0x2001a30c * (x**1) * ((y_3_1)**4) + 
            L0x2001a310 * (x**2) * ((y_3_1)**4) + 
            L0x2001a314 * (x**3) * ((y_3_1)**4) + 
            L0x2001a318 * (x**0) * ((y_3_1)**5) + 
            L0x2001a31c * (x**1) * ((y_3_1)**5) + 
            L0x2001a320 * (x**2) * ((y_3_1)**5) + 
            L0x2001a324 * (x**3) * ((y_3_1)**5) + 
            L0x2001a328 * (x**0) * ((y_3_1)**6) + 
            L0x2001a32c * (x**1) * ((y_3_1)**6) + 
            L0x2001a330 * (x**2) * ((y_3_1)**6) + 
            L0x2001a334 * (x**3) * ((y_3_1)**6) + 
            L0x2001a338 * (x**0) * ((y_3_1)**7) + 
            L0x2001a33c * (x**1) * ((y_3_1)**7) + 
            L0x2001a340 * (x**2) * ((y_3_1)**7) + 
            L0x2001a344 * (x**3) * ((y_3_1)**7)
          )
          [25570049, x**4 - y_0_12 * 2389590, y_0_12 - 1],
    (* inp_poly_13 *)
    eqmod 8 * (inp_poly_13 * inp_poly_13)
          (
            L0x2001a2c8 * (x**0) * ((y_3_1)**0) + 
            L0x2001a2cc * (x**1) * ((y_3_1)**0) + 
            L0x2001a2d0 * (x**2) * ((y_3_1)**0) + 
            L0x2001a2d4 * (x**3) * ((y_3_1)**0) + 
            L0x2001a2d8 * (x**0) * ((y_3_1)**1) + 
            L0x2001a2dc * (x**1) * ((y_3_1)**1) + 
            L0x2001a2e0 * (x**2) * ((y_3_1)**1) + 
            L0x2001a2e4 * (x**3) * ((y_3_1)**1) + 
            L0x2001a2e8 * (x**0) * ((y_3_1)**2) + 
            L0x2001a2ec * (x**1) * ((y_3_1)**2) + 
            L0x2001a2f0 * (x**2) * ((y_3_1)**2) + 
            L0x2001a2f4 * (x**3) * ((y_3_1)**2) + 
            L0x2001a2f8 * (x**0) * ((y_3_1)**3) + 
            L0x2001a2fc * (x**1) * ((y_3_1)**3) + 
            L0x2001a300 * (x**2) * ((y_3_1)**3) + 
            L0x2001a304 * (x**3) * ((y_3_1)**3) + 
            L0x2001a308 * (x**0) * ((y_3_1)**4) + 
            L0x2001a30c * (x**1) * ((y_3_1)**4) + 
            L0x2001a310 * (x**2) * ((y_3_1)**4) + 
            L0x2001a314 * (x**3) * ((y_3_1)**4) + 
            L0x2001a318 * (x**0) * ((y_3_1)**5) + 
            L0x2001a31c * (x**1) * ((y_3_1)**5) + 
            L0x2001a320 * (x**2) * ((y_3_1)**5) + 
            L0x2001a324 * (x**3) * ((y_3_1)**5) + 
            L0x2001a328 * (x**0) * ((y_3_1)**6) + 
            L0x2001a32c * (x**1) * ((y_3_1)**6) + 
            L0x2001a330 * (x**2) * ((y_3_1)**6) + 
            L0x2001a334 * (x**3) * ((y_3_1)**6) + 
            L0x2001a338 * (x**0) * ((y_3_1)**7) + 
            L0x2001a33c * (x**1) * ((y_3_1)**7) + 
            L0x2001a340 * (x**2) * ((y_3_1)**7) + 
            L0x2001a344 * (x**3) * ((y_3_1)**7)
          )
          [25570049, x**4 - y_0_13 * 23180459, y_0_13 - 1],
    (* inp_poly_14 *)
    eqmod 8 * (inp_poly_14 * inp_poly_14)
          (
            L0x2001a2c8 * (x**0) * ((y_3_1)**0) + 
            L0x2001a2cc * (x**1) * ((y_3_1)**0) + 
            L0x2001a2d0 * (x**2) * ((y_3_1)**0) + 
            L0x2001a2d4 * (x**3) * ((y_3_1)**0) + 
            L0x2001a2d8 * (x**0) * ((y_3_1)**1) + 
            L0x2001a2dc * (x**1) * ((y_3_1)**1) + 
            L0x2001a2e0 * (x**2) * ((y_3_1)**1) + 
            L0x2001a2e4 * (x**3) * ((y_3_1)**1) + 
            L0x2001a2e8 * (x**0) * ((y_3_1)**2) + 
            L0x2001a2ec * (x**1) * ((y_3_1)**2) + 
            L0x2001a2f0 * (x**2) * ((y_3_1)**2) + 
            L0x2001a2f4 * (x**3) * ((y_3_1)**2) + 
            L0x2001a2f8 * (x**0) * ((y_3_1)**3) + 
            L0x2001a2fc * (x**1) * ((y_3_1)**3) + 
            L0x2001a300 * (x**2) * ((y_3_1)**3) + 
            L0x2001a304 * (x**3) * ((y_3_1)**3) + 
            L0x2001a308 * (x**0) * ((y_3_1)**4) + 
            L0x2001a30c * (x**1) * ((y_3_1)**4) + 
            L0x2001a310 * (x**2) * ((y_3_1)**4) + 
            L0x2001a314 * (x**3) * ((y_3_1)**4) + 
            L0x2001a318 * (x**0) * ((y_3_1)**5) + 
            L0x2001a31c * (x**1) * ((y_3_1)**5) + 
            L0x2001a320 * (x**2) * ((y_3_1)**5) + 
            L0x2001a324 * (x**3) * ((y_3_1)**5) + 
            L0x2001a328 * (x**0) * ((y_3_1)**6) + 
            L0x2001a32c * (x**1) * ((y_3_1)**6) + 
            L0x2001a330 * (x**2) * ((y_3_1)**6) + 
            L0x2001a334 * (x**3) * ((y_3_1)**6) + 
            L0x2001a338 * (x**0) * ((y_3_1)**7) + 
            L0x2001a33c * (x**1) * ((y_3_1)**7) + 
            L0x2001a340 * (x**2) * ((y_3_1)**7) + 
            L0x2001a344 * (x**3) * ((y_3_1)**7)
          )
          [25570049, x**4 - y_0_14 * 4363503, y_0_14 - 1],
    (* inp_poly_15 *)
    eqmod 8 * (inp_poly_15 * inp_poly_15)
          (
            L0x2001a2c8 * (x**0) * ((y_3_1)**0) + 
            L0x2001a2cc * (x**1) * ((y_3_1)**0) + 
            L0x2001a2d0 * (x**2) * ((y_3_1)**0) + 
            L0x2001a2d4 * (x**3) * ((y_3_1)**0) + 
            L0x2001a2d8 * (x**0) * ((y_3_1)**1) + 
            L0x2001a2dc * (x**1) * ((y_3_1)**1) + 
            L0x2001a2e0 * (x**2) * ((y_3_1)**1) + 
            L0x2001a2e4 * (x**3) * ((y_3_1)**1) + 
            L0x2001a2e8 * (x**0) * ((y_3_1)**2) + 
            L0x2001a2ec * (x**1) * ((y_3_1)**2) + 
            L0x2001a2f0 * (x**2) * ((y_3_1)**2) + 
            L0x2001a2f4 * (x**3) * ((y_3_1)**2) + 
            L0x2001a2f8 * (x**0) * ((y_3_1)**3) + 
            L0x2001a2fc * (x**1) * ((y_3_1)**3) + 
            L0x2001a300 * (x**2) * ((y_3_1)**3) + 
            L0x2001a304 * (x**3) * ((y_3_1)**3) + 
            L0x2001a308 * (x**0) * ((y_3_1)**4) + 
            L0x2001a30c * (x**1) * ((y_3_1)**4) + 
            L0x2001a310 * (x**2) * ((y_3_1)**4) + 
            L0x2001a314 * (x**3) * ((y_3_1)**4) + 
            L0x2001a318 * (x**0) * ((y_3_1)**5) + 
            L0x2001a31c * (x**1) * ((y_3_1)**5) + 
            L0x2001a320 * (x**2) * ((y_3_1)**5) + 
            L0x2001a324 * (x**3) * ((y_3_1)**5) + 
            L0x2001a328 * (x**0) * ((y_3_1)**6) + 
            L0x2001a32c * (x**1) * ((y_3_1)**6) + 
            L0x2001a330 * (x**2) * ((y_3_1)**6) + 
            L0x2001a334 * (x**3) * ((y_3_1)**6) + 
            L0x2001a338 * (x**0) * ((y_3_1)**7) + 
            L0x2001a33c * (x**1) * ((y_3_1)**7) + 
            L0x2001a340 * (x**2) * ((y_3_1)**7) + 
            L0x2001a344 * (x**3) * ((y_3_1)**7)
          )
          [25570049, x**4 - y_0_15 * 21206546, y_0_15 - 1]
  ] prove with [cuts [0]]
  &&
  true
;

cut (* 5 *)
  true && true;

(* slice 2 *)
cut (* 6 *)
  and [
    (* inp_poly_16 *)
    eqmod 8 * (inp_poly_16 * inp_poly_16)
          (
            L0x2001a348 * (x**0) * ((y_3_2)**0) + 
            L0x2001a34c * (x**1) * ((y_3_2)**0) + 
            L0x2001a350 * (x**2) * ((y_3_2)**0) + 
            L0x2001a354 * (x**3) * ((y_3_2)**0) + 
            L0x2001a358 * (x**0) * ((y_3_2)**1) + 
            L0x2001a35c * (x**1) * ((y_3_2)**1) + 
            L0x2001a360 * (x**2) * ((y_3_2)**1) + 
            L0x2001a364 * (x**3) * ((y_3_2)**1) + 
            L0x2001a368 * (x**0) * ((y_3_2)**2) + 
            L0x2001a36c * (x**1) * ((y_3_2)**2) + 
            L0x2001a370 * (x**2) * ((y_3_2)**2) + 
            L0x2001a374 * (x**3) * ((y_3_2)**2) + 
            L0x2001a378 * (x**0) * ((y_3_2)**3) + 
            L0x2001a37c * (x**1) * ((y_3_2)**3) + 
            L0x2001a380 * (x**2) * ((y_3_2)**3) + 
            L0x2001a384 * (x**3) * ((y_3_2)**3) + 
            L0x2001a388 * (x**0) * ((y_3_2)**4) + 
            L0x2001a38c * (x**1) * ((y_3_2)**4) + 
            L0x2001a390 * (x**2) * ((y_3_2)**4) + 
            L0x2001a394 * (x**3) * ((y_3_2)**4) + 
            L0x2001a398 * (x**0) * ((y_3_2)**5) + 
            L0x2001a39c * (x**1) * ((y_3_2)**5) + 
            L0x2001a3a0 * (x**2) * ((y_3_2)**5) + 
            L0x2001a3a4 * (x**3) * ((y_3_2)**5) + 
            L0x2001a3a8 * (x**0) * ((y_3_2)**6) + 
            L0x2001a3ac * (x**1) * ((y_3_2)**6) + 
            L0x2001a3b0 * (x**2) * ((y_3_2)**6) + 
            L0x2001a3b4 * (x**3) * ((y_3_2)**6) + 
            L0x2001a3b8 * (x**0) * ((y_3_2)**7) + 
            L0x2001a3bc * (x**1) * ((y_3_2)**7) + 
            L0x2001a3c0 * (x**2) * ((y_3_2)**7) + 
            L0x2001a3c4 * (x**3) * ((y_3_2)**7)
          )
          [25570049, x**4 - y_0_16 * 21713494, y_0_16 - 1],
    (* inp_poly_17 *)
    eqmod 8 * (inp_poly_17 * inp_poly_17)
          (
            L0x2001a348 * (x**0) * ((y_3_2)**0) + 
            L0x2001a34c * (x**1) * ((y_3_2)**0) + 
            L0x2001a350 * (x**2) * ((y_3_2)**0) + 
            L0x2001a354 * (x**3) * ((y_3_2)**0) + 
            L0x2001a358 * (x**0) * ((y_3_2)**1) + 
            L0x2001a35c * (x**1) * ((y_3_2)**1) + 
            L0x2001a360 * (x**2) * ((y_3_2)**1) + 
            L0x2001a364 * (x**3) * ((y_3_2)**1) + 
            L0x2001a368 * (x**0) * ((y_3_2)**2) + 
            L0x2001a36c * (x**1) * ((y_3_2)**2) + 
            L0x2001a370 * (x**2) * ((y_3_2)**2) + 
            L0x2001a374 * (x**3) * ((y_3_2)**2) + 
            L0x2001a378 * (x**0) * ((y_3_2)**3) + 
            L0x2001a37c * (x**1) * ((y_3_2)**3) + 
            L0x2001a380 * (x**2) * ((y_3_2)**3) + 
            L0x2001a384 * (x**3) * ((y_3_2)**3) + 
            L0x2001a388 * (x**0) * ((y_3_2)**4) + 
            L0x2001a38c * (x**1) * ((y_3_2)**4) + 
            L0x2001a390 * (x**2) * ((y_3_2)**4) + 
            L0x2001a394 * (x**3) * ((y_3_2)**4) + 
            L0x2001a398 * (x**0) * ((y_3_2)**5) + 
            L0x2001a39c * (x**1) * ((y_3_2)**5) + 
            L0x2001a3a0 * (x**2) * ((y_3_2)**5) + 
            L0x2001a3a4 * (x**3) * ((y_3_2)**5) + 
            L0x2001a3a8 * (x**0) * ((y_3_2)**6) + 
            L0x2001a3ac * (x**1) * ((y_3_2)**6) + 
            L0x2001a3b0 * (x**2) * ((y_3_2)**6) + 
            L0x2001a3b4 * (x**3) * ((y_3_2)**6) + 
            L0x2001a3b8 * (x**0) * ((y_3_2)**7) + 
            L0x2001a3bc * (x**1) * ((y_3_2)**7) + 
            L0x2001a3c0 * (x**2) * ((y_3_2)**7) + 
            L0x2001a3c4 * (x**3) * ((y_3_2)**7)
          )
          [25570049, x**4 - y_0_17 * 3856555, y_0_17 - 1],
    (* inp_poly_18 *)
    eqmod 8 * (inp_poly_18 * inp_poly_18)
          (
            L0x2001a348 * (x**0) * ((y_3_2)**0) + 
            L0x2001a34c * (x**1) * ((y_3_2)**0) + 
            L0x2001a350 * (x**2) * ((y_3_2)**0) + 
            L0x2001a354 * (x**3) * ((y_3_2)**0) + 
            L0x2001a358 * (x**0) * ((y_3_2)**1) + 
            L0x2001a35c * (x**1) * ((y_3_2)**1) + 
            L0x2001a360 * (x**2) * ((y_3_2)**1) + 
            L0x2001a364 * (x**3) * ((y_3_2)**1) + 
            L0x2001a368 * (x**0) * ((y_3_2)**2) + 
            L0x2001a36c * (x**1) * ((y_3_2)**2) + 
            L0x2001a370 * (x**2) * ((y_3_2)**2) + 
            L0x2001a374 * (x**3) * ((y_3_2)**2) + 
            L0x2001a378 * (x**0) * ((y_3_2)**3) + 
            L0x2001a37c * (x**1) * ((y_3_2)**3) + 
            L0x2001a380 * (x**2) * ((y_3_2)**3) + 
            L0x2001a384 * (x**3) * ((y_3_2)**3) + 
            L0x2001a388 * (x**0) * ((y_3_2)**4) + 
            L0x2001a38c * (x**1) * ((y_3_2)**4) + 
            L0x2001a390 * (x**2) * ((y_3_2)**4) + 
            L0x2001a394 * (x**3) * ((y_3_2)**4) + 
            L0x2001a398 * (x**0) * ((y_3_2)**5) + 
            L0x2001a39c * (x**1) * ((y_3_2)**5) + 
            L0x2001a3a0 * (x**2) * ((y_3_2)**5) + 
            L0x2001a3a4 * (x**3) * ((y_3_2)**5) + 
            L0x2001a3a8 * (x**0) * ((y_3_2)**6) + 
            L0x2001a3ac * (x**1) * ((y_3_2)**6) + 
            L0x2001a3b0 * (x**2) * ((y_3_2)**6) + 
            L0x2001a3b4 * (x**3) * ((y_3_2)**6) + 
            L0x2001a3b8 * (x**0) * ((y_3_2)**7) + 
            L0x2001a3bc * (x**1) * ((y_3_2)**7) + 
            L0x2001a3c0 * (x**2) * ((y_3_2)**7) + 
            L0x2001a3c4 * (x**3) * ((y_3_2)**7)
          )
          [25570049, x**4 - y_0_18 * 23159929, y_0_18 - 1],
    (* inp_poly_19 *)
    eqmod 8 * (inp_poly_19 * inp_poly_19)
          (
            L0x2001a348 * (x**0) * ((y_3_2)**0) + 
            L0x2001a34c * (x**1) * ((y_3_2)**0) + 
            L0x2001a350 * (x**2) * ((y_3_2)**0) + 
            L0x2001a354 * (x**3) * ((y_3_2)**0) + 
            L0x2001a358 * (x**0) * ((y_3_2)**1) + 
            L0x2001a35c * (x**1) * ((y_3_2)**1) + 
            L0x2001a360 * (x**2) * ((y_3_2)**1) + 
            L0x2001a364 * (x**3) * ((y_3_2)**1) + 
            L0x2001a368 * (x**0) * ((y_3_2)**2) + 
            L0x2001a36c * (x**1) * ((y_3_2)**2) + 
            L0x2001a370 * (x**2) * ((y_3_2)**2) + 
            L0x2001a374 * (x**3) * ((y_3_2)**2) + 
            L0x2001a378 * (x**0) * ((y_3_2)**3) + 
            L0x2001a37c * (x**1) * ((y_3_2)**3) + 
            L0x2001a380 * (x**2) * ((y_3_2)**3) + 
            L0x2001a384 * (x**3) * ((y_3_2)**3) + 
            L0x2001a388 * (x**0) * ((y_3_2)**4) + 
            L0x2001a38c * (x**1) * ((y_3_2)**4) + 
            L0x2001a390 * (x**2) * ((y_3_2)**4) + 
            L0x2001a394 * (x**3) * ((y_3_2)**4) + 
            L0x2001a398 * (x**0) * ((y_3_2)**5) + 
            L0x2001a39c * (x**1) * ((y_3_2)**5) + 
            L0x2001a3a0 * (x**2) * ((y_3_2)**5) + 
            L0x2001a3a4 * (x**3) * ((y_3_2)**5) + 
            L0x2001a3a8 * (x**0) * ((y_3_2)**6) + 
            L0x2001a3ac * (x**1) * ((y_3_2)**6) + 
            L0x2001a3b0 * (x**2) * ((y_3_2)**6) + 
            L0x2001a3b4 * (x**3) * ((y_3_2)**6) + 
            L0x2001a3b8 * (x**0) * ((y_3_2)**7) + 
            L0x2001a3bc * (x**1) * ((y_3_2)**7) + 
            L0x2001a3c0 * (x**2) * ((y_3_2)**7) + 
            L0x2001a3c4 * (x**3) * ((y_3_2)**7)
          )
          [25570049, x**4 - y_0_19 * 2410120, y_0_19 - 1],
    (* inp_poly_20 *)
    eqmod 8 * (inp_poly_20 * inp_poly_20)
          (
            L0x2001a348 * (x**0) * ((y_3_2)**0) + 
            L0x2001a34c * (x**1) * ((y_3_2)**0) + 
            L0x2001a350 * (x**2) * ((y_3_2)**0) + 
            L0x2001a354 * (x**3) * ((y_3_2)**0) + 
            L0x2001a358 * (x**0) * ((y_3_2)**1) + 
            L0x2001a35c * (x**1) * ((y_3_2)**1) + 
            L0x2001a360 * (x**2) * ((y_3_2)**1) + 
            L0x2001a364 * (x**3) * ((y_3_2)**1) + 
            L0x2001a368 * (x**0) * ((y_3_2)**2) + 
            L0x2001a36c * (x**1) * ((y_3_2)**2) + 
            L0x2001a370 * (x**2) * ((y_3_2)**2) + 
            L0x2001a374 * (x**3) * ((y_3_2)**2) + 
            L0x2001a378 * (x**0) * ((y_3_2)**3) + 
            L0x2001a37c * (x**1) * ((y_3_2)**3) + 
            L0x2001a380 * (x**2) * ((y_3_2)**3) + 
            L0x2001a384 * (x**3) * ((y_3_2)**3) + 
            L0x2001a388 * (x**0) * ((y_3_2)**4) + 
            L0x2001a38c * (x**1) * ((y_3_2)**4) + 
            L0x2001a390 * (x**2) * ((y_3_2)**4) + 
            L0x2001a394 * (x**3) * ((y_3_2)**4) + 
            L0x2001a398 * (x**0) * ((y_3_2)**5) + 
            L0x2001a39c * (x**1) * ((y_3_2)**5) + 
            L0x2001a3a0 * (x**2) * ((y_3_2)**5) + 
            L0x2001a3a4 * (x**3) * ((y_3_2)**5) + 
            L0x2001a3a8 * (x**0) * ((y_3_2)**6) + 
            L0x2001a3ac * (x**1) * ((y_3_2)**6) + 
            L0x2001a3b0 * (x**2) * ((y_3_2)**6) + 
            L0x2001a3b4 * (x**3) * ((y_3_2)**6) + 
            L0x2001a3b8 * (x**0) * ((y_3_2)**7) + 
            L0x2001a3bc * (x**1) * ((y_3_2)**7) + 
            L0x2001a3c0 * (x**2) * ((y_3_2)**7) + 
            L0x2001a3c4 * (x**3) * ((y_3_2)**7)
          )
          [25570049, x**4 - y_0_20 * 23569609, y_0_20 - 1],
    (* inp_poly_21 *)
    eqmod 8 * (inp_poly_21 * inp_poly_21)
          (
            L0x2001a348 * (x**0) * ((y_3_2)**0) + 
            L0x2001a34c * (x**1) * ((y_3_2)**0) + 
            L0x2001a350 * (x**2) * ((y_3_2)**0) + 
            L0x2001a354 * (x**3) * ((y_3_2)**0) + 
            L0x2001a358 * (x**0) * ((y_3_2)**1) + 
            L0x2001a35c * (x**1) * ((y_3_2)**1) + 
            L0x2001a360 * (x**2) * ((y_3_2)**1) + 
            L0x2001a364 * (x**3) * ((y_3_2)**1) + 
            L0x2001a368 * (x**0) * ((y_3_2)**2) + 
            L0x2001a36c * (x**1) * ((y_3_2)**2) + 
            L0x2001a370 * (x**2) * ((y_3_2)**2) + 
            L0x2001a374 * (x**3) * ((y_3_2)**2) + 
            L0x2001a378 * (x**0) * ((y_3_2)**3) + 
            L0x2001a37c * (x**1) * ((y_3_2)**3) + 
            L0x2001a380 * (x**2) * ((y_3_2)**3) + 
            L0x2001a384 * (x**3) * ((y_3_2)**3) + 
            L0x2001a388 * (x**0) * ((y_3_2)**4) + 
            L0x2001a38c * (x**1) * ((y_3_2)**4) + 
            L0x2001a390 * (x**2) * ((y_3_2)**4) + 
            L0x2001a394 * (x**3) * ((y_3_2)**4) + 
            L0x2001a398 * (x**0) * ((y_3_2)**5) + 
            L0x2001a39c * (x**1) * ((y_3_2)**5) + 
            L0x2001a3a0 * (x**2) * ((y_3_2)**5) + 
            L0x2001a3a4 * (x**3) * ((y_3_2)**5) + 
            L0x2001a3a8 * (x**0) * ((y_3_2)**6) + 
            L0x2001a3ac * (x**1) * ((y_3_2)**6) + 
            L0x2001a3b0 * (x**2) * ((y_3_2)**6) + 
            L0x2001a3b4 * (x**3) * ((y_3_2)**6) + 
            L0x2001a3b8 * (x**0) * ((y_3_2)**7) + 
            L0x2001a3bc * (x**1) * ((y_3_2)**7) + 
            L0x2001a3c0 * (x**2) * ((y_3_2)**7) + 
            L0x2001a3c4 * (x**3) * ((y_3_2)**7)
          )
          [25570049, x**4 - y_0_21 * 2000440, y_0_21 - 1],
    (* inp_poly_22 *)
    eqmod 8 * (inp_poly_22 * inp_poly_22)
          (
            L0x2001a348 * (x**0) * ((y_3_2)**0) + 
            L0x2001a34c * (x**1) * ((y_3_2)**0) + 
            L0x2001a350 * (x**2) * ((y_3_2)**0) + 
            L0x2001a354 * (x**3) * ((y_3_2)**0) + 
            L0x2001a358 * (x**0) * ((y_3_2)**1) + 
            L0x2001a35c * (x**1) * ((y_3_2)**1) + 
            L0x2001a360 * (x**2) * ((y_3_2)**1) + 
            L0x2001a364 * (x**3) * ((y_3_2)**1) + 
            L0x2001a368 * (x**0) * ((y_3_2)**2) + 
            L0x2001a36c * (x**1) * ((y_3_2)**2) + 
            L0x2001a370 * (x**2) * ((y_3_2)**2) + 
            L0x2001a374 * (x**3) * ((y_3_2)**2) + 
            L0x2001a378 * (x**0) * ((y_3_2)**3) + 
            L0x2001a37c * (x**1) * ((y_3_2)**3) + 
            L0x2001a380 * (x**2) * ((y_3_2)**3) + 
            L0x2001a384 * (x**3) * ((y_3_2)**3) + 
            L0x2001a388 * (x**0) * ((y_3_2)**4) + 
            L0x2001a38c * (x**1) * ((y_3_2)**4) + 
            L0x2001a390 * (x**2) * ((y_3_2)**4) + 
            L0x2001a394 * (x**3) * ((y_3_2)**4) + 
            L0x2001a398 * (x**0) * ((y_3_2)**5) + 
            L0x2001a39c * (x**1) * ((y_3_2)**5) + 
            L0x2001a3a0 * (x**2) * ((y_3_2)**5) + 
            L0x2001a3a4 * (x**3) * ((y_3_2)**5) + 
            L0x2001a3a8 * (x**0) * ((y_3_2)**6) + 
            L0x2001a3ac * (x**1) * ((y_3_2)**6) + 
            L0x2001a3b0 * (x**2) * ((y_3_2)**6) + 
            L0x2001a3b4 * (x**3) * ((y_3_2)**6) + 
            L0x2001a3b8 * (x**0) * ((y_3_2)**7) + 
            L0x2001a3bc * (x**1) * ((y_3_2)**7) + 
            L0x2001a3c0 * (x**2) * ((y_3_2)**7) + 
            L0x2001a3c4 * (x**3) * ((y_3_2)**7)
          )
          [25570049, x**4 - y_0_22 * 7617083, y_0_22 - 1],
    (* inp_poly_23 *)
    eqmod 8 * (inp_poly_23 * inp_poly_23)
          (
            L0x2001a348 * (x**0) * ((y_3_2)**0) + 
            L0x2001a34c * (x**1) * ((y_3_2)**0) + 
            L0x2001a350 * (x**2) * ((y_3_2)**0) + 
            L0x2001a354 * (x**3) * ((y_3_2)**0) + 
            L0x2001a358 * (x**0) * ((y_3_2)**1) + 
            L0x2001a35c * (x**1) * ((y_3_2)**1) + 
            L0x2001a360 * (x**2) * ((y_3_2)**1) + 
            L0x2001a364 * (x**3) * ((y_3_2)**1) + 
            L0x2001a368 * (x**0) * ((y_3_2)**2) + 
            L0x2001a36c * (x**1) * ((y_3_2)**2) + 
            L0x2001a370 * (x**2) * ((y_3_2)**2) + 
            L0x2001a374 * (x**3) * ((y_3_2)**2) + 
            L0x2001a378 * (x**0) * ((y_3_2)**3) + 
            L0x2001a37c * (x**1) * ((y_3_2)**3) + 
            L0x2001a380 * (x**2) * ((y_3_2)**3) + 
            L0x2001a384 * (x**3) * ((y_3_2)**3) + 
            L0x2001a388 * (x**0) * ((y_3_2)**4) + 
            L0x2001a38c * (x**1) * ((y_3_2)**4) + 
            L0x2001a390 * (x**2) * ((y_3_2)**4) + 
            L0x2001a394 * (x**3) * ((y_3_2)**4) + 
            L0x2001a398 * (x**0) * ((y_3_2)**5) + 
            L0x2001a39c * (x**1) * ((y_3_2)**5) + 
            L0x2001a3a0 * (x**2) * ((y_3_2)**5) + 
            L0x2001a3a4 * (x**3) * ((y_3_2)**5) + 
            L0x2001a3a8 * (x**0) * ((y_3_2)**6) + 
            L0x2001a3ac * (x**1) * ((y_3_2)**6) + 
            L0x2001a3b0 * (x**2) * ((y_3_2)**6) + 
            L0x2001a3b4 * (x**3) * ((y_3_2)**6) + 
            L0x2001a3b8 * (x**0) * ((y_3_2)**7) + 
            L0x2001a3bc * (x**1) * ((y_3_2)**7) + 
            L0x2001a3c0 * (x**2) * ((y_3_2)**7) + 
            L0x2001a3c4 * (x**3) * ((y_3_2)**7)
          )
          [25570049, x**4 - y_0_23 * 17952966, y_0_23 - 1]
  ] prove with [cuts [0]]
  &&
  true
;

cut (* 7 *)
  true && true;

(* slice 3 *)
cut (* 8 *)
  and [
    (* inp_poly_24 *)
    eqmod 8 * (inp_poly_24 * inp_poly_24)
          (
            L0x2001a3c8 * (x**0) * ((y_3_3)**0) + 
            L0x2001a3cc * (x**1) * ((y_3_3)**0) + 
            L0x2001a3d0 * (x**2) * ((y_3_3)**0) + 
            L0x2001a3d4 * (x**3) * ((y_3_3)**0) + 
            L0x2001a3d8 * (x**0) * ((y_3_3)**1) + 
            L0x2001a3dc * (x**1) * ((y_3_3)**1) + 
            L0x2001a3e0 * (x**2) * ((y_3_3)**1) + 
            L0x2001a3e4 * (x**3) * ((y_3_3)**1) + 
            L0x2001a3e8 * (x**0) * ((y_3_3)**2) + 
            L0x2001a3ec * (x**1) * ((y_3_3)**2) + 
            L0x2001a3f0 * (x**2) * ((y_3_3)**2) + 
            L0x2001a3f4 * (x**3) * ((y_3_3)**2) + 
            L0x2001a3f8 * (x**0) * ((y_3_3)**3) + 
            L0x2001a3fc * (x**1) * ((y_3_3)**3) + 
            L0x2001a400 * (x**2) * ((y_3_3)**3) + 
            L0x2001a404 * (x**3) * ((y_3_3)**3) + 
            L0x2001a408 * (x**0) * ((y_3_3)**4) + 
            L0x2001a40c * (x**1) * ((y_3_3)**4) + 
            L0x2001a410 * (x**2) * ((y_3_3)**4) + 
            L0x2001a414 * (x**3) * ((y_3_3)**4) + 
            L0x2001a418 * (x**0) * ((y_3_3)**5) + 
            L0x2001a41c * (x**1) * ((y_3_3)**5) + 
            L0x2001a420 * (x**2) * ((y_3_3)**5) + 
            L0x2001a424 * (x**3) * ((y_3_3)**5) + 
            L0x2001a428 * (x**0) * ((y_3_3)**6) + 
            L0x2001a42c * (x**1) * ((y_3_3)**6) + 
            L0x2001a430 * (x**2) * ((y_3_3)**6) + 
            L0x2001a434 * (x**3) * ((y_3_3)**6) + 
            L0x2001a438 * (x**0) * ((y_3_3)**7) + 
            L0x2001a43c * (x**1) * ((y_3_3)**7) + 
            L0x2001a440 * (x**2) * ((y_3_3)**7) + 
            L0x2001a444 * (x**3) * ((y_3_3)**7)
          )
          [25570049, x**4 - y_0_24 * 24859920, y_0_24 - 1],
    (* inp_poly_25 *)
    eqmod 8 * (inp_poly_25 * inp_poly_25)
          (
            L0x2001a3c8 * (x**0) * ((y_3_3)**0) + 
            L0x2001a3cc * (x**1) * ((y_3_3)**0) + 
            L0x2001a3d0 * (x**2) * ((y_3_3)**0) + 
            L0x2001a3d4 * (x**3) * ((y_3_3)**0) + 
            L0x2001a3d8 * (x**0) * ((y_3_3)**1) + 
            L0x2001a3dc * (x**1) * ((y_3_3)**1) + 
            L0x2001a3e0 * (x**2) * ((y_3_3)**1) + 
            L0x2001a3e4 * (x**3) * ((y_3_3)**1) + 
            L0x2001a3e8 * (x**0) * ((y_3_3)**2) + 
            L0x2001a3ec * (x**1) * ((y_3_3)**2) + 
            L0x2001a3f0 * (x**2) * ((y_3_3)**2) + 
            L0x2001a3f4 * (x**3) * ((y_3_3)**2) + 
            L0x2001a3f8 * (x**0) * ((y_3_3)**3) + 
            L0x2001a3fc * (x**1) * ((y_3_3)**3) + 
            L0x2001a400 * (x**2) * ((y_3_3)**3) + 
            L0x2001a404 * (x**3) * ((y_3_3)**3) + 
            L0x2001a408 * (x**0) * ((y_3_3)**4) + 
            L0x2001a40c * (x**1) * ((y_3_3)**4) + 
            L0x2001a410 * (x**2) * ((y_3_3)**4) + 
            L0x2001a414 * (x**3) * ((y_3_3)**4) + 
            L0x2001a418 * (x**0) * ((y_3_3)**5) + 
            L0x2001a41c * (x**1) * ((y_3_3)**5) + 
            L0x2001a420 * (x**2) * ((y_3_3)**5) + 
            L0x2001a424 * (x**3) * ((y_3_3)**5) + 
            L0x2001a428 * (x**0) * ((y_3_3)**6) + 
            L0x2001a42c * (x**1) * ((y_3_3)**6) + 
            L0x2001a430 * (x**2) * ((y_3_3)**6) + 
            L0x2001a434 * (x**3) * ((y_3_3)**6) + 
            L0x2001a438 * (x**0) * ((y_3_3)**7) + 
            L0x2001a43c * (x**1) * ((y_3_3)**7) + 
            L0x2001a440 * (x**2) * ((y_3_3)**7) + 
            L0x2001a444 * (x**3) * ((y_3_3)**7)
          )
          [25570049, x**4 - y_0_25 * 710129, y_0_25 - 1],
    (* inp_poly_26 *)
    eqmod 8 * (inp_poly_26 * inp_poly_26)
          (
            L0x2001a3c8 * (x**0) * ((y_3_3)**0) + 
            L0x2001a3cc * (x**1) * ((y_3_3)**0) + 
            L0x2001a3d0 * (x**2) * ((y_3_3)**0) + 
            L0x2001a3d4 * (x**3) * ((y_3_3)**0) + 
            L0x2001a3d8 * (x**0) * ((y_3_3)**1) + 
            L0x2001a3dc * (x**1) * ((y_3_3)**1) + 
            L0x2001a3e0 * (x**2) * ((y_3_3)**1) + 
            L0x2001a3e4 * (x**3) * ((y_3_3)**1) + 
            L0x2001a3e8 * (x**0) * ((y_3_3)**2) + 
            L0x2001a3ec * (x**1) * ((y_3_3)**2) + 
            L0x2001a3f0 * (x**2) * ((y_3_3)**2) + 
            L0x2001a3f4 * (x**3) * ((y_3_3)**2) + 
            L0x2001a3f8 * (x**0) * ((y_3_3)**3) + 
            L0x2001a3fc * (x**1) * ((y_3_3)**3) + 
            L0x2001a400 * (x**2) * ((y_3_3)**3) + 
            L0x2001a404 * (x**3) * ((y_3_3)**3) + 
            L0x2001a408 * (x**0) * ((y_3_3)**4) + 
            L0x2001a40c * (x**1) * ((y_3_3)**4) + 
            L0x2001a410 * (x**2) * ((y_3_3)**4) + 
            L0x2001a414 * (x**3) * ((y_3_3)**4) + 
            L0x2001a418 * (x**0) * ((y_3_3)**5) + 
            L0x2001a41c * (x**1) * ((y_3_3)**5) + 
            L0x2001a420 * (x**2) * ((y_3_3)**5) + 
            L0x2001a424 * (x**3) * ((y_3_3)**5) + 
            L0x2001a428 * (x**0) * ((y_3_3)**6) + 
            L0x2001a42c * (x**1) * ((y_3_3)**6) + 
            L0x2001a430 * (x**2) * ((y_3_3)**6) + 
            L0x2001a434 * (x**3) * ((y_3_3)**6) + 
            L0x2001a438 * (x**0) * ((y_3_3)**7) + 
            L0x2001a43c * (x**1) * ((y_3_3)**7) + 
            L0x2001a440 * (x**2) * ((y_3_3)**7) + 
            L0x2001a444 * (x**3) * ((y_3_3)**7)
          )
          [25570049, x**4 - y_0_26 * 4519508, y_0_26 - 1],
    (* inp_poly_27 *)
    eqmod 8 * (inp_poly_27 * inp_poly_27)
          (
            L0x2001a3c8 * (x**0) * ((y_3_3)**0) + 
            L0x2001a3cc * (x**1) * ((y_3_3)**0) + 
            L0x2001a3d0 * (x**2) * ((y_3_3)**0) + 
            L0x2001a3d4 * (x**3) * ((y_3_3)**0) + 
            L0x2001a3d8 * (x**0) * ((y_3_3)**1) + 
            L0x2001a3dc * (x**1) * ((y_3_3)**1) + 
            L0x2001a3e0 * (x**2) * ((y_3_3)**1) + 
            L0x2001a3e4 * (x**3) * ((y_3_3)**1) + 
            L0x2001a3e8 * (x**0) * ((y_3_3)**2) + 
            L0x2001a3ec * (x**1) * ((y_3_3)**2) + 
            L0x2001a3f0 * (x**2) * ((y_3_3)**2) + 
            L0x2001a3f4 * (x**3) * ((y_3_3)**2) + 
            L0x2001a3f8 * (x**0) * ((y_3_3)**3) + 
            L0x2001a3fc * (x**1) * ((y_3_3)**3) + 
            L0x2001a400 * (x**2) * ((y_3_3)**3) + 
            L0x2001a404 * (x**3) * ((y_3_3)**3) + 
            L0x2001a408 * (x**0) * ((y_3_3)**4) + 
            L0x2001a40c * (x**1) * ((y_3_3)**4) + 
            L0x2001a410 * (x**2) * ((y_3_3)**4) + 
            L0x2001a414 * (x**3) * ((y_3_3)**4) + 
            L0x2001a418 * (x**0) * ((y_3_3)**5) + 
            L0x2001a41c * (x**1) * ((y_3_3)**5) + 
            L0x2001a420 * (x**2) * ((y_3_3)**5) + 
            L0x2001a424 * (x**3) * ((y_3_3)**5) + 
            L0x2001a428 * (x**0) * ((y_3_3)**6) + 
            L0x2001a42c * (x**1) * ((y_3_3)**6) + 
            L0x2001a430 * (x**2) * ((y_3_3)**6) + 
            L0x2001a434 * (x**3) * ((y_3_3)**6) + 
            L0x2001a438 * (x**0) * ((y_3_3)**7) + 
            L0x2001a43c * (x**1) * ((y_3_3)**7) + 
            L0x2001a440 * (x**2) * ((y_3_3)**7) + 
            L0x2001a444 * (x**3) * ((y_3_3)**7)
          )
          [25570049, x**4 - y_0_27 * 21050541, y_0_27 - 1],
    (* inp_poly_28 *)
    eqmod 8 * (inp_poly_28 * inp_poly_28)
          (
            L0x2001a3c8 * (x**0) * ((y_3_3)**0) + 
            L0x2001a3cc * (x**1) * ((y_3_3)**0) + 
            L0x2001a3d0 * (x**2) * ((y_3_3)**0) + 
            L0x2001a3d4 * (x**3) * ((y_3_3)**0) + 
            L0x2001a3d8 * (x**0) * ((y_3_3)**1) + 
            L0x2001a3dc * (x**1) * ((y_3_3)**1) + 
            L0x2001a3e0 * (x**2) * ((y_3_3)**1) + 
            L0x2001a3e4 * (x**3) * ((y_3_3)**1) + 
            L0x2001a3e8 * (x**0) * ((y_3_3)**2) + 
            L0x2001a3ec * (x**1) * ((y_3_3)**2) + 
            L0x2001a3f0 * (x**2) * ((y_3_3)**2) + 
            L0x2001a3f4 * (x**3) * ((y_3_3)**2) + 
            L0x2001a3f8 * (x**0) * ((y_3_3)**3) + 
            L0x2001a3fc * (x**1) * ((y_3_3)**3) + 
            L0x2001a400 * (x**2) * ((y_3_3)**3) + 
            L0x2001a404 * (x**3) * ((y_3_3)**3) + 
            L0x2001a408 * (x**0) * ((y_3_3)**4) + 
            L0x2001a40c * (x**1) * ((y_3_3)**4) + 
            L0x2001a410 * (x**2) * ((y_3_3)**4) + 
            L0x2001a414 * (x**3) * ((y_3_3)**4) + 
            L0x2001a418 * (x**0) * ((y_3_3)**5) + 
            L0x2001a41c * (x**1) * ((y_3_3)**5) + 
            L0x2001a420 * (x**2) * ((y_3_3)**5) + 
            L0x2001a424 * (x**3) * ((y_3_3)**5) + 
            L0x2001a428 * (x**0) * ((y_3_3)**6) + 
            L0x2001a42c * (x**1) * ((y_3_3)**6) + 
            L0x2001a430 * (x**2) * ((y_3_3)**6) + 
            L0x2001a434 * (x**3) * ((y_3_3)**6) + 
            L0x2001a438 * (x**0) * ((y_3_3)**7) + 
            L0x2001a43c * (x**1) * ((y_3_3)**7) + 
            L0x2001a440 * (x**2) * ((y_3_3)**7) + 
            L0x2001a444 * (x**3) * ((y_3_3)**7)
          )
          [25570049, x**4 - y_0_28 * 1712131, y_0_28 - 1],
    (* inp_poly_29 *)
    eqmod 8 * (inp_poly_29 * inp_poly_29)
          (
            L0x2001a3c8 * (x**0) * ((y_3_3)**0) + 
            L0x2001a3cc * (x**1) * ((y_3_3)**0) + 
            L0x2001a3d0 * (x**2) * ((y_3_3)**0) + 
            L0x2001a3d4 * (x**3) * ((y_3_3)**0) + 
            L0x2001a3d8 * (x**0) * ((y_3_3)**1) + 
            L0x2001a3dc * (x**1) * ((y_3_3)**1) + 
            L0x2001a3e0 * (x**2) * ((y_3_3)**1) + 
            L0x2001a3e4 * (x**3) * ((y_3_3)**1) + 
            L0x2001a3e8 * (x**0) * ((y_3_3)**2) + 
            L0x2001a3ec * (x**1) * ((y_3_3)**2) + 
            L0x2001a3f0 * (x**2) * ((y_3_3)**2) + 
            L0x2001a3f4 * (x**3) * ((y_3_3)**2) + 
            L0x2001a3f8 * (x**0) * ((y_3_3)**3) + 
            L0x2001a3fc * (x**1) * ((y_3_3)**3) + 
            L0x2001a400 * (x**2) * ((y_3_3)**3) + 
            L0x2001a404 * (x**3) * ((y_3_3)**3) + 
            L0x2001a408 * (x**0) * ((y_3_3)**4) + 
            L0x2001a40c * (x**1) * ((y_3_3)**4) + 
            L0x2001a410 * (x**2) * ((y_3_3)**4) + 
            L0x2001a414 * (x**3) * ((y_3_3)**4) + 
            L0x2001a418 * (x**0) * ((y_3_3)**5) + 
            L0x2001a41c * (x**1) * ((y_3_3)**5) + 
            L0x2001a420 * (x**2) * ((y_3_3)**5) + 
            L0x2001a424 * (x**3) * ((y_3_3)**5) + 
            L0x2001a428 * (x**0) * ((y_3_3)**6) + 
            L0x2001a42c * (x**1) * ((y_3_3)**6) + 
            L0x2001a430 * (x**2) * ((y_3_3)**6) + 
            L0x2001a434 * (x**3) * ((y_3_3)**6) + 
            L0x2001a438 * (x**0) * ((y_3_3)**7) + 
            L0x2001a43c * (x**1) * ((y_3_3)**7) + 
            L0x2001a440 * (x**2) * ((y_3_3)**7) + 
            L0x2001a444 * (x**3) * ((y_3_3)**7)
          )
          [25570049, x**4 - y_0_29 * 23857918, y_0_29 - 1],
    (* inp_poly_30 *)
    eqmod 8 * (inp_poly_30 * inp_poly_30)
          (
            L0x2001a3c8 * (x**0) * ((y_3_3)**0) + 
            L0x2001a3cc * (x**1) * ((y_3_3)**0) + 
            L0x2001a3d0 * (x**2) * ((y_3_3)**0) + 
            L0x2001a3d4 * (x**3) * ((y_3_3)**0) + 
            L0x2001a3d8 * (x**0) * ((y_3_3)**1) + 
            L0x2001a3dc * (x**1) * ((y_3_3)**1) + 
            L0x2001a3e0 * (x**2) * ((y_3_3)**1) + 
            L0x2001a3e4 * (x**3) * ((y_3_3)**1) + 
            L0x2001a3e8 * (x**0) * ((y_3_3)**2) + 
            L0x2001a3ec * (x**1) * ((y_3_3)**2) + 
            L0x2001a3f0 * (x**2) * ((y_3_3)**2) + 
            L0x2001a3f4 * (x**3) * ((y_3_3)**2) + 
            L0x2001a3f8 * (x**0) * ((y_3_3)**3) + 
            L0x2001a3fc * (x**1) * ((y_3_3)**3) + 
            L0x2001a400 * (x**2) * ((y_3_3)**3) + 
            L0x2001a404 * (x**3) * ((y_3_3)**3) + 
            L0x2001a408 * (x**0) * ((y_3_3)**4) + 
            L0x2001a40c * (x**1) * ((y_3_3)**4) + 
            L0x2001a410 * (x**2) * ((y_3_3)**4) + 
            L0x2001a414 * (x**3) * ((y_3_3)**4) + 
            L0x2001a418 * (x**0) * ((y_3_3)**5) + 
            L0x2001a41c * (x**1) * ((y_3_3)**5) + 
            L0x2001a420 * (x**2) * ((y_3_3)**5) + 
            L0x2001a424 * (x**3) * ((y_3_3)**5) + 
            L0x2001a428 * (x**0) * ((y_3_3)**6) + 
            L0x2001a42c * (x**1) * ((y_3_3)**6) + 
            L0x2001a430 * (x**2) * ((y_3_3)**6) + 
            L0x2001a434 * (x**3) * ((y_3_3)**6) + 
            L0x2001a438 * (x**0) * ((y_3_3)**7) + 
            L0x2001a43c * (x**1) * ((y_3_3)**7) + 
            L0x2001a440 * (x**2) * ((y_3_3)**7) + 
            L0x2001a444 * (x**3) * ((y_3_3)**7)
          )
          [25570049, x**4 - y_0_30 * 14036261, y_0_30 - 1],
    (* inp_poly_31 *)
    eqmod 8 * (inp_poly_31 * inp_poly_31)
          (
            L0x2001a3c8 * (x**0) * ((y_3_3)**0) + 
            L0x2001a3cc * (x**1) * ((y_3_3)**0) + 
            L0x2001a3d0 * (x**2) * ((y_3_3)**0) + 
            L0x2001a3d4 * (x**3) * ((y_3_3)**0) + 
            L0x2001a3d8 * (x**0) * ((y_3_3)**1) + 
            L0x2001a3dc * (x**1) * ((y_3_3)**1) + 
            L0x2001a3e0 * (x**2) * ((y_3_3)**1) + 
            L0x2001a3e4 * (x**3) * ((y_3_3)**1) + 
            L0x2001a3e8 * (x**0) * ((y_3_3)**2) + 
            L0x2001a3ec * (x**1) * ((y_3_3)**2) + 
            L0x2001a3f0 * (x**2) * ((y_3_3)**2) + 
            L0x2001a3f4 * (x**3) * ((y_3_3)**2) + 
            L0x2001a3f8 * (x**0) * ((y_3_3)**3) + 
            L0x2001a3fc * (x**1) * ((y_3_3)**3) + 
            L0x2001a400 * (x**2) * ((y_3_3)**3) + 
            L0x2001a404 * (x**3) * ((y_3_3)**3) + 
            L0x2001a408 * (x**0) * ((y_3_3)**4) + 
            L0x2001a40c * (x**1) * ((y_3_3)**4) + 
            L0x2001a410 * (x**2) * ((y_3_3)**4) + 
            L0x2001a414 * (x**3) * ((y_3_3)**4) + 
            L0x2001a418 * (x**0) * ((y_3_3)**5) + 
            L0x2001a41c * (x**1) * ((y_3_3)**5) + 
            L0x2001a420 * (x**2) * ((y_3_3)**5) + 
            L0x2001a424 * (x**3) * ((y_3_3)**5) + 
            L0x2001a428 * (x**0) * ((y_3_3)**6) + 
            L0x2001a42c * (x**1) * ((y_3_3)**6) + 
            L0x2001a430 * (x**2) * ((y_3_3)**6) + 
            L0x2001a434 * (x**3) * ((y_3_3)**6) + 
            L0x2001a438 * (x**0) * ((y_3_3)**7) + 
            L0x2001a43c * (x**1) * ((y_3_3)**7) + 
            L0x2001a440 * (x**2) * ((y_3_3)**7) + 
            L0x2001a444 * (x**3) * ((y_3_3)**7)
          )
          [25570049, x**4 - y_0_31 * 11533788, y_0_31 - 1]
  ] prove with [cuts [0]]
  &&
  true
;

cut (* 9 *)
  true && true;

(* slice 4 *)
cut (* 10 *)
  and [
    (* inp_poly_32 *)
    eqmod 8 * (inp_poly_32 * inp_poly_32)
          (
            L0x2001a448 * (x**0) * ((y_3_4)**0) + 
            L0x2001a44c * (x**1) * ((y_3_4)**0) + 
            L0x2001a450 * (x**2) * ((y_3_4)**0) + 
            L0x2001a454 * (x**3) * ((y_3_4)**0) + 
            L0x2001a458 * (x**0) * ((y_3_4)**1) + 
            L0x2001a45c * (x**1) * ((y_3_4)**1) + 
            L0x2001a460 * (x**2) * ((y_3_4)**1) + 
            L0x2001a464 * (x**3) * ((y_3_4)**1) + 
            L0x2001a468 * (x**0) * ((y_3_4)**2) + 
            L0x2001a46c * (x**1) * ((y_3_4)**2) + 
            L0x2001a470 * (x**2) * ((y_3_4)**2) + 
            L0x2001a474 * (x**3) * ((y_3_4)**2) + 
            L0x2001a478 * (x**0) * ((y_3_4)**3) + 
            L0x2001a47c * (x**1) * ((y_3_4)**3) + 
            L0x2001a480 * (x**2) * ((y_3_4)**3) + 
            L0x2001a484 * (x**3) * ((y_3_4)**3) + 
            L0x2001a488 * (x**0) * ((y_3_4)**4) + 
            L0x2001a48c * (x**1) * ((y_3_4)**4) + 
            L0x2001a490 * (x**2) * ((y_3_4)**4) + 
            L0x2001a494 * (x**3) * ((y_3_4)**4) + 
            L0x2001a498 * (x**0) * ((y_3_4)**5) + 
            L0x2001a49c * (x**1) * ((y_3_4)**5) + 
            L0x2001a4a0 * (x**2) * ((y_3_4)**5) + 
            L0x2001a4a4 * (x**3) * ((y_3_4)**5) + 
            L0x2001a4a8 * (x**0) * ((y_3_4)**6) + 
            L0x2001a4ac * (x**1) * ((y_3_4)**6) + 
            L0x2001a4b0 * (x**2) * ((y_3_4)**6) + 
            L0x2001a4b4 * (x**3) * ((y_3_4)**6) + 
            L0x2001a4b8 * (x**0) * ((y_3_4)**7) + 
            L0x2001a4bc * (x**1) * ((y_3_4)**7) + 
            L0x2001a4c0 * (x**2) * ((y_3_4)**7) + 
            L0x2001a4c4 * (x**3) * ((y_3_4)**7)
          )
          [25570049, x**4 - y_0_32 * 7847101, y_0_32 - 1],
    (* inp_poly_33 *)
    eqmod 8 * (inp_poly_33 * inp_poly_33)
          (
            L0x2001a448 * (x**0) * ((y_3_4)**0) + 
            L0x2001a44c * (x**1) * ((y_3_4)**0) + 
            L0x2001a450 * (x**2) * ((y_3_4)**0) + 
            L0x2001a454 * (x**3) * ((y_3_4)**0) + 
            L0x2001a458 * (x**0) * ((y_3_4)**1) + 
            L0x2001a45c * (x**1) * ((y_3_4)**1) + 
            L0x2001a460 * (x**2) * ((y_3_4)**1) + 
            L0x2001a464 * (x**3) * ((y_3_4)**1) + 
            L0x2001a468 * (x**0) * ((y_3_4)**2) + 
            L0x2001a46c * (x**1) * ((y_3_4)**2) + 
            L0x2001a470 * (x**2) * ((y_3_4)**2) + 
            L0x2001a474 * (x**3) * ((y_3_4)**2) + 
            L0x2001a478 * (x**0) * ((y_3_4)**3) + 
            L0x2001a47c * (x**1) * ((y_3_4)**3) + 
            L0x2001a480 * (x**2) * ((y_3_4)**3) + 
            L0x2001a484 * (x**3) * ((y_3_4)**3) + 
            L0x2001a488 * (x**0) * ((y_3_4)**4) + 
            L0x2001a48c * (x**1) * ((y_3_4)**4) + 
            L0x2001a490 * (x**2) * ((y_3_4)**4) + 
            L0x2001a494 * (x**3) * ((y_3_4)**4) + 
            L0x2001a498 * (x**0) * ((y_3_4)**5) + 
            L0x2001a49c * (x**1) * ((y_3_4)**5) + 
            L0x2001a4a0 * (x**2) * ((y_3_4)**5) + 
            L0x2001a4a4 * (x**3) * ((y_3_4)**5) + 
            L0x2001a4a8 * (x**0) * ((y_3_4)**6) + 
            L0x2001a4ac * (x**1) * ((y_3_4)**6) + 
            L0x2001a4b0 * (x**2) * ((y_3_4)**6) + 
            L0x2001a4b4 * (x**3) * ((y_3_4)**6) + 
            L0x2001a4b8 * (x**0) * ((y_3_4)**7) + 
            L0x2001a4bc * (x**1) * ((y_3_4)**7) + 
            L0x2001a4c0 * (x**2) * ((y_3_4)**7) + 
            L0x2001a4c4 * (x**3) * ((y_3_4)**7)
          )
          [25570049, x**4 - y_0_33 * 17722948, y_0_33 - 1],
    (* inp_poly_34 *)
    eqmod 8 * (inp_poly_34 * inp_poly_34)
          (
            L0x2001a448 * (x**0) * ((y_3_4)**0) + 
            L0x2001a44c * (x**1) * ((y_3_4)**0) + 
            L0x2001a450 * (x**2) * ((y_3_4)**0) + 
            L0x2001a454 * (x**3) * ((y_3_4)**0) + 
            L0x2001a458 * (x**0) * ((y_3_4)**1) + 
            L0x2001a45c * (x**1) * ((y_3_4)**1) + 
            L0x2001a460 * (x**2) * ((y_3_4)**1) + 
            L0x2001a464 * (x**3) * ((y_3_4)**1) + 
            L0x2001a468 * (x**0) * ((y_3_4)**2) + 
            L0x2001a46c * (x**1) * ((y_3_4)**2) + 
            L0x2001a470 * (x**2) * ((y_3_4)**2) + 
            L0x2001a474 * (x**3) * ((y_3_4)**2) + 
            L0x2001a478 * (x**0) * ((y_3_4)**3) + 
            L0x2001a47c * (x**1) * ((y_3_4)**3) + 
            L0x2001a480 * (x**2) * ((y_3_4)**3) + 
            L0x2001a484 * (x**3) * ((y_3_4)**3) + 
            L0x2001a488 * (x**0) * ((y_3_4)**4) + 
            L0x2001a48c * (x**1) * ((y_3_4)**4) + 
            L0x2001a490 * (x**2) * ((y_3_4)**4) + 
            L0x2001a494 * (x**3) * ((y_3_4)**4) + 
            L0x2001a498 * (x**0) * ((y_3_4)**5) + 
            L0x2001a49c * (x**1) * ((y_3_4)**5) + 
            L0x2001a4a0 * (x**2) * ((y_3_4)**5) + 
            L0x2001a4a4 * (x**3) * ((y_3_4)**5) + 
            L0x2001a4a8 * (x**0) * ((y_3_4)**6) + 
            L0x2001a4ac * (x**1) * ((y_3_4)**6) + 
            L0x2001a4b0 * (x**2) * ((y_3_4)**6) + 
            L0x2001a4b4 * (x**3) * ((y_3_4)**6) + 
            L0x2001a4b8 * (x**0) * ((y_3_4)**7) + 
            L0x2001a4bc * (x**1) * ((y_3_4)**7) + 
            L0x2001a4c0 * (x**2) * ((y_3_4)**7) + 
            L0x2001a4c4 * (x**3) * ((y_3_4)**7)
          )
          [25570049, x**4 - y_0_34 * 19240139, y_0_34 - 1],
    (* inp_poly_35 *)
    eqmod 8 * (inp_poly_35 * inp_poly_35)
          (
            L0x2001a448 * (x**0) * ((y_3_4)**0) + 
            L0x2001a44c * (x**1) * ((y_3_4)**0) + 
            L0x2001a450 * (x**2) * ((y_3_4)**0) + 
            L0x2001a454 * (x**3) * ((y_3_4)**0) + 
            L0x2001a458 * (x**0) * ((y_3_4)**1) + 
            L0x2001a45c * (x**1) * ((y_3_4)**1) + 
            L0x2001a460 * (x**2) * ((y_3_4)**1) + 
            L0x2001a464 * (x**3) * ((y_3_4)**1) + 
            L0x2001a468 * (x**0) * ((y_3_4)**2) + 
            L0x2001a46c * (x**1) * ((y_3_4)**2) + 
            L0x2001a470 * (x**2) * ((y_3_4)**2) + 
            L0x2001a474 * (x**3) * ((y_3_4)**2) + 
            L0x2001a478 * (x**0) * ((y_3_4)**3) + 
            L0x2001a47c * (x**1) * ((y_3_4)**3) + 
            L0x2001a480 * (x**2) * ((y_3_4)**3) + 
            L0x2001a484 * (x**3) * ((y_3_4)**3) + 
            L0x2001a488 * (x**0) * ((y_3_4)**4) + 
            L0x2001a48c * (x**1) * ((y_3_4)**4) + 
            L0x2001a490 * (x**2) * ((y_3_4)**4) + 
            L0x2001a494 * (x**3) * ((y_3_4)**4) + 
            L0x2001a498 * (x**0) * ((y_3_4)**5) + 
            L0x2001a49c * (x**1) * ((y_3_4)**5) + 
            L0x2001a4a0 * (x**2) * ((y_3_4)**5) + 
            L0x2001a4a4 * (x**3) * ((y_3_4)**5) + 
            L0x2001a4a8 * (x**0) * ((y_3_4)**6) + 
            L0x2001a4ac * (x**1) * ((y_3_4)**6) + 
            L0x2001a4b0 * (x**2) * ((y_3_4)**6) + 
            L0x2001a4b4 * (x**3) * ((y_3_4)**6) + 
            L0x2001a4b8 * (x**0) * ((y_3_4)**7) + 
            L0x2001a4bc * (x**1) * ((y_3_4)**7) + 
            L0x2001a4c0 * (x**2) * ((y_3_4)**7) + 
            L0x2001a4c4 * (x**3) * ((y_3_4)**7)
          )
          [25570049, x**4 - y_0_35 * 6329910, y_0_35 - 1],
    (* inp_poly_36 *)
    eqmod 8 * (inp_poly_36 * inp_poly_36)
          (
            L0x2001a448 * (x**0) * ((y_3_4)**0) + 
            L0x2001a44c * (x**1) * ((y_3_4)**0) + 
            L0x2001a450 * (x**2) * ((y_3_4)**0) + 
            L0x2001a454 * (x**3) * ((y_3_4)**0) + 
            L0x2001a458 * (x**0) * ((y_3_4)**1) + 
            L0x2001a45c * (x**1) * ((y_3_4)**1) + 
            L0x2001a460 * (x**2) * ((y_3_4)**1) + 
            L0x2001a464 * (x**3) * ((y_3_4)**1) + 
            L0x2001a468 * (x**0) * ((y_3_4)**2) + 
            L0x2001a46c * (x**1) * ((y_3_4)**2) + 
            L0x2001a470 * (x**2) * ((y_3_4)**2) + 
            L0x2001a474 * (x**3) * ((y_3_4)**2) + 
            L0x2001a478 * (x**0) * ((y_3_4)**3) + 
            L0x2001a47c * (x**1) * ((y_3_4)**3) + 
            L0x2001a480 * (x**2) * ((y_3_4)**3) + 
            L0x2001a484 * (x**3) * ((y_3_4)**3) + 
            L0x2001a488 * (x**0) * ((y_3_4)**4) + 
            L0x2001a48c * (x**1) * ((y_3_4)**4) + 
            L0x2001a490 * (x**2) * ((y_3_4)**4) + 
            L0x2001a494 * (x**3) * ((y_3_4)**4) + 
            L0x2001a498 * (x**0) * ((y_3_4)**5) + 
            L0x2001a49c * (x**1) * ((y_3_4)**5) + 
            L0x2001a4a0 * (x**2) * ((y_3_4)**5) + 
            L0x2001a4a4 * (x**3) * ((y_3_4)**5) + 
            L0x2001a4a8 * (x**0) * ((y_3_4)**6) + 
            L0x2001a4ac * (x**1) * ((y_3_4)**6) + 
            L0x2001a4b0 * (x**2) * ((y_3_4)**6) + 
            L0x2001a4b4 * (x**3) * ((y_3_4)**6) + 
            L0x2001a4b8 * (x**0) * ((y_3_4)**7) + 
            L0x2001a4bc * (x**1) * ((y_3_4)**7) + 
            L0x2001a4c0 * (x**2) * ((y_3_4)**7) + 
            L0x2001a4c4 * (x**3) * ((y_3_4)**7)
          )
          [25570049, x**4 - y_0_36 * 5192558, y_0_36 - 1],
    (* inp_poly_37 *)
    eqmod 8 * (inp_poly_37 * inp_poly_37)
          (
            L0x2001a448 * (x**0) * ((y_3_4)**0) + 
            L0x2001a44c * (x**1) * ((y_3_4)**0) + 
            L0x2001a450 * (x**2) * ((y_3_4)**0) + 
            L0x2001a454 * (x**3) * ((y_3_4)**0) + 
            L0x2001a458 * (x**0) * ((y_3_4)**1) + 
            L0x2001a45c * (x**1) * ((y_3_4)**1) + 
            L0x2001a460 * (x**2) * ((y_3_4)**1) + 
            L0x2001a464 * (x**3) * ((y_3_4)**1) + 
            L0x2001a468 * (x**0) * ((y_3_4)**2) + 
            L0x2001a46c * (x**1) * ((y_3_4)**2) + 
            L0x2001a470 * (x**2) * ((y_3_4)**2) + 
            L0x2001a474 * (x**3) * ((y_3_4)**2) + 
            L0x2001a478 * (x**0) * ((y_3_4)**3) + 
            L0x2001a47c * (x**1) * ((y_3_4)**3) + 
            L0x2001a480 * (x**2) * ((y_3_4)**3) + 
            L0x2001a484 * (x**3) * ((y_3_4)**3) + 
            L0x2001a488 * (x**0) * ((y_3_4)**4) + 
            L0x2001a48c * (x**1) * ((y_3_4)**4) + 
            L0x2001a490 * (x**2) * ((y_3_4)**4) + 
            L0x2001a494 * (x**3) * ((y_3_4)**4) + 
            L0x2001a498 * (x**0) * ((y_3_4)**5) + 
            L0x2001a49c * (x**1) * ((y_3_4)**5) + 
            L0x2001a4a0 * (x**2) * ((y_3_4)**5) + 
            L0x2001a4a4 * (x**3) * ((y_3_4)**5) + 
            L0x2001a4a8 * (x**0) * ((y_3_4)**6) + 
            L0x2001a4ac * (x**1) * ((y_3_4)**6) + 
            L0x2001a4b0 * (x**2) * ((y_3_4)**6) + 
            L0x2001a4b4 * (x**3) * ((y_3_4)**6) + 
            L0x2001a4b8 * (x**0) * ((y_3_4)**7) + 
            L0x2001a4bc * (x**1) * ((y_3_4)**7) + 
            L0x2001a4c0 * (x**2) * ((y_3_4)**7) + 
            L0x2001a4c4 * (x**3) * ((y_3_4)**7)
          )
          [25570049, x**4 - y_0_37 * 20377491, y_0_37 - 1],
    (* inp_poly_38 *)
    eqmod 8 * (inp_poly_38 * inp_poly_38)
          (
            L0x2001a448 * (x**0) * ((y_3_4)**0) + 
            L0x2001a44c * (x**1) * ((y_3_4)**0) + 
            L0x2001a450 * (x**2) * ((y_3_4)**0) + 
            L0x2001a454 * (x**3) * ((y_3_4)**0) + 
            L0x2001a458 * (x**0) * ((y_3_4)**1) + 
            L0x2001a45c * (x**1) * ((y_3_4)**1) + 
            L0x2001a460 * (x**2) * ((y_3_4)**1) + 
            L0x2001a464 * (x**3) * ((y_3_4)**1) + 
            L0x2001a468 * (x**0) * ((y_3_4)**2) + 
            L0x2001a46c * (x**1) * ((y_3_4)**2) + 
            L0x2001a470 * (x**2) * ((y_3_4)**2) + 
            L0x2001a474 * (x**3) * ((y_3_4)**2) + 
            L0x2001a478 * (x**0) * ((y_3_4)**3) + 
            L0x2001a47c * (x**1) * ((y_3_4)**3) + 
            L0x2001a480 * (x**2) * ((y_3_4)**3) + 
            L0x2001a484 * (x**3) * ((y_3_4)**3) + 
            L0x2001a488 * (x**0) * ((y_3_4)**4) + 
            L0x2001a48c * (x**1) * ((y_3_4)**4) + 
            L0x2001a490 * (x**2) * ((y_3_4)**4) + 
            L0x2001a494 * (x**3) * ((y_3_4)**4) + 
            L0x2001a498 * (x**0) * ((y_3_4)**5) + 
            L0x2001a49c * (x**1) * ((y_3_4)**5) + 
            L0x2001a4a0 * (x**2) * ((y_3_4)**5) + 
            L0x2001a4a4 * (x**3) * ((y_3_4)**5) + 
            L0x2001a4a8 * (x**0) * ((y_3_4)**6) + 
            L0x2001a4ac * (x**1) * ((y_3_4)**6) + 
            L0x2001a4b0 * (x**2) * ((y_3_4)**6) + 
            L0x2001a4b4 * (x**3) * ((y_3_4)**6) + 
            L0x2001a4b8 * (x**0) * ((y_3_4)**7) + 
            L0x2001a4bc * (x**1) * ((y_3_4)**7) + 
            L0x2001a4c0 * (x**2) * ((y_3_4)**7) + 
            L0x2001a4c4 * (x**3) * ((y_3_4)**7)
          )
          [25570049, x**4 - y_0_38 * 25163199, y_0_38 - 1],
    (* inp_poly_39 *)
    eqmod 8 * (inp_poly_39 * inp_poly_39)
          (
            L0x2001a448 * (x**0) * ((y_3_4)**0) + 
            L0x2001a44c * (x**1) * ((y_3_4)**0) + 
            L0x2001a450 * (x**2) * ((y_3_4)**0) + 
            L0x2001a454 * (x**3) * ((y_3_4)**0) + 
            L0x2001a458 * (x**0) * ((y_3_4)**1) + 
            L0x2001a45c * (x**1) * ((y_3_4)**1) + 
            L0x2001a460 * (x**2) * ((y_3_4)**1) + 
            L0x2001a464 * (x**3) * ((y_3_4)**1) + 
            L0x2001a468 * (x**0) * ((y_3_4)**2) + 
            L0x2001a46c * (x**1) * ((y_3_4)**2) + 
            L0x2001a470 * (x**2) * ((y_3_4)**2) + 
            L0x2001a474 * (x**3) * ((y_3_4)**2) + 
            L0x2001a478 * (x**0) * ((y_3_4)**3) + 
            L0x2001a47c * (x**1) * ((y_3_4)**3) + 
            L0x2001a480 * (x**2) * ((y_3_4)**3) + 
            L0x2001a484 * (x**3) * ((y_3_4)**3) + 
            L0x2001a488 * (x**0) * ((y_3_4)**4) + 
            L0x2001a48c * (x**1) * ((y_3_4)**4) + 
            L0x2001a490 * (x**2) * ((y_3_4)**4) + 
            L0x2001a494 * (x**3) * ((y_3_4)**4) + 
            L0x2001a498 * (x**0) * ((y_3_4)**5) + 
            L0x2001a49c * (x**1) * ((y_3_4)**5) + 
            L0x2001a4a0 * (x**2) * ((y_3_4)**5) + 
            L0x2001a4a4 * (x**3) * ((y_3_4)**5) + 
            L0x2001a4a8 * (x**0) * ((y_3_4)**6) + 
            L0x2001a4ac * (x**1) * ((y_3_4)**6) + 
            L0x2001a4b0 * (x**2) * ((y_3_4)**6) + 
            L0x2001a4b4 * (x**3) * ((y_3_4)**6) + 
            L0x2001a4b8 * (x**0) * ((y_3_4)**7) + 
            L0x2001a4bc * (x**1) * ((y_3_4)**7) + 
            L0x2001a4c0 * (x**2) * ((y_3_4)**7) + 
            L0x2001a4c4 * (x**3) * ((y_3_4)**7)
          )
          [25570049, x**4 - y_0_39 * 406850, y_0_39 - 1]
  ] prove with [cuts [0]]
  &&
  true
;

cut (* 11 *)
  true && true;

(* slice 5 *)
cut (* 12 *)
  and [
    (* inp_poly_40 *)
    eqmod 8 * (inp_poly_40 * inp_poly_40)
          (
            L0x2001a4c8 * (x**0) * ((y_3_5)**0) + 
            L0x2001a4cc * (x**1) * ((y_3_5)**0) + 
            L0x2001a4d0 * (x**2) * ((y_3_5)**0) + 
            L0x2001a4d4 * (x**3) * ((y_3_5)**0) + 
            L0x2001a4d8 * (x**0) * ((y_3_5)**1) + 
            L0x2001a4dc * (x**1) * ((y_3_5)**1) + 
            L0x2001a4e0 * (x**2) * ((y_3_5)**1) + 
            L0x2001a4e4 * (x**3) * ((y_3_5)**1) + 
            L0x2001a4e8 * (x**0) * ((y_3_5)**2) + 
            L0x2001a4ec * (x**1) * ((y_3_5)**2) + 
            L0x2001a4f0 * (x**2) * ((y_3_5)**2) + 
            L0x2001a4f4 * (x**3) * ((y_3_5)**2) + 
            L0x2001a4f8 * (x**0) * ((y_3_5)**3) + 
            L0x2001a4fc * (x**1) * ((y_3_5)**3) + 
            L0x2001a500 * (x**2) * ((y_3_5)**3) + 
            L0x2001a504 * (x**3) * ((y_3_5)**3) + 
            L0x2001a508 * (x**0) * ((y_3_5)**4) + 
            L0x2001a50c * (x**1) * ((y_3_5)**4) + 
            L0x2001a510 * (x**2) * ((y_3_5)**4) + 
            L0x2001a514 * (x**3) * ((y_3_5)**4) + 
            L0x2001a518 * (x**0) * ((y_3_5)**5) + 
            L0x2001a51c * (x**1) * ((y_3_5)**5) + 
            L0x2001a520 * (x**2) * ((y_3_5)**5) + 
            L0x2001a524 * (x**3) * ((y_3_5)**5) + 
            L0x2001a528 * (x**0) * ((y_3_5)**6) + 
            L0x2001a52c * (x**1) * ((y_3_5)**6) + 
            L0x2001a530 * (x**2) * ((y_3_5)**6) + 
            L0x2001a534 * (x**3) * ((y_3_5)**6) + 
            L0x2001a538 * (x**0) * ((y_3_5)**7) + 
            L0x2001a53c * (x**1) * ((y_3_5)**7) + 
            L0x2001a540 * (x**2) * ((y_3_5)**7) + 
            L0x2001a544 * (x**3) * ((y_3_5)**7)
          )
          [25570049, x**4 - y_0_40 * 19921963, y_0_40 - 1],
    (* inp_poly_41 *)
    eqmod 8 * (inp_poly_41 * inp_poly_41)
          (
            L0x2001a4c8 * (x**0) * ((y_3_5)**0) + 
            L0x2001a4cc * (x**1) * ((y_3_5)**0) + 
            L0x2001a4d0 * (x**2) * ((y_3_5)**0) + 
            L0x2001a4d4 * (x**3) * ((y_3_5)**0) + 
            L0x2001a4d8 * (x**0) * ((y_3_5)**1) + 
            L0x2001a4dc * (x**1) * ((y_3_5)**1) + 
            L0x2001a4e0 * (x**2) * ((y_3_5)**1) + 
            L0x2001a4e4 * (x**3) * ((y_3_5)**1) + 
            L0x2001a4e8 * (x**0) * ((y_3_5)**2) + 
            L0x2001a4ec * (x**1) * ((y_3_5)**2) + 
            L0x2001a4f0 * (x**2) * ((y_3_5)**2) + 
            L0x2001a4f4 * (x**3) * ((y_3_5)**2) + 
            L0x2001a4f8 * (x**0) * ((y_3_5)**3) + 
            L0x2001a4fc * (x**1) * ((y_3_5)**3) + 
            L0x2001a500 * (x**2) * ((y_3_5)**3) + 
            L0x2001a504 * (x**3) * ((y_3_5)**3) + 
            L0x2001a508 * (x**0) * ((y_3_5)**4) + 
            L0x2001a50c * (x**1) * ((y_3_5)**4) + 
            L0x2001a510 * (x**2) * ((y_3_5)**4) + 
            L0x2001a514 * (x**3) * ((y_3_5)**4) + 
            L0x2001a518 * (x**0) * ((y_3_5)**5) + 
            L0x2001a51c * (x**1) * ((y_3_5)**5) + 
            L0x2001a520 * (x**2) * ((y_3_5)**5) + 
            L0x2001a524 * (x**3) * ((y_3_5)**5) + 
            L0x2001a528 * (x**0) * ((y_3_5)**6) + 
            L0x2001a52c * (x**1) * ((y_3_5)**6) + 
            L0x2001a530 * (x**2) * ((y_3_5)**6) + 
            L0x2001a534 * (x**3) * ((y_3_5)**6) + 
            L0x2001a538 * (x**0) * ((y_3_5)**7) + 
            L0x2001a53c * (x**1) * ((y_3_5)**7) + 
            L0x2001a540 * (x**2) * ((y_3_5)**7) + 
            L0x2001a544 * (x**3) * ((y_3_5)**7)
          )
          [25570049, x**4 - y_0_41 * 5648086, y_0_41 - 1],
    (* inp_poly_42 *)
    eqmod 8 * (inp_poly_42 * inp_poly_42)
          (
            L0x2001a4c8 * (x**0) * ((y_3_5)**0) + 
            L0x2001a4cc * (x**1) * ((y_3_5)**0) + 
            L0x2001a4d0 * (x**2) * ((y_3_5)**0) + 
            L0x2001a4d4 * (x**3) * ((y_3_5)**0) + 
            L0x2001a4d8 * (x**0) * ((y_3_5)**1) + 
            L0x2001a4dc * (x**1) * ((y_3_5)**1) + 
            L0x2001a4e0 * (x**2) * ((y_3_5)**1) + 
            L0x2001a4e4 * (x**3) * ((y_3_5)**1) + 
            L0x2001a4e8 * (x**0) * ((y_3_5)**2) + 
            L0x2001a4ec * (x**1) * ((y_3_5)**2) + 
            L0x2001a4f0 * (x**2) * ((y_3_5)**2) + 
            L0x2001a4f4 * (x**3) * ((y_3_5)**2) + 
            L0x2001a4f8 * (x**0) * ((y_3_5)**3) + 
            L0x2001a4fc * (x**1) * ((y_3_5)**3) + 
            L0x2001a500 * (x**2) * ((y_3_5)**3) + 
            L0x2001a504 * (x**3) * ((y_3_5)**3) + 
            L0x2001a508 * (x**0) * ((y_3_5)**4) + 
            L0x2001a50c * (x**1) * ((y_3_5)**4) + 
            L0x2001a510 * (x**2) * ((y_3_5)**4) + 
            L0x2001a514 * (x**3) * ((y_3_5)**4) + 
            L0x2001a518 * (x**0) * ((y_3_5)**5) + 
            L0x2001a51c * (x**1) * ((y_3_5)**5) + 
            L0x2001a520 * (x**2) * ((y_3_5)**5) + 
            L0x2001a524 * (x**3) * ((y_3_5)**5) + 
            L0x2001a528 * (x**0) * ((y_3_5)**6) + 
            L0x2001a52c * (x**1) * ((y_3_5)**6) + 
            L0x2001a530 * (x**2) * ((y_3_5)**6) + 
            L0x2001a534 * (x**3) * ((y_3_5)**6) + 
            L0x2001a538 * (x**0) * ((y_3_5)**7) + 
            L0x2001a53c * (x**1) * ((y_3_5)**7) + 
            L0x2001a540 * (x**2) * ((y_3_5)**7) + 
            L0x2001a544 * (x**3) * ((y_3_5)**7)
          )
          [25570049, x**4 - y_0_42 * 6202837, y_0_42 - 1],
    (* inp_poly_43 *)
    eqmod 8 * (inp_poly_43 * inp_poly_43)
          (
            L0x2001a4c8 * (x**0) * ((y_3_5)**0) + 
            L0x2001a4cc * (x**1) * ((y_3_5)**0) + 
            L0x2001a4d0 * (x**2) * ((y_3_5)**0) + 
            L0x2001a4d4 * (x**3) * ((y_3_5)**0) + 
            L0x2001a4d8 * (x**0) * ((y_3_5)**1) + 
            L0x2001a4dc * (x**1) * ((y_3_5)**1) + 
            L0x2001a4e0 * (x**2) * ((y_3_5)**1) + 
            L0x2001a4e4 * (x**3) * ((y_3_5)**1) + 
            L0x2001a4e8 * (x**0) * ((y_3_5)**2) + 
            L0x2001a4ec * (x**1) * ((y_3_5)**2) + 
            L0x2001a4f0 * (x**2) * ((y_3_5)**2) + 
            L0x2001a4f4 * (x**3) * ((y_3_5)**2) + 
            L0x2001a4f8 * (x**0) * ((y_3_5)**3) + 
            L0x2001a4fc * (x**1) * ((y_3_5)**3) + 
            L0x2001a500 * (x**2) * ((y_3_5)**3) + 
            L0x2001a504 * (x**3) * ((y_3_5)**3) + 
            L0x2001a508 * (x**0) * ((y_3_5)**4) + 
            L0x2001a50c * (x**1) * ((y_3_5)**4) + 
            L0x2001a510 * (x**2) * ((y_3_5)**4) + 
            L0x2001a514 * (x**3) * ((y_3_5)**4) + 
            L0x2001a518 * (x**0) * ((y_3_5)**5) + 
            L0x2001a51c * (x**1) * ((y_3_5)**5) + 
            L0x2001a520 * (x**2) * ((y_3_5)**5) + 
            L0x2001a524 * (x**3) * ((y_3_5)**5) + 
            L0x2001a528 * (x**0) * ((y_3_5)**6) + 
            L0x2001a52c * (x**1) * ((y_3_5)**6) + 
            L0x2001a530 * (x**2) * ((y_3_5)**6) + 
            L0x2001a534 * (x**3) * ((y_3_5)**6) + 
            L0x2001a538 * (x**0) * ((y_3_5)**7) + 
            L0x2001a53c * (x**1) * ((y_3_5)**7) + 
            L0x2001a540 * (x**2) * ((y_3_5)**7) + 
            L0x2001a544 * (x**3) * ((y_3_5)**7)
          )
          [25570049, x**4 - y_0_43 * 19367212, y_0_43 - 1],
    (* inp_poly_44 *)
    eqmod 8 * (inp_poly_44 * inp_poly_44)
          (
            L0x2001a4c8 * (x**0) * ((y_3_5)**0) + 
            L0x2001a4cc * (x**1) * ((y_3_5)**0) + 
            L0x2001a4d0 * (x**2) * ((y_3_5)**0) + 
            L0x2001a4d4 * (x**3) * ((y_3_5)**0) + 
            L0x2001a4d8 * (x**0) * ((y_3_5)**1) + 
            L0x2001a4dc * (x**1) * ((y_3_5)**1) + 
            L0x2001a4e0 * (x**2) * ((y_3_5)**1) + 
            L0x2001a4e4 * (x**3) * ((y_3_5)**1) + 
            L0x2001a4e8 * (x**0) * ((y_3_5)**2) + 
            L0x2001a4ec * (x**1) * ((y_3_5)**2) + 
            L0x2001a4f0 * (x**2) * ((y_3_5)**2) + 
            L0x2001a4f4 * (x**3) * ((y_3_5)**2) + 
            L0x2001a4f8 * (x**0) * ((y_3_5)**3) + 
            L0x2001a4fc * (x**1) * ((y_3_5)**3) + 
            L0x2001a500 * (x**2) * ((y_3_5)**3) + 
            L0x2001a504 * (x**3) * ((y_3_5)**3) + 
            L0x2001a508 * (x**0) * ((y_3_5)**4) + 
            L0x2001a50c * (x**1) * ((y_3_5)**4) + 
            L0x2001a510 * (x**2) * ((y_3_5)**4) + 
            L0x2001a514 * (x**3) * ((y_3_5)**4) + 
            L0x2001a518 * (x**0) * ((y_3_5)**5) + 
            L0x2001a51c * (x**1) * ((y_3_5)**5) + 
            L0x2001a520 * (x**2) * ((y_3_5)**5) + 
            L0x2001a524 * (x**3) * ((y_3_5)**5) + 
            L0x2001a528 * (x**0) * ((y_3_5)**6) + 
            L0x2001a52c * (x**1) * ((y_3_5)**6) + 
            L0x2001a530 * (x**2) * ((y_3_5)**6) + 
            L0x2001a534 * (x**3) * ((y_3_5)**6) + 
            L0x2001a538 * (x**0) * ((y_3_5)**7) + 
            L0x2001a53c * (x**1) * ((y_3_5)**7) + 
            L0x2001a540 * (x**2) * ((y_3_5)**7) + 
            L0x2001a544 * (x**3) * ((y_3_5)**7)
          )
          [25570049, x**4 - y_0_44 * 17091305, y_0_44 - 1],
    (* inp_poly_45 *)
    eqmod 8 * (inp_poly_45 * inp_poly_45)
          (
            L0x2001a4c8 * (x**0) * ((y_3_5)**0) + 
            L0x2001a4cc * (x**1) * ((y_3_5)**0) + 
            L0x2001a4d0 * (x**2) * ((y_3_5)**0) + 
            L0x2001a4d4 * (x**3) * ((y_3_5)**0) + 
            L0x2001a4d8 * (x**0) * ((y_3_5)**1) + 
            L0x2001a4dc * (x**1) * ((y_3_5)**1) + 
            L0x2001a4e0 * (x**2) * ((y_3_5)**1) + 
            L0x2001a4e4 * (x**3) * ((y_3_5)**1) + 
            L0x2001a4e8 * (x**0) * ((y_3_5)**2) + 
            L0x2001a4ec * (x**1) * ((y_3_5)**2) + 
            L0x2001a4f0 * (x**2) * ((y_3_5)**2) + 
            L0x2001a4f4 * (x**3) * ((y_3_5)**2) + 
            L0x2001a4f8 * (x**0) * ((y_3_5)**3) + 
            L0x2001a4fc * (x**1) * ((y_3_5)**3) + 
            L0x2001a500 * (x**2) * ((y_3_5)**3) + 
            L0x2001a504 * (x**3) * ((y_3_5)**3) + 
            L0x2001a508 * (x**0) * ((y_3_5)**4) + 
            L0x2001a50c * (x**1) * ((y_3_5)**4) + 
            L0x2001a510 * (x**2) * ((y_3_5)**4) + 
            L0x2001a514 * (x**3) * ((y_3_5)**4) + 
            L0x2001a518 * (x**0) * ((y_3_5)**5) + 
            L0x2001a51c * (x**1) * ((y_3_5)**5) + 
            L0x2001a520 * (x**2) * ((y_3_5)**5) + 
            L0x2001a524 * (x**3) * ((y_3_5)**5) + 
            L0x2001a528 * (x**0) * ((y_3_5)**6) + 
            L0x2001a52c * (x**1) * ((y_3_5)**6) + 
            L0x2001a530 * (x**2) * ((y_3_5)**6) + 
            L0x2001a534 * (x**3) * ((y_3_5)**6) + 
            L0x2001a538 * (x**0) * ((y_3_5)**7) + 
            L0x2001a53c * (x**1) * ((y_3_5)**7) + 
            L0x2001a540 * (x**2) * ((y_3_5)**7) + 
            L0x2001a544 * (x**3) * ((y_3_5)**7)
          )
          [25570049, x**4 - y_0_45 * 8478744, y_0_45 - 1],
    (* inp_poly_46 *)
    eqmod 8 * (inp_poly_46 * inp_poly_46)
          (
            L0x2001a4c8 * (x**0) * ((y_3_5)**0) + 
            L0x2001a4cc * (x**1) * ((y_3_5)**0) + 
            L0x2001a4d0 * (x**2) * ((y_3_5)**0) + 
            L0x2001a4d4 * (x**3) * ((y_3_5)**0) + 
            L0x2001a4d8 * (x**0) * ((y_3_5)**1) + 
            L0x2001a4dc * (x**1) * ((y_3_5)**1) + 
            L0x2001a4e0 * (x**2) * ((y_3_5)**1) + 
            L0x2001a4e4 * (x**3) * ((y_3_5)**1) + 
            L0x2001a4e8 * (x**0) * ((y_3_5)**2) + 
            L0x2001a4ec * (x**1) * ((y_3_5)**2) + 
            L0x2001a4f0 * (x**2) * ((y_3_5)**2) + 
            L0x2001a4f4 * (x**3) * ((y_3_5)**2) + 
            L0x2001a4f8 * (x**0) * ((y_3_5)**3) + 
            L0x2001a4fc * (x**1) * ((y_3_5)**3) + 
            L0x2001a500 * (x**2) * ((y_3_5)**3) + 
            L0x2001a504 * (x**3) * ((y_3_5)**3) + 
            L0x2001a508 * (x**0) * ((y_3_5)**4) + 
            L0x2001a50c * (x**1) * ((y_3_5)**4) + 
            L0x2001a510 * (x**2) * ((y_3_5)**4) + 
            L0x2001a514 * (x**3) * ((y_3_5)**4) + 
            L0x2001a518 * (x**0) * ((y_3_5)**5) + 
            L0x2001a51c * (x**1) * ((y_3_5)**5) + 
            L0x2001a520 * (x**2) * ((y_3_5)**5) + 
            L0x2001a524 * (x**3) * ((y_3_5)**5) + 
            L0x2001a528 * (x**0) * ((y_3_5)**6) + 
            L0x2001a52c * (x**1) * ((y_3_5)**6) + 
            L0x2001a530 * (x**2) * ((y_3_5)**6) + 
            L0x2001a534 * (x**3) * ((y_3_5)**6) + 
            L0x2001a538 * (x**0) * ((y_3_5)**7) + 
            L0x2001a53c * (x**1) * ((y_3_5)**7) + 
            L0x2001a540 * (x**2) * ((y_3_5)**7) + 
            L0x2001a544 * (x**3) * ((y_3_5)**7)
          )
          [25570049, x**4 - y_0_46 * 18298658, y_0_46 - 1],
    (* inp_poly_47 *)
    eqmod 8 * (inp_poly_47 * inp_poly_47)
          (
            L0x2001a4c8 * (x**0) * ((y_3_5)**0) + 
            L0x2001a4cc * (x**1) * ((y_3_5)**0) + 
            L0x2001a4d0 * (x**2) * ((y_3_5)**0) + 
            L0x2001a4d4 * (x**3) * ((y_3_5)**0) + 
            L0x2001a4d8 * (x**0) * ((y_3_5)**1) + 
            L0x2001a4dc * (x**1) * ((y_3_5)**1) + 
            L0x2001a4e0 * (x**2) * ((y_3_5)**1) + 
            L0x2001a4e4 * (x**3) * ((y_3_5)**1) + 
            L0x2001a4e8 * (x**0) * ((y_3_5)**2) + 
            L0x2001a4ec * (x**1) * ((y_3_5)**2) + 
            L0x2001a4f0 * (x**2) * ((y_3_5)**2) + 
            L0x2001a4f4 * (x**3) * ((y_3_5)**2) + 
            L0x2001a4f8 * (x**0) * ((y_3_5)**3) + 
            L0x2001a4fc * (x**1) * ((y_3_5)**3) + 
            L0x2001a500 * (x**2) * ((y_3_5)**3) + 
            L0x2001a504 * (x**3) * ((y_3_5)**3) + 
            L0x2001a508 * (x**0) * ((y_3_5)**4) + 
            L0x2001a50c * (x**1) * ((y_3_5)**4) + 
            L0x2001a510 * (x**2) * ((y_3_5)**4) + 
            L0x2001a514 * (x**3) * ((y_3_5)**4) + 
            L0x2001a518 * (x**0) * ((y_3_5)**5) + 
            L0x2001a51c * (x**1) * ((y_3_5)**5) + 
            L0x2001a520 * (x**2) * ((y_3_5)**5) + 
            L0x2001a524 * (x**3) * ((y_3_5)**5) + 
            L0x2001a528 * (x**0) * ((y_3_5)**6) + 
            L0x2001a52c * (x**1) * ((y_3_5)**6) + 
            L0x2001a530 * (x**2) * ((y_3_5)**6) + 
            L0x2001a534 * (x**3) * ((y_3_5)**6) + 
            L0x2001a538 * (x**0) * ((y_3_5)**7) + 
            L0x2001a53c * (x**1) * ((y_3_5)**7) + 
            L0x2001a540 * (x**2) * ((y_3_5)**7) + 
            L0x2001a544 * (x**3) * ((y_3_5)**7)
          )
          [25570049, x**4 - y_0_47 * 7271391, y_0_47 - 1]
  ] prove with [cuts [0]]
  &&
  true
;

cut (* 13 *)
  true && true;

(* slice 6 *)
cut (* 14 *)
  and [
    (* inp_poly_48 *)
    eqmod 8 * (inp_poly_48 * inp_poly_48)
          (
            L0x2001a548 * (x**0) * ((y_3_6)**0) + 
            L0x2001a54c * (x**1) * ((y_3_6)**0) + 
            L0x2001a550 * (x**2) * ((y_3_6)**0) + 
            L0x2001a554 * (x**3) * ((y_3_6)**0) + 
            L0x2001a558 * (x**0) * ((y_3_6)**1) + 
            L0x2001a55c * (x**1) * ((y_3_6)**1) + 
            L0x2001a560 * (x**2) * ((y_3_6)**1) + 
            L0x2001a564 * (x**3) * ((y_3_6)**1) + 
            L0x2001a568 * (x**0) * ((y_3_6)**2) + 
            L0x2001a56c * (x**1) * ((y_3_6)**2) + 
            L0x2001a570 * (x**2) * ((y_3_6)**2) + 
            L0x2001a574 * (x**3) * ((y_3_6)**2) + 
            L0x2001a578 * (x**0) * ((y_3_6)**3) + 
            L0x2001a57c * (x**1) * ((y_3_6)**3) + 
            L0x2001a580 * (x**2) * ((y_3_6)**3) + 
            L0x2001a584 * (x**3) * ((y_3_6)**3) + 
            L0x2001a588 * (x**0) * ((y_3_6)**4) + 
            L0x2001a58c * (x**1) * ((y_3_6)**4) + 
            L0x2001a590 * (x**2) * ((y_3_6)**4) + 
            L0x2001a594 * (x**3) * ((y_3_6)**4) + 
            L0x2001a598 * (x**0) * ((y_3_6)**5) + 
            L0x2001a59c * (x**1) * ((y_3_6)**5) + 
            L0x2001a5a0 * (x**2) * ((y_3_6)**5) + 
            L0x2001a5a4 * (x**3) * ((y_3_6)**5) + 
            L0x2001a5a8 * (x**0) * ((y_3_6)**6) + 
            L0x2001a5ac * (x**1) * ((y_3_6)**6) + 
            L0x2001a5b0 * (x**2) * ((y_3_6)**6) + 
            L0x2001a5b4 * (x**3) * ((y_3_6)**6) + 
            L0x2001a5b8 * (x**0) * ((y_3_6)**7) + 
            L0x2001a5bc * (x**1) * ((y_3_6)**7) + 
            L0x2001a5c0 * (x**2) * ((y_3_6)**7) + 
            L0x2001a5c4 * (x**3) * ((y_3_6)**7)
          )
          [25570049, x**4 - y_0_48 * 17500092, y_0_48 - 1],
    (* inp_poly_49 *)
    eqmod 8 * (inp_poly_49 * inp_poly_49)
          (
            L0x2001a548 * (x**0) * ((y_3_6)**0) + 
            L0x2001a54c * (x**1) * ((y_3_6)**0) + 
            L0x2001a550 * (x**2) * ((y_3_6)**0) + 
            L0x2001a554 * (x**3) * ((y_3_6)**0) + 
            L0x2001a558 * (x**0) * ((y_3_6)**1) + 
            L0x2001a55c * (x**1) * ((y_3_6)**1) + 
            L0x2001a560 * (x**2) * ((y_3_6)**1) + 
            L0x2001a564 * (x**3) * ((y_3_6)**1) + 
            L0x2001a568 * (x**0) * ((y_3_6)**2) + 
            L0x2001a56c * (x**1) * ((y_3_6)**2) + 
            L0x2001a570 * (x**2) * ((y_3_6)**2) + 
            L0x2001a574 * (x**3) * ((y_3_6)**2) + 
            L0x2001a578 * (x**0) * ((y_3_6)**3) + 
            L0x2001a57c * (x**1) * ((y_3_6)**3) + 
            L0x2001a580 * (x**2) * ((y_3_6)**3) + 
            L0x2001a584 * (x**3) * ((y_3_6)**3) + 
            L0x2001a588 * (x**0) * ((y_3_6)**4) + 
            L0x2001a58c * (x**1) * ((y_3_6)**4) + 
            L0x2001a590 * (x**2) * ((y_3_6)**4) + 
            L0x2001a594 * (x**3) * ((y_3_6)**4) + 
            L0x2001a598 * (x**0) * ((y_3_6)**5) + 
            L0x2001a59c * (x**1) * ((y_3_6)**5) + 
            L0x2001a5a0 * (x**2) * ((y_3_6)**5) + 
            L0x2001a5a4 * (x**3) * ((y_3_6)**5) + 
            L0x2001a5a8 * (x**0) * ((y_3_6)**6) + 
            L0x2001a5ac * (x**1) * ((y_3_6)**6) + 
            L0x2001a5b0 * (x**2) * ((y_3_6)**6) + 
            L0x2001a5b4 * (x**3) * ((y_3_6)**6) + 
            L0x2001a5b8 * (x**0) * ((y_3_6)**7) + 
            L0x2001a5bc * (x**1) * ((y_3_6)**7) + 
            L0x2001a5c0 * (x**2) * ((y_3_6)**7) + 
            L0x2001a5c4 * (x**3) * ((y_3_6)**7)
          )
          [25570049, x**4 - y_0_49 * 8069957, y_0_49 - 1],
    (* inp_poly_50 *)
    eqmod 8 * (inp_poly_50 * inp_poly_50)
          (
            L0x2001a548 * (x**0) * ((y_3_6)**0) + 
            L0x2001a54c * (x**1) * ((y_3_6)**0) + 
            L0x2001a550 * (x**2) * ((y_3_6)**0) + 
            L0x2001a554 * (x**3) * ((y_3_6)**0) + 
            L0x2001a558 * (x**0) * ((y_3_6)**1) + 
            L0x2001a55c * (x**1) * ((y_3_6)**1) + 
            L0x2001a560 * (x**2) * ((y_3_6)**1) + 
            L0x2001a564 * (x**3) * ((y_3_6)**1) + 
            L0x2001a568 * (x**0) * ((y_3_6)**2) + 
            L0x2001a56c * (x**1) * ((y_3_6)**2) + 
            L0x2001a570 * (x**2) * ((y_3_6)**2) + 
            L0x2001a574 * (x**3) * ((y_3_6)**2) + 
            L0x2001a578 * (x**0) * ((y_3_6)**3) + 
            L0x2001a57c * (x**1) * ((y_3_6)**3) + 
            L0x2001a580 * (x**2) * ((y_3_6)**3) + 
            L0x2001a584 * (x**3) * ((y_3_6)**3) + 
            L0x2001a588 * (x**0) * ((y_3_6)**4) + 
            L0x2001a58c * (x**1) * ((y_3_6)**4) + 
            L0x2001a590 * (x**2) * ((y_3_6)**4) + 
            L0x2001a594 * (x**3) * ((y_3_6)**4) + 
            L0x2001a598 * (x**0) * ((y_3_6)**5) + 
            L0x2001a59c * (x**1) * ((y_3_6)**5) + 
            L0x2001a5a0 * (x**2) * ((y_3_6)**5) + 
            L0x2001a5a4 * (x**3) * ((y_3_6)**5) + 
            L0x2001a5a8 * (x**0) * ((y_3_6)**6) + 
            L0x2001a5ac * (x**1) * ((y_3_6)**6) + 
            L0x2001a5b0 * (x**2) * ((y_3_6)**6) + 
            L0x2001a5b4 * (x**3) * ((y_3_6)**6) + 
            L0x2001a5b8 * (x**0) * ((y_3_6)**7) + 
            L0x2001a5bc * (x**1) * ((y_3_6)**7) + 
            L0x2001a5c0 * (x**2) * ((y_3_6)**7) + 
            L0x2001a5c4 * (x**3) * ((y_3_6)**7)
          )
          [25570049, x**4 - y_0_50 * 3627172, y_0_50 - 1],
    (* inp_poly_51 *)
    eqmod 8 * (inp_poly_51 * inp_poly_51)
          (
            L0x2001a548 * (x**0) * ((y_3_6)**0) + 
            L0x2001a54c * (x**1) * ((y_3_6)**0) + 
            L0x2001a550 * (x**2) * ((y_3_6)**0) + 
            L0x2001a554 * (x**3) * ((y_3_6)**0) + 
            L0x2001a558 * (x**0) * ((y_3_6)**1) + 
            L0x2001a55c * (x**1) * ((y_3_6)**1) + 
            L0x2001a560 * (x**2) * ((y_3_6)**1) + 
            L0x2001a564 * (x**3) * ((y_3_6)**1) + 
            L0x2001a568 * (x**0) * ((y_3_6)**2) + 
            L0x2001a56c * (x**1) * ((y_3_6)**2) + 
            L0x2001a570 * (x**2) * ((y_3_6)**2) + 
            L0x2001a574 * (x**3) * ((y_3_6)**2) + 
            L0x2001a578 * (x**0) * ((y_3_6)**3) + 
            L0x2001a57c * (x**1) * ((y_3_6)**3) + 
            L0x2001a580 * (x**2) * ((y_3_6)**3) + 
            L0x2001a584 * (x**3) * ((y_3_6)**3) + 
            L0x2001a588 * (x**0) * ((y_3_6)**4) + 
            L0x2001a58c * (x**1) * ((y_3_6)**4) + 
            L0x2001a590 * (x**2) * ((y_3_6)**4) + 
            L0x2001a594 * (x**3) * ((y_3_6)**4) + 
            L0x2001a598 * (x**0) * ((y_3_6)**5) + 
            L0x2001a59c * (x**1) * ((y_3_6)**5) + 
            L0x2001a5a0 * (x**2) * ((y_3_6)**5) + 
            L0x2001a5a4 * (x**3) * ((y_3_6)**5) + 
            L0x2001a5a8 * (x**0) * ((y_3_6)**6) + 
            L0x2001a5ac * (x**1) * ((y_3_6)**6) + 
            L0x2001a5b0 * (x**2) * ((y_3_6)**6) + 
            L0x2001a5b4 * (x**3) * ((y_3_6)**6) + 
            L0x2001a5b8 * (x**0) * ((y_3_6)**7) + 
            L0x2001a5bc * (x**1) * ((y_3_6)**7) + 
            L0x2001a5c0 * (x**2) * ((y_3_6)**7) + 
            L0x2001a5c4 * (x**3) * ((y_3_6)**7)
          )
          [25570049, x**4 - y_0_51 * 21942877, y_0_51 - 1],
    (* inp_poly_52 *)
    eqmod 8 * (inp_poly_52 * inp_poly_52)
          (
            L0x2001a548 * (x**0) * ((y_3_6)**0) + 
            L0x2001a54c * (x**1) * ((y_3_6)**0) + 
            L0x2001a550 * (x**2) * ((y_3_6)**0) + 
            L0x2001a554 * (x**3) * ((y_3_6)**0) + 
            L0x2001a558 * (x**0) * ((y_3_6)**1) + 
            L0x2001a55c * (x**1) * ((y_3_6)**1) + 
            L0x2001a560 * (x**2) * ((y_3_6)**1) + 
            L0x2001a564 * (x**3) * ((y_3_6)**1) + 
            L0x2001a568 * (x**0) * ((y_3_6)**2) + 
            L0x2001a56c * (x**1) * ((y_3_6)**2) + 
            L0x2001a570 * (x**2) * ((y_3_6)**2) + 
            L0x2001a574 * (x**3) * ((y_3_6)**2) + 
            L0x2001a578 * (x**0) * ((y_3_6)**3) + 
            L0x2001a57c * (x**1) * ((y_3_6)**3) + 
            L0x2001a580 * (x**2) * ((y_3_6)**3) + 
            L0x2001a584 * (x**3) * ((y_3_6)**3) + 
            L0x2001a588 * (x**0) * ((y_3_6)**4) + 
            L0x2001a58c * (x**1) * ((y_3_6)**4) + 
            L0x2001a590 * (x**2) * ((y_3_6)**4) + 
            L0x2001a594 * (x**3) * ((y_3_6)**4) + 
            L0x2001a598 * (x**0) * ((y_3_6)**5) + 
            L0x2001a59c * (x**1) * ((y_3_6)**5) + 
            L0x2001a5a0 * (x**2) * ((y_3_6)**5) + 
            L0x2001a5a4 * (x**3) * ((y_3_6)**5) + 
            L0x2001a5a8 * (x**0) * ((y_3_6)**6) + 
            L0x2001a5ac * (x**1) * ((y_3_6)**6) + 
            L0x2001a5b0 * (x**2) * ((y_3_6)**6) + 
            L0x2001a5b4 * (x**3) * ((y_3_6)**6) + 
            L0x2001a5b8 * (x**0) * ((y_3_6)**7) + 
            L0x2001a5bc * (x**1) * ((y_3_6)**7) + 
            L0x2001a5c0 * (x**2) * ((y_3_6)**7) + 
            L0x2001a5c4 * (x**3) * ((y_3_6)**7)
          )
          [25570049, x**4 - y_0_52 * 4002385, y_0_52 - 1],
    (* inp_poly_53 *)
    eqmod 8 * (inp_poly_53 * inp_poly_53)
          (
            L0x2001a548 * (x**0) * ((y_3_6)**0) + 
            L0x2001a54c * (x**1) * ((y_3_6)**0) + 
            L0x2001a550 * (x**2) * ((y_3_6)**0) + 
            L0x2001a554 * (x**3) * ((y_3_6)**0) + 
            L0x2001a558 * (x**0) * ((y_3_6)**1) + 
            L0x2001a55c * (x**1) * ((y_3_6)**1) + 
            L0x2001a560 * (x**2) * ((y_3_6)**1) + 
            L0x2001a564 * (x**3) * ((y_3_6)**1) + 
            L0x2001a568 * (x**0) * ((y_3_6)**2) + 
            L0x2001a56c * (x**1) * ((y_3_6)**2) + 
            L0x2001a570 * (x**2) * ((y_3_6)**2) + 
            L0x2001a574 * (x**3) * ((y_3_6)**2) + 
            L0x2001a578 * (x**0) * ((y_3_6)**3) + 
            L0x2001a57c * (x**1) * ((y_3_6)**3) + 
            L0x2001a580 * (x**2) * ((y_3_6)**3) + 
            L0x2001a584 * (x**3) * ((y_3_6)**3) + 
            L0x2001a588 * (x**0) * ((y_3_6)**4) + 
            L0x2001a58c * (x**1) * ((y_3_6)**4) + 
            L0x2001a590 * (x**2) * ((y_3_6)**4) + 
            L0x2001a594 * (x**3) * ((y_3_6)**4) + 
            L0x2001a598 * (x**0) * ((y_3_6)**5) + 
            L0x2001a59c * (x**1) * ((y_3_6)**5) + 
            L0x2001a5a0 * (x**2) * ((y_3_6)**5) + 
            L0x2001a5a4 * (x**3) * ((y_3_6)**5) + 
            L0x2001a5a8 * (x**0) * ((y_3_6)**6) + 
            L0x2001a5ac * (x**1) * ((y_3_6)**6) + 
            L0x2001a5b0 * (x**2) * ((y_3_6)**6) + 
            L0x2001a5b4 * (x**3) * ((y_3_6)**6) + 
            L0x2001a5b8 * (x**0) * ((y_3_6)**7) + 
            L0x2001a5bc * (x**1) * ((y_3_6)**7) + 
            L0x2001a5c0 * (x**2) * ((y_3_6)**7) + 
            L0x2001a5c4 * (x**3) * ((y_3_6)**7)
          )
          [25570049, x**4 - y_0_53 * 21567664, y_0_53 - 1],
    (* inp_poly_54 *)
    eqmod 8 * (inp_poly_54 * inp_poly_54)
          (
            L0x2001a548 * (x**0) * ((y_3_6)**0) + 
            L0x2001a54c * (x**1) * ((y_3_6)**0) + 
            L0x2001a550 * (x**2) * ((y_3_6)**0) + 
            L0x2001a554 * (x**3) * ((y_3_6)**0) + 
            L0x2001a558 * (x**0) * ((y_3_6)**1) + 
            L0x2001a55c * (x**1) * ((y_3_6)**1) + 
            L0x2001a560 * (x**2) * ((y_3_6)**1) + 
            L0x2001a564 * (x**3) * ((y_3_6)**1) + 
            L0x2001a568 * (x**0) * ((y_3_6)**2) + 
            L0x2001a56c * (x**1) * ((y_3_6)**2) + 
            L0x2001a570 * (x**2) * ((y_3_6)**2) + 
            L0x2001a574 * (x**3) * ((y_3_6)**2) + 
            L0x2001a578 * (x**0) * ((y_3_6)**3) + 
            L0x2001a57c * (x**1) * ((y_3_6)**3) + 
            L0x2001a580 * (x**2) * ((y_3_6)**3) + 
            L0x2001a584 * (x**3) * ((y_3_6)**3) + 
            L0x2001a588 * (x**0) * ((y_3_6)**4) + 
            L0x2001a58c * (x**1) * ((y_3_6)**4) + 
            L0x2001a590 * (x**2) * ((y_3_6)**4) + 
            L0x2001a594 * (x**3) * ((y_3_6)**4) + 
            L0x2001a598 * (x**0) * ((y_3_6)**5) + 
            L0x2001a59c * (x**1) * ((y_3_6)**5) + 
            L0x2001a5a0 * (x**2) * ((y_3_6)**5) + 
            L0x2001a5a4 * (x**3) * ((y_3_6)**5) + 
            L0x2001a5a8 * (x**0) * ((y_3_6)**6) + 
            L0x2001a5ac * (x**1) * ((y_3_6)**6) + 
            L0x2001a5b0 * (x**2) * ((y_3_6)**6) + 
            L0x2001a5b4 * (x**3) * ((y_3_6)**6) + 
            L0x2001a5b8 * (x**0) * ((y_3_6)**7) + 
            L0x2001a5bc * (x**1) * ((y_3_6)**7) + 
            L0x2001a5c0 * (x**2) * ((y_3_6)**7) + 
            L0x2001a5c4 * (x**3) * ((y_3_6)**7)
          )
          [25570049, x**4 - y_0_54 * 9845387, y_0_54 - 1],
    (* inp_poly_55 *)
    eqmod 8 * (inp_poly_55 * inp_poly_55)
          (
            L0x2001a548 * (x**0) * ((y_3_6)**0) + 
            L0x2001a54c * (x**1) * ((y_3_6)**0) + 
            L0x2001a550 * (x**2) * ((y_3_6)**0) + 
            L0x2001a554 * (x**3) * ((y_3_6)**0) + 
            L0x2001a558 * (x**0) * ((y_3_6)**1) + 
            L0x2001a55c * (x**1) * ((y_3_6)**1) + 
            L0x2001a560 * (x**2) * ((y_3_6)**1) + 
            L0x2001a564 * (x**3) * ((y_3_6)**1) + 
            L0x2001a568 * (x**0) * ((y_3_6)**2) + 
            L0x2001a56c * (x**1) * ((y_3_6)**2) + 
            L0x2001a570 * (x**2) * ((y_3_6)**2) + 
            L0x2001a574 * (x**3) * ((y_3_6)**2) + 
            L0x2001a578 * (x**0) * ((y_3_6)**3) + 
            L0x2001a57c * (x**1) * ((y_3_6)**3) + 
            L0x2001a580 * (x**2) * ((y_3_6)**3) + 
            L0x2001a584 * (x**3) * ((y_3_6)**3) + 
            L0x2001a588 * (x**0) * ((y_3_6)**4) + 
            L0x2001a58c * (x**1) * ((y_3_6)**4) + 
            L0x2001a590 * (x**2) * ((y_3_6)**4) + 
            L0x2001a594 * (x**3) * ((y_3_6)**4) + 
            L0x2001a598 * (x**0) * ((y_3_6)**5) + 
            L0x2001a59c * (x**1) * ((y_3_6)**5) + 
            L0x2001a5a0 * (x**2) * ((y_3_6)**5) + 
            L0x2001a5a4 * (x**3) * ((y_3_6)**5) + 
            L0x2001a5a8 * (x**0) * ((y_3_6)**6) + 
            L0x2001a5ac * (x**1) * ((y_3_6)**6) + 
            L0x2001a5b0 * (x**2) * ((y_3_6)**6) + 
            L0x2001a5b4 * (x**3) * ((y_3_6)**6) + 
            L0x2001a5b8 * (x**0) * ((y_3_6)**7) + 
            L0x2001a5bc * (x**1) * ((y_3_6)**7) + 
            L0x2001a5c0 * (x**2) * ((y_3_6)**7) + 
            L0x2001a5c4 * (x**3) * ((y_3_6)**7)
          )
          [25570049, x**4 - y_0_55 * 15724662, y_0_55 - 1]
  ] prove with [cuts [0]]
  &&
  true
;

cut (* 15 *)
  true && true;

(* slice 7 *)
cut (* 16 *)
  and [
    (* inp_poly_56 *)
    eqmod 8 * (inp_poly_56 * inp_poly_56)
          (
            L0x2001a5c8 * (x**0) * ((y_3_7)**0) + 
            L0x2001a5cc * (x**1) * ((y_3_7)**0) + 
            L0x2001a5d0 * (x**2) * ((y_3_7)**0) + 
            L0x2001a5d4 * (x**3) * ((y_3_7)**0) + 
            L0x2001a5d8 * (x**0) * ((y_3_7)**1) + 
            L0x2001a5dc * (x**1) * ((y_3_7)**1) + 
            L0x2001a5e0 * (x**2) * ((y_3_7)**1) + 
            L0x2001a5e4 * (x**3) * ((y_3_7)**1) + 
            L0x2001a5e8 * (x**0) * ((y_3_7)**2) + 
            L0x2001a5ec * (x**1) * ((y_3_7)**2) + 
            L0x2001a5f0 * (x**2) * ((y_3_7)**2) + 
            L0x2001a5f4 * (x**3) * ((y_3_7)**2) + 
            L0x2001a5f8 * (x**0) * ((y_3_7)**3) + 
            L0x2001a5fc * (x**1) * ((y_3_7)**3) + 
            L0x2001a600 * (x**2) * ((y_3_7)**3) + 
            L0x2001a604 * (x**3) * ((y_3_7)**3) + 
            L0x2001a608 * (x**0) * ((y_3_7)**4) + 
            L0x2001a60c * (x**1) * ((y_3_7)**4) + 
            L0x2001a610 * (x**2) * ((y_3_7)**4) + 
            L0x2001a614 * (x**3) * ((y_3_7)**4) + 
            L0x2001a618 * (x**0) * ((y_3_7)**5) + 
            L0x2001a61c * (x**1) * ((y_3_7)**5) + 
            L0x2001a620 * (x**2) * ((y_3_7)**5) + 
            L0x2001a624 * (x**3) * ((y_3_7)**5) + 
            L0x2001a628 * (x**0) * ((y_3_7)**6) + 
            L0x2001a62c * (x**1) * ((y_3_7)**6) + 
            L0x2001a630 * (x**2) * ((y_3_7)**6) + 
            L0x2001a634 * (x**3) * ((y_3_7)**6) + 
            L0x2001a638 * (x**0) * ((y_3_7)**7) + 
            L0x2001a63c * (x**1) * ((y_3_7)**7) + 
            L0x2001a640 * (x**2) * ((y_3_7)**7) + 
            L0x2001a644 * (x**3) * ((y_3_7)**7)
          )
          [25570049, x**4 - y_0_56 * 6096206, y_0_56 - 1],
    (* inp_poly_57 *)
    eqmod 8 * (inp_poly_57 * inp_poly_57)
          (
            L0x2001a5c8 * (x**0) * ((y_3_7)**0) + 
            L0x2001a5cc * (x**1) * ((y_3_7)**0) + 
            L0x2001a5d0 * (x**2) * ((y_3_7)**0) + 
            L0x2001a5d4 * (x**3) * ((y_3_7)**0) + 
            L0x2001a5d8 * (x**0) * ((y_3_7)**1) + 
            L0x2001a5dc * (x**1) * ((y_3_7)**1) + 
            L0x2001a5e0 * (x**2) * ((y_3_7)**1) + 
            L0x2001a5e4 * (x**3) * ((y_3_7)**1) + 
            L0x2001a5e8 * (x**0) * ((y_3_7)**2) + 
            L0x2001a5ec * (x**1) * ((y_3_7)**2) + 
            L0x2001a5f0 * (x**2) * ((y_3_7)**2) + 
            L0x2001a5f4 * (x**3) * ((y_3_7)**2) + 
            L0x2001a5f8 * (x**0) * ((y_3_7)**3) + 
            L0x2001a5fc * (x**1) * ((y_3_7)**3) + 
            L0x2001a600 * (x**2) * ((y_3_7)**3) + 
            L0x2001a604 * (x**3) * ((y_3_7)**3) + 
            L0x2001a608 * (x**0) * ((y_3_7)**4) + 
            L0x2001a60c * (x**1) * ((y_3_7)**4) + 
            L0x2001a610 * (x**2) * ((y_3_7)**4) + 
            L0x2001a614 * (x**3) * ((y_3_7)**4) + 
            L0x2001a618 * (x**0) * ((y_3_7)**5) + 
            L0x2001a61c * (x**1) * ((y_3_7)**5) + 
            L0x2001a620 * (x**2) * ((y_3_7)**5) + 
            L0x2001a624 * (x**3) * ((y_3_7)**5) + 
            L0x2001a628 * (x**0) * ((y_3_7)**6) + 
            L0x2001a62c * (x**1) * ((y_3_7)**6) + 
            L0x2001a630 * (x**2) * ((y_3_7)**6) + 
            L0x2001a634 * (x**3) * ((y_3_7)**6) + 
            L0x2001a638 * (x**0) * ((y_3_7)**7) + 
            L0x2001a63c * (x**1) * ((y_3_7)**7) + 
            L0x2001a640 * (x**2) * ((y_3_7)**7) + 
            L0x2001a644 * (x**3) * ((y_3_7)**7)
          )
          [25570049, x**4 - y_0_57 * 19473843, y_0_57 - 1],
    (* inp_poly_58 *)
    eqmod 8 * (inp_poly_58 * inp_poly_58)
          (
            L0x2001a5c8 * (x**0) * ((y_3_7)**0) + 
            L0x2001a5cc * (x**1) * ((y_3_7)**0) + 
            L0x2001a5d0 * (x**2) * ((y_3_7)**0) + 
            L0x2001a5d4 * (x**3) * ((y_3_7)**0) + 
            L0x2001a5d8 * (x**0) * ((y_3_7)**1) + 
            L0x2001a5dc * (x**1) * ((y_3_7)**1) + 
            L0x2001a5e0 * (x**2) * ((y_3_7)**1) + 
            L0x2001a5e4 * (x**3) * ((y_3_7)**1) + 
            L0x2001a5e8 * (x**0) * ((y_3_7)**2) + 
            L0x2001a5ec * (x**1) * ((y_3_7)**2) + 
            L0x2001a5f0 * (x**2) * ((y_3_7)**2) + 
            L0x2001a5f4 * (x**3) * ((y_3_7)**2) + 
            L0x2001a5f8 * (x**0) * ((y_3_7)**3) + 
            L0x2001a5fc * (x**1) * ((y_3_7)**3) + 
            L0x2001a600 * (x**2) * ((y_3_7)**3) + 
            L0x2001a604 * (x**3) * ((y_3_7)**3) + 
            L0x2001a608 * (x**0) * ((y_3_7)**4) + 
            L0x2001a60c * (x**1) * ((y_3_7)**4) + 
            L0x2001a610 * (x**2) * ((y_3_7)**4) + 
            L0x2001a614 * (x**3) * ((y_3_7)**4) + 
            L0x2001a618 * (x**0) * ((y_3_7)**5) + 
            L0x2001a61c * (x**1) * ((y_3_7)**5) + 
            L0x2001a620 * (x**2) * ((y_3_7)**5) + 
            L0x2001a624 * (x**3) * ((y_3_7)**5) + 
            L0x2001a628 * (x**0) * ((y_3_7)**6) + 
            L0x2001a62c * (x**1) * ((y_3_7)**6) + 
            L0x2001a630 * (x**2) * ((y_3_7)**6) + 
            L0x2001a634 * (x**3) * ((y_3_7)**6) + 
            L0x2001a638 * (x**0) * ((y_3_7)**7) + 
            L0x2001a63c * (x**1) * ((y_3_7)**7) + 
            L0x2001a640 * (x**2) * ((y_3_7)**7) + 
            L0x2001a644 * (x**3) * ((y_3_7)**7)
          )
          [25570049, x**4 - y_0_58 * 8645865, y_0_58 - 1],
    (* inp_poly_59 *)
    eqmod 8 * (inp_poly_59 * inp_poly_59)
          (
            L0x2001a5c8 * (x**0) * ((y_3_7)**0) + 
            L0x2001a5cc * (x**1) * ((y_3_7)**0) + 
            L0x2001a5d0 * (x**2) * ((y_3_7)**0) + 
            L0x2001a5d4 * (x**3) * ((y_3_7)**0) + 
            L0x2001a5d8 * (x**0) * ((y_3_7)**1) + 
            L0x2001a5dc * (x**1) * ((y_3_7)**1) + 
            L0x2001a5e0 * (x**2) * ((y_3_7)**1) + 
            L0x2001a5e4 * (x**3) * ((y_3_7)**1) + 
            L0x2001a5e8 * (x**0) * ((y_3_7)**2) + 
            L0x2001a5ec * (x**1) * ((y_3_7)**2) + 
            L0x2001a5f0 * (x**2) * ((y_3_7)**2) + 
            L0x2001a5f4 * (x**3) * ((y_3_7)**2) + 
            L0x2001a5f8 * (x**0) * ((y_3_7)**3) + 
            L0x2001a5fc * (x**1) * ((y_3_7)**3) + 
            L0x2001a600 * (x**2) * ((y_3_7)**3) + 
            L0x2001a604 * (x**3) * ((y_3_7)**3) + 
            L0x2001a608 * (x**0) * ((y_3_7)**4) + 
            L0x2001a60c * (x**1) * ((y_3_7)**4) + 
            L0x2001a610 * (x**2) * ((y_3_7)**4) + 
            L0x2001a614 * (x**3) * ((y_3_7)**4) + 
            L0x2001a618 * (x**0) * ((y_3_7)**5) + 
            L0x2001a61c * (x**1) * ((y_3_7)**5) + 
            L0x2001a620 * (x**2) * ((y_3_7)**5) + 
            L0x2001a624 * (x**3) * ((y_3_7)**5) + 
            L0x2001a628 * (x**0) * ((y_3_7)**6) + 
            L0x2001a62c * (x**1) * ((y_3_7)**6) + 
            L0x2001a630 * (x**2) * ((y_3_7)**6) + 
            L0x2001a634 * (x**3) * ((y_3_7)**6) + 
            L0x2001a638 * (x**0) * ((y_3_7)**7) + 
            L0x2001a63c * (x**1) * ((y_3_7)**7) + 
            L0x2001a640 * (x**2) * ((y_3_7)**7) + 
            L0x2001a644 * (x**3) * ((y_3_7)**7)
          )
          [25570049, x**4 - y_0_59 * 16924184, y_0_59 - 1],
    (* inp_poly_60 *)
    eqmod 8 * (inp_poly_60 * inp_poly_60)
          (
            L0x2001a5c8 * (x**0) * ((y_3_7)**0) + 
            L0x2001a5cc * (x**1) * ((y_3_7)**0) + 
            L0x2001a5d0 * (x**2) * ((y_3_7)**0) + 
            L0x2001a5d4 * (x**3) * ((y_3_7)**0) + 
            L0x2001a5d8 * (x**0) * ((y_3_7)**1) + 
            L0x2001a5dc * (x**1) * ((y_3_7)**1) + 
            L0x2001a5e0 * (x**2) * ((y_3_7)**1) + 
            L0x2001a5e4 * (x**3) * ((y_3_7)**1) + 
            L0x2001a5e8 * (x**0) * ((y_3_7)**2) + 
            L0x2001a5ec * (x**1) * ((y_3_7)**2) + 
            L0x2001a5f0 * (x**2) * ((y_3_7)**2) + 
            L0x2001a5f4 * (x**3) * ((y_3_7)**2) + 
            L0x2001a5f8 * (x**0) * ((y_3_7)**3) + 
            L0x2001a5fc * (x**1) * ((y_3_7)**3) + 
            L0x2001a600 * (x**2) * ((y_3_7)**3) + 
            L0x2001a604 * (x**3) * ((y_3_7)**3) + 
            L0x2001a608 * (x**0) * ((y_3_7)**4) + 
            L0x2001a60c * (x**1) * ((y_3_7)**4) + 
            L0x2001a610 * (x**2) * ((y_3_7)**4) + 
            L0x2001a614 * (x**3) * ((y_3_7)**4) + 
            L0x2001a618 * (x**0) * ((y_3_7)**5) + 
            L0x2001a61c * (x**1) * ((y_3_7)**5) + 
            L0x2001a620 * (x**2) * ((y_3_7)**5) + 
            L0x2001a624 * (x**3) * ((y_3_7)**5) + 
            L0x2001a628 * (x**0) * ((y_3_7)**6) + 
            L0x2001a62c * (x**1) * ((y_3_7)**6) + 
            L0x2001a630 * (x**2) * ((y_3_7)**6) + 
            L0x2001a634 * (x**3) * ((y_3_7)**6) + 
            L0x2001a638 * (x**0) * ((y_3_7)**7) + 
            L0x2001a63c * (x**1) * ((y_3_7)**7) + 
            L0x2001a640 * (x**2) * ((y_3_7)**7) + 
            L0x2001a644 * (x**3) * ((y_3_7)**7)
          )
          [25570049, x**4 - y_0_60 * 18864008, y_0_60 - 1],
    (* inp_poly_61 *)
    eqmod 8 * (inp_poly_61 * inp_poly_61)
          (
            L0x2001a5c8 * (x**0) * ((y_3_7)**0) + 
            L0x2001a5cc * (x**1) * ((y_3_7)**0) + 
            L0x2001a5d0 * (x**2) * ((y_3_7)**0) + 
            L0x2001a5d4 * (x**3) * ((y_3_7)**0) + 
            L0x2001a5d8 * (x**0) * ((y_3_7)**1) + 
            L0x2001a5dc * (x**1) * ((y_3_7)**1) + 
            L0x2001a5e0 * (x**2) * ((y_3_7)**1) + 
            L0x2001a5e4 * (x**3) * ((y_3_7)**1) + 
            L0x2001a5e8 * (x**0) * ((y_3_7)**2) + 
            L0x2001a5ec * (x**1) * ((y_3_7)**2) + 
            L0x2001a5f0 * (x**2) * ((y_3_7)**2) + 
            L0x2001a5f4 * (x**3) * ((y_3_7)**2) + 
            L0x2001a5f8 * (x**0) * ((y_3_7)**3) + 
            L0x2001a5fc * (x**1) * ((y_3_7)**3) + 
            L0x2001a600 * (x**2) * ((y_3_7)**3) + 
            L0x2001a604 * (x**3) * ((y_3_7)**3) + 
            L0x2001a608 * (x**0) * ((y_3_7)**4) + 
            L0x2001a60c * (x**1) * ((y_3_7)**4) + 
            L0x2001a610 * (x**2) * ((y_3_7)**4) + 
            L0x2001a614 * (x**3) * ((y_3_7)**4) + 
            L0x2001a618 * (x**0) * ((y_3_7)**5) + 
            L0x2001a61c * (x**1) * ((y_3_7)**5) + 
            L0x2001a620 * (x**2) * ((y_3_7)**5) + 
            L0x2001a624 * (x**3) * ((y_3_7)**5) + 
            L0x2001a628 * (x**0) * ((y_3_7)**6) + 
            L0x2001a62c * (x**1) * ((y_3_7)**6) + 
            L0x2001a630 * (x**2) * ((y_3_7)**6) + 
            L0x2001a634 * (x**3) * ((y_3_7)**6) + 
            L0x2001a638 * (x**0) * ((y_3_7)**7) + 
            L0x2001a63c * (x**1) * ((y_3_7)**7) + 
            L0x2001a640 * (x**2) * ((y_3_7)**7) + 
            L0x2001a644 * (x**3) * ((y_3_7)**7)
          )
          [25570049, x**4 - y_0_61 * 6706041, y_0_61 - 1],
    (* inp_poly_62 *)
    eqmod 8 * (inp_poly_62 * inp_poly_62)
          (
            L0x2001a5c8 * (x**0) * ((y_3_7)**0) + 
            L0x2001a5cc * (x**1) * ((y_3_7)**0) + 
            L0x2001a5d0 * (x**2) * ((y_3_7)**0) + 
            L0x2001a5d4 * (x**3) * ((y_3_7)**0) + 
            L0x2001a5d8 * (x**0) * ((y_3_7)**1) + 
            L0x2001a5dc * (x**1) * ((y_3_7)**1) + 
            L0x2001a5e0 * (x**2) * ((y_3_7)**1) + 
            L0x2001a5e4 * (x**3) * ((y_3_7)**1) + 
            L0x2001a5e8 * (x**0) * ((y_3_7)**2) + 
            L0x2001a5ec * (x**1) * ((y_3_7)**2) + 
            L0x2001a5f0 * (x**2) * ((y_3_7)**2) + 
            L0x2001a5f4 * (x**3) * ((y_3_7)**2) + 
            L0x2001a5f8 * (x**0) * ((y_3_7)**3) + 
            L0x2001a5fc * (x**1) * ((y_3_7)**3) + 
            L0x2001a600 * (x**2) * ((y_3_7)**3) + 
            L0x2001a604 * (x**3) * ((y_3_7)**3) + 
            L0x2001a608 * (x**0) * ((y_3_7)**4) + 
            L0x2001a60c * (x**1) * ((y_3_7)**4) + 
            L0x2001a610 * (x**2) * ((y_3_7)**4) + 
            L0x2001a614 * (x**3) * ((y_3_7)**4) + 
            L0x2001a618 * (x**0) * ((y_3_7)**5) + 
            L0x2001a61c * (x**1) * ((y_3_7)**5) + 
            L0x2001a620 * (x**2) * ((y_3_7)**5) + 
            L0x2001a624 * (x**3) * ((y_3_7)**5) + 
            L0x2001a628 * (x**0) * ((y_3_7)**6) + 
            L0x2001a62c * (x**1) * ((y_3_7)**6) + 
            L0x2001a630 * (x**2) * ((y_3_7)**6) + 
            L0x2001a634 * (x**3) * ((y_3_7)**6) + 
            L0x2001a638 * (x**0) * ((y_3_7)**7) + 
            L0x2001a63c * (x**1) * ((y_3_7)**7) + 
            L0x2001a640 * (x**2) * ((y_3_7)**7) + 
            L0x2001a644 * (x**3) * ((y_3_7)**7)
          )
          [25570049, x**4 - y_0_62 * 18761234, y_0_62 - 1],
    (* inp_poly_63 *)
    eqmod 8 * (inp_poly_63 * inp_poly_63)
          (
            L0x2001a5c8 * (x**0) * ((y_3_7)**0) + 
            L0x2001a5cc * (x**1) * ((y_3_7)**0) + 
            L0x2001a5d0 * (x**2) * ((y_3_7)**0) + 
            L0x2001a5d4 * (x**3) * ((y_3_7)**0) + 
            L0x2001a5d8 * (x**0) * ((y_3_7)**1) + 
            L0x2001a5dc * (x**1) * ((y_3_7)**1) + 
            L0x2001a5e0 * (x**2) * ((y_3_7)**1) + 
            L0x2001a5e4 * (x**3) * ((y_3_7)**1) + 
            L0x2001a5e8 * (x**0) * ((y_3_7)**2) + 
            L0x2001a5ec * (x**1) * ((y_3_7)**2) + 
            L0x2001a5f0 * (x**2) * ((y_3_7)**2) + 
            L0x2001a5f4 * (x**3) * ((y_3_7)**2) + 
            L0x2001a5f8 * (x**0) * ((y_3_7)**3) + 
            L0x2001a5fc * (x**1) * ((y_3_7)**3) + 
            L0x2001a600 * (x**2) * ((y_3_7)**3) + 
            L0x2001a604 * (x**3) * ((y_3_7)**3) + 
            L0x2001a608 * (x**0) * ((y_3_7)**4) + 
            L0x2001a60c * (x**1) * ((y_3_7)**4) + 
            L0x2001a610 * (x**2) * ((y_3_7)**4) + 
            L0x2001a614 * (x**3) * ((y_3_7)**4) + 
            L0x2001a618 * (x**0) * ((y_3_7)**5) + 
            L0x2001a61c * (x**1) * ((y_3_7)**5) + 
            L0x2001a620 * (x**2) * ((y_3_7)**5) + 
            L0x2001a624 * (x**3) * ((y_3_7)**5) + 
            L0x2001a628 * (x**0) * ((y_3_7)**6) + 
            L0x2001a62c * (x**1) * ((y_3_7)**6) + 
            L0x2001a630 * (x**2) * ((y_3_7)**6) + 
            L0x2001a634 * (x**3) * ((y_3_7)**6) + 
            L0x2001a638 * (x**0) * ((y_3_7)**7) + 
            L0x2001a63c * (x**1) * ((y_3_7)**7) + 
            L0x2001a640 * (x**2) * ((y_3_7)**7) + 
            L0x2001a644 * (x**3) * ((y_3_7)**7)
          )
          [25570049, x**4 - y_0_63 * 6808815, y_0_63 - 1]
  ] prove with [cuts [0]]
  &&
  true
;

(* range conditions needed for next layer *)
cut (* 17 *)
  true
  &&
  and [
    8@32 * (-25570049)@32 <=s L0x2001a248, L0x2001a248 <s 8@32 * 25570049@32,
    8@32 * (-25570049)@32 <=s L0x2001a24c, L0x2001a24c <s 8@32 * 25570049@32,
    8@32 * (-25570049)@32 <=s L0x2001a250, L0x2001a250 <s 8@32 * 25570049@32,
    8@32 * (-25570049)@32 <=s L0x2001a254, L0x2001a254 <s 8@32 * 25570049@32,
    8@32 * (-25570049)@32 <=s L0x2001a258, L0x2001a258 <s 8@32 * 25570049@32,
    8@32 * (-25570049)@32 <=s L0x2001a25c, L0x2001a25c <s 8@32 * 25570049@32,
    8@32 * (-25570049)@32 <=s L0x2001a260, L0x2001a260 <s 8@32 * 25570049@32,
    8@32 * (-25570049)@32 <=s L0x2001a264, L0x2001a264 <s 8@32 * 25570049@32,
    8@32 * (-25570049)@32 <=s L0x2001a268, L0x2001a268 <s 8@32 * 25570049@32,
    8@32 * (-25570049)@32 <=s L0x2001a26c, L0x2001a26c <s 8@32 * 25570049@32,
    8@32 * (-25570049)@32 <=s L0x2001a270, L0x2001a270 <s 8@32 * 25570049@32,
    8@32 * (-25570049)@32 <=s L0x2001a274, L0x2001a274 <s 8@32 * 25570049@32,
    8@32 * (-25570049)@32 <=s L0x2001a278, L0x2001a278 <s 8@32 * 25570049@32,
    8@32 * (-25570049)@32 <=s L0x2001a27c, L0x2001a27c <s 8@32 * 25570049@32,
    8@32 * (-25570049)@32 <=s L0x2001a280, L0x2001a280 <s 8@32 * 25570049@32,
    8@32 * (-25570049)@32 <=s L0x2001a284, L0x2001a284 <s 8@32 * 25570049@32,
    8@32 * (-25570049)@32 <=s L0x2001a288, L0x2001a288 <s 8@32 * 25570049@32,
    8@32 * (-25570049)@32 <=s L0x2001a28c, L0x2001a28c <s 8@32 * 25570049@32,
    8@32 * (-25570049)@32 <=s L0x2001a290, L0x2001a290 <s 8@32 * 25570049@32,
    8@32 * (-25570049)@32 <=s L0x2001a294, L0x2001a294 <s 8@32 * 25570049@32,
    8@32 * (-25570049)@32 <=s L0x2001a298, L0x2001a298 <s 8@32 * 25570049@32,
    8@32 * (-25570049)@32 <=s L0x2001a29c, L0x2001a29c <s 8@32 * 25570049@32,
    8@32 * (-25570049)@32 <=s L0x2001a2a0, L0x2001a2a0 <s 8@32 * 25570049@32,
    8@32 * (-25570049)@32 <=s L0x2001a2a4, L0x2001a2a4 <s 8@32 * 25570049@32,
    8@32 * (-25570049)@32 <=s L0x2001a2a8, L0x2001a2a8 <s 8@32 * 25570049@32,
    8@32 * (-25570049)@32 <=s L0x2001a2ac, L0x2001a2ac <s 8@32 * 25570049@32,
    8@32 * (-25570049)@32 <=s L0x2001a2b0, L0x2001a2b0 <s 8@32 * 25570049@32,
    8@32 * (-25570049)@32 <=s L0x2001a2b4, L0x2001a2b4 <s 8@32 * 25570049@32,
    8@32 * (-25570049)@32 <=s L0x2001a2b8, L0x2001a2b8 <s 8@32 * 25570049@32,
    8@32 * (-25570049)@32 <=s L0x2001a2bc, L0x2001a2bc <s 8@32 * 25570049@32,
    8@32 * (-25570049)@32 <=s L0x2001a2c0, L0x2001a2c0 <s 8@32 * 25570049@32,
    8@32 * (-25570049)@32 <=s L0x2001a2c4, L0x2001a2c4 <s 8@32 * 25570049@32,
    8@32 * (-25570049)@32 <=s L0x2001a2c8, L0x2001a2c8 <s 8@32 * 25570049@32,
    8@32 * (-25570049)@32 <=s L0x2001a2cc, L0x2001a2cc <s 8@32 * 25570049@32,
    8@32 * (-25570049)@32 <=s L0x2001a2d0, L0x2001a2d0 <s 8@32 * 25570049@32,
    8@32 * (-25570049)@32 <=s L0x2001a2d4, L0x2001a2d4 <s 8@32 * 25570049@32,
    8@32 * (-25570049)@32 <=s L0x2001a2d8, L0x2001a2d8 <s 8@32 * 25570049@32,
    8@32 * (-25570049)@32 <=s L0x2001a2dc, L0x2001a2dc <s 8@32 * 25570049@32,
    8@32 * (-25570049)@32 <=s L0x2001a2e0, L0x2001a2e0 <s 8@32 * 25570049@32,
    8@32 * (-25570049)@32 <=s L0x2001a2e4, L0x2001a2e4 <s 8@32 * 25570049@32,
    8@32 * (-25570049)@32 <=s L0x2001a2e8, L0x2001a2e8 <s 8@32 * 25570049@32,
    8@32 * (-25570049)@32 <=s L0x2001a2ec, L0x2001a2ec <s 8@32 * 25570049@32,
    8@32 * (-25570049)@32 <=s L0x2001a2f0, L0x2001a2f0 <s 8@32 * 25570049@32,
    8@32 * (-25570049)@32 <=s L0x2001a2f4, L0x2001a2f4 <s 8@32 * 25570049@32,
    8@32 * (-25570049)@32 <=s L0x2001a2f8, L0x2001a2f8 <s 8@32 * 25570049@32,
    8@32 * (-25570049)@32 <=s L0x2001a2fc, L0x2001a2fc <s 8@32 * 25570049@32,
    8@32 * (-25570049)@32 <=s L0x2001a300, L0x2001a300 <s 8@32 * 25570049@32,
    8@32 * (-25570049)@32 <=s L0x2001a304, L0x2001a304 <s 8@32 * 25570049@32,
    8@32 * (-25570049)@32 <=s L0x2001a308, L0x2001a308 <s 8@32 * 25570049@32,
    8@32 * (-25570049)@32 <=s L0x2001a30c, L0x2001a30c <s 8@32 * 25570049@32,
    8@32 * (-25570049)@32 <=s L0x2001a310, L0x2001a310 <s 8@32 * 25570049@32,
    8@32 * (-25570049)@32 <=s L0x2001a314, L0x2001a314 <s 8@32 * 25570049@32,
    8@32 * (-25570049)@32 <=s L0x2001a318, L0x2001a318 <s 8@32 * 25570049@32,
    8@32 * (-25570049)@32 <=s L0x2001a31c, L0x2001a31c <s 8@32 * 25570049@32,
    8@32 * (-25570049)@32 <=s L0x2001a320, L0x2001a320 <s 8@32 * 25570049@32,
    8@32 * (-25570049)@32 <=s L0x2001a324, L0x2001a324 <s 8@32 * 25570049@32,
    8@32 * (-25570049)@32 <=s L0x2001a328, L0x2001a328 <s 8@32 * 25570049@32,
    8@32 * (-25570049)@32 <=s L0x2001a32c, L0x2001a32c <s 8@32 * 25570049@32,
    8@32 * (-25570049)@32 <=s L0x2001a330, L0x2001a330 <s 8@32 * 25570049@32,
    8@32 * (-25570049)@32 <=s L0x2001a334, L0x2001a334 <s 8@32 * 25570049@32,
    8@32 * (-25570049)@32 <=s L0x2001a338, L0x2001a338 <s 8@32 * 25570049@32,
    8@32 * (-25570049)@32 <=s L0x2001a33c, L0x2001a33c <s 8@32 * 25570049@32,
    8@32 * (-25570049)@32 <=s L0x2001a340, L0x2001a340 <s 8@32 * 25570049@32,
    8@32 * (-25570049)@32 <=s L0x2001a344, L0x2001a344 <s 8@32 * 25570049@32,
    8@32 * (-25570049)@32 <=s L0x2001a348, L0x2001a348 <s 8@32 * 25570049@32,
    8@32 * (-25570049)@32 <=s L0x2001a34c, L0x2001a34c <s 8@32 * 25570049@32,
    8@32 * (-25570049)@32 <=s L0x2001a350, L0x2001a350 <s 8@32 * 25570049@32,
    8@32 * (-25570049)@32 <=s L0x2001a354, L0x2001a354 <s 8@32 * 25570049@32,
    8@32 * (-25570049)@32 <=s L0x2001a358, L0x2001a358 <s 8@32 * 25570049@32,
    8@32 * (-25570049)@32 <=s L0x2001a35c, L0x2001a35c <s 8@32 * 25570049@32,
    8@32 * (-25570049)@32 <=s L0x2001a360, L0x2001a360 <s 8@32 * 25570049@32,
    8@32 * (-25570049)@32 <=s L0x2001a364, L0x2001a364 <s 8@32 * 25570049@32,
    8@32 * (-25570049)@32 <=s L0x2001a368, L0x2001a368 <s 8@32 * 25570049@32,
    8@32 * (-25570049)@32 <=s L0x2001a36c, L0x2001a36c <s 8@32 * 25570049@32,
    8@32 * (-25570049)@32 <=s L0x2001a370, L0x2001a370 <s 8@32 * 25570049@32,
    8@32 * (-25570049)@32 <=s L0x2001a374, L0x2001a374 <s 8@32 * 25570049@32,
    8@32 * (-25570049)@32 <=s L0x2001a378, L0x2001a378 <s 8@32 * 25570049@32,
    8@32 * (-25570049)@32 <=s L0x2001a37c, L0x2001a37c <s 8@32 * 25570049@32,
    8@32 * (-25570049)@32 <=s L0x2001a380, L0x2001a380 <s 8@32 * 25570049@32,
    8@32 * (-25570049)@32 <=s L0x2001a384, L0x2001a384 <s 8@32 * 25570049@32,
    8@32 * (-25570049)@32 <=s L0x2001a388, L0x2001a388 <s 8@32 * 25570049@32,
    8@32 * (-25570049)@32 <=s L0x2001a38c, L0x2001a38c <s 8@32 * 25570049@32,
    8@32 * (-25570049)@32 <=s L0x2001a390, L0x2001a390 <s 8@32 * 25570049@32,
    8@32 * (-25570049)@32 <=s L0x2001a394, L0x2001a394 <s 8@32 * 25570049@32,
    8@32 * (-25570049)@32 <=s L0x2001a398, L0x2001a398 <s 8@32 * 25570049@32,
    8@32 * (-25570049)@32 <=s L0x2001a39c, L0x2001a39c <s 8@32 * 25570049@32,
    8@32 * (-25570049)@32 <=s L0x2001a3a0, L0x2001a3a0 <s 8@32 * 25570049@32,
    8@32 * (-25570049)@32 <=s L0x2001a3a4, L0x2001a3a4 <s 8@32 * 25570049@32,
    8@32 * (-25570049)@32 <=s L0x2001a3a8, L0x2001a3a8 <s 8@32 * 25570049@32,
    8@32 * (-25570049)@32 <=s L0x2001a3ac, L0x2001a3ac <s 8@32 * 25570049@32,
    8@32 * (-25570049)@32 <=s L0x2001a3b0, L0x2001a3b0 <s 8@32 * 25570049@32,
    8@32 * (-25570049)@32 <=s L0x2001a3b4, L0x2001a3b4 <s 8@32 * 25570049@32,
    8@32 * (-25570049)@32 <=s L0x2001a3b8, L0x2001a3b8 <s 8@32 * 25570049@32,
    8@32 * (-25570049)@32 <=s L0x2001a3bc, L0x2001a3bc <s 8@32 * 25570049@32,
    8@32 * (-25570049)@32 <=s L0x2001a3c0, L0x2001a3c0 <s 8@32 * 25570049@32,
    8@32 * (-25570049)@32 <=s L0x2001a3c4, L0x2001a3c4 <s 8@32 * 25570049@32,
    8@32 * (-25570049)@32 <=s L0x2001a3c8, L0x2001a3c8 <s 8@32 * 25570049@32,
    8@32 * (-25570049)@32 <=s L0x2001a3cc, L0x2001a3cc <s 8@32 * 25570049@32,
    8@32 * (-25570049)@32 <=s L0x2001a3d0, L0x2001a3d0 <s 8@32 * 25570049@32,
    8@32 * (-25570049)@32 <=s L0x2001a3d4, L0x2001a3d4 <s 8@32 * 25570049@32,
    8@32 * (-25570049)@32 <=s L0x2001a3d8, L0x2001a3d8 <s 8@32 * 25570049@32,
    8@32 * (-25570049)@32 <=s L0x2001a3dc, L0x2001a3dc <s 8@32 * 25570049@32,
    8@32 * (-25570049)@32 <=s L0x2001a3e0, L0x2001a3e0 <s 8@32 * 25570049@32,
    8@32 * (-25570049)@32 <=s L0x2001a3e4, L0x2001a3e4 <s 8@32 * 25570049@32,
    8@32 * (-25570049)@32 <=s L0x2001a3e8, L0x2001a3e8 <s 8@32 * 25570049@32,
    8@32 * (-25570049)@32 <=s L0x2001a3ec, L0x2001a3ec <s 8@32 * 25570049@32,
    8@32 * (-25570049)@32 <=s L0x2001a3f0, L0x2001a3f0 <s 8@32 * 25570049@32,
    8@32 * (-25570049)@32 <=s L0x2001a3f4, L0x2001a3f4 <s 8@32 * 25570049@32,
    8@32 * (-25570049)@32 <=s L0x2001a3f8, L0x2001a3f8 <s 8@32 * 25570049@32,
    8@32 * (-25570049)@32 <=s L0x2001a3fc, L0x2001a3fc <s 8@32 * 25570049@32,
    8@32 * (-25570049)@32 <=s L0x2001a400, L0x2001a400 <s 8@32 * 25570049@32,
    8@32 * (-25570049)@32 <=s L0x2001a404, L0x2001a404 <s 8@32 * 25570049@32,
    8@32 * (-25570049)@32 <=s L0x2001a408, L0x2001a408 <s 8@32 * 25570049@32,
    8@32 * (-25570049)@32 <=s L0x2001a40c, L0x2001a40c <s 8@32 * 25570049@32,
    8@32 * (-25570049)@32 <=s L0x2001a410, L0x2001a410 <s 8@32 * 25570049@32,
    8@32 * (-25570049)@32 <=s L0x2001a414, L0x2001a414 <s 8@32 * 25570049@32,
    8@32 * (-25570049)@32 <=s L0x2001a418, L0x2001a418 <s 8@32 * 25570049@32,
    8@32 * (-25570049)@32 <=s L0x2001a41c, L0x2001a41c <s 8@32 * 25570049@32,
    8@32 * (-25570049)@32 <=s L0x2001a420, L0x2001a420 <s 8@32 * 25570049@32,
    8@32 * (-25570049)@32 <=s L0x2001a424, L0x2001a424 <s 8@32 * 25570049@32,
    8@32 * (-25570049)@32 <=s L0x2001a428, L0x2001a428 <s 8@32 * 25570049@32,
    8@32 * (-25570049)@32 <=s L0x2001a42c, L0x2001a42c <s 8@32 * 25570049@32,
    8@32 * (-25570049)@32 <=s L0x2001a430, L0x2001a430 <s 8@32 * 25570049@32,
    8@32 * (-25570049)@32 <=s L0x2001a434, L0x2001a434 <s 8@32 * 25570049@32,
    8@32 * (-25570049)@32 <=s L0x2001a438, L0x2001a438 <s 8@32 * 25570049@32,
    8@32 * (-25570049)@32 <=s L0x2001a43c, L0x2001a43c <s 8@32 * 25570049@32,
    8@32 * (-25570049)@32 <=s L0x2001a440, L0x2001a440 <s 8@32 * 25570049@32,
    8@32 * (-25570049)@32 <=s L0x2001a444, L0x2001a444 <s 8@32 * 25570049@32,
    8@32 * (-25570049)@32 <=s L0x2001a448, L0x2001a448 <s 8@32 * 25570049@32,
    8@32 * (-25570049)@32 <=s L0x2001a44c, L0x2001a44c <s 8@32 * 25570049@32,
    8@32 * (-25570049)@32 <=s L0x2001a450, L0x2001a450 <s 8@32 * 25570049@32,
    8@32 * (-25570049)@32 <=s L0x2001a454, L0x2001a454 <s 8@32 * 25570049@32,
    8@32 * (-25570049)@32 <=s L0x2001a458, L0x2001a458 <s 8@32 * 25570049@32,
    8@32 * (-25570049)@32 <=s L0x2001a45c, L0x2001a45c <s 8@32 * 25570049@32,
    8@32 * (-25570049)@32 <=s L0x2001a460, L0x2001a460 <s 8@32 * 25570049@32,
    8@32 * (-25570049)@32 <=s L0x2001a464, L0x2001a464 <s 8@32 * 25570049@32,
    8@32 * (-25570049)@32 <=s L0x2001a468, L0x2001a468 <s 8@32 * 25570049@32,
    8@32 * (-25570049)@32 <=s L0x2001a46c, L0x2001a46c <s 8@32 * 25570049@32,
    8@32 * (-25570049)@32 <=s L0x2001a470, L0x2001a470 <s 8@32 * 25570049@32,
    8@32 * (-25570049)@32 <=s L0x2001a474, L0x2001a474 <s 8@32 * 25570049@32,
    8@32 * (-25570049)@32 <=s L0x2001a478, L0x2001a478 <s 8@32 * 25570049@32,
    8@32 * (-25570049)@32 <=s L0x2001a47c, L0x2001a47c <s 8@32 * 25570049@32,
    8@32 * (-25570049)@32 <=s L0x2001a480, L0x2001a480 <s 8@32 * 25570049@32,
    8@32 * (-25570049)@32 <=s L0x2001a484, L0x2001a484 <s 8@32 * 25570049@32,
    8@32 * (-25570049)@32 <=s L0x2001a488, L0x2001a488 <s 8@32 * 25570049@32,
    8@32 * (-25570049)@32 <=s L0x2001a48c, L0x2001a48c <s 8@32 * 25570049@32,
    8@32 * (-25570049)@32 <=s L0x2001a490, L0x2001a490 <s 8@32 * 25570049@32,
    8@32 * (-25570049)@32 <=s L0x2001a494, L0x2001a494 <s 8@32 * 25570049@32,
    8@32 * (-25570049)@32 <=s L0x2001a498, L0x2001a498 <s 8@32 * 25570049@32,
    8@32 * (-25570049)@32 <=s L0x2001a49c, L0x2001a49c <s 8@32 * 25570049@32,
    8@32 * (-25570049)@32 <=s L0x2001a4a0, L0x2001a4a0 <s 8@32 * 25570049@32,
    8@32 * (-25570049)@32 <=s L0x2001a4a4, L0x2001a4a4 <s 8@32 * 25570049@32,
    8@32 * (-25570049)@32 <=s L0x2001a4a8, L0x2001a4a8 <s 8@32 * 25570049@32,
    8@32 * (-25570049)@32 <=s L0x2001a4ac, L0x2001a4ac <s 8@32 * 25570049@32,
    8@32 * (-25570049)@32 <=s L0x2001a4b0, L0x2001a4b0 <s 8@32 * 25570049@32,
    8@32 * (-25570049)@32 <=s L0x2001a4b4, L0x2001a4b4 <s 8@32 * 25570049@32,
    8@32 * (-25570049)@32 <=s L0x2001a4b8, L0x2001a4b8 <s 8@32 * 25570049@32,
    8@32 * (-25570049)@32 <=s L0x2001a4bc, L0x2001a4bc <s 8@32 * 25570049@32,
    8@32 * (-25570049)@32 <=s L0x2001a4c0, L0x2001a4c0 <s 8@32 * 25570049@32,
    8@32 * (-25570049)@32 <=s L0x2001a4c4, L0x2001a4c4 <s 8@32 * 25570049@32,
    8@32 * (-25570049)@32 <=s L0x2001a4c8, L0x2001a4c8 <s 8@32 * 25570049@32,
    8@32 * (-25570049)@32 <=s L0x2001a4cc, L0x2001a4cc <s 8@32 * 25570049@32,
    8@32 * (-25570049)@32 <=s L0x2001a4d0, L0x2001a4d0 <s 8@32 * 25570049@32,
    8@32 * (-25570049)@32 <=s L0x2001a4d4, L0x2001a4d4 <s 8@32 * 25570049@32,
    8@32 * (-25570049)@32 <=s L0x2001a4d8, L0x2001a4d8 <s 8@32 * 25570049@32,
    8@32 * (-25570049)@32 <=s L0x2001a4dc, L0x2001a4dc <s 8@32 * 25570049@32,
    8@32 * (-25570049)@32 <=s L0x2001a4e0, L0x2001a4e0 <s 8@32 * 25570049@32,
    8@32 * (-25570049)@32 <=s L0x2001a4e4, L0x2001a4e4 <s 8@32 * 25570049@32,
    8@32 * (-25570049)@32 <=s L0x2001a4e8, L0x2001a4e8 <s 8@32 * 25570049@32,
    8@32 * (-25570049)@32 <=s L0x2001a4ec, L0x2001a4ec <s 8@32 * 25570049@32,
    8@32 * (-25570049)@32 <=s L0x2001a4f0, L0x2001a4f0 <s 8@32 * 25570049@32,
    8@32 * (-25570049)@32 <=s L0x2001a4f4, L0x2001a4f4 <s 8@32 * 25570049@32,
    8@32 * (-25570049)@32 <=s L0x2001a4f8, L0x2001a4f8 <s 8@32 * 25570049@32,
    8@32 * (-25570049)@32 <=s L0x2001a4fc, L0x2001a4fc <s 8@32 * 25570049@32,
    8@32 * (-25570049)@32 <=s L0x2001a500, L0x2001a500 <s 8@32 * 25570049@32,
    8@32 * (-25570049)@32 <=s L0x2001a504, L0x2001a504 <s 8@32 * 25570049@32,
    8@32 * (-25570049)@32 <=s L0x2001a508, L0x2001a508 <s 8@32 * 25570049@32,
    8@32 * (-25570049)@32 <=s L0x2001a50c, L0x2001a50c <s 8@32 * 25570049@32,
    8@32 * (-25570049)@32 <=s L0x2001a510, L0x2001a510 <s 8@32 * 25570049@32,
    8@32 * (-25570049)@32 <=s L0x2001a514, L0x2001a514 <s 8@32 * 25570049@32,
    8@32 * (-25570049)@32 <=s L0x2001a518, L0x2001a518 <s 8@32 * 25570049@32,
    8@32 * (-25570049)@32 <=s L0x2001a51c, L0x2001a51c <s 8@32 * 25570049@32,
    8@32 * (-25570049)@32 <=s L0x2001a520, L0x2001a520 <s 8@32 * 25570049@32,
    8@32 * (-25570049)@32 <=s L0x2001a524, L0x2001a524 <s 8@32 * 25570049@32,
    8@32 * (-25570049)@32 <=s L0x2001a528, L0x2001a528 <s 8@32 * 25570049@32,
    8@32 * (-25570049)@32 <=s L0x2001a52c, L0x2001a52c <s 8@32 * 25570049@32,
    8@32 * (-25570049)@32 <=s L0x2001a530, L0x2001a530 <s 8@32 * 25570049@32,
    8@32 * (-25570049)@32 <=s L0x2001a534, L0x2001a534 <s 8@32 * 25570049@32,
    8@32 * (-25570049)@32 <=s L0x2001a538, L0x2001a538 <s 8@32 * 25570049@32,
    8@32 * (-25570049)@32 <=s L0x2001a53c, L0x2001a53c <s 8@32 * 25570049@32,
    8@32 * (-25570049)@32 <=s L0x2001a540, L0x2001a540 <s 8@32 * 25570049@32,
    8@32 * (-25570049)@32 <=s L0x2001a544, L0x2001a544 <s 8@32 * 25570049@32,
    8@32 * (-25570049)@32 <=s L0x2001a548, L0x2001a548 <s 8@32 * 25570049@32,
    8@32 * (-25570049)@32 <=s L0x2001a54c, L0x2001a54c <s 8@32 * 25570049@32,
    8@32 * (-25570049)@32 <=s L0x2001a550, L0x2001a550 <s 8@32 * 25570049@32,
    8@32 * (-25570049)@32 <=s L0x2001a554, L0x2001a554 <s 8@32 * 25570049@32,
    8@32 * (-25570049)@32 <=s L0x2001a558, L0x2001a558 <s 8@32 * 25570049@32,
    8@32 * (-25570049)@32 <=s L0x2001a55c, L0x2001a55c <s 8@32 * 25570049@32,
    8@32 * (-25570049)@32 <=s L0x2001a560, L0x2001a560 <s 8@32 * 25570049@32,
    8@32 * (-25570049)@32 <=s L0x2001a564, L0x2001a564 <s 8@32 * 25570049@32,
    8@32 * (-25570049)@32 <=s L0x2001a568, L0x2001a568 <s 8@32 * 25570049@32,
    8@32 * (-25570049)@32 <=s L0x2001a56c, L0x2001a56c <s 8@32 * 25570049@32,
    8@32 * (-25570049)@32 <=s L0x2001a570, L0x2001a570 <s 8@32 * 25570049@32,
    8@32 * (-25570049)@32 <=s L0x2001a574, L0x2001a574 <s 8@32 * 25570049@32,
    8@32 * (-25570049)@32 <=s L0x2001a578, L0x2001a578 <s 8@32 * 25570049@32,
    8@32 * (-25570049)@32 <=s L0x2001a57c, L0x2001a57c <s 8@32 * 25570049@32,
    8@32 * (-25570049)@32 <=s L0x2001a580, L0x2001a580 <s 8@32 * 25570049@32,
    8@32 * (-25570049)@32 <=s L0x2001a584, L0x2001a584 <s 8@32 * 25570049@32,
    8@32 * (-25570049)@32 <=s L0x2001a588, L0x2001a588 <s 8@32 * 25570049@32,
    8@32 * (-25570049)@32 <=s L0x2001a58c, L0x2001a58c <s 8@32 * 25570049@32,
    8@32 * (-25570049)@32 <=s L0x2001a590, L0x2001a590 <s 8@32 * 25570049@32,
    8@32 * (-25570049)@32 <=s L0x2001a594, L0x2001a594 <s 8@32 * 25570049@32,
    8@32 * (-25570049)@32 <=s L0x2001a598, L0x2001a598 <s 8@32 * 25570049@32,
    8@32 * (-25570049)@32 <=s L0x2001a59c, L0x2001a59c <s 8@32 * 25570049@32,
    8@32 * (-25570049)@32 <=s L0x2001a5a0, L0x2001a5a0 <s 8@32 * 25570049@32,
    8@32 * (-25570049)@32 <=s L0x2001a5a4, L0x2001a5a4 <s 8@32 * 25570049@32,
    8@32 * (-25570049)@32 <=s L0x2001a5a8, L0x2001a5a8 <s 8@32 * 25570049@32,
    8@32 * (-25570049)@32 <=s L0x2001a5ac, L0x2001a5ac <s 8@32 * 25570049@32,
    8@32 * (-25570049)@32 <=s L0x2001a5b0, L0x2001a5b0 <s 8@32 * 25570049@32,
    8@32 * (-25570049)@32 <=s L0x2001a5b4, L0x2001a5b4 <s 8@32 * 25570049@32,
    8@32 * (-25570049)@32 <=s L0x2001a5b8, L0x2001a5b8 <s 8@32 * 25570049@32,
    8@32 * (-25570049)@32 <=s L0x2001a5bc, L0x2001a5bc <s 8@32 * 25570049@32,
    8@32 * (-25570049)@32 <=s L0x2001a5c0, L0x2001a5c0 <s 8@32 * 25570049@32,
    8@32 * (-25570049)@32 <=s L0x2001a5c4, L0x2001a5c4 <s 8@32 * 25570049@32,
    8@32 * (-25570049)@32 <=s L0x2001a5c8, L0x2001a5c8 <s 8@32 * 25570049@32,
    8@32 * (-25570049)@32 <=s L0x2001a5cc, L0x2001a5cc <s 8@32 * 25570049@32,
    8@32 * (-25570049)@32 <=s L0x2001a5d0, L0x2001a5d0 <s 8@32 * 25570049@32,
    8@32 * (-25570049)@32 <=s L0x2001a5d4, L0x2001a5d4 <s 8@32 * 25570049@32,
    8@32 * (-25570049)@32 <=s L0x2001a5d8, L0x2001a5d8 <s 8@32 * 25570049@32,
    8@32 * (-25570049)@32 <=s L0x2001a5dc, L0x2001a5dc <s 8@32 * 25570049@32,
    8@32 * (-25570049)@32 <=s L0x2001a5e0, L0x2001a5e0 <s 8@32 * 25570049@32,
    8@32 * (-25570049)@32 <=s L0x2001a5e4, L0x2001a5e4 <s 8@32 * 25570049@32,
    8@32 * (-25570049)@32 <=s L0x2001a5e8, L0x2001a5e8 <s 8@32 * 25570049@32,
    8@32 * (-25570049)@32 <=s L0x2001a5ec, L0x2001a5ec <s 8@32 * 25570049@32,
    8@32 * (-25570049)@32 <=s L0x2001a5f0, L0x2001a5f0 <s 8@32 * 25570049@32,
    8@32 * (-25570049)@32 <=s L0x2001a5f4, L0x2001a5f4 <s 8@32 * 25570049@32,
    8@32 * (-25570049)@32 <=s L0x2001a5f8, L0x2001a5f8 <s 8@32 * 25570049@32,
    8@32 * (-25570049)@32 <=s L0x2001a5fc, L0x2001a5fc <s 8@32 * 25570049@32,
    8@32 * (-25570049)@32 <=s L0x2001a600, L0x2001a600 <s 8@32 * 25570049@32,
    8@32 * (-25570049)@32 <=s L0x2001a604, L0x2001a604 <s 8@32 * 25570049@32,
    8@32 * (-25570049)@32 <=s L0x2001a608, L0x2001a608 <s 8@32 * 25570049@32,
    8@32 * (-25570049)@32 <=s L0x2001a60c, L0x2001a60c <s 8@32 * 25570049@32,
    8@32 * (-25570049)@32 <=s L0x2001a610, L0x2001a610 <s 8@32 * 25570049@32,
    8@32 * (-25570049)@32 <=s L0x2001a614, L0x2001a614 <s 8@32 * 25570049@32,
    8@32 * (-25570049)@32 <=s L0x2001a618, L0x2001a618 <s 8@32 * 25570049@32,
    8@32 * (-25570049)@32 <=s L0x2001a61c, L0x2001a61c <s 8@32 * 25570049@32,
    8@32 * (-25570049)@32 <=s L0x2001a620, L0x2001a620 <s 8@32 * 25570049@32,
    8@32 * (-25570049)@32 <=s L0x2001a624, L0x2001a624 <s 8@32 * 25570049@32,
    8@32 * (-25570049)@32 <=s L0x2001a628, L0x2001a628 <s 8@32 * 25570049@32,
    8@32 * (-25570049)@32 <=s L0x2001a62c, L0x2001a62c <s 8@32 * 25570049@32,
    8@32 * (-25570049)@32 <=s L0x2001a630, L0x2001a630 <s 8@32 * 25570049@32,
    8@32 * (-25570049)@32 <=s L0x2001a634, L0x2001a634 <s 8@32 * 25570049@32,
    8@32 * (-25570049)@32 <=s L0x2001a638, L0x2001a638 <s 8@32 * 25570049@32,
    8@32 * (-25570049)@32 <=s L0x2001a63c, L0x2001a63c <s 8@32 * 25570049@32,
    8@32 * (-25570049)@32 <=s L0x2001a640, L0x2001a640 <s 8@32 * 25570049@32,
    8@32 * (-25570049)@32 <=s L0x2001a644, L0x2001a644 <s 8@32 * 25570049@32
  ] prove with [cuts [0]]
;

(* imm_polys *)
ghost imm_poly_0@bit :
  imm_poly_0 * imm_poly_0 = 
    L0x2001a248 * (x**0) * (y_3_0**0) + L0x2001a24c * (x**1) * (y_3_0**0) + 
    L0x2001a250 * (x**2) * (y_3_0**0) + L0x2001a254 * (x**3) * (y_3_0**0) + 
    L0x2001a258 * (x**0) * (y_3_0**1) + L0x2001a25c * (x**1) * (y_3_0**1) + 
    L0x2001a260 * (x**2) * (y_3_0**1) + L0x2001a264 * (x**3) * (y_3_0**1) + 
    L0x2001a268 * (x**0) * (y_3_0**2) + L0x2001a26c * (x**1) * (y_3_0**2) + 
    L0x2001a270 * (x**2) * (y_3_0**2) + L0x2001a274 * (x**3) * (y_3_0**2) + 
    L0x2001a278 * (x**0) * (y_3_0**3) + L0x2001a27c * (x**1) * (y_3_0**3) + 
    L0x2001a280 * (x**2) * (y_3_0**3) + L0x2001a284 * (x**3) * (y_3_0**3) + 
    L0x2001a288 * (x**0) * (y_3_0**4) + L0x2001a28c * (x**1) * (y_3_0**4) + 
    L0x2001a290 * (x**2) * (y_3_0**4) + L0x2001a294 * (x**3) * (y_3_0**4) + 
    L0x2001a298 * (x**0) * (y_3_0**5) + L0x2001a29c * (x**1) * (y_3_0**5) + 
    L0x2001a2a0 * (x**2) * (y_3_0**5) + L0x2001a2a4 * (x**3) * (y_3_0**5) + 
    L0x2001a2a8 * (x**0) * (y_3_0**6) + L0x2001a2ac * (x**1) * (y_3_0**6) + 
    L0x2001a2b0 * (x**2) * (y_3_0**6) + L0x2001a2b4 * (x**3) * (y_3_0**6) + 
    L0x2001a2b8 * (x**0) * (y_3_0**7) + L0x2001a2bc * (x**1) * (y_3_0**7) + 
    L0x2001a2c0 * (x**2) * (y_3_0**7) + L0x2001a2c4 * (x**3) * (y_3_0**7)
  && true;

ghost imm_poly_1@bit :
  imm_poly_1 * imm_poly_1 = 
    L0x2001a2c8 * (x**0) * (y_3_1**0) + L0x2001a2cc * (x**1) * (y_3_1**0) + 
    L0x2001a2d0 * (x**2) * (y_3_1**0) + L0x2001a2d4 * (x**3) * (y_3_1**0) + 
    L0x2001a2d8 * (x**0) * (y_3_1**1) + L0x2001a2dc * (x**1) * (y_3_1**1) + 
    L0x2001a2e0 * (x**2) * (y_3_1**1) + L0x2001a2e4 * (x**3) * (y_3_1**1) + 
    L0x2001a2e8 * (x**0) * (y_3_1**2) + L0x2001a2ec * (x**1) * (y_3_1**2) + 
    L0x2001a2f0 * (x**2) * (y_3_1**2) + L0x2001a2f4 * (x**3) * (y_3_1**2) + 
    L0x2001a2f8 * (x**0) * (y_3_1**3) + L0x2001a2fc * (x**1) * (y_3_1**3) + 
    L0x2001a300 * (x**2) * (y_3_1**3) + L0x2001a304 * (x**3) * (y_3_1**3) + 
    L0x2001a308 * (x**0) * (y_3_1**4) + L0x2001a30c * (x**1) * (y_3_1**4) + 
    L0x2001a310 * (x**2) * (y_3_1**4) + L0x2001a314 * (x**3) * (y_3_1**4) + 
    L0x2001a318 * (x**0) * (y_3_1**5) + L0x2001a31c * (x**1) * (y_3_1**5) + 
    L0x2001a320 * (x**2) * (y_3_1**5) + L0x2001a324 * (x**3) * (y_3_1**5) + 
    L0x2001a328 * (x**0) * (y_3_1**6) + L0x2001a32c * (x**1) * (y_3_1**6) + 
    L0x2001a330 * (x**2) * (y_3_1**6) + L0x2001a334 * (x**3) * (y_3_1**6) + 
    L0x2001a338 * (x**0) * (y_3_1**7) + L0x2001a33c * (x**1) * (y_3_1**7) + 
    L0x2001a340 * (x**2) * (y_3_1**7) + L0x2001a344 * (x**3) * (y_3_1**7)
  && true;

ghost imm_poly_2@bit :
  imm_poly_2 * imm_poly_2 = 
    L0x2001a348 * (x**0) * (y_3_2**0) + L0x2001a34c * (x**1) * (y_3_2**0) + 
    L0x2001a350 * (x**2) * (y_3_2**0) + L0x2001a354 * (x**3) * (y_3_2**0) + 
    L0x2001a358 * (x**0) * (y_3_2**1) + L0x2001a35c * (x**1) * (y_3_2**1) + 
    L0x2001a360 * (x**2) * (y_3_2**1) + L0x2001a364 * (x**3) * (y_3_2**1) + 
    L0x2001a368 * (x**0) * (y_3_2**2) + L0x2001a36c * (x**1) * (y_3_2**2) + 
    L0x2001a370 * (x**2) * (y_3_2**2) + L0x2001a374 * (x**3) * (y_3_2**2) + 
    L0x2001a378 * (x**0) * (y_3_2**3) + L0x2001a37c * (x**1) * (y_3_2**3) + 
    L0x2001a380 * (x**2) * (y_3_2**3) + L0x2001a384 * (x**3) * (y_3_2**3) + 
    L0x2001a388 * (x**0) * (y_3_2**4) + L0x2001a38c * (x**1) * (y_3_2**4) + 
    L0x2001a390 * (x**2) * (y_3_2**4) + L0x2001a394 * (x**3) * (y_3_2**4) + 
    L0x2001a398 * (x**0) * (y_3_2**5) + L0x2001a39c * (x**1) * (y_3_2**5) + 
    L0x2001a3a0 * (x**2) * (y_3_2**5) + L0x2001a3a4 * (x**3) * (y_3_2**5) + 
    L0x2001a3a8 * (x**0) * (y_3_2**6) + L0x2001a3ac * (x**1) * (y_3_2**6) + 
    L0x2001a3b0 * (x**2) * (y_3_2**6) + L0x2001a3b4 * (x**3) * (y_3_2**6) + 
    L0x2001a3b8 * (x**0) * (y_3_2**7) + L0x2001a3bc * (x**1) * (y_3_2**7) + 
    L0x2001a3c0 * (x**2) * (y_3_2**7) + L0x2001a3c4 * (x**3) * (y_3_2**7)
  && true;

ghost imm_poly_3@bit :
  imm_poly_3 * imm_poly_3 = 
    L0x2001a3c8 * (x**0) * (y_3_3**0) + L0x2001a3cc * (x**1) * (y_3_3**0) + 
    L0x2001a3d0 * (x**2) * (y_3_3**0) + L0x2001a3d4 * (x**3) * (y_3_3**0) + 
    L0x2001a3d8 * (x**0) * (y_3_3**1) + L0x2001a3dc * (x**1) * (y_3_3**1) + 
    L0x2001a3e0 * (x**2) * (y_3_3**1) + L0x2001a3e4 * (x**3) * (y_3_3**1) + 
    L0x2001a3e8 * (x**0) * (y_3_3**2) + L0x2001a3ec * (x**1) * (y_3_3**2) + 
    L0x2001a3f0 * (x**2) * (y_3_3**2) + L0x2001a3f4 * (x**3) * (y_3_3**2) + 
    L0x2001a3f8 * (x**0) * (y_3_3**3) + L0x2001a3fc * (x**1) * (y_3_3**3) + 
    L0x2001a400 * (x**2) * (y_3_3**3) + L0x2001a404 * (x**3) * (y_3_3**3) + 
    L0x2001a408 * (x**0) * (y_3_3**4) + L0x2001a40c * (x**1) * (y_3_3**4) + 
    L0x2001a410 * (x**2) * (y_3_3**4) + L0x2001a414 * (x**3) * (y_3_3**4) + 
    L0x2001a418 * (x**0) * (y_3_3**5) + L0x2001a41c * (x**1) * (y_3_3**5) + 
    L0x2001a420 * (x**2) * (y_3_3**5) + L0x2001a424 * (x**3) * (y_3_3**5) + 
    L0x2001a428 * (x**0) * (y_3_3**6) + L0x2001a42c * (x**1) * (y_3_3**6) + 
    L0x2001a430 * (x**2) * (y_3_3**6) + L0x2001a434 * (x**3) * (y_3_3**6) + 
    L0x2001a438 * (x**0) * (y_3_3**7) + L0x2001a43c * (x**1) * (y_3_3**7) + 
    L0x2001a440 * (x**2) * (y_3_3**7) + L0x2001a444 * (x**3) * (y_3_3**7)
  && true;

ghost imm_poly_4@bit :
  imm_poly_4 * imm_poly_4 = 
    L0x2001a448 * (x**0) * (y_3_4**0) + L0x2001a44c * (x**1) * (y_3_4**0) + 
    L0x2001a450 * (x**2) * (y_3_4**0) + L0x2001a454 * (x**3) * (y_3_4**0) + 
    L0x2001a458 * (x**0) * (y_3_4**1) + L0x2001a45c * (x**1) * (y_3_4**1) + 
    L0x2001a460 * (x**2) * (y_3_4**1) + L0x2001a464 * (x**3) * (y_3_4**1) + 
    L0x2001a468 * (x**0) * (y_3_4**2) + L0x2001a46c * (x**1) * (y_3_4**2) + 
    L0x2001a470 * (x**2) * (y_3_4**2) + L0x2001a474 * (x**3) * (y_3_4**2) + 
    L0x2001a478 * (x**0) * (y_3_4**3) + L0x2001a47c * (x**1) * (y_3_4**3) + 
    L0x2001a480 * (x**2) * (y_3_4**3) + L0x2001a484 * (x**3) * (y_3_4**3) + 
    L0x2001a488 * (x**0) * (y_3_4**4) + L0x2001a48c * (x**1) * (y_3_4**4) + 
    L0x2001a490 * (x**2) * (y_3_4**4) + L0x2001a494 * (x**3) * (y_3_4**4) + 
    L0x2001a498 * (x**0) * (y_3_4**5) + L0x2001a49c * (x**1) * (y_3_4**5) + 
    L0x2001a4a0 * (x**2) * (y_3_4**5) + L0x2001a4a4 * (x**3) * (y_3_4**5) + 
    L0x2001a4a8 * (x**0) * (y_3_4**6) + L0x2001a4ac * (x**1) * (y_3_4**6) + 
    L0x2001a4b0 * (x**2) * (y_3_4**6) + L0x2001a4b4 * (x**3) * (y_3_4**6) + 
    L0x2001a4b8 * (x**0) * (y_3_4**7) + L0x2001a4bc * (x**1) * (y_3_4**7) + 
    L0x2001a4c0 * (x**2) * (y_3_4**7) + L0x2001a4c4 * (x**3) * (y_3_4**7)
  && true;

ghost imm_poly_5@bit :
  imm_poly_5 * imm_poly_5 = 
    L0x2001a4c8 * (x**0) * (y_3_5**0) + L0x2001a4cc * (x**1) * (y_3_5**0) + 
    L0x2001a4d0 * (x**2) * (y_3_5**0) + L0x2001a4d4 * (x**3) * (y_3_5**0) + 
    L0x2001a4d8 * (x**0) * (y_3_5**1) + L0x2001a4dc * (x**1) * (y_3_5**1) + 
    L0x2001a4e0 * (x**2) * (y_3_5**1) + L0x2001a4e4 * (x**3) * (y_3_5**1) + 
    L0x2001a4e8 * (x**0) * (y_3_5**2) + L0x2001a4ec * (x**1) * (y_3_5**2) + 
    L0x2001a4f0 * (x**2) * (y_3_5**2) + L0x2001a4f4 * (x**3) * (y_3_5**2) + 
    L0x2001a4f8 * (x**0) * (y_3_5**3) + L0x2001a4fc * (x**1) * (y_3_5**3) + 
    L0x2001a500 * (x**2) * (y_3_5**3) + L0x2001a504 * (x**3) * (y_3_5**3) + 
    L0x2001a508 * (x**0) * (y_3_5**4) + L0x2001a50c * (x**1) * (y_3_5**4) + 
    L0x2001a510 * (x**2) * (y_3_5**4) + L0x2001a514 * (x**3) * (y_3_5**4) + 
    L0x2001a518 * (x**0) * (y_3_5**5) + L0x2001a51c * (x**1) * (y_3_5**5) + 
    L0x2001a520 * (x**2) * (y_3_5**5) + L0x2001a524 * (x**3) * (y_3_5**5) + 
    L0x2001a528 * (x**0) * (y_3_5**6) + L0x2001a52c * (x**1) * (y_3_5**6) + 
    L0x2001a530 * (x**2) * (y_3_5**6) + L0x2001a534 * (x**3) * (y_3_5**6) + 
    L0x2001a538 * (x**0) * (y_3_5**7) + L0x2001a53c * (x**1) * (y_3_5**7) + 
    L0x2001a540 * (x**2) * (y_3_5**7) + L0x2001a544 * (x**3) * (y_3_5**7)
  && true;

ghost imm_poly_6@bit :
  imm_poly_6 * imm_poly_6 = 
    L0x2001a548 * (x**0) * (y_3_6**0) + L0x2001a54c * (x**1) * (y_3_6**0) + 
    L0x2001a550 * (x**2) * (y_3_6**0) + L0x2001a554 * (x**3) * (y_3_6**0) + 
    L0x2001a558 * (x**0) * (y_3_6**1) + L0x2001a55c * (x**1) * (y_3_6**1) + 
    L0x2001a560 * (x**2) * (y_3_6**1) + L0x2001a564 * (x**3) * (y_3_6**1) + 
    L0x2001a568 * (x**0) * (y_3_6**2) + L0x2001a56c * (x**1) * (y_3_6**2) + 
    L0x2001a570 * (x**2) * (y_3_6**2) + L0x2001a574 * (x**3) * (y_3_6**2) + 
    L0x2001a578 * (x**0) * (y_3_6**3) + L0x2001a57c * (x**1) * (y_3_6**3) + 
    L0x2001a580 * (x**2) * (y_3_6**3) + L0x2001a584 * (x**3) * (y_3_6**3) + 
    L0x2001a588 * (x**0) * (y_3_6**4) + L0x2001a58c * (x**1) * (y_3_6**4) + 
    L0x2001a590 * (x**2) * (y_3_6**4) + L0x2001a594 * (x**3) * (y_3_6**4) + 
    L0x2001a598 * (x**0) * (y_3_6**5) + L0x2001a59c * (x**1) * (y_3_6**5) + 
    L0x2001a5a0 * (x**2) * (y_3_6**5) + L0x2001a5a4 * (x**3) * (y_3_6**5) + 
    L0x2001a5a8 * (x**0) * (y_3_6**6) + L0x2001a5ac * (x**1) * (y_3_6**6) + 
    L0x2001a5b0 * (x**2) * (y_3_6**6) + L0x2001a5b4 * (x**3) * (y_3_6**6) + 
    L0x2001a5b8 * (x**0) * (y_3_6**7) + L0x2001a5bc * (x**1) * (y_3_6**7) + 
    L0x2001a5c0 * (x**2) * (y_3_6**7) + L0x2001a5c4 * (x**3) * (y_3_6**7)
  && true;

ghost imm_poly_7@bit :
  imm_poly_7 * imm_poly_7 = 
    L0x2001a5c8 * (x**0) * (y_3_7**0) + L0x2001a5cc * (x**1) * (y_3_7**0) + 
    L0x2001a5d0 * (x**2) * (y_3_7**0) + L0x2001a5d4 * (x**3) * (y_3_7**0) + 
    L0x2001a5d8 * (x**0) * (y_3_7**1) + L0x2001a5dc * (x**1) * (y_3_7**1) + 
    L0x2001a5e0 * (x**2) * (y_3_7**1) + L0x2001a5e4 * (x**3) * (y_3_7**1) + 
    L0x2001a5e8 * (x**0) * (y_3_7**2) + L0x2001a5ec * (x**1) * (y_3_7**2) + 
    L0x2001a5f0 * (x**2) * (y_3_7**2) + L0x2001a5f4 * (x**3) * (y_3_7**2) + 
    L0x2001a5f8 * (x**0) * (y_3_7**3) + L0x2001a5fc * (x**1) * (y_3_7**3) + 
    L0x2001a600 * (x**2) * (y_3_7**3) + L0x2001a604 * (x**3) * (y_3_7**3) + 
    L0x2001a608 * (x**0) * (y_3_7**4) + L0x2001a60c * (x**1) * (y_3_7**4) + 
    L0x2001a610 * (x**2) * (y_3_7**4) + L0x2001a614 * (x**3) * (y_3_7**4) + 
    L0x2001a618 * (x**0) * (y_3_7**5) + L0x2001a61c * (x**1) * (y_3_7**5) + 
    L0x2001a620 * (x**2) * (y_3_7**5) + L0x2001a624 * (x**3) * (y_3_7**5) + 
    L0x2001a628 * (x**0) * (y_3_7**6) + L0x2001a62c * (x**1) * (y_3_7**6) + 
    L0x2001a630 * (x**2) * (y_3_7**6) + L0x2001a634 * (x**3) * (y_3_7**6) + 
    L0x2001a638 * (x**0) * (y_3_7**7) + L0x2001a63c * (x**1) * (y_3_7**7) + 
    L0x2001a640 * (x**2) * (y_3_7**7) + L0x2001a644 * (x**3) * (y_3_7**7)
  && true;


(* sub.w	r0, r0, #1024	; 0x400                     #! PC = 0x8005494 *)
subs discard r0 r0 1024@uint32;
(* vmov	r1, s1                                     #! PC = 0x8005498 *)
mov r1 s1;
(* vldmia	r1!, {s4-s18}                            #! EA = L0x800f7bc; PC = 0x800549c *)
mov s4 L0x800f7bc;
mov s5 L0x800f7c0;
mov s6 L0x800f7c4;
mov s7 L0x800f7c8;
mov s8 L0x800f7cc;
mov s9 L0x800f7d0;
mov s10 L0x800f7d4;
mov s11 L0x800f7d8;
mov s12 L0x800f7dc;
mov s13 L0x800f7e0;
mov s14 L0x800f7e4;
mov s15 L0x800f7e8;
mov s16 L0x800f7ec;
mov s17 L0x800f7f0;
mov s18 L0x800f7f4;
(* vmov	s1, r1                                     #! PC = 0x80054a0 *)
mov s1 r1;
(* add.w	r12, r0, #16                              #! PC = 0x80054a4 *)
adds discard r12 r0 16@uint32;
(* vmov	s2, r12                                    #! PC = 0x80054a8 *)
mov s2 r12;
(* ldr.w	r8, [r0, #512]	; 0x200                    #! EA = L0x2001a448; Value = 0xfe2b6bb6; PC = 0x80054ac *)
mov r8 L0x2001a448;
(* ldr.w	r5, [r0, #640]	; 0x280                    #! EA = L0x2001a4c8; Value = 0xfe7dc90e; PC = 0x80054b0 *)
mov r5 L0x2001a4c8;
(* ldr.w	r10, [r0, #768]	; 0x300                   #! EA = L0x2001a548; Value = 0x0240858d; PC = 0x80054b4 *)
mov r10 L0x2001a548;
(* ldr.w	r7, [r0, #896]	; 0x380                    #! EA = L0x2001a5c8; Value = 0x01f9d9f2; PC = 0x80054b8 *)
mov r7 L0x2001a5c8;
(* add	r8, r5                                      #! PC = 0x80054bc *)
add r8 r8 r5;
(* add	r10, r7                                     #! PC = 0x80054be *)
add r10 r10 r7;
(* sub.w	r5, r8, r5, lsl #1                        #! PC = 0x80054c0 *)
shl tmp r5 1;
sub r5 r8 tmp;
(* sub.w	r7, r10, r7, lsl #1                       #! PC = 0x80054c4 *)
shl tmp r7 1;
sub r7 r10 tmp;
(* add.w	r8, r8, r10                               #! PC = 0x80054c8 *)
add r8 r8 r10;
(* sub.w	r10, r8, r10, lsl #1                      #! PC = 0x80054cc *)
shl tmp r10 1;
sub r10 r8 tmp;
(* vmov	r12, s8                                    #! PC = 0x80054d0 *)
mov r12 s8;
(* vmov	lr, s10                                    #! PC = 0x80054d4 *)
mov lr s10;
(* smull	r4, r9, r5, r12                           #! PC = 0x80054d8 *)
smull r9 r4 r5 r12;
(* smlal	r4, r9, r7, lr                            #! PC = 0x80054dc *)
cast r7@sint32 r7;
smull tmp_h tmp_l r7 lr;
uadds carry r4 tmp_l r4;
sadc r9 tmp_h r9 carry;
(* mul.w	r1, r4, r2                                #! PC = 0x80054e0 *)
cast r4_s@sint32 r4;
mull discard r1 r4_s r2;
(* smlal	r4, r9, r1, r3                            #! PC = 0x80054e4 *)
cast r1@sint32 r1;
smull tmp_h tmp_l r1 r3;
uadds carry r4 tmp_l r4;
sadc r9 tmp_h r9 carry;
assert eqmod r4 0 (2**32) && true;
assume eq r4 0 && true;
(* smull	r6, r11, r5, lr                           #! PC = 0x80054e8 *)
smull r11 r6 r5 lr;
(* smlal	r6, r11, r7, r12                          #! PC = 0x80054ec *)
cast r7@sint32 r7;
smull tmp_h tmp_l r7 r12;
uadds carry r6 tmp_l r6;
sadc r11 tmp_h r11 carry;
(* mul.w	r1, r6, r2                                #! PC = 0x80054f0 *)
cast r6_s@sint32 r6;
mull discard r1 r6_s r2;
(* smlal	r6, r11, r1, r3                           #! PC = 0x80054f4 *)
cast r1@sint32 r1;
smull tmp_h tmp_l r1 r3;
uadds carry r6 tmp_l r6;
sadc r11 tmp_h r11 carry;
assert eqmod r6 0 (2**32) && true;
assume eq r6 0 && true;
(* ldr.w	r5, [r0, #128]	; 0x80                     #! EA = L0x2001a2c8; Value = 0xfe594f0d; PC = 0x80054f8 *)
mov r5 L0x2001a2c8;
(* ldr.w	r6, [r0, #256]	; 0x100                    #! EA = L0x2001a348; Value = 0xfee44bef; PC = 0x80054fc *)
mov r6 L0x2001a348;
(* ldr.w	r7, [r0, #384]	; 0x180                    #! EA = L0x2001a3c8; Value = 0xff9d5d83; PC = 0x8005500 *)
mov r7 L0x2001a3c8;
(* ldr.w	r4, [r0], #4                              #! EA = L0x2001a248; Value = 0x00f47bfb; PC = 0x8005504 *)
mov r4 L0x2001a248;
(* add	r4, r5                                      #! PC = 0x8005508 *)
add r4 r4 r5;
(* add	r6, r7                                      #! PC = 0x800550a *)
add r6 r6 r7;
(* sub.w	r5, r4, r5, lsl #1                        #! PC = 0x800550c *)
shl tmp r5 1;
sub r5 r4 tmp;
(* sub.w	r7, r6, r7, lsl #1                        #! PC = 0x8005510 *)
shl tmp r7 1;
sub r7 r6 tmp;
(* vmov	r1, s6                                     #! PC = 0x8005514 *)
mov r1 s6;
(* smull	r12, r7, r7, r1                           #! PC = 0x8005518 *)
smull r7 r12 r7 r1;
(* mul.w	lr, r12, r2                               #! PC = 0x800551c *)
cast r12_s@sint32 r12;
mull discard lr r12_s r2;
(* smlal	r12, r7, lr, r3                           #! PC = 0x8005520 *)
cast lr@sint32 lr;
smull tmp_h tmp_l lr r3;
uadds carry r12 tmp_l r12;
sadc r7 tmp_h r7 carry;
assert eqmod r12 0 (2**32) && true;
assume eq r12 0 && true;
(* add	r4, r6                                      #! PC = 0x8005524 *)
add r4 r4 r6;
(* add	r5, r7                                      #! PC = 0x8005526 *)
add r5 r5 r7;
(* sub.w	r6, r4, r6, lsl #1                        #! PC = 0x8005528 *)
shl tmp r6 1;
sub r6 r4 tmp;
(* sub.w	r7, r5, r7, lsl #1                        #! PC = 0x800552c *)
shl tmp r7 1;
sub r7 r5 tmp;
(* smull	r12, r10, r10, r1                         #! PC = 0x8005530 *)
smull r10 r12 r10 r1;
(* mul.w	lr, r12, r2                               #! PC = 0x8005534 *)
cast r12_s@sint32 r12;
mull discard lr r12_s r2;
(* smlal	r12, r10, lr, r3                          #! PC = 0x8005538 *)
cast lr@sint32 lr;
smull tmp_h tmp_l lr r3;
uadds carry r12 tmp_l r12;
sadc r10 tmp_h r10 carry;
assert eqmod r12 0 (2**32) && true;
assume eq r12 0 && true;
(* add	r4, r8                                      #! PC = 0x800553c *)
add r4 r4 r8;
(* add	r5, r9                                      #! PC = 0x800553e *)
add r5 r5 r9;
(* add	r6, r10                                     #! PC = 0x8005540 *)
add r6 r6 r10;
(* add	r7, r11                                     #! PC = 0x8005542 *)
add r7 r7 r11;
(* sub.w	r8, r4, r8, lsl #1                        #! PC = 0x8005544 *)
shl tmp r8 1;
sub r8 r4 tmp;
(* sub.w	r9, r5, r9, lsl #1                        #! PC = 0x8005548 *)
shl tmp r9 1;
sub r9 r5 tmp;
(* sub.w	r10, r6, r10, lsl #1                      #! PC = 0x800554c *)
shl tmp r10 1;
sub r10 r6 tmp;
(* sub.w	r11, r7, r11, lsl #1                      #! PC = 0x8005550 *)
shl tmp r11 1;
sub r11 r7 tmp;
(* vmov	r1, s11                                    #! PC = 0x8005554 *)
mov r1 s11;
(* smull	r12, r4, r4, r1                           #! PC = 0x8005558 *)
smull r4 r12 r4 r1;
(* mul.w	lr, r12, r2                               #! PC = 0x800555c *)
cast r12_s@sint32 r12;
mull discard lr r12_s r2;
(* smlal	r12, r4, lr, r3                           #! PC = 0x8005560 *)
cast lr@sint32 lr;
smull tmp_h tmp_l lr r3;
uadds carry r12 tmp_l r12;
sadc r4 tmp_h r4 carry;
assert eqmod r12 0 (2**32) && true;
assume eq r12 0 && true;
(* vmov	r1, s12                                    #! PC = 0x8005564 *)
mov r1 s12;
(* smull	r12, r5, r5, r1                           #! PC = 0x8005568 *)
smull r5 r12 r5 r1;
(* mul.w	lr, r12, r2                               #! PC = 0x800556c *)
cast r12_s@sint32 r12;
mull discard lr r12_s r2;
(* smlal	r12, r5, lr, r3                           #! PC = 0x8005570 *)
cast lr@sint32 lr;
smull tmp_h tmp_l lr r3;
uadds carry r12 tmp_l r12;
sadc r5 tmp_h r5 carry;
assert eqmod r12 0 (2**32) && true;
assume eq r12 0 && true;
(* vmov	r1, s13                                    #! PC = 0x8005574 *)
mov r1 s13;
(* smull	r12, r6, r6, r1                           #! PC = 0x8005578 *)
smull r6 r12 r6 r1;
(* mul.w	lr, r12, r2                               #! PC = 0x800557c *)
cast r12_s@sint32 r12;
mull discard lr r12_s r2;
(* smlal	r12, r6, lr, r3                           #! PC = 0x8005580 *)
cast lr@sint32 lr;
smull tmp_h tmp_l lr r3;
uadds carry r12 tmp_l r12;
sadc r6 tmp_h r6 carry;
assert eqmod r12 0 (2**32) && true;
assume eq r12 0 && true;
(* vmov	r1, s14                                    #! PC = 0x8005584 *)
mov r1 s14;
(* smull	r12, r7, r7, r1                           #! PC = 0x8005588 *)
smull r7 r12 r7 r1;
(* mul.w	lr, r12, r2                               #! PC = 0x800558c *)
cast r12_s@sint32 r12;
mull discard lr r12_s r2;
(* smlal	r12, r7, lr, r3                           #! PC = 0x8005590 *)
cast lr@sint32 lr;
smull tmp_h tmp_l lr r3;
uadds carry r12 tmp_l r12;
sadc r7 tmp_h r7 carry;
assert eqmod r12 0 (2**32) && true;
assume eq r12 0 && true;
(* vmov	r1, s15                                    #! PC = 0x8005594 *)
mov r1 s15;
(* smull	r12, r8, r8, r1                           #! PC = 0x8005598 *)
smull r8 r12 r8 r1;
(* mul.w	lr, r12, r2                               #! PC = 0x800559c *)
cast r12_s@sint32 r12;
mull discard lr r12_s r2;
(* smlal	r12, r8, lr, r3                           #! PC = 0x80055a0 *)
cast lr@sint32 lr;
smull tmp_h tmp_l lr r3;
uadds carry r12 tmp_l r12;
sadc r8 tmp_h r8 carry;
assert eqmod r12 0 (2**32) && true;
assume eq r12 0 && true;
(* vmov	r1, s16                                    #! PC = 0x80055a4 *)
mov r1 s16;
(* smull	r12, r9, r9, r1                           #! PC = 0x80055a8 *)
smull r9 r12 r9 r1;
(* mul.w	lr, r12, r2                               #! PC = 0x80055ac *)
cast r12_s@sint32 r12;
mull discard lr r12_s r2;
(* smlal	r12, r9, lr, r3                           #! PC = 0x80055b0 *)
cast lr@sint32 lr;
smull tmp_h tmp_l lr r3;
uadds carry r12 tmp_l r12;
sadc r9 tmp_h r9 carry;
assert eqmod r12 0 (2**32) && true;
assume eq r12 0 && true;
(* vmov	r1, s17                                    #! PC = 0x80055b4 *)
mov r1 s17;
(* smull	r12, r10, r10, r1                         #! PC = 0x80055b8 *)
smull r10 r12 r10 r1;
(* mul.w	lr, r12, r2                               #! PC = 0x80055bc *)
cast r12_s@sint32 r12;
mull discard lr r12_s r2;
(* smlal	r12, r10, lr, r3                          #! PC = 0x80055c0 *)
cast lr@sint32 lr;
smull tmp_h tmp_l lr r3;
uadds carry r12 tmp_l r12;
sadc r10 tmp_h r10 carry;
assert eqmod r12 0 (2**32) && true;
assume eq r12 0 && true;
(* vmov	r1, s18                                    #! PC = 0x80055c4 *)
mov r1 s18;
(* smull	r12, r11, r11, r1                         #! PC = 0x80055c8 *)
smull r11 r12 r11 r1;
(* mul.w	lr, r12, r2                               #! PC = 0x80055cc *)
cast r12_s@sint32 r12;
mull discard lr r12_s r2;
(* smlal	r12, r11, lr, r3                          #! PC = 0x80055d0 *)
cast lr@sint32 lr;
smull tmp_h tmp_l lr r3;
uadds carry r12 tmp_l r12;
sadc r11 tmp_h r11 carry;
assert eqmod r12 0 (2**32) && true;
assume eq r12 0 && true;
(* mov.w	r1, r3, lsr #1                            #! PC = 0x80055d4 *)
split r1 discard r3 1;
(* cmp	r4, r1                                      #! PC = 0x80055d8 *)
sub cmp r4 r1;
split sign discard cmp 31;
cast sign@bit sign;
cmov tmp sign 0@sint32 r3;
sub r4 r4 tmp;
(* cmn	r4, r1                                      #! PC = 0x80055de *)
add cmn r4 r1;
split sign discard cmn 31;
cast sign@bit sign;
cmov tmp sign r3 0@sint32;
add r4 r4 tmp;
(* cmp	r5, r1                                      #! PC = 0x80055e4 *)
sub cmp r5 r1;
split sign discard cmp 31;
cast sign@bit sign;
cmov tmp sign 0@sint32 r3;
sub r5 r5 tmp;
(* cmn	r5, r1                                      #! PC = 0x80055ea *)
add cmn r5 r1;
split sign discard cmn 31;
cast sign@bit sign;
cmov tmp sign r3 0@sint32;
add r5 r5 tmp;
(* cmp	r6, r1                                      #! PC = 0x80055f0 *)
sub cmp r6 r1;
split sign discard cmp 31;
cast sign@bit sign;
cmov tmp sign 0@sint32 r3;
sub r6 r6 tmp;
(* cmn	r6, r1                                      #! PC = 0x80055f6 *)
add cmn r6 r1;
split sign discard cmn 31;
cast sign@bit sign;
cmov tmp sign r3 0@sint32;
add r6 r6 tmp;
(* cmp	r7, r1                                      #! PC = 0x80055fc *)
sub cmp r7 r1;
split sign discard cmp 31;
cast sign@bit sign;
cmov tmp sign 0@sint32 r3;
sub r7 r7 tmp;
(* cmn	r7, r1                                      #! PC = 0x8005602 *)
add cmn r7 r1;
split sign discard cmn 31;
cast sign@bit sign;
cmov tmp sign r3 0@sint32;
add r7 r7 tmp;
(* cmp	r8, r1                                      #! PC = 0x8005608 *)
sub cmp r8 r1;
split sign discard cmp 31;
cast sign@bit sign;
cmov tmp sign 0@sint32 r3;
sub r8 r8 tmp;
(* cmn.w	r8, r1                                    #! PC = 0x8005610 *)
add cmn r8 r1;
split sign discard cmn 31;
cast sign@bit sign;
cmov tmp sign r3 0@sint32;
add r8 r8 tmp;
(* cmp	r9, r1                                      #! PC = 0x8005618 *)
sub cmp r9 r1;
split sign discard cmp 31;
cast sign@bit sign;
cmov tmp sign 0@sint32 r3;
sub r9 r9 tmp;
(* cmn.w	r9, r1                                    #! PC = 0x8005620 *)
add cmn r9 r1;
split sign discard cmn 31;
cast sign@bit sign;
cmov tmp sign r3 0@sint32;
add r9 r9 tmp;
(* cmp	r10, r1                                     #! PC = 0x8005628 *)
sub cmp r10 r1;
split sign discard cmp 31;
cast sign@bit sign;
cmov tmp sign 0@sint32 r3;
sub r10 r10 tmp;
(* cmn.w	r10, r1                                   #! PC = 0x8005630 *)
add cmn r10 r1;
split sign discard cmn 31;
cast sign@bit sign;
cmov tmp sign r3 0@sint32;
add r10 r10 tmp;
(* cmp	r11, r1                                     #! PC = 0x8005638 *)
sub cmp r11 r1;
split sign discard cmp 31;
cast sign@bit sign;
cmov tmp sign 0@sint32 r3;
sub r11 r11 tmp;
(* cmn.w	r11, r1                                   #! PC = 0x8005640 *)
add cmn r11 r1;
split sign discard cmn 31;
cast sign@bit sign;
cmov tmp sign r3 0@sint32;
add r11 r11 tmp;
(* vmov	lr, s0                                     #! PC = 0x8005648 *)
mov lr s0;
(* strh.w	r8, [lr, #256]	; 0x100                   #! EA = L0x20019948; PC = 0x800564c *)
ghost L0x20019948_f@sint32 : L0x20019948_f = r8 && L0x20019948_f = r8;
split discard L0x20019948_u r8 16;
cast L0x20019948@sint16 L0x20019948_u;
(* strh.w	r9, [lr, #320]	; 0x140                   #! EA = L0x20019988; PC = 0x8005650 *)
ghost L0x20019988_f@sint32 : L0x20019988_f = r9 && L0x20019988_f = r9;
split discard L0x20019988_u r9 16;
cast L0x20019988@sint16 L0x20019988_u;
(* strh.w	r10, [lr, #384]	; 0x180                  #! EA = L0x200199c8; PC = 0x8005654 *)
ghost L0x200199c8_f@sint32 : L0x200199c8_f = r10 && L0x200199c8_f = r10;
split discard L0x200199c8_u r10 16;
cast L0x200199c8@sint16 L0x200199c8_u;
(* strh.w	r11, [lr, #448]	; 0x1c0                  #! EA = L0x20019a08; PC = 0x8005658 *)
ghost L0x20019a08_f@sint32 : L0x20019a08_f = r11 && L0x20019a08_f = r11;
split discard L0x20019a08_u r11 16;
cast L0x20019a08@sint16 L0x20019a08_u;
(* strh.w	r5, [lr, #64]	; 0x40                     #! EA = L0x20019888; PC = 0x800565c *)
ghost L0x20019888_f@sint32 : L0x20019888_f = r5 && L0x20019888_f = r5;
split discard L0x20019888_u r5 16;
cast L0x20019888@sint16 L0x20019888_u;
(* strh.w	r6, [lr, #128]	; 0x80                    #! EA = L0x200198c8; PC = 0x8005660 *)
ghost L0x200198c8_f@sint32 : L0x200198c8_f = r6 && L0x200198c8_f = r6;
split discard L0x200198c8_u r6 16;
cast L0x200198c8@sint16 L0x200198c8_u;
(* strh.w	r7, [lr, #192]	; 0xc0                    #! EA = L0x20019908; PC = 0x8005664 *)
ghost L0x20019908_f@sint32 : L0x20019908_f = r7 && L0x20019908_f = r7;
split discard L0x20019908_u r7 16;
cast L0x20019908@sint16 L0x20019908_u;
(* strh.w	r4, [lr], #2                             #! EA = L0x20019848; PC = 0x8005668 *)
ghost L0x20019848_f@sint32 : L0x20019848_f = r4 && L0x20019848_f = r4;
split discard L0x20019848_u r4 16;
cast L0x20019848@sint16 L0x20019848_u;
(* vmov	s0, lr                                     #! PC = 0x800566c *)
mov s0 lr;
(* ldr.w	r8, [r0, #512]	; 0x200                    #! EA = L0x2001a44c; Value = 0x048d802f; PC = 0x8005670 *)
mov r8 L0x2001a44c;
(* ldr.w	r5, [r0, #640]	; 0x280                    #! EA = L0x2001a4cc; Value = 0xff5f7457; PC = 0x8005674 *)
mov r5 L0x2001a4cc;
(* ldr.w	r10, [r0, #768]	; 0x300                   #! EA = L0x2001a54c; Value = 0x010bc1a9; PC = 0x8005678 *)
mov r10 L0x2001a54c;
(* ldr.w	r7, [r0, #896]	; 0x380                    #! EA = L0x2001a5cc; Value = 0x01f5c65b; PC = 0x800567c *)
mov r7 L0x2001a5cc;
(* add	r8, r5                                      #! PC = 0x8005680 *)
add r8 r8 r5;
(* add	r10, r7                                     #! PC = 0x8005682 *)
add r10 r10 r7;
(* sub.w	r5, r8, r5, lsl #1                        #! PC = 0x8005684 *)
shl tmp r5 1;
sub r5 r8 tmp;
(* sub.w	r7, r10, r7, lsl #1                       #! PC = 0x8005688 *)
shl tmp r7 1;
sub r7 r10 tmp;
(* add.w	r8, r8, r10                               #! PC = 0x800568c *)
add r8 r8 r10;
(* sub.w	r10, r8, r10, lsl #1                      #! PC = 0x8005690 *)
shl tmp r10 1;
sub r10 r8 tmp;
(* vmov	r12, s8                                    #! PC = 0x8005694 *)
mov r12 s8;
(* vmov	lr, s10                                    #! PC = 0x8005698 *)
mov lr s10;
(* smull	r4, r9, r5, r12                           #! PC = 0x800569c *)
smull r9 r4 r5 r12;
(* smlal	r4, r9, r7, lr                            #! PC = 0x80056a0 *)
cast r7@sint32 r7;
smull tmp_h tmp_l r7 lr;
uadds carry r4 tmp_l r4;
sadc r9 tmp_h r9 carry;
(* mul.w	r1, r4, r2                                #! PC = 0x80056a4 *)
cast r4_s@sint32 r4;
mull discard r1 r4_s r2;
(* smlal	r4, r9, r1, r3                            #! PC = 0x80056a8 *)
cast r1@sint32 r1;
smull tmp_h tmp_l r1 r3;
uadds carry r4 tmp_l r4;
sadc r9 tmp_h r9 carry;
assert eqmod r4 0 (2**32) && true;
assume eq r4 0 && true;
(* smull	r6, r11, r5, lr                           #! PC = 0x80056ac *)
smull r11 r6 r5 lr;
(* smlal	r6, r11, r7, r12                          #! PC = 0x80056b0 *)
cast r7@sint32 r7;
smull tmp_h tmp_l r7 r12;
uadds carry r6 tmp_l r6;
sadc r11 tmp_h r11 carry;
(* mul.w	r1, r6, r2                                #! PC = 0x80056b4 *)
cast r6_s@sint32 r6;
mull discard r1 r6_s r2;
(* smlal	r6, r11, r1, r3                           #! PC = 0x80056b8 *)
cast r1@sint32 r1;
smull tmp_h tmp_l r1 r3;
uadds carry r6 tmp_l r6;
sadc r11 tmp_h r11 carry;
assert eqmod r6 0 (2**32) && true;
assume eq r6 0 && true;
(* ldr.w	r5, [r0, #128]	; 0x80                     #! EA = L0x2001a2cc; Value = 0xfed2628b; PC = 0x80056bc *)
mov r5 L0x2001a2cc;
(* ldr.w	r6, [r0, #256]	; 0x100                    #! EA = L0x2001a34c; Value = 0x000fe04e; PC = 0x80056c0 *)
mov r6 L0x2001a34c;
(* ldr.w	r7, [r0, #384]	; 0x180                    #! EA = L0x2001a3cc; Value = 0x02d1178d; PC = 0x80056c4 *)
mov r7 L0x2001a3cc;
(* ldr.w	r4, [r0], #4                              #! EA = L0x2001a24c; Value = 0xfd7ca396; PC = 0x80056c8 *)
mov r4 L0x2001a24c;
(* add	r4, r5                                      #! PC = 0x80056cc *)
add r4 r4 r5;
(* add	r6, r7                                      #! PC = 0x80056ce *)
add r6 r6 r7;
(* sub.w	r5, r4, r5, lsl #1                        #! PC = 0x80056d0 *)
shl tmp r5 1;
sub r5 r4 tmp;
(* sub.w	r7, r6, r7, lsl #1                        #! PC = 0x80056d4 *)
shl tmp r7 1;
sub r7 r6 tmp;
(* vmov	r1, s6                                     #! PC = 0x80056d8 *)
mov r1 s6;
(* smull	r12, r7, r7, r1                           #! PC = 0x80056dc *)
smull r7 r12 r7 r1;
(* mul.w	lr, r12, r2                               #! PC = 0x80056e0 *)
cast r12_s@sint32 r12;
mull discard lr r12_s r2;
(* smlal	r12, r7, lr, r3                           #! PC = 0x80056e4 *)
cast lr@sint32 lr;
smull tmp_h tmp_l lr r3;
uadds carry r12 tmp_l r12;
sadc r7 tmp_h r7 carry;
assert eqmod r12 0 (2**32) && true;
assume eq r12 0 && true;
(* add	r4, r6                                      #! PC = 0x80056e8 *)
add r4 r4 r6;
(* add	r5, r7                                      #! PC = 0x80056ea *)
add r5 r5 r7;
(* sub.w	r6, r4, r6, lsl #1                        #! PC = 0x80056ec *)
shl tmp r6 1;
sub r6 r4 tmp;
(* sub.w	r7, r5, r7, lsl #1                        #! PC = 0x80056f0 *)
shl tmp r7 1;
sub r7 r5 tmp;
(* smull	r12, r10, r10, r1                         #! PC = 0x80056f4 *)
smull r10 r12 r10 r1;
(* mul.w	lr, r12, r2                               #! PC = 0x80056f8 *)
cast r12_s@sint32 r12;
mull discard lr r12_s r2;
(* smlal	r12, r10, lr, r3                          #! PC = 0x80056fc *)
cast lr@sint32 lr;
smull tmp_h tmp_l lr r3;
uadds carry r12 tmp_l r12;
sadc r10 tmp_h r10 carry;
assert eqmod r12 0 (2**32) && true;
assume eq r12 0 && true;
(* add	r4, r8                                      #! PC = 0x8005700 *)
add r4 r4 r8;
(* add	r5, r9                                      #! PC = 0x8005702 *)
add r5 r5 r9;
(* add	r6, r10                                     #! PC = 0x8005704 *)
add r6 r6 r10;
(* add	r7, r11                                     #! PC = 0x8005706 *)
add r7 r7 r11;
(* sub.w	r8, r4, r8, lsl #1                        #! PC = 0x8005708 *)
shl tmp r8 1;
sub r8 r4 tmp;
(* sub.w	r9, r5, r9, lsl #1                        #! PC = 0x800570c *)
shl tmp r9 1;
sub r9 r5 tmp;
(* sub.w	r10, r6, r10, lsl #1                      #! PC = 0x8005710 *)
shl tmp r10 1;
sub r10 r6 tmp;
(* sub.w	r11, r7, r11, lsl #1                      #! PC = 0x8005714 *)
shl tmp r11 1;
sub r11 r7 tmp;
(* vmov	r1, s11                                    #! PC = 0x8005718 *)
mov r1 s11;
(* smull	r12, r4, r4, r1                           #! PC = 0x800571c *)
smull r4 r12 r4 r1;
(* mul.w	lr, r12, r2                               #! PC = 0x8005720 *)
cast r12_s@sint32 r12;
mull discard lr r12_s r2;
(* smlal	r12, r4, lr, r3                           #! PC = 0x8005724 *)
cast lr@sint32 lr;
smull tmp_h tmp_l lr r3;
uadds carry r12 tmp_l r12;
sadc r4 tmp_h r4 carry;
assert eqmod r12 0 (2**32) && true;
assume eq r12 0 && true;
(* vmov	r1, s12                                    #! PC = 0x8005728 *)
mov r1 s12;
(* smull	r12, r5, r5, r1                           #! PC = 0x800572c *)
smull r5 r12 r5 r1;
(* mul.w	lr, r12, r2                               #! PC = 0x8005730 *)
cast r12_s@sint32 r12;
mull discard lr r12_s r2;
(* smlal	r12, r5, lr, r3                           #! PC = 0x8005734 *)
cast lr@sint32 lr;
smull tmp_h tmp_l lr r3;
uadds carry r12 tmp_l r12;
sadc r5 tmp_h r5 carry;
assert eqmod r12 0 (2**32) && true;
assume eq r12 0 && true;
(* vmov	r1, s13                                    #! PC = 0x8005738 *)
mov r1 s13;
(* smull	r12, r6, r6, r1                           #! PC = 0x800573c *)
smull r6 r12 r6 r1;
(* mul.w	lr, r12, r2                               #! PC = 0x8005740 *)
cast r12_s@sint32 r12;
mull discard lr r12_s r2;
(* smlal	r12, r6, lr, r3                           #! PC = 0x8005744 *)
cast lr@sint32 lr;
smull tmp_h tmp_l lr r3;
uadds carry r12 tmp_l r12;
sadc r6 tmp_h r6 carry;
assert eqmod r12 0 (2**32) && true;
assume eq r12 0 && true;
(* vmov	r1, s14                                    #! PC = 0x8005748 *)
mov r1 s14;
(* smull	r12, r7, r7, r1                           #! PC = 0x800574c *)
smull r7 r12 r7 r1;
(* mul.w	lr, r12, r2                               #! PC = 0x8005750 *)
cast r12_s@sint32 r12;
mull discard lr r12_s r2;
(* smlal	r12, r7, lr, r3                           #! PC = 0x8005754 *)
cast lr@sint32 lr;
smull tmp_h tmp_l lr r3;
uadds carry r12 tmp_l r12;
sadc r7 tmp_h r7 carry;
assert eqmod r12 0 (2**32) && true;
assume eq r12 0 && true;
(* vmov	r1, s15                                    #! PC = 0x8005758 *)
mov r1 s15;
(* smull	r12, r8, r8, r1                           #! PC = 0x800575c *)
smull r8 r12 r8 r1;
(* mul.w	lr, r12, r2                               #! PC = 0x8005760 *)
cast r12_s@sint32 r12;
mull discard lr r12_s r2;
(* smlal	r12, r8, lr, r3                           #! PC = 0x8005764 *)
cast lr@sint32 lr;
smull tmp_h tmp_l lr r3;
uadds carry r12 tmp_l r12;
sadc r8 tmp_h r8 carry;
assert eqmod r12 0 (2**32) && true;
assume eq r12 0 && true;
(* vmov	r1, s16                                    #! PC = 0x8005768 *)
mov r1 s16;
(* smull	r12, r9, r9, r1                           #! PC = 0x800576c *)
smull r9 r12 r9 r1;
(* mul.w	lr, r12, r2                               #! PC = 0x8005770 *)
cast r12_s@sint32 r12;
mull discard lr r12_s r2;
(* smlal	r12, r9, lr, r3                           #! PC = 0x8005774 *)
cast lr@sint32 lr;
smull tmp_h tmp_l lr r3;
uadds carry r12 tmp_l r12;
sadc r9 tmp_h r9 carry;
assert eqmod r12 0 (2**32) && true;
assume eq r12 0 && true;
(* vmov	r1, s17                                    #! PC = 0x8005778 *)
mov r1 s17;
(* smull	r12, r10, r10, r1                         #! PC = 0x800577c *)
smull r10 r12 r10 r1;
(* mul.w	lr, r12, r2                               #! PC = 0x8005780 *)
cast r12_s@sint32 r12;
mull discard lr r12_s r2;
(* smlal	r12, r10, lr, r3                          #! PC = 0x8005784 *)
cast lr@sint32 lr;
smull tmp_h tmp_l lr r3;
uadds carry r12 tmp_l r12;
sadc r10 tmp_h r10 carry;
assert eqmod r12 0 (2**32) && true;
assume eq r12 0 && true;
(* vmov	r1, s18                                    #! PC = 0x8005788 *)
mov r1 s18;
(* smull	r12, r11, r11, r1                         #! PC = 0x800578c *)
smull r11 r12 r11 r1;
(* mul.w	lr, r12, r2                               #! PC = 0x8005790 *)
cast r12_s@sint32 r12;
mull discard lr r12_s r2;
(* smlal	r12, r11, lr, r3                          #! PC = 0x8005794 *)
cast lr@sint32 lr;
smull tmp_h tmp_l lr r3;
uadds carry r12 tmp_l r12;
sadc r11 tmp_h r11 carry;
assert eqmod r12 0 (2**32) && true;
assume eq r12 0 && true;
(* mov.w	r1, r3, lsr #1                            #! PC = 0x8005798 *)
split r1 discard r3 1;
(* cmp	r4, r1                                      #! PC = 0x800579c *)
sub cmp r4 r1;
split sign discard cmp 31;
cast sign@bit sign;
cmov tmp sign 0@sint32 r3;
sub r4 r4 tmp;
(* cmn	r4, r1                                      #! PC = 0x80057a2 *)
add cmn r4 r1;
split sign discard cmn 31;
cast sign@bit sign;
cmov tmp sign r3 0@sint32;
add r4 r4 tmp;
(* cmp	r5, r1                                      #! PC = 0x80057a8 *)
sub cmp r5 r1;
split sign discard cmp 31;
cast sign@bit sign;
cmov tmp sign 0@sint32 r3;
sub r5 r5 tmp;
(* cmn	r5, r1                                      #! PC = 0x80057ae *)
add cmn r5 r1;
split sign discard cmn 31;
cast sign@bit sign;
cmov tmp sign r3 0@sint32;
add r5 r5 tmp;
(* cmp	r6, r1                                      #! PC = 0x80057b4 *)
sub cmp r6 r1;
split sign discard cmp 31;
cast sign@bit sign;
cmov tmp sign 0@sint32 r3;
sub r6 r6 tmp;
(* cmn	r6, r1                                      #! PC = 0x80057ba *)
add cmn r6 r1;
split sign discard cmn 31;
cast sign@bit sign;
cmov tmp sign r3 0@sint32;
add r6 r6 tmp;
(* cmp	r7, r1                                      #! PC = 0x80057c0 *)
sub cmp r7 r1;
split sign discard cmp 31;
cast sign@bit sign;
cmov tmp sign 0@sint32 r3;
sub r7 r7 tmp;
(* cmn	r7, r1                                      #! PC = 0x80057c6 *)
add cmn r7 r1;
split sign discard cmn 31;
cast sign@bit sign;
cmov tmp sign r3 0@sint32;
add r7 r7 tmp;
(* cmp	r8, r1                                      #! PC = 0x80057cc *)
sub cmp r8 r1;
split sign discard cmp 31;
cast sign@bit sign;
cmov tmp sign 0@sint32 r3;
sub r8 r8 tmp;
(* cmn.w	r8, r1                                    #! PC = 0x80057d4 *)
add cmn r8 r1;
split sign discard cmn 31;
cast sign@bit sign;
cmov tmp sign r3 0@sint32;
add r8 r8 tmp;
(* cmp	r9, r1                                      #! PC = 0x80057dc *)
sub cmp r9 r1;
split sign discard cmp 31;
cast sign@bit sign;
cmov tmp sign 0@sint32 r3;
sub r9 r9 tmp;
(* cmn.w	r9, r1                                    #! PC = 0x80057e4 *)
add cmn r9 r1;
split sign discard cmn 31;
cast sign@bit sign;
cmov tmp sign r3 0@sint32;
add r9 r9 tmp;
(* cmp	r10, r1                                     #! PC = 0x80057ec *)
sub cmp r10 r1;
split sign discard cmp 31;
cast sign@bit sign;
cmov tmp sign 0@sint32 r3;
sub r10 r10 tmp;
(* cmn.w	r10, r1                                   #! PC = 0x80057f4 *)
add cmn r10 r1;
split sign discard cmn 31;
cast sign@bit sign;
cmov tmp sign r3 0@sint32;
add r10 r10 tmp;
(* cmp	r11, r1                                     #! PC = 0x80057fc *)
sub cmp r11 r1;
split sign discard cmp 31;
cast sign@bit sign;
cmov tmp sign 0@sint32 r3;
sub r11 r11 tmp;
(* cmn.w	r11, r1                                   #! PC = 0x8005804 *)
add cmn r11 r1;
split sign discard cmn 31;
cast sign@bit sign;
cmov tmp sign r3 0@sint32;
add r11 r11 tmp;
(* vmov	lr, s0                                     #! PC = 0x800580c *)
mov lr s0;
(* strh.w	r8, [lr, #256]	; 0x100                   #! EA = L0x2001994a; PC = 0x8005810 *)
ghost L0x2001994a_f@sint32 : L0x2001994a_f = r8 && L0x2001994a_f = r8;
split discard L0x2001994a_u r8 16;
cast L0x2001994a@sint16 L0x2001994a_u;
(* strh.w	r9, [lr, #320]	; 0x140                   #! EA = L0x2001998a; PC = 0x8005814 *)
ghost L0x2001998a_f@sint32 : L0x2001998a_f = r9 && L0x2001998a_f = r9;
split discard L0x2001998a_u r9 16;
cast L0x2001998a@sint16 L0x2001998a_u;
(* strh.w	r10, [lr, #384]	; 0x180                  #! EA = L0x200199ca; PC = 0x8005818 *)
ghost L0x200199ca_f@sint32 : L0x200199ca_f = r10 && L0x200199ca_f = r10;
split discard L0x200199ca_u r10 16;
cast L0x200199ca@sint16 L0x200199ca_u;
(* strh.w	r11, [lr, #448]	; 0x1c0                  #! EA = L0x20019a0a; PC = 0x800581c *)
ghost L0x20019a0a_f@sint32 : L0x20019a0a_f = r11 && L0x20019a0a_f = r11;
split discard L0x20019a0a_u r11 16;
cast L0x20019a0a@sint16 L0x20019a0a_u;
(* strh.w	r5, [lr, #64]	; 0x40                     #! EA = L0x2001988a; PC = 0x8005820 *)
ghost L0x2001988a_f@sint32 : L0x2001988a_f = r5 && L0x2001988a_f = r5;
split discard L0x2001988a_u r5 16;
cast L0x2001988a@sint16 L0x2001988a_u;
(* strh.w	r6, [lr, #128]	; 0x80                    #! EA = L0x200198ca; PC = 0x8005824 *)
ghost L0x200198ca_f@sint32 : L0x200198ca_f = r6 && L0x200198ca_f = r6;
split discard L0x200198ca_u r6 16;
cast L0x200198ca@sint16 L0x200198ca_u;
(* strh.w	r7, [lr, #192]	; 0xc0                    #! EA = L0x2001990a; PC = 0x8005828 *)
ghost L0x2001990a_f@sint32 : L0x2001990a_f = r7 && L0x2001990a_f = r7;
split discard L0x2001990a_u r7 16;
cast L0x2001990a@sint16 L0x2001990a_u;
(* strh.w	r4, [lr], #2                             #! EA = L0x2001984a; PC = 0x800582c *)
ghost L0x2001984a_f@sint32 : L0x2001984a_f = r4 && L0x2001984a_f = r4;
split discard L0x2001984a_u r4 16;
cast L0x2001984a@sint16 L0x2001984a_u;
(* vmov	s0, lr                                     #! PC = 0x8005830 *)
mov s0 lr;
(* vmov	r12, s2                                    #! PC = 0x8005834 *)
mov r12 s2;
(* ldr.w	r8, [r0, #512]	; 0x200                    #! EA = L0x2001a450; Value = 0x00e7b16d; PC = 0x80054ac *)
mov r8 L0x2001a450;
(* ldr.w	r5, [r0, #640]	; 0x280                    #! EA = L0x2001a4d0; Value = 0xff9b8431; PC = 0x80054b0 *)
mov r5 L0x2001a4d0;
(* ldr.w	r10, [r0, #768]	; 0x300                   #! EA = L0x2001a550; Value = 0x02987c98; PC = 0x80054b4 *)
mov r10 L0x2001a550;
(* ldr.w	r7, [r0, #896]	; 0x380                    #! EA = L0x2001a5d0; Value = 0xfe609ca3; PC = 0x80054b8 *)
mov r7 L0x2001a5d0;
(* add	r8, r5                                      #! PC = 0x80054bc *)
add r8 r8 r5;
(* add	r10, r7                                     #! PC = 0x80054be *)
add r10 r10 r7;
(* sub.w	r5, r8, r5, lsl #1                        #! PC = 0x80054c0 *)
shl tmp r5 1;
sub r5 r8 tmp;
(* sub.w	r7, r10, r7, lsl #1                       #! PC = 0x80054c4 *)
shl tmp r7 1;
sub r7 r10 tmp;
(* add.w	r8, r8, r10                               #! PC = 0x80054c8 *)
add r8 r8 r10;
(* sub.w	r10, r8, r10, lsl #1                      #! PC = 0x80054cc *)
shl tmp r10 1;
sub r10 r8 tmp;
(* vmov	r12, s8                                    #! PC = 0x80054d0 *)
mov r12 s8;
(* vmov	lr, s10                                    #! PC = 0x80054d4 *)
mov lr s10;
(* smull	r4, r9, r5, r12                           #! PC = 0x80054d8 *)
smull r9 r4 r5 r12;
(* smlal	r4, r9, r7, lr                            #! PC = 0x80054dc *)
cast r7@sint32 r7;
smull tmp_h tmp_l r7 lr;
uadds carry r4 tmp_l r4;
sadc r9 tmp_h r9 carry;
(* mul.w	r1, r4, r2                                #! PC = 0x80054e0 *)
cast r4_s@sint32 r4;
mull discard r1 r4_s r2;
(* smlal	r4, r9, r1, r3                            #! PC = 0x80054e4 *)
cast r1@sint32 r1;
smull tmp_h tmp_l r1 r3;
uadds carry r4 tmp_l r4;
sadc r9 tmp_h r9 carry;
assert eqmod r4 0 (2**32) && true;
assume eq r4 0 && true;
(* smull	r6, r11, r5, lr                           #! PC = 0x80054e8 *)
smull r11 r6 r5 lr;
(* smlal	r6, r11, r7, r12                          #! PC = 0x80054ec *)
cast r7@sint32 r7;
smull tmp_h tmp_l r7 r12;
uadds carry r6 tmp_l r6;
sadc r11 tmp_h r11 carry;
(* mul.w	r1, r6, r2                                #! PC = 0x80054f0 *)
cast r6_s@sint32 r6;
mull discard r1 r6_s r2;
(* smlal	r6, r11, r1, r3                           #! PC = 0x80054f4 *)
cast r1@sint32 r1;
smull tmp_h tmp_l r1 r3;
uadds carry r6 tmp_l r6;
sadc r11 tmp_h r11 carry;
assert eqmod r6 0 (2**32) && true;
assume eq r6 0 && true;
(* ldr.w	r5, [r0, #128]	; 0x80                     #! EA = L0x2001a2d0; Value = 0xffd4888d; PC = 0x80054f8 *)
mov r5 L0x2001a2d0;
(* ldr.w	r6, [r0, #256]	; 0x100                    #! EA = L0x2001a350; Value = 0x001e2005; PC = 0x80054fc *)
mov r6 L0x2001a350;
(* ldr.w	r7, [r0, #384]	; 0x180                    #! EA = L0x2001a3d0; Value = 0xfef6d317; PC = 0x8005500 *)
mov r7 L0x2001a3d0;
(* ldr.w	r4, [r0], #4                              #! EA = L0x2001a250; Value = 0x0007bcc3; PC = 0x8005504 *)
mov r4 L0x2001a250;
(* add	r4, r5                                      #! PC = 0x8005508 *)
add r4 r4 r5;
(* add	r6, r7                                      #! PC = 0x800550a *)
add r6 r6 r7;
(* sub.w	r5, r4, r5, lsl #1                        #! PC = 0x800550c *)
shl tmp r5 1;
sub r5 r4 tmp;
(* sub.w	r7, r6, r7, lsl #1                        #! PC = 0x8005510 *)
shl tmp r7 1;
sub r7 r6 tmp;
(* vmov	r1, s6                                     #! PC = 0x8005514 *)
mov r1 s6;
(* smull	r12, r7, r7, r1                           #! PC = 0x8005518 *)
smull r7 r12 r7 r1;
(* mul.w	lr, r12, r2                               #! PC = 0x800551c *)
cast r12_s@sint32 r12;
mull discard lr r12_s r2;
(* smlal	r12, r7, lr, r3                           #! PC = 0x8005520 *)
cast lr@sint32 lr;
smull tmp_h tmp_l lr r3;
uadds carry r12 tmp_l r12;
sadc r7 tmp_h r7 carry;
assert eqmod r12 0 (2**32) && true;
assume eq r12 0 && true;
(* add	r4, r6                                      #! PC = 0x8005524 *)
add r4 r4 r6;
(* add	r5, r7                                      #! PC = 0x8005526 *)
add r5 r5 r7;
(* sub.w	r6, r4, r6, lsl #1                        #! PC = 0x8005528 *)
shl tmp r6 1;
sub r6 r4 tmp;
(* sub.w	r7, r5, r7, lsl #1                        #! PC = 0x800552c *)
shl tmp r7 1;
sub r7 r5 tmp;
(* smull	r12, r10, r10, r1                         #! PC = 0x8005530 *)
smull r10 r12 r10 r1;
(* mul.w	lr, r12, r2                               #! PC = 0x8005534 *)
cast r12_s@sint32 r12;
mull discard lr r12_s r2;
(* smlal	r12, r10, lr, r3                          #! PC = 0x8005538 *)
cast lr@sint32 lr;
smull tmp_h tmp_l lr r3;
uadds carry r12 tmp_l r12;
sadc r10 tmp_h r10 carry;
assert eqmod r12 0 (2**32) && true;
assume eq r12 0 && true;
(* add	r4, r8                                      #! PC = 0x800553c *)
add r4 r4 r8;
(* add	r5, r9                                      #! PC = 0x800553e *)
add r5 r5 r9;
(* add	r6, r10                                     #! PC = 0x8005540 *)
add r6 r6 r10;
(* add	r7, r11                                     #! PC = 0x8005542 *)
add r7 r7 r11;
(* sub.w	r8, r4, r8, lsl #1                        #! PC = 0x8005544 *)
shl tmp r8 1;
sub r8 r4 tmp;
(* sub.w	r9, r5, r9, lsl #1                        #! PC = 0x8005548 *)
shl tmp r9 1;
sub r9 r5 tmp;
(* sub.w	r10, r6, r10, lsl #1                      #! PC = 0x800554c *)
shl tmp r10 1;
sub r10 r6 tmp;
(* sub.w	r11, r7, r11, lsl #1                      #! PC = 0x8005550 *)
shl tmp r11 1;
sub r11 r7 tmp;
(* vmov	r1, s11                                    #! PC = 0x8005554 *)
mov r1 s11;
(* smull	r12, r4, r4, r1                           #! PC = 0x8005558 *)
smull r4 r12 r4 r1;
(* mul.w	lr, r12, r2                               #! PC = 0x800555c *)
cast r12_s@sint32 r12;
mull discard lr r12_s r2;
(* smlal	r12, r4, lr, r3                           #! PC = 0x8005560 *)
cast lr@sint32 lr;
smull tmp_h tmp_l lr r3;
uadds carry r12 tmp_l r12;
sadc r4 tmp_h r4 carry;
assert eqmod r12 0 (2**32) && true;
assume eq r12 0 && true;
(* vmov	r1, s12                                    #! PC = 0x8005564 *)
mov r1 s12;
(* smull	r12, r5, r5, r1                           #! PC = 0x8005568 *)
smull r5 r12 r5 r1;
(* mul.w	lr, r12, r2                               #! PC = 0x800556c *)
cast r12_s@sint32 r12;
mull discard lr r12_s r2;
(* smlal	r12, r5, lr, r3                           #! PC = 0x8005570 *)
cast lr@sint32 lr;
smull tmp_h tmp_l lr r3;
uadds carry r12 tmp_l r12;
sadc r5 tmp_h r5 carry;
assert eqmod r12 0 (2**32) && true;
assume eq r12 0 && true;
(* vmov	r1, s13                                    #! PC = 0x8005574 *)
mov r1 s13;
(* smull	r12, r6, r6, r1                           #! PC = 0x8005578 *)
smull r6 r12 r6 r1;
(* mul.w	lr, r12, r2                               #! PC = 0x800557c *)
cast r12_s@sint32 r12;
mull discard lr r12_s r2;
(* smlal	r12, r6, lr, r3                           #! PC = 0x8005580 *)
cast lr@sint32 lr;
smull tmp_h tmp_l lr r3;
uadds carry r12 tmp_l r12;
sadc r6 tmp_h r6 carry;
assert eqmod r12 0 (2**32) && true;
assume eq r12 0 && true;
(* vmov	r1, s14                                    #! PC = 0x8005584 *)
mov r1 s14;
(* smull	r12, r7, r7, r1                           #! PC = 0x8005588 *)
smull r7 r12 r7 r1;
(* mul.w	lr, r12, r2                               #! PC = 0x800558c *)
cast r12_s@sint32 r12;
mull discard lr r12_s r2;
(* smlal	r12, r7, lr, r3                           #! PC = 0x8005590 *)
cast lr@sint32 lr;
smull tmp_h tmp_l lr r3;
uadds carry r12 tmp_l r12;
sadc r7 tmp_h r7 carry;
assert eqmod r12 0 (2**32) && true;
assume eq r12 0 && true;
(* vmov	r1, s15                                    #! PC = 0x8005594 *)
mov r1 s15;
(* smull	r12, r8, r8, r1                           #! PC = 0x8005598 *)
smull r8 r12 r8 r1;
(* mul.w	lr, r12, r2                               #! PC = 0x800559c *)
cast r12_s@sint32 r12;
mull discard lr r12_s r2;
(* smlal	r12, r8, lr, r3                           #! PC = 0x80055a0 *)
cast lr@sint32 lr;
smull tmp_h tmp_l lr r3;
uadds carry r12 tmp_l r12;
sadc r8 tmp_h r8 carry;
assert eqmod r12 0 (2**32) && true;
assume eq r12 0 && true;
(* vmov	r1, s16                                    #! PC = 0x80055a4 *)
mov r1 s16;
(* smull	r12, r9, r9, r1                           #! PC = 0x80055a8 *)
smull r9 r12 r9 r1;
(* mul.w	lr, r12, r2                               #! PC = 0x80055ac *)
cast r12_s@sint32 r12;
mull discard lr r12_s r2;
(* smlal	r12, r9, lr, r3                           #! PC = 0x80055b0 *)
cast lr@sint32 lr;
smull tmp_h tmp_l lr r3;
uadds carry r12 tmp_l r12;
sadc r9 tmp_h r9 carry;
assert eqmod r12 0 (2**32) && true;
assume eq r12 0 && true;
(* vmov	r1, s17                                    #! PC = 0x80055b4 *)
mov r1 s17;
(* smull	r12, r10, r10, r1                         #! PC = 0x80055b8 *)
smull r10 r12 r10 r1;
(* mul.w	lr, r12, r2                               #! PC = 0x80055bc *)
cast r12_s@sint32 r12;
mull discard lr r12_s r2;
(* smlal	r12, r10, lr, r3                          #! PC = 0x80055c0 *)
cast lr@sint32 lr;
smull tmp_h tmp_l lr r3;
uadds carry r12 tmp_l r12;
sadc r10 tmp_h r10 carry;
assert eqmod r12 0 (2**32) && true;
assume eq r12 0 && true;
(* vmov	r1, s18                                    #! PC = 0x80055c4 *)
mov r1 s18;
(* smull	r12, r11, r11, r1                         #! PC = 0x80055c8 *)
smull r11 r12 r11 r1;
(* mul.w	lr, r12, r2                               #! PC = 0x80055cc *)
cast r12_s@sint32 r12;
mull discard lr r12_s r2;
(* smlal	r12, r11, lr, r3                          #! PC = 0x80055d0 *)
cast lr@sint32 lr;
smull tmp_h tmp_l lr r3;
uadds carry r12 tmp_l r12;
sadc r11 tmp_h r11 carry;
assert eqmod r12 0 (2**32) && true;
assume eq r12 0 && true;
(* mov.w	r1, r3, lsr #1                            #! PC = 0x80055d4 *)
split r1 discard r3 1;
(* cmp	r4, r1                                      #! PC = 0x80055d8 *)
sub cmp r4 r1;
split sign discard cmp 31;
cast sign@bit sign;
cmov tmp sign 0@sint32 r3;
sub r4 r4 tmp;
(* cmn	r4, r1                                      #! PC = 0x80055de *)
add cmn r4 r1;
split sign discard cmn 31;
cast sign@bit sign;
cmov tmp sign r3 0@sint32;
add r4 r4 tmp;
(* cmp	r5, r1                                      #! PC = 0x80055e4 *)
sub cmp r5 r1;
split sign discard cmp 31;
cast sign@bit sign;
cmov tmp sign 0@sint32 r3;
sub r5 r5 tmp;
(* cmn	r5, r1                                      #! PC = 0x80055ea *)
add cmn r5 r1;
split sign discard cmn 31;
cast sign@bit sign;
cmov tmp sign r3 0@sint32;
add r5 r5 tmp;
(* cmp	r6, r1                                      #! PC = 0x80055f0 *)
sub cmp r6 r1;
split sign discard cmp 31;
cast sign@bit sign;
cmov tmp sign 0@sint32 r3;
sub r6 r6 tmp;
(* cmn	r6, r1                                      #! PC = 0x80055f6 *)
add cmn r6 r1;
split sign discard cmn 31;
cast sign@bit sign;
cmov tmp sign r3 0@sint32;
add r6 r6 tmp;
(* cmp	r7, r1                                      #! PC = 0x80055fc *)
sub cmp r7 r1;
split sign discard cmp 31;
cast sign@bit sign;
cmov tmp sign 0@sint32 r3;
sub r7 r7 tmp;
(* cmn	r7, r1                                      #! PC = 0x8005602 *)
add cmn r7 r1;
split sign discard cmn 31;
cast sign@bit sign;
cmov tmp sign r3 0@sint32;
add r7 r7 tmp;
(* cmp	r8, r1                                      #! PC = 0x8005608 *)
sub cmp r8 r1;
split sign discard cmp 31;
cast sign@bit sign;
cmov tmp sign 0@sint32 r3;
sub r8 r8 tmp;
(* cmn.w	r8, r1                                    #! PC = 0x8005610 *)
add cmn r8 r1;
split sign discard cmn 31;
cast sign@bit sign;
cmov tmp sign r3 0@sint32;
add r8 r8 tmp;
(* cmp	r9, r1                                      #! PC = 0x8005618 *)
sub cmp r9 r1;
split sign discard cmp 31;
cast sign@bit sign;
cmov tmp sign 0@sint32 r3;
sub r9 r9 tmp;
(* cmn.w	r9, r1                                    #! PC = 0x8005620 *)
add cmn r9 r1;
split sign discard cmn 31;
cast sign@bit sign;
cmov tmp sign r3 0@sint32;
add r9 r9 tmp;
(* cmp	r10, r1                                     #! PC = 0x8005628 *)
sub cmp r10 r1;
split sign discard cmp 31;
cast sign@bit sign;
cmov tmp sign 0@sint32 r3;
sub r10 r10 tmp;
(* cmn.w	r10, r1                                   #! PC = 0x8005630 *)
add cmn r10 r1;
split sign discard cmn 31;
cast sign@bit sign;
cmov tmp sign r3 0@sint32;
add r10 r10 tmp;
(* cmp	r11, r1                                     #! PC = 0x8005638 *)
sub cmp r11 r1;
split sign discard cmp 31;
cast sign@bit sign;
cmov tmp sign 0@sint32 r3;
sub r11 r11 tmp;
(* cmn.w	r11, r1                                   #! PC = 0x8005640 *)
add cmn r11 r1;
split sign discard cmn 31;
cast sign@bit sign;
cmov tmp sign r3 0@sint32;
add r11 r11 tmp;
(* vmov	lr, s0                                     #! PC = 0x8005648 *)
mov lr s0;
(* strh.w	r8, [lr, #256]	; 0x100                   #! EA = L0x2001994c; PC = 0x800564c *)
ghost L0x2001994c_f@sint32 : L0x2001994c_f = r8 && L0x2001994c_f = r8;
split discard L0x2001994c_u r8 16;
cast L0x2001994c@sint16 L0x2001994c_u;
(* strh.w	r9, [lr, #320]	; 0x140                   #! EA = L0x2001998c; PC = 0x8005650 *)
ghost L0x2001998c_f@sint32 : L0x2001998c_f = r9 && L0x2001998c_f = r9;
split discard L0x2001998c_u r9 16;
cast L0x2001998c@sint16 L0x2001998c_u;
(* strh.w	r10, [lr, #384]	; 0x180                  #! EA = L0x200199cc; PC = 0x8005654 *)
ghost L0x200199cc_f@sint32 : L0x200199cc_f = r10 && L0x200199cc_f = r10;
split discard L0x200199cc_u r10 16;
cast L0x200199cc@sint16 L0x200199cc_u;
(* strh.w	r11, [lr, #448]	; 0x1c0                  #! EA = L0x20019a0c; PC = 0x8005658 *)
ghost L0x20019a0c_f@sint32 : L0x20019a0c_f = r11 && L0x20019a0c_f = r11;
split discard L0x20019a0c_u r11 16;
cast L0x20019a0c@sint16 L0x20019a0c_u;
(* strh.w	r5, [lr, #64]	; 0x40                     #! EA = L0x2001988c; PC = 0x800565c *)
ghost L0x2001988c_f@sint32 : L0x2001988c_f = r5 && L0x2001988c_f = r5;
split discard L0x2001988c_u r5 16;
cast L0x2001988c@sint16 L0x2001988c_u;
(* strh.w	r6, [lr, #128]	; 0x80                    #! EA = L0x200198cc; PC = 0x8005660 *)
ghost L0x200198cc_f@sint32 : L0x200198cc_f = r6 && L0x200198cc_f = r6;
split discard L0x200198cc_u r6 16;
cast L0x200198cc@sint16 L0x200198cc_u;
(* strh.w	r7, [lr, #192]	; 0xc0                    #! EA = L0x2001990c; PC = 0x8005664 *)
ghost L0x2001990c_f@sint32 : L0x2001990c_f = r7 && L0x2001990c_f = r7;
split discard L0x2001990c_u r7 16;
cast L0x2001990c@sint16 L0x2001990c_u;
(* strh.w	r4, [lr], #2                             #! EA = L0x2001984c; PC = 0x8005668 *)
ghost L0x2001984c_f@sint32 : L0x2001984c_f = r4 && L0x2001984c_f = r4;
split discard L0x2001984c_u r4 16;
cast L0x2001984c@sint16 L0x2001984c_u;
(* vmov	s0, lr                                     #! PC = 0x800566c *)
mov s0 lr;
(* ldr.w	r8, [r0, #512]	; 0x200                    #! EA = L0x2001a454; Value = 0xff73c6e6; PC = 0x8005670 *)
mov r8 L0x2001a454;
(* ldr.w	r5, [r0, #640]	; 0x280                    #! EA = L0x2001a4d4; Value = 0x001eb94f; PC = 0x8005674 *)
mov r5 L0x2001a4d4;
(* ldr.w	r10, [r0, #768]	; 0x300                   #! EA = L0x2001a554; Value = 0x011ef1cc; PC = 0x8005678 *)
mov r10 L0x2001a554;
(* ldr.w	r7, [r0, #896]	; 0x380                    #! EA = L0x2001a5d4; Value = 0x0111b6c7; PC = 0x800567c *)
mov r7 L0x2001a5d4;
(* add	r8, r5                                      #! PC = 0x8005680 *)
add r8 r8 r5;
(* add	r10, r7                                     #! PC = 0x8005682 *)
add r10 r10 r7;
(* sub.w	r5, r8, r5, lsl #1                        #! PC = 0x8005684 *)
shl tmp r5 1;
sub r5 r8 tmp;
(* sub.w	r7, r10, r7, lsl #1                       #! PC = 0x8005688 *)
shl tmp r7 1;
sub r7 r10 tmp;
(* add.w	r8, r8, r10                               #! PC = 0x800568c *)
add r8 r8 r10;
(* sub.w	r10, r8, r10, lsl #1                      #! PC = 0x8005690 *)
shl tmp r10 1;
sub r10 r8 tmp;
(* vmov	r12, s8                                    #! PC = 0x8005694 *)
mov r12 s8;
(* vmov	lr, s10                                    #! PC = 0x8005698 *)
mov lr s10;
(* smull	r4, r9, r5, r12                           #! PC = 0x800569c *)
smull r9 r4 r5 r12;
(* smlal	r4, r9, r7, lr                            #! PC = 0x80056a0 *)
cast r7@sint32 r7;
smull tmp_h tmp_l r7 lr;
uadds carry r4 tmp_l r4;
sadc r9 tmp_h r9 carry;
(* mul.w	r1, r4, r2                                #! PC = 0x80056a4 *)
cast r4_s@sint32 r4;
mull discard r1 r4_s r2;
(* smlal	r4, r9, r1, r3                            #! PC = 0x80056a8 *)
cast r1@sint32 r1;
smull tmp_h tmp_l r1 r3;
uadds carry r4 tmp_l r4;
sadc r9 tmp_h r9 carry;
assert eqmod r4 0 (2**32) && true;
assume eq r4 0 && true;
(* smull	r6, r11, r5, lr                           #! PC = 0x80056ac *)
smull r11 r6 r5 lr;
(* smlal	r6, r11, r7, r12                          #! PC = 0x80056b0 *)
cast r7@sint32 r7;
smull tmp_h tmp_l r7 r12;
uadds carry r6 tmp_l r6;
sadc r11 tmp_h r11 carry;
(* mul.w	r1, r6, r2                                #! PC = 0x80056b4 *)
cast r6_s@sint32 r6;
mull discard r1 r6_s r2;
(* smlal	r6, r11, r1, r3                           #! PC = 0x80056b8 *)
cast r1@sint32 r1;
smull tmp_h tmp_l r1 r3;
uadds carry r6 tmp_l r6;
sadc r11 tmp_h r11 carry;
assert eqmod r6 0 (2**32) && true;
assume eq r6 0 && true;
(* ldr.w	r5, [r0, #128]	; 0x80                     #! EA = L0x2001a2d4; Value = 0xfe24cc0b; PC = 0x80056bc *)
mov r5 L0x2001a2d4;
(* ldr.w	r6, [r0, #256]	; 0x100                    #! EA = L0x2001a354; Value = 0x004e3b73; PC = 0x80056c0 *)
mov r6 L0x2001a354;
(* ldr.w	r7, [r0, #384]	; 0x180                    #! EA = L0x2001a3d4; Value = 0x000c7d7e; PC = 0x80056c4 *)
mov r7 L0x2001a3d4;
(* ldr.w	r4, [r0], #4                              #! EA = L0x2001a254; Value = 0xfe298d71; PC = 0x80056c8 *)
mov r4 L0x2001a254;
(* add	r4, r5                                      #! PC = 0x80056cc *)
add r4 r4 r5;
(* add	r6, r7                                      #! PC = 0x80056ce *)
add r6 r6 r7;
(* sub.w	r5, r4, r5, lsl #1                        #! PC = 0x80056d0 *)
shl tmp r5 1;
sub r5 r4 tmp;
(* sub.w	r7, r6, r7, lsl #1                        #! PC = 0x80056d4 *)
shl tmp r7 1;
sub r7 r6 tmp;
(* vmov	r1, s6                                     #! PC = 0x80056d8 *)
mov r1 s6;
(* smull	r12, r7, r7, r1                           #! PC = 0x80056dc *)
smull r7 r12 r7 r1;
(* mul.w	lr, r12, r2                               #! PC = 0x80056e0 *)
cast r12_s@sint32 r12;
mull discard lr r12_s r2;
(* smlal	r12, r7, lr, r3                           #! PC = 0x80056e4 *)
cast lr@sint32 lr;
smull tmp_h tmp_l lr r3;
uadds carry r12 tmp_l r12;
sadc r7 tmp_h r7 carry;
assert eqmod r12 0 (2**32) && true;
assume eq r12 0 && true;
(* add	r4, r6                                      #! PC = 0x80056e8 *)
add r4 r4 r6;
(* add	r5, r7                                      #! PC = 0x80056ea *)
add r5 r5 r7;
(* sub.w	r6, r4, r6, lsl #1                        #! PC = 0x80056ec *)
shl tmp r6 1;
sub r6 r4 tmp;
(* sub.w	r7, r5, r7, lsl #1                        #! PC = 0x80056f0 *)
shl tmp r7 1;
sub r7 r5 tmp;
(* smull	r12, r10, r10, r1                         #! PC = 0x80056f4 *)
smull r10 r12 r10 r1;
(* mul.w	lr, r12, r2                               #! PC = 0x80056f8 *)
cast r12_s@sint32 r12;
mull discard lr r12_s r2;
(* smlal	r12, r10, lr, r3                          #! PC = 0x80056fc *)
cast lr@sint32 lr;
smull tmp_h tmp_l lr r3;
uadds carry r12 tmp_l r12;
sadc r10 tmp_h r10 carry;
assert eqmod r12 0 (2**32) && true;
assume eq r12 0 && true;
(* add	r4, r8                                      #! PC = 0x8005700 *)
add r4 r4 r8;
(* add	r5, r9                                      #! PC = 0x8005702 *)
add r5 r5 r9;
(* add	r6, r10                                     #! PC = 0x8005704 *)
add r6 r6 r10;
(* add	r7, r11                                     #! PC = 0x8005706 *)
add r7 r7 r11;
(* sub.w	r8, r4, r8, lsl #1                        #! PC = 0x8005708 *)
shl tmp r8 1;
sub r8 r4 tmp;
(* sub.w	r9, r5, r9, lsl #1                        #! PC = 0x800570c *)
shl tmp r9 1;
sub r9 r5 tmp;
(* sub.w	r10, r6, r10, lsl #1                      #! PC = 0x8005710 *)
shl tmp r10 1;
sub r10 r6 tmp;
(* sub.w	r11, r7, r11, lsl #1                      #! PC = 0x8005714 *)
shl tmp r11 1;
sub r11 r7 tmp;
(* vmov	r1, s11                                    #! PC = 0x8005718 *)
mov r1 s11;
(* smull	r12, r4, r4, r1                           #! PC = 0x800571c *)
smull r4 r12 r4 r1;
(* mul.w	lr, r12, r2                               #! PC = 0x8005720 *)
cast r12_s@sint32 r12;
mull discard lr r12_s r2;
(* smlal	r12, r4, lr, r3                           #! PC = 0x8005724 *)
cast lr@sint32 lr;
smull tmp_h tmp_l lr r3;
uadds carry r12 tmp_l r12;
sadc r4 tmp_h r4 carry;
assert eqmod r12 0 (2**32) && true;
assume eq r12 0 && true;
(* vmov	r1, s12                                    #! PC = 0x8005728 *)
mov r1 s12;
(* smull	r12, r5, r5, r1                           #! PC = 0x800572c *)
smull r5 r12 r5 r1;
(* mul.w	lr, r12, r2                               #! PC = 0x8005730 *)
cast r12_s@sint32 r12;
mull discard lr r12_s r2;
(* smlal	r12, r5, lr, r3                           #! PC = 0x8005734 *)
cast lr@sint32 lr;
smull tmp_h tmp_l lr r3;
uadds carry r12 tmp_l r12;
sadc r5 tmp_h r5 carry;
assert eqmod r12 0 (2**32) && true;
assume eq r12 0 && true;
(* vmov	r1, s13                                    #! PC = 0x8005738 *)
mov r1 s13;
(* smull	r12, r6, r6, r1                           #! PC = 0x800573c *)
smull r6 r12 r6 r1;
(* mul.w	lr, r12, r2                               #! PC = 0x8005740 *)
cast r12_s@sint32 r12;
mull discard lr r12_s r2;
(* smlal	r12, r6, lr, r3                           #! PC = 0x8005744 *)
cast lr@sint32 lr;
smull tmp_h tmp_l lr r3;
uadds carry r12 tmp_l r12;
sadc r6 tmp_h r6 carry;
assert eqmod r12 0 (2**32) && true;
assume eq r12 0 && true;
(* vmov	r1, s14                                    #! PC = 0x8005748 *)
mov r1 s14;
(* smull	r12, r7, r7, r1                           #! PC = 0x800574c *)
smull r7 r12 r7 r1;
(* mul.w	lr, r12, r2                               #! PC = 0x8005750 *)
cast r12_s@sint32 r12;
mull discard lr r12_s r2;
(* smlal	r12, r7, lr, r3                           #! PC = 0x8005754 *)
cast lr@sint32 lr;
smull tmp_h tmp_l lr r3;
uadds carry r12 tmp_l r12;
sadc r7 tmp_h r7 carry;
assert eqmod r12 0 (2**32) && true;
assume eq r12 0 && true;
(* vmov	r1, s15                                    #! PC = 0x8005758 *)
mov r1 s15;
(* smull	r12, r8, r8, r1                           #! PC = 0x800575c *)
smull r8 r12 r8 r1;
(* mul.w	lr, r12, r2                               #! PC = 0x8005760 *)
cast r12_s@sint32 r12;
mull discard lr r12_s r2;
(* smlal	r12, r8, lr, r3                           #! PC = 0x8005764 *)
cast lr@sint32 lr;
smull tmp_h tmp_l lr r3;
uadds carry r12 tmp_l r12;
sadc r8 tmp_h r8 carry;
assert eqmod r12 0 (2**32) && true;
assume eq r12 0 && true;
(* vmov	r1, s16                                    #! PC = 0x8005768 *)
mov r1 s16;
(* smull	r12, r9, r9, r1                           #! PC = 0x800576c *)
smull r9 r12 r9 r1;
(* mul.w	lr, r12, r2                               #! PC = 0x8005770 *)
cast r12_s@sint32 r12;
mull discard lr r12_s r2;
(* smlal	r12, r9, lr, r3                           #! PC = 0x8005774 *)
cast lr@sint32 lr;
smull tmp_h tmp_l lr r3;
uadds carry r12 tmp_l r12;
sadc r9 tmp_h r9 carry;
assert eqmod r12 0 (2**32) && true;
assume eq r12 0 && true;
(* vmov	r1, s17                                    #! PC = 0x8005778 *)
mov r1 s17;
(* smull	r12, r10, r10, r1                         #! PC = 0x800577c *)
smull r10 r12 r10 r1;
(* mul.w	lr, r12, r2                               #! PC = 0x8005780 *)
cast r12_s@sint32 r12;
mull discard lr r12_s r2;
(* smlal	r12, r10, lr, r3                          #! PC = 0x8005784 *)
cast lr@sint32 lr;
smull tmp_h tmp_l lr r3;
uadds carry r12 tmp_l r12;
sadc r10 tmp_h r10 carry;
assert eqmod r12 0 (2**32) && true;
assume eq r12 0 && true;
(* vmov	r1, s18                                    #! PC = 0x8005788 *)
mov r1 s18;
(* smull	r12, r11, r11, r1                         #! PC = 0x800578c *)
smull r11 r12 r11 r1;
(* mul.w	lr, r12, r2                               #! PC = 0x8005790 *)
cast r12_s@sint32 r12;
mull discard lr r12_s r2;
(* smlal	r12, r11, lr, r3                          #! PC = 0x8005794 *)
cast lr@sint32 lr;
smull tmp_h tmp_l lr r3;
uadds carry r12 tmp_l r12;
sadc r11 tmp_h r11 carry;
assert eqmod r12 0 (2**32) && true;
assume eq r12 0 && true;
(* mov.w	r1, r3, lsr #1                            #! PC = 0x8005798 *)
split r1 discard r3 1;
(* cmp	r4, r1                                      #! PC = 0x800579c *)
sub cmp r4 r1;
split sign discard cmp 31;
cast sign@bit sign;
cmov tmp sign 0@sint32 r3;
sub r4 r4 tmp;
(* cmn	r4, r1                                      #! PC = 0x80057a2 *)
add cmn r4 r1;
split sign discard cmn 31;
cast sign@bit sign;
cmov tmp sign r3 0@sint32;
add r4 r4 tmp;
(* cmp	r5, r1                                      #! PC = 0x80057a8 *)
sub cmp r5 r1;
split sign discard cmp 31;
cast sign@bit sign;
cmov tmp sign 0@sint32 r3;
sub r5 r5 tmp;
(* cmn	r5, r1                                      #! PC = 0x80057ae *)
add cmn r5 r1;
split sign discard cmn 31;
cast sign@bit sign;
cmov tmp sign r3 0@sint32;
add r5 r5 tmp;
(* cmp	r6, r1                                      #! PC = 0x80057b4 *)
sub cmp r6 r1;
split sign discard cmp 31;
cast sign@bit sign;
cmov tmp sign 0@sint32 r3;
sub r6 r6 tmp;
(* cmn	r6, r1                                      #! PC = 0x80057ba *)
add cmn r6 r1;
split sign discard cmn 31;
cast sign@bit sign;
cmov tmp sign r3 0@sint32;
add r6 r6 tmp;
(* cmp	r7, r1                                      #! PC = 0x80057c0 *)
sub cmp r7 r1;
split sign discard cmp 31;
cast sign@bit sign;
cmov tmp sign 0@sint32 r3;
sub r7 r7 tmp;
(* cmn	r7, r1                                      #! PC = 0x80057c6 *)
add cmn r7 r1;
split sign discard cmn 31;
cast sign@bit sign;
cmov tmp sign r3 0@sint32;
add r7 r7 tmp;
(* cmp	r8, r1                                      #! PC = 0x80057cc *)
sub cmp r8 r1;
split sign discard cmp 31;
cast sign@bit sign;
cmov tmp sign 0@sint32 r3;
sub r8 r8 tmp;
(* cmn.w	r8, r1                                    #! PC = 0x80057d4 *)
add cmn r8 r1;
split sign discard cmn 31;
cast sign@bit sign;
cmov tmp sign r3 0@sint32;
add r8 r8 tmp;
(* cmp	r9, r1                                      #! PC = 0x80057dc *)
sub cmp r9 r1;
split sign discard cmp 31;
cast sign@bit sign;
cmov tmp sign 0@sint32 r3;
sub r9 r9 tmp;
(* cmn.w	r9, r1                                    #! PC = 0x80057e4 *)
add cmn r9 r1;
split sign discard cmn 31;
cast sign@bit sign;
cmov tmp sign r3 0@sint32;
add r9 r9 tmp;
(* cmp	r10, r1                                     #! PC = 0x80057ec *)
sub cmp r10 r1;
split sign discard cmp 31;
cast sign@bit sign;
cmov tmp sign 0@sint32 r3;
sub r10 r10 tmp;
(* cmn.w	r10, r1                                   #! PC = 0x80057f4 *)
add cmn r10 r1;
split sign discard cmn 31;
cast sign@bit sign;
cmov tmp sign r3 0@sint32;
add r10 r10 tmp;
(* cmp	r11, r1                                     #! PC = 0x80057fc *)
sub cmp r11 r1;
split sign discard cmp 31;
cast sign@bit sign;
cmov tmp sign 0@sint32 r3;
sub r11 r11 tmp;
(* cmn.w	r11, r1                                   #! PC = 0x8005804 *)
add cmn r11 r1;
split sign discard cmn 31;
cast sign@bit sign;
cmov tmp sign r3 0@sint32;
add r11 r11 tmp;
(* vmov	lr, s0                                     #! PC = 0x800580c *)
mov lr s0;
(* strh.w	r8, [lr, #256]	; 0x100                   #! EA = L0x2001994e; PC = 0x8005810 *)
ghost L0x2001994e_f@sint32 : L0x2001994e_f = r8 && L0x2001994e_f = r8;
split discard L0x2001994e_u r8 16;
cast L0x2001994e@sint16 L0x2001994e_u;
(* strh.w	r9, [lr, #320]	; 0x140                   #! EA = L0x2001998e; PC = 0x8005814 *)
ghost L0x2001998e_f@sint32 : L0x2001998e_f = r9 && L0x2001998e_f = r9;
split discard L0x2001998e_u r9 16;
cast L0x2001998e@sint16 L0x2001998e_u;
(* strh.w	r10, [lr, #384]	; 0x180                  #! EA = L0x200199ce; PC = 0x8005818 *)
ghost L0x200199ce_f@sint32 : L0x200199ce_f = r10 && L0x200199ce_f = r10;
split discard L0x200199ce_u r10 16;
cast L0x200199ce@sint16 L0x200199ce_u;
(* strh.w	r11, [lr, #448]	; 0x1c0                  #! EA = L0x20019a0e; PC = 0x800581c *)
ghost L0x20019a0e_f@sint32 : L0x20019a0e_f = r11 && L0x20019a0e_f = r11;
split discard L0x20019a0e_u r11 16;
cast L0x20019a0e@sint16 L0x20019a0e_u;
(* strh.w	r5, [lr, #64]	; 0x40                     #! EA = L0x2001988e; PC = 0x8005820 *)
ghost L0x2001988e_f@sint32 : L0x2001988e_f = r5 && L0x2001988e_f = r5;
split discard L0x2001988e_u r5 16;
cast L0x2001988e@sint16 L0x2001988e_u;
(* strh.w	r6, [lr, #128]	; 0x80                    #! EA = L0x200198ce; PC = 0x8005824 *)
ghost L0x200198ce_f@sint32 : L0x200198ce_f = r6 && L0x200198ce_f = r6;
split discard L0x200198ce_u r6 16;
cast L0x200198ce@sint16 L0x200198ce_u;
(* strh.w	r7, [lr, #192]	; 0xc0                    #! EA = L0x2001990e; PC = 0x8005828 *)
ghost L0x2001990e_f@sint32 : L0x2001990e_f = r7 && L0x2001990e_f = r7;
split discard L0x2001990e_u r7 16;
cast L0x2001990e@sint16 L0x2001990e_u;
(* strh.w	r4, [lr], #2                             #! EA = L0x2001984e; PC = 0x800582c *)
ghost L0x2001984e_f@sint32 : L0x2001984e_f = r4 && L0x2001984e_f = r4;
split discard L0x2001984e_u r4 16;
cast L0x2001984e@sint16 L0x2001984e_u;
(* vmov	s0, lr                                     #! PC = 0x8005830 *)
mov s0 lr;
(* vmov	r12, s2                                    #! PC = 0x8005834 *)
mov r12 s2;
(* add.w	r12, r0, #112	; 0x70                      #! PC = 0x8005840 *)
adds discard r12 r0 112@uint32;
(* vmov	s2, r12                                    #! PC = 0x8005844 *)
mov s2 r12;
(* vmov	r1, s1                                     #! PC = 0x8005848 *)
mov r1 s1;
(* vldmia	r1!, {s4-s18}                            #! EA = L0x800f7f8; PC = 0x800584c *)
mov s4 L0x800f7f8;
mov s5 L0x800f7fc;
mov s6 L0x800f800;
mov s7 L0x800f804;
mov s8 L0x800f808;
mov s9 L0x800f80c;
mov s10 L0x800f810;
mov s11 L0x800f814;
mov s12 L0x800f818;
mov s13 L0x800f81c;
mov s14 L0x800f820;
mov s15 L0x800f824;
mov s16 L0x800f828;
mov s17 L0x800f82c;
mov s18 L0x800f830;
(* vmov	s1, r1                                     #! PC = 0x8005850 *)
mov s1 r1;
(* add.w	lr, r0, #16                               #! PC = 0x8005854 *)
adds discard lr r0 16@uint32;
(* vmov	s3, lr                                     #! PC = 0x8005858 *)
mov s3 lr;
(* ldr.w	r8, [r0, #512]	; 0x200                    #! EA = L0x2001a458; Value = 0xff103c65; PC = 0x800585c *)
mov r8 L0x2001a458;
(* ldr.w	r9, [r0, #640]	; 0x280                    #! EA = L0x2001a4d8; Value = 0x015ae455; PC = 0x8005860 *)
mov r9 L0x2001a4d8;
(* ldr.w	r10, [r0, #768]	; 0x300                   #! EA = L0x2001a558; Value = 0xfec612d7; PC = 0x8005864 *)
mov r10 L0x2001a558;
(* ldr.w	r11, [r0, #896]	; 0x380                   #! EA = L0x2001a5d8; Value = 0x000c79d7; PC = 0x8005868 *)
mov r11 L0x2001a5d8;
(* ldr.w	r5, [r0, #128]	; 0x80                     #! EA = L0x2001a2d8; Value = 0x00a3a0f1; PC = 0x800586c *)
mov r5 L0x2001a2d8;
(* ldr.w	r6, [r0, #256]	; 0x100                    #! EA = L0x2001a358; Value = 0xfee03c0a; PC = 0x8005870 *)
mov r6 L0x2001a358;
(* ldr.w	r7, [r0, #384]	; 0x180                    #! EA = L0x2001a3d8; Value = 0x00a572a1; PC = 0x8005874 *)
mov r7 L0x2001a3d8;
(* ldr.w	r4, [r0], #4                              #! EA = L0x2001a258; Value = 0xfe6ee8d1; PC = 0x8005878 *)
mov r4 L0x2001a258;
(* vmov	r1, s4                                     #! PC = 0x800587c *)
mov r1 s4;
(* smull	r12, r5, r5, r1                           #! PC = 0x8005880 *)
smull r5 r12 r5 r1;
(* mul.w	lr, r12, r2                               #! PC = 0x8005884 *)
cast r12_s@sint32 r12;
mull discard lr r12_s r2;
(* smlal	r12, r5, lr, r3                           #! PC = 0x8005888 *)
cast lr@sint32 lr;
smull tmp_h tmp_l lr r3;
uadds carry r12 tmp_l r12;
sadc r5 tmp_h r5 carry;
assert eqmod r12 0 (2**32) && true;
assume eq r12 0 && true;
(* smull	r12, r7, r7, r1                           #! PC = 0x800588c *)
smull r7 r12 r7 r1;
(* mul.w	lr, r12, r2                               #! PC = 0x8005890 *)
cast r12_s@sint32 r12;
mull discard lr r12_s r2;
(* smlal	r12, r7, lr, r3                           #! PC = 0x8005894 *)
cast lr@sint32 lr;
smull tmp_h tmp_l lr r3;
uadds carry r12 tmp_l r12;
sadc r7 tmp_h r7 carry;
assert eqmod r12 0 (2**32) && true;
assume eq r12 0 && true;
(* smull	r12, r9, r9, r1                           #! PC = 0x8005898 *)
smull r9 r12 r9 r1;
(* mul.w	lr, r12, r2                               #! PC = 0x800589c *)
cast r12_s@sint32 r12;
mull discard lr r12_s r2;
(* smlal	r12, r9, lr, r3                           #! PC = 0x80058a0 *)
cast lr@sint32 lr;
smull tmp_h tmp_l lr r3;
uadds carry r12 tmp_l r12;
sadc r9 tmp_h r9 carry;
assert eqmod r12 0 (2**32) && true;
assume eq r12 0 && true;
(* smull	r12, r11, r11, r1                         #! PC = 0x80058a4 *)
smull r11 r12 r11 r1;
(* mul.w	lr, r12, r2                               #! PC = 0x80058a8 *)
cast r12_s@sint32 r12;
mull discard lr r12_s r2;
(* smlal	r12, r11, lr, r3                          #! PC = 0x80058ac *)
cast lr@sint32 lr;
smull tmp_h tmp_l lr r3;
uadds carry r12 tmp_l r12;
sadc r11 tmp_h r11 carry;
assert eqmod r12 0 (2**32) && true;
assume eq r12 0 && true;
(* add	r4, r5                                      #! PC = 0x80058b0 *)
add r4 r4 r5;
(* add	r6, r7                                      #! PC = 0x80058b2 *)
add r6 r6 r7;
(* add	r8, r9                                      #! PC = 0x80058b4 *)
add r8 r8 r9;
(* add	r10, r11                                    #! PC = 0x80058b6 *)
add r10 r10 r11;
(* sub.w	r5, r4, r5, lsl #1                        #! PC = 0x80058b8 *)
shl tmp r5 1;
sub r5 r4 tmp;
(* sub.w	r7, r6, r7, lsl #1                        #! PC = 0x80058bc *)
shl tmp r7 1;
sub r7 r6 tmp;
(* sub.w	r9, r8, r9, lsl #1                        #! PC = 0x80058c0 *)
shl tmp r9 1;
sub r9 r8 tmp;
(* sub.w	r11, r10, r11, lsl #1                     #! PC = 0x80058c4 *)
shl tmp r11 1;
sub r11 r10 tmp;
(* vmov	r1, s5                                     #! PC = 0x80058c8 *)
mov r1 s5;
(* smull	r12, r6, r6, r1                           #! PC = 0x80058cc *)
smull r6 r12 r6 r1;
(* mul.w	lr, r12, r2                               #! PC = 0x80058d0 *)
cast r12_s@sint32 r12;
mull discard lr r12_s r2;
(* smlal	r12, r6, lr, r3                           #! PC = 0x80058d4 *)
cast lr@sint32 lr;
smull tmp_h tmp_l lr r3;
uadds carry r12 tmp_l r12;
sadc r6 tmp_h r6 carry;
assert eqmod r12 0 (2**32) && true;
assume eq r12 0 && true;
(* smull	r12, r10, r10, r1                         #! PC = 0x80058d8 *)
smull r10 r12 r10 r1;
(* mul.w	lr, r12, r2                               #! PC = 0x80058dc *)
cast r12_s@sint32 r12;
mull discard lr r12_s r2;
(* smlal	r12, r10, lr, r3                          #! PC = 0x80058e0 *)
cast lr@sint32 lr;
smull tmp_h tmp_l lr r3;
uadds carry r12 tmp_l r12;
sadc r10 tmp_h r10 carry;
assert eqmod r12 0 (2**32) && true;
assume eq r12 0 && true;
(* vmov	r1, s6                                     #! PC = 0x80058e4 *)
mov r1 s6;
(* smull	r12, r7, r7, r1                           #! PC = 0x80058e8 *)
smull r7 r12 r7 r1;
(* mul.w	lr, r12, r2                               #! PC = 0x80058ec *)
cast r12_s@sint32 r12;
mull discard lr r12_s r2;
(* smlal	r12, r7, lr, r3                           #! PC = 0x80058f0 *)
cast lr@sint32 lr;
smull tmp_h tmp_l lr r3;
uadds carry r12 tmp_l r12;
sadc r7 tmp_h r7 carry;
assert eqmod r12 0 (2**32) && true;
assume eq r12 0 && true;
(* smull	r12, r11, r11, r1                         #! PC = 0x80058f4 *)
smull r11 r12 r11 r1;
(* mul.w	lr, r12, r2                               #! PC = 0x80058f8 *)
cast r12_s@sint32 r12;
mull discard lr r12_s r2;
(* smlal	r12, r11, lr, r3                          #! PC = 0x80058fc *)
cast lr@sint32 lr;
smull tmp_h tmp_l lr r3;
uadds carry r12 tmp_l r12;
sadc r11 tmp_h r11 carry;
assert eqmod r12 0 (2**32) && true;
assume eq r12 0 && true;
(* add	r4, r6                                      #! PC = 0x8005900 *)
add r4 r4 r6;
(* add	r5, r7                                      #! PC = 0x8005902 *)
add r5 r5 r7;
(* add	r8, r10                                     #! PC = 0x8005904 *)
add r8 r8 r10;
(* add	r9, r11                                     #! PC = 0x8005906 *)
add r9 r9 r11;
(* sub.w	r6, r4, r6, lsl #1                        #! PC = 0x8005908 *)
shl tmp r6 1;
sub r6 r4 tmp;
(* sub.w	r7, r5, r7, lsl #1                        #! PC = 0x800590c *)
shl tmp r7 1;
sub r7 r5 tmp;
(* sub.w	r10, r8, r10, lsl #1                      #! PC = 0x8005910 *)
shl tmp r10 1;
sub r10 r8 tmp;
(* sub.w	r11, r9, r11, lsl #1                      #! PC = 0x8005914 *)
shl tmp r11 1;
sub r11 r9 tmp;
(* vmov	r1, s7                                     #! PC = 0x8005918 *)
mov r1 s7;
(* smull	r12, r8, r8, r1                           #! PC = 0x800591c *)
smull r8 r12 r8 r1;
(* mul.w	lr, r12, r2                               #! PC = 0x8005920 *)
cast r12_s@sint32 r12;
mull discard lr r12_s r2;
(* smlal	r12, r8, lr, r3                           #! PC = 0x8005924 *)
cast lr@sint32 lr;
smull tmp_h tmp_l lr r3;
uadds carry r12 tmp_l r12;
sadc r8 tmp_h r8 carry;
assert eqmod r12 0 (2**32) && true;
assume eq r12 0 && true;
(* vmov	r1, s8                                     #! PC = 0x8005928 *)
mov r1 s8;
(* smull	r12, r9, r9, r1                           #! PC = 0x800592c *)
smull r9 r12 r9 r1;
(* mul.w	lr, r12, r2                               #! PC = 0x8005930 *)
cast r12_s@sint32 r12;
mull discard lr r12_s r2;
(* smlal	r12, r9, lr, r3                           #! PC = 0x8005934 *)
cast lr@sint32 lr;
smull tmp_h tmp_l lr r3;
uadds carry r12 tmp_l r12;
sadc r9 tmp_h r9 carry;
assert eqmod r12 0 (2**32) && true;
assume eq r12 0 && true;
(* vmov	r1, s9                                     #! PC = 0x8005938 *)
mov r1 s9;
(* smull	r12, r10, r10, r1                         #! PC = 0x800593c *)
smull r10 r12 r10 r1;
(* mul.w	lr, r12, r2                               #! PC = 0x8005940 *)
cast r12_s@sint32 r12;
mull discard lr r12_s r2;
(* smlal	r12, r10, lr, r3                          #! PC = 0x8005944 *)
cast lr@sint32 lr;
smull tmp_h tmp_l lr r3;
uadds carry r12 tmp_l r12;
sadc r10 tmp_h r10 carry;
assert eqmod r12 0 (2**32) && true;
assume eq r12 0 && true;
(* vmov	r1, s10                                    #! PC = 0x8005948 *)
mov r1 s10;
(* smull	r12, r11, r11, r1                         #! PC = 0x800594c *)
smull r11 r12 r11 r1;
(* mul.w	lr, r12, r2                               #! PC = 0x8005950 *)
cast r12_s@sint32 r12;
mull discard lr r12_s r2;
(* smlal	r12, r11, lr, r3                          #! PC = 0x8005954 *)
cast lr@sint32 lr;
smull tmp_h tmp_l lr r3;
uadds carry r12 tmp_l r12;
sadc r11 tmp_h r11 carry;
assert eqmod r12 0 (2**32) && true;
assume eq r12 0 && true;
(* add	r4, r8                                      #! PC = 0x8005958 *)
add r4 r4 r8;
(* add	r5, r9                                      #! PC = 0x800595a *)
add r5 r5 r9;
(* add	r6, r10                                     #! PC = 0x800595c *)
add r6 r6 r10;
(* add	r7, r11                                     #! PC = 0x800595e *)
add r7 r7 r11;
(* sub.w	r8, r4, r8, lsl #1                        #! PC = 0x8005960 *)
shl tmp r8 1;
sub r8 r4 tmp;
(* sub.w	r9, r5, r9, lsl #1                        #! PC = 0x8005964 *)
shl tmp r9 1;
sub r9 r5 tmp;
(* sub.w	r10, r6, r10, lsl #1                      #! PC = 0x8005968 *)
shl tmp r10 1;
sub r10 r6 tmp;
(* sub.w	r11, r7, r11, lsl #1                      #! PC = 0x800596c *)
shl tmp r11 1;
sub r11 r7 tmp;
(* vmov	r1, s11                                    #! PC = 0x8005970 *)
mov r1 s11;
(* smull	r12, r4, r4, r1                           #! PC = 0x8005974 *)
smull r4 r12 r4 r1;
(* mul.w	lr, r12, r2                               #! PC = 0x8005978 *)
cast r12_s@sint32 r12;
mull discard lr r12_s r2;
(* smlal	r12, r4, lr, r3                           #! PC = 0x800597c *)
cast lr@sint32 lr;
smull tmp_h tmp_l lr r3;
uadds carry r12 tmp_l r12;
sadc r4 tmp_h r4 carry;
assert eqmod r12 0 (2**32) && true;
assume eq r12 0 && true;
(* vmov	r1, s12                                    #! PC = 0x8005980 *)
mov r1 s12;
(* smull	r12, r5, r5, r1                           #! PC = 0x8005984 *)
smull r5 r12 r5 r1;
(* mul.w	lr, r12, r2                               #! PC = 0x8005988 *)
cast r12_s@sint32 r12;
mull discard lr r12_s r2;
(* smlal	r12, r5, lr, r3                           #! PC = 0x800598c *)
cast lr@sint32 lr;
smull tmp_h tmp_l lr r3;
uadds carry r12 tmp_l r12;
sadc r5 tmp_h r5 carry;
assert eqmod r12 0 (2**32) && true;
assume eq r12 0 && true;
(* vmov	r1, s13                                    #! PC = 0x8005990 *)
mov r1 s13;
(* smull	r12, r6, r6, r1                           #! PC = 0x8005994 *)
smull r6 r12 r6 r1;
(* mul.w	lr, r12, r2                               #! PC = 0x8005998 *)
cast r12_s@sint32 r12;
mull discard lr r12_s r2;
(* smlal	r12, r6, lr, r3                           #! PC = 0x800599c *)
cast lr@sint32 lr;
smull tmp_h tmp_l lr r3;
uadds carry r12 tmp_l r12;
sadc r6 tmp_h r6 carry;
assert eqmod r12 0 (2**32) && true;
assume eq r12 0 && true;
(* vmov	r1, s14                                    #! PC = 0x80059a0 *)
mov r1 s14;
(* smull	r12, r7, r7, r1                           #! PC = 0x80059a4 *)
smull r7 r12 r7 r1;
(* mul.w	lr, r12, r2                               #! PC = 0x80059a8 *)
cast r12_s@sint32 r12;
mull discard lr r12_s r2;
(* smlal	r12, r7, lr, r3                           #! PC = 0x80059ac *)
cast lr@sint32 lr;
smull tmp_h tmp_l lr r3;
uadds carry r12 tmp_l r12;
sadc r7 tmp_h r7 carry;
assert eqmod r12 0 (2**32) && true;
assume eq r12 0 && true;
(* vmov	r1, s15                                    #! PC = 0x80059b0 *)
mov r1 s15;
(* smull	r12, r8, r8, r1                           #! PC = 0x80059b4 *)
smull r8 r12 r8 r1;
(* mul.w	lr, r12, r2                               #! PC = 0x80059b8 *)
cast r12_s@sint32 r12;
mull discard lr r12_s r2;
(* smlal	r12, r8, lr, r3                           #! PC = 0x80059bc *)
cast lr@sint32 lr;
smull tmp_h tmp_l lr r3;
uadds carry r12 tmp_l r12;
sadc r8 tmp_h r8 carry;
assert eqmod r12 0 (2**32) && true;
assume eq r12 0 && true;
(* vmov	r1, s16                                    #! PC = 0x80059c0 *)
mov r1 s16;
(* smull	r12, r9, r9, r1                           #! PC = 0x80059c4 *)
smull r9 r12 r9 r1;
(* mul.w	lr, r12, r2                               #! PC = 0x80059c8 *)
cast r12_s@sint32 r12;
mull discard lr r12_s r2;
(* smlal	r12, r9, lr, r3                           #! PC = 0x80059cc *)
cast lr@sint32 lr;
smull tmp_h tmp_l lr r3;
uadds carry r12 tmp_l r12;
sadc r9 tmp_h r9 carry;
assert eqmod r12 0 (2**32) && true;
assume eq r12 0 && true;
(* vmov	r1, s17                                    #! PC = 0x80059d0 *)
mov r1 s17;
(* smull	r12, r10, r10, r1                         #! PC = 0x80059d4 *)
smull r10 r12 r10 r1;
(* mul.w	lr, r12, r2                               #! PC = 0x80059d8 *)
cast r12_s@sint32 r12;
mull discard lr r12_s r2;
(* smlal	r12, r10, lr, r3                          #! PC = 0x80059dc *)
cast lr@sint32 lr;
smull tmp_h tmp_l lr r3;
uadds carry r12 tmp_l r12;
sadc r10 tmp_h r10 carry;
assert eqmod r12 0 (2**32) && true;
assume eq r12 0 && true;
(* vmov	r1, s18                                    #! PC = 0x80059e0 *)
mov r1 s18;
(* smull	r12, r11, r11, r1                         #! PC = 0x80059e4 *)
smull r11 r12 r11 r1;
(* mul.w	lr, r12, r2                               #! PC = 0x80059e8 *)
cast r12_s@sint32 r12;
mull discard lr r12_s r2;
(* smlal	r12, r11, lr, r3                          #! PC = 0x80059ec *)
cast lr@sint32 lr;
smull tmp_h tmp_l lr r3;
uadds carry r12 tmp_l r12;
sadc r11 tmp_h r11 carry;
assert eqmod r12 0 (2**32) && true;
assume eq r12 0 && true;
(* mov.w	r1, r3, lsr #1                            #! PC = 0x80059f0 *)
split r1 discard r3 1;
(* cmp	r4, r1                                      #! PC = 0x80059f4 *)
sub cmp r4 r1;
split sign discard cmp 31;
cast sign@bit sign;
cmov tmp sign 0@sint32 r3;
sub r4 r4 tmp;
(* cmn	r4, r1                                      #! PC = 0x80059fa *)
add cmn r4 r1;
split sign discard cmn 31;
cast sign@bit sign;
cmov tmp sign r3 0@sint32;
add r4 r4 tmp;
(* cmp	r5, r1                                      #! PC = 0x8005a00 *)
sub cmp r5 r1;
split sign discard cmp 31;
cast sign@bit sign;
cmov tmp sign 0@sint32 r3;
sub r5 r5 tmp;
(* cmn	r5, r1                                      #! PC = 0x8005a06 *)
add cmn r5 r1;
split sign discard cmn 31;
cast sign@bit sign;
cmov tmp sign r3 0@sint32;
add r5 r5 tmp;
(* cmp	r6, r1                                      #! PC = 0x8005a0c *)
sub cmp r6 r1;
split sign discard cmp 31;
cast sign@bit sign;
cmov tmp sign 0@sint32 r3;
sub r6 r6 tmp;
(* cmn	r6, r1                                      #! PC = 0x8005a12 *)
add cmn r6 r1;
split sign discard cmn 31;
cast sign@bit sign;
cmov tmp sign r3 0@sint32;
add r6 r6 tmp;
(* cmp	r7, r1                                      #! PC = 0x8005a18 *)
sub cmp r7 r1;
split sign discard cmp 31;
cast sign@bit sign;
cmov tmp sign 0@sint32 r3;
sub r7 r7 tmp;
(* cmn	r7, r1                                      #! PC = 0x8005a1e *)
add cmn r7 r1;
split sign discard cmn 31;
cast sign@bit sign;
cmov tmp sign r3 0@sint32;
add r7 r7 tmp;
(* cmp	r8, r1                                      #! PC = 0x8005a24 *)
sub cmp r8 r1;
split sign discard cmp 31;
cast sign@bit sign;
cmov tmp sign 0@sint32 r3;
sub r8 r8 tmp;
(* cmn.w	r8, r1                                    #! PC = 0x8005a2c *)
add cmn r8 r1;
split sign discard cmn 31;
cast sign@bit sign;
cmov tmp sign r3 0@sint32;
add r8 r8 tmp;
(* cmp	r9, r1                                      #! PC = 0x8005a34 *)
sub cmp r9 r1;
split sign discard cmp 31;
cast sign@bit sign;
cmov tmp sign 0@sint32 r3;
sub r9 r9 tmp;
(* cmn.w	r9, r1                                    #! PC = 0x8005a3c *)
add cmn r9 r1;
split sign discard cmn 31;
cast sign@bit sign;
cmov tmp sign r3 0@sint32;
add r9 r9 tmp;
(* cmp	r10, r1                                     #! PC = 0x8005a44 *)
sub cmp r10 r1;
split sign discard cmp 31;
cast sign@bit sign;
cmov tmp sign 0@sint32 r3;
sub r10 r10 tmp;
(* cmn.w	r10, r1                                   #! PC = 0x8005a4c *)
add cmn r10 r1;
split sign discard cmn 31;
cast sign@bit sign;
cmov tmp sign r3 0@sint32;
add r10 r10 tmp;
(* cmp	r11, r1                                     #! PC = 0x8005a54 *)
sub cmp r11 r1;
split sign discard cmp 31;
cast sign@bit sign;
cmov tmp sign 0@sint32 r3;
sub r11 r11 tmp;
(* cmn.w	r11, r1                                   #! PC = 0x8005a5c *)
add cmn r11 r1;
split sign discard cmn 31;
cast sign@bit sign;
cmov tmp sign r3 0@sint32;
add r11 r11 tmp;
(* vmov	lr, s0                                     #! PC = 0x8005a64 *)
mov lr s0;
(* strh.w	r8, [lr, #256]	; 0x100                   #! EA = L0x20019950; PC = 0x8005a68 *)
ghost L0x20019950_f@sint32 : L0x20019950_f = r8 && L0x20019950_f = r8;
split discard L0x20019950_u r8 16;
cast L0x20019950@sint16 L0x20019950_u;
(* strh.w	r9, [lr, #320]	; 0x140                   #! EA = L0x20019990; PC = 0x8005a6c *)
ghost L0x20019990_f@sint32 : L0x20019990_f = r9 && L0x20019990_f = r9;
split discard L0x20019990_u r9 16;
cast L0x20019990@sint16 L0x20019990_u;
(* strh.w	r10, [lr, #384]	; 0x180                  #! EA = L0x200199d0; PC = 0x8005a70 *)
ghost L0x200199d0_f@sint32 : L0x200199d0_f = r10 && L0x200199d0_f = r10;
split discard L0x200199d0_u r10 16;
cast L0x200199d0@sint16 L0x200199d0_u;
(* strh.w	r11, [lr, #448]	; 0x1c0                  #! EA = L0x20019a10; PC = 0x8005a74 *)
ghost L0x20019a10_f@sint32 : L0x20019a10_f = r11 && L0x20019a10_f = r11;
split discard L0x20019a10_u r11 16;
cast L0x20019a10@sint16 L0x20019a10_u;
(* strh.w	r5, [lr, #64]	; 0x40                     #! EA = L0x20019890; PC = 0x8005a78 *)
ghost L0x20019890_f@sint32 : L0x20019890_f = r5 && L0x20019890_f = r5;
split discard L0x20019890_u r5 16;
cast L0x20019890@sint16 L0x20019890_u;
(* strh.w	r6, [lr, #128]	; 0x80                    #! EA = L0x200198d0; PC = 0x8005a7c *)
ghost L0x200198d0_f@sint32 : L0x200198d0_f = r6 && L0x200198d0_f = r6;
split discard L0x200198d0_u r6 16;
cast L0x200198d0@sint16 L0x200198d0_u;
(* strh.w	r7, [lr, #192]	; 0xc0                    #! EA = L0x20019910; PC = 0x8005a80 *)
ghost L0x20019910_f@sint32 : L0x20019910_f = r7 && L0x20019910_f = r7;
split discard L0x20019910_u r7 16;
cast L0x20019910@sint16 L0x20019910_u;
(* strh.w	r4, [lr], #2                             #! EA = L0x20019850; PC = 0x8005a84 *)
ghost L0x20019850_f@sint32 : L0x20019850_f = r4 && L0x20019850_f = r4;
split discard L0x20019850_u r4 16;
cast L0x20019850@sint16 L0x20019850_u;
(* vmov	s0, lr                                     #! PC = 0x8005a88 *)
mov s0 lr;
(* ldr.w	r8, [r0, #512]	; 0x200                    #! EA = L0x2001a45c; Value = 0xff52bc53; PC = 0x8005a8c *)
mov r8 L0x2001a45c;
(* ldr.w	r9, [r0, #640]	; 0x280                    #! EA = L0x2001a4dc; Value = 0xffd40b2c; PC = 0x8005a90 *)
mov r9 L0x2001a4dc;
(* ldr.w	r10, [r0, #768]	; 0x300                   #! EA = L0x2001a55c; Value = 0x00317723; PC = 0x8005a94 *)
mov r10 L0x2001a55c;
(* ldr.w	r11, [r0, #896]	; 0x380                   #! EA = L0x2001a5dc; Value = 0xfeb28fde; PC = 0x8005a98 *)
mov r11 L0x2001a5dc;
(* ldr.w	r5, [r0, #128]	; 0x80                     #! EA = L0x2001a2dc; Value = 0x00976898; PC = 0x8005a9c *)
mov r5 L0x2001a2dc;
(* ldr.w	r6, [r0, #256]	; 0x100                    #! EA = L0x2001a35c; Value = 0xff867edc; PC = 0x8005aa0 *)
mov r6 L0x2001a35c;
(* ldr.w	r7, [r0, #384]	; 0x180                    #! EA = L0x2001a3dc; Value = 0x0033a4da; PC = 0x8005aa4 *)
mov r7 L0x2001a3dc;
(* ldr.w	r4, [r0], #4                              #! EA = L0x2001a25c; Value = 0xfe4877d9; PC = 0x8005aa8 *)
mov r4 L0x2001a25c;
(* vmov	r1, s4                                     #! PC = 0x8005aac *)
mov r1 s4;
(* smull	r12, r5, r5, r1                           #! PC = 0x8005ab0 *)
smull r5 r12 r5 r1;
(* mul.w	lr, r12, r2                               #! PC = 0x8005ab4 *)
cast r12_s@sint32 r12;
mull discard lr r12_s r2;
(* smlal	r12, r5, lr, r3                           #! PC = 0x8005ab8 *)
cast lr@sint32 lr;
smull tmp_h tmp_l lr r3;
uadds carry r12 tmp_l r12;
sadc r5 tmp_h r5 carry;
assert eqmod r12 0 (2**32) && true;
assume eq r12 0 && true;
(* smull	r12, r7, r7, r1                           #! PC = 0x8005abc *)
smull r7 r12 r7 r1;
(* mul.w	lr, r12, r2                               #! PC = 0x8005ac0 *)
cast r12_s@sint32 r12;
mull discard lr r12_s r2;
(* smlal	r12, r7, lr, r3                           #! PC = 0x8005ac4 *)
cast lr@sint32 lr;
smull tmp_h tmp_l lr r3;
uadds carry r12 tmp_l r12;
sadc r7 tmp_h r7 carry;
assert eqmod r12 0 (2**32) && true;
assume eq r12 0 && true;
(* smull	r12, r9, r9, r1                           #! PC = 0x8005ac8 *)
smull r9 r12 r9 r1;
(* mul.w	lr, r12, r2                               #! PC = 0x8005acc *)
cast r12_s@sint32 r12;
mull discard lr r12_s r2;
(* smlal	r12, r9, lr, r3                           #! PC = 0x8005ad0 *)
cast lr@sint32 lr;
smull tmp_h tmp_l lr r3;
uadds carry r12 tmp_l r12;
sadc r9 tmp_h r9 carry;
assert eqmod r12 0 (2**32) && true;
assume eq r12 0 && true;
(* smull	r12, r11, r11, r1                         #! PC = 0x8005ad4 *)
smull r11 r12 r11 r1;
(* mul.w	lr, r12, r2                               #! PC = 0x8005ad8 *)
cast r12_s@sint32 r12;
mull discard lr r12_s r2;
(* smlal	r12, r11, lr, r3                          #! PC = 0x8005adc *)
cast lr@sint32 lr;
smull tmp_h tmp_l lr r3;
uadds carry r12 tmp_l r12;
sadc r11 tmp_h r11 carry;
assert eqmod r12 0 (2**32) && true;
assume eq r12 0 && true;
(* add	r4, r5                                      #! PC = 0x8005ae0 *)
add r4 r4 r5;
(* add	r6, r7                                      #! PC = 0x8005ae2 *)
add r6 r6 r7;
(* add	r8, r9                                      #! PC = 0x8005ae4 *)
add r8 r8 r9;
(* add	r10, r11                                    #! PC = 0x8005ae6 *)
add r10 r10 r11;
(* sub.w	r5, r4, r5, lsl #1                        #! PC = 0x8005ae8 *)
shl tmp r5 1;
sub r5 r4 tmp;
(* sub.w	r7, r6, r7, lsl #1                        #! PC = 0x8005aec *)
shl tmp r7 1;
sub r7 r6 tmp;
(* sub.w	r9, r8, r9, lsl #1                        #! PC = 0x8005af0 *)
shl tmp r9 1;
sub r9 r8 tmp;
(* sub.w	r11, r10, r11, lsl #1                     #! PC = 0x8005af4 *)
shl tmp r11 1;
sub r11 r10 tmp;
(* vmov	r1, s5                                     #! PC = 0x8005af8 *)
mov r1 s5;
(* smull	r12, r6, r6, r1                           #! PC = 0x8005afc *)
smull r6 r12 r6 r1;
(* mul.w	lr, r12, r2                               #! PC = 0x8005b00 *)
cast r12_s@sint32 r12;
mull discard lr r12_s r2;
(* smlal	r12, r6, lr, r3                           #! PC = 0x8005b04 *)
cast lr@sint32 lr;
smull tmp_h tmp_l lr r3;
uadds carry r12 tmp_l r12;
sadc r6 tmp_h r6 carry;
assert eqmod r12 0 (2**32) && true;
assume eq r12 0 && true;
(* smull	r12, r10, r10, r1                         #! PC = 0x8005b08 *)
smull r10 r12 r10 r1;
(* mul.w	lr, r12, r2                               #! PC = 0x8005b0c *)
cast r12_s@sint32 r12;
mull discard lr r12_s r2;
(* smlal	r12, r10, lr, r3                          #! PC = 0x8005b10 *)
cast lr@sint32 lr;
smull tmp_h tmp_l lr r3;
uadds carry r12 tmp_l r12;
sadc r10 tmp_h r10 carry;
assert eqmod r12 0 (2**32) && true;
assume eq r12 0 && true;
(* vmov	r1, s6                                     #! PC = 0x8005b14 *)
mov r1 s6;
(* smull	r12, r7, r7, r1                           #! PC = 0x8005b18 *)
smull r7 r12 r7 r1;
(* mul.w	lr, r12, r2                               #! PC = 0x8005b1c *)
cast r12_s@sint32 r12;
mull discard lr r12_s r2;
(* smlal	r12, r7, lr, r3                           #! PC = 0x8005b20 *)
cast lr@sint32 lr;
smull tmp_h tmp_l lr r3;
uadds carry r12 tmp_l r12;
sadc r7 tmp_h r7 carry;
assert eqmod r12 0 (2**32) && true;
assume eq r12 0 && true;
(* smull	r12, r11, r11, r1                         #! PC = 0x8005b24 *)
smull r11 r12 r11 r1;
(* mul.w	lr, r12, r2                               #! PC = 0x8005b28 *)
cast r12_s@sint32 r12;
mull discard lr r12_s r2;
(* smlal	r12, r11, lr, r3                          #! PC = 0x8005b2c *)
cast lr@sint32 lr;
smull tmp_h tmp_l lr r3;
uadds carry r12 tmp_l r12;
sadc r11 tmp_h r11 carry;
assert eqmod r12 0 (2**32) && true;
assume eq r12 0 && true;
(* add	r4, r6                                      #! PC = 0x8005b30 *)
add r4 r4 r6;
(* add	r5, r7                                      #! PC = 0x8005b32 *)
add r5 r5 r7;
(* add	r8, r10                                     #! PC = 0x8005b34 *)
add r8 r8 r10;
(* add	r9, r11                                     #! PC = 0x8005b36 *)
add r9 r9 r11;
(* sub.w	r6, r4, r6, lsl #1                        #! PC = 0x8005b38 *)
shl tmp r6 1;
sub r6 r4 tmp;
(* sub.w	r7, r5, r7, lsl #1                        #! PC = 0x8005b3c *)
shl tmp r7 1;
sub r7 r5 tmp;
(* sub.w	r10, r8, r10, lsl #1                      #! PC = 0x8005b40 *)
shl tmp r10 1;
sub r10 r8 tmp;
(* sub.w	r11, r9, r11, lsl #1                      #! PC = 0x8005b44 *)
shl tmp r11 1;
sub r11 r9 tmp;
(* vmov	r1, s7                                     #! PC = 0x8005b48 *)
mov r1 s7;
(* smull	r12, r8, r8, r1                           #! PC = 0x8005b4c *)
smull r8 r12 r8 r1;
(* mul.w	lr, r12, r2                               #! PC = 0x8005b50 *)
cast r12_s@sint32 r12;
mull discard lr r12_s r2;
(* smlal	r12, r8, lr, r3                           #! PC = 0x8005b54 *)
cast lr@sint32 lr;
smull tmp_h tmp_l lr r3;
uadds carry r12 tmp_l r12;
sadc r8 tmp_h r8 carry;
assert eqmod r12 0 (2**32) && true;
assume eq r12 0 && true;
(* vmov	r1, s8                                     #! PC = 0x8005b58 *)
mov r1 s8;
(* smull	r12, r9, r9, r1                           #! PC = 0x8005b5c *)
smull r9 r12 r9 r1;
(* mul.w	lr, r12, r2                               #! PC = 0x8005b60 *)
cast r12_s@sint32 r12;
mull discard lr r12_s r2;
(* smlal	r12, r9, lr, r3                           #! PC = 0x8005b64 *)
cast lr@sint32 lr;
smull tmp_h tmp_l lr r3;
uadds carry r12 tmp_l r12;
sadc r9 tmp_h r9 carry;
assert eqmod r12 0 (2**32) && true;
assume eq r12 0 && true;
(* vmov	r1, s9                                     #! PC = 0x8005b68 *)
mov r1 s9;
(* smull	r12, r10, r10, r1                         #! PC = 0x8005b6c *)
smull r10 r12 r10 r1;
(* mul.w	lr, r12, r2                               #! PC = 0x8005b70 *)
cast r12_s@sint32 r12;
mull discard lr r12_s r2;
(* smlal	r12, r10, lr, r3                          #! PC = 0x8005b74 *)
cast lr@sint32 lr;
smull tmp_h tmp_l lr r3;
uadds carry r12 tmp_l r12;
sadc r10 tmp_h r10 carry;
assert eqmod r12 0 (2**32) && true;
assume eq r12 0 && true;
(* vmov	r1, s10                                    #! PC = 0x8005b78 *)
mov r1 s10;
(* smull	r12, r11, r11, r1                         #! PC = 0x8005b7c *)
smull r11 r12 r11 r1;
(* mul.w	lr, r12, r2                               #! PC = 0x8005b80 *)
cast r12_s@sint32 r12;
mull discard lr r12_s r2;
(* smlal	r12, r11, lr, r3                          #! PC = 0x8005b84 *)
cast lr@sint32 lr;
smull tmp_h tmp_l lr r3;
uadds carry r12 tmp_l r12;
sadc r11 tmp_h r11 carry;
assert eqmod r12 0 (2**32) && true;
assume eq r12 0 && true;
(* add	r4, r8                                      #! PC = 0x8005b88 *)
add r4 r4 r8;
(* add	r5, r9                                      #! PC = 0x8005b8a *)
add r5 r5 r9;
(* add	r6, r10                                     #! PC = 0x8005b8c *)
add r6 r6 r10;
(* add	r7, r11                                     #! PC = 0x8005b8e *)
add r7 r7 r11;
(* sub.w	r8, r4, r8, lsl #1                        #! PC = 0x8005b90 *)
shl tmp r8 1;
sub r8 r4 tmp;
(* sub.w	r9, r5, r9, lsl #1                        #! PC = 0x8005b94 *)
shl tmp r9 1;
sub r9 r5 tmp;
(* sub.w	r10, r6, r10, lsl #1                      #! PC = 0x8005b98 *)
shl tmp r10 1;
sub r10 r6 tmp;
(* sub.w	r11, r7, r11, lsl #1                      #! PC = 0x8005b9c *)
shl tmp r11 1;
sub r11 r7 tmp;
(* vmov	r1, s11                                    #! PC = 0x8005ba0 *)
mov r1 s11;
(* smull	r12, r4, r4, r1                           #! PC = 0x8005ba4 *)
smull r4 r12 r4 r1;
(* mul.w	lr, r12, r2                               #! PC = 0x8005ba8 *)
cast r12_s@sint32 r12;
mull discard lr r12_s r2;
(* smlal	r12, r4, lr, r3                           #! PC = 0x8005bac *)
cast lr@sint32 lr;
smull tmp_h tmp_l lr r3;
uadds carry r12 tmp_l r12;
sadc r4 tmp_h r4 carry;
assert eqmod r12 0 (2**32) && true;
assume eq r12 0 && true;
(* vmov	r1, s12                                    #! PC = 0x8005bb0 *)
mov r1 s12;
(* smull	r12, r5, r5, r1                           #! PC = 0x8005bb4 *)
smull r5 r12 r5 r1;
(* mul.w	lr, r12, r2                               #! PC = 0x8005bb8 *)
cast r12_s@sint32 r12;
mull discard lr r12_s r2;
(* smlal	r12, r5, lr, r3                           #! PC = 0x8005bbc *)
cast lr@sint32 lr;
smull tmp_h tmp_l lr r3;
uadds carry r12 tmp_l r12;
sadc r5 tmp_h r5 carry;
assert eqmod r12 0 (2**32) && true;
assume eq r12 0 && true;
(* vmov	r1, s13                                    #! PC = 0x8005bc0 *)
mov r1 s13;
(* smull	r12, r6, r6, r1                           #! PC = 0x8005bc4 *)
smull r6 r12 r6 r1;
(* mul.w	lr, r12, r2                               #! PC = 0x8005bc8 *)
cast r12_s@sint32 r12;
mull discard lr r12_s r2;
(* smlal	r12, r6, lr, r3                           #! PC = 0x8005bcc *)
cast lr@sint32 lr;
smull tmp_h tmp_l lr r3;
uadds carry r12 tmp_l r12;
sadc r6 tmp_h r6 carry;
assert eqmod r12 0 (2**32) && true;
assume eq r12 0 && true;
(* vmov	r1, s14                                    #! PC = 0x8005bd0 *)
mov r1 s14;
(* smull	r12, r7, r7, r1                           #! PC = 0x8005bd4 *)
smull r7 r12 r7 r1;
(* mul.w	lr, r12, r2                               #! PC = 0x8005bd8 *)
cast r12_s@sint32 r12;
mull discard lr r12_s r2;
(* smlal	r12, r7, lr, r3                           #! PC = 0x8005bdc *)
cast lr@sint32 lr;
smull tmp_h tmp_l lr r3;
uadds carry r12 tmp_l r12;
sadc r7 tmp_h r7 carry;
assert eqmod r12 0 (2**32) && true;
assume eq r12 0 && true;
(* vmov	r1, s15                                    #! PC = 0x8005be0 *)
mov r1 s15;
(* smull	r12, r8, r8, r1                           #! PC = 0x8005be4 *)
smull r8 r12 r8 r1;
(* mul.w	lr, r12, r2                               #! PC = 0x8005be8 *)
cast r12_s@sint32 r12;
mull discard lr r12_s r2;
(* smlal	r12, r8, lr, r3                           #! PC = 0x8005bec *)
cast lr@sint32 lr;
smull tmp_h tmp_l lr r3;
uadds carry r12 tmp_l r12;
sadc r8 tmp_h r8 carry;
assert eqmod r12 0 (2**32) && true;
assume eq r12 0 && true;
(* vmov	r1, s16                                    #! PC = 0x8005bf0 *)
mov r1 s16;
(* smull	r12, r9, r9, r1                           #! PC = 0x8005bf4 *)
smull r9 r12 r9 r1;
(* mul.w	lr, r12, r2                               #! PC = 0x8005bf8 *)
cast r12_s@sint32 r12;
mull discard lr r12_s r2;
(* smlal	r12, r9, lr, r3                           #! PC = 0x8005bfc *)
cast lr@sint32 lr;
smull tmp_h tmp_l lr r3;
uadds carry r12 tmp_l r12;
sadc r9 tmp_h r9 carry;
assert eqmod r12 0 (2**32) && true;
assume eq r12 0 && true;
(* vmov	r1, s17                                    #! PC = 0x8005c00 *)
mov r1 s17;
(* smull	r12, r10, r10, r1                         #! PC = 0x8005c04 *)
smull r10 r12 r10 r1;
(* mul.w	lr, r12, r2                               #! PC = 0x8005c08 *)
cast r12_s@sint32 r12;
mull discard lr r12_s r2;
(* smlal	r12, r10, lr, r3                          #! PC = 0x8005c0c *)
cast lr@sint32 lr;
smull tmp_h tmp_l lr r3;
uadds carry r12 tmp_l r12;
sadc r10 tmp_h r10 carry;
assert eqmod r12 0 (2**32) && true;
assume eq r12 0 && true;
(* vmov	r1, s18                                    #! PC = 0x8005c10 *)
mov r1 s18;
(* smull	r12, r11, r11, r1                         #! PC = 0x8005c14 *)
smull r11 r12 r11 r1;
(* mul.w	lr, r12, r2                               #! PC = 0x8005c18 *)
cast r12_s@sint32 r12;
mull discard lr r12_s r2;
(* smlal	r12, r11, lr, r3                          #! PC = 0x8005c1c *)
cast lr@sint32 lr;
smull tmp_h tmp_l lr r3;
uadds carry r12 tmp_l r12;
sadc r11 tmp_h r11 carry;
assert eqmod r12 0 (2**32) && true;
assume eq r12 0 && true;
(* mov.w	r1, r3, lsr #1                            #! PC = 0x8005c20 *)
split r1 discard r3 1;
(* cmp	r4, r1                                      #! PC = 0x8005c24 *)
sub cmp r4 r1;
split sign discard cmp 31;
cast sign@bit sign;
cmov tmp sign 0@sint32 r3;
sub r4 r4 tmp;
(* cmn	r4, r1                                      #! PC = 0x8005c2a *)
add cmn r4 r1;
split sign discard cmn 31;
cast sign@bit sign;
cmov tmp sign r3 0@sint32;
add r4 r4 tmp;
(* cmp	r5, r1                                      #! PC = 0x8005c30 *)
sub cmp r5 r1;
split sign discard cmp 31;
cast sign@bit sign;
cmov tmp sign 0@sint32 r3;
sub r5 r5 tmp;
(* cmn	r5, r1                                      #! PC = 0x8005c36 *)
add cmn r5 r1;
split sign discard cmn 31;
cast sign@bit sign;
cmov tmp sign r3 0@sint32;
add r5 r5 tmp;
(* cmp	r6, r1                                      #! PC = 0x8005c3c *)
sub cmp r6 r1;
split sign discard cmp 31;
cast sign@bit sign;
cmov tmp sign 0@sint32 r3;
sub r6 r6 tmp;
(* cmn	r6, r1                                      #! PC = 0x8005c42 *)
add cmn r6 r1;
split sign discard cmn 31;
cast sign@bit sign;
cmov tmp sign r3 0@sint32;
add r6 r6 tmp;
(* cmp	r7, r1                                      #! PC = 0x8005c48 *)
sub cmp r7 r1;
split sign discard cmp 31;
cast sign@bit sign;
cmov tmp sign 0@sint32 r3;
sub r7 r7 tmp;
(* cmn	r7, r1                                      #! PC = 0x8005c4e *)
add cmn r7 r1;
split sign discard cmn 31;
cast sign@bit sign;
cmov tmp sign r3 0@sint32;
add r7 r7 tmp;
(* cmp	r8, r1                                      #! PC = 0x8005c54 *)
sub cmp r8 r1;
split sign discard cmp 31;
cast sign@bit sign;
cmov tmp sign 0@sint32 r3;
sub r8 r8 tmp;
(* cmn.w	r8, r1                                    #! PC = 0x8005c5c *)
add cmn r8 r1;
split sign discard cmn 31;
cast sign@bit sign;
cmov tmp sign r3 0@sint32;
add r8 r8 tmp;
(* cmp	r9, r1                                      #! PC = 0x8005c64 *)
sub cmp r9 r1;
split sign discard cmp 31;
cast sign@bit sign;
cmov tmp sign 0@sint32 r3;
sub r9 r9 tmp;
(* cmn.w	r9, r1                                    #! PC = 0x8005c6c *)
add cmn r9 r1;
split sign discard cmn 31;
cast sign@bit sign;
cmov tmp sign r3 0@sint32;
add r9 r9 tmp;
(* cmp	r10, r1                                     #! PC = 0x8005c74 *)
sub cmp r10 r1;
split sign discard cmp 31;
cast sign@bit sign;
cmov tmp sign 0@sint32 r3;
sub r10 r10 tmp;
(* cmn.w	r10, r1                                   #! PC = 0x8005c7c *)
add cmn r10 r1;
split sign discard cmn 31;
cast sign@bit sign;
cmov tmp sign r3 0@sint32;
add r10 r10 tmp;
(* cmp	r11, r1                                     #! PC = 0x8005c84 *)
sub cmp r11 r1;
split sign discard cmp 31;
cast sign@bit sign;
cmov tmp sign 0@sint32 r3;
sub r11 r11 tmp;
(* cmn.w	r11, r1                                   #! PC = 0x8005c8c *)
add cmn r11 r1;
split sign discard cmn 31;
cast sign@bit sign;
cmov tmp sign r3 0@sint32;
add r11 r11 tmp;
(* vmov	lr, s0                                     #! PC = 0x8005c94 *)
mov lr s0;
(* strh.w	r8, [lr, #256]	; 0x100                   #! EA = L0x20019952; PC = 0x8005c98 *)
ghost L0x20019952_f@sint32 : L0x20019952_f = r8 && L0x20019952_f = r8;
split discard L0x20019952_u r8 16;
cast L0x20019952@sint16 L0x20019952_u;
(* strh.w	r9, [lr, #320]	; 0x140                   #! EA = L0x20019992; PC = 0x8005c9c *)
ghost L0x20019992_f@sint32 : L0x20019992_f = r9 && L0x20019992_f = r9;
split discard L0x20019992_u r9 16;
cast L0x20019992@sint16 L0x20019992_u;
(* strh.w	r10, [lr, #384]	; 0x180                  #! EA = L0x200199d2; PC = 0x8005ca0 *)
ghost L0x200199d2_f@sint32 : L0x200199d2_f = r10 && L0x200199d2_f = r10;
split discard L0x200199d2_u r10 16;
cast L0x200199d2@sint16 L0x200199d2_u;
(* strh.w	r11, [lr, #448]	; 0x1c0                  #! EA = L0x20019a12; PC = 0x8005ca4 *)
ghost L0x20019a12_f@sint32 : L0x20019a12_f = r11 && L0x20019a12_f = r11;
split discard L0x20019a12_u r11 16;
cast L0x20019a12@sint16 L0x20019a12_u;
(* strh.w	r5, [lr, #64]	; 0x40                     #! EA = L0x20019892; PC = 0x8005ca8 *)
ghost L0x20019892_f@sint32 : L0x20019892_f = r5 && L0x20019892_f = r5;
split discard L0x20019892_u r5 16;
cast L0x20019892@sint16 L0x20019892_u;
(* strh.w	r6, [lr, #128]	; 0x80                    #! EA = L0x200198d2; PC = 0x8005cac *)
ghost L0x200198d2_f@sint32 : L0x200198d2_f = r6 && L0x200198d2_f = r6;
split discard L0x200198d2_u r6 16;
cast L0x200198d2@sint16 L0x200198d2_u;
(* strh.w	r7, [lr, #192]	; 0xc0                    #! EA = L0x20019912; PC = 0x8005cb0 *)
ghost L0x20019912_f@sint32 : L0x20019912_f = r7 && L0x20019912_f = r7;
split discard L0x20019912_u r7 16;
cast L0x20019912@sint16 L0x20019912_u;
(* strh.w	r4, [lr], #2                             #! EA = L0x20019852; PC = 0x8005cb4 *)
ghost L0x20019852_f@sint32 : L0x20019852_f = r4 && L0x20019852_f = r4;
split discard L0x20019852_u r4 16;
cast L0x20019852@sint16 L0x20019852_u;
(* vmov	s0, lr                                     #! PC = 0x8005cb8 *)
mov s0 lr;
(* vmov	lr, s3                                     #! PC = 0x8005cbc *)
mov lr s3;
(* ldr.w	r8, [r0, #512]	; 0x200                    #! EA = L0x2001a460; Value = 0x022eff7e; PC = 0x800585c *)
mov r8 L0x2001a460;
(* ldr.w	r9, [r0, #640]	; 0x280                    #! EA = L0x2001a4e0; Value = 0xff483f2a; PC = 0x8005860 *)
mov r9 L0x2001a4e0;
(* ldr.w	r10, [r0, #768]	; 0x300                   #! EA = L0x2001a560; Value = 0x020da5c5; PC = 0x8005864 *)
mov r10 L0x2001a560;
(* ldr.w	r11, [r0, #896]	; 0x380                   #! EA = L0x2001a5e0; Value = 0xfeea7651; PC = 0x8005868 *)
mov r11 L0x2001a5e0;
(* ldr.w	r5, [r0, #128]	; 0x80                     #! EA = L0x2001a2e0; Value = 0x01ecf377; PC = 0x800586c *)
mov r5 L0x2001a2e0;
(* ldr.w	r6, [r0, #256]	; 0x100                    #! EA = L0x2001a360; Value = 0xffddd61c; PC = 0x8005870 *)
mov r6 L0x2001a360;
(* ldr.w	r7, [r0, #384]	; 0x180                    #! EA = L0x2001a3e0; Value = 0xfda22ce2; PC = 0x8005874 *)
mov r7 L0x2001a3e0;
(* ldr.w	r4, [r0], #4                              #! EA = L0x2001a260; Value = 0x0112e6e3; PC = 0x8005878 *)
mov r4 L0x2001a260;
(* vmov	r1, s4                                     #! PC = 0x800587c *)
mov r1 s4;
(* smull	r12, r5, r5, r1                           #! PC = 0x8005880 *)
smull r5 r12 r5 r1;
(* mul.w	lr, r12, r2                               #! PC = 0x8005884 *)
cast r12_s@sint32 r12;
mull discard lr r12_s r2;
(* smlal	r12, r5, lr, r3                           #! PC = 0x8005888 *)
cast lr@sint32 lr;
smull tmp_h tmp_l lr r3;
uadds carry r12 tmp_l r12;
sadc r5 tmp_h r5 carry;
assert eqmod r12 0 (2**32) && true;
assume eq r12 0 && true;
(* smull	r12, r7, r7, r1                           #! PC = 0x800588c *)
smull r7 r12 r7 r1;
(* mul.w	lr, r12, r2                               #! PC = 0x8005890 *)
cast r12_s@sint32 r12;
mull discard lr r12_s r2;
(* smlal	r12, r7, lr, r3                           #! PC = 0x8005894 *)
cast lr@sint32 lr;
smull tmp_h tmp_l lr r3;
uadds carry r12 tmp_l r12;
sadc r7 tmp_h r7 carry;
assert eqmod r12 0 (2**32) && true;
assume eq r12 0 && true;
(* smull	r12, r9, r9, r1                           #! PC = 0x8005898 *)
smull r9 r12 r9 r1;
(* mul.w	lr, r12, r2                               #! PC = 0x800589c *)
cast r12_s@sint32 r12;
mull discard lr r12_s r2;
(* smlal	r12, r9, lr, r3                           #! PC = 0x80058a0 *)
cast lr@sint32 lr;
smull tmp_h tmp_l lr r3;
uadds carry r12 tmp_l r12;
sadc r9 tmp_h r9 carry;
assert eqmod r12 0 (2**32) && true;
assume eq r12 0 && true;
(* smull	r12, r11, r11, r1                         #! PC = 0x80058a4 *)
smull r11 r12 r11 r1;
(* mul.w	lr, r12, r2                               #! PC = 0x80058a8 *)
cast r12_s@sint32 r12;
mull discard lr r12_s r2;
(* smlal	r12, r11, lr, r3                          #! PC = 0x80058ac *)
cast lr@sint32 lr;
smull tmp_h tmp_l lr r3;
uadds carry r12 tmp_l r12;
sadc r11 tmp_h r11 carry;
assert eqmod r12 0 (2**32) && true;
assume eq r12 0 && true;
(* add	r4, r5                                      #! PC = 0x80058b0 *)
add r4 r4 r5;
(* add	r6, r7                                      #! PC = 0x80058b2 *)
add r6 r6 r7;
(* add	r8, r9                                      #! PC = 0x80058b4 *)
add r8 r8 r9;
(* add	r10, r11                                    #! PC = 0x80058b6 *)
add r10 r10 r11;
(* sub.w	r5, r4, r5, lsl #1                        #! PC = 0x80058b8 *)
shl tmp r5 1;
sub r5 r4 tmp;
(* sub.w	r7, r6, r7, lsl #1                        #! PC = 0x80058bc *)
shl tmp r7 1;
sub r7 r6 tmp;
(* sub.w	r9, r8, r9, lsl #1                        #! PC = 0x80058c0 *)
shl tmp r9 1;
sub r9 r8 tmp;
(* sub.w	r11, r10, r11, lsl #1                     #! PC = 0x80058c4 *)
shl tmp r11 1;
sub r11 r10 tmp;
(* vmov	r1, s5                                     #! PC = 0x80058c8 *)
mov r1 s5;
(* smull	r12, r6, r6, r1                           #! PC = 0x80058cc *)
smull r6 r12 r6 r1;
(* mul.w	lr, r12, r2                               #! PC = 0x80058d0 *)
cast r12_s@sint32 r12;
mull discard lr r12_s r2;
(* smlal	r12, r6, lr, r3                           #! PC = 0x80058d4 *)
cast lr@sint32 lr;
smull tmp_h tmp_l lr r3;
uadds carry r12 tmp_l r12;
sadc r6 tmp_h r6 carry;
assert eqmod r12 0 (2**32) && true;
assume eq r12 0 && true;
(* smull	r12, r10, r10, r1                         #! PC = 0x80058d8 *)
smull r10 r12 r10 r1;
(* mul.w	lr, r12, r2                               #! PC = 0x80058dc *)
cast r12_s@sint32 r12;
mull discard lr r12_s r2;
(* smlal	r12, r10, lr, r3                          #! PC = 0x80058e0 *)
cast lr@sint32 lr;
smull tmp_h tmp_l lr r3;
uadds carry r12 tmp_l r12;
sadc r10 tmp_h r10 carry;
assert eqmod r12 0 (2**32) && true;
assume eq r12 0 && true;
(* vmov	r1, s6                                     #! PC = 0x80058e4 *)
mov r1 s6;
(* smull	r12, r7, r7, r1                           #! PC = 0x80058e8 *)
smull r7 r12 r7 r1;
(* mul.w	lr, r12, r2                               #! PC = 0x80058ec *)
cast r12_s@sint32 r12;
mull discard lr r12_s r2;
(* smlal	r12, r7, lr, r3                           #! PC = 0x80058f0 *)
cast lr@sint32 lr;
smull tmp_h tmp_l lr r3;
uadds carry r12 tmp_l r12;
sadc r7 tmp_h r7 carry;
assert eqmod r12 0 (2**32) && true;
assume eq r12 0 && true;
(* smull	r12, r11, r11, r1                         #! PC = 0x80058f4 *)
smull r11 r12 r11 r1;
(* mul.w	lr, r12, r2                               #! PC = 0x80058f8 *)
cast r12_s@sint32 r12;
mull discard lr r12_s r2;
(* smlal	r12, r11, lr, r3                          #! PC = 0x80058fc *)
cast lr@sint32 lr;
smull tmp_h tmp_l lr r3;
uadds carry r12 tmp_l r12;
sadc r11 tmp_h r11 carry;
assert eqmod r12 0 (2**32) && true;
assume eq r12 0 && true;
(* add	r4, r6                                      #! PC = 0x8005900 *)
add r4 r4 r6;
(* add	r5, r7                                      #! PC = 0x8005902 *)
add r5 r5 r7;
(* add	r8, r10                                     #! PC = 0x8005904 *)
add r8 r8 r10;
(* add	r9, r11                                     #! PC = 0x8005906 *)
add r9 r9 r11;
(* sub.w	r6, r4, r6, lsl #1                        #! PC = 0x8005908 *)
shl tmp r6 1;
sub r6 r4 tmp;
(* sub.w	r7, r5, r7, lsl #1                        #! PC = 0x800590c *)
shl tmp r7 1;
sub r7 r5 tmp;
(* sub.w	r10, r8, r10, lsl #1                      #! PC = 0x8005910 *)
shl tmp r10 1;
sub r10 r8 tmp;
(* sub.w	r11, r9, r11, lsl #1                      #! PC = 0x8005914 *)
shl tmp r11 1;
sub r11 r9 tmp;
(* vmov	r1, s7                                     #! PC = 0x8005918 *)
mov r1 s7;
(* smull	r12, r8, r8, r1                           #! PC = 0x800591c *)
smull r8 r12 r8 r1;
(* mul.w	lr, r12, r2                               #! PC = 0x8005920 *)
cast r12_s@sint32 r12;
mull discard lr r12_s r2;
(* smlal	r12, r8, lr, r3                           #! PC = 0x8005924 *)
cast lr@sint32 lr;
smull tmp_h tmp_l lr r3;
uadds carry r12 tmp_l r12;
sadc r8 tmp_h r8 carry;
assert eqmod r12 0 (2**32) && true;
assume eq r12 0 && true;
(* vmov	r1, s8                                     #! PC = 0x8005928 *)
mov r1 s8;
(* smull	r12, r9, r9, r1                           #! PC = 0x800592c *)
smull r9 r12 r9 r1;
(* mul.w	lr, r12, r2                               #! PC = 0x8005930 *)
cast r12_s@sint32 r12;
mull discard lr r12_s r2;
(* smlal	r12, r9, lr, r3                           #! PC = 0x8005934 *)
cast lr@sint32 lr;
smull tmp_h tmp_l lr r3;
uadds carry r12 tmp_l r12;
sadc r9 tmp_h r9 carry;
assert eqmod r12 0 (2**32) && true;
assume eq r12 0 && true;
(* vmov	r1, s9                                     #! PC = 0x8005938 *)
mov r1 s9;
(* smull	r12, r10, r10, r1                         #! PC = 0x800593c *)
smull r10 r12 r10 r1;
(* mul.w	lr, r12, r2                               #! PC = 0x8005940 *)
cast r12_s@sint32 r12;
mull discard lr r12_s r2;
(* smlal	r12, r10, lr, r3                          #! PC = 0x8005944 *)
cast lr@sint32 lr;
smull tmp_h tmp_l lr r3;
uadds carry r12 tmp_l r12;
sadc r10 tmp_h r10 carry;
assert eqmod r12 0 (2**32) && true;
assume eq r12 0 && true;
(* vmov	r1, s10                                    #! PC = 0x8005948 *)
mov r1 s10;
(* smull	r12, r11, r11, r1                         #! PC = 0x800594c *)
smull r11 r12 r11 r1;
(* mul.w	lr, r12, r2                               #! PC = 0x8005950 *)
cast r12_s@sint32 r12;
mull discard lr r12_s r2;
(* smlal	r12, r11, lr, r3                          #! PC = 0x8005954 *)
cast lr@sint32 lr;
smull tmp_h tmp_l lr r3;
uadds carry r12 tmp_l r12;
sadc r11 tmp_h r11 carry;
assert eqmod r12 0 (2**32) && true;
assume eq r12 0 && true;
(* add	r4, r8                                      #! PC = 0x8005958 *)
add r4 r4 r8;
(* add	r5, r9                                      #! PC = 0x800595a *)
add r5 r5 r9;
(* add	r6, r10                                     #! PC = 0x800595c *)
add r6 r6 r10;
(* add	r7, r11                                     #! PC = 0x800595e *)
add r7 r7 r11;
(* sub.w	r8, r4, r8, lsl #1                        #! PC = 0x8005960 *)
shl tmp r8 1;
sub r8 r4 tmp;
(* sub.w	r9, r5, r9, lsl #1                        #! PC = 0x8005964 *)
shl tmp r9 1;
sub r9 r5 tmp;
(* sub.w	r10, r6, r10, lsl #1                      #! PC = 0x8005968 *)
shl tmp r10 1;
sub r10 r6 tmp;
(* sub.w	r11, r7, r11, lsl #1                      #! PC = 0x800596c *)
shl tmp r11 1;
sub r11 r7 tmp;
(* vmov	r1, s11                                    #! PC = 0x8005970 *)
mov r1 s11;
(* smull	r12, r4, r4, r1                           #! PC = 0x8005974 *)
smull r4 r12 r4 r1;
(* mul.w	lr, r12, r2                               #! PC = 0x8005978 *)
cast r12_s@sint32 r12;
mull discard lr r12_s r2;
(* smlal	r12, r4, lr, r3                           #! PC = 0x800597c *)
cast lr@sint32 lr;
smull tmp_h tmp_l lr r3;
uadds carry r12 tmp_l r12;
sadc r4 tmp_h r4 carry;
assert eqmod r12 0 (2**32) && true;
assume eq r12 0 && true;
(* vmov	r1, s12                                    #! PC = 0x8005980 *)
mov r1 s12;
(* smull	r12, r5, r5, r1                           #! PC = 0x8005984 *)
smull r5 r12 r5 r1;
(* mul.w	lr, r12, r2                               #! PC = 0x8005988 *)
cast r12_s@sint32 r12;
mull discard lr r12_s r2;
(* smlal	r12, r5, lr, r3                           #! PC = 0x800598c *)
cast lr@sint32 lr;
smull tmp_h tmp_l lr r3;
uadds carry r12 tmp_l r12;
sadc r5 tmp_h r5 carry;
assert eqmod r12 0 (2**32) && true;
assume eq r12 0 && true;
(* vmov	r1, s13                                    #! PC = 0x8005990 *)
mov r1 s13;
(* smull	r12, r6, r6, r1                           #! PC = 0x8005994 *)
smull r6 r12 r6 r1;
(* mul.w	lr, r12, r2                               #! PC = 0x8005998 *)
cast r12_s@sint32 r12;
mull discard lr r12_s r2;
(* smlal	r12, r6, lr, r3                           #! PC = 0x800599c *)
cast lr@sint32 lr;
smull tmp_h tmp_l lr r3;
uadds carry r12 tmp_l r12;
sadc r6 tmp_h r6 carry;
assert eqmod r12 0 (2**32) && true;
assume eq r12 0 && true;
(* vmov	r1, s14                                    #! PC = 0x80059a0 *)
mov r1 s14;
(* smull	r12, r7, r7, r1                           #! PC = 0x80059a4 *)
smull r7 r12 r7 r1;
(* mul.w	lr, r12, r2                               #! PC = 0x80059a8 *)
cast r12_s@sint32 r12;
mull discard lr r12_s r2;
(* smlal	r12, r7, lr, r3                           #! PC = 0x80059ac *)
cast lr@sint32 lr;
smull tmp_h tmp_l lr r3;
uadds carry r12 tmp_l r12;
sadc r7 tmp_h r7 carry;
assert eqmod r12 0 (2**32) && true;
assume eq r12 0 && true;
(* vmov	r1, s15                                    #! PC = 0x80059b0 *)
mov r1 s15;
(* smull	r12, r8, r8, r1                           #! PC = 0x80059b4 *)
smull r8 r12 r8 r1;
(* mul.w	lr, r12, r2                               #! PC = 0x80059b8 *)
cast r12_s@sint32 r12;
mull discard lr r12_s r2;
(* smlal	r12, r8, lr, r3                           #! PC = 0x80059bc *)
cast lr@sint32 lr;
smull tmp_h tmp_l lr r3;
uadds carry r12 tmp_l r12;
sadc r8 tmp_h r8 carry;
assert eqmod r12 0 (2**32) && true;
assume eq r12 0 && true;
(* vmov	r1, s16                                    #! PC = 0x80059c0 *)
mov r1 s16;
(* smull	r12, r9, r9, r1                           #! PC = 0x80059c4 *)
smull r9 r12 r9 r1;
(* mul.w	lr, r12, r2                               #! PC = 0x80059c8 *)
cast r12_s@sint32 r12;
mull discard lr r12_s r2;
(* smlal	r12, r9, lr, r3                           #! PC = 0x80059cc *)
cast lr@sint32 lr;
smull tmp_h tmp_l lr r3;
uadds carry r12 tmp_l r12;
sadc r9 tmp_h r9 carry;
assert eqmod r12 0 (2**32) && true;
assume eq r12 0 && true;
(* vmov	r1, s17                                    #! PC = 0x80059d0 *)
mov r1 s17;
(* smull	r12, r10, r10, r1                         #! PC = 0x80059d4 *)
smull r10 r12 r10 r1;
(* mul.w	lr, r12, r2                               #! PC = 0x80059d8 *)
cast r12_s@sint32 r12;
mull discard lr r12_s r2;
(* smlal	r12, r10, lr, r3                          #! PC = 0x80059dc *)
cast lr@sint32 lr;
smull tmp_h tmp_l lr r3;
uadds carry r12 tmp_l r12;
sadc r10 tmp_h r10 carry;
assert eqmod r12 0 (2**32) && true;
assume eq r12 0 && true;
(* vmov	r1, s18                                    #! PC = 0x80059e0 *)
mov r1 s18;
(* smull	r12, r11, r11, r1                         #! PC = 0x80059e4 *)
smull r11 r12 r11 r1;
(* mul.w	lr, r12, r2                               #! PC = 0x80059e8 *)
cast r12_s@sint32 r12;
mull discard lr r12_s r2;
(* smlal	r12, r11, lr, r3                          #! PC = 0x80059ec *)
cast lr@sint32 lr;
smull tmp_h tmp_l lr r3;
uadds carry r12 tmp_l r12;
sadc r11 tmp_h r11 carry;
assert eqmod r12 0 (2**32) && true;
assume eq r12 0 && true;
(* mov.w	r1, r3, lsr #1                            #! PC = 0x80059f0 *)
split r1 discard r3 1;
(* cmp	r4, r1                                      #! PC = 0x80059f4 *)
sub cmp r4 r1;
split sign discard cmp 31;
cast sign@bit sign;
cmov tmp sign 0@sint32 r3;
sub r4 r4 tmp;
(* cmn	r4, r1                                      #! PC = 0x80059fa *)
add cmn r4 r1;
split sign discard cmn 31;
cast sign@bit sign;
cmov tmp sign r3 0@sint32;
add r4 r4 tmp;
(* cmp	r5, r1                                      #! PC = 0x8005a00 *)
sub cmp r5 r1;
split sign discard cmp 31;
cast sign@bit sign;
cmov tmp sign 0@sint32 r3;
sub r5 r5 tmp;
(* cmn	r5, r1                                      #! PC = 0x8005a06 *)
add cmn r5 r1;
split sign discard cmn 31;
cast sign@bit sign;
cmov tmp sign r3 0@sint32;
add r5 r5 tmp;
(* cmp	r6, r1                                      #! PC = 0x8005a0c *)
sub cmp r6 r1;
split sign discard cmp 31;
cast sign@bit sign;
cmov tmp sign 0@sint32 r3;
sub r6 r6 tmp;
(* cmn	r6, r1                                      #! PC = 0x8005a12 *)
add cmn r6 r1;
split sign discard cmn 31;
cast sign@bit sign;
cmov tmp sign r3 0@sint32;
add r6 r6 tmp;
(* cmp	r7, r1                                      #! PC = 0x8005a18 *)
sub cmp r7 r1;
split sign discard cmp 31;
cast sign@bit sign;
cmov tmp sign 0@sint32 r3;
sub r7 r7 tmp;
(* cmn	r7, r1                                      #! PC = 0x8005a1e *)
add cmn r7 r1;
split sign discard cmn 31;
cast sign@bit sign;
cmov tmp sign r3 0@sint32;
add r7 r7 tmp;
(* cmp	r8, r1                                      #! PC = 0x8005a24 *)
sub cmp r8 r1;
split sign discard cmp 31;
cast sign@bit sign;
cmov tmp sign 0@sint32 r3;
sub r8 r8 tmp;
(* cmn.w	r8, r1                                    #! PC = 0x8005a2c *)
add cmn r8 r1;
split sign discard cmn 31;
cast sign@bit sign;
cmov tmp sign r3 0@sint32;
add r8 r8 tmp;
(* cmp	r9, r1                                      #! PC = 0x8005a34 *)
sub cmp r9 r1;
split sign discard cmp 31;
cast sign@bit sign;
cmov tmp sign 0@sint32 r3;
sub r9 r9 tmp;
(* cmn.w	r9, r1                                    #! PC = 0x8005a3c *)
add cmn r9 r1;
split sign discard cmn 31;
cast sign@bit sign;
cmov tmp sign r3 0@sint32;
add r9 r9 tmp;
(* cmp	r10, r1                                     #! PC = 0x8005a44 *)
sub cmp r10 r1;
split sign discard cmp 31;
cast sign@bit sign;
cmov tmp sign 0@sint32 r3;
sub r10 r10 tmp;
(* cmn.w	r10, r1                                   #! PC = 0x8005a4c *)
add cmn r10 r1;
split sign discard cmn 31;
cast sign@bit sign;
cmov tmp sign r3 0@sint32;
add r10 r10 tmp;
(* cmp	r11, r1                                     #! PC = 0x8005a54 *)
sub cmp r11 r1;
split sign discard cmp 31;
cast sign@bit sign;
cmov tmp sign 0@sint32 r3;
sub r11 r11 tmp;
(* cmn.w	r11, r1                                   #! PC = 0x8005a5c *)
add cmn r11 r1;
split sign discard cmn 31;
cast sign@bit sign;
cmov tmp sign r3 0@sint32;
add r11 r11 tmp;
(* vmov	lr, s0                                     #! PC = 0x8005a64 *)
mov lr s0;
(* strh.w	r8, [lr, #256]	; 0x100                   #! EA = L0x20019954; PC = 0x8005a68 *)
ghost L0x20019954_f@sint32 : L0x20019954_f = r8 && L0x20019954_f = r8;
split discard L0x20019954_u r8 16;
cast L0x20019954@sint16 L0x20019954_u;
(* strh.w	r9, [lr, #320]	; 0x140                   #! EA = L0x20019994; PC = 0x8005a6c *)
ghost L0x20019994_f@sint32 : L0x20019994_f = r9 && L0x20019994_f = r9;
split discard L0x20019994_u r9 16;
cast L0x20019994@sint16 L0x20019994_u;
(* strh.w	r10, [lr, #384]	; 0x180                  #! EA = L0x200199d4; PC = 0x8005a70 *)
ghost L0x200199d4_f@sint32 : L0x200199d4_f = r10 && L0x200199d4_f = r10;
split discard L0x200199d4_u r10 16;
cast L0x200199d4@sint16 L0x200199d4_u;
(* strh.w	r11, [lr, #448]	; 0x1c0                  #! EA = L0x20019a14; PC = 0x8005a74 *)
ghost L0x20019a14_f@sint32 : L0x20019a14_f = r11 && L0x20019a14_f = r11;
split discard L0x20019a14_u r11 16;
cast L0x20019a14@sint16 L0x20019a14_u;
(* strh.w	r5, [lr, #64]	; 0x40                     #! EA = L0x20019894; PC = 0x8005a78 *)
ghost L0x20019894_f@sint32 : L0x20019894_f = r5 && L0x20019894_f = r5;
split discard L0x20019894_u r5 16;
cast L0x20019894@sint16 L0x20019894_u;
(* strh.w	r6, [lr, #128]	; 0x80                    #! EA = L0x200198d4; PC = 0x8005a7c *)
ghost L0x200198d4_f@sint32 : L0x200198d4_f = r6 && L0x200198d4_f = r6;
split discard L0x200198d4_u r6 16;
cast L0x200198d4@sint16 L0x200198d4_u;
(* strh.w	r7, [lr, #192]	; 0xc0                    #! EA = L0x20019914; PC = 0x8005a80 *)
ghost L0x20019914_f@sint32 : L0x20019914_f = r7 && L0x20019914_f = r7;
split discard L0x20019914_u r7 16;
cast L0x20019914@sint16 L0x20019914_u;
(* strh.w	r4, [lr], #2                             #! EA = L0x20019854; PC = 0x8005a84 *)
ghost L0x20019854_f@sint32 : L0x20019854_f = r4 && L0x20019854_f = r4;
split discard L0x20019854_u r4 16;
cast L0x20019854@sint16 L0x20019854_u;
(* vmov	s0, lr                                     #! PC = 0x8005a88 *)
mov s0 lr;
(* ldr.w	r8, [r0, #512]	; 0x200                    #! EA = L0x2001a464; Value = 0xfdee560a; PC = 0x8005a8c *)
mov r8 L0x2001a464;
(* ldr.w	r9, [r0, #640]	; 0x280                    #! EA = L0x2001a4e4; Value = 0x0039b9ec; PC = 0x8005a90 *)
mov r9 L0x2001a4e4;
(* ldr.w	r10, [r0, #768]	; 0x300                   #! EA = L0x2001a564; Value = 0xff603730; PC = 0x8005a94 *)
mov r10 L0x2001a564;
(* ldr.w	r11, [r0, #896]	; 0x380                   #! EA = L0x2001a5e4; Value = 0xfec9f248; PC = 0x8005a98 *)
mov r11 L0x2001a5e4;
(* ldr.w	r5, [r0, #128]	; 0x80                     #! EA = L0x2001a2e4; Value = 0xffdff6a3; PC = 0x8005a9c *)
mov r5 L0x2001a2e4;
(* ldr.w	r6, [r0, #256]	; 0x100                    #! EA = L0x2001a364; Value = 0x016d144b; PC = 0x8005aa0 *)
mov r6 L0x2001a364;
(* ldr.w	r7, [r0, #384]	; 0x180                    #! EA = L0x2001a3e4; Value = 0xffeb173b; PC = 0x8005aa4 *)
mov r7 L0x2001a3e4;
(* ldr.w	r4, [r0], #4                              #! EA = L0x2001a264; Value = 0x00829e78; PC = 0x8005aa8 *)
mov r4 L0x2001a264;
(* vmov	r1, s4                                     #! PC = 0x8005aac *)
mov r1 s4;
(* smull	r12, r5, r5, r1                           #! PC = 0x8005ab0 *)
smull r5 r12 r5 r1;
(* mul.w	lr, r12, r2                               #! PC = 0x8005ab4 *)
cast r12_s@sint32 r12;
mull discard lr r12_s r2;
(* smlal	r12, r5, lr, r3                           #! PC = 0x8005ab8 *)
cast lr@sint32 lr;
smull tmp_h tmp_l lr r3;
uadds carry r12 tmp_l r12;
sadc r5 tmp_h r5 carry;
assert eqmod r12 0 (2**32) && true;
assume eq r12 0 && true;
(* smull	r12, r7, r7, r1                           #! PC = 0x8005abc *)
smull r7 r12 r7 r1;
(* mul.w	lr, r12, r2                               #! PC = 0x8005ac0 *)
cast r12_s@sint32 r12;
mull discard lr r12_s r2;
(* smlal	r12, r7, lr, r3                           #! PC = 0x8005ac4 *)
cast lr@sint32 lr;
smull tmp_h tmp_l lr r3;
uadds carry r12 tmp_l r12;
sadc r7 tmp_h r7 carry;
assert eqmod r12 0 (2**32) && true;
assume eq r12 0 && true;
(* smull	r12, r9, r9, r1                           #! PC = 0x8005ac8 *)
smull r9 r12 r9 r1;
(* mul.w	lr, r12, r2                               #! PC = 0x8005acc *)
cast r12_s@sint32 r12;
mull discard lr r12_s r2;
(* smlal	r12, r9, lr, r3                           #! PC = 0x8005ad0 *)
cast lr@sint32 lr;
smull tmp_h tmp_l lr r3;
uadds carry r12 tmp_l r12;
sadc r9 tmp_h r9 carry;
assert eqmod r12 0 (2**32) && true;
assume eq r12 0 && true;
(* smull	r12, r11, r11, r1                         #! PC = 0x8005ad4 *)
smull r11 r12 r11 r1;
(* mul.w	lr, r12, r2                               #! PC = 0x8005ad8 *)
cast r12_s@sint32 r12;
mull discard lr r12_s r2;
(* smlal	r12, r11, lr, r3                          #! PC = 0x8005adc *)
cast lr@sint32 lr;
smull tmp_h tmp_l lr r3;
uadds carry r12 tmp_l r12;
sadc r11 tmp_h r11 carry;
assert eqmod r12 0 (2**32) && true;
assume eq r12 0 && true;
(* add	r4, r5                                      #! PC = 0x8005ae0 *)
add r4 r4 r5;
(* add	r6, r7                                      #! PC = 0x8005ae2 *)
add r6 r6 r7;
(* add	r8, r9                                      #! PC = 0x8005ae4 *)
add r8 r8 r9;
(* add	r10, r11                                    #! PC = 0x8005ae6 *)
add r10 r10 r11;
(* sub.w	r5, r4, r5, lsl #1                        #! PC = 0x8005ae8 *)
shl tmp r5 1;
sub r5 r4 tmp;
(* sub.w	r7, r6, r7, lsl #1                        #! PC = 0x8005aec *)
shl tmp r7 1;
sub r7 r6 tmp;
(* sub.w	r9, r8, r9, lsl #1                        #! PC = 0x8005af0 *)
shl tmp r9 1;
sub r9 r8 tmp;
(* sub.w	r11, r10, r11, lsl #1                     #! PC = 0x8005af4 *)
shl tmp r11 1;
sub r11 r10 tmp;
(* vmov	r1, s5                                     #! PC = 0x8005af8 *)
mov r1 s5;
(* smull	r12, r6, r6, r1                           #! PC = 0x8005afc *)
smull r6 r12 r6 r1;
(* mul.w	lr, r12, r2                               #! PC = 0x8005b00 *)
cast r12_s@sint32 r12;
mull discard lr r12_s r2;
(* smlal	r12, r6, lr, r3                           #! PC = 0x8005b04 *)
cast lr@sint32 lr;
smull tmp_h tmp_l lr r3;
uadds carry r12 tmp_l r12;
sadc r6 tmp_h r6 carry;
assert eqmod r12 0 (2**32) && true;
assume eq r12 0 && true;
(* smull	r12, r10, r10, r1                         #! PC = 0x8005b08 *)
smull r10 r12 r10 r1;
(* mul.w	lr, r12, r2                               #! PC = 0x8005b0c *)
cast r12_s@sint32 r12;
mull discard lr r12_s r2;
(* smlal	r12, r10, lr, r3                          #! PC = 0x8005b10 *)
cast lr@sint32 lr;
smull tmp_h tmp_l lr r3;
uadds carry r12 tmp_l r12;
sadc r10 tmp_h r10 carry;
assert eqmod r12 0 (2**32) && true;
assume eq r12 0 && true;
(* vmov	r1, s6                                     #! PC = 0x8005b14 *)
mov r1 s6;
(* smull	r12, r7, r7, r1                           #! PC = 0x8005b18 *)
smull r7 r12 r7 r1;
(* mul.w	lr, r12, r2                               #! PC = 0x8005b1c *)
cast r12_s@sint32 r12;
mull discard lr r12_s r2;
(* smlal	r12, r7, lr, r3                           #! PC = 0x8005b20 *)
cast lr@sint32 lr;
smull tmp_h tmp_l lr r3;
uadds carry r12 tmp_l r12;
sadc r7 tmp_h r7 carry;
assert eqmod r12 0 (2**32) && true;
assume eq r12 0 && true;
(* smull	r12, r11, r11, r1                         #! PC = 0x8005b24 *)
smull r11 r12 r11 r1;
(* mul.w	lr, r12, r2                               #! PC = 0x8005b28 *)
cast r12_s@sint32 r12;
mull discard lr r12_s r2;
(* smlal	r12, r11, lr, r3                          #! PC = 0x8005b2c *)
cast lr@sint32 lr;
smull tmp_h tmp_l lr r3;
uadds carry r12 tmp_l r12;
sadc r11 tmp_h r11 carry;
assert eqmod r12 0 (2**32) && true;
assume eq r12 0 && true;
(* add	r4, r6                                      #! PC = 0x8005b30 *)
add r4 r4 r6;
(* add	r5, r7                                      #! PC = 0x8005b32 *)
add r5 r5 r7;
(* add	r8, r10                                     #! PC = 0x8005b34 *)
add r8 r8 r10;
(* add	r9, r11                                     #! PC = 0x8005b36 *)
add r9 r9 r11;
(* sub.w	r6, r4, r6, lsl #1                        #! PC = 0x8005b38 *)
shl tmp r6 1;
sub r6 r4 tmp;
(* sub.w	r7, r5, r7, lsl #1                        #! PC = 0x8005b3c *)
shl tmp r7 1;
sub r7 r5 tmp;
(* sub.w	r10, r8, r10, lsl #1                      #! PC = 0x8005b40 *)
shl tmp r10 1;
sub r10 r8 tmp;
(* sub.w	r11, r9, r11, lsl #1                      #! PC = 0x8005b44 *)
shl tmp r11 1;
sub r11 r9 tmp;
(* vmov	r1, s7                                     #! PC = 0x8005b48 *)
mov r1 s7;
(* smull	r12, r8, r8, r1                           #! PC = 0x8005b4c *)
smull r8 r12 r8 r1;
(* mul.w	lr, r12, r2                               #! PC = 0x8005b50 *)
cast r12_s@sint32 r12;
mull discard lr r12_s r2;
(* smlal	r12, r8, lr, r3                           #! PC = 0x8005b54 *)
cast lr@sint32 lr;
smull tmp_h tmp_l lr r3;
uadds carry r12 tmp_l r12;
sadc r8 tmp_h r8 carry;
assert eqmod r12 0 (2**32) && true;
assume eq r12 0 && true;
(* vmov	r1, s8                                     #! PC = 0x8005b58 *)
mov r1 s8;
(* smull	r12, r9, r9, r1                           #! PC = 0x8005b5c *)
smull r9 r12 r9 r1;
(* mul.w	lr, r12, r2                               #! PC = 0x8005b60 *)
cast r12_s@sint32 r12;
mull discard lr r12_s r2;
(* smlal	r12, r9, lr, r3                           #! PC = 0x8005b64 *)
cast lr@sint32 lr;
smull tmp_h tmp_l lr r3;
uadds carry r12 tmp_l r12;
sadc r9 tmp_h r9 carry;
assert eqmod r12 0 (2**32) && true;
assume eq r12 0 && true;
(* vmov	r1, s9                                     #! PC = 0x8005b68 *)
mov r1 s9;
(* smull	r12, r10, r10, r1                         #! PC = 0x8005b6c *)
smull r10 r12 r10 r1;
(* mul.w	lr, r12, r2                               #! PC = 0x8005b70 *)
cast r12_s@sint32 r12;
mull discard lr r12_s r2;
(* smlal	r12, r10, lr, r3                          #! PC = 0x8005b74 *)
cast lr@sint32 lr;
smull tmp_h tmp_l lr r3;
uadds carry r12 tmp_l r12;
sadc r10 tmp_h r10 carry;
assert eqmod r12 0 (2**32) && true;
assume eq r12 0 && true;
(* vmov	r1, s10                                    #! PC = 0x8005b78 *)
mov r1 s10;
(* smull	r12, r11, r11, r1                         #! PC = 0x8005b7c *)
smull r11 r12 r11 r1;
(* mul.w	lr, r12, r2                               #! PC = 0x8005b80 *)
cast r12_s@sint32 r12;
mull discard lr r12_s r2;
(* smlal	r12, r11, lr, r3                          #! PC = 0x8005b84 *)
cast lr@sint32 lr;
smull tmp_h tmp_l lr r3;
uadds carry r12 tmp_l r12;
sadc r11 tmp_h r11 carry;
assert eqmod r12 0 (2**32) && true;
assume eq r12 0 && true;
(* add	r4, r8                                      #! PC = 0x8005b88 *)
add r4 r4 r8;
(* add	r5, r9                                      #! PC = 0x8005b8a *)
add r5 r5 r9;
(* add	r6, r10                                     #! PC = 0x8005b8c *)
add r6 r6 r10;
(* add	r7, r11                                     #! PC = 0x8005b8e *)
add r7 r7 r11;
(* sub.w	r8, r4, r8, lsl #1                        #! PC = 0x8005b90 *)
shl tmp r8 1;
sub r8 r4 tmp;
(* sub.w	r9, r5, r9, lsl #1                        #! PC = 0x8005b94 *)
shl tmp r9 1;
sub r9 r5 tmp;
(* sub.w	r10, r6, r10, lsl #1                      #! PC = 0x8005b98 *)
shl tmp r10 1;
sub r10 r6 tmp;
(* sub.w	r11, r7, r11, lsl #1                      #! PC = 0x8005b9c *)
shl tmp r11 1;
sub r11 r7 tmp;
(* vmov	r1, s11                                    #! PC = 0x8005ba0 *)
mov r1 s11;
(* smull	r12, r4, r4, r1                           #! PC = 0x8005ba4 *)
smull r4 r12 r4 r1;
(* mul.w	lr, r12, r2                               #! PC = 0x8005ba8 *)
cast r12_s@sint32 r12;
mull discard lr r12_s r2;
(* smlal	r12, r4, lr, r3                           #! PC = 0x8005bac *)
cast lr@sint32 lr;
smull tmp_h tmp_l lr r3;
uadds carry r12 tmp_l r12;
sadc r4 tmp_h r4 carry;
assert eqmod r12 0 (2**32) && true;
assume eq r12 0 && true;
(* vmov	r1, s12                                    #! PC = 0x8005bb0 *)
mov r1 s12;
(* smull	r12, r5, r5, r1                           #! PC = 0x8005bb4 *)
smull r5 r12 r5 r1;
(* mul.w	lr, r12, r2                               #! PC = 0x8005bb8 *)
cast r12_s@sint32 r12;
mull discard lr r12_s r2;
(* smlal	r12, r5, lr, r3                           #! PC = 0x8005bbc *)
cast lr@sint32 lr;
smull tmp_h tmp_l lr r3;
uadds carry r12 tmp_l r12;
sadc r5 tmp_h r5 carry;
assert eqmod r12 0 (2**32) && true;
assume eq r12 0 && true;
(* vmov	r1, s13                                    #! PC = 0x8005bc0 *)
mov r1 s13;
(* smull	r12, r6, r6, r1                           #! PC = 0x8005bc4 *)
smull r6 r12 r6 r1;
(* mul.w	lr, r12, r2                               #! PC = 0x8005bc8 *)
cast r12_s@sint32 r12;
mull discard lr r12_s r2;
(* smlal	r12, r6, lr, r3                           #! PC = 0x8005bcc *)
cast lr@sint32 lr;
smull tmp_h tmp_l lr r3;
uadds carry r12 tmp_l r12;
sadc r6 tmp_h r6 carry;
assert eqmod r12 0 (2**32) && true;
assume eq r12 0 && true;
(* vmov	r1, s14                                    #! PC = 0x8005bd0 *)
mov r1 s14;
(* smull	r12, r7, r7, r1                           #! PC = 0x8005bd4 *)
smull r7 r12 r7 r1;
(* mul.w	lr, r12, r2                               #! PC = 0x8005bd8 *)
cast r12_s@sint32 r12;
mull discard lr r12_s r2;
(* smlal	r12, r7, lr, r3                           #! PC = 0x8005bdc *)
cast lr@sint32 lr;
smull tmp_h tmp_l lr r3;
uadds carry r12 tmp_l r12;
sadc r7 tmp_h r7 carry;
assert eqmod r12 0 (2**32) && true;
assume eq r12 0 && true;
(* vmov	r1, s15                                    #! PC = 0x8005be0 *)
mov r1 s15;
(* smull	r12, r8, r8, r1                           #! PC = 0x8005be4 *)
smull r8 r12 r8 r1;
(* mul.w	lr, r12, r2                               #! PC = 0x8005be8 *)
cast r12_s@sint32 r12;
mull discard lr r12_s r2;
(* smlal	r12, r8, lr, r3                           #! PC = 0x8005bec *)
cast lr@sint32 lr;
smull tmp_h tmp_l lr r3;
uadds carry r12 tmp_l r12;
sadc r8 tmp_h r8 carry;
assert eqmod r12 0 (2**32) && true;
assume eq r12 0 && true;
(* vmov	r1, s16                                    #! PC = 0x8005bf0 *)
mov r1 s16;
(* smull	r12, r9, r9, r1                           #! PC = 0x8005bf4 *)
smull r9 r12 r9 r1;
(* mul.w	lr, r12, r2                               #! PC = 0x8005bf8 *)
cast r12_s@sint32 r12;
mull discard lr r12_s r2;
(* smlal	r12, r9, lr, r3                           #! PC = 0x8005bfc *)
cast lr@sint32 lr;
smull tmp_h tmp_l lr r3;
uadds carry r12 tmp_l r12;
sadc r9 tmp_h r9 carry;
assert eqmod r12 0 (2**32) && true;
assume eq r12 0 && true;
(* vmov	r1, s17                                    #! PC = 0x8005c00 *)
mov r1 s17;
(* smull	r12, r10, r10, r1                         #! PC = 0x8005c04 *)
smull r10 r12 r10 r1;
(* mul.w	lr, r12, r2                               #! PC = 0x8005c08 *)
cast r12_s@sint32 r12;
mull discard lr r12_s r2;
(* smlal	r12, r10, lr, r3                          #! PC = 0x8005c0c *)
cast lr@sint32 lr;
smull tmp_h tmp_l lr r3;
uadds carry r12 tmp_l r12;
sadc r10 tmp_h r10 carry;
assert eqmod r12 0 (2**32) && true;
assume eq r12 0 && true;
(* vmov	r1, s18                                    #! PC = 0x8005c10 *)
mov r1 s18;
(* smull	r12, r11, r11, r1                         #! PC = 0x8005c14 *)
smull r11 r12 r11 r1;
(* mul.w	lr, r12, r2                               #! PC = 0x8005c18 *)
cast r12_s@sint32 r12;
mull discard lr r12_s r2;
(* smlal	r12, r11, lr, r3                          #! PC = 0x8005c1c *)
cast lr@sint32 lr;
smull tmp_h tmp_l lr r3;
uadds carry r12 tmp_l r12;
sadc r11 tmp_h r11 carry;
assert eqmod r12 0 (2**32) && true;
assume eq r12 0 && true;
(* mov.w	r1, r3, lsr #1                            #! PC = 0x8005c20 *)
split r1 discard r3 1;
(* cmp	r4, r1                                      #! PC = 0x8005c24 *)
sub cmp r4 r1;
split sign discard cmp 31;
cast sign@bit sign;
cmov tmp sign 0@sint32 r3;
sub r4 r4 tmp;
(* cmn	r4, r1                                      #! PC = 0x8005c2a *)
add cmn r4 r1;
split sign discard cmn 31;
cast sign@bit sign;
cmov tmp sign r3 0@sint32;
add r4 r4 tmp;
(* cmp	r5, r1                                      #! PC = 0x8005c30 *)
sub cmp r5 r1;
split sign discard cmp 31;
cast sign@bit sign;
cmov tmp sign 0@sint32 r3;
sub r5 r5 tmp;
(* cmn	r5, r1                                      #! PC = 0x8005c36 *)
add cmn r5 r1;
split sign discard cmn 31;
cast sign@bit sign;
cmov tmp sign r3 0@sint32;
add r5 r5 tmp;
(* cmp	r6, r1                                      #! PC = 0x8005c3c *)
sub cmp r6 r1;
split sign discard cmp 31;
cast sign@bit sign;
cmov tmp sign 0@sint32 r3;
sub r6 r6 tmp;
(* cmn	r6, r1                                      #! PC = 0x8005c42 *)
add cmn r6 r1;
split sign discard cmn 31;
cast sign@bit sign;
cmov tmp sign r3 0@sint32;
add r6 r6 tmp;
(* cmp	r7, r1                                      #! PC = 0x8005c48 *)
sub cmp r7 r1;
split sign discard cmp 31;
cast sign@bit sign;
cmov tmp sign 0@sint32 r3;
sub r7 r7 tmp;
(* cmn	r7, r1                                      #! PC = 0x8005c4e *)
add cmn r7 r1;
split sign discard cmn 31;
cast sign@bit sign;
cmov tmp sign r3 0@sint32;
add r7 r7 tmp;
(* cmp	r8, r1                                      #! PC = 0x8005c54 *)
sub cmp r8 r1;
split sign discard cmp 31;
cast sign@bit sign;
cmov tmp sign 0@sint32 r3;
sub r8 r8 tmp;
(* cmn.w	r8, r1                                    #! PC = 0x8005c5c *)
add cmn r8 r1;
split sign discard cmn 31;
cast sign@bit sign;
cmov tmp sign r3 0@sint32;
add r8 r8 tmp;
(* cmp	r9, r1                                      #! PC = 0x8005c64 *)
sub cmp r9 r1;
split sign discard cmp 31;
cast sign@bit sign;
cmov tmp sign 0@sint32 r3;
sub r9 r9 tmp;
(* cmn.w	r9, r1                                    #! PC = 0x8005c6c *)
add cmn r9 r1;
split sign discard cmn 31;
cast sign@bit sign;
cmov tmp sign r3 0@sint32;
add r9 r9 tmp;
(* cmp	r10, r1                                     #! PC = 0x8005c74 *)
sub cmp r10 r1;
split sign discard cmp 31;
cast sign@bit sign;
cmov tmp sign 0@sint32 r3;
sub r10 r10 tmp;
(* cmn.w	r10, r1                                   #! PC = 0x8005c7c *)
add cmn r10 r1;
split sign discard cmn 31;
cast sign@bit sign;
cmov tmp sign r3 0@sint32;
add r10 r10 tmp;
(* cmp	r11, r1                                     #! PC = 0x8005c84 *)
sub cmp r11 r1;
split sign discard cmp 31;
cast sign@bit sign;
cmov tmp sign 0@sint32 r3;
sub r11 r11 tmp;
(* cmn.w	r11, r1                                   #! PC = 0x8005c8c *)
add cmn r11 r1;
split sign discard cmn 31;
cast sign@bit sign;
cmov tmp sign r3 0@sint32;
add r11 r11 tmp;
(* vmov	lr, s0                                     #! PC = 0x8005c94 *)
mov lr s0;
(* strh.w	r8, [lr, #256]	; 0x100                   #! EA = L0x20019956; PC = 0x8005c98 *)
ghost L0x20019956_f@sint32 : L0x20019956_f = r8 && L0x20019956_f = r8;
split discard L0x20019956_u r8 16;
cast L0x20019956@sint16 L0x20019956_u;
(* strh.w	r9, [lr, #320]	; 0x140                   #! EA = L0x20019996; PC = 0x8005c9c *)
ghost L0x20019996_f@sint32 : L0x20019996_f = r9 && L0x20019996_f = r9;
split discard L0x20019996_u r9 16;
cast L0x20019996@sint16 L0x20019996_u;
(* strh.w	r10, [lr, #384]	; 0x180                  #! EA = L0x200199d6; PC = 0x8005ca0 *)
ghost L0x200199d6_f@sint32 : L0x200199d6_f = r10 && L0x200199d6_f = r10;
split discard L0x200199d6_u r10 16;
cast L0x200199d6@sint16 L0x200199d6_u;
(* strh.w	r11, [lr, #448]	; 0x1c0                  #! EA = L0x20019a16; PC = 0x8005ca4 *)
ghost L0x20019a16_f@sint32 : L0x20019a16_f = r11 && L0x20019a16_f = r11;
split discard L0x20019a16_u r11 16;
cast L0x20019a16@sint16 L0x20019a16_u;
(* strh.w	r5, [lr, #64]	; 0x40                     #! EA = L0x20019896; PC = 0x8005ca8 *)
ghost L0x20019896_f@sint32 : L0x20019896_f = r5 && L0x20019896_f = r5;
split discard L0x20019896_u r5 16;
cast L0x20019896@sint16 L0x20019896_u;
(* strh.w	r6, [lr, #128]	; 0x80                    #! EA = L0x200198d6; PC = 0x8005cac *)
ghost L0x200198d6_f@sint32 : L0x200198d6_f = r6 && L0x200198d6_f = r6;
split discard L0x200198d6_u r6 16;
cast L0x200198d6@sint16 L0x200198d6_u;
(* strh.w	r7, [lr, #192]	; 0xc0                    #! EA = L0x20019916; PC = 0x8005cb0 *)
ghost L0x20019916_f@sint32 : L0x20019916_f = r7 && L0x20019916_f = r7;
split discard L0x20019916_u r7 16;
cast L0x20019916@sint16 L0x20019916_u;
(* strh.w	r4, [lr], #2                             #! EA = L0x20019856; PC = 0x8005cb4 *)
ghost L0x20019856_f@sint32 : L0x20019856_f = r4 && L0x20019856_f = r4;
split discard L0x20019856_u r4 16;
cast L0x20019856@sint16 L0x20019856_u;
(* vmov	s0, lr                                     #! PC = 0x8005cb8 *)
mov s0 lr;
(* vmov	lr, s3                                     #! PC = 0x8005cbc *)
mov lr s3;
(* vmov	r12, s2                                    #! PC = 0x8005cc8 *)
mov r12 s2;
(* vmov	r1, s1                                     #! PC = 0x8005848 *)
mov r1 s1;
(* vldmia	r1!, {s4-s18}                            #! EA = L0x800f834; PC = 0x800584c *)
mov s4 L0x800f834;
mov s5 L0x800f838;
mov s6 L0x800f83c;
mov s7 L0x800f840;
mov s8 L0x800f844;
mov s9 L0x800f848;
mov s10 L0x800f84c;
mov s11 L0x800f850;
mov s12 L0x800f854;
mov s13 L0x800f858;
mov s14 L0x800f85c;
mov s15 L0x800f860;
mov s16 L0x800f864;
mov s17 L0x800f868;
mov s18 L0x800f86c;
(* vmov	s1, r1                                     #! PC = 0x8005850 *)
mov s1 r1;
(* add.w	lr, r0, #16                               #! PC = 0x8005854 *)
adds discard lr r0 16@uint32;
(* vmov	s3, lr                                     #! PC = 0x8005858 *)
mov s3 lr;
(* ldr.w	r8, [r0, #512]	; 0x200                    #! EA = L0x2001a468; Value = 0xfddd0ae5; PC = 0x800585c *)
mov r8 L0x2001a468;
(* ldr.w	r9, [r0, #640]	; 0x280                    #! EA = L0x2001a4e8; Value = 0x00ec8c4c; PC = 0x8005860 *)
mov r9 L0x2001a4e8;
(* ldr.w	r10, [r0, #768]	; 0x300                   #! EA = L0x2001a568; Value = 0xfe22d1c9; PC = 0x8005864 *)
mov r10 L0x2001a568;
(* ldr.w	r11, [r0, #896]	; 0x380                   #! EA = L0x2001a5e8; Value = 0xfe2410f4; PC = 0x8005868 *)
mov r11 L0x2001a5e8;
(* ldr.w	r5, [r0, #128]	; 0x80                     #! EA = L0x2001a2e8; Value = 0x0289d3ba; PC = 0x800586c *)
mov r5 L0x2001a2e8;
(* ldr.w	r6, [r0, #256]	; 0x100                    #! EA = L0x2001a368; Value = 0x00e4a82f; PC = 0x8005870 *)
mov r6 L0x2001a368;
(* ldr.w	r7, [r0, #384]	; 0x180                    #! EA = L0x2001a3e8; Value = 0xfe1f4525; PC = 0x8005874 *)
mov r7 L0x2001a3e8;
(* ldr.w	r4, [r0], #4                              #! EA = L0x2001a268; Value = 0x00e31f4c; PC = 0x8005878 *)
mov r4 L0x2001a268;
(* vmov	r1, s4                                     #! PC = 0x800587c *)
mov r1 s4;
(* smull	r12, r5, r5, r1                           #! PC = 0x8005880 *)
smull r5 r12 r5 r1;
(* mul.w	lr, r12, r2                               #! PC = 0x8005884 *)
cast r12_s@sint32 r12;
mull discard lr r12_s r2;
(* smlal	r12, r5, lr, r3                           #! PC = 0x8005888 *)
cast lr@sint32 lr;
smull tmp_h tmp_l lr r3;
uadds carry r12 tmp_l r12;
sadc r5 tmp_h r5 carry;
assert eqmod r12 0 (2**32) && true;
assume eq r12 0 && true;
(* smull	r12, r7, r7, r1                           #! PC = 0x800588c *)
smull r7 r12 r7 r1;
(* mul.w	lr, r12, r2                               #! PC = 0x8005890 *)
cast r12_s@sint32 r12;
mull discard lr r12_s r2;
(* smlal	r12, r7, lr, r3                           #! PC = 0x8005894 *)
cast lr@sint32 lr;
smull tmp_h tmp_l lr r3;
uadds carry r12 tmp_l r12;
sadc r7 tmp_h r7 carry;
assert eqmod r12 0 (2**32) && true;
assume eq r12 0 && true;
(* smull	r12, r9, r9, r1                           #! PC = 0x8005898 *)
smull r9 r12 r9 r1;
(* mul.w	lr, r12, r2                               #! PC = 0x800589c *)
cast r12_s@sint32 r12;
mull discard lr r12_s r2;
(* smlal	r12, r9, lr, r3                           #! PC = 0x80058a0 *)
cast lr@sint32 lr;
smull tmp_h tmp_l lr r3;
uadds carry r12 tmp_l r12;
sadc r9 tmp_h r9 carry;
assert eqmod r12 0 (2**32) && true;
assume eq r12 0 && true;
(* smull	r12, r11, r11, r1                         #! PC = 0x80058a4 *)
smull r11 r12 r11 r1;
(* mul.w	lr, r12, r2                               #! PC = 0x80058a8 *)
cast r12_s@sint32 r12;
mull discard lr r12_s r2;
(* smlal	r12, r11, lr, r3                          #! PC = 0x80058ac *)
cast lr@sint32 lr;
smull tmp_h tmp_l lr r3;
uadds carry r12 tmp_l r12;
sadc r11 tmp_h r11 carry;
assert eqmod r12 0 (2**32) && true;
assume eq r12 0 && true;
(* add	r4, r5                                      #! PC = 0x80058b0 *)
add r4 r4 r5;
(* add	r6, r7                                      #! PC = 0x80058b2 *)
add r6 r6 r7;
(* add	r8, r9                                      #! PC = 0x80058b4 *)
add r8 r8 r9;
(* add	r10, r11                                    #! PC = 0x80058b6 *)
add r10 r10 r11;
(* sub.w	r5, r4, r5, lsl #1                        #! PC = 0x80058b8 *)
shl tmp r5 1;
sub r5 r4 tmp;
(* sub.w	r7, r6, r7, lsl #1                        #! PC = 0x80058bc *)
shl tmp r7 1;
sub r7 r6 tmp;
(* sub.w	r9, r8, r9, lsl #1                        #! PC = 0x80058c0 *)
shl tmp r9 1;
sub r9 r8 tmp;
(* sub.w	r11, r10, r11, lsl #1                     #! PC = 0x80058c4 *)
shl tmp r11 1;
sub r11 r10 tmp;
(* vmov	r1, s5                                     #! PC = 0x80058c8 *)
mov r1 s5;
(* smull	r12, r6, r6, r1                           #! PC = 0x80058cc *)
smull r6 r12 r6 r1;
(* mul.w	lr, r12, r2                               #! PC = 0x80058d0 *)
cast r12_s@sint32 r12;
mull discard lr r12_s r2;
(* smlal	r12, r6, lr, r3                           #! PC = 0x80058d4 *)
cast lr@sint32 lr;
smull tmp_h tmp_l lr r3;
uadds carry r12 tmp_l r12;
sadc r6 tmp_h r6 carry;
assert eqmod r12 0 (2**32) && true;
assume eq r12 0 && true;
(* smull	r12, r10, r10, r1                         #! PC = 0x80058d8 *)
smull r10 r12 r10 r1;
(* mul.w	lr, r12, r2                               #! PC = 0x80058dc *)
cast r12_s@sint32 r12;
mull discard lr r12_s r2;
(* smlal	r12, r10, lr, r3                          #! PC = 0x80058e0 *)
cast lr@sint32 lr;
smull tmp_h tmp_l lr r3;
uadds carry r12 tmp_l r12;
sadc r10 tmp_h r10 carry;
assert eqmod r12 0 (2**32) && true;
assume eq r12 0 && true;
(* vmov	r1, s6                                     #! PC = 0x80058e4 *)
mov r1 s6;
(* smull	r12, r7, r7, r1                           #! PC = 0x80058e8 *)
smull r7 r12 r7 r1;
(* mul.w	lr, r12, r2                               #! PC = 0x80058ec *)
cast r12_s@sint32 r12;
mull discard lr r12_s r2;
(* smlal	r12, r7, lr, r3                           #! PC = 0x80058f0 *)
cast lr@sint32 lr;
smull tmp_h tmp_l lr r3;
uadds carry r12 tmp_l r12;
sadc r7 tmp_h r7 carry;
assert eqmod r12 0 (2**32) && true;
assume eq r12 0 && true;
(* smull	r12, r11, r11, r1                         #! PC = 0x80058f4 *)
smull r11 r12 r11 r1;
(* mul.w	lr, r12, r2                               #! PC = 0x80058f8 *)
cast r12_s@sint32 r12;
mull discard lr r12_s r2;
(* smlal	r12, r11, lr, r3                          #! PC = 0x80058fc *)
cast lr@sint32 lr;
smull tmp_h tmp_l lr r3;
uadds carry r12 tmp_l r12;
sadc r11 tmp_h r11 carry;
assert eqmod r12 0 (2**32) && true;
assume eq r12 0 && true;
(* add	r4, r6                                      #! PC = 0x8005900 *)
add r4 r4 r6;
(* add	r5, r7                                      #! PC = 0x8005902 *)
add r5 r5 r7;
(* add	r8, r10                                     #! PC = 0x8005904 *)
add r8 r8 r10;
(* add	r9, r11                                     #! PC = 0x8005906 *)
add r9 r9 r11;
(* sub.w	r6, r4, r6, lsl #1                        #! PC = 0x8005908 *)
shl tmp r6 1;
sub r6 r4 tmp;
(* sub.w	r7, r5, r7, lsl #1                        #! PC = 0x800590c *)
shl tmp r7 1;
sub r7 r5 tmp;
(* sub.w	r10, r8, r10, lsl #1                      #! PC = 0x8005910 *)
shl tmp r10 1;
sub r10 r8 tmp;
(* sub.w	r11, r9, r11, lsl #1                      #! PC = 0x8005914 *)
shl tmp r11 1;
sub r11 r9 tmp;
(* vmov	r1, s7                                     #! PC = 0x8005918 *)
mov r1 s7;
(* smull	r12, r8, r8, r1                           #! PC = 0x800591c *)
smull r8 r12 r8 r1;
(* mul.w	lr, r12, r2                               #! PC = 0x8005920 *)
cast r12_s@sint32 r12;
mull discard lr r12_s r2;
(* smlal	r12, r8, lr, r3                           #! PC = 0x8005924 *)
cast lr@sint32 lr;
smull tmp_h tmp_l lr r3;
uadds carry r12 tmp_l r12;
sadc r8 tmp_h r8 carry;
assert eqmod r12 0 (2**32) && true;
assume eq r12 0 && true;
(* vmov	r1, s8                                     #! PC = 0x8005928 *)
mov r1 s8;
(* smull	r12, r9, r9, r1                           #! PC = 0x800592c *)
smull r9 r12 r9 r1;
(* mul.w	lr, r12, r2                               #! PC = 0x8005930 *)
cast r12_s@sint32 r12;
mull discard lr r12_s r2;
(* smlal	r12, r9, lr, r3                           #! PC = 0x8005934 *)
cast lr@sint32 lr;
smull tmp_h tmp_l lr r3;
uadds carry r12 tmp_l r12;
sadc r9 tmp_h r9 carry;
assert eqmod r12 0 (2**32) && true;
assume eq r12 0 && true;
(* vmov	r1, s9                                     #! PC = 0x8005938 *)
mov r1 s9;
(* smull	r12, r10, r10, r1                         #! PC = 0x800593c *)
smull r10 r12 r10 r1;
(* mul.w	lr, r12, r2                               #! PC = 0x8005940 *)
cast r12_s@sint32 r12;
mull discard lr r12_s r2;
(* smlal	r12, r10, lr, r3                          #! PC = 0x8005944 *)
cast lr@sint32 lr;
smull tmp_h tmp_l lr r3;
uadds carry r12 tmp_l r12;
sadc r10 tmp_h r10 carry;
assert eqmod r12 0 (2**32) && true;
assume eq r12 0 && true;
(* vmov	r1, s10                                    #! PC = 0x8005948 *)
mov r1 s10;
(* smull	r12, r11, r11, r1                         #! PC = 0x800594c *)
smull r11 r12 r11 r1;
(* mul.w	lr, r12, r2                               #! PC = 0x8005950 *)
cast r12_s@sint32 r12;
mull discard lr r12_s r2;
(* smlal	r12, r11, lr, r3                          #! PC = 0x8005954 *)
cast lr@sint32 lr;
smull tmp_h tmp_l lr r3;
uadds carry r12 tmp_l r12;
sadc r11 tmp_h r11 carry;
assert eqmod r12 0 (2**32) && true;
assume eq r12 0 && true;
(* add	r4, r8                                      #! PC = 0x8005958 *)
add r4 r4 r8;
(* add	r5, r9                                      #! PC = 0x800595a *)
add r5 r5 r9;
(* add	r6, r10                                     #! PC = 0x800595c *)
add r6 r6 r10;
(* add	r7, r11                                     #! PC = 0x800595e *)
add r7 r7 r11;
(* sub.w	r8, r4, r8, lsl #1                        #! PC = 0x8005960 *)
shl tmp r8 1;
sub r8 r4 tmp;
(* sub.w	r9, r5, r9, lsl #1                        #! PC = 0x8005964 *)
shl tmp r9 1;
sub r9 r5 tmp;
(* sub.w	r10, r6, r10, lsl #1                      #! PC = 0x8005968 *)
shl tmp r10 1;
sub r10 r6 tmp;
(* sub.w	r11, r7, r11, lsl #1                      #! PC = 0x800596c *)
shl tmp r11 1;
sub r11 r7 tmp;
(* vmov	r1, s11                                    #! PC = 0x8005970 *)
mov r1 s11;
(* smull	r12, r4, r4, r1                           #! PC = 0x8005974 *)
smull r4 r12 r4 r1;
(* mul.w	lr, r12, r2                               #! PC = 0x8005978 *)
cast r12_s@sint32 r12;
mull discard lr r12_s r2;
(* smlal	r12, r4, lr, r3                           #! PC = 0x800597c *)
cast lr@sint32 lr;
smull tmp_h tmp_l lr r3;
uadds carry r12 tmp_l r12;
sadc r4 tmp_h r4 carry;
assert eqmod r12 0 (2**32) && true;
assume eq r12 0 && true;
(* vmov	r1, s12                                    #! PC = 0x8005980 *)
mov r1 s12;
(* smull	r12, r5, r5, r1                           #! PC = 0x8005984 *)
smull r5 r12 r5 r1;
(* mul.w	lr, r12, r2                               #! PC = 0x8005988 *)
cast r12_s@sint32 r12;
mull discard lr r12_s r2;
(* smlal	r12, r5, lr, r3                           #! PC = 0x800598c *)
cast lr@sint32 lr;
smull tmp_h tmp_l lr r3;
uadds carry r12 tmp_l r12;
sadc r5 tmp_h r5 carry;
assert eqmod r12 0 (2**32) && true;
assume eq r12 0 && true;
(* vmov	r1, s13                                    #! PC = 0x8005990 *)
mov r1 s13;
(* smull	r12, r6, r6, r1                           #! PC = 0x8005994 *)
smull r6 r12 r6 r1;
(* mul.w	lr, r12, r2                               #! PC = 0x8005998 *)
cast r12_s@sint32 r12;
mull discard lr r12_s r2;
(* smlal	r12, r6, lr, r3                           #! PC = 0x800599c *)
cast lr@sint32 lr;
smull tmp_h tmp_l lr r3;
uadds carry r12 tmp_l r12;
sadc r6 tmp_h r6 carry;
assert eqmod r12 0 (2**32) && true;
assume eq r12 0 && true;
(* vmov	r1, s14                                    #! PC = 0x80059a0 *)
mov r1 s14;
(* smull	r12, r7, r7, r1                           #! PC = 0x80059a4 *)
smull r7 r12 r7 r1;
(* mul.w	lr, r12, r2                               #! PC = 0x80059a8 *)
cast r12_s@sint32 r12;
mull discard lr r12_s r2;
(* smlal	r12, r7, lr, r3                           #! PC = 0x80059ac *)
cast lr@sint32 lr;
smull tmp_h tmp_l lr r3;
uadds carry r12 tmp_l r12;
sadc r7 tmp_h r7 carry;
assert eqmod r12 0 (2**32) && true;
assume eq r12 0 && true;
(* vmov	r1, s15                                    #! PC = 0x80059b0 *)
mov r1 s15;
(* smull	r12, r8, r8, r1                           #! PC = 0x80059b4 *)
smull r8 r12 r8 r1;
(* mul.w	lr, r12, r2                               #! PC = 0x80059b8 *)
cast r12_s@sint32 r12;
mull discard lr r12_s r2;
(* smlal	r12, r8, lr, r3                           #! PC = 0x80059bc *)
cast lr@sint32 lr;
smull tmp_h tmp_l lr r3;
uadds carry r12 tmp_l r12;
sadc r8 tmp_h r8 carry;
assert eqmod r12 0 (2**32) && true;
assume eq r12 0 && true;
(* vmov	r1, s16                                    #! PC = 0x80059c0 *)
mov r1 s16;
(* smull	r12, r9, r9, r1                           #! PC = 0x80059c4 *)
smull r9 r12 r9 r1;
(* mul.w	lr, r12, r2                               #! PC = 0x80059c8 *)
cast r12_s@sint32 r12;
mull discard lr r12_s r2;
(* smlal	r12, r9, lr, r3                           #! PC = 0x80059cc *)
cast lr@sint32 lr;
smull tmp_h tmp_l lr r3;
uadds carry r12 tmp_l r12;
sadc r9 tmp_h r9 carry;
assert eqmod r12 0 (2**32) && true;
assume eq r12 0 && true;
(* vmov	r1, s17                                    #! PC = 0x80059d0 *)
mov r1 s17;
(* smull	r12, r10, r10, r1                         #! PC = 0x80059d4 *)
smull r10 r12 r10 r1;
(* mul.w	lr, r12, r2                               #! PC = 0x80059d8 *)
cast r12_s@sint32 r12;
mull discard lr r12_s r2;
(* smlal	r12, r10, lr, r3                          #! PC = 0x80059dc *)
cast lr@sint32 lr;
smull tmp_h tmp_l lr r3;
uadds carry r12 tmp_l r12;
sadc r10 tmp_h r10 carry;
assert eqmod r12 0 (2**32) && true;
assume eq r12 0 && true;
(* vmov	r1, s18                                    #! PC = 0x80059e0 *)
mov r1 s18;
(* smull	r12, r11, r11, r1                         #! PC = 0x80059e4 *)
smull r11 r12 r11 r1;
(* mul.w	lr, r12, r2                               #! PC = 0x80059e8 *)
cast r12_s@sint32 r12;
mull discard lr r12_s r2;
(* smlal	r12, r11, lr, r3                          #! PC = 0x80059ec *)
cast lr@sint32 lr;
smull tmp_h tmp_l lr r3;
uadds carry r12 tmp_l r12;
sadc r11 tmp_h r11 carry;
assert eqmod r12 0 (2**32) && true;
assume eq r12 0 && true;
(* mov.w	r1, r3, lsr #1                            #! PC = 0x80059f0 *)
split r1 discard r3 1;
(* cmp	r4, r1                                      #! PC = 0x80059f4 *)
sub cmp r4 r1;
split sign discard cmp 31;
cast sign@bit sign;
cmov tmp sign 0@sint32 r3;
sub r4 r4 tmp;
(* cmn	r4, r1                                      #! PC = 0x80059fa *)
add cmn r4 r1;
split sign discard cmn 31;
cast sign@bit sign;
cmov tmp sign r3 0@sint32;
add r4 r4 tmp;
(* cmp	r5, r1                                      #! PC = 0x8005a00 *)
sub cmp r5 r1;
split sign discard cmp 31;
cast sign@bit sign;
cmov tmp sign 0@sint32 r3;
sub r5 r5 tmp;
(* cmn	r5, r1                                      #! PC = 0x8005a06 *)
add cmn r5 r1;
split sign discard cmn 31;
cast sign@bit sign;
cmov tmp sign r3 0@sint32;
add r5 r5 tmp;
(* cmp	r6, r1                                      #! PC = 0x8005a0c *)
sub cmp r6 r1;
split sign discard cmp 31;
cast sign@bit sign;
cmov tmp sign 0@sint32 r3;
sub r6 r6 tmp;
(* cmn	r6, r1                                      #! PC = 0x8005a12 *)
add cmn r6 r1;
split sign discard cmn 31;
cast sign@bit sign;
cmov tmp sign r3 0@sint32;
add r6 r6 tmp;
(* cmp	r7, r1                                      #! PC = 0x8005a18 *)
sub cmp r7 r1;
split sign discard cmp 31;
cast sign@bit sign;
cmov tmp sign 0@sint32 r3;
sub r7 r7 tmp;
(* cmn	r7, r1                                      #! PC = 0x8005a1e *)
add cmn r7 r1;
split sign discard cmn 31;
cast sign@bit sign;
cmov tmp sign r3 0@sint32;
add r7 r7 tmp;
(* cmp	r8, r1                                      #! PC = 0x8005a24 *)
sub cmp r8 r1;
split sign discard cmp 31;
cast sign@bit sign;
cmov tmp sign 0@sint32 r3;
sub r8 r8 tmp;
(* cmn.w	r8, r1                                    #! PC = 0x8005a2c *)
add cmn r8 r1;
split sign discard cmn 31;
cast sign@bit sign;
cmov tmp sign r3 0@sint32;
add r8 r8 tmp;
(* cmp	r9, r1                                      #! PC = 0x8005a34 *)
sub cmp r9 r1;
split sign discard cmp 31;
cast sign@bit sign;
cmov tmp sign 0@sint32 r3;
sub r9 r9 tmp;
(* cmn.w	r9, r1                                    #! PC = 0x8005a3c *)
add cmn r9 r1;
split sign discard cmn 31;
cast sign@bit sign;
cmov tmp sign r3 0@sint32;
add r9 r9 tmp;
(* cmp	r10, r1                                     #! PC = 0x8005a44 *)
sub cmp r10 r1;
split sign discard cmp 31;
cast sign@bit sign;
cmov tmp sign 0@sint32 r3;
sub r10 r10 tmp;
(* cmn.w	r10, r1                                   #! PC = 0x8005a4c *)
add cmn r10 r1;
split sign discard cmn 31;
cast sign@bit sign;
cmov tmp sign r3 0@sint32;
add r10 r10 tmp;
(* cmp	r11, r1                                     #! PC = 0x8005a54 *)
sub cmp r11 r1;
split sign discard cmp 31;
cast sign@bit sign;
cmov tmp sign 0@sint32 r3;
sub r11 r11 tmp;
(* cmn.w	r11, r1                                   #! PC = 0x8005a5c *)
add cmn r11 r1;
split sign discard cmn 31;
cast sign@bit sign;
cmov tmp sign r3 0@sint32;
add r11 r11 tmp;
(* vmov	lr, s0                                     #! PC = 0x8005a64 *)
mov lr s0;
(* strh.w	r8, [lr, #256]	; 0x100                   #! EA = L0x20019958; PC = 0x8005a68 *)
ghost L0x20019958_f@sint32 : L0x20019958_f = r8 && L0x20019958_f = r8;
split discard L0x20019958_u r8 16;
cast L0x20019958@sint16 L0x20019958_u;
(* strh.w	r9, [lr, #320]	; 0x140                   #! EA = L0x20019998; PC = 0x8005a6c *)
ghost L0x20019998_f@sint32 : L0x20019998_f = r9 && L0x20019998_f = r9;
split discard L0x20019998_u r9 16;
cast L0x20019998@sint16 L0x20019998_u;
(* strh.w	r10, [lr, #384]	; 0x180                  #! EA = L0x200199d8; PC = 0x8005a70 *)
ghost L0x200199d8_f@sint32 : L0x200199d8_f = r10 && L0x200199d8_f = r10;
split discard L0x200199d8_u r10 16;
cast L0x200199d8@sint16 L0x200199d8_u;
(* strh.w	r11, [lr, #448]	; 0x1c0                  #! EA = L0x20019a18; PC = 0x8005a74 *)
ghost L0x20019a18_f@sint32 : L0x20019a18_f = r11 && L0x20019a18_f = r11;
split discard L0x20019a18_u r11 16;
cast L0x20019a18@sint16 L0x20019a18_u;
(* strh.w	r5, [lr, #64]	; 0x40                     #! EA = L0x20019898; PC = 0x8005a78 *)
ghost L0x20019898_f@sint32 : L0x20019898_f = r5 && L0x20019898_f = r5;
split discard L0x20019898_u r5 16;
cast L0x20019898@sint16 L0x20019898_u;
(* strh.w	r6, [lr, #128]	; 0x80                    #! EA = L0x200198d8; PC = 0x8005a7c *)
ghost L0x200198d8_f@sint32 : L0x200198d8_f = r6 && L0x200198d8_f = r6;
split discard L0x200198d8_u r6 16;
cast L0x200198d8@sint16 L0x200198d8_u;
(* strh.w	r7, [lr, #192]	; 0xc0                    #! EA = L0x20019918; PC = 0x8005a80 *)
ghost L0x20019918_f@sint32 : L0x20019918_f = r7 && L0x20019918_f = r7;
split discard L0x20019918_u r7 16;
cast L0x20019918@sint16 L0x20019918_u;
(* strh.w	r4, [lr], #2                             #! EA = L0x20019858; PC = 0x8005a84 *)
ghost L0x20019858_f@sint32 : L0x20019858_f = r4 && L0x20019858_f = r4;
split discard L0x20019858_u r4 16;
cast L0x20019858@sint16 L0x20019858_u;
(* vmov	s0, lr                                     #! PC = 0x8005a88 *)
mov s0 lr;
(* ldr.w	r8, [r0, #512]	; 0x200                    #! EA = L0x2001a46c; Value = 0x00ce5133; PC = 0x8005a8c *)
mov r8 L0x2001a46c;
(* ldr.w	r9, [r0, #640]	; 0x280                    #! EA = L0x2001a4ec; Value = 0xfee505b1; PC = 0x8005a90 *)
mov r9 L0x2001a4ec;
(* ldr.w	r10, [r0, #768]	; 0x300                   #! EA = L0x2001a56c; Value = 0x00c15a13; PC = 0x8005a94 *)
mov r10 L0x2001a56c;
(* ldr.w	r11, [r0, #896]	; 0x380                   #! EA = L0x2001a5ec; Value = 0xfeec43aa; PC = 0x8005a98 *)
mov r11 L0x2001a5ec;
(* ldr.w	r5, [r0, #128]	; 0x80                     #! EA = L0x2001a2ec; Value = 0x0265ad9d; PC = 0x8005a9c *)
mov r5 L0x2001a2ec;
(* ldr.w	r6, [r0, #256]	; 0x100                    #! EA = L0x2001a36c; Value = 0xfe6f43e9; PC = 0x8005aa0 *)
mov r6 L0x2001a36c;
(* ldr.w	r7, [r0, #384]	; 0x180                    #! EA = L0x2001a3ec; Value = 0xffc30c36; PC = 0x8005aa4 *)
mov r7 L0x2001a3ec;
(* ldr.w	r4, [r0], #4                              #! EA = L0x2001a26c; Value = 0x019699cb; PC = 0x8005aa8 *)
mov r4 L0x2001a26c;
(* vmov	r1, s4                                     #! PC = 0x8005aac *)
mov r1 s4;
(* smull	r12, r5, r5, r1                           #! PC = 0x8005ab0 *)
smull r5 r12 r5 r1;
(* mul.w	lr, r12, r2                               #! PC = 0x8005ab4 *)
cast r12_s@sint32 r12;
mull discard lr r12_s r2;
(* smlal	r12, r5, lr, r3                           #! PC = 0x8005ab8 *)
cast lr@sint32 lr;
smull tmp_h tmp_l lr r3;
uadds carry r12 tmp_l r12;
sadc r5 tmp_h r5 carry;
assert eqmod r12 0 (2**32) && true;
assume eq r12 0 && true;
(* smull	r12, r7, r7, r1                           #! PC = 0x8005abc *)
smull r7 r12 r7 r1;
(* mul.w	lr, r12, r2                               #! PC = 0x8005ac0 *)
cast r12_s@sint32 r12;
mull discard lr r12_s r2;
(* smlal	r12, r7, lr, r3                           #! PC = 0x8005ac4 *)
cast lr@sint32 lr;
smull tmp_h tmp_l lr r3;
uadds carry r12 tmp_l r12;
sadc r7 tmp_h r7 carry;
assert eqmod r12 0 (2**32) && true;
assume eq r12 0 && true;
(* smull	r12, r9, r9, r1                           #! PC = 0x8005ac8 *)
smull r9 r12 r9 r1;
(* mul.w	lr, r12, r2                               #! PC = 0x8005acc *)
cast r12_s@sint32 r12;
mull discard lr r12_s r2;
(* smlal	r12, r9, lr, r3                           #! PC = 0x8005ad0 *)
cast lr@sint32 lr;
smull tmp_h tmp_l lr r3;
uadds carry r12 tmp_l r12;
sadc r9 tmp_h r9 carry;
assert eqmod r12 0 (2**32) && true;
assume eq r12 0 && true;
(* smull	r12, r11, r11, r1                         #! PC = 0x8005ad4 *)
smull r11 r12 r11 r1;
(* mul.w	lr, r12, r2                               #! PC = 0x8005ad8 *)
cast r12_s@sint32 r12;
mull discard lr r12_s r2;
(* smlal	r12, r11, lr, r3                          #! PC = 0x8005adc *)
cast lr@sint32 lr;
smull tmp_h tmp_l lr r3;
uadds carry r12 tmp_l r12;
sadc r11 tmp_h r11 carry;
assert eqmod r12 0 (2**32) && true;
assume eq r12 0 && true;
(* add	r4, r5                                      #! PC = 0x8005ae0 *)
add r4 r4 r5;
(* add	r6, r7                                      #! PC = 0x8005ae2 *)
add r6 r6 r7;
(* add	r8, r9                                      #! PC = 0x8005ae4 *)
add r8 r8 r9;
(* add	r10, r11                                    #! PC = 0x8005ae6 *)
add r10 r10 r11;
(* sub.w	r5, r4, r5, lsl #1                        #! PC = 0x8005ae8 *)
shl tmp r5 1;
sub r5 r4 tmp;
(* sub.w	r7, r6, r7, lsl #1                        #! PC = 0x8005aec *)
shl tmp r7 1;
sub r7 r6 tmp;
(* sub.w	r9, r8, r9, lsl #1                        #! PC = 0x8005af0 *)
shl tmp r9 1;
sub r9 r8 tmp;
(* sub.w	r11, r10, r11, lsl #1                     #! PC = 0x8005af4 *)
shl tmp r11 1;
sub r11 r10 tmp;
(* vmov	r1, s5                                     #! PC = 0x8005af8 *)
mov r1 s5;
(* smull	r12, r6, r6, r1                           #! PC = 0x8005afc *)
smull r6 r12 r6 r1;
(* mul.w	lr, r12, r2                               #! PC = 0x8005b00 *)
cast r12_s@sint32 r12;
mull discard lr r12_s r2;
(* smlal	r12, r6, lr, r3                           #! PC = 0x8005b04 *)
cast lr@sint32 lr;
smull tmp_h tmp_l lr r3;
uadds carry r12 tmp_l r12;
sadc r6 tmp_h r6 carry;
assert eqmod r12 0 (2**32) && true;
assume eq r12 0 && true;
(* smull	r12, r10, r10, r1                         #! PC = 0x8005b08 *)
smull r10 r12 r10 r1;
(* mul.w	lr, r12, r2                               #! PC = 0x8005b0c *)
cast r12_s@sint32 r12;
mull discard lr r12_s r2;
(* smlal	r12, r10, lr, r3                          #! PC = 0x8005b10 *)
cast lr@sint32 lr;
smull tmp_h tmp_l lr r3;
uadds carry r12 tmp_l r12;
sadc r10 tmp_h r10 carry;
assert eqmod r12 0 (2**32) && true;
assume eq r12 0 && true;
(* vmov	r1, s6                                     #! PC = 0x8005b14 *)
mov r1 s6;
(* smull	r12, r7, r7, r1                           #! PC = 0x8005b18 *)
smull r7 r12 r7 r1;
(* mul.w	lr, r12, r2                               #! PC = 0x8005b1c *)
cast r12_s@sint32 r12;
mull discard lr r12_s r2;
(* smlal	r12, r7, lr, r3                           #! PC = 0x8005b20 *)
cast lr@sint32 lr;
smull tmp_h tmp_l lr r3;
uadds carry r12 tmp_l r12;
sadc r7 tmp_h r7 carry;
assert eqmod r12 0 (2**32) && true;
assume eq r12 0 && true;
(* smull	r12, r11, r11, r1                         #! PC = 0x8005b24 *)
smull r11 r12 r11 r1;
(* mul.w	lr, r12, r2                               #! PC = 0x8005b28 *)
cast r12_s@sint32 r12;
mull discard lr r12_s r2;
(* smlal	r12, r11, lr, r3                          #! PC = 0x8005b2c *)
cast lr@sint32 lr;
smull tmp_h tmp_l lr r3;
uadds carry r12 tmp_l r12;
sadc r11 tmp_h r11 carry;
assert eqmod r12 0 (2**32) && true;
assume eq r12 0 && true;
(* add	r4, r6                                      #! PC = 0x8005b30 *)
add r4 r4 r6;
(* add	r5, r7                                      #! PC = 0x8005b32 *)
add r5 r5 r7;
(* add	r8, r10                                     #! PC = 0x8005b34 *)
add r8 r8 r10;
(* add	r9, r11                                     #! PC = 0x8005b36 *)
add r9 r9 r11;
(* sub.w	r6, r4, r6, lsl #1                        #! PC = 0x8005b38 *)
shl tmp r6 1;
sub r6 r4 tmp;
(* sub.w	r7, r5, r7, lsl #1                        #! PC = 0x8005b3c *)
shl tmp r7 1;
sub r7 r5 tmp;
(* sub.w	r10, r8, r10, lsl #1                      #! PC = 0x8005b40 *)
shl tmp r10 1;
sub r10 r8 tmp;
(* sub.w	r11, r9, r11, lsl #1                      #! PC = 0x8005b44 *)
shl tmp r11 1;
sub r11 r9 tmp;
(* vmov	r1, s7                                     #! PC = 0x8005b48 *)
mov r1 s7;
(* smull	r12, r8, r8, r1                           #! PC = 0x8005b4c *)
smull r8 r12 r8 r1;
(* mul.w	lr, r12, r2                               #! PC = 0x8005b50 *)
cast r12_s@sint32 r12;
mull discard lr r12_s r2;
(* smlal	r12, r8, lr, r3                           #! PC = 0x8005b54 *)
cast lr@sint32 lr;
smull tmp_h tmp_l lr r3;
uadds carry r12 tmp_l r12;
sadc r8 tmp_h r8 carry;
assert eqmod r12 0 (2**32) && true;
assume eq r12 0 && true;
(* vmov	r1, s8                                     #! PC = 0x8005b58 *)
mov r1 s8;
(* smull	r12, r9, r9, r1                           #! PC = 0x8005b5c *)
smull r9 r12 r9 r1;
(* mul.w	lr, r12, r2                               #! PC = 0x8005b60 *)
cast r12_s@sint32 r12;
mull discard lr r12_s r2;
(* smlal	r12, r9, lr, r3                           #! PC = 0x8005b64 *)
cast lr@sint32 lr;
smull tmp_h tmp_l lr r3;
uadds carry r12 tmp_l r12;
sadc r9 tmp_h r9 carry;
assert eqmod r12 0 (2**32) && true;
assume eq r12 0 && true;
(* vmov	r1, s9                                     #! PC = 0x8005b68 *)
mov r1 s9;
(* smull	r12, r10, r10, r1                         #! PC = 0x8005b6c *)
smull r10 r12 r10 r1;
(* mul.w	lr, r12, r2                               #! PC = 0x8005b70 *)
cast r12_s@sint32 r12;
mull discard lr r12_s r2;
(* smlal	r12, r10, lr, r3                          #! PC = 0x8005b74 *)
cast lr@sint32 lr;
smull tmp_h tmp_l lr r3;
uadds carry r12 tmp_l r12;
sadc r10 tmp_h r10 carry;
assert eqmod r12 0 (2**32) && true;
assume eq r12 0 && true;
(* vmov	r1, s10                                    #! PC = 0x8005b78 *)
mov r1 s10;
(* smull	r12, r11, r11, r1                         #! PC = 0x8005b7c *)
smull r11 r12 r11 r1;
(* mul.w	lr, r12, r2                               #! PC = 0x8005b80 *)
cast r12_s@sint32 r12;
mull discard lr r12_s r2;
(* smlal	r12, r11, lr, r3                          #! PC = 0x8005b84 *)
cast lr@sint32 lr;
smull tmp_h tmp_l lr r3;
uadds carry r12 tmp_l r12;
sadc r11 tmp_h r11 carry;
assert eqmod r12 0 (2**32) && true;
assume eq r12 0 && true;
(* add	r4, r8                                      #! PC = 0x8005b88 *)
add r4 r4 r8;
(* add	r5, r9                                      #! PC = 0x8005b8a *)
add r5 r5 r9;
(* add	r6, r10                                     #! PC = 0x8005b8c *)
add r6 r6 r10;
(* add	r7, r11                                     #! PC = 0x8005b8e *)
add r7 r7 r11;
(* sub.w	r8, r4, r8, lsl #1                        #! PC = 0x8005b90 *)
shl tmp r8 1;
sub r8 r4 tmp;
(* sub.w	r9, r5, r9, lsl #1                        #! PC = 0x8005b94 *)
shl tmp r9 1;
sub r9 r5 tmp;
(* sub.w	r10, r6, r10, lsl #1                      #! PC = 0x8005b98 *)
shl tmp r10 1;
sub r10 r6 tmp;
(* sub.w	r11, r7, r11, lsl #1                      #! PC = 0x8005b9c *)
shl tmp r11 1;
sub r11 r7 tmp;
(* vmov	r1, s11                                    #! PC = 0x8005ba0 *)
mov r1 s11;
(* smull	r12, r4, r4, r1                           #! PC = 0x8005ba4 *)
smull r4 r12 r4 r1;
(* mul.w	lr, r12, r2                               #! PC = 0x8005ba8 *)
cast r12_s@sint32 r12;
mull discard lr r12_s r2;
(* smlal	r12, r4, lr, r3                           #! PC = 0x8005bac *)
cast lr@sint32 lr;
smull tmp_h tmp_l lr r3;
uadds carry r12 tmp_l r12;
sadc r4 tmp_h r4 carry;
assert eqmod r12 0 (2**32) && true;
assume eq r12 0 && true;
(* vmov	r1, s12                                    #! PC = 0x8005bb0 *)
mov r1 s12;
(* smull	r12, r5, r5, r1                           #! PC = 0x8005bb4 *)
smull r5 r12 r5 r1;
(* mul.w	lr, r12, r2                               #! PC = 0x8005bb8 *)
cast r12_s@sint32 r12;
mull discard lr r12_s r2;
(* smlal	r12, r5, lr, r3                           #! PC = 0x8005bbc *)
cast lr@sint32 lr;
smull tmp_h tmp_l lr r3;
uadds carry r12 tmp_l r12;
sadc r5 tmp_h r5 carry;
assert eqmod r12 0 (2**32) && true;
assume eq r12 0 && true;
(* vmov	r1, s13                                    #! PC = 0x8005bc0 *)
mov r1 s13;
(* smull	r12, r6, r6, r1                           #! PC = 0x8005bc4 *)
smull r6 r12 r6 r1;
(* mul.w	lr, r12, r2                               #! PC = 0x8005bc8 *)
cast r12_s@sint32 r12;
mull discard lr r12_s r2;
(* smlal	r12, r6, lr, r3                           #! PC = 0x8005bcc *)
cast lr@sint32 lr;
smull tmp_h tmp_l lr r3;
uadds carry r12 tmp_l r12;
sadc r6 tmp_h r6 carry;
assert eqmod r12 0 (2**32) && true;
assume eq r12 0 && true;
(* vmov	r1, s14                                    #! PC = 0x8005bd0 *)
mov r1 s14;
(* smull	r12, r7, r7, r1                           #! PC = 0x8005bd4 *)
smull r7 r12 r7 r1;
(* mul.w	lr, r12, r2                               #! PC = 0x8005bd8 *)
cast r12_s@sint32 r12;
mull discard lr r12_s r2;
(* smlal	r12, r7, lr, r3                           #! PC = 0x8005bdc *)
cast lr@sint32 lr;
smull tmp_h tmp_l lr r3;
uadds carry r12 tmp_l r12;
sadc r7 tmp_h r7 carry;
assert eqmod r12 0 (2**32) && true;
assume eq r12 0 && true;
(* vmov	r1, s15                                    #! PC = 0x8005be0 *)
mov r1 s15;
(* smull	r12, r8, r8, r1                           #! PC = 0x8005be4 *)
smull r8 r12 r8 r1;
(* mul.w	lr, r12, r2                               #! PC = 0x8005be8 *)
cast r12_s@sint32 r12;
mull discard lr r12_s r2;
(* smlal	r12, r8, lr, r3                           #! PC = 0x8005bec *)
cast lr@sint32 lr;
smull tmp_h tmp_l lr r3;
uadds carry r12 tmp_l r12;
sadc r8 tmp_h r8 carry;
assert eqmod r12 0 (2**32) && true;
assume eq r12 0 && true;
(* vmov	r1, s16                                    #! PC = 0x8005bf0 *)
mov r1 s16;
(* smull	r12, r9, r9, r1                           #! PC = 0x8005bf4 *)
smull r9 r12 r9 r1;
(* mul.w	lr, r12, r2                               #! PC = 0x8005bf8 *)
cast r12_s@sint32 r12;
mull discard lr r12_s r2;
(* smlal	r12, r9, lr, r3                           #! PC = 0x8005bfc *)
cast lr@sint32 lr;
smull tmp_h tmp_l lr r3;
uadds carry r12 tmp_l r12;
sadc r9 tmp_h r9 carry;
assert eqmod r12 0 (2**32) && true;
assume eq r12 0 && true;
(* vmov	r1, s17                                    #! PC = 0x8005c00 *)
mov r1 s17;
(* smull	r12, r10, r10, r1                         #! PC = 0x8005c04 *)
smull r10 r12 r10 r1;
(* mul.w	lr, r12, r2                               #! PC = 0x8005c08 *)
cast r12_s@sint32 r12;
mull discard lr r12_s r2;
(* smlal	r12, r10, lr, r3                          #! PC = 0x8005c0c *)
cast lr@sint32 lr;
smull tmp_h tmp_l lr r3;
uadds carry r12 tmp_l r12;
sadc r10 tmp_h r10 carry;
assert eqmod r12 0 (2**32) && true;
assume eq r12 0 && true;
(* vmov	r1, s18                                    #! PC = 0x8005c10 *)
mov r1 s18;
(* smull	r12, r11, r11, r1                         #! PC = 0x8005c14 *)
smull r11 r12 r11 r1;
(* mul.w	lr, r12, r2                               #! PC = 0x8005c18 *)
cast r12_s@sint32 r12;
mull discard lr r12_s r2;
(* smlal	r12, r11, lr, r3                          #! PC = 0x8005c1c *)
cast lr@sint32 lr;
smull tmp_h tmp_l lr r3;
uadds carry r12 tmp_l r12;
sadc r11 tmp_h r11 carry;
assert eqmod r12 0 (2**32) && true;
assume eq r12 0 && true;
(* mov.w	r1, r3, lsr #1                            #! PC = 0x8005c20 *)
split r1 discard r3 1;
(* cmp	r4, r1                                      #! PC = 0x8005c24 *)
sub cmp r4 r1;
split sign discard cmp 31;
cast sign@bit sign;
cmov tmp sign 0@sint32 r3;
sub r4 r4 tmp;
(* cmn	r4, r1                                      #! PC = 0x8005c2a *)
add cmn r4 r1;
split sign discard cmn 31;
cast sign@bit sign;
cmov tmp sign r3 0@sint32;
add r4 r4 tmp;
(* cmp	r5, r1                                      #! PC = 0x8005c30 *)
sub cmp r5 r1;
split sign discard cmp 31;
cast sign@bit sign;
cmov tmp sign 0@sint32 r3;
sub r5 r5 tmp;
(* cmn	r5, r1                                      #! PC = 0x8005c36 *)
add cmn r5 r1;
split sign discard cmn 31;
cast sign@bit sign;
cmov tmp sign r3 0@sint32;
add r5 r5 tmp;
(* cmp	r6, r1                                      #! PC = 0x8005c3c *)
sub cmp r6 r1;
split sign discard cmp 31;
cast sign@bit sign;
cmov tmp sign 0@sint32 r3;
sub r6 r6 tmp;
(* cmn	r6, r1                                      #! PC = 0x8005c42 *)
add cmn r6 r1;
split sign discard cmn 31;
cast sign@bit sign;
cmov tmp sign r3 0@sint32;
add r6 r6 tmp;
(* cmp	r7, r1                                      #! PC = 0x8005c48 *)
sub cmp r7 r1;
split sign discard cmp 31;
cast sign@bit sign;
cmov tmp sign 0@sint32 r3;
sub r7 r7 tmp;
(* cmn	r7, r1                                      #! PC = 0x8005c4e *)
add cmn r7 r1;
split sign discard cmn 31;
cast sign@bit sign;
cmov tmp sign r3 0@sint32;
add r7 r7 tmp;
(* cmp	r8, r1                                      #! PC = 0x8005c54 *)
sub cmp r8 r1;
split sign discard cmp 31;
cast sign@bit sign;
cmov tmp sign 0@sint32 r3;
sub r8 r8 tmp;
(* cmn.w	r8, r1                                    #! PC = 0x8005c5c *)
add cmn r8 r1;
split sign discard cmn 31;
cast sign@bit sign;
cmov tmp sign r3 0@sint32;
add r8 r8 tmp;
(* cmp	r9, r1                                      #! PC = 0x8005c64 *)
sub cmp r9 r1;
split sign discard cmp 31;
cast sign@bit sign;
cmov tmp sign 0@sint32 r3;
sub r9 r9 tmp;
(* cmn.w	r9, r1                                    #! PC = 0x8005c6c *)
add cmn r9 r1;
split sign discard cmn 31;
cast sign@bit sign;
cmov tmp sign r3 0@sint32;
add r9 r9 tmp;
(* cmp	r10, r1                                     #! PC = 0x8005c74 *)
sub cmp r10 r1;
split sign discard cmp 31;
cast sign@bit sign;
cmov tmp sign 0@sint32 r3;
sub r10 r10 tmp;
(* cmn.w	r10, r1                                   #! PC = 0x8005c7c *)
add cmn r10 r1;
split sign discard cmn 31;
cast sign@bit sign;
cmov tmp sign r3 0@sint32;
add r10 r10 tmp;
(* cmp	r11, r1                                     #! PC = 0x8005c84 *)
sub cmp r11 r1;
split sign discard cmp 31;
cast sign@bit sign;
cmov tmp sign 0@sint32 r3;
sub r11 r11 tmp;
(* cmn.w	r11, r1                                   #! PC = 0x8005c8c *)
add cmn r11 r1;
split sign discard cmn 31;
cast sign@bit sign;
cmov tmp sign r3 0@sint32;
add r11 r11 tmp;
(* vmov	lr, s0                                     #! PC = 0x8005c94 *)
mov lr s0;
(* strh.w	r8, [lr, #256]	; 0x100                   #! EA = L0x2001995a; PC = 0x8005c98 *)
ghost L0x2001995a_f@sint32 : L0x2001995a_f = r8 && L0x2001995a_f = r8;
split discard L0x2001995a_u r8 16;
cast L0x2001995a@sint16 L0x2001995a_u;
(* strh.w	r9, [lr, #320]	; 0x140                   #! EA = L0x2001999a; PC = 0x8005c9c *)
ghost L0x2001999a_f@sint32 : L0x2001999a_f = r9 && L0x2001999a_f = r9;
split discard L0x2001999a_u r9 16;
cast L0x2001999a@sint16 L0x2001999a_u;
(* strh.w	r10, [lr, #384]	; 0x180                  #! EA = L0x200199da; PC = 0x8005ca0 *)
ghost L0x200199da_f@sint32 : L0x200199da_f = r10 && L0x200199da_f = r10;
split discard L0x200199da_u r10 16;
cast L0x200199da@sint16 L0x200199da_u;
(* strh.w	r11, [lr, #448]	; 0x1c0                  #! EA = L0x20019a1a; PC = 0x8005ca4 *)
ghost L0x20019a1a_f@sint32 : L0x20019a1a_f = r11 && L0x20019a1a_f = r11;
split discard L0x20019a1a_u r11 16;
cast L0x20019a1a@sint16 L0x20019a1a_u;
(* strh.w	r5, [lr, #64]	; 0x40                     #! EA = L0x2001989a; PC = 0x8005ca8 *)
ghost L0x2001989a_f@sint32 : L0x2001989a_f = r5 && L0x2001989a_f = r5;
split discard L0x2001989a_u r5 16;
cast L0x2001989a@sint16 L0x2001989a_u;
(* strh.w	r6, [lr, #128]	; 0x80                    #! EA = L0x200198da; PC = 0x8005cac *)
ghost L0x200198da_f@sint32 : L0x200198da_f = r6 && L0x200198da_f = r6;
split discard L0x200198da_u r6 16;
cast L0x200198da@sint16 L0x200198da_u;
(* strh.w	r7, [lr, #192]	; 0xc0                    #! EA = L0x2001991a; PC = 0x8005cb0 *)
ghost L0x2001991a_f@sint32 : L0x2001991a_f = r7 && L0x2001991a_f = r7;
split discard L0x2001991a_u r7 16;
cast L0x2001991a@sint16 L0x2001991a_u;
(* strh.w	r4, [lr], #2                             #! EA = L0x2001985a; PC = 0x8005cb4 *)
ghost L0x2001985a_f@sint32 : L0x2001985a_f = r4 && L0x2001985a_f = r4;
split discard L0x2001985a_u r4 16;
cast L0x2001985a@sint16 L0x2001985a_u;
(* vmov	s0, lr                                     #! PC = 0x8005cb8 *)
mov s0 lr;
(* vmov	lr, s3                                     #! PC = 0x8005cbc *)
mov lr s3;
(* ldr.w	r8, [r0, #512]	; 0x200                    #! EA = L0x2001a470; Value = 0x0348138f; PC = 0x800585c *)
mov r8 L0x2001a470;
(* ldr.w	r9, [r0, #640]	; 0x280                    #! EA = L0x2001a4f0; Value = 0x011adfa5; PC = 0x8005860 *)
mov r9 L0x2001a4f0;
(* ldr.w	r10, [r0, #768]	; 0x300                   #! EA = L0x2001a570; Value = 0x01762026; PC = 0x8005864 *)
mov r10 L0x2001a570;
(* ldr.w	r11, [r0, #896]	; 0x380                   #! EA = L0x2001a5f0; Value = 0x00d7e2ca; PC = 0x8005868 *)
mov r11 L0x2001a5f0;
(* ldr.w	r5, [r0, #128]	; 0x80                     #! EA = L0x2001a2f0; Value = 0x00867786; PC = 0x800586c *)
mov r5 L0x2001a2f0;
(* ldr.w	r6, [r0, #256]	; 0x100                    #! EA = L0x2001a370; Value = 0x0161eead; PC = 0x8005870 *)
mov r6 L0x2001a370;
(* ldr.w	r7, [r0, #384]	; 0x180                    #! EA = L0x2001a3f0; Value = 0x0194551d; PC = 0x8005874 *)
mov r7 L0x2001a3f0;
(* ldr.w	r4, [r0], #4                              #! EA = L0x2001a270; Value = 0x01228f5b; PC = 0x8005878 *)
mov r4 L0x2001a270;
(* vmov	r1, s4                                     #! PC = 0x800587c *)
mov r1 s4;
(* smull	r12, r5, r5, r1                           #! PC = 0x8005880 *)
smull r5 r12 r5 r1;
(* mul.w	lr, r12, r2                               #! PC = 0x8005884 *)
cast r12_s@sint32 r12;
mull discard lr r12_s r2;
(* smlal	r12, r5, lr, r3                           #! PC = 0x8005888 *)
cast lr@sint32 lr;
smull tmp_h tmp_l lr r3;
uadds carry r12 tmp_l r12;
sadc r5 tmp_h r5 carry;
assert eqmod r12 0 (2**32) && true;
assume eq r12 0 && true;
(* smull	r12, r7, r7, r1                           #! PC = 0x800588c *)
smull r7 r12 r7 r1;
(* mul.w	lr, r12, r2                               #! PC = 0x8005890 *)
cast r12_s@sint32 r12;
mull discard lr r12_s r2;
(* smlal	r12, r7, lr, r3                           #! PC = 0x8005894 *)
cast lr@sint32 lr;
smull tmp_h tmp_l lr r3;
uadds carry r12 tmp_l r12;
sadc r7 tmp_h r7 carry;
assert eqmod r12 0 (2**32) && true;
assume eq r12 0 && true;
(* smull	r12, r9, r9, r1                           #! PC = 0x8005898 *)
smull r9 r12 r9 r1;
(* mul.w	lr, r12, r2                               #! PC = 0x800589c *)
cast r12_s@sint32 r12;
mull discard lr r12_s r2;
(* smlal	r12, r9, lr, r3                           #! PC = 0x80058a0 *)
cast lr@sint32 lr;
smull tmp_h tmp_l lr r3;
uadds carry r12 tmp_l r12;
sadc r9 tmp_h r9 carry;
assert eqmod r12 0 (2**32) && true;
assume eq r12 0 && true;
(* smull	r12, r11, r11, r1                         #! PC = 0x80058a4 *)
smull r11 r12 r11 r1;
(* mul.w	lr, r12, r2                               #! PC = 0x80058a8 *)
cast r12_s@sint32 r12;
mull discard lr r12_s r2;
(* smlal	r12, r11, lr, r3                          #! PC = 0x80058ac *)
cast lr@sint32 lr;
smull tmp_h tmp_l lr r3;
uadds carry r12 tmp_l r12;
sadc r11 tmp_h r11 carry;
assert eqmod r12 0 (2**32) && true;
assume eq r12 0 && true;
(* add	r4, r5                                      #! PC = 0x80058b0 *)
add r4 r4 r5;
(* add	r6, r7                                      #! PC = 0x80058b2 *)
add r6 r6 r7;
(* add	r8, r9                                      #! PC = 0x80058b4 *)
add r8 r8 r9;
(* add	r10, r11                                    #! PC = 0x80058b6 *)
add r10 r10 r11;
(* sub.w	r5, r4, r5, lsl #1                        #! PC = 0x80058b8 *)
shl tmp r5 1;
sub r5 r4 tmp;
(* sub.w	r7, r6, r7, lsl #1                        #! PC = 0x80058bc *)
shl tmp r7 1;
sub r7 r6 tmp;
(* sub.w	r9, r8, r9, lsl #1                        #! PC = 0x80058c0 *)
shl tmp r9 1;
sub r9 r8 tmp;
(* sub.w	r11, r10, r11, lsl #1                     #! PC = 0x80058c4 *)
shl tmp r11 1;
sub r11 r10 tmp;
(* vmov	r1, s5                                     #! PC = 0x80058c8 *)
mov r1 s5;
(* smull	r12, r6, r6, r1                           #! PC = 0x80058cc *)
smull r6 r12 r6 r1;
(* mul.w	lr, r12, r2                               #! PC = 0x80058d0 *)
cast r12_s@sint32 r12;
mull discard lr r12_s r2;
(* smlal	r12, r6, lr, r3                           #! PC = 0x80058d4 *)
cast lr@sint32 lr;
smull tmp_h tmp_l lr r3;
uadds carry r12 tmp_l r12;
sadc r6 tmp_h r6 carry;
assert eqmod r12 0 (2**32) && true;
assume eq r12 0 && true;
(* smull	r12, r10, r10, r1                         #! PC = 0x80058d8 *)
smull r10 r12 r10 r1;
(* mul.w	lr, r12, r2                               #! PC = 0x80058dc *)
cast r12_s@sint32 r12;
mull discard lr r12_s r2;
(* smlal	r12, r10, lr, r3                          #! PC = 0x80058e0 *)
cast lr@sint32 lr;
smull tmp_h tmp_l lr r3;
uadds carry r12 tmp_l r12;
sadc r10 tmp_h r10 carry;
assert eqmod r12 0 (2**32) && true;
assume eq r12 0 && true;
(* vmov	r1, s6                                     #! PC = 0x80058e4 *)
mov r1 s6;
(* smull	r12, r7, r7, r1                           #! PC = 0x80058e8 *)
smull r7 r12 r7 r1;
(* mul.w	lr, r12, r2                               #! PC = 0x80058ec *)
cast r12_s@sint32 r12;
mull discard lr r12_s r2;
(* smlal	r12, r7, lr, r3                           #! PC = 0x80058f0 *)
cast lr@sint32 lr;
smull tmp_h tmp_l lr r3;
uadds carry r12 tmp_l r12;
sadc r7 tmp_h r7 carry;
assert eqmod r12 0 (2**32) && true;
assume eq r12 0 && true;
(* smull	r12, r11, r11, r1                         #! PC = 0x80058f4 *)
smull r11 r12 r11 r1;
(* mul.w	lr, r12, r2                               #! PC = 0x80058f8 *)
cast r12_s@sint32 r12;
mull discard lr r12_s r2;
(* smlal	r12, r11, lr, r3                          #! PC = 0x80058fc *)
cast lr@sint32 lr;
smull tmp_h tmp_l lr r3;
uadds carry r12 tmp_l r12;
sadc r11 tmp_h r11 carry;
assert eqmod r12 0 (2**32) && true;
assume eq r12 0 && true;
(* add	r4, r6                                      #! PC = 0x8005900 *)
add r4 r4 r6;
(* add	r5, r7                                      #! PC = 0x8005902 *)
add r5 r5 r7;
(* add	r8, r10                                     #! PC = 0x8005904 *)
add r8 r8 r10;
(* add	r9, r11                                     #! PC = 0x8005906 *)
add r9 r9 r11;
(* sub.w	r6, r4, r6, lsl #1                        #! PC = 0x8005908 *)
shl tmp r6 1;
sub r6 r4 tmp;
(* sub.w	r7, r5, r7, lsl #1                        #! PC = 0x800590c *)
shl tmp r7 1;
sub r7 r5 tmp;
(* sub.w	r10, r8, r10, lsl #1                      #! PC = 0x8005910 *)
shl tmp r10 1;
sub r10 r8 tmp;
(* sub.w	r11, r9, r11, lsl #1                      #! PC = 0x8005914 *)
shl tmp r11 1;
sub r11 r9 tmp;
(* vmov	r1, s7                                     #! PC = 0x8005918 *)
mov r1 s7;
(* smull	r12, r8, r8, r1                           #! PC = 0x800591c *)
smull r8 r12 r8 r1;
(* mul.w	lr, r12, r2                               #! PC = 0x8005920 *)
cast r12_s@sint32 r12;
mull discard lr r12_s r2;
(* smlal	r12, r8, lr, r3                           #! PC = 0x8005924 *)
cast lr@sint32 lr;
smull tmp_h tmp_l lr r3;
uadds carry r12 tmp_l r12;
sadc r8 tmp_h r8 carry;
assert eqmod r12 0 (2**32) && true;
assume eq r12 0 && true;
(* vmov	r1, s8                                     #! PC = 0x8005928 *)
mov r1 s8;
(* smull	r12, r9, r9, r1                           #! PC = 0x800592c *)
smull r9 r12 r9 r1;
(* mul.w	lr, r12, r2                               #! PC = 0x8005930 *)
cast r12_s@sint32 r12;
mull discard lr r12_s r2;
(* smlal	r12, r9, lr, r3                           #! PC = 0x8005934 *)
cast lr@sint32 lr;
smull tmp_h tmp_l lr r3;
uadds carry r12 tmp_l r12;
sadc r9 tmp_h r9 carry;
assert eqmod r12 0 (2**32) && true;
assume eq r12 0 && true;
(* vmov	r1, s9                                     #! PC = 0x8005938 *)
mov r1 s9;
(* smull	r12, r10, r10, r1                         #! PC = 0x800593c *)
smull r10 r12 r10 r1;
(* mul.w	lr, r12, r2                               #! PC = 0x8005940 *)
cast r12_s@sint32 r12;
mull discard lr r12_s r2;
(* smlal	r12, r10, lr, r3                          #! PC = 0x8005944 *)
cast lr@sint32 lr;
smull tmp_h tmp_l lr r3;
uadds carry r12 tmp_l r12;
sadc r10 tmp_h r10 carry;
assert eqmod r12 0 (2**32) && true;
assume eq r12 0 && true;
(* vmov	r1, s10                                    #! PC = 0x8005948 *)
mov r1 s10;
(* smull	r12, r11, r11, r1                         #! PC = 0x800594c *)
smull r11 r12 r11 r1;
(* mul.w	lr, r12, r2                               #! PC = 0x8005950 *)
cast r12_s@sint32 r12;
mull discard lr r12_s r2;
(* smlal	r12, r11, lr, r3                          #! PC = 0x8005954 *)
cast lr@sint32 lr;
smull tmp_h tmp_l lr r3;
uadds carry r12 tmp_l r12;
sadc r11 tmp_h r11 carry;
assert eqmod r12 0 (2**32) && true;
assume eq r12 0 && true;
(* add	r4, r8                                      #! PC = 0x8005958 *)
add r4 r4 r8;
(* add	r5, r9                                      #! PC = 0x800595a *)
add r5 r5 r9;
(* add	r6, r10                                     #! PC = 0x800595c *)
add r6 r6 r10;
(* add	r7, r11                                     #! PC = 0x800595e *)
add r7 r7 r11;
(* sub.w	r8, r4, r8, lsl #1                        #! PC = 0x8005960 *)
shl tmp r8 1;
sub r8 r4 tmp;
(* sub.w	r9, r5, r9, lsl #1                        #! PC = 0x8005964 *)
shl tmp r9 1;
sub r9 r5 tmp;
(* sub.w	r10, r6, r10, lsl #1                      #! PC = 0x8005968 *)
shl tmp r10 1;
sub r10 r6 tmp;
(* sub.w	r11, r7, r11, lsl #1                      #! PC = 0x800596c *)
shl tmp r11 1;
sub r11 r7 tmp;
(* vmov	r1, s11                                    #! PC = 0x8005970 *)
mov r1 s11;
(* smull	r12, r4, r4, r1                           #! PC = 0x8005974 *)
smull r4 r12 r4 r1;
(* mul.w	lr, r12, r2                               #! PC = 0x8005978 *)
cast r12_s@sint32 r12;
mull discard lr r12_s r2;
(* smlal	r12, r4, lr, r3                           #! PC = 0x800597c *)
cast lr@sint32 lr;
smull tmp_h tmp_l lr r3;
uadds carry r12 tmp_l r12;
sadc r4 tmp_h r4 carry;
assert eqmod r12 0 (2**32) && true;
assume eq r12 0 && true;
(* vmov	r1, s12                                    #! PC = 0x8005980 *)
mov r1 s12;
(* smull	r12, r5, r5, r1                           #! PC = 0x8005984 *)
smull r5 r12 r5 r1;
(* mul.w	lr, r12, r2                               #! PC = 0x8005988 *)
cast r12_s@sint32 r12;
mull discard lr r12_s r2;
(* smlal	r12, r5, lr, r3                           #! PC = 0x800598c *)
cast lr@sint32 lr;
smull tmp_h tmp_l lr r3;
uadds carry r12 tmp_l r12;
sadc r5 tmp_h r5 carry;
assert eqmod r12 0 (2**32) && true;
assume eq r12 0 && true;
(* vmov	r1, s13                                    #! PC = 0x8005990 *)
mov r1 s13;
(* smull	r12, r6, r6, r1                           #! PC = 0x8005994 *)
smull r6 r12 r6 r1;
(* mul.w	lr, r12, r2                               #! PC = 0x8005998 *)
cast r12_s@sint32 r12;
mull discard lr r12_s r2;
(* smlal	r12, r6, lr, r3                           #! PC = 0x800599c *)
cast lr@sint32 lr;
smull tmp_h tmp_l lr r3;
uadds carry r12 tmp_l r12;
sadc r6 tmp_h r6 carry;
assert eqmod r12 0 (2**32) && true;
assume eq r12 0 && true;
(* vmov	r1, s14                                    #! PC = 0x80059a0 *)
mov r1 s14;
(* smull	r12, r7, r7, r1                           #! PC = 0x80059a4 *)
smull r7 r12 r7 r1;
(* mul.w	lr, r12, r2                               #! PC = 0x80059a8 *)
cast r12_s@sint32 r12;
mull discard lr r12_s r2;
(* smlal	r12, r7, lr, r3                           #! PC = 0x80059ac *)
cast lr@sint32 lr;
smull tmp_h tmp_l lr r3;
uadds carry r12 tmp_l r12;
sadc r7 tmp_h r7 carry;
assert eqmod r12 0 (2**32) && true;
assume eq r12 0 && true;
(* vmov	r1, s15                                    #! PC = 0x80059b0 *)
mov r1 s15;
(* smull	r12, r8, r8, r1                           #! PC = 0x80059b4 *)
smull r8 r12 r8 r1;
(* mul.w	lr, r12, r2                               #! PC = 0x80059b8 *)
cast r12_s@sint32 r12;
mull discard lr r12_s r2;
(* smlal	r12, r8, lr, r3                           #! PC = 0x80059bc *)
cast lr@sint32 lr;
smull tmp_h tmp_l lr r3;
uadds carry r12 tmp_l r12;
sadc r8 tmp_h r8 carry;
assert eqmod r12 0 (2**32) && true;
assume eq r12 0 && true;
(* vmov	r1, s16                                    #! PC = 0x80059c0 *)
mov r1 s16;
(* smull	r12, r9, r9, r1                           #! PC = 0x80059c4 *)
smull r9 r12 r9 r1;
(* mul.w	lr, r12, r2                               #! PC = 0x80059c8 *)
cast r12_s@sint32 r12;
mull discard lr r12_s r2;
(* smlal	r12, r9, lr, r3                           #! PC = 0x80059cc *)
cast lr@sint32 lr;
smull tmp_h tmp_l lr r3;
uadds carry r12 tmp_l r12;
sadc r9 tmp_h r9 carry;
assert eqmod r12 0 (2**32) && true;
assume eq r12 0 && true;
(* vmov	r1, s17                                    #! PC = 0x80059d0 *)
mov r1 s17;
(* smull	r12, r10, r10, r1                         #! PC = 0x80059d4 *)
smull r10 r12 r10 r1;
(* mul.w	lr, r12, r2                               #! PC = 0x80059d8 *)
cast r12_s@sint32 r12;
mull discard lr r12_s r2;
(* smlal	r12, r10, lr, r3                          #! PC = 0x80059dc *)
cast lr@sint32 lr;
smull tmp_h tmp_l lr r3;
uadds carry r12 tmp_l r12;
sadc r10 tmp_h r10 carry;
assert eqmod r12 0 (2**32) && true;
assume eq r12 0 && true;
(* vmov	r1, s18                                    #! PC = 0x80059e0 *)
mov r1 s18;
(* smull	r12, r11, r11, r1                         #! PC = 0x80059e4 *)
smull r11 r12 r11 r1;
(* mul.w	lr, r12, r2                               #! PC = 0x80059e8 *)
cast r12_s@sint32 r12;
mull discard lr r12_s r2;
(* smlal	r12, r11, lr, r3                          #! PC = 0x80059ec *)
cast lr@sint32 lr;
smull tmp_h tmp_l lr r3;
uadds carry r12 tmp_l r12;
sadc r11 tmp_h r11 carry;
assert eqmod r12 0 (2**32) && true;
assume eq r12 0 && true;
(* mov.w	r1, r3, lsr #1                            #! PC = 0x80059f0 *)
split r1 discard r3 1;
(* cmp	r4, r1                                      #! PC = 0x80059f4 *)
sub cmp r4 r1;
split sign discard cmp 31;
cast sign@bit sign;
cmov tmp sign 0@sint32 r3;
sub r4 r4 tmp;
(* cmn	r4, r1                                      #! PC = 0x80059fa *)
add cmn r4 r1;
split sign discard cmn 31;
cast sign@bit sign;
cmov tmp sign r3 0@sint32;
add r4 r4 tmp;
(* cmp	r5, r1                                      #! PC = 0x8005a00 *)
sub cmp r5 r1;
split sign discard cmp 31;
cast sign@bit sign;
cmov tmp sign 0@sint32 r3;
sub r5 r5 tmp;
(* cmn	r5, r1                                      #! PC = 0x8005a06 *)
add cmn r5 r1;
split sign discard cmn 31;
cast sign@bit sign;
cmov tmp sign r3 0@sint32;
add r5 r5 tmp;
(* cmp	r6, r1                                      #! PC = 0x8005a0c *)
sub cmp r6 r1;
split sign discard cmp 31;
cast sign@bit sign;
cmov tmp sign 0@sint32 r3;
sub r6 r6 tmp;
(* cmn	r6, r1                                      #! PC = 0x8005a12 *)
add cmn r6 r1;
split sign discard cmn 31;
cast sign@bit sign;
cmov tmp sign r3 0@sint32;
add r6 r6 tmp;
(* cmp	r7, r1                                      #! PC = 0x8005a18 *)
sub cmp r7 r1;
split sign discard cmp 31;
cast sign@bit sign;
cmov tmp sign 0@sint32 r3;
sub r7 r7 tmp;
(* cmn	r7, r1                                      #! PC = 0x8005a1e *)
add cmn r7 r1;
split sign discard cmn 31;
cast sign@bit sign;
cmov tmp sign r3 0@sint32;
add r7 r7 tmp;
(* cmp	r8, r1                                      #! PC = 0x8005a24 *)
sub cmp r8 r1;
split sign discard cmp 31;
cast sign@bit sign;
cmov tmp sign 0@sint32 r3;
sub r8 r8 tmp;
(* cmn.w	r8, r1                                    #! PC = 0x8005a2c *)
add cmn r8 r1;
split sign discard cmn 31;
cast sign@bit sign;
cmov tmp sign r3 0@sint32;
add r8 r8 tmp;
(* cmp	r9, r1                                      #! PC = 0x8005a34 *)
sub cmp r9 r1;
split sign discard cmp 31;
cast sign@bit sign;
cmov tmp sign 0@sint32 r3;
sub r9 r9 tmp;
(* cmn.w	r9, r1                                    #! PC = 0x8005a3c *)
add cmn r9 r1;
split sign discard cmn 31;
cast sign@bit sign;
cmov tmp sign r3 0@sint32;
add r9 r9 tmp;
(* cmp	r10, r1                                     #! PC = 0x8005a44 *)
sub cmp r10 r1;
split sign discard cmp 31;
cast sign@bit sign;
cmov tmp sign 0@sint32 r3;
sub r10 r10 tmp;
(* cmn.w	r10, r1                                   #! PC = 0x8005a4c *)
add cmn r10 r1;
split sign discard cmn 31;
cast sign@bit sign;
cmov tmp sign r3 0@sint32;
add r10 r10 tmp;
(* cmp	r11, r1                                     #! PC = 0x8005a54 *)
sub cmp r11 r1;
split sign discard cmp 31;
cast sign@bit sign;
cmov tmp sign 0@sint32 r3;
sub r11 r11 tmp;
(* cmn.w	r11, r1                                   #! PC = 0x8005a5c *)
add cmn r11 r1;
split sign discard cmn 31;
cast sign@bit sign;
cmov tmp sign r3 0@sint32;
add r11 r11 tmp;
(* vmov	lr, s0                                     #! PC = 0x8005a64 *)
mov lr s0;
(* strh.w	r8, [lr, #256]	; 0x100                   #! EA = L0x2001995c; PC = 0x8005a68 *)
ghost L0x2001995c_f@sint32 : L0x2001995c_f = r8 && L0x2001995c_f = r8;
split discard L0x2001995c_u r8 16;
cast L0x2001995c@sint16 L0x2001995c_u;
(* strh.w	r9, [lr, #320]	; 0x140                   #! EA = L0x2001999c; PC = 0x8005a6c *)
ghost L0x2001999c_f@sint32 : L0x2001999c_f = r9 && L0x2001999c_f = r9;
split discard L0x2001999c_u r9 16;
cast L0x2001999c@sint16 L0x2001999c_u;
(* strh.w	r10, [lr, #384]	; 0x180                  #! EA = L0x200199dc; PC = 0x8005a70 *)
ghost L0x200199dc_f@sint32 : L0x200199dc_f = r10 && L0x200199dc_f = r10;
split discard L0x200199dc_u r10 16;
cast L0x200199dc@sint16 L0x200199dc_u;
(* strh.w	r11, [lr, #448]	; 0x1c0                  #! EA = L0x20019a1c; PC = 0x8005a74 *)
ghost L0x20019a1c_f@sint32 : L0x20019a1c_f = r11 && L0x20019a1c_f = r11;
split discard L0x20019a1c_u r11 16;
cast L0x20019a1c@sint16 L0x20019a1c_u;
(* strh.w	r5, [lr, #64]	; 0x40                     #! EA = L0x2001989c; PC = 0x8005a78 *)
ghost L0x2001989c_f@sint32 : L0x2001989c_f = r5 && L0x2001989c_f = r5;
split discard L0x2001989c_u r5 16;
cast L0x2001989c@sint16 L0x2001989c_u;
(* strh.w	r6, [lr, #128]	; 0x80                    #! EA = L0x200198dc; PC = 0x8005a7c *)
ghost L0x200198dc_f@sint32 : L0x200198dc_f = r6 && L0x200198dc_f = r6;
split discard L0x200198dc_u r6 16;
cast L0x200198dc@sint16 L0x200198dc_u;
(* strh.w	r7, [lr, #192]	; 0xc0                    #! EA = L0x2001991c; PC = 0x8005a80 *)
ghost L0x2001991c_f@sint32 : L0x2001991c_f = r7 && L0x2001991c_f = r7;
split discard L0x2001991c_u r7 16;
cast L0x2001991c@sint16 L0x2001991c_u;
(* strh.w	r4, [lr], #2                             #! EA = L0x2001985c; PC = 0x8005a84 *)
ghost L0x2001985c_f@sint32 : L0x2001985c_f = r4 && L0x2001985c_f = r4;
split discard L0x2001985c_u r4 16;
cast L0x2001985c@sint16 L0x2001985c_u;
(* vmov	s0, lr                                     #! PC = 0x8005a88 *)
mov s0 lr;
(* ldr.w	r8, [r0, #512]	; 0x200                    #! EA = L0x2001a474; Value = 0xfd892bdd; PC = 0x8005a8c *)
mov r8 L0x2001a474;
(* ldr.w	r9, [r0, #640]	; 0x280                    #! EA = L0x2001a4f4; Value = 0xffc91b55; PC = 0x8005a90 *)
mov r9 L0x2001a4f4;
(* ldr.w	r10, [r0, #768]	; 0x300                   #! EA = L0x2001a574; Value = 0x0065f085; PC = 0x8005a94 *)
mov r10 L0x2001a574;
(* ldr.w	r11, [r0, #896]	; 0x380                   #! EA = L0x2001a5f4; Value = 0x00574a1f; PC = 0x8005a98 *)
mov r11 L0x2001a5f4;
(* ldr.w	r5, [r0, #128]	; 0x80                     #! EA = L0x2001a2f4; Value = 0x018cf670; PC = 0x8005a9c *)
mov r5 L0x2001a2f4;
(* ldr.w	r6, [r0, #256]	; 0x100                    #! EA = L0x2001a374; Value = 0x008ad4d5; PC = 0x8005aa0 *)
mov r6 L0x2001a374;
(* ldr.w	r7, [r0, #384]	; 0x180                    #! EA = L0x2001a3f4; Value = 0xfeea9fa3; PC = 0x8005aa4 *)
mov r7 L0x2001a3f4;
(* ldr.w	r4, [r0], #4                              #! EA = L0x2001a274; Value = 0xff1461ef; PC = 0x8005aa8 *)
mov r4 L0x2001a274;
(* vmov	r1, s4                                     #! PC = 0x8005aac *)
mov r1 s4;
(* smull	r12, r5, r5, r1                           #! PC = 0x8005ab0 *)
smull r5 r12 r5 r1;
(* mul.w	lr, r12, r2                               #! PC = 0x8005ab4 *)
cast r12_s@sint32 r12;
mull discard lr r12_s r2;
(* smlal	r12, r5, lr, r3                           #! PC = 0x8005ab8 *)
cast lr@sint32 lr;
smull tmp_h tmp_l lr r3;
uadds carry r12 tmp_l r12;
sadc r5 tmp_h r5 carry;
assert eqmod r12 0 (2**32) && true;
assume eq r12 0 && true;
(* smull	r12, r7, r7, r1                           #! PC = 0x8005abc *)
smull r7 r12 r7 r1;
(* mul.w	lr, r12, r2                               #! PC = 0x8005ac0 *)
cast r12_s@sint32 r12;
mull discard lr r12_s r2;
(* smlal	r12, r7, lr, r3                           #! PC = 0x8005ac4 *)
cast lr@sint32 lr;
smull tmp_h tmp_l lr r3;
uadds carry r12 tmp_l r12;
sadc r7 tmp_h r7 carry;
assert eqmod r12 0 (2**32) && true;
assume eq r12 0 && true;
(* smull	r12, r9, r9, r1                           #! PC = 0x8005ac8 *)
smull r9 r12 r9 r1;
(* mul.w	lr, r12, r2                               #! PC = 0x8005acc *)
cast r12_s@sint32 r12;
mull discard lr r12_s r2;
(* smlal	r12, r9, lr, r3                           #! PC = 0x8005ad0 *)
cast lr@sint32 lr;
smull tmp_h tmp_l lr r3;
uadds carry r12 tmp_l r12;
sadc r9 tmp_h r9 carry;
assert eqmod r12 0 (2**32) && true;
assume eq r12 0 && true;
(* smull	r12, r11, r11, r1                         #! PC = 0x8005ad4 *)
smull r11 r12 r11 r1;
(* mul.w	lr, r12, r2                               #! PC = 0x8005ad8 *)
cast r12_s@sint32 r12;
mull discard lr r12_s r2;
(* smlal	r12, r11, lr, r3                          #! PC = 0x8005adc *)
cast lr@sint32 lr;
smull tmp_h tmp_l lr r3;
uadds carry r12 tmp_l r12;
sadc r11 tmp_h r11 carry;
assert eqmod r12 0 (2**32) && true;
assume eq r12 0 && true;
(* add	r4, r5                                      #! PC = 0x8005ae0 *)
add r4 r4 r5;
(* add	r6, r7                                      #! PC = 0x8005ae2 *)
add r6 r6 r7;
(* add	r8, r9                                      #! PC = 0x8005ae4 *)
add r8 r8 r9;
(* add	r10, r11                                    #! PC = 0x8005ae6 *)
add r10 r10 r11;
(* sub.w	r5, r4, r5, lsl #1                        #! PC = 0x8005ae8 *)
shl tmp r5 1;
sub r5 r4 tmp;
(* sub.w	r7, r6, r7, lsl #1                        #! PC = 0x8005aec *)
shl tmp r7 1;
sub r7 r6 tmp;
(* sub.w	r9, r8, r9, lsl #1                        #! PC = 0x8005af0 *)
shl tmp r9 1;
sub r9 r8 tmp;
(* sub.w	r11, r10, r11, lsl #1                     #! PC = 0x8005af4 *)
shl tmp r11 1;
sub r11 r10 tmp;
(* vmov	r1, s5                                     #! PC = 0x8005af8 *)
mov r1 s5;
(* smull	r12, r6, r6, r1                           #! PC = 0x8005afc *)
smull r6 r12 r6 r1;
(* mul.w	lr, r12, r2                               #! PC = 0x8005b00 *)
cast r12_s@sint32 r12;
mull discard lr r12_s r2;
(* smlal	r12, r6, lr, r3                           #! PC = 0x8005b04 *)
cast lr@sint32 lr;
smull tmp_h tmp_l lr r3;
uadds carry r12 tmp_l r12;
sadc r6 tmp_h r6 carry;
assert eqmod r12 0 (2**32) && true;
assume eq r12 0 && true;
(* smull	r12, r10, r10, r1                         #! PC = 0x8005b08 *)
smull r10 r12 r10 r1;
(* mul.w	lr, r12, r2                               #! PC = 0x8005b0c *)
cast r12_s@sint32 r12;
mull discard lr r12_s r2;
(* smlal	r12, r10, lr, r3                          #! PC = 0x8005b10 *)
cast lr@sint32 lr;
smull tmp_h tmp_l lr r3;
uadds carry r12 tmp_l r12;
sadc r10 tmp_h r10 carry;
assert eqmod r12 0 (2**32) && true;
assume eq r12 0 && true;
(* vmov	r1, s6                                     #! PC = 0x8005b14 *)
mov r1 s6;
(* smull	r12, r7, r7, r1                           #! PC = 0x8005b18 *)
smull r7 r12 r7 r1;
(* mul.w	lr, r12, r2                               #! PC = 0x8005b1c *)
cast r12_s@sint32 r12;
mull discard lr r12_s r2;
(* smlal	r12, r7, lr, r3                           #! PC = 0x8005b20 *)
cast lr@sint32 lr;
smull tmp_h tmp_l lr r3;
uadds carry r12 tmp_l r12;
sadc r7 tmp_h r7 carry;
assert eqmod r12 0 (2**32) && true;
assume eq r12 0 && true;
(* smull	r12, r11, r11, r1                         #! PC = 0x8005b24 *)
smull r11 r12 r11 r1;
(* mul.w	lr, r12, r2                               #! PC = 0x8005b28 *)
cast r12_s@sint32 r12;
mull discard lr r12_s r2;
(* smlal	r12, r11, lr, r3                          #! PC = 0x8005b2c *)
cast lr@sint32 lr;
smull tmp_h tmp_l lr r3;
uadds carry r12 tmp_l r12;
sadc r11 tmp_h r11 carry;
assert eqmod r12 0 (2**32) && true;
assume eq r12 0 && true;
(* add	r4, r6                                      #! PC = 0x8005b30 *)
add r4 r4 r6;
(* add	r5, r7                                      #! PC = 0x8005b32 *)
add r5 r5 r7;
(* add	r8, r10                                     #! PC = 0x8005b34 *)
add r8 r8 r10;
(* add	r9, r11                                     #! PC = 0x8005b36 *)
add r9 r9 r11;
(* sub.w	r6, r4, r6, lsl #1                        #! PC = 0x8005b38 *)
shl tmp r6 1;
sub r6 r4 tmp;
(* sub.w	r7, r5, r7, lsl #1                        #! PC = 0x8005b3c *)
shl tmp r7 1;
sub r7 r5 tmp;
(* sub.w	r10, r8, r10, lsl #1                      #! PC = 0x8005b40 *)
shl tmp r10 1;
sub r10 r8 tmp;
(* sub.w	r11, r9, r11, lsl #1                      #! PC = 0x8005b44 *)
shl tmp r11 1;
sub r11 r9 tmp;
(* vmov	r1, s7                                     #! PC = 0x8005b48 *)
mov r1 s7;
(* smull	r12, r8, r8, r1                           #! PC = 0x8005b4c *)
smull r8 r12 r8 r1;
(* mul.w	lr, r12, r2                               #! PC = 0x8005b50 *)
cast r12_s@sint32 r12;
mull discard lr r12_s r2;
(* smlal	r12, r8, lr, r3                           #! PC = 0x8005b54 *)
cast lr@sint32 lr;
smull tmp_h tmp_l lr r3;
uadds carry r12 tmp_l r12;
sadc r8 tmp_h r8 carry;
assert eqmod r12 0 (2**32) && true;
assume eq r12 0 && true;
(* vmov	r1, s8                                     #! PC = 0x8005b58 *)
mov r1 s8;
(* smull	r12, r9, r9, r1                           #! PC = 0x8005b5c *)
smull r9 r12 r9 r1;
(* mul.w	lr, r12, r2                               #! PC = 0x8005b60 *)
cast r12_s@sint32 r12;
mull discard lr r12_s r2;
(* smlal	r12, r9, lr, r3                           #! PC = 0x8005b64 *)
cast lr@sint32 lr;
smull tmp_h tmp_l lr r3;
uadds carry r12 tmp_l r12;
sadc r9 tmp_h r9 carry;
assert eqmod r12 0 (2**32) && true;
assume eq r12 0 && true;
(* vmov	r1, s9                                     #! PC = 0x8005b68 *)
mov r1 s9;
(* smull	r12, r10, r10, r1                         #! PC = 0x8005b6c *)
smull r10 r12 r10 r1;
(* mul.w	lr, r12, r2                               #! PC = 0x8005b70 *)
cast r12_s@sint32 r12;
mull discard lr r12_s r2;
(* smlal	r12, r10, lr, r3                          #! PC = 0x8005b74 *)
cast lr@sint32 lr;
smull tmp_h tmp_l lr r3;
uadds carry r12 tmp_l r12;
sadc r10 tmp_h r10 carry;
assert eqmod r12 0 (2**32) && true;
assume eq r12 0 && true;
(* vmov	r1, s10                                    #! PC = 0x8005b78 *)
mov r1 s10;
(* smull	r12, r11, r11, r1                         #! PC = 0x8005b7c *)
smull r11 r12 r11 r1;
(* mul.w	lr, r12, r2                               #! PC = 0x8005b80 *)
cast r12_s@sint32 r12;
mull discard lr r12_s r2;
(* smlal	r12, r11, lr, r3                          #! PC = 0x8005b84 *)
cast lr@sint32 lr;
smull tmp_h tmp_l lr r3;
uadds carry r12 tmp_l r12;
sadc r11 tmp_h r11 carry;
assert eqmod r12 0 (2**32) && true;
assume eq r12 0 && true;
(* add	r4, r8                                      #! PC = 0x8005b88 *)
add r4 r4 r8;
(* add	r5, r9                                      #! PC = 0x8005b8a *)
add r5 r5 r9;
(* add	r6, r10                                     #! PC = 0x8005b8c *)
add r6 r6 r10;
(* add	r7, r11                                     #! PC = 0x8005b8e *)
add r7 r7 r11;
(* sub.w	r8, r4, r8, lsl #1                        #! PC = 0x8005b90 *)
shl tmp r8 1;
sub r8 r4 tmp;
(* sub.w	r9, r5, r9, lsl #1                        #! PC = 0x8005b94 *)
shl tmp r9 1;
sub r9 r5 tmp;
(* sub.w	r10, r6, r10, lsl #1                      #! PC = 0x8005b98 *)
shl tmp r10 1;
sub r10 r6 tmp;
(* sub.w	r11, r7, r11, lsl #1                      #! PC = 0x8005b9c *)
shl tmp r11 1;
sub r11 r7 tmp;
(* vmov	r1, s11                                    #! PC = 0x8005ba0 *)
mov r1 s11;
(* smull	r12, r4, r4, r1                           #! PC = 0x8005ba4 *)
smull r4 r12 r4 r1;
(* mul.w	lr, r12, r2                               #! PC = 0x8005ba8 *)
cast r12_s@sint32 r12;
mull discard lr r12_s r2;
(* smlal	r12, r4, lr, r3                           #! PC = 0x8005bac *)
cast lr@sint32 lr;
smull tmp_h tmp_l lr r3;
uadds carry r12 tmp_l r12;
sadc r4 tmp_h r4 carry;
assert eqmod r12 0 (2**32) && true;
assume eq r12 0 && true;
(* vmov	r1, s12                                    #! PC = 0x8005bb0 *)
mov r1 s12;
(* smull	r12, r5, r5, r1                           #! PC = 0x8005bb4 *)
smull r5 r12 r5 r1;
(* mul.w	lr, r12, r2                               #! PC = 0x8005bb8 *)
cast r12_s@sint32 r12;
mull discard lr r12_s r2;
(* smlal	r12, r5, lr, r3                           #! PC = 0x8005bbc *)
cast lr@sint32 lr;
smull tmp_h tmp_l lr r3;
uadds carry r12 tmp_l r12;
sadc r5 tmp_h r5 carry;
assert eqmod r12 0 (2**32) && true;
assume eq r12 0 && true;
(* vmov	r1, s13                                    #! PC = 0x8005bc0 *)
mov r1 s13;
(* smull	r12, r6, r6, r1                           #! PC = 0x8005bc4 *)
smull r6 r12 r6 r1;
(* mul.w	lr, r12, r2                               #! PC = 0x8005bc8 *)
cast r12_s@sint32 r12;
mull discard lr r12_s r2;
(* smlal	r12, r6, lr, r3                           #! PC = 0x8005bcc *)
cast lr@sint32 lr;
smull tmp_h tmp_l lr r3;
uadds carry r12 tmp_l r12;
sadc r6 tmp_h r6 carry;
assert eqmod r12 0 (2**32) && true;
assume eq r12 0 && true;
(* vmov	r1, s14                                    #! PC = 0x8005bd0 *)
mov r1 s14;
(* smull	r12, r7, r7, r1                           #! PC = 0x8005bd4 *)
smull r7 r12 r7 r1;
(* mul.w	lr, r12, r2                               #! PC = 0x8005bd8 *)
cast r12_s@sint32 r12;
mull discard lr r12_s r2;
(* smlal	r12, r7, lr, r3                           #! PC = 0x8005bdc *)
cast lr@sint32 lr;
smull tmp_h tmp_l lr r3;
uadds carry r12 tmp_l r12;
sadc r7 tmp_h r7 carry;
assert eqmod r12 0 (2**32) && true;
assume eq r12 0 && true;
(* vmov	r1, s15                                    #! PC = 0x8005be0 *)
mov r1 s15;
(* smull	r12, r8, r8, r1                           #! PC = 0x8005be4 *)
smull r8 r12 r8 r1;
(* mul.w	lr, r12, r2                               #! PC = 0x8005be8 *)
cast r12_s@sint32 r12;
mull discard lr r12_s r2;
(* smlal	r12, r8, lr, r3                           #! PC = 0x8005bec *)
cast lr@sint32 lr;
smull tmp_h tmp_l lr r3;
uadds carry r12 tmp_l r12;
sadc r8 tmp_h r8 carry;
assert eqmod r12 0 (2**32) && true;
assume eq r12 0 && true;
(* vmov	r1, s16                                    #! PC = 0x8005bf0 *)
mov r1 s16;
(* smull	r12, r9, r9, r1                           #! PC = 0x8005bf4 *)
smull r9 r12 r9 r1;
(* mul.w	lr, r12, r2                               #! PC = 0x8005bf8 *)
cast r12_s@sint32 r12;
mull discard lr r12_s r2;
(* smlal	r12, r9, lr, r3                           #! PC = 0x8005bfc *)
cast lr@sint32 lr;
smull tmp_h tmp_l lr r3;
uadds carry r12 tmp_l r12;
sadc r9 tmp_h r9 carry;
assert eqmod r12 0 (2**32) && true;
assume eq r12 0 && true;
(* vmov	r1, s17                                    #! PC = 0x8005c00 *)
mov r1 s17;
(* smull	r12, r10, r10, r1                         #! PC = 0x8005c04 *)
smull r10 r12 r10 r1;
(* mul.w	lr, r12, r2                               #! PC = 0x8005c08 *)
cast r12_s@sint32 r12;
mull discard lr r12_s r2;
(* smlal	r12, r10, lr, r3                          #! PC = 0x8005c0c *)
cast lr@sint32 lr;
smull tmp_h tmp_l lr r3;
uadds carry r12 tmp_l r12;
sadc r10 tmp_h r10 carry;
assert eqmod r12 0 (2**32) && true;
assume eq r12 0 && true;
(* vmov	r1, s18                                    #! PC = 0x8005c10 *)
mov r1 s18;
(* smull	r12, r11, r11, r1                         #! PC = 0x8005c14 *)
smull r11 r12 r11 r1;
(* mul.w	lr, r12, r2                               #! PC = 0x8005c18 *)
cast r12_s@sint32 r12;
mull discard lr r12_s r2;
(* smlal	r12, r11, lr, r3                          #! PC = 0x8005c1c *)
cast lr@sint32 lr;
smull tmp_h tmp_l lr r3;
uadds carry r12 tmp_l r12;
sadc r11 tmp_h r11 carry;
assert eqmod r12 0 (2**32) && true;
assume eq r12 0 && true;
(* mov.w	r1, r3, lsr #1                            #! PC = 0x8005c20 *)
split r1 discard r3 1;
(* cmp	r4, r1                                      #! PC = 0x8005c24 *)
sub cmp r4 r1;
split sign discard cmp 31;
cast sign@bit sign;
cmov tmp sign 0@sint32 r3;
sub r4 r4 tmp;
(* cmn	r4, r1                                      #! PC = 0x8005c2a *)
add cmn r4 r1;
split sign discard cmn 31;
cast sign@bit sign;
cmov tmp sign r3 0@sint32;
add r4 r4 tmp;
(* cmp	r5, r1                                      #! PC = 0x8005c30 *)
sub cmp r5 r1;
split sign discard cmp 31;
cast sign@bit sign;
cmov tmp sign 0@sint32 r3;
sub r5 r5 tmp;
(* cmn	r5, r1                                      #! PC = 0x8005c36 *)
add cmn r5 r1;
split sign discard cmn 31;
cast sign@bit sign;
cmov tmp sign r3 0@sint32;
add r5 r5 tmp;
(* cmp	r6, r1                                      #! PC = 0x8005c3c *)
sub cmp r6 r1;
split sign discard cmp 31;
cast sign@bit sign;
cmov tmp sign 0@sint32 r3;
sub r6 r6 tmp;
(* cmn	r6, r1                                      #! PC = 0x8005c42 *)
add cmn r6 r1;
split sign discard cmn 31;
cast sign@bit sign;
cmov tmp sign r3 0@sint32;
add r6 r6 tmp;
(* cmp	r7, r1                                      #! PC = 0x8005c48 *)
sub cmp r7 r1;
split sign discard cmp 31;
cast sign@bit sign;
cmov tmp sign 0@sint32 r3;
sub r7 r7 tmp;
(* cmn	r7, r1                                      #! PC = 0x8005c4e *)
add cmn r7 r1;
split sign discard cmn 31;
cast sign@bit sign;
cmov tmp sign r3 0@sint32;
add r7 r7 tmp;
(* cmp	r8, r1                                      #! PC = 0x8005c54 *)
sub cmp r8 r1;
split sign discard cmp 31;
cast sign@bit sign;
cmov tmp sign 0@sint32 r3;
sub r8 r8 tmp;
(* cmn.w	r8, r1                                    #! PC = 0x8005c5c *)
add cmn r8 r1;
split sign discard cmn 31;
cast sign@bit sign;
cmov tmp sign r3 0@sint32;
add r8 r8 tmp;
(* cmp	r9, r1                                      #! PC = 0x8005c64 *)
sub cmp r9 r1;
split sign discard cmp 31;
cast sign@bit sign;
cmov tmp sign 0@sint32 r3;
sub r9 r9 tmp;
(* cmn.w	r9, r1                                    #! PC = 0x8005c6c *)
add cmn r9 r1;
split sign discard cmn 31;
cast sign@bit sign;
cmov tmp sign r3 0@sint32;
add r9 r9 tmp;
(* cmp	r10, r1                                     #! PC = 0x8005c74 *)
sub cmp r10 r1;
split sign discard cmp 31;
cast sign@bit sign;
cmov tmp sign 0@sint32 r3;
sub r10 r10 tmp;
(* cmn.w	r10, r1                                   #! PC = 0x8005c7c *)
add cmn r10 r1;
split sign discard cmn 31;
cast sign@bit sign;
cmov tmp sign r3 0@sint32;
add r10 r10 tmp;
(* cmp	r11, r1                                     #! PC = 0x8005c84 *)
sub cmp r11 r1;
split sign discard cmp 31;
cast sign@bit sign;
cmov tmp sign 0@sint32 r3;
sub r11 r11 tmp;
(* cmn.w	r11, r1                                   #! PC = 0x8005c8c *)
add cmn r11 r1;
split sign discard cmn 31;
cast sign@bit sign;
cmov tmp sign r3 0@sint32;
add r11 r11 tmp;
(* vmov	lr, s0                                     #! PC = 0x8005c94 *)
mov lr s0;
(* strh.w	r8, [lr, #256]	; 0x100                   #! EA = L0x2001995e; PC = 0x8005c98 *)
ghost L0x2001995e_f@sint32 : L0x2001995e_f = r8 && L0x2001995e_f = r8;
split discard L0x2001995e_u r8 16;
cast L0x2001995e@sint16 L0x2001995e_u;
(* strh.w	r9, [lr, #320]	; 0x140                   #! EA = L0x2001999e; PC = 0x8005c9c *)
ghost L0x2001999e_f@sint32 : L0x2001999e_f = r9 && L0x2001999e_f = r9;
split discard L0x2001999e_u r9 16;
cast L0x2001999e@sint16 L0x2001999e_u;
(* strh.w	r10, [lr, #384]	; 0x180                  #! EA = L0x200199de; PC = 0x8005ca0 *)
ghost L0x200199de_f@sint32 : L0x200199de_f = r10 && L0x200199de_f = r10;
split discard L0x200199de_u r10 16;
cast L0x200199de@sint16 L0x200199de_u;
(* strh.w	r11, [lr, #448]	; 0x1c0                  #! EA = L0x20019a1e; PC = 0x8005ca4 *)
ghost L0x20019a1e_f@sint32 : L0x20019a1e_f = r11 && L0x20019a1e_f = r11;
split discard L0x20019a1e_u r11 16;
cast L0x20019a1e@sint16 L0x20019a1e_u;
(* strh.w	r5, [lr, #64]	; 0x40                     #! EA = L0x2001989e; PC = 0x8005ca8 *)
ghost L0x2001989e_f@sint32 : L0x2001989e_f = r5 && L0x2001989e_f = r5;
split discard L0x2001989e_u r5 16;
cast L0x2001989e@sint16 L0x2001989e_u;
(* strh.w	r6, [lr, #128]	; 0x80                    #! EA = L0x200198de; PC = 0x8005cac *)
ghost L0x200198de_f@sint32 : L0x200198de_f = r6 && L0x200198de_f = r6;
split discard L0x200198de_u r6 16;
cast L0x200198de@sint16 L0x200198de_u;
(* strh.w	r7, [lr, #192]	; 0xc0                    #! EA = L0x2001991e; PC = 0x8005cb0 *)
ghost L0x2001991e_f@sint32 : L0x2001991e_f = r7 && L0x2001991e_f = r7;
split discard L0x2001991e_u r7 16;
cast L0x2001991e@sint16 L0x2001991e_u;
(* strh.w	r4, [lr], #2                             #! EA = L0x2001985e; PC = 0x8005cb4 *)
ghost L0x2001985e_f@sint32 : L0x2001985e_f = r4 && L0x2001985e_f = r4;
split discard L0x2001985e_u r4 16;
cast L0x2001985e@sint16 L0x2001985e_u;
(* vmov	s0, lr                                     #! PC = 0x8005cb8 *)
mov s0 lr;
(* vmov	lr, s3                                     #! PC = 0x8005cbc *)
mov lr s3;
(* vmov	r12, s2                                    #! PC = 0x8005cc8 *)
mov r12 s2;
(* vmov	r1, s1                                     #! PC = 0x8005848 *)
mov r1 s1;
(* vldmia	r1!, {s4-s18}                            #! EA = L0x800f870; PC = 0x800584c *)
mov s4 L0x800f870;
mov s5 L0x800f874;
mov s6 L0x800f878;
mov s7 L0x800f87c;
mov s8 L0x800f880;
mov s9 L0x800f884;
mov s10 L0x800f888;
mov s11 L0x800f88c;
mov s12 L0x800f890;
mov s13 L0x800f894;
mov s14 L0x800f898;
mov s15 L0x800f89c;
mov s16 L0x800f8a0;
mov s17 L0x800f8a4;
mov s18 L0x800f8a8;
(* vmov	s1, r1                                     #! PC = 0x8005850 *)
mov s1 r1;
(* add.w	lr, r0, #16                               #! PC = 0x8005854 *)
adds discard lr r0 16@uint32;
(* vmov	s3, lr                                     #! PC = 0x8005858 *)
mov s3 lr;
(* ldr.w	r8, [r0, #512]	; 0x200                    #! EA = L0x2001a478; Value = 0x015ee9ce; PC = 0x800585c *)
mov r8 L0x2001a478;
(* ldr.w	r9, [r0, #640]	; 0x280                    #! EA = L0x2001a4f8; Value = 0x00898e8a; PC = 0x8005860 *)
mov r9 L0x2001a4f8;
(* ldr.w	r10, [r0, #768]	; 0x300                   #! EA = L0x2001a578; Value = 0xfeeb55b9; PC = 0x8005864 *)
mov r10 L0x2001a578;
(* ldr.w	r11, [r0, #896]	; 0x380                   #! EA = L0x2001a5f8; Value = 0x012cb6d9; PC = 0x8005868 *)
mov r11 L0x2001a5f8;
(* ldr.w	r5, [r0, #128]	; 0x80                     #! EA = L0x2001a2f8; Value = 0x015841d6; PC = 0x800586c *)
mov r5 L0x2001a2f8;
(* ldr.w	r6, [r0, #256]	; 0x100                    #! EA = L0x2001a378; Value = 0x00982acf; PC = 0x8005870 *)
mov r6 L0x2001a378;
(* ldr.w	r7, [r0, #384]	; 0x180                    #! EA = L0x2001a3f8; Value = 0x00da80ae; PC = 0x8005874 *)
mov r7 L0x2001a3f8;
(* ldr.w	r4, [r0], #4                              #! EA = L0x2001a278; Value = 0xfe7168a5; PC = 0x8005878 *)
mov r4 L0x2001a278;
(* vmov	r1, s4                                     #! PC = 0x800587c *)
mov r1 s4;
(* smull	r12, r5, r5, r1                           #! PC = 0x8005880 *)
smull r5 r12 r5 r1;
(* mul.w	lr, r12, r2                               #! PC = 0x8005884 *)
cast r12_s@sint32 r12;
mull discard lr r12_s r2;
(* smlal	r12, r5, lr, r3                           #! PC = 0x8005888 *)
cast lr@sint32 lr;
smull tmp_h tmp_l lr r3;
uadds carry r12 tmp_l r12;
sadc r5 tmp_h r5 carry;
assert eqmod r12 0 (2**32) && true;
assume eq r12 0 && true;
(* smull	r12, r7, r7, r1                           #! PC = 0x800588c *)
smull r7 r12 r7 r1;
(* mul.w	lr, r12, r2                               #! PC = 0x8005890 *)
cast r12_s@sint32 r12;
mull discard lr r12_s r2;
(* smlal	r12, r7, lr, r3                           #! PC = 0x8005894 *)
cast lr@sint32 lr;
smull tmp_h tmp_l lr r3;
uadds carry r12 tmp_l r12;
sadc r7 tmp_h r7 carry;
assert eqmod r12 0 (2**32) && true;
assume eq r12 0 && true;
(* smull	r12, r9, r9, r1                           #! PC = 0x8005898 *)
smull r9 r12 r9 r1;
(* mul.w	lr, r12, r2                               #! PC = 0x800589c *)
cast r12_s@sint32 r12;
mull discard lr r12_s r2;
(* smlal	r12, r9, lr, r3                           #! PC = 0x80058a0 *)
cast lr@sint32 lr;
smull tmp_h tmp_l lr r3;
uadds carry r12 tmp_l r12;
sadc r9 tmp_h r9 carry;
assert eqmod r12 0 (2**32) && true;
assume eq r12 0 && true;
(* smull	r12, r11, r11, r1                         #! PC = 0x80058a4 *)
smull r11 r12 r11 r1;
(* mul.w	lr, r12, r2                               #! PC = 0x80058a8 *)
cast r12_s@sint32 r12;
mull discard lr r12_s r2;
(* smlal	r12, r11, lr, r3                          #! PC = 0x80058ac *)
cast lr@sint32 lr;
smull tmp_h tmp_l lr r3;
uadds carry r12 tmp_l r12;
sadc r11 tmp_h r11 carry;
assert eqmod r12 0 (2**32) && true;
assume eq r12 0 && true;
(* add	r4, r5                                      #! PC = 0x80058b0 *)
add r4 r4 r5;
(* add	r6, r7                                      #! PC = 0x80058b2 *)
add r6 r6 r7;
(* add	r8, r9                                      #! PC = 0x80058b4 *)
add r8 r8 r9;
(* add	r10, r11                                    #! PC = 0x80058b6 *)
add r10 r10 r11;
(* sub.w	r5, r4, r5, lsl #1                        #! PC = 0x80058b8 *)
shl tmp r5 1;
sub r5 r4 tmp;
(* sub.w	r7, r6, r7, lsl #1                        #! PC = 0x80058bc *)
shl tmp r7 1;
sub r7 r6 tmp;
(* sub.w	r9, r8, r9, lsl #1                        #! PC = 0x80058c0 *)
shl tmp r9 1;
sub r9 r8 tmp;
(* sub.w	r11, r10, r11, lsl #1                     #! PC = 0x80058c4 *)
shl tmp r11 1;
sub r11 r10 tmp;
(* vmov	r1, s5                                     #! PC = 0x80058c8 *)
mov r1 s5;
(* smull	r12, r6, r6, r1                           #! PC = 0x80058cc *)
smull r6 r12 r6 r1;
(* mul.w	lr, r12, r2                               #! PC = 0x80058d0 *)
cast r12_s@sint32 r12;
mull discard lr r12_s r2;
(* smlal	r12, r6, lr, r3                           #! PC = 0x80058d4 *)
cast lr@sint32 lr;
smull tmp_h tmp_l lr r3;
uadds carry r12 tmp_l r12;
sadc r6 tmp_h r6 carry;
assert eqmod r12 0 (2**32) && true;
assume eq r12 0 && true;
(* smull	r12, r10, r10, r1                         #! PC = 0x80058d8 *)
smull r10 r12 r10 r1;
(* mul.w	lr, r12, r2                               #! PC = 0x80058dc *)
cast r12_s@sint32 r12;
mull discard lr r12_s r2;
(* smlal	r12, r10, lr, r3                          #! PC = 0x80058e0 *)
cast lr@sint32 lr;
smull tmp_h tmp_l lr r3;
uadds carry r12 tmp_l r12;
sadc r10 tmp_h r10 carry;
assert eqmod r12 0 (2**32) && true;
assume eq r12 0 && true;
(* vmov	r1, s6                                     #! PC = 0x80058e4 *)
mov r1 s6;
(* smull	r12, r7, r7, r1                           #! PC = 0x80058e8 *)
smull r7 r12 r7 r1;
(* mul.w	lr, r12, r2                               #! PC = 0x80058ec *)
cast r12_s@sint32 r12;
mull discard lr r12_s r2;
(* smlal	r12, r7, lr, r3                           #! PC = 0x80058f0 *)
cast lr@sint32 lr;
smull tmp_h tmp_l lr r3;
uadds carry r12 tmp_l r12;
sadc r7 tmp_h r7 carry;
assert eqmod r12 0 (2**32) && true;
assume eq r12 0 && true;
(* smull	r12, r11, r11, r1                         #! PC = 0x80058f4 *)
smull r11 r12 r11 r1;
(* mul.w	lr, r12, r2                               #! PC = 0x80058f8 *)
cast r12_s@sint32 r12;
mull discard lr r12_s r2;
(* smlal	r12, r11, lr, r3                          #! PC = 0x80058fc *)
cast lr@sint32 lr;
smull tmp_h tmp_l lr r3;
uadds carry r12 tmp_l r12;
sadc r11 tmp_h r11 carry;
assert eqmod r12 0 (2**32) && true;
assume eq r12 0 && true;
(* add	r4, r6                                      #! PC = 0x8005900 *)
add r4 r4 r6;
(* add	r5, r7                                      #! PC = 0x8005902 *)
add r5 r5 r7;
(* add	r8, r10                                     #! PC = 0x8005904 *)
add r8 r8 r10;
(* add	r9, r11                                     #! PC = 0x8005906 *)
add r9 r9 r11;
(* sub.w	r6, r4, r6, lsl #1                        #! PC = 0x8005908 *)
shl tmp r6 1;
sub r6 r4 tmp;
(* sub.w	r7, r5, r7, lsl #1                        #! PC = 0x800590c *)
shl tmp r7 1;
sub r7 r5 tmp;
(* sub.w	r10, r8, r10, lsl #1                      #! PC = 0x8005910 *)
shl tmp r10 1;
sub r10 r8 tmp;
(* sub.w	r11, r9, r11, lsl #1                      #! PC = 0x8005914 *)
shl tmp r11 1;
sub r11 r9 tmp;
(* vmov	r1, s7                                     #! PC = 0x8005918 *)
mov r1 s7;
(* smull	r12, r8, r8, r1                           #! PC = 0x800591c *)
smull r8 r12 r8 r1;
(* mul.w	lr, r12, r2                               #! PC = 0x8005920 *)
cast r12_s@sint32 r12;
mull discard lr r12_s r2;
(* smlal	r12, r8, lr, r3                           #! PC = 0x8005924 *)
cast lr@sint32 lr;
smull tmp_h tmp_l lr r3;
uadds carry r12 tmp_l r12;
sadc r8 tmp_h r8 carry;
assert eqmod r12 0 (2**32) && true;
assume eq r12 0 && true;
(* vmov	r1, s8                                     #! PC = 0x8005928 *)
mov r1 s8;
(* smull	r12, r9, r9, r1                           #! PC = 0x800592c *)
smull r9 r12 r9 r1;
(* mul.w	lr, r12, r2                               #! PC = 0x8005930 *)
cast r12_s@sint32 r12;
mull discard lr r12_s r2;
(* smlal	r12, r9, lr, r3                           #! PC = 0x8005934 *)
cast lr@sint32 lr;
smull tmp_h tmp_l lr r3;
uadds carry r12 tmp_l r12;
sadc r9 tmp_h r9 carry;
assert eqmod r12 0 (2**32) && true;
assume eq r12 0 && true;
(* vmov	r1, s9                                     #! PC = 0x8005938 *)
mov r1 s9;
(* smull	r12, r10, r10, r1                         #! PC = 0x800593c *)
smull r10 r12 r10 r1;
(* mul.w	lr, r12, r2                               #! PC = 0x8005940 *)
cast r12_s@sint32 r12;
mull discard lr r12_s r2;
(* smlal	r12, r10, lr, r3                          #! PC = 0x8005944 *)
cast lr@sint32 lr;
smull tmp_h tmp_l lr r3;
uadds carry r12 tmp_l r12;
sadc r10 tmp_h r10 carry;
assert eqmod r12 0 (2**32) && true;
assume eq r12 0 && true;
(* vmov	r1, s10                                    #! PC = 0x8005948 *)
mov r1 s10;
(* smull	r12, r11, r11, r1                         #! PC = 0x800594c *)
smull r11 r12 r11 r1;
(* mul.w	lr, r12, r2                               #! PC = 0x8005950 *)
cast r12_s@sint32 r12;
mull discard lr r12_s r2;
(* smlal	r12, r11, lr, r3                          #! PC = 0x8005954 *)
cast lr@sint32 lr;
smull tmp_h tmp_l lr r3;
uadds carry r12 tmp_l r12;
sadc r11 tmp_h r11 carry;
assert eqmod r12 0 (2**32) && true;
assume eq r12 0 && true;
(* add	r4, r8                                      #! PC = 0x8005958 *)
add r4 r4 r8;
(* add	r5, r9                                      #! PC = 0x800595a *)
add r5 r5 r9;
(* add	r6, r10                                     #! PC = 0x800595c *)
add r6 r6 r10;
(* add	r7, r11                                     #! PC = 0x800595e *)
add r7 r7 r11;
(* sub.w	r8, r4, r8, lsl #1                        #! PC = 0x8005960 *)
shl tmp r8 1;
sub r8 r4 tmp;
(* sub.w	r9, r5, r9, lsl #1                        #! PC = 0x8005964 *)
shl tmp r9 1;
sub r9 r5 tmp;
(* sub.w	r10, r6, r10, lsl #1                      #! PC = 0x8005968 *)
shl tmp r10 1;
sub r10 r6 tmp;
(* sub.w	r11, r7, r11, lsl #1                      #! PC = 0x800596c *)
shl tmp r11 1;
sub r11 r7 tmp;
(* vmov	r1, s11                                    #! PC = 0x8005970 *)
mov r1 s11;
(* smull	r12, r4, r4, r1                           #! PC = 0x8005974 *)
smull r4 r12 r4 r1;
(* mul.w	lr, r12, r2                               #! PC = 0x8005978 *)
cast r12_s@sint32 r12;
mull discard lr r12_s r2;
(* smlal	r12, r4, lr, r3                           #! PC = 0x800597c *)
cast lr@sint32 lr;
smull tmp_h tmp_l lr r3;
uadds carry r12 tmp_l r12;
sadc r4 tmp_h r4 carry;
assert eqmod r12 0 (2**32) && true;
assume eq r12 0 && true;
(* vmov	r1, s12                                    #! PC = 0x8005980 *)
mov r1 s12;
(* smull	r12, r5, r5, r1                           #! PC = 0x8005984 *)
smull r5 r12 r5 r1;
(* mul.w	lr, r12, r2                               #! PC = 0x8005988 *)
cast r12_s@sint32 r12;
mull discard lr r12_s r2;
(* smlal	r12, r5, lr, r3                           #! PC = 0x800598c *)
cast lr@sint32 lr;
smull tmp_h tmp_l lr r3;
uadds carry r12 tmp_l r12;
sadc r5 tmp_h r5 carry;
assert eqmod r12 0 (2**32) && true;
assume eq r12 0 && true;
(* vmov	r1, s13                                    #! PC = 0x8005990 *)
mov r1 s13;
(* smull	r12, r6, r6, r1                           #! PC = 0x8005994 *)
smull r6 r12 r6 r1;
(* mul.w	lr, r12, r2                               #! PC = 0x8005998 *)
cast r12_s@sint32 r12;
mull discard lr r12_s r2;
(* smlal	r12, r6, lr, r3                           #! PC = 0x800599c *)
cast lr@sint32 lr;
smull tmp_h tmp_l lr r3;
uadds carry r12 tmp_l r12;
sadc r6 tmp_h r6 carry;
assert eqmod r12 0 (2**32) && true;
assume eq r12 0 && true;
(* vmov	r1, s14                                    #! PC = 0x80059a0 *)
mov r1 s14;
(* smull	r12, r7, r7, r1                           #! PC = 0x80059a4 *)
smull r7 r12 r7 r1;
(* mul.w	lr, r12, r2                               #! PC = 0x80059a8 *)
cast r12_s@sint32 r12;
mull discard lr r12_s r2;
(* smlal	r12, r7, lr, r3                           #! PC = 0x80059ac *)
cast lr@sint32 lr;
smull tmp_h tmp_l lr r3;
uadds carry r12 tmp_l r12;
sadc r7 tmp_h r7 carry;
assert eqmod r12 0 (2**32) && true;
assume eq r12 0 && true;
(* vmov	r1, s15                                    #! PC = 0x80059b0 *)
mov r1 s15;
(* smull	r12, r8, r8, r1                           #! PC = 0x80059b4 *)
smull r8 r12 r8 r1;
(* mul.w	lr, r12, r2                               #! PC = 0x80059b8 *)
cast r12_s@sint32 r12;
mull discard lr r12_s r2;
(* smlal	r12, r8, lr, r3                           #! PC = 0x80059bc *)
cast lr@sint32 lr;
smull tmp_h tmp_l lr r3;
uadds carry r12 tmp_l r12;
sadc r8 tmp_h r8 carry;
assert eqmod r12 0 (2**32) && true;
assume eq r12 0 && true;
(* vmov	r1, s16                                    #! PC = 0x80059c0 *)
mov r1 s16;
(* smull	r12, r9, r9, r1                           #! PC = 0x80059c4 *)
smull r9 r12 r9 r1;
(* mul.w	lr, r12, r2                               #! PC = 0x80059c8 *)
cast r12_s@sint32 r12;
mull discard lr r12_s r2;
(* smlal	r12, r9, lr, r3                           #! PC = 0x80059cc *)
cast lr@sint32 lr;
smull tmp_h tmp_l lr r3;
uadds carry r12 tmp_l r12;
sadc r9 tmp_h r9 carry;
assert eqmod r12 0 (2**32) && true;
assume eq r12 0 && true;
(* vmov	r1, s17                                    #! PC = 0x80059d0 *)
mov r1 s17;
(* smull	r12, r10, r10, r1                         #! PC = 0x80059d4 *)
smull r10 r12 r10 r1;
(* mul.w	lr, r12, r2                               #! PC = 0x80059d8 *)
cast r12_s@sint32 r12;
mull discard lr r12_s r2;
(* smlal	r12, r10, lr, r3                          #! PC = 0x80059dc *)
cast lr@sint32 lr;
smull tmp_h tmp_l lr r3;
uadds carry r12 tmp_l r12;
sadc r10 tmp_h r10 carry;
assert eqmod r12 0 (2**32) && true;
assume eq r12 0 && true;
(* vmov	r1, s18                                    #! PC = 0x80059e0 *)
mov r1 s18;
(* smull	r12, r11, r11, r1                         #! PC = 0x80059e4 *)
smull r11 r12 r11 r1;
(* mul.w	lr, r12, r2                               #! PC = 0x80059e8 *)
cast r12_s@sint32 r12;
mull discard lr r12_s r2;
(* smlal	r12, r11, lr, r3                          #! PC = 0x80059ec *)
cast lr@sint32 lr;
smull tmp_h tmp_l lr r3;
uadds carry r12 tmp_l r12;
sadc r11 tmp_h r11 carry;
assert eqmod r12 0 (2**32) && true;
assume eq r12 0 && true;
(* mov.w	r1, r3, lsr #1                            #! PC = 0x80059f0 *)
split r1 discard r3 1;
(* cmp	r4, r1                                      #! PC = 0x80059f4 *)
sub cmp r4 r1;
split sign discard cmp 31;
cast sign@bit sign;
cmov tmp sign 0@sint32 r3;
sub r4 r4 tmp;
(* cmn	r4, r1                                      #! PC = 0x80059fa *)
add cmn r4 r1;
split sign discard cmn 31;
cast sign@bit sign;
cmov tmp sign r3 0@sint32;
add r4 r4 tmp;
(* cmp	r5, r1                                      #! PC = 0x8005a00 *)
sub cmp r5 r1;
split sign discard cmp 31;
cast sign@bit sign;
cmov tmp sign 0@sint32 r3;
sub r5 r5 tmp;
(* cmn	r5, r1                                      #! PC = 0x8005a06 *)
add cmn r5 r1;
split sign discard cmn 31;
cast sign@bit sign;
cmov tmp sign r3 0@sint32;
add r5 r5 tmp;
(* cmp	r6, r1                                      #! PC = 0x8005a0c *)
sub cmp r6 r1;
split sign discard cmp 31;
cast sign@bit sign;
cmov tmp sign 0@sint32 r3;
sub r6 r6 tmp;
(* cmn	r6, r1                                      #! PC = 0x8005a12 *)
add cmn r6 r1;
split sign discard cmn 31;
cast sign@bit sign;
cmov tmp sign r3 0@sint32;
add r6 r6 tmp;
(* cmp	r7, r1                                      #! PC = 0x8005a18 *)
sub cmp r7 r1;
split sign discard cmp 31;
cast sign@bit sign;
cmov tmp sign 0@sint32 r3;
sub r7 r7 tmp;
(* cmn	r7, r1                                      #! PC = 0x8005a1e *)
add cmn r7 r1;
split sign discard cmn 31;
cast sign@bit sign;
cmov tmp sign r3 0@sint32;
add r7 r7 tmp;
(* cmp	r8, r1                                      #! PC = 0x8005a24 *)
sub cmp r8 r1;
split sign discard cmp 31;
cast sign@bit sign;
cmov tmp sign 0@sint32 r3;
sub r8 r8 tmp;
(* cmn.w	r8, r1                                    #! PC = 0x8005a2c *)
add cmn r8 r1;
split sign discard cmn 31;
cast sign@bit sign;
cmov tmp sign r3 0@sint32;
add r8 r8 tmp;
(* cmp	r9, r1                                      #! PC = 0x8005a34 *)
sub cmp r9 r1;
split sign discard cmp 31;
cast sign@bit sign;
cmov tmp sign 0@sint32 r3;
sub r9 r9 tmp;
(* cmn.w	r9, r1                                    #! PC = 0x8005a3c *)
add cmn r9 r1;
split sign discard cmn 31;
cast sign@bit sign;
cmov tmp sign r3 0@sint32;
add r9 r9 tmp;
(* cmp	r10, r1                                     #! PC = 0x8005a44 *)
sub cmp r10 r1;
split sign discard cmp 31;
cast sign@bit sign;
cmov tmp sign 0@sint32 r3;
sub r10 r10 tmp;
(* cmn.w	r10, r1                                   #! PC = 0x8005a4c *)
add cmn r10 r1;
split sign discard cmn 31;
cast sign@bit sign;
cmov tmp sign r3 0@sint32;
add r10 r10 tmp;
(* cmp	r11, r1                                     #! PC = 0x8005a54 *)
sub cmp r11 r1;
split sign discard cmp 31;
cast sign@bit sign;
cmov tmp sign 0@sint32 r3;
sub r11 r11 tmp;
(* cmn.w	r11, r1                                   #! PC = 0x8005a5c *)
add cmn r11 r1;
split sign discard cmn 31;
cast sign@bit sign;
cmov tmp sign r3 0@sint32;
add r11 r11 tmp;
(* vmov	lr, s0                                     #! PC = 0x8005a64 *)
mov lr s0;
(* strh.w	r8, [lr, #256]	; 0x100                   #! EA = L0x20019960; PC = 0x8005a68 *)
ghost L0x20019960_f@sint32 : L0x20019960_f = r8 && L0x20019960_f = r8;
split discard L0x20019960_u r8 16;
cast L0x20019960@sint16 L0x20019960_u;
(* strh.w	r9, [lr, #320]	; 0x140                   #! EA = L0x200199a0; PC = 0x8005a6c *)
ghost L0x200199a0_f@sint32 : L0x200199a0_f = r9 && L0x200199a0_f = r9;
split discard L0x200199a0_u r9 16;
cast L0x200199a0@sint16 L0x200199a0_u;
(* strh.w	r10, [lr, #384]	; 0x180                  #! EA = L0x200199e0; PC = 0x8005a70 *)
ghost L0x200199e0_f@sint32 : L0x200199e0_f = r10 && L0x200199e0_f = r10;
split discard L0x200199e0_u r10 16;
cast L0x200199e0@sint16 L0x200199e0_u;
(* strh.w	r11, [lr, #448]	; 0x1c0                  #! EA = L0x20019a20; PC = 0x8005a74 *)
ghost L0x20019a20_f@sint32 : L0x20019a20_f = r11 && L0x20019a20_f = r11;
split discard L0x20019a20_u r11 16;
cast L0x20019a20@sint16 L0x20019a20_u;
(* strh.w	r5, [lr, #64]	; 0x40                     #! EA = L0x200198a0; PC = 0x8005a78 *)
ghost L0x200198a0_f@sint32 : L0x200198a0_f = r5 && L0x200198a0_f = r5;
split discard L0x200198a0_u r5 16;
cast L0x200198a0@sint16 L0x200198a0_u;
(* strh.w	r6, [lr, #128]	; 0x80                    #! EA = L0x200198e0; PC = 0x8005a7c *)
ghost L0x200198e0_f@sint32 : L0x200198e0_f = r6 && L0x200198e0_f = r6;
split discard L0x200198e0_u r6 16;
cast L0x200198e0@sint16 L0x200198e0_u;
(* strh.w	r7, [lr, #192]	; 0xc0                    #! EA = L0x20019920; PC = 0x8005a80 *)
ghost L0x20019920_f@sint32 : L0x20019920_f = r7 && L0x20019920_f = r7;
split discard L0x20019920_u r7 16;
cast L0x20019920@sint16 L0x20019920_u;
(* strh.w	r4, [lr], #2                             #! EA = L0x20019860; PC = 0x8005a84 *)
ghost L0x20019860_f@sint32 : L0x20019860_f = r4 && L0x20019860_f = r4;
split discard L0x20019860_u r4 16;
cast L0x20019860@sint16 L0x20019860_u;
(* vmov	s0, lr                                     #! PC = 0x8005a88 *)
mov s0 lr;
(* ldr.w	r8, [r0, #512]	; 0x200                    #! EA = L0x2001a47c; Value = 0xfd9c3a13; PC = 0x8005a8c *)
mov r8 L0x2001a47c;
(* ldr.w	r9, [r0, #640]	; 0x280                    #! EA = L0x2001a4fc; Value = 0xff132806; PC = 0x8005a90 *)
mov r9 L0x2001a4fc;
(* ldr.w	r10, [r0, #768]	; 0x300                   #! EA = L0x2001a57c; Value = 0x0089f543; PC = 0x8005a94 *)
mov r10 L0x2001a57c;
(* ldr.w	r11, [r0, #896]	; 0x380                   #! EA = L0x2001a5fc; Value = 0xff49d350; PC = 0x8005a98 *)
mov r11 L0x2001a5fc;
(* ldr.w	r5, [r0, #128]	; 0x80                     #! EA = L0x2001a2fc; Value = 0xff0daf2c; PC = 0x8005a9c *)
mov r5 L0x2001a2fc;
(* ldr.w	r6, [r0, #256]	; 0x100                    #! EA = L0x2001a37c; Value = 0xfe4250b5; PC = 0x8005aa0 *)
mov r6 L0x2001a37c;
(* ldr.w	r7, [r0, #384]	; 0x180                    #! EA = L0x2001a3fc; Value = 0xffddf969; PC = 0x8005aa4 *)
mov r7 L0x2001a3fc;
(* ldr.w	r4, [r0], #4                              #! EA = L0x2001a27c; Value = 0xfe6a656d; PC = 0x8005aa8 *)
mov r4 L0x2001a27c;
(* vmov	r1, s4                                     #! PC = 0x8005aac *)
mov r1 s4;
(* smull	r12, r5, r5, r1                           #! PC = 0x8005ab0 *)
smull r5 r12 r5 r1;
(* mul.w	lr, r12, r2                               #! PC = 0x8005ab4 *)
cast r12_s@sint32 r12;
mull discard lr r12_s r2;
(* smlal	r12, r5, lr, r3                           #! PC = 0x8005ab8 *)
cast lr@sint32 lr;
smull tmp_h tmp_l lr r3;
uadds carry r12 tmp_l r12;
sadc r5 tmp_h r5 carry;
assert eqmod r12 0 (2**32) && true;
assume eq r12 0 && true;
(* smull	r12, r7, r7, r1                           #! PC = 0x8005abc *)
smull r7 r12 r7 r1;
(* mul.w	lr, r12, r2                               #! PC = 0x8005ac0 *)
cast r12_s@sint32 r12;
mull discard lr r12_s r2;
(* smlal	r12, r7, lr, r3                           #! PC = 0x8005ac4 *)
cast lr@sint32 lr;
smull tmp_h tmp_l lr r3;
uadds carry r12 tmp_l r12;
sadc r7 tmp_h r7 carry;
assert eqmod r12 0 (2**32) && true;
assume eq r12 0 && true;
(* smull	r12, r9, r9, r1                           #! PC = 0x8005ac8 *)
smull r9 r12 r9 r1;
(* mul.w	lr, r12, r2                               #! PC = 0x8005acc *)
cast r12_s@sint32 r12;
mull discard lr r12_s r2;
(* smlal	r12, r9, lr, r3                           #! PC = 0x8005ad0 *)
cast lr@sint32 lr;
smull tmp_h tmp_l lr r3;
uadds carry r12 tmp_l r12;
sadc r9 tmp_h r9 carry;
assert eqmod r12 0 (2**32) && true;
assume eq r12 0 && true;
(* smull	r12, r11, r11, r1                         #! PC = 0x8005ad4 *)
smull r11 r12 r11 r1;
(* mul.w	lr, r12, r2                               #! PC = 0x8005ad8 *)
cast r12_s@sint32 r12;
mull discard lr r12_s r2;
(* smlal	r12, r11, lr, r3                          #! PC = 0x8005adc *)
cast lr@sint32 lr;
smull tmp_h tmp_l lr r3;
uadds carry r12 tmp_l r12;
sadc r11 tmp_h r11 carry;
assert eqmod r12 0 (2**32) && true;
assume eq r12 0 && true;
(* add	r4, r5                                      #! PC = 0x8005ae0 *)
add r4 r4 r5;
(* add	r6, r7                                      #! PC = 0x8005ae2 *)
add r6 r6 r7;
(* add	r8, r9                                      #! PC = 0x8005ae4 *)
add r8 r8 r9;
(* add	r10, r11                                    #! PC = 0x8005ae6 *)
add r10 r10 r11;
(* sub.w	r5, r4, r5, lsl #1                        #! PC = 0x8005ae8 *)
shl tmp r5 1;
sub r5 r4 tmp;
(* sub.w	r7, r6, r7, lsl #1                        #! PC = 0x8005aec *)
shl tmp r7 1;
sub r7 r6 tmp;
(* sub.w	r9, r8, r9, lsl #1                        #! PC = 0x8005af0 *)
shl tmp r9 1;
sub r9 r8 tmp;
(* sub.w	r11, r10, r11, lsl #1                     #! PC = 0x8005af4 *)
shl tmp r11 1;
sub r11 r10 tmp;
(* vmov	r1, s5                                     #! PC = 0x8005af8 *)
mov r1 s5;
(* smull	r12, r6, r6, r1                           #! PC = 0x8005afc *)
smull r6 r12 r6 r1;
(* mul.w	lr, r12, r2                               #! PC = 0x8005b00 *)
cast r12_s@sint32 r12;
mull discard lr r12_s r2;
(* smlal	r12, r6, lr, r3                           #! PC = 0x8005b04 *)
cast lr@sint32 lr;
smull tmp_h tmp_l lr r3;
uadds carry r12 tmp_l r12;
sadc r6 tmp_h r6 carry;
assert eqmod r12 0 (2**32) && true;
assume eq r12 0 && true;
(* smull	r12, r10, r10, r1                         #! PC = 0x8005b08 *)
smull r10 r12 r10 r1;
(* mul.w	lr, r12, r2                               #! PC = 0x8005b0c *)
cast r12_s@sint32 r12;
mull discard lr r12_s r2;
(* smlal	r12, r10, lr, r3                          #! PC = 0x8005b10 *)
cast lr@sint32 lr;
smull tmp_h tmp_l lr r3;
uadds carry r12 tmp_l r12;
sadc r10 tmp_h r10 carry;
assert eqmod r12 0 (2**32) && true;
assume eq r12 0 && true;
(* vmov	r1, s6                                     #! PC = 0x8005b14 *)
mov r1 s6;
(* smull	r12, r7, r7, r1                           #! PC = 0x8005b18 *)
smull r7 r12 r7 r1;
(* mul.w	lr, r12, r2                               #! PC = 0x8005b1c *)
cast r12_s@sint32 r12;
mull discard lr r12_s r2;
(* smlal	r12, r7, lr, r3                           #! PC = 0x8005b20 *)
cast lr@sint32 lr;
smull tmp_h tmp_l lr r3;
uadds carry r12 tmp_l r12;
sadc r7 tmp_h r7 carry;
assert eqmod r12 0 (2**32) && true;
assume eq r12 0 && true;
(* smull	r12, r11, r11, r1                         #! PC = 0x8005b24 *)
smull r11 r12 r11 r1;
(* mul.w	lr, r12, r2                               #! PC = 0x8005b28 *)
cast r12_s@sint32 r12;
mull discard lr r12_s r2;
(* smlal	r12, r11, lr, r3                          #! PC = 0x8005b2c *)
cast lr@sint32 lr;
smull tmp_h tmp_l lr r3;
uadds carry r12 tmp_l r12;
sadc r11 tmp_h r11 carry;
assert eqmod r12 0 (2**32) && true;
assume eq r12 0 && true;
(* add	r4, r6                                      #! PC = 0x8005b30 *)
add r4 r4 r6;
(* add	r5, r7                                      #! PC = 0x8005b32 *)
add r5 r5 r7;
(* add	r8, r10                                     #! PC = 0x8005b34 *)
add r8 r8 r10;
(* add	r9, r11                                     #! PC = 0x8005b36 *)
add r9 r9 r11;
(* sub.w	r6, r4, r6, lsl #1                        #! PC = 0x8005b38 *)
shl tmp r6 1;
sub r6 r4 tmp;
(* sub.w	r7, r5, r7, lsl #1                        #! PC = 0x8005b3c *)
shl tmp r7 1;
sub r7 r5 tmp;
(* sub.w	r10, r8, r10, lsl #1                      #! PC = 0x8005b40 *)
shl tmp r10 1;
sub r10 r8 tmp;
(* sub.w	r11, r9, r11, lsl #1                      #! PC = 0x8005b44 *)
shl tmp r11 1;
sub r11 r9 tmp;
(* vmov	r1, s7                                     #! PC = 0x8005b48 *)
mov r1 s7;
(* smull	r12, r8, r8, r1                           #! PC = 0x8005b4c *)
smull r8 r12 r8 r1;
(* mul.w	lr, r12, r2                               #! PC = 0x8005b50 *)
cast r12_s@sint32 r12;
mull discard lr r12_s r2;
(* smlal	r12, r8, lr, r3                           #! PC = 0x8005b54 *)
cast lr@sint32 lr;
smull tmp_h tmp_l lr r3;
uadds carry r12 tmp_l r12;
sadc r8 tmp_h r8 carry;
assert eqmod r12 0 (2**32) && true;
assume eq r12 0 && true;
(* vmov	r1, s8                                     #! PC = 0x8005b58 *)
mov r1 s8;
(* smull	r12, r9, r9, r1                           #! PC = 0x8005b5c *)
smull r9 r12 r9 r1;
(* mul.w	lr, r12, r2                               #! PC = 0x8005b60 *)
cast r12_s@sint32 r12;
mull discard lr r12_s r2;
(* smlal	r12, r9, lr, r3                           #! PC = 0x8005b64 *)
cast lr@sint32 lr;
smull tmp_h tmp_l lr r3;
uadds carry r12 tmp_l r12;
sadc r9 tmp_h r9 carry;
assert eqmod r12 0 (2**32) && true;
assume eq r12 0 && true;
(* vmov	r1, s9                                     #! PC = 0x8005b68 *)
mov r1 s9;
(* smull	r12, r10, r10, r1                         #! PC = 0x8005b6c *)
smull r10 r12 r10 r1;
(* mul.w	lr, r12, r2                               #! PC = 0x8005b70 *)
cast r12_s@sint32 r12;
mull discard lr r12_s r2;
(* smlal	r12, r10, lr, r3                          #! PC = 0x8005b74 *)
cast lr@sint32 lr;
smull tmp_h tmp_l lr r3;
uadds carry r12 tmp_l r12;
sadc r10 tmp_h r10 carry;
assert eqmod r12 0 (2**32) && true;
assume eq r12 0 && true;
(* vmov	r1, s10                                    #! PC = 0x8005b78 *)
mov r1 s10;
(* smull	r12, r11, r11, r1                         #! PC = 0x8005b7c *)
smull r11 r12 r11 r1;
(* mul.w	lr, r12, r2                               #! PC = 0x8005b80 *)
cast r12_s@sint32 r12;
mull discard lr r12_s r2;
(* smlal	r12, r11, lr, r3                          #! PC = 0x8005b84 *)
cast lr@sint32 lr;
smull tmp_h tmp_l lr r3;
uadds carry r12 tmp_l r12;
sadc r11 tmp_h r11 carry;
assert eqmod r12 0 (2**32) && true;
assume eq r12 0 && true;
(* add	r4, r8                                      #! PC = 0x8005b88 *)
add r4 r4 r8;
(* add	r5, r9                                      #! PC = 0x8005b8a *)
add r5 r5 r9;
(* add	r6, r10                                     #! PC = 0x8005b8c *)
add r6 r6 r10;
(* add	r7, r11                                     #! PC = 0x8005b8e *)
add r7 r7 r11;
(* sub.w	r8, r4, r8, lsl #1                        #! PC = 0x8005b90 *)
shl tmp r8 1;
sub r8 r4 tmp;
(* sub.w	r9, r5, r9, lsl #1                        #! PC = 0x8005b94 *)
shl tmp r9 1;
sub r9 r5 tmp;
(* sub.w	r10, r6, r10, lsl #1                      #! PC = 0x8005b98 *)
shl tmp r10 1;
sub r10 r6 tmp;
(* sub.w	r11, r7, r11, lsl #1                      #! PC = 0x8005b9c *)
shl tmp r11 1;
sub r11 r7 tmp;
(* vmov	r1, s11                                    #! PC = 0x8005ba0 *)
mov r1 s11;
(* smull	r12, r4, r4, r1                           #! PC = 0x8005ba4 *)
smull r4 r12 r4 r1;
(* mul.w	lr, r12, r2                               #! PC = 0x8005ba8 *)
cast r12_s@sint32 r12;
mull discard lr r12_s r2;
(* smlal	r12, r4, lr, r3                           #! PC = 0x8005bac *)
cast lr@sint32 lr;
smull tmp_h tmp_l lr r3;
uadds carry r12 tmp_l r12;
sadc r4 tmp_h r4 carry;
assert eqmod r12 0 (2**32) && true;
assume eq r12 0 && true;
(* vmov	r1, s12                                    #! PC = 0x8005bb0 *)
mov r1 s12;
(* smull	r12, r5, r5, r1                           #! PC = 0x8005bb4 *)
smull r5 r12 r5 r1;
(* mul.w	lr, r12, r2                               #! PC = 0x8005bb8 *)
cast r12_s@sint32 r12;
mull discard lr r12_s r2;
(* smlal	r12, r5, lr, r3                           #! PC = 0x8005bbc *)
cast lr@sint32 lr;
smull tmp_h tmp_l lr r3;
uadds carry r12 tmp_l r12;
sadc r5 tmp_h r5 carry;
assert eqmod r12 0 (2**32) && true;
assume eq r12 0 && true;
(* vmov	r1, s13                                    #! PC = 0x8005bc0 *)
mov r1 s13;
(* smull	r12, r6, r6, r1                           #! PC = 0x8005bc4 *)
smull r6 r12 r6 r1;
(* mul.w	lr, r12, r2                               #! PC = 0x8005bc8 *)
cast r12_s@sint32 r12;
mull discard lr r12_s r2;
(* smlal	r12, r6, lr, r3                           #! PC = 0x8005bcc *)
cast lr@sint32 lr;
smull tmp_h tmp_l lr r3;
uadds carry r12 tmp_l r12;
sadc r6 tmp_h r6 carry;
assert eqmod r12 0 (2**32) && true;
assume eq r12 0 && true;
(* vmov	r1, s14                                    #! PC = 0x8005bd0 *)
mov r1 s14;
(* smull	r12, r7, r7, r1                           #! PC = 0x8005bd4 *)
smull r7 r12 r7 r1;
(* mul.w	lr, r12, r2                               #! PC = 0x8005bd8 *)
cast r12_s@sint32 r12;
mull discard lr r12_s r2;
(* smlal	r12, r7, lr, r3                           #! PC = 0x8005bdc *)
cast lr@sint32 lr;
smull tmp_h tmp_l lr r3;
uadds carry r12 tmp_l r12;
sadc r7 tmp_h r7 carry;
assert eqmod r12 0 (2**32) && true;
assume eq r12 0 && true;
(* vmov	r1, s15                                    #! PC = 0x8005be0 *)
mov r1 s15;
(* smull	r12, r8, r8, r1                           #! PC = 0x8005be4 *)
smull r8 r12 r8 r1;
(* mul.w	lr, r12, r2                               #! PC = 0x8005be8 *)
cast r12_s@sint32 r12;
mull discard lr r12_s r2;
(* smlal	r12, r8, lr, r3                           #! PC = 0x8005bec *)
cast lr@sint32 lr;
smull tmp_h tmp_l lr r3;
uadds carry r12 tmp_l r12;
sadc r8 tmp_h r8 carry;
assert eqmod r12 0 (2**32) && true;
assume eq r12 0 && true;
(* vmov	r1, s16                                    #! PC = 0x8005bf0 *)
mov r1 s16;
(* smull	r12, r9, r9, r1                           #! PC = 0x8005bf4 *)
smull r9 r12 r9 r1;
(* mul.w	lr, r12, r2                               #! PC = 0x8005bf8 *)
cast r12_s@sint32 r12;
mull discard lr r12_s r2;
(* smlal	r12, r9, lr, r3                           #! PC = 0x8005bfc *)
cast lr@sint32 lr;
smull tmp_h tmp_l lr r3;
uadds carry r12 tmp_l r12;
sadc r9 tmp_h r9 carry;
assert eqmod r12 0 (2**32) && true;
assume eq r12 0 && true;
(* vmov	r1, s17                                    #! PC = 0x8005c00 *)
mov r1 s17;
(* smull	r12, r10, r10, r1                         #! PC = 0x8005c04 *)
smull r10 r12 r10 r1;
(* mul.w	lr, r12, r2                               #! PC = 0x8005c08 *)
cast r12_s@sint32 r12;
mull discard lr r12_s r2;
(* smlal	r12, r10, lr, r3                          #! PC = 0x8005c0c *)
cast lr@sint32 lr;
smull tmp_h tmp_l lr r3;
uadds carry r12 tmp_l r12;
sadc r10 tmp_h r10 carry;
assert eqmod r12 0 (2**32) && true;
assume eq r12 0 && true;
(* vmov	r1, s18                                    #! PC = 0x8005c10 *)
mov r1 s18;
(* smull	r12, r11, r11, r1                         #! PC = 0x8005c14 *)
smull r11 r12 r11 r1;
(* mul.w	lr, r12, r2                               #! PC = 0x8005c18 *)
cast r12_s@sint32 r12;
mull discard lr r12_s r2;
(* smlal	r12, r11, lr, r3                          #! PC = 0x8005c1c *)
cast lr@sint32 lr;
smull tmp_h tmp_l lr r3;
uadds carry r12 tmp_l r12;
sadc r11 tmp_h r11 carry;
assert eqmod r12 0 (2**32) && true;
assume eq r12 0 && true;
(* mov.w	r1, r3, lsr #1                            #! PC = 0x8005c20 *)
split r1 discard r3 1;
(* cmp	r4, r1                                      #! PC = 0x8005c24 *)
sub cmp r4 r1;
split sign discard cmp 31;
cast sign@bit sign;
cmov tmp sign 0@sint32 r3;
sub r4 r4 tmp;
(* cmn	r4, r1                                      #! PC = 0x8005c2a *)
add cmn r4 r1;
split sign discard cmn 31;
cast sign@bit sign;
cmov tmp sign r3 0@sint32;
add r4 r4 tmp;
(* cmp	r5, r1                                      #! PC = 0x8005c30 *)
sub cmp r5 r1;
split sign discard cmp 31;
cast sign@bit sign;
cmov tmp sign 0@sint32 r3;
sub r5 r5 tmp;
(* cmn	r5, r1                                      #! PC = 0x8005c36 *)
add cmn r5 r1;
split sign discard cmn 31;
cast sign@bit sign;
cmov tmp sign r3 0@sint32;
add r5 r5 tmp;
(* cmp	r6, r1                                      #! PC = 0x8005c3c *)
sub cmp r6 r1;
split sign discard cmp 31;
cast sign@bit sign;
cmov tmp sign 0@sint32 r3;
sub r6 r6 tmp;
(* cmn	r6, r1                                      #! PC = 0x8005c42 *)
add cmn r6 r1;
split sign discard cmn 31;
cast sign@bit sign;
cmov tmp sign r3 0@sint32;
add r6 r6 tmp;
(* cmp	r7, r1                                      #! PC = 0x8005c48 *)
sub cmp r7 r1;
split sign discard cmp 31;
cast sign@bit sign;
cmov tmp sign 0@sint32 r3;
sub r7 r7 tmp;
(* cmn	r7, r1                                      #! PC = 0x8005c4e *)
add cmn r7 r1;
split sign discard cmn 31;
cast sign@bit sign;
cmov tmp sign r3 0@sint32;
add r7 r7 tmp;
(* cmp	r8, r1                                      #! PC = 0x8005c54 *)
sub cmp r8 r1;
split sign discard cmp 31;
cast sign@bit sign;
cmov tmp sign 0@sint32 r3;
sub r8 r8 tmp;
(* cmn.w	r8, r1                                    #! PC = 0x8005c5c *)
add cmn r8 r1;
split sign discard cmn 31;
cast sign@bit sign;
cmov tmp sign r3 0@sint32;
add r8 r8 tmp;
(* cmp	r9, r1                                      #! PC = 0x8005c64 *)
sub cmp r9 r1;
split sign discard cmp 31;
cast sign@bit sign;
cmov tmp sign 0@sint32 r3;
sub r9 r9 tmp;
(* cmn.w	r9, r1                                    #! PC = 0x8005c6c *)
add cmn r9 r1;
split sign discard cmn 31;
cast sign@bit sign;
cmov tmp sign r3 0@sint32;
add r9 r9 tmp;
(* cmp	r10, r1                                     #! PC = 0x8005c74 *)
sub cmp r10 r1;
split sign discard cmp 31;
cast sign@bit sign;
cmov tmp sign 0@sint32 r3;
sub r10 r10 tmp;
(* cmn.w	r10, r1                                   #! PC = 0x8005c7c *)
add cmn r10 r1;
split sign discard cmn 31;
cast sign@bit sign;
cmov tmp sign r3 0@sint32;
add r10 r10 tmp;
(* cmp	r11, r1                                     #! PC = 0x8005c84 *)
sub cmp r11 r1;
split sign discard cmp 31;
cast sign@bit sign;
cmov tmp sign 0@sint32 r3;
sub r11 r11 tmp;
(* cmn.w	r11, r1                                   #! PC = 0x8005c8c *)
add cmn r11 r1;
split sign discard cmn 31;
cast sign@bit sign;
cmov tmp sign r3 0@sint32;
add r11 r11 tmp;
(* vmov	lr, s0                                     #! PC = 0x8005c94 *)
mov lr s0;
(* strh.w	r8, [lr, #256]	; 0x100                   #! EA = L0x20019962; PC = 0x8005c98 *)
ghost L0x20019962_f@sint32 : L0x20019962_f = r8 && L0x20019962_f = r8;
split discard L0x20019962_u r8 16;
cast L0x20019962@sint16 L0x20019962_u;
(* strh.w	r9, [lr, #320]	; 0x140                   #! EA = L0x200199a2; PC = 0x8005c9c *)
ghost L0x200199a2_f@sint32 : L0x200199a2_f = r9 && L0x200199a2_f = r9;
split discard L0x200199a2_u r9 16;
cast L0x200199a2@sint16 L0x200199a2_u;
(* strh.w	r10, [lr, #384]	; 0x180                  #! EA = L0x200199e2; PC = 0x8005ca0 *)
ghost L0x200199e2_f@sint32 : L0x200199e2_f = r10 && L0x200199e2_f = r10;
split discard L0x200199e2_u r10 16;
cast L0x200199e2@sint16 L0x200199e2_u;
(* strh.w	r11, [lr, #448]	; 0x1c0                  #! EA = L0x20019a22; PC = 0x8005ca4 *)
ghost L0x20019a22_f@sint32 : L0x20019a22_f = r11 && L0x20019a22_f = r11;
split discard L0x20019a22_u r11 16;
cast L0x20019a22@sint16 L0x20019a22_u;
(* strh.w	r5, [lr, #64]	; 0x40                     #! EA = L0x200198a2; PC = 0x8005ca8 *)
ghost L0x200198a2_f@sint32 : L0x200198a2_f = r5 && L0x200198a2_f = r5;
split discard L0x200198a2_u r5 16;
cast L0x200198a2@sint16 L0x200198a2_u;
(* strh.w	r6, [lr, #128]	; 0x80                    #! EA = L0x200198e2; PC = 0x8005cac *)
ghost L0x200198e2_f@sint32 : L0x200198e2_f = r6 && L0x200198e2_f = r6;
split discard L0x200198e2_u r6 16;
cast L0x200198e2@sint16 L0x200198e2_u;
(* strh.w	r7, [lr, #192]	; 0xc0                    #! EA = L0x20019922; PC = 0x8005cb0 *)
ghost L0x20019922_f@sint32 : L0x20019922_f = r7 && L0x20019922_f = r7;
split discard L0x20019922_u r7 16;
cast L0x20019922@sint16 L0x20019922_u;
(* strh.w	r4, [lr], #2                             #! EA = L0x20019862; PC = 0x8005cb4 *)
ghost L0x20019862_f@sint32 : L0x20019862_f = r4 && L0x20019862_f = r4;
split discard L0x20019862_u r4 16;
cast L0x20019862@sint16 L0x20019862_u;
(* vmov	s0, lr                                     #! PC = 0x8005cb8 *)
mov s0 lr;
(* vmov	lr, s3                                     #! PC = 0x8005cbc *)
mov lr s3;
(* ldr.w	r8, [r0, #512]	; 0x200                    #! EA = L0x2001a480; Value = 0xff8301fb; PC = 0x800585c *)
mov r8 L0x2001a480;
(* ldr.w	r9, [r0, #640]	; 0x280                    #! EA = L0x2001a500; Value = 0xfe6139ad; PC = 0x8005860 *)
mov r9 L0x2001a500;
(* ldr.w	r10, [r0, #768]	; 0x300                   #! EA = L0x2001a580; Value = 0x018f8ffa; PC = 0x8005864 *)
mov r10 L0x2001a580;
(* ldr.w	r11, [r0, #896]	; 0x380                   #! EA = L0x2001a600; Value = 0xfdaf53a0; PC = 0x8005868 *)
mov r11 L0x2001a600;
(* ldr.w	r5, [r0, #128]	; 0x80                     #! EA = L0x2001a300; Value = 0x0359414d; PC = 0x800586c *)
mov r5 L0x2001a300;
(* ldr.w	r6, [r0, #256]	; 0x100                    #! EA = L0x2001a380; Value = 0x0197d0c4; PC = 0x8005870 *)
mov r6 L0x2001a380;
(* ldr.w	r7, [r0, #384]	; 0x180                    #! EA = L0x2001a400; Value = 0xfd2bd16b; PC = 0x8005874 *)
mov r7 L0x2001a400;
(* ldr.w	r4, [r0], #4                              #! EA = L0x2001a280; Value = 0x017ca903; PC = 0x8005878 *)
mov r4 L0x2001a280;
(* vmov	r1, s4                                     #! PC = 0x800587c *)
mov r1 s4;
(* smull	r12, r5, r5, r1                           #! PC = 0x8005880 *)
smull r5 r12 r5 r1;
(* mul.w	lr, r12, r2                               #! PC = 0x8005884 *)
cast r12_s@sint32 r12;
mull discard lr r12_s r2;
(* smlal	r12, r5, lr, r3                           #! PC = 0x8005888 *)
cast lr@sint32 lr;
smull tmp_h tmp_l lr r3;
uadds carry r12 tmp_l r12;
sadc r5 tmp_h r5 carry;
assert eqmod r12 0 (2**32) && true;
assume eq r12 0 && true;
(* smull	r12, r7, r7, r1                           #! PC = 0x800588c *)
smull r7 r12 r7 r1;
(* mul.w	lr, r12, r2                               #! PC = 0x8005890 *)
cast r12_s@sint32 r12;
mull discard lr r12_s r2;
(* smlal	r12, r7, lr, r3                           #! PC = 0x8005894 *)
cast lr@sint32 lr;
smull tmp_h tmp_l lr r3;
uadds carry r12 tmp_l r12;
sadc r7 tmp_h r7 carry;
assert eqmod r12 0 (2**32) && true;
assume eq r12 0 && true;
(* smull	r12, r9, r9, r1                           #! PC = 0x8005898 *)
smull r9 r12 r9 r1;
(* mul.w	lr, r12, r2                               #! PC = 0x800589c *)
cast r12_s@sint32 r12;
mull discard lr r12_s r2;
(* smlal	r12, r9, lr, r3                           #! PC = 0x80058a0 *)
cast lr@sint32 lr;
smull tmp_h tmp_l lr r3;
uadds carry r12 tmp_l r12;
sadc r9 tmp_h r9 carry;
assert eqmod r12 0 (2**32) && true;
assume eq r12 0 && true;
(* smull	r12, r11, r11, r1                         #! PC = 0x80058a4 *)
smull r11 r12 r11 r1;
(* mul.w	lr, r12, r2                               #! PC = 0x80058a8 *)
cast r12_s@sint32 r12;
mull discard lr r12_s r2;
(* smlal	r12, r11, lr, r3                          #! PC = 0x80058ac *)
cast lr@sint32 lr;
smull tmp_h tmp_l lr r3;
uadds carry r12 tmp_l r12;
sadc r11 tmp_h r11 carry;
assert eqmod r12 0 (2**32) && true;
assume eq r12 0 && true;
(* add	r4, r5                                      #! PC = 0x80058b0 *)
add r4 r4 r5;
(* add	r6, r7                                      #! PC = 0x80058b2 *)
add r6 r6 r7;
(* add	r8, r9                                      #! PC = 0x80058b4 *)
add r8 r8 r9;
(* add	r10, r11                                    #! PC = 0x80058b6 *)
add r10 r10 r11;
(* sub.w	r5, r4, r5, lsl #1                        #! PC = 0x80058b8 *)
shl tmp r5 1;
sub r5 r4 tmp;
(* sub.w	r7, r6, r7, lsl #1                        #! PC = 0x80058bc *)
shl tmp r7 1;
sub r7 r6 tmp;
(* sub.w	r9, r8, r9, lsl #1                        #! PC = 0x80058c0 *)
shl tmp r9 1;
sub r9 r8 tmp;
(* sub.w	r11, r10, r11, lsl #1                     #! PC = 0x80058c4 *)
shl tmp r11 1;
sub r11 r10 tmp;
(* vmov	r1, s5                                     #! PC = 0x80058c8 *)
mov r1 s5;
(* smull	r12, r6, r6, r1                           #! PC = 0x80058cc *)
smull r6 r12 r6 r1;
(* mul.w	lr, r12, r2                               #! PC = 0x80058d0 *)
cast r12_s@sint32 r12;
mull discard lr r12_s r2;
(* smlal	r12, r6, lr, r3                           #! PC = 0x80058d4 *)
cast lr@sint32 lr;
smull tmp_h tmp_l lr r3;
uadds carry r12 tmp_l r12;
sadc r6 tmp_h r6 carry;
assert eqmod r12 0 (2**32) && true;
assume eq r12 0 && true;
(* smull	r12, r10, r10, r1                         #! PC = 0x80058d8 *)
smull r10 r12 r10 r1;
(* mul.w	lr, r12, r2                               #! PC = 0x80058dc *)
cast r12_s@sint32 r12;
mull discard lr r12_s r2;
(* smlal	r12, r10, lr, r3                          #! PC = 0x80058e0 *)
cast lr@sint32 lr;
smull tmp_h tmp_l lr r3;
uadds carry r12 tmp_l r12;
sadc r10 tmp_h r10 carry;
assert eqmod r12 0 (2**32) && true;
assume eq r12 0 && true;
(* vmov	r1, s6                                     #! PC = 0x80058e4 *)
mov r1 s6;
(* smull	r12, r7, r7, r1                           #! PC = 0x80058e8 *)
smull r7 r12 r7 r1;
(* mul.w	lr, r12, r2                               #! PC = 0x80058ec *)
cast r12_s@sint32 r12;
mull discard lr r12_s r2;
(* smlal	r12, r7, lr, r3                           #! PC = 0x80058f0 *)
cast lr@sint32 lr;
smull tmp_h tmp_l lr r3;
uadds carry r12 tmp_l r12;
sadc r7 tmp_h r7 carry;
assert eqmod r12 0 (2**32) && true;
assume eq r12 0 && true;
(* smull	r12, r11, r11, r1                         #! PC = 0x80058f4 *)
smull r11 r12 r11 r1;
(* mul.w	lr, r12, r2                               #! PC = 0x80058f8 *)
cast r12_s@sint32 r12;
mull discard lr r12_s r2;
(* smlal	r12, r11, lr, r3                          #! PC = 0x80058fc *)
cast lr@sint32 lr;
smull tmp_h tmp_l lr r3;
uadds carry r12 tmp_l r12;
sadc r11 tmp_h r11 carry;
assert eqmod r12 0 (2**32) && true;
assume eq r12 0 && true;
(* add	r4, r6                                      #! PC = 0x8005900 *)
add r4 r4 r6;
(* add	r5, r7                                      #! PC = 0x8005902 *)
add r5 r5 r7;
(* add	r8, r10                                     #! PC = 0x8005904 *)
add r8 r8 r10;
(* add	r9, r11                                     #! PC = 0x8005906 *)
add r9 r9 r11;
(* sub.w	r6, r4, r6, lsl #1                        #! PC = 0x8005908 *)
shl tmp r6 1;
sub r6 r4 tmp;
(* sub.w	r7, r5, r7, lsl #1                        #! PC = 0x800590c *)
shl tmp r7 1;
sub r7 r5 tmp;
(* sub.w	r10, r8, r10, lsl #1                      #! PC = 0x8005910 *)
shl tmp r10 1;
sub r10 r8 tmp;
(* sub.w	r11, r9, r11, lsl #1                      #! PC = 0x8005914 *)
shl tmp r11 1;
sub r11 r9 tmp;
(* vmov	r1, s7                                     #! PC = 0x8005918 *)
mov r1 s7;
(* smull	r12, r8, r8, r1                           #! PC = 0x800591c *)
smull r8 r12 r8 r1;
(* mul.w	lr, r12, r2                               #! PC = 0x8005920 *)
cast r12_s@sint32 r12;
mull discard lr r12_s r2;
(* smlal	r12, r8, lr, r3                           #! PC = 0x8005924 *)
cast lr@sint32 lr;
smull tmp_h tmp_l lr r3;
uadds carry r12 tmp_l r12;
sadc r8 tmp_h r8 carry;
assert eqmod r12 0 (2**32) && true;
assume eq r12 0 && true;
(* vmov	r1, s8                                     #! PC = 0x8005928 *)
mov r1 s8;
(* smull	r12, r9, r9, r1                           #! PC = 0x800592c *)
smull r9 r12 r9 r1;
(* mul.w	lr, r12, r2                               #! PC = 0x8005930 *)
cast r12_s@sint32 r12;
mull discard lr r12_s r2;
(* smlal	r12, r9, lr, r3                           #! PC = 0x8005934 *)
cast lr@sint32 lr;
smull tmp_h tmp_l lr r3;
uadds carry r12 tmp_l r12;
sadc r9 tmp_h r9 carry;
assert eqmod r12 0 (2**32) && true;
assume eq r12 0 && true;
(* vmov	r1, s9                                     #! PC = 0x8005938 *)
mov r1 s9;
(* smull	r12, r10, r10, r1                         #! PC = 0x800593c *)
smull r10 r12 r10 r1;
(* mul.w	lr, r12, r2                               #! PC = 0x8005940 *)
cast r12_s@sint32 r12;
mull discard lr r12_s r2;
(* smlal	r12, r10, lr, r3                          #! PC = 0x8005944 *)
cast lr@sint32 lr;
smull tmp_h tmp_l lr r3;
uadds carry r12 tmp_l r12;
sadc r10 tmp_h r10 carry;
assert eqmod r12 0 (2**32) && true;
assume eq r12 0 && true;
(* vmov	r1, s10                                    #! PC = 0x8005948 *)
mov r1 s10;
(* smull	r12, r11, r11, r1                         #! PC = 0x800594c *)
smull r11 r12 r11 r1;
(* mul.w	lr, r12, r2                               #! PC = 0x8005950 *)
cast r12_s@sint32 r12;
mull discard lr r12_s r2;
(* smlal	r12, r11, lr, r3                          #! PC = 0x8005954 *)
cast lr@sint32 lr;
smull tmp_h tmp_l lr r3;
uadds carry r12 tmp_l r12;
sadc r11 tmp_h r11 carry;
assert eqmod r12 0 (2**32) && true;
assume eq r12 0 && true;
(* add	r4, r8                                      #! PC = 0x8005958 *)
add r4 r4 r8;
(* add	r5, r9                                      #! PC = 0x800595a *)
add r5 r5 r9;
(* add	r6, r10                                     #! PC = 0x800595c *)
add r6 r6 r10;
(* add	r7, r11                                     #! PC = 0x800595e *)
add r7 r7 r11;
(* sub.w	r8, r4, r8, lsl #1                        #! PC = 0x8005960 *)
shl tmp r8 1;
sub r8 r4 tmp;
(* sub.w	r9, r5, r9, lsl #1                        #! PC = 0x8005964 *)
shl tmp r9 1;
sub r9 r5 tmp;
(* sub.w	r10, r6, r10, lsl #1                      #! PC = 0x8005968 *)
shl tmp r10 1;
sub r10 r6 tmp;
(* sub.w	r11, r7, r11, lsl #1                      #! PC = 0x800596c *)
shl tmp r11 1;
sub r11 r7 tmp;
(* vmov	r1, s11                                    #! PC = 0x8005970 *)
mov r1 s11;
(* smull	r12, r4, r4, r1                           #! PC = 0x8005974 *)
smull r4 r12 r4 r1;
(* mul.w	lr, r12, r2                               #! PC = 0x8005978 *)
cast r12_s@sint32 r12;
mull discard lr r12_s r2;
(* smlal	r12, r4, lr, r3                           #! PC = 0x800597c *)
cast lr@sint32 lr;
smull tmp_h tmp_l lr r3;
uadds carry r12 tmp_l r12;
sadc r4 tmp_h r4 carry;
assert eqmod r12 0 (2**32) && true;
assume eq r12 0 && true;
(* vmov	r1, s12                                    #! PC = 0x8005980 *)
mov r1 s12;
(* smull	r12, r5, r5, r1                           #! PC = 0x8005984 *)
smull r5 r12 r5 r1;
(* mul.w	lr, r12, r2                               #! PC = 0x8005988 *)
cast r12_s@sint32 r12;
mull discard lr r12_s r2;
(* smlal	r12, r5, lr, r3                           #! PC = 0x800598c *)
cast lr@sint32 lr;
smull tmp_h tmp_l lr r3;
uadds carry r12 tmp_l r12;
sadc r5 tmp_h r5 carry;
assert eqmod r12 0 (2**32) && true;
assume eq r12 0 && true;
(* vmov	r1, s13                                    #! PC = 0x8005990 *)
mov r1 s13;
(* smull	r12, r6, r6, r1                           #! PC = 0x8005994 *)
smull r6 r12 r6 r1;
(* mul.w	lr, r12, r2                               #! PC = 0x8005998 *)
cast r12_s@sint32 r12;
mull discard lr r12_s r2;
(* smlal	r12, r6, lr, r3                           #! PC = 0x800599c *)
cast lr@sint32 lr;
smull tmp_h tmp_l lr r3;
uadds carry r12 tmp_l r12;
sadc r6 tmp_h r6 carry;
assert eqmod r12 0 (2**32) && true;
assume eq r12 0 && true;
(* vmov	r1, s14                                    #! PC = 0x80059a0 *)
mov r1 s14;
(* smull	r12, r7, r7, r1                           #! PC = 0x80059a4 *)
smull r7 r12 r7 r1;
(* mul.w	lr, r12, r2                               #! PC = 0x80059a8 *)
cast r12_s@sint32 r12;
mull discard lr r12_s r2;
(* smlal	r12, r7, lr, r3                           #! PC = 0x80059ac *)
cast lr@sint32 lr;
smull tmp_h tmp_l lr r3;
uadds carry r12 tmp_l r12;
sadc r7 tmp_h r7 carry;
assert eqmod r12 0 (2**32) && true;
assume eq r12 0 && true;
(* vmov	r1, s15                                    #! PC = 0x80059b0 *)
mov r1 s15;
(* smull	r12, r8, r8, r1                           #! PC = 0x80059b4 *)
smull r8 r12 r8 r1;
(* mul.w	lr, r12, r2                               #! PC = 0x80059b8 *)
cast r12_s@sint32 r12;
mull discard lr r12_s r2;
(* smlal	r12, r8, lr, r3                           #! PC = 0x80059bc *)
cast lr@sint32 lr;
smull tmp_h tmp_l lr r3;
uadds carry r12 tmp_l r12;
sadc r8 tmp_h r8 carry;
assert eqmod r12 0 (2**32) && true;
assume eq r12 0 && true;
(* vmov	r1, s16                                    #! PC = 0x80059c0 *)
mov r1 s16;
(* smull	r12, r9, r9, r1                           #! PC = 0x80059c4 *)
smull r9 r12 r9 r1;
(* mul.w	lr, r12, r2                               #! PC = 0x80059c8 *)
cast r12_s@sint32 r12;
mull discard lr r12_s r2;
(* smlal	r12, r9, lr, r3                           #! PC = 0x80059cc *)
cast lr@sint32 lr;
smull tmp_h tmp_l lr r3;
uadds carry r12 tmp_l r12;
sadc r9 tmp_h r9 carry;
assert eqmod r12 0 (2**32) && true;
assume eq r12 0 && true;
(* vmov	r1, s17                                    #! PC = 0x80059d0 *)
mov r1 s17;
(* smull	r12, r10, r10, r1                         #! PC = 0x80059d4 *)
smull r10 r12 r10 r1;
(* mul.w	lr, r12, r2                               #! PC = 0x80059d8 *)
cast r12_s@sint32 r12;
mull discard lr r12_s r2;
(* smlal	r12, r10, lr, r3                          #! PC = 0x80059dc *)
cast lr@sint32 lr;
smull tmp_h tmp_l lr r3;
uadds carry r12 tmp_l r12;
sadc r10 tmp_h r10 carry;
assert eqmod r12 0 (2**32) && true;
assume eq r12 0 && true;
(* vmov	r1, s18                                    #! PC = 0x80059e0 *)
mov r1 s18;
(* smull	r12, r11, r11, r1                         #! PC = 0x80059e4 *)
smull r11 r12 r11 r1;
(* mul.w	lr, r12, r2                               #! PC = 0x80059e8 *)
cast r12_s@sint32 r12;
mull discard lr r12_s r2;
(* smlal	r12, r11, lr, r3                          #! PC = 0x80059ec *)
cast lr@sint32 lr;
smull tmp_h tmp_l lr r3;
uadds carry r12 tmp_l r12;
sadc r11 tmp_h r11 carry;
assert eqmod r12 0 (2**32) && true;
assume eq r12 0 && true;
(* mov.w	r1, r3, lsr #1                            #! PC = 0x80059f0 *)
split r1 discard r3 1;
(* cmp	r4, r1                                      #! PC = 0x80059f4 *)
sub cmp r4 r1;
split sign discard cmp 31;
cast sign@bit sign;
cmov tmp sign 0@sint32 r3;
sub r4 r4 tmp;
(* cmn	r4, r1                                      #! PC = 0x80059fa *)
add cmn r4 r1;
split sign discard cmn 31;
cast sign@bit sign;
cmov tmp sign r3 0@sint32;
add r4 r4 tmp;
(* cmp	r5, r1                                      #! PC = 0x8005a00 *)
sub cmp r5 r1;
split sign discard cmp 31;
cast sign@bit sign;
cmov tmp sign 0@sint32 r3;
sub r5 r5 tmp;
(* cmn	r5, r1                                      #! PC = 0x8005a06 *)
add cmn r5 r1;
split sign discard cmn 31;
cast sign@bit sign;
cmov tmp sign r3 0@sint32;
add r5 r5 tmp;
(* cmp	r6, r1                                      #! PC = 0x8005a0c *)
sub cmp r6 r1;
split sign discard cmp 31;
cast sign@bit sign;
cmov tmp sign 0@sint32 r3;
sub r6 r6 tmp;
(* cmn	r6, r1                                      #! PC = 0x8005a12 *)
add cmn r6 r1;
split sign discard cmn 31;
cast sign@bit sign;
cmov tmp sign r3 0@sint32;
add r6 r6 tmp;
(* cmp	r7, r1                                      #! PC = 0x8005a18 *)
sub cmp r7 r1;
split sign discard cmp 31;
cast sign@bit sign;
cmov tmp sign 0@sint32 r3;
sub r7 r7 tmp;
(* cmn	r7, r1                                      #! PC = 0x8005a1e *)
add cmn r7 r1;
split sign discard cmn 31;
cast sign@bit sign;
cmov tmp sign r3 0@sint32;
add r7 r7 tmp;
(* cmp	r8, r1                                      #! PC = 0x8005a24 *)
sub cmp r8 r1;
split sign discard cmp 31;
cast sign@bit sign;
cmov tmp sign 0@sint32 r3;
sub r8 r8 tmp;
(* cmn.w	r8, r1                                    #! PC = 0x8005a2c *)
add cmn r8 r1;
split sign discard cmn 31;
cast sign@bit sign;
cmov tmp sign r3 0@sint32;
add r8 r8 tmp;
(* cmp	r9, r1                                      #! PC = 0x8005a34 *)
sub cmp r9 r1;
split sign discard cmp 31;
cast sign@bit sign;
cmov tmp sign 0@sint32 r3;
sub r9 r9 tmp;
(* cmn.w	r9, r1                                    #! PC = 0x8005a3c *)
add cmn r9 r1;
split sign discard cmn 31;
cast sign@bit sign;
cmov tmp sign r3 0@sint32;
add r9 r9 tmp;
(* cmp	r10, r1                                     #! PC = 0x8005a44 *)
sub cmp r10 r1;
split sign discard cmp 31;
cast sign@bit sign;
cmov tmp sign 0@sint32 r3;
sub r10 r10 tmp;
(* cmn.w	r10, r1                                   #! PC = 0x8005a4c *)
add cmn r10 r1;
split sign discard cmn 31;
cast sign@bit sign;
cmov tmp sign r3 0@sint32;
add r10 r10 tmp;
(* cmp	r11, r1                                     #! PC = 0x8005a54 *)
sub cmp r11 r1;
split sign discard cmp 31;
cast sign@bit sign;
cmov tmp sign 0@sint32 r3;
sub r11 r11 tmp;
(* cmn.w	r11, r1                                   #! PC = 0x8005a5c *)
add cmn r11 r1;
split sign discard cmn 31;
cast sign@bit sign;
cmov tmp sign r3 0@sint32;
add r11 r11 tmp;
(* vmov	lr, s0                                     #! PC = 0x8005a64 *)
mov lr s0;
(* strh.w	r8, [lr, #256]	; 0x100                   #! EA = L0x20019964; PC = 0x8005a68 *)
ghost L0x20019964_f@sint32 : L0x20019964_f = r8 && L0x20019964_f = r8;
split discard L0x20019964_u r8 16;
cast L0x20019964@sint16 L0x20019964_u;
(* strh.w	r9, [lr, #320]	; 0x140                   #! EA = L0x200199a4; PC = 0x8005a6c *)
ghost L0x200199a4_f@sint32 : L0x200199a4_f = r9 && L0x200199a4_f = r9;
split discard L0x200199a4_u r9 16;
cast L0x200199a4@sint16 L0x200199a4_u;
(* strh.w	r10, [lr, #384]	; 0x180                  #! EA = L0x200199e4; PC = 0x8005a70 *)
ghost L0x200199e4_f@sint32 : L0x200199e4_f = r10 && L0x200199e4_f = r10;
split discard L0x200199e4_u r10 16;
cast L0x200199e4@sint16 L0x200199e4_u;
(* strh.w	r11, [lr, #448]	; 0x1c0                  #! EA = L0x20019a24; PC = 0x8005a74 *)
ghost L0x20019a24_f@sint32 : L0x20019a24_f = r11 && L0x20019a24_f = r11;
split discard L0x20019a24_u r11 16;
cast L0x20019a24@sint16 L0x20019a24_u;
(* strh.w	r5, [lr, #64]	; 0x40                     #! EA = L0x200198a4; PC = 0x8005a78 *)
ghost L0x200198a4_f@sint32 : L0x200198a4_f = r5 && L0x200198a4_f = r5;
split discard L0x200198a4_u r5 16;
cast L0x200198a4@sint16 L0x200198a4_u;
(* strh.w	r6, [lr, #128]	; 0x80                    #! EA = L0x200198e4; PC = 0x8005a7c *)
ghost L0x200198e4_f@sint32 : L0x200198e4_f = r6 && L0x200198e4_f = r6;
split discard L0x200198e4_u r6 16;
cast L0x200198e4@sint16 L0x200198e4_u;
(* strh.w	r7, [lr, #192]	; 0xc0                    #! EA = L0x20019924; PC = 0x8005a80 *)
ghost L0x20019924_f@sint32 : L0x20019924_f = r7 && L0x20019924_f = r7;
split discard L0x20019924_u r7 16;
cast L0x20019924@sint16 L0x20019924_u;
(* strh.w	r4, [lr], #2                             #! EA = L0x20019864; PC = 0x8005a84 *)
ghost L0x20019864_f@sint32 : L0x20019864_f = r4 && L0x20019864_f = r4;
split discard L0x20019864_u r4 16;
cast L0x20019864@sint16 L0x20019864_u;
(* vmov	s0, lr                                     #! PC = 0x8005a88 *)
mov s0 lr;
(* ldr.w	r8, [r0, #512]	; 0x200                    #! EA = L0x2001a484; Value = 0xff21d4b1; PC = 0x8005a8c *)
mov r8 L0x2001a484;
(* ldr.w	r9, [r0, #640]	; 0x280                    #! EA = L0x2001a504; Value = 0x014b1ba8; PC = 0x8005a90 *)
mov r9 L0x2001a504;
(* ldr.w	r10, [r0, #768]	; 0x300                   #! EA = L0x2001a584; Value = 0xff3a2e40; PC = 0x8005a94 *)
mov r10 L0x2001a584;
(* ldr.w	r11, [r0, #896]	; 0x380                   #! EA = L0x2001a604; Value = 0xfd1fd306; PC = 0x8005a98 *)
mov r11 L0x2001a604;
(* ldr.w	r5, [r0, #128]	; 0x80                     #! EA = L0x2001a304; Value = 0x0057a4f2; PC = 0x8005a9c *)
mov r5 L0x2001a304;
(* ldr.w	r6, [r0, #256]	; 0x100                    #! EA = L0x2001a384; Value = 0x00821ab9; PC = 0x8005aa0 *)
mov r6 L0x2001a384;
(* ldr.w	r7, [r0, #384]	; 0x180                    #! EA = L0x2001a404; Value = 0xff9fe368; PC = 0x8005aa4 *)
mov r7 L0x2001a404;
(* ldr.w	r4, [r0], #4                              #! EA = L0x2001a284; Value = 0x004b9da8; PC = 0x8005aa8 *)
mov r4 L0x2001a284;
(* vmov	r1, s4                                     #! PC = 0x8005aac *)
mov r1 s4;
(* smull	r12, r5, r5, r1                           #! PC = 0x8005ab0 *)
smull r5 r12 r5 r1;
(* mul.w	lr, r12, r2                               #! PC = 0x8005ab4 *)
cast r12_s@sint32 r12;
mull discard lr r12_s r2;
(* smlal	r12, r5, lr, r3                           #! PC = 0x8005ab8 *)
cast lr@sint32 lr;
smull tmp_h tmp_l lr r3;
uadds carry r12 tmp_l r12;
sadc r5 tmp_h r5 carry;
assert eqmod r12 0 (2**32) && true;
assume eq r12 0 && true;
(* smull	r12, r7, r7, r1                           #! PC = 0x8005abc *)
smull r7 r12 r7 r1;
(* mul.w	lr, r12, r2                               #! PC = 0x8005ac0 *)
cast r12_s@sint32 r12;
mull discard lr r12_s r2;
(* smlal	r12, r7, lr, r3                           #! PC = 0x8005ac4 *)
cast lr@sint32 lr;
smull tmp_h tmp_l lr r3;
uadds carry r12 tmp_l r12;
sadc r7 tmp_h r7 carry;
assert eqmod r12 0 (2**32) && true;
assume eq r12 0 && true;
(* smull	r12, r9, r9, r1                           #! PC = 0x8005ac8 *)
smull r9 r12 r9 r1;
(* mul.w	lr, r12, r2                               #! PC = 0x8005acc *)
cast r12_s@sint32 r12;
mull discard lr r12_s r2;
(* smlal	r12, r9, lr, r3                           #! PC = 0x8005ad0 *)
cast lr@sint32 lr;
smull tmp_h tmp_l lr r3;
uadds carry r12 tmp_l r12;
sadc r9 tmp_h r9 carry;
assert eqmod r12 0 (2**32) && true;
assume eq r12 0 && true;
(* smull	r12, r11, r11, r1                         #! PC = 0x8005ad4 *)
smull r11 r12 r11 r1;
(* mul.w	lr, r12, r2                               #! PC = 0x8005ad8 *)
cast r12_s@sint32 r12;
mull discard lr r12_s r2;
(* smlal	r12, r11, lr, r3                          #! PC = 0x8005adc *)
cast lr@sint32 lr;
smull tmp_h tmp_l lr r3;
uadds carry r12 tmp_l r12;
sadc r11 tmp_h r11 carry;
assert eqmod r12 0 (2**32) && true;
assume eq r12 0 && true;
(* add	r4, r5                                      #! PC = 0x8005ae0 *)
add r4 r4 r5;
(* add	r6, r7                                      #! PC = 0x8005ae2 *)
add r6 r6 r7;
(* add	r8, r9                                      #! PC = 0x8005ae4 *)
add r8 r8 r9;
(* add	r10, r11                                    #! PC = 0x8005ae6 *)
add r10 r10 r11;
(* sub.w	r5, r4, r5, lsl #1                        #! PC = 0x8005ae8 *)
shl tmp r5 1;
sub r5 r4 tmp;
(* sub.w	r7, r6, r7, lsl #1                        #! PC = 0x8005aec *)
shl tmp r7 1;
sub r7 r6 tmp;
(* sub.w	r9, r8, r9, lsl #1                        #! PC = 0x8005af0 *)
shl tmp r9 1;
sub r9 r8 tmp;
(* sub.w	r11, r10, r11, lsl #1                     #! PC = 0x8005af4 *)
shl tmp r11 1;
sub r11 r10 tmp;
(* vmov	r1, s5                                     #! PC = 0x8005af8 *)
mov r1 s5;
(* smull	r12, r6, r6, r1                           #! PC = 0x8005afc *)
smull r6 r12 r6 r1;
(* mul.w	lr, r12, r2                               #! PC = 0x8005b00 *)
cast r12_s@sint32 r12;
mull discard lr r12_s r2;
(* smlal	r12, r6, lr, r3                           #! PC = 0x8005b04 *)
cast lr@sint32 lr;
smull tmp_h tmp_l lr r3;
uadds carry r12 tmp_l r12;
sadc r6 tmp_h r6 carry;
assert eqmod r12 0 (2**32) && true;
assume eq r12 0 && true;
(* smull	r12, r10, r10, r1                         #! PC = 0x8005b08 *)
smull r10 r12 r10 r1;
(* mul.w	lr, r12, r2                               #! PC = 0x8005b0c *)
cast r12_s@sint32 r12;
mull discard lr r12_s r2;
(* smlal	r12, r10, lr, r3                          #! PC = 0x8005b10 *)
cast lr@sint32 lr;
smull tmp_h tmp_l lr r3;
uadds carry r12 tmp_l r12;
sadc r10 tmp_h r10 carry;
assert eqmod r12 0 (2**32) && true;
assume eq r12 0 && true;
(* vmov	r1, s6                                     #! PC = 0x8005b14 *)
mov r1 s6;
(* smull	r12, r7, r7, r1                           #! PC = 0x8005b18 *)
smull r7 r12 r7 r1;
(* mul.w	lr, r12, r2                               #! PC = 0x8005b1c *)
cast r12_s@sint32 r12;
mull discard lr r12_s r2;
(* smlal	r12, r7, lr, r3                           #! PC = 0x8005b20 *)
cast lr@sint32 lr;
smull tmp_h tmp_l lr r3;
uadds carry r12 tmp_l r12;
sadc r7 tmp_h r7 carry;
assert eqmod r12 0 (2**32) && true;
assume eq r12 0 && true;
(* smull	r12, r11, r11, r1                         #! PC = 0x8005b24 *)
smull r11 r12 r11 r1;
(* mul.w	lr, r12, r2                               #! PC = 0x8005b28 *)
cast r12_s@sint32 r12;
mull discard lr r12_s r2;
(* smlal	r12, r11, lr, r3                          #! PC = 0x8005b2c *)
cast lr@sint32 lr;
smull tmp_h tmp_l lr r3;
uadds carry r12 tmp_l r12;
sadc r11 tmp_h r11 carry;
assert eqmod r12 0 (2**32) && true;
assume eq r12 0 && true;
(* add	r4, r6                                      #! PC = 0x8005b30 *)
add r4 r4 r6;
(* add	r5, r7                                      #! PC = 0x8005b32 *)
add r5 r5 r7;
(* add	r8, r10                                     #! PC = 0x8005b34 *)
add r8 r8 r10;
(* add	r9, r11                                     #! PC = 0x8005b36 *)
add r9 r9 r11;
(* sub.w	r6, r4, r6, lsl #1                        #! PC = 0x8005b38 *)
shl tmp r6 1;
sub r6 r4 tmp;
(* sub.w	r7, r5, r7, lsl #1                        #! PC = 0x8005b3c *)
shl tmp r7 1;
sub r7 r5 tmp;
(* sub.w	r10, r8, r10, lsl #1                      #! PC = 0x8005b40 *)
shl tmp r10 1;
sub r10 r8 tmp;
(* sub.w	r11, r9, r11, lsl #1                      #! PC = 0x8005b44 *)
shl tmp r11 1;
sub r11 r9 tmp;
(* vmov	r1, s7                                     #! PC = 0x8005b48 *)
mov r1 s7;
(* smull	r12, r8, r8, r1                           #! PC = 0x8005b4c *)
smull r8 r12 r8 r1;
(* mul.w	lr, r12, r2                               #! PC = 0x8005b50 *)
cast r12_s@sint32 r12;
mull discard lr r12_s r2;
(* smlal	r12, r8, lr, r3                           #! PC = 0x8005b54 *)
cast lr@sint32 lr;
smull tmp_h tmp_l lr r3;
uadds carry r12 tmp_l r12;
sadc r8 tmp_h r8 carry;
assert eqmod r12 0 (2**32) && true;
assume eq r12 0 && true;
(* vmov	r1, s8                                     #! PC = 0x8005b58 *)
mov r1 s8;
(* smull	r12, r9, r9, r1                           #! PC = 0x8005b5c *)
smull r9 r12 r9 r1;
(* mul.w	lr, r12, r2                               #! PC = 0x8005b60 *)
cast r12_s@sint32 r12;
mull discard lr r12_s r2;
(* smlal	r12, r9, lr, r3                           #! PC = 0x8005b64 *)
cast lr@sint32 lr;
smull tmp_h tmp_l lr r3;
uadds carry r12 tmp_l r12;
sadc r9 tmp_h r9 carry;
assert eqmod r12 0 (2**32) && true;
assume eq r12 0 && true;
(* vmov	r1, s9                                     #! PC = 0x8005b68 *)
mov r1 s9;
(* smull	r12, r10, r10, r1                         #! PC = 0x8005b6c *)
smull r10 r12 r10 r1;
(* mul.w	lr, r12, r2                               #! PC = 0x8005b70 *)
cast r12_s@sint32 r12;
mull discard lr r12_s r2;
(* smlal	r12, r10, lr, r3                          #! PC = 0x8005b74 *)
cast lr@sint32 lr;
smull tmp_h tmp_l lr r3;
uadds carry r12 tmp_l r12;
sadc r10 tmp_h r10 carry;
assert eqmod r12 0 (2**32) && true;
assume eq r12 0 && true;
(* vmov	r1, s10                                    #! PC = 0x8005b78 *)
mov r1 s10;
(* smull	r12, r11, r11, r1                         #! PC = 0x8005b7c *)
smull r11 r12 r11 r1;
(* mul.w	lr, r12, r2                               #! PC = 0x8005b80 *)
cast r12_s@sint32 r12;
mull discard lr r12_s r2;
(* smlal	r12, r11, lr, r3                          #! PC = 0x8005b84 *)
cast lr@sint32 lr;
smull tmp_h tmp_l lr r3;
uadds carry r12 tmp_l r12;
sadc r11 tmp_h r11 carry;
assert eqmod r12 0 (2**32) && true;
assume eq r12 0 && true;
(* add	r4, r8                                      #! PC = 0x8005b88 *)
add r4 r4 r8;
(* add	r5, r9                                      #! PC = 0x8005b8a *)
add r5 r5 r9;
(* add	r6, r10                                     #! PC = 0x8005b8c *)
add r6 r6 r10;
(* add	r7, r11                                     #! PC = 0x8005b8e *)
add r7 r7 r11;
(* sub.w	r8, r4, r8, lsl #1                        #! PC = 0x8005b90 *)
shl tmp r8 1;
sub r8 r4 tmp;
(* sub.w	r9, r5, r9, lsl #1                        #! PC = 0x8005b94 *)
shl tmp r9 1;
sub r9 r5 tmp;
(* sub.w	r10, r6, r10, lsl #1                      #! PC = 0x8005b98 *)
shl tmp r10 1;
sub r10 r6 tmp;
(* sub.w	r11, r7, r11, lsl #1                      #! PC = 0x8005b9c *)
shl tmp r11 1;
sub r11 r7 tmp;
(* vmov	r1, s11                                    #! PC = 0x8005ba0 *)
mov r1 s11;
(* smull	r12, r4, r4, r1                           #! PC = 0x8005ba4 *)
smull r4 r12 r4 r1;
(* mul.w	lr, r12, r2                               #! PC = 0x8005ba8 *)
cast r12_s@sint32 r12;
mull discard lr r12_s r2;
(* smlal	r12, r4, lr, r3                           #! PC = 0x8005bac *)
cast lr@sint32 lr;
smull tmp_h tmp_l lr r3;
uadds carry r12 tmp_l r12;
sadc r4 tmp_h r4 carry;
assert eqmod r12 0 (2**32) && true;
assume eq r12 0 && true;
(* vmov	r1, s12                                    #! PC = 0x8005bb0 *)
mov r1 s12;
(* smull	r12, r5, r5, r1                           #! PC = 0x8005bb4 *)
smull r5 r12 r5 r1;
(* mul.w	lr, r12, r2                               #! PC = 0x8005bb8 *)
cast r12_s@sint32 r12;
mull discard lr r12_s r2;
(* smlal	r12, r5, lr, r3                           #! PC = 0x8005bbc *)
cast lr@sint32 lr;
smull tmp_h tmp_l lr r3;
uadds carry r12 tmp_l r12;
sadc r5 tmp_h r5 carry;
assert eqmod r12 0 (2**32) && true;
assume eq r12 0 && true;
(* vmov	r1, s13                                    #! PC = 0x8005bc0 *)
mov r1 s13;
(* smull	r12, r6, r6, r1                           #! PC = 0x8005bc4 *)
smull r6 r12 r6 r1;
(* mul.w	lr, r12, r2                               #! PC = 0x8005bc8 *)
cast r12_s@sint32 r12;
mull discard lr r12_s r2;
(* smlal	r12, r6, lr, r3                           #! PC = 0x8005bcc *)
cast lr@sint32 lr;
smull tmp_h tmp_l lr r3;
uadds carry r12 tmp_l r12;
sadc r6 tmp_h r6 carry;
assert eqmod r12 0 (2**32) && true;
assume eq r12 0 && true;
(* vmov	r1, s14                                    #! PC = 0x8005bd0 *)
mov r1 s14;
(* smull	r12, r7, r7, r1                           #! PC = 0x8005bd4 *)
smull r7 r12 r7 r1;
(* mul.w	lr, r12, r2                               #! PC = 0x8005bd8 *)
cast r12_s@sint32 r12;
mull discard lr r12_s r2;
(* smlal	r12, r7, lr, r3                           #! PC = 0x8005bdc *)
cast lr@sint32 lr;
smull tmp_h tmp_l lr r3;
uadds carry r12 tmp_l r12;
sadc r7 tmp_h r7 carry;
assert eqmod r12 0 (2**32) && true;
assume eq r12 0 && true;
(* vmov	r1, s15                                    #! PC = 0x8005be0 *)
mov r1 s15;
(* smull	r12, r8, r8, r1                           #! PC = 0x8005be4 *)
smull r8 r12 r8 r1;
(* mul.w	lr, r12, r2                               #! PC = 0x8005be8 *)
cast r12_s@sint32 r12;
mull discard lr r12_s r2;
(* smlal	r12, r8, lr, r3                           #! PC = 0x8005bec *)
cast lr@sint32 lr;
smull tmp_h tmp_l lr r3;
uadds carry r12 tmp_l r12;
sadc r8 tmp_h r8 carry;
assert eqmod r12 0 (2**32) && true;
assume eq r12 0 && true;
(* vmov	r1, s16                                    #! PC = 0x8005bf0 *)
mov r1 s16;
(* smull	r12, r9, r9, r1                           #! PC = 0x8005bf4 *)
smull r9 r12 r9 r1;
(* mul.w	lr, r12, r2                               #! PC = 0x8005bf8 *)
cast r12_s@sint32 r12;
mull discard lr r12_s r2;
(* smlal	r12, r9, lr, r3                           #! PC = 0x8005bfc *)
cast lr@sint32 lr;
smull tmp_h tmp_l lr r3;
uadds carry r12 tmp_l r12;
sadc r9 tmp_h r9 carry;
assert eqmod r12 0 (2**32) && true;
assume eq r12 0 && true;
(* vmov	r1, s17                                    #! PC = 0x8005c00 *)
mov r1 s17;
(* smull	r12, r10, r10, r1                         #! PC = 0x8005c04 *)
smull r10 r12 r10 r1;
(* mul.w	lr, r12, r2                               #! PC = 0x8005c08 *)
cast r12_s@sint32 r12;
mull discard lr r12_s r2;
(* smlal	r12, r10, lr, r3                          #! PC = 0x8005c0c *)
cast lr@sint32 lr;
smull tmp_h tmp_l lr r3;
uadds carry r12 tmp_l r12;
sadc r10 tmp_h r10 carry;
assert eqmod r12 0 (2**32) && true;
assume eq r12 0 && true;
(* vmov	r1, s18                                    #! PC = 0x8005c10 *)
mov r1 s18;
(* smull	r12, r11, r11, r1                         #! PC = 0x8005c14 *)
smull r11 r12 r11 r1;
(* mul.w	lr, r12, r2                               #! PC = 0x8005c18 *)
cast r12_s@sint32 r12;
mull discard lr r12_s r2;
(* smlal	r12, r11, lr, r3                          #! PC = 0x8005c1c *)
cast lr@sint32 lr;
smull tmp_h tmp_l lr r3;
uadds carry r12 tmp_l r12;
sadc r11 tmp_h r11 carry;
assert eqmod r12 0 (2**32) && true;
assume eq r12 0 && true;
(* mov.w	r1, r3, lsr #1                            #! PC = 0x8005c20 *)
split r1 discard r3 1;
(* cmp	r4, r1                                      #! PC = 0x8005c24 *)
sub cmp r4 r1;
split sign discard cmp 31;
cast sign@bit sign;
cmov tmp sign 0@sint32 r3;
sub r4 r4 tmp;
(* cmn	r4, r1                                      #! PC = 0x8005c2a *)
add cmn r4 r1;
split sign discard cmn 31;
cast sign@bit sign;
cmov tmp sign r3 0@sint32;
add r4 r4 tmp;
(* cmp	r5, r1                                      #! PC = 0x8005c30 *)
sub cmp r5 r1;
split sign discard cmp 31;
cast sign@bit sign;
cmov tmp sign 0@sint32 r3;
sub r5 r5 tmp;
(* cmn	r5, r1                                      #! PC = 0x8005c36 *)
add cmn r5 r1;
split sign discard cmn 31;
cast sign@bit sign;
cmov tmp sign r3 0@sint32;
add r5 r5 tmp;
(* cmp	r6, r1                                      #! PC = 0x8005c3c *)
sub cmp r6 r1;
split sign discard cmp 31;
cast sign@bit sign;
cmov tmp sign 0@sint32 r3;
sub r6 r6 tmp;
(* cmn	r6, r1                                      #! PC = 0x8005c42 *)
add cmn r6 r1;
split sign discard cmn 31;
cast sign@bit sign;
cmov tmp sign r3 0@sint32;
add r6 r6 tmp;
(* cmp	r7, r1                                      #! PC = 0x8005c48 *)
sub cmp r7 r1;
split sign discard cmp 31;
cast sign@bit sign;
cmov tmp sign 0@sint32 r3;
sub r7 r7 tmp;
(* cmn	r7, r1                                      #! PC = 0x8005c4e *)
add cmn r7 r1;
split sign discard cmn 31;
cast sign@bit sign;
cmov tmp sign r3 0@sint32;
add r7 r7 tmp;
(* cmp	r8, r1                                      #! PC = 0x8005c54 *)
sub cmp r8 r1;
split sign discard cmp 31;
cast sign@bit sign;
cmov tmp sign 0@sint32 r3;
sub r8 r8 tmp;
(* cmn.w	r8, r1                                    #! PC = 0x8005c5c *)
add cmn r8 r1;
split sign discard cmn 31;
cast sign@bit sign;
cmov tmp sign r3 0@sint32;
add r8 r8 tmp;
(* cmp	r9, r1                                      #! PC = 0x8005c64 *)
sub cmp r9 r1;
split sign discard cmp 31;
cast sign@bit sign;
cmov tmp sign 0@sint32 r3;
sub r9 r9 tmp;
(* cmn.w	r9, r1                                    #! PC = 0x8005c6c *)
add cmn r9 r1;
split sign discard cmn 31;
cast sign@bit sign;
cmov tmp sign r3 0@sint32;
add r9 r9 tmp;
(* cmp	r10, r1                                     #! PC = 0x8005c74 *)
sub cmp r10 r1;
split sign discard cmp 31;
cast sign@bit sign;
cmov tmp sign 0@sint32 r3;
sub r10 r10 tmp;
(* cmn.w	r10, r1                                   #! PC = 0x8005c7c *)
add cmn r10 r1;
split sign discard cmn 31;
cast sign@bit sign;
cmov tmp sign r3 0@sint32;
add r10 r10 tmp;
(* cmp	r11, r1                                     #! PC = 0x8005c84 *)
sub cmp r11 r1;
split sign discard cmp 31;
cast sign@bit sign;
cmov tmp sign 0@sint32 r3;
sub r11 r11 tmp;
(* cmn.w	r11, r1                                   #! PC = 0x8005c8c *)
add cmn r11 r1;
split sign discard cmn 31;
cast sign@bit sign;
cmov tmp sign r3 0@sint32;
add r11 r11 tmp;
(* vmov	lr, s0                                     #! PC = 0x8005c94 *)
mov lr s0;
(* strh.w	r8, [lr, #256]	; 0x100                   #! EA = L0x20019966; PC = 0x8005c98 *)
ghost L0x20019966_f@sint32 : L0x20019966_f = r8 && L0x20019966_f = r8;
split discard L0x20019966_u r8 16;
cast L0x20019966@sint16 L0x20019966_u;
(* strh.w	r9, [lr, #320]	; 0x140                   #! EA = L0x200199a6; PC = 0x8005c9c *)
ghost L0x200199a6_f@sint32 : L0x200199a6_f = r9 && L0x200199a6_f = r9;
split discard L0x200199a6_u r9 16;
cast L0x200199a6@sint16 L0x200199a6_u;
(* strh.w	r10, [lr, #384]	; 0x180                  #! EA = L0x200199e6; PC = 0x8005ca0 *)
ghost L0x200199e6_f@sint32 : L0x200199e6_f = r10 && L0x200199e6_f = r10;
split discard L0x200199e6_u r10 16;
cast L0x200199e6@sint16 L0x200199e6_u;
(* strh.w	r11, [lr, #448]	; 0x1c0                  #! EA = L0x20019a26; PC = 0x8005ca4 *)
ghost L0x20019a26_f@sint32 : L0x20019a26_f = r11 && L0x20019a26_f = r11;
split discard L0x20019a26_u r11 16;
cast L0x20019a26@sint16 L0x20019a26_u;
(* strh.w	r5, [lr, #64]	; 0x40                     #! EA = L0x200198a6; PC = 0x8005ca8 *)
ghost L0x200198a6_f@sint32 : L0x200198a6_f = r5 && L0x200198a6_f = r5;
split discard L0x200198a6_u r5 16;
cast L0x200198a6@sint16 L0x200198a6_u;
(* strh.w	r6, [lr, #128]	; 0x80                    #! EA = L0x200198e6; PC = 0x8005cac *)
ghost L0x200198e6_f@sint32 : L0x200198e6_f = r6 && L0x200198e6_f = r6;
split discard L0x200198e6_u r6 16;
cast L0x200198e6@sint16 L0x200198e6_u;
(* strh.w	r7, [lr, #192]	; 0xc0                    #! EA = L0x20019926; PC = 0x8005cb0 *)
ghost L0x20019926_f@sint32 : L0x20019926_f = r7 && L0x20019926_f = r7;
split discard L0x20019926_u r7 16;
cast L0x20019926@sint16 L0x20019926_u;
(* strh.w	r4, [lr], #2                             #! EA = L0x20019866; PC = 0x8005cb4 *)
ghost L0x20019866_f@sint32 : L0x20019866_f = r4 && L0x20019866_f = r4;
split discard L0x20019866_u r4 16;
cast L0x20019866@sint16 L0x20019866_u;
(* vmov	s0, lr                                     #! PC = 0x8005cb8 *)
mov s0 lr;
(* vmov	lr, s3                                     #! PC = 0x8005cbc *)
mov lr s3;
(* vmov	r12, s2                                    #! PC = 0x8005cc8 *)
mov r12 s2;
(* vmov	r1, s1                                     #! PC = 0x8005848 *)
mov r1 s1;
(* vldmia	r1!, {s4-s18}                            #! EA = L0x800f8ac; PC = 0x800584c *)
mov s4 L0x800f8ac;
mov s5 L0x800f8b0;
mov s6 L0x800f8b4;
mov s7 L0x800f8b8;
mov s8 L0x800f8bc;
mov s9 L0x800f8c0;
mov s10 L0x800f8c4;
mov s11 L0x800f8c8;
mov s12 L0x800f8cc;
mov s13 L0x800f8d0;
mov s14 L0x800f8d4;
mov s15 L0x800f8d8;
mov s16 L0x800f8dc;
mov s17 L0x800f8e0;
mov s18 L0x800f8e4;
(* vmov	s1, r1                                     #! PC = 0x8005850 *)
mov s1 r1;
(* add.w	lr, r0, #16                               #! PC = 0x8005854 *)
adds discard lr r0 16@uint32;
(* vmov	s3, lr                                     #! PC = 0x8005858 *)
mov s3 lr;
(* ldr.w	r8, [r0, #512]	; 0x200                    #! EA = L0x2001a488; Value = 0x002cfeec; PC = 0x800585c *)
mov r8 L0x2001a488;
(* ldr.w	r9, [r0, #640]	; 0x280                    #! EA = L0x2001a508; Value = 0x0311a100; PC = 0x8005860 *)
mov r9 L0x2001a508;
(* ldr.w	r10, [r0, #768]	; 0x300                   #! EA = L0x2001a588; Value = 0x011038f1; PC = 0x8005864 *)
mov r10 L0x2001a588;
(* ldr.w	r11, [r0, #896]	; 0x380                   #! EA = L0x2001a608; Value = 0xffe61170; PC = 0x8005868 *)
mov r11 L0x2001a608;
(* ldr.w	r5, [r0, #128]	; 0x80                     #! EA = L0x2001a308; Value = 0xff0a7307; PC = 0x800586c *)
mov r5 L0x2001a308;
(* ldr.w	r6, [r0, #256]	; 0x100                    #! EA = L0x2001a388; Value = 0x00cca43b; PC = 0x8005870 *)
mov r6 L0x2001a388;
(* ldr.w	r7, [r0, #384]	; 0x180                    #! EA = L0x2001a408; Value = 0x0233f0ad; PC = 0x8005874 *)
mov r7 L0x2001a408;
(* ldr.w	r4, [r0], #4                              #! EA = L0x2001a288; Value = 0xfeff77ef; PC = 0x8005878 *)
mov r4 L0x2001a288;
(* vmov	r1, s4                                     #! PC = 0x800587c *)
mov r1 s4;
(* smull	r12, r5, r5, r1                           #! PC = 0x8005880 *)
smull r5 r12 r5 r1;
(* mul.w	lr, r12, r2                               #! PC = 0x8005884 *)
cast r12_s@sint32 r12;
mull discard lr r12_s r2;
(* smlal	r12, r5, lr, r3                           #! PC = 0x8005888 *)
cast lr@sint32 lr;
smull tmp_h tmp_l lr r3;
uadds carry r12 tmp_l r12;
sadc r5 tmp_h r5 carry;
assert eqmod r12 0 (2**32) && true;
assume eq r12 0 && true;
(* smull	r12, r7, r7, r1                           #! PC = 0x800588c *)
smull r7 r12 r7 r1;
(* mul.w	lr, r12, r2                               #! PC = 0x8005890 *)
cast r12_s@sint32 r12;
mull discard lr r12_s r2;
(* smlal	r12, r7, lr, r3                           #! PC = 0x8005894 *)
cast lr@sint32 lr;
smull tmp_h tmp_l lr r3;
uadds carry r12 tmp_l r12;
sadc r7 tmp_h r7 carry;
assert eqmod r12 0 (2**32) && true;
assume eq r12 0 && true;
(* smull	r12, r9, r9, r1                           #! PC = 0x8005898 *)
smull r9 r12 r9 r1;
(* mul.w	lr, r12, r2                               #! PC = 0x800589c *)
cast r12_s@sint32 r12;
mull discard lr r12_s r2;
(* smlal	r12, r9, lr, r3                           #! PC = 0x80058a0 *)
cast lr@sint32 lr;
smull tmp_h tmp_l lr r3;
uadds carry r12 tmp_l r12;
sadc r9 tmp_h r9 carry;
assert eqmod r12 0 (2**32) && true;
assume eq r12 0 && true;
(* smull	r12, r11, r11, r1                         #! PC = 0x80058a4 *)
smull r11 r12 r11 r1;
(* mul.w	lr, r12, r2                               #! PC = 0x80058a8 *)
cast r12_s@sint32 r12;
mull discard lr r12_s r2;
(* smlal	r12, r11, lr, r3                          #! PC = 0x80058ac *)
cast lr@sint32 lr;
smull tmp_h tmp_l lr r3;
uadds carry r12 tmp_l r12;
sadc r11 tmp_h r11 carry;
assert eqmod r12 0 (2**32) && true;
assume eq r12 0 && true;
(* add	r4, r5                                      #! PC = 0x80058b0 *)
add r4 r4 r5;
(* add	r6, r7                                      #! PC = 0x80058b2 *)
add r6 r6 r7;
(* add	r8, r9                                      #! PC = 0x80058b4 *)
add r8 r8 r9;
(* add	r10, r11                                    #! PC = 0x80058b6 *)
add r10 r10 r11;
(* sub.w	r5, r4, r5, lsl #1                        #! PC = 0x80058b8 *)
shl tmp r5 1;
sub r5 r4 tmp;
(* sub.w	r7, r6, r7, lsl #1                        #! PC = 0x80058bc *)
shl tmp r7 1;
sub r7 r6 tmp;
(* sub.w	r9, r8, r9, lsl #1                        #! PC = 0x80058c0 *)
shl tmp r9 1;
sub r9 r8 tmp;
(* sub.w	r11, r10, r11, lsl #1                     #! PC = 0x80058c4 *)
shl tmp r11 1;
sub r11 r10 tmp;
(* vmov	r1, s5                                     #! PC = 0x80058c8 *)
mov r1 s5;
(* smull	r12, r6, r6, r1                           #! PC = 0x80058cc *)
smull r6 r12 r6 r1;
(* mul.w	lr, r12, r2                               #! PC = 0x80058d0 *)
cast r12_s@sint32 r12;
mull discard lr r12_s r2;
(* smlal	r12, r6, lr, r3                           #! PC = 0x80058d4 *)
cast lr@sint32 lr;
smull tmp_h tmp_l lr r3;
uadds carry r12 tmp_l r12;
sadc r6 tmp_h r6 carry;
assert eqmod r12 0 (2**32) && true;
assume eq r12 0 && true;
(* smull	r12, r10, r10, r1                         #! PC = 0x80058d8 *)
smull r10 r12 r10 r1;
(* mul.w	lr, r12, r2                               #! PC = 0x80058dc *)
cast r12_s@sint32 r12;
mull discard lr r12_s r2;
(* smlal	r12, r10, lr, r3                          #! PC = 0x80058e0 *)
cast lr@sint32 lr;
smull tmp_h tmp_l lr r3;
uadds carry r12 tmp_l r12;
sadc r10 tmp_h r10 carry;
assert eqmod r12 0 (2**32) && true;
assume eq r12 0 && true;
(* vmov	r1, s6                                     #! PC = 0x80058e4 *)
mov r1 s6;
(* smull	r12, r7, r7, r1                           #! PC = 0x80058e8 *)
smull r7 r12 r7 r1;
(* mul.w	lr, r12, r2                               #! PC = 0x80058ec *)
cast r12_s@sint32 r12;
mull discard lr r12_s r2;
(* smlal	r12, r7, lr, r3                           #! PC = 0x80058f0 *)
cast lr@sint32 lr;
smull tmp_h tmp_l lr r3;
uadds carry r12 tmp_l r12;
sadc r7 tmp_h r7 carry;
assert eqmod r12 0 (2**32) && true;
assume eq r12 0 && true;
(* smull	r12, r11, r11, r1                         #! PC = 0x80058f4 *)
smull r11 r12 r11 r1;
(* mul.w	lr, r12, r2                               #! PC = 0x80058f8 *)
cast r12_s@sint32 r12;
mull discard lr r12_s r2;
(* smlal	r12, r11, lr, r3                          #! PC = 0x80058fc *)
cast lr@sint32 lr;
smull tmp_h tmp_l lr r3;
uadds carry r12 tmp_l r12;
sadc r11 tmp_h r11 carry;
assert eqmod r12 0 (2**32) && true;
assume eq r12 0 && true;
(* add	r4, r6                                      #! PC = 0x8005900 *)
add r4 r4 r6;
(* add	r5, r7                                      #! PC = 0x8005902 *)
add r5 r5 r7;
(* add	r8, r10                                     #! PC = 0x8005904 *)
add r8 r8 r10;
(* add	r9, r11                                     #! PC = 0x8005906 *)
add r9 r9 r11;
(* sub.w	r6, r4, r6, lsl #1                        #! PC = 0x8005908 *)
shl tmp r6 1;
sub r6 r4 tmp;
(* sub.w	r7, r5, r7, lsl #1                        #! PC = 0x800590c *)
shl tmp r7 1;
sub r7 r5 tmp;
(* sub.w	r10, r8, r10, lsl #1                      #! PC = 0x8005910 *)
shl tmp r10 1;
sub r10 r8 tmp;
(* sub.w	r11, r9, r11, lsl #1                      #! PC = 0x8005914 *)
shl tmp r11 1;
sub r11 r9 tmp;
(* vmov	r1, s7                                     #! PC = 0x8005918 *)
mov r1 s7;
(* smull	r12, r8, r8, r1                           #! PC = 0x800591c *)
smull r8 r12 r8 r1;
(* mul.w	lr, r12, r2                               #! PC = 0x8005920 *)
cast r12_s@sint32 r12;
mull discard lr r12_s r2;
(* smlal	r12, r8, lr, r3                           #! PC = 0x8005924 *)
cast lr@sint32 lr;
smull tmp_h tmp_l lr r3;
uadds carry r12 tmp_l r12;
sadc r8 tmp_h r8 carry;
assert eqmod r12 0 (2**32) && true;
assume eq r12 0 && true;
(* vmov	r1, s8                                     #! PC = 0x8005928 *)
mov r1 s8;
(* smull	r12, r9, r9, r1                           #! PC = 0x800592c *)
smull r9 r12 r9 r1;
(* mul.w	lr, r12, r2                               #! PC = 0x8005930 *)
cast r12_s@sint32 r12;
mull discard lr r12_s r2;
(* smlal	r12, r9, lr, r3                           #! PC = 0x8005934 *)
cast lr@sint32 lr;
smull tmp_h tmp_l lr r3;
uadds carry r12 tmp_l r12;
sadc r9 tmp_h r9 carry;
assert eqmod r12 0 (2**32) && true;
assume eq r12 0 && true;
(* vmov	r1, s9                                     #! PC = 0x8005938 *)
mov r1 s9;
(* smull	r12, r10, r10, r1                         #! PC = 0x800593c *)
smull r10 r12 r10 r1;
(* mul.w	lr, r12, r2                               #! PC = 0x8005940 *)
cast r12_s@sint32 r12;
mull discard lr r12_s r2;
(* smlal	r12, r10, lr, r3                          #! PC = 0x8005944 *)
cast lr@sint32 lr;
smull tmp_h tmp_l lr r3;
uadds carry r12 tmp_l r12;
sadc r10 tmp_h r10 carry;
assert eqmod r12 0 (2**32) && true;
assume eq r12 0 && true;
(* vmov	r1, s10                                    #! PC = 0x8005948 *)
mov r1 s10;
(* smull	r12, r11, r11, r1                         #! PC = 0x800594c *)
smull r11 r12 r11 r1;
(* mul.w	lr, r12, r2                               #! PC = 0x8005950 *)
cast r12_s@sint32 r12;
mull discard lr r12_s r2;
(* smlal	r12, r11, lr, r3                          #! PC = 0x8005954 *)
cast lr@sint32 lr;
smull tmp_h tmp_l lr r3;
uadds carry r12 tmp_l r12;
sadc r11 tmp_h r11 carry;
assert eqmod r12 0 (2**32) && true;
assume eq r12 0 && true;
(* add	r4, r8                                      #! PC = 0x8005958 *)
add r4 r4 r8;
(* add	r5, r9                                      #! PC = 0x800595a *)
add r5 r5 r9;
(* add	r6, r10                                     #! PC = 0x800595c *)
add r6 r6 r10;
(* add	r7, r11                                     #! PC = 0x800595e *)
add r7 r7 r11;
(* sub.w	r8, r4, r8, lsl #1                        #! PC = 0x8005960 *)
shl tmp r8 1;
sub r8 r4 tmp;
(* sub.w	r9, r5, r9, lsl #1                        #! PC = 0x8005964 *)
shl tmp r9 1;
sub r9 r5 tmp;
(* sub.w	r10, r6, r10, lsl #1                      #! PC = 0x8005968 *)
shl tmp r10 1;
sub r10 r6 tmp;
(* sub.w	r11, r7, r11, lsl #1                      #! PC = 0x800596c *)
shl tmp r11 1;
sub r11 r7 tmp;
(* vmov	r1, s11                                    #! PC = 0x8005970 *)
mov r1 s11;
(* smull	r12, r4, r4, r1                           #! PC = 0x8005974 *)
smull r4 r12 r4 r1;
(* mul.w	lr, r12, r2                               #! PC = 0x8005978 *)
cast r12_s@sint32 r12;
mull discard lr r12_s r2;
(* smlal	r12, r4, lr, r3                           #! PC = 0x800597c *)
cast lr@sint32 lr;
smull tmp_h tmp_l lr r3;
uadds carry r12 tmp_l r12;
sadc r4 tmp_h r4 carry;
assert eqmod r12 0 (2**32) && true;
assume eq r12 0 && true;
(* vmov	r1, s12                                    #! PC = 0x8005980 *)
mov r1 s12;
(* smull	r12, r5, r5, r1                           #! PC = 0x8005984 *)
smull r5 r12 r5 r1;
(* mul.w	lr, r12, r2                               #! PC = 0x8005988 *)
cast r12_s@sint32 r12;
mull discard lr r12_s r2;
(* smlal	r12, r5, lr, r3                           #! PC = 0x800598c *)
cast lr@sint32 lr;
smull tmp_h tmp_l lr r3;
uadds carry r12 tmp_l r12;
sadc r5 tmp_h r5 carry;
assert eqmod r12 0 (2**32) && true;
assume eq r12 0 && true;
(* vmov	r1, s13                                    #! PC = 0x8005990 *)
mov r1 s13;
(* smull	r12, r6, r6, r1                           #! PC = 0x8005994 *)
smull r6 r12 r6 r1;
(* mul.w	lr, r12, r2                               #! PC = 0x8005998 *)
cast r12_s@sint32 r12;
mull discard lr r12_s r2;
(* smlal	r12, r6, lr, r3                           #! PC = 0x800599c *)
cast lr@sint32 lr;
smull tmp_h tmp_l lr r3;
uadds carry r12 tmp_l r12;
sadc r6 tmp_h r6 carry;
assert eqmod r12 0 (2**32) && true;
assume eq r12 0 && true;
(* vmov	r1, s14                                    #! PC = 0x80059a0 *)
mov r1 s14;
(* smull	r12, r7, r7, r1                           #! PC = 0x80059a4 *)
smull r7 r12 r7 r1;
(* mul.w	lr, r12, r2                               #! PC = 0x80059a8 *)
cast r12_s@sint32 r12;
mull discard lr r12_s r2;
(* smlal	r12, r7, lr, r3                           #! PC = 0x80059ac *)
cast lr@sint32 lr;
smull tmp_h tmp_l lr r3;
uadds carry r12 tmp_l r12;
sadc r7 tmp_h r7 carry;
assert eqmod r12 0 (2**32) && true;
assume eq r12 0 && true;
(* vmov	r1, s15                                    #! PC = 0x80059b0 *)
mov r1 s15;
(* smull	r12, r8, r8, r1                           #! PC = 0x80059b4 *)
smull r8 r12 r8 r1;
(* mul.w	lr, r12, r2                               #! PC = 0x80059b8 *)
cast r12_s@sint32 r12;
mull discard lr r12_s r2;
(* smlal	r12, r8, lr, r3                           #! PC = 0x80059bc *)
cast lr@sint32 lr;
smull tmp_h tmp_l lr r3;
uadds carry r12 tmp_l r12;
sadc r8 tmp_h r8 carry;
assert eqmod r12 0 (2**32) && true;
assume eq r12 0 && true;
(* vmov	r1, s16                                    #! PC = 0x80059c0 *)
mov r1 s16;
(* smull	r12, r9, r9, r1                           #! PC = 0x80059c4 *)
smull r9 r12 r9 r1;
(* mul.w	lr, r12, r2                               #! PC = 0x80059c8 *)
cast r12_s@sint32 r12;
mull discard lr r12_s r2;
(* smlal	r12, r9, lr, r3                           #! PC = 0x80059cc *)
cast lr@sint32 lr;
smull tmp_h tmp_l lr r3;
uadds carry r12 tmp_l r12;
sadc r9 tmp_h r9 carry;
assert eqmod r12 0 (2**32) && true;
assume eq r12 0 && true;
(* vmov	r1, s17                                    #! PC = 0x80059d0 *)
mov r1 s17;
(* smull	r12, r10, r10, r1                         #! PC = 0x80059d4 *)
smull r10 r12 r10 r1;
(* mul.w	lr, r12, r2                               #! PC = 0x80059d8 *)
cast r12_s@sint32 r12;
mull discard lr r12_s r2;
(* smlal	r12, r10, lr, r3                          #! PC = 0x80059dc *)
cast lr@sint32 lr;
smull tmp_h tmp_l lr r3;
uadds carry r12 tmp_l r12;
sadc r10 tmp_h r10 carry;
assert eqmod r12 0 (2**32) && true;
assume eq r12 0 && true;
(* vmov	r1, s18                                    #! PC = 0x80059e0 *)
mov r1 s18;
(* smull	r12, r11, r11, r1                         #! PC = 0x80059e4 *)
smull r11 r12 r11 r1;
(* mul.w	lr, r12, r2                               #! PC = 0x80059e8 *)
cast r12_s@sint32 r12;
mull discard lr r12_s r2;
(* smlal	r12, r11, lr, r3                          #! PC = 0x80059ec *)
cast lr@sint32 lr;
smull tmp_h tmp_l lr r3;
uadds carry r12 tmp_l r12;
sadc r11 tmp_h r11 carry;
assert eqmod r12 0 (2**32) && true;
assume eq r12 0 && true;
(* mov.w	r1, r3, lsr #1                            #! PC = 0x80059f0 *)
split r1 discard r3 1;
(* cmp	r4, r1                                      #! PC = 0x80059f4 *)
sub cmp r4 r1;
split sign discard cmp 31;
cast sign@bit sign;
cmov tmp sign 0@sint32 r3;
sub r4 r4 tmp;
(* cmn	r4, r1                                      #! PC = 0x80059fa *)
add cmn r4 r1;
split sign discard cmn 31;
cast sign@bit sign;
cmov tmp sign r3 0@sint32;
add r4 r4 tmp;
(* cmp	r5, r1                                      #! PC = 0x8005a00 *)
sub cmp r5 r1;
split sign discard cmp 31;
cast sign@bit sign;
cmov tmp sign 0@sint32 r3;
sub r5 r5 tmp;
(* cmn	r5, r1                                      #! PC = 0x8005a06 *)
add cmn r5 r1;
split sign discard cmn 31;
cast sign@bit sign;
cmov tmp sign r3 0@sint32;
add r5 r5 tmp;
(* cmp	r6, r1                                      #! PC = 0x8005a0c *)
sub cmp r6 r1;
split sign discard cmp 31;
cast sign@bit sign;
cmov tmp sign 0@sint32 r3;
sub r6 r6 tmp;
(* cmn	r6, r1                                      #! PC = 0x8005a12 *)
add cmn r6 r1;
split sign discard cmn 31;
cast sign@bit sign;
cmov tmp sign r3 0@sint32;
add r6 r6 tmp;
(* cmp	r7, r1                                      #! PC = 0x8005a18 *)
sub cmp r7 r1;
split sign discard cmp 31;
cast sign@bit sign;
cmov tmp sign 0@sint32 r3;
sub r7 r7 tmp;
(* cmn	r7, r1                                      #! PC = 0x8005a1e *)
add cmn r7 r1;
split sign discard cmn 31;
cast sign@bit sign;
cmov tmp sign r3 0@sint32;
add r7 r7 tmp;
(* cmp	r8, r1                                      #! PC = 0x8005a24 *)
sub cmp r8 r1;
split sign discard cmp 31;
cast sign@bit sign;
cmov tmp sign 0@sint32 r3;
sub r8 r8 tmp;
(* cmn.w	r8, r1                                    #! PC = 0x8005a2c *)
add cmn r8 r1;
split sign discard cmn 31;
cast sign@bit sign;
cmov tmp sign r3 0@sint32;
add r8 r8 tmp;
(* cmp	r9, r1                                      #! PC = 0x8005a34 *)
sub cmp r9 r1;
split sign discard cmp 31;
cast sign@bit sign;
cmov tmp sign 0@sint32 r3;
sub r9 r9 tmp;
(* cmn.w	r9, r1                                    #! PC = 0x8005a3c *)
add cmn r9 r1;
split sign discard cmn 31;
cast sign@bit sign;
cmov tmp sign r3 0@sint32;
add r9 r9 tmp;
(* cmp	r10, r1                                     #! PC = 0x8005a44 *)
sub cmp r10 r1;
split sign discard cmp 31;
cast sign@bit sign;
cmov tmp sign 0@sint32 r3;
sub r10 r10 tmp;
(* cmn.w	r10, r1                                   #! PC = 0x8005a4c *)
add cmn r10 r1;
split sign discard cmn 31;
cast sign@bit sign;
cmov tmp sign r3 0@sint32;
add r10 r10 tmp;
(* cmp	r11, r1                                     #! PC = 0x8005a54 *)
sub cmp r11 r1;
split sign discard cmp 31;
cast sign@bit sign;
cmov tmp sign 0@sint32 r3;
sub r11 r11 tmp;
(* cmn.w	r11, r1                                   #! PC = 0x8005a5c *)
add cmn r11 r1;
split sign discard cmn 31;
cast sign@bit sign;
cmov tmp sign r3 0@sint32;
add r11 r11 tmp;
(* vmov	lr, s0                                     #! PC = 0x8005a64 *)
mov lr s0;
(* strh.w	r8, [lr, #256]	; 0x100                   #! EA = L0x20019968; PC = 0x8005a68 *)
ghost L0x20019968_f@sint32 : L0x20019968_f = r8 && L0x20019968_f = r8;
split discard L0x20019968_u r8 16;
cast L0x20019968@sint16 L0x20019968_u;
(* strh.w	r9, [lr, #320]	; 0x140                   #! EA = L0x200199a8; PC = 0x8005a6c *)
ghost L0x200199a8_f@sint32 : L0x200199a8_f = r9 && L0x200199a8_f = r9;
split discard L0x200199a8_u r9 16;
cast L0x200199a8@sint16 L0x200199a8_u;
(* strh.w	r10, [lr, #384]	; 0x180                  #! EA = L0x200199e8; PC = 0x8005a70 *)
ghost L0x200199e8_f@sint32 : L0x200199e8_f = r10 && L0x200199e8_f = r10;
split discard L0x200199e8_u r10 16;
cast L0x200199e8@sint16 L0x200199e8_u;
(* strh.w	r11, [lr, #448]	; 0x1c0                  #! EA = L0x20019a28; PC = 0x8005a74 *)
ghost L0x20019a28_f@sint32 : L0x20019a28_f = r11 && L0x20019a28_f = r11;
split discard L0x20019a28_u r11 16;
cast L0x20019a28@sint16 L0x20019a28_u;
(* strh.w	r5, [lr, #64]	; 0x40                     #! EA = L0x200198a8; PC = 0x8005a78 *)
ghost L0x200198a8_f@sint32 : L0x200198a8_f = r5 && L0x200198a8_f = r5;
split discard L0x200198a8_u r5 16;
cast L0x200198a8@sint16 L0x200198a8_u;
(* strh.w	r6, [lr, #128]	; 0x80                    #! EA = L0x200198e8; PC = 0x8005a7c *)
ghost L0x200198e8_f@sint32 : L0x200198e8_f = r6 && L0x200198e8_f = r6;
split discard L0x200198e8_u r6 16;
cast L0x200198e8@sint16 L0x200198e8_u;
(* strh.w	r7, [lr, #192]	; 0xc0                    #! EA = L0x20019928; PC = 0x8005a80 *)
ghost L0x20019928_f@sint32 : L0x20019928_f = r7 && L0x20019928_f = r7;
split discard L0x20019928_u r7 16;
cast L0x20019928@sint16 L0x20019928_u;
(* strh.w	r4, [lr], #2                             #! EA = L0x20019868; PC = 0x8005a84 *)
ghost L0x20019868_f@sint32 : L0x20019868_f = r4 && L0x20019868_f = r4;
split discard L0x20019868_u r4 16;
cast L0x20019868@sint16 L0x20019868_u;
(* vmov	s0, lr                                     #! PC = 0x8005a88 *)
mov s0 lr;
(* ldr.w	r8, [r0, #512]	; 0x200                    #! EA = L0x2001a48c; Value = 0xfea35859; PC = 0x8005a8c *)
mov r8 L0x2001a48c;
(* ldr.w	r9, [r0, #640]	; 0x280                    #! EA = L0x2001a50c; Value = 0x007f68d7; PC = 0x8005a90 *)
mov r9 L0x2001a50c;
(* ldr.w	r10, [r0, #768]	; 0x300                   #! EA = L0x2001a58c; Value = 0x00c33d57; PC = 0x8005a94 *)
mov r10 L0x2001a58c;
(* ldr.w	r11, [r0, #896]	; 0x380                   #! EA = L0x2001a60c; Value = 0x017c42d5; PC = 0x8005a98 *)
mov r11 L0x2001a60c;
(* ldr.w	r5, [r0, #128]	; 0x80                     #! EA = L0x2001a30c; Value = 0x00753561; PC = 0x8005a9c *)
mov r5 L0x2001a30c;
(* ldr.w	r6, [r0, #256]	; 0x100                    #! EA = L0x2001a38c; Value = 0xfcf9f0bc; PC = 0x8005aa0 *)
mov r6 L0x2001a38c;
(* ldr.w	r7, [r0, #384]	; 0x180                    #! EA = L0x2001a40c; Value = 0x01895b1d; PC = 0x8005aa4 *)
mov r7 L0x2001a40c;
(* ldr.w	r4, [r0], #4                              #! EA = L0x2001a28c; Value = 0xfe99f398; PC = 0x8005aa8 *)
mov r4 L0x2001a28c;
(* vmov	r1, s4                                     #! PC = 0x8005aac *)
mov r1 s4;
(* smull	r12, r5, r5, r1                           #! PC = 0x8005ab0 *)
smull r5 r12 r5 r1;
(* mul.w	lr, r12, r2                               #! PC = 0x8005ab4 *)
cast r12_s@sint32 r12;
mull discard lr r12_s r2;
(* smlal	r12, r5, lr, r3                           #! PC = 0x8005ab8 *)
cast lr@sint32 lr;
smull tmp_h tmp_l lr r3;
uadds carry r12 tmp_l r12;
sadc r5 tmp_h r5 carry;
assert eqmod r12 0 (2**32) && true;
assume eq r12 0 && true;
(* smull	r12, r7, r7, r1                           #! PC = 0x8005abc *)
smull r7 r12 r7 r1;
(* mul.w	lr, r12, r2                               #! PC = 0x8005ac0 *)
cast r12_s@sint32 r12;
mull discard lr r12_s r2;
(* smlal	r12, r7, lr, r3                           #! PC = 0x8005ac4 *)
cast lr@sint32 lr;
smull tmp_h tmp_l lr r3;
uadds carry r12 tmp_l r12;
sadc r7 tmp_h r7 carry;
assert eqmod r12 0 (2**32) && true;
assume eq r12 0 && true;
(* smull	r12, r9, r9, r1                           #! PC = 0x8005ac8 *)
smull r9 r12 r9 r1;
(* mul.w	lr, r12, r2                               #! PC = 0x8005acc *)
cast r12_s@sint32 r12;
mull discard lr r12_s r2;
(* smlal	r12, r9, lr, r3                           #! PC = 0x8005ad0 *)
cast lr@sint32 lr;
smull tmp_h tmp_l lr r3;
uadds carry r12 tmp_l r12;
sadc r9 tmp_h r9 carry;
assert eqmod r12 0 (2**32) && true;
assume eq r12 0 && true;
(* smull	r12, r11, r11, r1                         #! PC = 0x8005ad4 *)
smull r11 r12 r11 r1;
(* mul.w	lr, r12, r2                               #! PC = 0x8005ad8 *)
cast r12_s@sint32 r12;
mull discard lr r12_s r2;
(* smlal	r12, r11, lr, r3                          #! PC = 0x8005adc *)
cast lr@sint32 lr;
smull tmp_h tmp_l lr r3;
uadds carry r12 tmp_l r12;
sadc r11 tmp_h r11 carry;
assert eqmod r12 0 (2**32) && true;
assume eq r12 0 && true;
(* add	r4, r5                                      #! PC = 0x8005ae0 *)
add r4 r4 r5;
(* add	r6, r7                                      #! PC = 0x8005ae2 *)
add r6 r6 r7;
(* add	r8, r9                                      #! PC = 0x8005ae4 *)
add r8 r8 r9;
(* add	r10, r11                                    #! PC = 0x8005ae6 *)
add r10 r10 r11;
(* sub.w	r5, r4, r5, lsl #1                        #! PC = 0x8005ae8 *)
shl tmp r5 1;
sub r5 r4 tmp;
(* sub.w	r7, r6, r7, lsl #1                        #! PC = 0x8005aec *)
shl tmp r7 1;
sub r7 r6 tmp;
(* sub.w	r9, r8, r9, lsl #1                        #! PC = 0x8005af0 *)
shl tmp r9 1;
sub r9 r8 tmp;
(* sub.w	r11, r10, r11, lsl #1                     #! PC = 0x8005af4 *)
shl tmp r11 1;
sub r11 r10 tmp;
(* vmov	r1, s5                                     #! PC = 0x8005af8 *)
mov r1 s5;
(* smull	r12, r6, r6, r1                           #! PC = 0x8005afc *)
smull r6 r12 r6 r1;
(* mul.w	lr, r12, r2                               #! PC = 0x8005b00 *)
cast r12_s@sint32 r12;
mull discard lr r12_s r2;
(* smlal	r12, r6, lr, r3                           #! PC = 0x8005b04 *)
cast lr@sint32 lr;
smull tmp_h tmp_l lr r3;
uadds carry r12 tmp_l r12;
sadc r6 tmp_h r6 carry;
assert eqmod r12 0 (2**32) && true;
assume eq r12 0 && true;
(* smull	r12, r10, r10, r1                         #! PC = 0x8005b08 *)
smull r10 r12 r10 r1;
(* mul.w	lr, r12, r2                               #! PC = 0x8005b0c *)
cast r12_s@sint32 r12;
mull discard lr r12_s r2;
(* smlal	r12, r10, lr, r3                          #! PC = 0x8005b10 *)
cast lr@sint32 lr;
smull tmp_h tmp_l lr r3;
uadds carry r12 tmp_l r12;
sadc r10 tmp_h r10 carry;
assert eqmod r12 0 (2**32) && true;
assume eq r12 0 && true;
(* vmov	r1, s6                                     #! PC = 0x8005b14 *)
mov r1 s6;
(* smull	r12, r7, r7, r1                           #! PC = 0x8005b18 *)
smull r7 r12 r7 r1;
(* mul.w	lr, r12, r2                               #! PC = 0x8005b1c *)
cast r12_s@sint32 r12;
mull discard lr r12_s r2;
(* smlal	r12, r7, lr, r3                           #! PC = 0x8005b20 *)
cast lr@sint32 lr;
smull tmp_h tmp_l lr r3;
uadds carry r12 tmp_l r12;
sadc r7 tmp_h r7 carry;
assert eqmod r12 0 (2**32) && true;
assume eq r12 0 && true;
(* smull	r12, r11, r11, r1                         #! PC = 0x8005b24 *)
smull r11 r12 r11 r1;
(* mul.w	lr, r12, r2                               #! PC = 0x8005b28 *)
cast r12_s@sint32 r12;
mull discard lr r12_s r2;
(* smlal	r12, r11, lr, r3                          #! PC = 0x8005b2c *)
cast lr@sint32 lr;
smull tmp_h tmp_l lr r3;
uadds carry r12 tmp_l r12;
sadc r11 tmp_h r11 carry;
assert eqmod r12 0 (2**32) && true;
assume eq r12 0 && true;
(* add	r4, r6                                      #! PC = 0x8005b30 *)
add r4 r4 r6;
(* add	r5, r7                                      #! PC = 0x8005b32 *)
add r5 r5 r7;
(* add	r8, r10                                     #! PC = 0x8005b34 *)
add r8 r8 r10;
(* add	r9, r11                                     #! PC = 0x8005b36 *)
add r9 r9 r11;
(* sub.w	r6, r4, r6, lsl #1                        #! PC = 0x8005b38 *)
shl tmp r6 1;
sub r6 r4 tmp;
(* sub.w	r7, r5, r7, lsl #1                        #! PC = 0x8005b3c *)
shl tmp r7 1;
sub r7 r5 tmp;
(* sub.w	r10, r8, r10, lsl #1                      #! PC = 0x8005b40 *)
shl tmp r10 1;
sub r10 r8 tmp;
(* sub.w	r11, r9, r11, lsl #1                      #! PC = 0x8005b44 *)
shl tmp r11 1;
sub r11 r9 tmp;
(* vmov	r1, s7                                     #! PC = 0x8005b48 *)
mov r1 s7;
(* smull	r12, r8, r8, r1                           #! PC = 0x8005b4c *)
smull r8 r12 r8 r1;
(* mul.w	lr, r12, r2                               #! PC = 0x8005b50 *)
cast r12_s@sint32 r12;
mull discard lr r12_s r2;
(* smlal	r12, r8, lr, r3                           #! PC = 0x8005b54 *)
cast lr@sint32 lr;
smull tmp_h tmp_l lr r3;
uadds carry r12 tmp_l r12;
sadc r8 tmp_h r8 carry;
assert eqmod r12 0 (2**32) && true;
assume eq r12 0 && true;
(* vmov	r1, s8                                     #! PC = 0x8005b58 *)
mov r1 s8;
(* smull	r12, r9, r9, r1                           #! PC = 0x8005b5c *)
smull r9 r12 r9 r1;
(* mul.w	lr, r12, r2                               #! PC = 0x8005b60 *)
cast r12_s@sint32 r12;
mull discard lr r12_s r2;
(* smlal	r12, r9, lr, r3                           #! PC = 0x8005b64 *)
cast lr@sint32 lr;
smull tmp_h tmp_l lr r3;
uadds carry r12 tmp_l r12;
sadc r9 tmp_h r9 carry;
assert eqmod r12 0 (2**32) && true;
assume eq r12 0 && true;
(* vmov	r1, s9                                     #! PC = 0x8005b68 *)
mov r1 s9;
(* smull	r12, r10, r10, r1                         #! PC = 0x8005b6c *)
smull r10 r12 r10 r1;
(* mul.w	lr, r12, r2                               #! PC = 0x8005b70 *)
cast r12_s@sint32 r12;
mull discard lr r12_s r2;
(* smlal	r12, r10, lr, r3                          #! PC = 0x8005b74 *)
cast lr@sint32 lr;
smull tmp_h tmp_l lr r3;
uadds carry r12 tmp_l r12;
sadc r10 tmp_h r10 carry;
assert eqmod r12 0 (2**32) && true;
assume eq r12 0 && true;
(* vmov	r1, s10                                    #! PC = 0x8005b78 *)
mov r1 s10;
(* smull	r12, r11, r11, r1                         #! PC = 0x8005b7c *)
smull r11 r12 r11 r1;
(* mul.w	lr, r12, r2                               #! PC = 0x8005b80 *)
cast r12_s@sint32 r12;
mull discard lr r12_s r2;
(* smlal	r12, r11, lr, r3                          #! PC = 0x8005b84 *)
cast lr@sint32 lr;
smull tmp_h tmp_l lr r3;
uadds carry r12 tmp_l r12;
sadc r11 tmp_h r11 carry;
assert eqmod r12 0 (2**32) && true;
assume eq r12 0 && true;
(* add	r4, r8                                      #! PC = 0x8005b88 *)
add r4 r4 r8;
(* add	r5, r9                                      #! PC = 0x8005b8a *)
add r5 r5 r9;
(* add	r6, r10                                     #! PC = 0x8005b8c *)
add r6 r6 r10;
(* add	r7, r11                                     #! PC = 0x8005b8e *)
add r7 r7 r11;
(* sub.w	r8, r4, r8, lsl #1                        #! PC = 0x8005b90 *)
shl tmp r8 1;
sub r8 r4 tmp;
(* sub.w	r9, r5, r9, lsl #1                        #! PC = 0x8005b94 *)
shl tmp r9 1;
sub r9 r5 tmp;
(* sub.w	r10, r6, r10, lsl #1                      #! PC = 0x8005b98 *)
shl tmp r10 1;
sub r10 r6 tmp;
(* sub.w	r11, r7, r11, lsl #1                      #! PC = 0x8005b9c *)
shl tmp r11 1;
sub r11 r7 tmp;
(* vmov	r1, s11                                    #! PC = 0x8005ba0 *)
mov r1 s11;
(* smull	r12, r4, r4, r1                           #! PC = 0x8005ba4 *)
smull r4 r12 r4 r1;
(* mul.w	lr, r12, r2                               #! PC = 0x8005ba8 *)
cast r12_s@sint32 r12;
mull discard lr r12_s r2;
(* smlal	r12, r4, lr, r3                           #! PC = 0x8005bac *)
cast lr@sint32 lr;
smull tmp_h tmp_l lr r3;
uadds carry r12 tmp_l r12;
sadc r4 tmp_h r4 carry;
assert eqmod r12 0 (2**32) && true;
assume eq r12 0 && true;
(* vmov	r1, s12                                    #! PC = 0x8005bb0 *)
mov r1 s12;
(* smull	r12, r5, r5, r1                           #! PC = 0x8005bb4 *)
smull r5 r12 r5 r1;
(* mul.w	lr, r12, r2                               #! PC = 0x8005bb8 *)
cast r12_s@sint32 r12;
mull discard lr r12_s r2;
(* smlal	r12, r5, lr, r3                           #! PC = 0x8005bbc *)
cast lr@sint32 lr;
smull tmp_h tmp_l lr r3;
uadds carry r12 tmp_l r12;
sadc r5 tmp_h r5 carry;
assert eqmod r12 0 (2**32) && true;
assume eq r12 0 && true;
(* vmov	r1, s13                                    #! PC = 0x8005bc0 *)
mov r1 s13;
(* smull	r12, r6, r6, r1                           #! PC = 0x8005bc4 *)
smull r6 r12 r6 r1;
(* mul.w	lr, r12, r2                               #! PC = 0x8005bc8 *)
cast r12_s@sint32 r12;
mull discard lr r12_s r2;
(* smlal	r12, r6, lr, r3                           #! PC = 0x8005bcc *)
cast lr@sint32 lr;
smull tmp_h tmp_l lr r3;
uadds carry r12 tmp_l r12;
sadc r6 tmp_h r6 carry;
assert eqmod r12 0 (2**32) && true;
assume eq r12 0 && true;
(* vmov	r1, s14                                    #! PC = 0x8005bd0 *)
mov r1 s14;
(* smull	r12, r7, r7, r1                           #! PC = 0x8005bd4 *)
smull r7 r12 r7 r1;
(* mul.w	lr, r12, r2                               #! PC = 0x8005bd8 *)
cast r12_s@sint32 r12;
mull discard lr r12_s r2;
(* smlal	r12, r7, lr, r3                           #! PC = 0x8005bdc *)
cast lr@sint32 lr;
smull tmp_h tmp_l lr r3;
uadds carry r12 tmp_l r12;
sadc r7 tmp_h r7 carry;
assert eqmod r12 0 (2**32) && true;
assume eq r12 0 && true;
(* vmov	r1, s15                                    #! PC = 0x8005be0 *)
mov r1 s15;
(* smull	r12, r8, r8, r1                           #! PC = 0x8005be4 *)
smull r8 r12 r8 r1;
(* mul.w	lr, r12, r2                               #! PC = 0x8005be8 *)
cast r12_s@sint32 r12;
mull discard lr r12_s r2;
(* smlal	r12, r8, lr, r3                           #! PC = 0x8005bec *)
cast lr@sint32 lr;
smull tmp_h tmp_l lr r3;
uadds carry r12 tmp_l r12;
sadc r8 tmp_h r8 carry;
assert eqmod r12 0 (2**32) && true;
assume eq r12 0 && true;
(* vmov	r1, s16                                    #! PC = 0x8005bf0 *)
mov r1 s16;
(* smull	r12, r9, r9, r1                           #! PC = 0x8005bf4 *)
smull r9 r12 r9 r1;
(* mul.w	lr, r12, r2                               #! PC = 0x8005bf8 *)
cast r12_s@sint32 r12;
mull discard lr r12_s r2;
(* smlal	r12, r9, lr, r3                           #! PC = 0x8005bfc *)
cast lr@sint32 lr;
smull tmp_h tmp_l lr r3;
uadds carry r12 tmp_l r12;
sadc r9 tmp_h r9 carry;
assert eqmod r12 0 (2**32) && true;
assume eq r12 0 && true;
(* vmov	r1, s17                                    #! PC = 0x8005c00 *)
mov r1 s17;
(* smull	r12, r10, r10, r1                         #! PC = 0x8005c04 *)
smull r10 r12 r10 r1;
(* mul.w	lr, r12, r2                               #! PC = 0x8005c08 *)
cast r12_s@sint32 r12;
mull discard lr r12_s r2;
(* smlal	r12, r10, lr, r3                          #! PC = 0x8005c0c *)
cast lr@sint32 lr;
smull tmp_h tmp_l lr r3;
uadds carry r12 tmp_l r12;
sadc r10 tmp_h r10 carry;
assert eqmod r12 0 (2**32) && true;
assume eq r12 0 && true;
(* vmov	r1, s18                                    #! PC = 0x8005c10 *)
mov r1 s18;
(* smull	r12, r11, r11, r1                         #! PC = 0x8005c14 *)
smull r11 r12 r11 r1;
(* mul.w	lr, r12, r2                               #! PC = 0x8005c18 *)
cast r12_s@sint32 r12;
mull discard lr r12_s r2;
(* smlal	r12, r11, lr, r3                          #! PC = 0x8005c1c *)
cast lr@sint32 lr;
smull tmp_h tmp_l lr r3;
uadds carry r12 tmp_l r12;
sadc r11 tmp_h r11 carry;
assert eqmod r12 0 (2**32) && true;
assume eq r12 0 && true;
(* mov.w	r1, r3, lsr #1                            #! PC = 0x8005c20 *)
split r1 discard r3 1;
(* cmp	r4, r1                                      #! PC = 0x8005c24 *)
sub cmp r4 r1;
split sign discard cmp 31;
cast sign@bit sign;
cmov tmp sign 0@sint32 r3;
sub r4 r4 tmp;
(* cmn	r4, r1                                      #! PC = 0x8005c2a *)
add cmn r4 r1;
split sign discard cmn 31;
cast sign@bit sign;
cmov tmp sign r3 0@sint32;
add r4 r4 tmp;
(* cmp	r5, r1                                      #! PC = 0x8005c30 *)
sub cmp r5 r1;
split sign discard cmp 31;
cast sign@bit sign;
cmov tmp sign 0@sint32 r3;
sub r5 r5 tmp;
(* cmn	r5, r1                                      #! PC = 0x8005c36 *)
add cmn r5 r1;
split sign discard cmn 31;
cast sign@bit sign;
cmov tmp sign r3 0@sint32;
add r5 r5 tmp;
(* cmp	r6, r1                                      #! PC = 0x8005c3c *)
sub cmp r6 r1;
split sign discard cmp 31;
cast sign@bit sign;
cmov tmp sign 0@sint32 r3;
sub r6 r6 tmp;
(* cmn	r6, r1                                      #! PC = 0x8005c42 *)
add cmn r6 r1;
split sign discard cmn 31;
cast sign@bit sign;
cmov tmp sign r3 0@sint32;
add r6 r6 tmp;
(* cmp	r7, r1                                      #! PC = 0x8005c48 *)
sub cmp r7 r1;
split sign discard cmp 31;
cast sign@bit sign;
cmov tmp sign 0@sint32 r3;
sub r7 r7 tmp;
(* cmn	r7, r1                                      #! PC = 0x8005c4e *)
add cmn r7 r1;
split sign discard cmn 31;
cast sign@bit sign;
cmov tmp sign r3 0@sint32;
add r7 r7 tmp;
(* cmp	r8, r1                                      #! PC = 0x8005c54 *)
sub cmp r8 r1;
split sign discard cmp 31;
cast sign@bit sign;
cmov tmp sign 0@sint32 r3;
sub r8 r8 tmp;
(* cmn.w	r8, r1                                    #! PC = 0x8005c5c *)
add cmn r8 r1;
split sign discard cmn 31;
cast sign@bit sign;
cmov tmp sign r3 0@sint32;
add r8 r8 tmp;
(* cmp	r9, r1                                      #! PC = 0x8005c64 *)
sub cmp r9 r1;
split sign discard cmp 31;
cast sign@bit sign;
cmov tmp sign 0@sint32 r3;
sub r9 r9 tmp;
(* cmn.w	r9, r1                                    #! PC = 0x8005c6c *)
add cmn r9 r1;
split sign discard cmn 31;
cast sign@bit sign;
cmov tmp sign r3 0@sint32;
add r9 r9 tmp;
(* cmp	r10, r1                                     #! PC = 0x8005c74 *)
sub cmp r10 r1;
split sign discard cmp 31;
cast sign@bit sign;
cmov tmp sign 0@sint32 r3;
sub r10 r10 tmp;
(* cmn.w	r10, r1                                   #! PC = 0x8005c7c *)
add cmn r10 r1;
split sign discard cmn 31;
cast sign@bit sign;
cmov tmp sign r3 0@sint32;
add r10 r10 tmp;
(* cmp	r11, r1                                     #! PC = 0x8005c84 *)
sub cmp r11 r1;
split sign discard cmp 31;
cast sign@bit sign;
cmov tmp sign 0@sint32 r3;
sub r11 r11 tmp;
(* cmn.w	r11, r1                                   #! PC = 0x8005c8c *)
add cmn r11 r1;
split sign discard cmn 31;
cast sign@bit sign;
cmov tmp sign r3 0@sint32;
add r11 r11 tmp;
(* vmov	lr, s0                                     #! PC = 0x8005c94 *)
mov lr s0;
(* strh.w	r8, [lr, #256]	; 0x100                   #! EA = L0x2001996a; PC = 0x8005c98 *)
ghost L0x2001996a_f@sint32 : L0x2001996a_f = r8 && L0x2001996a_f = r8;
split discard L0x2001996a_u r8 16;
cast L0x2001996a@sint16 L0x2001996a_u;
(* strh.w	r9, [lr, #320]	; 0x140                   #! EA = L0x200199aa; PC = 0x8005c9c *)
ghost L0x200199aa_f@sint32 : L0x200199aa_f = r9 && L0x200199aa_f = r9;
split discard L0x200199aa_u r9 16;
cast L0x200199aa@sint16 L0x200199aa_u;
(* strh.w	r10, [lr, #384]	; 0x180                  #! EA = L0x200199ea; PC = 0x8005ca0 *)
ghost L0x200199ea_f@sint32 : L0x200199ea_f = r10 && L0x200199ea_f = r10;
split discard L0x200199ea_u r10 16;
cast L0x200199ea@sint16 L0x200199ea_u;
(* strh.w	r11, [lr, #448]	; 0x1c0                  #! EA = L0x20019a2a; PC = 0x8005ca4 *)
ghost L0x20019a2a_f@sint32 : L0x20019a2a_f = r11 && L0x20019a2a_f = r11;
split discard L0x20019a2a_u r11 16;
cast L0x20019a2a@sint16 L0x20019a2a_u;
(* strh.w	r5, [lr, #64]	; 0x40                     #! EA = L0x200198aa; PC = 0x8005ca8 *)
ghost L0x200198aa_f@sint32 : L0x200198aa_f = r5 && L0x200198aa_f = r5;
split discard L0x200198aa_u r5 16;
cast L0x200198aa@sint16 L0x200198aa_u;
(* strh.w	r6, [lr, #128]	; 0x80                    #! EA = L0x200198ea; PC = 0x8005cac *)
ghost L0x200198ea_f@sint32 : L0x200198ea_f = r6 && L0x200198ea_f = r6;
split discard L0x200198ea_u r6 16;
cast L0x200198ea@sint16 L0x200198ea_u;
(* strh.w	r7, [lr, #192]	; 0xc0                    #! EA = L0x2001992a; PC = 0x8005cb0 *)
ghost L0x2001992a_f@sint32 : L0x2001992a_f = r7 && L0x2001992a_f = r7;
split discard L0x2001992a_u r7 16;
cast L0x2001992a@sint16 L0x2001992a_u;
(* strh.w	r4, [lr], #2                             #! EA = L0x2001986a; PC = 0x8005cb4 *)
ghost L0x2001986a_f@sint32 : L0x2001986a_f = r4 && L0x2001986a_f = r4;
split discard L0x2001986a_u r4 16;
cast L0x2001986a@sint16 L0x2001986a_u;
(* vmov	s0, lr                                     #! PC = 0x8005cb8 *)
mov s0 lr;
(* vmov	lr, s3                                     #! PC = 0x8005cbc *)
mov lr s3;
(* ldr.w	r8, [r0, #512]	; 0x200                    #! EA = L0x2001a490; Value = 0xfe8b4c25; PC = 0x800585c *)
mov r8 L0x2001a490;
(* ldr.w	r9, [r0, #640]	; 0x280                    #! EA = L0x2001a510; Value = 0xff7f342f; PC = 0x8005860 *)
mov r9 L0x2001a510;
(* ldr.w	r10, [r0, #768]	; 0x300                   #! EA = L0x2001a590; Value = 0xfe52ef88; PC = 0x8005864 *)
mov r10 L0x2001a590;
(* ldr.w	r11, [r0, #896]	; 0x380                   #! EA = L0x2001a610; Value = 0xfc5028af; PC = 0x8005868 *)
mov r11 L0x2001a610;
(* ldr.w	r5, [r0, #128]	; 0x80                     #! EA = L0x2001a310; Value = 0xffcec981; PC = 0x800586c *)
mov r5 L0x2001a310;
(* ldr.w	r6, [r0, #256]	; 0x100                    #! EA = L0x2001a390; Value = 0xfcf07ec9; PC = 0x8005870 *)
mov r6 L0x2001a390;
(* ldr.w	r7, [r0, #384]	; 0x180                    #! EA = L0x2001a410; Value = 0x00a72c93; PC = 0x8005874 *)
mov r7 L0x2001a410;
(* ldr.w	r4, [r0], #4                              #! EA = L0x2001a290; Value = 0xff632875; PC = 0x8005878 *)
mov r4 L0x2001a290;
(* vmov	r1, s4                                     #! PC = 0x800587c *)
mov r1 s4;
(* smull	r12, r5, r5, r1                           #! PC = 0x8005880 *)
smull r5 r12 r5 r1;
(* mul.w	lr, r12, r2                               #! PC = 0x8005884 *)
cast r12_s@sint32 r12;
mull discard lr r12_s r2;
(* smlal	r12, r5, lr, r3                           #! PC = 0x8005888 *)
cast lr@sint32 lr;
smull tmp_h tmp_l lr r3;
uadds carry r12 tmp_l r12;
sadc r5 tmp_h r5 carry;
assert eqmod r12 0 (2**32) && true;
assume eq r12 0 && true;
(* smull	r12, r7, r7, r1                           #! PC = 0x800588c *)
smull r7 r12 r7 r1;
(* mul.w	lr, r12, r2                               #! PC = 0x8005890 *)
cast r12_s@sint32 r12;
mull discard lr r12_s r2;
(* smlal	r12, r7, lr, r3                           #! PC = 0x8005894 *)
cast lr@sint32 lr;
smull tmp_h tmp_l lr r3;
uadds carry r12 tmp_l r12;
sadc r7 tmp_h r7 carry;
assert eqmod r12 0 (2**32) && true;
assume eq r12 0 && true;
(* smull	r12, r9, r9, r1                           #! PC = 0x8005898 *)
smull r9 r12 r9 r1;
(* mul.w	lr, r12, r2                               #! PC = 0x800589c *)
cast r12_s@sint32 r12;
mull discard lr r12_s r2;
(* smlal	r12, r9, lr, r3                           #! PC = 0x80058a0 *)
cast lr@sint32 lr;
smull tmp_h tmp_l lr r3;
uadds carry r12 tmp_l r12;
sadc r9 tmp_h r9 carry;
assert eqmod r12 0 (2**32) && true;
assume eq r12 0 && true;
(* smull	r12, r11, r11, r1                         #! PC = 0x80058a4 *)
smull r11 r12 r11 r1;
(* mul.w	lr, r12, r2                               #! PC = 0x80058a8 *)
cast r12_s@sint32 r12;
mull discard lr r12_s r2;
(* smlal	r12, r11, lr, r3                          #! PC = 0x80058ac *)
cast lr@sint32 lr;
smull tmp_h tmp_l lr r3;
uadds carry r12 tmp_l r12;
sadc r11 tmp_h r11 carry;
assert eqmod r12 0 (2**32) && true;
assume eq r12 0 && true;
(* add	r4, r5                                      #! PC = 0x80058b0 *)
add r4 r4 r5;
(* add	r6, r7                                      #! PC = 0x80058b2 *)
add r6 r6 r7;
(* add	r8, r9                                      #! PC = 0x80058b4 *)
add r8 r8 r9;
(* add	r10, r11                                    #! PC = 0x80058b6 *)
add r10 r10 r11;
(* sub.w	r5, r4, r5, lsl #1                        #! PC = 0x80058b8 *)
shl tmp r5 1;
sub r5 r4 tmp;
(* sub.w	r7, r6, r7, lsl #1                        #! PC = 0x80058bc *)
shl tmp r7 1;
sub r7 r6 tmp;
(* sub.w	r9, r8, r9, lsl #1                        #! PC = 0x80058c0 *)
shl tmp r9 1;
sub r9 r8 tmp;
(* sub.w	r11, r10, r11, lsl #1                     #! PC = 0x80058c4 *)
shl tmp r11 1;
sub r11 r10 tmp;
(* vmov	r1, s5                                     #! PC = 0x80058c8 *)
mov r1 s5;
(* smull	r12, r6, r6, r1                           #! PC = 0x80058cc *)
smull r6 r12 r6 r1;
(* mul.w	lr, r12, r2                               #! PC = 0x80058d0 *)
cast r12_s@sint32 r12;
mull discard lr r12_s r2;
(* smlal	r12, r6, lr, r3                           #! PC = 0x80058d4 *)
cast lr@sint32 lr;
smull tmp_h tmp_l lr r3;
uadds carry r12 tmp_l r12;
sadc r6 tmp_h r6 carry;
assert eqmod r12 0 (2**32) && true;
assume eq r12 0 && true;
(* smull	r12, r10, r10, r1                         #! PC = 0x80058d8 *)
smull r10 r12 r10 r1;
(* mul.w	lr, r12, r2                               #! PC = 0x80058dc *)
cast r12_s@sint32 r12;
mull discard lr r12_s r2;
(* smlal	r12, r10, lr, r3                          #! PC = 0x80058e0 *)
cast lr@sint32 lr;
smull tmp_h tmp_l lr r3;
uadds carry r12 tmp_l r12;
sadc r10 tmp_h r10 carry;
assert eqmod r12 0 (2**32) && true;
assume eq r12 0 && true;
(* vmov	r1, s6                                     #! PC = 0x80058e4 *)
mov r1 s6;
(* smull	r12, r7, r7, r1                           #! PC = 0x80058e8 *)
smull r7 r12 r7 r1;
(* mul.w	lr, r12, r2                               #! PC = 0x80058ec *)
cast r12_s@sint32 r12;
mull discard lr r12_s r2;
(* smlal	r12, r7, lr, r3                           #! PC = 0x80058f0 *)
cast lr@sint32 lr;
smull tmp_h tmp_l lr r3;
uadds carry r12 tmp_l r12;
sadc r7 tmp_h r7 carry;
assert eqmod r12 0 (2**32) && true;
assume eq r12 0 && true;
(* smull	r12, r11, r11, r1                         #! PC = 0x80058f4 *)
smull r11 r12 r11 r1;
(* mul.w	lr, r12, r2                               #! PC = 0x80058f8 *)
cast r12_s@sint32 r12;
mull discard lr r12_s r2;
(* smlal	r12, r11, lr, r3                          #! PC = 0x80058fc *)
cast lr@sint32 lr;
smull tmp_h tmp_l lr r3;
uadds carry r12 tmp_l r12;
sadc r11 tmp_h r11 carry;
assert eqmod r12 0 (2**32) && true;
assume eq r12 0 && true;
(* add	r4, r6                                      #! PC = 0x8005900 *)
add r4 r4 r6;
(* add	r5, r7                                      #! PC = 0x8005902 *)
add r5 r5 r7;
(* add	r8, r10                                     #! PC = 0x8005904 *)
add r8 r8 r10;
(* add	r9, r11                                     #! PC = 0x8005906 *)
add r9 r9 r11;
(* sub.w	r6, r4, r6, lsl #1                        #! PC = 0x8005908 *)
shl tmp r6 1;
sub r6 r4 tmp;
(* sub.w	r7, r5, r7, lsl #1                        #! PC = 0x800590c *)
shl tmp r7 1;
sub r7 r5 tmp;
(* sub.w	r10, r8, r10, lsl #1                      #! PC = 0x8005910 *)
shl tmp r10 1;
sub r10 r8 tmp;
(* sub.w	r11, r9, r11, lsl #1                      #! PC = 0x8005914 *)
shl tmp r11 1;
sub r11 r9 tmp;
(* vmov	r1, s7                                     #! PC = 0x8005918 *)
mov r1 s7;
(* smull	r12, r8, r8, r1                           #! PC = 0x800591c *)
smull r8 r12 r8 r1;
(* mul.w	lr, r12, r2                               #! PC = 0x8005920 *)
cast r12_s@sint32 r12;
mull discard lr r12_s r2;
(* smlal	r12, r8, lr, r3                           #! PC = 0x8005924 *)
cast lr@sint32 lr;
smull tmp_h tmp_l lr r3;
uadds carry r12 tmp_l r12;
sadc r8 tmp_h r8 carry;
assert eqmod r12 0 (2**32) && true;
assume eq r12 0 && true;
(* vmov	r1, s8                                     #! PC = 0x8005928 *)
mov r1 s8;
(* smull	r12, r9, r9, r1                           #! PC = 0x800592c *)
smull r9 r12 r9 r1;
(* mul.w	lr, r12, r2                               #! PC = 0x8005930 *)
cast r12_s@sint32 r12;
mull discard lr r12_s r2;
(* smlal	r12, r9, lr, r3                           #! PC = 0x8005934 *)
cast lr@sint32 lr;
smull tmp_h tmp_l lr r3;
uadds carry r12 tmp_l r12;
sadc r9 tmp_h r9 carry;
assert eqmod r12 0 (2**32) && true;
assume eq r12 0 && true;
(* vmov	r1, s9                                     #! PC = 0x8005938 *)
mov r1 s9;
(* smull	r12, r10, r10, r1                         #! PC = 0x800593c *)
smull r10 r12 r10 r1;
(* mul.w	lr, r12, r2                               #! PC = 0x8005940 *)
cast r12_s@sint32 r12;
mull discard lr r12_s r2;
(* smlal	r12, r10, lr, r3                          #! PC = 0x8005944 *)
cast lr@sint32 lr;
smull tmp_h tmp_l lr r3;
uadds carry r12 tmp_l r12;
sadc r10 tmp_h r10 carry;
assert eqmod r12 0 (2**32) && true;
assume eq r12 0 && true;
(* vmov	r1, s10                                    #! PC = 0x8005948 *)
mov r1 s10;
(* smull	r12, r11, r11, r1                         #! PC = 0x800594c *)
smull r11 r12 r11 r1;
(* mul.w	lr, r12, r2                               #! PC = 0x8005950 *)
cast r12_s@sint32 r12;
mull discard lr r12_s r2;
(* smlal	r12, r11, lr, r3                          #! PC = 0x8005954 *)
cast lr@sint32 lr;
smull tmp_h tmp_l lr r3;
uadds carry r12 tmp_l r12;
sadc r11 tmp_h r11 carry;
assert eqmod r12 0 (2**32) && true;
assume eq r12 0 && true;
(* add	r4, r8                                      #! PC = 0x8005958 *)
add r4 r4 r8;
(* add	r5, r9                                      #! PC = 0x800595a *)
add r5 r5 r9;
(* add	r6, r10                                     #! PC = 0x800595c *)
add r6 r6 r10;
(* add	r7, r11                                     #! PC = 0x800595e *)
add r7 r7 r11;
(* sub.w	r8, r4, r8, lsl #1                        #! PC = 0x8005960 *)
shl tmp r8 1;
sub r8 r4 tmp;
(* sub.w	r9, r5, r9, lsl #1                        #! PC = 0x8005964 *)
shl tmp r9 1;
sub r9 r5 tmp;
(* sub.w	r10, r6, r10, lsl #1                      #! PC = 0x8005968 *)
shl tmp r10 1;
sub r10 r6 tmp;
(* sub.w	r11, r7, r11, lsl #1                      #! PC = 0x800596c *)
shl tmp r11 1;
sub r11 r7 tmp;
(* vmov	r1, s11                                    #! PC = 0x8005970 *)
mov r1 s11;
(* smull	r12, r4, r4, r1                           #! PC = 0x8005974 *)
smull r4 r12 r4 r1;
(* mul.w	lr, r12, r2                               #! PC = 0x8005978 *)
cast r12_s@sint32 r12;
mull discard lr r12_s r2;
(* smlal	r12, r4, lr, r3                           #! PC = 0x800597c *)
cast lr@sint32 lr;
smull tmp_h tmp_l lr r3;
uadds carry r12 tmp_l r12;
sadc r4 tmp_h r4 carry;
assert eqmod r12 0 (2**32) && true;
assume eq r12 0 && true;
(* vmov	r1, s12                                    #! PC = 0x8005980 *)
mov r1 s12;
(* smull	r12, r5, r5, r1                           #! PC = 0x8005984 *)
smull r5 r12 r5 r1;
(* mul.w	lr, r12, r2                               #! PC = 0x8005988 *)
cast r12_s@sint32 r12;
mull discard lr r12_s r2;
(* smlal	r12, r5, lr, r3                           #! PC = 0x800598c *)
cast lr@sint32 lr;
smull tmp_h tmp_l lr r3;
uadds carry r12 tmp_l r12;
sadc r5 tmp_h r5 carry;
assert eqmod r12 0 (2**32) && true;
assume eq r12 0 && true;
(* vmov	r1, s13                                    #! PC = 0x8005990 *)
mov r1 s13;
(* smull	r12, r6, r6, r1                           #! PC = 0x8005994 *)
smull r6 r12 r6 r1;
(* mul.w	lr, r12, r2                               #! PC = 0x8005998 *)
cast r12_s@sint32 r12;
mull discard lr r12_s r2;
(* smlal	r12, r6, lr, r3                           #! PC = 0x800599c *)
cast lr@sint32 lr;
smull tmp_h tmp_l lr r3;
uadds carry r12 tmp_l r12;
sadc r6 tmp_h r6 carry;
assert eqmod r12 0 (2**32) && true;
assume eq r12 0 && true;
(* vmov	r1, s14                                    #! PC = 0x80059a0 *)
mov r1 s14;
(* smull	r12, r7, r7, r1                           #! PC = 0x80059a4 *)
smull r7 r12 r7 r1;
(* mul.w	lr, r12, r2                               #! PC = 0x80059a8 *)
cast r12_s@sint32 r12;
mull discard lr r12_s r2;
(* smlal	r12, r7, lr, r3                           #! PC = 0x80059ac *)
cast lr@sint32 lr;
smull tmp_h tmp_l lr r3;
uadds carry r12 tmp_l r12;
sadc r7 tmp_h r7 carry;
assert eqmod r12 0 (2**32) && true;
assume eq r12 0 && true;
(* vmov	r1, s15                                    #! PC = 0x80059b0 *)
mov r1 s15;
(* smull	r12, r8, r8, r1                           #! PC = 0x80059b4 *)
smull r8 r12 r8 r1;
(* mul.w	lr, r12, r2                               #! PC = 0x80059b8 *)
cast r12_s@sint32 r12;
mull discard lr r12_s r2;
(* smlal	r12, r8, lr, r3                           #! PC = 0x80059bc *)
cast lr@sint32 lr;
smull tmp_h tmp_l lr r3;
uadds carry r12 tmp_l r12;
sadc r8 tmp_h r8 carry;
assert eqmod r12 0 (2**32) && true;
assume eq r12 0 && true;
(* vmov	r1, s16                                    #! PC = 0x80059c0 *)
mov r1 s16;
(* smull	r12, r9, r9, r1                           #! PC = 0x80059c4 *)
smull r9 r12 r9 r1;
(* mul.w	lr, r12, r2                               #! PC = 0x80059c8 *)
cast r12_s@sint32 r12;
mull discard lr r12_s r2;
(* smlal	r12, r9, lr, r3                           #! PC = 0x80059cc *)
cast lr@sint32 lr;
smull tmp_h tmp_l lr r3;
uadds carry r12 tmp_l r12;
sadc r9 tmp_h r9 carry;
assert eqmod r12 0 (2**32) && true;
assume eq r12 0 && true;
(* vmov	r1, s17                                    #! PC = 0x80059d0 *)
mov r1 s17;
(* smull	r12, r10, r10, r1                         #! PC = 0x80059d4 *)
smull r10 r12 r10 r1;
(* mul.w	lr, r12, r2                               #! PC = 0x80059d8 *)
cast r12_s@sint32 r12;
mull discard lr r12_s r2;
(* smlal	r12, r10, lr, r3                          #! PC = 0x80059dc *)
cast lr@sint32 lr;
smull tmp_h tmp_l lr r3;
uadds carry r12 tmp_l r12;
sadc r10 tmp_h r10 carry;
assert eqmod r12 0 (2**32) && true;
assume eq r12 0 && true;
(* vmov	r1, s18                                    #! PC = 0x80059e0 *)
mov r1 s18;
(* smull	r12, r11, r11, r1                         #! PC = 0x80059e4 *)
smull r11 r12 r11 r1;
(* mul.w	lr, r12, r2                               #! PC = 0x80059e8 *)
cast r12_s@sint32 r12;
mull discard lr r12_s r2;
(* smlal	r12, r11, lr, r3                          #! PC = 0x80059ec *)
cast lr@sint32 lr;
smull tmp_h tmp_l lr r3;
uadds carry r12 tmp_l r12;
sadc r11 tmp_h r11 carry;
assert eqmod r12 0 (2**32) && true;
assume eq r12 0 && true;
(* mov.w	r1, r3, lsr #1                            #! PC = 0x80059f0 *)
split r1 discard r3 1;
(* cmp	r4, r1                                      #! PC = 0x80059f4 *)
sub cmp r4 r1;
split sign discard cmp 31;
cast sign@bit sign;
cmov tmp sign 0@sint32 r3;
sub r4 r4 tmp;
(* cmn	r4, r1                                      #! PC = 0x80059fa *)
add cmn r4 r1;
split sign discard cmn 31;
cast sign@bit sign;
cmov tmp sign r3 0@sint32;
add r4 r4 tmp;
(* cmp	r5, r1                                      #! PC = 0x8005a00 *)
sub cmp r5 r1;
split sign discard cmp 31;
cast sign@bit sign;
cmov tmp sign 0@sint32 r3;
sub r5 r5 tmp;
(* cmn	r5, r1                                      #! PC = 0x8005a06 *)
add cmn r5 r1;
split sign discard cmn 31;
cast sign@bit sign;
cmov tmp sign r3 0@sint32;
add r5 r5 tmp;
(* cmp	r6, r1                                      #! PC = 0x8005a0c *)
sub cmp r6 r1;
split sign discard cmp 31;
cast sign@bit sign;
cmov tmp sign 0@sint32 r3;
sub r6 r6 tmp;
(* cmn	r6, r1                                      #! PC = 0x8005a12 *)
add cmn r6 r1;
split sign discard cmn 31;
cast sign@bit sign;
cmov tmp sign r3 0@sint32;
add r6 r6 tmp;
(* cmp	r7, r1                                      #! PC = 0x8005a18 *)
sub cmp r7 r1;
split sign discard cmp 31;
cast sign@bit sign;
cmov tmp sign 0@sint32 r3;
sub r7 r7 tmp;
(* cmn	r7, r1                                      #! PC = 0x8005a1e *)
add cmn r7 r1;
split sign discard cmn 31;
cast sign@bit sign;
cmov tmp sign r3 0@sint32;
add r7 r7 tmp;
(* cmp	r8, r1                                      #! PC = 0x8005a24 *)
sub cmp r8 r1;
split sign discard cmp 31;
cast sign@bit sign;
cmov tmp sign 0@sint32 r3;
sub r8 r8 tmp;
(* cmn.w	r8, r1                                    #! PC = 0x8005a2c *)
add cmn r8 r1;
split sign discard cmn 31;
cast sign@bit sign;
cmov tmp sign r3 0@sint32;
add r8 r8 tmp;
(* cmp	r9, r1                                      #! PC = 0x8005a34 *)
sub cmp r9 r1;
split sign discard cmp 31;
cast sign@bit sign;
cmov tmp sign 0@sint32 r3;
sub r9 r9 tmp;
(* cmn.w	r9, r1                                    #! PC = 0x8005a3c *)
add cmn r9 r1;
split sign discard cmn 31;
cast sign@bit sign;
cmov tmp sign r3 0@sint32;
add r9 r9 tmp;
(* cmp	r10, r1                                     #! PC = 0x8005a44 *)
sub cmp r10 r1;
split sign discard cmp 31;
cast sign@bit sign;
cmov tmp sign 0@sint32 r3;
sub r10 r10 tmp;
(* cmn.w	r10, r1                                   #! PC = 0x8005a4c *)
add cmn r10 r1;
split sign discard cmn 31;
cast sign@bit sign;
cmov tmp sign r3 0@sint32;
add r10 r10 tmp;
(* cmp	r11, r1                                     #! PC = 0x8005a54 *)
sub cmp r11 r1;
split sign discard cmp 31;
cast sign@bit sign;
cmov tmp sign 0@sint32 r3;
sub r11 r11 tmp;
(* cmn.w	r11, r1                                   #! PC = 0x8005a5c *)
add cmn r11 r1;
split sign discard cmn 31;
cast sign@bit sign;
cmov tmp sign r3 0@sint32;
add r11 r11 tmp;
(* vmov	lr, s0                                     #! PC = 0x8005a64 *)
mov lr s0;
(* strh.w	r8, [lr, #256]	; 0x100                   #! EA = L0x2001996c; PC = 0x8005a68 *)
ghost L0x2001996c_f@sint32 : L0x2001996c_f = r8 && L0x2001996c_f = r8;
split discard L0x2001996c_u r8 16;
cast L0x2001996c@sint16 L0x2001996c_u;
(* strh.w	r9, [lr, #320]	; 0x140                   #! EA = L0x200199ac; PC = 0x8005a6c *)
ghost L0x200199ac_f@sint32 : L0x200199ac_f = r9 && L0x200199ac_f = r9;
split discard L0x200199ac_u r9 16;
cast L0x200199ac@sint16 L0x200199ac_u;
(* strh.w	r10, [lr, #384]	; 0x180                  #! EA = L0x200199ec; PC = 0x8005a70 *)
ghost L0x200199ec_f@sint32 : L0x200199ec_f = r10 && L0x200199ec_f = r10;
split discard L0x200199ec_u r10 16;
cast L0x200199ec@sint16 L0x200199ec_u;
(* strh.w	r11, [lr, #448]	; 0x1c0                  #! EA = L0x20019a2c; PC = 0x8005a74 *)
ghost L0x20019a2c_f@sint32 : L0x20019a2c_f = r11 && L0x20019a2c_f = r11;
split discard L0x20019a2c_u r11 16;
cast L0x20019a2c@sint16 L0x20019a2c_u;
(* strh.w	r5, [lr, #64]	; 0x40                     #! EA = L0x200198ac; PC = 0x8005a78 *)
ghost L0x200198ac_f@sint32 : L0x200198ac_f = r5 && L0x200198ac_f = r5;
split discard L0x200198ac_u r5 16;
cast L0x200198ac@sint16 L0x200198ac_u;
(* strh.w	r6, [lr, #128]	; 0x80                    #! EA = L0x200198ec; PC = 0x8005a7c *)
ghost L0x200198ec_f@sint32 : L0x200198ec_f = r6 && L0x200198ec_f = r6;
split discard L0x200198ec_u r6 16;
cast L0x200198ec@sint16 L0x200198ec_u;
(* strh.w	r7, [lr, #192]	; 0xc0                    #! EA = L0x2001992c; PC = 0x8005a80 *)
ghost L0x2001992c_f@sint32 : L0x2001992c_f = r7 && L0x2001992c_f = r7;
split discard L0x2001992c_u r7 16;
cast L0x2001992c@sint16 L0x2001992c_u;
(* strh.w	r4, [lr], #2                             #! EA = L0x2001986c; PC = 0x8005a84 *)
ghost L0x2001986c_f@sint32 : L0x2001986c_f = r4 && L0x2001986c_f = r4;
split discard L0x2001986c_u r4 16;
cast L0x2001986c@sint16 L0x2001986c_u;
(* vmov	s0, lr                                     #! PC = 0x8005a88 *)
mov s0 lr;
(* ldr.w	r8, [r0, #512]	; 0x200                    #! EA = L0x2001a494; Value = 0x0048b7f8; PC = 0x8005a8c *)
mov r8 L0x2001a494;
(* ldr.w	r9, [r0, #640]	; 0x280                    #! EA = L0x2001a514; Value = 0x00e177f9; PC = 0x8005a90 *)
mov r9 L0x2001a514;
(* ldr.w	r10, [r0, #768]	; 0x300                   #! EA = L0x2001a594; Value = 0x001460a0; PC = 0x8005a94 *)
mov r10 L0x2001a594;
(* ldr.w	r11, [r0, #896]	; 0x380                   #! EA = L0x2001a614; Value = 0x018dc53b; PC = 0x8005a98 *)
mov r11 L0x2001a614;
(* ldr.w	r5, [r0, #128]	; 0x80                     #! EA = L0x2001a314; Value = 0x006b7a91; PC = 0x8005a9c *)
mov r5 L0x2001a314;
(* ldr.w	r6, [r0, #256]	; 0x100                    #! EA = L0x2001a394; Value = 0x0155bf63; PC = 0x8005aa0 *)
mov r6 L0x2001a394;
(* ldr.w	r7, [r0, #384]	; 0x180                    #! EA = L0x2001a414; Value = 0x01d132b6; PC = 0x8005aa4 *)
mov r7 L0x2001a414;
(* ldr.w	r4, [r0], #4                              #! EA = L0x2001a294; Value = 0xfeeb9253; PC = 0x8005aa8 *)
mov r4 L0x2001a294;
(* vmov	r1, s4                                     #! PC = 0x8005aac *)
mov r1 s4;
(* smull	r12, r5, r5, r1                           #! PC = 0x8005ab0 *)
smull r5 r12 r5 r1;
(* mul.w	lr, r12, r2                               #! PC = 0x8005ab4 *)
cast r12_s@sint32 r12;
mull discard lr r12_s r2;
(* smlal	r12, r5, lr, r3                           #! PC = 0x8005ab8 *)
cast lr@sint32 lr;
smull tmp_h tmp_l lr r3;
uadds carry r12 tmp_l r12;
sadc r5 tmp_h r5 carry;
assert eqmod r12 0 (2**32) && true;
assume eq r12 0 && true;
(* smull	r12, r7, r7, r1                           #! PC = 0x8005abc *)
smull r7 r12 r7 r1;
(* mul.w	lr, r12, r2                               #! PC = 0x8005ac0 *)
cast r12_s@sint32 r12;
mull discard lr r12_s r2;
(* smlal	r12, r7, lr, r3                           #! PC = 0x8005ac4 *)
cast lr@sint32 lr;
smull tmp_h tmp_l lr r3;
uadds carry r12 tmp_l r12;
sadc r7 tmp_h r7 carry;
assert eqmod r12 0 (2**32) && true;
assume eq r12 0 && true;
(* smull	r12, r9, r9, r1                           #! PC = 0x8005ac8 *)
smull r9 r12 r9 r1;
(* mul.w	lr, r12, r2                               #! PC = 0x8005acc *)
cast r12_s@sint32 r12;
mull discard lr r12_s r2;
(* smlal	r12, r9, lr, r3                           #! PC = 0x8005ad0 *)
cast lr@sint32 lr;
smull tmp_h tmp_l lr r3;
uadds carry r12 tmp_l r12;
sadc r9 tmp_h r9 carry;
assert eqmod r12 0 (2**32) && true;
assume eq r12 0 && true;
(* smull	r12, r11, r11, r1                         #! PC = 0x8005ad4 *)
smull r11 r12 r11 r1;
(* mul.w	lr, r12, r2                               #! PC = 0x8005ad8 *)
cast r12_s@sint32 r12;
mull discard lr r12_s r2;
(* smlal	r12, r11, lr, r3                          #! PC = 0x8005adc *)
cast lr@sint32 lr;
smull tmp_h tmp_l lr r3;
uadds carry r12 tmp_l r12;
sadc r11 tmp_h r11 carry;
assert eqmod r12 0 (2**32) && true;
assume eq r12 0 && true;
(* add	r4, r5                                      #! PC = 0x8005ae0 *)
add r4 r4 r5;
(* add	r6, r7                                      #! PC = 0x8005ae2 *)
add r6 r6 r7;
(* add	r8, r9                                      #! PC = 0x8005ae4 *)
add r8 r8 r9;
(* add	r10, r11                                    #! PC = 0x8005ae6 *)
add r10 r10 r11;
(* sub.w	r5, r4, r5, lsl #1                        #! PC = 0x8005ae8 *)
shl tmp r5 1;
sub r5 r4 tmp;
(* sub.w	r7, r6, r7, lsl #1                        #! PC = 0x8005aec *)
shl tmp r7 1;
sub r7 r6 tmp;
(* sub.w	r9, r8, r9, lsl #1                        #! PC = 0x8005af0 *)
shl tmp r9 1;
sub r9 r8 tmp;
(* sub.w	r11, r10, r11, lsl #1                     #! PC = 0x8005af4 *)
shl tmp r11 1;
sub r11 r10 tmp;
(* vmov	r1, s5                                     #! PC = 0x8005af8 *)
mov r1 s5;
(* smull	r12, r6, r6, r1                           #! PC = 0x8005afc *)
smull r6 r12 r6 r1;
(* mul.w	lr, r12, r2                               #! PC = 0x8005b00 *)
cast r12_s@sint32 r12;
mull discard lr r12_s r2;
(* smlal	r12, r6, lr, r3                           #! PC = 0x8005b04 *)
cast lr@sint32 lr;
smull tmp_h tmp_l lr r3;
uadds carry r12 tmp_l r12;
sadc r6 tmp_h r6 carry;
assert eqmod r12 0 (2**32) && true;
assume eq r12 0 && true;
(* smull	r12, r10, r10, r1                         #! PC = 0x8005b08 *)
smull r10 r12 r10 r1;
(* mul.w	lr, r12, r2                               #! PC = 0x8005b0c *)
cast r12_s@sint32 r12;
mull discard lr r12_s r2;
(* smlal	r12, r10, lr, r3                          #! PC = 0x8005b10 *)
cast lr@sint32 lr;
smull tmp_h tmp_l lr r3;
uadds carry r12 tmp_l r12;
sadc r10 tmp_h r10 carry;
assert eqmod r12 0 (2**32) && true;
assume eq r12 0 && true;
(* vmov	r1, s6                                     #! PC = 0x8005b14 *)
mov r1 s6;
(* smull	r12, r7, r7, r1                           #! PC = 0x8005b18 *)
smull r7 r12 r7 r1;
(* mul.w	lr, r12, r2                               #! PC = 0x8005b1c *)
cast r12_s@sint32 r12;
mull discard lr r12_s r2;
(* smlal	r12, r7, lr, r3                           #! PC = 0x8005b20 *)
cast lr@sint32 lr;
smull tmp_h tmp_l lr r3;
uadds carry r12 tmp_l r12;
sadc r7 tmp_h r7 carry;
assert eqmod r12 0 (2**32) && true;
assume eq r12 0 && true;
(* smull	r12, r11, r11, r1                         #! PC = 0x8005b24 *)
smull r11 r12 r11 r1;
(* mul.w	lr, r12, r2                               #! PC = 0x8005b28 *)
cast r12_s@sint32 r12;
mull discard lr r12_s r2;
(* smlal	r12, r11, lr, r3                          #! PC = 0x8005b2c *)
cast lr@sint32 lr;
smull tmp_h tmp_l lr r3;
uadds carry r12 tmp_l r12;
sadc r11 tmp_h r11 carry;
assert eqmod r12 0 (2**32) && true;
assume eq r12 0 && true;
(* add	r4, r6                                      #! PC = 0x8005b30 *)
add r4 r4 r6;
(* add	r5, r7                                      #! PC = 0x8005b32 *)
add r5 r5 r7;
(* add	r8, r10                                     #! PC = 0x8005b34 *)
add r8 r8 r10;
(* add	r9, r11                                     #! PC = 0x8005b36 *)
add r9 r9 r11;
(* sub.w	r6, r4, r6, lsl #1                        #! PC = 0x8005b38 *)
shl tmp r6 1;
sub r6 r4 tmp;
(* sub.w	r7, r5, r7, lsl #1                        #! PC = 0x8005b3c *)
shl tmp r7 1;
sub r7 r5 tmp;
(* sub.w	r10, r8, r10, lsl #1                      #! PC = 0x8005b40 *)
shl tmp r10 1;
sub r10 r8 tmp;
(* sub.w	r11, r9, r11, lsl #1                      #! PC = 0x8005b44 *)
shl tmp r11 1;
sub r11 r9 tmp;
(* vmov	r1, s7                                     #! PC = 0x8005b48 *)
mov r1 s7;
(* smull	r12, r8, r8, r1                           #! PC = 0x8005b4c *)
smull r8 r12 r8 r1;
(* mul.w	lr, r12, r2                               #! PC = 0x8005b50 *)
cast r12_s@sint32 r12;
mull discard lr r12_s r2;
(* smlal	r12, r8, lr, r3                           #! PC = 0x8005b54 *)
cast lr@sint32 lr;
smull tmp_h tmp_l lr r3;
uadds carry r12 tmp_l r12;
sadc r8 tmp_h r8 carry;
assert eqmod r12 0 (2**32) && true;
assume eq r12 0 && true;
(* vmov	r1, s8                                     #! PC = 0x8005b58 *)
mov r1 s8;
(* smull	r12, r9, r9, r1                           #! PC = 0x8005b5c *)
smull r9 r12 r9 r1;
(* mul.w	lr, r12, r2                               #! PC = 0x8005b60 *)
cast r12_s@sint32 r12;
mull discard lr r12_s r2;
(* smlal	r12, r9, lr, r3                           #! PC = 0x8005b64 *)
cast lr@sint32 lr;
smull tmp_h tmp_l lr r3;
uadds carry r12 tmp_l r12;
sadc r9 tmp_h r9 carry;
assert eqmod r12 0 (2**32) && true;
assume eq r12 0 && true;
(* vmov	r1, s9                                     #! PC = 0x8005b68 *)
mov r1 s9;
(* smull	r12, r10, r10, r1                         #! PC = 0x8005b6c *)
smull r10 r12 r10 r1;
(* mul.w	lr, r12, r2                               #! PC = 0x8005b70 *)
cast r12_s@sint32 r12;
mull discard lr r12_s r2;
(* smlal	r12, r10, lr, r3                          #! PC = 0x8005b74 *)
cast lr@sint32 lr;
smull tmp_h tmp_l lr r3;
uadds carry r12 tmp_l r12;
sadc r10 tmp_h r10 carry;
assert eqmod r12 0 (2**32) && true;
assume eq r12 0 && true;
(* vmov	r1, s10                                    #! PC = 0x8005b78 *)
mov r1 s10;
(* smull	r12, r11, r11, r1                         #! PC = 0x8005b7c *)
smull r11 r12 r11 r1;
(* mul.w	lr, r12, r2                               #! PC = 0x8005b80 *)
cast r12_s@sint32 r12;
mull discard lr r12_s r2;
(* smlal	r12, r11, lr, r3                          #! PC = 0x8005b84 *)
cast lr@sint32 lr;
smull tmp_h tmp_l lr r3;
uadds carry r12 tmp_l r12;
sadc r11 tmp_h r11 carry;
assert eqmod r12 0 (2**32) && true;
assume eq r12 0 && true;
(* add	r4, r8                                      #! PC = 0x8005b88 *)
add r4 r4 r8;
(* add	r5, r9                                      #! PC = 0x8005b8a *)
add r5 r5 r9;
(* add	r6, r10                                     #! PC = 0x8005b8c *)
add r6 r6 r10;
(* add	r7, r11                                     #! PC = 0x8005b8e *)
add r7 r7 r11;
(* sub.w	r8, r4, r8, lsl #1                        #! PC = 0x8005b90 *)
shl tmp r8 1;
sub r8 r4 tmp;
(* sub.w	r9, r5, r9, lsl #1                        #! PC = 0x8005b94 *)
shl tmp r9 1;
sub r9 r5 tmp;
(* sub.w	r10, r6, r10, lsl #1                      #! PC = 0x8005b98 *)
shl tmp r10 1;
sub r10 r6 tmp;
(* sub.w	r11, r7, r11, lsl #1                      #! PC = 0x8005b9c *)
shl tmp r11 1;
sub r11 r7 tmp;
(* vmov	r1, s11                                    #! PC = 0x8005ba0 *)
mov r1 s11;
(* smull	r12, r4, r4, r1                           #! PC = 0x8005ba4 *)
smull r4 r12 r4 r1;
(* mul.w	lr, r12, r2                               #! PC = 0x8005ba8 *)
cast r12_s@sint32 r12;
mull discard lr r12_s r2;
(* smlal	r12, r4, lr, r3                           #! PC = 0x8005bac *)
cast lr@sint32 lr;
smull tmp_h tmp_l lr r3;
uadds carry r12 tmp_l r12;
sadc r4 tmp_h r4 carry;
assert eqmod r12 0 (2**32) && true;
assume eq r12 0 && true;
(* vmov	r1, s12                                    #! PC = 0x8005bb0 *)
mov r1 s12;
(* smull	r12, r5, r5, r1                           #! PC = 0x8005bb4 *)
smull r5 r12 r5 r1;
(* mul.w	lr, r12, r2                               #! PC = 0x8005bb8 *)
cast r12_s@sint32 r12;
mull discard lr r12_s r2;
(* smlal	r12, r5, lr, r3                           #! PC = 0x8005bbc *)
cast lr@sint32 lr;
smull tmp_h tmp_l lr r3;
uadds carry r12 tmp_l r12;
sadc r5 tmp_h r5 carry;
assert eqmod r12 0 (2**32) && true;
assume eq r12 0 && true;
(* vmov	r1, s13                                    #! PC = 0x8005bc0 *)
mov r1 s13;
(* smull	r12, r6, r6, r1                           #! PC = 0x8005bc4 *)
smull r6 r12 r6 r1;
(* mul.w	lr, r12, r2                               #! PC = 0x8005bc8 *)
cast r12_s@sint32 r12;
mull discard lr r12_s r2;
(* smlal	r12, r6, lr, r3                           #! PC = 0x8005bcc *)
cast lr@sint32 lr;
smull tmp_h tmp_l lr r3;
uadds carry r12 tmp_l r12;
sadc r6 tmp_h r6 carry;
assert eqmod r12 0 (2**32) && true;
assume eq r12 0 && true;
(* vmov	r1, s14                                    #! PC = 0x8005bd0 *)
mov r1 s14;
(* smull	r12, r7, r7, r1                           #! PC = 0x8005bd4 *)
smull r7 r12 r7 r1;
(* mul.w	lr, r12, r2                               #! PC = 0x8005bd8 *)
cast r12_s@sint32 r12;
mull discard lr r12_s r2;
(* smlal	r12, r7, lr, r3                           #! PC = 0x8005bdc *)
cast lr@sint32 lr;
smull tmp_h tmp_l lr r3;
uadds carry r12 tmp_l r12;
sadc r7 tmp_h r7 carry;
assert eqmod r12 0 (2**32) && true;
assume eq r12 0 && true;
(* vmov	r1, s15                                    #! PC = 0x8005be0 *)
mov r1 s15;
(* smull	r12, r8, r8, r1                           #! PC = 0x8005be4 *)
smull r8 r12 r8 r1;
(* mul.w	lr, r12, r2                               #! PC = 0x8005be8 *)
cast r12_s@sint32 r12;
mull discard lr r12_s r2;
(* smlal	r12, r8, lr, r3                           #! PC = 0x8005bec *)
cast lr@sint32 lr;
smull tmp_h tmp_l lr r3;
uadds carry r12 tmp_l r12;
sadc r8 tmp_h r8 carry;
assert eqmod r12 0 (2**32) && true;
assume eq r12 0 && true;
(* vmov	r1, s16                                    #! PC = 0x8005bf0 *)
mov r1 s16;
(* smull	r12, r9, r9, r1                           #! PC = 0x8005bf4 *)
smull r9 r12 r9 r1;
(* mul.w	lr, r12, r2                               #! PC = 0x8005bf8 *)
cast r12_s@sint32 r12;
mull discard lr r12_s r2;
(* smlal	r12, r9, lr, r3                           #! PC = 0x8005bfc *)
cast lr@sint32 lr;
smull tmp_h tmp_l lr r3;
uadds carry r12 tmp_l r12;
sadc r9 tmp_h r9 carry;
assert eqmod r12 0 (2**32) && true;
assume eq r12 0 && true;
(* vmov	r1, s17                                    #! PC = 0x8005c00 *)
mov r1 s17;
(* smull	r12, r10, r10, r1                         #! PC = 0x8005c04 *)
smull r10 r12 r10 r1;
(* mul.w	lr, r12, r2                               #! PC = 0x8005c08 *)
cast r12_s@sint32 r12;
mull discard lr r12_s r2;
(* smlal	r12, r10, lr, r3                          #! PC = 0x8005c0c *)
cast lr@sint32 lr;
smull tmp_h tmp_l lr r3;
uadds carry r12 tmp_l r12;
sadc r10 tmp_h r10 carry;
assert eqmod r12 0 (2**32) && true;
assume eq r12 0 && true;
(* vmov	r1, s18                                    #! PC = 0x8005c10 *)
mov r1 s18;
(* smull	r12, r11, r11, r1                         #! PC = 0x8005c14 *)
smull r11 r12 r11 r1;
(* mul.w	lr, r12, r2                               #! PC = 0x8005c18 *)
cast r12_s@sint32 r12;
mull discard lr r12_s r2;
(* smlal	r12, r11, lr, r3                          #! PC = 0x8005c1c *)
cast lr@sint32 lr;
smull tmp_h tmp_l lr r3;
uadds carry r12 tmp_l r12;
sadc r11 tmp_h r11 carry;
assert eqmod r12 0 (2**32) && true;
assume eq r12 0 && true;
(* mov.w	r1, r3, lsr #1                            #! PC = 0x8005c20 *)
split r1 discard r3 1;
(* cmp	r4, r1                                      #! PC = 0x8005c24 *)
sub cmp r4 r1;
split sign discard cmp 31;
cast sign@bit sign;
cmov tmp sign 0@sint32 r3;
sub r4 r4 tmp;
(* cmn	r4, r1                                      #! PC = 0x8005c2a *)
add cmn r4 r1;
split sign discard cmn 31;
cast sign@bit sign;
cmov tmp sign r3 0@sint32;
add r4 r4 tmp;
(* cmp	r5, r1                                      #! PC = 0x8005c30 *)
sub cmp r5 r1;
split sign discard cmp 31;
cast sign@bit sign;
cmov tmp sign 0@sint32 r3;
sub r5 r5 tmp;
(* cmn	r5, r1                                      #! PC = 0x8005c36 *)
add cmn r5 r1;
split sign discard cmn 31;
cast sign@bit sign;
cmov tmp sign r3 0@sint32;
add r5 r5 tmp;
(* cmp	r6, r1                                      #! PC = 0x8005c3c *)
sub cmp r6 r1;
split sign discard cmp 31;
cast sign@bit sign;
cmov tmp sign 0@sint32 r3;
sub r6 r6 tmp;
(* cmn	r6, r1                                      #! PC = 0x8005c42 *)
add cmn r6 r1;
split sign discard cmn 31;
cast sign@bit sign;
cmov tmp sign r3 0@sint32;
add r6 r6 tmp;
(* cmp	r7, r1                                      #! PC = 0x8005c48 *)
sub cmp r7 r1;
split sign discard cmp 31;
cast sign@bit sign;
cmov tmp sign 0@sint32 r3;
sub r7 r7 tmp;
(* cmn	r7, r1                                      #! PC = 0x8005c4e *)
add cmn r7 r1;
split sign discard cmn 31;
cast sign@bit sign;
cmov tmp sign r3 0@sint32;
add r7 r7 tmp;
(* cmp	r8, r1                                      #! PC = 0x8005c54 *)
sub cmp r8 r1;
split sign discard cmp 31;
cast sign@bit sign;
cmov tmp sign 0@sint32 r3;
sub r8 r8 tmp;
(* cmn.w	r8, r1                                    #! PC = 0x8005c5c *)
add cmn r8 r1;
split sign discard cmn 31;
cast sign@bit sign;
cmov tmp sign r3 0@sint32;
add r8 r8 tmp;
(* cmp	r9, r1                                      #! PC = 0x8005c64 *)
sub cmp r9 r1;
split sign discard cmp 31;
cast sign@bit sign;
cmov tmp sign 0@sint32 r3;
sub r9 r9 tmp;
(* cmn.w	r9, r1                                    #! PC = 0x8005c6c *)
add cmn r9 r1;
split sign discard cmn 31;
cast sign@bit sign;
cmov tmp sign r3 0@sint32;
add r9 r9 tmp;
(* cmp	r10, r1                                     #! PC = 0x8005c74 *)
sub cmp r10 r1;
split sign discard cmp 31;
cast sign@bit sign;
cmov tmp sign 0@sint32 r3;
sub r10 r10 tmp;
(* cmn.w	r10, r1                                   #! PC = 0x8005c7c *)
add cmn r10 r1;
split sign discard cmn 31;
cast sign@bit sign;
cmov tmp sign r3 0@sint32;
add r10 r10 tmp;
(* cmp	r11, r1                                     #! PC = 0x8005c84 *)
sub cmp r11 r1;
split sign discard cmp 31;
cast sign@bit sign;
cmov tmp sign 0@sint32 r3;
sub r11 r11 tmp;
(* cmn.w	r11, r1                                   #! PC = 0x8005c8c *)
add cmn r11 r1;
split sign discard cmn 31;
cast sign@bit sign;
cmov tmp sign r3 0@sint32;
add r11 r11 tmp;
(* vmov	lr, s0                                     #! PC = 0x8005c94 *)
mov lr s0;
(* strh.w	r8, [lr, #256]	; 0x100                   #! EA = L0x2001996e; PC = 0x8005c98 *)
ghost L0x2001996e_f@sint32 : L0x2001996e_f = r8 && L0x2001996e_f = r8;
split discard L0x2001996e_u r8 16;
cast L0x2001996e@sint16 L0x2001996e_u;
(* strh.w	r9, [lr, #320]	; 0x140                   #! EA = L0x200199ae; PC = 0x8005c9c *)
ghost L0x200199ae_f@sint32 : L0x200199ae_f = r9 && L0x200199ae_f = r9;
split discard L0x200199ae_u r9 16;
cast L0x200199ae@sint16 L0x200199ae_u;
(* strh.w	r10, [lr, #384]	; 0x180                  #! EA = L0x200199ee; PC = 0x8005ca0 *)
ghost L0x200199ee_f@sint32 : L0x200199ee_f = r10 && L0x200199ee_f = r10;
split discard L0x200199ee_u r10 16;
cast L0x200199ee@sint16 L0x200199ee_u;
(* strh.w	r11, [lr, #448]	; 0x1c0                  #! EA = L0x20019a2e; PC = 0x8005ca4 *)
ghost L0x20019a2e_f@sint32 : L0x20019a2e_f = r11 && L0x20019a2e_f = r11;
split discard L0x20019a2e_u r11 16;
cast L0x20019a2e@sint16 L0x20019a2e_u;
(* strh.w	r5, [lr, #64]	; 0x40                     #! EA = L0x200198ae; PC = 0x8005ca8 *)
ghost L0x200198ae_f@sint32 : L0x200198ae_f = r5 && L0x200198ae_f = r5;
split discard L0x200198ae_u r5 16;
cast L0x200198ae@sint16 L0x200198ae_u;
(* strh.w	r6, [lr, #128]	; 0x80                    #! EA = L0x200198ee; PC = 0x8005cac *)
ghost L0x200198ee_f@sint32 : L0x200198ee_f = r6 && L0x200198ee_f = r6;
split discard L0x200198ee_u r6 16;
cast L0x200198ee@sint16 L0x200198ee_u;
(* strh.w	r7, [lr, #192]	; 0xc0                    #! EA = L0x2001992e; PC = 0x8005cb0 *)
ghost L0x2001992e_f@sint32 : L0x2001992e_f = r7 && L0x2001992e_f = r7;
split discard L0x2001992e_u r7 16;
cast L0x2001992e@sint16 L0x2001992e_u;
(* strh.w	r4, [lr], #2                             #! EA = L0x2001986e; PC = 0x8005cb4 *)
ghost L0x2001986e_f@sint32 : L0x2001986e_f = r4 && L0x2001986e_f = r4;
split discard L0x2001986e_u r4 16;
cast L0x2001986e@sint16 L0x2001986e_u;
(* vmov	s0, lr                                     #! PC = 0x8005cb8 *)
mov s0 lr;
(* vmov	lr, s3                                     #! PC = 0x8005cbc *)
mov lr s3;
(* vmov	r12, s2                                    #! PC = 0x8005cc8 *)
mov r12 s2;
(* vmov	r1, s1                                     #! PC = 0x8005848 *)
mov r1 s1;
(* vldmia	r1!, {s4-s18}                            #! EA = L0x800f8e8; PC = 0x800584c *)
mov s4 L0x800f8e8;
mov s5 L0x800f8ec;
mov s6 L0x800f8f0;
mov s7 L0x800f8f4;
mov s8 L0x800f8f8;
mov s9 L0x800f8fc;
mov s10 L0x800f900;
mov s11 L0x800f904;
mov s12 L0x800f908;
mov s13 L0x800f90c;
mov s14 L0x800f910;
mov s15 L0x800f914;
mov s16 L0x800f918;
mov s17 L0x800f91c;
mov s18 L0x800f920;
(* vmov	s1, r1                                     #! PC = 0x8005850 *)
mov s1 r1;
(* add.w	lr, r0, #16                               #! PC = 0x8005854 *)
adds discard lr r0 16@uint32;
(* vmov	s3, lr                                     #! PC = 0x8005858 *)
mov s3 lr;
(* ldr.w	r8, [r0, #512]	; 0x200                    #! EA = L0x2001a498; Value = 0x002465f1; PC = 0x800585c *)
mov r8 L0x2001a498;
(* ldr.w	r9, [r0, #640]	; 0x280                    #! EA = L0x2001a518; Value = 0xffe262d3; PC = 0x8005860 *)
mov r9 L0x2001a518;
(* ldr.w	r10, [r0, #768]	; 0x300                   #! EA = L0x2001a598; Value = 0xffa87c0b; PC = 0x8005864 *)
mov r10 L0x2001a598;
(* ldr.w	r11, [r0, #896]	; 0x380                   #! EA = L0x2001a618; Value = 0xff0ae75f; PC = 0x8005868 *)
mov r11 L0x2001a618;
(* ldr.w	r5, [r0, #128]	; 0x80                     #! EA = L0x2001a318; Value = 0x01108ceb; PC = 0x800586c *)
mov r5 L0x2001a318;
(* ldr.w	r6, [r0, #256]	; 0x100                    #! EA = L0x2001a398; Value = 0x00137b16; PC = 0x8005870 *)
mov r6 L0x2001a398;
(* ldr.w	r7, [r0, #384]	; 0x180                    #! EA = L0x2001a418; Value = 0x01a4736f; PC = 0x8005874 *)
mov r7 L0x2001a418;
(* ldr.w	r4, [r0], #4                              #! EA = L0x2001a298; Value = 0xfe093c01; PC = 0x8005878 *)
mov r4 L0x2001a298;
(* vmov	r1, s4                                     #! PC = 0x800587c *)
mov r1 s4;
(* smull	r12, r5, r5, r1                           #! PC = 0x8005880 *)
smull r5 r12 r5 r1;
(* mul.w	lr, r12, r2                               #! PC = 0x8005884 *)
cast r12_s@sint32 r12;
mull discard lr r12_s r2;
(* smlal	r12, r5, lr, r3                           #! PC = 0x8005888 *)
cast lr@sint32 lr;
smull tmp_h tmp_l lr r3;
uadds carry r12 tmp_l r12;
sadc r5 tmp_h r5 carry;
assert eqmod r12 0 (2**32) && true;
assume eq r12 0 && true;
(* smull	r12, r7, r7, r1                           #! PC = 0x800588c *)
smull r7 r12 r7 r1;
(* mul.w	lr, r12, r2                               #! PC = 0x8005890 *)
cast r12_s@sint32 r12;
mull discard lr r12_s r2;
(* smlal	r12, r7, lr, r3                           #! PC = 0x8005894 *)
cast lr@sint32 lr;
smull tmp_h tmp_l lr r3;
uadds carry r12 tmp_l r12;
sadc r7 tmp_h r7 carry;
assert eqmod r12 0 (2**32) && true;
assume eq r12 0 && true;
(* smull	r12, r9, r9, r1                           #! PC = 0x8005898 *)
smull r9 r12 r9 r1;
(* mul.w	lr, r12, r2                               #! PC = 0x800589c *)
cast r12_s@sint32 r12;
mull discard lr r12_s r2;
(* smlal	r12, r9, lr, r3                           #! PC = 0x80058a0 *)
cast lr@sint32 lr;
smull tmp_h tmp_l lr r3;
uadds carry r12 tmp_l r12;
sadc r9 tmp_h r9 carry;
assert eqmod r12 0 (2**32) && true;
assume eq r12 0 && true;
(* smull	r12, r11, r11, r1                         #! PC = 0x80058a4 *)
smull r11 r12 r11 r1;
(* mul.w	lr, r12, r2                               #! PC = 0x80058a8 *)
cast r12_s@sint32 r12;
mull discard lr r12_s r2;
(* smlal	r12, r11, lr, r3                          #! PC = 0x80058ac *)
cast lr@sint32 lr;
smull tmp_h tmp_l lr r3;
uadds carry r12 tmp_l r12;
sadc r11 tmp_h r11 carry;
assert eqmod r12 0 (2**32) && true;
assume eq r12 0 && true;
(* add	r4, r5                                      #! PC = 0x80058b0 *)
add r4 r4 r5;
(* add	r6, r7                                      #! PC = 0x80058b2 *)
add r6 r6 r7;
(* add	r8, r9                                      #! PC = 0x80058b4 *)
add r8 r8 r9;
(* add	r10, r11                                    #! PC = 0x80058b6 *)
add r10 r10 r11;
(* sub.w	r5, r4, r5, lsl #1                        #! PC = 0x80058b8 *)
shl tmp r5 1;
sub r5 r4 tmp;
(* sub.w	r7, r6, r7, lsl #1                        #! PC = 0x80058bc *)
shl tmp r7 1;
sub r7 r6 tmp;
(* sub.w	r9, r8, r9, lsl #1                        #! PC = 0x80058c0 *)
shl tmp r9 1;
sub r9 r8 tmp;
(* sub.w	r11, r10, r11, lsl #1                     #! PC = 0x80058c4 *)
shl tmp r11 1;
sub r11 r10 tmp;
(* vmov	r1, s5                                     #! PC = 0x80058c8 *)
mov r1 s5;
(* smull	r12, r6, r6, r1                           #! PC = 0x80058cc *)
smull r6 r12 r6 r1;
(* mul.w	lr, r12, r2                               #! PC = 0x80058d0 *)
cast r12_s@sint32 r12;
mull discard lr r12_s r2;
(* smlal	r12, r6, lr, r3                           #! PC = 0x80058d4 *)
cast lr@sint32 lr;
smull tmp_h tmp_l lr r3;
uadds carry r12 tmp_l r12;
sadc r6 tmp_h r6 carry;
assert eqmod r12 0 (2**32) && true;
assume eq r12 0 && true;
(* smull	r12, r10, r10, r1                         #! PC = 0x80058d8 *)
smull r10 r12 r10 r1;
(* mul.w	lr, r12, r2                               #! PC = 0x80058dc *)
cast r12_s@sint32 r12;
mull discard lr r12_s r2;
(* smlal	r12, r10, lr, r3                          #! PC = 0x80058e0 *)
cast lr@sint32 lr;
smull tmp_h tmp_l lr r3;
uadds carry r12 tmp_l r12;
sadc r10 tmp_h r10 carry;
assert eqmod r12 0 (2**32) && true;
assume eq r12 0 && true;
(* vmov	r1, s6                                     #! PC = 0x80058e4 *)
mov r1 s6;
(* smull	r12, r7, r7, r1                           #! PC = 0x80058e8 *)
smull r7 r12 r7 r1;
(* mul.w	lr, r12, r2                               #! PC = 0x80058ec *)
cast r12_s@sint32 r12;
mull discard lr r12_s r2;
(* smlal	r12, r7, lr, r3                           #! PC = 0x80058f0 *)
cast lr@sint32 lr;
smull tmp_h tmp_l lr r3;
uadds carry r12 tmp_l r12;
sadc r7 tmp_h r7 carry;
assert eqmod r12 0 (2**32) && true;
assume eq r12 0 && true;
(* smull	r12, r11, r11, r1                         #! PC = 0x80058f4 *)
smull r11 r12 r11 r1;
(* mul.w	lr, r12, r2                               #! PC = 0x80058f8 *)
cast r12_s@sint32 r12;
mull discard lr r12_s r2;
(* smlal	r12, r11, lr, r3                          #! PC = 0x80058fc *)
cast lr@sint32 lr;
smull tmp_h tmp_l lr r3;
uadds carry r12 tmp_l r12;
sadc r11 tmp_h r11 carry;
assert eqmod r12 0 (2**32) && true;
assume eq r12 0 && true;
(* add	r4, r6                                      #! PC = 0x8005900 *)
add r4 r4 r6;
(* add	r5, r7                                      #! PC = 0x8005902 *)
add r5 r5 r7;
(* add	r8, r10                                     #! PC = 0x8005904 *)
add r8 r8 r10;
(* add	r9, r11                                     #! PC = 0x8005906 *)
add r9 r9 r11;
(* sub.w	r6, r4, r6, lsl #1                        #! PC = 0x8005908 *)
shl tmp r6 1;
sub r6 r4 tmp;
(* sub.w	r7, r5, r7, lsl #1                        #! PC = 0x800590c *)
shl tmp r7 1;
sub r7 r5 tmp;
(* sub.w	r10, r8, r10, lsl #1                      #! PC = 0x8005910 *)
shl tmp r10 1;
sub r10 r8 tmp;
(* sub.w	r11, r9, r11, lsl #1                      #! PC = 0x8005914 *)
shl tmp r11 1;
sub r11 r9 tmp;
(* vmov	r1, s7                                     #! PC = 0x8005918 *)
mov r1 s7;
(* smull	r12, r8, r8, r1                           #! PC = 0x800591c *)
smull r8 r12 r8 r1;
(* mul.w	lr, r12, r2                               #! PC = 0x8005920 *)
cast r12_s@sint32 r12;
mull discard lr r12_s r2;
(* smlal	r12, r8, lr, r3                           #! PC = 0x8005924 *)
cast lr@sint32 lr;
smull tmp_h tmp_l lr r3;
uadds carry r12 tmp_l r12;
sadc r8 tmp_h r8 carry;
assert eqmod r12 0 (2**32) && true;
assume eq r12 0 && true;
(* vmov	r1, s8                                     #! PC = 0x8005928 *)
mov r1 s8;
(* smull	r12, r9, r9, r1                           #! PC = 0x800592c *)
smull r9 r12 r9 r1;
(* mul.w	lr, r12, r2                               #! PC = 0x8005930 *)
cast r12_s@sint32 r12;
mull discard lr r12_s r2;
(* smlal	r12, r9, lr, r3                           #! PC = 0x8005934 *)
cast lr@sint32 lr;
smull tmp_h tmp_l lr r3;
uadds carry r12 tmp_l r12;
sadc r9 tmp_h r9 carry;
assert eqmod r12 0 (2**32) && true;
assume eq r12 0 && true;
(* vmov	r1, s9                                     #! PC = 0x8005938 *)
mov r1 s9;
(* smull	r12, r10, r10, r1                         #! PC = 0x800593c *)
smull r10 r12 r10 r1;
(* mul.w	lr, r12, r2                               #! PC = 0x8005940 *)
cast r12_s@sint32 r12;
mull discard lr r12_s r2;
(* smlal	r12, r10, lr, r3                          #! PC = 0x8005944 *)
cast lr@sint32 lr;
smull tmp_h tmp_l lr r3;
uadds carry r12 tmp_l r12;
sadc r10 tmp_h r10 carry;
assert eqmod r12 0 (2**32) && true;
assume eq r12 0 && true;
(* vmov	r1, s10                                    #! PC = 0x8005948 *)
mov r1 s10;
(* smull	r12, r11, r11, r1                         #! PC = 0x800594c *)
smull r11 r12 r11 r1;
(* mul.w	lr, r12, r2                               #! PC = 0x8005950 *)
cast r12_s@sint32 r12;
mull discard lr r12_s r2;
(* smlal	r12, r11, lr, r3                          #! PC = 0x8005954 *)
cast lr@sint32 lr;
smull tmp_h tmp_l lr r3;
uadds carry r12 tmp_l r12;
sadc r11 tmp_h r11 carry;
assert eqmod r12 0 (2**32) && true;
assume eq r12 0 && true;
(* add	r4, r8                                      #! PC = 0x8005958 *)
add r4 r4 r8;
(* add	r5, r9                                      #! PC = 0x800595a *)
add r5 r5 r9;
(* add	r6, r10                                     #! PC = 0x800595c *)
add r6 r6 r10;
(* add	r7, r11                                     #! PC = 0x800595e *)
add r7 r7 r11;
(* sub.w	r8, r4, r8, lsl #1                        #! PC = 0x8005960 *)
shl tmp r8 1;
sub r8 r4 tmp;
(* sub.w	r9, r5, r9, lsl #1                        #! PC = 0x8005964 *)
shl tmp r9 1;
sub r9 r5 tmp;
(* sub.w	r10, r6, r10, lsl #1                      #! PC = 0x8005968 *)
shl tmp r10 1;
sub r10 r6 tmp;
(* sub.w	r11, r7, r11, lsl #1                      #! PC = 0x800596c *)
shl tmp r11 1;
sub r11 r7 tmp;
(* vmov	r1, s11                                    #! PC = 0x8005970 *)
mov r1 s11;
(* smull	r12, r4, r4, r1                           #! PC = 0x8005974 *)
smull r4 r12 r4 r1;
(* mul.w	lr, r12, r2                               #! PC = 0x8005978 *)
cast r12_s@sint32 r12;
mull discard lr r12_s r2;
(* smlal	r12, r4, lr, r3                           #! PC = 0x800597c *)
cast lr@sint32 lr;
smull tmp_h tmp_l lr r3;
uadds carry r12 tmp_l r12;
sadc r4 tmp_h r4 carry;
assert eqmod r12 0 (2**32) && true;
assume eq r12 0 && true;
(* vmov	r1, s12                                    #! PC = 0x8005980 *)
mov r1 s12;
(* smull	r12, r5, r5, r1                           #! PC = 0x8005984 *)
smull r5 r12 r5 r1;
(* mul.w	lr, r12, r2                               #! PC = 0x8005988 *)
cast r12_s@sint32 r12;
mull discard lr r12_s r2;
(* smlal	r12, r5, lr, r3                           #! PC = 0x800598c *)
cast lr@sint32 lr;
smull tmp_h tmp_l lr r3;
uadds carry r12 tmp_l r12;
sadc r5 tmp_h r5 carry;
assert eqmod r12 0 (2**32) && true;
assume eq r12 0 && true;
(* vmov	r1, s13                                    #! PC = 0x8005990 *)
mov r1 s13;
(* smull	r12, r6, r6, r1                           #! PC = 0x8005994 *)
smull r6 r12 r6 r1;
(* mul.w	lr, r12, r2                               #! PC = 0x8005998 *)
cast r12_s@sint32 r12;
mull discard lr r12_s r2;
(* smlal	r12, r6, lr, r3                           #! PC = 0x800599c *)
cast lr@sint32 lr;
smull tmp_h tmp_l lr r3;
uadds carry r12 tmp_l r12;
sadc r6 tmp_h r6 carry;
assert eqmod r12 0 (2**32) && true;
assume eq r12 0 && true;
(* vmov	r1, s14                                    #! PC = 0x80059a0 *)
mov r1 s14;
(* smull	r12, r7, r7, r1                           #! PC = 0x80059a4 *)
smull r7 r12 r7 r1;
(* mul.w	lr, r12, r2                               #! PC = 0x80059a8 *)
cast r12_s@sint32 r12;
mull discard lr r12_s r2;
(* smlal	r12, r7, lr, r3                           #! PC = 0x80059ac *)
cast lr@sint32 lr;
smull tmp_h tmp_l lr r3;
uadds carry r12 tmp_l r12;
sadc r7 tmp_h r7 carry;
assert eqmod r12 0 (2**32) && true;
assume eq r12 0 && true;
(* vmov	r1, s15                                    #! PC = 0x80059b0 *)
mov r1 s15;
(* smull	r12, r8, r8, r1                           #! PC = 0x80059b4 *)
smull r8 r12 r8 r1;
(* mul.w	lr, r12, r2                               #! PC = 0x80059b8 *)
cast r12_s@sint32 r12;
mull discard lr r12_s r2;
(* smlal	r12, r8, lr, r3                           #! PC = 0x80059bc *)
cast lr@sint32 lr;
smull tmp_h tmp_l lr r3;
uadds carry r12 tmp_l r12;
sadc r8 tmp_h r8 carry;
assert eqmod r12 0 (2**32) && true;
assume eq r12 0 && true;
(* vmov	r1, s16                                    #! PC = 0x80059c0 *)
mov r1 s16;
(* smull	r12, r9, r9, r1                           #! PC = 0x80059c4 *)
smull r9 r12 r9 r1;
(* mul.w	lr, r12, r2                               #! PC = 0x80059c8 *)
cast r12_s@sint32 r12;
mull discard lr r12_s r2;
(* smlal	r12, r9, lr, r3                           #! PC = 0x80059cc *)
cast lr@sint32 lr;
smull tmp_h tmp_l lr r3;
uadds carry r12 tmp_l r12;
sadc r9 tmp_h r9 carry;
assert eqmod r12 0 (2**32) && true;
assume eq r12 0 && true;
(* vmov	r1, s17                                    #! PC = 0x80059d0 *)
mov r1 s17;
(* smull	r12, r10, r10, r1                         #! PC = 0x80059d4 *)
smull r10 r12 r10 r1;
(* mul.w	lr, r12, r2                               #! PC = 0x80059d8 *)
cast r12_s@sint32 r12;
mull discard lr r12_s r2;
(* smlal	r12, r10, lr, r3                          #! PC = 0x80059dc *)
cast lr@sint32 lr;
smull tmp_h tmp_l lr r3;
uadds carry r12 tmp_l r12;
sadc r10 tmp_h r10 carry;
assert eqmod r12 0 (2**32) && true;
assume eq r12 0 && true;
(* vmov	r1, s18                                    #! PC = 0x80059e0 *)
mov r1 s18;
(* smull	r12, r11, r11, r1                         #! PC = 0x80059e4 *)
smull r11 r12 r11 r1;
(* mul.w	lr, r12, r2                               #! PC = 0x80059e8 *)
cast r12_s@sint32 r12;
mull discard lr r12_s r2;
(* smlal	r12, r11, lr, r3                          #! PC = 0x80059ec *)
cast lr@sint32 lr;
smull tmp_h tmp_l lr r3;
uadds carry r12 tmp_l r12;
sadc r11 tmp_h r11 carry;
assert eqmod r12 0 (2**32) && true;
assume eq r12 0 && true;
(* mov.w	r1, r3, lsr #1                            #! PC = 0x80059f0 *)
split r1 discard r3 1;
(* cmp	r4, r1                                      #! PC = 0x80059f4 *)
sub cmp r4 r1;
split sign discard cmp 31;
cast sign@bit sign;
cmov tmp sign 0@sint32 r3;
sub r4 r4 tmp;
(* cmn	r4, r1                                      #! PC = 0x80059fa *)
add cmn r4 r1;
split sign discard cmn 31;
cast sign@bit sign;
cmov tmp sign r3 0@sint32;
add r4 r4 tmp;
(* cmp	r5, r1                                      #! PC = 0x8005a00 *)
sub cmp r5 r1;
split sign discard cmp 31;
cast sign@bit sign;
cmov tmp sign 0@sint32 r3;
sub r5 r5 tmp;
(* cmn	r5, r1                                      #! PC = 0x8005a06 *)
add cmn r5 r1;
split sign discard cmn 31;
cast sign@bit sign;
cmov tmp sign r3 0@sint32;
add r5 r5 tmp;
(* cmp	r6, r1                                      #! PC = 0x8005a0c *)
sub cmp r6 r1;
split sign discard cmp 31;
cast sign@bit sign;
cmov tmp sign 0@sint32 r3;
sub r6 r6 tmp;
(* cmn	r6, r1                                      #! PC = 0x8005a12 *)
add cmn r6 r1;
split sign discard cmn 31;
cast sign@bit sign;
cmov tmp sign r3 0@sint32;
add r6 r6 tmp;
(* cmp	r7, r1                                      #! PC = 0x8005a18 *)
sub cmp r7 r1;
split sign discard cmp 31;
cast sign@bit sign;
cmov tmp sign 0@sint32 r3;
sub r7 r7 tmp;
(* cmn	r7, r1                                      #! PC = 0x8005a1e *)
add cmn r7 r1;
split sign discard cmn 31;
cast sign@bit sign;
cmov tmp sign r3 0@sint32;
add r7 r7 tmp;
(* cmp	r8, r1                                      #! PC = 0x8005a24 *)
sub cmp r8 r1;
split sign discard cmp 31;
cast sign@bit sign;
cmov tmp sign 0@sint32 r3;
sub r8 r8 tmp;
(* cmn.w	r8, r1                                    #! PC = 0x8005a2c *)
add cmn r8 r1;
split sign discard cmn 31;
cast sign@bit sign;
cmov tmp sign r3 0@sint32;
add r8 r8 tmp;
(* cmp	r9, r1                                      #! PC = 0x8005a34 *)
sub cmp r9 r1;
split sign discard cmp 31;
cast sign@bit sign;
cmov tmp sign 0@sint32 r3;
sub r9 r9 tmp;
(* cmn.w	r9, r1                                    #! PC = 0x8005a3c *)
add cmn r9 r1;
split sign discard cmn 31;
cast sign@bit sign;
cmov tmp sign r3 0@sint32;
add r9 r9 tmp;
(* cmp	r10, r1                                     #! PC = 0x8005a44 *)
sub cmp r10 r1;
split sign discard cmp 31;
cast sign@bit sign;
cmov tmp sign 0@sint32 r3;
sub r10 r10 tmp;
(* cmn.w	r10, r1                                   #! PC = 0x8005a4c *)
add cmn r10 r1;
split sign discard cmn 31;
cast sign@bit sign;
cmov tmp sign r3 0@sint32;
add r10 r10 tmp;
(* cmp	r11, r1                                     #! PC = 0x8005a54 *)
sub cmp r11 r1;
split sign discard cmp 31;
cast sign@bit sign;
cmov tmp sign 0@sint32 r3;
sub r11 r11 tmp;
(* cmn.w	r11, r1                                   #! PC = 0x8005a5c *)
add cmn r11 r1;
split sign discard cmn 31;
cast sign@bit sign;
cmov tmp sign r3 0@sint32;
add r11 r11 tmp;
(* vmov	lr, s0                                     #! PC = 0x8005a64 *)
mov lr s0;
(* strh.w	r8, [lr, #256]	; 0x100                   #! EA = L0x20019970; PC = 0x8005a68 *)
ghost L0x20019970_f@sint32 : L0x20019970_f = r8 && L0x20019970_f = r8;
split discard L0x20019970_u r8 16;
cast L0x20019970@sint16 L0x20019970_u;
(* strh.w	r9, [lr, #320]	; 0x140                   #! EA = L0x200199b0; PC = 0x8005a6c *)
ghost L0x200199b0_f@sint32 : L0x200199b0_f = r9 && L0x200199b0_f = r9;
split discard L0x200199b0_u r9 16;
cast L0x200199b0@sint16 L0x200199b0_u;
(* strh.w	r10, [lr, #384]	; 0x180                  #! EA = L0x200199f0; PC = 0x8005a70 *)
ghost L0x200199f0_f@sint32 : L0x200199f0_f = r10 && L0x200199f0_f = r10;
split discard L0x200199f0_u r10 16;
cast L0x200199f0@sint16 L0x200199f0_u;
(* strh.w	r11, [lr, #448]	; 0x1c0                  #! EA = L0x20019a30; PC = 0x8005a74 *)
ghost L0x20019a30_f@sint32 : L0x20019a30_f = r11 && L0x20019a30_f = r11;
split discard L0x20019a30_u r11 16;
cast L0x20019a30@sint16 L0x20019a30_u;
(* strh.w	r5, [lr, #64]	; 0x40                     #! EA = L0x200198b0; PC = 0x8005a78 *)
ghost L0x200198b0_f@sint32 : L0x200198b0_f = r5 && L0x200198b0_f = r5;
split discard L0x200198b0_u r5 16;
cast L0x200198b0@sint16 L0x200198b0_u;
(* strh.w	r6, [lr, #128]	; 0x80                    #! EA = L0x200198f0; PC = 0x8005a7c *)
ghost L0x200198f0_f@sint32 : L0x200198f0_f = r6 && L0x200198f0_f = r6;
split discard L0x200198f0_u r6 16;
cast L0x200198f0@sint16 L0x200198f0_u;
(* strh.w	r7, [lr, #192]	; 0xc0                    #! EA = L0x20019930; PC = 0x8005a80 *)
ghost L0x20019930_f@sint32 : L0x20019930_f = r7 && L0x20019930_f = r7;
split discard L0x20019930_u r7 16;
cast L0x20019930@sint16 L0x20019930_u;
(* strh.w	r4, [lr], #2                             #! EA = L0x20019870; PC = 0x8005a84 *)
ghost L0x20019870_f@sint32 : L0x20019870_f = r4 && L0x20019870_f = r4;
split discard L0x20019870_u r4 16;
cast L0x20019870@sint16 L0x20019870_u;
(* vmov	s0, lr                                     #! PC = 0x8005a88 *)
mov s0 lr;
(* ldr.w	r8, [r0, #512]	; 0x200                    #! EA = L0x2001a49c; Value = 0xfef4380d; PC = 0x8005a8c *)
mov r8 L0x2001a49c;
(* ldr.w	r9, [r0, #640]	; 0x280                    #! EA = L0x2001a51c; Value = 0x00321a7a; PC = 0x8005a90 *)
mov r9 L0x2001a51c;
(* ldr.w	r10, [r0, #768]	; 0x300                   #! EA = L0x2001a59c; Value = 0x016295b9; PC = 0x8005a94 *)
mov r10 L0x2001a59c;
(* ldr.w	r11, [r0, #896]	; 0x380                   #! EA = L0x2001a61c; Value = 0xffe62d86; PC = 0x8005a98 *)
mov r11 L0x2001a61c;
(* ldr.w	r5, [r0, #128]	; 0x80                     #! EA = L0x2001a31c; Value = 0xff51e49c; PC = 0x8005a9c *)
mov r5 L0x2001a31c;
(* ldr.w	r6, [r0, #256]	; 0x100                    #! EA = L0x2001a39c; Value = 0x006c9580; PC = 0x8005aa0 *)
mov r6 L0x2001a39c;
(* ldr.w	r7, [r0, #384]	; 0x180                    #! EA = L0x2001a41c; Value = 0x01a6c3be; PC = 0x8005aa4 *)
mov r7 L0x2001a41c;
(* ldr.w	r4, [r0], #4                              #! EA = L0x2001a29c; Value = 0xfebeb2cf; PC = 0x8005aa8 *)
mov r4 L0x2001a29c;
(* vmov	r1, s4                                     #! PC = 0x8005aac *)
mov r1 s4;
(* smull	r12, r5, r5, r1                           #! PC = 0x8005ab0 *)
smull r5 r12 r5 r1;
(* mul.w	lr, r12, r2                               #! PC = 0x8005ab4 *)
cast r12_s@sint32 r12;
mull discard lr r12_s r2;
(* smlal	r12, r5, lr, r3                           #! PC = 0x8005ab8 *)
cast lr@sint32 lr;
smull tmp_h tmp_l lr r3;
uadds carry r12 tmp_l r12;
sadc r5 tmp_h r5 carry;
assert eqmod r12 0 (2**32) && true;
assume eq r12 0 && true;
(* smull	r12, r7, r7, r1                           #! PC = 0x8005abc *)
smull r7 r12 r7 r1;
(* mul.w	lr, r12, r2                               #! PC = 0x8005ac0 *)
cast r12_s@sint32 r12;
mull discard lr r12_s r2;
(* smlal	r12, r7, lr, r3                           #! PC = 0x8005ac4 *)
cast lr@sint32 lr;
smull tmp_h tmp_l lr r3;
uadds carry r12 tmp_l r12;
sadc r7 tmp_h r7 carry;
assert eqmod r12 0 (2**32) && true;
assume eq r12 0 && true;
(* smull	r12, r9, r9, r1                           #! PC = 0x8005ac8 *)
smull r9 r12 r9 r1;
(* mul.w	lr, r12, r2                               #! PC = 0x8005acc *)
cast r12_s@sint32 r12;
mull discard lr r12_s r2;
(* smlal	r12, r9, lr, r3                           #! PC = 0x8005ad0 *)
cast lr@sint32 lr;
smull tmp_h tmp_l lr r3;
uadds carry r12 tmp_l r12;
sadc r9 tmp_h r9 carry;
assert eqmod r12 0 (2**32) && true;
assume eq r12 0 && true;
(* smull	r12, r11, r11, r1                         #! PC = 0x8005ad4 *)
smull r11 r12 r11 r1;
(* mul.w	lr, r12, r2                               #! PC = 0x8005ad8 *)
cast r12_s@sint32 r12;
mull discard lr r12_s r2;
(* smlal	r12, r11, lr, r3                          #! PC = 0x8005adc *)
cast lr@sint32 lr;
smull tmp_h tmp_l lr r3;
uadds carry r12 tmp_l r12;
sadc r11 tmp_h r11 carry;
assert eqmod r12 0 (2**32) && true;
assume eq r12 0 && true;
(* add	r4, r5                                      #! PC = 0x8005ae0 *)
add r4 r4 r5;
(* add	r6, r7                                      #! PC = 0x8005ae2 *)
add r6 r6 r7;
(* add	r8, r9                                      #! PC = 0x8005ae4 *)
add r8 r8 r9;
(* add	r10, r11                                    #! PC = 0x8005ae6 *)
add r10 r10 r11;
(* sub.w	r5, r4, r5, lsl #1                        #! PC = 0x8005ae8 *)
shl tmp r5 1;
sub r5 r4 tmp;
(* sub.w	r7, r6, r7, lsl #1                        #! PC = 0x8005aec *)
shl tmp r7 1;
sub r7 r6 tmp;
(* sub.w	r9, r8, r9, lsl #1                        #! PC = 0x8005af0 *)
shl tmp r9 1;
sub r9 r8 tmp;
(* sub.w	r11, r10, r11, lsl #1                     #! PC = 0x8005af4 *)
shl tmp r11 1;
sub r11 r10 tmp;
(* vmov	r1, s5                                     #! PC = 0x8005af8 *)
mov r1 s5;
(* smull	r12, r6, r6, r1                           #! PC = 0x8005afc *)
smull r6 r12 r6 r1;
(* mul.w	lr, r12, r2                               #! PC = 0x8005b00 *)
cast r12_s@sint32 r12;
mull discard lr r12_s r2;
(* smlal	r12, r6, lr, r3                           #! PC = 0x8005b04 *)
cast lr@sint32 lr;
smull tmp_h tmp_l lr r3;
uadds carry r12 tmp_l r12;
sadc r6 tmp_h r6 carry;
assert eqmod r12 0 (2**32) && true;
assume eq r12 0 && true;
(* smull	r12, r10, r10, r1                         #! PC = 0x8005b08 *)
smull r10 r12 r10 r1;
(* mul.w	lr, r12, r2                               #! PC = 0x8005b0c *)
cast r12_s@sint32 r12;
mull discard lr r12_s r2;
(* smlal	r12, r10, lr, r3                          #! PC = 0x8005b10 *)
cast lr@sint32 lr;
smull tmp_h tmp_l lr r3;
uadds carry r12 tmp_l r12;
sadc r10 tmp_h r10 carry;
assert eqmod r12 0 (2**32) && true;
assume eq r12 0 && true;
(* vmov	r1, s6                                     #! PC = 0x8005b14 *)
mov r1 s6;
(* smull	r12, r7, r7, r1                           #! PC = 0x8005b18 *)
smull r7 r12 r7 r1;
(* mul.w	lr, r12, r2                               #! PC = 0x8005b1c *)
cast r12_s@sint32 r12;
mull discard lr r12_s r2;
(* smlal	r12, r7, lr, r3                           #! PC = 0x8005b20 *)
cast lr@sint32 lr;
smull tmp_h tmp_l lr r3;
uadds carry r12 tmp_l r12;
sadc r7 tmp_h r7 carry;
assert eqmod r12 0 (2**32) && true;
assume eq r12 0 && true;
(* smull	r12, r11, r11, r1                         #! PC = 0x8005b24 *)
smull r11 r12 r11 r1;
(* mul.w	lr, r12, r2                               #! PC = 0x8005b28 *)
cast r12_s@sint32 r12;
mull discard lr r12_s r2;
(* smlal	r12, r11, lr, r3                          #! PC = 0x8005b2c *)
cast lr@sint32 lr;
smull tmp_h tmp_l lr r3;
uadds carry r12 tmp_l r12;
sadc r11 tmp_h r11 carry;
assert eqmod r12 0 (2**32) && true;
assume eq r12 0 && true;
(* add	r4, r6                                      #! PC = 0x8005b30 *)
add r4 r4 r6;
(* add	r5, r7                                      #! PC = 0x8005b32 *)
add r5 r5 r7;
(* add	r8, r10                                     #! PC = 0x8005b34 *)
add r8 r8 r10;
(* add	r9, r11                                     #! PC = 0x8005b36 *)
add r9 r9 r11;
(* sub.w	r6, r4, r6, lsl #1                        #! PC = 0x8005b38 *)
shl tmp r6 1;
sub r6 r4 tmp;
(* sub.w	r7, r5, r7, lsl #1                        #! PC = 0x8005b3c *)
shl tmp r7 1;
sub r7 r5 tmp;
(* sub.w	r10, r8, r10, lsl #1                      #! PC = 0x8005b40 *)
shl tmp r10 1;
sub r10 r8 tmp;
(* sub.w	r11, r9, r11, lsl #1                      #! PC = 0x8005b44 *)
shl tmp r11 1;
sub r11 r9 tmp;
(* vmov	r1, s7                                     #! PC = 0x8005b48 *)
mov r1 s7;
(* smull	r12, r8, r8, r1                           #! PC = 0x8005b4c *)
smull r8 r12 r8 r1;
(* mul.w	lr, r12, r2                               #! PC = 0x8005b50 *)
cast r12_s@sint32 r12;
mull discard lr r12_s r2;
(* smlal	r12, r8, lr, r3                           #! PC = 0x8005b54 *)
cast lr@sint32 lr;
smull tmp_h tmp_l lr r3;
uadds carry r12 tmp_l r12;
sadc r8 tmp_h r8 carry;
assert eqmod r12 0 (2**32) && true;
assume eq r12 0 && true;
(* vmov	r1, s8                                     #! PC = 0x8005b58 *)
mov r1 s8;
(* smull	r12, r9, r9, r1                           #! PC = 0x8005b5c *)
smull r9 r12 r9 r1;
(* mul.w	lr, r12, r2                               #! PC = 0x8005b60 *)
cast r12_s@sint32 r12;
mull discard lr r12_s r2;
(* smlal	r12, r9, lr, r3                           #! PC = 0x8005b64 *)
cast lr@sint32 lr;
smull tmp_h tmp_l lr r3;
uadds carry r12 tmp_l r12;
sadc r9 tmp_h r9 carry;
assert eqmod r12 0 (2**32) && true;
assume eq r12 0 && true;
(* vmov	r1, s9                                     #! PC = 0x8005b68 *)
mov r1 s9;
(* smull	r12, r10, r10, r1                         #! PC = 0x8005b6c *)
smull r10 r12 r10 r1;
(* mul.w	lr, r12, r2                               #! PC = 0x8005b70 *)
cast r12_s@sint32 r12;
mull discard lr r12_s r2;
(* smlal	r12, r10, lr, r3                          #! PC = 0x8005b74 *)
cast lr@sint32 lr;
smull tmp_h tmp_l lr r3;
uadds carry r12 tmp_l r12;
sadc r10 tmp_h r10 carry;
assert eqmod r12 0 (2**32) && true;
assume eq r12 0 && true;
(* vmov	r1, s10                                    #! PC = 0x8005b78 *)
mov r1 s10;
(* smull	r12, r11, r11, r1                         #! PC = 0x8005b7c *)
smull r11 r12 r11 r1;
(* mul.w	lr, r12, r2                               #! PC = 0x8005b80 *)
cast r12_s@sint32 r12;
mull discard lr r12_s r2;
(* smlal	r12, r11, lr, r3                          #! PC = 0x8005b84 *)
cast lr@sint32 lr;
smull tmp_h tmp_l lr r3;
uadds carry r12 tmp_l r12;
sadc r11 tmp_h r11 carry;
assert eqmod r12 0 (2**32) && true;
assume eq r12 0 && true;
(* add	r4, r8                                      #! PC = 0x8005b88 *)
add r4 r4 r8;
(* add	r5, r9                                      #! PC = 0x8005b8a *)
add r5 r5 r9;
(* add	r6, r10                                     #! PC = 0x8005b8c *)
add r6 r6 r10;
(* add	r7, r11                                     #! PC = 0x8005b8e *)
add r7 r7 r11;
(* sub.w	r8, r4, r8, lsl #1                        #! PC = 0x8005b90 *)
shl tmp r8 1;
sub r8 r4 tmp;
(* sub.w	r9, r5, r9, lsl #1                        #! PC = 0x8005b94 *)
shl tmp r9 1;
sub r9 r5 tmp;
(* sub.w	r10, r6, r10, lsl #1                      #! PC = 0x8005b98 *)
shl tmp r10 1;
sub r10 r6 tmp;
(* sub.w	r11, r7, r11, lsl #1                      #! PC = 0x8005b9c *)
shl tmp r11 1;
sub r11 r7 tmp;
(* vmov	r1, s11                                    #! PC = 0x8005ba0 *)
mov r1 s11;
(* smull	r12, r4, r4, r1                           #! PC = 0x8005ba4 *)
smull r4 r12 r4 r1;
(* mul.w	lr, r12, r2                               #! PC = 0x8005ba8 *)
cast r12_s@sint32 r12;
mull discard lr r12_s r2;
(* smlal	r12, r4, lr, r3                           #! PC = 0x8005bac *)
cast lr@sint32 lr;
smull tmp_h tmp_l lr r3;
uadds carry r12 tmp_l r12;
sadc r4 tmp_h r4 carry;
assert eqmod r12 0 (2**32) && true;
assume eq r12 0 && true;
(* vmov	r1, s12                                    #! PC = 0x8005bb0 *)
mov r1 s12;
(* smull	r12, r5, r5, r1                           #! PC = 0x8005bb4 *)
smull r5 r12 r5 r1;
(* mul.w	lr, r12, r2                               #! PC = 0x8005bb8 *)
cast r12_s@sint32 r12;
mull discard lr r12_s r2;
(* smlal	r12, r5, lr, r3                           #! PC = 0x8005bbc *)
cast lr@sint32 lr;
smull tmp_h tmp_l lr r3;
uadds carry r12 tmp_l r12;
sadc r5 tmp_h r5 carry;
assert eqmod r12 0 (2**32) && true;
assume eq r12 0 && true;
(* vmov	r1, s13                                    #! PC = 0x8005bc0 *)
mov r1 s13;
(* smull	r12, r6, r6, r1                           #! PC = 0x8005bc4 *)
smull r6 r12 r6 r1;
(* mul.w	lr, r12, r2                               #! PC = 0x8005bc8 *)
cast r12_s@sint32 r12;
mull discard lr r12_s r2;
(* smlal	r12, r6, lr, r3                           #! PC = 0x8005bcc *)
cast lr@sint32 lr;
smull tmp_h tmp_l lr r3;
uadds carry r12 tmp_l r12;
sadc r6 tmp_h r6 carry;
assert eqmod r12 0 (2**32) && true;
assume eq r12 0 && true;
(* vmov	r1, s14                                    #! PC = 0x8005bd0 *)
mov r1 s14;
(* smull	r12, r7, r7, r1                           #! PC = 0x8005bd4 *)
smull r7 r12 r7 r1;
(* mul.w	lr, r12, r2                               #! PC = 0x8005bd8 *)
cast r12_s@sint32 r12;
mull discard lr r12_s r2;
(* smlal	r12, r7, lr, r3                           #! PC = 0x8005bdc *)
cast lr@sint32 lr;
smull tmp_h tmp_l lr r3;
uadds carry r12 tmp_l r12;
sadc r7 tmp_h r7 carry;
assert eqmod r12 0 (2**32) && true;
assume eq r12 0 && true;
(* vmov	r1, s15                                    #! PC = 0x8005be0 *)
mov r1 s15;
(* smull	r12, r8, r8, r1                           #! PC = 0x8005be4 *)
smull r8 r12 r8 r1;
(* mul.w	lr, r12, r2                               #! PC = 0x8005be8 *)
cast r12_s@sint32 r12;
mull discard lr r12_s r2;
(* smlal	r12, r8, lr, r3                           #! PC = 0x8005bec *)
cast lr@sint32 lr;
smull tmp_h tmp_l lr r3;
uadds carry r12 tmp_l r12;
sadc r8 tmp_h r8 carry;
assert eqmod r12 0 (2**32) && true;
assume eq r12 0 && true;
(* vmov	r1, s16                                    #! PC = 0x8005bf0 *)
mov r1 s16;
(* smull	r12, r9, r9, r1                           #! PC = 0x8005bf4 *)
smull r9 r12 r9 r1;
(* mul.w	lr, r12, r2                               #! PC = 0x8005bf8 *)
cast r12_s@sint32 r12;
mull discard lr r12_s r2;
(* smlal	r12, r9, lr, r3                           #! PC = 0x8005bfc *)
cast lr@sint32 lr;
smull tmp_h tmp_l lr r3;
uadds carry r12 tmp_l r12;
sadc r9 tmp_h r9 carry;
assert eqmod r12 0 (2**32) && true;
assume eq r12 0 && true;
(* vmov	r1, s17                                    #! PC = 0x8005c00 *)
mov r1 s17;
(* smull	r12, r10, r10, r1                         #! PC = 0x8005c04 *)
smull r10 r12 r10 r1;
(* mul.w	lr, r12, r2                               #! PC = 0x8005c08 *)
cast r12_s@sint32 r12;
mull discard lr r12_s r2;
(* smlal	r12, r10, lr, r3                          #! PC = 0x8005c0c *)
cast lr@sint32 lr;
smull tmp_h tmp_l lr r3;
uadds carry r12 tmp_l r12;
sadc r10 tmp_h r10 carry;
assert eqmod r12 0 (2**32) && true;
assume eq r12 0 && true;
(* vmov	r1, s18                                    #! PC = 0x8005c10 *)
mov r1 s18;
(* smull	r12, r11, r11, r1                         #! PC = 0x8005c14 *)
smull r11 r12 r11 r1;
(* mul.w	lr, r12, r2                               #! PC = 0x8005c18 *)
cast r12_s@sint32 r12;
mull discard lr r12_s r2;
(* smlal	r12, r11, lr, r3                          #! PC = 0x8005c1c *)
cast lr@sint32 lr;
smull tmp_h tmp_l lr r3;
uadds carry r12 tmp_l r12;
sadc r11 tmp_h r11 carry;
assert eqmod r12 0 (2**32) && true;
assume eq r12 0 && true;
(* mov.w	r1, r3, lsr #1                            #! PC = 0x8005c20 *)
split r1 discard r3 1;
(* cmp	r4, r1                                      #! PC = 0x8005c24 *)
sub cmp r4 r1;
split sign discard cmp 31;
cast sign@bit sign;
cmov tmp sign 0@sint32 r3;
sub r4 r4 tmp;
(* cmn	r4, r1                                      #! PC = 0x8005c2a *)
add cmn r4 r1;
split sign discard cmn 31;
cast sign@bit sign;
cmov tmp sign r3 0@sint32;
add r4 r4 tmp;
(* cmp	r5, r1                                      #! PC = 0x8005c30 *)
sub cmp r5 r1;
split sign discard cmp 31;
cast sign@bit sign;
cmov tmp sign 0@sint32 r3;
sub r5 r5 tmp;
(* cmn	r5, r1                                      #! PC = 0x8005c36 *)
add cmn r5 r1;
split sign discard cmn 31;
cast sign@bit sign;
cmov tmp sign r3 0@sint32;
add r5 r5 tmp;
(* cmp	r6, r1                                      #! PC = 0x8005c3c *)
sub cmp r6 r1;
split sign discard cmp 31;
cast sign@bit sign;
cmov tmp sign 0@sint32 r3;
sub r6 r6 tmp;
(* cmn	r6, r1                                      #! PC = 0x8005c42 *)
add cmn r6 r1;
split sign discard cmn 31;
cast sign@bit sign;
cmov tmp sign r3 0@sint32;
add r6 r6 tmp;
(* cmp	r7, r1                                      #! PC = 0x8005c48 *)
sub cmp r7 r1;
split sign discard cmp 31;
cast sign@bit sign;
cmov tmp sign 0@sint32 r3;
sub r7 r7 tmp;
(* cmn	r7, r1                                      #! PC = 0x8005c4e *)
add cmn r7 r1;
split sign discard cmn 31;
cast sign@bit sign;
cmov tmp sign r3 0@sint32;
add r7 r7 tmp;
(* cmp	r8, r1                                      #! PC = 0x8005c54 *)
sub cmp r8 r1;
split sign discard cmp 31;
cast sign@bit sign;
cmov tmp sign 0@sint32 r3;
sub r8 r8 tmp;
(* cmn.w	r8, r1                                    #! PC = 0x8005c5c *)
add cmn r8 r1;
split sign discard cmn 31;
cast sign@bit sign;
cmov tmp sign r3 0@sint32;
add r8 r8 tmp;
(* cmp	r9, r1                                      #! PC = 0x8005c64 *)
sub cmp r9 r1;
split sign discard cmp 31;
cast sign@bit sign;
cmov tmp sign 0@sint32 r3;
sub r9 r9 tmp;
(* cmn.w	r9, r1                                    #! PC = 0x8005c6c *)
add cmn r9 r1;
split sign discard cmn 31;
cast sign@bit sign;
cmov tmp sign r3 0@sint32;
add r9 r9 tmp;
(* cmp	r10, r1                                     #! PC = 0x8005c74 *)
sub cmp r10 r1;
split sign discard cmp 31;
cast sign@bit sign;
cmov tmp sign 0@sint32 r3;
sub r10 r10 tmp;
(* cmn.w	r10, r1                                   #! PC = 0x8005c7c *)
add cmn r10 r1;
split sign discard cmn 31;
cast sign@bit sign;
cmov tmp sign r3 0@sint32;
add r10 r10 tmp;
(* cmp	r11, r1                                     #! PC = 0x8005c84 *)
sub cmp r11 r1;
split sign discard cmp 31;
cast sign@bit sign;
cmov tmp sign 0@sint32 r3;
sub r11 r11 tmp;
(* cmn.w	r11, r1                                   #! PC = 0x8005c8c *)
add cmn r11 r1;
split sign discard cmn 31;
cast sign@bit sign;
cmov tmp sign r3 0@sint32;
add r11 r11 tmp;
(* vmov	lr, s0                                     #! PC = 0x8005c94 *)
mov lr s0;
(* strh.w	r8, [lr, #256]	; 0x100                   #! EA = L0x20019972; PC = 0x8005c98 *)
ghost L0x20019972_f@sint32 : L0x20019972_f = r8 && L0x20019972_f = r8;
split discard L0x20019972_u r8 16;
cast L0x20019972@sint16 L0x20019972_u;
(* strh.w	r9, [lr, #320]	; 0x140                   #! EA = L0x200199b2; PC = 0x8005c9c *)
ghost L0x200199b2_f@sint32 : L0x200199b2_f = r9 && L0x200199b2_f = r9;
split discard L0x200199b2_u r9 16;
cast L0x200199b2@sint16 L0x200199b2_u;
(* strh.w	r10, [lr, #384]	; 0x180                  #! EA = L0x200199f2; PC = 0x8005ca0 *)
ghost L0x200199f2_f@sint32 : L0x200199f2_f = r10 && L0x200199f2_f = r10;
split discard L0x200199f2_u r10 16;
cast L0x200199f2@sint16 L0x200199f2_u;
(* strh.w	r11, [lr, #448]	; 0x1c0                  #! EA = L0x20019a32; PC = 0x8005ca4 *)
ghost L0x20019a32_f@sint32 : L0x20019a32_f = r11 && L0x20019a32_f = r11;
split discard L0x20019a32_u r11 16;
cast L0x20019a32@sint16 L0x20019a32_u;
(* strh.w	r5, [lr, #64]	; 0x40                     #! EA = L0x200198b2; PC = 0x8005ca8 *)
ghost L0x200198b2_f@sint32 : L0x200198b2_f = r5 && L0x200198b2_f = r5;
split discard L0x200198b2_u r5 16;
cast L0x200198b2@sint16 L0x200198b2_u;
(* strh.w	r6, [lr, #128]	; 0x80                    #! EA = L0x200198f2; PC = 0x8005cac *)
ghost L0x200198f2_f@sint32 : L0x200198f2_f = r6 && L0x200198f2_f = r6;
split discard L0x200198f2_u r6 16;
cast L0x200198f2@sint16 L0x200198f2_u;
(* strh.w	r7, [lr, #192]	; 0xc0                    #! EA = L0x20019932; PC = 0x8005cb0 *)
ghost L0x20019932_f@sint32 : L0x20019932_f = r7 && L0x20019932_f = r7;
split discard L0x20019932_u r7 16;
cast L0x20019932@sint16 L0x20019932_u;
(* strh.w	r4, [lr], #2                             #! EA = L0x20019872; PC = 0x8005cb4 *)
ghost L0x20019872_f@sint32 : L0x20019872_f = r4 && L0x20019872_f = r4;
split discard L0x20019872_u r4 16;
cast L0x20019872@sint16 L0x20019872_u;
(* vmov	s0, lr                                     #! PC = 0x8005cb8 *)
mov s0 lr;
(* vmov	lr, s3                                     #! PC = 0x8005cbc *)
mov lr s3;
(* ldr.w	r8, [r0, #512]	; 0x200                    #! EA = L0x2001a4a0; Value = 0x00fca31c; PC = 0x800585c *)
mov r8 L0x2001a4a0;
(* ldr.w	r9, [r0, #640]	; 0x280                    #! EA = L0x2001a520; Value = 0xfe2a5890; PC = 0x8005860 *)
mov r9 L0x2001a520;
(* ldr.w	r10, [r0, #768]	; 0x300                   #! EA = L0x2001a5a0; Value = 0x0242fefb; PC = 0x8005864 *)
mov r10 L0x2001a5a0;
(* ldr.w	r11, [r0, #896]	; 0x380                   #! EA = L0x2001a620; Value = 0xfe3b6883; PC = 0x8005868 *)
mov r11 L0x2001a620;
(* ldr.w	r5, [r0, #128]	; 0x80                     #! EA = L0x2001a320; Value = 0x00cd8e3d; PC = 0x800586c *)
mov r5 L0x2001a320;
(* ldr.w	r6, [r0, #256]	; 0x100                    #! EA = L0x2001a3a0; Value = 0x0152066c; PC = 0x8005870 *)
mov r6 L0x2001a3a0;
(* ldr.w	r7, [r0, #384]	; 0x180                    #! EA = L0x2001a420; Value = 0xfdb1a5b4; PC = 0x8005874 *)
mov r7 L0x2001a420;
(* ldr.w	r4, [r0], #4                              #! EA = L0x2001a2a0; Value = 0x0080d7c3; PC = 0x8005878 *)
mov r4 L0x2001a2a0;
(* vmov	r1, s4                                     #! PC = 0x800587c *)
mov r1 s4;
(* smull	r12, r5, r5, r1                           #! PC = 0x8005880 *)
smull r5 r12 r5 r1;
(* mul.w	lr, r12, r2                               #! PC = 0x8005884 *)
cast r12_s@sint32 r12;
mull discard lr r12_s r2;
(* smlal	r12, r5, lr, r3                           #! PC = 0x8005888 *)
cast lr@sint32 lr;
smull tmp_h tmp_l lr r3;
uadds carry r12 tmp_l r12;
sadc r5 tmp_h r5 carry;
assert eqmod r12 0 (2**32) && true;
assume eq r12 0 && true;
(* smull	r12, r7, r7, r1                           #! PC = 0x800588c *)
smull r7 r12 r7 r1;
(* mul.w	lr, r12, r2                               #! PC = 0x8005890 *)
cast r12_s@sint32 r12;
mull discard lr r12_s r2;
(* smlal	r12, r7, lr, r3                           #! PC = 0x8005894 *)
cast lr@sint32 lr;
smull tmp_h tmp_l lr r3;
uadds carry r12 tmp_l r12;
sadc r7 tmp_h r7 carry;
assert eqmod r12 0 (2**32) && true;
assume eq r12 0 && true;
(* smull	r12, r9, r9, r1                           #! PC = 0x8005898 *)
smull r9 r12 r9 r1;
(* mul.w	lr, r12, r2                               #! PC = 0x800589c *)
cast r12_s@sint32 r12;
mull discard lr r12_s r2;
(* smlal	r12, r9, lr, r3                           #! PC = 0x80058a0 *)
cast lr@sint32 lr;
smull tmp_h tmp_l lr r3;
uadds carry r12 tmp_l r12;
sadc r9 tmp_h r9 carry;
assert eqmod r12 0 (2**32) && true;
assume eq r12 0 && true;
(* smull	r12, r11, r11, r1                         #! PC = 0x80058a4 *)
smull r11 r12 r11 r1;
(* mul.w	lr, r12, r2                               #! PC = 0x80058a8 *)
cast r12_s@sint32 r12;
mull discard lr r12_s r2;
(* smlal	r12, r11, lr, r3                          #! PC = 0x80058ac *)
cast lr@sint32 lr;
smull tmp_h tmp_l lr r3;
uadds carry r12 tmp_l r12;
sadc r11 tmp_h r11 carry;
assert eqmod r12 0 (2**32) && true;
assume eq r12 0 && true;
(* add	r4, r5                                      #! PC = 0x80058b0 *)
add r4 r4 r5;
(* add	r6, r7                                      #! PC = 0x80058b2 *)
add r6 r6 r7;
(* add	r8, r9                                      #! PC = 0x80058b4 *)
add r8 r8 r9;
(* add	r10, r11                                    #! PC = 0x80058b6 *)
add r10 r10 r11;
(* sub.w	r5, r4, r5, lsl #1                        #! PC = 0x80058b8 *)
shl tmp r5 1;
sub r5 r4 tmp;
(* sub.w	r7, r6, r7, lsl #1                        #! PC = 0x80058bc *)
shl tmp r7 1;
sub r7 r6 tmp;
(* sub.w	r9, r8, r9, lsl #1                        #! PC = 0x80058c0 *)
shl tmp r9 1;
sub r9 r8 tmp;
(* sub.w	r11, r10, r11, lsl #1                     #! PC = 0x80058c4 *)
shl tmp r11 1;
sub r11 r10 tmp;
(* vmov	r1, s5                                     #! PC = 0x80058c8 *)
mov r1 s5;
(* smull	r12, r6, r6, r1                           #! PC = 0x80058cc *)
smull r6 r12 r6 r1;
(* mul.w	lr, r12, r2                               #! PC = 0x80058d0 *)
cast r12_s@sint32 r12;
mull discard lr r12_s r2;
(* smlal	r12, r6, lr, r3                           #! PC = 0x80058d4 *)
cast lr@sint32 lr;
smull tmp_h tmp_l lr r3;
uadds carry r12 tmp_l r12;
sadc r6 tmp_h r6 carry;
assert eqmod r12 0 (2**32) && true;
assume eq r12 0 && true;
(* smull	r12, r10, r10, r1                         #! PC = 0x80058d8 *)
smull r10 r12 r10 r1;
(* mul.w	lr, r12, r2                               #! PC = 0x80058dc *)
cast r12_s@sint32 r12;
mull discard lr r12_s r2;
(* smlal	r12, r10, lr, r3                          #! PC = 0x80058e0 *)
cast lr@sint32 lr;
smull tmp_h tmp_l lr r3;
uadds carry r12 tmp_l r12;
sadc r10 tmp_h r10 carry;
assert eqmod r12 0 (2**32) && true;
assume eq r12 0 && true;
(* vmov	r1, s6                                     #! PC = 0x80058e4 *)
mov r1 s6;
(* smull	r12, r7, r7, r1                           #! PC = 0x80058e8 *)
smull r7 r12 r7 r1;
(* mul.w	lr, r12, r2                               #! PC = 0x80058ec *)
cast r12_s@sint32 r12;
mull discard lr r12_s r2;
(* smlal	r12, r7, lr, r3                           #! PC = 0x80058f0 *)
cast lr@sint32 lr;
smull tmp_h tmp_l lr r3;
uadds carry r12 tmp_l r12;
sadc r7 tmp_h r7 carry;
assert eqmod r12 0 (2**32) && true;
assume eq r12 0 && true;
(* smull	r12, r11, r11, r1                         #! PC = 0x80058f4 *)
smull r11 r12 r11 r1;
(* mul.w	lr, r12, r2                               #! PC = 0x80058f8 *)
cast r12_s@sint32 r12;
mull discard lr r12_s r2;
(* smlal	r12, r11, lr, r3                          #! PC = 0x80058fc *)
cast lr@sint32 lr;
smull tmp_h tmp_l lr r3;
uadds carry r12 tmp_l r12;
sadc r11 tmp_h r11 carry;
assert eqmod r12 0 (2**32) && true;
assume eq r12 0 && true;
(* add	r4, r6                                      #! PC = 0x8005900 *)
add r4 r4 r6;
(* add	r5, r7                                      #! PC = 0x8005902 *)
add r5 r5 r7;
(* add	r8, r10                                     #! PC = 0x8005904 *)
add r8 r8 r10;
(* add	r9, r11                                     #! PC = 0x8005906 *)
add r9 r9 r11;
(* sub.w	r6, r4, r6, lsl #1                        #! PC = 0x8005908 *)
shl tmp r6 1;
sub r6 r4 tmp;
(* sub.w	r7, r5, r7, lsl #1                        #! PC = 0x800590c *)
shl tmp r7 1;
sub r7 r5 tmp;
(* sub.w	r10, r8, r10, lsl #1                      #! PC = 0x8005910 *)
shl tmp r10 1;
sub r10 r8 tmp;
(* sub.w	r11, r9, r11, lsl #1                      #! PC = 0x8005914 *)
shl tmp r11 1;
sub r11 r9 tmp;
(* vmov	r1, s7                                     #! PC = 0x8005918 *)
mov r1 s7;
(* smull	r12, r8, r8, r1                           #! PC = 0x800591c *)
smull r8 r12 r8 r1;
(* mul.w	lr, r12, r2                               #! PC = 0x8005920 *)
cast r12_s@sint32 r12;
mull discard lr r12_s r2;
(* smlal	r12, r8, lr, r3                           #! PC = 0x8005924 *)
cast lr@sint32 lr;
smull tmp_h tmp_l lr r3;
uadds carry r12 tmp_l r12;
sadc r8 tmp_h r8 carry;
assert eqmod r12 0 (2**32) && true;
assume eq r12 0 && true;
(* vmov	r1, s8                                     #! PC = 0x8005928 *)
mov r1 s8;
(* smull	r12, r9, r9, r1                           #! PC = 0x800592c *)
smull r9 r12 r9 r1;
(* mul.w	lr, r12, r2                               #! PC = 0x8005930 *)
cast r12_s@sint32 r12;
mull discard lr r12_s r2;
(* smlal	r12, r9, lr, r3                           #! PC = 0x8005934 *)
cast lr@sint32 lr;
smull tmp_h tmp_l lr r3;
uadds carry r12 tmp_l r12;
sadc r9 tmp_h r9 carry;
assert eqmod r12 0 (2**32) && true;
assume eq r12 0 && true;
(* vmov	r1, s9                                     #! PC = 0x8005938 *)
mov r1 s9;
(* smull	r12, r10, r10, r1                         #! PC = 0x800593c *)
smull r10 r12 r10 r1;
(* mul.w	lr, r12, r2                               #! PC = 0x8005940 *)
cast r12_s@sint32 r12;
mull discard lr r12_s r2;
(* smlal	r12, r10, lr, r3                          #! PC = 0x8005944 *)
cast lr@sint32 lr;
smull tmp_h tmp_l lr r3;
uadds carry r12 tmp_l r12;
sadc r10 tmp_h r10 carry;
assert eqmod r12 0 (2**32) && true;
assume eq r12 0 && true;
(* vmov	r1, s10                                    #! PC = 0x8005948 *)
mov r1 s10;
(* smull	r12, r11, r11, r1                         #! PC = 0x800594c *)
smull r11 r12 r11 r1;
(* mul.w	lr, r12, r2                               #! PC = 0x8005950 *)
cast r12_s@sint32 r12;
mull discard lr r12_s r2;
(* smlal	r12, r11, lr, r3                          #! PC = 0x8005954 *)
cast lr@sint32 lr;
smull tmp_h tmp_l lr r3;
uadds carry r12 tmp_l r12;
sadc r11 tmp_h r11 carry;
assert eqmod r12 0 (2**32) && true;
assume eq r12 0 && true;
(* add	r4, r8                                      #! PC = 0x8005958 *)
add r4 r4 r8;
(* add	r5, r9                                      #! PC = 0x800595a *)
add r5 r5 r9;
(* add	r6, r10                                     #! PC = 0x800595c *)
add r6 r6 r10;
(* add	r7, r11                                     #! PC = 0x800595e *)
add r7 r7 r11;
(* sub.w	r8, r4, r8, lsl #1                        #! PC = 0x8005960 *)
shl tmp r8 1;
sub r8 r4 tmp;
(* sub.w	r9, r5, r9, lsl #1                        #! PC = 0x8005964 *)
shl tmp r9 1;
sub r9 r5 tmp;
(* sub.w	r10, r6, r10, lsl #1                      #! PC = 0x8005968 *)
shl tmp r10 1;
sub r10 r6 tmp;
(* sub.w	r11, r7, r11, lsl #1                      #! PC = 0x800596c *)
shl tmp r11 1;
sub r11 r7 tmp;
(* vmov	r1, s11                                    #! PC = 0x8005970 *)
mov r1 s11;
(* smull	r12, r4, r4, r1                           #! PC = 0x8005974 *)
smull r4 r12 r4 r1;
(* mul.w	lr, r12, r2                               #! PC = 0x8005978 *)
cast r12_s@sint32 r12;
mull discard lr r12_s r2;
(* smlal	r12, r4, lr, r3                           #! PC = 0x800597c *)
cast lr@sint32 lr;
smull tmp_h tmp_l lr r3;
uadds carry r12 tmp_l r12;
sadc r4 tmp_h r4 carry;
assert eqmod r12 0 (2**32) && true;
assume eq r12 0 && true;
(* vmov	r1, s12                                    #! PC = 0x8005980 *)
mov r1 s12;
(* smull	r12, r5, r5, r1                           #! PC = 0x8005984 *)
smull r5 r12 r5 r1;
(* mul.w	lr, r12, r2                               #! PC = 0x8005988 *)
cast r12_s@sint32 r12;
mull discard lr r12_s r2;
(* smlal	r12, r5, lr, r3                           #! PC = 0x800598c *)
cast lr@sint32 lr;
smull tmp_h tmp_l lr r3;
uadds carry r12 tmp_l r12;
sadc r5 tmp_h r5 carry;
assert eqmod r12 0 (2**32) && true;
assume eq r12 0 && true;
(* vmov	r1, s13                                    #! PC = 0x8005990 *)
mov r1 s13;
(* smull	r12, r6, r6, r1                           #! PC = 0x8005994 *)
smull r6 r12 r6 r1;
(* mul.w	lr, r12, r2                               #! PC = 0x8005998 *)
cast r12_s@sint32 r12;
mull discard lr r12_s r2;
(* smlal	r12, r6, lr, r3                           #! PC = 0x800599c *)
cast lr@sint32 lr;
smull tmp_h tmp_l lr r3;
uadds carry r12 tmp_l r12;
sadc r6 tmp_h r6 carry;
assert eqmod r12 0 (2**32) && true;
assume eq r12 0 && true;
(* vmov	r1, s14                                    #! PC = 0x80059a0 *)
mov r1 s14;
(* smull	r12, r7, r7, r1                           #! PC = 0x80059a4 *)
smull r7 r12 r7 r1;
(* mul.w	lr, r12, r2                               #! PC = 0x80059a8 *)
cast r12_s@sint32 r12;
mull discard lr r12_s r2;
(* smlal	r12, r7, lr, r3                           #! PC = 0x80059ac *)
cast lr@sint32 lr;
smull tmp_h tmp_l lr r3;
uadds carry r12 tmp_l r12;
sadc r7 tmp_h r7 carry;
assert eqmod r12 0 (2**32) && true;
assume eq r12 0 && true;
(* vmov	r1, s15                                    #! PC = 0x80059b0 *)
mov r1 s15;
(* smull	r12, r8, r8, r1                           #! PC = 0x80059b4 *)
smull r8 r12 r8 r1;
(* mul.w	lr, r12, r2                               #! PC = 0x80059b8 *)
cast r12_s@sint32 r12;
mull discard lr r12_s r2;
(* smlal	r12, r8, lr, r3                           #! PC = 0x80059bc *)
cast lr@sint32 lr;
smull tmp_h tmp_l lr r3;
uadds carry r12 tmp_l r12;
sadc r8 tmp_h r8 carry;
assert eqmod r12 0 (2**32) && true;
assume eq r12 0 && true;
(* vmov	r1, s16                                    #! PC = 0x80059c0 *)
mov r1 s16;
(* smull	r12, r9, r9, r1                           #! PC = 0x80059c4 *)
smull r9 r12 r9 r1;
(* mul.w	lr, r12, r2                               #! PC = 0x80059c8 *)
cast r12_s@sint32 r12;
mull discard lr r12_s r2;
(* smlal	r12, r9, lr, r3                           #! PC = 0x80059cc *)
cast lr@sint32 lr;
smull tmp_h tmp_l lr r3;
uadds carry r12 tmp_l r12;
sadc r9 tmp_h r9 carry;
assert eqmod r12 0 (2**32) && true;
assume eq r12 0 && true;
(* vmov	r1, s17                                    #! PC = 0x80059d0 *)
mov r1 s17;
(* smull	r12, r10, r10, r1                         #! PC = 0x80059d4 *)
smull r10 r12 r10 r1;
(* mul.w	lr, r12, r2                               #! PC = 0x80059d8 *)
cast r12_s@sint32 r12;
mull discard lr r12_s r2;
(* smlal	r12, r10, lr, r3                          #! PC = 0x80059dc *)
cast lr@sint32 lr;
smull tmp_h tmp_l lr r3;
uadds carry r12 tmp_l r12;
sadc r10 tmp_h r10 carry;
assert eqmod r12 0 (2**32) && true;
assume eq r12 0 && true;
(* vmov	r1, s18                                    #! PC = 0x80059e0 *)
mov r1 s18;
(* smull	r12, r11, r11, r1                         #! PC = 0x80059e4 *)
smull r11 r12 r11 r1;
(* mul.w	lr, r12, r2                               #! PC = 0x80059e8 *)
cast r12_s@sint32 r12;
mull discard lr r12_s r2;
(* smlal	r12, r11, lr, r3                          #! PC = 0x80059ec *)
cast lr@sint32 lr;
smull tmp_h tmp_l lr r3;
uadds carry r12 tmp_l r12;
sadc r11 tmp_h r11 carry;
assert eqmod r12 0 (2**32) && true;
assume eq r12 0 && true;
(* mov.w	r1, r3, lsr #1                            #! PC = 0x80059f0 *)
split r1 discard r3 1;
(* cmp	r4, r1                                      #! PC = 0x80059f4 *)
sub cmp r4 r1;
split sign discard cmp 31;
cast sign@bit sign;
cmov tmp sign 0@sint32 r3;
sub r4 r4 tmp;
(* cmn	r4, r1                                      #! PC = 0x80059fa *)
add cmn r4 r1;
split sign discard cmn 31;
cast sign@bit sign;
cmov tmp sign r3 0@sint32;
add r4 r4 tmp;
(* cmp	r5, r1                                      #! PC = 0x8005a00 *)
sub cmp r5 r1;
split sign discard cmp 31;
cast sign@bit sign;
cmov tmp sign 0@sint32 r3;
sub r5 r5 tmp;
(* cmn	r5, r1                                      #! PC = 0x8005a06 *)
add cmn r5 r1;
split sign discard cmn 31;
cast sign@bit sign;
cmov tmp sign r3 0@sint32;
add r5 r5 tmp;
(* cmp	r6, r1                                      #! PC = 0x8005a0c *)
sub cmp r6 r1;
split sign discard cmp 31;
cast sign@bit sign;
cmov tmp sign 0@sint32 r3;
sub r6 r6 tmp;
(* cmn	r6, r1                                      #! PC = 0x8005a12 *)
add cmn r6 r1;
split sign discard cmn 31;
cast sign@bit sign;
cmov tmp sign r3 0@sint32;
add r6 r6 tmp;
(* cmp	r7, r1                                      #! PC = 0x8005a18 *)
sub cmp r7 r1;
split sign discard cmp 31;
cast sign@bit sign;
cmov tmp sign 0@sint32 r3;
sub r7 r7 tmp;
(* cmn	r7, r1                                      #! PC = 0x8005a1e *)
add cmn r7 r1;
split sign discard cmn 31;
cast sign@bit sign;
cmov tmp sign r3 0@sint32;
add r7 r7 tmp;
(* cmp	r8, r1                                      #! PC = 0x8005a24 *)
sub cmp r8 r1;
split sign discard cmp 31;
cast sign@bit sign;
cmov tmp sign 0@sint32 r3;
sub r8 r8 tmp;
(* cmn.w	r8, r1                                    #! PC = 0x8005a2c *)
add cmn r8 r1;
split sign discard cmn 31;
cast sign@bit sign;
cmov tmp sign r3 0@sint32;
add r8 r8 tmp;
(* cmp	r9, r1                                      #! PC = 0x8005a34 *)
sub cmp r9 r1;
split sign discard cmp 31;
cast sign@bit sign;
cmov tmp sign 0@sint32 r3;
sub r9 r9 tmp;
(* cmn.w	r9, r1                                    #! PC = 0x8005a3c *)
add cmn r9 r1;
split sign discard cmn 31;
cast sign@bit sign;
cmov tmp sign r3 0@sint32;
add r9 r9 tmp;
(* cmp	r10, r1                                     #! PC = 0x8005a44 *)
sub cmp r10 r1;
split sign discard cmp 31;
cast sign@bit sign;
cmov tmp sign 0@sint32 r3;
sub r10 r10 tmp;
(* cmn.w	r10, r1                                   #! PC = 0x8005a4c *)
add cmn r10 r1;
split sign discard cmn 31;
cast sign@bit sign;
cmov tmp sign r3 0@sint32;
add r10 r10 tmp;
(* cmp	r11, r1                                     #! PC = 0x8005a54 *)
sub cmp r11 r1;
split sign discard cmp 31;
cast sign@bit sign;
cmov tmp sign 0@sint32 r3;
sub r11 r11 tmp;
(* cmn.w	r11, r1                                   #! PC = 0x8005a5c *)
add cmn r11 r1;
split sign discard cmn 31;
cast sign@bit sign;
cmov tmp sign r3 0@sint32;
add r11 r11 tmp;
(* vmov	lr, s0                                     #! PC = 0x8005a64 *)
mov lr s0;
(* strh.w	r8, [lr, #256]	; 0x100                   #! EA = L0x20019974; PC = 0x8005a68 *)
ghost L0x20019974_f@sint32 : L0x20019974_f = r8 && L0x20019974_f = r8;
split discard L0x20019974_u r8 16;
cast L0x20019974@sint16 L0x20019974_u;
(* strh.w	r9, [lr, #320]	; 0x140                   #! EA = L0x200199b4; PC = 0x8005a6c *)
ghost L0x200199b4_f@sint32 : L0x200199b4_f = r9 && L0x200199b4_f = r9;
split discard L0x200199b4_u r9 16;
cast L0x200199b4@sint16 L0x200199b4_u;
(* strh.w	r10, [lr, #384]	; 0x180                  #! EA = L0x200199f4; PC = 0x8005a70 *)
ghost L0x200199f4_f@sint32 : L0x200199f4_f = r10 && L0x200199f4_f = r10;
split discard L0x200199f4_u r10 16;
cast L0x200199f4@sint16 L0x200199f4_u;
(* strh.w	r11, [lr, #448]	; 0x1c0                  #! EA = L0x20019a34; PC = 0x8005a74 *)
ghost L0x20019a34_f@sint32 : L0x20019a34_f = r11 && L0x20019a34_f = r11;
split discard L0x20019a34_u r11 16;
cast L0x20019a34@sint16 L0x20019a34_u;
(* strh.w	r5, [lr, #64]	; 0x40                     #! EA = L0x200198b4; PC = 0x8005a78 *)
ghost L0x200198b4_f@sint32 : L0x200198b4_f = r5 && L0x200198b4_f = r5;
split discard L0x200198b4_u r5 16;
cast L0x200198b4@sint16 L0x200198b4_u;
(* strh.w	r6, [lr, #128]	; 0x80                    #! EA = L0x200198f4; PC = 0x8005a7c *)
ghost L0x200198f4_f@sint32 : L0x200198f4_f = r6 && L0x200198f4_f = r6;
split discard L0x200198f4_u r6 16;
cast L0x200198f4@sint16 L0x200198f4_u;
(* strh.w	r7, [lr, #192]	; 0xc0                    #! EA = L0x20019934; PC = 0x8005a80 *)
ghost L0x20019934_f@sint32 : L0x20019934_f = r7 && L0x20019934_f = r7;
split discard L0x20019934_u r7 16;
cast L0x20019934@sint16 L0x20019934_u;
(* strh.w	r4, [lr], #2                             #! EA = L0x20019874; PC = 0x8005a84 *)
ghost L0x20019874_f@sint32 : L0x20019874_f = r4 && L0x20019874_f = r4;
split discard L0x20019874_u r4 16;
cast L0x20019874@sint16 L0x20019874_u;
(* vmov	s0, lr                                     #! PC = 0x8005a88 *)
mov s0 lr;
(* ldr.w	r8, [r0, #512]	; 0x200                    #! EA = L0x2001a4a4; Value = 0xfccc882c; PC = 0x8005a8c *)
mov r8 L0x2001a4a4;
(* ldr.w	r9, [r0, #640]	; 0x280                    #! EA = L0x2001a524; Value = 0x0063d44e; PC = 0x8005a90 *)
mov r9 L0x2001a524;
(* ldr.w	r10, [r0, #768]	; 0x300                   #! EA = L0x2001a5a4; Value = 0xfe7aee74; PC = 0x8005a94 *)
mov r10 L0x2001a5a4;
(* ldr.w	r11, [r0, #896]	; 0x380                   #! EA = L0x2001a624; Value = 0xfdef62f2; PC = 0x8005a98 *)
mov r11 L0x2001a624;
(* ldr.w	r5, [r0, #128]	; 0x80                     #! EA = L0x2001a324; Value = 0xfe683923; PC = 0x8005a9c *)
mov r5 L0x2001a324;
(* ldr.w	r6, [r0, #256]	; 0x100                    #! EA = L0x2001a3a4; Value = 0x0239e2c7; PC = 0x8005aa0 *)
mov r6 L0x2001a3a4;
(* ldr.w	r7, [r0, #384]	; 0x180                    #! EA = L0x2001a424; Value = 0x012d2bb5; PC = 0x8005aa4 *)
mov r7 L0x2001a424;
(* ldr.w	r4, [r0], #4                              #! EA = L0x2001a2a4; Value = 0x015b8850; PC = 0x8005aa8 *)
mov r4 L0x2001a2a4;
(* vmov	r1, s4                                     #! PC = 0x8005aac *)
mov r1 s4;
(* smull	r12, r5, r5, r1                           #! PC = 0x8005ab0 *)
smull r5 r12 r5 r1;
(* mul.w	lr, r12, r2                               #! PC = 0x8005ab4 *)
cast r12_s@sint32 r12;
mull discard lr r12_s r2;
(* smlal	r12, r5, lr, r3                           #! PC = 0x8005ab8 *)
cast lr@sint32 lr;
smull tmp_h tmp_l lr r3;
uadds carry r12 tmp_l r12;
sadc r5 tmp_h r5 carry;
assert eqmod r12 0 (2**32) && true;
assume eq r12 0 && true;
(* smull	r12, r7, r7, r1                           #! PC = 0x8005abc *)
smull r7 r12 r7 r1;
(* mul.w	lr, r12, r2                               #! PC = 0x8005ac0 *)
cast r12_s@sint32 r12;
mull discard lr r12_s r2;
(* smlal	r12, r7, lr, r3                           #! PC = 0x8005ac4 *)
cast lr@sint32 lr;
smull tmp_h tmp_l lr r3;
uadds carry r12 tmp_l r12;
sadc r7 tmp_h r7 carry;
assert eqmod r12 0 (2**32) && true;
assume eq r12 0 && true;
(* smull	r12, r9, r9, r1                           #! PC = 0x8005ac8 *)
smull r9 r12 r9 r1;
(* mul.w	lr, r12, r2                               #! PC = 0x8005acc *)
cast r12_s@sint32 r12;
mull discard lr r12_s r2;
(* smlal	r12, r9, lr, r3                           #! PC = 0x8005ad0 *)
cast lr@sint32 lr;
smull tmp_h tmp_l lr r3;
uadds carry r12 tmp_l r12;
sadc r9 tmp_h r9 carry;
assert eqmod r12 0 (2**32) && true;
assume eq r12 0 && true;
(* smull	r12, r11, r11, r1                         #! PC = 0x8005ad4 *)
smull r11 r12 r11 r1;
(* mul.w	lr, r12, r2                               #! PC = 0x8005ad8 *)
cast r12_s@sint32 r12;
mull discard lr r12_s r2;
(* smlal	r12, r11, lr, r3                          #! PC = 0x8005adc *)
cast lr@sint32 lr;
smull tmp_h tmp_l lr r3;
uadds carry r12 tmp_l r12;
sadc r11 tmp_h r11 carry;
assert eqmod r12 0 (2**32) && true;
assume eq r12 0 && true;
(* add	r4, r5                                      #! PC = 0x8005ae0 *)
add r4 r4 r5;
(* add	r6, r7                                      #! PC = 0x8005ae2 *)
add r6 r6 r7;
(* add	r8, r9                                      #! PC = 0x8005ae4 *)
add r8 r8 r9;
(* add	r10, r11                                    #! PC = 0x8005ae6 *)
add r10 r10 r11;
(* sub.w	r5, r4, r5, lsl #1                        #! PC = 0x8005ae8 *)
shl tmp r5 1;
sub r5 r4 tmp;
(* sub.w	r7, r6, r7, lsl #1                        #! PC = 0x8005aec *)
shl tmp r7 1;
sub r7 r6 tmp;
(* sub.w	r9, r8, r9, lsl #1                        #! PC = 0x8005af0 *)
shl tmp r9 1;
sub r9 r8 tmp;
(* sub.w	r11, r10, r11, lsl #1                     #! PC = 0x8005af4 *)
shl tmp r11 1;
sub r11 r10 tmp;
(* vmov	r1, s5                                     #! PC = 0x8005af8 *)
mov r1 s5;
(* smull	r12, r6, r6, r1                           #! PC = 0x8005afc *)
smull r6 r12 r6 r1;
(* mul.w	lr, r12, r2                               #! PC = 0x8005b00 *)
cast r12_s@sint32 r12;
mull discard lr r12_s r2;
(* smlal	r12, r6, lr, r3                           #! PC = 0x8005b04 *)
cast lr@sint32 lr;
smull tmp_h tmp_l lr r3;
uadds carry r12 tmp_l r12;
sadc r6 tmp_h r6 carry;
assert eqmod r12 0 (2**32) && true;
assume eq r12 0 && true;
(* smull	r12, r10, r10, r1                         #! PC = 0x8005b08 *)
smull r10 r12 r10 r1;
(* mul.w	lr, r12, r2                               #! PC = 0x8005b0c *)
cast r12_s@sint32 r12;
mull discard lr r12_s r2;
(* smlal	r12, r10, lr, r3                          #! PC = 0x8005b10 *)
cast lr@sint32 lr;
smull tmp_h tmp_l lr r3;
uadds carry r12 tmp_l r12;
sadc r10 tmp_h r10 carry;
assert eqmod r12 0 (2**32) && true;
assume eq r12 0 && true;
(* vmov	r1, s6                                     #! PC = 0x8005b14 *)
mov r1 s6;
(* smull	r12, r7, r7, r1                           #! PC = 0x8005b18 *)
smull r7 r12 r7 r1;
(* mul.w	lr, r12, r2                               #! PC = 0x8005b1c *)
cast r12_s@sint32 r12;
mull discard lr r12_s r2;
(* smlal	r12, r7, lr, r3                           #! PC = 0x8005b20 *)
cast lr@sint32 lr;
smull tmp_h tmp_l lr r3;
uadds carry r12 tmp_l r12;
sadc r7 tmp_h r7 carry;
assert eqmod r12 0 (2**32) && true;
assume eq r12 0 && true;
(* smull	r12, r11, r11, r1                         #! PC = 0x8005b24 *)
smull r11 r12 r11 r1;
(* mul.w	lr, r12, r2                               #! PC = 0x8005b28 *)
cast r12_s@sint32 r12;
mull discard lr r12_s r2;
(* smlal	r12, r11, lr, r3                          #! PC = 0x8005b2c *)
cast lr@sint32 lr;
smull tmp_h tmp_l lr r3;
uadds carry r12 tmp_l r12;
sadc r11 tmp_h r11 carry;
assert eqmod r12 0 (2**32) && true;
assume eq r12 0 && true;
(* add	r4, r6                                      #! PC = 0x8005b30 *)
add r4 r4 r6;
(* add	r5, r7                                      #! PC = 0x8005b32 *)
add r5 r5 r7;
(* add	r8, r10                                     #! PC = 0x8005b34 *)
add r8 r8 r10;
(* add	r9, r11                                     #! PC = 0x8005b36 *)
add r9 r9 r11;
(* sub.w	r6, r4, r6, lsl #1                        #! PC = 0x8005b38 *)
shl tmp r6 1;
sub r6 r4 tmp;
(* sub.w	r7, r5, r7, lsl #1                        #! PC = 0x8005b3c *)
shl tmp r7 1;
sub r7 r5 tmp;
(* sub.w	r10, r8, r10, lsl #1                      #! PC = 0x8005b40 *)
shl tmp r10 1;
sub r10 r8 tmp;
(* sub.w	r11, r9, r11, lsl #1                      #! PC = 0x8005b44 *)
shl tmp r11 1;
sub r11 r9 tmp;
(* vmov	r1, s7                                     #! PC = 0x8005b48 *)
mov r1 s7;
(* smull	r12, r8, r8, r1                           #! PC = 0x8005b4c *)
smull r8 r12 r8 r1;
(* mul.w	lr, r12, r2                               #! PC = 0x8005b50 *)
cast r12_s@sint32 r12;
mull discard lr r12_s r2;
(* smlal	r12, r8, lr, r3                           #! PC = 0x8005b54 *)
cast lr@sint32 lr;
smull tmp_h tmp_l lr r3;
uadds carry r12 tmp_l r12;
sadc r8 tmp_h r8 carry;
assert eqmod r12 0 (2**32) && true;
assume eq r12 0 && true;
(* vmov	r1, s8                                     #! PC = 0x8005b58 *)
mov r1 s8;
(* smull	r12, r9, r9, r1                           #! PC = 0x8005b5c *)
smull r9 r12 r9 r1;
(* mul.w	lr, r12, r2                               #! PC = 0x8005b60 *)
cast r12_s@sint32 r12;
mull discard lr r12_s r2;
(* smlal	r12, r9, lr, r3                           #! PC = 0x8005b64 *)
cast lr@sint32 lr;
smull tmp_h tmp_l lr r3;
uadds carry r12 tmp_l r12;
sadc r9 tmp_h r9 carry;
assert eqmod r12 0 (2**32) && true;
assume eq r12 0 && true;
(* vmov	r1, s9                                     #! PC = 0x8005b68 *)
mov r1 s9;
(* smull	r12, r10, r10, r1                         #! PC = 0x8005b6c *)
smull r10 r12 r10 r1;
(* mul.w	lr, r12, r2                               #! PC = 0x8005b70 *)
cast r12_s@sint32 r12;
mull discard lr r12_s r2;
(* smlal	r12, r10, lr, r3                          #! PC = 0x8005b74 *)
cast lr@sint32 lr;
smull tmp_h tmp_l lr r3;
uadds carry r12 tmp_l r12;
sadc r10 tmp_h r10 carry;
assert eqmod r12 0 (2**32) && true;
assume eq r12 0 && true;
(* vmov	r1, s10                                    #! PC = 0x8005b78 *)
mov r1 s10;
(* smull	r12, r11, r11, r1                         #! PC = 0x8005b7c *)
smull r11 r12 r11 r1;
(* mul.w	lr, r12, r2                               #! PC = 0x8005b80 *)
cast r12_s@sint32 r12;
mull discard lr r12_s r2;
(* smlal	r12, r11, lr, r3                          #! PC = 0x8005b84 *)
cast lr@sint32 lr;
smull tmp_h tmp_l lr r3;
uadds carry r12 tmp_l r12;
sadc r11 tmp_h r11 carry;
assert eqmod r12 0 (2**32) && true;
assume eq r12 0 && true;
(* add	r4, r8                                      #! PC = 0x8005b88 *)
add r4 r4 r8;
(* add	r5, r9                                      #! PC = 0x8005b8a *)
add r5 r5 r9;
(* add	r6, r10                                     #! PC = 0x8005b8c *)
add r6 r6 r10;
(* add	r7, r11                                     #! PC = 0x8005b8e *)
add r7 r7 r11;
(* sub.w	r8, r4, r8, lsl #1                        #! PC = 0x8005b90 *)
shl tmp r8 1;
sub r8 r4 tmp;
(* sub.w	r9, r5, r9, lsl #1                        #! PC = 0x8005b94 *)
shl tmp r9 1;
sub r9 r5 tmp;
(* sub.w	r10, r6, r10, lsl #1                      #! PC = 0x8005b98 *)
shl tmp r10 1;
sub r10 r6 tmp;
(* sub.w	r11, r7, r11, lsl #1                      #! PC = 0x8005b9c *)
shl tmp r11 1;
sub r11 r7 tmp;
(* vmov	r1, s11                                    #! PC = 0x8005ba0 *)
mov r1 s11;
(* smull	r12, r4, r4, r1                           #! PC = 0x8005ba4 *)
smull r4 r12 r4 r1;
(* mul.w	lr, r12, r2                               #! PC = 0x8005ba8 *)
cast r12_s@sint32 r12;
mull discard lr r12_s r2;
(* smlal	r12, r4, lr, r3                           #! PC = 0x8005bac *)
cast lr@sint32 lr;
smull tmp_h tmp_l lr r3;
uadds carry r12 tmp_l r12;
sadc r4 tmp_h r4 carry;
assert eqmod r12 0 (2**32) && true;
assume eq r12 0 && true;
(* vmov	r1, s12                                    #! PC = 0x8005bb0 *)
mov r1 s12;
(* smull	r12, r5, r5, r1                           #! PC = 0x8005bb4 *)
smull r5 r12 r5 r1;
(* mul.w	lr, r12, r2                               #! PC = 0x8005bb8 *)
cast r12_s@sint32 r12;
mull discard lr r12_s r2;
(* smlal	r12, r5, lr, r3                           #! PC = 0x8005bbc *)
cast lr@sint32 lr;
smull tmp_h tmp_l lr r3;
uadds carry r12 tmp_l r12;
sadc r5 tmp_h r5 carry;
assert eqmod r12 0 (2**32) && true;
assume eq r12 0 && true;
(* vmov	r1, s13                                    #! PC = 0x8005bc0 *)
mov r1 s13;
(* smull	r12, r6, r6, r1                           #! PC = 0x8005bc4 *)
smull r6 r12 r6 r1;
(* mul.w	lr, r12, r2                               #! PC = 0x8005bc8 *)
cast r12_s@sint32 r12;
mull discard lr r12_s r2;
(* smlal	r12, r6, lr, r3                           #! PC = 0x8005bcc *)
cast lr@sint32 lr;
smull tmp_h tmp_l lr r3;
uadds carry r12 tmp_l r12;
sadc r6 tmp_h r6 carry;
assert eqmod r12 0 (2**32) && true;
assume eq r12 0 && true;
(* vmov	r1, s14                                    #! PC = 0x8005bd0 *)
mov r1 s14;
(* smull	r12, r7, r7, r1                           #! PC = 0x8005bd4 *)
smull r7 r12 r7 r1;
(* mul.w	lr, r12, r2                               #! PC = 0x8005bd8 *)
cast r12_s@sint32 r12;
mull discard lr r12_s r2;
(* smlal	r12, r7, lr, r3                           #! PC = 0x8005bdc *)
cast lr@sint32 lr;
smull tmp_h tmp_l lr r3;
uadds carry r12 tmp_l r12;
sadc r7 tmp_h r7 carry;
assert eqmod r12 0 (2**32) && true;
assume eq r12 0 && true;
(* vmov	r1, s15                                    #! PC = 0x8005be0 *)
mov r1 s15;
(* smull	r12, r8, r8, r1                           #! PC = 0x8005be4 *)
smull r8 r12 r8 r1;
(* mul.w	lr, r12, r2                               #! PC = 0x8005be8 *)
cast r12_s@sint32 r12;
mull discard lr r12_s r2;
(* smlal	r12, r8, lr, r3                           #! PC = 0x8005bec *)
cast lr@sint32 lr;
smull tmp_h tmp_l lr r3;
uadds carry r12 tmp_l r12;
sadc r8 tmp_h r8 carry;
assert eqmod r12 0 (2**32) && true;
assume eq r12 0 && true;
(* vmov	r1, s16                                    #! PC = 0x8005bf0 *)
mov r1 s16;
(* smull	r12, r9, r9, r1                           #! PC = 0x8005bf4 *)
smull r9 r12 r9 r1;
(* mul.w	lr, r12, r2                               #! PC = 0x8005bf8 *)
cast r12_s@sint32 r12;
mull discard lr r12_s r2;
(* smlal	r12, r9, lr, r3                           #! PC = 0x8005bfc *)
cast lr@sint32 lr;
smull tmp_h tmp_l lr r3;
uadds carry r12 tmp_l r12;
sadc r9 tmp_h r9 carry;
assert eqmod r12 0 (2**32) && true;
assume eq r12 0 && true;
(* vmov	r1, s17                                    #! PC = 0x8005c00 *)
mov r1 s17;
(* smull	r12, r10, r10, r1                         #! PC = 0x8005c04 *)
smull r10 r12 r10 r1;
(* mul.w	lr, r12, r2                               #! PC = 0x8005c08 *)
cast r12_s@sint32 r12;
mull discard lr r12_s r2;
(* smlal	r12, r10, lr, r3                          #! PC = 0x8005c0c *)
cast lr@sint32 lr;
smull tmp_h tmp_l lr r3;
uadds carry r12 tmp_l r12;
sadc r10 tmp_h r10 carry;
assert eqmod r12 0 (2**32) && true;
assume eq r12 0 && true;
(* vmov	r1, s18                                    #! PC = 0x8005c10 *)
mov r1 s18;
(* smull	r12, r11, r11, r1                         #! PC = 0x8005c14 *)
smull r11 r12 r11 r1;
(* mul.w	lr, r12, r2                               #! PC = 0x8005c18 *)
cast r12_s@sint32 r12;
mull discard lr r12_s r2;
(* smlal	r12, r11, lr, r3                          #! PC = 0x8005c1c *)
cast lr@sint32 lr;
smull tmp_h tmp_l lr r3;
uadds carry r12 tmp_l r12;
sadc r11 tmp_h r11 carry;
assert eqmod r12 0 (2**32) && true;
assume eq r12 0 && true;
(* mov.w	r1, r3, lsr #1                            #! PC = 0x8005c20 *)
split r1 discard r3 1;
(* cmp	r4, r1                                      #! PC = 0x8005c24 *)
sub cmp r4 r1;
split sign discard cmp 31;
cast sign@bit sign;
cmov tmp sign 0@sint32 r3;
sub r4 r4 tmp;
(* cmn	r4, r1                                      #! PC = 0x8005c2a *)
add cmn r4 r1;
split sign discard cmn 31;
cast sign@bit sign;
cmov tmp sign r3 0@sint32;
add r4 r4 tmp;
(* cmp	r5, r1                                      #! PC = 0x8005c30 *)
sub cmp r5 r1;
split sign discard cmp 31;
cast sign@bit sign;
cmov tmp sign 0@sint32 r3;
sub r5 r5 tmp;
(* cmn	r5, r1                                      #! PC = 0x8005c36 *)
add cmn r5 r1;
split sign discard cmn 31;
cast sign@bit sign;
cmov tmp sign r3 0@sint32;
add r5 r5 tmp;
(* cmp	r6, r1                                      #! PC = 0x8005c3c *)
sub cmp r6 r1;
split sign discard cmp 31;
cast sign@bit sign;
cmov tmp sign 0@sint32 r3;
sub r6 r6 tmp;
(* cmn	r6, r1                                      #! PC = 0x8005c42 *)
add cmn r6 r1;
split sign discard cmn 31;
cast sign@bit sign;
cmov tmp sign r3 0@sint32;
add r6 r6 tmp;
(* cmp	r7, r1                                      #! PC = 0x8005c48 *)
sub cmp r7 r1;
split sign discard cmp 31;
cast sign@bit sign;
cmov tmp sign 0@sint32 r3;
sub r7 r7 tmp;
(* cmn	r7, r1                                      #! PC = 0x8005c4e *)
add cmn r7 r1;
split sign discard cmn 31;
cast sign@bit sign;
cmov tmp sign r3 0@sint32;
add r7 r7 tmp;
(* cmp	r8, r1                                      #! PC = 0x8005c54 *)
sub cmp r8 r1;
split sign discard cmp 31;
cast sign@bit sign;
cmov tmp sign 0@sint32 r3;
sub r8 r8 tmp;
(* cmn.w	r8, r1                                    #! PC = 0x8005c5c *)
add cmn r8 r1;
split sign discard cmn 31;
cast sign@bit sign;
cmov tmp sign r3 0@sint32;
add r8 r8 tmp;
(* cmp	r9, r1                                      #! PC = 0x8005c64 *)
sub cmp r9 r1;
split sign discard cmp 31;
cast sign@bit sign;
cmov tmp sign 0@sint32 r3;
sub r9 r9 tmp;
(* cmn.w	r9, r1                                    #! PC = 0x8005c6c *)
add cmn r9 r1;
split sign discard cmn 31;
cast sign@bit sign;
cmov tmp sign r3 0@sint32;
add r9 r9 tmp;
(* cmp	r10, r1                                     #! PC = 0x8005c74 *)
sub cmp r10 r1;
split sign discard cmp 31;
cast sign@bit sign;
cmov tmp sign 0@sint32 r3;
sub r10 r10 tmp;
(* cmn.w	r10, r1                                   #! PC = 0x8005c7c *)
add cmn r10 r1;
split sign discard cmn 31;
cast sign@bit sign;
cmov tmp sign r3 0@sint32;
add r10 r10 tmp;
(* cmp	r11, r1                                     #! PC = 0x8005c84 *)
sub cmp r11 r1;
split sign discard cmp 31;
cast sign@bit sign;
cmov tmp sign 0@sint32 r3;
sub r11 r11 tmp;
(* cmn.w	r11, r1                                   #! PC = 0x8005c8c *)
add cmn r11 r1;
split sign discard cmn 31;
cast sign@bit sign;
cmov tmp sign r3 0@sint32;
add r11 r11 tmp;
(* vmov	lr, s0                                     #! PC = 0x8005c94 *)
mov lr s0;
(* strh.w	r8, [lr, #256]	; 0x100                   #! EA = L0x20019976; PC = 0x8005c98 *)
ghost L0x20019976_f@sint32 : L0x20019976_f = r8 && L0x20019976_f = r8;
split discard L0x20019976_u r8 16;
cast L0x20019976@sint16 L0x20019976_u;
(* strh.w	r9, [lr, #320]	; 0x140                   #! EA = L0x200199b6; PC = 0x8005c9c *)
ghost L0x200199b6_f@sint32 : L0x200199b6_f = r9 && L0x200199b6_f = r9;
split discard L0x200199b6_u r9 16;
cast L0x200199b6@sint16 L0x200199b6_u;
(* strh.w	r10, [lr, #384]	; 0x180                  #! EA = L0x200199f6; PC = 0x8005ca0 *)
ghost L0x200199f6_f@sint32 : L0x200199f6_f = r10 && L0x200199f6_f = r10;
split discard L0x200199f6_u r10 16;
cast L0x200199f6@sint16 L0x200199f6_u;
(* strh.w	r11, [lr, #448]	; 0x1c0                  #! EA = L0x20019a36; PC = 0x8005ca4 *)
ghost L0x20019a36_f@sint32 : L0x20019a36_f = r11 && L0x20019a36_f = r11;
split discard L0x20019a36_u r11 16;
cast L0x20019a36@sint16 L0x20019a36_u;
(* strh.w	r5, [lr, #64]	; 0x40                     #! EA = L0x200198b6; PC = 0x8005ca8 *)
ghost L0x200198b6_f@sint32 : L0x200198b6_f = r5 && L0x200198b6_f = r5;
split discard L0x200198b6_u r5 16;
cast L0x200198b6@sint16 L0x200198b6_u;
(* strh.w	r6, [lr, #128]	; 0x80                    #! EA = L0x200198f6; PC = 0x8005cac *)
ghost L0x200198f6_f@sint32 : L0x200198f6_f = r6 && L0x200198f6_f = r6;
split discard L0x200198f6_u r6 16;
cast L0x200198f6@sint16 L0x200198f6_u;
(* strh.w	r7, [lr, #192]	; 0xc0                    #! EA = L0x20019936; PC = 0x8005cb0 *)
ghost L0x20019936_f@sint32 : L0x20019936_f = r7 && L0x20019936_f = r7;
split discard L0x20019936_u r7 16;
cast L0x20019936@sint16 L0x20019936_u;
(* strh.w	r4, [lr], #2                             #! EA = L0x20019876; PC = 0x8005cb4 *)
ghost L0x20019876_f@sint32 : L0x20019876_f = r4 && L0x20019876_f = r4;
split discard L0x20019876_u r4 16;
cast L0x20019876@sint16 L0x20019876_u;
(* vmov	s0, lr                                     #! PC = 0x8005cb8 *)
mov s0 lr;
(* vmov	lr, s3                                     #! PC = 0x8005cbc *)
mov lr s3;
(* vmov	r12, s2                                    #! PC = 0x8005cc8 *)
mov r12 s2;
(* vmov	r1, s1                                     #! PC = 0x8005848 *)
mov r1 s1;
(* vldmia	r1!, {s4-s18}                            #! EA = L0x800f924; PC = 0x800584c *)
mov s4 L0x800f924;
mov s5 L0x800f928;
mov s6 L0x800f92c;
mov s7 L0x800f930;
mov s8 L0x800f934;
mov s9 L0x800f938;
mov s10 L0x800f93c;
mov s11 L0x800f940;
mov s12 L0x800f944;
mov s13 L0x800f948;
mov s14 L0x800f94c;
mov s15 L0x800f950;
mov s16 L0x800f954;
mov s17 L0x800f958;
mov s18 L0x800f95c;
(* vmov	s1, r1                                     #! PC = 0x8005850 *)
mov s1 r1;
(* add.w	lr, r0, #16                               #! PC = 0x8005854 *)
adds discard lr r0 16@uint32;
(* vmov	s3, lr                                     #! PC = 0x8005858 *)
mov s3 lr;
(* ldr.w	r8, [r0, #512]	; 0x200                    #! EA = L0x2001a4a8; Value = 0xfdf0091d; PC = 0x800585c *)
mov r8 L0x2001a4a8;
(* ldr.w	r9, [r0, #640]	; 0x280                    #! EA = L0x2001a528; Value = 0x0143f992; PC = 0x8005860 *)
mov r9 L0x2001a528;
(* ldr.w	r10, [r0, #768]	; 0x300                   #! EA = L0x2001a5a8; Value = 0xff8ed7bd; PC = 0x8005864 *)
mov r10 L0x2001a5a8;
(* ldr.w	r11, [r0, #896]	; 0x380                   #! EA = L0x2001a628; Value = 0xfe8b0d82; PC = 0x8005868 *)
mov r11 L0x2001a628;
(* ldr.w	r5, [r0, #128]	; 0x80                     #! EA = L0x2001a328; Value = 0x02a8a3e2; PC = 0x800586c *)
mov r5 L0x2001a328;
(* ldr.w	r6, [r0, #256]	; 0x100                    #! EA = L0x2001a3a8; Value = 0xff89924f; PC = 0x8005870 *)
mov r6 L0x2001a3a8;
(* ldr.w	r7, [r0, #384]	; 0x180                    #! EA = L0x2001a428; Value = 0xfd225d2f; PC = 0x8005874 *)
mov r7 L0x2001a428;
(* ldr.w	r4, [r0], #4                              #! EA = L0x2001a2a8; Value = 0x00fb630e; PC = 0x8005878 *)
mov r4 L0x2001a2a8;
(* vmov	r1, s4                                     #! PC = 0x800587c *)
mov r1 s4;
(* smull	r12, r5, r5, r1                           #! PC = 0x8005880 *)
smull r5 r12 r5 r1;
(* mul.w	lr, r12, r2                               #! PC = 0x8005884 *)
cast r12_s@sint32 r12;
mull discard lr r12_s r2;
(* smlal	r12, r5, lr, r3                           #! PC = 0x8005888 *)
cast lr@sint32 lr;
smull tmp_h tmp_l lr r3;
uadds carry r12 tmp_l r12;
sadc r5 tmp_h r5 carry;
assert eqmod r12 0 (2**32) && true;
assume eq r12 0 && true;
(* smull	r12, r7, r7, r1                           #! PC = 0x800588c *)
smull r7 r12 r7 r1;
(* mul.w	lr, r12, r2                               #! PC = 0x8005890 *)
cast r12_s@sint32 r12;
mull discard lr r12_s r2;
(* smlal	r12, r7, lr, r3                           #! PC = 0x8005894 *)
cast lr@sint32 lr;
smull tmp_h tmp_l lr r3;
uadds carry r12 tmp_l r12;
sadc r7 tmp_h r7 carry;
assert eqmod r12 0 (2**32) && true;
assume eq r12 0 && true;
(* smull	r12, r9, r9, r1                           #! PC = 0x8005898 *)
smull r9 r12 r9 r1;
(* mul.w	lr, r12, r2                               #! PC = 0x800589c *)
cast r12_s@sint32 r12;
mull discard lr r12_s r2;
(* smlal	r12, r9, lr, r3                           #! PC = 0x80058a0 *)
cast lr@sint32 lr;
smull tmp_h tmp_l lr r3;
uadds carry r12 tmp_l r12;
sadc r9 tmp_h r9 carry;
assert eqmod r12 0 (2**32) && true;
assume eq r12 0 && true;
(* smull	r12, r11, r11, r1                         #! PC = 0x80058a4 *)
smull r11 r12 r11 r1;
(* mul.w	lr, r12, r2                               #! PC = 0x80058a8 *)
cast r12_s@sint32 r12;
mull discard lr r12_s r2;
(* smlal	r12, r11, lr, r3                          #! PC = 0x80058ac *)
cast lr@sint32 lr;
smull tmp_h tmp_l lr r3;
uadds carry r12 tmp_l r12;
sadc r11 tmp_h r11 carry;
assert eqmod r12 0 (2**32) && true;
assume eq r12 0 && true;
(* add	r4, r5                                      #! PC = 0x80058b0 *)
add r4 r4 r5;
(* add	r6, r7                                      #! PC = 0x80058b2 *)
add r6 r6 r7;
(* add	r8, r9                                      #! PC = 0x80058b4 *)
add r8 r8 r9;
(* add	r10, r11                                    #! PC = 0x80058b6 *)
add r10 r10 r11;
(* sub.w	r5, r4, r5, lsl #1                        #! PC = 0x80058b8 *)
shl tmp r5 1;
sub r5 r4 tmp;
(* sub.w	r7, r6, r7, lsl #1                        #! PC = 0x80058bc *)
shl tmp r7 1;
sub r7 r6 tmp;
(* sub.w	r9, r8, r9, lsl #1                        #! PC = 0x80058c0 *)
shl tmp r9 1;
sub r9 r8 tmp;
(* sub.w	r11, r10, r11, lsl #1                     #! PC = 0x80058c4 *)
shl tmp r11 1;
sub r11 r10 tmp;
(* vmov	r1, s5                                     #! PC = 0x80058c8 *)
mov r1 s5;
(* smull	r12, r6, r6, r1                           #! PC = 0x80058cc *)
smull r6 r12 r6 r1;
(* mul.w	lr, r12, r2                               #! PC = 0x80058d0 *)
cast r12_s@sint32 r12;
mull discard lr r12_s r2;
(* smlal	r12, r6, lr, r3                           #! PC = 0x80058d4 *)
cast lr@sint32 lr;
smull tmp_h tmp_l lr r3;
uadds carry r12 tmp_l r12;
sadc r6 tmp_h r6 carry;
assert eqmod r12 0 (2**32) && true;
assume eq r12 0 && true;
(* smull	r12, r10, r10, r1                         #! PC = 0x80058d8 *)
smull r10 r12 r10 r1;
(* mul.w	lr, r12, r2                               #! PC = 0x80058dc *)
cast r12_s@sint32 r12;
mull discard lr r12_s r2;
(* smlal	r12, r10, lr, r3                          #! PC = 0x80058e0 *)
cast lr@sint32 lr;
smull tmp_h tmp_l lr r3;
uadds carry r12 tmp_l r12;
sadc r10 tmp_h r10 carry;
assert eqmod r12 0 (2**32) && true;
assume eq r12 0 && true;
(* vmov	r1, s6                                     #! PC = 0x80058e4 *)
mov r1 s6;
(* smull	r12, r7, r7, r1                           #! PC = 0x80058e8 *)
smull r7 r12 r7 r1;
(* mul.w	lr, r12, r2                               #! PC = 0x80058ec *)
cast r12_s@sint32 r12;
mull discard lr r12_s r2;
(* smlal	r12, r7, lr, r3                           #! PC = 0x80058f0 *)
cast lr@sint32 lr;
smull tmp_h tmp_l lr r3;
uadds carry r12 tmp_l r12;
sadc r7 tmp_h r7 carry;
assert eqmod r12 0 (2**32) && true;
assume eq r12 0 && true;
(* smull	r12, r11, r11, r1                         #! PC = 0x80058f4 *)
smull r11 r12 r11 r1;
(* mul.w	lr, r12, r2                               #! PC = 0x80058f8 *)
cast r12_s@sint32 r12;
mull discard lr r12_s r2;
(* smlal	r12, r11, lr, r3                          #! PC = 0x80058fc *)
cast lr@sint32 lr;
smull tmp_h tmp_l lr r3;
uadds carry r12 tmp_l r12;
sadc r11 tmp_h r11 carry;
assert eqmod r12 0 (2**32) && true;
assume eq r12 0 && true;
(* add	r4, r6                                      #! PC = 0x8005900 *)
add r4 r4 r6;
(* add	r5, r7                                      #! PC = 0x8005902 *)
add r5 r5 r7;
(* add	r8, r10                                     #! PC = 0x8005904 *)
add r8 r8 r10;
(* add	r9, r11                                     #! PC = 0x8005906 *)
add r9 r9 r11;
(* sub.w	r6, r4, r6, lsl #1                        #! PC = 0x8005908 *)
shl tmp r6 1;
sub r6 r4 tmp;
(* sub.w	r7, r5, r7, lsl #1                        #! PC = 0x800590c *)
shl tmp r7 1;
sub r7 r5 tmp;
(* sub.w	r10, r8, r10, lsl #1                      #! PC = 0x8005910 *)
shl tmp r10 1;
sub r10 r8 tmp;
(* sub.w	r11, r9, r11, lsl #1                      #! PC = 0x8005914 *)
shl tmp r11 1;
sub r11 r9 tmp;
(* vmov	r1, s7                                     #! PC = 0x8005918 *)
mov r1 s7;
(* smull	r12, r8, r8, r1                           #! PC = 0x800591c *)
smull r8 r12 r8 r1;
(* mul.w	lr, r12, r2                               #! PC = 0x8005920 *)
cast r12_s@sint32 r12;
mull discard lr r12_s r2;
(* smlal	r12, r8, lr, r3                           #! PC = 0x8005924 *)
cast lr@sint32 lr;
smull tmp_h tmp_l lr r3;
uadds carry r12 tmp_l r12;
sadc r8 tmp_h r8 carry;
assert eqmod r12 0 (2**32) && true;
assume eq r12 0 && true;
(* vmov	r1, s8                                     #! PC = 0x8005928 *)
mov r1 s8;
(* smull	r12, r9, r9, r1                           #! PC = 0x800592c *)
smull r9 r12 r9 r1;
(* mul.w	lr, r12, r2                               #! PC = 0x8005930 *)
cast r12_s@sint32 r12;
mull discard lr r12_s r2;
(* smlal	r12, r9, lr, r3                           #! PC = 0x8005934 *)
cast lr@sint32 lr;
smull tmp_h tmp_l lr r3;
uadds carry r12 tmp_l r12;
sadc r9 tmp_h r9 carry;
assert eqmod r12 0 (2**32) && true;
assume eq r12 0 && true;
(* vmov	r1, s9                                     #! PC = 0x8005938 *)
mov r1 s9;
(* smull	r12, r10, r10, r1                         #! PC = 0x800593c *)
smull r10 r12 r10 r1;
(* mul.w	lr, r12, r2                               #! PC = 0x8005940 *)
cast r12_s@sint32 r12;
mull discard lr r12_s r2;
(* smlal	r12, r10, lr, r3                          #! PC = 0x8005944 *)
cast lr@sint32 lr;
smull tmp_h tmp_l lr r3;
uadds carry r12 tmp_l r12;
sadc r10 tmp_h r10 carry;
assert eqmod r12 0 (2**32) && true;
assume eq r12 0 && true;
(* vmov	r1, s10                                    #! PC = 0x8005948 *)
mov r1 s10;
(* smull	r12, r11, r11, r1                         #! PC = 0x800594c *)
smull r11 r12 r11 r1;
(* mul.w	lr, r12, r2                               #! PC = 0x8005950 *)
cast r12_s@sint32 r12;
mull discard lr r12_s r2;
(* smlal	r12, r11, lr, r3                          #! PC = 0x8005954 *)
cast lr@sint32 lr;
smull tmp_h tmp_l lr r3;
uadds carry r12 tmp_l r12;
sadc r11 tmp_h r11 carry;
assert eqmod r12 0 (2**32) && true;
assume eq r12 0 && true;
(* add	r4, r8                                      #! PC = 0x8005958 *)
add r4 r4 r8;
(* add	r5, r9                                      #! PC = 0x800595a *)
add r5 r5 r9;
(* add	r6, r10                                     #! PC = 0x800595c *)
add r6 r6 r10;
(* add	r7, r11                                     #! PC = 0x800595e *)
add r7 r7 r11;
(* sub.w	r8, r4, r8, lsl #1                        #! PC = 0x8005960 *)
shl tmp r8 1;
sub r8 r4 tmp;
(* sub.w	r9, r5, r9, lsl #1                        #! PC = 0x8005964 *)
shl tmp r9 1;
sub r9 r5 tmp;
(* sub.w	r10, r6, r10, lsl #1                      #! PC = 0x8005968 *)
shl tmp r10 1;
sub r10 r6 tmp;
(* sub.w	r11, r7, r11, lsl #1                      #! PC = 0x800596c *)
shl tmp r11 1;
sub r11 r7 tmp;
(* vmov	r1, s11                                    #! PC = 0x8005970 *)
mov r1 s11;
(* smull	r12, r4, r4, r1                           #! PC = 0x8005974 *)
smull r4 r12 r4 r1;
(* mul.w	lr, r12, r2                               #! PC = 0x8005978 *)
cast r12_s@sint32 r12;
mull discard lr r12_s r2;
(* smlal	r12, r4, lr, r3                           #! PC = 0x800597c *)
cast lr@sint32 lr;
smull tmp_h tmp_l lr r3;
uadds carry r12 tmp_l r12;
sadc r4 tmp_h r4 carry;
assert eqmod r12 0 (2**32) && true;
assume eq r12 0 && true;
(* vmov	r1, s12                                    #! PC = 0x8005980 *)
mov r1 s12;
(* smull	r12, r5, r5, r1                           #! PC = 0x8005984 *)
smull r5 r12 r5 r1;
(* mul.w	lr, r12, r2                               #! PC = 0x8005988 *)
cast r12_s@sint32 r12;
mull discard lr r12_s r2;
(* smlal	r12, r5, lr, r3                           #! PC = 0x800598c *)
cast lr@sint32 lr;
smull tmp_h tmp_l lr r3;
uadds carry r12 tmp_l r12;
sadc r5 tmp_h r5 carry;
assert eqmod r12 0 (2**32) && true;
assume eq r12 0 && true;
(* vmov	r1, s13                                    #! PC = 0x8005990 *)
mov r1 s13;
(* smull	r12, r6, r6, r1                           #! PC = 0x8005994 *)
smull r6 r12 r6 r1;
(* mul.w	lr, r12, r2                               #! PC = 0x8005998 *)
cast r12_s@sint32 r12;
mull discard lr r12_s r2;
(* smlal	r12, r6, lr, r3                           #! PC = 0x800599c *)
cast lr@sint32 lr;
smull tmp_h tmp_l lr r3;
uadds carry r12 tmp_l r12;
sadc r6 tmp_h r6 carry;
assert eqmod r12 0 (2**32) && true;
assume eq r12 0 && true;
(* vmov	r1, s14                                    #! PC = 0x80059a0 *)
mov r1 s14;
(* smull	r12, r7, r7, r1                           #! PC = 0x80059a4 *)
smull r7 r12 r7 r1;
(* mul.w	lr, r12, r2                               #! PC = 0x80059a8 *)
cast r12_s@sint32 r12;
mull discard lr r12_s r2;
(* smlal	r12, r7, lr, r3                           #! PC = 0x80059ac *)
cast lr@sint32 lr;
smull tmp_h tmp_l lr r3;
uadds carry r12 tmp_l r12;
sadc r7 tmp_h r7 carry;
assert eqmod r12 0 (2**32) && true;
assume eq r12 0 && true;
(* vmov	r1, s15                                    #! PC = 0x80059b0 *)
mov r1 s15;
(* smull	r12, r8, r8, r1                           #! PC = 0x80059b4 *)
smull r8 r12 r8 r1;
(* mul.w	lr, r12, r2                               #! PC = 0x80059b8 *)
cast r12_s@sint32 r12;
mull discard lr r12_s r2;
(* smlal	r12, r8, lr, r3                           #! PC = 0x80059bc *)
cast lr@sint32 lr;
smull tmp_h tmp_l lr r3;
uadds carry r12 tmp_l r12;
sadc r8 tmp_h r8 carry;
assert eqmod r12 0 (2**32) && true;
assume eq r12 0 && true;
(* vmov	r1, s16                                    #! PC = 0x80059c0 *)
mov r1 s16;
(* smull	r12, r9, r9, r1                           #! PC = 0x80059c4 *)
smull r9 r12 r9 r1;
(* mul.w	lr, r12, r2                               #! PC = 0x80059c8 *)
cast r12_s@sint32 r12;
mull discard lr r12_s r2;
(* smlal	r12, r9, lr, r3                           #! PC = 0x80059cc *)
cast lr@sint32 lr;
smull tmp_h tmp_l lr r3;
uadds carry r12 tmp_l r12;
sadc r9 tmp_h r9 carry;
assert eqmod r12 0 (2**32) && true;
assume eq r12 0 && true;
(* vmov	r1, s17                                    #! PC = 0x80059d0 *)
mov r1 s17;
(* smull	r12, r10, r10, r1                         #! PC = 0x80059d4 *)
smull r10 r12 r10 r1;
(* mul.w	lr, r12, r2                               #! PC = 0x80059d8 *)
cast r12_s@sint32 r12;
mull discard lr r12_s r2;
(* smlal	r12, r10, lr, r3                          #! PC = 0x80059dc *)
cast lr@sint32 lr;
smull tmp_h tmp_l lr r3;
uadds carry r12 tmp_l r12;
sadc r10 tmp_h r10 carry;
assert eqmod r12 0 (2**32) && true;
assume eq r12 0 && true;
(* vmov	r1, s18                                    #! PC = 0x80059e0 *)
mov r1 s18;
(* smull	r12, r11, r11, r1                         #! PC = 0x80059e4 *)
smull r11 r12 r11 r1;
(* mul.w	lr, r12, r2                               #! PC = 0x80059e8 *)
cast r12_s@sint32 r12;
mull discard lr r12_s r2;
(* smlal	r12, r11, lr, r3                          #! PC = 0x80059ec *)
cast lr@sint32 lr;
smull tmp_h tmp_l lr r3;
uadds carry r12 tmp_l r12;
sadc r11 tmp_h r11 carry;
assert eqmod r12 0 (2**32) && true;
assume eq r12 0 && true;
(* mov.w	r1, r3, lsr #1                            #! PC = 0x80059f0 *)
split r1 discard r3 1;
(* cmp	r4, r1                                      #! PC = 0x80059f4 *)
sub cmp r4 r1;
split sign discard cmp 31;
cast sign@bit sign;
cmov tmp sign 0@sint32 r3;
sub r4 r4 tmp;
(* cmn	r4, r1                                      #! PC = 0x80059fa *)
add cmn r4 r1;
split sign discard cmn 31;
cast sign@bit sign;
cmov tmp sign r3 0@sint32;
add r4 r4 tmp;
(* cmp	r5, r1                                      #! PC = 0x8005a00 *)
sub cmp r5 r1;
split sign discard cmp 31;
cast sign@bit sign;
cmov tmp sign 0@sint32 r3;
sub r5 r5 tmp;
(* cmn	r5, r1                                      #! PC = 0x8005a06 *)
add cmn r5 r1;
split sign discard cmn 31;
cast sign@bit sign;
cmov tmp sign r3 0@sint32;
add r5 r5 tmp;
(* cmp	r6, r1                                      #! PC = 0x8005a0c *)
sub cmp r6 r1;
split sign discard cmp 31;
cast sign@bit sign;
cmov tmp sign 0@sint32 r3;
sub r6 r6 tmp;
(* cmn	r6, r1                                      #! PC = 0x8005a12 *)
add cmn r6 r1;
split sign discard cmn 31;
cast sign@bit sign;
cmov tmp sign r3 0@sint32;
add r6 r6 tmp;
(* cmp	r7, r1                                      #! PC = 0x8005a18 *)
sub cmp r7 r1;
split sign discard cmp 31;
cast sign@bit sign;
cmov tmp sign 0@sint32 r3;
sub r7 r7 tmp;
(* cmn	r7, r1                                      #! PC = 0x8005a1e *)
add cmn r7 r1;
split sign discard cmn 31;
cast sign@bit sign;
cmov tmp sign r3 0@sint32;
add r7 r7 tmp;
(* cmp	r8, r1                                      #! PC = 0x8005a24 *)
sub cmp r8 r1;
split sign discard cmp 31;
cast sign@bit sign;
cmov tmp sign 0@sint32 r3;
sub r8 r8 tmp;
(* cmn.w	r8, r1                                    #! PC = 0x8005a2c *)
add cmn r8 r1;
split sign discard cmn 31;
cast sign@bit sign;
cmov tmp sign r3 0@sint32;
add r8 r8 tmp;
(* cmp	r9, r1                                      #! PC = 0x8005a34 *)
sub cmp r9 r1;
split sign discard cmp 31;
cast sign@bit sign;
cmov tmp sign 0@sint32 r3;
sub r9 r9 tmp;
(* cmn.w	r9, r1                                    #! PC = 0x8005a3c *)
add cmn r9 r1;
split sign discard cmn 31;
cast sign@bit sign;
cmov tmp sign r3 0@sint32;
add r9 r9 tmp;
(* cmp	r10, r1                                     #! PC = 0x8005a44 *)
sub cmp r10 r1;
split sign discard cmp 31;
cast sign@bit sign;
cmov tmp sign 0@sint32 r3;
sub r10 r10 tmp;
(* cmn.w	r10, r1                                   #! PC = 0x8005a4c *)
add cmn r10 r1;
split sign discard cmn 31;
cast sign@bit sign;
cmov tmp sign r3 0@sint32;
add r10 r10 tmp;
(* cmp	r11, r1                                     #! PC = 0x8005a54 *)
sub cmp r11 r1;
split sign discard cmp 31;
cast sign@bit sign;
cmov tmp sign 0@sint32 r3;
sub r11 r11 tmp;
(* cmn.w	r11, r1                                   #! PC = 0x8005a5c *)
add cmn r11 r1;
split sign discard cmn 31;
cast sign@bit sign;
cmov tmp sign r3 0@sint32;
add r11 r11 tmp;
(* vmov	lr, s0                                     #! PC = 0x8005a64 *)
mov lr s0;
(* strh.w	r8, [lr, #256]	; 0x100                   #! EA = L0x20019978; PC = 0x8005a68 *)
ghost L0x20019978_f@sint32 : L0x20019978_f = r8 && L0x20019978_f = r8;
split discard L0x20019978_u r8 16;
cast L0x20019978@sint16 L0x20019978_u;
(* strh.w	r9, [lr, #320]	; 0x140                   #! EA = L0x200199b8; PC = 0x8005a6c *)
ghost L0x200199b8_f@sint32 : L0x200199b8_f = r9 && L0x200199b8_f = r9;
split discard L0x200199b8_u r9 16;
cast L0x200199b8@sint16 L0x200199b8_u;
(* strh.w	r10, [lr, #384]	; 0x180                  #! EA = L0x200199f8; PC = 0x8005a70 *)
ghost L0x200199f8_f@sint32 : L0x200199f8_f = r10 && L0x200199f8_f = r10;
split discard L0x200199f8_u r10 16;
cast L0x200199f8@sint16 L0x200199f8_u;
(* strh.w	r11, [lr, #448]	; 0x1c0                  #! EA = L0x20019a38; PC = 0x8005a74 *)
ghost L0x20019a38_f@sint32 : L0x20019a38_f = r11 && L0x20019a38_f = r11;
split discard L0x20019a38_u r11 16;
cast L0x20019a38@sint16 L0x20019a38_u;
(* strh.w	r5, [lr, #64]	; 0x40                     #! EA = L0x200198b8; PC = 0x8005a78 *)
ghost L0x200198b8_f@sint32 : L0x200198b8_f = r5 && L0x200198b8_f = r5;
split discard L0x200198b8_u r5 16;
cast L0x200198b8@sint16 L0x200198b8_u;
(* strh.w	r6, [lr, #128]	; 0x80                    #! EA = L0x200198f8; PC = 0x8005a7c *)
ghost L0x200198f8_f@sint32 : L0x200198f8_f = r6 && L0x200198f8_f = r6;
split discard L0x200198f8_u r6 16;
cast L0x200198f8@sint16 L0x200198f8_u;
(* strh.w	r7, [lr, #192]	; 0xc0                    #! EA = L0x20019938; PC = 0x8005a80 *)
ghost L0x20019938_f@sint32 : L0x20019938_f = r7 && L0x20019938_f = r7;
split discard L0x20019938_u r7 16;
cast L0x20019938@sint16 L0x20019938_u;
(* strh.w	r4, [lr], #2                             #! EA = L0x20019878; PC = 0x8005a84 *)
ghost L0x20019878_f@sint32 : L0x20019878_f = r4 && L0x20019878_f = r4;
split discard L0x20019878_u r4 16;
cast L0x20019878@sint16 L0x20019878_u;
(* vmov	s0, lr                                     #! PC = 0x8005a88 *)
mov s0 lr;
(* ldr.w	r8, [r0, #512]	; 0x200                    #! EA = L0x2001a4ac; Value = 0x0007695d; PC = 0x8005a8c *)
mov r8 L0x2001a4ac;
(* ldr.w	r9, [r0, #640]	; 0x280                    #! EA = L0x2001a52c; Value = 0xfe81350d; PC = 0x8005a90 *)
mov r9 L0x2001a52c;
(* ldr.w	r10, [r0, #768]	; 0x300                   #! EA = L0x2001a5ac; Value = 0x019a1d45; PC = 0x8005a94 *)
mov r10 L0x2001a5ac;
(* ldr.w	r11, [r0, #896]	; 0x380                   #! EA = L0x2001a62c; Value = 0xff877ec2; PC = 0x8005a98 *)
mov r11 L0x2001a62c;
(* ldr.w	r5, [r0, #128]	; 0x80                     #! EA = L0x2001a32c; Value = 0x035a0547; PC = 0x8005a9c *)
mov r5 L0x2001a32c;
(* ldr.w	r6, [r0, #256]	; 0x100                    #! EA = L0x2001a3ac; Value = 0xfd724345; PC = 0x8005aa0 *)
mov r6 L0x2001a3ac;
(* ldr.w	r7, [r0, #384]	; 0x180                    #! EA = L0x2001a42c; Value = 0x003f018c; PC = 0x8005aa4 *)
mov r7 L0x2001a42c;
(* ldr.w	r4, [r0], #4                              #! EA = L0x2001a2ac; Value = 0x015d1197; PC = 0x8005aa8 *)
mov r4 L0x2001a2ac;
(* vmov	r1, s4                                     #! PC = 0x8005aac *)
mov r1 s4;
(* smull	r12, r5, r5, r1                           #! PC = 0x8005ab0 *)
smull r5 r12 r5 r1;
(* mul.w	lr, r12, r2                               #! PC = 0x8005ab4 *)
cast r12_s@sint32 r12;
mull discard lr r12_s r2;
(* smlal	r12, r5, lr, r3                           #! PC = 0x8005ab8 *)
cast lr@sint32 lr;
smull tmp_h tmp_l lr r3;
uadds carry r12 tmp_l r12;
sadc r5 tmp_h r5 carry;
assert eqmod r12 0 (2**32) && true;
assume eq r12 0 && true;
(* smull	r12, r7, r7, r1                           #! PC = 0x8005abc *)
smull r7 r12 r7 r1;
(* mul.w	lr, r12, r2                               #! PC = 0x8005ac0 *)
cast r12_s@sint32 r12;
mull discard lr r12_s r2;
(* smlal	r12, r7, lr, r3                           #! PC = 0x8005ac4 *)
cast lr@sint32 lr;
smull tmp_h tmp_l lr r3;
uadds carry r12 tmp_l r12;
sadc r7 tmp_h r7 carry;
assert eqmod r12 0 (2**32) && true;
assume eq r12 0 && true;
(* smull	r12, r9, r9, r1                           #! PC = 0x8005ac8 *)
smull r9 r12 r9 r1;
(* mul.w	lr, r12, r2                               #! PC = 0x8005acc *)
cast r12_s@sint32 r12;
mull discard lr r12_s r2;
(* smlal	r12, r9, lr, r3                           #! PC = 0x8005ad0 *)
cast lr@sint32 lr;
smull tmp_h tmp_l lr r3;
uadds carry r12 tmp_l r12;
sadc r9 tmp_h r9 carry;
assert eqmod r12 0 (2**32) && true;
assume eq r12 0 && true;
(* smull	r12, r11, r11, r1                         #! PC = 0x8005ad4 *)
smull r11 r12 r11 r1;
(* mul.w	lr, r12, r2                               #! PC = 0x8005ad8 *)
cast r12_s@sint32 r12;
mull discard lr r12_s r2;
(* smlal	r12, r11, lr, r3                          #! PC = 0x8005adc *)
cast lr@sint32 lr;
smull tmp_h tmp_l lr r3;
uadds carry r12 tmp_l r12;
sadc r11 tmp_h r11 carry;
assert eqmod r12 0 (2**32) && true;
assume eq r12 0 && true;
(* add	r4, r5                                      #! PC = 0x8005ae0 *)
add r4 r4 r5;
(* add	r6, r7                                      #! PC = 0x8005ae2 *)
add r6 r6 r7;
(* add	r8, r9                                      #! PC = 0x8005ae4 *)
add r8 r8 r9;
(* add	r10, r11                                    #! PC = 0x8005ae6 *)
add r10 r10 r11;
(* sub.w	r5, r4, r5, lsl #1                        #! PC = 0x8005ae8 *)
shl tmp r5 1;
sub r5 r4 tmp;
(* sub.w	r7, r6, r7, lsl #1                        #! PC = 0x8005aec *)
shl tmp r7 1;
sub r7 r6 tmp;
(* sub.w	r9, r8, r9, lsl #1                        #! PC = 0x8005af0 *)
shl tmp r9 1;
sub r9 r8 tmp;
(* sub.w	r11, r10, r11, lsl #1                     #! PC = 0x8005af4 *)
shl tmp r11 1;
sub r11 r10 tmp;
(* vmov	r1, s5                                     #! PC = 0x8005af8 *)
mov r1 s5;
(* smull	r12, r6, r6, r1                           #! PC = 0x8005afc *)
smull r6 r12 r6 r1;
(* mul.w	lr, r12, r2                               #! PC = 0x8005b00 *)
cast r12_s@sint32 r12;
mull discard lr r12_s r2;
(* smlal	r12, r6, lr, r3                           #! PC = 0x8005b04 *)
cast lr@sint32 lr;
smull tmp_h tmp_l lr r3;
uadds carry r12 tmp_l r12;
sadc r6 tmp_h r6 carry;
assert eqmod r12 0 (2**32) && true;
assume eq r12 0 && true;
(* smull	r12, r10, r10, r1                         #! PC = 0x8005b08 *)
smull r10 r12 r10 r1;
(* mul.w	lr, r12, r2                               #! PC = 0x8005b0c *)
cast r12_s@sint32 r12;
mull discard lr r12_s r2;
(* smlal	r12, r10, lr, r3                          #! PC = 0x8005b10 *)
cast lr@sint32 lr;
smull tmp_h tmp_l lr r3;
uadds carry r12 tmp_l r12;
sadc r10 tmp_h r10 carry;
assert eqmod r12 0 (2**32) && true;
assume eq r12 0 && true;
(* vmov	r1, s6                                     #! PC = 0x8005b14 *)
mov r1 s6;
(* smull	r12, r7, r7, r1                           #! PC = 0x8005b18 *)
smull r7 r12 r7 r1;
(* mul.w	lr, r12, r2                               #! PC = 0x8005b1c *)
cast r12_s@sint32 r12;
mull discard lr r12_s r2;
(* smlal	r12, r7, lr, r3                           #! PC = 0x8005b20 *)
cast lr@sint32 lr;
smull tmp_h tmp_l lr r3;
uadds carry r12 tmp_l r12;
sadc r7 tmp_h r7 carry;
assert eqmod r12 0 (2**32) && true;
assume eq r12 0 && true;
(* smull	r12, r11, r11, r1                         #! PC = 0x8005b24 *)
smull r11 r12 r11 r1;
(* mul.w	lr, r12, r2                               #! PC = 0x8005b28 *)
cast r12_s@sint32 r12;
mull discard lr r12_s r2;
(* smlal	r12, r11, lr, r3                          #! PC = 0x8005b2c *)
cast lr@sint32 lr;
smull tmp_h tmp_l lr r3;
uadds carry r12 tmp_l r12;
sadc r11 tmp_h r11 carry;
assert eqmod r12 0 (2**32) && true;
assume eq r12 0 && true;
(* add	r4, r6                                      #! PC = 0x8005b30 *)
add r4 r4 r6;
(* add	r5, r7                                      #! PC = 0x8005b32 *)
add r5 r5 r7;
(* add	r8, r10                                     #! PC = 0x8005b34 *)
add r8 r8 r10;
(* add	r9, r11                                     #! PC = 0x8005b36 *)
add r9 r9 r11;
(* sub.w	r6, r4, r6, lsl #1                        #! PC = 0x8005b38 *)
shl tmp r6 1;
sub r6 r4 tmp;
(* sub.w	r7, r5, r7, lsl #1                        #! PC = 0x8005b3c *)
shl tmp r7 1;
sub r7 r5 tmp;
(* sub.w	r10, r8, r10, lsl #1                      #! PC = 0x8005b40 *)
shl tmp r10 1;
sub r10 r8 tmp;
(* sub.w	r11, r9, r11, lsl #1                      #! PC = 0x8005b44 *)
shl tmp r11 1;
sub r11 r9 tmp;
(* vmov	r1, s7                                     #! PC = 0x8005b48 *)
mov r1 s7;
(* smull	r12, r8, r8, r1                           #! PC = 0x8005b4c *)
smull r8 r12 r8 r1;
(* mul.w	lr, r12, r2                               #! PC = 0x8005b50 *)
cast r12_s@sint32 r12;
mull discard lr r12_s r2;
(* smlal	r12, r8, lr, r3                           #! PC = 0x8005b54 *)
cast lr@sint32 lr;
smull tmp_h tmp_l lr r3;
uadds carry r12 tmp_l r12;
sadc r8 tmp_h r8 carry;
assert eqmod r12 0 (2**32) && true;
assume eq r12 0 && true;
(* vmov	r1, s8                                     #! PC = 0x8005b58 *)
mov r1 s8;
(* smull	r12, r9, r9, r1                           #! PC = 0x8005b5c *)
smull r9 r12 r9 r1;
(* mul.w	lr, r12, r2                               #! PC = 0x8005b60 *)
cast r12_s@sint32 r12;
mull discard lr r12_s r2;
(* smlal	r12, r9, lr, r3                           #! PC = 0x8005b64 *)
cast lr@sint32 lr;
smull tmp_h tmp_l lr r3;
uadds carry r12 tmp_l r12;
sadc r9 tmp_h r9 carry;
assert eqmod r12 0 (2**32) && true;
assume eq r12 0 && true;
(* vmov	r1, s9                                     #! PC = 0x8005b68 *)
mov r1 s9;
(* smull	r12, r10, r10, r1                         #! PC = 0x8005b6c *)
smull r10 r12 r10 r1;
(* mul.w	lr, r12, r2                               #! PC = 0x8005b70 *)
cast r12_s@sint32 r12;
mull discard lr r12_s r2;
(* smlal	r12, r10, lr, r3                          #! PC = 0x8005b74 *)
cast lr@sint32 lr;
smull tmp_h tmp_l lr r3;
uadds carry r12 tmp_l r12;
sadc r10 tmp_h r10 carry;
assert eqmod r12 0 (2**32) && true;
assume eq r12 0 && true;
(* vmov	r1, s10                                    #! PC = 0x8005b78 *)
mov r1 s10;
(* smull	r12, r11, r11, r1                         #! PC = 0x8005b7c *)
smull r11 r12 r11 r1;
(* mul.w	lr, r12, r2                               #! PC = 0x8005b80 *)
cast r12_s@sint32 r12;
mull discard lr r12_s r2;
(* smlal	r12, r11, lr, r3                          #! PC = 0x8005b84 *)
cast lr@sint32 lr;
smull tmp_h tmp_l lr r3;
uadds carry r12 tmp_l r12;
sadc r11 tmp_h r11 carry;
assert eqmod r12 0 (2**32) && true;
assume eq r12 0 && true;
(* add	r4, r8                                      #! PC = 0x8005b88 *)
add r4 r4 r8;
(* add	r5, r9                                      #! PC = 0x8005b8a *)
add r5 r5 r9;
(* add	r6, r10                                     #! PC = 0x8005b8c *)
add r6 r6 r10;
(* add	r7, r11                                     #! PC = 0x8005b8e *)
add r7 r7 r11;
(* sub.w	r8, r4, r8, lsl #1                        #! PC = 0x8005b90 *)
shl tmp r8 1;
sub r8 r4 tmp;
(* sub.w	r9, r5, r9, lsl #1                        #! PC = 0x8005b94 *)
shl tmp r9 1;
sub r9 r5 tmp;
(* sub.w	r10, r6, r10, lsl #1                      #! PC = 0x8005b98 *)
shl tmp r10 1;
sub r10 r6 tmp;
(* sub.w	r11, r7, r11, lsl #1                      #! PC = 0x8005b9c *)
shl tmp r11 1;
sub r11 r7 tmp;
(* vmov	r1, s11                                    #! PC = 0x8005ba0 *)
mov r1 s11;
(* smull	r12, r4, r4, r1                           #! PC = 0x8005ba4 *)
smull r4 r12 r4 r1;
(* mul.w	lr, r12, r2                               #! PC = 0x8005ba8 *)
cast r12_s@sint32 r12;
mull discard lr r12_s r2;
(* smlal	r12, r4, lr, r3                           #! PC = 0x8005bac *)
cast lr@sint32 lr;
smull tmp_h tmp_l lr r3;
uadds carry r12 tmp_l r12;
sadc r4 tmp_h r4 carry;
assert eqmod r12 0 (2**32) && true;
assume eq r12 0 && true;
(* vmov	r1, s12                                    #! PC = 0x8005bb0 *)
mov r1 s12;
(* smull	r12, r5, r5, r1                           #! PC = 0x8005bb4 *)
smull r5 r12 r5 r1;
(* mul.w	lr, r12, r2                               #! PC = 0x8005bb8 *)
cast r12_s@sint32 r12;
mull discard lr r12_s r2;
(* smlal	r12, r5, lr, r3                           #! PC = 0x8005bbc *)
cast lr@sint32 lr;
smull tmp_h tmp_l lr r3;
uadds carry r12 tmp_l r12;
sadc r5 tmp_h r5 carry;
assert eqmod r12 0 (2**32) && true;
assume eq r12 0 && true;
(* vmov	r1, s13                                    #! PC = 0x8005bc0 *)
mov r1 s13;
(* smull	r12, r6, r6, r1                           #! PC = 0x8005bc4 *)
smull r6 r12 r6 r1;
(* mul.w	lr, r12, r2                               #! PC = 0x8005bc8 *)
cast r12_s@sint32 r12;
mull discard lr r12_s r2;
(* smlal	r12, r6, lr, r3                           #! PC = 0x8005bcc *)
cast lr@sint32 lr;
smull tmp_h tmp_l lr r3;
uadds carry r12 tmp_l r12;
sadc r6 tmp_h r6 carry;
assert eqmod r12 0 (2**32) && true;
assume eq r12 0 && true;
(* vmov	r1, s14                                    #! PC = 0x8005bd0 *)
mov r1 s14;
(* smull	r12, r7, r7, r1                           #! PC = 0x8005bd4 *)
smull r7 r12 r7 r1;
(* mul.w	lr, r12, r2                               #! PC = 0x8005bd8 *)
cast r12_s@sint32 r12;
mull discard lr r12_s r2;
(* smlal	r12, r7, lr, r3                           #! PC = 0x8005bdc *)
cast lr@sint32 lr;
smull tmp_h tmp_l lr r3;
uadds carry r12 tmp_l r12;
sadc r7 tmp_h r7 carry;
assert eqmod r12 0 (2**32) && true;
assume eq r12 0 && true;
(* vmov	r1, s15                                    #! PC = 0x8005be0 *)
mov r1 s15;
(* smull	r12, r8, r8, r1                           #! PC = 0x8005be4 *)
smull r8 r12 r8 r1;
(* mul.w	lr, r12, r2                               #! PC = 0x8005be8 *)
cast r12_s@sint32 r12;
mull discard lr r12_s r2;
(* smlal	r12, r8, lr, r3                           #! PC = 0x8005bec *)
cast lr@sint32 lr;
smull tmp_h tmp_l lr r3;
uadds carry r12 tmp_l r12;
sadc r8 tmp_h r8 carry;
assert eqmod r12 0 (2**32) && true;
assume eq r12 0 && true;
(* vmov	r1, s16                                    #! PC = 0x8005bf0 *)
mov r1 s16;
(* smull	r12, r9, r9, r1                           #! PC = 0x8005bf4 *)
smull r9 r12 r9 r1;
(* mul.w	lr, r12, r2                               #! PC = 0x8005bf8 *)
cast r12_s@sint32 r12;
mull discard lr r12_s r2;
(* smlal	r12, r9, lr, r3                           #! PC = 0x8005bfc *)
cast lr@sint32 lr;
smull tmp_h tmp_l lr r3;
uadds carry r12 tmp_l r12;
sadc r9 tmp_h r9 carry;
assert eqmod r12 0 (2**32) && true;
assume eq r12 0 && true;
(* vmov	r1, s17                                    #! PC = 0x8005c00 *)
mov r1 s17;
(* smull	r12, r10, r10, r1                         #! PC = 0x8005c04 *)
smull r10 r12 r10 r1;
(* mul.w	lr, r12, r2                               #! PC = 0x8005c08 *)
cast r12_s@sint32 r12;
mull discard lr r12_s r2;
(* smlal	r12, r10, lr, r3                          #! PC = 0x8005c0c *)
cast lr@sint32 lr;
smull tmp_h tmp_l lr r3;
uadds carry r12 tmp_l r12;
sadc r10 tmp_h r10 carry;
assert eqmod r12 0 (2**32) && true;
assume eq r12 0 && true;
(* vmov	r1, s18                                    #! PC = 0x8005c10 *)
mov r1 s18;
(* smull	r12, r11, r11, r1                         #! PC = 0x8005c14 *)
smull r11 r12 r11 r1;
(* mul.w	lr, r12, r2                               #! PC = 0x8005c18 *)
cast r12_s@sint32 r12;
mull discard lr r12_s r2;
(* smlal	r12, r11, lr, r3                          #! PC = 0x8005c1c *)
cast lr@sint32 lr;
smull tmp_h tmp_l lr r3;
uadds carry r12 tmp_l r12;
sadc r11 tmp_h r11 carry;
assert eqmod r12 0 (2**32) && true;
assume eq r12 0 && true;
(* mov.w	r1, r3, lsr #1                            #! PC = 0x8005c20 *)
split r1 discard r3 1;
(* cmp	r4, r1                                      #! PC = 0x8005c24 *)
sub cmp r4 r1;
split sign discard cmp 31;
cast sign@bit sign;
cmov tmp sign 0@sint32 r3;
sub r4 r4 tmp;
(* cmn	r4, r1                                      #! PC = 0x8005c2a *)
add cmn r4 r1;
split sign discard cmn 31;
cast sign@bit sign;
cmov tmp sign r3 0@sint32;
add r4 r4 tmp;
(* cmp	r5, r1                                      #! PC = 0x8005c30 *)
sub cmp r5 r1;
split sign discard cmp 31;
cast sign@bit sign;
cmov tmp sign 0@sint32 r3;
sub r5 r5 tmp;
(* cmn	r5, r1                                      #! PC = 0x8005c36 *)
add cmn r5 r1;
split sign discard cmn 31;
cast sign@bit sign;
cmov tmp sign r3 0@sint32;
add r5 r5 tmp;
(* cmp	r6, r1                                      #! PC = 0x8005c3c *)
sub cmp r6 r1;
split sign discard cmp 31;
cast sign@bit sign;
cmov tmp sign 0@sint32 r3;
sub r6 r6 tmp;
(* cmn	r6, r1                                      #! PC = 0x8005c42 *)
add cmn r6 r1;
split sign discard cmn 31;
cast sign@bit sign;
cmov tmp sign r3 0@sint32;
add r6 r6 tmp;
(* cmp	r7, r1                                      #! PC = 0x8005c48 *)
sub cmp r7 r1;
split sign discard cmp 31;
cast sign@bit sign;
cmov tmp sign 0@sint32 r3;
sub r7 r7 tmp;
(* cmn	r7, r1                                      #! PC = 0x8005c4e *)
add cmn r7 r1;
split sign discard cmn 31;
cast sign@bit sign;
cmov tmp sign r3 0@sint32;
add r7 r7 tmp;
(* cmp	r8, r1                                      #! PC = 0x8005c54 *)
sub cmp r8 r1;
split sign discard cmp 31;
cast sign@bit sign;
cmov tmp sign 0@sint32 r3;
sub r8 r8 tmp;
(* cmn.w	r8, r1                                    #! PC = 0x8005c5c *)
add cmn r8 r1;
split sign discard cmn 31;
cast sign@bit sign;
cmov tmp sign r3 0@sint32;
add r8 r8 tmp;
(* cmp	r9, r1                                      #! PC = 0x8005c64 *)
sub cmp r9 r1;
split sign discard cmp 31;
cast sign@bit sign;
cmov tmp sign 0@sint32 r3;
sub r9 r9 tmp;
(* cmn.w	r9, r1                                    #! PC = 0x8005c6c *)
add cmn r9 r1;
split sign discard cmn 31;
cast sign@bit sign;
cmov tmp sign r3 0@sint32;
add r9 r9 tmp;
(* cmp	r10, r1                                     #! PC = 0x8005c74 *)
sub cmp r10 r1;
split sign discard cmp 31;
cast sign@bit sign;
cmov tmp sign 0@sint32 r3;
sub r10 r10 tmp;
(* cmn.w	r10, r1                                   #! PC = 0x8005c7c *)
add cmn r10 r1;
split sign discard cmn 31;
cast sign@bit sign;
cmov tmp sign r3 0@sint32;
add r10 r10 tmp;
(* cmp	r11, r1                                     #! PC = 0x8005c84 *)
sub cmp r11 r1;
split sign discard cmp 31;
cast sign@bit sign;
cmov tmp sign 0@sint32 r3;
sub r11 r11 tmp;
(* cmn.w	r11, r1                                   #! PC = 0x8005c8c *)
add cmn r11 r1;
split sign discard cmn 31;
cast sign@bit sign;
cmov tmp sign r3 0@sint32;
add r11 r11 tmp;
(* vmov	lr, s0                                     #! PC = 0x8005c94 *)
mov lr s0;
(* strh.w	r8, [lr, #256]	; 0x100                   #! EA = L0x2001997a; PC = 0x8005c98 *)
ghost L0x2001997a_f@sint32 : L0x2001997a_f = r8 && L0x2001997a_f = r8;
split discard L0x2001997a_u r8 16;
cast L0x2001997a@sint16 L0x2001997a_u;
(* strh.w	r9, [lr, #320]	; 0x140                   #! EA = L0x200199ba; PC = 0x8005c9c *)
ghost L0x200199ba_f@sint32 : L0x200199ba_f = r9 && L0x200199ba_f = r9;
split discard L0x200199ba_u r9 16;
cast L0x200199ba@sint16 L0x200199ba_u;
(* strh.w	r10, [lr, #384]	; 0x180                  #! EA = L0x200199fa; PC = 0x8005ca0 *)
ghost L0x200199fa_f@sint32 : L0x200199fa_f = r10 && L0x200199fa_f = r10;
split discard L0x200199fa_u r10 16;
cast L0x200199fa@sint16 L0x200199fa_u;
(* strh.w	r11, [lr, #448]	; 0x1c0                  #! EA = L0x20019a3a; PC = 0x8005ca4 *)
ghost L0x20019a3a_f@sint32 : L0x20019a3a_f = r11 && L0x20019a3a_f = r11;
split discard L0x20019a3a_u r11 16;
cast L0x20019a3a@sint16 L0x20019a3a_u;
(* strh.w	r5, [lr, #64]	; 0x40                     #! EA = L0x200198ba; PC = 0x8005ca8 *)
ghost L0x200198ba_f@sint32 : L0x200198ba_f = r5 && L0x200198ba_f = r5;
split discard L0x200198ba_u r5 16;
cast L0x200198ba@sint16 L0x200198ba_u;
(* strh.w	r6, [lr, #128]	; 0x80                    #! EA = L0x200198fa; PC = 0x8005cac *)
ghost L0x200198fa_f@sint32 : L0x200198fa_f = r6 && L0x200198fa_f = r6;
split discard L0x200198fa_u r6 16;
cast L0x200198fa@sint16 L0x200198fa_u;
(* strh.w	r7, [lr, #192]	; 0xc0                    #! EA = L0x2001993a; PC = 0x8005cb0 *)
ghost L0x2001993a_f@sint32 : L0x2001993a_f = r7 && L0x2001993a_f = r7;
split discard L0x2001993a_u r7 16;
cast L0x2001993a@sint16 L0x2001993a_u;
(* strh.w	r4, [lr], #2                             #! EA = L0x2001987a; PC = 0x8005cb4 *)
ghost L0x2001987a_f@sint32 : L0x2001987a_f = r4 && L0x2001987a_f = r4;
split discard L0x2001987a_u r4 16;
cast L0x2001987a@sint16 L0x2001987a_u;
(* vmov	s0, lr                                     #! PC = 0x8005cb8 *)
mov s0 lr;
(* vmov	lr, s3                                     #! PC = 0x8005cbc *)
mov lr s3;
(* ldr.w	r8, [r0, #512]	; 0x200                    #! EA = L0x2001a4b0; Value = 0x02468bd7; PC = 0x800585c *)
mov r8 L0x2001a4b0;
(* ldr.w	r9, [r0, #640]	; 0x280                    #! EA = L0x2001a530; Value = 0x01eb4cd3; PC = 0x8005860 *)
mov r9 L0x2001a530;
(* ldr.w	r10, [r0, #768]	; 0x300                   #! EA = L0x2001a5b0; Value = 0x0241c3b2; PC = 0x8005864 *)
mov r10 L0x2001a5b0;
(* ldr.w	r11, [r0, #896]	; 0x380                   #! EA = L0x2001a630; Value = 0x0012a02c; PC = 0x8005868 *)
mov r11 L0x2001a630;
(* ldr.w	r5, [r0, #128]	; 0x80                     #! EA = L0x2001a330; Value = 0xff132f54; PC = 0x800586c *)
mov r5 L0x2001a330;
(* ldr.w	r6, [r0, #256]	; 0x100                    #! EA = L0x2001a3b0; Value = 0x0034fe7d; PC = 0x8005870 *)
mov r6 L0x2001a3b0;
(* ldr.w	r7, [r0, #384]	; 0x180                    #! EA = L0x2001a430; Value = 0x01c46e99; PC = 0x8005874 *)
mov r7 L0x2001a430;
(* ldr.w	r4, [r0], #4                              #! EA = L0x2001a2b0; Value = 0x00027c81; PC = 0x8005878 *)
mov r4 L0x2001a2b0;
(* vmov	r1, s4                                     #! PC = 0x800587c *)
mov r1 s4;
(* smull	r12, r5, r5, r1                           #! PC = 0x8005880 *)
smull r5 r12 r5 r1;
(* mul.w	lr, r12, r2                               #! PC = 0x8005884 *)
cast r12_s@sint32 r12;
mull discard lr r12_s r2;
(* smlal	r12, r5, lr, r3                           #! PC = 0x8005888 *)
cast lr@sint32 lr;
smull tmp_h tmp_l lr r3;
uadds carry r12 tmp_l r12;
sadc r5 tmp_h r5 carry;
assert eqmod r12 0 (2**32) && true;
assume eq r12 0 && true;
(* smull	r12, r7, r7, r1                           #! PC = 0x800588c *)
smull r7 r12 r7 r1;
(* mul.w	lr, r12, r2                               #! PC = 0x8005890 *)
cast r12_s@sint32 r12;
mull discard lr r12_s r2;
(* smlal	r12, r7, lr, r3                           #! PC = 0x8005894 *)
cast lr@sint32 lr;
smull tmp_h tmp_l lr r3;
uadds carry r12 tmp_l r12;
sadc r7 tmp_h r7 carry;
assert eqmod r12 0 (2**32) && true;
assume eq r12 0 && true;
(* smull	r12, r9, r9, r1                           #! PC = 0x8005898 *)
smull r9 r12 r9 r1;
(* mul.w	lr, r12, r2                               #! PC = 0x800589c *)
cast r12_s@sint32 r12;
mull discard lr r12_s r2;
(* smlal	r12, r9, lr, r3                           #! PC = 0x80058a0 *)
cast lr@sint32 lr;
smull tmp_h tmp_l lr r3;
uadds carry r12 tmp_l r12;
sadc r9 tmp_h r9 carry;
assert eqmod r12 0 (2**32) && true;
assume eq r12 0 && true;
(* smull	r12, r11, r11, r1                         #! PC = 0x80058a4 *)
smull r11 r12 r11 r1;
(* mul.w	lr, r12, r2                               #! PC = 0x80058a8 *)
cast r12_s@sint32 r12;
mull discard lr r12_s r2;
(* smlal	r12, r11, lr, r3                          #! PC = 0x80058ac *)
cast lr@sint32 lr;
smull tmp_h tmp_l lr r3;
uadds carry r12 tmp_l r12;
sadc r11 tmp_h r11 carry;
assert eqmod r12 0 (2**32) && true;
assume eq r12 0 && true;
(* add	r4, r5                                      #! PC = 0x80058b0 *)
add r4 r4 r5;
(* add	r6, r7                                      #! PC = 0x80058b2 *)
add r6 r6 r7;
(* add	r8, r9                                      #! PC = 0x80058b4 *)
add r8 r8 r9;
(* add	r10, r11                                    #! PC = 0x80058b6 *)
add r10 r10 r11;
(* sub.w	r5, r4, r5, lsl #1                        #! PC = 0x80058b8 *)
shl tmp r5 1;
sub r5 r4 tmp;
(* sub.w	r7, r6, r7, lsl #1                        #! PC = 0x80058bc *)
shl tmp r7 1;
sub r7 r6 tmp;
(* sub.w	r9, r8, r9, lsl #1                        #! PC = 0x80058c0 *)
shl tmp r9 1;
sub r9 r8 tmp;
(* sub.w	r11, r10, r11, lsl #1                     #! PC = 0x80058c4 *)
shl tmp r11 1;
sub r11 r10 tmp;
(* vmov	r1, s5                                     #! PC = 0x80058c8 *)
mov r1 s5;
(* smull	r12, r6, r6, r1                           #! PC = 0x80058cc *)
smull r6 r12 r6 r1;
(* mul.w	lr, r12, r2                               #! PC = 0x80058d0 *)
cast r12_s@sint32 r12;
mull discard lr r12_s r2;
(* smlal	r12, r6, lr, r3                           #! PC = 0x80058d4 *)
cast lr@sint32 lr;
smull tmp_h tmp_l lr r3;
uadds carry r12 tmp_l r12;
sadc r6 tmp_h r6 carry;
assert eqmod r12 0 (2**32) && true;
assume eq r12 0 && true;
(* smull	r12, r10, r10, r1                         #! PC = 0x80058d8 *)
smull r10 r12 r10 r1;
(* mul.w	lr, r12, r2                               #! PC = 0x80058dc *)
cast r12_s@sint32 r12;
mull discard lr r12_s r2;
(* smlal	r12, r10, lr, r3                          #! PC = 0x80058e0 *)
cast lr@sint32 lr;
smull tmp_h tmp_l lr r3;
uadds carry r12 tmp_l r12;
sadc r10 tmp_h r10 carry;
assert eqmod r12 0 (2**32) && true;
assume eq r12 0 && true;
(* vmov	r1, s6                                     #! PC = 0x80058e4 *)
mov r1 s6;
(* smull	r12, r7, r7, r1                           #! PC = 0x80058e8 *)
smull r7 r12 r7 r1;
(* mul.w	lr, r12, r2                               #! PC = 0x80058ec *)
cast r12_s@sint32 r12;
mull discard lr r12_s r2;
(* smlal	r12, r7, lr, r3                           #! PC = 0x80058f0 *)
cast lr@sint32 lr;
smull tmp_h tmp_l lr r3;
uadds carry r12 tmp_l r12;
sadc r7 tmp_h r7 carry;
assert eqmod r12 0 (2**32) && true;
assume eq r12 0 && true;
(* smull	r12, r11, r11, r1                         #! PC = 0x80058f4 *)
smull r11 r12 r11 r1;
(* mul.w	lr, r12, r2                               #! PC = 0x80058f8 *)
cast r12_s@sint32 r12;
mull discard lr r12_s r2;
(* smlal	r12, r11, lr, r3                          #! PC = 0x80058fc *)
cast lr@sint32 lr;
smull tmp_h tmp_l lr r3;
uadds carry r12 tmp_l r12;
sadc r11 tmp_h r11 carry;
assert eqmod r12 0 (2**32) && true;
assume eq r12 0 && true;
(* add	r4, r6                                      #! PC = 0x8005900 *)
add r4 r4 r6;
(* add	r5, r7                                      #! PC = 0x8005902 *)
add r5 r5 r7;
(* add	r8, r10                                     #! PC = 0x8005904 *)
add r8 r8 r10;
(* add	r9, r11                                     #! PC = 0x8005906 *)
add r9 r9 r11;
(* sub.w	r6, r4, r6, lsl #1                        #! PC = 0x8005908 *)
shl tmp r6 1;
sub r6 r4 tmp;
(* sub.w	r7, r5, r7, lsl #1                        #! PC = 0x800590c *)
shl tmp r7 1;
sub r7 r5 tmp;
(* sub.w	r10, r8, r10, lsl #1                      #! PC = 0x8005910 *)
shl tmp r10 1;
sub r10 r8 tmp;
(* sub.w	r11, r9, r11, lsl #1                      #! PC = 0x8005914 *)
shl tmp r11 1;
sub r11 r9 tmp;
(* vmov	r1, s7                                     #! PC = 0x8005918 *)
mov r1 s7;
(* smull	r12, r8, r8, r1                           #! PC = 0x800591c *)
smull r8 r12 r8 r1;
(* mul.w	lr, r12, r2                               #! PC = 0x8005920 *)
cast r12_s@sint32 r12;
mull discard lr r12_s r2;
(* smlal	r12, r8, lr, r3                           #! PC = 0x8005924 *)
cast lr@sint32 lr;
smull tmp_h tmp_l lr r3;
uadds carry r12 tmp_l r12;
sadc r8 tmp_h r8 carry;
assert eqmod r12 0 (2**32) && true;
assume eq r12 0 && true;
(* vmov	r1, s8                                     #! PC = 0x8005928 *)
mov r1 s8;
(* smull	r12, r9, r9, r1                           #! PC = 0x800592c *)
smull r9 r12 r9 r1;
(* mul.w	lr, r12, r2                               #! PC = 0x8005930 *)
cast r12_s@sint32 r12;
mull discard lr r12_s r2;
(* smlal	r12, r9, lr, r3                           #! PC = 0x8005934 *)
cast lr@sint32 lr;
smull tmp_h tmp_l lr r3;
uadds carry r12 tmp_l r12;
sadc r9 tmp_h r9 carry;
assert eqmod r12 0 (2**32) && true;
assume eq r12 0 && true;
(* vmov	r1, s9                                     #! PC = 0x8005938 *)
mov r1 s9;
(* smull	r12, r10, r10, r1                         #! PC = 0x800593c *)
smull r10 r12 r10 r1;
(* mul.w	lr, r12, r2                               #! PC = 0x8005940 *)
cast r12_s@sint32 r12;
mull discard lr r12_s r2;
(* smlal	r12, r10, lr, r3                          #! PC = 0x8005944 *)
cast lr@sint32 lr;
smull tmp_h tmp_l lr r3;
uadds carry r12 tmp_l r12;
sadc r10 tmp_h r10 carry;
assert eqmod r12 0 (2**32) && true;
assume eq r12 0 && true;
(* vmov	r1, s10                                    #! PC = 0x8005948 *)
mov r1 s10;
(* smull	r12, r11, r11, r1                         #! PC = 0x800594c *)
smull r11 r12 r11 r1;
(* mul.w	lr, r12, r2                               #! PC = 0x8005950 *)
cast r12_s@sint32 r12;
mull discard lr r12_s r2;
(* smlal	r12, r11, lr, r3                          #! PC = 0x8005954 *)
cast lr@sint32 lr;
smull tmp_h tmp_l lr r3;
uadds carry r12 tmp_l r12;
sadc r11 tmp_h r11 carry;
assert eqmod r12 0 (2**32) && true;
assume eq r12 0 && true;
(* add	r4, r8                                      #! PC = 0x8005958 *)
add r4 r4 r8;
(* add	r5, r9                                      #! PC = 0x800595a *)
add r5 r5 r9;
(* add	r6, r10                                     #! PC = 0x800595c *)
add r6 r6 r10;
(* add	r7, r11                                     #! PC = 0x800595e *)
add r7 r7 r11;
(* sub.w	r8, r4, r8, lsl #1                        #! PC = 0x8005960 *)
shl tmp r8 1;
sub r8 r4 tmp;
(* sub.w	r9, r5, r9, lsl #1                        #! PC = 0x8005964 *)
shl tmp r9 1;
sub r9 r5 tmp;
(* sub.w	r10, r6, r10, lsl #1                      #! PC = 0x8005968 *)
shl tmp r10 1;
sub r10 r6 tmp;
(* sub.w	r11, r7, r11, lsl #1                      #! PC = 0x800596c *)
shl tmp r11 1;
sub r11 r7 tmp;
(* vmov	r1, s11                                    #! PC = 0x8005970 *)
mov r1 s11;
(* smull	r12, r4, r4, r1                           #! PC = 0x8005974 *)
smull r4 r12 r4 r1;
(* mul.w	lr, r12, r2                               #! PC = 0x8005978 *)
cast r12_s@sint32 r12;
mull discard lr r12_s r2;
(* smlal	r12, r4, lr, r3                           #! PC = 0x800597c *)
cast lr@sint32 lr;
smull tmp_h tmp_l lr r3;
uadds carry r12 tmp_l r12;
sadc r4 tmp_h r4 carry;
assert eqmod r12 0 (2**32) && true;
assume eq r12 0 && true;
(* vmov	r1, s12                                    #! PC = 0x8005980 *)
mov r1 s12;
(* smull	r12, r5, r5, r1                           #! PC = 0x8005984 *)
smull r5 r12 r5 r1;
(* mul.w	lr, r12, r2                               #! PC = 0x8005988 *)
cast r12_s@sint32 r12;
mull discard lr r12_s r2;
(* smlal	r12, r5, lr, r3                           #! PC = 0x800598c *)
cast lr@sint32 lr;
smull tmp_h tmp_l lr r3;
uadds carry r12 tmp_l r12;
sadc r5 tmp_h r5 carry;
assert eqmod r12 0 (2**32) && true;
assume eq r12 0 && true;
(* vmov	r1, s13                                    #! PC = 0x8005990 *)
mov r1 s13;
(* smull	r12, r6, r6, r1                           #! PC = 0x8005994 *)
smull r6 r12 r6 r1;
(* mul.w	lr, r12, r2                               #! PC = 0x8005998 *)
cast r12_s@sint32 r12;
mull discard lr r12_s r2;
(* smlal	r12, r6, lr, r3                           #! PC = 0x800599c *)
cast lr@sint32 lr;
smull tmp_h tmp_l lr r3;
uadds carry r12 tmp_l r12;
sadc r6 tmp_h r6 carry;
assert eqmod r12 0 (2**32) && true;
assume eq r12 0 && true;
(* vmov	r1, s14                                    #! PC = 0x80059a0 *)
mov r1 s14;
(* smull	r12, r7, r7, r1                           #! PC = 0x80059a4 *)
smull r7 r12 r7 r1;
(* mul.w	lr, r12, r2                               #! PC = 0x80059a8 *)
cast r12_s@sint32 r12;
mull discard lr r12_s r2;
(* smlal	r12, r7, lr, r3                           #! PC = 0x80059ac *)
cast lr@sint32 lr;
smull tmp_h tmp_l lr r3;
uadds carry r12 tmp_l r12;
sadc r7 tmp_h r7 carry;
assert eqmod r12 0 (2**32) && true;
assume eq r12 0 && true;
(* vmov	r1, s15                                    #! PC = 0x80059b0 *)
mov r1 s15;
(* smull	r12, r8, r8, r1                           #! PC = 0x80059b4 *)
smull r8 r12 r8 r1;
(* mul.w	lr, r12, r2                               #! PC = 0x80059b8 *)
cast r12_s@sint32 r12;
mull discard lr r12_s r2;
(* smlal	r12, r8, lr, r3                           #! PC = 0x80059bc *)
cast lr@sint32 lr;
smull tmp_h tmp_l lr r3;
uadds carry r12 tmp_l r12;
sadc r8 tmp_h r8 carry;
assert eqmod r12 0 (2**32) && true;
assume eq r12 0 && true;
(* vmov	r1, s16                                    #! PC = 0x80059c0 *)
mov r1 s16;
(* smull	r12, r9, r9, r1                           #! PC = 0x80059c4 *)
smull r9 r12 r9 r1;
(* mul.w	lr, r12, r2                               #! PC = 0x80059c8 *)
cast r12_s@sint32 r12;
mull discard lr r12_s r2;
(* smlal	r12, r9, lr, r3                           #! PC = 0x80059cc *)
cast lr@sint32 lr;
smull tmp_h tmp_l lr r3;
uadds carry r12 tmp_l r12;
sadc r9 tmp_h r9 carry;
assert eqmod r12 0 (2**32) && true;
assume eq r12 0 && true;
(* vmov	r1, s17                                    #! PC = 0x80059d0 *)
mov r1 s17;
(* smull	r12, r10, r10, r1                         #! PC = 0x80059d4 *)
smull r10 r12 r10 r1;
(* mul.w	lr, r12, r2                               #! PC = 0x80059d8 *)
cast r12_s@sint32 r12;
mull discard lr r12_s r2;
(* smlal	r12, r10, lr, r3                          #! PC = 0x80059dc *)
cast lr@sint32 lr;
smull tmp_h tmp_l lr r3;
uadds carry r12 tmp_l r12;
sadc r10 tmp_h r10 carry;
assert eqmod r12 0 (2**32) && true;
assume eq r12 0 && true;
(* vmov	r1, s18                                    #! PC = 0x80059e0 *)
mov r1 s18;
(* smull	r12, r11, r11, r1                         #! PC = 0x80059e4 *)
smull r11 r12 r11 r1;
(* mul.w	lr, r12, r2                               #! PC = 0x80059e8 *)
cast r12_s@sint32 r12;
mull discard lr r12_s r2;
(* smlal	r12, r11, lr, r3                          #! PC = 0x80059ec *)
cast lr@sint32 lr;
smull tmp_h tmp_l lr r3;
uadds carry r12 tmp_l r12;
sadc r11 tmp_h r11 carry;
assert eqmod r12 0 (2**32) && true;
assume eq r12 0 && true;
(* mov.w	r1, r3, lsr #1                            #! PC = 0x80059f0 *)
split r1 discard r3 1;
(* cmp	r4, r1                                      #! PC = 0x80059f4 *)
sub cmp r4 r1;
split sign discard cmp 31;
cast sign@bit sign;
cmov tmp sign 0@sint32 r3;
sub r4 r4 tmp;
(* cmn	r4, r1                                      #! PC = 0x80059fa *)
add cmn r4 r1;
split sign discard cmn 31;
cast sign@bit sign;
cmov tmp sign r3 0@sint32;
add r4 r4 tmp;
(* cmp	r5, r1                                      #! PC = 0x8005a00 *)
sub cmp r5 r1;
split sign discard cmp 31;
cast sign@bit sign;
cmov tmp sign 0@sint32 r3;
sub r5 r5 tmp;
(* cmn	r5, r1                                      #! PC = 0x8005a06 *)
add cmn r5 r1;
split sign discard cmn 31;
cast sign@bit sign;
cmov tmp sign r3 0@sint32;
add r5 r5 tmp;
(* cmp	r6, r1                                      #! PC = 0x8005a0c *)
sub cmp r6 r1;
split sign discard cmp 31;
cast sign@bit sign;
cmov tmp sign 0@sint32 r3;
sub r6 r6 tmp;
(* cmn	r6, r1                                      #! PC = 0x8005a12 *)
add cmn r6 r1;
split sign discard cmn 31;
cast sign@bit sign;
cmov tmp sign r3 0@sint32;
add r6 r6 tmp;
(* cmp	r7, r1                                      #! PC = 0x8005a18 *)
sub cmp r7 r1;
split sign discard cmp 31;
cast sign@bit sign;
cmov tmp sign 0@sint32 r3;
sub r7 r7 tmp;
(* cmn	r7, r1                                      #! PC = 0x8005a1e *)
add cmn r7 r1;
split sign discard cmn 31;
cast sign@bit sign;
cmov tmp sign r3 0@sint32;
add r7 r7 tmp;
(* cmp	r8, r1                                      #! PC = 0x8005a24 *)
sub cmp r8 r1;
split sign discard cmp 31;
cast sign@bit sign;
cmov tmp sign 0@sint32 r3;
sub r8 r8 tmp;
(* cmn.w	r8, r1                                    #! PC = 0x8005a2c *)
add cmn r8 r1;
split sign discard cmn 31;
cast sign@bit sign;
cmov tmp sign r3 0@sint32;
add r8 r8 tmp;
(* cmp	r9, r1                                      #! PC = 0x8005a34 *)
sub cmp r9 r1;
split sign discard cmp 31;
cast sign@bit sign;
cmov tmp sign 0@sint32 r3;
sub r9 r9 tmp;
(* cmn.w	r9, r1                                    #! PC = 0x8005a3c *)
add cmn r9 r1;
split sign discard cmn 31;
cast sign@bit sign;
cmov tmp sign r3 0@sint32;
add r9 r9 tmp;
(* cmp	r10, r1                                     #! PC = 0x8005a44 *)
sub cmp r10 r1;
split sign discard cmp 31;
cast sign@bit sign;
cmov tmp sign 0@sint32 r3;
sub r10 r10 tmp;
(* cmn.w	r10, r1                                   #! PC = 0x8005a4c *)
add cmn r10 r1;
split sign discard cmn 31;
cast sign@bit sign;
cmov tmp sign r3 0@sint32;
add r10 r10 tmp;
(* cmp	r11, r1                                     #! PC = 0x8005a54 *)
sub cmp r11 r1;
split sign discard cmp 31;
cast sign@bit sign;
cmov tmp sign 0@sint32 r3;
sub r11 r11 tmp;
(* cmn.w	r11, r1                                   #! PC = 0x8005a5c *)
add cmn r11 r1;
split sign discard cmn 31;
cast sign@bit sign;
cmov tmp sign r3 0@sint32;
add r11 r11 tmp;
(* vmov	lr, s0                                     #! PC = 0x8005a64 *)
mov lr s0;
(* strh.w	r8, [lr, #256]	; 0x100                   #! EA = L0x2001997c; PC = 0x8005a68 *)
ghost L0x2001997c_f@sint32 : L0x2001997c_f = r8 && L0x2001997c_f = r8;
split discard L0x2001997c_u r8 16;
cast L0x2001997c@sint16 L0x2001997c_u;
(* strh.w	r9, [lr, #320]	; 0x140                   #! EA = L0x200199bc; PC = 0x8005a6c *)
ghost L0x200199bc_f@sint32 : L0x200199bc_f = r9 && L0x200199bc_f = r9;
split discard L0x200199bc_u r9 16;
cast L0x200199bc@sint16 L0x200199bc_u;
(* strh.w	r10, [lr, #384]	; 0x180                  #! EA = L0x200199fc; PC = 0x8005a70 *)
ghost L0x200199fc_f@sint32 : L0x200199fc_f = r10 && L0x200199fc_f = r10;
split discard L0x200199fc_u r10 16;
cast L0x200199fc@sint16 L0x200199fc_u;
(* strh.w	r11, [lr, #448]	; 0x1c0                  #! EA = L0x20019a3c; PC = 0x8005a74 *)
ghost L0x20019a3c_f@sint32 : L0x20019a3c_f = r11 && L0x20019a3c_f = r11;
split discard L0x20019a3c_u r11 16;
cast L0x20019a3c@sint16 L0x20019a3c_u;
(* strh.w	r5, [lr, #64]	; 0x40                     #! EA = L0x200198bc; PC = 0x8005a78 *)
ghost L0x200198bc_f@sint32 : L0x200198bc_f = r5 && L0x200198bc_f = r5;
split discard L0x200198bc_u r5 16;
cast L0x200198bc@sint16 L0x200198bc_u;
(* strh.w	r6, [lr, #128]	; 0x80                    #! EA = L0x200198fc; PC = 0x8005a7c *)
ghost L0x200198fc_f@sint32 : L0x200198fc_f = r6 && L0x200198fc_f = r6;
split discard L0x200198fc_u r6 16;
cast L0x200198fc@sint16 L0x200198fc_u;
(* strh.w	r7, [lr, #192]	; 0xc0                    #! EA = L0x2001993c; PC = 0x8005a80 *)
ghost L0x2001993c_f@sint32 : L0x2001993c_f = r7 && L0x2001993c_f = r7;
split discard L0x2001993c_u r7 16;
cast L0x2001993c@sint16 L0x2001993c_u;
(* strh.w	r4, [lr], #2                             #! EA = L0x2001987c; PC = 0x8005a84 *)
ghost L0x2001987c_f@sint32 : L0x2001987c_f = r4 && L0x2001987c_f = r4;
split discard L0x2001987c_u r4 16;
cast L0x2001987c@sint16 L0x2001987c_u;
(* vmov	s0, lr                                     #! PC = 0x8005a88 *)
mov s0 lr;
(* ldr.w	r8, [r0, #512]	; 0x200                    #! EA = L0x2001a4b4; Value = 0xff1069a1; PC = 0x8005a8c *)
mov r8 L0x2001a4b4;
(* ldr.w	r9, [r0, #640]	; 0x280                    #! EA = L0x2001a534; Value = 0xff0e816f; PC = 0x8005a90 *)
mov r9 L0x2001a534;
(* ldr.w	r10, [r0, #768]	; 0x300                   #! EA = L0x2001a5b4; Value = 0x011fa0f3; PC = 0x8005a94 *)
mov r10 L0x2001a5b4;
(* ldr.w	r11, [r0, #896]	; 0x380                   #! EA = L0x2001a634; Value = 0x01784e83; PC = 0x8005a98 *)
mov r11 L0x2001a634;
(* ldr.w	r5, [r0, #128]	; 0x80                     #! EA = L0x2001a334; Value = 0x00c7f710; PC = 0x8005a9c *)
mov r5 L0x2001a334;
(* ldr.w	r6, [r0, #256]	; 0x100                    #! EA = L0x2001a3b4; Value = 0x0003c605; PC = 0x8005aa0 *)
mov r6 L0x2001a3b4;
(* ldr.w	r7, [r0, #384]	; 0x180                    #! EA = L0x2001a434; Value = 0xfe1ad5e9; PC = 0x8005aa4 *)
mov r7 L0x2001a434;
(* ldr.w	r4, [r0], #4                              #! EA = L0x2001a2b4; Value = 0xfdca7169; PC = 0x8005aa8 *)
mov r4 L0x2001a2b4;
(* vmov	r1, s4                                     #! PC = 0x8005aac *)
mov r1 s4;
(* smull	r12, r5, r5, r1                           #! PC = 0x8005ab0 *)
smull r5 r12 r5 r1;
(* mul.w	lr, r12, r2                               #! PC = 0x8005ab4 *)
cast r12_s@sint32 r12;
mull discard lr r12_s r2;
(* smlal	r12, r5, lr, r3                           #! PC = 0x8005ab8 *)
cast lr@sint32 lr;
smull tmp_h tmp_l lr r3;
uadds carry r12 tmp_l r12;
sadc r5 tmp_h r5 carry;
assert eqmod r12 0 (2**32) && true;
assume eq r12 0 && true;
(* smull	r12, r7, r7, r1                           #! PC = 0x8005abc *)
smull r7 r12 r7 r1;
(* mul.w	lr, r12, r2                               #! PC = 0x8005ac0 *)
cast r12_s@sint32 r12;
mull discard lr r12_s r2;
(* smlal	r12, r7, lr, r3                           #! PC = 0x8005ac4 *)
cast lr@sint32 lr;
smull tmp_h tmp_l lr r3;
uadds carry r12 tmp_l r12;
sadc r7 tmp_h r7 carry;
assert eqmod r12 0 (2**32) && true;
assume eq r12 0 && true;
(* smull	r12, r9, r9, r1                           #! PC = 0x8005ac8 *)
smull r9 r12 r9 r1;
(* mul.w	lr, r12, r2                               #! PC = 0x8005acc *)
cast r12_s@sint32 r12;
mull discard lr r12_s r2;
(* smlal	r12, r9, lr, r3                           #! PC = 0x8005ad0 *)
cast lr@sint32 lr;
smull tmp_h tmp_l lr r3;
uadds carry r12 tmp_l r12;
sadc r9 tmp_h r9 carry;
assert eqmod r12 0 (2**32) && true;
assume eq r12 0 && true;
(* smull	r12, r11, r11, r1                         #! PC = 0x8005ad4 *)
smull r11 r12 r11 r1;
(* mul.w	lr, r12, r2                               #! PC = 0x8005ad8 *)
cast r12_s@sint32 r12;
mull discard lr r12_s r2;
(* smlal	r12, r11, lr, r3                          #! PC = 0x8005adc *)
cast lr@sint32 lr;
smull tmp_h tmp_l lr r3;
uadds carry r12 tmp_l r12;
sadc r11 tmp_h r11 carry;
assert eqmod r12 0 (2**32) && true;
assume eq r12 0 && true;
(* add	r4, r5                                      #! PC = 0x8005ae0 *)
add r4 r4 r5;
(* add	r6, r7                                      #! PC = 0x8005ae2 *)
add r6 r6 r7;
(* add	r8, r9                                      #! PC = 0x8005ae4 *)
add r8 r8 r9;
(* add	r10, r11                                    #! PC = 0x8005ae6 *)
add r10 r10 r11;
(* sub.w	r5, r4, r5, lsl #1                        #! PC = 0x8005ae8 *)
shl tmp r5 1;
sub r5 r4 tmp;
(* sub.w	r7, r6, r7, lsl #1                        #! PC = 0x8005aec *)
shl tmp r7 1;
sub r7 r6 tmp;
(* sub.w	r9, r8, r9, lsl #1                        #! PC = 0x8005af0 *)
shl tmp r9 1;
sub r9 r8 tmp;
(* sub.w	r11, r10, r11, lsl #1                     #! PC = 0x8005af4 *)
shl tmp r11 1;
sub r11 r10 tmp;
(* vmov	r1, s5                                     #! PC = 0x8005af8 *)
mov r1 s5;
(* smull	r12, r6, r6, r1                           #! PC = 0x8005afc *)
smull r6 r12 r6 r1;
(* mul.w	lr, r12, r2                               #! PC = 0x8005b00 *)
cast r12_s@sint32 r12;
mull discard lr r12_s r2;
(* smlal	r12, r6, lr, r3                           #! PC = 0x8005b04 *)
cast lr@sint32 lr;
smull tmp_h tmp_l lr r3;
uadds carry r12 tmp_l r12;
sadc r6 tmp_h r6 carry;
assert eqmod r12 0 (2**32) && true;
assume eq r12 0 && true;
(* smull	r12, r10, r10, r1                         #! PC = 0x8005b08 *)
smull r10 r12 r10 r1;
(* mul.w	lr, r12, r2                               #! PC = 0x8005b0c *)
cast r12_s@sint32 r12;
mull discard lr r12_s r2;
(* smlal	r12, r10, lr, r3                          #! PC = 0x8005b10 *)
cast lr@sint32 lr;
smull tmp_h tmp_l lr r3;
uadds carry r12 tmp_l r12;
sadc r10 tmp_h r10 carry;
assert eqmod r12 0 (2**32) && true;
assume eq r12 0 && true;
(* vmov	r1, s6                                     #! PC = 0x8005b14 *)
mov r1 s6;
(* smull	r12, r7, r7, r1                           #! PC = 0x8005b18 *)
smull r7 r12 r7 r1;
(* mul.w	lr, r12, r2                               #! PC = 0x8005b1c *)
cast r12_s@sint32 r12;
mull discard lr r12_s r2;
(* smlal	r12, r7, lr, r3                           #! PC = 0x8005b20 *)
cast lr@sint32 lr;
smull tmp_h tmp_l lr r3;
uadds carry r12 tmp_l r12;
sadc r7 tmp_h r7 carry;
assert eqmod r12 0 (2**32) && true;
assume eq r12 0 && true;
(* smull	r12, r11, r11, r1                         #! PC = 0x8005b24 *)
smull r11 r12 r11 r1;
(* mul.w	lr, r12, r2                               #! PC = 0x8005b28 *)
cast r12_s@sint32 r12;
mull discard lr r12_s r2;
(* smlal	r12, r11, lr, r3                          #! PC = 0x8005b2c *)
cast lr@sint32 lr;
smull tmp_h tmp_l lr r3;
uadds carry r12 tmp_l r12;
sadc r11 tmp_h r11 carry;
assert eqmod r12 0 (2**32) && true;
assume eq r12 0 && true;
(* add	r4, r6                                      #! PC = 0x8005b30 *)
add r4 r4 r6;
(* add	r5, r7                                      #! PC = 0x8005b32 *)
add r5 r5 r7;
(* add	r8, r10                                     #! PC = 0x8005b34 *)
add r8 r8 r10;
(* add	r9, r11                                     #! PC = 0x8005b36 *)
add r9 r9 r11;
(* sub.w	r6, r4, r6, lsl #1                        #! PC = 0x8005b38 *)
shl tmp r6 1;
sub r6 r4 tmp;
(* sub.w	r7, r5, r7, lsl #1                        #! PC = 0x8005b3c *)
shl tmp r7 1;
sub r7 r5 tmp;
(* sub.w	r10, r8, r10, lsl #1                      #! PC = 0x8005b40 *)
shl tmp r10 1;
sub r10 r8 tmp;
(* sub.w	r11, r9, r11, lsl #1                      #! PC = 0x8005b44 *)
shl tmp r11 1;
sub r11 r9 tmp;
(* vmov	r1, s7                                     #! PC = 0x8005b48 *)
mov r1 s7;
(* smull	r12, r8, r8, r1                           #! PC = 0x8005b4c *)
smull r8 r12 r8 r1;
(* mul.w	lr, r12, r2                               #! PC = 0x8005b50 *)
cast r12_s@sint32 r12;
mull discard lr r12_s r2;
(* smlal	r12, r8, lr, r3                           #! PC = 0x8005b54 *)
cast lr@sint32 lr;
smull tmp_h tmp_l lr r3;
uadds carry r12 tmp_l r12;
sadc r8 tmp_h r8 carry;
assert eqmod r12 0 (2**32) && true;
assume eq r12 0 && true;
(* vmov	r1, s8                                     #! PC = 0x8005b58 *)
mov r1 s8;
(* smull	r12, r9, r9, r1                           #! PC = 0x8005b5c *)
smull r9 r12 r9 r1;
(* mul.w	lr, r12, r2                               #! PC = 0x8005b60 *)
cast r12_s@sint32 r12;
mull discard lr r12_s r2;
(* smlal	r12, r9, lr, r3                           #! PC = 0x8005b64 *)
cast lr@sint32 lr;
smull tmp_h tmp_l lr r3;
uadds carry r12 tmp_l r12;
sadc r9 tmp_h r9 carry;
assert eqmod r12 0 (2**32) && true;
assume eq r12 0 && true;
(* vmov	r1, s9                                     #! PC = 0x8005b68 *)
mov r1 s9;
(* smull	r12, r10, r10, r1                         #! PC = 0x8005b6c *)
smull r10 r12 r10 r1;
(* mul.w	lr, r12, r2                               #! PC = 0x8005b70 *)
cast r12_s@sint32 r12;
mull discard lr r12_s r2;
(* smlal	r12, r10, lr, r3                          #! PC = 0x8005b74 *)
cast lr@sint32 lr;
smull tmp_h tmp_l lr r3;
uadds carry r12 tmp_l r12;
sadc r10 tmp_h r10 carry;
assert eqmod r12 0 (2**32) && true;
assume eq r12 0 && true;
(* vmov	r1, s10                                    #! PC = 0x8005b78 *)
mov r1 s10;
(* smull	r12, r11, r11, r1                         #! PC = 0x8005b7c *)
smull r11 r12 r11 r1;
(* mul.w	lr, r12, r2                               #! PC = 0x8005b80 *)
cast r12_s@sint32 r12;
mull discard lr r12_s r2;
(* smlal	r12, r11, lr, r3                          #! PC = 0x8005b84 *)
cast lr@sint32 lr;
smull tmp_h tmp_l lr r3;
uadds carry r12 tmp_l r12;
sadc r11 tmp_h r11 carry;
assert eqmod r12 0 (2**32) && true;
assume eq r12 0 && true;
(* add	r4, r8                                      #! PC = 0x8005b88 *)
add r4 r4 r8;
(* add	r5, r9                                      #! PC = 0x8005b8a *)
add r5 r5 r9;
(* add	r6, r10                                     #! PC = 0x8005b8c *)
add r6 r6 r10;
(* add	r7, r11                                     #! PC = 0x8005b8e *)
add r7 r7 r11;
(* sub.w	r8, r4, r8, lsl #1                        #! PC = 0x8005b90 *)
shl tmp r8 1;
sub r8 r4 tmp;
(* sub.w	r9, r5, r9, lsl #1                        #! PC = 0x8005b94 *)
shl tmp r9 1;
sub r9 r5 tmp;
(* sub.w	r10, r6, r10, lsl #1                      #! PC = 0x8005b98 *)
shl tmp r10 1;
sub r10 r6 tmp;
(* sub.w	r11, r7, r11, lsl #1                      #! PC = 0x8005b9c *)
shl tmp r11 1;
sub r11 r7 tmp;
(* vmov	r1, s11                                    #! PC = 0x8005ba0 *)
mov r1 s11;
(* smull	r12, r4, r4, r1                           #! PC = 0x8005ba4 *)
smull r4 r12 r4 r1;
(* mul.w	lr, r12, r2                               #! PC = 0x8005ba8 *)
cast r12_s@sint32 r12;
mull discard lr r12_s r2;
(* smlal	r12, r4, lr, r3                           #! PC = 0x8005bac *)
cast lr@sint32 lr;
smull tmp_h tmp_l lr r3;
uadds carry r12 tmp_l r12;
sadc r4 tmp_h r4 carry;
assert eqmod r12 0 (2**32) && true;
assume eq r12 0 && true;
(* vmov	r1, s12                                    #! PC = 0x8005bb0 *)
mov r1 s12;
(* smull	r12, r5, r5, r1                           #! PC = 0x8005bb4 *)
smull r5 r12 r5 r1;
(* mul.w	lr, r12, r2                               #! PC = 0x8005bb8 *)
cast r12_s@sint32 r12;
mull discard lr r12_s r2;
(* smlal	r12, r5, lr, r3                           #! PC = 0x8005bbc *)
cast lr@sint32 lr;
smull tmp_h tmp_l lr r3;
uadds carry r12 tmp_l r12;
sadc r5 tmp_h r5 carry;
assert eqmod r12 0 (2**32) && true;
assume eq r12 0 && true;
(* vmov	r1, s13                                    #! PC = 0x8005bc0 *)
mov r1 s13;
(* smull	r12, r6, r6, r1                           #! PC = 0x8005bc4 *)
smull r6 r12 r6 r1;
(* mul.w	lr, r12, r2                               #! PC = 0x8005bc8 *)
cast r12_s@sint32 r12;
mull discard lr r12_s r2;
(* smlal	r12, r6, lr, r3                           #! PC = 0x8005bcc *)
cast lr@sint32 lr;
smull tmp_h tmp_l lr r3;
uadds carry r12 tmp_l r12;
sadc r6 tmp_h r6 carry;
assert eqmod r12 0 (2**32) && true;
assume eq r12 0 && true;
(* vmov	r1, s14                                    #! PC = 0x8005bd0 *)
mov r1 s14;
(* smull	r12, r7, r7, r1                           #! PC = 0x8005bd4 *)
smull r7 r12 r7 r1;
(* mul.w	lr, r12, r2                               #! PC = 0x8005bd8 *)
cast r12_s@sint32 r12;
mull discard lr r12_s r2;
(* smlal	r12, r7, lr, r3                           #! PC = 0x8005bdc *)
cast lr@sint32 lr;
smull tmp_h tmp_l lr r3;
uadds carry r12 tmp_l r12;
sadc r7 tmp_h r7 carry;
assert eqmod r12 0 (2**32) && true;
assume eq r12 0 && true;
(* vmov	r1, s15                                    #! PC = 0x8005be0 *)
mov r1 s15;
(* smull	r12, r8, r8, r1                           #! PC = 0x8005be4 *)
smull r8 r12 r8 r1;
(* mul.w	lr, r12, r2                               #! PC = 0x8005be8 *)
cast r12_s@sint32 r12;
mull discard lr r12_s r2;
(* smlal	r12, r8, lr, r3                           #! PC = 0x8005bec *)
cast lr@sint32 lr;
smull tmp_h tmp_l lr r3;
uadds carry r12 tmp_l r12;
sadc r8 tmp_h r8 carry;
assert eqmod r12 0 (2**32) && true;
assume eq r12 0 && true;
(* vmov	r1, s16                                    #! PC = 0x8005bf0 *)
mov r1 s16;
(* smull	r12, r9, r9, r1                           #! PC = 0x8005bf4 *)
smull r9 r12 r9 r1;
(* mul.w	lr, r12, r2                               #! PC = 0x8005bf8 *)
cast r12_s@sint32 r12;
mull discard lr r12_s r2;
(* smlal	r12, r9, lr, r3                           #! PC = 0x8005bfc *)
cast lr@sint32 lr;
smull tmp_h tmp_l lr r3;
uadds carry r12 tmp_l r12;
sadc r9 tmp_h r9 carry;
assert eqmod r12 0 (2**32) && true;
assume eq r12 0 && true;
(* vmov	r1, s17                                    #! PC = 0x8005c00 *)
mov r1 s17;
(* smull	r12, r10, r10, r1                         #! PC = 0x8005c04 *)
smull r10 r12 r10 r1;
(* mul.w	lr, r12, r2                               #! PC = 0x8005c08 *)
cast r12_s@sint32 r12;
mull discard lr r12_s r2;
(* smlal	r12, r10, lr, r3                          #! PC = 0x8005c0c *)
cast lr@sint32 lr;
smull tmp_h tmp_l lr r3;
uadds carry r12 tmp_l r12;
sadc r10 tmp_h r10 carry;
assert eqmod r12 0 (2**32) && true;
assume eq r12 0 && true;
(* vmov	r1, s18                                    #! PC = 0x8005c10 *)
mov r1 s18;
(* smull	r12, r11, r11, r1                         #! PC = 0x8005c14 *)
smull r11 r12 r11 r1;
(* mul.w	lr, r12, r2                               #! PC = 0x8005c18 *)
cast r12_s@sint32 r12;
mull discard lr r12_s r2;
(* smlal	r12, r11, lr, r3                          #! PC = 0x8005c1c *)
cast lr@sint32 lr;
smull tmp_h tmp_l lr r3;
uadds carry r12 tmp_l r12;
sadc r11 tmp_h r11 carry;
assert eqmod r12 0 (2**32) && true;
assume eq r12 0 && true;
(* mov.w	r1, r3, lsr #1                            #! PC = 0x8005c20 *)
split r1 discard r3 1;
(* cmp	r4, r1                                      #! PC = 0x8005c24 *)
sub cmp r4 r1;
split sign discard cmp 31;
cast sign@bit sign;
cmov tmp sign 0@sint32 r3;
sub r4 r4 tmp;
(* cmn	r4, r1                                      #! PC = 0x8005c2a *)
add cmn r4 r1;
split sign discard cmn 31;
cast sign@bit sign;
cmov tmp sign r3 0@sint32;
add r4 r4 tmp;
(* cmp	r5, r1                                      #! PC = 0x8005c30 *)
sub cmp r5 r1;
split sign discard cmp 31;
cast sign@bit sign;
cmov tmp sign 0@sint32 r3;
sub r5 r5 tmp;
(* cmn	r5, r1                                      #! PC = 0x8005c36 *)
add cmn r5 r1;
split sign discard cmn 31;
cast sign@bit sign;
cmov tmp sign r3 0@sint32;
add r5 r5 tmp;
(* cmp	r6, r1                                      #! PC = 0x8005c3c *)
sub cmp r6 r1;
split sign discard cmp 31;
cast sign@bit sign;
cmov tmp sign 0@sint32 r3;
sub r6 r6 tmp;
(* cmn	r6, r1                                      #! PC = 0x8005c42 *)
add cmn r6 r1;
split sign discard cmn 31;
cast sign@bit sign;
cmov tmp sign r3 0@sint32;
add r6 r6 tmp;
(* cmp	r7, r1                                      #! PC = 0x8005c48 *)
sub cmp r7 r1;
split sign discard cmp 31;
cast sign@bit sign;
cmov tmp sign 0@sint32 r3;
sub r7 r7 tmp;
(* cmn	r7, r1                                      #! PC = 0x8005c4e *)
add cmn r7 r1;
split sign discard cmn 31;
cast sign@bit sign;
cmov tmp sign r3 0@sint32;
add r7 r7 tmp;
(* cmp	r8, r1                                      #! PC = 0x8005c54 *)
sub cmp r8 r1;
split sign discard cmp 31;
cast sign@bit sign;
cmov tmp sign 0@sint32 r3;
sub r8 r8 tmp;
(* cmn.w	r8, r1                                    #! PC = 0x8005c5c *)
add cmn r8 r1;
split sign discard cmn 31;
cast sign@bit sign;
cmov tmp sign r3 0@sint32;
add r8 r8 tmp;
(* cmp	r9, r1                                      #! PC = 0x8005c64 *)
sub cmp r9 r1;
split sign discard cmp 31;
cast sign@bit sign;
cmov tmp sign 0@sint32 r3;
sub r9 r9 tmp;
(* cmn.w	r9, r1                                    #! PC = 0x8005c6c *)
add cmn r9 r1;
split sign discard cmn 31;
cast sign@bit sign;
cmov tmp sign r3 0@sint32;
add r9 r9 tmp;
(* cmp	r10, r1                                     #! PC = 0x8005c74 *)
sub cmp r10 r1;
split sign discard cmp 31;
cast sign@bit sign;
cmov tmp sign 0@sint32 r3;
sub r10 r10 tmp;
(* cmn.w	r10, r1                                   #! PC = 0x8005c7c *)
add cmn r10 r1;
split sign discard cmn 31;
cast sign@bit sign;
cmov tmp sign r3 0@sint32;
add r10 r10 tmp;
(* cmp	r11, r1                                     #! PC = 0x8005c84 *)
sub cmp r11 r1;
split sign discard cmp 31;
cast sign@bit sign;
cmov tmp sign 0@sint32 r3;
sub r11 r11 tmp;
(* cmn.w	r11, r1                                   #! PC = 0x8005c8c *)
add cmn r11 r1;
split sign discard cmn 31;
cast sign@bit sign;
cmov tmp sign r3 0@sint32;
add r11 r11 tmp;
(* vmov	lr, s0                                     #! PC = 0x8005c94 *)
mov lr s0;
(* strh.w	r8, [lr, #256]	; 0x100                   #! EA = L0x2001997e; PC = 0x8005c98 *)
ghost L0x2001997e_f@sint32 : L0x2001997e_f = r8 && L0x2001997e_f = r8;
split discard L0x2001997e_u r8 16;
cast L0x2001997e@sint16 L0x2001997e_u;
(* strh.w	r9, [lr, #320]	; 0x140                   #! EA = L0x200199be; PC = 0x8005c9c *)
ghost L0x200199be_f@sint32 : L0x200199be_f = r9 && L0x200199be_f = r9;
split discard L0x200199be_u r9 16;
cast L0x200199be@sint16 L0x200199be_u;
(* strh.w	r10, [lr, #384]	; 0x180                  #! EA = L0x200199fe; PC = 0x8005ca0 *)
ghost L0x200199fe_f@sint32 : L0x200199fe_f = r10 && L0x200199fe_f = r10;
split discard L0x200199fe_u r10 16;
cast L0x200199fe@sint16 L0x200199fe_u;
(* strh.w	r11, [lr, #448]	; 0x1c0                  #! EA = L0x20019a3e; PC = 0x8005ca4 *)
ghost L0x20019a3e_f@sint32 : L0x20019a3e_f = r11 && L0x20019a3e_f = r11;
split discard L0x20019a3e_u r11 16;
cast L0x20019a3e@sint16 L0x20019a3e_u;
(* strh.w	r5, [lr, #64]	; 0x40                     #! EA = L0x200198be; PC = 0x8005ca8 *)
ghost L0x200198be_f@sint32 : L0x200198be_f = r5 && L0x200198be_f = r5;
split discard L0x200198be_u r5 16;
cast L0x200198be@sint16 L0x200198be_u;
(* strh.w	r6, [lr, #128]	; 0x80                    #! EA = L0x200198fe; PC = 0x8005cac *)
ghost L0x200198fe_f@sint32 : L0x200198fe_f = r6 && L0x200198fe_f = r6;
split discard L0x200198fe_u r6 16;
cast L0x200198fe@sint16 L0x200198fe_u;
(* strh.w	r7, [lr, #192]	; 0xc0                    #! EA = L0x2001993e; PC = 0x8005cb0 *)
ghost L0x2001993e_f@sint32 : L0x2001993e_f = r7 && L0x2001993e_f = r7;
split discard L0x2001993e_u r7 16;
cast L0x2001993e@sint16 L0x2001993e_u;
(* strh.w	r4, [lr], #2                             #! EA = L0x2001987e; PC = 0x8005cb4 *)
ghost L0x2001987e_f@sint32 : L0x2001987e_f = r4 && L0x2001987e_f = r4;
split discard L0x2001987e_u r4 16;
cast L0x2001987e@sint16 L0x2001987e_u;
(* vmov	s0, lr                                     #! PC = 0x8005cb8 *)
mov s0 lr;
(* vmov	lr, s3                                     #! PC = 0x8005cbc *)
mov lr s3;
(* vmov	r12, s2                                    #! PC = 0x8005cc8 *)
mov r12 s2;
(* vmov	r1, s1                                     #! PC = 0x8005848 *)
mov r1 s1;
(* vldmia	r1!, {s4-s18}                            #! EA = L0x800f960; PC = 0x800584c *)
mov s4 L0x800f960;
mov s5 L0x800f964;
mov s6 L0x800f968;
mov s7 L0x800f96c;
mov s8 L0x800f970;
mov s9 L0x800f974;
mov s10 L0x800f978;
mov s11 L0x800f97c;
mov s12 L0x800f980;
mov s13 L0x800f984;
mov s14 L0x800f988;
mov s15 L0x800f98c;
mov s16 L0x800f990;
mov s17 L0x800f994;
mov s18 L0x800f998;
(* vmov	s1, r1                                     #! PC = 0x8005850 *)
mov s1 r1;
(* add.w	lr, r0, #16                               #! PC = 0x8005854 *)
adds discard lr r0 16@uint32;
(* vmov	s3, lr                                     #! PC = 0x8005858 *)
mov s3 lr;
(* ldr.w	r8, [r0, #512]	; 0x200                    #! EA = L0x2001a4b8; Value = 0x0077dbf8; PC = 0x800585c *)
mov r8 L0x2001a4b8;
(* ldr.w	r9, [r0, #640]	; 0x280                    #! EA = L0x2001a538; Value = 0x0080134a; PC = 0x8005860 *)
mov r9 L0x2001a538;
(* ldr.w	r10, [r0, #768]	; 0x300                   #! EA = L0x2001a5b8; Value = 0xfdf1a611; PC = 0x8005864 *)
mov r10 L0x2001a5b8;
(* ldr.w	r11, [r0, #896]	; 0x380                   #! EA = L0x2001a638; Value = 0x00990b89; PC = 0x8005868 *)
mov r11 L0x2001a638;
(* ldr.w	r5, [r0, #128]	; 0x80                     #! EA = L0x2001a338; Value = 0x0233f64e; PC = 0x800586c *)
mov r5 L0x2001a338;
(* ldr.w	r6, [r0, #256]	; 0x100                    #! EA = L0x2001a3b8; Value = 0xff1463c9; PC = 0x8005870 *)
mov r6 L0x2001a3b8;
(* ldr.w	r7, [r0, #384]	; 0x180                    #! EA = L0x2001a438; Value = 0x00de67c6; PC = 0x8005874 *)
mov r7 L0x2001a438;
(* ldr.w	r4, [r0], #4                              #! EA = L0x2001a2b8; Value = 0xfd92db35; PC = 0x8005878 *)
mov r4 L0x2001a2b8;
(* vmov	r1, s4                                     #! PC = 0x800587c *)
mov r1 s4;
(* smull	r12, r5, r5, r1                           #! PC = 0x8005880 *)
smull r5 r12 r5 r1;
(* mul.w	lr, r12, r2                               #! PC = 0x8005884 *)
cast r12_s@sint32 r12;
mull discard lr r12_s r2;
(* smlal	r12, r5, lr, r3                           #! PC = 0x8005888 *)
cast lr@sint32 lr;
smull tmp_h tmp_l lr r3;
uadds carry r12 tmp_l r12;
sadc r5 tmp_h r5 carry;
assert eqmod r12 0 (2**32) && true;
assume eq r12 0 && true;
(* smull	r12, r7, r7, r1                           #! PC = 0x800588c *)
smull r7 r12 r7 r1;
(* mul.w	lr, r12, r2                               #! PC = 0x8005890 *)
cast r12_s@sint32 r12;
mull discard lr r12_s r2;
(* smlal	r12, r7, lr, r3                           #! PC = 0x8005894 *)
cast lr@sint32 lr;
smull tmp_h tmp_l lr r3;
uadds carry r12 tmp_l r12;
sadc r7 tmp_h r7 carry;
assert eqmod r12 0 (2**32) && true;
assume eq r12 0 && true;
(* smull	r12, r9, r9, r1                           #! PC = 0x8005898 *)
smull r9 r12 r9 r1;
(* mul.w	lr, r12, r2                               #! PC = 0x800589c *)
cast r12_s@sint32 r12;
mull discard lr r12_s r2;
(* smlal	r12, r9, lr, r3                           #! PC = 0x80058a0 *)
cast lr@sint32 lr;
smull tmp_h tmp_l lr r3;
uadds carry r12 tmp_l r12;
sadc r9 tmp_h r9 carry;
assert eqmod r12 0 (2**32) && true;
assume eq r12 0 && true;
(* smull	r12, r11, r11, r1                         #! PC = 0x80058a4 *)
smull r11 r12 r11 r1;
(* mul.w	lr, r12, r2                               #! PC = 0x80058a8 *)
cast r12_s@sint32 r12;
mull discard lr r12_s r2;
(* smlal	r12, r11, lr, r3                          #! PC = 0x80058ac *)
cast lr@sint32 lr;
smull tmp_h tmp_l lr r3;
uadds carry r12 tmp_l r12;
sadc r11 tmp_h r11 carry;
assert eqmod r12 0 (2**32) && true;
assume eq r12 0 && true;
(* add	r4, r5                                      #! PC = 0x80058b0 *)
add r4 r4 r5;
(* add	r6, r7                                      #! PC = 0x80058b2 *)
add r6 r6 r7;
(* add	r8, r9                                      #! PC = 0x80058b4 *)
add r8 r8 r9;
(* add	r10, r11                                    #! PC = 0x80058b6 *)
add r10 r10 r11;
(* sub.w	r5, r4, r5, lsl #1                        #! PC = 0x80058b8 *)
shl tmp r5 1;
sub r5 r4 tmp;
(* sub.w	r7, r6, r7, lsl #1                        #! PC = 0x80058bc *)
shl tmp r7 1;
sub r7 r6 tmp;
(* sub.w	r9, r8, r9, lsl #1                        #! PC = 0x80058c0 *)
shl tmp r9 1;
sub r9 r8 tmp;
(* sub.w	r11, r10, r11, lsl #1                     #! PC = 0x80058c4 *)
shl tmp r11 1;
sub r11 r10 tmp;
(* vmov	r1, s5                                     #! PC = 0x80058c8 *)
mov r1 s5;
(* smull	r12, r6, r6, r1                           #! PC = 0x80058cc *)
smull r6 r12 r6 r1;
(* mul.w	lr, r12, r2                               #! PC = 0x80058d0 *)
cast r12_s@sint32 r12;
mull discard lr r12_s r2;
(* smlal	r12, r6, lr, r3                           #! PC = 0x80058d4 *)
cast lr@sint32 lr;
smull tmp_h tmp_l lr r3;
uadds carry r12 tmp_l r12;
sadc r6 tmp_h r6 carry;
assert eqmod r12 0 (2**32) && true;
assume eq r12 0 && true;
(* smull	r12, r10, r10, r1                         #! PC = 0x80058d8 *)
smull r10 r12 r10 r1;
(* mul.w	lr, r12, r2                               #! PC = 0x80058dc *)
cast r12_s@sint32 r12;
mull discard lr r12_s r2;
(* smlal	r12, r10, lr, r3                          #! PC = 0x80058e0 *)
cast lr@sint32 lr;
smull tmp_h tmp_l lr r3;
uadds carry r12 tmp_l r12;
sadc r10 tmp_h r10 carry;
assert eqmod r12 0 (2**32) && true;
assume eq r12 0 && true;
(* vmov	r1, s6                                     #! PC = 0x80058e4 *)
mov r1 s6;
(* smull	r12, r7, r7, r1                           #! PC = 0x80058e8 *)
smull r7 r12 r7 r1;
(* mul.w	lr, r12, r2                               #! PC = 0x80058ec *)
cast r12_s@sint32 r12;
mull discard lr r12_s r2;
(* smlal	r12, r7, lr, r3                           #! PC = 0x80058f0 *)
cast lr@sint32 lr;
smull tmp_h tmp_l lr r3;
uadds carry r12 tmp_l r12;
sadc r7 tmp_h r7 carry;
assert eqmod r12 0 (2**32) && true;
assume eq r12 0 && true;
(* smull	r12, r11, r11, r1                         #! PC = 0x80058f4 *)
smull r11 r12 r11 r1;
(* mul.w	lr, r12, r2                               #! PC = 0x80058f8 *)
cast r12_s@sint32 r12;
mull discard lr r12_s r2;
(* smlal	r12, r11, lr, r3                          #! PC = 0x80058fc *)
cast lr@sint32 lr;
smull tmp_h tmp_l lr r3;
uadds carry r12 tmp_l r12;
sadc r11 tmp_h r11 carry;
assert eqmod r12 0 (2**32) && true;
assume eq r12 0 && true;
(* add	r4, r6                                      #! PC = 0x8005900 *)
add r4 r4 r6;
(* add	r5, r7                                      #! PC = 0x8005902 *)
add r5 r5 r7;
(* add	r8, r10                                     #! PC = 0x8005904 *)
add r8 r8 r10;
(* add	r9, r11                                     #! PC = 0x8005906 *)
add r9 r9 r11;
(* sub.w	r6, r4, r6, lsl #1                        #! PC = 0x8005908 *)
shl tmp r6 1;
sub r6 r4 tmp;
(* sub.w	r7, r5, r7, lsl #1                        #! PC = 0x800590c *)
shl tmp r7 1;
sub r7 r5 tmp;
(* sub.w	r10, r8, r10, lsl #1                      #! PC = 0x8005910 *)
shl tmp r10 1;
sub r10 r8 tmp;
(* sub.w	r11, r9, r11, lsl #1                      #! PC = 0x8005914 *)
shl tmp r11 1;
sub r11 r9 tmp;
(* vmov	r1, s7                                     #! PC = 0x8005918 *)
mov r1 s7;
(* smull	r12, r8, r8, r1                           #! PC = 0x800591c *)
smull r8 r12 r8 r1;
(* mul.w	lr, r12, r2                               #! PC = 0x8005920 *)
cast r12_s@sint32 r12;
mull discard lr r12_s r2;
(* smlal	r12, r8, lr, r3                           #! PC = 0x8005924 *)
cast lr@sint32 lr;
smull tmp_h tmp_l lr r3;
uadds carry r12 tmp_l r12;
sadc r8 tmp_h r8 carry;
assert eqmod r12 0 (2**32) && true;
assume eq r12 0 && true;
(* vmov	r1, s8                                     #! PC = 0x8005928 *)
mov r1 s8;
(* smull	r12, r9, r9, r1                           #! PC = 0x800592c *)
smull r9 r12 r9 r1;
(* mul.w	lr, r12, r2                               #! PC = 0x8005930 *)
cast r12_s@sint32 r12;
mull discard lr r12_s r2;
(* smlal	r12, r9, lr, r3                           #! PC = 0x8005934 *)
cast lr@sint32 lr;
smull tmp_h tmp_l lr r3;
uadds carry r12 tmp_l r12;
sadc r9 tmp_h r9 carry;
assert eqmod r12 0 (2**32) && true;
assume eq r12 0 && true;
(* vmov	r1, s9                                     #! PC = 0x8005938 *)
mov r1 s9;
(* smull	r12, r10, r10, r1                         #! PC = 0x800593c *)
smull r10 r12 r10 r1;
(* mul.w	lr, r12, r2                               #! PC = 0x8005940 *)
cast r12_s@sint32 r12;
mull discard lr r12_s r2;
(* smlal	r12, r10, lr, r3                          #! PC = 0x8005944 *)
cast lr@sint32 lr;
smull tmp_h tmp_l lr r3;
uadds carry r12 tmp_l r12;
sadc r10 tmp_h r10 carry;
assert eqmod r12 0 (2**32) && true;
assume eq r12 0 && true;
(* vmov	r1, s10                                    #! PC = 0x8005948 *)
mov r1 s10;
(* smull	r12, r11, r11, r1                         #! PC = 0x800594c *)
smull r11 r12 r11 r1;
(* mul.w	lr, r12, r2                               #! PC = 0x8005950 *)
cast r12_s@sint32 r12;
mull discard lr r12_s r2;
(* smlal	r12, r11, lr, r3                          #! PC = 0x8005954 *)
cast lr@sint32 lr;
smull tmp_h tmp_l lr r3;
uadds carry r12 tmp_l r12;
sadc r11 tmp_h r11 carry;
assert eqmod r12 0 (2**32) && true;
assume eq r12 0 && true;
(* add	r4, r8                                      #! PC = 0x8005958 *)
add r4 r4 r8;
(* add	r5, r9                                      #! PC = 0x800595a *)
add r5 r5 r9;
(* add	r6, r10                                     #! PC = 0x800595c *)
add r6 r6 r10;
(* add	r7, r11                                     #! PC = 0x800595e *)
add r7 r7 r11;
(* sub.w	r8, r4, r8, lsl #1                        #! PC = 0x8005960 *)
shl tmp r8 1;
sub r8 r4 tmp;
(* sub.w	r9, r5, r9, lsl #1                        #! PC = 0x8005964 *)
shl tmp r9 1;
sub r9 r5 tmp;
(* sub.w	r10, r6, r10, lsl #1                      #! PC = 0x8005968 *)
shl tmp r10 1;
sub r10 r6 tmp;
(* sub.w	r11, r7, r11, lsl #1                      #! PC = 0x800596c *)
shl tmp r11 1;
sub r11 r7 tmp;
(* vmov	r1, s11                                    #! PC = 0x8005970 *)
mov r1 s11;
(* smull	r12, r4, r4, r1                           #! PC = 0x8005974 *)
smull r4 r12 r4 r1;
(* mul.w	lr, r12, r2                               #! PC = 0x8005978 *)
cast r12_s@sint32 r12;
mull discard lr r12_s r2;
(* smlal	r12, r4, lr, r3                           #! PC = 0x800597c *)
cast lr@sint32 lr;
smull tmp_h tmp_l lr r3;
uadds carry r12 tmp_l r12;
sadc r4 tmp_h r4 carry;
assert eqmod r12 0 (2**32) && true;
assume eq r12 0 && true;
(* vmov	r1, s12                                    #! PC = 0x8005980 *)
mov r1 s12;
(* smull	r12, r5, r5, r1                           #! PC = 0x8005984 *)
smull r5 r12 r5 r1;
(* mul.w	lr, r12, r2                               #! PC = 0x8005988 *)
cast r12_s@sint32 r12;
mull discard lr r12_s r2;
(* smlal	r12, r5, lr, r3                           #! PC = 0x800598c *)
cast lr@sint32 lr;
smull tmp_h tmp_l lr r3;
uadds carry r12 tmp_l r12;
sadc r5 tmp_h r5 carry;
assert eqmod r12 0 (2**32) && true;
assume eq r12 0 && true;
(* vmov	r1, s13                                    #! PC = 0x8005990 *)
mov r1 s13;
(* smull	r12, r6, r6, r1                           #! PC = 0x8005994 *)
smull r6 r12 r6 r1;
(* mul.w	lr, r12, r2                               #! PC = 0x8005998 *)
cast r12_s@sint32 r12;
mull discard lr r12_s r2;
(* smlal	r12, r6, lr, r3                           #! PC = 0x800599c *)
cast lr@sint32 lr;
smull tmp_h tmp_l lr r3;
uadds carry r12 tmp_l r12;
sadc r6 tmp_h r6 carry;
assert eqmod r12 0 (2**32) && true;
assume eq r12 0 && true;
(* vmov	r1, s14                                    #! PC = 0x80059a0 *)
mov r1 s14;
(* smull	r12, r7, r7, r1                           #! PC = 0x80059a4 *)
smull r7 r12 r7 r1;
(* mul.w	lr, r12, r2                               #! PC = 0x80059a8 *)
cast r12_s@sint32 r12;
mull discard lr r12_s r2;
(* smlal	r12, r7, lr, r3                           #! PC = 0x80059ac *)
cast lr@sint32 lr;
smull tmp_h tmp_l lr r3;
uadds carry r12 tmp_l r12;
sadc r7 tmp_h r7 carry;
assert eqmod r12 0 (2**32) && true;
assume eq r12 0 && true;
(* vmov	r1, s15                                    #! PC = 0x80059b0 *)
mov r1 s15;
(* smull	r12, r8, r8, r1                           #! PC = 0x80059b4 *)
smull r8 r12 r8 r1;
(* mul.w	lr, r12, r2                               #! PC = 0x80059b8 *)
cast r12_s@sint32 r12;
mull discard lr r12_s r2;
(* smlal	r12, r8, lr, r3                           #! PC = 0x80059bc *)
cast lr@sint32 lr;
smull tmp_h tmp_l lr r3;
uadds carry r12 tmp_l r12;
sadc r8 tmp_h r8 carry;
assert eqmod r12 0 (2**32) && true;
assume eq r12 0 && true;
(* vmov	r1, s16                                    #! PC = 0x80059c0 *)
mov r1 s16;
(* smull	r12, r9, r9, r1                           #! PC = 0x80059c4 *)
smull r9 r12 r9 r1;
(* mul.w	lr, r12, r2                               #! PC = 0x80059c8 *)
cast r12_s@sint32 r12;
mull discard lr r12_s r2;
(* smlal	r12, r9, lr, r3                           #! PC = 0x80059cc *)
cast lr@sint32 lr;
smull tmp_h tmp_l lr r3;
uadds carry r12 tmp_l r12;
sadc r9 tmp_h r9 carry;
assert eqmod r12 0 (2**32) && true;
assume eq r12 0 && true;
(* vmov	r1, s17                                    #! PC = 0x80059d0 *)
mov r1 s17;
(* smull	r12, r10, r10, r1                         #! PC = 0x80059d4 *)
smull r10 r12 r10 r1;
(* mul.w	lr, r12, r2                               #! PC = 0x80059d8 *)
cast r12_s@sint32 r12;
mull discard lr r12_s r2;
(* smlal	r12, r10, lr, r3                          #! PC = 0x80059dc *)
cast lr@sint32 lr;
smull tmp_h tmp_l lr r3;
uadds carry r12 tmp_l r12;
sadc r10 tmp_h r10 carry;
assert eqmod r12 0 (2**32) && true;
assume eq r12 0 && true;
(* vmov	r1, s18                                    #! PC = 0x80059e0 *)
mov r1 s18;
(* smull	r12, r11, r11, r1                         #! PC = 0x80059e4 *)
smull r11 r12 r11 r1;
(* mul.w	lr, r12, r2                               #! PC = 0x80059e8 *)
cast r12_s@sint32 r12;
mull discard lr r12_s r2;
(* smlal	r12, r11, lr, r3                          #! PC = 0x80059ec *)
cast lr@sint32 lr;
smull tmp_h tmp_l lr r3;
uadds carry r12 tmp_l r12;
sadc r11 tmp_h r11 carry;
assert eqmod r12 0 (2**32) && true;
assume eq r12 0 && true;
(* mov.w	r1, r3, lsr #1                            #! PC = 0x80059f0 *)
split r1 discard r3 1;
(* cmp	r4, r1                                      #! PC = 0x80059f4 *)
sub cmp r4 r1;
split sign discard cmp 31;
cast sign@bit sign;
cmov tmp sign 0@sint32 r3;
sub r4 r4 tmp;
(* cmn	r4, r1                                      #! PC = 0x80059fa *)
add cmn r4 r1;
split sign discard cmn 31;
cast sign@bit sign;
cmov tmp sign r3 0@sint32;
add r4 r4 tmp;
(* cmp	r5, r1                                      #! PC = 0x8005a00 *)
sub cmp r5 r1;
split sign discard cmp 31;
cast sign@bit sign;
cmov tmp sign 0@sint32 r3;
sub r5 r5 tmp;
(* cmn	r5, r1                                      #! PC = 0x8005a06 *)
add cmn r5 r1;
split sign discard cmn 31;
cast sign@bit sign;
cmov tmp sign r3 0@sint32;
add r5 r5 tmp;
(* cmp	r6, r1                                      #! PC = 0x8005a0c *)
sub cmp r6 r1;
split sign discard cmp 31;
cast sign@bit sign;
cmov tmp sign 0@sint32 r3;
sub r6 r6 tmp;
(* cmn	r6, r1                                      #! PC = 0x8005a12 *)
add cmn r6 r1;
split sign discard cmn 31;
cast sign@bit sign;
cmov tmp sign r3 0@sint32;
add r6 r6 tmp;
(* cmp	r7, r1                                      #! PC = 0x8005a18 *)
sub cmp r7 r1;
split sign discard cmp 31;
cast sign@bit sign;
cmov tmp sign 0@sint32 r3;
sub r7 r7 tmp;
(* cmn	r7, r1                                      #! PC = 0x8005a1e *)
add cmn r7 r1;
split sign discard cmn 31;
cast sign@bit sign;
cmov tmp sign r3 0@sint32;
add r7 r7 tmp;
(* cmp	r8, r1                                      #! PC = 0x8005a24 *)
sub cmp r8 r1;
split sign discard cmp 31;
cast sign@bit sign;
cmov tmp sign 0@sint32 r3;
sub r8 r8 tmp;
(* cmn.w	r8, r1                                    #! PC = 0x8005a2c *)
add cmn r8 r1;
split sign discard cmn 31;
cast sign@bit sign;
cmov tmp sign r3 0@sint32;
add r8 r8 tmp;
(* cmp	r9, r1                                      #! PC = 0x8005a34 *)
sub cmp r9 r1;
split sign discard cmp 31;
cast sign@bit sign;
cmov tmp sign 0@sint32 r3;
sub r9 r9 tmp;
(* cmn.w	r9, r1                                    #! PC = 0x8005a3c *)
add cmn r9 r1;
split sign discard cmn 31;
cast sign@bit sign;
cmov tmp sign r3 0@sint32;
add r9 r9 tmp;
(* cmp	r10, r1                                     #! PC = 0x8005a44 *)
sub cmp r10 r1;
split sign discard cmp 31;
cast sign@bit sign;
cmov tmp sign 0@sint32 r3;
sub r10 r10 tmp;
(* cmn.w	r10, r1                                   #! PC = 0x8005a4c *)
add cmn r10 r1;
split sign discard cmn 31;
cast sign@bit sign;
cmov tmp sign r3 0@sint32;
add r10 r10 tmp;
(* cmp	r11, r1                                     #! PC = 0x8005a54 *)
sub cmp r11 r1;
split sign discard cmp 31;
cast sign@bit sign;
cmov tmp sign 0@sint32 r3;
sub r11 r11 tmp;
(* cmn.w	r11, r1                                   #! PC = 0x8005a5c *)
add cmn r11 r1;
split sign discard cmn 31;
cast sign@bit sign;
cmov tmp sign r3 0@sint32;
add r11 r11 tmp;
(* vmov	lr, s0                                     #! PC = 0x8005a64 *)
mov lr s0;
(* strh.w	r8, [lr, #256]	; 0x100                   #! EA = L0x20019980; PC = 0x8005a68 *)
ghost L0x20019980_f@sint32 : L0x20019980_f = r8 && L0x20019980_f = r8;
split discard L0x20019980_u r8 16;
cast L0x20019980@sint16 L0x20019980_u;
(* strh.w	r9, [lr, #320]	; 0x140                   #! EA = L0x200199c0; PC = 0x8005a6c *)
ghost L0x200199c0_f@sint32 : L0x200199c0_f = r9 && L0x200199c0_f = r9;
split discard L0x200199c0_u r9 16;
cast L0x200199c0@sint16 L0x200199c0_u;
(* strh.w	r10, [lr, #384]	; 0x180                  #! EA = L0x20019a00; PC = 0x8005a70 *)
ghost L0x20019a00_f@sint32 : L0x20019a00_f = r10 && L0x20019a00_f = r10;
split discard L0x20019a00_u r10 16;
cast L0x20019a00@sint16 L0x20019a00_u;
(* strh.w	r11, [lr, #448]	; 0x1c0                  #! EA = L0x20019a40; PC = 0x8005a74 *)
ghost L0x20019a40_f@sint32 : L0x20019a40_f = r11 && L0x20019a40_f = r11;
split discard L0x20019a40_u r11 16;
cast L0x20019a40@sint16 L0x20019a40_u;
(* strh.w	r5, [lr, #64]	; 0x40                     #! EA = L0x200198c0; PC = 0x8005a78 *)
ghost L0x200198c0_f@sint32 : L0x200198c0_f = r5 && L0x200198c0_f = r5;
split discard L0x200198c0_u r5 16;
cast L0x200198c0@sint16 L0x200198c0_u;
(* strh.w	r6, [lr, #128]	; 0x80                    #! EA = L0x20019900; PC = 0x8005a7c *)
ghost L0x20019900_f@sint32 : L0x20019900_f = r6 && L0x20019900_f = r6;
split discard L0x20019900_u r6 16;
cast L0x20019900@sint16 L0x20019900_u;
(* strh.w	r7, [lr, #192]	; 0xc0                    #! EA = L0x20019940; PC = 0x8005a80 *)
ghost L0x20019940_f@sint32 : L0x20019940_f = r7 && L0x20019940_f = r7;
split discard L0x20019940_u r7 16;
cast L0x20019940@sint16 L0x20019940_u;
(* strh.w	r4, [lr], #2                             #! EA = L0x20019880; PC = 0x8005a84 *)
ghost L0x20019880_f@sint32 : L0x20019880_f = r4 && L0x20019880_f = r4;
split discard L0x20019880_u r4 16;
cast L0x20019880@sint16 L0x20019880_u;
(* vmov	s0, lr                                     #! PC = 0x8005a88 *)
mov s0 lr;
(* ldr.w	r8, [r0, #512]	; 0x200                    #! EA = L0x2001a4bc; Value = 0xfe7e78cd; PC = 0x8005a8c *)
mov r8 L0x2001a4bc;
(* ldr.w	r9, [r0, #640]	; 0x280                    #! EA = L0x2001a53c; Value = 0xffe862c8; PC = 0x8005a90 *)
mov r9 L0x2001a53c;
(* ldr.w	r10, [r0, #768]	; 0x300                   #! EA = L0x2001a5bc; Value = 0x00bc3501; PC = 0x8005a94 *)
mov r10 L0x2001a5bc;
(* ldr.w	r11, [r0, #896]	; 0x380                   #! EA = L0x2001a63c; Value = 0x00513d88; PC = 0x8005a98 *)
mov r11 L0x2001a63c;
(* ldr.w	r5, [r0, #128]	; 0x80                     #! EA = L0x2001a33c; Value = 0xff5e8248; PC = 0x8005a9c *)
mov r5 L0x2001a33c;
(* ldr.w	r6, [r0, #256]	; 0x100                    #! EA = L0x2001a3bc; Value = 0xff9e2bff; PC = 0x8005aa0 *)
mov r6 L0x2001a3bc;
(* ldr.w	r7, [r0, #384]	; 0x180                    #! EA = L0x2001a43c; Value = 0xfff8619b; PC = 0x8005aa4 *)
mov r7 L0x2001a43c;
(* ldr.w	r4, [r0], #4                              #! EA = L0x2001a2bc; Value = 0xfef5db63; PC = 0x8005aa8 *)
mov r4 L0x2001a2bc;
(* vmov	r1, s4                                     #! PC = 0x8005aac *)
mov r1 s4;
(* smull	r12, r5, r5, r1                           #! PC = 0x8005ab0 *)
smull r5 r12 r5 r1;
(* mul.w	lr, r12, r2                               #! PC = 0x8005ab4 *)
cast r12_s@sint32 r12;
mull discard lr r12_s r2;
(* smlal	r12, r5, lr, r3                           #! PC = 0x8005ab8 *)
cast lr@sint32 lr;
smull tmp_h tmp_l lr r3;
uadds carry r12 tmp_l r12;
sadc r5 tmp_h r5 carry;
assert eqmod r12 0 (2**32) && true;
assume eq r12 0 && true;
(* smull	r12, r7, r7, r1                           #! PC = 0x8005abc *)
smull r7 r12 r7 r1;
(* mul.w	lr, r12, r2                               #! PC = 0x8005ac0 *)
cast r12_s@sint32 r12;
mull discard lr r12_s r2;
(* smlal	r12, r7, lr, r3                           #! PC = 0x8005ac4 *)
cast lr@sint32 lr;
smull tmp_h tmp_l lr r3;
uadds carry r12 tmp_l r12;
sadc r7 tmp_h r7 carry;
assert eqmod r12 0 (2**32) && true;
assume eq r12 0 && true;
(* smull	r12, r9, r9, r1                           #! PC = 0x8005ac8 *)
smull r9 r12 r9 r1;
(* mul.w	lr, r12, r2                               #! PC = 0x8005acc *)
cast r12_s@sint32 r12;
mull discard lr r12_s r2;
(* smlal	r12, r9, lr, r3                           #! PC = 0x8005ad0 *)
cast lr@sint32 lr;
smull tmp_h tmp_l lr r3;
uadds carry r12 tmp_l r12;
sadc r9 tmp_h r9 carry;
assert eqmod r12 0 (2**32) && true;
assume eq r12 0 && true;
(* smull	r12, r11, r11, r1                         #! PC = 0x8005ad4 *)
smull r11 r12 r11 r1;
(* mul.w	lr, r12, r2                               #! PC = 0x8005ad8 *)
cast r12_s@sint32 r12;
mull discard lr r12_s r2;
(* smlal	r12, r11, lr, r3                          #! PC = 0x8005adc *)
cast lr@sint32 lr;
smull tmp_h tmp_l lr r3;
uadds carry r12 tmp_l r12;
sadc r11 tmp_h r11 carry;
assert eqmod r12 0 (2**32) && true;
assume eq r12 0 && true;
(* add	r4, r5                                      #! PC = 0x8005ae0 *)
add r4 r4 r5;
(* add	r6, r7                                      #! PC = 0x8005ae2 *)
add r6 r6 r7;
(* add	r8, r9                                      #! PC = 0x8005ae4 *)
add r8 r8 r9;
(* add	r10, r11                                    #! PC = 0x8005ae6 *)
add r10 r10 r11;
(* sub.w	r5, r4, r5, lsl #1                        #! PC = 0x8005ae8 *)
shl tmp r5 1;
sub r5 r4 tmp;
(* sub.w	r7, r6, r7, lsl #1                        #! PC = 0x8005aec *)
shl tmp r7 1;
sub r7 r6 tmp;
(* sub.w	r9, r8, r9, lsl #1                        #! PC = 0x8005af0 *)
shl tmp r9 1;
sub r9 r8 tmp;
(* sub.w	r11, r10, r11, lsl #1                     #! PC = 0x8005af4 *)
shl tmp r11 1;
sub r11 r10 tmp;
(* vmov	r1, s5                                     #! PC = 0x8005af8 *)
mov r1 s5;
(* smull	r12, r6, r6, r1                           #! PC = 0x8005afc *)
smull r6 r12 r6 r1;
(* mul.w	lr, r12, r2                               #! PC = 0x8005b00 *)
cast r12_s@sint32 r12;
mull discard lr r12_s r2;
(* smlal	r12, r6, lr, r3                           #! PC = 0x8005b04 *)
cast lr@sint32 lr;
smull tmp_h tmp_l lr r3;
uadds carry r12 tmp_l r12;
sadc r6 tmp_h r6 carry;
assert eqmod r12 0 (2**32) && true;
assume eq r12 0 && true;
(* smull	r12, r10, r10, r1                         #! PC = 0x8005b08 *)
smull r10 r12 r10 r1;
(* mul.w	lr, r12, r2                               #! PC = 0x8005b0c *)
cast r12_s@sint32 r12;
mull discard lr r12_s r2;
(* smlal	r12, r10, lr, r3                          #! PC = 0x8005b10 *)
cast lr@sint32 lr;
smull tmp_h tmp_l lr r3;
uadds carry r12 tmp_l r12;
sadc r10 tmp_h r10 carry;
assert eqmod r12 0 (2**32) && true;
assume eq r12 0 && true;
(* vmov	r1, s6                                     #! PC = 0x8005b14 *)
mov r1 s6;
(* smull	r12, r7, r7, r1                           #! PC = 0x8005b18 *)
smull r7 r12 r7 r1;
(* mul.w	lr, r12, r2                               #! PC = 0x8005b1c *)
cast r12_s@sint32 r12;
mull discard lr r12_s r2;
(* smlal	r12, r7, lr, r3                           #! PC = 0x8005b20 *)
cast lr@sint32 lr;
smull tmp_h tmp_l lr r3;
uadds carry r12 tmp_l r12;
sadc r7 tmp_h r7 carry;
assert eqmod r12 0 (2**32) && true;
assume eq r12 0 && true;
(* smull	r12, r11, r11, r1                         #! PC = 0x8005b24 *)
smull r11 r12 r11 r1;
(* mul.w	lr, r12, r2                               #! PC = 0x8005b28 *)
cast r12_s@sint32 r12;
mull discard lr r12_s r2;
(* smlal	r12, r11, lr, r3                          #! PC = 0x8005b2c *)
cast lr@sint32 lr;
smull tmp_h tmp_l lr r3;
uadds carry r12 tmp_l r12;
sadc r11 tmp_h r11 carry;
assert eqmod r12 0 (2**32) && true;
assume eq r12 0 && true;
(* add	r4, r6                                      #! PC = 0x8005b30 *)
add r4 r4 r6;
(* add	r5, r7                                      #! PC = 0x8005b32 *)
add r5 r5 r7;
(* add	r8, r10                                     #! PC = 0x8005b34 *)
add r8 r8 r10;
(* add	r9, r11                                     #! PC = 0x8005b36 *)
add r9 r9 r11;
(* sub.w	r6, r4, r6, lsl #1                        #! PC = 0x8005b38 *)
shl tmp r6 1;
sub r6 r4 tmp;
(* sub.w	r7, r5, r7, lsl #1                        #! PC = 0x8005b3c *)
shl tmp r7 1;
sub r7 r5 tmp;
(* sub.w	r10, r8, r10, lsl #1                      #! PC = 0x8005b40 *)
shl tmp r10 1;
sub r10 r8 tmp;
(* sub.w	r11, r9, r11, lsl #1                      #! PC = 0x8005b44 *)
shl tmp r11 1;
sub r11 r9 tmp;
(* vmov	r1, s7                                     #! PC = 0x8005b48 *)
mov r1 s7;
(* smull	r12, r8, r8, r1                           #! PC = 0x8005b4c *)
smull r8 r12 r8 r1;
(* mul.w	lr, r12, r2                               #! PC = 0x8005b50 *)
cast r12_s@sint32 r12;
mull discard lr r12_s r2;
(* smlal	r12, r8, lr, r3                           #! PC = 0x8005b54 *)
cast lr@sint32 lr;
smull tmp_h tmp_l lr r3;
uadds carry r12 tmp_l r12;
sadc r8 tmp_h r8 carry;
assert eqmod r12 0 (2**32) && true;
assume eq r12 0 && true;
(* vmov	r1, s8                                     #! PC = 0x8005b58 *)
mov r1 s8;
(* smull	r12, r9, r9, r1                           #! PC = 0x8005b5c *)
smull r9 r12 r9 r1;
(* mul.w	lr, r12, r2                               #! PC = 0x8005b60 *)
cast r12_s@sint32 r12;
mull discard lr r12_s r2;
(* smlal	r12, r9, lr, r3                           #! PC = 0x8005b64 *)
cast lr@sint32 lr;
smull tmp_h tmp_l lr r3;
uadds carry r12 tmp_l r12;
sadc r9 tmp_h r9 carry;
assert eqmod r12 0 (2**32) && true;
assume eq r12 0 && true;
(* vmov	r1, s9                                     #! PC = 0x8005b68 *)
mov r1 s9;
(* smull	r12, r10, r10, r1                         #! PC = 0x8005b6c *)
smull r10 r12 r10 r1;
(* mul.w	lr, r12, r2                               #! PC = 0x8005b70 *)
cast r12_s@sint32 r12;
mull discard lr r12_s r2;
(* smlal	r12, r10, lr, r3                          #! PC = 0x8005b74 *)
cast lr@sint32 lr;
smull tmp_h tmp_l lr r3;
uadds carry r12 tmp_l r12;
sadc r10 tmp_h r10 carry;
assert eqmod r12 0 (2**32) && true;
assume eq r12 0 && true;
(* vmov	r1, s10                                    #! PC = 0x8005b78 *)
mov r1 s10;
(* smull	r12, r11, r11, r1                         #! PC = 0x8005b7c *)
smull r11 r12 r11 r1;
(* mul.w	lr, r12, r2                               #! PC = 0x8005b80 *)
cast r12_s@sint32 r12;
mull discard lr r12_s r2;
(* smlal	r12, r11, lr, r3                          #! PC = 0x8005b84 *)
cast lr@sint32 lr;
smull tmp_h tmp_l lr r3;
uadds carry r12 tmp_l r12;
sadc r11 tmp_h r11 carry;
assert eqmod r12 0 (2**32) && true;
assume eq r12 0 && true;
(* add	r4, r8                                      #! PC = 0x8005b88 *)
add r4 r4 r8;
(* add	r5, r9                                      #! PC = 0x8005b8a *)
add r5 r5 r9;
(* add	r6, r10                                     #! PC = 0x8005b8c *)
add r6 r6 r10;
(* add	r7, r11                                     #! PC = 0x8005b8e *)
add r7 r7 r11;
(* sub.w	r8, r4, r8, lsl #1                        #! PC = 0x8005b90 *)
shl tmp r8 1;
sub r8 r4 tmp;
(* sub.w	r9, r5, r9, lsl #1                        #! PC = 0x8005b94 *)
shl tmp r9 1;
sub r9 r5 tmp;
(* sub.w	r10, r6, r10, lsl #1                      #! PC = 0x8005b98 *)
shl tmp r10 1;
sub r10 r6 tmp;
(* sub.w	r11, r7, r11, lsl #1                      #! PC = 0x8005b9c *)
shl tmp r11 1;
sub r11 r7 tmp;
(* vmov	r1, s11                                    #! PC = 0x8005ba0 *)
mov r1 s11;
(* smull	r12, r4, r4, r1                           #! PC = 0x8005ba4 *)
smull r4 r12 r4 r1;
(* mul.w	lr, r12, r2                               #! PC = 0x8005ba8 *)
cast r12_s@sint32 r12;
mull discard lr r12_s r2;
(* smlal	r12, r4, lr, r3                           #! PC = 0x8005bac *)
cast lr@sint32 lr;
smull tmp_h tmp_l lr r3;
uadds carry r12 tmp_l r12;
sadc r4 tmp_h r4 carry;
assert eqmod r12 0 (2**32) && true;
assume eq r12 0 && true;
(* vmov	r1, s12                                    #! PC = 0x8005bb0 *)
mov r1 s12;
(* smull	r12, r5, r5, r1                           #! PC = 0x8005bb4 *)
smull r5 r12 r5 r1;
(* mul.w	lr, r12, r2                               #! PC = 0x8005bb8 *)
cast r12_s@sint32 r12;
mull discard lr r12_s r2;
(* smlal	r12, r5, lr, r3                           #! PC = 0x8005bbc *)
cast lr@sint32 lr;
smull tmp_h tmp_l lr r3;
uadds carry r12 tmp_l r12;
sadc r5 tmp_h r5 carry;
assert eqmod r12 0 (2**32) && true;
assume eq r12 0 && true;
(* vmov	r1, s13                                    #! PC = 0x8005bc0 *)
mov r1 s13;
(* smull	r12, r6, r6, r1                           #! PC = 0x8005bc4 *)
smull r6 r12 r6 r1;
(* mul.w	lr, r12, r2                               #! PC = 0x8005bc8 *)
cast r12_s@sint32 r12;
mull discard lr r12_s r2;
(* smlal	r12, r6, lr, r3                           #! PC = 0x8005bcc *)
cast lr@sint32 lr;
smull tmp_h tmp_l lr r3;
uadds carry r12 tmp_l r12;
sadc r6 tmp_h r6 carry;
assert eqmod r12 0 (2**32) && true;
assume eq r12 0 && true;
(* vmov	r1, s14                                    #! PC = 0x8005bd0 *)
mov r1 s14;
(* smull	r12, r7, r7, r1                           #! PC = 0x8005bd4 *)
smull r7 r12 r7 r1;
(* mul.w	lr, r12, r2                               #! PC = 0x8005bd8 *)
cast r12_s@sint32 r12;
mull discard lr r12_s r2;
(* smlal	r12, r7, lr, r3                           #! PC = 0x8005bdc *)
cast lr@sint32 lr;
smull tmp_h tmp_l lr r3;
uadds carry r12 tmp_l r12;
sadc r7 tmp_h r7 carry;
assert eqmod r12 0 (2**32) && true;
assume eq r12 0 && true;
(* vmov	r1, s15                                    #! PC = 0x8005be0 *)
mov r1 s15;
(* smull	r12, r8, r8, r1                           #! PC = 0x8005be4 *)
smull r8 r12 r8 r1;
(* mul.w	lr, r12, r2                               #! PC = 0x8005be8 *)
cast r12_s@sint32 r12;
mull discard lr r12_s r2;
(* smlal	r12, r8, lr, r3                           #! PC = 0x8005bec *)
cast lr@sint32 lr;
smull tmp_h tmp_l lr r3;
uadds carry r12 tmp_l r12;
sadc r8 tmp_h r8 carry;
assert eqmod r12 0 (2**32) && true;
assume eq r12 0 && true;
(* vmov	r1, s16                                    #! PC = 0x8005bf0 *)
mov r1 s16;
(* smull	r12, r9, r9, r1                           #! PC = 0x8005bf4 *)
smull r9 r12 r9 r1;
(* mul.w	lr, r12, r2                               #! PC = 0x8005bf8 *)
cast r12_s@sint32 r12;
mull discard lr r12_s r2;
(* smlal	r12, r9, lr, r3                           #! PC = 0x8005bfc *)
cast lr@sint32 lr;
smull tmp_h tmp_l lr r3;
uadds carry r12 tmp_l r12;
sadc r9 tmp_h r9 carry;
assert eqmod r12 0 (2**32) && true;
assume eq r12 0 && true;
(* vmov	r1, s17                                    #! PC = 0x8005c00 *)
mov r1 s17;
(* smull	r12, r10, r10, r1                         #! PC = 0x8005c04 *)
smull r10 r12 r10 r1;
(* mul.w	lr, r12, r2                               #! PC = 0x8005c08 *)
cast r12_s@sint32 r12;
mull discard lr r12_s r2;
(* smlal	r12, r10, lr, r3                          #! PC = 0x8005c0c *)
cast lr@sint32 lr;
smull tmp_h tmp_l lr r3;
uadds carry r12 tmp_l r12;
sadc r10 tmp_h r10 carry;
assert eqmod r12 0 (2**32) && true;
assume eq r12 0 && true;
(* vmov	r1, s18                                    #! PC = 0x8005c10 *)
mov r1 s18;
(* smull	r12, r11, r11, r1                         #! PC = 0x8005c14 *)
smull r11 r12 r11 r1;
(* mul.w	lr, r12, r2                               #! PC = 0x8005c18 *)
cast r12_s@sint32 r12;
mull discard lr r12_s r2;
(* smlal	r12, r11, lr, r3                          #! PC = 0x8005c1c *)
cast lr@sint32 lr;
smull tmp_h tmp_l lr r3;
uadds carry r12 tmp_l r12;
sadc r11 tmp_h r11 carry;
assert eqmod r12 0 (2**32) && true;
assume eq r12 0 && true;
(* mov.w	r1, r3, lsr #1                            #! PC = 0x8005c20 *)
split r1 discard r3 1;
(* cmp	r4, r1                                      #! PC = 0x8005c24 *)
sub cmp r4 r1;
split sign discard cmp 31;
cast sign@bit sign;
cmov tmp sign 0@sint32 r3;
sub r4 r4 tmp;
(* cmn	r4, r1                                      #! PC = 0x8005c2a *)
add cmn r4 r1;
split sign discard cmn 31;
cast sign@bit sign;
cmov tmp sign r3 0@sint32;
add r4 r4 tmp;
(* cmp	r5, r1                                      #! PC = 0x8005c30 *)
sub cmp r5 r1;
split sign discard cmp 31;
cast sign@bit sign;
cmov tmp sign 0@sint32 r3;
sub r5 r5 tmp;
(* cmn	r5, r1                                      #! PC = 0x8005c36 *)
add cmn r5 r1;
split sign discard cmn 31;
cast sign@bit sign;
cmov tmp sign r3 0@sint32;
add r5 r5 tmp;
(* cmp	r6, r1                                      #! PC = 0x8005c3c *)
sub cmp r6 r1;
split sign discard cmp 31;
cast sign@bit sign;
cmov tmp sign 0@sint32 r3;
sub r6 r6 tmp;
(* cmn	r6, r1                                      #! PC = 0x8005c42 *)
add cmn r6 r1;
split sign discard cmn 31;
cast sign@bit sign;
cmov tmp sign r3 0@sint32;
add r6 r6 tmp;
(* cmp	r7, r1                                      #! PC = 0x8005c48 *)
sub cmp r7 r1;
split sign discard cmp 31;
cast sign@bit sign;
cmov tmp sign 0@sint32 r3;
sub r7 r7 tmp;
(* cmn	r7, r1                                      #! PC = 0x8005c4e *)
add cmn r7 r1;
split sign discard cmn 31;
cast sign@bit sign;
cmov tmp sign r3 0@sint32;
add r7 r7 tmp;
(* cmp	r8, r1                                      #! PC = 0x8005c54 *)
sub cmp r8 r1;
split sign discard cmp 31;
cast sign@bit sign;
cmov tmp sign 0@sint32 r3;
sub r8 r8 tmp;
(* cmn.w	r8, r1                                    #! PC = 0x8005c5c *)
add cmn r8 r1;
split sign discard cmn 31;
cast sign@bit sign;
cmov tmp sign r3 0@sint32;
add r8 r8 tmp;
(* cmp	r9, r1                                      #! PC = 0x8005c64 *)
sub cmp r9 r1;
split sign discard cmp 31;
cast sign@bit sign;
cmov tmp sign 0@sint32 r3;
sub r9 r9 tmp;
(* cmn.w	r9, r1                                    #! PC = 0x8005c6c *)
add cmn r9 r1;
split sign discard cmn 31;
cast sign@bit sign;
cmov tmp sign r3 0@sint32;
add r9 r9 tmp;
(* cmp	r10, r1                                     #! PC = 0x8005c74 *)
sub cmp r10 r1;
split sign discard cmp 31;
cast sign@bit sign;
cmov tmp sign 0@sint32 r3;
sub r10 r10 tmp;
(* cmn.w	r10, r1                                   #! PC = 0x8005c7c *)
add cmn r10 r1;
split sign discard cmn 31;
cast sign@bit sign;
cmov tmp sign r3 0@sint32;
add r10 r10 tmp;
(* cmp	r11, r1                                     #! PC = 0x8005c84 *)
sub cmp r11 r1;
split sign discard cmp 31;
cast sign@bit sign;
cmov tmp sign 0@sint32 r3;
sub r11 r11 tmp;
(* cmn.w	r11, r1                                   #! PC = 0x8005c8c *)
add cmn r11 r1;
split sign discard cmn 31;
cast sign@bit sign;
cmov tmp sign r3 0@sint32;
add r11 r11 tmp;
(* vmov	lr, s0                                     #! PC = 0x8005c94 *)
mov lr s0;
(* strh.w	r8, [lr, #256]	; 0x100                   #! EA = L0x20019982; PC = 0x8005c98 *)
ghost L0x20019982_f@sint32 : L0x20019982_f = r8 && L0x20019982_f = r8;
split discard L0x20019982_u r8 16;
cast L0x20019982@sint16 L0x20019982_u;
(* strh.w	r9, [lr, #320]	; 0x140                   #! EA = L0x200199c2; PC = 0x8005c9c *)
ghost L0x200199c2_f@sint32 : L0x200199c2_f = r9 && L0x200199c2_f = r9;
split discard L0x200199c2_u r9 16;
cast L0x200199c2@sint16 L0x200199c2_u;
(* strh.w	r10, [lr, #384]	; 0x180                  #! EA = L0x20019a02; PC = 0x8005ca0 *)
ghost L0x20019a02_f@sint32 : L0x20019a02_f = r10 && L0x20019a02_f = r10;
split discard L0x20019a02_u r10 16;
cast L0x20019a02@sint16 L0x20019a02_u;
(* strh.w	r11, [lr, #448]	; 0x1c0                  #! EA = L0x20019a42; PC = 0x8005ca4 *)
ghost L0x20019a42_f@sint32 : L0x20019a42_f = r11 && L0x20019a42_f = r11;
split discard L0x20019a42_u r11 16;
cast L0x20019a42@sint16 L0x20019a42_u;
(* strh.w	r5, [lr, #64]	; 0x40                     #! EA = L0x200198c2; PC = 0x8005ca8 *)
ghost L0x200198c2_f@sint32 : L0x200198c2_f = r5 && L0x200198c2_f = r5;
split discard L0x200198c2_u r5 16;
cast L0x200198c2@sint16 L0x200198c2_u;
(* strh.w	r6, [lr, #128]	; 0x80                    #! EA = L0x20019902; PC = 0x8005cac *)
ghost L0x20019902_f@sint32 : L0x20019902_f = r6 && L0x20019902_f = r6;
split discard L0x20019902_u r6 16;
cast L0x20019902@sint16 L0x20019902_u;
(* strh.w	r7, [lr, #192]	; 0xc0                    #! EA = L0x20019942; PC = 0x8005cb0 *)
ghost L0x20019942_f@sint32 : L0x20019942_f = r7 && L0x20019942_f = r7;
split discard L0x20019942_u r7 16;
cast L0x20019942@sint16 L0x20019942_u;
(* strh.w	r4, [lr], #2                             #! EA = L0x20019882; PC = 0x8005cb4 *)
ghost L0x20019882_f@sint32 : L0x20019882_f = r4 && L0x20019882_f = r4;
split discard L0x20019882_u r4 16;
cast L0x20019882@sint16 L0x20019882_u;
(* vmov	s0, lr                                     #! PC = 0x8005cb8 *)
mov s0 lr;
(* vmov	lr, s3                                     #! PC = 0x8005cbc *)
mov lr s3;
(* ldr.w	r8, [r0, #512]	; 0x200                    #! EA = L0x2001a4c0; Value = 0x00e453b3; PC = 0x800585c *)
mov r8 L0x2001a4c0;
(* ldr.w	r9, [r0, #640]	; 0x280                    #! EA = L0x2001a540; Value = 0xffceb681; PC = 0x8005860 *)
mov r9 L0x2001a540;
(* ldr.w	r10, [r0, #768]	; 0x300                   #! EA = L0x2001a5c0; Value = 0x031267c6; PC = 0x8005864 *)
mov r10 L0x2001a5c0;
(* ldr.w	r11, [r0, #896]	; 0x380                   #! EA = L0x2001a640; Value = 0xff196c9c; PC = 0x8005868 *)
mov r11 L0x2001a640;
(* ldr.w	r5, [r0, #128]	; 0x80                     #! EA = L0x2001a340; Value = 0x01d8eecf; PC = 0x800586c *)
mov r5 L0x2001a340;
(* ldr.w	r6, [r0, #256]	; 0x100                    #! EA = L0x2001a3c0; Value = 0x003ba494; PC = 0x8005870 *)
mov r6 L0x2001a3c0;
(* ldr.w	r7, [r0, #384]	; 0x180                    #! EA = L0x2001a440; Value = 0xfe5e5caf; PC = 0x8005874 *)
mov r7 L0x2001a440;
(* ldr.w	r4, [r0], #4                              #! EA = L0x2001a2c0; Value = 0x002d6773; PC = 0x8005878 *)
mov r4 L0x2001a2c0;
(* vmov	r1, s4                                     #! PC = 0x800587c *)
mov r1 s4;
(* smull	r12, r5, r5, r1                           #! PC = 0x8005880 *)
smull r5 r12 r5 r1;
(* mul.w	lr, r12, r2                               #! PC = 0x8005884 *)
cast r12_s@sint32 r12;
mull discard lr r12_s r2;
(* smlal	r12, r5, lr, r3                           #! PC = 0x8005888 *)
cast lr@sint32 lr;
smull tmp_h tmp_l lr r3;
uadds carry r12 tmp_l r12;
sadc r5 tmp_h r5 carry;
assert eqmod r12 0 (2**32) && true;
assume eq r12 0 && true;
(* smull	r12, r7, r7, r1                           #! PC = 0x800588c *)
smull r7 r12 r7 r1;
(* mul.w	lr, r12, r2                               #! PC = 0x8005890 *)
cast r12_s@sint32 r12;
mull discard lr r12_s r2;
(* smlal	r12, r7, lr, r3                           #! PC = 0x8005894 *)
cast lr@sint32 lr;
smull tmp_h tmp_l lr r3;
uadds carry r12 tmp_l r12;
sadc r7 tmp_h r7 carry;
assert eqmod r12 0 (2**32) && true;
assume eq r12 0 && true;
(* smull	r12, r9, r9, r1                           #! PC = 0x8005898 *)
smull r9 r12 r9 r1;
(* mul.w	lr, r12, r2                               #! PC = 0x800589c *)
cast r12_s@sint32 r12;
mull discard lr r12_s r2;
(* smlal	r12, r9, lr, r3                           #! PC = 0x80058a0 *)
cast lr@sint32 lr;
smull tmp_h tmp_l lr r3;
uadds carry r12 tmp_l r12;
sadc r9 tmp_h r9 carry;
assert eqmod r12 0 (2**32) && true;
assume eq r12 0 && true;
(* smull	r12, r11, r11, r1                         #! PC = 0x80058a4 *)
smull r11 r12 r11 r1;
(* mul.w	lr, r12, r2                               #! PC = 0x80058a8 *)
cast r12_s@sint32 r12;
mull discard lr r12_s r2;
(* smlal	r12, r11, lr, r3                          #! PC = 0x80058ac *)
cast lr@sint32 lr;
smull tmp_h tmp_l lr r3;
uadds carry r12 tmp_l r12;
sadc r11 tmp_h r11 carry;
assert eqmod r12 0 (2**32) && true;
assume eq r12 0 && true;
(* add	r4, r5                                      #! PC = 0x80058b0 *)
add r4 r4 r5;
(* add	r6, r7                                      #! PC = 0x80058b2 *)
add r6 r6 r7;
(* add	r8, r9                                      #! PC = 0x80058b4 *)
add r8 r8 r9;
(* add	r10, r11                                    #! PC = 0x80058b6 *)
add r10 r10 r11;
(* sub.w	r5, r4, r5, lsl #1                        #! PC = 0x80058b8 *)
shl tmp r5 1;
sub r5 r4 tmp;
(* sub.w	r7, r6, r7, lsl #1                        #! PC = 0x80058bc *)
shl tmp r7 1;
sub r7 r6 tmp;
(* sub.w	r9, r8, r9, lsl #1                        #! PC = 0x80058c0 *)
shl tmp r9 1;
sub r9 r8 tmp;
(* sub.w	r11, r10, r11, lsl #1                     #! PC = 0x80058c4 *)
shl tmp r11 1;
sub r11 r10 tmp;
(* vmov	r1, s5                                     #! PC = 0x80058c8 *)
mov r1 s5;
(* smull	r12, r6, r6, r1                           #! PC = 0x80058cc *)
smull r6 r12 r6 r1;
(* mul.w	lr, r12, r2                               #! PC = 0x80058d0 *)
cast r12_s@sint32 r12;
mull discard lr r12_s r2;
(* smlal	r12, r6, lr, r3                           #! PC = 0x80058d4 *)
cast lr@sint32 lr;
smull tmp_h tmp_l lr r3;
uadds carry r12 tmp_l r12;
sadc r6 tmp_h r6 carry;
assert eqmod r12 0 (2**32) && true;
assume eq r12 0 && true;
(* smull	r12, r10, r10, r1                         #! PC = 0x80058d8 *)
smull r10 r12 r10 r1;
(* mul.w	lr, r12, r2                               #! PC = 0x80058dc *)
cast r12_s@sint32 r12;
mull discard lr r12_s r2;
(* smlal	r12, r10, lr, r3                          #! PC = 0x80058e0 *)
cast lr@sint32 lr;
smull tmp_h tmp_l lr r3;
uadds carry r12 tmp_l r12;
sadc r10 tmp_h r10 carry;
assert eqmod r12 0 (2**32) && true;
assume eq r12 0 && true;
(* vmov	r1, s6                                     #! PC = 0x80058e4 *)
mov r1 s6;
(* smull	r12, r7, r7, r1                           #! PC = 0x80058e8 *)
smull r7 r12 r7 r1;
(* mul.w	lr, r12, r2                               #! PC = 0x80058ec *)
cast r12_s@sint32 r12;
mull discard lr r12_s r2;
(* smlal	r12, r7, lr, r3                           #! PC = 0x80058f0 *)
cast lr@sint32 lr;
smull tmp_h tmp_l lr r3;
uadds carry r12 tmp_l r12;
sadc r7 tmp_h r7 carry;
assert eqmod r12 0 (2**32) && true;
assume eq r12 0 && true;
(* smull	r12, r11, r11, r1                         #! PC = 0x80058f4 *)
smull r11 r12 r11 r1;
(* mul.w	lr, r12, r2                               #! PC = 0x80058f8 *)
cast r12_s@sint32 r12;
mull discard lr r12_s r2;
(* smlal	r12, r11, lr, r3                          #! PC = 0x80058fc *)
cast lr@sint32 lr;
smull tmp_h tmp_l lr r3;
uadds carry r12 tmp_l r12;
sadc r11 tmp_h r11 carry;
assert eqmod r12 0 (2**32) && true;
assume eq r12 0 && true;
(* add	r4, r6                                      #! PC = 0x8005900 *)
add r4 r4 r6;
(* add	r5, r7                                      #! PC = 0x8005902 *)
add r5 r5 r7;
(* add	r8, r10                                     #! PC = 0x8005904 *)
add r8 r8 r10;
(* add	r9, r11                                     #! PC = 0x8005906 *)
add r9 r9 r11;
(* sub.w	r6, r4, r6, lsl #1                        #! PC = 0x8005908 *)
shl tmp r6 1;
sub r6 r4 tmp;
(* sub.w	r7, r5, r7, lsl #1                        #! PC = 0x800590c *)
shl tmp r7 1;
sub r7 r5 tmp;
(* sub.w	r10, r8, r10, lsl #1                      #! PC = 0x8005910 *)
shl tmp r10 1;
sub r10 r8 tmp;
(* sub.w	r11, r9, r11, lsl #1                      #! PC = 0x8005914 *)
shl tmp r11 1;
sub r11 r9 tmp;
(* vmov	r1, s7                                     #! PC = 0x8005918 *)
mov r1 s7;
(* smull	r12, r8, r8, r1                           #! PC = 0x800591c *)
smull r8 r12 r8 r1;
(* mul.w	lr, r12, r2                               #! PC = 0x8005920 *)
cast r12_s@sint32 r12;
mull discard lr r12_s r2;
(* smlal	r12, r8, lr, r3                           #! PC = 0x8005924 *)
cast lr@sint32 lr;
smull tmp_h tmp_l lr r3;
uadds carry r12 tmp_l r12;
sadc r8 tmp_h r8 carry;
assert eqmod r12 0 (2**32) && true;
assume eq r12 0 && true;
(* vmov	r1, s8                                     #! PC = 0x8005928 *)
mov r1 s8;
(* smull	r12, r9, r9, r1                           #! PC = 0x800592c *)
smull r9 r12 r9 r1;
(* mul.w	lr, r12, r2                               #! PC = 0x8005930 *)
cast r12_s@sint32 r12;
mull discard lr r12_s r2;
(* smlal	r12, r9, lr, r3                           #! PC = 0x8005934 *)
cast lr@sint32 lr;
smull tmp_h tmp_l lr r3;
uadds carry r12 tmp_l r12;
sadc r9 tmp_h r9 carry;
assert eqmod r12 0 (2**32) && true;
assume eq r12 0 && true;
(* vmov	r1, s9                                     #! PC = 0x8005938 *)
mov r1 s9;
(* smull	r12, r10, r10, r1                         #! PC = 0x800593c *)
smull r10 r12 r10 r1;
(* mul.w	lr, r12, r2                               #! PC = 0x8005940 *)
cast r12_s@sint32 r12;
mull discard lr r12_s r2;
(* smlal	r12, r10, lr, r3                          #! PC = 0x8005944 *)
cast lr@sint32 lr;
smull tmp_h tmp_l lr r3;
uadds carry r12 tmp_l r12;
sadc r10 tmp_h r10 carry;
assert eqmod r12 0 (2**32) && true;
assume eq r12 0 && true;
(* vmov	r1, s10                                    #! PC = 0x8005948 *)
mov r1 s10;
(* smull	r12, r11, r11, r1                         #! PC = 0x800594c *)
smull r11 r12 r11 r1;
(* mul.w	lr, r12, r2                               #! PC = 0x8005950 *)
cast r12_s@sint32 r12;
mull discard lr r12_s r2;
(* smlal	r12, r11, lr, r3                          #! PC = 0x8005954 *)
cast lr@sint32 lr;
smull tmp_h tmp_l lr r3;
uadds carry r12 tmp_l r12;
sadc r11 tmp_h r11 carry;
assert eqmod r12 0 (2**32) && true;
assume eq r12 0 && true;
(* add	r4, r8                                      #! PC = 0x8005958 *)
add r4 r4 r8;
(* add	r5, r9                                      #! PC = 0x800595a *)
add r5 r5 r9;
(* add	r6, r10                                     #! PC = 0x800595c *)
add r6 r6 r10;
(* add	r7, r11                                     #! PC = 0x800595e *)
add r7 r7 r11;
(* sub.w	r8, r4, r8, lsl #1                        #! PC = 0x8005960 *)
shl tmp r8 1;
sub r8 r4 tmp;
(* sub.w	r9, r5, r9, lsl #1                        #! PC = 0x8005964 *)
shl tmp r9 1;
sub r9 r5 tmp;
(* sub.w	r10, r6, r10, lsl #1                      #! PC = 0x8005968 *)
shl tmp r10 1;
sub r10 r6 tmp;
(* sub.w	r11, r7, r11, lsl #1                      #! PC = 0x800596c *)
shl tmp r11 1;
sub r11 r7 tmp;
(* vmov	r1, s11                                    #! PC = 0x8005970 *)
mov r1 s11;
(* smull	r12, r4, r4, r1                           #! PC = 0x8005974 *)
smull r4 r12 r4 r1;
(* mul.w	lr, r12, r2                               #! PC = 0x8005978 *)
cast r12_s@sint32 r12;
mull discard lr r12_s r2;
(* smlal	r12, r4, lr, r3                           #! PC = 0x800597c *)
cast lr@sint32 lr;
smull tmp_h tmp_l lr r3;
uadds carry r12 tmp_l r12;
sadc r4 tmp_h r4 carry;
assert eqmod r12 0 (2**32) && true;
assume eq r12 0 && true;
(* vmov	r1, s12                                    #! PC = 0x8005980 *)
mov r1 s12;
(* smull	r12, r5, r5, r1                           #! PC = 0x8005984 *)
smull r5 r12 r5 r1;
(* mul.w	lr, r12, r2                               #! PC = 0x8005988 *)
cast r12_s@sint32 r12;
mull discard lr r12_s r2;
(* smlal	r12, r5, lr, r3                           #! PC = 0x800598c *)
cast lr@sint32 lr;
smull tmp_h tmp_l lr r3;
uadds carry r12 tmp_l r12;
sadc r5 tmp_h r5 carry;
assert eqmod r12 0 (2**32) && true;
assume eq r12 0 && true;
(* vmov	r1, s13                                    #! PC = 0x8005990 *)
mov r1 s13;
(* smull	r12, r6, r6, r1                           #! PC = 0x8005994 *)
smull r6 r12 r6 r1;
(* mul.w	lr, r12, r2                               #! PC = 0x8005998 *)
cast r12_s@sint32 r12;
mull discard lr r12_s r2;
(* smlal	r12, r6, lr, r3                           #! PC = 0x800599c *)
cast lr@sint32 lr;
smull tmp_h tmp_l lr r3;
uadds carry r12 tmp_l r12;
sadc r6 tmp_h r6 carry;
assert eqmod r12 0 (2**32) && true;
assume eq r12 0 && true;
(* vmov	r1, s14                                    #! PC = 0x80059a0 *)
mov r1 s14;
(* smull	r12, r7, r7, r1                           #! PC = 0x80059a4 *)
smull r7 r12 r7 r1;
(* mul.w	lr, r12, r2                               #! PC = 0x80059a8 *)
cast r12_s@sint32 r12;
mull discard lr r12_s r2;
(* smlal	r12, r7, lr, r3                           #! PC = 0x80059ac *)
cast lr@sint32 lr;
smull tmp_h tmp_l lr r3;
uadds carry r12 tmp_l r12;
sadc r7 tmp_h r7 carry;
assert eqmod r12 0 (2**32) && true;
assume eq r12 0 && true;
(* vmov	r1, s15                                    #! PC = 0x80059b0 *)
mov r1 s15;
(* smull	r12, r8, r8, r1                           #! PC = 0x80059b4 *)
smull r8 r12 r8 r1;
(* mul.w	lr, r12, r2                               #! PC = 0x80059b8 *)
cast r12_s@sint32 r12;
mull discard lr r12_s r2;
(* smlal	r12, r8, lr, r3                           #! PC = 0x80059bc *)
cast lr@sint32 lr;
smull tmp_h tmp_l lr r3;
uadds carry r12 tmp_l r12;
sadc r8 tmp_h r8 carry;
assert eqmod r12 0 (2**32) && true;
assume eq r12 0 && true;
(* vmov	r1, s16                                    #! PC = 0x80059c0 *)
mov r1 s16;
(* smull	r12, r9, r9, r1                           #! PC = 0x80059c4 *)
smull r9 r12 r9 r1;
(* mul.w	lr, r12, r2                               #! PC = 0x80059c8 *)
cast r12_s@sint32 r12;
mull discard lr r12_s r2;
(* smlal	r12, r9, lr, r3                           #! PC = 0x80059cc *)
cast lr@sint32 lr;
smull tmp_h tmp_l lr r3;
uadds carry r12 tmp_l r12;
sadc r9 tmp_h r9 carry;
assert eqmod r12 0 (2**32) && true;
assume eq r12 0 && true;
(* vmov	r1, s17                                    #! PC = 0x80059d0 *)
mov r1 s17;
(* smull	r12, r10, r10, r1                         #! PC = 0x80059d4 *)
smull r10 r12 r10 r1;
(* mul.w	lr, r12, r2                               #! PC = 0x80059d8 *)
cast r12_s@sint32 r12;
mull discard lr r12_s r2;
(* smlal	r12, r10, lr, r3                          #! PC = 0x80059dc *)
cast lr@sint32 lr;
smull tmp_h tmp_l lr r3;
uadds carry r12 tmp_l r12;
sadc r10 tmp_h r10 carry;
assert eqmod r12 0 (2**32) && true;
assume eq r12 0 && true;
(* vmov	r1, s18                                    #! PC = 0x80059e0 *)
mov r1 s18;
(* smull	r12, r11, r11, r1                         #! PC = 0x80059e4 *)
smull r11 r12 r11 r1;
(* mul.w	lr, r12, r2                               #! PC = 0x80059e8 *)
cast r12_s@sint32 r12;
mull discard lr r12_s r2;
(* smlal	r12, r11, lr, r3                          #! PC = 0x80059ec *)
cast lr@sint32 lr;
smull tmp_h tmp_l lr r3;
uadds carry r12 tmp_l r12;
sadc r11 tmp_h r11 carry;
assert eqmod r12 0 (2**32) && true;
assume eq r12 0 && true;
(* mov.w	r1, r3, lsr #1                            #! PC = 0x80059f0 *)
split r1 discard r3 1;
(* cmp	r4, r1                                      #! PC = 0x80059f4 *)
sub cmp r4 r1;
split sign discard cmp 31;
cast sign@bit sign;
cmov tmp sign 0@sint32 r3;
sub r4 r4 tmp;
(* cmn	r4, r1                                      #! PC = 0x80059fa *)
add cmn r4 r1;
split sign discard cmn 31;
cast sign@bit sign;
cmov tmp sign r3 0@sint32;
add r4 r4 tmp;
(* cmp	r5, r1                                      #! PC = 0x8005a00 *)
sub cmp r5 r1;
split sign discard cmp 31;
cast sign@bit sign;
cmov tmp sign 0@sint32 r3;
sub r5 r5 tmp;
(* cmn	r5, r1                                      #! PC = 0x8005a06 *)
add cmn r5 r1;
split sign discard cmn 31;
cast sign@bit sign;
cmov tmp sign r3 0@sint32;
add r5 r5 tmp;
(* cmp	r6, r1                                      #! PC = 0x8005a0c *)
sub cmp r6 r1;
split sign discard cmp 31;
cast sign@bit sign;
cmov tmp sign 0@sint32 r3;
sub r6 r6 tmp;
(* cmn	r6, r1                                      #! PC = 0x8005a12 *)
add cmn r6 r1;
split sign discard cmn 31;
cast sign@bit sign;
cmov tmp sign r3 0@sint32;
add r6 r6 tmp;
(* cmp	r7, r1                                      #! PC = 0x8005a18 *)
sub cmp r7 r1;
split sign discard cmp 31;
cast sign@bit sign;
cmov tmp sign 0@sint32 r3;
sub r7 r7 tmp;
(* cmn	r7, r1                                      #! PC = 0x8005a1e *)
add cmn r7 r1;
split sign discard cmn 31;
cast sign@bit sign;
cmov tmp sign r3 0@sint32;
add r7 r7 tmp;
(* cmp	r8, r1                                      #! PC = 0x8005a24 *)
sub cmp r8 r1;
split sign discard cmp 31;
cast sign@bit sign;
cmov tmp sign 0@sint32 r3;
sub r8 r8 tmp;
(* cmn.w	r8, r1                                    #! PC = 0x8005a2c *)
add cmn r8 r1;
split sign discard cmn 31;
cast sign@bit sign;
cmov tmp sign r3 0@sint32;
add r8 r8 tmp;
(* cmp	r9, r1                                      #! PC = 0x8005a34 *)
sub cmp r9 r1;
split sign discard cmp 31;
cast sign@bit sign;
cmov tmp sign 0@sint32 r3;
sub r9 r9 tmp;
(* cmn.w	r9, r1                                    #! PC = 0x8005a3c *)
add cmn r9 r1;
split sign discard cmn 31;
cast sign@bit sign;
cmov tmp sign r3 0@sint32;
add r9 r9 tmp;
(* cmp	r10, r1                                     #! PC = 0x8005a44 *)
sub cmp r10 r1;
split sign discard cmp 31;
cast sign@bit sign;
cmov tmp sign 0@sint32 r3;
sub r10 r10 tmp;
(* cmn.w	r10, r1                                   #! PC = 0x8005a4c *)
add cmn r10 r1;
split sign discard cmn 31;
cast sign@bit sign;
cmov tmp sign r3 0@sint32;
add r10 r10 tmp;
(* cmp	r11, r1                                     #! PC = 0x8005a54 *)
sub cmp r11 r1;
split sign discard cmp 31;
cast sign@bit sign;
cmov tmp sign 0@sint32 r3;
sub r11 r11 tmp;
(* cmn.w	r11, r1                                   #! PC = 0x8005a5c *)
add cmn r11 r1;
split sign discard cmn 31;
cast sign@bit sign;
cmov tmp sign r3 0@sint32;
add r11 r11 tmp;
(* vmov	lr, s0                                     #! PC = 0x8005a64 *)
mov lr s0;
(* strh.w	r8, [lr, #256]	; 0x100                   #! EA = L0x20019984; PC = 0x8005a68 *)
ghost L0x20019984_f@sint32 : L0x20019984_f = r8 && L0x20019984_f = r8;
split discard L0x20019984_u r8 16;
cast L0x20019984@sint16 L0x20019984_u;
(* strh.w	r9, [lr, #320]	; 0x140                   #! EA = L0x200199c4; PC = 0x8005a6c *)
ghost L0x200199c4_f@sint32 : L0x200199c4_f = r9 && L0x200199c4_f = r9;
split discard L0x200199c4_u r9 16;
cast L0x200199c4@sint16 L0x200199c4_u;
(* strh.w	r10, [lr, #384]	; 0x180                  #! EA = L0x20019a04; PC = 0x8005a70 *)
ghost L0x20019a04_f@sint32 : L0x20019a04_f = r10 && L0x20019a04_f = r10;
split discard L0x20019a04_u r10 16;
cast L0x20019a04@sint16 L0x20019a04_u;
(* strh.w	r11, [lr, #448]	; 0x1c0                  #! EA = L0x20019a44; PC = 0x8005a74 *)
ghost L0x20019a44_f@sint32 : L0x20019a44_f = r11 && L0x20019a44_f = r11;
split discard L0x20019a44_u r11 16;
cast L0x20019a44@sint16 L0x20019a44_u;
(* strh.w	r5, [lr, #64]	; 0x40                     #! EA = L0x200198c4; PC = 0x8005a78 *)
ghost L0x200198c4_f@sint32 : L0x200198c4_f = r5 && L0x200198c4_f = r5;
split discard L0x200198c4_u r5 16;
cast L0x200198c4@sint16 L0x200198c4_u;
(* strh.w	r6, [lr, #128]	; 0x80                    #! EA = L0x20019904; PC = 0x8005a7c *)
ghost L0x20019904_f@sint32 : L0x20019904_f = r6 && L0x20019904_f = r6;
split discard L0x20019904_u r6 16;
cast L0x20019904@sint16 L0x20019904_u;
(* strh.w	r7, [lr, #192]	; 0xc0                    #! EA = L0x20019944; PC = 0x8005a80 *)
ghost L0x20019944_f@sint32 : L0x20019944_f = r7 && L0x20019944_f = r7;
split discard L0x20019944_u r7 16;
cast L0x20019944@sint16 L0x20019944_u;
(* strh.w	r4, [lr], #2                             #! EA = L0x20019884; PC = 0x8005a84 *)
ghost L0x20019884_f@sint32 : L0x20019884_f = r4 && L0x20019884_f = r4;
split discard L0x20019884_u r4 16;
cast L0x20019884@sint16 L0x20019884_u;
(* vmov	s0, lr                                     #! PC = 0x8005a88 *)
mov s0 lr;
(* ldr.w	r8, [r0, #512]	; 0x200                    #! EA = L0x2001a4c4; Value = 0xfda87f85; PC = 0x8005a8c *)
mov r8 L0x2001a4c4;
(* ldr.w	r9, [r0, #640]	; 0x280                    #! EA = L0x2001a544; Value = 0x014d4aca; PC = 0x8005a90 *)
mov r9 L0x2001a544;
(* ldr.w	r10, [r0, #768]	; 0x300                   #! EA = L0x2001a5c4; Value = 0xff1f1160; PC = 0x8005a94 *)
mov r10 L0x2001a5c4;
(* ldr.w	r11, [r0, #896]	; 0x380                   #! EA = L0x2001a644; Value = 0xfd4f941c; PC = 0x8005a98 *)
mov r11 L0x2001a644;
(* ldr.w	r5, [r0, #128]	; 0x80                     #! EA = L0x2001a344; Value = 0x0082ad2c; PC = 0x8005a9c *)
mov r5 L0x2001a344;
(* ldr.w	r6, [r0, #256]	; 0x100                    #! EA = L0x2001a3c4; Value = 0x01a1bb8d; PC = 0x8005aa0 *)
mov r6 L0x2001a3c4;
(* ldr.w	r7, [r0, #384]	; 0x180                    #! EA = L0x2001a444; Value = 0xfec3c120; PC = 0x8005aa4 *)
mov r7 L0x2001a444;
(* ldr.w	r4, [r0], #4                              #! EA = L0x2001a2c4; Value = 0xff3805ac; PC = 0x8005aa8 *)
mov r4 L0x2001a2c4;
(* vmov	r1, s4                                     #! PC = 0x8005aac *)
mov r1 s4;
(* smull	r12, r5, r5, r1                           #! PC = 0x8005ab0 *)
smull r5 r12 r5 r1;
(* mul.w	lr, r12, r2                               #! PC = 0x8005ab4 *)
cast r12_s@sint32 r12;
mull discard lr r12_s r2;
(* smlal	r12, r5, lr, r3                           #! PC = 0x8005ab8 *)
cast lr@sint32 lr;
smull tmp_h tmp_l lr r3;
uadds carry r12 tmp_l r12;
sadc r5 tmp_h r5 carry;
assert eqmod r12 0 (2**32) && true;
assume eq r12 0 && true;
(* smull	r12, r7, r7, r1                           #! PC = 0x8005abc *)
smull r7 r12 r7 r1;
(* mul.w	lr, r12, r2                               #! PC = 0x8005ac0 *)
cast r12_s@sint32 r12;
mull discard lr r12_s r2;
(* smlal	r12, r7, lr, r3                           #! PC = 0x8005ac4 *)
cast lr@sint32 lr;
smull tmp_h tmp_l lr r3;
uadds carry r12 tmp_l r12;
sadc r7 tmp_h r7 carry;
assert eqmod r12 0 (2**32) && true;
assume eq r12 0 && true;
(* smull	r12, r9, r9, r1                           #! PC = 0x8005ac8 *)
smull r9 r12 r9 r1;
(* mul.w	lr, r12, r2                               #! PC = 0x8005acc *)
cast r12_s@sint32 r12;
mull discard lr r12_s r2;
(* smlal	r12, r9, lr, r3                           #! PC = 0x8005ad0 *)
cast lr@sint32 lr;
smull tmp_h tmp_l lr r3;
uadds carry r12 tmp_l r12;
sadc r9 tmp_h r9 carry;
assert eqmod r12 0 (2**32) && true;
assume eq r12 0 && true;
(* smull	r12, r11, r11, r1                         #! PC = 0x8005ad4 *)
smull r11 r12 r11 r1;
(* mul.w	lr, r12, r2                               #! PC = 0x8005ad8 *)
cast r12_s@sint32 r12;
mull discard lr r12_s r2;
(* smlal	r12, r11, lr, r3                          #! PC = 0x8005adc *)
cast lr@sint32 lr;
smull tmp_h tmp_l lr r3;
uadds carry r12 tmp_l r12;
sadc r11 tmp_h r11 carry;
assert eqmod r12 0 (2**32) && true;
assume eq r12 0 && true;
(* add	r4, r5                                      #! PC = 0x8005ae0 *)
add r4 r4 r5;
(* add	r6, r7                                      #! PC = 0x8005ae2 *)
add r6 r6 r7;
(* add	r8, r9                                      #! PC = 0x8005ae4 *)
add r8 r8 r9;
(* add	r10, r11                                    #! PC = 0x8005ae6 *)
add r10 r10 r11;
(* sub.w	r5, r4, r5, lsl #1                        #! PC = 0x8005ae8 *)
shl tmp r5 1;
sub r5 r4 tmp;
(* sub.w	r7, r6, r7, lsl #1                        #! PC = 0x8005aec *)
shl tmp r7 1;
sub r7 r6 tmp;
(* sub.w	r9, r8, r9, lsl #1                        #! PC = 0x8005af0 *)
shl tmp r9 1;
sub r9 r8 tmp;
(* sub.w	r11, r10, r11, lsl #1                     #! PC = 0x8005af4 *)
shl tmp r11 1;
sub r11 r10 tmp;
(* vmov	r1, s5                                     #! PC = 0x8005af8 *)
mov r1 s5;
(* smull	r12, r6, r6, r1                           #! PC = 0x8005afc *)
smull r6 r12 r6 r1;
(* mul.w	lr, r12, r2                               #! PC = 0x8005b00 *)
cast r12_s@sint32 r12;
mull discard lr r12_s r2;
(* smlal	r12, r6, lr, r3                           #! PC = 0x8005b04 *)
cast lr@sint32 lr;
smull tmp_h tmp_l lr r3;
uadds carry r12 tmp_l r12;
sadc r6 tmp_h r6 carry;
assert eqmod r12 0 (2**32) && true;
assume eq r12 0 && true;
(* smull	r12, r10, r10, r1                         #! PC = 0x8005b08 *)
smull r10 r12 r10 r1;
(* mul.w	lr, r12, r2                               #! PC = 0x8005b0c *)
cast r12_s@sint32 r12;
mull discard lr r12_s r2;
(* smlal	r12, r10, lr, r3                          #! PC = 0x8005b10 *)
cast lr@sint32 lr;
smull tmp_h tmp_l lr r3;
uadds carry r12 tmp_l r12;
sadc r10 tmp_h r10 carry;
assert eqmod r12 0 (2**32) && true;
assume eq r12 0 && true;
(* vmov	r1, s6                                     #! PC = 0x8005b14 *)
mov r1 s6;
(* smull	r12, r7, r7, r1                           #! PC = 0x8005b18 *)
smull r7 r12 r7 r1;
(* mul.w	lr, r12, r2                               #! PC = 0x8005b1c *)
cast r12_s@sint32 r12;
mull discard lr r12_s r2;
(* smlal	r12, r7, lr, r3                           #! PC = 0x8005b20 *)
cast lr@sint32 lr;
smull tmp_h tmp_l lr r3;
uadds carry r12 tmp_l r12;
sadc r7 tmp_h r7 carry;
assert eqmod r12 0 (2**32) && true;
assume eq r12 0 && true;
(* smull	r12, r11, r11, r1                         #! PC = 0x8005b24 *)
smull r11 r12 r11 r1;
(* mul.w	lr, r12, r2                               #! PC = 0x8005b28 *)
cast r12_s@sint32 r12;
mull discard lr r12_s r2;
(* smlal	r12, r11, lr, r3                          #! PC = 0x8005b2c *)
cast lr@sint32 lr;
smull tmp_h tmp_l lr r3;
uadds carry r12 tmp_l r12;
sadc r11 tmp_h r11 carry;
assert eqmod r12 0 (2**32) && true;
assume eq r12 0 && true;
(* add	r4, r6                                      #! PC = 0x8005b30 *)
add r4 r4 r6;
(* add	r5, r7                                      #! PC = 0x8005b32 *)
add r5 r5 r7;
(* add	r8, r10                                     #! PC = 0x8005b34 *)
add r8 r8 r10;
(* add	r9, r11                                     #! PC = 0x8005b36 *)
add r9 r9 r11;
(* sub.w	r6, r4, r6, lsl #1                        #! PC = 0x8005b38 *)
shl tmp r6 1;
sub r6 r4 tmp;
(* sub.w	r7, r5, r7, lsl #1                        #! PC = 0x8005b3c *)
shl tmp r7 1;
sub r7 r5 tmp;
(* sub.w	r10, r8, r10, lsl #1                      #! PC = 0x8005b40 *)
shl tmp r10 1;
sub r10 r8 tmp;
(* sub.w	r11, r9, r11, lsl #1                      #! PC = 0x8005b44 *)
shl tmp r11 1;
sub r11 r9 tmp;
(* vmov	r1, s7                                     #! PC = 0x8005b48 *)
mov r1 s7;
(* smull	r12, r8, r8, r1                           #! PC = 0x8005b4c *)
smull r8 r12 r8 r1;
(* mul.w	lr, r12, r2                               #! PC = 0x8005b50 *)
cast r12_s@sint32 r12;
mull discard lr r12_s r2;
(* smlal	r12, r8, lr, r3                           #! PC = 0x8005b54 *)
cast lr@sint32 lr;
smull tmp_h tmp_l lr r3;
uadds carry r12 tmp_l r12;
sadc r8 tmp_h r8 carry;
assert eqmod r12 0 (2**32) && true;
assume eq r12 0 && true;
(* vmov	r1, s8                                     #! PC = 0x8005b58 *)
mov r1 s8;
(* smull	r12, r9, r9, r1                           #! PC = 0x8005b5c *)
smull r9 r12 r9 r1;
(* mul.w	lr, r12, r2                               #! PC = 0x8005b60 *)
cast r12_s@sint32 r12;
mull discard lr r12_s r2;
(* smlal	r12, r9, lr, r3                           #! PC = 0x8005b64 *)
cast lr@sint32 lr;
smull tmp_h tmp_l lr r3;
uadds carry r12 tmp_l r12;
sadc r9 tmp_h r9 carry;
assert eqmod r12 0 (2**32) && true;
assume eq r12 0 && true;
(* vmov	r1, s9                                     #! PC = 0x8005b68 *)
mov r1 s9;
(* smull	r12, r10, r10, r1                         #! PC = 0x8005b6c *)
smull r10 r12 r10 r1;
(* mul.w	lr, r12, r2                               #! PC = 0x8005b70 *)
cast r12_s@sint32 r12;
mull discard lr r12_s r2;
(* smlal	r12, r10, lr, r3                          #! PC = 0x8005b74 *)
cast lr@sint32 lr;
smull tmp_h tmp_l lr r3;
uadds carry r12 tmp_l r12;
sadc r10 tmp_h r10 carry;
assert eqmod r12 0 (2**32) && true;
assume eq r12 0 && true;
(* vmov	r1, s10                                    #! PC = 0x8005b78 *)
mov r1 s10;
(* smull	r12, r11, r11, r1                         #! PC = 0x8005b7c *)
smull r11 r12 r11 r1;
(* mul.w	lr, r12, r2                               #! PC = 0x8005b80 *)
cast r12_s@sint32 r12;
mull discard lr r12_s r2;
(* smlal	r12, r11, lr, r3                          #! PC = 0x8005b84 *)
cast lr@sint32 lr;
smull tmp_h tmp_l lr r3;
uadds carry r12 tmp_l r12;
sadc r11 tmp_h r11 carry;
assert eqmod r12 0 (2**32) && true;
assume eq r12 0 && true;
(* add	r4, r8                                      #! PC = 0x8005b88 *)
add r4 r4 r8;
(* add	r5, r9                                      #! PC = 0x8005b8a *)
add r5 r5 r9;
(* add	r6, r10                                     #! PC = 0x8005b8c *)
add r6 r6 r10;
(* add	r7, r11                                     #! PC = 0x8005b8e *)
add r7 r7 r11;
(* sub.w	r8, r4, r8, lsl #1                        #! PC = 0x8005b90 *)
shl tmp r8 1;
sub r8 r4 tmp;
(* sub.w	r9, r5, r9, lsl #1                        #! PC = 0x8005b94 *)
shl tmp r9 1;
sub r9 r5 tmp;
(* sub.w	r10, r6, r10, lsl #1                      #! PC = 0x8005b98 *)
shl tmp r10 1;
sub r10 r6 tmp;
(* sub.w	r11, r7, r11, lsl #1                      #! PC = 0x8005b9c *)
shl tmp r11 1;
sub r11 r7 tmp;
(* vmov	r1, s11                                    #! PC = 0x8005ba0 *)
mov r1 s11;
(* smull	r12, r4, r4, r1                           #! PC = 0x8005ba4 *)
smull r4 r12 r4 r1;
(* mul.w	lr, r12, r2                               #! PC = 0x8005ba8 *)
cast r12_s@sint32 r12;
mull discard lr r12_s r2;
(* smlal	r12, r4, lr, r3                           #! PC = 0x8005bac *)
cast lr@sint32 lr;
smull tmp_h tmp_l lr r3;
uadds carry r12 tmp_l r12;
sadc r4 tmp_h r4 carry;
assert eqmod r12 0 (2**32) && true;
assume eq r12 0 && true;
(* vmov	r1, s12                                    #! PC = 0x8005bb0 *)
mov r1 s12;
(* smull	r12, r5, r5, r1                           #! PC = 0x8005bb4 *)
smull r5 r12 r5 r1;
(* mul.w	lr, r12, r2                               #! PC = 0x8005bb8 *)
cast r12_s@sint32 r12;
mull discard lr r12_s r2;
(* smlal	r12, r5, lr, r3                           #! PC = 0x8005bbc *)
cast lr@sint32 lr;
smull tmp_h tmp_l lr r3;
uadds carry r12 tmp_l r12;
sadc r5 tmp_h r5 carry;
assert eqmod r12 0 (2**32) && true;
assume eq r12 0 && true;
(* vmov	r1, s13                                    #! PC = 0x8005bc0 *)
mov r1 s13;
(* smull	r12, r6, r6, r1                           #! PC = 0x8005bc4 *)
smull r6 r12 r6 r1;
(* mul.w	lr, r12, r2                               #! PC = 0x8005bc8 *)
cast r12_s@sint32 r12;
mull discard lr r12_s r2;
(* smlal	r12, r6, lr, r3                           #! PC = 0x8005bcc *)
cast lr@sint32 lr;
smull tmp_h tmp_l lr r3;
uadds carry r12 tmp_l r12;
sadc r6 tmp_h r6 carry;
assert eqmod r12 0 (2**32) && true;
assume eq r12 0 && true;
(* vmov	r1, s14                                    #! PC = 0x8005bd0 *)
mov r1 s14;
(* smull	r12, r7, r7, r1                           #! PC = 0x8005bd4 *)
smull r7 r12 r7 r1;
(* mul.w	lr, r12, r2                               #! PC = 0x8005bd8 *)
cast r12_s@sint32 r12;
mull discard lr r12_s r2;
(* smlal	r12, r7, lr, r3                           #! PC = 0x8005bdc *)
cast lr@sint32 lr;
smull tmp_h tmp_l lr r3;
uadds carry r12 tmp_l r12;
sadc r7 tmp_h r7 carry;
assert eqmod r12 0 (2**32) && true;
assume eq r12 0 && true;
(* vmov	r1, s15                                    #! PC = 0x8005be0 *)
mov r1 s15;
(* smull	r12, r8, r8, r1                           #! PC = 0x8005be4 *)
smull r8 r12 r8 r1;
(* mul.w	lr, r12, r2                               #! PC = 0x8005be8 *)
cast r12_s@sint32 r12;
mull discard lr r12_s r2;
(* smlal	r12, r8, lr, r3                           #! PC = 0x8005bec *)
cast lr@sint32 lr;
smull tmp_h tmp_l lr r3;
uadds carry r12 tmp_l r12;
sadc r8 tmp_h r8 carry;
assert eqmod r12 0 (2**32) && true;
assume eq r12 0 && true;
(* vmov	r1, s16                                    #! PC = 0x8005bf0 *)
mov r1 s16;
(* smull	r12, r9, r9, r1                           #! PC = 0x8005bf4 *)
smull r9 r12 r9 r1;
(* mul.w	lr, r12, r2                               #! PC = 0x8005bf8 *)
cast r12_s@sint32 r12;
mull discard lr r12_s r2;
(* smlal	r12, r9, lr, r3                           #! PC = 0x8005bfc *)
cast lr@sint32 lr;
smull tmp_h tmp_l lr r3;
uadds carry r12 tmp_l r12;
sadc r9 tmp_h r9 carry;
assert eqmod r12 0 (2**32) && true;
assume eq r12 0 && true;
(* vmov	r1, s17                                    #! PC = 0x8005c00 *)
mov r1 s17;
(* smull	r12, r10, r10, r1                         #! PC = 0x8005c04 *)
smull r10 r12 r10 r1;
(* mul.w	lr, r12, r2                               #! PC = 0x8005c08 *)
cast r12_s@sint32 r12;
mull discard lr r12_s r2;
(* smlal	r12, r10, lr, r3                          #! PC = 0x8005c0c *)
cast lr@sint32 lr;
smull tmp_h tmp_l lr r3;
uadds carry r12 tmp_l r12;
sadc r10 tmp_h r10 carry;
assert eqmod r12 0 (2**32) && true;
assume eq r12 0 && true;
(* vmov	r1, s18                                    #! PC = 0x8005c10 *)
mov r1 s18;
(* smull	r12, r11, r11, r1                         #! PC = 0x8005c14 *)
smull r11 r12 r11 r1;
(* mul.w	lr, r12, r2                               #! PC = 0x8005c18 *)
cast r12_s@sint32 r12;
mull discard lr r12_s r2;
(* smlal	r12, r11, lr, r3                          #! PC = 0x8005c1c *)
cast lr@sint32 lr;
smull tmp_h tmp_l lr r3;
uadds carry r12 tmp_l r12;
sadc r11 tmp_h r11 carry;
assert eqmod r12 0 (2**32) && true;
assume eq r12 0 && true;
(* mov.w	r1, r3, lsr #1                            #! PC = 0x8005c20 *)
split r1 discard r3 1;
(* cmp	r4, r1                                      #! PC = 0x8005c24 *)
sub cmp r4 r1;
split sign discard cmp 31;
cast sign@bit sign;
cmov tmp sign 0@sint32 r3;
sub r4 r4 tmp;
(* cmn	r4, r1                                      #! PC = 0x8005c2a *)
add cmn r4 r1;
split sign discard cmn 31;
cast sign@bit sign;
cmov tmp sign r3 0@sint32;
add r4 r4 tmp;
(* cmp	r5, r1                                      #! PC = 0x8005c30 *)
sub cmp r5 r1;
split sign discard cmp 31;
cast sign@bit sign;
cmov tmp sign 0@sint32 r3;
sub r5 r5 tmp;
(* cmn	r5, r1                                      #! PC = 0x8005c36 *)
add cmn r5 r1;
split sign discard cmn 31;
cast sign@bit sign;
cmov tmp sign r3 0@sint32;
add r5 r5 tmp;
(* cmp	r6, r1                                      #! PC = 0x8005c3c *)
sub cmp r6 r1;
split sign discard cmp 31;
cast sign@bit sign;
cmov tmp sign 0@sint32 r3;
sub r6 r6 tmp;
(* cmn	r6, r1                                      #! PC = 0x8005c42 *)
add cmn r6 r1;
split sign discard cmn 31;
cast sign@bit sign;
cmov tmp sign r3 0@sint32;
add r6 r6 tmp;
(* cmp	r7, r1                                      #! PC = 0x8005c48 *)
sub cmp r7 r1;
split sign discard cmp 31;
cast sign@bit sign;
cmov tmp sign 0@sint32 r3;
sub r7 r7 tmp;
(* cmn	r7, r1                                      #! PC = 0x8005c4e *)
add cmn r7 r1;
split sign discard cmn 31;
cast sign@bit sign;
cmov tmp sign r3 0@sint32;
add r7 r7 tmp;
(* cmp	r8, r1                                      #! PC = 0x8005c54 *)
sub cmp r8 r1;
split sign discard cmp 31;
cast sign@bit sign;
cmov tmp sign 0@sint32 r3;
sub r8 r8 tmp;
(* cmn.w	r8, r1                                    #! PC = 0x8005c5c *)
add cmn r8 r1;
split sign discard cmn 31;
cast sign@bit sign;
cmov tmp sign r3 0@sint32;
add r8 r8 tmp;
(* cmp	r9, r1                                      #! PC = 0x8005c64 *)
sub cmp r9 r1;
split sign discard cmp 31;
cast sign@bit sign;
cmov tmp sign 0@sint32 r3;
sub r9 r9 tmp;
(* cmn.w	r9, r1                                    #! PC = 0x8005c6c *)
add cmn r9 r1;
split sign discard cmn 31;
cast sign@bit sign;
cmov tmp sign r3 0@sint32;
add r9 r9 tmp;
(* cmp	r10, r1                                     #! PC = 0x8005c74 *)
sub cmp r10 r1;
split sign discard cmp 31;
cast sign@bit sign;
cmov tmp sign 0@sint32 r3;
sub r10 r10 tmp;
(* cmn.w	r10, r1                                   #! PC = 0x8005c7c *)
add cmn r10 r1;
split sign discard cmn 31;
cast sign@bit sign;
cmov tmp sign r3 0@sint32;
add r10 r10 tmp;
(* cmp	r11, r1                                     #! PC = 0x8005c84 *)
sub cmp r11 r1;
split sign discard cmp 31;
cast sign@bit sign;
cmov tmp sign 0@sint32 r3;
sub r11 r11 tmp;
(* cmn.w	r11, r1                                   #! PC = 0x8005c8c *)
add cmn r11 r1;
split sign discard cmn 31;
cast sign@bit sign;
cmov tmp sign r3 0@sint32;
add r11 r11 tmp;
(* vmov	lr, s0                                     #! PC = 0x8005c94 *)
mov lr s0;
(* strh.w	r8, [lr, #256]	; 0x100                   #! EA = L0x20019986; PC = 0x8005c98 *)
ghost L0x20019986_f@sint32 : L0x20019986_f = r8 && L0x20019986_f = r8;
split discard L0x20019986_u r8 16;
cast L0x20019986@sint16 L0x20019986_u;
(* strh.w	r9, [lr, #320]	; 0x140                   #! EA = L0x200199c6; PC = 0x8005c9c *)
ghost L0x200199c6_f@sint32 : L0x200199c6_f = r9 && L0x200199c6_f = r9;
split discard L0x200199c6_u r9 16;
cast L0x200199c6@sint16 L0x200199c6_u;
(* strh.w	r10, [lr, #384]	; 0x180                  #! EA = L0x20019a06; PC = 0x8005ca0 *)
ghost L0x20019a06_f@sint32 : L0x20019a06_f = r10 && L0x20019a06_f = r10;
split discard L0x20019a06_u r10 16;
cast L0x20019a06@sint16 L0x20019a06_u;
(* strh.w	r11, [lr, #448]	; 0x1c0                  #! EA = L0x20019a46; PC = 0x8005ca4 *)
ghost L0x20019a46_f@sint32 : L0x20019a46_f = r11 && L0x20019a46_f = r11;
split discard L0x20019a46_u r11 16;
cast L0x20019a46@sint16 L0x20019a46_u;
(* strh.w	r5, [lr, #64]	; 0x40                     #! EA = L0x200198c6; PC = 0x8005ca8 *)
ghost L0x200198c6_f@sint32 : L0x200198c6_f = r5 && L0x200198c6_f = r5;
split discard L0x200198c6_u r5 16;
cast L0x200198c6@sint16 L0x200198c6_u;
(* strh.w	r6, [lr, #128]	; 0x80                    #! EA = L0x20019906; PC = 0x8005cac *)
ghost L0x20019906_f@sint32 : L0x20019906_f = r6 && L0x20019906_f = r6;
split discard L0x20019906_u r6 16;
cast L0x20019906@sint16 L0x20019906_u;
(* strh.w	r7, [lr, #192]	; 0xc0                    #! EA = L0x20019946; PC = 0x8005cb0 *)
ghost L0x20019946_f@sint32 : L0x20019946_f = r7 && L0x20019946_f = r7;
split discard L0x20019946_u r7 16;
cast L0x20019946@sint16 L0x20019946_u;
(* strh.w	r4, [lr], #2                             #! EA = L0x20019886; PC = 0x8005cb4 *)
ghost L0x20019886_f@sint32 : L0x20019886_f = r4 && L0x20019886_f = r4;
split discard L0x20019886_u r4 16;
cast L0x20019886@sint16 L0x20019886_u;
(* vmov	s0, lr                                     #! PC = 0x8005cb8 *)
mov s0 lr;
(* vmov	lr, s3                                     #! PC = 0x8005cbc *)
mov lr s3;
(* vmov	r12, s2                                    #! PC = 0x8005cc8 *)
mov r12 s2;

(* === layer i_3_4_5 === *)

(* y for layer 6 *)
ghost y_6@bit :
  and [
    y_6 = y_3_0 * 6103972,
    y_6 = y_3_1 * 24972806,
    y_6 = y_3_2 * 21713494,
    y_6 = y_3_3 * 24859920,
    y_6 = y_3_4 * 7847101,
    y_6 = y_3_5 * 19921963,
    y_6 = y_3_6 * 17500092,
    y_6 = y_3_7 * 6096206
  ] && true;

cut (* 18 *)
  (* algebraic *)
  and [
    (* imm_poly_0 *)
    eqmod (2**32) * (imm_poly_0 * imm_poly_0)
          8 * (
            L0x20019848_f * (x**0) * (y_6**0) + 
            L0x2001984a_f * (x**1) * (y_6**0) + 
            L0x2001984c_f * (x**2) * (y_6**0) + 
            L0x2001984e_f * (x**3) * (y_6**0) + 
            L0x20019850_f * (x**0) * (y_6**1) + 
            L0x20019852_f * (x**1) * (y_6**1) + 
            L0x20019854_f * (x**2) * (y_6**1) + 
            L0x20019856_f * (x**3) * (y_6**1) + 
            L0x20019858_f * (x**0) * (y_6**2) + 
            L0x2001985a_f * (x**1) * (y_6**2) + 
            L0x2001985c_f * (x**2) * (y_6**2) + 
            L0x2001985e_f * (x**3) * (y_6**2) + 
            L0x20019860_f * (x**0) * (y_6**3) + 
            L0x20019862_f * (x**1) * (y_6**3) + 
            L0x20019864_f * (x**2) * (y_6**3) + 
            L0x20019866_f * (x**3) * (y_6**3) + 
            L0x20019868_f * (x**0) * (y_6**4) + 
            L0x2001986a_f * (x**1) * (y_6**4) + 
            L0x2001986c_f * (x**2) * (y_6**4) + 
            L0x2001986e_f * (x**3) * (y_6**4) + 
            L0x20019870_f * (x**0) * (y_6**5) + 
            L0x20019872_f * (x**1) * (y_6**5) + 
            L0x20019874_f * (x**2) * (y_6**5) + 
            L0x20019876_f * (x**3) * (y_6**5) + 
            L0x20019878_f * (x**0) * (y_6**6) + 
            L0x2001987a_f * (x**1) * (y_6**6) + 
            L0x2001987c_f * (x**2) * (y_6**6) + 
            L0x2001987e_f * (x**3) * (y_6**6) + 
            L0x20019880_f * (x**0) * (y_6**7) + 
            L0x20019882_f * (x**1) * (y_6**7) + 
            L0x20019884_f * (x**2) * (y_6**7) + 
            L0x20019886_f * (x**3) * (y_6**7) + 
            L0x20019888_f * (x**0) * (y_6**8) + 
            L0x2001988a_f * (x**1) * (y_6**8) + 
            L0x2001988c_f * (x**2) * (y_6**8) + 
            L0x2001988e_f * (x**3) * (y_6**8) + 
            L0x20019890_f * (x**0) * (y_6**9) + 
            L0x20019892_f * (x**1) * (y_6**9) + 
            L0x20019894_f * (x**2) * (y_6**9) + 
            L0x20019896_f * (x**3) * (y_6**9) + 
            L0x20019898_f * (x**0) * (y_6**10) + 
            L0x2001989a_f * (x**1) * (y_6**10) + 
            L0x2001989c_f * (x**2) * (y_6**10) + 
            L0x2001989e_f * (x**3) * (y_6**10) + 
            L0x200198a0_f * (x**0) * (y_6**11) + 
            L0x200198a2_f * (x**1) * (y_6**11) + 
            L0x200198a4_f * (x**2) * (y_6**11) + 
            L0x200198a6_f * (x**3) * (y_6**11) + 
            L0x200198a8_f * (x**0) * (y_6**12) + 
            L0x200198aa_f * (x**1) * (y_6**12) + 
            L0x200198ac_f * (x**2) * (y_6**12) + 
            L0x200198ae_f * (x**3) * (y_6**12) + 
            L0x200198b0_f * (x**0) * (y_6**13) + 
            L0x200198b2_f * (x**1) * (y_6**13) + 
            L0x200198b4_f * (x**2) * (y_6**13) + 
            L0x200198b6_f * (x**3) * (y_6**13) + 
            L0x200198b8_f * (x**0) * (y_6**14) + 
            L0x200198ba_f * (x**1) * (y_6**14) + 
            L0x200198bc_f * (x**2) * (y_6**14) + 
            L0x200198be_f * (x**3) * (y_6**14) + 
            L0x200198c0_f * (x**0) * (y_6**15) + 
            L0x200198c2_f * (x**1) * (y_6**15) + 
            L0x200198c4_f * (x**2) * (y_6**15) + 
            L0x200198c6_f * (x**3) * (y_6**15) + 
            L0x200198c8_f * (x**0) * (y_6**16) + 
            L0x200198ca_f * (x**1) * (y_6**16) + 
            L0x200198cc_f * (x**2) * (y_6**16) + 
            L0x200198ce_f * (x**3) * (y_6**16) + 
            L0x200198d0_f * (x**0) * (y_6**17) + 
            L0x200198d2_f * (x**1) * (y_6**17) + 
            L0x200198d4_f * (x**2) * (y_6**17) + 
            L0x200198d6_f * (x**3) * (y_6**17) + 
            L0x200198d8_f * (x**0) * (y_6**18) + 
            L0x200198da_f * (x**1) * (y_6**18) + 
            L0x200198dc_f * (x**2) * (y_6**18) + 
            L0x200198de_f * (x**3) * (y_6**18) + 
            L0x200198e0_f * (x**0) * (y_6**19) + 
            L0x200198e2_f * (x**1) * (y_6**19) + 
            L0x200198e4_f * (x**2) * (y_6**19) + 
            L0x200198e6_f * (x**3) * (y_6**19) + 
            L0x200198e8_f * (x**0) * (y_6**20) + 
            L0x200198ea_f * (x**1) * (y_6**20) + 
            L0x200198ec_f * (x**2) * (y_6**20) + 
            L0x200198ee_f * (x**3) * (y_6**20) + 
            L0x200198f0_f * (x**0) * (y_6**21) + 
            L0x200198f2_f * (x**1) * (y_6**21) + 
            L0x200198f4_f * (x**2) * (y_6**21) + 
            L0x200198f6_f * (x**3) * (y_6**21) + 
            L0x200198f8_f * (x**0) * (y_6**22) + 
            L0x200198fa_f * (x**1) * (y_6**22) + 
            L0x200198fc_f * (x**2) * (y_6**22) + 
            L0x200198fe_f * (x**3) * (y_6**22) + 
            L0x20019900_f * (x**0) * (y_6**23) + 
            L0x20019902_f * (x**1) * (y_6**23) + 
            L0x20019904_f * (x**2) * (y_6**23) + 
            L0x20019906_f * (x**3) * (y_6**23) + 
            L0x20019908_f * (x**0) * (y_6**24) + 
            L0x2001990a_f * (x**1) * (y_6**24) + 
            L0x2001990c_f * (x**2) * (y_6**24) + 
            L0x2001990e_f * (x**3) * (y_6**24) + 
            L0x20019910_f * (x**0) * (y_6**25) + 
            L0x20019912_f * (x**1) * (y_6**25) + 
            L0x20019914_f * (x**2) * (y_6**25) + 
            L0x20019916_f * (x**3) * (y_6**25) + 
            L0x20019918_f * (x**0) * (y_6**26) + 
            L0x2001991a_f * (x**1) * (y_6**26) + 
            L0x2001991c_f * (x**2) * (y_6**26) + 
            L0x2001991e_f * (x**3) * (y_6**26) + 
            L0x20019920_f * (x**0) * (y_6**27) + 
            L0x20019922_f * (x**1) * (y_6**27) + 
            L0x20019924_f * (x**2) * (y_6**27) + 
            L0x20019926_f * (x**3) * (y_6**27) + 
            L0x20019928_f * (x**0) * (y_6**28) + 
            L0x2001992a_f * (x**1) * (y_6**28) + 
            L0x2001992c_f * (x**2) * (y_6**28) + 
            L0x2001992e_f * (x**3) * (y_6**28) + 
            L0x20019930_f * (x**0) * (y_6**29) + 
            L0x20019932_f * (x**1) * (y_6**29) + 
            L0x20019934_f * (x**2) * (y_6**29) + 
            L0x20019936_f * (x**3) * (y_6**29) + 
            L0x20019938_f * (x**0) * (y_6**30) + 
            L0x2001993a_f * (x**1) * (y_6**30) + 
            L0x2001993c_f * (x**2) * (y_6**30) + 
            L0x2001993e_f * (x**3) * (y_6**30) + 
            L0x20019940_f * (x**0) * (y_6**31) + 
            L0x20019942_f * (x**1) * (y_6**31) + 
            L0x20019944_f * (x**2) * (y_6**31) + 
            L0x20019946_f * (x**3) * (y_6**31) + 
            L0x20019948_f * (x**0) * (y_6**32) + 
            L0x2001994a_f * (x**1) * (y_6**32) + 
            L0x2001994c_f * (x**2) * (y_6**32) + 
            L0x2001994e_f * (x**3) * (y_6**32) + 
            L0x20019950_f * (x**0) * (y_6**33) + 
            L0x20019952_f * (x**1) * (y_6**33) + 
            L0x20019954_f * (x**2) * (y_6**33) + 
            L0x20019956_f * (x**3) * (y_6**33) + 
            L0x20019958_f * (x**0) * (y_6**34) + 
            L0x2001995a_f * (x**1) * (y_6**34) + 
            L0x2001995c_f * (x**2) * (y_6**34) + 
            L0x2001995e_f * (x**3) * (y_6**34) + 
            L0x20019960_f * (x**0) * (y_6**35) + 
            L0x20019962_f * (x**1) * (y_6**35) + 
            L0x20019964_f * (x**2) * (y_6**35) + 
            L0x20019966_f * (x**3) * (y_6**35) + 
            L0x20019968_f * (x**0) * (y_6**36) + 
            L0x2001996a_f * (x**1) * (y_6**36) + 
            L0x2001996c_f * (x**2) * (y_6**36) + 
            L0x2001996e_f * (x**3) * (y_6**36) + 
            L0x20019970_f * (x**0) * (y_6**37) + 
            L0x20019972_f * (x**1) * (y_6**37) + 
            L0x20019974_f * (x**2) * (y_6**37) + 
            L0x20019976_f * (x**3) * (y_6**37) + 
            L0x20019978_f * (x**0) * (y_6**38) + 
            L0x2001997a_f * (x**1) * (y_6**38) + 
            L0x2001997c_f * (x**2) * (y_6**38) + 
            L0x2001997e_f * (x**3) * (y_6**38) + 
            L0x20019980_f * (x**0) * (y_6**39) + 
            L0x20019982_f * (x**1) * (y_6**39) + 
            L0x20019984_f * (x**2) * (y_6**39) + 
            L0x20019986_f * (x**3) * (y_6**39) + 
            L0x20019988_f * (x**0) * (y_6**40) + 
            L0x2001998a_f * (x**1) * (y_6**40) + 
            L0x2001998c_f * (x**2) * (y_6**40) + 
            L0x2001998e_f * (x**3) * (y_6**40) + 
            L0x20019990_f * (x**0) * (y_6**41) + 
            L0x20019992_f * (x**1) * (y_6**41) + 
            L0x20019994_f * (x**2) * (y_6**41) + 
            L0x20019996_f * (x**3) * (y_6**41) + 
            L0x20019998_f * (x**0) * (y_6**42) + 
            L0x2001999a_f * (x**1) * (y_6**42) + 
            L0x2001999c_f * (x**2) * (y_6**42) + 
            L0x2001999e_f * (x**3) * (y_6**42) + 
            L0x200199a0_f * (x**0) * (y_6**43) + 
            L0x200199a2_f * (x**1) * (y_6**43) + 
            L0x200199a4_f * (x**2) * (y_6**43) + 
            L0x200199a6_f * (x**3) * (y_6**43) + 
            L0x200199a8_f * (x**0) * (y_6**44) + 
            L0x200199aa_f * (x**1) * (y_6**44) + 
            L0x200199ac_f * (x**2) * (y_6**44) + 
            L0x200199ae_f * (x**3) * (y_6**44) + 
            L0x200199b0_f * (x**0) * (y_6**45) + 
            L0x200199b2_f * (x**1) * (y_6**45) + 
            L0x200199b4_f * (x**2) * (y_6**45) + 
            L0x200199b6_f * (x**3) * (y_6**45) + 
            L0x200199b8_f * (x**0) * (y_6**46) + 
            L0x200199ba_f * (x**1) * (y_6**46) + 
            L0x200199bc_f * (x**2) * (y_6**46) + 
            L0x200199be_f * (x**3) * (y_6**46) + 
            L0x200199c0_f * (x**0) * (y_6**47) + 
            L0x200199c2_f * (x**1) * (y_6**47) + 
            L0x200199c4_f * (x**2) * (y_6**47) + 
            L0x200199c6_f * (x**3) * (y_6**47) + 
            L0x200199c8_f * (x**0) * (y_6**48) + 
            L0x200199ca_f * (x**1) * (y_6**48) + 
            L0x200199cc_f * (x**2) * (y_6**48) + 
            L0x200199ce_f * (x**3) * (y_6**48) + 
            L0x200199d0_f * (x**0) * (y_6**49) + 
            L0x200199d2_f * (x**1) * (y_6**49) + 
            L0x200199d4_f * (x**2) * (y_6**49) + 
            L0x200199d6_f * (x**3) * (y_6**49) + 
            L0x200199d8_f * (x**0) * (y_6**50) + 
            L0x200199da_f * (x**1) * (y_6**50) + 
            L0x200199dc_f * (x**2) * (y_6**50) + 
            L0x200199de_f * (x**3) * (y_6**50) + 
            L0x200199e0_f * (x**0) * (y_6**51) + 
            L0x200199e2_f * (x**1) * (y_6**51) + 
            L0x200199e4_f * (x**2) * (y_6**51) + 
            L0x200199e6_f * (x**3) * (y_6**51) + 
            L0x200199e8_f * (x**0) * (y_6**52) + 
            L0x200199ea_f * (x**1) * (y_6**52) + 
            L0x200199ec_f * (x**2) * (y_6**52) + 
            L0x200199ee_f * (x**3) * (y_6**52) + 
            L0x200199f0_f * (x**0) * (y_6**53) + 
            L0x200199f2_f * (x**1) * (y_6**53) + 
            L0x200199f4_f * (x**2) * (y_6**53) + 
            L0x200199f6_f * (x**3) * (y_6**53) + 
            L0x200199f8_f * (x**0) * (y_6**54) + 
            L0x200199fa_f * (x**1) * (y_6**54) + 
            L0x200199fc_f * (x**2) * (y_6**54) + 
            L0x200199fe_f * (x**3) * (y_6**54) + 
            L0x20019a00_f * (x**0) * (y_6**55) + 
            L0x20019a02_f * (x**1) * (y_6**55) + 
            L0x20019a04_f * (x**2) * (y_6**55) + 
            L0x20019a06_f * (x**3) * (y_6**55) + 
            L0x20019a08_f * (x**0) * (y_6**56) + 
            L0x20019a0a_f * (x**1) * (y_6**56) + 
            L0x20019a0c_f * (x**2) * (y_6**56) + 
            L0x20019a0e_f * (x**3) * (y_6**56) + 
            L0x20019a10_f * (x**0) * (y_6**57) + 
            L0x20019a12_f * (x**1) * (y_6**57) + 
            L0x20019a14_f * (x**2) * (y_6**57) + 
            L0x20019a16_f * (x**3) * (y_6**57) + 
            L0x20019a18_f * (x**0) * (y_6**58) + 
            L0x20019a1a_f * (x**1) * (y_6**58) + 
            L0x20019a1c_f * (x**2) * (y_6**58) + 
            L0x20019a1e_f * (x**3) * (y_6**58) + 
            L0x20019a20_f * (x**0) * (y_6**59) + 
            L0x20019a22_f * (x**1) * (y_6**59) + 
            L0x20019a24_f * (x**2) * (y_6**59) + 
            L0x20019a26_f * (x**3) * (y_6**59) + 
            L0x20019a28_f * (x**0) * (y_6**60) + 
            L0x20019a2a_f * (x**1) * (y_6**60) + 
            L0x20019a2c_f * (x**2) * (y_6**60) + 
            L0x20019a2e_f * (x**3) * (y_6**60) + 
            L0x20019a30_f * (x**0) * (y_6**61) + 
            L0x20019a32_f * (x**1) * (y_6**61) + 
            L0x20019a34_f * (x**2) * (y_6**61) + 
            L0x20019a36_f * (x**3) * (y_6**61) + 
            L0x20019a38_f * (x**0) * (y_6**62) + 
            L0x20019a3a_f * (x**1) * (y_6**62) + 
            L0x20019a3c_f * (x**2) * (y_6**62) + 
            L0x20019a3e_f * (x**3) * (y_6**62) + 
            L0x20019a40_f * (x**0) * (y_6**63) + 
            L0x20019a42_f * (x**1) * (y_6**63) + 
            L0x20019a44_f * (x**2) * (y_6**63) + 
            L0x20019a46_f * (x**3) * (y_6**63)
          )
          [25570049, x**4 - y_3_0 * 6103972, y_3_0**8 - 1],
    (* imm_poly_1 *)
    eqmod (2**32) * (imm_poly_1 * imm_poly_1)
          8 * (
            L0x20019848_f * (x**0) * (y_6**0) + 
            L0x2001984a_f * (x**1) * (y_6**0) + 
            L0x2001984c_f * (x**2) * (y_6**0) + 
            L0x2001984e_f * (x**3) * (y_6**0) + 
            L0x20019850_f * (x**0) * (y_6**1) + 
            L0x20019852_f * (x**1) * (y_6**1) + 
            L0x20019854_f * (x**2) * (y_6**1) + 
            L0x20019856_f * (x**3) * (y_6**1) + 
            L0x20019858_f * (x**0) * (y_6**2) + 
            L0x2001985a_f * (x**1) * (y_6**2) + 
            L0x2001985c_f * (x**2) * (y_6**2) + 
            L0x2001985e_f * (x**3) * (y_6**2) + 
            L0x20019860_f * (x**0) * (y_6**3) + 
            L0x20019862_f * (x**1) * (y_6**3) + 
            L0x20019864_f * (x**2) * (y_6**3) + 
            L0x20019866_f * (x**3) * (y_6**3) + 
            L0x20019868_f * (x**0) * (y_6**4) + 
            L0x2001986a_f * (x**1) * (y_6**4) + 
            L0x2001986c_f * (x**2) * (y_6**4) + 
            L0x2001986e_f * (x**3) * (y_6**4) + 
            L0x20019870_f * (x**0) * (y_6**5) + 
            L0x20019872_f * (x**1) * (y_6**5) + 
            L0x20019874_f * (x**2) * (y_6**5) + 
            L0x20019876_f * (x**3) * (y_6**5) + 
            L0x20019878_f * (x**0) * (y_6**6) + 
            L0x2001987a_f * (x**1) * (y_6**6) + 
            L0x2001987c_f * (x**2) * (y_6**6) + 
            L0x2001987e_f * (x**3) * (y_6**6) + 
            L0x20019880_f * (x**0) * (y_6**7) + 
            L0x20019882_f * (x**1) * (y_6**7) + 
            L0x20019884_f * (x**2) * (y_6**7) + 
            L0x20019886_f * (x**3) * (y_6**7) + 
            L0x20019888_f * (x**0) * (y_6**8) + 
            L0x2001988a_f * (x**1) * (y_6**8) + 
            L0x2001988c_f * (x**2) * (y_6**8) + 
            L0x2001988e_f * (x**3) * (y_6**8) + 
            L0x20019890_f * (x**0) * (y_6**9) + 
            L0x20019892_f * (x**1) * (y_6**9) + 
            L0x20019894_f * (x**2) * (y_6**9) + 
            L0x20019896_f * (x**3) * (y_6**9) + 
            L0x20019898_f * (x**0) * (y_6**10) + 
            L0x2001989a_f * (x**1) * (y_6**10) + 
            L0x2001989c_f * (x**2) * (y_6**10) + 
            L0x2001989e_f * (x**3) * (y_6**10) + 
            L0x200198a0_f * (x**0) * (y_6**11) + 
            L0x200198a2_f * (x**1) * (y_6**11) + 
            L0x200198a4_f * (x**2) * (y_6**11) + 
            L0x200198a6_f * (x**3) * (y_6**11) + 
            L0x200198a8_f * (x**0) * (y_6**12) + 
            L0x200198aa_f * (x**1) * (y_6**12) + 
            L0x200198ac_f * (x**2) * (y_6**12) + 
            L0x200198ae_f * (x**3) * (y_6**12) + 
            L0x200198b0_f * (x**0) * (y_6**13) + 
            L0x200198b2_f * (x**1) * (y_6**13) + 
            L0x200198b4_f * (x**2) * (y_6**13) + 
            L0x200198b6_f * (x**3) * (y_6**13) + 
            L0x200198b8_f * (x**0) * (y_6**14) + 
            L0x200198ba_f * (x**1) * (y_6**14) + 
            L0x200198bc_f * (x**2) * (y_6**14) + 
            L0x200198be_f * (x**3) * (y_6**14) + 
            L0x200198c0_f * (x**0) * (y_6**15) + 
            L0x200198c2_f * (x**1) * (y_6**15) + 
            L0x200198c4_f * (x**2) * (y_6**15) + 
            L0x200198c6_f * (x**3) * (y_6**15) + 
            L0x200198c8_f * (x**0) * (y_6**16) + 
            L0x200198ca_f * (x**1) * (y_6**16) + 
            L0x200198cc_f * (x**2) * (y_6**16) + 
            L0x200198ce_f * (x**3) * (y_6**16) + 
            L0x200198d0_f * (x**0) * (y_6**17) + 
            L0x200198d2_f * (x**1) * (y_6**17) + 
            L0x200198d4_f * (x**2) * (y_6**17) + 
            L0x200198d6_f * (x**3) * (y_6**17) + 
            L0x200198d8_f * (x**0) * (y_6**18) + 
            L0x200198da_f * (x**1) * (y_6**18) + 
            L0x200198dc_f * (x**2) * (y_6**18) + 
            L0x200198de_f * (x**3) * (y_6**18) + 
            L0x200198e0_f * (x**0) * (y_6**19) + 
            L0x200198e2_f * (x**1) * (y_6**19) + 
            L0x200198e4_f * (x**2) * (y_6**19) + 
            L0x200198e6_f * (x**3) * (y_6**19) + 
            L0x200198e8_f * (x**0) * (y_6**20) + 
            L0x200198ea_f * (x**1) * (y_6**20) + 
            L0x200198ec_f * (x**2) * (y_6**20) + 
            L0x200198ee_f * (x**3) * (y_6**20) + 
            L0x200198f0_f * (x**0) * (y_6**21) + 
            L0x200198f2_f * (x**1) * (y_6**21) + 
            L0x200198f4_f * (x**2) * (y_6**21) + 
            L0x200198f6_f * (x**3) * (y_6**21) + 
            L0x200198f8_f * (x**0) * (y_6**22) + 
            L0x200198fa_f * (x**1) * (y_6**22) + 
            L0x200198fc_f * (x**2) * (y_6**22) + 
            L0x200198fe_f * (x**3) * (y_6**22) + 
            L0x20019900_f * (x**0) * (y_6**23) + 
            L0x20019902_f * (x**1) * (y_6**23) + 
            L0x20019904_f * (x**2) * (y_6**23) + 
            L0x20019906_f * (x**3) * (y_6**23) + 
            L0x20019908_f * (x**0) * (y_6**24) + 
            L0x2001990a_f * (x**1) * (y_6**24) + 
            L0x2001990c_f * (x**2) * (y_6**24) + 
            L0x2001990e_f * (x**3) * (y_6**24) + 
            L0x20019910_f * (x**0) * (y_6**25) + 
            L0x20019912_f * (x**1) * (y_6**25) + 
            L0x20019914_f * (x**2) * (y_6**25) + 
            L0x20019916_f * (x**3) * (y_6**25) + 
            L0x20019918_f * (x**0) * (y_6**26) + 
            L0x2001991a_f * (x**1) * (y_6**26) + 
            L0x2001991c_f * (x**2) * (y_6**26) + 
            L0x2001991e_f * (x**3) * (y_6**26) + 
            L0x20019920_f * (x**0) * (y_6**27) + 
            L0x20019922_f * (x**1) * (y_6**27) + 
            L0x20019924_f * (x**2) * (y_6**27) + 
            L0x20019926_f * (x**3) * (y_6**27) + 
            L0x20019928_f * (x**0) * (y_6**28) + 
            L0x2001992a_f * (x**1) * (y_6**28) + 
            L0x2001992c_f * (x**2) * (y_6**28) + 
            L0x2001992e_f * (x**3) * (y_6**28) + 
            L0x20019930_f * (x**0) * (y_6**29) + 
            L0x20019932_f * (x**1) * (y_6**29) + 
            L0x20019934_f * (x**2) * (y_6**29) + 
            L0x20019936_f * (x**3) * (y_6**29) + 
            L0x20019938_f * (x**0) * (y_6**30) + 
            L0x2001993a_f * (x**1) * (y_6**30) + 
            L0x2001993c_f * (x**2) * (y_6**30) + 
            L0x2001993e_f * (x**3) * (y_6**30) + 
            L0x20019940_f * (x**0) * (y_6**31) + 
            L0x20019942_f * (x**1) * (y_6**31) + 
            L0x20019944_f * (x**2) * (y_6**31) + 
            L0x20019946_f * (x**3) * (y_6**31) + 
            L0x20019948_f * (x**0) * (y_6**32) + 
            L0x2001994a_f * (x**1) * (y_6**32) + 
            L0x2001994c_f * (x**2) * (y_6**32) + 
            L0x2001994e_f * (x**3) * (y_6**32) + 
            L0x20019950_f * (x**0) * (y_6**33) + 
            L0x20019952_f * (x**1) * (y_6**33) + 
            L0x20019954_f * (x**2) * (y_6**33) + 
            L0x20019956_f * (x**3) * (y_6**33) + 
            L0x20019958_f * (x**0) * (y_6**34) + 
            L0x2001995a_f * (x**1) * (y_6**34) + 
            L0x2001995c_f * (x**2) * (y_6**34) + 
            L0x2001995e_f * (x**3) * (y_6**34) + 
            L0x20019960_f * (x**0) * (y_6**35) + 
            L0x20019962_f * (x**1) * (y_6**35) + 
            L0x20019964_f * (x**2) * (y_6**35) + 
            L0x20019966_f * (x**3) * (y_6**35) + 
            L0x20019968_f * (x**0) * (y_6**36) + 
            L0x2001996a_f * (x**1) * (y_6**36) + 
            L0x2001996c_f * (x**2) * (y_6**36) + 
            L0x2001996e_f * (x**3) * (y_6**36) + 
            L0x20019970_f * (x**0) * (y_6**37) + 
            L0x20019972_f * (x**1) * (y_6**37) + 
            L0x20019974_f * (x**2) * (y_6**37) + 
            L0x20019976_f * (x**3) * (y_6**37) + 
            L0x20019978_f * (x**0) * (y_6**38) + 
            L0x2001997a_f * (x**1) * (y_6**38) + 
            L0x2001997c_f * (x**2) * (y_6**38) + 
            L0x2001997e_f * (x**3) * (y_6**38) + 
            L0x20019980_f * (x**0) * (y_6**39) + 
            L0x20019982_f * (x**1) * (y_6**39) + 
            L0x20019984_f * (x**2) * (y_6**39) + 
            L0x20019986_f * (x**3) * (y_6**39) + 
            L0x20019988_f * (x**0) * (y_6**40) + 
            L0x2001998a_f * (x**1) * (y_6**40) + 
            L0x2001998c_f * (x**2) * (y_6**40) + 
            L0x2001998e_f * (x**3) * (y_6**40) + 
            L0x20019990_f * (x**0) * (y_6**41) + 
            L0x20019992_f * (x**1) * (y_6**41) + 
            L0x20019994_f * (x**2) * (y_6**41) + 
            L0x20019996_f * (x**3) * (y_6**41) + 
            L0x20019998_f * (x**0) * (y_6**42) + 
            L0x2001999a_f * (x**1) * (y_6**42) + 
            L0x2001999c_f * (x**2) * (y_6**42) + 
            L0x2001999e_f * (x**3) * (y_6**42) + 
            L0x200199a0_f * (x**0) * (y_6**43) + 
            L0x200199a2_f * (x**1) * (y_6**43) + 
            L0x200199a4_f * (x**2) * (y_6**43) + 
            L0x200199a6_f * (x**3) * (y_6**43) + 
            L0x200199a8_f * (x**0) * (y_6**44) + 
            L0x200199aa_f * (x**1) * (y_6**44) + 
            L0x200199ac_f * (x**2) * (y_6**44) + 
            L0x200199ae_f * (x**3) * (y_6**44) + 
            L0x200199b0_f * (x**0) * (y_6**45) + 
            L0x200199b2_f * (x**1) * (y_6**45) + 
            L0x200199b4_f * (x**2) * (y_6**45) + 
            L0x200199b6_f * (x**3) * (y_6**45) + 
            L0x200199b8_f * (x**0) * (y_6**46) + 
            L0x200199ba_f * (x**1) * (y_6**46) + 
            L0x200199bc_f * (x**2) * (y_6**46) + 
            L0x200199be_f * (x**3) * (y_6**46) + 
            L0x200199c0_f * (x**0) * (y_6**47) + 
            L0x200199c2_f * (x**1) * (y_6**47) + 
            L0x200199c4_f * (x**2) * (y_6**47) + 
            L0x200199c6_f * (x**3) * (y_6**47) + 
            L0x200199c8_f * (x**0) * (y_6**48) + 
            L0x200199ca_f * (x**1) * (y_6**48) + 
            L0x200199cc_f * (x**2) * (y_6**48) + 
            L0x200199ce_f * (x**3) * (y_6**48) + 
            L0x200199d0_f * (x**0) * (y_6**49) + 
            L0x200199d2_f * (x**1) * (y_6**49) + 
            L0x200199d4_f * (x**2) * (y_6**49) + 
            L0x200199d6_f * (x**3) * (y_6**49) + 
            L0x200199d8_f * (x**0) * (y_6**50) + 
            L0x200199da_f * (x**1) * (y_6**50) + 
            L0x200199dc_f * (x**2) * (y_6**50) + 
            L0x200199de_f * (x**3) * (y_6**50) + 
            L0x200199e0_f * (x**0) * (y_6**51) + 
            L0x200199e2_f * (x**1) * (y_6**51) + 
            L0x200199e4_f * (x**2) * (y_6**51) + 
            L0x200199e6_f * (x**3) * (y_6**51) + 
            L0x200199e8_f * (x**0) * (y_6**52) + 
            L0x200199ea_f * (x**1) * (y_6**52) + 
            L0x200199ec_f * (x**2) * (y_6**52) + 
            L0x200199ee_f * (x**3) * (y_6**52) + 
            L0x200199f0_f * (x**0) * (y_6**53) + 
            L0x200199f2_f * (x**1) * (y_6**53) + 
            L0x200199f4_f * (x**2) * (y_6**53) + 
            L0x200199f6_f * (x**3) * (y_6**53) + 
            L0x200199f8_f * (x**0) * (y_6**54) + 
            L0x200199fa_f * (x**1) * (y_6**54) + 
            L0x200199fc_f * (x**2) * (y_6**54) + 
            L0x200199fe_f * (x**3) * (y_6**54) + 
            L0x20019a00_f * (x**0) * (y_6**55) + 
            L0x20019a02_f * (x**1) * (y_6**55) + 
            L0x20019a04_f * (x**2) * (y_6**55) + 
            L0x20019a06_f * (x**3) * (y_6**55) + 
            L0x20019a08_f * (x**0) * (y_6**56) + 
            L0x20019a0a_f * (x**1) * (y_6**56) + 
            L0x20019a0c_f * (x**2) * (y_6**56) + 
            L0x20019a0e_f * (x**3) * (y_6**56) + 
            L0x20019a10_f * (x**0) * (y_6**57) + 
            L0x20019a12_f * (x**1) * (y_6**57) + 
            L0x20019a14_f * (x**2) * (y_6**57) + 
            L0x20019a16_f * (x**3) * (y_6**57) + 
            L0x20019a18_f * (x**0) * (y_6**58) + 
            L0x20019a1a_f * (x**1) * (y_6**58) + 
            L0x20019a1c_f * (x**2) * (y_6**58) + 
            L0x20019a1e_f * (x**3) * (y_6**58) + 
            L0x20019a20_f * (x**0) * (y_6**59) + 
            L0x20019a22_f * (x**1) * (y_6**59) + 
            L0x20019a24_f * (x**2) * (y_6**59) + 
            L0x20019a26_f * (x**3) * (y_6**59) + 
            L0x20019a28_f * (x**0) * (y_6**60) + 
            L0x20019a2a_f * (x**1) * (y_6**60) + 
            L0x20019a2c_f * (x**2) * (y_6**60) + 
            L0x20019a2e_f * (x**3) * (y_6**60) + 
            L0x20019a30_f * (x**0) * (y_6**61) + 
            L0x20019a32_f * (x**1) * (y_6**61) + 
            L0x20019a34_f * (x**2) * (y_6**61) + 
            L0x20019a36_f * (x**3) * (y_6**61) + 
            L0x20019a38_f * (x**0) * (y_6**62) + 
            L0x20019a3a_f * (x**1) * (y_6**62) + 
            L0x20019a3c_f * (x**2) * (y_6**62) + 
            L0x20019a3e_f * (x**3) * (y_6**62) + 
            L0x20019a40_f * (x**0) * (y_6**63) + 
            L0x20019a42_f * (x**1) * (y_6**63) + 
            L0x20019a44_f * (x**2) * (y_6**63) + 
            L0x20019a46_f * (x**3) * (y_6**63)
          )
          [25570049, x**4 - y_3_1 * 24972806, y_3_1**8 - 1],
    (* imm_poly_2 *)
    eqmod (2**32) * (imm_poly_2 * imm_poly_2)
          8 * (
            L0x20019848_f * (x**0) * (y_6**0) + 
            L0x2001984a_f * (x**1) * (y_6**0) + 
            L0x2001984c_f * (x**2) * (y_6**0) + 
            L0x2001984e_f * (x**3) * (y_6**0) + 
            L0x20019850_f * (x**0) * (y_6**1) + 
            L0x20019852_f * (x**1) * (y_6**1) + 
            L0x20019854_f * (x**2) * (y_6**1) + 
            L0x20019856_f * (x**3) * (y_6**1) + 
            L0x20019858_f * (x**0) * (y_6**2) + 
            L0x2001985a_f * (x**1) * (y_6**2) + 
            L0x2001985c_f * (x**2) * (y_6**2) + 
            L0x2001985e_f * (x**3) * (y_6**2) + 
            L0x20019860_f * (x**0) * (y_6**3) + 
            L0x20019862_f * (x**1) * (y_6**3) + 
            L0x20019864_f * (x**2) * (y_6**3) + 
            L0x20019866_f * (x**3) * (y_6**3) + 
            L0x20019868_f * (x**0) * (y_6**4) + 
            L0x2001986a_f * (x**1) * (y_6**4) + 
            L0x2001986c_f * (x**2) * (y_6**4) + 
            L0x2001986e_f * (x**3) * (y_6**4) + 
            L0x20019870_f * (x**0) * (y_6**5) + 
            L0x20019872_f * (x**1) * (y_6**5) + 
            L0x20019874_f * (x**2) * (y_6**5) + 
            L0x20019876_f * (x**3) * (y_6**5) + 
            L0x20019878_f * (x**0) * (y_6**6) + 
            L0x2001987a_f * (x**1) * (y_6**6) + 
            L0x2001987c_f * (x**2) * (y_6**6) + 
            L0x2001987e_f * (x**3) * (y_6**6) + 
            L0x20019880_f * (x**0) * (y_6**7) + 
            L0x20019882_f * (x**1) * (y_6**7) + 
            L0x20019884_f * (x**2) * (y_6**7) + 
            L0x20019886_f * (x**3) * (y_6**7) + 
            L0x20019888_f * (x**0) * (y_6**8) + 
            L0x2001988a_f * (x**1) * (y_6**8) + 
            L0x2001988c_f * (x**2) * (y_6**8) + 
            L0x2001988e_f * (x**3) * (y_6**8) + 
            L0x20019890_f * (x**0) * (y_6**9) + 
            L0x20019892_f * (x**1) * (y_6**9) + 
            L0x20019894_f * (x**2) * (y_6**9) + 
            L0x20019896_f * (x**3) * (y_6**9) + 
            L0x20019898_f * (x**0) * (y_6**10) + 
            L0x2001989a_f * (x**1) * (y_6**10) + 
            L0x2001989c_f * (x**2) * (y_6**10) + 
            L0x2001989e_f * (x**3) * (y_6**10) + 
            L0x200198a0_f * (x**0) * (y_6**11) + 
            L0x200198a2_f * (x**1) * (y_6**11) + 
            L0x200198a4_f * (x**2) * (y_6**11) + 
            L0x200198a6_f * (x**3) * (y_6**11) + 
            L0x200198a8_f * (x**0) * (y_6**12) + 
            L0x200198aa_f * (x**1) * (y_6**12) + 
            L0x200198ac_f * (x**2) * (y_6**12) + 
            L0x200198ae_f * (x**3) * (y_6**12) + 
            L0x200198b0_f * (x**0) * (y_6**13) + 
            L0x200198b2_f * (x**1) * (y_6**13) + 
            L0x200198b4_f * (x**2) * (y_6**13) + 
            L0x200198b6_f * (x**3) * (y_6**13) + 
            L0x200198b8_f * (x**0) * (y_6**14) + 
            L0x200198ba_f * (x**1) * (y_6**14) + 
            L0x200198bc_f * (x**2) * (y_6**14) + 
            L0x200198be_f * (x**3) * (y_6**14) + 
            L0x200198c0_f * (x**0) * (y_6**15) + 
            L0x200198c2_f * (x**1) * (y_6**15) + 
            L0x200198c4_f * (x**2) * (y_6**15) + 
            L0x200198c6_f * (x**3) * (y_6**15) + 
            L0x200198c8_f * (x**0) * (y_6**16) + 
            L0x200198ca_f * (x**1) * (y_6**16) + 
            L0x200198cc_f * (x**2) * (y_6**16) + 
            L0x200198ce_f * (x**3) * (y_6**16) + 
            L0x200198d0_f * (x**0) * (y_6**17) + 
            L0x200198d2_f * (x**1) * (y_6**17) + 
            L0x200198d4_f * (x**2) * (y_6**17) + 
            L0x200198d6_f * (x**3) * (y_6**17) + 
            L0x200198d8_f * (x**0) * (y_6**18) + 
            L0x200198da_f * (x**1) * (y_6**18) + 
            L0x200198dc_f * (x**2) * (y_6**18) + 
            L0x200198de_f * (x**3) * (y_6**18) + 
            L0x200198e0_f * (x**0) * (y_6**19) + 
            L0x200198e2_f * (x**1) * (y_6**19) + 
            L0x200198e4_f * (x**2) * (y_6**19) + 
            L0x200198e6_f * (x**3) * (y_6**19) + 
            L0x200198e8_f * (x**0) * (y_6**20) + 
            L0x200198ea_f * (x**1) * (y_6**20) + 
            L0x200198ec_f * (x**2) * (y_6**20) + 
            L0x200198ee_f * (x**3) * (y_6**20) + 
            L0x200198f0_f * (x**0) * (y_6**21) + 
            L0x200198f2_f * (x**1) * (y_6**21) + 
            L0x200198f4_f * (x**2) * (y_6**21) + 
            L0x200198f6_f * (x**3) * (y_6**21) + 
            L0x200198f8_f * (x**0) * (y_6**22) + 
            L0x200198fa_f * (x**1) * (y_6**22) + 
            L0x200198fc_f * (x**2) * (y_6**22) + 
            L0x200198fe_f * (x**3) * (y_6**22) + 
            L0x20019900_f * (x**0) * (y_6**23) + 
            L0x20019902_f * (x**1) * (y_6**23) + 
            L0x20019904_f * (x**2) * (y_6**23) + 
            L0x20019906_f * (x**3) * (y_6**23) + 
            L0x20019908_f * (x**0) * (y_6**24) + 
            L0x2001990a_f * (x**1) * (y_6**24) + 
            L0x2001990c_f * (x**2) * (y_6**24) + 
            L0x2001990e_f * (x**3) * (y_6**24) + 
            L0x20019910_f * (x**0) * (y_6**25) + 
            L0x20019912_f * (x**1) * (y_6**25) + 
            L0x20019914_f * (x**2) * (y_6**25) + 
            L0x20019916_f * (x**3) * (y_6**25) + 
            L0x20019918_f * (x**0) * (y_6**26) + 
            L0x2001991a_f * (x**1) * (y_6**26) + 
            L0x2001991c_f * (x**2) * (y_6**26) + 
            L0x2001991e_f * (x**3) * (y_6**26) + 
            L0x20019920_f * (x**0) * (y_6**27) + 
            L0x20019922_f * (x**1) * (y_6**27) + 
            L0x20019924_f * (x**2) * (y_6**27) + 
            L0x20019926_f * (x**3) * (y_6**27) + 
            L0x20019928_f * (x**0) * (y_6**28) + 
            L0x2001992a_f * (x**1) * (y_6**28) + 
            L0x2001992c_f * (x**2) * (y_6**28) + 
            L0x2001992e_f * (x**3) * (y_6**28) + 
            L0x20019930_f * (x**0) * (y_6**29) + 
            L0x20019932_f * (x**1) * (y_6**29) + 
            L0x20019934_f * (x**2) * (y_6**29) + 
            L0x20019936_f * (x**3) * (y_6**29) + 
            L0x20019938_f * (x**0) * (y_6**30) + 
            L0x2001993a_f * (x**1) * (y_6**30) + 
            L0x2001993c_f * (x**2) * (y_6**30) + 
            L0x2001993e_f * (x**3) * (y_6**30) + 
            L0x20019940_f * (x**0) * (y_6**31) + 
            L0x20019942_f * (x**1) * (y_6**31) + 
            L0x20019944_f * (x**2) * (y_6**31) + 
            L0x20019946_f * (x**3) * (y_6**31) + 
            L0x20019948_f * (x**0) * (y_6**32) + 
            L0x2001994a_f * (x**1) * (y_6**32) + 
            L0x2001994c_f * (x**2) * (y_6**32) + 
            L0x2001994e_f * (x**3) * (y_6**32) + 
            L0x20019950_f * (x**0) * (y_6**33) + 
            L0x20019952_f * (x**1) * (y_6**33) + 
            L0x20019954_f * (x**2) * (y_6**33) + 
            L0x20019956_f * (x**3) * (y_6**33) + 
            L0x20019958_f * (x**0) * (y_6**34) + 
            L0x2001995a_f * (x**1) * (y_6**34) + 
            L0x2001995c_f * (x**2) * (y_6**34) + 
            L0x2001995e_f * (x**3) * (y_6**34) + 
            L0x20019960_f * (x**0) * (y_6**35) + 
            L0x20019962_f * (x**1) * (y_6**35) + 
            L0x20019964_f * (x**2) * (y_6**35) + 
            L0x20019966_f * (x**3) * (y_6**35) + 
            L0x20019968_f * (x**0) * (y_6**36) + 
            L0x2001996a_f * (x**1) * (y_6**36) + 
            L0x2001996c_f * (x**2) * (y_6**36) + 
            L0x2001996e_f * (x**3) * (y_6**36) + 
            L0x20019970_f * (x**0) * (y_6**37) + 
            L0x20019972_f * (x**1) * (y_6**37) + 
            L0x20019974_f * (x**2) * (y_6**37) + 
            L0x20019976_f * (x**3) * (y_6**37) + 
            L0x20019978_f * (x**0) * (y_6**38) + 
            L0x2001997a_f * (x**1) * (y_6**38) + 
            L0x2001997c_f * (x**2) * (y_6**38) + 
            L0x2001997e_f * (x**3) * (y_6**38) + 
            L0x20019980_f * (x**0) * (y_6**39) + 
            L0x20019982_f * (x**1) * (y_6**39) + 
            L0x20019984_f * (x**2) * (y_6**39) + 
            L0x20019986_f * (x**3) * (y_6**39) + 
            L0x20019988_f * (x**0) * (y_6**40) + 
            L0x2001998a_f * (x**1) * (y_6**40) + 
            L0x2001998c_f * (x**2) * (y_6**40) + 
            L0x2001998e_f * (x**3) * (y_6**40) + 
            L0x20019990_f * (x**0) * (y_6**41) + 
            L0x20019992_f * (x**1) * (y_6**41) + 
            L0x20019994_f * (x**2) * (y_6**41) + 
            L0x20019996_f * (x**3) * (y_6**41) + 
            L0x20019998_f * (x**0) * (y_6**42) + 
            L0x2001999a_f * (x**1) * (y_6**42) + 
            L0x2001999c_f * (x**2) * (y_6**42) + 
            L0x2001999e_f * (x**3) * (y_6**42) + 
            L0x200199a0_f * (x**0) * (y_6**43) + 
            L0x200199a2_f * (x**1) * (y_6**43) + 
            L0x200199a4_f * (x**2) * (y_6**43) + 
            L0x200199a6_f * (x**3) * (y_6**43) + 
            L0x200199a8_f * (x**0) * (y_6**44) + 
            L0x200199aa_f * (x**1) * (y_6**44) + 
            L0x200199ac_f * (x**2) * (y_6**44) + 
            L0x200199ae_f * (x**3) * (y_6**44) + 
            L0x200199b0_f * (x**0) * (y_6**45) + 
            L0x200199b2_f * (x**1) * (y_6**45) + 
            L0x200199b4_f * (x**2) * (y_6**45) + 
            L0x200199b6_f * (x**3) * (y_6**45) + 
            L0x200199b8_f * (x**0) * (y_6**46) + 
            L0x200199ba_f * (x**1) * (y_6**46) + 
            L0x200199bc_f * (x**2) * (y_6**46) + 
            L0x200199be_f * (x**3) * (y_6**46) + 
            L0x200199c0_f * (x**0) * (y_6**47) + 
            L0x200199c2_f * (x**1) * (y_6**47) + 
            L0x200199c4_f * (x**2) * (y_6**47) + 
            L0x200199c6_f * (x**3) * (y_6**47) + 
            L0x200199c8_f * (x**0) * (y_6**48) + 
            L0x200199ca_f * (x**1) * (y_6**48) + 
            L0x200199cc_f * (x**2) * (y_6**48) + 
            L0x200199ce_f * (x**3) * (y_6**48) + 
            L0x200199d0_f * (x**0) * (y_6**49) + 
            L0x200199d2_f * (x**1) * (y_6**49) + 
            L0x200199d4_f * (x**2) * (y_6**49) + 
            L0x200199d6_f * (x**3) * (y_6**49) + 
            L0x200199d8_f * (x**0) * (y_6**50) + 
            L0x200199da_f * (x**1) * (y_6**50) + 
            L0x200199dc_f * (x**2) * (y_6**50) + 
            L0x200199de_f * (x**3) * (y_6**50) + 
            L0x200199e0_f * (x**0) * (y_6**51) + 
            L0x200199e2_f * (x**1) * (y_6**51) + 
            L0x200199e4_f * (x**2) * (y_6**51) + 
            L0x200199e6_f * (x**3) * (y_6**51) + 
            L0x200199e8_f * (x**0) * (y_6**52) + 
            L0x200199ea_f * (x**1) * (y_6**52) + 
            L0x200199ec_f * (x**2) * (y_6**52) + 
            L0x200199ee_f * (x**3) * (y_6**52) + 
            L0x200199f0_f * (x**0) * (y_6**53) + 
            L0x200199f2_f * (x**1) * (y_6**53) + 
            L0x200199f4_f * (x**2) * (y_6**53) + 
            L0x200199f6_f * (x**3) * (y_6**53) + 
            L0x200199f8_f * (x**0) * (y_6**54) + 
            L0x200199fa_f * (x**1) * (y_6**54) + 
            L0x200199fc_f * (x**2) * (y_6**54) + 
            L0x200199fe_f * (x**3) * (y_6**54) + 
            L0x20019a00_f * (x**0) * (y_6**55) + 
            L0x20019a02_f * (x**1) * (y_6**55) + 
            L0x20019a04_f * (x**2) * (y_6**55) + 
            L0x20019a06_f * (x**3) * (y_6**55) + 
            L0x20019a08_f * (x**0) * (y_6**56) + 
            L0x20019a0a_f * (x**1) * (y_6**56) + 
            L0x20019a0c_f * (x**2) * (y_6**56) + 
            L0x20019a0e_f * (x**3) * (y_6**56) + 
            L0x20019a10_f * (x**0) * (y_6**57) + 
            L0x20019a12_f * (x**1) * (y_6**57) + 
            L0x20019a14_f * (x**2) * (y_6**57) + 
            L0x20019a16_f * (x**3) * (y_6**57) + 
            L0x20019a18_f * (x**0) * (y_6**58) + 
            L0x20019a1a_f * (x**1) * (y_6**58) + 
            L0x20019a1c_f * (x**2) * (y_6**58) + 
            L0x20019a1e_f * (x**3) * (y_6**58) + 
            L0x20019a20_f * (x**0) * (y_6**59) + 
            L0x20019a22_f * (x**1) * (y_6**59) + 
            L0x20019a24_f * (x**2) * (y_6**59) + 
            L0x20019a26_f * (x**3) * (y_6**59) + 
            L0x20019a28_f * (x**0) * (y_6**60) + 
            L0x20019a2a_f * (x**1) * (y_6**60) + 
            L0x20019a2c_f * (x**2) * (y_6**60) + 
            L0x20019a2e_f * (x**3) * (y_6**60) + 
            L0x20019a30_f * (x**0) * (y_6**61) + 
            L0x20019a32_f * (x**1) * (y_6**61) + 
            L0x20019a34_f * (x**2) * (y_6**61) + 
            L0x20019a36_f * (x**3) * (y_6**61) + 
            L0x20019a38_f * (x**0) * (y_6**62) + 
            L0x20019a3a_f * (x**1) * (y_6**62) + 
            L0x20019a3c_f * (x**2) * (y_6**62) + 
            L0x20019a3e_f * (x**3) * (y_6**62) + 
            L0x20019a40_f * (x**0) * (y_6**63) + 
            L0x20019a42_f * (x**1) * (y_6**63) + 
            L0x20019a44_f * (x**2) * (y_6**63) + 
            L0x20019a46_f * (x**3) * (y_6**63)
          )
          [25570049, x**4 - y_3_2 * 21713494, y_3_2**8 - 1],
    (* imm_poly_3 *)
    eqmod (2**32) * (imm_poly_3 * imm_poly_3)
          8 * (
            L0x20019848_f * (x**0) * (y_6**0) + 
            L0x2001984a_f * (x**1) * (y_6**0) + 
            L0x2001984c_f * (x**2) * (y_6**0) + 
            L0x2001984e_f * (x**3) * (y_6**0) + 
            L0x20019850_f * (x**0) * (y_6**1) + 
            L0x20019852_f * (x**1) * (y_6**1) + 
            L0x20019854_f * (x**2) * (y_6**1) + 
            L0x20019856_f * (x**3) * (y_6**1) + 
            L0x20019858_f * (x**0) * (y_6**2) + 
            L0x2001985a_f * (x**1) * (y_6**2) + 
            L0x2001985c_f * (x**2) * (y_6**2) + 
            L0x2001985e_f * (x**3) * (y_6**2) + 
            L0x20019860_f * (x**0) * (y_6**3) + 
            L0x20019862_f * (x**1) * (y_6**3) + 
            L0x20019864_f * (x**2) * (y_6**3) + 
            L0x20019866_f * (x**3) * (y_6**3) + 
            L0x20019868_f * (x**0) * (y_6**4) + 
            L0x2001986a_f * (x**1) * (y_6**4) + 
            L0x2001986c_f * (x**2) * (y_6**4) + 
            L0x2001986e_f * (x**3) * (y_6**4) + 
            L0x20019870_f * (x**0) * (y_6**5) + 
            L0x20019872_f * (x**1) * (y_6**5) + 
            L0x20019874_f * (x**2) * (y_6**5) + 
            L0x20019876_f * (x**3) * (y_6**5) + 
            L0x20019878_f * (x**0) * (y_6**6) + 
            L0x2001987a_f * (x**1) * (y_6**6) + 
            L0x2001987c_f * (x**2) * (y_6**6) + 
            L0x2001987e_f * (x**3) * (y_6**6) + 
            L0x20019880_f * (x**0) * (y_6**7) + 
            L0x20019882_f * (x**1) * (y_6**7) + 
            L0x20019884_f * (x**2) * (y_6**7) + 
            L0x20019886_f * (x**3) * (y_6**7) + 
            L0x20019888_f * (x**0) * (y_6**8) + 
            L0x2001988a_f * (x**1) * (y_6**8) + 
            L0x2001988c_f * (x**2) * (y_6**8) + 
            L0x2001988e_f * (x**3) * (y_6**8) + 
            L0x20019890_f * (x**0) * (y_6**9) + 
            L0x20019892_f * (x**1) * (y_6**9) + 
            L0x20019894_f * (x**2) * (y_6**9) + 
            L0x20019896_f * (x**3) * (y_6**9) + 
            L0x20019898_f * (x**0) * (y_6**10) + 
            L0x2001989a_f * (x**1) * (y_6**10) + 
            L0x2001989c_f * (x**2) * (y_6**10) + 
            L0x2001989e_f * (x**3) * (y_6**10) + 
            L0x200198a0_f * (x**0) * (y_6**11) + 
            L0x200198a2_f * (x**1) * (y_6**11) + 
            L0x200198a4_f * (x**2) * (y_6**11) + 
            L0x200198a6_f * (x**3) * (y_6**11) + 
            L0x200198a8_f * (x**0) * (y_6**12) + 
            L0x200198aa_f * (x**1) * (y_6**12) + 
            L0x200198ac_f * (x**2) * (y_6**12) + 
            L0x200198ae_f * (x**3) * (y_6**12) + 
            L0x200198b0_f * (x**0) * (y_6**13) + 
            L0x200198b2_f * (x**1) * (y_6**13) + 
            L0x200198b4_f * (x**2) * (y_6**13) + 
            L0x200198b6_f * (x**3) * (y_6**13) + 
            L0x200198b8_f * (x**0) * (y_6**14) + 
            L0x200198ba_f * (x**1) * (y_6**14) + 
            L0x200198bc_f * (x**2) * (y_6**14) + 
            L0x200198be_f * (x**3) * (y_6**14) + 
            L0x200198c0_f * (x**0) * (y_6**15) + 
            L0x200198c2_f * (x**1) * (y_6**15) + 
            L0x200198c4_f * (x**2) * (y_6**15) + 
            L0x200198c6_f * (x**3) * (y_6**15) + 
            L0x200198c8_f * (x**0) * (y_6**16) + 
            L0x200198ca_f * (x**1) * (y_6**16) + 
            L0x200198cc_f * (x**2) * (y_6**16) + 
            L0x200198ce_f * (x**3) * (y_6**16) + 
            L0x200198d0_f * (x**0) * (y_6**17) + 
            L0x200198d2_f * (x**1) * (y_6**17) + 
            L0x200198d4_f * (x**2) * (y_6**17) + 
            L0x200198d6_f * (x**3) * (y_6**17) + 
            L0x200198d8_f * (x**0) * (y_6**18) + 
            L0x200198da_f * (x**1) * (y_6**18) + 
            L0x200198dc_f * (x**2) * (y_6**18) + 
            L0x200198de_f * (x**3) * (y_6**18) + 
            L0x200198e0_f * (x**0) * (y_6**19) + 
            L0x200198e2_f * (x**1) * (y_6**19) + 
            L0x200198e4_f * (x**2) * (y_6**19) + 
            L0x200198e6_f * (x**3) * (y_6**19) + 
            L0x200198e8_f * (x**0) * (y_6**20) + 
            L0x200198ea_f * (x**1) * (y_6**20) + 
            L0x200198ec_f * (x**2) * (y_6**20) + 
            L0x200198ee_f * (x**3) * (y_6**20) + 
            L0x200198f0_f * (x**0) * (y_6**21) + 
            L0x200198f2_f * (x**1) * (y_6**21) + 
            L0x200198f4_f * (x**2) * (y_6**21) + 
            L0x200198f6_f * (x**3) * (y_6**21) + 
            L0x200198f8_f * (x**0) * (y_6**22) + 
            L0x200198fa_f * (x**1) * (y_6**22) + 
            L0x200198fc_f * (x**2) * (y_6**22) + 
            L0x200198fe_f * (x**3) * (y_6**22) + 
            L0x20019900_f * (x**0) * (y_6**23) + 
            L0x20019902_f * (x**1) * (y_6**23) + 
            L0x20019904_f * (x**2) * (y_6**23) + 
            L0x20019906_f * (x**3) * (y_6**23) + 
            L0x20019908_f * (x**0) * (y_6**24) + 
            L0x2001990a_f * (x**1) * (y_6**24) + 
            L0x2001990c_f * (x**2) * (y_6**24) + 
            L0x2001990e_f * (x**3) * (y_6**24) + 
            L0x20019910_f * (x**0) * (y_6**25) + 
            L0x20019912_f * (x**1) * (y_6**25) + 
            L0x20019914_f * (x**2) * (y_6**25) + 
            L0x20019916_f * (x**3) * (y_6**25) + 
            L0x20019918_f * (x**0) * (y_6**26) + 
            L0x2001991a_f * (x**1) * (y_6**26) + 
            L0x2001991c_f * (x**2) * (y_6**26) + 
            L0x2001991e_f * (x**3) * (y_6**26) + 
            L0x20019920_f * (x**0) * (y_6**27) + 
            L0x20019922_f * (x**1) * (y_6**27) + 
            L0x20019924_f * (x**2) * (y_6**27) + 
            L0x20019926_f * (x**3) * (y_6**27) + 
            L0x20019928_f * (x**0) * (y_6**28) + 
            L0x2001992a_f * (x**1) * (y_6**28) + 
            L0x2001992c_f * (x**2) * (y_6**28) + 
            L0x2001992e_f * (x**3) * (y_6**28) + 
            L0x20019930_f * (x**0) * (y_6**29) + 
            L0x20019932_f * (x**1) * (y_6**29) + 
            L0x20019934_f * (x**2) * (y_6**29) + 
            L0x20019936_f * (x**3) * (y_6**29) + 
            L0x20019938_f * (x**0) * (y_6**30) + 
            L0x2001993a_f * (x**1) * (y_6**30) + 
            L0x2001993c_f * (x**2) * (y_6**30) + 
            L0x2001993e_f * (x**3) * (y_6**30) + 
            L0x20019940_f * (x**0) * (y_6**31) + 
            L0x20019942_f * (x**1) * (y_6**31) + 
            L0x20019944_f * (x**2) * (y_6**31) + 
            L0x20019946_f * (x**3) * (y_6**31) + 
            L0x20019948_f * (x**0) * (y_6**32) + 
            L0x2001994a_f * (x**1) * (y_6**32) + 
            L0x2001994c_f * (x**2) * (y_6**32) + 
            L0x2001994e_f * (x**3) * (y_6**32) + 
            L0x20019950_f * (x**0) * (y_6**33) + 
            L0x20019952_f * (x**1) * (y_6**33) + 
            L0x20019954_f * (x**2) * (y_6**33) + 
            L0x20019956_f * (x**3) * (y_6**33) + 
            L0x20019958_f * (x**0) * (y_6**34) + 
            L0x2001995a_f * (x**1) * (y_6**34) + 
            L0x2001995c_f * (x**2) * (y_6**34) + 
            L0x2001995e_f * (x**3) * (y_6**34) + 
            L0x20019960_f * (x**0) * (y_6**35) + 
            L0x20019962_f * (x**1) * (y_6**35) + 
            L0x20019964_f * (x**2) * (y_6**35) + 
            L0x20019966_f * (x**3) * (y_6**35) + 
            L0x20019968_f * (x**0) * (y_6**36) + 
            L0x2001996a_f * (x**1) * (y_6**36) + 
            L0x2001996c_f * (x**2) * (y_6**36) + 
            L0x2001996e_f * (x**3) * (y_6**36) + 
            L0x20019970_f * (x**0) * (y_6**37) + 
            L0x20019972_f * (x**1) * (y_6**37) + 
            L0x20019974_f * (x**2) * (y_6**37) + 
            L0x20019976_f * (x**3) * (y_6**37) + 
            L0x20019978_f * (x**0) * (y_6**38) + 
            L0x2001997a_f * (x**1) * (y_6**38) + 
            L0x2001997c_f * (x**2) * (y_6**38) + 
            L0x2001997e_f * (x**3) * (y_6**38) + 
            L0x20019980_f * (x**0) * (y_6**39) + 
            L0x20019982_f * (x**1) * (y_6**39) + 
            L0x20019984_f * (x**2) * (y_6**39) + 
            L0x20019986_f * (x**3) * (y_6**39) + 
            L0x20019988_f * (x**0) * (y_6**40) + 
            L0x2001998a_f * (x**1) * (y_6**40) + 
            L0x2001998c_f * (x**2) * (y_6**40) + 
            L0x2001998e_f * (x**3) * (y_6**40) + 
            L0x20019990_f * (x**0) * (y_6**41) + 
            L0x20019992_f * (x**1) * (y_6**41) + 
            L0x20019994_f * (x**2) * (y_6**41) + 
            L0x20019996_f * (x**3) * (y_6**41) + 
            L0x20019998_f * (x**0) * (y_6**42) + 
            L0x2001999a_f * (x**1) * (y_6**42) + 
            L0x2001999c_f * (x**2) * (y_6**42) + 
            L0x2001999e_f * (x**3) * (y_6**42) + 
            L0x200199a0_f * (x**0) * (y_6**43) + 
            L0x200199a2_f * (x**1) * (y_6**43) + 
            L0x200199a4_f * (x**2) * (y_6**43) + 
            L0x200199a6_f * (x**3) * (y_6**43) + 
            L0x200199a8_f * (x**0) * (y_6**44) + 
            L0x200199aa_f * (x**1) * (y_6**44) + 
            L0x200199ac_f * (x**2) * (y_6**44) + 
            L0x200199ae_f * (x**3) * (y_6**44) + 
            L0x200199b0_f * (x**0) * (y_6**45) + 
            L0x200199b2_f * (x**1) * (y_6**45) + 
            L0x200199b4_f * (x**2) * (y_6**45) + 
            L0x200199b6_f * (x**3) * (y_6**45) + 
            L0x200199b8_f * (x**0) * (y_6**46) + 
            L0x200199ba_f * (x**1) * (y_6**46) + 
            L0x200199bc_f * (x**2) * (y_6**46) + 
            L0x200199be_f * (x**3) * (y_6**46) + 
            L0x200199c0_f * (x**0) * (y_6**47) + 
            L0x200199c2_f * (x**1) * (y_6**47) + 
            L0x200199c4_f * (x**2) * (y_6**47) + 
            L0x200199c6_f * (x**3) * (y_6**47) + 
            L0x200199c8_f * (x**0) * (y_6**48) + 
            L0x200199ca_f * (x**1) * (y_6**48) + 
            L0x200199cc_f * (x**2) * (y_6**48) + 
            L0x200199ce_f * (x**3) * (y_6**48) + 
            L0x200199d0_f * (x**0) * (y_6**49) + 
            L0x200199d2_f * (x**1) * (y_6**49) + 
            L0x200199d4_f * (x**2) * (y_6**49) + 
            L0x200199d6_f * (x**3) * (y_6**49) + 
            L0x200199d8_f * (x**0) * (y_6**50) + 
            L0x200199da_f * (x**1) * (y_6**50) + 
            L0x200199dc_f * (x**2) * (y_6**50) + 
            L0x200199de_f * (x**3) * (y_6**50) + 
            L0x200199e0_f * (x**0) * (y_6**51) + 
            L0x200199e2_f * (x**1) * (y_6**51) + 
            L0x200199e4_f * (x**2) * (y_6**51) + 
            L0x200199e6_f * (x**3) * (y_6**51) + 
            L0x200199e8_f * (x**0) * (y_6**52) + 
            L0x200199ea_f * (x**1) * (y_6**52) + 
            L0x200199ec_f * (x**2) * (y_6**52) + 
            L0x200199ee_f * (x**3) * (y_6**52) + 
            L0x200199f0_f * (x**0) * (y_6**53) + 
            L0x200199f2_f * (x**1) * (y_6**53) + 
            L0x200199f4_f * (x**2) * (y_6**53) + 
            L0x200199f6_f * (x**3) * (y_6**53) + 
            L0x200199f8_f * (x**0) * (y_6**54) + 
            L0x200199fa_f * (x**1) * (y_6**54) + 
            L0x200199fc_f * (x**2) * (y_6**54) + 
            L0x200199fe_f * (x**3) * (y_6**54) + 
            L0x20019a00_f * (x**0) * (y_6**55) + 
            L0x20019a02_f * (x**1) * (y_6**55) + 
            L0x20019a04_f * (x**2) * (y_6**55) + 
            L0x20019a06_f * (x**3) * (y_6**55) + 
            L0x20019a08_f * (x**0) * (y_6**56) + 
            L0x20019a0a_f * (x**1) * (y_6**56) + 
            L0x20019a0c_f * (x**2) * (y_6**56) + 
            L0x20019a0e_f * (x**3) * (y_6**56) + 
            L0x20019a10_f * (x**0) * (y_6**57) + 
            L0x20019a12_f * (x**1) * (y_6**57) + 
            L0x20019a14_f * (x**2) * (y_6**57) + 
            L0x20019a16_f * (x**3) * (y_6**57) + 
            L0x20019a18_f * (x**0) * (y_6**58) + 
            L0x20019a1a_f * (x**1) * (y_6**58) + 
            L0x20019a1c_f * (x**2) * (y_6**58) + 
            L0x20019a1e_f * (x**3) * (y_6**58) + 
            L0x20019a20_f * (x**0) * (y_6**59) + 
            L0x20019a22_f * (x**1) * (y_6**59) + 
            L0x20019a24_f * (x**2) * (y_6**59) + 
            L0x20019a26_f * (x**3) * (y_6**59) + 
            L0x20019a28_f * (x**0) * (y_6**60) + 
            L0x20019a2a_f * (x**1) * (y_6**60) + 
            L0x20019a2c_f * (x**2) * (y_6**60) + 
            L0x20019a2e_f * (x**3) * (y_6**60) + 
            L0x20019a30_f * (x**0) * (y_6**61) + 
            L0x20019a32_f * (x**1) * (y_6**61) + 
            L0x20019a34_f * (x**2) * (y_6**61) + 
            L0x20019a36_f * (x**3) * (y_6**61) + 
            L0x20019a38_f * (x**0) * (y_6**62) + 
            L0x20019a3a_f * (x**1) * (y_6**62) + 
            L0x20019a3c_f * (x**2) * (y_6**62) + 
            L0x20019a3e_f * (x**3) * (y_6**62) + 
            L0x20019a40_f * (x**0) * (y_6**63) + 
            L0x20019a42_f * (x**1) * (y_6**63) + 
            L0x20019a44_f * (x**2) * (y_6**63) + 
            L0x20019a46_f * (x**3) * (y_6**63)
          )
          [25570049, x**4 - y_3_3 * 24859920, y_3_3**8 - 1],
    (* imm_poly_4 *)
    eqmod (2**32) * (imm_poly_4 * imm_poly_4)
          8 * (
            L0x20019848_f * (x**0) * (y_6**0) + 
            L0x2001984a_f * (x**1) * (y_6**0) + 
            L0x2001984c_f * (x**2) * (y_6**0) + 
            L0x2001984e_f * (x**3) * (y_6**0) + 
            L0x20019850_f * (x**0) * (y_6**1) + 
            L0x20019852_f * (x**1) * (y_6**1) + 
            L0x20019854_f * (x**2) * (y_6**1) + 
            L0x20019856_f * (x**3) * (y_6**1) + 
            L0x20019858_f * (x**0) * (y_6**2) + 
            L0x2001985a_f * (x**1) * (y_6**2) + 
            L0x2001985c_f * (x**2) * (y_6**2) + 
            L0x2001985e_f * (x**3) * (y_6**2) + 
            L0x20019860_f * (x**0) * (y_6**3) + 
            L0x20019862_f * (x**1) * (y_6**3) + 
            L0x20019864_f * (x**2) * (y_6**3) + 
            L0x20019866_f * (x**3) * (y_6**3) + 
            L0x20019868_f * (x**0) * (y_6**4) + 
            L0x2001986a_f * (x**1) * (y_6**4) + 
            L0x2001986c_f * (x**2) * (y_6**4) + 
            L0x2001986e_f * (x**3) * (y_6**4) + 
            L0x20019870_f * (x**0) * (y_6**5) + 
            L0x20019872_f * (x**1) * (y_6**5) + 
            L0x20019874_f * (x**2) * (y_6**5) + 
            L0x20019876_f * (x**3) * (y_6**5) + 
            L0x20019878_f * (x**0) * (y_6**6) + 
            L0x2001987a_f * (x**1) * (y_6**6) + 
            L0x2001987c_f * (x**2) * (y_6**6) + 
            L0x2001987e_f * (x**3) * (y_6**6) + 
            L0x20019880_f * (x**0) * (y_6**7) + 
            L0x20019882_f * (x**1) * (y_6**7) + 
            L0x20019884_f * (x**2) * (y_6**7) + 
            L0x20019886_f * (x**3) * (y_6**7) + 
            L0x20019888_f * (x**0) * (y_6**8) + 
            L0x2001988a_f * (x**1) * (y_6**8) + 
            L0x2001988c_f * (x**2) * (y_6**8) + 
            L0x2001988e_f * (x**3) * (y_6**8) + 
            L0x20019890_f * (x**0) * (y_6**9) + 
            L0x20019892_f * (x**1) * (y_6**9) + 
            L0x20019894_f * (x**2) * (y_6**9) + 
            L0x20019896_f * (x**3) * (y_6**9) + 
            L0x20019898_f * (x**0) * (y_6**10) + 
            L0x2001989a_f * (x**1) * (y_6**10) + 
            L0x2001989c_f * (x**2) * (y_6**10) + 
            L0x2001989e_f * (x**3) * (y_6**10) + 
            L0x200198a0_f * (x**0) * (y_6**11) + 
            L0x200198a2_f * (x**1) * (y_6**11) + 
            L0x200198a4_f * (x**2) * (y_6**11) + 
            L0x200198a6_f * (x**3) * (y_6**11) + 
            L0x200198a8_f * (x**0) * (y_6**12) + 
            L0x200198aa_f * (x**1) * (y_6**12) + 
            L0x200198ac_f * (x**2) * (y_6**12) + 
            L0x200198ae_f * (x**3) * (y_6**12) + 
            L0x200198b0_f * (x**0) * (y_6**13) + 
            L0x200198b2_f * (x**1) * (y_6**13) + 
            L0x200198b4_f * (x**2) * (y_6**13) + 
            L0x200198b6_f * (x**3) * (y_6**13) + 
            L0x200198b8_f * (x**0) * (y_6**14) + 
            L0x200198ba_f * (x**1) * (y_6**14) + 
            L0x200198bc_f * (x**2) * (y_6**14) + 
            L0x200198be_f * (x**3) * (y_6**14) + 
            L0x200198c0_f * (x**0) * (y_6**15) + 
            L0x200198c2_f * (x**1) * (y_6**15) + 
            L0x200198c4_f * (x**2) * (y_6**15) + 
            L0x200198c6_f * (x**3) * (y_6**15) + 
            L0x200198c8_f * (x**0) * (y_6**16) + 
            L0x200198ca_f * (x**1) * (y_6**16) + 
            L0x200198cc_f * (x**2) * (y_6**16) + 
            L0x200198ce_f * (x**3) * (y_6**16) + 
            L0x200198d0_f * (x**0) * (y_6**17) + 
            L0x200198d2_f * (x**1) * (y_6**17) + 
            L0x200198d4_f * (x**2) * (y_6**17) + 
            L0x200198d6_f * (x**3) * (y_6**17) + 
            L0x200198d8_f * (x**0) * (y_6**18) + 
            L0x200198da_f * (x**1) * (y_6**18) + 
            L0x200198dc_f * (x**2) * (y_6**18) + 
            L0x200198de_f * (x**3) * (y_6**18) + 
            L0x200198e0_f * (x**0) * (y_6**19) + 
            L0x200198e2_f * (x**1) * (y_6**19) + 
            L0x200198e4_f * (x**2) * (y_6**19) + 
            L0x200198e6_f * (x**3) * (y_6**19) + 
            L0x200198e8_f * (x**0) * (y_6**20) + 
            L0x200198ea_f * (x**1) * (y_6**20) + 
            L0x200198ec_f * (x**2) * (y_6**20) + 
            L0x200198ee_f * (x**3) * (y_6**20) + 
            L0x200198f0_f * (x**0) * (y_6**21) + 
            L0x200198f2_f * (x**1) * (y_6**21) + 
            L0x200198f4_f * (x**2) * (y_6**21) + 
            L0x200198f6_f * (x**3) * (y_6**21) + 
            L0x200198f8_f * (x**0) * (y_6**22) + 
            L0x200198fa_f * (x**1) * (y_6**22) + 
            L0x200198fc_f * (x**2) * (y_6**22) + 
            L0x200198fe_f * (x**3) * (y_6**22) + 
            L0x20019900_f * (x**0) * (y_6**23) + 
            L0x20019902_f * (x**1) * (y_6**23) + 
            L0x20019904_f * (x**2) * (y_6**23) + 
            L0x20019906_f * (x**3) * (y_6**23) + 
            L0x20019908_f * (x**0) * (y_6**24) + 
            L0x2001990a_f * (x**1) * (y_6**24) + 
            L0x2001990c_f * (x**2) * (y_6**24) + 
            L0x2001990e_f * (x**3) * (y_6**24) + 
            L0x20019910_f * (x**0) * (y_6**25) + 
            L0x20019912_f * (x**1) * (y_6**25) + 
            L0x20019914_f * (x**2) * (y_6**25) + 
            L0x20019916_f * (x**3) * (y_6**25) + 
            L0x20019918_f * (x**0) * (y_6**26) + 
            L0x2001991a_f * (x**1) * (y_6**26) + 
            L0x2001991c_f * (x**2) * (y_6**26) + 
            L0x2001991e_f * (x**3) * (y_6**26) + 
            L0x20019920_f * (x**0) * (y_6**27) + 
            L0x20019922_f * (x**1) * (y_6**27) + 
            L0x20019924_f * (x**2) * (y_6**27) + 
            L0x20019926_f * (x**3) * (y_6**27) + 
            L0x20019928_f * (x**0) * (y_6**28) + 
            L0x2001992a_f * (x**1) * (y_6**28) + 
            L0x2001992c_f * (x**2) * (y_6**28) + 
            L0x2001992e_f * (x**3) * (y_6**28) + 
            L0x20019930_f * (x**0) * (y_6**29) + 
            L0x20019932_f * (x**1) * (y_6**29) + 
            L0x20019934_f * (x**2) * (y_6**29) + 
            L0x20019936_f * (x**3) * (y_6**29) + 
            L0x20019938_f * (x**0) * (y_6**30) + 
            L0x2001993a_f * (x**1) * (y_6**30) + 
            L0x2001993c_f * (x**2) * (y_6**30) + 
            L0x2001993e_f * (x**3) * (y_6**30) + 
            L0x20019940_f * (x**0) * (y_6**31) + 
            L0x20019942_f * (x**1) * (y_6**31) + 
            L0x20019944_f * (x**2) * (y_6**31) + 
            L0x20019946_f * (x**3) * (y_6**31) + 
            L0x20019948_f * (x**0) * (y_6**32) + 
            L0x2001994a_f * (x**1) * (y_6**32) + 
            L0x2001994c_f * (x**2) * (y_6**32) + 
            L0x2001994e_f * (x**3) * (y_6**32) + 
            L0x20019950_f * (x**0) * (y_6**33) + 
            L0x20019952_f * (x**1) * (y_6**33) + 
            L0x20019954_f * (x**2) * (y_6**33) + 
            L0x20019956_f * (x**3) * (y_6**33) + 
            L0x20019958_f * (x**0) * (y_6**34) + 
            L0x2001995a_f * (x**1) * (y_6**34) + 
            L0x2001995c_f * (x**2) * (y_6**34) + 
            L0x2001995e_f * (x**3) * (y_6**34) + 
            L0x20019960_f * (x**0) * (y_6**35) + 
            L0x20019962_f * (x**1) * (y_6**35) + 
            L0x20019964_f * (x**2) * (y_6**35) + 
            L0x20019966_f * (x**3) * (y_6**35) + 
            L0x20019968_f * (x**0) * (y_6**36) + 
            L0x2001996a_f * (x**1) * (y_6**36) + 
            L0x2001996c_f * (x**2) * (y_6**36) + 
            L0x2001996e_f * (x**3) * (y_6**36) + 
            L0x20019970_f * (x**0) * (y_6**37) + 
            L0x20019972_f * (x**1) * (y_6**37) + 
            L0x20019974_f * (x**2) * (y_6**37) + 
            L0x20019976_f * (x**3) * (y_6**37) + 
            L0x20019978_f * (x**0) * (y_6**38) + 
            L0x2001997a_f * (x**1) * (y_6**38) + 
            L0x2001997c_f * (x**2) * (y_6**38) + 
            L0x2001997e_f * (x**3) * (y_6**38) + 
            L0x20019980_f * (x**0) * (y_6**39) + 
            L0x20019982_f * (x**1) * (y_6**39) + 
            L0x20019984_f * (x**2) * (y_6**39) + 
            L0x20019986_f * (x**3) * (y_6**39) + 
            L0x20019988_f * (x**0) * (y_6**40) + 
            L0x2001998a_f * (x**1) * (y_6**40) + 
            L0x2001998c_f * (x**2) * (y_6**40) + 
            L0x2001998e_f * (x**3) * (y_6**40) + 
            L0x20019990_f * (x**0) * (y_6**41) + 
            L0x20019992_f * (x**1) * (y_6**41) + 
            L0x20019994_f * (x**2) * (y_6**41) + 
            L0x20019996_f * (x**3) * (y_6**41) + 
            L0x20019998_f * (x**0) * (y_6**42) + 
            L0x2001999a_f * (x**1) * (y_6**42) + 
            L0x2001999c_f * (x**2) * (y_6**42) + 
            L0x2001999e_f * (x**3) * (y_6**42) + 
            L0x200199a0_f * (x**0) * (y_6**43) + 
            L0x200199a2_f * (x**1) * (y_6**43) + 
            L0x200199a4_f * (x**2) * (y_6**43) + 
            L0x200199a6_f * (x**3) * (y_6**43) + 
            L0x200199a8_f * (x**0) * (y_6**44) + 
            L0x200199aa_f * (x**1) * (y_6**44) + 
            L0x200199ac_f * (x**2) * (y_6**44) + 
            L0x200199ae_f * (x**3) * (y_6**44) + 
            L0x200199b0_f * (x**0) * (y_6**45) + 
            L0x200199b2_f * (x**1) * (y_6**45) + 
            L0x200199b4_f * (x**2) * (y_6**45) + 
            L0x200199b6_f * (x**3) * (y_6**45) + 
            L0x200199b8_f * (x**0) * (y_6**46) + 
            L0x200199ba_f * (x**1) * (y_6**46) + 
            L0x200199bc_f * (x**2) * (y_6**46) + 
            L0x200199be_f * (x**3) * (y_6**46) + 
            L0x200199c0_f * (x**0) * (y_6**47) + 
            L0x200199c2_f * (x**1) * (y_6**47) + 
            L0x200199c4_f * (x**2) * (y_6**47) + 
            L0x200199c6_f * (x**3) * (y_6**47) + 
            L0x200199c8_f * (x**0) * (y_6**48) + 
            L0x200199ca_f * (x**1) * (y_6**48) + 
            L0x200199cc_f * (x**2) * (y_6**48) + 
            L0x200199ce_f * (x**3) * (y_6**48) + 
            L0x200199d0_f * (x**0) * (y_6**49) + 
            L0x200199d2_f * (x**1) * (y_6**49) + 
            L0x200199d4_f * (x**2) * (y_6**49) + 
            L0x200199d6_f * (x**3) * (y_6**49) + 
            L0x200199d8_f * (x**0) * (y_6**50) + 
            L0x200199da_f * (x**1) * (y_6**50) + 
            L0x200199dc_f * (x**2) * (y_6**50) + 
            L0x200199de_f * (x**3) * (y_6**50) + 
            L0x200199e0_f * (x**0) * (y_6**51) + 
            L0x200199e2_f * (x**1) * (y_6**51) + 
            L0x200199e4_f * (x**2) * (y_6**51) + 
            L0x200199e6_f * (x**3) * (y_6**51) + 
            L0x200199e8_f * (x**0) * (y_6**52) + 
            L0x200199ea_f * (x**1) * (y_6**52) + 
            L0x200199ec_f * (x**2) * (y_6**52) + 
            L0x200199ee_f * (x**3) * (y_6**52) + 
            L0x200199f0_f * (x**0) * (y_6**53) + 
            L0x200199f2_f * (x**1) * (y_6**53) + 
            L0x200199f4_f * (x**2) * (y_6**53) + 
            L0x200199f6_f * (x**3) * (y_6**53) + 
            L0x200199f8_f * (x**0) * (y_6**54) + 
            L0x200199fa_f * (x**1) * (y_6**54) + 
            L0x200199fc_f * (x**2) * (y_6**54) + 
            L0x200199fe_f * (x**3) * (y_6**54) + 
            L0x20019a00_f * (x**0) * (y_6**55) + 
            L0x20019a02_f * (x**1) * (y_6**55) + 
            L0x20019a04_f * (x**2) * (y_6**55) + 
            L0x20019a06_f * (x**3) * (y_6**55) + 
            L0x20019a08_f * (x**0) * (y_6**56) + 
            L0x20019a0a_f * (x**1) * (y_6**56) + 
            L0x20019a0c_f * (x**2) * (y_6**56) + 
            L0x20019a0e_f * (x**3) * (y_6**56) + 
            L0x20019a10_f * (x**0) * (y_6**57) + 
            L0x20019a12_f * (x**1) * (y_6**57) + 
            L0x20019a14_f * (x**2) * (y_6**57) + 
            L0x20019a16_f * (x**3) * (y_6**57) + 
            L0x20019a18_f * (x**0) * (y_6**58) + 
            L0x20019a1a_f * (x**1) * (y_6**58) + 
            L0x20019a1c_f * (x**2) * (y_6**58) + 
            L0x20019a1e_f * (x**3) * (y_6**58) + 
            L0x20019a20_f * (x**0) * (y_6**59) + 
            L0x20019a22_f * (x**1) * (y_6**59) + 
            L0x20019a24_f * (x**2) * (y_6**59) + 
            L0x20019a26_f * (x**3) * (y_6**59) + 
            L0x20019a28_f * (x**0) * (y_6**60) + 
            L0x20019a2a_f * (x**1) * (y_6**60) + 
            L0x20019a2c_f * (x**2) * (y_6**60) + 
            L0x20019a2e_f * (x**3) * (y_6**60) + 
            L0x20019a30_f * (x**0) * (y_6**61) + 
            L0x20019a32_f * (x**1) * (y_6**61) + 
            L0x20019a34_f * (x**2) * (y_6**61) + 
            L0x20019a36_f * (x**3) * (y_6**61) + 
            L0x20019a38_f * (x**0) * (y_6**62) + 
            L0x20019a3a_f * (x**1) * (y_6**62) + 
            L0x20019a3c_f * (x**2) * (y_6**62) + 
            L0x20019a3e_f * (x**3) * (y_6**62) + 
            L0x20019a40_f * (x**0) * (y_6**63) + 
            L0x20019a42_f * (x**1) * (y_6**63) + 
            L0x20019a44_f * (x**2) * (y_6**63) + 
            L0x20019a46_f * (x**3) * (y_6**63)
          )
          [25570049, x**4 - y_3_4 * 7847101, y_3_4**8 - 1],
    (* imm_poly_5 *)
    eqmod (2**32) * (imm_poly_5 * imm_poly_5)
          8 * (
            L0x20019848_f * (x**0) * (y_6**0) + 
            L0x2001984a_f * (x**1) * (y_6**0) + 
            L0x2001984c_f * (x**2) * (y_6**0) + 
            L0x2001984e_f * (x**3) * (y_6**0) + 
            L0x20019850_f * (x**0) * (y_6**1) + 
            L0x20019852_f * (x**1) * (y_6**1) + 
            L0x20019854_f * (x**2) * (y_6**1) + 
            L0x20019856_f * (x**3) * (y_6**1) + 
            L0x20019858_f * (x**0) * (y_6**2) + 
            L0x2001985a_f * (x**1) * (y_6**2) + 
            L0x2001985c_f * (x**2) * (y_6**2) + 
            L0x2001985e_f * (x**3) * (y_6**2) + 
            L0x20019860_f * (x**0) * (y_6**3) + 
            L0x20019862_f * (x**1) * (y_6**3) + 
            L0x20019864_f * (x**2) * (y_6**3) + 
            L0x20019866_f * (x**3) * (y_6**3) + 
            L0x20019868_f * (x**0) * (y_6**4) + 
            L0x2001986a_f * (x**1) * (y_6**4) + 
            L0x2001986c_f * (x**2) * (y_6**4) + 
            L0x2001986e_f * (x**3) * (y_6**4) + 
            L0x20019870_f * (x**0) * (y_6**5) + 
            L0x20019872_f * (x**1) * (y_6**5) + 
            L0x20019874_f * (x**2) * (y_6**5) + 
            L0x20019876_f * (x**3) * (y_6**5) + 
            L0x20019878_f * (x**0) * (y_6**6) + 
            L0x2001987a_f * (x**1) * (y_6**6) + 
            L0x2001987c_f * (x**2) * (y_6**6) + 
            L0x2001987e_f * (x**3) * (y_6**6) + 
            L0x20019880_f * (x**0) * (y_6**7) + 
            L0x20019882_f * (x**1) * (y_6**7) + 
            L0x20019884_f * (x**2) * (y_6**7) + 
            L0x20019886_f * (x**3) * (y_6**7) + 
            L0x20019888_f * (x**0) * (y_6**8) + 
            L0x2001988a_f * (x**1) * (y_6**8) + 
            L0x2001988c_f * (x**2) * (y_6**8) + 
            L0x2001988e_f * (x**3) * (y_6**8) + 
            L0x20019890_f * (x**0) * (y_6**9) + 
            L0x20019892_f * (x**1) * (y_6**9) + 
            L0x20019894_f * (x**2) * (y_6**9) + 
            L0x20019896_f * (x**3) * (y_6**9) + 
            L0x20019898_f * (x**0) * (y_6**10) + 
            L0x2001989a_f * (x**1) * (y_6**10) + 
            L0x2001989c_f * (x**2) * (y_6**10) + 
            L0x2001989e_f * (x**3) * (y_6**10) + 
            L0x200198a0_f * (x**0) * (y_6**11) + 
            L0x200198a2_f * (x**1) * (y_6**11) + 
            L0x200198a4_f * (x**2) * (y_6**11) + 
            L0x200198a6_f * (x**3) * (y_6**11) + 
            L0x200198a8_f * (x**0) * (y_6**12) + 
            L0x200198aa_f * (x**1) * (y_6**12) + 
            L0x200198ac_f * (x**2) * (y_6**12) + 
            L0x200198ae_f * (x**3) * (y_6**12) + 
            L0x200198b0_f * (x**0) * (y_6**13) + 
            L0x200198b2_f * (x**1) * (y_6**13) + 
            L0x200198b4_f * (x**2) * (y_6**13) + 
            L0x200198b6_f * (x**3) * (y_6**13) + 
            L0x200198b8_f * (x**0) * (y_6**14) + 
            L0x200198ba_f * (x**1) * (y_6**14) + 
            L0x200198bc_f * (x**2) * (y_6**14) + 
            L0x200198be_f * (x**3) * (y_6**14) + 
            L0x200198c0_f * (x**0) * (y_6**15) + 
            L0x200198c2_f * (x**1) * (y_6**15) + 
            L0x200198c4_f * (x**2) * (y_6**15) + 
            L0x200198c6_f * (x**3) * (y_6**15) + 
            L0x200198c8_f * (x**0) * (y_6**16) + 
            L0x200198ca_f * (x**1) * (y_6**16) + 
            L0x200198cc_f * (x**2) * (y_6**16) + 
            L0x200198ce_f * (x**3) * (y_6**16) + 
            L0x200198d0_f * (x**0) * (y_6**17) + 
            L0x200198d2_f * (x**1) * (y_6**17) + 
            L0x200198d4_f * (x**2) * (y_6**17) + 
            L0x200198d6_f * (x**3) * (y_6**17) + 
            L0x200198d8_f * (x**0) * (y_6**18) + 
            L0x200198da_f * (x**1) * (y_6**18) + 
            L0x200198dc_f * (x**2) * (y_6**18) + 
            L0x200198de_f * (x**3) * (y_6**18) + 
            L0x200198e0_f * (x**0) * (y_6**19) + 
            L0x200198e2_f * (x**1) * (y_6**19) + 
            L0x200198e4_f * (x**2) * (y_6**19) + 
            L0x200198e6_f * (x**3) * (y_6**19) + 
            L0x200198e8_f * (x**0) * (y_6**20) + 
            L0x200198ea_f * (x**1) * (y_6**20) + 
            L0x200198ec_f * (x**2) * (y_6**20) + 
            L0x200198ee_f * (x**3) * (y_6**20) + 
            L0x200198f0_f * (x**0) * (y_6**21) + 
            L0x200198f2_f * (x**1) * (y_6**21) + 
            L0x200198f4_f * (x**2) * (y_6**21) + 
            L0x200198f6_f * (x**3) * (y_6**21) + 
            L0x200198f8_f * (x**0) * (y_6**22) + 
            L0x200198fa_f * (x**1) * (y_6**22) + 
            L0x200198fc_f * (x**2) * (y_6**22) + 
            L0x200198fe_f * (x**3) * (y_6**22) + 
            L0x20019900_f * (x**0) * (y_6**23) + 
            L0x20019902_f * (x**1) * (y_6**23) + 
            L0x20019904_f * (x**2) * (y_6**23) + 
            L0x20019906_f * (x**3) * (y_6**23) + 
            L0x20019908_f * (x**0) * (y_6**24) + 
            L0x2001990a_f * (x**1) * (y_6**24) + 
            L0x2001990c_f * (x**2) * (y_6**24) + 
            L0x2001990e_f * (x**3) * (y_6**24) + 
            L0x20019910_f * (x**0) * (y_6**25) + 
            L0x20019912_f * (x**1) * (y_6**25) + 
            L0x20019914_f * (x**2) * (y_6**25) + 
            L0x20019916_f * (x**3) * (y_6**25) + 
            L0x20019918_f * (x**0) * (y_6**26) + 
            L0x2001991a_f * (x**1) * (y_6**26) + 
            L0x2001991c_f * (x**2) * (y_6**26) + 
            L0x2001991e_f * (x**3) * (y_6**26) + 
            L0x20019920_f * (x**0) * (y_6**27) + 
            L0x20019922_f * (x**1) * (y_6**27) + 
            L0x20019924_f * (x**2) * (y_6**27) + 
            L0x20019926_f * (x**3) * (y_6**27) + 
            L0x20019928_f * (x**0) * (y_6**28) + 
            L0x2001992a_f * (x**1) * (y_6**28) + 
            L0x2001992c_f * (x**2) * (y_6**28) + 
            L0x2001992e_f * (x**3) * (y_6**28) + 
            L0x20019930_f * (x**0) * (y_6**29) + 
            L0x20019932_f * (x**1) * (y_6**29) + 
            L0x20019934_f * (x**2) * (y_6**29) + 
            L0x20019936_f * (x**3) * (y_6**29) + 
            L0x20019938_f * (x**0) * (y_6**30) + 
            L0x2001993a_f * (x**1) * (y_6**30) + 
            L0x2001993c_f * (x**2) * (y_6**30) + 
            L0x2001993e_f * (x**3) * (y_6**30) + 
            L0x20019940_f * (x**0) * (y_6**31) + 
            L0x20019942_f * (x**1) * (y_6**31) + 
            L0x20019944_f * (x**2) * (y_6**31) + 
            L0x20019946_f * (x**3) * (y_6**31) + 
            L0x20019948_f * (x**0) * (y_6**32) + 
            L0x2001994a_f * (x**1) * (y_6**32) + 
            L0x2001994c_f * (x**2) * (y_6**32) + 
            L0x2001994e_f * (x**3) * (y_6**32) + 
            L0x20019950_f * (x**0) * (y_6**33) + 
            L0x20019952_f * (x**1) * (y_6**33) + 
            L0x20019954_f * (x**2) * (y_6**33) + 
            L0x20019956_f * (x**3) * (y_6**33) + 
            L0x20019958_f * (x**0) * (y_6**34) + 
            L0x2001995a_f * (x**1) * (y_6**34) + 
            L0x2001995c_f * (x**2) * (y_6**34) + 
            L0x2001995e_f * (x**3) * (y_6**34) + 
            L0x20019960_f * (x**0) * (y_6**35) + 
            L0x20019962_f * (x**1) * (y_6**35) + 
            L0x20019964_f * (x**2) * (y_6**35) + 
            L0x20019966_f * (x**3) * (y_6**35) + 
            L0x20019968_f * (x**0) * (y_6**36) + 
            L0x2001996a_f * (x**1) * (y_6**36) + 
            L0x2001996c_f * (x**2) * (y_6**36) + 
            L0x2001996e_f * (x**3) * (y_6**36) + 
            L0x20019970_f * (x**0) * (y_6**37) + 
            L0x20019972_f * (x**1) * (y_6**37) + 
            L0x20019974_f * (x**2) * (y_6**37) + 
            L0x20019976_f * (x**3) * (y_6**37) + 
            L0x20019978_f * (x**0) * (y_6**38) + 
            L0x2001997a_f * (x**1) * (y_6**38) + 
            L0x2001997c_f * (x**2) * (y_6**38) + 
            L0x2001997e_f * (x**3) * (y_6**38) + 
            L0x20019980_f * (x**0) * (y_6**39) + 
            L0x20019982_f * (x**1) * (y_6**39) + 
            L0x20019984_f * (x**2) * (y_6**39) + 
            L0x20019986_f * (x**3) * (y_6**39) + 
            L0x20019988_f * (x**0) * (y_6**40) + 
            L0x2001998a_f * (x**1) * (y_6**40) + 
            L0x2001998c_f * (x**2) * (y_6**40) + 
            L0x2001998e_f * (x**3) * (y_6**40) + 
            L0x20019990_f * (x**0) * (y_6**41) + 
            L0x20019992_f * (x**1) * (y_6**41) + 
            L0x20019994_f * (x**2) * (y_6**41) + 
            L0x20019996_f * (x**3) * (y_6**41) + 
            L0x20019998_f * (x**0) * (y_6**42) + 
            L0x2001999a_f * (x**1) * (y_6**42) + 
            L0x2001999c_f * (x**2) * (y_6**42) + 
            L0x2001999e_f * (x**3) * (y_6**42) + 
            L0x200199a0_f * (x**0) * (y_6**43) + 
            L0x200199a2_f * (x**1) * (y_6**43) + 
            L0x200199a4_f * (x**2) * (y_6**43) + 
            L0x200199a6_f * (x**3) * (y_6**43) + 
            L0x200199a8_f * (x**0) * (y_6**44) + 
            L0x200199aa_f * (x**1) * (y_6**44) + 
            L0x200199ac_f * (x**2) * (y_6**44) + 
            L0x200199ae_f * (x**3) * (y_6**44) + 
            L0x200199b0_f * (x**0) * (y_6**45) + 
            L0x200199b2_f * (x**1) * (y_6**45) + 
            L0x200199b4_f * (x**2) * (y_6**45) + 
            L0x200199b6_f * (x**3) * (y_6**45) + 
            L0x200199b8_f * (x**0) * (y_6**46) + 
            L0x200199ba_f * (x**1) * (y_6**46) + 
            L0x200199bc_f * (x**2) * (y_6**46) + 
            L0x200199be_f * (x**3) * (y_6**46) + 
            L0x200199c0_f * (x**0) * (y_6**47) + 
            L0x200199c2_f * (x**1) * (y_6**47) + 
            L0x200199c4_f * (x**2) * (y_6**47) + 
            L0x200199c6_f * (x**3) * (y_6**47) + 
            L0x200199c8_f * (x**0) * (y_6**48) + 
            L0x200199ca_f * (x**1) * (y_6**48) + 
            L0x200199cc_f * (x**2) * (y_6**48) + 
            L0x200199ce_f * (x**3) * (y_6**48) + 
            L0x200199d0_f * (x**0) * (y_6**49) + 
            L0x200199d2_f * (x**1) * (y_6**49) + 
            L0x200199d4_f * (x**2) * (y_6**49) + 
            L0x200199d6_f * (x**3) * (y_6**49) + 
            L0x200199d8_f * (x**0) * (y_6**50) + 
            L0x200199da_f * (x**1) * (y_6**50) + 
            L0x200199dc_f * (x**2) * (y_6**50) + 
            L0x200199de_f * (x**3) * (y_6**50) + 
            L0x200199e0_f * (x**0) * (y_6**51) + 
            L0x200199e2_f * (x**1) * (y_6**51) + 
            L0x200199e4_f * (x**2) * (y_6**51) + 
            L0x200199e6_f * (x**3) * (y_6**51) + 
            L0x200199e8_f * (x**0) * (y_6**52) + 
            L0x200199ea_f * (x**1) * (y_6**52) + 
            L0x200199ec_f * (x**2) * (y_6**52) + 
            L0x200199ee_f * (x**3) * (y_6**52) + 
            L0x200199f0_f * (x**0) * (y_6**53) + 
            L0x200199f2_f * (x**1) * (y_6**53) + 
            L0x200199f4_f * (x**2) * (y_6**53) + 
            L0x200199f6_f * (x**3) * (y_6**53) + 
            L0x200199f8_f * (x**0) * (y_6**54) + 
            L0x200199fa_f * (x**1) * (y_6**54) + 
            L0x200199fc_f * (x**2) * (y_6**54) + 
            L0x200199fe_f * (x**3) * (y_6**54) + 
            L0x20019a00_f * (x**0) * (y_6**55) + 
            L0x20019a02_f * (x**1) * (y_6**55) + 
            L0x20019a04_f * (x**2) * (y_6**55) + 
            L0x20019a06_f * (x**3) * (y_6**55) + 
            L0x20019a08_f * (x**0) * (y_6**56) + 
            L0x20019a0a_f * (x**1) * (y_6**56) + 
            L0x20019a0c_f * (x**2) * (y_6**56) + 
            L0x20019a0e_f * (x**3) * (y_6**56) + 
            L0x20019a10_f * (x**0) * (y_6**57) + 
            L0x20019a12_f * (x**1) * (y_6**57) + 
            L0x20019a14_f * (x**2) * (y_6**57) + 
            L0x20019a16_f * (x**3) * (y_6**57) + 
            L0x20019a18_f * (x**0) * (y_6**58) + 
            L0x20019a1a_f * (x**1) * (y_6**58) + 
            L0x20019a1c_f * (x**2) * (y_6**58) + 
            L0x20019a1e_f * (x**3) * (y_6**58) + 
            L0x20019a20_f * (x**0) * (y_6**59) + 
            L0x20019a22_f * (x**1) * (y_6**59) + 
            L0x20019a24_f * (x**2) * (y_6**59) + 
            L0x20019a26_f * (x**3) * (y_6**59) + 
            L0x20019a28_f * (x**0) * (y_6**60) + 
            L0x20019a2a_f * (x**1) * (y_6**60) + 
            L0x20019a2c_f * (x**2) * (y_6**60) + 
            L0x20019a2e_f * (x**3) * (y_6**60) + 
            L0x20019a30_f * (x**0) * (y_6**61) + 
            L0x20019a32_f * (x**1) * (y_6**61) + 
            L0x20019a34_f * (x**2) * (y_6**61) + 
            L0x20019a36_f * (x**3) * (y_6**61) + 
            L0x20019a38_f * (x**0) * (y_6**62) + 
            L0x20019a3a_f * (x**1) * (y_6**62) + 
            L0x20019a3c_f * (x**2) * (y_6**62) + 
            L0x20019a3e_f * (x**3) * (y_6**62) + 
            L0x20019a40_f * (x**0) * (y_6**63) + 
            L0x20019a42_f * (x**1) * (y_6**63) + 
            L0x20019a44_f * (x**2) * (y_6**63) + 
            L0x20019a46_f * (x**3) * (y_6**63)
          )
          [25570049, x**4 - y_3_5 * 19921963, y_3_5**8 - 1],
    (* imm_poly_6 *)
    eqmod (2**32) * (imm_poly_6 * imm_poly_6)
          8 * (
            L0x20019848_f * (x**0) * (y_6**0) + 
            L0x2001984a_f * (x**1) * (y_6**0) + 
            L0x2001984c_f * (x**2) * (y_6**0) + 
            L0x2001984e_f * (x**3) * (y_6**0) + 
            L0x20019850_f * (x**0) * (y_6**1) + 
            L0x20019852_f * (x**1) * (y_6**1) + 
            L0x20019854_f * (x**2) * (y_6**1) + 
            L0x20019856_f * (x**3) * (y_6**1) + 
            L0x20019858_f * (x**0) * (y_6**2) + 
            L0x2001985a_f * (x**1) * (y_6**2) + 
            L0x2001985c_f * (x**2) * (y_6**2) + 
            L0x2001985e_f * (x**3) * (y_6**2) + 
            L0x20019860_f * (x**0) * (y_6**3) + 
            L0x20019862_f * (x**1) * (y_6**3) + 
            L0x20019864_f * (x**2) * (y_6**3) + 
            L0x20019866_f * (x**3) * (y_6**3) + 
            L0x20019868_f * (x**0) * (y_6**4) + 
            L0x2001986a_f * (x**1) * (y_6**4) + 
            L0x2001986c_f * (x**2) * (y_6**4) + 
            L0x2001986e_f * (x**3) * (y_6**4) + 
            L0x20019870_f * (x**0) * (y_6**5) + 
            L0x20019872_f * (x**1) * (y_6**5) + 
            L0x20019874_f * (x**2) * (y_6**5) + 
            L0x20019876_f * (x**3) * (y_6**5) + 
            L0x20019878_f * (x**0) * (y_6**6) + 
            L0x2001987a_f * (x**1) * (y_6**6) + 
            L0x2001987c_f * (x**2) * (y_6**6) + 
            L0x2001987e_f * (x**3) * (y_6**6) + 
            L0x20019880_f * (x**0) * (y_6**7) + 
            L0x20019882_f * (x**1) * (y_6**7) + 
            L0x20019884_f * (x**2) * (y_6**7) + 
            L0x20019886_f * (x**3) * (y_6**7) + 
            L0x20019888_f * (x**0) * (y_6**8) + 
            L0x2001988a_f * (x**1) * (y_6**8) + 
            L0x2001988c_f * (x**2) * (y_6**8) + 
            L0x2001988e_f * (x**3) * (y_6**8) + 
            L0x20019890_f * (x**0) * (y_6**9) + 
            L0x20019892_f * (x**1) * (y_6**9) + 
            L0x20019894_f * (x**2) * (y_6**9) + 
            L0x20019896_f * (x**3) * (y_6**9) + 
            L0x20019898_f * (x**0) * (y_6**10) + 
            L0x2001989a_f * (x**1) * (y_6**10) + 
            L0x2001989c_f * (x**2) * (y_6**10) + 
            L0x2001989e_f * (x**3) * (y_6**10) + 
            L0x200198a0_f * (x**0) * (y_6**11) + 
            L0x200198a2_f * (x**1) * (y_6**11) + 
            L0x200198a4_f * (x**2) * (y_6**11) + 
            L0x200198a6_f * (x**3) * (y_6**11) + 
            L0x200198a8_f * (x**0) * (y_6**12) + 
            L0x200198aa_f * (x**1) * (y_6**12) + 
            L0x200198ac_f * (x**2) * (y_6**12) + 
            L0x200198ae_f * (x**3) * (y_6**12) + 
            L0x200198b0_f * (x**0) * (y_6**13) + 
            L0x200198b2_f * (x**1) * (y_6**13) + 
            L0x200198b4_f * (x**2) * (y_6**13) + 
            L0x200198b6_f * (x**3) * (y_6**13) + 
            L0x200198b8_f * (x**0) * (y_6**14) + 
            L0x200198ba_f * (x**1) * (y_6**14) + 
            L0x200198bc_f * (x**2) * (y_6**14) + 
            L0x200198be_f * (x**3) * (y_6**14) + 
            L0x200198c0_f * (x**0) * (y_6**15) + 
            L0x200198c2_f * (x**1) * (y_6**15) + 
            L0x200198c4_f * (x**2) * (y_6**15) + 
            L0x200198c6_f * (x**3) * (y_6**15) + 
            L0x200198c8_f * (x**0) * (y_6**16) + 
            L0x200198ca_f * (x**1) * (y_6**16) + 
            L0x200198cc_f * (x**2) * (y_6**16) + 
            L0x200198ce_f * (x**3) * (y_6**16) + 
            L0x200198d0_f * (x**0) * (y_6**17) + 
            L0x200198d2_f * (x**1) * (y_6**17) + 
            L0x200198d4_f * (x**2) * (y_6**17) + 
            L0x200198d6_f * (x**3) * (y_6**17) + 
            L0x200198d8_f * (x**0) * (y_6**18) + 
            L0x200198da_f * (x**1) * (y_6**18) + 
            L0x200198dc_f * (x**2) * (y_6**18) + 
            L0x200198de_f * (x**3) * (y_6**18) + 
            L0x200198e0_f * (x**0) * (y_6**19) + 
            L0x200198e2_f * (x**1) * (y_6**19) + 
            L0x200198e4_f * (x**2) * (y_6**19) + 
            L0x200198e6_f * (x**3) * (y_6**19) + 
            L0x200198e8_f * (x**0) * (y_6**20) + 
            L0x200198ea_f * (x**1) * (y_6**20) + 
            L0x200198ec_f * (x**2) * (y_6**20) + 
            L0x200198ee_f * (x**3) * (y_6**20) + 
            L0x200198f0_f * (x**0) * (y_6**21) + 
            L0x200198f2_f * (x**1) * (y_6**21) + 
            L0x200198f4_f * (x**2) * (y_6**21) + 
            L0x200198f6_f * (x**3) * (y_6**21) + 
            L0x200198f8_f * (x**0) * (y_6**22) + 
            L0x200198fa_f * (x**1) * (y_6**22) + 
            L0x200198fc_f * (x**2) * (y_6**22) + 
            L0x200198fe_f * (x**3) * (y_6**22) + 
            L0x20019900_f * (x**0) * (y_6**23) + 
            L0x20019902_f * (x**1) * (y_6**23) + 
            L0x20019904_f * (x**2) * (y_6**23) + 
            L0x20019906_f * (x**3) * (y_6**23) + 
            L0x20019908_f * (x**0) * (y_6**24) + 
            L0x2001990a_f * (x**1) * (y_6**24) + 
            L0x2001990c_f * (x**2) * (y_6**24) + 
            L0x2001990e_f * (x**3) * (y_6**24) + 
            L0x20019910_f * (x**0) * (y_6**25) + 
            L0x20019912_f * (x**1) * (y_6**25) + 
            L0x20019914_f * (x**2) * (y_6**25) + 
            L0x20019916_f * (x**3) * (y_6**25) + 
            L0x20019918_f * (x**0) * (y_6**26) + 
            L0x2001991a_f * (x**1) * (y_6**26) + 
            L0x2001991c_f * (x**2) * (y_6**26) + 
            L0x2001991e_f * (x**3) * (y_6**26) + 
            L0x20019920_f * (x**0) * (y_6**27) + 
            L0x20019922_f * (x**1) * (y_6**27) + 
            L0x20019924_f * (x**2) * (y_6**27) + 
            L0x20019926_f * (x**3) * (y_6**27) + 
            L0x20019928_f * (x**0) * (y_6**28) + 
            L0x2001992a_f * (x**1) * (y_6**28) + 
            L0x2001992c_f * (x**2) * (y_6**28) + 
            L0x2001992e_f * (x**3) * (y_6**28) + 
            L0x20019930_f * (x**0) * (y_6**29) + 
            L0x20019932_f * (x**1) * (y_6**29) + 
            L0x20019934_f * (x**2) * (y_6**29) + 
            L0x20019936_f * (x**3) * (y_6**29) + 
            L0x20019938_f * (x**0) * (y_6**30) + 
            L0x2001993a_f * (x**1) * (y_6**30) + 
            L0x2001993c_f * (x**2) * (y_6**30) + 
            L0x2001993e_f * (x**3) * (y_6**30) + 
            L0x20019940_f * (x**0) * (y_6**31) + 
            L0x20019942_f * (x**1) * (y_6**31) + 
            L0x20019944_f * (x**2) * (y_6**31) + 
            L0x20019946_f * (x**3) * (y_6**31) + 
            L0x20019948_f * (x**0) * (y_6**32) + 
            L0x2001994a_f * (x**1) * (y_6**32) + 
            L0x2001994c_f * (x**2) * (y_6**32) + 
            L0x2001994e_f * (x**3) * (y_6**32) + 
            L0x20019950_f * (x**0) * (y_6**33) + 
            L0x20019952_f * (x**1) * (y_6**33) + 
            L0x20019954_f * (x**2) * (y_6**33) + 
            L0x20019956_f * (x**3) * (y_6**33) + 
            L0x20019958_f * (x**0) * (y_6**34) + 
            L0x2001995a_f * (x**1) * (y_6**34) + 
            L0x2001995c_f * (x**2) * (y_6**34) + 
            L0x2001995e_f * (x**3) * (y_6**34) + 
            L0x20019960_f * (x**0) * (y_6**35) + 
            L0x20019962_f * (x**1) * (y_6**35) + 
            L0x20019964_f * (x**2) * (y_6**35) + 
            L0x20019966_f * (x**3) * (y_6**35) + 
            L0x20019968_f * (x**0) * (y_6**36) + 
            L0x2001996a_f * (x**1) * (y_6**36) + 
            L0x2001996c_f * (x**2) * (y_6**36) + 
            L0x2001996e_f * (x**3) * (y_6**36) + 
            L0x20019970_f * (x**0) * (y_6**37) + 
            L0x20019972_f * (x**1) * (y_6**37) + 
            L0x20019974_f * (x**2) * (y_6**37) + 
            L0x20019976_f * (x**3) * (y_6**37) + 
            L0x20019978_f * (x**0) * (y_6**38) + 
            L0x2001997a_f * (x**1) * (y_6**38) + 
            L0x2001997c_f * (x**2) * (y_6**38) + 
            L0x2001997e_f * (x**3) * (y_6**38) + 
            L0x20019980_f * (x**0) * (y_6**39) + 
            L0x20019982_f * (x**1) * (y_6**39) + 
            L0x20019984_f * (x**2) * (y_6**39) + 
            L0x20019986_f * (x**3) * (y_6**39) + 
            L0x20019988_f * (x**0) * (y_6**40) + 
            L0x2001998a_f * (x**1) * (y_6**40) + 
            L0x2001998c_f * (x**2) * (y_6**40) + 
            L0x2001998e_f * (x**3) * (y_6**40) + 
            L0x20019990_f * (x**0) * (y_6**41) + 
            L0x20019992_f * (x**1) * (y_6**41) + 
            L0x20019994_f * (x**2) * (y_6**41) + 
            L0x20019996_f * (x**3) * (y_6**41) + 
            L0x20019998_f * (x**0) * (y_6**42) + 
            L0x2001999a_f * (x**1) * (y_6**42) + 
            L0x2001999c_f * (x**2) * (y_6**42) + 
            L0x2001999e_f * (x**3) * (y_6**42) + 
            L0x200199a0_f * (x**0) * (y_6**43) + 
            L0x200199a2_f * (x**1) * (y_6**43) + 
            L0x200199a4_f * (x**2) * (y_6**43) + 
            L0x200199a6_f * (x**3) * (y_6**43) + 
            L0x200199a8_f * (x**0) * (y_6**44) + 
            L0x200199aa_f * (x**1) * (y_6**44) + 
            L0x200199ac_f * (x**2) * (y_6**44) + 
            L0x200199ae_f * (x**3) * (y_6**44) + 
            L0x200199b0_f * (x**0) * (y_6**45) + 
            L0x200199b2_f * (x**1) * (y_6**45) + 
            L0x200199b4_f * (x**2) * (y_6**45) + 
            L0x200199b6_f * (x**3) * (y_6**45) + 
            L0x200199b8_f * (x**0) * (y_6**46) + 
            L0x200199ba_f * (x**1) * (y_6**46) + 
            L0x200199bc_f * (x**2) * (y_6**46) + 
            L0x200199be_f * (x**3) * (y_6**46) + 
            L0x200199c0_f * (x**0) * (y_6**47) + 
            L0x200199c2_f * (x**1) * (y_6**47) + 
            L0x200199c4_f * (x**2) * (y_6**47) + 
            L0x200199c6_f * (x**3) * (y_6**47) + 
            L0x200199c8_f * (x**0) * (y_6**48) + 
            L0x200199ca_f * (x**1) * (y_6**48) + 
            L0x200199cc_f * (x**2) * (y_6**48) + 
            L0x200199ce_f * (x**3) * (y_6**48) + 
            L0x200199d0_f * (x**0) * (y_6**49) + 
            L0x200199d2_f * (x**1) * (y_6**49) + 
            L0x200199d4_f * (x**2) * (y_6**49) + 
            L0x200199d6_f * (x**3) * (y_6**49) + 
            L0x200199d8_f * (x**0) * (y_6**50) + 
            L0x200199da_f * (x**1) * (y_6**50) + 
            L0x200199dc_f * (x**2) * (y_6**50) + 
            L0x200199de_f * (x**3) * (y_6**50) + 
            L0x200199e0_f * (x**0) * (y_6**51) + 
            L0x200199e2_f * (x**1) * (y_6**51) + 
            L0x200199e4_f * (x**2) * (y_6**51) + 
            L0x200199e6_f * (x**3) * (y_6**51) + 
            L0x200199e8_f * (x**0) * (y_6**52) + 
            L0x200199ea_f * (x**1) * (y_6**52) + 
            L0x200199ec_f * (x**2) * (y_6**52) + 
            L0x200199ee_f * (x**3) * (y_6**52) + 
            L0x200199f0_f * (x**0) * (y_6**53) + 
            L0x200199f2_f * (x**1) * (y_6**53) + 
            L0x200199f4_f * (x**2) * (y_6**53) + 
            L0x200199f6_f * (x**3) * (y_6**53) + 
            L0x200199f8_f * (x**0) * (y_6**54) + 
            L0x200199fa_f * (x**1) * (y_6**54) + 
            L0x200199fc_f * (x**2) * (y_6**54) + 
            L0x200199fe_f * (x**3) * (y_6**54) + 
            L0x20019a00_f * (x**0) * (y_6**55) + 
            L0x20019a02_f * (x**1) * (y_6**55) + 
            L0x20019a04_f * (x**2) * (y_6**55) + 
            L0x20019a06_f * (x**3) * (y_6**55) + 
            L0x20019a08_f * (x**0) * (y_6**56) + 
            L0x20019a0a_f * (x**1) * (y_6**56) + 
            L0x20019a0c_f * (x**2) * (y_6**56) + 
            L0x20019a0e_f * (x**3) * (y_6**56) + 
            L0x20019a10_f * (x**0) * (y_6**57) + 
            L0x20019a12_f * (x**1) * (y_6**57) + 
            L0x20019a14_f * (x**2) * (y_6**57) + 
            L0x20019a16_f * (x**3) * (y_6**57) + 
            L0x20019a18_f * (x**0) * (y_6**58) + 
            L0x20019a1a_f * (x**1) * (y_6**58) + 
            L0x20019a1c_f * (x**2) * (y_6**58) + 
            L0x20019a1e_f * (x**3) * (y_6**58) + 
            L0x20019a20_f * (x**0) * (y_6**59) + 
            L0x20019a22_f * (x**1) * (y_6**59) + 
            L0x20019a24_f * (x**2) * (y_6**59) + 
            L0x20019a26_f * (x**3) * (y_6**59) + 
            L0x20019a28_f * (x**0) * (y_6**60) + 
            L0x20019a2a_f * (x**1) * (y_6**60) + 
            L0x20019a2c_f * (x**2) * (y_6**60) + 
            L0x20019a2e_f * (x**3) * (y_6**60) + 
            L0x20019a30_f * (x**0) * (y_6**61) + 
            L0x20019a32_f * (x**1) * (y_6**61) + 
            L0x20019a34_f * (x**2) * (y_6**61) + 
            L0x20019a36_f * (x**3) * (y_6**61) + 
            L0x20019a38_f * (x**0) * (y_6**62) + 
            L0x20019a3a_f * (x**1) * (y_6**62) + 
            L0x20019a3c_f * (x**2) * (y_6**62) + 
            L0x20019a3e_f * (x**3) * (y_6**62) + 
            L0x20019a40_f * (x**0) * (y_6**63) + 
            L0x20019a42_f * (x**1) * (y_6**63) + 
            L0x20019a44_f * (x**2) * (y_6**63) + 
            L0x20019a46_f * (x**3) * (y_6**63)
          )
          [25570049, x**4 - y_3_6 * 17500092, y_3_6**8 - 1],
    (* imm_poly_7 *)
    eqmod (2**32) * (imm_poly_7 * imm_poly_7)
          8 * (
            L0x20019848_f * (x**0) * (y_6**0) + 
            L0x2001984a_f * (x**1) * (y_6**0) + 
            L0x2001984c_f * (x**2) * (y_6**0) + 
            L0x2001984e_f * (x**3) * (y_6**0) + 
            L0x20019850_f * (x**0) * (y_6**1) + 
            L0x20019852_f * (x**1) * (y_6**1) + 
            L0x20019854_f * (x**2) * (y_6**1) + 
            L0x20019856_f * (x**3) * (y_6**1) + 
            L0x20019858_f * (x**0) * (y_6**2) + 
            L0x2001985a_f * (x**1) * (y_6**2) + 
            L0x2001985c_f * (x**2) * (y_6**2) + 
            L0x2001985e_f * (x**3) * (y_6**2) + 
            L0x20019860_f * (x**0) * (y_6**3) + 
            L0x20019862_f * (x**1) * (y_6**3) + 
            L0x20019864_f * (x**2) * (y_6**3) + 
            L0x20019866_f * (x**3) * (y_6**3) + 
            L0x20019868_f * (x**0) * (y_6**4) + 
            L0x2001986a_f * (x**1) * (y_6**4) + 
            L0x2001986c_f * (x**2) * (y_6**4) + 
            L0x2001986e_f * (x**3) * (y_6**4) + 
            L0x20019870_f * (x**0) * (y_6**5) + 
            L0x20019872_f * (x**1) * (y_6**5) + 
            L0x20019874_f * (x**2) * (y_6**5) + 
            L0x20019876_f * (x**3) * (y_6**5) + 
            L0x20019878_f * (x**0) * (y_6**6) + 
            L0x2001987a_f * (x**1) * (y_6**6) + 
            L0x2001987c_f * (x**2) * (y_6**6) + 
            L0x2001987e_f * (x**3) * (y_6**6) + 
            L0x20019880_f * (x**0) * (y_6**7) + 
            L0x20019882_f * (x**1) * (y_6**7) + 
            L0x20019884_f * (x**2) * (y_6**7) + 
            L0x20019886_f * (x**3) * (y_6**7) + 
            L0x20019888_f * (x**0) * (y_6**8) + 
            L0x2001988a_f * (x**1) * (y_6**8) + 
            L0x2001988c_f * (x**2) * (y_6**8) + 
            L0x2001988e_f * (x**3) * (y_6**8) + 
            L0x20019890_f * (x**0) * (y_6**9) + 
            L0x20019892_f * (x**1) * (y_6**9) + 
            L0x20019894_f * (x**2) * (y_6**9) + 
            L0x20019896_f * (x**3) * (y_6**9) + 
            L0x20019898_f * (x**0) * (y_6**10) + 
            L0x2001989a_f * (x**1) * (y_6**10) + 
            L0x2001989c_f * (x**2) * (y_6**10) + 
            L0x2001989e_f * (x**3) * (y_6**10) + 
            L0x200198a0_f * (x**0) * (y_6**11) + 
            L0x200198a2_f * (x**1) * (y_6**11) + 
            L0x200198a4_f * (x**2) * (y_6**11) + 
            L0x200198a6_f * (x**3) * (y_6**11) + 
            L0x200198a8_f * (x**0) * (y_6**12) + 
            L0x200198aa_f * (x**1) * (y_6**12) + 
            L0x200198ac_f * (x**2) * (y_6**12) + 
            L0x200198ae_f * (x**3) * (y_6**12) + 
            L0x200198b0_f * (x**0) * (y_6**13) + 
            L0x200198b2_f * (x**1) * (y_6**13) + 
            L0x200198b4_f * (x**2) * (y_6**13) + 
            L0x200198b6_f * (x**3) * (y_6**13) + 
            L0x200198b8_f * (x**0) * (y_6**14) + 
            L0x200198ba_f * (x**1) * (y_6**14) + 
            L0x200198bc_f * (x**2) * (y_6**14) + 
            L0x200198be_f * (x**3) * (y_6**14) + 
            L0x200198c0_f * (x**0) * (y_6**15) + 
            L0x200198c2_f * (x**1) * (y_6**15) + 
            L0x200198c4_f * (x**2) * (y_6**15) + 
            L0x200198c6_f * (x**3) * (y_6**15) + 
            L0x200198c8_f * (x**0) * (y_6**16) + 
            L0x200198ca_f * (x**1) * (y_6**16) + 
            L0x200198cc_f * (x**2) * (y_6**16) + 
            L0x200198ce_f * (x**3) * (y_6**16) + 
            L0x200198d0_f * (x**0) * (y_6**17) + 
            L0x200198d2_f * (x**1) * (y_6**17) + 
            L0x200198d4_f * (x**2) * (y_6**17) + 
            L0x200198d6_f * (x**3) * (y_6**17) + 
            L0x200198d8_f * (x**0) * (y_6**18) + 
            L0x200198da_f * (x**1) * (y_6**18) + 
            L0x200198dc_f * (x**2) * (y_6**18) + 
            L0x200198de_f * (x**3) * (y_6**18) + 
            L0x200198e0_f * (x**0) * (y_6**19) + 
            L0x200198e2_f * (x**1) * (y_6**19) + 
            L0x200198e4_f * (x**2) * (y_6**19) + 
            L0x200198e6_f * (x**3) * (y_6**19) + 
            L0x200198e8_f * (x**0) * (y_6**20) + 
            L0x200198ea_f * (x**1) * (y_6**20) + 
            L0x200198ec_f * (x**2) * (y_6**20) + 
            L0x200198ee_f * (x**3) * (y_6**20) + 
            L0x200198f0_f * (x**0) * (y_6**21) + 
            L0x200198f2_f * (x**1) * (y_6**21) + 
            L0x200198f4_f * (x**2) * (y_6**21) + 
            L0x200198f6_f * (x**3) * (y_6**21) + 
            L0x200198f8_f * (x**0) * (y_6**22) + 
            L0x200198fa_f * (x**1) * (y_6**22) + 
            L0x200198fc_f * (x**2) * (y_6**22) + 
            L0x200198fe_f * (x**3) * (y_6**22) + 
            L0x20019900_f * (x**0) * (y_6**23) + 
            L0x20019902_f * (x**1) * (y_6**23) + 
            L0x20019904_f * (x**2) * (y_6**23) + 
            L0x20019906_f * (x**3) * (y_6**23) + 
            L0x20019908_f * (x**0) * (y_6**24) + 
            L0x2001990a_f * (x**1) * (y_6**24) + 
            L0x2001990c_f * (x**2) * (y_6**24) + 
            L0x2001990e_f * (x**3) * (y_6**24) + 
            L0x20019910_f * (x**0) * (y_6**25) + 
            L0x20019912_f * (x**1) * (y_6**25) + 
            L0x20019914_f * (x**2) * (y_6**25) + 
            L0x20019916_f * (x**3) * (y_6**25) + 
            L0x20019918_f * (x**0) * (y_6**26) + 
            L0x2001991a_f * (x**1) * (y_6**26) + 
            L0x2001991c_f * (x**2) * (y_6**26) + 
            L0x2001991e_f * (x**3) * (y_6**26) + 
            L0x20019920_f * (x**0) * (y_6**27) + 
            L0x20019922_f * (x**1) * (y_6**27) + 
            L0x20019924_f * (x**2) * (y_6**27) + 
            L0x20019926_f * (x**3) * (y_6**27) + 
            L0x20019928_f * (x**0) * (y_6**28) + 
            L0x2001992a_f * (x**1) * (y_6**28) + 
            L0x2001992c_f * (x**2) * (y_6**28) + 
            L0x2001992e_f * (x**3) * (y_6**28) + 
            L0x20019930_f * (x**0) * (y_6**29) + 
            L0x20019932_f * (x**1) * (y_6**29) + 
            L0x20019934_f * (x**2) * (y_6**29) + 
            L0x20019936_f * (x**3) * (y_6**29) + 
            L0x20019938_f * (x**0) * (y_6**30) + 
            L0x2001993a_f * (x**1) * (y_6**30) + 
            L0x2001993c_f * (x**2) * (y_6**30) + 
            L0x2001993e_f * (x**3) * (y_6**30) + 
            L0x20019940_f * (x**0) * (y_6**31) + 
            L0x20019942_f * (x**1) * (y_6**31) + 
            L0x20019944_f * (x**2) * (y_6**31) + 
            L0x20019946_f * (x**3) * (y_6**31) + 
            L0x20019948_f * (x**0) * (y_6**32) + 
            L0x2001994a_f * (x**1) * (y_6**32) + 
            L0x2001994c_f * (x**2) * (y_6**32) + 
            L0x2001994e_f * (x**3) * (y_6**32) + 
            L0x20019950_f * (x**0) * (y_6**33) + 
            L0x20019952_f * (x**1) * (y_6**33) + 
            L0x20019954_f * (x**2) * (y_6**33) + 
            L0x20019956_f * (x**3) * (y_6**33) + 
            L0x20019958_f * (x**0) * (y_6**34) + 
            L0x2001995a_f * (x**1) * (y_6**34) + 
            L0x2001995c_f * (x**2) * (y_6**34) + 
            L0x2001995e_f * (x**3) * (y_6**34) + 
            L0x20019960_f * (x**0) * (y_6**35) + 
            L0x20019962_f * (x**1) * (y_6**35) + 
            L0x20019964_f * (x**2) * (y_6**35) + 
            L0x20019966_f * (x**3) * (y_6**35) + 
            L0x20019968_f * (x**0) * (y_6**36) + 
            L0x2001996a_f * (x**1) * (y_6**36) + 
            L0x2001996c_f * (x**2) * (y_6**36) + 
            L0x2001996e_f * (x**3) * (y_6**36) + 
            L0x20019970_f * (x**0) * (y_6**37) + 
            L0x20019972_f * (x**1) * (y_6**37) + 
            L0x20019974_f * (x**2) * (y_6**37) + 
            L0x20019976_f * (x**3) * (y_6**37) + 
            L0x20019978_f * (x**0) * (y_6**38) + 
            L0x2001997a_f * (x**1) * (y_6**38) + 
            L0x2001997c_f * (x**2) * (y_6**38) + 
            L0x2001997e_f * (x**3) * (y_6**38) + 
            L0x20019980_f * (x**0) * (y_6**39) + 
            L0x20019982_f * (x**1) * (y_6**39) + 
            L0x20019984_f * (x**2) * (y_6**39) + 
            L0x20019986_f * (x**3) * (y_6**39) + 
            L0x20019988_f * (x**0) * (y_6**40) + 
            L0x2001998a_f * (x**1) * (y_6**40) + 
            L0x2001998c_f * (x**2) * (y_6**40) + 
            L0x2001998e_f * (x**3) * (y_6**40) + 
            L0x20019990_f * (x**0) * (y_6**41) + 
            L0x20019992_f * (x**1) * (y_6**41) + 
            L0x20019994_f * (x**2) * (y_6**41) + 
            L0x20019996_f * (x**3) * (y_6**41) + 
            L0x20019998_f * (x**0) * (y_6**42) + 
            L0x2001999a_f * (x**1) * (y_6**42) + 
            L0x2001999c_f * (x**2) * (y_6**42) + 
            L0x2001999e_f * (x**3) * (y_6**42) + 
            L0x200199a0_f * (x**0) * (y_6**43) + 
            L0x200199a2_f * (x**1) * (y_6**43) + 
            L0x200199a4_f * (x**2) * (y_6**43) + 
            L0x200199a6_f * (x**3) * (y_6**43) + 
            L0x200199a8_f * (x**0) * (y_6**44) + 
            L0x200199aa_f * (x**1) * (y_6**44) + 
            L0x200199ac_f * (x**2) * (y_6**44) + 
            L0x200199ae_f * (x**3) * (y_6**44) + 
            L0x200199b0_f * (x**0) * (y_6**45) + 
            L0x200199b2_f * (x**1) * (y_6**45) + 
            L0x200199b4_f * (x**2) * (y_6**45) + 
            L0x200199b6_f * (x**3) * (y_6**45) + 
            L0x200199b8_f * (x**0) * (y_6**46) + 
            L0x200199ba_f * (x**1) * (y_6**46) + 
            L0x200199bc_f * (x**2) * (y_6**46) + 
            L0x200199be_f * (x**3) * (y_6**46) + 
            L0x200199c0_f * (x**0) * (y_6**47) + 
            L0x200199c2_f * (x**1) * (y_6**47) + 
            L0x200199c4_f * (x**2) * (y_6**47) + 
            L0x200199c6_f * (x**3) * (y_6**47) + 
            L0x200199c8_f * (x**0) * (y_6**48) + 
            L0x200199ca_f * (x**1) * (y_6**48) + 
            L0x200199cc_f * (x**2) * (y_6**48) + 
            L0x200199ce_f * (x**3) * (y_6**48) + 
            L0x200199d0_f * (x**0) * (y_6**49) + 
            L0x200199d2_f * (x**1) * (y_6**49) + 
            L0x200199d4_f * (x**2) * (y_6**49) + 
            L0x200199d6_f * (x**3) * (y_6**49) + 
            L0x200199d8_f * (x**0) * (y_6**50) + 
            L0x200199da_f * (x**1) * (y_6**50) + 
            L0x200199dc_f * (x**2) * (y_6**50) + 
            L0x200199de_f * (x**3) * (y_6**50) + 
            L0x200199e0_f * (x**0) * (y_6**51) + 
            L0x200199e2_f * (x**1) * (y_6**51) + 
            L0x200199e4_f * (x**2) * (y_6**51) + 
            L0x200199e6_f * (x**3) * (y_6**51) + 
            L0x200199e8_f * (x**0) * (y_6**52) + 
            L0x200199ea_f * (x**1) * (y_6**52) + 
            L0x200199ec_f * (x**2) * (y_6**52) + 
            L0x200199ee_f * (x**3) * (y_6**52) + 
            L0x200199f0_f * (x**0) * (y_6**53) + 
            L0x200199f2_f * (x**1) * (y_6**53) + 
            L0x200199f4_f * (x**2) * (y_6**53) + 
            L0x200199f6_f * (x**3) * (y_6**53) + 
            L0x200199f8_f * (x**0) * (y_6**54) + 
            L0x200199fa_f * (x**1) * (y_6**54) + 
            L0x200199fc_f * (x**2) * (y_6**54) + 
            L0x200199fe_f * (x**3) * (y_6**54) + 
            L0x20019a00_f * (x**0) * (y_6**55) + 
            L0x20019a02_f * (x**1) * (y_6**55) + 
            L0x20019a04_f * (x**2) * (y_6**55) + 
            L0x20019a06_f * (x**3) * (y_6**55) + 
            L0x20019a08_f * (x**0) * (y_6**56) + 
            L0x20019a0a_f * (x**1) * (y_6**56) + 
            L0x20019a0c_f * (x**2) * (y_6**56) + 
            L0x20019a0e_f * (x**3) * (y_6**56) + 
            L0x20019a10_f * (x**0) * (y_6**57) + 
            L0x20019a12_f * (x**1) * (y_6**57) + 
            L0x20019a14_f * (x**2) * (y_6**57) + 
            L0x20019a16_f * (x**3) * (y_6**57) + 
            L0x20019a18_f * (x**0) * (y_6**58) + 
            L0x20019a1a_f * (x**1) * (y_6**58) + 
            L0x20019a1c_f * (x**2) * (y_6**58) + 
            L0x20019a1e_f * (x**3) * (y_6**58) + 
            L0x20019a20_f * (x**0) * (y_6**59) + 
            L0x20019a22_f * (x**1) * (y_6**59) + 
            L0x20019a24_f * (x**2) * (y_6**59) + 
            L0x20019a26_f * (x**3) * (y_6**59) + 
            L0x20019a28_f * (x**0) * (y_6**60) + 
            L0x20019a2a_f * (x**1) * (y_6**60) + 
            L0x20019a2c_f * (x**2) * (y_6**60) + 
            L0x20019a2e_f * (x**3) * (y_6**60) + 
            L0x20019a30_f * (x**0) * (y_6**61) + 
            L0x20019a32_f * (x**1) * (y_6**61) + 
            L0x20019a34_f * (x**2) * (y_6**61) + 
            L0x20019a36_f * (x**3) * (y_6**61) + 
            L0x20019a38_f * (x**0) * (y_6**62) + 
            L0x20019a3a_f * (x**1) * (y_6**62) + 
            L0x20019a3c_f * (x**2) * (y_6**62) + 
            L0x20019a3e_f * (x**3) * (y_6**62) + 
            L0x20019a40_f * (x**0) * (y_6**63) + 
            L0x20019a42_f * (x**1) * (y_6**63) + 
            L0x20019a44_f * (x**2) * (y_6**63) + 
            L0x20019a46_f * (x**3) * (y_6**63)
          )
          [25570049, x**4 - y_3_7 * 6096206, y_3_7**8 - 1],
    (* mod q *)
    eqmod L0x20019848_f L0x20019848 2**13,
    eqmod L0x2001984a_f L0x2001984a 2**13,
    eqmod L0x2001984c_f L0x2001984c 2**13,
    eqmod L0x2001984e_f L0x2001984e 2**13,
    eqmod L0x20019850_f L0x20019850 2**13,
    eqmod L0x20019852_f L0x20019852 2**13,
    eqmod L0x20019854_f L0x20019854 2**13,
    eqmod L0x20019856_f L0x20019856 2**13,
    eqmod L0x20019858_f L0x20019858 2**13,
    eqmod L0x2001985a_f L0x2001985a 2**13,
    eqmod L0x2001985c_f L0x2001985c 2**13,
    eqmod L0x2001985e_f L0x2001985e 2**13,
    eqmod L0x20019860_f L0x20019860 2**13,
    eqmod L0x20019862_f L0x20019862 2**13,
    eqmod L0x20019864_f L0x20019864 2**13,
    eqmod L0x20019866_f L0x20019866 2**13,
    eqmod L0x20019868_f L0x20019868 2**13,
    eqmod L0x2001986a_f L0x2001986a 2**13,
    eqmod L0x2001986c_f L0x2001986c 2**13,
    eqmod L0x2001986e_f L0x2001986e 2**13,
    eqmod L0x20019870_f L0x20019870 2**13,
    eqmod L0x20019872_f L0x20019872 2**13,
    eqmod L0x20019874_f L0x20019874 2**13,
    eqmod L0x20019876_f L0x20019876 2**13,
    eqmod L0x20019878_f L0x20019878 2**13,
    eqmod L0x2001987a_f L0x2001987a 2**13,
    eqmod L0x2001987c_f L0x2001987c 2**13,
    eqmod L0x2001987e_f L0x2001987e 2**13,
    eqmod L0x20019880_f L0x20019880 2**13,
    eqmod L0x20019882_f L0x20019882 2**13,
    eqmod L0x20019884_f L0x20019884 2**13,
    eqmod L0x20019886_f L0x20019886 2**13,
    eqmod L0x20019888_f L0x20019888 2**13,
    eqmod L0x2001988a_f L0x2001988a 2**13,
    eqmod L0x2001988c_f L0x2001988c 2**13,
    eqmod L0x2001988e_f L0x2001988e 2**13,
    eqmod L0x20019890_f L0x20019890 2**13,
    eqmod L0x20019892_f L0x20019892 2**13,
    eqmod L0x20019894_f L0x20019894 2**13,
    eqmod L0x20019896_f L0x20019896 2**13,
    eqmod L0x20019898_f L0x20019898 2**13,
    eqmod L0x2001989a_f L0x2001989a 2**13,
    eqmod L0x2001989c_f L0x2001989c 2**13,
    eqmod L0x2001989e_f L0x2001989e 2**13,
    eqmod L0x200198a0_f L0x200198a0 2**13,
    eqmod L0x200198a2_f L0x200198a2 2**13,
    eqmod L0x200198a4_f L0x200198a4 2**13,
    eqmod L0x200198a6_f L0x200198a6 2**13,
    eqmod L0x200198a8_f L0x200198a8 2**13,
    eqmod L0x200198aa_f L0x200198aa 2**13,
    eqmod L0x200198ac_f L0x200198ac 2**13,
    eqmod L0x200198ae_f L0x200198ae 2**13,
    eqmod L0x200198b0_f L0x200198b0 2**13,
    eqmod L0x200198b2_f L0x200198b2 2**13,
    eqmod L0x200198b4_f L0x200198b4 2**13,
    eqmod L0x200198b6_f L0x200198b6 2**13,
    eqmod L0x200198b8_f L0x200198b8 2**13,
    eqmod L0x200198ba_f L0x200198ba 2**13,
    eqmod L0x200198bc_f L0x200198bc 2**13,
    eqmod L0x200198be_f L0x200198be 2**13,
    eqmod L0x200198c0_f L0x200198c0 2**13,
    eqmod L0x200198c2_f L0x200198c2 2**13,
    eqmod L0x200198c4_f L0x200198c4 2**13,
    eqmod L0x200198c6_f L0x200198c6 2**13,
    eqmod L0x200198c8_f L0x200198c8 2**13,
    eqmod L0x200198ca_f L0x200198ca 2**13,
    eqmod L0x200198cc_f L0x200198cc 2**13,
    eqmod L0x200198ce_f L0x200198ce 2**13,
    eqmod L0x200198d0_f L0x200198d0 2**13,
    eqmod L0x200198d2_f L0x200198d2 2**13,
    eqmod L0x200198d4_f L0x200198d4 2**13,
    eqmod L0x200198d6_f L0x200198d6 2**13,
    eqmod L0x200198d8_f L0x200198d8 2**13,
    eqmod L0x200198da_f L0x200198da 2**13,
    eqmod L0x200198dc_f L0x200198dc 2**13,
    eqmod L0x200198de_f L0x200198de 2**13,
    eqmod L0x200198e0_f L0x200198e0 2**13,
    eqmod L0x200198e2_f L0x200198e2 2**13,
    eqmod L0x200198e4_f L0x200198e4 2**13,
    eqmod L0x200198e6_f L0x200198e6 2**13,
    eqmod L0x200198e8_f L0x200198e8 2**13,
    eqmod L0x200198ea_f L0x200198ea 2**13,
    eqmod L0x200198ec_f L0x200198ec 2**13,
    eqmod L0x200198ee_f L0x200198ee 2**13,
    eqmod L0x200198f0_f L0x200198f0 2**13,
    eqmod L0x200198f2_f L0x200198f2 2**13,
    eqmod L0x200198f4_f L0x200198f4 2**13,
    eqmod L0x200198f6_f L0x200198f6 2**13,
    eqmod L0x200198f8_f L0x200198f8 2**13,
    eqmod L0x200198fa_f L0x200198fa 2**13,
    eqmod L0x200198fc_f L0x200198fc 2**13,
    eqmod L0x200198fe_f L0x200198fe 2**13,
    eqmod L0x20019900_f L0x20019900 2**13,
    eqmod L0x20019902_f L0x20019902 2**13,
    eqmod L0x20019904_f L0x20019904 2**13,
    eqmod L0x20019906_f L0x20019906 2**13,
    eqmod L0x20019908_f L0x20019908 2**13,
    eqmod L0x2001990a_f L0x2001990a 2**13,
    eqmod L0x2001990c_f L0x2001990c 2**13,
    eqmod L0x2001990e_f L0x2001990e 2**13,
    eqmod L0x20019910_f L0x20019910 2**13,
    eqmod L0x20019912_f L0x20019912 2**13,
    eqmod L0x20019914_f L0x20019914 2**13,
    eqmod L0x20019916_f L0x20019916 2**13,
    eqmod L0x20019918_f L0x20019918 2**13,
    eqmod L0x2001991a_f L0x2001991a 2**13,
    eqmod L0x2001991c_f L0x2001991c 2**13,
    eqmod L0x2001991e_f L0x2001991e 2**13,
    eqmod L0x20019920_f L0x20019920 2**13,
    eqmod L0x20019922_f L0x20019922 2**13,
    eqmod L0x20019924_f L0x20019924 2**13,
    eqmod L0x20019926_f L0x20019926 2**13,
    eqmod L0x20019928_f L0x20019928 2**13,
    eqmod L0x2001992a_f L0x2001992a 2**13,
    eqmod L0x2001992c_f L0x2001992c 2**13,
    eqmod L0x2001992e_f L0x2001992e 2**13,
    eqmod L0x20019930_f L0x20019930 2**13,
    eqmod L0x20019932_f L0x20019932 2**13,
    eqmod L0x20019934_f L0x20019934 2**13,
    eqmod L0x20019936_f L0x20019936 2**13,
    eqmod L0x20019938_f L0x20019938 2**13,
    eqmod L0x2001993a_f L0x2001993a 2**13,
    eqmod L0x2001993c_f L0x2001993c 2**13,
    eqmod L0x2001993e_f L0x2001993e 2**13,
    eqmod L0x20019940_f L0x20019940 2**13,
    eqmod L0x20019942_f L0x20019942 2**13,
    eqmod L0x20019944_f L0x20019944 2**13,
    eqmod L0x20019946_f L0x20019946 2**13,
    eqmod L0x20019948_f L0x20019948 2**13,
    eqmod L0x2001994a_f L0x2001994a 2**13,
    eqmod L0x2001994c_f L0x2001994c 2**13,
    eqmod L0x2001994e_f L0x2001994e 2**13,
    eqmod L0x20019950_f L0x20019950 2**13,
    eqmod L0x20019952_f L0x20019952 2**13,
    eqmod L0x20019954_f L0x20019954 2**13,
    eqmod L0x20019956_f L0x20019956 2**13,
    eqmod L0x20019958_f L0x20019958 2**13,
    eqmod L0x2001995a_f L0x2001995a 2**13,
    eqmod L0x2001995c_f L0x2001995c 2**13,
    eqmod L0x2001995e_f L0x2001995e 2**13,
    eqmod L0x20019960_f L0x20019960 2**13,
    eqmod L0x20019962_f L0x20019962 2**13,
    eqmod L0x20019964_f L0x20019964 2**13,
    eqmod L0x20019966_f L0x20019966 2**13,
    eqmod L0x20019968_f L0x20019968 2**13,
    eqmod L0x2001996a_f L0x2001996a 2**13,
    eqmod L0x2001996c_f L0x2001996c 2**13,
    eqmod L0x2001996e_f L0x2001996e 2**13,
    eqmod L0x20019970_f L0x20019970 2**13,
    eqmod L0x20019972_f L0x20019972 2**13,
    eqmod L0x20019974_f L0x20019974 2**13,
    eqmod L0x20019976_f L0x20019976 2**13,
    eqmod L0x20019978_f L0x20019978 2**13,
    eqmod L0x2001997a_f L0x2001997a 2**13,
    eqmod L0x2001997c_f L0x2001997c 2**13,
    eqmod L0x2001997e_f L0x2001997e 2**13,
    eqmod L0x20019980_f L0x20019980 2**13,
    eqmod L0x20019982_f L0x20019982 2**13,
    eqmod L0x20019984_f L0x20019984 2**13,
    eqmod L0x20019986_f L0x20019986 2**13,
    eqmod L0x20019988_f L0x20019988 2**13,
    eqmod L0x2001998a_f L0x2001998a 2**13,
    eqmod L0x2001998c_f L0x2001998c 2**13,
    eqmod L0x2001998e_f L0x2001998e 2**13,
    eqmod L0x20019990_f L0x20019990 2**13,
    eqmod L0x20019992_f L0x20019992 2**13,
    eqmod L0x20019994_f L0x20019994 2**13,
    eqmod L0x20019996_f L0x20019996 2**13,
    eqmod L0x20019998_f L0x20019998 2**13,
    eqmod L0x2001999a_f L0x2001999a 2**13,
    eqmod L0x2001999c_f L0x2001999c 2**13,
    eqmod L0x2001999e_f L0x2001999e 2**13,
    eqmod L0x200199a0_f L0x200199a0 2**13,
    eqmod L0x200199a2_f L0x200199a2 2**13,
    eqmod L0x200199a4_f L0x200199a4 2**13,
    eqmod L0x200199a6_f L0x200199a6 2**13,
    eqmod L0x200199a8_f L0x200199a8 2**13,
    eqmod L0x200199aa_f L0x200199aa 2**13,
    eqmod L0x200199ac_f L0x200199ac 2**13,
    eqmod L0x200199ae_f L0x200199ae 2**13,
    eqmod L0x200199b0_f L0x200199b0 2**13,
    eqmod L0x200199b2_f L0x200199b2 2**13,
    eqmod L0x200199b4_f L0x200199b4 2**13,
    eqmod L0x200199b6_f L0x200199b6 2**13,
    eqmod L0x200199b8_f L0x200199b8 2**13,
    eqmod L0x200199ba_f L0x200199ba 2**13,
    eqmod L0x200199bc_f L0x200199bc 2**13,
    eqmod L0x200199be_f L0x200199be 2**13,
    eqmod L0x200199c0_f L0x200199c0 2**13,
    eqmod L0x200199c2_f L0x200199c2 2**13,
    eqmod L0x200199c4_f L0x200199c4 2**13,
    eqmod L0x200199c6_f L0x200199c6 2**13,
    eqmod L0x200199c8_f L0x200199c8 2**13,
    eqmod L0x200199ca_f L0x200199ca 2**13,
    eqmod L0x200199cc_f L0x200199cc 2**13,
    eqmod L0x200199ce_f L0x200199ce 2**13,
    eqmod L0x200199d0_f L0x200199d0 2**13,
    eqmod L0x200199d2_f L0x200199d2 2**13,
    eqmod L0x200199d4_f L0x200199d4 2**13,
    eqmod L0x200199d6_f L0x200199d6 2**13,
    eqmod L0x200199d8_f L0x200199d8 2**13,
    eqmod L0x200199da_f L0x200199da 2**13,
    eqmod L0x200199dc_f L0x200199dc 2**13,
    eqmod L0x200199de_f L0x200199de 2**13,
    eqmod L0x200199e0_f L0x200199e0 2**13,
    eqmod L0x200199e2_f L0x200199e2 2**13,
    eqmod L0x200199e4_f L0x200199e4 2**13,
    eqmod L0x200199e6_f L0x200199e6 2**13,
    eqmod L0x200199e8_f L0x200199e8 2**13,
    eqmod L0x200199ea_f L0x200199ea 2**13,
    eqmod L0x200199ec_f L0x200199ec 2**13,
    eqmod L0x200199ee_f L0x200199ee 2**13,
    eqmod L0x200199f0_f L0x200199f0 2**13,
    eqmod L0x200199f2_f L0x200199f2 2**13,
    eqmod L0x200199f4_f L0x200199f4 2**13,
    eqmod L0x200199f6_f L0x200199f6 2**13,
    eqmod L0x200199f8_f L0x200199f8 2**13,
    eqmod L0x200199fa_f L0x200199fa 2**13,
    eqmod L0x200199fc_f L0x200199fc 2**13,
    eqmod L0x200199fe_f L0x200199fe 2**13,
    eqmod L0x20019a00_f L0x20019a00 2**13,
    eqmod L0x20019a02_f L0x20019a02 2**13,
    eqmod L0x20019a04_f L0x20019a04 2**13,
    eqmod L0x20019a06_f L0x20019a06 2**13,
    eqmod L0x20019a08_f L0x20019a08 2**13,
    eqmod L0x20019a0a_f L0x20019a0a 2**13,
    eqmod L0x20019a0c_f L0x20019a0c 2**13,
    eqmod L0x20019a0e_f L0x20019a0e 2**13,
    eqmod L0x20019a10_f L0x20019a10 2**13,
    eqmod L0x20019a12_f L0x20019a12 2**13,
    eqmod L0x20019a14_f L0x20019a14 2**13,
    eqmod L0x20019a16_f L0x20019a16 2**13,
    eqmod L0x20019a18_f L0x20019a18 2**13,
    eqmod L0x20019a1a_f L0x20019a1a 2**13,
    eqmod L0x20019a1c_f L0x20019a1c 2**13,
    eqmod L0x20019a1e_f L0x20019a1e 2**13,
    eqmod L0x20019a20_f L0x20019a20 2**13,
    eqmod L0x20019a22_f L0x20019a22 2**13,
    eqmod L0x20019a24_f L0x20019a24 2**13,
    eqmod L0x20019a26_f L0x20019a26 2**13,
    eqmod L0x20019a28_f L0x20019a28 2**13,
    eqmod L0x20019a2a_f L0x20019a2a 2**13,
    eqmod L0x20019a2c_f L0x20019a2c 2**13,
    eqmod L0x20019a2e_f L0x20019a2e 2**13,
    eqmod L0x20019a30_f L0x20019a30 2**13,
    eqmod L0x20019a32_f L0x20019a32 2**13,
    eqmod L0x20019a34_f L0x20019a34 2**13,
    eqmod L0x20019a36_f L0x20019a36 2**13,
    eqmod L0x20019a38_f L0x20019a38 2**13,
    eqmod L0x20019a3a_f L0x20019a3a 2**13,
    eqmod L0x20019a3c_f L0x20019a3c 2**13,
    eqmod L0x20019a3e_f L0x20019a3e 2**13,
    eqmod L0x20019a40_f L0x20019a40 2**13,
    eqmod L0x20019a42_f L0x20019a42 2**13,
    eqmod L0x20019a44_f L0x20019a44 2**13,
    eqmod L0x20019a46_f L0x20019a46 2**13
  ]
  &&
  (* range *)
  and [
    (-12785024)@32 <=s L0x20019848_f, L0x20019848_f <=s 12785024@32,
    (-12785024)@32 <=s L0x2001984a_f, L0x2001984a_f <=s 12785024@32,
    (-12785024)@32 <=s L0x2001984c_f, L0x2001984c_f <=s 12785024@32,
    (-12785024)@32 <=s L0x2001984e_f, L0x2001984e_f <=s 12785024@32,
    (-12785024)@32 <=s L0x20019850_f, L0x20019850_f <=s 12785024@32,
    (-12785024)@32 <=s L0x20019852_f, L0x20019852_f <=s 12785024@32,
    (-12785024)@32 <=s L0x20019854_f, L0x20019854_f <=s 12785024@32,
    (-12785024)@32 <=s L0x20019856_f, L0x20019856_f <=s 12785024@32,
    (-12785024)@32 <=s L0x20019858_f, L0x20019858_f <=s 12785024@32,
    (-12785024)@32 <=s L0x2001985a_f, L0x2001985a_f <=s 12785024@32,
    (-12785024)@32 <=s L0x2001985c_f, L0x2001985c_f <=s 12785024@32,
    (-12785024)@32 <=s L0x2001985e_f, L0x2001985e_f <=s 12785024@32,
    (-12785024)@32 <=s L0x20019860_f, L0x20019860_f <=s 12785024@32,
    (-12785024)@32 <=s L0x20019862_f, L0x20019862_f <=s 12785024@32,
    (-12785024)@32 <=s L0x20019864_f, L0x20019864_f <=s 12785024@32,
    (-12785024)@32 <=s L0x20019866_f, L0x20019866_f <=s 12785024@32,
    (-12785024)@32 <=s L0x20019868_f, L0x20019868_f <=s 12785024@32,
    (-12785024)@32 <=s L0x2001986a_f, L0x2001986a_f <=s 12785024@32,
    (-12785024)@32 <=s L0x2001986c_f, L0x2001986c_f <=s 12785024@32,
    (-12785024)@32 <=s L0x2001986e_f, L0x2001986e_f <=s 12785024@32,
    (-12785024)@32 <=s L0x20019870_f, L0x20019870_f <=s 12785024@32,
    (-12785024)@32 <=s L0x20019872_f, L0x20019872_f <=s 12785024@32,
    (-12785024)@32 <=s L0x20019874_f, L0x20019874_f <=s 12785024@32,
    (-12785024)@32 <=s L0x20019876_f, L0x20019876_f <=s 12785024@32,
    (-12785024)@32 <=s L0x20019878_f, L0x20019878_f <=s 12785024@32,
    (-12785024)@32 <=s L0x2001987a_f, L0x2001987a_f <=s 12785024@32,
    (-12785024)@32 <=s L0x2001987c_f, L0x2001987c_f <=s 12785024@32,
    (-12785024)@32 <=s L0x2001987e_f, L0x2001987e_f <=s 12785024@32,
    (-12785024)@32 <=s L0x20019880_f, L0x20019880_f <=s 12785024@32,
    (-12785024)@32 <=s L0x20019882_f, L0x20019882_f <=s 12785024@32,
    (-12785024)@32 <=s L0x20019884_f, L0x20019884_f <=s 12785024@32,
    (-12785024)@32 <=s L0x20019886_f, L0x20019886_f <=s 12785024@32,
    (-12785024)@32 <=s L0x20019888_f, L0x20019888_f <=s 12785024@32,
    (-12785024)@32 <=s L0x2001988a_f, L0x2001988a_f <=s 12785024@32,
    (-12785024)@32 <=s L0x2001988c_f, L0x2001988c_f <=s 12785024@32,
    (-12785024)@32 <=s L0x2001988e_f, L0x2001988e_f <=s 12785024@32,
    (-12785024)@32 <=s L0x20019890_f, L0x20019890_f <=s 12785024@32,
    (-12785024)@32 <=s L0x20019892_f, L0x20019892_f <=s 12785024@32,
    (-12785024)@32 <=s L0x20019894_f, L0x20019894_f <=s 12785024@32,
    (-12785024)@32 <=s L0x20019896_f, L0x20019896_f <=s 12785024@32,
    (-12785024)@32 <=s L0x20019898_f, L0x20019898_f <=s 12785024@32,
    (-12785024)@32 <=s L0x2001989a_f, L0x2001989a_f <=s 12785024@32,
    (-12785024)@32 <=s L0x2001989c_f, L0x2001989c_f <=s 12785024@32,
    (-12785024)@32 <=s L0x2001989e_f, L0x2001989e_f <=s 12785024@32,
    (-12785024)@32 <=s L0x200198a0_f, L0x200198a0_f <=s 12785024@32,
    (-12785024)@32 <=s L0x200198a2_f, L0x200198a2_f <=s 12785024@32,
    (-12785024)@32 <=s L0x200198a4_f, L0x200198a4_f <=s 12785024@32,
    (-12785024)@32 <=s L0x200198a6_f, L0x200198a6_f <=s 12785024@32,
    (-12785024)@32 <=s L0x200198a8_f, L0x200198a8_f <=s 12785024@32,
    (-12785024)@32 <=s L0x200198aa_f, L0x200198aa_f <=s 12785024@32,
    (-12785024)@32 <=s L0x200198ac_f, L0x200198ac_f <=s 12785024@32,
    (-12785024)@32 <=s L0x200198ae_f, L0x200198ae_f <=s 12785024@32,
    (-12785024)@32 <=s L0x200198b0_f, L0x200198b0_f <=s 12785024@32,
    (-12785024)@32 <=s L0x200198b2_f, L0x200198b2_f <=s 12785024@32,
    (-12785024)@32 <=s L0x200198b4_f, L0x200198b4_f <=s 12785024@32,
    (-12785024)@32 <=s L0x200198b6_f, L0x200198b6_f <=s 12785024@32,
    (-12785024)@32 <=s L0x200198b8_f, L0x200198b8_f <=s 12785024@32,
    (-12785024)@32 <=s L0x200198ba_f, L0x200198ba_f <=s 12785024@32,
    (-12785024)@32 <=s L0x200198bc_f, L0x200198bc_f <=s 12785024@32,
    (-12785024)@32 <=s L0x200198be_f, L0x200198be_f <=s 12785024@32,
    (-12785024)@32 <=s L0x200198c0_f, L0x200198c0_f <=s 12785024@32,
    (-12785024)@32 <=s L0x200198c2_f, L0x200198c2_f <=s 12785024@32,
    (-12785024)@32 <=s L0x200198c4_f, L0x200198c4_f <=s 12785024@32,
    (-12785024)@32 <=s L0x200198c6_f, L0x200198c6_f <=s 12785024@32,
    (-12785024)@32 <=s L0x200198c8_f, L0x200198c8_f <=s 12785024@32,
    (-12785024)@32 <=s L0x200198ca_f, L0x200198ca_f <=s 12785024@32,
    (-12785024)@32 <=s L0x200198cc_f, L0x200198cc_f <=s 12785024@32,
    (-12785024)@32 <=s L0x200198ce_f, L0x200198ce_f <=s 12785024@32,
    (-12785024)@32 <=s L0x200198d0_f, L0x200198d0_f <=s 12785024@32,
    (-12785024)@32 <=s L0x200198d2_f, L0x200198d2_f <=s 12785024@32,
    (-12785024)@32 <=s L0x200198d4_f, L0x200198d4_f <=s 12785024@32,
    (-12785024)@32 <=s L0x200198d6_f, L0x200198d6_f <=s 12785024@32,
    (-12785024)@32 <=s L0x200198d8_f, L0x200198d8_f <=s 12785024@32,
    (-12785024)@32 <=s L0x200198da_f, L0x200198da_f <=s 12785024@32,
    (-12785024)@32 <=s L0x200198dc_f, L0x200198dc_f <=s 12785024@32,
    (-12785024)@32 <=s L0x200198de_f, L0x200198de_f <=s 12785024@32,
    (-12785024)@32 <=s L0x200198e0_f, L0x200198e0_f <=s 12785024@32,
    (-12785024)@32 <=s L0x200198e2_f, L0x200198e2_f <=s 12785024@32,
    (-12785024)@32 <=s L0x200198e4_f, L0x200198e4_f <=s 12785024@32,
    (-12785024)@32 <=s L0x200198e6_f, L0x200198e6_f <=s 12785024@32,
    (-12785024)@32 <=s L0x200198e8_f, L0x200198e8_f <=s 12785024@32,
    (-12785024)@32 <=s L0x200198ea_f, L0x200198ea_f <=s 12785024@32,
    (-12785024)@32 <=s L0x200198ec_f, L0x200198ec_f <=s 12785024@32,
    (-12785024)@32 <=s L0x200198ee_f, L0x200198ee_f <=s 12785024@32,
    (-12785024)@32 <=s L0x200198f0_f, L0x200198f0_f <=s 12785024@32,
    (-12785024)@32 <=s L0x200198f2_f, L0x200198f2_f <=s 12785024@32,
    (-12785024)@32 <=s L0x200198f4_f, L0x200198f4_f <=s 12785024@32,
    (-12785024)@32 <=s L0x200198f6_f, L0x200198f6_f <=s 12785024@32,
    (-12785024)@32 <=s L0x200198f8_f, L0x200198f8_f <=s 12785024@32,
    (-12785024)@32 <=s L0x200198fa_f, L0x200198fa_f <=s 12785024@32,
    (-12785024)@32 <=s L0x200198fc_f, L0x200198fc_f <=s 12785024@32,
    (-12785024)@32 <=s L0x200198fe_f, L0x200198fe_f <=s 12785024@32,
    (-12785024)@32 <=s L0x20019900_f, L0x20019900_f <=s 12785024@32,
    (-12785024)@32 <=s L0x20019902_f, L0x20019902_f <=s 12785024@32,
    (-12785024)@32 <=s L0x20019904_f, L0x20019904_f <=s 12785024@32,
    (-12785024)@32 <=s L0x20019906_f, L0x20019906_f <=s 12785024@32,
    (-12785024)@32 <=s L0x20019908_f, L0x20019908_f <=s 12785024@32,
    (-12785024)@32 <=s L0x2001990a_f, L0x2001990a_f <=s 12785024@32,
    (-12785024)@32 <=s L0x2001990c_f, L0x2001990c_f <=s 12785024@32,
    (-12785024)@32 <=s L0x2001990e_f, L0x2001990e_f <=s 12785024@32,
    (-12785024)@32 <=s L0x20019910_f, L0x20019910_f <=s 12785024@32,
    (-12785024)@32 <=s L0x20019912_f, L0x20019912_f <=s 12785024@32,
    (-12785024)@32 <=s L0x20019914_f, L0x20019914_f <=s 12785024@32,
    (-12785024)@32 <=s L0x20019916_f, L0x20019916_f <=s 12785024@32,
    (-12785024)@32 <=s L0x20019918_f, L0x20019918_f <=s 12785024@32,
    (-12785024)@32 <=s L0x2001991a_f, L0x2001991a_f <=s 12785024@32,
    (-12785024)@32 <=s L0x2001991c_f, L0x2001991c_f <=s 12785024@32,
    (-12785024)@32 <=s L0x2001991e_f, L0x2001991e_f <=s 12785024@32,
    (-12785024)@32 <=s L0x20019920_f, L0x20019920_f <=s 12785024@32,
    (-12785024)@32 <=s L0x20019922_f, L0x20019922_f <=s 12785024@32,
    (-12785024)@32 <=s L0x20019924_f, L0x20019924_f <=s 12785024@32,
    (-12785024)@32 <=s L0x20019926_f, L0x20019926_f <=s 12785024@32,
    (-12785024)@32 <=s L0x20019928_f, L0x20019928_f <=s 12785024@32,
    (-12785024)@32 <=s L0x2001992a_f, L0x2001992a_f <=s 12785024@32,
    (-12785024)@32 <=s L0x2001992c_f, L0x2001992c_f <=s 12785024@32,
    (-12785024)@32 <=s L0x2001992e_f, L0x2001992e_f <=s 12785024@32,
    (-12785024)@32 <=s L0x20019930_f, L0x20019930_f <=s 12785024@32,
    (-12785024)@32 <=s L0x20019932_f, L0x20019932_f <=s 12785024@32,
    (-12785024)@32 <=s L0x20019934_f, L0x20019934_f <=s 12785024@32,
    (-12785024)@32 <=s L0x20019936_f, L0x20019936_f <=s 12785024@32,
    (-12785024)@32 <=s L0x20019938_f, L0x20019938_f <=s 12785024@32,
    (-12785024)@32 <=s L0x2001993a_f, L0x2001993a_f <=s 12785024@32,
    (-12785024)@32 <=s L0x2001993c_f, L0x2001993c_f <=s 12785024@32,
    (-12785024)@32 <=s L0x2001993e_f, L0x2001993e_f <=s 12785024@32,
    (-12785024)@32 <=s L0x20019940_f, L0x20019940_f <=s 12785024@32,
    (-12785024)@32 <=s L0x20019942_f, L0x20019942_f <=s 12785024@32,
    (-12785024)@32 <=s L0x20019944_f, L0x20019944_f <=s 12785024@32,
    (-12785024)@32 <=s L0x20019946_f, L0x20019946_f <=s 12785024@32,
    (-12785024)@32 <=s L0x20019948_f, L0x20019948_f <=s 12785024@32,
    (-12785024)@32 <=s L0x2001994a_f, L0x2001994a_f <=s 12785024@32,
    (-12785024)@32 <=s L0x2001994c_f, L0x2001994c_f <=s 12785024@32,
    (-12785024)@32 <=s L0x2001994e_f, L0x2001994e_f <=s 12785024@32,
    (-12785024)@32 <=s L0x20019950_f, L0x20019950_f <=s 12785024@32,
    (-12785024)@32 <=s L0x20019952_f, L0x20019952_f <=s 12785024@32,
    (-12785024)@32 <=s L0x20019954_f, L0x20019954_f <=s 12785024@32,
    (-12785024)@32 <=s L0x20019956_f, L0x20019956_f <=s 12785024@32,
    (-12785024)@32 <=s L0x20019958_f, L0x20019958_f <=s 12785024@32,
    (-12785024)@32 <=s L0x2001995a_f, L0x2001995a_f <=s 12785024@32,
    (-12785024)@32 <=s L0x2001995c_f, L0x2001995c_f <=s 12785024@32,
    (-12785024)@32 <=s L0x2001995e_f, L0x2001995e_f <=s 12785024@32,
    (-12785024)@32 <=s L0x20019960_f, L0x20019960_f <=s 12785024@32,
    (-12785024)@32 <=s L0x20019962_f, L0x20019962_f <=s 12785024@32,
    (-12785024)@32 <=s L0x20019964_f, L0x20019964_f <=s 12785024@32,
    (-12785024)@32 <=s L0x20019966_f, L0x20019966_f <=s 12785024@32,
    (-12785024)@32 <=s L0x20019968_f, L0x20019968_f <=s 12785024@32,
    (-12785024)@32 <=s L0x2001996a_f, L0x2001996a_f <=s 12785024@32,
    (-12785024)@32 <=s L0x2001996c_f, L0x2001996c_f <=s 12785024@32,
    (-12785024)@32 <=s L0x2001996e_f, L0x2001996e_f <=s 12785024@32,
    (-12785024)@32 <=s L0x20019970_f, L0x20019970_f <=s 12785024@32,
    (-12785024)@32 <=s L0x20019972_f, L0x20019972_f <=s 12785024@32,
    (-12785024)@32 <=s L0x20019974_f, L0x20019974_f <=s 12785024@32,
    (-12785024)@32 <=s L0x20019976_f, L0x20019976_f <=s 12785024@32,
    (-12785024)@32 <=s L0x20019978_f, L0x20019978_f <=s 12785024@32,
    (-12785024)@32 <=s L0x2001997a_f, L0x2001997a_f <=s 12785024@32,
    (-12785024)@32 <=s L0x2001997c_f, L0x2001997c_f <=s 12785024@32,
    (-12785024)@32 <=s L0x2001997e_f, L0x2001997e_f <=s 12785024@32,
    (-12785024)@32 <=s L0x20019980_f, L0x20019980_f <=s 12785024@32,
    (-12785024)@32 <=s L0x20019982_f, L0x20019982_f <=s 12785024@32,
    (-12785024)@32 <=s L0x20019984_f, L0x20019984_f <=s 12785024@32,
    (-12785024)@32 <=s L0x20019986_f, L0x20019986_f <=s 12785024@32,
    (-12785024)@32 <=s L0x20019988_f, L0x20019988_f <=s 12785024@32,
    (-12785024)@32 <=s L0x2001998a_f, L0x2001998a_f <=s 12785024@32,
    (-12785024)@32 <=s L0x2001998c_f, L0x2001998c_f <=s 12785024@32,
    (-12785024)@32 <=s L0x2001998e_f, L0x2001998e_f <=s 12785024@32,
    (-12785024)@32 <=s L0x20019990_f, L0x20019990_f <=s 12785024@32,
    (-12785024)@32 <=s L0x20019992_f, L0x20019992_f <=s 12785024@32,
    (-12785024)@32 <=s L0x20019994_f, L0x20019994_f <=s 12785024@32,
    (-12785024)@32 <=s L0x20019996_f, L0x20019996_f <=s 12785024@32,
    (-12785024)@32 <=s L0x20019998_f, L0x20019998_f <=s 12785024@32,
    (-12785024)@32 <=s L0x2001999a_f, L0x2001999a_f <=s 12785024@32,
    (-12785024)@32 <=s L0x2001999c_f, L0x2001999c_f <=s 12785024@32,
    (-12785024)@32 <=s L0x2001999e_f, L0x2001999e_f <=s 12785024@32,
    (-12785024)@32 <=s L0x200199a0_f, L0x200199a0_f <=s 12785024@32,
    (-12785024)@32 <=s L0x200199a2_f, L0x200199a2_f <=s 12785024@32,
    (-12785024)@32 <=s L0x200199a4_f, L0x200199a4_f <=s 12785024@32,
    (-12785024)@32 <=s L0x200199a6_f, L0x200199a6_f <=s 12785024@32,
    (-12785024)@32 <=s L0x200199a8_f, L0x200199a8_f <=s 12785024@32,
    (-12785024)@32 <=s L0x200199aa_f, L0x200199aa_f <=s 12785024@32,
    (-12785024)@32 <=s L0x200199ac_f, L0x200199ac_f <=s 12785024@32,
    (-12785024)@32 <=s L0x200199ae_f, L0x200199ae_f <=s 12785024@32,
    (-12785024)@32 <=s L0x200199b0_f, L0x200199b0_f <=s 12785024@32,
    (-12785024)@32 <=s L0x200199b2_f, L0x200199b2_f <=s 12785024@32,
    (-12785024)@32 <=s L0x200199b4_f, L0x200199b4_f <=s 12785024@32,
    (-12785024)@32 <=s L0x200199b6_f, L0x200199b6_f <=s 12785024@32,
    (-12785024)@32 <=s L0x200199b8_f, L0x200199b8_f <=s 12785024@32,
    (-12785024)@32 <=s L0x200199ba_f, L0x200199ba_f <=s 12785024@32,
    (-12785024)@32 <=s L0x200199bc_f, L0x200199bc_f <=s 12785024@32,
    (-12785024)@32 <=s L0x200199be_f, L0x200199be_f <=s 12785024@32,
    (-12785024)@32 <=s L0x200199c0_f, L0x200199c0_f <=s 12785024@32,
    (-12785024)@32 <=s L0x200199c2_f, L0x200199c2_f <=s 12785024@32,
    (-12785024)@32 <=s L0x200199c4_f, L0x200199c4_f <=s 12785024@32,
    (-12785024)@32 <=s L0x200199c6_f, L0x200199c6_f <=s 12785024@32,
    (-12785024)@32 <=s L0x200199c8_f, L0x200199c8_f <=s 12785024@32,
    (-12785024)@32 <=s L0x200199ca_f, L0x200199ca_f <=s 12785024@32,
    (-12785024)@32 <=s L0x200199cc_f, L0x200199cc_f <=s 12785024@32,
    (-12785024)@32 <=s L0x200199ce_f, L0x200199ce_f <=s 12785024@32,
    (-12785024)@32 <=s L0x200199d0_f, L0x200199d0_f <=s 12785024@32,
    (-12785024)@32 <=s L0x200199d2_f, L0x200199d2_f <=s 12785024@32,
    (-12785024)@32 <=s L0x200199d4_f, L0x200199d4_f <=s 12785024@32,
    (-12785024)@32 <=s L0x200199d6_f, L0x200199d6_f <=s 12785024@32,
    (-12785024)@32 <=s L0x200199d8_f, L0x200199d8_f <=s 12785024@32,
    (-12785024)@32 <=s L0x200199da_f, L0x200199da_f <=s 12785024@32,
    (-12785024)@32 <=s L0x200199dc_f, L0x200199dc_f <=s 12785024@32,
    (-12785024)@32 <=s L0x200199de_f, L0x200199de_f <=s 12785024@32,
    (-12785024)@32 <=s L0x200199e0_f, L0x200199e0_f <=s 12785024@32,
    (-12785024)@32 <=s L0x200199e2_f, L0x200199e2_f <=s 12785024@32,
    (-12785024)@32 <=s L0x200199e4_f, L0x200199e4_f <=s 12785024@32,
    (-12785024)@32 <=s L0x200199e6_f, L0x200199e6_f <=s 12785024@32,
    (-12785024)@32 <=s L0x200199e8_f, L0x200199e8_f <=s 12785024@32,
    (-12785024)@32 <=s L0x200199ea_f, L0x200199ea_f <=s 12785024@32,
    (-12785024)@32 <=s L0x200199ec_f, L0x200199ec_f <=s 12785024@32,
    (-12785024)@32 <=s L0x200199ee_f, L0x200199ee_f <=s 12785024@32,
    (-12785024)@32 <=s L0x200199f0_f, L0x200199f0_f <=s 12785024@32,
    (-12785024)@32 <=s L0x200199f2_f, L0x200199f2_f <=s 12785024@32,
    (-12785024)@32 <=s L0x200199f4_f, L0x200199f4_f <=s 12785024@32,
    (-12785024)@32 <=s L0x200199f6_f, L0x200199f6_f <=s 12785024@32,
    (-12785024)@32 <=s L0x200199f8_f, L0x200199f8_f <=s 12785024@32,
    (-12785024)@32 <=s L0x200199fa_f, L0x200199fa_f <=s 12785024@32,
    (-12785024)@32 <=s L0x200199fc_f, L0x200199fc_f <=s 12785024@32,
    (-12785024)@32 <=s L0x200199fe_f, L0x200199fe_f <=s 12785024@32,
    (-12785024)@32 <=s L0x20019a00_f, L0x20019a00_f <=s 12785024@32,
    (-12785024)@32 <=s L0x20019a02_f, L0x20019a02_f <=s 12785024@32,
    (-12785024)@32 <=s L0x20019a04_f, L0x20019a04_f <=s 12785024@32,
    (-12785024)@32 <=s L0x20019a06_f, L0x20019a06_f <=s 12785024@32,
    (-12785024)@32 <=s L0x20019a08_f, L0x20019a08_f <=s 12785024@32,
    (-12785024)@32 <=s L0x20019a0a_f, L0x20019a0a_f <=s 12785024@32,
    (-12785024)@32 <=s L0x20019a0c_f, L0x20019a0c_f <=s 12785024@32,
    (-12785024)@32 <=s L0x20019a0e_f, L0x20019a0e_f <=s 12785024@32,
    (-12785024)@32 <=s L0x20019a10_f, L0x20019a10_f <=s 12785024@32,
    (-12785024)@32 <=s L0x20019a12_f, L0x20019a12_f <=s 12785024@32,
    (-12785024)@32 <=s L0x20019a14_f, L0x20019a14_f <=s 12785024@32,
    (-12785024)@32 <=s L0x20019a16_f, L0x20019a16_f <=s 12785024@32,
    (-12785024)@32 <=s L0x20019a18_f, L0x20019a18_f <=s 12785024@32,
    (-12785024)@32 <=s L0x20019a1a_f, L0x20019a1a_f <=s 12785024@32,
    (-12785024)@32 <=s L0x20019a1c_f, L0x20019a1c_f <=s 12785024@32,
    (-12785024)@32 <=s L0x20019a1e_f, L0x20019a1e_f <=s 12785024@32,
    (-12785024)@32 <=s L0x20019a20_f, L0x20019a20_f <=s 12785024@32,
    (-12785024)@32 <=s L0x20019a22_f, L0x20019a22_f <=s 12785024@32,
    (-12785024)@32 <=s L0x20019a24_f, L0x20019a24_f <=s 12785024@32,
    (-12785024)@32 <=s L0x20019a26_f, L0x20019a26_f <=s 12785024@32,
    (-12785024)@32 <=s L0x20019a28_f, L0x20019a28_f <=s 12785024@32,
    (-12785024)@32 <=s L0x20019a2a_f, L0x20019a2a_f <=s 12785024@32,
    (-12785024)@32 <=s L0x20019a2c_f, L0x20019a2c_f <=s 12785024@32,
    (-12785024)@32 <=s L0x20019a2e_f, L0x20019a2e_f <=s 12785024@32,
    (-12785024)@32 <=s L0x20019a30_f, L0x20019a30_f <=s 12785024@32,
    (-12785024)@32 <=s L0x20019a32_f, L0x20019a32_f <=s 12785024@32,
    (-12785024)@32 <=s L0x20019a34_f, L0x20019a34_f <=s 12785024@32,
    (-12785024)@32 <=s L0x20019a36_f, L0x20019a36_f <=s 12785024@32,
    (-12785024)@32 <=s L0x20019a38_f, L0x20019a38_f <=s 12785024@32,
    (-12785024)@32 <=s L0x20019a3a_f, L0x20019a3a_f <=s 12785024@32,
    (-12785024)@32 <=s L0x20019a3c_f, L0x20019a3c_f <=s 12785024@32,
    (-12785024)@32 <=s L0x20019a3e_f, L0x20019a3e_f <=s 12785024@32,
    (-12785024)@32 <=s L0x20019a40_f, L0x20019a40_f <=s 12785024@32,
    (-12785024)@32 <=s L0x20019a42_f, L0x20019a42_f <=s 12785024@32,
    (-12785024)@32 <=s L0x20019a44_f, L0x20019a44_f <=s 12785024@32,
    (-12785024)@32 <=s L0x20019a46_f, L0x20019a46_f <=s 12785024@32
  ]
;

(* split algebraic conditions into 8 slices and 1 slice for q *)
cut (* 19 *)
  true && true;

(* slice 0 *)
cut (* 20 *)
  and [
    (* imm_poly_0 *)
    eqmod (2**32) * (imm_poly_0 * imm_poly_0)
          8 * (
            L0x20019848_f * (x**0) * (y_6**0) + 
            L0x2001984a_f * (x**1) * (y_6**0) + 
            L0x2001984c_f * (x**2) * (y_6**0) + 
            L0x2001984e_f * (x**3) * (y_6**0) + 
            L0x20019850_f * (x**0) * (y_6**1) + 
            L0x20019852_f * (x**1) * (y_6**1) + 
            L0x20019854_f * (x**2) * (y_6**1) + 
            L0x20019856_f * (x**3) * (y_6**1) + 
            L0x20019858_f * (x**0) * (y_6**2) + 
            L0x2001985a_f * (x**1) * (y_6**2) + 
            L0x2001985c_f * (x**2) * (y_6**2) + 
            L0x2001985e_f * (x**3) * (y_6**2) + 
            L0x20019860_f * (x**0) * (y_6**3) + 
            L0x20019862_f * (x**1) * (y_6**3) + 
            L0x20019864_f * (x**2) * (y_6**3) + 
            L0x20019866_f * (x**3) * (y_6**3) + 
            L0x20019868_f * (x**0) * (y_6**4) + 
            L0x2001986a_f * (x**1) * (y_6**4) + 
            L0x2001986c_f * (x**2) * (y_6**4) + 
            L0x2001986e_f * (x**3) * (y_6**4) + 
            L0x20019870_f * (x**0) * (y_6**5) + 
            L0x20019872_f * (x**1) * (y_6**5) + 
            L0x20019874_f * (x**2) * (y_6**5) + 
            L0x20019876_f * (x**3) * (y_6**5) + 
            L0x20019878_f * (x**0) * (y_6**6) + 
            L0x2001987a_f * (x**1) * (y_6**6) + 
            L0x2001987c_f * (x**2) * (y_6**6) + 
            L0x2001987e_f * (x**3) * (y_6**6) + 
            L0x20019880_f * (x**0) * (y_6**7) + 
            L0x20019882_f * (x**1) * (y_6**7) + 
            L0x20019884_f * (x**2) * (y_6**7) + 
            L0x20019886_f * (x**3) * (y_6**7) + 
            L0x20019888_f * (x**0) * (y_6**8) + 
            L0x2001988a_f * (x**1) * (y_6**8) + 
            L0x2001988c_f * (x**2) * (y_6**8) + 
            L0x2001988e_f * (x**3) * (y_6**8) + 
            L0x20019890_f * (x**0) * (y_6**9) + 
            L0x20019892_f * (x**1) * (y_6**9) + 
            L0x20019894_f * (x**2) * (y_6**9) + 
            L0x20019896_f * (x**3) * (y_6**9) + 
            L0x20019898_f * (x**0) * (y_6**10) + 
            L0x2001989a_f * (x**1) * (y_6**10) + 
            L0x2001989c_f * (x**2) * (y_6**10) + 
            L0x2001989e_f * (x**3) * (y_6**10) + 
            L0x200198a0_f * (x**0) * (y_6**11) + 
            L0x200198a2_f * (x**1) * (y_6**11) + 
            L0x200198a4_f * (x**2) * (y_6**11) + 
            L0x200198a6_f * (x**3) * (y_6**11) + 
            L0x200198a8_f * (x**0) * (y_6**12) + 
            L0x200198aa_f * (x**1) * (y_6**12) + 
            L0x200198ac_f * (x**2) * (y_6**12) + 
            L0x200198ae_f * (x**3) * (y_6**12) + 
            L0x200198b0_f * (x**0) * (y_6**13) + 
            L0x200198b2_f * (x**1) * (y_6**13) + 
            L0x200198b4_f * (x**2) * (y_6**13) + 
            L0x200198b6_f * (x**3) * (y_6**13) + 
            L0x200198b8_f * (x**0) * (y_6**14) + 
            L0x200198ba_f * (x**1) * (y_6**14) + 
            L0x200198bc_f * (x**2) * (y_6**14) + 
            L0x200198be_f * (x**3) * (y_6**14) + 
            L0x200198c0_f * (x**0) * (y_6**15) + 
            L0x200198c2_f * (x**1) * (y_6**15) + 
            L0x200198c4_f * (x**2) * (y_6**15) + 
            L0x200198c6_f * (x**3) * (y_6**15) + 
            L0x200198c8_f * (x**0) * (y_6**16) + 
            L0x200198ca_f * (x**1) * (y_6**16) + 
            L0x200198cc_f * (x**2) * (y_6**16) + 
            L0x200198ce_f * (x**3) * (y_6**16) + 
            L0x200198d0_f * (x**0) * (y_6**17) + 
            L0x200198d2_f * (x**1) * (y_6**17) + 
            L0x200198d4_f * (x**2) * (y_6**17) + 
            L0x200198d6_f * (x**3) * (y_6**17) + 
            L0x200198d8_f * (x**0) * (y_6**18) + 
            L0x200198da_f * (x**1) * (y_6**18) + 
            L0x200198dc_f * (x**2) * (y_6**18) + 
            L0x200198de_f * (x**3) * (y_6**18) + 
            L0x200198e0_f * (x**0) * (y_6**19) + 
            L0x200198e2_f * (x**1) * (y_6**19) + 
            L0x200198e4_f * (x**2) * (y_6**19) + 
            L0x200198e6_f * (x**3) * (y_6**19) + 
            L0x200198e8_f * (x**0) * (y_6**20) + 
            L0x200198ea_f * (x**1) * (y_6**20) + 
            L0x200198ec_f * (x**2) * (y_6**20) + 
            L0x200198ee_f * (x**3) * (y_6**20) + 
            L0x200198f0_f * (x**0) * (y_6**21) + 
            L0x200198f2_f * (x**1) * (y_6**21) + 
            L0x200198f4_f * (x**2) * (y_6**21) + 
            L0x200198f6_f * (x**3) * (y_6**21) + 
            L0x200198f8_f * (x**0) * (y_6**22) + 
            L0x200198fa_f * (x**1) * (y_6**22) + 
            L0x200198fc_f * (x**2) * (y_6**22) + 
            L0x200198fe_f * (x**3) * (y_6**22) + 
            L0x20019900_f * (x**0) * (y_6**23) + 
            L0x20019902_f * (x**1) * (y_6**23) + 
            L0x20019904_f * (x**2) * (y_6**23) + 
            L0x20019906_f * (x**3) * (y_6**23) + 
            L0x20019908_f * (x**0) * (y_6**24) + 
            L0x2001990a_f * (x**1) * (y_6**24) + 
            L0x2001990c_f * (x**2) * (y_6**24) + 
            L0x2001990e_f * (x**3) * (y_6**24) + 
            L0x20019910_f * (x**0) * (y_6**25) + 
            L0x20019912_f * (x**1) * (y_6**25) + 
            L0x20019914_f * (x**2) * (y_6**25) + 
            L0x20019916_f * (x**3) * (y_6**25) + 
            L0x20019918_f * (x**0) * (y_6**26) + 
            L0x2001991a_f * (x**1) * (y_6**26) + 
            L0x2001991c_f * (x**2) * (y_6**26) + 
            L0x2001991e_f * (x**3) * (y_6**26) + 
            L0x20019920_f * (x**0) * (y_6**27) + 
            L0x20019922_f * (x**1) * (y_6**27) + 
            L0x20019924_f * (x**2) * (y_6**27) + 
            L0x20019926_f * (x**3) * (y_6**27) + 
            L0x20019928_f * (x**0) * (y_6**28) + 
            L0x2001992a_f * (x**1) * (y_6**28) + 
            L0x2001992c_f * (x**2) * (y_6**28) + 
            L0x2001992e_f * (x**3) * (y_6**28) + 
            L0x20019930_f * (x**0) * (y_6**29) + 
            L0x20019932_f * (x**1) * (y_6**29) + 
            L0x20019934_f * (x**2) * (y_6**29) + 
            L0x20019936_f * (x**3) * (y_6**29) + 
            L0x20019938_f * (x**0) * (y_6**30) + 
            L0x2001993a_f * (x**1) * (y_6**30) + 
            L0x2001993c_f * (x**2) * (y_6**30) + 
            L0x2001993e_f * (x**3) * (y_6**30) + 
            L0x20019940_f * (x**0) * (y_6**31) + 
            L0x20019942_f * (x**1) * (y_6**31) + 
            L0x20019944_f * (x**2) * (y_6**31) + 
            L0x20019946_f * (x**3) * (y_6**31) + 
            L0x20019948_f * (x**0) * (y_6**32) + 
            L0x2001994a_f * (x**1) * (y_6**32) + 
            L0x2001994c_f * (x**2) * (y_6**32) + 
            L0x2001994e_f * (x**3) * (y_6**32) + 
            L0x20019950_f * (x**0) * (y_6**33) + 
            L0x20019952_f * (x**1) * (y_6**33) + 
            L0x20019954_f * (x**2) * (y_6**33) + 
            L0x20019956_f * (x**3) * (y_6**33) + 
            L0x20019958_f * (x**0) * (y_6**34) + 
            L0x2001995a_f * (x**1) * (y_6**34) + 
            L0x2001995c_f * (x**2) * (y_6**34) + 
            L0x2001995e_f * (x**3) * (y_6**34) + 
            L0x20019960_f * (x**0) * (y_6**35) + 
            L0x20019962_f * (x**1) * (y_6**35) + 
            L0x20019964_f * (x**2) * (y_6**35) + 
            L0x20019966_f * (x**3) * (y_6**35) + 
            L0x20019968_f * (x**0) * (y_6**36) + 
            L0x2001996a_f * (x**1) * (y_6**36) + 
            L0x2001996c_f * (x**2) * (y_6**36) + 
            L0x2001996e_f * (x**3) * (y_6**36) + 
            L0x20019970_f * (x**0) * (y_6**37) + 
            L0x20019972_f * (x**1) * (y_6**37) + 
            L0x20019974_f * (x**2) * (y_6**37) + 
            L0x20019976_f * (x**3) * (y_6**37) + 
            L0x20019978_f * (x**0) * (y_6**38) + 
            L0x2001997a_f * (x**1) * (y_6**38) + 
            L0x2001997c_f * (x**2) * (y_6**38) + 
            L0x2001997e_f * (x**3) * (y_6**38) + 
            L0x20019980_f * (x**0) * (y_6**39) + 
            L0x20019982_f * (x**1) * (y_6**39) + 
            L0x20019984_f * (x**2) * (y_6**39) + 
            L0x20019986_f * (x**3) * (y_6**39) + 
            L0x20019988_f * (x**0) * (y_6**40) + 
            L0x2001998a_f * (x**1) * (y_6**40) + 
            L0x2001998c_f * (x**2) * (y_6**40) + 
            L0x2001998e_f * (x**3) * (y_6**40) + 
            L0x20019990_f * (x**0) * (y_6**41) + 
            L0x20019992_f * (x**1) * (y_6**41) + 
            L0x20019994_f * (x**2) * (y_6**41) + 
            L0x20019996_f * (x**3) * (y_6**41) + 
            L0x20019998_f * (x**0) * (y_6**42) + 
            L0x2001999a_f * (x**1) * (y_6**42) + 
            L0x2001999c_f * (x**2) * (y_6**42) + 
            L0x2001999e_f * (x**3) * (y_6**42) + 
            L0x200199a0_f * (x**0) * (y_6**43) + 
            L0x200199a2_f * (x**1) * (y_6**43) + 
            L0x200199a4_f * (x**2) * (y_6**43) + 
            L0x200199a6_f * (x**3) * (y_6**43) + 
            L0x200199a8_f * (x**0) * (y_6**44) + 
            L0x200199aa_f * (x**1) * (y_6**44) + 
            L0x200199ac_f * (x**2) * (y_6**44) + 
            L0x200199ae_f * (x**3) * (y_6**44) + 
            L0x200199b0_f * (x**0) * (y_6**45) + 
            L0x200199b2_f * (x**1) * (y_6**45) + 
            L0x200199b4_f * (x**2) * (y_6**45) + 
            L0x200199b6_f * (x**3) * (y_6**45) + 
            L0x200199b8_f * (x**0) * (y_6**46) + 
            L0x200199ba_f * (x**1) * (y_6**46) + 
            L0x200199bc_f * (x**2) * (y_6**46) + 
            L0x200199be_f * (x**3) * (y_6**46) + 
            L0x200199c0_f * (x**0) * (y_6**47) + 
            L0x200199c2_f * (x**1) * (y_6**47) + 
            L0x200199c4_f * (x**2) * (y_6**47) + 
            L0x200199c6_f * (x**3) * (y_6**47) + 
            L0x200199c8_f * (x**0) * (y_6**48) + 
            L0x200199ca_f * (x**1) * (y_6**48) + 
            L0x200199cc_f * (x**2) * (y_6**48) + 
            L0x200199ce_f * (x**3) * (y_6**48) + 
            L0x200199d0_f * (x**0) * (y_6**49) + 
            L0x200199d2_f * (x**1) * (y_6**49) + 
            L0x200199d4_f * (x**2) * (y_6**49) + 
            L0x200199d6_f * (x**3) * (y_6**49) + 
            L0x200199d8_f * (x**0) * (y_6**50) + 
            L0x200199da_f * (x**1) * (y_6**50) + 
            L0x200199dc_f * (x**2) * (y_6**50) + 
            L0x200199de_f * (x**3) * (y_6**50) + 
            L0x200199e0_f * (x**0) * (y_6**51) + 
            L0x200199e2_f * (x**1) * (y_6**51) + 
            L0x200199e4_f * (x**2) * (y_6**51) + 
            L0x200199e6_f * (x**3) * (y_6**51) + 
            L0x200199e8_f * (x**0) * (y_6**52) + 
            L0x200199ea_f * (x**1) * (y_6**52) + 
            L0x200199ec_f * (x**2) * (y_6**52) + 
            L0x200199ee_f * (x**3) * (y_6**52) + 
            L0x200199f0_f * (x**0) * (y_6**53) + 
            L0x200199f2_f * (x**1) * (y_6**53) + 
            L0x200199f4_f * (x**2) * (y_6**53) + 
            L0x200199f6_f * (x**3) * (y_6**53) + 
            L0x200199f8_f * (x**0) * (y_6**54) + 
            L0x200199fa_f * (x**1) * (y_6**54) + 
            L0x200199fc_f * (x**2) * (y_6**54) + 
            L0x200199fe_f * (x**3) * (y_6**54) + 
            L0x20019a00_f * (x**0) * (y_6**55) + 
            L0x20019a02_f * (x**1) * (y_6**55) + 
            L0x20019a04_f * (x**2) * (y_6**55) + 
            L0x20019a06_f * (x**3) * (y_6**55) + 
            L0x20019a08_f * (x**0) * (y_6**56) + 
            L0x20019a0a_f * (x**1) * (y_6**56) + 
            L0x20019a0c_f * (x**2) * (y_6**56) + 
            L0x20019a0e_f * (x**3) * (y_6**56) + 
            L0x20019a10_f * (x**0) * (y_6**57) + 
            L0x20019a12_f * (x**1) * (y_6**57) + 
            L0x20019a14_f * (x**2) * (y_6**57) + 
            L0x20019a16_f * (x**3) * (y_6**57) + 
            L0x20019a18_f * (x**0) * (y_6**58) + 
            L0x20019a1a_f * (x**1) * (y_6**58) + 
            L0x20019a1c_f * (x**2) * (y_6**58) + 
            L0x20019a1e_f * (x**3) * (y_6**58) + 
            L0x20019a20_f * (x**0) * (y_6**59) + 
            L0x20019a22_f * (x**1) * (y_6**59) + 
            L0x20019a24_f * (x**2) * (y_6**59) + 
            L0x20019a26_f * (x**3) * (y_6**59) + 
            L0x20019a28_f * (x**0) * (y_6**60) + 
            L0x20019a2a_f * (x**1) * (y_6**60) + 
            L0x20019a2c_f * (x**2) * (y_6**60) + 
            L0x20019a2e_f * (x**3) * (y_6**60) + 
            L0x20019a30_f * (x**0) * (y_6**61) + 
            L0x20019a32_f * (x**1) * (y_6**61) + 
            L0x20019a34_f * (x**2) * (y_6**61) + 
            L0x20019a36_f * (x**3) * (y_6**61) + 
            L0x20019a38_f * (x**0) * (y_6**62) + 
            L0x20019a3a_f * (x**1) * (y_6**62) + 
            L0x20019a3c_f * (x**2) * (y_6**62) + 
            L0x20019a3e_f * (x**3) * (y_6**62) + 
            L0x20019a40_f * (x**0) * (y_6**63) + 
            L0x20019a42_f * (x**1) * (y_6**63) + 
            L0x20019a44_f * (x**2) * (y_6**63) + 
            L0x20019a46_f * (x**3) * (y_6**63)
          )
          [25570049, x**4 - y_3_0 * 6103972, y_3_0**8 - 1]
  ] prove with [cuts [18]]
  &&
  true
;

cut (* 21 *)
  true && true;

(* slice 1 *)
cut (* 22 *)
  and [
    (* imm_poly_1 *)
    eqmod (2**32) * (imm_poly_1 * imm_poly_1)
          8 * (
            L0x20019848_f * (x**0) * (y_6**0) + 
            L0x2001984a_f * (x**1) * (y_6**0) + 
            L0x2001984c_f * (x**2) * (y_6**0) + 
            L0x2001984e_f * (x**3) * (y_6**0) + 
            L0x20019850_f * (x**0) * (y_6**1) + 
            L0x20019852_f * (x**1) * (y_6**1) + 
            L0x20019854_f * (x**2) * (y_6**1) + 
            L0x20019856_f * (x**3) * (y_6**1) + 
            L0x20019858_f * (x**0) * (y_6**2) + 
            L0x2001985a_f * (x**1) * (y_6**2) + 
            L0x2001985c_f * (x**2) * (y_6**2) + 
            L0x2001985e_f * (x**3) * (y_6**2) + 
            L0x20019860_f * (x**0) * (y_6**3) + 
            L0x20019862_f * (x**1) * (y_6**3) + 
            L0x20019864_f * (x**2) * (y_6**3) + 
            L0x20019866_f * (x**3) * (y_6**3) + 
            L0x20019868_f * (x**0) * (y_6**4) + 
            L0x2001986a_f * (x**1) * (y_6**4) + 
            L0x2001986c_f * (x**2) * (y_6**4) + 
            L0x2001986e_f * (x**3) * (y_6**4) + 
            L0x20019870_f * (x**0) * (y_6**5) + 
            L0x20019872_f * (x**1) * (y_6**5) + 
            L0x20019874_f * (x**2) * (y_6**5) + 
            L0x20019876_f * (x**3) * (y_6**5) + 
            L0x20019878_f * (x**0) * (y_6**6) + 
            L0x2001987a_f * (x**1) * (y_6**6) + 
            L0x2001987c_f * (x**2) * (y_6**6) + 
            L0x2001987e_f * (x**3) * (y_6**6) + 
            L0x20019880_f * (x**0) * (y_6**7) + 
            L0x20019882_f * (x**1) * (y_6**7) + 
            L0x20019884_f * (x**2) * (y_6**7) + 
            L0x20019886_f * (x**3) * (y_6**7) + 
            L0x20019888_f * (x**0) * (y_6**8) + 
            L0x2001988a_f * (x**1) * (y_6**8) + 
            L0x2001988c_f * (x**2) * (y_6**8) + 
            L0x2001988e_f * (x**3) * (y_6**8) + 
            L0x20019890_f * (x**0) * (y_6**9) + 
            L0x20019892_f * (x**1) * (y_6**9) + 
            L0x20019894_f * (x**2) * (y_6**9) + 
            L0x20019896_f * (x**3) * (y_6**9) + 
            L0x20019898_f * (x**0) * (y_6**10) + 
            L0x2001989a_f * (x**1) * (y_6**10) + 
            L0x2001989c_f * (x**2) * (y_6**10) + 
            L0x2001989e_f * (x**3) * (y_6**10) + 
            L0x200198a0_f * (x**0) * (y_6**11) + 
            L0x200198a2_f * (x**1) * (y_6**11) + 
            L0x200198a4_f * (x**2) * (y_6**11) + 
            L0x200198a6_f * (x**3) * (y_6**11) + 
            L0x200198a8_f * (x**0) * (y_6**12) + 
            L0x200198aa_f * (x**1) * (y_6**12) + 
            L0x200198ac_f * (x**2) * (y_6**12) + 
            L0x200198ae_f * (x**3) * (y_6**12) + 
            L0x200198b0_f * (x**0) * (y_6**13) + 
            L0x200198b2_f * (x**1) * (y_6**13) + 
            L0x200198b4_f * (x**2) * (y_6**13) + 
            L0x200198b6_f * (x**3) * (y_6**13) + 
            L0x200198b8_f * (x**0) * (y_6**14) + 
            L0x200198ba_f * (x**1) * (y_6**14) + 
            L0x200198bc_f * (x**2) * (y_6**14) + 
            L0x200198be_f * (x**3) * (y_6**14) + 
            L0x200198c0_f * (x**0) * (y_6**15) + 
            L0x200198c2_f * (x**1) * (y_6**15) + 
            L0x200198c4_f * (x**2) * (y_6**15) + 
            L0x200198c6_f * (x**3) * (y_6**15) + 
            L0x200198c8_f * (x**0) * (y_6**16) + 
            L0x200198ca_f * (x**1) * (y_6**16) + 
            L0x200198cc_f * (x**2) * (y_6**16) + 
            L0x200198ce_f * (x**3) * (y_6**16) + 
            L0x200198d0_f * (x**0) * (y_6**17) + 
            L0x200198d2_f * (x**1) * (y_6**17) + 
            L0x200198d4_f * (x**2) * (y_6**17) + 
            L0x200198d6_f * (x**3) * (y_6**17) + 
            L0x200198d8_f * (x**0) * (y_6**18) + 
            L0x200198da_f * (x**1) * (y_6**18) + 
            L0x200198dc_f * (x**2) * (y_6**18) + 
            L0x200198de_f * (x**3) * (y_6**18) + 
            L0x200198e0_f * (x**0) * (y_6**19) + 
            L0x200198e2_f * (x**1) * (y_6**19) + 
            L0x200198e4_f * (x**2) * (y_6**19) + 
            L0x200198e6_f * (x**3) * (y_6**19) + 
            L0x200198e8_f * (x**0) * (y_6**20) + 
            L0x200198ea_f * (x**1) * (y_6**20) + 
            L0x200198ec_f * (x**2) * (y_6**20) + 
            L0x200198ee_f * (x**3) * (y_6**20) + 
            L0x200198f0_f * (x**0) * (y_6**21) + 
            L0x200198f2_f * (x**1) * (y_6**21) + 
            L0x200198f4_f * (x**2) * (y_6**21) + 
            L0x200198f6_f * (x**3) * (y_6**21) + 
            L0x200198f8_f * (x**0) * (y_6**22) + 
            L0x200198fa_f * (x**1) * (y_6**22) + 
            L0x200198fc_f * (x**2) * (y_6**22) + 
            L0x200198fe_f * (x**3) * (y_6**22) + 
            L0x20019900_f * (x**0) * (y_6**23) + 
            L0x20019902_f * (x**1) * (y_6**23) + 
            L0x20019904_f * (x**2) * (y_6**23) + 
            L0x20019906_f * (x**3) * (y_6**23) + 
            L0x20019908_f * (x**0) * (y_6**24) + 
            L0x2001990a_f * (x**1) * (y_6**24) + 
            L0x2001990c_f * (x**2) * (y_6**24) + 
            L0x2001990e_f * (x**3) * (y_6**24) + 
            L0x20019910_f * (x**0) * (y_6**25) + 
            L0x20019912_f * (x**1) * (y_6**25) + 
            L0x20019914_f * (x**2) * (y_6**25) + 
            L0x20019916_f * (x**3) * (y_6**25) + 
            L0x20019918_f * (x**0) * (y_6**26) + 
            L0x2001991a_f * (x**1) * (y_6**26) + 
            L0x2001991c_f * (x**2) * (y_6**26) + 
            L0x2001991e_f * (x**3) * (y_6**26) + 
            L0x20019920_f * (x**0) * (y_6**27) + 
            L0x20019922_f * (x**1) * (y_6**27) + 
            L0x20019924_f * (x**2) * (y_6**27) + 
            L0x20019926_f * (x**3) * (y_6**27) + 
            L0x20019928_f * (x**0) * (y_6**28) + 
            L0x2001992a_f * (x**1) * (y_6**28) + 
            L0x2001992c_f * (x**2) * (y_6**28) + 
            L0x2001992e_f * (x**3) * (y_6**28) + 
            L0x20019930_f * (x**0) * (y_6**29) + 
            L0x20019932_f * (x**1) * (y_6**29) + 
            L0x20019934_f * (x**2) * (y_6**29) + 
            L0x20019936_f * (x**3) * (y_6**29) + 
            L0x20019938_f * (x**0) * (y_6**30) + 
            L0x2001993a_f * (x**1) * (y_6**30) + 
            L0x2001993c_f * (x**2) * (y_6**30) + 
            L0x2001993e_f * (x**3) * (y_6**30) + 
            L0x20019940_f * (x**0) * (y_6**31) + 
            L0x20019942_f * (x**1) * (y_6**31) + 
            L0x20019944_f * (x**2) * (y_6**31) + 
            L0x20019946_f * (x**3) * (y_6**31) + 
            L0x20019948_f * (x**0) * (y_6**32) + 
            L0x2001994a_f * (x**1) * (y_6**32) + 
            L0x2001994c_f * (x**2) * (y_6**32) + 
            L0x2001994e_f * (x**3) * (y_6**32) + 
            L0x20019950_f * (x**0) * (y_6**33) + 
            L0x20019952_f * (x**1) * (y_6**33) + 
            L0x20019954_f * (x**2) * (y_6**33) + 
            L0x20019956_f * (x**3) * (y_6**33) + 
            L0x20019958_f * (x**0) * (y_6**34) + 
            L0x2001995a_f * (x**1) * (y_6**34) + 
            L0x2001995c_f * (x**2) * (y_6**34) + 
            L0x2001995e_f * (x**3) * (y_6**34) + 
            L0x20019960_f * (x**0) * (y_6**35) + 
            L0x20019962_f * (x**1) * (y_6**35) + 
            L0x20019964_f * (x**2) * (y_6**35) + 
            L0x20019966_f * (x**3) * (y_6**35) + 
            L0x20019968_f * (x**0) * (y_6**36) + 
            L0x2001996a_f * (x**1) * (y_6**36) + 
            L0x2001996c_f * (x**2) * (y_6**36) + 
            L0x2001996e_f * (x**3) * (y_6**36) + 
            L0x20019970_f * (x**0) * (y_6**37) + 
            L0x20019972_f * (x**1) * (y_6**37) + 
            L0x20019974_f * (x**2) * (y_6**37) + 
            L0x20019976_f * (x**3) * (y_6**37) + 
            L0x20019978_f * (x**0) * (y_6**38) + 
            L0x2001997a_f * (x**1) * (y_6**38) + 
            L0x2001997c_f * (x**2) * (y_6**38) + 
            L0x2001997e_f * (x**3) * (y_6**38) + 
            L0x20019980_f * (x**0) * (y_6**39) + 
            L0x20019982_f * (x**1) * (y_6**39) + 
            L0x20019984_f * (x**2) * (y_6**39) + 
            L0x20019986_f * (x**3) * (y_6**39) + 
            L0x20019988_f * (x**0) * (y_6**40) + 
            L0x2001998a_f * (x**1) * (y_6**40) + 
            L0x2001998c_f * (x**2) * (y_6**40) + 
            L0x2001998e_f * (x**3) * (y_6**40) + 
            L0x20019990_f * (x**0) * (y_6**41) + 
            L0x20019992_f * (x**1) * (y_6**41) + 
            L0x20019994_f * (x**2) * (y_6**41) + 
            L0x20019996_f * (x**3) * (y_6**41) + 
            L0x20019998_f * (x**0) * (y_6**42) + 
            L0x2001999a_f * (x**1) * (y_6**42) + 
            L0x2001999c_f * (x**2) * (y_6**42) + 
            L0x2001999e_f * (x**3) * (y_6**42) + 
            L0x200199a0_f * (x**0) * (y_6**43) + 
            L0x200199a2_f * (x**1) * (y_6**43) + 
            L0x200199a4_f * (x**2) * (y_6**43) + 
            L0x200199a6_f * (x**3) * (y_6**43) + 
            L0x200199a8_f * (x**0) * (y_6**44) + 
            L0x200199aa_f * (x**1) * (y_6**44) + 
            L0x200199ac_f * (x**2) * (y_6**44) + 
            L0x200199ae_f * (x**3) * (y_6**44) + 
            L0x200199b0_f * (x**0) * (y_6**45) + 
            L0x200199b2_f * (x**1) * (y_6**45) + 
            L0x200199b4_f * (x**2) * (y_6**45) + 
            L0x200199b6_f * (x**3) * (y_6**45) + 
            L0x200199b8_f * (x**0) * (y_6**46) + 
            L0x200199ba_f * (x**1) * (y_6**46) + 
            L0x200199bc_f * (x**2) * (y_6**46) + 
            L0x200199be_f * (x**3) * (y_6**46) + 
            L0x200199c0_f * (x**0) * (y_6**47) + 
            L0x200199c2_f * (x**1) * (y_6**47) + 
            L0x200199c4_f * (x**2) * (y_6**47) + 
            L0x200199c6_f * (x**3) * (y_6**47) + 
            L0x200199c8_f * (x**0) * (y_6**48) + 
            L0x200199ca_f * (x**1) * (y_6**48) + 
            L0x200199cc_f * (x**2) * (y_6**48) + 
            L0x200199ce_f * (x**3) * (y_6**48) + 
            L0x200199d0_f * (x**0) * (y_6**49) + 
            L0x200199d2_f * (x**1) * (y_6**49) + 
            L0x200199d4_f * (x**2) * (y_6**49) + 
            L0x200199d6_f * (x**3) * (y_6**49) + 
            L0x200199d8_f * (x**0) * (y_6**50) + 
            L0x200199da_f * (x**1) * (y_6**50) + 
            L0x200199dc_f * (x**2) * (y_6**50) + 
            L0x200199de_f * (x**3) * (y_6**50) + 
            L0x200199e0_f * (x**0) * (y_6**51) + 
            L0x200199e2_f * (x**1) * (y_6**51) + 
            L0x200199e4_f * (x**2) * (y_6**51) + 
            L0x200199e6_f * (x**3) * (y_6**51) + 
            L0x200199e8_f * (x**0) * (y_6**52) + 
            L0x200199ea_f * (x**1) * (y_6**52) + 
            L0x200199ec_f * (x**2) * (y_6**52) + 
            L0x200199ee_f * (x**3) * (y_6**52) + 
            L0x200199f0_f * (x**0) * (y_6**53) + 
            L0x200199f2_f * (x**1) * (y_6**53) + 
            L0x200199f4_f * (x**2) * (y_6**53) + 
            L0x200199f6_f * (x**3) * (y_6**53) + 
            L0x200199f8_f * (x**0) * (y_6**54) + 
            L0x200199fa_f * (x**1) * (y_6**54) + 
            L0x200199fc_f * (x**2) * (y_6**54) + 
            L0x200199fe_f * (x**3) * (y_6**54) + 
            L0x20019a00_f * (x**0) * (y_6**55) + 
            L0x20019a02_f * (x**1) * (y_6**55) + 
            L0x20019a04_f * (x**2) * (y_6**55) + 
            L0x20019a06_f * (x**3) * (y_6**55) + 
            L0x20019a08_f * (x**0) * (y_6**56) + 
            L0x20019a0a_f * (x**1) * (y_6**56) + 
            L0x20019a0c_f * (x**2) * (y_6**56) + 
            L0x20019a0e_f * (x**3) * (y_6**56) + 
            L0x20019a10_f * (x**0) * (y_6**57) + 
            L0x20019a12_f * (x**1) * (y_6**57) + 
            L0x20019a14_f * (x**2) * (y_6**57) + 
            L0x20019a16_f * (x**3) * (y_6**57) + 
            L0x20019a18_f * (x**0) * (y_6**58) + 
            L0x20019a1a_f * (x**1) * (y_6**58) + 
            L0x20019a1c_f * (x**2) * (y_6**58) + 
            L0x20019a1e_f * (x**3) * (y_6**58) + 
            L0x20019a20_f * (x**0) * (y_6**59) + 
            L0x20019a22_f * (x**1) * (y_6**59) + 
            L0x20019a24_f * (x**2) * (y_6**59) + 
            L0x20019a26_f * (x**3) * (y_6**59) + 
            L0x20019a28_f * (x**0) * (y_6**60) + 
            L0x20019a2a_f * (x**1) * (y_6**60) + 
            L0x20019a2c_f * (x**2) * (y_6**60) + 
            L0x20019a2e_f * (x**3) * (y_6**60) + 
            L0x20019a30_f * (x**0) * (y_6**61) + 
            L0x20019a32_f * (x**1) * (y_6**61) + 
            L0x20019a34_f * (x**2) * (y_6**61) + 
            L0x20019a36_f * (x**3) * (y_6**61) + 
            L0x20019a38_f * (x**0) * (y_6**62) + 
            L0x20019a3a_f * (x**1) * (y_6**62) + 
            L0x20019a3c_f * (x**2) * (y_6**62) + 
            L0x20019a3e_f * (x**3) * (y_6**62) + 
            L0x20019a40_f * (x**0) * (y_6**63) + 
            L0x20019a42_f * (x**1) * (y_6**63) + 
            L0x20019a44_f * (x**2) * (y_6**63) + 
            L0x20019a46_f * (x**3) * (y_6**63)
          )
          [25570049, x**4 - y_3_1 * 24972806, y_3_1**8 - 1]
  ] prove with [cuts [18]]
  &&
  true
;

cut (* 23 *)
  true && true;

(* slice 2 *)
cut (* 24 *)
  and [
    (* imm_poly_2 *)
    eqmod (2**32) * (imm_poly_2 * imm_poly_2)
          8 * (
            L0x20019848_f * (x**0) * (y_6**0) + 
            L0x2001984a_f * (x**1) * (y_6**0) + 
            L0x2001984c_f * (x**2) * (y_6**0) + 
            L0x2001984e_f * (x**3) * (y_6**0) + 
            L0x20019850_f * (x**0) * (y_6**1) + 
            L0x20019852_f * (x**1) * (y_6**1) + 
            L0x20019854_f * (x**2) * (y_6**1) + 
            L0x20019856_f * (x**3) * (y_6**1) + 
            L0x20019858_f * (x**0) * (y_6**2) + 
            L0x2001985a_f * (x**1) * (y_6**2) + 
            L0x2001985c_f * (x**2) * (y_6**2) + 
            L0x2001985e_f * (x**3) * (y_6**2) + 
            L0x20019860_f * (x**0) * (y_6**3) + 
            L0x20019862_f * (x**1) * (y_6**3) + 
            L0x20019864_f * (x**2) * (y_6**3) + 
            L0x20019866_f * (x**3) * (y_6**3) + 
            L0x20019868_f * (x**0) * (y_6**4) + 
            L0x2001986a_f * (x**1) * (y_6**4) + 
            L0x2001986c_f * (x**2) * (y_6**4) + 
            L0x2001986e_f * (x**3) * (y_6**4) + 
            L0x20019870_f * (x**0) * (y_6**5) + 
            L0x20019872_f * (x**1) * (y_6**5) + 
            L0x20019874_f * (x**2) * (y_6**5) + 
            L0x20019876_f * (x**3) * (y_6**5) + 
            L0x20019878_f * (x**0) * (y_6**6) + 
            L0x2001987a_f * (x**1) * (y_6**6) + 
            L0x2001987c_f * (x**2) * (y_6**6) + 
            L0x2001987e_f * (x**3) * (y_6**6) + 
            L0x20019880_f * (x**0) * (y_6**7) + 
            L0x20019882_f * (x**1) * (y_6**7) + 
            L0x20019884_f * (x**2) * (y_6**7) + 
            L0x20019886_f * (x**3) * (y_6**7) + 
            L0x20019888_f * (x**0) * (y_6**8) + 
            L0x2001988a_f * (x**1) * (y_6**8) + 
            L0x2001988c_f * (x**2) * (y_6**8) + 
            L0x2001988e_f * (x**3) * (y_6**8) + 
            L0x20019890_f * (x**0) * (y_6**9) + 
            L0x20019892_f * (x**1) * (y_6**9) + 
            L0x20019894_f * (x**2) * (y_6**9) + 
            L0x20019896_f * (x**3) * (y_6**9) + 
            L0x20019898_f * (x**0) * (y_6**10) + 
            L0x2001989a_f * (x**1) * (y_6**10) + 
            L0x2001989c_f * (x**2) * (y_6**10) + 
            L0x2001989e_f * (x**3) * (y_6**10) + 
            L0x200198a0_f * (x**0) * (y_6**11) + 
            L0x200198a2_f * (x**1) * (y_6**11) + 
            L0x200198a4_f * (x**2) * (y_6**11) + 
            L0x200198a6_f * (x**3) * (y_6**11) + 
            L0x200198a8_f * (x**0) * (y_6**12) + 
            L0x200198aa_f * (x**1) * (y_6**12) + 
            L0x200198ac_f * (x**2) * (y_6**12) + 
            L0x200198ae_f * (x**3) * (y_6**12) + 
            L0x200198b0_f * (x**0) * (y_6**13) + 
            L0x200198b2_f * (x**1) * (y_6**13) + 
            L0x200198b4_f * (x**2) * (y_6**13) + 
            L0x200198b6_f * (x**3) * (y_6**13) + 
            L0x200198b8_f * (x**0) * (y_6**14) + 
            L0x200198ba_f * (x**1) * (y_6**14) + 
            L0x200198bc_f * (x**2) * (y_6**14) + 
            L0x200198be_f * (x**3) * (y_6**14) + 
            L0x200198c0_f * (x**0) * (y_6**15) + 
            L0x200198c2_f * (x**1) * (y_6**15) + 
            L0x200198c4_f * (x**2) * (y_6**15) + 
            L0x200198c6_f * (x**3) * (y_6**15) + 
            L0x200198c8_f * (x**0) * (y_6**16) + 
            L0x200198ca_f * (x**1) * (y_6**16) + 
            L0x200198cc_f * (x**2) * (y_6**16) + 
            L0x200198ce_f * (x**3) * (y_6**16) + 
            L0x200198d0_f * (x**0) * (y_6**17) + 
            L0x200198d2_f * (x**1) * (y_6**17) + 
            L0x200198d4_f * (x**2) * (y_6**17) + 
            L0x200198d6_f * (x**3) * (y_6**17) + 
            L0x200198d8_f * (x**0) * (y_6**18) + 
            L0x200198da_f * (x**1) * (y_6**18) + 
            L0x200198dc_f * (x**2) * (y_6**18) + 
            L0x200198de_f * (x**3) * (y_6**18) + 
            L0x200198e0_f * (x**0) * (y_6**19) + 
            L0x200198e2_f * (x**1) * (y_6**19) + 
            L0x200198e4_f * (x**2) * (y_6**19) + 
            L0x200198e6_f * (x**3) * (y_6**19) + 
            L0x200198e8_f * (x**0) * (y_6**20) + 
            L0x200198ea_f * (x**1) * (y_6**20) + 
            L0x200198ec_f * (x**2) * (y_6**20) + 
            L0x200198ee_f * (x**3) * (y_6**20) + 
            L0x200198f0_f * (x**0) * (y_6**21) + 
            L0x200198f2_f * (x**1) * (y_6**21) + 
            L0x200198f4_f * (x**2) * (y_6**21) + 
            L0x200198f6_f * (x**3) * (y_6**21) + 
            L0x200198f8_f * (x**0) * (y_6**22) + 
            L0x200198fa_f * (x**1) * (y_6**22) + 
            L0x200198fc_f * (x**2) * (y_6**22) + 
            L0x200198fe_f * (x**3) * (y_6**22) + 
            L0x20019900_f * (x**0) * (y_6**23) + 
            L0x20019902_f * (x**1) * (y_6**23) + 
            L0x20019904_f * (x**2) * (y_6**23) + 
            L0x20019906_f * (x**3) * (y_6**23) + 
            L0x20019908_f * (x**0) * (y_6**24) + 
            L0x2001990a_f * (x**1) * (y_6**24) + 
            L0x2001990c_f * (x**2) * (y_6**24) + 
            L0x2001990e_f * (x**3) * (y_6**24) + 
            L0x20019910_f * (x**0) * (y_6**25) + 
            L0x20019912_f * (x**1) * (y_6**25) + 
            L0x20019914_f * (x**2) * (y_6**25) + 
            L0x20019916_f * (x**3) * (y_6**25) + 
            L0x20019918_f * (x**0) * (y_6**26) + 
            L0x2001991a_f * (x**1) * (y_6**26) + 
            L0x2001991c_f * (x**2) * (y_6**26) + 
            L0x2001991e_f * (x**3) * (y_6**26) + 
            L0x20019920_f * (x**0) * (y_6**27) + 
            L0x20019922_f * (x**1) * (y_6**27) + 
            L0x20019924_f * (x**2) * (y_6**27) + 
            L0x20019926_f * (x**3) * (y_6**27) + 
            L0x20019928_f * (x**0) * (y_6**28) + 
            L0x2001992a_f * (x**1) * (y_6**28) + 
            L0x2001992c_f * (x**2) * (y_6**28) + 
            L0x2001992e_f * (x**3) * (y_6**28) + 
            L0x20019930_f * (x**0) * (y_6**29) + 
            L0x20019932_f * (x**1) * (y_6**29) + 
            L0x20019934_f * (x**2) * (y_6**29) + 
            L0x20019936_f * (x**3) * (y_6**29) + 
            L0x20019938_f * (x**0) * (y_6**30) + 
            L0x2001993a_f * (x**1) * (y_6**30) + 
            L0x2001993c_f * (x**2) * (y_6**30) + 
            L0x2001993e_f * (x**3) * (y_6**30) + 
            L0x20019940_f * (x**0) * (y_6**31) + 
            L0x20019942_f * (x**1) * (y_6**31) + 
            L0x20019944_f * (x**2) * (y_6**31) + 
            L0x20019946_f * (x**3) * (y_6**31) + 
            L0x20019948_f * (x**0) * (y_6**32) + 
            L0x2001994a_f * (x**1) * (y_6**32) + 
            L0x2001994c_f * (x**2) * (y_6**32) + 
            L0x2001994e_f * (x**3) * (y_6**32) + 
            L0x20019950_f * (x**0) * (y_6**33) + 
            L0x20019952_f * (x**1) * (y_6**33) + 
            L0x20019954_f * (x**2) * (y_6**33) + 
            L0x20019956_f * (x**3) * (y_6**33) + 
            L0x20019958_f * (x**0) * (y_6**34) + 
            L0x2001995a_f * (x**1) * (y_6**34) + 
            L0x2001995c_f * (x**2) * (y_6**34) + 
            L0x2001995e_f * (x**3) * (y_6**34) + 
            L0x20019960_f * (x**0) * (y_6**35) + 
            L0x20019962_f * (x**1) * (y_6**35) + 
            L0x20019964_f * (x**2) * (y_6**35) + 
            L0x20019966_f * (x**3) * (y_6**35) + 
            L0x20019968_f * (x**0) * (y_6**36) + 
            L0x2001996a_f * (x**1) * (y_6**36) + 
            L0x2001996c_f * (x**2) * (y_6**36) + 
            L0x2001996e_f * (x**3) * (y_6**36) + 
            L0x20019970_f * (x**0) * (y_6**37) + 
            L0x20019972_f * (x**1) * (y_6**37) + 
            L0x20019974_f * (x**2) * (y_6**37) + 
            L0x20019976_f * (x**3) * (y_6**37) + 
            L0x20019978_f * (x**0) * (y_6**38) + 
            L0x2001997a_f * (x**1) * (y_6**38) + 
            L0x2001997c_f * (x**2) * (y_6**38) + 
            L0x2001997e_f * (x**3) * (y_6**38) + 
            L0x20019980_f * (x**0) * (y_6**39) + 
            L0x20019982_f * (x**1) * (y_6**39) + 
            L0x20019984_f * (x**2) * (y_6**39) + 
            L0x20019986_f * (x**3) * (y_6**39) + 
            L0x20019988_f * (x**0) * (y_6**40) + 
            L0x2001998a_f * (x**1) * (y_6**40) + 
            L0x2001998c_f * (x**2) * (y_6**40) + 
            L0x2001998e_f * (x**3) * (y_6**40) + 
            L0x20019990_f * (x**0) * (y_6**41) + 
            L0x20019992_f * (x**1) * (y_6**41) + 
            L0x20019994_f * (x**2) * (y_6**41) + 
            L0x20019996_f * (x**3) * (y_6**41) + 
            L0x20019998_f * (x**0) * (y_6**42) + 
            L0x2001999a_f * (x**1) * (y_6**42) + 
            L0x2001999c_f * (x**2) * (y_6**42) + 
            L0x2001999e_f * (x**3) * (y_6**42) + 
            L0x200199a0_f * (x**0) * (y_6**43) + 
            L0x200199a2_f * (x**1) * (y_6**43) + 
            L0x200199a4_f * (x**2) * (y_6**43) + 
            L0x200199a6_f * (x**3) * (y_6**43) + 
            L0x200199a8_f * (x**0) * (y_6**44) + 
            L0x200199aa_f * (x**1) * (y_6**44) + 
            L0x200199ac_f * (x**2) * (y_6**44) + 
            L0x200199ae_f * (x**3) * (y_6**44) + 
            L0x200199b0_f * (x**0) * (y_6**45) + 
            L0x200199b2_f * (x**1) * (y_6**45) + 
            L0x200199b4_f * (x**2) * (y_6**45) + 
            L0x200199b6_f * (x**3) * (y_6**45) + 
            L0x200199b8_f * (x**0) * (y_6**46) + 
            L0x200199ba_f * (x**1) * (y_6**46) + 
            L0x200199bc_f * (x**2) * (y_6**46) + 
            L0x200199be_f * (x**3) * (y_6**46) + 
            L0x200199c0_f * (x**0) * (y_6**47) + 
            L0x200199c2_f * (x**1) * (y_6**47) + 
            L0x200199c4_f * (x**2) * (y_6**47) + 
            L0x200199c6_f * (x**3) * (y_6**47) + 
            L0x200199c8_f * (x**0) * (y_6**48) + 
            L0x200199ca_f * (x**1) * (y_6**48) + 
            L0x200199cc_f * (x**2) * (y_6**48) + 
            L0x200199ce_f * (x**3) * (y_6**48) + 
            L0x200199d0_f * (x**0) * (y_6**49) + 
            L0x200199d2_f * (x**1) * (y_6**49) + 
            L0x200199d4_f * (x**2) * (y_6**49) + 
            L0x200199d6_f * (x**3) * (y_6**49) + 
            L0x200199d8_f * (x**0) * (y_6**50) + 
            L0x200199da_f * (x**1) * (y_6**50) + 
            L0x200199dc_f * (x**2) * (y_6**50) + 
            L0x200199de_f * (x**3) * (y_6**50) + 
            L0x200199e0_f * (x**0) * (y_6**51) + 
            L0x200199e2_f * (x**1) * (y_6**51) + 
            L0x200199e4_f * (x**2) * (y_6**51) + 
            L0x200199e6_f * (x**3) * (y_6**51) + 
            L0x200199e8_f * (x**0) * (y_6**52) + 
            L0x200199ea_f * (x**1) * (y_6**52) + 
            L0x200199ec_f * (x**2) * (y_6**52) + 
            L0x200199ee_f * (x**3) * (y_6**52) + 
            L0x200199f0_f * (x**0) * (y_6**53) + 
            L0x200199f2_f * (x**1) * (y_6**53) + 
            L0x200199f4_f * (x**2) * (y_6**53) + 
            L0x200199f6_f * (x**3) * (y_6**53) + 
            L0x200199f8_f * (x**0) * (y_6**54) + 
            L0x200199fa_f * (x**1) * (y_6**54) + 
            L0x200199fc_f * (x**2) * (y_6**54) + 
            L0x200199fe_f * (x**3) * (y_6**54) + 
            L0x20019a00_f * (x**0) * (y_6**55) + 
            L0x20019a02_f * (x**1) * (y_6**55) + 
            L0x20019a04_f * (x**2) * (y_6**55) + 
            L0x20019a06_f * (x**3) * (y_6**55) + 
            L0x20019a08_f * (x**0) * (y_6**56) + 
            L0x20019a0a_f * (x**1) * (y_6**56) + 
            L0x20019a0c_f * (x**2) * (y_6**56) + 
            L0x20019a0e_f * (x**3) * (y_6**56) + 
            L0x20019a10_f * (x**0) * (y_6**57) + 
            L0x20019a12_f * (x**1) * (y_6**57) + 
            L0x20019a14_f * (x**2) * (y_6**57) + 
            L0x20019a16_f * (x**3) * (y_6**57) + 
            L0x20019a18_f * (x**0) * (y_6**58) + 
            L0x20019a1a_f * (x**1) * (y_6**58) + 
            L0x20019a1c_f * (x**2) * (y_6**58) + 
            L0x20019a1e_f * (x**3) * (y_6**58) + 
            L0x20019a20_f * (x**0) * (y_6**59) + 
            L0x20019a22_f * (x**1) * (y_6**59) + 
            L0x20019a24_f * (x**2) * (y_6**59) + 
            L0x20019a26_f * (x**3) * (y_6**59) + 
            L0x20019a28_f * (x**0) * (y_6**60) + 
            L0x20019a2a_f * (x**1) * (y_6**60) + 
            L0x20019a2c_f * (x**2) * (y_6**60) + 
            L0x20019a2e_f * (x**3) * (y_6**60) + 
            L0x20019a30_f * (x**0) * (y_6**61) + 
            L0x20019a32_f * (x**1) * (y_6**61) + 
            L0x20019a34_f * (x**2) * (y_6**61) + 
            L0x20019a36_f * (x**3) * (y_6**61) + 
            L0x20019a38_f * (x**0) * (y_6**62) + 
            L0x20019a3a_f * (x**1) * (y_6**62) + 
            L0x20019a3c_f * (x**2) * (y_6**62) + 
            L0x20019a3e_f * (x**3) * (y_6**62) + 
            L0x20019a40_f * (x**0) * (y_6**63) + 
            L0x20019a42_f * (x**1) * (y_6**63) + 
            L0x20019a44_f * (x**2) * (y_6**63) + 
            L0x20019a46_f * (x**3) * (y_6**63)
          )
          [25570049, x**4 - y_3_2 * 21713494, y_3_2**8 - 1]
  ] prove with [cuts [18]]
  &&
  true
;

cut (* 25 *)
  true && true;

(* slice 3 *)
cut (* 26 *)
  and [
    (* imm_poly_3 *)
    eqmod (2**32) * (imm_poly_3 * imm_poly_3)
          8 * (
            L0x20019848_f * (x**0) * (y_6**0) + 
            L0x2001984a_f * (x**1) * (y_6**0) + 
            L0x2001984c_f * (x**2) * (y_6**0) + 
            L0x2001984e_f * (x**3) * (y_6**0) + 
            L0x20019850_f * (x**0) * (y_6**1) + 
            L0x20019852_f * (x**1) * (y_6**1) + 
            L0x20019854_f * (x**2) * (y_6**1) + 
            L0x20019856_f * (x**3) * (y_6**1) + 
            L0x20019858_f * (x**0) * (y_6**2) + 
            L0x2001985a_f * (x**1) * (y_6**2) + 
            L0x2001985c_f * (x**2) * (y_6**2) + 
            L0x2001985e_f * (x**3) * (y_6**2) + 
            L0x20019860_f * (x**0) * (y_6**3) + 
            L0x20019862_f * (x**1) * (y_6**3) + 
            L0x20019864_f * (x**2) * (y_6**3) + 
            L0x20019866_f * (x**3) * (y_6**3) + 
            L0x20019868_f * (x**0) * (y_6**4) + 
            L0x2001986a_f * (x**1) * (y_6**4) + 
            L0x2001986c_f * (x**2) * (y_6**4) + 
            L0x2001986e_f * (x**3) * (y_6**4) + 
            L0x20019870_f * (x**0) * (y_6**5) + 
            L0x20019872_f * (x**1) * (y_6**5) + 
            L0x20019874_f * (x**2) * (y_6**5) + 
            L0x20019876_f * (x**3) * (y_6**5) + 
            L0x20019878_f * (x**0) * (y_6**6) + 
            L0x2001987a_f * (x**1) * (y_6**6) + 
            L0x2001987c_f * (x**2) * (y_6**6) + 
            L0x2001987e_f * (x**3) * (y_6**6) + 
            L0x20019880_f * (x**0) * (y_6**7) + 
            L0x20019882_f * (x**1) * (y_6**7) + 
            L0x20019884_f * (x**2) * (y_6**7) + 
            L0x20019886_f * (x**3) * (y_6**7) + 
            L0x20019888_f * (x**0) * (y_6**8) + 
            L0x2001988a_f * (x**1) * (y_6**8) + 
            L0x2001988c_f * (x**2) * (y_6**8) + 
            L0x2001988e_f * (x**3) * (y_6**8) + 
            L0x20019890_f * (x**0) * (y_6**9) + 
            L0x20019892_f * (x**1) * (y_6**9) + 
            L0x20019894_f * (x**2) * (y_6**9) + 
            L0x20019896_f * (x**3) * (y_6**9) + 
            L0x20019898_f * (x**0) * (y_6**10) + 
            L0x2001989a_f * (x**1) * (y_6**10) + 
            L0x2001989c_f * (x**2) * (y_6**10) + 
            L0x2001989e_f * (x**3) * (y_6**10) + 
            L0x200198a0_f * (x**0) * (y_6**11) + 
            L0x200198a2_f * (x**1) * (y_6**11) + 
            L0x200198a4_f * (x**2) * (y_6**11) + 
            L0x200198a6_f * (x**3) * (y_6**11) + 
            L0x200198a8_f * (x**0) * (y_6**12) + 
            L0x200198aa_f * (x**1) * (y_6**12) + 
            L0x200198ac_f * (x**2) * (y_6**12) + 
            L0x200198ae_f * (x**3) * (y_6**12) + 
            L0x200198b0_f * (x**0) * (y_6**13) + 
            L0x200198b2_f * (x**1) * (y_6**13) + 
            L0x200198b4_f * (x**2) * (y_6**13) + 
            L0x200198b6_f * (x**3) * (y_6**13) + 
            L0x200198b8_f * (x**0) * (y_6**14) + 
            L0x200198ba_f * (x**1) * (y_6**14) + 
            L0x200198bc_f * (x**2) * (y_6**14) + 
            L0x200198be_f * (x**3) * (y_6**14) + 
            L0x200198c0_f * (x**0) * (y_6**15) + 
            L0x200198c2_f * (x**1) * (y_6**15) + 
            L0x200198c4_f * (x**2) * (y_6**15) + 
            L0x200198c6_f * (x**3) * (y_6**15) + 
            L0x200198c8_f * (x**0) * (y_6**16) + 
            L0x200198ca_f * (x**1) * (y_6**16) + 
            L0x200198cc_f * (x**2) * (y_6**16) + 
            L0x200198ce_f * (x**3) * (y_6**16) + 
            L0x200198d0_f * (x**0) * (y_6**17) + 
            L0x200198d2_f * (x**1) * (y_6**17) + 
            L0x200198d4_f * (x**2) * (y_6**17) + 
            L0x200198d6_f * (x**3) * (y_6**17) + 
            L0x200198d8_f * (x**0) * (y_6**18) + 
            L0x200198da_f * (x**1) * (y_6**18) + 
            L0x200198dc_f * (x**2) * (y_6**18) + 
            L0x200198de_f * (x**3) * (y_6**18) + 
            L0x200198e0_f * (x**0) * (y_6**19) + 
            L0x200198e2_f * (x**1) * (y_6**19) + 
            L0x200198e4_f * (x**2) * (y_6**19) + 
            L0x200198e6_f * (x**3) * (y_6**19) + 
            L0x200198e8_f * (x**0) * (y_6**20) + 
            L0x200198ea_f * (x**1) * (y_6**20) + 
            L0x200198ec_f * (x**2) * (y_6**20) + 
            L0x200198ee_f * (x**3) * (y_6**20) + 
            L0x200198f0_f * (x**0) * (y_6**21) + 
            L0x200198f2_f * (x**1) * (y_6**21) + 
            L0x200198f4_f * (x**2) * (y_6**21) + 
            L0x200198f6_f * (x**3) * (y_6**21) + 
            L0x200198f8_f * (x**0) * (y_6**22) + 
            L0x200198fa_f * (x**1) * (y_6**22) + 
            L0x200198fc_f * (x**2) * (y_6**22) + 
            L0x200198fe_f * (x**3) * (y_6**22) + 
            L0x20019900_f * (x**0) * (y_6**23) + 
            L0x20019902_f * (x**1) * (y_6**23) + 
            L0x20019904_f * (x**2) * (y_6**23) + 
            L0x20019906_f * (x**3) * (y_6**23) + 
            L0x20019908_f * (x**0) * (y_6**24) + 
            L0x2001990a_f * (x**1) * (y_6**24) + 
            L0x2001990c_f * (x**2) * (y_6**24) + 
            L0x2001990e_f * (x**3) * (y_6**24) + 
            L0x20019910_f * (x**0) * (y_6**25) + 
            L0x20019912_f * (x**1) * (y_6**25) + 
            L0x20019914_f * (x**2) * (y_6**25) + 
            L0x20019916_f * (x**3) * (y_6**25) + 
            L0x20019918_f * (x**0) * (y_6**26) + 
            L0x2001991a_f * (x**1) * (y_6**26) + 
            L0x2001991c_f * (x**2) * (y_6**26) + 
            L0x2001991e_f * (x**3) * (y_6**26) + 
            L0x20019920_f * (x**0) * (y_6**27) + 
            L0x20019922_f * (x**1) * (y_6**27) + 
            L0x20019924_f * (x**2) * (y_6**27) + 
            L0x20019926_f * (x**3) * (y_6**27) + 
            L0x20019928_f * (x**0) * (y_6**28) + 
            L0x2001992a_f * (x**1) * (y_6**28) + 
            L0x2001992c_f * (x**2) * (y_6**28) + 
            L0x2001992e_f * (x**3) * (y_6**28) + 
            L0x20019930_f * (x**0) * (y_6**29) + 
            L0x20019932_f * (x**1) * (y_6**29) + 
            L0x20019934_f * (x**2) * (y_6**29) + 
            L0x20019936_f * (x**3) * (y_6**29) + 
            L0x20019938_f * (x**0) * (y_6**30) + 
            L0x2001993a_f * (x**1) * (y_6**30) + 
            L0x2001993c_f * (x**2) * (y_6**30) + 
            L0x2001993e_f * (x**3) * (y_6**30) + 
            L0x20019940_f * (x**0) * (y_6**31) + 
            L0x20019942_f * (x**1) * (y_6**31) + 
            L0x20019944_f * (x**2) * (y_6**31) + 
            L0x20019946_f * (x**3) * (y_6**31) + 
            L0x20019948_f * (x**0) * (y_6**32) + 
            L0x2001994a_f * (x**1) * (y_6**32) + 
            L0x2001994c_f * (x**2) * (y_6**32) + 
            L0x2001994e_f * (x**3) * (y_6**32) + 
            L0x20019950_f * (x**0) * (y_6**33) + 
            L0x20019952_f * (x**1) * (y_6**33) + 
            L0x20019954_f * (x**2) * (y_6**33) + 
            L0x20019956_f * (x**3) * (y_6**33) + 
            L0x20019958_f * (x**0) * (y_6**34) + 
            L0x2001995a_f * (x**1) * (y_6**34) + 
            L0x2001995c_f * (x**2) * (y_6**34) + 
            L0x2001995e_f * (x**3) * (y_6**34) + 
            L0x20019960_f * (x**0) * (y_6**35) + 
            L0x20019962_f * (x**1) * (y_6**35) + 
            L0x20019964_f * (x**2) * (y_6**35) + 
            L0x20019966_f * (x**3) * (y_6**35) + 
            L0x20019968_f * (x**0) * (y_6**36) + 
            L0x2001996a_f * (x**1) * (y_6**36) + 
            L0x2001996c_f * (x**2) * (y_6**36) + 
            L0x2001996e_f * (x**3) * (y_6**36) + 
            L0x20019970_f * (x**0) * (y_6**37) + 
            L0x20019972_f * (x**1) * (y_6**37) + 
            L0x20019974_f * (x**2) * (y_6**37) + 
            L0x20019976_f * (x**3) * (y_6**37) + 
            L0x20019978_f * (x**0) * (y_6**38) + 
            L0x2001997a_f * (x**1) * (y_6**38) + 
            L0x2001997c_f * (x**2) * (y_6**38) + 
            L0x2001997e_f * (x**3) * (y_6**38) + 
            L0x20019980_f * (x**0) * (y_6**39) + 
            L0x20019982_f * (x**1) * (y_6**39) + 
            L0x20019984_f * (x**2) * (y_6**39) + 
            L0x20019986_f * (x**3) * (y_6**39) + 
            L0x20019988_f * (x**0) * (y_6**40) + 
            L0x2001998a_f * (x**1) * (y_6**40) + 
            L0x2001998c_f * (x**2) * (y_6**40) + 
            L0x2001998e_f * (x**3) * (y_6**40) + 
            L0x20019990_f * (x**0) * (y_6**41) + 
            L0x20019992_f * (x**1) * (y_6**41) + 
            L0x20019994_f * (x**2) * (y_6**41) + 
            L0x20019996_f * (x**3) * (y_6**41) + 
            L0x20019998_f * (x**0) * (y_6**42) + 
            L0x2001999a_f * (x**1) * (y_6**42) + 
            L0x2001999c_f * (x**2) * (y_6**42) + 
            L0x2001999e_f * (x**3) * (y_6**42) + 
            L0x200199a0_f * (x**0) * (y_6**43) + 
            L0x200199a2_f * (x**1) * (y_6**43) + 
            L0x200199a4_f * (x**2) * (y_6**43) + 
            L0x200199a6_f * (x**3) * (y_6**43) + 
            L0x200199a8_f * (x**0) * (y_6**44) + 
            L0x200199aa_f * (x**1) * (y_6**44) + 
            L0x200199ac_f * (x**2) * (y_6**44) + 
            L0x200199ae_f * (x**3) * (y_6**44) + 
            L0x200199b0_f * (x**0) * (y_6**45) + 
            L0x200199b2_f * (x**1) * (y_6**45) + 
            L0x200199b4_f * (x**2) * (y_6**45) + 
            L0x200199b6_f * (x**3) * (y_6**45) + 
            L0x200199b8_f * (x**0) * (y_6**46) + 
            L0x200199ba_f * (x**1) * (y_6**46) + 
            L0x200199bc_f * (x**2) * (y_6**46) + 
            L0x200199be_f * (x**3) * (y_6**46) + 
            L0x200199c0_f * (x**0) * (y_6**47) + 
            L0x200199c2_f * (x**1) * (y_6**47) + 
            L0x200199c4_f * (x**2) * (y_6**47) + 
            L0x200199c6_f * (x**3) * (y_6**47) + 
            L0x200199c8_f * (x**0) * (y_6**48) + 
            L0x200199ca_f * (x**1) * (y_6**48) + 
            L0x200199cc_f * (x**2) * (y_6**48) + 
            L0x200199ce_f * (x**3) * (y_6**48) + 
            L0x200199d0_f * (x**0) * (y_6**49) + 
            L0x200199d2_f * (x**1) * (y_6**49) + 
            L0x200199d4_f * (x**2) * (y_6**49) + 
            L0x200199d6_f * (x**3) * (y_6**49) + 
            L0x200199d8_f * (x**0) * (y_6**50) + 
            L0x200199da_f * (x**1) * (y_6**50) + 
            L0x200199dc_f * (x**2) * (y_6**50) + 
            L0x200199de_f * (x**3) * (y_6**50) + 
            L0x200199e0_f * (x**0) * (y_6**51) + 
            L0x200199e2_f * (x**1) * (y_6**51) + 
            L0x200199e4_f * (x**2) * (y_6**51) + 
            L0x200199e6_f * (x**3) * (y_6**51) + 
            L0x200199e8_f * (x**0) * (y_6**52) + 
            L0x200199ea_f * (x**1) * (y_6**52) + 
            L0x200199ec_f * (x**2) * (y_6**52) + 
            L0x200199ee_f * (x**3) * (y_6**52) + 
            L0x200199f0_f * (x**0) * (y_6**53) + 
            L0x200199f2_f * (x**1) * (y_6**53) + 
            L0x200199f4_f * (x**2) * (y_6**53) + 
            L0x200199f6_f * (x**3) * (y_6**53) + 
            L0x200199f8_f * (x**0) * (y_6**54) + 
            L0x200199fa_f * (x**1) * (y_6**54) + 
            L0x200199fc_f * (x**2) * (y_6**54) + 
            L0x200199fe_f * (x**3) * (y_6**54) + 
            L0x20019a00_f * (x**0) * (y_6**55) + 
            L0x20019a02_f * (x**1) * (y_6**55) + 
            L0x20019a04_f * (x**2) * (y_6**55) + 
            L0x20019a06_f * (x**3) * (y_6**55) + 
            L0x20019a08_f * (x**0) * (y_6**56) + 
            L0x20019a0a_f * (x**1) * (y_6**56) + 
            L0x20019a0c_f * (x**2) * (y_6**56) + 
            L0x20019a0e_f * (x**3) * (y_6**56) + 
            L0x20019a10_f * (x**0) * (y_6**57) + 
            L0x20019a12_f * (x**1) * (y_6**57) + 
            L0x20019a14_f * (x**2) * (y_6**57) + 
            L0x20019a16_f * (x**3) * (y_6**57) + 
            L0x20019a18_f * (x**0) * (y_6**58) + 
            L0x20019a1a_f * (x**1) * (y_6**58) + 
            L0x20019a1c_f * (x**2) * (y_6**58) + 
            L0x20019a1e_f * (x**3) * (y_6**58) + 
            L0x20019a20_f * (x**0) * (y_6**59) + 
            L0x20019a22_f * (x**1) * (y_6**59) + 
            L0x20019a24_f * (x**2) * (y_6**59) + 
            L0x20019a26_f * (x**3) * (y_6**59) + 
            L0x20019a28_f * (x**0) * (y_6**60) + 
            L0x20019a2a_f * (x**1) * (y_6**60) + 
            L0x20019a2c_f * (x**2) * (y_6**60) + 
            L0x20019a2e_f * (x**3) * (y_6**60) + 
            L0x20019a30_f * (x**0) * (y_6**61) + 
            L0x20019a32_f * (x**1) * (y_6**61) + 
            L0x20019a34_f * (x**2) * (y_6**61) + 
            L0x20019a36_f * (x**3) * (y_6**61) + 
            L0x20019a38_f * (x**0) * (y_6**62) + 
            L0x20019a3a_f * (x**1) * (y_6**62) + 
            L0x20019a3c_f * (x**2) * (y_6**62) + 
            L0x20019a3e_f * (x**3) * (y_6**62) + 
            L0x20019a40_f * (x**0) * (y_6**63) + 
            L0x20019a42_f * (x**1) * (y_6**63) + 
            L0x20019a44_f * (x**2) * (y_6**63) + 
            L0x20019a46_f * (x**3) * (y_6**63)
          )
          [25570049, x**4 - y_3_3 * 24859920, y_3_3**8 - 1]
  ] prove with [cuts [18]]
  &&
  true
;

cut (* 27 *)
  true && true;

(* slice 4 *)
cut (* 28 *)
  and [
    (* imm_poly_4 *)
    eqmod (2**32) * (imm_poly_4 * imm_poly_4)
          8 * (
            L0x20019848_f * (x**0) * (y_6**0) + 
            L0x2001984a_f * (x**1) * (y_6**0) + 
            L0x2001984c_f * (x**2) * (y_6**0) + 
            L0x2001984e_f * (x**3) * (y_6**0) + 
            L0x20019850_f * (x**0) * (y_6**1) + 
            L0x20019852_f * (x**1) * (y_6**1) + 
            L0x20019854_f * (x**2) * (y_6**1) + 
            L0x20019856_f * (x**3) * (y_6**1) + 
            L0x20019858_f * (x**0) * (y_6**2) + 
            L0x2001985a_f * (x**1) * (y_6**2) + 
            L0x2001985c_f * (x**2) * (y_6**2) + 
            L0x2001985e_f * (x**3) * (y_6**2) + 
            L0x20019860_f * (x**0) * (y_6**3) + 
            L0x20019862_f * (x**1) * (y_6**3) + 
            L0x20019864_f * (x**2) * (y_6**3) + 
            L0x20019866_f * (x**3) * (y_6**3) + 
            L0x20019868_f * (x**0) * (y_6**4) + 
            L0x2001986a_f * (x**1) * (y_6**4) + 
            L0x2001986c_f * (x**2) * (y_6**4) + 
            L0x2001986e_f * (x**3) * (y_6**4) + 
            L0x20019870_f * (x**0) * (y_6**5) + 
            L0x20019872_f * (x**1) * (y_6**5) + 
            L0x20019874_f * (x**2) * (y_6**5) + 
            L0x20019876_f * (x**3) * (y_6**5) + 
            L0x20019878_f * (x**0) * (y_6**6) + 
            L0x2001987a_f * (x**1) * (y_6**6) + 
            L0x2001987c_f * (x**2) * (y_6**6) + 
            L0x2001987e_f * (x**3) * (y_6**6) + 
            L0x20019880_f * (x**0) * (y_6**7) + 
            L0x20019882_f * (x**1) * (y_6**7) + 
            L0x20019884_f * (x**2) * (y_6**7) + 
            L0x20019886_f * (x**3) * (y_6**7) + 
            L0x20019888_f * (x**0) * (y_6**8) + 
            L0x2001988a_f * (x**1) * (y_6**8) + 
            L0x2001988c_f * (x**2) * (y_6**8) + 
            L0x2001988e_f * (x**3) * (y_6**8) + 
            L0x20019890_f * (x**0) * (y_6**9) + 
            L0x20019892_f * (x**1) * (y_6**9) + 
            L0x20019894_f * (x**2) * (y_6**9) + 
            L0x20019896_f * (x**3) * (y_6**9) + 
            L0x20019898_f * (x**0) * (y_6**10) + 
            L0x2001989a_f * (x**1) * (y_6**10) + 
            L0x2001989c_f * (x**2) * (y_6**10) + 
            L0x2001989e_f * (x**3) * (y_6**10) + 
            L0x200198a0_f * (x**0) * (y_6**11) + 
            L0x200198a2_f * (x**1) * (y_6**11) + 
            L0x200198a4_f * (x**2) * (y_6**11) + 
            L0x200198a6_f * (x**3) * (y_6**11) + 
            L0x200198a8_f * (x**0) * (y_6**12) + 
            L0x200198aa_f * (x**1) * (y_6**12) + 
            L0x200198ac_f * (x**2) * (y_6**12) + 
            L0x200198ae_f * (x**3) * (y_6**12) + 
            L0x200198b0_f * (x**0) * (y_6**13) + 
            L0x200198b2_f * (x**1) * (y_6**13) + 
            L0x200198b4_f * (x**2) * (y_6**13) + 
            L0x200198b6_f * (x**3) * (y_6**13) + 
            L0x200198b8_f * (x**0) * (y_6**14) + 
            L0x200198ba_f * (x**1) * (y_6**14) + 
            L0x200198bc_f * (x**2) * (y_6**14) + 
            L0x200198be_f * (x**3) * (y_6**14) + 
            L0x200198c0_f * (x**0) * (y_6**15) + 
            L0x200198c2_f * (x**1) * (y_6**15) + 
            L0x200198c4_f * (x**2) * (y_6**15) + 
            L0x200198c6_f * (x**3) * (y_6**15) + 
            L0x200198c8_f * (x**0) * (y_6**16) + 
            L0x200198ca_f * (x**1) * (y_6**16) + 
            L0x200198cc_f * (x**2) * (y_6**16) + 
            L0x200198ce_f * (x**3) * (y_6**16) + 
            L0x200198d0_f * (x**0) * (y_6**17) + 
            L0x200198d2_f * (x**1) * (y_6**17) + 
            L0x200198d4_f * (x**2) * (y_6**17) + 
            L0x200198d6_f * (x**3) * (y_6**17) + 
            L0x200198d8_f * (x**0) * (y_6**18) + 
            L0x200198da_f * (x**1) * (y_6**18) + 
            L0x200198dc_f * (x**2) * (y_6**18) + 
            L0x200198de_f * (x**3) * (y_6**18) + 
            L0x200198e0_f * (x**0) * (y_6**19) + 
            L0x200198e2_f * (x**1) * (y_6**19) + 
            L0x200198e4_f * (x**2) * (y_6**19) + 
            L0x200198e6_f * (x**3) * (y_6**19) + 
            L0x200198e8_f * (x**0) * (y_6**20) + 
            L0x200198ea_f * (x**1) * (y_6**20) + 
            L0x200198ec_f * (x**2) * (y_6**20) + 
            L0x200198ee_f * (x**3) * (y_6**20) + 
            L0x200198f0_f * (x**0) * (y_6**21) + 
            L0x200198f2_f * (x**1) * (y_6**21) + 
            L0x200198f4_f * (x**2) * (y_6**21) + 
            L0x200198f6_f * (x**3) * (y_6**21) + 
            L0x200198f8_f * (x**0) * (y_6**22) + 
            L0x200198fa_f * (x**1) * (y_6**22) + 
            L0x200198fc_f * (x**2) * (y_6**22) + 
            L0x200198fe_f * (x**3) * (y_6**22) + 
            L0x20019900_f * (x**0) * (y_6**23) + 
            L0x20019902_f * (x**1) * (y_6**23) + 
            L0x20019904_f * (x**2) * (y_6**23) + 
            L0x20019906_f * (x**3) * (y_6**23) + 
            L0x20019908_f * (x**0) * (y_6**24) + 
            L0x2001990a_f * (x**1) * (y_6**24) + 
            L0x2001990c_f * (x**2) * (y_6**24) + 
            L0x2001990e_f * (x**3) * (y_6**24) + 
            L0x20019910_f * (x**0) * (y_6**25) + 
            L0x20019912_f * (x**1) * (y_6**25) + 
            L0x20019914_f * (x**2) * (y_6**25) + 
            L0x20019916_f * (x**3) * (y_6**25) + 
            L0x20019918_f * (x**0) * (y_6**26) + 
            L0x2001991a_f * (x**1) * (y_6**26) + 
            L0x2001991c_f * (x**2) * (y_6**26) + 
            L0x2001991e_f * (x**3) * (y_6**26) + 
            L0x20019920_f * (x**0) * (y_6**27) + 
            L0x20019922_f * (x**1) * (y_6**27) + 
            L0x20019924_f * (x**2) * (y_6**27) + 
            L0x20019926_f * (x**3) * (y_6**27) + 
            L0x20019928_f * (x**0) * (y_6**28) + 
            L0x2001992a_f * (x**1) * (y_6**28) + 
            L0x2001992c_f * (x**2) * (y_6**28) + 
            L0x2001992e_f * (x**3) * (y_6**28) + 
            L0x20019930_f * (x**0) * (y_6**29) + 
            L0x20019932_f * (x**1) * (y_6**29) + 
            L0x20019934_f * (x**2) * (y_6**29) + 
            L0x20019936_f * (x**3) * (y_6**29) + 
            L0x20019938_f * (x**0) * (y_6**30) + 
            L0x2001993a_f * (x**1) * (y_6**30) + 
            L0x2001993c_f * (x**2) * (y_6**30) + 
            L0x2001993e_f * (x**3) * (y_6**30) + 
            L0x20019940_f * (x**0) * (y_6**31) + 
            L0x20019942_f * (x**1) * (y_6**31) + 
            L0x20019944_f * (x**2) * (y_6**31) + 
            L0x20019946_f * (x**3) * (y_6**31) + 
            L0x20019948_f * (x**0) * (y_6**32) + 
            L0x2001994a_f * (x**1) * (y_6**32) + 
            L0x2001994c_f * (x**2) * (y_6**32) + 
            L0x2001994e_f * (x**3) * (y_6**32) + 
            L0x20019950_f * (x**0) * (y_6**33) + 
            L0x20019952_f * (x**1) * (y_6**33) + 
            L0x20019954_f * (x**2) * (y_6**33) + 
            L0x20019956_f * (x**3) * (y_6**33) + 
            L0x20019958_f * (x**0) * (y_6**34) + 
            L0x2001995a_f * (x**1) * (y_6**34) + 
            L0x2001995c_f * (x**2) * (y_6**34) + 
            L0x2001995e_f * (x**3) * (y_6**34) + 
            L0x20019960_f * (x**0) * (y_6**35) + 
            L0x20019962_f * (x**1) * (y_6**35) + 
            L0x20019964_f * (x**2) * (y_6**35) + 
            L0x20019966_f * (x**3) * (y_6**35) + 
            L0x20019968_f * (x**0) * (y_6**36) + 
            L0x2001996a_f * (x**1) * (y_6**36) + 
            L0x2001996c_f * (x**2) * (y_6**36) + 
            L0x2001996e_f * (x**3) * (y_6**36) + 
            L0x20019970_f * (x**0) * (y_6**37) + 
            L0x20019972_f * (x**1) * (y_6**37) + 
            L0x20019974_f * (x**2) * (y_6**37) + 
            L0x20019976_f * (x**3) * (y_6**37) + 
            L0x20019978_f * (x**0) * (y_6**38) + 
            L0x2001997a_f * (x**1) * (y_6**38) + 
            L0x2001997c_f * (x**2) * (y_6**38) + 
            L0x2001997e_f * (x**3) * (y_6**38) + 
            L0x20019980_f * (x**0) * (y_6**39) + 
            L0x20019982_f * (x**1) * (y_6**39) + 
            L0x20019984_f * (x**2) * (y_6**39) + 
            L0x20019986_f * (x**3) * (y_6**39) + 
            L0x20019988_f * (x**0) * (y_6**40) + 
            L0x2001998a_f * (x**1) * (y_6**40) + 
            L0x2001998c_f * (x**2) * (y_6**40) + 
            L0x2001998e_f * (x**3) * (y_6**40) + 
            L0x20019990_f * (x**0) * (y_6**41) + 
            L0x20019992_f * (x**1) * (y_6**41) + 
            L0x20019994_f * (x**2) * (y_6**41) + 
            L0x20019996_f * (x**3) * (y_6**41) + 
            L0x20019998_f * (x**0) * (y_6**42) + 
            L0x2001999a_f * (x**1) * (y_6**42) + 
            L0x2001999c_f * (x**2) * (y_6**42) + 
            L0x2001999e_f * (x**3) * (y_6**42) + 
            L0x200199a0_f * (x**0) * (y_6**43) + 
            L0x200199a2_f * (x**1) * (y_6**43) + 
            L0x200199a4_f * (x**2) * (y_6**43) + 
            L0x200199a6_f * (x**3) * (y_6**43) + 
            L0x200199a8_f * (x**0) * (y_6**44) + 
            L0x200199aa_f * (x**1) * (y_6**44) + 
            L0x200199ac_f * (x**2) * (y_6**44) + 
            L0x200199ae_f * (x**3) * (y_6**44) + 
            L0x200199b0_f * (x**0) * (y_6**45) + 
            L0x200199b2_f * (x**1) * (y_6**45) + 
            L0x200199b4_f * (x**2) * (y_6**45) + 
            L0x200199b6_f * (x**3) * (y_6**45) + 
            L0x200199b8_f * (x**0) * (y_6**46) + 
            L0x200199ba_f * (x**1) * (y_6**46) + 
            L0x200199bc_f * (x**2) * (y_6**46) + 
            L0x200199be_f * (x**3) * (y_6**46) + 
            L0x200199c0_f * (x**0) * (y_6**47) + 
            L0x200199c2_f * (x**1) * (y_6**47) + 
            L0x200199c4_f * (x**2) * (y_6**47) + 
            L0x200199c6_f * (x**3) * (y_6**47) + 
            L0x200199c8_f * (x**0) * (y_6**48) + 
            L0x200199ca_f * (x**1) * (y_6**48) + 
            L0x200199cc_f * (x**2) * (y_6**48) + 
            L0x200199ce_f * (x**3) * (y_6**48) + 
            L0x200199d0_f * (x**0) * (y_6**49) + 
            L0x200199d2_f * (x**1) * (y_6**49) + 
            L0x200199d4_f * (x**2) * (y_6**49) + 
            L0x200199d6_f * (x**3) * (y_6**49) + 
            L0x200199d8_f * (x**0) * (y_6**50) + 
            L0x200199da_f * (x**1) * (y_6**50) + 
            L0x200199dc_f * (x**2) * (y_6**50) + 
            L0x200199de_f * (x**3) * (y_6**50) + 
            L0x200199e0_f * (x**0) * (y_6**51) + 
            L0x200199e2_f * (x**1) * (y_6**51) + 
            L0x200199e4_f * (x**2) * (y_6**51) + 
            L0x200199e6_f * (x**3) * (y_6**51) + 
            L0x200199e8_f * (x**0) * (y_6**52) + 
            L0x200199ea_f * (x**1) * (y_6**52) + 
            L0x200199ec_f * (x**2) * (y_6**52) + 
            L0x200199ee_f * (x**3) * (y_6**52) + 
            L0x200199f0_f * (x**0) * (y_6**53) + 
            L0x200199f2_f * (x**1) * (y_6**53) + 
            L0x200199f4_f * (x**2) * (y_6**53) + 
            L0x200199f6_f * (x**3) * (y_6**53) + 
            L0x200199f8_f * (x**0) * (y_6**54) + 
            L0x200199fa_f * (x**1) * (y_6**54) + 
            L0x200199fc_f * (x**2) * (y_6**54) + 
            L0x200199fe_f * (x**3) * (y_6**54) + 
            L0x20019a00_f * (x**0) * (y_6**55) + 
            L0x20019a02_f * (x**1) * (y_6**55) + 
            L0x20019a04_f * (x**2) * (y_6**55) + 
            L0x20019a06_f * (x**3) * (y_6**55) + 
            L0x20019a08_f * (x**0) * (y_6**56) + 
            L0x20019a0a_f * (x**1) * (y_6**56) + 
            L0x20019a0c_f * (x**2) * (y_6**56) + 
            L0x20019a0e_f * (x**3) * (y_6**56) + 
            L0x20019a10_f * (x**0) * (y_6**57) + 
            L0x20019a12_f * (x**1) * (y_6**57) + 
            L0x20019a14_f * (x**2) * (y_6**57) + 
            L0x20019a16_f * (x**3) * (y_6**57) + 
            L0x20019a18_f * (x**0) * (y_6**58) + 
            L0x20019a1a_f * (x**1) * (y_6**58) + 
            L0x20019a1c_f * (x**2) * (y_6**58) + 
            L0x20019a1e_f * (x**3) * (y_6**58) + 
            L0x20019a20_f * (x**0) * (y_6**59) + 
            L0x20019a22_f * (x**1) * (y_6**59) + 
            L0x20019a24_f * (x**2) * (y_6**59) + 
            L0x20019a26_f * (x**3) * (y_6**59) + 
            L0x20019a28_f * (x**0) * (y_6**60) + 
            L0x20019a2a_f * (x**1) * (y_6**60) + 
            L0x20019a2c_f * (x**2) * (y_6**60) + 
            L0x20019a2e_f * (x**3) * (y_6**60) + 
            L0x20019a30_f * (x**0) * (y_6**61) + 
            L0x20019a32_f * (x**1) * (y_6**61) + 
            L0x20019a34_f * (x**2) * (y_6**61) + 
            L0x20019a36_f * (x**3) * (y_6**61) + 
            L0x20019a38_f * (x**0) * (y_6**62) + 
            L0x20019a3a_f * (x**1) * (y_6**62) + 
            L0x20019a3c_f * (x**2) * (y_6**62) + 
            L0x20019a3e_f * (x**3) * (y_6**62) + 
            L0x20019a40_f * (x**0) * (y_6**63) + 
            L0x20019a42_f * (x**1) * (y_6**63) + 
            L0x20019a44_f * (x**2) * (y_6**63) + 
            L0x20019a46_f * (x**3) * (y_6**63)
          )
          [25570049, x**4 - y_3_4 * 7847101, y_3_4**8 - 1]
  ] prove with [cuts [18]]
  &&
  true
;

cut (* 29 *)
  true && true;

(* slice 5 *)
cut (* 30 *)
  and [
    (* imm_poly_5 *)
    eqmod (2**32) * (imm_poly_5 * imm_poly_5)
          8 * (
            L0x20019848_f * (x**0) * (y_6**0) + 
            L0x2001984a_f * (x**1) * (y_6**0) + 
            L0x2001984c_f * (x**2) * (y_6**0) + 
            L0x2001984e_f * (x**3) * (y_6**0) + 
            L0x20019850_f * (x**0) * (y_6**1) + 
            L0x20019852_f * (x**1) * (y_6**1) + 
            L0x20019854_f * (x**2) * (y_6**1) + 
            L0x20019856_f * (x**3) * (y_6**1) + 
            L0x20019858_f * (x**0) * (y_6**2) + 
            L0x2001985a_f * (x**1) * (y_6**2) + 
            L0x2001985c_f * (x**2) * (y_6**2) + 
            L0x2001985e_f * (x**3) * (y_6**2) + 
            L0x20019860_f * (x**0) * (y_6**3) + 
            L0x20019862_f * (x**1) * (y_6**3) + 
            L0x20019864_f * (x**2) * (y_6**3) + 
            L0x20019866_f * (x**3) * (y_6**3) + 
            L0x20019868_f * (x**0) * (y_6**4) + 
            L0x2001986a_f * (x**1) * (y_6**4) + 
            L0x2001986c_f * (x**2) * (y_6**4) + 
            L0x2001986e_f * (x**3) * (y_6**4) + 
            L0x20019870_f * (x**0) * (y_6**5) + 
            L0x20019872_f * (x**1) * (y_6**5) + 
            L0x20019874_f * (x**2) * (y_6**5) + 
            L0x20019876_f * (x**3) * (y_6**5) + 
            L0x20019878_f * (x**0) * (y_6**6) + 
            L0x2001987a_f * (x**1) * (y_6**6) + 
            L0x2001987c_f * (x**2) * (y_6**6) + 
            L0x2001987e_f * (x**3) * (y_6**6) + 
            L0x20019880_f * (x**0) * (y_6**7) + 
            L0x20019882_f * (x**1) * (y_6**7) + 
            L0x20019884_f * (x**2) * (y_6**7) + 
            L0x20019886_f * (x**3) * (y_6**7) + 
            L0x20019888_f * (x**0) * (y_6**8) + 
            L0x2001988a_f * (x**1) * (y_6**8) + 
            L0x2001988c_f * (x**2) * (y_6**8) + 
            L0x2001988e_f * (x**3) * (y_6**8) + 
            L0x20019890_f * (x**0) * (y_6**9) + 
            L0x20019892_f * (x**1) * (y_6**9) + 
            L0x20019894_f * (x**2) * (y_6**9) + 
            L0x20019896_f * (x**3) * (y_6**9) + 
            L0x20019898_f * (x**0) * (y_6**10) + 
            L0x2001989a_f * (x**1) * (y_6**10) + 
            L0x2001989c_f * (x**2) * (y_6**10) + 
            L0x2001989e_f * (x**3) * (y_6**10) + 
            L0x200198a0_f * (x**0) * (y_6**11) + 
            L0x200198a2_f * (x**1) * (y_6**11) + 
            L0x200198a4_f * (x**2) * (y_6**11) + 
            L0x200198a6_f * (x**3) * (y_6**11) + 
            L0x200198a8_f * (x**0) * (y_6**12) + 
            L0x200198aa_f * (x**1) * (y_6**12) + 
            L0x200198ac_f * (x**2) * (y_6**12) + 
            L0x200198ae_f * (x**3) * (y_6**12) + 
            L0x200198b0_f * (x**0) * (y_6**13) + 
            L0x200198b2_f * (x**1) * (y_6**13) + 
            L0x200198b4_f * (x**2) * (y_6**13) + 
            L0x200198b6_f * (x**3) * (y_6**13) + 
            L0x200198b8_f * (x**0) * (y_6**14) + 
            L0x200198ba_f * (x**1) * (y_6**14) + 
            L0x200198bc_f * (x**2) * (y_6**14) + 
            L0x200198be_f * (x**3) * (y_6**14) + 
            L0x200198c0_f * (x**0) * (y_6**15) + 
            L0x200198c2_f * (x**1) * (y_6**15) + 
            L0x200198c4_f * (x**2) * (y_6**15) + 
            L0x200198c6_f * (x**3) * (y_6**15) + 
            L0x200198c8_f * (x**0) * (y_6**16) + 
            L0x200198ca_f * (x**1) * (y_6**16) + 
            L0x200198cc_f * (x**2) * (y_6**16) + 
            L0x200198ce_f * (x**3) * (y_6**16) + 
            L0x200198d0_f * (x**0) * (y_6**17) + 
            L0x200198d2_f * (x**1) * (y_6**17) + 
            L0x200198d4_f * (x**2) * (y_6**17) + 
            L0x200198d6_f * (x**3) * (y_6**17) + 
            L0x200198d8_f * (x**0) * (y_6**18) + 
            L0x200198da_f * (x**1) * (y_6**18) + 
            L0x200198dc_f * (x**2) * (y_6**18) + 
            L0x200198de_f * (x**3) * (y_6**18) + 
            L0x200198e0_f * (x**0) * (y_6**19) + 
            L0x200198e2_f * (x**1) * (y_6**19) + 
            L0x200198e4_f * (x**2) * (y_6**19) + 
            L0x200198e6_f * (x**3) * (y_6**19) + 
            L0x200198e8_f * (x**0) * (y_6**20) + 
            L0x200198ea_f * (x**1) * (y_6**20) + 
            L0x200198ec_f * (x**2) * (y_6**20) + 
            L0x200198ee_f * (x**3) * (y_6**20) + 
            L0x200198f0_f * (x**0) * (y_6**21) + 
            L0x200198f2_f * (x**1) * (y_6**21) + 
            L0x200198f4_f * (x**2) * (y_6**21) + 
            L0x200198f6_f * (x**3) * (y_6**21) + 
            L0x200198f8_f * (x**0) * (y_6**22) + 
            L0x200198fa_f * (x**1) * (y_6**22) + 
            L0x200198fc_f * (x**2) * (y_6**22) + 
            L0x200198fe_f * (x**3) * (y_6**22) + 
            L0x20019900_f * (x**0) * (y_6**23) + 
            L0x20019902_f * (x**1) * (y_6**23) + 
            L0x20019904_f * (x**2) * (y_6**23) + 
            L0x20019906_f * (x**3) * (y_6**23) + 
            L0x20019908_f * (x**0) * (y_6**24) + 
            L0x2001990a_f * (x**1) * (y_6**24) + 
            L0x2001990c_f * (x**2) * (y_6**24) + 
            L0x2001990e_f * (x**3) * (y_6**24) + 
            L0x20019910_f * (x**0) * (y_6**25) + 
            L0x20019912_f * (x**1) * (y_6**25) + 
            L0x20019914_f * (x**2) * (y_6**25) + 
            L0x20019916_f * (x**3) * (y_6**25) + 
            L0x20019918_f * (x**0) * (y_6**26) + 
            L0x2001991a_f * (x**1) * (y_6**26) + 
            L0x2001991c_f * (x**2) * (y_6**26) + 
            L0x2001991e_f * (x**3) * (y_6**26) + 
            L0x20019920_f * (x**0) * (y_6**27) + 
            L0x20019922_f * (x**1) * (y_6**27) + 
            L0x20019924_f * (x**2) * (y_6**27) + 
            L0x20019926_f * (x**3) * (y_6**27) + 
            L0x20019928_f * (x**0) * (y_6**28) + 
            L0x2001992a_f * (x**1) * (y_6**28) + 
            L0x2001992c_f * (x**2) * (y_6**28) + 
            L0x2001992e_f * (x**3) * (y_6**28) + 
            L0x20019930_f * (x**0) * (y_6**29) + 
            L0x20019932_f * (x**1) * (y_6**29) + 
            L0x20019934_f * (x**2) * (y_6**29) + 
            L0x20019936_f * (x**3) * (y_6**29) + 
            L0x20019938_f * (x**0) * (y_6**30) + 
            L0x2001993a_f * (x**1) * (y_6**30) + 
            L0x2001993c_f * (x**2) * (y_6**30) + 
            L0x2001993e_f * (x**3) * (y_6**30) + 
            L0x20019940_f * (x**0) * (y_6**31) + 
            L0x20019942_f * (x**1) * (y_6**31) + 
            L0x20019944_f * (x**2) * (y_6**31) + 
            L0x20019946_f * (x**3) * (y_6**31) + 
            L0x20019948_f * (x**0) * (y_6**32) + 
            L0x2001994a_f * (x**1) * (y_6**32) + 
            L0x2001994c_f * (x**2) * (y_6**32) + 
            L0x2001994e_f * (x**3) * (y_6**32) + 
            L0x20019950_f * (x**0) * (y_6**33) + 
            L0x20019952_f * (x**1) * (y_6**33) + 
            L0x20019954_f * (x**2) * (y_6**33) + 
            L0x20019956_f * (x**3) * (y_6**33) + 
            L0x20019958_f * (x**0) * (y_6**34) + 
            L0x2001995a_f * (x**1) * (y_6**34) + 
            L0x2001995c_f * (x**2) * (y_6**34) + 
            L0x2001995e_f * (x**3) * (y_6**34) + 
            L0x20019960_f * (x**0) * (y_6**35) + 
            L0x20019962_f * (x**1) * (y_6**35) + 
            L0x20019964_f * (x**2) * (y_6**35) + 
            L0x20019966_f * (x**3) * (y_6**35) + 
            L0x20019968_f * (x**0) * (y_6**36) + 
            L0x2001996a_f * (x**1) * (y_6**36) + 
            L0x2001996c_f * (x**2) * (y_6**36) + 
            L0x2001996e_f * (x**3) * (y_6**36) + 
            L0x20019970_f * (x**0) * (y_6**37) + 
            L0x20019972_f * (x**1) * (y_6**37) + 
            L0x20019974_f * (x**2) * (y_6**37) + 
            L0x20019976_f * (x**3) * (y_6**37) + 
            L0x20019978_f * (x**0) * (y_6**38) + 
            L0x2001997a_f * (x**1) * (y_6**38) + 
            L0x2001997c_f * (x**2) * (y_6**38) + 
            L0x2001997e_f * (x**3) * (y_6**38) + 
            L0x20019980_f * (x**0) * (y_6**39) + 
            L0x20019982_f * (x**1) * (y_6**39) + 
            L0x20019984_f * (x**2) * (y_6**39) + 
            L0x20019986_f * (x**3) * (y_6**39) + 
            L0x20019988_f * (x**0) * (y_6**40) + 
            L0x2001998a_f * (x**1) * (y_6**40) + 
            L0x2001998c_f * (x**2) * (y_6**40) + 
            L0x2001998e_f * (x**3) * (y_6**40) + 
            L0x20019990_f * (x**0) * (y_6**41) + 
            L0x20019992_f * (x**1) * (y_6**41) + 
            L0x20019994_f * (x**2) * (y_6**41) + 
            L0x20019996_f * (x**3) * (y_6**41) + 
            L0x20019998_f * (x**0) * (y_6**42) + 
            L0x2001999a_f * (x**1) * (y_6**42) + 
            L0x2001999c_f * (x**2) * (y_6**42) + 
            L0x2001999e_f * (x**3) * (y_6**42) + 
            L0x200199a0_f * (x**0) * (y_6**43) + 
            L0x200199a2_f * (x**1) * (y_6**43) + 
            L0x200199a4_f * (x**2) * (y_6**43) + 
            L0x200199a6_f * (x**3) * (y_6**43) + 
            L0x200199a8_f * (x**0) * (y_6**44) + 
            L0x200199aa_f * (x**1) * (y_6**44) + 
            L0x200199ac_f * (x**2) * (y_6**44) + 
            L0x200199ae_f * (x**3) * (y_6**44) + 
            L0x200199b0_f * (x**0) * (y_6**45) + 
            L0x200199b2_f * (x**1) * (y_6**45) + 
            L0x200199b4_f * (x**2) * (y_6**45) + 
            L0x200199b6_f * (x**3) * (y_6**45) + 
            L0x200199b8_f * (x**0) * (y_6**46) + 
            L0x200199ba_f * (x**1) * (y_6**46) + 
            L0x200199bc_f * (x**2) * (y_6**46) + 
            L0x200199be_f * (x**3) * (y_6**46) + 
            L0x200199c0_f * (x**0) * (y_6**47) + 
            L0x200199c2_f * (x**1) * (y_6**47) + 
            L0x200199c4_f * (x**2) * (y_6**47) + 
            L0x200199c6_f * (x**3) * (y_6**47) + 
            L0x200199c8_f * (x**0) * (y_6**48) + 
            L0x200199ca_f * (x**1) * (y_6**48) + 
            L0x200199cc_f * (x**2) * (y_6**48) + 
            L0x200199ce_f * (x**3) * (y_6**48) + 
            L0x200199d0_f * (x**0) * (y_6**49) + 
            L0x200199d2_f * (x**1) * (y_6**49) + 
            L0x200199d4_f * (x**2) * (y_6**49) + 
            L0x200199d6_f * (x**3) * (y_6**49) + 
            L0x200199d8_f * (x**0) * (y_6**50) + 
            L0x200199da_f * (x**1) * (y_6**50) + 
            L0x200199dc_f * (x**2) * (y_6**50) + 
            L0x200199de_f * (x**3) * (y_6**50) + 
            L0x200199e0_f * (x**0) * (y_6**51) + 
            L0x200199e2_f * (x**1) * (y_6**51) + 
            L0x200199e4_f * (x**2) * (y_6**51) + 
            L0x200199e6_f * (x**3) * (y_6**51) + 
            L0x200199e8_f * (x**0) * (y_6**52) + 
            L0x200199ea_f * (x**1) * (y_6**52) + 
            L0x200199ec_f * (x**2) * (y_6**52) + 
            L0x200199ee_f * (x**3) * (y_6**52) + 
            L0x200199f0_f * (x**0) * (y_6**53) + 
            L0x200199f2_f * (x**1) * (y_6**53) + 
            L0x200199f4_f * (x**2) * (y_6**53) + 
            L0x200199f6_f * (x**3) * (y_6**53) + 
            L0x200199f8_f * (x**0) * (y_6**54) + 
            L0x200199fa_f * (x**1) * (y_6**54) + 
            L0x200199fc_f * (x**2) * (y_6**54) + 
            L0x200199fe_f * (x**3) * (y_6**54) + 
            L0x20019a00_f * (x**0) * (y_6**55) + 
            L0x20019a02_f * (x**1) * (y_6**55) + 
            L0x20019a04_f * (x**2) * (y_6**55) + 
            L0x20019a06_f * (x**3) * (y_6**55) + 
            L0x20019a08_f * (x**0) * (y_6**56) + 
            L0x20019a0a_f * (x**1) * (y_6**56) + 
            L0x20019a0c_f * (x**2) * (y_6**56) + 
            L0x20019a0e_f * (x**3) * (y_6**56) + 
            L0x20019a10_f * (x**0) * (y_6**57) + 
            L0x20019a12_f * (x**1) * (y_6**57) + 
            L0x20019a14_f * (x**2) * (y_6**57) + 
            L0x20019a16_f * (x**3) * (y_6**57) + 
            L0x20019a18_f * (x**0) * (y_6**58) + 
            L0x20019a1a_f * (x**1) * (y_6**58) + 
            L0x20019a1c_f * (x**2) * (y_6**58) + 
            L0x20019a1e_f * (x**3) * (y_6**58) + 
            L0x20019a20_f * (x**0) * (y_6**59) + 
            L0x20019a22_f * (x**1) * (y_6**59) + 
            L0x20019a24_f * (x**2) * (y_6**59) + 
            L0x20019a26_f * (x**3) * (y_6**59) + 
            L0x20019a28_f * (x**0) * (y_6**60) + 
            L0x20019a2a_f * (x**1) * (y_6**60) + 
            L0x20019a2c_f * (x**2) * (y_6**60) + 
            L0x20019a2e_f * (x**3) * (y_6**60) + 
            L0x20019a30_f * (x**0) * (y_6**61) + 
            L0x20019a32_f * (x**1) * (y_6**61) + 
            L0x20019a34_f * (x**2) * (y_6**61) + 
            L0x20019a36_f * (x**3) * (y_6**61) + 
            L0x20019a38_f * (x**0) * (y_6**62) + 
            L0x20019a3a_f * (x**1) * (y_6**62) + 
            L0x20019a3c_f * (x**2) * (y_6**62) + 
            L0x20019a3e_f * (x**3) * (y_6**62) + 
            L0x20019a40_f * (x**0) * (y_6**63) + 
            L0x20019a42_f * (x**1) * (y_6**63) + 
            L0x20019a44_f * (x**2) * (y_6**63) + 
            L0x20019a46_f * (x**3) * (y_6**63)
          )
          [25570049, x**4 - y_3_5 * 19921963, y_3_5**8 - 1]
  ] prove with [cuts [18]]
  &&
  true
;

cut (* 31 *)
  true && true;

(* slice 6 *)
cut (* 32 *)
  and [
    (* imm_poly_6 *)
    eqmod (2**32) * (imm_poly_6 * imm_poly_6)
          8 * (
            L0x20019848_f * (x**0) * (y_6**0) + 
            L0x2001984a_f * (x**1) * (y_6**0) + 
            L0x2001984c_f * (x**2) * (y_6**0) + 
            L0x2001984e_f * (x**3) * (y_6**0) + 
            L0x20019850_f * (x**0) * (y_6**1) + 
            L0x20019852_f * (x**1) * (y_6**1) + 
            L0x20019854_f * (x**2) * (y_6**1) + 
            L0x20019856_f * (x**3) * (y_6**1) + 
            L0x20019858_f * (x**0) * (y_6**2) + 
            L0x2001985a_f * (x**1) * (y_6**2) + 
            L0x2001985c_f * (x**2) * (y_6**2) + 
            L0x2001985e_f * (x**3) * (y_6**2) + 
            L0x20019860_f * (x**0) * (y_6**3) + 
            L0x20019862_f * (x**1) * (y_6**3) + 
            L0x20019864_f * (x**2) * (y_6**3) + 
            L0x20019866_f * (x**3) * (y_6**3) + 
            L0x20019868_f * (x**0) * (y_6**4) + 
            L0x2001986a_f * (x**1) * (y_6**4) + 
            L0x2001986c_f * (x**2) * (y_6**4) + 
            L0x2001986e_f * (x**3) * (y_6**4) + 
            L0x20019870_f * (x**0) * (y_6**5) + 
            L0x20019872_f * (x**1) * (y_6**5) + 
            L0x20019874_f * (x**2) * (y_6**5) + 
            L0x20019876_f * (x**3) * (y_6**5) + 
            L0x20019878_f * (x**0) * (y_6**6) + 
            L0x2001987a_f * (x**1) * (y_6**6) + 
            L0x2001987c_f * (x**2) * (y_6**6) + 
            L0x2001987e_f * (x**3) * (y_6**6) + 
            L0x20019880_f * (x**0) * (y_6**7) + 
            L0x20019882_f * (x**1) * (y_6**7) + 
            L0x20019884_f * (x**2) * (y_6**7) + 
            L0x20019886_f * (x**3) * (y_6**7) + 
            L0x20019888_f * (x**0) * (y_6**8) + 
            L0x2001988a_f * (x**1) * (y_6**8) + 
            L0x2001988c_f * (x**2) * (y_6**8) + 
            L0x2001988e_f * (x**3) * (y_6**8) + 
            L0x20019890_f * (x**0) * (y_6**9) + 
            L0x20019892_f * (x**1) * (y_6**9) + 
            L0x20019894_f * (x**2) * (y_6**9) + 
            L0x20019896_f * (x**3) * (y_6**9) + 
            L0x20019898_f * (x**0) * (y_6**10) + 
            L0x2001989a_f * (x**1) * (y_6**10) + 
            L0x2001989c_f * (x**2) * (y_6**10) + 
            L0x2001989e_f * (x**3) * (y_6**10) + 
            L0x200198a0_f * (x**0) * (y_6**11) + 
            L0x200198a2_f * (x**1) * (y_6**11) + 
            L0x200198a4_f * (x**2) * (y_6**11) + 
            L0x200198a6_f * (x**3) * (y_6**11) + 
            L0x200198a8_f * (x**0) * (y_6**12) + 
            L0x200198aa_f * (x**1) * (y_6**12) + 
            L0x200198ac_f * (x**2) * (y_6**12) + 
            L0x200198ae_f * (x**3) * (y_6**12) + 
            L0x200198b0_f * (x**0) * (y_6**13) + 
            L0x200198b2_f * (x**1) * (y_6**13) + 
            L0x200198b4_f * (x**2) * (y_6**13) + 
            L0x200198b6_f * (x**3) * (y_6**13) + 
            L0x200198b8_f * (x**0) * (y_6**14) + 
            L0x200198ba_f * (x**1) * (y_6**14) + 
            L0x200198bc_f * (x**2) * (y_6**14) + 
            L0x200198be_f * (x**3) * (y_6**14) + 
            L0x200198c0_f * (x**0) * (y_6**15) + 
            L0x200198c2_f * (x**1) * (y_6**15) + 
            L0x200198c4_f * (x**2) * (y_6**15) + 
            L0x200198c6_f * (x**3) * (y_6**15) + 
            L0x200198c8_f * (x**0) * (y_6**16) + 
            L0x200198ca_f * (x**1) * (y_6**16) + 
            L0x200198cc_f * (x**2) * (y_6**16) + 
            L0x200198ce_f * (x**3) * (y_6**16) + 
            L0x200198d0_f * (x**0) * (y_6**17) + 
            L0x200198d2_f * (x**1) * (y_6**17) + 
            L0x200198d4_f * (x**2) * (y_6**17) + 
            L0x200198d6_f * (x**3) * (y_6**17) + 
            L0x200198d8_f * (x**0) * (y_6**18) + 
            L0x200198da_f * (x**1) * (y_6**18) + 
            L0x200198dc_f * (x**2) * (y_6**18) + 
            L0x200198de_f * (x**3) * (y_6**18) + 
            L0x200198e0_f * (x**0) * (y_6**19) + 
            L0x200198e2_f * (x**1) * (y_6**19) + 
            L0x200198e4_f * (x**2) * (y_6**19) + 
            L0x200198e6_f * (x**3) * (y_6**19) + 
            L0x200198e8_f * (x**0) * (y_6**20) + 
            L0x200198ea_f * (x**1) * (y_6**20) + 
            L0x200198ec_f * (x**2) * (y_6**20) + 
            L0x200198ee_f * (x**3) * (y_6**20) + 
            L0x200198f0_f * (x**0) * (y_6**21) + 
            L0x200198f2_f * (x**1) * (y_6**21) + 
            L0x200198f4_f * (x**2) * (y_6**21) + 
            L0x200198f6_f * (x**3) * (y_6**21) + 
            L0x200198f8_f * (x**0) * (y_6**22) + 
            L0x200198fa_f * (x**1) * (y_6**22) + 
            L0x200198fc_f * (x**2) * (y_6**22) + 
            L0x200198fe_f * (x**3) * (y_6**22) + 
            L0x20019900_f * (x**0) * (y_6**23) + 
            L0x20019902_f * (x**1) * (y_6**23) + 
            L0x20019904_f * (x**2) * (y_6**23) + 
            L0x20019906_f * (x**3) * (y_6**23) + 
            L0x20019908_f * (x**0) * (y_6**24) + 
            L0x2001990a_f * (x**1) * (y_6**24) + 
            L0x2001990c_f * (x**2) * (y_6**24) + 
            L0x2001990e_f * (x**3) * (y_6**24) + 
            L0x20019910_f * (x**0) * (y_6**25) + 
            L0x20019912_f * (x**1) * (y_6**25) + 
            L0x20019914_f * (x**2) * (y_6**25) + 
            L0x20019916_f * (x**3) * (y_6**25) + 
            L0x20019918_f * (x**0) * (y_6**26) + 
            L0x2001991a_f * (x**1) * (y_6**26) + 
            L0x2001991c_f * (x**2) * (y_6**26) + 
            L0x2001991e_f * (x**3) * (y_6**26) + 
            L0x20019920_f * (x**0) * (y_6**27) + 
            L0x20019922_f * (x**1) * (y_6**27) + 
            L0x20019924_f * (x**2) * (y_6**27) + 
            L0x20019926_f * (x**3) * (y_6**27) + 
            L0x20019928_f * (x**0) * (y_6**28) + 
            L0x2001992a_f * (x**1) * (y_6**28) + 
            L0x2001992c_f * (x**2) * (y_6**28) + 
            L0x2001992e_f * (x**3) * (y_6**28) + 
            L0x20019930_f * (x**0) * (y_6**29) + 
            L0x20019932_f * (x**1) * (y_6**29) + 
            L0x20019934_f * (x**2) * (y_6**29) + 
            L0x20019936_f * (x**3) * (y_6**29) + 
            L0x20019938_f * (x**0) * (y_6**30) + 
            L0x2001993a_f * (x**1) * (y_6**30) + 
            L0x2001993c_f * (x**2) * (y_6**30) + 
            L0x2001993e_f * (x**3) * (y_6**30) + 
            L0x20019940_f * (x**0) * (y_6**31) + 
            L0x20019942_f * (x**1) * (y_6**31) + 
            L0x20019944_f * (x**2) * (y_6**31) + 
            L0x20019946_f * (x**3) * (y_6**31) + 
            L0x20019948_f * (x**0) * (y_6**32) + 
            L0x2001994a_f * (x**1) * (y_6**32) + 
            L0x2001994c_f * (x**2) * (y_6**32) + 
            L0x2001994e_f * (x**3) * (y_6**32) + 
            L0x20019950_f * (x**0) * (y_6**33) + 
            L0x20019952_f * (x**1) * (y_6**33) + 
            L0x20019954_f * (x**2) * (y_6**33) + 
            L0x20019956_f * (x**3) * (y_6**33) + 
            L0x20019958_f * (x**0) * (y_6**34) + 
            L0x2001995a_f * (x**1) * (y_6**34) + 
            L0x2001995c_f * (x**2) * (y_6**34) + 
            L0x2001995e_f * (x**3) * (y_6**34) + 
            L0x20019960_f * (x**0) * (y_6**35) + 
            L0x20019962_f * (x**1) * (y_6**35) + 
            L0x20019964_f * (x**2) * (y_6**35) + 
            L0x20019966_f * (x**3) * (y_6**35) + 
            L0x20019968_f * (x**0) * (y_6**36) + 
            L0x2001996a_f * (x**1) * (y_6**36) + 
            L0x2001996c_f * (x**2) * (y_6**36) + 
            L0x2001996e_f * (x**3) * (y_6**36) + 
            L0x20019970_f * (x**0) * (y_6**37) + 
            L0x20019972_f * (x**1) * (y_6**37) + 
            L0x20019974_f * (x**2) * (y_6**37) + 
            L0x20019976_f * (x**3) * (y_6**37) + 
            L0x20019978_f * (x**0) * (y_6**38) + 
            L0x2001997a_f * (x**1) * (y_6**38) + 
            L0x2001997c_f * (x**2) * (y_6**38) + 
            L0x2001997e_f * (x**3) * (y_6**38) + 
            L0x20019980_f * (x**0) * (y_6**39) + 
            L0x20019982_f * (x**1) * (y_6**39) + 
            L0x20019984_f * (x**2) * (y_6**39) + 
            L0x20019986_f * (x**3) * (y_6**39) + 
            L0x20019988_f * (x**0) * (y_6**40) + 
            L0x2001998a_f * (x**1) * (y_6**40) + 
            L0x2001998c_f * (x**2) * (y_6**40) + 
            L0x2001998e_f * (x**3) * (y_6**40) + 
            L0x20019990_f * (x**0) * (y_6**41) + 
            L0x20019992_f * (x**1) * (y_6**41) + 
            L0x20019994_f * (x**2) * (y_6**41) + 
            L0x20019996_f * (x**3) * (y_6**41) + 
            L0x20019998_f * (x**0) * (y_6**42) + 
            L0x2001999a_f * (x**1) * (y_6**42) + 
            L0x2001999c_f * (x**2) * (y_6**42) + 
            L0x2001999e_f * (x**3) * (y_6**42) + 
            L0x200199a0_f * (x**0) * (y_6**43) + 
            L0x200199a2_f * (x**1) * (y_6**43) + 
            L0x200199a4_f * (x**2) * (y_6**43) + 
            L0x200199a6_f * (x**3) * (y_6**43) + 
            L0x200199a8_f * (x**0) * (y_6**44) + 
            L0x200199aa_f * (x**1) * (y_6**44) + 
            L0x200199ac_f * (x**2) * (y_6**44) + 
            L0x200199ae_f * (x**3) * (y_6**44) + 
            L0x200199b0_f * (x**0) * (y_6**45) + 
            L0x200199b2_f * (x**1) * (y_6**45) + 
            L0x200199b4_f * (x**2) * (y_6**45) + 
            L0x200199b6_f * (x**3) * (y_6**45) + 
            L0x200199b8_f * (x**0) * (y_6**46) + 
            L0x200199ba_f * (x**1) * (y_6**46) + 
            L0x200199bc_f * (x**2) * (y_6**46) + 
            L0x200199be_f * (x**3) * (y_6**46) + 
            L0x200199c0_f * (x**0) * (y_6**47) + 
            L0x200199c2_f * (x**1) * (y_6**47) + 
            L0x200199c4_f * (x**2) * (y_6**47) + 
            L0x200199c6_f * (x**3) * (y_6**47) + 
            L0x200199c8_f * (x**0) * (y_6**48) + 
            L0x200199ca_f * (x**1) * (y_6**48) + 
            L0x200199cc_f * (x**2) * (y_6**48) + 
            L0x200199ce_f * (x**3) * (y_6**48) + 
            L0x200199d0_f * (x**0) * (y_6**49) + 
            L0x200199d2_f * (x**1) * (y_6**49) + 
            L0x200199d4_f * (x**2) * (y_6**49) + 
            L0x200199d6_f * (x**3) * (y_6**49) + 
            L0x200199d8_f * (x**0) * (y_6**50) + 
            L0x200199da_f * (x**1) * (y_6**50) + 
            L0x200199dc_f * (x**2) * (y_6**50) + 
            L0x200199de_f * (x**3) * (y_6**50) + 
            L0x200199e0_f * (x**0) * (y_6**51) + 
            L0x200199e2_f * (x**1) * (y_6**51) + 
            L0x200199e4_f * (x**2) * (y_6**51) + 
            L0x200199e6_f * (x**3) * (y_6**51) + 
            L0x200199e8_f * (x**0) * (y_6**52) + 
            L0x200199ea_f * (x**1) * (y_6**52) + 
            L0x200199ec_f * (x**2) * (y_6**52) + 
            L0x200199ee_f * (x**3) * (y_6**52) + 
            L0x200199f0_f * (x**0) * (y_6**53) + 
            L0x200199f2_f * (x**1) * (y_6**53) + 
            L0x200199f4_f * (x**2) * (y_6**53) + 
            L0x200199f6_f * (x**3) * (y_6**53) + 
            L0x200199f8_f * (x**0) * (y_6**54) + 
            L0x200199fa_f * (x**1) * (y_6**54) + 
            L0x200199fc_f * (x**2) * (y_6**54) + 
            L0x200199fe_f * (x**3) * (y_6**54) + 
            L0x20019a00_f * (x**0) * (y_6**55) + 
            L0x20019a02_f * (x**1) * (y_6**55) + 
            L0x20019a04_f * (x**2) * (y_6**55) + 
            L0x20019a06_f * (x**3) * (y_6**55) + 
            L0x20019a08_f * (x**0) * (y_6**56) + 
            L0x20019a0a_f * (x**1) * (y_6**56) + 
            L0x20019a0c_f * (x**2) * (y_6**56) + 
            L0x20019a0e_f * (x**3) * (y_6**56) + 
            L0x20019a10_f * (x**0) * (y_6**57) + 
            L0x20019a12_f * (x**1) * (y_6**57) + 
            L0x20019a14_f * (x**2) * (y_6**57) + 
            L0x20019a16_f * (x**3) * (y_6**57) + 
            L0x20019a18_f * (x**0) * (y_6**58) + 
            L0x20019a1a_f * (x**1) * (y_6**58) + 
            L0x20019a1c_f * (x**2) * (y_6**58) + 
            L0x20019a1e_f * (x**3) * (y_6**58) + 
            L0x20019a20_f * (x**0) * (y_6**59) + 
            L0x20019a22_f * (x**1) * (y_6**59) + 
            L0x20019a24_f * (x**2) * (y_6**59) + 
            L0x20019a26_f * (x**3) * (y_6**59) + 
            L0x20019a28_f * (x**0) * (y_6**60) + 
            L0x20019a2a_f * (x**1) * (y_6**60) + 
            L0x20019a2c_f * (x**2) * (y_6**60) + 
            L0x20019a2e_f * (x**3) * (y_6**60) + 
            L0x20019a30_f * (x**0) * (y_6**61) + 
            L0x20019a32_f * (x**1) * (y_6**61) + 
            L0x20019a34_f * (x**2) * (y_6**61) + 
            L0x20019a36_f * (x**3) * (y_6**61) + 
            L0x20019a38_f * (x**0) * (y_6**62) + 
            L0x20019a3a_f * (x**1) * (y_6**62) + 
            L0x20019a3c_f * (x**2) * (y_6**62) + 
            L0x20019a3e_f * (x**3) * (y_6**62) + 
            L0x20019a40_f * (x**0) * (y_6**63) + 
            L0x20019a42_f * (x**1) * (y_6**63) + 
            L0x20019a44_f * (x**2) * (y_6**63) + 
            L0x20019a46_f * (x**3) * (y_6**63)
          )
          [25570049, x**4 - y_3_6 * 17500092, y_3_6**8 - 1]
  ] prove with [cuts [18]]
  &&
  true
;

cut (* 33 *)
  true && true;

(* slice 7 *)
cut (* 34 *)
  and [
    (* imm_poly_7 *)
    eqmod (2**32) * (imm_poly_7 * imm_poly_7)
          8 * (
            L0x20019848_f * (x**0) * (y_6**0) + 
            L0x2001984a_f * (x**1) * (y_6**0) + 
            L0x2001984c_f * (x**2) * (y_6**0) + 
            L0x2001984e_f * (x**3) * (y_6**0) + 
            L0x20019850_f * (x**0) * (y_6**1) + 
            L0x20019852_f * (x**1) * (y_6**1) + 
            L0x20019854_f * (x**2) * (y_6**1) + 
            L0x20019856_f * (x**3) * (y_6**1) + 
            L0x20019858_f * (x**0) * (y_6**2) + 
            L0x2001985a_f * (x**1) * (y_6**2) + 
            L0x2001985c_f * (x**2) * (y_6**2) + 
            L0x2001985e_f * (x**3) * (y_6**2) + 
            L0x20019860_f * (x**0) * (y_6**3) + 
            L0x20019862_f * (x**1) * (y_6**3) + 
            L0x20019864_f * (x**2) * (y_6**3) + 
            L0x20019866_f * (x**3) * (y_6**3) + 
            L0x20019868_f * (x**0) * (y_6**4) + 
            L0x2001986a_f * (x**1) * (y_6**4) + 
            L0x2001986c_f * (x**2) * (y_6**4) + 
            L0x2001986e_f * (x**3) * (y_6**4) + 
            L0x20019870_f * (x**0) * (y_6**5) + 
            L0x20019872_f * (x**1) * (y_6**5) + 
            L0x20019874_f * (x**2) * (y_6**5) + 
            L0x20019876_f * (x**3) * (y_6**5) + 
            L0x20019878_f * (x**0) * (y_6**6) + 
            L0x2001987a_f * (x**1) * (y_6**6) + 
            L0x2001987c_f * (x**2) * (y_6**6) + 
            L0x2001987e_f * (x**3) * (y_6**6) + 
            L0x20019880_f * (x**0) * (y_6**7) + 
            L0x20019882_f * (x**1) * (y_6**7) + 
            L0x20019884_f * (x**2) * (y_6**7) + 
            L0x20019886_f * (x**3) * (y_6**7) + 
            L0x20019888_f * (x**0) * (y_6**8) + 
            L0x2001988a_f * (x**1) * (y_6**8) + 
            L0x2001988c_f * (x**2) * (y_6**8) + 
            L0x2001988e_f * (x**3) * (y_6**8) + 
            L0x20019890_f * (x**0) * (y_6**9) + 
            L0x20019892_f * (x**1) * (y_6**9) + 
            L0x20019894_f * (x**2) * (y_6**9) + 
            L0x20019896_f * (x**3) * (y_6**9) + 
            L0x20019898_f * (x**0) * (y_6**10) + 
            L0x2001989a_f * (x**1) * (y_6**10) + 
            L0x2001989c_f * (x**2) * (y_6**10) + 
            L0x2001989e_f * (x**3) * (y_6**10) + 
            L0x200198a0_f * (x**0) * (y_6**11) + 
            L0x200198a2_f * (x**1) * (y_6**11) + 
            L0x200198a4_f * (x**2) * (y_6**11) + 
            L0x200198a6_f * (x**3) * (y_6**11) + 
            L0x200198a8_f * (x**0) * (y_6**12) + 
            L0x200198aa_f * (x**1) * (y_6**12) + 
            L0x200198ac_f * (x**2) * (y_6**12) + 
            L0x200198ae_f * (x**3) * (y_6**12) + 
            L0x200198b0_f * (x**0) * (y_6**13) + 
            L0x200198b2_f * (x**1) * (y_6**13) + 
            L0x200198b4_f * (x**2) * (y_6**13) + 
            L0x200198b6_f * (x**3) * (y_6**13) + 
            L0x200198b8_f * (x**0) * (y_6**14) + 
            L0x200198ba_f * (x**1) * (y_6**14) + 
            L0x200198bc_f * (x**2) * (y_6**14) + 
            L0x200198be_f * (x**3) * (y_6**14) + 
            L0x200198c0_f * (x**0) * (y_6**15) + 
            L0x200198c2_f * (x**1) * (y_6**15) + 
            L0x200198c4_f * (x**2) * (y_6**15) + 
            L0x200198c6_f * (x**3) * (y_6**15) + 
            L0x200198c8_f * (x**0) * (y_6**16) + 
            L0x200198ca_f * (x**1) * (y_6**16) + 
            L0x200198cc_f * (x**2) * (y_6**16) + 
            L0x200198ce_f * (x**3) * (y_6**16) + 
            L0x200198d0_f * (x**0) * (y_6**17) + 
            L0x200198d2_f * (x**1) * (y_6**17) + 
            L0x200198d4_f * (x**2) * (y_6**17) + 
            L0x200198d6_f * (x**3) * (y_6**17) + 
            L0x200198d8_f * (x**0) * (y_6**18) + 
            L0x200198da_f * (x**1) * (y_6**18) + 
            L0x200198dc_f * (x**2) * (y_6**18) + 
            L0x200198de_f * (x**3) * (y_6**18) + 
            L0x200198e0_f * (x**0) * (y_6**19) + 
            L0x200198e2_f * (x**1) * (y_6**19) + 
            L0x200198e4_f * (x**2) * (y_6**19) + 
            L0x200198e6_f * (x**3) * (y_6**19) + 
            L0x200198e8_f * (x**0) * (y_6**20) + 
            L0x200198ea_f * (x**1) * (y_6**20) + 
            L0x200198ec_f * (x**2) * (y_6**20) + 
            L0x200198ee_f * (x**3) * (y_6**20) + 
            L0x200198f0_f * (x**0) * (y_6**21) + 
            L0x200198f2_f * (x**1) * (y_6**21) + 
            L0x200198f4_f * (x**2) * (y_6**21) + 
            L0x200198f6_f * (x**3) * (y_6**21) + 
            L0x200198f8_f * (x**0) * (y_6**22) + 
            L0x200198fa_f * (x**1) * (y_6**22) + 
            L0x200198fc_f * (x**2) * (y_6**22) + 
            L0x200198fe_f * (x**3) * (y_6**22) + 
            L0x20019900_f * (x**0) * (y_6**23) + 
            L0x20019902_f * (x**1) * (y_6**23) + 
            L0x20019904_f * (x**2) * (y_6**23) + 
            L0x20019906_f * (x**3) * (y_6**23) + 
            L0x20019908_f * (x**0) * (y_6**24) + 
            L0x2001990a_f * (x**1) * (y_6**24) + 
            L0x2001990c_f * (x**2) * (y_6**24) + 
            L0x2001990e_f * (x**3) * (y_6**24) + 
            L0x20019910_f * (x**0) * (y_6**25) + 
            L0x20019912_f * (x**1) * (y_6**25) + 
            L0x20019914_f * (x**2) * (y_6**25) + 
            L0x20019916_f * (x**3) * (y_6**25) + 
            L0x20019918_f * (x**0) * (y_6**26) + 
            L0x2001991a_f * (x**1) * (y_6**26) + 
            L0x2001991c_f * (x**2) * (y_6**26) + 
            L0x2001991e_f * (x**3) * (y_6**26) + 
            L0x20019920_f * (x**0) * (y_6**27) + 
            L0x20019922_f * (x**1) * (y_6**27) + 
            L0x20019924_f * (x**2) * (y_6**27) + 
            L0x20019926_f * (x**3) * (y_6**27) + 
            L0x20019928_f * (x**0) * (y_6**28) + 
            L0x2001992a_f * (x**1) * (y_6**28) + 
            L0x2001992c_f * (x**2) * (y_6**28) + 
            L0x2001992e_f * (x**3) * (y_6**28) + 
            L0x20019930_f * (x**0) * (y_6**29) + 
            L0x20019932_f * (x**1) * (y_6**29) + 
            L0x20019934_f * (x**2) * (y_6**29) + 
            L0x20019936_f * (x**3) * (y_6**29) + 
            L0x20019938_f * (x**0) * (y_6**30) + 
            L0x2001993a_f * (x**1) * (y_6**30) + 
            L0x2001993c_f * (x**2) * (y_6**30) + 
            L0x2001993e_f * (x**3) * (y_6**30) + 
            L0x20019940_f * (x**0) * (y_6**31) + 
            L0x20019942_f * (x**1) * (y_6**31) + 
            L0x20019944_f * (x**2) * (y_6**31) + 
            L0x20019946_f * (x**3) * (y_6**31) + 
            L0x20019948_f * (x**0) * (y_6**32) + 
            L0x2001994a_f * (x**1) * (y_6**32) + 
            L0x2001994c_f * (x**2) * (y_6**32) + 
            L0x2001994e_f * (x**3) * (y_6**32) + 
            L0x20019950_f * (x**0) * (y_6**33) + 
            L0x20019952_f * (x**1) * (y_6**33) + 
            L0x20019954_f * (x**2) * (y_6**33) + 
            L0x20019956_f * (x**3) * (y_6**33) + 
            L0x20019958_f * (x**0) * (y_6**34) + 
            L0x2001995a_f * (x**1) * (y_6**34) + 
            L0x2001995c_f * (x**2) * (y_6**34) + 
            L0x2001995e_f * (x**3) * (y_6**34) + 
            L0x20019960_f * (x**0) * (y_6**35) + 
            L0x20019962_f * (x**1) * (y_6**35) + 
            L0x20019964_f * (x**2) * (y_6**35) + 
            L0x20019966_f * (x**3) * (y_6**35) + 
            L0x20019968_f * (x**0) * (y_6**36) + 
            L0x2001996a_f * (x**1) * (y_6**36) + 
            L0x2001996c_f * (x**2) * (y_6**36) + 
            L0x2001996e_f * (x**3) * (y_6**36) + 
            L0x20019970_f * (x**0) * (y_6**37) + 
            L0x20019972_f * (x**1) * (y_6**37) + 
            L0x20019974_f * (x**2) * (y_6**37) + 
            L0x20019976_f * (x**3) * (y_6**37) + 
            L0x20019978_f * (x**0) * (y_6**38) + 
            L0x2001997a_f * (x**1) * (y_6**38) + 
            L0x2001997c_f * (x**2) * (y_6**38) + 
            L0x2001997e_f * (x**3) * (y_6**38) + 
            L0x20019980_f * (x**0) * (y_6**39) + 
            L0x20019982_f * (x**1) * (y_6**39) + 
            L0x20019984_f * (x**2) * (y_6**39) + 
            L0x20019986_f * (x**3) * (y_6**39) + 
            L0x20019988_f * (x**0) * (y_6**40) + 
            L0x2001998a_f * (x**1) * (y_6**40) + 
            L0x2001998c_f * (x**2) * (y_6**40) + 
            L0x2001998e_f * (x**3) * (y_6**40) + 
            L0x20019990_f * (x**0) * (y_6**41) + 
            L0x20019992_f * (x**1) * (y_6**41) + 
            L0x20019994_f * (x**2) * (y_6**41) + 
            L0x20019996_f * (x**3) * (y_6**41) + 
            L0x20019998_f * (x**0) * (y_6**42) + 
            L0x2001999a_f * (x**1) * (y_6**42) + 
            L0x2001999c_f * (x**2) * (y_6**42) + 
            L0x2001999e_f * (x**3) * (y_6**42) + 
            L0x200199a0_f * (x**0) * (y_6**43) + 
            L0x200199a2_f * (x**1) * (y_6**43) + 
            L0x200199a4_f * (x**2) * (y_6**43) + 
            L0x200199a6_f * (x**3) * (y_6**43) + 
            L0x200199a8_f * (x**0) * (y_6**44) + 
            L0x200199aa_f * (x**1) * (y_6**44) + 
            L0x200199ac_f * (x**2) * (y_6**44) + 
            L0x200199ae_f * (x**3) * (y_6**44) + 
            L0x200199b0_f * (x**0) * (y_6**45) + 
            L0x200199b2_f * (x**1) * (y_6**45) + 
            L0x200199b4_f * (x**2) * (y_6**45) + 
            L0x200199b6_f * (x**3) * (y_6**45) + 
            L0x200199b8_f * (x**0) * (y_6**46) + 
            L0x200199ba_f * (x**1) * (y_6**46) + 
            L0x200199bc_f * (x**2) * (y_6**46) + 
            L0x200199be_f * (x**3) * (y_6**46) + 
            L0x200199c0_f * (x**0) * (y_6**47) + 
            L0x200199c2_f * (x**1) * (y_6**47) + 
            L0x200199c4_f * (x**2) * (y_6**47) + 
            L0x200199c6_f * (x**3) * (y_6**47) + 
            L0x200199c8_f * (x**0) * (y_6**48) + 
            L0x200199ca_f * (x**1) * (y_6**48) + 
            L0x200199cc_f * (x**2) * (y_6**48) + 
            L0x200199ce_f * (x**3) * (y_6**48) + 
            L0x200199d0_f * (x**0) * (y_6**49) + 
            L0x200199d2_f * (x**1) * (y_6**49) + 
            L0x200199d4_f * (x**2) * (y_6**49) + 
            L0x200199d6_f * (x**3) * (y_6**49) + 
            L0x200199d8_f * (x**0) * (y_6**50) + 
            L0x200199da_f * (x**1) * (y_6**50) + 
            L0x200199dc_f * (x**2) * (y_6**50) + 
            L0x200199de_f * (x**3) * (y_6**50) + 
            L0x200199e0_f * (x**0) * (y_6**51) + 
            L0x200199e2_f * (x**1) * (y_6**51) + 
            L0x200199e4_f * (x**2) * (y_6**51) + 
            L0x200199e6_f * (x**3) * (y_6**51) + 
            L0x200199e8_f * (x**0) * (y_6**52) + 
            L0x200199ea_f * (x**1) * (y_6**52) + 
            L0x200199ec_f * (x**2) * (y_6**52) + 
            L0x200199ee_f * (x**3) * (y_6**52) + 
            L0x200199f0_f * (x**0) * (y_6**53) + 
            L0x200199f2_f * (x**1) * (y_6**53) + 
            L0x200199f4_f * (x**2) * (y_6**53) + 
            L0x200199f6_f * (x**3) * (y_6**53) + 
            L0x200199f8_f * (x**0) * (y_6**54) + 
            L0x200199fa_f * (x**1) * (y_6**54) + 
            L0x200199fc_f * (x**2) * (y_6**54) + 
            L0x200199fe_f * (x**3) * (y_6**54) + 
            L0x20019a00_f * (x**0) * (y_6**55) + 
            L0x20019a02_f * (x**1) * (y_6**55) + 
            L0x20019a04_f * (x**2) * (y_6**55) + 
            L0x20019a06_f * (x**3) * (y_6**55) + 
            L0x20019a08_f * (x**0) * (y_6**56) + 
            L0x20019a0a_f * (x**1) * (y_6**56) + 
            L0x20019a0c_f * (x**2) * (y_6**56) + 
            L0x20019a0e_f * (x**3) * (y_6**56) + 
            L0x20019a10_f * (x**0) * (y_6**57) + 
            L0x20019a12_f * (x**1) * (y_6**57) + 
            L0x20019a14_f * (x**2) * (y_6**57) + 
            L0x20019a16_f * (x**3) * (y_6**57) + 
            L0x20019a18_f * (x**0) * (y_6**58) + 
            L0x20019a1a_f * (x**1) * (y_6**58) + 
            L0x20019a1c_f * (x**2) * (y_6**58) + 
            L0x20019a1e_f * (x**3) * (y_6**58) + 
            L0x20019a20_f * (x**0) * (y_6**59) + 
            L0x20019a22_f * (x**1) * (y_6**59) + 
            L0x20019a24_f * (x**2) * (y_6**59) + 
            L0x20019a26_f * (x**3) * (y_6**59) + 
            L0x20019a28_f * (x**0) * (y_6**60) + 
            L0x20019a2a_f * (x**1) * (y_6**60) + 
            L0x20019a2c_f * (x**2) * (y_6**60) + 
            L0x20019a2e_f * (x**3) * (y_6**60) + 
            L0x20019a30_f * (x**0) * (y_6**61) + 
            L0x20019a32_f * (x**1) * (y_6**61) + 
            L0x20019a34_f * (x**2) * (y_6**61) + 
            L0x20019a36_f * (x**3) * (y_6**61) + 
            L0x20019a38_f * (x**0) * (y_6**62) + 
            L0x20019a3a_f * (x**1) * (y_6**62) + 
            L0x20019a3c_f * (x**2) * (y_6**62) + 
            L0x20019a3e_f * (x**3) * (y_6**62) + 
            L0x20019a40_f * (x**0) * (y_6**63) + 
            L0x20019a42_f * (x**1) * (y_6**63) + 
            L0x20019a44_f * (x**2) * (y_6**63) + 
            L0x20019a46_f * (x**3) * (y_6**63)
          )
          [25570049, x**4 - y_3_7 * 6096206, y_3_7**8 - 1]
  ] prove with [cuts [18]]
  &&
  true
;

cut (* 35 *)
  true && true;

(* slice for q *)
cut (* 36 *)
  and [
    (* mod q *)
    eqmod L0x20019848_f L0x20019848 2**13,
    eqmod L0x2001984a_f L0x2001984a 2**13,
    eqmod L0x2001984c_f L0x2001984c 2**13,
    eqmod L0x2001984e_f L0x2001984e 2**13,
    eqmod L0x20019850_f L0x20019850 2**13,
    eqmod L0x20019852_f L0x20019852 2**13,
    eqmod L0x20019854_f L0x20019854 2**13,
    eqmod L0x20019856_f L0x20019856 2**13,
    eqmod L0x20019858_f L0x20019858 2**13,
    eqmod L0x2001985a_f L0x2001985a 2**13,
    eqmod L0x2001985c_f L0x2001985c 2**13,
    eqmod L0x2001985e_f L0x2001985e 2**13,
    eqmod L0x20019860_f L0x20019860 2**13,
    eqmod L0x20019862_f L0x20019862 2**13,
    eqmod L0x20019864_f L0x20019864 2**13,
    eqmod L0x20019866_f L0x20019866 2**13,
    eqmod L0x20019868_f L0x20019868 2**13,
    eqmod L0x2001986a_f L0x2001986a 2**13,
    eqmod L0x2001986c_f L0x2001986c 2**13,
    eqmod L0x2001986e_f L0x2001986e 2**13,
    eqmod L0x20019870_f L0x20019870 2**13,
    eqmod L0x20019872_f L0x20019872 2**13,
    eqmod L0x20019874_f L0x20019874 2**13,
    eqmod L0x20019876_f L0x20019876 2**13,
    eqmod L0x20019878_f L0x20019878 2**13,
    eqmod L0x2001987a_f L0x2001987a 2**13,
    eqmod L0x2001987c_f L0x2001987c 2**13,
    eqmod L0x2001987e_f L0x2001987e 2**13,
    eqmod L0x20019880_f L0x20019880 2**13,
    eqmod L0x20019882_f L0x20019882 2**13,
    eqmod L0x20019884_f L0x20019884 2**13,
    eqmod L0x20019886_f L0x20019886 2**13,
    eqmod L0x20019888_f L0x20019888 2**13,
    eqmod L0x2001988a_f L0x2001988a 2**13,
    eqmod L0x2001988c_f L0x2001988c 2**13,
    eqmod L0x2001988e_f L0x2001988e 2**13,
    eqmod L0x20019890_f L0x20019890 2**13,
    eqmod L0x20019892_f L0x20019892 2**13,
    eqmod L0x20019894_f L0x20019894 2**13,
    eqmod L0x20019896_f L0x20019896 2**13,
    eqmod L0x20019898_f L0x20019898 2**13,
    eqmod L0x2001989a_f L0x2001989a 2**13,
    eqmod L0x2001989c_f L0x2001989c 2**13,
    eqmod L0x2001989e_f L0x2001989e 2**13,
    eqmod L0x200198a0_f L0x200198a0 2**13,
    eqmod L0x200198a2_f L0x200198a2 2**13,
    eqmod L0x200198a4_f L0x200198a4 2**13,
    eqmod L0x200198a6_f L0x200198a6 2**13,
    eqmod L0x200198a8_f L0x200198a8 2**13,
    eqmod L0x200198aa_f L0x200198aa 2**13,
    eqmod L0x200198ac_f L0x200198ac 2**13,
    eqmod L0x200198ae_f L0x200198ae 2**13,
    eqmod L0x200198b0_f L0x200198b0 2**13,
    eqmod L0x200198b2_f L0x200198b2 2**13,
    eqmod L0x200198b4_f L0x200198b4 2**13,
    eqmod L0x200198b6_f L0x200198b6 2**13,
    eqmod L0x200198b8_f L0x200198b8 2**13,
    eqmod L0x200198ba_f L0x200198ba 2**13,
    eqmod L0x200198bc_f L0x200198bc 2**13,
    eqmod L0x200198be_f L0x200198be 2**13,
    eqmod L0x200198c0_f L0x200198c0 2**13,
    eqmod L0x200198c2_f L0x200198c2 2**13,
    eqmod L0x200198c4_f L0x200198c4 2**13,
    eqmod L0x200198c6_f L0x200198c6 2**13,
    eqmod L0x200198c8_f L0x200198c8 2**13,
    eqmod L0x200198ca_f L0x200198ca 2**13,
    eqmod L0x200198cc_f L0x200198cc 2**13,
    eqmod L0x200198ce_f L0x200198ce 2**13,
    eqmod L0x200198d0_f L0x200198d0 2**13,
    eqmod L0x200198d2_f L0x200198d2 2**13,
    eqmod L0x200198d4_f L0x200198d4 2**13,
    eqmod L0x200198d6_f L0x200198d6 2**13,
    eqmod L0x200198d8_f L0x200198d8 2**13,
    eqmod L0x200198da_f L0x200198da 2**13,
    eqmod L0x200198dc_f L0x200198dc 2**13,
    eqmod L0x200198de_f L0x200198de 2**13,
    eqmod L0x200198e0_f L0x200198e0 2**13,
    eqmod L0x200198e2_f L0x200198e2 2**13,
    eqmod L0x200198e4_f L0x200198e4 2**13,
    eqmod L0x200198e6_f L0x200198e6 2**13,
    eqmod L0x200198e8_f L0x200198e8 2**13,
    eqmod L0x200198ea_f L0x200198ea 2**13,
    eqmod L0x200198ec_f L0x200198ec 2**13,
    eqmod L0x200198ee_f L0x200198ee 2**13,
    eqmod L0x200198f0_f L0x200198f0 2**13,
    eqmod L0x200198f2_f L0x200198f2 2**13,
    eqmod L0x200198f4_f L0x200198f4 2**13,
    eqmod L0x200198f6_f L0x200198f6 2**13,
    eqmod L0x200198f8_f L0x200198f8 2**13,
    eqmod L0x200198fa_f L0x200198fa 2**13,
    eqmod L0x200198fc_f L0x200198fc 2**13,
    eqmod L0x200198fe_f L0x200198fe 2**13,
    eqmod L0x20019900_f L0x20019900 2**13,
    eqmod L0x20019902_f L0x20019902 2**13,
    eqmod L0x20019904_f L0x20019904 2**13,
    eqmod L0x20019906_f L0x20019906 2**13,
    eqmod L0x20019908_f L0x20019908 2**13,
    eqmod L0x2001990a_f L0x2001990a 2**13,
    eqmod L0x2001990c_f L0x2001990c 2**13,
    eqmod L0x2001990e_f L0x2001990e 2**13,
    eqmod L0x20019910_f L0x20019910 2**13,
    eqmod L0x20019912_f L0x20019912 2**13,
    eqmod L0x20019914_f L0x20019914 2**13,
    eqmod L0x20019916_f L0x20019916 2**13,
    eqmod L0x20019918_f L0x20019918 2**13,
    eqmod L0x2001991a_f L0x2001991a 2**13,
    eqmod L0x2001991c_f L0x2001991c 2**13,
    eqmod L0x2001991e_f L0x2001991e 2**13,
    eqmod L0x20019920_f L0x20019920 2**13,
    eqmod L0x20019922_f L0x20019922 2**13,
    eqmod L0x20019924_f L0x20019924 2**13,
    eqmod L0x20019926_f L0x20019926 2**13,
    eqmod L0x20019928_f L0x20019928 2**13,
    eqmod L0x2001992a_f L0x2001992a 2**13,
    eqmod L0x2001992c_f L0x2001992c 2**13,
    eqmod L0x2001992e_f L0x2001992e 2**13,
    eqmod L0x20019930_f L0x20019930 2**13,
    eqmod L0x20019932_f L0x20019932 2**13,
    eqmod L0x20019934_f L0x20019934 2**13,
    eqmod L0x20019936_f L0x20019936 2**13,
    eqmod L0x20019938_f L0x20019938 2**13,
    eqmod L0x2001993a_f L0x2001993a 2**13,
    eqmod L0x2001993c_f L0x2001993c 2**13,
    eqmod L0x2001993e_f L0x2001993e 2**13,
    eqmod L0x20019940_f L0x20019940 2**13,
    eqmod L0x20019942_f L0x20019942 2**13,
    eqmod L0x20019944_f L0x20019944 2**13,
    eqmod L0x20019946_f L0x20019946 2**13,
    eqmod L0x20019948_f L0x20019948 2**13,
    eqmod L0x2001994a_f L0x2001994a 2**13,
    eqmod L0x2001994c_f L0x2001994c 2**13,
    eqmod L0x2001994e_f L0x2001994e 2**13,
    eqmod L0x20019950_f L0x20019950 2**13,
    eqmod L0x20019952_f L0x20019952 2**13,
    eqmod L0x20019954_f L0x20019954 2**13,
    eqmod L0x20019956_f L0x20019956 2**13,
    eqmod L0x20019958_f L0x20019958 2**13,
    eqmod L0x2001995a_f L0x2001995a 2**13,
    eqmod L0x2001995c_f L0x2001995c 2**13,
    eqmod L0x2001995e_f L0x2001995e 2**13,
    eqmod L0x20019960_f L0x20019960 2**13,
    eqmod L0x20019962_f L0x20019962 2**13,
    eqmod L0x20019964_f L0x20019964 2**13,
    eqmod L0x20019966_f L0x20019966 2**13,
    eqmod L0x20019968_f L0x20019968 2**13,
    eqmod L0x2001996a_f L0x2001996a 2**13,
    eqmod L0x2001996c_f L0x2001996c 2**13,
    eqmod L0x2001996e_f L0x2001996e 2**13,
    eqmod L0x20019970_f L0x20019970 2**13,
    eqmod L0x20019972_f L0x20019972 2**13,
    eqmod L0x20019974_f L0x20019974 2**13,
    eqmod L0x20019976_f L0x20019976 2**13,
    eqmod L0x20019978_f L0x20019978 2**13,
    eqmod L0x2001997a_f L0x2001997a 2**13,
    eqmod L0x2001997c_f L0x2001997c 2**13,
    eqmod L0x2001997e_f L0x2001997e 2**13,
    eqmod L0x20019980_f L0x20019980 2**13,
    eqmod L0x20019982_f L0x20019982 2**13,
    eqmod L0x20019984_f L0x20019984 2**13,
    eqmod L0x20019986_f L0x20019986 2**13,
    eqmod L0x20019988_f L0x20019988 2**13,
    eqmod L0x2001998a_f L0x2001998a 2**13,
    eqmod L0x2001998c_f L0x2001998c 2**13,
    eqmod L0x2001998e_f L0x2001998e 2**13,
    eqmod L0x20019990_f L0x20019990 2**13,
    eqmod L0x20019992_f L0x20019992 2**13,
    eqmod L0x20019994_f L0x20019994 2**13,
    eqmod L0x20019996_f L0x20019996 2**13,
    eqmod L0x20019998_f L0x20019998 2**13,
    eqmod L0x2001999a_f L0x2001999a 2**13,
    eqmod L0x2001999c_f L0x2001999c 2**13,
    eqmod L0x2001999e_f L0x2001999e 2**13,
    eqmod L0x200199a0_f L0x200199a0 2**13,
    eqmod L0x200199a2_f L0x200199a2 2**13,
    eqmod L0x200199a4_f L0x200199a4 2**13,
    eqmod L0x200199a6_f L0x200199a6 2**13,
    eqmod L0x200199a8_f L0x200199a8 2**13,
    eqmod L0x200199aa_f L0x200199aa 2**13,
    eqmod L0x200199ac_f L0x200199ac 2**13,
    eqmod L0x200199ae_f L0x200199ae 2**13,
    eqmod L0x200199b0_f L0x200199b0 2**13,
    eqmod L0x200199b2_f L0x200199b2 2**13,
    eqmod L0x200199b4_f L0x200199b4 2**13,
    eqmod L0x200199b6_f L0x200199b6 2**13,
    eqmod L0x200199b8_f L0x200199b8 2**13,
    eqmod L0x200199ba_f L0x200199ba 2**13,
    eqmod L0x200199bc_f L0x200199bc 2**13,
    eqmod L0x200199be_f L0x200199be 2**13,
    eqmod L0x200199c0_f L0x200199c0 2**13,
    eqmod L0x200199c2_f L0x200199c2 2**13,
    eqmod L0x200199c4_f L0x200199c4 2**13,
    eqmod L0x200199c6_f L0x200199c6 2**13,
    eqmod L0x200199c8_f L0x200199c8 2**13,
    eqmod L0x200199ca_f L0x200199ca 2**13,
    eqmod L0x200199cc_f L0x200199cc 2**13,
    eqmod L0x200199ce_f L0x200199ce 2**13,
    eqmod L0x200199d0_f L0x200199d0 2**13,
    eqmod L0x200199d2_f L0x200199d2 2**13,
    eqmod L0x200199d4_f L0x200199d4 2**13,
    eqmod L0x200199d6_f L0x200199d6 2**13,
    eqmod L0x200199d8_f L0x200199d8 2**13,
    eqmod L0x200199da_f L0x200199da 2**13,
    eqmod L0x200199dc_f L0x200199dc 2**13,
    eqmod L0x200199de_f L0x200199de 2**13,
    eqmod L0x200199e0_f L0x200199e0 2**13,
    eqmod L0x200199e2_f L0x200199e2 2**13,
    eqmod L0x200199e4_f L0x200199e4 2**13,
    eqmod L0x200199e6_f L0x200199e6 2**13,
    eqmod L0x200199e8_f L0x200199e8 2**13,
    eqmod L0x200199ea_f L0x200199ea 2**13,
    eqmod L0x200199ec_f L0x200199ec 2**13,
    eqmod L0x200199ee_f L0x200199ee 2**13,
    eqmod L0x200199f0_f L0x200199f0 2**13,
    eqmod L0x200199f2_f L0x200199f2 2**13,
    eqmod L0x200199f4_f L0x200199f4 2**13,
    eqmod L0x200199f6_f L0x200199f6 2**13,
    eqmod L0x200199f8_f L0x200199f8 2**13,
    eqmod L0x200199fa_f L0x200199fa 2**13,
    eqmod L0x200199fc_f L0x200199fc 2**13,
    eqmod L0x200199fe_f L0x200199fe 2**13,
    eqmod L0x20019a00_f L0x20019a00 2**13,
    eqmod L0x20019a02_f L0x20019a02 2**13,
    eqmod L0x20019a04_f L0x20019a04 2**13,
    eqmod L0x20019a06_f L0x20019a06 2**13,
    eqmod L0x20019a08_f L0x20019a08 2**13,
    eqmod L0x20019a0a_f L0x20019a0a 2**13,
    eqmod L0x20019a0c_f L0x20019a0c 2**13,
    eqmod L0x20019a0e_f L0x20019a0e 2**13,
    eqmod L0x20019a10_f L0x20019a10 2**13,
    eqmod L0x20019a12_f L0x20019a12 2**13,
    eqmod L0x20019a14_f L0x20019a14 2**13,
    eqmod L0x20019a16_f L0x20019a16 2**13,
    eqmod L0x20019a18_f L0x20019a18 2**13,
    eqmod L0x20019a1a_f L0x20019a1a 2**13,
    eqmod L0x20019a1c_f L0x20019a1c 2**13,
    eqmod L0x20019a1e_f L0x20019a1e 2**13,
    eqmod L0x20019a20_f L0x20019a20 2**13,
    eqmod L0x20019a22_f L0x20019a22 2**13,
    eqmod L0x20019a24_f L0x20019a24 2**13,
    eqmod L0x20019a26_f L0x20019a26 2**13,
    eqmod L0x20019a28_f L0x20019a28 2**13,
    eqmod L0x20019a2a_f L0x20019a2a 2**13,
    eqmod L0x20019a2c_f L0x20019a2c 2**13,
    eqmod L0x20019a2e_f L0x20019a2e 2**13,
    eqmod L0x20019a30_f L0x20019a30 2**13,
    eqmod L0x20019a32_f L0x20019a32 2**13,
    eqmod L0x20019a34_f L0x20019a34 2**13,
    eqmod L0x20019a36_f L0x20019a36 2**13,
    eqmod L0x20019a38_f L0x20019a38 2**13,
    eqmod L0x20019a3a_f L0x20019a3a 2**13,
    eqmod L0x20019a3c_f L0x20019a3c 2**13,
    eqmod L0x20019a3e_f L0x20019a3e 2**13,
    eqmod L0x20019a40_f L0x20019a40 2**13,
    eqmod L0x20019a42_f L0x20019a42 2**13,
    eqmod L0x20019a44_f L0x20019a44 2**13,
    eqmod L0x20019a46_f L0x20019a46 2**13
  ] prove with [cuts [18]]
  &&
  true
;

(* === prove layer 0_1_2_3_4_5 separately === *)
cut (* 37 *)
  true && true;

(* slice 0 *)
cut (* 38 *)
  and [
    (* inp_poly_0 *)
    eqmod (2**32) * (inp_poly_0 * inp_poly_0)
          (
            L0x20019848_f * (x**0) * ((y_6)**0) + 
            L0x2001984a_f * (x**1) * ((y_6)**0) + 
            L0x2001984c_f * (x**2) * ((y_6)**0) + 
            L0x2001984e_f * (x**3) * ((y_6)**0) + 
            L0x20019850_f * (x**0) * ((y_6)**1) + 
            L0x20019852_f * (x**1) * ((y_6)**1) + 
            L0x20019854_f * (x**2) * ((y_6)**1) + 
            L0x20019856_f * (x**3) * ((y_6)**1) + 
            L0x20019858_f * (x**0) * ((y_6)**2) + 
            L0x2001985a_f * (x**1) * ((y_6)**2) + 
            L0x2001985c_f * (x**2) * ((y_6)**2) + 
            L0x2001985e_f * (x**3) * ((y_6)**2) + 
            L0x20019860_f * (x**0) * ((y_6)**3) + 
            L0x20019862_f * (x**1) * ((y_6)**3) + 
            L0x20019864_f * (x**2) * ((y_6)**3) + 
            L0x20019866_f * (x**3) * ((y_6)**3) + 
            L0x20019868_f * (x**0) * ((y_6)**4) + 
            L0x2001986a_f * (x**1) * ((y_6)**4) + 
            L0x2001986c_f * (x**2) * ((y_6)**4) + 
            L0x2001986e_f * (x**3) * ((y_6)**4) + 
            L0x20019870_f * (x**0) * ((y_6)**5) + 
            L0x20019872_f * (x**1) * ((y_6)**5) + 
            L0x20019874_f * (x**2) * ((y_6)**5) + 
            L0x20019876_f * (x**3) * ((y_6)**5) + 
            L0x20019878_f * (x**0) * ((y_6)**6) + 
            L0x2001987a_f * (x**1) * ((y_6)**6) + 
            L0x2001987c_f * (x**2) * ((y_6)**6) + 
            L0x2001987e_f * (x**3) * ((y_6)**6) + 
            L0x20019880_f * (x**0) * ((y_6)**7) + 
            L0x20019882_f * (x**1) * ((y_6)**7) + 
            L0x20019884_f * (x**2) * ((y_6)**7) + 
            L0x20019886_f * (x**3) * ((y_6)**7) + 
            L0x20019888_f * (x**0) * ((y_6)**8) + 
            L0x2001988a_f * (x**1) * ((y_6)**8) + 
            L0x2001988c_f * (x**2) * ((y_6)**8) + 
            L0x2001988e_f * (x**3) * ((y_6)**8) + 
            L0x20019890_f * (x**0) * ((y_6)**9) + 
            L0x20019892_f * (x**1) * ((y_6)**9) + 
            L0x20019894_f * (x**2) * ((y_6)**9) + 
            L0x20019896_f * (x**3) * ((y_6)**9) + 
            L0x20019898_f * (x**0) * ((y_6)**10) + 
            L0x2001989a_f * (x**1) * ((y_6)**10) + 
            L0x2001989c_f * (x**2) * ((y_6)**10) + 
            L0x2001989e_f * (x**3) * ((y_6)**10) + 
            L0x200198a0_f * (x**0) * ((y_6)**11) + 
            L0x200198a2_f * (x**1) * ((y_6)**11) + 
            L0x200198a4_f * (x**2) * ((y_6)**11) + 
            L0x200198a6_f * (x**3) * ((y_6)**11) + 
            L0x200198a8_f * (x**0) * ((y_6)**12) + 
            L0x200198aa_f * (x**1) * ((y_6)**12) + 
            L0x200198ac_f * (x**2) * ((y_6)**12) + 
            L0x200198ae_f * (x**3) * ((y_6)**12) + 
            L0x200198b0_f * (x**0) * ((y_6)**13) + 
            L0x200198b2_f * (x**1) * ((y_6)**13) + 
            L0x200198b4_f * (x**2) * ((y_6)**13) + 
            L0x200198b6_f * (x**3) * ((y_6)**13) + 
            L0x200198b8_f * (x**0) * ((y_6)**14) + 
            L0x200198ba_f * (x**1) * ((y_6)**14) + 
            L0x200198bc_f * (x**2) * ((y_6)**14) + 
            L0x200198be_f * (x**3) * ((y_6)**14) + 
            L0x200198c0_f * (x**0) * ((y_6)**15) + 
            L0x200198c2_f * (x**1) * ((y_6)**15) + 
            L0x200198c4_f * (x**2) * ((y_6)**15) + 
            L0x200198c6_f * (x**3) * ((y_6)**15) + 
            L0x200198c8_f * (x**0) * ((y_6)**16) + 
            L0x200198ca_f * (x**1) * ((y_6)**16) + 
            L0x200198cc_f * (x**2) * ((y_6)**16) + 
            L0x200198ce_f * (x**3) * ((y_6)**16) + 
            L0x200198d0_f * (x**0) * ((y_6)**17) + 
            L0x200198d2_f * (x**1) * ((y_6)**17) + 
            L0x200198d4_f * (x**2) * ((y_6)**17) + 
            L0x200198d6_f * (x**3) * ((y_6)**17) + 
            L0x200198d8_f * (x**0) * ((y_6)**18) + 
            L0x200198da_f * (x**1) * ((y_6)**18) + 
            L0x200198dc_f * (x**2) * ((y_6)**18) + 
            L0x200198de_f * (x**3) * ((y_6)**18) + 
            L0x200198e0_f * (x**0) * ((y_6)**19) + 
            L0x200198e2_f * (x**1) * ((y_6)**19) + 
            L0x200198e4_f * (x**2) * ((y_6)**19) + 
            L0x200198e6_f * (x**3) * ((y_6)**19) + 
            L0x200198e8_f * (x**0) * ((y_6)**20) + 
            L0x200198ea_f * (x**1) * ((y_6)**20) + 
            L0x200198ec_f * (x**2) * ((y_6)**20) + 
            L0x200198ee_f * (x**3) * ((y_6)**20) + 
            L0x200198f0_f * (x**0) * ((y_6)**21) + 
            L0x200198f2_f * (x**1) * ((y_6)**21) + 
            L0x200198f4_f * (x**2) * ((y_6)**21) + 
            L0x200198f6_f * (x**3) * ((y_6)**21) + 
            L0x200198f8_f * (x**0) * ((y_6)**22) + 
            L0x200198fa_f * (x**1) * ((y_6)**22) + 
            L0x200198fc_f * (x**2) * ((y_6)**22) + 
            L0x200198fe_f * (x**3) * ((y_6)**22) + 
            L0x20019900_f * (x**0) * ((y_6)**23) + 
            L0x20019902_f * (x**1) * ((y_6)**23) + 
            L0x20019904_f * (x**2) * ((y_6)**23) + 
            L0x20019906_f * (x**3) * ((y_6)**23) + 
            L0x20019908_f * (x**0) * ((y_6)**24) + 
            L0x2001990a_f * (x**1) * ((y_6)**24) + 
            L0x2001990c_f * (x**2) * ((y_6)**24) + 
            L0x2001990e_f * (x**3) * ((y_6)**24) + 
            L0x20019910_f * (x**0) * ((y_6)**25) + 
            L0x20019912_f * (x**1) * ((y_6)**25) + 
            L0x20019914_f * (x**2) * ((y_6)**25) + 
            L0x20019916_f * (x**3) * ((y_6)**25) + 
            L0x20019918_f * (x**0) * ((y_6)**26) + 
            L0x2001991a_f * (x**1) * ((y_6)**26) + 
            L0x2001991c_f * (x**2) * ((y_6)**26) + 
            L0x2001991e_f * (x**3) * ((y_6)**26) + 
            L0x20019920_f * (x**0) * ((y_6)**27) + 
            L0x20019922_f * (x**1) * ((y_6)**27) + 
            L0x20019924_f * (x**2) * ((y_6)**27) + 
            L0x20019926_f * (x**3) * ((y_6)**27) + 
            L0x20019928_f * (x**0) * ((y_6)**28) + 
            L0x2001992a_f * (x**1) * ((y_6)**28) + 
            L0x2001992c_f * (x**2) * ((y_6)**28) + 
            L0x2001992e_f * (x**3) * ((y_6)**28) + 
            L0x20019930_f * (x**0) * ((y_6)**29) + 
            L0x20019932_f * (x**1) * ((y_6)**29) + 
            L0x20019934_f * (x**2) * ((y_6)**29) + 
            L0x20019936_f * (x**3) * ((y_6)**29) + 
            L0x20019938_f * (x**0) * ((y_6)**30) + 
            L0x2001993a_f * (x**1) * ((y_6)**30) + 
            L0x2001993c_f * (x**2) * ((y_6)**30) + 
            L0x2001993e_f * (x**3) * ((y_6)**30) + 
            L0x20019940_f * (x**0) * ((y_6)**31) + 
            L0x20019942_f * (x**1) * ((y_6)**31) + 
            L0x20019944_f * (x**2) * ((y_6)**31) + 
            L0x20019946_f * (x**3) * ((y_6)**31) + 
            L0x20019948_f * (x**0) * ((y_6)**32) + 
            L0x2001994a_f * (x**1) * ((y_6)**32) + 
            L0x2001994c_f * (x**2) * ((y_6)**32) + 
            L0x2001994e_f * (x**3) * ((y_6)**32) + 
            L0x20019950_f * (x**0) * ((y_6)**33) + 
            L0x20019952_f * (x**1) * ((y_6)**33) + 
            L0x20019954_f * (x**2) * ((y_6)**33) + 
            L0x20019956_f * (x**3) * ((y_6)**33) + 
            L0x20019958_f * (x**0) * ((y_6)**34) + 
            L0x2001995a_f * (x**1) * ((y_6)**34) + 
            L0x2001995c_f * (x**2) * ((y_6)**34) + 
            L0x2001995e_f * (x**3) * ((y_6)**34) + 
            L0x20019960_f * (x**0) * ((y_6)**35) + 
            L0x20019962_f * (x**1) * ((y_6)**35) + 
            L0x20019964_f * (x**2) * ((y_6)**35) + 
            L0x20019966_f * (x**3) * ((y_6)**35) + 
            L0x20019968_f * (x**0) * ((y_6)**36) + 
            L0x2001996a_f * (x**1) * ((y_6)**36) + 
            L0x2001996c_f * (x**2) * ((y_6)**36) + 
            L0x2001996e_f * (x**3) * ((y_6)**36) + 
            L0x20019970_f * (x**0) * ((y_6)**37) + 
            L0x20019972_f * (x**1) * ((y_6)**37) + 
            L0x20019974_f * (x**2) * ((y_6)**37) + 
            L0x20019976_f * (x**3) * ((y_6)**37) + 
            L0x20019978_f * (x**0) * ((y_6)**38) + 
            L0x2001997a_f * (x**1) * ((y_6)**38) + 
            L0x2001997c_f * (x**2) * ((y_6)**38) + 
            L0x2001997e_f * (x**3) * ((y_6)**38) + 
            L0x20019980_f * (x**0) * ((y_6)**39) + 
            L0x20019982_f * (x**1) * ((y_6)**39) + 
            L0x20019984_f * (x**2) * ((y_6)**39) + 
            L0x20019986_f * (x**3) * ((y_6)**39) + 
            L0x20019988_f * (x**0) * ((y_6)**40) + 
            L0x2001998a_f * (x**1) * ((y_6)**40) + 
            L0x2001998c_f * (x**2) * ((y_6)**40) + 
            L0x2001998e_f * (x**3) * ((y_6)**40) + 
            L0x20019990_f * (x**0) * ((y_6)**41) + 
            L0x20019992_f * (x**1) * ((y_6)**41) + 
            L0x20019994_f * (x**2) * ((y_6)**41) + 
            L0x20019996_f * (x**3) * ((y_6)**41) + 
            L0x20019998_f * (x**0) * ((y_6)**42) + 
            L0x2001999a_f * (x**1) * ((y_6)**42) + 
            L0x2001999c_f * (x**2) * ((y_6)**42) + 
            L0x2001999e_f * (x**3) * ((y_6)**42) + 
            L0x200199a0_f * (x**0) * ((y_6)**43) + 
            L0x200199a2_f * (x**1) * ((y_6)**43) + 
            L0x200199a4_f * (x**2) * ((y_6)**43) + 
            L0x200199a6_f * (x**3) * ((y_6)**43) + 
            L0x200199a8_f * (x**0) * ((y_6)**44) + 
            L0x200199aa_f * (x**1) * ((y_6)**44) + 
            L0x200199ac_f * (x**2) * ((y_6)**44) + 
            L0x200199ae_f * (x**3) * ((y_6)**44) + 
            L0x200199b0_f * (x**0) * ((y_6)**45) + 
            L0x200199b2_f * (x**1) * ((y_6)**45) + 
            L0x200199b4_f * (x**2) * ((y_6)**45) + 
            L0x200199b6_f * (x**3) * ((y_6)**45) + 
            L0x200199b8_f * (x**0) * ((y_6)**46) + 
            L0x200199ba_f * (x**1) * ((y_6)**46) + 
            L0x200199bc_f * (x**2) * ((y_6)**46) + 
            L0x200199be_f * (x**3) * ((y_6)**46) + 
            L0x200199c0_f * (x**0) * ((y_6)**47) + 
            L0x200199c2_f * (x**1) * ((y_6)**47) + 
            L0x200199c4_f * (x**2) * ((y_6)**47) + 
            L0x200199c6_f * (x**3) * ((y_6)**47) + 
            L0x200199c8_f * (x**0) * ((y_6)**48) + 
            L0x200199ca_f * (x**1) * ((y_6)**48) + 
            L0x200199cc_f * (x**2) * ((y_6)**48) + 
            L0x200199ce_f * (x**3) * ((y_6)**48) + 
            L0x200199d0_f * (x**0) * ((y_6)**49) + 
            L0x200199d2_f * (x**1) * ((y_6)**49) + 
            L0x200199d4_f * (x**2) * ((y_6)**49) + 
            L0x200199d6_f * (x**3) * ((y_6)**49) + 
            L0x200199d8_f * (x**0) * ((y_6)**50) + 
            L0x200199da_f * (x**1) * ((y_6)**50) + 
            L0x200199dc_f * (x**2) * ((y_6)**50) + 
            L0x200199de_f * (x**3) * ((y_6)**50) + 
            L0x200199e0_f * (x**0) * ((y_6)**51) + 
            L0x200199e2_f * (x**1) * ((y_6)**51) + 
            L0x200199e4_f * (x**2) * ((y_6)**51) + 
            L0x200199e6_f * (x**3) * ((y_6)**51) + 
            L0x200199e8_f * (x**0) * ((y_6)**52) + 
            L0x200199ea_f * (x**1) * ((y_6)**52) + 
            L0x200199ec_f * (x**2) * ((y_6)**52) + 
            L0x200199ee_f * (x**3) * ((y_6)**52) + 
            L0x200199f0_f * (x**0) * ((y_6)**53) + 
            L0x200199f2_f * (x**1) * ((y_6)**53) + 
            L0x200199f4_f * (x**2) * ((y_6)**53) + 
            L0x200199f6_f * (x**3) * ((y_6)**53) + 
            L0x200199f8_f * (x**0) * ((y_6)**54) + 
            L0x200199fa_f * (x**1) * ((y_6)**54) + 
            L0x200199fc_f * (x**2) * ((y_6)**54) + 
            L0x200199fe_f * (x**3) * ((y_6)**54) + 
            L0x20019a00_f * (x**0) * ((y_6)**55) + 
            L0x20019a02_f * (x**1) * ((y_6)**55) + 
            L0x20019a04_f * (x**2) * ((y_6)**55) + 
            L0x20019a06_f * (x**3) * ((y_6)**55) + 
            L0x20019a08_f * (x**0) * ((y_6)**56) + 
            L0x20019a0a_f * (x**1) * ((y_6)**56) + 
            L0x20019a0c_f * (x**2) * ((y_6)**56) + 
            L0x20019a0e_f * (x**3) * ((y_6)**56) + 
            L0x20019a10_f * (x**0) * ((y_6)**57) + 
            L0x20019a12_f * (x**1) * ((y_6)**57) + 
            L0x20019a14_f * (x**2) * ((y_6)**57) + 
            L0x20019a16_f * (x**3) * ((y_6)**57) + 
            L0x20019a18_f * (x**0) * ((y_6)**58) + 
            L0x20019a1a_f * (x**1) * ((y_6)**58) + 
            L0x20019a1c_f * (x**2) * ((y_6)**58) + 
            L0x20019a1e_f * (x**3) * ((y_6)**58) + 
            L0x20019a20_f * (x**0) * ((y_6)**59) + 
            L0x20019a22_f * (x**1) * ((y_6)**59) + 
            L0x20019a24_f * (x**2) * ((y_6)**59) + 
            L0x20019a26_f * (x**3) * ((y_6)**59) + 
            L0x20019a28_f * (x**0) * ((y_6)**60) + 
            L0x20019a2a_f * (x**1) * ((y_6)**60) + 
            L0x20019a2c_f * (x**2) * ((y_6)**60) + 
            L0x20019a2e_f * (x**3) * ((y_6)**60) + 
            L0x20019a30_f * (x**0) * ((y_6)**61) + 
            L0x20019a32_f * (x**1) * ((y_6)**61) + 
            L0x20019a34_f * (x**2) * ((y_6)**61) + 
            L0x20019a36_f * (x**3) * ((y_6)**61) + 
            L0x20019a38_f * (x**0) * ((y_6)**62) + 
            L0x20019a3a_f * (x**1) * ((y_6)**62) + 
            L0x20019a3c_f * (x**2) * ((y_6)**62) + 
            L0x20019a3e_f * (x**3) * ((y_6)**62) + 
            L0x20019a40_f * (x**0) * ((y_6)**63) + 
            L0x20019a42_f * (x**1) * ((y_6)**63) + 
            L0x20019a44_f * (x**2) * ((y_6)**63) + 
            L0x20019a46_f * (x**3) * ((y_6)**63)
          )
          [25570049, x**4 - y_0_00 * 6103972, y_0_00 - 1],
    (* inp_poly_1 *)
    eqmod (2**32) * (inp_poly_1 * inp_poly_1)
          (
            L0x20019848_f * (x**0) * ((y_6)**0) + 
            L0x2001984a_f * (x**1) * ((y_6)**0) + 
            L0x2001984c_f * (x**2) * ((y_6)**0) + 
            L0x2001984e_f * (x**3) * ((y_6)**0) + 
            L0x20019850_f * (x**0) * ((y_6)**1) + 
            L0x20019852_f * (x**1) * ((y_6)**1) + 
            L0x20019854_f * (x**2) * ((y_6)**1) + 
            L0x20019856_f * (x**3) * ((y_6)**1) + 
            L0x20019858_f * (x**0) * ((y_6)**2) + 
            L0x2001985a_f * (x**1) * ((y_6)**2) + 
            L0x2001985c_f * (x**2) * ((y_6)**2) + 
            L0x2001985e_f * (x**3) * ((y_6)**2) + 
            L0x20019860_f * (x**0) * ((y_6)**3) + 
            L0x20019862_f * (x**1) * ((y_6)**3) + 
            L0x20019864_f * (x**2) * ((y_6)**3) + 
            L0x20019866_f * (x**3) * ((y_6)**3) + 
            L0x20019868_f * (x**0) * ((y_6)**4) + 
            L0x2001986a_f * (x**1) * ((y_6)**4) + 
            L0x2001986c_f * (x**2) * ((y_6)**4) + 
            L0x2001986e_f * (x**3) * ((y_6)**4) + 
            L0x20019870_f * (x**0) * ((y_6)**5) + 
            L0x20019872_f * (x**1) * ((y_6)**5) + 
            L0x20019874_f * (x**2) * ((y_6)**5) + 
            L0x20019876_f * (x**3) * ((y_6)**5) + 
            L0x20019878_f * (x**0) * ((y_6)**6) + 
            L0x2001987a_f * (x**1) * ((y_6)**6) + 
            L0x2001987c_f * (x**2) * ((y_6)**6) + 
            L0x2001987e_f * (x**3) * ((y_6)**6) + 
            L0x20019880_f * (x**0) * ((y_6)**7) + 
            L0x20019882_f * (x**1) * ((y_6)**7) + 
            L0x20019884_f * (x**2) * ((y_6)**7) + 
            L0x20019886_f * (x**3) * ((y_6)**7) + 
            L0x20019888_f * (x**0) * ((y_6)**8) + 
            L0x2001988a_f * (x**1) * ((y_6)**8) + 
            L0x2001988c_f * (x**2) * ((y_6)**8) + 
            L0x2001988e_f * (x**3) * ((y_6)**8) + 
            L0x20019890_f * (x**0) * ((y_6)**9) + 
            L0x20019892_f * (x**1) * ((y_6)**9) + 
            L0x20019894_f * (x**2) * ((y_6)**9) + 
            L0x20019896_f * (x**3) * ((y_6)**9) + 
            L0x20019898_f * (x**0) * ((y_6)**10) + 
            L0x2001989a_f * (x**1) * ((y_6)**10) + 
            L0x2001989c_f * (x**2) * ((y_6)**10) + 
            L0x2001989e_f * (x**3) * ((y_6)**10) + 
            L0x200198a0_f * (x**0) * ((y_6)**11) + 
            L0x200198a2_f * (x**1) * ((y_6)**11) + 
            L0x200198a4_f * (x**2) * ((y_6)**11) + 
            L0x200198a6_f * (x**3) * ((y_6)**11) + 
            L0x200198a8_f * (x**0) * ((y_6)**12) + 
            L0x200198aa_f * (x**1) * ((y_6)**12) + 
            L0x200198ac_f * (x**2) * ((y_6)**12) + 
            L0x200198ae_f * (x**3) * ((y_6)**12) + 
            L0x200198b0_f * (x**0) * ((y_6)**13) + 
            L0x200198b2_f * (x**1) * ((y_6)**13) + 
            L0x200198b4_f * (x**2) * ((y_6)**13) + 
            L0x200198b6_f * (x**3) * ((y_6)**13) + 
            L0x200198b8_f * (x**0) * ((y_6)**14) + 
            L0x200198ba_f * (x**1) * ((y_6)**14) + 
            L0x200198bc_f * (x**2) * ((y_6)**14) + 
            L0x200198be_f * (x**3) * ((y_6)**14) + 
            L0x200198c0_f * (x**0) * ((y_6)**15) + 
            L0x200198c2_f * (x**1) * ((y_6)**15) + 
            L0x200198c4_f * (x**2) * ((y_6)**15) + 
            L0x200198c6_f * (x**3) * ((y_6)**15) + 
            L0x200198c8_f * (x**0) * ((y_6)**16) + 
            L0x200198ca_f * (x**1) * ((y_6)**16) + 
            L0x200198cc_f * (x**2) * ((y_6)**16) + 
            L0x200198ce_f * (x**3) * ((y_6)**16) + 
            L0x200198d0_f * (x**0) * ((y_6)**17) + 
            L0x200198d2_f * (x**1) * ((y_6)**17) + 
            L0x200198d4_f * (x**2) * ((y_6)**17) + 
            L0x200198d6_f * (x**3) * ((y_6)**17) + 
            L0x200198d8_f * (x**0) * ((y_6)**18) + 
            L0x200198da_f * (x**1) * ((y_6)**18) + 
            L0x200198dc_f * (x**2) * ((y_6)**18) + 
            L0x200198de_f * (x**3) * ((y_6)**18) + 
            L0x200198e0_f * (x**0) * ((y_6)**19) + 
            L0x200198e2_f * (x**1) * ((y_6)**19) + 
            L0x200198e4_f * (x**2) * ((y_6)**19) + 
            L0x200198e6_f * (x**3) * ((y_6)**19) + 
            L0x200198e8_f * (x**0) * ((y_6)**20) + 
            L0x200198ea_f * (x**1) * ((y_6)**20) + 
            L0x200198ec_f * (x**2) * ((y_6)**20) + 
            L0x200198ee_f * (x**3) * ((y_6)**20) + 
            L0x200198f0_f * (x**0) * ((y_6)**21) + 
            L0x200198f2_f * (x**1) * ((y_6)**21) + 
            L0x200198f4_f * (x**2) * ((y_6)**21) + 
            L0x200198f6_f * (x**3) * ((y_6)**21) + 
            L0x200198f8_f * (x**0) * ((y_6)**22) + 
            L0x200198fa_f * (x**1) * ((y_6)**22) + 
            L0x200198fc_f * (x**2) * ((y_6)**22) + 
            L0x200198fe_f * (x**3) * ((y_6)**22) + 
            L0x20019900_f * (x**0) * ((y_6)**23) + 
            L0x20019902_f * (x**1) * ((y_6)**23) + 
            L0x20019904_f * (x**2) * ((y_6)**23) + 
            L0x20019906_f * (x**3) * ((y_6)**23) + 
            L0x20019908_f * (x**0) * ((y_6)**24) + 
            L0x2001990a_f * (x**1) * ((y_6)**24) + 
            L0x2001990c_f * (x**2) * ((y_6)**24) + 
            L0x2001990e_f * (x**3) * ((y_6)**24) + 
            L0x20019910_f * (x**0) * ((y_6)**25) + 
            L0x20019912_f * (x**1) * ((y_6)**25) + 
            L0x20019914_f * (x**2) * ((y_6)**25) + 
            L0x20019916_f * (x**3) * ((y_6)**25) + 
            L0x20019918_f * (x**0) * ((y_6)**26) + 
            L0x2001991a_f * (x**1) * ((y_6)**26) + 
            L0x2001991c_f * (x**2) * ((y_6)**26) + 
            L0x2001991e_f * (x**3) * ((y_6)**26) + 
            L0x20019920_f * (x**0) * ((y_6)**27) + 
            L0x20019922_f * (x**1) * ((y_6)**27) + 
            L0x20019924_f * (x**2) * ((y_6)**27) + 
            L0x20019926_f * (x**3) * ((y_6)**27) + 
            L0x20019928_f * (x**0) * ((y_6)**28) + 
            L0x2001992a_f * (x**1) * ((y_6)**28) + 
            L0x2001992c_f * (x**2) * ((y_6)**28) + 
            L0x2001992e_f * (x**3) * ((y_6)**28) + 
            L0x20019930_f * (x**0) * ((y_6)**29) + 
            L0x20019932_f * (x**1) * ((y_6)**29) + 
            L0x20019934_f * (x**2) * ((y_6)**29) + 
            L0x20019936_f * (x**3) * ((y_6)**29) + 
            L0x20019938_f * (x**0) * ((y_6)**30) + 
            L0x2001993a_f * (x**1) * ((y_6)**30) + 
            L0x2001993c_f * (x**2) * ((y_6)**30) + 
            L0x2001993e_f * (x**3) * ((y_6)**30) + 
            L0x20019940_f * (x**0) * ((y_6)**31) + 
            L0x20019942_f * (x**1) * ((y_6)**31) + 
            L0x20019944_f * (x**2) * ((y_6)**31) + 
            L0x20019946_f * (x**3) * ((y_6)**31) + 
            L0x20019948_f * (x**0) * ((y_6)**32) + 
            L0x2001994a_f * (x**1) * ((y_6)**32) + 
            L0x2001994c_f * (x**2) * ((y_6)**32) + 
            L0x2001994e_f * (x**3) * ((y_6)**32) + 
            L0x20019950_f * (x**0) * ((y_6)**33) + 
            L0x20019952_f * (x**1) * ((y_6)**33) + 
            L0x20019954_f * (x**2) * ((y_6)**33) + 
            L0x20019956_f * (x**3) * ((y_6)**33) + 
            L0x20019958_f * (x**0) * ((y_6)**34) + 
            L0x2001995a_f * (x**1) * ((y_6)**34) + 
            L0x2001995c_f * (x**2) * ((y_6)**34) + 
            L0x2001995e_f * (x**3) * ((y_6)**34) + 
            L0x20019960_f * (x**0) * ((y_6)**35) + 
            L0x20019962_f * (x**1) * ((y_6)**35) + 
            L0x20019964_f * (x**2) * ((y_6)**35) + 
            L0x20019966_f * (x**3) * ((y_6)**35) + 
            L0x20019968_f * (x**0) * ((y_6)**36) + 
            L0x2001996a_f * (x**1) * ((y_6)**36) + 
            L0x2001996c_f * (x**2) * ((y_6)**36) + 
            L0x2001996e_f * (x**3) * ((y_6)**36) + 
            L0x20019970_f * (x**0) * ((y_6)**37) + 
            L0x20019972_f * (x**1) * ((y_6)**37) + 
            L0x20019974_f * (x**2) * ((y_6)**37) + 
            L0x20019976_f * (x**3) * ((y_6)**37) + 
            L0x20019978_f * (x**0) * ((y_6)**38) + 
            L0x2001997a_f * (x**1) * ((y_6)**38) + 
            L0x2001997c_f * (x**2) * ((y_6)**38) + 
            L0x2001997e_f * (x**3) * ((y_6)**38) + 
            L0x20019980_f * (x**0) * ((y_6)**39) + 
            L0x20019982_f * (x**1) * ((y_6)**39) + 
            L0x20019984_f * (x**2) * ((y_6)**39) + 
            L0x20019986_f * (x**3) * ((y_6)**39) + 
            L0x20019988_f * (x**0) * ((y_6)**40) + 
            L0x2001998a_f * (x**1) * ((y_6)**40) + 
            L0x2001998c_f * (x**2) * ((y_6)**40) + 
            L0x2001998e_f * (x**3) * ((y_6)**40) + 
            L0x20019990_f * (x**0) * ((y_6)**41) + 
            L0x20019992_f * (x**1) * ((y_6)**41) + 
            L0x20019994_f * (x**2) * ((y_6)**41) + 
            L0x20019996_f * (x**3) * ((y_6)**41) + 
            L0x20019998_f * (x**0) * ((y_6)**42) + 
            L0x2001999a_f * (x**1) * ((y_6)**42) + 
            L0x2001999c_f * (x**2) * ((y_6)**42) + 
            L0x2001999e_f * (x**3) * ((y_6)**42) + 
            L0x200199a0_f * (x**0) * ((y_6)**43) + 
            L0x200199a2_f * (x**1) * ((y_6)**43) + 
            L0x200199a4_f * (x**2) * ((y_6)**43) + 
            L0x200199a6_f * (x**3) * ((y_6)**43) + 
            L0x200199a8_f * (x**0) * ((y_6)**44) + 
            L0x200199aa_f * (x**1) * ((y_6)**44) + 
            L0x200199ac_f * (x**2) * ((y_6)**44) + 
            L0x200199ae_f * (x**3) * ((y_6)**44) + 
            L0x200199b0_f * (x**0) * ((y_6)**45) + 
            L0x200199b2_f * (x**1) * ((y_6)**45) + 
            L0x200199b4_f * (x**2) * ((y_6)**45) + 
            L0x200199b6_f * (x**3) * ((y_6)**45) + 
            L0x200199b8_f * (x**0) * ((y_6)**46) + 
            L0x200199ba_f * (x**1) * ((y_6)**46) + 
            L0x200199bc_f * (x**2) * ((y_6)**46) + 
            L0x200199be_f * (x**3) * ((y_6)**46) + 
            L0x200199c0_f * (x**0) * ((y_6)**47) + 
            L0x200199c2_f * (x**1) * ((y_6)**47) + 
            L0x200199c4_f * (x**2) * ((y_6)**47) + 
            L0x200199c6_f * (x**3) * ((y_6)**47) + 
            L0x200199c8_f * (x**0) * ((y_6)**48) + 
            L0x200199ca_f * (x**1) * ((y_6)**48) + 
            L0x200199cc_f * (x**2) * ((y_6)**48) + 
            L0x200199ce_f * (x**3) * ((y_6)**48) + 
            L0x200199d0_f * (x**0) * ((y_6)**49) + 
            L0x200199d2_f * (x**1) * ((y_6)**49) + 
            L0x200199d4_f * (x**2) * ((y_6)**49) + 
            L0x200199d6_f * (x**3) * ((y_6)**49) + 
            L0x200199d8_f * (x**0) * ((y_6)**50) + 
            L0x200199da_f * (x**1) * ((y_6)**50) + 
            L0x200199dc_f * (x**2) * ((y_6)**50) + 
            L0x200199de_f * (x**3) * ((y_6)**50) + 
            L0x200199e0_f * (x**0) * ((y_6)**51) + 
            L0x200199e2_f * (x**1) * ((y_6)**51) + 
            L0x200199e4_f * (x**2) * ((y_6)**51) + 
            L0x200199e6_f * (x**3) * ((y_6)**51) + 
            L0x200199e8_f * (x**0) * ((y_6)**52) + 
            L0x200199ea_f * (x**1) * ((y_6)**52) + 
            L0x200199ec_f * (x**2) * ((y_6)**52) + 
            L0x200199ee_f * (x**3) * ((y_6)**52) + 
            L0x200199f0_f * (x**0) * ((y_6)**53) + 
            L0x200199f2_f * (x**1) * ((y_6)**53) + 
            L0x200199f4_f * (x**2) * ((y_6)**53) + 
            L0x200199f6_f * (x**3) * ((y_6)**53) + 
            L0x200199f8_f * (x**0) * ((y_6)**54) + 
            L0x200199fa_f * (x**1) * ((y_6)**54) + 
            L0x200199fc_f * (x**2) * ((y_6)**54) + 
            L0x200199fe_f * (x**3) * ((y_6)**54) + 
            L0x20019a00_f * (x**0) * ((y_6)**55) + 
            L0x20019a02_f * (x**1) * ((y_6)**55) + 
            L0x20019a04_f * (x**2) * ((y_6)**55) + 
            L0x20019a06_f * (x**3) * ((y_6)**55) + 
            L0x20019a08_f * (x**0) * ((y_6)**56) + 
            L0x20019a0a_f * (x**1) * ((y_6)**56) + 
            L0x20019a0c_f * (x**2) * ((y_6)**56) + 
            L0x20019a0e_f * (x**3) * ((y_6)**56) + 
            L0x20019a10_f * (x**0) * ((y_6)**57) + 
            L0x20019a12_f * (x**1) * ((y_6)**57) + 
            L0x20019a14_f * (x**2) * ((y_6)**57) + 
            L0x20019a16_f * (x**3) * ((y_6)**57) + 
            L0x20019a18_f * (x**0) * ((y_6)**58) + 
            L0x20019a1a_f * (x**1) * ((y_6)**58) + 
            L0x20019a1c_f * (x**2) * ((y_6)**58) + 
            L0x20019a1e_f * (x**3) * ((y_6)**58) + 
            L0x20019a20_f * (x**0) * ((y_6)**59) + 
            L0x20019a22_f * (x**1) * ((y_6)**59) + 
            L0x20019a24_f * (x**2) * ((y_6)**59) + 
            L0x20019a26_f * (x**3) * ((y_6)**59) + 
            L0x20019a28_f * (x**0) * ((y_6)**60) + 
            L0x20019a2a_f * (x**1) * ((y_6)**60) + 
            L0x20019a2c_f * (x**2) * ((y_6)**60) + 
            L0x20019a2e_f * (x**3) * ((y_6)**60) + 
            L0x20019a30_f * (x**0) * ((y_6)**61) + 
            L0x20019a32_f * (x**1) * ((y_6)**61) + 
            L0x20019a34_f * (x**2) * ((y_6)**61) + 
            L0x20019a36_f * (x**3) * ((y_6)**61) + 
            L0x20019a38_f * (x**0) * ((y_6)**62) + 
            L0x20019a3a_f * (x**1) * ((y_6)**62) + 
            L0x20019a3c_f * (x**2) * ((y_6)**62) + 
            L0x20019a3e_f * (x**3) * ((y_6)**62) + 
            L0x20019a40_f * (x**0) * ((y_6)**63) + 
            L0x20019a42_f * (x**1) * ((y_6)**63) + 
            L0x20019a44_f * (x**2) * ((y_6)**63) + 
            L0x20019a46_f * (x**3) * ((y_6)**63)
          )
          [25570049, x**4 - y_0_01 * 19466077, y_0_01 - 1],
    (* inp_poly_2 *)
    eqmod (2**32) * (inp_poly_2 * inp_poly_2)
          (
            L0x20019848_f * (x**0) * ((y_6)**0) + 
            L0x2001984a_f * (x**1) * ((y_6)**0) + 
            L0x2001984c_f * (x**2) * ((y_6)**0) + 
            L0x2001984e_f * (x**3) * ((y_6)**0) + 
            L0x20019850_f * (x**0) * ((y_6)**1) + 
            L0x20019852_f * (x**1) * ((y_6)**1) + 
            L0x20019854_f * (x**2) * ((y_6)**1) + 
            L0x20019856_f * (x**3) * ((y_6)**1) + 
            L0x20019858_f * (x**0) * ((y_6)**2) + 
            L0x2001985a_f * (x**1) * ((y_6)**2) + 
            L0x2001985c_f * (x**2) * ((y_6)**2) + 
            L0x2001985e_f * (x**3) * ((y_6)**2) + 
            L0x20019860_f * (x**0) * ((y_6)**3) + 
            L0x20019862_f * (x**1) * ((y_6)**3) + 
            L0x20019864_f * (x**2) * ((y_6)**3) + 
            L0x20019866_f * (x**3) * ((y_6)**3) + 
            L0x20019868_f * (x**0) * ((y_6)**4) + 
            L0x2001986a_f * (x**1) * ((y_6)**4) + 
            L0x2001986c_f * (x**2) * ((y_6)**4) + 
            L0x2001986e_f * (x**3) * ((y_6)**4) + 
            L0x20019870_f * (x**0) * ((y_6)**5) + 
            L0x20019872_f * (x**1) * ((y_6)**5) + 
            L0x20019874_f * (x**2) * ((y_6)**5) + 
            L0x20019876_f * (x**3) * ((y_6)**5) + 
            L0x20019878_f * (x**0) * ((y_6)**6) + 
            L0x2001987a_f * (x**1) * ((y_6)**6) + 
            L0x2001987c_f * (x**2) * ((y_6)**6) + 
            L0x2001987e_f * (x**3) * ((y_6)**6) + 
            L0x20019880_f * (x**0) * ((y_6)**7) + 
            L0x20019882_f * (x**1) * ((y_6)**7) + 
            L0x20019884_f * (x**2) * ((y_6)**7) + 
            L0x20019886_f * (x**3) * ((y_6)**7) + 
            L0x20019888_f * (x**0) * ((y_6)**8) + 
            L0x2001988a_f * (x**1) * ((y_6)**8) + 
            L0x2001988c_f * (x**2) * ((y_6)**8) + 
            L0x2001988e_f * (x**3) * ((y_6)**8) + 
            L0x20019890_f * (x**0) * ((y_6)**9) + 
            L0x20019892_f * (x**1) * ((y_6)**9) + 
            L0x20019894_f * (x**2) * ((y_6)**9) + 
            L0x20019896_f * (x**3) * ((y_6)**9) + 
            L0x20019898_f * (x**0) * ((y_6)**10) + 
            L0x2001989a_f * (x**1) * ((y_6)**10) + 
            L0x2001989c_f * (x**2) * ((y_6)**10) + 
            L0x2001989e_f * (x**3) * ((y_6)**10) + 
            L0x200198a0_f * (x**0) * ((y_6)**11) + 
            L0x200198a2_f * (x**1) * ((y_6)**11) + 
            L0x200198a4_f * (x**2) * ((y_6)**11) + 
            L0x200198a6_f * (x**3) * ((y_6)**11) + 
            L0x200198a8_f * (x**0) * ((y_6)**12) + 
            L0x200198aa_f * (x**1) * ((y_6)**12) + 
            L0x200198ac_f * (x**2) * ((y_6)**12) + 
            L0x200198ae_f * (x**3) * ((y_6)**12) + 
            L0x200198b0_f * (x**0) * ((y_6)**13) + 
            L0x200198b2_f * (x**1) * ((y_6)**13) + 
            L0x200198b4_f * (x**2) * ((y_6)**13) + 
            L0x200198b6_f * (x**3) * ((y_6)**13) + 
            L0x200198b8_f * (x**0) * ((y_6)**14) + 
            L0x200198ba_f * (x**1) * ((y_6)**14) + 
            L0x200198bc_f * (x**2) * ((y_6)**14) + 
            L0x200198be_f * (x**3) * ((y_6)**14) + 
            L0x200198c0_f * (x**0) * ((y_6)**15) + 
            L0x200198c2_f * (x**1) * ((y_6)**15) + 
            L0x200198c4_f * (x**2) * ((y_6)**15) + 
            L0x200198c6_f * (x**3) * ((y_6)**15) + 
            L0x200198c8_f * (x**0) * ((y_6)**16) + 
            L0x200198ca_f * (x**1) * ((y_6)**16) + 
            L0x200198cc_f * (x**2) * ((y_6)**16) + 
            L0x200198ce_f * (x**3) * ((y_6)**16) + 
            L0x200198d0_f * (x**0) * ((y_6)**17) + 
            L0x200198d2_f * (x**1) * ((y_6)**17) + 
            L0x200198d4_f * (x**2) * ((y_6)**17) + 
            L0x200198d6_f * (x**3) * ((y_6)**17) + 
            L0x200198d8_f * (x**0) * ((y_6)**18) + 
            L0x200198da_f * (x**1) * ((y_6)**18) + 
            L0x200198dc_f * (x**2) * ((y_6)**18) + 
            L0x200198de_f * (x**3) * ((y_6)**18) + 
            L0x200198e0_f * (x**0) * ((y_6)**19) + 
            L0x200198e2_f * (x**1) * ((y_6)**19) + 
            L0x200198e4_f * (x**2) * ((y_6)**19) + 
            L0x200198e6_f * (x**3) * ((y_6)**19) + 
            L0x200198e8_f * (x**0) * ((y_6)**20) + 
            L0x200198ea_f * (x**1) * ((y_6)**20) + 
            L0x200198ec_f * (x**2) * ((y_6)**20) + 
            L0x200198ee_f * (x**3) * ((y_6)**20) + 
            L0x200198f0_f * (x**0) * ((y_6)**21) + 
            L0x200198f2_f * (x**1) * ((y_6)**21) + 
            L0x200198f4_f * (x**2) * ((y_6)**21) + 
            L0x200198f6_f * (x**3) * ((y_6)**21) + 
            L0x200198f8_f * (x**0) * ((y_6)**22) + 
            L0x200198fa_f * (x**1) * ((y_6)**22) + 
            L0x200198fc_f * (x**2) * ((y_6)**22) + 
            L0x200198fe_f * (x**3) * ((y_6)**22) + 
            L0x20019900_f * (x**0) * ((y_6)**23) + 
            L0x20019902_f * (x**1) * ((y_6)**23) + 
            L0x20019904_f * (x**2) * ((y_6)**23) + 
            L0x20019906_f * (x**3) * ((y_6)**23) + 
            L0x20019908_f * (x**0) * ((y_6)**24) + 
            L0x2001990a_f * (x**1) * ((y_6)**24) + 
            L0x2001990c_f * (x**2) * ((y_6)**24) + 
            L0x2001990e_f * (x**3) * ((y_6)**24) + 
            L0x20019910_f * (x**0) * ((y_6)**25) + 
            L0x20019912_f * (x**1) * ((y_6)**25) + 
            L0x20019914_f * (x**2) * ((y_6)**25) + 
            L0x20019916_f * (x**3) * ((y_6)**25) + 
            L0x20019918_f * (x**0) * ((y_6)**26) + 
            L0x2001991a_f * (x**1) * ((y_6)**26) + 
            L0x2001991c_f * (x**2) * ((y_6)**26) + 
            L0x2001991e_f * (x**3) * ((y_6)**26) + 
            L0x20019920_f * (x**0) * ((y_6)**27) + 
            L0x20019922_f * (x**1) * ((y_6)**27) + 
            L0x20019924_f * (x**2) * ((y_6)**27) + 
            L0x20019926_f * (x**3) * ((y_6)**27) + 
            L0x20019928_f * (x**0) * ((y_6)**28) + 
            L0x2001992a_f * (x**1) * ((y_6)**28) + 
            L0x2001992c_f * (x**2) * ((y_6)**28) + 
            L0x2001992e_f * (x**3) * ((y_6)**28) + 
            L0x20019930_f * (x**0) * ((y_6)**29) + 
            L0x20019932_f * (x**1) * ((y_6)**29) + 
            L0x20019934_f * (x**2) * ((y_6)**29) + 
            L0x20019936_f * (x**3) * ((y_6)**29) + 
            L0x20019938_f * (x**0) * ((y_6)**30) + 
            L0x2001993a_f * (x**1) * ((y_6)**30) + 
            L0x2001993c_f * (x**2) * ((y_6)**30) + 
            L0x2001993e_f * (x**3) * ((y_6)**30) + 
            L0x20019940_f * (x**0) * ((y_6)**31) + 
            L0x20019942_f * (x**1) * ((y_6)**31) + 
            L0x20019944_f * (x**2) * ((y_6)**31) + 
            L0x20019946_f * (x**3) * ((y_6)**31) + 
            L0x20019948_f * (x**0) * ((y_6)**32) + 
            L0x2001994a_f * (x**1) * ((y_6)**32) + 
            L0x2001994c_f * (x**2) * ((y_6)**32) + 
            L0x2001994e_f * (x**3) * ((y_6)**32) + 
            L0x20019950_f * (x**0) * ((y_6)**33) + 
            L0x20019952_f * (x**1) * ((y_6)**33) + 
            L0x20019954_f * (x**2) * ((y_6)**33) + 
            L0x20019956_f * (x**3) * ((y_6)**33) + 
            L0x20019958_f * (x**0) * ((y_6)**34) + 
            L0x2001995a_f * (x**1) * ((y_6)**34) + 
            L0x2001995c_f * (x**2) * ((y_6)**34) + 
            L0x2001995e_f * (x**3) * ((y_6)**34) + 
            L0x20019960_f * (x**0) * ((y_6)**35) + 
            L0x20019962_f * (x**1) * ((y_6)**35) + 
            L0x20019964_f * (x**2) * ((y_6)**35) + 
            L0x20019966_f * (x**3) * ((y_6)**35) + 
            L0x20019968_f * (x**0) * ((y_6)**36) + 
            L0x2001996a_f * (x**1) * ((y_6)**36) + 
            L0x2001996c_f * (x**2) * ((y_6)**36) + 
            L0x2001996e_f * (x**3) * ((y_6)**36) + 
            L0x20019970_f * (x**0) * ((y_6)**37) + 
            L0x20019972_f * (x**1) * ((y_6)**37) + 
            L0x20019974_f * (x**2) * ((y_6)**37) + 
            L0x20019976_f * (x**3) * ((y_6)**37) + 
            L0x20019978_f * (x**0) * ((y_6)**38) + 
            L0x2001997a_f * (x**1) * ((y_6)**38) + 
            L0x2001997c_f * (x**2) * ((y_6)**38) + 
            L0x2001997e_f * (x**3) * ((y_6)**38) + 
            L0x20019980_f * (x**0) * ((y_6)**39) + 
            L0x20019982_f * (x**1) * ((y_6)**39) + 
            L0x20019984_f * (x**2) * ((y_6)**39) + 
            L0x20019986_f * (x**3) * ((y_6)**39) + 
            L0x20019988_f * (x**0) * ((y_6)**40) + 
            L0x2001998a_f * (x**1) * ((y_6)**40) + 
            L0x2001998c_f * (x**2) * ((y_6)**40) + 
            L0x2001998e_f * (x**3) * ((y_6)**40) + 
            L0x20019990_f * (x**0) * ((y_6)**41) + 
            L0x20019992_f * (x**1) * ((y_6)**41) + 
            L0x20019994_f * (x**2) * ((y_6)**41) + 
            L0x20019996_f * (x**3) * ((y_6)**41) + 
            L0x20019998_f * (x**0) * ((y_6)**42) + 
            L0x2001999a_f * (x**1) * ((y_6)**42) + 
            L0x2001999c_f * (x**2) * ((y_6)**42) + 
            L0x2001999e_f * (x**3) * ((y_6)**42) + 
            L0x200199a0_f * (x**0) * ((y_6)**43) + 
            L0x200199a2_f * (x**1) * ((y_6)**43) + 
            L0x200199a4_f * (x**2) * ((y_6)**43) + 
            L0x200199a6_f * (x**3) * ((y_6)**43) + 
            L0x200199a8_f * (x**0) * ((y_6)**44) + 
            L0x200199aa_f * (x**1) * ((y_6)**44) + 
            L0x200199ac_f * (x**2) * ((y_6)**44) + 
            L0x200199ae_f * (x**3) * ((y_6)**44) + 
            L0x200199b0_f * (x**0) * ((y_6)**45) + 
            L0x200199b2_f * (x**1) * ((y_6)**45) + 
            L0x200199b4_f * (x**2) * ((y_6)**45) + 
            L0x200199b6_f * (x**3) * ((y_6)**45) + 
            L0x200199b8_f * (x**0) * ((y_6)**46) + 
            L0x200199ba_f * (x**1) * ((y_6)**46) + 
            L0x200199bc_f * (x**2) * ((y_6)**46) + 
            L0x200199be_f * (x**3) * ((y_6)**46) + 
            L0x200199c0_f * (x**0) * ((y_6)**47) + 
            L0x200199c2_f * (x**1) * ((y_6)**47) + 
            L0x200199c4_f * (x**2) * ((y_6)**47) + 
            L0x200199c6_f * (x**3) * ((y_6)**47) + 
            L0x200199c8_f * (x**0) * ((y_6)**48) + 
            L0x200199ca_f * (x**1) * ((y_6)**48) + 
            L0x200199cc_f * (x**2) * ((y_6)**48) + 
            L0x200199ce_f * (x**3) * ((y_6)**48) + 
            L0x200199d0_f * (x**0) * ((y_6)**49) + 
            L0x200199d2_f * (x**1) * ((y_6)**49) + 
            L0x200199d4_f * (x**2) * ((y_6)**49) + 
            L0x200199d6_f * (x**3) * ((y_6)**49) + 
            L0x200199d8_f * (x**0) * ((y_6)**50) + 
            L0x200199da_f * (x**1) * ((y_6)**50) + 
            L0x200199dc_f * (x**2) * ((y_6)**50) + 
            L0x200199de_f * (x**3) * ((y_6)**50) + 
            L0x200199e0_f * (x**0) * ((y_6)**51) + 
            L0x200199e2_f * (x**1) * ((y_6)**51) + 
            L0x200199e4_f * (x**2) * ((y_6)**51) + 
            L0x200199e6_f * (x**3) * ((y_6)**51) + 
            L0x200199e8_f * (x**0) * ((y_6)**52) + 
            L0x200199ea_f * (x**1) * ((y_6)**52) + 
            L0x200199ec_f * (x**2) * ((y_6)**52) + 
            L0x200199ee_f * (x**3) * ((y_6)**52) + 
            L0x200199f0_f * (x**0) * ((y_6)**53) + 
            L0x200199f2_f * (x**1) * ((y_6)**53) + 
            L0x200199f4_f * (x**2) * ((y_6)**53) + 
            L0x200199f6_f * (x**3) * ((y_6)**53) + 
            L0x200199f8_f * (x**0) * ((y_6)**54) + 
            L0x200199fa_f * (x**1) * ((y_6)**54) + 
            L0x200199fc_f * (x**2) * ((y_6)**54) + 
            L0x200199fe_f * (x**3) * ((y_6)**54) + 
            L0x20019a00_f * (x**0) * ((y_6)**55) + 
            L0x20019a02_f * (x**1) * ((y_6)**55) + 
            L0x20019a04_f * (x**2) * ((y_6)**55) + 
            L0x20019a06_f * (x**3) * ((y_6)**55) + 
            L0x20019a08_f * (x**0) * ((y_6)**56) + 
            L0x20019a0a_f * (x**1) * ((y_6)**56) + 
            L0x20019a0c_f * (x**2) * ((y_6)**56) + 
            L0x20019a0e_f * (x**3) * ((y_6)**56) + 
            L0x20019a10_f * (x**0) * ((y_6)**57) + 
            L0x20019a12_f * (x**1) * ((y_6)**57) + 
            L0x20019a14_f * (x**2) * ((y_6)**57) + 
            L0x20019a16_f * (x**3) * ((y_6)**57) + 
            L0x20019a18_f * (x**0) * ((y_6)**58) + 
            L0x20019a1a_f * (x**1) * ((y_6)**58) + 
            L0x20019a1c_f * (x**2) * ((y_6)**58) + 
            L0x20019a1e_f * (x**3) * ((y_6)**58) + 
            L0x20019a20_f * (x**0) * ((y_6)**59) + 
            L0x20019a22_f * (x**1) * ((y_6)**59) + 
            L0x20019a24_f * (x**2) * ((y_6)**59) + 
            L0x20019a26_f * (x**3) * ((y_6)**59) + 
            L0x20019a28_f * (x**0) * ((y_6)**60) + 
            L0x20019a2a_f * (x**1) * ((y_6)**60) + 
            L0x20019a2c_f * (x**2) * ((y_6)**60) + 
            L0x20019a2e_f * (x**3) * ((y_6)**60) + 
            L0x20019a30_f * (x**0) * ((y_6)**61) + 
            L0x20019a32_f * (x**1) * ((y_6)**61) + 
            L0x20019a34_f * (x**2) * ((y_6)**61) + 
            L0x20019a36_f * (x**3) * ((y_6)**61) + 
            L0x20019a38_f * (x**0) * ((y_6)**62) + 
            L0x20019a3a_f * (x**1) * ((y_6)**62) + 
            L0x20019a3c_f * (x**2) * ((y_6)**62) + 
            L0x20019a3e_f * (x**3) * ((y_6)**62) + 
            L0x20019a40_f * (x**0) * ((y_6)**63) + 
            L0x20019a42_f * (x**1) * ((y_6)**63) + 
            L0x20019a44_f * (x**2) * ((y_6)**63) + 
            L0x20019a46_f * (x**3) * ((y_6)**63)
          )
          [25570049, x**4 - y_0_02 * 830930, y_0_02 - 1],
    (* inp_poly_3 *)
    eqmod (2**32) * (inp_poly_3 * inp_poly_3)
          (
            L0x20019848_f * (x**0) * ((y_6)**0) + 
            L0x2001984a_f * (x**1) * ((y_6)**0) + 
            L0x2001984c_f * (x**2) * ((y_6)**0) + 
            L0x2001984e_f * (x**3) * ((y_6)**0) + 
            L0x20019850_f * (x**0) * ((y_6)**1) + 
            L0x20019852_f * (x**1) * ((y_6)**1) + 
            L0x20019854_f * (x**2) * ((y_6)**1) + 
            L0x20019856_f * (x**3) * ((y_6)**1) + 
            L0x20019858_f * (x**0) * ((y_6)**2) + 
            L0x2001985a_f * (x**1) * ((y_6)**2) + 
            L0x2001985c_f * (x**2) * ((y_6)**2) + 
            L0x2001985e_f * (x**3) * ((y_6)**2) + 
            L0x20019860_f * (x**0) * ((y_6)**3) + 
            L0x20019862_f * (x**1) * ((y_6)**3) + 
            L0x20019864_f * (x**2) * ((y_6)**3) + 
            L0x20019866_f * (x**3) * ((y_6)**3) + 
            L0x20019868_f * (x**0) * ((y_6)**4) + 
            L0x2001986a_f * (x**1) * ((y_6)**4) + 
            L0x2001986c_f * (x**2) * ((y_6)**4) + 
            L0x2001986e_f * (x**3) * ((y_6)**4) + 
            L0x20019870_f * (x**0) * ((y_6)**5) + 
            L0x20019872_f * (x**1) * ((y_6)**5) + 
            L0x20019874_f * (x**2) * ((y_6)**5) + 
            L0x20019876_f * (x**3) * ((y_6)**5) + 
            L0x20019878_f * (x**0) * ((y_6)**6) + 
            L0x2001987a_f * (x**1) * ((y_6)**6) + 
            L0x2001987c_f * (x**2) * ((y_6)**6) + 
            L0x2001987e_f * (x**3) * ((y_6)**6) + 
            L0x20019880_f * (x**0) * ((y_6)**7) + 
            L0x20019882_f * (x**1) * ((y_6)**7) + 
            L0x20019884_f * (x**2) * ((y_6)**7) + 
            L0x20019886_f * (x**3) * ((y_6)**7) + 
            L0x20019888_f * (x**0) * ((y_6)**8) + 
            L0x2001988a_f * (x**1) * ((y_6)**8) + 
            L0x2001988c_f * (x**2) * ((y_6)**8) + 
            L0x2001988e_f * (x**3) * ((y_6)**8) + 
            L0x20019890_f * (x**0) * ((y_6)**9) + 
            L0x20019892_f * (x**1) * ((y_6)**9) + 
            L0x20019894_f * (x**2) * ((y_6)**9) + 
            L0x20019896_f * (x**3) * ((y_6)**9) + 
            L0x20019898_f * (x**0) * ((y_6)**10) + 
            L0x2001989a_f * (x**1) * ((y_6)**10) + 
            L0x2001989c_f * (x**2) * ((y_6)**10) + 
            L0x2001989e_f * (x**3) * ((y_6)**10) + 
            L0x200198a0_f * (x**0) * ((y_6)**11) + 
            L0x200198a2_f * (x**1) * ((y_6)**11) + 
            L0x200198a4_f * (x**2) * ((y_6)**11) + 
            L0x200198a6_f * (x**3) * ((y_6)**11) + 
            L0x200198a8_f * (x**0) * ((y_6)**12) + 
            L0x200198aa_f * (x**1) * ((y_6)**12) + 
            L0x200198ac_f * (x**2) * ((y_6)**12) + 
            L0x200198ae_f * (x**3) * ((y_6)**12) + 
            L0x200198b0_f * (x**0) * ((y_6)**13) + 
            L0x200198b2_f * (x**1) * ((y_6)**13) + 
            L0x200198b4_f * (x**2) * ((y_6)**13) + 
            L0x200198b6_f * (x**3) * ((y_6)**13) + 
            L0x200198b8_f * (x**0) * ((y_6)**14) + 
            L0x200198ba_f * (x**1) * ((y_6)**14) + 
            L0x200198bc_f * (x**2) * ((y_6)**14) + 
            L0x200198be_f * (x**3) * ((y_6)**14) + 
            L0x200198c0_f * (x**0) * ((y_6)**15) + 
            L0x200198c2_f * (x**1) * ((y_6)**15) + 
            L0x200198c4_f * (x**2) * ((y_6)**15) + 
            L0x200198c6_f * (x**3) * ((y_6)**15) + 
            L0x200198c8_f * (x**0) * ((y_6)**16) + 
            L0x200198ca_f * (x**1) * ((y_6)**16) + 
            L0x200198cc_f * (x**2) * ((y_6)**16) + 
            L0x200198ce_f * (x**3) * ((y_6)**16) + 
            L0x200198d0_f * (x**0) * ((y_6)**17) + 
            L0x200198d2_f * (x**1) * ((y_6)**17) + 
            L0x200198d4_f * (x**2) * ((y_6)**17) + 
            L0x200198d6_f * (x**3) * ((y_6)**17) + 
            L0x200198d8_f * (x**0) * ((y_6)**18) + 
            L0x200198da_f * (x**1) * ((y_6)**18) + 
            L0x200198dc_f * (x**2) * ((y_6)**18) + 
            L0x200198de_f * (x**3) * ((y_6)**18) + 
            L0x200198e0_f * (x**0) * ((y_6)**19) + 
            L0x200198e2_f * (x**1) * ((y_6)**19) + 
            L0x200198e4_f * (x**2) * ((y_6)**19) + 
            L0x200198e6_f * (x**3) * ((y_6)**19) + 
            L0x200198e8_f * (x**0) * ((y_6)**20) + 
            L0x200198ea_f * (x**1) * ((y_6)**20) + 
            L0x200198ec_f * (x**2) * ((y_6)**20) + 
            L0x200198ee_f * (x**3) * ((y_6)**20) + 
            L0x200198f0_f * (x**0) * ((y_6)**21) + 
            L0x200198f2_f * (x**1) * ((y_6)**21) + 
            L0x200198f4_f * (x**2) * ((y_6)**21) + 
            L0x200198f6_f * (x**3) * ((y_6)**21) + 
            L0x200198f8_f * (x**0) * ((y_6)**22) + 
            L0x200198fa_f * (x**1) * ((y_6)**22) + 
            L0x200198fc_f * (x**2) * ((y_6)**22) + 
            L0x200198fe_f * (x**3) * ((y_6)**22) + 
            L0x20019900_f * (x**0) * ((y_6)**23) + 
            L0x20019902_f * (x**1) * ((y_6)**23) + 
            L0x20019904_f * (x**2) * ((y_6)**23) + 
            L0x20019906_f * (x**3) * ((y_6)**23) + 
            L0x20019908_f * (x**0) * ((y_6)**24) + 
            L0x2001990a_f * (x**1) * ((y_6)**24) + 
            L0x2001990c_f * (x**2) * ((y_6)**24) + 
            L0x2001990e_f * (x**3) * ((y_6)**24) + 
            L0x20019910_f * (x**0) * ((y_6)**25) + 
            L0x20019912_f * (x**1) * ((y_6)**25) + 
            L0x20019914_f * (x**2) * ((y_6)**25) + 
            L0x20019916_f * (x**3) * ((y_6)**25) + 
            L0x20019918_f * (x**0) * ((y_6)**26) + 
            L0x2001991a_f * (x**1) * ((y_6)**26) + 
            L0x2001991c_f * (x**2) * ((y_6)**26) + 
            L0x2001991e_f * (x**3) * ((y_6)**26) + 
            L0x20019920_f * (x**0) * ((y_6)**27) + 
            L0x20019922_f * (x**1) * ((y_6)**27) + 
            L0x20019924_f * (x**2) * ((y_6)**27) + 
            L0x20019926_f * (x**3) * ((y_6)**27) + 
            L0x20019928_f * (x**0) * ((y_6)**28) + 
            L0x2001992a_f * (x**1) * ((y_6)**28) + 
            L0x2001992c_f * (x**2) * ((y_6)**28) + 
            L0x2001992e_f * (x**3) * ((y_6)**28) + 
            L0x20019930_f * (x**0) * ((y_6)**29) + 
            L0x20019932_f * (x**1) * ((y_6)**29) + 
            L0x20019934_f * (x**2) * ((y_6)**29) + 
            L0x20019936_f * (x**3) * ((y_6)**29) + 
            L0x20019938_f * (x**0) * ((y_6)**30) + 
            L0x2001993a_f * (x**1) * ((y_6)**30) + 
            L0x2001993c_f * (x**2) * ((y_6)**30) + 
            L0x2001993e_f * (x**3) * ((y_6)**30) + 
            L0x20019940_f * (x**0) * ((y_6)**31) + 
            L0x20019942_f * (x**1) * ((y_6)**31) + 
            L0x20019944_f * (x**2) * ((y_6)**31) + 
            L0x20019946_f * (x**3) * ((y_6)**31) + 
            L0x20019948_f * (x**0) * ((y_6)**32) + 
            L0x2001994a_f * (x**1) * ((y_6)**32) + 
            L0x2001994c_f * (x**2) * ((y_6)**32) + 
            L0x2001994e_f * (x**3) * ((y_6)**32) + 
            L0x20019950_f * (x**0) * ((y_6)**33) + 
            L0x20019952_f * (x**1) * ((y_6)**33) + 
            L0x20019954_f * (x**2) * ((y_6)**33) + 
            L0x20019956_f * (x**3) * ((y_6)**33) + 
            L0x20019958_f * (x**0) * ((y_6)**34) + 
            L0x2001995a_f * (x**1) * ((y_6)**34) + 
            L0x2001995c_f * (x**2) * ((y_6)**34) + 
            L0x2001995e_f * (x**3) * ((y_6)**34) + 
            L0x20019960_f * (x**0) * ((y_6)**35) + 
            L0x20019962_f * (x**1) * ((y_6)**35) + 
            L0x20019964_f * (x**2) * ((y_6)**35) + 
            L0x20019966_f * (x**3) * ((y_6)**35) + 
            L0x20019968_f * (x**0) * ((y_6)**36) + 
            L0x2001996a_f * (x**1) * ((y_6)**36) + 
            L0x2001996c_f * (x**2) * ((y_6)**36) + 
            L0x2001996e_f * (x**3) * ((y_6)**36) + 
            L0x20019970_f * (x**0) * ((y_6)**37) + 
            L0x20019972_f * (x**1) * ((y_6)**37) + 
            L0x20019974_f * (x**2) * ((y_6)**37) + 
            L0x20019976_f * (x**3) * ((y_6)**37) + 
            L0x20019978_f * (x**0) * ((y_6)**38) + 
            L0x2001997a_f * (x**1) * ((y_6)**38) + 
            L0x2001997c_f * (x**2) * ((y_6)**38) + 
            L0x2001997e_f * (x**3) * ((y_6)**38) + 
            L0x20019980_f * (x**0) * ((y_6)**39) + 
            L0x20019982_f * (x**1) * ((y_6)**39) + 
            L0x20019984_f * (x**2) * ((y_6)**39) + 
            L0x20019986_f * (x**3) * ((y_6)**39) + 
            L0x20019988_f * (x**0) * ((y_6)**40) + 
            L0x2001998a_f * (x**1) * ((y_6)**40) + 
            L0x2001998c_f * (x**2) * ((y_6)**40) + 
            L0x2001998e_f * (x**3) * ((y_6)**40) + 
            L0x20019990_f * (x**0) * ((y_6)**41) + 
            L0x20019992_f * (x**1) * ((y_6)**41) + 
            L0x20019994_f * (x**2) * ((y_6)**41) + 
            L0x20019996_f * (x**3) * ((y_6)**41) + 
            L0x20019998_f * (x**0) * ((y_6)**42) + 
            L0x2001999a_f * (x**1) * ((y_6)**42) + 
            L0x2001999c_f * (x**2) * ((y_6)**42) + 
            L0x2001999e_f * (x**3) * ((y_6)**42) + 
            L0x200199a0_f * (x**0) * ((y_6)**43) + 
            L0x200199a2_f * (x**1) * ((y_6)**43) + 
            L0x200199a4_f * (x**2) * ((y_6)**43) + 
            L0x200199a6_f * (x**3) * ((y_6)**43) + 
            L0x200199a8_f * (x**0) * ((y_6)**44) + 
            L0x200199aa_f * (x**1) * ((y_6)**44) + 
            L0x200199ac_f * (x**2) * ((y_6)**44) + 
            L0x200199ae_f * (x**3) * ((y_6)**44) + 
            L0x200199b0_f * (x**0) * ((y_6)**45) + 
            L0x200199b2_f * (x**1) * ((y_6)**45) + 
            L0x200199b4_f * (x**2) * ((y_6)**45) + 
            L0x200199b6_f * (x**3) * ((y_6)**45) + 
            L0x200199b8_f * (x**0) * ((y_6)**46) + 
            L0x200199ba_f * (x**1) * ((y_6)**46) + 
            L0x200199bc_f * (x**2) * ((y_6)**46) + 
            L0x200199be_f * (x**3) * ((y_6)**46) + 
            L0x200199c0_f * (x**0) * ((y_6)**47) + 
            L0x200199c2_f * (x**1) * ((y_6)**47) + 
            L0x200199c4_f * (x**2) * ((y_6)**47) + 
            L0x200199c6_f * (x**3) * ((y_6)**47) + 
            L0x200199c8_f * (x**0) * ((y_6)**48) + 
            L0x200199ca_f * (x**1) * ((y_6)**48) + 
            L0x200199cc_f * (x**2) * ((y_6)**48) + 
            L0x200199ce_f * (x**3) * ((y_6)**48) + 
            L0x200199d0_f * (x**0) * ((y_6)**49) + 
            L0x200199d2_f * (x**1) * ((y_6)**49) + 
            L0x200199d4_f * (x**2) * ((y_6)**49) + 
            L0x200199d6_f * (x**3) * ((y_6)**49) + 
            L0x200199d8_f * (x**0) * ((y_6)**50) + 
            L0x200199da_f * (x**1) * ((y_6)**50) + 
            L0x200199dc_f * (x**2) * ((y_6)**50) + 
            L0x200199de_f * (x**3) * ((y_6)**50) + 
            L0x200199e0_f * (x**0) * ((y_6)**51) + 
            L0x200199e2_f * (x**1) * ((y_6)**51) + 
            L0x200199e4_f * (x**2) * ((y_6)**51) + 
            L0x200199e6_f * (x**3) * ((y_6)**51) + 
            L0x200199e8_f * (x**0) * ((y_6)**52) + 
            L0x200199ea_f * (x**1) * ((y_6)**52) + 
            L0x200199ec_f * (x**2) * ((y_6)**52) + 
            L0x200199ee_f * (x**3) * ((y_6)**52) + 
            L0x200199f0_f * (x**0) * ((y_6)**53) + 
            L0x200199f2_f * (x**1) * ((y_6)**53) + 
            L0x200199f4_f * (x**2) * ((y_6)**53) + 
            L0x200199f6_f * (x**3) * ((y_6)**53) + 
            L0x200199f8_f * (x**0) * ((y_6)**54) + 
            L0x200199fa_f * (x**1) * ((y_6)**54) + 
            L0x200199fc_f * (x**2) * ((y_6)**54) + 
            L0x200199fe_f * (x**3) * ((y_6)**54) + 
            L0x20019a00_f * (x**0) * ((y_6)**55) + 
            L0x20019a02_f * (x**1) * ((y_6)**55) + 
            L0x20019a04_f * (x**2) * ((y_6)**55) + 
            L0x20019a06_f * (x**3) * ((y_6)**55) + 
            L0x20019a08_f * (x**0) * ((y_6)**56) + 
            L0x20019a0a_f * (x**1) * ((y_6)**56) + 
            L0x20019a0c_f * (x**2) * ((y_6)**56) + 
            L0x20019a0e_f * (x**3) * ((y_6)**56) + 
            L0x20019a10_f * (x**0) * ((y_6)**57) + 
            L0x20019a12_f * (x**1) * ((y_6)**57) + 
            L0x20019a14_f * (x**2) * ((y_6)**57) + 
            L0x20019a16_f * (x**3) * ((y_6)**57) + 
            L0x20019a18_f * (x**0) * ((y_6)**58) + 
            L0x20019a1a_f * (x**1) * ((y_6)**58) + 
            L0x20019a1c_f * (x**2) * ((y_6)**58) + 
            L0x20019a1e_f * (x**3) * ((y_6)**58) + 
            L0x20019a20_f * (x**0) * ((y_6)**59) + 
            L0x20019a22_f * (x**1) * ((y_6)**59) + 
            L0x20019a24_f * (x**2) * ((y_6)**59) + 
            L0x20019a26_f * (x**3) * ((y_6)**59) + 
            L0x20019a28_f * (x**0) * ((y_6)**60) + 
            L0x20019a2a_f * (x**1) * ((y_6)**60) + 
            L0x20019a2c_f * (x**2) * ((y_6)**60) + 
            L0x20019a2e_f * (x**3) * ((y_6)**60) + 
            L0x20019a30_f * (x**0) * ((y_6)**61) + 
            L0x20019a32_f * (x**1) * ((y_6)**61) + 
            L0x20019a34_f * (x**2) * ((y_6)**61) + 
            L0x20019a36_f * (x**3) * ((y_6)**61) + 
            L0x20019a38_f * (x**0) * ((y_6)**62) + 
            L0x20019a3a_f * (x**1) * ((y_6)**62) + 
            L0x20019a3c_f * (x**2) * ((y_6)**62) + 
            L0x20019a3e_f * (x**3) * ((y_6)**62) + 
            L0x20019a40_f * (x**0) * ((y_6)**63) + 
            L0x20019a42_f * (x**1) * ((y_6)**63) + 
            L0x20019a44_f * (x**2) * ((y_6)**63) + 
            L0x20019a46_f * (x**3) * ((y_6)**63)
          )
          [25570049, x**4 - y_0_03 * 24739119, y_0_03 - 1],
    (* inp_poly_4 *)
    eqmod (2**32) * (inp_poly_4 * inp_poly_4)
          (
            L0x20019848_f * (x**0) * ((y_6)**0) + 
            L0x2001984a_f * (x**1) * ((y_6)**0) + 
            L0x2001984c_f * (x**2) * ((y_6)**0) + 
            L0x2001984e_f * (x**3) * ((y_6)**0) + 
            L0x20019850_f * (x**0) * ((y_6)**1) + 
            L0x20019852_f * (x**1) * ((y_6)**1) + 
            L0x20019854_f * (x**2) * ((y_6)**1) + 
            L0x20019856_f * (x**3) * ((y_6)**1) + 
            L0x20019858_f * (x**0) * ((y_6)**2) + 
            L0x2001985a_f * (x**1) * ((y_6)**2) + 
            L0x2001985c_f * (x**2) * ((y_6)**2) + 
            L0x2001985e_f * (x**3) * ((y_6)**2) + 
            L0x20019860_f * (x**0) * ((y_6)**3) + 
            L0x20019862_f * (x**1) * ((y_6)**3) + 
            L0x20019864_f * (x**2) * ((y_6)**3) + 
            L0x20019866_f * (x**3) * ((y_6)**3) + 
            L0x20019868_f * (x**0) * ((y_6)**4) + 
            L0x2001986a_f * (x**1) * ((y_6)**4) + 
            L0x2001986c_f * (x**2) * ((y_6)**4) + 
            L0x2001986e_f * (x**3) * ((y_6)**4) + 
            L0x20019870_f * (x**0) * ((y_6)**5) + 
            L0x20019872_f * (x**1) * ((y_6)**5) + 
            L0x20019874_f * (x**2) * ((y_6)**5) + 
            L0x20019876_f * (x**3) * ((y_6)**5) + 
            L0x20019878_f * (x**0) * ((y_6)**6) + 
            L0x2001987a_f * (x**1) * ((y_6)**6) + 
            L0x2001987c_f * (x**2) * ((y_6)**6) + 
            L0x2001987e_f * (x**3) * ((y_6)**6) + 
            L0x20019880_f * (x**0) * ((y_6)**7) + 
            L0x20019882_f * (x**1) * ((y_6)**7) + 
            L0x20019884_f * (x**2) * ((y_6)**7) + 
            L0x20019886_f * (x**3) * ((y_6)**7) + 
            L0x20019888_f * (x**0) * ((y_6)**8) + 
            L0x2001988a_f * (x**1) * ((y_6)**8) + 
            L0x2001988c_f * (x**2) * ((y_6)**8) + 
            L0x2001988e_f * (x**3) * ((y_6)**8) + 
            L0x20019890_f * (x**0) * ((y_6)**9) + 
            L0x20019892_f * (x**1) * ((y_6)**9) + 
            L0x20019894_f * (x**2) * ((y_6)**9) + 
            L0x20019896_f * (x**3) * ((y_6)**9) + 
            L0x20019898_f * (x**0) * ((y_6)**10) + 
            L0x2001989a_f * (x**1) * ((y_6)**10) + 
            L0x2001989c_f * (x**2) * ((y_6)**10) + 
            L0x2001989e_f * (x**3) * ((y_6)**10) + 
            L0x200198a0_f * (x**0) * ((y_6)**11) + 
            L0x200198a2_f * (x**1) * ((y_6)**11) + 
            L0x200198a4_f * (x**2) * ((y_6)**11) + 
            L0x200198a6_f * (x**3) * ((y_6)**11) + 
            L0x200198a8_f * (x**0) * ((y_6)**12) + 
            L0x200198aa_f * (x**1) * ((y_6)**12) + 
            L0x200198ac_f * (x**2) * ((y_6)**12) + 
            L0x200198ae_f * (x**3) * ((y_6)**12) + 
            L0x200198b0_f * (x**0) * ((y_6)**13) + 
            L0x200198b2_f * (x**1) * ((y_6)**13) + 
            L0x200198b4_f * (x**2) * ((y_6)**13) + 
            L0x200198b6_f * (x**3) * ((y_6)**13) + 
            L0x200198b8_f * (x**0) * ((y_6)**14) + 
            L0x200198ba_f * (x**1) * ((y_6)**14) + 
            L0x200198bc_f * (x**2) * ((y_6)**14) + 
            L0x200198be_f * (x**3) * ((y_6)**14) + 
            L0x200198c0_f * (x**0) * ((y_6)**15) + 
            L0x200198c2_f * (x**1) * ((y_6)**15) + 
            L0x200198c4_f * (x**2) * ((y_6)**15) + 
            L0x200198c6_f * (x**3) * ((y_6)**15) + 
            L0x200198c8_f * (x**0) * ((y_6)**16) + 
            L0x200198ca_f * (x**1) * ((y_6)**16) + 
            L0x200198cc_f * (x**2) * ((y_6)**16) + 
            L0x200198ce_f * (x**3) * ((y_6)**16) + 
            L0x200198d0_f * (x**0) * ((y_6)**17) + 
            L0x200198d2_f * (x**1) * ((y_6)**17) + 
            L0x200198d4_f * (x**2) * ((y_6)**17) + 
            L0x200198d6_f * (x**3) * ((y_6)**17) + 
            L0x200198d8_f * (x**0) * ((y_6)**18) + 
            L0x200198da_f * (x**1) * ((y_6)**18) + 
            L0x200198dc_f * (x**2) * ((y_6)**18) + 
            L0x200198de_f * (x**3) * ((y_6)**18) + 
            L0x200198e0_f * (x**0) * ((y_6)**19) + 
            L0x200198e2_f * (x**1) * ((y_6)**19) + 
            L0x200198e4_f * (x**2) * ((y_6)**19) + 
            L0x200198e6_f * (x**3) * ((y_6)**19) + 
            L0x200198e8_f * (x**0) * ((y_6)**20) + 
            L0x200198ea_f * (x**1) * ((y_6)**20) + 
            L0x200198ec_f * (x**2) * ((y_6)**20) + 
            L0x200198ee_f * (x**3) * ((y_6)**20) + 
            L0x200198f0_f * (x**0) * ((y_6)**21) + 
            L0x200198f2_f * (x**1) * ((y_6)**21) + 
            L0x200198f4_f * (x**2) * ((y_6)**21) + 
            L0x200198f6_f * (x**3) * ((y_6)**21) + 
            L0x200198f8_f * (x**0) * ((y_6)**22) + 
            L0x200198fa_f * (x**1) * ((y_6)**22) + 
            L0x200198fc_f * (x**2) * ((y_6)**22) + 
            L0x200198fe_f * (x**3) * ((y_6)**22) + 
            L0x20019900_f * (x**0) * ((y_6)**23) + 
            L0x20019902_f * (x**1) * ((y_6)**23) + 
            L0x20019904_f * (x**2) * ((y_6)**23) + 
            L0x20019906_f * (x**3) * ((y_6)**23) + 
            L0x20019908_f * (x**0) * ((y_6)**24) + 
            L0x2001990a_f * (x**1) * ((y_6)**24) + 
            L0x2001990c_f * (x**2) * ((y_6)**24) + 
            L0x2001990e_f * (x**3) * ((y_6)**24) + 
            L0x20019910_f * (x**0) * ((y_6)**25) + 
            L0x20019912_f * (x**1) * ((y_6)**25) + 
            L0x20019914_f * (x**2) * ((y_6)**25) + 
            L0x20019916_f * (x**3) * ((y_6)**25) + 
            L0x20019918_f * (x**0) * ((y_6)**26) + 
            L0x2001991a_f * (x**1) * ((y_6)**26) + 
            L0x2001991c_f * (x**2) * ((y_6)**26) + 
            L0x2001991e_f * (x**3) * ((y_6)**26) + 
            L0x20019920_f * (x**0) * ((y_6)**27) + 
            L0x20019922_f * (x**1) * ((y_6)**27) + 
            L0x20019924_f * (x**2) * ((y_6)**27) + 
            L0x20019926_f * (x**3) * ((y_6)**27) + 
            L0x20019928_f * (x**0) * ((y_6)**28) + 
            L0x2001992a_f * (x**1) * ((y_6)**28) + 
            L0x2001992c_f * (x**2) * ((y_6)**28) + 
            L0x2001992e_f * (x**3) * ((y_6)**28) + 
            L0x20019930_f * (x**0) * ((y_6)**29) + 
            L0x20019932_f * (x**1) * ((y_6)**29) + 
            L0x20019934_f * (x**2) * ((y_6)**29) + 
            L0x20019936_f * (x**3) * ((y_6)**29) + 
            L0x20019938_f * (x**0) * ((y_6)**30) + 
            L0x2001993a_f * (x**1) * ((y_6)**30) + 
            L0x2001993c_f * (x**2) * ((y_6)**30) + 
            L0x2001993e_f * (x**3) * ((y_6)**30) + 
            L0x20019940_f * (x**0) * ((y_6)**31) + 
            L0x20019942_f * (x**1) * ((y_6)**31) + 
            L0x20019944_f * (x**2) * ((y_6)**31) + 
            L0x20019946_f * (x**3) * ((y_6)**31) + 
            L0x20019948_f * (x**0) * ((y_6)**32) + 
            L0x2001994a_f * (x**1) * ((y_6)**32) + 
            L0x2001994c_f * (x**2) * ((y_6)**32) + 
            L0x2001994e_f * (x**3) * ((y_6)**32) + 
            L0x20019950_f * (x**0) * ((y_6)**33) + 
            L0x20019952_f * (x**1) * ((y_6)**33) + 
            L0x20019954_f * (x**2) * ((y_6)**33) + 
            L0x20019956_f * (x**3) * ((y_6)**33) + 
            L0x20019958_f * (x**0) * ((y_6)**34) + 
            L0x2001995a_f * (x**1) * ((y_6)**34) + 
            L0x2001995c_f * (x**2) * ((y_6)**34) + 
            L0x2001995e_f * (x**3) * ((y_6)**34) + 
            L0x20019960_f * (x**0) * ((y_6)**35) + 
            L0x20019962_f * (x**1) * ((y_6)**35) + 
            L0x20019964_f * (x**2) * ((y_6)**35) + 
            L0x20019966_f * (x**3) * ((y_6)**35) + 
            L0x20019968_f * (x**0) * ((y_6)**36) + 
            L0x2001996a_f * (x**1) * ((y_6)**36) + 
            L0x2001996c_f * (x**2) * ((y_6)**36) + 
            L0x2001996e_f * (x**3) * ((y_6)**36) + 
            L0x20019970_f * (x**0) * ((y_6)**37) + 
            L0x20019972_f * (x**1) * ((y_6)**37) + 
            L0x20019974_f * (x**2) * ((y_6)**37) + 
            L0x20019976_f * (x**3) * ((y_6)**37) + 
            L0x20019978_f * (x**0) * ((y_6)**38) + 
            L0x2001997a_f * (x**1) * ((y_6)**38) + 
            L0x2001997c_f * (x**2) * ((y_6)**38) + 
            L0x2001997e_f * (x**3) * ((y_6)**38) + 
            L0x20019980_f * (x**0) * ((y_6)**39) + 
            L0x20019982_f * (x**1) * ((y_6)**39) + 
            L0x20019984_f * (x**2) * ((y_6)**39) + 
            L0x20019986_f * (x**3) * ((y_6)**39) + 
            L0x20019988_f * (x**0) * ((y_6)**40) + 
            L0x2001998a_f * (x**1) * ((y_6)**40) + 
            L0x2001998c_f * (x**2) * ((y_6)**40) + 
            L0x2001998e_f * (x**3) * ((y_6)**40) + 
            L0x20019990_f * (x**0) * ((y_6)**41) + 
            L0x20019992_f * (x**1) * ((y_6)**41) + 
            L0x20019994_f * (x**2) * ((y_6)**41) + 
            L0x20019996_f * (x**3) * ((y_6)**41) + 
            L0x20019998_f * (x**0) * ((y_6)**42) + 
            L0x2001999a_f * (x**1) * ((y_6)**42) + 
            L0x2001999c_f * (x**2) * ((y_6)**42) + 
            L0x2001999e_f * (x**3) * ((y_6)**42) + 
            L0x200199a0_f * (x**0) * ((y_6)**43) + 
            L0x200199a2_f * (x**1) * ((y_6)**43) + 
            L0x200199a4_f * (x**2) * ((y_6)**43) + 
            L0x200199a6_f * (x**3) * ((y_6)**43) + 
            L0x200199a8_f * (x**0) * ((y_6)**44) + 
            L0x200199aa_f * (x**1) * ((y_6)**44) + 
            L0x200199ac_f * (x**2) * ((y_6)**44) + 
            L0x200199ae_f * (x**3) * ((y_6)**44) + 
            L0x200199b0_f * (x**0) * ((y_6)**45) + 
            L0x200199b2_f * (x**1) * ((y_6)**45) + 
            L0x200199b4_f * (x**2) * ((y_6)**45) + 
            L0x200199b6_f * (x**3) * ((y_6)**45) + 
            L0x200199b8_f * (x**0) * ((y_6)**46) + 
            L0x200199ba_f * (x**1) * ((y_6)**46) + 
            L0x200199bc_f * (x**2) * ((y_6)**46) + 
            L0x200199be_f * (x**3) * ((y_6)**46) + 
            L0x200199c0_f * (x**0) * ((y_6)**47) + 
            L0x200199c2_f * (x**1) * ((y_6)**47) + 
            L0x200199c4_f * (x**2) * ((y_6)**47) + 
            L0x200199c6_f * (x**3) * ((y_6)**47) + 
            L0x200199c8_f * (x**0) * ((y_6)**48) + 
            L0x200199ca_f * (x**1) * ((y_6)**48) + 
            L0x200199cc_f * (x**2) * ((y_6)**48) + 
            L0x200199ce_f * (x**3) * ((y_6)**48) + 
            L0x200199d0_f * (x**0) * ((y_6)**49) + 
            L0x200199d2_f * (x**1) * ((y_6)**49) + 
            L0x200199d4_f * (x**2) * ((y_6)**49) + 
            L0x200199d6_f * (x**3) * ((y_6)**49) + 
            L0x200199d8_f * (x**0) * ((y_6)**50) + 
            L0x200199da_f * (x**1) * ((y_6)**50) + 
            L0x200199dc_f * (x**2) * ((y_6)**50) + 
            L0x200199de_f * (x**3) * ((y_6)**50) + 
            L0x200199e0_f * (x**0) * ((y_6)**51) + 
            L0x200199e2_f * (x**1) * ((y_6)**51) + 
            L0x200199e4_f * (x**2) * ((y_6)**51) + 
            L0x200199e6_f * (x**3) * ((y_6)**51) + 
            L0x200199e8_f * (x**0) * ((y_6)**52) + 
            L0x200199ea_f * (x**1) * ((y_6)**52) + 
            L0x200199ec_f * (x**2) * ((y_6)**52) + 
            L0x200199ee_f * (x**3) * ((y_6)**52) + 
            L0x200199f0_f * (x**0) * ((y_6)**53) + 
            L0x200199f2_f * (x**1) * ((y_6)**53) + 
            L0x200199f4_f * (x**2) * ((y_6)**53) + 
            L0x200199f6_f * (x**3) * ((y_6)**53) + 
            L0x200199f8_f * (x**0) * ((y_6)**54) + 
            L0x200199fa_f * (x**1) * ((y_6)**54) + 
            L0x200199fc_f * (x**2) * ((y_6)**54) + 
            L0x200199fe_f * (x**3) * ((y_6)**54) + 
            L0x20019a00_f * (x**0) * ((y_6)**55) + 
            L0x20019a02_f * (x**1) * ((y_6)**55) + 
            L0x20019a04_f * (x**2) * ((y_6)**55) + 
            L0x20019a06_f * (x**3) * ((y_6)**55) + 
            L0x20019a08_f * (x**0) * ((y_6)**56) + 
            L0x20019a0a_f * (x**1) * ((y_6)**56) + 
            L0x20019a0c_f * (x**2) * ((y_6)**56) + 
            L0x20019a0e_f * (x**3) * ((y_6)**56) + 
            L0x20019a10_f * (x**0) * ((y_6)**57) + 
            L0x20019a12_f * (x**1) * ((y_6)**57) + 
            L0x20019a14_f * (x**2) * ((y_6)**57) + 
            L0x20019a16_f * (x**3) * ((y_6)**57) + 
            L0x20019a18_f * (x**0) * ((y_6)**58) + 
            L0x20019a1a_f * (x**1) * ((y_6)**58) + 
            L0x20019a1c_f * (x**2) * ((y_6)**58) + 
            L0x20019a1e_f * (x**3) * ((y_6)**58) + 
            L0x20019a20_f * (x**0) * ((y_6)**59) + 
            L0x20019a22_f * (x**1) * ((y_6)**59) + 
            L0x20019a24_f * (x**2) * ((y_6)**59) + 
            L0x20019a26_f * (x**3) * ((y_6)**59) + 
            L0x20019a28_f * (x**0) * ((y_6)**60) + 
            L0x20019a2a_f * (x**1) * ((y_6)**60) + 
            L0x20019a2c_f * (x**2) * ((y_6)**60) + 
            L0x20019a2e_f * (x**3) * ((y_6)**60) + 
            L0x20019a30_f * (x**0) * ((y_6)**61) + 
            L0x20019a32_f * (x**1) * ((y_6)**61) + 
            L0x20019a34_f * (x**2) * ((y_6)**61) + 
            L0x20019a36_f * (x**3) * ((y_6)**61) + 
            L0x20019a38_f * (x**0) * ((y_6)**62) + 
            L0x20019a3a_f * (x**1) * ((y_6)**62) + 
            L0x20019a3c_f * (x**2) * ((y_6)**62) + 
            L0x20019a3e_f * (x**3) * ((y_6)**62) + 
            L0x20019a40_f * (x**0) * ((y_6)**63) + 
            L0x20019a42_f * (x**1) * ((y_6)**63) + 
            L0x20019a44_f * (x**2) * ((y_6)**63) + 
            L0x20019a46_f * (x**3) * ((y_6)**63)
          )
          [25570049, x**4 - y_0_04 * 678652, y_0_04 - 1],
    (* inp_poly_5 *)
    eqmod (2**32) * (inp_poly_5 * inp_poly_5)
          (
            L0x20019848_f * (x**0) * ((y_6)**0) + 
            L0x2001984a_f * (x**1) * ((y_6)**0) + 
            L0x2001984c_f * (x**2) * ((y_6)**0) + 
            L0x2001984e_f * (x**3) * ((y_6)**0) + 
            L0x20019850_f * (x**0) * ((y_6)**1) + 
            L0x20019852_f * (x**1) * ((y_6)**1) + 
            L0x20019854_f * (x**2) * ((y_6)**1) + 
            L0x20019856_f * (x**3) * ((y_6)**1) + 
            L0x20019858_f * (x**0) * ((y_6)**2) + 
            L0x2001985a_f * (x**1) * ((y_6)**2) + 
            L0x2001985c_f * (x**2) * ((y_6)**2) + 
            L0x2001985e_f * (x**3) * ((y_6)**2) + 
            L0x20019860_f * (x**0) * ((y_6)**3) + 
            L0x20019862_f * (x**1) * ((y_6)**3) + 
            L0x20019864_f * (x**2) * ((y_6)**3) + 
            L0x20019866_f * (x**3) * ((y_6)**3) + 
            L0x20019868_f * (x**0) * ((y_6)**4) + 
            L0x2001986a_f * (x**1) * ((y_6)**4) + 
            L0x2001986c_f * (x**2) * ((y_6)**4) + 
            L0x2001986e_f * (x**3) * ((y_6)**4) + 
            L0x20019870_f * (x**0) * ((y_6)**5) + 
            L0x20019872_f * (x**1) * ((y_6)**5) + 
            L0x20019874_f * (x**2) * ((y_6)**5) + 
            L0x20019876_f * (x**3) * ((y_6)**5) + 
            L0x20019878_f * (x**0) * ((y_6)**6) + 
            L0x2001987a_f * (x**1) * ((y_6)**6) + 
            L0x2001987c_f * (x**2) * ((y_6)**6) + 
            L0x2001987e_f * (x**3) * ((y_6)**6) + 
            L0x20019880_f * (x**0) * ((y_6)**7) + 
            L0x20019882_f * (x**1) * ((y_6)**7) + 
            L0x20019884_f * (x**2) * ((y_6)**7) + 
            L0x20019886_f * (x**3) * ((y_6)**7) + 
            L0x20019888_f * (x**0) * ((y_6)**8) + 
            L0x2001988a_f * (x**1) * ((y_6)**8) + 
            L0x2001988c_f * (x**2) * ((y_6)**8) + 
            L0x2001988e_f * (x**3) * ((y_6)**8) + 
            L0x20019890_f * (x**0) * ((y_6)**9) + 
            L0x20019892_f * (x**1) * ((y_6)**9) + 
            L0x20019894_f * (x**2) * ((y_6)**9) + 
            L0x20019896_f * (x**3) * ((y_6)**9) + 
            L0x20019898_f * (x**0) * ((y_6)**10) + 
            L0x2001989a_f * (x**1) * ((y_6)**10) + 
            L0x2001989c_f * (x**2) * ((y_6)**10) + 
            L0x2001989e_f * (x**3) * ((y_6)**10) + 
            L0x200198a0_f * (x**0) * ((y_6)**11) + 
            L0x200198a2_f * (x**1) * ((y_6)**11) + 
            L0x200198a4_f * (x**2) * ((y_6)**11) + 
            L0x200198a6_f * (x**3) * ((y_6)**11) + 
            L0x200198a8_f * (x**0) * ((y_6)**12) + 
            L0x200198aa_f * (x**1) * ((y_6)**12) + 
            L0x200198ac_f * (x**2) * ((y_6)**12) + 
            L0x200198ae_f * (x**3) * ((y_6)**12) + 
            L0x200198b0_f * (x**0) * ((y_6)**13) + 
            L0x200198b2_f * (x**1) * ((y_6)**13) + 
            L0x200198b4_f * (x**2) * ((y_6)**13) + 
            L0x200198b6_f * (x**3) * ((y_6)**13) + 
            L0x200198b8_f * (x**0) * ((y_6)**14) + 
            L0x200198ba_f * (x**1) * ((y_6)**14) + 
            L0x200198bc_f * (x**2) * ((y_6)**14) + 
            L0x200198be_f * (x**3) * ((y_6)**14) + 
            L0x200198c0_f * (x**0) * ((y_6)**15) + 
            L0x200198c2_f * (x**1) * ((y_6)**15) + 
            L0x200198c4_f * (x**2) * ((y_6)**15) + 
            L0x200198c6_f * (x**3) * ((y_6)**15) + 
            L0x200198c8_f * (x**0) * ((y_6)**16) + 
            L0x200198ca_f * (x**1) * ((y_6)**16) + 
            L0x200198cc_f * (x**2) * ((y_6)**16) + 
            L0x200198ce_f * (x**3) * ((y_6)**16) + 
            L0x200198d0_f * (x**0) * ((y_6)**17) + 
            L0x200198d2_f * (x**1) * ((y_6)**17) + 
            L0x200198d4_f * (x**2) * ((y_6)**17) + 
            L0x200198d6_f * (x**3) * ((y_6)**17) + 
            L0x200198d8_f * (x**0) * ((y_6)**18) + 
            L0x200198da_f * (x**1) * ((y_6)**18) + 
            L0x200198dc_f * (x**2) * ((y_6)**18) + 
            L0x200198de_f * (x**3) * ((y_6)**18) + 
            L0x200198e0_f * (x**0) * ((y_6)**19) + 
            L0x200198e2_f * (x**1) * ((y_6)**19) + 
            L0x200198e4_f * (x**2) * ((y_6)**19) + 
            L0x200198e6_f * (x**3) * ((y_6)**19) + 
            L0x200198e8_f * (x**0) * ((y_6)**20) + 
            L0x200198ea_f * (x**1) * ((y_6)**20) + 
            L0x200198ec_f * (x**2) * ((y_6)**20) + 
            L0x200198ee_f * (x**3) * ((y_6)**20) + 
            L0x200198f0_f * (x**0) * ((y_6)**21) + 
            L0x200198f2_f * (x**1) * ((y_6)**21) + 
            L0x200198f4_f * (x**2) * ((y_6)**21) + 
            L0x200198f6_f * (x**3) * ((y_6)**21) + 
            L0x200198f8_f * (x**0) * ((y_6)**22) + 
            L0x200198fa_f * (x**1) * ((y_6)**22) + 
            L0x200198fc_f * (x**2) * ((y_6)**22) + 
            L0x200198fe_f * (x**3) * ((y_6)**22) + 
            L0x20019900_f * (x**0) * ((y_6)**23) + 
            L0x20019902_f * (x**1) * ((y_6)**23) + 
            L0x20019904_f * (x**2) * ((y_6)**23) + 
            L0x20019906_f * (x**3) * ((y_6)**23) + 
            L0x20019908_f * (x**0) * ((y_6)**24) + 
            L0x2001990a_f * (x**1) * ((y_6)**24) + 
            L0x2001990c_f * (x**2) * ((y_6)**24) + 
            L0x2001990e_f * (x**3) * ((y_6)**24) + 
            L0x20019910_f * (x**0) * ((y_6)**25) + 
            L0x20019912_f * (x**1) * ((y_6)**25) + 
            L0x20019914_f * (x**2) * ((y_6)**25) + 
            L0x20019916_f * (x**3) * ((y_6)**25) + 
            L0x20019918_f * (x**0) * ((y_6)**26) + 
            L0x2001991a_f * (x**1) * ((y_6)**26) + 
            L0x2001991c_f * (x**2) * ((y_6)**26) + 
            L0x2001991e_f * (x**3) * ((y_6)**26) + 
            L0x20019920_f * (x**0) * ((y_6)**27) + 
            L0x20019922_f * (x**1) * ((y_6)**27) + 
            L0x20019924_f * (x**2) * ((y_6)**27) + 
            L0x20019926_f * (x**3) * ((y_6)**27) + 
            L0x20019928_f * (x**0) * ((y_6)**28) + 
            L0x2001992a_f * (x**1) * ((y_6)**28) + 
            L0x2001992c_f * (x**2) * ((y_6)**28) + 
            L0x2001992e_f * (x**3) * ((y_6)**28) + 
            L0x20019930_f * (x**0) * ((y_6)**29) + 
            L0x20019932_f * (x**1) * ((y_6)**29) + 
            L0x20019934_f * (x**2) * ((y_6)**29) + 
            L0x20019936_f * (x**3) * ((y_6)**29) + 
            L0x20019938_f * (x**0) * ((y_6)**30) + 
            L0x2001993a_f * (x**1) * ((y_6)**30) + 
            L0x2001993c_f * (x**2) * ((y_6)**30) + 
            L0x2001993e_f * (x**3) * ((y_6)**30) + 
            L0x20019940_f * (x**0) * ((y_6)**31) + 
            L0x20019942_f * (x**1) * ((y_6)**31) + 
            L0x20019944_f * (x**2) * ((y_6)**31) + 
            L0x20019946_f * (x**3) * ((y_6)**31) + 
            L0x20019948_f * (x**0) * ((y_6)**32) + 
            L0x2001994a_f * (x**1) * ((y_6)**32) + 
            L0x2001994c_f * (x**2) * ((y_6)**32) + 
            L0x2001994e_f * (x**3) * ((y_6)**32) + 
            L0x20019950_f * (x**0) * ((y_6)**33) + 
            L0x20019952_f * (x**1) * ((y_6)**33) + 
            L0x20019954_f * (x**2) * ((y_6)**33) + 
            L0x20019956_f * (x**3) * ((y_6)**33) + 
            L0x20019958_f * (x**0) * ((y_6)**34) + 
            L0x2001995a_f * (x**1) * ((y_6)**34) + 
            L0x2001995c_f * (x**2) * ((y_6)**34) + 
            L0x2001995e_f * (x**3) * ((y_6)**34) + 
            L0x20019960_f * (x**0) * ((y_6)**35) + 
            L0x20019962_f * (x**1) * ((y_6)**35) + 
            L0x20019964_f * (x**2) * ((y_6)**35) + 
            L0x20019966_f * (x**3) * ((y_6)**35) + 
            L0x20019968_f * (x**0) * ((y_6)**36) + 
            L0x2001996a_f * (x**1) * ((y_6)**36) + 
            L0x2001996c_f * (x**2) * ((y_6)**36) + 
            L0x2001996e_f * (x**3) * ((y_6)**36) + 
            L0x20019970_f * (x**0) * ((y_6)**37) + 
            L0x20019972_f * (x**1) * ((y_6)**37) + 
            L0x20019974_f * (x**2) * ((y_6)**37) + 
            L0x20019976_f * (x**3) * ((y_6)**37) + 
            L0x20019978_f * (x**0) * ((y_6)**38) + 
            L0x2001997a_f * (x**1) * ((y_6)**38) + 
            L0x2001997c_f * (x**2) * ((y_6)**38) + 
            L0x2001997e_f * (x**3) * ((y_6)**38) + 
            L0x20019980_f * (x**0) * ((y_6)**39) + 
            L0x20019982_f * (x**1) * ((y_6)**39) + 
            L0x20019984_f * (x**2) * ((y_6)**39) + 
            L0x20019986_f * (x**3) * ((y_6)**39) + 
            L0x20019988_f * (x**0) * ((y_6)**40) + 
            L0x2001998a_f * (x**1) * ((y_6)**40) + 
            L0x2001998c_f * (x**2) * ((y_6)**40) + 
            L0x2001998e_f * (x**3) * ((y_6)**40) + 
            L0x20019990_f * (x**0) * ((y_6)**41) + 
            L0x20019992_f * (x**1) * ((y_6)**41) + 
            L0x20019994_f * (x**2) * ((y_6)**41) + 
            L0x20019996_f * (x**3) * ((y_6)**41) + 
            L0x20019998_f * (x**0) * ((y_6)**42) + 
            L0x2001999a_f * (x**1) * ((y_6)**42) + 
            L0x2001999c_f * (x**2) * ((y_6)**42) + 
            L0x2001999e_f * (x**3) * ((y_6)**42) + 
            L0x200199a0_f * (x**0) * ((y_6)**43) + 
            L0x200199a2_f * (x**1) * ((y_6)**43) + 
            L0x200199a4_f * (x**2) * ((y_6)**43) + 
            L0x200199a6_f * (x**3) * ((y_6)**43) + 
            L0x200199a8_f * (x**0) * ((y_6)**44) + 
            L0x200199aa_f * (x**1) * ((y_6)**44) + 
            L0x200199ac_f * (x**2) * ((y_6)**44) + 
            L0x200199ae_f * (x**3) * ((y_6)**44) + 
            L0x200199b0_f * (x**0) * ((y_6)**45) + 
            L0x200199b2_f * (x**1) * ((y_6)**45) + 
            L0x200199b4_f * (x**2) * ((y_6)**45) + 
            L0x200199b6_f * (x**3) * ((y_6)**45) + 
            L0x200199b8_f * (x**0) * ((y_6)**46) + 
            L0x200199ba_f * (x**1) * ((y_6)**46) + 
            L0x200199bc_f * (x**2) * ((y_6)**46) + 
            L0x200199be_f * (x**3) * ((y_6)**46) + 
            L0x200199c0_f * (x**0) * ((y_6)**47) + 
            L0x200199c2_f * (x**1) * ((y_6)**47) + 
            L0x200199c4_f * (x**2) * ((y_6)**47) + 
            L0x200199c6_f * (x**3) * ((y_6)**47) + 
            L0x200199c8_f * (x**0) * ((y_6)**48) + 
            L0x200199ca_f * (x**1) * ((y_6)**48) + 
            L0x200199cc_f * (x**2) * ((y_6)**48) + 
            L0x200199ce_f * (x**3) * ((y_6)**48) + 
            L0x200199d0_f * (x**0) * ((y_6)**49) + 
            L0x200199d2_f * (x**1) * ((y_6)**49) + 
            L0x200199d4_f * (x**2) * ((y_6)**49) + 
            L0x200199d6_f * (x**3) * ((y_6)**49) + 
            L0x200199d8_f * (x**0) * ((y_6)**50) + 
            L0x200199da_f * (x**1) * ((y_6)**50) + 
            L0x200199dc_f * (x**2) * ((y_6)**50) + 
            L0x200199de_f * (x**3) * ((y_6)**50) + 
            L0x200199e0_f * (x**0) * ((y_6)**51) + 
            L0x200199e2_f * (x**1) * ((y_6)**51) + 
            L0x200199e4_f * (x**2) * ((y_6)**51) + 
            L0x200199e6_f * (x**3) * ((y_6)**51) + 
            L0x200199e8_f * (x**0) * ((y_6)**52) + 
            L0x200199ea_f * (x**1) * ((y_6)**52) + 
            L0x200199ec_f * (x**2) * ((y_6)**52) + 
            L0x200199ee_f * (x**3) * ((y_6)**52) + 
            L0x200199f0_f * (x**0) * ((y_6)**53) + 
            L0x200199f2_f * (x**1) * ((y_6)**53) + 
            L0x200199f4_f * (x**2) * ((y_6)**53) + 
            L0x200199f6_f * (x**3) * ((y_6)**53) + 
            L0x200199f8_f * (x**0) * ((y_6)**54) + 
            L0x200199fa_f * (x**1) * ((y_6)**54) + 
            L0x200199fc_f * (x**2) * ((y_6)**54) + 
            L0x200199fe_f * (x**3) * ((y_6)**54) + 
            L0x20019a00_f * (x**0) * ((y_6)**55) + 
            L0x20019a02_f * (x**1) * ((y_6)**55) + 
            L0x20019a04_f * (x**2) * ((y_6)**55) + 
            L0x20019a06_f * (x**3) * ((y_6)**55) + 
            L0x20019a08_f * (x**0) * ((y_6)**56) + 
            L0x20019a0a_f * (x**1) * ((y_6)**56) + 
            L0x20019a0c_f * (x**2) * ((y_6)**56) + 
            L0x20019a0e_f * (x**3) * ((y_6)**56) + 
            L0x20019a10_f * (x**0) * ((y_6)**57) + 
            L0x20019a12_f * (x**1) * ((y_6)**57) + 
            L0x20019a14_f * (x**2) * ((y_6)**57) + 
            L0x20019a16_f * (x**3) * ((y_6)**57) + 
            L0x20019a18_f * (x**0) * ((y_6)**58) + 
            L0x20019a1a_f * (x**1) * ((y_6)**58) + 
            L0x20019a1c_f * (x**2) * ((y_6)**58) + 
            L0x20019a1e_f * (x**3) * ((y_6)**58) + 
            L0x20019a20_f * (x**0) * ((y_6)**59) + 
            L0x20019a22_f * (x**1) * ((y_6)**59) + 
            L0x20019a24_f * (x**2) * ((y_6)**59) + 
            L0x20019a26_f * (x**3) * ((y_6)**59) + 
            L0x20019a28_f * (x**0) * ((y_6)**60) + 
            L0x20019a2a_f * (x**1) * ((y_6)**60) + 
            L0x20019a2c_f * (x**2) * ((y_6)**60) + 
            L0x20019a2e_f * (x**3) * ((y_6)**60) + 
            L0x20019a30_f * (x**0) * ((y_6)**61) + 
            L0x20019a32_f * (x**1) * ((y_6)**61) + 
            L0x20019a34_f * (x**2) * ((y_6)**61) + 
            L0x20019a36_f * (x**3) * ((y_6)**61) + 
            L0x20019a38_f * (x**0) * ((y_6)**62) + 
            L0x20019a3a_f * (x**1) * ((y_6)**62) + 
            L0x20019a3c_f * (x**2) * ((y_6)**62) + 
            L0x20019a3e_f * (x**3) * ((y_6)**62) + 
            L0x20019a40_f * (x**0) * ((y_6)**63) + 
            L0x20019a42_f * (x**1) * ((y_6)**63) + 
            L0x20019a44_f * (x**2) * ((y_6)**63) + 
            L0x20019a46_f * (x**3) * ((y_6)**63)
          )
          [25570049, x**4 - y_0_05 * 24891397, y_0_05 - 1],
    (* inp_poly_6 *)
    eqmod (2**32) * (inp_poly_6 * inp_poly_6)
          (
            L0x20019848_f * (x**0) * ((y_6)**0) + 
            L0x2001984a_f * (x**1) * ((y_6)**0) + 
            L0x2001984c_f * (x**2) * ((y_6)**0) + 
            L0x2001984e_f * (x**3) * ((y_6)**0) + 
            L0x20019850_f * (x**0) * ((y_6)**1) + 
            L0x20019852_f * (x**1) * ((y_6)**1) + 
            L0x20019854_f * (x**2) * ((y_6)**1) + 
            L0x20019856_f * (x**3) * ((y_6)**1) + 
            L0x20019858_f * (x**0) * ((y_6)**2) + 
            L0x2001985a_f * (x**1) * ((y_6)**2) + 
            L0x2001985c_f * (x**2) * ((y_6)**2) + 
            L0x2001985e_f * (x**3) * ((y_6)**2) + 
            L0x20019860_f * (x**0) * ((y_6)**3) + 
            L0x20019862_f * (x**1) * ((y_6)**3) + 
            L0x20019864_f * (x**2) * ((y_6)**3) + 
            L0x20019866_f * (x**3) * ((y_6)**3) + 
            L0x20019868_f * (x**0) * ((y_6)**4) + 
            L0x2001986a_f * (x**1) * ((y_6)**4) + 
            L0x2001986c_f * (x**2) * ((y_6)**4) + 
            L0x2001986e_f * (x**3) * ((y_6)**4) + 
            L0x20019870_f * (x**0) * ((y_6)**5) + 
            L0x20019872_f * (x**1) * ((y_6)**5) + 
            L0x20019874_f * (x**2) * ((y_6)**5) + 
            L0x20019876_f * (x**3) * ((y_6)**5) + 
            L0x20019878_f * (x**0) * ((y_6)**6) + 
            L0x2001987a_f * (x**1) * ((y_6)**6) + 
            L0x2001987c_f * (x**2) * ((y_6)**6) + 
            L0x2001987e_f * (x**3) * ((y_6)**6) + 
            L0x20019880_f * (x**0) * ((y_6)**7) + 
            L0x20019882_f * (x**1) * ((y_6)**7) + 
            L0x20019884_f * (x**2) * ((y_6)**7) + 
            L0x20019886_f * (x**3) * ((y_6)**7) + 
            L0x20019888_f * (x**0) * ((y_6)**8) + 
            L0x2001988a_f * (x**1) * ((y_6)**8) + 
            L0x2001988c_f * (x**2) * ((y_6)**8) + 
            L0x2001988e_f * (x**3) * ((y_6)**8) + 
            L0x20019890_f * (x**0) * ((y_6)**9) + 
            L0x20019892_f * (x**1) * ((y_6)**9) + 
            L0x20019894_f * (x**2) * ((y_6)**9) + 
            L0x20019896_f * (x**3) * ((y_6)**9) + 
            L0x20019898_f * (x**0) * ((y_6)**10) + 
            L0x2001989a_f * (x**1) * ((y_6)**10) + 
            L0x2001989c_f * (x**2) * ((y_6)**10) + 
            L0x2001989e_f * (x**3) * ((y_6)**10) + 
            L0x200198a0_f * (x**0) * ((y_6)**11) + 
            L0x200198a2_f * (x**1) * ((y_6)**11) + 
            L0x200198a4_f * (x**2) * ((y_6)**11) + 
            L0x200198a6_f * (x**3) * ((y_6)**11) + 
            L0x200198a8_f * (x**0) * ((y_6)**12) + 
            L0x200198aa_f * (x**1) * ((y_6)**12) + 
            L0x200198ac_f * (x**2) * ((y_6)**12) + 
            L0x200198ae_f * (x**3) * ((y_6)**12) + 
            L0x200198b0_f * (x**0) * ((y_6)**13) + 
            L0x200198b2_f * (x**1) * ((y_6)**13) + 
            L0x200198b4_f * (x**2) * ((y_6)**13) + 
            L0x200198b6_f * (x**3) * ((y_6)**13) + 
            L0x200198b8_f * (x**0) * ((y_6)**14) + 
            L0x200198ba_f * (x**1) * ((y_6)**14) + 
            L0x200198bc_f * (x**2) * ((y_6)**14) + 
            L0x200198be_f * (x**3) * ((y_6)**14) + 
            L0x200198c0_f * (x**0) * ((y_6)**15) + 
            L0x200198c2_f * (x**1) * ((y_6)**15) + 
            L0x200198c4_f * (x**2) * ((y_6)**15) + 
            L0x200198c6_f * (x**3) * ((y_6)**15) + 
            L0x200198c8_f * (x**0) * ((y_6)**16) + 
            L0x200198ca_f * (x**1) * ((y_6)**16) + 
            L0x200198cc_f * (x**2) * ((y_6)**16) + 
            L0x200198ce_f * (x**3) * ((y_6)**16) + 
            L0x200198d0_f * (x**0) * ((y_6)**17) + 
            L0x200198d2_f * (x**1) * ((y_6)**17) + 
            L0x200198d4_f * (x**2) * ((y_6)**17) + 
            L0x200198d6_f * (x**3) * ((y_6)**17) + 
            L0x200198d8_f * (x**0) * ((y_6)**18) + 
            L0x200198da_f * (x**1) * ((y_6)**18) + 
            L0x200198dc_f * (x**2) * ((y_6)**18) + 
            L0x200198de_f * (x**3) * ((y_6)**18) + 
            L0x200198e0_f * (x**0) * ((y_6)**19) + 
            L0x200198e2_f * (x**1) * ((y_6)**19) + 
            L0x200198e4_f * (x**2) * ((y_6)**19) + 
            L0x200198e6_f * (x**3) * ((y_6)**19) + 
            L0x200198e8_f * (x**0) * ((y_6)**20) + 
            L0x200198ea_f * (x**1) * ((y_6)**20) + 
            L0x200198ec_f * (x**2) * ((y_6)**20) + 
            L0x200198ee_f * (x**3) * ((y_6)**20) + 
            L0x200198f0_f * (x**0) * ((y_6)**21) + 
            L0x200198f2_f * (x**1) * ((y_6)**21) + 
            L0x200198f4_f * (x**2) * ((y_6)**21) + 
            L0x200198f6_f * (x**3) * ((y_6)**21) + 
            L0x200198f8_f * (x**0) * ((y_6)**22) + 
            L0x200198fa_f * (x**1) * ((y_6)**22) + 
            L0x200198fc_f * (x**2) * ((y_6)**22) + 
            L0x200198fe_f * (x**3) * ((y_6)**22) + 
            L0x20019900_f * (x**0) * ((y_6)**23) + 
            L0x20019902_f * (x**1) * ((y_6)**23) + 
            L0x20019904_f * (x**2) * ((y_6)**23) + 
            L0x20019906_f * (x**3) * ((y_6)**23) + 
            L0x20019908_f * (x**0) * ((y_6)**24) + 
            L0x2001990a_f * (x**1) * ((y_6)**24) + 
            L0x2001990c_f * (x**2) * ((y_6)**24) + 
            L0x2001990e_f * (x**3) * ((y_6)**24) + 
            L0x20019910_f * (x**0) * ((y_6)**25) + 
            L0x20019912_f * (x**1) * ((y_6)**25) + 
            L0x20019914_f * (x**2) * ((y_6)**25) + 
            L0x20019916_f * (x**3) * ((y_6)**25) + 
            L0x20019918_f * (x**0) * ((y_6)**26) + 
            L0x2001991a_f * (x**1) * ((y_6)**26) + 
            L0x2001991c_f * (x**2) * ((y_6)**26) + 
            L0x2001991e_f * (x**3) * ((y_6)**26) + 
            L0x20019920_f * (x**0) * ((y_6)**27) + 
            L0x20019922_f * (x**1) * ((y_6)**27) + 
            L0x20019924_f * (x**2) * ((y_6)**27) + 
            L0x20019926_f * (x**3) * ((y_6)**27) + 
            L0x20019928_f * (x**0) * ((y_6)**28) + 
            L0x2001992a_f * (x**1) * ((y_6)**28) + 
            L0x2001992c_f * (x**2) * ((y_6)**28) + 
            L0x2001992e_f * (x**3) * ((y_6)**28) + 
            L0x20019930_f * (x**0) * ((y_6)**29) + 
            L0x20019932_f * (x**1) * ((y_6)**29) + 
            L0x20019934_f * (x**2) * ((y_6)**29) + 
            L0x20019936_f * (x**3) * ((y_6)**29) + 
            L0x20019938_f * (x**0) * ((y_6)**30) + 
            L0x2001993a_f * (x**1) * ((y_6)**30) + 
            L0x2001993c_f * (x**2) * ((y_6)**30) + 
            L0x2001993e_f * (x**3) * ((y_6)**30) + 
            L0x20019940_f * (x**0) * ((y_6)**31) + 
            L0x20019942_f * (x**1) * ((y_6)**31) + 
            L0x20019944_f * (x**2) * ((y_6)**31) + 
            L0x20019946_f * (x**3) * ((y_6)**31) + 
            L0x20019948_f * (x**0) * ((y_6)**32) + 
            L0x2001994a_f * (x**1) * ((y_6)**32) + 
            L0x2001994c_f * (x**2) * ((y_6)**32) + 
            L0x2001994e_f * (x**3) * ((y_6)**32) + 
            L0x20019950_f * (x**0) * ((y_6)**33) + 
            L0x20019952_f * (x**1) * ((y_6)**33) + 
            L0x20019954_f * (x**2) * ((y_6)**33) + 
            L0x20019956_f * (x**3) * ((y_6)**33) + 
            L0x20019958_f * (x**0) * ((y_6)**34) + 
            L0x2001995a_f * (x**1) * ((y_6)**34) + 
            L0x2001995c_f * (x**2) * ((y_6)**34) + 
            L0x2001995e_f * (x**3) * ((y_6)**34) + 
            L0x20019960_f * (x**0) * ((y_6)**35) + 
            L0x20019962_f * (x**1) * ((y_6)**35) + 
            L0x20019964_f * (x**2) * ((y_6)**35) + 
            L0x20019966_f * (x**3) * ((y_6)**35) + 
            L0x20019968_f * (x**0) * ((y_6)**36) + 
            L0x2001996a_f * (x**1) * ((y_6)**36) + 
            L0x2001996c_f * (x**2) * ((y_6)**36) + 
            L0x2001996e_f * (x**3) * ((y_6)**36) + 
            L0x20019970_f * (x**0) * ((y_6)**37) + 
            L0x20019972_f * (x**1) * ((y_6)**37) + 
            L0x20019974_f * (x**2) * ((y_6)**37) + 
            L0x20019976_f * (x**3) * ((y_6)**37) + 
            L0x20019978_f * (x**0) * ((y_6)**38) + 
            L0x2001997a_f * (x**1) * ((y_6)**38) + 
            L0x2001997c_f * (x**2) * ((y_6)**38) + 
            L0x2001997e_f * (x**3) * ((y_6)**38) + 
            L0x20019980_f * (x**0) * ((y_6)**39) + 
            L0x20019982_f * (x**1) * ((y_6)**39) + 
            L0x20019984_f * (x**2) * ((y_6)**39) + 
            L0x20019986_f * (x**3) * ((y_6)**39) + 
            L0x20019988_f * (x**0) * ((y_6)**40) + 
            L0x2001998a_f * (x**1) * ((y_6)**40) + 
            L0x2001998c_f * (x**2) * ((y_6)**40) + 
            L0x2001998e_f * (x**3) * ((y_6)**40) + 
            L0x20019990_f * (x**0) * ((y_6)**41) + 
            L0x20019992_f * (x**1) * ((y_6)**41) + 
            L0x20019994_f * (x**2) * ((y_6)**41) + 
            L0x20019996_f * (x**3) * ((y_6)**41) + 
            L0x20019998_f * (x**0) * ((y_6)**42) + 
            L0x2001999a_f * (x**1) * ((y_6)**42) + 
            L0x2001999c_f * (x**2) * ((y_6)**42) + 
            L0x2001999e_f * (x**3) * ((y_6)**42) + 
            L0x200199a0_f * (x**0) * ((y_6)**43) + 
            L0x200199a2_f * (x**1) * ((y_6)**43) + 
            L0x200199a4_f * (x**2) * ((y_6)**43) + 
            L0x200199a6_f * (x**3) * ((y_6)**43) + 
            L0x200199a8_f * (x**0) * ((y_6)**44) + 
            L0x200199aa_f * (x**1) * ((y_6)**44) + 
            L0x200199ac_f * (x**2) * ((y_6)**44) + 
            L0x200199ae_f * (x**3) * ((y_6)**44) + 
            L0x200199b0_f * (x**0) * ((y_6)**45) + 
            L0x200199b2_f * (x**1) * ((y_6)**45) + 
            L0x200199b4_f * (x**2) * ((y_6)**45) + 
            L0x200199b6_f * (x**3) * ((y_6)**45) + 
            L0x200199b8_f * (x**0) * ((y_6)**46) + 
            L0x200199ba_f * (x**1) * ((y_6)**46) + 
            L0x200199bc_f * (x**2) * ((y_6)**46) + 
            L0x200199be_f * (x**3) * ((y_6)**46) + 
            L0x200199c0_f * (x**0) * ((y_6)**47) + 
            L0x200199c2_f * (x**1) * ((y_6)**47) + 
            L0x200199c4_f * (x**2) * ((y_6)**47) + 
            L0x200199c6_f * (x**3) * ((y_6)**47) + 
            L0x200199c8_f * (x**0) * ((y_6)**48) + 
            L0x200199ca_f * (x**1) * ((y_6)**48) + 
            L0x200199cc_f * (x**2) * ((y_6)**48) + 
            L0x200199ce_f * (x**3) * ((y_6)**48) + 
            L0x200199d0_f * (x**0) * ((y_6)**49) + 
            L0x200199d2_f * (x**1) * ((y_6)**49) + 
            L0x200199d4_f * (x**2) * ((y_6)**49) + 
            L0x200199d6_f * (x**3) * ((y_6)**49) + 
            L0x200199d8_f * (x**0) * ((y_6)**50) + 
            L0x200199da_f * (x**1) * ((y_6)**50) + 
            L0x200199dc_f * (x**2) * ((y_6)**50) + 
            L0x200199de_f * (x**3) * ((y_6)**50) + 
            L0x200199e0_f * (x**0) * ((y_6)**51) + 
            L0x200199e2_f * (x**1) * ((y_6)**51) + 
            L0x200199e4_f * (x**2) * ((y_6)**51) + 
            L0x200199e6_f * (x**3) * ((y_6)**51) + 
            L0x200199e8_f * (x**0) * ((y_6)**52) + 
            L0x200199ea_f * (x**1) * ((y_6)**52) + 
            L0x200199ec_f * (x**2) * ((y_6)**52) + 
            L0x200199ee_f * (x**3) * ((y_6)**52) + 
            L0x200199f0_f * (x**0) * ((y_6)**53) + 
            L0x200199f2_f * (x**1) * ((y_6)**53) + 
            L0x200199f4_f * (x**2) * ((y_6)**53) + 
            L0x200199f6_f * (x**3) * ((y_6)**53) + 
            L0x200199f8_f * (x**0) * ((y_6)**54) + 
            L0x200199fa_f * (x**1) * ((y_6)**54) + 
            L0x200199fc_f * (x**2) * ((y_6)**54) + 
            L0x200199fe_f * (x**3) * ((y_6)**54) + 
            L0x20019a00_f * (x**0) * ((y_6)**55) + 
            L0x20019a02_f * (x**1) * ((y_6)**55) + 
            L0x20019a04_f * (x**2) * ((y_6)**55) + 
            L0x20019a06_f * (x**3) * ((y_6)**55) + 
            L0x20019a08_f * (x**0) * ((y_6)**56) + 
            L0x20019a0a_f * (x**1) * ((y_6)**56) + 
            L0x20019a0c_f * (x**2) * ((y_6)**56) + 
            L0x20019a0e_f * (x**3) * ((y_6)**56) + 
            L0x20019a10_f * (x**0) * ((y_6)**57) + 
            L0x20019a12_f * (x**1) * ((y_6)**57) + 
            L0x20019a14_f * (x**2) * ((y_6)**57) + 
            L0x20019a16_f * (x**3) * ((y_6)**57) + 
            L0x20019a18_f * (x**0) * ((y_6)**58) + 
            L0x20019a1a_f * (x**1) * ((y_6)**58) + 
            L0x20019a1c_f * (x**2) * ((y_6)**58) + 
            L0x20019a1e_f * (x**3) * ((y_6)**58) + 
            L0x20019a20_f * (x**0) * ((y_6)**59) + 
            L0x20019a22_f * (x**1) * ((y_6)**59) + 
            L0x20019a24_f * (x**2) * ((y_6)**59) + 
            L0x20019a26_f * (x**3) * ((y_6)**59) + 
            L0x20019a28_f * (x**0) * ((y_6)**60) + 
            L0x20019a2a_f * (x**1) * ((y_6)**60) + 
            L0x20019a2c_f * (x**2) * ((y_6)**60) + 
            L0x20019a2e_f * (x**3) * ((y_6)**60) + 
            L0x20019a30_f * (x**0) * ((y_6)**61) + 
            L0x20019a32_f * (x**1) * ((y_6)**61) + 
            L0x20019a34_f * (x**2) * ((y_6)**61) + 
            L0x20019a36_f * (x**3) * ((y_6)**61) + 
            L0x20019a38_f * (x**0) * ((y_6)**62) + 
            L0x20019a3a_f * (x**1) * ((y_6)**62) + 
            L0x20019a3c_f * (x**2) * ((y_6)**62) + 
            L0x20019a3e_f * (x**3) * ((y_6)**62) + 
            L0x20019a40_f * (x**0) * ((y_6)**63) + 
            L0x20019a42_f * (x**1) * ((y_6)**63) + 
            L0x20019a44_f * (x**2) * ((y_6)**63) + 
            L0x20019a46_f * (x**3) * ((y_6)**63)
          )
          [25570049, x**4 - y_0_06 * 9510986, y_0_06 - 1],
    (* inp_poly_7 *)
    eqmod (2**32) * (inp_poly_7 * inp_poly_7)
          (
            L0x20019848_f * (x**0) * ((y_6)**0) + 
            L0x2001984a_f * (x**1) * ((y_6)**0) + 
            L0x2001984c_f * (x**2) * ((y_6)**0) + 
            L0x2001984e_f * (x**3) * ((y_6)**0) + 
            L0x20019850_f * (x**0) * ((y_6)**1) + 
            L0x20019852_f * (x**1) * ((y_6)**1) + 
            L0x20019854_f * (x**2) * ((y_6)**1) + 
            L0x20019856_f * (x**3) * ((y_6)**1) + 
            L0x20019858_f * (x**0) * ((y_6)**2) + 
            L0x2001985a_f * (x**1) * ((y_6)**2) + 
            L0x2001985c_f * (x**2) * ((y_6)**2) + 
            L0x2001985e_f * (x**3) * ((y_6)**2) + 
            L0x20019860_f * (x**0) * ((y_6)**3) + 
            L0x20019862_f * (x**1) * ((y_6)**3) + 
            L0x20019864_f * (x**2) * ((y_6)**3) + 
            L0x20019866_f * (x**3) * ((y_6)**3) + 
            L0x20019868_f * (x**0) * ((y_6)**4) + 
            L0x2001986a_f * (x**1) * ((y_6)**4) + 
            L0x2001986c_f * (x**2) * ((y_6)**4) + 
            L0x2001986e_f * (x**3) * ((y_6)**4) + 
            L0x20019870_f * (x**0) * ((y_6)**5) + 
            L0x20019872_f * (x**1) * ((y_6)**5) + 
            L0x20019874_f * (x**2) * ((y_6)**5) + 
            L0x20019876_f * (x**3) * ((y_6)**5) + 
            L0x20019878_f * (x**0) * ((y_6)**6) + 
            L0x2001987a_f * (x**1) * ((y_6)**6) + 
            L0x2001987c_f * (x**2) * ((y_6)**6) + 
            L0x2001987e_f * (x**3) * ((y_6)**6) + 
            L0x20019880_f * (x**0) * ((y_6)**7) + 
            L0x20019882_f * (x**1) * ((y_6)**7) + 
            L0x20019884_f * (x**2) * ((y_6)**7) + 
            L0x20019886_f * (x**3) * ((y_6)**7) + 
            L0x20019888_f * (x**0) * ((y_6)**8) + 
            L0x2001988a_f * (x**1) * ((y_6)**8) + 
            L0x2001988c_f * (x**2) * ((y_6)**8) + 
            L0x2001988e_f * (x**3) * ((y_6)**8) + 
            L0x20019890_f * (x**0) * ((y_6)**9) + 
            L0x20019892_f * (x**1) * ((y_6)**9) + 
            L0x20019894_f * (x**2) * ((y_6)**9) + 
            L0x20019896_f * (x**3) * ((y_6)**9) + 
            L0x20019898_f * (x**0) * ((y_6)**10) + 
            L0x2001989a_f * (x**1) * ((y_6)**10) + 
            L0x2001989c_f * (x**2) * ((y_6)**10) + 
            L0x2001989e_f * (x**3) * ((y_6)**10) + 
            L0x200198a0_f * (x**0) * ((y_6)**11) + 
            L0x200198a2_f * (x**1) * ((y_6)**11) + 
            L0x200198a4_f * (x**2) * ((y_6)**11) + 
            L0x200198a6_f * (x**3) * ((y_6)**11) + 
            L0x200198a8_f * (x**0) * ((y_6)**12) + 
            L0x200198aa_f * (x**1) * ((y_6)**12) + 
            L0x200198ac_f * (x**2) * ((y_6)**12) + 
            L0x200198ae_f * (x**3) * ((y_6)**12) + 
            L0x200198b0_f * (x**0) * ((y_6)**13) + 
            L0x200198b2_f * (x**1) * ((y_6)**13) + 
            L0x200198b4_f * (x**2) * ((y_6)**13) + 
            L0x200198b6_f * (x**3) * ((y_6)**13) + 
            L0x200198b8_f * (x**0) * ((y_6)**14) + 
            L0x200198ba_f * (x**1) * ((y_6)**14) + 
            L0x200198bc_f * (x**2) * ((y_6)**14) + 
            L0x200198be_f * (x**3) * ((y_6)**14) + 
            L0x200198c0_f * (x**0) * ((y_6)**15) + 
            L0x200198c2_f * (x**1) * ((y_6)**15) + 
            L0x200198c4_f * (x**2) * ((y_6)**15) + 
            L0x200198c6_f * (x**3) * ((y_6)**15) + 
            L0x200198c8_f * (x**0) * ((y_6)**16) + 
            L0x200198ca_f * (x**1) * ((y_6)**16) + 
            L0x200198cc_f * (x**2) * ((y_6)**16) + 
            L0x200198ce_f * (x**3) * ((y_6)**16) + 
            L0x200198d0_f * (x**0) * ((y_6)**17) + 
            L0x200198d2_f * (x**1) * ((y_6)**17) + 
            L0x200198d4_f * (x**2) * ((y_6)**17) + 
            L0x200198d6_f * (x**3) * ((y_6)**17) + 
            L0x200198d8_f * (x**0) * ((y_6)**18) + 
            L0x200198da_f * (x**1) * ((y_6)**18) + 
            L0x200198dc_f * (x**2) * ((y_6)**18) + 
            L0x200198de_f * (x**3) * ((y_6)**18) + 
            L0x200198e0_f * (x**0) * ((y_6)**19) + 
            L0x200198e2_f * (x**1) * ((y_6)**19) + 
            L0x200198e4_f * (x**2) * ((y_6)**19) + 
            L0x200198e6_f * (x**3) * ((y_6)**19) + 
            L0x200198e8_f * (x**0) * ((y_6)**20) + 
            L0x200198ea_f * (x**1) * ((y_6)**20) + 
            L0x200198ec_f * (x**2) * ((y_6)**20) + 
            L0x200198ee_f * (x**3) * ((y_6)**20) + 
            L0x200198f0_f * (x**0) * ((y_6)**21) + 
            L0x200198f2_f * (x**1) * ((y_6)**21) + 
            L0x200198f4_f * (x**2) * ((y_6)**21) + 
            L0x200198f6_f * (x**3) * ((y_6)**21) + 
            L0x200198f8_f * (x**0) * ((y_6)**22) + 
            L0x200198fa_f * (x**1) * ((y_6)**22) + 
            L0x200198fc_f * (x**2) * ((y_6)**22) + 
            L0x200198fe_f * (x**3) * ((y_6)**22) + 
            L0x20019900_f * (x**0) * ((y_6)**23) + 
            L0x20019902_f * (x**1) * ((y_6)**23) + 
            L0x20019904_f * (x**2) * ((y_6)**23) + 
            L0x20019906_f * (x**3) * ((y_6)**23) + 
            L0x20019908_f * (x**0) * ((y_6)**24) + 
            L0x2001990a_f * (x**1) * ((y_6)**24) + 
            L0x2001990c_f * (x**2) * ((y_6)**24) + 
            L0x2001990e_f * (x**3) * ((y_6)**24) + 
            L0x20019910_f * (x**0) * ((y_6)**25) + 
            L0x20019912_f * (x**1) * ((y_6)**25) + 
            L0x20019914_f * (x**2) * ((y_6)**25) + 
            L0x20019916_f * (x**3) * ((y_6)**25) + 
            L0x20019918_f * (x**0) * ((y_6)**26) + 
            L0x2001991a_f * (x**1) * ((y_6)**26) + 
            L0x2001991c_f * (x**2) * ((y_6)**26) + 
            L0x2001991e_f * (x**3) * ((y_6)**26) + 
            L0x20019920_f * (x**0) * ((y_6)**27) + 
            L0x20019922_f * (x**1) * ((y_6)**27) + 
            L0x20019924_f * (x**2) * ((y_6)**27) + 
            L0x20019926_f * (x**3) * ((y_6)**27) + 
            L0x20019928_f * (x**0) * ((y_6)**28) + 
            L0x2001992a_f * (x**1) * ((y_6)**28) + 
            L0x2001992c_f * (x**2) * ((y_6)**28) + 
            L0x2001992e_f * (x**3) * ((y_6)**28) + 
            L0x20019930_f * (x**0) * ((y_6)**29) + 
            L0x20019932_f * (x**1) * ((y_6)**29) + 
            L0x20019934_f * (x**2) * ((y_6)**29) + 
            L0x20019936_f * (x**3) * ((y_6)**29) + 
            L0x20019938_f * (x**0) * ((y_6)**30) + 
            L0x2001993a_f * (x**1) * ((y_6)**30) + 
            L0x2001993c_f * (x**2) * ((y_6)**30) + 
            L0x2001993e_f * (x**3) * ((y_6)**30) + 
            L0x20019940_f * (x**0) * ((y_6)**31) + 
            L0x20019942_f * (x**1) * ((y_6)**31) + 
            L0x20019944_f * (x**2) * ((y_6)**31) + 
            L0x20019946_f * (x**3) * ((y_6)**31) + 
            L0x20019948_f * (x**0) * ((y_6)**32) + 
            L0x2001994a_f * (x**1) * ((y_6)**32) + 
            L0x2001994c_f * (x**2) * ((y_6)**32) + 
            L0x2001994e_f * (x**3) * ((y_6)**32) + 
            L0x20019950_f * (x**0) * ((y_6)**33) + 
            L0x20019952_f * (x**1) * ((y_6)**33) + 
            L0x20019954_f * (x**2) * ((y_6)**33) + 
            L0x20019956_f * (x**3) * ((y_6)**33) + 
            L0x20019958_f * (x**0) * ((y_6)**34) + 
            L0x2001995a_f * (x**1) * ((y_6)**34) + 
            L0x2001995c_f * (x**2) * ((y_6)**34) + 
            L0x2001995e_f * (x**3) * ((y_6)**34) + 
            L0x20019960_f * (x**0) * ((y_6)**35) + 
            L0x20019962_f * (x**1) * ((y_6)**35) + 
            L0x20019964_f * (x**2) * ((y_6)**35) + 
            L0x20019966_f * (x**3) * ((y_6)**35) + 
            L0x20019968_f * (x**0) * ((y_6)**36) + 
            L0x2001996a_f * (x**1) * ((y_6)**36) + 
            L0x2001996c_f * (x**2) * ((y_6)**36) + 
            L0x2001996e_f * (x**3) * ((y_6)**36) + 
            L0x20019970_f * (x**0) * ((y_6)**37) + 
            L0x20019972_f * (x**1) * ((y_6)**37) + 
            L0x20019974_f * (x**2) * ((y_6)**37) + 
            L0x20019976_f * (x**3) * ((y_6)**37) + 
            L0x20019978_f * (x**0) * ((y_6)**38) + 
            L0x2001997a_f * (x**1) * ((y_6)**38) + 
            L0x2001997c_f * (x**2) * ((y_6)**38) + 
            L0x2001997e_f * (x**3) * ((y_6)**38) + 
            L0x20019980_f * (x**0) * ((y_6)**39) + 
            L0x20019982_f * (x**1) * ((y_6)**39) + 
            L0x20019984_f * (x**2) * ((y_6)**39) + 
            L0x20019986_f * (x**3) * ((y_6)**39) + 
            L0x20019988_f * (x**0) * ((y_6)**40) + 
            L0x2001998a_f * (x**1) * ((y_6)**40) + 
            L0x2001998c_f * (x**2) * ((y_6)**40) + 
            L0x2001998e_f * (x**3) * ((y_6)**40) + 
            L0x20019990_f * (x**0) * ((y_6)**41) + 
            L0x20019992_f * (x**1) * ((y_6)**41) + 
            L0x20019994_f * (x**2) * ((y_6)**41) + 
            L0x20019996_f * (x**3) * ((y_6)**41) + 
            L0x20019998_f * (x**0) * ((y_6)**42) + 
            L0x2001999a_f * (x**1) * ((y_6)**42) + 
            L0x2001999c_f * (x**2) * ((y_6)**42) + 
            L0x2001999e_f * (x**3) * ((y_6)**42) + 
            L0x200199a0_f * (x**0) * ((y_6)**43) + 
            L0x200199a2_f * (x**1) * ((y_6)**43) + 
            L0x200199a4_f * (x**2) * ((y_6)**43) + 
            L0x200199a6_f * (x**3) * ((y_6)**43) + 
            L0x200199a8_f * (x**0) * ((y_6)**44) + 
            L0x200199aa_f * (x**1) * ((y_6)**44) + 
            L0x200199ac_f * (x**2) * ((y_6)**44) + 
            L0x200199ae_f * (x**3) * ((y_6)**44) + 
            L0x200199b0_f * (x**0) * ((y_6)**45) + 
            L0x200199b2_f * (x**1) * ((y_6)**45) + 
            L0x200199b4_f * (x**2) * ((y_6)**45) + 
            L0x200199b6_f * (x**3) * ((y_6)**45) + 
            L0x200199b8_f * (x**0) * ((y_6)**46) + 
            L0x200199ba_f * (x**1) * ((y_6)**46) + 
            L0x200199bc_f * (x**2) * ((y_6)**46) + 
            L0x200199be_f * (x**3) * ((y_6)**46) + 
            L0x200199c0_f * (x**0) * ((y_6)**47) + 
            L0x200199c2_f * (x**1) * ((y_6)**47) + 
            L0x200199c4_f * (x**2) * ((y_6)**47) + 
            L0x200199c6_f * (x**3) * ((y_6)**47) + 
            L0x200199c8_f * (x**0) * ((y_6)**48) + 
            L0x200199ca_f * (x**1) * ((y_6)**48) + 
            L0x200199cc_f * (x**2) * ((y_6)**48) + 
            L0x200199ce_f * (x**3) * ((y_6)**48) + 
            L0x200199d0_f * (x**0) * ((y_6)**49) + 
            L0x200199d2_f * (x**1) * ((y_6)**49) + 
            L0x200199d4_f * (x**2) * ((y_6)**49) + 
            L0x200199d6_f * (x**3) * ((y_6)**49) + 
            L0x200199d8_f * (x**0) * ((y_6)**50) + 
            L0x200199da_f * (x**1) * ((y_6)**50) + 
            L0x200199dc_f * (x**2) * ((y_6)**50) + 
            L0x200199de_f * (x**3) * ((y_6)**50) + 
            L0x200199e0_f * (x**0) * ((y_6)**51) + 
            L0x200199e2_f * (x**1) * ((y_6)**51) + 
            L0x200199e4_f * (x**2) * ((y_6)**51) + 
            L0x200199e6_f * (x**3) * ((y_6)**51) + 
            L0x200199e8_f * (x**0) * ((y_6)**52) + 
            L0x200199ea_f * (x**1) * ((y_6)**52) + 
            L0x200199ec_f * (x**2) * ((y_6)**52) + 
            L0x200199ee_f * (x**3) * ((y_6)**52) + 
            L0x200199f0_f * (x**0) * ((y_6)**53) + 
            L0x200199f2_f * (x**1) * ((y_6)**53) + 
            L0x200199f4_f * (x**2) * ((y_6)**53) + 
            L0x200199f6_f * (x**3) * ((y_6)**53) + 
            L0x200199f8_f * (x**0) * ((y_6)**54) + 
            L0x200199fa_f * (x**1) * ((y_6)**54) + 
            L0x200199fc_f * (x**2) * ((y_6)**54) + 
            L0x200199fe_f * (x**3) * ((y_6)**54) + 
            L0x20019a00_f * (x**0) * ((y_6)**55) + 
            L0x20019a02_f * (x**1) * ((y_6)**55) + 
            L0x20019a04_f * (x**2) * ((y_6)**55) + 
            L0x20019a06_f * (x**3) * ((y_6)**55) + 
            L0x20019a08_f * (x**0) * ((y_6)**56) + 
            L0x20019a0a_f * (x**1) * ((y_6)**56) + 
            L0x20019a0c_f * (x**2) * ((y_6)**56) + 
            L0x20019a0e_f * (x**3) * ((y_6)**56) + 
            L0x20019a10_f * (x**0) * ((y_6)**57) + 
            L0x20019a12_f * (x**1) * ((y_6)**57) + 
            L0x20019a14_f * (x**2) * ((y_6)**57) + 
            L0x20019a16_f * (x**3) * ((y_6)**57) + 
            L0x20019a18_f * (x**0) * ((y_6)**58) + 
            L0x20019a1a_f * (x**1) * ((y_6)**58) + 
            L0x20019a1c_f * (x**2) * ((y_6)**58) + 
            L0x20019a1e_f * (x**3) * ((y_6)**58) + 
            L0x20019a20_f * (x**0) * ((y_6)**59) + 
            L0x20019a22_f * (x**1) * ((y_6)**59) + 
            L0x20019a24_f * (x**2) * ((y_6)**59) + 
            L0x20019a26_f * (x**3) * ((y_6)**59) + 
            L0x20019a28_f * (x**0) * ((y_6)**60) + 
            L0x20019a2a_f * (x**1) * ((y_6)**60) + 
            L0x20019a2c_f * (x**2) * ((y_6)**60) + 
            L0x20019a2e_f * (x**3) * ((y_6)**60) + 
            L0x20019a30_f * (x**0) * ((y_6)**61) + 
            L0x20019a32_f * (x**1) * ((y_6)**61) + 
            L0x20019a34_f * (x**2) * ((y_6)**61) + 
            L0x20019a36_f * (x**3) * ((y_6)**61) + 
            L0x20019a38_f * (x**0) * ((y_6)**62) + 
            L0x20019a3a_f * (x**1) * ((y_6)**62) + 
            L0x20019a3c_f * (x**2) * ((y_6)**62) + 
            L0x20019a3e_f * (x**3) * ((y_6)**62) + 
            L0x20019a40_f * (x**0) * ((y_6)**63) + 
            L0x20019a42_f * (x**1) * ((y_6)**63) + 
            L0x20019a44_f * (x**2) * ((y_6)**63) + 
            L0x20019a46_f * (x**3) * ((y_6)**63)
          )
          [25570049, x**4 - y_0_07 * 16059063, y_0_07 - 1]
  ] prove with [cuts [2, 20], all ghosts]
  &&
  true
;

cut (* 39 *)
  true && true;

(* slice 1 *)
cut (* 40 *)
  and [
    (* inp_poly_8 *)
    eqmod (2**32) * (inp_poly_8 * inp_poly_8)
          (
            L0x20019848_f * (x**0) * ((y_6)**0) + 
            L0x2001984a_f * (x**1) * ((y_6)**0) + 
            L0x2001984c_f * (x**2) * ((y_6)**0) + 
            L0x2001984e_f * (x**3) * ((y_6)**0) + 
            L0x20019850_f * (x**0) * ((y_6)**1) + 
            L0x20019852_f * (x**1) * ((y_6)**1) + 
            L0x20019854_f * (x**2) * ((y_6)**1) + 
            L0x20019856_f * (x**3) * ((y_6)**1) + 
            L0x20019858_f * (x**0) * ((y_6)**2) + 
            L0x2001985a_f * (x**1) * ((y_6)**2) + 
            L0x2001985c_f * (x**2) * ((y_6)**2) + 
            L0x2001985e_f * (x**3) * ((y_6)**2) + 
            L0x20019860_f * (x**0) * ((y_6)**3) + 
            L0x20019862_f * (x**1) * ((y_6)**3) + 
            L0x20019864_f * (x**2) * ((y_6)**3) + 
            L0x20019866_f * (x**3) * ((y_6)**3) + 
            L0x20019868_f * (x**0) * ((y_6)**4) + 
            L0x2001986a_f * (x**1) * ((y_6)**4) + 
            L0x2001986c_f * (x**2) * ((y_6)**4) + 
            L0x2001986e_f * (x**3) * ((y_6)**4) + 
            L0x20019870_f * (x**0) * ((y_6)**5) + 
            L0x20019872_f * (x**1) * ((y_6)**5) + 
            L0x20019874_f * (x**2) * ((y_6)**5) + 
            L0x20019876_f * (x**3) * ((y_6)**5) + 
            L0x20019878_f * (x**0) * ((y_6)**6) + 
            L0x2001987a_f * (x**1) * ((y_6)**6) + 
            L0x2001987c_f * (x**2) * ((y_6)**6) + 
            L0x2001987e_f * (x**3) * ((y_6)**6) + 
            L0x20019880_f * (x**0) * ((y_6)**7) + 
            L0x20019882_f * (x**1) * ((y_6)**7) + 
            L0x20019884_f * (x**2) * ((y_6)**7) + 
            L0x20019886_f * (x**3) * ((y_6)**7) + 
            L0x20019888_f * (x**0) * ((y_6)**8) + 
            L0x2001988a_f * (x**1) * ((y_6)**8) + 
            L0x2001988c_f * (x**2) * ((y_6)**8) + 
            L0x2001988e_f * (x**3) * ((y_6)**8) + 
            L0x20019890_f * (x**0) * ((y_6)**9) + 
            L0x20019892_f * (x**1) * ((y_6)**9) + 
            L0x20019894_f * (x**2) * ((y_6)**9) + 
            L0x20019896_f * (x**3) * ((y_6)**9) + 
            L0x20019898_f * (x**0) * ((y_6)**10) + 
            L0x2001989a_f * (x**1) * ((y_6)**10) + 
            L0x2001989c_f * (x**2) * ((y_6)**10) + 
            L0x2001989e_f * (x**3) * ((y_6)**10) + 
            L0x200198a0_f * (x**0) * ((y_6)**11) + 
            L0x200198a2_f * (x**1) * ((y_6)**11) + 
            L0x200198a4_f * (x**2) * ((y_6)**11) + 
            L0x200198a6_f * (x**3) * ((y_6)**11) + 
            L0x200198a8_f * (x**0) * ((y_6)**12) + 
            L0x200198aa_f * (x**1) * ((y_6)**12) + 
            L0x200198ac_f * (x**2) * ((y_6)**12) + 
            L0x200198ae_f * (x**3) * ((y_6)**12) + 
            L0x200198b0_f * (x**0) * ((y_6)**13) + 
            L0x200198b2_f * (x**1) * ((y_6)**13) + 
            L0x200198b4_f * (x**2) * ((y_6)**13) + 
            L0x200198b6_f * (x**3) * ((y_6)**13) + 
            L0x200198b8_f * (x**0) * ((y_6)**14) + 
            L0x200198ba_f * (x**1) * ((y_6)**14) + 
            L0x200198bc_f * (x**2) * ((y_6)**14) + 
            L0x200198be_f * (x**3) * ((y_6)**14) + 
            L0x200198c0_f * (x**0) * ((y_6)**15) + 
            L0x200198c2_f * (x**1) * ((y_6)**15) + 
            L0x200198c4_f * (x**2) * ((y_6)**15) + 
            L0x200198c6_f * (x**3) * ((y_6)**15) + 
            L0x200198c8_f * (x**0) * ((y_6)**16) + 
            L0x200198ca_f * (x**1) * ((y_6)**16) + 
            L0x200198cc_f * (x**2) * ((y_6)**16) + 
            L0x200198ce_f * (x**3) * ((y_6)**16) + 
            L0x200198d0_f * (x**0) * ((y_6)**17) + 
            L0x200198d2_f * (x**1) * ((y_6)**17) + 
            L0x200198d4_f * (x**2) * ((y_6)**17) + 
            L0x200198d6_f * (x**3) * ((y_6)**17) + 
            L0x200198d8_f * (x**0) * ((y_6)**18) + 
            L0x200198da_f * (x**1) * ((y_6)**18) + 
            L0x200198dc_f * (x**2) * ((y_6)**18) + 
            L0x200198de_f * (x**3) * ((y_6)**18) + 
            L0x200198e0_f * (x**0) * ((y_6)**19) + 
            L0x200198e2_f * (x**1) * ((y_6)**19) + 
            L0x200198e4_f * (x**2) * ((y_6)**19) + 
            L0x200198e6_f * (x**3) * ((y_6)**19) + 
            L0x200198e8_f * (x**0) * ((y_6)**20) + 
            L0x200198ea_f * (x**1) * ((y_6)**20) + 
            L0x200198ec_f * (x**2) * ((y_6)**20) + 
            L0x200198ee_f * (x**3) * ((y_6)**20) + 
            L0x200198f0_f * (x**0) * ((y_6)**21) + 
            L0x200198f2_f * (x**1) * ((y_6)**21) + 
            L0x200198f4_f * (x**2) * ((y_6)**21) + 
            L0x200198f6_f * (x**3) * ((y_6)**21) + 
            L0x200198f8_f * (x**0) * ((y_6)**22) + 
            L0x200198fa_f * (x**1) * ((y_6)**22) + 
            L0x200198fc_f * (x**2) * ((y_6)**22) + 
            L0x200198fe_f * (x**3) * ((y_6)**22) + 
            L0x20019900_f * (x**0) * ((y_6)**23) + 
            L0x20019902_f * (x**1) * ((y_6)**23) + 
            L0x20019904_f * (x**2) * ((y_6)**23) + 
            L0x20019906_f * (x**3) * ((y_6)**23) + 
            L0x20019908_f * (x**0) * ((y_6)**24) + 
            L0x2001990a_f * (x**1) * ((y_6)**24) + 
            L0x2001990c_f * (x**2) * ((y_6)**24) + 
            L0x2001990e_f * (x**3) * ((y_6)**24) + 
            L0x20019910_f * (x**0) * ((y_6)**25) + 
            L0x20019912_f * (x**1) * ((y_6)**25) + 
            L0x20019914_f * (x**2) * ((y_6)**25) + 
            L0x20019916_f * (x**3) * ((y_6)**25) + 
            L0x20019918_f * (x**0) * ((y_6)**26) + 
            L0x2001991a_f * (x**1) * ((y_6)**26) + 
            L0x2001991c_f * (x**2) * ((y_6)**26) + 
            L0x2001991e_f * (x**3) * ((y_6)**26) + 
            L0x20019920_f * (x**0) * ((y_6)**27) + 
            L0x20019922_f * (x**1) * ((y_6)**27) + 
            L0x20019924_f * (x**2) * ((y_6)**27) + 
            L0x20019926_f * (x**3) * ((y_6)**27) + 
            L0x20019928_f * (x**0) * ((y_6)**28) + 
            L0x2001992a_f * (x**1) * ((y_6)**28) + 
            L0x2001992c_f * (x**2) * ((y_6)**28) + 
            L0x2001992e_f * (x**3) * ((y_6)**28) + 
            L0x20019930_f * (x**0) * ((y_6)**29) + 
            L0x20019932_f * (x**1) * ((y_6)**29) + 
            L0x20019934_f * (x**2) * ((y_6)**29) + 
            L0x20019936_f * (x**3) * ((y_6)**29) + 
            L0x20019938_f * (x**0) * ((y_6)**30) + 
            L0x2001993a_f * (x**1) * ((y_6)**30) + 
            L0x2001993c_f * (x**2) * ((y_6)**30) + 
            L0x2001993e_f * (x**3) * ((y_6)**30) + 
            L0x20019940_f * (x**0) * ((y_6)**31) + 
            L0x20019942_f * (x**1) * ((y_6)**31) + 
            L0x20019944_f * (x**2) * ((y_6)**31) + 
            L0x20019946_f * (x**3) * ((y_6)**31) + 
            L0x20019948_f * (x**0) * ((y_6)**32) + 
            L0x2001994a_f * (x**1) * ((y_6)**32) + 
            L0x2001994c_f * (x**2) * ((y_6)**32) + 
            L0x2001994e_f * (x**3) * ((y_6)**32) + 
            L0x20019950_f * (x**0) * ((y_6)**33) + 
            L0x20019952_f * (x**1) * ((y_6)**33) + 
            L0x20019954_f * (x**2) * ((y_6)**33) + 
            L0x20019956_f * (x**3) * ((y_6)**33) + 
            L0x20019958_f * (x**0) * ((y_6)**34) + 
            L0x2001995a_f * (x**1) * ((y_6)**34) + 
            L0x2001995c_f * (x**2) * ((y_6)**34) + 
            L0x2001995e_f * (x**3) * ((y_6)**34) + 
            L0x20019960_f * (x**0) * ((y_6)**35) + 
            L0x20019962_f * (x**1) * ((y_6)**35) + 
            L0x20019964_f * (x**2) * ((y_6)**35) + 
            L0x20019966_f * (x**3) * ((y_6)**35) + 
            L0x20019968_f * (x**0) * ((y_6)**36) + 
            L0x2001996a_f * (x**1) * ((y_6)**36) + 
            L0x2001996c_f * (x**2) * ((y_6)**36) + 
            L0x2001996e_f * (x**3) * ((y_6)**36) + 
            L0x20019970_f * (x**0) * ((y_6)**37) + 
            L0x20019972_f * (x**1) * ((y_6)**37) + 
            L0x20019974_f * (x**2) * ((y_6)**37) + 
            L0x20019976_f * (x**3) * ((y_6)**37) + 
            L0x20019978_f * (x**0) * ((y_6)**38) + 
            L0x2001997a_f * (x**1) * ((y_6)**38) + 
            L0x2001997c_f * (x**2) * ((y_6)**38) + 
            L0x2001997e_f * (x**3) * ((y_6)**38) + 
            L0x20019980_f * (x**0) * ((y_6)**39) + 
            L0x20019982_f * (x**1) * ((y_6)**39) + 
            L0x20019984_f * (x**2) * ((y_6)**39) + 
            L0x20019986_f * (x**3) * ((y_6)**39) + 
            L0x20019988_f * (x**0) * ((y_6)**40) + 
            L0x2001998a_f * (x**1) * ((y_6)**40) + 
            L0x2001998c_f * (x**2) * ((y_6)**40) + 
            L0x2001998e_f * (x**3) * ((y_6)**40) + 
            L0x20019990_f * (x**0) * ((y_6)**41) + 
            L0x20019992_f * (x**1) * ((y_6)**41) + 
            L0x20019994_f * (x**2) * ((y_6)**41) + 
            L0x20019996_f * (x**3) * ((y_6)**41) + 
            L0x20019998_f * (x**0) * ((y_6)**42) + 
            L0x2001999a_f * (x**1) * ((y_6)**42) + 
            L0x2001999c_f * (x**2) * ((y_6)**42) + 
            L0x2001999e_f * (x**3) * ((y_6)**42) + 
            L0x200199a0_f * (x**0) * ((y_6)**43) + 
            L0x200199a2_f * (x**1) * ((y_6)**43) + 
            L0x200199a4_f * (x**2) * ((y_6)**43) + 
            L0x200199a6_f * (x**3) * ((y_6)**43) + 
            L0x200199a8_f * (x**0) * ((y_6)**44) + 
            L0x200199aa_f * (x**1) * ((y_6)**44) + 
            L0x200199ac_f * (x**2) * ((y_6)**44) + 
            L0x200199ae_f * (x**3) * ((y_6)**44) + 
            L0x200199b0_f * (x**0) * ((y_6)**45) + 
            L0x200199b2_f * (x**1) * ((y_6)**45) + 
            L0x200199b4_f * (x**2) * ((y_6)**45) + 
            L0x200199b6_f * (x**3) * ((y_6)**45) + 
            L0x200199b8_f * (x**0) * ((y_6)**46) + 
            L0x200199ba_f * (x**1) * ((y_6)**46) + 
            L0x200199bc_f * (x**2) * ((y_6)**46) + 
            L0x200199be_f * (x**3) * ((y_6)**46) + 
            L0x200199c0_f * (x**0) * ((y_6)**47) + 
            L0x200199c2_f * (x**1) * ((y_6)**47) + 
            L0x200199c4_f * (x**2) * ((y_6)**47) + 
            L0x200199c6_f * (x**3) * ((y_6)**47) + 
            L0x200199c8_f * (x**0) * ((y_6)**48) + 
            L0x200199ca_f * (x**1) * ((y_6)**48) + 
            L0x200199cc_f * (x**2) * ((y_6)**48) + 
            L0x200199ce_f * (x**3) * ((y_6)**48) + 
            L0x200199d0_f * (x**0) * ((y_6)**49) + 
            L0x200199d2_f * (x**1) * ((y_6)**49) + 
            L0x200199d4_f * (x**2) * ((y_6)**49) + 
            L0x200199d6_f * (x**3) * ((y_6)**49) + 
            L0x200199d8_f * (x**0) * ((y_6)**50) + 
            L0x200199da_f * (x**1) * ((y_6)**50) + 
            L0x200199dc_f * (x**2) * ((y_6)**50) + 
            L0x200199de_f * (x**3) * ((y_6)**50) + 
            L0x200199e0_f * (x**0) * ((y_6)**51) + 
            L0x200199e2_f * (x**1) * ((y_6)**51) + 
            L0x200199e4_f * (x**2) * ((y_6)**51) + 
            L0x200199e6_f * (x**3) * ((y_6)**51) + 
            L0x200199e8_f * (x**0) * ((y_6)**52) + 
            L0x200199ea_f * (x**1) * ((y_6)**52) + 
            L0x200199ec_f * (x**2) * ((y_6)**52) + 
            L0x200199ee_f * (x**3) * ((y_6)**52) + 
            L0x200199f0_f * (x**0) * ((y_6)**53) + 
            L0x200199f2_f * (x**1) * ((y_6)**53) + 
            L0x200199f4_f * (x**2) * ((y_6)**53) + 
            L0x200199f6_f * (x**3) * ((y_6)**53) + 
            L0x200199f8_f * (x**0) * ((y_6)**54) + 
            L0x200199fa_f * (x**1) * ((y_6)**54) + 
            L0x200199fc_f * (x**2) * ((y_6)**54) + 
            L0x200199fe_f * (x**3) * ((y_6)**54) + 
            L0x20019a00_f * (x**0) * ((y_6)**55) + 
            L0x20019a02_f * (x**1) * ((y_6)**55) + 
            L0x20019a04_f * (x**2) * ((y_6)**55) + 
            L0x20019a06_f * (x**3) * ((y_6)**55) + 
            L0x20019a08_f * (x**0) * ((y_6)**56) + 
            L0x20019a0a_f * (x**1) * ((y_6)**56) + 
            L0x20019a0c_f * (x**2) * ((y_6)**56) + 
            L0x20019a0e_f * (x**3) * ((y_6)**56) + 
            L0x20019a10_f * (x**0) * ((y_6)**57) + 
            L0x20019a12_f * (x**1) * ((y_6)**57) + 
            L0x20019a14_f * (x**2) * ((y_6)**57) + 
            L0x20019a16_f * (x**3) * ((y_6)**57) + 
            L0x20019a18_f * (x**0) * ((y_6)**58) + 
            L0x20019a1a_f * (x**1) * ((y_6)**58) + 
            L0x20019a1c_f * (x**2) * ((y_6)**58) + 
            L0x20019a1e_f * (x**3) * ((y_6)**58) + 
            L0x20019a20_f * (x**0) * ((y_6)**59) + 
            L0x20019a22_f * (x**1) * ((y_6)**59) + 
            L0x20019a24_f * (x**2) * ((y_6)**59) + 
            L0x20019a26_f * (x**3) * ((y_6)**59) + 
            L0x20019a28_f * (x**0) * ((y_6)**60) + 
            L0x20019a2a_f * (x**1) * ((y_6)**60) + 
            L0x20019a2c_f * (x**2) * ((y_6)**60) + 
            L0x20019a2e_f * (x**3) * ((y_6)**60) + 
            L0x20019a30_f * (x**0) * ((y_6)**61) + 
            L0x20019a32_f * (x**1) * ((y_6)**61) + 
            L0x20019a34_f * (x**2) * ((y_6)**61) + 
            L0x20019a36_f * (x**3) * ((y_6)**61) + 
            L0x20019a38_f * (x**0) * ((y_6)**62) + 
            L0x20019a3a_f * (x**1) * ((y_6)**62) + 
            L0x20019a3c_f * (x**2) * ((y_6)**62) + 
            L0x20019a3e_f * (x**3) * ((y_6)**62) + 
            L0x20019a40_f * (x**0) * ((y_6)**63) + 
            L0x20019a42_f * (x**1) * ((y_6)**63) + 
            L0x20019a44_f * (x**2) * ((y_6)**63) + 
            L0x20019a46_f * (x**3) * ((y_6)**63)
          )
          [25570049, x**4 - y_0_08 * 24972806, y_0_08 - 1],
    (* inp_poly_9 *)
    eqmod (2**32) * (inp_poly_9 * inp_poly_9)
          (
            L0x20019848_f * (x**0) * ((y_6)**0) + 
            L0x2001984a_f * (x**1) * ((y_6)**0) + 
            L0x2001984c_f * (x**2) * ((y_6)**0) + 
            L0x2001984e_f * (x**3) * ((y_6)**0) + 
            L0x20019850_f * (x**0) * ((y_6)**1) + 
            L0x20019852_f * (x**1) * ((y_6)**1) + 
            L0x20019854_f * (x**2) * ((y_6)**1) + 
            L0x20019856_f * (x**3) * ((y_6)**1) + 
            L0x20019858_f * (x**0) * ((y_6)**2) + 
            L0x2001985a_f * (x**1) * ((y_6)**2) + 
            L0x2001985c_f * (x**2) * ((y_6)**2) + 
            L0x2001985e_f * (x**3) * ((y_6)**2) + 
            L0x20019860_f * (x**0) * ((y_6)**3) + 
            L0x20019862_f * (x**1) * ((y_6)**3) + 
            L0x20019864_f * (x**2) * ((y_6)**3) + 
            L0x20019866_f * (x**3) * ((y_6)**3) + 
            L0x20019868_f * (x**0) * ((y_6)**4) + 
            L0x2001986a_f * (x**1) * ((y_6)**4) + 
            L0x2001986c_f * (x**2) * ((y_6)**4) + 
            L0x2001986e_f * (x**3) * ((y_6)**4) + 
            L0x20019870_f * (x**0) * ((y_6)**5) + 
            L0x20019872_f * (x**1) * ((y_6)**5) + 
            L0x20019874_f * (x**2) * ((y_6)**5) + 
            L0x20019876_f * (x**3) * ((y_6)**5) + 
            L0x20019878_f * (x**0) * ((y_6)**6) + 
            L0x2001987a_f * (x**1) * ((y_6)**6) + 
            L0x2001987c_f * (x**2) * ((y_6)**6) + 
            L0x2001987e_f * (x**3) * ((y_6)**6) + 
            L0x20019880_f * (x**0) * ((y_6)**7) + 
            L0x20019882_f * (x**1) * ((y_6)**7) + 
            L0x20019884_f * (x**2) * ((y_6)**7) + 
            L0x20019886_f * (x**3) * ((y_6)**7) + 
            L0x20019888_f * (x**0) * ((y_6)**8) + 
            L0x2001988a_f * (x**1) * ((y_6)**8) + 
            L0x2001988c_f * (x**2) * ((y_6)**8) + 
            L0x2001988e_f * (x**3) * ((y_6)**8) + 
            L0x20019890_f * (x**0) * ((y_6)**9) + 
            L0x20019892_f * (x**1) * ((y_6)**9) + 
            L0x20019894_f * (x**2) * ((y_6)**9) + 
            L0x20019896_f * (x**3) * ((y_6)**9) + 
            L0x20019898_f * (x**0) * ((y_6)**10) + 
            L0x2001989a_f * (x**1) * ((y_6)**10) + 
            L0x2001989c_f * (x**2) * ((y_6)**10) + 
            L0x2001989e_f * (x**3) * ((y_6)**10) + 
            L0x200198a0_f * (x**0) * ((y_6)**11) + 
            L0x200198a2_f * (x**1) * ((y_6)**11) + 
            L0x200198a4_f * (x**2) * ((y_6)**11) + 
            L0x200198a6_f * (x**3) * ((y_6)**11) + 
            L0x200198a8_f * (x**0) * ((y_6)**12) + 
            L0x200198aa_f * (x**1) * ((y_6)**12) + 
            L0x200198ac_f * (x**2) * ((y_6)**12) + 
            L0x200198ae_f * (x**3) * ((y_6)**12) + 
            L0x200198b0_f * (x**0) * ((y_6)**13) + 
            L0x200198b2_f * (x**1) * ((y_6)**13) + 
            L0x200198b4_f * (x**2) * ((y_6)**13) + 
            L0x200198b6_f * (x**3) * ((y_6)**13) + 
            L0x200198b8_f * (x**0) * ((y_6)**14) + 
            L0x200198ba_f * (x**1) * ((y_6)**14) + 
            L0x200198bc_f * (x**2) * ((y_6)**14) + 
            L0x200198be_f * (x**3) * ((y_6)**14) + 
            L0x200198c0_f * (x**0) * ((y_6)**15) + 
            L0x200198c2_f * (x**1) * ((y_6)**15) + 
            L0x200198c4_f * (x**2) * ((y_6)**15) + 
            L0x200198c6_f * (x**3) * ((y_6)**15) + 
            L0x200198c8_f * (x**0) * ((y_6)**16) + 
            L0x200198ca_f * (x**1) * ((y_6)**16) + 
            L0x200198cc_f * (x**2) * ((y_6)**16) + 
            L0x200198ce_f * (x**3) * ((y_6)**16) + 
            L0x200198d0_f * (x**0) * ((y_6)**17) + 
            L0x200198d2_f * (x**1) * ((y_6)**17) + 
            L0x200198d4_f * (x**2) * ((y_6)**17) + 
            L0x200198d6_f * (x**3) * ((y_6)**17) + 
            L0x200198d8_f * (x**0) * ((y_6)**18) + 
            L0x200198da_f * (x**1) * ((y_6)**18) + 
            L0x200198dc_f * (x**2) * ((y_6)**18) + 
            L0x200198de_f * (x**3) * ((y_6)**18) + 
            L0x200198e0_f * (x**0) * ((y_6)**19) + 
            L0x200198e2_f * (x**1) * ((y_6)**19) + 
            L0x200198e4_f * (x**2) * ((y_6)**19) + 
            L0x200198e6_f * (x**3) * ((y_6)**19) + 
            L0x200198e8_f * (x**0) * ((y_6)**20) + 
            L0x200198ea_f * (x**1) * ((y_6)**20) + 
            L0x200198ec_f * (x**2) * ((y_6)**20) + 
            L0x200198ee_f * (x**3) * ((y_6)**20) + 
            L0x200198f0_f * (x**0) * ((y_6)**21) + 
            L0x200198f2_f * (x**1) * ((y_6)**21) + 
            L0x200198f4_f * (x**2) * ((y_6)**21) + 
            L0x200198f6_f * (x**3) * ((y_6)**21) + 
            L0x200198f8_f * (x**0) * ((y_6)**22) + 
            L0x200198fa_f * (x**1) * ((y_6)**22) + 
            L0x200198fc_f * (x**2) * ((y_6)**22) + 
            L0x200198fe_f * (x**3) * ((y_6)**22) + 
            L0x20019900_f * (x**0) * ((y_6)**23) + 
            L0x20019902_f * (x**1) * ((y_6)**23) + 
            L0x20019904_f * (x**2) * ((y_6)**23) + 
            L0x20019906_f * (x**3) * ((y_6)**23) + 
            L0x20019908_f * (x**0) * ((y_6)**24) + 
            L0x2001990a_f * (x**1) * ((y_6)**24) + 
            L0x2001990c_f * (x**2) * ((y_6)**24) + 
            L0x2001990e_f * (x**3) * ((y_6)**24) + 
            L0x20019910_f * (x**0) * ((y_6)**25) + 
            L0x20019912_f * (x**1) * ((y_6)**25) + 
            L0x20019914_f * (x**2) * ((y_6)**25) + 
            L0x20019916_f * (x**3) * ((y_6)**25) + 
            L0x20019918_f * (x**0) * ((y_6)**26) + 
            L0x2001991a_f * (x**1) * ((y_6)**26) + 
            L0x2001991c_f * (x**2) * ((y_6)**26) + 
            L0x2001991e_f * (x**3) * ((y_6)**26) + 
            L0x20019920_f * (x**0) * ((y_6)**27) + 
            L0x20019922_f * (x**1) * ((y_6)**27) + 
            L0x20019924_f * (x**2) * ((y_6)**27) + 
            L0x20019926_f * (x**3) * ((y_6)**27) + 
            L0x20019928_f * (x**0) * ((y_6)**28) + 
            L0x2001992a_f * (x**1) * ((y_6)**28) + 
            L0x2001992c_f * (x**2) * ((y_6)**28) + 
            L0x2001992e_f * (x**3) * ((y_6)**28) + 
            L0x20019930_f * (x**0) * ((y_6)**29) + 
            L0x20019932_f * (x**1) * ((y_6)**29) + 
            L0x20019934_f * (x**2) * ((y_6)**29) + 
            L0x20019936_f * (x**3) * ((y_6)**29) + 
            L0x20019938_f * (x**0) * ((y_6)**30) + 
            L0x2001993a_f * (x**1) * ((y_6)**30) + 
            L0x2001993c_f * (x**2) * ((y_6)**30) + 
            L0x2001993e_f * (x**3) * ((y_6)**30) + 
            L0x20019940_f * (x**0) * ((y_6)**31) + 
            L0x20019942_f * (x**1) * ((y_6)**31) + 
            L0x20019944_f * (x**2) * ((y_6)**31) + 
            L0x20019946_f * (x**3) * ((y_6)**31) + 
            L0x20019948_f * (x**0) * ((y_6)**32) + 
            L0x2001994a_f * (x**1) * ((y_6)**32) + 
            L0x2001994c_f * (x**2) * ((y_6)**32) + 
            L0x2001994e_f * (x**3) * ((y_6)**32) + 
            L0x20019950_f * (x**0) * ((y_6)**33) + 
            L0x20019952_f * (x**1) * ((y_6)**33) + 
            L0x20019954_f * (x**2) * ((y_6)**33) + 
            L0x20019956_f * (x**3) * ((y_6)**33) + 
            L0x20019958_f * (x**0) * ((y_6)**34) + 
            L0x2001995a_f * (x**1) * ((y_6)**34) + 
            L0x2001995c_f * (x**2) * ((y_6)**34) + 
            L0x2001995e_f * (x**3) * ((y_6)**34) + 
            L0x20019960_f * (x**0) * ((y_6)**35) + 
            L0x20019962_f * (x**1) * ((y_6)**35) + 
            L0x20019964_f * (x**2) * ((y_6)**35) + 
            L0x20019966_f * (x**3) * ((y_6)**35) + 
            L0x20019968_f * (x**0) * ((y_6)**36) + 
            L0x2001996a_f * (x**1) * ((y_6)**36) + 
            L0x2001996c_f * (x**2) * ((y_6)**36) + 
            L0x2001996e_f * (x**3) * ((y_6)**36) + 
            L0x20019970_f * (x**0) * ((y_6)**37) + 
            L0x20019972_f * (x**1) * ((y_6)**37) + 
            L0x20019974_f * (x**2) * ((y_6)**37) + 
            L0x20019976_f * (x**3) * ((y_6)**37) + 
            L0x20019978_f * (x**0) * ((y_6)**38) + 
            L0x2001997a_f * (x**1) * ((y_6)**38) + 
            L0x2001997c_f * (x**2) * ((y_6)**38) + 
            L0x2001997e_f * (x**3) * ((y_6)**38) + 
            L0x20019980_f * (x**0) * ((y_6)**39) + 
            L0x20019982_f * (x**1) * ((y_6)**39) + 
            L0x20019984_f * (x**2) * ((y_6)**39) + 
            L0x20019986_f * (x**3) * ((y_6)**39) + 
            L0x20019988_f * (x**0) * ((y_6)**40) + 
            L0x2001998a_f * (x**1) * ((y_6)**40) + 
            L0x2001998c_f * (x**2) * ((y_6)**40) + 
            L0x2001998e_f * (x**3) * ((y_6)**40) + 
            L0x20019990_f * (x**0) * ((y_6)**41) + 
            L0x20019992_f * (x**1) * ((y_6)**41) + 
            L0x20019994_f * (x**2) * ((y_6)**41) + 
            L0x20019996_f * (x**3) * ((y_6)**41) + 
            L0x20019998_f * (x**0) * ((y_6)**42) + 
            L0x2001999a_f * (x**1) * ((y_6)**42) + 
            L0x2001999c_f * (x**2) * ((y_6)**42) + 
            L0x2001999e_f * (x**3) * ((y_6)**42) + 
            L0x200199a0_f * (x**0) * ((y_6)**43) + 
            L0x200199a2_f * (x**1) * ((y_6)**43) + 
            L0x200199a4_f * (x**2) * ((y_6)**43) + 
            L0x200199a6_f * (x**3) * ((y_6)**43) + 
            L0x200199a8_f * (x**0) * ((y_6)**44) + 
            L0x200199aa_f * (x**1) * ((y_6)**44) + 
            L0x200199ac_f * (x**2) * ((y_6)**44) + 
            L0x200199ae_f * (x**3) * ((y_6)**44) + 
            L0x200199b0_f * (x**0) * ((y_6)**45) + 
            L0x200199b2_f * (x**1) * ((y_6)**45) + 
            L0x200199b4_f * (x**2) * ((y_6)**45) + 
            L0x200199b6_f * (x**3) * ((y_6)**45) + 
            L0x200199b8_f * (x**0) * ((y_6)**46) + 
            L0x200199ba_f * (x**1) * ((y_6)**46) + 
            L0x200199bc_f * (x**2) * ((y_6)**46) + 
            L0x200199be_f * (x**3) * ((y_6)**46) + 
            L0x200199c0_f * (x**0) * ((y_6)**47) + 
            L0x200199c2_f * (x**1) * ((y_6)**47) + 
            L0x200199c4_f * (x**2) * ((y_6)**47) + 
            L0x200199c6_f * (x**3) * ((y_6)**47) + 
            L0x200199c8_f * (x**0) * ((y_6)**48) + 
            L0x200199ca_f * (x**1) * ((y_6)**48) + 
            L0x200199cc_f * (x**2) * ((y_6)**48) + 
            L0x200199ce_f * (x**3) * ((y_6)**48) + 
            L0x200199d0_f * (x**0) * ((y_6)**49) + 
            L0x200199d2_f * (x**1) * ((y_6)**49) + 
            L0x200199d4_f * (x**2) * ((y_6)**49) + 
            L0x200199d6_f * (x**3) * ((y_6)**49) + 
            L0x200199d8_f * (x**0) * ((y_6)**50) + 
            L0x200199da_f * (x**1) * ((y_6)**50) + 
            L0x200199dc_f * (x**2) * ((y_6)**50) + 
            L0x200199de_f * (x**3) * ((y_6)**50) + 
            L0x200199e0_f * (x**0) * ((y_6)**51) + 
            L0x200199e2_f * (x**1) * ((y_6)**51) + 
            L0x200199e4_f * (x**2) * ((y_6)**51) + 
            L0x200199e6_f * (x**3) * ((y_6)**51) + 
            L0x200199e8_f * (x**0) * ((y_6)**52) + 
            L0x200199ea_f * (x**1) * ((y_6)**52) + 
            L0x200199ec_f * (x**2) * ((y_6)**52) + 
            L0x200199ee_f * (x**3) * ((y_6)**52) + 
            L0x200199f0_f * (x**0) * ((y_6)**53) + 
            L0x200199f2_f * (x**1) * ((y_6)**53) + 
            L0x200199f4_f * (x**2) * ((y_6)**53) + 
            L0x200199f6_f * (x**3) * ((y_6)**53) + 
            L0x200199f8_f * (x**0) * ((y_6)**54) + 
            L0x200199fa_f * (x**1) * ((y_6)**54) + 
            L0x200199fc_f * (x**2) * ((y_6)**54) + 
            L0x200199fe_f * (x**3) * ((y_6)**54) + 
            L0x20019a00_f * (x**0) * ((y_6)**55) + 
            L0x20019a02_f * (x**1) * ((y_6)**55) + 
            L0x20019a04_f * (x**2) * ((y_6)**55) + 
            L0x20019a06_f * (x**3) * ((y_6)**55) + 
            L0x20019a08_f * (x**0) * ((y_6)**56) + 
            L0x20019a0a_f * (x**1) * ((y_6)**56) + 
            L0x20019a0c_f * (x**2) * ((y_6)**56) + 
            L0x20019a0e_f * (x**3) * ((y_6)**56) + 
            L0x20019a10_f * (x**0) * ((y_6)**57) + 
            L0x20019a12_f * (x**1) * ((y_6)**57) + 
            L0x20019a14_f * (x**2) * ((y_6)**57) + 
            L0x20019a16_f * (x**3) * ((y_6)**57) + 
            L0x20019a18_f * (x**0) * ((y_6)**58) + 
            L0x20019a1a_f * (x**1) * ((y_6)**58) + 
            L0x20019a1c_f * (x**2) * ((y_6)**58) + 
            L0x20019a1e_f * (x**3) * ((y_6)**58) + 
            L0x20019a20_f * (x**0) * ((y_6)**59) + 
            L0x20019a22_f * (x**1) * ((y_6)**59) + 
            L0x20019a24_f * (x**2) * ((y_6)**59) + 
            L0x20019a26_f * (x**3) * ((y_6)**59) + 
            L0x20019a28_f * (x**0) * ((y_6)**60) + 
            L0x20019a2a_f * (x**1) * ((y_6)**60) + 
            L0x20019a2c_f * (x**2) * ((y_6)**60) + 
            L0x20019a2e_f * (x**3) * ((y_6)**60) + 
            L0x20019a30_f * (x**0) * ((y_6)**61) + 
            L0x20019a32_f * (x**1) * ((y_6)**61) + 
            L0x20019a34_f * (x**2) * ((y_6)**61) + 
            L0x20019a36_f * (x**3) * ((y_6)**61) + 
            L0x20019a38_f * (x**0) * ((y_6)**62) + 
            L0x20019a3a_f * (x**1) * ((y_6)**62) + 
            L0x20019a3c_f * (x**2) * ((y_6)**62) + 
            L0x20019a3e_f * (x**3) * ((y_6)**62) + 
            L0x20019a40_f * (x**0) * ((y_6)**63) + 
            L0x20019a42_f * (x**1) * ((y_6)**63) + 
            L0x20019a44_f * (x**2) * ((y_6)**63) + 
            L0x20019a46_f * (x**3) * ((y_6)**63)
          )
          [25570049, x**4 - y_0_09 * 597243, y_0_09 - 1],
    (* inp_poly_10 *)
    eqmod (2**32) * (inp_poly_10 * inp_poly_10)
          (
            L0x20019848_f * (x**0) * ((y_6)**0) + 
            L0x2001984a_f * (x**1) * ((y_6)**0) + 
            L0x2001984c_f * (x**2) * ((y_6)**0) + 
            L0x2001984e_f * (x**3) * ((y_6)**0) + 
            L0x20019850_f * (x**0) * ((y_6)**1) + 
            L0x20019852_f * (x**1) * ((y_6)**1) + 
            L0x20019854_f * (x**2) * ((y_6)**1) + 
            L0x20019856_f * (x**3) * ((y_6)**1) + 
            L0x20019858_f * (x**0) * ((y_6)**2) + 
            L0x2001985a_f * (x**1) * ((y_6)**2) + 
            L0x2001985c_f * (x**2) * ((y_6)**2) + 
            L0x2001985e_f * (x**3) * ((y_6)**2) + 
            L0x20019860_f * (x**0) * ((y_6)**3) + 
            L0x20019862_f * (x**1) * ((y_6)**3) + 
            L0x20019864_f * (x**2) * ((y_6)**3) + 
            L0x20019866_f * (x**3) * ((y_6)**3) + 
            L0x20019868_f * (x**0) * ((y_6)**4) + 
            L0x2001986a_f * (x**1) * ((y_6)**4) + 
            L0x2001986c_f * (x**2) * ((y_6)**4) + 
            L0x2001986e_f * (x**3) * ((y_6)**4) + 
            L0x20019870_f * (x**0) * ((y_6)**5) + 
            L0x20019872_f * (x**1) * ((y_6)**5) + 
            L0x20019874_f * (x**2) * ((y_6)**5) + 
            L0x20019876_f * (x**3) * ((y_6)**5) + 
            L0x20019878_f * (x**0) * ((y_6)**6) + 
            L0x2001987a_f * (x**1) * ((y_6)**6) + 
            L0x2001987c_f * (x**2) * ((y_6)**6) + 
            L0x2001987e_f * (x**3) * ((y_6)**6) + 
            L0x20019880_f * (x**0) * ((y_6)**7) + 
            L0x20019882_f * (x**1) * ((y_6)**7) + 
            L0x20019884_f * (x**2) * ((y_6)**7) + 
            L0x20019886_f * (x**3) * ((y_6)**7) + 
            L0x20019888_f * (x**0) * ((y_6)**8) + 
            L0x2001988a_f * (x**1) * ((y_6)**8) + 
            L0x2001988c_f * (x**2) * ((y_6)**8) + 
            L0x2001988e_f * (x**3) * ((y_6)**8) + 
            L0x20019890_f * (x**0) * ((y_6)**9) + 
            L0x20019892_f * (x**1) * ((y_6)**9) + 
            L0x20019894_f * (x**2) * ((y_6)**9) + 
            L0x20019896_f * (x**3) * ((y_6)**9) + 
            L0x20019898_f * (x**0) * ((y_6)**10) + 
            L0x2001989a_f * (x**1) * ((y_6)**10) + 
            L0x2001989c_f * (x**2) * ((y_6)**10) + 
            L0x2001989e_f * (x**3) * ((y_6)**10) + 
            L0x200198a0_f * (x**0) * ((y_6)**11) + 
            L0x200198a2_f * (x**1) * ((y_6)**11) + 
            L0x200198a4_f * (x**2) * ((y_6)**11) + 
            L0x200198a6_f * (x**3) * ((y_6)**11) + 
            L0x200198a8_f * (x**0) * ((y_6)**12) + 
            L0x200198aa_f * (x**1) * ((y_6)**12) + 
            L0x200198ac_f * (x**2) * ((y_6)**12) + 
            L0x200198ae_f * (x**3) * ((y_6)**12) + 
            L0x200198b0_f * (x**0) * ((y_6)**13) + 
            L0x200198b2_f * (x**1) * ((y_6)**13) + 
            L0x200198b4_f * (x**2) * ((y_6)**13) + 
            L0x200198b6_f * (x**3) * ((y_6)**13) + 
            L0x200198b8_f * (x**0) * ((y_6)**14) + 
            L0x200198ba_f * (x**1) * ((y_6)**14) + 
            L0x200198bc_f * (x**2) * ((y_6)**14) + 
            L0x200198be_f * (x**3) * ((y_6)**14) + 
            L0x200198c0_f * (x**0) * ((y_6)**15) + 
            L0x200198c2_f * (x**1) * ((y_6)**15) + 
            L0x200198c4_f * (x**2) * ((y_6)**15) + 
            L0x200198c6_f * (x**3) * ((y_6)**15) + 
            L0x200198c8_f * (x**0) * ((y_6)**16) + 
            L0x200198ca_f * (x**1) * ((y_6)**16) + 
            L0x200198cc_f * (x**2) * ((y_6)**16) + 
            L0x200198ce_f * (x**3) * ((y_6)**16) + 
            L0x200198d0_f * (x**0) * ((y_6)**17) + 
            L0x200198d2_f * (x**1) * ((y_6)**17) + 
            L0x200198d4_f * (x**2) * ((y_6)**17) + 
            L0x200198d6_f * (x**3) * ((y_6)**17) + 
            L0x200198d8_f * (x**0) * ((y_6)**18) + 
            L0x200198da_f * (x**1) * ((y_6)**18) + 
            L0x200198dc_f * (x**2) * ((y_6)**18) + 
            L0x200198de_f * (x**3) * ((y_6)**18) + 
            L0x200198e0_f * (x**0) * ((y_6)**19) + 
            L0x200198e2_f * (x**1) * ((y_6)**19) + 
            L0x200198e4_f * (x**2) * ((y_6)**19) + 
            L0x200198e6_f * (x**3) * ((y_6)**19) + 
            L0x200198e8_f * (x**0) * ((y_6)**20) + 
            L0x200198ea_f * (x**1) * ((y_6)**20) + 
            L0x200198ec_f * (x**2) * ((y_6)**20) + 
            L0x200198ee_f * (x**3) * ((y_6)**20) + 
            L0x200198f0_f * (x**0) * ((y_6)**21) + 
            L0x200198f2_f * (x**1) * ((y_6)**21) + 
            L0x200198f4_f * (x**2) * ((y_6)**21) + 
            L0x200198f6_f * (x**3) * ((y_6)**21) + 
            L0x200198f8_f * (x**0) * ((y_6)**22) + 
            L0x200198fa_f * (x**1) * ((y_6)**22) + 
            L0x200198fc_f * (x**2) * ((y_6)**22) + 
            L0x200198fe_f * (x**3) * ((y_6)**22) + 
            L0x20019900_f * (x**0) * ((y_6)**23) + 
            L0x20019902_f * (x**1) * ((y_6)**23) + 
            L0x20019904_f * (x**2) * ((y_6)**23) + 
            L0x20019906_f * (x**3) * ((y_6)**23) + 
            L0x20019908_f * (x**0) * ((y_6)**24) + 
            L0x2001990a_f * (x**1) * ((y_6)**24) + 
            L0x2001990c_f * (x**2) * ((y_6)**24) + 
            L0x2001990e_f * (x**3) * ((y_6)**24) + 
            L0x20019910_f * (x**0) * ((y_6)**25) + 
            L0x20019912_f * (x**1) * ((y_6)**25) + 
            L0x20019914_f * (x**2) * ((y_6)**25) + 
            L0x20019916_f * (x**3) * ((y_6)**25) + 
            L0x20019918_f * (x**0) * ((y_6)**26) + 
            L0x2001991a_f * (x**1) * ((y_6)**26) + 
            L0x2001991c_f * (x**2) * ((y_6)**26) + 
            L0x2001991e_f * (x**3) * ((y_6)**26) + 
            L0x20019920_f * (x**0) * ((y_6)**27) + 
            L0x20019922_f * (x**1) * ((y_6)**27) + 
            L0x20019924_f * (x**2) * ((y_6)**27) + 
            L0x20019926_f * (x**3) * ((y_6)**27) + 
            L0x20019928_f * (x**0) * ((y_6)**28) + 
            L0x2001992a_f * (x**1) * ((y_6)**28) + 
            L0x2001992c_f * (x**2) * ((y_6)**28) + 
            L0x2001992e_f * (x**3) * ((y_6)**28) + 
            L0x20019930_f * (x**0) * ((y_6)**29) + 
            L0x20019932_f * (x**1) * ((y_6)**29) + 
            L0x20019934_f * (x**2) * ((y_6)**29) + 
            L0x20019936_f * (x**3) * ((y_6)**29) + 
            L0x20019938_f * (x**0) * ((y_6)**30) + 
            L0x2001993a_f * (x**1) * ((y_6)**30) + 
            L0x2001993c_f * (x**2) * ((y_6)**30) + 
            L0x2001993e_f * (x**3) * ((y_6)**30) + 
            L0x20019940_f * (x**0) * ((y_6)**31) + 
            L0x20019942_f * (x**1) * ((y_6)**31) + 
            L0x20019944_f * (x**2) * ((y_6)**31) + 
            L0x20019946_f * (x**3) * ((y_6)**31) + 
            L0x20019948_f * (x**0) * ((y_6)**32) + 
            L0x2001994a_f * (x**1) * ((y_6)**32) + 
            L0x2001994c_f * (x**2) * ((y_6)**32) + 
            L0x2001994e_f * (x**3) * ((y_6)**32) + 
            L0x20019950_f * (x**0) * ((y_6)**33) + 
            L0x20019952_f * (x**1) * ((y_6)**33) + 
            L0x20019954_f * (x**2) * ((y_6)**33) + 
            L0x20019956_f * (x**3) * ((y_6)**33) + 
            L0x20019958_f * (x**0) * ((y_6)**34) + 
            L0x2001995a_f * (x**1) * ((y_6)**34) + 
            L0x2001995c_f * (x**2) * ((y_6)**34) + 
            L0x2001995e_f * (x**3) * ((y_6)**34) + 
            L0x20019960_f * (x**0) * ((y_6)**35) + 
            L0x20019962_f * (x**1) * ((y_6)**35) + 
            L0x20019964_f * (x**2) * ((y_6)**35) + 
            L0x20019966_f * (x**3) * ((y_6)**35) + 
            L0x20019968_f * (x**0) * ((y_6)**36) + 
            L0x2001996a_f * (x**1) * ((y_6)**36) + 
            L0x2001996c_f * (x**2) * ((y_6)**36) + 
            L0x2001996e_f * (x**3) * ((y_6)**36) + 
            L0x20019970_f * (x**0) * ((y_6)**37) + 
            L0x20019972_f * (x**1) * ((y_6)**37) + 
            L0x20019974_f * (x**2) * ((y_6)**37) + 
            L0x20019976_f * (x**3) * ((y_6)**37) + 
            L0x20019978_f * (x**0) * ((y_6)**38) + 
            L0x2001997a_f * (x**1) * ((y_6)**38) + 
            L0x2001997c_f * (x**2) * ((y_6)**38) + 
            L0x2001997e_f * (x**3) * ((y_6)**38) + 
            L0x20019980_f * (x**0) * ((y_6)**39) + 
            L0x20019982_f * (x**1) * ((y_6)**39) + 
            L0x20019984_f * (x**2) * ((y_6)**39) + 
            L0x20019986_f * (x**3) * ((y_6)**39) + 
            L0x20019988_f * (x**0) * ((y_6)**40) + 
            L0x2001998a_f * (x**1) * ((y_6)**40) + 
            L0x2001998c_f * (x**2) * ((y_6)**40) + 
            L0x2001998e_f * (x**3) * ((y_6)**40) + 
            L0x20019990_f * (x**0) * ((y_6)**41) + 
            L0x20019992_f * (x**1) * ((y_6)**41) + 
            L0x20019994_f * (x**2) * ((y_6)**41) + 
            L0x20019996_f * (x**3) * ((y_6)**41) + 
            L0x20019998_f * (x**0) * ((y_6)**42) + 
            L0x2001999a_f * (x**1) * ((y_6)**42) + 
            L0x2001999c_f * (x**2) * ((y_6)**42) + 
            L0x2001999e_f * (x**3) * ((y_6)**42) + 
            L0x200199a0_f * (x**0) * ((y_6)**43) + 
            L0x200199a2_f * (x**1) * ((y_6)**43) + 
            L0x200199a4_f * (x**2) * ((y_6)**43) + 
            L0x200199a6_f * (x**3) * ((y_6)**43) + 
            L0x200199a8_f * (x**0) * ((y_6)**44) + 
            L0x200199aa_f * (x**1) * ((y_6)**44) + 
            L0x200199ac_f * (x**2) * ((y_6)**44) + 
            L0x200199ae_f * (x**3) * ((y_6)**44) + 
            L0x200199b0_f * (x**0) * ((y_6)**45) + 
            L0x200199b2_f * (x**1) * ((y_6)**45) + 
            L0x200199b4_f * (x**2) * ((y_6)**45) + 
            L0x200199b6_f * (x**3) * ((y_6)**45) + 
            L0x200199b8_f * (x**0) * ((y_6)**46) + 
            L0x200199ba_f * (x**1) * ((y_6)**46) + 
            L0x200199bc_f * (x**2) * ((y_6)**46) + 
            L0x200199be_f * (x**3) * ((y_6)**46) + 
            L0x200199c0_f * (x**0) * ((y_6)**47) + 
            L0x200199c2_f * (x**1) * ((y_6)**47) + 
            L0x200199c4_f * (x**2) * ((y_6)**47) + 
            L0x200199c6_f * (x**3) * ((y_6)**47) + 
            L0x200199c8_f * (x**0) * ((y_6)**48) + 
            L0x200199ca_f * (x**1) * ((y_6)**48) + 
            L0x200199cc_f * (x**2) * ((y_6)**48) + 
            L0x200199ce_f * (x**3) * ((y_6)**48) + 
            L0x200199d0_f * (x**0) * ((y_6)**49) + 
            L0x200199d2_f * (x**1) * ((y_6)**49) + 
            L0x200199d4_f * (x**2) * ((y_6)**49) + 
            L0x200199d6_f * (x**3) * ((y_6)**49) + 
            L0x200199d8_f * (x**0) * ((y_6)**50) + 
            L0x200199da_f * (x**1) * ((y_6)**50) + 
            L0x200199dc_f * (x**2) * ((y_6)**50) + 
            L0x200199de_f * (x**3) * ((y_6)**50) + 
            L0x200199e0_f * (x**0) * ((y_6)**51) + 
            L0x200199e2_f * (x**1) * ((y_6)**51) + 
            L0x200199e4_f * (x**2) * ((y_6)**51) + 
            L0x200199e6_f * (x**3) * ((y_6)**51) + 
            L0x200199e8_f * (x**0) * ((y_6)**52) + 
            L0x200199ea_f * (x**1) * ((y_6)**52) + 
            L0x200199ec_f * (x**2) * ((y_6)**52) + 
            L0x200199ee_f * (x**3) * ((y_6)**52) + 
            L0x200199f0_f * (x**0) * ((y_6)**53) + 
            L0x200199f2_f * (x**1) * ((y_6)**53) + 
            L0x200199f4_f * (x**2) * ((y_6)**53) + 
            L0x200199f6_f * (x**3) * ((y_6)**53) + 
            L0x200199f8_f * (x**0) * ((y_6)**54) + 
            L0x200199fa_f * (x**1) * ((y_6)**54) + 
            L0x200199fc_f * (x**2) * ((y_6)**54) + 
            L0x200199fe_f * (x**3) * ((y_6)**54) + 
            L0x20019a00_f * (x**0) * ((y_6)**55) + 
            L0x20019a02_f * (x**1) * ((y_6)**55) + 
            L0x20019a04_f * (x**2) * ((y_6)**55) + 
            L0x20019a06_f * (x**3) * ((y_6)**55) + 
            L0x20019a08_f * (x**0) * ((y_6)**56) + 
            L0x20019a0a_f * (x**1) * ((y_6)**56) + 
            L0x20019a0c_f * (x**2) * ((y_6)**56) + 
            L0x20019a0e_f * (x**3) * ((y_6)**56) + 
            L0x20019a10_f * (x**0) * ((y_6)**57) + 
            L0x20019a12_f * (x**1) * ((y_6)**57) + 
            L0x20019a14_f * (x**2) * ((y_6)**57) + 
            L0x20019a16_f * (x**3) * ((y_6)**57) + 
            L0x20019a18_f * (x**0) * ((y_6)**58) + 
            L0x20019a1a_f * (x**1) * ((y_6)**58) + 
            L0x20019a1c_f * (x**2) * ((y_6)**58) + 
            L0x20019a1e_f * (x**3) * ((y_6)**58) + 
            L0x20019a20_f * (x**0) * ((y_6)**59) + 
            L0x20019a22_f * (x**1) * ((y_6)**59) + 
            L0x20019a24_f * (x**2) * ((y_6)**59) + 
            L0x20019a26_f * (x**3) * ((y_6)**59) + 
            L0x20019a28_f * (x**0) * ((y_6)**60) + 
            L0x20019a2a_f * (x**1) * ((y_6)**60) + 
            L0x20019a2c_f * (x**2) * ((y_6)**60) + 
            L0x20019a2e_f * (x**3) * ((y_6)**60) + 
            L0x20019a30_f * (x**0) * ((y_6)**61) + 
            L0x20019a32_f * (x**1) * ((y_6)**61) + 
            L0x20019a34_f * (x**2) * ((y_6)**61) + 
            L0x20019a36_f * (x**3) * ((y_6)**61) + 
            L0x20019a38_f * (x**0) * ((y_6)**62) + 
            L0x20019a3a_f * (x**1) * ((y_6)**62) + 
            L0x20019a3c_f * (x**2) * ((y_6)**62) + 
            L0x20019a3e_f * (x**3) * ((y_6)**62) + 
            L0x20019a40_f * (x**0) * ((y_6)**63) + 
            L0x20019a42_f * (x**1) * ((y_6)**63) + 
            L0x20019a44_f * (x**2) * ((y_6)**63) + 
            L0x20019a46_f * (x**3) * ((y_6)**63)
          )
          [25570049, x**4 - y_0_10 * 4410275, y_0_10 - 1],
    (* inp_poly_11 *)
    eqmod (2**32) * (inp_poly_11 * inp_poly_11)
          (
            L0x20019848_f * (x**0) * ((y_6)**0) + 
            L0x2001984a_f * (x**1) * ((y_6)**0) + 
            L0x2001984c_f * (x**2) * ((y_6)**0) + 
            L0x2001984e_f * (x**3) * ((y_6)**0) + 
            L0x20019850_f * (x**0) * ((y_6)**1) + 
            L0x20019852_f * (x**1) * ((y_6)**1) + 
            L0x20019854_f * (x**2) * ((y_6)**1) + 
            L0x20019856_f * (x**3) * ((y_6)**1) + 
            L0x20019858_f * (x**0) * ((y_6)**2) + 
            L0x2001985a_f * (x**1) * ((y_6)**2) + 
            L0x2001985c_f * (x**2) * ((y_6)**2) + 
            L0x2001985e_f * (x**3) * ((y_6)**2) + 
            L0x20019860_f * (x**0) * ((y_6)**3) + 
            L0x20019862_f * (x**1) * ((y_6)**3) + 
            L0x20019864_f * (x**2) * ((y_6)**3) + 
            L0x20019866_f * (x**3) * ((y_6)**3) + 
            L0x20019868_f * (x**0) * ((y_6)**4) + 
            L0x2001986a_f * (x**1) * ((y_6)**4) + 
            L0x2001986c_f * (x**2) * ((y_6)**4) + 
            L0x2001986e_f * (x**3) * ((y_6)**4) + 
            L0x20019870_f * (x**0) * ((y_6)**5) + 
            L0x20019872_f * (x**1) * ((y_6)**5) + 
            L0x20019874_f * (x**2) * ((y_6)**5) + 
            L0x20019876_f * (x**3) * ((y_6)**5) + 
            L0x20019878_f * (x**0) * ((y_6)**6) + 
            L0x2001987a_f * (x**1) * ((y_6)**6) + 
            L0x2001987c_f * (x**2) * ((y_6)**6) + 
            L0x2001987e_f * (x**3) * ((y_6)**6) + 
            L0x20019880_f * (x**0) * ((y_6)**7) + 
            L0x20019882_f * (x**1) * ((y_6)**7) + 
            L0x20019884_f * (x**2) * ((y_6)**7) + 
            L0x20019886_f * (x**3) * ((y_6)**7) + 
            L0x20019888_f * (x**0) * ((y_6)**8) + 
            L0x2001988a_f * (x**1) * ((y_6)**8) + 
            L0x2001988c_f * (x**2) * ((y_6)**8) + 
            L0x2001988e_f * (x**3) * ((y_6)**8) + 
            L0x20019890_f * (x**0) * ((y_6)**9) + 
            L0x20019892_f * (x**1) * ((y_6)**9) + 
            L0x20019894_f * (x**2) * ((y_6)**9) + 
            L0x20019896_f * (x**3) * ((y_6)**9) + 
            L0x20019898_f * (x**0) * ((y_6)**10) + 
            L0x2001989a_f * (x**1) * ((y_6)**10) + 
            L0x2001989c_f * (x**2) * ((y_6)**10) + 
            L0x2001989e_f * (x**3) * ((y_6)**10) + 
            L0x200198a0_f * (x**0) * ((y_6)**11) + 
            L0x200198a2_f * (x**1) * ((y_6)**11) + 
            L0x200198a4_f * (x**2) * ((y_6)**11) + 
            L0x200198a6_f * (x**3) * ((y_6)**11) + 
            L0x200198a8_f * (x**0) * ((y_6)**12) + 
            L0x200198aa_f * (x**1) * ((y_6)**12) + 
            L0x200198ac_f * (x**2) * ((y_6)**12) + 
            L0x200198ae_f * (x**3) * ((y_6)**12) + 
            L0x200198b0_f * (x**0) * ((y_6)**13) + 
            L0x200198b2_f * (x**1) * ((y_6)**13) + 
            L0x200198b4_f * (x**2) * ((y_6)**13) + 
            L0x200198b6_f * (x**3) * ((y_6)**13) + 
            L0x200198b8_f * (x**0) * ((y_6)**14) + 
            L0x200198ba_f * (x**1) * ((y_6)**14) + 
            L0x200198bc_f * (x**2) * ((y_6)**14) + 
            L0x200198be_f * (x**3) * ((y_6)**14) + 
            L0x200198c0_f * (x**0) * ((y_6)**15) + 
            L0x200198c2_f * (x**1) * ((y_6)**15) + 
            L0x200198c4_f * (x**2) * ((y_6)**15) + 
            L0x200198c6_f * (x**3) * ((y_6)**15) + 
            L0x200198c8_f * (x**0) * ((y_6)**16) + 
            L0x200198ca_f * (x**1) * ((y_6)**16) + 
            L0x200198cc_f * (x**2) * ((y_6)**16) + 
            L0x200198ce_f * (x**3) * ((y_6)**16) + 
            L0x200198d0_f * (x**0) * ((y_6)**17) + 
            L0x200198d2_f * (x**1) * ((y_6)**17) + 
            L0x200198d4_f * (x**2) * ((y_6)**17) + 
            L0x200198d6_f * (x**3) * ((y_6)**17) + 
            L0x200198d8_f * (x**0) * ((y_6)**18) + 
            L0x200198da_f * (x**1) * ((y_6)**18) + 
            L0x200198dc_f * (x**2) * ((y_6)**18) + 
            L0x200198de_f * (x**3) * ((y_6)**18) + 
            L0x200198e0_f * (x**0) * ((y_6)**19) + 
            L0x200198e2_f * (x**1) * ((y_6)**19) + 
            L0x200198e4_f * (x**2) * ((y_6)**19) + 
            L0x200198e6_f * (x**3) * ((y_6)**19) + 
            L0x200198e8_f * (x**0) * ((y_6)**20) + 
            L0x200198ea_f * (x**1) * ((y_6)**20) + 
            L0x200198ec_f * (x**2) * ((y_6)**20) + 
            L0x200198ee_f * (x**3) * ((y_6)**20) + 
            L0x200198f0_f * (x**0) * ((y_6)**21) + 
            L0x200198f2_f * (x**1) * ((y_6)**21) + 
            L0x200198f4_f * (x**2) * ((y_6)**21) + 
            L0x200198f6_f * (x**3) * ((y_6)**21) + 
            L0x200198f8_f * (x**0) * ((y_6)**22) + 
            L0x200198fa_f * (x**1) * ((y_6)**22) + 
            L0x200198fc_f * (x**2) * ((y_6)**22) + 
            L0x200198fe_f * (x**3) * ((y_6)**22) + 
            L0x20019900_f * (x**0) * ((y_6)**23) + 
            L0x20019902_f * (x**1) * ((y_6)**23) + 
            L0x20019904_f * (x**2) * ((y_6)**23) + 
            L0x20019906_f * (x**3) * ((y_6)**23) + 
            L0x20019908_f * (x**0) * ((y_6)**24) + 
            L0x2001990a_f * (x**1) * ((y_6)**24) + 
            L0x2001990c_f * (x**2) * ((y_6)**24) + 
            L0x2001990e_f * (x**3) * ((y_6)**24) + 
            L0x20019910_f * (x**0) * ((y_6)**25) + 
            L0x20019912_f * (x**1) * ((y_6)**25) + 
            L0x20019914_f * (x**2) * ((y_6)**25) + 
            L0x20019916_f * (x**3) * ((y_6)**25) + 
            L0x20019918_f * (x**0) * ((y_6)**26) + 
            L0x2001991a_f * (x**1) * ((y_6)**26) + 
            L0x2001991c_f * (x**2) * ((y_6)**26) + 
            L0x2001991e_f * (x**3) * ((y_6)**26) + 
            L0x20019920_f * (x**0) * ((y_6)**27) + 
            L0x20019922_f * (x**1) * ((y_6)**27) + 
            L0x20019924_f * (x**2) * ((y_6)**27) + 
            L0x20019926_f * (x**3) * ((y_6)**27) + 
            L0x20019928_f * (x**0) * ((y_6)**28) + 
            L0x2001992a_f * (x**1) * ((y_6)**28) + 
            L0x2001992c_f * (x**2) * ((y_6)**28) + 
            L0x2001992e_f * (x**3) * ((y_6)**28) + 
            L0x20019930_f * (x**0) * ((y_6)**29) + 
            L0x20019932_f * (x**1) * ((y_6)**29) + 
            L0x20019934_f * (x**2) * ((y_6)**29) + 
            L0x20019936_f * (x**3) * ((y_6)**29) + 
            L0x20019938_f * (x**0) * ((y_6)**30) + 
            L0x2001993a_f * (x**1) * ((y_6)**30) + 
            L0x2001993c_f * (x**2) * ((y_6)**30) + 
            L0x2001993e_f * (x**3) * ((y_6)**30) + 
            L0x20019940_f * (x**0) * ((y_6)**31) + 
            L0x20019942_f * (x**1) * ((y_6)**31) + 
            L0x20019944_f * (x**2) * ((y_6)**31) + 
            L0x20019946_f * (x**3) * ((y_6)**31) + 
            L0x20019948_f * (x**0) * ((y_6)**32) + 
            L0x2001994a_f * (x**1) * ((y_6)**32) + 
            L0x2001994c_f * (x**2) * ((y_6)**32) + 
            L0x2001994e_f * (x**3) * ((y_6)**32) + 
            L0x20019950_f * (x**0) * ((y_6)**33) + 
            L0x20019952_f * (x**1) * ((y_6)**33) + 
            L0x20019954_f * (x**2) * ((y_6)**33) + 
            L0x20019956_f * (x**3) * ((y_6)**33) + 
            L0x20019958_f * (x**0) * ((y_6)**34) + 
            L0x2001995a_f * (x**1) * ((y_6)**34) + 
            L0x2001995c_f * (x**2) * ((y_6)**34) + 
            L0x2001995e_f * (x**3) * ((y_6)**34) + 
            L0x20019960_f * (x**0) * ((y_6)**35) + 
            L0x20019962_f * (x**1) * ((y_6)**35) + 
            L0x20019964_f * (x**2) * ((y_6)**35) + 
            L0x20019966_f * (x**3) * ((y_6)**35) + 
            L0x20019968_f * (x**0) * ((y_6)**36) + 
            L0x2001996a_f * (x**1) * ((y_6)**36) + 
            L0x2001996c_f * (x**2) * ((y_6)**36) + 
            L0x2001996e_f * (x**3) * ((y_6)**36) + 
            L0x20019970_f * (x**0) * ((y_6)**37) + 
            L0x20019972_f * (x**1) * ((y_6)**37) + 
            L0x20019974_f * (x**2) * ((y_6)**37) + 
            L0x20019976_f * (x**3) * ((y_6)**37) + 
            L0x20019978_f * (x**0) * ((y_6)**38) + 
            L0x2001997a_f * (x**1) * ((y_6)**38) + 
            L0x2001997c_f * (x**2) * ((y_6)**38) + 
            L0x2001997e_f * (x**3) * ((y_6)**38) + 
            L0x20019980_f * (x**0) * ((y_6)**39) + 
            L0x20019982_f * (x**1) * ((y_6)**39) + 
            L0x20019984_f * (x**2) * ((y_6)**39) + 
            L0x20019986_f * (x**3) * ((y_6)**39) + 
            L0x20019988_f * (x**0) * ((y_6)**40) + 
            L0x2001998a_f * (x**1) * ((y_6)**40) + 
            L0x2001998c_f * (x**2) * ((y_6)**40) + 
            L0x2001998e_f * (x**3) * ((y_6)**40) + 
            L0x20019990_f * (x**0) * ((y_6)**41) + 
            L0x20019992_f * (x**1) * ((y_6)**41) + 
            L0x20019994_f * (x**2) * ((y_6)**41) + 
            L0x20019996_f * (x**3) * ((y_6)**41) + 
            L0x20019998_f * (x**0) * ((y_6)**42) + 
            L0x2001999a_f * (x**1) * ((y_6)**42) + 
            L0x2001999c_f * (x**2) * ((y_6)**42) + 
            L0x2001999e_f * (x**3) * ((y_6)**42) + 
            L0x200199a0_f * (x**0) * ((y_6)**43) + 
            L0x200199a2_f * (x**1) * ((y_6)**43) + 
            L0x200199a4_f * (x**2) * ((y_6)**43) + 
            L0x200199a6_f * (x**3) * ((y_6)**43) + 
            L0x200199a8_f * (x**0) * ((y_6)**44) + 
            L0x200199aa_f * (x**1) * ((y_6)**44) + 
            L0x200199ac_f * (x**2) * ((y_6)**44) + 
            L0x200199ae_f * (x**3) * ((y_6)**44) + 
            L0x200199b0_f * (x**0) * ((y_6)**45) + 
            L0x200199b2_f * (x**1) * ((y_6)**45) + 
            L0x200199b4_f * (x**2) * ((y_6)**45) + 
            L0x200199b6_f * (x**3) * ((y_6)**45) + 
            L0x200199b8_f * (x**0) * ((y_6)**46) + 
            L0x200199ba_f * (x**1) * ((y_6)**46) + 
            L0x200199bc_f * (x**2) * ((y_6)**46) + 
            L0x200199be_f * (x**3) * ((y_6)**46) + 
            L0x200199c0_f * (x**0) * ((y_6)**47) + 
            L0x200199c2_f * (x**1) * ((y_6)**47) + 
            L0x200199c4_f * (x**2) * ((y_6)**47) + 
            L0x200199c6_f * (x**3) * ((y_6)**47) + 
            L0x200199c8_f * (x**0) * ((y_6)**48) + 
            L0x200199ca_f * (x**1) * ((y_6)**48) + 
            L0x200199cc_f * (x**2) * ((y_6)**48) + 
            L0x200199ce_f * (x**3) * ((y_6)**48) + 
            L0x200199d0_f * (x**0) * ((y_6)**49) + 
            L0x200199d2_f * (x**1) * ((y_6)**49) + 
            L0x200199d4_f * (x**2) * ((y_6)**49) + 
            L0x200199d6_f * (x**3) * ((y_6)**49) + 
            L0x200199d8_f * (x**0) * ((y_6)**50) + 
            L0x200199da_f * (x**1) * ((y_6)**50) + 
            L0x200199dc_f * (x**2) * ((y_6)**50) + 
            L0x200199de_f * (x**3) * ((y_6)**50) + 
            L0x200199e0_f * (x**0) * ((y_6)**51) + 
            L0x200199e2_f * (x**1) * ((y_6)**51) + 
            L0x200199e4_f * (x**2) * ((y_6)**51) + 
            L0x200199e6_f * (x**3) * ((y_6)**51) + 
            L0x200199e8_f * (x**0) * ((y_6)**52) + 
            L0x200199ea_f * (x**1) * ((y_6)**52) + 
            L0x200199ec_f * (x**2) * ((y_6)**52) + 
            L0x200199ee_f * (x**3) * ((y_6)**52) + 
            L0x200199f0_f * (x**0) * ((y_6)**53) + 
            L0x200199f2_f * (x**1) * ((y_6)**53) + 
            L0x200199f4_f * (x**2) * ((y_6)**53) + 
            L0x200199f6_f * (x**3) * ((y_6)**53) + 
            L0x200199f8_f * (x**0) * ((y_6)**54) + 
            L0x200199fa_f * (x**1) * ((y_6)**54) + 
            L0x200199fc_f * (x**2) * ((y_6)**54) + 
            L0x200199fe_f * (x**3) * ((y_6)**54) + 
            L0x20019a00_f * (x**0) * ((y_6)**55) + 
            L0x20019a02_f * (x**1) * ((y_6)**55) + 
            L0x20019a04_f * (x**2) * ((y_6)**55) + 
            L0x20019a06_f * (x**3) * ((y_6)**55) + 
            L0x20019a08_f * (x**0) * ((y_6)**56) + 
            L0x20019a0a_f * (x**1) * ((y_6)**56) + 
            L0x20019a0c_f * (x**2) * ((y_6)**56) + 
            L0x20019a0e_f * (x**3) * ((y_6)**56) + 
            L0x20019a10_f * (x**0) * ((y_6)**57) + 
            L0x20019a12_f * (x**1) * ((y_6)**57) + 
            L0x20019a14_f * (x**2) * ((y_6)**57) + 
            L0x20019a16_f * (x**3) * ((y_6)**57) + 
            L0x20019a18_f * (x**0) * ((y_6)**58) + 
            L0x20019a1a_f * (x**1) * ((y_6)**58) + 
            L0x20019a1c_f * (x**2) * ((y_6)**58) + 
            L0x20019a1e_f * (x**3) * ((y_6)**58) + 
            L0x20019a20_f * (x**0) * ((y_6)**59) + 
            L0x20019a22_f * (x**1) * ((y_6)**59) + 
            L0x20019a24_f * (x**2) * ((y_6)**59) + 
            L0x20019a26_f * (x**3) * ((y_6)**59) + 
            L0x20019a28_f * (x**0) * ((y_6)**60) + 
            L0x20019a2a_f * (x**1) * ((y_6)**60) + 
            L0x20019a2c_f * (x**2) * ((y_6)**60) + 
            L0x20019a2e_f * (x**3) * ((y_6)**60) + 
            L0x20019a30_f * (x**0) * ((y_6)**61) + 
            L0x20019a32_f * (x**1) * ((y_6)**61) + 
            L0x20019a34_f * (x**2) * ((y_6)**61) + 
            L0x20019a36_f * (x**3) * ((y_6)**61) + 
            L0x20019a38_f * (x**0) * ((y_6)**62) + 
            L0x20019a3a_f * (x**1) * ((y_6)**62) + 
            L0x20019a3c_f * (x**2) * ((y_6)**62) + 
            L0x20019a3e_f * (x**3) * ((y_6)**62) + 
            L0x20019a40_f * (x**0) * ((y_6)**63) + 
            L0x20019a42_f * (x**1) * ((y_6)**63) + 
            L0x20019a44_f * (x**2) * ((y_6)**63) + 
            L0x20019a46_f * (x**3) * ((y_6)**63)
          )
          [25570049, x**4 - y_0_11 * 21159774, y_0_11 - 1],
    (* inp_poly_12 *)
    eqmod (2**32) * (inp_poly_12 * inp_poly_12)
          (
            L0x20019848_f * (x**0) * ((y_6)**0) + 
            L0x2001984a_f * (x**1) * ((y_6)**0) + 
            L0x2001984c_f * (x**2) * ((y_6)**0) + 
            L0x2001984e_f * (x**3) * ((y_6)**0) + 
            L0x20019850_f * (x**0) * ((y_6)**1) + 
            L0x20019852_f * (x**1) * ((y_6)**1) + 
            L0x20019854_f * (x**2) * ((y_6)**1) + 
            L0x20019856_f * (x**3) * ((y_6)**1) + 
            L0x20019858_f * (x**0) * ((y_6)**2) + 
            L0x2001985a_f * (x**1) * ((y_6)**2) + 
            L0x2001985c_f * (x**2) * ((y_6)**2) + 
            L0x2001985e_f * (x**3) * ((y_6)**2) + 
            L0x20019860_f * (x**0) * ((y_6)**3) + 
            L0x20019862_f * (x**1) * ((y_6)**3) + 
            L0x20019864_f * (x**2) * ((y_6)**3) + 
            L0x20019866_f * (x**3) * ((y_6)**3) + 
            L0x20019868_f * (x**0) * ((y_6)**4) + 
            L0x2001986a_f * (x**1) * ((y_6)**4) + 
            L0x2001986c_f * (x**2) * ((y_6)**4) + 
            L0x2001986e_f * (x**3) * ((y_6)**4) + 
            L0x20019870_f * (x**0) * ((y_6)**5) + 
            L0x20019872_f * (x**1) * ((y_6)**5) + 
            L0x20019874_f * (x**2) * ((y_6)**5) + 
            L0x20019876_f * (x**3) * ((y_6)**5) + 
            L0x20019878_f * (x**0) * ((y_6)**6) + 
            L0x2001987a_f * (x**1) * ((y_6)**6) + 
            L0x2001987c_f * (x**2) * ((y_6)**6) + 
            L0x2001987e_f * (x**3) * ((y_6)**6) + 
            L0x20019880_f * (x**0) * ((y_6)**7) + 
            L0x20019882_f * (x**1) * ((y_6)**7) + 
            L0x20019884_f * (x**2) * ((y_6)**7) + 
            L0x20019886_f * (x**3) * ((y_6)**7) + 
            L0x20019888_f * (x**0) * ((y_6)**8) + 
            L0x2001988a_f * (x**1) * ((y_6)**8) + 
            L0x2001988c_f * (x**2) * ((y_6)**8) + 
            L0x2001988e_f * (x**3) * ((y_6)**8) + 
            L0x20019890_f * (x**0) * ((y_6)**9) + 
            L0x20019892_f * (x**1) * ((y_6)**9) + 
            L0x20019894_f * (x**2) * ((y_6)**9) + 
            L0x20019896_f * (x**3) * ((y_6)**9) + 
            L0x20019898_f * (x**0) * ((y_6)**10) + 
            L0x2001989a_f * (x**1) * ((y_6)**10) + 
            L0x2001989c_f * (x**2) * ((y_6)**10) + 
            L0x2001989e_f * (x**3) * ((y_6)**10) + 
            L0x200198a0_f * (x**0) * ((y_6)**11) + 
            L0x200198a2_f * (x**1) * ((y_6)**11) + 
            L0x200198a4_f * (x**2) * ((y_6)**11) + 
            L0x200198a6_f * (x**3) * ((y_6)**11) + 
            L0x200198a8_f * (x**0) * ((y_6)**12) + 
            L0x200198aa_f * (x**1) * ((y_6)**12) + 
            L0x200198ac_f * (x**2) * ((y_6)**12) + 
            L0x200198ae_f * (x**3) * ((y_6)**12) + 
            L0x200198b0_f * (x**0) * ((y_6)**13) + 
            L0x200198b2_f * (x**1) * ((y_6)**13) + 
            L0x200198b4_f * (x**2) * ((y_6)**13) + 
            L0x200198b6_f * (x**3) * ((y_6)**13) + 
            L0x200198b8_f * (x**0) * ((y_6)**14) + 
            L0x200198ba_f * (x**1) * ((y_6)**14) + 
            L0x200198bc_f * (x**2) * ((y_6)**14) + 
            L0x200198be_f * (x**3) * ((y_6)**14) + 
            L0x200198c0_f * (x**0) * ((y_6)**15) + 
            L0x200198c2_f * (x**1) * ((y_6)**15) + 
            L0x200198c4_f * (x**2) * ((y_6)**15) + 
            L0x200198c6_f * (x**3) * ((y_6)**15) + 
            L0x200198c8_f * (x**0) * ((y_6)**16) + 
            L0x200198ca_f * (x**1) * ((y_6)**16) + 
            L0x200198cc_f * (x**2) * ((y_6)**16) + 
            L0x200198ce_f * (x**3) * ((y_6)**16) + 
            L0x200198d0_f * (x**0) * ((y_6)**17) + 
            L0x200198d2_f * (x**1) * ((y_6)**17) + 
            L0x200198d4_f * (x**2) * ((y_6)**17) + 
            L0x200198d6_f * (x**3) * ((y_6)**17) + 
            L0x200198d8_f * (x**0) * ((y_6)**18) + 
            L0x200198da_f * (x**1) * ((y_6)**18) + 
            L0x200198dc_f * (x**2) * ((y_6)**18) + 
            L0x200198de_f * (x**3) * ((y_6)**18) + 
            L0x200198e0_f * (x**0) * ((y_6)**19) + 
            L0x200198e2_f * (x**1) * ((y_6)**19) + 
            L0x200198e4_f * (x**2) * ((y_6)**19) + 
            L0x200198e6_f * (x**3) * ((y_6)**19) + 
            L0x200198e8_f * (x**0) * ((y_6)**20) + 
            L0x200198ea_f * (x**1) * ((y_6)**20) + 
            L0x200198ec_f * (x**2) * ((y_6)**20) + 
            L0x200198ee_f * (x**3) * ((y_6)**20) + 
            L0x200198f0_f * (x**0) * ((y_6)**21) + 
            L0x200198f2_f * (x**1) * ((y_6)**21) + 
            L0x200198f4_f * (x**2) * ((y_6)**21) + 
            L0x200198f6_f * (x**3) * ((y_6)**21) + 
            L0x200198f8_f * (x**0) * ((y_6)**22) + 
            L0x200198fa_f * (x**1) * ((y_6)**22) + 
            L0x200198fc_f * (x**2) * ((y_6)**22) + 
            L0x200198fe_f * (x**3) * ((y_6)**22) + 
            L0x20019900_f * (x**0) * ((y_6)**23) + 
            L0x20019902_f * (x**1) * ((y_6)**23) + 
            L0x20019904_f * (x**2) * ((y_6)**23) + 
            L0x20019906_f * (x**3) * ((y_6)**23) + 
            L0x20019908_f * (x**0) * ((y_6)**24) + 
            L0x2001990a_f * (x**1) * ((y_6)**24) + 
            L0x2001990c_f * (x**2) * ((y_6)**24) + 
            L0x2001990e_f * (x**3) * ((y_6)**24) + 
            L0x20019910_f * (x**0) * ((y_6)**25) + 
            L0x20019912_f * (x**1) * ((y_6)**25) + 
            L0x20019914_f * (x**2) * ((y_6)**25) + 
            L0x20019916_f * (x**3) * ((y_6)**25) + 
            L0x20019918_f * (x**0) * ((y_6)**26) + 
            L0x2001991a_f * (x**1) * ((y_6)**26) + 
            L0x2001991c_f * (x**2) * ((y_6)**26) + 
            L0x2001991e_f * (x**3) * ((y_6)**26) + 
            L0x20019920_f * (x**0) * ((y_6)**27) + 
            L0x20019922_f * (x**1) * ((y_6)**27) + 
            L0x20019924_f * (x**2) * ((y_6)**27) + 
            L0x20019926_f * (x**3) * ((y_6)**27) + 
            L0x20019928_f * (x**0) * ((y_6)**28) + 
            L0x2001992a_f * (x**1) * ((y_6)**28) + 
            L0x2001992c_f * (x**2) * ((y_6)**28) + 
            L0x2001992e_f * (x**3) * ((y_6)**28) + 
            L0x20019930_f * (x**0) * ((y_6)**29) + 
            L0x20019932_f * (x**1) * ((y_6)**29) + 
            L0x20019934_f * (x**2) * ((y_6)**29) + 
            L0x20019936_f * (x**3) * ((y_6)**29) + 
            L0x20019938_f * (x**0) * ((y_6)**30) + 
            L0x2001993a_f * (x**1) * ((y_6)**30) + 
            L0x2001993c_f * (x**2) * ((y_6)**30) + 
            L0x2001993e_f * (x**3) * ((y_6)**30) + 
            L0x20019940_f * (x**0) * ((y_6)**31) + 
            L0x20019942_f * (x**1) * ((y_6)**31) + 
            L0x20019944_f * (x**2) * ((y_6)**31) + 
            L0x20019946_f * (x**3) * ((y_6)**31) + 
            L0x20019948_f * (x**0) * ((y_6)**32) + 
            L0x2001994a_f * (x**1) * ((y_6)**32) + 
            L0x2001994c_f * (x**2) * ((y_6)**32) + 
            L0x2001994e_f * (x**3) * ((y_6)**32) + 
            L0x20019950_f * (x**0) * ((y_6)**33) + 
            L0x20019952_f * (x**1) * ((y_6)**33) + 
            L0x20019954_f * (x**2) * ((y_6)**33) + 
            L0x20019956_f * (x**3) * ((y_6)**33) + 
            L0x20019958_f * (x**0) * ((y_6)**34) + 
            L0x2001995a_f * (x**1) * ((y_6)**34) + 
            L0x2001995c_f * (x**2) * ((y_6)**34) + 
            L0x2001995e_f * (x**3) * ((y_6)**34) + 
            L0x20019960_f * (x**0) * ((y_6)**35) + 
            L0x20019962_f * (x**1) * ((y_6)**35) + 
            L0x20019964_f * (x**2) * ((y_6)**35) + 
            L0x20019966_f * (x**3) * ((y_6)**35) + 
            L0x20019968_f * (x**0) * ((y_6)**36) + 
            L0x2001996a_f * (x**1) * ((y_6)**36) + 
            L0x2001996c_f * (x**2) * ((y_6)**36) + 
            L0x2001996e_f * (x**3) * ((y_6)**36) + 
            L0x20019970_f * (x**0) * ((y_6)**37) + 
            L0x20019972_f * (x**1) * ((y_6)**37) + 
            L0x20019974_f * (x**2) * ((y_6)**37) + 
            L0x20019976_f * (x**3) * ((y_6)**37) + 
            L0x20019978_f * (x**0) * ((y_6)**38) + 
            L0x2001997a_f * (x**1) * ((y_6)**38) + 
            L0x2001997c_f * (x**2) * ((y_6)**38) + 
            L0x2001997e_f * (x**3) * ((y_6)**38) + 
            L0x20019980_f * (x**0) * ((y_6)**39) + 
            L0x20019982_f * (x**1) * ((y_6)**39) + 
            L0x20019984_f * (x**2) * ((y_6)**39) + 
            L0x20019986_f * (x**3) * ((y_6)**39) + 
            L0x20019988_f * (x**0) * ((y_6)**40) + 
            L0x2001998a_f * (x**1) * ((y_6)**40) + 
            L0x2001998c_f * (x**2) * ((y_6)**40) + 
            L0x2001998e_f * (x**3) * ((y_6)**40) + 
            L0x20019990_f * (x**0) * ((y_6)**41) + 
            L0x20019992_f * (x**1) * ((y_6)**41) + 
            L0x20019994_f * (x**2) * ((y_6)**41) + 
            L0x20019996_f * (x**3) * ((y_6)**41) + 
            L0x20019998_f * (x**0) * ((y_6)**42) + 
            L0x2001999a_f * (x**1) * ((y_6)**42) + 
            L0x2001999c_f * (x**2) * ((y_6)**42) + 
            L0x2001999e_f * (x**3) * ((y_6)**42) + 
            L0x200199a0_f * (x**0) * ((y_6)**43) + 
            L0x200199a2_f * (x**1) * ((y_6)**43) + 
            L0x200199a4_f * (x**2) * ((y_6)**43) + 
            L0x200199a6_f * (x**3) * ((y_6)**43) + 
            L0x200199a8_f * (x**0) * ((y_6)**44) + 
            L0x200199aa_f * (x**1) * ((y_6)**44) + 
            L0x200199ac_f * (x**2) * ((y_6)**44) + 
            L0x200199ae_f * (x**3) * ((y_6)**44) + 
            L0x200199b0_f * (x**0) * ((y_6)**45) + 
            L0x200199b2_f * (x**1) * ((y_6)**45) + 
            L0x200199b4_f * (x**2) * ((y_6)**45) + 
            L0x200199b6_f * (x**3) * ((y_6)**45) + 
            L0x200199b8_f * (x**0) * ((y_6)**46) + 
            L0x200199ba_f * (x**1) * ((y_6)**46) + 
            L0x200199bc_f * (x**2) * ((y_6)**46) + 
            L0x200199be_f * (x**3) * ((y_6)**46) + 
            L0x200199c0_f * (x**0) * ((y_6)**47) + 
            L0x200199c2_f * (x**1) * ((y_6)**47) + 
            L0x200199c4_f * (x**2) * ((y_6)**47) + 
            L0x200199c6_f * (x**3) * ((y_6)**47) + 
            L0x200199c8_f * (x**0) * ((y_6)**48) + 
            L0x200199ca_f * (x**1) * ((y_6)**48) + 
            L0x200199cc_f * (x**2) * ((y_6)**48) + 
            L0x200199ce_f * (x**3) * ((y_6)**48) + 
            L0x200199d0_f * (x**0) * ((y_6)**49) + 
            L0x200199d2_f * (x**1) * ((y_6)**49) + 
            L0x200199d4_f * (x**2) * ((y_6)**49) + 
            L0x200199d6_f * (x**3) * ((y_6)**49) + 
            L0x200199d8_f * (x**0) * ((y_6)**50) + 
            L0x200199da_f * (x**1) * ((y_6)**50) + 
            L0x200199dc_f * (x**2) * ((y_6)**50) + 
            L0x200199de_f * (x**3) * ((y_6)**50) + 
            L0x200199e0_f * (x**0) * ((y_6)**51) + 
            L0x200199e2_f * (x**1) * ((y_6)**51) + 
            L0x200199e4_f * (x**2) * ((y_6)**51) + 
            L0x200199e6_f * (x**3) * ((y_6)**51) + 
            L0x200199e8_f * (x**0) * ((y_6)**52) + 
            L0x200199ea_f * (x**1) * ((y_6)**52) + 
            L0x200199ec_f * (x**2) * ((y_6)**52) + 
            L0x200199ee_f * (x**3) * ((y_6)**52) + 
            L0x200199f0_f * (x**0) * ((y_6)**53) + 
            L0x200199f2_f * (x**1) * ((y_6)**53) + 
            L0x200199f4_f * (x**2) * ((y_6)**53) + 
            L0x200199f6_f * (x**3) * ((y_6)**53) + 
            L0x200199f8_f * (x**0) * ((y_6)**54) + 
            L0x200199fa_f * (x**1) * ((y_6)**54) + 
            L0x200199fc_f * (x**2) * ((y_6)**54) + 
            L0x200199fe_f * (x**3) * ((y_6)**54) + 
            L0x20019a00_f * (x**0) * ((y_6)**55) + 
            L0x20019a02_f * (x**1) * ((y_6)**55) + 
            L0x20019a04_f * (x**2) * ((y_6)**55) + 
            L0x20019a06_f * (x**3) * ((y_6)**55) + 
            L0x20019a08_f * (x**0) * ((y_6)**56) + 
            L0x20019a0a_f * (x**1) * ((y_6)**56) + 
            L0x20019a0c_f * (x**2) * ((y_6)**56) + 
            L0x20019a0e_f * (x**3) * ((y_6)**56) + 
            L0x20019a10_f * (x**0) * ((y_6)**57) + 
            L0x20019a12_f * (x**1) * ((y_6)**57) + 
            L0x20019a14_f * (x**2) * ((y_6)**57) + 
            L0x20019a16_f * (x**3) * ((y_6)**57) + 
            L0x20019a18_f * (x**0) * ((y_6)**58) + 
            L0x20019a1a_f * (x**1) * ((y_6)**58) + 
            L0x20019a1c_f * (x**2) * ((y_6)**58) + 
            L0x20019a1e_f * (x**3) * ((y_6)**58) + 
            L0x20019a20_f * (x**0) * ((y_6)**59) + 
            L0x20019a22_f * (x**1) * ((y_6)**59) + 
            L0x20019a24_f * (x**2) * ((y_6)**59) + 
            L0x20019a26_f * (x**3) * ((y_6)**59) + 
            L0x20019a28_f * (x**0) * ((y_6)**60) + 
            L0x20019a2a_f * (x**1) * ((y_6)**60) + 
            L0x20019a2c_f * (x**2) * ((y_6)**60) + 
            L0x20019a2e_f * (x**3) * ((y_6)**60) + 
            L0x20019a30_f * (x**0) * ((y_6)**61) + 
            L0x20019a32_f * (x**1) * ((y_6)**61) + 
            L0x20019a34_f * (x**2) * ((y_6)**61) + 
            L0x20019a36_f * (x**3) * ((y_6)**61) + 
            L0x20019a38_f * (x**0) * ((y_6)**62) + 
            L0x20019a3a_f * (x**1) * ((y_6)**62) + 
            L0x20019a3c_f * (x**2) * ((y_6)**62) + 
            L0x20019a3e_f * (x**3) * ((y_6)**62) + 
            L0x20019a40_f * (x**0) * ((y_6)**63) + 
            L0x20019a42_f * (x**1) * ((y_6)**63) + 
            L0x20019a44_f * (x**2) * ((y_6)**63) + 
            L0x20019a46_f * (x**3) * ((y_6)**63)
          )
          [25570049, x**4 - y_0_12 * 2389590, y_0_12 - 1],
    (* inp_poly_13 *)
    eqmod (2**32) * (inp_poly_13 * inp_poly_13)
          (
            L0x20019848_f * (x**0) * ((y_6)**0) + 
            L0x2001984a_f * (x**1) * ((y_6)**0) + 
            L0x2001984c_f * (x**2) * ((y_6)**0) + 
            L0x2001984e_f * (x**3) * ((y_6)**0) + 
            L0x20019850_f * (x**0) * ((y_6)**1) + 
            L0x20019852_f * (x**1) * ((y_6)**1) + 
            L0x20019854_f * (x**2) * ((y_6)**1) + 
            L0x20019856_f * (x**3) * ((y_6)**1) + 
            L0x20019858_f * (x**0) * ((y_6)**2) + 
            L0x2001985a_f * (x**1) * ((y_6)**2) + 
            L0x2001985c_f * (x**2) * ((y_6)**2) + 
            L0x2001985e_f * (x**3) * ((y_6)**2) + 
            L0x20019860_f * (x**0) * ((y_6)**3) + 
            L0x20019862_f * (x**1) * ((y_6)**3) + 
            L0x20019864_f * (x**2) * ((y_6)**3) + 
            L0x20019866_f * (x**3) * ((y_6)**3) + 
            L0x20019868_f * (x**0) * ((y_6)**4) + 
            L0x2001986a_f * (x**1) * ((y_6)**4) + 
            L0x2001986c_f * (x**2) * ((y_6)**4) + 
            L0x2001986e_f * (x**3) * ((y_6)**4) + 
            L0x20019870_f * (x**0) * ((y_6)**5) + 
            L0x20019872_f * (x**1) * ((y_6)**5) + 
            L0x20019874_f * (x**2) * ((y_6)**5) + 
            L0x20019876_f * (x**3) * ((y_6)**5) + 
            L0x20019878_f * (x**0) * ((y_6)**6) + 
            L0x2001987a_f * (x**1) * ((y_6)**6) + 
            L0x2001987c_f * (x**2) * ((y_6)**6) + 
            L0x2001987e_f * (x**3) * ((y_6)**6) + 
            L0x20019880_f * (x**0) * ((y_6)**7) + 
            L0x20019882_f * (x**1) * ((y_6)**7) + 
            L0x20019884_f * (x**2) * ((y_6)**7) + 
            L0x20019886_f * (x**3) * ((y_6)**7) + 
            L0x20019888_f * (x**0) * ((y_6)**8) + 
            L0x2001988a_f * (x**1) * ((y_6)**8) + 
            L0x2001988c_f * (x**2) * ((y_6)**8) + 
            L0x2001988e_f * (x**3) * ((y_6)**8) + 
            L0x20019890_f * (x**0) * ((y_6)**9) + 
            L0x20019892_f * (x**1) * ((y_6)**9) + 
            L0x20019894_f * (x**2) * ((y_6)**9) + 
            L0x20019896_f * (x**3) * ((y_6)**9) + 
            L0x20019898_f * (x**0) * ((y_6)**10) + 
            L0x2001989a_f * (x**1) * ((y_6)**10) + 
            L0x2001989c_f * (x**2) * ((y_6)**10) + 
            L0x2001989e_f * (x**3) * ((y_6)**10) + 
            L0x200198a0_f * (x**0) * ((y_6)**11) + 
            L0x200198a2_f * (x**1) * ((y_6)**11) + 
            L0x200198a4_f * (x**2) * ((y_6)**11) + 
            L0x200198a6_f * (x**3) * ((y_6)**11) + 
            L0x200198a8_f * (x**0) * ((y_6)**12) + 
            L0x200198aa_f * (x**1) * ((y_6)**12) + 
            L0x200198ac_f * (x**2) * ((y_6)**12) + 
            L0x200198ae_f * (x**3) * ((y_6)**12) + 
            L0x200198b0_f * (x**0) * ((y_6)**13) + 
            L0x200198b2_f * (x**1) * ((y_6)**13) + 
            L0x200198b4_f * (x**2) * ((y_6)**13) + 
            L0x200198b6_f * (x**3) * ((y_6)**13) + 
            L0x200198b8_f * (x**0) * ((y_6)**14) + 
            L0x200198ba_f * (x**1) * ((y_6)**14) + 
            L0x200198bc_f * (x**2) * ((y_6)**14) + 
            L0x200198be_f * (x**3) * ((y_6)**14) + 
            L0x200198c0_f * (x**0) * ((y_6)**15) + 
            L0x200198c2_f * (x**1) * ((y_6)**15) + 
            L0x200198c4_f * (x**2) * ((y_6)**15) + 
            L0x200198c6_f * (x**3) * ((y_6)**15) + 
            L0x200198c8_f * (x**0) * ((y_6)**16) + 
            L0x200198ca_f * (x**1) * ((y_6)**16) + 
            L0x200198cc_f * (x**2) * ((y_6)**16) + 
            L0x200198ce_f * (x**3) * ((y_6)**16) + 
            L0x200198d0_f * (x**0) * ((y_6)**17) + 
            L0x200198d2_f * (x**1) * ((y_6)**17) + 
            L0x200198d4_f * (x**2) * ((y_6)**17) + 
            L0x200198d6_f * (x**3) * ((y_6)**17) + 
            L0x200198d8_f * (x**0) * ((y_6)**18) + 
            L0x200198da_f * (x**1) * ((y_6)**18) + 
            L0x200198dc_f * (x**2) * ((y_6)**18) + 
            L0x200198de_f * (x**3) * ((y_6)**18) + 
            L0x200198e0_f * (x**0) * ((y_6)**19) + 
            L0x200198e2_f * (x**1) * ((y_6)**19) + 
            L0x200198e4_f * (x**2) * ((y_6)**19) + 
            L0x200198e6_f * (x**3) * ((y_6)**19) + 
            L0x200198e8_f * (x**0) * ((y_6)**20) + 
            L0x200198ea_f * (x**1) * ((y_6)**20) + 
            L0x200198ec_f * (x**2) * ((y_6)**20) + 
            L0x200198ee_f * (x**3) * ((y_6)**20) + 
            L0x200198f0_f * (x**0) * ((y_6)**21) + 
            L0x200198f2_f * (x**1) * ((y_6)**21) + 
            L0x200198f4_f * (x**2) * ((y_6)**21) + 
            L0x200198f6_f * (x**3) * ((y_6)**21) + 
            L0x200198f8_f * (x**0) * ((y_6)**22) + 
            L0x200198fa_f * (x**1) * ((y_6)**22) + 
            L0x200198fc_f * (x**2) * ((y_6)**22) + 
            L0x200198fe_f * (x**3) * ((y_6)**22) + 
            L0x20019900_f * (x**0) * ((y_6)**23) + 
            L0x20019902_f * (x**1) * ((y_6)**23) + 
            L0x20019904_f * (x**2) * ((y_6)**23) + 
            L0x20019906_f * (x**3) * ((y_6)**23) + 
            L0x20019908_f * (x**0) * ((y_6)**24) + 
            L0x2001990a_f * (x**1) * ((y_6)**24) + 
            L0x2001990c_f * (x**2) * ((y_6)**24) + 
            L0x2001990e_f * (x**3) * ((y_6)**24) + 
            L0x20019910_f * (x**0) * ((y_6)**25) + 
            L0x20019912_f * (x**1) * ((y_6)**25) + 
            L0x20019914_f * (x**2) * ((y_6)**25) + 
            L0x20019916_f * (x**3) * ((y_6)**25) + 
            L0x20019918_f * (x**0) * ((y_6)**26) + 
            L0x2001991a_f * (x**1) * ((y_6)**26) + 
            L0x2001991c_f * (x**2) * ((y_6)**26) + 
            L0x2001991e_f * (x**3) * ((y_6)**26) + 
            L0x20019920_f * (x**0) * ((y_6)**27) + 
            L0x20019922_f * (x**1) * ((y_6)**27) + 
            L0x20019924_f * (x**2) * ((y_6)**27) + 
            L0x20019926_f * (x**3) * ((y_6)**27) + 
            L0x20019928_f * (x**0) * ((y_6)**28) + 
            L0x2001992a_f * (x**1) * ((y_6)**28) + 
            L0x2001992c_f * (x**2) * ((y_6)**28) + 
            L0x2001992e_f * (x**3) * ((y_6)**28) + 
            L0x20019930_f * (x**0) * ((y_6)**29) + 
            L0x20019932_f * (x**1) * ((y_6)**29) + 
            L0x20019934_f * (x**2) * ((y_6)**29) + 
            L0x20019936_f * (x**3) * ((y_6)**29) + 
            L0x20019938_f * (x**0) * ((y_6)**30) + 
            L0x2001993a_f * (x**1) * ((y_6)**30) + 
            L0x2001993c_f * (x**2) * ((y_6)**30) + 
            L0x2001993e_f * (x**3) * ((y_6)**30) + 
            L0x20019940_f * (x**0) * ((y_6)**31) + 
            L0x20019942_f * (x**1) * ((y_6)**31) + 
            L0x20019944_f * (x**2) * ((y_6)**31) + 
            L0x20019946_f * (x**3) * ((y_6)**31) + 
            L0x20019948_f * (x**0) * ((y_6)**32) + 
            L0x2001994a_f * (x**1) * ((y_6)**32) + 
            L0x2001994c_f * (x**2) * ((y_6)**32) + 
            L0x2001994e_f * (x**3) * ((y_6)**32) + 
            L0x20019950_f * (x**0) * ((y_6)**33) + 
            L0x20019952_f * (x**1) * ((y_6)**33) + 
            L0x20019954_f * (x**2) * ((y_6)**33) + 
            L0x20019956_f * (x**3) * ((y_6)**33) + 
            L0x20019958_f * (x**0) * ((y_6)**34) + 
            L0x2001995a_f * (x**1) * ((y_6)**34) + 
            L0x2001995c_f * (x**2) * ((y_6)**34) + 
            L0x2001995e_f * (x**3) * ((y_6)**34) + 
            L0x20019960_f * (x**0) * ((y_6)**35) + 
            L0x20019962_f * (x**1) * ((y_6)**35) + 
            L0x20019964_f * (x**2) * ((y_6)**35) + 
            L0x20019966_f * (x**3) * ((y_6)**35) + 
            L0x20019968_f * (x**0) * ((y_6)**36) + 
            L0x2001996a_f * (x**1) * ((y_6)**36) + 
            L0x2001996c_f * (x**2) * ((y_6)**36) + 
            L0x2001996e_f * (x**3) * ((y_6)**36) + 
            L0x20019970_f * (x**0) * ((y_6)**37) + 
            L0x20019972_f * (x**1) * ((y_6)**37) + 
            L0x20019974_f * (x**2) * ((y_6)**37) + 
            L0x20019976_f * (x**3) * ((y_6)**37) + 
            L0x20019978_f * (x**0) * ((y_6)**38) + 
            L0x2001997a_f * (x**1) * ((y_6)**38) + 
            L0x2001997c_f * (x**2) * ((y_6)**38) + 
            L0x2001997e_f * (x**3) * ((y_6)**38) + 
            L0x20019980_f * (x**0) * ((y_6)**39) + 
            L0x20019982_f * (x**1) * ((y_6)**39) + 
            L0x20019984_f * (x**2) * ((y_6)**39) + 
            L0x20019986_f * (x**3) * ((y_6)**39) + 
            L0x20019988_f * (x**0) * ((y_6)**40) + 
            L0x2001998a_f * (x**1) * ((y_6)**40) + 
            L0x2001998c_f * (x**2) * ((y_6)**40) + 
            L0x2001998e_f * (x**3) * ((y_6)**40) + 
            L0x20019990_f * (x**0) * ((y_6)**41) + 
            L0x20019992_f * (x**1) * ((y_6)**41) + 
            L0x20019994_f * (x**2) * ((y_6)**41) + 
            L0x20019996_f * (x**3) * ((y_6)**41) + 
            L0x20019998_f * (x**0) * ((y_6)**42) + 
            L0x2001999a_f * (x**1) * ((y_6)**42) + 
            L0x2001999c_f * (x**2) * ((y_6)**42) + 
            L0x2001999e_f * (x**3) * ((y_6)**42) + 
            L0x200199a0_f * (x**0) * ((y_6)**43) + 
            L0x200199a2_f * (x**1) * ((y_6)**43) + 
            L0x200199a4_f * (x**2) * ((y_6)**43) + 
            L0x200199a6_f * (x**3) * ((y_6)**43) + 
            L0x200199a8_f * (x**0) * ((y_6)**44) + 
            L0x200199aa_f * (x**1) * ((y_6)**44) + 
            L0x200199ac_f * (x**2) * ((y_6)**44) + 
            L0x200199ae_f * (x**3) * ((y_6)**44) + 
            L0x200199b0_f * (x**0) * ((y_6)**45) + 
            L0x200199b2_f * (x**1) * ((y_6)**45) + 
            L0x200199b4_f * (x**2) * ((y_6)**45) + 
            L0x200199b6_f * (x**3) * ((y_6)**45) + 
            L0x200199b8_f * (x**0) * ((y_6)**46) + 
            L0x200199ba_f * (x**1) * ((y_6)**46) + 
            L0x200199bc_f * (x**2) * ((y_6)**46) + 
            L0x200199be_f * (x**3) * ((y_6)**46) + 
            L0x200199c0_f * (x**0) * ((y_6)**47) + 
            L0x200199c2_f * (x**1) * ((y_6)**47) + 
            L0x200199c4_f * (x**2) * ((y_6)**47) + 
            L0x200199c6_f * (x**3) * ((y_6)**47) + 
            L0x200199c8_f * (x**0) * ((y_6)**48) + 
            L0x200199ca_f * (x**1) * ((y_6)**48) + 
            L0x200199cc_f * (x**2) * ((y_6)**48) + 
            L0x200199ce_f * (x**3) * ((y_6)**48) + 
            L0x200199d0_f * (x**0) * ((y_6)**49) + 
            L0x200199d2_f * (x**1) * ((y_6)**49) + 
            L0x200199d4_f * (x**2) * ((y_6)**49) + 
            L0x200199d6_f * (x**3) * ((y_6)**49) + 
            L0x200199d8_f * (x**0) * ((y_6)**50) + 
            L0x200199da_f * (x**1) * ((y_6)**50) + 
            L0x200199dc_f * (x**2) * ((y_6)**50) + 
            L0x200199de_f * (x**3) * ((y_6)**50) + 
            L0x200199e0_f * (x**0) * ((y_6)**51) + 
            L0x200199e2_f * (x**1) * ((y_6)**51) + 
            L0x200199e4_f * (x**2) * ((y_6)**51) + 
            L0x200199e6_f * (x**3) * ((y_6)**51) + 
            L0x200199e8_f * (x**0) * ((y_6)**52) + 
            L0x200199ea_f * (x**1) * ((y_6)**52) + 
            L0x200199ec_f * (x**2) * ((y_6)**52) + 
            L0x200199ee_f * (x**3) * ((y_6)**52) + 
            L0x200199f0_f * (x**0) * ((y_6)**53) + 
            L0x200199f2_f * (x**1) * ((y_6)**53) + 
            L0x200199f4_f * (x**2) * ((y_6)**53) + 
            L0x200199f6_f * (x**3) * ((y_6)**53) + 
            L0x200199f8_f * (x**0) * ((y_6)**54) + 
            L0x200199fa_f * (x**1) * ((y_6)**54) + 
            L0x200199fc_f * (x**2) * ((y_6)**54) + 
            L0x200199fe_f * (x**3) * ((y_6)**54) + 
            L0x20019a00_f * (x**0) * ((y_6)**55) + 
            L0x20019a02_f * (x**1) * ((y_6)**55) + 
            L0x20019a04_f * (x**2) * ((y_6)**55) + 
            L0x20019a06_f * (x**3) * ((y_6)**55) + 
            L0x20019a08_f * (x**0) * ((y_6)**56) + 
            L0x20019a0a_f * (x**1) * ((y_6)**56) + 
            L0x20019a0c_f * (x**2) * ((y_6)**56) + 
            L0x20019a0e_f * (x**3) * ((y_6)**56) + 
            L0x20019a10_f * (x**0) * ((y_6)**57) + 
            L0x20019a12_f * (x**1) * ((y_6)**57) + 
            L0x20019a14_f * (x**2) * ((y_6)**57) + 
            L0x20019a16_f * (x**3) * ((y_6)**57) + 
            L0x20019a18_f * (x**0) * ((y_6)**58) + 
            L0x20019a1a_f * (x**1) * ((y_6)**58) + 
            L0x20019a1c_f * (x**2) * ((y_6)**58) + 
            L0x20019a1e_f * (x**3) * ((y_6)**58) + 
            L0x20019a20_f * (x**0) * ((y_6)**59) + 
            L0x20019a22_f * (x**1) * ((y_6)**59) + 
            L0x20019a24_f * (x**2) * ((y_6)**59) + 
            L0x20019a26_f * (x**3) * ((y_6)**59) + 
            L0x20019a28_f * (x**0) * ((y_6)**60) + 
            L0x20019a2a_f * (x**1) * ((y_6)**60) + 
            L0x20019a2c_f * (x**2) * ((y_6)**60) + 
            L0x20019a2e_f * (x**3) * ((y_6)**60) + 
            L0x20019a30_f * (x**0) * ((y_6)**61) + 
            L0x20019a32_f * (x**1) * ((y_6)**61) + 
            L0x20019a34_f * (x**2) * ((y_6)**61) + 
            L0x20019a36_f * (x**3) * ((y_6)**61) + 
            L0x20019a38_f * (x**0) * ((y_6)**62) + 
            L0x20019a3a_f * (x**1) * ((y_6)**62) + 
            L0x20019a3c_f * (x**2) * ((y_6)**62) + 
            L0x20019a3e_f * (x**3) * ((y_6)**62) + 
            L0x20019a40_f * (x**0) * ((y_6)**63) + 
            L0x20019a42_f * (x**1) * ((y_6)**63) + 
            L0x20019a44_f * (x**2) * ((y_6)**63) + 
            L0x20019a46_f * (x**3) * ((y_6)**63)
          )
          [25570049, x**4 - y_0_13 * 23180459, y_0_13 - 1],
    (* inp_poly_14 *)
    eqmod (2**32) * (inp_poly_14 * inp_poly_14)
          (
            L0x20019848_f * (x**0) * ((y_6)**0) + 
            L0x2001984a_f * (x**1) * ((y_6)**0) + 
            L0x2001984c_f * (x**2) * ((y_6)**0) + 
            L0x2001984e_f * (x**3) * ((y_6)**0) + 
            L0x20019850_f * (x**0) * ((y_6)**1) + 
            L0x20019852_f * (x**1) * ((y_6)**1) + 
            L0x20019854_f * (x**2) * ((y_6)**1) + 
            L0x20019856_f * (x**3) * ((y_6)**1) + 
            L0x20019858_f * (x**0) * ((y_6)**2) + 
            L0x2001985a_f * (x**1) * ((y_6)**2) + 
            L0x2001985c_f * (x**2) * ((y_6)**2) + 
            L0x2001985e_f * (x**3) * ((y_6)**2) + 
            L0x20019860_f * (x**0) * ((y_6)**3) + 
            L0x20019862_f * (x**1) * ((y_6)**3) + 
            L0x20019864_f * (x**2) * ((y_6)**3) + 
            L0x20019866_f * (x**3) * ((y_6)**3) + 
            L0x20019868_f * (x**0) * ((y_6)**4) + 
            L0x2001986a_f * (x**1) * ((y_6)**4) + 
            L0x2001986c_f * (x**2) * ((y_6)**4) + 
            L0x2001986e_f * (x**3) * ((y_6)**4) + 
            L0x20019870_f * (x**0) * ((y_6)**5) + 
            L0x20019872_f * (x**1) * ((y_6)**5) + 
            L0x20019874_f * (x**2) * ((y_6)**5) + 
            L0x20019876_f * (x**3) * ((y_6)**5) + 
            L0x20019878_f * (x**0) * ((y_6)**6) + 
            L0x2001987a_f * (x**1) * ((y_6)**6) + 
            L0x2001987c_f * (x**2) * ((y_6)**6) + 
            L0x2001987e_f * (x**3) * ((y_6)**6) + 
            L0x20019880_f * (x**0) * ((y_6)**7) + 
            L0x20019882_f * (x**1) * ((y_6)**7) + 
            L0x20019884_f * (x**2) * ((y_6)**7) + 
            L0x20019886_f * (x**3) * ((y_6)**7) + 
            L0x20019888_f * (x**0) * ((y_6)**8) + 
            L0x2001988a_f * (x**1) * ((y_6)**8) + 
            L0x2001988c_f * (x**2) * ((y_6)**8) + 
            L0x2001988e_f * (x**3) * ((y_6)**8) + 
            L0x20019890_f * (x**0) * ((y_6)**9) + 
            L0x20019892_f * (x**1) * ((y_6)**9) + 
            L0x20019894_f * (x**2) * ((y_6)**9) + 
            L0x20019896_f * (x**3) * ((y_6)**9) + 
            L0x20019898_f * (x**0) * ((y_6)**10) + 
            L0x2001989a_f * (x**1) * ((y_6)**10) + 
            L0x2001989c_f * (x**2) * ((y_6)**10) + 
            L0x2001989e_f * (x**3) * ((y_6)**10) + 
            L0x200198a0_f * (x**0) * ((y_6)**11) + 
            L0x200198a2_f * (x**1) * ((y_6)**11) + 
            L0x200198a4_f * (x**2) * ((y_6)**11) + 
            L0x200198a6_f * (x**3) * ((y_6)**11) + 
            L0x200198a8_f * (x**0) * ((y_6)**12) + 
            L0x200198aa_f * (x**1) * ((y_6)**12) + 
            L0x200198ac_f * (x**2) * ((y_6)**12) + 
            L0x200198ae_f * (x**3) * ((y_6)**12) + 
            L0x200198b0_f * (x**0) * ((y_6)**13) + 
            L0x200198b2_f * (x**1) * ((y_6)**13) + 
            L0x200198b4_f * (x**2) * ((y_6)**13) + 
            L0x200198b6_f * (x**3) * ((y_6)**13) + 
            L0x200198b8_f * (x**0) * ((y_6)**14) + 
            L0x200198ba_f * (x**1) * ((y_6)**14) + 
            L0x200198bc_f * (x**2) * ((y_6)**14) + 
            L0x200198be_f * (x**3) * ((y_6)**14) + 
            L0x200198c0_f * (x**0) * ((y_6)**15) + 
            L0x200198c2_f * (x**1) * ((y_6)**15) + 
            L0x200198c4_f * (x**2) * ((y_6)**15) + 
            L0x200198c6_f * (x**3) * ((y_6)**15) + 
            L0x200198c8_f * (x**0) * ((y_6)**16) + 
            L0x200198ca_f * (x**1) * ((y_6)**16) + 
            L0x200198cc_f * (x**2) * ((y_6)**16) + 
            L0x200198ce_f * (x**3) * ((y_6)**16) + 
            L0x200198d0_f * (x**0) * ((y_6)**17) + 
            L0x200198d2_f * (x**1) * ((y_6)**17) + 
            L0x200198d4_f * (x**2) * ((y_6)**17) + 
            L0x200198d6_f * (x**3) * ((y_6)**17) + 
            L0x200198d8_f * (x**0) * ((y_6)**18) + 
            L0x200198da_f * (x**1) * ((y_6)**18) + 
            L0x200198dc_f * (x**2) * ((y_6)**18) + 
            L0x200198de_f * (x**3) * ((y_6)**18) + 
            L0x200198e0_f * (x**0) * ((y_6)**19) + 
            L0x200198e2_f * (x**1) * ((y_6)**19) + 
            L0x200198e4_f * (x**2) * ((y_6)**19) + 
            L0x200198e6_f * (x**3) * ((y_6)**19) + 
            L0x200198e8_f * (x**0) * ((y_6)**20) + 
            L0x200198ea_f * (x**1) * ((y_6)**20) + 
            L0x200198ec_f * (x**2) * ((y_6)**20) + 
            L0x200198ee_f * (x**3) * ((y_6)**20) + 
            L0x200198f0_f * (x**0) * ((y_6)**21) + 
            L0x200198f2_f * (x**1) * ((y_6)**21) + 
            L0x200198f4_f * (x**2) * ((y_6)**21) + 
            L0x200198f6_f * (x**3) * ((y_6)**21) + 
            L0x200198f8_f * (x**0) * ((y_6)**22) + 
            L0x200198fa_f * (x**1) * ((y_6)**22) + 
            L0x200198fc_f * (x**2) * ((y_6)**22) + 
            L0x200198fe_f * (x**3) * ((y_6)**22) + 
            L0x20019900_f * (x**0) * ((y_6)**23) + 
            L0x20019902_f * (x**1) * ((y_6)**23) + 
            L0x20019904_f * (x**2) * ((y_6)**23) + 
            L0x20019906_f * (x**3) * ((y_6)**23) + 
            L0x20019908_f * (x**0) * ((y_6)**24) + 
            L0x2001990a_f * (x**1) * ((y_6)**24) + 
            L0x2001990c_f * (x**2) * ((y_6)**24) + 
            L0x2001990e_f * (x**3) * ((y_6)**24) + 
            L0x20019910_f * (x**0) * ((y_6)**25) + 
            L0x20019912_f * (x**1) * ((y_6)**25) + 
            L0x20019914_f * (x**2) * ((y_6)**25) + 
            L0x20019916_f * (x**3) * ((y_6)**25) + 
            L0x20019918_f * (x**0) * ((y_6)**26) + 
            L0x2001991a_f * (x**1) * ((y_6)**26) + 
            L0x2001991c_f * (x**2) * ((y_6)**26) + 
            L0x2001991e_f * (x**3) * ((y_6)**26) + 
            L0x20019920_f * (x**0) * ((y_6)**27) + 
            L0x20019922_f * (x**1) * ((y_6)**27) + 
            L0x20019924_f * (x**2) * ((y_6)**27) + 
            L0x20019926_f * (x**3) * ((y_6)**27) + 
            L0x20019928_f * (x**0) * ((y_6)**28) + 
            L0x2001992a_f * (x**1) * ((y_6)**28) + 
            L0x2001992c_f * (x**2) * ((y_6)**28) + 
            L0x2001992e_f * (x**3) * ((y_6)**28) + 
            L0x20019930_f * (x**0) * ((y_6)**29) + 
            L0x20019932_f * (x**1) * ((y_6)**29) + 
            L0x20019934_f * (x**2) * ((y_6)**29) + 
            L0x20019936_f * (x**3) * ((y_6)**29) + 
            L0x20019938_f * (x**0) * ((y_6)**30) + 
            L0x2001993a_f * (x**1) * ((y_6)**30) + 
            L0x2001993c_f * (x**2) * ((y_6)**30) + 
            L0x2001993e_f * (x**3) * ((y_6)**30) + 
            L0x20019940_f * (x**0) * ((y_6)**31) + 
            L0x20019942_f * (x**1) * ((y_6)**31) + 
            L0x20019944_f * (x**2) * ((y_6)**31) + 
            L0x20019946_f * (x**3) * ((y_6)**31) + 
            L0x20019948_f * (x**0) * ((y_6)**32) + 
            L0x2001994a_f * (x**1) * ((y_6)**32) + 
            L0x2001994c_f * (x**2) * ((y_6)**32) + 
            L0x2001994e_f * (x**3) * ((y_6)**32) + 
            L0x20019950_f * (x**0) * ((y_6)**33) + 
            L0x20019952_f * (x**1) * ((y_6)**33) + 
            L0x20019954_f * (x**2) * ((y_6)**33) + 
            L0x20019956_f * (x**3) * ((y_6)**33) + 
            L0x20019958_f * (x**0) * ((y_6)**34) + 
            L0x2001995a_f * (x**1) * ((y_6)**34) + 
            L0x2001995c_f * (x**2) * ((y_6)**34) + 
            L0x2001995e_f * (x**3) * ((y_6)**34) + 
            L0x20019960_f * (x**0) * ((y_6)**35) + 
            L0x20019962_f * (x**1) * ((y_6)**35) + 
            L0x20019964_f * (x**2) * ((y_6)**35) + 
            L0x20019966_f * (x**3) * ((y_6)**35) + 
            L0x20019968_f * (x**0) * ((y_6)**36) + 
            L0x2001996a_f * (x**1) * ((y_6)**36) + 
            L0x2001996c_f * (x**2) * ((y_6)**36) + 
            L0x2001996e_f * (x**3) * ((y_6)**36) + 
            L0x20019970_f * (x**0) * ((y_6)**37) + 
            L0x20019972_f * (x**1) * ((y_6)**37) + 
            L0x20019974_f * (x**2) * ((y_6)**37) + 
            L0x20019976_f * (x**3) * ((y_6)**37) + 
            L0x20019978_f * (x**0) * ((y_6)**38) + 
            L0x2001997a_f * (x**1) * ((y_6)**38) + 
            L0x2001997c_f * (x**2) * ((y_6)**38) + 
            L0x2001997e_f * (x**3) * ((y_6)**38) + 
            L0x20019980_f * (x**0) * ((y_6)**39) + 
            L0x20019982_f * (x**1) * ((y_6)**39) + 
            L0x20019984_f * (x**2) * ((y_6)**39) + 
            L0x20019986_f * (x**3) * ((y_6)**39) + 
            L0x20019988_f * (x**0) * ((y_6)**40) + 
            L0x2001998a_f * (x**1) * ((y_6)**40) + 
            L0x2001998c_f * (x**2) * ((y_6)**40) + 
            L0x2001998e_f * (x**3) * ((y_6)**40) + 
            L0x20019990_f * (x**0) * ((y_6)**41) + 
            L0x20019992_f * (x**1) * ((y_6)**41) + 
            L0x20019994_f * (x**2) * ((y_6)**41) + 
            L0x20019996_f * (x**3) * ((y_6)**41) + 
            L0x20019998_f * (x**0) * ((y_6)**42) + 
            L0x2001999a_f * (x**1) * ((y_6)**42) + 
            L0x2001999c_f * (x**2) * ((y_6)**42) + 
            L0x2001999e_f * (x**3) * ((y_6)**42) + 
            L0x200199a0_f * (x**0) * ((y_6)**43) + 
            L0x200199a2_f * (x**1) * ((y_6)**43) + 
            L0x200199a4_f * (x**2) * ((y_6)**43) + 
            L0x200199a6_f * (x**3) * ((y_6)**43) + 
            L0x200199a8_f * (x**0) * ((y_6)**44) + 
            L0x200199aa_f * (x**1) * ((y_6)**44) + 
            L0x200199ac_f * (x**2) * ((y_6)**44) + 
            L0x200199ae_f * (x**3) * ((y_6)**44) + 
            L0x200199b0_f * (x**0) * ((y_6)**45) + 
            L0x200199b2_f * (x**1) * ((y_6)**45) + 
            L0x200199b4_f * (x**2) * ((y_6)**45) + 
            L0x200199b6_f * (x**3) * ((y_6)**45) + 
            L0x200199b8_f * (x**0) * ((y_6)**46) + 
            L0x200199ba_f * (x**1) * ((y_6)**46) + 
            L0x200199bc_f * (x**2) * ((y_6)**46) + 
            L0x200199be_f * (x**3) * ((y_6)**46) + 
            L0x200199c0_f * (x**0) * ((y_6)**47) + 
            L0x200199c2_f * (x**1) * ((y_6)**47) + 
            L0x200199c4_f * (x**2) * ((y_6)**47) + 
            L0x200199c6_f * (x**3) * ((y_6)**47) + 
            L0x200199c8_f * (x**0) * ((y_6)**48) + 
            L0x200199ca_f * (x**1) * ((y_6)**48) + 
            L0x200199cc_f * (x**2) * ((y_6)**48) + 
            L0x200199ce_f * (x**3) * ((y_6)**48) + 
            L0x200199d0_f * (x**0) * ((y_6)**49) + 
            L0x200199d2_f * (x**1) * ((y_6)**49) + 
            L0x200199d4_f * (x**2) * ((y_6)**49) + 
            L0x200199d6_f * (x**3) * ((y_6)**49) + 
            L0x200199d8_f * (x**0) * ((y_6)**50) + 
            L0x200199da_f * (x**1) * ((y_6)**50) + 
            L0x200199dc_f * (x**2) * ((y_6)**50) + 
            L0x200199de_f * (x**3) * ((y_6)**50) + 
            L0x200199e0_f * (x**0) * ((y_6)**51) + 
            L0x200199e2_f * (x**1) * ((y_6)**51) + 
            L0x200199e4_f * (x**2) * ((y_6)**51) + 
            L0x200199e6_f * (x**3) * ((y_6)**51) + 
            L0x200199e8_f * (x**0) * ((y_6)**52) + 
            L0x200199ea_f * (x**1) * ((y_6)**52) + 
            L0x200199ec_f * (x**2) * ((y_6)**52) + 
            L0x200199ee_f * (x**3) * ((y_6)**52) + 
            L0x200199f0_f * (x**0) * ((y_6)**53) + 
            L0x200199f2_f * (x**1) * ((y_6)**53) + 
            L0x200199f4_f * (x**2) * ((y_6)**53) + 
            L0x200199f6_f * (x**3) * ((y_6)**53) + 
            L0x200199f8_f * (x**0) * ((y_6)**54) + 
            L0x200199fa_f * (x**1) * ((y_6)**54) + 
            L0x200199fc_f * (x**2) * ((y_6)**54) + 
            L0x200199fe_f * (x**3) * ((y_6)**54) + 
            L0x20019a00_f * (x**0) * ((y_6)**55) + 
            L0x20019a02_f * (x**1) * ((y_6)**55) + 
            L0x20019a04_f * (x**2) * ((y_6)**55) + 
            L0x20019a06_f * (x**3) * ((y_6)**55) + 
            L0x20019a08_f * (x**0) * ((y_6)**56) + 
            L0x20019a0a_f * (x**1) * ((y_6)**56) + 
            L0x20019a0c_f * (x**2) * ((y_6)**56) + 
            L0x20019a0e_f * (x**3) * ((y_6)**56) + 
            L0x20019a10_f * (x**0) * ((y_6)**57) + 
            L0x20019a12_f * (x**1) * ((y_6)**57) + 
            L0x20019a14_f * (x**2) * ((y_6)**57) + 
            L0x20019a16_f * (x**3) * ((y_6)**57) + 
            L0x20019a18_f * (x**0) * ((y_6)**58) + 
            L0x20019a1a_f * (x**1) * ((y_6)**58) + 
            L0x20019a1c_f * (x**2) * ((y_6)**58) + 
            L0x20019a1e_f * (x**3) * ((y_6)**58) + 
            L0x20019a20_f * (x**0) * ((y_6)**59) + 
            L0x20019a22_f * (x**1) * ((y_6)**59) + 
            L0x20019a24_f * (x**2) * ((y_6)**59) + 
            L0x20019a26_f * (x**3) * ((y_6)**59) + 
            L0x20019a28_f * (x**0) * ((y_6)**60) + 
            L0x20019a2a_f * (x**1) * ((y_6)**60) + 
            L0x20019a2c_f * (x**2) * ((y_6)**60) + 
            L0x20019a2e_f * (x**3) * ((y_6)**60) + 
            L0x20019a30_f * (x**0) * ((y_6)**61) + 
            L0x20019a32_f * (x**1) * ((y_6)**61) + 
            L0x20019a34_f * (x**2) * ((y_6)**61) + 
            L0x20019a36_f * (x**3) * ((y_6)**61) + 
            L0x20019a38_f * (x**0) * ((y_6)**62) + 
            L0x20019a3a_f * (x**1) * ((y_6)**62) + 
            L0x20019a3c_f * (x**2) * ((y_6)**62) + 
            L0x20019a3e_f * (x**3) * ((y_6)**62) + 
            L0x20019a40_f * (x**0) * ((y_6)**63) + 
            L0x20019a42_f * (x**1) * ((y_6)**63) + 
            L0x20019a44_f * (x**2) * ((y_6)**63) + 
            L0x20019a46_f * (x**3) * ((y_6)**63)
          )
          [25570049, x**4 - y_0_14 * 4363503, y_0_14 - 1],
    (* inp_poly_15 *)
    eqmod (2**32) * (inp_poly_15 * inp_poly_15)
          (
            L0x20019848_f * (x**0) * ((y_6)**0) + 
            L0x2001984a_f * (x**1) * ((y_6)**0) + 
            L0x2001984c_f * (x**2) * ((y_6)**0) + 
            L0x2001984e_f * (x**3) * ((y_6)**0) + 
            L0x20019850_f * (x**0) * ((y_6)**1) + 
            L0x20019852_f * (x**1) * ((y_6)**1) + 
            L0x20019854_f * (x**2) * ((y_6)**1) + 
            L0x20019856_f * (x**3) * ((y_6)**1) + 
            L0x20019858_f * (x**0) * ((y_6)**2) + 
            L0x2001985a_f * (x**1) * ((y_6)**2) + 
            L0x2001985c_f * (x**2) * ((y_6)**2) + 
            L0x2001985e_f * (x**3) * ((y_6)**2) + 
            L0x20019860_f * (x**0) * ((y_6)**3) + 
            L0x20019862_f * (x**1) * ((y_6)**3) + 
            L0x20019864_f * (x**2) * ((y_6)**3) + 
            L0x20019866_f * (x**3) * ((y_6)**3) + 
            L0x20019868_f * (x**0) * ((y_6)**4) + 
            L0x2001986a_f * (x**1) * ((y_6)**4) + 
            L0x2001986c_f * (x**2) * ((y_6)**4) + 
            L0x2001986e_f * (x**3) * ((y_6)**4) + 
            L0x20019870_f * (x**0) * ((y_6)**5) + 
            L0x20019872_f * (x**1) * ((y_6)**5) + 
            L0x20019874_f * (x**2) * ((y_6)**5) + 
            L0x20019876_f * (x**3) * ((y_6)**5) + 
            L0x20019878_f * (x**0) * ((y_6)**6) + 
            L0x2001987a_f * (x**1) * ((y_6)**6) + 
            L0x2001987c_f * (x**2) * ((y_6)**6) + 
            L0x2001987e_f * (x**3) * ((y_6)**6) + 
            L0x20019880_f * (x**0) * ((y_6)**7) + 
            L0x20019882_f * (x**1) * ((y_6)**7) + 
            L0x20019884_f * (x**2) * ((y_6)**7) + 
            L0x20019886_f * (x**3) * ((y_6)**7) + 
            L0x20019888_f * (x**0) * ((y_6)**8) + 
            L0x2001988a_f * (x**1) * ((y_6)**8) + 
            L0x2001988c_f * (x**2) * ((y_6)**8) + 
            L0x2001988e_f * (x**3) * ((y_6)**8) + 
            L0x20019890_f * (x**0) * ((y_6)**9) + 
            L0x20019892_f * (x**1) * ((y_6)**9) + 
            L0x20019894_f * (x**2) * ((y_6)**9) + 
            L0x20019896_f * (x**3) * ((y_6)**9) + 
            L0x20019898_f * (x**0) * ((y_6)**10) + 
            L0x2001989a_f * (x**1) * ((y_6)**10) + 
            L0x2001989c_f * (x**2) * ((y_6)**10) + 
            L0x2001989e_f * (x**3) * ((y_6)**10) + 
            L0x200198a0_f * (x**0) * ((y_6)**11) + 
            L0x200198a2_f * (x**1) * ((y_6)**11) + 
            L0x200198a4_f * (x**2) * ((y_6)**11) + 
            L0x200198a6_f * (x**3) * ((y_6)**11) + 
            L0x200198a8_f * (x**0) * ((y_6)**12) + 
            L0x200198aa_f * (x**1) * ((y_6)**12) + 
            L0x200198ac_f * (x**2) * ((y_6)**12) + 
            L0x200198ae_f * (x**3) * ((y_6)**12) + 
            L0x200198b0_f * (x**0) * ((y_6)**13) + 
            L0x200198b2_f * (x**1) * ((y_6)**13) + 
            L0x200198b4_f * (x**2) * ((y_6)**13) + 
            L0x200198b6_f * (x**3) * ((y_6)**13) + 
            L0x200198b8_f * (x**0) * ((y_6)**14) + 
            L0x200198ba_f * (x**1) * ((y_6)**14) + 
            L0x200198bc_f * (x**2) * ((y_6)**14) + 
            L0x200198be_f * (x**3) * ((y_6)**14) + 
            L0x200198c0_f * (x**0) * ((y_6)**15) + 
            L0x200198c2_f * (x**1) * ((y_6)**15) + 
            L0x200198c4_f * (x**2) * ((y_6)**15) + 
            L0x200198c6_f * (x**3) * ((y_6)**15) + 
            L0x200198c8_f * (x**0) * ((y_6)**16) + 
            L0x200198ca_f * (x**1) * ((y_6)**16) + 
            L0x200198cc_f * (x**2) * ((y_6)**16) + 
            L0x200198ce_f * (x**3) * ((y_6)**16) + 
            L0x200198d0_f * (x**0) * ((y_6)**17) + 
            L0x200198d2_f * (x**1) * ((y_6)**17) + 
            L0x200198d4_f * (x**2) * ((y_6)**17) + 
            L0x200198d6_f * (x**3) * ((y_6)**17) + 
            L0x200198d8_f * (x**0) * ((y_6)**18) + 
            L0x200198da_f * (x**1) * ((y_6)**18) + 
            L0x200198dc_f * (x**2) * ((y_6)**18) + 
            L0x200198de_f * (x**3) * ((y_6)**18) + 
            L0x200198e0_f * (x**0) * ((y_6)**19) + 
            L0x200198e2_f * (x**1) * ((y_6)**19) + 
            L0x200198e4_f * (x**2) * ((y_6)**19) + 
            L0x200198e6_f * (x**3) * ((y_6)**19) + 
            L0x200198e8_f * (x**0) * ((y_6)**20) + 
            L0x200198ea_f * (x**1) * ((y_6)**20) + 
            L0x200198ec_f * (x**2) * ((y_6)**20) + 
            L0x200198ee_f * (x**3) * ((y_6)**20) + 
            L0x200198f0_f * (x**0) * ((y_6)**21) + 
            L0x200198f2_f * (x**1) * ((y_6)**21) + 
            L0x200198f4_f * (x**2) * ((y_6)**21) + 
            L0x200198f6_f * (x**3) * ((y_6)**21) + 
            L0x200198f8_f * (x**0) * ((y_6)**22) + 
            L0x200198fa_f * (x**1) * ((y_6)**22) + 
            L0x200198fc_f * (x**2) * ((y_6)**22) + 
            L0x200198fe_f * (x**3) * ((y_6)**22) + 
            L0x20019900_f * (x**0) * ((y_6)**23) + 
            L0x20019902_f * (x**1) * ((y_6)**23) + 
            L0x20019904_f * (x**2) * ((y_6)**23) + 
            L0x20019906_f * (x**3) * ((y_6)**23) + 
            L0x20019908_f * (x**0) * ((y_6)**24) + 
            L0x2001990a_f * (x**1) * ((y_6)**24) + 
            L0x2001990c_f * (x**2) * ((y_6)**24) + 
            L0x2001990e_f * (x**3) * ((y_6)**24) + 
            L0x20019910_f * (x**0) * ((y_6)**25) + 
            L0x20019912_f * (x**1) * ((y_6)**25) + 
            L0x20019914_f * (x**2) * ((y_6)**25) + 
            L0x20019916_f * (x**3) * ((y_6)**25) + 
            L0x20019918_f * (x**0) * ((y_6)**26) + 
            L0x2001991a_f * (x**1) * ((y_6)**26) + 
            L0x2001991c_f * (x**2) * ((y_6)**26) + 
            L0x2001991e_f * (x**3) * ((y_6)**26) + 
            L0x20019920_f * (x**0) * ((y_6)**27) + 
            L0x20019922_f * (x**1) * ((y_6)**27) + 
            L0x20019924_f * (x**2) * ((y_6)**27) + 
            L0x20019926_f * (x**3) * ((y_6)**27) + 
            L0x20019928_f * (x**0) * ((y_6)**28) + 
            L0x2001992a_f * (x**1) * ((y_6)**28) + 
            L0x2001992c_f * (x**2) * ((y_6)**28) + 
            L0x2001992e_f * (x**3) * ((y_6)**28) + 
            L0x20019930_f * (x**0) * ((y_6)**29) + 
            L0x20019932_f * (x**1) * ((y_6)**29) + 
            L0x20019934_f * (x**2) * ((y_6)**29) + 
            L0x20019936_f * (x**3) * ((y_6)**29) + 
            L0x20019938_f * (x**0) * ((y_6)**30) + 
            L0x2001993a_f * (x**1) * ((y_6)**30) + 
            L0x2001993c_f * (x**2) * ((y_6)**30) + 
            L0x2001993e_f * (x**3) * ((y_6)**30) + 
            L0x20019940_f * (x**0) * ((y_6)**31) + 
            L0x20019942_f * (x**1) * ((y_6)**31) + 
            L0x20019944_f * (x**2) * ((y_6)**31) + 
            L0x20019946_f * (x**3) * ((y_6)**31) + 
            L0x20019948_f * (x**0) * ((y_6)**32) + 
            L0x2001994a_f * (x**1) * ((y_6)**32) + 
            L0x2001994c_f * (x**2) * ((y_6)**32) + 
            L0x2001994e_f * (x**3) * ((y_6)**32) + 
            L0x20019950_f * (x**0) * ((y_6)**33) + 
            L0x20019952_f * (x**1) * ((y_6)**33) + 
            L0x20019954_f * (x**2) * ((y_6)**33) + 
            L0x20019956_f * (x**3) * ((y_6)**33) + 
            L0x20019958_f * (x**0) * ((y_6)**34) + 
            L0x2001995a_f * (x**1) * ((y_6)**34) + 
            L0x2001995c_f * (x**2) * ((y_6)**34) + 
            L0x2001995e_f * (x**3) * ((y_6)**34) + 
            L0x20019960_f * (x**0) * ((y_6)**35) + 
            L0x20019962_f * (x**1) * ((y_6)**35) + 
            L0x20019964_f * (x**2) * ((y_6)**35) + 
            L0x20019966_f * (x**3) * ((y_6)**35) + 
            L0x20019968_f * (x**0) * ((y_6)**36) + 
            L0x2001996a_f * (x**1) * ((y_6)**36) + 
            L0x2001996c_f * (x**2) * ((y_6)**36) + 
            L0x2001996e_f * (x**3) * ((y_6)**36) + 
            L0x20019970_f * (x**0) * ((y_6)**37) + 
            L0x20019972_f * (x**1) * ((y_6)**37) + 
            L0x20019974_f * (x**2) * ((y_6)**37) + 
            L0x20019976_f * (x**3) * ((y_6)**37) + 
            L0x20019978_f * (x**0) * ((y_6)**38) + 
            L0x2001997a_f * (x**1) * ((y_6)**38) + 
            L0x2001997c_f * (x**2) * ((y_6)**38) + 
            L0x2001997e_f * (x**3) * ((y_6)**38) + 
            L0x20019980_f * (x**0) * ((y_6)**39) + 
            L0x20019982_f * (x**1) * ((y_6)**39) + 
            L0x20019984_f * (x**2) * ((y_6)**39) + 
            L0x20019986_f * (x**3) * ((y_6)**39) + 
            L0x20019988_f * (x**0) * ((y_6)**40) + 
            L0x2001998a_f * (x**1) * ((y_6)**40) + 
            L0x2001998c_f * (x**2) * ((y_6)**40) + 
            L0x2001998e_f * (x**3) * ((y_6)**40) + 
            L0x20019990_f * (x**0) * ((y_6)**41) + 
            L0x20019992_f * (x**1) * ((y_6)**41) + 
            L0x20019994_f * (x**2) * ((y_6)**41) + 
            L0x20019996_f * (x**3) * ((y_6)**41) + 
            L0x20019998_f * (x**0) * ((y_6)**42) + 
            L0x2001999a_f * (x**1) * ((y_6)**42) + 
            L0x2001999c_f * (x**2) * ((y_6)**42) + 
            L0x2001999e_f * (x**3) * ((y_6)**42) + 
            L0x200199a0_f * (x**0) * ((y_6)**43) + 
            L0x200199a2_f * (x**1) * ((y_6)**43) + 
            L0x200199a4_f * (x**2) * ((y_6)**43) + 
            L0x200199a6_f * (x**3) * ((y_6)**43) + 
            L0x200199a8_f * (x**0) * ((y_6)**44) + 
            L0x200199aa_f * (x**1) * ((y_6)**44) + 
            L0x200199ac_f * (x**2) * ((y_6)**44) + 
            L0x200199ae_f * (x**3) * ((y_6)**44) + 
            L0x200199b0_f * (x**0) * ((y_6)**45) + 
            L0x200199b2_f * (x**1) * ((y_6)**45) + 
            L0x200199b4_f * (x**2) * ((y_6)**45) + 
            L0x200199b6_f * (x**3) * ((y_6)**45) + 
            L0x200199b8_f * (x**0) * ((y_6)**46) + 
            L0x200199ba_f * (x**1) * ((y_6)**46) + 
            L0x200199bc_f * (x**2) * ((y_6)**46) + 
            L0x200199be_f * (x**3) * ((y_6)**46) + 
            L0x200199c0_f * (x**0) * ((y_6)**47) + 
            L0x200199c2_f * (x**1) * ((y_6)**47) + 
            L0x200199c4_f * (x**2) * ((y_6)**47) + 
            L0x200199c6_f * (x**3) * ((y_6)**47) + 
            L0x200199c8_f * (x**0) * ((y_6)**48) + 
            L0x200199ca_f * (x**1) * ((y_6)**48) + 
            L0x200199cc_f * (x**2) * ((y_6)**48) + 
            L0x200199ce_f * (x**3) * ((y_6)**48) + 
            L0x200199d0_f * (x**0) * ((y_6)**49) + 
            L0x200199d2_f * (x**1) * ((y_6)**49) + 
            L0x200199d4_f * (x**2) * ((y_6)**49) + 
            L0x200199d6_f * (x**3) * ((y_6)**49) + 
            L0x200199d8_f * (x**0) * ((y_6)**50) + 
            L0x200199da_f * (x**1) * ((y_6)**50) + 
            L0x200199dc_f * (x**2) * ((y_6)**50) + 
            L0x200199de_f * (x**3) * ((y_6)**50) + 
            L0x200199e0_f * (x**0) * ((y_6)**51) + 
            L0x200199e2_f * (x**1) * ((y_6)**51) + 
            L0x200199e4_f * (x**2) * ((y_6)**51) + 
            L0x200199e6_f * (x**3) * ((y_6)**51) + 
            L0x200199e8_f * (x**0) * ((y_6)**52) + 
            L0x200199ea_f * (x**1) * ((y_6)**52) + 
            L0x200199ec_f * (x**2) * ((y_6)**52) + 
            L0x200199ee_f * (x**3) * ((y_6)**52) + 
            L0x200199f0_f * (x**0) * ((y_6)**53) + 
            L0x200199f2_f * (x**1) * ((y_6)**53) + 
            L0x200199f4_f * (x**2) * ((y_6)**53) + 
            L0x200199f6_f * (x**3) * ((y_6)**53) + 
            L0x200199f8_f * (x**0) * ((y_6)**54) + 
            L0x200199fa_f * (x**1) * ((y_6)**54) + 
            L0x200199fc_f * (x**2) * ((y_6)**54) + 
            L0x200199fe_f * (x**3) * ((y_6)**54) + 
            L0x20019a00_f * (x**0) * ((y_6)**55) + 
            L0x20019a02_f * (x**1) * ((y_6)**55) + 
            L0x20019a04_f * (x**2) * ((y_6)**55) + 
            L0x20019a06_f * (x**3) * ((y_6)**55) + 
            L0x20019a08_f * (x**0) * ((y_6)**56) + 
            L0x20019a0a_f * (x**1) * ((y_6)**56) + 
            L0x20019a0c_f * (x**2) * ((y_6)**56) + 
            L0x20019a0e_f * (x**3) * ((y_6)**56) + 
            L0x20019a10_f * (x**0) * ((y_6)**57) + 
            L0x20019a12_f * (x**1) * ((y_6)**57) + 
            L0x20019a14_f * (x**2) * ((y_6)**57) + 
            L0x20019a16_f * (x**3) * ((y_6)**57) + 
            L0x20019a18_f * (x**0) * ((y_6)**58) + 
            L0x20019a1a_f * (x**1) * ((y_6)**58) + 
            L0x20019a1c_f * (x**2) * ((y_6)**58) + 
            L0x20019a1e_f * (x**3) * ((y_6)**58) + 
            L0x20019a20_f * (x**0) * ((y_6)**59) + 
            L0x20019a22_f * (x**1) * ((y_6)**59) + 
            L0x20019a24_f * (x**2) * ((y_6)**59) + 
            L0x20019a26_f * (x**3) * ((y_6)**59) + 
            L0x20019a28_f * (x**0) * ((y_6)**60) + 
            L0x20019a2a_f * (x**1) * ((y_6)**60) + 
            L0x20019a2c_f * (x**2) * ((y_6)**60) + 
            L0x20019a2e_f * (x**3) * ((y_6)**60) + 
            L0x20019a30_f * (x**0) * ((y_6)**61) + 
            L0x20019a32_f * (x**1) * ((y_6)**61) + 
            L0x20019a34_f * (x**2) * ((y_6)**61) + 
            L0x20019a36_f * (x**3) * ((y_6)**61) + 
            L0x20019a38_f * (x**0) * ((y_6)**62) + 
            L0x20019a3a_f * (x**1) * ((y_6)**62) + 
            L0x20019a3c_f * (x**2) * ((y_6)**62) + 
            L0x20019a3e_f * (x**3) * ((y_6)**62) + 
            L0x20019a40_f * (x**0) * ((y_6)**63) + 
            L0x20019a42_f * (x**1) * ((y_6)**63) + 
            L0x20019a44_f * (x**2) * ((y_6)**63) + 
            L0x20019a46_f * (x**3) * ((y_6)**63)
          )
          [25570049, x**4 - y_0_15 * 21206546, y_0_15 - 1]
  ] prove with [cuts [4, 22], all ghosts]
  &&
  true
;

cut (* 41 *)
  true && true;

(* slice 2 *)
cut (* 42 *)
  and [
    (* inp_poly_16 *)
    eqmod (2**32) * (inp_poly_16 * inp_poly_16)
          (
            L0x20019848_f * (x**0) * ((y_6)**0) + 
            L0x2001984a_f * (x**1) * ((y_6)**0) + 
            L0x2001984c_f * (x**2) * ((y_6)**0) + 
            L0x2001984e_f * (x**3) * ((y_6)**0) + 
            L0x20019850_f * (x**0) * ((y_6)**1) + 
            L0x20019852_f * (x**1) * ((y_6)**1) + 
            L0x20019854_f * (x**2) * ((y_6)**1) + 
            L0x20019856_f * (x**3) * ((y_6)**1) + 
            L0x20019858_f * (x**0) * ((y_6)**2) + 
            L0x2001985a_f * (x**1) * ((y_6)**2) + 
            L0x2001985c_f * (x**2) * ((y_6)**2) + 
            L0x2001985e_f * (x**3) * ((y_6)**2) + 
            L0x20019860_f * (x**0) * ((y_6)**3) + 
            L0x20019862_f * (x**1) * ((y_6)**3) + 
            L0x20019864_f * (x**2) * ((y_6)**3) + 
            L0x20019866_f * (x**3) * ((y_6)**3) + 
            L0x20019868_f * (x**0) * ((y_6)**4) + 
            L0x2001986a_f * (x**1) * ((y_6)**4) + 
            L0x2001986c_f * (x**2) * ((y_6)**4) + 
            L0x2001986e_f * (x**3) * ((y_6)**4) + 
            L0x20019870_f * (x**0) * ((y_6)**5) + 
            L0x20019872_f * (x**1) * ((y_6)**5) + 
            L0x20019874_f * (x**2) * ((y_6)**5) + 
            L0x20019876_f * (x**3) * ((y_6)**5) + 
            L0x20019878_f * (x**0) * ((y_6)**6) + 
            L0x2001987a_f * (x**1) * ((y_6)**6) + 
            L0x2001987c_f * (x**2) * ((y_6)**6) + 
            L0x2001987e_f * (x**3) * ((y_6)**6) + 
            L0x20019880_f * (x**0) * ((y_6)**7) + 
            L0x20019882_f * (x**1) * ((y_6)**7) + 
            L0x20019884_f * (x**2) * ((y_6)**7) + 
            L0x20019886_f * (x**3) * ((y_6)**7) + 
            L0x20019888_f * (x**0) * ((y_6)**8) + 
            L0x2001988a_f * (x**1) * ((y_6)**8) + 
            L0x2001988c_f * (x**2) * ((y_6)**8) + 
            L0x2001988e_f * (x**3) * ((y_6)**8) + 
            L0x20019890_f * (x**0) * ((y_6)**9) + 
            L0x20019892_f * (x**1) * ((y_6)**9) + 
            L0x20019894_f * (x**2) * ((y_6)**9) + 
            L0x20019896_f * (x**3) * ((y_6)**9) + 
            L0x20019898_f * (x**0) * ((y_6)**10) + 
            L0x2001989a_f * (x**1) * ((y_6)**10) + 
            L0x2001989c_f * (x**2) * ((y_6)**10) + 
            L0x2001989e_f * (x**3) * ((y_6)**10) + 
            L0x200198a0_f * (x**0) * ((y_6)**11) + 
            L0x200198a2_f * (x**1) * ((y_6)**11) + 
            L0x200198a4_f * (x**2) * ((y_6)**11) + 
            L0x200198a6_f * (x**3) * ((y_6)**11) + 
            L0x200198a8_f * (x**0) * ((y_6)**12) + 
            L0x200198aa_f * (x**1) * ((y_6)**12) + 
            L0x200198ac_f * (x**2) * ((y_6)**12) + 
            L0x200198ae_f * (x**3) * ((y_6)**12) + 
            L0x200198b0_f * (x**0) * ((y_6)**13) + 
            L0x200198b2_f * (x**1) * ((y_6)**13) + 
            L0x200198b4_f * (x**2) * ((y_6)**13) + 
            L0x200198b6_f * (x**3) * ((y_6)**13) + 
            L0x200198b8_f * (x**0) * ((y_6)**14) + 
            L0x200198ba_f * (x**1) * ((y_6)**14) + 
            L0x200198bc_f * (x**2) * ((y_6)**14) + 
            L0x200198be_f * (x**3) * ((y_6)**14) + 
            L0x200198c0_f * (x**0) * ((y_6)**15) + 
            L0x200198c2_f * (x**1) * ((y_6)**15) + 
            L0x200198c4_f * (x**2) * ((y_6)**15) + 
            L0x200198c6_f * (x**3) * ((y_6)**15) + 
            L0x200198c8_f * (x**0) * ((y_6)**16) + 
            L0x200198ca_f * (x**1) * ((y_6)**16) + 
            L0x200198cc_f * (x**2) * ((y_6)**16) + 
            L0x200198ce_f * (x**3) * ((y_6)**16) + 
            L0x200198d0_f * (x**0) * ((y_6)**17) + 
            L0x200198d2_f * (x**1) * ((y_6)**17) + 
            L0x200198d4_f * (x**2) * ((y_6)**17) + 
            L0x200198d6_f * (x**3) * ((y_6)**17) + 
            L0x200198d8_f * (x**0) * ((y_6)**18) + 
            L0x200198da_f * (x**1) * ((y_6)**18) + 
            L0x200198dc_f * (x**2) * ((y_6)**18) + 
            L0x200198de_f * (x**3) * ((y_6)**18) + 
            L0x200198e0_f * (x**0) * ((y_6)**19) + 
            L0x200198e2_f * (x**1) * ((y_6)**19) + 
            L0x200198e4_f * (x**2) * ((y_6)**19) + 
            L0x200198e6_f * (x**3) * ((y_6)**19) + 
            L0x200198e8_f * (x**0) * ((y_6)**20) + 
            L0x200198ea_f * (x**1) * ((y_6)**20) + 
            L0x200198ec_f * (x**2) * ((y_6)**20) + 
            L0x200198ee_f * (x**3) * ((y_6)**20) + 
            L0x200198f0_f * (x**0) * ((y_6)**21) + 
            L0x200198f2_f * (x**1) * ((y_6)**21) + 
            L0x200198f4_f * (x**2) * ((y_6)**21) + 
            L0x200198f6_f * (x**3) * ((y_6)**21) + 
            L0x200198f8_f * (x**0) * ((y_6)**22) + 
            L0x200198fa_f * (x**1) * ((y_6)**22) + 
            L0x200198fc_f * (x**2) * ((y_6)**22) + 
            L0x200198fe_f * (x**3) * ((y_6)**22) + 
            L0x20019900_f * (x**0) * ((y_6)**23) + 
            L0x20019902_f * (x**1) * ((y_6)**23) + 
            L0x20019904_f * (x**2) * ((y_6)**23) + 
            L0x20019906_f * (x**3) * ((y_6)**23) + 
            L0x20019908_f * (x**0) * ((y_6)**24) + 
            L0x2001990a_f * (x**1) * ((y_6)**24) + 
            L0x2001990c_f * (x**2) * ((y_6)**24) + 
            L0x2001990e_f * (x**3) * ((y_6)**24) + 
            L0x20019910_f * (x**0) * ((y_6)**25) + 
            L0x20019912_f * (x**1) * ((y_6)**25) + 
            L0x20019914_f * (x**2) * ((y_6)**25) + 
            L0x20019916_f * (x**3) * ((y_6)**25) + 
            L0x20019918_f * (x**0) * ((y_6)**26) + 
            L0x2001991a_f * (x**1) * ((y_6)**26) + 
            L0x2001991c_f * (x**2) * ((y_6)**26) + 
            L0x2001991e_f * (x**3) * ((y_6)**26) + 
            L0x20019920_f * (x**0) * ((y_6)**27) + 
            L0x20019922_f * (x**1) * ((y_6)**27) + 
            L0x20019924_f * (x**2) * ((y_6)**27) + 
            L0x20019926_f * (x**3) * ((y_6)**27) + 
            L0x20019928_f * (x**0) * ((y_6)**28) + 
            L0x2001992a_f * (x**1) * ((y_6)**28) + 
            L0x2001992c_f * (x**2) * ((y_6)**28) + 
            L0x2001992e_f * (x**3) * ((y_6)**28) + 
            L0x20019930_f * (x**0) * ((y_6)**29) + 
            L0x20019932_f * (x**1) * ((y_6)**29) + 
            L0x20019934_f * (x**2) * ((y_6)**29) + 
            L0x20019936_f * (x**3) * ((y_6)**29) + 
            L0x20019938_f * (x**0) * ((y_6)**30) + 
            L0x2001993a_f * (x**1) * ((y_6)**30) + 
            L0x2001993c_f * (x**2) * ((y_6)**30) + 
            L0x2001993e_f * (x**3) * ((y_6)**30) + 
            L0x20019940_f * (x**0) * ((y_6)**31) + 
            L0x20019942_f * (x**1) * ((y_6)**31) + 
            L0x20019944_f * (x**2) * ((y_6)**31) + 
            L0x20019946_f * (x**3) * ((y_6)**31) + 
            L0x20019948_f * (x**0) * ((y_6)**32) + 
            L0x2001994a_f * (x**1) * ((y_6)**32) + 
            L0x2001994c_f * (x**2) * ((y_6)**32) + 
            L0x2001994e_f * (x**3) * ((y_6)**32) + 
            L0x20019950_f * (x**0) * ((y_6)**33) + 
            L0x20019952_f * (x**1) * ((y_6)**33) + 
            L0x20019954_f * (x**2) * ((y_6)**33) + 
            L0x20019956_f * (x**3) * ((y_6)**33) + 
            L0x20019958_f * (x**0) * ((y_6)**34) + 
            L0x2001995a_f * (x**1) * ((y_6)**34) + 
            L0x2001995c_f * (x**2) * ((y_6)**34) + 
            L0x2001995e_f * (x**3) * ((y_6)**34) + 
            L0x20019960_f * (x**0) * ((y_6)**35) + 
            L0x20019962_f * (x**1) * ((y_6)**35) + 
            L0x20019964_f * (x**2) * ((y_6)**35) + 
            L0x20019966_f * (x**3) * ((y_6)**35) + 
            L0x20019968_f * (x**0) * ((y_6)**36) + 
            L0x2001996a_f * (x**1) * ((y_6)**36) + 
            L0x2001996c_f * (x**2) * ((y_6)**36) + 
            L0x2001996e_f * (x**3) * ((y_6)**36) + 
            L0x20019970_f * (x**0) * ((y_6)**37) + 
            L0x20019972_f * (x**1) * ((y_6)**37) + 
            L0x20019974_f * (x**2) * ((y_6)**37) + 
            L0x20019976_f * (x**3) * ((y_6)**37) + 
            L0x20019978_f * (x**0) * ((y_6)**38) + 
            L0x2001997a_f * (x**1) * ((y_6)**38) + 
            L0x2001997c_f * (x**2) * ((y_6)**38) + 
            L0x2001997e_f * (x**3) * ((y_6)**38) + 
            L0x20019980_f * (x**0) * ((y_6)**39) + 
            L0x20019982_f * (x**1) * ((y_6)**39) + 
            L0x20019984_f * (x**2) * ((y_6)**39) + 
            L0x20019986_f * (x**3) * ((y_6)**39) + 
            L0x20019988_f * (x**0) * ((y_6)**40) + 
            L0x2001998a_f * (x**1) * ((y_6)**40) + 
            L0x2001998c_f * (x**2) * ((y_6)**40) + 
            L0x2001998e_f * (x**3) * ((y_6)**40) + 
            L0x20019990_f * (x**0) * ((y_6)**41) + 
            L0x20019992_f * (x**1) * ((y_6)**41) + 
            L0x20019994_f * (x**2) * ((y_6)**41) + 
            L0x20019996_f * (x**3) * ((y_6)**41) + 
            L0x20019998_f * (x**0) * ((y_6)**42) + 
            L0x2001999a_f * (x**1) * ((y_6)**42) + 
            L0x2001999c_f * (x**2) * ((y_6)**42) + 
            L0x2001999e_f * (x**3) * ((y_6)**42) + 
            L0x200199a0_f * (x**0) * ((y_6)**43) + 
            L0x200199a2_f * (x**1) * ((y_6)**43) + 
            L0x200199a4_f * (x**2) * ((y_6)**43) + 
            L0x200199a6_f * (x**3) * ((y_6)**43) + 
            L0x200199a8_f * (x**0) * ((y_6)**44) + 
            L0x200199aa_f * (x**1) * ((y_6)**44) + 
            L0x200199ac_f * (x**2) * ((y_6)**44) + 
            L0x200199ae_f * (x**3) * ((y_6)**44) + 
            L0x200199b0_f * (x**0) * ((y_6)**45) + 
            L0x200199b2_f * (x**1) * ((y_6)**45) + 
            L0x200199b4_f * (x**2) * ((y_6)**45) + 
            L0x200199b6_f * (x**3) * ((y_6)**45) + 
            L0x200199b8_f * (x**0) * ((y_6)**46) + 
            L0x200199ba_f * (x**1) * ((y_6)**46) + 
            L0x200199bc_f * (x**2) * ((y_6)**46) + 
            L0x200199be_f * (x**3) * ((y_6)**46) + 
            L0x200199c0_f * (x**0) * ((y_6)**47) + 
            L0x200199c2_f * (x**1) * ((y_6)**47) + 
            L0x200199c4_f * (x**2) * ((y_6)**47) + 
            L0x200199c6_f * (x**3) * ((y_6)**47) + 
            L0x200199c8_f * (x**0) * ((y_6)**48) + 
            L0x200199ca_f * (x**1) * ((y_6)**48) + 
            L0x200199cc_f * (x**2) * ((y_6)**48) + 
            L0x200199ce_f * (x**3) * ((y_6)**48) + 
            L0x200199d0_f * (x**0) * ((y_6)**49) + 
            L0x200199d2_f * (x**1) * ((y_6)**49) + 
            L0x200199d4_f * (x**2) * ((y_6)**49) + 
            L0x200199d6_f * (x**3) * ((y_6)**49) + 
            L0x200199d8_f * (x**0) * ((y_6)**50) + 
            L0x200199da_f * (x**1) * ((y_6)**50) + 
            L0x200199dc_f * (x**2) * ((y_6)**50) + 
            L0x200199de_f * (x**3) * ((y_6)**50) + 
            L0x200199e0_f * (x**0) * ((y_6)**51) + 
            L0x200199e2_f * (x**1) * ((y_6)**51) + 
            L0x200199e4_f * (x**2) * ((y_6)**51) + 
            L0x200199e6_f * (x**3) * ((y_6)**51) + 
            L0x200199e8_f * (x**0) * ((y_6)**52) + 
            L0x200199ea_f * (x**1) * ((y_6)**52) + 
            L0x200199ec_f * (x**2) * ((y_6)**52) + 
            L0x200199ee_f * (x**3) * ((y_6)**52) + 
            L0x200199f0_f * (x**0) * ((y_6)**53) + 
            L0x200199f2_f * (x**1) * ((y_6)**53) + 
            L0x200199f4_f * (x**2) * ((y_6)**53) + 
            L0x200199f6_f * (x**3) * ((y_6)**53) + 
            L0x200199f8_f * (x**0) * ((y_6)**54) + 
            L0x200199fa_f * (x**1) * ((y_6)**54) + 
            L0x200199fc_f * (x**2) * ((y_6)**54) + 
            L0x200199fe_f * (x**3) * ((y_6)**54) + 
            L0x20019a00_f * (x**0) * ((y_6)**55) + 
            L0x20019a02_f * (x**1) * ((y_6)**55) + 
            L0x20019a04_f * (x**2) * ((y_6)**55) + 
            L0x20019a06_f * (x**3) * ((y_6)**55) + 
            L0x20019a08_f * (x**0) * ((y_6)**56) + 
            L0x20019a0a_f * (x**1) * ((y_6)**56) + 
            L0x20019a0c_f * (x**2) * ((y_6)**56) + 
            L0x20019a0e_f * (x**3) * ((y_6)**56) + 
            L0x20019a10_f * (x**0) * ((y_6)**57) + 
            L0x20019a12_f * (x**1) * ((y_6)**57) + 
            L0x20019a14_f * (x**2) * ((y_6)**57) + 
            L0x20019a16_f * (x**3) * ((y_6)**57) + 
            L0x20019a18_f * (x**0) * ((y_6)**58) + 
            L0x20019a1a_f * (x**1) * ((y_6)**58) + 
            L0x20019a1c_f * (x**2) * ((y_6)**58) + 
            L0x20019a1e_f * (x**3) * ((y_6)**58) + 
            L0x20019a20_f * (x**0) * ((y_6)**59) + 
            L0x20019a22_f * (x**1) * ((y_6)**59) + 
            L0x20019a24_f * (x**2) * ((y_6)**59) + 
            L0x20019a26_f * (x**3) * ((y_6)**59) + 
            L0x20019a28_f * (x**0) * ((y_6)**60) + 
            L0x20019a2a_f * (x**1) * ((y_6)**60) + 
            L0x20019a2c_f * (x**2) * ((y_6)**60) + 
            L0x20019a2e_f * (x**3) * ((y_6)**60) + 
            L0x20019a30_f * (x**0) * ((y_6)**61) + 
            L0x20019a32_f * (x**1) * ((y_6)**61) + 
            L0x20019a34_f * (x**2) * ((y_6)**61) + 
            L0x20019a36_f * (x**3) * ((y_6)**61) + 
            L0x20019a38_f * (x**0) * ((y_6)**62) + 
            L0x20019a3a_f * (x**1) * ((y_6)**62) + 
            L0x20019a3c_f * (x**2) * ((y_6)**62) + 
            L0x20019a3e_f * (x**3) * ((y_6)**62) + 
            L0x20019a40_f * (x**0) * ((y_6)**63) + 
            L0x20019a42_f * (x**1) * ((y_6)**63) + 
            L0x20019a44_f * (x**2) * ((y_6)**63) + 
            L0x20019a46_f * (x**3) * ((y_6)**63)
          )
          [25570049, x**4 - y_0_16 * 21713494, y_0_16 - 1],
    (* inp_poly_17 *)
    eqmod (2**32) * (inp_poly_17 * inp_poly_17)
          (
            L0x20019848_f * (x**0) * ((y_6)**0) + 
            L0x2001984a_f * (x**1) * ((y_6)**0) + 
            L0x2001984c_f * (x**2) * ((y_6)**0) + 
            L0x2001984e_f * (x**3) * ((y_6)**0) + 
            L0x20019850_f * (x**0) * ((y_6)**1) + 
            L0x20019852_f * (x**1) * ((y_6)**1) + 
            L0x20019854_f * (x**2) * ((y_6)**1) + 
            L0x20019856_f * (x**3) * ((y_6)**1) + 
            L0x20019858_f * (x**0) * ((y_6)**2) + 
            L0x2001985a_f * (x**1) * ((y_6)**2) + 
            L0x2001985c_f * (x**2) * ((y_6)**2) + 
            L0x2001985e_f * (x**3) * ((y_6)**2) + 
            L0x20019860_f * (x**0) * ((y_6)**3) + 
            L0x20019862_f * (x**1) * ((y_6)**3) + 
            L0x20019864_f * (x**2) * ((y_6)**3) + 
            L0x20019866_f * (x**3) * ((y_6)**3) + 
            L0x20019868_f * (x**0) * ((y_6)**4) + 
            L0x2001986a_f * (x**1) * ((y_6)**4) + 
            L0x2001986c_f * (x**2) * ((y_6)**4) + 
            L0x2001986e_f * (x**3) * ((y_6)**4) + 
            L0x20019870_f * (x**0) * ((y_6)**5) + 
            L0x20019872_f * (x**1) * ((y_6)**5) + 
            L0x20019874_f * (x**2) * ((y_6)**5) + 
            L0x20019876_f * (x**3) * ((y_6)**5) + 
            L0x20019878_f * (x**0) * ((y_6)**6) + 
            L0x2001987a_f * (x**1) * ((y_6)**6) + 
            L0x2001987c_f * (x**2) * ((y_6)**6) + 
            L0x2001987e_f * (x**3) * ((y_6)**6) + 
            L0x20019880_f * (x**0) * ((y_6)**7) + 
            L0x20019882_f * (x**1) * ((y_6)**7) + 
            L0x20019884_f * (x**2) * ((y_6)**7) + 
            L0x20019886_f * (x**3) * ((y_6)**7) + 
            L0x20019888_f * (x**0) * ((y_6)**8) + 
            L0x2001988a_f * (x**1) * ((y_6)**8) + 
            L0x2001988c_f * (x**2) * ((y_6)**8) + 
            L0x2001988e_f * (x**3) * ((y_6)**8) + 
            L0x20019890_f * (x**0) * ((y_6)**9) + 
            L0x20019892_f * (x**1) * ((y_6)**9) + 
            L0x20019894_f * (x**2) * ((y_6)**9) + 
            L0x20019896_f * (x**3) * ((y_6)**9) + 
            L0x20019898_f * (x**0) * ((y_6)**10) + 
            L0x2001989a_f * (x**1) * ((y_6)**10) + 
            L0x2001989c_f * (x**2) * ((y_6)**10) + 
            L0x2001989e_f * (x**3) * ((y_6)**10) + 
            L0x200198a0_f * (x**0) * ((y_6)**11) + 
            L0x200198a2_f * (x**1) * ((y_6)**11) + 
            L0x200198a4_f * (x**2) * ((y_6)**11) + 
            L0x200198a6_f * (x**3) * ((y_6)**11) + 
            L0x200198a8_f * (x**0) * ((y_6)**12) + 
            L0x200198aa_f * (x**1) * ((y_6)**12) + 
            L0x200198ac_f * (x**2) * ((y_6)**12) + 
            L0x200198ae_f * (x**3) * ((y_6)**12) + 
            L0x200198b0_f * (x**0) * ((y_6)**13) + 
            L0x200198b2_f * (x**1) * ((y_6)**13) + 
            L0x200198b4_f * (x**2) * ((y_6)**13) + 
            L0x200198b6_f * (x**3) * ((y_6)**13) + 
            L0x200198b8_f * (x**0) * ((y_6)**14) + 
            L0x200198ba_f * (x**1) * ((y_6)**14) + 
            L0x200198bc_f * (x**2) * ((y_6)**14) + 
            L0x200198be_f * (x**3) * ((y_6)**14) + 
            L0x200198c0_f * (x**0) * ((y_6)**15) + 
            L0x200198c2_f * (x**1) * ((y_6)**15) + 
            L0x200198c4_f * (x**2) * ((y_6)**15) + 
            L0x200198c6_f * (x**3) * ((y_6)**15) + 
            L0x200198c8_f * (x**0) * ((y_6)**16) + 
            L0x200198ca_f * (x**1) * ((y_6)**16) + 
            L0x200198cc_f * (x**2) * ((y_6)**16) + 
            L0x200198ce_f * (x**3) * ((y_6)**16) + 
            L0x200198d0_f * (x**0) * ((y_6)**17) + 
            L0x200198d2_f * (x**1) * ((y_6)**17) + 
            L0x200198d4_f * (x**2) * ((y_6)**17) + 
            L0x200198d6_f * (x**3) * ((y_6)**17) + 
            L0x200198d8_f * (x**0) * ((y_6)**18) + 
            L0x200198da_f * (x**1) * ((y_6)**18) + 
            L0x200198dc_f * (x**2) * ((y_6)**18) + 
            L0x200198de_f * (x**3) * ((y_6)**18) + 
            L0x200198e0_f * (x**0) * ((y_6)**19) + 
            L0x200198e2_f * (x**1) * ((y_6)**19) + 
            L0x200198e4_f * (x**2) * ((y_6)**19) + 
            L0x200198e6_f * (x**3) * ((y_6)**19) + 
            L0x200198e8_f * (x**0) * ((y_6)**20) + 
            L0x200198ea_f * (x**1) * ((y_6)**20) + 
            L0x200198ec_f * (x**2) * ((y_6)**20) + 
            L0x200198ee_f * (x**3) * ((y_6)**20) + 
            L0x200198f0_f * (x**0) * ((y_6)**21) + 
            L0x200198f2_f * (x**1) * ((y_6)**21) + 
            L0x200198f4_f * (x**2) * ((y_6)**21) + 
            L0x200198f6_f * (x**3) * ((y_6)**21) + 
            L0x200198f8_f * (x**0) * ((y_6)**22) + 
            L0x200198fa_f * (x**1) * ((y_6)**22) + 
            L0x200198fc_f * (x**2) * ((y_6)**22) + 
            L0x200198fe_f * (x**3) * ((y_6)**22) + 
            L0x20019900_f * (x**0) * ((y_6)**23) + 
            L0x20019902_f * (x**1) * ((y_6)**23) + 
            L0x20019904_f * (x**2) * ((y_6)**23) + 
            L0x20019906_f * (x**3) * ((y_6)**23) + 
            L0x20019908_f * (x**0) * ((y_6)**24) + 
            L0x2001990a_f * (x**1) * ((y_6)**24) + 
            L0x2001990c_f * (x**2) * ((y_6)**24) + 
            L0x2001990e_f * (x**3) * ((y_6)**24) + 
            L0x20019910_f * (x**0) * ((y_6)**25) + 
            L0x20019912_f * (x**1) * ((y_6)**25) + 
            L0x20019914_f * (x**2) * ((y_6)**25) + 
            L0x20019916_f * (x**3) * ((y_6)**25) + 
            L0x20019918_f * (x**0) * ((y_6)**26) + 
            L0x2001991a_f * (x**1) * ((y_6)**26) + 
            L0x2001991c_f * (x**2) * ((y_6)**26) + 
            L0x2001991e_f * (x**3) * ((y_6)**26) + 
            L0x20019920_f * (x**0) * ((y_6)**27) + 
            L0x20019922_f * (x**1) * ((y_6)**27) + 
            L0x20019924_f * (x**2) * ((y_6)**27) + 
            L0x20019926_f * (x**3) * ((y_6)**27) + 
            L0x20019928_f * (x**0) * ((y_6)**28) + 
            L0x2001992a_f * (x**1) * ((y_6)**28) + 
            L0x2001992c_f * (x**2) * ((y_6)**28) + 
            L0x2001992e_f * (x**3) * ((y_6)**28) + 
            L0x20019930_f * (x**0) * ((y_6)**29) + 
            L0x20019932_f * (x**1) * ((y_6)**29) + 
            L0x20019934_f * (x**2) * ((y_6)**29) + 
            L0x20019936_f * (x**3) * ((y_6)**29) + 
            L0x20019938_f * (x**0) * ((y_6)**30) + 
            L0x2001993a_f * (x**1) * ((y_6)**30) + 
            L0x2001993c_f * (x**2) * ((y_6)**30) + 
            L0x2001993e_f * (x**3) * ((y_6)**30) + 
            L0x20019940_f * (x**0) * ((y_6)**31) + 
            L0x20019942_f * (x**1) * ((y_6)**31) + 
            L0x20019944_f * (x**2) * ((y_6)**31) + 
            L0x20019946_f * (x**3) * ((y_6)**31) + 
            L0x20019948_f * (x**0) * ((y_6)**32) + 
            L0x2001994a_f * (x**1) * ((y_6)**32) + 
            L0x2001994c_f * (x**2) * ((y_6)**32) + 
            L0x2001994e_f * (x**3) * ((y_6)**32) + 
            L0x20019950_f * (x**0) * ((y_6)**33) + 
            L0x20019952_f * (x**1) * ((y_6)**33) + 
            L0x20019954_f * (x**2) * ((y_6)**33) + 
            L0x20019956_f * (x**3) * ((y_6)**33) + 
            L0x20019958_f * (x**0) * ((y_6)**34) + 
            L0x2001995a_f * (x**1) * ((y_6)**34) + 
            L0x2001995c_f * (x**2) * ((y_6)**34) + 
            L0x2001995e_f * (x**3) * ((y_6)**34) + 
            L0x20019960_f * (x**0) * ((y_6)**35) + 
            L0x20019962_f * (x**1) * ((y_6)**35) + 
            L0x20019964_f * (x**2) * ((y_6)**35) + 
            L0x20019966_f * (x**3) * ((y_6)**35) + 
            L0x20019968_f * (x**0) * ((y_6)**36) + 
            L0x2001996a_f * (x**1) * ((y_6)**36) + 
            L0x2001996c_f * (x**2) * ((y_6)**36) + 
            L0x2001996e_f * (x**3) * ((y_6)**36) + 
            L0x20019970_f * (x**0) * ((y_6)**37) + 
            L0x20019972_f * (x**1) * ((y_6)**37) + 
            L0x20019974_f * (x**2) * ((y_6)**37) + 
            L0x20019976_f * (x**3) * ((y_6)**37) + 
            L0x20019978_f * (x**0) * ((y_6)**38) + 
            L0x2001997a_f * (x**1) * ((y_6)**38) + 
            L0x2001997c_f * (x**2) * ((y_6)**38) + 
            L0x2001997e_f * (x**3) * ((y_6)**38) + 
            L0x20019980_f * (x**0) * ((y_6)**39) + 
            L0x20019982_f * (x**1) * ((y_6)**39) + 
            L0x20019984_f * (x**2) * ((y_6)**39) + 
            L0x20019986_f * (x**3) * ((y_6)**39) + 
            L0x20019988_f * (x**0) * ((y_6)**40) + 
            L0x2001998a_f * (x**1) * ((y_6)**40) + 
            L0x2001998c_f * (x**2) * ((y_6)**40) + 
            L0x2001998e_f * (x**3) * ((y_6)**40) + 
            L0x20019990_f * (x**0) * ((y_6)**41) + 
            L0x20019992_f * (x**1) * ((y_6)**41) + 
            L0x20019994_f * (x**2) * ((y_6)**41) + 
            L0x20019996_f * (x**3) * ((y_6)**41) + 
            L0x20019998_f * (x**0) * ((y_6)**42) + 
            L0x2001999a_f * (x**1) * ((y_6)**42) + 
            L0x2001999c_f * (x**2) * ((y_6)**42) + 
            L0x2001999e_f * (x**3) * ((y_6)**42) + 
            L0x200199a0_f * (x**0) * ((y_6)**43) + 
            L0x200199a2_f * (x**1) * ((y_6)**43) + 
            L0x200199a4_f * (x**2) * ((y_6)**43) + 
            L0x200199a6_f * (x**3) * ((y_6)**43) + 
            L0x200199a8_f * (x**0) * ((y_6)**44) + 
            L0x200199aa_f * (x**1) * ((y_6)**44) + 
            L0x200199ac_f * (x**2) * ((y_6)**44) + 
            L0x200199ae_f * (x**3) * ((y_6)**44) + 
            L0x200199b0_f * (x**0) * ((y_6)**45) + 
            L0x200199b2_f * (x**1) * ((y_6)**45) + 
            L0x200199b4_f * (x**2) * ((y_6)**45) + 
            L0x200199b6_f * (x**3) * ((y_6)**45) + 
            L0x200199b8_f * (x**0) * ((y_6)**46) + 
            L0x200199ba_f * (x**1) * ((y_6)**46) + 
            L0x200199bc_f * (x**2) * ((y_6)**46) + 
            L0x200199be_f * (x**3) * ((y_6)**46) + 
            L0x200199c0_f * (x**0) * ((y_6)**47) + 
            L0x200199c2_f * (x**1) * ((y_6)**47) + 
            L0x200199c4_f * (x**2) * ((y_6)**47) + 
            L0x200199c6_f * (x**3) * ((y_6)**47) + 
            L0x200199c8_f * (x**0) * ((y_6)**48) + 
            L0x200199ca_f * (x**1) * ((y_6)**48) + 
            L0x200199cc_f * (x**2) * ((y_6)**48) + 
            L0x200199ce_f * (x**3) * ((y_6)**48) + 
            L0x200199d0_f * (x**0) * ((y_6)**49) + 
            L0x200199d2_f * (x**1) * ((y_6)**49) + 
            L0x200199d4_f * (x**2) * ((y_6)**49) + 
            L0x200199d6_f * (x**3) * ((y_6)**49) + 
            L0x200199d8_f * (x**0) * ((y_6)**50) + 
            L0x200199da_f * (x**1) * ((y_6)**50) + 
            L0x200199dc_f * (x**2) * ((y_6)**50) + 
            L0x200199de_f * (x**3) * ((y_6)**50) + 
            L0x200199e0_f * (x**0) * ((y_6)**51) + 
            L0x200199e2_f * (x**1) * ((y_6)**51) + 
            L0x200199e4_f * (x**2) * ((y_6)**51) + 
            L0x200199e6_f * (x**3) * ((y_6)**51) + 
            L0x200199e8_f * (x**0) * ((y_6)**52) + 
            L0x200199ea_f * (x**1) * ((y_6)**52) + 
            L0x200199ec_f * (x**2) * ((y_6)**52) + 
            L0x200199ee_f * (x**3) * ((y_6)**52) + 
            L0x200199f0_f * (x**0) * ((y_6)**53) + 
            L0x200199f2_f * (x**1) * ((y_6)**53) + 
            L0x200199f4_f * (x**2) * ((y_6)**53) + 
            L0x200199f6_f * (x**3) * ((y_6)**53) + 
            L0x200199f8_f * (x**0) * ((y_6)**54) + 
            L0x200199fa_f * (x**1) * ((y_6)**54) + 
            L0x200199fc_f * (x**2) * ((y_6)**54) + 
            L0x200199fe_f * (x**3) * ((y_6)**54) + 
            L0x20019a00_f * (x**0) * ((y_6)**55) + 
            L0x20019a02_f * (x**1) * ((y_6)**55) + 
            L0x20019a04_f * (x**2) * ((y_6)**55) + 
            L0x20019a06_f * (x**3) * ((y_6)**55) + 
            L0x20019a08_f * (x**0) * ((y_6)**56) + 
            L0x20019a0a_f * (x**1) * ((y_6)**56) + 
            L0x20019a0c_f * (x**2) * ((y_6)**56) + 
            L0x20019a0e_f * (x**3) * ((y_6)**56) + 
            L0x20019a10_f * (x**0) * ((y_6)**57) + 
            L0x20019a12_f * (x**1) * ((y_6)**57) + 
            L0x20019a14_f * (x**2) * ((y_6)**57) + 
            L0x20019a16_f * (x**3) * ((y_6)**57) + 
            L0x20019a18_f * (x**0) * ((y_6)**58) + 
            L0x20019a1a_f * (x**1) * ((y_6)**58) + 
            L0x20019a1c_f * (x**2) * ((y_6)**58) + 
            L0x20019a1e_f * (x**3) * ((y_6)**58) + 
            L0x20019a20_f * (x**0) * ((y_6)**59) + 
            L0x20019a22_f * (x**1) * ((y_6)**59) + 
            L0x20019a24_f * (x**2) * ((y_6)**59) + 
            L0x20019a26_f * (x**3) * ((y_6)**59) + 
            L0x20019a28_f * (x**0) * ((y_6)**60) + 
            L0x20019a2a_f * (x**1) * ((y_6)**60) + 
            L0x20019a2c_f * (x**2) * ((y_6)**60) + 
            L0x20019a2e_f * (x**3) * ((y_6)**60) + 
            L0x20019a30_f * (x**0) * ((y_6)**61) + 
            L0x20019a32_f * (x**1) * ((y_6)**61) + 
            L0x20019a34_f * (x**2) * ((y_6)**61) + 
            L0x20019a36_f * (x**3) * ((y_6)**61) + 
            L0x20019a38_f * (x**0) * ((y_6)**62) + 
            L0x20019a3a_f * (x**1) * ((y_6)**62) + 
            L0x20019a3c_f * (x**2) * ((y_6)**62) + 
            L0x20019a3e_f * (x**3) * ((y_6)**62) + 
            L0x20019a40_f * (x**0) * ((y_6)**63) + 
            L0x20019a42_f * (x**1) * ((y_6)**63) + 
            L0x20019a44_f * (x**2) * ((y_6)**63) + 
            L0x20019a46_f * (x**3) * ((y_6)**63)
          )
          [25570049, x**4 - y_0_17 * 3856555, y_0_17 - 1],
    (* inp_poly_18 *)
    eqmod (2**32) * (inp_poly_18 * inp_poly_18)
          (
            L0x20019848_f * (x**0) * ((y_6)**0) + 
            L0x2001984a_f * (x**1) * ((y_6)**0) + 
            L0x2001984c_f * (x**2) * ((y_6)**0) + 
            L0x2001984e_f * (x**3) * ((y_6)**0) + 
            L0x20019850_f * (x**0) * ((y_6)**1) + 
            L0x20019852_f * (x**1) * ((y_6)**1) + 
            L0x20019854_f * (x**2) * ((y_6)**1) + 
            L0x20019856_f * (x**3) * ((y_6)**1) + 
            L0x20019858_f * (x**0) * ((y_6)**2) + 
            L0x2001985a_f * (x**1) * ((y_6)**2) + 
            L0x2001985c_f * (x**2) * ((y_6)**2) + 
            L0x2001985e_f * (x**3) * ((y_6)**2) + 
            L0x20019860_f * (x**0) * ((y_6)**3) + 
            L0x20019862_f * (x**1) * ((y_6)**3) + 
            L0x20019864_f * (x**2) * ((y_6)**3) + 
            L0x20019866_f * (x**3) * ((y_6)**3) + 
            L0x20019868_f * (x**0) * ((y_6)**4) + 
            L0x2001986a_f * (x**1) * ((y_6)**4) + 
            L0x2001986c_f * (x**2) * ((y_6)**4) + 
            L0x2001986e_f * (x**3) * ((y_6)**4) + 
            L0x20019870_f * (x**0) * ((y_6)**5) + 
            L0x20019872_f * (x**1) * ((y_6)**5) + 
            L0x20019874_f * (x**2) * ((y_6)**5) + 
            L0x20019876_f * (x**3) * ((y_6)**5) + 
            L0x20019878_f * (x**0) * ((y_6)**6) + 
            L0x2001987a_f * (x**1) * ((y_6)**6) + 
            L0x2001987c_f * (x**2) * ((y_6)**6) + 
            L0x2001987e_f * (x**3) * ((y_6)**6) + 
            L0x20019880_f * (x**0) * ((y_6)**7) + 
            L0x20019882_f * (x**1) * ((y_6)**7) + 
            L0x20019884_f * (x**2) * ((y_6)**7) + 
            L0x20019886_f * (x**3) * ((y_6)**7) + 
            L0x20019888_f * (x**0) * ((y_6)**8) + 
            L0x2001988a_f * (x**1) * ((y_6)**8) + 
            L0x2001988c_f * (x**2) * ((y_6)**8) + 
            L0x2001988e_f * (x**3) * ((y_6)**8) + 
            L0x20019890_f * (x**0) * ((y_6)**9) + 
            L0x20019892_f * (x**1) * ((y_6)**9) + 
            L0x20019894_f * (x**2) * ((y_6)**9) + 
            L0x20019896_f * (x**3) * ((y_6)**9) + 
            L0x20019898_f * (x**0) * ((y_6)**10) + 
            L0x2001989a_f * (x**1) * ((y_6)**10) + 
            L0x2001989c_f * (x**2) * ((y_6)**10) + 
            L0x2001989e_f * (x**3) * ((y_6)**10) + 
            L0x200198a0_f * (x**0) * ((y_6)**11) + 
            L0x200198a2_f * (x**1) * ((y_6)**11) + 
            L0x200198a4_f * (x**2) * ((y_6)**11) + 
            L0x200198a6_f * (x**3) * ((y_6)**11) + 
            L0x200198a8_f * (x**0) * ((y_6)**12) + 
            L0x200198aa_f * (x**1) * ((y_6)**12) + 
            L0x200198ac_f * (x**2) * ((y_6)**12) + 
            L0x200198ae_f * (x**3) * ((y_6)**12) + 
            L0x200198b0_f * (x**0) * ((y_6)**13) + 
            L0x200198b2_f * (x**1) * ((y_6)**13) + 
            L0x200198b4_f * (x**2) * ((y_6)**13) + 
            L0x200198b6_f * (x**3) * ((y_6)**13) + 
            L0x200198b8_f * (x**0) * ((y_6)**14) + 
            L0x200198ba_f * (x**1) * ((y_6)**14) + 
            L0x200198bc_f * (x**2) * ((y_6)**14) + 
            L0x200198be_f * (x**3) * ((y_6)**14) + 
            L0x200198c0_f * (x**0) * ((y_6)**15) + 
            L0x200198c2_f * (x**1) * ((y_6)**15) + 
            L0x200198c4_f * (x**2) * ((y_6)**15) + 
            L0x200198c6_f * (x**3) * ((y_6)**15) + 
            L0x200198c8_f * (x**0) * ((y_6)**16) + 
            L0x200198ca_f * (x**1) * ((y_6)**16) + 
            L0x200198cc_f * (x**2) * ((y_6)**16) + 
            L0x200198ce_f * (x**3) * ((y_6)**16) + 
            L0x200198d0_f * (x**0) * ((y_6)**17) + 
            L0x200198d2_f * (x**1) * ((y_6)**17) + 
            L0x200198d4_f * (x**2) * ((y_6)**17) + 
            L0x200198d6_f * (x**3) * ((y_6)**17) + 
            L0x200198d8_f * (x**0) * ((y_6)**18) + 
            L0x200198da_f * (x**1) * ((y_6)**18) + 
            L0x200198dc_f * (x**2) * ((y_6)**18) + 
            L0x200198de_f * (x**3) * ((y_6)**18) + 
            L0x200198e0_f * (x**0) * ((y_6)**19) + 
            L0x200198e2_f * (x**1) * ((y_6)**19) + 
            L0x200198e4_f * (x**2) * ((y_6)**19) + 
            L0x200198e6_f * (x**3) * ((y_6)**19) + 
            L0x200198e8_f * (x**0) * ((y_6)**20) + 
            L0x200198ea_f * (x**1) * ((y_6)**20) + 
            L0x200198ec_f * (x**2) * ((y_6)**20) + 
            L0x200198ee_f * (x**3) * ((y_6)**20) + 
            L0x200198f0_f * (x**0) * ((y_6)**21) + 
            L0x200198f2_f * (x**1) * ((y_6)**21) + 
            L0x200198f4_f * (x**2) * ((y_6)**21) + 
            L0x200198f6_f * (x**3) * ((y_6)**21) + 
            L0x200198f8_f * (x**0) * ((y_6)**22) + 
            L0x200198fa_f * (x**1) * ((y_6)**22) + 
            L0x200198fc_f * (x**2) * ((y_6)**22) + 
            L0x200198fe_f * (x**3) * ((y_6)**22) + 
            L0x20019900_f * (x**0) * ((y_6)**23) + 
            L0x20019902_f * (x**1) * ((y_6)**23) + 
            L0x20019904_f * (x**2) * ((y_6)**23) + 
            L0x20019906_f * (x**3) * ((y_6)**23) + 
            L0x20019908_f * (x**0) * ((y_6)**24) + 
            L0x2001990a_f * (x**1) * ((y_6)**24) + 
            L0x2001990c_f * (x**2) * ((y_6)**24) + 
            L0x2001990e_f * (x**3) * ((y_6)**24) + 
            L0x20019910_f * (x**0) * ((y_6)**25) + 
            L0x20019912_f * (x**1) * ((y_6)**25) + 
            L0x20019914_f * (x**2) * ((y_6)**25) + 
            L0x20019916_f * (x**3) * ((y_6)**25) + 
            L0x20019918_f * (x**0) * ((y_6)**26) + 
            L0x2001991a_f * (x**1) * ((y_6)**26) + 
            L0x2001991c_f * (x**2) * ((y_6)**26) + 
            L0x2001991e_f * (x**3) * ((y_6)**26) + 
            L0x20019920_f * (x**0) * ((y_6)**27) + 
            L0x20019922_f * (x**1) * ((y_6)**27) + 
            L0x20019924_f * (x**2) * ((y_6)**27) + 
            L0x20019926_f * (x**3) * ((y_6)**27) + 
            L0x20019928_f * (x**0) * ((y_6)**28) + 
            L0x2001992a_f * (x**1) * ((y_6)**28) + 
            L0x2001992c_f * (x**2) * ((y_6)**28) + 
            L0x2001992e_f * (x**3) * ((y_6)**28) + 
            L0x20019930_f * (x**0) * ((y_6)**29) + 
            L0x20019932_f * (x**1) * ((y_6)**29) + 
            L0x20019934_f * (x**2) * ((y_6)**29) + 
            L0x20019936_f * (x**3) * ((y_6)**29) + 
            L0x20019938_f * (x**0) * ((y_6)**30) + 
            L0x2001993a_f * (x**1) * ((y_6)**30) + 
            L0x2001993c_f * (x**2) * ((y_6)**30) + 
            L0x2001993e_f * (x**3) * ((y_6)**30) + 
            L0x20019940_f * (x**0) * ((y_6)**31) + 
            L0x20019942_f * (x**1) * ((y_6)**31) + 
            L0x20019944_f * (x**2) * ((y_6)**31) + 
            L0x20019946_f * (x**3) * ((y_6)**31) + 
            L0x20019948_f * (x**0) * ((y_6)**32) + 
            L0x2001994a_f * (x**1) * ((y_6)**32) + 
            L0x2001994c_f * (x**2) * ((y_6)**32) + 
            L0x2001994e_f * (x**3) * ((y_6)**32) + 
            L0x20019950_f * (x**0) * ((y_6)**33) + 
            L0x20019952_f * (x**1) * ((y_6)**33) + 
            L0x20019954_f * (x**2) * ((y_6)**33) + 
            L0x20019956_f * (x**3) * ((y_6)**33) + 
            L0x20019958_f * (x**0) * ((y_6)**34) + 
            L0x2001995a_f * (x**1) * ((y_6)**34) + 
            L0x2001995c_f * (x**2) * ((y_6)**34) + 
            L0x2001995e_f * (x**3) * ((y_6)**34) + 
            L0x20019960_f * (x**0) * ((y_6)**35) + 
            L0x20019962_f * (x**1) * ((y_6)**35) + 
            L0x20019964_f * (x**2) * ((y_6)**35) + 
            L0x20019966_f * (x**3) * ((y_6)**35) + 
            L0x20019968_f * (x**0) * ((y_6)**36) + 
            L0x2001996a_f * (x**1) * ((y_6)**36) + 
            L0x2001996c_f * (x**2) * ((y_6)**36) + 
            L0x2001996e_f * (x**3) * ((y_6)**36) + 
            L0x20019970_f * (x**0) * ((y_6)**37) + 
            L0x20019972_f * (x**1) * ((y_6)**37) + 
            L0x20019974_f * (x**2) * ((y_6)**37) + 
            L0x20019976_f * (x**3) * ((y_6)**37) + 
            L0x20019978_f * (x**0) * ((y_6)**38) + 
            L0x2001997a_f * (x**1) * ((y_6)**38) + 
            L0x2001997c_f * (x**2) * ((y_6)**38) + 
            L0x2001997e_f * (x**3) * ((y_6)**38) + 
            L0x20019980_f * (x**0) * ((y_6)**39) + 
            L0x20019982_f * (x**1) * ((y_6)**39) + 
            L0x20019984_f * (x**2) * ((y_6)**39) + 
            L0x20019986_f * (x**3) * ((y_6)**39) + 
            L0x20019988_f * (x**0) * ((y_6)**40) + 
            L0x2001998a_f * (x**1) * ((y_6)**40) + 
            L0x2001998c_f * (x**2) * ((y_6)**40) + 
            L0x2001998e_f * (x**3) * ((y_6)**40) + 
            L0x20019990_f * (x**0) * ((y_6)**41) + 
            L0x20019992_f * (x**1) * ((y_6)**41) + 
            L0x20019994_f * (x**2) * ((y_6)**41) + 
            L0x20019996_f * (x**3) * ((y_6)**41) + 
            L0x20019998_f * (x**0) * ((y_6)**42) + 
            L0x2001999a_f * (x**1) * ((y_6)**42) + 
            L0x2001999c_f * (x**2) * ((y_6)**42) + 
            L0x2001999e_f * (x**3) * ((y_6)**42) + 
            L0x200199a0_f * (x**0) * ((y_6)**43) + 
            L0x200199a2_f * (x**1) * ((y_6)**43) + 
            L0x200199a4_f * (x**2) * ((y_6)**43) + 
            L0x200199a6_f * (x**3) * ((y_6)**43) + 
            L0x200199a8_f * (x**0) * ((y_6)**44) + 
            L0x200199aa_f * (x**1) * ((y_6)**44) + 
            L0x200199ac_f * (x**2) * ((y_6)**44) + 
            L0x200199ae_f * (x**3) * ((y_6)**44) + 
            L0x200199b0_f * (x**0) * ((y_6)**45) + 
            L0x200199b2_f * (x**1) * ((y_6)**45) + 
            L0x200199b4_f * (x**2) * ((y_6)**45) + 
            L0x200199b6_f * (x**3) * ((y_6)**45) + 
            L0x200199b8_f * (x**0) * ((y_6)**46) + 
            L0x200199ba_f * (x**1) * ((y_6)**46) + 
            L0x200199bc_f * (x**2) * ((y_6)**46) + 
            L0x200199be_f * (x**3) * ((y_6)**46) + 
            L0x200199c0_f * (x**0) * ((y_6)**47) + 
            L0x200199c2_f * (x**1) * ((y_6)**47) + 
            L0x200199c4_f * (x**2) * ((y_6)**47) + 
            L0x200199c6_f * (x**3) * ((y_6)**47) + 
            L0x200199c8_f * (x**0) * ((y_6)**48) + 
            L0x200199ca_f * (x**1) * ((y_6)**48) + 
            L0x200199cc_f * (x**2) * ((y_6)**48) + 
            L0x200199ce_f * (x**3) * ((y_6)**48) + 
            L0x200199d0_f * (x**0) * ((y_6)**49) + 
            L0x200199d2_f * (x**1) * ((y_6)**49) + 
            L0x200199d4_f * (x**2) * ((y_6)**49) + 
            L0x200199d6_f * (x**3) * ((y_6)**49) + 
            L0x200199d8_f * (x**0) * ((y_6)**50) + 
            L0x200199da_f * (x**1) * ((y_6)**50) + 
            L0x200199dc_f * (x**2) * ((y_6)**50) + 
            L0x200199de_f * (x**3) * ((y_6)**50) + 
            L0x200199e0_f * (x**0) * ((y_6)**51) + 
            L0x200199e2_f * (x**1) * ((y_6)**51) + 
            L0x200199e4_f * (x**2) * ((y_6)**51) + 
            L0x200199e6_f * (x**3) * ((y_6)**51) + 
            L0x200199e8_f * (x**0) * ((y_6)**52) + 
            L0x200199ea_f * (x**1) * ((y_6)**52) + 
            L0x200199ec_f * (x**2) * ((y_6)**52) + 
            L0x200199ee_f * (x**3) * ((y_6)**52) + 
            L0x200199f0_f * (x**0) * ((y_6)**53) + 
            L0x200199f2_f * (x**1) * ((y_6)**53) + 
            L0x200199f4_f * (x**2) * ((y_6)**53) + 
            L0x200199f6_f * (x**3) * ((y_6)**53) + 
            L0x200199f8_f * (x**0) * ((y_6)**54) + 
            L0x200199fa_f * (x**1) * ((y_6)**54) + 
            L0x200199fc_f * (x**2) * ((y_6)**54) + 
            L0x200199fe_f * (x**3) * ((y_6)**54) + 
            L0x20019a00_f * (x**0) * ((y_6)**55) + 
            L0x20019a02_f * (x**1) * ((y_6)**55) + 
            L0x20019a04_f * (x**2) * ((y_6)**55) + 
            L0x20019a06_f * (x**3) * ((y_6)**55) + 
            L0x20019a08_f * (x**0) * ((y_6)**56) + 
            L0x20019a0a_f * (x**1) * ((y_6)**56) + 
            L0x20019a0c_f * (x**2) * ((y_6)**56) + 
            L0x20019a0e_f * (x**3) * ((y_6)**56) + 
            L0x20019a10_f * (x**0) * ((y_6)**57) + 
            L0x20019a12_f * (x**1) * ((y_6)**57) + 
            L0x20019a14_f * (x**2) * ((y_6)**57) + 
            L0x20019a16_f * (x**3) * ((y_6)**57) + 
            L0x20019a18_f * (x**0) * ((y_6)**58) + 
            L0x20019a1a_f * (x**1) * ((y_6)**58) + 
            L0x20019a1c_f * (x**2) * ((y_6)**58) + 
            L0x20019a1e_f * (x**3) * ((y_6)**58) + 
            L0x20019a20_f * (x**0) * ((y_6)**59) + 
            L0x20019a22_f * (x**1) * ((y_6)**59) + 
            L0x20019a24_f * (x**2) * ((y_6)**59) + 
            L0x20019a26_f * (x**3) * ((y_6)**59) + 
            L0x20019a28_f * (x**0) * ((y_6)**60) + 
            L0x20019a2a_f * (x**1) * ((y_6)**60) + 
            L0x20019a2c_f * (x**2) * ((y_6)**60) + 
            L0x20019a2e_f * (x**3) * ((y_6)**60) + 
            L0x20019a30_f * (x**0) * ((y_6)**61) + 
            L0x20019a32_f * (x**1) * ((y_6)**61) + 
            L0x20019a34_f * (x**2) * ((y_6)**61) + 
            L0x20019a36_f * (x**3) * ((y_6)**61) + 
            L0x20019a38_f * (x**0) * ((y_6)**62) + 
            L0x20019a3a_f * (x**1) * ((y_6)**62) + 
            L0x20019a3c_f * (x**2) * ((y_6)**62) + 
            L0x20019a3e_f * (x**3) * ((y_6)**62) + 
            L0x20019a40_f * (x**0) * ((y_6)**63) + 
            L0x20019a42_f * (x**1) * ((y_6)**63) + 
            L0x20019a44_f * (x**2) * ((y_6)**63) + 
            L0x20019a46_f * (x**3) * ((y_6)**63)
          )
          [25570049, x**4 - y_0_18 * 23159929, y_0_18 - 1],
    (* inp_poly_19 *)
    eqmod (2**32) * (inp_poly_19 * inp_poly_19)
          (
            L0x20019848_f * (x**0) * ((y_6)**0) + 
            L0x2001984a_f * (x**1) * ((y_6)**0) + 
            L0x2001984c_f * (x**2) * ((y_6)**0) + 
            L0x2001984e_f * (x**3) * ((y_6)**0) + 
            L0x20019850_f * (x**0) * ((y_6)**1) + 
            L0x20019852_f * (x**1) * ((y_6)**1) + 
            L0x20019854_f * (x**2) * ((y_6)**1) + 
            L0x20019856_f * (x**3) * ((y_6)**1) + 
            L0x20019858_f * (x**0) * ((y_6)**2) + 
            L0x2001985a_f * (x**1) * ((y_6)**2) + 
            L0x2001985c_f * (x**2) * ((y_6)**2) + 
            L0x2001985e_f * (x**3) * ((y_6)**2) + 
            L0x20019860_f * (x**0) * ((y_6)**3) + 
            L0x20019862_f * (x**1) * ((y_6)**3) + 
            L0x20019864_f * (x**2) * ((y_6)**3) + 
            L0x20019866_f * (x**3) * ((y_6)**3) + 
            L0x20019868_f * (x**0) * ((y_6)**4) + 
            L0x2001986a_f * (x**1) * ((y_6)**4) + 
            L0x2001986c_f * (x**2) * ((y_6)**4) + 
            L0x2001986e_f * (x**3) * ((y_6)**4) + 
            L0x20019870_f * (x**0) * ((y_6)**5) + 
            L0x20019872_f * (x**1) * ((y_6)**5) + 
            L0x20019874_f * (x**2) * ((y_6)**5) + 
            L0x20019876_f * (x**3) * ((y_6)**5) + 
            L0x20019878_f * (x**0) * ((y_6)**6) + 
            L0x2001987a_f * (x**1) * ((y_6)**6) + 
            L0x2001987c_f * (x**2) * ((y_6)**6) + 
            L0x2001987e_f * (x**3) * ((y_6)**6) + 
            L0x20019880_f * (x**0) * ((y_6)**7) + 
            L0x20019882_f * (x**1) * ((y_6)**7) + 
            L0x20019884_f * (x**2) * ((y_6)**7) + 
            L0x20019886_f * (x**3) * ((y_6)**7) + 
            L0x20019888_f * (x**0) * ((y_6)**8) + 
            L0x2001988a_f * (x**1) * ((y_6)**8) + 
            L0x2001988c_f * (x**2) * ((y_6)**8) + 
            L0x2001988e_f * (x**3) * ((y_6)**8) + 
            L0x20019890_f * (x**0) * ((y_6)**9) + 
            L0x20019892_f * (x**1) * ((y_6)**9) + 
            L0x20019894_f * (x**2) * ((y_6)**9) + 
            L0x20019896_f * (x**3) * ((y_6)**9) + 
            L0x20019898_f * (x**0) * ((y_6)**10) + 
            L0x2001989a_f * (x**1) * ((y_6)**10) + 
            L0x2001989c_f * (x**2) * ((y_6)**10) + 
            L0x2001989e_f * (x**3) * ((y_6)**10) + 
            L0x200198a0_f * (x**0) * ((y_6)**11) + 
            L0x200198a2_f * (x**1) * ((y_6)**11) + 
            L0x200198a4_f * (x**2) * ((y_6)**11) + 
            L0x200198a6_f * (x**3) * ((y_6)**11) + 
            L0x200198a8_f * (x**0) * ((y_6)**12) + 
            L0x200198aa_f * (x**1) * ((y_6)**12) + 
            L0x200198ac_f * (x**2) * ((y_6)**12) + 
            L0x200198ae_f * (x**3) * ((y_6)**12) + 
            L0x200198b0_f * (x**0) * ((y_6)**13) + 
            L0x200198b2_f * (x**1) * ((y_6)**13) + 
            L0x200198b4_f * (x**2) * ((y_6)**13) + 
            L0x200198b6_f * (x**3) * ((y_6)**13) + 
            L0x200198b8_f * (x**0) * ((y_6)**14) + 
            L0x200198ba_f * (x**1) * ((y_6)**14) + 
            L0x200198bc_f * (x**2) * ((y_6)**14) + 
            L0x200198be_f * (x**3) * ((y_6)**14) + 
            L0x200198c0_f * (x**0) * ((y_6)**15) + 
            L0x200198c2_f * (x**1) * ((y_6)**15) + 
            L0x200198c4_f * (x**2) * ((y_6)**15) + 
            L0x200198c6_f * (x**3) * ((y_6)**15) + 
            L0x200198c8_f * (x**0) * ((y_6)**16) + 
            L0x200198ca_f * (x**1) * ((y_6)**16) + 
            L0x200198cc_f * (x**2) * ((y_6)**16) + 
            L0x200198ce_f * (x**3) * ((y_6)**16) + 
            L0x200198d0_f * (x**0) * ((y_6)**17) + 
            L0x200198d2_f * (x**1) * ((y_6)**17) + 
            L0x200198d4_f * (x**2) * ((y_6)**17) + 
            L0x200198d6_f * (x**3) * ((y_6)**17) + 
            L0x200198d8_f * (x**0) * ((y_6)**18) + 
            L0x200198da_f * (x**1) * ((y_6)**18) + 
            L0x200198dc_f * (x**2) * ((y_6)**18) + 
            L0x200198de_f * (x**3) * ((y_6)**18) + 
            L0x200198e0_f * (x**0) * ((y_6)**19) + 
            L0x200198e2_f * (x**1) * ((y_6)**19) + 
            L0x200198e4_f * (x**2) * ((y_6)**19) + 
            L0x200198e6_f * (x**3) * ((y_6)**19) + 
            L0x200198e8_f * (x**0) * ((y_6)**20) + 
            L0x200198ea_f * (x**1) * ((y_6)**20) + 
            L0x200198ec_f * (x**2) * ((y_6)**20) + 
            L0x200198ee_f * (x**3) * ((y_6)**20) + 
            L0x200198f0_f * (x**0) * ((y_6)**21) + 
            L0x200198f2_f * (x**1) * ((y_6)**21) + 
            L0x200198f4_f * (x**2) * ((y_6)**21) + 
            L0x200198f6_f * (x**3) * ((y_6)**21) + 
            L0x200198f8_f * (x**0) * ((y_6)**22) + 
            L0x200198fa_f * (x**1) * ((y_6)**22) + 
            L0x200198fc_f * (x**2) * ((y_6)**22) + 
            L0x200198fe_f * (x**3) * ((y_6)**22) + 
            L0x20019900_f * (x**0) * ((y_6)**23) + 
            L0x20019902_f * (x**1) * ((y_6)**23) + 
            L0x20019904_f * (x**2) * ((y_6)**23) + 
            L0x20019906_f * (x**3) * ((y_6)**23) + 
            L0x20019908_f * (x**0) * ((y_6)**24) + 
            L0x2001990a_f * (x**1) * ((y_6)**24) + 
            L0x2001990c_f * (x**2) * ((y_6)**24) + 
            L0x2001990e_f * (x**3) * ((y_6)**24) + 
            L0x20019910_f * (x**0) * ((y_6)**25) + 
            L0x20019912_f * (x**1) * ((y_6)**25) + 
            L0x20019914_f * (x**2) * ((y_6)**25) + 
            L0x20019916_f * (x**3) * ((y_6)**25) + 
            L0x20019918_f * (x**0) * ((y_6)**26) + 
            L0x2001991a_f * (x**1) * ((y_6)**26) + 
            L0x2001991c_f * (x**2) * ((y_6)**26) + 
            L0x2001991e_f * (x**3) * ((y_6)**26) + 
            L0x20019920_f * (x**0) * ((y_6)**27) + 
            L0x20019922_f * (x**1) * ((y_6)**27) + 
            L0x20019924_f * (x**2) * ((y_6)**27) + 
            L0x20019926_f * (x**3) * ((y_6)**27) + 
            L0x20019928_f * (x**0) * ((y_6)**28) + 
            L0x2001992a_f * (x**1) * ((y_6)**28) + 
            L0x2001992c_f * (x**2) * ((y_6)**28) + 
            L0x2001992e_f * (x**3) * ((y_6)**28) + 
            L0x20019930_f * (x**0) * ((y_6)**29) + 
            L0x20019932_f * (x**1) * ((y_6)**29) + 
            L0x20019934_f * (x**2) * ((y_6)**29) + 
            L0x20019936_f * (x**3) * ((y_6)**29) + 
            L0x20019938_f * (x**0) * ((y_6)**30) + 
            L0x2001993a_f * (x**1) * ((y_6)**30) + 
            L0x2001993c_f * (x**2) * ((y_6)**30) + 
            L0x2001993e_f * (x**3) * ((y_6)**30) + 
            L0x20019940_f * (x**0) * ((y_6)**31) + 
            L0x20019942_f * (x**1) * ((y_6)**31) + 
            L0x20019944_f * (x**2) * ((y_6)**31) + 
            L0x20019946_f * (x**3) * ((y_6)**31) + 
            L0x20019948_f * (x**0) * ((y_6)**32) + 
            L0x2001994a_f * (x**1) * ((y_6)**32) + 
            L0x2001994c_f * (x**2) * ((y_6)**32) + 
            L0x2001994e_f * (x**3) * ((y_6)**32) + 
            L0x20019950_f * (x**0) * ((y_6)**33) + 
            L0x20019952_f * (x**1) * ((y_6)**33) + 
            L0x20019954_f * (x**2) * ((y_6)**33) + 
            L0x20019956_f * (x**3) * ((y_6)**33) + 
            L0x20019958_f * (x**0) * ((y_6)**34) + 
            L0x2001995a_f * (x**1) * ((y_6)**34) + 
            L0x2001995c_f * (x**2) * ((y_6)**34) + 
            L0x2001995e_f * (x**3) * ((y_6)**34) + 
            L0x20019960_f * (x**0) * ((y_6)**35) + 
            L0x20019962_f * (x**1) * ((y_6)**35) + 
            L0x20019964_f * (x**2) * ((y_6)**35) + 
            L0x20019966_f * (x**3) * ((y_6)**35) + 
            L0x20019968_f * (x**0) * ((y_6)**36) + 
            L0x2001996a_f * (x**1) * ((y_6)**36) + 
            L0x2001996c_f * (x**2) * ((y_6)**36) + 
            L0x2001996e_f * (x**3) * ((y_6)**36) + 
            L0x20019970_f * (x**0) * ((y_6)**37) + 
            L0x20019972_f * (x**1) * ((y_6)**37) + 
            L0x20019974_f * (x**2) * ((y_6)**37) + 
            L0x20019976_f * (x**3) * ((y_6)**37) + 
            L0x20019978_f * (x**0) * ((y_6)**38) + 
            L0x2001997a_f * (x**1) * ((y_6)**38) + 
            L0x2001997c_f * (x**2) * ((y_6)**38) + 
            L0x2001997e_f * (x**3) * ((y_6)**38) + 
            L0x20019980_f * (x**0) * ((y_6)**39) + 
            L0x20019982_f * (x**1) * ((y_6)**39) + 
            L0x20019984_f * (x**2) * ((y_6)**39) + 
            L0x20019986_f * (x**3) * ((y_6)**39) + 
            L0x20019988_f * (x**0) * ((y_6)**40) + 
            L0x2001998a_f * (x**1) * ((y_6)**40) + 
            L0x2001998c_f * (x**2) * ((y_6)**40) + 
            L0x2001998e_f * (x**3) * ((y_6)**40) + 
            L0x20019990_f * (x**0) * ((y_6)**41) + 
            L0x20019992_f * (x**1) * ((y_6)**41) + 
            L0x20019994_f * (x**2) * ((y_6)**41) + 
            L0x20019996_f * (x**3) * ((y_6)**41) + 
            L0x20019998_f * (x**0) * ((y_6)**42) + 
            L0x2001999a_f * (x**1) * ((y_6)**42) + 
            L0x2001999c_f * (x**2) * ((y_6)**42) + 
            L0x2001999e_f * (x**3) * ((y_6)**42) + 
            L0x200199a0_f * (x**0) * ((y_6)**43) + 
            L0x200199a2_f * (x**1) * ((y_6)**43) + 
            L0x200199a4_f * (x**2) * ((y_6)**43) + 
            L0x200199a6_f * (x**3) * ((y_6)**43) + 
            L0x200199a8_f * (x**0) * ((y_6)**44) + 
            L0x200199aa_f * (x**1) * ((y_6)**44) + 
            L0x200199ac_f * (x**2) * ((y_6)**44) + 
            L0x200199ae_f * (x**3) * ((y_6)**44) + 
            L0x200199b0_f * (x**0) * ((y_6)**45) + 
            L0x200199b2_f * (x**1) * ((y_6)**45) + 
            L0x200199b4_f * (x**2) * ((y_6)**45) + 
            L0x200199b6_f * (x**3) * ((y_6)**45) + 
            L0x200199b8_f * (x**0) * ((y_6)**46) + 
            L0x200199ba_f * (x**1) * ((y_6)**46) + 
            L0x200199bc_f * (x**2) * ((y_6)**46) + 
            L0x200199be_f * (x**3) * ((y_6)**46) + 
            L0x200199c0_f * (x**0) * ((y_6)**47) + 
            L0x200199c2_f * (x**1) * ((y_6)**47) + 
            L0x200199c4_f * (x**2) * ((y_6)**47) + 
            L0x200199c6_f * (x**3) * ((y_6)**47) + 
            L0x200199c8_f * (x**0) * ((y_6)**48) + 
            L0x200199ca_f * (x**1) * ((y_6)**48) + 
            L0x200199cc_f * (x**2) * ((y_6)**48) + 
            L0x200199ce_f * (x**3) * ((y_6)**48) + 
            L0x200199d0_f * (x**0) * ((y_6)**49) + 
            L0x200199d2_f * (x**1) * ((y_6)**49) + 
            L0x200199d4_f * (x**2) * ((y_6)**49) + 
            L0x200199d6_f * (x**3) * ((y_6)**49) + 
            L0x200199d8_f * (x**0) * ((y_6)**50) + 
            L0x200199da_f * (x**1) * ((y_6)**50) + 
            L0x200199dc_f * (x**2) * ((y_6)**50) + 
            L0x200199de_f * (x**3) * ((y_6)**50) + 
            L0x200199e0_f * (x**0) * ((y_6)**51) + 
            L0x200199e2_f * (x**1) * ((y_6)**51) + 
            L0x200199e4_f * (x**2) * ((y_6)**51) + 
            L0x200199e6_f * (x**3) * ((y_6)**51) + 
            L0x200199e8_f * (x**0) * ((y_6)**52) + 
            L0x200199ea_f * (x**1) * ((y_6)**52) + 
            L0x200199ec_f * (x**2) * ((y_6)**52) + 
            L0x200199ee_f * (x**3) * ((y_6)**52) + 
            L0x200199f0_f * (x**0) * ((y_6)**53) + 
            L0x200199f2_f * (x**1) * ((y_6)**53) + 
            L0x200199f4_f * (x**2) * ((y_6)**53) + 
            L0x200199f6_f * (x**3) * ((y_6)**53) + 
            L0x200199f8_f * (x**0) * ((y_6)**54) + 
            L0x200199fa_f * (x**1) * ((y_6)**54) + 
            L0x200199fc_f * (x**2) * ((y_6)**54) + 
            L0x200199fe_f * (x**3) * ((y_6)**54) + 
            L0x20019a00_f * (x**0) * ((y_6)**55) + 
            L0x20019a02_f * (x**1) * ((y_6)**55) + 
            L0x20019a04_f * (x**2) * ((y_6)**55) + 
            L0x20019a06_f * (x**3) * ((y_6)**55) + 
            L0x20019a08_f * (x**0) * ((y_6)**56) + 
            L0x20019a0a_f * (x**1) * ((y_6)**56) + 
            L0x20019a0c_f * (x**2) * ((y_6)**56) + 
            L0x20019a0e_f * (x**3) * ((y_6)**56) + 
            L0x20019a10_f * (x**0) * ((y_6)**57) + 
            L0x20019a12_f * (x**1) * ((y_6)**57) + 
            L0x20019a14_f * (x**2) * ((y_6)**57) + 
            L0x20019a16_f * (x**3) * ((y_6)**57) + 
            L0x20019a18_f * (x**0) * ((y_6)**58) + 
            L0x20019a1a_f * (x**1) * ((y_6)**58) + 
            L0x20019a1c_f * (x**2) * ((y_6)**58) + 
            L0x20019a1e_f * (x**3) * ((y_6)**58) + 
            L0x20019a20_f * (x**0) * ((y_6)**59) + 
            L0x20019a22_f * (x**1) * ((y_6)**59) + 
            L0x20019a24_f * (x**2) * ((y_6)**59) + 
            L0x20019a26_f * (x**3) * ((y_6)**59) + 
            L0x20019a28_f * (x**0) * ((y_6)**60) + 
            L0x20019a2a_f * (x**1) * ((y_6)**60) + 
            L0x20019a2c_f * (x**2) * ((y_6)**60) + 
            L0x20019a2e_f * (x**3) * ((y_6)**60) + 
            L0x20019a30_f * (x**0) * ((y_6)**61) + 
            L0x20019a32_f * (x**1) * ((y_6)**61) + 
            L0x20019a34_f * (x**2) * ((y_6)**61) + 
            L0x20019a36_f * (x**3) * ((y_6)**61) + 
            L0x20019a38_f * (x**0) * ((y_6)**62) + 
            L0x20019a3a_f * (x**1) * ((y_6)**62) + 
            L0x20019a3c_f * (x**2) * ((y_6)**62) + 
            L0x20019a3e_f * (x**3) * ((y_6)**62) + 
            L0x20019a40_f * (x**0) * ((y_6)**63) + 
            L0x20019a42_f * (x**1) * ((y_6)**63) + 
            L0x20019a44_f * (x**2) * ((y_6)**63) + 
            L0x20019a46_f * (x**3) * ((y_6)**63)
          )
          [25570049, x**4 - y_0_19 * 2410120, y_0_19 - 1],
    (* inp_poly_20 *)
    eqmod (2**32) * (inp_poly_20 * inp_poly_20)
          (
            L0x20019848_f * (x**0) * ((y_6)**0) + 
            L0x2001984a_f * (x**1) * ((y_6)**0) + 
            L0x2001984c_f * (x**2) * ((y_6)**0) + 
            L0x2001984e_f * (x**3) * ((y_6)**0) + 
            L0x20019850_f * (x**0) * ((y_6)**1) + 
            L0x20019852_f * (x**1) * ((y_6)**1) + 
            L0x20019854_f * (x**2) * ((y_6)**1) + 
            L0x20019856_f * (x**3) * ((y_6)**1) + 
            L0x20019858_f * (x**0) * ((y_6)**2) + 
            L0x2001985a_f * (x**1) * ((y_6)**2) + 
            L0x2001985c_f * (x**2) * ((y_6)**2) + 
            L0x2001985e_f * (x**3) * ((y_6)**2) + 
            L0x20019860_f * (x**0) * ((y_6)**3) + 
            L0x20019862_f * (x**1) * ((y_6)**3) + 
            L0x20019864_f * (x**2) * ((y_6)**3) + 
            L0x20019866_f * (x**3) * ((y_6)**3) + 
            L0x20019868_f * (x**0) * ((y_6)**4) + 
            L0x2001986a_f * (x**1) * ((y_6)**4) + 
            L0x2001986c_f * (x**2) * ((y_6)**4) + 
            L0x2001986e_f * (x**3) * ((y_6)**4) + 
            L0x20019870_f * (x**0) * ((y_6)**5) + 
            L0x20019872_f * (x**1) * ((y_6)**5) + 
            L0x20019874_f * (x**2) * ((y_6)**5) + 
            L0x20019876_f * (x**3) * ((y_6)**5) + 
            L0x20019878_f * (x**0) * ((y_6)**6) + 
            L0x2001987a_f * (x**1) * ((y_6)**6) + 
            L0x2001987c_f * (x**2) * ((y_6)**6) + 
            L0x2001987e_f * (x**3) * ((y_6)**6) + 
            L0x20019880_f * (x**0) * ((y_6)**7) + 
            L0x20019882_f * (x**1) * ((y_6)**7) + 
            L0x20019884_f * (x**2) * ((y_6)**7) + 
            L0x20019886_f * (x**3) * ((y_6)**7) + 
            L0x20019888_f * (x**0) * ((y_6)**8) + 
            L0x2001988a_f * (x**1) * ((y_6)**8) + 
            L0x2001988c_f * (x**2) * ((y_6)**8) + 
            L0x2001988e_f * (x**3) * ((y_6)**8) + 
            L0x20019890_f * (x**0) * ((y_6)**9) + 
            L0x20019892_f * (x**1) * ((y_6)**9) + 
            L0x20019894_f * (x**2) * ((y_6)**9) + 
            L0x20019896_f * (x**3) * ((y_6)**9) + 
            L0x20019898_f * (x**0) * ((y_6)**10) + 
            L0x2001989a_f * (x**1) * ((y_6)**10) + 
            L0x2001989c_f * (x**2) * ((y_6)**10) + 
            L0x2001989e_f * (x**3) * ((y_6)**10) + 
            L0x200198a0_f * (x**0) * ((y_6)**11) + 
            L0x200198a2_f * (x**1) * ((y_6)**11) + 
            L0x200198a4_f * (x**2) * ((y_6)**11) + 
            L0x200198a6_f * (x**3) * ((y_6)**11) + 
            L0x200198a8_f * (x**0) * ((y_6)**12) + 
            L0x200198aa_f * (x**1) * ((y_6)**12) + 
            L0x200198ac_f * (x**2) * ((y_6)**12) + 
            L0x200198ae_f * (x**3) * ((y_6)**12) + 
            L0x200198b0_f * (x**0) * ((y_6)**13) + 
            L0x200198b2_f * (x**1) * ((y_6)**13) + 
            L0x200198b4_f * (x**2) * ((y_6)**13) + 
            L0x200198b6_f * (x**3) * ((y_6)**13) + 
            L0x200198b8_f * (x**0) * ((y_6)**14) + 
            L0x200198ba_f * (x**1) * ((y_6)**14) + 
            L0x200198bc_f * (x**2) * ((y_6)**14) + 
            L0x200198be_f * (x**3) * ((y_6)**14) + 
            L0x200198c0_f * (x**0) * ((y_6)**15) + 
            L0x200198c2_f * (x**1) * ((y_6)**15) + 
            L0x200198c4_f * (x**2) * ((y_6)**15) + 
            L0x200198c6_f * (x**3) * ((y_6)**15) + 
            L0x200198c8_f * (x**0) * ((y_6)**16) + 
            L0x200198ca_f * (x**1) * ((y_6)**16) + 
            L0x200198cc_f * (x**2) * ((y_6)**16) + 
            L0x200198ce_f * (x**3) * ((y_6)**16) + 
            L0x200198d0_f * (x**0) * ((y_6)**17) + 
            L0x200198d2_f * (x**1) * ((y_6)**17) + 
            L0x200198d4_f * (x**2) * ((y_6)**17) + 
            L0x200198d6_f * (x**3) * ((y_6)**17) + 
            L0x200198d8_f * (x**0) * ((y_6)**18) + 
            L0x200198da_f * (x**1) * ((y_6)**18) + 
            L0x200198dc_f * (x**2) * ((y_6)**18) + 
            L0x200198de_f * (x**3) * ((y_6)**18) + 
            L0x200198e0_f * (x**0) * ((y_6)**19) + 
            L0x200198e2_f * (x**1) * ((y_6)**19) + 
            L0x200198e4_f * (x**2) * ((y_6)**19) + 
            L0x200198e6_f * (x**3) * ((y_6)**19) + 
            L0x200198e8_f * (x**0) * ((y_6)**20) + 
            L0x200198ea_f * (x**1) * ((y_6)**20) + 
            L0x200198ec_f * (x**2) * ((y_6)**20) + 
            L0x200198ee_f * (x**3) * ((y_6)**20) + 
            L0x200198f0_f * (x**0) * ((y_6)**21) + 
            L0x200198f2_f * (x**1) * ((y_6)**21) + 
            L0x200198f4_f * (x**2) * ((y_6)**21) + 
            L0x200198f6_f * (x**3) * ((y_6)**21) + 
            L0x200198f8_f * (x**0) * ((y_6)**22) + 
            L0x200198fa_f * (x**1) * ((y_6)**22) + 
            L0x200198fc_f * (x**2) * ((y_6)**22) + 
            L0x200198fe_f * (x**3) * ((y_6)**22) + 
            L0x20019900_f * (x**0) * ((y_6)**23) + 
            L0x20019902_f * (x**1) * ((y_6)**23) + 
            L0x20019904_f * (x**2) * ((y_6)**23) + 
            L0x20019906_f * (x**3) * ((y_6)**23) + 
            L0x20019908_f * (x**0) * ((y_6)**24) + 
            L0x2001990a_f * (x**1) * ((y_6)**24) + 
            L0x2001990c_f * (x**2) * ((y_6)**24) + 
            L0x2001990e_f * (x**3) * ((y_6)**24) + 
            L0x20019910_f * (x**0) * ((y_6)**25) + 
            L0x20019912_f * (x**1) * ((y_6)**25) + 
            L0x20019914_f * (x**2) * ((y_6)**25) + 
            L0x20019916_f * (x**3) * ((y_6)**25) + 
            L0x20019918_f * (x**0) * ((y_6)**26) + 
            L0x2001991a_f * (x**1) * ((y_6)**26) + 
            L0x2001991c_f * (x**2) * ((y_6)**26) + 
            L0x2001991e_f * (x**3) * ((y_6)**26) + 
            L0x20019920_f * (x**0) * ((y_6)**27) + 
            L0x20019922_f * (x**1) * ((y_6)**27) + 
            L0x20019924_f * (x**2) * ((y_6)**27) + 
            L0x20019926_f * (x**3) * ((y_6)**27) + 
            L0x20019928_f * (x**0) * ((y_6)**28) + 
            L0x2001992a_f * (x**1) * ((y_6)**28) + 
            L0x2001992c_f * (x**2) * ((y_6)**28) + 
            L0x2001992e_f * (x**3) * ((y_6)**28) + 
            L0x20019930_f * (x**0) * ((y_6)**29) + 
            L0x20019932_f * (x**1) * ((y_6)**29) + 
            L0x20019934_f * (x**2) * ((y_6)**29) + 
            L0x20019936_f * (x**3) * ((y_6)**29) + 
            L0x20019938_f * (x**0) * ((y_6)**30) + 
            L0x2001993a_f * (x**1) * ((y_6)**30) + 
            L0x2001993c_f * (x**2) * ((y_6)**30) + 
            L0x2001993e_f * (x**3) * ((y_6)**30) + 
            L0x20019940_f * (x**0) * ((y_6)**31) + 
            L0x20019942_f * (x**1) * ((y_6)**31) + 
            L0x20019944_f * (x**2) * ((y_6)**31) + 
            L0x20019946_f * (x**3) * ((y_6)**31) + 
            L0x20019948_f * (x**0) * ((y_6)**32) + 
            L0x2001994a_f * (x**1) * ((y_6)**32) + 
            L0x2001994c_f * (x**2) * ((y_6)**32) + 
            L0x2001994e_f * (x**3) * ((y_6)**32) + 
            L0x20019950_f * (x**0) * ((y_6)**33) + 
            L0x20019952_f * (x**1) * ((y_6)**33) + 
            L0x20019954_f * (x**2) * ((y_6)**33) + 
            L0x20019956_f * (x**3) * ((y_6)**33) + 
            L0x20019958_f * (x**0) * ((y_6)**34) + 
            L0x2001995a_f * (x**1) * ((y_6)**34) + 
            L0x2001995c_f * (x**2) * ((y_6)**34) + 
            L0x2001995e_f * (x**3) * ((y_6)**34) + 
            L0x20019960_f * (x**0) * ((y_6)**35) + 
            L0x20019962_f * (x**1) * ((y_6)**35) + 
            L0x20019964_f * (x**2) * ((y_6)**35) + 
            L0x20019966_f * (x**3) * ((y_6)**35) + 
            L0x20019968_f * (x**0) * ((y_6)**36) + 
            L0x2001996a_f * (x**1) * ((y_6)**36) + 
            L0x2001996c_f * (x**2) * ((y_6)**36) + 
            L0x2001996e_f * (x**3) * ((y_6)**36) + 
            L0x20019970_f * (x**0) * ((y_6)**37) + 
            L0x20019972_f * (x**1) * ((y_6)**37) + 
            L0x20019974_f * (x**2) * ((y_6)**37) + 
            L0x20019976_f * (x**3) * ((y_6)**37) + 
            L0x20019978_f * (x**0) * ((y_6)**38) + 
            L0x2001997a_f * (x**1) * ((y_6)**38) + 
            L0x2001997c_f * (x**2) * ((y_6)**38) + 
            L0x2001997e_f * (x**3) * ((y_6)**38) + 
            L0x20019980_f * (x**0) * ((y_6)**39) + 
            L0x20019982_f * (x**1) * ((y_6)**39) + 
            L0x20019984_f * (x**2) * ((y_6)**39) + 
            L0x20019986_f * (x**3) * ((y_6)**39) + 
            L0x20019988_f * (x**0) * ((y_6)**40) + 
            L0x2001998a_f * (x**1) * ((y_6)**40) + 
            L0x2001998c_f * (x**2) * ((y_6)**40) + 
            L0x2001998e_f * (x**3) * ((y_6)**40) + 
            L0x20019990_f * (x**0) * ((y_6)**41) + 
            L0x20019992_f * (x**1) * ((y_6)**41) + 
            L0x20019994_f * (x**2) * ((y_6)**41) + 
            L0x20019996_f * (x**3) * ((y_6)**41) + 
            L0x20019998_f * (x**0) * ((y_6)**42) + 
            L0x2001999a_f * (x**1) * ((y_6)**42) + 
            L0x2001999c_f * (x**2) * ((y_6)**42) + 
            L0x2001999e_f * (x**3) * ((y_6)**42) + 
            L0x200199a0_f * (x**0) * ((y_6)**43) + 
            L0x200199a2_f * (x**1) * ((y_6)**43) + 
            L0x200199a4_f * (x**2) * ((y_6)**43) + 
            L0x200199a6_f * (x**3) * ((y_6)**43) + 
            L0x200199a8_f * (x**0) * ((y_6)**44) + 
            L0x200199aa_f * (x**1) * ((y_6)**44) + 
            L0x200199ac_f * (x**2) * ((y_6)**44) + 
            L0x200199ae_f * (x**3) * ((y_6)**44) + 
            L0x200199b0_f * (x**0) * ((y_6)**45) + 
            L0x200199b2_f * (x**1) * ((y_6)**45) + 
            L0x200199b4_f * (x**2) * ((y_6)**45) + 
            L0x200199b6_f * (x**3) * ((y_6)**45) + 
            L0x200199b8_f * (x**0) * ((y_6)**46) + 
            L0x200199ba_f * (x**1) * ((y_6)**46) + 
            L0x200199bc_f * (x**2) * ((y_6)**46) + 
            L0x200199be_f * (x**3) * ((y_6)**46) + 
            L0x200199c0_f * (x**0) * ((y_6)**47) + 
            L0x200199c2_f * (x**1) * ((y_6)**47) + 
            L0x200199c4_f * (x**2) * ((y_6)**47) + 
            L0x200199c6_f * (x**3) * ((y_6)**47) + 
            L0x200199c8_f * (x**0) * ((y_6)**48) + 
            L0x200199ca_f * (x**1) * ((y_6)**48) + 
            L0x200199cc_f * (x**2) * ((y_6)**48) + 
            L0x200199ce_f * (x**3) * ((y_6)**48) + 
            L0x200199d0_f * (x**0) * ((y_6)**49) + 
            L0x200199d2_f * (x**1) * ((y_6)**49) + 
            L0x200199d4_f * (x**2) * ((y_6)**49) + 
            L0x200199d6_f * (x**3) * ((y_6)**49) + 
            L0x200199d8_f * (x**0) * ((y_6)**50) + 
            L0x200199da_f * (x**1) * ((y_6)**50) + 
            L0x200199dc_f * (x**2) * ((y_6)**50) + 
            L0x200199de_f * (x**3) * ((y_6)**50) + 
            L0x200199e0_f * (x**0) * ((y_6)**51) + 
            L0x200199e2_f * (x**1) * ((y_6)**51) + 
            L0x200199e4_f * (x**2) * ((y_6)**51) + 
            L0x200199e6_f * (x**3) * ((y_6)**51) + 
            L0x200199e8_f * (x**0) * ((y_6)**52) + 
            L0x200199ea_f * (x**1) * ((y_6)**52) + 
            L0x200199ec_f * (x**2) * ((y_6)**52) + 
            L0x200199ee_f * (x**3) * ((y_6)**52) + 
            L0x200199f0_f * (x**0) * ((y_6)**53) + 
            L0x200199f2_f * (x**1) * ((y_6)**53) + 
            L0x200199f4_f * (x**2) * ((y_6)**53) + 
            L0x200199f6_f * (x**3) * ((y_6)**53) + 
            L0x200199f8_f * (x**0) * ((y_6)**54) + 
            L0x200199fa_f * (x**1) * ((y_6)**54) + 
            L0x200199fc_f * (x**2) * ((y_6)**54) + 
            L0x200199fe_f * (x**3) * ((y_6)**54) + 
            L0x20019a00_f * (x**0) * ((y_6)**55) + 
            L0x20019a02_f * (x**1) * ((y_6)**55) + 
            L0x20019a04_f * (x**2) * ((y_6)**55) + 
            L0x20019a06_f * (x**3) * ((y_6)**55) + 
            L0x20019a08_f * (x**0) * ((y_6)**56) + 
            L0x20019a0a_f * (x**1) * ((y_6)**56) + 
            L0x20019a0c_f * (x**2) * ((y_6)**56) + 
            L0x20019a0e_f * (x**3) * ((y_6)**56) + 
            L0x20019a10_f * (x**0) * ((y_6)**57) + 
            L0x20019a12_f * (x**1) * ((y_6)**57) + 
            L0x20019a14_f * (x**2) * ((y_6)**57) + 
            L0x20019a16_f * (x**3) * ((y_6)**57) + 
            L0x20019a18_f * (x**0) * ((y_6)**58) + 
            L0x20019a1a_f * (x**1) * ((y_6)**58) + 
            L0x20019a1c_f * (x**2) * ((y_6)**58) + 
            L0x20019a1e_f * (x**3) * ((y_6)**58) + 
            L0x20019a20_f * (x**0) * ((y_6)**59) + 
            L0x20019a22_f * (x**1) * ((y_6)**59) + 
            L0x20019a24_f * (x**2) * ((y_6)**59) + 
            L0x20019a26_f * (x**3) * ((y_6)**59) + 
            L0x20019a28_f * (x**0) * ((y_6)**60) + 
            L0x20019a2a_f * (x**1) * ((y_6)**60) + 
            L0x20019a2c_f * (x**2) * ((y_6)**60) + 
            L0x20019a2e_f * (x**3) * ((y_6)**60) + 
            L0x20019a30_f * (x**0) * ((y_6)**61) + 
            L0x20019a32_f * (x**1) * ((y_6)**61) + 
            L0x20019a34_f * (x**2) * ((y_6)**61) + 
            L0x20019a36_f * (x**3) * ((y_6)**61) + 
            L0x20019a38_f * (x**0) * ((y_6)**62) + 
            L0x20019a3a_f * (x**1) * ((y_6)**62) + 
            L0x20019a3c_f * (x**2) * ((y_6)**62) + 
            L0x20019a3e_f * (x**3) * ((y_6)**62) + 
            L0x20019a40_f * (x**0) * ((y_6)**63) + 
            L0x20019a42_f * (x**1) * ((y_6)**63) + 
            L0x20019a44_f * (x**2) * ((y_6)**63) + 
            L0x20019a46_f * (x**3) * ((y_6)**63)
          )
          [25570049, x**4 - y_0_20 * 23569609, y_0_20 - 1],
    (* inp_poly_21 *)
    eqmod (2**32) * (inp_poly_21 * inp_poly_21)
          (
            L0x20019848_f * (x**0) * ((y_6)**0) + 
            L0x2001984a_f * (x**1) * ((y_6)**0) + 
            L0x2001984c_f * (x**2) * ((y_6)**0) + 
            L0x2001984e_f * (x**3) * ((y_6)**0) + 
            L0x20019850_f * (x**0) * ((y_6)**1) + 
            L0x20019852_f * (x**1) * ((y_6)**1) + 
            L0x20019854_f * (x**2) * ((y_6)**1) + 
            L0x20019856_f * (x**3) * ((y_6)**1) + 
            L0x20019858_f * (x**0) * ((y_6)**2) + 
            L0x2001985a_f * (x**1) * ((y_6)**2) + 
            L0x2001985c_f * (x**2) * ((y_6)**2) + 
            L0x2001985e_f * (x**3) * ((y_6)**2) + 
            L0x20019860_f * (x**0) * ((y_6)**3) + 
            L0x20019862_f * (x**1) * ((y_6)**3) + 
            L0x20019864_f * (x**2) * ((y_6)**3) + 
            L0x20019866_f * (x**3) * ((y_6)**3) + 
            L0x20019868_f * (x**0) * ((y_6)**4) + 
            L0x2001986a_f * (x**1) * ((y_6)**4) + 
            L0x2001986c_f * (x**2) * ((y_6)**4) + 
            L0x2001986e_f * (x**3) * ((y_6)**4) + 
            L0x20019870_f * (x**0) * ((y_6)**5) + 
            L0x20019872_f * (x**1) * ((y_6)**5) + 
            L0x20019874_f * (x**2) * ((y_6)**5) + 
            L0x20019876_f * (x**3) * ((y_6)**5) + 
            L0x20019878_f * (x**0) * ((y_6)**6) + 
            L0x2001987a_f * (x**1) * ((y_6)**6) + 
            L0x2001987c_f * (x**2) * ((y_6)**6) + 
            L0x2001987e_f * (x**3) * ((y_6)**6) + 
            L0x20019880_f * (x**0) * ((y_6)**7) + 
            L0x20019882_f * (x**1) * ((y_6)**7) + 
            L0x20019884_f * (x**2) * ((y_6)**7) + 
            L0x20019886_f * (x**3) * ((y_6)**7) + 
            L0x20019888_f * (x**0) * ((y_6)**8) + 
            L0x2001988a_f * (x**1) * ((y_6)**8) + 
            L0x2001988c_f * (x**2) * ((y_6)**8) + 
            L0x2001988e_f * (x**3) * ((y_6)**8) + 
            L0x20019890_f * (x**0) * ((y_6)**9) + 
            L0x20019892_f * (x**1) * ((y_6)**9) + 
            L0x20019894_f * (x**2) * ((y_6)**9) + 
            L0x20019896_f * (x**3) * ((y_6)**9) + 
            L0x20019898_f * (x**0) * ((y_6)**10) + 
            L0x2001989a_f * (x**1) * ((y_6)**10) + 
            L0x2001989c_f * (x**2) * ((y_6)**10) + 
            L0x2001989e_f * (x**3) * ((y_6)**10) + 
            L0x200198a0_f * (x**0) * ((y_6)**11) + 
            L0x200198a2_f * (x**1) * ((y_6)**11) + 
            L0x200198a4_f * (x**2) * ((y_6)**11) + 
            L0x200198a6_f * (x**3) * ((y_6)**11) + 
            L0x200198a8_f * (x**0) * ((y_6)**12) + 
            L0x200198aa_f * (x**1) * ((y_6)**12) + 
            L0x200198ac_f * (x**2) * ((y_6)**12) + 
            L0x200198ae_f * (x**3) * ((y_6)**12) + 
            L0x200198b0_f * (x**0) * ((y_6)**13) + 
            L0x200198b2_f * (x**1) * ((y_6)**13) + 
            L0x200198b4_f * (x**2) * ((y_6)**13) + 
            L0x200198b6_f * (x**3) * ((y_6)**13) + 
            L0x200198b8_f * (x**0) * ((y_6)**14) + 
            L0x200198ba_f * (x**1) * ((y_6)**14) + 
            L0x200198bc_f * (x**2) * ((y_6)**14) + 
            L0x200198be_f * (x**3) * ((y_6)**14) + 
            L0x200198c0_f * (x**0) * ((y_6)**15) + 
            L0x200198c2_f * (x**1) * ((y_6)**15) + 
            L0x200198c4_f * (x**2) * ((y_6)**15) + 
            L0x200198c6_f * (x**3) * ((y_6)**15) + 
            L0x200198c8_f * (x**0) * ((y_6)**16) + 
            L0x200198ca_f * (x**1) * ((y_6)**16) + 
            L0x200198cc_f * (x**2) * ((y_6)**16) + 
            L0x200198ce_f * (x**3) * ((y_6)**16) + 
            L0x200198d0_f * (x**0) * ((y_6)**17) + 
            L0x200198d2_f * (x**1) * ((y_6)**17) + 
            L0x200198d4_f * (x**2) * ((y_6)**17) + 
            L0x200198d6_f * (x**3) * ((y_6)**17) + 
            L0x200198d8_f * (x**0) * ((y_6)**18) + 
            L0x200198da_f * (x**1) * ((y_6)**18) + 
            L0x200198dc_f * (x**2) * ((y_6)**18) + 
            L0x200198de_f * (x**3) * ((y_6)**18) + 
            L0x200198e0_f * (x**0) * ((y_6)**19) + 
            L0x200198e2_f * (x**1) * ((y_6)**19) + 
            L0x200198e4_f * (x**2) * ((y_6)**19) + 
            L0x200198e6_f * (x**3) * ((y_6)**19) + 
            L0x200198e8_f * (x**0) * ((y_6)**20) + 
            L0x200198ea_f * (x**1) * ((y_6)**20) + 
            L0x200198ec_f * (x**2) * ((y_6)**20) + 
            L0x200198ee_f * (x**3) * ((y_6)**20) + 
            L0x200198f0_f * (x**0) * ((y_6)**21) + 
            L0x200198f2_f * (x**1) * ((y_6)**21) + 
            L0x200198f4_f * (x**2) * ((y_6)**21) + 
            L0x200198f6_f * (x**3) * ((y_6)**21) + 
            L0x200198f8_f * (x**0) * ((y_6)**22) + 
            L0x200198fa_f * (x**1) * ((y_6)**22) + 
            L0x200198fc_f * (x**2) * ((y_6)**22) + 
            L0x200198fe_f * (x**3) * ((y_6)**22) + 
            L0x20019900_f * (x**0) * ((y_6)**23) + 
            L0x20019902_f * (x**1) * ((y_6)**23) + 
            L0x20019904_f * (x**2) * ((y_6)**23) + 
            L0x20019906_f * (x**3) * ((y_6)**23) + 
            L0x20019908_f * (x**0) * ((y_6)**24) + 
            L0x2001990a_f * (x**1) * ((y_6)**24) + 
            L0x2001990c_f * (x**2) * ((y_6)**24) + 
            L0x2001990e_f * (x**3) * ((y_6)**24) + 
            L0x20019910_f * (x**0) * ((y_6)**25) + 
            L0x20019912_f * (x**1) * ((y_6)**25) + 
            L0x20019914_f * (x**2) * ((y_6)**25) + 
            L0x20019916_f * (x**3) * ((y_6)**25) + 
            L0x20019918_f * (x**0) * ((y_6)**26) + 
            L0x2001991a_f * (x**1) * ((y_6)**26) + 
            L0x2001991c_f * (x**2) * ((y_6)**26) + 
            L0x2001991e_f * (x**3) * ((y_6)**26) + 
            L0x20019920_f * (x**0) * ((y_6)**27) + 
            L0x20019922_f * (x**1) * ((y_6)**27) + 
            L0x20019924_f * (x**2) * ((y_6)**27) + 
            L0x20019926_f * (x**3) * ((y_6)**27) + 
            L0x20019928_f * (x**0) * ((y_6)**28) + 
            L0x2001992a_f * (x**1) * ((y_6)**28) + 
            L0x2001992c_f * (x**2) * ((y_6)**28) + 
            L0x2001992e_f * (x**3) * ((y_6)**28) + 
            L0x20019930_f * (x**0) * ((y_6)**29) + 
            L0x20019932_f * (x**1) * ((y_6)**29) + 
            L0x20019934_f * (x**2) * ((y_6)**29) + 
            L0x20019936_f * (x**3) * ((y_6)**29) + 
            L0x20019938_f * (x**0) * ((y_6)**30) + 
            L0x2001993a_f * (x**1) * ((y_6)**30) + 
            L0x2001993c_f * (x**2) * ((y_6)**30) + 
            L0x2001993e_f * (x**3) * ((y_6)**30) + 
            L0x20019940_f * (x**0) * ((y_6)**31) + 
            L0x20019942_f * (x**1) * ((y_6)**31) + 
            L0x20019944_f * (x**2) * ((y_6)**31) + 
            L0x20019946_f * (x**3) * ((y_6)**31) + 
            L0x20019948_f * (x**0) * ((y_6)**32) + 
            L0x2001994a_f * (x**1) * ((y_6)**32) + 
            L0x2001994c_f * (x**2) * ((y_6)**32) + 
            L0x2001994e_f * (x**3) * ((y_6)**32) + 
            L0x20019950_f * (x**0) * ((y_6)**33) + 
            L0x20019952_f * (x**1) * ((y_6)**33) + 
            L0x20019954_f * (x**2) * ((y_6)**33) + 
            L0x20019956_f * (x**3) * ((y_6)**33) + 
            L0x20019958_f * (x**0) * ((y_6)**34) + 
            L0x2001995a_f * (x**1) * ((y_6)**34) + 
            L0x2001995c_f * (x**2) * ((y_6)**34) + 
            L0x2001995e_f * (x**3) * ((y_6)**34) + 
            L0x20019960_f * (x**0) * ((y_6)**35) + 
            L0x20019962_f * (x**1) * ((y_6)**35) + 
            L0x20019964_f * (x**2) * ((y_6)**35) + 
            L0x20019966_f * (x**3) * ((y_6)**35) + 
            L0x20019968_f * (x**0) * ((y_6)**36) + 
            L0x2001996a_f * (x**1) * ((y_6)**36) + 
            L0x2001996c_f * (x**2) * ((y_6)**36) + 
            L0x2001996e_f * (x**3) * ((y_6)**36) + 
            L0x20019970_f * (x**0) * ((y_6)**37) + 
            L0x20019972_f * (x**1) * ((y_6)**37) + 
            L0x20019974_f * (x**2) * ((y_6)**37) + 
            L0x20019976_f * (x**3) * ((y_6)**37) + 
            L0x20019978_f * (x**0) * ((y_6)**38) + 
            L0x2001997a_f * (x**1) * ((y_6)**38) + 
            L0x2001997c_f * (x**2) * ((y_6)**38) + 
            L0x2001997e_f * (x**3) * ((y_6)**38) + 
            L0x20019980_f * (x**0) * ((y_6)**39) + 
            L0x20019982_f * (x**1) * ((y_6)**39) + 
            L0x20019984_f * (x**2) * ((y_6)**39) + 
            L0x20019986_f * (x**3) * ((y_6)**39) + 
            L0x20019988_f * (x**0) * ((y_6)**40) + 
            L0x2001998a_f * (x**1) * ((y_6)**40) + 
            L0x2001998c_f * (x**2) * ((y_6)**40) + 
            L0x2001998e_f * (x**3) * ((y_6)**40) + 
            L0x20019990_f * (x**0) * ((y_6)**41) + 
            L0x20019992_f * (x**1) * ((y_6)**41) + 
            L0x20019994_f * (x**2) * ((y_6)**41) + 
            L0x20019996_f * (x**3) * ((y_6)**41) + 
            L0x20019998_f * (x**0) * ((y_6)**42) + 
            L0x2001999a_f * (x**1) * ((y_6)**42) + 
            L0x2001999c_f * (x**2) * ((y_6)**42) + 
            L0x2001999e_f * (x**3) * ((y_6)**42) + 
            L0x200199a0_f * (x**0) * ((y_6)**43) + 
            L0x200199a2_f * (x**1) * ((y_6)**43) + 
            L0x200199a4_f * (x**2) * ((y_6)**43) + 
            L0x200199a6_f * (x**3) * ((y_6)**43) + 
            L0x200199a8_f * (x**0) * ((y_6)**44) + 
            L0x200199aa_f * (x**1) * ((y_6)**44) + 
            L0x200199ac_f * (x**2) * ((y_6)**44) + 
            L0x200199ae_f * (x**3) * ((y_6)**44) + 
            L0x200199b0_f * (x**0) * ((y_6)**45) + 
            L0x200199b2_f * (x**1) * ((y_6)**45) + 
            L0x200199b4_f * (x**2) * ((y_6)**45) + 
            L0x200199b6_f * (x**3) * ((y_6)**45) + 
            L0x200199b8_f * (x**0) * ((y_6)**46) + 
            L0x200199ba_f * (x**1) * ((y_6)**46) + 
            L0x200199bc_f * (x**2) * ((y_6)**46) + 
            L0x200199be_f * (x**3) * ((y_6)**46) + 
            L0x200199c0_f * (x**0) * ((y_6)**47) + 
            L0x200199c2_f * (x**1) * ((y_6)**47) + 
            L0x200199c4_f * (x**2) * ((y_6)**47) + 
            L0x200199c6_f * (x**3) * ((y_6)**47) + 
            L0x200199c8_f * (x**0) * ((y_6)**48) + 
            L0x200199ca_f * (x**1) * ((y_6)**48) + 
            L0x200199cc_f * (x**2) * ((y_6)**48) + 
            L0x200199ce_f * (x**3) * ((y_6)**48) + 
            L0x200199d0_f * (x**0) * ((y_6)**49) + 
            L0x200199d2_f * (x**1) * ((y_6)**49) + 
            L0x200199d4_f * (x**2) * ((y_6)**49) + 
            L0x200199d6_f * (x**3) * ((y_6)**49) + 
            L0x200199d8_f * (x**0) * ((y_6)**50) + 
            L0x200199da_f * (x**1) * ((y_6)**50) + 
            L0x200199dc_f * (x**2) * ((y_6)**50) + 
            L0x200199de_f * (x**3) * ((y_6)**50) + 
            L0x200199e0_f * (x**0) * ((y_6)**51) + 
            L0x200199e2_f * (x**1) * ((y_6)**51) + 
            L0x200199e4_f * (x**2) * ((y_6)**51) + 
            L0x200199e6_f * (x**3) * ((y_6)**51) + 
            L0x200199e8_f * (x**0) * ((y_6)**52) + 
            L0x200199ea_f * (x**1) * ((y_6)**52) + 
            L0x200199ec_f * (x**2) * ((y_6)**52) + 
            L0x200199ee_f * (x**3) * ((y_6)**52) + 
            L0x200199f0_f * (x**0) * ((y_6)**53) + 
            L0x200199f2_f * (x**1) * ((y_6)**53) + 
            L0x200199f4_f * (x**2) * ((y_6)**53) + 
            L0x200199f6_f * (x**3) * ((y_6)**53) + 
            L0x200199f8_f * (x**0) * ((y_6)**54) + 
            L0x200199fa_f * (x**1) * ((y_6)**54) + 
            L0x200199fc_f * (x**2) * ((y_6)**54) + 
            L0x200199fe_f * (x**3) * ((y_6)**54) + 
            L0x20019a00_f * (x**0) * ((y_6)**55) + 
            L0x20019a02_f * (x**1) * ((y_6)**55) + 
            L0x20019a04_f * (x**2) * ((y_6)**55) + 
            L0x20019a06_f * (x**3) * ((y_6)**55) + 
            L0x20019a08_f * (x**0) * ((y_6)**56) + 
            L0x20019a0a_f * (x**1) * ((y_6)**56) + 
            L0x20019a0c_f * (x**2) * ((y_6)**56) + 
            L0x20019a0e_f * (x**3) * ((y_6)**56) + 
            L0x20019a10_f * (x**0) * ((y_6)**57) + 
            L0x20019a12_f * (x**1) * ((y_6)**57) + 
            L0x20019a14_f * (x**2) * ((y_6)**57) + 
            L0x20019a16_f * (x**3) * ((y_6)**57) + 
            L0x20019a18_f * (x**0) * ((y_6)**58) + 
            L0x20019a1a_f * (x**1) * ((y_6)**58) + 
            L0x20019a1c_f * (x**2) * ((y_6)**58) + 
            L0x20019a1e_f * (x**3) * ((y_6)**58) + 
            L0x20019a20_f * (x**0) * ((y_6)**59) + 
            L0x20019a22_f * (x**1) * ((y_6)**59) + 
            L0x20019a24_f * (x**2) * ((y_6)**59) + 
            L0x20019a26_f * (x**3) * ((y_6)**59) + 
            L0x20019a28_f * (x**0) * ((y_6)**60) + 
            L0x20019a2a_f * (x**1) * ((y_6)**60) + 
            L0x20019a2c_f * (x**2) * ((y_6)**60) + 
            L0x20019a2e_f * (x**3) * ((y_6)**60) + 
            L0x20019a30_f * (x**0) * ((y_6)**61) + 
            L0x20019a32_f * (x**1) * ((y_6)**61) + 
            L0x20019a34_f * (x**2) * ((y_6)**61) + 
            L0x20019a36_f * (x**3) * ((y_6)**61) + 
            L0x20019a38_f * (x**0) * ((y_6)**62) + 
            L0x20019a3a_f * (x**1) * ((y_6)**62) + 
            L0x20019a3c_f * (x**2) * ((y_6)**62) + 
            L0x20019a3e_f * (x**3) * ((y_6)**62) + 
            L0x20019a40_f * (x**0) * ((y_6)**63) + 
            L0x20019a42_f * (x**1) * ((y_6)**63) + 
            L0x20019a44_f * (x**2) * ((y_6)**63) + 
            L0x20019a46_f * (x**3) * ((y_6)**63)
          )
          [25570049, x**4 - y_0_21 * 2000440, y_0_21 - 1],
    (* inp_poly_22 *)
    eqmod (2**32) * (inp_poly_22 * inp_poly_22)
          (
            L0x20019848_f * (x**0) * ((y_6)**0) + 
            L0x2001984a_f * (x**1) * ((y_6)**0) + 
            L0x2001984c_f * (x**2) * ((y_6)**0) + 
            L0x2001984e_f * (x**3) * ((y_6)**0) + 
            L0x20019850_f * (x**0) * ((y_6)**1) + 
            L0x20019852_f * (x**1) * ((y_6)**1) + 
            L0x20019854_f * (x**2) * ((y_6)**1) + 
            L0x20019856_f * (x**3) * ((y_6)**1) + 
            L0x20019858_f * (x**0) * ((y_6)**2) + 
            L0x2001985a_f * (x**1) * ((y_6)**2) + 
            L0x2001985c_f * (x**2) * ((y_6)**2) + 
            L0x2001985e_f * (x**3) * ((y_6)**2) + 
            L0x20019860_f * (x**0) * ((y_6)**3) + 
            L0x20019862_f * (x**1) * ((y_6)**3) + 
            L0x20019864_f * (x**2) * ((y_6)**3) + 
            L0x20019866_f * (x**3) * ((y_6)**3) + 
            L0x20019868_f * (x**0) * ((y_6)**4) + 
            L0x2001986a_f * (x**1) * ((y_6)**4) + 
            L0x2001986c_f * (x**2) * ((y_6)**4) + 
            L0x2001986e_f * (x**3) * ((y_6)**4) + 
            L0x20019870_f * (x**0) * ((y_6)**5) + 
            L0x20019872_f * (x**1) * ((y_6)**5) + 
            L0x20019874_f * (x**2) * ((y_6)**5) + 
            L0x20019876_f * (x**3) * ((y_6)**5) + 
            L0x20019878_f * (x**0) * ((y_6)**6) + 
            L0x2001987a_f * (x**1) * ((y_6)**6) + 
            L0x2001987c_f * (x**2) * ((y_6)**6) + 
            L0x2001987e_f * (x**3) * ((y_6)**6) + 
            L0x20019880_f * (x**0) * ((y_6)**7) + 
            L0x20019882_f * (x**1) * ((y_6)**7) + 
            L0x20019884_f * (x**2) * ((y_6)**7) + 
            L0x20019886_f * (x**3) * ((y_6)**7) + 
            L0x20019888_f * (x**0) * ((y_6)**8) + 
            L0x2001988a_f * (x**1) * ((y_6)**8) + 
            L0x2001988c_f * (x**2) * ((y_6)**8) + 
            L0x2001988e_f * (x**3) * ((y_6)**8) + 
            L0x20019890_f * (x**0) * ((y_6)**9) + 
            L0x20019892_f * (x**1) * ((y_6)**9) + 
            L0x20019894_f * (x**2) * ((y_6)**9) + 
            L0x20019896_f * (x**3) * ((y_6)**9) + 
            L0x20019898_f * (x**0) * ((y_6)**10) + 
            L0x2001989a_f * (x**1) * ((y_6)**10) + 
            L0x2001989c_f * (x**2) * ((y_6)**10) + 
            L0x2001989e_f * (x**3) * ((y_6)**10) + 
            L0x200198a0_f * (x**0) * ((y_6)**11) + 
            L0x200198a2_f * (x**1) * ((y_6)**11) + 
            L0x200198a4_f * (x**2) * ((y_6)**11) + 
            L0x200198a6_f * (x**3) * ((y_6)**11) + 
            L0x200198a8_f * (x**0) * ((y_6)**12) + 
            L0x200198aa_f * (x**1) * ((y_6)**12) + 
            L0x200198ac_f * (x**2) * ((y_6)**12) + 
            L0x200198ae_f * (x**3) * ((y_6)**12) + 
            L0x200198b0_f * (x**0) * ((y_6)**13) + 
            L0x200198b2_f * (x**1) * ((y_6)**13) + 
            L0x200198b4_f * (x**2) * ((y_6)**13) + 
            L0x200198b6_f * (x**3) * ((y_6)**13) + 
            L0x200198b8_f * (x**0) * ((y_6)**14) + 
            L0x200198ba_f * (x**1) * ((y_6)**14) + 
            L0x200198bc_f * (x**2) * ((y_6)**14) + 
            L0x200198be_f * (x**3) * ((y_6)**14) + 
            L0x200198c0_f * (x**0) * ((y_6)**15) + 
            L0x200198c2_f * (x**1) * ((y_6)**15) + 
            L0x200198c4_f * (x**2) * ((y_6)**15) + 
            L0x200198c6_f * (x**3) * ((y_6)**15) + 
            L0x200198c8_f * (x**0) * ((y_6)**16) + 
            L0x200198ca_f * (x**1) * ((y_6)**16) + 
            L0x200198cc_f * (x**2) * ((y_6)**16) + 
            L0x200198ce_f * (x**3) * ((y_6)**16) + 
            L0x200198d0_f * (x**0) * ((y_6)**17) + 
            L0x200198d2_f * (x**1) * ((y_6)**17) + 
            L0x200198d4_f * (x**2) * ((y_6)**17) + 
            L0x200198d6_f * (x**3) * ((y_6)**17) + 
            L0x200198d8_f * (x**0) * ((y_6)**18) + 
            L0x200198da_f * (x**1) * ((y_6)**18) + 
            L0x200198dc_f * (x**2) * ((y_6)**18) + 
            L0x200198de_f * (x**3) * ((y_6)**18) + 
            L0x200198e0_f * (x**0) * ((y_6)**19) + 
            L0x200198e2_f * (x**1) * ((y_6)**19) + 
            L0x200198e4_f * (x**2) * ((y_6)**19) + 
            L0x200198e6_f * (x**3) * ((y_6)**19) + 
            L0x200198e8_f * (x**0) * ((y_6)**20) + 
            L0x200198ea_f * (x**1) * ((y_6)**20) + 
            L0x200198ec_f * (x**2) * ((y_6)**20) + 
            L0x200198ee_f * (x**3) * ((y_6)**20) + 
            L0x200198f0_f * (x**0) * ((y_6)**21) + 
            L0x200198f2_f * (x**1) * ((y_6)**21) + 
            L0x200198f4_f * (x**2) * ((y_6)**21) + 
            L0x200198f6_f * (x**3) * ((y_6)**21) + 
            L0x200198f8_f * (x**0) * ((y_6)**22) + 
            L0x200198fa_f * (x**1) * ((y_6)**22) + 
            L0x200198fc_f * (x**2) * ((y_6)**22) + 
            L0x200198fe_f * (x**3) * ((y_6)**22) + 
            L0x20019900_f * (x**0) * ((y_6)**23) + 
            L0x20019902_f * (x**1) * ((y_6)**23) + 
            L0x20019904_f * (x**2) * ((y_6)**23) + 
            L0x20019906_f * (x**3) * ((y_6)**23) + 
            L0x20019908_f * (x**0) * ((y_6)**24) + 
            L0x2001990a_f * (x**1) * ((y_6)**24) + 
            L0x2001990c_f * (x**2) * ((y_6)**24) + 
            L0x2001990e_f * (x**3) * ((y_6)**24) + 
            L0x20019910_f * (x**0) * ((y_6)**25) + 
            L0x20019912_f * (x**1) * ((y_6)**25) + 
            L0x20019914_f * (x**2) * ((y_6)**25) + 
            L0x20019916_f * (x**3) * ((y_6)**25) + 
            L0x20019918_f * (x**0) * ((y_6)**26) + 
            L0x2001991a_f * (x**1) * ((y_6)**26) + 
            L0x2001991c_f * (x**2) * ((y_6)**26) + 
            L0x2001991e_f * (x**3) * ((y_6)**26) + 
            L0x20019920_f * (x**0) * ((y_6)**27) + 
            L0x20019922_f * (x**1) * ((y_6)**27) + 
            L0x20019924_f * (x**2) * ((y_6)**27) + 
            L0x20019926_f * (x**3) * ((y_6)**27) + 
            L0x20019928_f * (x**0) * ((y_6)**28) + 
            L0x2001992a_f * (x**1) * ((y_6)**28) + 
            L0x2001992c_f * (x**2) * ((y_6)**28) + 
            L0x2001992e_f * (x**3) * ((y_6)**28) + 
            L0x20019930_f * (x**0) * ((y_6)**29) + 
            L0x20019932_f * (x**1) * ((y_6)**29) + 
            L0x20019934_f * (x**2) * ((y_6)**29) + 
            L0x20019936_f * (x**3) * ((y_6)**29) + 
            L0x20019938_f * (x**0) * ((y_6)**30) + 
            L0x2001993a_f * (x**1) * ((y_6)**30) + 
            L0x2001993c_f * (x**2) * ((y_6)**30) + 
            L0x2001993e_f * (x**3) * ((y_6)**30) + 
            L0x20019940_f * (x**0) * ((y_6)**31) + 
            L0x20019942_f * (x**1) * ((y_6)**31) + 
            L0x20019944_f * (x**2) * ((y_6)**31) + 
            L0x20019946_f * (x**3) * ((y_6)**31) + 
            L0x20019948_f * (x**0) * ((y_6)**32) + 
            L0x2001994a_f * (x**1) * ((y_6)**32) + 
            L0x2001994c_f * (x**2) * ((y_6)**32) + 
            L0x2001994e_f * (x**3) * ((y_6)**32) + 
            L0x20019950_f * (x**0) * ((y_6)**33) + 
            L0x20019952_f * (x**1) * ((y_6)**33) + 
            L0x20019954_f * (x**2) * ((y_6)**33) + 
            L0x20019956_f * (x**3) * ((y_6)**33) + 
            L0x20019958_f * (x**0) * ((y_6)**34) + 
            L0x2001995a_f * (x**1) * ((y_6)**34) + 
            L0x2001995c_f * (x**2) * ((y_6)**34) + 
            L0x2001995e_f * (x**3) * ((y_6)**34) + 
            L0x20019960_f * (x**0) * ((y_6)**35) + 
            L0x20019962_f * (x**1) * ((y_6)**35) + 
            L0x20019964_f * (x**2) * ((y_6)**35) + 
            L0x20019966_f * (x**3) * ((y_6)**35) + 
            L0x20019968_f * (x**0) * ((y_6)**36) + 
            L0x2001996a_f * (x**1) * ((y_6)**36) + 
            L0x2001996c_f * (x**2) * ((y_6)**36) + 
            L0x2001996e_f * (x**3) * ((y_6)**36) + 
            L0x20019970_f * (x**0) * ((y_6)**37) + 
            L0x20019972_f * (x**1) * ((y_6)**37) + 
            L0x20019974_f * (x**2) * ((y_6)**37) + 
            L0x20019976_f * (x**3) * ((y_6)**37) + 
            L0x20019978_f * (x**0) * ((y_6)**38) + 
            L0x2001997a_f * (x**1) * ((y_6)**38) + 
            L0x2001997c_f * (x**2) * ((y_6)**38) + 
            L0x2001997e_f * (x**3) * ((y_6)**38) + 
            L0x20019980_f * (x**0) * ((y_6)**39) + 
            L0x20019982_f * (x**1) * ((y_6)**39) + 
            L0x20019984_f * (x**2) * ((y_6)**39) + 
            L0x20019986_f * (x**3) * ((y_6)**39) + 
            L0x20019988_f * (x**0) * ((y_6)**40) + 
            L0x2001998a_f * (x**1) * ((y_6)**40) + 
            L0x2001998c_f * (x**2) * ((y_6)**40) + 
            L0x2001998e_f * (x**3) * ((y_6)**40) + 
            L0x20019990_f * (x**0) * ((y_6)**41) + 
            L0x20019992_f * (x**1) * ((y_6)**41) + 
            L0x20019994_f * (x**2) * ((y_6)**41) + 
            L0x20019996_f * (x**3) * ((y_6)**41) + 
            L0x20019998_f * (x**0) * ((y_6)**42) + 
            L0x2001999a_f * (x**1) * ((y_6)**42) + 
            L0x2001999c_f * (x**2) * ((y_6)**42) + 
            L0x2001999e_f * (x**3) * ((y_6)**42) + 
            L0x200199a0_f * (x**0) * ((y_6)**43) + 
            L0x200199a2_f * (x**1) * ((y_6)**43) + 
            L0x200199a4_f * (x**2) * ((y_6)**43) + 
            L0x200199a6_f * (x**3) * ((y_6)**43) + 
            L0x200199a8_f * (x**0) * ((y_6)**44) + 
            L0x200199aa_f * (x**1) * ((y_6)**44) + 
            L0x200199ac_f * (x**2) * ((y_6)**44) + 
            L0x200199ae_f * (x**3) * ((y_6)**44) + 
            L0x200199b0_f * (x**0) * ((y_6)**45) + 
            L0x200199b2_f * (x**1) * ((y_6)**45) + 
            L0x200199b4_f * (x**2) * ((y_6)**45) + 
            L0x200199b6_f * (x**3) * ((y_6)**45) + 
            L0x200199b8_f * (x**0) * ((y_6)**46) + 
            L0x200199ba_f * (x**1) * ((y_6)**46) + 
            L0x200199bc_f * (x**2) * ((y_6)**46) + 
            L0x200199be_f * (x**3) * ((y_6)**46) + 
            L0x200199c0_f * (x**0) * ((y_6)**47) + 
            L0x200199c2_f * (x**1) * ((y_6)**47) + 
            L0x200199c4_f * (x**2) * ((y_6)**47) + 
            L0x200199c6_f * (x**3) * ((y_6)**47) + 
            L0x200199c8_f * (x**0) * ((y_6)**48) + 
            L0x200199ca_f * (x**1) * ((y_6)**48) + 
            L0x200199cc_f * (x**2) * ((y_6)**48) + 
            L0x200199ce_f * (x**3) * ((y_6)**48) + 
            L0x200199d0_f * (x**0) * ((y_6)**49) + 
            L0x200199d2_f * (x**1) * ((y_6)**49) + 
            L0x200199d4_f * (x**2) * ((y_6)**49) + 
            L0x200199d6_f * (x**3) * ((y_6)**49) + 
            L0x200199d8_f * (x**0) * ((y_6)**50) + 
            L0x200199da_f * (x**1) * ((y_6)**50) + 
            L0x200199dc_f * (x**2) * ((y_6)**50) + 
            L0x200199de_f * (x**3) * ((y_6)**50) + 
            L0x200199e0_f * (x**0) * ((y_6)**51) + 
            L0x200199e2_f * (x**1) * ((y_6)**51) + 
            L0x200199e4_f * (x**2) * ((y_6)**51) + 
            L0x200199e6_f * (x**3) * ((y_6)**51) + 
            L0x200199e8_f * (x**0) * ((y_6)**52) + 
            L0x200199ea_f * (x**1) * ((y_6)**52) + 
            L0x200199ec_f * (x**2) * ((y_6)**52) + 
            L0x200199ee_f * (x**3) * ((y_6)**52) + 
            L0x200199f0_f * (x**0) * ((y_6)**53) + 
            L0x200199f2_f * (x**1) * ((y_6)**53) + 
            L0x200199f4_f * (x**2) * ((y_6)**53) + 
            L0x200199f6_f * (x**3) * ((y_6)**53) + 
            L0x200199f8_f * (x**0) * ((y_6)**54) + 
            L0x200199fa_f * (x**1) * ((y_6)**54) + 
            L0x200199fc_f * (x**2) * ((y_6)**54) + 
            L0x200199fe_f * (x**3) * ((y_6)**54) + 
            L0x20019a00_f * (x**0) * ((y_6)**55) + 
            L0x20019a02_f * (x**1) * ((y_6)**55) + 
            L0x20019a04_f * (x**2) * ((y_6)**55) + 
            L0x20019a06_f * (x**3) * ((y_6)**55) + 
            L0x20019a08_f * (x**0) * ((y_6)**56) + 
            L0x20019a0a_f * (x**1) * ((y_6)**56) + 
            L0x20019a0c_f * (x**2) * ((y_6)**56) + 
            L0x20019a0e_f * (x**3) * ((y_6)**56) + 
            L0x20019a10_f * (x**0) * ((y_6)**57) + 
            L0x20019a12_f * (x**1) * ((y_6)**57) + 
            L0x20019a14_f * (x**2) * ((y_6)**57) + 
            L0x20019a16_f * (x**3) * ((y_6)**57) + 
            L0x20019a18_f * (x**0) * ((y_6)**58) + 
            L0x20019a1a_f * (x**1) * ((y_6)**58) + 
            L0x20019a1c_f * (x**2) * ((y_6)**58) + 
            L0x20019a1e_f * (x**3) * ((y_6)**58) + 
            L0x20019a20_f * (x**0) * ((y_6)**59) + 
            L0x20019a22_f * (x**1) * ((y_6)**59) + 
            L0x20019a24_f * (x**2) * ((y_6)**59) + 
            L0x20019a26_f * (x**3) * ((y_6)**59) + 
            L0x20019a28_f * (x**0) * ((y_6)**60) + 
            L0x20019a2a_f * (x**1) * ((y_6)**60) + 
            L0x20019a2c_f * (x**2) * ((y_6)**60) + 
            L0x20019a2e_f * (x**3) * ((y_6)**60) + 
            L0x20019a30_f * (x**0) * ((y_6)**61) + 
            L0x20019a32_f * (x**1) * ((y_6)**61) + 
            L0x20019a34_f * (x**2) * ((y_6)**61) + 
            L0x20019a36_f * (x**3) * ((y_6)**61) + 
            L0x20019a38_f * (x**0) * ((y_6)**62) + 
            L0x20019a3a_f * (x**1) * ((y_6)**62) + 
            L0x20019a3c_f * (x**2) * ((y_6)**62) + 
            L0x20019a3e_f * (x**3) * ((y_6)**62) + 
            L0x20019a40_f * (x**0) * ((y_6)**63) + 
            L0x20019a42_f * (x**1) * ((y_6)**63) + 
            L0x20019a44_f * (x**2) * ((y_6)**63) + 
            L0x20019a46_f * (x**3) * ((y_6)**63)
          )
          [25570049, x**4 - y_0_22 * 7617083, y_0_22 - 1],
    (* inp_poly_23 *)
    eqmod (2**32) * (inp_poly_23 * inp_poly_23)
          (
            L0x20019848_f * (x**0) * ((y_6)**0) + 
            L0x2001984a_f * (x**1) * ((y_6)**0) + 
            L0x2001984c_f * (x**2) * ((y_6)**0) + 
            L0x2001984e_f * (x**3) * ((y_6)**0) + 
            L0x20019850_f * (x**0) * ((y_6)**1) + 
            L0x20019852_f * (x**1) * ((y_6)**1) + 
            L0x20019854_f * (x**2) * ((y_6)**1) + 
            L0x20019856_f * (x**3) * ((y_6)**1) + 
            L0x20019858_f * (x**0) * ((y_6)**2) + 
            L0x2001985a_f * (x**1) * ((y_6)**2) + 
            L0x2001985c_f * (x**2) * ((y_6)**2) + 
            L0x2001985e_f * (x**3) * ((y_6)**2) + 
            L0x20019860_f * (x**0) * ((y_6)**3) + 
            L0x20019862_f * (x**1) * ((y_6)**3) + 
            L0x20019864_f * (x**2) * ((y_6)**3) + 
            L0x20019866_f * (x**3) * ((y_6)**3) + 
            L0x20019868_f * (x**0) * ((y_6)**4) + 
            L0x2001986a_f * (x**1) * ((y_6)**4) + 
            L0x2001986c_f * (x**2) * ((y_6)**4) + 
            L0x2001986e_f * (x**3) * ((y_6)**4) + 
            L0x20019870_f * (x**0) * ((y_6)**5) + 
            L0x20019872_f * (x**1) * ((y_6)**5) + 
            L0x20019874_f * (x**2) * ((y_6)**5) + 
            L0x20019876_f * (x**3) * ((y_6)**5) + 
            L0x20019878_f * (x**0) * ((y_6)**6) + 
            L0x2001987a_f * (x**1) * ((y_6)**6) + 
            L0x2001987c_f * (x**2) * ((y_6)**6) + 
            L0x2001987e_f * (x**3) * ((y_6)**6) + 
            L0x20019880_f * (x**0) * ((y_6)**7) + 
            L0x20019882_f * (x**1) * ((y_6)**7) + 
            L0x20019884_f * (x**2) * ((y_6)**7) + 
            L0x20019886_f * (x**3) * ((y_6)**7) + 
            L0x20019888_f * (x**0) * ((y_6)**8) + 
            L0x2001988a_f * (x**1) * ((y_6)**8) + 
            L0x2001988c_f * (x**2) * ((y_6)**8) + 
            L0x2001988e_f * (x**3) * ((y_6)**8) + 
            L0x20019890_f * (x**0) * ((y_6)**9) + 
            L0x20019892_f * (x**1) * ((y_6)**9) + 
            L0x20019894_f * (x**2) * ((y_6)**9) + 
            L0x20019896_f * (x**3) * ((y_6)**9) + 
            L0x20019898_f * (x**0) * ((y_6)**10) + 
            L0x2001989a_f * (x**1) * ((y_6)**10) + 
            L0x2001989c_f * (x**2) * ((y_6)**10) + 
            L0x2001989e_f * (x**3) * ((y_6)**10) + 
            L0x200198a0_f * (x**0) * ((y_6)**11) + 
            L0x200198a2_f * (x**1) * ((y_6)**11) + 
            L0x200198a4_f * (x**2) * ((y_6)**11) + 
            L0x200198a6_f * (x**3) * ((y_6)**11) + 
            L0x200198a8_f * (x**0) * ((y_6)**12) + 
            L0x200198aa_f * (x**1) * ((y_6)**12) + 
            L0x200198ac_f * (x**2) * ((y_6)**12) + 
            L0x200198ae_f * (x**3) * ((y_6)**12) + 
            L0x200198b0_f * (x**0) * ((y_6)**13) + 
            L0x200198b2_f * (x**1) * ((y_6)**13) + 
            L0x200198b4_f * (x**2) * ((y_6)**13) + 
            L0x200198b6_f * (x**3) * ((y_6)**13) + 
            L0x200198b8_f * (x**0) * ((y_6)**14) + 
            L0x200198ba_f * (x**1) * ((y_6)**14) + 
            L0x200198bc_f * (x**2) * ((y_6)**14) + 
            L0x200198be_f * (x**3) * ((y_6)**14) + 
            L0x200198c0_f * (x**0) * ((y_6)**15) + 
            L0x200198c2_f * (x**1) * ((y_6)**15) + 
            L0x200198c4_f * (x**2) * ((y_6)**15) + 
            L0x200198c6_f * (x**3) * ((y_6)**15) + 
            L0x200198c8_f * (x**0) * ((y_6)**16) + 
            L0x200198ca_f * (x**1) * ((y_6)**16) + 
            L0x200198cc_f * (x**2) * ((y_6)**16) + 
            L0x200198ce_f * (x**3) * ((y_6)**16) + 
            L0x200198d0_f * (x**0) * ((y_6)**17) + 
            L0x200198d2_f * (x**1) * ((y_6)**17) + 
            L0x200198d4_f * (x**2) * ((y_6)**17) + 
            L0x200198d6_f * (x**3) * ((y_6)**17) + 
            L0x200198d8_f * (x**0) * ((y_6)**18) + 
            L0x200198da_f * (x**1) * ((y_6)**18) + 
            L0x200198dc_f * (x**2) * ((y_6)**18) + 
            L0x200198de_f * (x**3) * ((y_6)**18) + 
            L0x200198e0_f * (x**0) * ((y_6)**19) + 
            L0x200198e2_f * (x**1) * ((y_6)**19) + 
            L0x200198e4_f * (x**2) * ((y_6)**19) + 
            L0x200198e6_f * (x**3) * ((y_6)**19) + 
            L0x200198e8_f * (x**0) * ((y_6)**20) + 
            L0x200198ea_f * (x**1) * ((y_6)**20) + 
            L0x200198ec_f * (x**2) * ((y_6)**20) + 
            L0x200198ee_f * (x**3) * ((y_6)**20) + 
            L0x200198f0_f * (x**0) * ((y_6)**21) + 
            L0x200198f2_f * (x**1) * ((y_6)**21) + 
            L0x200198f4_f * (x**2) * ((y_6)**21) + 
            L0x200198f6_f * (x**3) * ((y_6)**21) + 
            L0x200198f8_f * (x**0) * ((y_6)**22) + 
            L0x200198fa_f * (x**1) * ((y_6)**22) + 
            L0x200198fc_f * (x**2) * ((y_6)**22) + 
            L0x200198fe_f * (x**3) * ((y_6)**22) + 
            L0x20019900_f * (x**0) * ((y_6)**23) + 
            L0x20019902_f * (x**1) * ((y_6)**23) + 
            L0x20019904_f * (x**2) * ((y_6)**23) + 
            L0x20019906_f * (x**3) * ((y_6)**23) + 
            L0x20019908_f * (x**0) * ((y_6)**24) + 
            L0x2001990a_f * (x**1) * ((y_6)**24) + 
            L0x2001990c_f * (x**2) * ((y_6)**24) + 
            L0x2001990e_f * (x**3) * ((y_6)**24) + 
            L0x20019910_f * (x**0) * ((y_6)**25) + 
            L0x20019912_f * (x**1) * ((y_6)**25) + 
            L0x20019914_f * (x**2) * ((y_6)**25) + 
            L0x20019916_f * (x**3) * ((y_6)**25) + 
            L0x20019918_f * (x**0) * ((y_6)**26) + 
            L0x2001991a_f * (x**1) * ((y_6)**26) + 
            L0x2001991c_f * (x**2) * ((y_6)**26) + 
            L0x2001991e_f * (x**3) * ((y_6)**26) + 
            L0x20019920_f * (x**0) * ((y_6)**27) + 
            L0x20019922_f * (x**1) * ((y_6)**27) + 
            L0x20019924_f * (x**2) * ((y_6)**27) + 
            L0x20019926_f * (x**3) * ((y_6)**27) + 
            L0x20019928_f * (x**0) * ((y_6)**28) + 
            L0x2001992a_f * (x**1) * ((y_6)**28) + 
            L0x2001992c_f * (x**2) * ((y_6)**28) + 
            L0x2001992e_f * (x**3) * ((y_6)**28) + 
            L0x20019930_f * (x**0) * ((y_6)**29) + 
            L0x20019932_f * (x**1) * ((y_6)**29) + 
            L0x20019934_f * (x**2) * ((y_6)**29) + 
            L0x20019936_f * (x**3) * ((y_6)**29) + 
            L0x20019938_f * (x**0) * ((y_6)**30) + 
            L0x2001993a_f * (x**1) * ((y_6)**30) + 
            L0x2001993c_f * (x**2) * ((y_6)**30) + 
            L0x2001993e_f * (x**3) * ((y_6)**30) + 
            L0x20019940_f * (x**0) * ((y_6)**31) + 
            L0x20019942_f * (x**1) * ((y_6)**31) + 
            L0x20019944_f * (x**2) * ((y_6)**31) + 
            L0x20019946_f * (x**3) * ((y_6)**31) + 
            L0x20019948_f * (x**0) * ((y_6)**32) + 
            L0x2001994a_f * (x**1) * ((y_6)**32) + 
            L0x2001994c_f * (x**2) * ((y_6)**32) + 
            L0x2001994e_f * (x**3) * ((y_6)**32) + 
            L0x20019950_f * (x**0) * ((y_6)**33) + 
            L0x20019952_f * (x**1) * ((y_6)**33) + 
            L0x20019954_f * (x**2) * ((y_6)**33) + 
            L0x20019956_f * (x**3) * ((y_6)**33) + 
            L0x20019958_f * (x**0) * ((y_6)**34) + 
            L0x2001995a_f * (x**1) * ((y_6)**34) + 
            L0x2001995c_f * (x**2) * ((y_6)**34) + 
            L0x2001995e_f * (x**3) * ((y_6)**34) + 
            L0x20019960_f * (x**0) * ((y_6)**35) + 
            L0x20019962_f * (x**1) * ((y_6)**35) + 
            L0x20019964_f * (x**2) * ((y_6)**35) + 
            L0x20019966_f * (x**3) * ((y_6)**35) + 
            L0x20019968_f * (x**0) * ((y_6)**36) + 
            L0x2001996a_f * (x**1) * ((y_6)**36) + 
            L0x2001996c_f * (x**2) * ((y_6)**36) + 
            L0x2001996e_f * (x**3) * ((y_6)**36) + 
            L0x20019970_f * (x**0) * ((y_6)**37) + 
            L0x20019972_f * (x**1) * ((y_6)**37) + 
            L0x20019974_f * (x**2) * ((y_6)**37) + 
            L0x20019976_f * (x**3) * ((y_6)**37) + 
            L0x20019978_f * (x**0) * ((y_6)**38) + 
            L0x2001997a_f * (x**1) * ((y_6)**38) + 
            L0x2001997c_f * (x**2) * ((y_6)**38) + 
            L0x2001997e_f * (x**3) * ((y_6)**38) + 
            L0x20019980_f * (x**0) * ((y_6)**39) + 
            L0x20019982_f * (x**1) * ((y_6)**39) + 
            L0x20019984_f * (x**2) * ((y_6)**39) + 
            L0x20019986_f * (x**3) * ((y_6)**39) + 
            L0x20019988_f * (x**0) * ((y_6)**40) + 
            L0x2001998a_f * (x**1) * ((y_6)**40) + 
            L0x2001998c_f * (x**2) * ((y_6)**40) + 
            L0x2001998e_f * (x**3) * ((y_6)**40) + 
            L0x20019990_f * (x**0) * ((y_6)**41) + 
            L0x20019992_f * (x**1) * ((y_6)**41) + 
            L0x20019994_f * (x**2) * ((y_6)**41) + 
            L0x20019996_f * (x**3) * ((y_6)**41) + 
            L0x20019998_f * (x**0) * ((y_6)**42) + 
            L0x2001999a_f * (x**1) * ((y_6)**42) + 
            L0x2001999c_f * (x**2) * ((y_6)**42) + 
            L0x2001999e_f * (x**3) * ((y_6)**42) + 
            L0x200199a0_f * (x**0) * ((y_6)**43) + 
            L0x200199a2_f * (x**1) * ((y_6)**43) + 
            L0x200199a4_f * (x**2) * ((y_6)**43) + 
            L0x200199a6_f * (x**3) * ((y_6)**43) + 
            L0x200199a8_f * (x**0) * ((y_6)**44) + 
            L0x200199aa_f * (x**1) * ((y_6)**44) + 
            L0x200199ac_f * (x**2) * ((y_6)**44) + 
            L0x200199ae_f * (x**3) * ((y_6)**44) + 
            L0x200199b0_f * (x**0) * ((y_6)**45) + 
            L0x200199b2_f * (x**1) * ((y_6)**45) + 
            L0x200199b4_f * (x**2) * ((y_6)**45) + 
            L0x200199b6_f * (x**3) * ((y_6)**45) + 
            L0x200199b8_f * (x**0) * ((y_6)**46) + 
            L0x200199ba_f * (x**1) * ((y_6)**46) + 
            L0x200199bc_f * (x**2) * ((y_6)**46) + 
            L0x200199be_f * (x**3) * ((y_6)**46) + 
            L0x200199c0_f * (x**0) * ((y_6)**47) + 
            L0x200199c2_f * (x**1) * ((y_6)**47) + 
            L0x200199c4_f * (x**2) * ((y_6)**47) + 
            L0x200199c6_f * (x**3) * ((y_6)**47) + 
            L0x200199c8_f * (x**0) * ((y_6)**48) + 
            L0x200199ca_f * (x**1) * ((y_6)**48) + 
            L0x200199cc_f * (x**2) * ((y_6)**48) + 
            L0x200199ce_f * (x**3) * ((y_6)**48) + 
            L0x200199d0_f * (x**0) * ((y_6)**49) + 
            L0x200199d2_f * (x**1) * ((y_6)**49) + 
            L0x200199d4_f * (x**2) * ((y_6)**49) + 
            L0x200199d6_f * (x**3) * ((y_6)**49) + 
            L0x200199d8_f * (x**0) * ((y_6)**50) + 
            L0x200199da_f * (x**1) * ((y_6)**50) + 
            L0x200199dc_f * (x**2) * ((y_6)**50) + 
            L0x200199de_f * (x**3) * ((y_6)**50) + 
            L0x200199e0_f * (x**0) * ((y_6)**51) + 
            L0x200199e2_f * (x**1) * ((y_6)**51) + 
            L0x200199e4_f * (x**2) * ((y_6)**51) + 
            L0x200199e6_f * (x**3) * ((y_6)**51) + 
            L0x200199e8_f * (x**0) * ((y_6)**52) + 
            L0x200199ea_f * (x**1) * ((y_6)**52) + 
            L0x200199ec_f * (x**2) * ((y_6)**52) + 
            L0x200199ee_f * (x**3) * ((y_6)**52) + 
            L0x200199f0_f * (x**0) * ((y_6)**53) + 
            L0x200199f2_f * (x**1) * ((y_6)**53) + 
            L0x200199f4_f * (x**2) * ((y_6)**53) + 
            L0x200199f6_f * (x**3) * ((y_6)**53) + 
            L0x200199f8_f * (x**0) * ((y_6)**54) + 
            L0x200199fa_f * (x**1) * ((y_6)**54) + 
            L0x200199fc_f * (x**2) * ((y_6)**54) + 
            L0x200199fe_f * (x**3) * ((y_6)**54) + 
            L0x20019a00_f * (x**0) * ((y_6)**55) + 
            L0x20019a02_f * (x**1) * ((y_6)**55) + 
            L0x20019a04_f * (x**2) * ((y_6)**55) + 
            L0x20019a06_f * (x**3) * ((y_6)**55) + 
            L0x20019a08_f * (x**0) * ((y_6)**56) + 
            L0x20019a0a_f * (x**1) * ((y_6)**56) + 
            L0x20019a0c_f * (x**2) * ((y_6)**56) + 
            L0x20019a0e_f * (x**3) * ((y_6)**56) + 
            L0x20019a10_f * (x**0) * ((y_6)**57) + 
            L0x20019a12_f * (x**1) * ((y_6)**57) + 
            L0x20019a14_f * (x**2) * ((y_6)**57) + 
            L0x20019a16_f * (x**3) * ((y_6)**57) + 
            L0x20019a18_f * (x**0) * ((y_6)**58) + 
            L0x20019a1a_f * (x**1) * ((y_6)**58) + 
            L0x20019a1c_f * (x**2) * ((y_6)**58) + 
            L0x20019a1e_f * (x**3) * ((y_6)**58) + 
            L0x20019a20_f * (x**0) * ((y_6)**59) + 
            L0x20019a22_f * (x**1) * ((y_6)**59) + 
            L0x20019a24_f * (x**2) * ((y_6)**59) + 
            L0x20019a26_f * (x**3) * ((y_6)**59) + 
            L0x20019a28_f * (x**0) * ((y_6)**60) + 
            L0x20019a2a_f * (x**1) * ((y_6)**60) + 
            L0x20019a2c_f * (x**2) * ((y_6)**60) + 
            L0x20019a2e_f * (x**3) * ((y_6)**60) + 
            L0x20019a30_f * (x**0) * ((y_6)**61) + 
            L0x20019a32_f * (x**1) * ((y_6)**61) + 
            L0x20019a34_f * (x**2) * ((y_6)**61) + 
            L0x20019a36_f * (x**3) * ((y_6)**61) + 
            L0x20019a38_f * (x**0) * ((y_6)**62) + 
            L0x20019a3a_f * (x**1) * ((y_6)**62) + 
            L0x20019a3c_f * (x**2) * ((y_6)**62) + 
            L0x20019a3e_f * (x**3) * ((y_6)**62) + 
            L0x20019a40_f * (x**0) * ((y_6)**63) + 
            L0x20019a42_f * (x**1) * ((y_6)**63) + 
            L0x20019a44_f * (x**2) * ((y_6)**63) + 
            L0x20019a46_f * (x**3) * ((y_6)**63)
          )
          [25570049, x**4 - y_0_23 * 17952966, y_0_23 - 1]
  ] prove with [cuts [6, 24], all ghosts]
  &&
  true
;

cut (* 43 *)
  true && true;

(* slice 3 *)
cut (* 44 *)
  and [
    (* inp_poly_24 *)
    eqmod (2**32) * (inp_poly_24 * inp_poly_24)
          (
            L0x20019848_f * (x**0) * ((y_6)**0) + 
            L0x2001984a_f * (x**1) * ((y_6)**0) + 
            L0x2001984c_f * (x**2) * ((y_6)**0) + 
            L0x2001984e_f * (x**3) * ((y_6)**0) + 
            L0x20019850_f * (x**0) * ((y_6)**1) + 
            L0x20019852_f * (x**1) * ((y_6)**1) + 
            L0x20019854_f * (x**2) * ((y_6)**1) + 
            L0x20019856_f * (x**3) * ((y_6)**1) + 
            L0x20019858_f * (x**0) * ((y_6)**2) + 
            L0x2001985a_f * (x**1) * ((y_6)**2) + 
            L0x2001985c_f * (x**2) * ((y_6)**2) + 
            L0x2001985e_f * (x**3) * ((y_6)**2) + 
            L0x20019860_f * (x**0) * ((y_6)**3) + 
            L0x20019862_f * (x**1) * ((y_6)**3) + 
            L0x20019864_f * (x**2) * ((y_6)**3) + 
            L0x20019866_f * (x**3) * ((y_6)**3) + 
            L0x20019868_f * (x**0) * ((y_6)**4) + 
            L0x2001986a_f * (x**1) * ((y_6)**4) + 
            L0x2001986c_f * (x**2) * ((y_6)**4) + 
            L0x2001986e_f * (x**3) * ((y_6)**4) + 
            L0x20019870_f * (x**0) * ((y_6)**5) + 
            L0x20019872_f * (x**1) * ((y_6)**5) + 
            L0x20019874_f * (x**2) * ((y_6)**5) + 
            L0x20019876_f * (x**3) * ((y_6)**5) + 
            L0x20019878_f * (x**0) * ((y_6)**6) + 
            L0x2001987a_f * (x**1) * ((y_6)**6) + 
            L0x2001987c_f * (x**2) * ((y_6)**6) + 
            L0x2001987e_f * (x**3) * ((y_6)**6) + 
            L0x20019880_f * (x**0) * ((y_6)**7) + 
            L0x20019882_f * (x**1) * ((y_6)**7) + 
            L0x20019884_f * (x**2) * ((y_6)**7) + 
            L0x20019886_f * (x**3) * ((y_6)**7) + 
            L0x20019888_f * (x**0) * ((y_6)**8) + 
            L0x2001988a_f * (x**1) * ((y_6)**8) + 
            L0x2001988c_f * (x**2) * ((y_6)**8) + 
            L0x2001988e_f * (x**3) * ((y_6)**8) + 
            L0x20019890_f * (x**0) * ((y_6)**9) + 
            L0x20019892_f * (x**1) * ((y_6)**9) + 
            L0x20019894_f * (x**2) * ((y_6)**9) + 
            L0x20019896_f * (x**3) * ((y_6)**9) + 
            L0x20019898_f * (x**0) * ((y_6)**10) + 
            L0x2001989a_f * (x**1) * ((y_6)**10) + 
            L0x2001989c_f * (x**2) * ((y_6)**10) + 
            L0x2001989e_f * (x**3) * ((y_6)**10) + 
            L0x200198a0_f * (x**0) * ((y_6)**11) + 
            L0x200198a2_f * (x**1) * ((y_6)**11) + 
            L0x200198a4_f * (x**2) * ((y_6)**11) + 
            L0x200198a6_f * (x**3) * ((y_6)**11) + 
            L0x200198a8_f * (x**0) * ((y_6)**12) + 
            L0x200198aa_f * (x**1) * ((y_6)**12) + 
            L0x200198ac_f * (x**2) * ((y_6)**12) + 
            L0x200198ae_f * (x**3) * ((y_6)**12) + 
            L0x200198b0_f * (x**0) * ((y_6)**13) + 
            L0x200198b2_f * (x**1) * ((y_6)**13) + 
            L0x200198b4_f * (x**2) * ((y_6)**13) + 
            L0x200198b6_f * (x**3) * ((y_6)**13) + 
            L0x200198b8_f * (x**0) * ((y_6)**14) + 
            L0x200198ba_f * (x**1) * ((y_6)**14) + 
            L0x200198bc_f * (x**2) * ((y_6)**14) + 
            L0x200198be_f * (x**3) * ((y_6)**14) + 
            L0x200198c0_f * (x**0) * ((y_6)**15) + 
            L0x200198c2_f * (x**1) * ((y_6)**15) + 
            L0x200198c4_f * (x**2) * ((y_6)**15) + 
            L0x200198c6_f * (x**3) * ((y_6)**15) + 
            L0x200198c8_f * (x**0) * ((y_6)**16) + 
            L0x200198ca_f * (x**1) * ((y_6)**16) + 
            L0x200198cc_f * (x**2) * ((y_6)**16) + 
            L0x200198ce_f * (x**3) * ((y_6)**16) + 
            L0x200198d0_f * (x**0) * ((y_6)**17) + 
            L0x200198d2_f * (x**1) * ((y_6)**17) + 
            L0x200198d4_f * (x**2) * ((y_6)**17) + 
            L0x200198d6_f * (x**3) * ((y_6)**17) + 
            L0x200198d8_f * (x**0) * ((y_6)**18) + 
            L0x200198da_f * (x**1) * ((y_6)**18) + 
            L0x200198dc_f * (x**2) * ((y_6)**18) + 
            L0x200198de_f * (x**3) * ((y_6)**18) + 
            L0x200198e0_f * (x**0) * ((y_6)**19) + 
            L0x200198e2_f * (x**1) * ((y_6)**19) + 
            L0x200198e4_f * (x**2) * ((y_6)**19) + 
            L0x200198e6_f * (x**3) * ((y_6)**19) + 
            L0x200198e8_f * (x**0) * ((y_6)**20) + 
            L0x200198ea_f * (x**1) * ((y_6)**20) + 
            L0x200198ec_f * (x**2) * ((y_6)**20) + 
            L0x200198ee_f * (x**3) * ((y_6)**20) + 
            L0x200198f0_f * (x**0) * ((y_6)**21) + 
            L0x200198f2_f * (x**1) * ((y_6)**21) + 
            L0x200198f4_f * (x**2) * ((y_6)**21) + 
            L0x200198f6_f * (x**3) * ((y_6)**21) + 
            L0x200198f8_f * (x**0) * ((y_6)**22) + 
            L0x200198fa_f * (x**1) * ((y_6)**22) + 
            L0x200198fc_f * (x**2) * ((y_6)**22) + 
            L0x200198fe_f * (x**3) * ((y_6)**22) + 
            L0x20019900_f * (x**0) * ((y_6)**23) + 
            L0x20019902_f * (x**1) * ((y_6)**23) + 
            L0x20019904_f * (x**2) * ((y_6)**23) + 
            L0x20019906_f * (x**3) * ((y_6)**23) + 
            L0x20019908_f * (x**0) * ((y_6)**24) + 
            L0x2001990a_f * (x**1) * ((y_6)**24) + 
            L0x2001990c_f * (x**2) * ((y_6)**24) + 
            L0x2001990e_f * (x**3) * ((y_6)**24) + 
            L0x20019910_f * (x**0) * ((y_6)**25) + 
            L0x20019912_f * (x**1) * ((y_6)**25) + 
            L0x20019914_f * (x**2) * ((y_6)**25) + 
            L0x20019916_f * (x**3) * ((y_6)**25) + 
            L0x20019918_f * (x**0) * ((y_6)**26) + 
            L0x2001991a_f * (x**1) * ((y_6)**26) + 
            L0x2001991c_f * (x**2) * ((y_6)**26) + 
            L0x2001991e_f * (x**3) * ((y_6)**26) + 
            L0x20019920_f * (x**0) * ((y_6)**27) + 
            L0x20019922_f * (x**1) * ((y_6)**27) + 
            L0x20019924_f * (x**2) * ((y_6)**27) + 
            L0x20019926_f * (x**3) * ((y_6)**27) + 
            L0x20019928_f * (x**0) * ((y_6)**28) + 
            L0x2001992a_f * (x**1) * ((y_6)**28) + 
            L0x2001992c_f * (x**2) * ((y_6)**28) + 
            L0x2001992e_f * (x**3) * ((y_6)**28) + 
            L0x20019930_f * (x**0) * ((y_6)**29) + 
            L0x20019932_f * (x**1) * ((y_6)**29) + 
            L0x20019934_f * (x**2) * ((y_6)**29) + 
            L0x20019936_f * (x**3) * ((y_6)**29) + 
            L0x20019938_f * (x**0) * ((y_6)**30) + 
            L0x2001993a_f * (x**1) * ((y_6)**30) + 
            L0x2001993c_f * (x**2) * ((y_6)**30) + 
            L0x2001993e_f * (x**3) * ((y_6)**30) + 
            L0x20019940_f * (x**0) * ((y_6)**31) + 
            L0x20019942_f * (x**1) * ((y_6)**31) + 
            L0x20019944_f * (x**2) * ((y_6)**31) + 
            L0x20019946_f * (x**3) * ((y_6)**31) + 
            L0x20019948_f * (x**0) * ((y_6)**32) + 
            L0x2001994a_f * (x**1) * ((y_6)**32) + 
            L0x2001994c_f * (x**2) * ((y_6)**32) + 
            L0x2001994e_f * (x**3) * ((y_6)**32) + 
            L0x20019950_f * (x**0) * ((y_6)**33) + 
            L0x20019952_f * (x**1) * ((y_6)**33) + 
            L0x20019954_f * (x**2) * ((y_6)**33) + 
            L0x20019956_f * (x**3) * ((y_6)**33) + 
            L0x20019958_f * (x**0) * ((y_6)**34) + 
            L0x2001995a_f * (x**1) * ((y_6)**34) + 
            L0x2001995c_f * (x**2) * ((y_6)**34) + 
            L0x2001995e_f * (x**3) * ((y_6)**34) + 
            L0x20019960_f * (x**0) * ((y_6)**35) + 
            L0x20019962_f * (x**1) * ((y_6)**35) + 
            L0x20019964_f * (x**2) * ((y_6)**35) + 
            L0x20019966_f * (x**3) * ((y_6)**35) + 
            L0x20019968_f * (x**0) * ((y_6)**36) + 
            L0x2001996a_f * (x**1) * ((y_6)**36) + 
            L0x2001996c_f * (x**2) * ((y_6)**36) + 
            L0x2001996e_f * (x**3) * ((y_6)**36) + 
            L0x20019970_f * (x**0) * ((y_6)**37) + 
            L0x20019972_f * (x**1) * ((y_6)**37) + 
            L0x20019974_f * (x**2) * ((y_6)**37) + 
            L0x20019976_f * (x**3) * ((y_6)**37) + 
            L0x20019978_f * (x**0) * ((y_6)**38) + 
            L0x2001997a_f * (x**1) * ((y_6)**38) + 
            L0x2001997c_f * (x**2) * ((y_6)**38) + 
            L0x2001997e_f * (x**3) * ((y_6)**38) + 
            L0x20019980_f * (x**0) * ((y_6)**39) + 
            L0x20019982_f * (x**1) * ((y_6)**39) + 
            L0x20019984_f * (x**2) * ((y_6)**39) + 
            L0x20019986_f * (x**3) * ((y_6)**39) + 
            L0x20019988_f * (x**0) * ((y_6)**40) + 
            L0x2001998a_f * (x**1) * ((y_6)**40) + 
            L0x2001998c_f * (x**2) * ((y_6)**40) + 
            L0x2001998e_f * (x**3) * ((y_6)**40) + 
            L0x20019990_f * (x**0) * ((y_6)**41) + 
            L0x20019992_f * (x**1) * ((y_6)**41) + 
            L0x20019994_f * (x**2) * ((y_6)**41) + 
            L0x20019996_f * (x**3) * ((y_6)**41) + 
            L0x20019998_f * (x**0) * ((y_6)**42) + 
            L0x2001999a_f * (x**1) * ((y_6)**42) + 
            L0x2001999c_f * (x**2) * ((y_6)**42) + 
            L0x2001999e_f * (x**3) * ((y_6)**42) + 
            L0x200199a0_f * (x**0) * ((y_6)**43) + 
            L0x200199a2_f * (x**1) * ((y_6)**43) + 
            L0x200199a4_f * (x**2) * ((y_6)**43) + 
            L0x200199a6_f * (x**3) * ((y_6)**43) + 
            L0x200199a8_f * (x**0) * ((y_6)**44) + 
            L0x200199aa_f * (x**1) * ((y_6)**44) + 
            L0x200199ac_f * (x**2) * ((y_6)**44) + 
            L0x200199ae_f * (x**3) * ((y_6)**44) + 
            L0x200199b0_f * (x**0) * ((y_6)**45) + 
            L0x200199b2_f * (x**1) * ((y_6)**45) + 
            L0x200199b4_f * (x**2) * ((y_6)**45) + 
            L0x200199b6_f * (x**3) * ((y_6)**45) + 
            L0x200199b8_f * (x**0) * ((y_6)**46) + 
            L0x200199ba_f * (x**1) * ((y_6)**46) + 
            L0x200199bc_f * (x**2) * ((y_6)**46) + 
            L0x200199be_f * (x**3) * ((y_6)**46) + 
            L0x200199c0_f * (x**0) * ((y_6)**47) + 
            L0x200199c2_f * (x**1) * ((y_6)**47) + 
            L0x200199c4_f * (x**2) * ((y_6)**47) + 
            L0x200199c6_f * (x**3) * ((y_6)**47) + 
            L0x200199c8_f * (x**0) * ((y_6)**48) + 
            L0x200199ca_f * (x**1) * ((y_6)**48) + 
            L0x200199cc_f * (x**2) * ((y_6)**48) + 
            L0x200199ce_f * (x**3) * ((y_6)**48) + 
            L0x200199d0_f * (x**0) * ((y_6)**49) + 
            L0x200199d2_f * (x**1) * ((y_6)**49) + 
            L0x200199d4_f * (x**2) * ((y_6)**49) + 
            L0x200199d6_f * (x**3) * ((y_6)**49) + 
            L0x200199d8_f * (x**0) * ((y_6)**50) + 
            L0x200199da_f * (x**1) * ((y_6)**50) + 
            L0x200199dc_f * (x**2) * ((y_6)**50) + 
            L0x200199de_f * (x**3) * ((y_6)**50) + 
            L0x200199e0_f * (x**0) * ((y_6)**51) + 
            L0x200199e2_f * (x**1) * ((y_6)**51) + 
            L0x200199e4_f * (x**2) * ((y_6)**51) + 
            L0x200199e6_f * (x**3) * ((y_6)**51) + 
            L0x200199e8_f * (x**0) * ((y_6)**52) + 
            L0x200199ea_f * (x**1) * ((y_6)**52) + 
            L0x200199ec_f * (x**2) * ((y_6)**52) + 
            L0x200199ee_f * (x**3) * ((y_6)**52) + 
            L0x200199f0_f * (x**0) * ((y_6)**53) + 
            L0x200199f2_f * (x**1) * ((y_6)**53) + 
            L0x200199f4_f * (x**2) * ((y_6)**53) + 
            L0x200199f6_f * (x**3) * ((y_6)**53) + 
            L0x200199f8_f * (x**0) * ((y_6)**54) + 
            L0x200199fa_f * (x**1) * ((y_6)**54) + 
            L0x200199fc_f * (x**2) * ((y_6)**54) + 
            L0x200199fe_f * (x**3) * ((y_6)**54) + 
            L0x20019a00_f * (x**0) * ((y_6)**55) + 
            L0x20019a02_f * (x**1) * ((y_6)**55) + 
            L0x20019a04_f * (x**2) * ((y_6)**55) + 
            L0x20019a06_f * (x**3) * ((y_6)**55) + 
            L0x20019a08_f * (x**0) * ((y_6)**56) + 
            L0x20019a0a_f * (x**1) * ((y_6)**56) + 
            L0x20019a0c_f * (x**2) * ((y_6)**56) + 
            L0x20019a0e_f * (x**3) * ((y_6)**56) + 
            L0x20019a10_f * (x**0) * ((y_6)**57) + 
            L0x20019a12_f * (x**1) * ((y_6)**57) + 
            L0x20019a14_f * (x**2) * ((y_6)**57) + 
            L0x20019a16_f * (x**3) * ((y_6)**57) + 
            L0x20019a18_f * (x**0) * ((y_6)**58) + 
            L0x20019a1a_f * (x**1) * ((y_6)**58) + 
            L0x20019a1c_f * (x**2) * ((y_6)**58) + 
            L0x20019a1e_f * (x**3) * ((y_6)**58) + 
            L0x20019a20_f * (x**0) * ((y_6)**59) + 
            L0x20019a22_f * (x**1) * ((y_6)**59) + 
            L0x20019a24_f * (x**2) * ((y_6)**59) + 
            L0x20019a26_f * (x**3) * ((y_6)**59) + 
            L0x20019a28_f * (x**0) * ((y_6)**60) + 
            L0x20019a2a_f * (x**1) * ((y_6)**60) + 
            L0x20019a2c_f * (x**2) * ((y_6)**60) + 
            L0x20019a2e_f * (x**3) * ((y_6)**60) + 
            L0x20019a30_f * (x**0) * ((y_6)**61) + 
            L0x20019a32_f * (x**1) * ((y_6)**61) + 
            L0x20019a34_f * (x**2) * ((y_6)**61) + 
            L0x20019a36_f * (x**3) * ((y_6)**61) + 
            L0x20019a38_f * (x**0) * ((y_6)**62) + 
            L0x20019a3a_f * (x**1) * ((y_6)**62) + 
            L0x20019a3c_f * (x**2) * ((y_6)**62) + 
            L0x20019a3e_f * (x**3) * ((y_6)**62) + 
            L0x20019a40_f * (x**0) * ((y_6)**63) + 
            L0x20019a42_f * (x**1) * ((y_6)**63) + 
            L0x20019a44_f * (x**2) * ((y_6)**63) + 
            L0x20019a46_f * (x**3) * ((y_6)**63)
          )
          [25570049, x**4 - y_0_24 * 24859920, y_0_24 - 1],
    (* inp_poly_25 *)
    eqmod (2**32) * (inp_poly_25 * inp_poly_25)
          (
            L0x20019848_f * (x**0) * ((y_6)**0) + 
            L0x2001984a_f * (x**1) * ((y_6)**0) + 
            L0x2001984c_f * (x**2) * ((y_6)**0) + 
            L0x2001984e_f * (x**3) * ((y_6)**0) + 
            L0x20019850_f * (x**0) * ((y_6)**1) + 
            L0x20019852_f * (x**1) * ((y_6)**1) + 
            L0x20019854_f * (x**2) * ((y_6)**1) + 
            L0x20019856_f * (x**3) * ((y_6)**1) + 
            L0x20019858_f * (x**0) * ((y_6)**2) + 
            L0x2001985a_f * (x**1) * ((y_6)**2) + 
            L0x2001985c_f * (x**2) * ((y_6)**2) + 
            L0x2001985e_f * (x**3) * ((y_6)**2) + 
            L0x20019860_f * (x**0) * ((y_6)**3) + 
            L0x20019862_f * (x**1) * ((y_6)**3) + 
            L0x20019864_f * (x**2) * ((y_6)**3) + 
            L0x20019866_f * (x**3) * ((y_6)**3) + 
            L0x20019868_f * (x**0) * ((y_6)**4) + 
            L0x2001986a_f * (x**1) * ((y_6)**4) + 
            L0x2001986c_f * (x**2) * ((y_6)**4) + 
            L0x2001986e_f * (x**3) * ((y_6)**4) + 
            L0x20019870_f * (x**0) * ((y_6)**5) + 
            L0x20019872_f * (x**1) * ((y_6)**5) + 
            L0x20019874_f * (x**2) * ((y_6)**5) + 
            L0x20019876_f * (x**3) * ((y_6)**5) + 
            L0x20019878_f * (x**0) * ((y_6)**6) + 
            L0x2001987a_f * (x**1) * ((y_6)**6) + 
            L0x2001987c_f * (x**2) * ((y_6)**6) + 
            L0x2001987e_f * (x**3) * ((y_6)**6) + 
            L0x20019880_f * (x**0) * ((y_6)**7) + 
            L0x20019882_f * (x**1) * ((y_6)**7) + 
            L0x20019884_f * (x**2) * ((y_6)**7) + 
            L0x20019886_f * (x**3) * ((y_6)**7) + 
            L0x20019888_f * (x**0) * ((y_6)**8) + 
            L0x2001988a_f * (x**1) * ((y_6)**8) + 
            L0x2001988c_f * (x**2) * ((y_6)**8) + 
            L0x2001988e_f * (x**3) * ((y_6)**8) + 
            L0x20019890_f * (x**0) * ((y_6)**9) + 
            L0x20019892_f * (x**1) * ((y_6)**9) + 
            L0x20019894_f * (x**2) * ((y_6)**9) + 
            L0x20019896_f * (x**3) * ((y_6)**9) + 
            L0x20019898_f * (x**0) * ((y_6)**10) + 
            L0x2001989a_f * (x**1) * ((y_6)**10) + 
            L0x2001989c_f * (x**2) * ((y_6)**10) + 
            L0x2001989e_f * (x**3) * ((y_6)**10) + 
            L0x200198a0_f * (x**0) * ((y_6)**11) + 
            L0x200198a2_f * (x**1) * ((y_6)**11) + 
            L0x200198a4_f * (x**2) * ((y_6)**11) + 
            L0x200198a6_f * (x**3) * ((y_6)**11) + 
            L0x200198a8_f * (x**0) * ((y_6)**12) + 
            L0x200198aa_f * (x**1) * ((y_6)**12) + 
            L0x200198ac_f * (x**2) * ((y_6)**12) + 
            L0x200198ae_f * (x**3) * ((y_6)**12) + 
            L0x200198b0_f * (x**0) * ((y_6)**13) + 
            L0x200198b2_f * (x**1) * ((y_6)**13) + 
            L0x200198b4_f * (x**2) * ((y_6)**13) + 
            L0x200198b6_f * (x**3) * ((y_6)**13) + 
            L0x200198b8_f * (x**0) * ((y_6)**14) + 
            L0x200198ba_f * (x**1) * ((y_6)**14) + 
            L0x200198bc_f * (x**2) * ((y_6)**14) + 
            L0x200198be_f * (x**3) * ((y_6)**14) + 
            L0x200198c0_f * (x**0) * ((y_6)**15) + 
            L0x200198c2_f * (x**1) * ((y_6)**15) + 
            L0x200198c4_f * (x**2) * ((y_6)**15) + 
            L0x200198c6_f * (x**3) * ((y_6)**15) + 
            L0x200198c8_f * (x**0) * ((y_6)**16) + 
            L0x200198ca_f * (x**1) * ((y_6)**16) + 
            L0x200198cc_f * (x**2) * ((y_6)**16) + 
            L0x200198ce_f * (x**3) * ((y_6)**16) + 
            L0x200198d0_f * (x**0) * ((y_6)**17) + 
            L0x200198d2_f * (x**1) * ((y_6)**17) + 
            L0x200198d4_f * (x**2) * ((y_6)**17) + 
            L0x200198d6_f * (x**3) * ((y_6)**17) + 
            L0x200198d8_f * (x**0) * ((y_6)**18) + 
            L0x200198da_f * (x**1) * ((y_6)**18) + 
            L0x200198dc_f * (x**2) * ((y_6)**18) + 
            L0x200198de_f * (x**3) * ((y_6)**18) + 
            L0x200198e0_f * (x**0) * ((y_6)**19) + 
            L0x200198e2_f * (x**1) * ((y_6)**19) + 
            L0x200198e4_f * (x**2) * ((y_6)**19) + 
            L0x200198e6_f * (x**3) * ((y_6)**19) + 
            L0x200198e8_f * (x**0) * ((y_6)**20) + 
            L0x200198ea_f * (x**1) * ((y_6)**20) + 
            L0x200198ec_f * (x**2) * ((y_6)**20) + 
            L0x200198ee_f * (x**3) * ((y_6)**20) + 
            L0x200198f0_f * (x**0) * ((y_6)**21) + 
            L0x200198f2_f * (x**1) * ((y_6)**21) + 
            L0x200198f4_f * (x**2) * ((y_6)**21) + 
            L0x200198f6_f * (x**3) * ((y_6)**21) + 
            L0x200198f8_f * (x**0) * ((y_6)**22) + 
            L0x200198fa_f * (x**1) * ((y_6)**22) + 
            L0x200198fc_f * (x**2) * ((y_6)**22) + 
            L0x200198fe_f * (x**3) * ((y_6)**22) + 
            L0x20019900_f * (x**0) * ((y_6)**23) + 
            L0x20019902_f * (x**1) * ((y_6)**23) + 
            L0x20019904_f * (x**2) * ((y_6)**23) + 
            L0x20019906_f * (x**3) * ((y_6)**23) + 
            L0x20019908_f * (x**0) * ((y_6)**24) + 
            L0x2001990a_f * (x**1) * ((y_6)**24) + 
            L0x2001990c_f * (x**2) * ((y_6)**24) + 
            L0x2001990e_f * (x**3) * ((y_6)**24) + 
            L0x20019910_f * (x**0) * ((y_6)**25) + 
            L0x20019912_f * (x**1) * ((y_6)**25) + 
            L0x20019914_f * (x**2) * ((y_6)**25) + 
            L0x20019916_f * (x**3) * ((y_6)**25) + 
            L0x20019918_f * (x**0) * ((y_6)**26) + 
            L0x2001991a_f * (x**1) * ((y_6)**26) + 
            L0x2001991c_f * (x**2) * ((y_6)**26) + 
            L0x2001991e_f * (x**3) * ((y_6)**26) + 
            L0x20019920_f * (x**0) * ((y_6)**27) + 
            L0x20019922_f * (x**1) * ((y_6)**27) + 
            L0x20019924_f * (x**2) * ((y_6)**27) + 
            L0x20019926_f * (x**3) * ((y_6)**27) + 
            L0x20019928_f * (x**0) * ((y_6)**28) + 
            L0x2001992a_f * (x**1) * ((y_6)**28) + 
            L0x2001992c_f * (x**2) * ((y_6)**28) + 
            L0x2001992e_f * (x**3) * ((y_6)**28) + 
            L0x20019930_f * (x**0) * ((y_6)**29) + 
            L0x20019932_f * (x**1) * ((y_6)**29) + 
            L0x20019934_f * (x**2) * ((y_6)**29) + 
            L0x20019936_f * (x**3) * ((y_6)**29) + 
            L0x20019938_f * (x**0) * ((y_6)**30) + 
            L0x2001993a_f * (x**1) * ((y_6)**30) + 
            L0x2001993c_f * (x**2) * ((y_6)**30) + 
            L0x2001993e_f * (x**3) * ((y_6)**30) + 
            L0x20019940_f * (x**0) * ((y_6)**31) + 
            L0x20019942_f * (x**1) * ((y_6)**31) + 
            L0x20019944_f * (x**2) * ((y_6)**31) + 
            L0x20019946_f * (x**3) * ((y_6)**31) + 
            L0x20019948_f * (x**0) * ((y_6)**32) + 
            L0x2001994a_f * (x**1) * ((y_6)**32) + 
            L0x2001994c_f * (x**2) * ((y_6)**32) + 
            L0x2001994e_f * (x**3) * ((y_6)**32) + 
            L0x20019950_f * (x**0) * ((y_6)**33) + 
            L0x20019952_f * (x**1) * ((y_6)**33) + 
            L0x20019954_f * (x**2) * ((y_6)**33) + 
            L0x20019956_f * (x**3) * ((y_6)**33) + 
            L0x20019958_f * (x**0) * ((y_6)**34) + 
            L0x2001995a_f * (x**1) * ((y_6)**34) + 
            L0x2001995c_f * (x**2) * ((y_6)**34) + 
            L0x2001995e_f * (x**3) * ((y_6)**34) + 
            L0x20019960_f * (x**0) * ((y_6)**35) + 
            L0x20019962_f * (x**1) * ((y_6)**35) + 
            L0x20019964_f * (x**2) * ((y_6)**35) + 
            L0x20019966_f * (x**3) * ((y_6)**35) + 
            L0x20019968_f * (x**0) * ((y_6)**36) + 
            L0x2001996a_f * (x**1) * ((y_6)**36) + 
            L0x2001996c_f * (x**2) * ((y_6)**36) + 
            L0x2001996e_f * (x**3) * ((y_6)**36) + 
            L0x20019970_f * (x**0) * ((y_6)**37) + 
            L0x20019972_f * (x**1) * ((y_6)**37) + 
            L0x20019974_f * (x**2) * ((y_6)**37) + 
            L0x20019976_f * (x**3) * ((y_6)**37) + 
            L0x20019978_f * (x**0) * ((y_6)**38) + 
            L0x2001997a_f * (x**1) * ((y_6)**38) + 
            L0x2001997c_f * (x**2) * ((y_6)**38) + 
            L0x2001997e_f * (x**3) * ((y_6)**38) + 
            L0x20019980_f * (x**0) * ((y_6)**39) + 
            L0x20019982_f * (x**1) * ((y_6)**39) + 
            L0x20019984_f * (x**2) * ((y_6)**39) + 
            L0x20019986_f * (x**3) * ((y_6)**39) + 
            L0x20019988_f * (x**0) * ((y_6)**40) + 
            L0x2001998a_f * (x**1) * ((y_6)**40) + 
            L0x2001998c_f * (x**2) * ((y_6)**40) + 
            L0x2001998e_f * (x**3) * ((y_6)**40) + 
            L0x20019990_f * (x**0) * ((y_6)**41) + 
            L0x20019992_f * (x**1) * ((y_6)**41) + 
            L0x20019994_f * (x**2) * ((y_6)**41) + 
            L0x20019996_f * (x**3) * ((y_6)**41) + 
            L0x20019998_f * (x**0) * ((y_6)**42) + 
            L0x2001999a_f * (x**1) * ((y_6)**42) + 
            L0x2001999c_f * (x**2) * ((y_6)**42) + 
            L0x2001999e_f * (x**3) * ((y_6)**42) + 
            L0x200199a0_f * (x**0) * ((y_6)**43) + 
            L0x200199a2_f * (x**1) * ((y_6)**43) + 
            L0x200199a4_f * (x**2) * ((y_6)**43) + 
            L0x200199a6_f * (x**3) * ((y_6)**43) + 
            L0x200199a8_f * (x**0) * ((y_6)**44) + 
            L0x200199aa_f * (x**1) * ((y_6)**44) + 
            L0x200199ac_f * (x**2) * ((y_6)**44) + 
            L0x200199ae_f * (x**3) * ((y_6)**44) + 
            L0x200199b0_f * (x**0) * ((y_6)**45) + 
            L0x200199b2_f * (x**1) * ((y_6)**45) + 
            L0x200199b4_f * (x**2) * ((y_6)**45) + 
            L0x200199b6_f * (x**3) * ((y_6)**45) + 
            L0x200199b8_f * (x**0) * ((y_6)**46) + 
            L0x200199ba_f * (x**1) * ((y_6)**46) + 
            L0x200199bc_f * (x**2) * ((y_6)**46) + 
            L0x200199be_f * (x**3) * ((y_6)**46) + 
            L0x200199c0_f * (x**0) * ((y_6)**47) + 
            L0x200199c2_f * (x**1) * ((y_6)**47) + 
            L0x200199c4_f * (x**2) * ((y_6)**47) + 
            L0x200199c6_f * (x**3) * ((y_6)**47) + 
            L0x200199c8_f * (x**0) * ((y_6)**48) + 
            L0x200199ca_f * (x**1) * ((y_6)**48) + 
            L0x200199cc_f * (x**2) * ((y_6)**48) + 
            L0x200199ce_f * (x**3) * ((y_6)**48) + 
            L0x200199d0_f * (x**0) * ((y_6)**49) + 
            L0x200199d2_f * (x**1) * ((y_6)**49) + 
            L0x200199d4_f * (x**2) * ((y_6)**49) + 
            L0x200199d6_f * (x**3) * ((y_6)**49) + 
            L0x200199d8_f * (x**0) * ((y_6)**50) + 
            L0x200199da_f * (x**1) * ((y_6)**50) + 
            L0x200199dc_f * (x**2) * ((y_6)**50) + 
            L0x200199de_f * (x**3) * ((y_6)**50) + 
            L0x200199e0_f * (x**0) * ((y_6)**51) + 
            L0x200199e2_f * (x**1) * ((y_6)**51) + 
            L0x200199e4_f * (x**2) * ((y_6)**51) + 
            L0x200199e6_f * (x**3) * ((y_6)**51) + 
            L0x200199e8_f * (x**0) * ((y_6)**52) + 
            L0x200199ea_f * (x**1) * ((y_6)**52) + 
            L0x200199ec_f * (x**2) * ((y_6)**52) + 
            L0x200199ee_f * (x**3) * ((y_6)**52) + 
            L0x200199f0_f * (x**0) * ((y_6)**53) + 
            L0x200199f2_f * (x**1) * ((y_6)**53) + 
            L0x200199f4_f * (x**2) * ((y_6)**53) + 
            L0x200199f6_f * (x**3) * ((y_6)**53) + 
            L0x200199f8_f * (x**0) * ((y_6)**54) + 
            L0x200199fa_f * (x**1) * ((y_6)**54) + 
            L0x200199fc_f * (x**2) * ((y_6)**54) + 
            L0x200199fe_f * (x**3) * ((y_6)**54) + 
            L0x20019a00_f * (x**0) * ((y_6)**55) + 
            L0x20019a02_f * (x**1) * ((y_6)**55) + 
            L0x20019a04_f * (x**2) * ((y_6)**55) + 
            L0x20019a06_f * (x**3) * ((y_6)**55) + 
            L0x20019a08_f * (x**0) * ((y_6)**56) + 
            L0x20019a0a_f * (x**1) * ((y_6)**56) + 
            L0x20019a0c_f * (x**2) * ((y_6)**56) + 
            L0x20019a0e_f * (x**3) * ((y_6)**56) + 
            L0x20019a10_f * (x**0) * ((y_6)**57) + 
            L0x20019a12_f * (x**1) * ((y_6)**57) + 
            L0x20019a14_f * (x**2) * ((y_6)**57) + 
            L0x20019a16_f * (x**3) * ((y_6)**57) + 
            L0x20019a18_f * (x**0) * ((y_6)**58) + 
            L0x20019a1a_f * (x**1) * ((y_6)**58) + 
            L0x20019a1c_f * (x**2) * ((y_6)**58) + 
            L0x20019a1e_f * (x**3) * ((y_6)**58) + 
            L0x20019a20_f * (x**0) * ((y_6)**59) + 
            L0x20019a22_f * (x**1) * ((y_6)**59) + 
            L0x20019a24_f * (x**2) * ((y_6)**59) + 
            L0x20019a26_f * (x**3) * ((y_6)**59) + 
            L0x20019a28_f * (x**0) * ((y_6)**60) + 
            L0x20019a2a_f * (x**1) * ((y_6)**60) + 
            L0x20019a2c_f * (x**2) * ((y_6)**60) + 
            L0x20019a2e_f * (x**3) * ((y_6)**60) + 
            L0x20019a30_f * (x**0) * ((y_6)**61) + 
            L0x20019a32_f * (x**1) * ((y_6)**61) + 
            L0x20019a34_f * (x**2) * ((y_6)**61) + 
            L0x20019a36_f * (x**3) * ((y_6)**61) + 
            L0x20019a38_f * (x**0) * ((y_6)**62) + 
            L0x20019a3a_f * (x**1) * ((y_6)**62) + 
            L0x20019a3c_f * (x**2) * ((y_6)**62) + 
            L0x20019a3e_f * (x**3) * ((y_6)**62) + 
            L0x20019a40_f * (x**0) * ((y_6)**63) + 
            L0x20019a42_f * (x**1) * ((y_6)**63) + 
            L0x20019a44_f * (x**2) * ((y_6)**63) + 
            L0x20019a46_f * (x**3) * ((y_6)**63)
          )
          [25570049, x**4 - y_0_25 * 710129, y_0_25 - 1],
    (* inp_poly_26 *)
    eqmod (2**32) * (inp_poly_26 * inp_poly_26)
          (
            L0x20019848_f * (x**0) * ((y_6)**0) + 
            L0x2001984a_f * (x**1) * ((y_6)**0) + 
            L0x2001984c_f * (x**2) * ((y_6)**0) + 
            L0x2001984e_f * (x**3) * ((y_6)**0) + 
            L0x20019850_f * (x**0) * ((y_6)**1) + 
            L0x20019852_f * (x**1) * ((y_6)**1) + 
            L0x20019854_f * (x**2) * ((y_6)**1) + 
            L0x20019856_f * (x**3) * ((y_6)**1) + 
            L0x20019858_f * (x**0) * ((y_6)**2) + 
            L0x2001985a_f * (x**1) * ((y_6)**2) + 
            L0x2001985c_f * (x**2) * ((y_6)**2) + 
            L0x2001985e_f * (x**3) * ((y_6)**2) + 
            L0x20019860_f * (x**0) * ((y_6)**3) + 
            L0x20019862_f * (x**1) * ((y_6)**3) + 
            L0x20019864_f * (x**2) * ((y_6)**3) + 
            L0x20019866_f * (x**3) * ((y_6)**3) + 
            L0x20019868_f * (x**0) * ((y_6)**4) + 
            L0x2001986a_f * (x**1) * ((y_6)**4) + 
            L0x2001986c_f * (x**2) * ((y_6)**4) + 
            L0x2001986e_f * (x**3) * ((y_6)**4) + 
            L0x20019870_f * (x**0) * ((y_6)**5) + 
            L0x20019872_f * (x**1) * ((y_6)**5) + 
            L0x20019874_f * (x**2) * ((y_6)**5) + 
            L0x20019876_f * (x**3) * ((y_6)**5) + 
            L0x20019878_f * (x**0) * ((y_6)**6) + 
            L0x2001987a_f * (x**1) * ((y_6)**6) + 
            L0x2001987c_f * (x**2) * ((y_6)**6) + 
            L0x2001987e_f * (x**3) * ((y_6)**6) + 
            L0x20019880_f * (x**0) * ((y_6)**7) + 
            L0x20019882_f * (x**1) * ((y_6)**7) + 
            L0x20019884_f * (x**2) * ((y_6)**7) + 
            L0x20019886_f * (x**3) * ((y_6)**7) + 
            L0x20019888_f * (x**0) * ((y_6)**8) + 
            L0x2001988a_f * (x**1) * ((y_6)**8) + 
            L0x2001988c_f * (x**2) * ((y_6)**8) + 
            L0x2001988e_f * (x**3) * ((y_6)**8) + 
            L0x20019890_f * (x**0) * ((y_6)**9) + 
            L0x20019892_f * (x**1) * ((y_6)**9) + 
            L0x20019894_f * (x**2) * ((y_6)**9) + 
            L0x20019896_f * (x**3) * ((y_6)**9) + 
            L0x20019898_f * (x**0) * ((y_6)**10) + 
            L0x2001989a_f * (x**1) * ((y_6)**10) + 
            L0x2001989c_f * (x**2) * ((y_6)**10) + 
            L0x2001989e_f * (x**3) * ((y_6)**10) + 
            L0x200198a0_f * (x**0) * ((y_6)**11) + 
            L0x200198a2_f * (x**1) * ((y_6)**11) + 
            L0x200198a4_f * (x**2) * ((y_6)**11) + 
            L0x200198a6_f * (x**3) * ((y_6)**11) + 
            L0x200198a8_f * (x**0) * ((y_6)**12) + 
            L0x200198aa_f * (x**1) * ((y_6)**12) + 
            L0x200198ac_f * (x**2) * ((y_6)**12) + 
            L0x200198ae_f * (x**3) * ((y_6)**12) + 
            L0x200198b0_f * (x**0) * ((y_6)**13) + 
            L0x200198b2_f * (x**1) * ((y_6)**13) + 
            L0x200198b4_f * (x**2) * ((y_6)**13) + 
            L0x200198b6_f * (x**3) * ((y_6)**13) + 
            L0x200198b8_f * (x**0) * ((y_6)**14) + 
            L0x200198ba_f * (x**1) * ((y_6)**14) + 
            L0x200198bc_f * (x**2) * ((y_6)**14) + 
            L0x200198be_f * (x**3) * ((y_6)**14) + 
            L0x200198c0_f * (x**0) * ((y_6)**15) + 
            L0x200198c2_f * (x**1) * ((y_6)**15) + 
            L0x200198c4_f * (x**2) * ((y_6)**15) + 
            L0x200198c6_f * (x**3) * ((y_6)**15) + 
            L0x200198c8_f * (x**0) * ((y_6)**16) + 
            L0x200198ca_f * (x**1) * ((y_6)**16) + 
            L0x200198cc_f * (x**2) * ((y_6)**16) + 
            L0x200198ce_f * (x**3) * ((y_6)**16) + 
            L0x200198d0_f * (x**0) * ((y_6)**17) + 
            L0x200198d2_f * (x**1) * ((y_6)**17) + 
            L0x200198d4_f * (x**2) * ((y_6)**17) + 
            L0x200198d6_f * (x**3) * ((y_6)**17) + 
            L0x200198d8_f * (x**0) * ((y_6)**18) + 
            L0x200198da_f * (x**1) * ((y_6)**18) + 
            L0x200198dc_f * (x**2) * ((y_6)**18) + 
            L0x200198de_f * (x**3) * ((y_6)**18) + 
            L0x200198e0_f * (x**0) * ((y_6)**19) + 
            L0x200198e2_f * (x**1) * ((y_6)**19) + 
            L0x200198e4_f * (x**2) * ((y_6)**19) + 
            L0x200198e6_f * (x**3) * ((y_6)**19) + 
            L0x200198e8_f * (x**0) * ((y_6)**20) + 
            L0x200198ea_f * (x**1) * ((y_6)**20) + 
            L0x200198ec_f * (x**2) * ((y_6)**20) + 
            L0x200198ee_f * (x**3) * ((y_6)**20) + 
            L0x200198f0_f * (x**0) * ((y_6)**21) + 
            L0x200198f2_f * (x**1) * ((y_6)**21) + 
            L0x200198f4_f * (x**2) * ((y_6)**21) + 
            L0x200198f6_f * (x**3) * ((y_6)**21) + 
            L0x200198f8_f * (x**0) * ((y_6)**22) + 
            L0x200198fa_f * (x**1) * ((y_6)**22) + 
            L0x200198fc_f * (x**2) * ((y_6)**22) + 
            L0x200198fe_f * (x**3) * ((y_6)**22) + 
            L0x20019900_f * (x**0) * ((y_6)**23) + 
            L0x20019902_f * (x**1) * ((y_6)**23) + 
            L0x20019904_f * (x**2) * ((y_6)**23) + 
            L0x20019906_f * (x**3) * ((y_6)**23) + 
            L0x20019908_f * (x**0) * ((y_6)**24) + 
            L0x2001990a_f * (x**1) * ((y_6)**24) + 
            L0x2001990c_f * (x**2) * ((y_6)**24) + 
            L0x2001990e_f * (x**3) * ((y_6)**24) + 
            L0x20019910_f * (x**0) * ((y_6)**25) + 
            L0x20019912_f * (x**1) * ((y_6)**25) + 
            L0x20019914_f * (x**2) * ((y_6)**25) + 
            L0x20019916_f * (x**3) * ((y_6)**25) + 
            L0x20019918_f * (x**0) * ((y_6)**26) + 
            L0x2001991a_f * (x**1) * ((y_6)**26) + 
            L0x2001991c_f * (x**2) * ((y_6)**26) + 
            L0x2001991e_f * (x**3) * ((y_6)**26) + 
            L0x20019920_f * (x**0) * ((y_6)**27) + 
            L0x20019922_f * (x**1) * ((y_6)**27) + 
            L0x20019924_f * (x**2) * ((y_6)**27) + 
            L0x20019926_f * (x**3) * ((y_6)**27) + 
            L0x20019928_f * (x**0) * ((y_6)**28) + 
            L0x2001992a_f * (x**1) * ((y_6)**28) + 
            L0x2001992c_f * (x**2) * ((y_6)**28) + 
            L0x2001992e_f * (x**3) * ((y_6)**28) + 
            L0x20019930_f * (x**0) * ((y_6)**29) + 
            L0x20019932_f * (x**1) * ((y_6)**29) + 
            L0x20019934_f * (x**2) * ((y_6)**29) + 
            L0x20019936_f * (x**3) * ((y_6)**29) + 
            L0x20019938_f * (x**0) * ((y_6)**30) + 
            L0x2001993a_f * (x**1) * ((y_6)**30) + 
            L0x2001993c_f * (x**2) * ((y_6)**30) + 
            L0x2001993e_f * (x**3) * ((y_6)**30) + 
            L0x20019940_f * (x**0) * ((y_6)**31) + 
            L0x20019942_f * (x**1) * ((y_6)**31) + 
            L0x20019944_f * (x**2) * ((y_6)**31) + 
            L0x20019946_f * (x**3) * ((y_6)**31) + 
            L0x20019948_f * (x**0) * ((y_6)**32) + 
            L0x2001994a_f * (x**1) * ((y_6)**32) + 
            L0x2001994c_f * (x**2) * ((y_6)**32) + 
            L0x2001994e_f * (x**3) * ((y_6)**32) + 
            L0x20019950_f * (x**0) * ((y_6)**33) + 
            L0x20019952_f * (x**1) * ((y_6)**33) + 
            L0x20019954_f * (x**2) * ((y_6)**33) + 
            L0x20019956_f * (x**3) * ((y_6)**33) + 
            L0x20019958_f * (x**0) * ((y_6)**34) + 
            L0x2001995a_f * (x**1) * ((y_6)**34) + 
            L0x2001995c_f * (x**2) * ((y_6)**34) + 
            L0x2001995e_f * (x**3) * ((y_6)**34) + 
            L0x20019960_f * (x**0) * ((y_6)**35) + 
            L0x20019962_f * (x**1) * ((y_6)**35) + 
            L0x20019964_f * (x**2) * ((y_6)**35) + 
            L0x20019966_f * (x**3) * ((y_6)**35) + 
            L0x20019968_f * (x**0) * ((y_6)**36) + 
            L0x2001996a_f * (x**1) * ((y_6)**36) + 
            L0x2001996c_f * (x**2) * ((y_6)**36) + 
            L0x2001996e_f * (x**3) * ((y_6)**36) + 
            L0x20019970_f * (x**0) * ((y_6)**37) + 
            L0x20019972_f * (x**1) * ((y_6)**37) + 
            L0x20019974_f * (x**2) * ((y_6)**37) + 
            L0x20019976_f * (x**3) * ((y_6)**37) + 
            L0x20019978_f * (x**0) * ((y_6)**38) + 
            L0x2001997a_f * (x**1) * ((y_6)**38) + 
            L0x2001997c_f * (x**2) * ((y_6)**38) + 
            L0x2001997e_f * (x**3) * ((y_6)**38) + 
            L0x20019980_f * (x**0) * ((y_6)**39) + 
            L0x20019982_f * (x**1) * ((y_6)**39) + 
            L0x20019984_f * (x**2) * ((y_6)**39) + 
            L0x20019986_f * (x**3) * ((y_6)**39) + 
            L0x20019988_f * (x**0) * ((y_6)**40) + 
            L0x2001998a_f * (x**1) * ((y_6)**40) + 
            L0x2001998c_f * (x**2) * ((y_6)**40) + 
            L0x2001998e_f * (x**3) * ((y_6)**40) + 
            L0x20019990_f * (x**0) * ((y_6)**41) + 
            L0x20019992_f * (x**1) * ((y_6)**41) + 
            L0x20019994_f * (x**2) * ((y_6)**41) + 
            L0x20019996_f * (x**3) * ((y_6)**41) + 
            L0x20019998_f * (x**0) * ((y_6)**42) + 
            L0x2001999a_f * (x**1) * ((y_6)**42) + 
            L0x2001999c_f * (x**2) * ((y_6)**42) + 
            L0x2001999e_f * (x**3) * ((y_6)**42) + 
            L0x200199a0_f * (x**0) * ((y_6)**43) + 
            L0x200199a2_f * (x**1) * ((y_6)**43) + 
            L0x200199a4_f * (x**2) * ((y_6)**43) + 
            L0x200199a6_f * (x**3) * ((y_6)**43) + 
            L0x200199a8_f * (x**0) * ((y_6)**44) + 
            L0x200199aa_f * (x**1) * ((y_6)**44) + 
            L0x200199ac_f * (x**2) * ((y_6)**44) + 
            L0x200199ae_f * (x**3) * ((y_6)**44) + 
            L0x200199b0_f * (x**0) * ((y_6)**45) + 
            L0x200199b2_f * (x**1) * ((y_6)**45) + 
            L0x200199b4_f * (x**2) * ((y_6)**45) + 
            L0x200199b6_f * (x**3) * ((y_6)**45) + 
            L0x200199b8_f * (x**0) * ((y_6)**46) + 
            L0x200199ba_f * (x**1) * ((y_6)**46) + 
            L0x200199bc_f * (x**2) * ((y_6)**46) + 
            L0x200199be_f * (x**3) * ((y_6)**46) + 
            L0x200199c0_f * (x**0) * ((y_6)**47) + 
            L0x200199c2_f * (x**1) * ((y_6)**47) + 
            L0x200199c4_f * (x**2) * ((y_6)**47) + 
            L0x200199c6_f * (x**3) * ((y_6)**47) + 
            L0x200199c8_f * (x**0) * ((y_6)**48) + 
            L0x200199ca_f * (x**1) * ((y_6)**48) + 
            L0x200199cc_f * (x**2) * ((y_6)**48) + 
            L0x200199ce_f * (x**3) * ((y_6)**48) + 
            L0x200199d0_f * (x**0) * ((y_6)**49) + 
            L0x200199d2_f * (x**1) * ((y_6)**49) + 
            L0x200199d4_f * (x**2) * ((y_6)**49) + 
            L0x200199d6_f * (x**3) * ((y_6)**49) + 
            L0x200199d8_f * (x**0) * ((y_6)**50) + 
            L0x200199da_f * (x**1) * ((y_6)**50) + 
            L0x200199dc_f * (x**2) * ((y_6)**50) + 
            L0x200199de_f * (x**3) * ((y_6)**50) + 
            L0x200199e0_f * (x**0) * ((y_6)**51) + 
            L0x200199e2_f * (x**1) * ((y_6)**51) + 
            L0x200199e4_f * (x**2) * ((y_6)**51) + 
            L0x200199e6_f * (x**3) * ((y_6)**51) + 
            L0x200199e8_f * (x**0) * ((y_6)**52) + 
            L0x200199ea_f * (x**1) * ((y_6)**52) + 
            L0x200199ec_f * (x**2) * ((y_6)**52) + 
            L0x200199ee_f * (x**3) * ((y_6)**52) + 
            L0x200199f0_f * (x**0) * ((y_6)**53) + 
            L0x200199f2_f * (x**1) * ((y_6)**53) + 
            L0x200199f4_f * (x**2) * ((y_6)**53) + 
            L0x200199f6_f * (x**3) * ((y_6)**53) + 
            L0x200199f8_f * (x**0) * ((y_6)**54) + 
            L0x200199fa_f * (x**1) * ((y_6)**54) + 
            L0x200199fc_f * (x**2) * ((y_6)**54) + 
            L0x200199fe_f * (x**3) * ((y_6)**54) + 
            L0x20019a00_f * (x**0) * ((y_6)**55) + 
            L0x20019a02_f * (x**1) * ((y_6)**55) + 
            L0x20019a04_f * (x**2) * ((y_6)**55) + 
            L0x20019a06_f * (x**3) * ((y_6)**55) + 
            L0x20019a08_f * (x**0) * ((y_6)**56) + 
            L0x20019a0a_f * (x**1) * ((y_6)**56) + 
            L0x20019a0c_f * (x**2) * ((y_6)**56) + 
            L0x20019a0e_f * (x**3) * ((y_6)**56) + 
            L0x20019a10_f * (x**0) * ((y_6)**57) + 
            L0x20019a12_f * (x**1) * ((y_6)**57) + 
            L0x20019a14_f * (x**2) * ((y_6)**57) + 
            L0x20019a16_f * (x**3) * ((y_6)**57) + 
            L0x20019a18_f * (x**0) * ((y_6)**58) + 
            L0x20019a1a_f * (x**1) * ((y_6)**58) + 
            L0x20019a1c_f * (x**2) * ((y_6)**58) + 
            L0x20019a1e_f * (x**3) * ((y_6)**58) + 
            L0x20019a20_f * (x**0) * ((y_6)**59) + 
            L0x20019a22_f * (x**1) * ((y_6)**59) + 
            L0x20019a24_f * (x**2) * ((y_6)**59) + 
            L0x20019a26_f * (x**3) * ((y_6)**59) + 
            L0x20019a28_f * (x**0) * ((y_6)**60) + 
            L0x20019a2a_f * (x**1) * ((y_6)**60) + 
            L0x20019a2c_f * (x**2) * ((y_6)**60) + 
            L0x20019a2e_f * (x**3) * ((y_6)**60) + 
            L0x20019a30_f * (x**0) * ((y_6)**61) + 
            L0x20019a32_f * (x**1) * ((y_6)**61) + 
            L0x20019a34_f * (x**2) * ((y_6)**61) + 
            L0x20019a36_f * (x**3) * ((y_6)**61) + 
            L0x20019a38_f * (x**0) * ((y_6)**62) + 
            L0x20019a3a_f * (x**1) * ((y_6)**62) + 
            L0x20019a3c_f * (x**2) * ((y_6)**62) + 
            L0x20019a3e_f * (x**3) * ((y_6)**62) + 
            L0x20019a40_f * (x**0) * ((y_6)**63) + 
            L0x20019a42_f * (x**1) * ((y_6)**63) + 
            L0x20019a44_f * (x**2) * ((y_6)**63) + 
            L0x20019a46_f * (x**3) * ((y_6)**63)
          )
          [25570049, x**4 - y_0_26 * 4519508, y_0_26 - 1],
    (* inp_poly_27 *)
    eqmod (2**32) * (inp_poly_27 * inp_poly_27)
          (
            L0x20019848_f * (x**0) * ((y_6)**0) + 
            L0x2001984a_f * (x**1) * ((y_6)**0) + 
            L0x2001984c_f * (x**2) * ((y_6)**0) + 
            L0x2001984e_f * (x**3) * ((y_6)**0) + 
            L0x20019850_f * (x**0) * ((y_6)**1) + 
            L0x20019852_f * (x**1) * ((y_6)**1) + 
            L0x20019854_f * (x**2) * ((y_6)**1) + 
            L0x20019856_f * (x**3) * ((y_6)**1) + 
            L0x20019858_f * (x**0) * ((y_6)**2) + 
            L0x2001985a_f * (x**1) * ((y_6)**2) + 
            L0x2001985c_f * (x**2) * ((y_6)**2) + 
            L0x2001985e_f * (x**3) * ((y_6)**2) + 
            L0x20019860_f * (x**0) * ((y_6)**3) + 
            L0x20019862_f * (x**1) * ((y_6)**3) + 
            L0x20019864_f * (x**2) * ((y_6)**3) + 
            L0x20019866_f * (x**3) * ((y_6)**3) + 
            L0x20019868_f * (x**0) * ((y_6)**4) + 
            L0x2001986a_f * (x**1) * ((y_6)**4) + 
            L0x2001986c_f * (x**2) * ((y_6)**4) + 
            L0x2001986e_f * (x**3) * ((y_6)**4) + 
            L0x20019870_f * (x**0) * ((y_6)**5) + 
            L0x20019872_f * (x**1) * ((y_6)**5) + 
            L0x20019874_f * (x**2) * ((y_6)**5) + 
            L0x20019876_f * (x**3) * ((y_6)**5) + 
            L0x20019878_f * (x**0) * ((y_6)**6) + 
            L0x2001987a_f * (x**1) * ((y_6)**6) + 
            L0x2001987c_f * (x**2) * ((y_6)**6) + 
            L0x2001987e_f * (x**3) * ((y_6)**6) + 
            L0x20019880_f * (x**0) * ((y_6)**7) + 
            L0x20019882_f * (x**1) * ((y_6)**7) + 
            L0x20019884_f * (x**2) * ((y_6)**7) + 
            L0x20019886_f * (x**3) * ((y_6)**7) + 
            L0x20019888_f * (x**0) * ((y_6)**8) + 
            L0x2001988a_f * (x**1) * ((y_6)**8) + 
            L0x2001988c_f * (x**2) * ((y_6)**8) + 
            L0x2001988e_f * (x**3) * ((y_6)**8) + 
            L0x20019890_f * (x**0) * ((y_6)**9) + 
            L0x20019892_f * (x**1) * ((y_6)**9) + 
            L0x20019894_f * (x**2) * ((y_6)**9) + 
            L0x20019896_f * (x**3) * ((y_6)**9) + 
            L0x20019898_f * (x**0) * ((y_6)**10) + 
            L0x2001989a_f * (x**1) * ((y_6)**10) + 
            L0x2001989c_f * (x**2) * ((y_6)**10) + 
            L0x2001989e_f * (x**3) * ((y_6)**10) + 
            L0x200198a0_f * (x**0) * ((y_6)**11) + 
            L0x200198a2_f * (x**1) * ((y_6)**11) + 
            L0x200198a4_f * (x**2) * ((y_6)**11) + 
            L0x200198a6_f * (x**3) * ((y_6)**11) + 
            L0x200198a8_f * (x**0) * ((y_6)**12) + 
            L0x200198aa_f * (x**1) * ((y_6)**12) + 
            L0x200198ac_f * (x**2) * ((y_6)**12) + 
            L0x200198ae_f * (x**3) * ((y_6)**12) + 
            L0x200198b0_f * (x**0) * ((y_6)**13) + 
            L0x200198b2_f * (x**1) * ((y_6)**13) + 
            L0x200198b4_f * (x**2) * ((y_6)**13) + 
            L0x200198b6_f * (x**3) * ((y_6)**13) + 
            L0x200198b8_f * (x**0) * ((y_6)**14) + 
            L0x200198ba_f * (x**1) * ((y_6)**14) + 
            L0x200198bc_f * (x**2) * ((y_6)**14) + 
            L0x200198be_f * (x**3) * ((y_6)**14) + 
            L0x200198c0_f * (x**0) * ((y_6)**15) + 
            L0x200198c2_f * (x**1) * ((y_6)**15) + 
            L0x200198c4_f * (x**2) * ((y_6)**15) + 
            L0x200198c6_f * (x**3) * ((y_6)**15) + 
            L0x200198c8_f * (x**0) * ((y_6)**16) + 
            L0x200198ca_f * (x**1) * ((y_6)**16) + 
            L0x200198cc_f * (x**2) * ((y_6)**16) + 
            L0x200198ce_f * (x**3) * ((y_6)**16) + 
            L0x200198d0_f * (x**0) * ((y_6)**17) + 
            L0x200198d2_f * (x**1) * ((y_6)**17) + 
            L0x200198d4_f * (x**2) * ((y_6)**17) + 
            L0x200198d6_f * (x**3) * ((y_6)**17) + 
            L0x200198d8_f * (x**0) * ((y_6)**18) + 
            L0x200198da_f * (x**1) * ((y_6)**18) + 
            L0x200198dc_f * (x**2) * ((y_6)**18) + 
            L0x200198de_f * (x**3) * ((y_6)**18) + 
            L0x200198e0_f * (x**0) * ((y_6)**19) + 
            L0x200198e2_f * (x**1) * ((y_6)**19) + 
            L0x200198e4_f * (x**2) * ((y_6)**19) + 
            L0x200198e6_f * (x**3) * ((y_6)**19) + 
            L0x200198e8_f * (x**0) * ((y_6)**20) + 
            L0x200198ea_f * (x**1) * ((y_6)**20) + 
            L0x200198ec_f * (x**2) * ((y_6)**20) + 
            L0x200198ee_f * (x**3) * ((y_6)**20) + 
            L0x200198f0_f * (x**0) * ((y_6)**21) + 
            L0x200198f2_f * (x**1) * ((y_6)**21) + 
            L0x200198f4_f * (x**2) * ((y_6)**21) + 
            L0x200198f6_f * (x**3) * ((y_6)**21) + 
            L0x200198f8_f * (x**0) * ((y_6)**22) + 
            L0x200198fa_f * (x**1) * ((y_6)**22) + 
            L0x200198fc_f * (x**2) * ((y_6)**22) + 
            L0x200198fe_f * (x**3) * ((y_6)**22) + 
            L0x20019900_f * (x**0) * ((y_6)**23) + 
            L0x20019902_f * (x**1) * ((y_6)**23) + 
            L0x20019904_f * (x**2) * ((y_6)**23) + 
            L0x20019906_f * (x**3) * ((y_6)**23) + 
            L0x20019908_f * (x**0) * ((y_6)**24) + 
            L0x2001990a_f * (x**1) * ((y_6)**24) + 
            L0x2001990c_f * (x**2) * ((y_6)**24) + 
            L0x2001990e_f * (x**3) * ((y_6)**24) + 
            L0x20019910_f * (x**0) * ((y_6)**25) + 
            L0x20019912_f * (x**1) * ((y_6)**25) + 
            L0x20019914_f * (x**2) * ((y_6)**25) + 
            L0x20019916_f * (x**3) * ((y_6)**25) + 
            L0x20019918_f * (x**0) * ((y_6)**26) + 
            L0x2001991a_f * (x**1) * ((y_6)**26) + 
            L0x2001991c_f * (x**2) * ((y_6)**26) + 
            L0x2001991e_f * (x**3) * ((y_6)**26) + 
            L0x20019920_f * (x**0) * ((y_6)**27) + 
            L0x20019922_f * (x**1) * ((y_6)**27) + 
            L0x20019924_f * (x**2) * ((y_6)**27) + 
            L0x20019926_f * (x**3) * ((y_6)**27) + 
            L0x20019928_f * (x**0) * ((y_6)**28) + 
            L0x2001992a_f * (x**1) * ((y_6)**28) + 
            L0x2001992c_f * (x**2) * ((y_6)**28) + 
            L0x2001992e_f * (x**3) * ((y_6)**28) + 
            L0x20019930_f * (x**0) * ((y_6)**29) + 
            L0x20019932_f * (x**1) * ((y_6)**29) + 
            L0x20019934_f * (x**2) * ((y_6)**29) + 
            L0x20019936_f * (x**3) * ((y_6)**29) + 
            L0x20019938_f * (x**0) * ((y_6)**30) + 
            L0x2001993a_f * (x**1) * ((y_6)**30) + 
            L0x2001993c_f * (x**2) * ((y_6)**30) + 
            L0x2001993e_f * (x**3) * ((y_6)**30) + 
            L0x20019940_f * (x**0) * ((y_6)**31) + 
            L0x20019942_f * (x**1) * ((y_6)**31) + 
            L0x20019944_f * (x**2) * ((y_6)**31) + 
            L0x20019946_f * (x**3) * ((y_6)**31) + 
            L0x20019948_f * (x**0) * ((y_6)**32) + 
            L0x2001994a_f * (x**1) * ((y_6)**32) + 
            L0x2001994c_f * (x**2) * ((y_6)**32) + 
            L0x2001994e_f * (x**3) * ((y_6)**32) + 
            L0x20019950_f * (x**0) * ((y_6)**33) + 
            L0x20019952_f * (x**1) * ((y_6)**33) + 
            L0x20019954_f * (x**2) * ((y_6)**33) + 
            L0x20019956_f * (x**3) * ((y_6)**33) + 
            L0x20019958_f * (x**0) * ((y_6)**34) + 
            L0x2001995a_f * (x**1) * ((y_6)**34) + 
            L0x2001995c_f * (x**2) * ((y_6)**34) + 
            L0x2001995e_f * (x**3) * ((y_6)**34) + 
            L0x20019960_f * (x**0) * ((y_6)**35) + 
            L0x20019962_f * (x**1) * ((y_6)**35) + 
            L0x20019964_f * (x**2) * ((y_6)**35) + 
            L0x20019966_f * (x**3) * ((y_6)**35) + 
            L0x20019968_f * (x**0) * ((y_6)**36) + 
            L0x2001996a_f * (x**1) * ((y_6)**36) + 
            L0x2001996c_f * (x**2) * ((y_6)**36) + 
            L0x2001996e_f * (x**3) * ((y_6)**36) + 
            L0x20019970_f * (x**0) * ((y_6)**37) + 
            L0x20019972_f * (x**1) * ((y_6)**37) + 
            L0x20019974_f * (x**2) * ((y_6)**37) + 
            L0x20019976_f * (x**3) * ((y_6)**37) + 
            L0x20019978_f * (x**0) * ((y_6)**38) + 
            L0x2001997a_f * (x**1) * ((y_6)**38) + 
            L0x2001997c_f * (x**2) * ((y_6)**38) + 
            L0x2001997e_f * (x**3) * ((y_6)**38) + 
            L0x20019980_f * (x**0) * ((y_6)**39) + 
            L0x20019982_f * (x**1) * ((y_6)**39) + 
            L0x20019984_f * (x**2) * ((y_6)**39) + 
            L0x20019986_f * (x**3) * ((y_6)**39) + 
            L0x20019988_f * (x**0) * ((y_6)**40) + 
            L0x2001998a_f * (x**1) * ((y_6)**40) + 
            L0x2001998c_f * (x**2) * ((y_6)**40) + 
            L0x2001998e_f * (x**3) * ((y_6)**40) + 
            L0x20019990_f * (x**0) * ((y_6)**41) + 
            L0x20019992_f * (x**1) * ((y_6)**41) + 
            L0x20019994_f * (x**2) * ((y_6)**41) + 
            L0x20019996_f * (x**3) * ((y_6)**41) + 
            L0x20019998_f * (x**0) * ((y_6)**42) + 
            L0x2001999a_f * (x**1) * ((y_6)**42) + 
            L0x2001999c_f * (x**2) * ((y_6)**42) + 
            L0x2001999e_f * (x**3) * ((y_6)**42) + 
            L0x200199a0_f * (x**0) * ((y_6)**43) + 
            L0x200199a2_f * (x**1) * ((y_6)**43) + 
            L0x200199a4_f * (x**2) * ((y_6)**43) + 
            L0x200199a6_f * (x**3) * ((y_6)**43) + 
            L0x200199a8_f * (x**0) * ((y_6)**44) + 
            L0x200199aa_f * (x**1) * ((y_6)**44) + 
            L0x200199ac_f * (x**2) * ((y_6)**44) + 
            L0x200199ae_f * (x**3) * ((y_6)**44) + 
            L0x200199b0_f * (x**0) * ((y_6)**45) + 
            L0x200199b2_f * (x**1) * ((y_6)**45) + 
            L0x200199b4_f * (x**2) * ((y_6)**45) + 
            L0x200199b6_f * (x**3) * ((y_6)**45) + 
            L0x200199b8_f * (x**0) * ((y_6)**46) + 
            L0x200199ba_f * (x**1) * ((y_6)**46) + 
            L0x200199bc_f * (x**2) * ((y_6)**46) + 
            L0x200199be_f * (x**3) * ((y_6)**46) + 
            L0x200199c0_f * (x**0) * ((y_6)**47) + 
            L0x200199c2_f * (x**1) * ((y_6)**47) + 
            L0x200199c4_f * (x**2) * ((y_6)**47) + 
            L0x200199c6_f * (x**3) * ((y_6)**47) + 
            L0x200199c8_f * (x**0) * ((y_6)**48) + 
            L0x200199ca_f * (x**1) * ((y_6)**48) + 
            L0x200199cc_f * (x**2) * ((y_6)**48) + 
            L0x200199ce_f * (x**3) * ((y_6)**48) + 
            L0x200199d0_f * (x**0) * ((y_6)**49) + 
            L0x200199d2_f * (x**1) * ((y_6)**49) + 
            L0x200199d4_f * (x**2) * ((y_6)**49) + 
            L0x200199d6_f * (x**3) * ((y_6)**49) + 
            L0x200199d8_f * (x**0) * ((y_6)**50) + 
            L0x200199da_f * (x**1) * ((y_6)**50) + 
            L0x200199dc_f * (x**2) * ((y_6)**50) + 
            L0x200199de_f * (x**3) * ((y_6)**50) + 
            L0x200199e0_f * (x**0) * ((y_6)**51) + 
            L0x200199e2_f * (x**1) * ((y_6)**51) + 
            L0x200199e4_f * (x**2) * ((y_6)**51) + 
            L0x200199e6_f * (x**3) * ((y_6)**51) + 
            L0x200199e8_f * (x**0) * ((y_6)**52) + 
            L0x200199ea_f * (x**1) * ((y_6)**52) + 
            L0x200199ec_f * (x**2) * ((y_6)**52) + 
            L0x200199ee_f * (x**3) * ((y_6)**52) + 
            L0x200199f0_f * (x**0) * ((y_6)**53) + 
            L0x200199f2_f * (x**1) * ((y_6)**53) + 
            L0x200199f4_f * (x**2) * ((y_6)**53) + 
            L0x200199f6_f * (x**3) * ((y_6)**53) + 
            L0x200199f8_f * (x**0) * ((y_6)**54) + 
            L0x200199fa_f * (x**1) * ((y_6)**54) + 
            L0x200199fc_f * (x**2) * ((y_6)**54) + 
            L0x200199fe_f * (x**3) * ((y_6)**54) + 
            L0x20019a00_f * (x**0) * ((y_6)**55) + 
            L0x20019a02_f * (x**1) * ((y_6)**55) + 
            L0x20019a04_f * (x**2) * ((y_6)**55) + 
            L0x20019a06_f * (x**3) * ((y_6)**55) + 
            L0x20019a08_f * (x**0) * ((y_6)**56) + 
            L0x20019a0a_f * (x**1) * ((y_6)**56) + 
            L0x20019a0c_f * (x**2) * ((y_6)**56) + 
            L0x20019a0e_f * (x**3) * ((y_6)**56) + 
            L0x20019a10_f * (x**0) * ((y_6)**57) + 
            L0x20019a12_f * (x**1) * ((y_6)**57) + 
            L0x20019a14_f * (x**2) * ((y_6)**57) + 
            L0x20019a16_f * (x**3) * ((y_6)**57) + 
            L0x20019a18_f * (x**0) * ((y_6)**58) + 
            L0x20019a1a_f * (x**1) * ((y_6)**58) + 
            L0x20019a1c_f * (x**2) * ((y_6)**58) + 
            L0x20019a1e_f * (x**3) * ((y_6)**58) + 
            L0x20019a20_f * (x**0) * ((y_6)**59) + 
            L0x20019a22_f * (x**1) * ((y_6)**59) + 
            L0x20019a24_f * (x**2) * ((y_6)**59) + 
            L0x20019a26_f * (x**3) * ((y_6)**59) + 
            L0x20019a28_f * (x**0) * ((y_6)**60) + 
            L0x20019a2a_f * (x**1) * ((y_6)**60) + 
            L0x20019a2c_f * (x**2) * ((y_6)**60) + 
            L0x20019a2e_f * (x**3) * ((y_6)**60) + 
            L0x20019a30_f * (x**0) * ((y_6)**61) + 
            L0x20019a32_f * (x**1) * ((y_6)**61) + 
            L0x20019a34_f * (x**2) * ((y_6)**61) + 
            L0x20019a36_f * (x**3) * ((y_6)**61) + 
            L0x20019a38_f * (x**0) * ((y_6)**62) + 
            L0x20019a3a_f * (x**1) * ((y_6)**62) + 
            L0x20019a3c_f * (x**2) * ((y_6)**62) + 
            L0x20019a3e_f * (x**3) * ((y_6)**62) + 
            L0x20019a40_f * (x**0) * ((y_6)**63) + 
            L0x20019a42_f * (x**1) * ((y_6)**63) + 
            L0x20019a44_f * (x**2) * ((y_6)**63) + 
            L0x20019a46_f * (x**3) * ((y_6)**63)
          )
          [25570049, x**4 - y_0_27 * 21050541, y_0_27 - 1],
    (* inp_poly_28 *)
    eqmod (2**32) * (inp_poly_28 * inp_poly_28)
          (
            L0x20019848_f * (x**0) * ((y_6)**0) + 
            L0x2001984a_f * (x**1) * ((y_6)**0) + 
            L0x2001984c_f * (x**2) * ((y_6)**0) + 
            L0x2001984e_f * (x**3) * ((y_6)**0) + 
            L0x20019850_f * (x**0) * ((y_6)**1) + 
            L0x20019852_f * (x**1) * ((y_6)**1) + 
            L0x20019854_f * (x**2) * ((y_6)**1) + 
            L0x20019856_f * (x**3) * ((y_6)**1) + 
            L0x20019858_f * (x**0) * ((y_6)**2) + 
            L0x2001985a_f * (x**1) * ((y_6)**2) + 
            L0x2001985c_f * (x**2) * ((y_6)**2) + 
            L0x2001985e_f * (x**3) * ((y_6)**2) + 
            L0x20019860_f * (x**0) * ((y_6)**3) + 
            L0x20019862_f * (x**1) * ((y_6)**3) + 
            L0x20019864_f * (x**2) * ((y_6)**3) + 
            L0x20019866_f * (x**3) * ((y_6)**3) + 
            L0x20019868_f * (x**0) * ((y_6)**4) + 
            L0x2001986a_f * (x**1) * ((y_6)**4) + 
            L0x2001986c_f * (x**2) * ((y_6)**4) + 
            L0x2001986e_f * (x**3) * ((y_6)**4) + 
            L0x20019870_f * (x**0) * ((y_6)**5) + 
            L0x20019872_f * (x**1) * ((y_6)**5) + 
            L0x20019874_f * (x**2) * ((y_6)**5) + 
            L0x20019876_f * (x**3) * ((y_6)**5) + 
            L0x20019878_f * (x**0) * ((y_6)**6) + 
            L0x2001987a_f * (x**1) * ((y_6)**6) + 
            L0x2001987c_f * (x**2) * ((y_6)**6) + 
            L0x2001987e_f * (x**3) * ((y_6)**6) + 
            L0x20019880_f * (x**0) * ((y_6)**7) + 
            L0x20019882_f * (x**1) * ((y_6)**7) + 
            L0x20019884_f * (x**2) * ((y_6)**7) + 
            L0x20019886_f * (x**3) * ((y_6)**7) + 
            L0x20019888_f * (x**0) * ((y_6)**8) + 
            L0x2001988a_f * (x**1) * ((y_6)**8) + 
            L0x2001988c_f * (x**2) * ((y_6)**8) + 
            L0x2001988e_f * (x**3) * ((y_6)**8) + 
            L0x20019890_f * (x**0) * ((y_6)**9) + 
            L0x20019892_f * (x**1) * ((y_6)**9) + 
            L0x20019894_f * (x**2) * ((y_6)**9) + 
            L0x20019896_f * (x**3) * ((y_6)**9) + 
            L0x20019898_f * (x**0) * ((y_6)**10) + 
            L0x2001989a_f * (x**1) * ((y_6)**10) + 
            L0x2001989c_f * (x**2) * ((y_6)**10) + 
            L0x2001989e_f * (x**3) * ((y_6)**10) + 
            L0x200198a0_f * (x**0) * ((y_6)**11) + 
            L0x200198a2_f * (x**1) * ((y_6)**11) + 
            L0x200198a4_f * (x**2) * ((y_6)**11) + 
            L0x200198a6_f * (x**3) * ((y_6)**11) + 
            L0x200198a8_f * (x**0) * ((y_6)**12) + 
            L0x200198aa_f * (x**1) * ((y_6)**12) + 
            L0x200198ac_f * (x**2) * ((y_6)**12) + 
            L0x200198ae_f * (x**3) * ((y_6)**12) + 
            L0x200198b0_f * (x**0) * ((y_6)**13) + 
            L0x200198b2_f * (x**1) * ((y_6)**13) + 
            L0x200198b4_f * (x**2) * ((y_6)**13) + 
            L0x200198b6_f * (x**3) * ((y_6)**13) + 
            L0x200198b8_f * (x**0) * ((y_6)**14) + 
            L0x200198ba_f * (x**1) * ((y_6)**14) + 
            L0x200198bc_f * (x**2) * ((y_6)**14) + 
            L0x200198be_f * (x**3) * ((y_6)**14) + 
            L0x200198c0_f * (x**0) * ((y_6)**15) + 
            L0x200198c2_f * (x**1) * ((y_6)**15) + 
            L0x200198c4_f * (x**2) * ((y_6)**15) + 
            L0x200198c6_f * (x**3) * ((y_6)**15) + 
            L0x200198c8_f * (x**0) * ((y_6)**16) + 
            L0x200198ca_f * (x**1) * ((y_6)**16) + 
            L0x200198cc_f * (x**2) * ((y_6)**16) + 
            L0x200198ce_f * (x**3) * ((y_6)**16) + 
            L0x200198d0_f * (x**0) * ((y_6)**17) + 
            L0x200198d2_f * (x**1) * ((y_6)**17) + 
            L0x200198d4_f * (x**2) * ((y_6)**17) + 
            L0x200198d6_f * (x**3) * ((y_6)**17) + 
            L0x200198d8_f * (x**0) * ((y_6)**18) + 
            L0x200198da_f * (x**1) * ((y_6)**18) + 
            L0x200198dc_f * (x**2) * ((y_6)**18) + 
            L0x200198de_f * (x**3) * ((y_6)**18) + 
            L0x200198e0_f * (x**0) * ((y_6)**19) + 
            L0x200198e2_f * (x**1) * ((y_6)**19) + 
            L0x200198e4_f * (x**2) * ((y_6)**19) + 
            L0x200198e6_f * (x**3) * ((y_6)**19) + 
            L0x200198e8_f * (x**0) * ((y_6)**20) + 
            L0x200198ea_f * (x**1) * ((y_6)**20) + 
            L0x200198ec_f * (x**2) * ((y_6)**20) + 
            L0x200198ee_f * (x**3) * ((y_6)**20) + 
            L0x200198f0_f * (x**0) * ((y_6)**21) + 
            L0x200198f2_f * (x**1) * ((y_6)**21) + 
            L0x200198f4_f * (x**2) * ((y_6)**21) + 
            L0x200198f6_f * (x**3) * ((y_6)**21) + 
            L0x200198f8_f * (x**0) * ((y_6)**22) + 
            L0x200198fa_f * (x**1) * ((y_6)**22) + 
            L0x200198fc_f * (x**2) * ((y_6)**22) + 
            L0x200198fe_f * (x**3) * ((y_6)**22) + 
            L0x20019900_f * (x**0) * ((y_6)**23) + 
            L0x20019902_f * (x**1) * ((y_6)**23) + 
            L0x20019904_f * (x**2) * ((y_6)**23) + 
            L0x20019906_f * (x**3) * ((y_6)**23) + 
            L0x20019908_f * (x**0) * ((y_6)**24) + 
            L0x2001990a_f * (x**1) * ((y_6)**24) + 
            L0x2001990c_f * (x**2) * ((y_6)**24) + 
            L0x2001990e_f * (x**3) * ((y_6)**24) + 
            L0x20019910_f * (x**0) * ((y_6)**25) + 
            L0x20019912_f * (x**1) * ((y_6)**25) + 
            L0x20019914_f * (x**2) * ((y_6)**25) + 
            L0x20019916_f * (x**3) * ((y_6)**25) + 
            L0x20019918_f * (x**0) * ((y_6)**26) + 
            L0x2001991a_f * (x**1) * ((y_6)**26) + 
            L0x2001991c_f * (x**2) * ((y_6)**26) + 
            L0x2001991e_f * (x**3) * ((y_6)**26) + 
            L0x20019920_f * (x**0) * ((y_6)**27) + 
            L0x20019922_f * (x**1) * ((y_6)**27) + 
            L0x20019924_f * (x**2) * ((y_6)**27) + 
            L0x20019926_f * (x**3) * ((y_6)**27) + 
            L0x20019928_f * (x**0) * ((y_6)**28) + 
            L0x2001992a_f * (x**1) * ((y_6)**28) + 
            L0x2001992c_f * (x**2) * ((y_6)**28) + 
            L0x2001992e_f * (x**3) * ((y_6)**28) + 
            L0x20019930_f * (x**0) * ((y_6)**29) + 
            L0x20019932_f * (x**1) * ((y_6)**29) + 
            L0x20019934_f * (x**2) * ((y_6)**29) + 
            L0x20019936_f * (x**3) * ((y_6)**29) + 
            L0x20019938_f * (x**0) * ((y_6)**30) + 
            L0x2001993a_f * (x**1) * ((y_6)**30) + 
            L0x2001993c_f * (x**2) * ((y_6)**30) + 
            L0x2001993e_f * (x**3) * ((y_6)**30) + 
            L0x20019940_f * (x**0) * ((y_6)**31) + 
            L0x20019942_f * (x**1) * ((y_6)**31) + 
            L0x20019944_f * (x**2) * ((y_6)**31) + 
            L0x20019946_f * (x**3) * ((y_6)**31) + 
            L0x20019948_f * (x**0) * ((y_6)**32) + 
            L0x2001994a_f * (x**1) * ((y_6)**32) + 
            L0x2001994c_f * (x**2) * ((y_6)**32) + 
            L0x2001994e_f * (x**3) * ((y_6)**32) + 
            L0x20019950_f * (x**0) * ((y_6)**33) + 
            L0x20019952_f * (x**1) * ((y_6)**33) + 
            L0x20019954_f * (x**2) * ((y_6)**33) + 
            L0x20019956_f * (x**3) * ((y_6)**33) + 
            L0x20019958_f * (x**0) * ((y_6)**34) + 
            L0x2001995a_f * (x**1) * ((y_6)**34) + 
            L0x2001995c_f * (x**2) * ((y_6)**34) + 
            L0x2001995e_f * (x**3) * ((y_6)**34) + 
            L0x20019960_f * (x**0) * ((y_6)**35) + 
            L0x20019962_f * (x**1) * ((y_6)**35) + 
            L0x20019964_f * (x**2) * ((y_6)**35) + 
            L0x20019966_f * (x**3) * ((y_6)**35) + 
            L0x20019968_f * (x**0) * ((y_6)**36) + 
            L0x2001996a_f * (x**1) * ((y_6)**36) + 
            L0x2001996c_f * (x**2) * ((y_6)**36) + 
            L0x2001996e_f * (x**3) * ((y_6)**36) + 
            L0x20019970_f * (x**0) * ((y_6)**37) + 
            L0x20019972_f * (x**1) * ((y_6)**37) + 
            L0x20019974_f * (x**2) * ((y_6)**37) + 
            L0x20019976_f * (x**3) * ((y_6)**37) + 
            L0x20019978_f * (x**0) * ((y_6)**38) + 
            L0x2001997a_f * (x**1) * ((y_6)**38) + 
            L0x2001997c_f * (x**2) * ((y_6)**38) + 
            L0x2001997e_f * (x**3) * ((y_6)**38) + 
            L0x20019980_f * (x**0) * ((y_6)**39) + 
            L0x20019982_f * (x**1) * ((y_6)**39) + 
            L0x20019984_f * (x**2) * ((y_6)**39) + 
            L0x20019986_f * (x**3) * ((y_6)**39) + 
            L0x20019988_f * (x**0) * ((y_6)**40) + 
            L0x2001998a_f * (x**1) * ((y_6)**40) + 
            L0x2001998c_f * (x**2) * ((y_6)**40) + 
            L0x2001998e_f * (x**3) * ((y_6)**40) + 
            L0x20019990_f * (x**0) * ((y_6)**41) + 
            L0x20019992_f * (x**1) * ((y_6)**41) + 
            L0x20019994_f * (x**2) * ((y_6)**41) + 
            L0x20019996_f * (x**3) * ((y_6)**41) + 
            L0x20019998_f * (x**0) * ((y_6)**42) + 
            L0x2001999a_f * (x**1) * ((y_6)**42) + 
            L0x2001999c_f * (x**2) * ((y_6)**42) + 
            L0x2001999e_f * (x**3) * ((y_6)**42) + 
            L0x200199a0_f * (x**0) * ((y_6)**43) + 
            L0x200199a2_f * (x**1) * ((y_6)**43) + 
            L0x200199a4_f * (x**2) * ((y_6)**43) + 
            L0x200199a6_f * (x**3) * ((y_6)**43) + 
            L0x200199a8_f * (x**0) * ((y_6)**44) + 
            L0x200199aa_f * (x**1) * ((y_6)**44) + 
            L0x200199ac_f * (x**2) * ((y_6)**44) + 
            L0x200199ae_f * (x**3) * ((y_6)**44) + 
            L0x200199b0_f * (x**0) * ((y_6)**45) + 
            L0x200199b2_f * (x**1) * ((y_6)**45) + 
            L0x200199b4_f * (x**2) * ((y_6)**45) + 
            L0x200199b6_f * (x**3) * ((y_6)**45) + 
            L0x200199b8_f * (x**0) * ((y_6)**46) + 
            L0x200199ba_f * (x**1) * ((y_6)**46) + 
            L0x200199bc_f * (x**2) * ((y_6)**46) + 
            L0x200199be_f * (x**3) * ((y_6)**46) + 
            L0x200199c0_f * (x**0) * ((y_6)**47) + 
            L0x200199c2_f * (x**1) * ((y_6)**47) + 
            L0x200199c4_f * (x**2) * ((y_6)**47) + 
            L0x200199c6_f * (x**3) * ((y_6)**47) + 
            L0x200199c8_f * (x**0) * ((y_6)**48) + 
            L0x200199ca_f * (x**1) * ((y_6)**48) + 
            L0x200199cc_f * (x**2) * ((y_6)**48) + 
            L0x200199ce_f * (x**3) * ((y_6)**48) + 
            L0x200199d0_f * (x**0) * ((y_6)**49) + 
            L0x200199d2_f * (x**1) * ((y_6)**49) + 
            L0x200199d4_f * (x**2) * ((y_6)**49) + 
            L0x200199d6_f * (x**3) * ((y_6)**49) + 
            L0x200199d8_f * (x**0) * ((y_6)**50) + 
            L0x200199da_f * (x**1) * ((y_6)**50) + 
            L0x200199dc_f * (x**2) * ((y_6)**50) + 
            L0x200199de_f * (x**3) * ((y_6)**50) + 
            L0x200199e0_f * (x**0) * ((y_6)**51) + 
            L0x200199e2_f * (x**1) * ((y_6)**51) + 
            L0x200199e4_f * (x**2) * ((y_6)**51) + 
            L0x200199e6_f * (x**3) * ((y_6)**51) + 
            L0x200199e8_f * (x**0) * ((y_6)**52) + 
            L0x200199ea_f * (x**1) * ((y_6)**52) + 
            L0x200199ec_f * (x**2) * ((y_6)**52) + 
            L0x200199ee_f * (x**3) * ((y_6)**52) + 
            L0x200199f0_f * (x**0) * ((y_6)**53) + 
            L0x200199f2_f * (x**1) * ((y_6)**53) + 
            L0x200199f4_f * (x**2) * ((y_6)**53) + 
            L0x200199f6_f * (x**3) * ((y_6)**53) + 
            L0x200199f8_f * (x**0) * ((y_6)**54) + 
            L0x200199fa_f * (x**1) * ((y_6)**54) + 
            L0x200199fc_f * (x**2) * ((y_6)**54) + 
            L0x200199fe_f * (x**3) * ((y_6)**54) + 
            L0x20019a00_f * (x**0) * ((y_6)**55) + 
            L0x20019a02_f * (x**1) * ((y_6)**55) + 
            L0x20019a04_f * (x**2) * ((y_6)**55) + 
            L0x20019a06_f * (x**3) * ((y_6)**55) + 
            L0x20019a08_f * (x**0) * ((y_6)**56) + 
            L0x20019a0a_f * (x**1) * ((y_6)**56) + 
            L0x20019a0c_f * (x**2) * ((y_6)**56) + 
            L0x20019a0e_f * (x**3) * ((y_6)**56) + 
            L0x20019a10_f * (x**0) * ((y_6)**57) + 
            L0x20019a12_f * (x**1) * ((y_6)**57) + 
            L0x20019a14_f * (x**2) * ((y_6)**57) + 
            L0x20019a16_f * (x**3) * ((y_6)**57) + 
            L0x20019a18_f * (x**0) * ((y_6)**58) + 
            L0x20019a1a_f * (x**1) * ((y_6)**58) + 
            L0x20019a1c_f * (x**2) * ((y_6)**58) + 
            L0x20019a1e_f * (x**3) * ((y_6)**58) + 
            L0x20019a20_f * (x**0) * ((y_6)**59) + 
            L0x20019a22_f * (x**1) * ((y_6)**59) + 
            L0x20019a24_f * (x**2) * ((y_6)**59) + 
            L0x20019a26_f * (x**3) * ((y_6)**59) + 
            L0x20019a28_f * (x**0) * ((y_6)**60) + 
            L0x20019a2a_f * (x**1) * ((y_6)**60) + 
            L0x20019a2c_f * (x**2) * ((y_6)**60) + 
            L0x20019a2e_f * (x**3) * ((y_6)**60) + 
            L0x20019a30_f * (x**0) * ((y_6)**61) + 
            L0x20019a32_f * (x**1) * ((y_6)**61) + 
            L0x20019a34_f * (x**2) * ((y_6)**61) + 
            L0x20019a36_f * (x**3) * ((y_6)**61) + 
            L0x20019a38_f * (x**0) * ((y_6)**62) + 
            L0x20019a3a_f * (x**1) * ((y_6)**62) + 
            L0x20019a3c_f * (x**2) * ((y_6)**62) + 
            L0x20019a3e_f * (x**3) * ((y_6)**62) + 
            L0x20019a40_f * (x**0) * ((y_6)**63) + 
            L0x20019a42_f * (x**1) * ((y_6)**63) + 
            L0x20019a44_f * (x**2) * ((y_6)**63) + 
            L0x20019a46_f * (x**3) * ((y_6)**63)
          )
          [25570049, x**4 - y_0_28 * 1712131, y_0_28 - 1],
    (* inp_poly_29 *)
    eqmod (2**32) * (inp_poly_29 * inp_poly_29)
          (
            L0x20019848_f * (x**0) * ((y_6)**0) + 
            L0x2001984a_f * (x**1) * ((y_6)**0) + 
            L0x2001984c_f * (x**2) * ((y_6)**0) + 
            L0x2001984e_f * (x**3) * ((y_6)**0) + 
            L0x20019850_f * (x**0) * ((y_6)**1) + 
            L0x20019852_f * (x**1) * ((y_6)**1) + 
            L0x20019854_f * (x**2) * ((y_6)**1) + 
            L0x20019856_f * (x**3) * ((y_6)**1) + 
            L0x20019858_f * (x**0) * ((y_6)**2) + 
            L0x2001985a_f * (x**1) * ((y_6)**2) + 
            L0x2001985c_f * (x**2) * ((y_6)**2) + 
            L0x2001985e_f * (x**3) * ((y_6)**2) + 
            L0x20019860_f * (x**0) * ((y_6)**3) + 
            L0x20019862_f * (x**1) * ((y_6)**3) + 
            L0x20019864_f * (x**2) * ((y_6)**3) + 
            L0x20019866_f * (x**3) * ((y_6)**3) + 
            L0x20019868_f * (x**0) * ((y_6)**4) + 
            L0x2001986a_f * (x**1) * ((y_6)**4) + 
            L0x2001986c_f * (x**2) * ((y_6)**4) + 
            L0x2001986e_f * (x**3) * ((y_6)**4) + 
            L0x20019870_f * (x**0) * ((y_6)**5) + 
            L0x20019872_f * (x**1) * ((y_6)**5) + 
            L0x20019874_f * (x**2) * ((y_6)**5) + 
            L0x20019876_f * (x**3) * ((y_6)**5) + 
            L0x20019878_f * (x**0) * ((y_6)**6) + 
            L0x2001987a_f * (x**1) * ((y_6)**6) + 
            L0x2001987c_f * (x**2) * ((y_6)**6) + 
            L0x2001987e_f * (x**3) * ((y_6)**6) + 
            L0x20019880_f * (x**0) * ((y_6)**7) + 
            L0x20019882_f * (x**1) * ((y_6)**7) + 
            L0x20019884_f * (x**2) * ((y_6)**7) + 
            L0x20019886_f * (x**3) * ((y_6)**7) + 
            L0x20019888_f * (x**0) * ((y_6)**8) + 
            L0x2001988a_f * (x**1) * ((y_6)**8) + 
            L0x2001988c_f * (x**2) * ((y_6)**8) + 
            L0x2001988e_f * (x**3) * ((y_6)**8) + 
            L0x20019890_f * (x**0) * ((y_6)**9) + 
            L0x20019892_f * (x**1) * ((y_6)**9) + 
            L0x20019894_f * (x**2) * ((y_6)**9) + 
            L0x20019896_f * (x**3) * ((y_6)**9) + 
            L0x20019898_f * (x**0) * ((y_6)**10) + 
            L0x2001989a_f * (x**1) * ((y_6)**10) + 
            L0x2001989c_f * (x**2) * ((y_6)**10) + 
            L0x2001989e_f * (x**3) * ((y_6)**10) + 
            L0x200198a0_f * (x**0) * ((y_6)**11) + 
            L0x200198a2_f * (x**1) * ((y_6)**11) + 
            L0x200198a4_f * (x**2) * ((y_6)**11) + 
            L0x200198a6_f * (x**3) * ((y_6)**11) + 
            L0x200198a8_f * (x**0) * ((y_6)**12) + 
            L0x200198aa_f * (x**1) * ((y_6)**12) + 
            L0x200198ac_f * (x**2) * ((y_6)**12) + 
            L0x200198ae_f * (x**3) * ((y_6)**12) + 
            L0x200198b0_f * (x**0) * ((y_6)**13) + 
            L0x200198b2_f * (x**1) * ((y_6)**13) + 
            L0x200198b4_f * (x**2) * ((y_6)**13) + 
            L0x200198b6_f * (x**3) * ((y_6)**13) + 
            L0x200198b8_f * (x**0) * ((y_6)**14) + 
            L0x200198ba_f * (x**1) * ((y_6)**14) + 
            L0x200198bc_f * (x**2) * ((y_6)**14) + 
            L0x200198be_f * (x**3) * ((y_6)**14) + 
            L0x200198c0_f * (x**0) * ((y_6)**15) + 
            L0x200198c2_f * (x**1) * ((y_6)**15) + 
            L0x200198c4_f * (x**2) * ((y_6)**15) + 
            L0x200198c6_f * (x**3) * ((y_6)**15) + 
            L0x200198c8_f * (x**0) * ((y_6)**16) + 
            L0x200198ca_f * (x**1) * ((y_6)**16) + 
            L0x200198cc_f * (x**2) * ((y_6)**16) + 
            L0x200198ce_f * (x**3) * ((y_6)**16) + 
            L0x200198d0_f * (x**0) * ((y_6)**17) + 
            L0x200198d2_f * (x**1) * ((y_6)**17) + 
            L0x200198d4_f * (x**2) * ((y_6)**17) + 
            L0x200198d6_f * (x**3) * ((y_6)**17) + 
            L0x200198d8_f * (x**0) * ((y_6)**18) + 
            L0x200198da_f * (x**1) * ((y_6)**18) + 
            L0x200198dc_f * (x**2) * ((y_6)**18) + 
            L0x200198de_f * (x**3) * ((y_6)**18) + 
            L0x200198e0_f * (x**0) * ((y_6)**19) + 
            L0x200198e2_f * (x**1) * ((y_6)**19) + 
            L0x200198e4_f * (x**2) * ((y_6)**19) + 
            L0x200198e6_f * (x**3) * ((y_6)**19) + 
            L0x200198e8_f * (x**0) * ((y_6)**20) + 
            L0x200198ea_f * (x**1) * ((y_6)**20) + 
            L0x200198ec_f * (x**2) * ((y_6)**20) + 
            L0x200198ee_f * (x**3) * ((y_6)**20) + 
            L0x200198f0_f * (x**0) * ((y_6)**21) + 
            L0x200198f2_f * (x**1) * ((y_6)**21) + 
            L0x200198f4_f * (x**2) * ((y_6)**21) + 
            L0x200198f6_f * (x**3) * ((y_6)**21) + 
            L0x200198f8_f * (x**0) * ((y_6)**22) + 
            L0x200198fa_f * (x**1) * ((y_6)**22) + 
            L0x200198fc_f * (x**2) * ((y_6)**22) + 
            L0x200198fe_f * (x**3) * ((y_6)**22) + 
            L0x20019900_f * (x**0) * ((y_6)**23) + 
            L0x20019902_f * (x**1) * ((y_6)**23) + 
            L0x20019904_f * (x**2) * ((y_6)**23) + 
            L0x20019906_f * (x**3) * ((y_6)**23) + 
            L0x20019908_f * (x**0) * ((y_6)**24) + 
            L0x2001990a_f * (x**1) * ((y_6)**24) + 
            L0x2001990c_f * (x**2) * ((y_6)**24) + 
            L0x2001990e_f * (x**3) * ((y_6)**24) + 
            L0x20019910_f * (x**0) * ((y_6)**25) + 
            L0x20019912_f * (x**1) * ((y_6)**25) + 
            L0x20019914_f * (x**2) * ((y_6)**25) + 
            L0x20019916_f * (x**3) * ((y_6)**25) + 
            L0x20019918_f * (x**0) * ((y_6)**26) + 
            L0x2001991a_f * (x**1) * ((y_6)**26) + 
            L0x2001991c_f * (x**2) * ((y_6)**26) + 
            L0x2001991e_f * (x**3) * ((y_6)**26) + 
            L0x20019920_f * (x**0) * ((y_6)**27) + 
            L0x20019922_f * (x**1) * ((y_6)**27) + 
            L0x20019924_f * (x**2) * ((y_6)**27) + 
            L0x20019926_f * (x**3) * ((y_6)**27) + 
            L0x20019928_f * (x**0) * ((y_6)**28) + 
            L0x2001992a_f * (x**1) * ((y_6)**28) + 
            L0x2001992c_f * (x**2) * ((y_6)**28) + 
            L0x2001992e_f * (x**3) * ((y_6)**28) + 
            L0x20019930_f * (x**0) * ((y_6)**29) + 
            L0x20019932_f * (x**1) * ((y_6)**29) + 
            L0x20019934_f * (x**2) * ((y_6)**29) + 
            L0x20019936_f * (x**3) * ((y_6)**29) + 
            L0x20019938_f * (x**0) * ((y_6)**30) + 
            L0x2001993a_f * (x**1) * ((y_6)**30) + 
            L0x2001993c_f * (x**2) * ((y_6)**30) + 
            L0x2001993e_f * (x**3) * ((y_6)**30) + 
            L0x20019940_f * (x**0) * ((y_6)**31) + 
            L0x20019942_f * (x**1) * ((y_6)**31) + 
            L0x20019944_f * (x**2) * ((y_6)**31) + 
            L0x20019946_f * (x**3) * ((y_6)**31) + 
            L0x20019948_f * (x**0) * ((y_6)**32) + 
            L0x2001994a_f * (x**1) * ((y_6)**32) + 
            L0x2001994c_f * (x**2) * ((y_6)**32) + 
            L0x2001994e_f * (x**3) * ((y_6)**32) + 
            L0x20019950_f * (x**0) * ((y_6)**33) + 
            L0x20019952_f * (x**1) * ((y_6)**33) + 
            L0x20019954_f * (x**2) * ((y_6)**33) + 
            L0x20019956_f * (x**3) * ((y_6)**33) + 
            L0x20019958_f * (x**0) * ((y_6)**34) + 
            L0x2001995a_f * (x**1) * ((y_6)**34) + 
            L0x2001995c_f * (x**2) * ((y_6)**34) + 
            L0x2001995e_f * (x**3) * ((y_6)**34) + 
            L0x20019960_f * (x**0) * ((y_6)**35) + 
            L0x20019962_f * (x**1) * ((y_6)**35) + 
            L0x20019964_f * (x**2) * ((y_6)**35) + 
            L0x20019966_f * (x**3) * ((y_6)**35) + 
            L0x20019968_f * (x**0) * ((y_6)**36) + 
            L0x2001996a_f * (x**1) * ((y_6)**36) + 
            L0x2001996c_f * (x**2) * ((y_6)**36) + 
            L0x2001996e_f * (x**3) * ((y_6)**36) + 
            L0x20019970_f * (x**0) * ((y_6)**37) + 
            L0x20019972_f * (x**1) * ((y_6)**37) + 
            L0x20019974_f * (x**2) * ((y_6)**37) + 
            L0x20019976_f * (x**3) * ((y_6)**37) + 
            L0x20019978_f * (x**0) * ((y_6)**38) + 
            L0x2001997a_f * (x**1) * ((y_6)**38) + 
            L0x2001997c_f * (x**2) * ((y_6)**38) + 
            L0x2001997e_f * (x**3) * ((y_6)**38) + 
            L0x20019980_f * (x**0) * ((y_6)**39) + 
            L0x20019982_f * (x**1) * ((y_6)**39) + 
            L0x20019984_f * (x**2) * ((y_6)**39) + 
            L0x20019986_f * (x**3) * ((y_6)**39) + 
            L0x20019988_f * (x**0) * ((y_6)**40) + 
            L0x2001998a_f * (x**1) * ((y_6)**40) + 
            L0x2001998c_f * (x**2) * ((y_6)**40) + 
            L0x2001998e_f * (x**3) * ((y_6)**40) + 
            L0x20019990_f * (x**0) * ((y_6)**41) + 
            L0x20019992_f * (x**1) * ((y_6)**41) + 
            L0x20019994_f * (x**2) * ((y_6)**41) + 
            L0x20019996_f * (x**3) * ((y_6)**41) + 
            L0x20019998_f * (x**0) * ((y_6)**42) + 
            L0x2001999a_f * (x**1) * ((y_6)**42) + 
            L0x2001999c_f * (x**2) * ((y_6)**42) + 
            L0x2001999e_f * (x**3) * ((y_6)**42) + 
            L0x200199a0_f * (x**0) * ((y_6)**43) + 
            L0x200199a2_f * (x**1) * ((y_6)**43) + 
            L0x200199a4_f * (x**2) * ((y_6)**43) + 
            L0x200199a6_f * (x**3) * ((y_6)**43) + 
            L0x200199a8_f * (x**0) * ((y_6)**44) + 
            L0x200199aa_f * (x**1) * ((y_6)**44) + 
            L0x200199ac_f * (x**2) * ((y_6)**44) + 
            L0x200199ae_f * (x**3) * ((y_6)**44) + 
            L0x200199b0_f * (x**0) * ((y_6)**45) + 
            L0x200199b2_f * (x**1) * ((y_6)**45) + 
            L0x200199b4_f * (x**2) * ((y_6)**45) + 
            L0x200199b6_f * (x**3) * ((y_6)**45) + 
            L0x200199b8_f * (x**0) * ((y_6)**46) + 
            L0x200199ba_f * (x**1) * ((y_6)**46) + 
            L0x200199bc_f * (x**2) * ((y_6)**46) + 
            L0x200199be_f * (x**3) * ((y_6)**46) + 
            L0x200199c0_f * (x**0) * ((y_6)**47) + 
            L0x200199c2_f * (x**1) * ((y_6)**47) + 
            L0x200199c4_f * (x**2) * ((y_6)**47) + 
            L0x200199c6_f * (x**3) * ((y_6)**47) + 
            L0x200199c8_f * (x**0) * ((y_6)**48) + 
            L0x200199ca_f * (x**1) * ((y_6)**48) + 
            L0x200199cc_f * (x**2) * ((y_6)**48) + 
            L0x200199ce_f * (x**3) * ((y_6)**48) + 
            L0x200199d0_f * (x**0) * ((y_6)**49) + 
            L0x200199d2_f * (x**1) * ((y_6)**49) + 
            L0x200199d4_f * (x**2) * ((y_6)**49) + 
            L0x200199d6_f * (x**3) * ((y_6)**49) + 
            L0x200199d8_f * (x**0) * ((y_6)**50) + 
            L0x200199da_f * (x**1) * ((y_6)**50) + 
            L0x200199dc_f * (x**2) * ((y_6)**50) + 
            L0x200199de_f * (x**3) * ((y_6)**50) + 
            L0x200199e0_f * (x**0) * ((y_6)**51) + 
            L0x200199e2_f * (x**1) * ((y_6)**51) + 
            L0x200199e4_f * (x**2) * ((y_6)**51) + 
            L0x200199e6_f * (x**3) * ((y_6)**51) + 
            L0x200199e8_f * (x**0) * ((y_6)**52) + 
            L0x200199ea_f * (x**1) * ((y_6)**52) + 
            L0x200199ec_f * (x**2) * ((y_6)**52) + 
            L0x200199ee_f * (x**3) * ((y_6)**52) + 
            L0x200199f0_f * (x**0) * ((y_6)**53) + 
            L0x200199f2_f * (x**1) * ((y_6)**53) + 
            L0x200199f4_f * (x**2) * ((y_6)**53) + 
            L0x200199f6_f * (x**3) * ((y_6)**53) + 
            L0x200199f8_f * (x**0) * ((y_6)**54) + 
            L0x200199fa_f * (x**1) * ((y_6)**54) + 
            L0x200199fc_f * (x**2) * ((y_6)**54) + 
            L0x200199fe_f * (x**3) * ((y_6)**54) + 
            L0x20019a00_f * (x**0) * ((y_6)**55) + 
            L0x20019a02_f * (x**1) * ((y_6)**55) + 
            L0x20019a04_f * (x**2) * ((y_6)**55) + 
            L0x20019a06_f * (x**3) * ((y_6)**55) + 
            L0x20019a08_f * (x**0) * ((y_6)**56) + 
            L0x20019a0a_f * (x**1) * ((y_6)**56) + 
            L0x20019a0c_f * (x**2) * ((y_6)**56) + 
            L0x20019a0e_f * (x**3) * ((y_6)**56) + 
            L0x20019a10_f * (x**0) * ((y_6)**57) + 
            L0x20019a12_f * (x**1) * ((y_6)**57) + 
            L0x20019a14_f * (x**2) * ((y_6)**57) + 
            L0x20019a16_f * (x**3) * ((y_6)**57) + 
            L0x20019a18_f * (x**0) * ((y_6)**58) + 
            L0x20019a1a_f * (x**1) * ((y_6)**58) + 
            L0x20019a1c_f * (x**2) * ((y_6)**58) + 
            L0x20019a1e_f * (x**3) * ((y_6)**58) + 
            L0x20019a20_f * (x**0) * ((y_6)**59) + 
            L0x20019a22_f * (x**1) * ((y_6)**59) + 
            L0x20019a24_f * (x**2) * ((y_6)**59) + 
            L0x20019a26_f * (x**3) * ((y_6)**59) + 
            L0x20019a28_f * (x**0) * ((y_6)**60) + 
            L0x20019a2a_f * (x**1) * ((y_6)**60) + 
            L0x20019a2c_f * (x**2) * ((y_6)**60) + 
            L0x20019a2e_f * (x**3) * ((y_6)**60) + 
            L0x20019a30_f * (x**0) * ((y_6)**61) + 
            L0x20019a32_f * (x**1) * ((y_6)**61) + 
            L0x20019a34_f * (x**2) * ((y_6)**61) + 
            L0x20019a36_f * (x**3) * ((y_6)**61) + 
            L0x20019a38_f * (x**0) * ((y_6)**62) + 
            L0x20019a3a_f * (x**1) * ((y_6)**62) + 
            L0x20019a3c_f * (x**2) * ((y_6)**62) + 
            L0x20019a3e_f * (x**3) * ((y_6)**62) + 
            L0x20019a40_f * (x**0) * ((y_6)**63) + 
            L0x20019a42_f * (x**1) * ((y_6)**63) + 
            L0x20019a44_f * (x**2) * ((y_6)**63) + 
            L0x20019a46_f * (x**3) * ((y_6)**63)
          )
          [25570049, x**4 - y_0_29 * 23857918, y_0_29 - 1],
    (* inp_poly_30 *)
    eqmod (2**32) * (inp_poly_30 * inp_poly_30)
          (
            L0x20019848_f * (x**0) * ((y_6)**0) + 
            L0x2001984a_f * (x**1) * ((y_6)**0) + 
            L0x2001984c_f * (x**2) * ((y_6)**0) + 
            L0x2001984e_f * (x**3) * ((y_6)**0) + 
            L0x20019850_f * (x**0) * ((y_6)**1) + 
            L0x20019852_f * (x**1) * ((y_6)**1) + 
            L0x20019854_f * (x**2) * ((y_6)**1) + 
            L0x20019856_f * (x**3) * ((y_6)**1) + 
            L0x20019858_f * (x**0) * ((y_6)**2) + 
            L0x2001985a_f * (x**1) * ((y_6)**2) + 
            L0x2001985c_f * (x**2) * ((y_6)**2) + 
            L0x2001985e_f * (x**3) * ((y_6)**2) + 
            L0x20019860_f * (x**0) * ((y_6)**3) + 
            L0x20019862_f * (x**1) * ((y_6)**3) + 
            L0x20019864_f * (x**2) * ((y_6)**3) + 
            L0x20019866_f * (x**3) * ((y_6)**3) + 
            L0x20019868_f * (x**0) * ((y_6)**4) + 
            L0x2001986a_f * (x**1) * ((y_6)**4) + 
            L0x2001986c_f * (x**2) * ((y_6)**4) + 
            L0x2001986e_f * (x**3) * ((y_6)**4) + 
            L0x20019870_f * (x**0) * ((y_6)**5) + 
            L0x20019872_f * (x**1) * ((y_6)**5) + 
            L0x20019874_f * (x**2) * ((y_6)**5) + 
            L0x20019876_f * (x**3) * ((y_6)**5) + 
            L0x20019878_f * (x**0) * ((y_6)**6) + 
            L0x2001987a_f * (x**1) * ((y_6)**6) + 
            L0x2001987c_f * (x**2) * ((y_6)**6) + 
            L0x2001987e_f * (x**3) * ((y_6)**6) + 
            L0x20019880_f * (x**0) * ((y_6)**7) + 
            L0x20019882_f * (x**1) * ((y_6)**7) + 
            L0x20019884_f * (x**2) * ((y_6)**7) + 
            L0x20019886_f * (x**3) * ((y_6)**7) + 
            L0x20019888_f * (x**0) * ((y_6)**8) + 
            L0x2001988a_f * (x**1) * ((y_6)**8) + 
            L0x2001988c_f * (x**2) * ((y_6)**8) + 
            L0x2001988e_f * (x**3) * ((y_6)**8) + 
            L0x20019890_f * (x**0) * ((y_6)**9) + 
            L0x20019892_f * (x**1) * ((y_6)**9) + 
            L0x20019894_f * (x**2) * ((y_6)**9) + 
            L0x20019896_f * (x**3) * ((y_6)**9) + 
            L0x20019898_f * (x**0) * ((y_6)**10) + 
            L0x2001989a_f * (x**1) * ((y_6)**10) + 
            L0x2001989c_f * (x**2) * ((y_6)**10) + 
            L0x2001989e_f * (x**3) * ((y_6)**10) + 
            L0x200198a0_f * (x**0) * ((y_6)**11) + 
            L0x200198a2_f * (x**1) * ((y_6)**11) + 
            L0x200198a4_f * (x**2) * ((y_6)**11) + 
            L0x200198a6_f * (x**3) * ((y_6)**11) + 
            L0x200198a8_f * (x**0) * ((y_6)**12) + 
            L0x200198aa_f * (x**1) * ((y_6)**12) + 
            L0x200198ac_f * (x**2) * ((y_6)**12) + 
            L0x200198ae_f * (x**3) * ((y_6)**12) + 
            L0x200198b0_f * (x**0) * ((y_6)**13) + 
            L0x200198b2_f * (x**1) * ((y_6)**13) + 
            L0x200198b4_f * (x**2) * ((y_6)**13) + 
            L0x200198b6_f * (x**3) * ((y_6)**13) + 
            L0x200198b8_f * (x**0) * ((y_6)**14) + 
            L0x200198ba_f * (x**1) * ((y_6)**14) + 
            L0x200198bc_f * (x**2) * ((y_6)**14) + 
            L0x200198be_f * (x**3) * ((y_6)**14) + 
            L0x200198c0_f * (x**0) * ((y_6)**15) + 
            L0x200198c2_f * (x**1) * ((y_6)**15) + 
            L0x200198c4_f * (x**2) * ((y_6)**15) + 
            L0x200198c6_f * (x**3) * ((y_6)**15) + 
            L0x200198c8_f * (x**0) * ((y_6)**16) + 
            L0x200198ca_f * (x**1) * ((y_6)**16) + 
            L0x200198cc_f * (x**2) * ((y_6)**16) + 
            L0x200198ce_f * (x**3) * ((y_6)**16) + 
            L0x200198d0_f * (x**0) * ((y_6)**17) + 
            L0x200198d2_f * (x**1) * ((y_6)**17) + 
            L0x200198d4_f * (x**2) * ((y_6)**17) + 
            L0x200198d6_f * (x**3) * ((y_6)**17) + 
            L0x200198d8_f * (x**0) * ((y_6)**18) + 
            L0x200198da_f * (x**1) * ((y_6)**18) + 
            L0x200198dc_f * (x**2) * ((y_6)**18) + 
            L0x200198de_f * (x**3) * ((y_6)**18) + 
            L0x200198e0_f * (x**0) * ((y_6)**19) + 
            L0x200198e2_f * (x**1) * ((y_6)**19) + 
            L0x200198e4_f * (x**2) * ((y_6)**19) + 
            L0x200198e6_f * (x**3) * ((y_6)**19) + 
            L0x200198e8_f * (x**0) * ((y_6)**20) + 
            L0x200198ea_f * (x**1) * ((y_6)**20) + 
            L0x200198ec_f * (x**2) * ((y_6)**20) + 
            L0x200198ee_f * (x**3) * ((y_6)**20) + 
            L0x200198f0_f * (x**0) * ((y_6)**21) + 
            L0x200198f2_f * (x**1) * ((y_6)**21) + 
            L0x200198f4_f * (x**2) * ((y_6)**21) + 
            L0x200198f6_f * (x**3) * ((y_6)**21) + 
            L0x200198f8_f * (x**0) * ((y_6)**22) + 
            L0x200198fa_f * (x**1) * ((y_6)**22) + 
            L0x200198fc_f * (x**2) * ((y_6)**22) + 
            L0x200198fe_f * (x**3) * ((y_6)**22) + 
            L0x20019900_f * (x**0) * ((y_6)**23) + 
            L0x20019902_f * (x**1) * ((y_6)**23) + 
            L0x20019904_f * (x**2) * ((y_6)**23) + 
            L0x20019906_f * (x**3) * ((y_6)**23) + 
            L0x20019908_f * (x**0) * ((y_6)**24) + 
            L0x2001990a_f * (x**1) * ((y_6)**24) + 
            L0x2001990c_f * (x**2) * ((y_6)**24) + 
            L0x2001990e_f * (x**3) * ((y_6)**24) + 
            L0x20019910_f * (x**0) * ((y_6)**25) + 
            L0x20019912_f * (x**1) * ((y_6)**25) + 
            L0x20019914_f * (x**2) * ((y_6)**25) + 
            L0x20019916_f * (x**3) * ((y_6)**25) + 
            L0x20019918_f * (x**0) * ((y_6)**26) + 
            L0x2001991a_f * (x**1) * ((y_6)**26) + 
            L0x2001991c_f * (x**2) * ((y_6)**26) + 
            L0x2001991e_f * (x**3) * ((y_6)**26) + 
            L0x20019920_f * (x**0) * ((y_6)**27) + 
            L0x20019922_f * (x**1) * ((y_6)**27) + 
            L0x20019924_f * (x**2) * ((y_6)**27) + 
            L0x20019926_f * (x**3) * ((y_6)**27) + 
            L0x20019928_f * (x**0) * ((y_6)**28) + 
            L0x2001992a_f * (x**1) * ((y_6)**28) + 
            L0x2001992c_f * (x**2) * ((y_6)**28) + 
            L0x2001992e_f * (x**3) * ((y_6)**28) + 
            L0x20019930_f * (x**0) * ((y_6)**29) + 
            L0x20019932_f * (x**1) * ((y_6)**29) + 
            L0x20019934_f * (x**2) * ((y_6)**29) + 
            L0x20019936_f * (x**3) * ((y_6)**29) + 
            L0x20019938_f * (x**0) * ((y_6)**30) + 
            L0x2001993a_f * (x**1) * ((y_6)**30) + 
            L0x2001993c_f * (x**2) * ((y_6)**30) + 
            L0x2001993e_f * (x**3) * ((y_6)**30) + 
            L0x20019940_f * (x**0) * ((y_6)**31) + 
            L0x20019942_f * (x**1) * ((y_6)**31) + 
            L0x20019944_f * (x**2) * ((y_6)**31) + 
            L0x20019946_f * (x**3) * ((y_6)**31) + 
            L0x20019948_f * (x**0) * ((y_6)**32) + 
            L0x2001994a_f * (x**1) * ((y_6)**32) + 
            L0x2001994c_f * (x**2) * ((y_6)**32) + 
            L0x2001994e_f * (x**3) * ((y_6)**32) + 
            L0x20019950_f * (x**0) * ((y_6)**33) + 
            L0x20019952_f * (x**1) * ((y_6)**33) + 
            L0x20019954_f * (x**2) * ((y_6)**33) + 
            L0x20019956_f * (x**3) * ((y_6)**33) + 
            L0x20019958_f * (x**0) * ((y_6)**34) + 
            L0x2001995a_f * (x**1) * ((y_6)**34) + 
            L0x2001995c_f * (x**2) * ((y_6)**34) + 
            L0x2001995e_f * (x**3) * ((y_6)**34) + 
            L0x20019960_f * (x**0) * ((y_6)**35) + 
            L0x20019962_f * (x**1) * ((y_6)**35) + 
            L0x20019964_f * (x**2) * ((y_6)**35) + 
            L0x20019966_f * (x**3) * ((y_6)**35) + 
            L0x20019968_f * (x**0) * ((y_6)**36) + 
            L0x2001996a_f * (x**1) * ((y_6)**36) + 
            L0x2001996c_f * (x**2) * ((y_6)**36) + 
            L0x2001996e_f * (x**3) * ((y_6)**36) + 
            L0x20019970_f * (x**0) * ((y_6)**37) + 
            L0x20019972_f * (x**1) * ((y_6)**37) + 
            L0x20019974_f * (x**2) * ((y_6)**37) + 
            L0x20019976_f * (x**3) * ((y_6)**37) + 
            L0x20019978_f * (x**0) * ((y_6)**38) + 
            L0x2001997a_f * (x**1) * ((y_6)**38) + 
            L0x2001997c_f * (x**2) * ((y_6)**38) + 
            L0x2001997e_f * (x**3) * ((y_6)**38) + 
            L0x20019980_f * (x**0) * ((y_6)**39) + 
            L0x20019982_f * (x**1) * ((y_6)**39) + 
            L0x20019984_f * (x**2) * ((y_6)**39) + 
            L0x20019986_f * (x**3) * ((y_6)**39) + 
            L0x20019988_f * (x**0) * ((y_6)**40) + 
            L0x2001998a_f * (x**1) * ((y_6)**40) + 
            L0x2001998c_f * (x**2) * ((y_6)**40) + 
            L0x2001998e_f * (x**3) * ((y_6)**40) + 
            L0x20019990_f * (x**0) * ((y_6)**41) + 
            L0x20019992_f * (x**1) * ((y_6)**41) + 
            L0x20019994_f * (x**2) * ((y_6)**41) + 
            L0x20019996_f * (x**3) * ((y_6)**41) + 
            L0x20019998_f * (x**0) * ((y_6)**42) + 
            L0x2001999a_f * (x**1) * ((y_6)**42) + 
            L0x2001999c_f * (x**2) * ((y_6)**42) + 
            L0x2001999e_f * (x**3) * ((y_6)**42) + 
            L0x200199a0_f * (x**0) * ((y_6)**43) + 
            L0x200199a2_f * (x**1) * ((y_6)**43) + 
            L0x200199a4_f * (x**2) * ((y_6)**43) + 
            L0x200199a6_f * (x**3) * ((y_6)**43) + 
            L0x200199a8_f * (x**0) * ((y_6)**44) + 
            L0x200199aa_f * (x**1) * ((y_6)**44) + 
            L0x200199ac_f * (x**2) * ((y_6)**44) + 
            L0x200199ae_f * (x**3) * ((y_6)**44) + 
            L0x200199b0_f * (x**0) * ((y_6)**45) + 
            L0x200199b2_f * (x**1) * ((y_6)**45) + 
            L0x200199b4_f * (x**2) * ((y_6)**45) + 
            L0x200199b6_f * (x**3) * ((y_6)**45) + 
            L0x200199b8_f * (x**0) * ((y_6)**46) + 
            L0x200199ba_f * (x**1) * ((y_6)**46) + 
            L0x200199bc_f * (x**2) * ((y_6)**46) + 
            L0x200199be_f * (x**3) * ((y_6)**46) + 
            L0x200199c0_f * (x**0) * ((y_6)**47) + 
            L0x200199c2_f * (x**1) * ((y_6)**47) + 
            L0x200199c4_f * (x**2) * ((y_6)**47) + 
            L0x200199c6_f * (x**3) * ((y_6)**47) + 
            L0x200199c8_f * (x**0) * ((y_6)**48) + 
            L0x200199ca_f * (x**1) * ((y_6)**48) + 
            L0x200199cc_f * (x**2) * ((y_6)**48) + 
            L0x200199ce_f * (x**3) * ((y_6)**48) + 
            L0x200199d0_f * (x**0) * ((y_6)**49) + 
            L0x200199d2_f * (x**1) * ((y_6)**49) + 
            L0x200199d4_f * (x**2) * ((y_6)**49) + 
            L0x200199d6_f * (x**3) * ((y_6)**49) + 
            L0x200199d8_f * (x**0) * ((y_6)**50) + 
            L0x200199da_f * (x**1) * ((y_6)**50) + 
            L0x200199dc_f * (x**2) * ((y_6)**50) + 
            L0x200199de_f * (x**3) * ((y_6)**50) + 
            L0x200199e0_f * (x**0) * ((y_6)**51) + 
            L0x200199e2_f * (x**1) * ((y_6)**51) + 
            L0x200199e4_f * (x**2) * ((y_6)**51) + 
            L0x200199e6_f * (x**3) * ((y_6)**51) + 
            L0x200199e8_f * (x**0) * ((y_6)**52) + 
            L0x200199ea_f * (x**1) * ((y_6)**52) + 
            L0x200199ec_f * (x**2) * ((y_6)**52) + 
            L0x200199ee_f * (x**3) * ((y_6)**52) + 
            L0x200199f0_f * (x**0) * ((y_6)**53) + 
            L0x200199f2_f * (x**1) * ((y_6)**53) + 
            L0x200199f4_f * (x**2) * ((y_6)**53) + 
            L0x200199f6_f * (x**3) * ((y_6)**53) + 
            L0x200199f8_f * (x**0) * ((y_6)**54) + 
            L0x200199fa_f * (x**1) * ((y_6)**54) + 
            L0x200199fc_f * (x**2) * ((y_6)**54) + 
            L0x200199fe_f * (x**3) * ((y_6)**54) + 
            L0x20019a00_f * (x**0) * ((y_6)**55) + 
            L0x20019a02_f * (x**1) * ((y_6)**55) + 
            L0x20019a04_f * (x**2) * ((y_6)**55) + 
            L0x20019a06_f * (x**3) * ((y_6)**55) + 
            L0x20019a08_f * (x**0) * ((y_6)**56) + 
            L0x20019a0a_f * (x**1) * ((y_6)**56) + 
            L0x20019a0c_f * (x**2) * ((y_6)**56) + 
            L0x20019a0e_f * (x**3) * ((y_6)**56) + 
            L0x20019a10_f * (x**0) * ((y_6)**57) + 
            L0x20019a12_f * (x**1) * ((y_6)**57) + 
            L0x20019a14_f * (x**2) * ((y_6)**57) + 
            L0x20019a16_f * (x**3) * ((y_6)**57) + 
            L0x20019a18_f * (x**0) * ((y_6)**58) + 
            L0x20019a1a_f * (x**1) * ((y_6)**58) + 
            L0x20019a1c_f * (x**2) * ((y_6)**58) + 
            L0x20019a1e_f * (x**3) * ((y_6)**58) + 
            L0x20019a20_f * (x**0) * ((y_6)**59) + 
            L0x20019a22_f * (x**1) * ((y_6)**59) + 
            L0x20019a24_f * (x**2) * ((y_6)**59) + 
            L0x20019a26_f * (x**3) * ((y_6)**59) + 
            L0x20019a28_f * (x**0) * ((y_6)**60) + 
            L0x20019a2a_f * (x**1) * ((y_6)**60) + 
            L0x20019a2c_f * (x**2) * ((y_6)**60) + 
            L0x20019a2e_f * (x**3) * ((y_6)**60) + 
            L0x20019a30_f * (x**0) * ((y_6)**61) + 
            L0x20019a32_f * (x**1) * ((y_6)**61) + 
            L0x20019a34_f * (x**2) * ((y_6)**61) + 
            L0x20019a36_f * (x**3) * ((y_6)**61) + 
            L0x20019a38_f * (x**0) * ((y_6)**62) + 
            L0x20019a3a_f * (x**1) * ((y_6)**62) + 
            L0x20019a3c_f * (x**2) * ((y_6)**62) + 
            L0x20019a3e_f * (x**3) * ((y_6)**62) + 
            L0x20019a40_f * (x**0) * ((y_6)**63) + 
            L0x20019a42_f * (x**1) * ((y_6)**63) + 
            L0x20019a44_f * (x**2) * ((y_6)**63) + 
            L0x20019a46_f * (x**3) * ((y_6)**63)
          )
          [25570049, x**4 - y_0_30 * 14036261, y_0_30 - 1],
    (* inp_poly_31 *)
    eqmod (2**32) * (inp_poly_31 * inp_poly_31)
          (
            L0x20019848_f * (x**0) * ((y_6)**0) + 
            L0x2001984a_f * (x**1) * ((y_6)**0) + 
            L0x2001984c_f * (x**2) * ((y_6)**0) + 
            L0x2001984e_f * (x**3) * ((y_6)**0) + 
            L0x20019850_f * (x**0) * ((y_6)**1) + 
            L0x20019852_f * (x**1) * ((y_6)**1) + 
            L0x20019854_f * (x**2) * ((y_6)**1) + 
            L0x20019856_f * (x**3) * ((y_6)**1) + 
            L0x20019858_f * (x**0) * ((y_6)**2) + 
            L0x2001985a_f * (x**1) * ((y_6)**2) + 
            L0x2001985c_f * (x**2) * ((y_6)**2) + 
            L0x2001985e_f * (x**3) * ((y_6)**2) + 
            L0x20019860_f * (x**0) * ((y_6)**3) + 
            L0x20019862_f * (x**1) * ((y_6)**3) + 
            L0x20019864_f * (x**2) * ((y_6)**3) + 
            L0x20019866_f * (x**3) * ((y_6)**3) + 
            L0x20019868_f * (x**0) * ((y_6)**4) + 
            L0x2001986a_f * (x**1) * ((y_6)**4) + 
            L0x2001986c_f * (x**2) * ((y_6)**4) + 
            L0x2001986e_f * (x**3) * ((y_6)**4) + 
            L0x20019870_f * (x**0) * ((y_6)**5) + 
            L0x20019872_f * (x**1) * ((y_6)**5) + 
            L0x20019874_f * (x**2) * ((y_6)**5) + 
            L0x20019876_f * (x**3) * ((y_6)**5) + 
            L0x20019878_f * (x**0) * ((y_6)**6) + 
            L0x2001987a_f * (x**1) * ((y_6)**6) + 
            L0x2001987c_f * (x**2) * ((y_6)**6) + 
            L0x2001987e_f * (x**3) * ((y_6)**6) + 
            L0x20019880_f * (x**0) * ((y_6)**7) + 
            L0x20019882_f * (x**1) * ((y_6)**7) + 
            L0x20019884_f * (x**2) * ((y_6)**7) + 
            L0x20019886_f * (x**3) * ((y_6)**7) + 
            L0x20019888_f * (x**0) * ((y_6)**8) + 
            L0x2001988a_f * (x**1) * ((y_6)**8) + 
            L0x2001988c_f * (x**2) * ((y_6)**8) + 
            L0x2001988e_f * (x**3) * ((y_6)**8) + 
            L0x20019890_f * (x**0) * ((y_6)**9) + 
            L0x20019892_f * (x**1) * ((y_6)**9) + 
            L0x20019894_f * (x**2) * ((y_6)**9) + 
            L0x20019896_f * (x**3) * ((y_6)**9) + 
            L0x20019898_f * (x**0) * ((y_6)**10) + 
            L0x2001989a_f * (x**1) * ((y_6)**10) + 
            L0x2001989c_f * (x**2) * ((y_6)**10) + 
            L0x2001989e_f * (x**3) * ((y_6)**10) + 
            L0x200198a0_f * (x**0) * ((y_6)**11) + 
            L0x200198a2_f * (x**1) * ((y_6)**11) + 
            L0x200198a4_f * (x**2) * ((y_6)**11) + 
            L0x200198a6_f * (x**3) * ((y_6)**11) + 
            L0x200198a8_f * (x**0) * ((y_6)**12) + 
            L0x200198aa_f * (x**1) * ((y_6)**12) + 
            L0x200198ac_f * (x**2) * ((y_6)**12) + 
            L0x200198ae_f * (x**3) * ((y_6)**12) + 
            L0x200198b0_f * (x**0) * ((y_6)**13) + 
            L0x200198b2_f * (x**1) * ((y_6)**13) + 
            L0x200198b4_f * (x**2) * ((y_6)**13) + 
            L0x200198b6_f * (x**3) * ((y_6)**13) + 
            L0x200198b8_f * (x**0) * ((y_6)**14) + 
            L0x200198ba_f * (x**1) * ((y_6)**14) + 
            L0x200198bc_f * (x**2) * ((y_6)**14) + 
            L0x200198be_f * (x**3) * ((y_6)**14) + 
            L0x200198c0_f * (x**0) * ((y_6)**15) + 
            L0x200198c2_f * (x**1) * ((y_6)**15) + 
            L0x200198c4_f * (x**2) * ((y_6)**15) + 
            L0x200198c6_f * (x**3) * ((y_6)**15) + 
            L0x200198c8_f * (x**0) * ((y_6)**16) + 
            L0x200198ca_f * (x**1) * ((y_6)**16) + 
            L0x200198cc_f * (x**2) * ((y_6)**16) + 
            L0x200198ce_f * (x**3) * ((y_6)**16) + 
            L0x200198d0_f * (x**0) * ((y_6)**17) + 
            L0x200198d2_f * (x**1) * ((y_6)**17) + 
            L0x200198d4_f * (x**2) * ((y_6)**17) + 
            L0x200198d6_f * (x**3) * ((y_6)**17) + 
            L0x200198d8_f * (x**0) * ((y_6)**18) + 
            L0x200198da_f * (x**1) * ((y_6)**18) + 
            L0x200198dc_f * (x**2) * ((y_6)**18) + 
            L0x200198de_f * (x**3) * ((y_6)**18) + 
            L0x200198e0_f * (x**0) * ((y_6)**19) + 
            L0x200198e2_f * (x**1) * ((y_6)**19) + 
            L0x200198e4_f * (x**2) * ((y_6)**19) + 
            L0x200198e6_f * (x**3) * ((y_6)**19) + 
            L0x200198e8_f * (x**0) * ((y_6)**20) + 
            L0x200198ea_f * (x**1) * ((y_6)**20) + 
            L0x200198ec_f * (x**2) * ((y_6)**20) + 
            L0x200198ee_f * (x**3) * ((y_6)**20) + 
            L0x200198f0_f * (x**0) * ((y_6)**21) + 
            L0x200198f2_f * (x**1) * ((y_6)**21) + 
            L0x200198f4_f * (x**2) * ((y_6)**21) + 
            L0x200198f6_f * (x**3) * ((y_6)**21) + 
            L0x200198f8_f * (x**0) * ((y_6)**22) + 
            L0x200198fa_f * (x**1) * ((y_6)**22) + 
            L0x200198fc_f * (x**2) * ((y_6)**22) + 
            L0x200198fe_f * (x**3) * ((y_6)**22) + 
            L0x20019900_f * (x**0) * ((y_6)**23) + 
            L0x20019902_f * (x**1) * ((y_6)**23) + 
            L0x20019904_f * (x**2) * ((y_6)**23) + 
            L0x20019906_f * (x**3) * ((y_6)**23) + 
            L0x20019908_f * (x**0) * ((y_6)**24) + 
            L0x2001990a_f * (x**1) * ((y_6)**24) + 
            L0x2001990c_f * (x**2) * ((y_6)**24) + 
            L0x2001990e_f * (x**3) * ((y_6)**24) + 
            L0x20019910_f * (x**0) * ((y_6)**25) + 
            L0x20019912_f * (x**1) * ((y_6)**25) + 
            L0x20019914_f * (x**2) * ((y_6)**25) + 
            L0x20019916_f * (x**3) * ((y_6)**25) + 
            L0x20019918_f * (x**0) * ((y_6)**26) + 
            L0x2001991a_f * (x**1) * ((y_6)**26) + 
            L0x2001991c_f * (x**2) * ((y_6)**26) + 
            L0x2001991e_f * (x**3) * ((y_6)**26) + 
            L0x20019920_f * (x**0) * ((y_6)**27) + 
            L0x20019922_f * (x**1) * ((y_6)**27) + 
            L0x20019924_f * (x**2) * ((y_6)**27) + 
            L0x20019926_f * (x**3) * ((y_6)**27) + 
            L0x20019928_f * (x**0) * ((y_6)**28) + 
            L0x2001992a_f * (x**1) * ((y_6)**28) + 
            L0x2001992c_f * (x**2) * ((y_6)**28) + 
            L0x2001992e_f * (x**3) * ((y_6)**28) + 
            L0x20019930_f * (x**0) * ((y_6)**29) + 
            L0x20019932_f * (x**1) * ((y_6)**29) + 
            L0x20019934_f * (x**2) * ((y_6)**29) + 
            L0x20019936_f * (x**3) * ((y_6)**29) + 
            L0x20019938_f * (x**0) * ((y_6)**30) + 
            L0x2001993a_f * (x**1) * ((y_6)**30) + 
            L0x2001993c_f * (x**2) * ((y_6)**30) + 
            L0x2001993e_f * (x**3) * ((y_6)**30) + 
            L0x20019940_f * (x**0) * ((y_6)**31) + 
            L0x20019942_f * (x**1) * ((y_6)**31) + 
            L0x20019944_f * (x**2) * ((y_6)**31) + 
            L0x20019946_f * (x**3) * ((y_6)**31) + 
            L0x20019948_f * (x**0) * ((y_6)**32) + 
            L0x2001994a_f * (x**1) * ((y_6)**32) + 
            L0x2001994c_f * (x**2) * ((y_6)**32) + 
            L0x2001994e_f * (x**3) * ((y_6)**32) + 
            L0x20019950_f * (x**0) * ((y_6)**33) + 
            L0x20019952_f * (x**1) * ((y_6)**33) + 
            L0x20019954_f * (x**2) * ((y_6)**33) + 
            L0x20019956_f * (x**3) * ((y_6)**33) + 
            L0x20019958_f * (x**0) * ((y_6)**34) + 
            L0x2001995a_f * (x**1) * ((y_6)**34) + 
            L0x2001995c_f * (x**2) * ((y_6)**34) + 
            L0x2001995e_f * (x**3) * ((y_6)**34) + 
            L0x20019960_f * (x**0) * ((y_6)**35) + 
            L0x20019962_f * (x**1) * ((y_6)**35) + 
            L0x20019964_f * (x**2) * ((y_6)**35) + 
            L0x20019966_f * (x**3) * ((y_6)**35) + 
            L0x20019968_f * (x**0) * ((y_6)**36) + 
            L0x2001996a_f * (x**1) * ((y_6)**36) + 
            L0x2001996c_f * (x**2) * ((y_6)**36) + 
            L0x2001996e_f * (x**3) * ((y_6)**36) + 
            L0x20019970_f * (x**0) * ((y_6)**37) + 
            L0x20019972_f * (x**1) * ((y_6)**37) + 
            L0x20019974_f * (x**2) * ((y_6)**37) + 
            L0x20019976_f * (x**3) * ((y_6)**37) + 
            L0x20019978_f * (x**0) * ((y_6)**38) + 
            L0x2001997a_f * (x**1) * ((y_6)**38) + 
            L0x2001997c_f * (x**2) * ((y_6)**38) + 
            L0x2001997e_f * (x**3) * ((y_6)**38) + 
            L0x20019980_f * (x**0) * ((y_6)**39) + 
            L0x20019982_f * (x**1) * ((y_6)**39) + 
            L0x20019984_f * (x**2) * ((y_6)**39) + 
            L0x20019986_f * (x**3) * ((y_6)**39) + 
            L0x20019988_f * (x**0) * ((y_6)**40) + 
            L0x2001998a_f * (x**1) * ((y_6)**40) + 
            L0x2001998c_f * (x**2) * ((y_6)**40) + 
            L0x2001998e_f * (x**3) * ((y_6)**40) + 
            L0x20019990_f * (x**0) * ((y_6)**41) + 
            L0x20019992_f * (x**1) * ((y_6)**41) + 
            L0x20019994_f * (x**2) * ((y_6)**41) + 
            L0x20019996_f * (x**3) * ((y_6)**41) + 
            L0x20019998_f * (x**0) * ((y_6)**42) + 
            L0x2001999a_f * (x**1) * ((y_6)**42) + 
            L0x2001999c_f * (x**2) * ((y_6)**42) + 
            L0x2001999e_f * (x**3) * ((y_6)**42) + 
            L0x200199a0_f * (x**0) * ((y_6)**43) + 
            L0x200199a2_f * (x**1) * ((y_6)**43) + 
            L0x200199a4_f * (x**2) * ((y_6)**43) + 
            L0x200199a6_f * (x**3) * ((y_6)**43) + 
            L0x200199a8_f * (x**0) * ((y_6)**44) + 
            L0x200199aa_f * (x**1) * ((y_6)**44) + 
            L0x200199ac_f * (x**2) * ((y_6)**44) + 
            L0x200199ae_f * (x**3) * ((y_6)**44) + 
            L0x200199b0_f * (x**0) * ((y_6)**45) + 
            L0x200199b2_f * (x**1) * ((y_6)**45) + 
            L0x200199b4_f * (x**2) * ((y_6)**45) + 
            L0x200199b6_f * (x**3) * ((y_6)**45) + 
            L0x200199b8_f * (x**0) * ((y_6)**46) + 
            L0x200199ba_f * (x**1) * ((y_6)**46) + 
            L0x200199bc_f * (x**2) * ((y_6)**46) + 
            L0x200199be_f * (x**3) * ((y_6)**46) + 
            L0x200199c0_f * (x**0) * ((y_6)**47) + 
            L0x200199c2_f * (x**1) * ((y_6)**47) + 
            L0x200199c4_f * (x**2) * ((y_6)**47) + 
            L0x200199c6_f * (x**3) * ((y_6)**47) + 
            L0x200199c8_f * (x**0) * ((y_6)**48) + 
            L0x200199ca_f * (x**1) * ((y_6)**48) + 
            L0x200199cc_f * (x**2) * ((y_6)**48) + 
            L0x200199ce_f * (x**3) * ((y_6)**48) + 
            L0x200199d0_f * (x**0) * ((y_6)**49) + 
            L0x200199d2_f * (x**1) * ((y_6)**49) + 
            L0x200199d4_f * (x**2) * ((y_6)**49) + 
            L0x200199d6_f * (x**3) * ((y_6)**49) + 
            L0x200199d8_f * (x**0) * ((y_6)**50) + 
            L0x200199da_f * (x**1) * ((y_6)**50) + 
            L0x200199dc_f * (x**2) * ((y_6)**50) + 
            L0x200199de_f * (x**3) * ((y_6)**50) + 
            L0x200199e0_f * (x**0) * ((y_6)**51) + 
            L0x200199e2_f * (x**1) * ((y_6)**51) + 
            L0x200199e4_f * (x**2) * ((y_6)**51) + 
            L0x200199e6_f * (x**3) * ((y_6)**51) + 
            L0x200199e8_f * (x**0) * ((y_6)**52) + 
            L0x200199ea_f * (x**1) * ((y_6)**52) + 
            L0x200199ec_f * (x**2) * ((y_6)**52) + 
            L0x200199ee_f * (x**3) * ((y_6)**52) + 
            L0x200199f0_f * (x**0) * ((y_6)**53) + 
            L0x200199f2_f * (x**1) * ((y_6)**53) + 
            L0x200199f4_f * (x**2) * ((y_6)**53) + 
            L0x200199f6_f * (x**3) * ((y_6)**53) + 
            L0x200199f8_f * (x**0) * ((y_6)**54) + 
            L0x200199fa_f * (x**1) * ((y_6)**54) + 
            L0x200199fc_f * (x**2) * ((y_6)**54) + 
            L0x200199fe_f * (x**3) * ((y_6)**54) + 
            L0x20019a00_f * (x**0) * ((y_6)**55) + 
            L0x20019a02_f * (x**1) * ((y_6)**55) + 
            L0x20019a04_f * (x**2) * ((y_6)**55) + 
            L0x20019a06_f * (x**3) * ((y_6)**55) + 
            L0x20019a08_f * (x**0) * ((y_6)**56) + 
            L0x20019a0a_f * (x**1) * ((y_6)**56) + 
            L0x20019a0c_f * (x**2) * ((y_6)**56) + 
            L0x20019a0e_f * (x**3) * ((y_6)**56) + 
            L0x20019a10_f * (x**0) * ((y_6)**57) + 
            L0x20019a12_f * (x**1) * ((y_6)**57) + 
            L0x20019a14_f * (x**2) * ((y_6)**57) + 
            L0x20019a16_f * (x**3) * ((y_6)**57) + 
            L0x20019a18_f * (x**0) * ((y_6)**58) + 
            L0x20019a1a_f * (x**1) * ((y_6)**58) + 
            L0x20019a1c_f * (x**2) * ((y_6)**58) + 
            L0x20019a1e_f * (x**3) * ((y_6)**58) + 
            L0x20019a20_f * (x**0) * ((y_6)**59) + 
            L0x20019a22_f * (x**1) * ((y_6)**59) + 
            L0x20019a24_f * (x**2) * ((y_6)**59) + 
            L0x20019a26_f * (x**3) * ((y_6)**59) + 
            L0x20019a28_f * (x**0) * ((y_6)**60) + 
            L0x20019a2a_f * (x**1) * ((y_6)**60) + 
            L0x20019a2c_f * (x**2) * ((y_6)**60) + 
            L0x20019a2e_f * (x**3) * ((y_6)**60) + 
            L0x20019a30_f * (x**0) * ((y_6)**61) + 
            L0x20019a32_f * (x**1) * ((y_6)**61) + 
            L0x20019a34_f * (x**2) * ((y_6)**61) + 
            L0x20019a36_f * (x**3) * ((y_6)**61) + 
            L0x20019a38_f * (x**0) * ((y_6)**62) + 
            L0x20019a3a_f * (x**1) * ((y_6)**62) + 
            L0x20019a3c_f * (x**2) * ((y_6)**62) + 
            L0x20019a3e_f * (x**3) * ((y_6)**62) + 
            L0x20019a40_f * (x**0) * ((y_6)**63) + 
            L0x20019a42_f * (x**1) * ((y_6)**63) + 
            L0x20019a44_f * (x**2) * ((y_6)**63) + 
            L0x20019a46_f * (x**3) * ((y_6)**63)
          )
          [25570049, x**4 - y_0_31 * 11533788, y_0_31 - 1]
  ] prove with [cuts [8, 26], all ghosts]
  &&
  true
;

cut (* 45 *)
  true && true;

(* slice 4 *)
cut (* 46 *)
  and [
    (* inp_poly_32 *)
    eqmod (2**32) * (inp_poly_32 * inp_poly_32)
          (
            L0x20019848_f * (x**0) * ((y_6)**0) + 
            L0x2001984a_f * (x**1) * ((y_6)**0) + 
            L0x2001984c_f * (x**2) * ((y_6)**0) + 
            L0x2001984e_f * (x**3) * ((y_6)**0) + 
            L0x20019850_f * (x**0) * ((y_6)**1) + 
            L0x20019852_f * (x**1) * ((y_6)**1) + 
            L0x20019854_f * (x**2) * ((y_6)**1) + 
            L0x20019856_f * (x**3) * ((y_6)**1) + 
            L0x20019858_f * (x**0) * ((y_6)**2) + 
            L0x2001985a_f * (x**1) * ((y_6)**2) + 
            L0x2001985c_f * (x**2) * ((y_6)**2) + 
            L0x2001985e_f * (x**3) * ((y_6)**2) + 
            L0x20019860_f * (x**0) * ((y_6)**3) + 
            L0x20019862_f * (x**1) * ((y_6)**3) + 
            L0x20019864_f * (x**2) * ((y_6)**3) + 
            L0x20019866_f * (x**3) * ((y_6)**3) + 
            L0x20019868_f * (x**0) * ((y_6)**4) + 
            L0x2001986a_f * (x**1) * ((y_6)**4) + 
            L0x2001986c_f * (x**2) * ((y_6)**4) + 
            L0x2001986e_f * (x**3) * ((y_6)**4) + 
            L0x20019870_f * (x**0) * ((y_6)**5) + 
            L0x20019872_f * (x**1) * ((y_6)**5) + 
            L0x20019874_f * (x**2) * ((y_6)**5) + 
            L0x20019876_f * (x**3) * ((y_6)**5) + 
            L0x20019878_f * (x**0) * ((y_6)**6) + 
            L0x2001987a_f * (x**1) * ((y_6)**6) + 
            L0x2001987c_f * (x**2) * ((y_6)**6) + 
            L0x2001987e_f * (x**3) * ((y_6)**6) + 
            L0x20019880_f * (x**0) * ((y_6)**7) + 
            L0x20019882_f * (x**1) * ((y_6)**7) + 
            L0x20019884_f * (x**2) * ((y_6)**7) + 
            L0x20019886_f * (x**3) * ((y_6)**7) + 
            L0x20019888_f * (x**0) * ((y_6)**8) + 
            L0x2001988a_f * (x**1) * ((y_6)**8) + 
            L0x2001988c_f * (x**2) * ((y_6)**8) + 
            L0x2001988e_f * (x**3) * ((y_6)**8) + 
            L0x20019890_f * (x**0) * ((y_6)**9) + 
            L0x20019892_f * (x**1) * ((y_6)**9) + 
            L0x20019894_f * (x**2) * ((y_6)**9) + 
            L0x20019896_f * (x**3) * ((y_6)**9) + 
            L0x20019898_f * (x**0) * ((y_6)**10) + 
            L0x2001989a_f * (x**1) * ((y_6)**10) + 
            L0x2001989c_f * (x**2) * ((y_6)**10) + 
            L0x2001989e_f * (x**3) * ((y_6)**10) + 
            L0x200198a0_f * (x**0) * ((y_6)**11) + 
            L0x200198a2_f * (x**1) * ((y_6)**11) + 
            L0x200198a4_f * (x**2) * ((y_6)**11) + 
            L0x200198a6_f * (x**3) * ((y_6)**11) + 
            L0x200198a8_f * (x**0) * ((y_6)**12) + 
            L0x200198aa_f * (x**1) * ((y_6)**12) + 
            L0x200198ac_f * (x**2) * ((y_6)**12) + 
            L0x200198ae_f * (x**3) * ((y_6)**12) + 
            L0x200198b0_f * (x**0) * ((y_6)**13) + 
            L0x200198b2_f * (x**1) * ((y_6)**13) + 
            L0x200198b4_f * (x**2) * ((y_6)**13) + 
            L0x200198b6_f * (x**3) * ((y_6)**13) + 
            L0x200198b8_f * (x**0) * ((y_6)**14) + 
            L0x200198ba_f * (x**1) * ((y_6)**14) + 
            L0x200198bc_f * (x**2) * ((y_6)**14) + 
            L0x200198be_f * (x**3) * ((y_6)**14) + 
            L0x200198c0_f * (x**0) * ((y_6)**15) + 
            L0x200198c2_f * (x**1) * ((y_6)**15) + 
            L0x200198c4_f * (x**2) * ((y_6)**15) + 
            L0x200198c6_f * (x**3) * ((y_6)**15) + 
            L0x200198c8_f * (x**0) * ((y_6)**16) + 
            L0x200198ca_f * (x**1) * ((y_6)**16) + 
            L0x200198cc_f * (x**2) * ((y_6)**16) + 
            L0x200198ce_f * (x**3) * ((y_6)**16) + 
            L0x200198d0_f * (x**0) * ((y_6)**17) + 
            L0x200198d2_f * (x**1) * ((y_6)**17) + 
            L0x200198d4_f * (x**2) * ((y_6)**17) + 
            L0x200198d6_f * (x**3) * ((y_6)**17) + 
            L0x200198d8_f * (x**0) * ((y_6)**18) + 
            L0x200198da_f * (x**1) * ((y_6)**18) + 
            L0x200198dc_f * (x**2) * ((y_6)**18) + 
            L0x200198de_f * (x**3) * ((y_6)**18) + 
            L0x200198e0_f * (x**0) * ((y_6)**19) + 
            L0x200198e2_f * (x**1) * ((y_6)**19) + 
            L0x200198e4_f * (x**2) * ((y_6)**19) + 
            L0x200198e6_f * (x**3) * ((y_6)**19) + 
            L0x200198e8_f * (x**0) * ((y_6)**20) + 
            L0x200198ea_f * (x**1) * ((y_6)**20) + 
            L0x200198ec_f * (x**2) * ((y_6)**20) + 
            L0x200198ee_f * (x**3) * ((y_6)**20) + 
            L0x200198f0_f * (x**0) * ((y_6)**21) + 
            L0x200198f2_f * (x**1) * ((y_6)**21) + 
            L0x200198f4_f * (x**2) * ((y_6)**21) + 
            L0x200198f6_f * (x**3) * ((y_6)**21) + 
            L0x200198f8_f * (x**0) * ((y_6)**22) + 
            L0x200198fa_f * (x**1) * ((y_6)**22) + 
            L0x200198fc_f * (x**2) * ((y_6)**22) + 
            L0x200198fe_f * (x**3) * ((y_6)**22) + 
            L0x20019900_f * (x**0) * ((y_6)**23) + 
            L0x20019902_f * (x**1) * ((y_6)**23) + 
            L0x20019904_f * (x**2) * ((y_6)**23) + 
            L0x20019906_f * (x**3) * ((y_6)**23) + 
            L0x20019908_f * (x**0) * ((y_6)**24) + 
            L0x2001990a_f * (x**1) * ((y_6)**24) + 
            L0x2001990c_f * (x**2) * ((y_6)**24) + 
            L0x2001990e_f * (x**3) * ((y_6)**24) + 
            L0x20019910_f * (x**0) * ((y_6)**25) + 
            L0x20019912_f * (x**1) * ((y_6)**25) + 
            L0x20019914_f * (x**2) * ((y_6)**25) + 
            L0x20019916_f * (x**3) * ((y_6)**25) + 
            L0x20019918_f * (x**0) * ((y_6)**26) + 
            L0x2001991a_f * (x**1) * ((y_6)**26) + 
            L0x2001991c_f * (x**2) * ((y_6)**26) + 
            L0x2001991e_f * (x**3) * ((y_6)**26) + 
            L0x20019920_f * (x**0) * ((y_6)**27) + 
            L0x20019922_f * (x**1) * ((y_6)**27) + 
            L0x20019924_f * (x**2) * ((y_6)**27) + 
            L0x20019926_f * (x**3) * ((y_6)**27) + 
            L0x20019928_f * (x**0) * ((y_6)**28) + 
            L0x2001992a_f * (x**1) * ((y_6)**28) + 
            L0x2001992c_f * (x**2) * ((y_6)**28) + 
            L0x2001992e_f * (x**3) * ((y_6)**28) + 
            L0x20019930_f * (x**0) * ((y_6)**29) + 
            L0x20019932_f * (x**1) * ((y_6)**29) + 
            L0x20019934_f * (x**2) * ((y_6)**29) + 
            L0x20019936_f * (x**3) * ((y_6)**29) + 
            L0x20019938_f * (x**0) * ((y_6)**30) + 
            L0x2001993a_f * (x**1) * ((y_6)**30) + 
            L0x2001993c_f * (x**2) * ((y_6)**30) + 
            L0x2001993e_f * (x**3) * ((y_6)**30) + 
            L0x20019940_f * (x**0) * ((y_6)**31) + 
            L0x20019942_f * (x**1) * ((y_6)**31) + 
            L0x20019944_f * (x**2) * ((y_6)**31) + 
            L0x20019946_f * (x**3) * ((y_6)**31) + 
            L0x20019948_f * (x**0) * ((y_6)**32) + 
            L0x2001994a_f * (x**1) * ((y_6)**32) + 
            L0x2001994c_f * (x**2) * ((y_6)**32) + 
            L0x2001994e_f * (x**3) * ((y_6)**32) + 
            L0x20019950_f * (x**0) * ((y_6)**33) + 
            L0x20019952_f * (x**1) * ((y_6)**33) + 
            L0x20019954_f * (x**2) * ((y_6)**33) + 
            L0x20019956_f * (x**3) * ((y_6)**33) + 
            L0x20019958_f * (x**0) * ((y_6)**34) + 
            L0x2001995a_f * (x**1) * ((y_6)**34) + 
            L0x2001995c_f * (x**2) * ((y_6)**34) + 
            L0x2001995e_f * (x**3) * ((y_6)**34) + 
            L0x20019960_f * (x**0) * ((y_6)**35) + 
            L0x20019962_f * (x**1) * ((y_6)**35) + 
            L0x20019964_f * (x**2) * ((y_6)**35) + 
            L0x20019966_f * (x**3) * ((y_6)**35) + 
            L0x20019968_f * (x**0) * ((y_6)**36) + 
            L0x2001996a_f * (x**1) * ((y_6)**36) + 
            L0x2001996c_f * (x**2) * ((y_6)**36) + 
            L0x2001996e_f * (x**3) * ((y_6)**36) + 
            L0x20019970_f * (x**0) * ((y_6)**37) + 
            L0x20019972_f * (x**1) * ((y_6)**37) + 
            L0x20019974_f * (x**2) * ((y_6)**37) + 
            L0x20019976_f * (x**3) * ((y_6)**37) + 
            L0x20019978_f * (x**0) * ((y_6)**38) + 
            L0x2001997a_f * (x**1) * ((y_6)**38) + 
            L0x2001997c_f * (x**2) * ((y_6)**38) + 
            L0x2001997e_f * (x**3) * ((y_6)**38) + 
            L0x20019980_f * (x**0) * ((y_6)**39) + 
            L0x20019982_f * (x**1) * ((y_6)**39) + 
            L0x20019984_f * (x**2) * ((y_6)**39) + 
            L0x20019986_f * (x**3) * ((y_6)**39) + 
            L0x20019988_f * (x**0) * ((y_6)**40) + 
            L0x2001998a_f * (x**1) * ((y_6)**40) + 
            L0x2001998c_f * (x**2) * ((y_6)**40) + 
            L0x2001998e_f * (x**3) * ((y_6)**40) + 
            L0x20019990_f * (x**0) * ((y_6)**41) + 
            L0x20019992_f * (x**1) * ((y_6)**41) + 
            L0x20019994_f * (x**2) * ((y_6)**41) + 
            L0x20019996_f * (x**3) * ((y_6)**41) + 
            L0x20019998_f * (x**0) * ((y_6)**42) + 
            L0x2001999a_f * (x**1) * ((y_6)**42) + 
            L0x2001999c_f * (x**2) * ((y_6)**42) + 
            L0x2001999e_f * (x**3) * ((y_6)**42) + 
            L0x200199a0_f * (x**0) * ((y_6)**43) + 
            L0x200199a2_f * (x**1) * ((y_6)**43) + 
            L0x200199a4_f * (x**2) * ((y_6)**43) + 
            L0x200199a6_f * (x**3) * ((y_6)**43) + 
            L0x200199a8_f * (x**0) * ((y_6)**44) + 
            L0x200199aa_f * (x**1) * ((y_6)**44) + 
            L0x200199ac_f * (x**2) * ((y_6)**44) + 
            L0x200199ae_f * (x**3) * ((y_6)**44) + 
            L0x200199b0_f * (x**0) * ((y_6)**45) + 
            L0x200199b2_f * (x**1) * ((y_6)**45) + 
            L0x200199b4_f * (x**2) * ((y_6)**45) + 
            L0x200199b6_f * (x**3) * ((y_6)**45) + 
            L0x200199b8_f * (x**0) * ((y_6)**46) + 
            L0x200199ba_f * (x**1) * ((y_6)**46) + 
            L0x200199bc_f * (x**2) * ((y_6)**46) + 
            L0x200199be_f * (x**3) * ((y_6)**46) + 
            L0x200199c0_f * (x**0) * ((y_6)**47) + 
            L0x200199c2_f * (x**1) * ((y_6)**47) + 
            L0x200199c4_f * (x**2) * ((y_6)**47) + 
            L0x200199c6_f * (x**3) * ((y_6)**47) + 
            L0x200199c8_f * (x**0) * ((y_6)**48) + 
            L0x200199ca_f * (x**1) * ((y_6)**48) + 
            L0x200199cc_f * (x**2) * ((y_6)**48) + 
            L0x200199ce_f * (x**3) * ((y_6)**48) + 
            L0x200199d0_f * (x**0) * ((y_6)**49) + 
            L0x200199d2_f * (x**1) * ((y_6)**49) + 
            L0x200199d4_f * (x**2) * ((y_6)**49) + 
            L0x200199d6_f * (x**3) * ((y_6)**49) + 
            L0x200199d8_f * (x**0) * ((y_6)**50) + 
            L0x200199da_f * (x**1) * ((y_6)**50) + 
            L0x200199dc_f * (x**2) * ((y_6)**50) + 
            L0x200199de_f * (x**3) * ((y_6)**50) + 
            L0x200199e0_f * (x**0) * ((y_6)**51) + 
            L0x200199e2_f * (x**1) * ((y_6)**51) + 
            L0x200199e4_f * (x**2) * ((y_6)**51) + 
            L0x200199e6_f * (x**3) * ((y_6)**51) + 
            L0x200199e8_f * (x**0) * ((y_6)**52) + 
            L0x200199ea_f * (x**1) * ((y_6)**52) + 
            L0x200199ec_f * (x**2) * ((y_6)**52) + 
            L0x200199ee_f * (x**3) * ((y_6)**52) + 
            L0x200199f0_f * (x**0) * ((y_6)**53) + 
            L0x200199f2_f * (x**1) * ((y_6)**53) + 
            L0x200199f4_f * (x**2) * ((y_6)**53) + 
            L0x200199f6_f * (x**3) * ((y_6)**53) + 
            L0x200199f8_f * (x**0) * ((y_6)**54) + 
            L0x200199fa_f * (x**1) * ((y_6)**54) + 
            L0x200199fc_f * (x**2) * ((y_6)**54) + 
            L0x200199fe_f * (x**3) * ((y_6)**54) + 
            L0x20019a00_f * (x**0) * ((y_6)**55) + 
            L0x20019a02_f * (x**1) * ((y_6)**55) + 
            L0x20019a04_f * (x**2) * ((y_6)**55) + 
            L0x20019a06_f * (x**3) * ((y_6)**55) + 
            L0x20019a08_f * (x**0) * ((y_6)**56) + 
            L0x20019a0a_f * (x**1) * ((y_6)**56) + 
            L0x20019a0c_f * (x**2) * ((y_6)**56) + 
            L0x20019a0e_f * (x**3) * ((y_6)**56) + 
            L0x20019a10_f * (x**0) * ((y_6)**57) + 
            L0x20019a12_f * (x**1) * ((y_6)**57) + 
            L0x20019a14_f * (x**2) * ((y_6)**57) + 
            L0x20019a16_f * (x**3) * ((y_6)**57) + 
            L0x20019a18_f * (x**0) * ((y_6)**58) + 
            L0x20019a1a_f * (x**1) * ((y_6)**58) + 
            L0x20019a1c_f * (x**2) * ((y_6)**58) + 
            L0x20019a1e_f * (x**3) * ((y_6)**58) + 
            L0x20019a20_f * (x**0) * ((y_6)**59) + 
            L0x20019a22_f * (x**1) * ((y_6)**59) + 
            L0x20019a24_f * (x**2) * ((y_6)**59) + 
            L0x20019a26_f * (x**3) * ((y_6)**59) + 
            L0x20019a28_f * (x**0) * ((y_6)**60) + 
            L0x20019a2a_f * (x**1) * ((y_6)**60) + 
            L0x20019a2c_f * (x**2) * ((y_6)**60) + 
            L0x20019a2e_f * (x**3) * ((y_6)**60) + 
            L0x20019a30_f * (x**0) * ((y_6)**61) + 
            L0x20019a32_f * (x**1) * ((y_6)**61) + 
            L0x20019a34_f * (x**2) * ((y_6)**61) + 
            L0x20019a36_f * (x**3) * ((y_6)**61) + 
            L0x20019a38_f * (x**0) * ((y_6)**62) + 
            L0x20019a3a_f * (x**1) * ((y_6)**62) + 
            L0x20019a3c_f * (x**2) * ((y_6)**62) + 
            L0x20019a3e_f * (x**3) * ((y_6)**62) + 
            L0x20019a40_f * (x**0) * ((y_6)**63) + 
            L0x20019a42_f * (x**1) * ((y_6)**63) + 
            L0x20019a44_f * (x**2) * ((y_6)**63) + 
            L0x20019a46_f * (x**3) * ((y_6)**63)
          )
          [25570049, x**4 - y_0_32 * 7847101, y_0_32 - 1],
    (* inp_poly_33 *)
    eqmod (2**32) * (inp_poly_33 * inp_poly_33)
          (
            L0x20019848_f * (x**0) * ((y_6)**0) + 
            L0x2001984a_f * (x**1) * ((y_6)**0) + 
            L0x2001984c_f * (x**2) * ((y_6)**0) + 
            L0x2001984e_f * (x**3) * ((y_6)**0) + 
            L0x20019850_f * (x**0) * ((y_6)**1) + 
            L0x20019852_f * (x**1) * ((y_6)**1) + 
            L0x20019854_f * (x**2) * ((y_6)**1) + 
            L0x20019856_f * (x**3) * ((y_6)**1) + 
            L0x20019858_f * (x**0) * ((y_6)**2) + 
            L0x2001985a_f * (x**1) * ((y_6)**2) + 
            L0x2001985c_f * (x**2) * ((y_6)**2) + 
            L0x2001985e_f * (x**3) * ((y_6)**2) + 
            L0x20019860_f * (x**0) * ((y_6)**3) + 
            L0x20019862_f * (x**1) * ((y_6)**3) + 
            L0x20019864_f * (x**2) * ((y_6)**3) + 
            L0x20019866_f * (x**3) * ((y_6)**3) + 
            L0x20019868_f * (x**0) * ((y_6)**4) + 
            L0x2001986a_f * (x**1) * ((y_6)**4) + 
            L0x2001986c_f * (x**2) * ((y_6)**4) + 
            L0x2001986e_f * (x**3) * ((y_6)**4) + 
            L0x20019870_f * (x**0) * ((y_6)**5) + 
            L0x20019872_f * (x**1) * ((y_6)**5) + 
            L0x20019874_f * (x**2) * ((y_6)**5) + 
            L0x20019876_f * (x**3) * ((y_6)**5) + 
            L0x20019878_f * (x**0) * ((y_6)**6) + 
            L0x2001987a_f * (x**1) * ((y_6)**6) + 
            L0x2001987c_f * (x**2) * ((y_6)**6) + 
            L0x2001987e_f * (x**3) * ((y_6)**6) + 
            L0x20019880_f * (x**0) * ((y_6)**7) + 
            L0x20019882_f * (x**1) * ((y_6)**7) + 
            L0x20019884_f * (x**2) * ((y_6)**7) + 
            L0x20019886_f * (x**3) * ((y_6)**7) + 
            L0x20019888_f * (x**0) * ((y_6)**8) + 
            L0x2001988a_f * (x**1) * ((y_6)**8) + 
            L0x2001988c_f * (x**2) * ((y_6)**8) + 
            L0x2001988e_f * (x**3) * ((y_6)**8) + 
            L0x20019890_f * (x**0) * ((y_6)**9) + 
            L0x20019892_f * (x**1) * ((y_6)**9) + 
            L0x20019894_f * (x**2) * ((y_6)**9) + 
            L0x20019896_f * (x**3) * ((y_6)**9) + 
            L0x20019898_f * (x**0) * ((y_6)**10) + 
            L0x2001989a_f * (x**1) * ((y_6)**10) + 
            L0x2001989c_f * (x**2) * ((y_6)**10) + 
            L0x2001989e_f * (x**3) * ((y_6)**10) + 
            L0x200198a0_f * (x**0) * ((y_6)**11) + 
            L0x200198a2_f * (x**1) * ((y_6)**11) + 
            L0x200198a4_f * (x**2) * ((y_6)**11) + 
            L0x200198a6_f * (x**3) * ((y_6)**11) + 
            L0x200198a8_f * (x**0) * ((y_6)**12) + 
            L0x200198aa_f * (x**1) * ((y_6)**12) + 
            L0x200198ac_f * (x**2) * ((y_6)**12) + 
            L0x200198ae_f * (x**3) * ((y_6)**12) + 
            L0x200198b0_f * (x**0) * ((y_6)**13) + 
            L0x200198b2_f * (x**1) * ((y_6)**13) + 
            L0x200198b4_f * (x**2) * ((y_6)**13) + 
            L0x200198b6_f * (x**3) * ((y_6)**13) + 
            L0x200198b8_f * (x**0) * ((y_6)**14) + 
            L0x200198ba_f * (x**1) * ((y_6)**14) + 
            L0x200198bc_f * (x**2) * ((y_6)**14) + 
            L0x200198be_f * (x**3) * ((y_6)**14) + 
            L0x200198c0_f * (x**0) * ((y_6)**15) + 
            L0x200198c2_f * (x**1) * ((y_6)**15) + 
            L0x200198c4_f * (x**2) * ((y_6)**15) + 
            L0x200198c6_f * (x**3) * ((y_6)**15) + 
            L0x200198c8_f * (x**0) * ((y_6)**16) + 
            L0x200198ca_f * (x**1) * ((y_6)**16) + 
            L0x200198cc_f * (x**2) * ((y_6)**16) + 
            L0x200198ce_f * (x**3) * ((y_6)**16) + 
            L0x200198d0_f * (x**0) * ((y_6)**17) + 
            L0x200198d2_f * (x**1) * ((y_6)**17) + 
            L0x200198d4_f * (x**2) * ((y_6)**17) + 
            L0x200198d6_f * (x**3) * ((y_6)**17) + 
            L0x200198d8_f * (x**0) * ((y_6)**18) + 
            L0x200198da_f * (x**1) * ((y_6)**18) + 
            L0x200198dc_f * (x**2) * ((y_6)**18) + 
            L0x200198de_f * (x**3) * ((y_6)**18) + 
            L0x200198e0_f * (x**0) * ((y_6)**19) + 
            L0x200198e2_f * (x**1) * ((y_6)**19) + 
            L0x200198e4_f * (x**2) * ((y_6)**19) + 
            L0x200198e6_f * (x**3) * ((y_6)**19) + 
            L0x200198e8_f * (x**0) * ((y_6)**20) + 
            L0x200198ea_f * (x**1) * ((y_6)**20) + 
            L0x200198ec_f * (x**2) * ((y_6)**20) + 
            L0x200198ee_f * (x**3) * ((y_6)**20) + 
            L0x200198f0_f * (x**0) * ((y_6)**21) + 
            L0x200198f2_f * (x**1) * ((y_6)**21) + 
            L0x200198f4_f * (x**2) * ((y_6)**21) + 
            L0x200198f6_f * (x**3) * ((y_6)**21) + 
            L0x200198f8_f * (x**0) * ((y_6)**22) + 
            L0x200198fa_f * (x**1) * ((y_6)**22) + 
            L0x200198fc_f * (x**2) * ((y_6)**22) + 
            L0x200198fe_f * (x**3) * ((y_6)**22) + 
            L0x20019900_f * (x**0) * ((y_6)**23) + 
            L0x20019902_f * (x**1) * ((y_6)**23) + 
            L0x20019904_f * (x**2) * ((y_6)**23) + 
            L0x20019906_f * (x**3) * ((y_6)**23) + 
            L0x20019908_f * (x**0) * ((y_6)**24) + 
            L0x2001990a_f * (x**1) * ((y_6)**24) + 
            L0x2001990c_f * (x**2) * ((y_6)**24) + 
            L0x2001990e_f * (x**3) * ((y_6)**24) + 
            L0x20019910_f * (x**0) * ((y_6)**25) + 
            L0x20019912_f * (x**1) * ((y_6)**25) + 
            L0x20019914_f * (x**2) * ((y_6)**25) + 
            L0x20019916_f * (x**3) * ((y_6)**25) + 
            L0x20019918_f * (x**0) * ((y_6)**26) + 
            L0x2001991a_f * (x**1) * ((y_6)**26) + 
            L0x2001991c_f * (x**2) * ((y_6)**26) + 
            L0x2001991e_f * (x**3) * ((y_6)**26) + 
            L0x20019920_f * (x**0) * ((y_6)**27) + 
            L0x20019922_f * (x**1) * ((y_6)**27) + 
            L0x20019924_f * (x**2) * ((y_6)**27) + 
            L0x20019926_f * (x**3) * ((y_6)**27) + 
            L0x20019928_f * (x**0) * ((y_6)**28) + 
            L0x2001992a_f * (x**1) * ((y_6)**28) + 
            L0x2001992c_f * (x**2) * ((y_6)**28) + 
            L0x2001992e_f * (x**3) * ((y_6)**28) + 
            L0x20019930_f * (x**0) * ((y_6)**29) + 
            L0x20019932_f * (x**1) * ((y_6)**29) + 
            L0x20019934_f * (x**2) * ((y_6)**29) + 
            L0x20019936_f * (x**3) * ((y_6)**29) + 
            L0x20019938_f * (x**0) * ((y_6)**30) + 
            L0x2001993a_f * (x**1) * ((y_6)**30) + 
            L0x2001993c_f * (x**2) * ((y_6)**30) + 
            L0x2001993e_f * (x**3) * ((y_6)**30) + 
            L0x20019940_f * (x**0) * ((y_6)**31) + 
            L0x20019942_f * (x**1) * ((y_6)**31) + 
            L0x20019944_f * (x**2) * ((y_6)**31) + 
            L0x20019946_f * (x**3) * ((y_6)**31) + 
            L0x20019948_f * (x**0) * ((y_6)**32) + 
            L0x2001994a_f * (x**1) * ((y_6)**32) + 
            L0x2001994c_f * (x**2) * ((y_6)**32) + 
            L0x2001994e_f * (x**3) * ((y_6)**32) + 
            L0x20019950_f * (x**0) * ((y_6)**33) + 
            L0x20019952_f * (x**1) * ((y_6)**33) + 
            L0x20019954_f * (x**2) * ((y_6)**33) + 
            L0x20019956_f * (x**3) * ((y_6)**33) + 
            L0x20019958_f * (x**0) * ((y_6)**34) + 
            L0x2001995a_f * (x**1) * ((y_6)**34) + 
            L0x2001995c_f * (x**2) * ((y_6)**34) + 
            L0x2001995e_f * (x**3) * ((y_6)**34) + 
            L0x20019960_f * (x**0) * ((y_6)**35) + 
            L0x20019962_f * (x**1) * ((y_6)**35) + 
            L0x20019964_f * (x**2) * ((y_6)**35) + 
            L0x20019966_f * (x**3) * ((y_6)**35) + 
            L0x20019968_f * (x**0) * ((y_6)**36) + 
            L0x2001996a_f * (x**1) * ((y_6)**36) + 
            L0x2001996c_f * (x**2) * ((y_6)**36) + 
            L0x2001996e_f * (x**3) * ((y_6)**36) + 
            L0x20019970_f * (x**0) * ((y_6)**37) + 
            L0x20019972_f * (x**1) * ((y_6)**37) + 
            L0x20019974_f * (x**2) * ((y_6)**37) + 
            L0x20019976_f * (x**3) * ((y_6)**37) + 
            L0x20019978_f * (x**0) * ((y_6)**38) + 
            L0x2001997a_f * (x**1) * ((y_6)**38) + 
            L0x2001997c_f * (x**2) * ((y_6)**38) + 
            L0x2001997e_f * (x**3) * ((y_6)**38) + 
            L0x20019980_f * (x**0) * ((y_6)**39) + 
            L0x20019982_f * (x**1) * ((y_6)**39) + 
            L0x20019984_f * (x**2) * ((y_6)**39) + 
            L0x20019986_f * (x**3) * ((y_6)**39) + 
            L0x20019988_f * (x**0) * ((y_6)**40) + 
            L0x2001998a_f * (x**1) * ((y_6)**40) + 
            L0x2001998c_f * (x**2) * ((y_6)**40) + 
            L0x2001998e_f * (x**3) * ((y_6)**40) + 
            L0x20019990_f * (x**0) * ((y_6)**41) + 
            L0x20019992_f * (x**1) * ((y_6)**41) + 
            L0x20019994_f * (x**2) * ((y_6)**41) + 
            L0x20019996_f * (x**3) * ((y_6)**41) + 
            L0x20019998_f * (x**0) * ((y_6)**42) + 
            L0x2001999a_f * (x**1) * ((y_6)**42) + 
            L0x2001999c_f * (x**2) * ((y_6)**42) + 
            L0x2001999e_f * (x**3) * ((y_6)**42) + 
            L0x200199a0_f * (x**0) * ((y_6)**43) + 
            L0x200199a2_f * (x**1) * ((y_6)**43) + 
            L0x200199a4_f * (x**2) * ((y_6)**43) + 
            L0x200199a6_f * (x**3) * ((y_6)**43) + 
            L0x200199a8_f * (x**0) * ((y_6)**44) + 
            L0x200199aa_f * (x**1) * ((y_6)**44) + 
            L0x200199ac_f * (x**2) * ((y_6)**44) + 
            L0x200199ae_f * (x**3) * ((y_6)**44) + 
            L0x200199b0_f * (x**0) * ((y_6)**45) + 
            L0x200199b2_f * (x**1) * ((y_6)**45) + 
            L0x200199b4_f * (x**2) * ((y_6)**45) + 
            L0x200199b6_f * (x**3) * ((y_6)**45) + 
            L0x200199b8_f * (x**0) * ((y_6)**46) + 
            L0x200199ba_f * (x**1) * ((y_6)**46) + 
            L0x200199bc_f * (x**2) * ((y_6)**46) + 
            L0x200199be_f * (x**3) * ((y_6)**46) + 
            L0x200199c0_f * (x**0) * ((y_6)**47) + 
            L0x200199c2_f * (x**1) * ((y_6)**47) + 
            L0x200199c4_f * (x**2) * ((y_6)**47) + 
            L0x200199c6_f * (x**3) * ((y_6)**47) + 
            L0x200199c8_f * (x**0) * ((y_6)**48) + 
            L0x200199ca_f * (x**1) * ((y_6)**48) + 
            L0x200199cc_f * (x**2) * ((y_6)**48) + 
            L0x200199ce_f * (x**3) * ((y_6)**48) + 
            L0x200199d0_f * (x**0) * ((y_6)**49) + 
            L0x200199d2_f * (x**1) * ((y_6)**49) + 
            L0x200199d4_f * (x**2) * ((y_6)**49) + 
            L0x200199d6_f * (x**3) * ((y_6)**49) + 
            L0x200199d8_f * (x**0) * ((y_6)**50) + 
            L0x200199da_f * (x**1) * ((y_6)**50) + 
            L0x200199dc_f * (x**2) * ((y_6)**50) + 
            L0x200199de_f * (x**3) * ((y_6)**50) + 
            L0x200199e0_f * (x**0) * ((y_6)**51) + 
            L0x200199e2_f * (x**1) * ((y_6)**51) + 
            L0x200199e4_f * (x**2) * ((y_6)**51) + 
            L0x200199e6_f * (x**3) * ((y_6)**51) + 
            L0x200199e8_f * (x**0) * ((y_6)**52) + 
            L0x200199ea_f * (x**1) * ((y_6)**52) + 
            L0x200199ec_f * (x**2) * ((y_6)**52) + 
            L0x200199ee_f * (x**3) * ((y_6)**52) + 
            L0x200199f0_f * (x**0) * ((y_6)**53) + 
            L0x200199f2_f * (x**1) * ((y_6)**53) + 
            L0x200199f4_f * (x**2) * ((y_6)**53) + 
            L0x200199f6_f * (x**3) * ((y_6)**53) + 
            L0x200199f8_f * (x**0) * ((y_6)**54) + 
            L0x200199fa_f * (x**1) * ((y_6)**54) + 
            L0x200199fc_f * (x**2) * ((y_6)**54) + 
            L0x200199fe_f * (x**3) * ((y_6)**54) + 
            L0x20019a00_f * (x**0) * ((y_6)**55) + 
            L0x20019a02_f * (x**1) * ((y_6)**55) + 
            L0x20019a04_f * (x**2) * ((y_6)**55) + 
            L0x20019a06_f * (x**3) * ((y_6)**55) + 
            L0x20019a08_f * (x**0) * ((y_6)**56) + 
            L0x20019a0a_f * (x**1) * ((y_6)**56) + 
            L0x20019a0c_f * (x**2) * ((y_6)**56) + 
            L0x20019a0e_f * (x**3) * ((y_6)**56) + 
            L0x20019a10_f * (x**0) * ((y_6)**57) + 
            L0x20019a12_f * (x**1) * ((y_6)**57) + 
            L0x20019a14_f * (x**2) * ((y_6)**57) + 
            L0x20019a16_f * (x**3) * ((y_6)**57) + 
            L0x20019a18_f * (x**0) * ((y_6)**58) + 
            L0x20019a1a_f * (x**1) * ((y_6)**58) + 
            L0x20019a1c_f * (x**2) * ((y_6)**58) + 
            L0x20019a1e_f * (x**3) * ((y_6)**58) + 
            L0x20019a20_f * (x**0) * ((y_6)**59) + 
            L0x20019a22_f * (x**1) * ((y_6)**59) + 
            L0x20019a24_f * (x**2) * ((y_6)**59) + 
            L0x20019a26_f * (x**3) * ((y_6)**59) + 
            L0x20019a28_f * (x**0) * ((y_6)**60) + 
            L0x20019a2a_f * (x**1) * ((y_6)**60) + 
            L0x20019a2c_f * (x**2) * ((y_6)**60) + 
            L0x20019a2e_f * (x**3) * ((y_6)**60) + 
            L0x20019a30_f * (x**0) * ((y_6)**61) + 
            L0x20019a32_f * (x**1) * ((y_6)**61) + 
            L0x20019a34_f * (x**2) * ((y_6)**61) + 
            L0x20019a36_f * (x**3) * ((y_6)**61) + 
            L0x20019a38_f * (x**0) * ((y_6)**62) + 
            L0x20019a3a_f * (x**1) * ((y_6)**62) + 
            L0x20019a3c_f * (x**2) * ((y_6)**62) + 
            L0x20019a3e_f * (x**3) * ((y_6)**62) + 
            L0x20019a40_f * (x**0) * ((y_6)**63) + 
            L0x20019a42_f * (x**1) * ((y_6)**63) + 
            L0x20019a44_f * (x**2) * ((y_6)**63) + 
            L0x20019a46_f * (x**3) * ((y_6)**63)
          )
          [25570049, x**4 - y_0_33 * 17722948, y_0_33 - 1],
    (* inp_poly_34 *)
    eqmod (2**32) * (inp_poly_34 * inp_poly_34)
          (
            L0x20019848_f * (x**0) * ((y_6)**0) + 
            L0x2001984a_f * (x**1) * ((y_6)**0) + 
            L0x2001984c_f * (x**2) * ((y_6)**0) + 
            L0x2001984e_f * (x**3) * ((y_6)**0) + 
            L0x20019850_f * (x**0) * ((y_6)**1) + 
            L0x20019852_f * (x**1) * ((y_6)**1) + 
            L0x20019854_f * (x**2) * ((y_6)**1) + 
            L0x20019856_f * (x**3) * ((y_6)**1) + 
            L0x20019858_f * (x**0) * ((y_6)**2) + 
            L0x2001985a_f * (x**1) * ((y_6)**2) + 
            L0x2001985c_f * (x**2) * ((y_6)**2) + 
            L0x2001985e_f * (x**3) * ((y_6)**2) + 
            L0x20019860_f * (x**0) * ((y_6)**3) + 
            L0x20019862_f * (x**1) * ((y_6)**3) + 
            L0x20019864_f * (x**2) * ((y_6)**3) + 
            L0x20019866_f * (x**3) * ((y_6)**3) + 
            L0x20019868_f * (x**0) * ((y_6)**4) + 
            L0x2001986a_f * (x**1) * ((y_6)**4) + 
            L0x2001986c_f * (x**2) * ((y_6)**4) + 
            L0x2001986e_f * (x**3) * ((y_6)**4) + 
            L0x20019870_f * (x**0) * ((y_6)**5) + 
            L0x20019872_f * (x**1) * ((y_6)**5) + 
            L0x20019874_f * (x**2) * ((y_6)**5) + 
            L0x20019876_f * (x**3) * ((y_6)**5) + 
            L0x20019878_f * (x**0) * ((y_6)**6) + 
            L0x2001987a_f * (x**1) * ((y_6)**6) + 
            L0x2001987c_f * (x**2) * ((y_6)**6) + 
            L0x2001987e_f * (x**3) * ((y_6)**6) + 
            L0x20019880_f * (x**0) * ((y_6)**7) + 
            L0x20019882_f * (x**1) * ((y_6)**7) + 
            L0x20019884_f * (x**2) * ((y_6)**7) + 
            L0x20019886_f * (x**3) * ((y_6)**7) + 
            L0x20019888_f * (x**0) * ((y_6)**8) + 
            L0x2001988a_f * (x**1) * ((y_6)**8) + 
            L0x2001988c_f * (x**2) * ((y_6)**8) + 
            L0x2001988e_f * (x**3) * ((y_6)**8) + 
            L0x20019890_f * (x**0) * ((y_6)**9) + 
            L0x20019892_f * (x**1) * ((y_6)**9) + 
            L0x20019894_f * (x**2) * ((y_6)**9) + 
            L0x20019896_f * (x**3) * ((y_6)**9) + 
            L0x20019898_f * (x**0) * ((y_6)**10) + 
            L0x2001989a_f * (x**1) * ((y_6)**10) + 
            L0x2001989c_f * (x**2) * ((y_6)**10) + 
            L0x2001989e_f * (x**3) * ((y_6)**10) + 
            L0x200198a0_f * (x**0) * ((y_6)**11) + 
            L0x200198a2_f * (x**1) * ((y_6)**11) + 
            L0x200198a4_f * (x**2) * ((y_6)**11) + 
            L0x200198a6_f * (x**3) * ((y_6)**11) + 
            L0x200198a8_f * (x**0) * ((y_6)**12) + 
            L0x200198aa_f * (x**1) * ((y_6)**12) + 
            L0x200198ac_f * (x**2) * ((y_6)**12) + 
            L0x200198ae_f * (x**3) * ((y_6)**12) + 
            L0x200198b0_f * (x**0) * ((y_6)**13) + 
            L0x200198b2_f * (x**1) * ((y_6)**13) + 
            L0x200198b4_f * (x**2) * ((y_6)**13) + 
            L0x200198b6_f * (x**3) * ((y_6)**13) + 
            L0x200198b8_f * (x**0) * ((y_6)**14) + 
            L0x200198ba_f * (x**1) * ((y_6)**14) + 
            L0x200198bc_f * (x**2) * ((y_6)**14) + 
            L0x200198be_f * (x**3) * ((y_6)**14) + 
            L0x200198c0_f * (x**0) * ((y_6)**15) + 
            L0x200198c2_f * (x**1) * ((y_6)**15) + 
            L0x200198c4_f * (x**2) * ((y_6)**15) + 
            L0x200198c6_f * (x**3) * ((y_6)**15) + 
            L0x200198c8_f * (x**0) * ((y_6)**16) + 
            L0x200198ca_f * (x**1) * ((y_6)**16) + 
            L0x200198cc_f * (x**2) * ((y_6)**16) + 
            L0x200198ce_f * (x**3) * ((y_6)**16) + 
            L0x200198d0_f * (x**0) * ((y_6)**17) + 
            L0x200198d2_f * (x**1) * ((y_6)**17) + 
            L0x200198d4_f * (x**2) * ((y_6)**17) + 
            L0x200198d6_f * (x**3) * ((y_6)**17) + 
            L0x200198d8_f * (x**0) * ((y_6)**18) + 
            L0x200198da_f * (x**1) * ((y_6)**18) + 
            L0x200198dc_f * (x**2) * ((y_6)**18) + 
            L0x200198de_f * (x**3) * ((y_6)**18) + 
            L0x200198e0_f * (x**0) * ((y_6)**19) + 
            L0x200198e2_f * (x**1) * ((y_6)**19) + 
            L0x200198e4_f * (x**2) * ((y_6)**19) + 
            L0x200198e6_f * (x**3) * ((y_6)**19) + 
            L0x200198e8_f * (x**0) * ((y_6)**20) + 
            L0x200198ea_f * (x**1) * ((y_6)**20) + 
            L0x200198ec_f * (x**2) * ((y_6)**20) + 
            L0x200198ee_f * (x**3) * ((y_6)**20) + 
            L0x200198f0_f * (x**0) * ((y_6)**21) + 
            L0x200198f2_f * (x**1) * ((y_6)**21) + 
            L0x200198f4_f * (x**2) * ((y_6)**21) + 
            L0x200198f6_f * (x**3) * ((y_6)**21) + 
            L0x200198f8_f * (x**0) * ((y_6)**22) + 
            L0x200198fa_f * (x**1) * ((y_6)**22) + 
            L0x200198fc_f * (x**2) * ((y_6)**22) + 
            L0x200198fe_f * (x**3) * ((y_6)**22) + 
            L0x20019900_f * (x**0) * ((y_6)**23) + 
            L0x20019902_f * (x**1) * ((y_6)**23) + 
            L0x20019904_f * (x**2) * ((y_6)**23) + 
            L0x20019906_f * (x**3) * ((y_6)**23) + 
            L0x20019908_f * (x**0) * ((y_6)**24) + 
            L0x2001990a_f * (x**1) * ((y_6)**24) + 
            L0x2001990c_f * (x**2) * ((y_6)**24) + 
            L0x2001990e_f * (x**3) * ((y_6)**24) + 
            L0x20019910_f * (x**0) * ((y_6)**25) + 
            L0x20019912_f * (x**1) * ((y_6)**25) + 
            L0x20019914_f * (x**2) * ((y_6)**25) + 
            L0x20019916_f * (x**3) * ((y_6)**25) + 
            L0x20019918_f * (x**0) * ((y_6)**26) + 
            L0x2001991a_f * (x**1) * ((y_6)**26) + 
            L0x2001991c_f * (x**2) * ((y_6)**26) + 
            L0x2001991e_f * (x**3) * ((y_6)**26) + 
            L0x20019920_f * (x**0) * ((y_6)**27) + 
            L0x20019922_f * (x**1) * ((y_6)**27) + 
            L0x20019924_f * (x**2) * ((y_6)**27) + 
            L0x20019926_f * (x**3) * ((y_6)**27) + 
            L0x20019928_f * (x**0) * ((y_6)**28) + 
            L0x2001992a_f * (x**1) * ((y_6)**28) + 
            L0x2001992c_f * (x**2) * ((y_6)**28) + 
            L0x2001992e_f * (x**3) * ((y_6)**28) + 
            L0x20019930_f * (x**0) * ((y_6)**29) + 
            L0x20019932_f * (x**1) * ((y_6)**29) + 
            L0x20019934_f * (x**2) * ((y_6)**29) + 
            L0x20019936_f * (x**3) * ((y_6)**29) + 
            L0x20019938_f * (x**0) * ((y_6)**30) + 
            L0x2001993a_f * (x**1) * ((y_6)**30) + 
            L0x2001993c_f * (x**2) * ((y_6)**30) + 
            L0x2001993e_f * (x**3) * ((y_6)**30) + 
            L0x20019940_f * (x**0) * ((y_6)**31) + 
            L0x20019942_f * (x**1) * ((y_6)**31) + 
            L0x20019944_f * (x**2) * ((y_6)**31) + 
            L0x20019946_f * (x**3) * ((y_6)**31) + 
            L0x20019948_f * (x**0) * ((y_6)**32) + 
            L0x2001994a_f * (x**1) * ((y_6)**32) + 
            L0x2001994c_f * (x**2) * ((y_6)**32) + 
            L0x2001994e_f * (x**3) * ((y_6)**32) + 
            L0x20019950_f * (x**0) * ((y_6)**33) + 
            L0x20019952_f * (x**1) * ((y_6)**33) + 
            L0x20019954_f * (x**2) * ((y_6)**33) + 
            L0x20019956_f * (x**3) * ((y_6)**33) + 
            L0x20019958_f * (x**0) * ((y_6)**34) + 
            L0x2001995a_f * (x**1) * ((y_6)**34) + 
            L0x2001995c_f * (x**2) * ((y_6)**34) + 
            L0x2001995e_f * (x**3) * ((y_6)**34) + 
            L0x20019960_f * (x**0) * ((y_6)**35) + 
            L0x20019962_f * (x**1) * ((y_6)**35) + 
            L0x20019964_f * (x**2) * ((y_6)**35) + 
            L0x20019966_f * (x**3) * ((y_6)**35) + 
            L0x20019968_f * (x**0) * ((y_6)**36) + 
            L0x2001996a_f * (x**1) * ((y_6)**36) + 
            L0x2001996c_f * (x**2) * ((y_6)**36) + 
            L0x2001996e_f * (x**3) * ((y_6)**36) + 
            L0x20019970_f * (x**0) * ((y_6)**37) + 
            L0x20019972_f * (x**1) * ((y_6)**37) + 
            L0x20019974_f * (x**2) * ((y_6)**37) + 
            L0x20019976_f * (x**3) * ((y_6)**37) + 
            L0x20019978_f * (x**0) * ((y_6)**38) + 
            L0x2001997a_f * (x**1) * ((y_6)**38) + 
            L0x2001997c_f * (x**2) * ((y_6)**38) + 
            L0x2001997e_f * (x**3) * ((y_6)**38) + 
            L0x20019980_f * (x**0) * ((y_6)**39) + 
            L0x20019982_f * (x**1) * ((y_6)**39) + 
            L0x20019984_f * (x**2) * ((y_6)**39) + 
            L0x20019986_f * (x**3) * ((y_6)**39) + 
            L0x20019988_f * (x**0) * ((y_6)**40) + 
            L0x2001998a_f * (x**1) * ((y_6)**40) + 
            L0x2001998c_f * (x**2) * ((y_6)**40) + 
            L0x2001998e_f * (x**3) * ((y_6)**40) + 
            L0x20019990_f * (x**0) * ((y_6)**41) + 
            L0x20019992_f * (x**1) * ((y_6)**41) + 
            L0x20019994_f * (x**2) * ((y_6)**41) + 
            L0x20019996_f * (x**3) * ((y_6)**41) + 
            L0x20019998_f * (x**0) * ((y_6)**42) + 
            L0x2001999a_f * (x**1) * ((y_6)**42) + 
            L0x2001999c_f * (x**2) * ((y_6)**42) + 
            L0x2001999e_f * (x**3) * ((y_6)**42) + 
            L0x200199a0_f * (x**0) * ((y_6)**43) + 
            L0x200199a2_f * (x**1) * ((y_6)**43) + 
            L0x200199a4_f * (x**2) * ((y_6)**43) + 
            L0x200199a6_f * (x**3) * ((y_6)**43) + 
            L0x200199a8_f * (x**0) * ((y_6)**44) + 
            L0x200199aa_f * (x**1) * ((y_6)**44) + 
            L0x200199ac_f * (x**2) * ((y_6)**44) + 
            L0x200199ae_f * (x**3) * ((y_6)**44) + 
            L0x200199b0_f * (x**0) * ((y_6)**45) + 
            L0x200199b2_f * (x**1) * ((y_6)**45) + 
            L0x200199b4_f * (x**2) * ((y_6)**45) + 
            L0x200199b6_f * (x**3) * ((y_6)**45) + 
            L0x200199b8_f * (x**0) * ((y_6)**46) + 
            L0x200199ba_f * (x**1) * ((y_6)**46) + 
            L0x200199bc_f * (x**2) * ((y_6)**46) + 
            L0x200199be_f * (x**3) * ((y_6)**46) + 
            L0x200199c0_f * (x**0) * ((y_6)**47) + 
            L0x200199c2_f * (x**1) * ((y_6)**47) + 
            L0x200199c4_f * (x**2) * ((y_6)**47) + 
            L0x200199c6_f * (x**3) * ((y_6)**47) + 
            L0x200199c8_f * (x**0) * ((y_6)**48) + 
            L0x200199ca_f * (x**1) * ((y_6)**48) + 
            L0x200199cc_f * (x**2) * ((y_6)**48) + 
            L0x200199ce_f * (x**3) * ((y_6)**48) + 
            L0x200199d0_f * (x**0) * ((y_6)**49) + 
            L0x200199d2_f * (x**1) * ((y_6)**49) + 
            L0x200199d4_f * (x**2) * ((y_6)**49) + 
            L0x200199d6_f * (x**3) * ((y_6)**49) + 
            L0x200199d8_f * (x**0) * ((y_6)**50) + 
            L0x200199da_f * (x**1) * ((y_6)**50) + 
            L0x200199dc_f * (x**2) * ((y_6)**50) + 
            L0x200199de_f * (x**3) * ((y_6)**50) + 
            L0x200199e0_f * (x**0) * ((y_6)**51) + 
            L0x200199e2_f * (x**1) * ((y_6)**51) + 
            L0x200199e4_f * (x**2) * ((y_6)**51) + 
            L0x200199e6_f * (x**3) * ((y_6)**51) + 
            L0x200199e8_f * (x**0) * ((y_6)**52) + 
            L0x200199ea_f * (x**1) * ((y_6)**52) + 
            L0x200199ec_f * (x**2) * ((y_6)**52) + 
            L0x200199ee_f * (x**3) * ((y_6)**52) + 
            L0x200199f0_f * (x**0) * ((y_6)**53) + 
            L0x200199f2_f * (x**1) * ((y_6)**53) + 
            L0x200199f4_f * (x**2) * ((y_6)**53) + 
            L0x200199f6_f * (x**3) * ((y_6)**53) + 
            L0x200199f8_f * (x**0) * ((y_6)**54) + 
            L0x200199fa_f * (x**1) * ((y_6)**54) + 
            L0x200199fc_f * (x**2) * ((y_6)**54) + 
            L0x200199fe_f * (x**3) * ((y_6)**54) + 
            L0x20019a00_f * (x**0) * ((y_6)**55) + 
            L0x20019a02_f * (x**1) * ((y_6)**55) + 
            L0x20019a04_f * (x**2) * ((y_6)**55) + 
            L0x20019a06_f * (x**3) * ((y_6)**55) + 
            L0x20019a08_f * (x**0) * ((y_6)**56) + 
            L0x20019a0a_f * (x**1) * ((y_6)**56) + 
            L0x20019a0c_f * (x**2) * ((y_6)**56) + 
            L0x20019a0e_f * (x**3) * ((y_6)**56) + 
            L0x20019a10_f * (x**0) * ((y_6)**57) + 
            L0x20019a12_f * (x**1) * ((y_6)**57) + 
            L0x20019a14_f * (x**2) * ((y_6)**57) + 
            L0x20019a16_f * (x**3) * ((y_6)**57) + 
            L0x20019a18_f * (x**0) * ((y_6)**58) + 
            L0x20019a1a_f * (x**1) * ((y_6)**58) + 
            L0x20019a1c_f * (x**2) * ((y_6)**58) + 
            L0x20019a1e_f * (x**3) * ((y_6)**58) + 
            L0x20019a20_f * (x**0) * ((y_6)**59) + 
            L0x20019a22_f * (x**1) * ((y_6)**59) + 
            L0x20019a24_f * (x**2) * ((y_6)**59) + 
            L0x20019a26_f * (x**3) * ((y_6)**59) + 
            L0x20019a28_f * (x**0) * ((y_6)**60) + 
            L0x20019a2a_f * (x**1) * ((y_6)**60) + 
            L0x20019a2c_f * (x**2) * ((y_6)**60) + 
            L0x20019a2e_f * (x**3) * ((y_6)**60) + 
            L0x20019a30_f * (x**0) * ((y_6)**61) + 
            L0x20019a32_f * (x**1) * ((y_6)**61) + 
            L0x20019a34_f * (x**2) * ((y_6)**61) + 
            L0x20019a36_f * (x**3) * ((y_6)**61) + 
            L0x20019a38_f * (x**0) * ((y_6)**62) + 
            L0x20019a3a_f * (x**1) * ((y_6)**62) + 
            L0x20019a3c_f * (x**2) * ((y_6)**62) + 
            L0x20019a3e_f * (x**3) * ((y_6)**62) + 
            L0x20019a40_f * (x**0) * ((y_6)**63) + 
            L0x20019a42_f * (x**1) * ((y_6)**63) + 
            L0x20019a44_f * (x**2) * ((y_6)**63) + 
            L0x20019a46_f * (x**3) * ((y_6)**63)
          )
          [25570049, x**4 - y_0_34 * 19240139, y_0_34 - 1],
    (* inp_poly_35 *)
    eqmod (2**32) * (inp_poly_35 * inp_poly_35)
          (
            L0x20019848_f * (x**0) * ((y_6)**0) + 
            L0x2001984a_f * (x**1) * ((y_6)**0) + 
            L0x2001984c_f * (x**2) * ((y_6)**0) + 
            L0x2001984e_f * (x**3) * ((y_6)**0) + 
            L0x20019850_f * (x**0) * ((y_6)**1) + 
            L0x20019852_f * (x**1) * ((y_6)**1) + 
            L0x20019854_f * (x**2) * ((y_6)**1) + 
            L0x20019856_f * (x**3) * ((y_6)**1) + 
            L0x20019858_f * (x**0) * ((y_6)**2) + 
            L0x2001985a_f * (x**1) * ((y_6)**2) + 
            L0x2001985c_f * (x**2) * ((y_6)**2) + 
            L0x2001985e_f * (x**3) * ((y_6)**2) + 
            L0x20019860_f * (x**0) * ((y_6)**3) + 
            L0x20019862_f * (x**1) * ((y_6)**3) + 
            L0x20019864_f * (x**2) * ((y_6)**3) + 
            L0x20019866_f * (x**3) * ((y_6)**3) + 
            L0x20019868_f * (x**0) * ((y_6)**4) + 
            L0x2001986a_f * (x**1) * ((y_6)**4) + 
            L0x2001986c_f * (x**2) * ((y_6)**4) + 
            L0x2001986e_f * (x**3) * ((y_6)**4) + 
            L0x20019870_f * (x**0) * ((y_6)**5) + 
            L0x20019872_f * (x**1) * ((y_6)**5) + 
            L0x20019874_f * (x**2) * ((y_6)**5) + 
            L0x20019876_f * (x**3) * ((y_6)**5) + 
            L0x20019878_f * (x**0) * ((y_6)**6) + 
            L0x2001987a_f * (x**1) * ((y_6)**6) + 
            L0x2001987c_f * (x**2) * ((y_6)**6) + 
            L0x2001987e_f * (x**3) * ((y_6)**6) + 
            L0x20019880_f * (x**0) * ((y_6)**7) + 
            L0x20019882_f * (x**1) * ((y_6)**7) + 
            L0x20019884_f * (x**2) * ((y_6)**7) + 
            L0x20019886_f * (x**3) * ((y_6)**7) + 
            L0x20019888_f * (x**0) * ((y_6)**8) + 
            L0x2001988a_f * (x**1) * ((y_6)**8) + 
            L0x2001988c_f * (x**2) * ((y_6)**8) + 
            L0x2001988e_f * (x**3) * ((y_6)**8) + 
            L0x20019890_f * (x**0) * ((y_6)**9) + 
            L0x20019892_f * (x**1) * ((y_6)**9) + 
            L0x20019894_f * (x**2) * ((y_6)**9) + 
            L0x20019896_f * (x**3) * ((y_6)**9) + 
            L0x20019898_f * (x**0) * ((y_6)**10) + 
            L0x2001989a_f * (x**1) * ((y_6)**10) + 
            L0x2001989c_f * (x**2) * ((y_6)**10) + 
            L0x2001989e_f * (x**3) * ((y_6)**10) + 
            L0x200198a0_f * (x**0) * ((y_6)**11) + 
            L0x200198a2_f * (x**1) * ((y_6)**11) + 
            L0x200198a4_f * (x**2) * ((y_6)**11) + 
            L0x200198a6_f * (x**3) * ((y_6)**11) + 
            L0x200198a8_f * (x**0) * ((y_6)**12) + 
            L0x200198aa_f * (x**1) * ((y_6)**12) + 
            L0x200198ac_f * (x**2) * ((y_6)**12) + 
            L0x200198ae_f * (x**3) * ((y_6)**12) + 
            L0x200198b0_f * (x**0) * ((y_6)**13) + 
            L0x200198b2_f * (x**1) * ((y_6)**13) + 
            L0x200198b4_f * (x**2) * ((y_6)**13) + 
            L0x200198b6_f * (x**3) * ((y_6)**13) + 
            L0x200198b8_f * (x**0) * ((y_6)**14) + 
            L0x200198ba_f * (x**1) * ((y_6)**14) + 
            L0x200198bc_f * (x**2) * ((y_6)**14) + 
            L0x200198be_f * (x**3) * ((y_6)**14) + 
            L0x200198c0_f * (x**0) * ((y_6)**15) + 
            L0x200198c2_f * (x**1) * ((y_6)**15) + 
            L0x200198c4_f * (x**2) * ((y_6)**15) + 
            L0x200198c6_f * (x**3) * ((y_6)**15) + 
            L0x200198c8_f * (x**0) * ((y_6)**16) + 
            L0x200198ca_f * (x**1) * ((y_6)**16) + 
            L0x200198cc_f * (x**2) * ((y_6)**16) + 
            L0x200198ce_f * (x**3) * ((y_6)**16) + 
            L0x200198d0_f * (x**0) * ((y_6)**17) + 
            L0x200198d2_f * (x**1) * ((y_6)**17) + 
            L0x200198d4_f * (x**2) * ((y_6)**17) + 
            L0x200198d6_f * (x**3) * ((y_6)**17) + 
            L0x200198d8_f * (x**0) * ((y_6)**18) + 
            L0x200198da_f * (x**1) * ((y_6)**18) + 
            L0x200198dc_f * (x**2) * ((y_6)**18) + 
            L0x200198de_f * (x**3) * ((y_6)**18) + 
            L0x200198e0_f * (x**0) * ((y_6)**19) + 
            L0x200198e2_f * (x**1) * ((y_6)**19) + 
            L0x200198e4_f * (x**2) * ((y_6)**19) + 
            L0x200198e6_f * (x**3) * ((y_6)**19) + 
            L0x200198e8_f * (x**0) * ((y_6)**20) + 
            L0x200198ea_f * (x**1) * ((y_6)**20) + 
            L0x200198ec_f * (x**2) * ((y_6)**20) + 
            L0x200198ee_f * (x**3) * ((y_6)**20) + 
            L0x200198f0_f * (x**0) * ((y_6)**21) + 
            L0x200198f2_f * (x**1) * ((y_6)**21) + 
            L0x200198f4_f * (x**2) * ((y_6)**21) + 
            L0x200198f6_f * (x**3) * ((y_6)**21) + 
            L0x200198f8_f * (x**0) * ((y_6)**22) + 
            L0x200198fa_f * (x**1) * ((y_6)**22) + 
            L0x200198fc_f * (x**2) * ((y_6)**22) + 
            L0x200198fe_f * (x**3) * ((y_6)**22) + 
            L0x20019900_f * (x**0) * ((y_6)**23) + 
            L0x20019902_f * (x**1) * ((y_6)**23) + 
            L0x20019904_f * (x**2) * ((y_6)**23) + 
            L0x20019906_f * (x**3) * ((y_6)**23) + 
            L0x20019908_f * (x**0) * ((y_6)**24) + 
            L0x2001990a_f * (x**1) * ((y_6)**24) + 
            L0x2001990c_f * (x**2) * ((y_6)**24) + 
            L0x2001990e_f * (x**3) * ((y_6)**24) + 
            L0x20019910_f * (x**0) * ((y_6)**25) + 
            L0x20019912_f * (x**1) * ((y_6)**25) + 
            L0x20019914_f * (x**2) * ((y_6)**25) + 
            L0x20019916_f * (x**3) * ((y_6)**25) + 
            L0x20019918_f * (x**0) * ((y_6)**26) + 
            L0x2001991a_f * (x**1) * ((y_6)**26) + 
            L0x2001991c_f * (x**2) * ((y_6)**26) + 
            L0x2001991e_f * (x**3) * ((y_6)**26) + 
            L0x20019920_f * (x**0) * ((y_6)**27) + 
            L0x20019922_f * (x**1) * ((y_6)**27) + 
            L0x20019924_f * (x**2) * ((y_6)**27) + 
            L0x20019926_f * (x**3) * ((y_6)**27) + 
            L0x20019928_f * (x**0) * ((y_6)**28) + 
            L0x2001992a_f * (x**1) * ((y_6)**28) + 
            L0x2001992c_f * (x**2) * ((y_6)**28) + 
            L0x2001992e_f * (x**3) * ((y_6)**28) + 
            L0x20019930_f * (x**0) * ((y_6)**29) + 
            L0x20019932_f * (x**1) * ((y_6)**29) + 
            L0x20019934_f * (x**2) * ((y_6)**29) + 
            L0x20019936_f * (x**3) * ((y_6)**29) + 
            L0x20019938_f * (x**0) * ((y_6)**30) + 
            L0x2001993a_f * (x**1) * ((y_6)**30) + 
            L0x2001993c_f * (x**2) * ((y_6)**30) + 
            L0x2001993e_f * (x**3) * ((y_6)**30) + 
            L0x20019940_f * (x**0) * ((y_6)**31) + 
            L0x20019942_f * (x**1) * ((y_6)**31) + 
            L0x20019944_f * (x**2) * ((y_6)**31) + 
            L0x20019946_f * (x**3) * ((y_6)**31) + 
            L0x20019948_f * (x**0) * ((y_6)**32) + 
            L0x2001994a_f * (x**1) * ((y_6)**32) + 
            L0x2001994c_f * (x**2) * ((y_6)**32) + 
            L0x2001994e_f * (x**3) * ((y_6)**32) + 
            L0x20019950_f * (x**0) * ((y_6)**33) + 
            L0x20019952_f * (x**1) * ((y_6)**33) + 
            L0x20019954_f * (x**2) * ((y_6)**33) + 
            L0x20019956_f * (x**3) * ((y_6)**33) + 
            L0x20019958_f * (x**0) * ((y_6)**34) + 
            L0x2001995a_f * (x**1) * ((y_6)**34) + 
            L0x2001995c_f * (x**2) * ((y_6)**34) + 
            L0x2001995e_f * (x**3) * ((y_6)**34) + 
            L0x20019960_f * (x**0) * ((y_6)**35) + 
            L0x20019962_f * (x**1) * ((y_6)**35) + 
            L0x20019964_f * (x**2) * ((y_6)**35) + 
            L0x20019966_f * (x**3) * ((y_6)**35) + 
            L0x20019968_f * (x**0) * ((y_6)**36) + 
            L0x2001996a_f * (x**1) * ((y_6)**36) + 
            L0x2001996c_f * (x**2) * ((y_6)**36) + 
            L0x2001996e_f * (x**3) * ((y_6)**36) + 
            L0x20019970_f * (x**0) * ((y_6)**37) + 
            L0x20019972_f * (x**1) * ((y_6)**37) + 
            L0x20019974_f * (x**2) * ((y_6)**37) + 
            L0x20019976_f * (x**3) * ((y_6)**37) + 
            L0x20019978_f * (x**0) * ((y_6)**38) + 
            L0x2001997a_f * (x**1) * ((y_6)**38) + 
            L0x2001997c_f * (x**2) * ((y_6)**38) + 
            L0x2001997e_f * (x**3) * ((y_6)**38) + 
            L0x20019980_f * (x**0) * ((y_6)**39) + 
            L0x20019982_f * (x**1) * ((y_6)**39) + 
            L0x20019984_f * (x**2) * ((y_6)**39) + 
            L0x20019986_f * (x**3) * ((y_6)**39) + 
            L0x20019988_f * (x**0) * ((y_6)**40) + 
            L0x2001998a_f * (x**1) * ((y_6)**40) + 
            L0x2001998c_f * (x**2) * ((y_6)**40) + 
            L0x2001998e_f * (x**3) * ((y_6)**40) + 
            L0x20019990_f * (x**0) * ((y_6)**41) + 
            L0x20019992_f * (x**1) * ((y_6)**41) + 
            L0x20019994_f * (x**2) * ((y_6)**41) + 
            L0x20019996_f * (x**3) * ((y_6)**41) + 
            L0x20019998_f * (x**0) * ((y_6)**42) + 
            L0x2001999a_f * (x**1) * ((y_6)**42) + 
            L0x2001999c_f * (x**2) * ((y_6)**42) + 
            L0x2001999e_f * (x**3) * ((y_6)**42) + 
            L0x200199a0_f * (x**0) * ((y_6)**43) + 
            L0x200199a2_f * (x**1) * ((y_6)**43) + 
            L0x200199a4_f * (x**2) * ((y_6)**43) + 
            L0x200199a6_f * (x**3) * ((y_6)**43) + 
            L0x200199a8_f * (x**0) * ((y_6)**44) + 
            L0x200199aa_f * (x**1) * ((y_6)**44) + 
            L0x200199ac_f * (x**2) * ((y_6)**44) + 
            L0x200199ae_f * (x**3) * ((y_6)**44) + 
            L0x200199b0_f * (x**0) * ((y_6)**45) + 
            L0x200199b2_f * (x**1) * ((y_6)**45) + 
            L0x200199b4_f * (x**2) * ((y_6)**45) + 
            L0x200199b6_f * (x**3) * ((y_6)**45) + 
            L0x200199b8_f * (x**0) * ((y_6)**46) + 
            L0x200199ba_f * (x**1) * ((y_6)**46) + 
            L0x200199bc_f * (x**2) * ((y_6)**46) + 
            L0x200199be_f * (x**3) * ((y_6)**46) + 
            L0x200199c0_f * (x**0) * ((y_6)**47) + 
            L0x200199c2_f * (x**1) * ((y_6)**47) + 
            L0x200199c4_f * (x**2) * ((y_6)**47) + 
            L0x200199c6_f * (x**3) * ((y_6)**47) + 
            L0x200199c8_f * (x**0) * ((y_6)**48) + 
            L0x200199ca_f * (x**1) * ((y_6)**48) + 
            L0x200199cc_f * (x**2) * ((y_6)**48) + 
            L0x200199ce_f * (x**3) * ((y_6)**48) + 
            L0x200199d0_f * (x**0) * ((y_6)**49) + 
            L0x200199d2_f * (x**1) * ((y_6)**49) + 
            L0x200199d4_f * (x**2) * ((y_6)**49) + 
            L0x200199d6_f * (x**3) * ((y_6)**49) + 
            L0x200199d8_f * (x**0) * ((y_6)**50) + 
            L0x200199da_f * (x**1) * ((y_6)**50) + 
            L0x200199dc_f * (x**2) * ((y_6)**50) + 
            L0x200199de_f * (x**3) * ((y_6)**50) + 
            L0x200199e0_f * (x**0) * ((y_6)**51) + 
            L0x200199e2_f * (x**1) * ((y_6)**51) + 
            L0x200199e4_f * (x**2) * ((y_6)**51) + 
            L0x200199e6_f * (x**3) * ((y_6)**51) + 
            L0x200199e8_f * (x**0) * ((y_6)**52) + 
            L0x200199ea_f * (x**1) * ((y_6)**52) + 
            L0x200199ec_f * (x**2) * ((y_6)**52) + 
            L0x200199ee_f * (x**3) * ((y_6)**52) + 
            L0x200199f0_f * (x**0) * ((y_6)**53) + 
            L0x200199f2_f * (x**1) * ((y_6)**53) + 
            L0x200199f4_f * (x**2) * ((y_6)**53) + 
            L0x200199f6_f * (x**3) * ((y_6)**53) + 
            L0x200199f8_f * (x**0) * ((y_6)**54) + 
            L0x200199fa_f * (x**1) * ((y_6)**54) + 
            L0x200199fc_f * (x**2) * ((y_6)**54) + 
            L0x200199fe_f * (x**3) * ((y_6)**54) + 
            L0x20019a00_f * (x**0) * ((y_6)**55) + 
            L0x20019a02_f * (x**1) * ((y_6)**55) + 
            L0x20019a04_f * (x**2) * ((y_6)**55) + 
            L0x20019a06_f * (x**3) * ((y_6)**55) + 
            L0x20019a08_f * (x**0) * ((y_6)**56) + 
            L0x20019a0a_f * (x**1) * ((y_6)**56) + 
            L0x20019a0c_f * (x**2) * ((y_6)**56) + 
            L0x20019a0e_f * (x**3) * ((y_6)**56) + 
            L0x20019a10_f * (x**0) * ((y_6)**57) + 
            L0x20019a12_f * (x**1) * ((y_6)**57) + 
            L0x20019a14_f * (x**2) * ((y_6)**57) + 
            L0x20019a16_f * (x**3) * ((y_6)**57) + 
            L0x20019a18_f * (x**0) * ((y_6)**58) + 
            L0x20019a1a_f * (x**1) * ((y_6)**58) + 
            L0x20019a1c_f * (x**2) * ((y_6)**58) + 
            L0x20019a1e_f * (x**3) * ((y_6)**58) + 
            L0x20019a20_f * (x**0) * ((y_6)**59) + 
            L0x20019a22_f * (x**1) * ((y_6)**59) + 
            L0x20019a24_f * (x**2) * ((y_6)**59) + 
            L0x20019a26_f * (x**3) * ((y_6)**59) + 
            L0x20019a28_f * (x**0) * ((y_6)**60) + 
            L0x20019a2a_f * (x**1) * ((y_6)**60) + 
            L0x20019a2c_f * (x**2) * ((y_6)**60) + 
            L0x20019a2e_f * (x**3) * ((y_6)**60) + 
            L0x20019a30_f * (x**0) * ((y_6)**61) + 
            L0x20019a32_f * (x**1) * ((y_6)**61) + 
            L0x20019a34_f * (x**2) * ((y_6)**61) + 
            L0x20019a36_f * (x**3) * ((y_6)**61) + 
            L0x20019a38_f * (x**0) * ((y_6)**62) + 
            L0x20019a3a_f * (x**1) * ((y_6)**62) + 
            L0x20019a3c_f * (x**2) * ((y_6)**62) + 
            L0x20019a3e_f * (x**3) * ((y_6)**62) + 
            L0x20019a40_f * (x**0) * ((y_6)**63) + 
            L0x20019a42_f * (x**1) * ((y_6)**63) + 
            L0x20019a44_f * (x**2) * ((y_6)**63) + 
            L0x20019a46_f * (x**3) * ((y_6)**63)
          )
          [25570049, x**4 - y_0_35 * 6329910, y_0_35 - 1],
    (* inp_poly_36 *)
    eqmod (2**32) * (inp_poly_36 * inp_poly_36)
          (
            L0x20019848_f * (x**0) * ((y_6)**0) + 
            L0x2001984a_f * (x**1) * ((y_6)**0) + 
            L0x2001984c_f * (x**2) * ((y_6)**0) + 
            L0x2001984e_f * (x**3) * ((y_6)**0) + 
            L0x20019850_f * (x**0) * ((y_6)**1) + 
            L0x20019852_f * (x**1) * ((y_6)**1) + 
            L0x20019854_f * (x**2) * ((y_6)**1) + 
            L0x20019856_f * (x**3) * ((y_6)**1) + 
            L0x20019858_f * (x**0) * ((y_6)**2) + 
            L0x2001985a_f * (x**1) * ((y_6)**2) + 
            L0x2001985c_f * (x**2) * ((y_6)**2) + 
            L0x2001985e_f * (x**3) * ((y_6)**2) + 
            L0x20019860_f * (x**0) * ((y_6)**3) + 
            L0x20019862_f * (x**1) * ((y_6)**3) + 
            L0x20019864_f * (x**2) * ((y_6)**3) + 
            L0x20019866_f * (x**3) * ((y_6)**3) + 
            L0x20019868_f * (x**0) * ((y_6)**4) + 
            L0x2001986a_f * (x**1) * ((y_6)**4) + 
            L0x2001986c_f * (x**2) * ((y_6)**4) + 
            L0x2001986e_f * (x**3) * ((y_6)**4) + 
            L0x20019870_f * (x**0) * ((y_6)**5) + 
            L0x20019872_f * (x**1) * ((y_6)**5) + 
            L0x20019874_f * (x**2) * ((y_6)**5) + 
            L0x20019876_f * (x**3) * ((y_6)**5) + 
            L0x20019878_f * (x**0) * ((y_6)**6) + 
            L0x2001987a_f * (x**1) * ((y_6)**6) + 
            L0x2001987c_f * (x**2) * ((y_6)**6) + 
            L0x2001987e_f * (x**3) * ((y_6)**6) + 
            L0x20019880_f * (x**0) * ((y_6)**7) + 
            L0x20019882_f * (x**1) * ((y_6)**7) + 
            L0x20019884_f * (x**2) * ((y_6)**7) + 
            L0x20019886_f * (x**3) * ((y_6)**7) + 
            L0x20019888_f * (x**0) * ((y_6)**8) + 
            L0x2001988a_f * (x**1) * ((y_6)**8) + 
            L0x2001988c_f * (x**2) * ((y_6)**8) + 
            L0x2001988e_f * (x**3) * ((y_6)**8) + 
            L0x20019890_f * (x**0) * ((y_6)**9) + 
            L0x20019892_f * (x**1) * ((y_6)**9) + 
            L0x20019894_f * (x**2) * ((y_6)**9) + 
            L0x20019896_f * (x**3) * ((y_6)**9) + 
            L0x20019898_f * (x**0) * ((y_6)**10) + 
            L0x2001989a_f * (x**1) * ((y_6)**10) + 
            L0x2001989c_f * (x**2) * ((y_6)**10) + 
            L0x2001989e_f * (x**3) * ((y_6)**10) + 
            L0x200198a0_f * (x**0) * ((y_6)**11) + 
            L0x200198a2_f * (x**1) * ((y_6)**11) + 
            L0x200198a4_f * (x**2) * ((y_6)**11) + 
            L0x200198a6_f * (x**3) * ((y_6)**11) + 
            L0x200198a8_f * (x**0) * ((y_6)**12) + 
            L0x200198aa_f * (x**1) * ((y_6)**12) + 
            L0x200198ac_f * (x**2) * ((y_6)**12) + 
            L0x200198ae_f * (x**3) * ((y_6)**12) + 
            L0x200198b0_f * (x**0) * ((y_6)**13) + 
            L0x200198b2_f * (x**1) * ((y_6)**13) + 
            L0x200198b4_f * (x**2) * ((y_6)**13) + 
            L0x200198b6_f * (x**3) * ((y_6)**13) + 
            L0x200198b8_f * (x**0) * ((y_6)**14) + 
            L0x200198ba_f * (x**1) * ((y_6)**14) + 
            L0x200198bc_f * (x**2) * ((y_6)**14) + 
            L0x200198be_f * (x**3) * ((y_6)**14) + 
            L0x200198c0_f * (x**0) * ((y_6)**15) + 
            L0x200198c2_f * (x**1) * ((y_6)**15) + 
            L0x200198c4_f * (x**2) * ((y_6)**15) + 
            L0x200198c6_f * (x**3) * ((y_6)**15) + 
            L0x200198c8_f * (x**0) * ((y_6)**16) + 
            L0x200198ca_f * (x**1) * ((y_6)**16) + 
            L0x200198cc_f * (x**2) * ((y_6)**16) + 
            L0x200198ce_f * (x**3) * ((y_6)**16) + 
            L0x200198d0_f * (x**0) * ((y_6)**17) + 
            L0x200198d2_f * (x**1) * ((y_6)**17) + 
            L0x200198d4_f * (x**2) * ((y_6)**17) + 
            L0x200198d6_f * (x**3) * ((y_6)**17) + 
            L0x200198d8_f * (x**0) * ((y_6)**18) + 
            L0x200198da_f * (x**1) * ((y_6)**18) + 
            L0x200198dc_f * (x**2) * ((y_6)**18) + 
            L0x200198de_f * (x**3) * ((y_6)**18) + 
            L0x200198e0_f * (x**0) * ((y_6)**19) + 
            L0x200198e2_f * (x**1) * ((y_6)**19) + 
            L0x200198e4_f * (x**2) * ((y_6)**19) + 
            L0x200198e6_f * (x**3) * ((y_6)**19) + 
            L0x200198e8_f * (x**0) * ((y_6)**20) + 
            L0x200198ea_f * (x**1) * ((y_6)**20) + 
            L0x200198ec_f * (x**2) * ((y_6)**20) + 
            L0x200198ee_f * (x**3) * ((y_6)**20) + 
            L0x200198f0_f * (x**0) * ((y_6)**21) + 
            L0x200198f2_f * (x**1) * ((y_6)**21) + 
            L0x200198f4_f * (x**2) * ((y_6)**21) + 
            L0x200198f6_f * (x**3) * ((y_6)**21) + 
            L0x200198f8_f * (x**0) * ((y_6)**22) + 
            L0x200198fa_f * (x**1) * ((y_6)**22) + 
            L0x200198fc_f * (x**2) * ((y_6)**22) + 
            L0x200198fe_f * (x**3) * ((y_6)**22) + 
            L0x20019900_f * (x**0) * ((y_6)**23) + 
            L0x20019902_f * (x**1) * ((y_6)**23) + 
            L0x20019904_f * (x**2) * ((y_6)**23) + 
            L0x20019906_f * (x**3) * ((y_6)**23) + 
            L0x20019908_f * (x**0) * ((y_6)**24) + 
            L0x2001990a_f * (x**1) * ((y_6)**24) + 
            L0x2001990c_f * (x**2) * ((y_6)**24) + 
            L0x2001990e_f * (x**3) * ((y_6)**24) + 
            L0x20019910_f * (x**0) * ((y_6)**25) + 
            L0x20019912_f * (x**1) * ((y_6)**25) + 
            L0x20019914_f * (x**2) * ((y_6)**25) + 
            L0x20019916_f * (x**3) * ((y_6)**25) + 
            L0x20019918_f * (x**0) * ((y_6)**26) + 
            L0x2001991a_f * (x**1) * ((y_6)**26) + 
            L0x2001991c_f * (x**2) * ((y_6)**26) + 
            L0x2001991e_f * (x**3) * ((y_6)**26) + 
            L0x20019920_f * (x**0) * ((y_6)**27) + 
            L0x20019922_f * (x**1) * ((y_6)**27) + 
            L0x20019924_f * (x**2) * ((y_6)**27) + 
            L0x20019926_f * (x**3) * ((y_6)**27) + 
            L0x20019928_f * (x**0) * ((y_6)**28) + 
            L0x2001992a_f * (x**1) * ((y_6)**28) + 
            L0x2001992c_f * (x**2) * ((y_6)**28) + 
            L0x2001992e_f * (x**3) * ((y_6)**28) + 
            L0x20019930_f * (x**0) * ((y_6)**29) + 
            L0x20019932_f * (x**1) * ((y_6)**29) + 
            L0x20019934_f * (x**2) * ((y_6)**29) + 
            L0x20019936_f * (x**3) * ((y_6)**29) + 
            L0x20019938_f * (x**0) * ((y_6)**30) + 
            L0x2001993a_f * (x**1) * ((y_6)**30) + 
            L0x2001993c_f * (x**2) * ((y_6)**30) + 
            L0x2001993e_f * (x**3) * ((y_6)**30) + 
            L0x20019940_f * (x**0) * ((y_6)**31) + 
            L0x20019942_f * (x**1) * ((y_6)**31) + 
            L0x20019944_f * (x**2) * ((y_6)**31) + 
            L0x20019946_f * (x**3) * ((y_6)**31) + 
            L0x20019948_f * (x**0) * ((y_6)**32) + 
            L0x2001994a_f * (x**1) * ((y_6)**32) + 
            L0x2001994c_f * (x**2) * ((y_6)**32) + 
            L0x2001994e_f * (x**3) * ((y_6)**32) + 
            L0x20019950_f * (x**0) * ((y_6)**33) + 
            L0x20019952_f * (x**1) * ((y_6)**33) + 
            L0x20019954_f * (x**2) * ((y_6)**33) + 
            L0x20019956_f * (x**3) * ((y_6)**33) + 
            L0x20019958_f * (x**0) * ((y_6)**34) + 
            L0x2001995a_f * (x**1) * ((y_6)**34) + 
            L0x2001995c_f * (x**2) * ((y_6)**34) + 
            L0x2001995e_f * (x**3) * ((y_6)**34) + 
            L0x20019960_f * (x**0) * ((y_6)**35) + 
            L0x20019962_f * (x**1) * ((y_6)**35) + 
            L0x20019964_f * (x**2) * ((y_6)**35) + 
            L0x20019966_f * (x**3) * ((y_6)**35) + 
            L0x20019968_f * (x**0) * ((y_6)**36) + 
            L0x2001996a_f * (x**1) * ((y_6)**36) + 
            L0x2001996c_f * (x**2) * ((y_6)**36) + 
            L0x2001996e_f * (x**3) * ((y_6)**36) + 
            L0x20019970_f * (x**0) * ((y_6)**37) + 
            L0x20019972_f * (x**1) * ((y_6)**37) + 
            L0x20019974_f * (x**2) * ((y_6)**37) + 
            L0x20019976_f * (x**3) * ((y_6)**37) + 
            L0x20019978_f * (x**0) * ((y_6)**38) + 
            L0x2001997a_f * (x**1) * ((y_6)**38) + 
            L0x2001997c_f * (x**2) * ((y_6)**38) + 
            L0x2001997e_f * (x**3) * ((y_6)**38) + 
            L0x20019980_f * (x**0) * ((y_6)**39) + 
            L0x20019982_f * (x**1) * ((y_6)**39) + 
            L0x20019984_f * (x**2) * ((y_6)**39) + 
            L0x20019986_f * (x**3) * ((y_6)**39) + 
            L0x20019988_f * (x**0) * ((y_6)**40) + 
            L0x2001998a_f * (x**1) * ((y_6)**40) + 
            L0x2001998c_f * (x**2) * ((y_6)**40) + 
            L0x2001998e_f * (x**3) * ((y_6)**40) + 
            L0x20019990_f * (x**0) * ((y_6)**41) + 
            L0x20019992_f * (x**1) * ((y_6)**41) + 
            L0x20019994_f * (x**2) * ((y_6)**41) + 
            L0x20019996_f * (x**3) * ((y_6)**41) + 
            L0x20019998_f * (x**0) * ((y_6)**42) + 
            L0x2001999a_f * (x**1) * ((y_6)**42) + 
            L0x2001999c_f * (x**2) * ((y_6)**42) + 
            L0x2001999e_f * (x**3) * ((y_6)**42) + 
            L0x200199a0_f * (x**0) * ((y_6)**43) + 
            L0x200199a2_f * (x**1) * ((y_6)**43) + 
            L0x200199a4_f * (x**2) * ((y_6)**43) + 
            L0x200199a6_f * (x**3) * ((y_6)**43) + 
            L0x200199a8_f * (x**0) * ((y_6)**44) + 
            L0x200199aa_f * (x**1) * ((y_6)**44) + 
            L0x200199ac_f * (x**2) * ((y_6)**44) + 
            L0x200199ae_f * (x**3) * ((y_6)**44) + 
            L0x200199b0_f * (x**0) * ((y_6)**45) + 
            L0x200199b2_f * (x**1) * ((y_6)**45) + 
            L0x200199b4_f * (x**2) * ((y_6)**45) + 
            L0x200199b6_f * (x**3) * ((y_6)**45) + 
            L0x200199b8_f * (x**0) * ((y_6)**46) + 
            L0x200199ba_f * (x**1) * ((y_6)**46) + 
            L0x200199bc_f * (x**2) * ((y_6)**46) + 
            L0x200199be_f * (x**3) * ((y_6)**46) + 
            L0x200199c0_f * (x**0) * ((y_6)**47) + 
            L0x200199c2_f * (x**1) * ((y_6)**47) + 
            L0x200199c4_f * (x**2) * ((y_6)**47) + 
            L0x200199c6_f * (x**3) * ((y_6)**47) + 
            L0x200199c8_f * (x**0) * ((y_6)**48) + 
            L0x200199ca_f * (x**1) * ((y_6)**48) + 
            L0x200199cc_f * (x**2) * ((y_6)**48) + 
            L0x200199ce_f * (x**3) * ((y_6)**48) + 
            L0x200199d0_f * (x**0) * ((y_6)**49) + 
            L0x200199d2_f * (x**1) * ((y_6)**49) + 
            L0x200199d4_f * (x**2) * ((y_6)**49) + 
            L0x200199d6_f * (x**3) * ((y_6)**49) + 
            L0x200199d8_f * (x**0) * ((y_6)**50) + 
            L0x200199da_f * (x**1) * ((y_6)**50) + 
            L0x200199dc_f * (x**2) * ((y_6)**50) + 
            L0x200199de_f * (x**3) * ((y_6)**50) + 
            L0x200199e0_f * (x**0) * ((y_6)**51) + 
            L0x200199e2_f * (x**1) * ((y_6)**51) + 
            L0x200199e4_f * (x**2) * ((y_6)**51) + 
            L0x200199e6_f * (x**3) * ((y_6)**51) + 
            L0x200199e8_f * (x**0) * ((y_6)**52) + 
            L0x200199ea_f * (x**1) * ((y_6)**52) + 
            L0x200199ec_f * (x**2) * ((y_6)**52) + 
            L0x200199ee_f * (x**3) * ((y_6)**52) + 
            L0x200199f0_f * (x**0) * ((y_6)**53) + 
            L0x200199f2_f * (x**1) * ((y_6)**53) + 
            L0x200199f4_f * (x**2) * ((y_6)**53) + 
            L0x200199f6_f * (x**3) * ((y_6)**53) + 
            L0x200199f8_f * (x**0) * ((y_6)**54) + 
            L0x200199fa_f * (x**1) * ((y_6)**54) + 
            L0x200199fc_f * (x**2) * ((y_6)**54) + 
            L0x200199fe_f * (x**3) * ((y_6)**54) + 
            L0x20019a00_f * (x**0) * ((y_6)**55) + 
            L0x20019a02_f * (x**1) * ((y_6)**55) + 
            L0x20019a04_f * (x**2) * ((y_6)**55) + 
            L0x20019a06_f * (x**3) * ((y_6)**55) + 
            L0x20019a08_f * (x**0) * ((y_6)**56) + 
            L0x20019a0a_f * (x**1) * ((y_6)**56) + 
            L0x20019a0c_f * (x**2) * ((y_6)**56) + 
            L0x20019a0e_f * (x**3) * ((y_6)**56) + 
            L0x20019a10_f * (x**0) * ((y_6)**57) + 
            L0x20019a12_f * (x**1) * ((y_6)**57) + 
            L0x20019a14_f * (x**2) * ((y_6)**57) + 
            L0x20019a16_f * (x**3) * ((y_6)**57) + 
            L0x20019a18_f * (x**0) * ((y_6)**58) + 
            L0x20019a1a_f * (x**1) * ((y_6)**58) + 
            L0x20019a1c_f * (x**2) * ((y_6)**58) + 
            L0x20019a1e_f * (x**3) * ((y_6)**58) + 
            L0x20019a20_f * (x**0) * ((y_6)**59) + 
            L0x20019a22_f * (x**1) * ((y_6)**59) + 
            L0x20019a24_f * (x**2) * ((y_6)**59) + 
            L0x20019a26_f * (x**3) * ((y_6)**59) + 
            L0x20019a28_f * (x**0) * ((y_6)**60) + 
            L0x20019a2a_f * (x**1) * ((y_6)**60) + 
            L0x20019a2c_f * (x**2) * ((y_6)**60) + 
            L0x20019a2e_f * (x**3) * ((y_6)**60) + 
            L0x20019a30_f * (x**0) * ((y_6)**61) + 
            L0x20019a32_f * (x**1) * ((y_6)**61) + 
            L0x20019a34_f * (x**2) * ((y_6)**61) + 
            L0x20019a36_f * (x**3) * ((y_6)**61) + 
            L0x20019a38_f * (x**0) * ((y_6)**62) + 
            L0x20019a3a_f * (x**1) * ((y_6)**62) + 
            L0x20019a3c_f * (x**2) * ((y_6)**62) + 
            L0x20019a3e_f * (x**3) * ((y_6)**62) + 
            L0x20019a40_f * (x**0) * ((y_6)**63) + 
            L0x20019a42_f * (x**1) * ((y_6)**63) + 
            L0x20019a44_f * (x**2) * ((y_6)**63) + 
            L0x20019a46_f * (x**3) * ((y_6)**63)
          )
          [25570049, x**4 - y_0_36 * 5192558, y_0_36 - 1],
    (* inp_poly_37 *)
    eqmod (2**32) * (inp_poly_37 * inp_poly_37)
          (
            L0x20019848_f * (x**0) * ((y_6)**0) + 
            L0x2001984a_f * (x**1) * ((y_6)**0) + 
            L0x2001984c_f * (x**2) * ((y_6)**0) + 
            L0x2001984e_f * (x**3) * ((y_6)**0) + 
            L0x20019850_f * (x**0) * ((y_6)**1) + 
            L0x20019852_f * (x**1) * ((y_6)**1) + 
            L0x20019854_f * (x**2) * ((y_6)**1) + 
            L0x20019856_f * (x**3) * ((y_6)**1) + 
            L0x20019858_f * (x**0) * ((y_6)**2) + 
            L0x2001985a_f * (x**1) * ((y_6)**2) + 
            L0x2001985c_f * (x**2) * ((y_6)**2) + 
            L0x2001985e_f * (x**3) * ((y_6)**2) + 
            L0x20019860_f * (x**0) * ((y_6)**3) + 
            L0x20019862_f * (x**1) * ((y_6)**3) + 
            L0x20019864_f * (x**2) * ((y_6)**3) + 
            L0x20019866_f * (x**3) * ((y_6)**3) + 
            L0x20019868_f * (x**0) * ((y_6)**4) + 
            L0x2001986a_f * (x**1) * ((y_6)**4) + 
            L0x2001986c_f * (x**2) * ((y_6)**4) + 
            L0x2001986e_f * (x**3) * ((y_6)**4) + 
            L0x20019870_f * (x**0) * ((y_6)**5) + 
            L0x20019872_f * (x**1) * ((y_6)**5) + 
            L0x20019874_f * (x**2) * ((y_6)**5) + 
            L0x20019876_f * (x**3) * ((y_6)**5) + 
            L0x20019878_f * (x**0) * ((y_6)**6) + 
            L0x2001987a_f * (x**1) * ((y_6)**6) + 
            L0x2001987c_f * (x**2) * ((y_6)**6) + 
            L0x2001987e_f * (x**3) * ((y_6)**6) + 
            L0x20019880_f * (x**0) * ((y_6)**7) + 
            L0x20019882_f * (x**1) * ((y_6)**7) + 
            L0x20019884_f * (x**2) * ((y_6)**7) + 
            L0x20019886_f * (x**3) * ((y_6)**7) + 
            L0x20019888_f * (x**0) * ((y_6)**8) + 
            L0x2001988a_f * (x**1) * ((y_6)**8) + 
            L0x2001988c_f * (x**2) * ((y_6)**8) + 
            L0x2001988e_f * (x**3) * ((y_6)**8) + 
            L0x20019890_f * (x**0) * ((y_6)**9) + 
            L0x20019892_f * (x**1) * ((y_6)**9) + 
            L0x20019894_f * (x**2) * ((y_6)**9) + 
            L0x20019896_f * (x**3) * ((y_6)**9) + 
            L0x20019898_f * (x**0) * ((y_6)**10) + 
            L0x2001989a_f * (x**1) * ((y_6)**10) + 
            L0x2001989c_f * (x**2) * ((y_6)**10) + 
            L0x2001989e_f * (x**3) * ((y_6)**10) + 
            L0x200198a0_f * (x**0) * ((y_6)**11) + 
            L0x200198a2_f * (x**1) * ((y_6)**11) + 
            L0x200198a4_f * (x**2) * ((y_6)**11) + 
            L0x200198a6_f * (x**3) * ((y_6)**11) + 
            L0x200198a8_f * (x**0) * ((y_6)**12) + 
            L0x200198aa_f * (x**1) * ((y_6)**12) + 
            L0x200198ac_f * (x**2) * ((y_6)**12) + 
            L0x200198ae_f * (x**3) * ((y_6)**12) + 
            L0x200198b0_f * (x**0) * ((y_6)**13) + 
            L0x200198b2_f * (x**1) * ((y_6)**13) + 
            L0x200198b4_f * (x**2) * ((y_6)**13) + 
            L0x200198b6_f * (x**3) * ((y_6)**13) + 
            L0x200198b8_f * (x**0) * ((y_6)**14) + 
            L0x200198ba_f * (x**1) * ((y_6)**14) + 
            L0x200198bc_f * (x**2) * ((y_6)**14) + 
            L0x200198be_f * (x**3) * ((y_6)**14) + 
            L0x200198c0_f * (x**0) * ((y_6)**15) + 
            L0x200198c2_f * (x**1) * ((y_6)**15) + 
            L0x200198c4_f * (x**2) * ((y_6)**15) + 
            L0x200198c6_f * (x**3) * ((y_6)**15) + 
            L0x200198c8_f * (x**0) * ((y_6)**16) + 
            L0x200198ca_f * (x**1) * ((y_6)**16) + 
            L0x200198cc_f * (x**2) * ((y_6)**16) + 
            L0x200198ce_f * (x**3) * ((y_6)**16) + 
            L0x200198d0_f * (x**0) * ((y_6)**17) + 
            L0x200198d2_f * (x**1) * ((y_6)**17) + 
            L0x200198d4_f * (x**2) * ((y_6)**17) + 
            L0x200198d6_f * (x**3) * ((y_6)**17) + 
            L0x200198d8_f * (x**0) * ((y_6)**18) + 
            L0x200198da_f * (x**1) * ((y_6)**18) + 
            L0x200198dc_f * (x**2) * ((y_6)**18) + 
            L0x200198de_f * (x**3) * ((y_6)**18) + 
            L0x200198e0_f * (x**0) * ((y_6)**19) + 
            L0x200198e2_f * (x**1) * ((y_6)**19) + 
            L0x200198e4_f * (x**2) * ((y_6)**19) + 
            L0x200198e6_f * (x**3) * ((y_6)**19) + 
            L0x200198e8_f * (x**0) * ((y_6)**20) + 
            L0x200198ea_f * (x**1) * ((y_6)**20) + 
            L0x200198ec_f * (x**2) * ((y_6)**20) + 
            L0x200198ee_f * (x**3) * ((y_6)**20) + 
            L0x200198f0_f * (x**0) * ((y_6)**21) + 
            L0x200198f2_f * (x**1) * ((y_6)**21) + 
            L0x200198f4_f * (x**2) * ((y_6)**21) + 
            L0x200198f6_f * (x**3) * ((y_6)**21) + 
            L0x200198f8_f * (x**0) * ((y_6)**22) + 
            L0x200198fa_f * (x**1) * ((y_6)**22) + 
            L0x200198fc_f * (x**2) * ((y_6)**22) + 
            L0x200198fe_f * (x**3) * ((y_6)**22) + 
            L0x20019900_f * (x**0) * ((y_6)**23) + 
            L0x20019902_f * (x**1) * ((y_6)**23) + 
            L0x20019904_f * (x**2) * ((y_6)**23) + 
            L0x20019906_f * (x**3) * ((y_6)**23) + 
            L0x20019908_f * (x**0) * ((y_6)**24) + 
            L0x2001990a_f * (x**1) * ((y_6)**24) + 
            L0x2001990c_f * (x**2) * ((y_6)**24) + 
            L0x2001990e_f * (x**3) * ((y_6)**24) + 
            L0x20019910_f * (x**0) * ((y_6)**25) + 
            L0x20019912_f * (x**1) * ((y_6)**25) + 
            L0x20019914_f * (x**2) * ((y_6)**25) + 
            L0x20019916_f * (x**3) * ((y_6)**25) + 
            L0x20019918_f * (x**0) * ((y_6)**26) + 
            L0x2001991a_f * (x**1) * ((y_6)**26) + 
            L0x2001991c_f * (x**2) * ((y_6)**26) + 
            L0x2001991e_f * (x**3) * ((y_6)**26) + 
            L0x20019920_f * (x**0) * ((y_6)**27) + 
            L0x20019922_f * (x**1) * ((y_6)**27) + 
            L0x20019924_f * (x**2) * ((y_6)**27) + 
            L0x20019926_f * (x**3) * ((y_6)**27) + 
            L0x20019928_f * (x**0) * ((y_6)**28) + 
            L0x2001992a_f * (x**1) * ((y_6)**28) + 
            L0x2001992c_f * (x**2) * ((y_6)**28) + 
            L0x2001992e_f * (x**3) * ((y_6)**28) + 
            L0x20019930_f * (x**0) * ((y_6)**29) + 
            L0x20019932_f * (x**1) * ((y_6)**29) + 
            L0x20019934_f * (x**2) * ((y_6)**29) + 
            L0x20019936_f * (x**3) * ((y_6)**29) + 
            L0x20019938_f * (x**0) * ((y_6)**30) + 
            L0x2001993a_f * (x**1) * ((y_6)**30) + 
            L0x2001993c_f * (x**2) * ((y_6)**30) + 
            L0x2001993e_f * (x**3) * ((y_6)**30) + 
            L0x20019940_f * (x**0) * ((y_6)**31) + 
            L0x20019942_f * (x**1) * ((y_6)**31) + 
            L0x20019944_f * (x**2) * ((y_6)**31) + 
            L0x20019946_f * (x**3) * ((y_6)**31) + 
            L0x20019948_f * (x**0) * ((y_6)**32) + 
            L0x2001994a_f * (x**1) * ((y_6)**32) + 
            L0x2001994c_f * (x**2) * ((y_6)**32) + 
            L0x2001994e_f * (x**3) * ((y_6)**32) + 
            L0x20019950_f * (x**0) * ((y_6)**33) + 
            L0x20019952_f * (x**1) * ((y_6)**33) + 
            L0x20019954_f * (x**2) * ((y_6)**33) + 
            L0x20019956_f * (x**3) * ((y_6)**33) + 
            L0x20019958_f * (x**0) * ((y_6)**34) + 
            L0x2001995a_f * (x**1) * ((y_6)**34) + 
            L0x2001995c_f * (x**2) * ((y_6)**34) + 
            L0x2001995e_f * (x**3) * ((y_6)**34) + 
            L0x20019960_f * (x**0) * ((y_6)**35) + 
            L0x20019962_f * (x**1) * ((y_6)**35) + 
            L0x20019964_f * (x**2) * ((y_6)**35) + 
            L0x20019966_f * (x**3) * ((y_6)**35) + 
            L0x20019968_f * (x**0) * ((y_6)**36) + 
            L0x2001996a_f * (x**1) * ((y_6)**36) + 
            L0x2001996c_f * (x**2) * ((y_6)**36) + 
            L0x2001996e_f * (x**3) * ((y_6)**36) + 
            L0x20019970_f * (x**0) * ((y_6)**37) + 
            L0x20019972_f * (x**1) * ((y_6)**37) + 
            L0x20019974_f * (x**2) * ((y_6)**37) + 
            L0x20019976_f * (x**3) * ((y_6)**37) + 
            L0x20019978_f * (x**0) * ((y_6)**38) + 
            L0x2001997a_f * (x**1) * ((y_6)**38) + 
            L0x2001997c_f * (x**2) * ((y_6)**38) + 
            L0x2001997e_f * (x**3) * ((y_6)**38) + 
            L0x20019980_f * (x**0) * ((y_6)**39) + 
            L0x20019982_f * (x**1) * ((y_6)**39) + 
            L0x20019984_f * (x**2) * ((y_6)**39) + 
            L0x20019986_f * (x**3) * ((y_6)**39) + 
            L0x20019988_f * (x**0) * ((y_6)**40) + 
            L0x2001998a_f * (x**1) * ((y_6)**40) + 
            L0x2001998c_f * (x**2) * ((y_6)**40) + 
            L0x2001998e_f * (x**3) * ((y_6)**40) + 
            L0x20019990_f * (x**0) * ((y_6)**41) + 
            L0x20019992_f * (x**1) * ((y_6)**41) + 
            L0x20019994_f * (x**2) * ((y_6)**41) + 
            L0x20019996_f * (x**3) * ((y_6)**41) + 
            L0x20019998_f * (x**0) * ((y_6)**42) + 
            L0x2001999a_f * (x**1) * ((y_6)**42) + 
            L0x2001999c_f * (x**2) * ((y_6)**42) + 
            L0x2001999e_f * (x**3) * ((y_6)**42) + 
            L0x200199a0_f * (x**0) * ((y_6)**43) + 
            L0x200199a2_f * (x**1) * ((y_6)**43) + 
            L0x200199a4_f * (x**2) * ((y_6)**43) + 
            L0x200199a6_f * (x**3) * ((y_6)**43) + 
            L0x200199a8_f * (x**0) * ((y_6)**44) + 
            L0x200199aa_f * (x**1) * ((y_6)**44) + 
            L0x200199ac_f * (x**2) * ((y_6)**44) + 
            L0x200199ae_f * (x**3) * ((y_6)**44) + 
            L0x200199b0_f * (x**0) * ((y_6)**45) + 
            L0x200199b2_f * (x**1) * ((y_6)**45) + 
            L0x200199b4_f * (x**2) * ((y_6)**45) + 
            L0x200199b6_f * (x**3) * ((y_6)**45) + 
            L0x200199b8_f * (x**0) * ((y_6)**46) + 
            L0x200199ba_f * (x**1) * ((y_6)**46) + 
            L0x200199bc_f * (x**2) * ((y_6)**46) + 
            L0x200199be_f * (x**3) * ((y_6)**46) + 
            L0x200199c0_f * (x**0) * ((y_6)**47) + 
            L0x200199c2_f * (x**1) * ((y_6)**47) + 
            L0x200199c4_f * (x**2) * ((y_6)**47) + 
            L0x200199c6_f * (x**3) * ((y_6)**47) + 
            L0x200199c8_f * (x**0) * ((y_6)**48) + 
            L0x200199ca_f * (x**1) * ((y_6)**48) + 
            L0x200199cc_f * (x**2) * ((y_6)**48) + 
            L0x200199ce_f * (x**3) * ((y_6)**48) + 
            L0x200199d0_f * (x**0) * ((y_6)**49) + 
            L0x200199d2_f * (x**1) * ((y_6)**49) + 
            L0x200199d4_f * (x**2) * ((y_6)**49) + 
            L0x200199d6_f * (x**3) * ((y_6)**49) + 
            L0x200199d8_f * (x**0) * ((y_6)**50) + 
            L0x200199da_f * (x**1) * ((y_6)**50) + 
            L0x200199dc_f * (x**2) * ((y_6)**50) + 
            L0x200199de_f * (x**3) * ((y_6)**50) + 
            L0x200199e0_f * (x**0) * ((y_6)**51) + 
            L0x200199e2_f * (x**1) * ((y_6)**51) + 
            L0x200199e4_f * (x**2) * ((y_6)**51) + 
            L0x200199e6_f * (x**3) * ((y_6)**51) + 
            L0x200199e8_f * (x**0) * ((y_6)**52) + 
            L0x200199ea_f * (x**1) * ((y_6)**52) + 
            L0x200199ec_f * (x**2) * ((y_6)**52) + 
            L0x200199ee_f * (x**3) * ((y_6)**52) + 
            L0x200199f0_f * (x**0) * ((y_6)**53) + 
            L0x200199f2_f * (x**1) * ((y_6)**53) + 
            L0x200199f4_f * (x**2) * ((y_6)**53) + 
            L0x200199f6_f * (x**3) * ((y_6)**53) + 
            L0x200199f8_f * (x**0) * ((y_6)**54) + 
            L0x200199fa_f * (x**1) * ((y_6)**54) + 
            L0x200199fc_f * (x**2) * ((y_6)**54) + 
            L0x200199fe_f * (x**3) * ((y_6)**54) + 
            L0x20019a00_f * (x**0) * ((y_6)**55) + 
            L0x20019a02_f * (x**1) * ((y_6)**55) + 
            L0x20019a04_f * (x**2) * ((y_6)**55) + 
            L0x20019a06_f * (x**3) * ((y_6)**55) + 
            L0x20019a08_f * (x**0) * ((y_6)**56) + 
            L0x20019a0a_f * (x**1) * ((y_6)**56) + 
            L0x20019a0c_f * (x**2) * ((y_6)**56) + 
            L0x20019a0e_f * (x**3) * ((y_6)**56) + 
            L0x20019a10_f * (x**0) * ((y_6)**57) + 
            L0x20019a12_f * (x**1) * ((y_6)**57) + 
            L0x20019a14_f * (x**2) * ((y_6)**57) + 
            L0x20019a16_f * (x**3) * ((y_6)**57) + 
            L0x20019a18_f * (x**0) * ((y_6)**58) + 
            L0x20019a1a_f * (x**1) * ((y_6)**58) + 
            L0x20019a1c_f * (x**2) * ((y_6)**58) + 
            L0x20019a1e_f * (x**3) * ((y_6)**58) + 
            L0x20019a20_f * (x**0) * ((y_6)**59) + 
            L0x20019a22_f * (x**1) * ((y_6)**59) + 
            L0x20019a24_f * (x**2) * ((y_6)**59) + 
            L0x20019a26_f * (x**3) * ((y_6)**59) + 
            L0x20019a28_f * (x**0) * ((y_6)**60) + 
            L0x20019a2a_f * (x**1) * ((y_6)**60) + 
            L0x20019a2c_f * (x**2) * ((y_6)**60) + 
            L0x20019a2e_f * (x**3) * ((y_6)**60) + 
            L0x20019a30_f * (x**0) * ((y_6)**61) + 
            L0x20019a32_f * (x**1) * ((y_6)**61) + 
            L0x20019a34_f * (x**2) * ((y_6)**61) + 
            L0x20019a36_f * (x**3) * ((y_6)**61) + 
            L0x20019a38_f * (x**0) * ((y_6)**62) + 
            L0x20019a3a_f * (x**1) * ((y_6)**62) + 
            L0x20019a3c_f * (x**2) * ((y_6)**62) + 
            L0x20019a3e_f * (x**3) * ((y_6)**62) + 
            L0x20019a40_f * (x**0) * ((y_6)**63) + 
            L0x20019a42_f * (x**1) * ((y_6)**63) + 
            L0x20019a44_f * (x**2) * ((y_6)**63) + 
            L0x20019a46_f * (x**3) * ((y_6)**63)
          )
          [25570049, x**4 - y_0_37 * 20377491, y_0_37 - 1],
    (* inp_poly_38 *)
    eqmod (2**32) * (inp_poly_38 * inp_poly_38)
          (
            L0x20019848_f * (x**0) * ((y_6)**0) + 
            L0x2001984a_f * (x**1) * ((y_6)**0) + 
            L0x2001984c_f * (x**2) * ((y_6)**0) + 
            L0x2001984e_f * (x**3) * ((y_6)**0) + 
            L0x20019850_f * (x**0) * ((y_6)**1) + 
            L0x20019852_f * (x**1) * ((y_6)**1) + 
            L0x20019854_f * (x**2) * ((y_6)**1) + 
            L0x20019856_f * (x**3) * ((y_6)**1) + 
            L0x20019858_f * (x**0) * ((y_6)**2) + 
            L0x2001985a_f * (x**1) * ((y_6)**2) + 
            L0x2001985c_f * (x**2) * ((y_6)**2) + 
            L0x2001985e_f * (x**3) * ((y_6)**2) + 
            L0x20019860_f * (x**0) * ((y_6)**3) + 
            L0x20019862_f * (x**1) * ((y_6)**3) + 
            L0x20019864_f * (x**2) * ((y_6)**3) + 
            L0x20019866_f * (x**3) * ((y_6)**3) + 
            L0x20019868_f * (x**0) * ((y_6)**4) + 
            L0x2001986a_f * (x**1) * ((y_6)**4) + 
            L0x2001986c_f * (x**2) * ((y_6)**4) + 
            L0x2001986e_f * (x**3) * ((y_6)**4) + 
            L0x20019870_f * (x**0) * ((y_6)**5) + 
            L0x20019872_f * (x**1) * ((y_6)**5) + 
            L0x20019874_f * (x**2) * ((y_6)**5) + 
            L0x20019876_f * (x**3) * ((y_6)**5) + 
            L0x20019878_f * (x**0) * ((y_6)**6) + 
            L0x2001987a_f * (x**1) * ((y_6)**6) + 
            L0x2001987c_f * (x**2) * ((y_6)**6) + 
            L0x2001987e_f * (x**3) * ((y_6)**6) + 
            L0x20019880_f * (x**0) * ((y_6)**7) + 
            L0x20019882_f * (x**1) * ((y_6)**7) + 
            L0x20019884_f * (x**2) * ((y_6)**7) + 
            L0x20019886_f * (x**3) * ((y_6)**7) + 
            L0x20019888_f * (x**0) * ((y_6)**8) + 
            L0x2001988a_f * (x**1) * ((y_6)**8) + 
            L0x2001988c_f * (x**2) * ((y_6)**8) + 
            L0x2001988e_f * (x**3) * ((y_6)**8) + 
            L0x20019890_f * (x**0) * ((y_6)**9) + 
            L0x20019892_f * (x**1) * ((y_6)**9) + 
            L0x20019894_f * (x**2) * ((y_6)**9) + 
            L0x20019896_f * (x**3) * ((y_6)**9) + 
            L0x20019898_f * (x**0) * ((y_6)**10) + 
            L0x2001989a_f * (x**1) * ((y_6)**10) + 
            L0x2001989c_f * (x**2) * ((y_6)**10) + 
            L0x2001989e_f * (x**3) * ((y_6)**10) + 
            L0x200198a0_f * (x**0) * ((y_6)**11) + 
            L0x200198a2_f * (x**1) * ((y_6)**11) + 
            L0x200198a4_f * (x**2) * ((y_6)**11) + 
            L0x200198a6_f * (x**3) * ((y_6)**11) + 
            L0x200198a8_f * (x**0) * ((y_6)**12) + 
            L0x200198aa_f * (x**1) * ((y_6)**12) + 
            L0x200198ac_f * (x**2) * ((y_6)**12) + 
            L0x200198ae_f * (x**3) * ((y_6)**12) + 
            L0x200198b0_f * (x**0) * ((y_6)**13) + 
            L0x200198b2_f * (x**1) * ((y_6)**13) + 
            L0x200198b4_f * (x**2) * ((y_6)**13) + 
            L0x200198b6_f * (x**3) * ((y_6)**13) + 
            L0x200198b8_f * (x**0) * ((y_6)**14) + 
            L0x200198ba_f * (x**1) * ((y_6)**14) + 
            L0x200198bc_f * (x**2) * ((y_6)**14) + 
            L0x200198be_f * (x**3) * ((y_6)**14) + 
            L0x200198c0_f * (x**0) * ((y_6)**15) + 
            L0x200198c2_f * (x**1) * ((y_6)**15) + 
            L0x200198c4_f * (x**2) * ((y_6)**15) + 
            L0x200198c6_f * (x**3) * ((y_6)**15) + 
            L0x200198c8_f * (x**0) * ((y_6)**16) + 
            L0x200198ca_f * (x**1) * ((y_6)**16) + 
            L0x200198cc_f * (x**2) * ((y_6)**16) + 
            L0x200198ce_f * (x**3) * ((y_6)**16) + 
            L0x200198d0_f * (x**0) * ((y_6)**17) + 
            L0x200198d2_f * (x**1) * ((y_6)**17) + 
            L0x200198d4_f * (x**2) * ((y_6)**17) + 
            L0x200198d6_f * (x**3) * ((y_6)**17) + 
            L0x200198d8_f * (x**0) * ((y_6)**18) + 
            L0x200198da_f * (x**1) * ((y_6)**18) + 
            L0x200198dc_f * (x**2) * ((y_6)**18) + 
            L0x200198de_f * (x**3) * ((y_6)**18) + 
            L0x200198e0_f * (x**0) * ((y_6)**19) + 
            L0x200198e2_f * (x**1) * ((y_6)**19) + 
            L0x200198e4_f * (x**2) * ((y_6)**19) + 
            L0x200198e6_f * (x**3) * ((y_6)**19) + 
            L0x200198e8_f * (x**0) * ((y_6)**20) + 
            L0x200198ea_f * (x**1) * ((y_6)**20) + 
            L0x200198ec_f * (x**2) * ((y_6)**20) + 
            L0x200198ee_f * (x**3) * ((y_6)**20) + 
            L0x200198f0_f * (x**0) * ((y_6)**21) + 
            L0x200198f2_f * (x**1) * ((y_6)**21) + 
            L0x200198f4_f * (x**2) * ((y_6)**21) + 
            L0x200198f6_f * (x**3) * ((y_6)**21) + 
            L0x200198f8_f * (x**0) * ((y_6)**22) + 
            L0x200198fa_f * (x**1) * ((y_6)**22) + 
            L0x200198fc_f * (x**2) * ((y_6)**22) + 
            L0x200198fe_f * (x**3) * ((y_6)**22) + 
            L0x20019900_f * (x**0) * ((y_6)**23) + 
            L0x20019902_f * (x**1) * ((y_6)**23) + 
            L0x20019904_f * (x**2) * ((y_6)**23) + 
            L0x20019906_f * (x**3) * ((y_6)**23) + 
            L0x20019908_f * (x**0) * ((y_6)**24) + 
            L0x2001990a_f * (x**1) * ((y_6)**24) + 
            L0x2001990c_f * (x**2) * ((y_6)**24) + 
            L0x2001990e_f * (x**3) * ((y_6)**24) + 
            L0x20019910_f * (x**0) * ((y_6)**25) + 
            L0x20019912_f * (x**1) * ((y_6)**25) + 
            L0x20019914_f * (x**2) * ((y_6)**25) + 
            L0x20019916_f * (x**3) * ((y_6)**25) + 
            L0x20019918_f * (x**0) * ((y_6)**26) + 
            L0x2001991a_f * (x**1) * ((y_6)**26) + 
            L0x2001991c_f * (x**2) * ((y_6)**26) + 
            L0x2001991e_f * (x**3) * ((y_6)**26) + 
            L0x20019920_f * (x**0) * ((y_6)**27) + 
            L0x20019922_f * (x**1) * ((y_6)**27) + 
            L0x20019924_f * (x**2) * ((y_6)**27) + 
            L0x20019926_f * (x**3) * ((y_6)**27) + 
            L0x20019928_f * (x**0) * ((y_6)**28) + 
            L0x2001992a_f * (x**1) * ((y_6)**28) + 
            L0x2001992c_f * (x**2) * ((y_6)**28) + 
            L0x2001992e_f * (x**3) * ((y_6)**28) + 
            L0x20019930_f * (x**0) * ((y_6)**29) + 
            L0x20019932_f * (x**1) * ((y_6)**29) + 
            L0x20019934_f * (x**2) * ((y_6)**29) + 
            L0x20019936_f * (x**3) * ((y_6)**29) + 
            L0x20019938_f * (x**0) * ((y_6)**30) + 
            L0x2001993a_f * (x**1) * ((y_6)**30) + 
            L0x2001993c_f * (x**2) * ((y_6)**30) + 
            L0x2001993e_f * (x**3) * ((y_6)**30) + 
            L0x20019940_f * (x**0) * ((y_6)**31) + 
            L0x20019942_f * (x**1) * ((y_6)**31) + 
            L0x20019944_f * (x**2) * ((y_6)**31) + 
            L0x20019946_f * (x**3) * ((y_6)**31) + 
            L0x20019948_f * (x**0) * ((y_6)**32) + 
            L0x2001994a_f * (x**1) * ((y_6)**32) + 
            L0x2001994c_f * (x**2) * ((y_6)**32) + 
            L0x2001994e_f * (x**3) * ((y_6)**32) + 
            L0x20019950_f * (x**0) * ((y_6)**33) + 
            L0x20019952_f * (x**1) * ((y_6)**33) + 
            L0x20019954_f * (x**2) * ((y_6)**33) + 
            L0x20019956_f * (x**3) * ((y_6)**33) + 
            L0x20019958_f * (x**0) * ((y_6)**34) + 
            L0x2001995a_f * (x**1) * ((y_6)**34) + 
            L0x2001995c_f * (x**2) * ((y_6)**34) + 
            L0x2001995e_f * (x**3) * ((y_6)**34) + 
            L0x20019960_f * (x**0) * ((y_6)**35) + 
            L0x20019962_f * (x**1) * ((y_6)**35) + 
            L0x20019964_f * (x**2) * ((y_6)**35) + 
            L0x20019966_f * (x**3) * ((y_6)**35) + 
            L0x20019968_f * (x**0) * ((y_6)**36) + 
            L0x2001996a_f * (x**1) * ((y_6)**36) + 
            L0x2001996c_f * (x**2) * ((y_6)**36) + 
            L0x2001996e_f * (x**3) * ((y_6)**36) + 
            L0x20019970_f * (x**0) * ((y_6)**37) + 
            L0x20019972_f * (x**1) * ((y_6)**37) + 
            L0x20019974_f * (x**2) * ((y_6)**37) + 
            L0x20019976_f * (x**3) * ((y_6)**37) + 
            L0x20019978_f * (x**0) * ((y_6)**38) + 
            L0x2001997a_f * (x**1) * ((y_6)**38) + 
            L0x2001997c_f * (x**2) * ((y_6)**38) + 
            L0x2001997e_f * (x**3) * ((y_6)**38) + 
            L0x20019980_f * (x**0) * ((y_6)**39) + 
            L0x20019982_f * (x**1) * ((y_6)**39) + 
            L0x20019984_f * (x**2) * ((y_6)**39) + 
            L0x20019986_f * (x**3) * ((y_6)**39) + 
            L0x20019988_f * (x**0) * ((y_6)**40) + 
            L0x2001998a_f * (x**1) * ((y_6)**40) + 
            L0x2001998c_f * (x**2) * ((y_6)**40) + 
            L0x2001998e_f * (x**3) * ((y_6)**40) + 
            L0x20019990_f * (x**0) * ((y_6)**41) + 
            L0x20019992_f * (x**1) * ((y_6)**41) + 
            L0x20019994_f * (x**2) * ((y_6)**41) + 
            L0x20019996_f * (x**3) * ((y_6)**41) + 
            L0x20019998_f * (x**0) * ((y_6)**42) + 
            L0x2001999a_f * (x**1) * ((y_6)**42) + 
            L0x2001999c_f * (x**2) * ((y_6)**42) + 
            L0x2001999e_f * (x**3) * ((y_6)**42) + 
            L0x200199a0_f * (x**0) * ((y_6)**43) + 
            L0x200199a2_f * (x**1) * ((y_6)**43) + 
            L0x200199a4_f * (x**2) * ((y_6)**43) + 
            L0x200199a6_f * (x**3) * ((y_6)**43) + 
            L0x200199a8_f * (x**0) * ((y_6)**44) + 
            L0x200199aa_f * (x**1) * ((y_6)**44) + 
            L0x200199ac_f * (x**2) * ((y_6)**44) + 
            L0x200199ae_f * (x**3) * ((y_6)**44) + 
            L0x200199b0_f * (x**0) * ((y_6)**45) + 
            L0x200199b2_f * (x**1) * ((y_6)**45) + 
            L0x200199b4_f * (x**2) * ((y_6)**45) + 
            L0x200199b6_f * (x**3) * ((y_6)**45) + 
            L0x200199b8_f * (x**0) * ((y_6)**46) + 
            L0x200199ba_f * (x**1) * ((y_6)**46) + 
            L0x200199bc_f * (x**2) * ((y_6)**46) + 
            L0x200199be_f * (x**3) * ((y_6)**46) + 
            L0x200199c0_f * (x**0) * ((y_6)**47) + 
            L0x200199c2_f * (x**1) * ((y_6)**47) + 
            L0x200199c4_f * (x**2) * ((y_6)**47) + 
            L0x200199c6_f * (x**3) * ((y_6)**47) + 
            L0x200199c8_f * (x**0) * ((y_6)**48) + 
            L0x200199ca_f * (x**1) * ((y_6)**48) + 
            L0x200199cc_f * (x**2) * ((y_6)**48) + 
            L0x200199ce_f * (x**3) * ((y_6)**48) + 
            L0x200199d0_f * (x**0) * ((y_6)**49) + 
            L0x200199d2_f * (x**1) * ((y_6)**49) + 
            L0x200199d4_f * (x**2) * ((y_6)**49) + 
            L0x200199d6_f * (x**3) * ((y_6)**49) + 
            L0x200199d8_f * (x**0) * ((y_6)**50) + 
            L0x200199da_f * (x**1) * ((y_6)**50) + 
            L0x200199dc_f * (x**2) * ((y_6)**50) + 
            L0x200199de_f * (x**3) * ((y_6)**50) + 
            L0x200199e0_f * (x**0) * ((y_6)**51) + 
            L0x200199e2_f * (x**1) * ((y_6)**51) + 
            L0x200199e4_f * (x**2) * ((y_6)**51) + 
            L0x200199e6_f * (x**3) * ((y_6)**51) + 
            L0x200199e8_f * (x**0) * ((y_6)**52) + 
            L0x200199ea_f * (x**1) * ((y_6)**52) + 
            L0x200199ec_f * (x**2) * ((y_6)**52) + 
            L0x200199ee_f * (x**3) * ((y_6)**52) + 
            L0x200199f0_f * (x**0) * ((y_6)**53) + 
            L0x200199f2_f * (x**1) * ((y_6)**53) + 
            L0x200199f4_f * (x**2) * ((y_6)**53) + 
            L0x200199f6_f * (x**3) * ((y_6)**53) + 
            L0x200199f8_f * (x**0) * ((y_6)**54) + 
            L0x200199fa_f * (x**1) * ((y_6)**54) + 
            L0x200199fc_f * (x**2) * ((y_6)**54) + 
            L0x200199fe_f * (x**3) * ((y_6)**54) + 
            L0x20019a00_f * (x**0) * ((y_6)**55) + 
            L0x20019a02_f * (x**1) * ((y_6)**55) + 
            L0x20019a04_f * (x**2) * ((y_6)**55) + 
            L0x20019a06_f * (x**3) * ((y_6)**55) + 
            L0x20019a08_f * (x**0) * ((y_6)**56) + 
            L0x20019a0a_f * (x**1) * ((y_6)**56) + 
            L0x20019a0c_f * (x**2) * ((y_6)**56) + 
            L0x20019a0e_f * (x**3) * ((y_6)**56) + 
            L0x20019a10_f * (x**0) * ((y_6)**57) + 
            L0x20019a12_f * (x**1) * ((y_6)**57) + 
            L0x20019a14_f * (x**2) * ((y_6)**57) + 
            L0x20019a16_f * (x**3) * ((y_6)**57) + 
            L0x20019a18_f * (x**0) * ((y_6)**58) + 
            L0x20019a1a_f * (x**1) * ((y_6)**58) + 
            L0x20019a1c_f * (x**2) * ((y_6)**58) + 
            L0x20019a1e_f * (x**3) * ((y_6)**58) + 
            L0x20019a20_f * (x**0) * ((y_6)**59) + 
            L0x20019a22_f * (x**1) * ((y_6)**59) + 
            L0x20019a24_f * (x**2) * ((y_6)**59) + 
            L0x20019a26_f * (x**3) * ((y_6)**59) + 
            L0x20019a28_f * (x**0) * ((y_6)**60) + 
            L0x20019a2a_f * (x**1) * ((y_6)**60) + 
            L0x20019a2c_f * (x**2) * ((y_6)**60) + 
            L0x20019a2e_f * (x**3) * ((y_6)**60) + 
            L0x20019a30_f * (x**0) * ((y_6)**61) + 
            L0x20019a32_f * (x**1) * ((y_6)**61) + 
            L0x20019a34_f * (x**2) * ((y_6)**61) + 
            L0x20019a36_f * (x**3) * ((y_6)**61) + 
            L0x20019a38_f * (x**0) * ((y_6)**62) + 
            L0x20019a3a_f * (x**1) * ((y_6)**62) + 
            L0x20019a3c_f * (x**2) * ((y_6)**62) + 
            L0x20019a3e_f * (x**3) * ((y_6)**62) + 
            L0x20019a40_f * (x**0) * ((y_6)**63) + 
            L0x20019a42_f * (x**1) * ((y_6)**63) + 
            L0x20019a44_f * (x**2) * ((y_6)**63) + 
            L0x20019a46_f * (x**3) * ((y_6)**63)
          )
          [25570049, x**4 - y_0_38 * 25163199, y_0_38 - 1],
    (* inp_poly_39 *)
    eqmod (2**32) * (inp_poly_39 * inp_poly_39)
          (
            L0x20019848_f * (x**0) * ((y_6)**0) + 
            L0x2001984a_f * (x**1) * ((y_6)**0) + 
            L0x2001984c_f * (x**2) * ((y_6)**0) + 
            L0x2001984e_f * (x**3) * ((y_6)**0) + 
            L0x20019850_f * (x**0) * ((y_6)**1) + 
            L0x20019852_f * (x**1) * ((y_6)**1) + 
            L0x20019854_f * (x**2) * ((y_6)**1) + 
            L0x20019856_f * (x**3) * ((y_6)**1) + 
            L0x20019858_f * (x**0) * ((y_6)**2) + 
            L0x2001985a_f * (x**1) * ((y_6)**2) + 
            L0x2001985c_f * (x**2) * ((y_6)**2) + 
            L0x2001985e_f * (x**3) * ((y_6)**2) + 
            L0x20019860_f * (x**0) * ((y_6)**3) + 
            L0x20019862_f * (x**1) * ((y_6)**3) + 
            L0x20019864_f * (x**2) * ((y_6)**3) + 
            L0x20019866_f * (x**3) * ((y_6)**3) + 
            L0x20019868_f * (x**0) * ((y_6)**4) + 
            L0x2001986a_f * (x**1) * ((y_6)**4) + 
            L0x2001986c_f * (x**2) * ((y_6)**4) + 
            L0x2001986e_f * (x**3) * ((y_6)**4) + 
            L0x20019870_f * (x**0) * ((y_6)**5) + 
            L0x20019872_f * (x**1) * ((y_6)**5) + 
            L0x20019874_f * (x**2) * ((y_6)**5) + 
            L0x20019876_f * (x**3) * ((y_6)**5) + 
            L0x20019878_f * (x**0) * ((y_6)**6) + 
            L0x2001987a_f * (x**1) * ((y_6)**6) + 
            L0x2001987c_f * (x**2) * ((y_6)**6) + 
            L0x2001987e_f * (x**3) * ((y_6)**6) + 
            L0x20019880_f * (x**0) * ((y_6)**7) + 
            L0x20019882_f * (x**1) * ((y_6)**7) + 
            L0x20019884_f * (x**2) * ((y_6)**7) + 
            L0x20019886_f * (x**3) * ((y_6)**7) + 
            L0x20019888_f * (x**0) * ((y_6)**8) + 
            L0x2001988a_f * (x**1) * ((y_6)**8) + 
            L0x2001988c_f * (x**2) * ((y_6)**8) + 
            L0x2001988e_f * (x**3) * ((y_6)**8) + 
            L0x20019890_f * (x**0) * ((y_6)**9) + 
            L0x20019892_f * (x**1) * ((y_6)**9) + 
            L0x20019894_f * (x**2) * ((y_6)**9) + 
            L0x20019896_f * (x**3) * ((y_6)**9) + 
            L0x20019898_f * (x**0) * ((y_6)**10) + 
            L0x2001989a_f * (x**1) * ((y_6)**10) + 
            L0x2001989c_f * (x**2) * ((y_6)**10) + 
            L0x2001989e_f * (x**3) * ((y_6)**10) + 
            L0x200198a0_f * (x**0) * ((y_6)**11) + 
            L0x200198a2_f * (x**1) * ((y_6)**11) + 
            L0x200198a4_f * (x**2) * ((y_6)**11) + 
            L0x200198a6_f * (x**3) * ((y_6)**11) + 
            L0x200198a8_f * (x**0) * ((y_6)**12) + 
            L0x200198aa_f * (x**1) * ((y_6)**12) + 
            L0x200198ac_f * (x**2) * ((y_6)**12) + 
            L0x200198ae_f * (x**3) * ((y_6)**12) + 
            L0x200198b0_f * (x**0) * ((y_6)**13) + 
            L0x200198b2_f * (x**1) * ((y_6)**13) + 
            L0x200198b4_f * (x**2) * ((y_6)**13) + 
            L0x200198b6_f * (x**3) * ((y_6)**13) + 
            L0x200198b8_f * (x**0) * ((y_6)**14) + 
            L0x200198ba_f * (x**1) * ((y_6)**14) + 
            L0x200198bc_f * (x**2) * ((y_6)**14) + 
            L0x200198be_f * (x**3) * ((y_6)**14) + 
            L0x200198c0_f * (x**0) * ((y_6)**15) + 
            L0x200198c2_f * (x**1) * ((y_6)**15) + 
            L0x200198c4_f * (x**2) * ((y_6)**15) + 
            L0x200198c6_f * (x**3) * ((y_6)**15) + 
            L0x200198c8_f * (x**0) * ((y_6)**16) + 
            L0x200198ca_f * (x**1) * ((y_6)**16) + 
            L0x200198cc_f * (x**2) * ((y_6)**16) + 
            L0x200198ce_f * (x**3) * ((y_6)**16) + 
            L0x200198d0_f * (x**0) * ((y_6)**17) + 
            L0x200198d2_f * (x**1) * ((y_6)**17) + 
            L0x200198d4_f * (x**2) * ((y_6)**17) + 
            L0x200198d6_f * (x**3) * ((y_6)**17) + 
            L0x200198d8_f * (x**0) * ((y_6)**18) + 
            L0x200198da_f * (x**1) * ((y_6)**18) + 
            L0x200198dc_f * (x**2) * ((y_6)**18) + 
            L0x200198de_f * (x**3) * ((y_6)**18) + 
            L0x200198e0_f * (x**0) * ((y_6)**19) + 
            L0x200198e2_f * (x**1) * ((y_6)**19) + 
            L0x200198e4_f * (x**2) * ((y_6)**19) + 
            L0x200198e6_f * (x**3) * ((y_6)**19) + 
            L0x200198e8_f * (x**0) * ((y_6)**20) + 
            L0x200198ea_f * (x**1) * ((y_6)**20) + 
            L0x200198ec_f * (x**2) * ((y_6)**20) + 
            L0x200198ee_f * (x**3) * ((y_6)**20) + 
            L0x200198f0_f * (x**0) * ((y_6)**21) + 
            L0x200198f2_f * (x**1) * ((y_6)**21) + 
            L0x200198f4_f * (x**2) * ((y_6)**21) + 
            L0x200198f6_f * (x**3) * ((y_6)**21) + 
            L0x200198f8_f * (x**0) * ((y_6)**22) + 
            L0x200198fa_f * (x**1) * ((y_6)**22) + 
            L0x200198fc_f * (x**2) * ((y_6)**22) + 
            L0x200198fe_f * (x**3) * ((y_6)**22) + 
            L0x20019900_f * (x**0) * ((y_6)**23) + 
            L0x20019902_f * (x**1) * ((y_6)**23) + 
            L0x20019904_f * (x**2) * ((y_6)**23) + 
            L0x20019906_f * (x**3) * ((y_6)**23) + 
            L0x20019908_f * (x**0) * ((y_6)**24) + 
            L0x2001990a_f * (x**1) * ((y_6)**24) + 
            L0x2001990c_f * (x**2) * ((y_6)**24) + 
            L0x2001990e_f * (x**3) * ((y_6)**24) + 
            L0x20019910_f * (x**0) * ((y_6)**25) + 
            L0x20019912_f * (x**1) * ((y_6)**25) + 
            L0x20019914_f * (x**2) * ((y_6)**25) + 
            L0x20019916_f * (x**3) * ((y_6)**25) + 
            L0x20019918_f * (x**0) * ((y_6)**26) + 
            L0x2001991a_f * (x**1) * ((y_6)**26) + 
            L0x2001991c_f * (x**2) * ((y_6)**26) + 
            L0x2001991e_f * (x**3) * ((y_6)**26) + 
            L0x20019920_f * (x**0) * ((y_6)**27) + 
            L0x20019922_f * (x**1) * ((y_6)**27) + 
            L0x20019924_f * (x**2) * ((y_6)**27) + 
            L0x20019926_f * (x**3) * ((y_6)**27) + 
            L0x20019928_f * (x**0) * ((y_6)**28) + 
            L0x2001992a_f * (x**1) * ((y_6)**28) + 
            L0x2001992c_f * (x**2) * ((y_6)**28) + 
            L0x2001992e_f * (x**3) * ((y_6)**28) + 
            L0x20019930_f * (x**0) * ((y_6)**29) + 
            L0x20019932_f * (x**1) * ((y_6)**29) + 
            L0x20019934_f * (x**2) * ((y_6)**29) + 
            L0x20019936_f * (x**3) * ((y_6)**29) + 
            L0x20019938_f * (x**0) * ((y_6)**30) + 
            L0x2001993a_f * (x**1) * ((y_6)**30) + 
            L0x2001993c_f * (x**2) * ((y_6)**30) + 
            L0x2001993e_f * (x**3) * ((y_6)**30) + 
            L0x20019940_f * (x**0) * ((y_6)**31) + 
            L0x20019942_f * (x**1) * ((y_6)**31) + 
            L0x20019944_f * (x**2) * ((y_6)**31) + 
            L0x20019946_f * (x**3) * ((y_6)**31) + 
            L0x20019948_f * (x**0) * ((y_6)**32) + 
            L0x2001994a_f * (x**1) * ((y_6)**32) + 
            L0x2001994c_f * (x**2) * ((y_6)**32) + 
            L0x2001994e_f * (x**3) * ((y_6)**32) + 
            L0x20019950_f * (x**0) * ((y_6)**33) + 
            L0x20019952_f * (x**1) * ((y_6)**33) + 
            L0x20019954_f * (x**2) * ((y_6)**33) + 
            L0x20019956_f * (x**3) * ((y_6)**33) + 
            L0x20019958_f * (x**0) * ((y_6)**34) + 
            L0x2001995a_f * (x**1) * ((y_6)**34) + 
            L0x2001995c_f * (x**2) * ((y_6)**34) + 
            L0x2001995e_f * (x**3) * ((y_6)**34) + 
            L0x20019960_f * (x**0) * ((y_6)**35) + 
            L0x20019962_f * (x**1) * ((y_6)**35) + 
            L0x20019964_f * (x**2) * ((y_6)**35) + 
            L0x20019966_f * (x**3) * ((y_6)**35) + 
            L0x20019968_f * (x**0) * ((y_6)**36) + 
            L0x2001996a_f * (x**1) * ((y_6)**36) + 
            L0x2001996c_f * (x**2) * ((y_6)**36) + 
            L0x2001996e_f * (x**3) * ((y_6)**36) + 
            L0x20019970_f * (x**0) * ((y_6)**37) + 
            L0x20019972_f * (x**1) * ((y_6)**37) + 
            L0x20019974_f * (x**2) * ((y_6)**37) + 
            L0x20019976_f * (x**3) * ((y_6)**37) + 
            L0x20019978_f * (x**0) * ((y_6)**38) + 
            L0x2001997a_f * (x**1) * ((y_6)**38) + 
            L0x2001997c_f * (x**2) * ((y_6)**38) + 
            L0x2001997e_f * (x**3) * ((y_6)**38) + 
            L0x20019980_f * (x**0) * ((y_6)**39) + 
            L0x20019982_f * (x**1) * ((y_6)**39) + 
            L0x20019984_f * (x**2) * ((y_6)**39) + 
            L0x20019986_f * (x**3) * ((y_6)**39) + 
            L0x20019988_f * (x**0) * ((y_6)**40) + 
            L0x2001998a_f * (x**1) * ((y_6)**40) + 
            L0x2001998c_f * (x**2) * ((y_6)**40) + 
            L0x2001998e_f * (x**3) * ((y_6)**40) + 
            L0x20019990_f * (x**0) * ((y_6)**41) + 
            L0x20019992_f * (x**1) * ((y_6)**41) + 
            L0x20019994_f * (x**2) * ((y_6)**41) + 
            L0x20019996_f * (x**3) * ((y_6)**41) + 
            L0x20019998_f * (x**0) * ((y_6)**42) + 
            L0x2001999a_f * (x**1) * ((y_6)**42) + 
            L0x2001999c_f * (x**2) * ((y_6)**42) + 
            L0x2001999e_f * (x**3) * ((y_6)**42) + 
            L0x200199a0_f * (x**0) * ((y_6)**43) + 
            L0x200199a2_f * (x**1) * ((y_6)**43) + 
            L0x200199a4_f * (x**2) * ((y_6)**43) + 
            L0x200199a6_f * (x**3) * ((y_6)**43) + 
            L0x200199a8_f * (x**0) * ((y_6)**44) + 
            L0x200199aa_f * (x**1) * ((y_6)**44) + 
            L0x200199ac_f * (x**2) * ((y_6)**44) + 
            L0x200199ae_f * (x**3) * ((y_6)**44) + 
            L0x200199b0_f * (x**0) * ((y_6)**45) + 
            L0x200199b2_f * (x**1) * ((y_6)**45) + 
            L0x200199b4_f * (x**2) * ((y_6)**45) + 
            L0x200199b6_f * (x**3) * ((y_6)**45) + 
            L0x200199b8_f * (x**0) * ((y_6)**46) + 
            L0x200199ba_f * (x**1) * ((y_6)**46) + 
            L0x200199bc_f * (x**2) * ((y_6)**46) + 
            L0x200199be_f * (x**3) * ((y_6)**46) + 
            L0x200199c0_f * (x**0) * ((y_6)**47) + 
            L0x200199c2_f * (x**1) * ((y_6)**47) + 
            L0x200199c4_f * (x**2) * ((y_6)**47) + 
            L0x200199c6_f * (x**3) * ((y_6)**47) + 
            L0x200199c8_f * (x**0) * ((y_6)**48) + 
            L0x200199ca_f * (x**1) * ((y_6)**48) + 
            L0x200199cc_f * (x**2) * ((y_6)**48) + 
            L0x200199ce_f * (x**3) * ((y_6)**48) + 
            L0x200199d0_f * (x**0) * ((y_6)**49) + 
            L0x200199d2_f * (x**1) * ((y_6)**49) + 
            L0x200199d4_f * (x**2) * ((y_6)**49) + 
            L0x200199d6_f * (x**3) * ((y_6)**49) + 
            L0x200199d8_f * (x**0) * ((y_6)**50) + 
            L0x200199da_f * (x**1) * ((y_6)**50) + 
            L0x200199dc_f * (x**2) * ((y_6)**50) + 
            L0x200199de_f * (x**3) * ((y_6)**50) + 
            L0x200199e0_f * (x**0) * ((y_6)**51) + 
            L0x200199e2_f * (x**1) * ((y_6)**51) + 
            L0x200199e4_f * (x**2) * ((y_6)**51) + 
            L0x200199e6_f * (x**3) * ((y_6)**51) + 
            L0x200199e8_f * (x**0) * ((y_6)**52) + 
            L0x200199ea_f * (x**1) * ((y_6)**52) + 
            L0x200199ec_f * (x**2) * ((y_6)**52) + 
            L0x200199ee_f * (x**3) * ((y_6)**52) + 
            L0x200199f0_f * (x**0) * ((y_6)**53) + 
            L0x200199f2_f * (x**1) * ((y_6)**53) + 
            L0x200199f4_f * (x**2) * ((y_6)**53) + 
            L0x200199f6_f * (x**3) * ((y_6)**53) + 
            L0x200199f8_f * (x**0) * ((y_6)**54) + 
            L0x200199fa_f * (x**1) * ((y_6)**54) + 
            L0x200199fc_f * (x**2) * ((y_6)**54) + 
            L0x200199fe_f * (x**3) * ((y_6)**54) + 
            L0x20019a00_f * (x**0) * ((y_6)**55) + 
            L0x20019a02_f * (x**1) * ((y_6)**55) + 
            L0x20019a04_f * (x**2) * ((y_6)**55) + 
            L0x20019a06_f * (x**3) * ((y_6)**55) + 
            L0x20019a08_f * (x**0) * ((y_6)**56) + 
            L0x20019a0a_f * (x**1) * ((y_6)**56) + 
            L0x20019a0c_f * (x**2) * ((y_6)**56) + 
            L0x20019a0e_f * (x**3) * ((y_6)**56) + 
            L0x20019a10_f * (x**0) * ((y_6)**57) + 
            L0x20019a12_f * (x**1) * ((y_6)**57) + 
            L0x20019a14_f * (x**2) * ((y_6)**57) + 
            L0x20019a16_f * (x**3) * ((y_6)**57) + 
            L0x20019a18_f * (x**0) * ((y_6)**58) + 
            L0x20019a1a_f * (x**1) * ((y_6)**58) + 
            L0x20019a1c_f * (x**2) * ((y_6)**58) + 
            L0x20019a1e_f * (x**3) * ((y_6)**58) + 
            L0x20019a20_f * (x**0) * ((y_6)**59) + 
            L0x20019a22_f * (x**1) * ((y_6)**59) + 
            L0x20019a24_f * (x**2) * ((y_6)**59) + 
            L0x20019a26_f * (x**3) * ((y_6)**59) + 
            L0x20019a28_f * (x**0) * ((y_6)**60) + 
            L0x20019a2a_f * (x**1) * ((y_6)**60) + 
            L0x20019a2c_f * (x**2) * ((y_6)**60) + 
            L0x20019a2e_f * (x**3) * ((y_6)**60) + 
            L0x20019a30_f * (x**0) * ((y_6)**61) + 
            L0x20019a32_f * (x**1) * ((y_6)**61) + 
            L0x20019a34_f * (x**2) * ((y_6)**61) + 
            L0x20019a36_f * (x**3) * ((y_6)**61) + 
            L0x20019a38_f * (x**0) * ((y_6)**62) + 
            L0x20019a3a_f * (x**1) * ((y_6)**62) + 
            L0x20019a3c_f * (x**2) * ((y_6)**62) + 
            L0x20019a3e_f * (x**3) * ((y_6)**62) + 
            L0x20019a40_f * (x**0) * ((y_6)**63) + 
            L0x20019a42_f * (x**1) * ((y_6)**63) + 
            L0x20019a44_f * (x**2) * ((y_6)**63) + 
            L0x20019a46_f * (x**3) * ((y_6)**63)
          )
          [25570049, x**4 - y_0_39 * 406850, y_0_39 - 1]
  ] prove with [cuts [10, 28], all ghosts]
  &&
  true
;

cut (* 47 *)
  true && true;

(* slice 5 *)
cut (* 48 *)
  and [
    (* inp_poly_40 *)
    eqmod (2**32) * (inp_poly_40 * inp_poly_40)
          (
            L0x20019848_f * (x**0) * ((y_6)**0) + 
            L0x2001984a_f * (x**1) * ((y_6)**0) + 
            L0x2001984c_f * (x**2) * ((y_6)**0) + 
            L0x2001984e_f * (x**3) * ((y_6)**0) + 
            L0x20019850_f * (x**0) * ((y_6)**1) + 
            L0x20019852_f * (x**1) * ((y_6)**1) + 
            L0x20019854_f * (x**2) * ((y_6)**1) + 
            L0x20019856_f * (x**3) * ((y_6)**1) + 
            L0x20019858_f * (x**0) * ((y_6)**2) + 
            L0x2001985a_f * (x**1) * ((y_6)**2) + 
            L0x2001985c_f * (x**2) * ((y_6)**2) + 
            L0x2001985e_f * (x**3) * ((y_6)**2) + 
            L0x20019860_f * (x**0) * ((y_6)**3) + 
            L0x20019862_f * (x**1) * ((y_6)**3) + 
            L0x20019864_f * (x**2) * ((y_6)**3) + 
            L0x20019866_f * (x**3) * ((y_6)**3) + 
            L0x20019868_f * (x**0) * ((y_6)**4) + 
            L0x2001986a_f * (x**1) * ((y_6)**4) + 
            L0x2001986c_f * (x**2) * ((y_6)**4) + 
            L0x2001986e_f * (x**3) * ((y_6)**4) + 
            L0x20019870_f * (x**0) * ((y_6)**5) + 
            L0x20019872_f * (x**1) * ((y_6)**5) + 
            L0x20019874_f * (x**2) * ((y_6)**5) + 
            L0x20019876_f * (x**3) * ((y_6)**5) + 
            L0x20019878_f * (x**0) * ((y_6)**6) + 
            L0x2001987a_f * (x**1) * ((y_6)**6) + 
            L0x2001987c_f * (x**2) * ((y_6)**6) + 
            L0x2001987e_f * (x**3) * ((y_6)**6) + 
            L0x20019880_f * (x**0) * ((y_6)**7) + 
            L0x20019882_f * (x**1) * ((y_6)**7) + 
            L0x20019884_f * (x**2) * ((y_6)**7) + 
            L0x20019886_f * (x**3) * ((y_6)**7) + 
            L0x20019888_f * (x**0) * ((y_6)**8) + 
            L0x2001988a_f * (x**1) * ((y_6)**8) + 
            L0x2001988c_f * (x**2) * ((y_6)**8) + 
            L0x2001988e_f * (x**3) * ((y_6)**8) + 
            L0x20019890_f * (x**0) * ((y_6)**9) + 
            L0x20019892_f * (x**1) * ((y_6)**9) + 
            L0x20019894_f * (x**2) * ((y_6)**9) + 
            L0x20019896_f * (x**3) * ((y_6)**9) + 
            L0x20019898_f * (x**0) * ((y_6)**10) + 
            L0x2001989a_f * (x**1) * ((y_6)**10) + 
            L0x2001989c_f * (x**2) * ((y_6)**10) + 
            L0x2001989e_f * (x**3) * ((y_6)**10) + 
            L0x200198a0_f * (x**0) * ((y_6)**11) + 
            L0x200198a2_f * (x**1) * ((y_6)**11) + 
            L0x200198a4_f * (x**2) * ((y_6)**11) + 
            L0x200198a6_f * (x**3) * ((y_6)**11) + 
            L0x200198a8_f * (x**0) * ((y_6)**12) + 
            L0x200198aa_f * (x**1) * ((y_6)**12) + 
            L0x200198ac_f * (x**2) * ((y_6)**12) + 
            L0x200198ae_f * (x**3) * ((y_6)**12) + 
            L0x200198b0_f * (x**0) * ((y_6)**13) + 
            L0x200198b2_f * (x**1) * ((y_6)**13) + 
            L0x200198b4_f * (x**2) * ((y_6)**13) + 
            L0x200198b6_f * (x**3) * ((y_6)**13) + 
            L0x200198b8_f * (x**0) * ((y_6)**14) + 
            L0x200198ba_f * (x**1) * ((y_6)**14) + 
            L0x200198bc_f * (x**2) * ((y_6)**14) + 
            L0x200198be_f * (x**3) * ((y_6)**14) + 
            L0x200198c0_f * (x**0) * ((y_6)**15) + 
            L0x200198c2_f * (x**1) * ((y_6)**15) + 
            L0x200198c4_f * (x**2) * ((y_6)**15) + 
            L0x200198c6_f * (x**3) * ((y_6)**15) + 
            L0x200198c8_f * (x**0) * ((y_6)**16) + 
            L0x200198ca_f * (x**1) * ((y_6)**16) + 
            L0x200198cc_f * (x**2) * ((y_6)**16) + 
            L0x200198ce_f * (x**3) * ((y_6)**16) + 
            L0x200198d0_f * (x**0) * ((y_6)**17) + 
            L0x200198d2_f * (x**1) * ((y_6)**17) + 
            L0x200198d4_f * (x**2) * ((y_6)**17) + 
            L0x200198d6_f * (x**3) * ((y_6)**17) + 
            L0x200198d8_f * (x**0) * ((y_6)**18) + 
            L0x200198da_f * (x**1) * ((y_6)**18) + 
            L0x200198dc_f * (x**2) * ((y_6)**18) + 
            L0x200198de_f * (x**3) * ((y_6)**18) + 
            L0x200198e0_f * (x**0) * ((y_6)**19) + 
            L0x200198e2_f * (x**1) * ((y_6)**19) + 
            L0x200198e4_f * (x**2) * ((y_6)**19) + 
            L0x200198e6_f * (x**3) * ((y_6)**19) + 
            L0x200198e8_f * (x**0) * ((y_6)**20) + 
            L0x200198ea_f * (x**1) * ((y_6)**20) + 
            L0x200198ec_f * (x**2) * ((y_6)**20) + 
            L0x200198ee_f * (x**3) * ((y_6)**20) + 
            L0x200198f0_f * (x**0) * ((y_6)**21) + 
            L0x200198f2_f * (x**1) * ((y_6)**21) + 
            L0x200198f4_f * (x**2) * ((y_6)**21) + 
            L0x200198f6_f * (x**3) * ((y_6)**21) + 
            L0x200198f8_f * (x**0) * ((y_6)**22) + 
            L0x200198fa_f * (x**1) * ((y_6)**22) + 
            L0x200198fc_f * (x**2) * ((y_6)**22) + 
            L0x200198fe_f * (x**3) * ((y_6)**22) + 
            L0x20019900_f * (x**0) * ((y_6)**23) + 
            L0x20019902_f * (x**1) * ((y_6)**23) + 
            L0x20019904_f * (x**2) * ((y_6)**23) + 
            L0x20019906_f * (x**3) * ((y_6)**23) + 
            L0x20019908_f * (x**0) * ((y_6)**24) + 
            L0x2001990a_f * (x**1) * ((y_6)**24) + 
            L0x2001990c_f * (x**2) * ((y_6)**24) + 
            L0x2001990e_f * (x**3) * ((y_6)**24) + 
            L0x20019910_f * (x**0) * ((y_6)**25) + 
            L0x20019912_f * (x**1) * ((y_6)**25) + 
            L0x20019914_f * (x**2) * ((y_6)**25) + 
            L0x20019916_f * (x**3) * ((y_6)**25) + 
            L0x20019918_f * (x**0) * ((y_6)**26) + 
            L0x2001991a_f * (x**1) * ((y_6)**26) + 
            L0x2001991c_f * (x**2) * ((y_6)**26) + 
            L0x2001991e_f * (x**3) * ((y_6)**26) + 
            L0x20019920_f * (x**0) * ((y_6)**27) + 
            L0x20019922_f * (x**1) * ((y_6)**27) + 
            L0x20019924_f * (x**2) * ((y_6)**27) + 
            L0x20019926_f * (x**3) * ((y_6)**27) + 
            L0x20019928_f * (x**0) * ((y_6)**28) + 
            L0x2001992a_f * (x**1) * ((y_6)**28) + 
            L0x2001992c_f * (x**2) * ((y_6)**28) + 
            L0x2001992e_f * (x**3) * ((y_6)**28) + 
            L0x20019930_f * (x**0) * ((y_6)**29) + 
            L0x20019932_f * (x**1) * ((y_6)**29) + 
            L0x20019934_f * (x**2) * ((y_6)**29) + 
            L0x20019936_f * (x**3) * ((y_6)**29) + 
            L0x20019938_f * (x**0) * ((y_6)**30) + 
            L0x2001993a_f * (x**1) * ((y_6)**30) + 
            L0x2001993c_f * (x**2) * ((y_6)**30) + 
            L0x2001993e_f * (x**3) * ((y_6)**30) + 
            L0x20019940_f * (x**0) * ((y_6)**31) + 
            L0x20019942_f * (x**1) * ((y_6)**31) + 
            L0x20019944_f * (x**2) * ((y_6)**31) + 
            L0x20019946_f * (x**3) * ((y_6)**31) + 
            L0x20019948_f * (x**0) * ((y_6)**32) + 
            L0x2001994a_f * (x**1) * ((y_6)**32) + 
            L0x2001994c_f * (x**2) * ((y_6)**32) + 
            L0x2001994e_f * (x**3) * ((y_6)**32) + 
            L0x20019950_f * (x**0) * ((y_6)**33) + 
            L0x20019952_f * (x**1) * ((y_6)**33) + 
            L0x20019954_f * (x**2) * ((y_6)**33) + 
            L0x20019956_f * (x**3) * ((y_6)**33) + 
            L0x20019958_f * (x**0) * ((y_6)**34) + 
            L0x2001995a_f * (x**1) * ((y_6)**34) + 
            L0x2001995c_f * (x**2) * ((y_6)**34) + 
            L0x2001995e_f * (x**3) * ((y_6)**34) + 
            L0x20019960_f * (x**0) * ((y_6)**35) + 
            L0x20019962_f * (x**1) * ((y_6)**35) + 
            L0x20019964_f * (x**2) * ((y_6)**35) + 
            L0x20019966_f * (x**3) * ((y_6)**35) + 
            L0x20019968_f * (x**0) * ((y_6)**36) + 
            L0x2001996a_f * (x**1) * ((y_6)**36) + 
            L0x2001996c_f * (x**2) * ((y_6)**36) + 
            L0x2001996e_f * (x**3) * ((y_6)**36) + 
            L0x20019970_f * (x**0) * ((y_6)**37) + 
            L0x20019972_f * (x**1) * ((y_6)**37) + 
            L0x20019974_f * (x**2) * ((y_6)**37) + 
            L0x20019976_f * (x**3) * ((y_6)**37) + 
            L0x20019978_f * (x**0) * ((y_6)**38) + 
            L0x2001997a_f * (x**1) * ((y_6)**38) + 
            L0x2001997c_f * (x**2) * ((y_6)**38) + 
            L0x2001997e_f * (x**3) * ((y_6)**38) + 
            L0x20019980_f * (x**0) * ((y_6)**39) + 
            L0x20019982_f * (x**1) * ((y_6)**39) + 
            L0x20019984_f * (x**2) * ((y_6)**39) + 
            L0x20019986_f * (x**3) * ((y_6)**39) + 
            L0x20019988_f * (x**0) * ((y_6)**40) + 
            L0x2001998a_f * (x**1) * ((y_6)**40) + 
            L0x2001998c_f * (x**2) * ((y_6)**40) + 
            L0x2001998e_f * (x**3) * ((y_6)**40) + 
            L0x20019990_f * (x**0) * ((y_6)**41) + 
            L0x20019992_f * (x**1) * ((y_6)**41) + 
            L0x20019994_f * (x**2) * ((y_6)**41) + 
            L0x20019996_f * (x**3) * ((y_6)**41) + 
            L0x20019998_f * (x**0) * ((y_6)**42) + 
            L0x2001999a_f * (x**1) * ((y_6)**42) + 
            L0x2001999c_f * (x**2) * ((y_6)**42) + 
            L0x2001999e_f * (x**3) * ((y_6)**42) + 
            L0x200199a0_f * (x**0) * ((y_6)**43) + 
            L0x200199a2_f * (x**1) * ((y_6)**43) + 
            L0x200199a4_f * (x**2) * ((y_6)**43) + 
            L0x200199a6_f * (x**3) * ((y_6)**43) + 
            L0x200199a8_f * (x**0) * ((y_6)**44) + 
            L0x200199aa_f * (x**1) * ((y_6)**44) + 
            L0x200199ac_f * (x**2) * ((y_6)**44) + 
            L0x200199ae_f * (x**3) * ((y_6)**44) + 
            L0x200199b0_f * (x**0) * ((y_6)**45) + 
            L0x200199b2_f * (x**1) * ((y_6)**45) + 
            L0x200199b4_f * (x**2) * ((y_6)**45) + 
            L0x200199b6_f * (x**3) * ((y_6)**45) + 
            L0x200199b8_f * (x**0) * ((y_6)**46) + 
            L0x200199ba_f * (x**1) * ((y_6)**46) + 
            L0x200199bc_f * (x**2) * ((y_6)**46) + 
            L0x200199be_f * (x**3) * ((y_6)**46) + 
            L0x200199c0_f * (x**0) * ((y_6)**47) + 
            L0x200199c2_f * (x**1) * ((y_6)**47) + 
            L0x200199c4_f * (x**2) * ((y_6)**47) + 
            L0x200199c6_f * (x**3) * ((y_6)**47) + 
            L0x200199c8_f * (x**0) * ((y_6)**48) + 
            L0x200199ca_f * (x**1) * ((y_6)**48) + 
            L0x200199cc_f * (x**2) * ((y_6)**48) + 
            L0x200199ce_f * (x**3) * ((y_6)**48) + 
            L0x200199d0_f * (x**0) * ((y_6)**49) + 
            L0x200199d2_f * (x**1) * ((y_6)**49) + 
            L0x200199d4_f * (x**2) * ((y_6)**49) + 
            L0x200199d6_f * (x**3) * ((y_6)**49) + 
            L0x200199d8_f * (x**0) * ((y_6)**50) + 
            L0x200199da_f * (x**1) * ((y_6)**50) + 
            L0x200199dc_f * (x**2) * ((y_6)**50) + 
            L0x200199de_f * (x**3) * ((y_6)**50) + 
            L0x200199e0_f * (x**0) * ((y_6)**51) + 
            L0x200199e2_f * (x**1) * ((y_6)**51) + 
            L0x200199e4_f * (x**2) * ((y_6)**51) + 
            L0x200199e6_f * (x**3) * ((y_6)**51) + 
            L0x200199e8_f * (x**0) * ((y_6)**52) + 
            L0x200199ea_f * (x**1) * ((y_6)**52) + 
            L0x200199ec_f * (x**2) * ((y_6)**52) + 
            L0x200199ee_f * (x**3) * ((y_6)**52) + 
            L0x200199f0_f * (x**0) * ((y_6)**53) + 
            L0x200199f2_f * (x**1) * ((y_6)**53) + 
            L0x200199f4_f * (x**2) * ((y_6)**53) + 
            L0x200199f6_f * (x**3) * ((y_6)**53) + 
            L0x200199f8_f * (x**0) * ((y_6)**54) + 
            L0x200199fa_f * (x**1) * ((y_6)**54) + 
            L0x200199fc_f * (x**2) * ((y_6)**54) + 
            L0x200199fe_f * (x**3) * ((y_6)**54) + 
            L0x20019a00_f * (x**0) * ((y_6)**55) + 
            L0x20019a02_f * (x**1) * ((y_6)**55) + 
            L0x20019a04_f * (x**2) * ((y_6)**55) + 
            L0x20019a06_f * (x**3) * ((y_6)**55) + 
            L0x20019a08_f * (x**0) * ((y_6)**56) + 
            L0x20019a0a_f * (x**1) * ((y_6)**56) + 
            L0x20019a0c_f * (x**2) * ((y_6)**56) + 
            L0x20019a0e_f * (x**3) * ((y_6)**56) + 
            L0x20019a10_f * (x**0) * ((y_6)**57) + 
            L0x20019a12_f * (x**1) * ((y_6)**57) + 
            L0x20019a14_f * (x**2) * ((y_6)**57) + 
            L0x20019a16_f * (x**3) * ((y_6)**57) + 
            L0x20019a18_f * (x**0) * ((y_6)**58) + 
            L0x20019a1a_f * (x**1) * ((y_6)**58) + 
            L0x20019a1c_f * (x**2) * ((y_6)**58) + 
            L0x20019a1e_f * (x**3) * ((y_6)**58) + 
            L0x20019a20_f * (x**0) * ((y_6)**59) + 
            L0x20019a22_f * (x**1) * ((y_6)**59) + 
            L0x20019a24_f * (x**2) * ((y_6)**59) + 
            L0x20019a26_f * (x**3) * ((y_6)**59) + 
            L0x20019a28_f * (x**0) * ((y_6)**60) + 
            L0x20019a2a_f * (x**1) * ((y_6)**60) + 
            L0x20019a2c_f * (x**2) * ((y_6)**60) + 
            L0x20019a2e_f * (x**3) * ((y_6)**60) + 
            L0x20019a30_f * (x**0) * ((y_6)**61) + 
            L0x20019a32_f * (x**1) * ((y_6)**61) + 
            L0x20019a34_f * (x**2) * ((y_6)**61) + 
            L0x20019a36_f * (x**3) * ((y_6)**61) + 
            L0x20019a38_f * (x**0) * ((y_6)**62) + 
            L0x20019a3a_f * (x**1) * ((y_6)**62) + 
            L0x20019a3c_f * (x**2) * ((y_6)**62) + 
            L0x20019a3e_f * (x**3) * ((y_6)**62) + 
            L0x20019a40_f * (x**0) * ((y_6)**63) + 
            L0x20019a42_f * (x**1) * ((y_6)**63) + 
            L0x20019a44_f * (x**2) * ((y_6)**63) + 
            L0x20019a46_f * (x**3) * ((y_6)**63)
          )
          [25570049, x**4 - y_0_40 * 19921963, y_0_40 - 1],
    (* inp_poly_41 *)
    eqmod (2**32) * (inp_poly_41 * inp_poly_41)
          (
            L0x20019848_f * (x**0) * ((y_6)**0) + 
            L0x2001984a_f * (x**1) * ((y_6)**0) + 
            L0x2001984c_f * (x**2) * ((y_6)**0) + 
            L0x2001984e_f * (x**3) * ((y_6)**0) + 
            L0x20019850_f * (x**0) * ((y_6)**1) + 
            L0x20019852_f * (x**1) * ((y_6)**1) + 
            L0x20019854_f * (x**2) * ((y_6)**1) + 
            L0x20019856_f * (x**3) * ((y_6)**1) + 
            L0x20019858_f * (x**0) * ((y_6)**2) + 
            L0x2001985a_f * (x**1) * ((y_6)**2) + 
            L0x2001985c_f * (x**2) * ((y_6)**2) + 
            L0x2001985e_f * (x**3) * ((y_6)**2) + 
            L0x20019860_f * (x**0) * ((y_6)**3) + 
            L0x20019862_f * (x**1) * ((y_6)**3) + 
            L0x20019864_f * (x**2) * ((y_6)**3) + 
            L0x20019866_f * (x**3) * ((y_6)**3) + 
            L0x20019868_f * (x**0) * ((y_6)**4) + 
            L0x2001986a_f * (x**1) * ((y_6)**4) + 
            L0x2001986c_f * (x**2) * ((y_6)**4) + 
            L0x2001986e_f * (x**3) * ((y_6)**4) + 
            L0x20019870_f * (x**0) * ((y_6)**5) + 
            L0x20019872_f * (x**1) * ((y_6)**5) + 
            L0x20019874_f * (x**2) * ((y_6)**5) + 
            L0x20019876_f * (x**3) * ((y_6)**5) + 
            L0x20019878_f * (x**0) * ((y_6)**6) + 
            L0x2001987a_f * (x**1) * ((y_6)**6) + 
            L0x2001987c_f * (x**2) * ((y_6)**6) + 
            L0x2001987e_f * (x**3) * ((y_6)**6) + 
            L0x20019880_f * (x**0) * ((y_6)**7) + 
            L0x20019882_f * (x**1) * ((y_6)**7) + 
            L0x20019884_f * (x**2) * ((y_6)**7) + 
            L0x20019886_f * (x**3) * ((y_6)**7) + 
            L0x20019888_f * (x**0) * ((y_6)**8) + 
            L0x2001988a_f * (x**1) * ((y_6)**8) + 
            L0x2001988c_f * (x**2) * ((y_6)**8) + 
            L0x2001988e_f * (x**3) * ((y_6)**8) + 
            L0x20019890_f * (x**0) * ((y_6)**9) + 
            L0x20019892_f * (x**1) * ((y_6)**9) + 
            L0x20019894_f * (x**2) * ((y_6)**9) + 
            L0x20019896_f * (x**3) * ((y_6)**9) + 
            L0x20019898_f * (x**0) * ((y_6)**10) + 
            L0x2001989a_f * (x**1) * ((y_6)**10) + 
            L0x2001989c_f * (x**2) * ((y_6)**10) + 
            L0x2001989e_f * (x**3) * ((y_6)**10) + 
            L0x200198a0_f * (x**0) * ((y_6)**11) + 
            L0x200198a2_f * (x**1) * ((y_6)**11) + 
            L0x200198a4_f * (x**2) * ((y_6)**11) + 
            L0x200198a6_f * (x**3) * ((y_6)**11) + 
            L0x200198a8_f * (x**0) * ((y_6)**12) + 
            L0x200198aa_f * (x**1) * ((y_6)**12) + 
            L0x200198ac_f * (x**2) * ((y_6)**12) + 
            L0x200198ae_f * (x**3) * ((y_6)**12) + 
            L0x200198b0_f * (x**0) * ((y_6)**13) + 
            L0x200198b2_f * (x**1) * ((y_6)**13) + 
            L0x200198b4_f * (x**2) * ((y_6)**13) + 
            L0x200198b6_f * (x**3) * ((y_6)**13) + 
            L0x200198b8_f * (x**0) * ((y_6)**14) + 
            L0x200198ba_f * (x**1) * ((y_6)**14) + 
            L0x200198bc_f * (x**2) * ((y_6)**14) + 
            L0x200198be_f * (x**3) * ((y_6)**14) + 
            L0x200198c0_f * (x**0) * ((y_6)**15) + 
            L0x200198c2_f * (x**1) * ((y_6)**15) + 
            L0x200198c4_f * (x**2) * ((y_6)**15) + 
            L0x200198c6_f * (x**3) * ((y_6)**15) + 
            L0x200198c8_f * (x**0) * ((y_6)**16) + 
            L0x200198ca_f * (x**1) * ((y_6)**16) + 
            L0x200198cc_f * (x**2) * ((y_6)**16) + 
            L0x200198ce_f * (x**3) * ((y_6)**16) + 
            L0x200198d0_f * (x**0) * ((y_6)**17) + 
            L0x200198d2_f * (x**1) * ((y_6)**17) + 
            L0x200198d4_f * (x**2) * ((y_6)**17) + 
            L0x200198d6_f * (x**3) * ((y_6)**17) + 
            L0x200198d8_f * (x**0) * ((y_6)**18) + 
            L0x200198da_f * (x**1) * ((y_6)**18) + 
            L0x200198dc_f * (x**2) * ((y_6)**18) + 
            L0x200198de_f * (x**3) * ((y_6)**18) + 
            L0x200198e0_f * (x**0) * ((y_6)**19) + 
            L0x200198e2_f * (x**1) * ((y_6)**19) + 
            L0x200198e4_f * (x**2) * ((y_6)**19) + 
            L0x200198e6_f * (x**3) * ((y_6)**19) + 
            L0x200198e8_f * (x**0) * ((y_6)**20) + 
            L0x200198ea_f * (x**1) * ((y_6)**20) + 
            L0x200198ec_f * (x**2) * ((y_6)**20) + 
            L0x200198ee_f * (x**3) * ((y_6)**20) + 
            L0x200198f0_f * (x**0) * ((y_6)**21) + 
            L0x200198f2_f * (x**1) * ((y_6)**21) + 
            L0x200198f4_f * (x**2) * ((y_6)**21) + 
            L0x200198f6_f * (x**3) * ((y_6)**21) + 
            L0x200198f8_f * (x**0) * ((y_6)**22) + 
            L0x200198fa_f * (x**1) * ((y_6)**22) + 
            L0x200198fc_f * (x**2) * ((y_6)**22) + 
            L0x200198fe_f * (x**3) * ((y_6)**22) + 
            L0x20019900_f * (x**0) * ((y_6)**23) + 
            L0x20019902_f * (x**1) * ((y_6)**23) + 
            L0x20019904_f * (x**2) * ((y_6)**23) + 
            L0x20019906_f * (x**3) * ((y_6)**23) + 
            L0x20019908_f * (x**0) * ((y_6)**24) + 
            L0x2001990a_f * (x**1) * ((y_6)**24) + 
            L0x2001990c_f * (x**2) * ((y_6)**24) + 
            L0x2001990e_f * (x**3) * ((y_6)**24) + 
            L0x20019910_f * (x**0) * ((y_6)**25) + 
            L0x20019912_f * (x**1) * ((y_6)**25) + 
            L0x20019914_f * (x**2) * ((y_6)**25) + 
            L0x20019916_f * (x**3) * ((y_6)**25) + 
            L0x20019918_f * (x**0) * ((y_6)**26) + 
            L0x2001991a_f * (x**1) * ((y_6)**26) + 
            L0x2001991c_f * (x**2) * ((y_6)**26) + 
            L0x2001991e_f * (x**3) * ((y_6)**26) + 
            L0x20019920_f * (x**0) * ((y_6)**27) + 
            L0x20019922_f * (x**1) * ((y_6)**27) + 
            L0x20019924_f * (x**2) * ((y_6)**27) + 
            L0x20019926_f * (x**3) * ((y_6)**27) + 
            L0x20019928_f * (x**0) * ((y_6)**28) + 
            L0x2001992a_f * (x**1) * ((y_6)**28) + 
            L0x2001992c_f * (x**2) * ((y_6)**28) + 
            L0x2001992e_f * (x**3) * ((y_6)**28) + 
            L0x20019930_f * (x**0) * ((y_6)**29) + 
            L0x20019932_f * (x**1) * ((y_6)**29) + 
            L0x20019934_f * (x**2) * ((y_6)**29) + 
            L0x20019936_f * (x**3) * ((y_6)**29) + 
            L0x20019938_f * (x**0) * ((y_6)**30) + 
            L0x2001993a_f * (x**1) * ((y_6)**30) + 
            L0x2001993c_f * (x**2) * ((y_6)**30) + 
            L0x2001993e_f * (x**3) * ((y_6)**30) + 
            L0x20019940_f * (x**0) * ((y_6)**31) + 
            L0x20019942_f * (x**1) * ((y_6)**31) + 
            L0x20019944_f * (x**2) * ((y_6)**31) + 
            L0x20019946_f * (x**3) * ((y_6)**31) + 
            L0x20019948_f * (x**0) * ((y_6)**32) + 
            L0x2001994a_f * (x**1) * ((y_6)**32) + 
            L0x2001994c_f * (x**2) * ((y_6)**32) + 
            L0x2001994e_f * (x**3) * ((y_6)**32) + 
            L0x20019950_f * (x**0) * ((y_6)**33) + 
            L0x20019952_f * (x**1) * ((y_6)**33) + 
            L0x20019954_f * (x**2) * ((y_6)**33) + 
            L0x20019956_f * (x**3) * ((y_6)**33) + 
            L0x20019958_f * (x**0) * ((y_6)**34) + 
            L0x2001995a_f * (x**1) * ((y_6)**34) + 
            L0x2001995c_f * (x**2) * ((y_6)**34) + 
            L0x2001995e_f * (x**3) * ((y_6)**34) + 
            L0x20019960_f * (x**0) * ((y_6)**35) + 
            L0x20019962_f * (x**1) * ((y_6)**35) + 
            L0x20019964_f * (x**2) * ((y_6)**35) + 
            L0x20019966_f * (x**3) * ((y_6)**35) + 
            L0x20019968_f * (x**0) * ((y_6)**36) + 
            L0x2001996a_f * (x**1) * ((y_6)**36) + 
            L0x2001996c_f * (x**2) * ((y_6)**36) + 
            L0x2001996e_f * (x**3) * ((y_6)**36) + 
            L0x20019970_f * (x**0) * ((y_6)**37) + 
            L0x20019972_f * (x**1) * ((y_6)**37) + 
            L0x20019974_f * (x**2) * ((y_6)**37) + 
            L0x20019976_f * (x**3) * ((y_6)**37) + 
            L0x20019978_f * (x**0) * ((y_6)**38) + 
            L0x2001997a_f * (x**1) * ((y_6)**38) + 
            L0x2001997c_f * (x**2) * ((y_6)**38) + 
            L0x2001997e_f * (x**3) * ((y_6)**38) + 
            L0x20019980_f * (x**0) * ((y_6)**39) + 
            L0x20019982_f * (x**1) * ((y_6)**39) + 
            L0x20019984_f * (x**2) * ((y_6)**39) + 
            L0x20019986_f * (x**3) * ((y_6)**39) + 
            L0x20019988_f * (x**0) * ((y_6)**40) + 
            L0x2001998a_f * (x**1) * ((y_6)**40) + 
            L0x2001998c_f * (x**2) * ((y_6)**40) + 
            L0x2001998e_f * (x**3) * ((y_6)**40) + 
            L0x20019990_f * (x**0) * ((y_6)**41) + 
            L0x20019992_f * (x**1) * ((y_6)**41) + 
            L0x20019994_f * (x**2) * ((y_6)**41) + 
            L0x20019996_f * (x**3) * ((y_6)**41) + 
            L0x20019998_f * (x**0) * ((y_6)**42) + 
            L0x2001999a_f * (x**1) * ((y_6)**42) + 
            L0x2001999c_f * (x**2) * ((y_6)**42) + 
            L0x2001999e_f * (x**3) * ((y_6)**42) + 
            L0x200199a0_f * (x**0) * ((y_6)**43) + 
            L0x200199a2_f * (x**1) * ((y_6)**43) + 
            L0x200199a4_f * (x**2) * ((y_6)**43) + 
            L0x200199a6_f * (x**3) * ((y_6)**43) + 
            L0x200199a8_f * (x**0) * ((y_6)**44) + 
            L0x200199aa_f * (x**1) * ((y_6)**44) + 
            L0x200199ac_f * (x**2) * ((y_6)**44) + 
            L0x200199ae_f * (x**3) * ((y_6)**44) + 
            L0x200199b0_f * (x**0) * ((y_6)**45) + 
            L0x200199b2_f * (x**1) * ((y_6)**45) + 
            L0x200199b4_f * (x**2) * ((y_6)**45) + 
            L0x200199b6_f * (x**3) * ((y_6)**45) + 
            L0x200199b8_f * (x**0) * ((y_6)**46) + 
            L0x200199ba_f * (x**1) * ((y_6)**46) + 
            L0x200199bc_f * (x**2) * ((y_6)**46) + 
            L0x200199be_f * (x**3) * ((y_6)**46) + 
            L0x200199c0_f * (x**0) * ((y_6)**47) + 
            L0x200199c2_f * (x**1) * ((y_6)**47) + 
            L0x200199c4_f * (x**2) * ((y_6)**47) + 
            L0x200199c6_f * (x**3) * ((y_6)**47) + 
            L0x200199c8_f * (x**0) * ((y_6)**48) + 
            L0x200199ca_f * (x**1) * ((y_6)**48) + 
            L0x200199cc_f * (x**2) * ((y_6)**48) + 
            L0x200199ce_f * (x**3) * ((y_6)**48) + 
            L0x200199d0_f * (x**0) * ((y_6)**49) + 
            L0x200199d2_f * (x**1) * ((y_6)**49) + 
            L0x200199d4_f * (x**2) * ((y_6)**49) + 
            L0x200199d6_f * (x**3) * ((y_6)**49) + 
            L0x200199d8_f * (x**0) * ((y_6)**50) + 
            L0x200199da_f * (x**1) * ((y_6)**50) + 
            L0x200199dc_f * (x**2) * ((y_6)**50) + 
            L0x200199de_f * (x**3) * ((y_6)**50) + 
            L0x200199e0_f * (x**0) * ((y_6)**51) + 
            L0x200199e2_f * (x**1) * ((y_6)**51) + 
            L0x200199e4_f * (x**2) * ((y_6)**51) + 
            L0x200199e6_f * (x**3) * ((y_6)**51) + 
            L0x200199e8_f * (x**0) * ((y_6)**52) + 
            L0x200199ea_f * (x**1) * ((y_6)**52) + 
            L0x200199ec_f * (x**2) * ((y_6)**52) + 
            L0x200199ee_f * (x**3) * ((y_6)**52) + 
            L0x200199f0_f * (x**0) * ((y_6)**53) + 
            L0x200199f2_f * (x**1) * ((y_6)**53) + 
            L0x200199f4_f * (x**2) * ((y_6)**53) + 
            L0x200199f6_f * (x**3) * ((y_6)**53) + 
            L0x200199f8_f * (x**0) * ((y_6)**54) + 
            L0x200199fa_f * (x**1) * ((y_6)**54) + 
            L0x200199fc_f * (x**2) * ((y_6)**54) + 
            L0x200199fe_f * (x**3) * ((y_6)**54) + 
            L0x20019a00_f * (x**0) * ((y_6)**55) + 
            L0x20019a02_f * (x**1) * ((y_6)**55) + 
            L0x20019a04_f * (x**2) * ((y_6)**55) + 
            L0x20019a06_f * (x**3) * ((y_6)**55) + 
            L0x20019a08_f * (x**0) * ((y_6)**56) + 
            L0x20019a0a_f * (x**1) * ((y_6)**56) + 
            L0x20019a0c_f * (x**2) * ((y_6)**56) + 
            L0x20019a0e_f * (x**3) * ((y_6)**56) + 
            L0x20019a10_f * (x**0) * ((y_6)**57) + 
            L0x20019a12_f * (x**1) * ((y_6)**57) + 
            L0x20019a14_f * (x**2) * ((y_6)**57) + 
            L0x20019a16_f * (x**3) * ((y_6)**57) + 
            L0x20019a18_f * (x**0) * ((y_6)**58) + 
            L0x20019a1a_f * (x**1) * ((y_6)**58) + 
            L0x20019a1c_f * (x**2) * ((y_6)**58) + 
            L0x20019a1e_f * (x**3) * ((y_6)**58) + 
            L0x20019a20_f * (x**0) * ((y_6)**59) + 
            L0x20019a22_f * (x**1) * ((y_6)**59) + 
            L0x20019a24_f * (x**2) * ((y_6)**59) + 
            L0x20019a26_f * (x**3) * ((y_6)**59) + 
            L0x20019a28_f * (x**0) * ((y_6)**60) + 
            L0x20019a2a_f * (x**1) * ((y_6)**60) + 
            L0x20019a2c_f * (x**2) * ((y_6)**60) + 
            L0x20019a2e_f * (x**3) * ((y_6)**60) + 
            L0x20019a30_f * (x**0) * ((y_6)**61) + 
            L0x20019a32_f * (x**1) * ((y_6)**61) + 
            L0x20019a34_f * (x**2) * ((y_6)**61) + 
            L0x20019a36_f * (x**3) * ((y_6)**61) + 
            L0x20019a38_f * (x**0) * ((y_6)**62) + 
            L0x20019a3a_f * (x**1) * ((y_6)**62) + 
            L0x20019a3c_f * (x**2) * ((y_6)**62) + 
            L0x20019a3e_f * (x**3) * ((y_6)**62) + 
            L0x20019a40_f * (x**0) * ((y_6)**63) + 
            L0x20019a42_f * (x**1) * ((y_6)**63) + 
            L0x20019a44_f * (x**2) * ((y_6)**63) + 
            L0x20019a46_f * (x**3) * ((y_6)**63)
          )
          [25570049, x**4 - y_0_41 * 5648086, y_0_41 - 1],
    (* inp_poly_42 *)
    eqmod (2**32) * (inp_poly_42 * inp_poly_42)
          (
            L0x20019848_f * (x**0) * ((y_6)**0) + 
            L0x2001984a_f * (x**1) * ((y_6)**0) + 
            L0x2001984c_f * (x**2) * ((y_6)**0) + 
            L0x2001984e_f * (x**3) * ((y_6)**0) + 
            L0x20019850_f * (x**0) * ((y_6)**1) + 
            L0x20019852_f * (x**1) * ((y_6)**1) + 
            L0x20019854_f * (x**2) * ((y_6)**1) + 
            L0x20019856_f * (x**3) * ((y_6)**1) + 
            L0x20019858_f * (x**0) * ((y_6)**2) + 
            L0x2001985a_f * (x**1) * ((y_6)**2) + 
            L0x2001985c_f * (x**2) * ((y_6)**2) + 
            L0x2001985e_f * (x**3) * ((y_6)**2) + 
            L0x20019860_f * (x**0) * ((y_6)**3) + 
            L0x20019862_f * (x**1) * ((y_6)**3) + 
            L0x20019864_f * (x**2) * ((y_6)**3) + 
            L0x20019866_f * (x**3) * ((y_6)**3) + 
            L0x20019868_f * (x**0) * ((y_6)**4) + 
            L0x2001986a_f * (x**1) * ((y_6)**4) + 
            L0x2001986c_f * (x**2) * ((y_6)**4) + 
            L0x2001986e_f * (x**3) * ((y_6)**4) + 
            L0x20019870_f * (x**0) * ((y_6)**5) + 
            L0x20019872_f * (x**1) * ((y_6)**5) + 
            L0x20019874_f * (x**2) * ((y_6)**5) + 
            L0x20019876_f * (x**3) * ((y_6)**5) + 
            L0x20019878_f * (x**0) * ((y_6)**6) + 
            L0x2001987a_f * (x**1) * ((y_6)**6) + 
            L0x2001987c_f * (x**2) * ((y_6)**6) + 
            L0x2001987e_f * (x**3) * ((y_6)**6) + 
            L0x20019880_f * (x**0) * ((y_6)**7) + 
            L0x20019882_f * (x**1) * ((y_6)**7) + 
            L0x20019884_f * (x**2) * ((y_6)**7) + 
            L0x20019886_f * (x**3) * ((y_6)**7) + 
            L0x20019888_f * (x**0) * ((y_6)**8) + 
            L0x2001988a_f * (x**1) * ((y_6)**8) + 
            L0x2001988c_f * (x**2) * ((y_6)**8) + 
            L0x2001988e_f * (x**3) * ((y_6)**8) + 
            L0x20019890_f * (x**0) * ((y_6)**9) + 
            L0x20019892_f * (x**1) * ((y_6)**9) + 
            L0x20019894_f * (x**2) * ((y_6)**9) + 
            L0x20019896_f * (x**3) * ((y_6)**9) + 
            L0x20019898_f * (x**0) * ((y_6)**10) + 
            L0x2001989a_f * (x**1) * ((y_6)**10) + 
            L0x2001989c_f * (x**2) * ((y_6)**10) + 
            L0x2001989e_f * (x**3) * ((y_6)**10) + 
            L0x200198a0_f * (x**0) * ((y_6)**11) + 
            L0x200198a2_f * (x**1) * ((y_6)**11) + 
            L0x200198a4_f * (x**2) * ((y_6)**11) + 
            L0x200198a6_f * (x**3) * ((y_6)**11) + 
            L0x200198a8_f * (x**0) * ((y_6)**12) + 
            L0x200198aa_f * (x**1) * ((y_6)**12) + 
            L0x200198ac_f * (x**2) * ((y_6)**12) + 
            L0x200198ae_f * (x**3) * ((y_6)**12) + 
            L0x200198b0_f * (x**0) * ((y_6)**13) + 
            L0x200198b2_f * (x**1) * ((y_6)**13) + 
            L0x200198b4_f * (x**2) * ((y_6)**13) + 
            L0x200198b6_f * (x**3) * ((y_6)**13) + 
            L0x200198b8_f * (x**0) * ((y_6)**14) + 
            L0x200198ba_f * (x**1) * ((y_6)**14) + 
            L0x200198bc_f * (x**2) * ((y_6)**14) + 
            L0x200198be_f * (x**3) * ((y_6)**14) + 
            L0x200198c0_f * (x**0) * ((y_6)**15) + 
            L0x200198c2_f * (x**1) * ((y_6)**15) + 
            L0x200198c4_f * (x**2) * ((y_6)**15) + 
            L0x200198c6_f * (x**3) * ((y_6)**15) + 
            L0x200198c8_f * (x**0) * ((y_6)**16) + 
            L0x200198ca_f * (x**1) * ((y_6)**16) + 
            L0x200198cc_f * (x**2) * ((y_6)**16) + 
            L0x200198ce_f * (x**3) * ((y_6)**16) + 
            L0x200198d0_f * (x**0) * ((y_6)**17) + 
            L0x200198d2_f * (x**1) * ((y_6)**17) + 
            L0x200198d4_f * (x**2) * ((y_6)**17) + 
            L0x200198d6_f * (x**3) * ((y_6)**17) + 
            L0x200198d8_f * (x**0) * ((y_6)**18) + 
            L0x200198da_f * (x**1) * ((y_6)**18) + 
            L0x200198dc_f * (x**2) * ((y_6)**18) + 
            L0x200198de_f * (x**3) * ((y_6)**18) + 
            L0x200198e0_f * (x**0) * ((y_6)**19) + 
            L0x200198e2_f * (x**1) * ((y_6)**19) + 
            L0x200198e4_f * (x**2) * ((y_6)**19) + 
            L0x200198e6_f * (x**3) * ((y_6)**19) + 
            L0x200198e8_f * (x**0) * ((y_6)**20) + 
            L0x200198ea_f * (x**1) * ((y_6)**20) + 
            L0x200198ec_f * (x**2) * ((y_6)**20) + 
            L0x200198ee_f * (x**3) * ((y_6)**20) + 
            L0x200198f0_f * (x**0) * ((y_6)**21) + 
            L0x200198f2_f * (x**1) * ((y_6)**21) + 
            L0x200198f4_f * (x**2) * ((y_6)**21) + 
            L0x200198f6_f * (x**3) * ((y_6)**21) + 
            L0x200198f8_f * (x**0) * ((y_6)**22) + 
            L0x200198fa_f * (x**1) * ((y_6)**22) + 
            L0x200198fc_f * (x**2) * ((y_6)**22) + 
            L0x200198fe_f * (x**3) * ((y_6)**22) + 
            L0x20019900_f * (x**0) * ((y_6)**23) + 
            L0x20019902_f * (x**1) * ((y_6)**23) + 
            L0x20019904_f * (x**2) * ((y_6)**23) + 
            L0x20019906_f * (x**3) * ((y_6)**23) + 
            L0x20019908_f * (x**0) * ((y_6)**24) + 
            L0x2001990a_f * (x**1) * ((y_6)**24) + 
            L0x2001990c_f * (x**2) * ((y_6)**24) + 
            L0x2001990e_f * (x**3) * ((y_6)**24) + 
            L0x20019910_f * (x**0) * ((y_6)**25) + 
            L0x20019912_f * (x**1) * ((y_6)**25) + 
            L0x20019914_f * (x**2) * ((y_6)**25) + 
            L0x20019916_f * (x**3) * ((y_6)**25) + 
            L0x20019918_f * (x**0) * ((y_6)**26) + 
            L0x2001991a_f * (x**1) * ((y_6)**26) + 
            L0x2001991c_f * (x**2) * ((y_6)**26) + 
            L0x2001991e_f * (x**3) * ((y_6)**26) + 
            L0x20019920_f * (x**0) * ((y_6)**27) + 
            L0x20019922_f * (x**1) * ((y_6)**27) + 
            L0x20019924_f * (x**2) * ((y_6)**27) + 
            L0x20019926_f * (x**3) * ((y_6)**27) + 
            L0x20019928_f * (x**0) * ((y_6)**28) + 
            L0x2001992a_f * (x**1) * ((y_6)**28) + 
            L0x2001992c_f * (x**2) * ((y_6)**28) + 
            L0x2001992e_f * (x**3) * ((y_6)**28) + 
            L0x20019930_f * (x**0) * ((y_6)**29) + 
            L0x20019932_f * (x**1) * ((y_6)**29) + 
            L0x20019934_f * (x**2) * ((y_6)**29) + 
            L0x20019936_f * (x**3) * ((y_6)**29) + 
            L0x20019938_f * (x**0) * ((y_6)**30) + 
            L0x2001993a_f * (x**1) * ((y_6)**30) + 
            L0x2001993c_f * (x**2) * ((y_6)**30) + 
            L0x2001993e_f * (x**3) * ((y_6)**30) + 
            L0x20019940_f * (x**0) * ((y_6)**31) + 
            L0x20019942_f * (x**1) * ((y_6)**31) + 
            L0x20019944_f * (x**2) * ((y_6)**31) + 
            L0x20019946_f * (x**3) * ((y_6)**31) + 
            L0x20019948_f * (x**0) * ((y_6)**32) + 
            L0x2001994a_f * (x**1) * ((y_6)**32) + 
            L0x2001994c_f * (x**2) * ((y_6)**32) + 
            L0x2001994e_f * (x**3) * ((y_6)**32) + 
            L0x20019950_f * (x**0) * ((y_6)**33) + 
            L0x20019952_f * (x**1) * ((y_6)**33) + 
            L0x20019954_f * (x**2) * ((y_6)**33) + 
            L0x20019956_f * (x**3) * ((y_6)**33) + 
            L0x20019958_f * (x**0) * ((y_6)**34) + 
            L0x2001995a_f * (x**1) * ((y_6)**34) + 
            L0x2001995c_f * (x**2) * ((y_6)**34) + 
            L0x2001995e_f * (x**3) * ((y_6)**34) + 
            L0x20019960_f * (x**0) * ((y_6)**35) + 
            L0x20019962_f * (x**1) * ((y_6)**35) + 
            L0x20019964_f * (x**2) * ((y_6)**35) + 
            L0x20019966_f * (x**3) * ((y_6)**35) + 
            L0x20019968_f * (x**0) * ((y_6)**36) + 
            L0x2001996a_f * (x**1) * ((y_6)**36) + 
            L0x2001996c_f * (x**2) * ((y_6)**36) + 
            L0x2001996e_f * (x**3) * ((y_6)**36) + 
            L0x20019970_f * (x**0) * ((y_6)**37) + 
            L0x20019972_f * (x**1) * ((y_6)**37) + 
            L0x20019974_f * (x**2) * ((y_6)**37) + 
            L0x20019976_f * (x**3) * ((y_6)**37) + 
            L0x20019978_f * (x**0) * ((y_6)**38) + 
            L0x2001997a_f * (x**1) * ((y_6)**38) + 
            L0x2001997c_f * (x**2) * ((y_6)**38) + 
            L0x2001997e_f * (x**3) * ((y_6)**38) + 
            L0x20019980_f * (x**0) * ((y_6)**39) + 
            L0x20019982_f * (x**1) * ((y_6)**39) + 
            L0x20019984_f * (x**2) * ((y_6)**39) + 
            L0x20019986_f * (x**3) * ((y_6)**39) + 
            L0x20019988_f * (x**0) * ((y_6)**40) + 
            L0x2001998a_f * (x**1) * ((y_6)**40) + 
            L0x2001998c_f * (x**2) * ((y_6)**40) + 
            L0x2001998e_f * (x**3) * ((y_6)**40) + 
            L0x20019990_f * (x**0) * ((y_6)**41) + 
            L0x20019992_f * (x**1) * ((y_6)**41) + 
            L0x20019994_f * (x**2) * ((y_6)**41) + 
            L0x20019996_f * (x**3) * ((y_6)**41) + 
            L0x20019998_f * (x**0) * ((y_6)**42) + 
            L0x2001999a_f * (x**1) * ((y_6)**42) + 
            L0x2001999c_f * (x**2) * ((y_6)**42) + 
            L0x2001999e_f * (x**3) * ((y_6)**42) + 
            L0x200199a0_f * (x**0) * ((y_6)**43) + 
            L0x200199a2_f * (x**1) * ((y_6)**43) + 
            L0x200199a4_f * (x**2) * ((y_6)**43) + 
            L0x200199a6_f * (x**3) * ((y_6)**43) + 
            L0x200199a8_f * (x**0) * ((y_6)**44) + 
            L0x200199aa_f * (x**1) * ((y_6)**44) + 
            L0x200199ac_f * (x**2) * ((y_6)**44) + 
            L0x200199ae_f * (x**3) * ((y_6)**44) + 
            L0x200199b0_f * (x**0) * ((y_6)**45) + 
            L0x200199b2_f * (x**1) * ((y_6)**45) + 
            L0x200199b4_f * (x**2) * ((y_6)**45) + 
            L0x200199b6_f * (x**3) * ((y_6)**45) + 
            L0x200199b8_f * (x**0) * ((y_6)**46) + 
            L0x200199ba_f * (x**1) * ((y_6)**46) + 
            L0x200199bc_f * (x**2) * ((y_6)**46) + 
            L0x200199be_f * (x**3) * ((y_6)**46) + 
            L0x200199c0_f * (x**0) * ((y_6)**47) + 
            L0x200199c2_f * (x**1) * ((y_6)**47) + 
            L0x200199c4_f * (x**2) * ((y_6)**47) + 
            L0x200199c6_f * (x**3) * ((y_6)**47) + 
            L0x200199c8_f * (x**0) * ((y_6)**48) + 
            L0x200199ca_f * (x**1) * ((y_6)**48) + 
            L0x200199cc_f * (x**2) * ((y_6)**48) + 
            L0x200199ce_f * (x**3) * ((y_6)**48) + 
            L0x200199d0_f * (x**0) * ((y_6)**49) + 
            L0x200199d2_f * (x**1) * ((y_6)**49) + 
            L0x200199d4_f * (x**2) * ((y_6)**49) + 
            L0x200199d6_f * (x**3) * ((y_6)**49) + 
            L0x200199d8_f * (x**0) * ((y_6)**50) + 
            L0x200199da_f * (x**1) * ((y_6)**50) + 
            L0x200199dc_f * (x**2) * ((y_6)**50) + 
            L0x200199de_f * (x**3) * ((y_6)**50) + 
            L0x200199e0_f * (x**0) * ((y_6)**51) + 
            L0x200199e2_f * (x**1) * ((y_6)**51) + 
            L0x200199e4_f * (x**2) * ((y_6)**51) + 
            L0x200199e6_f * (x**3) * ((y_6)**51) + 
            L0x200199e8_f * (x**0) * ((y_6)**52) + 
            L0x200199ea_f * (x**1) * ((y_6)**52) + 
            L0x200199ec_f * (x**2) * ((y_6)**52) + 
            L0x200199ee_f * (x**3) * ((y_6)**52) + 
            L0x200199f0_f * (x**0) * ((y_6)**53) + 
            L0x200199f2_f * (x**1) * ((y_6)**53) + 
            L0x200199f4_f * (x**2) * ((y_6)**53) + 
            L0x200199f6_f * (x**3) * ((y_6)**53) + 
            L0x200199f8_f * (x**0) * ((y_6)**54) + 
            L0x200199fa_f * (x**1) * ((y_6)**54) + 
            L0x200199fc_f * (x**2) * ((y_6)**54) + 
            L0x200199fe_f * (x**3) * ((y_6)**54) + 
            L0x20019a00_f * (x**0) * ((y_6)**55) + 
            L0x20019a02_f * (x**1) * ((y_6)**55) + 
            L0x20019a04_f * (x**2) * ((y_6)**55) + 
            L0x20019a06_f * (x**3) * ((y_6)**55) + 
            L0x20019a08_f * (x**0) * ((y_6)**56) + 
            L0x20019a0a_f * (x**1) * ((y_6)**56) + 
            L0x20019a0c_f * (x**2) * ((y_6)**56) + 
            L0x20019a0e_f * (x**3) * ((y_6)**56) + 
            L0x20019a10_f * (x**0) * ((y_6)**57) + 
            L0x20019a12_f * (x**1) * ((y_6)**57) + 
            L0x20019a14_f * (x**2) * ((y_6)**57) + 
            L0x20019a16_f * (x**3) * ((y_6)**57) + 
            L0x20019a18_f * (x**0) * ((y_6)**58) + 
            L0x20019a1a_f * (x**1) * ((y_6)**58) + 
            L0x20019a1c_f * (x**2) * ((y_6)**58) + 
            L0x20019a1e_f * (x**3) * ((y_6)**58) + 
            L0x20019a20_f * (x**0) * ((y_6)**59) + 
            L0x20019a22_f * (x**1) * ((y_6)**59) + 
            L0x20019a24_f * (x**2) * ((y_6)**59) + 
            L0x20019a26_f * (x**3) * ((y_6)**59) + 
            L0x20019a28_f * (x**0) * ((y_6)**60) + 
            L0x20019a2a_f * (x**1) * ((y_6)**60) + 
            L0x20019a2c_f * (x**2) * ((y_6)**60) + 
            L0x20019a2e_f * (x**3) * ((y_6)**60) + 
            L0x20019a30_f * (x**0) * ((y_6)**61) + 
            L0x20019a32_f * (x**1) * ((y_6)**61) + 
            L0x20019a34_f * (x**2) * ((y_6)**61) + 
            L0x20019a36_f * (x**3) * ((y_6)**61) + 
            L0x20019a38_f * (x**0) * ((y_6)**62) + 
            L0x20019a3a_f * (x**1) * ((y_6)**62) + 
            L0x20019a3c_f * (x**2) * ((y_6)**62) + 
            L0x20019a3e_f * (x**3) * ((y_6)**62) + 
            L0x20019a40_f * (x**0) * ((y_6)**63) + 
            L0x20019a42_f * (x**1) * ((y_6)**63) + 
            L0x20019a44_f * (x**2) * ((y_6)**63) + 
            L0x20019a46_f * (x**3) * ((y_6)**63)
          )
          [25570049, x**4 - y_0_42 * 6202837, y_0_42 - 1],
    (* inp_poly_43 *)
    eqmod (2**32) * (inp_poly_43 * inp_poly_43)
          (
            L0x20019848_f * (x**0) * ((y_6)**0) + 
            L0x2001984a_f * (x**1) * ((y_6)**0) + 
            L0x2001984c_f * (x**2) * ((y_6)**0) + 
            L0x2001984e_f * (x**3) * ((y_6)**0) + 
            L0x20019850_f * (x**0) * ((y_6)**1) + 
            L0x20019852_f * (x**1) * ((y_6)**1) + 
            L0x20019854_f * (x**2) * ((y_6)**1) + 
            L0x20019856_f * (x**3) * ((y_6)**1) + 
            L0x20019858_f * (x**0) * ((y_6)**2) + 
            L0x2001985a_f * (x**1) * ((y_6)**2) + 
            L0x2001985c_f * (x**2) * ((y_6)**2) + 
            L0x2001985e_f * (x**3) * ((y_6)**2) + 
            L0x20019860_f * (x**0) * ((y_6)**3) + 
            L0x20019862_f * (x**1) * ((y_6)**3) + 
            L0x20019864_f * (x**2) * ((y_6)**3) + 
            L0x20019866_f * (x**3) * ((y_6)**3) + 
            L0x20019868_f * (x**0) * ((y_6)**4) + 
            L0x2001986a_f * (x**1) * ((y_6)**4) + 
            L0x2001986c_f * (x**2) * ((y_6)**4) + 
            L0x2001986e_f * (x**3) * ((y_6)**4) + 
            L0x20019870_f * (x**0) * ((y_6)**5) + 
            L0x20019872_f * (x**1) * ((y_6)**5) + 
            L0x20019874_f * (x**2) * ((y_6)**5) + 
            L0x20019876_f * (x**3) * ((y_6)**5) + 
            L0x20019878_f * (x**0) * ((y_6)**6) + 
            L0x2001987a_f * (x**1) * ((y_6)**6) + 
            L0x2001987c_f * (x**2) * ((y_6)**6) + 
            L0x2001987e_f * (x**3) * ((y_6)**6) + 
            L0x20019880_f * (x**0) * ((y_6)**7) + 
            L0x20019882_f * (x**1) * ((y_6)**7) + 
            L0x20019884_f * (x**2) * ((y_6)**7) + 
            L0x20019886_f * (x**3) * ((y_6)**7) + 
            L0x20019888_f * (x**0) * ((y_6)**8) + 
            L0x2001988a_f * (x**1) * ((y_6)**8) + 
            L0x2001988c_f * (x**2) * ((y_6)**8) + 
            L0x2001988e_f * (x**3) * ((y_6)**8) + 
            L0x20019890_f * (x**0) * ((y_6)**9) + 
            L0x20019892_f * (x**1) * ((y_6)**9) + 
            L0x20019894_f * (x**2) * ((y_6)**9) + 
            L0x20019896_f * (x**3) * ((y_6)**9) + 
            L0x20019898_f * (x**0) * ((y_6)**10) + 
            L0x2001989a_f * (x**1) * ((y_6)**10) + 
            L0x2001989c_f * (x**2) * ((y_6)**10) + 
            L0x2001989e_f * (x**3) * ((y_6)**10) + 
            L0x200198a0_f * (x**0) * ((y_6)**11) + 
            L0x200198a2_f * (x**1) * ((y_6)**11) + 
            L0x200198a4_f * (x**2) * ((y_6)**11) + 
            L0x200198a6_f * (x**3) * ((y_6)**11) + 
            L0x200198a8_f * (x**0) * ((y_6)**12) + 
            L0x200198aa_f * (x**1) * ((y_6)**12) + 
            L0x200198ac_f * (x**2) * ((y_6)**12) + 
            L0x200198ae_f * (x**3) * ((y_6)**12) + 
            L0x200198b0_f * (x**0) * ((y_6)**13) + 
            L0x200198b2_f * (x**1) * ((y_6)**13) + 
            L0x200198b4_f * (x**2) * ((y_6)**13) + 
            L0x200198b6_f * (x**3) * ((y_6)**13) + 
            L0x200198b8_f * (x**0) * ((y_6)**14) + 
            L0x200198ba_f * (x**1) * ((y_6)**14) + 
            L0x200198bc_f * (x**2) * ((y_6)**14) + 
            L0x200198be_f * (x**3) * ((y_6)**14) + 
            L0x200198c0_f * (x**0) * ((y_6)**15) + 
            L0x200198c2_f * (x**1) * ((y_6)**15) + 
            L0x200198c4_f * (x**2) * ((y_6)**15) + 
            L0x200198c6_f * (x**3) * ((y_6)**15) + 
            L0x200198c8_f * (x**0) * ((y_6)**16) + 
            L0x200198ca_f * (x**1) * ((y_6)**16) + 
            L0x200198cc_f * (x**2) * ((y_6)**16) + 
            L0x200198ce_f * (x**3) * ((y_6)**16) + 
            L0x200198d0_f * (x**0) * ((y_6)**17) + 
            L0x200198d2_f * (x**1) * ((y_6)**17) + 
            L0x200198d4_f * (x**2) * ((y_6)**17) + 
            L0x200198d6_f * (x**3) * ((y_6)**17) + 
            L0x200198d8_f * (x**0) * ((y_6)**18) + 
            L0x200198da_f * (x**1) * ((y_6)**18) + 
            L0x200198dc_f * (x**2) * ((y_6)**18) + 
            L0x200198de_f * (x**3) * ((y_6)**18) + 
            L0x200198e0_f * (x**0) * ((y_6)**19) + 
            L0x200198e2_f * (x**1) * ((y_6)**19) + 
            L0x200198e4_f * (x**2) * ((y_6)**19) + 
            L0x200198e6_f * (x**3) * ((y_6)**19) + 
            L0x200198e8_f * (x**0) * ((y_6)**20) + 
            L0x200198ea_f * (x**1) * ((y_6)**20) + 
            L0x200198ec_f * (x**2) * ((y_6)**20) + 
            L0x200198ee_f * (x**3) * ((y_6)**20) + 
            L0x200198f0_f * (x**0) * ((y_6)**21) + 
            L0x200198f2_f * (x**1) * ((y_6)**21) + 
            L0x200198f4_f * (x**2) * ((y_6)**21) + 
            L0x200198f6_f * (x**3) * ((y_6)**21) + 
            L0x200198f8_f * (x**0) * ((y_6)**22) + 
            L0x200198fa_f * (x**1) * ((y_6)**22) + 
            L0x200198fc_f * (x**2) * ((y_6)**22) + 
            L0x200198fe_f * (x**3) * ((y_6)**22) + 
            L0x20019900_f * (x**0) * ((y_6)**23) + 
            L0x20019902_f * (x**1) * ((y_6)**23) + 
            L0x20019904_f * (x**2) * ((y_6)**23) + 
            L0x20019906_f * (x**3) * ((y_6)**23) + 
            L0x20019908_f * (x**0) * ((y_6)**24) + 
            L0x2001990a_f * (x**1) * ((y_6)**24) + 
            L0x2001990c_f * (x**2) * ((y_6)**24) + 
            L0x2001990e_f * (x**3) * ((y_6)**24) + 
            L0x20019910_f * (x**0) * ((y_6)**25) + 
            L0x20019912_f * (x**1) * ((y_6)**25) + 
            L0x20019914_f * (x**2) * ((y_6)**25) + 
            L0x20019916_f * (x**3) * ((y_6)**25) + 
            L0x20019918_f * (x**0) * ((y_6)**26) + 
            L0x2001991a_f * (x**1) * ((y_6)**26) + 
            L0x2001991c_f * (x**2) * ((y_6)**26) + 
            L0x2001991e_f * (x**3) * ((y_6)**26) + 
            L0x20019920_f * (x**0) * ((y_6)**27) + 
            L0x20019922_f * (x**1) * ((y_6)**27) + 
            L0x20019924_f * (x**2) * ((y_6)**27) + 
            L0x20019926_f * (x**3) * ((y_6)**27) + 
            L0x20019928_f * (x**0) * ((y_6)**28) + 
            L0x2001992a_f * (x**1) * ((y_6)**28) + 
            L0x2001992c_f * (x**2) * ((y_6)**28) + 
            L0x2001992e_f * (x**3) * ((y_6)**28) + 
            L0x20019930_f * (x**0) * ((y_6)**29) + 
            L0x20019932_f * (x**1) * ((y_6)**29) + 
            L0x20019934_f * (x**2) * ((y_6)**29) + 
            L0x20019936_f * (x**3) * ((y_6)**29) + 
            L0x20019938_f * (x**0) * ((y_6)**30) + 
            L0x2001993a_f * (x**1) * ((y_6)**30) + 
            L0x2001993c_f * (x**2) * ((y_6)**30) + 
            L0x2001993e_f * (x**3) * ((y_6)**30) + 
            L0x20019940_f * (x**0) * ((y_6)**31) + 
            L0x20019942_f * (x**1) * ((y_6)**31) + 
            L0x20019944_f * (x**2) * ((y_6)**31) + 
            L0x20019946_f * (x**3) * ((y_6)**31) + 
            L0x20019948_f * (x**0) * ((y_6)**32) + 
            L0x2001994a_f * (x**1) * ((y_6)**32) + 
            L0x2001994c_f * (x**2) * ((y_6)**32) + 
            L0x2001994e_f * (x**3) * ((y_6)**32) + 
            L0x20019950_f * (x**0) * ((y_6)**33) + 
            L0x20019952_f * (x**1) * ((y_6)**33) + 
            L0x20019954_f * (x**2) * ((y_6)**33) + 
            L0x20019956_f * (x**3) * ((y_6)**33) + 
            L0x20019958_f * (x**0) * ((y_6)**34) + 
            L0x2001995a_f * (x**1) * ((y_6)**34) + 
            L0x2001995c_f * (x**2) * ((y_6)**34) + 
            L0x2001995e_f * (x**3) * ((y_6)**34) + 
            L0x20019960_f * (x**0) * ((y_6)**35) + 
            L0x20019962_f * (x**1) * ((y_6)**35) + 
            L0x20019964_f * (x**2) * ((y_6)**35) + 
            L0x20019966_f * (x**3) * ((y_6)**35) + 
            L0x20019968_f * (x**0) * ((y_6)**36) + 
            L0x2001996a_f * (x**1) * ((y_6)**36) + 
            L0x2001996c_f * (x**2) * ((y_6)**36) + 
            L0x2001996e_f * (x**3) * ((y_6)**36) + 
            L0x20019970_f * (x**0) * ((y_6)**37) + 
            L0x20019972_f * (x**1) * ((y_6)**37) + 
            L0x20019974_f * (x**2) * ((y_6)**37) + 
            L0x20019976_f * (x**3) * ((y_6)**37) + 
            L0x20019978_f * (x**0) * ((y_6)**38) + 
            L0x2001997a_f * (x**1) * ((y_6)**38) + 
            L0x2001997c_f * (x**2) * ((y_6)**38) + 
            L0x2001997e_f * (x**3) * ((y_6)**38) + 
            L0x20019980_f * (x**0) * ((y_6)**39) + 
            L0x20019982_f * (x**1) * ((y_6)**39) + 
            L0x20019984_f * (x**2) * ((y_6)**39) + 
            L0x20019986_f * (x**3) * ((y_6)**39) + 
            L0x20019988_f * (x**0) * ((y_6)**40) + 
            L0x2001998a_f * (x**1) * ((y_6)**40) + 
            L0x2001998c_f * (x**2) * ((y_6)**40) + 
            L0x2001998e_f * (x**3) * ((y_6)**40) + 
            L0x20019990_f * (x**0) * ((y_6)**41) + 
            L0x20019992_f * (x**1) * ((y_6)**41) + 
            L0x20019994_f * (x**2) * ((y_6)**41) + 
            L0x20019996_f * (x**3) * ((y_6)**41) + 
            L0x20019998_f * (x**0) * ((y_6)**42) + 
            L0x2001999a_f * (x**1) * ((y_6)**42) + 
            L0x2001999c_f * (x**2) * ((y_6)**42) + 
            L0x2001999e_f * (x**3) * ((y_6)**42) + 
            L0x200199a0_f * (x**0) * ((y_6)**43) + 
            L0x200199a2_f * (x**1) * ((y_6)**43) + 
            L0x200199a4_f * (x**2) * ((y_6)**43) + 
            L0x200199a6_f * (x**3) * ((y_6)**43) + 
            L0x200199a8_f * (x**0) * ((y_6)**44) + 
            L0x200199aa_f * (x**1) * ((y_6)**44) + 
            L0x200199ac_f * (x**2) * ((y_6)**44) + 
            L0x200199ae_f * (x**3) * ((y_6)**44) + 
            L0x200199b0_f * (x**0) * ((y_6)**45) + 
            L0x200199b2_f * (x**1) * ((y_6)**45) + 
            L0x200199b4_f * (x**2) * ((y_6)**45) + 
            L0x200199b6_f * (x**3) * ((y_6)**45) + 
            L0x200199b8_f * (x**0) * ((y_6)**46) + 
            L0x200199ba_f * (x**1) * ((y_6)**46) + 
            L0x200199bc_f * (x**2) * ((y_6)**46) + 
            L0x200199be_f * (x**3) * ((y_6)**46) + 
            L0x200199c0_f * (x**0) * ((y_6)**47) + 
            L0x200199c2_f * (x**1) * ((y_6)**47) + 
            L0x200199c4_f * (x**2) * ((y_6)**47) + 
            L0x200199c6_f * (x**3) * ((y_6)**47) + 
            L0x200199c8_f * (x**0) * ((y_6)**48) + 
            L0x200199ca_f * (x**1) * ((y_6)**48) + 
            L0x200199cc_f * (x**2) * ((y_6)**48) + 
            L0x200199ce_f * (x**3) * ((y_6)**48) + 
            L0x200199d0_f * (x**0) * ((y_6)**49) + 
            L0x200199d2_f * (x**1) * ((y_6)**49) + 
            L0x200199d4_f * (x**2) * ((y_6)**49) + 
            L0x200199d6_f * (x**3) * ((y_6)**49) + 
            L0x200199d8_f * (x**0) * ((y_6)**50) + 
            L0x200199da_f * (x**1) * ((y_6)**50) + 
            L0x200199dc_f * (x**2) * ((y_6)**50) + 
            L0x200199de_f * (x**3) * ((y_6)**50) + 
            L0x200199e0_f * (x**0) * ((y_6)**51) + 
            L0x200199e2_f * (x**1) * ((y_6)**51) + 
            L0x200199e4_f * (x**2) * ((y_6)**51) + 
            L0x200199e6_f * (x**3) * ((y_6)**51) + 
            L0x200199e8_f * (x**0) * ((y_6)**52) + 
            L0x200199ea_f * (x**1) * ((y_6)**52) + 
            L0x200199ec_f * (x**2) * ((y_6)**52) + 
            L0x200199ee_f * (x**3) * ((y_6)**52) + 
            L0x200199f0_f * (x**0) * ((y_6)**53) + 
            L0x200199f2_f * (x**1) * ((y_6)**53) + 
            L0x200199f4_f * (x**2) * ((y_6)**53) + 
            L0x200199f6_f * (x**3) * ((y_6)**53) + 
            L0x200199f8_f * (x**0) * ((y_6)**54) + 
            L0x200199fa_f * (x**1) * ((y_6)**54) + 
            L0x200199fc_f * (x**2) * ((y_6)**54) + 
            L0x200199fe_f * (x**3) * ((y_6)**54) + 
            L0x20019a00_f * (x**0) * ((y_6)**55) + 
            L0x20019a02_f * (x**1) * ((y_6)**55) + 
            L0x20019a04_f * (x**2) * ((y_6)**55) + 
            L0x20019a06_f * (x**3) * ((y_6)**55) + 
            L0x20019a08_f * (x**0) * ((y_6)**56) + 
            L0x20019a0a_f * (x**1) * ((y_6)**56) + 
            L0x20019a0c_f * (x**2) * ((y_6)**56) + 
            L0x20019a0e_f * (x**3) * ((y_6)**56) + 
            L0x20019a10_f * (x**0) * ((y_6)**57) + 
            L0x20019a12_f * (x**1) * ((y_6)**57) + 
            L0x20019a14_f * (x**2) * ((y_6)**57) + 
            L0x20019a16_f * (x**3) * ((y_6)**57) + 
            L0x20019a18_f * (x**0) * ((y_6)**58) + 
            L0x20019a1a_f * (x**1) * ((y_6)**58) + 
            L0x20019a1c_f * (x**2) * ((y_6)**58) + 
            L0x20019a1e_f * (x**3) * ((y_6)**58) + 
            L0x20019a20_f * (x**0) * ((y_6)**59) + 
            L0x20019a22_f * (x**1) * ((y_6)**59) + 
            L0x20019a24_f * (x**2) * ((y_6)**59) + 
            L0x20019a26_f * (x**3) * ((y_6)**59) + 
            L0x20019a28_f * (x**0) * ((y_6)**60) + 
            L0x20019a2a_f * (x**1) * ((y_6)**60) + 
            L0x20019a2c_f * (x**2) * ((y_6)**60) + 
            L0x20019a2e_f * (x**3) * ((y_6)**60) + 
            L0x20019a30_f * (x**0) * ((y_6)**61) + 
            L0x20019a32_f * (x**1) * ((y_6)**61) + 
            L0x20019a34_f * (x**2) * ((y_6)**61) + 
            L0x20019a36_f * (x**3) * ((y_6)**61) + 
            L0x20019a38_f * (x**0) * ((y_6)**62) + 
            L0x20019a3a_f * (x**1) * ((y_6)**62) + 
            L0x20019a3c_f * (x**2) * ((y_6)**62) + 
            L0x20019a3e_f * (x**3) * ((y_6)**62) + 
            L0x20019a40_f * (x**0) * ((y_6)**63) + 
            L0x20019a42_f * (x**1) * ((y_6)**63) + 
            L0x20019a44_f * (x**2) * ((y_6)**63) + 
            L0x20019a46_f * (x**3) * ((y_6)**63)
          )
          [25570049, x**4 - y_0_43 * 19367212, y_0_43 - 1],
    (* inp_poly_44 *)
    eqmod (2**32) * (inp_poly_44 * inp_poly_44)
          (
            L0x20019848_f * (x**0) * ((y_6)**0) + 
            L0x2001984a_f * (x**1) * ((y_6)**0) + 
            L0x2001984c_f * (x**2) * ((y_6)**0) + 
            L0x2001984e_f * (x**3) * ((y_6)**0) + 
            L0x20019850_f * (x**0) * ((y_6)**1) + 
            L0x20019852_f * (x**1) * ((y_6)**1) + 
            L0x20019854_f * (x**2) * ((y_6)**1) + 
            L0x20019856_f * (x**3) * ((y_6)**1) + 
            L0x20019858_f * (x**0) * ((y_6)**2) + 
            L0x2001985a_f * (x**1) * ((y_6)**2) + 
            L0x2001985c_f * (x**2) * ((y_6)**2) + 
            L0x2001985e_f * (x**3) * ((y_6)**2) + 
            L0x20019860_f * (x**0) * ((y_6)**3) + 
            L0x20019862_f * (x**1) * ((y_6)**3) + 
            L0x20019864_f * (x**2) * ((y_6)**3) + 
            L0x20019866_f * (x**3) * ((y_6)**3) + 
            L0x20019868_f * (x**0) * ((y_6)**4) + 
            L0x2001986a_f * (x**1) * ((y_6)**4) + 
            L0x2001986c_f * (x**2) * ((y_6)**4) + 
            L0x2001986e_f * (x**3) * ((y_6)**4) + 
            L0x20019870_f * (x**0) * ((y_6)**5) + 
            L0x20019872_f * (x**1) * ((y_6)**5) + 
            L0x20019874_f * (x**2) * ((y_6)**5) + 
            L0x20019876_f * (x**3) * ((y_6)**5) + 
            L0x20019878_f * (x**0) * ((y_6)**6) + 
            L0x2001987a_f * (x**1) * ((y_6)**6) + 
            L0x2001987c_f * (x**2) * ((y_6)**6) + 
            L0x2001987e_f * (x**3) * ((y_6)**6) + 
            L0x20019880_f * (x**0) * ((y_6)**7) + 
            L0x20019882_f * (x**1) * ((y_6)**7) + 
            L0x20019884_f * (x**2) * ((y_6)**7) + 
            L0x20019886_f * (x**3) * ((y_6)**7) + 
            L0x20019888_f * (x**0) * ((y_6)**8) + 
            L0x2001988a_f * (x**1) * ((y_6)**8) + 
            L0x2001988c_f * (x**2) * ((y_6)**8) + 
            L0x2001988e_f * (x**3) * ((y_6)**8) + 
            L0x20019890_f * (x**0) * ((y_6)**9) + 
            L0x20019892_f * (x**1) * ((y_6)**9) + 
            L0x20019894_f * (x**2) * ((y_6)**9) + 
            L0x20019896_f * (x**3) * ((y_6)**9) + 
            L0x20019898_f * (x**0) * ((y_6)**10) + 
            L0x2001989a_f * (x**1) * ((y_6)**10) + 
            L0x2001989c_f * (x**2) * ((y_6)**10) + 
            L0x2001989e_f * (x**3) * ((y_6)**10) + 
            L0x200198a0_f * (x**0) * ((y_6)**11) + 
            L0x200198a2_f * (x**1) * ((y_6)**11) + 
            L0x200198a4_f * (x**2) * ((y_6)**11) + 
            L0x200198a6_f * (x**3) * ((y_6)**11) + 
            L0x200198a8_f * (x**0) * ((y_6)**12) + 
            L0x200198aa_f * (x**1) * ((y_6)**12) + 
            L0x200198ac_f * (x**2) * ((y_6)**12) + 
            L0x200198ae_f * (x**3) * ((y_6)**12) + 
            L0x200198b0_f * (x**0) * ((y_6)**13) + 
            L0x200198b2_f * (x**1) * ((y_6)**13) + 
            L0x200198b4_f * (x**2) * ((y_6)**13) + 
            L0x200198b6_f * (x**3) * ((y_6)**13) + 
            L0x200198b8_f * (x**0) * ((y_6)**14) + 
            L0x200198ba_f * (x**1) * ((y_6)**14) + 
            L0x200198bc_f * (x**2) * ((y_6)**14) + 
            L0x200198be_f * (x**3) * ((y_6)**14) + 
            L0x200198c0_f * (x**0) * ((y_6)**15) + 
            L0x200198c2_f * (x**1) * ((y_6)**15) + 
            L0x200198c4_f * (x**2) * ((y_6)**15) + 
            L0x200198c6_f * (x**3) * ((y_6)**15) + 
            L0x200198c8_f * (x**0) * ((y_6)**16) + 
            L0x200198ca_f * (x**1) * ((y_6)**16) + 
            L0x200198cc_f * (x**2) * ((y_6)**16) + 
            L0x200198ce_f * (x**3) * ((y_6)**16) + 
            L0x200198d0_f * (x**0) * ((y_6)**17) + 
            L0x200198d2_f * (x**1) * ((y_6)**17) + 
            L0x200198d4_f * (x**2) * ((y_6)**17) + 
            L0x200198d6_f * (x**3) * ((y_6)**17) + 
            L0x200198d8_f * (x**0) * ((y_6)**18) + 
            L0x200198da_f * (x**1) * ((y_6)**18) + 
            L0x200198dc_f * (x**2) * ((y_6)**18) + 
            L0x200198de_f * (x**3) * ((y_6)**18) + 
            L0x200198e0_f * (x**0) * ((y_6)**19) + 
            L0x200198e2_f * (x**1) * ((y_6)**19) + 
            L0x200198e4_f * (x**2) * ((y_6)**19) + 
            L0x200198e6_f * (x**3) * ((y_6)**19) + 
            L0x200198e8_f * (x**0) * ((y_6)**20) + 
            L0x200198ea_f * (x**1) * ((y_6)**20) + 
            L0x200198ec_f * (x**2) * ((y_6)**20) + 
            L0x200198ee_f * (x**3) * ((y_6)**20) + 
            L0x200198f0_f * (x**0) * ((y_6)**21) + 
            L0x200198f2_f * (x**1) * ((y_6)**21) + 
            L0x200198f4_f * (x**2) * ((y_6)**21) + 
            L0x200198f6_f * (x**3) * ((y_6)**21) + 
            L0x200198f8_f * (x**0) * ((y_6)**22) + 
            L0x200198fa_f * (x**1) * ((y_6)**22) + 
            L0x200198fc_f * (x**2) * ((y_6)**22) + 
            L0x200198fe_f * (x**3) * ((y_6)**22) + 
            L0x20019900_f * (x**0) * ((y_6)**23) + 
            L0x20019902_f * (x**1) * ((y_6)**23) + 
            L0x20019904_f * (x**2) * ((y_6)**23) + 
            L0x20019906_f * (x**3) * ((y_6)**23) + 
            L0x20019908_f * (x**0) * ((y_6)**24) + 
            L0x2001990a_f * (x**1) * ((y_6)**24) + 
            L0x2001990c_f * (x**2) * ((y_6)**24) + 
            L0x2001990e_f * (x**3) * ((y_6)**24) + 
            L0x20019910_f * (x**0) * ((y_6)**25) + 
            L0x20019912_f * (x**1) * ((y_6)**25) + 
            L0x20019914_f * (x**2) * ((y_6)**25) + 
            L0x20019916_f * (x**3) * ((y_6)**25) + 
            L0x20019918_f * (x**0) * ((y_6)**26) + 
            L0x2001991a_f * (x**1) * ((y_6)**26) + 
            L0x2001991c_f * (x**2) * ((y_6)**26) + 
            L0x2001991e_f * (x**3) * ((y_6)**26) + 
            L0x20019920_f * (x**0) * ((y_6)**27) + 
            L0x20019922_f * (x**1) * ((y_6)**27) + 
            L0x20019924_f * (x**2) * ((y_6)**27) + 
            L0x20019926_f * (x**3) * ((y_6)**27) + 
            L0x20019928_f * (x**0) * ((y_6)**28) + 
            L0x2001992a_f * (x**1) * ((y_6)**28) + 
            L0x2001992c_f * (x**2) * ((y_6)**28) + 
            L0x2001992e_f * (x**3) * ((y_6)**28) + 
            L0x20019930_f * (x**0) * ((y_6)**29) + 
            L0x20019932_f * (x**1) * ((y_6)**29) + 
            L0x20019934_f * (x**2) * ((y_6)**29) + 
            L0x20019936_f * (x**3) * ((y_6)**29) + 
            L0x20019938_f * (x**0) * ((y_6)**30) + 
            L0x2001993a_f * (x**1) * ((y_6)**30) + 
            L0x2001993c_f * (x**2) * ((y_6)**30) + 
            L0x2001993e_f * (x**3) * ((y_6)**30) + 
            L0x20019940_f * (x**0) * ((y_6)**31) + 
            L0x20019942_f * (x**1) * ((y_6)**31) + 
            L0x20019944_f * (x**2) * ((y_6)**31) + 
            L0x20019946_f * (x**3) * ((y_6)**31) + 
            L0x20019948_f * (x**0) * ((y_6)**32) + 
            L0x2001994a_f * (x**1) * ((y_6)**32) + 
            L0x2001994c_f * (x**2) * ((y_6)**32) + 
            L0x2001994e_f * (x**3) * ((y_6)**32) + 
            L0x20019950_f * (x**0) * ((y_6)**33) + 
            L0x20019952_f * (x**1) * ((y_6)**33) + 
            L0x20019954_f * (x**2) * ((y_6)**33) + 
            L0x20019956_f * (x**3) * ((y_6)**33) + 
            L0x20019958_f * (x**0) * ((y_6)**34) + 
            L0x2001995a_f * (x**1) * ((y_6)**34) + 
            L0x2001995c_f * (x**2) * ((y_6)**34) + 
            L0x2001995e_f * (x**3) * ((y_6)**34) + 
            L0x20019960_f * (x**0) * ((y_6)**35) + 
            L0x20019962_f * (x**1) * ((y_6)**35) + 
            L0x20019964_f * (x**2) * ((y_6)**35) + 
            L0x20019966_f * (x**3) * ((y_6)**35) + 
            L0x20019968_f * (x**0) * ((y_6)**36) + 
            L0x2001996a_f * (x**1) * ((y_6)**36) + 
            L0x2001996c_f * (x**2) * ((y_6)**36) + 
            L0x2001996e_f * (x**3) * ((y_6)**36) + 
            L0x20019970_f * (x**0) * ((y_6)**37) + 
            L0x20019972_f * (x**1) * ((y_6)**37) + 
            L0x20019974_f * (x**2) * ((y_6)**37) + 
            L0x20019976_f * (x**3) * ((y_6)**37) + 
            L0x20019978_f * (x**0) * ((y_6)**38) + 
            L0x2001997a_f * (x**1) * ((y_6)**38) + 
            L0x2001997c_f * (x**2) * ((y_6)**38) + 
            L0x2001997e_f * (x**3) * ((y_6)**38) + 
            L0x20019980_f * (x**0) * ((y_6)**39) + 
            L0x20019982_f * (x**1) * ((y_6)**39) + 
            L0x20019984_f * (x**2) * ((y_6)**39) + 
            L0x20019986_f * (x**3) * ((y_6)**39) + 
            L0x20019988_f * (x**0) * ((y_6)**40) + 
            L0x2001998a_f * (x**1) * ((y_6)**40) + 
            L0x2001998c_f * (x**2) * ((y_6)**40) + 
            L0x2001998e_f * (x**3) * ((y_6)**40) + 
            L0x20019990_f * (x**0) * ((y_6)**41) + 
            L0x20019992_f * (x**1) * ((y_6)**41) + 
            L0x20019994_f * (x**2) * ((y_6)**41) + 
            L0x20019996_f * (x**3) * ((y_6)**41) + 
            L0x20019998_f * (x**0) * ((y_6)**42) + 
            L0x2001999a_f * (x**1) * ((y_6)**42) + 
            L0x2001999c_f * (x**2) * ((y_6)**42) + 
            L0x2001999e_f * (x**3) * ((y_6)**42) + 
            L0x200199a0_f * (x**0) * ((y_6)**43) + 
            L0x200199a2_f * (x**1) * ((y_6)**43) + 
            L0x200199a4_f * (x**2) * ((y_6)**43) + 
            L0x200199a6_f * (x**3) * ((y_6)**43) + 
            L0x200199a8_f * (x**0) * ((y_6)**44) + 
            L0x200199aa_f * (x**1) * ((y_6)**44) + 
            L0x200199ac_f * (x**2) * ((y_6)**44) + 
            L0x200199ae_f * (x**3) * ((y_6)**44) + 
            L0x200199b0_f * (x**0) * ((y_6)**45) + 
            L0x200199b2_f * (x**1) * ((y_6)**45) + 
            L0x200199b4_f * (x**2) * ((y_6)**45) + 
            L0x200199b6_f * (x**3) * ((y_6)**45) + 
            L0x200199b8_f * (x**0) * ((y_6)**46) + 
            L0x200199ba_f * (x**1) * ((y_6)**46) + 
            L0x200199bc_f * (x**2) * ((y_6)**46) + 
            L0x200199be_f * (x**3) * ((y_6)**46) + 
            L0x200199c0_f * (x**0) * ((y_6)**47) + 
            L0x200199c2_f * (x**1) * ((y_6)**47) + 
            L0x200199c4_f * (x**2) * ((y_6)**47) + 
            L0x200199c6_f * (x**3) * ((y_6)**47) + 
            L0x200199c8_f * (x**0) * ((y_6)**48) + 
            L0x200199ca_f * (x**1) * ((y_6)**48) + 
            L0x200199cc_f * (x**2) * ((y_6)**48) + 
            L0x200199ce_f * (x**3) * ((y_6)**48) + 
            L0x200199d0_f * (x**0) * ((y_6)**49) + 
            L0x200199d2_f * (x**1) * ((y_6)**49) + 
            L0x200199d4_f * (x**2) * ((y_6)**49) + 
            L0x200199d6_f * (x**3) * ((y_6)**49) + 
            L0x200199d8_f * (x**0) * ((y_6)**50) + 
            L0x200199da_f * (x**1) * ((y_6)**50) + 
            L0x200199dc_f * (x**2) * ((y_6)**50) + 
            L0x200199de_f * (x**3) * ((y_6)**50) + 
            L0x200199e0_f * (x**0) * ((y_6)**51) + 
            L0x200199e2_f * (x**1) * ((y_6)**51) + 
            L0x200199e4_f * (x**2) * ((y_6)**51) + 
            L0x200199e6_f * (x**3) * ((y_6)**51) + 
            L0x200199e8_f * (x**0) * ((y_6)**52) + 
            L0x200199ea_f * (x**1) * ((y_6)**52) + 
            L0x200199ec_f * (x**2) * ((y_6)**52) + 
            L0x200199ee_f * (x**3) * ((y_6)**52) + 
            L0x200199f0_f * (x**0) * ((y_6)**53) + 
            L0x200199f2_f * (x**1) * ((y_6)**53) + 
            L0x200199f4_f * (x**2) * ((y_6)**53) + 
            L0x200199f6_f * (x**3) * ((y_6)**53) + 
            L0x200199f8_f * (x**0) * ((y_6)**54) + 
            L0x200199fa_f * (x**1) * ((y_6)**54) + 
            L0x200199fc_f * (x**2) * ((y_6)**54) + 
            L0x200199fe_f * (x**3) * ((y_6)**54) + 
            L0x20019a00_f * (x**0) * ((y_6)**55) + 
            L0x20019a02_f * (x**1) * ((y_6)**55) + 
            L0x20019a04_f * (x**2) * ((y_6)**55) + 
            L0x20019a06_f * (x**3) * ((y_6)**55) + 
            L0x20019a08_f * (x**0) * ((y_6)**56) + 
            L0x20019a0a_f * (x**1) * ((y_6)**56) + 
            L0x20019a0c_f * (x**2) * ((y_6)**56) + 
            L0x20019a0e_f * (x**3) * ((y_6)**56) + 
            L0x20019a10_f * (x**0) * ((y_6)**57) + 
            L0x20019a12_f * (x**1) * ((y_6)**57) + 
            L0x20019a14_f * (x**2) * ((y_6)**57) + 
            L0x20019a16_f * (x**3) * ((y_6)**57) + 
            L0x20019a18_f * (x**0) * ((y_6)**58) + 
            L0x20019a1a_f * (x**1) * ((y_6)**58) + 
            L0x20019a1c_f * (x**2) * ((y_6)**58) + 
            L0x20019a1e_f * (x**3) * ((y_6)**58) + 
            L0x20019a20_f * (x**0) * ((y_6)**59) + 
            L0x20019a22_f * (x**1) * ((y_6)**59) + 
            L0x20019a24_f * (x**2) * ((y_6)**59) + 
            L0x20019a26_f * (x**3) * ((y_6)**59) + 
            L0x20019a28_f * (x**0) * ((y_6)**60) + 
            L0x20019a2a_f * (x**1) * ((y_6)**60) + 
            L0x20019a2c_f * (x**2) * ((y_6)**60) + 
            L0x20019a2e_f * (x**3) * ((y_6)**60) + 
            L0x20019a30_f * (x**0) * ((y_6)**61) + 
            L0x20019a32_f * (x**1) * ((y_6)**61) + 
            L0x20019a34_f * (x**2) * ((y_6)**61) + 
            L0x20019a36_f * (x**3) * ((y_6)**61) + 
            L0x20019a38_f * (x**0) * ((y_6)**62) + 
            L0x20019a3a_f * (x**1) * ((y_6)**62) + 
            L0x20019a3c_f * (x**2) * ((y_6)**62) + 
            L0x20019a3e_f * (x**3) * ((y_6)**62) + 
            L0x20019a40_f * (x**0) * ((y_6)**63) + 
            L0x20019a42_f * (x**1) * ((y_6)**63) + 
            L0x20019a44_f * (x**2) * ((y_6)**63) + 
            L0x20019a46_f * (x**3) * ((y_6)**63)
          )
          [25570049, x**4 - y_0_44 * 17091305, y_0_44 - 1],
    (* inp_poly_45 *)
    eqmod (2**32) * (inp_poly_45 * inp_poly_45)
          (
            L0x20019848_f * (x**0) * ((y_6)**0) + 
            L0x2001984a_f * (x**1) * ((y_6)**0) + 
            L0x2001984c_f * (x**2) * ((y_6)**0) + 
            L0x2001984e_f * (x**3) * ((y_6)**0) + 
            L0x20019850_f * (x**0) * ((y_6)**1) + 
            L0x20019852_f * (x**1) * ((y_6)**1) + 
            L0x20019854_f * (x**2) * ((y_6)**1) + 
            L0x20019856_f * (x**3) * ((y_6)**1) + 
            L0x20019858_f * (x**0) * ((y_6)**2) + 
            L0x2001985a_f * (x**1) * ((y_6)**2) + 
            L0x2001985c_f * (x**2) * ((y_6)**2) + 
            L0x2001985e_f * (x**3) * ((y_6)**2) + 
            L0x20019860_f * (x**0) * ((y_6)**3) + 
            L0x20019862_f * (x**1) * ((y_6)**3) + 
            L0x20019864_f * (x**2) * ((y_6)**3) + 
            L0x20019866_f * (x**3) * ((y_6)**3) + 
            L0x20019868_f * (x**0) * ((y_6)**4) + 
            L0x2001986a_f * (x**1) * ((y_6)**4) + 
            L0x2001986c_f * (x**2) * ((y_6)**4) + 
            L0x2001986e_f * (x**3) * ((y_6)**4) + 
            L0x20019870_f * (x**0) * ((y_6)**5) + 
            L0x20019872_f * (x**1) * ((y_6)**5) + 
            L0x20019874_f * (x**2) * ((y_6)**5) + 
            L0x20019876_f * (x**3) * ((y_6)**5) + 
            L0x20019878_f * (x**0) * ((y_6)**6) + 
            L0x2001987a_f * (x**1) * ((y_6)**6) + 
            L0x2001987c_f * (x**2) * ((y_6)**6) + 
            L0x2001987e_f * (x**3) * ((y_6)**6) + 
            L0x20019880_f * (x**0) * ((y_6)**7) + 
            L0x20019882_f * (x**1) * ((y_6)**7) + 
            L0x20019884_f * (x**2) * ((y_6)**7) + 
            L0x20019886_f * (x**3) * ((y_6)**7) + 
            L0x20019888_f * (x**0) * ((y_6)**8) + 
            L0x2001988a_f * (x**1) * ((y_6)**8) + 
            L0x2001988c_f * (x**2) * ((y_6)**8) + 
            L0x2001988e_f * (x**3) * ((y_6)**8) + 
            L0x20019890_f * (x**0) * ((y_6)**9) + 
            L0x20019892_f * (x**1) * ((y_6)**9) + 
            L0x20019894_f * (x**2) * ((y_6)**9) + 
            L0x20019896_f * (x**3) * ((y_6)**9) + 
            L0x20019898_f * (x**0) * ((y_6)**10) + 
            L0x2001989a_f * (x**1) * ((y_6)**10) + 
            L0x2001989c_f * (x**2) * ((y_6)**10) + 
            L0x2001989e_f * (x**3) * ((y_6)**10) + 
            L0x200198a0_f * (x**0) * ((y_6)**11) + 
            L0x200198a2_f * (x**1) * ((y_6)**11) + 
            L0x200198a4_f * (x**2) * ((y_6)**11) + 
            L0x200198a6_f * (x**3) * ((y_6)**11) + 
            L0x200198a8_f * (x**0) * ((y_6)**12) + 
            L0x200198aa_f * (x**1) * ((y_6)**12) + 
            L0x200198ac_f * (x**2) * ((y_6)**12) + 
            L0x200198ae_f * (x**3) * ((y_6)**12) + 
            L0x200198b0_f * (x**0) * ((y_6)**13) + 
            L0x200198b2_f * (x**1) * ((y_6)**13) + 
            L0x200198b4_f * (x**2) * ((y_6)**13) + 
            L0x200198b6_f * (x**3) * ((y_6)**13) + 
            L0x200198b8_f * (x**0) * ((y_6)**14) + 
            L0x200198ba_f * (x**1) * ((y_6)**14) + 
            L0x200198bc_f * (x**2) * ((y_6)**14) + 
            L0x200198be_f * (x**3) * ((y_6)**14) + 
            L0x200198c0_f * (x**0) * ((y_6)**15) + 
            L0x200198c2_f * (x**1) * ((y_6)**15) + 
            L0x200198c4_f * (x**2) * ((y_6)**15) + 
            L0x200198c6_f * (x**3) * ((y_6)**15) + 
            L0x200198c8_f * (x**0) * ((y_6)**16) + 
            L0x200198ca_f * (x**1) * ((y_6)**16) + 
            L0x200198cc_f * (x**2) * ((y_6)**16) + 
            L0x200198ce_f * (x**3) * ((y_6)**16) + 
            L0x200198d0_f * (x**0) * ((y_6)**17) + 
            L0x200198d2_f * (x**1) * ((y_6)**17) + 
            L0x200198d4_f * (x**2) * ((y_6)**17) + 
            L0x200198d6_f * (x**3) * ((y_6)**17) + 
            L0x200198d8_f * (x**0) * ((y_6)**18) + 
            L0x200198da_f * (x**1) * ((y_6)**18) + 
            L0x200198dc_f * (x**2) * ((y_6)**18) + 
            L0x200198de_f * (x**3) * ((y_6)**18) + 
            L0x200198e0_f * (x**0) * ((y_6)**19) + 
            L0x200198e2_f * (x**1) * ((y_6)**19) + 
            L0x200198e4_f * (x**2) * ((y_6)**19) + 
            L0x200198e6_f * (x**3) * ((y_6)**19) + 
            L0x200198e8_f * (x**0) * ((y_6)**20) + 
            L0x200198ea_f * (x**1) * ((y_6)**20) + 
            L0x200198ec_f * (x**2) * ((y_6)**20) + 
            L0x200198ee_f * (x**3) * ((y_6)**20) + 
            L0x200198f0_f * (x**0) * ((y_6)**21) + 
            L0x200198f2_f * (x**1) * ((y_6)**21) + 
            L0x200198f4_f * (x**2) * ((y_6)**21) + 
            L0x200198f6_f * (x**3) * ((y_6)**21) + 
            L0x200198f8_f * (x**0) * ((y_6)**22) + 
            L0x200198fa_f * (x**1) * ((y_6)**22) + 
            L0x200198fc_f * (x**2) * ((y_6)**22) + 
            L0x200198fe_f * (x**3) * ((y_6)**22) + 
            L0x20019900_f * (x**0) * ((y_6)**23) + 
            L0x20019902_f * (x**1) * ((y_6)**23) + 
            L0x20019904_f * (x**2) * ((y_6)**23) + 
            L0x20019906_f * (x**3) * ((y_6)**23) + 
            L0x20019908_f * (x**0) * ((y_6)**24) + 
            L0x2001990a_f * (x**1) * ((y_6)**24) + 
            L0x2001990c_f * (x**2) * ((y_6)**24) + 
            L0x2001990e_f * (x**3) * ((y_6)**24) + 
            L0x20019910_f * (x**0) * ((y_6)**25) + 
            L0x20019912_f * (x**1) * ((y_6)**25) + 
            L0x20019914_f * (x**2) * ((y_6)**25) + 
            L0x20019916_f * (x**3) * ((y_6)**25) + 
            L0x20019918_f * (x**0) * ((y_6)**26) + 
            L0x2001991a_f * (x**1) * ((y_6)**26) + 
            L0x2001991c_f * (x**2) * ((y_6)**26) + 
            L0x2001991e_f * (x**3) * ((y_6)**26) + 
            L0x20019920_f * (x**0) * ((y_6)**27) + 
            L0x20019922_f * (x**1) * ((y_6)**27) + 
            L0x20019924_f * (x**2) * ((y_6)**27) + 
            L0x20019926_f * (x**3) * ((y_6)**27) + 
            L0x20019928_f * (x**0) * ((y_6)**28) + 
            L0x2001992a_f * (x**1) * ((y_6)**28) + 
            L0x2001992c_f * (x**2) * ((y_6)**28) + 
            L0x2001992e_f * (x**3) * ((y_6)**28) + 
            L0x20019930_f * (x**0) * ((y_6)**29) + 
            L0x20019932_f * (x**1) * ((y_6)**29) + 
            L0x20019934_f * (x**2) * ((y_6)**29) + 
            L0x20019936_f * (x**3) * ((y_6)**29) + 
            L0x20019938_f * (x**0) * ((y_6)**30) + 
            L0x2001993a_f * (x**1) * ((y_6)**30) + 
            L0x2001993c_f * (x**2) * ((y_6)**30) + 
            L0x2001993e_f * (x**3) * ((y_6)**30) + 
            L0x20019940_f * (x**0) * ((y_6)**31) + 
            L0x20019942_f * (x**1) * ((y_6)**31) + 
            L0x20019944_f * (x**2) * ((y_6)**31) + 
            L0x20019946_f * (x**3) * ((y_6)**31) + 
            L0x20019948_f * (x**0) * ((y_6)**32) + 
            L0x2001994a_f * (x**1) * ((y_6)**32) + 
            L0x2001994c_f * (x**2) * ((y_6)**32) + 
            L0x2001994e_f * (x**3) * ((y_6)**32) + 
            L0x20019950_f * (x**0) * ((y_6)**33) + 
            L0x20019952_f * (x**1) * ((y_6)**33) + 
            L0x20019954_f * (x**2) * ((y_6)**33) + 
            L0x20019956_f * (x**3) * ((y_6)**33) + 
            L0x20019958_f * (x**0) * ((y_6)**34) + 
            L0x2001995a_f * (x**1) * ((y_6)**34) + 
            L0x2001995c_f * (x**2) * ((y_6)**34) + 
            L0x2001995e_f * (x**3) * ((y_6)**34) + 
            L0x20019960_f * (x**0) * ((y_6)**35) + 
            L0x20019962_f * (x**1) * ((y_6)**35) + 
            L0x20019964_f * (x**2) * ((y_6)**35) + 
            L0x20019966_f * (x**3) * ((y_6)**35) + 
            L0x20019968_f * (x**0) * ((y_6)**36) + 
            L0x2001996a_f * (x**1) * ((y_6)**36) + 
            L0x2001996c_f * (x**2) * ((y_6)**36) + 
            L0x2001996e_f * (x**3) * ((y_6)**36) + 
            L0x20019970_f * (x**0) * ((y_6)**37) + 
            L0x20019972_f * (x**1) * ((y_6)**37) + 
            L0x20019974_f * (x**2) * ((y_6)**37) + 
            L0x20019976_f * (x**3) * ((y_6)**37) + 
            L0x20019978_f * (x**0) * ((y_6)**38) + 
            L0x2001997a_f * (x**1) * ((y_6)**38) + 
            L0x2001997c_f * (x**2) * ((y_6)**38) + 
            L0x2001997e_f * (x**3) * ((y_6)**38) + 
            L0x20019980_f * (x**0) * ((y_6)**39) + 
            L0x20019982_f * (x**1) * ((y_6)**39) + 
            L0x20019984_f * (x**2) * ((y_6)**39) + 
            L0x20019986_f * (x**3) * ((y_6)**39) + 
            L0x20019988_f * (x**0) * ((y_6)**40) + 
            L0x2001998a_f * (x**1) * ((y_6)**40) + 
            L0x2001998c_f * (x**2) * ((y_6)**40) + 
            L0x2001998e_f * (x**3) * ((y_6)**40) + 
            L0x20019990_f * (x**0) * ((y_6)**41) + 
            L0x20019992_f * (x**1) * ((y_6)**41) + 
            L0x20019994_f * (x**2) * ((y_6)**41) + 
            L0x20019996_f * (x**3) * ((y_6)**41) + 
            L0x20019998_f * (x**0) * ((y_6)**42) + 
            L0x2001999a_f * (x**1) * ((y_6)**42) + 
            L0x2001999c_f * (x**2) * ((y_6)**42) + 
            L0x2001999e_f * (x**3) * ((y_6)**42) + 
            L0x200199a0_f * (x**0) * ((y_6)**43) + 
            L0x200199a2_f * (x**1) * ((y_6)**43) + 
            L0x200199a4_f * (x**2) * ((y_6)**43) + 
            L0x200199a6_f * (x**3) * ((y_6)**43) + 
            L0x200199a8_f * (x**0) * ((y_6)**44) + 
            L0x200199aa_f * (x**1) * ((y_6)**44) + 
            L0x200199ac_f * (x**2) * ((y_6)**44) + 
            L0x200199ae_f * (x**3) * ((y_6)**44) + 
            L0x200199b0_f * (x**0) * ((y_6)**45) + 
            L0x200199b2_f * (x**1) * ((y_6)**45) + 
            L0x200199b4_f * (x**2) * ((y_6)**45) + 
            L0x200199b6_f * (x**3) * ((y_6)**45) + 
            L0x200199b8_f * (x**0) * ((y_6)**46) + 
            L0x200199ba_f * (x**1) * ((y_6)**46) + 
            L0x200199bc_f * (x**2) * ((y_6)**46) + 
            L0x200199be_f * (x**3) * ((y_6)**46) + 
            L0x200199c0_f * (x**0) * ((y_6)**47) + 
            L0x200199c2_f * (x**1) * ((y_6)**47) + 
            L0x200199c4_f * (x**2) * ((y_6)**47) + 
            L0x200199c6_f * (x**3) * ((y_6)**47) + 
            L0x200199c8_f * (x**0) * ((y_6)**48) + 
            L0x200199ca_f * (x**1) * ((y_6)**48) + 
            L0x200199cc_f * (x**2) * ((y_6)**48) + 
            L0x200199ce_f * (x**3) * ((y_6)**48) + 
            L0x200199d0_f * (x**0) * ((y_6)**49) + 
            L0x200199d2_f * (x**1) * ((y_6)**49) + 
            L0x200199d4_f * (x**2) * ((y_6)**49) + 
            L0x200199d6_f * (x**3) * ((y_6)**49) + 
            L0x200199d8_f * (x**0) * ((y_6)**50) + 
            L0x200199da_f * (x**1) * ((y_6)**50) + 
            L0x200199dc_f * (x**2) * ((y_6)**50) + 
            L0x200199de_f * (x**3) * ((y_6)**50) + 
            L0x200199e0_f * (x**0) * ((y_6)**51) + 
            L0x200199e2_f * (x**1) * ((y_6)**51) + 
            L0x200199e4_f * (x**2) * ((y_6)**51) + 
            L0x200199e6_f * (x**3) * ((y_6)**51) + 
            L0x200199e8_f * (x**0) * ((y_6)**52) + 
            L0x200199ea_f * (x**1) * ((y_6)**52) + 
            L0x200199ec_f * (x**2) * ((y_6)**52) + 
            L0x200199ee_f * (x**3) * ((y_6)**52) + 
            L0x200199f0_f * (x**0) * ((y_6)**53) + 
            L0x200199f2_f * (x**1) * ((y_6)**53) + 
            L0x200199f4_f * (x**2) * ((y_6)**53) + 
            L0x200199f6_f * (x**3) * ((y_6)**53) + 
            L0x200199f8_f * (x**0) * ((y_6)**54) + 
            L0x200199fa_f * (x**1) * ((y_6)**54) + 
            L0x200199fc_f * (x**2) * ((y_6)**54) + 
            L0x200199fe_f * (x**3) * ((y_6)**54) + 
            L0x20019a00_f * (x**0) * ((y_6)**55) + 
            L0x20019a02_f * (x**1) * ((y_6)**55) + 
            L0x20019a04_f * (x**2) * ((y_6)**55) + 
            L0x20019a06_f * (x**3) * ((y_6)**55) + 
            L0x20019a08_f * (x**0) * ((y_6)**56) + 
            L0x20019a0a_f * (x**1) * ((y_6)**56) + 
            L0x20019a0c_f * (x**2) * ((y_6)**56) + 
            L0x20019a0e_f * (x**3) * ((y_6)**56) + 
            L0x20019a10_f * (x**0) * ((y_6)**57) + 
            L0x20019a12_f * (x**1) * ((y_6)**57) + 
            L0x20019a14_f * (x**2) * ((y_6)**57) + 
            L0x20019a16_f * (x**3) * ((y_6)**57) + 
            L0x20019a18_f * (x**0) * ((y_6)**58) + 
            L0x20019a1a_f * (x**1) * ((y_6)**58) + 
            L0x20019a1c_f * (x**2) * ((y_6)**58) + 
            L0x20019a1e_f * (x**3) * ((y_6)**58) + 
            L0x20019a20_f * (x**0) * ((y_6)**59) + 
            L0x20019a22_f * (x**1) * ((y_6)**59) + 
            L0x20019a24_f * (x**2) * ((y_6)**59) + 
            L0x20019a26_f * (x**3) * ((y_6)**59) + 
            L0x20019a28_f * (x**0) * ((y_6)**60) + 
            L0x20019a2a_f * (x**1) * ((y_6)**60) + 
            L0x20019a2c_f * (x**2) * ((y_6)**60) + 
            L0x20019a2e_f * (x**3) * ((y_6)**60) + 
            L0x20019a30_f * (x**0) * ((y_6)**61) + 
            L0x20019a32_f * (x**1) * ((y_6)**61) + 
            L0x20019a34_f * (x**2) * ((y_6)**61) + 
            L0x20019a36_f * (x**3) * ((y_6)**61) + 
            L0x20019a38_f * (x**0) * ((y_6)**62) + 
            L0x20019a3a_f * (x**1) * ((y_6)**62) + 
            L0x20019a3c_f * (x**2) * ((y_6)**62) + 
            L0x20019a3e_f * (x**3) * ((y_6)**62) + 
            L0x20019a40_f * (x**0) * ((y_6)**63) + 
            L0x20019a42_f * (x**1) * ((y_6)**63) + 
            L0x20019a44_f * (x**2) * ((y_6)**63) + 
            L0x20019a46_f * (x**3) * ((y_6)**63)
          )
          [25570049, x**4 - y_0_45 * 8478744, y_0_45 - 1],
    (* inp_poly_46 *)
    eqmod (2**32) * (inp_poly_46 * inp_poly_46)
          (
            L0x20019848_f * (x**0) * ((y_6)**0) + 
            L0x2001984a_f * (x**1) * ((y_6)**0) + 
            L0x2001984c_f * (x**2) * ((y_6)**0) + 
            L0x2001984e_f * (x**3) * ((y_6)**0) + 
            L0x20019850_f * (x**0) * ((y_6)**1) + 
            L0x20019852_f * (x**1) * ((y_6)**1) + 
            L0x20019854_f * (x**2) * ((y_6)**1) + 
            L0x20019856_f * (x**3) * ((y_6)**1) + 
            L0x20019858_f * (x**0) * ((y_6)**2) + 
            L0x2001985a_f * (x**1) * ((y_6)**2) + 
            L0x2001985c_f * (x**2) * ((y_6)**2) + 
            L0x2001985e_f * (x**3) * ((y_6)**2) + 
            L0x20019860_f * (x**0) * ((y_6)**3) + 
            L0x20019862_f * (x**1) * ((y_6)**3) + 
            L0x20019864_f * (x**2) * ((y_6)**3) + 
            L0x20019866_f * (x**3) * ((y_6)**3) + 
            L0x20019868_f * (x**0) * ((y_6)**4) + 
            L0x2001986a_f * (x**1) * ((y_6)**4) + 
            L0x2001986c_f * (x**2) * ((y_6)**4) + 
            L0x2001986e_f * (x**3) * ((y_6)**4) + 
            L0x20019870_f * (x**0) * ((y_6)**5) + 
            L0x20019872_f * (x**1) * ((y_6)**5) + 
            L0x20019874_f * (x**2) * ((y_6)**5) + 
            L0x20019876_f * (x**3) * ((y_6)**5) + 
            L0x20019878_f * (x**0) * ((y_6)**6) + 
            L0x2001987a_f * (x**1) * ((y_6)**6) + 
            L0x2001987c_f * (x**2) * ((y_6)**6) + 
            L0x2001987e_f * (x**3) * ((y_6)**6) + 
            L0x20019880_f * (x**0) * ((y_6)**7) + 
            L0x20019882_f * (x**1) * ((y_6)**7) + 
            L0x20019884_f * (x**2) * ((y_6)**7) + 
            L0x20019886_f * (x**3) * ((y_6)**7) + 
            L0x20019888_f * (x**0) * ((y_6)**8) + 
            L0x2001988a_f * (x**1) * ((y_6)**8) + 
            L0x2001988c_f * (x**2) * ((y_6)**8) + 
            L0x2001988e_f * (x**3) * ((y_6)**8) + 
            L0x20019890_f * (x**0) * ((y_6)**9) + 
            L0x20019892_f * (x**1) * ((y_6)**9) + 
            L0x20019894_f * (x**2) * ((y_6)**9) + 
            L0x20019896_f * (x**3) * ((y_6)**9) + 
            L0x20019898_f * (x**0) * ((y_6)**10) + 
            L0x2001989a_f * (x**1) * ((y_6)**10) + 
            L0x2001989c_f * (x**2) * ((y_6)**10) + 
            L0x2001989e_f * (x**3) * ((y_6)**10) + 
            L0x200198a0_f * (x**0) * ((y_6)**11) + 
            L0x200198a2_f * (x**1) * ((y_6)**11) + 
            L0x200198a4_f * (x**2) * ((y_6)**11) + 
            L0x200198a6_f * (x**3) * ((y_6)**11) + 
            L0x200198a8_f * (x**0) * ((y_6)**12) + 
            L0x200198aa_f * (x**1) * ((y_6)**12) + 
            L0x200198ac_f * (x**2) * ((y_6)**12) + 
            L0x200198ae_f * (x**3) * ((y_6)**12) + 
            L0x200198b0_f * (x**0) * ((y_6)**13) + 
            L0x200198b2_f * (x**1) * ((y_6)**13) + 
            L0x200198b4_f * (x**2) * ((y_6)**13) + 
            L0x200198b6_f * (x**3) * ((y_6)**13) + 
            L0x200198b8_f * (x**0) * ((y_6)**14) + 
            L0x200198ba_f * (x**1) * ((y_6)**14) + 
            L0x200198bc_f * (x**2) * ((y_6)**14) + 
            L0x200198be_f * (x**3) * ((y_6)**14) + 
            L0x200198c0_f * (x**0) * ((y_6)**15) + 
            L0x200198c2_f * (x**1) * ((y_6)**15) + 
            L0x200198c4_f * (x**2) * ((y_6)**15) + 
            L0x200198c6_f * (x**3) * ((y_6)**15) + 
            L0x200198c8_f * (x**0) * ((y_6)**16) + 
            L0x200198ca_f * (x**1) * ((y_6)**16) + 
            L0x200198cc_f * (x**2) * ((y_6)**16) + 
            L0x200198ce_f * (x**3) * ((y_6)**16) + 
            L0x200198d0_f * (x**0) * ((y_6)**17) + 
            L0x200198d2_f * (x**1) * ((y_6)**17) + 
            L0x200198d4_f * (x**2) * ((y_6)**17) + 
            L0x200198d6_f * (x**3) * ((y_6)**17) + 
            L0x200198d8_f * (x**0) * ((y_6)**18) + 
            L0x200198da_f * (x**1) * ((y_6)**18) + 
            L0x200198dc_f * (x**2) * ((y_6)**18) + 
            L0x200198de_f * (x**3) * ((y_6)**18) + 
            L0x200198e0_f * (x**0) * ((y_6)**19) + 
            L0x200198e2_f * (x**1) * ((y_6)**19) + 
            L0x200198e4_f * (x**2) * ((y_6)**19) + 
            L0x200198e6_f * (x**3) * ((y_6)**19) + 
            L0x200198e8_f * (x**0) * ((y_6)**20) + 
            L0x200198ea_f * (x**1) * ((y_6)**20) + 
            L0x200198ec_f * (x**2) * ((y_6)**20) + 
            L0x200198ee_f * (x**3) * ((y_6)**20) + 
            L0x200198f0_f * (x**0) * ((y_6)**21) + 
            L0x200198f2_f * (x**1) * ((y_6)**21) + 
            L0x200198f4_f * (x**2) * ((y_6)**21) + 
            L0x200198f6_f * (x**3) * ((y_6)**21) + 
            L0x200198f8_f * (x**0) * ((y_6)**22) + 
            L0x200198fa_f * (x**1) * ((y_6)**22) + 
            L0x200198fc_f * (x**2) * ((y_6)**22) + 
            L0x200198fe_f * (x**3) * ((y_6)**22) + 
            L0x20019900_f * (x**0) * ((y_6)**23) + 
            L0x20019902_f * (x**1) * ((y_6)**23) + 
            L0x20019904_f * (x**2) * ((y_6)**23) + 
            L0x20019906_f * (x**3) * ((y_6)**23) + 
            L0x20019908_f * (x**0) * ((y_6)**24) + 
            L0x2001990a_f * (x**1) * ((y_6)**24) + 
            L0x2001990c_f * (x**2) * ((y_6)**24) + 
            L0x2001990e_f * (x**3) * ((y_6)**24) + 
            L0x20019910_f * (x**0) * ((y_6)**25) + 
            L0x20019912_f * (x**1) * ((y_6)**25) + 
            L0x20019914_f * (x**2) * ((y_6)**25) + 
            L0x20019916_f * (x**3) * ((y_6)**25) + 
            L0x20019918_f * (x**0) * ((y_6)**26) + 
            L0x2001991a_f * (x**1) * ((y_6)**26) + 
            L0x2001991c_f * (x**2) * ((y_6)**26) + 
            L0x2001991e_f * (x**3) * ((y_6)**26) + 
            L0x20019920_f * (x**0) * ((y_6)**27) + 
            L0x20019922_f * (x**1) * ((y_6)**27) + 
            L0x20019924_f * (x**2) * ((y_6)**27) + 
            L0x20019926_f * (x**3) * ((y_6)**27) + 
            L0x20019928_f * (x**0) * ((y_6)**28) + 
            L0x2001992a_f * (x**1) * ((y_6)**28) + 
            L0x2001992c_f * (x**2) * ((y_6)**28) + 
            L0x2001992e_f * (x**3) * ((y_6)**28) + 
            L0x20019930_f * (x**0) * ((y_6)**29) + 
            L0x20019932_f * (x**1) * ((y_6)**29) + 
            L0x20019934_f * (x**2) * ((y_6)**29) + 
            L0x20019936_f * (x**3) * ((y_6)**29) + 
            L0x20019938_f * (x**0) * ((y_6)**30) + 
            L0x2001993a_f * (x**1) * ((y_6)**30) + 
            L0x2001993c_f * (x**2) * ((y_6)**30) + 
            L0x2001993e_f * (x**3) * ((y_6)**30) + 
            L0x20019940_f * (x**0) * ((y_6)**31) + 
            L0x20019942_f * (x**1) * ((y_6)**31) + 
            L0x20019944_f * (x**2) * ((y_6)**31) + 
            L0x20019946_f * (x**3) * ((y_6)**31) + 
            L0x20019948_f * (x**0) * ((y_6)**32) + 
            L0x2001994a_f * (x**1) * ((y_6)**32) + 
            L0x2001994c_f * (x**2) * ((y_6)**32) + 
            L0x2001994e_f * (x**3) * ((y_6)**32) + 
            L0x20019950_f * (x**0) * ((y_6)**33) + 
            L0x20019952_f * (x**1) * ((y_6)**33) + 
            L0x20019954_f * (x**2) * ((y_6)**33) + 
            L0x20019956_f * (x**3) * ((y_6)**33) + 
            L0x20019958_f * (x**0) * ((y_6)**34) + 
            L0x2001995a_f * (x**1) * ((y_6)**34) + 
            L0x2001995c_f * (x**2) * ((y_6)**34) + 
            L0x2001995e_f * (x**3) * ((y_6)**34) + 
            L0x20019960_f * (x**0) * ((y_6)**35) + 
            L0x20019962_f * (x**1) * ((y_6)**35) + 
            L0x20019964_f * (x**2) * ((y_6)**35) + 
            L0x20019966_f * (x**3) * ((y_6)**35) + 
            L0x20019968_f * (x**0) * ((y_6)**36) + 
            L0x2001996a_f * (x**1) * ((y_6)**36) + 
            L0x2001996c_f * (x**2) * ((y_6)**36) + 
            L0x2001996e_f * (x**3) * ((y_6)**36) + 
            L0x20019970_f * (x**0) * ((y_6)**37) + 
            L0x20019972_f * (x**1) * ((y_6)**37) + 
            L0x20019974_f * (x**2) * ((y_6)**37) + 
            L0x20019976_f * (x**3) * ((y_6)**37) + 
            L0x20019978_f * (x**0) * ((y_6)**38) + 
            L0x2001997a_f * (x**1) * ((y_6)**38) + 
            L0x2001997c_f * (x**2) * ((y_6)**38) + 
            L0x2001997e_f * (x**3) * ((y_6)**38) + 
            L0x20019980_f * (x**0) * ((y_6)**39) + 
            L0x20019982_f * (x**1) * ((y_6)**39) + 
            L0x20019984_f * (x**2) * ((y_6)**39) + 
            L0x20019986_f * (x**3) * ((y_6)**39) + 
            L0x20019988_f * (x**0) * ((y_6)**40) + 
            L0x2001998a_f * (x**1) * ((y_6)**40) + 
            L0x2001998c_f * (x**2) * ((y_6)**40) + 
            L0x2001998e_f * (x**3) * ((y_6)**40) + 
            L0x20019990_f * (x**0) * ((y_6)**41) + 
            L0x20019992_f * (x**1) * ((y_6)**41) + 
            L0x20019994_f * (x**2) * ((y_6)**41) + 
            L0x20019996_f * (x**3) * ((y_6)**41) + 
            L0x20019998_f * (x**0) * ((y_6)**42) + 
            L0x2001999a_f * (x**1) * ((y_6)**42) + 
            L0x2001999c_f * (x**2) * ((y_6)**42) + 
            L0x2001999e_f * (x**3) * ((y_6)**42) + 
            L0x200199a0_f * (x**0) * ((y_6)**43) + 
            L0x200199a2_f * (x**1) * ((y_6)**43) + 
            L0x200199a4_f * (x**2) * ((y_6)**43) + 
            L0x200199a6_f * (x**3) * ((y_6)**43) + 
            L0x200199a8_f * (x**0) * ((y_6)**44) + 
            L0x200199aa_f * (x**1) * ((y_6)**44) + 
            L0x200199ac_f * (x**2) * ((y_6)**44) + 
            L0x200199ae_f * (x**3) * ((y_6)**44) + 
            L0x200199b0_f * (x**0) * ((y_6)**45) + 
            L0x200199b2_f * (x**1) * ((y_6)**45) + 
            L0x200199b4_f * (x**2) * ((y_6)**45) + 
            L0x200199b6_f * (x**3) * ((y_6)**45) + 
            L0x200199b8_f * (x**0) * ((y_6)**46) + 
            L0x200199ba_f * (x**1) * ((y_6)**46) + 
            L0x200199bc_f * (x**2) * ((y_6)**46) + 
            L0x200199be_f * (x**3) * ((y_6)**46) + 
            L0x200199c0_f * (x**0) * ((y_6)**47) + 
            L0x200199c2_f * (x**1) * ((y_6)**47) + 
            L0x200199c4_f * (x**2) * ((y_6)**47) + 
            L0x200199c6_f * (x**3) * ((y_6)**47) + 
            L0x200199c8_f * (x**0) * ((y_6)**48) + 
            L0x200199ca_f * (x**1) * ((y_6)**48) + 
            L0x200199cc_f * (x**2) * ((y_6)**48) + 
            L0x200199ce_f * (x**3) * ((y_6)**48) + 
            L0x200199d0_f * (x**0) * ((y_6)**49) + 
            L0x200199d2_f * (x**1) * ((y_6)**49) + 
            L0x200199d4_f * (x**2) * ((y_6)**49) + 
            L0x200199d6_f * (x**3) * ((y_6)**49) + 
            L0x200199d8_f * (x**0) * ((y_6)**50) + 
            L0x200199da_f * (x**1) * ((y_6)**50) + 
            L0x200199dc_f * (x**2) * ((y_6)**50) + 
            L0x200199de_f * (x**3) * ((y_6)**50) + 
            L0x200199e0_f * (x**0) * ((y_6)**51) + 
            L0x200199e2_f * (x**1) * ((y_6)**51) + 
            L0x200199e4_f * (x**2) * ((y_6)**51) + 
            L0x200199e6_f * (x**3) * ((y_6)**51) + 
            L0x200199e8_f * (x**0) * ((y_6)**52) + 
            L0x200199ea_f * (x**1) * ((y_6)**52) + 
            L0x200199ec_f * (x**2) * ((y_6)**52) + 
            L0x200199ee_f * (x**3) * ((y_6)**52) + 
            L0x200199f0_f * (x**0) * ((y_6)**53) + 
            L0x200199f2_f * (x**1) * ((y_6)**53) + 
            L0x200199f4_f * (x**2) * ((y_6)**53) + 
            L0x200199f6_f * (x**3) * ((y_6)**53) + 
            L0x200199f8_f * (x**0) * ((y_6)**54) + 
            L0x200199fa_f * (x**1) * ((y_6)**54) + 
            L0x200199fc_f * (x**2) * ((y_6)**54) + 
            L0x200199fe_f * (x**3) * ((y_6)**54) + 
            L0x20019a00_f * (x**0) * ((y_6)**55) + 
            L0x20019a02_f * (x**1) * ((y_6)**55) + 
            L0x20019a04_f * (x**2) * ((y_6)**55) + 
            L0x20019a06_f * (x**3) * ((y_6)**55) + 
            L0x20019a08_f * (x**0) * ((y_6)**56) + 
            L0x20019a0a_f * (x**1) * ((y_6)**56) + 
            L0x20019a0c_f * (x**2) * ((y_6)**56) + 
            L0x20019a0e_f * (x**3) * ((y_6)**56) + 
            L0x20019a10_f * (x**0) * ((y_6)**57) + 
            L0x20019a12_f * (x**1) * ((y_6)**57) + 
            L0x20019a14_f * (x**2) * ((y_6)**57) + 
            L0x20019a16_f * (x**3) * ((y_6)**57) + 
            L0x20019a18_f * (x**0) * ((y_6)**58) + 
            L0x20019a1a_f * (x**1) * ((y_6)**58) + 
            L0x20019a1c_f * (x**2) * ((y_6)**58) + 
            L0x20019a1e_f * (x**3) * ((y_6)**58) + 
            L0x20019a20_f * (x**0) * ((y_6)**59) + 
            L0x20019a22_f * (x**1) * ((y_6)**59) + 
            L0x20019a24_f * (x**2) * ((y_6)**59) + 
            L0x20019a26_f * (x**3) * ((y_6)**59) + 
            L0x20019a28_f * (x**0) * ((y_6)**60) + 
            L0x20019a2a_f * (x**1) * ((y_6)**60) + 
            L0x20019a2c_f * (x**2) * ((y_6)**60) + 
            L0x20019a2e_f * (x**3) * ((y_6)**60) + 
            L0x20019a30_f * (x**0) * ((y_6)**61) + 
            L0x20019a32_f * (x**1) * ((y_6)**61) + 
            L0x20019a34_f * (x**2) * ((y_6)**61) + 
            L0x20019a36_f * (x**3) * ((y_6)**61) + 
            L0x20019a38_f * (x**0) * ((y_6)**62) + 
            L0x20019a3a_f * (x**1) * ((y_6)**62) + 
            L0x20019a3c_f * (x**2) * ((y_6)**62) + 
            L0x20019a3e_f * (x**3) * ((y_6)**62) + 
            L0x20019a40_f * (x**0) * ((y_6)**63) + 
            L0x20019a42_f * (x**1) * ((y_6)**63) + 
            L0x20019a44_f * (x**2) * ((y_6)**63) + 
            L0x20019a46_f * (x**3) * ((y_6)**63)
          )
          [25570049, x**4 - y_0_46 * 18298658, y_0_46 - 1],
    (* inp_poly_47 *)
    eqmod (2**32) * (inp_poly_47 * inp_poly_47)
          (
            L0x20019848_f * (x**0) * ((y_6)**0) + 
            L0x2001984a_f * (x**1) * ((y_6)**0) + 
            L0x2001984c_f * (x**2) * ((y_6)**0) + 
            L0x2001984e_f * (x**3) * ((y_6)**0) + 
            L0x20019850_f * (x**0) * ((y_6)**1) + 
            L0x20019852_f * (x**1) * ((y_6)**1) + 
            L0x20019854_f * (x**2) * ((y_6)**1) + 
            L0x20019856_f * (x**3) * ((y_6)**1) + 
            L0x20019858_f * (x**0) * ((y_6)**2) + 
            L0x2001985a_f * (x**1) * ((y_6)**2) + 
            L0x2001985c_f * (x**2) * ((y_6)**2) + 
            L0x2001985e_f * (x**3) * ((y_6)**2) + 
            L0x20019860_f * (x**0) * ((y_6)**3) + 
            L0x20019862_f * (x**1) * ((y_6)**3) + 
            L0x20019864_f * (x**2) * ((y_6)**3) + 
            L0x20019866_f * (x**3) * ((y_6)**3) + 
            L0x20019868_f * (x**0) * ((y_6)**4) + 
            L0x2001986a_f * (x**1) * ((y_6)**4) + 
            L0x2001986c_f * (x**2) * ((y_6)**4) + 
            L0x2001986e_f * (x**3) * ((y_6)**4) + 
            L0x20019870_f * (x**0) * ((y_6)**5) + 
            L0x20019872_f * (x**1) * ((y_6)**5) + 
            L0x20019874_f * (x**2) * ((y_6)**5) + 
            L0x20019876_f * (x**3) * ((y_6)**5) + 
            L0x20019878_f * (x**0) * ((y_6)**6) + 
            L0x2001987a_f * (x**1) * ((y_6)**6) + 
            L0x2001987c_f * (x**2) * ((y_6)**6) + 
            L0x2001987e_f * (x**3) * ((y_6)**6) + 
            L0x20019880_f * (x**0) * ((y_6)**7) + 
            L0x20019882_f * (x**1) * ((y_6)**7) + 
            L0x20019884_f * (x**2) * ((y_6)**7) + 
            L0x20019886_f * (x**3) * ((y_6)**7) + 
            L0x20019888_f * (x**0) * ((y_6)**8) + 
            L0x2001988a_f * (x**1) * ((y_6)**8) + 
            L0x2001988c_f * (x**2) * ((y_6)**8) + 
            L0x2001988e_f * (x**3) * ((y_6)**8) + 
            L0x20019890_f * (x**0) * ((y_6)**9) + 
            L0x20019892_f * (x**1) * ((y_6)**9) + 
            L0x20019894_f * (x**2) * ((y_6)**9) + 
            L0x20019896_f * (x**3) * ((y_6)**9) + 
            L0x20019898_f * (x**0) * ((y_6)**10) + 
            L0x2001989a_f * (x**1) * ((y_6)**10) + 
            L0x2001989c_f * (x**2) * ((y_6)**10) + 
            L0x2001989e_f * (x**3) * ((y_6)**10) + 
            L0x200198a0_f * (x**0) * ((y_6)**11) + 
            L0x200198a2_f * (x**1) * ((y_6)**11) + 
            L0x200198a4_f * (x**2) * ((y_6)**11) + 
            L0x200198a6_f * (x**3) * ((y_6)**11) + 
            L0x200198a8_f * (x**0) * ((y_6)**12) + 
            L0x200198aa_f * (x**1) * ((y_6)**12) + 
            L0x200198ac_f * (x**2) * ((y_6)**12) + 
            L0x200198ae_f * (x**3) * ((y_6)**12) + 
            L0x200198b0_f * (x**0) * ((y_6)**13) + 
            L0x200198b2_f * (x**1) * ((y_6)**13) + 
            L0x200198b4_f * (x**2) * ((y_6)**13) + 
            L0x200198b6_f * (x**3) * ((y_6)**13) + 
            L0x200198b8_f * (x**0) * ((y_6)**14) + 
            L0x200198ba_f * (x**1) * ((y_6)**14) + 
            L0x200198bc_f * (x**2) * ((y_6)**14) + 
            L0x200198be_f * (x**3) * ((y_6)**14) + 
            L0x200198c0_f * (x**0) * ((y_6)**15) + 
            L0x200198c2_f * (x**1) * ((y_6)**15) + 
            L0x200198c4_f * (x**2) * ((y_6)**15) + 
            L0x200198c6_f * (x**3) * ((y_6)**15) + 
            L0x200198c8_f * (x**0) * ((y_6)**16) + 
            L0x200198ca_f * (x**1) * ((y_6)**16) + 
            L0x200198cc_f * (x**2) * ((y_6)**16) + 
            L0x200198ce_f * (x**3) * ((y_6)**16) + 
            L0x200198d0_f * (x**0) * ((y_6)**17) + 
            L0x200198d2_f * (x**1) * ((y_6)**17) + 
            L0x200198d4_f * (x**2) * ((y_6)**17) + 
            L0x200198d6_f * (x**3) * ((y_6)**17) + 
            L0x200198d8_f * (x**0) * ((y_6)**18) + 
            L0x200198da_f * (x**1) * ((y_6)**18) + 
            L0x200198dc_f * (x**2) * ((y_6)**18) + 
            L0x200198de_f * (x**3) * ((y_6)**18) + 
            L0x200198e0_f * (x**0) * ((y_6)**19) + 
            L0x200198e2_f * (x**1) * ((y_6)**19) + 
            L0x200198e4_f * (x**2) * ((y_6)**19) + 
            L0x200198e6_f * (x**3) * ((y_6)**19) + 
            L0x200198e8_f * (x**0) * ((y_6)**20) + 
            L0x200198ea_f * (x**1) * ((y_6)**20) + 
            L0x200198ec_f * (x**2) * ((y_6)**20) + 
            L0x200198ee_f * (x**3) * ((y_6)**20) + 
            L0x200198f0_f * (x**0) * ((y_6)**21) + 
            L0x200198f2_f * (x**1) * ((y_6)**21) + 
            L0x200198f4_f * (x**2) * ((y_6)**21) + 
            L0x200198f6_f * (x**3) * ((y_6)**21) + 
            L0x200198f8_f * (x**0) * ((y_6)**22) + 
            L0x200198fa_f * (x**1) * ((y_6)**22) + 
            L0x200198fc_f * (x**2) * ((y_6)**22) + 
            L0x200198fe_f * (x**3) * ((y_6)**22) + 
            L0x20019900_f * (x**0) * ((y_6)**23) + 
            L0x20019902_f * (x**1) * ((y_6)**23) + 
            L0x20019904_f * (x**2) * ((y_6)**23) + 
            L0x20019906_f * (x**3) * ((y_6)**23) + 
            L0x20019908_f * (x**0) * ((y_6)**24) + 
            L0x2001990a_f * (x**1) * ((y_6)**24) + 
            L0x2001990c_f * (x**2) * ((y_6)**24) + 
            L0x2001990e_f * (x**3) * ((y_6)**24) + 
            L0x20019910_f * (x**0) * ((y_6)**25) + 
            L0x20019912_f * (x**1) * ((y_6)**25) + 
            L0x20019914_f * (x**2) * ((y_6)**25) + 
            L0x20019916_f * (x**3) * ((y_6)**25) + 
            L0x20019918_f * (x**0) * ((y_6)**26) + 
            L0x2001991a_f * (x**1) * ((y_6)**26) + 
            L0x2001991c_f * (x**2) * ((y_6)**26) + 
            L0x2001991e_f * (x**3) * ((y_6)**26) + 
            L0x20019920_f * (x**0) * ((y_6)**27) + 
            L0x20019922_f * (x**1) * ((y_6)**27) + 
            L0x20019924_f * (x**2) * ((y_6)**27) + 
            L0x20019926_f * (x**3) * ((y_6)**27) + 
            L0x20019928_f * (x**0) * ((y_6)**28) + 
            L0x2001992a_f * (x**1) * ((y_6)**28) + 
            L0x2001992c_f * (x**2) * ((y_6)**28) + 
            L0x2001992e_f * (x**3) * ((y_6)**28) + 
            L0x20019930_f * (x**0) * ((y_6)**29) + 
            L0x20019932_f * (x**1) * ((y_6)**29) + 
            L0x20019934_f * (x**2) * ((y_6)**29) + 
            L0x20019936_f * (x**3) * ((y_6)**29) + 
            L0x20019938_f * (x**0) * ((y_6)**30) + 
            L0x2001993a_f * (x**1) * ((y_6)**30) + 
            L0x2001993c_f * (x**2) * ((y_6)**30) + 
            L0x2001993e_f * (x**3) * ((y_6)**30) + 
            L0x20019940_f * (x**0) * ((y_6)**31) + 
            L0x20019942_f * (x**1) * ((y_6)**31) + 
            L0x20019944_f * (x**2) * ((y_6)**31) + 
            L0x20019946_f * (x**3) * ((y_6)**31) + 
            L0x20019948_f * (x**0) * ((y_6)**32) + 
            L0x2001994a_f * (x**1) * ((y_6)**32) + 
            L0x2001994c_f * (x**2) * ((y_6)**32) + 
            L0x2001994e_f * (x**3) * ((y_6)**32) + 
            L0x20019950_f * (x**0) * ((y_6)**33) + 
            L0x20019952_f * (x**1) * ((y_6)**33) + 
            L0x20019954_f * (x**2) * ((y_6)**33) + 
            L0x20019956_f * (x**3) * ((y_6)**33) + 
            L0x20019958_f * (x**0) * ((y_6)**34) + 
            L0x2001995a_f * (x**1) * ((y_6)**34) + 
            L0x2001995c_f * (x**2) * ((y_6)**34) + 
            L0x2001995e_f * (x**3) * ((y_6)**34) + 
            L0x20019960_f * (x**0) * ((y_6)**35) + 
            L0x20019962_f * (x**1) * ((y_6)**35) + 
            L0x20019964_f * (x**2) * ((y_6)**35) + 
            L0x20019966_f * (x**3) * ((y_6)**35) + 
            L0x20019968_f * (x**0) * ((y_6)**36) + 
            L0x2001996a_f * (x**1) * ((y_6)**36) + 
            L0x2001996c_f * (x**2) * ((y_6)**36) + 
            L0x2001996e_f * (x**3) * ((y_6)**36) + 
            L0x20019970_f * (x**0) * ((y_6)**37) + 
            L0x20019972_f * (x**1) * ((y_6)**37) + 
            L0x20019974_f * (x**2) * ((y_6)**37) + 
            L0x20019976_f * (x**3) * ((y_6)**37) + 
            L0x20019978_f * (x**0) * ((y_6)**38) + 
            L0x2001997a_f * (x**1) * ((y_6)**38) + 
            L0x2001997c_f * (x**2) * ((y_6)**38) + 
            L0x2001997e_f * (x**3) * ((y_6)**38) + 
            L0x20019980_f * (x**0) * ((y_6)**39) + 
            L0x20019982_f * (x**1) * ((y_6)**39) + 
            L0x20019984_f * (x**2) * ((y_6)**39) + 
            L0x20019986_f * (x**3) * ((y_6)**39) + 
            L0x20019988_f * (x**0) * ((y_6)**40) + 
            L0x2001998a_f * (x**1) * ((y_6)**40) + 
            L0x2001998c_f * (x**2) * ((y_6)**40) + 
            L0x2001998e_f * (x**3) * ((y_6)**40) + 
            L0x20019990_f * (x**0) * ((y_6)**41) + 
            L0x20019992_f * (x**1) * ((y_6)**41) + 
            L0x20019994_f * (x**2) * ((y_6)**41) + 
            L0x20019996_f * (x**3) * ((y_6)**41) + 
            L0x20019998_f * (x**0) * ((y_6)**42) + 
            L0x2001999a_f * (x**1) * ((y_6)**42) + 
            L0x2001999c_f * (x**2) * ((y_6)**42) + 
            L0x2001999e_f * (x**3) * ((y_6)**42) + 
            L0x200199a0_f * (x**0) * ((y_6)**43) + 
            L0x200199a2_f * (x**1) * ((y_6)**43) + 
            L0x200199a4_f * (x**2) * ((y_6)**43) + 
            L0x200199a6_f * (x**3) * ((y_6)**43) + 
            L0x200199a8_f * (x**0) * ((y_6)**44) + 
            L0x200199aa_f * (x**1) * ((y_6)**44) + 
            L0x200199ac_f * (x**2) * ((y_6)**44) + 
            L0x200199ae_f * (x**3) * ((y_6)**44) + 
            L0x200199b0_f * (x**0) * ((y_6)**45) + 
            L0x200199b2_f * (x**1) * ((y_6)**45) + 
            L0x200199b4_f * (x**2) * ((y_6)**45) + 
            L0x200199b6_f * (x**3) * ((y_6)**45) + 
            L0x200199b8_f * (x**0) * ((y_6)**46) + 
            L0x200199ba_f * (x**1) * ((y_6)**46) + 
            L0x200199bc_f * (x**2) * ((y_6)**46) + 
            L0x200199be_f * (x**3) * ((y_6)**46) + 
            L0x200199c0_f * (x**0) * ((y_6)**47) + 
            L0x200199c2_f * (x**1) * ((y_6)**47) + 
            L0x200199c4_f * (x**2) * ((y_6)**47) + 
            L0x200199c6_f * (x**3) * ((y_6)**47) + 
            L0x200199c8_f * (x**0) * ((y_6)**48) + 
            L0x200199ca_f * (x**1) * ((y_6)**48) + 
            L0x200199cc_f * (x**2) * ((y_6)**48) + 
            L0x200199ce_f * (x**3) * ((y_6)**48) + 
            L0x200199d0_f * (x**0) * ((y_6)**49) + 
            L0x200199d2_f * (x**1) * ((y_6)**49) + 
            L0x200199d4_f * (x**2) * ((y_6)**49) + 
            L0x200199d6_f * (x**3) * ((y_6)**49) + 
            L0x200199d8_f * (x**0) * ((y_6)**50) + 
            L0x200199da_f * (x**1) * ((y_6)**50) + 
            L0x200199dc_f * (x**2) * ((y_6)**50) + 
            L0x200199de_f * (x**3) * ((y_6)**50) + 
            L0x200199e0_f * (x**0) * ((y_6)**51) + 
            L0x200199e2_f * (x**1) * ((y_6)**51) + 
            L0x200199e4_f * (x**2) * ((y_6)**51) + 
            L0x200199e6_f * (x**3) * ((y_6)**51) + 
            L0x200199e8_f * (x**0) * ((y_6)**52) + 
            L0x200199ea_f * (x**1) * ((y_6)**52) + 
            L0x200199ec_f * (x**2) * ((y_6)**52) + 
            L0x200199ee_f * (x**3) * ((y_6)**52) + 
            L0x200199f0_f * (x**0) * ((y_6)**53) + 
            L0x200199f2_f * (x**1) * ((y_6)**53) + 
            L0x200199f4_f * (x**2) * ((y_6)**53) + 
            L0x200199f6_f * (x**3) * ((y_6)**53) + 
            L0x200199f8_f * (x**0) * ((y_6)**54) + 
            L0x200199fa_f * (x**1) * ((y_6)**54) + 
            L0x200199fc_f * (x**2) * ((y_6)**54) + 
            L0x200199fe_f * (x**3) * ((y_6)**54) + 
            L0x20019a00_f * (x**0) * ((y_6)**55) + 
            L0x20019a02_f * (x**1) * ((y_6)**55) + 
            L0x20019a04_f * (x**2) * ((y_6)**55) + 
            L0x20019a06_f * (x**3) * ((y_6)**55) + 
            L0x20019a08_f * (x**0) * ((y_6)**56) + 
            L0x20019a0a_f * (x**1) * ((y_6)**56) + 
            L0x20019a0c_f * (x**2) * ((y_6)**56) + 
            L0x20019a0e_f * (x**3) * ((y_6)**56) + 
            L0x20019a10_f * (x**0) * ((y_6)**57) + 
            L0x20019a12_f * (x**1) * ((y_6)**57) + 
            L0x20019a14_f * (x**2) * ((y_6)**57) + 
            L0x20019a16_f * (x**3) * ((y_6)**57) + 
            L0x20019a18_f * (x**0) * ((y_6)**58) + 
            L0x20019a1a_f * (x**1) * ((y_6)**58) + 
            L0x20019a1c_f * (x**2) * ((y_6)**58) + 
            L0x20019a1e_f * (x**3) * ((y_6)**58) + 
            L0x20019a20_f * (x**0) * ((y_6)**59) + 
            L0x20019a22_f * (x**1) * ((y_6)**59) + 
            L0x20019a24_f * (x**2) * ((y_6)**59) + 
            L0x20019a26_f * (x**3) * ((y_6)**59) + 
            L0x20019a28_f * (x**0) * ((y_6)**60) + 
            L0x20019a2a_f * (x**1) * ((y_6)**60) + 
            L0x20019a2c_f * (x**2) * ((y_6)**60) + 
            L0x20019a2e_f * (x**3) * ((y_6)**60) + 
            L0x20019a30_f * (x**0) * ((y_6)**61) + 
            L0x20019a32_f * (x**1) * ((y_6)**61) + 
            L0x20019a34_f * (x**2) * ((y_6)**61) + 
            L0x20019a36_f * (x**3) * ((y_6)**61) + 
            L0x20019a38_f * (x**0) * ((y_6)**62) + 
            L0x20019a3a_f * (x**1) * ((y_6)**62) + 
            L0x20019a3c_f * (x**2) * ((y_6)**62) + 
            L0x20019a3e_f * (x**3) * ((y_6)**62) + 
            L0x20019a40_f * (x**0) * ((y_6)**63) + 
            L0x20019a42_f * (x**1) * ((y_6)**63) + 
            L0x20019a44_f * (x**2) * ((y_6)**63) + 
            L0x20019a46_f * (x**3) * ((y_6)**63)
          )
          [25570049, x**4 - y_0_47 * 7271391, y_0_47 - 1]
  ] prove with [cuts [12, 30], all ghosts]
  &&
  true
;

cut (* 49 *)
  true && true;

(* slice 6 *)
cut (* 50 *)
  and [
    (* inp_poly_48 *)
    eqmod (2**32) * (inp_poly_48 * inp_poly_48)
          (
            L0x20019848_f * (x**0) * ((y_6)**0) + 
            L0x2001984a_f * (x**1) * ((y_6)**0) + 
            L0x2001984c_f * (x**2) * ((y_6)**0) + 
            L0x2001984e_f * (x**3) * ((y_6)**0) + 
            L0x20019850_f * (x**0) * ((y_6)**1) + 
            L0x20019852_f * (x**1) * ((y_6)**1) + 
            L0x20019854_f * (x**2) * ((y_6)**1) + 
            L0x20019856_f * (x**3) * ((y_6)**1) + 
            L0x20019858_f * (x**0) * ((y_6)**2) + 
            L0x2001985a_f * (x**1) * ((y_6)**2) + 
            L0x2001985c_f * (x**2) * ((y_6)**2) + 
            L0x2001985e_f * (x**3) * ((y_6)**2) + 
            L0x20019860_f * (x**0) * ((y_6)**3) + 
            L0x20019862_f * (x**1) * ((y_6)**3) + 
            L0x20019864_f * (x**2) * ((y_6)**3) + 
            L0x20019866_f * (x**3) * ((y_6)**3) + 
            L0x20019868_f * (x**0) * ((y_6)**4) + 
            L0x2001986a_f * (x**1) * ((y_6)**4) + 
            L0x2001986c_f * (x**2) * ((y_6)**4) + 
            L0x2001986e_f * (x**3) * ((y_6)**4) + 
            L0x20019870_f * (x**0) * ((y_6)**5) + 
            L0x20019872_f * (x**1) * ((y_6)**5) + 
            L0x20019874_f * (x**2) * ((y_6)**5) + 
            L0x20019876_f * (x**3) * ((y_6)**5) + 
            L0x20019878_f * (x**0) * ((y_6)**6) + 
            L0x2001987a_f * (x**1) * ((y_6)**6) + 
            L0x2001987c_f * (x**2) * ((y_6)**6) + 
            L0x2001987e_f * (x**3) * ((y_6)**6) + 
            L0x20019880_f * (x**0) * ((y_6)**7) + 
            L0x20019882_f * (x**1) * ((y_6)**7) + 
            L0x20019884_f * (x**2) * ((y_6)**7) + 
            L0x20019886_f * (x**3) * ((y_6)**7) + 
            L0x20019888_f * (x**0) * ((y_6)**8) + 
            L0x2001988a_f * (x**1) * ((y_6)**8) + 
            L0x2001988c_f * (x**2) * ((y_6)**8) + 
            L0x2001988e_f * (x**3) * ((y_6)**8) + 
            L0x20019890_f * (x**0) * ((y_6)**9) + 
            L0x20019892_f * (x**1) * ((y_6)**9) + 
            L0x20019894_f * (x**2) * ((y_6)**9) + 
            L0x20019896_f * (x**3) * ((y_6)**9) + 
            L0x20019898_f * (x**0) * ((y_6)**10) + 
            L0x2001989a_f * (x**1) * ((y_6)**10) + 
            L0x2001989c_f * (x**2) * ((y_6)**10) + 
            L0x2001989e_f * (x**3) * ((y_6)**10) + 
            L0x200198a0_f * (x**0) * ((y_6)**11) + 
            L0x200198a2_f * (x**1) * ((y_6)**11) + 
            L0x200198a4_f * (x**2) * ((y_6)**11) + 
            L0x200198a6_f * (x**3) * ((y_6)**11) + 
            L0x200198a8_f * (x**0) * ((y_6)**12) + 
            L0x200198aa_f * (x**1) * ((y_6)**12) + 
            L0x200198ac_f * (x**2) * ((y_6)**12) + 
            L0x200198ae_f * (x**3) * ((y_6)**12) + 
            L0x200198b0_f * (x**0) * ((y_6)**13) + 
            L0x200198b2_f * (x**1) * ((y_6)**13) + 
            L0x200198b4_f * (x**2) * ((y_6)**13) + 
            L0x200198b6_f * (x**3) * ((y_6)**13) + 
            L0x200198b8_f * (x**0) * ((y_6)**14) + 
            L0x200198ba_f * (x**1) * ((y_6)**14) + 
            L0x200198bc_f * (x**2) * ((y_6)**14) + 
            L0x200198be_f * (x**3) * ((y_6)**14) + 
            L0x200198c0_f * (x**0) * ((y_6)**15) + 
            L0x200198c2_f * (x**1) * ((y_6)**15) + 
            L0x200198c4_f * (x**2) * ((y_6)**15) + 
            L0x200198c6_f * (x**3) * ((y_6)**15) + 
            L0x200198c8_f * (x**0) * ((y_6)**16) + 
            L0x200198ca_f * (x**1) * ((y_6)**16) + 
            L0x200198cc_f * (x**2) * ((y_6)**16) + 
            L0x200198ce_f * (x**3) * ((y_6)**16) + 
            L0x200198d0_f * (x**0) * ((y_6)**17) + 
            L0x200198d2_f * (x**1) * ((y_6)**17) + 
            L0x200198d4_f * (x**2) * ((y_6)**17) + 
            L0x200198d6_f * (x**3) * ((y_6)**17) + 
            L0x200198d8_f * (x**0) * ((y_6)**18) + 
            L0x200198da_f * (x**1) * ((y_6)**18) + 
            L0x200198dc_f * (x**2) * ((y_6)**18) + 
            L0x200198de_f * (x**3) * ((y_6)**18) + 
            L0x200198e0_f * (x**0) * ((y_6)**19) + 
            L0x200198e2_f * (x**1) * ((y_6)**19) + 
            L0x200198e4_f * (x**2) * ((y_6)**19) + 
            L0x200198e6_f * (x**3) * ((y_6)**19) + 
            L0x200198e8_f * (x**0) * ((y_6)**20) + 
            L0x200198ea_f * (x**1) * ((y_6)**20) + 
            L0x200198ec_f * (x**2) * ((y_6)**20) + 
            L0x200198ee_f * (x**3) * ((y_6)**20) + 
            L0x200198f0_f * (x**0) * ((y_6)**21) + 
            L0x200198f2_f * (x**1) * ((y_6)**21) + 
            L0x200198f4_f * (x**2) * ((y_6)**21) + 
            L0x200198f6_f * (x**3) * ((y_6)**21) + 
            L0x200198f8_f * (x**0) * ((y_6)**22) + 
            L0x200198fa_f * (x**1) * ((y_6)**22) + 
            L0x200198fc_f * (x**2) * ((y_6)**22) + 
            L0x200198fe_f * (x**3) * ((y_6)**22) + 
            L0x20019900_f * (x**0) * ((y_6)**23) + 
            L0x20019902_f * (x**1) * ((y_6)**23) + 
            L0x20019904_f * (x**2) * ((y_6)**23) + 
            L0x20019906_f * (x**3) * ((y_6)**23) + 
            L0x20019908_f * (x**0) * ((y_6)**24) + 
            L0x2001990a_f * (x**1) * ((y_6)**24) + 
            L0x2001990c_f * (x**2) * ((y_6)**24) + 
            L0x2001990e_f * (x**3) * ((y_6)**24) + 
            L0x20019910_f * (x**0) * ((y_6)**25) + 
            L0x20019912_f * (x**1) * ((y_6)**25) + 
            L0x20019914_f * (x**2) * ((y_6)**25) + 
            L0x20019916_f * (x**3) * ((y_6)**25) + 
            L0x20019918_f * (x**0) * ((y_6)**26) + 
            L0x2001991a_f * (x**1) * ((y_6)**26) + 
            L0x2001991c_f * (x**2) * ((y_6)**26) + 
            L0x2001991e_f * (x**3) * ((y_6)**26) + 
            L0x20019920_f * (x**0) * ((y_6)**27) + 
            L0x20019922_f * (x**1) * ((y_6)**27) + 
            L0x20019924_f * (x**2) * ((y_6)**27) + 
            L0x20019926_f * (x**3) * ((y_6)**27) + 
            L0x20019928_f * (x**0) * ((y_6)**28) + 
            L0x2001992a_f * (x**1) * ((y_6)**28) + 
            L0x2001992c_f * (x**2) * ((y_6)**28) + 
            L0x2001992e_f * (x**3) * ((y_6)**28) + 
            L0x20019930_f * (x**0) * ((y_6)**29) + 
            L0x20019932_f * (x**1) * ((y_6)**29) + 
            L0x20019934_f * (x**2) * ((y_6)**29) + 
            L0x20019936_f * (x**3) * ((y_6)**29) + 
            L0x20019938_f * (x**0) * ((y_6)**30) + 
            L0x2001993a_f * (x**1) * ((y_6)**30) + 
            L0x2001993c_f * (x**2) * ((y_6)**30) + 
            L0x2001993e_f * (x**3) * ((y_6)**30) + 
            L0x20019940_f * (x**0) * ((y_6)**31) + 
            L0x20019942_f * (x**1) * ((y_6)**31) + 
            L0x20019944_f * (x**2) * ((y_6)**31) + 
            L0x20019946_f * (x**3) * ((y_6)**31) + 
            L0x20019948_f * (x**0) * ((y_6)**32) + 
            L0x2001994a_f * (x**1) * ((y_6)**32) + 
            L0x2001994c_f * (x**2) * ((y_6)**32) + 
            L0x2001994e_f * (x**3) * ((y_6)**32) + 
            L0x20019950_f * (x**0) * ((y_6)**33) + 
            L0x20019952_f * (x**1) * ((y_6)**33) + 
            L0x20019954_f * (x**2) * ((y_6)**33) + 
            L0x20019956_f * (x**3) * ((y_6)**33) + 
            L0x20019958_f * (x**0) * ((y_6)**34) + 
            L0x2001995a_f * (x**1) * ((y_6)**34) + 
            L0x2001995c_f * (x**2) * ((y_6)**34) + 
            L0x2001995e_f * (x**3) * ((y_6)**34) + 
            L0x20019960_f * (x**0) * ((y_6)**35) + 
            L0x20019962_f * (x**1) * ((y_6)**35) + 
            L0x20019964_f * (x**2) * ((y_6)**35) + 
            L0x20019966_f * (x**3) * ((y_6)**35) + 
            L0x20019968_f * (x**0) * ((y_6)**36) + 
            L0x2001996a_f * (x**1) * ((y_6)**36) + 
            L0x2001996c_f * (x**2) * ((y_6)**36) + 
            L0x2001996e_f * (x**3) * ((y_6)**36) + 
            L0x20019970_f * (x**0) * ((y_6)**37) + 
            L0x20019972_f * (x**1) * ((y_6)**37) + 
            L0x20019974_f * (x**2) * ((y_6)**37) + 
            L0x20019976_f * (x**3) * ((y_6)**37) + 
            L0x20019978_f * (x**0) * ((y_6)**38) + 
            L0x2001997a_f * (x**1) * ((y_6)**38) + 
            L0x2001997c_f * (x**2) * ((y_6)**38) + 
            L0x2001997e_f * (x**3) * ((y_6)**38) + 
            L0x20019980_f * (x**0) * ((y_6)**39) + 
            L0x20019982_f * (x**1) * ((y_6)**39) + 
            L0x20019984_f * (x**2) * ((y_6)**39) + 
            L0x20019986_f * (x**3) * ((y_6)**39) + 
            L0x20019988_f * (x**0) * ((y_6)**40) + 
            L0x2001998a_f * (x**1) * ((y_6)**40) + 
            L0x2001998c_f * (x**2) * ((y_6)**40) + 
            L0x2001998e_f * (x**3) * ((y_6)**40) + 
            L0x20019990_f * (x**0) * ((y_6)**41) + 
            L0x20019992_f * (x**1) * ((y_6)**41) + 
            L0x20019994_f * (x**2) * ((y_6)**41) + 
            L0x20019996_f * (x**3) * ((y_6)**41) + 
            L0x20019998_f * (x**0) * ((y_6)**42) + 
            L0x2001999a_f * (x**1) * ((y_6)**42) + 
            L0x2001999c_f * (x**2) * ((y_6)**42) + 
            L0x2001999e_f * (x**3) * ((y_6)**42) + 
            L0x200199a0_f * (x**0) * ((y_6)**43) + 
            L0x200199a2_f * (x**1) * ((y_6)**43) + 
            L0x200199a4_f * (x**2) * ((y_6)**43) + 
            L0x200199a6_f * (x**3) * ((y_6)**43) + 
            L0x200199a8_f * (x**0) * ((y_6)**44) + 
            L0x200199aa_f * (x**1) * ((y_6)**44) + 
            L0x200199ac_f * (x**2) * ((y_6)**44) + 
            L0x200199ae_f * (x**3) * ((y_6)**44) + 
            L0x200199b0_f * (x**0) * ((y_6)**45) + 
            L0x200199b2_f * (x**1) * ((y_6)**45) + 
            L0x200199b4_f * (x**2) * ((y_6)**45) + 
            L0x200199b6_f * (x**3) * ((y_6)**45) + 
            L0x200199b8_f * (x**0) * ((y_6)**46) + 
            L0x200199ba_f * (x**1) * ((y_6)**46) + 
            L0x200199bc_f * (x**2) * ((y_6)**46) + 
            L0x200199be_f * (x**3) * ((y_6)**46) + 
            L0x200199c0_f * (x**0) * ((y_6)**47) + 
            L0x200199c2_f * (x**1) * ((y_6)**47) + 
            L0x200199c4_f * (x**2) * ((y_6)**47) + 
            L0x200199c6_f * (x**3) * ((y_6)**47) + 
            L0x200199c8_f * (x**0) * ((y_6)**48) + 
            L0x200199ca_f * (x**1) * ((y_6)**48) + 
            L0x200199cc_f * (x**2) * ((y_6)**48) + 
            L0x200199ce_f * (x**3) * ((y_6)**48) + 
            L0x200199d0_f * (x**0) * ((y_6)**49) + 
            L0x200199d2_f * (x**1) * ((y_6)**49) + 
            L0x200199d4_f * (x**2) * ((y_6)**49) + 
            L0x200199d6_f * (x**3) * ((y_6)**49) + 
            L0x200199d8_f * (x**0) * ((y_6)**50) + 
            L0x200199da_f * (x**1) * ((y_6)**50) + 
            L0x200199dc_f * (x**2) * ((y_6)**50) + 
            L0x200199de_f * (x**3) * ((y_6)**50) + 
            L0x200199e0_f * (x**0) * ((y_6)**51) + 
            L0x200199e2_f * (x**1) * ((y_6)**51) + 
            L0x200199e4_f * (x**2) * ((y_6)**51) + 
            L0x200199e6_f * (x**3) * ((y_6)**51) + 
            L0x200199e8_f * (x**0) * ((y_6)**52) + 
            L0x200199ea_f * (x**1) * ((y_6)**52) + 
            L0x200199ec_f * (x**2) * ((y_6)**52) + 
            L0x200199ee_f * (x**3) * ((y_6)**52) + 
            L0x200199f0_f * (x**0) * ((y_6)**53) + 
            L0x200199f2_f * (x**1) * ((y_6)**53) + 
            L0x200199f4_f * (x**2) * ((y_6)**53) + 
            L0x200199f6_f * (x**3) * ((y_6)**53) + 
            L0x200199f8_f * (x**0) * ((y_6)**54) + 
            L0x200199fa_f * (x**1) * ((y_6)**54) + 
            L0x200199fc_f * (x**2) * ((y_6)**54) + 
            L0x200199fe_f * (x**3) * ((y_6)**54) + 
            L0x20019a00_f * (x**0) * ((y_6)**55) + 
            L0x20019a02_f * (x**1) * ((y_6)**55) + 
            L0x20019a04_f * (x**2) * ((y_6)**55) + 
            L0x20019a06_f * (x**3) * ((y_6)**55) + 
            L0x20019a08_f * (x**0) * ((y_6)**56) + 
            L0x20019a0a_f * (x**1) * ((y_6)**56) + 
            L0x20019a0c_f * (x**2) * ((y_6)**56) + 
            L0x20019a0e_f * (x**3) * ((y_6)**56) + 
            L0x20019a10_f * (x**0) * ((y_6)**57) + 
            L0x20019a12_f * (x**1) * ((y_6)**57) + 
            L0x20019a14_f * (x**2) * ((y_6)**57) + 
            L0x20019a16_f * (x**3) * ((y_6)**57) + 
            L0x20019a18_f * (x**0) * ((y_6)**58) + 
            L0x20019a1a_f * (x**1) * ((y_6)**58) + 
            L0x20019a1c_f * (x**2) * ((y_6)**58) + 
            L0x20019a1e_f * (x**3) * ((y_6)**58) + 
            L0x20019a20_f * (x**0) * ((y_6)**59) + 
            L0x20019a22_f * (x**1) * ((y_6)**59) + 
            L0x20019a24_f * (x**2) * ((y_6)**59) + 
            L0x20019a26_f * (x**3) * ((y_6)**59) + 
            L0x20019a28_f * (x**0) * ((y_6)**60) + 
            L0x20019a2a_f * (x**1) * ((y_6)**60) + 
            L0x20019a2c_f * (x**2) * ((y_6)**60) + 
            L0x20019a2e_f * (x**3) * ((y_6)**60) + 
            L0x20019a30_f * (x**0) * ((y_6)**61) + 
            L0x20019a32_f * (x**1) * ((y_6)**61) + 
            L0x20019a34_f * (x**2) * ((y_6)**61) + 
            L0x20019a36_f * (x**3) * ((y_6)**61) + 
            L0x20019a38_f * (x**0) * ((y_6)**62) + 
            L0x20019a3a_f * (x**1) * ((y_6)**62) + 
            L0x20019a3c_f * (x**2) * ((y_6)**62) + 
            L0x20019a3e_f * (x**3) * ((y_6)**62) + 
            L0x20019a40_f * (x**0) * ((y_6)**63) + 
            L0x20019a42_f * (x**1) * ((y_6)**63) + 
            L0x20019a44_f * (x**2) * ((y_6)**63) + 
            L0x20019a46_f * (x**3) * ((y_6)**63)
          )
          [25570049, x**4 - y_0_48 * 17500092, y_0_48 - 1],
    (* inp_poly_49 *)
    eqmod (2**32) * (inp_poly_49 * inp_poly_49)
          (
            L0x20019848_f * (x**0) * ((y_6)**0) + 
            L0x2001984a_f * (x**1) * ((y_6)**0) + 
            L0x2001984c_f * (x**2) * ((y_6)**0) + 
            L0x2001984e_f * (x**3) * ((y_6)**0) + 
            L0x20019850_f * (x**0) * ((y_6)**1) + 
            L0x20019852_f * (x**1) * ((y_6)**1) + 
            L0x20019854_f * (x**2) * ((y_6)**1) + 
            L0x20019856_f * (x**3) * ((y_6)**1) + 
            L0x20019858_f * (x**0) * ((y_6)**2) + 
            L0x2001985a_f * (x**1) * ((y_6)**2) + 
            L0x2001985c_f * (x**2) * ((y_6)**2) + 
            L0x2001985e_f * (x**3) * ((y_6)**2) + 
            L0x20019860_f * (x**0) * ((y_6)**3) + 
            L0x20019862_f * (x**1) * ((y_6)**3) + 
            L0x20019864_f * (x**2) * ((y_6)**3) + 
            L0x20019866_f * (x**3) * ((y_6)**3) + 
            L0x20019868_f * (x**0) * ((y_6)**4) + 
            L0x2001986a_f * (x**1) * ((y_6)**4) + 
            L0x2001986c_f * (x**2) * ((y_6)**4) + 
            L0x2001986e_f * (x**3) * ((y_6)**4) + 
            L0x20019870_f * (x**0) * ((y_6)**5) + 
            L0x20019872_f * (x**1) * ((y_6)**5) + 
            L0x20019874_f * (x**2) * ((y_6)**5) + 
            L0x20019876_f * (x**3) * ((y_6)**5) + 
            L0x20019878_f * (x**0) * ((y_6)**6) + 
            L0x2001987a_f * (x**1) * ((y_6)**6) + 
            L0x2001987c_f * (x**2) * ((y_6)**6) + 
            L0x2001987e_f * (x**3) * ((y_6)**6) + 
            L0x20019880_f * (x**0) * ((y_6)**7) + 
            L0x20019882_f * (x**1) * ((y_6)**7) + 
            L0x20019884_f * (x**2) * ((y_6)**7) + 
            L0x20019886_f * (x**3) * ((y_6)**7) + 
            L0x20019888_f * (x**0) * ((y_6)**8) + 
            L0x2001988a_f * (x**1) * ((y_6)**8) + 
            L0x2001988c_f * (x**2) * ((y_6)**8) + 
            L0x2001988e_f * (x**3) * ((y_6)**8) + 
            L0x20019890_f * (x**0) * ((y_6)**9) + 
            L0x20019892_f * (x**1) * ((y_6)**9) + 
            L0x20019894_f * (x**2) * ((y_6)**9) + 
            L0x20019896_f * (x**3) * ((y_6)**9) + 
            L0x20019898_f * (x**0) * ((y_6)**10) + 
            L0x2001989a_f * (x**1) * ((y_6)**10) + 
            L0x2001989c_f * (x**2) * ((y_6)**10) + 
            L0x2001989e_f * (x**3) * ((y_6)**10) + 
            L0x200198a0_f * (x**0) * ((y_6)**11) + 
            L0x200198a2_f * (x**1) * ((y_6)**11) + 
            L0x200198a4_f * (x**2) * ((y_6)**11) + 
            L0x200198a6_f * (x**3) * ((y_6)**11) + 
            L0x200198a8_f * (x**0) * ((y_6)**12) + 
            L0x200198aa_f * (x**1) * ((y_6)**12) + 
            L0x200198ac_f * (x**2) * ((y_6)**12) + 
            L0x200198ae_f * (x**3) * ((y_6)**12) + 
            L0x200198b0_f * (x**0) * ((y_6)**13) + 
            L0x200198b2_f * (x**1) * ((y_6)**13) + 
            L0x200198b4_f * (x**2) * ((y_6)**13) + 
            L0x200198b6_f * (x**3) * ((y_6)**13) + 
            L0x200198b8_f * (x**0) * ((y_6)**14) + 
            L0x200198ba_f * (x**1) * ((y_6)**14) + 
            L0x200198bc_f * (x**2) * ((y_6)**14) + 
            L0x200198be_f * (x**3) * ((y_6)**14) + 
            L0x200198c0_f * (x**0) * ((y_6)**15) + 
            L0x200198c2_f * (x**1) * ((y_6)**15) + 
            L0x200198c4_f * (x**2) * ((y_6)**15) + 
            L0x200198c6_f * (x**3) * ((y_6)**15) + 
            L0x200198c8_f * (x**0) * ((y_6)**16) + 
            L0x200198ca_f * (x**1) * ((y_6)**16) + 
            L0x200198cc_f * (x**2) * ((y_6)**16) + 
            L0x200198ce_f * (x**3) * ((y_6)**16) + 
            L0x200198d0_f * (x**0) * ((y_6)**17) + 
            L0x200198d2_f * (x**1) * ((y_6)**17) + 
            L0x200198d4_f * (x**2) * ((y_6)**17) + 
            L0x200198d6_f * (x**3) * ((y_6)**17) + 
            L0x200198d8_f * (x**0) * ((y_6)**18) + 
            L0x200198da_f * (x**1) * ((y_6)**18) + 
            L0x200198dc_f * (x**2) * ((y_6)**18) + 
            L0x200198de_f * (x**3) * ((y_6)**18) + 
            L0x200198e0_f * (x**0) * ((y_6)**19) + 
            L0x200198e2_f * (x**1) * ((y_6)**19) + 
            L0x200198e4_f * (x**2) * ((y_6)**19) + 
            L0x200198e6_f * (x**3) * ((y_6)**19) + 
            L0x200198e8_f * (x**0) * ((y_6)**20) + 
            L0x200198ea_f * (x**1) * ((y_6)**20) + 
            L0x200198ec_f * (x**2) * ((y_6)**20) + 
            L0x200198ee_f * (x**3) * ((y_6)**20) + 
            L0x200198f0_f * (x**0) * ((y_6)**21) + 
            L0x200198f2_f * (x**1) * ((y_6)**21) + 
            L0x200198f4_f * (x**2) * ((y_6)**21) + 
            L0x200198f6_f * (x**3) * ((y_6)**21) + 
            L0x200198f8_f * (x**0) * ((y_6)**22) + 
            L0x200198fa_f * (x**1) * ((y_6)**22) + 
            L0x200198fc_f * (x**2) * ((y_6)**22) + 
            L0x200198fe_f * (x**3) * ((y_6)**22) + 
            L0x20019900_f * (x**0) * ((y_6)**23) + 
            L0x20019902_f * (x**1) * ((y_6)**23) + 
            L0x20019904_f * (x**2) * ((y_6)**23) + 
            L0x20019906_f * (x**3) * ((y_6)**23) + 
            L0x20019908_f * (x**0) * ((y_6)**24) + 
            L0x2001990a_f * (x**1) * ((y_6)**24) + 
            L0x2001990c_f * (x**2) * ((y_6)**24) + 
            L0x2001990e_f * (x**3) * ((y_6)**24) + 
            L0x20019910_f * (x**0) * ((y_6)**25) + 
            L0x20019912_f * (x**1) * ((y_6)**25) + 
            L0x20019914_f * (x**2) * ((y_6)**25) + 
            L0x20019916_f * (x**3) * ((y_6)**25) + 
            L0x20019918_f * (x**0) * ((y_6)**26) + 
            L0x2001991a_f * (x**1) * ((y_6)**26) + 
            L0x2001991c_f * (x**2) * ((y_6)**26) + 
            L0x2001991e_f * (x**3) * ((y_6)**26) + 
            L0x20019920_f * (x**0) * ((y_6)**27) + 
            L0x20019922_f * (x**1) * ((y_6)**27) + 
            L0x20019924_f * (x**2) * ((y_6)**27) + 
            L0x20019926_f * (x**3) * ((y_6)**27) + 
            L0x20019928_f * (x**0) * ((y_6)**28) + 
            L0x2001992a_f * (x**1) * ((y_6)**28) + 
            L0x2001992c_f * (x**2) * ((y_6)**28) + 
            L0x2001992e_f * (x**3) * ((y_6)**28) + 
            L0x20019930_f * (x**0) * ((y_6)**29) + 
            L0x20019932_f * (x**1) * ((y_6)**29) + 
            L0x20019934_f * (x**2) * ((y_6)**29) + 
            L0x20019936_f * (x**3) * ((y_6)**29) + 
            L0x20019938_f * (x**0) * ((y_6)**30) + 
            L0x2001993a_f * (x**1) * ((y_6)**30) + 
            L0x2001993c_f * (x**2) * ((y_6)**30) + 
            L0x2001993e_f * (x**3) * ((y_6)**30) + 
            L0x20019940_f * (x**0) * ((y_6)**31) + 
            L0x20019942_f * (x**1) * ((y_6)**31) + 
            L0x20019944_f * (x**2) * ((y_6)**31) + 
            L0x20019946_f * (x**3) * ((y_6)**31) + 
            L0x20019948_f * (x**0) * ((y_6)**32) + 
            L0x2001994a_f * (x**1) * ((y_6)**32) + 
            L0x2001994c_f * (x**2) * ((y_6)**32) + 
            L0x2001994e_f * (x**3) * ((y_6)**32) + 
            L0x20019950_f * (x**0) * ((y_6)**33) + 
            L0x20019952_f * (x**1) * ((y_6)**33) + 
            L0x20019954_f * (x**2) * ((y_6)**33) + 
            L0x20019956_f * (x**3) * ((y_6)**33) + 
            L0x20019958_f * (x**0) * ((y_6)**34) + 
            L0x2001995a_f * (x**1) * ((y_6)**34) + 
            L0x2001995c_f * (x**2) * ((y_6)**34) + 
            L0x2001995e_f * (x**3) * ((y_6)**34) + 
            L0x20019960_f * (x**0) * ((y_6)**35) + 
            L0x20019962_f * (x**1) * ((y_6)**35) + 
            L0x20019964_f * (x**2) * ((y_6)**35) + 
            L0x20019966_f * (x**3) * ((y_6)**35) + 
            L0x20019968_f * (x**0) * ((y_6)**36) + 
            L0x2001996a_f * (x**1) * ((y_6)**36) + 
            L0x2001996c_f * (x**2) * ((y_6)**36) + 
            L0x2001996e_f * (x**3) * ((y_6)**36) + 
            L0x20019970_f * (x**0) * ((y_6)**37) + 
            L0x20019972_f * (x**1) * ((y_6)**37) + 
            L0x20019974_f * (x**2) * ((y_6)**37) + 
            L0x20019976_f * (x**3) * ((y_6)**37) + 
            L0x20019978_f * (x**0) * ((y_6)**38) + 
            L0x2001997a_f * (x**1) * ((y_6)**38) + 
            L0x2001997c_f * (x**2) * ((y_6)**38) + 
            L0x2001997e_f * (x**3) * ((y_6)**38) + 
            L0x20019980_f * (x**0) * ((y_6)**39) + 
            L0x20019982_f * (x**1) * ((y_6)**39) + 
            L0x20019984_f * (x**2) * ((y_6)**39) + 
            L0x20019986_f * (x**3) * ((y_6)**39) + 
            L0x20019988_f * (x**0) * ((y_6)**40) + 
            L0x2001998a_f * (x**1) * ((y_6)**40) + 
            L0x2001998c_f * (x**2) * ((y_6)**40) + 
            L0x2001998e_f * (x**3) * ((y_6)**40) + 
            L0x20019990_f * (x**0) * ((y_6)**41) + 
            L0x20019992_f * (x**1) * ((y_6)**41) + 
            L0x20019994_f * (x**2) * ((y_6)**41) + 
            L0x20019996_f * (x**3) * ((y_6)**41) + 
            L0x20019998_f * (x**0) * ((y_6)**42) + 
            L0x2001999a_f * (x**1) * ((y_6)**42) + 
            L0x2001999c_f * (x**2) * ((y_6)**42) + 
            L0x2001999e_f * (x**3) * ((y_6)**42) + 
            L0x200199a0_f * (x**0) * ((y_6)**43) + 
            L0x200199a2_f * (x**1) * ((y_6)**43) + 
            L0x200199a4_f * (x**2) * ((y_6)**43) + 
            L0x200199a6_f * (x**3) * ((y_6)**43) + 
            L0x200199a8_f * (x**0) * ((y_6)**44) + 
            L0x200199aa_f * (x**1) * ((y_6)**44) + 
            L0x200199ac_f * (x**2) * ((y_6)**44) + 
            L0x200199ae_f * (x**3) * ((y_6)**44) + 
            L0x200199b0_f * (x**0) * ((y_6)**45) + 
            L0x200199b2_f * (x**1) * ((y_6)**45) + 
            L0x200199b4_f * (x**2) * ((y_6)**45) + 
            L0x200199b6_f * (x**3) * ((y_6)**45) + 
            L0x200199b8_f * (x**0) * ((y_6)**46) + 
            L0x200199ba_f * (x**1) * ((y_6)**46) + 
            L0x200199bc_f * (x**2) * ((y_6)**46) + 
            L0x200199be_f * (x**3) * ((y_6)**46) + 
            L0x200199c0_f * (x**0) * ((y_6)**47) + 
            L0x200199c2_f * (x**1) * ((y_6)**47) + 
            L0x200199c4_f * (x**2) * ((y_6)**47) + 
            L0x200199c6_f * (x**3) * ((y_6)**47) + 
            L0x200199c8_f * (x**0) * ((y_6)**48) + 
            L0x200199ca_f * (x**1) * ((y_6)**48) + 
            L0x200199cc_f * (x**2) * ((y_6)**48) + 
            L0x200199ce_f * (x**3) * ((y_6)**48) + 
            L0x200199d0_f * (x**0) * ((y_6)**49) + 
            L0x200199d2_f * (x**1) * ((y_6)**49) + 
            L0x200199d4_f * (x**2) * ((y_6)**49) + 
            L0x200199d6_f * (x**3) * ((y_6)**49) + 
            L0x200199d8_f * (x**0) * ((y_6)**50) + 
            L0x200199da_f * (x**1) * ((y_6)**50) + 
            L0x200199dc_f * (x**2) * ((y_6)**50) + 
            L0x200199de_f * (x**3) * ((y_6)**50) + 
            L0x200199e0_f * (x**0) * ((y_6)**51) + 
            L0x200199e2_f * (x**1) * ((y_6)**51) + 
            L0x200199e4_f * (x**2) * ((y_6)**51) + 
            L0x200199e6_f * (x**3) * ((y_6)**51) + 
            L0x200199e8_f * (x**0) * ((y_6)**52) + 
            L0x200199ea_f * (x**1) * ((y_6)**52) + 
            L0x200199ec_f * (x**2) * ((y_6)**52) + 
            L0x200199ee_f * (x**3) * ((y_6)**52) + 
            L0x200199f0_f * (x**0) * ((y_6)**53) + 
            L0x200199f2_f * (x**1) * ((y_6)**53) + 
            L0x200199f4_f * (x**2) * ((y_6)**53) + 
            L0x200199f6_f * (x**3) * ((y_6)**53) + 
            L0x200199f8_f * (x**0) * ((y_6)**54) + 
            L0x200199fa_f * (x**1) * ((y_6)**54) + 
            L0x200199fc_f * (x**2) * ((y_6)**54) + 
            L0x200199fe_f * (x**3) * ((y_6)**54) + 
            L0x20019a00_f * (x**0) * ((y_6)**55) + 
            L0x20019a02_f * (x**1) * ((y_6)**55) + 
            L0x20019a04_f * (x**2) * ((y_6)**55) + 
            L0x20019a06_f * (x**3) * ((y_6)**55) + 
            L0x20019a08_f * (x**0) * ((y_6)**56) + 
            L0x20019a0a_f * (x**1) * ((y_6)**56) + 
            L0x20019a0c_f * (x**2) * ((y_6)**56) + 
            L0x20019a0e_f * (x**3) * ((y_6)**56) + 
            L0x20019a10_f * (x**0) * ((y_6)**57) + 
            L0x20019a12_f * (x**1) * ((y_6)**57) + 
            L0x20019a14_f * (x**2) * ((y_6)**57) + 
            L0x20019a16_f * (x**3) * ((y_6)**57) + 
            L0x20019a18_f * (x**0) * ((y_6)**58) + 
            L0x20019a1a_f * (x**1) * ((y_6)**58) + 
            L0x20019a1c_f * (x**2) * ((y_6)**58) + 
            L0x20019a1e_f * (x**3) * ((y_6)**58) + 
            L0x20019a20_f * (x**0) * ((y_6)**59) + 
            L0x20019a22_f * (x**1) * ((y_6)**59) + 
            L0x20019a24_f * (x**2) * ((y_6)**59) + 
            L0x20019a26_f * (x**3) * ((y_6)**59) + 
            L0x20019a28_f * (x**0) * ((y_6)**60) + 
            L0x20019a2a_f * (x**1) * ((y_6)**60) + 
            L0x20019a2c_f * (x**2) * ((y_6)**60) + 
            L0x20019a2e_f * (x**3) * ((y_6)**60) + 
            L0x20019a30_f * (x**0) * ((y_6)**61) + 
            L0x20019a32_f * (x**1) * ((y_6)**61) + 
            L0x20019a34_f * (x**2) * ((y_6)**61) + 
            L0x20019a36_f * (x**3) * ((y_6)**61) + 
            L0x20019a38_f * (x**0) * ((y_6)**62) + 
            L0x20019a3a_f * (x**1) * ((y_6)**62) + 
            L0x20019a3c_f * (x**2) * ((y_6)**62) + 
            L0x20019a3e_f * (x**3) * ((y_6)**62) + 
            L0x20019a40_f * (x**0) * ((y_6)**63) + 
            L0x20019a42_f * (x**1) * ((y_6)**63) + 
            L0x20019a44_f * (x**2) * ((y_6)**63) + 
            L0x20019a46_f * (x**3) * ((y_6)**63)
          )
          [25570049, x**4 - y_0_49 * 8069957, y_0_49 - 1],
    (* inp_poly_50 *)
    eqmod (2**32) * (inp_poly_50 * inp_poly_50)
          (
            L0x20019848_f * (x**0) * ((y_6)**0) + 
            L0x2001984a_f * (x**1) * ((y_6)**0) + 
            L0x2001984c_f * (x**2) * ((y_6)**0) + 
            L0x2001984e_f * (x**3) * ((y_6)**0) + 
            L0x20019850_f * (x**0) * ((y_6)**1) + 
            L0x20019852_f * (x**1) * ((y_6)**1) + 
            L0x20019854_f * (x**2) * ((y_6)**1) + 
            L0x20019856_f * (x**3) * ((y_6)**1) + 
            L0x20019858_f * (x**0) * ((y_6)**2) + 
            L0x2001985a_f * (x**1) * ((y_6)**2) + 
            L0x2001985c_f * (x**2) * ((y_6)**2) + 
            L0x2001985e_f * (x**3) * ((y_6)**2) + 
            L0x20019860_f * (x**0) * ((y_6)**3) + 
            L0x20019862_f * (x**1) * ((y_6)**3) + 
            L0x20019864_f * (x**2) * ((y_6)**3) + 
            L0x20019866_f * (x**3) * ((y_6)**3) + 
            L0x20019868_f * (x**0) * ((y_6)**4) + 
            L0x2001986a_f * (x**1) * ((y_6)**4) + 
            L0x2001986c_f * (x**2) * ((y_6)**4) + 
            L0x2001986e_f * (x**3) * ((y_6)**4) + 
            L0x20019870_f * (x**0) * ((y_6)**5) + 
            L0x20019872_f * (x**1) * ((y_6)**5) + 
            L0x20019874_f * (x**2) * ((y_6)**5) + 
            L0x20019876_f * (x**3) * ((y_6)**5) + 
            L0x20019878_f * (x**0) * ((y_6)**6) + 
            L0x2001987a_f * (x**1) * ((y_6)**6) + 
            L0x2001987c_f * (x**2) * ((y_6)**6) + 
            L0x2001987e_f * (x**3) * ((y_6)**6) + 
            L0x20019880_f * (x**0) * ((y_6)**7) + 
            L0x20019882_f * (x**1) * ((y_6)**7) + 
            L0x20019884_f * (x**2) * ((y_6)**7) + 
            L0x20019886_f * (x**3) * ((y_6)**7) + 
            L0x20019888_f * (x**0) * ((y_6)**8) + 
            L0x2001988a_f * (x**1) * ((y_6)**8) + 
            L0x2001988c_f * (x**2) * ((y_6)**8) + 
            L0x2001988e_f * (x**3) * ((y_6)**8) + 
            L0x20019890_f * (x**0) * ((y_6)**9) + 
            L0x20019892_f * (x**1) * ((y_6)**9) + 
            L0x20019894_f * (x**2) * ((y_6)**9) + 
            L0x20019896_f * (x**3) * ((y_6)**9) + 
            L0x20019898_f * (x**0) * ((y_6)**10) + 
            L0x2001989a_f * (x**1) * ((y_6)**10) + 
            L0x2001989c_f * (x**2) * ((y_6)**10) + 
            L0x2001989e_f * (x**3) * ((y_6)**10) + 
            L0x200198a0_f * (x**0) * ((y_6)**11) + 
            L0x200198a2_f * (x**1) * ((y_6)**11) + 
            L0x200198a4_f * (x**2) * ((y_6)**11) + 
            L0x200198a6_f * (x**3) * ((y_6)**11) + 
            L0x200198a8_f * (x**0) * ((y_6)**12) + 
            L0x200198aa_f * (x**1) * ((y_6)**12) + 
            L0x200198ac_f * (x**2) * ((y_6)**12) + 
            L0x200198ae_f * (x**3) * ((y_6)**12) + 
            L0x200198b0_f * (x**0) * ((y_6)**13) + 
            L0x200198b2_f * (x**1) * ((y_6)**13) + 
            L0x200198b4_f * (x**2) * ((y_6)**13) + 
            L0x200198b6_f * (x**3) * ((y_6)**13) + 
            L0x200198b8_f * (x**0) * ((y_6)**14) + 
            L0x200198ba_f * (x**1) * ((y_6)**14) + 
            L0x200198bc_f * (x**2) * ((y_6)**14) + 
            L0x200198be_f * (x**3) * ((y_6)**14) + 
            L0x200198c0_f * (x**0) * ((y_6)**15) + 
            L0x200198c2_f * (x**1) * ((y_6)**15) + 
            L0x200198c4_f * (x**2) * ((y_6)**15) + 
            L0x200198c6_f * (x**3) * ((y_6)**15) + 
            L0x200198c8_f * (x**0) * ((y_6)**16) + 
            L0x200198ca_f * (x**1) * ((y_6)**16) + 
            L0x200198cc_f * (x**2) * ((y_6)**16) + 
            L0x200198ce_f * (x**3) * ((y_6)**16) + 
            L0x200198d0_f * (x**0) * ((y_6)**17) + 
            L0x200198d2_f * (x**1) * ((y_6)**17) + 
            L0x200198d4_f * (x**2) * ((y_6)**17) + 
            L0x200198d6_f * (x**3) * ((y_6)**17) + 
            L0x200198d8_f * (x**0) * ((y_6)**18) + 
            L0x200198da_f * (x**1) * ((y_6)**18) + 
            L0x200198dc_f * (x**2) * ((y_6)**18) + 
            L0x200198de_f * (x**3) * ((y_6)**18) + 
            L0x200198e0_f * (x**0) * ((y_6)**19) + 
            L0x200198e2_f * (x**1) * ((y_6)**19) + 
            L0x200198e4_f * (x**2) * ((y_6)**19) + 
            L0x200198e6_f * (x**3) * ((y_6)**19) + 
            L0x200198e8_f * (x**0) * ((y_6)**20) + 
            L0x200198ea_f * (x**1) * ((y_6)**20) + 
            L0x200198ec_f * (x**2) * ((y_6)**20) + 
            L0x200198ee_f * (x**3) * ((y_6)**20) + 
            L0x200198f0_f * (x**0) * ((y_6)**21) + 
            L0x200198f2_f * (x**1) * ((y_6)**21) + 
            L0x200198f4_f * (x**2) * ((y_6)**21) + 
            L0x200198f6_f * (x**3) * ((y_6)**21) + 
            L0x200198f8_f * (x**0) * ((y_6)**22) + 
            L0x200198fa_f * (x**1) * ((y_6)**22) + 
            L0x200198fc_f * (x**2) * ((y_6)**22) + 
            L0x200198fe_f * (x**3) * ((y_6)**22) + 
            L0x20019900_f * (x**0) * ((y_6)**23) + 
            L0x20019902_f * (x**1) * ((y_6)**23) + 
            L0x20019904_f * (x**2) * ((y_6)**23) + 
            L0x20019906_f * (x**3) * ((y_6)**23) + 
            L0x20019908_f * (x**0) * ((y_6)**24) + 
            L0x2001990a_f * (x**1) * ((y_6)**24) + 
            L0x2001990c_f * (x**2) * ((y_6)**24) + 
            L0x2001990e_f * (x**3) * ((y_6)**24) + 
            L0x20019910_f * (x**0) * ((y_6)**25) + 
            L0x20019912_f * (x**1) * ((y_6)**25) + 
            L0x20019914_f * (x**2) * ((y_6)**25) + 
            L0x20019916_f * (x**3) * ((y_6)**25) + 
            L0x20019918_f * (x**0) * ((y_6)**26) + 
            L0x2001991a_f * (x**1) * ((y_6)**26) + 
            L0x2001991c_f * (x**2) * ((y_6)**26) + 
            L0x2001991e_f * (x**3) * ((y_6)**26) + 
            L0x20019920_f * (x**0) * ((y_6)**27) + 
            L0x20019922_f * (x**1) * ((y_6)**27) + 
            L0x20019924_f * (x**2) * ((y_6)**27) + 
            L0x20019926_f * (x**3) * ((y_6)**27) + 
            L0x20019928_f * (x**0) * ((y_6)**28) + 
            L0x2001992a_f * (x**1) * ((y_6)**28) + 
            L0x2001992c_f * (x**2) * ((y_6)**28) + 
            L0x2001992e_f * (x**3) * ((y_6)**28) + 
            L0x20019930_f * (x**0) * ((y_6)**29) + 
            L0x20019932_f * (x**1) * ((y_6)**29) + 
            L0x20019934_f * (x**2) * ((y_6)**29) + 
            L0x20019936_f * (x**3) * ((y_6)**29) + 
            L0x20019938_f * (x**0) * ((y_6)**30) + 
            L0x2001993a_f * (x**1) * ((y_6)**30) + 
            L0x2001993c_f * (x**2) * ((y_6)**30) + 
            L0x2001993e_f * (x**3) * ((y_6)**30) + 
            L0x20019940_f * (x**0) * ((y_6)**31) + 
            L0x20019942_f * (x**1) * ((y_6)**31) + 
            L0x20019944_f * (x**2) * ((y_6)**31) + 
            L0x20019946_f * (x**3) * ((y_6)**31) + 
            L0x20019948_f * (x**0) * ((y_6)**32) + 
            L0x2001994a_f * (x**1) * ((y_6)**32) + 
            L0x2001994c_f * (x**2) * ((y_6)**32) + 
            L0x2001994e_f * (x**3) * ((y_6)**32) + 
            L0x20019950_f * (x**0) * ((y_6)**33) + 
            L0x20019952_f * (x**1) * ((y_6)**33) + 
            L0x20019954_f * (x**2) * ((y_6)**33) + 
            L0x20019956_f * (x**3) * ((y_6)**33) + 
            L0x20019958_f * (x**0) * ((y_6)**34) + 
            L0x2001995a_f * (x**1) * ((y_6)**34) + 
            L0x2001995c_f * (x**2) * ((y_6)**34) + 
            L0x2001995e_f * (x**3) * ((y_6)**34) + 
            L0x20019960_f * (x**0) * ((y_6)**35) + 
            L0x20019962_f * (x**1) * ((y_6)**35) + 
            L0x20019964_f * (x**2) * ((y_6)**35) + 
            L0x20019966_f * (x**3) * ((y_6)**35) + 
            L0x20019968_f * (x**0) * ((y_6)**36) + 
            L0x2001996a_f * (x**1) * ((y_6)**36) + 
            L0x2001996c_f * (x**2) * ((y_6)**36) + 
            L0x2001996e_f * (x**3) * ((y_6)**36) + 
            L0x20019970_f * (x**0) * ((y_6)**37) + 
            L0x20019972_f * (x**1) * ((y_6)**37) + 
            L0x20019974_f * (x**2) * ((y_6)**37) + 
            L0x20019976_f * (x**3) * ((y_6)**37) + 
            L0x20019978_f * (x**0) * ((y_6)**38) + 
            L0x2001997a_f * (x**1) * ((y_6)**38) + 
            L0x2001997c_f * (x**2) * ((y_6)**38) + 
            L0x2001997e_f * (x**3) * ((y_6)**38) + 
            L0x20019980_f * (x**0) * ((y_6)**39) + 
            L0x20019982_f * (x**1) * ((y_6)**39) + 
            L0x20019984_f * (x**2) * ((y_6)**39) + 
            L0x20019986_f * (x**3) * ((y_6)**39) + 
            L0x20019988_f * (x**0) * ((y_6)**40) + 
            L0x2001998a_f * (x**1) * ((y_6)**40) + 
            L0x2001998c_f * (x**2) * ((y_6)**40) + 
            L0x2001998e_f * (x**3) * ((y_6)**40) + 
            L0x20019990_f * (x**0) * ((y_6)**41) + 
            L0x20019992_f * (x**1) * ((y_6)**41) + 
            L0x20019994_f * (x**2) * ((y_6)**41) + 
            L0x20019996_f * (x**3) * ((y_6)**41) + 
            L0x20019998_f * (x**0) * ((y_6)**42) + 
            L0x2001999a_f * (x**1) * ((y_6)**42) + 
            L0x2001999c_f * (x**2) * ((y_6)**42) + 
            L0x2001999e_f * (x**3) * ((y_6)**42) + 
            L0x200199a0_f * (x**0) * ((y_6)**43) + 
            L0x200199a2_f * (x**1) * ((y_6)**43) + 
            L0x200199a4_f * (x**2) * ((y_6)**43) + 
            L0x200199a6_f * (x**3) * ((y_6)**43) + 
            L0x200199a8_f * (x**0) * ((y_6)**44) + 
            L0x200199aa_f * (x**1) * ((y_6)**44) + 
            L0x200199ac_f * (x**2) * ((y_6)**44) + 
            L0x200199ae_f * (x**3) * ((y_6)**44) + 
            L0x200199b0_f * (x**0) * ((y_6)**45) + 
            L0x200199b2_f * (x**1) * ((y_6)**45) + 
            L0x200199b4_f * (x**2) * ((y_6)**45) + 
            L0x200199b6_f * (x**3) * ((y_6)**45) + 
            L0x200199b8_f * (x**0) * ((y_6)**46) + 
            L0x200199ba_f * (x**1) * ((y_6)**46) + 
            L0x200199bc_f * (x**2) * ((y_6)**46) + 
            L0x200199be_f * (x**3) * ((y_6)**46) + 
            L0x200199c0_f * (x**0) * ((y_6)**47) + 
            L0x200199c2_f * (x**1) * ((y_6)**47) + 
            L0x200199c4_f * (x**2) * ((y_6)**47) + 
            L0x200199c6_f * (x**3) * ((y_6)**47) + 
            L0x200199c8_f * (x**0) * ((y_6)**48) + 
            L0x200199ca_f * (x**1) * ((y_6)**48) + 
            L0x200199cc_f * (x**2) * ((y_6)**48) + 
            L0x200199ce_f * (x**3) * ((y_6)**48) + 
            L0x200199d0_f * (x**0) * ((y_6)**49) + 
            L0x200199d2_f * (x**1) * ((y_6)**49) + 
            L0x200199d4_f * (x**2) * ((y_6)**49) + 
            L0x200199d6_f * (x**3) * ((y_6)**49) + 
            L0x200199d8_f * (x**0) * ((y_6)**50) + 
            L0x200199da_f * (x**1) * ((y_6)**50) + 
            L0x200199dc_f * (x**2) * ((y_6)**50) + 
            L0x200199de_f * (x**3) * ((y_6)**50) + 
            L0x200199e0_f * (x**0) * ((y_6)**51) + 
            L0x200199e2_f * (x**1) * ((y_6)**51) + 
            L0x200199e4_f * (x**2) * ((y_6)**51) + 
            L0x200199e6_f * (x**3) * ((y_6)**51) + 
            L0x200199e8_f * (x**0) * ((y_6)**52) + 
            L0x200199ea_f * (x**1) * ((y_6)**52) + 
            L0x200199ec_f * (x**2) * ((y_6)**52) + 
            L0x200199ee_f * (x**3) * ((y_6)**52) + 
            L0x200199f0_f * (x**0) * ((y_6)**53) + 
            L0x200199f2_f * (x**1) * ((y_6)**53) + 
            L0x200199f4_f * (x**2) * ((y_6)**53) + 
            L0x200199f6_f * (x**3) * ((y_6)**53) + 
            L0x200199f8_f * (x**0) * ((y_6)**54) + 
            L0x200199fa_f * (x**1) * ((y_6)**54) + 
            L0x200199fc_f * (x**2) * ((y_6)**54) + 
            L0x200199fe_f * (x**3) * ((y_6)**54) + 
            L0x20019a00_f * (x**0) * ((y_6)**55) + 
            L0x20019a02_f * (x**1) * ((y_6)**55) + 
            L0x20019a04_f * (x**2) * ((y_6)**55) + 
            L0x20019a06_f * (x**3) * ((y_6)**55) + 
            L0x20019a08_f * (x**0) * ((y_6)**56) + 
            L0x20019a0a_f * (x**1) * ((y_6)**56) + 
            L0x20019a0c_f * (x**2) * ((y_6)**56) + 
            L0x20019a0e_f * (x**3) * ((y_6)**56) + 
            L0x20019a10_f * (x**0) * ((y_6)**57) + 
            L0x20019a12_f * (x**1) * ((y_6)**57) + 
            L0x20019a14_f * (x**2) * ((y_6)**57) + 
            L0x20019a16_f * (x**3) * ((y_6)**57) + 
            L0x20019a18_f * (x**0) * ((y_6)**58) + 
            L0x20019a1a_f * (x**1) * ((y_6)**58) + 
            L0x20019a1c_f * (x**2) * ((y_6)**58) + 
            L0x20019a1e_f * (x**3) * ((y_6)**58) + 
            L0x20019a20_f * (x**0) * ((y_6)**59) + 
            L0x20019a22_f * (x**1) * ((y_6)**59) + 
            L0x20019a24_f * (x**2) * ((y_6)**59) + 
            L0x20019a26_f * (x**3) * ((y_6)**59) + 
            L0x20019a28_f * (x**0) * ((y_6)**60) + 
            L0x20019a2a_f * (x**1) * ((y_6)**60) + 
            L0x20019a2c_f * (x**2) * ((y_6)**60) + 
            L0x20019a2e_f * (x**3) * ((y_6)**60) + 
            L0x20019a30_f * (x**0) * ((y_6)**61) + 
            L0x20019a32_f * (x**1) * ((y_6)**61) + 
            L0x20019a34_f * (x**2) * ((y_6)**61) + 
            L0x20019a36_f * (x**3) * ((y_6)**61) + 
            L0x20019a38_f * (x**0) * ((y_6)**62) + 
            L0x20019a3a_f * (x**1) * ((y_6)**62) + 
            L0x20019a3c_f * (x**2) * ((y_6)**62) + 
            L0x20019a3e_f * (x**3) * ((y_6)**62) + 
            L0x20019a40_f * (x**0) * ((y_6)**63) + 
            L0x20019a42_f * (x**1) * ((y_6)**63) + 
            L0x20019a44_f * (x**2) * ((y_6)**63) + 
            L0x20019a46_f * (x**3) * ((y_6)**63)
          )
          [25570049, x**4 - y_0_50 * 3627172, y_0_50 - 1],
    (* inp_poly_51 *)
    eqmod (2**32) * (inp_poly_51 * inp_poly_51)
          (
            L0x20019848_f * (x**0) * ((y_6)**0) + 
            L0x2001984a_f * (x**1) * ((y_6)**0) + 
            L0x2001984c_f * (x**2) * ((y_6)**0) + 
            L0x2001984e_f * (x**3) * ((y_6)**0) + 
            L0x20019850_f * (x**0) * ((y_6)**1) + 
            L0x20019852_f * (x**1) * ((y_6)**1) + 
            L0x20019854_f * (x**2) * ((y_6)**1) + 
            L0x20019856_f * (x**3) * ((y_6)**1) + 
            L0x20019858_f * (x**0) * ((y_6)**2) + 
            L0x2001985a_f * (x**1) * ((y_6)**2) + 
            L0x2001985c_f * (x**2) * ((y_6)**2) + 
            L0x2001985e_f * (x**3) * ((y_6)**2) + 
            L0x20019860_f * (x**0) * ((y_6)**3) + 
            L0x20019862_f * (x**1) * ((y_6)**3) + 
            L0x20019864_f * (x**2) * ((y_6)**3) + 
            L0x20019866_f * (x**3) * ((y_6)**3) + 
            L0x20019868_f * (x**0) * ((y_6)**4) + 
            L0x2001986a_f * (x**1) * ((y_6)**4) + 
            L0x2001986c_f * (x**2) * ((y_6)**4) + 
            L0x2001986e_f * (x**3) * ((y_6)**4) + 
            L0x20019870_f * (x**0) * ((y_6)**5) + 
            L0x20019872_f * (x**1) * ((y_6)**5) + 
            L0x20019874_f * (x**2) * ((y_6)**5) + 
            L0x20019876_f * (x**3) * ((y_6)**5) + 
            L0x20019878_f * (x**0) * ((y_6)**6) + 
            L0x2001987a_f * (x**1) * ((y_6)**6) + 
            L0x2001987c_f * (x**2) * ((y_6)**6) + 
            L0x2001987e_f * (x**3) * ((y_6)**6) + 
            L0x20019880_f * (x**0) * ((y_6)**7) + 
            L0x20019882_f * (x**1) * ((y_6)**7) + 
            L0x20019884_f * (x**2) * ((y_6)**7) + 
            L0x20019886_f * (x**3) * ((y_6)**7) + 
            L0x20019888_f * (x**0) * ((y_6)**8) + 
            L0x2001988a_f * (x**1) * ((y_6)**8) + 
            L0x2001988c_f * (x**2) * ((y_6)**8) + 
            L0x2001988e_f * (x**3) * ((y_6)**8) + 
            L0x20019890_f * (x**0) * ((y_6)**9) + 
            L0x20019892_f * (x**1) * ((y_6)**9) + 
            L0x20019894_f * (x**2) * ((y_6)**9) + 
            L0x20019896_f * (x**3) * ((y_6)**9) + 
            L0x20019898_f * (x**0) * ((y_6)**10) + 
            L0x2001989a_f * (x**1) * ((y_6)**10) + 
            L0x2001989c_f * (x**2) * ((y_6)**10) + 
            L0x2001989e_f * (x**3) * ((y_6)**10) + 
            L0x200198a0_f * (x**0) * ((y_6)**11) + 
            L0x200198a2_f * (x**1) * ((y_6)**11) + 
            L0x200198a4_f * (x**2) * ((y_6)**11) + 
            L0x200198a6_f * (x**3) * ((y_6)**11) + 
            L0x200198a8_f * (x**0) * ((y_6)**12) + 
            L0x200198aa_f * (x**1) * ((y_6)**12) + 
            L0x200198ac_f * (x**2) * ((y_6)**12) + 
            L0x200198ae_f * (x**3) * ((y_6)**12) + 
            L0x200198b0_f * (x**0) * ((y_6)**13) + 
            L0x200198b2_f * (x**1) * ((y_6)**13) + 
            L0x200198b4_f * (x**2) * ((y_6)**13) + 
            L0x200198b6_f * (x**3) * ((y_6)**13) + 
            L0x200198b8_f * (x**0) * ((y_6)**14) + 
            L0x200198ba_f * (x**1) * ((y_6)**14) + 
            L0x200198bc_f * (x**2) * ((y_6)**14) + 
            L0x200198be_f * (x**3) * ((y_6)**14) + 
            L0x200198c0_f * (x**0) * ((y_6)**15) + 
            L0x200198c2_f * (x**1) * ((y_6)**15) + 
            L0x200198c4_f * (x**2) * ((y_6)**15) + 
            L0x200198c6_f * (x**3) * ((y_6)**15) + 
            L0x200198c8_f * (x**0) * ((y_6)**16) + 
            L0x200198ca_f * (x**1) * ((y_6)**16) + 
            L0x200198cc_f * (x**2) * ((y_6)**16) + 
            L0x200198ce_f * (x**3) * ((y_6)**16) + 
            L0x200198d0_f * (x**0) * ((y_6)**17) + 
            L0x200198d2_f * (x**1) * ((y_6)**17) + 
            L0x200198d4_f * (x**2) * ((y_6)**17) + 
            L0x200198d6_f * (x**3) * ((y_6)**17) + 
            L0x200198d8_f * (x**0) * ((y_6)**18) + 
            L0x200198da_f * (x**1) * ((y_6)**18) + 
            L0x200198dc_f * (x**2) * ((y_6)**18) + 
            L0x200198de_f * (x**3) * ((y_6)**18) + 
            L0x200198e0_f * (x**0) * ((y_6)**19) + 
            L0x200198e2_f * (x**1) * ((y_6)**19) + 
            L0x200198e4_f * (x**2) * ((y_6)**19) + 
            L0x200198e6_f * (x**3) * ((y_6)**19) + 
            L0x200198e8_f * (x**0) * ((y_6)**20) + 
            L0x200198ea_f * (x**1) * ((y_6)**20) + 
            L0x200198ec_f * (x**2) * ((y_6)**20) + 
            L0x200198ee_f * (x**3) * ((y_6)**20) + 
            L0x200198f0_f * (x**0) * ((y_6)**21) + 
            L0x200198f2_f * (x**1) * ((y_6)**21) + 
            L0x200198f4_f * (x**2) * ((y_6)**21) + 
            L0x200198f6_f * (x**3) * ((y_6)**21) + 
            L0x200198f8_f * (x**0) * ((y_6)**22) + 
            L0x200198fa_f * (x**1) * ((y_6)**22) + 
            L0x200198fc_f * (x**2) * ((y_6)**22) + 
            L0x200198fe_f * (x**3) * ((y_6)**22) + 
            L0x20019900_f * (x**0) * ((y_6)**23) + 
            L0x20019902_f * (x**1) * ((y_6)**23) + 
            L0x20019904_f * (x**2) * ((y_6)**23) + 
            L0x20019906_f * (x**3) * ((y_6)**23) + 
            L0x20019908_f * (x**0) * ((y_6)**24) + 
            L0x2001990a_f * (x**1) * ((y_6)**24) + 
            L0x2001990c_f * (x**2) * ((y_6)**24) + 
            L0x2001990e_f * (x**3) * ((y_6)**24) + 
            L0x20019910_f * (x**0) * ((y_6)**25) + 
            L0x20019912_f * (x**1) * ((y_6)**25) + 
            L0x20019914_f * (x**2) * ((y_6)**25) + 
            L0x20019916_f * (x**3) * ((y_6)**25) + 
            L0x20019918_f * (x**0) * ((y_6)**26) + 
            L0x2001991a_f * (x**1) * ((y_6)**26) + 
            L0x2001991c_f * (x**2) * ((y_6)**26) + 
            L0x2001991e_f * (x**3) * ((y_6)**26) + 
            L0x20019920_f * (x**0) * ((y_6)**27) + 
            L0x20019922_f * (x**1) * ((y_6)**27) + 
            L0x20019924_f * (x**2) * ((y_6)**27) + 
            L0x20019926_f * (x**3) * ((y_6)**27) + 
            L0x20019928_f * (x**0) * ((y_6)**28) + 
            L0x2001992a_f * (x**1) * ((y_6)**28) + 
            L0x2001992c_f * (x**2) * ((y_6)**28) + 
            L0x2001992e_f * (x**3) * ((y_6)**28) + 
            L0x20019930_f * (x**0) * ((y_6)**29) + 
            L0x20019932_f * (x**1) * ((y_6)**29) + 
            L0x20019934_f * (x**2) * ((y_6)**29) + 
            L0x20019936_f * (x**3) * ((y_6)**29) + 
            L0x20019938_f * (x**0) * ((y_6)**30) + 
            L0x2001993a_f * (x**1) * ((y_6)**30) + 
            L0x2001993c_f * (x**2) * ((y_6)**30) + 
            L0x2001993e_f * (x**3) * ((y_6)**30) + 
            L0x20019940_f * (x**0) * ((y_6)**31) + 
            L0x20019942_f * (x**1) * ((y_6)**31) + 
            L0x20019944_f * (x**2) * ((y_6)**31) + 
            L0x20019946_f * (x**3) * ((y_6)**31) + 
            L0x20019948_f * (x**0) * ((y_6)**32) + 
            L0x2001994a_f * (x**1) * ((y_6)**32) + 
            L0x2001994c_f * (x**2) * ((y_6)**32) + 
            L0x2001994e_f * (x**3) * ((y_6)**32) + 
            L0x20019950_f * (x**0) * ((y_6)**33) + 
            L0x20019952_f * (x**1) * ((y_6)**33) + 
            L0x20019954_f * (x**2) * ((y_6)**33) + 
            L0x20019956_f * (x**3) * ((y_6)**33) + 
            L0x20019958_f * (x**0) * ((y_6)**34) + 
            L0x2001995a_f * (x**1) * ((y_6)**34) + 
            L0x2001995c_f * (x**2) * ((y_6)**34) + 
            L0x2001995e_f * (x**3) * ((y_6)**34) + 
            L0x20019960_f * (x**0) * ((y_6)**35) + 
            L0x20019962_f * (x**1) * ((y_6)**35) + 
            L0x20019964_f * (x**2) * ((y_6)**35) + 
            L0x20019966_f * (x**3) * ((y_6)**35) + 
            L0x20019968_f * (x**0) * ((y_6)**36) + 
            L0x2001996a_f * (x**1) * ((y_6)**36) + 
            L0x2001996c_f * (x**2) * ((y_6)**36) + 
            L0x2001996e_f * (x**3) * ((y_6)**36) + 
            L0x20019970_f * (x**0) * ((y_6)**37) + 
            L0x20019972_f * (x**1) * ((y_6)**37) + 
            L0x20019974_f * (x**2) * ((y_6)**37) + 
            L0x20019976_f * (x**3) * ((y_6)**37) + 
            L0x20019978_f * (x**0) * ((y_6)**38) + 
            L0x2001997a_f * (x**1) * ((y_6)**38) + 
            L0x2001997c_f * (x**2) * ((y_6)**38) + 
            L0x2001997e_f * (x**3) * ((y_6)**38) + 
            L0x20019980_f * (x**0) * ((y_6)**39) + 
            L0x20019982_f * (x**1) * ((y_6)**39) + 
            L0x20019984_f * (x**2) * ((y_6)**39) + 
            L0x20019986_f * (x**3) * ((y_6)**39) + 
            L0x20019988_f * (x**0) * ((y_6)**40) + 
            L0x2001998a_f * (x**1) * ((y_6)**40) + 
            L0x2001998c_f * (x**2) * ((y_6)**40) + 
            L0x2001998e_f * (x**3) * ((y_6)**40) + 
            L0x20019990_f * (x**0) * ((y_6)**41) + 
            L0x20019992_f * (x**1) * ((y_6)**41) + 
            L0x20019994_f * (x**2) * ((y_6)**41) + 
            L0x20019996_f * (x**3) * ((y_6)**41) + 
            L0x20019998_f * (x**0) * ((y_6)**42) + 
            L0x2001999a_f * (x**1) * ((y_6)**42) + 
            L0x2001999c_f * (x**2) * ((y_6)**42) + 
            L0x2001999e_f * (x**3) * ((y_6)**42) + 
            L0x200199a0_f * (x**0) * ((y_6)**43) + 
            L0x200199a2_f * (x**1) * ((y_6)**43) + 
            L0x200199a4_f * (x**2) * ((y_6)**43) + 
            L0x200199a6_f * (x**3) * ((y_6)**43) + 
            L0x200199a8_f * (x**0) * ((y_6)**44) + 
            L0x200199aa_f * (x**1) * ((y_6)**44) + 
            L0x200199ac_f * (x**2) * ((y_6)**44) + 
            L0x200199ae_f * (x**3) * ((y_6)**44) + 
            L0x200199b0_f * (x**0) * ((y_6)**45) + 
            L0x200199b2_f * (x**1) * ((y_6)**45) + 
            L0x200199b4_f * (x**2) * ((y_6)**45) + 
            L0x200199b6_f * (x**3) * ((y_6)**45) + 
            L0x200199b8_f * (x**0) * ((y_6)**46) + 
            L0x200199ba_f * (x**1) * ((y_6)**46) + 
            L0x200199bc_f * (x**2) * ((y_6)**46) + 
            L0x200199be_f * (x**3) * ((y_6)**46) + 
            L0x200199c0_f * (x**0) * ((y_6)**47) + 
            L0x200199c2_f * (x**1) * ((y_6)**47) + 
            L0x200199c4_f * (x**2) * ((y_6)**47) + 
            L0x200199c6_f * (x**3) * ((y_6)**47) + 
            L0x200199c8_f * (x**0) * ((y_6)**48) + 
            L0x200199ca_f * (x**1) * ((y_6)**48) + 
            L0x200199cc_f * (x**2) * ((y_6)**48) + 
            L0x200199ce_f * (x**3) * ((y_6)**48) + 
            L0x200199d0_f * (x**0) * ((y_6)**49) + 
            L0x200199d2_f * (x**1) * ((y_6)**49) + 
            L0x200199d4_f * (x**2) * ((y_6)**49) + 
            L0x200199d6_f * (x**3) * ((y_6)**49) + 
            L0x200199d8_f * (x**0) * ((y_6)**50) + 
            L0x200199da_f * (x**1) * ((y_6)**50) + 
            L0x200199dc_f * (x**2) * ((y_6)**50) + 
            L0x200199de_f * (x**3) * ((y_6)**50) + 
            L0x200199e0_f * (x**0) * ((y_6)**51) + 
            L0x200199e2_f * (x**1) * ((y_6)**51) + 
            L0x200199e4_f * (x**2) * ((y_6)**51) + 
            L0x200199e6_f * (x**3) * ((y_6)**51) + 
            L0x200199e8_f * (x**0) * ((y_6)**52) + 
            L0x200199ea_f * (x**1) * ((y_6)**52) + 
            L0x200199ec_f * (x**2) * ((y_6)**52) + 
            L0x200199ee_f * (x**3) * ((y_6)**52) + 
            L0x200199f0_f * (x**0) * ((y_6)**53) + 
            L0x200199f2_f * (x**1) * ((y_6)**53) + 
            L0x200199f4_f * (x**2) * ((y_6)**53) + 
            L0x200199f6_f * (x**3) * ((y_6)**53) + 
            L0x200199f8_f * (x**0) * ((y_6)**54) + 
            L0x200199fa_f * (x**1) * ((y_6)**54) + 
            L0x200199fc_f * (x**2) * ((y_6)**54) + 
            L0x200199fe_f * (x**3) * ((y_6)**54) + 
            L0x20019a00_f * (x**0) * ((y_6)**55) + 
            L0x20019a02_f * (x**1) * ((y_6)**55) + 
            L0x20019a04_f * (x**2) * ((y_6)**55) + 
            L0x20019a06_f * (x**3) * ((y_6)**55) + 
            L0x20019a08_f * (x**0) * ((y_6)**56) + 
            L0x20019a0a_f * (x**1) * ((y_6)**56) + 
            L0x20019a0c_f * (x**2) * ((y_6)**56) + 
            L0x20019a0e_f * (x**3) * ((y_6)**56) + 
            L0x20019a10_f * (x**0) * ((y_6)**57) + 
            L0x20019a12_f * (x**1) * ((y_6)**57) + 
            L0x20019a14_f * (x**2) * ((y_6)**57) + 
            L0x20019a16_f * (x**3) * ((y_6)**57) + 
            L0x20019a18_f * (x**0) * ((y_6)**58) + 
            L0x20019a1a_f * (x**1) * ((y_6)**58) + 
            L0x20019a1c_f * (x**2) * ((y_6)**58) + 
            L0x20019a1e_f * (x**3) * ((y_6)**58) + 
            L0x20019a20_f * (x**0) * ((y_6)**59) + 
            L0x20019a22_f * (x**1) * ((y_6)**59) + 
            L0x20019a24_f * (x**2) * ((y_6)**59) + 
            L0x20019a26_f * (x**3) * ((y_6)**59) + 
            L0x20019a28_f * (x**0) * ((y_6)**60) + 
            L0x20019a2a_f * (x**1) * ((y_6)**60) + 
            L0x20019a2c_f * (x**2) * ((y_6)**60) + 
            L0x20019a2e_f * (x**3) * ((y_6)**60) + 
            L0x20019a30_f * (x**0) * ((y_6)**61) + 
            L0x20019a32_f * (x**1) * ((y_6)**61) + 
            L0x20019a34_f * (x**2) * ((y_6)**61) + 
            L0x20019a36_f * (x**3) * ((y_6)**61) + 
            L0x20019a38_f * (x**0) * ((y_6)**62) + 
            L0x20019a3a_f * (x**1) * ((y_6)**62) + 
            L0x20019a3c_f * (x**2) * ((y_6)**62) + 
            L0x20019a3e_f * (x**3) * ((y_6)**62) + 
            L0x20019a40_f * (x**0) * ((y_6)**63) + 
            L0x20019a42_f * (x**1) * ((y_6)**63) + 
            L0x20019a44_f * (x**2) * ((y_6)**63) + 
            L0x20019a46_f * (x**3) * ((y_6)**63)
          )
          [25570049, x**4 - y_0_51 * 21942877, y_0_51 - 1],
    (* inp_poly_52 *)
    eqmod (2**32) * (inp_poly_52 * inp_poly_52)
          (
            L0x20019848_f * (x**0) * ((y_6)**0) + 
            L0x2001984a_f * (x**1) * ((y_6)**0) + 
            L0x2001984c_f * (x**2) * ((y_6)**0) + 
            L0x2001984e_f * (x**3) * ((y_6)**0) + 
            L0x20019850_f * (x**0) * ((y_6)**1) + 
            L0x20019852_f * (x**1) * ((y_6)**1) + 
            L0x20019854_f * (x**2) * ((y_6)**1) + 
            L0x20019856_f * (x**3) * ((y_6)**1) + 
            L0x20019858_f * (x**0) * ((y_6)**2) + 
            L0x2001985a_f * (x**1) * ((y_6)**2) + 
            L0x2001985c_f * (x**2) * ((y_6)**2) + 
            L0x2001985e_f * (x**3) * ((y_6)**2) + 
            L0x20019860_f * (x**0) * ((y_6)**3) + 
            L0x20019862_f * (x**1) * ((y_6)**3) + 
            L0x20019864_f * (x**2) * ((y_6)**3) + 
            L0x20019866_f * (x**3) * ((y_6)**3) + 
            L0x20019868_f * (x**0) * ((y_6)**4) + 
            L0x2001986a_f * (x**1) * ((y_6)**4) + 
            L0x2001986c_f * (x**2) * ((y_6)**4) + 
            L0x2001986e_f * (x**3) * ((y_6)**4) + 
            L0x20019870_f * (x**0) * ((y_6)**5) + 
            L0x20019872_f * (x**1) * ((y_6)**5) + 
            L0x20019874_f * (x**2) * ((y_6)**5) + 
            L0x20019876_f * (x**3) * ((y_6)**5) + 
            L0x20019878_f * (x**0) * ((y_6)**6) + 
            L0x2001987a_f * (x**1) * ((y_6)**6) + 
            L0x2001987c_f * (x**2) * ((y_6)**6) + 
            L0x2001987e_f * (x**3) * ((y_6)**6) + 
            L0x20019880_f * (x**0) * ((y_6)**7) + 
            L0x20019882_f * (x**1) * ((y_6)**7) + 
            L0x20019884_f * (x**2) * ((y_6)**7) + 
            L0x20019886_f * (x**3) * ((y_6)**7) + 
            L0x20019888_f * (x**0) * ((y_6)**8) + 
            L0x2001988a_f * (x**1) * ((y_6)**8) + 
            L0x2001988c_f * (x**2) * ((y_6)**8) + 
            L0x2001988e_f * (x**3) * ((y_6)**8) + 
            L0x20019890_f * (x**0) * ((y_6)**9) + 
            L0x20019892_f * (x**1) * ((y_6)**9) + 
            L0x20019894_f * (x**2) * ((y_6)**9) + 
            L0x20019896_f * (x**3) * ((y_6)**9) + 
            L0x20019898_f * (x**0) * ((y_6)**10) + 
            L0x2001989a_f * (x**1) * ((y_6)**10) + 
            L0x2001989c_f * (x**2) * ((y_6)**10) + 
            L0x2001989e_f * (x**3) * ((y_6)**10) + 
            L0x200198a0_f * (x**0) * ((y_6)**11) + 
            L0x200198a2_f * (x**1) * ((y_6)**11) + 
            L0x200198a4_f * (x**2) * ((y_6)**11) + 
            L0x200198a6_f * (x**3) * ((y_6)**11) + 
            L0x200198a8_f * (x**0) * ((y_6)**12) + 
            L0x200198aa_f * (x**1) * ((y_6)**12) + 
            L0x200198ac_f * (x**2) * ((y_6)**12) + 
            L0x200198ae_f * (x**3) * ((y_6)**12) + 
            L0x200198b0_f * (x**0) * ((y_6)**13) + 
            L0x200198b2_f * (x**1) * ((y_6)**13) + 
            L0x200198b4_f * (x**2) * ((y_6)**13) + 
            L0x200198b6_f * (x**3) * ((y_6)**13) + 
            L0x200198b8_f * (x**0) * ((y_6)**14) + 
            L0x200198ba_f * (x**1) * ((y_6)**14) + 
            L0x200198bc_f * (x**2) * ((y_6)**14) + 
            L0x200198be_f * (x**3) * ((y_6)**14) + 
            L0x200198c0_f * (x**0) * ((y_6)**15) + 
            L0x200198c2_f * (x**1) * ((y_6)**15) + 
            L0x200198c4_f * (x**2) * ((y_6)**15) + 
            L0x200198c6_f * (x**3) * ((y_6)**15) + 
            L0x200198c8_f * (x**0) * ((y_6)**16) + 
            L0x200198ca_f * (x**1) * ((y_6)**16) + 
            L0x200198cc_f * (x**2) * ((y_6)**16) + 
            L0x200198ce_f * (x**3) * ((y_6)**16) + 
            L0x200198d0_f * (x**0) * ((y_6)**17) + 
            L0x200198d2_f * (x**1) * ((y_6)**17) + 
            L0x200198d4_f * (x**2) * ((y_6)**17) + 
            L0x200198d6_f * (x**3) * ((y_6)**17) + 
            L0x200198d8_f * (x**0) * ((y_6)**18) + 
            L0x200198da_f * (x**1) * ((y_6)**18) + 
            L0x200198dc_f * (x**2) * ((y_6)**18) + 
            L0x200198de_f * (x**3) * ((y_6)**18) + 
            L0x200198e0_f * (x**0) * ((y_6)**19) + 
            L0x200198e2_f * (x**1) * ((y_6)**19) + 
            L0x200198e4_f * (x**2) * ((y_6)**19) + 
            L0x200198e6_f * (x**3) * ((y_6)**19) + 
            L0x200198e8_f * (x**0) * ((y_6)**20) + 
            L0x200198ea_f * (x**1) * ((y_6)**20) + 
            L0x200198ec_f * (x**2) * ((y_6)**20) + 
            L0x200198ee_f * (x**3) * ((y_6)**20) + 
            L0x200198f0_f * (x**0) * ((y_6)**21) + 
            L0x200198f2_f * (x**1) * ((y_6)**21) + 
            L0x200198f4_f * (x**2) * ((y_6)**21) + 
            L0x200198f6_f * (x**3) * ((y_6)**21) + 
            L0x200198f8_f * (x**0) * ((y_6)**22) + 
            L0x200198fa_f * (x**1) * ((y_6)**22) + 
            L0x200198fc_f * (x**2) * ((y_6)**22) + 
            L0x200198fe_f * (x**3) * ((y_6)**22) + 
            L0x20019900_f * (x**0) * ((y_6)**23) + 
            L0x20019902_f * (x**1) * ((y_6)**23) + 
            L0x20019904_f * (x**2) * ((y_6)**23) + 
            L0x20019906_f * (x**3) * ((y_6)**23) + 
            L0x20019908_f * (x**0) * ((y_6)**24) + 
            L0x2001990a_f * (x**1) * ((y_6)**24) + 
            L0x2001990c_f * (x**2) * ((y_6)**24) + 
            L0x2001990e_f * (x**3) * ((y_6)**24) + 
            L0x20019910_f * (x**0) * ((y_6)**25) + 
            L0x20019912_f * (x**1) * ((y_6)**25) + 
            L0x20019914_f * (x**2) * ((y_6)**25) + 
            L0x20019916_f * (x**3) * ((y_6)**25) + 
            L0x20019918_f * (x**0) * ((y_6)**26) + 
            L0x2001991a_f * (x**1) * ((y_6)**26) + 
            L0x2001991c_f * (x**2) * ((y_6)**26) + 
            L0x2001991e_f * (x**3) * ((y_6)**26) + 
            L0x20019920_f * (x**0) * ((y_6)**27) + 
            L0x20019922_f * (x**1) * ((y_6)**27) + 
            L0x20019924_f * (x**2) * ((y_6)**27) + 
            L0x20019926_f * (x**3) * ((y_6)**27) + 
            L0x20019928_f * (x**0) * ((y_6)**28) + 
            L0x2001992a_f * (x**1) * ((y_6)**28) + 
            L0x2001992c_f * (x**2) * ((y_6)**28) + 
            L0x2001992e_f * (x**3) * ((y_6)**28) + 
            L0x20019930_f * (x**0) * ((y_6)**29) + 
            L0x20019932_f * (x**1) * ((y_6)**29) + 
            L0x20019934_f * (x**2) * ((y_6)**29) + 
            L0x20019936_f * (x**3) * ((y_6)**29) + 
            L0x20019938_f * (x**0) * ((y_6)**30) + 
            L0x2001993a_f * (x**1) * ((y_6)**30) + 
            L0x2001993c_f * (x**2) * ((y_6)**30) + 
            L0x2001993e_f * (x**3) * ((y_6)**30) + 
            L0x20019940_f * (x**0) * ((y_6)**31) + 
            L0x20019942_f * (x**1) * ((y_6)**31) + 
            L0x20019944_f * (x**2) * ((y_6)**31) + 
            L0x20019946_f * (x**3) * ((y_6)**31) + 
            L0x20019948_f * (x**0) * ((y_6)**32) + 
            L0x2001994a_f * (x**1) * ((y_6)**32) + 
            L0x2001994c_f * (x**2) * ((y_6)**32) + 
            L0x2001994e_f * (x**3) * ((y_6)**32) + 
            L0x20019950_f * (x**0) * ((y_6)**33) + 
            L0x20019952_f * (x**1) * ((y_6)**33) + 
            L0x20019954_f * (x**2) * ((y_6)**33) + 
            L0x20019956_f * (x**3) * ((y_6)**33) + 
            L0x20019958_f * (x**0) * ((y_6)**34) + 
            L0x2001995a_f * (x**1) * ((y_6)**34) + 
            L0x2001995c_f * (x**2) * ((y_6)**34) + 
            L0x2001995e_f * (x**3) * ((y_6)**34) + 
            L0x20019960_f * (x**0) * ((y_6)**35) + 
            L0x20019962_f * (x**1) * ((y_6)**35) + 
            L0x20019964_f * (x**2) * ((y_6)**35) + 
            L0x20019966_f * (x**3) * ((y_6)**35) + 
            L0x20019968_f * (x**0) * ((y_6)**36) + 
            L0x2001996a_f * (x**1) * ((y_6)**36) + 
            L0x2001996c_f * (x**2) * ((y_6)**36) + 
            L0x2001996e_f * (x**3) * ((y_6)**36) + 
            L0x20019970_f * (x**0) * ((y_6)**37) + 
            L0x20019972_f * (x**1) * ((y_6)**37) + 
            L0x20019974_f * (x**2) * ((y_6)**37) + 
            L0x20019976_f * (x**3) * ((y_6)**37) + 
            L0x20019978_f * (x**0) * ((y_6)**38) + 
            L0x2001997a_f * (x**1) * ((y_6)**38) + 
            L0x2001997c_f * (x**2) * ((y_6)**38) + 
            L0x2001997e_f * (x**3) * ((y_6)**38) + 
            L0x20019980_f * (x**0) * ((y_6)**39) + 
            L0x20019982_f * (x**1) * ((y_6)**39) + 
            L0x20019984_f * (x**2) * ((y_6)**39) + 
            L0x20019986_f * (x**3) * ((y_6)**39) + 
            L0x20019988_f * (x**0) * ((y_6)**40) + 
            L0x2001998a_f * (x**1) * ((y_6)**40) + 
            L0x2001998c_f * (x**2) * ((y_6)**40) + 
            L0x2001998e_f * (x**3) * ((y_6)**40) + 
            L0x20019990_f * (x**0) * ((y_6)**41) + 
            L0x20019992_f * (x**1) * ((y_6)**41) + 
            L0x20019994_f * (x**2) * ((y_6)**41) + 
            L0x20019996_f * (x**3) * ((y_6)**41) + 
            L0x20019998_f * (x**0) * ((y_6)**42) + 
            L0x2001999a_f * (x**1) * ((y_6)**42) + 
            L0x2001999c_f * (x**2) * ((y_6)**42) + 
            L0x2001999e_f * (x**3) * ((y_6)**42) + 
            L0x200199a0_f * (x**0) * ((y_6)**43) + 
            L0x200199a2_f * (x**1) * ((y_6)**43) + 
            L0x200199a4_f * (x**2) * ((y_6)**43) + 
            L0x200199a6_f * (x**3) * ((y_6)**43) + 
            L0x200199a8_f * (x**0) * ((y_6)**44) + 
            L0x200199aa_f * (x**1) * ((y_6)**44) + 
            L0x200199ac_f * (x**2) * ((y_6)**44) + 
            L0x200199ae_f * (x**3) * ((y_6)**44) + 
            L0x200199b0_f * (x**0) * ((y_6)**45) + 
            L0x200199b2_f * (x**1) * ((y_6)**45) + 
            L0x200199b4_f * (x**2) * ((y_6)**45) + 
            L0x200199b6_f * (x**3) * ((y_6)**45) + 
            L0x200199b8_f * (x**0) * ((y_6)**46) + 
            L0x200199ba_f * (x**1) * ((y_6)**46) + 
            L0x200199bc_f * (x**2) * ((y_6)**46) + 
            L0x200199be_f * (x**3) * ((y_6)**46) + 
            L0x200199c0_f * (x**0) * ((y_6)**47) + 
            L0x200199c2_f * (x**1) * ((y_6)**47) + 
            L0x200199c4_f * (x**2) * ((y_6)**47) + 
            L0x200199c6_f * (x**3) * ((y_6)**47) + 
            L0x200199c8_f * (x**0) * ((y_6)**48) + 
            L0x200199ca_f * (x**1) * ((y_6)**48) + 
            L0x200199cc_f * (x**2) * ((y_6)**48) + 
            L0x200199ce_f * (x**3) * ((y_6)**48) + 
            L0x200199d0_f * (x**0) * ((y_6)**49) + 
            L0x200199d2_f * (x**1) * ((y_6)**49) + 
            L0x200199d4_f * (x**2) * ((y_6)**49) + 
            L0x200199d6_f * (x**3) * ((y_6)**49) + 
            L0x200199d8_f * (x**0) * ((y_6)**50) + 
            L0x200199da_f * (x**1) * ((y_6)**50) + 
            L0x200199dc_f * (x**2) * ((y_6)**50) + 
            L0x200199de_f * (x**3) * ((y_6)**50) + 
            L0x200199e0_f * (x**0) * ((y_6)**51) + 
            L0x200199e2_f * (x**1) * ((y_6)**51) + 
            L0x200199e4_f * (x**2) * ((y_6)**51) + 
            L0x200199e6_f * (x**3) * ((y_6)**51) + 
            L0x200199e8_f * (x**0) * ((y_6)**52) + 
            L0x200199ea_f * (x**1) * ((y_6)**52) + 
            L0x200199ec_f * (x**2) * ((y_6)**52) + 
            L0x200199ee_f * (x**3) * ((y_6)**52) + 
            L0x200199f0_f * (x**0) * ((y_6)**53) + 
            L0x200199f2_f * (x**1) * ((y_6)**53) + 
            L0x200199f4_f * (x**2) * ((y_6)**53) + 
            L0x200199f6_f * (x**3) * ((y_6)**53) + 
            L0x200199f8_f * (x**0) * ((y_6)**54) + 
            L0x200199fa_f * (x**1) * ((y_6)**54) + 
            L0x200199fc_f * (x**2) * ((y_6)**54) + 
            L0x200199fe_f * (x**3) * ((y_6)**54) + 
            L0x20019a00_f * (x**0) * ((y_6)**55) + 
            L0x20019a02_f * (x**1) * ((y_6)**55) + 
            L0x20019a04_f * (x**2) * ((y_6)**55) + 
            L0x20019a06_f * (x**3) * ((y_6)**55) + 
            L0x20019a08_f * (x**0) * ((y_6)**56) + 
            L0x20019a0a_f * (x**1) * ((y_6)**56) + 
            L0x20019a0c_f * (x**2) * ((y_6)**56) + 
            L0x20019a0e_f * (x**3) * ((y_6)**56) + 
            L0x20019a10_f * (x**0) * ((y_6)**57) + 
            L0x20019a12_f * (x**1) * ((y_6)**57) + 
            L0x20019a14_f * (x**2) * ((y_6)**57) + 
            L0x20019a16_f * (x**3) * ((y_6)**57) + 
            L0x20019a18_f * (x**0) * ((y_6)**58) + 
            L0x20019a1a_f * (x**1) * ((y_6)**58) + 
            L0x20019a1c_f * (x**2) * ((y_6)**58) + 
            L0x20019a1e_f * (x**3) * ((y_6)**58) + 
            L0x20019a20_f * (x**0) * ((y_6)**59) + 
            L0x20019a22_f * (x**1) * ((y_6)**59) + 
            L0x20019a24_f * (x**2) * ((y_6)**59) + 
            L0x20019a26_f * (x**3) * ((y_6)**59) + 
            L0x20019a28_f * (x**0) * ((y_6)**60) + 
            L0x20019a2a_f * (x**1) * ((y_6)**60) + 
            L0x20019a2c_f * (x**2) * ((y_6)**60) + 
            L0x20019a2e_f * (x**3) * ((y_6)**60) + 
            L0x20019a30_f * (x**0) * ((y_6)**61) + 
            L0x20019a32_f * (x**1) * ((y_6)**61) + 
            L0x20019a34_f * (x**2) * ((y_6)**61) + 
            L0x20019a36_f * (x**3) * ((y_6)**61) + 
            L0x20019a38_f * (x**0) * ((y_6)**62) + 
            L0x20019a3a_f * (x**1) * ((y_6)**62) + 
            L0x20019a3c_f * (x**2) * ((y_6)**62) + 
            L0x20019a3e_f * (x**3) * ((y_6)**62) + 
            L0x20019a40_f * (x**0) * ((y_6)**63) + 
            L0x20019a42_f * (x**1) * ((y_6)**63) + 
            L0x20019a44_f * (x**2) * ((y_6)**63) + 
            L0x20019a46_f * (x**3) * ((y_6)**63)
          )
          [25570049, x**4 - y_0_52 * 4002385, y_0_52 - 1],
    (* inp_poly_53 *)
    eqmod (2**32) * (inp_poly_53 * inp_poly_53)
          (
            L0x20019848_f * (x**0) * ((y_6)**0) + 
            L0x2001984a_f * (x**1) * ((y_6)**0) + 
            L0x2001984c_f * (x**2) * ((y_6)**0) + 
            L0x2001984e_f * (x**3) * ((y_6)**0) + 
            L0x20019850_f * (x**0) * ((y_6)**1) + 
            L0x20019852_f * (x**1) * ((y_6)**1) + 
            L0x20019854_f * (x**2) * ((y_6)**1) + 
            L0x20019856_f * (x**3) * ((y_6)**1) + 
            L0x20019858_f * (x**0) * ((y_6)**2) + 
            L0x2001985a_f * (x**1) * ((y_6)**2) + 
            L0x2001985c_f * (x**2) * ((y_6)**2) + 
            L0x2001985e_f * (x**3) * ((y_6)**2) + 
            L0x20019860_f * (x**0) * ((y_6)**3) + 
            L0x20019862_f * (x**1) * ((y_6)**3) + 
            L0x20019864_f * (x**2) * ((y_6)**3) + 
            L0x20019866_f * (x**3) * ((y_6)**3) + 
            L0x20019868_f * (x**0) * ((y_6)**4) + 
            L0x2001986a_f * (x**1) * ((y_6)**4) + 
            L0x2001986c_f * (x**2) * ((y_6)**4) + 
            L0x2001986e_f * (x**3) * ((y_6)**4) + 
            L0x20019870_f * (x**0) * ((y_6)**5) + 
            L0x20019872_f * (x**1) * ((y_6)**5) + 
            L0x20019874_f * (x**2) * ((y_6)**5) + 
            L0x20019876_f * (x**3) * ((y_6)**5) + 
            L0x20019878_f * (x**0) * ((y_6)**6) + 
            L0x2001987a_f * (x**1) * ((y_6)**6) + 
            L0x2001987c_f * (x**2) * ((y_6)**6) + 
            L0x2001987e_f * (x**3) * ((y_6)**6) + 
            L0x20019880_f * (x**0) * ((y_6)**7) + 
            L0x20019882_f * (x**1) * ((y_6)**7) + 
            L0x20019884_f * (x**2) * ((y_6)**7) + 
            L0x20019886_f * (x**3) * ((y_6)**7) + 
            L0x20019888_f * (x**0) * ((y_6)**8) + 
            L0x2001988a_f * (x**1) * ((y_6)**8) + 
            L0x2001988c_f * (x**2) * ((y_6)**8) + 
            L0x2001988e_f * (x**3) * ((y_6)**8) + 
            L0x20019890_f * (x**0) * ((y_6)**9) + 
            L0x20019892_f * (x**1) * ((y_6)**9) + 
            L0x20019894_f * (x**2) * ((y_6)**9) + 
            L0x20019896_f * (x**3) * ((y_6)**9) + 
            L0x20019898_f * (x**0) * ((y_6)**10) + 
            L0x2001989a_f * (x**1) * ((y_6)**10) + 
            L0x2001989c_f * (x**2) * ((y_6)**10) + 
            L0x2001989e_f * (x**3) * ((y_6)**10) + 
            L0x200198a0_f * (x**0) * ((y_6)**11) + 
            L0x200198a2_f * (x**1) * ((y_6)**11) + 
            L0x200198a4_f * (x**2) * ((y_6)**11) + 
            L0x200198a6_f * (x**3) * ((y_6)**11) + 
            L0x200198a8_f * (x**0) * ((y_6)**12) + 
            L0x200198aa_f * (x**1) * ((y_6)**12) + 
            L0x200198ac_f * (x**2) * ((y_6)**12) + 
            L0x200198ae_f * (x**3) * ((y_6)**12) + 
            L0x200198b0_f * (x**0) * ((y_6)**13) + 
            L0x200198b2_f * (x**1) * ((y_6)**13) + 
            L0x200198b4_f * (x**2) * ((y_6)**13) + 
            L0x200198b6_f * (x**3) * ((y_6)**13) + 
            L0x200198b8_f * (x**0) * ((y_6)**14) + 
            L0x200198ba_f * (x**1) * ((y_6)**14) + 
            L0x200198bc_f * (x**2) * ((y_6)**14) + 
            L0x200198be_f * (x**3) * ((y_6)**14) + 
            L0x200198c0_f * (x**0) * ((y_6)**15) + 
            L0x200198c2_f * (x**1) * ((y_6)**15) + 
            L0x200198c4_f * (x**2) * ((y_6)**15) + 
            L0x200198c6_f * (x**3) * ((y_6)**15) + 
            L0x200198c8_f * (x**0) * ((y_6)**16) + 
            L0x200198ca_f * (x**1) * ((y_6)**16) + 
            L0x200198cc_f * (x**2) * ((y_6)**16) + 
            L0x200198ce_f * (x**3) * ((y_6)**16) + 
            L0x200198d0_f * (x**0) * ((y_6)**17) + 
            L0x200198d2_f * (x**1) * ((y_6)**17) + 
            L0x200198d4_f * (x**2) * ((y_6)**17) + 
            L0x200198d6_f * (x**3) * ((y_6)**17) + 
            L0x200198d8_f * (x**0) * ((y_6)**18) + 
            L0x200198da_f * (x**1) * ((y_6)**18) + 
            L0x200198dc_f * (x**2) * ((y_6)**18) + 
            L0x200198de_f * (x**3) * ((y_6)**18) + 
            L0x200198e0_f * (x**0) * ((y_6)**19) + 
            L0x200198e2_f * (x**1) * ((y_6)**19) + 
            L0x200198e4_f * (x**2) * ((y_6)**19) + 
            L0x200198e6_f * (x**3) * ((y_6)**19) + 
            L0x200198e8_f * (x**0) * ((y_6)**20) + 
            L0x200198ea_f * (x**1) * ((y_6)**20) + 
            L0x200198ec_f * (x**2) * ((y_6)**20) + 
            L0x200198ee_f * (x**3) * ((y_6)**20) + 
            L0x200198f0_f * (x**0) * ((y_6)**21) + 
            L0x200198f2_f * (x**1) * ((y_6)**21) + 
            L0x200198f4_f * (x**2) * ((y_6)**21) + 
            L0x200198f6_f * (x**3) * ((y_6)**21) + 
            L0x200198f8_f * (x**0) * ((y_6)**22) + 
            L0x200198fa_f * (x**1) * ((y_6)**22) + 
            L0x200198fc_f * (x**2) * ((y_6)**22) + 
            L0x200198fe_f * (x**3) * ((y_6)**22) + 
            L0x20019900_f * (x**0) * ((y_6)**23) + 
            L0x20019902_f * (x**1) * ((y_6)**23) + 
            L0x20019904_f * (x**2) * ((y_6)**23) + 
            L0x20019906_f * (x**3) * ((y_6)**23) + 
            L0x20019908_f * (x**0) * ((y_6)**24) + 
            L0x2001990a_f * (x**1) * ((y_6)**24) + 
            L0x2001990c_f * (x**2) * ((y_6)**24) + 
            L0x2001990e_f * (x**3) * ((y_6)**24) + 
            L0x20019910_f * (x**0) * ((y_6)**25) + 
            L0x20019912_f * (x**1) * ((y_6)**25) + 
            L0x20019914_f * (x**2) * ((y_6)**25) + 
            L0x20019916_f * (x**3) * ((y_6)**25) + 
            L0x20019918_f * (x**0) * ((y_6)**26) + 
            L0x2001991a_f * (x**1) * ((y_6)**26) + 
            L0x2001991c_f * (x**2) * ((y_6)**26) + 
            L0x2001991e_f * (x**3) * ((y_6)**26) + 
            L0x20019920_f * (x**0) * ((y_6)**27) + 
            L0x20019922_f * (x**1) * ((y_6)**27) + 
            L0x20019924_f * (x**2) * ((y_6)**27) + 
            L0x20019926_f * (x**3) * ((y_6)**27) + 
            L0x20019928_f * (x**0) * ((y_6)**28) + 
            L0x2001992a_f * (x**1) * ((y_6)**28) + 
            L0x2001992c_f * (x**2) * ((y_6)**28) + 
            L0x2001992e_f * (x**3) * ((y_6)**28) + 
            L0x20019930_f * (x**0) * ((y_6)**29) + 
            L0x20019932_f * (x**1) * ((y_6)**29) + 
            L0x20019934_f * (x**2) * ((y_6)**29) + 
            L0x20019936_f * (x**3) * ((y_6)**29) + 
            L0x20019938_f * (x**0) * ((y_6)**30) + 
            L0x2001993a_f * (x**1) * ((y_6)**30) + 
            L0x2001993c_f * (x**2) * ((y_6)**30) + 
            L0x2001993e_f * (x**3) * ((y_6)**30) + 
            L0x20019940_f * (x**0) * ((y_6)**31) + 
            L0x20019942_f * (x**1) * ((y_6)**31) + 
            L0x20019944_f * (x**2) * ((y_6)**31) + 
            L0x20019946_f * (x**3) * ((y_6)**31) + 
            L0x20019948_f * (x**0) * ((y_6)**32) + 
            L0x2001994a_f * (x**1) * ((y_6)**32) + 
            L0x2001994c_f * (x**2) * ((y_6)**32) + 
            L0x2001994e_f * (x**3) * ((y_6)**32) + 
            L0x20019950_f * (x**0) * ((y_6)**33) + 
            L0x20019952_f * (x**1) * ((y_6)**33) + 
            L0x20019954_f * (x**2) * ((y_6)**33) + 
            L0x20019956_f * (x**3) * ((y_6)**33) + 
            L0x20019958_f * (x**0) * ((y_6)**34) + 
            L0x2001995a_f * (x**1) * ((y_6)**34) + 
            L0x2001995c_f * (x**2) * ((y_6)**34) + 
            L0x2001995e_f * (x**3) * ((y_6)**34) + 
            L0x20019960_f * (x**0) * ((y_6)**35) + 
            L0x20019962_f * (x**1) * ((y_6)**35) + 
            L0x20019964_f * (x**2) * ((y_6)**35) + 
            L0x20019966_f * (x**3) * ((y_6)**35) + 
            L0x20019968_f * (x**0) * ((y_6)**36) + 
            L0x2001996a_f * (x**1) * ((y_6)**36) + 
            L0x2001996c_f * (x**2) * ((y_6)**36) + 
            L0x2001996e_f * (x**3) * ((y_6)**36) + 
            L0x20019970_f * (x**0) * ((y_6)**37) + 
            L0x20019972_f * (x**1) * ((y_6)**37) + 
            L0x20019974_f * (x**2) * ((y_6)**37) + 
            L0x20019976_f * (x**3) * ((y_6)**37) + 
            L0x20019978_f * (x**0) * ((y_6)**38) + 
            L0x2001997a_f * (x**1) * ((y_6)**38) + 
            L0x2001997c_f * (x**2) * ((y_6)**38) + 
            L0x2001997e_f * (x**3) * ((y_6)**38) + 
            L0x20019980_f * (x**0) * ((y_6)**39) + 
            L0x20019982_f * (x**1) * ((y_6)**39) + 
            L0x20019984_f * (x**2) * ((y_6)**39) + 
            L0x20019986_f * (x**3) * ((y_6)**39) + 
            L0x20019988_f * (x**0) * ((y_6)**40) + 
            L0x2001998a_f * (x**1) * ((y_6)**40) + 
            L0x2001998c_f * (x**2) * ((y_6)**40) + 
            L0x2001998e_f * (x**3) * ((y_6)**40) + 
            L0x20019990_f * (x**0) * ((y_6)**41) + 
            L0x20019992_f * (x**1) * ((y_6)**41) + 
            L0x20019994_f * (x**2) * ((y_6)**41) + 
            L0x20019996_f * (x**3) * ((y_6)**41) + 
            L0x20019998_f * (x**0) * ((y_6)**42) + 
            L0x2001999a_f * (x**1) * ((y_6)**42) + 
            L0x2001999c_f * (x**2) * ((y_6)**42) + 
            L0x2001999e_f * (x**3) * ((y_6)**42) + 
            L0x200199a0_f * (x**0) * ((y_6)**43) + 
            L0x200199a2_f * (x**1) * ((y_6)**43) + 
            L0x200199a4_f * (x**2) * ((y_6)**43) + 
            L0x200199a6_f * (x**3) * ((y_6)**43) + 
            L0x200199a8_f * (x**0) * ((y_6)**44) + 
            L0x200199aa_f * (x**1) * ((y_6)**44) + 
            L0x200199ac_f * (x**2) * ((y_6)**44) + 
            L0x200199ae_f * (x**3) * ((y_6)**44) + 
            L0x200199b0_f * (x**0) * ((y_6)**45) + 
            L0x200199b2_f * (x**1) * ((y_6)**45) + 
            L0x200199b4_f * (x**2) * ((y_6)**45) + 
            L0x200199b6_f * (x**3) * ((y_6)**45) + 
            L0x200199b8_f * (x**0) * ((y_6)**46) + 
            L0x200199ba_f * (x**1) * ((y_6)**46) + 
            L0x200199bc_f * (x**2) * ((y_6)**46) + 
            L0x200199be_f * (x**3) * ((y_6)**46) + 
            L0x200199c0_f * (x**0) * ((y_6)**47) + 
            L0x200199c2_f * (x**1) * ((y_6)**47) + 
            L0x200199c4_f * (x**2) * ((y_6)**47) + 
            L0x200199c6_f * (x**3) * ((y_6)**47) + 
            L0x200199c8_f * (x**0) * ((y_6)**48) + 
            L0x200199ca_f * (x**1) * ((y_6)**48) + 
            L0x200199cc_f * (x**2) * ((y_6)**48) + 
            L0x200199ce_f * (x**3) * ((y_6)**48) + 
            L0x200199d0_f * (x**0) * ((y_6)**49) + 
            L0x200199d2_f * (x**1) * ((y_6)**49) + 
            L0x200199d4_f * (x**2) * ((y_6)**49) + 
            L0x200199d6_f * (x**3) * ((y_6)**49) + 
            L0x200199d8_f * (x**0) * ((y_6)**50) + 
            L0x200199da_f * (x**1) * ((y_6)**50) + 
            L0x200199dc_f * (x**2) * ((y_6)**50) + 
            L0x200199de_f * (x**3) * ((y_6)**50) + 
            L0x200199e0_f * (x**0) * ((y_6)**51) + 
            L0x200199e2_f * (x**1) * ((y_6)**51) + 
            L0x200199e4_f * (x**2) * ((y_6)**51) + 
            L0x200199e6_f * (x**3) * ((y_6)**51) + 
            L0x200199e8_f * (x**0) * ((y_6)**52) + 
            L0x200199ea_f * (x**1) * ((y_6)**52) + 
            L0x200199ec_f * (x**2) * ((y_6)**52) + 
            L0x200199ee_f * (x**3) * ((y_6)**52) + 
            L0x200199f0_f * (x**0) * ((y_6)**53) + 
            L0x200199f2_f * (x**1) * ((y_6)**53) + 
            L0x200199f4_f * (x**2) * ((y_6)**53) + 
            L0x200199f6_f * (x**3) * ((y_6)**53) + 
            L0x200199f8_f * (x**0) * ((y_6)**54) + 
            L0x200199fa_f * (x**1) * ((y_6)**54) + 
            L0x200199fc_f * (x**2) * ((y_6)**54) + 
            L0x200199fe_f * (x**3) * ((y_6)**54) + 
            L0x20019a00_f * (x**0) * ((y_6)**55) + 
            L0x20019a02_f * (x**1) * ((y_6)**55) + 
            L0x20019a04_f * (x**2) * ((y_6)**55) + 
            L0x20019a06_f * (x**3) * ((y_6)**55) + 
            L0x20019a08_f * (x**0) * ((y_6)**56) + 
            L0x20019a0a_f * (x**1) * ((y_6)**56) + 
            L0x20019a0c_f * (x**2) * ((y_6)**56) + 
            L0x20019a0e_f * (x**3) * ((y_6)**56) + 
            L0x20019a10_f * (x**0) * ((y_6)**57) + 
            L0x20019a12_f * (x**1) * ((y_6)**57) + 
            L0x20019a14_f * (x**2) * ((y_6)**57) + 
            L0x20019a16_f * (x**3) * ((y_6)**57) + 
            L0x20019a18_f * (x**0) * ((y_6)**58) + 
            L0x20019a1a_f * (x**1) * ((y_6)**58) + 
            L0x20019a1c_f * (x**2) * ((y_6)**58) + 
            L0x20019a1e_f * (x**3) * ((y_6)**58) + 
            L0x20019a20_f * (x**0) * ((y_6)**59) + 
            L0x20019a22_f * (x**1) * ((y_6)**59) + 
            L0x20019a24_f * (x**2) * ((y_6)**59) + 
            L0x20019a26_f * (x**3) * ((y_6)**59) + 
            L0x20019a28_f * (x**0) * ((y_6)**60) + 
            L0x20019a2a_f * (x**1) * ((y_6)**60) + 
            L0x20019a2c_f * (x**2) * ((y_6)**60) + 
            L0x20019a2e_f * (x**3) * ((y_6)**60) + 
            L0x20019a30_f * (x**0) * ((y_6)**61) + 
            L0x20019a32_f * (x**1) * ((y_6)**61) + 
            L0x20019a34_f * (x**2) * ((y_6)**61) + 
            L0x20019a36_f * (x**3) * ((y_6)**61) + 
            L0x20019a38_f * (x**0) * ((y_6)**62) + 
            L0x20019a3a_f * (x**1) * ((y_6)**62) + 
            L0x20019a3c_f * (x**2) * ((y_6)**62) + 
            L0x20019a3e_f * (x**3) * ((y_6)**62) + 
            L0x20019a40_f * (x**0) * ((y_6)**63) + 
            L0x20019a42_f * (x**1) * ((y_6)**63) + 
            L0x20019a44_f * (x**2) * ((y_6)**63) + 
            L0x20019a46_f * (x**3) * ((y_6)**63)
          )
          [25570049, x**4 - y_0_53 * 21567664, y_0_53 - 1],
    (* inp_poly_54 *)
    eqmod (2**32) * (inp_poly_54 * inp_poly_54)
          (
            L0x20019848_f * (x**0) * ((y_6)**0) + 
            L0x2001984a_f * (x**1) * ((y_6)**0) + 
            L0x2001984c_f * (x**2) * ((y_6)**0) + 
            L0x2001984e_f * (x**3) * ((y_6)**0) + 
            L0x20019850_f * (x**0) * ((y_6)**1) + 
            L0x20019852_f * (x**1) * ((y_6)**1) + 
            L0x20019854_f * (x**2) * ((y_6)**1) + 
            L0x20019856_f * (x**3) * ((y_6)**1) + 
            L0x20019858_f * (x**0) * ((y_6)**2) + 
            L0x2001985a_f * (x**1) * ((y_6)**2) + 
            L0x2001985c_f * (x**2) * ((y_6)**2) + 
            L0x2001985e_f * (x**3) * ((y_6)**2) + 
            L0x20019860_f * (x**0) * ((y_6)**3) + 
            L0x20019862_f * (x**1) * ((y_6)**3) + 
            L0x20019864_f * (x**2) * ((y_6)**3) + 
            L0x20019866_f * (x**3) * ((y_6)**3) + 
            L0x20019868_f * (x**0) * ((y_6)**4) + 
            L0x2001986a_f * (x**1) * ((y_6)**4) + 
            L0x2001986c_f * (x**2) * ((y_6)**4) + 
            L0x2001986e_f * (x**3) * ((y_6)**4) + 
            L0x20019870_f * (x**0) * ((y_6)**5) + 
            L0x20019872_f * (x**1) * ((y_6)**5) + 
            L0x20019874_f * (x**2) * ((y_6)**5) + 
            L0x20019876_f * (x**3) * ((y_6)**5) + 
            L0x20019878_f * (x**0) * ((y_6)**6) + 
            L0x2001987a_f * (x**1) * ((y_6)**6) + 
            L0x2001987c_f * (x**2) * ((y_6)**6) + 
            L0x2001987e_f * (x**3) * ((y_6)**6) + 
            L0x20019880_f * (x**0) * ((y_6)**7) + 
            L0x20019882_f * (x**1) * ((y_6)**7) + 
            L0x20019884_f * (x**2) * ((y_6)**7) + 
            L0x20019886_f * (x**3) * ((y_6)**7) + 
            L0x20019888_f * (x**0) * ((y_6)**8) + 
            L0x2001988a_f * (x**1) * ((y_6)**8) + 
            L0x2001988c_f * (x**2) * ((y_6)**8) + 
            L0x2001988e_f * (x**3) * ((y_6)**8) + 
            L0x20019890_f * (x**0) * ((y_6)**9) + 
            L0x20019892_f * (x**1) * ((y_6)**9) + 
            L0x20019894_f * (x**2) * ((y_6)**9) + 
            L0x20019896_f * (x**3) * ((y_6)**9) + 
            L0x20019898_f * (x**0) * ((y_6)**10) + 
            L0x2001989a_f * (x**1) * ((y_6)**10) + 
            L0x2001989c_f * (x**2) * ((y_6)**10) + 
            L0x2001989e_f * (x**3) * ((y_6)**10) + 
            L0x200198a0_f * (x**0) * ((y_6)**11) + 
            L0x200198a2_f * (x**1) * ((y_6)**11) + 
            L0x200198a4_f * (x**2) * ((y_6)**11) + 
            L0x200198a6_f * (x**3) * ((y_6)**11) + 
            L0x200198a8_f * (x**0) * ((y_6)**12) + 
            L0x200198aa_f * (x**1) * ((y_6)**12) + 
            L0x200198ac_f * (x**2) * ((y_6)**12) + 
            L0x200198ae_f * (x**3) * ((y_6)**12) + 
            L0x200198b0_f * (x**0) * ((y_6)**13) + 
            L0x200198b2_f * (x**1) * ((y_6)**13) + 
            L0x200198b4_f * (x**2) * ((y_6)**13) + 
            L0x200198b6_f * (x**3) * ((y_6)**13) + 
            L0x200198b8_f * (x**0) * ((y_6)**14) + 
            L0x200198ba_f * (x**1) * ((y_6)**14) + 
            L0x200198bc_f * (x**2) * ((y_6)**14) + 
            L0x200198be_f * (x**3) * ((y_6)**14) + 
            L0x200198c0_f * (x**0) * ((y_6)**15) + 
            L0x200198c2_f * (x**1) * ((y_6)**15) + 
            L0x200198c4_f * (x**2) * ((y_6)**15) + 
            L0x200198c6_f * (x**3) * ((y_6)**15) + 
            L0x200198c8_f * (x**0) * ((y_6)**16) + 
            L0x200198ca_f * (x**1) * ((y_6)**16) + 
            L0x200198cc_f * (x**2) * ((y_6)**16) + 
            L0x200198ce_f * (x**3) * ((y_6)**16) + 
            L0x200198d0_f * (x**0) * ((y_6)**17) + 
            L0x200198d2_f * (x**1) * ((y_6)**17) + 
            L0x200198d4_f * (x**2) * ((y_6)**17) + 
            L0x200198d6_f * (x**3) * ((y_6)**17) + 
            L0x200198d8_f * (x**0) * ((y_6)**18) + 
            L0x200198da_f * (x**1) * ((y_6)**18) + 
            L0x200198dc_f * (x**2) * ((y_6)**18) + 
            L0x200198de_f * (x**3) * ((y_6)**18) + 
            L0x200198e0_f * (x**0) * ((y_6)**19) + 
            L0x200198e2_f * (x**1) * ((y_6)**19) + 
            L0x200198e4_f * (x**2) * ((y_6)**19) + 
            L0x200198e6_f * (x**3) * ((y_6)**19) + 
            L0x200198e8_f * (x**0) * ((y_6)**20) + 
            L0x200198ea_f * (x**1) * ((y_6)**20) + 
            L0x200198ec_f * (x**2) * ((y_6)**20) + 
            L0x200198ee_f * (x**3) * ((y_6)**20) + 
            L0x200198f0_f * (x**0) * ((y_6)**21) + 
            L0x200198f2_f * (x**1) * ((y_6)**21) + 
            L0x200198f4_f * (x**2) * ((y_6)**21) + 
            L0x200198f6_f * (x**3) * ((y_6)**21) + 
            L0x200198f8_f * (x**0) * ((y_6)**22) + 
            L0x200198fa_f * (x**1) * ((y_6)**22) + 
            L0x200198fc_f * (x**2) * ((y_6)**22) + 
            L0x200198fe_f * (x**3) * ((y_6)**22) + 
            L0x20019900_f * (x**0) * ((y_6)**23) + 
            L0x20019902_f * (x**1) * ((y_6)**23) + 
            L0x20019904_f * (x**2) * ((y_6)**23) + 
            L0x20019906_f * (x**3) * ((y_6)**23) + 
            L0x20019908_f * (x**0) * ((y_6)**24) + 
            L0x2001990a_f * (x**1) * ((y_6)**24) + 
            L0x2001990c_f * (x**2) * ((y_6)**24) + 
            L0x2001990e_f * (x**3) * ((y_6)**24) + 
            L0x20019910_f * (x**0) * ((y_6)**25) + 
            L0x20019912_f * (x**1) * ((y_6)**25) + 
            L0x20019914_f * (x**2) * ((y_6)**25) + 
            L0x20019916_f * (x**3) * ((y_6)**25) + 
            L0x20019918_f * (x**0) * ((y_6)**26) + 
            L0x2001991a_f * (x**1) * ((y_6)**26) + 
            L0x2001991c_f * (x**2) * ((y_6)**26) + 
            L0x2001991e_f * (x**3) * ((y_6)**26) + 
            L0x20019920_f * (x**0) * ((y_6)**27) + 
            L0x20019922_f * (x**1) * ((y_6)**27) + 
            L0x20019924_f * (x**2) * ((y_6)**27) + 
            L0x20019926_f * (x**3) * ((y_6)**27) + 
            L0x20019928_f * (x**0) * ((y_6)**28) + 
            L0x2001992a_f * (x**1) * ((y_6)**28) + 
            L0x2001992c_f * (x**2) * ((y_6)**28) + 
            L0x2001992e_f * (x**3) * ((y_6)**28) + 
            L0x20019930_f * (x**0) * ((y_6)**29) + 
            L0x20019932_f * (x**1) * ((y_6)**29) + 
            L0x20019934_f * (x**2) * ((y_6)**29) + 
            L0x20019936_f * (x**3) * ((y_6)**29) + 
            L0x20019938_f * (x**0) * ((y_6)**30) + 
            L0x2001993a_f * (x**1) * ((y_6)**30) + 
            L0x2001993c_f * (x**2) * ((y_6)**30) + 
            L0x2001993e_f * (x**3) * ((y_6)**30) + 
            L0x20019940_f * (x**0) * ((y_6)**31) + 
            L0x20019942_f * (x**1) * ((y_6)**31) + 
            L0x20019944_f * (x**2) * ((y_6)**31) + 
            L0x20019946_f * (x**3) * ((y_6)**31) + 
            L0x20019948_f * (x**0) * ((y_6)**32) + 
            L0x2001994a_f * (x**1) * ((y_6)**32) + 
            L0x2001994c_f * (x**2) * ((y_6)**32) + 
            L0x2001994e_f * (x**3) * ((y_6)**32) + 
            L0x20019950_f * (x**0) * ((y_6)**33) + 
            L0x20019952_f * (x**1) * ((y_6)**33) + 
            L0x20019954_f * (x**2) * ((y_6)**33) + 
            L0x20019956_f * (x**3) * ((y_6)**33) + 
            L0x20019958_f * (x**0) * ((y_6)**34) + 
            L0x2001995a_f * (x**1) * ((y_6)**34) + 
            L0x2001995c_f * (x**2) * ((y_6)**34) + 
            L0x2001995e_f * (x**3) * ((y_6)**34) + 
            L0x20019960_f * (x**0) * ((y_6)**35) + 
            L0x20019962_f * (x**1) * ((y_6)**35) + 
            L0x20019964_f * (x**2) * ((y_6)**35) + 
            L0x20019966_f * (x**3) * ((y_6)**35) + 
            L0x20019968_f * (x**0) * ((y_6)**36) + 
            L0x2001996a_f * (x**1) * ((y_6)**36) + 
            L0x2001996c_f * (x**2) * ((y_6)**36) + 
            L0x2001996e_f * (x**3) * ((y_6)**36) + 
            L0x20019970_f * (x**0) * ((y_6)**37) + 
            L0x20019972_f * (x**1) * ((y_6)**37) + 
            L0x20019974_f * (x**2) * ((y_6)**37) + 
            L0x20019976_f * (x**3) * ((y_6)**37) + 
            L0x20019978_f * (x**0) * ((y_6)**38) + 
            L0x2001997a_f * (x**1) * ((y_6)**38) + 
            L0x2001997c_f * (x**2) * ((y_6)**38) + 
            L0x2001997e_f * (x**3) * ((y_6)**38) + 
            L0x20019980_f * (x**0) * ((y_6)**39) + 
            L0x20019982_f * (x**1) * ((y_6)**39) + 
            L0x20019984_f * (x**2) * ((y_6)**39) + 
            L0x20019986_f * (x**3) * ((y_6)**39) + 
            L0x20019988_f * (x**0) * ((y_6)**40) + 
            L0x2001998a_f * (x**1) * ((y_6)**40) + 
            L0x2001998c_f * (x**2) * ((y_6)**40) + 
            L0x2001998e_f * (x**3) * ((y_6)**40) + 
            L0x20019990_f * (x**0) * ((y_6)**41) + 
            L0x20019992_f * (x**1) * ((y_6)**41) + 
            L0x20019994_f * (x**2) * ((y_6)**41) + 
            L0x20019996_f * (x**3) * ((y_6)**41) + 
            L0x20019998_f * (x**0) * ((y_6)**42) + 
            L0x2001999a_f * (x**1) * ((y_6)**42) + 
            L0x2001999c_f * (x**2) * ((y_6)**42) + 
            L0x2001999e_f * (x**3) * ((y_6)**42) + 
            L0x200199a0_f * (x**0) * ((y_6)**43) + 
            L0x200199a2_f * (x**1) * ((y_6)**43) + 
            L0x200199a4_f * (x**2) * ((y_6)**43) + 
            L0x200199a6_f * (x**3) * ((y_6)**43) + 
            L0x200199a8_f * (x**0) * ((y_6)**44) + 
            L0x200199aa_f * (x**1) * ((y_6)**44) + 
            L0x200199ac_f * (x**2) * ((y_6)**44) + 
            L0x200199ae_f * (x**3) * ((y_6)**44) + 
            L0x200199b0_f * (x**0) * ((y_6)**45) + 
            L0x200199b2_f * (x**1) * ((y_6)**45) + 
            L0x200199b4_f * (x**2) * ((y_6)**45) + 
            L0x200199b6_f * (x**3) * ((y_6)**45) + 
            L0x200199b8_f * (x**0) * ((y_6)**46) + 
            L0x200199ba_f * (x**1) * ((y_6)**46) + 
            L0x200199bc_f * (x**2) * ((y_6)**46) + 
            L0x200199be_f * (x**3) * ((y_6)**46) + 
            L0x200199c0_f * (x**0) * ((y_6)**47) + 
            L0x200199c2_f * (x**1) * ((y_6)**47) + 
            L0x200199c4_f * (x**2) * ((y_6)**47) + 
            L0x200199c6_f * (x**3) * ((y_6)**47) + 
            L0x200199c8_f * (x**0) * ((y_6)**48) + 
            L0x200199ca_f * (x**1) * ((y_6)**48) + 
            L0x200199cc_f * (x**2) * ((y_6)**48) + 
            L0x200199ce_f * (x**3) * ((y_6)**48) + 
            L0x200199d0_f * (x**0) * ((y_6)**49) + 
            L0x200199d2_f * (x**1) * ((y_6)**49) + 
            L0x200199d4_f * (x**2) * ((y_6)**49) + 
            L0x200199d6_f * (x**3) * ((y_6)**49) + 
            L0x200199d8_f * (x**0) * ((y_6)**50) + 
            L0x200199da_f * (x**1) * ((y_6)**50) + 
            L0x200199dc_f * (x**2) * ((y_6)**50) + 
            L0x200199de_f * (x**3) * ((y_6)**50) + 
            L0x200199e0_f * (x**0) * ((y_6)**51) + 
            L0x200199e2_f * (x**1) * ((y_6)**51) + 
            L0x200199e4_f * (x**2) * ((y_6)**51) + 
            L0x200199e6_f * (x**3) * ((y_6)**51) + 
            L0x200199e8_f * (x**0) * ((y_6)**52) + 
            L0x200199ea_f * (x**1) * ((y_6)**52) + 
            L0x200199ec_f * (x**2) * ((y_6)**52) + 
            L0x200199ee_f * (x**3) * ((y_6)**52) + 
            L0x200199f0_f * (x**0) * ((y_6)**53) + 
            L0x200199f2_f * (x**1) * ((y_6)**53) + 
            L0x200199f4_f * (x**2) * ((y_6)**53) + 
            L0x200199f6_f * (x**3) * ((y_6)**53) + 
            L0x200199f8_f * (x**0) * ((y_6)**54) + 
            L0x200199fa_f * (x**1) * ((y_6)**54) + 
            L0x200199fc_f * (x**2) * ((y_6)**54) + 
            L0x200199fe_f * (x**3) * ((y_6)**54) + 
            L0x20019a00_f * (x**0) * ((y_6)**55) + 
            L0x20019a02_f * (x**1) * ((y_6)**55) + 
            L0x20019a04_f * (x**2) * ((y_6)**55) + 
            L0x20019a06_f * (x**3) * ((y_6)**55) + 
            L0x20019a08_f * (x**0) * ((y_6)**56) + 
            L0x20019a0a_f * (x**1) * ((y_6)**56) + 
            L0x20019a0c_f * (x**2) * ((y_6)**56) + 
            L0x20019a0e_f * (x**3) * ((y_6)**56) + 
            L0x20019a10_f * (x**0) * ((y_6)**57) + 
            L0x20019a12_f * (x**1) * ((y_6)**57) + 
            L0x20019a14_f * (x**2) * ((y_6)**57) + 
            L0x20019a16_f * (x**3) * ((y_6)**57) + 
            L0x20019a18_f * (x**0) * ((y_6)**58) + 
            L0x20019a1a_f * (x**1) * ((y_6)**58) + 
            L0x20019a1c_f * (x**2) * ((y_6)**58) + 
            L0x20019a1e_f * (x**3) * ((y_6)**58) + 
            L0x20019a20_f * (x**0) * ((y_6)**59) + 
            L0x20019a22_f * (x**1) * ((y_6)**59) + 
            L0x20019a24_f * (x**2) * ((y_6)**59) + 
            L0x20019a26_f * (x**3) * ((y_6)**59) + 
            L0x20019a28_f * (x**0) * ((y_6)**60) + 
            L0x20019a2a_f * (x**1) * ((y_6)**60) + 
            L0x20019a2c_f * (x**2) * ((y_6)**60) + 
            L0x20019a2e_f * (x**3) * ((y_6)**60) + 
            L0x20019a30_f * (x**0) * ((y_6)**61) + 
            L0x20019a32_f * (x**1) * ((y_6)**61) + 
            L0x20019a34_f * (x**2) * ((y_6)**61) + 
            L0x20019a36_f * (x**3) * ((y_6)**61) + 
            L0x20019a38_f * (x**0) * ((y_6)**62) + 
            L0x20019a3a_f * (x**1) * ((y_6)**62) + 
            L0x20019a3c_f * (x**2) * ((y_6)**62) + 
            L0x20019a3e_f * (x**3) * ((y_6)**62) + 
            L0x20019a40_f * (x**0) * ((y_6)**63) + 
            L0x20019a42_f * (x**1) * ((y_6)**63) + 
            L0x20019a44_f * (x**2) * ((y_6)**63) + 
            L0x20019a46_f * (x**3) * ((y_6)**63)
          )
          [25570049, x**4 - y_0_54 * 9845387, y_0_54 - 1],
    (* inp_poly_55 *)
    eqmod (2**32) * (inp_poly_55 * inp_poly_55)
          (
            L0x20019848_f * (x**0) * ((y_6)**0) + 
            L0x2001984a_f * (x**1) * ((y_6)**0) + 
            L0x2001984c_f * (x**2) * ((y_6)**0) + 
            L0x2001984e_f * (x**3) * ((y_6)**0) + 
            L0x20019850_f * (x**0) * ((y_6)**1) + 
            L0x20019852_f * (x**1) * ((y_6)**1) + 
            L0x20019854_f * (x**2) * ((y_6)**1) + 
            L0x20019856_f * (x**3) * ((y_6)**1) + 
            L0x20019858_f * (x**0) * ((y_6)**2) + 
            L0x2001985a_f * (x**1) * ((y_6)**2) + 
            L0x2001985c_f * (x**2) * ((y_6)**2) + 
            L0x2001985e_f * (x**3) * ((y_6)**2) + 
            L0x20019860_f * (x**0) * ((y_6)**3) + 
            L0x20019862_f * (x**1) * ((y_6)**3) + 
            L0x20019864_f * (x**2) * ((y_6)**3) + 
            L0x20019866_f * (x**3) * ((y_6)**3) + 
            L0x20019868_f * (x**0) * ((y_6)**4) + 
            L0x2001986a_f * (x**1) * ((y_6)**4) + 
            L0x2001986c_f * (x**2) * ((y_6)**4) + 
            L0x2001986e_f * (x**3) * ((y_6)**4) + 
            L0x20019870_f * (x**0) * ((y_6)**5) + 
            L0x20019872_f * (x**1) * ((y_6)**5) + 
            L0x20019874_f * (x**2) * ((y_6)**5) + 
            L0x20019876_f * (x**3) * ((y_6)**5) + 
            L0x20019878_f * (x**0) * ((y_6)**6) + 
            L0x2001987a_f * (x**1) * ((y_6)**6) + 
            L0x2001987c_f * (x**2) * ((y_6)**6) + 
            L0x2001987e_f * (x**3) * ((y_6)**6) + 
            L0x20019880_f * (x**0) * ((y_6)**7) + 
            L0x20019882_f * (x**1) * ((y_6)**7) + 
            L0x20019884_f * (x**2) * ((y_6)**7) + 
            L0x20019886_f * (x**3) * ((y_6)**7) + 
            L0x20019888_f * (x**0) * ((y_6)**8) + 
            L0x2001988a_f * (x**1) * ((y_6)**8) + 
            L0x2001988c_f * (x**2) * ((y_6)**8) + 
            L0x2001988e_f * (x**3) * ((y_6)**8) + 
            L0x20019890_f * (x**0) * ((y_6)**9) + 
            L0x20019892_f * (x**1) * ((y_6)**9) + 
            L0x20019894_f * (x**2) * ((y_6)**9) + 
            L0x20019896_f * (x**3) * ((y_6)**9) + 
            L0x20019898_f * (x**0) * ((y_6)**10) + 
            L0x2001989a_f * (x**1) * ((y_6)**10) + 
            L0x2001989c_f * (x**2) * ((y_6)**10) + 
            L0x2001989e_f * (x**3) * ((y_6)**10) + 
            L0x200198a0_f * (x**0) * ((y_6)**11) + 
            L0x200198a2_f * (x**1) * ((y_6)**11) + 
            L0x200198a4_f * (x**2) * ((y_6)**11) + 
            L0x200198a6_f * (x**3) * ((y_6)**11) + 
            L0x200198a8_f * (x**0) * ((y_6)**12) + 
            L0x200198aa_f * (x**1) * ((y_6)**12) + 
            L0x200198ac_f * (x**2) * ((y_6)**12) + 
            L0x200198ae_f * (x**3) * ((y_6)**12) + 
            L0x200198b0_f * (x**0) * ((y_6)**13) + 
            L0x200198b2_f * (x**1) * ((y_6)**13) + 
            L0x200198b4_f * (x**2) * ((y_6)**13) + 
            L0x200198b6_f * (x**3) * ((y_6)**13) + 
            L0x200198b8_f * (x**0) * ((y_6)**14) + 
            L0x200198ba_f * (x**1) * ((y_6)**14) + 
            L0x200198bc_f * (x**2) * ((y_6)**14) + 
            L0x200198be_f * (x**3) * ((y_6)**14) + 
            L0x200198c0_f * (x**0) * ((y_6)**15) + 
            L0x200198c2_f * (x**1) * ((y_6)**15) + 
            L0x200198c4_f * (x**2) * ((y_6)**15) + 
            L0x200198c6_f * (x**3) * ((y_6)**15) + 
            L0x200198c8_f * (x**0) * ((y_6)**16) + 
            L0x200198ca_f * (x**1) * ((y_6)**16) + 
            L0x200198cc_f * (x**2) * ((y_6)**16) + 
            L0x200198ce_f * (x**3) * ((y_6)**16) + 
            L0x200198d0_f * (x**0) * ((y_6)**17) + 
            L0x200198d2_f * (x**1) * ((y_6)**17) + 
            L0x200198d4_f * (x**2) * ((y_6)**17) + 
            L0x200198d6_f * (x**3) * ((y_6)**17) + 
            L0x200198d8_f * (x**0) * ((y_6)**18) + 
            L0x200198da_f * (x**1) * ((y_6)**18) + 
            L0x200198dc_f * (x**2) * ((y_6)**18) + 
            L0x200198de_f * (x**3) * ((y_6)**18) + 
            L0x200198e0_f * (x**0) * ((y_6)**19) + 
            L0x200198e2_f * (x**1) * ((y_6)**19) + 
            L0x200198e4_f * (x**2) * ((y_6)**19) + 
            L0x200198e6_f * (x**3) * ((y_6)**19) + 
            L0x200198e8_f * (x**0) * ((y_6)**20) + 
            L0x200198ea_f * (x**1) * ((y_6)**20) + 
            L0x200198ec_f * (x**2) * ((y_6)**20) + 
            L0x200198ee_f * (x**3) * ((y_6)**20) + 
            L0x200198f0_f * (x**0) * ((y_6)**21) + 
            L0x200198f2_f * (x**1) * ((y_6)**21) + 
            L0x200198f4_f * (x**2) * ((y_6)**21) + 
            L0x200198f6_f * (x**3) * ((y_6)**21) + 
            L0x200198f8_f * (x**0) * ((y_6)**22) + 
            L0x200198fa_f * (x**1) * ((y_6)**22) + 
            L0x200198fc_f * (x**2) * ((y_6)**22) + 
            L0x200198fe_f * (x**3) * ((y_6)**22) + 
            L0x20019900_f * (x**0) * ((y_6)**23) + 
            L0x20019902_f * (x**1) * ((y_6)**23) + 
            L0x20019904_f * (x**2) * ((y_6)**23) + 
            L0x20019906_f * (x**3) * ((y_6)**23) + 
            L0x20019908_f * (x**0) * ((y_6)**24) + 
            L0x2001990a_f * (x**1) * ((y_6)**24) + 
            L0x2001990c_f * (x**2) * ((y_6)**24) + 
            L0x2001990e_f * (x**3) * ((y_6)**24) + 
            L0x20019910_f * (x**0) * ((y_6)**25) + 
            L0x20019912_f * (x**1) * ((y_6)**25) + 
            L0x20019914_f * (x**2) * ((y_6)**25) + 
            L0x20019916_f * (x**3) * ((y_6)**25) + 
            L0x20019918_f * (x**0) * ((y_6)**26) + 
            L0x2001991a_f * (x**1) * ((y_6)**26) + 
            L0x2001991c_f * (x**2) * ((y_6)**26) + 
            L0x2001991e_f * (x**3) * ((y_6)**26) + 
            L0x20019920_f * (x**0) * ((y_6)**27) + 
            L0x20019922_f * (x**1) * ((y_6)**27) + 
            L0x20019924_f * (x**2) * ((y_6)**27) + 
            L0x20019926_f * (x**3) * ((y_6)**27) + 
            L0x20019928_f * (x**0) * ((y_6)**28) + 
            L0x2001992a_f * (x**1) * ((y_6)**28) + 
            L0x2001992c_f * (x**2) * ((y_6)**28) + 
            L0x2001992e_f * (x**3) * ((y_6)**28) + 
            L0x20019930_f * (x**0) * ((y_6)**29) + 
            L0x20019932_f * (x**1) * ((y_6)**29) + 
            L0x20019934_f * (x**2) * ((y_6)**29) + 
            L0x20019936_f * (x**3) * ((y_6)**29) + 
            L0x20019938_f * (x**0) * ((y_6)**30) + 
            L0x2001993a_f * (x**1) * ((y_6)**30) + 
            L0x2001993c_f * (x**2) * ((y_6)**30) + 
            L0x2001993e_f * (x**3) * ((y_6)**30) + 
            L0x20019940_f * (x**0) * ((y_6)**31) + 
            L0x20019942_f * (x**1) * ((y_6)**31) + 
            L0x20019944_f * (x**2) * ((y_6)**31) + 
            L0x20019946_f * (x**3) * ((y_6)**31) + 
            L0x20019948_f * (x**0) * ((y_6)**32) + 
            L0x2001994a_f * (x**1) * ((y_6)**32) + 
            L0x2001994c_f * (x**2) * ((y_6)**32) + 
            L0x2001994e_f * (x**3) * ((y_6)**32) + 
            L0x20019950_f * (x**0) * ((y_6)**33) + 
            L0x20019952_f * (x**1) * ((y_6)**33) + 
            L0x20019954_f * (x**2) * ((y_6)**33) + 
            L0x20019956_f * (x**3) * ((y_6)**33) + 
            L0x20019958_f * (x**0) * ((y_6)**34) + 
            L0x2001995a_f * (x**1) * ((y_6)**34) + 
            L0x2001995c_f * (x**2) * ((y_6)**34) + 
            L0x2001995e_f * (x**3) * ((y_6)**34) + 
            L0x20019960_f * (x**0) * ((y_6)**35) + 
            L0x20019962_f * (x**1) * ((y_6)**35) + 
            L0x20019964_f * (x**2) * ((y_6)**35) + 
            L0x20019966_f * (x**3) * ((y_6)**35) + 
            L0x20019968_f * (x**0) * ((y_6)**36) + 
            L0x2001996a_f * (x**1) * ((y_6)**36) + 
            L0x2001996c_f * (x**2) * ((y_6)**36) + 
            L0x2001996e_f * (x**3) * ((y_6)**36) + 
            L0x20019970_f * (x**0) * ((y_6)**37) + 
            L0x20019972_f * (x**1) * ((y_6)**37) + 
            L0x20019974_f * (x**2) * ((y_6)**37) + 
            L0x20019976_f * (x**3) * ((y_6)**37) + 
            L0x20019978_f * (x**0) * ((y_6)**38) + 
            L0x2001997a_f * (x**1) * ((y_6)**38) + 
            L0x2001997c_f * (x**2) * ((y_6)**38) + 
            L0x2001997e_f * (x**3) * ((y_6)**38) + 
            L0x20019980_f * (x**0) * ((y_6)**39) + 
            L0x20019982_f * (x**1) * ((y_6)**39) + 
            L0x20019984_f * (x**2) * ((y_6)**39) + 
            L0x20019986_f * (x**3) * ((y_6)**39) + 
            L0x20019988_f * (x**0) * ((y_6)**40) + 
            L0x2001998a_f * (x**1) * ((y_6)**40) + 
            L0x2001998c_f * (x**2) * ((y_6)**40) + 
            L0x2001998e_f * (x**3) * ((y_6)**40) + 
            L0x20019990_f * (x**0) * ((y_6)**41) + 
            L0x20019992_f * (x**1) * ((y_6)**41) + 
            L0x20019994_f * (x**2) * ((y_6)**41) + 
            L0x20019996_f * (x**3) * ((y_6)**41) + 
            L0x20019998_f * (x**0) * ((y_6)**42) + 
            L0x2001999a_f * (x**1) * ((y_6)**42) + 
            L0x2001999c_f * (x**2) * ((y_6)**42) + 
            L0x2001999e_f * (x**3) * ((y_6)**42) + 
            L0x200199a0_f * (x**0) * ((y_6)**43) + 
            L0x200199a2_f * (x**1) * ((y_6)**43) + 
            L0x200199a4_f * (x**2) * ((y_6)**43) + 
            L0x200199a6_f * (x**3) * ((y_6)**43) + 
            L0x200199a8_f * (x**0) * ((y_6)**44) + 
            L0x200199aa_f * (x**1) * ((y_6)**44) + 
            L0x200199ac_f * (x**2) * ((y_6)**44) + 
            L0x200199ae_f * (x**3) * ((y_6)**44) + 
            L0x200199b0_f * (x**0) * ((y_6)**45) + 
            L0x200199b2_f * (x**1) * ((y_6)**45) + 
            L0x200199b4_f * (x**2) * ((y_6)**45) + 
            L0x200199b6_f * (x**3) * ((y_6)**45) + 
            L0x200199b8_f * (x**0) * ((y_6)**46) + 
            L0x200199ba_f * (x**1) * ((y_6)**46) + 
            L0x200199bc_f * (x**2) * ((y_6)**46) + 
            L0x200199be_f * (x**3) * ((y_6)**46) + 
            L0x200199c0_f * (x**0) * ((y_6)**47) + 
            L0x200199c2_f * (x**1) * ((y_6)**47) + 
            L0x200199c4_f * (x**2) * ((y_6)**47) + 
            L0x200199c6_f * (x**3) * ((y_6)**47) + 
            L0x200199c8_f * (x**0) * ((y_6)**48) + 
            L0x200199ca_f * (x**1) * ((y_6)**48) + 
            L0x200199cc_f * (x**2) * ((y_6)**48) + 
            L0x200199ce_f * (x**3) * ((y_6)**48) + 
            L0x200199d0_f * (x**0) * ((y_6)**49) + 
            L0x200199d2_f * (x**1) * ((y_6)**49) + 
            L0x200199d4_f * (x**2) * ((y_6)**49) + 
            L0x200199d6_f * (x**3) * ((y_6)**49) + 
            L0x200199d8_f * (x**0) * ((y_6)**50) + 
            L0x200199da_f * (x**1) * ((y_6)**50) + 
            L0x200199dc_f * (x**2) * ((y_6)**50) + 
            L0x200199de_f * (x**3) * ((y_6)**50) + 
            L0x200199e0_f * (x**0) * ((y_6)**51) + 
            L0x200199e2_f * (x**1) * ((y_6)**51) + 
            L0x200199e4_f * (x**2) * ((y_6)**51) + 
            L0x200199e6_f * (x**3) * ((y_6)**51) + 
            L0x200199e8_f * (x**0) * ((y_6)**52) + 
            L0x200199ea_f * (x**1) * ((y_6)**52) + 
            L0x200199ec_f * (x**2) * ((y_6)**52) + 
            L0x200199ee_f * (x**3) * ((y_6)**52) + 
            L0x200199f0_f * (x**0) * ((y_6)**53) + 
            L0x200199f2_f * (x**1) * ((y_6)**53) + 
            L0x200199f4_f * (x**2) * ((y_6)**53) + 
            L0x200199f6_f * (x**3) * ((y_6)**53) + 
            L0x200199f8_f * (x**0) * ((y_6)**54) + 
            L0x200199fa_f * (x**1) * ((y_6)**54) + 
            L0x200199fc_f * (x**2) * ((y_6)**54) + 
            L0x200199fe_f * (x**3) * ((y_6)**54) + 
            L0x20019a00_f * (x**0) * ((y_6)**55) + 
            L0x20019a02_f * (x**1) * ((y_6)**55) + 
            L0x20019a04_f * (x**2) * ((y_6)**55) + 
            L0x20019a06_f * (x**3) * ((y_6)**55) + 
            L0x20019a08_f * (x**0) * ((y_6)**56) + 
            L0x20019a0a_f * (x**1) * ((y_6)**56) + 
            L0x20019a0c_f * (x**2) * ((y_6)**56) + 
            L0x20019a0e_f * (x**3) * ((y_6)**56) + 
            L0x20019a10_f * (x**0) * ((y_6)**57) + 
            L0x20019a12_f * (x**1) * ((y_6)**57) + 
            L0x20019a14_f * (x**2) * ((y_6)**57) + 
            L0x20019a16_f * (x**3) * ((y_6)**57) + 
            L0x20019a18_f * (x**0) * ((y_6)**58) + 
            L0x20019a1a_f * (x**1) * ((y_6)**58) + 
            L0x20019a1c_f * (x**2) * ((y_6)**58) + 
            L0x20019a1e_f * (x**3) * ((y_6)**58) + 
            L0x20019a20_f * (x**0) * ((y_6)**59) + 
            L0x20019a22_f * (x**1) * ((y_6)**59) + 
            L0x20019a24_f * (x**2) * ((y_6)**59) + 
            L0x20019a26_f * (x**3) * ((y_6)**59) + 
            L0x20019a28_f * (x**0) * ((y_6)**60) + 
            L0x20019a2a_f * (x**1) * ((y_6)**60) + 
            L0x20019a2c_f * (x**2) * ((y_6)**60) + 
            L0x20019a2e_f * (x**3) * ((y_6)**60) + 
            L0x20019a30_f * (x**0) * ((y_6)**61) + 
            L0x20019a32_f * (x**1) * ((y_6)**61) + 
            L0x20019a34_f * (x**2) * ((y_6)**61) + 
            L0x20019a36_f * (x**3) * ((y_6)**61) + 
            L0x20019a38_f * (x**0) * ((y_6)**62) + 
            L0x20019a3a_f * (x**1) * ((y_6)**62) + 
            L0x20019a3c_f * (x**2) * ((y_6)**62) + 
            L0x20019a3e_f * (x**3) * ((y_6)**62) + 
            L0x20019a40_f * (x**0) * ((y_6)**63) + 
            L0x20019a42_f * (x**1) * ((y_6)**63) + 
            L0x20019a44_f * (x**2) * ((y_6)**63) + 
            L0x20019a46_f * (x**3) * ((y_6)**63)
          )
          [25570049, x**4 - y_0_55 * 15724662, y_0_55 - 1]
  ] prove with [cuts [14, 32], all ghosts]
  &&
  true
;

cut (* 51 *)
  true && true;

(* slice 7 *)
cut (* 52 *)
  and [
    (* inp_poly_56 *)
    eqmod (2**32) * (inp_poly_56 * inp_poly_56)
          (
            L0x20019848_f * (x**0) * ((y_6)**0) + 
            L0x2001984a_f * (x**1) * ((y_6)**0) + 
            L0x2001984c_f * (x**2) * ((y_6)**0) + 
            L0x2001984e_f * (x**3) * ((y_6)**0) + 
            L0x20019850_f * (x**0) * ((y_6)**1) + 
            L0x20019852_f * (x**1) * ((y_6)**1) + 
            L0x20019854_f * (x**2) * ((y_6)**1) + 
            L0x20019856_f * (x**3) * ((y_6)**1) + 
            L0x20019858_f * (x**0) * ((y_6)**2) + 
            L0x2001985a_f * (x**1) * ((y_6)**2) + 
            L0x2001985c_f * (x**2) * ((y_6)**2) + 
            L0x2001985e_f * (x**3) * ((y_6)**2) + 
            L0x20019860_f * (x**0) * ((y_6)**3) + 
            L0x20019862_f * (x**1) * ((y_6)**3) + 
            L0x20019864_f * (x**2) * ((y_6)**3) + 
            L0x20019866_f * (x**3) * ((y_6)**3) + 
            L0x20019868_f * (x**0) * ((y_6)**4) + 
            L0x2001986a_f * (x**1) * ((y_6)**4) + 
            L0x2001986c_f * (x**2) * ((y_6)**4) + 
            L0x2001986e_f * (x**3) * ((y_6)**4) + 
            L0x20019870_f * (x**0) * ((y_6)**5) + 
            L0x20019872_f * (x**1) * ((y_6)**5) + 
            L0x20019874_f * (x**2) * ((y_6)**5) + 
            L0x20019876_f * (x**3) * ((y_6)**5) + 
            L0x20019878_f * (x**0) * ((y_6)**6) + 
            L0x2001987a_f * (x**1) * ((y_6)**6) + 
            L0x2001987c_f * (x**2) * ((y_6)**6) + 
            L0x2001987e_f * (x**3) * ((y_6)**6) + 
            L0x20019880_f * (x**0) * ((y_6)**7) + 
            L0x20019882_f * (x**1) * ((y_6)**7) + 
            L0x20019884_f * (x**2) * ((y_6)**7) + 
            L0x20019886_f * (x**3) * ((y_6)**7) + 
            L0x20019888_f * (x**0) * ((y_6)**8) + 
            L0x2001988a_f * (x**1) * ((y_6)**8) + 
            L0x2001988c_f * (x**2) * ((y_6)**8) + 
            L0x2001988e_f * (x**3) * ((y_6)**8) + 
            L0x20019890_f * (x**0) * ((y_6)**9) + 
            L0x20019892_f * (x**1) * ((y_6)**9) + 
            L0x20019894_f * (x**2) * ((y_6)**9) + 
            L0x20019896_f * (x**3) * ((y_6)**9) + 
            L0x20019898_f * (x**0) * ((y_6)**10) + 
            L0x2001989a_f * (x**1) * ((y_6)**10) + 
            L0x2001989c_f * (x**2) * ((y_6)**10) + 
            L0x2001989e_f * (x**3) * ((y_6)**10) + 
            L0x200198a0_f * (x**0) * ((y_6)**11) + 
            L0x200198a2_f * (x**1) * ((y_6)**11) + 
            L0x200198a4_f * (x**2) * ((y_6)**11) + 
            L0x200198a6_f * (x**3) * ((y_6)**11) + 
            L0x200198a8_f * (x**0) * ((y_6)**12) + 
            L0x200198aa_f * (x**1) * ((y_6)**12) + 
            L0x200198ac_f * (x**2) * ((y_6)**12) + 
            L0x200198ae_f * (x**3) * ((y_6)**12) + 
            L0x200198b0_f * (x**0) * ((y_6)**13) + 
            L0x200198b2_f * (x**1) * ((y_6)**13) + 
            L0x200198b4_f * (x**2) * ((y_6)**13) + 
            L0x200198b6_f * (x**3) * ((y_6)**13) + 
            L0x200198b8_f * (x**0) * ((y_6)**14) + 
            L0x200198ba_f * (x**1) * ((y_6)**14) + 
            L0x200198bc_f * (x**2) * ((y_6)**14) + 
            L0x200198be_f * (x**3) * ((y_6)**14) + 
            L0x200198c0_f * (x**0) * ((y_6)**15) + 
            L0x200198c2_f * (x**1) * ((y_6)**15) + 
            L0x200198c4_f * (x**2) * ((y_6)**15) + 
            L0x200198c6_f * (x**3) * ((y_6)**15) + 
            L0x200198c8_f * (x**0) * ((y_6)**16) + 
            L0x200198ca_f * (x**1) * ((y_6)**16) + 
            L0x200198cc_f * (x**2) * ((y_6)**16) + 
            L0x200198ce_f * (x**3) * ((y_6)**16) + 
            L0x200198d0_f * (x**0) * ((y_6)**17) + 
            L0x200198d2_f * (x**1) * ((y_6)**17) + 
            L0x200198d4_f * (x**2) * ((y_6)**17) + 
            L0x200198d6_f * (x**3) * ((y_6)**17) + 
            L0x200198d8_f * (x**0) * ((y_6)**18) + 
            L0x200198da_f * (x**1) * ((y_6)**18) + 
            L0x200198dc_f * (x**2) * ((y_6)**18) + 
            L0x200198de_f * (x**3) * ((y_6)**18) + 
            L0x200198e0_f * (x**0) * ((y_6)**19) + 
            L0x200198e2_f * (x**1) * ((y_6)**19) + 
            L0x200198e4_f * (x**2) * ((y_6)**19) + 
            L0x200198e6_f * (x**3) * ((y_6)**19) + 
            L0x200198e8_f * (x**0) * ((y_6)**20) + 
            L0x200198ea_f * (x**1) * ((y_6)**20) + 
            L0x200198ec_f * (x**2) * ((y_6)**20) + 
            L0x200198ee_f * (x**3) * ((y_6)**20) + 
            L0x200198f0_f * (x**0) * ((y_6)**21) + 
            L0x200198f2_f * (x**1) * ((y_6)**21) + 
            L0x200198f4_f * (x**2) * ((y_6)**21) + 
            L0x200198f6_f * (x**3) * ((y_6)**21) + 
            L0x200198f8_f * (x**0) * ((y_6)**22) + 
            L0x200198fa_f * (x**1) * ((y_6)**22) + 
            L0x200198fc_f * (x**2) * ((y_6)**22) + 
            L0x200198fe_f * (x**3) * ((y_6)**22) + 
            L0x20019900_f * (x**0) * ((y_6)**23) + 
            L0x20019902_f * (x**1) * ((y_6)**23) + 
            L0x20019904_f * (x**2) * ((y_6)**23) + 
            L0x20019906_f * (x**3) * ((y_6)**23) + 
            L0x20019908_f * (x**0) * ((y_6)**24) + 
            L0x2001990a_f * (x**1) * ((y_6)**24) + 
            L0x2001990c_f * (x**2) * ((y_6)**24) + 
            L0x2001990e_f * (x**3) * ((y_6)**24) + 
            L0x20019910_f * (x**0) * ((y_6)**25) + 
            L0x20019912_f * (x**1) * ((y_6)**25) + 
            L0x20019914_f * (x**2) * ((y_6)**25) + 
            L0x20019916_f * (x**3) * ((y_6)**25) + 
            L0x20019918_f * (x**0) * ((y_6)**26) + 
            L0x2001991a_f * (x**1) * ((y_6)**26) + 
            L0x2001991c_f * (x**2) * ((y_6)**26) + 
            L0x2001991e_f * (x**3) * ((y_6)**26) + 
            L0x20019920_f * (x**0) * ((y_6)**27) + 
            L0x20019922_f * (x**1) * ((y_6)**27) + 
            L0x20019924_f * (x**2) * ((y_6)**27) + 
            L0x20019926_f * (x**3) * ((y_6)**27) + 
            L0x20019928_f * (x**0) * ((y_6)**28) + 
            L0x2001992a_f * (x**1) * ((y_6)**28) + 
            L0x2001992c_f * (x**2) * ((y_6)**28) + 
            L0x2001992e_f * (x**3) * ((y_6)**28) + 
            L0x20019930_f * (x**0) * ((y_6)**29) + 
            L0x20019932_f * (x**1) * ((y_6)**29) + 
            L0x20019934_f * (x**2) * ((y_6)**29) + 
            L0x20019936_f * (x**3) * ((y_6)**29) + 
            L0x20019938_f * (x**0) * ((y_6)**30) + 
            L0x2001993a_f * (x**1) * ((y_6)**30) + 
            L0x2001993c_f * (x**2) * ((y_6)**30) + 
            L0x2001993e_f * (x**3) * ((y_6)**30) + 
            L0x20019940_f * (x**0) * ((y_6)**31) + 
            L0x20019942_f * (x**1) * ((y_6)**31) + 
            L0x20019944_f * (x**2) * ((y_6)**31) + 
            L0x20019946_f * (x**3) * ((y_6)**31) + 
            L0x20019948_f * (x**0) * ((y_6)**32) + 
            L0x2001994a_f * (x**1) * ((y_6)**32) + 
            L0x2001994c_f * (x**2) * ((y_6)**32) + 
            L0x2001994e_f * (x**3) * ((y_6)**32) + 
            L0x20019950_f * (x**0) * ((y_6)**33) + 
            L0x20019952_f * (x**1) * ((y_6)**33) + 
            L0x20019954_f * (x**2) * ((y_6)**33) + 
            L0x20019956_f * (x**3) * ((y_6)**33) + 
            L0x20019958_f * (x**0) * ((y_6)**34) + 
            L0x2001995a_f * (x**1) * ((y_6)**34) + 
            L0x2001995c_f * (x**2) * ((y_6)**34) + 
            L0x2001995e_f * (x**3) * ((y_6)**34) + 
            L0x20019960_f * (x**0) * ((y_6)**35) + 
            L0x20019962_f * (x**1) * ((y_6)**35) + 
            L0x20019964_f * (x**2) * ((y_6)**35) + 
            L0x20019966_f * (x**3) * ((y_6)**35) + 
            L0x20019968_f * (x**0) * ((y_6)**36) + 
            L0x2001996a_f * (x**1) * ((y_6)**36) + 
            L0x2001996c_f * (x**2) * ((y_6)**36) + 
            L0x2001996e_f * (x**3) * ((y_6)**36) + 
            L0x20019970_f * (x**0) * ((y_6)**37) + 
            L0x20019972_f * (x**1) * ((y_6)**37) + 
            L0x20019974_f * (x**2) * ((y_6)**37) + 
            L0x20019976_f * (x**3) * ((y_6)**37) + 
            L0x20019978_f * (x**0) * ((y_6)**38) + 
            L0x2001997a_f * (x**1) * ((y_6)**38) + 
            L0x2001997c_f * (x**2) * ((y_6)**38) + 
            L0x2001997e_f * (x**3) * ((y_6)**38) + 
            L0x20019980_f * (x**0) * ((y_6)**39) + 
            L0x20019982_f * (x**1) * ((y_6)**39) + 
            L0x20019984_f * (x**2) * ((y_6)**39) + 
            L0x20019986_f * (x**3) * ((y_6)**39) + 
            L0x20019988_f * (x**0) * ((y_6)**40) + 
            L0x2001998a_f * (x**1) * ((y_6)**40) + 
            L0x2001998c_f * (x**2) * ((y_6)**40) + 
            L0x2001998e_f * (x**3) * ((y_6)**40) + 
            L0x20019990_f * (x**0) * ((y_6)**41) + 
            L0x20019992_f * (x**1) * ((y_6)**41) + 
            L0x20019994_f * (x**2) * ((y_6)**41) + 
            L0x20019996_f * (x**3) * ((y_6)**41) + 
            L0x20019998_f * (x**0) * ((y_6)**42) + 
            L0x2001999a_f * (x**1) * ((y_6)**42) + 
            L0x2001999c_f * (x**2) * ((y_6)**42) + 
            L0x2001999e_f * (x**3) * ((y_6)**42) + 
            L0x200199a0_f * (x**0) * ((y_6)**43) + 
            L0x200199a2_f * (x**1) * ((y_6)**43) + 
            L0x200199a4_f * (x**2) * ((y_6)**43) + 
            L0x200199a6_f * (x**3) * ((y_6)**43) + 
            L0x200199a8_f * (x**0) * ((y_6)**44) + 
            L0x200199aa_f * (x**1) * ((y_6)**44) + 
            L0x200199ac_f * (x**2) * ((y_6)**44) + 
            L0x200199ae_f * (x**3) * ((y_6)**44) + 
            L0x200199b0_f * (x**0) * ((y_6)**45) + 
            L0x200199b2_f * (x**1) * ((y_6)**45) + 
            L0x200199b4_f * (x**2) * ((y_6)**45) + 
            L0x200199b6_f * (x**3) * ((y_6)**45) + 
            L0x200199b8_f * (x**0) * ((y_6)**46) + 
            L0x200199ba_f * (x**1) * ((y_6)**46) + 
            L0x200199bc_f * (x**2) * ((y_6)**46) + 
            L0x200199be_f * (x**3) * ((y_6)**46) + 
            L0x200199c0_f * (x**0) * ((y_6)**47) + 
            L0x200199c2_f * (x**1) * ((y_6)**47) + 
            L0x200199c4_f * (x**2) * ((y_6)**47) + 
            L0x200199c6_f * (x**3) * ((y_6)**47) + 
            L0x200199c8_f * (x**0) * ((y_6)**48) + 
            L0x200199ca_f * (x**1) * ((y_6)**48) + 
            L0x200199cc_f * (x**2) * ((y_6)**48) + 
            L0x200199ce_f * (x**3) * ((y_6)**48) + 
            L0x200199d0_f * (x**0) * ((y_6)**49) + 
            L0x200199d2_f * (x**1) * ((y_6)**49) + 
            L0x200199d4_f * (x**2) * ((y_6)**49) + 
            L0x200199d6_f * (x**3) * ((y_6)**49) + 
            L0x200199d8_f * (x**0) * ((y_6)**50) + 
            L0x200199da_f * (x**1) * ((y_6)**50) + 
            L0x200199dc_f * (x**2) * ((y_6)**50) + 
            L0x200199de_f * (x**3) * ((y_6)**50) + 
            L0x200199e0_f * (x**0) * ((y_6)**51) + 
            L0x200199e2_f * (x**1) * ((y_6)**51) + 
            L0x200199e4_f * (x**2) * ((y_6)**51) + 
            L0x200199e6_f * (x**3) * ((y_6)**51) + 
            L0x200199e8_f * (x**0) * ((y_6)**52) + 
            L0x200199ea_f * (x**1) * ((y_6)**52) + 
            L0x200199ec_f * (x**2) * ((y_6)**52) + 
            L0x200199ee_f * (x**3) * ((y_6)**52) + 
            L0x200199f0_f * (x**0) * ((y_6)**53) + 
            L0x200199f2_f * (x**1) * ((y_6)**53) + 
            L0x200199f4_f * (x**2) * ((y_6)**53) + 
            L0x200199f6_f * (x**3) * ((y_6)**53) + 
            L0x200199f8_f * (x**0) * ((y_6)**54) + 
            L0x200199fa_f * (x**1) * ((y_6)**54) + 
            L0x200199fc_f * (x**2) * ((y_6)**54) + 
            L0x200199fe_f * (x**3) * ((y_6)**54) + 
            L0x20019a00_f * (x**0) * ((y_6)**55) + 
            L0x20019a02_f * (x**1) * ((y_6)**55) + 
            L0x20019a04_f * (x**2) * ((y_6)**55) + 
            L0x20019a06_f * (x**3) * ((y_6)**55) + 
            L0x20019a08_f * (x**0) * ((y_6)**56) + 
            L0x20019a0a_f * (x**1) * ((y_6)**56) + 
            L0x20019a0c_f * (x**2) * ((y_6)**56) + 
            L0x20019a0e_f * (x**3) * ((y_6)**56) + 
            L0x20019a10_f * (x**0) * ((y_6)**57) + 
            L0x20019a12_f * (x**1) * ((y_6)**57) + 
            L0x20019a14_f * (x**2) * ((y_6)**57) + 
            L0x20019a16_f * (x**3) * ((y_6)**57) + 
            L0x20019a18_f * (x**0) * ((y_6)**58) + 
            L0x20019a1a_f * (x**1) * ((y_6)**58) + 
            L0x20019a1c_f * (x**2) * ((y_6)**58) + 
            L0x20019a1e_f * (x**3) * ((y_6)**58) + 
            L0x20019a20_f * (x**0) * ((y_6)**59) + 
            L0x20019a22_f * (x**1) * ((y_6)**59) + 
            L0x20019a24_f * (x**2) * ((y_6)**59) + 
            L0x20019a26_f * (x**3) * ((y_6)**59) + 
            L0x20019a28_f * (x**0) * ((y_6)**60) + 
            L0x20019a2a_f * (x**1) * ((y_6)**60) + 
            L0x20019a2c_f * (x**2) * ((y_6)**60) + 
            L0x20019a2e_f * (x**3) * ((y_6)**60) + 
            L0x20019a30_f * (x**0) * ((y_6)**61) + 
            L0x20019a32_f * (x**1) * ((y_6)**61) + 
            L0x20019a34_f * (x**2) * ((y_6)**61) + 
            L0x20019a36_f * (x**3) * ((y_6)**61) + 
            L0x20019a38_f * (x**0) * ((y_6)**62) + 
            L0x20019a3a_f * (x**1) * ((y_6)**62) + 
            L0x20019a3c_f * (x**2) * ((y_6)**62) + 
            L0x20019a3e_f * (x**3) * ((y_6)**62) + 
            L0x20019a40_f * (x**0) * ((y_6)**63) + 
            L0x20019a42_f * (x**1) * ((y_6)**63) + 
            L0x20019a44_f * (x**2) * ((y_6)**63) + 
            L0x20019a46_f * (x**3) * ((y_6)**63)
          )
          [25570049, x**4 - y_0_56 * 6096206, y_0_56 - 1],
    (* inp_poly_57 *)
    eqmod (2**32) * (inp_poly_57 * inp_poly_57)
          (
            L0x20019848_f * (x**0) * ((y_6)**0) + 
            L0x2001984a_f * (x**1) * ((y_6)**0) + 
            L0x2001984c_f * (x**2) * ((y_6)**0) + 
            L0x2001984e_f * (x**3) * ((y_6)**0) + 
            L0x20019850_f * (x**0) * ((y_6)**1) + 
            L0x20019852_f * (x**1) * ((y_6)**1) + 
            L0x20019854_f * (x**2) * ((y_6)**1) + 
            L0x20019856_f * (x**3) * ((y_6)**1) + 
            L0x20019858_f * (x**0) * ((y_6)**2) + 
            L0x2001985a_f * (x**1) * ((y_6)**2) + 
            L0x2001985c_f * (x**2) * ((y_6)**2) + 
            L0x2001985e_f * (x**3) * ((y_6)**2) + 
            L0x20019860_f * (x**0) * ((y_6)**3) + 
            L0x20019862_f * (x**1) * ((y_6)**3) + 
            L0x20019864_f * (x**2) * ((y_6)**3) + 
            L0x20019866_f * (x**3) * ((y_6)**3) + 
            L0x20019868_f * (x**0) * ((y_6)**4) + 
            L0x2001986a_f * (x**1) * ((y_6)**4) + 
            L0x2001986c_f * (x**2) * ((y_6)**4) + 
            L0x2001986e_f * (x**3) * ((y_6)**4) + 
            L0x20019870_f * (x**0) * ((y_6)**5) + 
            L0x20019872_f * (x**1) * ((y_6)**5) + 
            L0x20019874_f * (x**2) * ((y_6)**5) + 
            L0x20019876_f * (x**3) * ((y_6)**5) + 
            L0x20019878_f * (x**0) * ((y_6)**6) + 
            L0x2001987a_f * (x**1) * ((y_6)**6) + 
            L0x2001987c_f * (x**2) * ((y_6)**6) + 
            L0x2001987e_f * (x**3) * ((y_6)**6) + 
            L0x20019880_f * (x**0) * ((y_6)**7) + 
            L0x20019882_f * (x**1) * ((y_6)**7) + 
            L0x20019884_f * (x**2) * ((y_6)**7) + 
            L0x20019886_f * (x**3) * ((y_6)**7) + 
            L0x20019888_f * (x**0) * ((y_6)**8) + 
            L0x2001988a_f * (x**1) * ((y_6)**8) + 
            L0x2001988c_f * (x**2) * ((y_6)**8) + 
            L0x2001988e_f * (x**3) * ((y_6)**8) + 
            L0x20019890_f * (x**0) * ((y_6)**9) + 
            L0x20019892_f * (x**1) * ((y_6)**9) + 
            L0x20019894_f * (x**2) * ((y_6)**9) + 
            L0x20019896_f * (x**3) * ((y_6)**9) + 
            L0x20019898_f * (x**0) * ((y_6)**10) + 
            L0x2001989a_f * (x**1) * ((y_6)**10) + 
            L0x2001989c_f * (x**2) * ((y_6)**10) + 
            L0x2001989e_f * (x**3) * ((y_6)**10) + 
            L0x200198a0_f * (x**0) * ((y_6)**11) + 
            L0x200198a2_f * (x**1) * ((y_6)**11) + 
            L0x200198a4_f * (x**2) * ((y_6)**11) + 
            L0x200198a6_f * (x**3) * ((y_6)**11) + 
            L0x200198a8_f * (x**0) * ((y_6)**12) + 
            L0x200198aa_f * (x**1) * ((y_6)**12) + 
            L0x200198ac_f * (x**2) * ((y_6)**12) + 
            L0x200198ae_f * (x**3) * ((y_6)**12) + 
            L0x200198b0_f * (x**0) * ((y_6)**13) + 
            L0x200198b2_f * (x**1) * ((y_6)**13) + 
            L0x200198b4_f * (x**2) * ((y_6)**13) + 
            L0x200198b6_f * (x**3) * ((y_6)**13) + 
            L0x200198b8_f * (x**0) * ((y_6)**14) + 
            L0x200198ba_f * (x**1) * ((y_6)**14) + 
            L0x200198bc_f * (x**2) * ((y_6)**14) + 
            L0x200198be_f * (x**3) * ((y_6)**14) + 
            L0x200198c0_f * (x**0) * ((y_6)**15) + 
            L0x200198c2_f * (x**1) * ((y_6)**15) + 
            L0x200198c4_f * (x**2) * ((y_6)**15) + 
            L0x200198c6_f * (x**3) * ((y_6)**15) + 
            L0x200198c8_f * (x**0) * ((y_6)**16) + 
            L0x200198ca_f * (x**1) * ((y_6)**16) + 
            L0x200198cc_f * (x**2) * ((y_6)**16) + 
            L0x200198ce_f * (x**3) * ((y_6)**16) + 
            L0x200198d0_f * (x**0) * ((y_6)**17) + 
            L0x200198d2_f * (x**1) * ((y_6)**17) + 
            L0x200198d4_f * (x**2) * ((y_6)**17) + 
            L0x200198d6_f * (x**3) * ((y_6)**17) + 
            L0x200198d8_f * (x**0) * ((y_6)**18) + 
            L0x200198da_f * (x**1) * ((y_6)**18) + 
            L0x200198dc_f * (x**2) * ((y_6)**18) + 
            L0x200198de_f * (x**3) * ((y_6)**18) + 
            L0x200198e0_f * (x**0) * ((y_6)**19) + 
            L0x200198e2_f * (x**1) * ((y_6)**19) + 
            L0x200198e4_f * (x**2) * ((y_6)**19) + 
            L0x200198e6_f * (x**3) * ((y_6)**19) + 
            L0x200198e8_f * (x**0) * ((y_6)**20) + 
            L0x200198ea_f * (x**1) * ((y_6)**20) + 
            L0x200198ec_f * (x**2) * ((y_6)**20) + 
            L0x200198ee_f * (x**3) * ((y_6)**20) + 
            L0x200198f0_f * (x**0) * ((y_6)**21) + 
            L0x200198f2_f * (x**1) * ((y_6)**21) + 
            L0x200198f4_f * (x**2) * ((y_6)**21) + 
            L0x200198f6_f * (x**3) * ((y_6)**21) + 
            L0x200198f8_f * (x**0) * ((y_6)**22) + 
            L0x200198fa_f * (x**1) * ((y_6)**22) + 
            L0x200198fc_f * (x**2) * ((y_6)**22) + 
            L0x200198fe_f * (x**3) * ((y_6)**22) + 
            L0x20019900_f * (x**0) * ((y_6)**23) + 
            L0x20019902_f * (x**1) * ((y_6)**23) + 
            L0x20019904_f * (x**2) * ((y_6)**23) + 
            L0x20019906_f * (x**3) * ((y_6)**23) + 
            L0x20019908_f * (x**0) * ((y_6)**24) + 
            L0x2001990a_f * (x**1) * ((y_6)**24) + 
            L0x2001990c_f * (x**2) * ((y_6)**24) + 
            L0x2001990e_f * (x**3) * ((y_6)**24) + 
            L0x20019910_f * (x**0) * ((y_6)**25) + 
            L0x20019912_f * (x**1) * ((y_6)**25) + 
            L0x20019914_f * (x**2) * ((y_6)**25) + 
            L0x20019916_f * (x**3) * ((y_6)**25) + 
            L0x20019918_f * (x**0) * ((y_6)**26) + 
            L0x2001991a_f * (x**1) * ((y_6)**26) + 
            L0x2001991c_f * (x**2) * ((y_6)**26) + 
            L0x2001991e_f * (x**3) * ((y_6)**26) + 
            L0x20019920_f * (x**0) * ((y_6)**27) + 
            L0x20019922_f * (x**1) * ((y_6)**27) + 
            L0x20019924_f * (x**2) * ((y_6)**27) + 
            L0x20019926_f * (x**3) * ((y_6)**27) + 
            L0x20019928_f * (x**0) * ((y_6)**28) + 
            L0x2001992a_f * (x**1) * ((y_6)**28) + 
            L0x2001992c_f * (x**2) * ((y_6)**28) + 
            L0x2001992e_f * (x**3) * ((y_6)**28) + 
            L0x20019930_f * (x**0) * ((y_6)**29) + 
            L0x20019932_f * (x**1) * ((y_6)**29) + 
            L0x20019934_f * (x**2) * ((y_6)**29) + 
            L0x20019936_f * (x**3) * ((y_6)**29) + 
            L0x20019938_f * (x**0) * ((y_6)**30) + 
            L0x2001993a_f * (x**1) * ((y_6)**30) + 
            L0x2001993c_f * (x**2) * ((y_6)**30) + 
            L0x2001993e_f * (x**3) * ((y_6)**30) + 
            L0x20019940_f * (x**0) * ((y_6)**31) + 
            L0x20019942_f * (x**1) * ((y_6)**31) + 
            L0x20019944_f * (x**2) * ((y_6)**31) + 
            L0x20019946_f * (x**3) * ((y_6)**31) + 
            L0x20019948_f * (x**0) * ((y_6)**32) + 
            L0x2001994a_f * (x**1) * ((y_6)**32) + 
            L0x2001994c_f * (x**2) * ((y_6)**32) + 
            L0x2001994e_f * (x**3) * ((y_6)**32) + 
            L0x20019950_f * (x**0) * ((y_6)**33) + 
            L0x20019952_f * (x**1) * ((y_6)**33) + 
            L0x20019954_f * (x**2) * ((y_6)**33) + 
            L0x20019956_f * (x**3) * ((y_6)**33) + 
            L0x20019958_f * (x**0) * ((y_6)**34) + 
            L0x2001995a_f * (x**1) * ((y_6)**34) + 
            L0x2001995c_f * (x**2) * ((y_6)**34) + 
            L0x2001995e_f * (x**3) * ((y_6)**34) + 
            L0x20019960_f * (x**0) * ((y_6)**35) + 
            L0x20019962_f * (x**1) * ((y_6)**35) + 
            L0x20019964_f * (x**2) * ((y_6)**35) + 
            L0x20019966_f * (x**3) * ((y_6)**35) + 
            L0x20019968_f * (x**0) * ((y_6)**36) + 
            L0x2001996a_f * (x**1) * ((y_6)**36) + 
            L0x2001996c_f * (x**2) * ((y_6)**36) + 
            L0x2001996e_f * (x**3) * ((y_6)**36) + 
            L0x20019970_f * (x**0) * ((y_6)**37) + 
            L0x20019972_f * (x**1) * ((y_6)**37) + 
            L0x20019974_f * (x**2) * ((y_6)**37) + 
            L0x20019976_f * (x**3) * ((y_6)**37) + 
            L0x20019978_f * (x**0) * ((y_6)**38) + 
            L0x2001997a_f * (x**1) * ((y_6)**38) + 
            L0x2001997c_f * (x**2) * ((y_6)**38) + 
            L0x2001997e_f * (x**3) * ((y_6)**38) + 
            L0x20019980_f * (x**0) * ((y_6)**39) + 
            L0x20019982_f * (x**1) * ((y_6)**39) + 
            L0x20019984_f * (x**2) * ((y_6)**39) + 
            L0x20019986_f * (x**3) * ((y_6)**39) + 
            L0x20019988_f * (x**0) * ((y_6)**40) + 
            L0x2001998a_f * (x**1) * ((y_6)**40) + 
            L0x2001998c_f * (x**2) * ((y_6)**40) + 
            L0x2001998e_f * (x**3) * ((y_6)**40) + 
            L0x20019990_f * (x**0) * ((y_6)**41) + 
            L0x20019992_f * (x**1) * ((y_6)**41) + 
            L0x20019994_f * (x**2) * ((y_6)**41) + 
            L0x20019996_f * (x**3) * ((y_6)**41) + 
            L0x20019998_f * (x**0) * ((y_6)**42) + 
            L0x2001999a_f * (x**1) * ((y_6)**42) + 
            L0x2001999c_f * (x**2) * ((y_6)**42) + 
            L0x2001999e_f * (x**3) * ((y_6)**42) + 
            L0x200199a0_f * (x**0) * ((y_6)**43) + 
            L0x200199a2_f * (x**1) * ((y_6)**43) + 
            L0x200199a4_f * (x**2) * ((y_6)**43) + 
            L0x200199a6_f * (x**3) * ((y_6)**43) + 
            L0x200199a8_f * (x**0) * ((y_6)**44) + 
            L0x200199aa_f * (x**1) * ((y_6)**44) + 
            L0x200199ac_f * (x**2) * ((y_6)**44) + 
            L0x200199ae_f * (x**3) * ((y_6)**44) + 
            L0x200199b0_f * (x**0) * ((y_6)**45) + 
            L0x200199b2_f * (x**1) * ((y_6)**45) + 
            L0x200199b4_f * (x**2) * ((y_6)**45) + 
            L0x200199b6_f * (x**3) * ((y_6)**45) + 
            L0x200199b8_f * (x**0) * ((y_6)**46) + 
            L0x200199ba_f * (x**1) * ((y_6)**46) + 
            L0x200199bc_f * (x**2) * ((y_6)**46) + 
            L0x200199be_f * (x**3) * ((y_6)**46) + 
            L0x200199c0_f * (x**0) * ((y_6)**47) + 
            L0x200199c2_f * (x**1) * ((y_6)**47) + 
            L0x200199c4_f * (x**2) * ((y_6)**47) + 
            L0x200199c6_f * (x**3) * ((y_6)**47) + 
            L0x200199c8_f * (x**0) * ((y_6)**48) + 
            L0x200199ca_f * (x**1) * ((y_6)**48) + 
            L0x200199cc_f * (x**2) * ((y_6)**48) + 
            L0x200199ce_f * (x**3) * ((y_6)**48) + 
            L0x200199d0_f * (x**0) * ((y_6)**49) + 
            L0x200199d2_f * (x**1) * ((y_6)**49) + 
            L0x200199d4_f * (x**2) * ((y_6)**49) + 
            L0x200199d6_f * (x**3) * ((y_6)**49) + 
            L0x200199d8_f * (x**0) * ((y_6)**50) + 
            L0x200199da_f * (x**1) * ((y_6)**50) + 
            L0x200199dc_f * (x**2) * ((y_6)**50) + 
            L0x200199de_f * (x**3) * ((y_6)**50) + 
            L0x200199e0_f * (x**0) * ((y_6)**51) + 
            L0x200199e2_f * (x**1) * ((y_6)**51) + 
            L0x200199e4_f * (x**2) * ((y_6)**51) + 
            L0x200199e6_f * (x**3) * ((y_6)**51) + 
            L0x200199e8_f * (x**0) * ((y_6)**52) + 
            L0x200199ea_f * (x**1) * ((y_6)**52) + 
            L0x200199ec_f * (x**2) * ((y_6)**52) + 
            L0x200199ee_f * (x**3) * ((y_6)**52) + 
            L0x200199f0_f * (x**0) * ((y_6)**53) + 
            L0x200199f2_f * (x**1) * ((y_6)**53) + 
            L0x200199f4_f * (x**2) * ((y_6)**53) + 
            L0x200199f6_f * (x**3) * ((y_6)**53) + 
            L0x200199f8_f * (x**0) * ((y_6)**54) + 
            L0x200199fa_f * (x**1) * ((y_6)**54) + 
            L0x200199fc_f * (x**2) * ((y_6)**54) + 
            L0x200199fe_f * (x**3) * ((y_6)**54) + 
            L0x20019a00_f * (x**0) * ((y_6)**55) + 
            L0x20019a02_f * (x**1) * ((y_6)**55) + 
            L0x20019a04_f * (x**2) * ((y_6)**55) + 
            L0x20019a06_f * (x**3) * ((y_6)**55) + 
            L0x20019a08_f * (x**0) * ((y_6)**56) + 
            L0x20019a0a_f * (x**1) * ((y_6)**56) + 
            L0x20019a0c_f * (x**2) * ((y_6)**56) + 
            L0x20019a0e_f * (x**3) * ((y_6)**56) + 
            L0x20019a10_f * (x**0) * ((y_6)**57) + 
            L0x20019a12_f * (x**1) * ((y_6)**57) + 
            L0x20019a14_f * (x**2) * ((y_6)**57) + 
            L0x20019a16_f * (x**3) * ((y_6)**57) + 
            L0x20019a18_f * (x**0) * ((y_6)**58) + 
            L0x20019a1a_f * (x**1) * ((y_6)**58) + 
            L0x20019a1c_f * (x**2) * ((y_6)**58) + 
            L0x20019a1e_f * (x**3) * ((y_6)**58) + 
            L0x20019a20_f * (x**0) * ((y_6)**59) + 
            L0x20019a22_f * (x**1) * ((y_6)**59) + 
            L0x20019a24_f * (x**2) * ((y_6)**59) + 
            L0x20019a26_f * (x**3) * ((y_6)**59) + 
            L0x20019a28_f * (x**0) * ((y_6)**60) + 
            L0x20019a2a_f * (x**1) * ((y_6)**60) + 
            L0x20019a2c_f * (x**2) * ((y_6)**60) + 
            L0x20019a2e_f * (x**3) * ((y_6)**60) + 
            L0x20019a30_f * (x**0) * ((y_6)**61) + 
            L0x20019a32_f * (x**1) * ((y_6)**61) + 
            L0x20019a34_f * (x**2) * ((y_6)**61) + 
            L0x20019a36_f * (x**3) * ((y_6)**61) + 
            L0x20019a38_f * (x**0) * ((y_6)**62) + 
            L0x20019a3a_f * (x**1) * ((y_6)**62) + 
            L0x20019a3c_f * (x**2) * ((y_6)**62) + 
            L0x20019a3e_f * (x**3) * ((y_6)**62) + 
            L0x20019a40_f * (x**0) * ((y_6)**63) + 
            L0x20019a42_f * (x**1) * ((y_6)**63) + 
            L0x20019a44_f * (x**2) * ((y_6)**63) + 
            L0x20019a46_f * (x**3) * ((y_6)**63)
          )
          [25570049, x**4 - y_0_57 * 19473843, y_0_57 - 1],
    (* inp_poly_58 *)
    eqmod (2**32) * (inp_poly_58 * inp_poly_58)
          (
            L0x20019848_f * (x**0) * ((y_6)**0) + 
            L0x2001984a_f * (x**1) * ((y_6)**0) + 
            L0x2001984c_f * (x**2) * ((y_6)**0) + 
            L0x2001984e_f * (x**3) * ((y_6)**0) + 
            L0x20019850_f * (x**0) * ((y_6)**1) + 
            L0x20019852_f * (x**1) * ((y_6)**1) + 
            L0x20019854_f * (x**2) * ((y_6)**1) + 
            L0x20019856_f * (x**3) * ((y_6)**1) + 
            L0x20019858_f * (x**0) * ((y_6)**2) + 
            L0x2001985a_f * (x**1) * ((y_6)**2) + 
            L0x2001985c_f * (x**2) * ((y_6)**2) + 
            L0x2001985e_f * (x**3) * ((y_6)**2) + 
            L0x20019860_f * (x**0) * ((y_6)**3) + 
            L0x20019862_f * (x**1) * ((y_6)**3) + 
            L0x20019864_f * (x**2) * ((y_6)**3) + 
            L0x20019866_f * (x**3) * ((y_6)**3) + 
            L0x20019868_f * (x**0) * ((y_6)**4) + 
            L0x2001986a_f * (x**1) * ((y_6)**4) + 
            L0x2001986c_f * (x**2) * ((y_6)**4) + 
            L0x2001986e_f * (x**3) * ((y_6)**4) + 
            L0x20019870_f * (x**0) * ((y_6)**5) + 
            L0x20019872_f * (x**1) * ((y_6)**5) + 
            L0x20019874_f * (x**2) * ((y_6)**5) + 
            L0x20019876_f * (x**3) * ((y_6)**5) + 
            L0x20019878_f * (x**0) * ((y_6)**6) + 
            L0x2001987a_f * (x**1) * ((y_6)**6) + 
            L0x2001987c_f * (x**2) * ((y_6)**6) + 
            L0x2001987e_f * (x**3) * ((y_6)**6) + 
            L0x20019880_f * (x**0) * ((y_6)**7) + 
            L0x20019882_f * (x**1) * ((y_6)**7) + 
            L0x20019884_f * (x**2) * ((y_6)**7) + 
            L0x20019886_f * (x**3) * ((y_6)**7) + 
            L0x20019888_f * (x**0) * ((y_6)**8) + 
            L0x2001988a_f * (x**1) * ((y_6)**8) + 
            L0x2001988c_f * (x**2) * ((y_6)**8) + 
            L0x2001988e_f * (x**3) * ((y_6)**8) + 
            L0x20019890_f * (x**0) * ((y_6)**9) + 
            L0x20019892_f * (x**1) * ((y_6)**9) + 
            L0x20019894_f * (x**2) * ((y_6)**9) + 
            L0x20019896_f * (x**3) * ((y_6)**9) + 
            L0x20019898_f * (x**0) * ((y_6)**10) + 
            L0x2001989a_f * (x**1) * ((y_6)**10) + 
            L0x2001989c_f * (x**2) * ((y_6)**10) + 
            L0x2001989e_f * (x**3) * ((y_6)**10) + 
            L0x200198a0_f * (x**0) * ((y_6)**11) + 
            L0x200198a2_f * (x**1) * ((y_6)**11) + 
            L0x200198a4_f * (x**2) * ((y_6)**11) + 
            L0x200198a6_f * (x**3) * ((y_6)**11) + 
            L0x200198a8_f * (x**0) * ((y_6)**12) + 
            L0x200198aa_f * (x**1) * ((y_6)**12) + 
            L0x200198ac_f * (x**2) * ((y_6)**12) + 
            L0x200198ae_f * (x**3) * ((y_6)**12) + 
            L0x200198b0_f * (x**0) * ((y_6)**13) + 
            L0x200198b2_f * (x**1) * ((y_6)**13) + 
            L0x200198b4_f * (x**2) * ((y_6)**13) + 
            L0x200198b6_f * (x**3) * ((y_6)**13) + 
            L0x200198b8_f * (x**0) * ((y_6)**14) + 
            L0x200198ba_f * (x**1) * ((y_6)**14) + 
            L0x200198bc_f * (x**2) * ((y_6)**14) + 
            L0x200198be_f * (x**3) * ((y_6)**14) + 
            L0x200198c0_f * (x**0) * ((y_6)**15) + 
            L0x200198c2_f * (x**1) * ((y_6)**15) + 
            L0x200198c4_f * (x**2) * ((y_6)**15) + 
            L0x200198c6_f * (x**3) * ((y_6)**15) + 
            L0x200198c8_f * (x**0) * ((y_6)**16) + 
            L0x200198ca_f * (x**1) * ((y_6)**16) + 
            L0x200198cc_f * (x**2) * ((y_6)**16) + 
            L0x200198ce_f * (x**3) * ((y_6)**16) + 
            L0x200198d0_f * (x**0) * ((y_6)**17) + 
            L0x200198d2_f * (x**1) * ((y_6)**17) + 
            L0x200198d4_f * (x**2) * ((y_6)**17) + 
            L0x200198d6_f * (x**3) * ((y_6)**17) + 
            L0x200198d8_f * (x**0) * ((y_6)**18) + 
            L0x200198da_f * (x**1) * ((y_6)**18) + 
            L0x200198dc_f * (x**2) * ((y_6)**18) + 
            L0x200198de_f * (x**3) * ((y_6)**18) + 
            L0x200198e0_f * (x**0) * ((y_6)**19) + 
            L0x200198e2_f * (x**1) * ((y_6)**19) + 
            L0x200198e4_f * (x**2) * ((y_6)**19) + 
            L0x200198e6_f * (x**3) * ((y_6)**19) + 
            L0x200198e8_f * (x**0) * ((y_6)**20) + 
            L0x200198ea_f * (x**1) * ((y_6)**20) + 
            L0x200198ec_f * (x**2) * ((y_6)**20) + 
            L0x200198ee_f * (x**3) * ((y_6)**20) + 
            L0x200198f0_f * (x**0) * ((y_6)**21) + 
            L0x200198f2_f * (x**1) * ((y_6)**21) + 
            L0x200198f4_f * (x**2) * ((y_6)**21) + 
            L0x200198f6_f * (x**3) * ((y_6)**21) + 
            L0x200198f8_f * (x**0) * ((y_6)**22) + 
            L0x200198fa_f * (x**1) * ((y_6)**22) + 
            L0x200198fc_f * (x**2) * ((y_6)**22) + 
            L0x200198fe_f * (x**3) * ((y_6)**22) + 
            L0x20019900_f * (x**0) * ((y_6)**23) + 
            L0x20019902_f * (x**1) * ((y_6)**23) + 
            L0x20019904_f * (x**2) * ((y_6)**23) + 
            L0x20019906_f * (x**3) * ((y_6)**23) + 
            L0x20019908_f * (x**0) * ((y_6)**24) + 
            L0x2001990a_f * (x**1) * ((y_6)**24) + 
            L0x2001990c_f * (x**2) * ((y_6)**24) + 
            L0x2001990e_f * (x**3) * ((y_6)**24) + 
            L0x20019910_f * (x**0) * ((y_6)**25) + 
            L0x20019912_f * (x**1) * ((y_6)**25) + 
            L0x20019914_f * (x**2) * ((y_6)**25) + 
            L0x20019916_f * (x**3) * ((y_6)**25) + 
            L0x20019918_f * (x**0) * ((y_6)**26) + 
            L0x2001991a_f * (x**1) * ((y_6)**26) + 
            L0x2001991c_f * (x**2) * ((y_6)**26) + 
            L0x2001991e_f * (x**3) * ((y_6)**26) + 
            L0x20019920_f * (x**0) * ((y_6)**27) + 
            L0x20019922_f * (x**1) * ((y_6)**27) + 
            L0x20019924_f * (x**2) * ((y_6)**27) + 
            L0x20019926_f * (x**3) * ((y_6)**27) + 
            L0x20019928_f * (x**0) * ((y_6)**28) + 
            L0x2001992a_f * (x**1) * ((y_6)**28) + 
            L0x2001992c_f * (x**2) * ((y_6)**28) + 
            L0x2001992e_f * (x**3) * ((y_6)**28) + 
            L0x20019930_f * (x**0) * ((y_6)**29) + 
            L0x20019932_f * (x**1) * ((y_6)**29) + 
            L0x20019934_f * (x**2) * ((y_6)**29) + 
            L0x20019936_f * (x**3) * ((y_6)**29) + 
            L0x20019938_f * (x**0) * ((y_6)**30) + 
            L0x2001993a_f * (x**1) * ((y_6)**30) + 
            L0x2001993c_f * (x**2) * ((y_6)**30) + 
            L0x2001993e_f * (x**3) * ((y_6)**30) + 
            L0x20019940_f * (x**0) * ((y_6)**31) + 
            L0x20019942_f * (x**1) * ((y_6)**31) + 
            L0x20019944_f * (x**2) * ((y_6)**31) + 
            L0x20019946_f * (x**3) * ((y_6)**31) + 
            L0x20019948_f * (x**0) * ((y_6)**32) + 
            L0x2001994a_f * (x**1) * ((y_6)**32) + 
            L0x2001994c_f * (x**2) * ((y_6)**32) + 
            L0x2001994e_f * (x**3) * ((y_6)**32) + 
            L0x20019950_f * (x**0) * ((y_6)**33) + 
            L0x20019952_f * (x**1) * ((y_6)**33) + 
            L0x20019954_f * (x**2) * ((y_6)**33) + 
            L0x20019956_f * (x**3) * ((y_6)**33) + 
            L0x20019958_f * (x**0) * ((y_6)**34) + 
            L0x2001995a_f * (x**1) * ((y_6)**34) + 
            L0x2001995c_f * (x**2) * ((y_6)**34) + 
            L0x2001995e_f * (x**3) * ((y_6)**34) + 
            L0x20019960_f * (x**0) * ((y_6)**35) + 
            L0x20019962_f * (x**1) * ((y_6)**35) + 
            L0x20019964_f * (x**2) * ((y_6)**35) + 
            L0x20019966_f * (x**3) * ((y_6)**35) + 
            L0x20019968_f * (x**0) * ((y_6)**36) + 
            L0x2001996a_f * (x**1) * ((y_6)**36) + 
            L0x2001996c_f * (x**2) * ((y_6)**36) + 
            L0x2001996e_f * (x**3) * ((y_6)**36) + 
            L0x20019970_f * (x**0) * ((y_6)**37) + 
            L0x20019972_f * (x**1) * ((y_6)**37) + 
            L0x20019974_f * (x**2) * ((y_6)**37) + 
            L0x20019976_f * (x**3) * ((y_6)**37) + 
            L0x20019978_f * (x**0) * ((y_6)**38) + 
            L0x2001997a_f * (x**1) * ((y_6)**38) + 
            L0x2001997c_f * (x**2) * ((y_6)**38) + 
            L0x2001997e_f * (x**3) * ((y_6)**38) + 
            L0x20019980_f * (x**0) * ((y_6)**39) + 
            L0x20019982_f * (x**1) * ((y_6)**39) + 
            L0x20019984_f * (x**2) * ((y_6)**39) + 
            L0x20019986_f * (x**3) * ((y_6)**39) + 
            L0x20019988_f * (x**0) * ((y_6)**40) + 
            L0x2001998a_f * (x**1) * ((y_6)**40) + 
            L0x2001998c_f * (x**2) * ((y_6)**40) + 
            L0x2001998e_f * (x**3) * ((y_6)**40) + 
            L0x20019990_f * (x**0) * ((y_6)**41) + 
            L0x20019992_f * (x**1) * ((y_6)**41) + 
            L0x20019994_f * (x**2) * ((y_6)**41) + 
            L0x20019996_f * (x**3) * ((y_6)**41) + 
            L0x20019998_f * (x**0) * ((y_6)**42) + 
            L0x2001999a_f * (x**1) * ((y_6)**42) + 
            L0x2001999c_f * (x**2) * ((y_6)**42) + 
            L0x2001999e_f * (x**3) * ((y_6)**42) + 
            L0x200199a0_f * (x**0) * ((y_6)**43) + 
            L0x200199a2_f * (x**1) * ((y_6)**43) + 
            L0x200199a4_f * (x**2) * ((y_6)**43) + 
            L0x200199a6_f * (x**3) * ((y_6)**43) + 
            L0x200199a8_f * (x**0) * ((y_6)**44) + 
            L0x200199aa_f * (x**1) * ((y_6)**44) + 
            L0x200199ac_f * (x**2) * ((y_6)**44) + 
            L0x200199ae_f * (x**3) * ((y_6)**44) + 
            L0x200199b0_f * (x**0) * ((y_6)**45) + 
            L0x200199b2_f * (x**1) * ((y_6)**45) + 
            L0x200199b4_f * (x**2) * ((y_6)**45) + 
            L0x200199b6_f * (x**3) * ((y_6)**45) + 
            L0x200199b8_f * (x**0) * ((y_6)**46) + 
            L0x200199ba_f * (x**1) * ((y_6)**46) + 
            L0x200199bc_f * (x**2) * ((y_6)**46) + 
            L0x200199be_f * (x**3) * ((y_6)**46) + 
            L0x200199c0_f * (x**0) * ((y_6)**47) + 
            L0x200199c2_f * (x**1) * ((y_6)**47) + 
            L0x200199c4_f * (x**2) * ((y_6)**47) + 
            L0x200199c6_f * (x**3) * ((y_6)**47) + 
            L0x200199c8_f * (x**0) * ((y_6)**48) + 
            L0x200199ca_f * (x**1) * ((y_6)**48) + 
            L0x200199cc_f * (x**2) * ((y_6)**48) + 
            L0x200199ce_f * (x**3) * ((y_6)**48) + 
            L0x200199d0_f * (x**0) * ((y_6)**49) + 
            L0x200199d2_f * (x**1) * ((y_6)**49) + 
            L0x200199d4_f * (x**2) * ((y_6)**49) + 
            L0x200199d6_f * (x**3) * ((y_6)**49) + 
            L0x200199d8_f * (x**0) * ((y_6)**50) + 
            L0x200199da_f * (x**1) * ((y_6)**50) + 
            L0x200199dc_f * (x**2) * ((y_6)**50) + 
            L0x200199de_f * (x**3) * ((y_6)**50) + 
            L0x200199e0_f * (x**0) * ((y_6)**51) + 
            L0x200199e2_f * (x**1) * ((y_6)**51) + 
            L0x200199e4_f * (x**2) * ((y_6)**51) + 
            L0x200199e6_f * (x**3) * ((y_6)**51) + 
            L0x200199e8_f * (x**0) * ((y_6)**52) + 
            L0x200199ea_f * (x**1) * ((y_6)**52) + 
            L0x200199ec_f * (x**2) * ((y_6)**52) + 
            L0x200199ee_f * (x**3) * ((y_6)**52) + 
            L0x200199f0_f * (x**0) * ((y_6)**53) + 
            L0x200199f2_f * (x**1) * ((y_6)**53) + 
            L0x200199f4_f * (x**2) * ((y_6)**53) + 
            L0x200199f6_f * (x**3) * ((y_6)**53) + 
            L0x200199f8_f * (x**0) * ((y_6)**54) + 
            L0x200199fa_f * (x**1) * ((y_6)**54) + 
            L0x200199fc_f * (x**2) * ((y_6)**54) + 
            L0x200199fe_f * (x**3) * ((y_6)**54) + 
            L0x20019a00_f * (x**0) * ((y_6)**55) + 
            L0x20019a02_f * (x**1) * ((y_6)**55) + 
            L0x20019a04_f * (x**2) * ((y_6)**55) + 
            L0x20019a06_f * (x**3) * ((y_6)**55) + 
            L0x20019a08_f * (x**0) * ((y_6)**56) + 
            L0x20019a0a_f * (x**1) * ((y_6)**56) + 
            L0x20019a0c_f * (x**2) * ((y_6)**56) + 
            L0x20019a0e_f * (x**3) * ((y_6)**56) + 
            L0x20019a10_f * (x**0) * ((y_6)**57) + 
            L0x20019a12_f * (x**1) * ((y_6)**57) + 
            L0x20019a14_f * (x**2) * ((y_6)**57) + 
            L0x20019a16_f * (x**3) * ((y_6)**57) + 
            L0x20019a18_f * (x**0) * ((y_6)**58) + 
            L0x20019a1a_f * (x**1) * ((y_6)**58) + 
            L0x20019a1c_f * (x**2) * ((y_6)**58) + 
            L0x20019a1e_f * (x**3) * ((y_6)**58) + 
            L0x20019a20_f * (x**0) * ((y_6)**59) + 
            L0x20019a22_f * (x**1) * ((y_6)**59) + 
            L0x20019a24_f * (x**2) * ((y_6)**59) + 
            L0x20019a26_f * (x**3) * ((y_6)**59) + 
            L0x20019a28_f * (x**0) * ((y_6)**60) + 
            L0x20019a2a_f * (x**1) * ((y_6)**60) + 
            L0x20019a2c_f * (x**2) * ((y_6)**60) + 
            L0x20019a2e_f * (x**3) * ((y_6)**60) + 
            L0x20019a30_f * (x**0) * ((y_6)**61) + 
            L0x20019a32_f * (x**1) * ((y_6)**61) + 
            L0x20019a34_f * (x**2) * ((y_6)**61) + 
            L0x20019a36_f * (x**3) * ((y_6)**61) + 
            L0x20019a38_f * (x**0) * ((y_6)**62) + 
            L0x20019a3a_f * (x**1) * ((y_6)**62) + 
            L0x20019a3c_f * (x**2) * ((y_6)**62) + 
            L0x20019a3e_f * (x**3) * ((y_6)**62) + 
            L0x20019a40_f * (x**0) * ((y_6)**63) + 
            L0x20019a42_f * (x**1) * ((y_6)**63) + 
            L0x20019a44_f * (x**2) * ((y_6)**63) + 
            L0x20019a46_f * (x**3) * ((y_6)**63)
          )
          [25570049, x**4 - y_0_58 * 8645865, y_0_58 - 1],
    (* inp_poly_59 *)
    eqmod (2**32) * (inp_poly_59 * inp_poly_59)
          (
            L0x20019848_f * (x**0) * ((y_6)**0) + 
            L0x2001984a_f * (x**1) * ((y_6)**0) + 
            L0x2001984c_f * (x**2) * ((y_6)**0) + 
            L0x2001984e_f * (x**3) * ((y_6)**0) + 
            L0x20019850_f * (x**0) * ((y_6)**1) + 
            L0x20019852_f * (x**1) * ((y_6)**1) + 
            L0x20019854_f * (x**2) * ((y_6)**1) + 
            L0x20019856_f * (x**3) * ((y_6)**1) + 
            L0x20019858_f * (x**0) * ((y_6)**2) + 
            L0x2001985a_f * (x**1) * ((y_6)**2) + 
            L0x2001985c_f * (x**2) * ((y_6)**2) + 
            L0x2001985e_f * (x**3) * ((y_6)**2) + 
            L0x20019860_f * (x**0) * ((y_6)**3) + 
            L0x20019862_f * (x**1) * ((y_6)**3) + 
            L0x20019864_f * (x**2) * ((y_6)**3) + 
            L0x20019866_f * (x**3) * ((y_6)**3) + 
            L0x20019868_f * (x**0) * ((y_6)**4) + 
            L0x2001986a_f * (x**1) * ((y_6)**4) + 
            L0x2001986c_f * (x**2) * ((y_6)**4) + 
            L0x2001986e_f * (x**3) * ((y_6)**4) + 
            L0x20019870_f * (x**0) * ((y_6)**5) + 
            L0x20019872_f * (x**1) * ((y_6)**5) + 
            L0x20019874_f * (x**2) * ((y_6)**5) + 
            L0x20019876_f * (x**3) * ((y_6)**5) + 
            L0x20019878_f * (x**0) * ((y_6)**6) + 
            L0x2001987a_f * (x**1) * ((y_6)**6) + 
            L0x2001987c_f * (x**2) * ((y_6)**6) + 
            L0x2001987e_f * (x**3) * ((y_6)**6) + 
            L0x20019880_f * (x**0) * ((y_6)**7) + 
            L0x20019882_f * (x**1) * ((y_6)**7) + 
            L0x20019884_f * (x**2) * ((y_6)**7) + 
            L0x20019886_f * (x**3) * ((y_6)**7) + 
            L0x20019888_f * (x**0) * ((y_6)**8) + 
            L0x2001988a_f * (x**1) * ((y_6)**8) + 
            L0x2001988c_f * (x**2) * ((y_6)**8) + 
            L0x2001988e_f * (x**3) * ((y_6)**8) + 
            L0x20019890_f * (x**0) * ((y_6)**9) + 
            L0x20019892_f * (x**1) * ((y_6)**9) + 
            L0x20019894_f * (x**2) * ((y_6)**9) + 
            L0x20019896_f * (x**3) * ((y_6)**9) + 
            L0x20019898_f * (x**0) * ((y_6)**10) + 
            L0x2001989a_f * (x**1) * ((y_6)**10) + 
            L0x2001989c_f * (x**2) * ((y_6)**10) + 
            L0x2001989e_f * (x**3) * ((y_6)**10) + 
            L0x200198a0_f * (x**0) * ((y_6)**11) + 
            L0x200198a2_f * (x**1) * ((y_6)**11) + 
            L0x200198a4_f * (x**2) * ((y_6)**11) + 
            L0x200198a6_f * (x**3) * ((y_6)**11) + 
            L0x200198a8_f * (x**0) * ((y_6)**12) + 
            L0x200198aa_f * (x**1) * ((y_6)**12) + 
            L0x200198ac_f * (x**2) * ((y_6)**12) + 
            L0x200198ae_f * (x**3) * ((y_6)**12) + 
            L0x200198b0_f * (x**0) * ((y_6)**13) + 
            L0x200198b2_f * (x**1) * ((y_6)**13) + 
            L0x200198b4_f * (x**2) * ((y_6)**13) + 
            L0x200198b6_f * (x**3) * ((y_6)**13) + 
            L0x200198b8_f * (x**0) * ((y_6)**14) + 
            L0x200198ba_f * (x**1) * ((y_6)**14) + 
            L0x200198bc_f * (x**2) * ((y_6)**14) + 
            L0x200198be_f * (x**3) * ((y_6)**14) + 
            L0x200198c0_f * (x**0) * ((y_6)**15) + 
            L0x200198c2_f * (x**1) * ((y_6)**15) + 
            L0x200198c4_f * (x**2) * ((y_6)**15) + 
            L0x200198c6_f * (x**3) * ((y_6)**15) + 
            L0x200198c8_f * (x**0) * ((y_6)**16) + 
            L0x200198ca_f * (x**1) * ((y_6)**16) + 
            L0x200198cc_f * (x**2) * ((y_6)**16) + 
            L0x200198ce_f * (x**3) * ((y_6)**16) + 
            L0x200198d0_f * (x**0) * ((y_6)**17) + 
            L0x200198d2_f * (x**1) * ((y_6)**17) + 
            L0x200198d4_f * (x**2) * ((y_6)**17) + 
            L0x200198d6_f * (x**3) * ((y_6)**17) + 
            L0x200198d8_f * (x**0) * ((y_6)**18) + 
            L0x200198da_f * (x**1) * ((y_6)**18) + 
            L0x200198dc_f * (x**2) * ((y_6)**18) + 
            L0x200198de_f * (x**3) * ((y_6)**18) + 
            L0x200198e0_f * (x**0) * ((y_6)**19) + 
            L0x200198e2_f * (x**1) * ((y_6)**19) + 
            L0x200198e4_f * (x**2) * ((y_6)**19) + 
            L0x200198e6_f * (x**3) * ((y_6)**19) + 
            L0x200198e8_f * (x**0) * ((y_6)**20) + 
            L0x200198ea_f * (x**1) * ((y_6)**20) + 
            L0x200198ec_f * (x**2) * ((y_6)**20) + 
            L0x200198ee_f * (x**3) * ((y_6)**20) + 
            L0x200198f0_f * (x**0) * ((y_6)**21) + 
            L0x200198f2_f * (x**1) * ((y_6)**21) + 
            L0x200198f4_f * (x**2) * ((y_6)**21) + 
            L0x200198f6_f * (x**3) * ((y_6)**21) + 
            L0x200198f8_f * (x**0) * ((y_6)**22) + 
            L0x200198fa_f * (x**1) * ((y_6)**22) + 
            L0x200198fc_f * (x**2) * ((y_6)**22) + 
            L0x200198fe_f * (x**3) * ((y_6)**22) + 
            L0x20019900_f * (x**0) * ((y_6)**23) + 
            L0x20019902_f * (x**1) * ((y_6)**23) + 
            L0x20019904_f * (x**2) * ((y_6)**23) + 
            L0x20019906_f * (x**3) * ((y_6)**23) + 
            L0x20019908_f * (x**0) * ((y_6)**24) + 
            L0x2001990a_f * (x**1) * ((y_6)**24) + 
            L0x2001990c_f * (x**2) * ((y_6)**24) + 
            L0x2001990e_f * (x**3) * ((y_6)**24) + 
            L0x20019910_f * (x**0) * ((y_6)**25) + 
            L0x20019912_f * (x**1) * ((y_6)**25) + 
            L0x20019914_f * (x**2) * ((y_6)**25) + 
            L0x20019916_f * (x**3) * ((y_6)**25) + 
            L0x20019918_f * (x**0) * ((y_6)**26) + 
            L0x2001991a_f * (x**1) * ((y_6)**26) + 
            L0x2001991c_f * (x**2) * ((y_6)**26) + 
            L0x2001991e_f * (x**3) * ((y_6)**26) + 
            L0x20019920_f * (x**0) * ((y_6)**27) + 
            L0x20019922_f * (x**1) * ((y_6)**27) + 
            L0x20019924_f * (x**2) * ((y_6)**27) + 
            L0x20019926_f * (x**3) * ((y_6)**27) + 
            L0x20019928_f * (x**0) * ((y_6)**28) + 
            L0x2001992a_f * (x**1) * ((y_6)**28) + 
            L0x2001992c_f * (x**2) * ((y_6)**28) + 
            L0x2001992e_f * (x**3) * ((y_6)**28) + 
            L0x20019930_f * (x**0) * ((y_6)**29) + 
            L0x20019932_f * (x**1) * ((y_6)**29) + 
            L0x20019934_f * (x**2) * ((y_6)**29) + 
            L0x20019936_f * (x**3) * ((y_6)**29) + 
            L0x20019938_f * (x**0) * ((y_6)**30) + 
            L0x2001993a_f * (x**1) * ((y_6)**30) + 
            L0x2001993c_f * (x**2) * ((y_6)**30) + 
            L0x2001993e_f * (x**3) * ((y_6)**30) + 
            L0x20019940_f * (x**0) * ((y_6)**31) + 
            L0x20019942_f * (x**1) * ((y_6)**31) + 
            L0x20019944_f * (x**2) * ((y_6)**31) + 
            L0x20019946_f * (x**3) * ((y_6)**31) + 
            L0x20019948_f * (x**0) * ((y_6)**32) + 
            L0x2001994a_f * (x**1) * ((y_6)**32) + 
            L0x2001994c_f * (x**2) * ((y_6)**32) + 
            L0x2001994e_f * (x**3) * ((y_6)**32) + 
            L0x20019950_f * (x**0) * ((y_6)**33) + 
            L0x20019952_f * (x**1) * ((y_6)**33) + 
            L0x20019954_f * (x**2) * ((y_6)**33) + 
            L0x20019956_f * (x**3) * ((y_6)**33) + 
            L0x20019958_f * (x**0) * ((y_6)**34) + 
            L0x2001995a_f * (x**1) * ((y_6)**34) + 
            L0x2001995c_f * (x**2) * ((y_6)**34) + 
            L0x2001995e_f * (x**3) * ((y_6)**34) + 
            L0x20019960_f * (x**0) * ((y_6)**35) + 
            L0x20019962_f * (x**1) * ((y_6)**35) + 
            L0x20019964_f * (x**2) * ((y_6)**35) + 
            L0x20019966_f * (x**3) * ((y_6)**35) + 
            L0x20019968_f * (x**0) * ((y_6)**36) + 
            L0x2001996a_f * (x**1) * ((y_6)**36) + 
            L0x2001996c_f * (x**2) * ((y_6)**36) + 
            L0x2001996e_f * (x**3) * ((y_6)**36) + 
            L0x20019970_f * (x**0) * ((y_6)**37) + 
            L0x20019972_f * (x**1) * ((y_6)**37) + 
            L0x20019974_f * (x**2) * ((y_6)**37) + 
            L0x20019976_f * (x**3) * ((y_6)**37) + 
            L0x20019978_f * (x**0) * ((y_6)**38) + 
            L0x2001997a_f * (x**1) * ((y_6)**38) + 
            L0x2001997c_f * (x**2) * ((y_6)**38) + 
            L0x2001997e_f * (x**3) * ((y_6)**38) + 
            L0x20019980_f * (x**0) * ((y_6)**39) + 
            L0x20019982_f * (x**1) * ((y_6)**39) + 
            L0x20019984_f * (x**2) * ((y_6)**39) + 
            L0x20019986_f * (x**3) * ((y_6)**39) + 
            L0x20019988_f * (x**0) * ((y_6)**40) + 
            L0x2001998a_f * (x**1) * ((y_6)**40) + 
            L0x2001998c_f * (x**2) * ((y_6)**40) + 
            L0x2001998e_f * (x**3) * ((y_6)**40) + 
            L0x20019990_f * (x**0) * ((y_6)**41) + 
            L0x20019992_f * (x**1) * ((y_6)**41) + 
            L0x20019994_f * (x**2) * ((y_6)**41) + 
            L0x20019996_f * (x**3) * ((y_6)**41) + 
            L0x20019998_f * (x**0) * ((y_6)**42) + 
            L0x2001999a_f * (x**1) * ((y_6)**42) + 
            L0x2001999c_f * (x**2) * ((y_6)**42) + 
            L0x2001999e_f * (x**3) * ((y_6)**42) + 
            L0x200199a0_f * (x**0) * ((y_6)**43) + 
            L0x200199a2_f * (x**1) * ((y_6)**43) + 
            L0x200199a4_f * (x**2) * ((y_6)**43) + 
            L0x200199a6_f * (x**3) * ((y_6)**43) + 
            L0x200199a8_f * (x**0) * ((y_6)**44) + 
            L0x200199aa_f * (x**1) * ((y_6)**44) + 
            L0x200199ac_f * (x**2) * ((y_6)**44) + 
            L0x200199ae_f * (x**3) * ((y_6)**44) + 
            L0x200199b0_f * (x**0) * ((y_6)**45) + 
            L0x200199b2_f * (x**1) * ((y_6)**45) + 
            L0x200199b4_f * (x**2) * ((y_6)**45) + 
            L0x200199b6_f * (x**3) * ((y_6)**45) + 
            L0x200199b8_f * (x**0) * ((y_6)**46) + 
            L0x200199ba_f * (x**1) * ((y_6)**46) + 
            L0x200199bc_f * (x**2) * ((y_6)**46) + 
            L0x200199be_f * (x**3) * ((y_6)**46) + 
            L0x200199c0_f * (x**0) * ((y_6)**47) + 
            L0x200199c2_f * (x**1) * ((y_6)**47) + 
            L0x200199c4_f * (x**2) * ((y_6)**47) + 
            L0x200199c6_f * (x**3) * ((y_6)**47) + 
            L0x200199c8_f * (x**0) * ((y_6)**48) + 
            L0x200199ca_f * (x**1) * ((y_6)**48) + 
            L0x200199cc_f * (x**2) * ((y_6)**48) + 
            L0x200199ce_f * (x**3) * ((y_6)**48) + 
            L0x200199d0_f * (x**0) * ((y_6)**49) + 
            L0x200199d2_f * (x**1) * ((y_6)**49) + 
            L0x200199d4_f * (x**2) * ((y_6)**49) + 
            L0x200199d6_f * (x**3) * ((y_6)**49) + 
            L0x200199d8_f * (x**0) * ((y_6)**50) + 
            L0x200199da_f * (x**1) * ((y_6)**50) + 
            L0x200199dc_f * (x**2) * ((y_6)**50) + 
            L0x200199de_f * (x**3) * ((y_6)**50) + 
            L0x200199e0_f * (x**0) * ((y_6)**51) + 
            L0x200199e2_f * (x**1) * ((y_6)**51) + 
            L0x200199e4_f * (x**2) * ((y_6)**51) + 
            L0x200199e6_f * (x**3) * ((y_6)**51) + 
            L0x200199e8_f * (x**0) * ((y_6)**52) + 
            L0x200199ea_f * (x**1) * ((y_6)**52) + 
            L0x200199ec_f * (x**2) * ((y_6)**52) + 
            L0x200199ee_f * (x**3) * ((y_6)**52) + 
            L0x200199f0_f * (x**0) * ((y_6)**53) + 
            L0x200199f2_f * (x**1) * ((y_6)**53) + 
            L0x200199f4_f * (x**2) * ((y_6)**53) + 
            L0x200199f6_f * (x**3) * ((y_6)**53) + 
            L0x200199f8_f * (x**0) * ((y_6)**54) + 
            L0x200199fa_f * (x**1) * ((y_6)**54) + 
            L0x200199fc_f * (x**2) * ((y_6)**54) + 
            L0x200199fe_f * (x**3) * ((y_6)**54) + 
            L0x20019a00_f * (x**0) * ((y_6)**55) + 
            L0x20019a02_f * (x**1) * ((y_6)**55) + 
            L0x20019a04_f * (x**2) * ((y_6)**55) + 
            L0x20019a06_f * (x**3) * ((y_6)**55) + 
            L0x20019a08_f * (x**0) * ((y_6)**56) + 
            L0x20019a0a_f * (x**1) * ((y_6)**56) + 
            L0x20019a0c_f * (x**2) * ((y_6)**56) + 
            L0x20019a0e_f * (x**3) * ((y_6)**56) + 
            L0x20019a10_f * (x**0) * ((y_6)**57) + 
            L0x20019a12_f * (x**1) * ((y_6)**57) + 
            L0x20019a14_f * (x**2) * ((y_6)**57) + 
            L0x20019a16_f * (x**3) * ((y_6)**57) + 
            L0x20019a18_f * (x**0) * ((y_6)**58) + 
            L0x20019a1a_f * (x**1) * ((y_6)**58) + 
            L0x20019a1c_f * (x**2) * ((y_6)**58) + 
            L0x20019a1e_f * (x**3) * ((y_6)**58) + 
            L0x20019a20_f * (x**0) * ((y_6)**59) + 
            L0x20019a22_f * (x**1) * ((y_6)**59) + 
            L0x20019a24_f * (x**2) * ((y_6)**59) + 
            L0x20019a26_f * (x**3) * ((y_6)**59) + 
            L0x20019a28_f * (x**0) * ((y_6)**60) + 
            L0x20019a2a_f * (x**1) * ((y_6)**60) + 
            L0x20019a2c_f * (x**2) * ((y_6)**60) + 
            L0x20019a2e_f * (x**3) * ((y_6)**60) + 
            L0x20019a30_f * (x**0) * ((y_6)**61) + 
            L0x20019a32_f * (x**1) * ((y_6)**61) + 
            L0x20019a34_f * (x**2) * ((y_6)**61) + 
            L0x20019a36_f * (x**3) * ((y_6)**61) + 
            L0x20019a38_f * (x**0) * ((y_6)**62) + 
            L0x20019a3a_f * (x**1) * ((y_6)**62) + 
            L0x20019a3c_f * (x**2) * ((y_6)**62) + 
            L0x20019a3e_f * (x**3) * ((y_6)**62) + 
            L0x20019a40_f * (x**0) * ((y_6)**63) + 
            L0x20019a42_f * (x**1) * ((y_6)**63) + 
            L0x20019a44_f * (x**2) * ((y_6)**63) + 
            L0x20019a46_f * (x**3) * ((y_6)**63)
          )
          [25570049, x**4 - y_0_59 * 16924184, y_0_59 - 1],
    (* inp_poly_60 *)
    eqmod (2**32) * (inp_poly_60 * inp_poly_60)
          (
            L0x20019848_f * (x**0) * ((y_6)**0) + 
            L0x2001984a_f * (x**1) * ((y_6)**0) + 
            L0x2001984c_f * (x**2) * ((y_6)**0) + 
            L0x2001984e_f * (x**3) * ((y_6)**0) + 
            L0x20019850_f * (x**0) * ((y_6)**1) + 
            L0x20019852_f * (x**1) * ((y_6)**1) + 
            L0x20019854_f * (x**2) * ((y_6)**1) + 
            L0x20019856_f * (x**3) * ((y_6)**1) + 
            L0x20019858_f * (x**0) * ((y_6)**2) + 
            L0x2001985a_f * (x**1) * ((y_6)**2) + 
            L0x2001985c_f * (x**2) * ((y_6)**2) + 
            L0x2001985e_f * (x**3) * ((y_6)**2) + 
            L0x20019860_f * (x**0) * ((y_6)**3) + 
            L0x20019862_f * (x**1) * ((y_6)**3) + 
            L0x20019864_f * (x**2) * ((y_6)**3) + 
            L0x20019866_f * (x**3) * ((y_6)**3) + 
            L0x20019868_f * (x**0) * ((y_6)**4) + 
            L0x2001986a_f * (x**1) * ((y_6)**4) + 
            L0x2001986c_f * (x**2) * ((y_6)**4) + 
            L0x2001986e_f * (x**3) * ((y_6)**4) + 
            L0x20019870_f * (x**0) * ((y_6)**5) + 
            L0x20019872_f * (x**1) * ((y_6)**5) + 
            L0x20019874_f * (x**2) * ((y_6)**5) + 
            L0x20019876_f * (x**3) * ((y_6)**5) + 
            L0x20019878_f * (x**0) * ((y_6)**6) + 
            L0x2001987a_f * (x**1) * ((y_6)**6) + 
            L0x2001987c_f * (x**2) * ((y_6)**6) + 
            L0x2001987e_f * (x**3) * ((y_6)**6) + 
            L0x20019880_f * (x**0) * ((y_6)**7) + 
            L0x20019882_f * (x**1) * ((y_6)**7) + 
            L0x20019884_f * (x**2) * ((y_6)**7) + 
            L0x20019886_f * (x**3) * ((y_6)**7) + 
            L0x20019888_f * (x**0) * ((y_6)**8) + 
            L0x2001988a_f * (x**1) * ((y_6)**8) + 
            L0x2001988c_f * (x**2) * ((y_6)**8) + 
            L0x2001988e_f * (x**3) * ((y_6)**8) + 
            L0x20019890_f * (x**0) * ((y_6)**9) + 
            L0x20019892_f * (x**1) * ((y_6)**9) + 
            L0x20019894_f * (x**2) * ((y_6)**9) + 
            L0x20019896_f * (x**3) * ((y_6)**9) + 
            L0x20019898_f * (x**0) * ((y_6)**10) + 
            L0x2001989a_f * (x**1) * ((y_6)**10) + 
            L0x2001989c_f * (x**2) * ((y_6)**10) + 
            L0x2001989e_f * (x**3) * ((y_6)**10) + 
            L0x200198a0_f * (x**0) * ((y_6)**11) + 
            L0x200198a2_f * (x**1) * ((y_6)**11) + 
            L0x200198a4_f * (x**2) * ((y_6)**11) + 
            L0x200198a6_f * (x**3) * ((y_6)**11) + 
            L0x200198a8_f * (x**0) * ((y_6)**12) + 
            L0x200198aa_f * (x**1) * ((y_6)**12) + 
            L0x200198ac_f * (x**2) * ((y_6)**12) + 
            L0x200198ae_f * (x**3) * ((y_6)**12) + 
            L0x200198b0_f * (x**0) * ((y_6)**13) + 
            L0x200198b2_f * (x**1) * ((y_6)**13) + 
            L0x200198b4_f * (x**2) * ((y_6)**13) + 
            L0x200198b6_f * (x**3) * ((y_6)**13) + 
            L0x200198b8_f * (x**0) * ((y_6)**14) + 
            L0x200198ba_f * (x**1) * ((y_6)**14) + 
            L0x200198bc_f * (x**2) * ((y_6)**14) + 
            L0x200198be_f * (x**3) * ((y_6)**14) + 
            L0x200198c0_f * (x**0) * ((y_6)**15) + 
            L0x200198c2_f * (x**1) * ((y_6)**15) + 
            L0x200198c4_f * (x**2) * ((y_6)**15) + 
            L0x200198c6_f * (x**3) * ((y_6)**15) + 
            L0x200198c8_f * (x**0) * ((y_6)**16) + 
            L0x200198ca_f * (x**1) * ((y_6)**16) + 
            L0x200198cc_f * (x**2) * ((y_6)**16) + 
            L0x200198ce_f * (x**3) * ((y_6)**16) + 
            L0x200198d0_f * (x**0) * ((y_6)**17) + 
            L0x200198d2_f * (x**1) * ((y_6)**17) + 
            L0x200198d4_f * (x**2) * ((y_6)**17) + 
            L0x200198d6_f * (x**3) * ((y_6)**17) + 
            L0x200198d8_f * (x**0) * ((y_6)**18) + 
            L0x200198da_f * (x**1) * ((y_6)**18) + 
            L0x200198dc_f * (x**2) * ((y_6)**18) + 
            L0x200198de_f * (x**3) * ((y_6)**18) + 
            L0x200198e0_f * (x**0) * ((y_6)**19) + 
            L0x200198e2_f * (x**1) * ((y_6)**19) + 
            L0x200198e4_f * (x**2) * ((y_6)**19) + 
            L0x200198e6_f * (x**3) * ((y_6)**19) + 
            L0x200198e8_f * (x**0) * ((y_6)**20) + 
            L0x200198ea_f * (x**1) * ((y_6)**20) + 
            L0x200198ec_f * (x**2) * ((y_6)**20) + 
            L0x200198ee_f * (x**3) * ((y_6)**20) + 
            L0x200198f0_f * (x**0) * ((y_6)**21) + 
            L0x200198f2_f * (x**1) * ((y_6)**21) + 
            L0x200198f4_f * (x**2) * ((y_6)**21) + 
            L0x200198f6_f * (x**3) * ((y_6)**21) + 
            L0x200198f8_f * (x**0) * ((y_6)**22) + 
            L0x200198fa_f * (x**1) * ((y_6)**22) + 
            L0x200198fc_f * (x**2) * ((y_6)**22) + 
            L0x200198fe_f * (x**3) * ((y_6)**22) + 
            L0x20019900_f * (x**0) * ((y_6)**23) + 
            L0x20019902_f * (x**1) * ((y_6)**23) + 
            L0x20019904_f * (x**2) * ((y_6)**23) + 
            L0x20019906_f * (x**3) * ((y_6)**23) + 
            L0x20019908_f * (x**0) * ((y_6)**24) + 
            L0x2001990a_f * (x**1) * ((y_6)**24) + 
            L0x2001990c_f * (x**2) * ((y_6)**24) + 
            L0x2001990e_f * (x**3) * ((y_6)**24) + 
            L0x20019910_f * (x**0) * ((y_6)**25) + 
            L0x20019912_f * (x**1) * ((y_6)**25) + 
            L0x20019914_f * (x**2) * ((y_6)**25) + 
            L0x20019916_f * (x**3) * ((y_6)**25) + 
            L0x20019918_f * (x**0) * ((y_6)**26) + 
            L0x2001991a_f * (x**1) * ((y_6)**26) + 
            L0x2001991c_f * (x**2) * ((y_6)**26) + 
            L0x2001991e_f * (x**3) * ((y_6)**26) + 
            L0x20019920_f * (x**0) * ((y_6)**27) + 
            L0x20019922_f * (x**1) * ((y_6)**27) + 
            L0x20019924_f * (x**2) * ((y_6)**27) + 
            L0x20019926_f * (x**3) * ((y_6)**27) + 
            L0x20019928_f * (x**0) * ((y_6)**28) + 
            L0x2001992a_f * (x**1) * ((y_6)**28) + 
            L0x2001992c_f * (x**2) * ((y_6)**28) + 
            L0x2001992e_f * (x**3) * ((y_6)**28) + 
            L0x20019930_f * (x**0) * ((y_6)**29) + 
            L0x20019932_f * (x**1) * ((y_6)**29) + 
            L0x20019934_f * (x**2) * ((y_6)**29) + 
            L0x20019936_f * (x**3) * ((y_6)**29) + 
            L0x20019938_f * (x**0) * ((y_6)**30) + 
            L0x2001993a_f * (x**1) * ((y_6)**30) + 
            L0x2001993c_f * (x**2) * ((y_6)**30) + 
            L0x2001993e_f * (x**3) * ((y_6)**30) + 
            L0x20019940_f * (x**0) * ((y_6)**31) + 
            L0x20019942_f * (x**1) * ((y_6)**31) + 
            L0x20019944_f * (x**2) * ((y_6)**31) + 
            L0x20019946_f * (x**3) * ((y_6)**31) + 
            L0x20019948_f * (x**0) * ((y_6)**32) + 
            L0x2001994a_f * (x**1) * ((y_6)**32) + 
            L0x2001994c_f * (x**2) * ((y_6)**32) + 
            L0x2001994e_f * (x**3) * ((y_6)**32) + 
            L0x20019950_f * (x**0) * ((y_6)**33) + 
            L0x20019952_f * (x**1) * ((y_6)**33) + 
            L0x20019954_f * (x**2) * ((y_6)**33) + 
            L0x20019956_f * (x**3) * ((y_6)**33) + 
            L0x20019958_f * (x**0) * ((y_6)**34) + 
            L0x2001995a_f * (x**1) * ((y_6)**34) + 
            L0x2001995c_f * (x**2) * ((y_6)**34) + 
            L0x2001995e_f * (x**3) * ((y_6)**34) + 
            L0x20019960_f * (x**0) * ((y_6)**35) + 
            L0x20019962_f * (x**1) * ((y_6)**35) + 
            L0x20019964_f * (x**2) * ((y_6)**35) + 
            L0x20019966_f * (x**3) * ((y_6)**35) + 
            L0x20019968_f * (x**0) * ((y_6)**36) + 
            L0x2001996a_f * (x**1) * ((y_6)**36) + 
            L0x2001996c_f * (x**2) * ((y_6)**36) + 
            L0x2001996e_f * (x**3) * ((y_6)**36) + 
            L0x20019970_f * (x**0) * ((y_6)**37) + 
            L0x20019972_f * (x**1) * ((y_6)**37) + 
            L0x20019974_f * (x**2) * ((y_6)**37) + 
            L0x20019976_f * (x**3) * ((y_6)**37) + 
            L0x20019978_f * (x**0) * ((y_6)**38) + 
            L0x2001997a_f * (x**1) * ((y_6)**38) + 
            L0x2001997c_f * (x**2) * ((y_6)**38) + 
            L0x2001997e_f * (x**3) * ((y_6)**38) + 
            L0x20019980_f * (x**0) * ((y_6)**39) + 
            L0x20019982_f * (x**1) * ((y_6)**39) + 
            L0x20019984_f * (x**2) * ((y_6)**39) + 
            L0x20019986_f * (x**3) * ((y_6)**39) + 
            L0x20019988_f * (x**0) * ((y_6)**40) + 
            L0x2001998a_f * (x**1) * ((y_6)**40) + 
            L0x2001998c_f * (x**2) * ((y_6)**40) + 
            L0x2001998e_f * (x**3) * ((y_6)**40) + 
            L0x20019990_f * (x**0) * ((y_6)**41) + 
            L0x20019992_f * (x**1) * ((y_6)**41) + 
            L0x20019994_f * (x**2) * ((y_6)**41) + 
            L0x20019996_f * (x**3) * ((y_6)**41) + 
            L0x20019998_f * (x**0) * ((y_6)**42) + 
            L0x2001999a_f * (x**1) * ((y_6)**42) + 
            L0x2001999c_f * (x**2) * ((y_6)**42) + 
            L0x2001999e_f * (x**3) * ((y_6)**42) + 
            L0x200199a0_f * (x**0) * ((y_6)**43) + 
            L0x200199a2_f * (x**1) * ((y_6)**43) + 
            L0x200199a4_f * (x**2) * ((y_6)**43) + 
            L0x200199a6_f * (x**3) * ((y_6)**43) + 
            L0x200199a8_f * (x**0) * ((y_6)**44) + 
            L0x200199aa_f * (x**1) * ((y_6)**44) + 
            L0x200199ac_f * (x**2) * ((y_6)**44) + 
            L0x200199ae_f * (x**3) * ((y_6)**44) + 
            L0x200199b0_f * (x**0) * ((y_6)**45) + 
            L0x200199b2_f * (x**1) * ((y_6)**45) + 
            L0x200199b4_f * (x**2) * ((y_6)**45) + 
            L0x200199b6_f * (x**3) * ((y_6)**45) + 
            L0x200199b8_f * (x**0) * ((y_6)**46) + 
            L0x200199ba_f * (x**1) * ((y_6)**46) + 
            L0x200199bc_f * (x**2) * ((y_6)**46) + 
            L0x200199be_f * (x**3) * ((y_6)**46) + 
            L0x200199c0_f * (x**0) * ((y_6)**47) + 
            L0x200199c2_f * (x**1) * ((y_6)**47) + 
            L0x200199c4_f * (x**2) * ((y_6)**47) + 
            L0x200199c6_f * (x**3) * ((y_6)**47) + 
            L0x200199c8_f * (x**0) * ((y_6)**48) + 
            L0x200199ca_f * (x**1) * ((y_6)**48) + 
            L0x200199cc_f * (x**2) * ((y_6)**48) + 
            L0x200199ce_f * (x**3) * ((y_6)**48) + 
            L0x200199d0_f * (x**0) * ((y_6)**49) + 
            L0x200199d2_f * (x**1) * ((y_6)**49) + 
            L0x200199d4_f * (x**2) * ((y_6)**49) + 
            L0x200199d6_f * (x**3) * ((y_6)**49) + 
            L0x200199d8_f * (x**0) * ((y_6)**50) + 
            L0x200199da_f * (x**1) * ((y_6)**50) + 
            L0x200199dc_f * (x**2) * ((y_6)**50) + 
            L0x200199de_f * (x**3) * ((y_6)**50) + 
            L0x200199e0_f * (x**0) * ((y_6)**51) + 
            L0x200199e2_f * (x**1) * ((y_6)**51) + 
            L0x200199e4_f * (x**2) * ((y_6)**51) + 
            L0x200199e6_f * (x**3) * ((y_6)**51) + 
            L0x200199e8_f * (x**0) * ((y_6)**52) + 
            L0x200199ea_f * (x**1) * ((y_6)**52) + 
            L0x200199ec_f * (x**2) * ((y_6)**52) + 
            L0x200199ee_f * (x**3) * ((y_6)**52) + 
            L0x200199f0_f * (x**0) * ((y_6)**53) + 
            L0x200199f2_f * (x**1) * ((y_6)**53) + 
            L0x200199f4_f * (x**2) * ((y_6)**53) + 
            L0x200199f6_f * (x**3) * ((y_6)**53) + 
            L0x200199f8_f * (x**0) * ((y_6)**54) + 
            L0x200199fa_f * (x**1) * ((y_6)**54) + 
            L0x200199fc_f * (x**2) * ((y_6)**54) + 
            L0x200199fe_f * (x**3) * ((y_6)**54) + 
            L0x20019a00_f * (x**0) * ((y_6)**55) + 
            L0x20019a02_f * (x**1) * ((y_6)**55) + 
            L0x20019a04_f * (x**2) * ((y_6)**55) + 
            L0x20019a06_f * (x**3) * ((y_6)**55) + 
            L0x20019a08_f * (x**0) * ((y_6)**56) + 
            L0x20019a0a_f * (x**1) * ((y_6)**56) + 
            L0x20019a0c_f * (x**2) * ((y_6)**56) + 
            L0x20019a0e_f * (x**3) * ((y_6)**56) + 
            L0x20019a10_f * (x**0) * ((y_6)**57) + 
            L0x20019a12_f * (x**1) * ((y_6)**57) + 
            L0x20019a14_f * (x**2) * ((y_6)**57) + 
            L0x20019a16_f * (x**3) * ((y_6)**57) + 
            L0x20019a18_f * (x**0) * ((y_6)**58) + 
            L0x20019a1a_f * (x**1) * ((y_6)**58) + 
            L0x20019a1c_f * (x**2) * ((y_6)**58) + 
            L0x20019a1e_f * (x**3) * ((y_6)**58) + 
            L0x20019a20_f * (x**0) * ((y_6)**59) + 
            L0x20019a22_f * (x**1) * ((y_6)**59) + 
            L0x20019a24_f * (x**2) * ((y_6)**59) + 
            L0x20019a26_f * (x**3) * ((y_6)**59) + 
            L0x20019a28_f * (x**0) * ((y_6)**60) + 
            L0x20019a2a_f * (x**1) * ((y_6)**60) + 
            L0x20019a2c_f * (x**2) * ((y_6)**60) + 
            L0x20019a2e_f * (x**3) * ((y_6)**60) + 
            L0x20019a30_f * (x**0) * ((y_6)**61) + 
            L0x20019a32_f * (x**1) * ((y_6)**61) + 
            L0x20019a34_f * (x**2) * ((y_6)**61) + 
            L0x20019a36_f * (x**3) * ((y_6)**61) + 
            L0x20019a38_f * (x**0) * ((y_6)**62) + 
            L0x20019a3a_f * (x**1) * ((y_6)**62) + 
            L0x20019a3c_f * (x**2) * ((y_6)**62) + 
            L0x20019a3e_f * (x**3) * ((y_6)**62) + 
            L0x20019a40_f * (x**0) * ((y_6)**63) + 
            L0x20019a42_f * (x**1) * ((y_6)**63) + 
            L0x20019a44_f * (x**2) * ((y_6)**63) + 
            L0x20019a46_f * (x**3) * ((y_6)**63)
          )
          [25570049, x**4 - y_0_60 * 18864008, y_0_60 - 1],
    (* inp_poly_61 *)
    eqmod (2**32) * (inp_poly_61 * inp_poly_61)
          (
            L0x20019848_f * (x**0) * ((y_6)**0) + 
            L0x2001984a_f * (x**1) * ((y_6)**0) + 
            L0x2001984c_f * (x**2) * ((y_6)**0) + 
            L0x2001984e_f * (x**3) * ((y_6)**0) + 
            L0x20019850_f * (x**0) * ((y_6)**1) + 
            L0x20019852_f * (x**1) * ((y_6)**1) + 
            L0x20019854_f * (x**2) * ((y_6)**1) + 
            L0x20019856_f * (x**3) * ((y_6)**1) + 
            L0x20019858_f * (x**0) * ((y_6)**2) + 
            L0x2001985a_f * (x**1) * ((y_6)**2) + 
            L0x2001985c_f * (x**2) * ((y_6)**2) + 
            L0x2001985e_f * (x**3) * ((y_6)**2) + 
            L0x20019860_f * (x**0) * ((y_6)**3) + 
            L0x20019862_f * (x**1) * ((y_6)**3) + 
            L0x20019864_f * (x**2) * ((y_6)**3) + 
            L0x20019866_f * (x**3) * ((y_6)**3) + 
            L0x20019868_f * (x**0) * ((y_6)**4) + 
            L0x2001986a_f * (x**1) * ((y_6)**4) + 
            L0x2001986c_f * (x**2) * ((y_6)**4) + 
            L0x2001986e_f * (x**3) * ((y_6)**4) + 
            L0x20019870_f * (x**0) * ((y_6)**5) + 
            L0x20019872_f * (x**1) * ((y_6)**5) + 
            L0x20019874_f * (x**2) * ((y_6)**5) + 
            L0x20019876_f * (x**3) * ((y_6)**5) + 
            L0x20019878_f * (x**0) * ((y_6)**6) + 
            L0x2001987a_f * (x**1) * ((y_6)**6) + 
            L0x2001987c_f * (x**2) * ((y_6)**6) + 
            L0x2001987e_f * (x**3) * ((y_6)**6) + 
            L0x20019880_f * (x**0) * ((y_6)**7) + 
            L0x20019882_f * (x**1) * ((y_6)**7) + 
            L0x20019884_f * (x**2) * ((y_6)**7) + 
            L0x20019886_f * (x**3) * ((y_6)**7) + 
            L0x20019888_f * (x**0) * ((y_6)**8) + 
            L0x2001988a_f * (x**1) * ((y_6)**8) + 
            L0x2001988c_f * (x**2) * ((y_6)**8) + 
            L0x2001988e_f * (x**3) * ((y_6)**8) + 
            L0x20019890_f * (x**0) * ((y_6)**9) + 
            L0x20019892_f * (x**1) * ((y_6)**9) + 
            L0x20019894_f * (x**2) * ((y_6)**9) + 
            L0x20019896_f * (x**3) * ((y_6)**9) + 
            L0x20019898_f * (x**0) * ((y_6)**10) + 
            L0x2001989a_f * (x**1) * ((y_6)**10) + 
            L0x2001989c_f * (x**2) * ((y_6)**10) + 
            L0x2001989e_f * (x**3) * ((y_6)**10) + 
            L0x200198a0_f * (x**0) * ((y_6)**11) + 
            L0x200198a2_f * (x**1) * ((y_6)**11) + 
            L0x200198a4_f * (x**2) * ((y_6)**11) + 
            L0x200198a6_f * (x**3) * ((y_6)**11) + 
            L0x200198a8_f * (x**0) * ((y_6)**12) + 
            L0x200198aa_f * (x**1) * ((y_6)**12) + 
            L0x200198ac_f * (x**2) * ((y_6)**12) + 
            L0x200198ae_f * (x**3) * ((y_6)**12) + 
            L0x200198b0_f * (x**0) * ((y_6)**13) + 
            L0x200198b2_f * (x**1) * ((y_6)**13) + 
            L0x200198b4_f * (x**2) * ((y_6)**13) + 
            L0x200198b6_f * (x**3) * ((y_6)**13) + 
            L0x200198b8_f * (x**0) * ((y_6)**14) + 
            L0x200198ba_f * (x**1) * ((y_6)**14) + 
            L0x200198bc_f * (x**2) * ((y_6)**14) + 
            L0x200198be_f * (x**3) * ((y_6)**14) + 
            L0x200198c0_f * (x**0) * ((y_6)**15) + 
            L0x200198c2_f * (x**1) * ((y_6)**15) + 
            L0x200198c4_f * (x**2) * ((y_6)**15) + 
            L0x200198c6_f * (x**3) * ((y_6)**15) + 
            L0x200198c8_f * (x**0) * ((y_6)**16) + 
            L0x200198ca_f * (x**1) * ((y_6)**16) + 
            L0x200198cc_f * (x**2) * ((y_6)**16) + 
            L0x200198ce_f * (x**3) * ((y_6)**16) + 
            L0x200198d0_f * (x**0) * ((y_6)**17) + 
            L0x200198d2_f * (x**1) * ((y_6)**17) + 
            L0x200198d4_f * (x**2) * ((y_6)**17) + 
            L0x200198d6_f * (x**3) * ((y_6)**17) + 
            L0x200198d8_f * (x**0) * ((y_6)**18) + 
            L0x200198da_f * (x**1) * ((y_6)**18) + 
            L0x200198dc_f * (x**2) * ((y_6)**18) + 
            L0x200198de_f * (x**3) * ((y_6)**18) + 
            L0x200198e0_f * (x**0) * ((y_6)**19) + 
            L0x200198e2_f * (x**1) * ((y_6)**19) + 
            L0x200198e4_f * (x**2) * ((y_6)**19) + 
            L0x200198e6_f * (x**3) * ((y_6)**19) + 
            L0x200198e8_f * (x**0) * ((y_6)**20) + 
            L0x200198ea_f * (x**1) * ((y_6)**20) + 
            L0x200198ec_f * (x**2) * ((y_6)**20) + 
            L0x200198ee_f * (x**3) * ((y_6)**20) + 
            L0x200198f0_f * (x**0) * ((y_6)**21) + 
            L0x200198f2_f * (x**1) * ((y_6)**21) + 
            L0x200198f4_f * (x**2) * ((y_6)**21) + 
            L0x200198f6_f * (x**3) * ((y_6)**21) + 
            L0x200198f8_f * (x**0) * ((y_6)**22) + 
            L0x200198fa_f * (x**1) * ((y_6)**22) + 
            L0x200198fc_f * (x**2) * ((y_6)**22) + 
            L0x200198fe_f * (x**3) * ((y_6)**22) + 
            L0x20019900_f * (x**0) * ((y_6)**23) + 
            L0x20019902_f * (x**1) * ((y_6)**23) + 
            L0x20019904_f * (x**2) * ((y_6)**23) + 
            L0x20019906_f * (x**3) * ((y_6)**23) + 
            L0x20019908_f * (x**0) * ((y_6)**24) + 
            L0x2001990a_f * (x**1) * ((y_6)**24) + 
            L0x2001990c_f * (x**2) * ((y_6)**24) + 
            L0x2001990e_f * (x**3) * ((y_6)**24) + 
            L0x20019910_f * (x**0) * ((y_6)**25) + 
            L0x20019912_f * (x**1) * ((y_6)**25) + 
            L0x20019914_f * (x**2) * ((y_6)**25) + 
            L0x20019916_f * (x**3) * ((y_6)**25) + 
            L0x20019918_f * (x**0) * ((y_6)**26) + 
            L0x2001991a_f * (x**1) * ((y_6)**26) + 
            L0x2001991c_f * (x**2) * ((y_6)**26) + 
            L0x2001991e_f * (x**3) * ((y_6)**26) + 
            L0x20019920_f * (x**0) * ((y_6)**27) + 
            L0x20019922_f * (x**1) * ((y_6)**27) + 
            L0x20019924_f * (x**2) * ((y_6)**27) + 
            L0x20019926_f * (x**3) * ((y_6)**27) + 
            L0x20019928_f * (x**0) * ((y_6)**28) + 
            L0x2001992a_f * (x**1) * ((y_6)**28) + 
            L0x2001992c_f * (x**2) * ((y_6)**28) + 
            L0x2001992e_f * (x**3) * ((y_6)**28) + 
            L0x20019930_f * (x**0) * ((y_6)**29) + 
            L0x20019932_f * (x**1) * ((y_6)**29) + 
            L0x20019934_f * (x**2) * ((y_6)**29) + 
            L0x20019936_f * (x**3) * ((y_6)**29) + 
            L0x20019938_f * (x**0) * ((y_6)**30) + 
            L0x2001993a_f * (x**1) * ((y_6)**30) + 
            L0x2001993c_f * (x**2) * ((y_6)**30) + 
            L0x2001993e_f * (x**3) * ((y_6)**30) + 
            L0x20019940_f * (x**0) * ((y_6)**31) + 
            L0x20019942_f * (x**1) * ((y_6)**31) + 
            L0x20019944_f * (x**2) * ((y_6)**31) + 
            L0x20019946_f * (x**3) * ((y_6)**31) + 
            L0x20019948_f * (x**0) * ((y_6)**32) + 
            L0x2001994a_f * (x**1) * ((y_6)**32) + 
            L0x2001994c_f * (x**2) * ((y_6)**32) + 
            L0x2001994e_f * (x**3) * ((y_6)**32) + 
            L0x20019950_f * (x**0) * ((y_6)**33) + 
            L0x20019952_f * (x**1) * ((y_6)**33) + 
            L0x20019954_f * (x**2) * ((y_6)**33) + 
            L0x20019956_f * (x**3) * ((y_6)**33) + 
            L0x20019958_f * (x**0) * ((y_6)**34) + 
            L0x2001995a_f * (x**1) * ((y_6)**34) + 
            L0x2001995c_f * (x**2) * ((y_6)**34) + 
            L0x2001995e_f * (x**3) * ((y_6)**34) + 
            L0x20019960_f * (x**0) * ((y_6)**35) + 
            L0x20019962_f * (x**1) * ((y_6)**35) + 
            L0x20019964_f * (x**2) * ((y_6)**35) + 
            L0x20019966_f * (x**3) * ((y_6)**35) + 
            L0x20019968_f * (x**0) * ((y_6)**36) + 
            L0x2001996a_f * (x**1) * ((y_6)**36) + 
            L0x2001996c_f * (x**2) * ((y_6)**36) + 
            L0x2001996e_f * (x**3) * ((y_6)**36) + 
            L0x20019970_f * (x**0) * ((y_6)**37) + 
            L0x20019972_f * (x**1) * ((y_6)**37) + 
            L0x20019974_f * (x**2) * ((y_6)**37) + 
            L0x20019976_f * (x**3) * ((y_6)**37) + 
            L0x20019978_f * (x**0) * ((y_6)**38) + 
            L0x2001997a_f * (x**1) * ((y_6)**38) + 
            L0x2001997c_f * (x**2) * ((y_6)**38) + 
            L0x2001997e_f * (x**3) * ((y_6)**38) + 
            L0x20019980_f * (x**0) * ((y_6)**39) + 
            L0x20019982_f * (x**1) * ((y_6)**39) + 
            L0x20019984_f * (x**2) * ((y_6)**39) + 
            L0x20019986_f * (x**3) * ((y_6)**39) + 
            L0x20019988_f * (x**0) * ((y_6)**40) + 
            L0x2001998a_f * (x**1) * ((y_6)**40) + 
            L0x2001998c_f * (x**2) * ((y_6)**40) + 
            L0x2001998e_f * (x**3) * ((y_6)**40) + 
            L0x20019990_f * (x**0) * ((y_6)**41) + 
            L0x20019992_f * (x**1) * ((y_6)**41) + 
            L0x20019994_f * (x**2) * ((y_6)**41) + 
            L0x20019996_f * (x**3) * ((y_6)**41) + 
            L0x20019998_f * (x**0) * ((y_6)**42) + 
            L0x2001999a_f * (x**1) * ((y_6)**42) + 
            L0x2001999c_f * (x**2) * ((y_6)**42) + 
            L0x2001999e_f * (x**3) * ((y_6)**42) + 
            L0x200199a0_f * (x**0) * ((y_6)**43) + 
            L0x200199a2_f * (x**1) * ((y_6)**43) + 
            L0x200199a4_f * (x**2) * ((y_6)**43) + 
            L0x200199a6_f * (x**3) * ((y_6)**43) + 
            L0x200199a8_f * (x**0) * ((y_6)**44) + 
            L0x200199aa_f * (x**1) * ((y_6)**44) + 
            L0x200199ac_f * (x**2) * ((y_6)**44) + 
            L0x200199ae_f * (x**3) * ((y_6)**44) + 
            L0x200199b0_f * (x**0) * ((y_6)**45) + 
            L0x200199b2_f * (x**1) * ((y_6)**45) + 
            L0x200199b4_f * (x**2) * ((y_6)**45) + 
            L0x200199b6_f * (x**3) * ((y_6)**45) + 
            L0x200199b8_f * (x**0) * ((y_6)**46) + 
            L0x200199ba_f * (x**1) * ((y_6)**46) + 
            L0x200199bc_f * (x**2) * ((y_6)**46) + 
            L0x200199be_f * (x**3) * ((y_6)**46) + 
            L0x200199c0_f * (x**0) * ((y_6)**47) + 
            L0x200199c2_f * (x**1) * ((y_6)**47) + 
            L0x200199c4_f * (x**2) * ((y_6)**47) + 
            L0x200199c6_f * (x**3) * ((y_6)**47) + 
            L0x200199c8_f * (x**0) * ((y_6)**48) + 
            L0x200199ca_f * (x**1) * ((y_6)**48) + 
            L0x200199cc_f * (x**2) * ((y_6)**48) + 
            L0x200199ce_f * (x**3) * ((y_6)**48) + 
            L0x200199d0_f * (x**0) * ((y_6)**49) + 
            L0x200199d2_f * (x**1) * ((y_6)**49) + 
            L0x200199d4_f * (x**2) * ((y_6)**49) + 
            L0x200199d6_f * (x**3) * ((y_6)**49) + 
            L0x200199d8_f * (x**0) * ((y_6)**50) + 
            L0x200199da_f * (x**1) * ((y_6)**50) + 
            L0x200199dc_f * (x**2) * ((y_6)**50) + 
            L0x200199de_f * (x**3) * ((y_6)**50) + 
            L0x200199e0_f * (x**0) * ((y_6)**51) + 
            L0x200199e2_f * (x**1) * ((y_6)**51) + 
            L0x200199e4_f * (x**2) * ((y_6)**51) + 
            L0x200199e6_f * (x**3) * ((y_6)**51) + 
            L0x200199e8_f * (x**0) * ((y_6)**52) + 
            L0x200199ea_f * (x**1) * ((y_6)**52) + 
            L0x200199ec_f * (x**2) * ((y_6)**52) + 
            L0x200199ee_f * (x**3) * ((y_6)**52) + 
            L0x200199f0_f * (x**0) * ((y_6)**53) + 
            L0x200199f2_f * (x**1) * ((y_6)**53) + 
            L0x200199f4_f * (x**2) * ((y_6)**53) + 
            L0x200199f6_f * (x**3) * ((y_6)**53) + 
            L0x200199f8_f * (x**0) * ((y_6)**54) + 
            L0x200199fa_f * (x**1) * ((y_6)**54) + 
            L0x200199fc_f * (x**2) * ((y_6)**54) + 
            L0x200199fe_f * (x**3) * ((y_6)**54) + 
            L0x20019a00_f * (x**0) * ((y_6)**55) + 
            L0x20019a02_f * (x**1) * ((y_6)**55) + 
            L0x20019a04_f * (x**2) * ((y_6)**55) + 
            L0x20019a06_f * (x**3) * ((y_6)**55) + 
            L0x20019a08_f * (x**0) * ((y_6)**56) + 
            L0x20019a0a_f * (x**1) * ((y_6)**56) + 
            L0x20019a0c_f * (x**2) * ((y_6)**56) + 
            L0x20019a0e_f * (x**3) * ((y_6)**56) + 
            L0x20019a10_f * (x**0) * ((y_6)**57) + 
            L0x20019a12_f * (x**1) * ((y_6)**57) + 
            L0x20019a14_f * (x**2) * ((y_6)**57) + 
            L0x20019a16_f * (x**3) * ((y_6)**57) + 
            L0x20019a18_f * (x**0) * ((y_6)**58) + 
            L0x20019a1a_f * (x**1) * ((y_6)**58) + 
            L0x20019a1c_f * (x**2) * ((y_6)**58) + 
            L0x20019a1e_f * (x**3) * ((y_6)**58) + 
            L0x20019a20_f * (x**0) * ((y_6)**59) + 
            L0x20019a22_f * (x**1) * ((y_6)**59) + 
            L0x20019a24_f * (x**2) * ((y_6)**59) + 
            L0x20019a26_f * (x**3) * ((y_6)**59) + 
            L0x20019a28_f * (x**0) * ((y_6)**60) + 
            L0x20019a2a_f * (x**1) * ((y_6)**60) + 
            L0x20019a2c_f * (x**2) * ((y_6)**60) + 
            L0x20019a2e_f * (x**3) * ((y_6)**60) + 
            L0x20019a30_f * (x**0) * ((y_6)**61) + 
            L0x20019a32_f * (x**1) * ((y_6)**61) + 
            L0x20019a34_f * (x**2) * ((y_6)**61) + 
            L0x20019a36_f * (x**3) * ((y_6)**61) + 
            L0x20019a38_f * (x**0) * ((y_6)**62) + 
            L0x20019a3a_f * (x**1) * ((y_6)**62) + 
            L0x20019a3c_f * (x**2) * ((y_6)**62) + 
            L0x20019a3e_f * (x**3) * ((y_6)**62) + 
            L0x20019a40_f * (x**0) * ((y_6)**63) + 
            L0x20019a42_f * (x**1) * ((y_6)**63) + 
            L0x20019a44_f * (x**2) * ((y_6)**63) + 
            L0x20019a46_f * (x**3) * ((y_6)**63)
          )
          [25570049, x**4 - y_0_61 * 6706041, y_0_61 - 1],
    (* inp_poly_62 *)
    eqmod (2**32) * (inp_poly_62 * inp_poly_62)
          (
            L0x20019848_f * (x**0) * ((y_6)**0) + 
            L0x2001984a_f * (x**1) * ((y_6)**0) + 
            L0x2001984c_f * (x**2) * ((y_6)**0) + 
            L0x2001984e_f * (x**3) * ((y_6)**0) + 
            L0x20019850_f * (x**0) * ((y_6)**1) + 
            L0x20019852_f * (x**1) * ((y_6)**1) + 
            L0x20019854_f * (x**2) * ((y_6)**1) + 
            L0x20019856_f * (x**3) * ((y_6)**1) + 
            L0x20019858_f * (x**0) * ((y_6)**2) + 
            L0x2001985a_f * (x**1) * ((y_6)**2) + 
            L0x2001985c_f * (x**2) * ((y_6)**2) + 
            L0x2001985e_f * (x**3) * ((y_6)**2) + 
            L0x20019860_f * (x**0) * ((y_6)**3) + 
            L0x20019862_f * (x**1) * ((y_6)**3) + 
            L0x20019864_f * (x**2) * ((y_6)**3) + 
            L0x20019866_f * (x**3) * ((y_6)**3) + 
            L0x20019868_f * (x**0) * ((y_6)**4) + 
            L0x2001986a_f * (x**1) * ((y_6)**4) + 
            L0x2001986c_f * (x**2) * ((y_6)**4) + 
            L0x2001986e_f * (x**3) * ((y_6)**4) + 
            L0x20019870_f * (x**0) * ((y_6)**5) + 
            L0x20019872_f * (x**1) * ((y_6)**5) + 
            L0x20019874_f * (x**2) * ((y_6)**5) + 
            L0x20019876_f * (x**3) * ((y_6)**5) + 
            L0x20019878_f * (x**0) * ((y_6)**6) + 
            L0x2001987a_f * (x**1) * ((y_6)**6) + 
            L0x2001987c_f * (x**2) * ((y_6)**6) + 
            L0x2001987e_f * (x**3) * ((y_6)**6) + 
            L0x20019880_f * (x**0) * ((y_6)**7) + 
            L0x20019882_f * (x**1) * ((y_6)**7) + 
            L0x20019884_f * (x**2) * ((y_6)**7) + 
            L0x20019886_f * (x**3) * ((y_6)**7) + 
            L0x20019888_f * (x**0) * ((y_6)**8) + 
            L0x2001988a_f * (x**1) * ((y_6)**8) + 
            L0x2001988c_f * (x**2) * ((y_6)**8) + 
            L0x2001988e_f * (x**3) * ((y_6)**8) + 
            L0x20019890_f * (x**0) * ((y_6)**9) + 
            L0x20019892_f * (x**1) * ((y_6)**9) + 
            L0x20019894_f * (x**2) * ((y_6)**9) + 
            L0x20019896_f * (x**3) * ((y_6)**9) + 
            L0x20019898_f * (x**0) * ((y_6)**10) + 
            L0x2001989a_f * (x**1) * ((y_6)**10) + 
            L0x2001989c_f * (x**2) * ((y_6)**10) + 
            L0x2001989e_f * (x**3) * ((y_6)**10) + 
            L0x200198a0_f * (x**0) * ((y_6)**11) + 
            L0x200198a2_f * (x**1) * ((y_6)**11) + 
            L0x200198a4_f * (x**2) * ((y_6)**11) + 
            L0x200198a6_f * (x**3) * ((y_6)**11) + 
            L0x200198a8_f * (x**0) * ((y_6)**12) + 
            L0x200198aa_f * (x**1) * ((y_6)**12) + 
            L0x200198ac_f * (x**2) * ((y_6)**12) + 
            L0x200198ae_f * (x**3) * ((y_6)**12) + 
            L0x200198b0_f * (x**0) * ((y_6)**13) + 
            L0x200198b2_f * (x**1) * ((y_6)**13) + 
            L0x200198b4_f * (x**2) * ((y_6)**13) + 
            L0x200198b6_f * (x**3) * ((y_6)**13) + 
            L0x200198b8_f * (x**0) * ((y_6)**14) + 
            L0x200198ba_f * (x**1) * ((y_6)**14) + 
            L0x200198bc_f * (x**2) * ((y_6)**14) + 
            L0x200198be_f * (x**3) * ((y_6)**14) + 
            L0x200198c0_f * (x**0) * ((y_6)**15) + 
            L0x200198c2_f * (x**1) * ((y_6)**15) + 
            L0x200198c4_f * (x**2) * ((y_6)**15) + 
            L0x200198c6_f * (x**3) * ((y_6)**15) + 
            L0x200198c8_f * (x**0) * ((y_6)**16) + 
            L0x200198ca_f * (x**1) * ((y_6)**16) + 
            L0x200198cc_f * (x**2) * ((y_6)**16) + 
            L0x200198ce_f * (x**3) * ((y_6)**16) + 
            L0x200198d0_f * (x**0) * ((y_6)**17) + 
            L0x200198d2_f * (x**1) * ((y_6)**17) + 
            L0x200198d4_f * (x**2) * ((y_6)**17) + 
            L0x200198d6_f * (x**3) * ((y_6)**17) + 
            L0x200198d8_f * (x**0) * ((y_6)**18) + 
            L0x200198da_f * (x**1) * ((y_6)**18) + 
            L0x200198dc_f * (x**2) * ((y_6)**18) + 
            L0x200198de_f * (x**3) * ((y_6)**18) + 
            L0x200198e0_f * (x**0) * ((y_6)**19) + 
            L0x200198e2_f * (x**1) * ((y_6)**19) + 
            L0x200198e4_f * (x**2) * ((y_6)**19) + 
            L0x200198e6_f * (x**3) * ((y_6)**19) + 
            L0x200198e8_f * (x**0) * ((y_6)**20) + 
            L0x200198ea_f * (x**1) * ((y_6)**20) + 
            L0x200198ec_f * (x**2) * ((y_6)**20) + 
            L0x200198ee_f * (x**3) * ((y_6)**20) + 
            L0x200198f0_f * (x**0) * ((y_6)**21) + 
            L0x200198f2_f * (x**1) * ((y_6)**21) + 
            L0x200198f4_f * (x**2) * ((y_6)**21) + 
            L0x200198f6_f * (x**3) * ((y_6)**21) + 
            L0x200198f8_f * (x**0) * ((y_6)**22) + 
            L0x200198fa_f * (x**1) * ((y_6)**22) + 
            L0x200198fc_f * (x**2) * ((y_6)**22) + 
            L0x200198fe_f * (x**3) * ((y_6)**22) + 
            L0x20019900_f * (x**0) * ((y_6)**23) + 
            L0x20019902_f * (x**1) * ((y_6)**23) + 
            L0x20019904_f * (x**2) * ((y_6)**23) + 
            L0x20019906_f * (x**3) * ((y_6)**23) + 
            L0x20019908_f * (x**0) * ((y_6)**24) + 
            L0x2001990a_f * (x**1) * ((y_6)**24) + 
            L0x2001990c_f * (x**2) * ((y_6)**24) + 
            L0x2001990e_f * (x**3) * ((y_6)**24) + 
            L0x20019910_f * (x**0) * ((y_6)**25) + 
            L0x20019912_f * (x**1) * ((y_6)**25) + 
            L0x20019914_f * (x**2) * ((y_6)**25) + 
            L0x20019916_f * (x**3) * ((y_6)**25) + 
            L0x20019918_f * (x**0) * ((y_6)**26) + 
            L0x2001991a_f * (x**1) * ((y_6)**26) + 
            L0x2001991c_f * (x**2) * ((y_6)**26) + 
            L0x2001991e_f * (x**3) * ((y_6)**26) + 
            L0x20019920_f * (x**0) * ((y_6)**27) + 
            L0x20019922_f * (x**1) * ((y_6)**27) + 
            L0x20019924_f * (x**2) * ((y_6)**27) + 
            L0x20019926_f * (x**3) * ((y_6)**27) + 
            L0x20019928_f * (x**0) * ((y_6)**28) + 
            L0x2001992a_f * (x**1) * ((y_6)**28) + 
            L0x2001992c_f * (x**2) * ((y_6)**28) + 
            L0x2001992e_f * (x**3) * ((y_6)**28) + 
            L0x20019930_f * (x**0) * ((y_6)**29) + 
            L0x20019932_f * (x**1) * ((y_6)**29) + 
            L0x20019934_f * (x**2) * ((y_6)**29) + 
            L0x20019936_f * (x**3) * ((y_6)**29) + 
            L0x20019938_f * (x**0) * ((y_6)**30) + 
            L0x2001993a_f * (x**1) * ((y_6)**30) + 
            L0x2001993c_f * (x**2) * ((y_6)**30) + 
            L0x2001993e_f * (x**3) * ((y_6)**30) + 
            L0x20019940_f * (x**0) * ((y_6)**31) + 
            L0x20019942_f * (x**1) * ((y_6)**31) + 
            L0x20019944_f * (x**2) * ((y_6)**31) + 
            L0x20019946_f * (x**3) * ((y_6)**31) + 
            L0x20019948_f * (x**0) * ((y_6)**32) + 
            L0x2001994a_f * (x**1) * ((y_6)**32) + 
            L0x2001994c_f * (x**2) * ((y_6)**32) + 
            L0x2001994e_f * (x**3) * ((y_6)**32) + 
            L0x20019950_f * (x**0) * ((y_6)**33) + 
            L0x20019952_f * (x**1) * ((y_6)**33) + 
            L0x20019954_f * (x**2) * ((y_6)**33) + 
            L0x20019956_f * (x**3) * ((y_6)**33) + 
            L0x20019958_f * (x**0) * ((y_6)**34) + 
            L0x2001995a_f * (x**1) * ((y_6)**34) + 
            L0x2001995c_f * (x**2) * ((y_6)**34) + 
            L0x2001995e_f * (x**3) * ((y_6)**34) + 
            L0x20019960_f * (x**0) * ((y_6)**35) + 
            L0x20019962_f * (x**1) * ((y_6)**35) + 
            L0x20019964_f * (x**2) * ((y_6)**35) + 
            L0x20019966_f * (x**3) * ((y_6)**35) + 
            L0x20019968_f * (x**0) * ((y_6)**36) + 
            L0x2001996a_f * (x**1) * ((y_6)**36) + 
            L0x2001996c_f * (x**2) * ((y_6)**36) + 
            L0x2001996e_f * (x**3) * ((y_6)**36) + 
            L0x20019970_f * (x**0) * ((y_6)**37) + 
            L0x20019972_f * (x**1) * ((y_6)**37) + 
            L0x20019974_f * (x**2) * ((y_6)**37) + 
            L0x20019976_f * (x**3) * ((y_6)**37) + 
            L0x20019978_f * (x**0) * ((y_6)**38) + 
            L0x2001997a_f * (x**1) * ((y_6)**38) + 
            L0x2001997c_f * (x**2) * ((y_6)**38) + 
            L0x2001997e_f * (x**3) * ((y_6)**38) + 
            L0x20019980_f * (x**0) * ((y_6)**39) + 
            L0x20019982_f * (x**1) * ((y_6)**39) + 
            L0x20019984_f * (x**2) * ((y_6)**39) + 
            L0x20019986_f * (x**3) * ((y_6)**39) + 
            L0x20019988_f * (x**0) * ((y_6)**40) + 
            L0x2001998a_f * (x**1) * ((y_6)**40) + 
            L0x2001998c_f * (x**2) * ((y_6)**40) + 
            L0x2001998e_f * (x**3) * ((y_6)**40) + 
            L0x20019990_f * (x**0) * ((y_6)**41) + 
            L0x20019992_f * (x**1) * ((y_6)**41) + 
            L0x20019994_f * (x**2) * ((y_6)**41) + 
            L0x20019996_f * (x**3) * ((y_6)**41) + 
            L0x20019998_f * (x**0) * ((y_6)**42) + 
            L0x2001999a_f * (x**1) * ((y_6)**42) + 
            L0x2001999c_f * (x**2) * ((y_6)**42) + 
            L0x2001999e_f * (x**3) * ((y_6)**42) + 
            L0x200199a0_f * (x**0) * ((y_6)**43) + 
            L0x200199a2_f * (x**1) * ((y_6)**43) + 
            L0x200199a4_f * (x**2) * ((y_6)**43) + 
            L0x200199a6_f * (x**3) * ((y_6)**43) + 
            L0x200199a8_f * (x**0) * ((y_6)**44) + 
            L0x200199aa_f * (x**1) * ((y_6)**44) + 
            L0x200199ac_f * (x**2) * ((y_6)**44) + 
            L0x200199ae_f * (x**3) * ((y_6)**44) + 
            L0x200199b0_f * (x**0) * ((y_6)**45) + 
            L0x200199b2_f * (x**1) * ((y_6)**45) + 
            L0x200199b4_f * (x**2) * ((y_6)**45) + 
            L0x200199b6_f * (x**3) * ((y_6)**45) + 
            L0x200199b8_f * (x**0) * ((y_6)**46) + 
            L0x200199ba_f * (x**1) * ((y_6)**46) + 
            L0x200199bc_f * (x**2) * ((y_6)**46) + 
            L0x200199be_f * (x**3) * ((y_6)**46) + 
            L0x200199c0_f * (x**0) * ((y_6)**47) + 
            L0x200199c2_f * (x**1) * ((y_6)**47) + 
            L0x200199c4_f * (x**2) * ((y_6)**47) + 
            L0x200199c6_f * (x**3) * ((y_6)**47) + 
            L0x200199c8_f * (x**0) * ((y_6)**48) + 
            L0x200199ca_f * (x**1) * ((y_6)**48) + 
            L0x200199cc_f * (x**2) * ((y_6)**48) + 
            L0x200199ce_f * (x**3) * ((y_6)**48) + 
            L0x200199d0_f * (x**0) * ((y_6)**49) + 
            L0x200199d2_f * (x**1) * ((y_6)**49) + 
            L0x200199d4_f * (x**2) * ((y_6)**49) + 
            L0x200199d6_f * (x**3) * ((y_6)**49) + 
            L0x200199d8_f * (x**0) * ((y_6)**50) + 
            L0x200199da_f * (x**1) * ((y_6)**50) + 
            L0x200199dc_f * (x**2) * ((y_6)**50) + 
            L0x200199de_f * (x**3) * ((y_6)**50) + 
            L0x200199e0_f * (x**0) * ((y_6)**51) + 
            L0x200199e2_f * (x**1) * ((y_6)**51) + 
            L0x200199e4_f * (x**2) * ((y_6)**51) + 
            L0x200199e6_f * (x**3) * ((y_6)**51) + 
            L0x200199e8_f * (x**0) * ((y_6)**52) + 
            L0x200199ea_f * (x**1) * ((y_6)**52) + 
            L0x200199ec_f * (x**2) * ((y_6)**52) + 
            L0x200199ee_f * (x**3) * ((y_6)**52) + 
            L0x200199f0_f * (x**0) * ((y_6)**53) + 
            L0x200199f2_f * (x**1) * ((y_6)**53) + 
            L0x200199f4_f * (x**2) * ((y_6)**53) + 
            L0x200199f6_f * (x**3) * ((y_6)**53) + 
            L0x200199f8_f * (x**0) * ((y_6)**54) + 
            L0x200199fa_f * (x**1) * ((y_6)**54) + 
            L0x200199fc_f * (x**2) * ((y_6)**54) + 
            L0x200199fe_f * (x**3) * ((y_6)**54) + 
            L0x20019a00_f * (x**0) * ((y_6)**55) + 
            L0x20019a02_f * (x**1) * ((y_6)**55) + 
            L0x20019a04_f * (x**2) * ((y_6)**55) + 
            L0x20019a06_f * (x**3) * ((y_6)**55) + 
            L0x20019a08_f * (x**0) * ((y_6)**56) + 
            L0x20019a0a_f * (x**1) * ((y_6)**56) + 
            L0x20019a0c_f * (x**2) * ((y_6)**56) + 
            L0x20019a0e_f * (x**3) * ((y_6)**56) + 
            L0x20019a10_f * (x**0) * ((y_6)**57) + 
            L0x20019a12_f * (x**1) * ((y_6)**57) + 
            L0x20019a14_f * (x**2) * ((y_6)**57) + 
            L0x20019a16_f * (x**3) * ((y_6)**57) + 
            L0x20019a18_f * (x**0) * ((y_6)**58) + 
            L0x20019a1a_f * (x**1) * ((y_6)**58) + 
            L0x20019a1c_f * (x**2) * ((y_6)**58) + 
            L0x20019a1e_f * (x**3) * ((y_6)**58) + 
            L0x20019a20_f * (x**0) * ((y_6)**59) + 
            L0x20019a22_f * (x**1) * ((y_6)**59) + 
            L0x20019a24_f * (x**2) * ((y_6)**59) + 
            L0x20019a26_f * (x**3) * ((y_6)**59) + 
            L0x20019a28_f * (x**0) * ((y_6)**60) + 
            L0x20019a2a_f * (x**1) * ((y_6)**60) + 
            L0x20019a2c_f * (x**2) * ((y_6)**60) + 
            L0x20019a2e_f * (x**3) * ((y_6)**60) + 
            L0x20019a30_f * (x**0) * ((y_6)**61) + 
            L0x20019a32_f * (x**1) * ((y_6)**61) + 
            L0x20019a34_f * (x**2) * ((y_6)**61) + 
            L0x20019a36_f * (x**3) * ((y_6)**61) + 
            L0x20019a38_f * (x**0) * ((y_6)**62) + 
            L0x20019a3a_f * (x**1) * ((y_6)**62) + 
            L0x20019a3c_f * (x**2) * ((y_6)**62) + 
            L0x20019a3e_f * (x**3) * ((y_6)**62) + 
            L0x20019a40_f * (x**0) * ((y_6)**63) + 
            L0x20019a42_f * (x**1) * ((y_6)**63) + 
            L0x20019a44_f * (x**2) * ((y_6)**63) + 
            L0x20019a46_f * (x**3) * ((y_6)**63)
          )
          [25570049, x**4 - y_0_62 * 18761234, y_0_62 - 1],
    (* inp_poly_63 *)
    eqmod (2**32) * (inp_poly_63 * inp_poly_63)
          (
            L0x20019848_f * (x**0) * ((y_6)**0) + 
            L0x2001984a_f * (x**1) * ((y_6)**0) + 
            L0x2001984c_f * (x**2) * ((y_6)**0) + 
            L0x2001984e_f * (x**3) * ((y_6)**0) + 
            L0x20019850_f * (x**0) * ((y_6)**1) + 
            L0x20019852_f * (x**1) * ((y_6)**1) + 
            L0x20019854_f * (x**2) * ((y_6)**1) + 
            L0x20019856_f * (x**3) * ((y_6)**1) + 
            L0x20019858_f * (x**0) * ((y_6)**2) + 
            L0x2001985a_f * (x**1) * ((y_6)**2) + 
            L0x2001985c_f * (x**2) * ((y_6)**2) + 
            L0x2001985e_f * (x**3) * ((y_6)**2) + 
            L0x20019860_f * (x**0) * ((y_6)**3) + 
            L0x20019862_f * (x**1) * ((y_6)**3) + 
            L0x20019864_f * (x**2) * ((y_6)**3) + 
            L0x20019866_f * (x**3) * ((y_6)**3) + 
            L0x20019868_f * (x**0) * ((y_6)**4) + 
            L0x2001986a_f * (x**1) * ((y_6)**4) + 
            L0x2001986c_f * (x**2) * ((y_6)**4) + 
            L0x2001986e_f * (x**3) * ((y_6)**4) + 
            L0x20019870_f * (x**0) * ((y_6)**5) + 
            L0x20019872_f * (x**1) * ((y_6)**5) + 
            L0x20019874_f * (x**2) * ((y_6)**5) + 
            L0x20019876_f * (x**3) * ((y_6)**5) + 
            L0x20019878_f * (x**0) * ((y_6)**6) + 
            L0x2001987a_f * (x**1) * ((y_6)**6) + 
            L0x2001987c_f * (x**2) * ((y_6)**6) + 
            L0x2001987e_f * (x**3) * ((y_6)**6) + 
            L0x20019880_f * (x**0) * ((y_6)**7) + 
            L0x20019882_f * (x**1) * ((y_6)**7) + 
            L0x20019884_f * (x**2) * ((y_6)**7) + 
            L0x20019886_f * (x**3) * ((y_6)**7) + 
            L0x20019888_f * (x**0) * ((y_6)**8) + 
            L0x2001988a_f * (x**1) * ((y_6)**8) + 
            L0x2001988c_f * (x**2) * ((y_6)**8) + 
            L0x2001988e_f * (x**3) * ((y_6)**8) + 
            L0x20019890_f * (x**0) * ((y_6)**9) + 
            L0x20019892_f * (x**1) * ((y_6)**9) + 
            L0x20019894_f * (x**2) * ((y_6)**9) + 
            L0x20019896_f * (x**3) * ((y_6)**9) + 
            L0x20019898_f * (x**0) * ((y_6)**10) + 
            L0x2001989a_f * (x**1) * ((y_6)**10) + 
            L0x2001989c_f * (x**2) * ((y_6)**10) + 
            L0x2001989e_f * (x**3) * ((y_6)**10) + 
            L0x200198a0_f * (x**0) * ((y_6)**11) + 
            L0x200198a2_f * (x**1) * ((y_6)**11) + 
            L0x200198a4_f * (x**2) * ((y_6)**11) + 
            L0x200198a6_f * (x**3) * ((y_6)**11) + 
            L0x200198a8_f * (x**0) * ((y_6)**12) + 
            L0x200198aa_f * (x**1) * ((y_6)**12) + 
            L0x200198ac_f * (x**2) * ((y_6)**12) + 
            L0x200198ae_f * (x**3) * ((y_6)**12) + 
            L0x200198b0_f * (x**0) * ((y_6)**13) + 
            L0x200198b2_f * (x**1) * ((y_6)**13) + 
            L0x200198b4_f * (x**2) * ((y_6)**13) + 
            L0x200198b6_f * (x**3) * ((y_6)**13) + 
            L0x200198b8_f * (x**0) * ((y_6)**14) + 
            L0x200198ba_f * (x**1) * ((y_6)**14) + 
            L0x200198bc_f * (x**2) * ((y_6)**14) + 
            L0x200198be_f * (x**3) * ((y_6)**14) + 
            L0x200198c0_f * (x**0) * ((y_6)**15) + 
            L0x200198c2_f * (x**1) * ((y_6)**15) + 
            L0x200198c4_f * (x**2) * ((y_6)**15) + 
            L0x200198c6_f * (x**3) * ((y_6)**15) + 
            L0x200198c8_f * (x**0) * ((y_6)**16) + 
            L0x200198ca_f * (x**1) * ((y_6)**16) + 
            L0x200198cc_f * (x**2) * ((y_6)**16) + 
            L0x200198ce_f * (x**3) * ((y_6)**16) + 
            L0x200198d0_f * (x**0) * ((y_6)**17) + 
            L0x200198d2_f * (x**1) * ((y_6)**17) + 
            L0x200198d4_f * (x**2) * ((y_6)**17) + 
            L0x200198d6_f * (x**3) * ((y_6)**17) + 
            L0x200198d8_f * (x**0) * ((y_6)**18) + 
            L0x200198da_f * (x**1) * ((y_6)**18) + 
            L0x200198dc_f * (x**2) * ((y_6)**18) + 
            L0x200198de_f * (x**3) * ((y_6)**18) + 
            L0x200198e0_f * (x**0) * ((y_6)**19) + 
            L0x200198e2_f * (x**1) * ((y_6)**19) + 
            L0x200198e4_f * (x**2) * ((y_6)**19) + 
            L0x200198e6_f * (x**3) * ((y_6)**19) + 
            L0x200198e8_f * (x**0) * ((y_6)**20) + 
            L0x200198ea_f * (x**1) * ((y_6)**20) + 
            L0x200198ec_f * (x**2) * ((y_6)**20) + 
            L0x200198ee_f * (x**3) * ((y_6)**20) + 
            L0x200198f0_f * (x**0) * ((y_6)**21) + 
            L0x200198f2_f * (x**1) * ((y_6)**21) + 
            L0x200198f4_f * (x**2) * ((y_6)**21) + 
            L0x200198f6_f * (x**3) * ((y_6)**21) + 
            L0x200198f8_f * (x**0) * ((y_6)**22) + 
            L0x200198fa_f * (x**1) * ((y_6)**22) + 
            L0x200198fc_f * (x**2) * ((y_6)**22) + 
            L0x200198fe_f * (x**3) * ((y_6)**22) + 
            L0x20019900_f * (x**0) * ((y_6)**23) + 
            L0x20019902_f * (x**1) * ((y_6)**23) + 
            L0x20019904_f * (x**2) * ((y_6)**23) + 
            L0x20019906_f * (x**3) * ((y_6)**23) + 
            L0x20019908_f * (x**0) * ((y_6)**24) + 
            L0x2001990a_f * (x**1) * ((y_6)**24) + 
            L0x2001990c_f * (x**2) * ((y_6)**24) + 
            L0x2001990e_f * (x**3) * ((y_6)**24) + 
            L0x20019910_f * (x**0) * ((y_6)**25) + 
            L0x20019912_f * (x**1) * ((y_6)**25) + 
            L0x20019914_f * (x**2) * ((y_6)**25) + 
            L0x20019916_f * (x**3) * ((y_6)**25) + 
            L0x20019918_f * (x**0) * ((y_6)**26) + 
            L0x2001991a_f * (x**1) * ((y_6)**26) + 
            L0x2001991c_f * (x**2) * ((y_6)**26) + 
            L0x2001991e_f * (x**3) * ((y_6)**26) + 
            L0x20019920_f * (x**0) * ((y_6)**27) + 
            L0x20019922_f * (x**1) * ((y_6)**27) + 
            L0x20019924_f * (x**2) * ((y_6)**27) + 
            L0x20019926_f * (x**3) * ((y_6)**27) + 
            L0x20019928_f * (x**0) * ((y_6)**28) + 
            L0x2001992a_f * (x**1) * ((y_6)**28) + 
            L0x2001992c_f * (x**2) * ((y_6)**28) + 
            L0x2001992e_f * (x**3) * ((y_6)**28) + 
            L0x20019930_f * (x**0) * ((y_6)**29) + 
            L0x20019932_f * (x**1) * ((y_6)**29) + 
            L0x20019934_f * (x**2) * ((y_6)**29) + 
            L0x20019936_f * (x**3) * ((y_6)**29) + 
            L0x20019938_f * (x**0) * ((y_6)**30) + 
            L0x2001993a_f * (x**1) * ((y_6)**30) + 
            L0x2001993c_f * (x**2) * ((y_6)**30) + 
            L0x2001993e_f * (x**3) * ((y_6)**30) + 
            L0x20019940_f * (x**0) * ((y_6)**31) + 
            L0x20019942_f * (x**1) * ((y_6)**31) + 
            L0x20019944_f * (x**2) * ((y_6)**31) + 
            L0x20019946_f * (x**3) * ((y_6)**31) + 
            L0x20019948_f * (x**0) * ((y_6)**32) + 
            L0x2001994a_f * (x**1) * ((y_6)**32) + 
            L0x2001994c_f * (x**2) * ((y_6)**32) + 
            L0x2001994e_f * (x**3) * ((y_6)**32) + 
            L0x20019950_f * (x**0) * ((y_6)**33) + 
            L0x20019952_f * (x**1) * ((y_6)**33) + 
            L0x20019954_f * (x**2) * ((y_6)**33) + 
            L0x20019956_f * (x**3) * ((y_6)**33) + 
            L0x20019958_f * (x**0) * ((y_6)**34) + 
            L0x2001995a_f * (x**1) * ((y_6)**34) + 
            L0x2001995c_f * (x**2) * ((y_6)**34) + 
            L0x2001995e_f * (x**3) * ((y_6)**34) + 
            L0x20019960_f * (x**0) * ((y_6)**35) + 
            L0x20019962_f * (x**1) * ((y_6)**35) + 
            L0x20019964_f * (x**2) * ((y_6)**35) + 
            L0x20019966_f * (x**3) * ((y_6)**35) + 
            L0x20019968_f * (x**0) * ((y_6)**36) + 
            L0x2001996a_f * (x**1) * ((y_6)**36) + 
            L0x2001996c_f * (x**2) * ((y_6)**36) + 
            L0x2001996e_f * (x**3) * ((y_6)**36) + 
            L0x20019970_f * (x**0) * ((y_6)**37) + 
            L0x20019972_f * (x**1) * ((y_6)**37) + 
            L0x20019974_f * (x**2) * ((y_6)**37) + 
            L0x20019976_f * (x**3) * ((y_6)**37) + 
            L0x20019978_f * (x**0) * ((y_6)**38) + 
            L0x2001997a_f * (x**1) * ((y_6)**38) + 
            L0x2001997c_f * (x**2) * ((y_6)**38) + 
            L0x2001997e_f * (x**3) * ((y_6)**38) + 
            L0x20019980_f * (x**0) * ((y_6)**39) + 
            L0x20019982_f * (x**1) * ((y_6)**39) + 
            L0x20019984_f * (x**2) * ((y_6)**39) + 
            L0x20019986_f * (x**3) * ((y_6)**39) + 
            L0x20019988_f * (x**0) * ((y_6)**40) + 
            L0x2001998a_f * (x**1) * ((y_6)**40) + 
            L0x2001998c_f * (x**2) * ((y_6)**40) + 
            L0x2001998e_f * (x**3) * ((y_6)**40) + 
            L0x20019990_f * (x**0) * ((y_6)**41) + 
            L0x20019992_f * (x**1) * ((y_6)**41) + 
            L0x20019994_f * (x**2) * ((y_6)**41) + 
            L0x20019996_f * (x**3) * ((y_6)**41) + 
            L0x20019998_f * (x**0) * ((y_6)**42) + 
            L0x2001999a_f * (x**1) * ((y_6)**42) + 
            L0x2001999c_f * (x**2) * ((y_6)**42) + 
            L0x2001999e_f * (x**3) * ((y_6)**42) + 
            L0x200199a0_f * (x**0) * ((y_6)**43) + 
            L0x200199a2_f * (x**1) * ((y_6)**43) + 
            L0x200199a4_f * (x**2) * ((y_6)**43) + 
            L0x200199a6_f * (x**3) * ((y_6)**43) + 
            L0x200199a8_f * (x**0) * ((y_6)**44) + 
            L0x200199aa_f * (x**1) * ((y_6)**44) + 
            L0x200199ac_f * (x**2) * ((y_6)**44) + 
            L0x200199ae_f * (x**3) * ((y_6)**44) + 
            L0x200199b0_f * (x**0) * ((y_6)**45) + 
            L0x200199b2_f * (x**1) * ((y_6)**45) + 
            L0x200199b4_f * (x**2) * ((y_6)**45) + 
            L0x200199b6_f * (x**3) * ((y_6)**45) + 
            L0x200199b8_f * (x**0) * ((y_6)**46) + 
            L0x200199ba_f * (x**1) * ((y_6)**46) + 
            L0x200199bc_f * (x**2) * ((y_6)**46) + 
            L0x200199be_f * (x**3) * ((y_6)**46) + 
            L0x200199c0_f * (x**0) * ((y_6)**47) + 
            L0x200199c2_f * (x**1) * ((y_6)**47) + 
            L0x200199c4_f * (x**2) * ((y_6)**47) + 
            L0x200199c6_f * (x**3) * ((y_6)**47) + 
            L0x200199c8_f * (x**0) * ((y_6)**48) + 
            L0x200199ca_f * (x**1) * ((y_6)**48) + 
            L0x200199cc_f * (x**2) * ((y_6)**48) + 
            L0x200199ce_f * (x**3) * ((y_6)**48) + 
            L0x200199d0_f * (x**0) * ((y_6)**49) + 
            L0x200199d2_f * (x**1) * ((y_6)**49) + 
            L0x200199d4_f * (x**2) * ((y_6)**49) + 
            L0x200199d6_f * (x**3) * ((y_6)**49) + 
            L0x200199d8_f * (x**0) * ((y_6)**50) + 
            L0x200199da_f * (x**1) * ((y_6)**50) + 
            L0x200199dc_f * (x**2) * ((y_6)**50) + 
            L0x200199de_f * (x**3) * ((y_6)**50) + 
            L0x200199e0_f * (x**0) * ((y_6)**51) + 
            L0x200199e2_f * (x**1) * ((y_6)**51) + 
            L0x200199e4_f * (x**2) * ((y_6)**51) + 
            L0x200199e6_f * (x**3) * ((y_6)**51) + 
            L0x200199e8_f * (x**0) * ((y_6)**52) + 
            L0x200199ea_f * (x**1) * ((y_6)**52) + 
            L0x200199ec_f * (x**2) * ((y_6)**52) + 
            L0x200199ee_f * (x**3) * ((y_6)**52) + 
            L0x200199f0_f * (x**0) * ((y_6)**53) + 
            L0x200199f2_f * (x**1) * ((y_6)**53) + 
            L0x200199f4_f * (x**2) * ((y_6)**53) + 
            L0x200199f6_f * (x**3) * ((y_6)**53) + 
            L0x200199f8_f * (x**0) * ((y_6)**54) + 
            L0x200199fa_f * (x**1) * ((y_6)**54) + 
            L0x200199fc_f * (x**2) * ((y_6)**54) + 
            L0x200199fe_f * (x**3) * ((y_6)**54) + 
            L0x20019a00_f * (x**0) * ((y_6)**55) + 
            L0x20019a02_f * (x**1) * ((y_6)**55) + 
            L0x20019a04_f * (x**2) * ((y_6)**55) + 
            L0x20019a06_f * (x**3) * ((y_6)**55) + 
            L0x20019a08_f * (x**0) * ((y_6)**56) + 
            L0x20019a0a_f * (x**1) * ((y_6)**56) + 
            L0x20019a0c_f * (x**2) * ((y_6)**56) + 
            L0x20019a0e_f * (x**3) * ((y_6)**56) + 
            L0x20019a10_f * (x**0) * ((y_6)**57) + 
            L0x20019a12_f * (x**1) * ((y_6)**57) + 
            L0x20019a14_f * (x**2) * ((y_6)**57) + 
            L0x20019a16_f * (x**3) * ((y_6)**57) + 
            L0x20019a18_f * (x**0) * ((y_6)**58) + 
            L0x20019a1a_f * (x**1) * ((y_6)**58) + 
            L0x20019a1c_f * (x**2) * ((y_6)**58) + 
            L0x20019a1e_f * (x**3) * ((y_6)**58) + 
            L0x20019a20_f * (x**0) * ((y_6)**59) + 
            L0x20019a22_f * (x**1) * ((y_6)**59) + 
            L0x20019a24_f * (x**2) * ((y_6)**59) + 
            L0x20019a26_f * (x**3) * ((y_6)**59) + 
            L0x20019a28_f * (x**0) * ((y_6)**60) + 
            L0x20019a2a_f * (x**1) * ((y_6)**60) + 
            L0x20019a2c_f * (x**2) * ((y_6)**60) + 
            L0x20019a2e_f * (x**3) * ((y_6)**60) + 
            L0x20019a30_f * (x**0) * ((y_6)**61) + 
            L0x20019a32_f * (x**1) * ((y_6)**61) + 
            L0x20019a34_f * (x**2) * ((y_6)**61) + 
            L0x20019a36_f * (x**3) * ((y_6)**61) + 
            L0x20019a38_f * (x**0) * ((y_6)**62) + 
            L0x20019a3a_f * (x**1) * ((y_6)**62) + 
            L0x20019a3c_f * (x**2) * ((y_6)**62) + 
            L0x20019a3e_f * (x**3) * ((y_6)**62) + 
            L0x20019a40_f * (x**0) * ((y_6)**63) + 
            L0x20019a42_f * (x**1) * ((y_6)**63) + 
            L0x20019a44_f * (x**2) * ((y_6)**63) + 
            L0x20019a46_f * (x**3) * ((y_6)**63)
          )
          [25570049, x**4 - y_0_63 * 6808815, y_0_63 - 1]
  ] prove with [cuts [16, 34], all ghosts]
  &&
  true
;

(* === prove poly equivalence === *)
cut (* 53 *)
  true && true;

cut (* 54 *)
  (* algebraic *)
  eqmod (
          L0x20019848_f * (x**0) + L0x2001984a_f * (x**1) + 
          L0x2001984c_f * (x**2) + L0x2001984e_f * (x**3) + 
          L0x20019850_f * (x**4) + L0x20019852_f * (x**5) + 
          L0x20019854_f * (x**6) + L0x20019856_f * (x**7) + 
          L0x20019858_f * (x**8) + L0x2001985a_f * (x**9) + 
          L0x2001985c_f * (x**10) + L0x2001985e_f * (x**11) + 
          L0x20019860_f * (x**12) + L0x20019862_f * (x**13) + 
          L0x20019864_f * (x**14) + L0x20019866_f * (x**15) + 
          L0x20019868_f * (x**16) + L0x2001986a_f * (x**17) + 
          L0x2001986c_f * (x**18) + L0x2001986e_f * (x**19) + 
          L0x20019870_f * (x**20) + L0x20019872_f * (x**21) + 
          L0x20019874_f * (x**22) + L0x20019876_f * (x**23) + 
          L0x20019878_f * (x**24) + L0x2001987a_f * (x**25) + 
          L0x2001987c_f * (x**26) + L0x2001987e_f * (x**27) + 
          L0x20019880_f * (x**28) + L0x20019882_f * (x**29) + 
          L0x20019884_f * (x**30) + L0x20019886_f * (x**31) + 
          L0x20019888_f * (x**32) + L0x2001988a_f * (x**33) + 
          L0x2001988c_f * (x**34) + L0x2001988e_f * (x**35) + 
          L0x20019890_f * (x**36) + L0x20019892_f * (x**37) + 
          L0x20019894_f * (x**38) + L0x20019896_f * (x**39) + 
          L0x20019898_f * (x**40) + L0x2001989a_f * (x**41) + 
          L0x2001989c_f * (x**42) + L0x2001989e_f * (x**43) + 
          L0x200198a0_f * (x**44) + L0x200198a2_f * (x**45) + 
          L0x200198a4_f * (x**46) + L0x200198a6_f * (x**47) + 
          L0x200198a8_f * (x**48) + L0x200198aa_f * (x**49) + 
          L0x200198ac_f * (x**50) + L0x200198ae_f * (x**51) + 
          L0x200198b0_f * (x**52) + L0x200198b2_f * (x**53) + 
          L0x200198b4_f * (x**54) + L0x200198b6_f * (x**55) + 
          L0x200198b8_f * (x**56) + L0x200198ba_f * (x**57) + 
          L0x200198bc_f * (x**58) + L0x200198be_f * (x**59) + 
          L0x200198c0_f * (x**60) + L0x200198c2_f * (x**61) + 
          L0x200198c4_f * (x**62) + L0x200198c6_f * (x**63) + 
          L0x200198c8_f * (x**64) + L0x200198ca_f * (x**65) + 
          L0x200198cc_f * (x**66) + L0x200198ce_f * (x**67) + 
          L0x200198d0_f * (x**68) + L0x200198d2_f * (x**69) + 
          L0x200198d4_f * (x**70) + L0x200198d6_f * (x**71) + 
          L0x200198d8_f * (x**72) + L0x200198da_f * (x**73) + 
          L0x200198dc_f * (x**74) + L0x200198de_f * (x**75) + 
          L0x200198e0_f * (x**76) + L0x200198e2_f * (x**77) + 
          L0x200198e4_f * (x**78) + L0x200198e6_f * (x**79) + 
          L0x200198e8_f * (x**80) + L0x200198ea_f * (x**81) + 
          L0x200198ec_f * (x**82) + L0x200198ee_f * (x**83) + 
          L0x200198f0_f * (x**84) + L0x200198f2_f * (x**85) + 
          L0x200198f4_f * (x**86) + L0x200198f6_f * (x**87) + 
          L0x200198f8_f * (x**88) + L0x200198fa_f * (x**89) + 
          L0x200198fc_f * (x**90) + L0x200198fe_f * (x**91) + 
          L0x20019900_f * (x**92) + L0x20019902_f * (x**93) + 
          L0x20019904_f * (x**94) + L0x20019906_f * (x**95) + 
          L0x20019908_f * (x**96) + L0x2001990a_f * (x**97) + 
          L0x2001990c_f * (x**98) + L0x2001990e_f * (x**99) + 
          L0x20019910_f * (x**100) + L0x20019912_f * (x**101) + 
          L0x20019914_f * (x**102) + L0x20019916_f * (x**103) + 
          L0x20019918_f * (x**104) + L0x2001991a_f * (x**105) + 
          L0x2001991c_f * (x**106) + L0x2001991e_f * (x**107) + 
          L0x20019920_f * (x**108) + L0x20019922_f * (x**109) + 
          L0x20019924_f * (x**110) + L0x20019926_f * (x**111) + 
          L0x20019928_f * (x**112) + L0x2001992a_f * (x**113) + 
          L0x2001992c_f * (x**114) + L0x2001992e_f * (x**115) + 
          L0x20019930_f * (x**116) + L0x20019932_f * (x**117) + 
          L0x20019934_f * (x**118) + L0x20019936_f * (x**119) + 
          L0x20019938_f * (x**120) + L0x2001993a_f * (x**121) + 
          L0x2001993c_f * (x**122) + L0x2001993e_f * (x**123) + 
          L0x20019940_f * (x**124) + L0x20019942_f * (x**125) + 
          L0x20019944_f * (x**126) + L0x20019946_f * (x**127) + 
          L0x20019948_f * (x**128) + L0x2001994a_f * (x**129) + 
          L0x2001994c_f * (x**130) + L0x2001994e_f * (x**131) + 
          L0x20019950_f * (x**132) + L0x20019952_f * (x**133) + 
          L0x20019954_f * (x**134) + L0x20019956_f * (x**135) + 
          L0x20019958_f * (x**136) + L0x2001995a_f * (x**137) + 
          L0x2001995c_f * (x**138) + L0x2001995e_f * (x**139) + 
          L0x20019960_f * (x**140) + L0x20019962_f * (x**141) + 
          L0x20019964_f * (x**142) + L0x20019966_f * (x**143) + 
          L0x20019968_f * (x**144) + L0x2001996a_f * (x**145) + 
          L0x2001996c_f * (x**146) + L0x2001996e_f * (x**147) + 
          L0x20019970_f * (x**148) + L0x20019972_f * (x**149) + 
          L0x20019974_f * (x**150) + L0x20019976_f * (x**151) + 
          L0x20019978_f * (x**152) + L0x2001997a_f * (x**153) + 
          L0x2001997c_f * (x**154) + L0x2001997e_f * (x**155) + 
          L0x20019980_f * (x**156) + L0x20019982_f * (x**157) + 
          L0x20019984_f * (x**158) + L0x20019986_f * (x**159) + 
          L0x20019988_f * (x**160) + L0x2001998a_f * (x**161) + 
          L0x2001998c_f * (x**162) + L0x2001998e_f * (x**163) + 
          L0x20019990_f * (x**164) + L0x20019992_f * (x**165) + 
          L0x20019994_f * (x**166) + L0x20019996_f * (x**167) + 
          L0x20019998_f * (x**168) + L0x2001999a_f * (x**169) + 
          L0x2001999c_f * (x**170) + L0x2001999e_f * (x**171) + 
          L0x200199a0_f * (x**172) + L0x200199a2_f * (x**173) + 
          L0x200199a4_f * (x**174) + L0x200199a6_f * (x**175) + 
          L0x200199a8_f * (x**176) + L0x200199aa_f * (x**177) + 
          L0x200199ac_f * (x**178) + L0x200199ae_f * (x**179) + 
          L0x200199b0_f * (x**180) + L0x200199b2_f * (x**181) + 
          L0x200199b4_f * (x**182) + L0x200199b6_f * (x**183) + 
          L0x200199b8_f * (x**184) + L0x200199ba_f * (x**185) + 
          L0x200199bc_f * (x**186) + L0x200199be_f * (x**187) + 
          L0x200199c0_f * (x**188) + L0x200199c2_f * (x**189) + 
          L0x200199c4_f * (x**190) + L0x200199c6_f * (x**191) + 
          L0x200199c8_f * (x**192) + L0x200199ca_f * (x**193) + 
          L0x200199cc_f * (x**194) + L0x200199ce_f * (x**195) + 
          L0x200199d0_f * (x**196) + L0x200199d2_f * (x**197) + 
          L0x200199d4_f * (x**198) + L0x200199d6_f * (x**199) + 
          L0x200199d8_f * (x**200) + L0x200199da_f * (x**201) + 
          L0x200199dc_f * (x**202) + L0x200199de_f * (x**203) + 
          L0x200199e0_f * (x**204) + L0x200199e2_f * (x**205) + 
          L0x200199e4_f * (x**206) + L0x200199e6_f * (x**207) + 
          L0x200199e8_f * (x**208) + L0x200199ea_f * (x**209) + 
          L0x200199ec_f * (x**210) + L0x200199ee_f * (x**211) + 
          L0x200199f0_f * (x**212) + L0x200199f2_f * (x**213) + 
          L0x200199f4_f * (x**214) + L0x200199f6_f * (x**215) + 
          L0x200199f8_f * (x**216) + L0x200199fa_f * (x**217) + 
          L0x200199fc_f * (x**218) + L0x200199fe_f * (x**219) + 
          L0x20019a00_f * (x**220) + L0x20019a02_f * (x**221) + 
          L0x20019a04_f * (x**222) + L0x20019a06_f * (x**223) + 
          L0x20019a08_f * (x**224) + L0x20019a0a_f * (x**225) + 
          L0x20019a0c_f * (x**226) + L0x20019a0e_f * (x**227) + 
          L0x20019a10_f * (x**228) + L0x20019a12_f * (x**229) + 
          L0x20019a14_f * (x**230) + L0x20019a16_f * (x**231) + 
          L0x20019a18_f * (x**232) + L0x20019a1a_f * (x**233) + 
          L0x20019a1c_f * (x**234) + L0x20019a1e_f * (x**235) + 
          L0x20019a20_f * (x**236) + L0x20019a22_f * (x**237) + 
          L0x20019a24_f * (x**238) + L0x20019a26_f * (x**239) + 
          L0x20019a28_f * (x**240) + L0x20019a2a_f * (x**241) + 
          L0x20019a2c_f * (x**242) + L0x20019a2e_f * (x**243) + 
          L0x20019a30_f * (x**244) + L0x20019a32_f * (x**245) + 
          L0x20019a34_f * (x**246) + L0x20019a36_f * (x**247) + 
          L0x20019a38_f * (x**248) + L0x20019a3a_f * (x**249) + 
          L0x20019a3c_f * (x**250) + L0x20019a3e_f * (x**251) + 
          L0x20019a40_f * (x**252) + L0x20019a42_f * (x**253) + 
          L0x20019a44_f * (x**254) + L0x20019a46_f * (x**255)
        )
        (
          L0x20019848_f * (x**0) * ((y_6)**0) + 
          L0x2001984a_f * (x**1) * ((y_6)**0) + 
          L0x2001984c_f * (x**2) * ((y_6)**0) + 
          L0x2001984e_f * (x**3) * ((y_6)**0) + 
          L0x20019850_f * (x**0) * ((y_6)**1) + 
          L0x20019852_f * (x**1) * ((y_6)**1) + 
          L0x20019854_f * (x**2) * ((y_6)**1) + 
          L0x20019856_f * (x**3) * ((y_6)**1) + 
          L0x20019858_f * (x**0) * ((y_6)**2) + 
          L0x2001985a_f * (x**1) * ((y_6)**2) + 
          L0x2001985c_f * (x**2) * ((y_6)**2) + 
          L0x2001985e_f * (x**3) * ((y_6)**2) + 
          L0x20019860_f * (x**0) * ((y_6)**3) + 
          L0x20019862_f * (x**1) * ((y_6)**3) + 
          L0x20019864_f * (x**2) * ((y_6)**3) + 
          L0x20019866_f * (x**3) * ((y_6)**3) + 
          L0x20019868_f * (x**0) * ((y_6)**4) + 
          L0x2001986a_f * (x**1) * ((y_6)**4) + 
          L0x2001986c_f * (x**2) * ((y_6)**4) + 
          L0x2001986e_f * (x**3) * ((y_6)**4) + 
          L0x20019870_f * (x**0) * ((y_6)**5) + 
          L0x20019872_f * (x**1) * ((y_6)**5) + 
          L0x20019874_f * (x**2) * ((y_6)**5) + 
          L0x20019876_f * (x**3) * ((y_6)**5) + 
          L0x20019878_f * (x**0) * ((y_6)**6) + 
          L0x2001987a_f * (x**1) * ((y_6)**6) + 
          L0x2001987c_f * (x**2) * ((y_6)**6) + 
          L0x2001987e_f * (x**3) * ((y_6)**6) + 
          L0x20019880_f * (x**0) * ((y_6)**7) + 
          L0x20019882_f * (x**1) * ((y_6)**7) + 
          L0x20019884_f * (x**2) * ((y_6)**7) + 
          L0x20019886_f * (x**3) * ((y_6)**7) + 
          L0x20019888_f * (x**0) * ((y_6)**8) + 
          L0x2001988a_f * (x**1) * ((y_6)**8) + 
          L0x2001988c_f * (x**2) * ((y_6)**8) + 
          L0x2001988e_f * (x**3) * ((y_6)**8) + 
          L0x20019890_f * (x**0) * ((y_6)**9) + 
          L0x20019892_f * (x**1) * ((y_6)**9) + 
          L0x20019894_f * (x**2) * ((y_6)**9) + 
          L0x20019896_f * (x**3) * ((y_6)**9) + 
          L0x20019898_f * (x**0) * ((y_6)**10) + 
          L0x2001989a_f * (x**1) * ((y_6)**10) + 
          L0x2001989c_f * (x**2) * ((y_6)**10) + 
          L0x2001989e_f * (x**3) * ((y_6)**10) + 
          L0x200198a0_f * (x**0) * ((y_6)**11) + 
          L0x200198a2_f * (x**1) * ((y_6)**11) + 
          L0x200198a4_f * (x**2) * ((y_6)**11) + 
          L0x200198a6_f * (x**3) * ((y_6)**11) + 
          L0x200198a8_f * (x**0) * ((y_6)**12) + 
          L0x200198aa_f * (x**1) * ((y_6)**12) + 
          L0x200198ac_f * (x**2) * ((y_6)**12) + 
          L0x200198ae_f * (x**3) * ((y_6)**12) + 
          L0x200198b0_f * (x**0) * ((y_6)**13) + 
          L0x200198b2_f * (x**1) * ((y_6)**13) + 
          L0x200198b4_f * (x**2) * ((y_6)**13) + 
          L0x200198b6_f * (x**3) * ((y_6)**13) + 
          L0x200198b8_f * (x**0) * ((y_6)**14) + 
          L0x200198ba_f * (x**1) * ((y_6)**14) + 
          L0x200198bc_f * (x**2) * ((y_6)**14) + 
          L0x200198be_f * (x**3) * ((y_6)**14) + 
          L0x200198c0_f * (x**0) * ((y_6)**15) + 
          L0x200198c2_f * (x**1) * ((y_6)**15) + 
          L0x200198c4_f * (x**2) * ((y_6)**15) + 
          L0x200198c6_f * (x**3) * ((y_6)**15) + 
          L0x200198c8_f * (x**0) * ((y_6)**16) + 
          L0x200198ca_f * (x**1) * ((y_6)**16) + 
          L0x200198cc_f * (x**2) * ((y_6)**16) + 
          L0x200198ce_f * (x**3) * ((y_6)**16) + 
          L0x200198d0_f * (x**0) * ((y_6)**17) + 
          L0x200198d2_f * (x**1) * ((y_6)**17) + 
          L0x200198d4_f * (x**2) * ((y_6)**17) + 
          L0x200198d6_f * (x**3) * ((y_6)**17) + 
          L0x200198d8_f * (x**0) * ((y_6)**18) + 
          L0x200198da_f * (x**1) * ((y_6)**18) + 
          L0x200198dc_f * (x**2) * ((y_6)**18) + 
          L0x200198de_f * (x**3) * ((y_6)**18) + 
          L0x200198e0_f * (x**0) * ((y_6)**19) + 
          L0x200198e2_f * (x**1) * ((y_6)**19) + 
          L0x200198e4_f * (x**2) * ((y_6)**19) + 
          L0x200198e6_f * (x**3) * ((y_6)**19) + 
          L0x200198e8_f * (x**0) * ((y_6)**20) + 
          L0x200198ea_f * (x**1) * ((y_6)**20) + 
          L0x200198ec_f * (x**2) * ((y_6)**20) + 
          L0x200198ee_f * (x**3) * ((y_6)**20) + 
          L0x200198f0_f * (x**0) * ((y_6)**21) + 
          L0x200198f2_f * (x**1) * ((y_6)**21) + 
          L0x200198f4_f * (x**2) * ((y_6)**21) + 
          L0x200198f6_f * (x**3) * ((y_6)**21) + 
          L0x200198f8_f * (x**0) * ((y_6)**22) + 
          L0x200198fa_f * (x**1) * ((y_6)**22) + 
          L0x200198fc_f * (x**2) * ((y_6)**22) + 
          L0x200198fe_f * (x**3) * ((y_6)**22) + 
          L0x20019900_f * (x**0) * ((y_6)**23) + 
          L0x20019902_f * (x**1) * ((y_6)**23) + 
          L0x20019904_f * (x**2) * ((y_6)**23) + 
          L0x20019906_f * (x**3) * ((y_6)**23) + 
          L0x20019908_f * (x**0) * ((y_6)**24) + 
          L0x2001990a_f * (x**1) * ((y_6)**24) + 
          L0x2001990c_f * (x**2) * ((y_6)**24) + 
          L0x2001990e_f * (x**3) * ((y_6)**24) + 
          L0x20019910_f * (x**0) * ((y_6)**25) + 
          L0x20019912_f * (x**1) * ((y_6)**25) + 
          L0x20019914_f * (x**2) * ((y_6)**25) + 
          L0x20019916_f * (x**3) * ((y_6)**25) + 
          L0x20019918_f * (x**0) * ((y_6)**26) + 
          L0x2001991a_f * (x**1) * ((y_6)**26) + 
          L0x2001991c_f * (x**2) * ((y_6)**26) + 
          L0x2001991e_f * (x**3) * ((y_6)**26) + 
          L0x20019920_f * (x**0) * ((y_6)**27) + 
          L0x20019922_f * (x**1) * ((y_6)**27) + 
          L0x20019924_f * (x**2) * ((y_6)**27) + 
          L0x20019926_f * (x**3) * ((y_6)**27) + 
          L0x20019928_f * (x**0) * ((y_6)**28) + 
          L0x2001992a_f * (x**1) * ((y_6)**28) + 
          L0x2001992c_f * (x**2) * ((y_6)**28) + 
          L0x2001992e_f * (x**3) * ((y_6)**28) + 
          L0x20019930_f * (x**0) * ((y_6)**29) + 
          L0x20019932_f * (x**1) * ((y_6)**29) + 
          L0x20019934_f * (x**2) * ((y_6)**29) + 
          L0x20019936_f * (x**3) * ((y_6)**29) + 
          L0x20019938_f * (x**0) * ((y_6)**30) + 
          L0x2001993a_f * (x**1) * ((y_6)**30) + 
          L0x2001993c_f * (x**2) * ((y_6)**30) + 
          L0x2001993e_f * (x**3) * ((y_6)**30) + 
          L0x20019940_f * (x**0) * ((y_6)**31) + 
          L0x20019942_f * (x**1) * ((y_6)**31) + 
          L0x20019944_f * (x**2) * ((y_6)**31) + 
          L0x20019946_f * (x**3) * ((y_6)**31) + 
          L0x20019948_f * (x**0) * ((y_6)**32) + 
          L0x2001994a_f * (x**1) * ((y_6)**32) + 
          L0x2001994c_f * (x**2) * ((y_6)**32) + 
          L0x2001994e_f * (x**3) * ((y_6)**32) + 
          L0x20019950_f * (x**0) * ((y_6)**33) + 
          L0x20019952_f * (x**1) * ((y_6)**33) + 
          L0x20019954_f * (x**2) * ((y_6)**33) + 
          L0x20019956_f * (x**3) * ((y_6)**33) + 
          L0x20019958_f * (x**0) * ((y_6)**34) + 
          L0x2001995a_f * (x**1) * ((y_6)**34) + 
          L0x2001995c_f * (x**2) * ((y_6)**34) + 
          L0x2001995e_f * (x**3) * ((y_6)**34) + 
          L0x20019960_f * (x**0) * ((y_6)**35) + 
          L0x20019962_f * (x**1) * ((y_6)**35) + 
          L0x20019964_f * (x**2) * ((y_6)**35) + 
          L0x20019966_f * (x**3) * ((y_6)**35) + 
          L0x20019968_f * (x**0) * ((y_6)**36) + 
          L0x2001996a_f * (x**1) * ((y_6)**36) + 
          L0x2001996c_f * (x**2) * ((y_6)**36) + 
          L0x2001996e_f * (x**3) * ((y_6)**36) + 
          L0x20019970_f * (x**0) * ((y_6)**37) + 
          L0x20019972_f * (x**1) * ((y_6)**37) + 
          L0x20019974_f * (x**2) * ((y_6)**37) + 
          L0x20019976_f * (x**3) * ((y_6)**37) + 
          L0x20019978_f * (x**0) * ((y_6)**38) + 
          L0x2001997a_f * (x**1) * ((y_6)**38) + 
          L0x2001997c_f * (x**2) * ((y_6)**38) + 
          L0x2001997e_f * (x**3) * ((y_6)**38) + 
          L0x20019980_f * (x**0) * ((y_6)**39) + 
          L0x20019982_f * (x**1) * ((y_6)**39) + 
          L0x20019984_f * (x**2) * ((y_6)**39) + 
          L0x20019986_f * (x**3) * ((y_6)**39) + 
          L0x20019988_f * (x**0) * ((y_6)**40) + 
          L0x2001998a_f * (x**1) * ((y_6)**40) + 
          L0x2001998c_f * (x**2) * ((y_6)**40) + 
          L0x2001998e_f * (x**3) * ((y_6)**40) + 
          L0x20019990_f * (x**0) * ((y_6)**41) + 
          L0x20019992_f * (x**1) * ((y_6)**41) + 
          L0x20019994_f * (x**2) * ((y_6)**41) + 
          L0x20019996_f * (x**3) * ((y_6)**41) + 
          L0x20019998_f * (x**0) * ((y_6)**42) + 
          L0x2001999a_f * (x**1) * ((y_6)**42) + 
          L0x2001999c_f * (x**2) * ((y_6)**42) + 
          L0x2001999e_f * (x**3) * ((y_6)**42) + 
          L0x200199a0_f * (x**0) * ((y_6)**43) + 
          L0x200199a2_f * (x**1) * ((y_6)**43) + 
          L0x200199a4_f * (x**2) * ((y_6)**43) + 
          L0x200199a6_f * (x**3) * ((y_6)**43) + 
          L0x200199a8_f * (x**0) * ((y_6)**44) + 
          L0x200199aa_f * (x**1) * ((y_6)**44) + 
          L0x200199ac_f * (x**2) * ((y_6)**44) + 
          L0x200199ae_f * (x**3) * ((y_6)**44) + 
          L0x200199b0_f * (x**0) * ((y_6)**45) + 
          L0x200199b2_f * (x**1) * ((y_6)**45) + 
          L0x200199b4_f * (x**2) * ((y_6)**45) + 
          L0x200199b6_f * (x**3) * ((y_6)**45) + 
          L0x200199b8_f * (x**0) * ((y_6)**46) + 
          L0x200199ba_f * (x**1) * ((y_6)**46) + 
          L0x200199bc_f * (x**2) * ((y_6)**46) + 
          L0x200199be_f * (x**3) * ((y_6)**46) + 
          L0x200199c0_f * (x**0) * ((y_6)**47) + 
          L0x200199c2_f * (x**1) * ((y_6)**47) + 
          L0x200199c4_f * (x**2) * ((y_6)**47) + 
          L0x200199c6_f * (x**3) * ((y_6)**47) + 
          L0x200199c8_f * (x**0) * ((y_6)**48) + 
          L0x200199ca_f * (x**1) * ((y_6)**48) + 
          L0x200199cc_f * (x**2) * ((y_6)**48) + 
          L0x200199ce_f * (x**3) * ((y_6)**48) + 
          L0x200199d0_f * (x**0) * ((y_6)**49) + 
          L0x200199d2_f * (x**1) * ((y_6)**49) + 
          L0x200199d4_f * (x**2) * ((y_6)**49) + 
          L0x200199d6_f * (x**3) * ((y_6)**49) + 
          L0x200199d8_f * (x**0) * ((y_6)**50) + 
          L0x200199da_f * (x**1) * ((y_6)**50) + 
          L0x200199dc_f * (x**2) * ((y_6)**50) + 
          L0x200199de_f * (x**3) * ((y_6)**50) + 
          L0x200199e0_f * (x**0) * ((y_6)**51) + 
          L0x200199e2_f * (x**1) * ((y_6)**51) + 
          L0x200199e4_f * (x**2) * ((y_6)**51) + 
          L0x200199e6_f * (x**3) * ((y_6)**51) + 
          L0x200199e8_f * (x**0) * ((y_6)**52) + 
          L0x200199ea_f * (x**1) * ((y_6)**52) + 
          L0x200199ec_f * (x**2) * ((y_6)**52) + 
          L0x200199ee_f * (x**3) * ((y_6)**52) + 
          L0x200199f0_f * (x**0) * ((y_6)**53) + 
          L0x200199f2_f * (x**1) * ((y_6)**53) + 
          L0x200199f4_f * (x**2) * ((y_6)**53) + 
          L0x200199f6_f * (x**3) * ((y_6)**53) + 
          L0x200199f8_f * (x**0) * ((y_6)**54) + 
          L0x200199fa_f * (x**1) * ((y_6)**54) + 
          L0x200199fc_f * (x**2) * ((y_6)**54) + 
          L0x200199fe_f * (x**3) * ((y_6)**54) + 
          L0x20019a00_f * (x**0) * ((y_6)**55) + 
          L0x20019a02_f * (x**1) * ((y_6)**55) + 
          L0x20019a04_f * (x**2) * ((y_6)**55) + 
          L0x20019a06_f * (x**3) * ((y_6)**55) + 
          L0x20019a08_f * (x**0) * ((y_6)**56) + 
          L0x20019a0a_f * (x**1) * ((y_6)**56) + 
          L0x20019a0c_f * (x**2) * ((y_6)**56) + 
          L0x20019a0e_f * (x**3) * ((y_6)**56) + 
          L0x20019a10_f * (x**0) * ((y_6)**57) + 
          L0x20019a12_f * (x**1) * ((y_6)**57) + 
          L0x20019a14_f * (x**2) * ((y_6)**57) + 
          L0x20019a16_f * (x**3) * ((y_6)**57) + 
          L0x20019a18_f * (x**0) * ((y_6)**58) + 
          L0x20019a1a_f * (x**1) * ((y_6)**58) + 
          L0x20019a1c_f * (x**2) * ((y_6)**58) + 
          L0x20019a1e_f * (x**3) * ((y_6)**58) + 
          L0x20019a20_f * (x**0) * ((y_6)**59) + 
          L0x20019a22_f * (x**1) * ((y_6)**59) + 
          L0x20019a24_f * (x**2) * ((y_6)**59) + 
          L0x20019a26_f * (x**3) * ((y_6)**59) + 
          L0x20019a28_f * (x**0) * ((y_6)**60) + 
          L0x20019a2a_f * (x**1) * ((y_6)**60) + 
          L0x20019a2c_f * (x**2) * ((y_6)**60) + 
          L0x20019a2e_f * (x**3) * ((y_6)**60) + 
          L0x20019a30_f * (x**0) * ((y_6)**61) + 
          L0x20019a32_f * (x**1) * ((y_6)**61) + 
          L0x20019a34_f * (x**2) * ((y_6)**61) + 
          L0x20019a36_f * (x**3) * ((y_6)**61) + 
          L0x20019a38_f * (x**0) * ((y_6)**62) + 
          L0x20019a3a_f * (x**1) * ((y_6)**62) + 
          L0x20019a3c_f * (x**2) * ((y_6)**62) + 
          L0x20019a3e_f * (x**3) * ((y_6)**62) + 
          L0x20019a40_f * (x**0) * ((y_6)**63) + 
          L0x20019a42_f * (x**1) * ((y_6)**63) + 
          L0x20019a44_f * (x**2) * ((y_6)**63) + 
          L0x20019a46_f * (x**3) * ((y_6)**63)
        )
        [25570049, x**4 - y_6, y_6**64 + 1]
  &&
  true
;

(* === prove conditions for only-x polys separately === *)
cut (* 55 *)
  true && true;

(* slice 0 *)
cut (* 56 *)
  and [
    (* inp_poly_0 *)
    eqmod (2**32) * (inp_poly_0 * inp_poly_0)
          (
            L0x20019848_f * (x**0) + L0x2001984a_f * (x**1) + 
            L0x2001984c_f * (x**2) + L0x2001984e_f * (x**3) + 
            L0x20019850_f * (x**4) + L0x20019852_f * (x**5) + 
            L0x20019854_f * (x**6) + L0x20019856_f * (x**7) + 
            L0x20019858_f * (x**8) + L0x2001985a_f * (x**9) + 
            L0x2001985c_f * (x**10) + L0x2001985e_f * (x**11) + 
            L0x20019860_f * (x**12) + L0x20019862_f * (x**13) + 
            L0x20019864_f * (x**14) + L0x20019866_f * (x**15) + 
            L0x20019868_f * (x**16) + L0x2001986a_f * (x**17) + 
            L0x2001986c_f * (x**18) + L0x2001986e_f * (x**19) + 
            L0x20019870_f * (x**20) + L0x20019872_f * (x**21) + 
            L0x20019874_f * (x**22) + L0x20019876_f * (x**23) + 
            L0x20019878_f * (x**24) + L0x2001987a_f * (x**25) + 
            L0x2001987c_f * (x**26) + L0x2001987e_f * (x**27) + 
            L0x20019880_f * (x**28) + L0x20019882_f * (x**29) + 
            L0x20019884_f * (x**30) + L0x20019886_f * (x**31) + 
            L0x20019888_f * (x**32) + L0x2001988a_f * (x**33) + 
            L0x2001988c_f * (x**34) + L0x2001988e_f * (x**35) + 
            L0x20019890_f * (x**36) + L0x20019892_f * (x**37) + 
            L0x20019894_f * (x**38) + L0x20019896_f * (x**39) + 
            L0x20019898_f * (x**40) + L0x2001989a_f * (x**41) + 
            L0x2001989c_f * (x**42) + L0x2001989e_f * (x**43) + 
            L0x200198a0_f * (x**44) + L0x200198a2_f * (x**45) + 
            L0x200198a4_f * (x**46) + L0x200198a6_f * (x**47) + 
            L0x200198a8_f * (x**48) + L0x200198aa_f * (x**49) + 
            L0x200198ac_f * (x**50) + L0x200198ae_f * (x**51) + 
            L0x200198b0_f * (x**52) + L0x200198b2_f * (x**53) + 
            L0x200198b4_f * (x**54) + L0x200198b6_f * (x**55) + 
            L0x200198b8_f * (x**56) + L0x200198ba_f * (x**57) + 
            L0x200198bc_f * (x**58) + L0x200198be_f * (x**59) + 
            L0x200198c0_f * (x**60) + L0x200198c2_f * (x**61) + 
            L0x200198c4_f * (x**62) + L0x200198c6_f * (x**63) + 
            L0x200198c8_f * (x**64) + L0x200198ca_f * (x**65) + 
            L0x200198cc_f * (x**66) + L0x200198ce_f * (x**67) + 
            L0x200198d0_f * (x**68) + L0x200198d2_f * (x**69) + 
            L0x200198d4_f * (x**70) + L0x200198d6_f * (x**71) + 
            L0x200198d8_f * (x**72) + L0x200198da_f * (x**73) + 
            L0x200198dc_f * (x**74) + L0x200198de_f * (x**75) + 
            L0x200198e0_f * (x**76) + L0x200198e2_f * (x**77) + 
            L0x200198e4_f * (x**78) + L0x200198e6_f * (x**79) + 
            L0x200198e8_f * (x**80) + L0x200198ea_f * (x**81) + 
            L0x200198ec_f * (x**82) + L0x200198ee_f * (x**83) + 
            L0x200198f0_f * (x**84) + L0x200198f2_f * (x**85) + 
            L0x200198f4_f * (x**86) + L0x200198f6_f * (x**87) + 
            L0x200198f8_f * (x**88) + L0x200198fa_f * (x**89) + 
            L0x200198fc_f * (x**90) + L0x200198fe_f * (x**91) + 
            L0x20019900_f * (x**92) + L0x20019902_f * (x**93) + 
            L0x20019904_f * (x**94) + L0x20019906_f * (x**95) + 
            L0x20019908_f * (x**96) + L0x2001990a_f * (x**97) + 
            L0x2001990c_f * (x**98) + L0x2001990e_f * (x**99) + 
            L0x20019910_f * (x**100) + L0x20019912_f * (x**101) + 
            L0x20019914_f * (x**102) + L0x20019916_f * (x**103) + 
            L0x20019918_f * (x**104) + L0x2001991a_f * (x**105) + 
            L0x2001991c_f * (x**106) + L0x2001991e_f * (x**107) + 
            L0x20019920_f * (x**108) + L0x20019922_f * (x**109) + 
            L0x20019924_f * (x**110) + L0x20019926_f * (x**111) + 
            L0x20019928_f * (x**112) + L0x2001992a_f * (x**113) + 
            L0x2001992c_f * (x**114) + L0x2001992e_f * (x**115) + 
            L0x20019930_f * (x**116) + L0x20019932_f * (x**117) + 
            L0x20019934_f * (x**118) + L0x20019936_f * (x**119) + 
            L0x20019938_f * (x**120) + L0x2001993a_f * (x**121) + 
            L0x2001993c_f * (x**122) + L0x2001993e_f * (x**123) + 
            L0x20019940_f * (x**124) + L0x20019942_f * (x**125) + 
            L0x20019944_f * (x**126) + L0x20019946_f * (x**127) + 
            L0x20019948_f * (x**128) + L0x2001994a_f * (x**129) + 
            L0x2001994c_f * (x**130) + L0x2001994e_f * (x**131) + 
            L0x20019950_f * (x**132) + L0x20019952_f * (x**133) + 
            L0x20019954_f * (x**134) + L0x20019956_f * (x**135) + 
            L0x20019958_f * (x**136) + L0x2001995a_f * (x**137) + 
            L0x2001995c_f * (x**138) + L0x2001995e_f * (x**139) + 
            L0x20019960_f * (x**140) + L0x20019962_f * (x**141) + 
            L0x20019964_f * (x**142) + L0x20019966_f * (x**143) + 
            L0x20019968_f * (x**144) + L0x2001996a_f * (x**145) + 
            L0x2001996c_f * (x**146) + L0x2001996e_f * (x**147) + 
            L0x20019970_f * (x**148) + L0x20019972_f * (x**149) + 
            L0x20019974_f * (x**150) + L0x20019976_f * (x**151) + 
            L0x20019978_f * (x**152) + L0x2001997a_f * (x**153) + 
            L0x2001997c_f * (x**154) + L0x2001997e_f * (x**155) + 
            L0x20019980_f * (x**156) + L0x20019982_f * (x**157) + 
            L0x20019984_f * (x**158) + L0x20019986_f * (x**159) + 
            L0x20019988_f * (x**160) + L0x2001998a_f * (x**161) + 
            L0x2001998c_f * (x**162) + L0x2001998e_f * (x**163) + 
            L0x20019990_f * (x**164) + L0x20019992_f * (x**165) + 
            L0x20019994_f * (x**166) + L0x20019996_f * (x**167) + 
            L0x20019998_f * (x**168) + L0x2001999a_f * (x**169) + 
            L0x2001999c_f * (x**170) + L0x2001999e_f * (x**171) + 
            L0x200199a0_f * (x**172) + L0x200199a2_f * (x**173) + 
            L0x200199a4_f * (x**174) + L0x200199a6_f * (x**175) + 
            L0x200199a8_f * (x**176) + L0x200199aa_f * (x**177) + 
            L0x200199ac_f * (x**178) + L0x200199ae_f * (x**179) + 
            L0x200199b0_f * (x**180) + L0x200199b2_f * (x**181) + 
            L0x200199b4_f * (x**182) + L0x200199b6_f * (x**183) + 
            L0x200199b8_f * (x**184) + L0x200199ba_f * (x**185) + 
            L0x200199bc_f * (x**186) + L0x200199be_f * (x**187) + 
            L0x200199c0_f * (x**188) + L0x200199c2_f * (x**189) + 
            L0x200199c4_f * (x**190) + L0x200199c6_f * (x**191) + 
            L0x200199c8_f * (x**192) + L0x200199ca_f * (x**193) + 
            L0x200199cc_f * (x**194) + L0x200199ce_f * (x**195) + 
            L0x200199d0_f * (x**196) + L0x200199d2_f * (x**197) + 
            L0x200199d4_f * (x**198) + L0x200199d6_f * (x**199) + 
            L0x200199d8_f * (x**200) + L0x200199da_f * (x**201) + 
            L0x200199dc_f * (x**202) + L0x200199de_f * (x**203) + 
            L0x200199e0_f * (x**204) + L0x200199e2_f * (x**205) + 
            L0x200199e4_f * (x**206) + L0x200199e6_f * (x**207) + 
            L0x200199e8_f * (x**208) + L0x200199ea_f * (x**209) + 
            L0x200199ec_f * (x**210) + L0x200199ee_f * (x**211) + 
            L0x200199f0_f * (x**212) + L0x200199f2_f * (x**213) + 
            L0x200199f4_f * (x**214) + L0x200199f6_f * (x**215) + 
            L0x200199f8_f * (x**216) + L0x200199fa_f * (x**217) + 
            L0x200199fc_f * (x**218) + L0x200199fe_f * (x**219) + 
            L0x20019a00_f * (x**220) + L0x20019a02_f * (x**221) + 
            L0x20019a04_f * (x**222) + L0x20019a06_f * (x**223) + 
            L0x20019a08_f * (x**224) + L0x20019a0a_f * (x**225) + 
            L0x20019a0c_f * (x**226) + L0x20019a0e_f * (x**227) + 
            L0x20019a10_f * (x**228) + L0x20019a12_f * (x**229) + 
            L0x20019a14_f * (x**230) + L0x20019a16_f * (x**231) + 
            L0x20019a18_f * (x**232) + L0x20019a1a_f * (x**233) + 
            L0x20019a1c_f * (x**234) + L0x20019a1e_f * (x**235) + 
            L0x20019a20_f * (x**236) + L0x20019a22_f * (x**237) + 
            L0x20019a24_f * (x**238) + L0x20019a26_f * (x**239) + 
            L0x20019a28_f * (x**240) + L0x20019a2a_f * (x**241) + 
            L0x20019a2c_f * (x**242) + L0x20019a2e_f * (x**243) + 
            L0x20019a30_f * (x**244) + L0x20019a32_f * (x**245) + 
            L0x20019a34_f * (x**246) + L0x20019a36_f * (x**247) + 
            L0x20019a38_f * (x**248) + L0x20019a3a_f * (x**249) + 
            L0x20019a3c_f * (x**250) + L0x20019a3e_f * (x**251) + 
            L0x20019a40_f * (x**252) + L0x20019a42_f * (x**253) + 
            L0x20019a44_f * (x**254) + L0x20019a46_f * (x**255)
          )
          [25570049, x**4 - y_0_00 * 6103972, y_0_00 - 1],
    (* inp_poly_1 *)
    eqmod (2**32) * (inp_poly_1 * inp_poly_1)
          (
            L0x20019848_f * (x**0) + L0x2001984a_f * (x**1) + 
            L0x2001984c_f * (x**2) + L0x2001984e_f * (x**3) + 
            L0x20019850_f * (x**4) + L0x20019852_f * (x**5) + 
            L0x20019854_f * (x**6) + L0x20019856_f * (x**7) + 
            L0x20019858_f * (x**8) + L0x2001985a_f * (x**9) + 
            L0x2001985c_f * (x**10) + L0x2001985e_f * (x**11) + 
            L0x20019860_f * (x**12) + L0x20019862_f * (x**13) + 
            L0x20019864_f * (x**14) + L0x20019866_f * (x**15) + 
            L0x20019868_f * (x**16) + L0x2001986a_f * (x**17) + 
            L0x2001986c_f * (x**18) + L0x2001986e_f * (x**19) + 
            L0x20019870_f * (x**20) + L0x20019872_f * (x**21) + 
            L0x20019874_f * (x**22) + L0x20019876_f * (x**23) + 
            L0x20019878_f * (x**24) + L0x2001987a_f * (x**25) + 
            L0x2001987c_f * (x**26) + L0x2001987e_f * (x**27) + 
            L0x20019880_f * (x**28) + L0x20019882_f * (x**29) + 
            L0x20019884_f * (x**30) + L0x20019886_f * (x**31) + 
            L0x20019888_f * (x**32) + L0x2001988a_f * (x**33) + 
            L0x2001988c_f * (x**34) + L0x2001988e_f * (x**35) + 
            L0x20019890_f * (x**36) + L0x20019892_f * (x**37) + 
            L0x20019894_f * (x**38) + L0x20019896_f * (x**39) + 
            L0x20019898_f * (x**40) + L0x2001989a_f * (x**41) + 
            L0x2001989c_f * (x**42) + L0x2001989e_f * (x**43) + 
            L0x200198a0_f * (x**44) + L0x200198a2_f * (x**45) + 
            L0x200198a4_f * (x**46) + L0x200198a6_f * (x**47) + 
            L0x200198a8_f * (x**48) + L0x200198aa_f * (x**49) + 
            L0x200198ac_f * (x**50) + L0x200198ae_f * (x**51) + 
            L0x200198b0_f * (x**52) + L0x200198b2_f * (x**53) + 
            L0x200198b4_f * (x**54) + L0x200198b6_f * (x**55) + 
            L0x200198b8_f * (x**56) + L0x200198ba_f * (x**57) + 
            L0x200198bc_f * (x**58) + L0x200198be_f * (x**59) + 
            L0x200198c0_f * (x**60) + L0x200198c2_f * (x**61) + 
            L0x200198c4_f * (x**62) + L0x200198c6_f * (x**63) + 
            L0x200198c8_f * (x**64) + L0x200198ca_f * (x**65) + 
            L0x200198cc_f * (x**66) + L0x200198ce_f * (x**67) + 
            L0x200198d0_f * (x**68) + L0x200198d2_f * (x**69) + 
            L0x200198d4_f * (x**70) + L0x200198d6_f * (x**71) + 
            L0x200198d8_f * (x**72) + L0x200198da_f * (x**73) + 
            L0x200198dc_f * (x**74) + L0x200198de_f * (x**75) + 
            L0x200198e0_f * (x**76) + L0x200198e2_f * (x**77) + 
            L0x200198e4_f * (x**78) + L0x200198e6_f * (x**79) + 
            L0x200198e8_f * (x**80) + L0x200198ea_f * (x**81) + 
            L0x200198ec_f * (x**82) + L0x200198ee_f * (x**83) + 
            L0x200198f0_f * (x**84) + L0x200198f2_f * (x**85) + 
            L0x200198f4_f * (x**86) + L0x200198f6_f * (x**87) + 
            L0x200198f8_f * (x**88) + L0x200198fa_f * (x**89) + 
            L0x200198fc_f * (x**90) + L0x200198fe_f * (x**91) + 
            L0x20019900_f * (x**92) + L0x20019902_f * (x**93) + 
            L0x20019904_f * (x**94) + L0x20019906_f * (x**95) + 
            L0x20019908_f * (x**96) + L0x2001990a_f * (x**97) + 
            L0x2001990c_f * (x**98) + L0x2001990e_f * (x**99) + 
            L0x20019910_f * (x**100) + L0x20019912_f * (x**101) + 
            L0x20019914_f * (x**102) + L0x20019916_f * (x**103) + 
            L0x20019918_f * (x**104) + L0x2001991a_f * (x**105) + 
            L0x2001991c_f * (x**106) + L0x2001991e_f * (x**107) + 
            L0x20019920_f * (x**108) + L0x20019922_f * (x**109) + 
            L0x20019924_f * (x**110) + L0x20019926_f * (x**111) + 
            L0x20019928_f * (x**112) + L0x2001992a_f * (x**113) + 
            L0x2001992c_f * (x**114) + L0x2001992e_f * (x**115) + 
            L0x20019930_f * (x**116) + L0x20019932_f * (x**117) + 
            L0x20019934_f * (x**118) + L0x20019936_f * (x**119) + 
            L0x20019938_f * (x**120) + L0x2001993a_f * (x**121) + 
            L0x2001993c_f * (x**122) + L0x2001993e_f * (x**123) + 
            L0x20019940_f * (x**124) + L0x20019942_f * (x**125) + 
            L0x20019944_f * (x**126) + L0x20019946_f * (x**127) + 
            L0x20019948_f * (x**128) + L0x2001994a_f * (x**129) + 
            L0x2001994c_f * (x**130) + L0x2001994e_f * (x**131) + 
            L0x20019950_f * (x**132) + L0x20019952_f * (x**133) + 
            L0x20019954_f * (x**134) + L0x20019956_f * (x**135) + 
            L0x20019958_f * (x**136) + L0x2001995a_f * (x**137) + 
            L0x2001995c_f * (x**138) + L0x2001995e_f * (x**139) + 
            L0x20019960_f * (x**140) + L0x20019962_f * (x**141) + 
            L0x20019964_f * (x**142) + L0x20019966_f * (x**143) + 
            L0x20019968_f * (x**144) + L0x2001996a_f * (x**145) + 
            L0x2001996c_f * (x**146) + L0x2001996e_f * (x**147) + 
            L0x20019970_f * (x**148) + L0x20019972_f * (x**149) + 
            L0x20019974_f * (x**150) + L0x20019976_f * (x**151) + 
            L0x20019978_f * (x**152) + L0x2001997a_f * (x**153) + 
            L0x2001997c_f * (x**154) + L0x2001997e_f * (x**155) + 
            L0x20019980_f * (x**156) + L0x20019982_f * (x**157) + 
            L0x20019984_f * (x**158) + L0x20019986_f * (x**159) + 
            L0x20019988_f * (x**160) + L0x2001998a_f * (x**161) + 
            L0x2001998c_f * (x**162) + L0x2001998e_f * (x**163) + 
            L0x20019990_f * (x**164) + L0x20019992_f * (x**165) + 
            L0x20019994_f * (x**166) + L0x20019996_f * (x**167) + 
            L0x20019998_f * (x**168) + L0x2001999a_f * (x**169) + 
            L0x2001999c_f * (x**170) + L0x2001999e_f * (x**171) + 
            L0x200199a0_f * (x**172) + L0x200199a2_f * (x**173) + 
            L0x200199a4_f * (x**174) + L0x200199a6_f * (x**175) + 
            L0x200199a8_f * (x**176) + L0x200199aa_f * (x**177) + 
            L0x200199ac_f * (x**178) + L0x200199ae_f * (x**179) + 
            L0x200199b0_f * (x**180) + L0x200199b2_f * (x**181) + 
            L0x200199b4_f * (x**182) + L0x200199b6_f * (x**183) + 
            L0x200199b8_f * (x**184) + L0x200199ba_f * (x**185) + 
            L0x200199bc_f * (x**186) + L0x200199be_f * (x**187) + 
            L0x200199c0_f * (x**188) + L0x200199c2_f * (x**189) + 
            L0x200199c4_f * (x**190) + L0x200199c6_f * (x**191) + 
            L0x200199c8_f * (x**192) + L0x200199ca_f * (x**193) + 
            L0x200199cc_f * (x**194) + L0x200199ce_f * (x**195) + 
            L0x200199d0_f * (x**196) + L0x200199d2_f * (x**197) + 
            L0x200199d4_f * (x**198) + L0x200199d6_f * (x**199) + 
            L0x200199d8_f * (x**200) + L0x200199da_f * (x**201) + 
            L0x200199dc_f * (x**202) + L0x200199de_f * (x**203) + 
            L0x200199e0_f * (x**204) + L0x200199e2_f * (x**205) + 
            L0x200199e4_f * (x**206) + L0x200199e6_f * (x**207) + 
            L0x200199e8_f * (x**208) + L0x200199ea_f * (x**209) + 
            L0x200199ec_f * (x**210) + L0x200199ee_f * (x**211) + 
            L0x200199f0_f * (x**212) + L0x200199f2_f * (x**213) + 
            L0x200199f4_f * (x**214) + L0x200199f6_f * (x**215) + 
            L0x200199f8_f * (x**216) + L0x200199fa_f * (x**217) + 
            L0x200199fc_f * (x**218) + L0x200199fe_f * (x**219) + 
            L0x20019a00_f * (x**220) + L0x20019a02_f * (x**221) + 
            L0x20019a04_f * (x**222) + L0x20019a06_f * (x**223) + 
            L0x20019a08_f * (x**224) + L0x20019a0a_f * (x**225) + 
            L0x20019a0c_f * (x**226) + L0x20019a0e_f * (x**227) + 
            L0x20019a10_f * (x**228) + L0x20019a12_f * (x**229) + 
            L0x20019a14_f * (x**230) + L0x20019a16_f * (x**231) + 
            L0x20019a18_f * (x**232) + L0x20019a1a_f * (x**233) + 
            L0x20019a1c_f * (x**234) + L0x20019a1e_f * (x**235) + 
            L0x20019a20_f * (x**236) + L0x20019a22_f * (x**237) + 
            L0x20019a24_f * (x**238) + L0x20019a26_f * (x**239) + 
            L0x20019a28_f * (x**240) + L0x20019a2a_f * (x**241) + 
            L0x20019a2c_f * (x**242) + L0x20019a2e_f * (x**243) + 
            L0x20019a30_f * (x**244) + L0x20019a32_f * (x**245) + 
            L0x20019a34_f * (x**246) + L0x20019a36_f * (x**247) + 
            L0x20019a38_f * (x**248) + L0x20019a3a_f * (x**249) + 
            L0x20019a3c_f * (x**250) + L0x20019a3e_f * (x**251) + 
            L0x20019a40_f * (x**252) + L0x20019a42_f * (x**253) + 
            L0x20019a44_f * (x**254) + L0x20019a46_f * (x**255)
          )
          [25570049, x**4 - y_0_01 * 19466077, y_0_01 - 1],
    (* inp_poly_2 *)
    eqmod (2**32) * (inp_poly_2 * inp_poly_2)
          (
            L0x20019848_f * (x**0) + L0x2001984a_f * (x**1) + 
            L0x2001984c_f * (x**2) + L0x2001984e_f * (x**3) + 
            L0x20019850_f * (x**4) + L0x20019852_f * (x**5) + 
            L0x20019854_f * (x**6) + L0x20019856_f * (x**7) + 
            L0x20019858_f * (x**8) + L0x2001985a_f * (x**9) + 
            L0x2001985c_f * (x**10) + L0x2001985e_f * (x**11) + 
            L0x20019860_f * (x**12) + L0x20019862_f * (x**13) + 
            L0x20019864_f * (x**14) + L0x20019866_f * (x**15) + 
            L0x20019868_f * (x**16) + L0x2001986a_f * (x**17) + 
            L0x2001986c_f * (x**18) + L0x2001986e_f * (x**19) + 
            L0x20019870_f * (x**20) + L0x20019872_f * (x**21) + 
            L0x20019874_f * (x**22) + L0x20019876_f * (x**23) + 
            L0x20019878_f * (x**24) + L0x2001987a_f * (x**25) + 
            L0x2001987c_f * (x**26) + L0x2001987e_f * (x**27) + 
            L0x20019880_f * (x**28) + L0x20019882_f * (x**29) + 
            L0x20019884_f * (x**30) + L0x20019886_f * (x**31) + 
            L0x20019888_f * (x**32) + L0x2001988a_f * (x**33) + 
            L0x2001988c_f * (x**34) + L0x2001988e_f * (x**35) + 
            L0x20019890_f * (x**36) + L0x20019892_f * (x**37) + 
            L0x20019894_f * (x**38) + L0x20019896_f * (x**39) + 
            L0x20019898_f * (x**40) + L0x2001989a_f * (x**41) + 
            L0x2001989c_f * (x**42) + L0x2001989e_f * (x**43) + 
            L0x200198a0_f * (x**44) + L0x200198a2_f * (x**45) + 
            L0x200198a4_f * (x**46) + L0x200198a6_f * (x**47) + 
            L0x200198a8_f * (x**48) + L0x200198aa_f * (x**49) + 
            L0x200198ac_f * (x**50) + L0x200198ae_f * (x**51) + 
            L0x200198b0_f * (x**52) + L0x200198b2_f * (x**53) + 
            L0x200198b4_f * (x**54) + L0x200198b6_f * (x**55) + 
            L0x200198b8_f * (x**56) + L0x200198ba_f * (x**57) + 
            L0x200198bc_f * (x**58) + L0x200198be_f * (x**59) + 
            L0x200198c0_f * (x**60) + L0x200198c2_f * (x**61) + 
            L0x200198c4_f * (x**62) + L0x200198c6_f * (x**63) + 
            L0x200198c8_f * (x**64) + L0x200198ca_f * (x**65) + 
            L0x200198cc_f * (x**66) + L0x200198ce_f * (x**67) + 
            L0x200198d0_f * (x**68) + L0x200198d2_f * (x**69) + 
            L0x200198d4_f * (x**70) + L0x200198d6_f * (x**71) + 
            L0x200198d8_f * (x**72) + L0x200198da_f * (x**73) + 
            L0x200198dc_f * (x**74) + L0x200198de_f * (x**75) + 
            L0x200198e0_f * (x**76) + L0x200198e2_f * (x**77) + 
            L0x200198e4_f * (x**78) + L0x200198e6_f * (x**79) + 
            L0x200198e8_f * (x**80) + L0x200198ea_f * (x**81) + 
            L0x200198ec_f * (x**82) + L0x200198ee_f * (x**83) + 
            L0x200198f0_f * (x**84) + L0x200198f2_f * (x**85) + 
            L0x200198f4_f * (x**86) + L0x200198f6_f * (x**87) + 
            L0x200198f8_f * (x**88) + L0x200198fa_f * (x**89) + 
            L0x200198fc_f * (x**90) + L0x200198fe_f * (x**91) + 
            L0x20019900_f * (x**92) + L0x20019902_f * (x**93) + 
            L0x20019904_f * (x**94) + L0x20019906_f * (x**95) + 
            L0x20019908_f * (x**96) + L0x2001990a_f * (x**97) + 
            L0x2001990c_f * (x**98) + L0x2001990e_f * (x**99) + 
            L0x20019910_f * (x**100) + L0x20019912_f * (x**101) + 
            L0x20019914_f * (x**102) + L0x20019916_f * (x**103) + 
            L0x20019918_f * (x**104) + L0x2001991a_f * (x**105) + 
            L0x2001991c_f * (x**106) + L0x2001991e_f * (x**107) + 
            L0x20019920_f * (x**108) + L0x20019922_f * (x**109) + 
            L0x20019924_f * (x**110) + L0x20019926_f * (x**111) + 
            L0x20019928_f * (x**112) + L0x2001992a_f * (x**113) + 
            L0x2001992c_f * (x**114) + L0x2001992e_f * (x**115) + 
            L0x20019930_f * (x**116) + L0x20019932_f * (x**117) + 
            L0x20019934_f * (x**118) + L0x20019936_f * (x**119) + 
            L0x20019938_f * (x**120) + L0x2001993a_f * (x**121) + 
            L0x2001993c_f * (x**122) + L0x2001993e_f * (x**123) + 
            L0x20019940_f * (x**124) + L0x20019942_f * (x**125) + 
            L0x20019944_f * (x**126) + L0x20019946_f * (x**127) + 
            L0x20019948_f * (x**128) + L0x2001994a_f * (x**129) + 
            L0x2001994c_f * (x**130) + L0x2001994e_f * (x**131) + 
            L0x20019950_f * (x**132) + L0x20019952_f * (x**133) + 
            L0x20019954_f * (x**134) + L0x20019956_f * (x**135) + 
            L0x20019958_f * (x**136) + L0x2001995a_f * (x**137) + 
            L0x2001995c_f * (x**138) + L0x2001995e_f * (x**139) + 
            L0x20019960_f * (x**140) + L0x20019962_f * (x**141) + 
            L0x20019964_f * (x**142) + L0x20019966_f * (x**143) + 
            L0x20019968_f * (x**144) + L0x2001996a_f * (x**145) + 
            L0x2001996c_f * (x**146) + L0x2001996e_f * (x**147) + 
            L0x20019970_f * (x**148) + L0x20019972_f * (x**149) + 
            L0x20019974_f * (x**150) + L0x20019976_f * (x**151) + 
            L0x20019978_f * (x**152) + L0x2001997a_f * (x**153) + 
            L0x2001997c_f * (x**154) + L0x2001997e_f * (x**155) + 
            L0x20019980_f * (x**156) + L0x20019982_f * (x**157) + 
            L0x20019984_f * (x**158) + L0x20019986_f * (x**159) + 
            L0x20019988_f * (x**160) + L0x2001998a_f * (x**161) + 
            L0x2001998c_f * (x**162) + L0x2001998e_f * (x**163) + 
            L0x20019990_f * (x**164) + L0x20019992_f * (x**165) + 
            L0x20019994_f * (x**166) + L0x20019996_f * (x**167) + 
            L0x20019998_f * (x**168) + L0x2001999a_f * (x**169) + 
            L0x2001999c_f * (x**170) + L0x2001999e_f * (x**171) + 
            L0x200199a0_f * (x**172) + L0x200199a2_f * (x**173) + 
            L0x200199a4_f * (x**174) + L0x200199a6_f * (x**175) + 
            L0x200199a8_f * (x**176) + L0x200199aa_f * (x**177) + 
            L0x200199ac_f * (x**178) + L0x200199ae_f * (x**179) + 
            L0x200199b0_f * (x**180) + L0x200199b2_f * (x**181) + 
            L0x200199b4_f * (x**182) + L0x200199b6_f * (x**183) + 
            L0x200199b8_f * (x**184) + L0x200199ba_f * (x**185) + 
            L0x200199bc_f * (x**186) + L0x200199be_f * (x**187) + 
            L0x200199c0_f * (x**188) + L0x200199c2_f * (x**189) + 
            L0x200199c4_f * (x**190) + L0x200199c6_f * (x**191) + 
            L0x200199c8_f * (x**192) + L0x200199ca_f * (x**193) + 
            L0x200199cc_f * (x**194) + L0x200199ce_f * (x**195) + 
            L0x200199d0_f * (x**196) + L0x200199d2_f * (x**197) + 
            L0x200199d4_f * (x**198) + L0x200199d6_f * (x**199) + 
            L0x200199d8_f * (x**200) + L0x200199da_f * (x**201) + 
            L0x200199dc_f * (x**202) + L0x200199de_f * (x**203) + 
            L0x200199e0_f * (x**204) + L0x200199e2_f * (x**205) + 
            L0x200199e4_f * (x**206) + L0x200199e6_f * (x**207) + 
            L0x200199e8_f * (x**208) + L0x200199ea_f * (x**209) + 
            L0x200199ec_f * (x**210) + L0x200199ee_f * (x**211) + 
            L0x200199f0_f * (x**212) + L0x200199f2_f * (x**213) + 
            L0x200199f4_f * (x**214) + L0x200199f6_f * (x**215) + 
            L0x200199f8_f * (x**216) + L0x200199fa_f * (x**217) + 
            L0x200199fc_f * (x**218) + L0x200199fe_f * (x**219) + 
            L0x20019a00_f * (x**220) + L0x20019a02_f * (x**221) + 
            L0x20019a04_f * (x**222) + L0x20019a06_f * (x**223) + 
            L0x20019a08_f * (x**224) + L0x20019a0a_f * (x**225) + 
            L0x20019a0c_f * (x**226) + L0x20019a0e_f * (x**227) + 
            L0x20019a10_f * (x**228) + L0x20019a12_f * (x**229) + 
            L0x20019a14_f * (x**230) + L0x20019a16_f * (x**231) + 
            L0x20019a18_f * (x**232) + L0x20019a1a_f * (x**233) + 
            L0x20019a1c_f * (x**234) + L0x20019a1e_f * (x**235) + 
            L0x20019a20_f * (x**236) + L0x20019a22_f * (x**237) + 
            L0x20019a24_f * (x**238) + L0x20019a26_f * (x**239) + 
            L0x20019a28_f * (x**240) + L0x20019a2a_f * (x**241) + 
            L0x20019a2c_f * (x**242) + L0x20019a2e_f * (x**243) + 
            L0x20019a30_f * (x**244) + L0x20019a32_f * (x**245) + 
            L0x20019a34_f * (x**246) + L0x20019a36_f * (x**247) + 
            L0x20019a38_f * (x**248) + L0x20019a3a_f * (x**249) + 
            L0x20019a3c_f * (x**250) + L0x20019a3e_f * (x**251) + 
            L0x20019a40_f * (x**252) + L0x20019a42_f * (x**253) + 
            L0x20019a44_f * (x**254) + L0x20019a46_f * (x**255)
          )
          [25570049, x**4 - y_0_02 * 830930, y_0_02 - 1],
    (* inp_poly_3 *)
    eqmod (2**32) * (inp_poly_3 * inp_poly_3)
          (
            L0x20019848_f * (x**0) + L0x2001984a_f * (x**1) + 
            L0x2001984c_f * (x**2) + L0x2001984e_f * (x**3) + 
            L0x20019850_f * (x**4) + L0x20019852_f * (x**5) + 
            L0x20019854_f * (x**6) + L0x20019856_f * (x**7) + 
            L0x20019858_f * (x**8) + L0x2001985a_f * (x**9) + 
            L0x2001985c_f * (x**10) + L0x2001985e_f * (x**11) + 
            L0x20019860_f * (x**12) + L0x20019862_f * (x**13) + 
            L0x20019864_f * (x**14) + L0x20019866_f * (x**15) + 
            L0x20019868_f * (x**16) + L0x2001986a_f * (x**17) + 
            L0x2001986c_f * (x**18) + L0x2001986e_f * (x**19) + 
            L0x20019870_f * (x**20) + L0x20019872_f * (x**21) + 
            L0x20019874_f * (x**22) + L0x20019876_f * (x**23) + 
            L0x20019878_f * (x**24) + L0x2001987a_f * (x**25) + 
            L0x2001987c_f * (x**26) + L0x2001987e_f * (x**27) + 
            L0x20019880_f * (x**28) + L0x20019882_f * (x**29) + 
            L0x20019884_f * (x**30) + L0x20019886_f * (x**31) + 
            L0x20019888_f * (x**32) + L0x2001988a_f * (x**33) + 
            L0x2001988c_f * (x**34) + L0x2001988e_f * (x**35) + 
            L0x20019890_f * (x**36) + L0x20019892_f * (x**37) + 
            L0x20019894_f * (x**38) + L0x20019896_f * (x**39) + 
            L0x20019898_f * (x**40) + L0x2001989a_f * (x**41) + 
            L0x2001989c_f * (x**42) + L0x2001989e_f * (x**43) + 
            L0x200198a0_f * (x**44) + L0x200198a2_f * (x**45) + 
            L0x200198a4_f * (x**46) + L0x200198a6_f * (x**47) + 
            L0x200198a8_f * (x**48) + L0x200198aa_f * (x**49) + 
            L0x200198ac_f * (x**50) + L0x200198ae_f * (x**51) + 
            L0x200198b0_f * (x**52) + L0x200198b2_f * (x**53) + 
            L0x200198b4_f * (x**54) + L0x200198b6_f * (x**55) + 
            L0x200198b8_f * (x**56) + L0x200198ba_f * (x**57) + 
            L0x200198bc_f * (x**58) + L0x200198be_f * (x**59) + 
            L0x200198c0_f * (x**60) + L0x200198c2_f * (x**61) + 
            L0x200198c4_f * (x**62) + L0x200198c6_f * (x**63) + 
            L0x200198c8_f * (x**64) + L0x200198ca_f * (x**65) + 
            L0x200198cc_f * (x**66) + L0x200198ce_f * (x**67) + 
            L0x200198d0_f * (x**68) + L0x200198d2_f * (x**69) + 
            L0x200198d4_f * (x**70) + L0x200198d6_f * (x**71) + 
            L0x200198d8_f * (x**72) + L0x200198da_f * (x**73) + 
            L0x200198dc_f * (x**74) + L0x200198de_f * (x**75) + 
            L0x200198e0_f * (x**76) + L0x200198e2_f * (x**77) + 
            L0x200198e4_f * (x**78) + L0x200198e6_f * (x**79) + 
            L0x200198e8_f * (x**80) + L0x200198ea_f * (x**81) + 
            L0x200198ec_f * (x**82) + L0x200198ee_f * (x**83) + 
            L0x200198f0_f * (x**84) + L0x200198f2_f * (x**85) + 
            L0x200198f4_f * (x**86) + L0x200198f6_f * (x**87) + 
            L0x200198f8_f * (x**88) + L0x200198fa_f * (x**89) + 
            L0x200198fc_f * (x**90) + L0x200198fe_f * (x**91) + 
            L0x20019900_f * (x**92) + L0x20019902_f * (x**93) + 
            L0x20019904_f * (x**94) + L0x20019906_f * (x**95) + 
            L0x20019908_f * (x**96) + L0x2001990a_f * (x**97) + 
            L0x2001990c_f * (x**98) + L0x2001990e_f * (x**99) + 
            L0x20019910_f * (x**100) + L0x20019912_f * (x**101) + 
            L0x20019914_f * (x**102) + L0x20019916_f * (x**103) + 
            L0x20019918_f * (x**104) + L0x2001991a_f * (x**105) + 
            L0x2001991c_f * (x**106) + L0x2001991e_f * (x**107) + 
            L0x20019920_f * (x**108) + L0x20019922_f * (x**109) + 
            L0x20019924_f * (x**110) + L0x20019926_f * (x**111) + 
            L0x20019928_f * (x**112) + L0x2001992a_f * (x**113) + 
            L0x2001992c_f * (x**114) + L0x2001992e_f * (x**115) + 
            L0x20019930_f * (x**116) + L0x20019932_f * (x**117) + 
            L0x20019934_f * (x**118) + L0x20019936_f * (x**119) + 
            L0x20019938_f * (x**120) + L0x2001993a_f * (x**121) + 
            L0x2001993c_f * (x**122) + L0x2001993e_f * (x**123) + 
            L0x20019940_f * (x**124) + L0x20019942_f * (x**125) + 
            L0x20019944_f * (x**126) + L0x20019946_f * (x**127) + 
            L0x20019948_f * (x**128) + L0x2001994a_f * (x**129) + 
            L0x2001994c_f * (x**130) + L0x2001994e_f * (x**131) + 
            L0x20019950_f * (x**132) + L0x20019952_f * (x**133) + 
            L0x20019954_f * (x**134) + L0x20019956_f * (x**135) + 
            L0x20019958_f * (x**136) + L0x2001995a_f * (x**137) + 
            L0x2001995c_f * (x**138) + L0x2001995e_f * (x**139) + 
            L0x20019960_f * (x**140) + L0x20019962_f * (x**141) + 
            L0x20019964_f * (x**142) + L0x20019966_f * (x**143) + 
            L0x20019968_f * (x**144) + L0x2001996a_f * (x**145) + 
            L0x2001996c_f * (x**146) + L0x2001996e_f * (x**147) + 
            L0x20019970_f * (x**148) + L0x20019972_f * (x**149) + 
            L0x20019974_f * (x**150) + L0x20019976_f * (x**151) + 
            L0x20019978_f * (x**152) + L0x2001997a_f * (x**153) + 
            L0x2001997c_f * (x**154) + L0x2001997e_f * (x**155) + 
            L0x20019980_f * (x**156) + L0x20019982_f * (x**157) + 
            L0x20019984_f * (x**158) + L0x20019986_f * (x**159) + 
            L0x20019988_f * (x**160) + L0x2001998a_f * (x**161) + 
            L0x2001998c_f * (x**162) + L0x2001998e_f * (x**163) + 
            L0x20019990_f * (x**164) + L0x20019992_f * (x**165) + 
            L0x20019994_f * (x**166) + L0x20019996_f * (x**167) + 
            L0x20019998_f * (x**168) + L0x2001999a_f * (x**169) + 
            L0x2001999c_f * (x**170) + L0x2001999e_f * (x**171) + 
            L0x200199a0_f * (x**172) + L0x200199a2_f * (x**173) + 
            L0x200199a4_f * (x**174) + L0x200199a6_f * (x**175) + 
            L0x200199a8_f * (x**176) + L0x200199aa_f * (x**177) + 
            L0x200199ac_f * (x**178) + L0x200199ae_f * (x**179) + 
            L0x200199b0_f * (x**180) + L0x200199b2_f * (x**181) + 
            L0x200199b4_f * (x**182) + L0x200199b6_f * (x**183) + 
            L0x200199b8_f * (x**184) + L0x200199ba_f * (x**185) + 
            L0x200199bc_f * (x**186) + L0x200199be_f * (x**187) + 
            L0x200199c0_f * (x**188) + L0x200199c2_f * (x**189) + 
            L0x200199c4_f * (x**190) + L0x200199c6_f * (x**191) + 
            L0x200199c8_f * (x**192) + L0x200199ca_f * (x**193) + 
            L0x200199cc_f * (x**194) + L0x200199ce_f * (x**195) + 
            L0x200199d0_f * (x**196) + L0x200199d2_f * (x**197) + 
            L0x200199d4_f * (x**198) + L0x200199d6_f * (x**199) + 
            L0x200199d8_f * (x**200) + L0x200199da_f * (x**201) + 
            L0x200199dc_f * (x**202) + L0x200199de_f * (x**203) + 
            L0x200199e0_f * (x**204) + L0x200199e2_f * (x**205) + 
            L0x200199e4_f * (x**206) + L0x200199e6_f * (x**207) + 
            L0x200199e8_f * (x**208) + L0x200199ea_f * (x**209) + 
            L0x200199ec_f * (x**210) + L0x200199ee_f * (x**211) + 
            L0x200199f0_f * (x**212) + L0x200199f2_f * (x**213) + 
            L0x200199f4_f * (x**214) + L0x200199f6_f * (x**215) + 
            L0x200199f8_f * (x**216) + L0x200199fa_f * (x**217) + 
            L0x200199fc_f * (x**218) + L0x200199fe_f * (x**219) + 
            L0x20019a00_f * (x**220) + L0x20019a02_f * (x**221) + 
            L0x20019a04_f * (x**222) + L0x20019a06_f * (x**223) + 
            L0x20019a08_f * (x**224) + L0x20019a0a_f * (x**225) + 
            L0x20019a0c_f * (x**226) + L0x20019a0e_f * (x**227) + 
            L0x20019a10_f * (x**228) + L0x20019a12_f * (x**229) + 
            L0x20019a14_f * (x**230) + L0x20019a16_f * (x**231) + 
            L0x20019a18_f * (x**232) + L0x20019a1a_f * (x**233) + 
            L0x20019a1c_f * (x**234) + L0x20019a1e_f * (x**235) + 
            L0x20019a20_f * (x**236) + L0x20019a22_f * (x**237) + 
            L0x20019a24_f * (x**238) + L0x20019a26_f * (x**239) + 
            L0x20019a28_f * (x**240) + L0x20019a2a_f * (x**241) + 
            L0x20019a2c_f * (x**242) + L0x20019a2e_f * (x**243) + 
            L0x20019a30_f * (x**244) + L0x20019a32_f * (x**245) + 
            L0x20019a34_f * (x**246) + L0x20019a36_f * (x**247) + 
            L0x20019a38_f * (x**248) + L0x20019a3a_f * (x**249) + 
            L0x20019a3c_f * (x**250) + L0x20019a3e_f * (x**251) + 
            L0x20019a40_f * (x**252) + L0x20019a42_f * (x**253) + 
            L0x20019a44_f * (x**254) + L0x20019a46_f * (x**255)
          )
          [25570049, x**4 - y_0_03 * 24739119, y_0_03 - 1],
    (* inp_poly_4 *)
    eqmod (2**32) * (inp_poly_4 * inp_poly_4)
          (
            L0x20019848_f * (x**0) + L0x2001984a_f * (x**1) + 
            L0x2001984c_f * (x**2) + L0x2001984e_f * (x**3) + 
            L0x20019850_f * (x**4) + L0x20019852_f * (x**5) + 
            L0x20019854_f * (x**6) + L0x20019856_f * (x**7) + 
            L0x20019858_f * (x**8) + L0x2001985a_f * (x**9) + 
            L0x2001985c_f * (x**10) + L0x2001985e_f * (x**11) + 
            L0x20019860_f * (x**12) + L0x20019862_f * (x**13) + 
            L0x20019864_f * (x**14) + L0x20019866_f * (x**15) + 
            L0x20019868_f * (x**16) + L0x2001986a_f * (x**17) + 
            L0x2001986c_f * (x**18) + L0x2001986e_f * (x**19) + 
            L0x20019870_f * (x**20) + L0x20019872_f * (x**21) + 
            L0x20019874_f * (x**22) + L0x20019876_f * (x**23) + 
            L0x20019878_f * (x**24) + L0x2001987a_f * (x**25) + 
            L0x2001987c_f * (x**26) + L0x2001987e_f * (x**27) + 
            L0x20019880_f * (x**28) + L0x20019882_f * (x**29) + 
            L0x20019884_f * (x**30) + L0x20019886_f * (x**31) + 
            L0x20019888_f * (x**32) + L0x2001988a_f * (x**33) + 
            L0x2001988c_f * (x**34) + L0x2001988e_f * (x**35) + 
            L0x20019890_f * (x**36) + L0x20019892_f * (x**37) + 
            L0x20019894_f * (x**38) + L0x20019896_f * (x**39) + 
            L0x20019898_f * (x**40) + L0x2001989a_f * (x**41) + 
            L0x2001989c_f * (x**42) + L0x2001989e_f * (x**43) + 
            L0x200198a0_f * (x**44) + L0x200198a2_f * (x**45) + 
            L0x200198a4_f * (x**46) + L0x200198a6_f * (x**47) + 
            L0x200198a8_f * (x**48) + L0x200198aa_f * (x**49) + 
            L0x200198ac_f * (x**50) + L0x200198ae_f * (x**51) + 
            L0x200198b0_f * (x**52) + L0x200198b2_f * (x**53) + 
            L0x200198b4_f * (x**54) + L0x200198b6_f * (x**55) + 
            L0x200198b8_f * (x**56) + L0x200198ba_f * (x**57) + 
            L0x200198bc_f * (x**58) + L0x200198be_f * (x**59) + 
            L0x200198c0_f * (x**60) + L0x200198c2_f * (x**61) + 
            L0x200198c4_f * (x**62) + L0x200198c6_f * (x**63) + 
            L0x200198c8_f * (x**64) + L0x200198ca_f * (x**65) + 
            L0x200198cc_f * (x**66) + L0x200198ce_f * (x**67) + 
            L0x200198d0_f * (x**68) + L0x200198d2_f * (x**69) + 
            L0x200198d4_f * (x**70) + L0x200198d6_f * (x**71) + 
            L0x200198d8_f * (x**72) + L0x200198da_f * (x**73) + 
            L0x200198dc_f * (x**74) + L0x200198de_f * (x**75) + 
            L0x200198e0_f * (x**76) + L0x200198e2_f * (x**77) + 
            L0x200198e4_f * (x**78) + L0x200198e6_f * (x**79) + 
            L0x200198e8_f * (x**80) + L0x200198ea_f * (x**81) + 
            L0x200198ec_f * (x**82) + L0x200198ee_f * (x**83) + 
            L0x200198f0_f * (x**84) + L0x200198f2_f * (x**85) + 
            L0x200198f4_f * (x**86) + L0x200198f6_f * (x**87) + 
            L0x200198f8_f * (x**88) + L0x200198fa_f * (x**89) + 
            L0x200198fc_f * (x**90) + L0x200198fe_f * (x**91) + 
            L0x20019900_f * (x**92) + L0x20019902_f * (x**93) + 
            L0x20019904_f * (x**94) + L0x20019906_f * (x**95) + 
            L0x20019908_f * (x**96) + L0x2001990a_f * (x**97) + 
            L0x2001990c_f * (x**98) + L0x2001990e_f * (x**99) + 
            L0x20019910_f * (x**100) + L0x20019912_f * (x**101) + 
            L0x20019914_f * (x**102) + L0x20019916_f * (x**103) + 
            L0x20019918_f * (x**104) + L0x2001991a_f * (x**105) + 
            L0x2001991c_f * (x**106) + L0x2001991e_f * (x**107) + 
            L0x20019920_f * (x**108) + L0x20019922_f * (x**109) + 
            L0x20019924_f * (x**110) + L0x20019926_f * (x**111) + 
            L0x20019928_f * (x**112) + L0x2001992a_f * (x**113) + 
            L0x2001992c_f * (x**114) + L0x2001992e_f * (x**115) + 
            L0x20019930_f * (x**116) + L0x20019932_f * (x**117) + 
            L0x20019934_f * (x**118) + L0x20019936_f * (x**119) + 
            L0x20019938_f * (x**120) + L0x2001993a_f * (x**121) + 
            L0x2001993c_f * (x**122) + L0x2001993e_f * (x**123) + 
            L0x20019940_f * (x**124) + L0x20019942_f * (x**125) + 
            L0x20019944_f * (x**126) + L0x20019946_f * (x**127) + 
            L0x20019948_f * (x**128) + L0x2001994a_f * (x**129) + 
            L0x2001994c_f * (x**130) + L0x2001994e_f * (x**131) + 
            L0x20019950_f * (x**132) + L0x20019952_f * (x**133) + 
            L0x20019954_f * (x**134) + L0x20019956_f * (x**135) + 
            L0x20019958_f * (x**136) + L0x2001995a_f * (x**137) + 
            L0x2001995c_f * (x**138) + L0x2001995e_f * (x**139) + 
            L0x20019960_f * (x**140) + L0x20019962_f * (x**141) + 
            L0x20019964_f * (x**142) + L0x20019966_f * (x**143) + 
            L0x20019968_f * (x**144) + L0x2001996a_f * (x**145) + 
            L0x2001996c_f * (x**146) + L0x2001996e_f * (x**147) + 
            L0x20019970_f * (x**148) + L0x20019972_f * (x**149) + 
            L0x20019974_f * (x**150) + L0x20019976_f * (x**151) + 
            L0x20019978_f * (x**152) + L0x2001997a_f * (x**153) + 
            L0x2001997c_f * (x**154) + L0x2001997e_f * (x**155) + 
            L0x20019980_f * (x**156) + L0x20019982_f * (x**157) + 
            L0x20019984_f * (x**158) + L0x20019986_f * (x**159) + 
            L0x20019988_f * (x**160) + L0x2001998a_f * (x**161) + 
            L0x2001998c_f * (x**162) + L0x2001998e_f * (x**163) + 
            L0x20019990_f * (x**164) + L0x20019992_f * (x**165) + 
            L0x20019994_f * (x**166) + L0x20019996_f * (x**167) + 
            L0x20019998_f * (x**168) + L0x2001999a_f * (x**169) + 
            L0x2001999c_f * (x**170) + L0x2001999e_f * (x**171) + 
            L0x200199a0_f * (x**172) + L0x200199a2_f * (x**173) + 
            L0x200199a4_f * (x**174) + L0x200199a6_f * (x**175) + 
            L0x200199a8_f * (x**176) + L0x200199aa_f * (x**177) + 
            L0x200199ac_f * (x**178) + L0x200199ae_f * (x**179) + 
            L0x200199b0_f * (x**180) + L0x200199b2_f * (x**181) + 
            L0x200199b4_f * (x**182) + L0x200199b6_f * (x**183) + 
            L0x200199b8_f * (x**184) + L0x200199ba_f * (x**185) + 
            L0x200199bc_f * (x**186) + L0x200199be_f * (x**187) + 
            L0x200199c0_f * (x**188) + L0x200199c2_f * (x**189) + 
            L0x200199c4_f * (x**190) + L0x200199c6_f * (x**191) + 
            L0x200199c8_f * (x**192) + L0x200199ca_f * (x**193) + 
            L0x200199cc_f * (x**194) + L0x200199ce_f * (x**195) + 
            L0x200199d0_f * (x**196) + L0x200199d2_f * (x**197) + 
            L0x200199d4_f * (x**198) + L0x200199d6_f * (x**199) + 
            L0x200199d8_f * (x**200) + L0x200199da_f * (x**201) + 
            L0x200199dc_f * (x**202) + L0x200199de_f * (x**203) + 
            L0x200199e0_f * (x**204) + L0x200199e2_f * (x**205) + 
            L0x200199e4_f * (x**206) + L0x200199e6_f * (x**207) + 
            L0x200199e8_f * (x**208) + L0x200199ea_f * (x**209) + 
            L0x200199ec_f * (x**210) + L0x200199ee_f * (x**211) + 
            L0x200199f0_f * (x**212) + L0x200199f2_f * (x**213) + 
            L0x200199f4_f * (x**214) + L0x200199f6_f * (x**215) + 
            L0x200199f8_f * (x**216) + L0x200199fa_f * (x**217) + 
            L0x200199fc_f * (x**218) + L0x200199fe_f * (x**219) + 
            L0x20019a00_f * (x**220) + L0x20019a02_f * (x**221) + 
            L0x20019a04_f * (x**222) + L0x20019a06_f * (x**223) + 
            L0x20019a08_f * (x**224) + L0x20019a0a_f * (x**225) + 
            L0x20019a0c_f * (x**226) + L0x20019a0e_f * (x**227) + 
            L0x20019a10_f * (x**228) + L0x20019a12_f * (x**229) + 
            L0x20019a14_f * (x**230) + L0x20019a16_f * (x**231) + 
            L0x20019a18_f * (x**232) + L0x20019a1a_f * (x**233) + 
            L0x20019a1c_f * (x**234) + L0x20019a1e_f * (x**235) + 
            L0x20019a20_f * (x**236) + L0x20019a22_f * (x**237) + 
            L0x20019a24_f * (x**238) + L0x20019a26_f * (x**239) + 
            L0x20019a28_f * (x**240) + L0x20019a2a_f * (x**241) + 
            L0x20019a2c_f * (x**242) + L0x20019a2e_f * (x**243) + 
            L0x20019a30_f * (x**244) + L0x20019a32_f * (x**245) + 
            L0x20019a34_f * (x**246) + L0x20019a36_f * (x**247) + 
            L0x20019a38_f * (x**248) + L0x20019a3a_f * (x**249) + 
            L0x20019a3c_f * (x**250) + L0x20019a3e_f * (x**251) + 
            L0x20019a40_f * (x**252) + L0x20019a42_f * (x**253) + 
            L0x20019a44_f * (x**254) + L0x20019a46_f * (x**255)
          )
          [25570049, x**4 - y_0_04 * 678652, y_0_04 - 1],
    (* inp_poly_5 *)
    eqmod (2**32) * (inp_poly_5 * inp_poly_5)
          (
            L0x20019848_f * (x**0) + L0x2001984a_f * (x**1) + 
            L0x2001984c_f * (x**2) + L0x2001984e_f * (x**3) + 
            L0x20019850_f * (x**4) + L0x20019852_f * (x**5) + 
            L0x20019854_f * (x**6) + L0x20019856_f * (x**7) + 
            L0x20019858_f * (x**8) + L0x2001985a_f * (x**9) + 
            L0x2001985c_f * (x**10) + L0x2001985e_f * (x**11) + 
            L0x20019860_f * (x**12) + L0x20019862_f * (x**13) + 
            L0x20019864_f * (x**14) + L0x20019866_f * (x**15) + 
            L0x20019868_f * (x**16) + L0x2001986a_f * (x**17) + 
            L0x2001986c_f * (x**18) + L0x2001986e_f * (x**19) + 
            L0x20019870_f * (x**20) + L0x20019872_f * (x**21) + 
            L0x20019874_f * (x**22) + L0x20019876_f * (x**23) + 
            L0x20019878_f * (x**24) + L0x2001987a_f * (x**25) + 
            L0x2001987c_f * (x**26) + L0x2001987e_f * (x**27) + 
            L0x20019880_f * (x**28) + L0x20019882_f * (x**29) + 
            L0x20019884_f * (x**30) + L0x20019886_f * (x**31) + 
            L0x20019888_f * (x**32) + L0x2001988a_f * (x**33) + 
            L0x2001988c_f * (x**34) + L0x2001988e_f * (x**35) + 
            L0x20019890_f * (x**36) + L0x20019892_f * (x**37) + 
            L0x20019894_f * (x**38) + L0x20019896_f * (x**39) + 
            L0x20019898_f * (x**40) + L0x2001989a_f * (x**41) + 
            L0x2001989c_f * (x**42) + L0x2001989e_f * (x**43) + 
            L0x200198a0_f * (x**44) + L0x200198a2_f * (x**45) + 
            L0x200198a4_f * (x**46) + L0x200198a6_f * (x**47) + 
            L0x200198a8_f * (x**48) + L0x200198aa_f * (x**49) + 
            L0x200198ac_f * (x**50) + L0x200198ae_f * (x**51) + 
            L0x200198b0_f * (x**52) + L0x200198b2_f * (x**53) + 
            L0x200198b4_f * (x**54) + L0x200198b6_f * (x**55) + 
            L0x200198b8_f * (x**56) + L0x200198ba_f * (x**57) + 
            L0x200198bc_f * (x**58) + L0x200198be_f * (x**59) + 
            L0x200198c0_f * (x**60) + L0x200198c2_f * (x**61) + 
            L0x200198c4_f * (x**62) + L0x200198c6_f * (x**63) + 
            L0x200198c8_f * (x**64) + L0x200198ca_f * (x**65) + 
            L0x200198cc_f * (x**66) + L0x200198ce_f * (x**67) + 
            L0x200198d0_f * (x**68) + L0x200198d2_f * (x**69) + 
            L0x200198d4_f * (x**70) + L0x200198d6_f * (x**71) + 
            L0x200198d8_f * (x**72) + L0x200198da_f * (x**73) + 
            L0x200198dc_f * (x**74) + L0x200198de_f * (x**75) + 
            L0x200198e0_f * (x**76) + L0x200198e2_f * (x**77) + 
            L0x200198e4_f * (x**78) + L0x200198e6_f * (x**79) + 
            L0x200198e8_f * (x**80) + L0x200198ea_f * (x**81) + 
            L0x200198ec_f * (x**82) + L0x200198ee_f * (x**83) + 
            L0x200198f0_f * (x**84) + L0x200198f2_f * (x**85) + 
            L0x200198f4_f * (x**86) + L0x200198f6_f * (x**87) + 
            L0x200198f8_f * (x**88) + L0x200198fa_f * (x**89) + 
            L0x200198fc_f * (x**90) + L0x200198fe_f * (x**91) + 
            L0x20019900_f * (x**92) + L0x20019902_f * (x**93) + 
            L0x20019904_f * (x**94) + L0x20019906_f * (x**95) + 
            L0x20019908_f * (x**96) + L0x2001990a_f * (x**97) + 
            L0x2001990c_f * (x**98) + L0x2001990e_f * (x**99) + 
            L0x20019910_f * (x**100) + L0x20019912_f * (x**101) + 
            L0x20019914_f * (x**102) + L0x20019916_f * (x**103) + 
            L0x20019918_f * (x**104) + L0x2001991a_f * (x**105) + 
            L0x2001991c_f * (x**106) + L0x2001991e_f * (x**107) + 
            L0x20019920_f * (x**108) + L0x20019922_f * (x**109) + 
            L0x20019924_f * (x**110) + L0x20019926_f * (x**111) + 
            L0x20019928_f * (x**112) + L0x2001992a_f * (x**113) + 
            L0x2001992c_f * (x**114) + L0x2001992e_f * (x**115) + 
            L0x20019930_f * (x**116) + L0x20019932_f * (x**117) + 
            L0x20019934_f * (x**118) + L0x20019936_f * (x**119) + 
            L0x20019938_f * (x**120) + L0x2001993a_f * (x**121) + 
            L0x2001993c_f * (x**122) + L0x2001993e_f * (x**123) + 
            L0x20019940_f * (x**124) + L0x20019942_f * (x**125) + 
            L0x20019944_f * (x**126) + L0x20019946_f * (x**127) + 
            L0x20019948_f * (x**128) + L0x2001994a_f * (x**129) + 
            L0x2001994c_f * (x**130) + L0x2001994e_f * (x**131) + 
            L0x20019950_f * (x**132) + L0x20019952_f * (x**133) + 
            L0x20019954_f * (x**134) + L0x20019956_f * (x**135) + 
            L0x20019958_f * (x**136) + L0x2001995a_f * (x**137) + 
            L0x2001995c_f * (x**138) + L0x2001995e_f * (x**139) + 
            L0x20019960_f * (x**140) + L0x20019962_f * (x**141) + 
            L0x20019964_f * (x**142) + L0x20019966_f * (x**143) + 
            L0x20019968_f * (x**144) + L0x2001996a_f * (x**145) + 
            L0x2001996c_f * (x**146) + L0x2001996e_f * (x**147) + 
            L0x20019970_f * (x**148) + L0x20019972_f * (x**149) + 
            L0x20019974_f * (x**150) + L0x20019976_f * (x**151) + 
            L0x20019978_f * (x**152) + L0x2001997a_f * (x**153) + 
            L0x2001997c_f * (x**154) + L0x2001997e_f * (x**155) + 
            L0x20019980_f * (x**156) + L0x20019982_f * (x**157) + 
            L0x20019984_f * (x**158) + L0x20019986_f * (x**159) + 
            L0x20019988_f * (x**160) + L0x2001998a_f * (x**161) + 
            L0x2001998c_f * (x**162) + L0x2001998e_f * (x**163) + 
            L0x20019990_f * (x**164) + L0x20019992_f * (x**165) + 
            L0x20019994_f * (x**166) + L0x20019996_f * (x**167) + 
            L0x20019998_f * (x**168) + L0x2001999a_f * (x**169) + 
            L0x2001999c_f * (x**170) + L0x2001999e_f * (x**171) + 
            L0x200199a0_f * (x**172) + L0x200199a2_f * (x**173) + 
            L0x200199a4_f * (x**174) + L0x200199a6_f * (x**175) + 
            L0x200199a8_f * (x**176) + L0x200199aa_f * (x**177) + 
            L0x200199ac_f * (x**178) + L0x200199ae_f * (x**179) + 
            L0x200199b0_f * (x**180) + L0x200199b2_f * (x**181) + 
            L0x200199b4_f * (x**182) + L0x200199b6_f * (x**183) + 
            L0x200199b8_f * (x**184) + L0x200199ba_f * (x**185) + 
            L0x200199bc_f * (x**186) + L0x200199be_f * (x**187) + 
            L0x200199c0_f * (x**188) + L0x200199c2_f * (x**189) + 
            L0x200199c4_f * (x**190) + L0x200199c6_f * (x**191) + 
            L0x200199c8_f * (x**192) + L0x200199ca_f * (x**193) + 
            L0x200199cc_f * (x**194) + L0x200199ce_f * (x**195) + 
            L0x200199d0_f * (x**196) + L0x200199d2_f * (x**197) + 
            L0x200199d4_f * (x**198) + L0x200199d6_f * (x**199) + 
            L0x200199d8_f * (x**200) + L0x200199da_f * (x**201) + 
            L0x200199dc_f * (x**202) + L0x200199de_f * (x**203) + 
            L0x200199e0_f * (x**204) + L0x200199e2_f * (x**205) + 
            L0x200199e4_f * (x**206) + L0x200199e6_f * (x**207) + 
            L0x200199e8_f * (x**208) + L0x200199ea_f * (x**209) + 
            L0x200199ec_f * (x**210) + L0x200199ee_f * (x**211) + 
            L0x200199f0_f * (x**212) + L0x200199f2_f * (x**213) + 
            L0x200199f4_f * (x**214) + L0x200199f6_f * (x**215) + 
            L0x200199f8_f * (x**216) + L0x200199fa_f * (x**217) + 
            L0x200199fc_f * (x**218) + L0x200199fe_f * (x**219) + 
            L0x20019a00_f * (x**220) + L0x20019a02_f * (x**221) + 
            L0x20019a04_f * (x**222) + L0x20019a06_f * (x**223) + 
            L0x20019a08_f * (x**224) + L0x20019a0a_f * (x**225) + 
            L0x20019a0c_f * (x**226) + L0x20019a0e_f * (x**227) + 
            L0x20019a10_f * (x**228) + L0x20019a12_f * (x**229) + 
            L0x20019a14_f * (x**230) + L0x20019a16_f * (x**231) + 
            L0x20019a18_f * (x**232) + L0x20019a1a_f * (x**233) + 
            L0x20019a1c_f * (x**234) + L0x20019a1e_f * (x**235) + 
            L0x20019a20_f * (x**236) + L0x20019a22_f * (x**237) + 
            L0x20019a24_f * (x**238) + L0x20019a26_f * (x**239) + 
            L0x20019a28_f * (x**240) + L0x20019a2a_f * (x**241) + 
            L0x20019a2c_f * (x**242) + L0x20019a2e_f * (x**243) + 
            L0x20019a30_f * (x**244) + L0x20019a32_f * (x**245) + 
            L0x20019a34_f * (x**246) + L0x20019a36_f * (x**247) + 
            L0x20019a38_f * (x**248) + L0x20019a3a_f * (x**249) + 
            L0x20019a3c_f * (x**250) + L0x20019a3e_f * (x**251) + 
            L0x20019a40_f * (x**252) + L0x20019a42_f * (x**253) + 
            L0x20019a44_f * (x**254) + L0x20019a46_f * (x**255)
          )
          [25570049, x**4 - y_0_05 * 24891397, y_0_05 - 1],
    (* inp_poly_6 *)
    eqmod (2**32) * (inp_poly_6 * inp_poly_6)
          (
            L0x20019848_f * (x**0) + L0x2001984a_f * (x**1) + 
            L0x2001984c_f * (x**2) + L0x2001984e_f * (x**3) + 
            L0x20019850_f * (x**4) + L0x20019852_f * (x**5) + 
            L0x20019854_f * (x**6) + L0x20019856_f * (x**7) + 
            L0x20019858_f * (x**8) + L0x2001985a_f * (x**9) + 
            L0x2001985c_f * (x**10) + L0x2001985e_f * (x**11) + 
            L0x20019860_f * (x**12) + L0x20019862_f * (x**13) + 
            L0x20019864_f * (x**14) + L0x20019866_f * (x**15) + 
            L0x20019868_f * (x**16) + L0x2001986a_f * (x**17) + 
            L0x2001986c_f * (x**18) + L0x2001986e_f * (x**19) + 
            L0x20019870_f * (x**20) + L0x20019872_f * (x**21) + 
            L0x20019874_f * (x**22) + L0x20019876_f * (x**23) + 
            L0x20019878_f * (x**24) + L0x2001987a_f * (x**25) + 
            L0x2001987c_f * (x**26) + L0x2001987e_f * (x**27) + 
            L0x20019880_f * (x**28) + L0x20019882_f * (x**29) + 
            L0x20019884_f * (x**30) + L0x20019886_f * (x**31) + 
            L0x20019888_f * (x**32) + L0x2001988a_f * (x**33) + 
            L0x2001988c_f * (x**34) + L0x2001988e_f * (x**35) + 
            L0x20019890_f * (x**36) + L0x20019892_f * (x**37) + 
            L0x20019894_f * (x**38) + L0x20019896_f * (x**39) + 
            L0x20019898_f * (x**40) + L0x2001989a_f * (x**41) + 
            L0x2001989c_f * (x**42) + L0x2001989e_f * (x**43) + 
            L0x200198a0_f * (x**44) + L0x200198a2_f * (x**45) + 
            L0x200198a4_f * (x**46) + L0x200198a6_f * (x**47) + 
            L0x200198a8_f * (x**48) + L0x200198aa_f * (x**49) + 
            L0x200198ac_f * (x**50) + L0x200198ae_f * (x**51) + 
            L0x200198b0_f * (x**52) + L0x200198b2_f * (x**53) + 
            L0x200198b4_f * (x**54) + L0x200198b6_f * (x**55) + 
            L0x200198b8_f * (x**56) + L0x200198ba_f * (x**57) + 
            L0x200198bc_f * (x**58) + L0x200198be_f * (x**59) + 
            L0x200198c0_f * (x**60) + L0x200198c2_f * (x**61) + 
            L0x200198c4_f * (x**62) + L0x200198c6_f * (x**63) + 
            L0x200198c8_f * (x**64) + L0x200198ca_f * (x**65) + 
            L0x200198cc_f * (x**66) + L0x200198ce_f * (x**67) + 
            L0x200198d0_f * (x**68) + L0x200198d2_f * (x**69) + 
            L0x200198d4_f * (x**70) + L0x200198d6_f * (x**71) + 
            L0x200198d8_f * (x**72) + L0x200198da_f * (x**73) + 
            L0x200198dc_f * (x**74) + L0x200198de_f * (x**75) + 
            L0x200198e0_f * (x**76) + L0x200198e2_f * (x**77) + 
            L0x200198e4_f * (x**78) + L0x200198e6_f * (x**79) + 
            L0x200198e8_f * (x**80) + L0x200198ea_f * (x**81) + 
            L0x200198ec_f * (x**82) + L0x200198ee_f * (x**83) + 
            L0x200198f0_f * (x**84) + L0x200198f2_f * (x**85) + 
            L0x200198f4_f * (x**86) + L0x200198f6_f * (x**87) + 
            L0x200198f8_f * (x**88) + L0x200198fa_f * (x**89) + 
            L0x200198fc_f * (x**90) + L0x200198fe_f * (x**91) + 
            L0x20019900_f * (x**92) + L0x20019902_f * (x**93) + 
            L0x20019904_f * (x**94) + L0x20019906_f * (x**95) + 
            L0x20019908_f * (x**96) + L0x2001990a_f * (x**97) + 
            L0x2001990c_f * (x**98) + L0x2001990e_f * (x**99) + 
            L0x20019910_f * (x**100) + L0x20019912_f * (x**101) + 
            L0x20019914_f * (x**102) + L0x20019916_f * (x**103) + 
            L0x20019918_f * (x**104) + L0x2001991a_f * (x**105) + 
            L0x2001991c_f * (x**106) + L0x2001991e_f * (x**107) + 
            L0x20019920_f * (x**108) + L0x20019922_f * (x**109) + 
            L0x20019924_f * (x**110) + L0x20019926_f * (x**111) + 
            L0x20019928_f * (x**112) + L0x2001992a_f * (x**113) + 
            L0x2001992c_f * (x**114) + L0x2001992e_f * (x**115) + 
            L0x20019930_f * (x**116) + L0x20019932_f * (x**117) + 
            L0x20019934_f * (x**118) + L0x20019936_f * (x**119) + 
            L0x20019938_f * (x**120) + L0x2001993a_f * (x**121) + 
            L0x2001993c_f * (x**122) + L0x2001993e_f * (x**123) + 
            L0x20019940_f * (x**124) + L0x20019942_f * (x**125) + 
            L0x20019944_f * (x**126) + L0x20019946_f * (x**127) + 
            L0x20019948_f * (x**128) + L0x2001994a_f * (x**129) + 
            L0x2001994c_f * (x**130) + L0x2001994e_f * (x**131) + 
            L0x20019950_f * (x**132) + L0x20019952_f * (x**133) + 
            L0x20019954_f * (x**134) + L0x20019956_f * (x**135) + 
            L0x20019958_f * (x**136) + L0x2001995a_f * (x**137) + 
            L0x2001995c_f * (x**138) + L0x2001995e_f * (x**139) + 
            L0x20019960_f * (x**140) + L0x20019962_f * (x**141) + 
            L0x20019964_f * (x**142) + L0x20019966_f * (x**143) + 
            L0x20019968_f * (x**144) + L0x2001996a_f * (x**145) + 
            L0x2001996c_f * (x**146) + L0x2001996e_f * (x**147) + 
            L0x20019970_f * (x**148) + L0x20019972_f * (x**149) + 
            L0x20019974_f * (x**150) + L0x20019976_f * (x**151) + 
            L0x20019978_f * (x**152) + L0x2001997a_f * (x**153) + 
            L0x2001997c_f * (x**154) + L0x2001997e_f * (x**155) + 
            L0x20019980_f * (x**156) + L0x20019982_f * (x**157) + 
            L0x20019984_f * (x**158) + L0x20019986_f * (x**159) + 
            L0x20019988_f * (x**160) + L0x2001998a_f * (x**161) + 
            L0x2001998c_f * (x**162) + L0x2001998e_f * (x**163) + 
            L0x20019990_f * (x**164) + L0x20019992_f * (x**165) + 
            L0x20019994_f * (x**166) + L0x20019996_f * (x**167) + 
            L0x20019998_f * (x**168) + L0x2001999a_f * (x**169) + 
            L0x2001999c_f * (x**170) + L0x2001999e_f * (x**171) + 
            L0x200199a0_f * (x**172) + L0x200199a2_f * (x**173) + 
            L0x200199a4_f * (x**174) + L0x200199a6_f * (x**175) + 
            L0x200199a8_f * (x**176) + L0x200199aa_f * (x**177) + 
            L0x200199ac_f * (x**178) + L0x200199ae_f * (x**179) + 
            L0x200199b0_f * (x**180) + L0x200199b2_f * (x**181) + 
            L0x200199b4_f * (x**182) + L0x200199b6_f * (x**183) + 
            L0x200199b8_f * (x**184) + L0x200199ba_f * (x**185) + 
            L0x200199bc_f * (x**186) + L0x200199be_f * (x**187) + 
            L0x200199c0_f * (x**188) + L0x200199c2_f * (x**189) + 
            L0x200199c4_f * (x**190) + L0x200199c6_f * (x**191) + 
            L0x200199c8_f * (x**192) + L0x200199ca_f * (x**193) + 
            L0x200199cc_f * (x**194) + L0x200199ce_f * (x**195) + 
            L0x200199d0_f * (x**196) + L0x200199d2_f * (x**197) + 
            L0x200199d4_f * (x**198) + L0x200199d6_f * (x**199) + 
            L0x200199d8_f * (x**200) + L0x200199da_f * (x**201) + 
            L0x200199dc_f * (x**202) + L0x200199de_f * (x**203) + 
            L0x200199e0_f * (x**204) + L0x200199e2_f * (x**205) + 
            L0x200199e4_f * (x**206) + L0x200199e6_f * (x**207) + 
            L0x200199e8_f * (x**208) + L0x200199ea_f * (x**209) + 
            L0x200199ec_f * (x**210) + L0x200199ee_f * (x**211) + 
            L0x200199f0_f * (x**212) + L0x200199f2_f * (x**213) + 
            L0x200199f4_f * (x**214) + L0x200199f6_f * (x**215) + 
            L0x200199f8_f * (x**216) + L0x200199fa_f * (x**217) + 
            L0x200199fc_f * (x**218) + L0x200199fe_f * (x**219) + 
            L0x20019a00_f * (x**220) + L0x20019a02_f * (x**221) + 
            L0x20019a04_f * (x**222) + L0x20019a06_f * (x**223) + 
            L0x20019a08_f * (x**224) + L0x20019a0a_f * (x**225) + 
            L0x20019a0c_f * (x**226) + L0x20019a0e_f * (x**227) + 
            L0x20019a10_f * (x**228) + L0x20019a12_f * (x**229) + 
            L0x20019a14_f * (x**230) + L0x20019a16_f * (x**231) + 
            L0x20019a18_f * (x**232) + L0x20019a1a_f * (x**233) + 
            L0x20019a1c_f * (x**234) + L0x20019a1e_f * (x**235) + 
            L0x20019a20_f * (x**236) + L0x20019a22_f * (x**237) + 
            L0x20019a24_f * (x**238) + L0x20019a26_f * (x**239) + 
            L0x20019a28_f * (x**240) + L0x20019a2a_f * (x**241) + 
            L0x20019a2c_f * (x**242) + L0x20019a2e_f * (x**243) + 
            L0x20019a30_f * (x**244) + L0x20019a32_f * (x**245) + 
            L0x20019a34_f * (x**246) + L0x20019a36_f * (x**247) + 
            L0x20019a38_f * (x**248) + L0x20019a3a_f * (x**249) + 
            L0x20019a3c_f * (x**250) + L0x20019a3e_f * (x**251) + 
            L0x20019a40_f * (x**252) + L0x20019a42_f * (x**253) + 
            L0x20019a44_f * (x**254) + L0x20019a46_f * (x**255)
          )
          [25570049, x**4 - y_0_06 * 9510986, y_0_06 - 1],
    (* inp_poly_7 *)
    eqmod (2**32) * (inp_poly_7 * inp_poly_7)
          (
            L0x20019848_f * (x**0) + L0x2001984a_f * (x**1) + 
            L0x2001984c_f * (x**2) + L0x2001984e_f * (x**3) + 
            L0x20019850_f * (x**4) + L0x20019852_f * (x**5) + 
            L0x20019854_f * (x**6) + L0x20019856_f * (x**7) + 
            L0x20019858_f * (x**8) + L0x2001985a_f * (x**9) + 
            L0x2001985c_f * (x**10) + L0x2001985e_f * (x**11) + 
            L0x20019860_f * (x**12) + L0x20019862_f * (x**13) + 
            L0x20019864_f * (x**14) + L0x20019866_f * (x**15) + 
            L0x20019868_f * (x**16) + L0x2001986a_f * (x**17) + 
            L0x2001986c_f * (x**18) + L0x2001986e_f * (x**19) + 
            L0x20019870_f * (x**20) + L0x20019872_f * (x**21) + 
            L0x20019874_f * (x**22) + L0x20019876_f * (x**23) + 
            L0x20019878_f * (x**24) + L0x2001987a_f * (x**25) + 
            L0x2001987c_f * (x**26) + L0x2001987e_f * (x**27) + 
            L0x20019880_f * (x**28) + L0x20019882_f * (x**29) + 
            L0x20019884_f * (x**30) + L0x20019886_f * (x**31) + 
            L0x20019888_f * (x**32) + L0x2001988a_f * (x**33) + 
            L0x2001988c_f * (x**34) + L0x2001988e_f * (x**35) + 
            L0x20019890_f * (x**36) + L0x20019892_f * (x**37) + 
            L0x20019894_f * (x**38) + L0x20019896_f * (x**39) + 
            L0x20019898_f * (x**40) + L0x2001989a_f * (x**41) + 
            L0x2001989c_f * (x**42) + L0x2001989e_f * (x**43) + 
            L0x200198a0_f * (x**44) + L0x200198a2_f * (x**45) + 
            L0x200198a4_f * (x**46) + L0x200198a6_f * (x**47) + 
            L0x200198a8_f * (x**48) + L0x200198aa_f * (x**49) + 
            L0x200198ac_f * (x**50) + L0x200198ae_f * (x**51) + 
            L0x200198b0_f * (x**52) + L0x200198b2_f * (x**53) + 
            L0x200198b4_f * (x**54) + L0x200198b6_f * (x**55) + 
            L0x200198b8_f * (x**56) + L0x200198ba_f * (x**57) + 
            L0x200198bc_f * (x**58) + L0x200198be_f * (x**59) + 
            L0x200198c0_f * (x**60) + L0x200198c2_f * (x**61) + 
            L0x200198c4_f * (x**62) + L0x200198c6_f * (x**63) + 
            L0x200198c8_f * (x**64) + L0x200198ca_f * (x**65) + 
            L0x200198cc_f * (x**66) + L0x200198ce_f * (x**67) + 
            L0x200198d0_f * (x**68) + L0x200198d2_f * (x**69) + 
            L0x200198d4_f * (x**70) + L0x200198d6_f * (x**71) + 
            L0x200198d8_f * (x**72) + L0x200198da_f * (x**73) + 
            L0x200198dc_f * (x**74) + L0x200198de_f * (x**75) + 
            L0x200198e0_f * (x**76) + L0x200198e2_f * (x**77) + 
            L0x200198e4_f * (x**78) + L0x200198e6_f * (x**79) + 
            L0x200198e8_f * (x**80) + L0x200198ea_f * (x**81) + 
            L0x200198ec_f * (x**82) + L0x200198ee_f * (x**83) + 
            L0x200198f0_f * (x**84) + L0x200198f2_f * (x**85) + 
            L0x200198f4_f * (x**86) + L0x200198f6_f * (x**87) + 
            L0x200198f8_f * (x**88) + L0x200198fa_f * (x**89) + 
            L0x200198fc_f * (x**90) + L0x200198fe_f * (x**91) + 
            L0x20019900_f * (x**92) + L0x20019902_f * (x**93) + 
            L0x20019904_f * (x**94) + L0x20019906_f * (x**95) + 
            L0x20019908_f * (x**96) + L0x2001990a_f * (x**97) + 
            L0x2001990c_f * (x**98) + L0x2001990e_f * (x**99) + 
            L0x20019910_f * (x**100) + L0x20019912_f * (x**101) + 
            L0x20019914_f * (x**102) + L0x20019916_f * (x**103) + 
            L0x20019918_f * (x**104) + L0x2001991a_f * (x**105) + 
            L0x2001991c_f * (x**106) + L0x2001991e_f * (x**107) + 
            L0x20019920_f * (x**108) + L0x20019922_f * (x**109) + 
            L0x20019924_f * (x**110) + L0x20019926_f * (x**111) + 
            L0x20019928_f * (x**112) + L0x2001992a_f * (x**113) + 
            L0x2001992c_f * (x**114) + L0x2001992e_f * (x**115) + 
            L0x20019930_f * (x**116) + L0x20019932_f * (x**117) + 
            L0x20019934_f * (x**118) + L0x20019936_f * (x**119) + 
            L0x20019938_f * (x**120) + L0x2001993a_f * (x**121) + 
            L0x2001993c_f * (x**122) + L0x2001993e_f * (x**123) + 
            L0x20019940_f * (x**124) + L0x20019942_f * (x**125) + 
            L0x20019944_f * (x**126) + L0x20019946_f * (x**127) + 
            L0x20019948_f * (x**128) + L0x2001994a_f * (x**129) + 
            L0x2001994c_f * (x**130) + L0x2001994e_f * (x**131) + 
            L0x20019950_f * (x**132) + L0x20019952_f * (x**133) + 
            L0x20019954_f * (x**134) + L0x20019956_f * (x**135) + 
            L0x20019958_f * (x**136) + L0x2001995a_f * (x**137) + 
            L0x2001995c_f * (x**138) + L0x2001995e_f * (x**139) + 
            L0x20019960_f * (x**140) + L0x20019962_f * (x**141) + 
            L0x20019964_f * (x**142) + L0x20019966_f * (x**143) + 
            L0x20019968_f * (x**144) + L0x2001996a_f * (x**145) + 
            L0x2001996c_f * (x**146) + L0x2001996e_f * (x**147) + 
            L0x20019970_f * (x**148) + L0x20019972_f * (x**149) + 
            L0x20019974_f * (x**150) + L0x20019976_f * (x**151) + 
            L0x20019978_f * (x**152) + L0x2001997a_f * (x**153) + 
            L0x2001997c_f * (x**154) + L0x2001997e_f * (x**155) + 
            L0x20019980_f * (x**156) + L0x20019982_f * (x**157) + 
            L0x20019984_f * (x**158) + L0x20019986_f * (x**159) + 
            L0x20019988_f * (x**160) + L0x2001998a_f * (x**161) + 
            L0x2001998c_f * (x**162) + L0x2001998e_f * (x**163) + 
            L0x20019990_f * (x**164) + L0x20019992_f * (x**165) + 
            L0x20019994_f * (x**166) + L0x20019996_f * (x**167) + 
            L0x20019998_f * (x**168) + L0x2001999a_f * (x**169) + 
            L0x2001999c_f * (x**170) + L0x2001999e_f * (x**171) + 
            L0x200199a0_f * (x**172) + L0x200199a2_f * (x**173) + 
            L0x200199a4_f * (x**174) + L0x200199a6_f * (x**175) + 
            L0x200199a8_f * (x**176) + L0x200199aa_f * (x**177) + 
            L0x200199ac_f * (x**178) + L0x200199ae_f * (x**179) + 
            L0x200199b0_f * (x**180) + L0x200199b2_f * (x**181) + 
            L0x200199b4_f * (x**182) + L0x200199b6_f * (x**183) + 
            L0x200199b8_f * (x**184) + L0x200199ba_f * (x**185) + 
            L0x200199bc_f * (x**186) + L0x200199be_f * (x**187) + 
            L0x200199c0_f * (x**188) + L0x200199c2_f * (x**189) + 
            L0x200199c4_f * (x**190) + L0x200199c6_f * (x**191) + 
            L0x200199c8_f * (x**192) + L0x200199ca_f * (x**193) + 
            L0x200199cc_f * (x**194) + L0x200199ce_f * (x**195) + 
            L0x200199d0_f * (x**196) + L0x200199d2_f * (x**197) + 
            L0x200199d4_f * (x**198) + L0x200199d6_f * (x**199) + 
            L0x200199d8_f * (x**200) + L0x200199da_f * (x**201) + 
            L0x200199dc_f * (x**202) + L0x200199de_f * (x**203) + 
            L0x200199e0_f * (x**204) + L0x200199e2_f * (x**205) + 
            L0x200199e4_f * (x**206) + L0x200199e6_f * (x**207) + 
            L0x200199e8_f * (x**208) + L0x200199ea_f * (x**209) + 
            L0x200199ec_f * (x**210) + L0x200199ee_f * (x**211) + 
            L0x200199f0_f * (x**212) + L0x200199f2_f * (x**213) + 
            L0x200199f4_f * (x**214) + L0x200199f6_f * (x**215) + 
            L0x200199f8_f * (x**216) + L0x200199fa_f * (x**217) + 
            L0x200199fc_f * (x**218) + L0x200199fe_f * (x**219) + 
            L0x20019a00_f * (x**220) + L0x20019a02_f * (x**221) + 
            L0x20019a04_f * (x**222) + L0x20019a06_f * (x**223) + 
            L0x20019a08_f * (x**224) + L0x20019a0a_f * (x**225) + 
            L0x20019a0c_f * (x**226) + L0x20019a0e_f * (x**227) + 
            L0x20019a10_f * (x**228) + L0x20019a12_f * (x**229) + 
            L0x20019a14_f * (x**230) + L0x20019a16_f * (x**231) + 
            L0x20019a18_f * (x**232) + L0x20019a1a_f * (x**233) + 
            L0x20019a1c_f * (x**234) + L0x20019a1e_f * (x**235) + 
            L0x20019a20_f * (x**236) + L0x20019a22_f * (x**237) + 
            L0x20019a24_f * (x**238) + L0x20019a26_f * (x**239) + 
            L0x20019a28_f * (x**240) + L0x20019a2a_f * (x**241) + 
            L0x20019a2c_f * (x**242) + L0x20019a2e_f * (x**243) + 
            L0x20019a30_f * (x**244) + L0x20019a32_f * (x**245) + 
            L0x20019a34_f * (x**246) + L0x20019a36_f * (x**247) + 
            L0x20019a38_f * (x**248) + L0x20019a3a_f * (x**249) + 
            L0x20019a3c_f * (x**250) + L0x20019a3e_f * (x**251) + 
            L0x20019a40_f * (x**252) + L0x20019a42_f * (x**253) + 
            L0x20019a44_f * (x**254) + L0x20019a46_f * (x**255)
          )
          [25570049, x**4 - y_0_07 * 16059063, y_0_07 - 1]
  ] prove with [cuts [38, 54], all ghosts]
  &&
  true
;

cut (* 57 *)
  true && true;

(* slice 1 *)
cut (* 58 *)
  and [
    (* inp_poly_8 *)
    eqmod (2**32) * (inp_poly_8 * inp_poly_8)
          (
            L0x20019848_f * (x**0) + L0x2001984a_f * (x**1) + 
            L0x2001984c_f * (x**2) + L0x2001984e_f * (x**3) + 
            L0x20019850_f * (x**4) + L0x20019852_f * (x**5) + 
            L0x20019854_f * (x**6) + L0x20019856_f * (x**7) + 
            L0x20019858_f * (x**8) + L0x2001985a_f * (x**9) + 
            L0x2001985c_f * (x**10) + L0x2001985e_f * (x**11) + 
            L0x20019860_f * (x**12) + L0x20019862_f * (x**13) + 
            L0x20019864_f * (x**14) + L0x20019866_f * (x**15) + 
            L0x20019868_f * (x**16) + L0x2001986a_f * (x**17) + 
            L0x2001986c_f * (x**18) + L0x2001986e_f * (x**19) + 
            L0x20019870_f * (x**20) + L0x20019872_f * (x**21) + 
            L0x20019874_f * (x**22) + L0x20019876_f * (x**23) + 
            L0x20019878_f * (x**24) + L0x2001987a_f * (x**25) + 
            L0x2001987c_f * (x**26) + L0x2001987e_f * (x**27) + 
            L0x20019880_f * (x**28) + L0x20019882_f * (x**29) + 
            L0x20019884_f * (x**30) + L0x20019886_f * (x**31) + 
            L0x20019888_f * (x**32) + L0x2001988a_f * (x**33) + 
            L0x2001988c_f * (x**34) + L0x2001988e_f * (x**35) + 
            L0x20019890_f * (x**36) + L0x20019892_f * (x**37) + 
            L0x20019894_f * (x**38) + L0x20019896_f * (x**39) + 
            L0x20019898_f * (x**40) + L0x2001989a_f * (x**41) + 
            L0x2001989c_f * (x**42) + L0x2001989e_f * (x**43) + 
            L0x200198a0_f * (x**44) + L0x200198a2_f * (x**45) + 
            L0x200198a4_f * (x**46) + L0x200198a6_f * (x**47) + 
            L0x200198a8_f * (x**48) + L0x200198aa_f * (x**49) + 
            L0x200198ac_f * (x**50) + L0x200198ae_f * (x**51) + 
            L0x200198b0_f * (x**52) + L0x200198b2_f * (x**53) + 
            L0x200198b4_f * (x**54) + L0x200198b6_f * (x**55) + 
            L0x200198b8_f * (x**56) + L0x200198ba_f * (x**57) + 
            L0x200198bc_f * (x**58) + L0x200198be_f * (x**59) + 
            L0x200198c0_f * (x**60) + L0x200198c2_f * (x**61) + 
            L0x200198c4_f * (x**62) + L0x200198c6_f * (x**63) + 
            L0x200198c8_f * (x**64) + L0x200198ca_f * (x**65) + 
            L0x200198cc_f * (x**66) + L0x200198ce_f * (x**67) + 
            L0x200198d0_f * (x**68) + L0x200198d2_f * (x**69) + 
            L0x200198d4_f * (x**70) + L0x200198d6_f * (x**71) + 
            L0x200198d8_f * (x**72) + L0x200198da_f * (x**73) + 
            L0x200198dc_f * (x**74) + L0x200198de_f * (x**75) + 
            L0x200198e0_f * (x**76) + L0x200198e2_f * (x**77) + 
            L0x200198e4_f * (x**78) + L0x200198e6_f * (x**79) + 
            L0x200198e8_f * (x**80) + L0x200198ea_f * (x**81) + 
            L0x200198ec_f * (x**82) + L0x200198ee_f * (x**83) + 
            L0x200198f0_f * (x**84) + L0x200198f2_f * (x**85) + 
            L0x200198f4_f * (x**86) + L0x200198f6_f * (x**87) + 
            L0x200198f8_f * (x**88) + L0x200198fa_f * (x**89) + 
            L0x200198fc_f * (x**90) + L0x200198fe_f * (x**91) + 
            L0x20019900_f * (x**92) + L0x20019902_f * (x**93) + 
            L0x20019904_f * (x**94) + L0x20019906_f * (x**95) + 
            L0x20019908_f * (x**96) + L0x2001990a_f * (x**97) + 
            L0x2001990c_f * (x**98) + L0x2001990e_f * (x**99) + 
            L0x20019910_f * (x**100) + L0x20019912_f * (x**101) + 
            L0x20019914_f * (x**102) + L0x20019916_f * (x**103) + 
            L0x20019918_f * (x**104) + L0x2001991a_f * (x**105) + 
            L0x2001991c_f * (x**106) + L0x2001991e_f * (x**107) + 
            L0x20019920_f * (x**108) + L0x20019922_f * (x**109) + 
            L0x20019924_f * (x**110) + L0x20019926_f * (x**111) + 
            L0x20019928_f * (x**112) + L0x2001992a_f * (x**113) + 
            L0x2001992c_f * (x**114) + L0x2001992e_f * (x**115) + 
            L0x20019930_f * (x**116) + L0x20019932_f * (x**117) + 
            L0x20019934_f * (x**118) + L0x20019936_f * (x**119) + 
            L0x20019938_f * (x**120) + L0x2001993a_f * (x**121) + 
            L0x2001993c_f * (x**122) + L0x2001993e_f * (x**123) + 
            L0x20019940_f * (x**124) + L0x20019942_f * (x**125) + 
            L0x20019944_f * (x**126) + L0x20019946_f * (x**127) + 
            L0x20019948_f * (x**128) + L0x2001994a_f * (x**129) + 
            L0x2001994c_f * (x**130) + L0x2001994e_f * (x**131) + 
            L0x20019950_f * (x**132) + L0x20019952_f * (x**133) + 
            L0x20019954_f * (x**134) + L0x20019956_f * (x**135) + 
            L0x20019958_f * (x**136) + L0x2001995a_f * (x**137) + 
            L0x2001995c_f * (x**138) + L0x2001995e_f * (x**139) + 
            L0x20019960_f * (x**140) + L0x20019962_f * (x**141) + 
            L0x20019964_f * (x**142) + L0x20019966_f * (x**143) + 
            L0x20019968_f * (x**144) + L0x2001996a_f * (x**145) + 
            L0x2001996c_f * (x**146) + L0x2001996e_f * (x**147) + 
            L0x20019970_f * (x**148) + L0x20019972_f * (x**149) + 
            L0x20019974_f * (x**150) + L0x20019976_f * (x**151) + 
            L0x20019978_f * (x**152) + L0x2001997a_f * (x**153) + 
            L0x2001997c_f * (x**154) + L0x2001997e_f * (x**155) + 
            L0x20019980_f * (x**156) + L0x20019982_f * (x**157) + 
            L0x20019984_f * (x**158) + L0x20019986_f * (x**159) + 
            L0x20019988_f * (x**160) + L0x2001998a_f * (x**161) + 
            L0x2001998c_f * (x**162) + L0x2001998e_f * (x**163) + 
            L0x20019990_f * (x**164) + L0x20019992_f * (x**165) + 
            L0x20019994_f * (x**166) + L0x20019996_f * (x**167) + 
            L0x20019998_f * (x**168) + L0x2001999a_f * (x**169) + 
            L0x2001999c_f * (x**170) + L0x2001999e_f * (x**171) + 
            L0x200199a0_f * (x**172) + L0x200199a2_f * (x**173) + 
            L0x200199a4_f * (x**174) + L0x200199a6_f * (x**175) + 
            L0x200199a8_f * (x**176) + L0x200199aa_f * (x**177) + 
            L0x200199ac_f * (x**178) + L0x200199ae_f * (x**179) + 
            L0x200199b0_f * (x**180) + L0x200199b2_f * (x**181) + 
            L0x200199b4_f * (x**182) + L0x200199b6_f * (x**183) + 
            L0x200199b8_f * (x**184) + L0x200199ba_f * (x**185) + 
            L0x200199bc_f * (x**186) + L0x200199be_f * (x**187) + 
            L0x200199c0_f * (x**188) + L0x200199c2_f * (x**189) + 
            L0x200199c4_f * (x**190) + L0x200199c6_f * (x**191) + 
            L0x200199c8_f * (x**192) + L0x200199ca_f * (x**193) + 
            L0x200199cc_f * (x**194) + L0x200199ce_f * (x**195) + 
            L0x200199d0_f * (x**196) + L0x200199d2_f * (x**197) + 
            L0x200199d4_f * (x**198) + L0x200199d6_f * (x**199) + 
            L0x200199d8_f * (x**200) + L0x200199da_f * (x**201) + 
            L0x200199dc_f * (x**202) + L0x200199de_f * (x**203) + 
            L0x200199e0_f * (x**204) + L0x200199e2_f * (x**205) + 
            L0x200199e4_f * (x**206) + L0x200199e6_f * (x**207) + 
            L0x200199e8_f * (x**208) + L0x200199ea_f * (x**209) + 
            L0x200199ec_f * (x**210) + L0x200199ee_f * (x**211) + 
            L0x200199f0_f * (x**212) + L0x200199f2_f * (x**213) + 
            L0x200199f4_f * (x**214) + L0x200199f6_f * (x**215) + 
            L0x200199f8_f * (x**216) + L0x200199fa_f * (x**217) + 
            L0x200199fc_f * (x**218) + L0x200199fe_f * (x**219) + 
            L0x20019a00_f * (x**220) + L0x20019a02_f * (x**221) + 
            L0x20019a04_f * (x**222) + L0x20019a06_f * (x**223) + 
            L0x20019a08_f * (x**224) + L0x20019a0a_f * (x**225) + 
            L0x20019a0c_f * (x**226) + L0x20019a0e_f * (x**227) + 
            L0x20019a10_f * (x**228) + L0x20019a12_f * (x**229) + 
            L0x20019a14_f * (x**230) + L0x20019a16_f * (x**231) + 
            L0x20019a18_f * (x**232) + L0x20019a1a_f * (x**233) + 
            L0x20019a1c_f * (x**234) + L0x20019a1e_f * (x**235) + 
            L0x20019a20_f * (x**236) + L0x20019a22_f * (x**237) + 
            L0x20019a24_f * (x**238) + L0x20019a26_f * (x**239) + 
            L0x20019a28_f * (x**240) + L0x20019a2a_f * (x**241) + 
            L0x20019a2c_f * (x**242) + L0x20019a2e_f * (x**243) + 
            L0x20019a30_f * (x**244) + L0x20019a32_f * (x**245) + 
            L0x20019a34_f * (x**246) + L0x20019a36_f * (x**247) + 
            L0x20019a38_f * (x**248) + L0x20019a3a_f * (x**249) + 
            L0x20019a3c_f * (x**250) + L0x20019a3e_f * (x**251) + 
            L0x20019a40_f * (x**252) + L0x20019a42_f * (x**253) + 
            L0x20019a44_f * (x**254) + L0x20019a46_f * (x**255)
          )
          [25570049, x**4 - y_0_08 * 24972806, y_0_08 - 1],
    (* inp_poly_9 *)
    eqmod (2**32) * (inp_poly_9 * inp_poly_9)
          (
            L0x20019848_f * (x**0) + L0x2001984a_f * (x**1) + 
            L0x2001984c_f * (x**2) + L0x2001984e_f * (x**3) + 
            L0x20019850_f * (x**4) + L0x20019852_f * (x**5) + 
            L0x20019854_f * (x**6) + L0x20019856_f * (x**7) + 
            L0x20019858_f * (x**8) + L0x2001985a_f * (x**9) + 
            L0x2001985c_f * (x**10) + L0x2001985e_f * (x**11) + 
            L0x20019860_f * (x**12) + L0x20019862_f * (x**13) + 
            L0x20019864_f * (x**14) + L0x20019866_f * (x**15) + 
            L0x20019868_f * (x**16) + L0x2001986a_f * (x**17) + 
            L0x2001986c_f * (x**18) + L0x2001986e_f * (x**19) + 
            L0x20019870_f * (x**20) + L0x20019872_f * (x**21) + 
            L0x20019874_f * (x**22) + L0x20019876_f * (x**23) + 
            L0x20019878_f * (x**24) + L0x2001987a_f * (x**25) + 
            L0x2001987c_f * (x**26) + L0x2001987e_f * (x**27) + 
            L0x20019880_f * (x**28) + L0x20019882_f * (x**29) + 
            L0x20019884_f * (x**30) + L0x20019886_f * (x**31) + 
            L0x20019888_f * (x**32) + L0x2001988a_f * (x**33) + 
            L0x2001988c_f * (x**34) + L0x2001988e_f * (x**35) + 
            L0x20019890_f * (x**36) + L0x20019892_f * (x**37) + 
            L0x20019894_f * (x**38) + L0x20019896_f * (x**39) + 
            L0x20019898_f * (x**40) + L0x2001989a_f * (x**41) + 
            L0x2001989c_f * (x**42) + L0x2001989e_f * (x**43) + 
            L0x200198a0_f * (x**44) + L0x200198a2_f * (x**45) + 
            L0x200198a4_f * (x**46) + L0x200198a6_f * (x**47) + 
            L0x200198a8_f * (x**48) + L0x200198aa_f * (x**49) + 
            L0x200198ac_f * (x**50) + L0x200198ae_f * (x**51) + 
            L0x200198b0_f * (x**52) + L0x200198b2_f * (x**53) + 
            L0x200198b4_f * (x**54) + L0x200198b6_f * (x**55) + 
            L0x200198b8_f * (x**56) + L0x200198ba_f * (x**57) + 
            L0x200198bc_f * (x**58) + L0x200198be_f * (x**59) + 
            L0x200198c0_f * (x**60) + L0x200198c2_f * (x**61) + 
            L0x200198c4_f * (x**62) + L0x200198c6_f * (x**63) + 
            L0x200198c8_f * (x**64) + L0x200198ca_f * (x**65) + 
            L0x200198cc_f * (x**66) + L0x200198ce_f * (x**67) + 
            L0x200198d0_f * (x**68) + L0x200198d2_f * (x**69) + 
            L0x200198d4_f * (x**70) + L0x200198d6_f * (x**71) + 
            L0x200198d8_f * (x**72) + L0x200198da_f * (x**73) + 
            L0x200198dc_f * (x**74) + L0x200198de_f * (x**75) + 
            L0x200198e0_f * (x**76) + L0x200198e2_f * (x**77) + 
            L0x200198e4_f * (x**78) + L0x200198e6_f * (x**79) + 
            L0x200198e8_f * (x**80) + L0x200198ea_f * (x**81) + 
            L0x200198ec_f * (x**82) + L0x200198ee_f * (x**83) + 
            L0x200198f0_f * (x**84) + L0x200198f2_f * (x**85) + 
            L0x200198f4_f * (x**86) + L0x200198f6_f * (x**87) + 
            L0x200198f8_f * (x**88) + L0x200198fa_f * (x**89) + 
            L0x200198fc_f * (x**90) + L0x200198fe_f * (x**91) + 
            L0x20019900_f * (x**92) + L0x20019902_f * (x**93) + 
            L0x20019904_f * (x**94) + L0x20019906_f * (x**95) + 
            L0x20019908_f * (x**96) + L0x2001990a_f * (x**97) + 
            L0x2001990c_f * (x**98) + L0x2001990e_f * (x**99) + 
            L0x20019910_f * (x**100) + L0x20019912_f * (x**101) + 
            L0x20019914_f * (x**102) + L0x20019916_f * (x**103) + 
            L0x20019918_f * (x**104) + L0x2001991a_f * (x**105) + 
            L0x2001991c_f * (x**106) + L0x2001991e_f * (x**107) + 
            L0x20019920_f * (x**108) + L0x20019922_f * (x**109) + 
            L0x20019924_f * (x**110) + L0x20019926_f * (x**111) + 
            L0x20019928_f * (x**112) + L0x2001992a_f * (x**113) + 
            L0x2001992c_f * (x**114) + L0x2001992e_f * (x**115) + 
            L0x20019930_f * (x**116) + L0x20019932_f * (x**117) + 
            L0x20019934_f * (x**118) + L0x20019936_f * (x**119) + 
            L0x20019938_f * (x**120) + L0x2001993a_f * (x**121) + 
            L0x2001993c_f * (x**122) + L0x2001993e_f * (x**123) + 
            L0x20019940_f * (x**124) + L0x20019942_f * (x**125) + 
            L0x20019944_f * (x**126) + L0x20019946_f * (x**127) + 
            L0x20019948_f * (x**128) + L0x2001994a_f * (x**129) + 
            L0x2001994c_f * (x**130) + L0x2001994e_f * (x**131) + 
            L0x20019950_f * (x**132) + L0x20019952_f * (x**133) + 
            L0x20019954_f * (x**134) + L0x20019956_f * (x**135) + 
            L0x20019958_f * (x**136) + L0x2001995a_f * (x**137) + 
            L0x2001995c_f * (x**138) + L0x2001995e_f * (x**139) + 
            L0x20019960_f * (x**140) + L0x20019962_f * (x**141) + 
            L0x20019964_f * (x**142) + L0x20019966_f * (x**143) + 
            L0x20019968_f * (x**144) + L0x2001996a_f * (x**145) + 
            L0x2001996c_f * (x**146) + L0x2001996e_f * (x**147) + 
            L0x20019970_f * (x**148) + L0x20019972_f * (x**149) + 
            L0x20019974_f * (x**150) + L0x20019976_f * (x**151) + 
            L0x20019978_f * (x**152) + L0x2001997a_f * (x**153) + 
            L0x2001997c_f * (x**154) + L0x2001997e_f * (x**155) + 
            L0x20019980_f * (x**156) + L0x20019982_f * (x**157) + 
            L0x20019984_f * (x**158) + L0x20019986_f * (x**159) + 
            L0x20019988_f * (x**160) + L0x2001998a_f * (x**161) + 
            L0x2001998c_f * (x**162) + L0x2001998e_f * (x**163) + 
            L0x20019990_f * (x**164) + L0x20019992_f * (x**165) + 
            L0x20019994_f * (x**166) + L0x20019996_f * (x**167) + 
            L0x20019998_f * (x**168) + L0x2001999a_f * (x**169) + 
            L0x2001999c_f * (x**170) + L0x2001999e_f * (x**171) + 
            L0x200199a0_f * (x**172) + L0x200199a2_f * (x**173) + 
            L0x200199a4_f * (x**174) + L0x200199a6_f * (x**175) + 
            L0x200199a8_f * (x**176) + L0x200199aa_f * (x**177) + 
            L0x200199ac_f * (x**178) + L0x200199ae_f * (x**179) + 
            L0x200199b0_f * (x**180) + L0x200199b2_f * (x**181) + 
            L0x200199b4_f * (x**182) + L0x200199b6_f * (x**183) + 
            L0x200199b8_f * (x**184) + L0x200199ba_f * (x**185) + 
            L0x200199bc_f * (x**186) + L0x200199be_f * (x**187) + 
            L0x200199c0_f * (x**188) + L0x200199c2_f * (x**189) + 
            L0x200199c4_f * (x**190) + L0x200199c6_f * (x**191) + 
            L0x200199c8_f * (x**192) + L0x200199ca_f * (x**193) + 
            L0x200199cc_f * (x**194) + L0x200199ce_f * (x**195) + 
            L0x200199d0_f * (x**196) + L0x200199d2_f * (x**197) + 
            L0x200199d4_f * (x**198) + L0x200199d6_f * (x**199) + 
            L0x200199d8_f * (x**200) + L0x200199da_f * (x**201) + 
            L0x200199dc_f * (x**202) + L0x200199de_f * (x**203) + 
            L0x200199e0_f * (x**204) + L0x200199e2_f * (x**205) + 
            L0x200199e4_f * (x**206) + L0x200199e6_f * (x**207) + 
            L0x200199e8_f * (x**208) + L0x200199ea_f * (x**209) + 
            L0x200199ec_f * (x**210) + L0x200199ee_f * (x**211) + 
            L0x200199f0_f * (x**212) + L0x200199f2_f * (x**213) + 
            L0x200199f4_f * (x**214) + L0x200199f6_f * (x**215) + 
            L0x200199f8_f * (x**216) + L0x200199fa_f * (x**217) + 
            L0x200199fc_f * (x**218) + L0x200199fe_f * (x**219) + 
            L0x20019a00_f * (x**220) + L0x20019a02_f * (x**221) + 
            L0x20019a04_f * (x**222) + L0x20019a06_f * (x**223) + 
            L0x20019a08_f * (x**224) + L0x20019a0a_f * (x**225) + 
            L0x20019a0c_f * (x**226) + L0x20019a0e_f * (x**227) + 
            L0x20019a10_f * (x**228) + L0x20019a12_f * (x**229) + 
            L0x20019a14_f * (x**230) + L0x20019a16_f * (x**231) + 
            L0x20019a18_f * (x**232) + L0x20019a1a_f * (x**233) + 
            L0x20019a1c_f * (x**234) + L0x20019a1e_f * (x**235) + 
            L0x20019a20_f * (x**236) + L0x20019a22_f * (x**237) + 
            L0x20019a24_f * (x**238) + L0x20019a26_f * (x**239) + 
            L0x20019a28_f * (x**240) + L0x20019a2a_f * (x**241) + 
            L0x20019a2c_f * (x**242) + L0x20019a2e_f * (x**243) + 
            L0x20019a30_f * (x**244) + L0x20019a32_f * (x**245) + 
            L0x20019a34_f * (x**246) + L0x20019a36_f * (x**247) + 
            L0x20019a38_f * (x**248) + L0x20019a3a_f * (x**249) + 
            L0x20019a3c_f * (x**250) + L0x20019a3e_f * (x**251) + 
            L0x20019a40_f * (x**252) + L0x20019a42_f * (x**253) + 
            L0x20019a44_f * (x**254) + L0x20019a46_f * (x**255)
          )
          [25570049, x**4 - y_0_09 * 597243, y_0_09 - 1],
    (* inp_poly_10 *)
    eqmod (2**32) * (inp_poly_10 * inp_poly_10)
          (
            L0x20019848_f * (x**0) + L0x2001984a_f * (x**1) + 
            L0x2001984c_f * (x**2) + L0x2001984e_f * (x**3) + 
            L0x20019850_f * (x**4) + L0x20019852_f * (x**5) + 
            L0x20019854_f * (x**6) + L0x20019856_f * (x**7) + 
            L0x20019858_f * (x**8) + L0x2001985a_f * (x**9) + 
            L0x2001985c_f * (x**10) + L0x2001985e_f * (x**11) + 
            L0x20019860_f * (x**12) + L0x20019862_f * (x**13) + 
            L0x20019864_f * (x**14) + L0x20019866_f * (x**15) + 
            L0x20019868_f * (x**16) + L0x2001986a_f * (x**17) + 
            L0x2001986c_f * (x**18) + L0x2001986e_f * (x**19) + 
            L0x20019870_f * (x**20) + L0x20019872_f * (x**21) + 
            L0x20019874_f * (x**22) + L0x20019876_f * (x**23) + 
            L0x20019878_f * (x**24) + L0x2001987a_f * (x**25) + 
            L0x2001987c_f * (x**26) + L0x2001987e_f * (x**27) + 
            L0x20019880_f * (x**28) + L0x20019882_f * (x**29) + 
            L0x20019884_f * (x**30) + L0x20019886_f * (x**31) + 
            L0x20019888_f * (x**32) + L0x2001988a_f * (x**33) + 
            L0x2001988c_f * (x**34) + L0x2001988e_f * (x**35) + 
            L0x20019890_f * (x**36) + L0x20019892_f * (x**37) + 
            L0x20019894_f * (x**38) + L0x20019896_f * (x**39) + 
            L0x20019898_f * (x**40) + L0x2001989a_f * (x**41) + 
            L0x2001989c_f * (x**42) + L0x2001989e_f * (x**43) + 
            L0x200198a0_f * (x**44) + L0x200198a2_f * (x**45) + 
            L0x200198a4_f * (x**46) + L0x200198a6_f * (x**47) + 
            L0x200198a8_f * (x**48) + L0x200198aa_f * (x**49) + 
            L0x200198ac_f * (x**50) + L0x200198ae_f * (x**51) + 
            L0x200198b0_f * (x**52) + L0x200198b2_f * (x**53) + 
            L0x200198b4_f * (x**54) + L0x200198b6_f * (x**55) + 
            L0x200198b8_f * (x**56) + L0x200198ba_f * (x**57) + 
            L0x200198bc_f * (x**58) + L0x200198be_f * (x**59) + 
            L0x200198c0_f * (x**60) + L0x200198c2_f * (x**61) + 
            L0x200198c4_f * (x**62) + L0x200198c6_f * (x**63) + 
            L0x200198c8_f * (x**64) + L0x200198ca_f * (x**65) + 
            L0x200198cc_f * (x**66) + L0x200198ce_f * (x**67) + 
            L0x200198d0_f * (x**68) + L0x200198d2_f * (x**69) + 
            L0x200198d4_f * (x**70) + L0x200198d6_f * (x**71) + 
            L0x200198d8_f * (x**72) + L0x200198da_f * (x**73) + 
            L0x200198dc_f * (x**74) + L0x200198de_f * (x**75) + 
            L0x200198e0_f * (x**76) + L0x200198e2_f * (x**77) + 
            L0x200198e4_f * (x**78) + L0x200198e6_f * (x**79) + 
            L0x200198e8_f * (x**80) + L0x200198ea_f * (x**81) + 
            L0x200198ec_f * (x**82) + L0x200198ee_f * (x**83) + 
            L0x200198f0_f * (x**84) + L0x200198f2_f * (x**85) + 
            L0x200198f4_f * (x**86) + L0x200198f6_f * (x**87) + 
            L0x200198f8_f * (x**88) + L0x200198fa_f * (x**89) + 
            L0x200198fc_f * (x**90) + L0x200198fe_f * (x**91) + 
            L0x20019900_f * (x**92) + L0x20019902_f * (x**93) + 
            L0x20019904_f * (x**94) + L0x20019906_f * (x**95) + 
            L0x20019908_f * (x**96) + L0x2001990a_f * (x**97) + 
            L0x2001990c_f * (x**98) + L0x2001990e_f * (x**99) + 
            L0x20019910_f * (x**100) + L0x20019912_f * (x**101) + 
            L0x20019914_f * (x**102) + L0x20019916_f * (x**103) + 
            L0x20019918_f * (x**104) + L0x2001991a_f * (x**105) + 
            L0x2001991c_f * (x**106) + L0x2001991e_f * (x**107) + 
            L0x20019920_f * (x**108) + L0x20019922_f * (x**109) + 
            L0x20019924_f * (x**110) + L0x20019926_f * (x**111) + 
            L0x20019928_f * (x**112) + L0x2001992a_f * (x**113) + 
            L0x2001992c_f * (x**114) + L0x2001992e_f * (x**115) + 
            L0x20019930_f * (x**116) + L0x20019932_f * (x**117) + 
            L0x20019934_f * (x**118) + L0x20019936_f * (x**119) + 
            L0x20019938_f * (x**120) + L0x2001993a_f * (x**121) + 
            L0x2001993c_f * (x**122) + L0x2001993e_f * (x**123) + 
            L0x20019940_f * (x**124) + L0x20019942_f * (x**125) + 
            L0x20019944_f * (x**126) + L0x20019946_f * (x**127) + 
            L0x20019948_f * (x**128) + L0x2001994a_f * (x**129) + 
            L0x2001994c_f * (x**130) + L0x2001994e_f * (x**131) + 
            L0x20019950_f * (x**132) + L0x20019952_f * (x**133) + 
            L0x20019954_f * (x**134) + L0x20019956_f * (x**135) + 
            L0x20019958_f * (x**136) + L0x2001995a_f * (x**137) + 
            L0x2001995c_f * (x**138) + L0x2001995e_f * (x**139) + 
            L0x20019960_f * (x**140) + L0x20019962_f * (x**141) + 
            L0x20019964_f * (x**142) + L0x20019966_f * (x**143) + 
            L0x20019968_f * (x**144) + L0x2001996a_f * (x**145) + 
            L0x2001996c_f * (x**146) + L0x2001996e_f * (x**147) + 
            L0x20019970_f * (x**148) + L0x20019972_f * (x**149) + 
            L0x20019974_f * (x**150) + L0x20019976_f * (x**151) + 
            L0x20019978_f * (x**152) + L0x2001997a_f * (x**153) + 
            L0x2001997c_f * (x**154) + L0x2001997e_f * (x**155) + 
            L0x20019980_f * (x**156) + L0x20019982_f * (x**157) + 
            L0x20019984_f * (x**158) + L0x20019986_f * (x**159) + 
            L0x20019988_f * (x**160) + L0x2001998a_f * (x**161) + 
            L0x2001998c_f * (x**162) + L0x2001998e_f * (x**163) + 
            L0x20019990_f * (x**164) + L0x20019992_f * (x**165) + 
            L0x20019994_f * (x**166) + L0x20019996_f * (x**167) + 
            L0x20019998_f * (x**168) + L0x2001999a_f * (x**169) + 
            L0x2001999c_f * (x**170) + L0x2001999e_f * (x**171) + 
            L0x200199a0_f * (x**172) + L0x200199a2_f * (x**173) + 
            L0x200199a4_f * (x**174) + L0x200199a6_f * (x**175) + 
            L0x200199a8_f * (x**176) + L0x200199aa_f * (x**177) + 
            L0x200199ac_f * (x**178) + L0x200199ae_f * (x**179) + 
            L0x200199b0_f * (x**180) + L0x200199b2_f * (x**181) + 
            L0x200199b4_f * (x**182) + L0x200199b6_f * (x**183) + 
            L0x200199b8_f * (x**184) + L0x200199ba_f * (x**185) + 
            L0x200199bc_f * (x**186) + L0x200199be_f * (x**187) + 
            L0x200199c0_f * (x**188) + L0x200199c2_f * (x**189) + 
            L0x200199c4_f * (x**190) + L0x200199c6_f * (x**191) + 
            L0x200199c8_f * (x**192) + L0x200199ca_f * (x**193) + 
            L0x200199cc_f * (x**194) + L0x200199ce_f * (x**195) + 
            L0x200199d0_f * (x**196) + L0x200199d2_f * (x**197) + 
            L0x200199d4_f * (x**198) + L0x200199d6_f * (x**199) + 
            L0x200199d8_f * (x**200) + L0x200199da_f * (x**201) + 
            L0x200199dc_f * (x**202) + L0x200199de_f * (x**203) + 
            L0x200199e0_f * (x**204) + L0x200199e2_f * (x**205) + 
            L0x200199e4_f * (x**206) + L0x200199e6_f * (x**207) + 
            L0x200199e8_f * (x**208) + L0x200199ea_f * (x**209) + 
            L0x200199ec_f * (x**210) + L0x200199ee_f * (x**211) + 
            L0x200199f0_f * (x**212) + L0x200199f2_f * (x**213) + 
            L0x200199f4_f * (x**214) + L0x200199f6_f * (x**215) + 
            L0x200199f8_f * (x**216) + L0x200199fa_f * (x**217) + 
            L0x200199fc_f * (x**218) + L0x200199fe_f * (x**219) + 
            L0x20019a00_f * (x**220) + L0x20019a02_f * (x**221) + 
            L0x20019a04_f * (x**222) + L0x20019a06_f * (x**223) + 
            L0x20019a08_f * (x**224) + L0x20019a0a_f * (x**225) + 
            L0x20019a0c_f * (x**226) + L0x20019a0e_f * (x**227) + 
            L0x20019a10_f * (x**228) + L0x20019a12_f * (x**229) + 
            L0x20019a14_f * (x**230) + L0x20019a16_f * (x**231) + 
            L0x20019a18_f * (x**232) + L0x20019a1a_f * (x**233) + 
            L0x20019a1c_f * (x**234) + L0x20019a1e_f * (x**235) + 
            L0x20019a20_f * (x**236) + L0x20019a22_f * (x**237) + 
            L0x20019a24_f * (x**238) + L0x20019a26_f * (x**239) + 
            L0x20019a28_f * (x**240) + L0x20019a2a_f * (x**241) + 
            L0x20019a2c_f * (x**242) + L0x20019a2e_f * (x**243) + 
            L0x20019a30_f * (x**244) + L0x20019a32_f * (x**245) + 
            L0x20019a34_f * (x**246) + L0x20019a36_f * (x**247) + 
            L0x20019a38_f * (x**248) + L0x20019a3a_f * (x**249) + 
            L0x20019a3c_f * (x**250) + L0x20019a3e_f * (x**251) + 
            L0x20019a40_f * (x**252) + L0x20019a42_f * (x**253) + 
            L0x20019a44_f * (x**254) + L0x20019a46_f * (x**255)
          )
          [25570049, x**4 - y_0_10 * 4410275, y_0_10 - 1],
    (* inp_poly_11 *)
    eqmod (2**32) * (inp_poly_11 * inp_poly_11)
          (
            L0x20019848_f * (x**0) + L0x2001984a_f * (x**1) + 
            L0x2001984c_f * (x**2) + L0x2001984e_f * (x**3) + 
            L0x20019850_f * (x**4) + L0x20019852_f * (x**5) + 
            L0x20019854_f * (x**6) + L0x20019856_f * (x**7) + 
            L0x20019858_f * (x**8) + L0x2001985a_f * (x**9) + 
            L0x2001985c_f * (x**10) + L0x2001985e_f * (x**11) + 
            L0x20019860_f * (x**12) + L0x20019862_f * (x**13) + 
            L0x20019864_f * (x**14) + L0x20019866_f * (x**15) + 
            L0x20019868_f * (x**16) + L0x2001986a_f * (x**17) + 
            L0x2001986c_f * (x**18) + L0x2001986e_f * (x**19) + 
            L0x20019870_f * (x**20) + L0x20019872_f * (x**21) + 
            L0x20019874_f * (x**22) + L0x20019876_f * (x**23) + 
            L0x20019878_f * (x**24) + L0x2001987a_f * (x**25) + 
            L0x2001987c_f * (x**26) + L0x2001987e_f * (x**27) + 
            L0x20019880_f * (x**28) + L0x20019882_f * (x**29) + 
            L0x20019884_f * (x**30) + L0x20019886_f * (x**31) + 
            L0x20019888_f * (x**32) + L0x2001988a_f * (x**33) + 
            L0x2001988c_f * (x**34) + L0x2001988e_f * (x**35) + 
            L0x20019890_f * (x**36) + L0x20019892_f * (x**37) + 
            L0x20019894_f * (x**38) + L0x20019896_f * (x**39) + 
            L0x20019898_f * (x**40) + L0x2001989a_f * (x**41) + 
            L0x2001989c_f * (x**42) + L0x2001989e_f * (x**43) + 
            L0x200198a0_f * (x**44) + L0x200198a2_f * (x**45) + 
            L0x200198a4_f * (x**46) + L0x200198a6_f * (x**47) + 
            L0x200198a8_f * (x**48) + L0x200198aa_f * (x**49) + 
            L0x200198ac_f * (x**50) + L0x200198ae_f * (x**51) + 
            L0x200198b0_f * (x**52) + L0x200198b2_f * (x**53) + 
            L0x200198b4_f * (x**54) + L0x200198b6_f * (x**55) + 
            L0x200198b8_f * (x**56) + L0x200198ba_f * (x**57) + 
            L0x200198bc_f * (x**58) + L0x200198be_f * (x**59) + 
            L0x200198c0_f * (x**60) + L0x200198c2_f * (x**61) + 
            L0x200198c4_f * (x**62) + L0x200198c6_f * (x**63) + 
            L0x200198c8_f * (x**64) + L0x200198ca_f * (x**65) + 
            L0x200198cc_f * (x**66) + L0x200198ce_f * (x**67) + 
            L0x200198d0_f * (x**68) + L0x200198d2_f * (x**69) + 
            L0x200198d4_f * (x**70) + L0x200198d6_f * (x**71) + 
            L0x200198d8_f * (x**72) + L0x200198da_f * (x**73) + 
            L0x200198dc_f * (x**74) + L0x200198de_f * (x**75) + 
            L0x200198e0_f * (x**76) + L0x200198e2_f * (x**77) + 
            L0x200198e4_f * (x**78) + L0x200198e6_f * (x**79) + 
            L0x200198e8_f * (x**80) + L0x200198ea_f * (x**81) + 
            L0x200198ec_f * (x**82) + L0x200198ee_f * (x**83) + 
            L0x200198f0_f * (x**84) + L0x200198f2_f * (x**85) + 
            L0x200198f4_f * (x**86) + L0x200198f6_f * (x**87) + 
            L0x200198f8_f * (x**88) + L0x200198fa_f * (x**89) + 
            L0x200198fc_f * (x**90) + L0x200198fe_f * (x**91) + 
            L0x20019900_f * (x**92) + L0x20019902_f * (x**93) + 
            L0x20019904_f * (x**94) + L0x20019906_f * (x**95) + 
            L0x20019908_f * (x**96) + L0x2001990a_f * (x**97) + 
            L0x2001990c_f * (x**98) + L0x2001990e_f * (x**99) + 
            L0x20019910_f * (x**100) + L0x20019912_f * (x**101) + 
            L0x20019914_f * (x**102) + L0x20019916_f * (x**103) + 
            L0x20019918_f * (x**104) + L0x2001991a_f * (x**105) + 
            L0x2001991c_f * (x**106) + L0x2001991e_f * (x**107) + 
            L0x20019920_f * (x**108) + L0x20019922_f * (x**109) + 
            L0x20019924_f * (x**110) + L0x20019926_f * (x**111) + 
            L0x20019928_f * (x**112) + L0x2001992a_f * (x**113) + 
            L0x2001992c_f * (x**114) + L0x2001992e_f * (x**115) + 
            L0x20019930_f * (x**116) + L0x20019932_f * (x**117) + 
            L0x20019934_f * (x**118) + L0x20019936_f * (x**119) + 
            L0x20019938_f * (x**120) + L0x2001993a_f * (x**121) + 
            L0x2001993c_f * (x**122) + L0x2001993e_f * (x**123) + 
            L0x20019940_f * (x**124) + L0x20019942_f * (x**125) + 
            L0x20019944_f * (x**126) + L0x20019946_f * (x**127) + 
            L0x20019948_f * (x**128) + L0x2001994a_f * (x**129) + 
            L0x2001994c_f * (x**130) + L0x2001994e_f * (x**131) + 
            L0x20019950_f * (x**132) + L0x20019952_f * (x**133) + 
            L0x20019954_f * (x**134) + L0x20019956_f * (x**135) + 
            L0x20019958_f * (x**136) + L0x2001995a_f * (x**137) + 
            L0x2001995c_f * (x**138) + L0x2001995e_f * (x**139) + 
            L0x20019960_f * (x**140) + L0x20019962_f * (x**141) + 
            L0x20019964_f * (x**142) + L0x20019966_f * (x**143) + 
            L0x20019968_f * (x**144) + L0x2001996a_f * (x**145) + 
            L0x2001996c_f * (x**146) + L0x2001996e_f * (x**147) + 
            L0x20019970_f * (x**148) + L0x20019972_f * (x**149) + 
            L0x20019974_f * (x**150) + L0x20019976_f * (x**151) + 
            L0x20019978_f * (x**152) + L0x2001997a_f * (x**153) + 
            L0x2001997c_f * (x**154) + L0x2001997e_f * (x**155) + 
            L0x20019980_f * (x**156) + L0x20019982_f * (x**157) + 
            L0x20019984_f * (x**158) + L0x20019986_f * (x**159) + 
            L0x20019988_f * (x**160) + L0x2001998a_f * (x**161) + 
            L0x2001998c_f * (x**162) + L0x2001998e_f * (x**163) + 
            L0x20019990_f * (x**164) + L0x20019992_f * (x**165) + 
            L0x20019994_f * (x**166) + L0x20019996_f * (x**167) + 
            L0x20019998_f * (x**168) + L0x2001999a_f * (x**169) + 
            L0x2001999c_f * (x**170) + L0x2001999e_f * (x**171) + 
            L0x200199a0_f * (x**172) + L0x200199a2_f * (x**173) + 
            L0x200199a4_f * (x**174) + L0x200199a6_f * (x**175) + 
            L0x200199a8_f * (x**176) + L0x200199aa_f * (x**177) + 
            L0x200199ac_f * (x**178) + L0x200199ae_f * (x**179) + 
            L0x200199b0_f * (x**180) + L0x200199b2_f * (x**181) + 
            L0x200199b4_f * (x**182) + L0x200199b6_f * (x**183) + 
            L0x200199b8_f * (x**184) + L0x200199ba_f * (x**185) + 
            L0x200199bc_f * (x**186) + L0x200199be_f * (x**187) + 
            L0x200199c0_f * (x**188) + L0x200199c2_f * (x**189) + 
            L0x200199c4_f * (x**190) + L0x200199c6_f * (x**191) + 
            L0x200199c8_f * (x**192) + L0x200199ca_f * (x**193) + 
            L0x200199cc_f * (x**194) + L0x200199ce_f * (x**195) + 
            L0x200199d0_f * (x**196) + L0x200199d2_f * (x**197) + 
            L0x200199d4_f * (x**198) + L0x200199d6_f * (x**199) + 
            L0x200199d8_f * (x**200) + L0x200199da_f * (x**201) + 
            L0x200199dc_f * (x**202) + L0x200199de_f * (x**203) + 
            L0x200199e0_f * (x**204) + L0x200199e2_f * (x**205) + 
            L0x200199e4_f * (x**206) + L0x200199e6_f * (x**207) + 
            L0x200199e8_f * (x**208) + L0x200199ea_f * (x**209) + 
            L0x200199ec_f * (x**210) + L0x200199ee_f * (x**211) + 
            L0x200199f0_f * (x**212) + L0x200199f2_f * (x**213) + 
            L0x200199f4_f * (x**214) + L0x200199f6_f * (x**215) + 
            L0x200199f8_f * (x**216) + L0x200199fa_f * (x**217) + 
            L0x200199fc_f * (x**218) + L0x200199fe_f * (x**219) + 
            L0x20019a00_f * (x**220) + L0x20019a02_f * (x**221) + 
            L0x20019a04_f * (x**222) + L0x20019a06_f * (x**223) + 
            L0x20019a08_f * (x**224) + L0x20019a0a_f * (x**225) + 
            L0x20019a0c_f * (x**226) + L0x20019a0e_f * (x**227) + 
            L0x20019a10_f * (x**228) + L0x20019a12_f * (x**229) + 
            L0x20019a14_f * (x**230) + L0x20019a16_f * (x**231) + 
            L0x20019a18_f * (x**232) + L0x20019a1a_f * (x**233) + 
            L0x20019a1c_f * (x**234) + L0x20019a1e_f * (x**235) + 
            L0x20019a20_f * (x**236) + L0x20019a22_f * (x**237) + 
            L0x20019a24_f * (x**238) + L0x20019a26_f * (x**239) + 
            L0x20019a28_f * (x**240) + L0x20019a2a_f * (x**241) + 
            L0x20019a2c_f * (x**242) + L0x20019a2e_f * (x**243) + 
            L0x20019a30_f * (x**244) + L0x20019a32_f * (x**245) + 
            L0x20019a34_f * (x**246) + L0x20019a36_f * (x**247) + 
            L0x20019a38_f * (x**248) + L0x20019a3a_f * (x**249) + 
            L0x20019a3c_f * (x**250) + L0x20019a3e_f * (x**251) + 
            L0x20019a40_f * (x**252) + L0x20019a42_f * (x**253) + 
            L0x20019a44_f * (x**254) + L0x20019a46_f * (x**255)
          )
          [25570049, x**4 - y_0_11 * 21159774, y_0_11 - 1],
    (* inp_poly_12 *)
    eqmod (2**32) * (inp_poly_12 * inp_poly_12)
          (
            L0x20019848_f * (x**0) + L0x2001984a_f * (x**1) + 
            L0x2001984c_f * (x**2) + L0x2001984e_f * (x**3) + 
            L0x20019850_f * (x**4) + L0x20019852_f * (x**5) + 
            L0x20019854_f * (x**6) + L0x20019856_f * (x**7) + 
            L0x20019858_f * (x**8) + L0x2001985a_f * (x**9) + 
            L0x2001985c_f * (x**10) + L0x2001985e_f * (x**11) + 
            L0x20019860_f * (x**12) + L0x20019862_f * (x**13) + 
            L0x20019864_f * (x**14) + L0x20019866_f * (x**15) + 
            L0x20019868_f * (x**16) + L0x2001986a_f * (x**17) + 
            L0x2001986c_f * (x**18) + L0x2001986e_f * (x**19) + 
            L0x20019870_f * (x**20) + L0x20019872_f * (x**21) + 
            L0x20019874_f * (x**22) + L0x20019876_f * (x**23) + 
            L0x20019878_f * (x**24) + L0x2001987a_f * (x**25) + 
            L0x2001987c_f * (x**26) + L0x2001987e_f * (x**27) + 
            L0x20019880_f * (x**28) + L0x20019882_f * (x**29) + 
            L0x20019884_f * (x**30) + L0x20019886_f * (x**31) + 
            L0x20019888_f * (x**32) + L0x2001988a_f * (x**33) + 
            L0x2001988c_f * (x**34) + L0x2001988e_f * (x**35) + 
            L0x20019890_f * (x**36) + L0x20019892_f * (x**37) + 
            L0x20019894_f * (x**38) + L0x20019896_f * (x**39) + 
            L0x20019898_f * (x**40) + L0x2001989a_f * (x**41) + 
            L0x2001989c_f * (x**42) + L0x2001989e_f * (x**43) + 
            L0x200198a0_f * (x**44) + L0x200198a2_f * (x**45) + 
            L0x200198a4_f * (x**46) + L0x200198a6_f * (x**47) + 
            L0x200198a8_f * (x**48) + L0x200198aa_f * (x**49) + 
            L0x200198ac_f * (x**50) + L0x200198ae_f * (x**51) + 
            L0x200198b0_f * (x**52) + L0x200198b2_f * (x**53) + 
            L0x200198b4_f * (x**54) + L0x200198b6_f * (x**55) + 
            L0x200198b8_f * (x**56) + L0x200198ba_f * (x**57) + 
            L0x200198bc_f * (x**58) + L0x200198be_f * (x**59) + 
            L0x200198c0_f * (x**60) + L0x200198c2_f * (x**61) + 
            L0x200198c4_f * (x**62) + L0x200198c6_f * (x**63) + 
            L0x200198c8_f * (x**64) + L0x200198ca_f * (x**65) + 
            L0x200198cc_f * (x**66) + L0x200198ce_f * (x**67) + 
            L0x200198d0_f * (x**68) + L0x200198d2_f * (x**69) + 
            L0x200198d4_f * (x**70) + L0x200198d6_f * (x**71) + 
            L0x200198d8_f * (x**72) + L0x200198da_f * (x**73) + 
            L0x200198dc_f * (x**74) + L0x200198de_f * (x**75) + 
            L0x200198e0_f * (x**76) + L0x200198e2_f * (x**77) + 
            L0x200198e4_f * (x**78) + L0x200198e6_f * (x**79) + 
            L0x200198e8_f * (x**80) + L0x200198ea_f * (x**81) + 
            L0x200198ec_f * (x**82) + L0x200198ee_f * (x**83) + 
            L0x200198f0_f * (x**84) + L0x200198f2_f * (x**85) + 
            L0x200198f4_f * (x**86) + L0x200198f6_f * (x**87) + 
            L0x200198f8_f * (x**88) + L0x200198fa_f * (x**89) + 
            L0x200198fc_f * (x**90) + L0x200198fe_f * (x**91) + 
            L0x20019900_f * (x**92) + L0x20019902_f * (x**93) + 
            L0x20019904_f * (x**94) + L0x20019906_f * (x**95) + 
            L0x20019908_f * (x**96) + L0x2001990a_f * (x**97) + 
            L0x2001990c_f * (x**98) + L0x2001990e_f * (x**99) + 
            L0x20019910_f * (x**100) + L0x20019912_f * (x**101) + 
            L0x20019914_f * (x**102) + L0x20019916_f * (x**103) + 
            L0x20019918_f * (x**104) + L0x2001991a_f * (x**105) + 
            L0x2001991c_f * (x**106) + L0x2001991e_f * (x**107) + 
            L0x20019920_f * (x**108) + L0x20019922_f * (x**109) + 
            L0x20019924_f * (x**110) + L0x20019926_f * (x**111) + 
            L0x20019928_f * (x**112) + L0x2001992a_f * (x**113) + 
            L0x2001992c_f * (x**114) + L0x2001992e_f * (x**115) + 
            L0x20019930_f * (x**116) + L0x20019932_f * (x**117) + 
            L0x20019934_f * (x**118) + L0x20019936_f * (x**119) + 
            L0x20019938_f * (x**120) + L0x2001993a_f * (x**121) + 
            L0x2001993c_f * (x**122) + L0x2001993e_f * (x**123) + 
            L0x20019940_f * (x**124) + L0x20019942_f * (x**125) + 
            L0x20019944_f * (x**126) + L0x20019946_f * (x**127) + 
            L0x20019948_f * (x**128) + L0x2001994a_f * (x**129) + 
            L0x2001994c_f * (x**130) + L0x2001994e_f * (x**131) + 
            L0x20019950_f * (x**132) + L0x20019952_f * (x**133) + 
            L0x20019954_f * (x**134) + L0x20019956_f * (x**135) + 
            L0x20019958_f * (x**136) + L0x2001995a_f * (x**137) + 
            L0x2001995c_f * (x**138) + L0x2001995e_f * (x**139) + 
            L0x20019960_f * (x**140) + L0x20019962_f * (x**141) + 
            L0x20019964_f * (x**142) + L0x20019966_f * (x**143) + 
            L0x20019968_f * (x**144) + L0x2001996a_f * (x**145) + 
            L0x2001996c_f * (x**146) + L0x2001996e_f * (x**147) + 
            L0x20019970_f * (x**148) + L0x20019972_f * (x**149) + 
            L0x20019974_f * (x**150) + L0x20019976_f * (x**151) + 
            L0x20019978_f * (x**152) + L0x2001997a_f * (x**153) + 
            L0x2001997c_f * (x**154) + L0x2001997e_f * (x**155) + 
            L0x20019980_f * (x**156) + L0x20019982_f * (x**157) + 
            L0x20019984_f * (x**158) + L0x20019986_f * (x**159) + 
            L0x20019988_f * (x**160) + L0x2001998a_f * (x**161) + 
            L0x2001998c_f * (x**162) + L0x2001998e_f * (x**163) + 
            L0x20019990_f * (x**164) + L0x20019992_f * (x**165) + 
            L0x20019994_f * (x**166) + L0x20019996_f * (x**167) + 
            L0x20019998_f * (x**168) + L0x2001999a_f * (x**169) + 
            L0x2001999c_f * (x**170) + L0x2001999e_f * (x**171) + 
            L0x200199a0_f * (x**172) + L0x200199a2_f * (x**173) + 
            L0x200199a4_f * (x**174) + L0x200199a6_f * (x**175) + 
            L0x200199a8_f * (x**176) + L0x200199aa_f * (x**177) + 
            L0x200199ac_f * (x**178) + L0x200199ae_f * (x**179) + 
            L0x200199b0_f * (x**180) + L0x200199b2_f * (x**181) + 
            L0x200199b4_f * (x**182) + L0x200199b6_f * (x**183) + 
            L0x200199b8_f * (x**184) + L0x200199ba_f * (x**185) + 
            L0x200199bc_f * (x**186) + L0x200199be_f * (x**187) + 
            L0x200199c0_f * (x**188) + L0x200199c2_f * (x**189) + 
            L0x200199c4_f * (x**190) + L0x200199c6_f * (x**191) + 
            L0x200199c8_f * (x**192) + L0x200199ca_f * (x**193) + 
            L0x200199cc_f * (x**194) + L0x200199ce_f * (x**195) + 
            L0x200199d0_f * (x**196) + L0x200199d2_f * (x**197) + 
            L0x200199d4_f * (x**198) + L0x200199d6_f * (x**199) + 
            L0x200199d8_f * (x**200) + L0x200199da_f * (x**201) + 
            L0x200199dc_f * (x**202) + L0x200199de_f * (x**203) + 
            L0x200199e0_f * (x**204) + L0x200199e2_f * (x**205) + 
            L0x200199e4_f * (x**206) + L0x200199e6_f * (x**207) + 
            L0x200199e8_f * (x**208) + L0x200199ea_f * (x**209) + 
            L0x200199ec_f * (x**210) + L0x200199ee_f * (x**211) + 
            L0x200199f0_f * (x**212) + L0x200199f2_f * (x**213) + 
            L0x200199f4_f * (x**214) + L0x200199f6_f * (x**215) + 
            L0x200199f8_f * (x**216) + L0x200199fa_f * (x**217) + 
            L0x200199fc_f * (x**218) + L0x200199fe_f * (x**219) + 
            L0x20019a00_f * (x**220) + L0x20019a02_f * (x**221) + 
            L0x20019a04_f * (x**222) + L0x20019a06_f * (x**223) + 
            L0x20019a08_f * (x**224) + L0x20019a0a_f * (x**225) + 
            L0x20019a0c_f * (x**226) + L0x20019a0e_f * (x**227) + 
            L0x20019a10_f * (x**228) + L0x20019a12_f * (x**229) + 
            L0x20019a14_f * (x**230) + L0x20019a16_f * (x**231) + 
            L0x20019a18_f * (x**232) + L0x20019a1a_f * (x**233) + 
            L0x20019a1c_f * (x**234) + L0x20019a1e_f * (x**235) + 
            L0x20019a20_f * (x**236) + L0x20019a22_f * (x**237) + 
            L0x20019a24_f * (x**238) + L0x20019a26_f * (x**239) + 
            L0x20019a28_f * (x**240) + L0x20019a2a_f * (x**241) + 
            L0x20019a2c_f * (x**242) + L0x20019a2e_f * (x**243) + 
            L0x20019a30_f * (x**244) + L0x20019a32_f * (x**245) + 
            L0x20019a34_f * (x**246) + L0x20019a36_f * (x**247) + 
            L0x20019a38_f * (x**248) + L0x20019a3a_f * (x**249) + 
            L0x20019a3c_f * (x**250) + L0x20019a3e_f * (x**251) + 
            L0x20019a40_f * (x**252) + L0x20019a42_f * (x**253) + 
            L0x20019a44_f * (x**254) + L0x20019a46_f * (x**255)
          )
          [25570049, x**4 - y_0_12 * 2389590, y_0_12 - 1],
    (* inp_poly_13 *)
    eqmod (2**32) * (inp_poly_13 * inp_poly_13)
          (
            L0x20019848_f * (x**0) + L0x2001984a_f * (x**1) + 
            L0x2001984c_f * (x**2) + L0x2001984e_f * (x**3) + 
            L0x20019850_f * (x**4) + L0x20019852_f * (x**5) + 
            L0x20019854_f * (x**6) + L0x20019856_f * (x**7) + 
            L0x20019858_f * (x**8) + L0x2001985a_f * (x**9) + 
            L0x2001985c_f * (x**10) + L0x2001985e_f * (x**11) + 
            L0x20019860_f * (x**12) + L0x20019862_f * (x**13) + 
            L0x20019864_f * (x**14) + L0x20019866_f * (x**15) + 
            L0x20019868_f * (x**16) + L0x2001986a_f * (x**17) + 
            L0x2001986c_f * (x**18) + L0x2001986e_f * (x**19) + 
            L0x20019870_f * (x**20) + L0x20019872_f * (x**21) + 
            L0x20019874_f * (x**22) + L0x20019876_f * (x**23) + 
            L0x20019878_f * (x**24) + L0x2001987a_f * (x**25) + 
            L0x2001987c_f * (x**26) + L0x2001987e_f * (x**27) + 
            L0x20019880_f * (x**28) + L0x20019882_f * (x**29) + 
            L0x20019884_f * (x**30) + L0x20019886_f * (x**31) + 
            L0x20019888_f * (x**32) + L0x2001988a_f * (x**33) + 
            L0x2001988c_f * (x**34) + L0x2001988e_f * (x**35) + 
            L0x20019890_f * (x**36) + L0x20019892_f * (x**37) + 
            L0x20019894_f * (x**38) + L0x20019896_f * (x**39) + 
            L0x20019898_f * (x**40) + L0x2001989a_f * (x**41) + 
            L0x2001989c_f * (x**42) + L0x2001989e_f * (x**43) + 
            L0x200198a0_f * (x**44) + L0x200198a2_f * (x**45) + 
            L0x200198a4_f * (x**46) + L0x200198a6_f * (x**47) + 
            L0x200198a8_f * (x**48) + L0x200198aa_f * (x**49) + 
            L0x200198ac_f * (x**50) + L0x200198ae_f * (x**51) + 
            L0x200198b0_f * (x**52) + L0x200198b2_f * (x**53) + 
            L0x200198b4_f * (x**54) + L0x200198b6_f * (x**55) + 
            L0x200198b8_f * (x**56) + L0x200198ba_f * (x**57) + 
            L0x200198bc_f * (x**58) + L0x200198be_f * (x**59) + 
            L0x200198c0_f * (x**60) + L0x200198c2_f * (x**61) + 
            L0x200198c4_f * (x**62) + L0x200198c6_f * (x**63) + 
            L0x200198c8_f * (x**64) + L0x200198ca_f * (x**65) + 
            L0x200198cc_f * (x**66) + L0x200198ce_f * (x**67) + 
            L0x200198d0_f * (x**68) + L0x200198d2_f * (x**69) + 
            L0x200198d4_f * (x**70) + L0x200198d6_f * (x**71) + 
            L0x200198d8_f * (x**72) + L0x200198da_f * (x**73) + 
            L0x200198dc_f * (x**74) + L0x200198de_f * (x**75) + 
            L0x200198e0_f * (x**76) + L0x200198e2_f * (x**77) + 
            L0x200198e4_f * (x**78) + L0x200198e6_f * (x**79) + 
            L0x200198e8_f * (x**80) + L0x200198ea_f * (x**81) + 
            L0x200198ec_f * (x**82) + L0x200198ee_f * (x**83) + 
            L0x200198f0_f * (x**84) + L0x200198f2_f * (x**85) + 
            L0x200198f4_f * (x**86) + L0x200198f6_f * (x**87) + 
            L0x200198f8_f * (x**88) + L0x200198fa_f * (x**89) + 
            L0x200198fc_f * (x**90) + L0x200198fe_f * (x**91) + 
            L0x20019900_f * (x**92) + L0x20019902_f * (x**93) + 
            L0x20019904_f * (x**94) + L0x20019906_f * (x**95) + 
            L0x20019908_f * (x**96) + L0x2001990a_f * (x**97) + 
            L0x2001990c_f * (x**98) + L0x2001990e_f * (x**99) + 
            L0x20019910_f * (x**100) + L0x20019912_f * (x**101) + 
            L0x20019914_f * (x**102) + L0x20019916_f * (x**103) + 
            L0x20019918_f * (x**104) + L0x2001991a_f * (x**105) + 
            L0x2001991c_f * (x**106) + L0x2001991e_f * (x**107) + 
            L0x20019920_f * (x**108) + L0x20019922_f * (x**109) + 
            L0x20019924_f * (x**110) + L0x20019926_f * (x**111) + 
            L0x20019928_f * (x**112) + L0x2001992a_f * (x**113) + 
            L0x2001992c_f * (x**114) + L0x2001992e_f * (x**115) + 
            L0x20019930_f * (x**116) + L0x20019932_f * (x**117) + 
            L0x20019934_f * (x**118) + L0x20019936_f * (x**119) + 
            L0x20019938_f * (x**120) + L0x2001993a_f * (x**121) + 
            L0x2001993c_f * (x**122) + L0x2001993e_f * (x**123) + 
            L0x20019940_f * (x**124) + L0x20019942_f * (x**125) + 
            L0x20019944_f * (x**126) + L0x20019946_f * (x**127) + 
            L0x20019948_f * (x**128) + L0x2001994a_f * (x**129) + 
            L0x2001994c_f * (x**130) + L0x2001994e_f * (x**131) + 
            L0x20019950_f * (x**132) + L0x20019952_f * (x**133) + 
            L0x20019954_f * (x**134) + L0x20019956_f * (x**135) + 
            L0x20019958_f * (x**136) + L0x2001995a_f * (x**137) + 
            L0x2001995c_f * (x**138) + L0x2001995e_f * (x**139) + 
            L0x20019960_f * (x**140) + L0x20019962_f * (x**141) + 
            L0x20019964_f * (x**142) + L0x20019966_f * (x**143) + 
            L0x20019968_f * (x**144) + L0x2001996a_f * (x**145) + 
            L0x2001996c_f * (x**146) + L0x2001996e_f * (x**147) + 
            L0x20019970_f * (x**148) + L0x20019972_f * (x**149) + 
            L0x20019974_f * (x**150) + L0x20019976_f * (x**151) + 
            L0x20019978_f * (x**152) + L0x2001997a_f * (x**153) + 
            L0x2001997c_f * (x**154) + L0x2001997e_f * (x**155) + 
            L0x20019980_f * (x**156) + L0x20019982_f * (x**157) + 
            L0x20019984_f * (x**158) + L0x20019986_f * (x**159) + 
            L0x20019988_f * (x**160) + L0x2001998a_f * (x**161) + 
            L0x2001998c_f * (x**162) + L0x2001998e_f * (x**163) + 
            L0x20019990_f * (x**164) + L0x20019992_f * (x**165) + 
            L0x20019994_f * (x**166) + L0x20019996_f * (x**167) + 
            L0x20019998_f * (x**168) + L0x2001999a_f * (x**169) + 
            L0x2001999c_f * (x**170) + L0x2001999e_f * (x**171) + 
            L0x200199a0_f * (x**172) + L0x200199a2_f * (x**173) + 
            L0x200199a4_f * (x**174) + L0x200199a6_f * (x**175) + 
            L0x200199a8_f * (x**176) + L0x200199aa_f * (x**177) + 
            L0x200199ac_f * (x**178) + L0x200199ae_f * (x**179) + 
            L0x200199b0_f * (x**180) + L0x200199b2_f * (x**181) + 
            L0x200199b4_f * (x**182) + L0x200199b6_f * (x**183) + 
            L0x200199b8_f * (x**184) + L0x200199ba_f * (x**185) + 
            L0x200199bc_f * (x**186) + L0x200199be_f * (x**187) + 
            L0x200199c0_f * (x**188) + L0x200199c2_f * (x**189) + 
            L0x200199c4_f * (x**190) + L0x200199c6_f * (x**191) + 
            L0x200199c8_f * (x**192) + L0x200199ca_f * (x**193) + 
            L0x200199cc_f * (x**194) + L0x200199ce_f * (x**195) + 
            L0x200199d0_f * (x**196) + L0x200199d2_f * (x**197) + 
            L0x200199d4_f * (x**198) + L0x200199d6_f * (x**199) + 
            L0x200199d8_f * (x**200) + L0x200199da_f * (x**201) + 
            L0x200199dc_f * (x**202) + L0x200199de_f * (x**203) + 
            L0x200199e0_f * (x**204) + L0x200199e2_f * (x**205) + 
            L0x200199e4_f * (x**206) + L0x200199e6_f * (x**207) + 
            L0x200199e8_f * (x**208) + L0x200199ea_f * (x**209) + 
            L0x200199ec_f * (x**210) + L0x200199ee_f * (x**211) + 
            L0x200199f0_f * (x**212) + L0x200199f2_f * (x**213) + 
            L0x200199f4_f * (x**214) + L0x200199f6_f * (x**215) + 
            L0x200199f8_f * (x**216) + L0x200199fa_f * (x**217) + 
            L0x200199fc_f * (x**218) + L0x200199fe_f * (x**219) + 
            L0x20019a00_f * (x**220) + L0x20019a02_f * (x**221) + 
            L0x20019a04_f * (x**222) + L0x20019a06_f * (x**223) + 
            L0x20019a08_f * (x**224) + L0x20019a0a_f * (x**225) + 
            L0x20019a0c_f * (x**226) + L0x20019a0e_f * (x**227) + 
            L0x20019a10_f * (x**228) + L0x20019a12_f * (x**229) + 
            L0x20019a14_f * (x**230) + L0x20019a16_f * (x**231) + 
            L0x20019a18_f * (x**232) + L0x20019a1a_f * (x**233) + 
            L0x20019a1c_f * (x**234) + L0x20019a1e_f * (x**235) + 
            L0x20019a20_f * (x**236) + L0x20019a22_f * (x**237) + 
            L0x20019a24_f * (x**238) + L0x20019a26_f * (x**239) + 
            L0x20019a28_f * (x**240) + L0x20019a2a_f * (x**241) + 
            L0x20019a2c_f * (x**242) + L0x20019a2e_f * (x**243) + 
            L0x20019a30_f * (x**244) + L0x20019a32_f * (x**245) + 
            L0x20019a34_f * (x**246) + L0x20019a36_f * (x**247) + 
            L0x20019a38_f * (x**248) + L0x20019a3a_f * (x**249) + 
            L0x20019a3c_f * (x**250) + L0x20019a3e_f * (x**251) + 
            L0x20019a40_f * (x**252) + L0x20019a42_f * (x**253) + 
            L0x20019a44_f * (x**254) + L0x20019a46_f * (x**255)
          )
          [25570049, x**4 - y_0_13 * 23180459, y_0_13 - 1],
    (* inp_poly_14 *)
    eqmod (2**32) * (inp_poly_14 * inp_poly_14)
          (
            L0x20019848_f * (x**0) + L0x2001984a_f * (x**1) + 
            L0x2001984c_f * (x**2) + L0x2001984e_f * (x**3) + 
            L0x20019850_f * (x**4) + L0x20019852_f * (x**5) + 
            L0x20019854_f * (x**6) + L0x20019856_f * (x**7) + 
            L0x20019858_f * (x**8) + L0x2001985a_f * (x**9) + 
            L0x2001985c_f * (x**10) + L0x2001985e_f * (x**11) + 
            L0x20019860_f * (x**12) + L0x20019862_f * (x**13) + 
            L0x20019864_f * (x**14) + L0x20019866_f * (x**15) + 
            L0x20019868_f * (x**16) + L0x2001986a_f * (x**17) + 
            L0x2001986c_f * (x**18) + L0x2001986e_f * (x**19) + 
            L0x20019870_f * (x**20) + L0x20019872_f * (x**21) + 
            L0x20019874_f * (x**22) + L0x20019876_f * (x**23) + 
            L0x20019878_f * (x**24) + L0x2001987a_f * (x**25) + 
            L0x2001987c_f * (x**26) + L0x2001987e_f * (x**27) + 
            L0x20019880_f * (x**28) + L0x20019882_f * (x**29) + 
            L0x20019884_f * (x**30) + L0x20019886_f * (x**31) + 
            L0x20019888_f * (x**32) + L0x2001988a_f * (x**33) + 
            L0x2001988c_f * (x**34) + L0x2001988e_f * (x**35) + 
            L0x20019890_f * (x**36) + L0x20019892_f * (x**37) + 
            L0x20019894_f * (x**38) + L0x20019896_f * (x**39) + 
            L0x20019898_f * (x**40) + L0x2001989a_f * (x**41) + 
            L0x2001989c_f * (x**42) + L0x2001989e_f * (x**43) + 
            L0x200198a0_f * (x**44) + L0x200198a2_f * (x**45) + 
            L0x200198a4_f * (x**46) + L0x200198a6_f * (x**47) + 
            L0x200198a8_f * (x**48) + L0x200198aa_f * (x**49) + 
            L0x200198ac_f * (x**50) + L0x200198ae_f * (x**51) + 
            L0x200198b0_f * (x**52) + L0x200198b2_f * (x**53) + 
            L0x200198b4_f * (x**54) + L0x200198b6_f * (x**55) + 
            L0x200198b8_f * (x**56) + L0x200198ba_f * (x**57) + 
            L0x200198bc_f * (x**58) + L0x200198be_f * (x**59) + 
            L0x200198c0_f * (x**60) + L0x200198c2_f * (x**61) + 
            L0x200198c4_f * (x**62) + L0x200198c6_f * (x**63) + 
            L0x200198c8_f * (x**64) + L0x200198ca_f * (x**65) + 
            L0x200198cc_f * (x**66) + L0x200198ce_f * (x**67) + 
            L0x200198d0_f * (x**68) + L0x200198d2_f * (x**69) + 
            L0x200198d4_f * (x**70) + L0x200198d6_f * (x**71) + 
            L0x200198d8_f * (x**72) + L0x200198da_f * (x**73) + 
            L0x200198dc_f * (x**74) + L0x200198de_f * (x**75) + 
            L0x200198e0_f * (x**76) + L0x200198e2_f * (x**77) + 
            L0x200198e4_f * (x**78) + L0x200198e6_f * (x**79) + 
            L0x200198e8_f * (x**80) + L0x200198ea_f * (x**81) + 
            L0x200198ec_f * (x**82) + L0x200198ee_f * (x**83) + 
            L0x200198f0_f * (x**84) + L0x200198f2_f * (x**85) + 
            L0x200198f4_f * (x**86) + L0x200198f6_f * (x**87) + 
            L0x200198f8_f * (x**88) + L0x200198fa_f * (x**89) + 
            L0x200198fc_f * (x**90) + L0x200198fe_f * (x**91) + 
            L0x20019900_f * (x**92) + L0x20019902_f * (x**93) + 
            L0x20019904_f * (x**94) + L0x20019906_f * (x**95) + 
            L0x20019908_f * (x**96) + L0x2001990a_f * (x**97) + 
            L0x2001990c_f * (x**98) + L0x2001990e_f * (x**99) + 
            L0x20019910_f * (x**100) + L0x20019912_f * (x**101) + 
            L0x20019914_f * (x**102) + L0x20019916_f * (x**103) + 
            L0x20019918_f * (x**104) + L0x2001991a_f * (x**105) + 
            L0x2001991c_f * (x**106) + L0x2001991e_f * (x**107) + 
            L0x20019920_f * (x**108) + L0x20019922_f * (x**109) + 
            L0x20019924_f * (x**110) + L0x20019926_f * (x**111) + 
            L0x20019928_f * (x**112) + L0x2001992a_f * (x**113) + 
            L0x2001992c_f * (x**114) + L0x2001992e_f * (x**115) + 
            L0x20019930_f * (x**116) + L0x20019932_f * (x**117) + 
            L0x20019934_f * (x**118) + L0x20019936_f * (x**119) + 
            L0x20019938_f * (x**120) + L0x2001993a_f * (x**121) + 
            L0x2001993c_f * (x**122) + L0x2001993e_f * (x**123) + 
            L0x20019940_f * (x**124) + L0x20019942_f * (x**125) + 
            L0x20019944_f * (x**126) + L0x20019946_f * (x**127) + 
            L0x20019948_f * (x**128) + L0x2001994a_f * (x**129) + 
            L0x2001994c_f * (x**130) + L0x2001994e_f * (x**131) + 
            L0x20019950_f * (x**132) + L0x20019952_f * (x**133) + 
            L0x20019954_f * (x**134) + L0x20019956_f * (x**135) + 
            L0x20019958_f * (x**136) + L0x2001995a_f * (x**137) + 
            L0x2001995c_f * (x**138) + L0x2001995e_f * (x**139) + 
            L0x20019960_f * (x**140) + L0x20019962_f * (x**141) + 
            L0x20019964_f * (x**142) + L0x20019966_f * (x**143) + 
            L0x20019968_f * (x**144) + L0x2001996a_f * (x**145) + 
            L0x2001996c_f * (x**146) + L0x2001996e_f * (x**147) + 
            L0x20019970_f * (x**148) + L0x20019972_f * (x**149) + 
            L0x20019974_f * (x**150) + L0x20019976_f * (x**151) + 
            L0x20019978_f * (x**152) + L0x2001997a_f * (x**153) + 
            L0x2001997c_f * (x**154) + L0x2001997e_f * (x**155) + 
            L0x20019980_f * (x**156) + L0x20019982_f * (x**157) + 
            L0x20019984_f * (x**158) + L0x20019986_f * (x**159) + 
            L0x20019988_f * (x**160) + L0x2001998a_f * (x**161) + 
            L0x2001998c_f * (x**162) + L0x2001998e_f * (x**163) + 
            L0x20019990_f * (x**164) + L0x20019992_f * (x**165) + 
            L0x20019994_f * (x**166) + L0x20019996_f * (x**167) + 
            L0x20019998_f * (x**168) + L0x2001999a_f * (x**169) + 
            L0x2001999c_f * (x**170) + L0x2001999e_f * (x**171) + 
            L0x200199a0_f * (x**172) + L0x200199a2_f * (x**173) + 
            L0x200199a4_f * (x**174) + L0x200199a6_f * (x**175) + 
            L0x200199a8_f * (x**176) + L0x200199aa_f * (x**177) + 
            L0x200199ac_f * (x**178) + L0x200199ae_f * (x**179) + 
            L0x200199b0_f * (x**180) + L0x200199b2_f * (x**181) + 
            L0x200199b4_f * (x**182) + L0x200199b6_f * (x**183) + 
            L0x200199b8_f * (x**184) + L0x200199ba_f * (x**185) + 
            L0x200199bc_f * (x**186) + L0x200199be_f * (x**187) + 
            L0x200199c0_f * (x**188) + L0x200199c2_f * (x**189) + 
            L0x200199c4_f * (x**190) + L0x200199c6_f * (x**191) + 
            L0x200199c8_f * (x**192) + L0x200199ca_f * (x**193) + 
            L0x200199cc_f * (x**194) + L0x200199ce_f * (x**195) + 
            L0x200199d0_f * (x**196) + L0x200199d2_f * (x**197) + 
            L0x200199d4_f * (x**198) + L0x200199d6_f * (x**199) + 
            L0x200199d8_f * (x**200) + L0x200199da_f * (x**201) + 
            L0x200199dc_f * (x**202) + L0x200199de_f * (x**203) + 
            L0x200199e0_f * (x**204) + L0x200199e2_f * (x**205) + 
            L0x200199e4_f * (x**206) + L0x200199e6_f * (x**207) + 
            L0x200199e8_f * (x**208) + L0x200199ea_f * (x**209) + 
            L0x200199ec_f * (x**210) + L0x200199ee_f * (x**211) + 
            L0x200199f0_f * (x**212) + L0x200199f2_f * (x**213) + 
            L0x200199f4_f * (x**214) + L0x200199f6_f * (x**215) + 
            L0x200199f8_f * (x**216) + L0x200199fa_f * (x**217) + 
            L0x200199fc_f * (x**218) + L0x200199fe_f * (x**219) + 
            L0x20019a00_f * (x**220) + L0x20019a02_f * (x**221) + 
            L0x20019a04_f * (x**222) + L0x20019a06_f * (x**223) + 
            L0x20019a08_f * (x**224) + L0x20019a0a_f * (x**225) + 
            L0x20019a0c_f * (x**226) + L0x20019a0e_f * (x**227) + 
            L0x20019a10_f * (x**228) + L0x20019a12_f * (x**229) + 
            L0x20019a14_f * (x**230) + L0x20019a16_f * (x**231) + 
            L0x20019a18_f * (x**232) + L0x20019a1a_f * (x**233) + 
            L0x20019a1c_f * (x**234) + L0x20019a1e_f * (x**235) + 
            L0x20019a20_f * (x**236) + L0x20019a22_f * (x**237) + 
            L0x20019a24_f * (x**238) + L0x20019a26_f * (x**239) + 
            L0x20019a28_f * (x**240) + L0x20019a2a_f * (x**241) + 
            L0x20019a2c_f * (x**242) + L0x20019a2e_f * (x**243) + 
            L0x20019a30_f * (x**244) + L0x20019a32_f * (x**245) + 
            L0x20019a34_f * (x**246) + L0x20019a36_f * (x**247) + 
            L0x20019a38_f * (x**248) + L0x20019a3a_f * (x**249) + 
            L0x20019a3c_f * (x**250) + L0x20019a3e_f * (x**251) + 
            L0x20019a40_f * (x**252) + L0x20019a42_f * (x**253) + 
            L0x20019a44_f * (x**254) + L0x20019a46_f * (x**255)
          )
          [25570049, x**4 - y_0_14 * 4363503, y_0_14 - 1],
    (* inp_poly_15 *)
    eqmod (2**32) * (inp_poly_15 * inp_poly_15)
          (
            L0x20019848_f * (x**0) + L0x2001984a_f * (x**1) + 
            L0x2001984c_f * (x**2) + L0x2001984e_f * (x**3) + 
            L0x20019850_f * (x**4) + L0x20019852_f * (x**5) + 
            L0x20019854_f * (x**6) + L0x20019856_f * (x**7) + 
            L0x20019858_f * (x**8) + L0x2001985a_f * (x**9) + 
            L0x2001985c_f * (x**10) + L0x2001985e_f * (x**11) + 
            L0x20019860_f * (x**12) + L0x20019862_f * (x**13) + 
            L0x20019864_f * (x**14) + L0x20019866_f * (x**15) + 
            L0x20019868_f * (x**16) + L0x2001986a_f * (x**17) + 
            L0x2001986c_f * (x**18) + L0x2001986e_f * (x**19) + 
            L0x20019870_f * (x**20) + L0x20019872_f * (x**21) + 
            L0x20019874_f * (x**22) + L0x20019876_f * (x**23) + 
            L0x20019878_f * (x**24) + L0x2001987a_f * (x**25) + 
            L0x2001987c_f * (x**26) + L0x2001987e_f * (x**27) + 
            L0x20019880_f * (x**28) + L0x20019882_f * (x**29) + 
            L0x20019884_f * (x**30) + L0x20019886_f * (x**31) + 
            L0x20019888_f * (x**32) + L0x2001988a_f * (x**33) + 
            L0x2001988c_f * (x**34) + L0x2001988e_f * (x**35) + 
            L0x20019890_f * (x**36) + L0x20019892_f * (x**37) + 
            L0x20019894_f * (x**38) + L0x20019896_f * (x**39) + 
            L0x20019898_f * (x**40) + L0x2001989a_f * (x**41) + 
            L0x2001989c_f * (x**42) + L0x2001989e_f * (x**43) + 
            L0x200198a0_f * (x**44) + L0x200198a2_f * (x**45) + 
            L0x200198a4_f * (x**46) + L0x200198a6_f * (x**47) + 
            L0x200198a8_f * (x**48) + L0x200198aa_f * (x**49) + 
            L0x200198ac_f * (x**50) + L0x200198ae_f * (x**51) + 
            L0x200198b0_f * (x**52) + L0x200198b2_f * (x**53) + 
            L0x200198b4_f * (x**54) + L0x200198b6_f * (x**55) + 
            L0x200198b8_f * (x**56) + L0x200198ba_f * (x**57) + 
            L0x200198bc_f * (x**58) + L0x200198be_f * (x**59) + 
            L0x200198c0_f * (x**60) + L0x200198c2_f * (x**61) + 
            L0x200198c4_f * (x**62) + L0x200198c6_f * (x**63) + 
            L0x200198c8_f * (x**64) + L0x200198ca_f * (x**65) + 
            L0x200198cc_f * (x**66) + L0x200198ce_f * (x**67) + 
            L0x200198d0_f * (x**68) + L0x200198d2_f * (x**69) + 
            L0x200198d4_f * (x**70) + L0x200198d6_f * (x**71) + 
            L0x200198d8_f * (x**72) + L0x200198da_f * (x**73) + 
            L0x200198dc_f * (x**74) + L0x200198de_f * (x**75) + 
            L0x200198e0_f * (x**76) + L0x200198e2_f * (x**77) + 
            L0x200198e4_f * (x**78) + L0x200198e6_f * (x**79) + 
            L0x200198e8_f * (x**80) + L0x200198ea_f * (x**81) + 
            L0x200198ec_f * (x**82) + L0x200198ee_f * (x**83) + 
            L0x200198f0_f * (x**84) + L0x200198f2_f * (x**85) + 
            L0x200198f4_f * (x**86) + L0x200198f6_f * (x**87) + 
            L0x200198f8_f * (x**88) + L0x200198fa_f * (x**89) + 
            L0x200198fc_f * (x**90) + L0x200198fe_f * (x**91) + 
            L0x20019900_f * (x**92) + L0x20019902_f * (x**93) + 
            L0x20019904_f * (x**94) + L0x20019906_f * (x**95) + 
            L0x20019908_f * (x**96) + L0x2001990a_f * (x**97) + 
            L0x2001990c_f * (x**98) + L0x2001990e_f * (x**99) + 
            L0x20019910_f * (x**100) + L0x20019912_f * (x**101) + 
            L0x20019914_f * (x**102) + L0x20019916_f * (x**103) + 
            L0x20019918_f * (x**104) + L0x2001991a_f * (x**105) + 
            L0x2001991c_f * (x**106) + L0x2001991e_f * (x**107) + 
            L0x20019920_f * (x**108) + L0x20019922_f * (x**109) + 
            L0x20019924_f * (x**110) + L0x20019926_f * (x**111) + 
            L0x20019928_f * (x**112) + L0x2001992a_f * (x**113) + 
            L0x2001992c_f * (x**114) + L0x2001992e_f * (x**115) + 
            L0x20019930_f * (x**116) + L0x20019932_f * (x**117) + 
            L0x20019934_f * (x**118) + L0x20019936_f * (x**119) + 
            L0x20019938_f * (x**120) + L0x2001993a_f * (x**121) + 
            L0x2001993c_f * (x**122) + L0x2001993e_f * (x**123) + 
            L0x20019940_f * (x**124) + L0x20019942_f * (x**125) + 
            L0x20019944_f * (x**126) + L0x20019946_f * (x**127) + 
            L0x20019948_f * (x**128) + L0x2001994a_f * (x**129) + 
            L0x2001994c_f * (x**130) + L0x2001994e_f * (x**131) + 
            L0x20019950_f * (x**132) + L0x20019952_f * (x**133) + 
            L0x20019954_f * (x**134) + L0x20019956_f * (x**135) + 
            L0x20019958_f * (x**136) + L0x2001995a_f * (x**137) + 
            L0x2001995c_f * (x**138) + L0x2001995e_f * (x**139) + 
            L0x20019960_f * (x**140) + L0x20019962_f * (x**141) + 
            L0x20019964_f * (x**142) + L0x20019966_f * (x**143) + 
            L0x20019968_f * (x**144) + L0x2001996a_f * (x**145) + 
            L0x2001996c_f * (x**146) + L0x2001996e_f * (x**147) + 
            L0x20019970_f * (x**148) + L0x20019972_f * (x**149) + 
            L0x20019974_f * (x**150) + L0x20019976_f * (x**151) + 
            L0x20019978_f * (x**152) + L0x2001997a_f * (x**153) + 
            L0x2001997c_f * (x**154) + L0x2001997e_f * (x**155) + 
            L0x20019980_f * (x**156) + L0x20019982_f * (x**157) + 
            L0x20019984_f * (x**158) + L0x20019986_f * (x**159) + 
            L0x20019988_f * (x**160) + L0x2001998a_f * (x**161) + 
            L0x2001998c_f * (x**162) + L0x2001998e_f * (x**163) + 
            L0x20019990_f * (x**164) + L0x20019992_f * (x**165) + 
            L0x20019994_f * (x**166) + L0x20019996_f * (x**167) + 
            L0x20019998_f * (x**168) + L0x2001999a_f * (x**169) + 
            L0x2001999c_f * (x**170) + L0x2001999e_f * (x**171) + 
            L0x200199a0_f * (x**172) + L0x200199a2_f * (x**173) + 
            L0x200199a4_f * (x**174) + L0x200199a6_f * (x**175) + 
            L0x200199a8_f * (x**176) + L0x200199aa_f * (x**177) + 
            L0x200199ac_f * (x**178) + L0x200199ae_f * (x**179) + 
            L0x200199b0_f * (x**180) + L0x200199b2_f * (x**181) + 
            L0x200199b4_f * (x**182) + L0x200199b6_f * (x**183) + 
            L0x200199b8_f * (x**184) + L0x200199ba_f * (x**185) + 
            L0x200199bc_f * (x**186) + L0x200199be_f * (x**187) + 
            L0x200199c0_f * (x**188) + L0x200199c2_f * (x**189) + 
            L0x200199c4_f * (x**190) + L0x200199c6_f * (x**191) + 
            L0x200199c8_f * (x**192) + L0x200199ca_f * (x**193) + 
            L0x200199cc_f * (x**194) + L0x200199ce_f * (x**195) + 
            L0x200199d0_f * (x**196) + L0x200199d2_f * (x**197) + 
            L0x200199d4_f * (x**198) + L0x200199d6_f * (x**199) + 
            L0x200199d8_f * (x**200) + L0x200199da_f * (x**201) + 
            L0x200199dc_f * (x**202) + L0x200199de_f * (x**203) + 
            L0x200199e0_f * (x**204) + L0x200199e2_f * (x**205) + 
            L0x200199e4_f * (x**206) + L0x200199e6_f * (x**207) + 
            L0x200199e8_f * (x**208) + L0x200199ea_f * (x**209) + 
            L0x200199ec_f * (x**210) + L0x200199ee_f * (x**211) + 
            L0x200199f0_f * (x**212) + L0x200199f2_f * (x**213) + 
            L0x200199f4_f * (x**214) + L0x200199f6_f * (x**215) + 
            L0x200199f8_f * (x**216) + L0x200199fa_f * (x**217) + 
            L0x200199fc_f * (x**218) + L0x200199fe_f * (x**219) + 
            L0x20019a00_f * (x**220) + L0x20019a02_f * (x**221) + 
            L0x20019a04_f * (x**222) + L0x20019a06_f * (x**223) + 
            L0x20019a08_f * (x**224) + L0x20019a0a_f * (x**225) + 
            L0x20019a0c_f * (x**226) + L0x20019a0e_f * (x**227) + 
            L0x20019a10_f * (x**228) + L0x20019a12_f * (x**229) + 
            L0x20019a14_f * (x**230) + L0x20019a16_f * (x**231) + 
            L0x20019a18_f * (x**232) + L0x20019a1a_f * (x**233) + 
            L0x20019a1c_f * (x**234) + L0x20019a1e_f * (x**235) + 
            L0x20019a20_f * (x**236) + L0x20019a22_f * (x**237) + 
            L0x20019a24_f * (x**238) + L0x20019a26_f * (x**239) + 
            L0x20019a28_f * (x**240) + L0x20019a2a_f * (x**241) + 
            L0x20019a2c_f * (x**242) + L0x20019a2e_f * (x**243) + 
            L0x20019a30_f * (x**244) + L0x20019a32_f * (x**245) + 
            L0x20019a34_f * (x**246) + L0x20019a36_f * (x**247) + 
            L0x20019a38_f * (x**248) + L0x20019a3a_f * (x**249) + 
            L0x20019a3c_f * (x**250) + L0x20019a3e_f * (x**251) + 
            L0x20019a40_f * (x**252) + L0x20019a42_f * (x**253) + 
            L0x20019a44_f * (x**254) + L0x20019a46_f * (x**255)
          )
          [25570049, x**4 - y_0_15 * 21206546, y_0_15 - 1]
  ] prove with [cuts [40, 54], all ghosts]
  &&
  true
;

cut (* 59 *)
  true && true;

(* slice 2 *)
cut (* 60 *)
  and [
    (* inp_poly_16 *)
    eqmod (2**32) * (inp_poly_16 * inp_poly_16)
          (
            L0x20019848_f * (x**0) + L0x2001984a_f * (x**1) + 
            L0x2001984c_f * (x**2) + L0x2001984e_f * (x**3) + 
            L0x20019850_f * (x**4) + L0x20019852_f * (x**5) + 
            L0x20019854_f * (x**6) + L0x20019856_f * (x**7) + 
            L0x20019858_f * (x**8) + L0x2001985a_f * (x**9) + 
            L0x2001985c_f * (x**10) + L0x2001985e_f * (x**11) + 
            L0x20019860_f * (x**12) + L0x20019862_f * (x**13) + 
            L0x20019864_f * (x**14) + L0x20019866_f * (x**15) + 
            L0x20019868_f * (x**16) + L0x2001986a_f * (x**17) + 
            L0x2001986c_f * (x**18) + L0x2001986e_f * (x**19) + 
            L0x20019870_f * (x**20) + L0x20019872_f * (x**21) + 
            L0x20019874_f * (x**22) + L0x20019876_f * (x**23) + 
            L0x20019878_f * (x**24) + L0x2001987a_f * (x**25) + 
            L0x2001987c_f * (x**26) + L0x2001987e_f * (x**27) + 
            L0x20019880_f * (x**28) + L0x20019882_f * (x**29) + 
            L0x20019884_f * (x**30) + L0x20019886_f * (x**31) + 
            L0x20019888_f * (x**32) + L0x2001988a_f * (x**33) + 
            L0x2001988c_f * (x**34) + L0x2001988e_f * (x**35) + 
            L0x20019890_f * (x**36) + L0x20019892_f * (x**37) + 
            L0x20019894_f * (x**38) + L0x20019896_f * (x**39) + 
            L0x20019898_f * (x**40) + L0x2001989a_f * (x**41) + 
            L0x2001989c_f * (x**42) + L0x2001989e_f * (x**43) + 
            L0x200198a0_f * (x**44) + L0x200198a2_f * (x**45) + 
            L0x200198a4_f * (x**46) + L0x200198a6_f * (x**47) + 
            L0x200198a8_f * (x**48) + L0x200198aa_f * (x**49) + 
            L0x200198ac_f * (x**50) + L0x200198ae_f * (x**51) + 
            L0x200198b0_f * (x**52) + L0x200198b2_f * (x**53) + 
            L0x200198b4_f * (x**54) + L0x200198b6_f * (x**55) + 
            L0x200198b8_f * (x**56) + L0x200198ba_f * (x**57) + 
            L0x200198bc_f * (x**58) + L0x200198be_f * (x**59) + 
            L0x200198c0_f * (x**60) + L0x200198c2_f * (x**61) + 
            L0x200198c4_f * (x**62) + L0x200198c6_f * (x**63) + 
            L0x200198c8_f * (x**64) + L0x200198ca_f * (x**65) + 
            L0x200198cc_f * (x**66) + L0x200198ce_f * (x**67) + 
            L0x200198d0_f * (x**68) + L0x200198d2_f * (x**69) + 
            L0x200198d4_f * (x**70) + L0x200198d6_f * (x**71) + 
            L0x200198d8_f * (x**72) + L0x200198da_f * (x**73) + 
            L0x200198dc_f * (x**74) + L0x200198de_f * (x**75) + 
            L0x200198e0_f * (x**76) + L0x200198e2_f * (x**77) + 
            L0x200198e4_f * (x**78) + L0x200198e6_f * (x**79) + 
            L0x200198e8_f * (x**80) + L0x200198ea_f * (x**81) + 
            L0x200198ec_f * (x**82) + L0x200198ee_f * (x**83) + 
            L0x200198f0_f * (x**84) + L0x200198f2_f * (x**85) + 
            L0x200198f4_f * (x**86) + L0x200198f6_f * (x**87) + 
            L0x200198f8_f * (x**88) + L0x200198fa_f * (x**89) + 
            L0x200198fc_f * (x**90) + L0x200198fe_f * (x**91) + 
            L0x20019900_f * (x**92) + L0x20019902_f * (x**93) + 
            L0x20019904_f * (x**94) + L0x20019906_f * (x**95) + 
            L0x20019908_f * (x**96) + L0x2001990a_f * (x**97) + 
            L0x2001990c_f * (x**98) + L0x2001990e_f * (x**99) + 
            L0x20019910_f * (x**100) + L0x20019912_f * (x**101) + 
            L0x20019914_f * (x**102) + L0x20019916_f * (x**103) + 
            L0x20019918_f * (x**104) + L0x2001991a_f * (x**105) + 
            L0x2001991c_f * (x**106) + L0x2001991e_f * (x**107) + 
            L0x20019920_f * (x**108) + L0x20019922_f * (x**109) + 
            L0x20019924_f * (x**110) + L0x20019926_f * (x**111) + 
            L0x20019928_f * (x**112) + L0x2001992a_f * (x**113) + 
            L0x2001992c_f * (x**114) + L0x2001992e_f * (x**115) + 
            L0x20019930_f * (x**116) + L0x20019932_f * (x**117) + 
            L0x20019934_f * (x**118) + L0x20019936_f * (x**119) + 
            L0x20019938_f * (x**120) + L0x2001993a_f * (x**121) + 
            L0x2001993c_f * (x**122) + L0x2001993e_f * (x**123) + 
            L0x20019940_f * (x**124) + L0x20019942_f * (x**125) + 
            L0x20019944_f * (x**126) + L0x20019946_f * (x**127) + 
            L0x20019948_f * (x**128) + L0x2001994a_f * (x**129) + 
            L0x2001994c_f * (x**130) + L0x2001994e_f * (x**131) + 
            L0x20019950_f * (x**132) + L0x20019952_f * (x**133) + 
            L0x20019954_f * (x**134) + L0x20019956_f * (x**135) + 
            L0x20019958_f * (x**136) + L0x2001995a_f * (x**137) + 
            L0x2001995c_f * (x**138) + L0x2001995e_f * (x**139) + 
            L0x20019960_f * (x**140) + L0x20019962_f * (x**141) + 
            L0x20019964_f * (x**142) + L0x20019966_f * (x**143) + 
            L0x20019968_f * (x**144) + L0x2001996a_f * (x**145) + 
            L0x2001996c_f * (x**146) + L0x2001996e_f * (x**147) + 
            L0x20019970_f * (x**148) + L0x20019972_f * (x**149) + 
            L0x20019974_f * (x**150) + L0x20019976_f * (x**151) + 
            L0x20019978_f * (x**152) + L0x2001997a_f * (x**153) + 
            L0x2001997c_f * (x**154) + L0x2001997e_f * (x**155) + 
            L0x20019980_f * (x**156) + L0x20019982_f * (x**157) + 
            L0x20019984_f * (x**158) + L0x20019986_f * (x**159) + 
            L0x20019988_f * (x**160) + L0x2001998a_f * (x**161) + 
            L0x2001998c_f * (x**162) + L0x2001998e_f * (x**163) + 
            L0x20019990_f * (x**164) + L0x20019992_f * (x**165) + 
            L0x20019994_f * (x**166) + L0x20019996_f * (x**167) + 
            L0x20019998_f * (x**168) + L0x2001999a_f * (x**169) + 
            L0x2001999c_f * (x**170) + L0x2001999e_f * (x**171) + 
            L0x200199a0_f * (x**172) + L0x200199a2_f * (x**173) + 
            L0x200199a4_f * (x**174) + L0x200199a6_f * (x**175) + 
            L0x200199a8_f * (x**176) + L0x200199aa_f * (x**177) + 
            L0x200199ac_f * (x**178) + L0x200199ae_f * (x**179) + 
            L0x200199b0_f * (x**180) + L0x200199b2_f * (x**181) + 
            L0x200199b4_f * (x**182) + L0x200199b6_f * (x**183) + 
            L0x200199b8_f * (x**184) + L0x200199ba_f * (x**185) + 
            L0x200199bc_f * (x**186) + L0x200199be_f * (x**187) + 
            L0x200199c0_f * (x**188) + L0x200199c2_f * (x**189) + 
            L0x200199c4_f * (x**190) + L0x200199c6_f * (x**191) + 
            L0x200199c8_f * (x**192) + L0x200199ca_f * (x**193) + 
            L0x200199cc_f * (x**194) + L0x200199ce_f * (x**195) + 
            L0x200199d0_f * (x**196) + L0x200199d2_f * (x**197) + 
            L0x200199d4_f * (x**198) + L0x200199d6_f * (x**199) + 
            L0x200199d8_f * (x**200) + L0x200199da_f * (x**201) + 
            L0x200199dc_f * (x**202) + L0x200199de_f * (x**203) + 
            L0x200199e0_f * (x**204) + L0x200199e2_f * (x**205) + 
            L0x200199e4_f * (x**206) + L0x200199e6_f * (x**207) + 
            L0x200199e8_f * (x**208) + L0x200199ea_f * (x**209) + 
            L0x200199ec_f * (x**210) + L0x200199ee_f * (x**211) + 
            L0x200199f0_f * (x**212) + L0x200199f2_f * (x**213) + 
            L0x200199f4_f * (x**214) + L0x200199f6_f * (x**215) + 
            L0x200199f8_f * (x**216) + L0x200199fa_f * (x**217) + 
            L0x200199fc_f * (x**218) + L0x200199fe_f * (x**219) + 
            L0x20019a00_f * (x**220) + L0x20019a02_f * (x**221) + 
            L0x20019a04_f * (x**222) + L0x20019a06_f * (x**223) + 
            L0x20019a08_f * (x**224) + L0x20019a0a_f * (x**225) + 
            L0x20019a0c_f * (x**226) + L0x20019a0e_f * (x**227) + 
            L0x20019a10_f * (x**228) + L0x20019a12_f * (x**229) + 
            L0x20019a14_f * (x**230) + L0x20019a16_f * (x**231) + 
            L0x20019a18_f * (x**232) + L0x20019a1a_f * (x**233) + 
            L0x20019a1c_f * (x**234) + L0x20019a1e_f * (x**235) + 
            L0x20019a20_f * (x**236) + L0x20019a22_f * (x**237) + 
            L0x20019a24_f * (x**238) + L0x20019a26_f * (x**239) + 
            L0x20019a28_f * (x**240) + L0x20019a2a_f * (x**241) + 
            L0x20019a2c_f * (x**242) + L0x20019a2e_f * (x**243) + 
            L0x20019a30_f * (x**244) + L0x20019a32_f * (x**245) + 
            L0x20019a34_f * (x**246) + L0x20019a36_f * (x**247) + 
            L0x20019a38_f * (x**248) + L0x20019a3a_f * (x**249) + 
            L0x20019a3c_f * (x**250) + L0x20019a3e_f * (x**251) + 
            L0x20019a40_f * (x**252) + L0x20019a42_f * (x**253) + 
            L0x20019a44_f * (x**254) + L0x20019a46_f * (x**255)
          )
          [25570049, x**4 - y_0_16 * 21713494, y_0_16 - 1],
    (* inp_poly_17 *)
    eqmod (2**32) * (inp_poly_17 * inp_poly_17)
          (
            L0x20019848_f * (x**0) + L0x2001984a_f * (x**1) + 
            L0x2001984c_f * (x**2) + L0x2001984e_f * (x**3) + 
            L0x20019850_f * (x**4) + L0x20019852_f * (x**5) + 
            L0x20019854_f * (x**6) + L0x20019856_f * (x**7) + 
            L0x20019858_f * (x**8) + L0x2001985a_f * (x**9) + 
            L0x2001985c_f * (x**10) + L0x2001985e_f * (x**11) + 
            L0x20019860_f * (x**12) + L0x20019862_f * (x**13) + 
            L0x20019864_f * (x**14) + L0x20019866_f * (x**15) + 
            L0x20019868_f * (x**16) + L0x2001986a_f * (x**17) + 
            L0x2001986c_f * (x**18) + L0x2001986e_f * (x**19) + 
            L0x20019870_f * (x**20) + L0x20019872_f * (x**21) + 
            L0x20019874_f * (x**22) + L0x20019876_f * (x**23) + 
            L0x20019878_f * (x**24) + L0x2001987a_f * (x**25) + 
            L0x2001987c_f * (x**26) + L0x2001987e_f * (x**27) + 
            L0x20019880_f * (x**28) + L0x20019882_f * (x**29) + 
            L0x20019884_f * (x**30) + L0x20019886_f * (x**31) + 
            L0x20019888_f * (x**32) + L0x2001988a_f * (x**33) + 
            L0x2001988c_f * (x**34) + L0x2001988e_f * (x**35) + 
            L0x20019890_f * (x**36) + L0x20019892_f * (x**37) + 
            L0x20019894_f * (x**38) + L0x20019896_f * (x**39) + 
            L0x20019898_f * (x**40) + L0x2001989a_f * (x**41) + 
            L0x2001989c_f * (x**42) + L0x2001989e_f * (x**43) + 
            L0x200198a0_f * (x**44) + L0x200198a2_f * (x**45) + 
            L0x200198a4_f * (x**46) + L0x200198a6_f * (x**47) + 
            L0x200198a8_f * (x**48) + L0x200198aa_f * (x**49) + 
            L0x200198ac_f * (x**50) + L0x200198ae_f * (x**51) + 
            L0x200198b0_f * (x**52) + L0x200198b2_f * (x**53) + 
            L0x200198b4_f * (x**54) + L0x200198b6_f * (x**55) + 
            L0x200198b8_f * (x**56) + L0x200198ba_f * (x**57) + 
            L0x200198bc_f * (x**58) + L0x200198be_f * (x**59) + 
            L0x200198c0_f * (x**60) + L0x200198c2_f * (x**61) + 
            L0x200198c4_f * (x**62) + L0x200198c6_f * (x**63) + 
            L0x200198c8_f * (x**64) + L0x200198ca_f * (x**65) + 
            L0x200198cc_f * (x**66) + L0x200198ce_f * (x**67) + 
            L0x200198d0_f * (x**68) + L0x200198d2_f * (x**69) + 
            L0x200198d4_f * (x**70) + L0x200198d6_f * (x**71) + 
            L0x200198d8_f * (x**72) + L0x200198da_f * (x**73) + 
            L0x200198dc_f * (x**74) + L0x200198de_f * (x**75) + 
            L0x200198e0_f * (x**76) + L0x200198e2_f * (x**77) + 
            L0x200198e4_f * (x**78) + L0x200198e6_f * (x**79) + 
            L0x200198e8_f * (x**80) + L0x200198ea_f * (x**81) + 
            L0x200198ec_f * (x**82) + L0x200198ee_f * (x**83) + 
            L0x200198f0_f * (x**84) + L0x200198f2_f * (x**85) + 
            L0x200198f4_f * (x**86) + L0x200198f6_f * (x**87) + 
            L0x200198f8_f * (x**88) + L0x200198fa_f * (x**89) + 
            L0x200198fc_f * (x**90) + L0x200198fe_f * (x**91) + 
            L0x20019900_f * (x**92) + L0x20019902_f * (x**93) + 
            L0x20019904_f * (x**94) + L0x20019906_f * (x**95) + 
            L0x20019908_f * (x**96) + L0x2001990a_f * (x**97) + 
            L0x2001990c_f * (x**98) + L0x2001990e_f * (x**99) + 
            L0x20019910_f * (x**100) + L0x20019912_f * (x**101) + 
            L0x20019914_f * (x**102) + L0x20019916_f * (x**103) + 
            L0x20019918_f * (x**104) + L0x2001991a_f * (x**105) + 
            L0x2001991c_f * (x**106) + L0x2001991e_f * (x**107) + 
            L0x20019920_f * (x**108) + L0x20019922_f * (x**109) + 
            L0x20019924_f * (x**110) + L0x20019926_f * (x**111) + 
            L0x20019928_f * (x**112) + L0x2001992a_f * (x**113) + 
            L0x2001992c_f * (x**114) + L0x2001992e_f * (x**115) + 
            L0x20019930_f * (x**116) + L0x20019932_f * (x**117) + 
            L0x20019934_f * (x**118) + L0x20019936_f * (x**119) + 
            L0x20019938_f * (x**120) + L0x2001993a_f * (x**121) + 
            L0x2001993c_f * (x**122) + L0x2001993e_f * (x**123) + 
            L0x20019940_f * (x**124) + L0x20019942_f * (x**125) + 
            L0x20019944_f * (x**126) + L0x20019946_f * (x**127) + 
            L0x20019948_f * (x**128) + L0x2001994a_f * (x**129) + 
            L0x2001994c_f * (x**130) + L0x2001994e_f * (x**131) + 
            L0x20019950_f * (x**132) + L0x20019952_f * (x**133) + 
            L0x20019954_f * (x**134) + L0x20019956_f * (x**135) + 
            L0x20019958_f * (x**136) + L0x2001995a_f * (x**137) + 
            L0x2001995c_f * (x**138) + L0x2001995e_f * (x**139) + 
            L0x20019960_f * (x**140) + L0x20019962_f * (x**141) + 
            L0x20019964_f * (x**142) + L0x20019966_f * (x**143) + 
            L0x20019968_f * (x**144) + L0x2001996a_f * (x**145) + 
            L0x2001996c_f * (x**146) + L0x2001996e_f * (x**147) + 
            L0x20019970_f * (x**148) + L0x20019972_f * (x**149) + 
            L0x20019974_f * (x**150) + L0x20019976_f * (x**151) + 
            L0x20019978_f * (x**152) + L0x2001997a_f * (x**153) + 
            L0x2001997c_f * (x**154) + L0x2001997e_f * (x**155) + 
            L0x20019980_f * (x**156) + L0x20019982_f * (x**157) + 
            L0x20019984_f * (x**158) + L0x20019986_f * (x**159) + 
            L0x20019988_f * (x**160) + L0x2001998a_f * (x**161) + 
            L0x2001998c_f * (x**162) + L0x2001998e_f * (x**163) + 
            L0x20019990_f * (x**164) + L0x20019992_f * (x**165) + 
            L0x20019994_f * (x**166) + L0x20019996_f * (x**167) + 
            L0x20019998_f * (x**168) + L0x2001999a_f * (x**169) + 
            L0x2001999c_f * (x**170) + L0x2001999e_f * (x**171) + 
            L0x200199a0_f * (x**172) + L0x200199a2_f * (x**173) + 
            L0x200199a4_f * (x**174) + L0x200199a6_f * (x**175) + 
            L0x200199a8_f * (x**176) + L0x200199aa_f * (x**177) + 
            L0x200199ac_f * (x**178) + L0x200199ae_f * (x**179) + 
            L0x200199b0_f * (x**180) + L0x200199b2_f * (x**181) + 
            L0x200199b4_f * (x**182) + L0x200199b6_f * (x**183) + 
            L0x200199b8_f * (x**184) + L0x200199ba_f * (x**185) + 
            L0x200199bc_f * (x**186) + L0x200199be_f * (x**187) + 
            L0x200199c0_f * (x**188) + L0x200199c2_f * (x**189) + 
            L0x200199c4_f * (x**190) + L0x200199c6_f * (x**191) + 
            L0x200199c8_f * (x**192) + L0x200199ca_f * (x**193) + 
            L0x200199cc_f * (x**194) + L0x200199ce_f * (x**195) + 
            L0x200199d0_f * (x**196) + L0x200199d2_f * (x**197) + 
            L0x200199d4_f * (x**198) + L0x200199d6_f * (x**199) + 
            L0x200199d8_f * (x**200) + L0x200199da_f * (x**201) + 
            L0x200199dc_f * (x**202) + L0x200199de_f * (x**203) + 
            L0x200199e0_f * (x**204) + L0x200199e2_f * (x**205) + 
            L0x200199e4_f * (x**206) + L0x200199e6_f * (x**207) + 
            L0x200199e8_f * (x**208) + L0x200199ea_f * (x**209) + 
            L0x200199ec_f * (x**210) + L0x200199ee_f * (x**211) + 
            L0x200199f0_f * (x**212) + L0x200199f2_f * (x**213) + 
            L0x200199f4_f * (x**214) + L0x200199f6_f * (x**215) + 
            L0x200199f8_f * (x**216) + L0x200199fa_f * (x**217) + 
            L0x200199fc_f * (x**218) + L0x200199fe_f * (x**219) + 
            L0x20019a00_f * (x**220) + L0x20019a02_f * (x**221) + 
            L0x20019a04_f * (x**222) + L0x20019a06_f * (x**223) + 
            L0x20019a08_f * (x**224) + L0x20019a0a_f * (x**225) + 
            L0x20019a0c_f * (x**226) + L0x20019a0e_f * (x**227) + 
            L0x20019a10_f * (x**228) + L0x20019a12_f * (x**229) + 
            L0x20019a14_f * (x**230) + L0x20019a16_f * (x**231) + 
            L0x20019a18_f * (x**232) + L0x20019a1a_f * (x**233) + 
            L0x20019a1c_f * (x**234) + L0x20019a1e_f * (x**235) + 
            L0x20019a20_f * (x**236) + L0x20019a22_f * (x**237) + 
            L0x20019a24_f * (x**238) + L0x20019a26_f * (x**239) + 
            L0x20019a28_f * (x**240) + L0x20019a2a_f * (x**241) + 
            L0x20019a2c_f * (x**242) + L0x20019a2e_f * (x**243) + 
            L0x20019a30_f * (x**244) + L0x20019a32_f * (x**245) + 
            L0x20019a34_f * (x**246) + L0x20019a36_f * (x**247) + 
            L0x20019a38_f * (x**248) + L0x20019a3a_f * (x**249) + 
            L0x20019a3c_f * (x**250) + L0x20019a3e_f * (x**251) + 
            L0x20019a40_f * (x**252) + L0x20019a42_f * (x**253) + 
            L0x20019a44_f * (x**254) + L0x20019a46_f * (x**255)
          )
          [25570049, x**4 - y_0_17 * 3856555, y_0_17 - 1],
    (* inp_poly_18 *)
    eqmod (2**32) * (inp_poly_18 * inp_poly_18)
          (
            L0x20019848_f * (x**0) + L0x2001984a_f * (x**1) + 
            L0x2001984c_f * (x**2) + L0x2001984e_f * (x**3) + 
            L0x20019850_f * (x**4) + L0x20019852_f * (x**5) + 
            L0x20019854_f * (x**6) + L0x20019856_f * (x**7) + 
            L0x20019858_f * (x**8) + L0x2001985a_f * (x**9) + 
            L0x2001985c_f * (x**10) + L0x2001985e_f * (x**11) + 
            L0x20019860_f * (x**12) + L0x20019862_f * (x**13) + 
            L0x20019864_f * (x**14) + L0x20019866_f * (x**15) + 
            L0x20019868_f * (x**16) + L0x2001986a_f * (x**17) + 
            L0x2001986c_f * (x**18) + L0x2001986e_f * (x**19) + 
            L0x20019870_f * (x**20) + L0x20019872_f * (x**21) + 
            L0x20019874_f * (x**22) + L0x20019876_f * (x**23) + 
            L0x20019878_f * (x**24) + L0x2001987a_f * (x**25) + 
            L0x2001987c_f * (x**26) + L0x2001987e_f * (x**27) + 
            L0x20019880_f * (x**28) + L0x20019882_f * (x**29) + 
            L0x20019884_f * (x**30) + L0x20019886_f * (x**31) + 
            L0x20019888_f * (x**32) + L0x2001988a_f * (x**33) + 
            L0x2001988c_f * (x**34) + L0x2001988e_f * (x**35) + 
            L0x20019890_f * (x**36) + L0x20019892_f * (x**37) + 
            L0x20019894_f * (x**38) + L0x20019896_f * (x**39) + 
            L0x20019898_f * (x**40) + L0x2001989a_f * (x**41) + 
            L0x2001989c_f * (x**42) + L0x2001989e_f * (x**43) + 
            L0x200198a0_f * (x**44) + L0x200198a2_f * (x**45) + 
            L0x200198a4_f * (x**46) + L0x200198a6_f * (x**47) + 
            L0x200198a8_f * (x**48) + L0x200198aa_f * (x**49) + 
            L0x200198ac_f * (x**50) + L0x200198ae_f * (x**51) + 
            L0x200198b0_f * (x**52) + L0x200198b2_f * (x**53) + 
            L0x200198b4_f * (x**54) + L0x200198b6_f * (x**55) + 
            L0x200198b8_f * (x**56) + L0x200198ba_f * (x**57) + 
            L0x200198bc_f * (x**58) + L0x200198be_f * (x**59) + 
            L0x200198c0_f * (x**60) + L0x200198c2_f * (x**61) + 
            L0x200198c4_f * (x**62) + L0x200198c6_f * (x**63) + 
            L0x200198c8_f * (x**64) + L0x200198ca_f * (x**65) + 
            L0x200198cc_f * (x**66) + L0x200198ce_f * (x**67) + 
            L0x200198d0_f * (x**68) + L0x200198d2_f * (x**69) + 
            L0x200198d4_f * (x**70) + L0x200198d6_f * (x**71) + 
            L0x200198d8_f * (x**72) + L0x200198da_f * (x**73) + 
            L0x200198dc_f * (x**74) + L0x200198de_f * (x**75) + 
            L0x200198e0_f * (x**76) + L0x200198e2_f * (x**77) + 
            L0x200198e4_f * (x**78) + L0x200198e6_f * (x**79) + 
            L0x200198e8_f * (x**80) + L0x200198ea_f * (x**81) + 
            L0x200198ec_f * (x**82) + L0x200198ee_f * (x**83) + 
            L0x200198f0_f * (x**84) + L0x200198f2_f * (x**85) + 
            L0x200198f4_f * (x**86) + L0x200198f6_f * (x**87) + 
            L0x200198f8_f * (x**88) + L0x200198fa_f * (x**89) + 
            L0x200198fc_f * (x**90) + L0x200198fe_f * (x**91) + 
            L0x20019900_f * (x**92) + L0x20019902_f * (x**93) + 
            L0x20019904_f * (x**94) + L0x20019906_f * (x**95) + 
            L0x20019908_f * (x**96) + L0x2001990a_f * (x**97) + 
            L0x2001990c_f * (x**98) + L0x2001990e_f * (x**99) + 
            L0x20019910_f * (x**100) + L0x20019912_f * (x**101) + 
            L0x20019914_f * (x**102) + L0x20019916_f * (x**103) + 
            L0x20019918_f * (x**104) + L0x2001991a_f * (x**105) + 
            L0x2001991c_f * (x**106) + L0x2001991e_f * (x**107) + 
            L0x20019920_f * (x**108) + L0x20019922_f * (x**109) + 
            L0x20019924_f * (x**110) + L0x20019926_f * (x**111) + 
            L0x20019928_f * (x**112) + L0x2001992a_f * (x**113) + 
            L0x2001992c_f * (x**114) + L0x2001992e_f * (x**115) + 
            L0x20019930_f * (x**116) + L0x20019932_f * (x**117) + 
            L0x20019934_f * (x**118) + L0x20019936_f * (x**119) + 
            L0x20019938_f * (x**120) + L0x2001993a_f * (x**121) + 
            L0x2001993c_f * (x**122) + L0x2001993e_f * (x**123) + 
            L0x20019940_f * (x**124) + L0x20019942_f * (x**125) + 
            L0x20019944_f * (x**126) + L0x20019946_f * (x**127) + 
            L0x20019948_f * (x**128) + L0x2001994a_f * (x**129) + 
            L0x2001994c_f * (x**130) + L0x2001994e_f * (x**131) + 
            L0x20019950_f * (x**132) + L0x20019952_f * (x**133) + 
            L0x20019954_f * (x**134) + L0x20019956_f * (x**135) + 
            L0x20019958_f * (x**136) + L0x2001995a_f * (x**137) + 
            L0x2001995c_f * (x**138) + L0x2001995e_f * (x**139) + 
            L0x20019960_f * (x**140) + L0x20019962_f * (x**141) + 
            L0x20019964_f * (x**142) + L0x20019966_f * (x**143) + 
            L0x20019968_f * (x**144) + L0x2001996a_f * (x**145) + 
            L0x2001996c_f * (x**146) + L0x2001996e_f * (x**147) + 
            L0x20019970_f * (x**148) + L0x20019972_f * (x**149) + 
            L0x20019974_f * (x**150) + L0x20019976_f * (x**151) + 
            L0x20019978_f * (x**152) + L0x2001997a_f * (x**153) + 
            L0x2001997c_f * (x**154) + L0x2001997e_f * (x**155) + 
            L0x20019980_f * (x**156) + L0x20019982_f * (x**157) + 
            L0x20019984_f * (x**158) + L0x20019986_f * (x**159) + 
            L0x20019988_f * (x**160) + L0x2001998a_f * (x**161) + 
            L0x2001998c_f * (x**162) + L0x2001998e_f * (x**163) + 
            L0x20019990_f * (x**164) + L0x20019992_f * (x**165) + 
            L0x20019994_f * (x**166) + L0x20019996_f * (x**167) + 
            L0x20019998_f * (x**168) + L0x2001999a_f * (x**169) + 
            L0x2001999c_f * (x**170) + L0x2001999e_f * (x**171) + 
            L0x200199a0_f * (x**172) + L0x200199a2_f * (x**173) + 
            L0x200199a4_f * (x**174) + L0x200199a6_f * (x**175) + 
            L0x200199a8_f * (x**176) + L0x200199aa_f * (x**177) + 
            L0x200199ac_f * (x**178) + L0x200199ae_f * (x**179) + 
            L0x200199b0_f * (x**180) + L0x200199b2_f * (x**181) + 
            L0x200199b4_f * (x**182) + L0x200199b6_f * (x**183) + 
            L0x200199b8_f * (x**184) + L0x200199ba_f * (x**185) + 
            L0x200199bc_f * (x**186) + L0x200199be_f * (x**187) + 
            L0x200199c0_f * (x**188) + L0x200199c2_f * (x**189) + 
            L0x200199c4_f * (x**190) + L0x200199c6_f * (x**191) + 
            L0x200199c8_f * (x**192) + L0x200199ca_f * (x**193) + 
            L0x200199cc_f * (x**194) + L0x200199ce_f * (x**195) + 
            L0x200199d0_f * (x**196) + L0x200199d2_f * (x**197) + 
            L0x200199d4_f * (x**198) + L0x200199d6_f * (x**199) + 
            L0x200199d8_f * (x**200) + L0x200199da_f * (x**201) + 
            L0x200199dc_f * (x**202) + L0x200199de_f * (x**203) + 
            L0x200199e0_f * (x**204) + L0x200199e2_f * (x**205) + 
            L0x200199e4_f * (x**206) + L0x200199e6_f * (x**207) + 
            L0x200199e8_f * (x**208) + L0x200199ea_f * (x**209) + 
            L0x200199ec_f * (x**210) + L0x200199ee_f * (x**211) + 
            L0x200199f0_f * (x**212) + L0x200199f2_f * (x**213) + 
            L0x200199f4_f * (x**214) + L0x200199f6_f * (x**215) + 
            L0x200199f8_f * (x**216) + L0x200199fa_f * (x**217) + 
            L0x200199fc_f * (x**218) + L0x200199fe_f * (x**219) + 
            L0x20019a00_f * (x**220) + L0x20019a02_f * (x**221) + 
            L0x20019a04_f * (x**222) + L0x20019a06_f * (x**223) + 
            L0x20019a08_f * (x**224) + L0x20019a0a_f * (x**225) + 
            L0x20019a0c_f * (x**226) + L0x20019a0e_f * (x**227) + 
            L0x20019a10_f * (x**228) + L0x20019a12_f * (x**229) + 
            L0x20019a14_f * (x**230) + L0x20019a16_f * (x**231) + 
            L0x20019a18_f * (x**232) + L0x20019a1a_f * (x**233) + 
            L0x20019a1c_f * (x**234) + L0x20019a1e_f * (x**235) + 
            L0x20019a20_f * (x**236) + L0x20019a22_f * (x**237) + 
            L0x20019a24_f * (x**238) + L0x20019a26_f * (x**239) + 
            L0x20019a28_f * (x**240) + L0x20019a2a_f * (x**241) + 
            L0x20019a2c_f * (x**242) + L0x20019a2e_f * (x**243) + 
            L0x20019a30_f * (x**244) + L0x20019a32_f * (x**245) + 
            L0x20019a34_f * (x**246) + L0x20019a36_f * (x**247) + 
            L0x20019a38_f * (x**248) + L0x20019a3a_f * (x**249) + 
            L0x20019a3c_f * (x**250) + L0x20019a3e_f * (x**251) + 
            L0x20019a40_f * (x**252) + L0x20019a42_f * (x**253) + 
            L0x20019a44_f * (x**254) + L0x20019a46_f * (x**255)
          )
          [25570049, x**4 - y_0_18 * 23159929, y_0_18 - 1],
    (* inp_poly_19 *)
    eqmod (2**32) * (inp_poly_19 * inp_poly_19)
          (
            L0x20019848_f * (x**0) + L0x2001984a_f * (x**1) + 
            L0x2001984c_f * (x**2) + L0x2001984e_f * (x**3) + 
            L0x20019850_f * (x**4) + L0x20019852_f * (x**5) + 
            L0x20019854_f * (x**6) + L0x20019856_f * (x**7) + 
            L0x20019858_f * (x**8) + L0x2001985a_f * (x**9) + 
            L0x2001985c_f * (x**10) + L0x2001985e_f * (x**11) + 
            L0x20019860_f * (x**12) + L0x20019862_f * (x**13) + 
            L0x20019864_f * (x**14) + L0x20019866_f * (x**15) + 
            L0x20019868_f * (x**16) + L0x2001986a_f * (x**17) + 
            L0x2001986c_f * (x**18) + L0x2001986e_f * (x**19) + 
            L0x20019870_f * (x**20) + L0x20019872_f * (x**21) + 
            L0x20019874_f * (x**22) + L0x20019876_f * (x**23) + 
            L0x20019878_f * (x**24) + L0x2001987a_f * (x**25) + 
            L0x2001987c_f * (x**26) + L0x2001987e_f * (x**27) + 
            L0x20019880_f * (x**28) + L0x20019882_f * (x**29) + 
            L0x20019884_f * (x**30) + L0x20019886_f * (x**31) + 
            L0x20019888_f * (x**32) + L0x2001988a_f * (x**33) + 
            L0x2001988c_f * (x**34) + L0x2001988e_f * (x**35) + 
            L0x20019890_f * (x**36) + L0x20019892_f * (x**37) + 
            L0x20019894_f * (x**38) + L0x20019896_f * (x**39) + 
            L0x20019898_f * (x**40) + L0x2001989a_f * (x**41) + 
            L0x2001989c_f * (x**42) + L0x2001989e_f * (x**43) + 
            L0x200198a0_f * (x**44) + L0x200198a2_f * (x**45) + 
            L0x200198a4_f * (x**46) + L0x200198a6_f * (x**47) + 
            L0x200198a8_f * (x**48) + L0x200198aa_f * (x**49) + 
            L0x200198ac_f * (x**50) + L0x200198ae_f * (x**51) + 
            L0x200198b0_f * (x**52) + L0x200198b2_f * (x**53) + 
            L0x200198b4_f * (x**54) + L0x200198b6_f * (x**55) + 
            L0x200198b8_f * (x**56) + L0x200198ba_f * (x**57) + 
            L0x200198bc_f * (x**58) + L0x200198be_f * (x**59) + 
            L0x200198c0_f * (x**60) + L0x200198c2_f * (x**61) + 
            L0x200198c4_f * (x**62) + L0x200198c6_f * (x**63) + 
            L0x200198c8_f * (x**64) + L0x200198ca_f * (x**65) + 
            L0x200198cc_f * (x**66) + L0x200198ce_f * (x**67) + 
            L0x200198d0_f * (x**68) + L0x200198d2_f * (x**69) + 
            L0x200198d4_f * (x**70) + L0x200198d6_f * (x**71) + 
            L0x200198d8_f * (x**72) + L0x200198da_f * (x**73) + 
            L0x200198dc_f * (x**74) + L0x200198de_f * (x**75) + 
            L0x200198e0_f * (x**76) + L0x200198e2_f * (x**77) + 
            L0x200198e4_f * (x**78) + L0x200198e6_f * (x**79) + 
            L0x200198e8_f * (x**80) + L0x200198ea_f * (x**81) + 
            L0x200198ec_f * (x**82) + L0x200198ee_f * (x**83) + 
            L0x200198f0_f * (x**84) + L0x200198f2_f * (x**85) + 
            L0x200198f4_f * (x**86) + L0x200198f6_f * (x**87) + 
            L0x200198f8_f * (x**88) + L0x200198fa_f * (x**89) + 
            L0x200198fc_f * (x**90) + L0x200198fe_f * (x**91) + 
            L0x20019900_f * (x**92) + L0x20019902_f * (x**93) + 
            L0x20019904_f * (x**94) + L0x20019906_f * (x**95) + 
            L0x20019908_f * (x**96) + L0x2001990a_f * (x**97) + 
            L0x2001990c_f * (x**98) + L0x2001990e_f * (x**99) + 
            L0x20019910_f * (x**100) + L0x20019912_f * (x**101) + 
            L0x20019914_f * (x**102) + L0x20019916_f * (x**103) + 
            L0x20019918_f * (x**104) + L0x2001991a_f * (x**105) + 
            L0x2001991c_f * (x**106) + L0x2001991e_f * (x**107) + 
            L0x20019920_f * (x**108) + L0x20019922_f * (x**109) + 
            L0x20019924_f * (x**110) + L0x20019926_f * (x**111) + 
            L0x20019928_f * (x**112) + L0x2001992a_f * (x**113) + 
            L0x2001992c_f * (x**114) + L0x2001992e_f * (x**115) + 
            L0x20019930_f * (x**116) + L0x20019932_f * (x**117) + 
            L0x20019934_f * (x**118) + L0x20019936_f * (x**119) + 
            L0x20019938_f * (x**120) + L0x2001993a_f * (x**121) + 
            L0x2001993c_f * (x**122) + L0x2001993e_f * (x**123) + 
            L0x20019940_f * (x**124) + L0x20019942_f * (x**125) + 
            L0x20019944_f * (x**126) + L0x20019946_f * (x**127) + 
            L0x20019948_f * (x**128) + L0x2001994a_f * (x**129) + 
            L0x2001994c_f * (x**130) + L0x2001994e_f * (x**131) + 
            L0x20019950_f * (x**132) + L0x20019952_f * (x**133) + 
            L0x20019954_f * (x**134) + L0x20019956_f * (x**135) + 
            L0x20019958_f * (x**136) + L0x2001995a_f * (x**137) + 
            L0x2001995c_f * (x**138) + L0x2001995e_f * (x**139) + 
            L0x20019960_f * (x**140) + L0x20019962_f * (x**141) + 
            L0x20019964_f * (x**142) + L0x20019966_f * (x**143) + 
            L0x20019968_f * (x**144) + L0x2001996a_f * (x**145) + 
            L0x2001996c_f * (x**146) + L0x2001996e_f * (x**147) + 
            L0x20019970_f * (x**148) + L0x20019972_f * (x**149) + 
            L0x20019974_f * (x**150) + L0x20019976_f * (x**151) + 
            L0x20019978_f * (x**152) + L0x2001997a_f * (x**153) + 
            L0x2001997c_f * (x**154) + L0x2001997e_f * (x**155) + 
            L0x20019980_f * (x**156) + L0x20019982_f * (x**157) + 
            L0x20019984_f * (x**158) + L0x20019986_f * (x**159) + 
            L0x20019988_f * (x**160) + L0x2001998a_f * (x**161) + 
            L0x2001998c_f * (x**162) + L0x2001998e_f * (x**163) + 
            L0x20019990_f * (x**164) + L0x20019992_f * (x**165) + 
            L0x20019994_f * (x**166) + L0x20019996_f * (x**167) + 
            L0x20019998_f * (x**168) + L0x2001999a_f * (x**169) + 
            L0x2001999c_f * (x**170) + L0x2001999e_f * (x**171) + 
            L0x200199a0_f * (x**172) + L0x200199a2_f * (x**173) + 
            L0x200199a4_f * (x**174) + L0x200199a6_f * (x**175) + 
            L0x200199a8_f * (x**176) + L0x200199aa_f * (x**177) + 
            L0x200199ac_f * (x**178) + L0x200199ae_f * (x**179) + 
            L0x200199b0_f * (x**180) + L0x200199b2_f * (x**181) + 
            L0x200199b4_f * (x**182) + L0x200199b6_f * (x**183) + 
            L0x200199b8_f * (x**184) + L0x200199ba_f * (x**185) + 
            L0x200199bc_f * (x**186) + L0x200199be_f * (x**187) + 
            L0x200199c0_f * (x**188) + L0x200199c2_f * (x**189) + 
            L0x200199c4_f * (x**190) + L0x200199c6_f * (x**191) + 
            L0x200199c8_f * (x**192) + L0x200199ca_f * (x**193) + 
            L0x200199cc_f * (x**194) + L0x200199ce_f * (x**195) + 
            L0x200199d0_f * (x**196) + L0x200199d2_f * (x**197) + 
            L0x200199d4_f * (x**198) + L0x200199d6_f * (x**199) + 
            L0x200199d8_f * (x**200) + L0x200199da_f * (x**201) + 
            L0x200199dc_f * (x**202) + L0x200199de_f * (x**203) + 
            L0x200199e0_f * (x**204) + L0x200199e2_f * (x**205) + 
            L0x200199e4_f * (x**206) + L0x200199e6_f * (x**207) + 
            L0x200199e8_f * (x**208) + L0x200199ea_f * (x**209) + 
            L0x200199ec_f * (x**210) + L0x200199ee_f * (x**211) + 
            L0x200199f0_f * (x**212) + L0x200199f2_f * (x**213) + 
            L0x200199f4_f * (x**214) + L0x200199f6_f * (x**215) + 
            L0x200199f8_f * (x**216) + L0x200199fa_f * (x**217) + 
            L0x200199fc_f * (x**218) + L0x200199fe_f * (x**219) + 
            L0x20019a00_f * (x**220) + L0x20019a02_f * (x**221) + 
            L0x20019a04_f * (x**222) + L0x20019a06_f * (x**223) + 
            L0x20019a08_f * (x**224) + L0x20019a0a_f * (x**225) + 
            L0x20019a0c_f * (x**226) + L0x20019a0e_f * (x**227) + 
            L0x20019a10_f * (x**228) + L0x20019a12_f * (x**229) + 
            L0x20019a14_f * (x**230) + L0x20019a16_f * (x**231) + 
            L0x20019a18_f * (x**232) + L0x20019a1a_f * (x**233) + 
            L0x20019a1c_f * (x**234) + L0x20019a1e_f * (x**235) + 
            L0x20019a20_f * (x**236) + L0x20019a22_f * (x**237) + 
            L0x20019a24_f * (x**238) + L0x20019a26_f * (x**239) + 
            L0x20019a28_f * (x**240) + L0x20019a2a_f * (x**241) + 
            L0x20019a2c_f * (x**242) + L0x20019a2e_f * (x**243) + 
            L0x20019a30_f * (x**244) + L0x20019a32_f * (x**245) + 
            L0x20019a34_f * (x**246) + L0x20019a36_f * (x**247) + 
            L0x20019a38_f * (x**248) + L0x20019a3a_f * (x**249) + 
            L0x20019a3c_f * (x**250) + L0x20019a3e_f * (x**251) + 
            L0x20019a40_f * (x**252) + L0x20019a42_f * (x**253) + 
            L0x20019a44_f * (x**254) + L0x20019a46_f * (x**255)
          )
          [25570049, x**4 - y_0_19 * 2410120, y_0_19 - 1],
    (* inp_poly_20 *)
    eqmod (2**32) * (inp_poly_20 * inp_poly_20)
          (
            L0x20019848_f * (x**0) + L0x2001984a_f * (x**1) + 
            L0x2001984c_f * (x**2) + L0x2001984e_f * (x**3) + 
            L0x20019850_f * (x**4) + L0x20019852_f * (x**5) + 
            L0x20019854_f * (x**6) + L0x20019856_f * (x**7) + 
            L0x20019858_f * (x**8) + L0x2001985a_f * (x**9) + 
            L0x2001985c_f * (x**10) + L0x2001985e_f * (x**11) + 
            L0x20019860_f * (x**12) + L0x20019862_f * (x**13) + 
            L0x20019864_f * (x**14) + L0x20019866_f * (x**15) + 
            L0x20019868_f * (x**16) + L0x2001986a_f * (x**17) + 
            L0x2001986c_f * (x**18) + L0x2001986e_f * (x**19) + 
            L0x20019870_f * (x**20) + L0x20019872_f * (x**21) + 
            L0x20019874_f * (x**22) + L0x20019876_f * (x**23) + 
            L0x20019878_f * (x**24) + L0x2001987a_f * (x**25) + 
            L0x2001987c_f * (x**26) + L0x2001987e_f * (x**27) + 
            L0x20019880_f * (x**28) + L0x20019882_f * (x**29) + 
            L0x20019884_f * (x**30) + L0x20019886_f * (x**31) + 
            L0x20019888_f * (x**32) + L0x2001988a_f * (x**33) + 
            L0x2001988c_f * (x**34) + L0x2001988e_f * (x**35) + 
            L0x20019890_f * (x**36) + L0x20019892_f * (x**37) + 
            L0x20019894_f * (x**38) + L0x20019896_f * (x**39) + 
            L0x20019898_f * (x**40) + L0x2001989a_f * (x**41) + 
            L0x2001989c_f * (x**42) + L0x2001989e_f * (x**43) + 
            L0x200198a0_f * (x**44) + L0x200198a2_f * (x**45) + 
            L0x200198a4_f * (x**46) + L0x200198a6_f * (x**47) + 
            L0x200198a8_f * (x**48) + L0x200198aa_f * (x**49) + 
            L0x200198ac_f * (x**50) + L0x200198ae_f * (x**51) + 
            L0x200198b0_f * (x**52) + L0x200198b2_f * (x**53) + 
            L0x200198b4_f * (x**54) + L0x200198b6_f * (x**55) + 
            L0x200198b8_f * (x**56) + L0x200198ba_f * (x**57) + 
            L0x200198bc_f * (x**58) + L0x200198be_f * (x**59) + 
            L0x200198c0_f * (x**60) + L0x200198c2_f * (x**61) + 
            L0x200198c4_f * (x**62) + L0x200198c6_f * (x**63) + 
            L0x200198c8_f * (x**64) + L0x200198ca_f * (x**65) + 
            L0x200198cc_f * (x**66) + L0x200198ce_f * (x**67) + 
            L0x200198d0_f * (x**68) + L0x200198d2_f * (x**69) + 
            L0x200198d4_f * (x**70) + L0x200198d6_f * (x**71) + 
            L0x200198d8_f * (x**72) + L0x200198da_f * (x**73) + 
            L0x200198dc_f * (x**74) + L0x200198de_f * (x**75) + 
            L0x200198e0_f * (x**76) + L0x200198e2_f * (x**77) + 
            L0x200198e4_f * (x**78) + L0x200198e6_f * (x**79) + 
            L0x200198e8_f * (x**80) + L0x200198ea_f * (x**81) + 
            L0x200198ec_f * (x**82) + L0x200198ee_f * (x**83) + 
            L0x200198f0_f * (x**84) + L0x200198f2_f * (x**85) + 
            L0x200198f4_f * (x**86) + L0x200198f6_f * (x**87) + 
            L0x200198f8_f * (x**88) + L0x200198fa_f * (x**89) + 
            L0x200198fc_f * (x**90) + L0x200198fe_f * (x**91) + 
            L0x20019900_f * (x**92) + L0x20019902_f * (x**93) + 
            L0x20019904_f * (x**94) + L0x20019906_f * (x**95) + 
            L0x20019908_f * (x**96) + L0x2001990a_f * (x**97) + 
            L0x2001990c_f * (x**98) + L0x2001990e_f * (x**99) + 
            L0x20019910_f * (x**100) + L0x20019912_f * (x**101) + 
            L0x20019914_f * (x**102) + L0x20019916_f * (x**103) + 
            L0x20019918_f * (x**104) + L0x2001991a_f * (x**105) + 
            L0x2001991c_f * (x**106) + L0x2001991e_f * (x**107) + 
            L0x20019920_f * (x**108) + L0x20019922_f * (x**109) + 
            L0x20019924_f * (x**110) + L0x20019926_f * (x**111) + 
            L0x20019928_f * (x**112) + L0x2001992a_f * (x**113) + 
            L0x2001992c_f * (x**114) + L0x2001992e_f * (x**115) + 
            L0x20019930_f * (x**116) + L0x20019932_f * (x**117) + 
            L0x20019934_f * (x**118) + L0x20019936_f * (x**119) + 
            L0x20019938_f * (x**120) + L0x2001993a_f * (x**121) + 
            L0x2001993c_f * (x**122) + L0x2001993e_f * (x**123) + 
            L0x20019940_f * (x**124) + L0x20019942_f * (x**125) + 
            L0x20019944_f * (x**126) + L0x20019946_f * (x**127) + 
            L0x20019948_f * (x**128) + L0x2001994a_f * (x**129) + 
            L0x2001994c_f * (x**130) + L0x2001994e_f * (x**131) + 
            L0x20019950_f * (x**132) + L0x20019952_f * (x**133) + 
            L0x20019954_f * (x**134) + L0x20019956_f * (x**135) + 
            L0x20019958_f * (x**136) + L0x2001995a_f * (x**137) + 
            L0x2001995c_f * (x**138) + L0x2001995e_f * (x**139) + 
            L0x20019960_f * (x**140) + L0x20019962_f * (x**141) + 
            L0x20019964_f * (x**142) + L0x20019966_f * (x**143) + 
            L0x20019968_f * (x**144) + L0x2001996a_f * (x**145) + 
            L0x2001996c_f * (x**146) + L0x2001996e_f * (x**147) + 
            L0x20019970_f * (x**148) + L0x20019972_f * (x**149) + 
            L0x20019974_f * (x**150) + L0x20019976_f * (x**151) + 
            L0x20019978_f * (x**152) + L0x2001997a_f * (x**153) + 
            L0x2001997c_f * (x**154) + L0x2001997e_f * (x**155) + 
            L0x20019980_f * (x**156) + L0x20019982_f * (x**157) + 
            L0x20019984_f * (x**158) + L0x20019986_f * (x**159) + 
            L0x20019988_f * (x**160) + L0x2001998a_f * (x**161) + 
            L0x2001998c_f * (x**162) + L0x2001998e_f * (x**163) + 
            L0x20019990_f * (x**164) + L0x20019992_f * (x**165) + 
            L0x20019994_f * (x**166) + L0x20019996_f * (x**167) + 
            L0x20019998_f * (x**168) + L0x2001999a_f * (x**169) + 
            L0x2001999c_f * (x**170) + L0x2001999e_f * (x**171) + 
            L0x200199a0_f * (x**172) + L0x200199a2_f * (x**173) + 
            L0x200199a4_f * (x**174) + L0x200199a6_f * (x**175) + 
            L0x200199a8_f * (x**176) + L0x200199aa_f * (x**177) + 
            L0x200199ac_f * (x**178) + L0x200199ae_f * (x**179) + 
            L0x200199b0_f * (x**180) + L0x200199b2_f * (x**181) + 
            L0x200199b4_f * (x**182) + L0x200199b6_f * (x**183) + 
            L0x200199b8_f * (x**184) + L0x200199ba_f * (x**185) + 
            L0x200199bc_f * (x**186) + L0x200199be_f * (x**187) + 
            L0x200199c0_f * (x**188) + L0x200199c2_f * (x**189) + 
            L0x200199c4_f * (x**190) + L0x200199c6_f * (x**191) + 
            L0x200199c8_f * (x**192) + L0x200199ca_f * (x**193) + 
            L0x200199cc_f * (x**194) + L0x200199ce_f * (x**195) + 
            L0x200199d0_f * (x**196) + L0x200199d2_f * (x**197) + 
            L0x200199d4_f * (x**198) + L0x200199d6_f * (x**199) + 
            L0x200199d8_f * (x**200) + L0x200199da_f * (x**201) + 
            L0x200199dc_f * (x**202) + L0x200199de_f * (x**203) + 
            L0x200199e0_f * (x**204) + L0x200199e2_f * (x**205) + 
            L0x200199e4_f * (x**206) + L0x200199e6_f * (x**207) + 
            L0x200199e8_f * (x**208) + L0x200199ea_f * (x**209) + 
            L0x200199ec_f * (x**210) + L0x200199ee_f * (x**211) + 
            L0x200199f0_f * (x**212) + L0x200199f2_f * (x**213) + 
            L0x200199f4_f * (x**214) + L0x200199f6_f * (x**215) + 
            L0x200199f8_f * (x**216) + L0x200199fa_f * (x**217) + 
            L0x200199fc_f * (x**218) + L0x200199fe_f * (x**219) + 
            L0x20019a00_f * (x**220) + L0x20019a02_f * (x**221) + 
            L0x20019a04_f * (x**222) + L0x20019a06_f * (x**223) + 
            L0x20019a08_f * (x**224) + L0x20019a0a_f * (x**225) + 
            L0x20019a0c_f * (x**226) + L0x20019a0e_f * (x**227) + 
            L0x20019a10_f * (x**228) + L0x20019a12_f * (x**229) + 
            L0x20019a14_f * (x**230) + L0x20019a16_f * (x**231) + 
            L0x20019a18_f * (x**232) + L0x20019a1a_f * (x**233) + 
            L0x20019a1c_f * (x**234) + L0x20019a1e_f * (x**235) + 
            L0x20019a20_f * (x**236) + L0x20019a22_f * (x**237) + 
            L0x20019a24_f * (x**238) + L0x20019a26_f * (x**239) + 
            L0x20019a28_f * (x**240) + L0x20019a2a_f * (x**241) + 
            L0x20019a2c_f * (x**242) + L0x20019a2e_f * (x**243) + 
            L0x20019a30_f * (x**244) + L0x20019a32_f * (x**245) + 
            L0x20019a34_f * (x**246) + L0x20019a36_f * (x**247) + 
            L0x20019a38_f * (x**248) + L0x20019a3a_f * (x**249) + 
            L0x20019a3c_f * (x**250) + L0x20019a3e_f * (x**251) + 
            L0x20019a40_f * (x**252) + L0x20019a42_f * (x**253) + 
            L0x20019a44_f * (x**254) + L0x20019a46_f * (x**255)
          )
          [25570049, x**4 - y_0_20 * 23569609, y_0_20 - 1],
    (* inp_poly_21 *)
    eqmod (2**32) * (inp_poly_21 * inp_poly_21)
          (
            L0x20019848_f * (x**0) + L0x2001984a_f * (x**1) + 
            L0x2001984c_f * (x**2) + L0x2001984e_f * (x**3) + 
            L0x20019850_f * (x**4) + L0x20019852_f * (x**5) + 
            L0x20019854_f * (x**6) + L0x20019856_f * (x**7) + 
            L0x20019858_f * (x**8) + L0x2001985a_f * (x**9) + 
            L0x2001985c_f * (x**10) + L0x2001985e_f * (x**11) + 
            L0x20019860_f * (x**12) + L0x20019862_f * (x**13) + 
            L0x20019864_f * (x**14) + L0x20019866_f * (x**15) + 
            L0x20019868_f * (x**16) + L0x2001986a_f * (x**17) + 
            L0x2001986c_f * (x**18) + L0x2001986e_f * (x**19) + 
            L0x20019870_f * (x**20) + L0x20019872_f * (x**21) + 
            L0x20019874_f * (x**22) + L0x20019876_f * (x**23) + 
            L0x20019878_f * (x**24) + L0x2001987a_f * (x**25) + 
            L0x2001987c_f * (x**26) + L0x2001987e_f * (x**27) + 
            L0x20019880_f * (x**28) + L0x20019882_f * (x**29) + 
            L0x20019884_f * (x**30) + L0x20019886_f * (x**31) + 
            L0x20019888_f * (x**32) + L0x2001988a_f * (x**33) + 
            L0x2001988c_f * (x**34) + L0x2001988e_f * (x**35) + 
            L0x20019890_f * (x**36) + L0x20019892_f * (x**37) + 
            L0x20019894_f * (x**38) + L0x20019896_f * (x**39) + 
            L0x20019898_f * (x**40) + L0x2001989a_f * (x**41) + 
            L0x2001989c_f * (x**42) + L0x2001989e_f * (x**43) + 
            L0x200198a0_f * (x**44) + L0x200198a2_f * (x**45) + 
            L0x200198a4_f * (x**46) + L0x200198a6_f * (x**47) + 
            L0x200198a8_f * (x**48) + L0x200198aa_f * (x**49) + 
            L0x200198ac_f * (x**50) + L0x200198ae_f * (x**51) + 
            L0x200198b0_f * (x**52) + L0x200198b2_f * (x**53) + 
            L0x200198b4_f * (x**54) + L0x200198b6_f * (x**55) + 
            L0x200198b8_f * (x**56) + L0x200198ba_f * (x**57) + 
            L0x200198bc_f * (x**58) + L0x200198be_f * (x**59) + 
            L0x200198c0_f * (x**60) + L0x200198c2_f * (x**61) + 
            L0x200198c4_f * (x**62) + L0x200198c6_f * (x**63) + 
            L0x200198c8_f * (x**64) + L0x200198ca_f * (x**65) + 
            L0x200198cc_f * (x**66) + L0x200198ce_f * (x**67) + 
            L0x200198d0_f * (x**68) + L0x200198d2_f * (x**69) + 
            L0x200198d4_f * (x**70) + L0x200198d6_f * (x**71) + 
            L0x200198d8_f * (x**72) + L0x200198da_f * (x**73) + 
            L0x200198dc_f * (x**74) + L0x200198de_f * (x**75) + 
            L0x200198e0_f * (x**76) + L0x200198e2_f * (x**77) + 
            L0x200198e4_f * (x**78) + L0x200198e6_f * (x**79) + 
            L0x200198e8_f * (x**80) + L0x200198ea_f * (x**81) + 
            L0x200198ec_f * (x**82) + L0x200198ee_f * (x**83) + 
            L0x200198f0_f * (x**84) + L0x200198f2_f * (x**85) + 
            L0x200198f4_f * (x**86) + L0x200198f6_f * (x**87) + 
            L0x200198f8_f * (x**88) + L0x200198fa_f * (x**89) + 
            L0x200198fc_f * (x**90) + L0x200198fe_f * (x**91) + 
            L0x20019900_f * (x**92) + L0x20019902_f * (x**93) + 
            L0x20019904_f * (x**94) + L0x20019906_f * (x**95) + 
            L0x20019908_f * (x**96) + L0x2001990a_f * (x**97) + 
            L0x2001990c_f * (x**98) + L0x2001990e_f * (x**99) + 
            L0x20019910_f * (x**100) + L0x20019912_f * (x**101) + 
            L0x20019914_f * (x**102) + L0x20019916_f * (x**103) + 
            L0x20019918_f * (x**104) + L0x2001991a_f * (x**105) + 
            L0x2001991c_f * (x**106) + L0x2001991e_f * (x**107) + 
            L0x20019920_f * (x**108) + L0x20019922_f * (x**109) + 
            L0x20019924_f * (x**110) + L0x20019926_f * (x**111) + 
            L0x20019928_f * (x**112) + L0x2001992a_f * (x**113) + 
            L0x2001992c_f * (x**114) + L0x2001992e_f * (x**115) + 
            L0x20019930_f * (x**116) + L0x20019932_f * (x**117) + 
            L0x20019934_f * (x**118) + L0x20019936_f * (x**119) + 
            L0x20019938_f * (x**120) + L0x2001993a_f * (x**121) + 
            L0x2001993c_f * (x**122) + L0x2001993e_f * (x**123) + 
            L0x20019940_f * (x**124) + L0x20019942_f * (x**125) + 
            L0x20019944_f * (x**126) + L0x20019946_f * (x**127) + 
            L0x20019948_f * (x**128) + L0x2001994a_f * (x**129) + 
            L0x2001994c_f * (x**130) + L0x2001994e_f * (x**131) + 
            L0x20019950_f * (x**132) + L0x20019952_f * (x**133) + 
            L0x20019954_f * (x**134) + L0x20019956_f * (x**135) + 
            L0x20019958_f * (x**136) + L0x2001995a_f * (x**137) + 
            L0x2001995c_f * (x**138) + L0x2001995e_f * (x**139) + 
            L0x20019960_f * (x**140) + L0x20019962_f * (x**141) + 
            L0x20019964_f * (x**142) + L0x20019966_f * (x**143) + 
            L0x20019968_f * (x**144) + L0x2001996a_f * (x**145) + 
            L0x2001996c_f * (x**146) + L0x2001996e_f * (x**147) + 
            L0x20019970_f * (x**148) + L0x20019972_f * (x**149) + 
            L0x20019974_f * (x**150) + L0x20019976_f * (x**151) + 
            L0x20019978_f * (x**152) + L0x2001997a_f * (x**153) + 
            L0x2001997c_f * (x**154) + L0x2001997e_f * (x**155) + 
            L0x20019980_f * (x**156) + L0x20019982_f * (x**157) + 
            L0x20019984_f * (x**158) + L0x20019986_f * (x**159) + 
            L0x20019988_f * (x**160) + L0x2001998a_f * (x**161) + 
            L0x2001998c_f * (x**162) + L0x2001998e_f * (x**163) + 
            L0x20019990_f * (x**164) + L0x20019992_f * (x**165) + 
            L0x20019994_f * (x**166) + L0x20019996_f * (x**167) + 
            L0x20019998_f * (x**168) + L0x2001999a_f * (x**169) + 
            L0x2001999c_f * (x**170) + L0x2001999e_f * (x**171) + 
            L0x200199a0_f * (x**172) + L0x200199a2_f * (x**173) + 
            L0x200199a4_f * (x**174) + L0x200199a6_f * (x**175) + 
            L0x200199a8_f * (x**176) + L0x200199aa_f * (x**177) + 
            L0x200199ac_f * (x**178) + L0x200199ae_f * (x**179) + 
            L0x200199b0_f * (x**180) + L0x200199b2_f * (x**181) + 
            L0x200199b4_f * (x**182) + L0x200199b6_f * (x**183) + 
            L0x200199b8_f * (x**184) + L0x200199ba_f * (x**185) + 
            L0x200199bc_f * (x**186) + L0x200199be_f * (x**187) + 
            L0x200199c0_f * (x**188) + L0x200199c2_f * (x**189) + 
            L0x200199c4_f * (x**190) + L0x200199c6_f * (x**191) + 
            L0x200199c8_f * (x**192) + L0x200199ca_f * (x**193) + 
            L0x200199cc_f * (x**194) + L0x200199ce_f * (x**195) + 
            L0x200199d0_f * (x**196) + L0x200199d2_f * (x**197) + 
            L0x200199d4_f * (x**198) + L0x200199d6_f * (x**199) + 
            L0x200199d8_f * (x**200) + L0x200199da_f * (x**201) + 
            L0x200199dc_f * (x**202) + L0x200199de_f * (x**203) + 
            L0x200199e0_f * (x**204) + L0x200199e2_f * (x**205) + 
            L0x200199e4_f * (x**206) + L0x200199e6_f * (x**207) + 
            L0x200199e8_f * (x**208) + L0x200199ea_f * (x**209) + 
            L0x200199ec_f * (x**210) + L0x200199ee_f * (x**211) + 
            L0x200199f0_f * (x**212) + L0x200199f2_f * (x**213) + 
            L0x200199f4_f * (x**214) + L0x200199f6_f * (x**215) + 
            L0x200199f8_f * (x**216) + L0x200199fa_f * (x**217) + 
            L0x200199fc_f * (x**218) + L0x200199fe_f * (x**219) + 
            L0x20019a00_f * (x**220) + L0x20019a02_f * (x**221) + 
            L0x20019a04_f * (x**222) + L0x20019a06_f * (x**223) + 
            L0x20019a08_f * (x**224) + L0x20019a0a_f * (x**225) + 
            L0x20019a0c_f * (x**226) + L0x20019a0e_f * (x**227) + 
            L0x20019a10_f * (x**228) + L0x20019a12_f * (x**229) + 
            L0x20019a14_f * (x**230) + L0x20019a16_f * (x**231) + 
            L0x20019a18_f * (x**232) + L0x20019a1a_f * (x**233) + 
            L0x20019a1c_f * (x**234) + L0x20019a1e_f * (x**235) + 
            L0x20019a20_f * (x**236) + L0x20019a22_f * (x**237) + 
            L0x20019a24_f * (x**238) + L0x20019a26_f * (x**239) + 
            L0x20019a28_f * (x**240) + L0x20019a2a_f * (x**241) + 
            L0x20019a2c_f * (x**242) + L0x20019a2e_f * (x**243) + 
            L0x20019a30_f * (x**244) + L0x20019a32_f * (x**245) + 
            L0x20019a34_f * (x**246) + L0x20019a36_f * (x**247) + 
            L0x20019a38_f * (x**248) + L0x20019a3a_f * (x**249) + 
            L0x20019a3c_f * (x**250) + L0x20019a3e_f * (x**251) + 
            L0x20019a40_f * (x**252) + L0x20019a42_f * (x**253) + 
            L0x20019a44_f * (x**254) + L0x20019a46_f * (x**255)
          )
          [25570049, x**4 - y_0_21 * 2000440, y_0_21 - 1],
    (* inp_poly_22 *)
    eqmod (2**32) * (inp_poly_22 * inp_poly_22)
          (
            L0x20019848_f * (x**0) + L0x2001984a_f * (x**1) + 
            L0x2001984c_f * (x**2) + L0x2001984e_f * (x**3) + 
            L0x20019850_f * (x**4) + L0x20019852_f * (x**5) + 
            L0x20019854_f * (x**6) + L0x20019856_f * (x**7) + 
            L0x20019858_f * (x**8) + L0x2001985a_f * (x**9) + 
            L0x2001985c_f * (x**10) + L0x2001985e_f * (x**11) + 
            L0x20019860_f * (x**12) + L0x20019862_f * (x**13) + 
            L0x20019864_f * (x**14) + L0x20019866_f * (x**15) + 
            L0x20019868_f * (x**16) + L0x2001986a_f * (x**17) + 
            L0x2001986c_f * (x**18) + L0x2001986e_f * (x**19) + 
            L0x20019870_f * (x**20) + L0x20019872_f * (x**21) + 
            L0x20019874_f * (x**22) + L0x20019876_f * (x**23) + 
            L0x20019878_f * (x**24) + L0x2001987a_f * (x**25) + 
            L0x2001987c_f * (x**26) + L0x2001987e_f * (x**27) + 
            L0x20019880_f * (x**28) + L0x20019882_f * (x**29) + 
            L0x20019884_f * (x**30) + L0x20019886_f * (x**31) + 
            L0x20019888_f * (x**32) + L0x2001988a_f * (x**33) + 
            L0x2001988c_f * (x**34) + L0x2001988e_f * (x**35) + 
            L0x20019890_f * (x**36) + L0x20019892_f * (x**37) + 
            L0x20019894_f * (x**38) + L0x20019896_f * (x**39) + 
            L0x20019898_f * (x**40) + L0x2001989a_f * (x**41) + 
            L0x2001989c_f * (x**42) + L0x2001989e_f * (x**43) + 
            L0x200198a0_f * (x**44) + L0x200198a2_f * (x**45) + 
            L0x200198a4_f * (x**46) + L0x200198a6_f * (x**47) + 
            L0x200198a8_f * (x**48) + L0x200198aa_f * (x**49) + 
            L0x200198ac_f * (x**50) + L0x200198ae_f * (x**51) + 
            L0x200198b0_f * (x**52) + L0x200198b2_f * (x**53) + 
            L0x200198b4_f * (x**54) + L0x200198b6_f * (x**55) + 
            L0x200198b8_f * (x**56) + L0x200198ba_f * (x**57) + 
            L0x200198bc_f * (x**58) + L0x200198be_f * (x**59) + 
            L0x200198c0_f * (x**60) + L0x200198c2_f * (x**61) + 
            L0x200198c4_f * (x**62) + L0x200198c6_f * (x**63) + 
            L0x200198c8_f * (x**64) + L0x200198ca_f * (x**65) + 
            L0x200198cc_f * (x**66) + L0x200198ce_f * (x**67) + 
            L0x200198d0_f * (x**68) + L0x200198d2_f * (x**69) + 
            L0x200198d4_f * (x**70) + L0x200198d6_f * (x**71) + 
            L0x200198d8_f * (x**72) + L0x200198da_f * (x**73) + 
            L0x200198dc_f * (x**74) + L0x200198de_f * (x**75) + 
            L0x200198e0_f * (x**76) + L0x200198e2_f * (x**77) + 
            L0x200198e4_f * (x**78) + L0x200198e6_f * (x**79) + 
            L0x200198e8_f * (x**80) + L0x200198ea_f * (x**81) + 
            L0x200198ec_f * (x**82) + L0x200198ee_f * (x**83) + 
            L0x200198f0_f * (x**84) + L0x200198f2_f * (x**85) + 
            L0x200198f4_f * (x**86) + L0x200198f6_f * (x**87) + 
            L0x200198f8_f * (x**88) + L0x200198fa_f * (x**89) + 
            L0x200198fc_f * (x**90) + L0x200198fe_f * (x**91) + 
            L0x20019900_f * (x**92) + L0x20019902_f * (x**93) + 
            L0x20019904_f * (x**94) + L0x20019906_f * (x**95) + 
            L0x20019908_f * (x**96) + L0x2001990a_f * (x**97) + 
            L0x2001990c_f * (x**98) + L0x2001990e_f * (x**99) + 
            L0x20019910_f * (x**100) + L0x20019912_f * (x**101) + 
            L0x20019914_f * (x**102) + L0x20019916_f * (x**103) + 
            L0x20019918_f * (x**104) + L0x2001991a_f * (x**105) + 
            L0x2001991c_f * (x**106) + L0x2001991e_f * (x**107) + 
            L0x20019920_f * (x**108) + L0x20019922_f * (x**109) + 
            L0x20019924_f * (x**110) + L0x20019926_f * (x**111) + 
            L0x20019928_f * (x**112) + L0x2001992a_f * (x**113) + 
            L0x2001992c_f * (x**114) + L0x2001992e_f * (x**115) + 
            L0x20019930_f * (x**116) + L0x20019932_f * (x**117) + 
            L0x20019934_f * (x**118) + L0x20019936_f * (x**119) + 
            L0x20019938_f * (x**120) + L0x2001993a_f * (x**121) + 
            L0x2001993c_f * (x**122) + L0x2001993e_f * (x**123) + 
            L0x20019940_f * (x**124) + L0x20019942_f * (x**125) + 
            L0x20019944_f * (x**126) + L0x20019946_f * (x**127) + 
            L0x20019948_f * (x**128) + L0x2001994a_f * (x**129) + 
            L0x2001994c_f * (x**130) + L0x2001994e_f * (x**131) + 
            L0x20019950_f * (x**132) + L0x20019952_f * (x**133) + 
            L0x20019954_f * (x**134) + L0x20019956_f * (x**135) + 
            L0x20019958_f * (x**136) + L0x2001995a_f * (x**137) + 
            L0x2001995c_f * (x**138) + L0x2001995e_f * (x**139) + 
            L0x20019960_f * (x**140) + L0x20019962_f * (x**141) + 
            L0x20019964_f * (x**142) + L0x20019966_f * (x**143) + 
            L0x20019968_f * (x**144) + L0x2001996a_f * (x**145) + 
            L0x2001996c_f * (x**146) + L0x2001996e_f * (x**147) + 
            L0x20019970_f * (x**148) + L0x20019972_f * (x**149) + 
            L0x20019974_f * (x**150) + L0x20019976_f * (x**151) + 
            L0x20019978_f * (x**152) + L0x2001997a_f * (x**153) + 
            L0x2001997c_f * (x**154) + L0x2001997e_f * (x**155) + 
            L0x20019980_f * (x**156) + L0x20019982_f * (x**157) + 
            L0x20019984_f * (x**158) + L0x20019986_f * (x**159) + 
            L0x20019988_f * (x**160) + L0x2001998a_f * (x**161) + 
            L0x2001998c_f * (x**162) + L0x2001998e_f * (x**163) + 
            L0x20019990_f * (x**164) + L0x20019992_f * (x**165) + 
            L0x20019994_f * (x**166) + L0x20019996_f * (x**167) + 
            L0x20019998_f * (x**168) + L0x2001999a_f * (x**169) + 
            L0x2001999c_f * (x**170) + L0x2001999e_f * (x**171) + 
            L0x200199a0_f * (x**172) + L0x200199a2_f * (x**173) + 
            L0x200199a4_f * (x**174) + L0x200199a6_f * (x**175) + 
            L0x200199a8_f * (x**176) + L0x200199aa_f * (x**177) + 
            L0x200199ac_f * (x**178) + L0x200199ae_f * (x**179) + 
            L0x200199b0_f * (x**180) + L0x200199b2_f * (x**181) + 
            L0x200199b4_f * (x**182) + L0x200199b6_f * (x**183) + 
            L0x200199b8_f * (x**184) + L0x200199ba_f * (x**185) + 
            L0x200199bc_f * (x**186) + L0x200199be_f * (x**187) + 
            L0x200199c0_f * (x**188) + L0x200199c2_f * (x**189) + 
            L0x200199c4_f * (x**190) + L0x200199c6_f * (x**191) + 
            L0x200199c8_f * (x**192) + L0x200199ca_f * (x**193) + 
            L0x200199cc_f * (x**194) + L0x200199ce_f * (x**195) + 
            L0x200199d0_f * (x**196) + L0x200199d2_f * (x**197) + 
            L0x200199d4_f * (x**198) + L0x200199d6_f * (x**199) + 
            L0x200199d8_f * (x**200) + L0x200199da_f * (x**201) + 
            L0x200199dc_f * (x**202) + L0x200199de_f * (x**203) + 
            L0x200199e0_f * (x**204) + L0x200199e2_f * (x**205) + 
            L0x200199e4_f * (x**206) + L0x200199e6_f * (x**207) + 
            L0x200199e8_f * (x**208) + L0x200199ea_f * (x**209) + 
            L0x200199ec_f * (x**210) + L0x200199ee_f * (x**211) + 
            L0x200199f0_f * (x**212) + L0x200199f2_f * (x**213) + 
            L0x200199f4_f * (x**214) + L0x200199f6_f * (x**215) + 
            L0x200199f8_f * (x**216) + L0x200199fa_f * (x**217) + 
            L0x200199fc_f * (x**218) + L0x200199fe_f * (x**219) + 
            L0x20019a00_f * (x**220) + L0x20019a02_f * (x**221) + 
            L0x20019a04_f * (x**222) + L0x20019a06_f * (x**223) + 
            L0x20019a08_f * (x**224) + L0x20019a0a_f * (x**225) + 
            L0x20019a0c_f * (x**226) + L0x20019a0e_f * (x**227) + 
            L0x20019a10_f * (x**228) + L0x20019a12_f * (x**229) + 
            L0x20019a14_f * (x**230) + L0x20019a16_f * (x**231) + 
            L0x20019a18_f * (x**232) + L0x20019a1a_f * (x**233) + 
            L0x20019a1c_f * (x**234) + L0x20019a1e_f * (x**235) + 
            L0x20019a20_f * (x**236) + L0x20019a22_f * (x**237) + 
            L0x20019a24_f * (x**238) + L0x20019a26_f * (x**239) + 
            L0x20019a28_f * (x**240) + L0x20019a2a_f * (x**241) + 
            L0x20019a2c_f * (x**242) + L0x20019a2e_f * (x**243) + 
            L0x20019a30_f * (x**244) + L0x20019a32_f * (x**245) + 
            L0x20019a34_f * (x**246) + L0x20019a36_f * (x**247) + 
            L0x20019a38_f * (x**248) + L0x20019a3a_f * (x**249) + 
            L0x20019a3c_f * (x**250) + L0x20019a3e_f * (x**251) + 
            L0x20019a40_f * (x**252) + L0x20019a42_f * (x**253) + 
            L0x20019a44_f * (x**254) + L0x20019a46_f * (x**255)
          )
          [25570049, x**4 - y_0_22 * 7617083, y_0_22 - 1],
    (* inp_poly_23 *)
    eqmod (2**32) * (inp_poly_23 * inp_poly_23)
          (
            L0x20019848_f * (x**0) + L0x2001984a_f * (x**1) + 
            L0x2001984c_f * (x**2) + L0x2001984e_f * (x**3) + 
            L0x20019850_f * (x**4) + L0x20019852_f * (x**5) + 
            L0x20019854_f * (x**6) + L0x20019856_f * (x**7) + 
            L0x20019858_f * (x**8) + L0x2001985a_f * (x**9) + 
            L0x2001985c_f * (x**10) + L0x2001985e_f * (x**11) + 
            L0x20019860_f * (x**12) + L0x20019862_f * (x**13) + 
            L0x20019864_f * (x**14) + L0x20019866_f * (x**15) + 
            L0x20019868_f * (x**16) + L0x2001986a_f * (x**17) + 
            L0x2001986c_f * (x**18) + L0x2001986e_f * (x**19) + 
            L0x20019870_f * (x**20) + L0x20019872_f * (x**21) + 
            L0x20019874_f * (x**22) + L0x20019876_f * (x**23) + 
            L0x20019878_f * (x**24) + L0x2001987a_f * (x**25) + 
            L0x2001987c_f * (x**26) + L0x2001987e_f * (x**27) + 
            L0x20019880_f * (x**28) + L0x20019882_f * (x**29) + 
            L0x20019884_f * (x**30) + L0x20019886_f * (x**31) + 
            L0x20019888_f * (x**32) + L0x2001988a_f * (x**33) + 
            L0x2001988c_f * (x**34) + L0x2001988e_f * (x**35) + 
            L0x20019890_f * (x**36) + L0x20019892_f * (x**37) + 
            L0x20019894_f * (x**38) + L0x20019896_f * (x**39) + 
            L0x20019898_f * (x**40) + L0x2001989a_f * (x**41) + 
            L0x2001989c_f * (x**42) + L0x2001989e_f * (x**43) + 
            L0x200198a0_f * (x**44) + L0x200198a2_f * (x**45) + 
            L0x200198a4_f * (x**46) + L0x200198a6_f * (x**47) + 
            L0x200198a8_f * (x**48) + L0x200198aa_f * (x**49) + 
            L0x200198ac_f * (x**50) + L0x200198ae_f * (x**51) + 
            L0x200198b0_f * (x**52) + L0x200198b2_f * (x**53) + 
            L0x200198b4_f * (x**54) + L0x200198b6_f * (x**55) + 
            L0x200198b8_f * (x**56) + L0x200198ba_f * (x**57) + 
            L0x200198bc_f * (x**58) + L0x200198be_f * (x**59) + 
            L0x200198c0_f * (x**60) + L0x200198c2_f * (x**61) + 
            L0x200198c4_f * (x**62) + L0x200198c6_f * (x**63) + 
            L0x200198c8_f * (x**64) + L0x200198ca_f * (x**65) + 
            L0x200198cc_f * (x**66) + L0x200198ce_f * (x**67) + 
            L0x200198d0_f * (x**68) + L0x200198d2_f * (x**69) + 
            L0x200198d4_f * (x**70) + L0x200198d6_f * (x**71) + 
            L0x200198d8_f * (x**72) + L0x200198da_f * (x**73) + 
            L0x200198dc_f * (x**74) + L0x200198de_f * (x**75) + 
            L0x200198e0_f * (x**76) + L0x200198e2_f * (x**77) + 
            L0x200198e4_f * (x**78) + L0x200198e6_f * (x**79) + 
            L0x200198e8_f * (x**80) + L0x200198ea_f * (x**81) + 
            L0x200198ec_f * (x**82) + L0x200198ee_f * (x**83) + 
            L0x200198f0_f * (x**84) + L0x200198f2_f * (x**85) + 
            L0x200198f4_f * (x**86) + L0x200198f6_f * (x**87) + 
            L0x200198f8_f * (x**88) + L0x200198fa_f * (x**89) + 
            L0x200198fc_f * (x**90) + L0x200198fe_f * (x**91) + 
            L0x20019900_f * (x**92) + L0x20019902_f * (x**93) + 
            L0x20019904_f * (x**94) + L0x20019906_f * (x**95) + 
            L0x20019908_f * (x**96) + L0x2001990a_f * (x**97) + 
            L0x2001990c_f * (x**98) + L0x2001990e_f * (x**99) + 
            L0x20019910_f * (x**100) + L0x20019912_f * (x**101) + 
            L0x20019914_f * (x**102) + L0x20019916_f * (x**103) + 
            L0x20019918_f * (x**104) + L0x2001991a_f * (x**105) + 
            L0x2001991c_f * (x**106) + L0x2001991e_f * (x**107) + 
            L0x20019920_f * (x**108) + L0x20019922_f * (x**109) + 
            L0x20019924_f * (x**110) + L0x20019926_f * (x**111) + 
            L0x20019928_f * (x**112) + L0x2001992a_f * (x**113) + 
            L0x2001992c_f * (x**114) + L0x2001992e_f * (x**115) + 
            L0x20019930_f * (x**116) + L0x20019932_f * (x**117) + 
            L0x20019934_f * (x**118) + L0x20019936_f * (x**119) + 
            L0x20019938_f * (x**120) + L0x2001993a_f * (x**121) + 
            L0x2001993c_f * (x**122) + L0x2001993e_f * (x**123) + 
            L0x20019940_f * (x**124) + L0x20019942_f * (x**125) + 
            L0x20019944_f * (x**126) + L0x20019946_f * (x**127) + 
            L0x20019948_f * (x**128) + L0x2001994a_f * (x**129) + 
            L0x2001994c_f * (x**130) + L0x2001994e_f * (x**131) + 
            L0x20019950_f * (x**132) + L0x20019952_f * (x**133) + 
            L0x20019954_f * (x**134) + L0x20019956_f * (x**135) + 
            L0x20019958_f * (x**136) + L0x2001995a_f * (x**137) + 
            L0x2001995c_f * (x**138) + L0x2001995e_f * (x**139) + 
            L0x20019960_f * (x**140) + L0x20019962_f * (x**141) + 
            L0x20019964_f * (x**142) + L0x20019966_f * (x**143) + 
            L0x20019968_f * (x**144) + L0x2001996a_f * (x**145) + 
            L0x2001996c_f * (x**146) + L0x2001996e_f * (x**147) + 
            L0x20019970_f * (x**148) + L0x20019972_f * (x**149) + 
            L0x20019974_f * (x**150) + L0x20019976_f * (x**151) + 
            L0x20019978_f * (x**152) + L0x2001997a_f * (x**153) + 
            L0x2001997c_f * (x**154) + L0x2001997e_f * (x**155) + 
            L0x20019980_f * (x**156) + L0x20019982_f * (x**157) + 
            L0x20019984_f * (x**158) + L0x20019986_f * (x**159) + 
            L0x20019988_f * (x**160) + L0x2001998a_f * (x**161) + 
            L0x2001998c_f * (x**162) + L0x2001998e_f * (x**163) + 
            L0x20019990_f * (x**164) + L0x20019992_f * (x**165) + 
            L0x20019994_f * (x**166) + L0x20019996_f * (x**167) + 
            L0x20019998_f * (x**168) + L0x2001999a_f * (x**169) + 
            L0x2001999c_f * (x**170) + L0x2001999e_f * (x**171) + 
            L0x200199a0_f * (x**172) + L0x200199a2_f * (x**173) + 
            L0x200199a4_f * (x**174) + L0x200199a6_f * (x**175) + 
            L0x200199a8_f * (x**176) + L0x200199aa_f * (x**177) + 
            L0x200199ac_f * (x**178) + L0x200199ae_f * (x**179) + 
            L0x200199b0_f * (x**180) + L0x200199b2_f * (x**181) + 
            L0x200199b4_f * (x**182) + L0x200199b6_f * (x**183) + 
            L0x200199b8_f * (x**184) + L0x200199ba_f * (x**185) + 
            L0x200199bc_f * (x**186) + L0x200199be_f * (x**187) + 
            L0x200199c0_f * (x**188) + L0x200199c2_f * (x**189) + 
            L0x200199c4_f * (x**190) + L0x200199c6_f * (x**191) + 
            L0x200199c8_f * (x**192) + L0x200199ca_f * (x**193) + 
            L0x200199cc_f * (x**194) + L0x200199ce_f * (x**195) + 
            L0x200199d0_f * (x**196) + L0x200199d2_f * (x**197) + 
            L0x200199d4_f * (x**198) + L0x200199d6_f * (x**199) + 
            L0x200199d8_f * (x**200) + L0x200199da_f * (x**201) + 
            L0x200199dc_f * (x**202) + L0x200199de_f * (x**203) + 
            L0x200199e0_f * (x**204) + L0x200199e2_f * (x**205) + 
            L0x200199e4_f * (x**206) + L0x200199e6_f * (x**207) + 
            L0x200199e8_f * (x**208) + L0x200199ea_f * (x**209) + 
            L0x200199ec_f * (x**210) + L0x200199ee_f * (x**211) + 
            L0x200199f0_f * (x**212) + L0x200199f2_f * (x**213) + 
            L0x200199f4_f * (x**214) + L0x200199f6_f * (x**215) + 
            L0x200199f8_f * (x**216) + L0x200199fa_f * (x**217) + 
            L0x200199fc_f * (x**218) + L0x200199fe_f * (x**219) + 
            L0x20019a00_f * (x**220) + L0x20019a02_f * (x**221) + 
            L0x20019a04_f * (x**222) + L0x20019a06_f * (x**223) + 
            L0x20019a08_f * (x**224) + L0x20019a0a_f * (x**225) + 
            L0x20019a0c_f * (x**226) + L0x20019a0e_f * (x**227) + 
            L0x20019a10_f * (x**228) + L0x20019a12_f * (x**229) + 
            L0x20019a14_f * (x**230) + L0x20019a16_f * (x**231) + 
            L0x20019a18_f * (x**232) + L0x20019a1a_f * (x**233) + 
            L0x20019a1c_f * (x**234) + L0x20019a1e_f * (x**235) + 
            L0x20019a20_f * (x**236) + L0x20019a22_f * (x**237) + 
            L0x20019a24_f * (x**238) + L0x20019a26_f * (x**239) + 
            L0x20019a28_f * (x**240) + L0x20019a2a_f * (x**241) + 
            L0x20019a2c_f * (x**242) + L0x20019a2e_f * (x**243) + 
            L0x20019a30_f * (x**244) + L0x20019a32_f * (x**245) + 
            L0x20019a34_f * (x**246) + L0x20019a36_f * (x**247) + 
            L0x20019a38_f * (x**248) + L0x20019a3a_f * (x**249) + 
            L0x20019a3c_f * (x**250) + L0x20019a3e_f * (x**251) + 
            L0x20019a40_f * (x**252) + L0x20019a42_f * (x**253) + 
            L0x20019a44_f * (x**254) + L0x20019a46_f * (x**255)
          )
          [25570049, x**4 - y_0_23 * 17952966, y_0_23 - 1]
  ] prove with [cuts [42, 54], all ghosts]
  &&
  true
;

cut (* 61 *)
  true && true;

(* slice 3 *)
cut (* 62 *)
  and [
    (* inp_poly_24 *)
    eqmod (2**32) * (inp_poly_24 * inp_poly_24)
          (
            L0x20019848_f * (x**0) + L0x2001984a_f * (x**1) + 
            L0x2001984c_f * (x**2) + L0x2001984e_f * (x**3) + 
            L0x20019850_f * (x**4) + L0x20019852_f * (x**5) + 
            L0x20019854_f * (x**6) + L0x20019856_f * (x**7) + 
            L0x20019858_f * (x**8) + L0x2001985a_f * (x**9) + 
            L0x2001985c_f * (x**10) + L0x2001985e_f * (x**11) + 
            L0x20019860_f * (x**12) + L0x20019862_f * (x**13) + 
            L0x20019864_f * (x**14) + L0x20019866_f * (x**15) + 
            L0x20019868_f * (x**16) + L0x2001986a_f * (x**17) + 
            L0x2001986c_f * (x**18) + L0x2001986e_f * (x**19) + 
            L0x20019870_f * (x**20) + L0x20019872_f * (x**21) + 
            L0x20019874_f * (x**22) + L0x20019876_f * (x**23) + 
            L0x20019878_f * (x**24) + L0x2001987a_f * (x**25) + 
            L0x2001987c_f * (x**26) + L0x2001987e_f * (x**27) + 
            L0x20019880_f * (x**28) + L0x20019882_f * (x**29) + 
            L0x20019884_f * (x**30) + L0x20019886_f * (x**31) + 
            L0x20019888_f * (x**32) + L0x2001988a_f * (x**33) + 
            L0x2001988c_f * (x**34) + L0x2001988e_f * (x**35) + 
            L0x20019890_f * (x**36) + L0x20019892_f * (x**37) + 
            L0x20019894_f * (x**38) + L0x20019896_f * (x**39) + 
            L0x20019898_f * (x**40) + L0x2001989a_f * (x**41) + 
            L0x2001989c_f * (x**42) + L0x2001989e_f * (x**43) + 
            L0x200198a0_f * (x**44) + L0x200198a2_f * (x**45) + 
            L0x200198a4_f * (x**46) + L0x200198a6_f * (x**47) + 
            L0x200198a8_f * (x**48) + L0x200198aa_f * (x**49) + 
            L0x200198ac_f * (x**50) + L0x200198ae_f * (x**51) + 
            L0x200198b0_f * (x**52) + L0x200198b2_f * (x**53) + 
            L0x200198b4_f * (x**54) + L0x200198b6_f * (x**55) + 
            L0x200198b8_f * (x**56) + L0x200198ba_f * (x**57) + 
            L0x200198bc_f * (x**58) + L0x200198be_f * (x**59) + 
            L0x200198c0_f * (x**60) + L0x200198c2_f * (x**61) + 
            L0x200198c4_f * (x**62) + L0x200198c6_f * (x**63) + 
            L0x200198c8_f * (x**64) + L0x200198ca_f * (x**65) + 
            L0x200198cc_f * (x**66) + L0x200198ce_f * (x**67) + 
            L0x200198d0_f * (x**68) + L0x200198d2_f * (x**69) + 
            L0x200198d4_f * (x**70) + L0x200198d6_f * (x**71) + 
            L0x200198d8_f * (x**72) + L0x200198da_f * (x**73) + 
            L0x200198dc_f * (x**74) + L0x200198de_f * (x**75) + 
            L0x200198e0_f * (x**76) + L0x200198e2_f * (x**77) + 
            L0x200198e4_f * (x**78) + L0x200198e6_f * (x**79) + 
            L0x200198e8_f * (x**80) + L0x200198ea_f * (x**81) + 
            L0x200198ec_f * (x**82) + L0x200198ee_f * (x**83) + 
            L0x200198f0_f * (x**84) + L0x200198f2_f * (x**85) + 
            L0x200198f4_f * (x**86) + L0x200198f6_f * (x**87) + 
            L0x200198f8_f * (x**88) + L0x200198fa_f * (x**89) + 
            L0x200198fc_f * (x**90) + L0x200198fe_f * (x**91) + 
            L0x20019900_f * (x**92) + L0x20019902_f * (x**93) + 
            L0x20019904_f * (x**94) + L0x20019906_f * (x**95) + 
            L0x20019908_f * (x**96) + L0x2001990a_f * (x**97) + 
            L0x2001990c_f * (x**98) + L0x2001990e_f * (x**99) + 
            L0x20019910_f * (x**100) + L0x20019912_f * (x**101) + 
            L0x20019914_f * (x**102) + L0x20019916_f * (x**103) + 
            L0x20019918_f * (x**104) + L0x2001991a_f * (x**105) + 
            L0x2001991c_f * (x**106) + L0x2001991e_f * (x**107) + 
            L0x20019920_f * (x**108) + L0x20019922_f * (x**109) + 
            L0x20019924_f * (x**110) + L0x20019926_f * (x**111) + 
            L0x20019928_f * (x**112) + L0x2001992a_f * (x**113) + 
            L0x2001992c_f * (x**114) + L0x2001992e_f * (x**115) + 
            L0x20019930_f * (x**116) + L0x20019932_f * (x**117) + 
            L0x20019934_f * (x**118) + L0x20019936_f * (x**119) + 
            L0x20019938_f * (x**120) + L0x2001993a_f * (x**121) + 
            L0x2001993c_f * (x**122) + L0x2001993e_f * (x**123) + 
            L0x20019940_f * (x**124) + L0x20019942_f * (x**125) + 
            L0x20019944_f * (x**126) + L0x20019946_f * (x**127) + 
            L0x20019948_f * (x**128) + L0x2001994a_f * (x**129) + 
            L0x2001994c_f * (x**130) + L0x2001994e_f * (x**131) + 
            L0x20019950_f * (x**132) + L0x20019952_f * (x**133) + 
            L0x20019954_f * (x**134) + L0x20019956_f * (x**135) + 
            L0x20019958_f * (x**136) + L0x2001995a_f * (x**137) + 
            L0x2001995c_f * (x**138) + L0x2001995e_f * (x**139) + 
            L0x20019960_f * (x**140) + L0x20019962_f * (x**141) + 
            L0x20019964_f * (x**142) + L0x20019966_f * (x**143) + 
            L0x20019968_f * (x**144) + L0x2001996a_f * (x**145) + 
            L0x2001996c_f * (x**146) + L0x2001996e_f * (x**147) + 
            L0x20019970_f * (x**148) + L0x20019972_f * (x**149) + 
            L0x20019974_f * (x**150) + L0x20019976_f * (x**151) + 
            L0x20019978_f * (x**152) + L0x2001997a_f * (x**153) + 
            L0x2001997c_f * (x**154) + L0x2001997e_f * (x**155) + 
            L0x20019980_f * (x**156) + L0x20019982_f * (x**157) + 
            L0x20019984_f * (x**158) + L0x20019986_f * (x**159) + 
            L0x20019988_f * (x**160) + L0x2001998a_f * (x**161) + 
            L0x2001998c_f * (x**162) + L0x2001998e_f * (x**163) + 
            L0x20019990_f * (x**164) + L0x20019992_f * (x**165) + 
            L0x20019994_f * (x**166) + L0x20019996_f * (x**167) + 
            L0x20019998_f * (x**168) + L0x2001999a_f * (x**169) + 
            L0x2001999c_f * (x**170) + L0x2001999e_f * (x**171) + 
            L0x200199a0_f * (x**172) + L0x200199a2_f * (x**173) + 
            L0x200199a4_f * (x**174) + L0x200199a6_f * (x**175) + 
            L0x200199a8_f * (x**176) + L0x200199aa_f * (x**177) + 
            L0x200199ac_f * (x**178) + L0x200199ae_f * (x**179) + 
            L0x200199b0_f * (x**180) + L0x200199b2_f * (x**181) + 
            L0x200199b4_f * (x**182) + L0x200199b6_f * (x**183) + 
            L0x200199b8_f * (x**184) + L0x200199ba_f * (x**185) + 
            L0x200199bc_f * (x**186) + L0x200199be_f * (x**187) + 
            L0x200199c0_f * (x**188) + L0x200199c2_f * (x**189) + 
            L0x200199c4_f * (x**190) + L0x200199c6_f * (x**191) + 
            L0x200199c8_f * (x**192) + L0x200199ca_f * (x**193) + 
            L0x200199cc_f * (x**194) + L0x200199ce_f * (x**195) + 
            L0x200199d0_f * (x**196) + L0x200199d2_f * (x**197) + 
            L0x200199d4_f * (x**198) + L0x200199d6_f * (x**199) + 
            L0x200199d8_f * (x**200) + L0x200199da_f * (x**201) + 
            L0x200199dc_f * (x**202) + L0x200199de_f * (x**203) + 
            L0x200199e0_f * (x**204) + L0x200199e2_f * (x**205) + 
            L0x200199e4_f * (x**206) + L0x200199e6_f * (x**207) + 
            L0x200199e8_f * (x**208) + L0x200199ea_f * (x**209) + 
            L0x200199ec_f * (x**210) + L0x200199ee_f * (x**211) + 
            L0x200199f0_f * (x**212) + L0x200199f2_f * (x**213) + 
            L0x200199f4_f * (x**214) + L0x200199f6_f * (x**215) + 
            L0x200199f8_f * (x**216) + L0x200199fa_f * (x**217) + 
            L0x200199fc_f * (x**218) + L0x200199fe_f * (x**219) + 
            L0x20019a00_f * (x**220) + L0x20019a02_f * (x**221) + 
            L0x20019a04_f * (x**222) + L0x20019a06_f * (x**223) + 
            L0x20019a08_f * (x**224) + L0x20019a0a_f * (x**225) + 
            L0x20019a0c_f * (x**226) + L0x20019a0e_f * (x**227) + 
            L0x20019a10_f * (x**228) + L0x20019a12_f * (x**229) + 
            L0x20019a14_f * (x**230) + L0x20019a16_f * (x**231) + 
            L0x20019a18_f * (x**232) + L0x20019a1a_f * (x**233) + 
            L0x20019a1c_f * (x**234) + L0x20019a1e_f * (x**235) + 
            L0x20019a20_f * (x**236) + L0x20019a22_f * (x**237) + 
            L0x20019a24_f * (x**238) + L0x20019a26_f * (x**239) + 
            L0x20019a28_f * (x**240) + L0x20019a2a_f * (x**241) + 
            L0x20019a2c_f * (x**242) + L0x20019a2e_f * (x**243) + 
            L0x20019a30_f * (x**244) + L0x20019a32_f * (x**245) + 
            L0x20019a34_f * (x**246) + L0x20019a36_f * (x**247) + 
            L0x20019a38_f * (x**248) + L0x20019a3a_f * (x**249) + 
            L0x20019a3c_f * (x**250) + L0x20019a3e_f * (x**251) + 
            L0x20019a40_f * (x**252) + L0x20019a42_f * (x**253) + 
            L0x20019a44_f * (x**254) + L0x20019a46_f * (x**255)
          )
          [25570049, x**4 - y_0_24 * 24859920, y_0_24 - 1],
    (* inp_poly_25 *)
    eqmod (2**32) * (inp_poly_25 * inp_poly_25)
          (
            L0x20019848_f * (x**0) + L0x2001984a_f * (x**1) + 
            L0x2001984c_f * (x**2) + L0x2001984e_f * (x**3) + 
            L0x20019850_f * (x**4) + L0x20019852_f * (x**5) + 
            L0x20019854_f * (x**6) + L0x20019856_f * (x**7) + 
            L0x20019858_f * (x**8) + L0x2001985a_f * (x**9) + 
            L0x2001985c_f * (x**10) + L0x2001985e_f * (x**11) + 
            L0x20019860_f * (x**12) + L0x20019862_f * (x**13) + 
            L0x20019864_f * (x**14) + L0x20019866_f * (x**15) + 
            L0x20019868_f * (x**16) + L0x2001986a_f * (x**17) + 
            L0x2001986c_f * (x**18) + L0x2001986e_f * (x**19) + 
            L0x20019870_f * (x**20) + L0x20019872_f * (x**21) + 
            L0x20019874_f * (x**22) + L0x20019876_f * (x**23) + 
            L0x20019878_f * (x**24) + L0x2001987a_f * (x**25) + 
            L0x2001987c_f * (x**26) + L0x2001987e_f * (x**27) + 
            L0x20019880_f * (x**28) + L0x20019882_f * (x**29) + 
            L0x20019884_f * (x**30) + L0x20019886_f * (x**31) + 
            L0x20019888_f * (x**32) + L0x2001988a_f * (x**33) + 
            L0x2001988c_f * (x**34) + L0x2001988e_f * (x**35) + 
            L0x20019890_f * (x**36) + L0x20019892_f * (x**37) + 
            L0x20019894_f * (x**38) + L0x20019896_f * (x**39) + 
            L0x20019898_f * (x**40) + L0x2001989a_f * (x**41) + 
            L0x2001989c_f * (x**42) + L0x2001989e_f * (x**43) + 
            L0x200198a0_f * (x**44) + L0x200198a2_f * (x**45) + 
            L0x200198a4_f * (x**46) + L0x200198a6_f * (x**47) + 
            L0x200198a8_f * (x**48) + L0x200198aa_f * (x**49) + 
            L0x200198ac_f * (x**50) + L0x200198ae_f * (x**51) + 
            L0x200198b0_f * (x**52) + L0x200198b2_f * (x**53) + 
            L0x200198b4_f * (x**54) + L0x200198b6_f * (x**55) + 
            L0x200198b8_f * (x**56) + L0x200198ba_f * (x**57) + 
            L0x200198bc_f * (x**58) + L0x200198be_f * (x**59) + 
            L0x200198c0_f * (x**60) + L0x200198c2_f * (x**61) + 
            L0x200198c4_f * (x**62) + L0x200198c6_f * (x**63) + 
            L0x200198c8_f * (x**64) + L0x200198ca_f * (x**65) + 
            L0x200198cc_f * (x**66) + L0x200198ce_f * (x**67) + 
            L0x200198d0_f * (x**68) + L0x200198d2_f * (x**69) + 
            L0x200198d4_f * (x**70) + L0x200198d6_f * (x**71) + 
            L0x200198d8_f * (x**72) + L0x200198da_f * (x**73) + 
            L0x200198dc_f * (x**74) + L0x200198de_f * (x**75) + 
            L0x200198e0_f * (x**76) + L0x200198e2_f * (x**77) + 
            L0x200198e4_f * (x**78) + L0x200198e6_f * (x**79) + 
            L0x200198e8_f * (x**80) + L0x200198ea_f * (x**81) + 
            L0x200198ec_f * (x**82) + L0x200198ee_f * (x**83) + 
            L0x200198f0_f * (x**84) + L0x200198f2_f * (x**85) + 
            L0x200198f4_f * (x**86) + L0x200198f6_f * (x**87) + 
            L0x200198f8_f * (x**88) + L0x200198fa_f * (x**89) + 
            L0x200198fc_f * (x**90) + L0x200198fe_f * (x**91) + 
            L0x20019900_f * (x**92) + L0x20019902_f * (x**93) + 
            L0x20019904_f * (x**94) + L0x20019906_f * (x**95) + 
            L0x20019908_f * (x**96) + L0x2001990a_f * (x**97) + 
            L0x2001990c_f * (x**98) + L0x2001990e_f * (x**99) + 
            L0x20019910_f * (x**100) + L0x20019912_f * (x**101) + 
            L0x20019914_f * (x**102) + L0x20019916_f * (x**103) + 
            L0x20019918_f * (x**104) + L0x2001991a_f * (x**105) + 
            L0x2001991c_f * (x**106) + L0x2001991e_f * (x**107) + 
            L0x20019920_f * (x**108) + L0x20019922_f * (x**109) + 
            L0x20019924_f * (x**110) + L0x20019926_f * (x**111) + 
            L0x20019928_f * (x**112) + L0x2001992a_f * (x**113) + 
            L0x2001992c_f * (x**114) + L0x2001992e_f * (x**115) + 
            L0x20019930_f * (x**116) + L0x20019932_f * (x**117) + 
            L0x20019934_f * (x**118) + L0x20019936_f * (x**119) + 
            L0x20019938_f * (x**120) + L0x2001993a_f * (x**121) + 
            L0x2001993c_f * (x**122) + L0x2001993e_f * (x**123) + 
            L0x20019940_f * (x**124) + L0x20019942_f * (x**125) + 
            L0x20019944_f * (x**126) + L0x20019946_f * (x**127) + 
            L0x20019948_f * (x**128) + L0x2001994a_f * (x**129) + 
            L0x2001994c_f * (x**130) + L0x2001994e_f * (x**131) + 
            L0x20019950_f * (x**132) + L0x20019952_f * (x**133) + 
            L0x20019954_f * (x**134) + L0x20019956_f * (x**135) + 
            L0x20019958_f * (x**136) + L0x2001995a_f * (x**137) + 
            L0x2001995c_f * (x**138) + L0x2001995e_f * (x**139) + 
            L0x20019960_f * (x**140) + L0x20019962_f * (x**141) + 
            L0x20019964_f * (x**142) + L0x20019966_f * (x**143) + 
            L0x20019968_f * (x**144) + L0x2001996a_f * (x**145) + 
            L0x2001996c_f * (x**146) + L0x2001996e_f * (x**147) + 
            L0x20019970_f * (x**148) + L0x20019972_f * (x**149) + 
            L0x20019974_f * (x**150) + L0x20019976_f * (x**151) + 
            L0x20019978_f * (x**152) + L0x2001997a_f * (x**153) + 
            L0x2001997c_f * (x**154) + L0x2001997e_f * (x**155) + 
            L0x20019980_f * (x**156) + L0x20019982_f * (x**157) + 
            L0x20019984_f * (x**158) + L0x20019986_f * (x**159) + 
            L0x20019988_f * (x**160) + L0x2001998a_f * (x**161) + 
            L0x2001998c_f * (x**162) + L0x2001998e_f * (x**163) + 
            L0x20019990_f * (x**164) + L0x20019992_f * (x**165) + 
            L0x20019994_f * (x**166) + L0x20019996_f * (x**167) + 
            L0x20019998_f * (x**168) + L0x2001999a_f * (x**169) + 
            L0x2001999c_f * (x**170) + L0x2001999e_f * (x**171) + 
            L0x200199a0_f * (x**172) + L0x200199a2_f * (x**173) + 
            L0x200199a4_f * (x**174) + L0x200199a6_f * (x**175) + 
            L0x200199a8_f * (x**176) + L0x200199aa_f * (x**177) + 
            L0x200199ac_f * (x**178) + L0x200199ae_f * (x**179) + 
            L0x200199b0_f * (x**180) + L0x200199b2_f * (x**181) + 
            L0x200199b4_f * (x**182) + L0x200199b6_f * (x**183) + 
            L0x200199b8_f * (x**184) + L0x200199ba_f * (x**185) + 
            L0x200199bc_f * (x**186) + L0x200199be_f * (x**187) + 
            L0x200199c0_f * (x**188) + L0x200199c2_f * (x**189) + 
            L0x200199c4_f * (x**190) + L0x200199c6_f * (x**191) + 
            L0x200199c8_f * (x**192) + L0x200199ca_f * (x**193) + 
            L0x200199cc_f * (x**194) + L0x200199ce_f * (x**195) + 
            L0x200199d0_f * (x**196) + L0x200199d2_f * (x**197) + 
            L0x200199d4_f * (x**198) + L0x200199d6_f * (x**199) + 
            L0x200199d8_f * (x**200) + L0x200199da_f * (x**201) + 
            L0x200199dc_f * (x**202) + L0x200199de_f * (x**203) + 
            L0x200199e0_f * (x**204) + L0x200199e2_f * (x**205) + 
            L0x200199e4_f * (x**206) + L0x200199e6_f * (x**207) + 
            L0x200199e8_f * (x**208) + L0x200199ea_f * (x**209) + 
            L0x200199ec_f * (x**210) + L0x200199ee_f * (x**211) + 
            L0x200199f0_f * (x**212) + L0x200199f2_f * (x**213) + 
            L0x200199f4_f * (x**214) + L0x200199f6_f * (x**215) + 
            L0x200199f8_f * (x**216) + L0x200199fa_f * (x**217) + 
            L0x200199fc_f * (x**218) + L0x200199fe_f * (x**219) + 
            L0x20019a00_f * (x**220) + L0x20019a02_f * (x**221) + 
            L0x20019a04_f * (x**222) + L0x20019a06_f * (x**223) + 
            L0x20019a08_f * (x**224) + L0x20019a0a_f * (x**225) + 
            L0x20019a0c_f * (x**226) + L0x20019a0e_f * (x**227) + 
            L0x20019a10_f * (x**228) + L0x20019a12_f * (x**229) + 
            L0x20019a14_f * (x**230) + L0x20019a16_f * (x**231) + 
            L0x20019a18_f * (x**232) + L0x20019a1a_f * (x**233) + 
            L0x20019a1c_f * (x**234) + L0x20019a1e_f * (x**235) + 
            L0x20019a20_f * (x**236) + L0x20019a22_f * (x**237) + 
            L0x20019a24_f * (x**238) + L0x20019a26_f * (x**239) + 
            L0x20019a28_f * (x**240) + L0x20019a2a_f * (x**241) + 
            L0x20019a2c_f * (x**242) + L0x20019a2e_f * (x**243) + 
            L0x20019a30_f * (x**244) + L0x20019a32_f * (x**245) + 
            L0x20019a34_f * (x**246) + L0x20019a36_f * (x**247) + 
            L0x20019a38_f * (x**248) + L0x20019a3a_f * (x**249) + 
            L0x20019a3c_f * (x**250) + L0x20019a3e_f * (x**251) + 
            L0x20019a40_f * (x**252) + L0x20019a42_f * (x**253) + 
            L0x20019a44_f * (x**254) + L0x20019a46_f * (x**255)
          )
          [25570049, x**4 - y_0_25 * 710129, y_0_25 - 1],
    (* inp_poly_26 *)
    eqmod (2**32) * (inp_poly_26 * inp_poly_26)
          (
            L0x20019848_f * (x**0) + L0x2001984a_f * (x**1) + 
            L0x2001984c_f * (x**2) + L0x2001984e_f * (x**3) + 
            L0x20019850_f * (x**4) + L0x20019852_f * (x**5) + 
            L0x20019854_f * (x**6) + L0x20019856_f * (x**7) + 
            L0x20019858_f * (x**8) + L0x2001985a_f * (x**9) + 
            L0x2001985c_f * (x**10) + L0x2001985e_f * (x**11) + 
            L0x20019860_f * (x**12) + L0x20019862_f * (x**13) + 
            L0x20019864_f * (x**14) + L0x20019866_f * (x**15) + 
            L0x20019868_f * (x**16) + L0x2001986a_f * (x**17) + 
            L0x2001986c_f * (x**18) + L0x2001986e_f * (x**19) + 
            L0x20019870_f * (x**20) + L0x20019872_f * (x**21) + 
            L0x20019874_f * (x**22) + L0x20019876_f * (x**23) + 
            L0x20019878_f * (x**24) + L0x2001987a_f * (x**25) + 
            L0x2001987c_f * (x**26) + L0x2001987e_f * (x**27) + 
            L0x20019880_f * (x**28) + L0x20019882_f * (x**29) + 
            L0x20019884_f * (x**30) + L0x20019886_f * (x**31) + 
            L0x20019888_f * (x**32) + L0x2001988a_f * (x**33) + 
            L0x2001988c_f * (x**34) + L0x2001988e_f * (x**35) + 
            L0x20019890_f * (x**36) + L0x20019892_f * (x**37) + 
            L0x20019894_f * (x**38) + L0x20019896_f * (x**39) + 
            L0x20019898_f * (x**40) + L0x2001989a_f * (x**41) + 
            L0x2001989c_f * (x**42) + L0x2001989e_f * (x**43) + 
            L0x200198a0_f * (x**44) + L0x200198a2_f * (x**45) + 
            L0x200198a4_f * (x**46) + L0x200198a6_f * (x**47) + 
            L0x200198a8_f * (x**48) + L0x200198aa_f * (x**49) + 
            L0x200198ac_f * (x**50) + L0x200198ae_f * (x**51) + 
            L0x200198b0_f * (x**52) + L0x200198b2_f * (x**53) + 
            L0x200198b4_f * (x**54) + L0x200198b6_f * (x**55) + 
            L0x200198b8_f * (x**56) + L0x200198ba_f * (x**57) + 
            L0x200198bc_f * (x**58) + L0x200198be_f * (x**59) + 
            L0x200198c0_f * (x**60) + L0x200198c2_f * (x**61) + 
            L0x200198c4_f * (x**62) + L0x200198c6_f * (x**63) + 
            L0x200198c8_f * (x**64) + L0x200198ca_f * (x**65) + 
            L0x200198cc_f * (x**66) + L0x200198ce_f * (x**67) + 
            L0x200198d0_f * (x**68) + L0x200198d2_f * (x**69) + 
            L0x200198d4_f * (x**70) + L0x200198d6_f * (x**71) + 
            L0x200198d8_f * (x**72) + L0x200198da_f * (x**73) + 
            L0x200198dc_f * (x**74) + L0x200198de_f * (x**75) + 
            L0x200198e0_f * (x**76) + L0x200198e2_f * (x**77) + 
            L0x200198e4_f * (x**78) + L0x200198e6_f * (x**79) + 
            L0x200198e8_f * (x**80) + L0x200198ea_f * (x**81) + 
            L0x200198ec_f * (x**82) + L0x200198ee_f * (x**83) + 
            L0x200198f0_f * (x**84) + L0x200198f2_f * (x**85) + 
            L0x200198f4_f * (x**86) + L0x200198f6_f * (x**87) + 
            L0x200198f8_f * (x**88) + L0x200198fa_f * (x**89) + 
            L0x200198fc_f * (x**90) + L0x200198fe_f * (x**91) + 
            L0x20019900_f * (x**92) + L0x20019902_f * (x**93) + 
            L0x20019904_f * (x**94) + L0x20019906_f * (x**95) + 
            L0x20019908_f * (x**96) + L0x2001990a_f * (x**97) + 
            L0x2001990c_f * (x**98) + L0x2001990e_f * (x**99) + 
            L0x20019910_f * (x**100) + L0x20019912_f * (x**101) + 
            L0x20019914_f * (x**102) + L0x20019916_f * (x**103) + 
            L0x20019918_f * (x**104) + L0x2001991a_f * (x**105) + 
            L0x2001991c_f * (x**106) + L0x2001991e_f * (x**107) + 
            L0x20019920_f * (x**108) + L0x20019922_f * (x**109) + 
            L0x20019924_f * (x**110) + L0x20019926_f * (x**111) + 
            L0x20019928_f * (x**112) + L0x2001992a_f * (x**113) + 
            L0x2001992c_f * (x**114) + L0x2001992e_f * (x**115) + 
            L0x20019930_f * (x**116) + L0x20019932_f * (x**117) + 
            L0x20019934_f * (x**118) + L0x20019936_f * (x**119) + 
            L0x20019938_f * (x**120) + L0x2001993a_f * (x**121) + 
            L0x2001993c_f * (x**122) + L0x2001993e_f * (x**123) + 
            L0x20019940_f * (x**124) + L0x20019942_f * (x**125) + 
            L0x20019944_f * (x**126) + L0x20019946_f * (x**127) + 
            L0x20019948_f * (x**128) + L0x2001994a_f * (x**129) + 
            L0x2001994c_f * (x**130) + L0x2001994e_f * (x**131) + 
            L0x20019950_f * (x**132) + L0x20019952_f * (x**133) + 
            L0x20019954_f * (x**134) + L0x20019956_f * (x**135) + 
            L0x20019958_f * (x**136) + L0x2001995a_f * (x**137) + 
            L0x2001995c_f * (x**138) + L0x2001995e_f * (x**139) + 
            L0x20019960_f * (x**140) + L0x20019962_f * (x**141) + 
            L0x20019964_f * (x**142) + L0x20019966_f * (x**143) + 
            L0x20019968_f * (x**144) + L0x2001996a_f * (x**145) + 
            L0x2001996c_f * (x**146) + L0x2001996e_f * (x**147) + 
            L0x20019970_f * (x**148) + L0x20019972_f * (x**149) + 
            L0x20019974_f * (x**150) + L0x20019976_f * (x**151) + 
            L0x20019978_f * (x**152) + L0x2001997a_f * (x**153) + 
            L0x2001997c_f * (x**154) + L0x2001997e_f * (x**155) + 
            L0x20019980_f * (x**156) + L0x20019982_f * (x**157) + 
            L0x20019984_f * (x**158) + L0x20019986_f * (x**159) + 
            L0x20019988_f * (x**160) + L0x2001998a_f * (x**161) + 
            L0x2001998c_f * (x**162) + L0x2001998e_f * (x**163) + 
            L0x20019990_f * (x**164) + L0x20019992_f * (x**165) + 
            L0x20019994_f * (x**166) + L0x20019996_f * (x**167) + 
            L0x20019998_f * (x**168) + L0x2001999a_f * (x**169) + 
            L0x2001999c_f * (x**170) + L0x2001999e_f * (x**171) + 
            L0x200199a0_f * (x**172) + L0x200199a2_f * (x**173) + 
            L0x200199a4_f * (x**174) + L0x200199a6_f * (x**175) + 
            L0x200199a8_f * (x**176) + L0x200199aa_f * (x**177) + 
            L0x200199ac_f * (x**178) + L0x200199ae_f * (x**179) + 
            L0x200199b0_f * (x**180) + L0x200199b2_f * (x**181) + 
            L0x200199b4_f * (x**182) + L0x200199b6_f * (x**183) + 
            L0x200199b8_f * (x**184) + L0x200199ba_f * (x**185) + 
            L0x200199bc_f * (x**186) + L0x200199be_f * (x**187) + 
            L0x200199c0_f * (x**188) + L0x200199c2_f * (x**189) + 
            L0x200199c4_f * (x**190) + L0x200199c6_f * (x**191) + 
            L0x200199c8_f * (x**192) + L0x200199ca_f * (x**193) + 
            L0x200199cc_f * (x**194) + L0x200199ce_f * (x**195) + 
            L0x200199d0_f * (x**196) + L0x200199d2_f * (x**197) + 
            L0x200199d4_f * (x**198) + L0x200199d6_f * (x**199) + 
            L0x200199d8_f * (x**200) + L0x200199da_f * (x**201) + 
            L0x200199dc_f * (x**202) + L0x200199de_f * (x**203) + 
            L0x200199e0_f * (x**204) + L0x200199e2_f * (x**205) + 
            L0x200199e4_f * (x**206) + L0x200199e6_f * (x**207) + 
            L0x200199e8_f * (x**208) + L0x200199ea_f * (x**209) + 
            L0x200199ec_f * (x**210) + L0x200199ee_f * (x**211) + 
            L0x200199f0_f * (x**212) + L0x200199f2_f * (x**213) + 
            L0x200199f4_f * (x**214) + L0x200199f6_f * (x**215) + 
            L0x200199f8_f * (x**216) + L0x200199fa_f * (x**217) + 
            L0x200199fc_f * (x**218) + L0x200199fe_f * (x**219) + 
            L0x20019a00_f * (x**220) + L0x20019a02_f * (x**221) + 
            L0x20019a04_f * (x**222) + L0x20019a06_f * (x**223) + 
            L0x20019a08_f * (x**224) + L0x20019a0a_f * (x**225) + 
            L0x20019a0c_f * (x**226) + L0x20019a0e_f * (x**227) + 
            L0x20019a10_f * (x**228) + L0x20019a12_f * (x**229) + 
            L0x20019a14_f * (x**230) + L0x20019a16_f * (x**231) + 
            L0x20019a18_f * (x**232) + L0x20019a1a_f * (x**233) + 
            L0x20019a1c_f * (x**234) + L0x20019a1e_f * (x**235) + 
            L0x20019a20_f * (x**236) + L0x20019a22_f * (x**237) + 
            L0x20019a24_f * (x**238) + L0x20019a26_f * (x**239) + 
            L0x20019a28_f * (x**240) + L0x20019a2a_f * (x**241) + 
            L0x20019a2c_f * (x**242) + L0x20019a2e_f * (x**243) + 
            L0x20019a30_f * (x**244) + L0x20019a32_f * (x**245) + 
            L0x20019a34_f * (x**246) + L0x20019a36_f * (x**247) + 
            L0x20019a38_f * (x**248) + L0x20019a3a_f * (x**249) + 
            L0x20019a3c_f * (x**250) + L0x20019a3e_f * (x**251) + 
            L0x20019a40_f * (x**252) + L0x20019a42_f * (x**253) + 
            L0x20019a44_f * (x**254) + L0x20019a46_f * (x**255)
          )
          [25570049, x**4 - y_0_26 * 4519508, y_0_26 - 1],
    (* inp_poly_27 *)
    eqmod (2**32) * (inp_poly_27 * inp_poly_27)
          (
            L0x20019848_f * (x**0) + L0x2001984a_f * (x**1) + 
            L0x2001984c_f * (x**2) + L0x2001984e_f * (x**3) + 
            L0x20019850_f * (x**4) + L0x20019852_f * (x**5) + 
            L0x20019854_f * (x**6) + L0x20019856_f * (x**7) + 
            L0x20019858_f * (x**8) + L0x2001985a_f * (x**9) + 
            L0x2001985c_f * (x**10) + L0x2001985e_f * (x**11) + 
            L0x20019860_f * (x**12) + L0x20019862_f * (x**13) + 
            L0x20019864_f * (x**14) + L0x20019866_f * (x**15) + 
            L0x20019868_f * (x**16) + L0x2001986a_f * (x**17) + 
            L0x2001986c_f * (x**18) + L0x2001986e_f * (x**19) + 
            L0x20019870_f * (x**20) + L0x20019872_f * (x**21) + 
            L0x20019874_f * (x**22) + L0x20019876_f * (x**23) + 
            L0x20019878_f * (x**24) + L0x2001987a_f * (x**25) + 
            L0x2001987c_f * (x**26) + L0x2001987e_f * (x**27) + 
            L0x20019880_f * (x**28) + L0x20019882_f * (x**29) + 
            L0x20019884_f * (x**30) + L0x20019886_f * (x**31) + 
            L0x20019888_f * (x**32) + L0x2001988a_f * (x**33) + 
            L0x2001988c_f * (x**34) + L0x2001988e_f * (x**35) + 
            L0x20019890_f * (x**36) + L0x20019892_f * (x**37) + 
            L0x20019894_f * (x**38) + L0x20019896_f * (x**39) + 
            L0x20019898_f * (x**40) + L0x2001989a_f * (x**41) + 
            L0x2001989c_f * (x**42) + L0x2001989e_f * (x**43) + 
            L0x200198a0_f * (x**44) + L0x200198a2_f * (x**45) + 
            L0x200198a4_f * (x**46) + L0x200198a6_f * (x**47) + 
            L0x200198a8_f * (x**48) + L0x200198aa_f * (x**49) + 
            L0x200198ac_f * (x**50) + L0x200198ae_f * (x**51) + 
            L0x200198b0_f * (x**52) + L0x200198b2_f * (x**53) + 
            L0x200198b4_f * (x**54) + L0x200198b6_f * (x**55) + 
            L0x200198b8_f * (x**56) + L0x200198ba_f * (x**57) + 
            L0x200198bc_f * (x**58) + L0x200198be_f * (x**59) + 
            L0x200198c0_f * (x**60) + L0x200198c2_f * (x**61) + 
            L0x200198c4_f * (x**62) + L0x200198c6_f * (x**63) + 
            L0x200198c8_f * (x**64) + L0x200198ca_f * (x**65) + 
            L0x200198cc_f * (x**66) + L0x200198ce_f * (x**67) + 
            L0x200198d0_f * (x**68) + L0x200198d2_f * (x**69) + 
            L0x200198d4_f * (x**70) + L0x200198d6_f * (x**71) + 
            L0x200198d8_f * (x**72) + L0x200198da_f * (x**73) + 
            L0x200198dc_f * (x**74) + L0x200198de_f * (x**75) + 
            L0x200198e0_f * (x**76) + L0x200198e2_f * (x**77) + 
            L0x200198e4_f * (x**78) + L0x200198e6_f * (x**79) + 
            L0x200198e8_f * (x**80) + L0x200198ea_f * (x**81) + 
            L0x200198ec_f * (x**82) + L0x200198ee_f * (x**83) + 
            L0x200198f0_f * (x**84) + L0x200198f2_f * (x**85) + 
            L0x200198f4_f * (x**86) + L0x200198f6_f * (x**87) + 
            L0x200198f8_f * (x**88) + L0x200198fa_f * (x**89) + 
            L0x200198fc_f * (x**90) + L0x200198fe_f * (x**91) + 
            L0x20019900_f * (x**92) + L0x20019902_f * (x**93) + 
            L0x20019904_f * (x**94) + L0x20019906_f * (x**95) + 
            L0x20019908_f * (x**96) + L0x2001990a_f * (x**97) + 
            L0x2001990c_f * (x**98) + L0x2001990e_f * (x**99) + 
            L0x20019910_f * (x**100) + L0x20019912_f * (x**101) + 
            L0x20019914_f * (x**102) + L0x20019916_f * (x**103) + 
            L0x20019918_f * (x**104) + L0x2001991a_f * (x**105) + 
            L0x2001991c_f * (x**106) + L0x2001991e_f * (x**107) + 
            L0x20019920_f * (x**108) + L0x20019922_f * (x**109) + 
            L0x20019924_f * (x**110) + L0x20019926_f * (x**111) + 
            L0x20019928_f * (x**112) + L0x2001992a_f * (x**113) + 
            L0x2001992c_f * (x**114) + L0x2001992e_f * (x**115) + 
            L0x20019930_f * (x**116) + L0x20019932_f * (x**117) + 
            L0x20019934_f * (x**118) + L0x20019936_f * (x**119) + 
            L0x20019938_f * (x**120) + L0x2001993a_f * (x**121) + 
            L0x2001993c_f * (x**122) + L0x2001993e_f * (x**123) + 
            L0x20019940_f * (x**124) + L0x20019942_f * (x**125) + 
            L0x20019944_f * (x**126) + L0x20019946_f * (x**127) + 
            L0x20019948_f * (x**128) + L0x2001994a_f * (x**129) + 
            L0x2001994c_f * (x**130) + L0x2001994e_f * (x**131) + 
            L0x20019950_f * (x**132) + L0x20019952_f * (x**133) + 
            L0x20019954_f * (x**134) + L0x20019956_f * (x**135) + 
            L0x20019958_f * (x**136) + L0x2001995a_f * (x**137) + 
            L0x2001995c_f * (x**138) + L0x2001995e_f * (x**139) + 
            L0x20019960_f * (x**140) + L0x20019962_f * (x**141) + 
            L0x20019964_f * (x**142) + L0x20019966_f * (x**143) + 
            L0x20019968_f * (x**144) + L0x2001996a_f * (x**145) + 
            L0x2001996c_f * (x**146) + L0x2001996e_f * (x**147) + 
            L0x20019970_f * (x**148) + L0x20019972_f * (x**149) + 
            L0x20019974_f * (x**150) + L0x20019976_f * (x**151) + 
            L0x20019978_f * (x**152) + L0x2001997a_f * (x**153) + 
            L0x2001997c_f * (x**154) + L0x2001997e_f * (x**155) + 
            L0x20019980_f * (x**156) + L0x20019982_f * (x**157) + 
            L0x20019984_f * (x**158) + L0x20019986_f * (x**159) + 
            L0x20019988_f * (x**160) + L0x2001998a_f * (x**161) + 
            L0x2001998c_f * (x**162) + L0x2001998e_f * (x**163) + 
            L0x20019990_f * (x**164) + L0x20019992_f * (x**165) + 
            L0x20019994_f * (x**166) + L0x20019996_f * (x**167) + 
            L0x20019998_f * (x**168) + L0x2001999a_f * (x**169) + 
            L0x2001999c_f * (x**170) + L0x2001999e_f * (x**171) + 
            L0x200199a0_f * (x**172) + L0x200199a2_f * (x**173) + 
            L0x200199a4_f * (x**174) + L0x200199a6_f * (x**175) + 
            L0x200199a8_f * (x**176) + L0x200199aa_f * (x**177) + 
            L0x200199ac_f * (x**178) + L0x200199ae_f * (x**179) + 
            L0x200199b0_f * (x**180) + L0x200199b2_f * (x**181) + 
            L0x200199b4_f * (x**182) + L0x200199b6_f * (x**183) + 
            L0x200199b8_f * (x**184) + L0x200199ba_f * (x**185) + 
            L0x200199bc_f * (x**186) + L0x200199be_f * (x**187) + 
            L0x200199c0_f * (x**188) + L0x200199c2_f * (x**189) + 
            L0x200199c4_f * (x**190) + L0x200199c6_f * (x**191) + 
            L0x200199c8_f * (x**192) + L0x200199ca_f * (x**193) + 
            L0x200199cc_f * (x**194) + L0x200199ce_f * (x**195) + 
            L0x200199d0_f * (x**196) + L0x200199d2_f * (x**197) + 
            L0x200199d4_f * (x**198) + L0x200199d6_f * (x**199) + 
            L0x200199d8_f * (x**200) + L0x200199da_f * (x**201) + 
            L0x200199dc_f * (x**202) + L0x200199de_f * (x**203) + 
            L0x200199e0_f * (x**204) + L0x200199e2_f * (x**205) + 
            L0x200199e4_f * (x**206) + L0x200199e6_f * (x**207) + 
            L0x200199e8_f * (x**208) + L0x200199ea_f * (x**209) + 
            L0x200199ec_f * (x**210) + L0x200199ee_f * (x**211) + 
            L0x200199f0_f * (x**212) + L0x200199f2_f * (x**213) + 
            L0x200199f4_f * (x**214) + L0x200199f6_f * (x**215) + 
            L0x200199f8_f * (x**216) + L0x200199fa_f * (x**217) + 
            L0x200199fc_f * (x**218) + L0x200199fe_f * (x**219) + 
            L0x20019a00_f * (x**220) + L0x20019a02_f * (x**221) + 
            L0x20019a04_f * (x**222) + L0x20019a06_f * (x**223) + 
            L0x20019a08_f * (x**224) + L0x20019a0a_f * (x**225) + 
            L0x20019a0c_f * (x**226) + L0x20019a0e_f * (x**227) + 
            L0x20019a10_f * (x**228) + L0x20019a12_f * (x**229) + 
            L0x20019a14_f * (x**230) + L0x20019a16_f * (x**231) + 
            L0x20019a18_f * (x**232) + L0x20019a1a_f * (x**233) + 
            L0x20019a1c_f * (x**234) + L0x20019a1e_f * (x**235) + 
            L0x20019a20_f * (x**236) + L0x20019a22_f * (x**237) + 
            L0x20019a24_f * (x**238) + L0x20019a26_f * (x**239) + 
            L0x20019a28_f * (x**240) + L0x20019a2a_f * (x**241) + 
            L0x20019a2c_f * (x**242) + L0x20019a2e_f * (x**243) + 
            L0x20019a30_f * (x**244) + L0x20019a32_f * (x**245) + 
            L0x20019a34_f * (x**246) + L0x20019a36_f * (x**247) + 
            L0x20019a38_f * (x**248) + L0x20019a3a_f * (x**249) + 
            L0x20019a3c_f * (x**250) + L0x20019a3e_f * (x**251) + 
            L0x20019a40_f * (x**252) + L0x20019a42_f * (x**253) + 
            L0x20019a44_f * (x**254) + L0x20019a46_f * (x**255)
          )
          [25570049, x**4 - y_0_27 * 21050541, y_0_27 - 1],
    (* inp_poly_28 *)
    eqmod (2**32) * (inp_poly_28 * inp_poly_28)
          (
            L0x20019848_f * (x**0) + L0x2001984a_f * (x**1) + 
            L0x2001984c_f * (x**2) + L0x2001984e_f * (x**3) + 
            L0x20019850_f * (x**4) + L0x20019852_f * (x**5) + 
            L0x20019854_f * (x**6) + L0x20019856_f * (x**7) + 
            L0x20019858_f * (x**8) + L0x2001985a_f * (x**9) + 
            L0x2001985c_f * (x**10) + L0x2001985e_f * (x**11) + 
            L0x20019860_f * (x**12) + L0x20019862_f * (x**13) + 
            L0x20019864_f * (x**14) + L0x20019866_f * (x**15) + 
            L0x20019868_f * (x**16) + L0x2001986a_f * (x**17) + 
            L0x2001986c_f * (x**18) + L0x2001986e_f * (x**19) + 
            L0x20019870_f * (x**20) + L0x20019872_f * (x**21) + 
            L0x20019874_f * (x**22) + L0x20019876_f * (x**23) + 
            L0x20019878_f * (x**24) + L0x2001987a_f * (x**25) + 
            L0x2001987c_f * (x**26) + L0x2001987e_f * (x**27) + 
            L0x20019880_f * (x**28) + L0x20019882_f * (x**29) + 
            L0x20019884_f * (x**30) + L0x20019886_f * (x**31) + 
            L0x20019888_f * (x**32) + L0x2001988a_f * (x**33) + 
            L0x2001988c_f * (x**34) + L0x2001988e_f * (x**35) + 
            L0x20019890_f * (x**36) + L0x20019892_f * (x**37) + 
            L0x20019894_f * (x**38) + L0x20019896_f * (x**39) + 
            L0x20019898_f * (x**40) + L0x2001989a_f * (x**41) + 
            L0x2001989c_f * (x**42) + L0x2001989e_f * (x**43) + 
            L0x200198a0_f * (x**44) + L0x200198a2_f * (x**45) + 
            L0x200198a4_f * (x**46) + L0x200198a6_f * (x**47) + 
            L0x200198a8_f * (x**48) + L0x200198aa_f * (x**49) + 
            L0x200198ac_f * (x**50) + L0x200198ae_f * (x**51) + 
            L0x200198b0_f * (x**52) + L0x200198b2_f * (x**53) + 
            L0x200198b4_f * (x**54) + L0x200198b6_f * (x**55) + 
            L0x200198b8_f * (x**56) + L0x200198ba_f * (x**57) + 
            L0x200198bc_f * (x**58) + L0x200198be_f * (x**59) + 
            L0x200198c0_f * (x**60) + L0x200198c2_f * (x**61) + 
            L0x200198c4_f * (x**62) + L0x200198c6_f * (x**63) + 
            L0x200198c8_f * (x**64) + L0x200198ca_f * (x**65) + 
            L0x200198cc_f * (x**66) + L0x200198ce_f * (x**67) + 
            L0x200198d0_f * (x**68) + L0x200198d2_f * (x**69) + 
            L0x200198d4_f * (x**70) + L0x200198d6_f * (x**71) + 
            L0x200198d8_f * (x**72) + L0x200198da_f * (x**73) + 
            L0x200198dc_f * (x**74) + L0x200198de_f * (x**75) + 
            L0x200198e0_f * (x**76) + L0x200198e2_f * (x**77) + 
            L0x200198e4_f * (x**78) + L0x200198e6_f * (x**79) + 
            L0x200198e8_f * (x**80) + L0x200198ea_f * (x**81) + 
            L0x200198ec_f * (x**82) + L0x200198ee_f * (x**83) + 
            L0x200198f0_f * (x**84) + L0x200198f2_f * (x**85) + 
            L0x200198f4_f * (x**86) + L0x200198f6_f * (x**87) + 
            L0x200198f8_f * (x**88) + L0x200198fa_f * (x**89) + 
            L0x200198fc_f * (x**90) + L0x200198fe_f * (x**91) + 
            L0x20019900_f * (x**92) + L0x20019902_f * (x**93) + 
            L0x20019904_f * (x**94) + L0x20019906_f * (x**95) + 
            L0x20019908_f * (x**96) + L0x2001990a_f * (x**97) + 
            L0x2001990c_f * (x**98) + L0x2001990e_f * (x**99) + 
            L0x20019910_f * (x**100) + L0x20019912_f * (x**101) + 
            L0x20019914_f * (x**102) + L0x20019916_f * (x**103) + 
            L0x20019918_f * (x**104) + L0x2001991a_f * (x**105) + 
            L0x2001991c_f * (x**106) + L0x2001991e_f * (x**107) + 
            L0x20019920_f * (x**108) + L0x20019922_f * (x**109) + 
            L0x20019924_f * (x**110) + L0x20019926_f * (x**111) + 
            L0x20019928_f * (x**112) + L0x2001992a_f * (x**113) + 
            L0x2001992c_f * (x**114) + L0x2001992e_f * (x**115) + 
            L0x20019930_f * (x**116) + L0x20019932_f * (x**117) + 
            L0x20019934_f * (x**118) + L0x20019936_f * (x**119) + 
            L0x20019938_f * (x**120) + L0x2001993a_f * (x**121) + 
            L0x2001993c_f * (x**122) + L0x2001993e_f * (x**123) + 
            L0x20019940_f * (x**124) + L0x20019942_f * (x**125) + 
            L0x20019944_f * (x**126) + L0x20019946_f * (x**127) + 
            L0x20019948_f * (x**128) + L0x2001994a_f * (x**129) + 
            L0x2001994c_f * (x**130) + L0x2001994e_f * (x**131) + 
            L0x20019950_f * (x**132) + L0x20019952_f * (x**133) + 
            L0x20019954_f * (x**134) + L0x20019956_f * (x**135) + 
            L0x20019958_f * (x**136) + L0x2001995a_f * (x**137) + 
            L0x2001995c_f * (x**138) + L0x2001995e_f * (x**139) + 
            L0x20019960_f * (x**140) + L0x20019962_f * (x**141) + 
            L0x20019964_f * (x**142) + L0x20019966_f * (x**143) + 
            L0x20019968_f * (x**144) + L0x2001996a_f * (x**145) + 
            L0x2001996c_f * (x**146) + L0x2001996e_f * (x**147) + 
            L0x20019970_f * (x**148) + L0x20019972_f * (x**149) + 
            L0x20019974_f * (x**150) + L0x20019976_f * (x**151) + 
            L0x20019978_f * (x**152) + L0x2001997a_f * (x**153) + 
            L0x2001997c_f * (x**154) + L0x2001997e_f * (x**155) + 
            L0x20019980_f * (x**156) + L0x20019982_f * (x**157) + 
            L0x20019984_f * (x**158) + L0x20019986_f * (x**159) + 
            L0x20019988_f * (x**160) + L0x2001998a_f * (x**161) + 
            L0x2001998c_f * (x**162) + L0x2001998e_f * (x**163) + 
            L0x20019990_f * (x**164) + L0x20019992_f * (x**165) + 
            L0x20019994_f * (x**166) + L0x20019996_f * (x**167) + 
            L0x20019998_f * (x**168) + L0x2001999a_f * (x**169) + 
            L0x2001999c_f * (x**170) + L0x2001999e_f * (x**171) + 
            L0x200199a0_f * (x**172) + L0x200199a2_f * (x**173) + 
            L0x200199a4_f * (x**174) + L0x200199a6_f * (x**175) + 
            L0x200199a8_f * (x**176) + L0x200199aa_f * (x**177) + 
            L0x200199ac_f * (x**178) + L0x200199ae_f * (x**179) + 
            L0x200199b0_f * (x**180) + L0x200199b2_f * (x**181) + 
            L0x200199b4_f * (x**182) + L0x200199b6_f * (x**183) + 
            L0x200199b8_f * (x**184) + L0x200199ba_f * (x**185) + 
            L0x200199bc_f * (x**186) + L0x200199be_f * (x**187) + 
            L0x200199c0_f * (x**188) + L0x200199c2_f * (x**189) + 
            L0x200199c4_f * (x**190) + L0x200199c6_f * (x**191) + 
            L0x200199c8_f * (x**192) + L0x200199ca_f * (x**193) + 
            L0x200199cc_f * (x**194) + L0x200199ce_f * (x**195) + 
            L0x200199d0_f * (x**196) + L0x200199d2_f * (x**197) + 
            L0x200199d4_f * (x**198) + L0x200199d6_f * (x**199) + 
            L0x200199d8_f * (x**200) + L0x200199da_f * (x**201) + 
            L0x200199dc_f * (x**202) + L0x200199de_f * (x**203) + 
            L0x200199e0_f * (x**204) + L0x200199e2_f * (x**205) + 
            L0x200199e4_f * (x**206) + L0x200199e6_f * (x**207) + 
            L0x200199e8_f * (x**208) + L0x200199ea_f * (x**209) + 
            L0x200199ec_f * (x**210) + L0x200199ee_f * (x**211) + 
            L0x200199f0_f * (x**212) + L0x200199f2_f * (x**213) + 
            L0x200199f4_f * (x**214) + L0x200199f6_f * (x**215) + 
            L0x200199f8_f * (x**216) + L0x200199fa_f * (x**217) + 
            L0x200199fc_f * (x**218) + L0x200199fe_f * (x**219) + 
            L0x20019a00_f * (x**220) + L0x20019a02_f * (x**221) + 
            L0x20019a04_f * (x**222) + L0x20019a06_f * (x**223) + 
            L0x20019a08_f * (x**224) + L0x20019a0a_f * (x**225) + 
            L0x20019a0c_f * (x**226) + L0x20019a0e_f * (x**227) + 
            L0x20019a10_f * (x**228) + L0x20019a12_f * (x**229) + 
            L0x20019a14_f * (x**230) + L0x20019a16_f * (x**231) + 
            L0x20019a18_f * (x**232) + L0x20019a1a_f * (x**233) + 
            L0x20019a1c_f * (x**234) + L0x20019a1e_f * (x**235) + 
            L0x20019a20_f * (x**236) + L0x20019a22_f * (x**237) + 
            L0x20019a24_f * (x**238) + L0x20019a26_f * (x**239) + 
            L0x20019a28_f * (x**240) + L0x20019a2a_f * (x**241) + 
            L0x20019a2c_f * (x**242) + L0x20019a2e_f * (x**243) + 
            L0x20019a30_f * (x**244) + L0x20019a32_f * (x**245) + 
            L0x20019a34_f * (x**246) + L0x20019a36_f * (x**247) + 
            L0x20019a38_f * (x**248) + L0x20019a3a_f * (x**249) + 
            L0x20019a3c_f * (x**250) + L0x20019a3e_f * (x**251) + 
            L0x20019a40_f * (x**252) + L0x20019a42_f * (x**253) + 
            L0x20019a44_f * (x**254) + L0x20019a46_f * (x**255)
          )
          [25570049, x**4 - y_0_28 * 1712131, y_0_28 - 1],
    (* inp_poly_29 *)
    eqmod (2**32) * (inp_poly_29 * inp_poly_29)
          (
            L0x20019848_f * (x**0) + L0x2001984a_f * (x**1) + 
            L0x2001984c_f * (x**2) + L0x2001984e_f * (x**3) + 
            L0x20019850_f * (x**4) + L0x20019852_f * (x**5) + 
            L0x20019854_f * (x**6) + L0x20019856_f * (x**7) + 
            L0x20019858_f * (x**8) + L0x2001985a_f * (x**9) + 
            L0x2001985c_f * (x**10) + L0x2001985e_f * (x**11) + 
            L0x20019860_f * (x**12) + L0x20019862_f * (x**13) + 
            L0x20019864_f * (x**14) + L0x20019866_f * (x**15) + 
            L0x20019868_f * (x**16) + L0x2001986a_f * (x**17) + 
            L0x2001986c_f * (x**18) + L0x2001986e_f * (x**19) + 
            L0x20019870_f * (x**20) + L0x20019872_f * (x**21) + 
            L0x20019874_f * (x**22) + L0x20019876_f * (x**23) + 
            L0x20019878_f * (x**24) + L0x2001987a_f * (x**25) + 
            L0x2001987c_f * (x**26) + L0x2001987e_f * (x**27) + 
            L0x20019880_f * (x**28) + L0x20019882_f * (x**29) + 
            L0x20019884_f * (x**30) + L0x20019886_f * (x**31) + 
            L0x20019888_f * (x**32) + L0x2001988a_f * (x**33) + 
            L0x2001988c_f * (x**34) + L0x2001988e_f * (x**35) + 
            L0x20019890_f * (x**36) + L0x20019892_f * (x**37) + 
            L0x20019894_f * (x**38) + L0x20019896_f * (x**39) + 
            L0x20019898_f * (x**40) + L0x2001989a_f * (x**41) + 
            L0x2001989c_f * (x**42) + L0x2001989e_f * (x**43) + 
            L0x200198a0_f * (x**44) + L0x200198a2_f * (x**45) + 
            L0x200198a4_f * (x**46) + L0x200198a6_f * (x**47) + 
            L0x200198a8_f * (x**48) + L0x200198aa_f * (x**49) + 
            L0x200198ac_f * (x**50) + L0x200198ae_f * (x**51) + 
            L0x200198b0_f * (x**52) + L0x200198b2_f * (x**53) + 
            L0x200198b4_f * (x**54) + L0x200198b6_f * (x**55) + 
            L0x200198b8_f * (x**56) + L0x200198ba_f * (x**57) + 
            L0x200198bc_f * (x**58) + L0x200198be_f * (x**59) + 
            L0x200198c0_f * (x**60) + L0x200198c2_f * (x**61) + 
            L0x200198c4_f * (x**62) + L0x200198c6_f * (x**63) + 
            L0x200198c8_f * (x**64) + L0x200198ca_f * (x**65) + 
            L0x200198cc_f * (x**66) + L0x200198ce_f * (x**67) + 
            L0x200198d0_f * (x**68) + L0x200198d2_f * (x**69) + 
            L0x200198d4_f * (x**70) + L0x200198d6_f * (x**71) + 
            L0x200198d8_f * (x**72) + L0x200198da_f * (x**73) + 
            L0x200198dc_f * (x**74) + L0x200198de_f * (x**75) + 
            L0x200198e0_f * (x**76) + L0x200198e2_f * (x**77) + 
            L0x200198e4_f * (x**78) + L0x200198e6_f * (x**79) + 
            L0x200198e8_f * (x**80) + L0x200198ea_f * (x**81) + 
            L0x200198ec_f * (x**82) + L0x200198ee_f * (x**83) + 
            L0x200198f0_f * (x**84) + L0x200198f2_f * (x**85) + 
            L0x200198f4_f * (x**86) + L0x200198f6_f * (x**87) + 
            L0x200198f8_f * (x**88) + L0x200198fa_f * (x**89) + 
            L0x200198fc_f * (x**90) + L0x200198fe_f * (x**91) + 
            L0x20019900_f * (x**92) + L0x20019902_f * (x**93) + 
            L0x20019904_f * (x**94) + L0x20019906_f * (x**95) + 
            L0x20019908_f * (x**96) + L0x2001990a_f * (x**97) + 
            L0x2001990c_f * (x**98) + L0x2001990e_f * (x**99) + 
            L0x20019910_f * (x**100) + L0x20019912_f * (x**101) + 
            L0x20019914_f * (x**102) + L0x20019916_f * (x**103) + 
            L0x20019918_f * (x**104) + L0x2001991a_f * (x**105) + 
            L0x2001991c_f * (x**106) + L0x2001991e_f * (x**107) + 
            L0x20019920_f * (x**108) + L0x20019922_f * (x**109) + 
            L0x20019924_f * (x**110) + L0x20019926_f * (x**111) + 
            L0x20019928_f * (x**112) + L0x2001992a_f * (x**113) + 
            L0x2001992c_f * (x**114) + L0x2001992e_f * (x**115) + 
            L0x20019930_f * (x**116) + L0x20019932_f * (x**117) + 
            L0x20019934_f * (x**118) + L0x20019936_f * (x**119) + 
            L0x20019938_f * (x**120) + L0x2001993a_f * (x**121) + 
            L0x2001993c_f * (x**122) + L0x2001993e_f * (x**123) + 
            L0x20019940_f * (x**124) + L0x20019942_f * (x**125) + 
            L0x20019944_f * (x**126) + L0x20019946_f * (x**127) + 
            L0x20019948_f * (x**128) + L0x2001994a_f * (x**129) + 
            L0x2001994c_f * (x**130) + L0x2001994e_f * (x**131) + 
            L0x20019950_f * (x**132) + L0x20019952_f * (x**133) + 
            L0x20019954_f * (x**134) + L0x20019956_f * (x**135) + 
            L0x20019958_f * (x**136) + L0x2001995a_f * (x**137) + 
            L0x2001995c_f * (x**138) + L0x2001995e_f * (x**139) + 
            L0x20019960_f * (x**140) + L0x20019962_f * (x**141) + 
            L0x20019964_f * (x**142) + L0x20019966_f * (x**143) + 
            L0x20019968_f * (x**144) + L0x2001996a_f * (x**145) + 
            L0x2001996c_f * (x**146) + L0x2001996e_f * (x**147) + 
            L0x20019970_f * (x**148) + L0x20019972_f * (x**149) + 
            L0x20019974_f * (x**150) + L0x20019976_f * (x**151) + 
            L0x20019978_f * (x**152) + L0x2001997a_f * (x**153) + 
            L0x2001997c_f * (x**154) + L0x2001997e_f * (x**155) + 
            L0x20019980_f * (x**156) + L0x20019982_f * (x**157) + 
            L0x20019984_f * (x**158) + L0x20019986_f * (x**159) + 
            L0x20019988_f * (x**160) + L0x2001998a_f * (x**161) + 
            L0x2001998c_f * (x**162) + L0x2001998e_f * (x**163) + 
            L0x20019990_f * (x**164) + L0x20019992_f * (x**165) + 
            L0x20019994_f * (x**166) + L0x20019996_f * (x**167) + 
            L0x20019998_f * (x**168) + L0x2001999a_f * (x**169) + 
            L0x2001999c_f * (x**170) + L0x2001999e_f * (x**171) + 
            L0x200199a0_f * (x**172) + L0x200199a2_f * (x**173) + 
            L0x200199a4_f * (x**174) + L0x200199a6_f * (x**175) + 
            L0x200199a8_f * (x**176) + L0x200199aa_f * (x**177) + 
            L0x200199ac_f * (x**178) + L0x200199ae_f * (x**179) + 
            L0x200199b0_f * (x**180) + L0x200199b2_f * (x**181) + 
            L0x200199b4_f * (x**182) + L0x200199b6_f * (x**183) + 
            L0x200199b8_f * (x**184) + L0x200199ba_f * (x**185) + 
            L0x200199bc_f * (x**186) + L0x200199be_f * (x**187) + 
            L0x200199c0_f * (x**188) + L0x200199c2_f * (x**189) + 
            L0x200199c4_f * (x**190) + L0x200199c6_f * (x**191) + 
            L0x200199c8_f * (x**192) + L0x200199ca_f * (x**193) + 
            L0x200199cc_f * (x**194) + L0x200199ce_f * (x**195) + 
            L0x200199d0_f * (x**196) + L0x200199d2_f * (x**197) + 
            L0x200199d4_f * (x**198) + L0x200199d6_f * (x**199) + 
            L0x200199d8_f * (x**200) + L0x200199da_f * (x**201) + 
            L0x200199dc_f * (x**202) + L0x200199de_f * (x**203) + 
            L0x200199e0_f * (x**204) + L0x200199e2_f * (x**205) + 
            L0x200199e4_f * (x**206) + L0x200199e6_f * (x**207) + 
            L0x200199e8_f * (x**208) + L0x200199ea_f * (x**209) + 
            L0x200199ec_f * (x**210) + L0x200199ee_f * (x**211) + 
            L0x200199f0_f * (x**212) + L0x200199f2_f * (x**213) + 
            L0x200199f4_f * (x**214) + L0x200199f6_f * (x**215) + 
            L0x200199f8_f * (x**216) + L0x200199fa_f * (x**217) + 
            L0x200199fc_f * (x**218) + L0x200199fe_f * (x**219) + 
            L0x20019a00_f * (x**220) + L0x20019a02_f * (x**221) + 
            L0x20019a04_f * (x**222) + L0x20019a06_f * (x**223) + 
            L0x20019a08_f * (x**224) + L0x20019a0a_f * (x**225) + 
            L0x20019a0c_f * (x**226) + L0x20019a0e_f * (x**227) + 
            L0x20019a10_f * (x**228) + L0x20019a12_f * (x**229) + 
            L0x20019a14_f * (x**230) + L0x20019a16_f * (x**231) + 
            L0x20019a18_f * (x**232) + L0x20019a1a_f * (x**233) + 
            L0x20019a1c_f * (x**234) + L0x20019a1e_f * (x**235) + 
            L0x20019a20_f * (x**236) + L0x20019a22_f * (x**237) + 
            L0x20019a24_f * (x**238) + L0x20019a26_f * (x**239) + 
            L0x20019a28_f * (x**240) + L0x20019a2a_f * (x**241) + 
            L0x20019a2c_f * (x**242) + L0x20019a2e_f * (x**243) + 
            L0x20019a30_f * (x**244) + L0x20019a32_f * (x**245) + 
            L0x20019a34_f * (x**246) + L0x20019a36_f * (x**247) + 
            L0x20019a38_f * (x**248) + L0x20019a3a_f * (x**249) + 
            L0x20019a3c_f * (x**250) + L0x20019a3e_f * (x**251) + 
            L0x20019a40_f * (x**252) + L0x20019a42_f * (x**253) + 
            L0x20019a44_f * (x**254) + L0x20019a46_f * (x**255)
          )
          [25570049, x**4 - y_0_29 * 23857918, y_0_29 - 1],
    (* inp_poly_30 *)
    eqmod (2**32) * (inp_poly_30 * inp_poly_30)
          (
            L0x20019848_f * (x**0) + L0x2001984a_f * (x**1) + 
            L0x2001984c_f * (x**2) + L0x2001984e_f * (x**3) + 
            L0x20019850_f * (x**4) + L0x20019852_f * (x**5) + 
            L0x20019854_f * (x**6) + L0x20019856_f * (x**7) + 
            L0x20019858_f * (x**8) + L0x2001985a_f * (x**9) + 
            L0x2001985c_f * (x**10) + L0x2001985e_f * (x**11) + 
            L0x20019860_f * (x**12) + L0x20019862_f * (x**13) + 
            L0x20019864_f * (x**14) + L0x20019866_f * (x**15) + 
            L0x20019868_f * (x**16) + L0x2001986a_f * (x**17) + 
            L0x2001986c_f * (x**18) + L0x2001986e_f * (x**19) + 
            L0x20019870_f * (x**20) + L0x20019872_f * (x**21) + 
            L0x20019874_f * (x**22) + L0x20019876_f * (x**23) + 
            L0x20019878_f * (x**24) + L0x2001987a_f * (x**25) + 
            L0x2001987c_f * (x**26) + L0x2001987e_f * (x**27) + 
            L0x20019880_f * (x**28) + L0x20019882_f * (x**29) + 
            L0x20019884_f * (x**30) + L0x20019886_f * (x**31) + 
            L0x20019888_f * (x**32) + L0x2001988a_f * (x**33) + 
            L0x2001988c_f * (x**34) + L0x2001988e_f * (x**35) + 
            L0x20019890_f * (x**36) + L0x20019892_f * (x**37) + 
            L0x20019894_f * (x**38) + L0x20019896_f * (x**39) + 
            L0x20019898_f * (x**40) + L0x2001989a_f * (x**41) + 
            L0x2001989c_f * (x**42) + L0x2001989e_f * (x**43) + 
            L0x200198a0_f * (x**44) + L0x200198a2_f * (x**45) + 
            L0x200198a4_f * (x**46) + L0x200198a6_f * (x**47) + 
            L0x200198a8_f * (x**48) + L0x200198aa_f * (x**49) + 
            L0x200198ac_f * (x**50) + L0x200198ae_f * (x**51) + 
            L0x200198b0_f * (x**52) + L0x200198b2_f * (x**53) + 
            L0x200198b4_f * (x**54) + L0x200198b6_f * (x**55) + 
            L0x200198b8_f * (x**56) + L0x200198ba_f * (x**57) + 
            L0x200198bc_f * (x**58) + L0x200198be_f * (x**59) + 
            L0x200198c0_f * (x**60) + L0x200198c2_f * (x**61) + 
            L0x200198c4_f * (x**62) + L0x200198c6_f * (x**63) + 
            L0x200198c8_f * (x**64) + L0x200198ca_f * (x**65) + 
            L0x200198cc_f * (x**66) + L0x200198ce_f * (x**67) + 
            L0x200198d0_f * (x**68) + L0x200198d2_f * (x**69) + 
            L0x200198d4_f * (x**70) + L0x200198d6_f * (x**71) + 
            L0x200198d8_f * (x**72) + L0x200198da_f * (x**73) + 
            L0x200198dc_f * (x**74) + L0x200198de_f * (x**75) + 
            L0x200198e0_f * (x**76) + L0x200198e2_f * (x**77) + 
            L0x200198e4_f * (x**78) + L0x200198e6_f * (x**79) + 
            L0x200198e8_f * (x**80) + L0x200198ea_f * (x**81) + 
            L0x200198ec_f * (x**82) + L0x200198ee_f * (x**83) + 
            L0x200198f0_f * (x**84) + L0x200198f2_f * (x**85) + 
            L0x200198f4_f * (x**86) + L0x200198f6_f * (x**87) + 
            L0x200198f8_f * (x**88) + L0x200198fa_f * (x**89) + 
            L0x200198fc_f * (x**90) + L0x200198fe_f * (x**91) + 
            L0x20019900_f * (x**92) + L0x20019902_f * (x**93) + 
            L0x20019904_f * (x**94) + L0x20019906_f * (x**95) + 
            L0x20019908_f * (x**96) + L0x2001990a_f * (x**97) + 
            L0x2001990c_f * (x**98) + L0x2001990e_f * (x**99) + 
            L0x20019910_f * (x**100) + L0x20019912_f * (x**101) + 
            L0x20019914_f * (x**102) + L0x20019916_f * (x**103) + 
            L0x20019918_f * (x**104) + L0x2001991a_f * (x**105) + 
            L0x2001991c_f * (x**106) + L0x2001991e_f * (x**107) + 
            L0x20019920_f * (x**108) + L0x20019922_f * (x**109) + 
            L0x20019924_f * (x**110) + L0x20019926_f * (x**111) + 
            L0x20019928_f * (x**112) + L0x2001992a_f * (x**113) + 
            L0x2001992c_f * (x**114) + L0x2001992e_f * (x**115) + 
            L0x20019930_f * (x**116) + L0x20019932_f * (x**117) + 
            L0x20019934_f * (x**118) + L0x20019936_f * (x**119) + 
            L0x20019938_f * (x**120) + L0x2001993a_f * (x**121) + 
            L0x2001993c_f * (x**122) + L0x2001993e_f * (x**123) + 
            L0x20019940_f * (x**124) + L0x20019942_f * (x**125) + 
            L0x20019944_f * (x**126) + L0x20019946_f * (x**127) + 
            L0x20019948_f * (x**128) + L0x2001994a_f * (x**129) + 
            L0x2001994c_f * (x**130) + L0x2001994e_f * (x**131) + 
            L0x20019950_f * (x**132) + L0x20019952_f * (x**133) + 
            L0x20019954_f * (x**134) + L0x20019956_f * (x**135) + 
            L0x20019958_f * (x**136) + L0x2001995a_f * (x**137) + 
            L0x2001995c_f * (x**138) + L0x2001995e_f * (x**139) + 
            L0x20019960_f * (x**140) + L0x20019962_f * (x**141) + 
            L0x20019964_f * (x**142) + L0x20019966_f * (x**143) + 
            L0x20019968_f * (x**144) + L0x2001996a_f * (x**145) + 
            L0x2001996c_f * (x**146) + L0x2001996e_f * (x**147) + 
            L0x20019970_f * (x**148) + L0x20019972_f * (x**149) + 
            L0x20019974_f * (x**150) + L0x20019976_f * (x**151) + 
            L0x20019978_f * (x**152) + L0x2001997a_f * (x**153) + 
            L0x2001997c_f * (x**154) + L0x2001997e_f * (x**155) + 
            L0x20019980_f * (x**156) + L0x20019982_f * (x**157) + 
            L0x20019984_f * (x**158) + L0x20019986_f * (x**159) + 
            L0x20019988_f * (x**160) + L0x2001998a_f * (x**161) + 
            L0x2001998c_f * (x**162) + L0x2001998e_f * (x**163) + 
            L0x20019990_f * (x**164) + L0x20019992_f * (x**165) + 
            L0x20019994_f * (x**166) + L0x20019996_f * (x**167) + 
            L0x20019998_f * (x**168) + L0x2001999a_f * (x**169) + 
            L0x2001999c_f * (x**170) + L0x2001999e_f * (x**171) + 
            L0x200199a0_f * (x**172) + L0x200199a2_f * (x**173) + 
            L0x200199a4_f * (x**174) + L0x200199a6_f * (x**175) + 
            L0x200199a8_f * (x**176) + L0x200199aa_f * (x**177) + 
            L0x200199ac_f * (x**178) + L0x200199ae_f * (x**179) + 
            L0x200199b0_f * (x**180) + L0x200199b2_f * (x**181) + 
            L0x200199b4_f * (x**182) + L0x200199b6_f * (x**183) + 
            L0x200199b8_f * (x**184) + L0x200199ba_f * (x**185) + 
            L0x200199bc_f * (x**186) + L0x200199be_f * (x**187) + 
            L0x200199c0_f * (x**188) + L0x200199c2_f * (x**189) + 
            L0x200199c4_f * (x**190) + L0x200199c6_f * (x**191) + 
            L0x200199c8_f * (x**192) + L0x200199ca_f * (x**193) + 
            L0x200199cc_f * (x**194) + L0x200199ce_f * (x**195) + 
            L0x200199d0_f * (x**196) + L0x200199d2_f * (x**197) + 
            L0x200199d4_f * (x**198) + L0x200199d6_f * (x**199) + 
            L0x200199d8_f * (x**200) + L0x200199da_f * (x**201) + 
            L0x200199dc_f * (x**202) + L0x200199de_f * (x**203) + 
            L0x200199e0_f * (x**204) + L0x200199e2_f * (x**205) + 
            L0x200199e4_f * (x**206) + L0x200199e6_f * (x**207) + 
            L0x200199e8_f * (x**208) + L0x200199ea_f * (x**209) + 
            L0x200199ec_f * (x**210) + L0x200199ee_f * (x**211) + 
            L0x200199f0_f * (x**212) + L0x200199f2_f * (x**213) + 
            L0x200199f4_f * (x**214) + L0x200199f6_f * (x**215) + 
            L0x200199f8_f * (x**216) + L0x200199fa_f * (x**217) + 
            L0x200199fc_f * (x**218) + L0x200199fe_f * (x**219) + 
            L0x20019a00_f * (x**220) + L0x20019a02_f * (x**221) + 
            L0x20019a04_f * (x**222) + L0x20019a06_f * (x**223) + 
            L0x20019a08_f * (x**224) + L0x20019a0a_f * (x**225) + 
            L0x20019a0c_f * (x**226) + L0x20019a0e_f * (x**227) + 
            L0x20019a10_f * (x**228) + L0x20019a12_f * (x**229) + 
            L0x20019a14_f * (x**230) + L0x20019a16_f * (x**231) + 
            L0x20019a18_f * (x**232) + L0x20019a1a_f * (x**233) + 
            L0x20019a1c_f * (x**234) + L0x20019a1e_f * (x**235) + 
            L0x20019a20_f * (x**236) + L0x20019a22_f * (x**237) + 
            L0x20019a24_f * (x**238) + L0x20019a26_f * (x**239) + 
            L0x20019a28_f * (x**240) + L0x20019a2a_f * (x**241) + 
            L0x20019a2c_f * (x**242) + L0x20019a2e_f * (x**243) + 
            L0x20019a30_f * (x**244) + L0x20019a32_f * (x**245) + 
            L0x20019a34_f * (x**246) + L0x20019a36_f * (x**247) + 
            L0x20019a38_f * (x**248) + L0x20019a3a_f * (x**249) + 
            L0x20019a3c_f * (x**250) + L0x20019a3e_f * (x**251) + 
            L0x20019a40_f * (x**252) + L0x20019a42_f * (x**253) + 
            L0x20019a44_f * (x**254) + L0x20019a46_f * (x**255)
          )
          [25570049, x**4 - y_0_30 * 14036261, y_0_30 - 1],
    (* inp_poly_31 *)
    eqmod (2**32) * (inp_poly_31 * inp_poly_31)
          (
            L0x20019848_f * (x**0) + L0x2001984a_f * (x**1) + 
            L0x2001984c_f * (x**2) + L0x2001984e_f * (x**3) + 
            L0x20019850_f * (x**4) + L0x20019852_f * (x**5) + 
            L0x20019854_f * (x**6) + L0x20019856_f * (x**7) + 
            L0x20019858_f * (x**8) + L0x2001985a_f * (x**9) + 
            L0x2001985c_f * (x**10) + L0x2001985e_f * (x**11) + 
            L0x20019860_f * (x**12) + L0x20019862_f * (x**13) + 
            L0x20019864_f * (x**14) + L0x20019866_f * (x**15) + 
            L0x20019868_f * (x**16) + L0x2001986a_f * (x**17) + 
            L0x2001986c_f * (x**18) + L0x2001986e_f * (x**19) + 
            L0x20019870_f * (x**20) + L0x20019872_f * (x**21) + 
            L0x20019874_f * (x**22) + L0x20019876_f * (x**23) + 
            L0x20019878_f * (x**24) + L0x2001987a_f * (x**25) + 
            L0x2001987c_f * (x**26) + L0x2001987e_f * (x**27) + 
            L0x20019880_f * (x**28) + L0x20019882_f * (x**29) + 
            L0x20019884_f * (x**30) + L0x20019886_f * (x**31) + 
            L0x20019888_f * (x**32) + L0x2001988a_f * (x**33) + 
            L0x2001988c_f * (x**34) + L0x2001988e_f * (x**35) + 
            L0x20019890_f * (x**36) + L0x20019892_f * (x**37) + 
            L0x20019894_f * (x**38) + L0x20019896_f * (x**39) + 
            L0x20019898_f * (x**40) + L0x2001989a_f * (x**41) + 
            L0x2001989c_f * (x**42) + L0x2001989e_f * (x**43) + 
            L0x200198a0_f * (x**44) + L0x200198a2_f * (x**45) + 
            L0x200198a4_f * (x**46) + L0x200198a6_f * (x**47) + 
            L0x200198a8_f * (x**48) + L0x200198aa_f * (x**49) + 
            L0x200198ac_f * (x**50) + L0x200198ae_f * (x**51) + 
            L0x200198b0_f * (x**52) + L0x200198b2_f * (x**53) + 
            L0x200198b4_f * (x**54) + L0x200198b6_f * (x**55) + 
            L0x200198b8_f * (x**56) + L0x200198ba_f * (x**57) + 
            L0x200198bc_f * (x**58) + L0x200198be_f * (x**59) + 
            L0x200198c0_f * (x**60) + L0x200198c2_f * (x**61) + 
            L0x200198c4_f * (x**62) + L0x200198c6_f * (x**63) + 
            L0x200198c8_f * (x**64) + L0x200198ca_f * (x**65) + 
            L0x200198cc_f * (x**66) + L0x200198ce_f * (x**67) + 
            L0x200198d0_f * (x**68) + L0x200198d2_f * (x**69) + 
            L0x200198d4_f * (x**70) + L0x200198d6_f * (x**71) + 
            L0x200198d8_f * (x**72) + L0x200198da_f * (x**73) + 
            L0x200198dc_f * (x**74) + L0x200198de_f * (x**75) + 
            L0x200198e0_f * (x**76) + L0x200198e2_f * (x**77) + 
            L0x200198e4_f * (x**78) + L0x200198e6_f * (x**79) + 
            L0x200198e8_f * (x**80) + L0x200198ea_f * (x**81) + 
            L0x200198ec_f * (x**82) + L0x200198ee_f * (x**83) + 
            L0x200198f0_f * (x**84) + L0x200198f2_f * (x**85) + 
            L0x200198f4_f * (x**86) + L0x200198f6_f * (x**87) + 
            L0x200198f8_f * (x**88) + L0x200198fa_f * (x**89) + 
            L0x200198fc_f * (x**90) + L0x200198fe_f * (x**91) + 
            L0x20019900_f * (x**92) + L0x20019902_f * (x**93) + 
            L0x20019904_f * (x**94) + L0x20019906_f * (x**95) + 
            L0x20019908_f * (x**96) + L0x2001990a_f * (x**97) + 
            L0x2001990c_f * (x**98) + L0x2001990e_f * (x**99) + 
            L0x20019910_f * (x**100) + L0x20019912_f * (x**101) + 
            L0x20019914_f * (x**102) + L0x20019916_f * (x**103) + 
            L0x20019918_f * (x**104) + L0x2001991a_f * (x**105) + 
            L0x2001991c_f * (x**106) + L0x2001991e_f * (x**107) + 
            L0x20019920_f * (x**108) + L0x20019922_f * (x**109) + 
            L0x20019924_f * (x**110) + L0x20019926_f * (x**111) + 
            L0x20019928_f * (x**112) + L0x2001992a_f * (x**113) + 
            L0x2001992c_f * (x**114) + L0x2001992e_f * (x**115) + 
            L0x20019930_f * (x**116) + L0x20019932_f * (x**117) + 
            L0x20019934_f * (x**118) + L0x20019936_f * (x**119) + 
            L0x20019938_f * (x**120) + L0x2001993a_f * (x**121) + 
            L0x2001993c_f * (x**122) + L0x2001993e_f * (x**123) + 
            L0x20019940_f * (x**124) + L0x20019942_f * (x**125) + 
            L0x20019944_f * (x**126) + L0x20019946_f * (x**127) + 
            L0x20019948_f * (x**128) + L0x2001994a_f * (x**129) + 
            L0x2001994c_f * (x**130) + L0x2001994e_f * (x**131) + 
            L0x20019950_f * (x**132) + L0x20019952_f * (x**133) + 
            L0x20019954_f * (x**134) + L0x20019956_f * (x**135) + 
            L0x20019958_f * (x**136) + L0x2001995a_f * (x**137) + 
            L0x2001995c_f * (x**138) + L0x2001995e_f * (x**139) + 
            L0x20019960_f * (x**140) + L0x20019962_f * (x**141) + 
            L0x20019964_f * (x**142) + L0x20019966_f * (x**143) + 
            L0x20019968_f * (x**144) + L0x2001996a_f * (x**145) + 
            L0x2001996c_f * (x**146) + L0x2001996e_f * (x**147) + 
            L0x20019970_f * (x**148) + L0x20019972_f * (x**149) + 
            L0x20019974_f * (x**150) + L0x20019976_f * (x**151) + 
            L0x20019978_f * (x**152) + L0x2001997a_f * (x**153) + 
            L0x2001997c_f * (x**154) + L0x2001997e_f * (x**155) + 
            L0x20019980_f * (x**156) + L0x20019982_f * (x**157) + 
            L0x20019984_f * (x**158) + L0x20019986_f * (x**159) + 
            L0x20019988_f * (x**160) + L0x2001998a_f * (x**161) + 
            L0x2001998c_f * (x**162) + L0x2001998e_f * (x**163) + 
            L0x20019990_f * (x**164) + L0x20019992_f * (x**165) + 
            L0x20019994_f * (x**166) + L0x20019996_f * (x**167) + 
            L0x20019998_f * (x**168) + L0x2001999a_f * (x**169) + 
            L0x2001999c_f * (x**170) + L0x2001999e_f * (x**171) + 
            L0x200199a0_f * (x**172) + L0x200199a2_f * (x**173) + 
            L0x200199a4_f * (x**174) + L0x200199a6_f * (x**175) + 
            L0x200199a8_f * (x**176) + L0x200199aa_f * (x**177) + 
            L0x200199ac_f * (x**178) + L0x200199ae_f * (x**179) + 
            L0x200199b0_f * (x**180) + L0x200199b2_f * (x**181) + 
            L0x200199b4_f * (x**182) + L0x200199b6_f * (x**183) + 
            L0x200199b8_f * (x**184) + L0x200199ba_f * (x**185) + 
            L0x200199bc_f * (x**186) + L0x200199be_f * (x**187) + 
            L0x200199c0_f * (x**188) + L0x200199c2_f * (x**189) + 
            L0x200199c4_f * (x**190) + L0x200199c6_f * (x**191) + 
            L0x200199c8_f * (x**192) + L0x200199ca_f * (x**193) + 
            L0x200199cc_f * (x**194) + L0x200199ce_f * (x**195) + 
            L0x200199d0_f * (x**196) + L0x200199d2_f * (x**197) + 
            L0x200199d4_f * (x**198) + L0x200199d6_f * (x**199) + 
            L0x200199d8_f * (x**200) + L0x200199da_f * (x**201) + 
            L0x200199dc_f * (x**202) + L0x200199de_f * (x**203) + 
            L0x200199e0_f * (x**204) + L0x200199e2_f * (x**205) + 
            L0x200199e4_f * (x**206) + L0x200199e6_f * (x**207) + 
            L0x200199e8_f * (x**208) + L0x200199ea_f * (x**209) + 
            L0x200199ec_f * (x**210) + L0x200199ee_f * (x**211) + 
            L0x200199f0_f * (x**212) + L0x200199f2_f * (x**213) + 
            L0x200199f4_f * (x**214) + L0x200199f6_f * (x**215) + 
            L0x200199f8_f * (x**216) + L0x200199fa_f * (x**217) + 
            L0x200199fc_f * (x**218) + L0x200199fe_f * (x**219) + 
            L0x20019a00_f * (x**220) + L0x20019a02_f * (x**221) + 
            L0x20019a04_f * (x**222) + L0x20019a06_f * (x**223) + 
            L0x20019a08_f * (x**224) + L0x20019a0a_f * (x**225) + 
            L0x20019a0c_f * (x**226) + L0x20019a0e_f * (x**227) + 
            L0x20019a10_f * (x**228) + L0x20019a12_f * (x**229) + 
            L0x20019a14_f * (x**230) + L0x20019a16_f * (x**231) + 
            L0x20019a18_f * (x**232) + L0x20019a1a_f * (x**233) + 
            L0x20019a1c_f * (x**234) + L0x20019a1e_f * (x**235) + 
            L0x20019a20_f * (x**236) + L0x20019a22_f * (x**237) + 
            L0x20019a24_f * (x**238) + L0x20019a26_f * (x**239) + 
            L0x20019a28_f * (x**240) + L0x20019a2a_f * (x**241) + 
            L0x20019a2c_f * (x**242) + L0x20019a2e_f * (x**243) + 
            L0x20019a30_f * (x**244) + L0x20019a32_f * (x**245) + 
            L0x20019a34_f * (x**246) + L0x20019a36_f * (x**247) + 
            L0x20019a38_f * (x**248) + L0x20019a3a_f * (x**249) + 
            L0x20019a3c_f * (x**250) + L0x20019a3e_f * (x**251) + 
            L0x20019a40_f * (x**252) + L0x20019a42_f * (x**253) + 
            L0x20019a44_f * (x**254) + L0x20019a46_f * (x**255)
          )
          [25570049, x**4 - y_0_31 * 11533788, y_0_31 - 1]
  ] prove with [cuts [44, 54], all ghosts]
  &&
  true
;

cut (* 63 *)
  true && true;

(* slice 4 *)
cut (* 64 *)
  and [
    (* inp_poly_32 *)
    eqmod (2**32) * (inp_poly_32 * inp_poly_32)
          (
            L0x20019848_f * (x**0) + L0x2001984a_f * (x**1) + 
            L0x2001984c_f * (x**2) + L0x2001984e_f * (x**3) + 
            L0x20019850_f * (x**4) + L0x20019852_f * (x**5) + 
            L0x20019854_f * (x**6) + L0x20019856_f * (x**7) + 
            L0x20019858_f * (x**8) + L0x2001985a_f * (x**9) + 
            L0x2001985c_f * (x**10) + L0x2001985e_f * (x**11) + 
            L0x20019860_f * (x**12) + L0x20019862_f * (x**13) + 
            L0x20019864_f * (x**14) + L0x20019866_f * (x**15) + 
            L0x20019868_f * (x**16) + L0x2001986a_f * (x**17) + 
            L0x2001986c_f * (x**18) + L0x2001986e_f * (x**19) + 
            L0x20019870_f * (x**20) + L0x20019872_f * (x**21) + 
            L0x20019874_f * (x**22) + L0x20019876_f * (x**23) + 
            L0x20019878_f * (x**24) + L0x2001987a_f * (x**25) + 
            L0x2001987c_f * (x**26) + L0x2001987e_f * (x**27) + 
            L0x20019880_f * (x**28) + L0x20019882_f * (x**29) + 
            L0x20019884_f * (x**30) + L0x20019886_f * (x**31) + 
            L0x20019888_f * (x**32) + L0x2001988a_f * (x**33) + 
            L0x2001988c_f * (x**34) + L0x2001988e_f * (x**35) + 
            L0x20019890_f * (x**36) + L0x20019892_f * (x**37) + 
            L0x20019894_f * (x**38) + L0x20019896_f * (x**39) + 
            L0x20019898_f * (x**40) + L0x2001989a_f * (x**41) + 
            L0x2001989c_f * (x**42) + L0x2001989e_f * (x**43) + 
            L0x200198a0_f * (x**44) + L0x200198a2_f * (x**45) + 
            L0x200198a4_f * (x**46) + L0x200198a6_f * (x**47) + 
            L0x200198a8_f * (x**48) + L0x200198aa_f * (x**49) + 
            L0x200198ac_f * (x**50) + L0x200198ae_f * (x**51) + 
            L0x200198b0_f * (x**52) + L0x200198b2_f * (x**53) + 
            L0x200198b4_f * (x**54) + L0x200198b6_f * (x**55) + 
            L0x200198b8_f * (x**56) + L0x200198ba_f * (x**57) + 
            L0x200198bc_f * (x**58) + L0x200198be_f * (x**59) + 
            L0x200198c0_f * (x**60) + L0x200198c2_f * (x**61) + 
            L0x200198c4_f * (x**62) + L0x200198c6_f * (x**63) + 
            L0x200198c8_f * (x**64) + L0x200198ca_f * (x**65) + 
            L0x200198cc_f * (x**66) + L0x200198ce_f * (x**67) + 
            L0x200198d0_f * (x**68) + L0x200198d2_f * (x**69) + 
            L0x200198d4_f * (x**70) + L0x200198d6_f * (x**71) + 
            L0x200198d8_f * (x**72) + L0x200198da_f * (x**73) + 
            L0x200198dc_f * (x**74) + L0x200198de_f * (x**75) + 
            L0x200198e0_f * (x**76) + L0x200198e2_f * (x**77) + 
            L0x200198e4_f * (x**78) + L0x200198e6_f * (x**79) + 
            L0x200198e8_f * (x**80) + L0x200198ea_f * (x**81) + 
            L0x200198ec_f * (x**82) + L0x200198ee_f * (x**83) + 
            L0x200198f0_f * (x**84) + L0x200198f2_f * (x**85) + 
            L0x200198f4_f * (x**86) + L0x200198f6_f * (x**87) + 
            L0x200198f8_f * (x**88) + L0x200198fa_f * (x**89) + 
            L0x200198fc_f * (x**90) + L0x200198fe_f * (x**91) + 
            L0x20019900_f * (x**92) + L0x20019902_f * (x**93) + 
            L0x20019904_f * (x**94) + L0x20019906_f * (x**95) + 
            L0x20019908_f * (x**96) + L0x2001990a_f * (x**97) + 
            L0x2001990c_f * (x**98) + L0x2001990e_f * (x**99) + 
            L0x20019910_f * (x**100) + L0x20019912_f * (x**101) + 
            L0x20019914_f * (x**102) + L0x20019916_f * (x**103) + 
            L0x20019918_f * (x**104) + L0x2001991a_f * (x**105) + 
            L0x2001991c_f * (x**106) + L0x2001991e_f * (x**107) + 
            L0x20019920_f * (x**108) + L0x20019922_f * (x**109) + 
            L0x20019924_f * (x**110) + L0x20019926_f * (x**111) + 
            L0x20019928_f * (x**112) + L0x2001992a_f * (x**113) + 
            L0x2001992c_f * (x**114) + L0x2001992e_f * (x**115) + 
            L0x20019930_f * (x**116) + L0x20019932_f * (x**117) + 
            L0x20019934_f * (x**118) + L0x20019936_f * (x**119) + 
            L0x20019938_f * (x**120) + L0x2001993a_f * (x**121) + 
            L0x2001993c_f * (x**122) + L0x2001993e_f * (x**123) + 
            L0x20019940_f * (x**124) + L0x20019942_f * (x**125) + 
            L0x20019944_f * (x**126) + L0x20019946_f * (x**127) + 
            L0x20019948_f * (x**128) + L0x2001994a_f * (x**129) + 
            L0x2001994c_f * (x**130) + L0x2001994e_f * (x**131) + 
            L0x20019950_f * (x**132) + L0x20019952_f * (x**133) + 
            L0x20019954_f * (x**134) + L0x20019956_f * (x**135) + 
            L0x20019958_f * (x**136) + L0x2001995a_f * (x**137) + 
            L0x2001995c_f * (x**138) + L0x2001995e_f * (x**139) + 
            L0x20019960_f * (x**140) + L0x20019962_f * (x**141) + 
            L0x20019964_f * (x**142) + L0x20019966_f * (x**143) + 
            L0x20019968_f * (x**144) + L0x2001996a_f * (x**145) + 
            L0x2001996c_f * (x**146) + L0x2001996e_f * (x**147) + 
            L0x20019970_f * (x**148) + L0x20019972_f * (x**149) + 
            L0x20019974_f * (x**150) + L0x20019976_f * (x**151) + 
            L0x20019978_f * (x**152) + L0x2001997a_f * (x**153) + 
            L0x2001997c_f * (x**154) + L0x2001997e_f * (x**155) + 
            L0x20019980_f * (x**156) + L0x20019982_f * (x**157) + 
            L0x20019984_f * (x**158) + L0x20019986_f * (x**159) + 
            L0x20019988_f * (x**160) + L0x2001998a_f * (x**161) + 
            L0x2001998c_f * (x**162) + L0x2001998e_f * (x**163) + 
            L0x20019990_f * (x**164) + L0x20019992_f * (x**165) + 
            L0x20019994_f * (x**166) + L0x20019996_f * (x**167) + 
            L0x20019998_f * (x**168) + L0x2001999a_f * (x**169) + 
            L0x2001999c_f * (x**170) + L0x2001999e_f * (x**171) + 
            L0x200199a0_f * (x**172) + L0x200199a2_f * (x**173) + 
            L0x200199a4_f * (x**174) + L0x200199a6_f * (x**175) + 
            L0x200199a8_f * (x**176) + L0x200199aa_f * (x**177) + 
            L0x200199ac_f * (x**178) + L0x200199ae_f * (x**179) + 
            L0x200199b0_f * (x**180) + L0x200199b2_f * (x**181) + 
            L0x200199b4_f * (x**182) + L0x200199b6_f * (x**183) + 
            L0x200199b8_f * (x**184) + L0x200199ba_f * (x**185) + 
            L0x200199bc_f * (x**186) + L0x200199be_f * (x**187) + 
            L0x200199c0_f * (x**188) + L0x200199c2_f * (x**189) + 
            L0x200199c4_f * (x**190) + L0x200199c6_f * (x**191) + 
            L0x200199c8_f * (x**192) + L0x200199ca_f * (x**193) + 
            L0x200199cc_f * (x**194) + L0x200199ce_f * (x**195) + 
            L0x200199d0_f * (x**196) + L0x200199d2_f * (x**197) + 
            L0x200199d4_f * (x**198) + L0x200199d6_f * (x**199) + 
            L0x200199d8_f * (x**200) + L0x200199da_f * (x**201) + 
            L0x200199dc_f * (x**202) + L0x200199de_f * (x**203) + 
            L0x200199e0_f * (x**204) + L0x200199e2_f * (x**205) + 
            L0x200199e4_f * (x**206) + L0x200199e6_f * (x**207) + 
            L0x200199e8_f * (x**208) + L0x200199ea_f * (x**209) + 
            L0x200199ec_f * (x**210) + L0x200199ee_f * (x**211) + 
            L0x200199f0_f * (x**212) + L0x200199f2_f * (x**213) + 
            L0x200199f4_f * (x**214) + L0x200199f6_f * (x**215) + 
            L0x200199f8_f * (x**216) + L0x200199fa_f * (x**217) + 
            L0x200199fc_f * (x**218) + L0x200199fe_f * (x**219) + 
            L0x20019a00_f * (x**220) + L0x20019a02_f * (x**221) + 
            L0x20019a04_f * (x**222) + L0x20019a06_f * (x**223) + 
            L0x20019a08_f * (x**224) + L0x20019a0a_f * (x**225) + 
            L0x20019a0c_f * (x**226) + L0x20019a0e_f * (x**227) + 
            L0x20019a10_f * (x**228) + L0x20019a12_f * (x**229) + 
            L0x20019a14_f * (x**230) + L0x20019a16_f * (x**231) + 
            L0x20019a18_f * (x**232) + L0x20019a1a_f * (x**233) + 
            L0x20019a1c_f * (x**234) + L0x20019a1e_f * (x**235) + 
            L0x20019a20_f * (x**236) + L0x20019a22_f * (x**237) + 
            L0x20019a24_f * (x**238) + L0x20019a26_f * (x**239) + 
            L0x20019a28_f * (x**240) + L0x20019a2a_f * (x**241) + 
            L0x20019a2c_f * (x**242) + L0x20019a2e_f * (x**243) + 
            L0x20019a30_f * (x**244) + L0x20019a32_f * (x**245) + 
            L0x20019a34_f * (x**246) + L0x20019a36_f * (x**247) + 
            L0x20019a38_f * (x**248) + L0x20019a3a_f * (x**249) + 
            L0x20019a3c_f * (x**250) + L0x20019a3e_f * (x**251) + 
            L0x20019a40_f * (x**252) + L0x20019a42_f * (x**253) + 
            L0x20019a44_f * (x**254) + L0x20019a46_f * (x**255)
          )
          [25570049, x**4 - y_0_32 * 7847101, y_0_32 - 1],
    (* inp_poly_33 *)
    eqmod (2**32) * (inp_poly_33 * inp_poly_33)
          (
            L0x20019848_f * (x**0) + L0x2001984a_f * (x**1) + 
            L0x2001984c_f * (x**2) + L0x2001984e_f * (x**3) + 
            L0x20019850_f * (x**4) + L0x20019852_f * (x**5) + 
            L0x20019854_f * (x**6) + L0x20019856_f * (x**7) + 
            L0x20019858_f * (x**8) + L0x2001985a_f * (x**9) + 
            L0x2001985c_f * (x**10) + L0x2001985e_f * (x**11) + 
            L0x20019860_f * (x**12) + L0x20019862_f * (x**13) + 
            L0x20019864_f * (x**14) + L0x20019866_f * (x**15) + 
            L0x20019868_f * (x**16) + L0x2001986a_f * (x**17) + 
            L0x2001986c_f * (x**18) + L0x2001986e_f * (x**19) + 
            L0x20019870_f * (x**20) + L0x20019872_f * (x**21) + 
            L0x20019874_f * (x**22) + L0x20019876_f * (x**23) + 
            L0x20019878_f * (x**24) + L0x2001987a_f * (x**25) + 
            L0x2001987c_f * (x**26) + L0x2001987e_f * (x**27) + 
            L0x20019880_f * (x**28) + L0x20019882_f * (x**29) + 
            L0x20019884_f * (x**30) + L0x20019886_f * (x**31) + 
            L0x20019888_f * (x**32) + L0x2001988a_f * (x**33) + 
            L0x2001988c_f * (x**34) + L0x2001988e_f * (x**35) + 
            L0x20019890_f * (x**36) + L0x20019892_f * (x**37) + 
            L0x20019894_f * (x**38) + L0x20019896_f * (x**39) + 
            L0x20019898_f * (x**40) + L0x2001989a_f * (x**41) + 
            L0x2001989c_f * (x**42) + L0x2001989e_f * (x**43) + 
            L0x200198a0_f * (x**44) + L0x200198a2_f * (x**45) + 
            L0x200198a4_f * (x**46) + L0x200198a6_f * (x**47) + 
            L0x200198a8_f * (x**48) + L0x200198aa_f * (x**49) + 
            L0x200198ac_f * (x**50) + L0x200198ae_f * (x**51) + 
            L0x200198b0_f * (x**52) + L0x200198b2_f * (x**53) + 
            L0x200198b4_f * (x**54) + L0x200198b6_f * (x**55) + 
            L0x200198b8_f * (x**56) + L0x200198ba_f * (x**57) + 
            L0x200198bc_f * (x**58) + L0x200198be_f * (x**59) + 
            L0x200198c0_f * (x**60) + L0x200198c2_f * (x**61) + 
            L0x200198c4_f * (x**62) + L0x200198c6_f * (x**63) + 
            L0x200198c8_f * (x**64) + L0x200198ca_f * (x**65) + 
            L0x200198cc_f * (x**66) + L0x200198ce_f * (x**67) + 
            L0x200198d0_f * (x**68) + L0x200198d2_f * (x**69) + 
            L0x200198d4_f * (x**70) + L0x200198d6_f * (x**71) + 
            L0x200198d8_f * (x**72) + L0x200198da_f * (x**73) + 
            L0x200198dc_f * (x**74) + L0x200198de_f * (x**75) + 
            L0x200198e0_f * (x**76) + L0x200198e2_f * (x**77) + 
            L0x200198e4_f * (x**78) + L0x200198e6_f * (x**79) + 
            L0x200198e8_f * (x**80) + L0x200198ea_f * (x**81) + 
            L0x200198ec_f * (x**82) + L0x200198ee_f * (x**83) + 
            L0x200198f0_f * (x**84) + L0x200198f2_f * (x**85) + 
            L0x200198f4_f * (x**86) + L0x200198f6_f * (x**87) + 
            L0x200198f8_f * (x**88) + L0x200198fa_f * (x**89) + 
            L0x200198fc_f * (x**90) + L0x200198fe_f * (x**91) + 
            L0x20019900_f * (x**92) + L0x20019902_f * (x**93) + 
            L0x20019904_f * (x**94) + L0x20019906_f * (x**95) + 
            L0x20019908_f * (x**96) + L0x2001990a_f * (x**97) + 
            L0x2001990c_f * (x**98) + L0x2001990e_f * (x**99) + 
            L0x20019910_f * (x**100) + L0x20019912_f * (x**101) + 
            L0x20019914_f * (x**102) + L0x20019916_f * (x**103) + 
            L0x20019918_f * (x**104) + L0x2001991a_f * (x**105) + 
            L0x2001991c_f * (x**106) + L0x2001991e_f * (x**107) + 
            L0x20019920_f * (x**108) + L0x20019922_f * (x**109) + 
            L0x20019924_f * (x**110) + L0x20019926_f * (x**111) + 
            L0x20019928_f * (x**112) + L0x2001992a_f * (x**113) + 
            L0x2001992c_f * (x**114) + L0x2001992e_f * (x**115) + 
            L0x20019930_f * (x**116) + L0x20019932_f * (x**117) + 
            L0x20019934_f * (x**118) + L0x20019936_f * (x**119) + 
            L0x20019938_f * (x**120) + L0x2001993a_f * (x**121) + 
            L0x2001993c_f * (x**122) + L0x2001993e_f * (x**123) + 
            L0x20019940_f * (x**124) + L0x20019942_f * (x**125) + 
            L0x20019944_f * (x**126) + L0x20019946_f * (x**127) + 
            L0x20019948_f * (x**128) + L0x2001994a_f * (x**129) + 
            L0x2001994c_f * (x**130) + L0x2001994e_f * (x**131) + 
            L0x20019950_f * (x**132) + L0x20019952_f * (x**133) + 
            L0x20019954_f * (x**134) + L0x20019956_f * (x**135) + 
            L0x20019958_f * (x**136) + L0x2001995a_f * (x**137) + 
            L0x2001995c_f * (x**138) + L0x2001995e_f * (x**139) + 
            L0x20019960_f * (x**140) + L0x20019962_f * (x**141) + 
            L0x20019964_f * (x**142) + L0x20019966_f * (x**143) + 
            L0x20019968_f * (x**144) + L0x2001996a_f * (x**145) + 
            L0x2001996c_f * (x**146) + L0x2001996e_f * (x**147) + 
            L0x20019970_f * (x**148) + L0x20019972_f * (x**149) + 
            L0x20019974_f * (x**150) + L0x20019976_f * (x**151) + 
            L0x20019978_f * (x**152) + L0x2001997a_f * (x**153) + 
            L0x2001997c_f * (x**154) + L0x2001997e_f * (x**155) + 
            L0x20019980_f * (x**156) + L0x20019982_f * (x**157) + 
            L0x20019984_f * (x**158) + L0x20019986_f * (x**159) + 
            L0x20019988_f * (x**160) + L0x2001998a_f * (x**161) + 
            L0x2001998c_f * (x**162) + L0x2001998e_f * (x**163) + 
            L0x20019990_f * (x**164) + L0x20019992_f * (x**165) + 
            L0x20019994_f * (x**166) + L0x20019996_f * (x**167) + 
            L0x20019998_f * (x**168) + L0x2001999a_f * (x**169) + 
            L0x2001999c_f * (x**170) + L0x2001999e_f * (x**171) + 
            L0x200199a0_f * (x**172) + L0x200199a2_f * (x**173) + 
            L0x200199a4_f * (x**174) + L0x200199a6_f * (x**175) + 
            L0x200199a8_f * (x**176) + L0x200199aa_f * (x**177) + 
            L0x200199ac_f * (x**178) + L0x200199ae_f * (x**179) + 
            L0x200199b0_f * (x**180) + L0x200199b2_f * (x**181) + 
            L0x200199b4_f * (x**182) + L0x200199b6_f * (x**183) + 
            L0x200199b8_f * (x**184) + L0x200199ba_f * (x**185) + 
            L0x200199bc_f * (x**186) + L0x200199be_f * (x**187) + 
            L0x200199c0_f * (x**188) + L0x200199c2_f * (x**189) + 
            L0x200199c4_f * (x**190) + L0x200199c6_f * (x**191) + 
            L0x200199c8_f * (x**192) + L0x200199ca_f * (x**193) + 
            L0x200199cc_f * (x**194) + L0x200199ce_f * (x**195) + 
            L0x200199d0_f * (x**196) + L0x200199d2_f * (x**197) + 
            L0x200199d4_f * (x**198) + L0x200199d6_f * (x**199) + 
            L0x200199d8_f * (x**200) + L0x200199da_f * (x**201) + 
            L0x200199dc_f * (x**202) + L0x200199de_f * (x**203) + 
            L0x200199e0_f * (x**204) + L0x200199e2_f * (x**205) + 
            L0x200199e4_f * (x**206) + L0x200199e6_f * (x**207) + 
            L0x200199e8_f * (x**208) + L0x200199ea_f * (x**209) + 
            L0x200199ec_f * (x**210) + L0x200199ee_f * (x**211) + 
            L0x200199f0_f * (x**212) + L0x200199f2_f * (x**213) + 
            L0x200199f4_f * (x**214) + L0x200199f6_f * (x**215) + 
            L0x200199f8_f * (x**216) + L0x200199fa_f * (x**217) + 
            L0x200199fc_f * (x**218) + L0x200199fe_f * (x**219) + 
            L0x20019a00_f * (x**220) + L0x20019a02_f * (x**221) + 
            L0x20019a04_f * (x**222) + L0x20019a06_f * (x**223) + 
            L0x20019a08_f * (x**224) + L0x20019a0a_f * (x**225) + 
            L0x20019a0c_f * (x**226) + L0x20019a0e_f * (x**227) + 
            L0x20019a10_f * (x**228) + L0x20019a12_f * (x**229) + 
            L0x20019a14_f * (x**230) + L0x20019a16_f * (x**231) + 
            L0x20019a18_f * (x**232) + L0x20019a1a_f * (x**233) + 
            L0x20019a1c_f * (x**234) + L0x20019a1e_f * (x**235) + 
            L0x20019a20_f * (x**236) + L0x20019a22_f * (x**237) + 
            L0x20019a24_f * (x**238) + L0x20019a26_f * (x**239) + 
            L0x20019a28_f * (x**240) + L0x20019a2a_f * (x**241) + 
            L0x20019a2c_f * (x**242) + L0x20019a2e_f * (x**243) + 
            L0x20019a30_f * (x**244) + L0x20019a32_f * (x**245) + 
            L0x20019a34_f * (x**246) + L0x20019a36_f * (x**247) + 
            L0x20019a38_f * (x**248) + L0x20019a3a_f * (x**249) + 
            L0x20019a3c_f * (x**250) + L0x20019a3e_f * (x**251) + 
            L0x20019a40_f * (x**252) + L0x20019a42_f * (x**253) + 
            L0x20019a44_f * (x**254) + L0x20019a46_f * (x**255)
          )
          [25570049, x**4 - y_0_33 * 17722948, y_0_33 - 1],
    (* inp_poly_34 *)
    eqmod (2**32) * (inp_poly_34 * inp_poly_34)
          (
            L0x20019848_f * (x**0) + L0x2001984a_f * (x**1) + 
            L0x2001984c_f * (x**2) + L0x2001984e_f * (x**3) + 
            L0x20019850_f * (x**4) + L0x20019852_f * (x**5) + 
            L0x20019854_f * (x**6) + L0x20019856_f * (x**7) + 
            L0x20019858_f * (x**8) + L0x2001985a_f * (x**9) + 
            L0x2001985c_f * (x**10) + L0x2001985e_f * (x**11) + 
            L0x20019860_f * (x**12) + L0x20019862_f * (x**13) + 
            L0x20019864_f * (x**14) + L0x20019866_f * (x**15) + 
            L0x20019868_f * (x**16) + L0x2001986a_f * (x**17) + 
            L0x2001986c_f * (x**18) + L0x2001986e_f * (x**19) + 
            L0x20019870_f * (x**20) + L0x20019872_f * (x**21) + 
            L0x20019874_f * (x**22) + L0x20019876_f * (x**23) + 
            L0x20019878_f * (x**24) + L0x2001987a_f * (x**25) + 
            L0x2001987c_f * (x**26) + L0x2001987e_f * (x**27) + 
            L0x20019880_f * (x**28) + L0x20019882_f * (x**29) + 
            L0x20019884_f * (x**30) + L0x20019886_f * (x**31) + 
            L0x20019888_f * (x**32) + L0x2001988a_f * (x**33) + 
            L0x2001988c_f * (x**34) + L0x2001988e_f * (x**35) + 
            L0x20019890_f * (x**36) + L0x20019892_f * (x**37) + 
            L0x20019894_f * (x**38) + L0x20019896_f * (x**39) + 
            L0x20019898_f * (x**40) + L0x2001989a_f * (x**41) + 
            L0x2001989c_f * (x**42) + L0x2001989e_f * (x**43) + 
            L0x200198a0_f * (x**44) + L0x200198a2_f * (x**45) + 
            L0x200198a4_f * (x**46) + L0x200198a6_f * (x**47) + 
            L0x200198a8_f * (x**48) + L0x200198aa_f * (x**49) + 
            L0x200198ac_f * (x**50) + L0x200198ae_f * (x**51) + 
            L0x200198b0_f * (x**52) + L0x200198b2_f * (x**53) + 
            L0x200198b4_f * (x**54) + L0x200198b6_f * (x**55) + 
            L0x200198b8_f * (x**56) + L0x200198ba_f * (x**57) + 
            L0x200198bc_f * (x**58) + L0x200198be_f * (x**59) + 
            L0x200198c0_f * (x**60) + L0x200198c2_f * (x**61) + 
            L0x200198c4_f * (x**62) + L0x200198c6_f * (x**63) + 
            L0x200198c8_f * (x**64) + L0x200198ca_f * (x**65) + 
            L0x200198cc_f * (x**66) + L0x200198ce_f * (x**67) + 
            L0x200198d0_f * (x**68) + L0x200198d2_f * (x**69) + 
            L0x200198d4_f * (x**70) + L0x200198d6_f * (x**71) + 
            L0x200198d8_f * (x**72) + L0x200198da_f * (x**73) + 
            L0x200198dc_f * (x**74) + L0x200198de_f * (x**75) + 
            L0x200198e0_f * (x**76) + L0x200198e2_f * (x**77) + 
            L0x200198e4_f * (x**78) + L0x200198e6_f * (x**79) + 
            L0x200198e8_f * (x**80) + L0x200198ea_f * (x**81) + 
            L0x200198ec_f * (x**82) + L0x200198ee_f * (x**83) + 
            L0x200198f0_f * (x**84) + L0x200198f2_f * (x**85) + 
            L0x200198f4_f * (x**86) + L0x200198f6_f * (x**87) + 
            L0x200198f8_f * (x**88) + L0x200198fa_f * (x**89) + 
            L0x200198fc_f * (x**90) + L0x200198fe_f * (x**91) + 
            L0x20019900_f * (x**92) + L0x20019902_f * (x**93) + 
            L0x20019904_f * (x**94) + L0x20019906_f * (x**95) + 
            L0x20019908_f * (x**96) + L0x2001990a_f * (x**97) + 
            L0x2001990c_f * (x**98) + L0x2001990e_f * (x**99) + 
            L0x20019910_f * (x**100) + L0x20019912_f * (x**101) + 
            L0x20019914_f * (x**102) + L0x20019916_f * (x**103) + 
            L0x20019918_f * (x**104) + L0x2001991a_f * (x**105) + 
            L0x2001991c_f * (x**106) + L0x2001991e_f * (x**107) + 
            L0x20019920_f * (x**108) + L0x20019922_f * (x**109) + 
            L0x20019924_f * (x**110) + L0x20019926_f * (x**111) + 
            L0x20019928_f * (x**112) + L0x2001992a_f * (x**113) + 
            L0x2001992c_f * (x**114) + L0x2001992e_f * (x**115) + 
            L0x20019930_f * (x**116) + L0x20019932_f * (x**117) + 
            L0x20019934_f * (x**118) + L0x20019936_f * (x**119) + 
            L0x20019938_f * (x**120) + L0x2001993a_f * (x**121) + 
            L0x2001993c_f * (x**122) + L0x2001993e_f * (x**123) + 
            L0x20019940_f * (x**124) + L0x20019942_f * (x**125) + 
            L0x20019944_f * (x**126) + L0x20019946_f * (x**127) + 
            L0x20019948_f * (x**128) + L0x2001994a_f * (x**129) + 
            L0x2001994c_f * (x**130) + L0x2001994e_f * (x**131) + 
            L0x20019950_f * (x**132) + L0x20019952_f * (x**133) + 
            L0x20019954_f * (x**134) + L0x20019956_f * (x**135) + 
            L0x20019958_f * (x**136) + L0x2001995a_f * (x**137) + 
            L0x2001995c_f * (x**138) + L0x2001995e_f * (x**139) + 
            L0x20019960_f * (x**140) + L0x20019962_f * (x**141) + 
            L0x20019964_f * (x**142) + L0x20019966_f * (x**143) + 
            L0x20019968_f * (x**144) + L0x2001996a_f * (x**145) + 
            L0x2001996c_f * (x**146) + L0x2001996e_f * (x**147) + 
            L0x20019970_f * (x**148) + L0x20019972_f * (x**149) + 
            L0x20019974_f * (x**150) + L0x20019976_f * (x**151) + 
            L0x20019978_f * (x**152) + L0x2001997a_f * (x**153) + 
            L0x2001997c_f * (x**154) + L0x2001997e_f * (x**155) + 
            L0x20019980_f * (x**156) + L0x20019982_f * (x**157) + 
            L0x20019984_f * (x**158) + L0x20019986_f * (x**159) + 
            L0x20019988_f * (x**160) + L0x2001998a_f * (x**161) + 
            L0x2001998c_f * (x**162) + L0x2001998e_f * (x**163) + 
            L0x20019990_f * (x**164) + L0x20019992_f * (x**165) + 
            L0x20019994_f * (x**166) + L0x20019996_f * (x**167) + 
            L0x20019998_f * (x**168) + L0x2001999a_f * (x**169) + 
            L0x2001999c_f * (x**170) + L0x2001999e_f * (x**171) + 
            L0x200199a0_f * (x**172) + L0x200199a2_f * (x**173) + 
            L0x200199a4_f * (x**174) + L0x200199a6_f * (x**175) + 
            L0x200199a8_f * (x**176) + L0x200199aa_f * (x**177) + 
            L0x200199ac_f * (x**178) + L0x200199ae_f * (x**179) + 
            L0x200199b0_f * (x**180) + L0x200199b2_f * (x**181) + 
            L0x200199b4_f * (x**182) + L0x200199b6_f * (x**183) + 
            L0x200199b8_f * (x**184) + L0x200199ba_f * (x**185) + 
            L0x200199bc_f * (x**186) + L0x200199be_f * (x**187) + 
            L0x200199c0_f * (x**188) + L0x200199c2_f * (x**189) + 
            L0x200199c4_f * (x**190) + L0x200199c6_f * (x**191) + 
            L0x200199c8_f * (x**192) + L0x200199ca_f * (x**193) + 
            L0x200199cc_f * (x**194) + L0x200199ce_f * (x**195) + 
            L0x200199d0_f * (x**196) + L0x200199d2_f * (x**197) + 
            L0x200199d4_f * (x**198) + L0x200199d6_f * (x**199) + 
            L0x200199d8_f * (x**200) + L0x200199da_f * (x**201) + 
            L0x200199dc_f * (x**202) + L0x200199de_f * (x**203) + 
            L0x200199e0_f * (x**204) + L0x200199e2_f * (x**205) + 
            L0x200199e4_f * (x**206) + L0x200199e6_f * (x**207) + 
            L0x200199e8_f * (x**208) + L0x200199ea_f * (x**209) + 
            L0x200199ec_f * (x**210) + L0x200199ee_f * (x**211) + 
            L0x200199f0_f * (x**212) + L0x200199f2_f * (x**213) + 
            L0x200199f4_f * (x**214) + L0x200199f6_f * (x**215) + 
            L0x200199f8_f * (x**216) + L0x200199fa_f * (x**217) + 
            L0x200199fc_f * (x**218) + L0x200199fe_f * (x**219) + 
            L0x20019a00_f * (x**220) + L0x20019a02_f * (x**221) + 
            L0x20019a04_f * (x**222) + L0x20019a06_f * (x**223) + 
            L0x20019a08_f * (x**224) + L0x20019a0a_f * (x**225) + 
            L0x20019a0c_f * (x**226) + L0x20019a0e_f * (x**227) + 
            L0x20019a10_f * (x**228) + L0x20019a12_f * (x**229) + 
            L0x20019a14_f * (x**230) + L0x20019a16_f * (x**231) + 
            L0x20019a18_f * (x**232) + L0x20019a1a_f * (x**233) + 
            L0x20019a1c_f * (x**234) + L0x20019a1e_f * (x**235) + 
            L0x20019a20_f * (x**236) + L0x20019a22_f * (x**237) + 
            L0x20019a24_f * (x**238) + L0x20019a26_f * (x**239) + 
            L0x20019a28_f * (x**240) + L0x20019a2a_f * (x**241) + 
            L0x20019a2c_f * (x**242) + L0x20019a2e_f * (x**243) + 
            L0x20019a30_f * (x**244) + L0x20019a32_f * (x**245) + 
            L0x20019a34_f * (x**246) + L0x20019a36_f * (x**247) + 
            L0x20019a38_f * (x**248) + L0x20019a3a_f * (x**249) + 
            L0x20019a3c_f * (x**250) + L0x20019a3e_f * (x**251) + 
            L0x20019a40_f * (x**252) + L0x20019a42_f * (x**253) + 
            L0x20019a44_f * (x**254) + L0x20019a46_f * (x**255)
          )
          [25570049, x**4 - y_0_34 * 19240139, y_0_34 - 1],
    (* inp_poly_35 *)
    eqmod (2**32) * (inp_poly_35 * inp_poly_35)
          (
            L0x20019848_f * (x**0) + L0x2001984a_f * (x**1) + 
            L0x2001984c_f * (x**2) + L0x2001984e_f * (x**3) + 
            L0x20019850_f * (x**4) + L0x20019852_f * (x**5) + 
            L0x20019854_f * (x**6) + L0x20019856_f * (x**7) + 
            L0x20019858_f * (x**8) + L0x2001985a_f * (x**9) + 
            L0x2001985c_f * (x**10) + L0x2001985e_f * (x**11) + 
            L0x20019860_f * (x**12) + L0x20019862_f * (x**13) + 
            L0x20019864_f * (x**14) + L0x20019866_f * (x**15) + 
            L0x20019868_f * (x**16) + L0x2001986a_f * (x**17) + 
            L0x2001986c_f * (x**18) + L0x2001986e_f * (x**19) + 
            L0x20019870_f * (x**20) + L0x20019872_f * (x**21) + 
            L0x20019874_f * (x**22) + L0x20019876_f * (x**23) + 
            L0x20019878_f * (x**24) + L0x2001987a_f * (x**25) + 
            L0x2001987c_f * (x**26) + L0x2001987e_f * (x**27) + 
            L0x20019880_f * (x**28) + L0x20019882_f * (x**29) + 
            L0x20019884_f * (x**30) + L0x20019886_f * (x**31) + 
            L0x20019888_f * (x**32) + L0x2001988a_f * (x**33) + 
            L0x2001988c_f * (x**34) + L0x2001988e_f * (x**35) + 
            L0x20019890_f * (x**36) + L0x20019892_f * (x**37) + 
            L0x20019894_f * (x**38) + L0x20019896_f * (x**39) + 
            L0x20019898_f * (x**40) + L0x2001989a_f * (x**41) + 
            L0x2001989c_f * (x**42) + L0x2001989e_f * (x**43) + 
            L0x200198a0_f * (x**44) + L0x200198a2_f * (x**45) + 
            L0x200198a4_f * (x**46) + L0x200198a6_f * (x**47) + 
            L0x200198a8_f * (x**48) + L0x200198aa_f * (x**49) + 
            L0x200198ac_f * (x**50) + L0x200198ae_f * (x**51) + 
            L0x200198b0_f * (x**52) + L0x200198b2_f * (x**53) + 
            L0x200198b4_f * (x**54) + L0x200198b6_f * (x**55) + 
            L0x200198b8_f * (x**56) + L0x200198ba_f * (x**57) + 
            L0x200198bc_f * (x**58) + L0x200198be_f * (x**59) + 
            L0x200198c0_f * (x**60) + L0x200198c2_f * (x**61) + 
            L0x200198c4_f * (x**62) + L0x200198c6_f * (x**63) + 
            L0x200198c8_f * (x**64) + L0x200198ca_f * (x**65) + 
            L0x200198cc_f * (x**66) + L0x200198ce_f * (x**67) + 
            L0x200198d0_f * (x**68) + L0x200198d2_f * (x**69) + 
            L0x200198d4_f * (x**70) + L0x200198d6_f * (x**71) + 
            L0x200198d8_f * (x**72) + L0x200198da_f * (x**73) + 
            L0x200198dc_f * (x**74) + L0x200198de_f * (x**75) + 
            L0x200198e0_f * (x**76) + L0x200198e2_f * (x**77) + 
            L0x200198e4_f * (x**78) + L0x200198e6_f * (x**79) + 
            L0x200198e8_f * (x**80) + L0x200198ea_f * (x**81) + 
            L0x200198ec_f * (x**82) + L0x200198ee_f * (x**83) + 
            L0x200198f0_f * (x**84) + L0x200198f2_f * (x**85) + 
            L0x200198f4_f * (x**86) + L0x200198f6_f * (x**87) + 
            L0x200198f8_f * (x**88) + L0x200198fa_f * (x**89) + 
            L0x200198fc_f * (x**90) + L0x200198fe_f * (x**91) + 
            L0x20019900_f * (x**92) + L0x20019902_f * (x**93) + 
            L0x20019904_f * (x**94) + L0x20019906_f * (x**95) + 
            L0x20019908_f * (x**96) + L0x2001990a_f * (x**97) + 
            L0x2001990c_f * (x**98) + L0x2001990e_f * (x**99) + 
            L0x20019910_f * (x**100) + L0x20019912_f * (x**101) + 
            L0x20019914_f * (x**102) + L0x20019916_f * (x**103) + 
            L0x20019918_f * (x**104) + L0x2001991a_f * (x**105) + 
            L0x2001991c_f * (x**106) + L0x2001991e_f * (x**107) + 
            L0x20019920_f * (x**108) + L0x20019922_f * (x**109) + 
            L0x20019924_f * (x**110) + L0x20019926_f * (x**111) + 
            L0x20019928_f * (x**112) + L0x2001992a_f * (x**113) + 
            L0x2001992c_f * (x**114) + L0x2001992e_f * (x**115) + 
            L0x20019930_f * (x**116) + L0x20019932_f * (x**117) + 
            L0x20019934_f * (x**118) + L0x20019936_f * (x**119) + 
            L0x20019938_f * (x**120) + L0x2001993a_f * (x**121) + 
            L0x2001993c_f * (x**122) + L0x2001993e_f * (x**123) + 
            L0x20019940_f * (x**124) + L0x20019942_f * (x**125) + 
            L0x20019944_f * (x**126) + L0x20019946_f * (x**127) + 
            L0x20019948_f * (x**128) + L0x2001994a_f * (x**129) + 
            L0x2001994c_f * (x**130) + L0x2001994e_f * (x**131) + 
            L0x20019950_f * (x**132) + L0x20019952_f * (x**133) + 
            L0x20019954_f * (x**134) + L0x20019956_f * (x**135) + 
            L0x20019958_f * (x**136) + L0x2001995a_f * (x**137) + 
            L0x2001995c_f * (x**138) + L0x2001995e_f * (x**139) + 
            L0x20019960_f * (x**140) + L0x20019962_f * (x**141) + 
            L0x20019964_f * (x**142) + L0x20019966_f * (x**143) + 
            L0x20019968_f * (x**144) + L0x2001996a_f * (x**145) + 
            L0x2001996c_f * (x**146) + L0x2001996e_f * (x**147) + 
            L0x20019970_f * (x**148) + L0x20019972_f * (x**149) + 
            L0x20019974_f * (x**150) + L0x20019976_f * (x**151) + 
            L0x20019978_f * (x**152) + L0x2001997a_f * (x**153) + 
            L0x2001997c_f * (x**154) + L0x2001997e_f * (x**155) + 
            L0x20019980_f * (x**156) + L0x20019982_f * (x**157) + 
            L0x20019984_f * (x**158) + L0x20019986_f * (x**159) + 
            L0x20019988_f * (x**160) + L0x2001998a_f * (x**161) + 
            L0x2001998c_f * (x**162) + L0x2001998e_f * (x**163) + 
            L0x20019990_f * (x**164) + L0x20019992_f * (x**165) + 
            L0x20019994_f * (x**166) + L0x20019996_f * (x**167) + 
            L0x20019998_f * (x**168) + L0x2001999a_f * (x**169) + 
            L0x2001999c_f * (x**170) + L0x2001999e_f * (x**171) + 
            L0x200199a0_f * (x**172) + L0x200199a2_f * (x**173) + 
            L0x200199a4_f * (x**174) + L0x200199a6_f * (x**175) + 
            L0x200199a8_f * (x**176) + L0x200199aa_f * (x**177) + 
            L0x200199ac_f * (x**178) + L0x200199ae_f * (x**179) + 
            L0x200199b0_f * (x**180) + L0x200199b2_f * (x**181) + 
            L0x200199b4_f * (x**182) + L0x200199b6_f * (x**183) + 
            L0x200199b8_f * (x**184) + L0x200199ba_f * (x**185) + 
            L0x200199bc_f * (x**186) + L0x200199be_f * (x**187) + 
            L0x200199c0_f * (x**188) + L0x200199c2_f * (x**189) + 
            L0x200199c4_f * (x**190) + L0x200199c6_f * (x**191) + 
            L0x200199c8_f * (x**192) + L0x200199ca_f * (x**193) + 
            L0x200199cc_f * (x**194) + L0x200199ce_f * (x**195) + 
            L0x200199d0_f * (x**196) + L0x200199d2_f * (x**197) + 
            L0x200199d4_f * (x**198) + L0x200199d6_f * (x**199) + 
            L0x200199d8_f * (x**200) + L0x200199da_f * (x**201) + 
            L0x200199dc_f * (x**202) + L0x200199de_f * (x**203) + 
            L0x200199e0_f * (x**204) + L0x200199e2_f * (x**205) + 
            L0x200199e4_f * (x**206) + L0x200199e6_f * (x**207) + 
            L0x200199e8_f * (x**208) + L0x200199ea_f * (x**209) + 
            L0x200199ec_f * (x**210) + L0x200199ee_f * (x**211) + 
            L0x200199f0_f * (x**212) + L0x200199f2_f * (x**213) + 
            L0x200199f4_f * (x**214) + L0x200199f6_f * (x**215) + 
            L0x200199f8_f * (x**216) + L0x200199fa_f * (x**217) + 
            L0x200199fc_f * (x**218) + L0x200199fe_f * (x**219) + 
            L0x20019a00_f * (x**220) + L0x20019a02_f * (x**221) + 
            L0x20019a04_f * (x**222) + L0x20019a06_f * (x**223) + 
            L0x20019a08_f * (x**224) + L0x20019a0a_f * (x**225) + 
            L0x20019a0c_f * (x**226) + L0x20019a0e_f * (x**227) + 
            L0x20019a10_f * (x**228) + L0x20019a12_f * (x**229) + 
            L0x20019a14_f * (x**230) + L0x20019a16_f * (x**231) + 
            L0x20019a18_f * (x**232) + L0x20019a1a_f * (x**233) + 
            L0x20019a1c_f * (x**234) + L0x20019a1e_f * (x**235) + 
            L0x20019a20_f * (x**236) + L0x20019a22_f * (x**237) + 
            L0x20019a24_f * (x**238) + L0x20019a26_f * (x**239) + 
            L0x20019a28_f * (x**240) + L0x20019a2a_f * (x**241) + 
            L0x20019a2c_f * (x**242) + L0x20019a2e_f * (x**243) + 
            L0x20019a30_f * (x**244) + L0x20019a32_f * (x**245) + 
            L0x20019a34_f * (x**246) + L0x20019a36_f * (x**247) + 
            L0x20019a38_f * (x**248) + L0x20019a3a_f * (x**249) + 
            L0x20019a3c_f * (x**250) + L0x20019a3e_f * (x**251) + 
            L0x20019a40_f * (x**252) + L0x20019a42_f * (x**253) + 
            L0x20019a44_f * (x**254) + L0x20019a46_f * (x**255)
          )
          [25570049, x**4 - y_0_35 * 6329910, y_0_35 - 1],
    (* inp_poly_36 *)
    eqmod (2**32) * (inp_poly_36 * inp_poly_36)
          (
            L0x20019848_f * (x**0) + L0x2001984a_f * (x**1) + 
            L0x2001984c_f * (x**2) + L0x2001984e_f * (x**3) + 
            L0x20019850_f * (x**4) + L0x20019852_f * (x**5) + 
            L0x20019854_f * (x**6) + L0x20019856_f * (x**7) + 
            L0x20019858_f * (x**8) + L0x2001985a_f * (x**9) + 
            L0x2001985c_f * (x**10) + L0x2001985e_f * (x**11) + 
            L0x20019860_f * (x**12) + L0x20019862_f * (x**13) + 
            L0x20019864_f * (x**14) + L0x20019866_f * (x**15) + 
            L0x20019868_f * (x**16) + L0x2001986a_f * (x**17) + 
            L0x2001986c_f * (x**18) + L0x2001986e_f * (x**19) + 
            L0x20019870_f * (x**20) + L0x20019872_f * (x**21) + 
            L0x20019874_f * (x**22) + L0x20019876_f * (x**23) + 
            L0x20019878_f * (x**24) + L0x2001987a_f * (x**25) + 
            L0x2001987c_f * (x**26) + L0x2001987e_f * (x**27) + 
            L0x20019880_f * (x**28) + L0x20019882_f * (x**29) + 
            L0x20019884_f * (x**30) + L0x20019886_f * (x**31) + 
            L0x20019888_f * (x**32) + L0x2001988a_f * (x**33) + 
            L0x2001988c_f * (x**34) + L0x2001988e_f * (x**35) + 
            L0x20019890_f * (x**36) + L0x20019892_f * (x**37) + 
            L0x20019894_f * (x**38) + L0x20019896_f * (x**39) + 
            L0x20019898_f * (x**40) + L0x2001989a_f * (x**41) + 
            L0x2001989c_f * (x**42) + L0x2001989e_f * (x**43) + 
            L0x200198a0_f * (x**44) + L0x200198a2_f * (x**45) + 
            L0x200198a4_f * (x**46) + L0x200198a6_f * (x**47) + 
            L0x200198a8_f * (x**48) + L0x200198aa_f * (x**49) + 
            L0x200198ac_f * (x**50) + L0x200198ae_f * (x**51) + 
            L0x200198b0_f * (x**52) + L0x200198b2_f * (x**53) + 
            L0x200198b4_f * (x**54) + L0x200198b6_f * (x**55) + 
            L0x200198b8_f * (x**56) + L0x200198ba_f * (x**57) + 
            L0x200198bc_f * (x**58) + L0x200198be_f * (x**59) + 
            L0x200198c0_f * (x**60) + L0x200198c2_f * (x**61) + 
            L0x200198c4_f * (x**62) + L0x200198c6_f * (x**63) + 
            L0x200198c8_f * (x**64) + L0x200198ca_f * (x**65) + 
            L0x200198cc_f * (x**66) + L0x200198ce_f * (x**67) + 
            L0x200198d0_f * (x**68) + L0x200198d2_f * (x**69) + 
            L0x200198d4_f * (x**70) + L0x200198d6_f * (x**71) + 
            L0x200198d8_f * (x**72) + L0x200198da_f * (x**73) + 
            L0x200198dc_f * (x**74) + L0x200198de_f * (x**75) + 
            L0x200198e0_f * (x**76) + L0x200198e2_f * (x**77) + 
            L0x200198e4_f * (x**78) + L0x200198e6_f * (x**79) + 
            L0x200198e8_f * (x**80) + L0x200198ea_f * (x**81) + 
            L0x200198ec_f * (x**82) + L0x200198ee_f * (x**83) + 
            L0x200198f0_f * (x**84) + L0x200198f2_f * (x**85) + 
            L0x200198f4_f * (x**86) + L0x200198f6_f * (x**87) + 
            L0x200198f8_f * (x**88) + L0x200198fa_f * (x**89) + 
            L0x200198fc_f * (x**90) + L0x200198fe_f * (x**91) + 
            L0x20019900_f * (x**92) + L0x20019902_f * (x**93) + 
            L0x20019904_f * (x**94) + L0x20019906_f * (x**95) + 
            L0x20019908_f * (x**96) + L0x2001990a_f * (x**97) + 
            L0x2001990c_f * (x**98) + L0x2001990e_f * (x**99) + 
            L0x20019910_f * (x**100) + L0x20019912_f * (x**101) + 
            L0x20019914_f * (x**102) + L0x20019916_f * (x**103) + 
            L0x20019918_f * (x**104) + L0x2001991a_f * (x**105) + 
            L0x2001991c_f * (x**106) + L0x2001991e_f * (x**107) + 
            L0x20019920_f * (x**108) + L0x20019922_f * (x**109) + 
            L0x20019924_f * (x**110) + L0x20019926_f * (x**111) + 
            L0x20019928_f * (x**112) + L0x2001992a_f * (x**113) + 
            L0x2001992c_f * (x**114) + L0x2001992e_f * (x**115) + 
            L0x20019930_f * (x**116) + L0x20019932_f * (x**117) + 
            L0x20019934_f * (x**118) + L0x20019936_f * (x**119) + 
            L0x20019938_f * (x**120) + L0x2001993a_f * (x**121) + 
            L0x2001993c_f * (x**122) + L0x2001993e_f * (x**123) + 
            L0x20019940_f * (x**124) + L0x20019942_f * (x**125) + 
            L0x20019944_f * (x**126) + L0x20019946_f * (x**127) + 
            L0x20019948_f * (x**128) + L0x2001994a_f * (x**129) + 
            L0x2001994c_f * (x**130) + L0x2001994e_f * (x**131) + 
            L0x20019950_f * (x**132) + L0x20019952_f * (x**133) + 
            L0x20019954_f * (x**134) + L0x20019956_f * (x**135) + 
            L0x20019958_f * (x**136) + L0x2001995a_f * (x**137) + 
            L0x2001995c_f * (x**138) + L0x2001995e_f * (x**139) + 
            L0x20019960_f * (x**140) + L0x20019962_f * (x**141) + 
            L0x20019964_f * (x**142) + L0x20019966_f * (x**143) + 
            L0x20019968_f * (x**144) + L0x2001996a_f * (x**145) + 
            L0x2001996c_f * (x**146) + L0x2001996e_f * (x**147) + 
            L0x20019970_f * (x**148) + L0x20019972_f * (x**149) + 
            L0x20019974_f * (x**150) + L0x20019976_f * (x**151) + 
            L0x20019978_f * (x**152) + L0x2001997a_f * (x**153) + 
            L0x2001997c_f * (x**154) + L0x2001997e_f * (x**155) + 
            L0x20019980_f * (x**156) + L0x20019982_f * (x**157) + 
            L0x20019984_f * (x**158) + L0x20019986_f * (x**159) + 
            L0x20019988_f * (x**160) + L0x2001998a_f * (x**161) + 
            L0x2001998c_f * (x**162) + L0x2001998e_f * (x**163) + 
            L0x20019990_f * (x**164) + L0x20019992_f * (x**165) + 
            L0x20019994_f * (x**166) + L0x20019996_f * (x**167) + 
            L0x20019998_f * (x**168) + L0x2001999a_f * (x**169) + 
            L0x2001999c_f * (x**170) + L0x2001999e_f * (x**171) + 
            L0x200199a0_f * (x**172) + L0x200199a2_f * (x**173) + 
            L0x200199a4_f * (x**174) + L0x200199a6_f * (x**175) + 
            L0x200199a8_f * (x**176) + L0x200199aa_f * (x**177) + 
            L0x200199ac_f * (x**178) + L0x200199ae_f * (x**179) + 
            L0x200199b0_f * (x**180) + L0x200199b2_f * (x**181) + 
            L0x200199b4_f * (x**182) + L0x200199b6_f * (x**183) + 
            L0x200199b8_f * (x**184) + L0x200199ba_f * (x**185) + 
            L0x200199bc_f * (x**186) + L0x200199be_f * (x**187) + 
            L0x200199c0_f * (x**188) + L0x200199c2_f * (x**189) + 
            L0x200199c4_f * (x**190) + L0x200199c6_f * (x**191) + 
            L0x200199c8_f * (x**192) + L0x200199ca_f * (x**193) + 
            L0x200199cc_f * (x**194) + L0x200199ce_f * (x**195) + 
            L0x200199d0_f * (x**196) + L0x200199d2_f * (x**197) + 
            L0x200199d4_f * (x**198) + L0x200199d6_f * (x**199) + 
            L0x200199d8_f * (x**200) + L0x200199da_f * (x**201) + 
            L0x200199dc_f * (x**202) + L0x200199de_f * (x**203) + 
            L0x200199e0_f * (x**204) + L0x200199e2_f * (x**205) + 
            L0x200199e4_f * (x**206) + L0x200199e6_f * (x**207) + 
            L0x200199e8_f * (x**208) + L0x200199ea_f * (x**209) + 
            L0x200199ec_f * (x**210) + L0x200199ee_f * (x**211) + 
            L0x200199f0_f * (x**212) + L0x200199f2_f * (x**213) + 
            L0x200199f4_f * (x**214) + L0x200199f6_f * (x**215) + 
            L0x200199f8_f * (x**216) + L0x200199fa_f * (x**217) + 
            L0x200199fc_f * (x**218) + L0x200199fe_f * (x**219) + 
            L0x20019a00_f * (x**220) + L0x20019a02_f * (x**221) + 
            L0x20019a04_f * (x**222) + L0x20019a06_f * (x**223) + 
            L0x20019a08_f * (x**224) + L0x20019a0a_f * (x**225) + 
            L0x20019a0c_f * (x**226) + L0x20019a0e_f * (x**227) + 
            L0x20019a10_f * (x**228) + L0x20019a12_f * (x**229) + 
            L0x20019a14_f * (x**230) + L0x20019a16_f * (x**231) + 
            L0x20019a18_f * (x**232) + L0x20019a1a_f * (x**233) + 
            L0x20019a1c_f * (x**234) + L0x20019a1e_f * (x**235) + 
            L0x20019a20_f * (x**236) + L0x20019a22_f * (x**237) + 
            L0x20019a24_f * (x**238) + L0x20019a26_f * (x**239) + 
            L0x20019a28_f * (x**240) + L0x20019a2a_f * (x**241) + 
            L0x20019a2c_f * (x**242) + L0x20019a2e_f * (x**243) + 
            L0x20019a30_f * (x**244) + L0x20019a32_f * (x**245) + 
            L0x20019a34_f * (x**246) + L0x20019a36_f * (x**247) + 
            L0x20019a38_f * (x**248) + L0x20019a3a_f * (x**249) + 
            L0x20019a3c_f * (x**250) + L0x20019a3e_f * (x**251) + 
            L0x20019a40_f * (x**252) + L0x20019a42_f * (x**253) + 
            L0x20019a44_f * (x**254) + L0x20019a46_f * (x**255)
          )
          [25570049, x**4 - y_0_36 * 5192558, y_0_36 - 1],
    (* inp_poly_37 *)
    eqmod (2**32) * (inp_poly_37 * inp_poly_37)
          (
            L0x20019848_f * (x**0) + L0x2001984a_f * (x**1) + 
            L0x2001984c_f * (x**2) + L0x2001984e_f * (x**3) + 
            L0x20019850_f * (x**4) + L0x20019852_f * (x**5) + 
            L0x20019854_f * (x**6) + L0x20019856_f * (x**7) + 
            L0x20019858_f * (x**8) + L0x2001985a_f * (x**9) + 
            L0x2001985c_f * (x**10) + L0x2001985e_f * (x**11) + 
            L0x20019860_f * (x**12) + L0x20019862_f * (x**13) + 
            L0x20019864_f * (x**14) + L0x20019866_f * (x**15) + 
            L0x20019868_f * (x**16) + L0x2001986a_f * (x**17) + 
            L0x2001986c_f * (x**18) + L0x2001986e_f * (x**19) + 
            L0x20019870_f * (x**20) + L0x20019872_f * (x**21) + 
            L0x20019874_f * (x**22) + L0x20019876_f * (x**23) + 
            L0x20019878_f * (x**24) + L0x2001987a_f * (x**25) + 
            L0x2001987c_f * (x**26) + L0x2001987e_f * (x**27) + 
            L0x20019880_f * (x**28) + L0x20019882_f * (x**29) + 
            L0x20019884_f * (x**30) + L0x20019886_f * (x**31) + 
            L0x20019888_f * (x**32) + L0x2001988a_f * (x**33) + 
            L0x2001988c_f * (x**34) + L0x2001988e_f * (x**35) + 
            L0x20019890_f * (x**36) + L0x20019892_f * (x**37) + 
            L0x20019894_f * (x**38) + L0x20019896_f * (x**39) + 
            L0x20019898_f * (x**40) + L0x2001989a_f * (x**41) + 
            L0x2001989c_f * (x**42) + L0x2001989e_f * (x**43) + 
            L0x200198a0_f * (x**44) + L0x200198a2_f * (x**45) + 
            L0x200198a4_f * (x**46) + L0x200198a6_f * (x**47) + 
            L0x200198a8_f * (x**48) + L0x200198aa_f * (x**49) + 
            L0x200198ac_f * (x**50) + L0x200198ae_f * (x**51) + 
            L0x200198b0_f * (x**52) + L0x200198b2_f * (x**53) + 
            L0x200198b4_f * (x**54) + L0x200198b6_f * (x**55) + 
            L0x200198b8_f * (x**56) + L0x200198ba_f * (x**57) + 
            L0x200198bc_f * (x**58) + L0x200198be_f * (x**59) + 
            L0x200198c0_f * (x**60) + L0x200198c2_f * (x**61) + 
            L0x200198c4_f * (x**62) + L0x200198c6_f * (x**63) + 
            L0x200198c8_f * (x**64) + L0x200198ca_f * (x**65) + 
            L0x200198cc_f * (x**66) + L0x200198ce_f * (x**67) + 
            L0x200198d0_f * (x**68) + L0x200198d2_f * (x**69) + 
            L0x200198d4_f * (x**70) + L0x200198d6_f * (x**71) + 
            L0x200198d8_f * (x**72) + L0x200198da_f * (x**73) + 
            L0x200198dc_f * (x**74) + L0x200198de_f * (x**75) + 
            L0x200198e0_f * (x**76) + L0x200198e2_f * (x**77) + 
            L0x200198e4_f * (x**78) + L0x200198e6_f * (x**79) + 
            L0x200198e8_f * (x**80) + L0x200198ea_f * (x**81) + 
            L0x200198ec_f * (x**82) + L0x200198ee_f * (x**83) + 
            L0x200198f0_f * (x**84) + L0x200198f2_f * (x**85) + 
            L0x200198f4_f * (x**86) + L0x200198f6_f * (x**87) + 
            L0x200198f8_f * (x**88) + L0x200198fa_f * (x**89) + 
            L0x200198fc_f * (x**90) + L0x200198fe_f * (x**91) + 
            L0x20019900_f * (x**92) + L0x20019902_f * (x**93) + 
            L0x20019904_f * (x**94) + L0x20019906_f * (x**95) + 
            L0x20019908_f * (x**96) + L0x2001990a_f * (x**97) + 
            L0x2001990c_f * (x**98) + L0x2001990e_f * (x**99) + 
            L0x20019910_f * (x**100) + L0x20019912_f * (x**101) + 
            L0x20019914_f * (x**102) + L0x20019916_f * (x**103) + 
            L0x20019918_f * (x**104) + L0x2001991a_f * (x**105) + 
            L0x2001991c_f * (x**106) + L0x2001991e_f * (x**107) + 
            L0x20019920_f * (x**108) + L0x20019922_f * (x**109) + 
            L0x20019924_f * (x**110) + L0x20019926_f * (x**111) + 
            L0x20019928_f * (x**112) + L0x2001992a_f * (x**113) + 
            L0x2001992c_f * (x**114) + L0x2001992e_f * (x**115) + 
            L0x20019930_f * (x**116) + L0x20019932_f * (x**117) + 
            L0x20019934_f * (x**118) + L0x20019936_f * (x**119) + 
            L0x20019938_f * (x**120) + L0x2001993a_f * (x**121) + 
            L0x2001993c_f * (x**122) + L0x2001993e_f * (x**123) + 
            L0x20019940_f * (x**124) + L0x20019942_f * (x**125) + 
            L0x20019944_f * (x**126) + L0x20019946_f * (x**127) + 
            L0x20019948_f * (x**128) + L0x2001994a_f * (x**129) + 
            L0x2001994c_f * (x**130) + L0x2001994e_f * (x**131) + 
            L0x20019950_f * (x**132) + L0x20019952_f * (x**133) + 
            L0x20019954_f * (x**134) + L0x20019956_f * (x**135) + 
            L0x20019958_f * (x**136) + L0x2001995a_f * (x**137) + 
            L0x2001995c_f * (x**138) + L0x2001995e_f * (x**139) + 
            L0x20019960_f * (x**140) + L0x20019962_f * (x**141) + 
            L0x20019964_f * (x**142) + L0x20019966_f * (x**143) + 
            L0x20019968_f * (x**144) + L0x2001996a_f * (x**145) + 
            L0x2001996c_f * (x**146) + L0x2001996e_f * (x**147) + 
            L0x20019970_f * (x**148) + L0x20019972_f * (x**149) + 
            L0x20019974_f * (x**150) + L0x20019976_f * (x**151) + 
            L0x20019978_f * (x**152) + L0x2001997a_f * (x**153) + 
            L0x2001997c_f * (x**154) + L0x2001997e_f * (x**155) + 
            L0x20019980_f * (x**156) + L0x20019982_f * (x**157) + 
            L0x20019984_f * (x**158) + L0x20019986_f * (x**159) + 
            L0x20019988_f * (x**160) + L0x2001998a_f * (x**161) + 
            L0x2001998c_f * (x**162) + L0x2001998e_f * (x**163) + 
            L0x20019990_f * (x**164) + L0x20019992_f * (x**165) + 
            L0x20019994_f * (x**166) + L0x20019996_f * (x**167) + 
            L0x20019998_f * (x**168) + L0x2001999a_f * (x**169) + 
            L0x2001999c_f * (x**170) + L0x2001999e_f * (x**171) + 
            L0x200199a0_f * (x**172) + L0x200199a2_f * (x**173) + 
            L0x200199a4_f * (x**174) + L0x200199a6_f * (x**175) + 
            L0x200199a8_f * (x**176) + L0x200199aa_f * (x**177) + 
            L0x200199ac_f * (x**178) + L0x200199ae_f * (x**179) + 
            L0x200199b0_f * (x**180) + L0x200199b2_f * (x**181) + 
            L0x200199b4_f * (x**182) + L0x200199b6_f * (x**183) + 
            L0x200199b8_f * (x**184) + L0x200199ba_f * (x**185) + 
            L0x200199bc_f * (x**186) + L0x200199be_f * (x**187) + 
            L0x200199c0_f * (x**188) + L0x200199c2_f * (x**189) + 
            L0x200199c4_f * (x**190) + L0x200199c6_f * (x**191) + 
            L0x200199c8_f * (x**192) + L0x200199ca_f * (x**193) + 
            L0x200199cc_f * (x**194) + L0x200199ce_f * (x**195) + 
            L0x200199d0_f * (x**196) + L0x200199d2_f * (x**197) + 
            L0x200199d4_f * (x**198) + L0x200199d6_f * (x**199) + 
            L0x200199d8_f * (x**200) + L0x200199da_f * (x**201) + 
            L0x200199dc_f * (x**202) + L0x200199de_f * (x**203) + 
            L0x200199e0_f * (x**204) + L0x200199e2_f * (x**205) + 
            L0x200199e4_f * (x**206) + L0x200199e6_f * (x**207) + 
            L0x200199e8_f * (x**208) + L0x200199ea_f * (x**209) + 
            L0x200199ec_f * (x**210) + L0x200199ee_f * (x**211) + 
            L0x200199f0_f * (x**212) + L0x200199f2_f * (x**213) + 
            L0x200199f4_f * (x**214) + L0x200199f6_f * (x**215) + 
            L0x200199f8_f * (x**216) + L0x200199fa_f * (x**217) + 
            L0x200199fc_f * (x**218) + L0x200199fe_f * (x**219) + 
            L0x20019a00_f * (x**220) + L0x20019a02_f * (x**221) + 
            L0x20019a04_f * (x**222) + L0x20019a06_f * (x**223) + 
            L0x20019a08_f * (x**224) + L0x20019a0a_f * (x**225) + 
            L0x20019a0c_f * (x**226) + L0x20019a0e_f * (x**227) + 
            L0x20019a10_f * (x**228) + L0x20019a12_f * (x**229) + 
            L0x20019a14_f * (x**230) + L0x20019a16_f * (x**231) + 
            L0x20019a18_f * (x**232) + L0x20019a1a_f * (x**233) + 
            L0x20019a1c_f * (x**234) + L0x20019a1e_f * (x**235) + 
            L0x20019a20_f * (x**236) + L0x20019a22_f * (x**237) + 
            L0x20019a24_f * (x**238) + L0x20019a26_f * (x**239) + 
            L0x20019a28_f * (x**240) + L0x20019a2a_f * (x**241) + 
            L0x20019a2c_f * (x**242) + L0x20019a2e_f * (x**243) + 
            L0x20019a30_f * (x**244) + L0x20019a32_f * (x**245) + 
            L0x20019a34_f * (x**246) + L0x20019a36_f * (x**247) + 
            L0x20019a38_f * (x**248) + L0x20019a3a_f * (x**249) + 
            L0x20019a3c_f * (x**250) + L0x20019a3e_f * (x**251) + 
            L0x20019a40_f * (x**252) + L0x20019a42_f * (x**253) + 
            L0x20019a44_f * (x**254) + L0x20019a46_f * (x**255)
          )
          [25570049, x**4 - y_0_37 * 20377491, y_0_37 - 1],
    (* inp_poly_38 *)
    eqmod (2**32) * (inp_poly_38 * inp_poly_38)
          (
            L0x20019848_f * (x**0) + L0x2001984a_f * (x**1) + 
            L0x2001984c_f * (x**2) + L0x2001984e_f * (x**3) + 
            L0x20019850_f * (x**4) + L0x20019852_f * (x**5) + 
            L0x20019854_f * (x**6) + L0x20019856_f * (x**7) + 
            L0x20019858_f * (x**8) + L0x2001985a_f * (x**9) + 
            L0x2001985c_f * (x**10) + L0x2001985e_f * (x**11) + 
            L0x20019860_f * (x**12) + L0x20019862_f * (x**13) + 
            L0x20019864_f * (x**14) + L0x20019866_f * (x**15) + 
            L0x20019868_f * (x**16) + L0x2001986a_f * (x**17) + 
            L0x2001986c_f * (x**18) + L0x2001986e_f * (x**19) + 
            L0x20019870_f * (x**20) + L0x20019872_f * (x**21) + 
            L0x20019874_f * (x**22) + L0x20019876_f * (x**23) + 
            L0x20019878_f * (x**24) + L0x2001987a_f * (x**25) + 
            L0x2001987c_f * (x**26) + L0x2001987e_f * (x**27) + 
            L0x20019880_f * (x**28) + L0x20019882_f * (x**29) + 
            L0x20019884_f * (x**30) + L0x20019886_f * (x**31) + 
            L0x20019888_f * (x**32) + L0x2001988a_f * (x**33) + 
            L0x2001988c_f * (x**34) + L0x2001988e_f * (x**35) + 
            L0x20019890_f * (x**36) + L0x20019892_f * (x**37) + 
            L0x20019894_f * (x**38) + L0x20019896_f * (x**39) + 
            L0x20019898_f * (x**40) + L0x2001989a_f * (x**41) + 
            L0x2001989c_f * (x**42) + L0x2001989e_f * (x**43) + 
            L0x200198a0_f * (x**44) + L0x200198a2_f * (x**45) + 
            L0x200198a4_f * (x**46) + L0x200198a6_f * (x**47) + 
            L0x200198a8_f * (x**48) + L0x200198aa_f * (x**49) + 
            L0x200198ac_f * (x**50) + L0x200198ae_f * (x**51) + 
            L0x200198b0_f * (x**52) + L0x200198b2_f * (x**53) + 
            L0x200198b4_f * (x**54) + L0x200198b6_f * (x**55) + 
            L0x200198b8_f * (x**56) + L0x200198ba_f * (x**57) + 
            L0x200198bc_f * (x**58) + L0x200198be_f * (x**59) + 
            L0x200198c0_f * (x**60) + L0x200198c2_f * (x**61) + 
            L0x200198c4_f * (x**62) + L0x200198c6_f * (x**63) + 
            L0x200198c8_f * (x**64) + L0x200198ca_f * (x**65) + 
            L0x200198cc_f * (x**66) + L0x200198ce_f * (x**67) + 
            L0x200198d0_f * (x**68) + L0x200198d2_f * (x**69) + 
            L0x200198d4_f * (x**70) + L0x200198d6_f * (x**71) + 
            L0x200198d8_f * (x**72) + L0x200198da_f * (x**73) + 
            L0x200198dc_f * (x**74) + L0x200198de_f * (x**75) + 
            L0x200198e0_f * (x**76) + L0x200198e2_f * (x**77) + 
            L0x200198e4_f * (x**78) + L0x200198e6_f * (x**79) + 
            L0x200198e8_f * (x**80) + L0x200198ea_f * (x**81) + 
            L0x200198ec_f * (x**82) + L0x200198ee_f * (x**83) + 
            L0x200198f0_f * (x**84) + L0x200198f2_f * (x**85) + 
            L0x200198f4_f * (x**86) + L0x200198f6_f * (x**87) + 
            L0x200198f8_f * (x**88) + L0x200198fa_f * (x**89) + 
            L0x200198fc_f * (x**90) + L0x200198fe_f * (x**91) + 
            L0x20019900_f * (x**92) + L0x20019902_f * (x**93) + 
            L0x20019904_f * (x**94) + L0x20019906_f * (x**95) + 
            L0x20019908_f * (x**96) + L0x2001990a_f * (x**97) + 
            L0x2001990c_f * (x**98) + L0x2001990e_f * (x**99) + 
            L0x20019910_f * (x**100) + L0x20019912_f * (x**101) + 
            L0x20019914_f * (x**102) + L0x20019916_f * (x**103) + 
            L0x20019918_f * (x**104) + L0x2001991a_f * (x**105) + 
            L0x2001991c_f * (x**106) + L0x2001991e_f * (x**107) + 
            L0x20019920_f * (x**108) + L0x20019922_f * (x**109) + 
            L0x20019924_f * (x**110) + L0x20019926_f * (x**111) + 
            L0x20019928_f * (x**112) + L0x2001992a_f * (x**113) + 
            L0x2001992c_f * (x**114) + L0x2001992e_f * (x**115) + 
            L0x20019930_f * (x**116) + L0x20019932_f * (x**117) + 
            L0x20019934_f * (x**118) + L0x20019936_f * (x**119) + 
            L0x20019938_f * (x**120) + L0x2001993a_f * (x**121) + 
            L0x2001993c_f * (x**122) + L0x2001993e_f * (x**123) + 
            L0x20019940_f * (x**124) + L0x20019942_f * (x**125) + 
            L0x20019944_f * (x**126) + L0x20019946_f * (x**127) + 
            L0x20019948_f * (x**128) + L0x2001994a_f * (x**129) + 
            L0x2001994c_f * (x**130) + L0x2001994e_f * (x**131) + 
            L0x20019950_f * (x**132) + L0x20019952_f * (x**133) + 
            L0x20019954_f * (x**134) + L0x20019956_f * (x**135) + 
            L0x20019958_f * (x**136) + L0x2001995a_f * (x**137) + 
            L0x2001995c_f * (x**138) + L0x2001995e_f * (x**139) + 
            L0x20019960_f * (x**140) + L0x20019962_f * (x**141) + 
            L0x20019964_f * (x**142) + L0x20019966_f * (x**143) + 
            L0x20019968_f * (x**144) + L0x2001996a_f * (x**145) + 
            L0x2001996c_f * (x**146) + L0x2001996e_f * (x**147) + 
            L0x20019970_f * (x**148) + L0x20019972_f * (x**149) + 
            L0x20019974_f * (x**150) + L0x20019976_f * (x**151) + 
            L0x20019978_f * (x**152) + L0x2001997a_f * (x**153) + 
            L0x2001997c_f * (x**154) + L0x2001997e_f * (x**155) + 
            L0x20019980_f * (x**156) + L0x20019982_f * (x**157) + 
            L0x20019984_f * (x**158) + L0x20019986_f * (x**159) + 
            L0x20019988_f * (x**160) + L0x2001998a_f * (x**161) + 
            L0x2001998c_f * (x**162) + L0x2001998e_f * (x**163) + 
            L0x20019990_f * (x**164) + L0x20019992_f * (x**165) + 
            L0x20019994_f * (x**166) + L0x20019996_f * (x**167) + 
            L0x20019998_f * (x**168) + L0x2001999a_f * (x**169) + 
            L0x2001999c_f * (x**170) + L0x2001999e_f * (x**171) + 
            L0x200199a0_f * (x**172) + L0x200199a2_f * (x**173) + 
            L0x200199a4_f * (x**174) + L0x200199a6_f * (x**175) + 
            L0x200199a8_f * (x**176) + L0x200199aa_f * (x**177) + 
            L0x200199ac_f * (x**178) + L0x200199ae_f * (x**179) + 
            L0x200199b0_f * (x**180) + L0x200199b2_f * (x**181) + 
            L0x200199b4_f * (x**182) + L0x200199b6_f * (x**183) + 
            L0x200199b8_f * (x**184) + L0x200199ba_f * (x**185) + 
            L0x200199bc_f * (x**186) + L0x200199be_f * (x**187) + 
            L0x200199c0_f * (x**188) + L0x200199c2_f * (x**189) + 
            L0x200199c4_f * (x**190) + L0x200199c6_f * (x**191) + 
            L0x200199c8_f * (x**192) + L0x200199ca_f * (x**193) + 
            L0x200199cc_f * (x**194) + L0x200199ce_f * (x**195) + 
            L0x200199d0_f * (x**196) + L0x200199d2_f * (x**197) + 
            L0x200199d4_f * (x**198) + L0x200199d6_f * (x**199) + 
            L0x200199d8_f * (x**200) + L0x200199da_f * (x**201) + 
            L0x200199dc_f * (x**202) + L0x200199de_f * (x**203) + 
            L0x200199e0_f * (x**204) + L0x200199e2_f * (x**205) + 
            L0x200199e4_f * (x**206) + L0x200199e6_f * (x**207) + 
            L0x200199e8_f * (x**208) + L0x200199ea_f * (x**209) + 
            L0x200199ec_f * (x**210) + L0x200199ee_f * (x**211) + 
            L0x200199f0_f * (x**212) + L0x200199f2_f * (x**213) + 
            L0x200199f4_f * (x**214) + L0x200199f6_f * (x**215) + 
            L0x200199f8_f * (x**216) + L0x200199fa_f * (x**217) + 
            L0x200199fc_f * (x**218) + L0x200199fe_f * (x**219) + 
            L0x20019a00_f * (x**220) + L0x20019a02_f * (x**221) + 
            L0x20019a04_f * (x**222) + L0x20019a06_f * (x**223) + 
            L0x20019a08_f * (x**224) + L0x20019a0a_f * (x**225) + 
            L0x20019a0c_f * (x**226) + L0x20019a0e_f * (x**227) + 
            L0x20019a10_f * (x**228) + L0x20019a12_f * (x**229) + 
            L0x20019a14_f * (x**230) + L0x20019a16_f * (x**231) + 
            L0x20019a18_f * (x**232) + L0x20019a1a_f * (x**233) + 
            L0x20019a1c_f * (x**234) + L0x20019a1e_f * (x**235) + 
            L0x20019a20_f * (x**236) + L0x20019a22_f * (x**237) + 
            L0x20019a24_f * (x**238) + L0x20019a26_f * (x**239) + 
            L0x20019a28_f * (x**240) + L0x20019a2a_f * (x**241) + 
            L0x20019a2c_f * (x**242) + L0x20019a2e_f * (x**243) + 
            L0x20019a30_f * (x**244) + L0x20019a32_f * (x**245) + 
            L0x20019a34_f * (x**246) + L0x20019a36_f * (x**247) + 
            L0x20019a38_f * (x**248) + L0x20019a3a_f * (x**249) + 
            L0x20019a3c_f * (x**250) + L0x20019a3e_f * (x**251) + 
            L0x20019a40_f * (x**252) + L0x20019a42_f * (x**253) + 
            L0x20019a44_f * (x**254) + L0x20019a46_f * (x**255)
          )
          [25570049, x**4 - y_0_38 * 25163199, y_0_38 - 1],
    (* inp_poly_39 *)
    eqmod (2**32) * (inp_poly_39 * inp_poly_39)
          (
            L0x20019848_f * (x**0) + L0x2001984a_f * (x**1) + 
            L0x2001984c_f * (x**2) + L0x2001984e_f * (x**3) + 
            L0x20019850_f * (x**4) + L0x20019852_f * (x**5) + 
            L0x20019854_f * (x**6) + L0x20019856_f * (x**7) + 
            L0x20019858_f * (x**8) + L0x2001985a_f * (x**9) + 
            L0x2001985c_f * (x**10) + L0x2001985e_f * (x**11) + 
            L0x20019860_f * (x**12) + L0x20019862_f * (x**13) + 
            L0x20019864_f * (x**14) + L0x20019866_f * (x**15) + 
            L0x20019868_f * (x**16) + L0x2001986a_f * (x**17) + 
            L0x2001986c_f * (x**18) + L0x2001986e_f * (x**19) + 
            L0x20019870_f * (x**20) + L0x20019872_f * (x**21) + 
            L0x20019874_f * (x**22) + L0x20019876_f * (x**23) + 
            L0x20019878_f * (x**24) + L0x2001987a_f * (x**25) + 
            L0x2001987c_f * (x**26) + L0x2001987e_f * (x**27) + 
            L0x20019880_f * (x**28) + L0x20019882_f * (x**29) + 
            L0x20019884_f * (x**30) + L0x20019886_f * (x**31) + 
            L0x20019888_f * (x**32) + L0x2001988a_f * (x**33) + 
            L0x2001988c_f * (x**34) + L0x2001988e_f * (x**35) + 
            L0x20019890_f * (x**36) + L0x20019892_f * (x**37) + 
            L0x20019894_f * (x**38) + L0x20019896_f * (x**39) + 
            L0x20019898_f * (x**40) + L0x2001989a_f * (x**41) + 
            L0x2001989c_f * (x**42) + L0x2001989e_f * (x**43) + 
            L0x200198a0_f * (x**44) + L0x200198a2_f * (x**45) + 
            L0x200198a4_f * (x**46) + L0x200198a6_f * (x**47) + 
            L0x200198a8_f * (x**48) + L0x200198aa_f * (x**49) + 
            L0x200198ac_f * (x**50) + L0x200198ae_f * (x**51) + 
            L0x200198b0_f * (x**52) + L0x200198b2_f * (x**53) + 
            L0x200198b4_f * (x**54) + L0x200198b6_f * (x**55) + 
            L0x200198b8_f * (x**56) + L0x200198ba_f * (x**57) + 
            L0x200198bc_f * (x**58) + L0x200198be_f * (x**59) + 
            L0x200198c0_f * (x**60) + L0x200198c2_f * (x**61) + 
            L0x200198c4_f * (x**62) + L0x200198c6_f * (x**63) + 
            L0x200198c8_f * (x**64) + L0x200198ca_f * (x**65) + 
            L0x200198cc_f * (x**66) + L0x200198ce_f * (x**67) + 
            L0x200198d0_f * (x**68) + L0x200198d2_f * (x**69) + 
            L0x200198d4_f * (x**70) + L0x200198d6_f * (x**71) + 
            L0x200198d8_f * (x**72) + L0x200198da_f * (x**73) + 
            L0x200198dc_f * (x**74) + L0x200198de_f * (x**75) + 
            L0x200198e0_f * (x**76) + L0x200198e2_f * (x**77) + 
            L0x200198e4_f * (x**78) + L0x200198e6_f * (x**79) + 
            L0x200198e8_f * (x**80) + L0x200198ea_f * (x**81) + 
            L0x200198ec_f * (x**82) + L0x200198ee_f * (x**83) + 
            L0x200198f0_f * (x**84) + L0x200198f2_f * (x**85) + 
            L0x200198f4_f * (x**86) + L0x200198f6_f * (x**87) + 
            L0x200198f8_f * (x**88) + L0x200198fa_f * (x**89) + 
            L0x200198fc_f * (x**90) + L0x200198fe_f * (x**91) + 
            L0x20019900_f * (x**92) + L0x20019902_f * (x**93) + 
            L0x20019904_f * (x**94) + L0x20019906_f * (x**95) + 
            L0x20019908_f * (x**96) + L0x2001990a_f * (x**97) + 
            L0x2001990c_f * (x**98) + L0x2001990e_f * (x**99) + 
            L0x20019910_f * (x**100) + L0x20019912_f * (x**101) + 
            L0x20019914_f * (x**102) + L0x20019916_f * (x**103) + 
            L0x20019918_f * (x**104) + L0x2001991a_f * (x**105) + 
            L0x2001991c_f * (x**106) + L0x2001991e_f * (x**107) + 
            L0x20019920_f * (x**108) + L0x20019922_f * (x**109) + 
            L0x20019924_f * (x**110) + L0x20019926_f * (x**111) + 
            L0x20019928_f * (x**112) + L0x2001992a_f * (x**113) + 
            L0x2001992c_f * (x**114) + L0x2001992e_f * (x**115) + 
            L0x20019930_f * (x**116) + L0x20019932_f * (x**117) + 
            L0x20019934_f * (x**118) + L0x20019936_f * (x**119) + 
            L0x20019938_f * (x**120) + L0x2001993a_f * (x**121) + 
            L0x2001993c_f * (x**122) + L0x2001993e_f * (x**123) + 
            L0x20019940_f * (x**124) + L0x20019942_f * (x**125) + 
            L0x20019944_f * (x**126) + L0x20019946_f * (x**127) + 
            L0x20019948_f * (x**128) + L0x2001994a_f * (x**129) + 
            L0x2001994c_f * (x**130) + L0x2001994e_f * (x**131) + 
            L0x20019950_f * (x**132) + L0x20019952_f * (x**133) + 
            L0x20019954_f * (x**134) + L0x20019956_f * (x**135) + 
            L0x20019958_f * (x**136) + L0x2001995a_f * (x**137) + 
            L0x2001995c_f * (x**138) + L0x2001995e_f * (x**139) + 
            L0x20019960_f * (x**140) + L0x20019962_f * (x**141) + 
            L0x20019964_f * (x**142) + L0x20019966_f * (x**143) + 
            L0x20019968_f * (x**144) + L0x2001996a_f * (x**145) + 
            L0x2001996c_f * (x**146) + L0x2001996e_f * (x**147) + 
            L0x20019970_f * (x**148) + L0x20019972_f * (x**149) + 
            L0x20019974_f * (x**150) + L0x20019976_f * (x**151) + 
            L0x20019978_f * (x**152) + L0x2001997a_f * (x**153) + 
            L0x2001997c_f * (x**154) + L0x2001997e_f * (x**155) + 
            L0x20019980_f * (x**156) + L0x20019982_f * (x**157) + 
            L0x20019984_f * (x**158) + L0x20019986_f * (x**159) + 
            L0x20019988_f * (x**160) + L0x2001998a_f * (x**161) + 
            L0x2001998c_f * (x**162) + L0x2001998e_f * (x**163) + 
            L0x20019990_f * (x**164) + L0x20019992_f * (x**165) + 
            L0x20019994_f * (x**166) + L0x20019996_f * (x**167) + 
            L0x20019998_f * (x**168) + L0x2001999a_f * (x**169) + 
            L0x2001999c_f * (x**170) + L0x2001999e_f * (x**171) + 
            L0x200199a0_f * (x**172) + L0x200199a2_f * (x**173) + 
            L0x200199a4_f * (x**174) + L0x200199a6_f * (x**175) + 
            L0x200199a8_f * (x**176) + L0x200199aa_f * (x**177) + 
            L0x200199ac_f * (x**178) + L0x200199ae_f * (x**179) + 
            L0x200199b0_f * (x**180) + L0x200199b2_f * (x**181) + 
            L0x200199b4_f * (x**182) + L0x200199b6_f * (x**183) + 
            L0x200199b8_f * (x**184) + L0x200199ba_f * (x**185) + 
            L0x200199bc_f * (x**186) + L0x200199be_f * (x**187) + 
            L0x200199c0_f * (x**188) + L0x200199c2_f * (x**189) + 
            L0x200199c4_f * (x**190) + L0x200199c6_f * (x**191) + 
            L0x200199c8_f * (x**192) + L0x200199ca_f * (x**193) + 
            L0x200199cc_f * (x**194) + L0x200199ce_f * (x**195) + 
            L0x200199d0_f * (x**196) + L0x200199d2_f * (x**197) + 
            L0x200199d4_f * (x**198) + L0x200199d6_f * (x**199) + 
            L0x200199d8_f * (x**200) + L0x200199da_f * (x**201) + 
            L0x200199dc_f * (x**202) + L0x200199de_f * (x**203) + 
            L0x200199e0_f * (x**204) + L0x200199e2_f * (x**205) + 
            L0x200199e4_f * (x**206) + L0x200199e6_f * (x**207) + 
            L0x200199e8_f * (x**208) + L0x200199ea_f * (x**209) + 
            L0x200199ec_f * (x**210) + L0x200199ee_f * (x**211) + 
            L0x200199f0_f * (x**212) + L0x200199f2_f * (x**213) + 
            L0x200199f4_f * (x**214) + L0x200199f6_f * (x**215) + 
            L0x200199f8_f * (x**216) + L0x200199fa_f * (x**217) + 
            L0x200199fc_f * (x**218) + L0x200199fe_f * (x**219) + 
            L0x20019a00_f * (x**220) + L0x20019a02_f * (x**221) + 
            L0x20019a04_f * (x**222) + L0x20019a06_f * (x**223) + 
            L0x20019a08_f * (x**224) + L0x20019a0a_f * (x**225) + 
            L0x20019a0c_f * (x**226) + L0x20019a0e_f * (x**227) + 
            L0x20019a10_f * (x**228) + L0x20019a12_f * (x**229) + 
            L0x20019a14_f * (x**230) + L0x20019a16_f * (x**231) + 
            L0x20019a18_f * (x**232) + L0x20019a1a_f * (x**233) + 
            L0x20019a1c_f * (x**234) + L0x20019a1e_f * (x**235) + 
            L0x20019a20_f * (x**236) + L0x20019a22_f * (x**237) + 
            L0x20019a24_f * (x**238) + L0x20019a26_f * (x**239) + 
            L0x20019a28_f * (x**240) + L0x20019a2a_f * (x**241) + 
            L0x20019a2c_f * (x**242) + L0x20019a2e_f * (x**243) + 
            L0x20019a30_f * (x**244) + L0x20019a32_f * (x**245) + 
            L0x20019a34_f * (x**246) + L0x20019a36_f * (x**247) + 
            L0x20019a38_f * (x**248) + L0x20019a3a_f * (x**249) + 
            L0x20019a3c_f * (x**250) + L0x20019a3e_f * (x**251) + 
            L0x20019a40_f * (x**252) + L0x20019a42_f * (x**253) + 
            L0x20019a44_f * (x**254) + L0x20019a46_f * (x**255)
          )
          [25570049, x**4 - y_0_39 * 406850, y_0_39 - 1]
  ] prove with [cuts [46, 54], all ghosts]
  &&
  true
;

cut (* 65 *)
  true && true;

(* slice 5 *)
cut (* 66 *)
  and [
    (* inp_poly_40 *)
    eqmod (2**32) * (inp_poly_40 * inp_poly_40)
          (
            L0x20019848_f * (x**0) + L0x2001984a_f * (x**1) + 
            L0x2001984c_f * (x**2) + L0x2001984e_f * (x**3) + 
            L0x20019850_f * (x**4) + L0x20019852_f * (x**5) + 
            L0x20019854_f * (x**6) + L0x20019856_f * (x**7) + 
            L0x20019858_f * (x**8) + L0x2001985a_f * (x**9) + 
            L0x2001985c_f * (x**10) + L0x2001985e_f * (x**11) + 
            L0x20019860_f * (x**12) + L0x20019862_f * (x**13) + 
            L0x20019864_f * (x**14) + L0x20019866_f * (x**15) + 
            L0x20019868_f * (x**16) + L0x2001986a_f * (x**17) + 
            L0x2001986c_f * (x**18) + L0x2001986e_f * (x**19) + 
            L0x20019870_f * (x**20) + L0x20019872_f * (x**21) + 
            L0x20019874_f * (x**22) + L0x20019876_f * (x**23) + 
            L0x20019878_f * (x**24) + L0x2001987a_f * (x**25) + 
            L0x2001987c_f * (x**26) + L0x2001987e_f * (x**27) + 
            L0x20019880_f * (x**28) + L0x20019882_f * (x**29) + 
            L0x20019884_f * (x**30) + L0x20019886_f * (x**31) + 
            L0x20019888_f * (x**32) + L0x2001988a_f * (x**33) + 
            L0x2001988c_f * (x**34) + L0x2001988e_f * (x**35) + 
            L0x20019890_f * (x**36) + L0x20019892_f * (x**37) + 
            L0x20019894_f * (x**38) + L0x20019896_f * (x**39) + 
            L0x20019898_f * (x**40) + L0x2001989a_f * (x**41) + 
            L0x2001989c_f * (x**42) + L0x2001989e_f * (x**43) + 
            L0x200198a0_f * (x**44) + L0x200198a2_f * (x**45) + 
            L0x200198a4_f * (x**46) + L0x200198a6_f * (x**47) + 
            L0x200198a8_f * (x**48) + L0x200198aa_f * (x**49) + 
            L0x200198ac_f * (x**50) + L0x200198ae_f * (x**51) + 
            L0x200198b0_f * (x**52) + L0x200198b2_f * (x**53) + 
            L0x200198b4_f * (x**54) + L0x200198b6_f * (x**55) + 
            L0x200198b8_f * (x**56) + L0x200198ba_f * (x**57) + 
            L0x200198bc_f * (x**58) + L0x200198be_f * (x**59) + 
            L0x200198c0_f * (x**60) + L0x200198c2_f * (x**61) + 
            L0x200198c4_f * (x**62) + L0x200198c6_f * (x**63) + 
            L0x200198c8_f * (x**64) + L0x200198ca_f * (x**65) + 
            L0x200198cc_f * (x**66) + L0x200198ce_f * (x**67) + 
            L0x200198d0_f * (x**68) + L0x200198d2_f * (x**69) + 
            L0x200198d4_f * (x**70) + L0x200198d6_f * (x**71) + 
            L0x200198d8_f * (x**72) + L0x200198da_f * (x**73) + 
            L0x200198dc_f * (x**74) + L0x200198de_f * (x**75) + 
            L0x200198e0_f * (x**76) + L0x200198e2_f * (x**77) + 
            L0x200198e4_f * (x**78) + L0x200198e6_f * (x**79) + 
            L0x200198e8_f * (x**80) + L0x200198ea_f * (x**81) + 
            L0x200198ec_f * (x**82) + L0x200198ee_f * (x**83) + 
            L0x200198f0_f * (x**84) + L0x200198f2_f * (x**85) + 
            L0x200198f4_f * (x**86) + L0x200198f6_f * (x**87) + 
            L0x200198f8_f * (x**88) + L0x200198fa_f * (x**89) + 
            L0x200198fc_f * (x**90) + L0x200198fe_f * (x**91) + 
            L0x20019900_f * (x**92) + L0x20019902_f * (x**93) + 
            L0x20019904_f * (x**94) + L0x20019906_f * (x**95) + 
            L0x20019908_f * (x**96) + L0x2001990a_f * (x**97) + 
            L0x2001990c_f * (x**98) + L0x2001990e_f * (x**99) + 
            L0x20019910_f * (x**100) + L0x20019912_f * (x**101) + 
            L0x20019914_f * (x**102) + L0x20019916_f * (x**103) + 
            L0x20019918_f * (x**104) + L0x2001991a_f * (x**105) + 
            L0x2001991c_f * (x**106) + L0x2001991e_f * (x**107) + 
            L0x20019920_f * (x**108) + L0x20019922_f * (x**109) + 
            L0x20019924_f * (x**110) + L0x20019926_f * (x**111) + 
            L0x20019928_f * (x**112) + L0x2001992a_f * (x**113) + 
            L0x2001992c_f * (x**114) + L0x2001992e_f * (x**115) + 
            L0x20019930_f * (x**116) + L0x20019932_f * (x**117) + 
            L0x20019934_f * (x**118) + L0x20019936_f * (x**119) + 
            L0x20019938_f * (x**120) + L0x2001993a_f * (x**121) + 
            L0x2001993c_f * (x**122) + L0x2001993e_f * (x**123) + 
            L0x20019940_f * (x**124) + L0x20019942_f * (x**125) + 
            L0x20019944_f * (x**126) + L0x20019946_f * (x**127) + 
            L0x20019948_f * (x**128) + L0x2001994a_f * (x**129) + 
            L0x2001994c_f * (x**130) + L0x2001994e_f * (x**131) + 
            L0x20019950_f * (x**132) + L0x20019952_f * (x**133) + 
            L0x20019954_f * (x**134) + L0x20019956_f * (x**135) + 
            L0x20019958_f * (x**136) + L0x2001995a_f * (x**137) + 
            L0x2001995c_f * (x**138) + L0x2001995e_f * (x**139) + 
            L0x20019960_f * (x**140) + L0x20019962_f * (x**141) + 
            L0x20019964_f * (x**142) + L0x20019966_f * (x**143) + 
            L0x20019968_f * (x**144) + L0x2001996a_f * (x**145) + 
            L0x2001996c_f * (x**146) + L0x2001996e_f * (x**147) + 
            L0x20019970_f * (x**148) + L0x20019972_f * (x**149) + 
            L0x20019974_f * (x**150) + L0x20019976_f * (x**151) + 
            L0x20019978_f * (x**152) + L0x2001997a_f * (x**153) + 
            L0x2001997c_f * (x**154) + L0x2001997e_f * (x**155) + 
            L0x20019980_f * (x**156) + L0x20019982_f * (x**157) + 
            L0x20019984_f * (x**158) + L0x20019986_f * (x**159) + 
            L0x20019988_f * (x**160) + L0x2001998a_f * (x**161) + 
            L0x2001998c_f * (x**162) + L0x2001998e_f * (x**163) + 
            L0x20019990_f * (x**164) + L0x20019992_f * (x**165) + 
            L0x20019994_f * (x**166) + L0x20019996_f * (x**167) + 
            L0x20019998_f * (x**168) + L0x2001999a_f * (x**169) + 
            L0x2001999c_f * (x**170) + L0x2001999e_f * (x**171) + 
            L0x200199a0_f * (x**172) + L0x200199a2_f * (x**173) + 
            L0x200199a4_f * (x**174) + L0x200199a6_f * (x**175) + 
            L0x200199a8_f * (x**176) + L0x200199aa_f * (x**177) + 
            L0x200199ac_f * (x**178) + L0x200199ae_f * (x**179) + 
            L0x200199b0_f * (x**180) + L0x200199b2_f * (x**181) + 
            L0x200199b4_f * (x**182) + L0x200199b6_f * (x**183) + 
            L0x200199b8_f * (x**184) + L0x200199ba_f * (x**185) + 
            L0x200199bc_f * (x**186) + L0x200199be_f * (x**187) + 
            L0x200199c0_f * (x**188) + L0x200199c2_f * (x**189) + 
            L0x200199c4_f * (x**190) + L0x200199c6_f * (x**191) + 
            L0x200199c8_f * (x**192) + L0x200199ca_f * (x**193) + 
            L0x200199cc_f * (x**194) + L0x200199ce_f * (x**195) + 
            L0x200199d0_f * (x**196) + L0x200199d2_f * (x**197) + 
            L0x200199d4_f * (x**198) + L0x200199d6_f * (x**199) + 
            L0x200199d8_f * (x**200) + L0x200199da_f * (x**201) + 
            L0x200199dc_f * (x**202) + L0x200199de_f * (x**203) + 
            L0x200199e0_f * (x**204) + L0x200199e2_f * (x**205) + 
            L0x200199e4_f * (x**206) + L0x200199e6_f * (x**207) + 
            L0x200199e8_f * (x**208) + L0x200199ea_f * (x**209) + 
            L0x200199ec_f * (x**210) + L0x200199ee_f * (x**211) + 
            L0x200199f0_f * (x**212) + L0x200199f2_f * (x**213) + 
            L0x200199f4_f * (x**214) + L0x200199f6_f * (x**215) + 
            L0x200199f8_f * (x**216) + L0x200199fa_f * (x**217) + 
            L0x200199fc_f * (x**218) + L0x200199fe_f * (x**219) + 
            L0x20019a00_f * (x**220) + L0x20019a02_f * (x**221) + 
            L0x20019a04_f * (x**222) + L0x20019a06_f * (x**223) + 
            L0x20019a08_f * (x**224) + L0x20019a0a_f * (x**225) + 
            L0x20019a0c_f * (x**226) + L0x20019a0e_f * (x**227) + 
            L0x20019a10_f * (x**228) + L0x20019a12_f * (x**229) + 
            L0x20019a14_f * (x**230) + L0x20019a16_f * (x**231) + 
            L0x20019a18_f * (x**232) + L0x20019a1a_f * (x**233) + 
            L0x20019a1c_f * (x**234) + L0x20019a1e_f * (x**235) + 
            L0x20019a20_f * (x**236) + L0x20019a22_f * (x**237) + 
            L0x20019a24_f * (x**238) + L0x20019a26_f * (x**239) + 
            L0x20019a28_f * (x**240) + L0x20019a2a_f * (x**241) + 
            L0x20019a2c_f * (x**242) + L0x20019a2e_f * (x**243) + 
            L0x20019a30_f * (x**244) + L0x20019a32_f * (x**245) + 
            L0x20019a34_f * (x**246) + L0x20019a36_f * (x**247) + 
            L0x20019a38_f * (x**248) + L0x20019a3a_f * (x**249) + 
            L0x20019a3c_f * (x**250) + L0x20019a3e_f * (x**251) + 
            L0x20019a40_f * (x**252) + L0x20019a42_f * (x**253) + 
            L0x20019a44_f * (x**254) + L0x20019a46_f * (x**255)
          )
          [25570049, x**4 - y_0_40 * 19921963, y_0_40 - 1],
    (* inp_poly_41 *)
    eqmod (2**32) * (inp_poly_41 * inp_poly_41)
          (
            L0x20019848_f * (x**0) + L0x2001984a_f * (x**1) + 
            L0x2001984c_f * (x**2) + L0x2001984e_f * (x**3) + 
            L0x20019850_f * (x**4) + L0x20019852_f * (x**5) + 
            L0x20019854_f * (x**6) + L0x20019856_f * (x**7) + 
            L0x20019858_f * (x**8) + L0x2001985a_f * (x**9) + 
            L0x2001985c_f * (x**10) + L0x2001985e_f * (x**11) + 
            L0x20019860_f * (x**12) + L0x20019862_f * (x**13) + 
            L0x20019864_f * (x**14) + L0x20019866_f * (x**15) + 
            L0x20019868_f * (x**16) + L0x2001986a_f * (x**17) + 
            L0x2001986c_f * (x**18) + L0x2001986e_f * (x**19) + 
            L0x20019870_f * (x**20) + L0x20019872_f * (x**21) + 
            L0x20019874_f * (x**22) + L0x20019876_f * (x**23) + 
            L0x20019878_f * (x**24) + L0x2001987a_f * (x**25) + 
            L0x2001987c_f * (x**26) + L0x2001987e_f * (x**27) + 
            L0x20019880_f * (x**28) + L0x20019882_f * (x**29) + 
            L0x20019884_f * (x**30) + L0x20019886_f * (x**31) + 
            L0x20019888_f * (x**32) + L0x2001988a_f * (x**33) + 
            L0x2001988c_f * (x**34) + L0x2001988e_f * (x**35) + 
            L0x20019890_f * (x**36) + L0x20019892_f * (x**37) + 
            L0x20019894_f * (x**38) + L0x20019896_f * (x**39) + 
            L0x20019898_f * (x**40) + L0x2001989a_f * (x**41) + 
            L0x2001989c_f * (x**42) + L0x2001989e_f * (x**43) + 
            L0x200198a0_f * (x**44) + L0x200198a2_f * (x**45) + 
            L0x200198a4_f * (x**46) + L0x200198a6_f * (x**47) + 
            L0x200198a8_f * (x**48) + L0x200198aa_f * (x**49) + 
            L0x200198ac_f * (x**50) + L0x200198ae_f * (x**51) + 
            L0x200198b0_f * (x**52) + L0x200198b2_f * (x**53) + 
            L0x200198b4_f * (x**54) + L0x200198b6_f * (x**55) + 
            L0x200198b8_f * (x**56) + L0x200198ba_f * (x**57) + 
            L0x200198bc_f * (x**58) + L0x200198be_f * (x**59) + 
            L0x200198c0_f * (x**60) + L0x200198c2_f * (x**61) + 
            L0x200198c4_f * (x**62) + L0x200198c6_f * (x**63) + 
            L0x200198c8_f * (x**64) + L0x200198ca_f * (x**65) + 
            L0x200198cc_f * (x**66) + L0x200198ce_f * (x**67) + 
            L0x200198d0_f * (x**68) + L0x200198d2_f * (x**69) + 
            L0x200198d4_f * (x**70) + L0x200198d6_f * (x**71) + 
            L0x200198d8_f * (x**72) + L0x200198da_f * (x**73) + 
            L0x200198dc_f * (x**74) + L0x200198de_f * (x**75) + 
            L0x200198e0_f * (x**76) + L0x200198e2_f * (x**77) + 
            L0x200198e4_f * (x**78) + L0x200198e6_f * (x**79) + 
            L0x200198e8_f * (x**80) + L0x200198ea_f * (x**81) + 
            L0x200198ec_f * (x**82) + L0x200198ee_f * (x**83) + 
            L0x200198f0_f * (x**84) + L0x200198f2_f * (x**85) + 
            L0x200198f4_f * (x**86) + L0x200198f6_f * (x**87) + 
            L0x200198f8_f * (x**88) + L0x200198fa_f * (x**89) + 
            L0x200198fc_f * (x**90) + L0x200198fe_f * (x**91) + 
            L0x20019900_f * (x**92) + L0x20019902_f * (x**93) + 
            L0x20019904_f * (x**94) + L0x20019906_f * (x**95) + 
            L0x20019908_f * (x**96) + L0x2001990a_f * (x**97) + 
            L0x2001990c_f * (x**98) + L0x2001990e_f * (x**99) + 
            L0x20019910_f * (x**100) + L0x20019912_f * (x**101) + 
            L0x20019914_f * (x**102) + L0x20019916_f * (x**103) + 
            L0x20019918_f * (x**104) + L0x2001991a_f * (x**105) + 
            L0x2001991c_f * (x**106) + L0x2001991e_f * (x**107) + 
            L0x20019920_f * (x**108) + L0x20019922_f * (x**109) + 
            L0x20019924_f * (x**110) + L0x20019926_f * (x**111) + 
            L0x20019928_f * (x**112) + L0x2001992a_f * (x**113) + 
            L0x2001992c_f * (x**114) + L0x2001992e_f * (x**115) + 
            L0x20019930_f * (x**116) + L0x20019932_f * (x**117) + 
            L0x20019934_f * (x**118) + L0x20019936_f * (x**119) + 
            L0x20019938_f * (x**120) + L0x2001993a_f * (x**121) + 
            L0x2001993c_f * (x**122) + L0x2001993e_f * (x**123) + 
            L0x20019940_f * (x**124) + L0x20019942_f * (x**125) + 
            L0x20019944_f * (x**126) + L0x20019946_f * (x**127) + 
            L0x20019948_f * (x**128) + L0x2001994a_f * (x**129) + 
            L0x2001994c_f * (x**130) + L0x2001994e_f * (x**131) + 
            L0x20019950_f * (x**132) + L0x20019952_f * (x**133) + 
            L0x20019954_f * (x**134) + L0x20019956_f * (x**135) + 
            L0x20019958_f * (x**136) + L0x2001995a_f * (x**137) + 
            L0x2001995c_f * (x**138) + L0x2001995e_f * (x**139) + 
            L0x20019960_f * (x**140) + L0x20019962_f * (x**141) + 
            L0x20019964_f * (x**142) + L0x20019966_f * (x**143) + 
            L0x20019968_f * (x**144) + L0x2001996a_f * (x**145) + 
            L0x2001996c_f * (x**146) + L0x2001996e_f * (x**147) + 
            L0x20019970_f * (x**148) + L0x20019972_f * (x**149) + 
            L0x20019974_f * (x**150) + L0x20019976_f * (x**151) + 
            L0x20019978_f * (x**152) + L0x2001997a_f * (x**153) + 
            L0x2001997c_f * (x**154) + L0x2001997e_f * (x**155) + 
            L0x20019980_f * (x**156) + L0x20019982_f * (x**157) + 
            L0x20019984_f * (x**158) + L0x20019986_f * (x**159) + 
            L0x20019988_f * (x**160) + L0x2001998a_f * (x**161) + 
            L0x2001998c_f * (x**162) + L0x2001998e_f * (x**163) + 
            L0x20019990_f * (x**164) + L0x20019992_f * (x**165) + 
            L0x20019994_f * (x**166) + L0x20019996_f * (x**167) + 
            L0x20019998_f * (x**168) + L0x2001999a_f * (x**169) + 
            L0x2001999c_f * (x**170) + L0x2001999e_f * (x**171) + 
            L0x200199a0_f * (x**172) + L0x200199a2_f * (x**173) + 
            L0x200199a4_f * (x**174) + L0x200199a6_f * (x**175) + 
            L0x200199a8_f * (x**176) + L0x200199aa_f * (x**177) + 
            L0x200199ac_f * (x**178) + L0x200199ae_f * (x**179) + 
            L0x200199b0_f * (x**180) + L0x200199b2_f * (x**181) + 
            L0x200199b4_f * (x**182) + L0x200199b6_f * (x**183) + 
            L0x200199b8_f * (x**184) + L0x200199ba_f * (x**185) + 
            L0x200199bc_f * (x**186) + L0x200199be_f * (x**187) + 
            L0x200199c0_f * (x**188) + L0x200199c2_f * (x**189) + 
            L0x200199c4_f * (x**190) + L0x200199c6_f * (x**191) + 
            L0x200199c8_f * (x**192) + L0x200199ca_f * (x**193) + 
            L0x200199cc_f * (x**194) + L0x200199ce_f * (x**195) + 
            L0x200199d0_f * (x**196) + L0x200199d2_f * (x**197) + 
            L0x200199d4_f * (x**198) + L0x200199d6_f * (x**199) + 
            L0x200199d8_f * (x**200) + L0x200199da_f * (x**201) + 
            L0x200199dc_f * (x**202) + L0x200199de_f * (x**203) + 
            L0x200199e0_f * (x**204) + L0x200199e2_f * (x**205) + 
            L0x200199e4_f * (x**206) + L0x200199e6_f * (x**207) + 
            L0x200199e8_f * (x**208) + L0x200199ea_f * (x**209) + 
            L0x200199ec_f * (x**210) + L0x200199ee_f * (x**211) + 
            L0x200199f0_f * (x**212) + L0x200199f2_f * (x**213) + 
            L0x200199f4_f * (x**214) + L0x200199f6_f * (x**215) + 
            L0x200199f8_f * (x**216) + L0x200199fa_f * (x**217) + 
            L0x200199fc_f * (x**218) + L0x200199fe_f * (x**219) + 
            L0x20019a00_f * (x**220) + L0x20019a02_f * (x**221) + 
            L0x20019a04_f * (x**222) + L0x20019a06_f * (x**223) + 
            L0x20019a08_f * (x**224) + L0x20019a0a_f * (x**225) + 
            L0x20019a0c_f * (x**226) + L0x20019a0e_f * (x**227) + 
            L0x20019a10_f * (x**228) + L0x20019a12_f * (x**229) + 
            L0x20019a14_f * (x**230) + L0x20019a16_f * (x**231) + 
            L0x20019a18_f * (x**232) + L0x20019a1a_f * (x**233) + 
            L0x20019a1c_f * (x**234) + L0x20019a1e_f * (x**235) + 
            L0x20019a20_f * (x**236) + L0x20019a22_f * (x**237) + 
            L0x20019a24_f * (x**238) + L0x20019a26_f * (x**239) + 
            L0x20019a28_f * (x**240) + L0x20019a2a_f * (x**241) + 
            L0x20019a2c_f * (x**242) + L0x20019a2e_f * (x**243) + 
            L0x20019a30_f * (x**244) + L0x20019a32_f * (x**245) + 
            L0x20019a34_f * (x**246) + L0x20019a36_f * (x**247) + 
            L0x20019a38_f * (x**248) + L0x20019a3a_f * (x**249) + 
            L0x20019a3c_f * (x**250) + L0x20019a3e_f * (x**251) + 
            L0x20019a40_f * (x**252) + L0x20019a42_f * (x**253) + 
            L0x20019a44_f * (x**254) + L0x20019a46_f * (x**255)
          )
          [25570049, x**4 - y_0_41 * 5648086, y_0_41 - 1],
    (* inp_poly_42 *)
    eqmod (2**32) * (inp_poly_42 * inp_poly_42)
          (
            L0x20019848_f * (x**0) + L0x2001984a_f * (x**1) + 
            L0x2001984c_f * (x**2) + L0x2001984e_f * (x**3) + 
            L0x20019850_f * (x**4) + L0x20019852_f * (x**5) + 
            L0x20019854_f * (x**6) + L0x20019856_f * (x**7) + 
            L0x20019858_f * (x**8) + L0x2001985a_f * (x**9) + 
            L0x2001985c_f * (x**10) + L0x2001985e_f * (x**11) + 
            L0x20019860_f * (x**12) + L0x20019862_f * (x**13) + 
            L0x20019864_f * (x**14) + L0x20019866_f * (x**15) + 
            L0x20019868_f * (x**16) + L0x2001986a_f * (x**17) + 
            L0x2001986c_f * (x**18) + L0x2001986e_f * (x**19) + 
            L0x20019870_f * (x**20) + L0x20019872_f * (x**21) + 
            L0x20019874_f * (x**22) + L0x20019876_f * (x**23) + 
            L0x20019878_f * (x**24) + L0x2001987a_f * (x**25) + 
            L0x2001987c_f * (x**26) + L0x2001987e_f * (x**27) + 
            L0x20019880_f * (x**28) + L0x20019882_f * (x**29) + 
            L0x20019884_f * (x**30) + L0x20019886_f * (x**31) + 
            L0x20019888_f * (x**32) + L0x2001988a_f * (x**33) + 
            L0x2001988c_f * (x**34) + L0x2001988e_f * (x**35) + 
            L0x20019890_f * (x**36) + L0x20019892_f * (x**37) + 
            L0x20019894_f * (x**38) + L0x20019896_f * (x**39) + 
            L0x20019898_f * (x**40) + L0x2001989a_f * (x**41) + 
            L0x2001989c_f * (x**42) + L0x2001989e_f * (x**43) + 
            L0x200198a0_f * (x**44) + L0x200198a2_f * (x**45) + 
            L0x200198a4_f * (x**46) + L0x200198a6_f * (x**47) + 
            L0x200198a8_f * (x**48) + L0x200198aa_f * (x**49) + 
            L0x200198ac_f * (x**50) + L0x200198ae_f * (x**51) + 
            L0x200198b0_f * (x**52) + L0x200198b2_f * (x**53) + 
            L0x200198b4_f * (x**54) + L0x200198b6_f * (x**55) + 
            L0x200198b8_f * (x**56) + L0x200198ba_f * (x**57) + 
            L0x200198bc_f * (x**58) + L0x200198be_f * (x**59) + 
            L0x200198c0_f * (x**60) + L0x200198c2_f * (x**61) + 
            L0x200198c4_f * (x**62) + L0x200198c6_f * (x**63) + 
            L0x200198c8_f * (x**64) + L0x200198ca_f * (x**65) + 
            L0x200198cc_f * (x**66) + L0x200198ce_f * (x**67) + 
            L0x200198d0_f * (x**68) + L0x200198d2_f * (x**69) + 
            L0x200198d4_f * (x**70) + L0x200198d6_f * (x**71) + 
            L0x200198d8_f * (x**72) + L0x200198da_f * (x**73) + 
            L0x200198dc_f * (x**74) + L0x200198de_f * (x**75) + 
            L0x200198e0_f * (x**76) + L0x200198e2_f * (x**77) + 
            L0x200198e4_f * (x**78) + L0x200198e6_f * (x**79) + 
            L0x200198e8_f * (x**80) + L0x200198ea_f * (x**81) + 
            L0x200198ec_f * (x**82) + L0x200198ee_f * (x**83) + 
            L0x200198f0_f * (x**84) + L0x200198f2_f * (x**85) + 
            L0x200198f4_f * (x**86) + L0x200198f6_f * (x**87) + 
            L0x200198f8_f * (x**88) + L0x200198fa_f * (x**89) + 
            L0x200198fc_f * (x**90) + L0x200198fe_f * (x**91) + 
            L0x20019900_f * (x**92) + L0x20019902_f * (x**93) + 
            L0x20019904_f * (x**94) + L0x20019906_f * (x**95) + 
            L0x20019908_f * (x**96) + L0x2001990a_f * (x**97) + 
            L0x2001990c_f * (x**98) + L0x2001990e_f * (x**99) + 
            L0x20019910_f * (x**100) + L0x20019912_f * (x**101) + 
            L0x20019914_f * (x**102) + L0x20019916_f * (x**103) + 
            L0x20019918_f * (x**104) + L0x2001991a_f * (x**105) + 
            L0x2001991c_f * (x**106) + L0x2001991e_f * (x**107) + 
            L0x20019920_f * (x**108) + L0x20019922_f * (x**109) + 
            L0x20019924_f * (x**110) + L0x20019926_f * (x**111) + 
            L0x20019928_f * (x**112) + L0x2001992a_f * (x**113) + 
            L0x2001992c_f * (x**114) + L0x2001992e_f * (x**115) + 
            L0x20019930_f * (x**116) + L0x20019932_f * (x**117) + 
            L0x20019934_f * (x**118) + L0x20019936_f * (x**119) + 
            L0x20019938_f * (x**120) + L0x2001993a_f * (x**121) + 
            L0x2001993c_f * (x**122) + L0x2001993e_f * (x**123) + 
            L0x20019940_f * (x**124) + L0x20019942_f * (x**125) + 
            L0x20019944_f * (x**126) + L0x20019946_f * (x**127) + 
            L0x20019948_f * (x**128) + L0x2001994a_f * (x**129) + 
            L0x2001994c_f * (x**130) + L0x2001994e_f * (x**131) + 
            L0x20019950_f * (x**132) + L0x20019952_f * (x**133) + 
            L0x20019954_f * (x**134) + L0x20019956_f * (x**135) + 
            L0x20019958_f * (x**136) + L0x2001995a_f * (x**137) + 
            L0x2001995c_f * (x**138) + L0x2001995e_f * (x**139) + 
            L0x20019960_f * (x**140) + L0x20019962_f * (x**141) + 
            L0x20019964_f * (x**142) + L0x20019966_f * (x**143) + 
            L0x20019968_f * (x**144) + L0x2001996a_f * (x**145) + 
            L0x2001996c_f * (x**146) + L0x2001996e_f * (x**147) + 
            L0x20019970_f * (x**148) + L0x20019972_f * (x**149) + 
            L0x20019974_f * (x**150) + L0x20019976_f * (x**151) + 
            L0x20019978_f * (x**152) + L0x2001997a_f * (x**153) + 
            L0x2001997c_f * (x**154) + L0x2001997e_f * (x**155) + 
            L0x20019980_f * (x**156) + L0x20019982_f * (x**157) + 
            L0x20019984_f * (x**158) + L0x20019986_f * (x**159) + 
            L0x20019988_f * (x**160) + L0x2001998a_f * (x**161) + 
            L0x2001998c_f * (x**162) + L0x2001998e_f * (x**163) + 
            L0x20019990_f * (x**164) + L0x20019992_f * (x**165) + 
            L0x20019994_f * (x**166) + L0x20019996_f * (x**167) + 
            L0x20019998_f * (x**168) + L0x2001999a_f * (x**169) + 
            L0x2001999c_f * (x**170) + L0x2001999e_f * (x**171) + 
            L0x200199a0_f * (x**172) + L0x200199a2_f * (x**173) + 
            L0x200199a4_f * (x**174) + L0x200199a6_f * (x**175) + 
            L0x200199a8_f * (x**176) + L0x200199aa_f * (x**177) + 
            L0x200199ac_f * (x**178) + L0x200199ae_f * (x**179) + 
            L0x200199b0_f * (x**180) + L0x200199b2_f * (x**181) + 
            L0x200199b4_f * (x**182) + L0x200199b6_f * (x**183) + 
            L0x200199b8_f * (x**184) + L0x200199ba_f * (x**185) + 
            L0x200199bc_f * (x**186) + L0x200199be_f * (x**187) + 
            L0x200199c0_f * (x**188) + L0x200199c2_f * (x**189) + 
            L0x200199c4_f * (x**190) + L0x200199c6_f * (x**191) + 
            L0x200199c8_f * (x**192) + L0x200199ca_f * (x**193) + 
            L0x200199cc_f * (x**194) + L0x200199ce_f * (x**195) + 
            L0x200199d0_f * (x**196) + L0x200199d2_f * (x**197) + 
            L0x200199d4_f * (x**198) + L0x200199d6_f * (x**199) + 
            L0x200199d8_f * (x**200) + L0x200199da_f * (x**201) + 
            L0x200199dc_f * (x**202) + L0x200199de_f * (x**203) + 
            L0x200199e0_f * (x**204) + L0x200199e2_f * (x**205) + 
            L0x200199e4_f * (x**206) + L0x200199e6_f * (x**207) + 
            L0x200199e8_f * (x**208) + L0x200199ea_f * (x**209) + 
            L0x200199ec_f * (x**210) + L0x200199ee_f * (x**211) + 
            L0x200199f0_f * (x**212) + L0x200199f2_f * (x**213) + 
            L0x200199f4_f * (x**214) + L0x200199f6_f * (x**215) + 
            L0x200199f8_f * (x**216) + L0x200199fa_f * (x**217) + 
            L0x200199fc_f * (x**218) + L0x200199fe_f * (x**219) + 
            L0x20019a00_f * (x**220) + L0x20019a02_f * (x**221) + 
            L0x20019a04_f * (x**222) + L0x20019a06_f * (x**223) + 
            L0x20019a08_f * (x**224) + L0x20019a0a_f * (x**225) + 
            L0x20019a0c_f * (x**226) + L0x20019a0e_f * (x**227) + 
            L0x20019a10_f * (x**228) + L0x20019a12_f * (x**229) + 
            L0x20019a14_f * (x**230) + L0x20019a16_f * (x**231) + 
            L0x20019a18_f * (x**232) + L0x20019a1a_f * (x**233) + 
            L0x20019a1c_f * (x**234) + L0x20019a1e_f * (x**235) + 
            L0x20019a20_f * (x**236) + L0x20019a22_f * (x**237) + 
            L0x20019a24_f * (x**238) + L0x20019a26_f * (x**239) + 
            L0x20019a28_f * (x**240) + L0x20019a2a_f * (x**241) + 
            L0x20019a2c_f * (x**242) + L0x20019a2e_f * (x**243) + 
            L0x20019a30_f * (x**244) + L0x20019a32_f * (x**245) + 
            L0x20019a34_f * (x**246) + L0x20019a36_f * (x**247) + 
            L0x20019a38_f * (x**248) + L0x20019a3a_f * (x**249) + 
            L0x20019a3c_f * (x**250) + L0x20019a3e_f * (x**251) + 
            L0x20019a40_f * (x**252) + L0x20019a42_f * (x**253) + 
            L0x20019a44_f * (x**254) + L0x20019a46_f * (x**255)
          )
          [25570049, x**4 - y_0_42 * 6202837, y_0_42 - 1],
    (* inp_poly_43 *)
    eqmod (2**32) * (inp_poly_43 * inp_poly_43)
          (
            L0x20019848_f * (x**0) + L0x2001984a_f * (x**1) + 
            L0x2001984c_f * (x**2) + L0x2001984e_f * (x**3) + 
            L0x20019850_f * (x**4) + L0x20019852_f * (x**5) + 
            L0x20019854_f * (x**6) + L0x20019856_f * (x**7) + 
            L0x20019858_f * (x**8) + L0x2001985a_f * (x**9) + 
            L0x2001985c_f * (x**10) + L0x2001985e_f * (x**11) + 
            L0x20019860_f * (x**12) + L0x20019862_f * (x**13) + 
            L0x20019864_f * (x**14) + L0x20019866_f * (x**15) + 
            L0x20019868_f * (x**16) + L0x2001986a_f * (x**17) + 
            L0x2001986c_f * (x**18) + L0x2001986e_f * (x**19) + 
            L0x20019870_f * (x**20) + L0x20019872_f * (x**21) + 
            L0x20019874_f * (x**22) + L0x20019876_f * (x**23) + 
            L0x20019878_f * (x**24) + L0x2001987a_f * (x**25) + 
            L0x2001987c_f * (x**26) + L0x2001987e_f * (x**27) + 
            L0x20019880_f * (x**28) + L0x20019882_f * (x**29) + 
            L0x20019884_f * (x**30) + L0x20019886_f * (x**31) + 
            L0x20019888_f * (x**32) + L0x2001988a_f * (x**33) + 
            L0x2001988c_f * (x**34) + L0x2001988e_f * (x**35) + 
            L0x20019890_f * (x**36) + L0x20019892_f * (x**37) + 
            L0x20019894_f * (x**38) + L0x20019896_f * (x**39) + 
            L0x20019898_f * (x**40) + L0x2001989a_f * (x**41) + 
            L0x2001989c_f * (x**42) + L0x2001989e_f * (x**43) + 
            L0x200198a0_f * (x**44) + L0x200198a2_f * (x**45) + 
            L0x200198a4_f * (x**46) + L0x200198a6_f * (x**47) + 
            L0x200198a8_f * (x**48) + L0x200198aa_f * (x**49) + 
            L0x200198ac_f * (x**50) + L0x200198ae_f * (x**51) + 
            L0x200198b0_f * (x**52) + L0x200198b2_f * (x**53) + 
            L0x200198b4_f * (x**54) + L0x200198b6_f * (x**55) + 
            L0x200198b8_f * (x**56) + L0x200198ba_f * (x**57) + 
            L0x200198bc_f * (x**58) + L0x200198be_f * (x**59) + 
            L0x200198c0_f * (x**60) + L0x200198c2_f * (x**61) + 
            L0x200198c4_f * (x**62) + L0x200198c6_f * (x**63) + 
            L0x200198c8_f * (x**64) + L0x200198ca_f * (x**65) + 
            L0x200198cc_f * (x**66) + L0x200198ce_f * (x**67) + 
            L0x200198d0_f * (x**68) + L0x200198d2_f * (x**69) + 
            L0x200198d4_f * (x**70) + L0x200198d6_f * (x**71) + 
            L0x200198d8_f * (x**72) + L0x200198da_f * (x**73) + 
            L0x200198dc_f * (x**74) + L0x200198de_f * (x**75) + 
            L0x200198e0_f * (x**76) + L0x200198e2_f * (x**77) + 
            L0x200198e4_f * (x**78) + L0x200198e6_f * (x**79) + 
            L0x200198e8_f * (x**80) + L0x200198ea_f * (x**81) + 
            L0x200198ec_f * (x**82) + L0x200198ee_f * (x**83) + 
            L0x200198f0_f * (x**84) + L0x200198f2_f * (x**85) + 
            L0x200198f4_f * (x**86) + L0x200198f6_f * (x**87) + 
            L0x200198f8_f * (x**88) + L0x200198fa_f * (x**89) + 
            L0x200198fc_f * (x**90) + L0x200198fe_f * (x**91) + 
            L0x20019900_f * (x**92) + L0x20019902_f * (x**93) + 
            L0x20019904_f * (x**94) + L0x20019906_f * (x**95) + 
            L0x20019908_f * (x**96) + L0x2001990a_f * (x**97) + 
            L0x2001990c_f * (x**98) + L0x2001990e_f * (x**99) + 
            L0x20019910_f * (x**100) + L0x20019912_f * (x**101) + 
            L0x20019914_f * (x**102) + L0x20019916_f * (x**103) + 
            L0x20019918_f * (x**104) + L0x2001991a_f * (x**105) + 
            L0x2001991c_f * (x**106) + L0x2001991e_f * (x**107) + 
            L0x20019920_f * (x**108) + L0x20019922_f * (x**109) + 
            L0x20019924_f * (x**110) + L0x20019926_f * (x**111) + 
            L0x20019928_f * (x**112) + L0x2001992a_f * (x**113) + 
            L0x2001992c_f * (x**114) + L0x2001992e_f * (x**115) + 
            L0x20019930_f * (x**116) + L0x20019932_f * (x**117) + 
            L0x20019934_f * (x**118) + L0x20019936_f * (x**119) + 
            L0x20019938_f * (x**120) + L0x2001993a_f * (x**121) + 
            L0x2001993c_f * (x**122) + L0x2001993e_f * (x**123) + 
            L0x20019940_f * (x**124) + L0x20019942_f * (x**125) + 
            L0x20019944_f * (x**126) + L0x20019946_f * (x**127) + 
            L0x20019948_f * (x**128) + L0x2001994a_f * (x**129) + 
            L0x2001994c_f * (x**130) + L0x2001994e_f * (x**131) + 
            L0x20019950_f * (x**132) + L0x20019952_f * (x**133) + 
            L0x20019954_f * (x**134) + L0x20019956_f * (x**135) + 
            L0x20019958_f * (x**136) + L0x2001995a_f * (x**137) + 
            L0x2001995c_f * (x**138) + L0x2001995e_f * (x**139) + 
            L0x20019960_f * (x**140) + L0x20019962_f * (x**141) + 
            L0x20019964_f * (x**142) + L0x20019966_f * (x**143) + 
            L0x20019968_f * (x**144) + L0x2001996a_f * (x**145) + 
            L0x2001996c_f * (x**146) + L0x2001996e_f * (x**147) + 
            L0x20019970_f * (x**148) + L0x20019972_f * (x**149) + 
            L0x20019974_f * (x**150) + L0x20019976_f * (x**151) + 
            L0x20019978_f * (x**152) + L0x2001997a_f * (x**153) + 
            L0x2001997c_f * (x**154) + L0x2001997e_f * (x**155) + 
            L0x20019980_f * (x**156) + L0x20019982_f * (x**157) + 
            L0x20019984_f * (x**158) + L0x20019986_f * (x**159) + 
            L0x20019988_f * (x**160) + L0x2001998a_f * (x**161) + 
            L0x2001998c_f * (x**162) + L0x2001998e_f * (x**163) + 
            L0x20019990_f * (x**164) + L0x20019992_f * (x**165) + 
            L0x20019994_f * (x**166) + L0x20019996_f * (x**167) + 
            L0x20019998_f * (x**168) + L0x2001999a_f * (x**169) + 
            L0x2001999c_f * (x**170) + L0x2001999e_f * (x**171) + 
            L0x200199a0_f * (x**172) + L0x200199a2_f * (x**173) + 
            L0x200199a4_f * (x**174) + L0x200199a6_f * (x**175) + 
            L0x200199a8_f * (x**176) + L0x200199aa_f * (x**177) + 
            L0x200199ac_f * (x**178) + L0x200199ae_f * (x**179) + 
            L0x200199b0_f * (x**180) + L0x200199b2_f * (x**181) + 
            L0x200199b4_f * (x**182) + L0x200199b6_f * (x**183) + 
            L0x200199b8_f * (x**184) + L0x200199ba_f * (x**185) + 
            L0x200199bc_f * (x**186) + L0x200199be_f * (x**187) + 
            L0x200199c0_f * (x**188) + L0x200199c2_f * (x**189) + 
            L0x200199c4_f * (x**190) + L0x200199c6_f * (x**191) + 
            L0x200199c8_f * (x**192) + L0x200199ca_f * (x**193) + 
            L0x200199cc_f * (x**194) + L0x200199ce_f * (x**195) + 
            L0x200199d0_f * (x**196) + L0x200199d2_f * (x**197) + 
            L0x200199d4_f * (x**198) + L0x200199d6_f * (x**199) + 
            L0x200199d8_f * (x**200) + L0x200199da_f * (x**201) + 
            L0x200199dc_f * (x**202) + L0x200199de_f * (x**203) + 
            L0x200199e0_f * (x**204) + L0x200199e2_f * (x**205) + 
            L0x200199e4_f * (x**206) + L0x200199e6_f * (x**207) + 
            L0x200199e8_f * (x**208) + L0x200199ea_f * (x**209) + 
            L0x200199ec_f * (x**210) + L0x200199ee_f * (x**211) + 
            L0x200199f0_f * (x**212) + L0x200199f2_f * (x**213) + 
            L0x200199f4_f * (x**214) + L0x200199f6_f * (x**215) + 
            L0x200199f8_f * (x**216) + L0x200199fa_f * (x**217) + 
            L0x200199fc_f * (x**218) + L0x200199fe_f * (x**219) + 
            L0x20019a00_f * (x**220) + L0x20019a02_f * (x**221) + 
            L0x20019a04_f * (x**222) + L0x20019a06_f * (x**223) + 
            L0x20019a08_f * (x**224) + L0x20019a0a_f * (x**225) + 
            L0x20019a0c_f * (x**226) + L0x20019a0e_f * (x**227) + 
            L0x20019a10_f * (x**228) + L0x20019a12_f * (x**229) + 
            L0x20019a14_f * (x**230) + L0x20019a16_f * (x**231) + 
            L0x20019a18_f * (x**232) + L0x20019a1a_f * (x**233) + 
            L0x20019a1c_f * (x**234) + L0x20019a1e_f * (x**235) + 
            L0x20019a20_f * (x**236) + L0x20019a22_f * (x**237) + 
            L0x20019a24_f * (x**238) + L0x20019a26_f * (x**239) + 
            L0x20019a28_f * (x**240) + L0x20019a2a_f * (x**241) + 
            L0x20019a2c_f * (x**242) + L0x20019a2e_f * (x**243) + 
            L0x20019a30_f * (x**244) + L0x20019a32_f * (x**245) + 
            L0x20019a34_f * (x**246) + L0x20019a36_f * (x**247) + 
            L0x20019a38_f * (x**248) + L0x20019a3a_f * (x**249) + 
            L0x20019a3c_f * (x**250) + L0x20019a3e_f * (x**251) + 
            L0x20019a40_f * (x**252) + L0x20019a42_f * (x**253) + 
            L0x20019a44_f * (x**254) + L0x20019a46_f * (x**255)
          )
          [25570049, x**4 - y_0_43 * 19367212, y_0_43 - 1],
    (* inp_poly_44 *)
    eqmod (2**32) * (inp_poly_44 * inp_poly_44)
          (
            L0x20019848_f * (x**0) + L0x2001984a_f * (x**1) + 
            L0x2001984c_f * (x**2) + L0x2001984e_f * (x**3) + 
            L0x20019850_f * (x**4) + L0x20019852_f * (x**5) + 
            L0x20019854_f * (x**6) + L0x20019856_f * (x**7) + 
            L0x20019858_f * (x**8) + L0x2001985a_f * (x**9) + 
            L0x2001985c_f * (x**10) + L0x2001985e_f * (x**11) + 
            L0x20019860_f * (x**12) + L0x20019862_f * (x**13) + 
            L0x20019864_f * (x**14) + L0x20019866_f * (x**15) + 
            L0x20019868_f * (x**16) + L0x2001986a_f * (x**17) + 
            L0x2001986c_f * (x**18) + L0x2001986e_f * (x**19) + 
            L0x20019870_f * (x**20) + L0x20019872_f * (x**21) + 
            L0x20019874_f * (x**22) + L0x20019876_f * (x**23) + 
            L0x20019878_f * (x**24) + L0x2001987a_f * (x**25) + 
            L0x2001987c_f * (x**26) + L0x2001987e_f * (x**27) + 
            L0x20019880_f * (x**28) + L0x20019882_f * (x**29) + 
            L0x20019884_f * (x**30) + L0x20019886_f * (x**31) + 
            L0x20019888_f * (x**32) + L0x2001988a_f * (x**33) + 
            L0x2001988c_f * (x**34) + L0x2001988e_f * (x**35) + 
            L0x20019890_f * (x**36) + L0x20019892_f * (x**37) + 
            L0x20019894_f * (x**38) + L0x20019896_f * (x**39) + 
            L0x20019898_f * (x**40) + L0x2001989a_f * (x**41) + 
            L0x2001989c_f * (x**42) + L0x2001989e_f * (x**43) + 
            L0x200198a0_f * (x**44) + L0x200198a2_f * (x**45) + 
            L0x200198a4_f * (x**46) + L0x200198a6_f * (x**47) + 
            L0x200198a8_f * (x**48) + L0x200198aa_f * (x**49) + 
            L0x200198ac_f * (x**50) + L0x200198ae_f * (x**51) + 
            L0x200198b0_f * (x**52) + L0x200198b2_f * (x**53) + 
            L0x200198b4_f * (x**54) + L0x200198b6_f * (x**55) + 
            L0x200198b8_f * (x**56) + L0x200198ba_f * (x**57) + 
            L0x200198bc_f * (x**58) + L0x200198be_f * (x**59) + 
            L0x200198c0_f * (x**60) + L0x200198c2_f * (x**61) + 
            L0x200198c4_f * (x**62) + L0x200198c6_f * (x**63) + 
            L0x200198c8_f * (x**64) + L0x200198ca_f * (x**65) + 
            L0x200198cc_f * (x**66) + L0x200198ce_f * (x**67) + 
            L0x200198d0_f * (x**68) + L0x200198d2_f * (x**69) + 
            L0x200198d4_f * (x**70) + L0x200198d6_f * (x**71) + 
            L0x200198d8_f * (x**72) + L0x200198da_f * (x**73) + 
            L0x200198dc_f * (x**74) + L0x200198de_f * (x**75) + 
            L0x200198e0_f * (x**76) + L0x200198e2_f * (x**77) + 
            L0x200198e4_f * (x**78) + L0x200198e6_f * (x**79) + 
            L0x200198e8_f * (x**80) + L0x200198ea_f * (x**81) + 
            L0x200198ec_f * (x**82) + L0x200198ee_f * (x**83) + 
            L0x200198f0_f * (x**84) + L0x200198f2_f * (x**85) + 
            L0x200198f4_f * (x**86) + L0x200198f6_f * (x**87) + 
            L0x200198f8_f * (x**88) + L0x200198fa_f * (x**89) + 
            L0x200198fc_f * (x**90) + L0x200198fe_f * (x**91) + 
            L0x20019900_f * (x**92) + L0x20019902_f * (x**93) + 
            L0x20019904_f * (x**94) + L0x20019906_f * (x**95) + 
            L0x20019908_f * (x**96) + L0x2001990a_f * (x**97) + 
            L0x2001990c_f * (x**98) + L0x2001990e_f * (x**99) + 
            L0x20019910_f * (x**100) + L0x20019912_f * (x**101) + 
            L0x20019914_f * (x**102) + L0x20019916_f * (x**103) + 
            L0x20019918_f * (x**104) + L0x2001991a_f * (x**105) + 
            L0x2001991c_f * (x**106) + L0x2001991e_f * (x**107) + 
            L0x20019920_f * (x**108) + L0x20019922_f * (x**109) + 
            L0x20019924_f * (x**110) + L0x20019926_f * (x**111) + 
            L0x20019928_f * (x**112) + L0x2001992a_f * (x**113) + 
            L0x2001992c_f * (x**114) + L0x2001992e_f * (x**115) + 
            L0x20019930_f * (x**116) + L0x20019932_f * (x**117) + 
            L0x20019934_f * (x**118) + L0x20019936_f * (x**119) + 
            L0x20019938_f * (x**120) + L0x2001993a_f * (x**121) + 
            L0x2001993c_f * (x**122) + L0x2001993e_f * (x**123) + 
            L0x20019940_f * (x**124) + L0x20019942_f * (x**125) + 
            L0x20019944_f * (x**126) + L0x20019946_f * (x**127) + 
            L0x20019948_f * (x**128) + L0x2001994a_f * (x**129) + 
            L0x2001994c_f * (x**130) + L0x2001994e_f * (x**131) + 
            L0x20019950_f * (x**132) + L0x20019952_f * (x**133) + 
            L0x20019954_f * (x**134) + L0x20019956_f * (x**135) + 
            L0x20019958_f * (x**136) + L0x2001995a_f * (x**137) + 
            L0x2001995c_f * (x**138) + L0x2001995e_f * (x**139) + 
            L0x20019960_f * (x**140) + L0x20019962_f * (x**141) + 
            L0x20019964_f * (x**142) + L0x20019966_f * (x**143) + 
            L0x20019968_f * (x**144) + L0x2001996a_f * (x**145) + 
            L0x2001996c_f * (x**146) + L0x2001996e_f * (x**147) + 
            L0x20019970_f * (x**148) + L0x20019972_f * (x**149) + 
            L0x20019974_f * (x**150) + L0x20019976_f * (x**151) + 
            L0x20019978_f * (x**152) + L0x2001997a_f * (x**153) + 
            L0x2001997c_f * (x**154) + L0x2001997e_f * (x**155) + 
            L0x20019980_f * (x**156) + L0x20019982_f * (x**157) + 
            L0x20019984_f * (x**158) + L0x20019986_f * (x**159) + 
            L0x20019988_f * (x**160) + L0x2001998a_f * (x**161) + 
            L0x2001998c_f * (x**162) + L0x2001998e_f * (x**163) + 
            L0x20019990_f * (x**164) + L0x20019992_f * (x**165) + 
            L0x20019994_f * (x**166) + L0x20019996_f * (x**167) + 
            L0x20019998_f * (x**168) + L0x2001999a_f * (x**169) + 
            L0x2001999c_f * (x**170) + L0x2001999e_f * (x**171) + 
            L0x200199a0_f * (x**172) + L0x200199a2_f * (x**173) + 
            L0x200199a4_f * (x**174) + L0x200199a6_f * (x**175) + 
            L0x200199a8_f * (x**176) + L0x200199aa_f * (x**177) + 
            L0x200199ac_f * (x**178) + L0x200199ae_f * (x**179) + 
            L0x200199b0_f * (x**180) + L0x200199b2_f * (x**181) + 
            L0x200199b4_f * (x**182) + L0x200199b6_f * (x**183) + 
            L0x200199b8_f * (x**184) + L0x200199ba_f * (x**185) + 
            L0x200199bc_f * (x**186) + L0x200199be_f * (x**187) + 
            L0x200199c0_f * (x**188) + L0x200199c2_f * (x**189) + 
            L0x200199c4_f * (x**190) + L0x200199c6_f * (x**191) + 
            L0x200199c8_f * (x**192) + L0x200199ca_f * (x**193) + 
            L0x200199cc_f * (x**194) + L0x200199ce_f * (x**195) + 
            L0x200199d0_f * (x**196) + L0x200199d2_f * (x**197) + 
            L0x200199d4_f * (x**198) + L0x200199d6_f * (x**199) + 
            L0x200199d8_f * (x**200) + L0x200199da_f * (x**201) + 
            L0x200199dc_f * (x**202) + L0x200199de_f * (x**203) + 
            L0x200199e0_f * (x**204) + L0x200199e2_f * (x**205) + 
            L0x200199e4_f * (x**206) + L0x200199e6_f * (x**207) + 
            L0x200199e8_f * (x**208) + L0x200199ea_f * (x**209) + 
            L0x200199ec_f * (x**210) + L0x200199ee_f * (x**211) + 
            L0x200199f0_f * (x**212) + L0x200199f2_f * (x**213) + 
            L0x200199f4_f * (x**214) + L0x200199f6_f * (x**215) + 
            L0x200199f8_f * (x**216) + L0x200199fa_f * (x**217) + 
            L0x200199fc_f * (x**218) + L0x200199fe_f * (x**219) + 
            L0x20019a00_f * (x**220) + L0x20019a02_f * (x**221) + 
            L0x20019a04_f * (x**222) + L0x20019a06_f * (x**223) + 
            L0x20019a08_f * (x**224) + L0x20019a0a_f * (x**225) + 
            L0x20019a0c_f * (x**226) + L0x20019a0e_f * (x**227) + 
            L0x20019a10_f * (x**228) + L0x20019a12_f * (x**229) + 
            L0x20019a14_f * (x**230) + L0x20019a16_f * (x**231) + 
            L0x20019a18_f * (x**232) + L0x20019a1a_f * (x**233) + 
            L0x20019a1c_f * (x**234) + L0x20019a1e_f * (x**235) + 
            L0x20019a20_f * (x**236) + L0x20019a22_f * (x**237) + 
            L0x20019a24_f * (x**238) + L0x20019a26_f * (x**239) + 
            L0x20019a28_f * (x**240) + L0x20019a2a_f * (x**241) + 
            L0x20019a2c_f * (x**242) + L0x20019a2e_f * (x**243) + 
            L0x20019a30_f * (x**244) + L0x20019a32_f * (x**245) + 
            L0x20019a34_f * (x**246) + L0x20019a36_f * (x**247) + 
            L0x20019a38_f * (x**248) + L0x20019a3a_f * (x**249) + 
            L0x20019a3c_f * (x**250) + L0x20019a3e_f * (x**251) + 
            L0x20019a40_f * (x**252) + L0x20019a42_f * (x**253) + 
            L0x20019a44_f * (x**254) + L0x20019a46_f * (x**255)
          )
          [25570049, x**4 - y_0_44 * 17091305, y_0_44 - 1],
    (* inp_poly_45 *)
    eqmod (2**32) * (inp_poly_45 * inp_poly_45)
          (
            L0x20019848_f * (x**0) + L0x2001984a_f * (x**1) + 
            L0x2001984c_f * (x**2) + L0x2001984e_f * (x**3) + 
            L0x20019850_f * (x**4) + L0x20019852_f * (x**5) + 
            L0x20019854_f * (x**6) + L0x20019856_f * (x**7) + 
            L0x20019858_f * (x**8) + L0x2001985a_f * (x**9) + 
            L0x2001985c_f * (x**10) + L0x2001985e_f * (x**11) + 
            L0x20019860_f * (x**12) + L0x20019862_f * (x**13) + 
            L0x20019864_f * (x**14) + L0x20019866_f * (x**15) + 
            L0x20019868_f * (x**16) + L0x2001986a_f * (x**17) + 
            L0x2001986c_f * (x**18) + L0x2001986e_f * (x**19) + 
            L0x20019870_f * (x**20) + L0x20019872_f * (x**21) + 
            L0x20019874_f * (x**22) + L0x20019876_f * (x**23) + 
            L0x20019878_f * (x**24) + L0x2001987a_f * (x**25) + 
            L0x2001987c_f * (x**26) + L0x2001987e_f * (x**27) + 
            L0x20019880_f * (x**28) + L0x20019882_f * (x**29) + 
            L0x20019884_f * (x**30) + L0x20019886_f * (x**31) + 
            L0x20019888_f * (x**32) + L0x2001988a_f * (x**33) + 
            L0x2001988c_f * (x**34) + L0x2001988e_f * (x**35) + 
            L0x20019890_f * (x**36) + L0x20019892_f * (x**37) + 
            L0x20019894_f * (x**38) + L0x20019896_f * (x**39) + 
            L0x20019898_f * (x**40) + L0x2001989a_f * (x**41) + 
            L0x2001989c_f * (x**42) + L0x2001989e_f * (x**43) + 
            L0x200198a0_f * (x**44) + L0x200198a2_f * (x**45) + 
            L0x200198a4_f * (x**46) + L0x200198a6_f * (x**47) + 
            L0x200198a8_f * (x**48) + L0x200198aa_f * (x**49) + 
            L0x200198ac_f * (x**50) + L0x200198ae_f * (x**51) + 
            L0x200198b0_f * (x**52) + L0x200198b2_f * (x**53) + 
            L0x200198b4_f * (x**54) + L0x200198b6_f * (x**55) + 
            L0x200198b8_f * (x**56) + L0x200198ba_f * (x**57) + 
            L0x200198bc_f * (x**58) + L0x200198be_f * (x**59) + 
            L0x200198c0_f * (x**60) + L0x200198c2_f * (x**61) + 
            L0x200198c4_f * (x**62) + L0x200198c6_f * (x**63) + 
            L0x200198c8_f * (x**64) + L0x200198ca_f * (x**65) + 
            L0x200198cc_f * (x**66) + L0x200198ce_f * (x**67) + 
            L0x200198d0_f * (x**68) + L0x200198d2_f * (x**69) + 
            L0x200198d4_f * (x**70) + L0x200198d6_f * (x**71) + 
            L0x200198d8_f * (x**72) + L0x200198da_f * (x**73) + 
            L0x200198dc_f * (x**74) + L0x200198de_f * (x**75) + 
            L0x200198e0_f * (x**76) + L0x200198e2_f * (x**77) + 
            L0x200198e4_f * (x**78) + L0x200198e6_f * (x**79) + 
            L0x200198e8_f * (x**80) + L0x200198ea_f * (x**81) + 
            L0x200198ec_f * (x**82) + L0x200198ee_f * (x**83) + 
            L0x200198f0_f * (x**84) + L0x200198f2_f * (x**85) + 
            L0x200198f4_f * (x**86) + L0x200198f6_f * (x**87) + 
            L0x200198f8_f * (x**88) + L0x200198fa_f * (x**89) + 
            L0x200198fc_f * (x**90) + L0x200198fe_f * (x**91) + 
            L0x20019900_f * (x**92) + L0x20019902_f * (x**93) + 
            L0x20019904_f * (x**94) + L0x20019906_f * (x**95) + 
            L0x20019908_f * (x**96) + L0x2001990a_f * (x**97) + 
            L0x2001990c_f * (x**98) + L0x2001990e_f * (x**99) + 
            L0x20019910_f * (x**100) + L0x20019912_f * (x**101) + 
            L0x20019914_f * (x**102) + L0x20019916_f * (x**103) + 
            L0x20019918_f * (x**104) + L0x2001991a_f * (x**105) + 
            L0x2001991c_f * (x**106) + L0x2001991e_f * (x**107) + 
            L0x20019920_f * (x**108) + L0x20019922_f * (x**109) + 
            L0x20019924_f * (x**110) + L0x20019926_f * (x**111) + 
            L0x20019928_f * (x**112) + L0x2001992a_f * (x**113) + 
            L0x2001992c_f * (x**114) + L0x2001992e_f * (x**115) + 
            L0x20019930_f * (x**116) + L0x20019932_f * (x**117) + 
            L0x20019934_f * (x**118) + L0x20019936_f * (x**119) + 
            L0x20019938_f * (x**120) + L0x2001993a_f * (x**121) + 
            L0x2001993c_f * (x**122) + L0x2001993e_f * (x**123) + 
            L0x20019940_f * (x**124) + L0x20019942_f * (x**125) + 
            L0x20019944_f * (x**126) + L0x20019946_f * (x**127) + 
            L0x20019948_f * (x**128) + L0x2001994a_f * (x**129) + 
            L0x2001994c_f * (x**130) + L0x2001994e_f * (x**131) + 
            L0x20019950_f * (x**132) + L0x20019952_f * (x**133) + 
            L0x20019954_f * (x**134) + L0x20019956_f * (x**135) + 
            L0x20019958_f * (x**136) + L0x2001995a_f * (x**137) + 
            L0x2001995c_f * (x**138) + L0x2001995e_f * (x**139) + 
            L0x20019960_f * (x**140) + L0x20019962_f * (x**141) + 
            L0x20019964_f * (x**142) + L0x20019966_f * (x**143) + 
            L0x20019968_f * (x**144) + L0x2001996a_f * (x**145) + 
            L0x2001996c_f * (x**146) + L0x2001996e_f * (x**147) + 
            L0x20019970_f * (x**148) + L0x20019972_f * (x**149) + 
            L0x20019974_f * (x**150) + L0x20019976_f * (x**151) + 
            L0x20019978_f * (x**152) + L0x2001997a_f * (x**153) + 
            L0x2001997c_f * (x**154) + L0x2001997e_f * (x**155) + 
            L0x20019980_f * (x**156) + L0x20019982_f * (x**157) + 
            L0x20019984_f * (x**158) + L0x20019986_f * (x**159) + 
            L0x20019988_f * (x**160) + L0x2001998a_f * (x**161) + 
            L0x2001998c_f * (x**162) + L0x2001998e_f * (x**163) + 
            L0x20019990_f * (x**164) + L0x20019992_f * (x**165) + 
            L0x20019994_f * (x**166) + L0x20019996_f * (x**167) + 
            L0x20019998_f * (x**168) + L0x2001999a_f * (x**169) + 
            L0x2001999c_f * (x**170) + L0x2001999e_f * (x**171) + 
            L0x200199a0_f * (x**172) + L0x200199a2_f * (x**173) + 
            L0x200199a4_f * (x**174) + L0x200199a6_f * (x**175) + 
            L0x200199a8_f * (x**176) + L0x200199aa_f * (x**177) + 
            L0x200199ac_f * (x**178) + L0x200199ae_f * (x**179) + 
            L0x200199b0_f * (x**180) + L0x200199b2_f * (x**181) + 
            L0x200199b4_f * (x**182) + L0x200199b6_f * (x**183) + 
            L0x200199b8_f * (x**184) + L0x200199ba_f * (x**185) + 
            L0x200199bc_f * (x**186) + L0x200199be_f * (x**187) + 
            L0x200199c0_f * (x**188) + L0x200199c2_f * (x**189) + 
            L0x200199c4_f * (x**190) + L0x200199c6_f * (x**191) + 
            L0x200199c8_f * (x**192) + L0x200199ca_f * (x**193) + 
            L0x200199cc_f * (x**194) + L0x200199ce_f * (x**195) + 
            L0x200199d0_f * (x**196) + L0x200199d2_f * (x**197) + 
            L0x200199d4_f * (x**198) + L0x200199d6_f * (x**199) + 
            L0x200199d8_f * (x**200) + L0x200199da_f * (x**201) + 
            L0x200199dc_f * (x**202) + L0x200199de_f * (x**203) + 
            L0x200199e0_f * (x**204) + L0x200199e2_f * (x**205) + 
            L0x200199e4_f * (x**206) + L0x200199e6_f * (x**207) + 
            L0x200199e8_f * (x**208) + L0x200199ea_f * (x**209) + 
            L0x200199ec_f * (x**210) + L0x200199ee_f * (x**211) + 
            L0x200199f0_f * (x**212) + L0x200199f2_f * (x**213) + 
            L0x200199f4_f * (x**214) + L0x200199f6_f * (x**215) + 
            L0x200199f8_f * (x**216) + L0x200199fa_f * (x**217) + 
            L0x200199fc_f * (x**218) + L0x200199fe_f * (x**219) + 
            L0x20019a00_f * (x**220) + L0x20019a02_f * (x**221) + 
            L0x20019a04_f * (x**222) + L0x20019a06_f * (x**223) + 
            L0x20019a08_f * (x**224) + L0x20019a0a_f * (x**225) + 
            L0x20019a0c_f * (x**226) + L0x20019a0e_f * (x**227) + 
            L0x20019a10_f * (x**228) + L0x20019a12_f * (x**229) + 
            L0x20019a14_f * (x**230) + L0x20019a16_f * (x**231) + 
            L0x20019a18_f * (x**232) + L0x20019a1a_f * (x**233) + 
            L0x20019a1c_f * (x**234) + L0x20019a1e_f * (x**235) + 
            L0x20019a20_f * (x**236) + L0x20019a22_f * (x**237) + 
            L0x20019a24_f * (x**238) + L0x20019a26_f * (x**239) + 
            L0x20019a28_f * (x**240) + L0x20019a2a_f * (x**241) + 
            L0x20019a2c_f * (x**242) + L0x20019a2e_f * (x**243) + 
            L0x20019a30_f * (x**244) + L0x20019a32_f * (x**245) + 
            L0x20019a34_f * (x**246) + L0x20019a36_f * (x**247) + 
            L0x20019a38_f * (x**248) + L0x20019a3a_f * (x**249) + 
            L0x20019a3c_f * (x**250) + L0x20019a3e_f * (x**251) + 
            L0x20019a40_f * (x**252) + L0x20019a42_f * (x**253) + 
            L0x20019a44_f * (x**254) + L0x20019a46_f * (x**255)
          )
          [25570049, x**4 - y_0_45 * 8478744, y_0_45 - 1],
    (* inp_poly_46 *)
    eqmod (2**32) * (inp_poly_46 * inp_poly_46)
          (
            L0x20019848_f * (x**0) + L0x2001984a_f * (x**1) + 
            L0x2001984c_f * (x**2) + L0x2001984e_f * (x**3) + 
            L0x20019850_f * (x**4) + L0x20019852_f * (x**5) + 
            L0x20019854_f * (x**6) + L0x20019856_f * (x**7) + 
            L0x20019858_f * (x**8) + L0x2001985a_f * (x**9) + 
            L0x2001985c_f * (x**10) + L0x2001985e_f * (x**11) + 
            L0x20019860_f * (x**12) + L0x20019862_f * (x**13) + 
            L0x20019864_f * (x**14) + L0x20019866_f * (x**15) + 
            L0x20019868_f * (x**16) + L0x2001986a_f * (x**17) + 
            L0x2001986c_f * (x**18) + L0x2001986e_f * (x**19) + 
            L0x20019870_f * (x**20) + L0x20019872_f * (x**21) + 
            L0x20019874_f * (x**22) + L0x20019876_f * (x**23) + 
            L0x20019878_f * (x**24) + L0x2001987a_f * (x**25) + 
            L0x2001987c_f * (x**26) + L0x2001987e_f * (x**27) + 
            L0x20019880_f * (x**28) + L0x20019882_f * (x**29) + 
            L0x20019884_f * (x**30) + L0x20019886_f * (x**31) + 
            L0x20019888_f * (x**32) + L0x2001988a_f * (x**33) + 
            L0x2001988c_f * (x**34) + L0x2001988e_f * (x**35) + 
            L0x20019890_f * (x**36) + L0x20019892_f * (x**37) + 
            L0x20019894_f * (x**38) + L0x20019896_f * (x**39) + 
            L0x20019898_f * (x**40) + L0x2001989a_f * (x**41) + 
            L0x2001989c_f * (x**42) + L0x2001989e_f * (x**43) + 
            L0x200198a0_f * (x**44) + L0x200198a2_f * (x**45) + 
            L0x200198a4_f * (x**46) + L0x200198a6_f * (x**47) + 
            L0x200198a8_f * (x**48) + L0x200198aa_f * (x**49) + 
            L0x200198ac_f * (x**50) + L0x200198ae_f * (x**51) + 
            L0x200198b0_f * (x**52) + L0x200198b2_f * (x**53) + 
            L0x200198b4_f * (x**54) + L0x200198b6_f * (x**55) + 
            L0x200198b8_f * (x**56) + L0x200198ba_f * (x**57) + 
            L0x200198bc_f * (x**58) + L0x200198be_f * (x**59) + 
            L0x200198c0_f * (x**60) + L0x200198c2_f * (x**61) + 
            L0x200198c4_f * (x**62) + L0x200198c6_f * (x**63) + 
            L0x200198c8_f * (x**64) + L0x200198ca_f * (x**65) + 
            L0x200198cc_f * (x**66) + L0x200198ce_f * (x**67) + 
            L0x200198d0_f * (x**68) + L0x200198d2_f * (x**69) + 
            L0x200198d4_f * (x**70) + L0x200198d6_f * (x**71) + 
            L0x200198d8_f * (x**72) + L0x200198da_f * (x**73) + 
            L0x200198dc_f * (x**74) + L0x200198de_f * (x**75) + 
            L0x200198e0_f * (x**76) + L0x200198e2_f * (x**77) + 
            L0x200198e4_f * (x**78) + L0x200198e6_f * (x**79) + 
            L0x200198e8_f * (x**80) + L0x200198ea_f * (x**81) + 
            L0x200198ec_f * (x**82) + L0x200198ee_f * (x**83) + 
            L0x200198f0_f * (x**84) + L0x200198f2_f * (x**85) + 
            L0x200198f4_f * (x**86) + L0x200198f6_f * (x**87) + 
            L0x200198f8_f * (x**88) + L0x200198fa_f * (x**89) + 
            L0x200198fc_f * (x**90) + L0x200198fe_f * (x**91) + 
            L0x20019900_f * (x**92) + L0x20019902_f * (x**93) + 
            L0x20019904_f * (x**94) + L0x20019906_f * (x**95) + 
            L0x20019908_f * (x**96) + L0x2001990a_f * (x**97) + 
            L0x2001990c_f * (x**98) + L0x2001990e_f * (x**99) + 
            L0x20019910_f * (x**100) + L0x20019912_f * (x**101) + 
            L0x20019914_f * (x**102) + L0x20019916_f * (x**103) + 
            L0x20019918_f * (x**104) + L0x2001991a_f * (x**105) + 
            L0x2001991c_f * (x**106) + L0x2001991e_f * (x**107) + 
            L0x20019920_f * (x**108) + L0x20019922_f * (x**109) + 
            L0x20019924_f * (x**110) + L0x20019926_f * (x**111) + 
            L0x20019928_f * (x**112) + L0x2001992a_f * (x**113) + 
            L0x2001992c_f * (x**114) + L0x2001992e_f * (x**115) + 
            L0x20019930_f * (x**116) + L0x20019932_f * (x**117) + 
            L0x20019934_f * (x**118) + L0x20019936_f * (x**119) + 
            L0x20019938_f * (x**120) + L0x2001993a_f * (x**121) + 
            L0x2001993c_f * (x**122) + L0x2001993e_f * (x**123) + 
            L0x20019940_f * (x**124) + L0x20019942_f * (x**125) + 
            L0x20019944_f * (x**126) + L0x20019946_f * (x**127) + 
            L0x20019948_f * (x**128) + L0x2001994a_f * (x**129) + 
            L0x2001994c_f * (x**130) + L0x2001994e_f * (x**131) + 
            L0x20019950_f * (x**132) + L0x20019952_f * (x**133) + 
            L0x20019954_f * (x**134) + L0x20019956_f * (x**135) + 
            L0x20019958_f * (x**136) + L0x2001995a_f * (x**137) + 
            L0x2001995c_f * (x**138) + L0x2001995e_f * (x**139) + 
            L0x20019960_f * (x**140) + L0x20019962_f * (x**141) + 
            L0x20019964_f * (x**142) + L0x20019966_f * (x**143) + 
            L0x20019968_f * (x**144) + L0x2001996a_f * (x**145) + 
            L0x2001996c_f * (x**146) + L0x2001996e_f * (x**147) + 
            L0x20019970_f * (x**148) + L0x20019972_f * (x**149) + 
            L0x20019974_f * (x**150) + L0x20019976_f * (x**151) + 
            L0x20019978_f * (x**152) + L0x2001997a_f * (x**153) + 
            L0x2001997c_f * (x**154) + L0x2001997e_f * (x**155) + 
            L0x20019980_f * (x**156) + L0x20019982_f * (x**157) + 
            L0x20019984_f * (x**158) + L0x20019986_f * (x**159) + 
            L0x20019988_f * (x**160) + L0x2001998a_f * (x**161) + 
            L0x2001998c_f * (x**162) + L0x2001998e_f * (x**163) + 
            L0x20019990_f * (x**164) + L0x20019992_f * (x**165) + 
            L0x20019994_f * (x**166) + L0x20019996_f * (x**167) + 
            L0x20019998_f * (x**168) + L0x2001999a_f * (x**169) + 
            L0x2001999c_f * (x**170) + L0x2001999e_f * (x**171) + 
            L0x200199a0_f * (x**172) + L0x200199a2_f * (x**173) + 
            L0x200199a4_f * (x**174) + L0x200199a6_f * (x**175) + 
            L0x200199a8_f * (x**176) + L0x200199aa_f * (x**177) + 
            L0x200199ac_f * (x**178) + L0x200199ae_f * (x**179) + 
            L0x200199b0_f * (x**180) + L0x200199b2_f * (x**181) + 
            L0x200199b4_f * (x**182) + L0x200199b6_f * (x**183) + 
            L0x200199b8_f * (x**184) + L0x200199ba_f * (x**185) + 
            L0x200199bc_f * (x**186) + L0x200199be_f * (x**187) + 
            L0x200199c0_f * (x**188) + L0x200199c2_f * (x**189) + 
            L0x200199c4_f * (x**190) + L0x200199c6_f * (x**191) + 
            L0x200199c8_f * (x**192) + L0x200199ca_f * (x**193) + 
            L0x200199cc_f * (x**194) + L0x200199ce_f * (x**195) + 
            L0x200199d0_f * (x**196) + L0x200199d2_f * (x**197) + 
            L0x200199d4_f * (x**198) + L0x200199d6_f * (x**199) + 
            L0x200199d8_f * (x**200) + L0x200199da_f * (x**201) + 
            L0x200199dc_f * (x**202) + L0x200199de_f * (x**203) + 
            L0x200199e0_f * (x**204) + L0x200199e2_f * (x**205) + 
            L0x200199e4_f * (x**206) + L0x200199e6_f * (x**207) + 
            L0x200199e8_f * (x**208) + L0x200199ea_f * (x**209) + 
            L0x200199ec_f * (x**210) + L0x200199ee_f * (x**211) + 
            L0x200199f0_f * (x**212) + L0x200199f2_f * (x**213) + 
            L0x200199f4_f * (x**214) + L0x200199f6_f * (x**215) + 
            L0x200199f8_f * (x**216) + L0x200199fa_f * (x**217) + 
            L0x200199fc_f * (x**218) + L0x200199fe_f * (x**219) + 
            L0x20019a00_f * (x**220) + L0x20019a02_f * (x**221) + 
            L0x20019a04_f * (x**222) + L0x20019a06_f * (x**223) + 
            L0x20019a08_f * (x**224) + L0x20019a0a_f * (x**225) + 
            L0x20019a0c_f * (x**226) + L0x20019a0e_f * (x**227) + 
            L0x20019a10_f * (x**228) + L0x20019a12_f * (x**229) + 
            L0x20019a14_f * (x**230) + L0x20019a16_f * (x**231) + 
            L0x20019a18_f * (x**232) + L0x20019a1a_f * (x**233) + 
            L0x20019a1c_f * (x**234) + L0x20019a1e_f * (x**235) + 
            L0x20019a20_f * (x**236) + L0x20019a22_f * (x**237) + 
            L0x20019a24_f * (x**238) + L0x20019a26_f * (x**239) + 
            L0x20019a28_f * (x**240) + L0x20019a2a_f * (x**241) + 
            L0x20019a2c_f * (x**242) + L0x20019a2e_f * (x**243) + 
            L0x20019a30_f * (x**244) + L0x20019a32_f * (x**245) + 
            L0x20019a34_f * (x**246) + L0x20019a36_f * (x**247) + 
            L0x20019a38_f * (x**248) + L0x20019a3a_f * (x**249) + 
            L0x20019a3c_f * (x**250) + L0x20019a3e_f * (x**251) + 
            L0x20019a40_f * (x**252) + L0x20019a42_f * (x**253) + 
            L0x20019a44_f * (x**254) + L0x20019a46_f * (x**255)
          )
          [25570049, x**4 - y_0_46 * 18298658, y_0_46 - 1],
    (* inp_poly_47 *)
    eqmod (2**32) * (inp_poly_47 * inp_poly_47)
          (
            L0x20019848_f * (x**0) + L0x2001984a_f * (x**1) + 
            L0x2001984c_f * (x**2) + L0x2001984e_f * (x**3) + 
            L0x20019850_f * (x**4) + L0x20019852_f * (x**5) + 
            L0x20019854_f * (x**6) + L0x20019856_f * (x**7) + 
            L0x20019858_f * (x**8) + L0x2001985a_f * (x**9) + 
            L0x2001985c_f * (x**10) + L0x2001985e_f * (x**11) + 
            L0x20019860_f * (x**12) + L0x20019862_f * (x**13) + 
            L0x20019864_f * (x**14) + L0x20019866_f * (x**15) + 
            L0x20019868_f * (x**16) + L0x2001986a_f * (x**17) + 
            L0x2001986c_f * (x**18) + L0x2001986e_f * (x**19) + 
            L0x20019870_f * (x**20) + L0x20019872_f * (x**21) + 
            L0x20019874_f * (x**22) + L0x20019876_f * (x**23) + 
            L0x20019878_f * (x**24) + L0x2001987a_f * (x**25) + 
            L0x2001987c_f * (x**26) + L0x2001987e_f * (x**27) + 
            L0x20019880_f * (x**28) + L0x20019882_f * (x**29) + 
            L0x20019884_f * (x**30) + L0x20019886_f * (x**31) + 
            L0x20019888_f * (x**32) + L0x2001988a_f * (x**33) + 
            L0x2001988c_f * (x**34) + L0x2001988e_f * (x**35) + 
            L0x20019890_f * (x**36) + L0x20019892_f * (x**37) + 
            L0x20019894_f * (x**38) + L0x20019896_f * (x**39) + 
            L0x20019898_f * (x**40) + L0x2001989a_f * (x**41) + 
            L0x2001989c_f * (x**42) + L0x2001989e_f * (x**43) + 
            L0x200198a0_f * (x**44) + L0x200198a2_f * (x**45) + 
            L0x200198a4_f * (x**46) + L0x200198a6_f * (x**47) + 
            L0x200198a8_f * (x**48) + L0x200198aa_f * (x**49) + 
            L0x200198ac_f * (x**50) + L0x200198ae_f * (x**51) + 
            L0x200198b0_f * (x**52) + L0x200198b2_f * (x**53) + 
            L0x200198b4_f * (x**54) + L0x200198b6_f * (x**55) + 
            L0x200198b8_f * (x**56) + L0x200198ba_f * (x**57) + 
            L0x200198bc_f * (x**58) + L0x200198be_f * (x**59) + 
            L0x200198c0_f * (x**60) + L0x200198c2_f * (x**61) + 
            L0x200198c4_f * (x**62) + L0x200198c6_f * (x**63) + 
            L0x200198c8_f * (x**64) + L0x200198ca_f * (x**65) + 
            L0x200198cc_f * (x**66) + L0x200198ce_f * (x**67) + 
            L0x200198d0_f * (x**68) + L0x200198d2_f * (x**69) + 
            L0x200198d4_f * (x**70) + L0x200198d6_f * (x**71) + 
            L0x200198d8_f * (x**72) + L0x200198da_f * (x**73) + 
            L0x200198dc_f * (x**74) + L0x200198de_f * (x**75) + 
            L0x200198e0_f * (x**76) + L0x200198e2_f * (x**77) + 
            L0x200198e4_f * (x**78) + L0x200198e6_f * (x**79) + 
            L0x200198e8_f * (x**80) + L0x200198ea_f * (x**81) + 
            L0x200198ec_f * (x**82) + L0x200198ee_f * (x**83) + 
            L0x200198f0_f * (x**84) + L0x200198f2_f * (x**85) + 
            L0x200198f4_f * (x**86) + L0x200198f6_f * (x**87) + 
            L0x200198f8_f * (x**88) + L0x200198fa_f * (x**89) + 
            L0x200198fc_f * (x**90) + L0x200198fe_f * (x**91) + 
            L0x20019900_f * (x**92) + L0x20019902_f * (x**93) + 
            L0x20019904_f * (x**94) + L0x20019906_f * (x**95) + 
            L0x20019908_f * (x**96) + L0x2001990a_f * (x**97) + 
            L0x2001990c_f * (x**98) + L0x2001990e_f * (x**99) + 
            L0x20019910_f * (x**100) + L0x20019912_f * (x**101) + 
            L0x20019914_f * (x**102) + L0x20019916_f * (x**103) + 
            L0x20019918_f * (x**104) + L0x2001991a_f * (x**105) + 
            L0x2001991c_f * (x**106) + L0x2001991e_f * (x**107) + 
            L0x20019920_f * (x**108) + L0x20019922_f * (x**109) + 
            L0x20019924_f * (x**110) + L0x20019926_f * (x**111) + 
            L0x20019928_f * (x**112) + L0x2001992a_f * (x**113) + 
            L0x2001992c_f * (x**114) + L0x2001992e_f * (x**115) + 
            L0x20019930_f * (x**116) + L0x20019932_f * (x**117) + 
            L0x20019934_f * (x**118) + L0x20019936_f * (x**119) + 
            L0x20019938_f * (x**120) + L0x2001993a_f * (x**121) + 
            L0x2001993c_f * (x**122) + L0x2001993e_f * (x**123) + 
            L0x20019940_f * (x**124) + L0x20019942_f * (x**125) + 
            L0x20019944_f * (x**126) + L0x20019946_f * (x**127) + 
            L0x20019948_f * (x**128) + L0x2001994a_f * (x**129) + 
            L0x2001994c_f * (x**130) + L0x2001994e_f * (x**131) + 
            L0x20019950_f * (x**132) + L0x20019952_f * (x**133) + 
            L0x20019954_f * (x**134) + L0x20019956_f * (x**135) + 
            L0x20019958_f * (x**136) + L0x2001995a_f * (x**137) + 
            L0x2001995c_f * (x**138) + L0x2001995e_f * (x**139) + 
            L0x20019960_f * (x**140) + L0x20019962_f * (x**141) + 
            L0x20019964_f * (x**142) + L0x20019966_f * (x**143) + 
            L0x20019968_f * (x**144) + L0x2001996a_f * (x**145) + 
            L0x2001996c_f * (x**146) + L0x2001996e_f * (x**147) + 
            L0x20019970_f * (x**148) + L0x20019972_f * (x**149) + 
            L0x20019974_f * (x**150) + L0x20019976_f * (x**151) + 
            L0x20019978_f * (x**152) + L0x2001997a_f * (x**153) + 
            L0x2001997c_f * (x**154) + L0x2001997e_f * (x**155) + 
            L0x20019980_f * (x**156) + L0x20019982_f * (x**157) + 
            L0x20019984_f * (x**158) + L0x20019986_f * (x**159) + 
            L0x20019988_f * (x**160) + L0x2001998a_f * (x**161) + 
            L0x2001998c_f * (x**162) + L0x2001998e_f * (x**163) + 
            L0x20019990_f * (x**164) + L0x20019992_f * (x**165) + 
            L0x20019994_f * (x**166) + L0x20019996_f * (x**167) + 
            L0x20019998_f * (x**168) + L0x2001999a_f * (x**169) + 
            L0x2001999c_f * (x**170) + L0x2001999e_f * (x**171) + 
            L0x200199a0_f * (x**172) + L0x200199a2_f * (x**173) + 
            L0x200199a4_f * (x**174) + L0x200199a6_f * (x**175) + 
            L0x200199a8_f * (x**176) + L0x200199aa_f * (x**177) + 
            L0x200199ac_f * (x**178) + L0x200199ae_f * (x**179) + 
            L0x200199b0_f * (x**180) + L0x200199b2_f * (x**181) + 
            L0x200199b4_f * (x**182) + L0x200199b6_f * (x**183) + 
            L0x200199b8_f * (x**184) + L0x200199ba_f * (x**185) + 
            L0x200199bc_f * (x**186) + L0x200199be_f * (x**187) + 
            L0x200199c0_f * (x**188) + L0x200199c2_f * (x**189) + 
            L0x200199c4_f * (x**190) + L0x200199c6_f * (x**191) + 
            L0x200199c8_f * (x**192) + L0x200199ca_f * (x**193) + 
            L0x200199cc_f * (x**194) + L0x200199ce_f * (x**195) + 
            L0x200199d0_f * (x**196) + L0x200199d2_f * (x**197) + 
            L0x200199d4_f * (x**198) + L0x200199d6_f * (x**199) + 
            L0x200199d8_f * (x**200) + L0x200199da_f * (x**201) + 
            L0x200199dc_f * (x**202) + L0x200199de_f * (x**203) + 
            L0x200199e0_f * (x**204) + L0x200199e2_f * (x**205) + 
            L0x200199e4_f * (x**206) + L0x200199e6_f * (x**207) + 
            L0x200199e8_f * (x**208) + L0x200199ea_f * (x**209) + 
            L0x200199ec_f * (x**210) + L0x200199ee_f * (x**211) + 
            L0x200199f0_f * (x**212) + L0x200199f2_f * (x**213) + 
            L0x200199f4_f * (x**214) + L0x200199f6_f * (x**215) + 
            L0x200199f8_f * (x**216) + L0x200199fa_f * (x**217) + 
            L0x200199fc_f * (x**218) + L0x200199fe_f * (x**219) + 
            L0x20019a00_f * (x**220) + L0x20019a02_f * (x**221) + 
            L0x20019a04_f * (x**222) + L0x20019a06_f * (x**223) + 
            L0x20019a08_f * (x**224) + L0x20019a0a_f * (x**225) + 
            L0x20019a0c_f * (x**226) + L0x20019a0e_f * (x**227) + 
            L0x20019a10_f * (x**228) + L0x20019a12_f * (x**229) + 
            L0x20019a14_f * (x**230) + L0x20019a16_f * (x**231) + 
            L0x20019a18_f * (x**232) + L0x20019a1a_f * (x**233) + 
            L0x20019a1c_f * (x**234) + L0x20019a1e_f * (x**235) + 
            L0x20019a20_f * (x**236) + L0x20019a22_f * (x**237) + 
            L0x20019a24_f * (x**238) + L0x20019a26_f * (x**239) + 
            L0x20019a28_f * (x**240) + L0x20019a2a_f * (x**241) + 
            L0x20019a2c_f * (x**242) + L0x20019a2e_f * (x**243) + 
            L0x20019a30_f * (x**244) + L0x20019a32_f * (x**245) + 
            L0x20019a34_f * (x**246) + L0x20019a36_f * (x**247) + 
            L0x20019a38_f * (x**248) + L0x20019a3a_f * (x**249) + 
            L0x20019a3c_f * (x**250) + L0x20019a3e_f * (x**251) + 
            L0x20019a40_f * (x**252) + L0x20019a42_f * (x**253) + 
            L0x20019a44_f * (x**254) + L0x20019a46_f * (x**255)
          )
          [25570049, x**4 - y_0_47 * 7271391, y_0_47 - 1]
  ] prove with [cuts [48, 54], all ghosts]
  &&
  true
;

cut (* 67 *)
  true && true;

(* slice 6 *)
cut (* 68 *)
  and [
    (* inp_poly_48 *)
    eqmod (2**32) * (inp_poly_48 * inp_poly_48)
          (
            L0x20019848_f * (x**0) + L0x2001984a_f * (x**1) + 
            L0x2001984c_f * (x**2) + L0x2001984e_f * (x**3) + 
            L0x20019850_f * (x**4) + L0x20019852_f * (x**5) + 
            L0x20019854_f * (x**6) + L0x20019856_f * (x**7) + 
            L0x20019858_f * (x**8) + L0x2001985a_f * (x**9) + 
            L0x2001985c_f * (x**10) + L0x2001985e_f * (x**11) + 
            L0x20019860_f * (x**12) + L0x20019862_f * (x**13) + 
            L0x20019864_f * (x**14) + L0x20019866_f * (x**15) + 
            L0x20019868_f * (x**16) + L0x2001986a_f * (x**17) + 
            L0x2001986c_f * (x**18) + L0x2001986e_f * (x**19) + 
            L0x20019870_f * (x**20) + L0x20019872_f * (x**21) + 
            L0x20019874_f * (x**22) + L0x20019876_f * (x**23) + 
            L0x20019878_f * (x**24) + L0x2001987a_f * (x**25) + 
            L0x2001987c_f * (x**26) + L0x2001987e_f * (x**27) + 
            L0x20019880_f * (x**28) + L0x20019882_f * (x**29) + 
            L0x20019884_f * (x**30) + L0x20019886_f * (x**31) + 
            L0x20019888_f * (x**32) + L0x2001988a_f * (x**33) + 
            L0x2001988c_f * (x**34) + L0x2001988e_f * (x**35) + 
            L0x20019890_f * (x**36) + L0x20019892_f * (x**37) + 
            L0x20019894_f * (x**38) + L0x20019896_f * (x**39) + 
            L0x20019898_f * (x**40) + L0x2001989a_f * (x**41) + 
            L0x2001989c_f * (x**42) + L0x2001989e_f * (x**43) + 
            L0x200198a0_f * (x**44) + L0x200198a2_f * (x**45) + 
            L0x200198a4_f * (x**46) + L0x200198a6_f * (x**47) + 
            L0x200198a8_f * (x**48) + L0x200198aa_f * (x**49) + 
            L0x200198ac_f * (x**50) + L0x200198ae_f * (x**51) + 
            L0x200198b0_f * (x**52) + L0x200198b2_f * (x**53) + 
            L0x200198b4_f * (x**54) + L0x200198b6_f * (x**55) + 
            L0x200198b8_f * (x**56) + L0x200198ba_f * (x**57) + 
            L0x200198bc_f * (x**58) + L0x200198be_f * (x**59) + 
            L0x200198c0_f * (x**60) + L0x200198c2_f * (x**61) + 
            L0x200198c4_f * (x**62) + L0x200198c6_f * (x**63) + 
            L0x200198c8_f * (x**64) + L0x200198ca_f * (x**65) + 
            L0x200198cc_f * (x**66) + L0x200198ce_f * (x**67) + 
            L0x200198d0_f * (x**68) + L0x200198d2_f * (x**69) + 
            L0x200198d4_f * (x**70) + L0x200198d6_f * (x**71) + 
            L0x200198d8_f * (x**72) + L0x200198da_f * (x**73) + 
            L0x200198dc_f * (x**74) + L0x200198de_f * (x**75) + 
            L0x200198e0_f * (x**76) + L0x200198e2_f * (x**77) + 
            L0x200198e4_f * (x**78) + L0x200198e6_f * (x**79) + 
            L0x200198e8_f * (x**80) + L0x200198ea_f * (x**81) + 
            L0x200198ec_f * (x**82) + L0x200198ee_f * (x**83) + 
            L0x200198f0_f * (x**84) + L0x200198f2_f * (x**85) + 
            L0x200198f4_f * (x**86) + L0x200198f6_f * (x**87) + 
            L0x200198f8_f * (x**88) + L0x200198fa_f * (x**89) + 
            L0x200198fc_f * (x**90) + L0x200198fe_f * (x**91) + 
            L0x20019900_f * (x**92) + L0x20019902_f * (x**93) + 
            L0x20019904_f * (x**94) + L0x20019906_f * (x**95) + 
            L0x20019908_f * (x**96) + L0x2001990a_f * (x**97) + 
            L0x2001990c_f * (x**98) + L0x2001990e_f * (x**99) + 
            L0x20019910_f * (x**100) + L0x20019912_f * (x**101) + 
            L0x20019914_f * (x**102) + L0x20019916_f * (x**103) + 
            L0x20019918_f * (x**104) + L0x2001991a_f * (x**105) + 
            L0x2001991c_f * (x**106) + L0x2001991e_f * (x**107) + 
            L0x20019920_f * (x**108) + L0x20019922_f * (x**109) + 
            L0x20019924_f * (x**110) + L0x20019926_f * (x**111) + 
            L0x20019928_f * (x**112) + L0x2001992a_f * (x**113) + 
            L0x2001992c_f * (x**114) + L0x2001992e_f * (x**115) + 
            L0x20019930_f * (x**116) + L0x20019932_f * (x**117) + 
            L0x20019934_f * (x**118) + L0x20019936_f * (x**119) + 
            L0x20019938_f * (x**120) + L0x2001993a_f * (x**121) + 
            L0x2001993c_f * (x**122) + L0x2001993e_f * (x**123) + 
            L0x20019940_f * (x**124) + L0x20019942_f * (x**125) + 
            L0x20019944_f * (x**126) + L0x20019946_f * (x**127) + 
            L0x20019948_f * (x**128) + L0x2001994a_f * (x**129) + 
            L0x2001994c_f * (x**130) + L0x2001994e_f * (x**131) + 
            L0x20019950_f * (x**132) + L0x20019952_f * (x**133) + 
            L0x20019954_f * (x**134) + L0x20019956_f * (x**135) + 
            L0x20019958_f * (x**136) + L0x2001995a_f * (x**137) + 
            L0x2001995c_f * (x**138) + L0x2001995e_f * (x**139) + 
            L0x20019960_f * (x**140) + L0x20019962_f * (x**141) + 
            L0x20019964_f * (x**142) + L0x20019966_f * (x**143) + 
            L0x20019968_f * (x**144) + L0x2001996a_f * (x**145) + 
            L0x2001996c_f * (x**146) + L0x2001996e_f * (x**147) + 
            L0x20019970_f * (x**148) + L0x20019972_f * (x**149) + 
            L0x20019974_f * (x**150) + L0x20019976_f * (x**151) + 
            L0x20019978_f * (x**152) + L0x2001997a_f * (x**153) + 
            L0x2001997c_f * (x**154) + L0x2001997e_f * (x**155) + 
            L0x20019980_f * (x**156) + L0x20019982_f * (x**157) + 
            L0x20019984_f * (x**158) + L0x20019986_f * (x**159) + 
            L0x20019988_f * (x**160) + L0x2001998a_f * (x**161) + 
            L0x2001998c_f * (x**162) + L0x2001998e_f * (x**163) + 
            L0x20019990_f * (x**164) + L0x20019992_f * (x**165) + 
            L0x20019994_f * (x**166) + L0x20019996_f * (x**167) + 
            L0x20019998_f * (x**168) + L0x2001999a_f * (x**169) + 
            L0x2001999c_f * (x**170) + L0x2001999e_f * (x**171) + 
            L0x200199a0_f * (x**172) + L0x200199a2_f * (x**173) + 
            L0x200199a4_f * (x**174) + L0x200199a6_f * (x**175) + 
            L0x200199a8_f * (x**176) + L0x200199aa_f * (x**177) + 
            L0x200199ac_f * (x**178) + L0x200199ae_f * (x**179) + 
            L0x200199b0_f * (x**180) + L0x200199b2_f * (x**181) + 
            L0x200199b4_f * (x**182) + L0x200199b6_f * (x**183) + 
            L0x200199b8_f * (x**184) + L0x200199ba_f * (x**185) + 
            L0x200199bc_f * (x**186) + L0x200199be_f * (x**187) + 
            L0x200199c0_f * (x**188) + L0x200199c2_f * (x**189) + 
            L0x200199c4_f * (x**190) + L0x200199c6_f * (x**191) + 
            L0x200199c8_f * (x**192) + L0x200199ca_f * (x**193) + 
            L0x200199cc_f * (x**194) + L0x200199ce_f * (x**195) + 
            L0x200199d0_f * (x**196) + L0x200199d2_f * (x**197) + 
            L0x200199d4_f * (x**198) + L0x200199d6_f * (x**199) + 
            L0x200199d8_f * (x**200) + L0x200199da_f * (x**201) + 
            L0x200199dc_f * (x**202) + L0x200199de_f * (x**203) + 
            L0x200199e0_f * (x**204) + L0x200199e2_f * (x**205) + 
            L0x200199e4_f * (x**206) + L0x200199e6_f * (x**207) + 
            L0x200199e8_f * (x**208) + L0x200199ea_f * (x**209) + 
            L0x200199ec_f * (x**210) + L0x200199ee_f * (x**211) + 
            L0x200199f0_f * (x**212) + L0x200199f2_f * (x**213) + 
            L0x200199f4_f * (x**214) + L0x200199f6_f * (x**215) + 
            L0x200199f8_f * (x**216) + L0x200199fa_f * (x**217) + 
            L0x200199fc_f * (x**218) + L0x200199fe_f * (x**219) + 
            L0x20019a00_f * (x**220) + L0x20019a02_f * (x**221) + 
            L0x20019a04_f * (x**222) + L0x20019a06_f * (x**223) + 
            L0x20019a08_f * (x**224) + L0x20019a0a_f * (x**225) + 
            L0x20019a0c_f * (x**226) + L0x20019a0e_f * (x**227) + 
            L0x20019a10_f * (x**228) + L0x20019a12_f * (x**229) + 
            L0x20019a14_f * (x**230) + L0x20019a16_f * (x**231) + 
            L0x20019a18_f * (x**232) + L0x20019a1a_f * (x**233) + 
            L0x20019a1c_f * (x**234) + L0x20019a1e_f * (x**235) + 
            L0x20019a20_f * (x**236) + L0x20019a22_f * (x**237) + 
            L0x20019a24_f * (x**238) + L0x20019a26_f * (x**239) + 
            L0x20019a28_f * (x**240) + L0x20019a2a_f * (x**241) + 
            L0x20019a2c_f * (x**242) + L0x20019a2e_f * (x**243) + 
            L0x20019a30_f * (x**244) + L0x20019a32_f * (x**245) + 
            L0x20019a34_f * (x**246) + L0x20019a36_f * (x**247) + 
            L0x20019a38_f * (x**248) + L0x20019a3a_f * (x**249) + 
            L0x20019a3c_f * (x**250) + L0x20019a3e_f * (x**251) + 
            L0x20019a40_f * (x**252) + L0x20019a42_f * (x**253) + 
            L0x20019a44_f * (x**254) + L0x20019a46_f * (x**255)
          )
          [25570049, x**4 - y_0_48 * 17500092, y_0_48 - 1],
    (* inp_poly_49 *)
    eqmod (2**32) * (inp_poly_49 * inp_poly_49)
          (
            L0x20019848_f * (x**0) + L0x2001984a_f * (x**1) + 
            L0x2001984c_f * (x**2) + L0x2001984e_f * (x**3) + 
            L0x20019850_f * (x**4) + L0x20019852_f * (x**5) + 
            L0x20019854_f * (x**6) + L0x20019856_f * (x**7) + 
            L0x20019858_f * (x**8) + L0x2001985a_f * (x**9) + 
            L0x2001985c_f * (x**10) + L0x2001985e_f * (x**11) + 
            L0x20019860_f * (x**12) + L0x20019862_f * (x**13) + 
            L0x20019864_f * (x**14) + L0x20019866_f * (x**15) + 
            L0x20019868_f * (x**16) + L0x2001986a_f * (x**17) + 
            L0x2001986c_f * (x**18) + L0x2001986e_f * (x**19) + 
            L0x20019870_f * (x**20) + L0x20019872_f * (x**21) + 
            L0x20019874_f * (x**22) + L0x20019876_f * (x**23) + 
            L0x20019878_f * (x**24) + L0x2001987a_f * (x**25) + 
            L0x2001987c_f * (x**26) + L0x2001987e_f * (x**27) + 
            L0x20019880_f * (x**28) + L0x20019882_f * (x**29) + 
            L0x20019884_f * (x**30) + L0x20019886_f * (x**31) + 
            L0x20019888_f * (x**32) + L0x2001988a_f * (x**33) + 
            L0x2001988c_f * (x**34) + L0x2001988e_f * (x**35) + 
            L0x20019890_f * (x**36) + L0x20019892_f * (x**37) + 
            L0x20019894_f * (x**38) + L0x20019896_f * (x**39) + 
            L0x20019898_f * (x**40) + L0x2001989a_f * (x**41) + 
            L0x2001989c_f * (x**42) + L0x2001989e_f * (x**43) + 
            L0x200198a0_f * (x**44) + L0x200198a2_f * (x**45) + 
            L0x200198a4_f * (x**46) + L0x200198a6_f * (x**47) + 
            L0x200198a8_f * (x**48) + L0x200198aa_f * (x**49) + 
            L0x200198ac_f * (x**50) + L0x200198ae_f * (x**51) + 
            L0x200198b0_f * (x**52) + L0x200198b2_f * (x**53) + 
            L0x200198b4_f * (x**54) + L0x200198b6_f * (x**55) + 
            L0x200198b8_f * (x**56) + L0x200198ba_f * (x**57) + 
            L0x200198bc_f * (x**58) + L0x200198be_f * (x**59) + 
            L0x200198c0_f * (x**60) + L0x200198c2_f * (x**61) + 
            L0x200198c4_f * (x**62) + L0x200198c6_f * (x**63) + 
            L0x200198c8_f * (x**64) + L0x200198ca_f * (x**65) + 
            L0x200198cc_f * (x**66) + L0x200198ce_f * (x**67) + 
            L0x200198d0_f * (x**68) + L0x200198d2_f * (x**69) + 
            L0x200198d4_f * (x**70) + L0x200198d6_f * (x**71) + 
            L0x200198d8_f * (x**72) + L0x200198da_f * (x**73) + 
            L0x200198dc_f * (x**74) + L0x200198de_f * (x**75) + 
            L0x200198e0_f * (x**76) + L0x200198e2_f * (x**77) + 
            L0x200198e4_f * (x**78) + L0x200198e6_f * (x**79) + 
            L0x200198e8_f * (x**80) + L0x200198ea_f * (x**81) + 
            L0x200198ec_f * (x**82) + L0x200198ee_f * (x**83) + 
            L0x200198f0_f * (x**84) + L0x200198f2_f * (x**85) + 
            L0x200198f4_f * (x**86) + L0x200198f6_f * (x**87) + 
            L0x200198f8_f * (x**88) + L0x200198fa_f * (x**89) + 
            L0x200198fc_f * (x**90) + L0x200198fe_f * (x**91) + 
            L0x20019900_f * (x**92) + L0x20019902_f * (x**93) + 
            L0x20019904_f * (x**94) + L0x20019906_f * (x**95) + 
            L0x20019908_f * (x**96) + L0x2001990a_f * (x**97) + 
            L0x2001990c_f * (x**98) + L0x2001990e_f * (x**99) + 
            L0x20019910_f * (x**100) + L0x20019912_f * (x**101) + 
            L0x20019914_f * (x**102) + L0x20019916_f * (x**103) + 
            L0x20019918_f * (x**104) + L0x2001991a_f * (x**105) + 
            L0x2001991c_f * (x**106) + L0x2001991e_f * (x**107) + 
            L0x20019920_f * (x**108) + L0x20019922_f * (x**109) + 
            L0x20019924_f * (x**110) + L0x20019926_f * (x**111) + 
            L0x20019928_f * (x**112) + L0x2001992a_f * (x**113) + 
            L0x2001992c_f * (x**114) + L0x2001992e_f * (x**115) + 
            L0x20019930_f * (x**116) + L0x20019932_f * (x**117) + 
            L0x20019934_f * (x**118) + L0x20019936_f * (x**119) + 
            L0x20019938_f * (x**120) + L0x2001993a_f * (x**121) + 
            L0x2001993c_f * (x**122) + L0x2001993e_f * (x**123) + 
            L0x20019940_f * (x**124) + L0x20019942_f * (x**125) + 
            L0x20019944_f * (x**126) + L0x20019946_f * (x**127) + 
            L0x20019948_f * (x**128) + L0x2001994a_f * (x**129) + 
            L0x2001994c_f * (x**130) + L0x2001994e_f * (x**131) + 
            L0x20019950_f * (x**132) + L0x20019952_f * (x**133) + 
            L0x20019954_f * (x**134) + L0x20019956_f * (x**135) + 
            L0x20019958_f * (x**136) + L0x2001995a_f * (x**137) + 
            L0x2001995c_f * (x**138) + L0x2001995e_f * (x**139) + 
            L0x20019960_f * (x**140) + L0x20019962_f * (x**141) + 
            L0x20019964_f * (x**142) + L0x20019966_f * (x**143) + 
            L0x20019968_f * (x**144) + L0x2001996a_f * (x**145) + 
            L0x2001996c_f * (x**146) + L0x2001996e_f * (x**147) + 
            L0x20019970_f * (x**148) + L0x20019972_f * (x**149) + 
            L0x20019974_f * (x**150) + L0x20019976_f * (x**151) + 
            L0x20019978_f * (x**152) + L0x2001997a_f * (x**153) + 
            L0x2001997c_f * (x**154) + L0x2001997e_f * (x**155) + 
            L0x20019980_f * (x**156) + L0x20019982_f * (x**157) + 
            L0x20019984_f * (x**158) + L0x20019986_f * (x**159) + 
            L0x20019988_f * (x**160) + L0x2001998a_f * (x**161) + 
            L0x2001998c_f * (x**162) + L0x2001998e_f * (x**163) + 
            L0x20019990_f * (x**164) + L0x20019992_f * (x**165) + 
            L0x20019994_f * (x**166) + L0x20019996_f * (x**167) + 
            L0x20019998_f * (x**168) + L0x2001999a_f * (x**169) + 
            L0x2001999c_f * (x**170) + L0x2001999e_f * (x**171) + 
            L0x200199a0_f * (x**172) + L0x200199a2_f * (x**173) + 
            L0x200199a4_f * (x**174) + L0x200199a6_f * (x**175) + 
            L0x200199a8_f * (x**176) + L0x200199aa_f * (x**177) + 
            L0x200199ac_f * (x**178) + L0x200199ae_f * (x**179) + 
            L0x200199b0_f * (x**180) + L0x200199b2_f * (x**181) + 
            L0x200199b4_f * (x**182) + L0x200199b6_f * (x**183) + 
            L0x200199b8_f * (x**184) + L0x200199ba_f * (x**185) + 
            L0x200199bc_f * (x**186) + L0x200199be_f * (x**187) + 
            L0x200199c0_f * (x**188) + L0x200199c2_f * (x**189) + 
            L0x200199c4_f * (x**190) + L0x200199c6_f * (x**191) + 
            L0x200199c8_f * (x**192) + L0x200199ca_f * (x**193) + 
            L0x200199cc_f * (x**194) + L0x200199ce_f * (x**195) + 
            L0x200199d0_f * (x**196) + L0x200199d2_f * (x**197) + 
            L0x200199d4_f * (x**198) + L0x200199d6_f * (x**199) + 
            L0x200199d8_f * (x**200) + L0x200199da_f * (x**201) + 
            L0x200199dc_f * (x**202) + L0x200199de_f * (x**203) + 
            L0x200199e0_f * (x**204) + L0x200199e2_f * (x**205) + 
            L0x200199e4_f * (x**206) + L0x200199e6_f * (x**207) + 
            L0x200199e8_f * (x**208) + L0x200199ea_f * (x**209) + 
            L0x200199ec_f * (x**210) + L0x200199ee_f * (x**211) + 
            L0x200199f0_f * (x**212) + L0x200199f2_f * (x**213) + 
            L0x200199f4_f * (x**214) + L0x200199f6_f * (x**215) + 
            L0x200199f8_f * (x**216) + L0x200199fa_f * (x**217) + 
            L0x200199fc_f * (x**218) + L0x200199fe_f * (x**219) + 
            L0x20019a00_f * (x**220) + L0x20019a02_f * (x**221) + 
            L0x20019a04_f * (x**222) + L0x20019a06_f * (x**223) + 
            L0x20019a08_f * (x**224) + L0x20019a0a_f * (x**225) + 
            L0x20019a0c_f * (x**226) + L0x20019a0e_f * (x**227) + 
            L0x20019a10_f * (x**228) + L0x20019a12_f * (x**229) + 
            L0x20019a14_f * (x**230) + L0x20019a16_f * (x**231) + 
            L0x20019a18_f * (x**232) + L0x20019a1a_f * (x**233) + 
            L0x20019a1c_f * (x**234) + L0x20019a1e_f * (x**235) + 
            L0x20019a20_f * (x**236) + L0x20019a22_f * (x**237) + 
            L0x20019a24_f * (x**238) + L0x20019a26_f * (x**239) + 
            L0x20019a28_f * (x**240) + L0x20019a2a_f * (x**241) + 
            L0x20019a2c_f * (x**242) + L0x20019a2e_f * (x**243) + 
            L0x20019a30_f * (x**244) + L0x20019a32_f * (x**245) + 
            L0x20019a34_f * (x**246) + L0x20019a36_f * (x**247) + 
            L0x20019a38_f * (x**248) + L0x20019a3a_f * (x**249) + 
            L0x20019a3c_f * (x**250) + L0x20019a3e_f * (x**251) + 
            L0x20019a40_f * (x**252) + L0x20019a42_f * (x**253) + 
            L0x20019a44_f * (x**254) + L0x20019a46_f * (x**255)
          )
          [25570049, x**4 - y_0_49 * 8069957, y_0_49 - 1],
    (* inp_poly_50 *)
    eqmod (2**32) * (inp_poly_50 * inp_poly_50)
          (
            L0x20019848_f * (x**0) + L0x2001984a_f * (x**1) + 
            L0x2001984c_f * (x**2) + L0x2001984e_f * (x**3) + 
            L0x20019850_f * (x**4) + L0x20019852_f * (x**5) + 
            L0x20019854_f * (x**6) + L0x20019856_f * (x**7) + 
            L0x20019858_f * (x**8) + L0x2001985a_f * (x**9) + 
            L0x2001985c_f * (x**10) + L0x2001985e_f * (x**11) + 
            L0x20019860_f * (x**12) + L0x20019862_f * (x**13) + 
            L0x20019864_f * (x**14) + L0x20019866_f * (x**15) + 
            L0x20019868_f * (x**16) + L0x2001986a_f * (x**17) + 
            L0x2001986c_f * (x**18) + L0x2001986e_f * (x**19) + 
            L0x20019870_f * (x**20) + L0x20019872_f * (x**21) + 
            L0x20019874_f * (x**22) + L0x20019876_f * (x**23) + 
            L0x20019878_f * (x**24) + L0x2001987a_f * (x**25) + 
            L0x2001987c_f * (x**26) + L0x2001987e_f * (x**27) + 
            L0x20019880_f * (x**28) + L0x20019882_f * (x**29) + 
            L0x20019884_f * (x**30) + L0x20019886_f * (x**31) + 
            L0x20019888_f * (x**32) + L0x2001988a_f * (x**33) + 
            L0x2001988c_f * (x**34) + L0x2001988e_f * (x**35) + 
            L0x20019890_f * (x**36) + L0x20019892_f * (x**37) + 
            L0x20019894_f * (x**38) + L0x20019896_f * (x**39) + 
            L0x20019898_f * (x**40) + L0x2001989a_f * (x**41) + 
            L0x2001989c_f * (x**42) + L0x2001989e_f * (x**43) + 
            L0x200198a0_f * (x**44) + L0x200198a2_f * (x**45) + 
            L0x200198a4_f * (x**46) + L0x200198a6_f * (x**47) + 
            L0x200198a8_f * (x**48) + L0x200198aa_f * (x**49) + 
            L0x200198ac_f * (x**50) + L0x200198ae_f * (x**51) + 
            L0x200198b0_f * (x**52) + L0x200198b2_f * (x**53) + 
            L0x200198b4_f * (x**54) + L0x200198b6_f * (x**55) + 
            L0x200198b8_f * (x**56) + L0x200198ba_f * (x**57) + 
            L0x200198bc_f * (x**58) + L0x200198be_f * (x**59) + 
            L0x200198c0_f * (x**60) + L0x200198c2_f * (x**61) + 
            L0x200198c4_f * (x**62) + L0x200198c6_f * (x**63) + 
            L0x200198c8_f * (x**64) + L0x200198ca_f * (x**65) + 
            L0x200198cc_f * (x**66) + L0x200198ce_f * (x**67) + 
            L0x200198d0_f * (x**68) + L0x200198d2_f * (x**69) + 
            L0x200198d4_f * (x**70) + L0x200198d6_f * (x**71) + 
            L0x200198d8_f * (x**72) + L0x200198da_f * (x**73) + 
            L0x200198dc_f * (x**74) + L0x200198de_f * (x**75) + 
            L0x200198e0_f * (x**76) + L0x200198e2_f * (x**77) + 
            L0x200198e4_f * (x**78) + L0x200198e6_f * (x**79) + 
            L0x200198e8_f * (x**80) + L0x200198ea_f * (x**81) + 
            L0x200198ec_f * (x**82) + L0x200198ee_f * (x**83) + 
            L0x200198f0_f * (x**84) + L0x200198f2_f * (x**85) + 
            L0x200198f4_f * (x**86) + L0x200198f6_f * (x**87) + 
            L0x200198f8_f * (x**88) + L0x200198fa_f * (x**89) + 
            L0x200198fc_f * (x**90) + L0x200198fe_f * (x**91) + 
            L0x20019900_f * (x**92) + L0x20019902_f * (x**93) + 
            L0x20019904_f * (x**94) + L0x20019906_f * (x**95) + 
            L0x20019908_f * (x**96) + L0x2001990a_f * (x**97) + 
            L0x2001990c_f * (x**98) + L0x2001990e_f * (x**99) + 
            L0x20019910_f * (x**100) + L0x20019912_f * (x**101) + 
            L0x20019914_f * (x**102) + L0x20019916_f * (x**103) + 
            L0x20019918_f * (x**104) + L0x2001991a_f * (x**105) + 
            L0x2001991c_f * (x**106) + L0x2001991e_f * (x**107) + 
            L0x20019920_f * (x**108) + L0x20019922_f * (x**109) + 
            L0x20019924_f * (x**110) + L0x20019926_f * (x**111) + 
            L0x20019928_f * (x**112) + L0x2001992a_f * (x**113) + 
            L0x2001992c_f * (x**114) + L0x2001992e_f * (x**115) + 
            L0x20019930_f * (x**116) + L0x20019932_f * (x**117) + 
            L0x20019934_f * (x**118) + L0x20019936_f * (x**119) + 
            L0x20019938_f * (x**120) + L0x2001993a_f * (x**121) + 
            L0x2001993c_f * (x**122) + L0x2001993e_f * (x**123) + 
            L0x20019940_f * (x**124) + L0x20019942_f * (x**125) + 
            L0x20019944_f * (x**126) + L0x20019946_f * (x**127) + 
            L0x20019948_f * (x**128) + L0x2001994a_f * (x**129) + 
            L0x2001994c_f * (x**130) + L0x2001994e_f * (x**131) + 
            L0x20019950_f * (x**132) + L0x20019952_f * (x**133) + 
            L0x20019954_f * (x**134) + L0x20019956_f * (x**135) + 
            L0x20019958_f * (x**136) + L0x2001995a_f * (x**137) + 
            L0x2001995c_f * (x**138) + L0x2001995e_f * (x**139) + 
            L0x20019960_f * (x**140) + L0x20019962_f * (x**141) + 
            L0x20019964_f * (x**142) + L0x20019966_f * (x**143) + 
            L0x20019968_f * (x**144) + L0x2001996a_f * (x**145) + 
            L0x2001996c_f * (x**146) + L0x2001996e_f * (x**147) + 
            L0x20019970_f * (x**148) + L0x20019972_f * (x**149) + 
            L0x20019974_f * (x**150) + L0x20019976_f * (x**151) + 
            L0x20019978_f * (x**152) + L0x2001997a_f * (x**153) + 
            L0x2001997c_f * (x**154) + L0x2001997e_f * (x**155) + 
            L0x20019980_f * (x**156) + L0x20019982_f * (x**157) + 
            L0x20019984_f * (x**158) + L0x20019986_f * (x**159) + 
            L0x20019988_f * (x**160) + L0x2001998a_f * (x**161) + 
            L0x2001998c_f * (x**162) + L0x2001998e_f * (x**163) + 
            L0x20019990_f * (x**164) + L0x20019992_f * (x**165) + 
            L0x20019994_f * (x**166) + L0x20019996_f * (x**167) + 
            L0x20019998_f * (x**168) + L0x2001999a_f * (x**169) + 
            L0x2001999c_f * (x**170) + L0x2001999e_f * (x**171) + 
            L0x200199a0_f * (x**172) + L0x200199a2_f * (x**173) + 
            L0x200199a4_f * (x**174) + L0x200199a6_f * (x**175) + 
            L0x200199a8_f * (x**176) + L0x200199aa_f * (x**177) + 
            L0x200199ac_f * (x**178) + L0x200199ae_f * (x**179) + 
            L0x200199b0_f * (x**180) + L0x200199b2_f * (x**181) + 
            L0x200199b4_f * (x**182) + L0x200199b6_f * (x**183) + 
            L0x200199b8_f * (x**184) + L0x200199ba_f * (x**185) + 
            L0x200199bc_f * (x**186) + L0x200199be_f * (x**187) + 
            L0x200199c0_f * (x**188) + L0x200199c2_f * (x**189) + 
            L0x200199c4_f * (x**190) + L0x200199c6_f * (x**191) + 
            L0x200199c8_f * (x**192) + L0x200199ca_f * (x**193) + 
            L0x200199cc_f * (x**194) + L0x200199ce_f * (x**195) + 
            L0x200199d0_f * (x**196) + L0x200199d2_f * (x**197) + 
            L0x200199d4_f * (x**198) + L0x200199d6_f * (x**199) + 
            L0x200199d8_f * (x**200) + L0x200199da_f * (x**201) + 
            L0x200199dc_f * (x**202) + L0x200199de_f * (x**203) + 
            L0x200199e0_f * (x**204) + L0x200199e2_f * (x**205) + 
            L0x200199e4_f * (x**206) + L0x200199e6_f * (x**207) + 
            L0x200199e8_f * (x**208) + L0x200199ea_f * (x**209) + 
            L0x200199ec_f * (x**210) + L0x200199ee_f * (x**211) + 
            L0x200199f0_f * (x**212) + L0x200199f2_f * (x**213) + 
            L0x200199f4_f * (x**214) + L0x200199f6_f * (x**215) + 
            L0x200199f8_f * (x**216) + L0x200199fa_f * (x**217) + 
            L0x200199fc_f * (x**218) + L0x200199fe_f * (x**219) + 
            L0x20019a00_f * (x**220) + L0x20019a02_f * (x**221) + 
            L0x20019a04_f * (x**222) + L0x20019a06_f * (x**223) + 
            L0x20019a08_f * (x**224) + L0x20019a0a_f * (x**225) + 
            L0x20019a0c_f * (x**226) + L0x20019a0e_f * (x**227) + 
            L0x20019a10_f * (x**228) + L0x20019a12_f * (x**229) + 
            L0x20019a14_f * (x**230) + L0x20019a16_f * (x**231) + 
            L0x20019a18_f * (x**232) + L0x20019a1a_f * (x**233) + 
            L0x20019a1c_f * (x**234) + L0x20019a1e_f * (x**235) + 
            L0x20019a20_f * (x**236) + L0x20019a22_f * (x**237) + 
            L0x20019a24_f * (x**238) + L0x20019a26_f * (x**239) + 
            L0x20019a28_f * (x**240) + L0x20019a2a_f * (x**241) + 
            L0x20019a2c_f * (x**242) + L0x20019a2e_f * (x**243) + 
            L0x20019a30_f * (x**244) + L0x20019a32_f * (x**245) + 
            L0x20019a34_f * (x**246) + L0x20019a36_f * (x**247) + 
            L0x20019a38_f * (x**248) + L0x20019a3a_f * (x**249) + 
            L0x20019a3c_f * (x**250) + L0x20019a3e_f * (x**251) + 
            L0x20019a40_f * (x**252) + L0x20019a42_f * (x**253) + 
            L0x20019a44_f * (x**254) + L0x20019a46_f * (x**255)
          )
          [25570049, x**4 - y_0_50 * 3627172, y_0_50 - 1],
    (* inp_poly_51 *)
    eqmod (2**32) * (inp_poly_51 * inp_poly_51)
          (
            L0x20019848_f * (x**0) + L0x2001984a_f * (x**1) + 
            L0x2001984c_f * (x**2) + L0x2001984e_f * (x**3) + 
            L0x20019850_f * (x**4) + L0x20019852_f * (x**5) + 
            L0x20019854_f * (x**6) + L0x20019856_f * (x**7) + 
            L0x20019858_f * (x**8) + L0x2001985a_f * (x**9) + 
            L0x2001985c_f * (x**10) + L0x2001985e_f * (x**11) + 
            L0x20019860_f * (x**12) + L0x20019862_f * (x**13) + 
            L0x20019864_f * (x**14) + L0x20019866_f * (x**15) + 
            L0x20019868_f * (x**16) + L0x2001986a_f * (x**17) + 
            L0x2001986c_f * (x**18) + L0x2001986e_f * (x**19) + 
            L0x20019870_f * (x**20) + L0x20019872_f * (x**21) + 
            L0x20019874_f * (x**22) + L0x20019876_f * (x**23) + 
            L0x20019878_f * (x**24) + L0x2001987a_f * (x**25) + 
            L0x2001987c_f * (x**26) + L0x2001987e_f * (x**27) + 
            L0x20019880_f * (x**28) + L0x20019882_f * (x**29) + 
            L0x20019884_f * (x**30) + L0x20019886_f * (x**31) + 
            L0x20019888_f * (x**32) + L0x2001988a_f * (x**33) + 
            L0x2001988c_f * (x**34) + L0x2001988e_f * (x**35) + 
            L0x20019890_f * (x**36) + L0x20019892_f * (x**37) + 
            L0x20019894_f * (x**38) + L0x20019896_f * (x**39) + 
            L0x20019898_f * (x**40) + L0x2001989a_f * (x**41) + 
            L0x2001989c_f * (x**42) + L0x2001989e_f * (x**43) + 
            L0x200198a0_f * (x**44) + L0x200198a2_f * (x**45) + 
            L0x200198a4_f * (x**46) + L0x200198a6_f * (x**47) + 
            L0x200198a8_f * (x**48) + L0x200198aa_f * (x**49) + 
            L0x200198ac_f * (x**50) + L0x200198ae_f * (x**51) + 
            L0x200198b0_f * (x**52) + L0x200198b2_f * (x**53) + 
            L0x200198b4_f * (x**54) + L0x200198b6_f * (x**55) + 
            L0x200198b8_f * (x**56) + L0x200198ba_f * (x**57) + 
            L0x200198bc_f * (x**58) + L0x200198be_f * (x**59) + 
            L0x200198c0_f * (x**60) + L0x200198c2_f * (x**61) + 
            L0x200198c4_f * (x**62) + L0x200198c6_f * (x**63) + 
            L0x200198c8_f * (x**64) + L0x200198ca_f * (x**65) + 
            L0x200198cc_f * (x**66) + L0x200198ce_f * (x**67) + 
            L0x200198d0_f * (x**68) + L0x200198d2_f * (x**69) + 
            L0x200198d4_f * (x**70) + L0x200198d6_f * (x**71) + 
            L0x200198d8_f * (x**72) + L0x200198da_f * (x**73) + 
            L0x200198dc_f * (x**74) + L0x200198de_f * (x**75) + 
            L0x200198e0_f * (x**76) + L0x200198e2_f * (x**77) + 
            L0x200198e4_f * (x**78) + L0x200198e6_f * (x**79) + 
            L0x200198e8_f * (x**80) + L0x200198ea_f * (x**81) + 
            L0x200198ec_f * (x**82) + L0x200198ee_f * (x**83) + 
            L0x200198f0_f * (x**84) + L0x200198f2_f * (x**85) + 
            L0x200198f4_f * (x**86) + L0x200198f6_f * (x**87) + 
            L0x200198f8_f * (x**88) + L0x200198fa_f * (x**89) + 
            L0x200198fc_f * (x**90) + L0x200198fe_f * (x**91) + 
            L0x20019900_f * (x**92) + L0x20019902_f * (x**93) + 
            L0x20019904_f * (x**94) + L0x20019906_f * (x**95) + 
            L0x20019908_f * (x**96) + L0x2001990a_f * (x**97) + 
            L0x2001990c_f * (x**98) + L0x2001990e_f * (x**99) + 
            L0x20019910_f * (x**100) + L0x20019912_f * (x**101) + 
            L0x20019914_f * (x**102) + L0x20019916_f * (x**103) + 
            L0x20019918_f * (x**104) + L0x2001991a_f * (x**105) + 
            L0x2001991c_f * (x**106) + L0x2001991e_f * (x**107) + 
            L0x20019920_f * (x**108) + L0x20019922_f * (x**109) + 
            L0x20019924_f * (x**110) + L0x20019926_f * (x**111) + 
            L0x20019928_f * (x**112) + L0x2001992a_f * (x**113) + 
            L0x2001992c_f * (x**114) + L0x2001992e_f * (x**115) + 
            L0x20019930_f * (x**116) + L0x20019932_f * (x**117) + 
            L0x20019934_f * (x**118) + L0x20019936_f * (x**119) + 
            L0x20019938_f * (x**120) + L0x2001993a_f * (x**121) + 
            L0x2001993c_f * (x**122) + L0x2001993e_f * (x**123) + 
            L0x20019940_f * (x**124) + L0x20019942_f * (x**125) + 
            L0x20019944_f * (x**126) + L0x20019946_f * (x**127) + 
            L0x20019948_f * (x**128) + L0x2001994a_f * (x**129) + 
            L0x2001994c_f * (x**130) + L0x2001994e_f * (x**131) + 
            L0x20019950_f * (x**132) + L0x20019952_f * (x**133) + 
            L0x20019954_f * (x**134) + L0x20019956_f * (x**135) + 
            L0x20019958_f * (x**136) + L0x2001995a_f * (x**137) + 
            L0x2001995c_f * (x**138) + L0x2001995e_f * (x**139) + 
            L0x20019960_f * (x**140) + L0x20019962_f * (x**141) + 
            L0x20019964_f * (x**142) + L0x20019966_f * (x**143) + 
            L0x20019968_f * (x**144) + L0x2001996a_f * (x**145) + 
            L0x2001996c_f * (x**146) + L0x2001996e_f * (x**147) + 
            L0x20019970_f * (x**148) + L0x20019972_f * (x**149) + 
            L0x20019974_f * (x**150) + L0x20019976_f * (x**151) + 
            L0x20019978_f * (x**152) + L0x2001997a_f * (x**153) + 
            L0x2001997c_f * (x**154) + L0x2001997e_f * (x**155) + 
            L0x20019980_f * (x**156) + L0x20019982_f * (x**157) + 
            L0x20019984_f * (x**158) + L0x20019986_f * (x**159) + 
            L0x20019988_f * (x**160) + L0x2001998a_f * (x**161) + 
            L0x2001998c_f * (x**162) + L0x2001998e_f * (x**163) + 
            L0x20019990_f * (x**164) + L0x20019992_f * (x**165) + 
            L0x20019994_f * (x**166) + L0x20019996_f * (x**167) + 
            L0x20019998_f * (x**168) + L0x2001999a_f * (x**169) + 
            L0x2001999c_f * (x**170) + L0x2001999e_f * (x**171) + 
            L0x200199a0_f * (x**172) + L0x200199a2_f * (x**173) + 
            L0x200199a4_f * (x**174) + L0x200199a6_f * (x**175) + 
            L0x200199a8_f * (x**176) + L0x200199aa_f * (x**177) + 
            L0x200199ac_f * (x**178) + L0x200199ae_f * (x**179) + 
            L0x200199b0_f * (x**180) + L0x200199b2_f * (x**181) + 
            L0x200199b4_f * (x**182) + L0x200199b6_f * (x**183) + 
            L0x200199b8_f * (x**184) + L0x200199ba_f * (x**185) + 
            L0x200199bc_f * (x**186) + L0x200199be_f * (x**187) + 
            L0x200199c0_f * (x**188) + L0x200199c2_f * (x**189) + 
            L0x200199c4_f * (x**190) + L0x200199c6_f * (x**191) + 
            L0x200199c8_f * (x**192) + L0x200199ca_f * (x**193) + 
            L0x200199cc_f * (x**194) + L0x200199ce_f * (x**195) + 
            L0x200199d0_f * (x**196) + L0x200199d2_f * (x**197) + 
            L0x200199d4_f * (x**198) + L0x200199d6_f * (x**199) + 
            L0x200199d8_f * (x**200) + L0x200199da_f * (x**201) + 
            L0x200199dc_f * (x**202) + L0x200199de_f * (x**203) + 
            L0x200199e0_f * (x**204) + L0x200199e2_f * (x**205) + 
            L0x200199e4_f * (x**206) + L0x200199e6_f * (x**207) + 
            L0x200199e8_f * (x**208) + L0x200199ea_f * (x**209) + 
            L0x200199ec_f * (x**210) + L0x200199ee_f * (x**211) + 
            L0x200199f0_f * (x**212) + L0x200199f2_f * (x**213) + 
            L0x200199f4_f * (x**214) + L0x200199f6_f * (x**215) + 
            L0x200199f8_f * (x**216) + L0x200199fa_f * (x**217) + 
            L0x200199fc_f * (x**218) + L0x200199fe_f * (x**219) + 
            L0x20019a00_f * (x**220) + L0x20019a02_f * (x**221) + 
            L0x20019a04_f * (x**222) + L0x20019a06_f * (x**223) + 
            L0x20019a08_f * (x**224) + L0x20019a0a_f * (x**225) + 
            L0x20019a0c_f * (x**226) + L0x20019a0e_f * (x**227) + 
            L0x20019a10_f * (x**228) + L0x20019a12_f * (x**229) + 
            L0x20019a14_f * (x**230) + L0x20019a16_f * (x**231) + 
            L0x20019a18_f * (x**232) + L0x20019a1a_f * (x**233) + 
            L0x20019a1c_f * (x**234) + L0x20019a1e_f * (x**235) + 
            L0x20019a20_f * (x**236) + L0x20019a22_f * (x**237) + 
            L0x20019a24_f * (x**238) + L0x20019a26_f * (x**239) + 
            L0x20019a28_f * (x**240) + L0x20019a2a_f * (x**241) + 
            L0x20019a2c_f * (x**242) + L0x20019a2e_f * (x**243) + 
            L0x20019a30_f * (x**244) + L0x20019a32_f * (x**245) + 
            L0x20019a34_f * (x**246) + L0x20019a36_f * (x**247) + 
            L0x20019a38_f * (x**248) + L0x20019a3a_f * (x**249) + 
            L0x20019a3c_f * (x**250) + L0x20019a3e_f * (x**251) + 
            L0x20019a40_f * (x**252) + L0x20019a42_f * (x**253) + 
            L0x20019a44_f * (x**254) + L0x20019a46_f * (x**255)
          )
          [25570049, x**4 - y_0_51 * 21942877, y_0_51 - 1],
    (* inp_poly_52 *)
    eqmod (2**32) * (inp_poly_52 * inp_poly_52)
          (
            L0x20019848_f * (x**0) + L0x2001984a_f * (x**1) + 
            L0x2001984c_f * (x**2) + L0x2001984e_f * (x**3) + 
            L0x20019850_f * (x**4) + L0x20019852_f * (x**5) + 
            L0x20019854_f * (x**6) + L0x20019856_f * (x**7) + 
            L0x20019858_f * (x**8) + L0x2001985a_f * (x**9) + 
            L0x2001985c_f * (x**10) + L0x2001985e_f * (x**11) + 
            L0x20019860_f * (x**12) + L0x20019862_f * (x**13) + 
            L0x20019864_f * (x**14) + L0x20019866_f * (x**15) + 
            L0x20019868_f * (x**16) + L0x2001986a_f * (x**17) + 
            L0x2001986c_f * (x**18) + L0x2001986e_f * (x**19) + 
            L0x20019870_f * (x**20) + L0x20019872_f * (x**21) + 
            L0x20019874_f * (x**22) + L0x20019876_f * (x**23) + 
            L0x20019878_f * (x**24) + L0x2001987a_f * (x**25) + 
            L0x2001987c_f * (x**26) + L0x2001987e_f * (x**27) + 
            L0x20019880_f * (x**28) + L0x20019882_f * (x**29) + 
            L0x20019884_f * (x**30) + L0x20019886_f * (x**31) + 
            L0x20019888_f * (x**32) + L0x2001988a_f * (x**33) + 
            L0x2001988c_f * (x**34) + L0x2001988e_f * (x**35) + 
            L0x20019890_f * (x**36) + L0x20019892_f * (x**37) + 
            L0x20019894_f * (x**38) + L0x20019896_f * (x**39) + 
            L0x20019898_f * (x**40) + L0x2001989a_f * (x**41) + 
            L0x2001989c_f * (x**42) + L0x2001989e_f * (x**43) + 
            L0x200198a0_f * (x**44) + L0x200198a2_f * (x**45) + 
            L0x200198a4_f * (x**46) + L0x200198a6_f * (x**47) + 
            L0x200198a8_f * (x**48) + L0x200198aa_f * (x**49) + 
            L0x200198ac_f * (x**50) + L0x200198ae_f * (x**51) + 
            L0x200198b0_f * (x**52) + L0x200198b2_f * (x**53) + 
            L0x200198b4_f * (x**54) + L0x200198b6_f * (x**55) + 
            L0x200198b8_f * (x**56) + L0x200198ba_f * (x**57) + 
            L0x200198bc_f * (x**58) + L0x200198be_f * (x**59) + 
            L0x200198c0_f * (x**60) + L0x200198c2_f * (x**61) + 
            L0x200198c4_f * (x**62) + L0x200198c6_f * (x**63) + 
            L0x200198c8_f * (x**64) + L0x200198ca_f * (x**65) + 
            L0x200198cc_f * (x**66) + L0x200198ce_f * (x**67) + 
            L0x200198d0_f * (x**68) + L0x200198d2_f * (x**69) + 
            L0x200198d4_f * (x**70) + L0x200198d6_f * (x**71) + 
            L0x200198d8_f * (x**72) + L0x200198da_f * (x**73) + 
            L0x200198dc_f * (x**74) + L0x200198de_f * (x**75) + 
            L0x200198e0_f * (x**76) + L0x200198e2_f * (x**77) + 
            L0x200198e4_f * (x**78) + L0x200198e6_f * (x**79) + 
            L0x200198e8_f * (x**80) + L0x200198ea_f * (x**81) + 
            L0x200198ec_f * (x**82) + L0x200198ee_f * (x**83) + 
            L0x200198f0_f * (x**84) + L0x200198f2_f * (x**85) + 
            L0x200198f4_f * (x**86) + L0x200198f6_f * (x**87) + 
            L0x200198f8_f * (x**88) + L0x200198fa_f * (x**89) + 
            L0x200198fc_f * (x**90) + L0x200198fe_f * (x**91) + 
            L0x20019900_f * (x**92) + L0x20019902_f * (x**93) + 
            L0x20019904_f * (x**94) + L0x20019906_f * (x**95) + 
            L0x20019908_f * (x**96) + L0x2001990a_f * (x**97) + 
            L0x2001990c_f * (x**98) + L0x2001990e_f * (x**99) + 
            L0x20019910_f * (x**100) + L0x20019912_f * (x**101) + 
            L0x20019914_f * (x**102) + L0x20019916_f * (x**103) + 
            L0x20019918_f * (x**104) + L0x2001991a_f * (x**105) + 
            L0x2001991c_f * (x**106) + L0x2001991e_f * (x**107) + 
            L0x20019920_f * (x**108) + L0x20019922_f * (x**109) + 
            L0x20019924_f * (x**110) + L0x20019926_f * (x**111) + 
            L0x20019928_f * (x**112) + L0x2001992a_f * (x**113) + 
            L0x2001992c_f * (x**114) + L0x2001992e_f * (x**115) + 
            L0x20019930_f * (x**116) + L0x20019932_f * (x**117) + 
            L0x20019934_f * (x**118) + L0x20019936_f * (x**119) + 
            L0x20019938_f * (x**120) + L0x2001993a_f * (x**121) + 
            L0x2001993c_f * (x**122) + L0x2001993e_f * (x**123) + 
            L0x20019940_f * (x**124) + L0x20019942_f * (x**125) + 
            L0x20019944_f * (x**126) + L0x20019946_f * (x**127) + 
            L0x20019948_f * (x**128) + L0x2001994a_f * (x**129) + 
            L0x2001994c_f * (x**130) + L0x2001994e_f * (x**131) + 
            L0x20019950_f * (x**132) + L0x20019952_f * (x**133) + 
            L0x20019954_f * (x**134) + L0x20019956_f * (x**135) + 
            L0x20019958_f * (x**136) + L0x2001995a_f * (x**137) + 
            L0x2001995c_f * (x**138) + L0x2001995e_f * (x**139) + 
            L0x20019960_f * (x**140) + L0x20019962_f * (x**141) + 
            L0x20019964_f * (x**142) + L0x20019966_f * (x**143) + 
            L0x20019968_f * (x**144) + L0x2001996a_f * (x**145) + 
            L0x2001996c_f * (x**146) + L0x2001996e_f * (x**147) + 
            L0x20019970_f * (x**148) + L0x20019972_f * (x**149) + 
            L0x20019974_f * (x**150) + L0x20019976_f * (x**151) + 
            L0x20019978_f * (x**152) + L0x2001997a_f * (x**153) + 
            L0x2001997c_f * (x**154) + L0x2001997e_f * (x**155) + 
            L0x20019980_f * (x**156) + L0x20019982_f * (x**157) + 
            L0x20019984_f * (x**158) + L0x20019986_f * (x**159) + 
            L0x20019988_f * (x**160) + L0x2001998a_f * (x**161) + 
            L0x2001998c_f * (x**162) + L0x2001998e_f * (x**163) + 
            L0x20019990_f * (x**164) + L0x20019992_f * (x**165) + 
            L0x20019994_f * (x**166) + L0x20019996_f * (x**167) + 
            L0x20019998_f * (x**168) + L0x2001999a_f * (x**169) + 
            L0x2001999c_f * (x**170) + L0x2001999e_f * (x**171) + 
            L0x200199a0_f * (x**172) + L0x200199a2_f * (x**173) + 
            L0x200199a4_f * (x**174) + L0x200199a6_f * (x**175) + 
            L0x200199a8_f * (x**176) + L0x200199aa_f * (x**177) + 
            L0x200199ac_f * (x**178) + L0x200199ae_f * (x**179) + 
            L0x200199b0_f * (x**180) + L0x200199b2_f * (x**181) + 
            L0x200199b4_f * (x**182) + L0x200199b6_f * (x**183) + 
            L0x200199b8_f * (x**184) + L0x200199ba_f * (x**185) + 
            L0x200199bc_f * (x**186) + L0x200199be_f * (x**187) + 
            L0x200199c0_f * (x**188) + L0x200199c2_f * (x**189) + 
            L0x200199c4_f * (x**190) + L0x200199c6_f * (x**191) + 
            L0x200199c8_f * (x**192) + L0x200199ca_f * (x**193) + 
            L0x200199cc_f * (x**194) + L0x200199ce_f * (x**195) + 
            L0x200199d0_f * (x**196) + L0x200199d2_f * (x**197) + 
            L0x200199d4_f * (x**198) + L0x200199d6_f * (x**199) + 
            L0x200199d8_f * (x**200) + L0x200199da_f * (x**201) + 
            L0x200199dc_f * (x**202) + L0x200199de_f * (x**203) + 
            L0x200199e0_f * (x**204) + L0x200199e2_f * (x**205) + 
            L0x200199e4_f * (x**206) + L0x200199e6_f * (x**207) + 
            L0x200199e8_f * (x**208) + L0x200199ea_f * (x**209) + 
            L0x200199ec_f * (x**210) + L0x200199ee_f * (x**211) + 
            L0x200199f0_f * (x**212) + L0x200199f2_f * (x**213) + 
            L0x200199f4_f * (x**214) + L0x200199f6_f * (x**215) + 
            L0x200199f8_f * (x**216) + L0x200199fa_f * (x**217) + 
            L0x200199fc_f * (x**218) + L0x200199fe_f * (x**219) + 
            L0x20019a00_f * (x**220) + L0x20019a02_f * (x**221) + 
            L0x20019a04_f * (x**222) + L0x20019a06_f * (x**223) + 
            L0x20019a08_f * (x**224) + L0x20019a0a_f * (x**225) + 
            L0x20019a0c_f * (x**226) + L0x20019a0e_f * (x**227) + 
            L0x20019a10_f * (x**228) + L0x20019a12_f * (x**229) + 
            L0x20019a14_f * (x**230) + L0x20019a16_f * (x**231) + 
            L0x20019a18_f * (x**232) + L0x20019a1a_f * (x**233) + 
            L0x20019a1c_f * (x**234) + L0x20019a1e_f * (x**235) + 
            L0x20019a20_f * (x**236) + L0x20019a22_f * (x**237) + 
            L0x20019a24_f * (x**238) + L0x20019a26_f * (x**239) + 
            L0x20019a28_f * (x**240) + L0x20019a2a_f * (x**241) + 
            L0x20019a2c_f * (x**242) + L0x20019a2e_f * (x**243) + 
            L0x20019a30_f * (x**244) + L0x20019a32_f * (x**245) + 
            L0x20019a34_f * (x**246) + L0x20019a36_f * (x**247) + 
            L0x20019a38_f * (x**248) + L0x20019a3a_f * (x**249) + 
            L0x20019a3c_f * (x**250) + L0x20019a3e_f * (x**251) + 
            L0x20019a40_f * (x**252) + L0x20019a42_f * (x**253) + 
            L0x20019a44_f * (x**254) + L0x20019a46_f * (x**255)
          )
          [25570049, x**4 - y_0_52 * 4002385, y_0_52 - 1],
    (* inp_poly_53 *)
    eqmod (2**32) * (inp_poly_53 * inp_poly_53)
          (
            L0x20019848_f * (x**0) + L0x2001984a_f * (x**1) + 
            L0x2001984c_f * (x**2) + L0x2001984e_f * (x**3) + 
            L0x20019850_f * (x**4) + L0x20019852_f * (x**5) + 
            L0x20019854_f * (x**6) + L0x20019856_f * (x**7) + 
            L0x20019858_f * (x**8) + L0x2001985a_f * (x**9) + 
            L0x2001985c_f * (x**10) + L0x2001985e_f * (x**11) + 
            L0x20019860_f * (x**12) + L0x20019862_f * (x**13) + 
            L0x20019864_f * (x**14) + L0x20019866_f * (x**15) + 
            L0x20019868_f * (x**16) + L0x2001986a_f * (x**17) + 
            L0x2001986c_f * (x**18) + L0x2001986e_f * (x**19) + 
            L0x20019870_f * (x**20) + L0x20019872_f * (x**21) + 
            L0x20019874_f * (x**22) + L0x20019876_f * (x**23) + 
            L0x20019878_f * (x**24) + L0x2001987a_f * (x**25) + 
            L0x2001987c_f * (x**26) + L0x2001987e_f * (x**27) + 
            L0x20019880_f * (x**28) + L0x20019882_f * (x**29) + 
            L0x20019884_f * (x**30) + L0x20019886_f * (x**31) + 
            L0x20019888_f * (x**32) + L0x2001988a_f * (x**33) + 
            L0x2001988c_f * (x**34) + L0x2001988e_f * (x**35) + 
            L0x20019890_f * (x**36) + L0x20019892_f * (x**37) + 
            L0x20019894_f * (x**38) + L0x20019896_f * (x**39) + 
            L0x20019898_f * (x**40) + L0x2001989a_f * (x**41) + 
            L0x2001989c_f * (x**42) + L0x2001989e_f * (x**43) + 
            L0x200198a0_f * (x**44) + L0x200198a2_f * (x**45) + 
            L0x200198a4_f * (x**46) + L0x200198a6_f * (x**47) + 
            L0x200198a8_f * (x**48) + L0x200198aa_f * (x**49) + 
            L0x200198ac_f * (x**50) + L0x200198ae_f * (x**51) + 
            L0x200198b0_f * (x**52) + L0x200198b2_f * (x**53) + 
            L0x200198b4_f * (x**54) + L0x200198b6_f * (x**55) + 
            L0x200198b8_f * (x**56) + L0x200198ba_f * (x**57) + 
            L0x200198bc_f * (x**58) + L0x200198be_f * (x**59) + 
            L0x200198c0_f * (x**60) + L0x200198c2_f * (x**61) + 
            L0x200198c4_f * (x**62) + L0x200198c6_f * (x**63) + 
            L0x200198c8_f * (x**64) + L0x200198ca_f * (x**65) + 
            L0x200198cc_f * (x**66) + L0x200198ce_f * (x**67) + 
            L0x200198d0_f * (x**68) + L0x200198d2_f * (x**69) + 
            L0x200198d4_f * (x**70) + L0x200198d6_f * (x**71) + 
            L0x200198d8_f * (x**72) + L0x200198da_f * (x**73) + 
            L0x200198dc_f * (x**74) + L0x200198de_f * (x**75) + 
            L0x200198e0_f * (x**76) + L0x200198e2_f * (x**77) + 
            L0x200198e4_f * (x**78) + L0x200198e6_f * (x**79) + 
            L0x200198e8_f * (x**80) + L0x200198ea_f * (x**81) + 
            L0x200198ec_f * (x**82) + L0x200198ee_f * (x**83) + 
            L0x200198f0_f * (x**84) + L0x200198f2_f * (x**85) + 
            L0x200198f4_f * (x**86) + L0x200198f6_f * (x**87) + 
            L0x200198f8_f * (x**88) + L0x200198fa_f * (x**89) + 
            L0x200198fc_f * (x**90) + L0x200198fe_f * (x**91) + 
            L0x20019900_f * (x**92) + L0x20019902_f * (x**93) + 
            L0x20019904_f * (x**94) + L0x20019906_f * (x**95) + 
            L0x20019908_f * (x**96) + L0x2001990a_f * (x**97) + 
            L0x2001990c_f * (x**98) + L0x2001990e_f * (x**99) + 
            L0x20019910_f * (x**100) + L0x20019912_f * (x**101) + 
            L0x20019914_f * (x**102) + L0x20019916_f * (x**103) + 
            L0x20019918_f * (x**104) + L0x2001991a_f * (x**105) + 
            L0x2001991c_f * (x**106) + L0x2001991e_f * (x**107) + 
            L0x20019920_f * (x**108) + L0x20019922_f * (x**109) + 
            L0x20019924_f * (x**110) + L0x20019926_f * (x**111) + 
            L0x20019928_f * (x**112) + L0x2001992a_f * (x**113) + 
            L0x2001992c_f * (x**114) + L0x2001992e_f * (x**115) + 
            L0x20019930_f * (x**116) + L0x20019932_f * (x**117) + 
            L0x20019934_f * (x**118) + L0x20019936_f * (x**119) + 
            L0x20019938_f * (x**120) + L0x2001993a_f * (x**121) + 
            L0x2001993c_f * (x**122) + L0x2001993e_f * (x**123) + 
            L0x20019940_f * (x**124) + L0x20019942_f * (x**125) + 
            L0x20019944_f * (x**126) + L0x20019946_f * (x**127) + 
            L0x20019948_f * (x**128) + L0x2001994a_f * (x**129) + 
            L0x2001994c_f * (x**130) + L0x2001994e_f * (x**131) + 
            L0x20019950_f * (x**132) + L0x20019952_f * (x**133) + 
            L0x20019954_f * (x**134) + L0x20019956_f * (x**135) + 
            L0x20019958_f * (x**136) + L0x2001995a_f * (x**137) + 
            L0x2001995c_f * (x**138) + L0x2001995e_f * (x**139) + 
            L0x20019960_f * (x**140) + L0x20019962_f * (x**141) + 
            L0x20019964_f * (x**142) + L0x20019966_f * (x**143) + 
            L0x20019968_f * (x**144) + L0x2001996a_f * (x**145) + 
            L0x2001996c_f * (x**146) + L0x2001996e_f * (x**147) + 
            L0x20019970_f * (x**148) + L0x20019972_f * (x**149) + 
            L0x20019974_f * (x**150) + L0x20019976_f * (x**151) + 
            L0x20019978_f * (x**152) + L0x2001997a_f * (x**153) + 
            L0x2001997c_f * (x**154) + L0x2001997e_f * (x**155) + 
            L0x20019980_f * (x**156) + L0x20019982_f * (x**157) + 
            L0x20019984_f * (x**158) + L0x20019986_f * (x**159) + 
            L0x20019988_f * (x**160) + L0x2001998a_f * (x**161) + 
            L0x2001998c_f * (x**162) + L0x2001998e_f * (x**163) + 
            L0x20019990_f * (x**164) + L0x20019992_f * (x**165) + 
            L0x20019994_f * (x**166) + L0x20019996_f * (x**167) + 
            L0x20019998_f * (x**168) + L0x2001999a_f * (x**169) + 
            L0x2001999c_f * (x**170) + L0x2001999e_f * (x**171) + 
            L0x200199a0_f * (x**172) + L0x200199a2_f * (x**173) + 
            L0x200199a4_f * (x**174) + L0x200199a6_f * (x**175) + 
            L0x200199a8_f * (x**176) + L0x200199aa_f * (x**177) + 
            L0x200199ac_f * (x**178) + L0x200199ae_f * (x**179) + 
            L0x200199b0_f * (x**180) + L0x200199b2_f * (x**181) + 
            L0x200199b4_f * (x**182) + L0x200199b6_f * (x**183) + 
            L0x200199b8_f * (x**184) + L0x200199ba_f * (x**185) + 
            L0x200199bc_f * (x**186) + L0x200199be_f * (x**187) + 
            L0x200199c0_f * (x**188) + L0x200199c2_f * (x**189) + 
            L0x200199c4_f * (x**190) + L0x200199c6_f * (x**191) + 
            L0x200199c8_f * (x**192) + L0x200199ca_f * (x**193) + 
            L0x200199cc_f * (x**194) + L0x200199ce_f * (x**195) + 
            L0x200199d0_f * (x**196) + L0x200199d2_f * (x**197) + 
            L0x200199d4_f * (x**198) + L0x200199d6_f * (x**199) + 
            L0x200199d8_f * (x**200) + L0x200199da_f * (x**201) + 
            L0x200199dc_f * (x**202) + L0x200199de_f * (x**203) + 
            L0x200199e0_f * (x**204) + L0x200199e2_f * (x**205) + 
            L0x200199e4_f * (x**206) + L0x200199e6_f * (x**207) + 
            L0x200199e8_f * (x**208) + L0x200199ea_f * (x**209) + 
            L0x200199ec_f * (x**210) + L0x200199ee_f * (x**211) + 
            L0x200199f0_f * (x**212) + L0x200199f2_f * (x**213) + 
            L0x200199f4_f * (x**214) + L0x200199f6_f * (x**215) + 
            L0x200199f8_f * (x**216) + L0x200199fa_f * (x**217) + 
            L0x200199fc_f * (x**218) + L0x200199fe_f * (x**219) + 
            L0x20019a00_f * (x**220) + L0x20019a02_f * (x**221) + 
            L0x20019a04_f * (x**222) + L0x20019a06_f * (x**223) + 
            L0x20019a08_f * (x**224) + L0x20019a0a_f * (x**225) + 
            L0x20019a0c_f * (x**226) + L0x20019a0e_f * (x**227) + 
            L0x20019a10_f * (x**228) + L0x20019a12_f * (x**229) + 
            L0x20019a14_f * (x**230) + L0x20019a16_f * (x**231) + 
            L0x20019a18_f * (x**232) + L0x20019a1a_f * (x**233) + 
            L0x20019a1c_f * (x**234) + L0x20019a1e_f * (x**235) + 
            L0x20019a20_f * (x**236) + L0x20019a22_f * (x**237) + 
            L0x20019a24_f * (x**238) + L0x20019a26_f * (x**239) + 
            L0x20019a28_f * (x**240) + L0x20019a2a_f * (x**241) + 
            L0x20019a2c_f * (x**242) + L0x20019a2e_f * (x**243) + 
            L0x20019a30_f * (x**244) + L0x20019a32_f * (x**245) + 
            L0x20019a34_f * (x**246) + L0x20019a36_f * (x**247) + 
            L0x20019a38_f * (x**248) + L0x20019a3a_f * (x**249) + 
            L0x20019a3c_f * (x**250) + L0x20019a3e_f * (x**251) + 
            L0x20019a40_f * (x**252) + L0x20019a42_f * (x**253) + 
            L0x20019a44_f * (x**254) + L0x20019a46_f * (x**255)
          )
          [25570049, x**4 - y_0_53 * 21567664, y_0_53 - 1],
    (* inp_poly_54 *)
    eqmod (2**32) * (inp_poly_54 * inp_poly_54)
          (
            L0x20019848_f * (x**0) + L0x2001984a_f * (x**1) + 
            L0x2001984c_f * (x**2) + L0x2001984e_f * (x**3) + 
            L0x20019850_f * (x**4) + L0x20019852_f * (x**5) + 
            L0x20019854_f * (x**6) + L0x20019856_f * (x**7) + 
            L0x20019858_f * (x**8) + L0x2001985a_f * (x**9) + 
            L0x2001985c_f * (x**10) + L0x2001985e_f * (x**11) + 
            L0x20019860_f * (x**12) + L0x20019862_f * (x**13) + 
            L0x20019864_f * (x**14) + L0x20019866_f * (x**15) + 
            L0x20019868_f * (x**16) + L0x2001986a_f * (x**17) + 
            L0x2001986c_f * (x**18) + L0x2001986e_f * (x**19) + 
            L0x20019870_f * (x**20) + L0x20019872_f * (x**21) + 
            L0x20019874_f * (x**22) + L0x20019876_f * (x**23) + 
            L0x20019878_f * (x**24) + L0x2001987a_f * (x**25) + 
            L0x2001987c_f * (x**26) + L0x2001987e_f * (x**27) + 
            L0x20019880_f * (x**28) + L0x20019882_f * (x**29) + 
            L0x20019884_f * (x**30) + L0x20019886_f * (x**31) + 
            L0x20019888_f * (x**32) + L0x2001988a_f * (x**33) + 
            L0x2001988c_f * (x**34) + L0x2001988e_f * (x**35) + 
            L0x20019890_f * (x**36) + L0x20019892_f * (x**37) + 
            L0x20019894_f * (x**38) + L0x20019896_f * (x**39) + 
            L0x20019898_f * (x**40) + L0x2001989a_f * (x**41) + 
            L0x2001989c_f * (x**42) + L0x2001989e_f * (x**43) + 
            L0x200198a0_f * (x**44) + L0x200198a2_f * (x**45) + 
            L0x200198a4_f * (x**46) + L0x200198a6_f * (x**47) + 
            L0x200198a8_f * (x**48) + L0x200198aa_f * (x**49) + 
            L0x200198ac_f * (x**50) + L0x200198ae_f * (x**51) + 
            L0x200198b0_f * (x**52) + L0x200198b2_f * (x**53) + 
            L0x200198b4_f * (x**54) + L0x200198b6_f * (x**55) + 
            L0x200198b8_f * (x**56) + L0x200198ba_f * (x**57) + 
            L0x200198bc_f * (x**58) + L0x200198be_f * (x**59) + 
            L0x200198c0_f * (x**60) + L0x200198c2_f * (x**61) + 
            L0x200198c4_f * (x**62) + L0x200198c6_f * (x**63) + 
            L0x200198c8_f * (x**64) + L0x200198ca_f * (x**65) + 
            L0x200198cc_f * (x**66) + L0x200198ce_f * (x**67) + 
            L0x200198d0_f * (x**68) + L0x200198d2_f * (x**69) + 
            L0x200198d4_f * (x**70) + L0x200198d6_f * (x**71) + 
            L0x200198d8_f * (x**72) + L0x200198da_f * (x**73) + 
            L0x200198dc_f * (x**74) + L0x200198de_f * (x**75) + 
            L0x200198e0_f * (x**76) + L0x200198e2_f * (x**77) + 
            L0x200198e4_f * (x**78) + L0x200198e6_f * (x**79) + 
            L0x200198e8_f * (x**80) + L0x200198ea_f * (x**81) + 
            L0x200198ec_f * (x**82) + L0x200198ee_f * (x**83) + 
            L0x200198f0_f * (x**84) + L0x200198f2_f * (x**85) + 
            L0x200198f4_f * (x**86) + L0x200198f6_f * (x**87) + 
            L0x200198f8_f * (x**88) + L0x200198fa_f * (x**89) + 
            L0x200198fc_f * (x**90) + L0x200198fe_f * (x**91) + 
            L0x20019900_f * (x**92) + L0x20019902_f * (x**93) + 
            L0x20019904_f * (x**94) + L0x20019906_f * (x**95) + 
            L0x20019908_f * (x**96) + L0x2001990a_f * (x**97) + 
            L0x2001990c_f * (x**98) + L0x2001990e_f * (x**99) + 
            L0x20019910_f * (x**100) + L0x20019912_f * (x**101) + 
            L0x20019914_f * (x**102) + L0x20019916_f * (x**103) + 
            L0x20019918_f * (x**104) + L0x2001991a_f * (x**105) + 
            L0x2001991c_f * (x**106) + L0x2001991e_f * (x**107) + 
            L0x20019920_f * (x**108) + L0x20019922_f * (x**109) + 
            L0x20019924_f * (x**110) + L0x20019926_f * (x**111) + 
            L0x20019928_f * (x**112) + L0x2001992a_f * (x**113) + 
            L0x2001992c_f * (x**114) + L0x2001992e_f * (x**115) + 
            L0x20019930_f * (x**116) + L0x20019932_f * (x**117) + 
            L0x20019934_f * (x**118) + L0x20019936_f * (x**119) + 
            L0x20019938_f * (x**120) + L0x2001993a_f * (x**121) + 
            L0x2001993c_f * (x**122) + L0x2001993e_f * (x**123) + 
            L0x20019940_f * (x**124) + L0x20019942_f * (x**125) + 
            L0x20019944_f * (x**126) + L0x20019946_f * (x**127) + 
            L0x20019948_f * (x**128) + L0x2001994a_f * (x**129) + 
            L0x2001994c_f * (x**130) + L0x2001994e_f * (x**131) + 
            L0x20019950_f * (x**132) + L0x20019952_f * (x**133) + 
            L0x20019954_f * (x**134) + L0x20019956_f * (x**135) + 
            L0x20019958_f * (x**136) + L0x2001995a_f * (x**137) + 
            L0x2001995c_f * (x**138) + L0x2001995e_f * (x**139) + 
            L0x20019960_f * (x**140) + L0x20019962_f * (x**141) + 
            L0x20019964_f * (x**142) + L0x20019966_f * (x**143) + 
            L0x20019968_f * (x**144) + L0x2001996a_f * (x**145) + 
            L0x2001996c_f * (x**146) + L0x2001996e_f * (x**147) + 
            L0x20019970_f * (x**148) + L0x20019972_f * (x**149) + 
            L0x20019974_f * (x**150) + L0x20019976_f * (x**151) + 
            L0x20019978_f * (x**152) + L0x2001997a_f * (x**153) + 
            L0x2001997c_f * (x**154) + L0x2001997e_f * (x**155) + 
            L0x20019980_f * (x**156) + L0x20019982_f * (x**157) + 
            L0x20019984_f * (x**158) + L0x20019986_f * (x**159) + 
            L0x20019988_f * (x**160) + L0x2001998a_f * (x**161) + 
            L0x2001998c_f * (x**162) + L0x2001998e_f * (x**163) + 
            L0x20019990_f * (x**164) + L0x20019992_f * (x**165) + 
            L0x20019994_f * (x**166) + L0x20019996_f * (x**167) + 
            L0x20019998_f * (x**168) + L0x2001999a_f * (x**169) + 
            L0x2001999c_f * (x**170) + L0x2001999e_f * (x**171) + 
            L0x200199a0_f * (x**172) + L0x200199a2_f * (x**173) + 
            L0x200199a4_f * (x**174) + L0x200199a6_f * (x**175) + 
            L0x200199a8_f * (x**176) + L0x200199aa_f * (x**177) + 
            L0x200199ac_f * (x**178) + L0x200199ae_f * (x**179) + 
            L0x200199b0_f * (x**180) + L0x200199b2_f * (x**181) + 
            L0x200199b4_f * (x**182) + L0x200199b6_f * (x**183) + 
            L0x200199b8_f * (x**184) + L0x200199ba_f * (x**185) + 
            L0x200199bc_f * (x**186) + L0x200199be_f * (x**187) + 
            L0x200199c0_f * (x**188) + L0x200199c2_f * (x**189) + 
            L0x200199c4_f * (x**190) + L0x200199c6_f * (x**191) + 
            L0x200199c8_f * (x**192) + L0x200199ca_f * (x**193) + 
            L0x200199cc_f * (x**194) + L0x200199ce_f * (x**195) + 
            L0x200199d0_f * (x**196) + L0x200199d2_f * (x**197) + 
            L0x200199d4_f * (x**198) + L0x200199d6_f * (x**199) + 
            L0x200199d8_f * (x**200) + L0x200199da_f * (x**201) + 
            L0x200199dc_f * (x**202) + L0x200199de_f * (x**203) + 
            L0x200199e0_f * (x**204) + L0x200199e2_f * (x**205) + 
            L0x200199e4_f * (x**206) + L0x200199e6_f * (x**207) + 
            L0x200199e8_f * (x**208) + L0x200199ea_f * (x**209) + 
            L0x200199ec_f * (x**210) + L0x200199ee_f * (x**211) + 
            L0x200199f0_f * (x**212) + L0x200199f2_f * (x**213) + 
            L0x200199f4_f * (x**214) + L0x200199f6_f * (x**215) + 
            L0x200199f8_f * (x**216) + L0x200199fa_f * (x**217) + 
            L0x200199fc_f * (x**218) + L0x200199fe_f * (x**219) + 
            L0x20019a00_f * (x**220) + L0x20019a02_f * (x**221) + 
            L0x20019a04_f * (x**222) + L0x20019a06_f * (x**223) + 
            L0x20019a08_f * (x**224) + L0x20019a0a_f * (x**225) + 
            L0x20019a0c_f * (x**226) + L0x20019a0e_f * (x**227) + 
            L0x20019a10_f * (x**228) + L0x20019a12_f * (x**229) + 
            L0x20019a14_f * (x**230) + L0x20019a16_f * (x**231) + 
            L0x20019a18_f * (x**232) + L0x20019a1a_f * (x**233) + 
            L0x20019a1c_f * (x**234) + L0x20019a1e_f * (x**235) + 
            L0x20019a20_f * (x**236) + L0x20019a22_f * (x**237) + 
            L0x20019a24_f * (x**238) + L0x20019a26_f * (x**239) + 
            L0x20019a28_f * (x**240) + L0x20019a2a_f * (x**241) + 
            L0x20019a2c_f * (x**242) + L0x20019a2e_f * (x**243) + 
            L0x20019a30_f * (x**244) + L0x20019a32_f * (x**245) + 
            L0x20019a34_f * (x**246) + L0x20019a36_f * (x**247) + 
            L0x20019a38_f * (x**248) + L0x20019a3a_f * (x**249) + 
            L0x20019a3c_f * (x**250) + L0x20019a3e_f * (x**251) + 
            L0x20019a40_f * (x**252) + L0x20019a42_f * (x**253) + 
            L0x20019a44_f * (x**254) + L0x20019a46_f * (x**255)
          )
          [25570049, x**4 - y_0_54 * 9845387, y_0_54 - 1],
    (* inp_poly_55 *)
    eqmod (2**32) * (inp_poly_55 * inp_poly_55)
          (
            L0x20019848_f * (x**0) + L0x2001984a_f * (x**1) + 
            L0x2001984c_f * (x**2) + L0x2001984e_f * (x**3) + 
            L0x20019850_f * (x**4) + L0x20019852_f * (x**5) + 
            L0x20019854_f * (x**6) + L0x20019856_f * (x**7) + 
            L0x20019858_f * (x**8) + L0x2001985a_f * (x**9) + 
            L0x2001985c_f * (x**10) + L0x2001985e_f * (x**11) + 
            L0x20019860_f * (x**12) + L0x20019862_f * (x**13) + 
            L0x20019864_f * (x**14) + L0x20019866_f * (x**15) + 
            L0x20019868_f * (x**16) + L0x2001986a_f * (x**17) + 
            L0x2001986c_f * (x**18) + L0x2001986e_f * (x**19) + 
            L0x20019870_f * (x**20) + L0x20019872_f * (x**21) + 
            L0x20019874_f * (x**22) + L0x20019876_f * (x**23) + 
            L0x20019878_f * (x**24) + L0x2001987a_f * (x**25) + 
            L0x2001987c_f * (x**26) + L0x2001987e_f * (x**27) + 
            L0x20019880_f * (x**28) + L0x20019882_f * (x**29) + 
            L0x20019884_f * (x**30) + L0x20019886_f * (x**31) + 
            L0x20019888_f * (x**32) + L0x2001988a_f * (x**33) + 
            L0x2001988c_f * (x**34) + L0x2001988e_f * (x**35) + 
            L0x20019890_f * (x**36) + L0x20019892_f * (x**37) + 
            L0x20019894_f * (x**38) + L0x20019896_f * (x**39) + 
            L0x20019898_f * (x**40) + L0x2001989a_f * (x**41) + 
            L0x2001989c_f * (x**42) + L0x2001989e_f * (x**43) + 
            L0x200198a0_f * (x**44) + L0x200198a2_f * (x**45) + 
            L0x200198a4_f * (x**46) + L0x200198a6_f * (x**47) + 
            L0x200198a8_f * (x**48) + L0x200198aa_f * (x**49) + 
            L0x200198ac_f * (x**50) + L0x200198ae_f * (x**51) + 
            L0x200198b0_f * (x**52) + L0x200198b2_f * (x**53) + 
            L0x200198b4_f * (x**54) + L0x200198b6_f * (x**55) + 
            L0x200198b8_f * (x**56) + L0x200198ba_f * (x**57) + 
            L0x200198bc_f * (x**58) + L0x200198be_f * (x**59) + 
            L0x200198c0_f * (x**60) + L0x200198c2_f * (x**61) + 
            L0x200198c4_f * (x**62) + L0x200198c6_f * (x**63) + 
            L0x200198c8_f * (x**64) + L0x200198ca_f * (x**65) + 
            L0x200198cc_f * (x**66) + L0x200198ce_f * (x**67) + 
            L0x200198d0_f * (x**68) + L0x200198d2_f * (x**69) + 
            L0x200198d4_f * (x**70) + L0x200198d6_f * (x**71) + 
            L0x200198d8_f * (x**72) + L0x200198da_f * (x**73) + 
            L0x200198dc_f * (x**74) + L0x200198de_f * (x**75) + 
            L0x200198e0_f * (x**76) + L0x200198e2_f * (x**77) + 
            L0x200198e4_f * (x**78) + L0x200198e6_f * (x**79) + 
            L0x200198e8_f * (x**80) + L0x200198ea_f * (x**81) + 
            L0x200198ec_f * (x**82) + L0x200198ee_f * (x**83) + 
            L0x200198f0_f * (x**84) + L0x200198f2_f * (x**85) + 
            L0x200198f4_f * (x**86) + L0x200198f6_f * (x**87) + 
            L0x200198f8_f * (x**88) + L0x200198fa_f * (x**89) + 
            L0x200198fc_f * (x**90) + L0x200198fe_f * (x**91) + 
            L0x20019900_f * (x**92) + L0x20019902_f * (x**93) + 
            L0x20019904_f * (x**94) + L0x20019906_f * (x**95) + 
            L0x20019908_f * (x**96) + L0x2001990a_f * (x**97) + 
            L0x2001990c_f * (x**98) + L0x2001990e_f * (x**99) + 
            L0x20019910_f * (x**100) + L0x20019912_f * (x**101) + 
            L0x20019914_f * (x**102) + L0x20019916_f * (x**103) + 
            L0x20019918_f * (x**104) + L0x2001991a_f * (x**105) + 
            L0x2001991c_f * (x**106) + L0x2001991e_f * (x**107) + 
            L0x20019920_f * (x**108) + L0x20019922_f * (x**109) + 
            L0x20019924_f * (x**110) + L0x20019926_f * (x**111) + 
            L0x20019928_f * (x**112) + L0x2001992a_f * (x**113) + 
            L0x2001992c_f * (x**114) + L0x2001992e_f * (x**115) + 
            L0x20019930_f * (x**116) + L0x20019932_f * (x**117) + 
            L0x20019934_f * (x**118) + L0x20019936_f * (x**119) + 
            L0x20019938_f * (x**120) + L0x2001993a_f * (x**121) + 
            L0x2001993c_f * (x**122) + L0x2001993e_f * (x**123) + 
            L0x20019940_f * (x**124) + L0x20019942_f * (x**125) + 
            L0x20019944_f * (x**126) + L0x20019946_f * (x**127) + 
            L0x20019948_f * (x**128) + L0x2001994a_f * (x**129) + 
            L0x2001994c_f * (x**130) + L0x2001994e_f * (x**131) + 
            L0x20019950_f * (x**132) + L0x20019952_f * (x**133) + 
            L0x20019954_f * (x**134) + L0x20019956_f * (x**135) + 
            L0x20019958_f * (x**136) + L0x2001995a_f * (x**137) + 
            L0x2001995c_f * (x**138) + L0x2001995e_f * (x**139) + 
            L0x20019960_f * (x**140) + L0x20019962_f * (x**141) + 
            L0x20019964_f * (x**142) + L0x20019966_f * (x**143) + 
            L0x20019968_f * (x**144) + L0x2001996a_f * (x**145) + 
            L0x2001996c_f * (x**146) + L0x2001996e_f * (x**147) + 
            L0x20019970_f * (x**148) + L0x20019972_f * (x**149) + 
            L0x20019974_f * (x**150) + L0x20019976_f * (x**151) + 
            L0x20019978_f * (x**152) + L0x2001997a_f * (x**153) + 
            L0x2001997c_f * (x**154) + L0x2001997e_f * (x**155) + 
            L0x20019980_f * (x**156) + L0x20019982_f * (x**157) + 
            L0x20019984_f * (x**158) + L0x20019986_f * (x**159) + 
            L0x20019988_f * (x**160) + L0x2001998a_f * (x**161) + 
            L0x2001998c_f * (x**162) + L0x2001998e_f * (x**163) + 
            L0x20019990_f * (x**164) + L0x20019992_f * (x**165) + 
            L0x20019994_f * (x**166) + L0x20019996_f * (x**167) + 
            L0x20019998_f * (x**168) + L0x2001999a_f * (x**169) + 
            L0x2001999c_f * (x**170) + L0x2001999e_f * (x**171) + 
            L0x200199a0_f * (x**172) + L0x200199a2_f * (x**173) + 
            L0x200199a4_f * (x**174) + L0x200199a6_f * (x**175) + 
            L0x200199a8_f * (x**176) + L0x200199aa_f * (x**177) + 
            L0x200199ac_f * (x**178) + L0x200199ae_f * (x**179) + 
            L0x200199b0_f * (x**180) + L0x200199b2_f * (x**181) + 
            L0x200199b4_f * (x**182) + L0x200199b6_f * (x**183) + 
            L0x200199b8_f * (x**184) + L0x200199ba_f * (x**185) + 
            L0x200199bc_f * (x**186) + L0x200199be_f * (x**187) + 
            L0x200199c0_f * (x**188) + L0x200199c2_f * (x**189) + 
            L0x200199c4_f * (x**190) + L0x200199c6_f * (x**191) + 
            L0x200199c8_f * (x**192) + L0x200199ca_f * (x**193) + 
            L0x200199cc_f * (x**194) + L0x200199ce_f * (x**195) + 
            L0x200199d0_f * (x**196) + L0x200199d2_f * (x**197) + 
            L0x200199d4_f * (x**198) + L0x200199d6_f * (x**199) + 
            L0x200199d8_f * (x**200) + L0x200199da_f * (x**201) + 
            L0x200199dc_f * (x**202) + L0x200199de_f * (x**203) + 
            L0x200199e0_f * (x**204) + L0x200199e2_f * (x**205) + 
            L0x200199e4_f * (x**206) + L0x200199e6_f * (x**207) + 
            L0x200199e8_f * (x**208) + L0x200199ea_f * (x**209) + 
            L0x200199ec_f * (x**210) + L0x200199ee_f * (x**211) + 
            L0x200199f0_f * (x**212) + L0x200199f2_f * (x**213) + 
            L0x200199f4_f * (x**214) + L0x200199f6_f * (x**215) + 
            L0x200199f8_f * (x**216) + L0x200199fa_f * (x**217) + 
            L0x200199fc_f * (x**218) + L0x200199fe_f * (x**219) + 
            L0x20019a00_f * (x**220) + L0x20019a02_f * (x**221) + 
            L0x20019a04_f * (x**222) + L0x20019a06_f * (x**223) + 
            L0x20019a08_f * (x**224) + L0x20019a0a_f * (x**225) + 
            L0x20019a0c_f * (x**226) + L0x20019a0e_f * (x**227) + 
            L0x20019a10_f * (x**228) + L0x20019a12_f * (x**229) + 
            L0x20019a14_f * (x**230) + L0x20019a16_f * (x**231) + 
            L0x20019a18_f * (x**232) + L0x20019a1a_f * (x**233) + 
            L0x20019a1c_f * (x**234) + L0x20019a1e_f * (x**235) + 
            L0x20019a20_f * (x**236) + L0x20019a22_f * (x**237) + 
            L0x20019a24_f * (x**238) + L0x20019a26_f * (x**239) + 
            L0x20019a28_f * (x**240) + L0x20019a2a_f * (x**241) + 
            L0x20019a2c_f * (x**242) + L0x20019a2e_f * (x**243) + 
            L0x20019a30_f * (x**244) + L0x20019a32_f * (x**245) + 
            L0x20019a34_f * (x**246) + L0x20019a36_f * (x**247) + 
            L0x20019a38_f * (x**248) + L0x20019a3a_f * (x**249) + 
            L0x20019a3c_f * (x**250) + L0x20019a3e_f * (x**251) + 
            L0x20019a40_f * (x**252) + L0x20019a42_f * (x**253) + 
            L0x20019a44_f * (x**254) + L0x20019a46_f * (x**255)
          )
          [25570049, x**4 - y_0_55 * 15724662, y_0_55 - 1]
  ] prove with [cuts [50, 54], all ghosts]
  &&
  true
;

cut (* 69 *)
  true && true;

(* slice 7 *)
cut (* 70 *)
  and [
    (* inp_poly_56 *)
    eqmod (2**32) * (inp_poly_56 * inp_poly_56)
          (
            L0x20019848_f * (x**0) + L0x2001984a_f * (x**1) + 
            L0x2001984c_f * (x**2) + L0x2001984e_f * (x**3) + 
            L0x20019850_f * (x**4) + L0x20019852_f * (x**5) + 
            L0x20019854_f * (x**6) + L0x20019856_f * (x**7) + 
            L0x20019858_f * (x**8) + L0x2001985a_f * (x**9) + 
            L0x2001985c_f * (x**10) + L0x2001985e_f * (x**11) + 
            L0x20019860_f * (x**12) + L0x20019862_f * (x**13) + 
            L0x20019864_f * (x**14) + L0x20019866_f * (x**15) + 
            L0x20019868_f * (x**16) + L0x2001986a_f * (x**17) + 
            L0x2001986c_f * (x**18) + L0x2001986e_f * (x**19) + 
            L0x20019870_f * (x**20) + L0x20019872_f * (x**21) + 
            L0x20019874_f * (x**22) + L0x20019876_f * (x**23) + 
            L0x20019878_f * (x**24) + L0x2001987a_f * (x**25) + 
            L0x2001987c_f * (x**26) + L0x2001987e_f * (x**27) + 
            L0x20019880_f * (x**28) + L0x20019882_f * (x**29) + 
            L0x20019884_f * (x**30) + L0x20019886_f * (x**31) + 
            L0x20019888_f * (x**32) + L0x2001988a_f * (x**33) + 
            L0x2001988c_f * (x**34) + L0x2001988e_f * (x**35) + 
            L0x20019890_f * (x**36) + L0x20019892_f * (x**37) + 
            L0x20019894_f * (x**38) + L0x20019896_f * (x**39) + 
            L0x20019898_f * (x**40) + L0x2001989a_f * (x**41) + 
            L0x2001989c_f * (x**42) + L0x2001989e_f * (x**43) + 
            L0x200198a0_f * (x**44) + L0x200198a2_f * (x**45) + 
            L0x200198a4_f * (x**46) + L0x200198a6_f * (x**47) + 
            L0x200198a8_f * (x**48) + L0x200198aa_f * (x**49) + 
            L0x200198ac_f * (x**50) + L0x200198ae_f * (x**51) + 
            L0x200198b0_f * (x**52) + L0x200198b2_f * (x**53) + 
            L0x200198b4_f * (x**54) + L0x200198b6_f * (x**55) + 
            L0x200198b8_f * (x**56) + L0x200198ba_f * (x**57) + 
            L0x200198bc_f * (x**58) + L0x200198be_f * (x**59) + 
            L0x200198c0_f * (x**60) + L0x200198c2_f * (x**61) + 
            L0x200198c4_f * (x**62) + L0x200198c6_f * (x**63) + 
            L0x200198c8_f * (x**64) + L0x200198ca_f * (x**65) + 
            L0x200198cc_f * (x**66) + L0x200198ce_f * (x**67) + 
            L0x200198d0_f * (x**68) + L0x200198d2_f * (x**69) + 
            L0x200198d4_f * (x**70) + L0x200198d6_f * (x**71) + 
            L0x200198d8_f * (x**72) + L0x200198da_f * (x**73) + 
            L0x200198dc_f * (x**74) + L0x200198de_f * (x**75) + 
            L0x200198e0_f * (x**76) + L0x200198e2_f * (x**77) + 
            L0x200198e4_f * (x**78) + L0x200198e6_f * (x**79) + 
            L0x200198e8_f * (x**80) + L0x200198ea_f * (x**81) + 
            L0x200198ec_f * (x**82) + L0x200198ee_f * (x**83) + 
            L0x200198f0_f * (x**84) + L0x200198f2_f * (x**85) + 
            L0x200198f4_f * (x**86) + L0x200198f6_f * (x**87) + 
            L0x200198f8_f * (x**88) + L0x200198fa_f * (x**89) + 
            L0x200198fc_f * (x**90) + L0x200198fe_f * (x**91) + 
            L0x20019900_f * (x**92) + L0x20019902_f * (x**93) + 
            L0x20019904_f * (x**94) + L0x20019906_f * (x**95) + 
            L0x20019908_f * (x**96) + L0x2001990a_f * (x**97) + 
            L0x2001990c_f * (x**98) + L0x2001990e_f * (x**99) + 
            L0x20019910_f * (x**100) + L0x20019912_f * (x**101) + 
            L0x20019914_f * (x**102) + L0x20019916_f * (x**103) + 
            L0x20019918_f * (x**104) + L0x2001991a_f * (x**105) + 
            L0x2001991c_f * (x**106) + L0x2001991e_f * (x**107) + 
            L0x20019920_f * (x**108) + L0x20019922_f * (x**109) + 
            L0x20019924_f * (x**110) + L0x20019926_f * (x**111) + 
            L0x20019928_f * (x**112) + L0x2001992a_f * (x**113) + 
            L0x2001992c_f * (x**114) + L0x2001992e_f * (x**115) + 
            L0x20019930_f * (x**116) + L0x20019932_f * (x**117) + 
            L0x20019934_f * (x**118) + L0x20019936_f * (x**119) + 
            L0x20019938_f * (x**120) + L0x2001993a_f * (x**121) + 
            L0x2001993c_f * (x**122) + L0x2001993e_f * (x**123) + 
            L0x20019940_f * (x**124) + L0x20019942_f * (x**125) + 
            L0x20019944_f * (x**126) + L0x20019946_f * (x**127) + 
            L0x20019948_f * (x**128) + L0x2001994a_f * (x**129) + 
            L0x2001994c_f * (x**130) + L0x2001994e_f * (x**131) + 
            L0x20019950_f * (x**132) + L0x20019952_f * (x**133) + 
            L0x20019954_f * (x**134) + L0x20019956_f * (x**135) + 
            L0x20019958_f * (x**136) + L0x2001995a_f * (x**137) + 
            L0x2001995c_f * (x**138) + L0x2001995e_f * (x**139) + 
            L0x20019960_f * (x**140) + L0x20019962_f * (x**141) + 
            L0x20019964_f * (x**142) + L0x20019966_f * (x**143) + 
            L0x20019968_f * (x**144) + L0x2001996a_f * (x**145) + 
            L0x2001996c_f * (x**146) + L0x2001996e_f * (x**147) + 
            L0x20019970_f * (x**148) + L0x20019972_f * (x**149) + 
            L0x20019974_f * (x**150) + L0x20019976_f * (x**151) + 
            L0x20019978_f * (x**152) + L0x2001997a_f * (x**153) + 
            L0x2001997c_f * (x**154) + L0x2001997e_f * (x**155) + 
            L0x20019980_f * (x**156) + L0x20019982_f * (x**157) + 
            L0x20019984_f * (x**158) + L0x20019986_f * (x**159) + 
            L0x20019988_f * (x**160) + L0x2001998a_f * (x**161) + 
            L0x2001998c_f * (x**162) + L0x2001998e_f * (x**163) + 
            L0x20019990_f * (x**164) + L0x20019992_f * (x**165) + 
            L0x20019994_f * (x**166) + L0x20019996_f * (x**167) + 
            L0x20019998_f * (x**168) + L0x2001999a_f * (x**169) + 
            L0x2001999c_f * (x**170) + L0x2001999e_f * (x**171) + 
            L0x200199a0_f * (x**172) + L0x200199a2_f * (x**173) + 
            L0x200199a4_f * (x**174) + L0x200199a6_f * (x**175) + 
            L0x200199a8_f * (x**176) + L0x200199aa_f * (x**177) + 
            L0x200199ac_f * (x**178) + L0x200199ae_f * (x**179) + 
            L0x200199b0_f * (x**180) + L0x200199b2_f * (x**181) + 
            L0x200199b4_f * (x**182) + L0x200199b6_f * (x**183) + 
            L0x200199b8_f * (x**184) + L0x200199ba_f * (x**185) + 
            L0x200199bc_f * (x**186) + L0x200199be_f * (x**187) + 
            L0x200199c0_f * (x**188) + L0x200199c2_f * (x**189) + 
            L0x200199c4_f * (x**190) + L0x200199c6_f * (x**191) + 
            L0x200199c8_f * (x**192) + L0x200199ca_f * (x**193) + 
            L0x200199cc_f * (x**194) + L0x200199ce_f * (x**195) + 
            L0x200199d0_f * (x**196) + L0x200199d2_f * (x**197) + 
            L0x200199d4_f * (x**198) + L0x200199d6_f * (x**199) + 
            L0x200199d8_f * (x**200) + L0x200199da_f * (x**201) + 
            L0x200199dc_f * (x**202) + L0x200199de_f * (x**203) + 
            L0x200199e0_f * (x**204) + L0x200199e2_f * (x**205) + 
            L0x200199e4_f * (x**206) + L0x200199e6_f * (x**207) + 
            L0x200199e8_f * (x**208) + L0x200199ea_f * (x**209) + 
            L0x200199ec_f * (x**210) + L0x200199ee_f * (x**211) + 
            L0x200199f0_f * (x**212) + L0x200199f2_f * (x**213) + 
            L0x200199f4_f * (x**214) + L0x200199f6_f * (x**215) + 
            L0x200199f8_f * (x**216) + L0x200199fa_f * (x**217) + 
            L0x200199fc_f * (x**218) + L0x200199fe_f * (x**219) + 
            L0x20019a00_f * (x**220) + L0x20019a02_f * (x**221) + 
            L0x20019a04_f * (x**222) + L0x20019a06_f * (x**223) + 
            L0x20019a08_f * (x**224) + L0x20019a0a_f * (x**225) + 
            L0x20019a0c_f * (x**226) + L0x20019a0e_f * (x**227) + 
            L0x20019a10_f * (x**228) + L0x20019a12_f * (x**229) + 
            L0x20019a14_f * (x**230) + L0x20019a16_f * (x**231) + 
            L0x20019a18_f * (x**232) + L0x20019a1a_f * (x**233) + 
            L0x20019a1c_f * (x**234) + L0x20019a1e_f * (x**235) + 
            L0x20019a20_f * (x**236) + L0x20019a22_f * (x**237) + 
            L0x20019a24_f * (x**238) + L0x20019a26_f * (x**239) + 
            L0x20019a28_f * (x**240) + L0x20019a2a_f * (x**241) + 
            L0x20019a2c_f * (x**242) + L0x20019a2e_f * (x**243) + 
            L0x20019a30_f * (x**244) + L0x20019a32_f * (x**245) + 
            L0x20019a34_f * (x**246) + L0x20019a36_f * (x**247) + 
            L0x20019a38_f * (x**248) + L0x20019a3a_f * (x**249) + 
            L0x20019a3c_f * (x**250) + L0x20019a3e_f * (x**251) + 
            L0x20019a40_f * (x**252) + L0x20019a42_f * (x**253) + 
            L0x20019a44_f * (x**254) + L0x20019a46_f * (x**255)
          )
          [25570049, x**4 - y_0_56 * 6096206, y_0_56 - 1],
    (* inp_poly_57 *)
    eqmod (2**32) * (inp_poly_57 * inp_poly_57)
          (
            L0x20019848_f * (x**0) + L0x2001984a_f * (x**1) + 
            L0x2001984c_f * (x**2) + L0x2001984e_f * (x**3) + 
            L0x20019850_f * (x**4) + L0x20019852_f * (x**5) + 
            L0x20019854_f * (x**6) + L0x20019856_f * (x**7) + 
            L0x20019858_f * (x**8) + L0x2001985a_f * (x**9) + 
            L0x2001985c_f * (x**10) + L0x2001985e_f * (x**11) + 
            L0x20019860_f * (x**12) + L0x20019862_f * (x**13) + 
            L0x20019864_f * (x**14) + L0x20019866_f * (x**15) + 
            L0x20019868_f * (x**16) + L0x2001986a_f * (x**17) + 
            L0x2001986c_f * (x**18) + L0x2001986e_f * (x**19) + 
            L0x20019870_f * (x**20) + L0x20019872_f * (x**21) + 
            L0x20019874_f * (x**22) + L0x20019876_f * (x**23) + 
            L0x20019878_f * (x**24) + L0x2001987a_f * (x**25) + 
            L0x2001987c_f * (x**26) + L0x2001987e_f * (x**27) + 
            L0x20019880_f * (x**28) + L0x20019882_f * (x**29) + 
            L0x20019884_f * (x**30) + L0x20019886_f * (x**31) + 
            L0x20019888_f * (x**32) + L0x2001988a_f * (x**33) + 
            L0x2001988c_f * (x**34) + L0x2001988e_f * (x**35) + 
            L0x20019890_f * (x**36) + L0x20019892_f * (x**37) + 
            L0x20019894_f * (x**38) + L0x20019896_f * (x**39) + 
            L0x20019898_f * (x**40) + L0x2001989a_f * (x**41) + 
            L0x2001989c_f * (x**42) + L0x2001989e_f * (x**43) + 
            L0x200198a0_f * (x**44) + L0x200198a2_f * (x**45) + 
            L0x200198a4_f * (x**46) + L0x200198a6_f * (x**47) + 
            L0x200198a8_f * (x**48) + L0x200198aa_f * (x**49) + 
            L0x200198ac_f * (x**50) + L0x200198ae_f * (x**51) + 
            L0x200198b0_f * (x**52) + L0x200198b2_f * (x**53) + 
            L0x200198b4_f * (x**54) + L0x200198b6_f * (x**55) + 
            L0x200198b8_f * (x**56) + L0x200198ba_f * (x**57) + 
            L0x200198bc_f * (x**58) + L0x200198be_f * (x**59) + 
            L0x200198c0_f * (x**60) + L0x200198c2_f * (x**61) + 
            L0x200198c4_f * (x**62) + L0x200198c6_f * (x**63) + 
            L0x200198c8_f * (x**64) + L0x200198ca_f * (x**65) + 
            L0x200198cc_f * (x**66) + L0x200198ce_f * (x**67) + 
            L0x200198d0_f * (x**68) + L0x200198d2_f * (x**69) + 
            L0x200198d4_f * (x**70) + L0x200198d6_f * (x**71) + 
            L0x200198d8_f * (x**72) + L0x200198da_f * (x**73) + 
            L0x200198dc_f * (x**74) + L0x200198de_f * (x**75) + 
            L0x200198e0_f * (x**76) + L0x200198e2_f * (x**77) + 
            L0x200198e4_f * (x**78) + L0x200198e6_f * (x**79) + 
            L0x200198e8_f * (x**80) + L0x200198ea_f * (x**81) + 
            L0x200198ec_f * (x**82) + L0x200198ee_f * (x**83) + 
            L0x200198f0_f * (x**84) + L0x200198f2_f * (x**85) + 
            L0x200198f4_f * (x**86) + L0x200198f6_f * (x**87) + 
            L0x200198f8_f * (x**88) + L0x200198fa_f * (x**89) + 
            L0x200198fc_f * (x**90) + L0x200198fe_f * (x**91) + 
            L0x20019900_f * (x**92) + L0x20019902_f * (x**93) + 
            L0x20019904_f * (x**94) + L0x20019906_f * (x**95) + 
            L0x20019908_f * (x**96) + L0x2001990a_f * (x**97) + 
            L0x2001990c_f * (x**98) + L0x2001990e_f * (x**99) + 
            L0x20019910_f * (x**100) + L0x20019912_f * (x**101) + 
            L0x20019914_f * (x**102) + L0x20019916_f * (x**103) + 
            L0x20019918_f * (x**104) + L0x2001991a_f * (x**105) + 
            L0x2001991c_f * (x**106) + L0x2001991e_f * (x**107) + 
            L0x20019920_f * (x**108) + L0x20019922_f * (x**109) + 
            L0x20019924_f * (x**110) + L0x20019926_f * (x**111) + 
            L0x20019928_f * (x**112) + L0x2001992a_f * (x**113) + 
            L0x2001992c_f * (x**114) + L0x2001992e_f * (x**115) + 
            L0x20019930_f * (x**116) + L0x20019932_f * (x**117) + 
            L0x20019934_f * (x**118) + L0x20019936_f * (x**119) + 
            L0x20019938_f * (x**120) + L0x2001993a_f * (x**121) + 
            L0x2001993c_f * (x**122) + L0x2001993e_f * (x**123) + 
            L0x20019940_f * (x**124) + L0x20019942_f * (x**125) + 
            L0x20019944_f * (x**126) + L0x20019946_f * (x**127) + 
            L0x20019948_f * (x**128) + L0x2001994a_f * (x**129) + 
            L0x2001994c_f * (x**130) + L0x2001994e_f * (x**131) + 
            L0x20019950_f * (x**132) + L0x20019952_f * (x**133) + 
            L0x20019954_f * (x**134) + L0x20019956_f * (x**135) + 
            L0x20019958_f * (x**136) + L0x2001995a_f * (x**137) + 
            L0x2001995c_f * (x**138) + L0x2001995e_f * (x**139) + 
            L0x20019960_f * (x**140) + L0x20019962_f * (x**141) + 
            L0x20019964_f * (x**142) + L0x20019966_f * (x**143) + 
            L0x20019968_f * (x**144) + L0x2001996a_f * (x**145) + 
            L0x2001996c_f * (x**146) + L0x2001996e_f * (x**147) + 
            L0x20019970_f * (x**148) + L0x20019972_f * (x**149) + 
            L0x20019974_f * (x**150) + L0x20019976_f * (x**151) + 
            L0x20019978_f * (x**152) + L0x2001997a_f * (x**153) + 
            L0x2001997c_f * (x**154) + L0x2001997e_f * (x**155) + 
            L0x20019980_f * (x**156) + L0x20019982_f * (x**157) + 
            L0x20019984_f * (x**158) + L0x20019986_f * (x**159) + 
            L0x20019988_f * (x**160) + L0x2001998a_f * (x**161) + 
            L0x2001998c_f * (x**162) + L0x2001998e_f * (x**163) + 
            L0x20019990_f * (x**164) + L0x20019992_f * (x**165) + 
            L0x20019994_f * (x**166) + L0x20019996_f * (x**167) + 
            L0x20019998_f * (x**168) + L0x2001999a_f * (x**169) + 
            L0x2001999c_f * (x**170) + L0x2001999e_f * (x**171) + 
            L0x200199a0_f * (x**172) + L0x200199a2_f * (x**173) + 
            L0x200199a4_f * (x**174) + L0x200199a6_f * (x**175) + 
            L0x200199a8_f * (x**176) + L0x200199aa_f * (x**177) + 
            L0x200199ac_f * (x**178) + L0x200199ae_f * (x**179) + 
            L0x200199b0_f * (x**180) + L0x200199b2_f * (x**181) + 
            L0x200199b4_f * (x**182) + L0x200199b6_f * (x**183) + 
            L0x200199b8_f * (x**184) + L0x200199ba_f * (x**185) + 
            L0x200199bc_f * (x**186) + L0x200199be_f * (x**187) + 
            L0x200199c0_f * (x**188) + L0x200199c2_f * (x**189) + 
            L0x200199c4_f * (x**190) + L0x200199c6_f * (x**191) + 
            L0x200199c8_f * (x**192) + L0x200199ca_f * (x**193) + 
            L0x200199cc_f * (x**194) + L0x200199ce_f * (x**195) + 
            L0x200199d0_f * (x**196) + L0x200199d2_f * (x**197) + 
            L0x200199d4_f * (x**198) + L0x200199d6_f * (x**199) + 
            L0x200199d8_f * (x**200) + L0x200199da_f * (x**201) + 
            L0x200199dc_f * (x**202) + L0x200199de_f * (x**203) + 
            L0x200199e0_f * (x**204) + L0x200199e2_f * (x**205) + 
            L0x200199e4_f * (x**206) + L0x200199e6_f * (x**207) + 
            L0x200199e8_f * (x**208) + L0x200199ea_f * (x**209) + 
            L0x200199ec_f * (x**210) + L0x200199ee_f * (x**211) + 
            L0x200199f0_f * (x**212) + L0x200199f2_f * (x**213) + 
            L0x200199f4_f * (x**214) + L0x200199f6_f * (x**215) + 
            L0x200199f8_f * (x**216) + L0x200199fa_f * (x**217) + 
            L0x200199fc_f * (x**218) + L0x200199fe_f * (x**219) + 
            L0x20019a00_f * (x**220) + L0x20019a02_f * (x**221) + 
            L0x20019a04_f * (x**222) + L0x20019a06_f * (x**223) + 
            L0x20019a08_f * (x**224) + L0x20019a0a_f * (x**225) + 
            L0x20019a0c_f * (x**226) + L0x20019a0e_f * (x**227) + 
            L0x20019a10_f * (x**228) + L0x20019a12_f * (x**229) + 
            L0x20019a14_f * (x**230) + L0x20019a16_f * (x**231) + 
            L0x20019a18_f * (x**232) + L0x20019a1a_f * (x**233) + 
            L0x20019a1c_f * (x**234) + L0x20019a1e_f * (x**235) + 
            L0x20019a20_f * (x**236) + L0x20019a22_f * (x**237) + 
            L0x20019a24_f * (x**238) + L0x20019a26_f * (x**239) + 
            L0x20019a28_f * (x**240) + L0x20019a2a_f * (x**241) + 
            L0x20019a2c_f * (x**242) + L0x20019a2e_f * (x**243) + 
            L0x20019a30_f * (x**244) + L0x20019a32_f * (x**245) + 
            L0x20019a34_f * (x**246) + L0x20019a36_f * (x**247) + 
            L0x20019a38_f * (x**248) + L0x20019a3a_f * (x**249) + 
            L0x20019a3c_f * (x**250) + L0x20019a3e_f * (x**251) + 
            L0x20019a40_f * (x**252) + L0x20019a42_f * (x**253) + 
            L0x20019a44_f * (x**254) + L0x20019a46_f * (x**255)
          )
          [25570049, x**4 - y_0_57 * 19473843, y_0_57 - 1],
    (* inp_poly_58 *)
    eqmod (2**32) * (inp_poly_58 * inp_poly_58)
          (
            L0x20019848_f * (x**0) + L0x2001984a_f * (x**1) + 
            L0x2001984c_f * (x**2) + L0x2001984e_f * (x**3) + 
            L0x20019850_f * (x**4) + L0x20019852_f * (x**5) + 
            L0x20019854_f * (x**6) + L0x20019856_f * (x**7) + 
            L0x20019858_f * (x**8) + L0x2001985a_f * (x**9) + 
            L0x2001985c_f * (x**10) + L0x2001985e_f * (x**11) + 
            L0x20019860_f * (x**12) + L0x20019862_f * (x**13) + 
            L0x20019864_f * (x**14) + L0x20019866_f * (x**15) + 
            L0x20019868_f * (x**16) + L0x2001986a_f * (x**17) + 
            L0x2001986c_f * (x**18) + L0x2001986e_f * (x**19) + 
            L0x20019870_f * (x**20) + L0x20019872_f * (x**21) + 
            L0x20019874_f * (x**22) + L0x20019876_f * (x**23) + 
            L0x20019878_f * (x**24) + L0x2001987a_f * (x**25) + 
            L0x2001987c_f * (x**26) + L0x2001987e_f * (x**27) + 
            L0x20019880_f * (x**28) + L0x20019882_f * (x**29) + 
            L0x20019884_f * (x**30) + L0x20019886_f * (x**31) + 
            L0x20019888_f * (x**32) + L0x2001988a_f * (x**33) + 
            L0x2001988c_f * (x**34) + L0x2001988e_f * (x**35) + 
            L0x20019890_f * (x**36) + L0x20019892_f * (x**37) + 
            L0x20019894_f * (x**38) + L0x20019896_f * (x**39) + 
            L0x20019898_f * (x**40) + L0x2001989a_f * (x**41) + 
            L0x2001989c_f * (x**42) + L0x2001989e_f * (x**43) + 
            L0x200198a0_f * (x**44) + L0x200198a2_f * (x**45) + 
            L0x200198a4_f * (x**46) + L0x200198a6_f * (x**47) + 
            L0x200198a8_f * (x**48) + L0x200198aa_f * (x**49) + 
            L0x200198ac_f * (x**50) + L0x200198ae_f * (x**51) + 
            L0x200198b0_f * (x**52) + L0x200198b2_f * (x**53) + 
            L0x200198b4_f * (x**54) + L0x200198b6_f * (x**55) + 
            L0x200198b8_f * (x**56) + L0x200198ba_f * (x**57) + 
            L0x200198bc_f * (x**58) + L0x200198be_f * (x**59) + 
            L0x200198c0_f * (x**60) + L0x200198c2_f * (x**61) + 
            L0x200198c4_f * (x**62) + L0x200198c6_f * (x**63) + 
            L0x200198c8_f * (x**64) + L0x200198ca_f * (x**65) + 
            L0x200198cc_f * (x**66) + L0x200198ce_f * (x**67) + 
            L0x200198d0_f * (x**68) + L0x200198d2_f * (x**69) + 
            L0x200198d4_f * (x**70) + L0x200198d6_f * (x**71) + 
            L0x200198d8_f * (x**72) + L0x200198da_f * (x**73) + 
            L0x200198dc_f * (x**74) + L0x200198de_f * (x**75) + 
            L0x200198e0_f * (x**76) + L0x200198e2_f * (x**77) + 
            L0x200198e4_f * (x**78) + L0x200198e6_f * (x**79) + 
            L0x200198e8_f * (x**80) + L0x200198ea_f * (x**81) + 
            L0x200198ec_f * (x**82) + L0x200198ee_f * (x**83) + 
            L0x200198f0_f * (x**84) + L0x200198f2_f * (x**85) + 
            L0x200198f4_f * (x**86) + L0x200198f6_f * (x**87) + 
            L0x200198f8_f * (x**88) + L0x200198fa_f * (x**89) + 
            L0x200198fc_f * (x**90) + L0x200198fe_f * (x**91) + 
            L0x20019900_f * (x**92) + L0x20019902_f * (x**93) + 
            L0x20019904_f * (x**94) + L0x20019906_f * (x**95) + 
            L0x20019908_f * (x**96) + L0x2001990a_f * (x**97) + 
            L0x2001990c_f * (x**98) + L0x2001990e_f * (x**99) + 
            L0x20019910_f * (x**100) + L0x20019912_f * (x**101) + 
            L0x20019914_f * (x**102) + L0x20019916_f * (x**103) + 
            L0x20019918_f * (x**104) + L0x2001991a_f * (x**105) + 
            L0x2001991c_f * (x**106) + L0x2001991e_f * (x**107) + 
            L0x20019920_f * (x**108) + L0x20019922_f * (x**109) + 
            L0x20019924_f * (x**110) + L0x20019926_f * (x**111) + 
            L0x20019928_f * (x**112) + L0x2001992a_f * (x**113) + 
            L0x2001992c_f * (x**114) + L0x2001992e_f * (x**115) + 
            L0x20019930_f * (x**116) + L0x20019932_f * (x**117) + 
            L0x20019934_f * (x**118) + L0x20019936_f * (x**119) + 
            L0x20019938_f * (x**120) + L0x2001993a_f * (x**121) + 
            L0x2001993c_f * (x**122) + L0x2001993e_f * (x**123) + 
            L0x20019940_f * (x**124) + L0x20019942_f * (x**125) + 
            L0x20019944_f * (x**126) + L0x20019946_f * (x**127) + 
            L0x20019948_f * (x**128) + L0x2001994a_f * (x**129) + 
            L0x2001994c_f * (x**130) + L0x2001994e_f * (x**131) + 
            L0x20019950_f * (x**132) + L0x20019952_f * (x**133) + 
            L0x20019954_f * (x**134) + L0x20019956_f * (x**135) + 
            L0x20019958_f * (x**136) + L0x2001995a_f * (x**137) + 
            L0x2001995c_f * (x**138) + L0x2001995e_f * (x**139) + 
            L0x20019960_f * (x**140) + L0x20019962_f * (x**141) + 
            L0x20019964_f * (x**142) + L0x20019966_f * (x**143) + 
            L0x20019968_f * (x**144) + L0x2001996a_f * (x**145) + 
            L0x2001996c_f * (x**146) + L0x2001996e_f * (x**147) + 
            L0x20019970_f * (x**148) + L0x20019972_f * (x**149) + 
            L0x20019974_f * (x**150) + L0x20019976_f * (x**151) + 
            L0x20019978_f * (x**152) + L0x2001997a_f * (x**153) + 
            L0x2001997c_f * (x**154) + L0x2001997e_f * (x**155) + 
            L0x20019980_f * (x**156) + L0x20019982_f * (x**157) + 
            L0x20019984_f * (x**158) + L0x20019986_f * (x**159) + 
            L0x20019988_f * (x**160) + L0x2001998a_f * (x**161) + 
            L0x2001998c_f * (x**162) + L0x2001998e_f * (x**163) + 
            L0x20019990_f * (x**164) + L0x20019992_f * (x**165) + 
            L0x20019994_f * (x**166) + L0x20019996_f * (x**167) + 
            L0x20019998_f * (x**168) + L0x2001999a_f * (x**169) + 
            L0x2001999c_f * (x**170) + L0x2001999e_f * (x**171) + 
            L0x200199a0_f * (x**172) + L0x200199a2_f * (x**173) + 
            L0x200199a4_f * (x**174) + L0x200199a6_f * (x**175) + 
            L0x200199a8_f * (x**176) + L0x200199aa_f * (x**177) + 
            L0x200199ac_f * (x**178) + L0x200199ae_f * (x**179) + 
            L0x200199b0_f * (x**180) + L0x200199b2_f * (x**181) + 
            L0x200199b4_f * (x**182) + L0x200199b6_f * (x**183) + 
            L0x200199b8_f * (x**184) + L0x200199ba_f * (x**185) + 
            L0x200199bc_f * (x**186) + L0x200199be_f * (x**187) + 
            L0x200199c0_f * (x**188) + L0x200199c2_f * (x**189) + 
            L0x200199c4_f * (x**190) + L0x200199c6_f * (x**191) + 
            L0x200199c8_f * (x**192) + L0x200199ca_f * (x**193) + 
            L0x200199cc_f * (x**194) + L0x200199ce_f * (x**195) + 
            L0x200199d0_f * (x**196) + L0x200199d2_f * (x**197) + 
            L0x200199d4_f * (x**198) + L0x200199d6_f * (x**199) + 
            L0x200199d8_f * (x**200) + L0x200199da_f * (x**201) + 
            L0x200199dc_f * (x**202) + L0x200199de_f * (x**203) + 
            L0x200199e0_f * (x**204) + L0x200199e2_f * (x**205) + 
            L0x200199e4_f * (x**206) + L0x200199e6_f * (x**207) + 
            L0x200199e8_f * (x**208) + L0x200199ea_f * (x**209) + 
            L0x200199ec_f * (x**210) + L0x200199ee_f * (x**211) + 
            L0x200199f0_f * (x**212) + L0x200199f2_f * (x**213) + 
            L0x200199f4_f * (x**214) + L0x200199f6_f * (x**215) + 
            L0x200199f8_f * (x**216) + L0x200199fa_f * (x**217) + 
            L0x200199fc_f * (x**218) + L0x200199fe_f * (x**219) + 
            L0x20019a00_f * (x**220) + L0x20019a02_f * (x**221) + 
            L0x20019a04_f * (x**222) + L0x20019a06_f * (x**223) + 
            L0x20019a08_f * (x**224) + L0x20019a0a_f * (x**225) + 
            L0x20019a0c_f * (x**226) + L0x20019a0e_f * (x**227) + 
            L0x20019a10_f * (x**228) + L0x20019a12_f * (x**229) + 
            L0x20019a14_f * (x**230) + L0x20019a16_f * (x**231) + 
            L0x20019a18_f * (x**232) + L0x20019a1a_f * (x**233) + 
            L0x20019a1c_f * (x**234) + L0x20019a1e_f * (x**235) + 
            L0x20019a20_f * (x**236) + L0x20019a22_f * (x**237) + 
            L0x20019a24_f * (x**238) + L0x20019a26_f * (x**239) + 
            L0x20019a28_f * (x**240) + L0x20019a2a_f * (x**241) + 
            L0x20019a2c_f * (x**242) + L0x20019a2e_f * (x**243) + 
            L0x20019a30_f * (x**244) + L0x20019a32_f * (x**245) + 
            L0x20019a34_f * (x**246) + L0x20019a36_f * (x**247) + 
            L0x20019a38_f * (x**248) + L0x20019a3a_f * (x**249) + 
            L0x20019a3c_f * (x**250) + L0x20019a3e_f * (x**251) + 
            L0x20019a40_f * (x**252) + L0x20019a42_f * (x**253) + 
            L0x20019a44_f * (x**254) + L0x20019a46_f * (x**255)
          )
          [25570049, x**4 - y_0_58 * 8645865, y_0_58 - 1],
    (* inp_poly_59 *)
    eqmod (2**32) * (inp_poly_59 * inp_poly_59)
          (
            L0x20019848_f * (x**0) + L0x2001984a_f * (x**1) + 
            L0x2001984c_f * (x**2) + L0x2001984e_f * (x**3) + 
            L0x20019850_f * (x**4) + L0x20019852_f * (x**5) + 
            L0x20019854_f * (x**6) + L0x20019856_f * (x**7) + 
            L0x20019858_f * (x**8) + L0x2001985a_f * (x**9) + 
            L0x2001985c_f * (x**10) + L0x2001985e_f * (x**11) + 
            L0x20019860_f * (x**12) + L0x20019862_f * (x**13) + 
            L0x20019864_f * (x**14) + L0x20019866_f * (x**15) + 
            L0x20019868_f * (x**16) + L0x2001986a_f * (x**17) + 
            L0x2001986c_f * (x**18) + L0x2001986e_f * (x**19) + 
            L0x20019870_f * (x**20) + L0x20019872_f * (x**21) + 
            L0x20019874_f * (x**22) + L0x20019876_f * (x**23) + 
            L0x20019878_f * (x**24) + L0x2001987a_f * (x**25) + 
            L0x2001987c_f * (x**26) + L0x2001987e_f * (x**27) + 
            L0x20019880_f * (x**28) + L0x20019882_f * (x**29) + 
            L0x20019884_f * (x**30) + L0x20019886_f * (x**31) + 
            L0x20019888_f * (x**32) + L0x2001988a_f * (x**33) + 
            L0x2001988c_f * (x**34) + L0x2001988e_f * (x**35) + 
            L0x20019890_f * (x**36) + L0x20019892_f * (x**37) + 
            L0x20019894_f * (x**38) + L0x20019896_f * (x**39) + 
            L0x20019898_f * (x**40) + L0x2001989a_f * (x**41) + 
            L0x2001989c_f * (x**42) + L0x2001989e_f * (x**43) + 
            L0x200198a0_f * (x**44) + L0x200198a2_f * (x**45) + 
            L0x200198a4_f * (x**46) + L0x200198a6_f * (x**47) + 
            L0x200198a8_f * (x**48) + L0x200198aa_f * (x**49) + 
            L0x200198ac_f * (x**50) + L0x200198ae_f * (x**51) + 
            L0x200198b0_f * (x**52) + L0x200198b2_f * (x**53) + 
            L0x200198b4_f * (x**54) + L0x200198b6_f * (x**55) + 
            L0x200198b8_f * (x**56) + L0x200198ba_f * (x**57) + 
            L0x200198bc_f * (x**58) + L0x200198be_f * (x**59) + 
            L0x200198c0_f * (x**60) + L0x200198c2_f * (x**61) + 
            L0x200198c4_f * (x**62) + L0x200198c6_f * (x**63) + 
            L0x200198c8_f * (x**64) + L0x200198ca_f * (x**65) + 
            L0x200198cc_f * (x**66) + L0x200198ce_f * (x**67) + 
            L0x200198d0_f * (x**68) + L0x200198d2_f * (x**69) + 
            L0x200198d4_f * (x**70) + L0x200198d6_f * (x**71) + 
            L0x200198d8_f * (x**72) + L0x200198da_f * (x**73) + 
            L0x200198dc_f * (x**74) + L0x200198de_f * (x**75) + 
            L0x200198e0_f * (x**76) + L0x200198e2_f * (x**77) + 
            L0x200198e4_f * (x**78) + L0x200198e6_f * (x**79) + 
            L0x200198e8_f * (x**80) + L0x200198ea_f * (x**81) + 
            L0x200198ec_f * (x**82) + L0x200198ee_f * (x**83) + 
            L0x200198f0_f * (x**84) + L0x200198f2_f * (x**85) + 
            L0x200198f4_f * (x**86) + L0x200198f6_f * (x**87) + 
            L0x200198f8_f * (x**88) + L0x200198fa_f * (x**89) + 
            L0x200198fc_f * (x**90) + L0x200198fe_f * (x**91) + 
            L0x20019900_f * (x**92) + L0x20019902_f * (x**93) + 
            L0x20019904_f * (x**94) + L0x20019906_f * (x**95) + 
            L0x20019908_f * (x**96) + L0x2001990a_f * (x**97) + 
            L0x2001990c_f * (x**98) + L0x2001990e_f * (x**99) + 
            L0x20019910_f * (x**100) + L0x20019912_f * (x**101) + 
            L0x20019914_f * (x**102) + L0x20019916_f * (x**103) + 
            L0x20019918_f * (x**104) + L0x2001991a_f * (x**105) + 
            L0x2001991c_f * (x**106) + L0x2001991e_f * (x**107) + 
            L0x20019920_f * (x**108) + L0x20019922_f * (x**109) + 
            L0x20019924_f * (x**110) + L0x20019926_f * (x**111) + 
            L0x20019928_f * (x**112) + L0x2001992a_f * (x**113) + 
            L0x2001992c_f * (x**114) + L0x2001992e_f * (x**115) + 
            L0x20019930_f * (x**116) + L0x20019932_f * (x**117) + 
            L0x20019934_f * (x**118) + L0x20019936_f * (x**119) + 
            L0x20019938_f * (x**120) + L0x2001993a_f * (x**121) + 
            L0x2001993c_f * (x**122) + L0x2001993e_f * (x**123) + 
            L0x20019940_f * (x**124) + L0x20019942_f * (x**125) + 
            L0x20019944_f * (x**126) + L0x20019946_f * (x**127) + 
            L0x20019948_f * (x**128) + L0x2001994a_f * (x**129) + 
            L0x2001994c_f * (x**130) + L0x2001994e_f * (x**131) + 
            L0x20019950_f * (x**132) + L0x20019952_f * (x**133) + 
            L0x20019954_f * (x**134) + L0x20019956_f * (x**135) + 
            L0x20019958_f * (x**136) + L0x2001995a_f * (x**137) + 
            L0x2001995c_f * (x**138) + L0x2001995e_f * (x**139) + 
            L0x20019960_f * (x**140) + L0x20019962_f * (x**141) + 
            L0x20019964_f * (x**142) + L0x20019966_f * (x**143) + 
            L0x20019968_f * (x**144) + L0x2001996a_f * (x**145) + 
            L0x2001996c_f * (x**146) + L0x2001996e_f * (x**147) + 
            L0x20019970_f * (x**148) + L0x20019972_f * (x**149) + 
            L0x20019974_f * (x**150) + L0x20019976_f * (x**151) + 
            L0x20019978_f * (x**152) + L0x2001997a_f * (x**153) + 
            L0x2001997c_f * (x**154) + L0x2001997e_f * (x**155) + 
            L0x20019980_f * (x**156) + L0x20019982_f * (x**157) + 
            L0x20019984_f * (x**158) + L0x20019986_f * (x**159) + 
            L0x20019988_f * (x**160) + L0x2001998a_f * (x**161) + 
            L0x2001998c_f * (x**162) + L0x2001998e_f * (x**163) + 
            L0x20019990_f * (x**164) + L0x20019992_f * (x**165) + 
            L0x20019994_f * (x**166) + L0x20019996_f * (x**167) + 
            L0x20019998_f * (x**168) + L0x2001999a_f * (x**169) + 
            L0x2001999c_f * (x**170) + L0x2001999e_f * (x**171) + 
            L0x200199a0_f * (x**172) + L0x200199a2_f * (x**173) + 
            L0x200199a4_f * (x**174) + L0x200199a6_f * (x**175) + 
            L0x200199a8_f * (x**176) + L0x200199aa_f * (x**177) + 
            L0x200199ac_f * (x**178) + L0x200199ae_f * (x**179) + 
            L0x200199b0_f * (x**180) + L0x200199b2_f * (x**181) + 
            L0x200199b4_f * (x**182) + L0x200199b6_f * (x**183) + 
            L0x200199b8_f * (x**184) + L0x200199ba_f * (x**185) + 
            L0x200199bc_f * (x**186) + L0x200199be_f * (x**187) + 
            L0x200199c0_f * (x**188) + L0x200199c2_f * (x**189) + 
            L0x200199c4_f * (x**190) + L0x200199c6_f * (x**191) + 
            L0x200199c8_f * (x**192) + L0x200199ca_f * (x**193) + 
            L0x200199cc_f * (x**194) + L0x200199ce_f * (x**195) + 
            L0x200199d0_f * (x**196) + L0x200199d2_f * (x**197) + 
            L0x200199d4_f * (x**198) + L0x200199d6_f * (x**199) + 
            L0x200199d8_f * (x**200) + L0x200199da_f * (x**201) + 
            L0x200199dc_f * (x**202) + L0x200199de_f * (x**203) + 
            L0x200199e0_f * (x**204) + L0x200199e2_f * (x**205) + 
            L0x200199e4_f * (x**206) + L0x200199e6_f * (x**207) + 
            L0x200199e8_f * (x**208) + L0x200199ea_f * (x**209) + 
            L0x200199ec_f * (x**210) + L0x200199ee_f * (x**211) + 
            L0x200199f0_f * (x**212) + L0x200199f2_f * (x**213) + 
            L0x200199f4_f * (x**214) + L0x200199f6_f * (x**215) + 
            L0x200199f8_f * (x**216) + L0x200199fa_f * (x**217) + 
            L0x200199fc_f * (x**218) + L0x200199fe_f * (x**219) + 
            L0x20019a00_f * (x**220) + L0x20019a02_f * (x**221) + 
            L0x20019a04_f * (x**222) + L0x20019a06_f * (x**223) + 
            L0x20019a08_f * (x**224) + L0x20019a0a_f * (x**225) + 
            L0x20019a0c_f * (x**226) + L0x20019a0e_f * (x**227) + 
            L0x20019a10_f * (x**228) + L0x20019a12_f * (x**229) + 
            L0x20019a14_f * (x**230) + L0x20019a16_f * (x**231) + 
            L0x20019a18_f * (x**232) + L0x20019a1a_f * (x**233) + 
            L0x20019a1c_f * (x**234) + L0x20019a1e_f * (x**235) + 
            L0x20019a20_f * (x**236) + L0x20019a22_f * (x**237) + 
            L0x20019a24_f * (x**238) + L0x20019a26_f * (x**239) + 
            L0x20019a28_f * (x**240) + L0x20019a2a_f * (x**241) + 
            L0x20019a2c_f * (x**242) + L0x20019a2e_f * (x**243) + 
            L0x20019a30_f * (x**244) + L0x20019a32_f * (x**245) + 
            L0x20019a34_f * (x**246) + L0x20019a36_f * (x**247) + 
            L0x20019a38_f * (x**248) + L0x20019a3a_f * (x**249) + 
            L0x20019a3c_f * (x**250) + L0x20019a3e_f * (x**251) + 
            L0x20019a40_f * (x**252) + L0x20019a42_f * (x**253) + 
            L0x20019a44_f * (x**254) + L0x20019a46_f * (x**255)
          )
          [25570049, x**4 - y_0_59 * 16924184, y_0_59 - 1],
    (* inp_poly_60 *)
    eqmod (2**32) * (inp_poly_60 * inp_poly_60)
          (
            L0x20019848_f * (x**0) + L0x2001984a_f * (x**1) + 
            L0x2001984c_f * (x**2) + L0x2001984e_f * (x**3) + 
            L0x20019850_f * (x**4) + L0x20019852_f * (x**5) + 
            L0x20019854_f * (x**6) + L0x20019856_f * (x**7) + 
            L0x20019858_f * (x**8) + L0x2001985a_f * (x**9) + 
            L0x2001985c_f * (x**10) + L0x2001985e_f * (x**11) + 
            L0x20019860_f * (x**12) + L0x20019862_f * (x**13) + 
            L0x20019864_f * (x**14) + L0x20019866_f * (x**15) + 
            L0x20019868_f * (x**16) + L0x2001986a_f * (x**17) + 
            L0x2001986c_f * (x**18) + L0x2001986e_f * (x**19) + 
            L0x20019870_f * (x**20) + L0x20019872_f * (x**21) + 
            L0x20019874_f * (x**22) + L0x20019876_f * (x**23) + 
            L0x20019878_f * (x**24) + L0x2001987a_f * (x**25) + 
            L0x2001987c_f * (x**26) + L0x2001987e_f * (x**27) + 
            L0x20019880_f * (x**28) + L0x20019882_f * (x**29) + 
            L0x20019884_f * (x**30) + L0x20019886_f * (x**31) + 
            L0x20019888_f * (x**32) + L0x2001988a_f * (x**33) + 
            L0x2001988c_f * (x**34) + L0x2001988e_f * (x**35) + 
            L0x20019890_f * (x**36) + L0x20019892_f * (x**37) + 
            L0x20019894_f * (x**38) + L0x20019896_f * (x**39) + 
            L0x20019898_f * (x**40) + L0x2001989a_f * (x**41) + 
            L0x2001989c_f * (x**42) + L0x2001989e_f * (x**43) + 
            L0x200198a0_f * (x**44) + L0x200198a2_f * (x**45) + 
            L0x200198a4_f * (x**46) + L0x200198a6_f * (x**47) + 
            L0x200198a8_f * (x**48) + L0x200198aa_f * (x**49) + 
            L0x200198ac_f * (x**50) + L0x200198ae_f * (x**51) + 
            L0x200198b0_f * (x**52) + L0x200198b2_f * (x**53) + 
            L0x200198b4_f * (x**54) + L0x200198b6_f * (x**55) + 
            L0x200198b8_f * (x**56) + L0x200198ba_f * (x**57) + 
            L0x200198bc_f * (x**58) + L0x200198be_f * (x**59) + 
            L0x200198c0_f * (x**60) + L0x200198c2_f * (x**61) + 
            L0x200198c4_f * (x**62) + L0x200198c6_f * (x**63) + 
            L0x200198c8_f * (x**64) + L0x200198ca_f * (x**65) + 
            L0x200198cc_f * (x**66) + L0x200198ce_f * (x**67) + 
            L0x200198d0_f * (x**68) + L0x200198d2_f * (x**69) + 
            L0x200198d4_f * (x**70) + L0x200198d6_f * (x**71) + 
            L0x200198d8_f * (x**72) + L0x200198da_f * (x**73) + 
            L0x200198dc_f * (x**74) + L0x200198de_f * (x**75) + 
            L0x200198e0_f * (x**76) + L0x200198e2_f * (x**77) + 
            L0x200198e4_f * (x**78) + L0x200198e6_f * (x**79) + 
            L0x200198e8_f * (x**80) + L0x200198ea_f * (x**81) + 
            L0x200198ec_f * (x**82) + L0x200198ee_f * (x**83) + 
            L0x200198f0_f * (x**84) + L0x200198f2_f * (x**85) + 
            L0x200198f4_f * (x**86) + L0x200198f6_f * (x**87) + 
            L0x200198f8_f * (x**88) + L0x200198fa_f * (x**89) + 
            L0x200198fc_f * (x**90) + L0x200198fe_f * (x**91) + 
            L0x20019900_f * (x**92) + L0x20019902_f * (x**93) + 
            L0x20019904_f * (x**94) + L0x20019906_f * (x**95) + 
            L0x20019908_f * (x**96) + L0x2001990a_f * (x**97) + 
            L0x2001990c_f * (x**98) + L0x2001990e_f * (x**99) + 
            L0x20019910_f * (x**100) + L0x20019912_f * (x**101) + 
            L0x20019914_f * (x**102) + L0x20019916_f * (x**103) + 
            L0x20019918_f * (x**104) + L0x2001991a_f * (x**105) + 
            L0x2001991c_f * (x**106) + L0x2001991e_f * (x**107) + 
            L0x20019920_f * (x**108) + L0x20019922_f * (x**109) + 
            L0x20019924_f * (x**110) + L0x20019926_f * (x**111) + 
            L0x20019928_f * (x**112) + L0x2001992a_f * (x**113) + 
            L0x2001992c_f * (x**114) + L0x2001992e_f * (x**115) + 
            L0x20019930_f * (x**116) + L0x20019932_f * (x**117) + 
            L0x20019934_f * (x**118) + L0x20019936_f * (x**119) + 
            L0x20019938_f * (x**120) + L0x2001993a_f * (x**121) + 
            L0x2001993c_f * (x**122) + L0x2001993e_f * (x**123) + 
            L0x20019940_f * (x**124) + L0x20019942_f * (x**125) + 
            L0x20019944_f * (x**126) + L0x20019946_f * (x**127) + 
            L0x20019948_f * (x**128) + L0x2001994a_f * (x**129) + 
            L0x2001994c_f * (x**130) + L0x2001994e_f * (x**131) + 
            L0x20019950_f * (x**132) + L0x20019952_f * (x**133) + 
            L0x20019954_f * (x**134) + L0x20019956_f * (x**135) + 
            L0x20019958_f * (x**136) + L0x2001995a_f * (x**137) + 
            L0x2001995c_f * (x**138) + L0x2001995e_f * (x**139) + 
            L0x20019960_f * (x**140) + L0x20019962_f * (x**141) + 
            L0x20019964_f * (x**142) + L0x20019966_f * (x**143) + 
            L0x20019968_f * (x**144) + L0x2001996a_f * (x**145) + 
            L0x2001996c_f * (x**146) + L0x2001996e_f * (x**147) + 
            L0x20019970_f * (x**148) + L0x20019972_f * (x**149) + 
            L0x20019974_f * (x**150) + L0x20019976_f * (x**151) + 
            L0x20019978_f * (x**152) + L0x2001997a_f * (x**153) + 
            L0x2001997c_f * (x**154) + L0x2001997e_f * (x**155) + 
            L0x20019980_f * (x**156) + L0x20019982_f * (x**157) + 
            L0x20019984_f * (x**158) + L0x20019986_f * (x**159) + 
            L0x20019988_f * (x**160) + L0x2001998a_f * (x**161) + 
            L0x2001998c_f * (x**162) + L0x2001998e_f * (x**163) + 
            L0x20019990_f * (x**164) + L0x20019992_f * (x**165) + 
            L0x20019994_f * (x**166) + L0x20019996_f * (x**167) + 
            L0x20019998_f * (x**168) + L0x2001999a_f * (x**169) + 
            L0x2001999c_f * (x**170) + L0x2001999e_f * (x**171) + 
            L0x200199a0_f * (x**172) + L0x200199a2_f * (x**173) + 
            L0x200199a4_f * (x**174) + L0x200199a6_f * (x**175) + 
            L0x200199a8_f * (x**176) + L0x200199aa_f * (x**177) + 
            L0x200199ac_f * (x**178) + L0x200199ae_f * (x**179) + 
            L0x200199b0_f * (x**180) + L0x200199b2_f * (x**181) + 
            L0x200199b4_f * (x**182) + L0x200199b6_f * (x**183) + 
            L0x200199b8_f * (x**184) + L0x200199ba_f * (x**185) + 
            L0x200199bc_f * (x**186) + L0x200199be_f * (x**187) + 
            L0x200199c0_f * (x**188) + L0x200199c2_f * (x**189) + 
            L0x200199c4_f * (x**190) + L0x200199c6_f * (x**191) + 
            L0x200199c8_f * (x**192) + L0x200199ca_f * (x**193) + 
            L0x200199cc_f * (x**194) + L0x200199ce_f * (x**195) + 
            L0x200199d0_f * (x**196) + L0x200199d2_f * (x**197) + 
            L0x200199d4_f * (x**198) + L0x200199d6_f * (x**199) + 
            L0x200199d8_f * (x**200) + L0x200199da_f * (x**201) + 
            L0x200199dc_f * (x**202) + L0x200199de_f * (x**203) + 
            L0x200199e0_f * (x**204) + L0x200199e2_f * (x**205) + 
            L0x200199e4_f * (x**206) + L0x200199e6_f * (x**207) + 
            L0x200199e8_f * (x**208) + L0x200199ea_f * (x**209) + 
            L0x200199ec_f * (x**210) + L0x200199ee_f * (x**211) + 
            L0x200199f0_f * (x**212) + L0x200199f2_f * (x**213) + 
            L0x200199f4_f * (x**214) + L0x200199f6_f * (x**215) + 
            L0x200199f8_f * (x**216) + L0x200199fa_f * (x**217) + 
            L0x200199fc_f * (x**218) + L0x200199fe_f * (x**219) + 
            L0x20019a00_f * (x**220) + L0x20019a02_f * (x**221) + 
            L0x20019a04_f * (x**222) + L0x20019a06_f * (x**223) + 
            L0x20019a08_f * (x**224) + L0x20019a0a_f * (x**225) + 
            L0x20019a0c_f * (x**226) + L0x20019a0e_f * (x**227) + 
            L0x20019a10_f * (x**228) + L0x20019a12_f * (x**229) + 
            L0x20019a14_f * (x**230) + L0x20019a16_f * (x**231) + 
            L0x20019a18_f * (x**232) + L0x20019a1a_f * (x**233) + 
            L0x20019a1c_f * (x**234) + L0x20019a1e_f * (x**235) + 
            L0x20019a20_f * (x**236) + L0x20019a22_f * (x**237) + 
            L0x20019a24_f * (x**238) + L0x20019a26_f * (x**239) + 
            L0x20019a28_f * (x**240) + L0x20019a2a_f * (x**241) + 
            L0x20019a2c_f * (x**242) + L0x20019a2e_f * (x**243) + 
            L0x20019a30_f * (x**244) + L0x20019a32_f * (x**245) + 
            L0x20019a34_f * (x**246) + L0x20019a36_f * (x**247) + 
            L0x20019a38_f * (x**248) + L0x20019a3a_f * (x**249) + 
            L0x20019a3c_f * (x**250) + L0x20019a3e_f * (x**251) + 
            L0x20019a40_f * (x**252) + L0x20019a42_f * (x**253) + 
            L0x20019a44_f * (x**254) + L0x20019a46_f * (x**255)
          )
          [25570049, x**4 - y_0_60 * 18864008, y_0_60 - 1],
    (* inp_poly_61 *)
    eqmod (2**32) * (inp_poly_61 * inp_poly_61)
          (
            L0x20019848_f * (x**0) + L0x2001984a_f * (x**1) + 
            L0x2001984c_f * (x**2) + L0x2001984e_f * (x**3) + 
            L0x20019850_f * (x**4) + L0x20019852_f * (x**5) + 
            L0x20019854_f * (x**6) + L0x20019856_f * (x**7) + 
            L0x20019858_f * (x**8) + L0x2001985a_f * (x**9) + 
            L0x2001985c_f * (x**10) + L0x2001985e_f * (x**11) + 
            L0x20019860_f * (x**12) + L0x20019862_f * (x**13) + 
            L0x20019864_f * (x**14) + L0x20019866_f * (x**15) + 
            L0x20019868_f * (x**16) + L0x2001986a_f * (x**17) + 
            L0x2001986c_f * (x**18) + L0x2001986e_f * (x**19) + 
            L0x20019870_f * (x**20) + L0x20019872_f * (x**21) + 
            L0x20019874_f * (x**22) + L0x20019876_f * (x**23) + 
            L0x20019878_f * (x**24) + L0x2001987a_f * (x**25) + 
            L0x2001987c_f * (x**26) + L0x2001987e_f * (x**27) + 
            L0x20019880_f * (x**28) + L0x20019882_f * (x**29) + 
            L0x20019884_f * (x**30) + L0x20019886_f * (x**31) + 
            L0x20019888_f * (x**32) + L0x2001988a_f * (x**33) + 
            L0x2001988c_f * (x**34) + L0x2001988e_f * (x**35) + 
            L0x20019890_f * (x**36) + L0x20019892_f * (x**37) + 
            L0x20019894_f * (x**38) + L0x20019896_f * (x**39) + 
            L0x20019898_f * (x**40) + L0x2001989a_f * (x**41) + 
            L0x2001989c_f * (x**42) + L0x2001989e_f * (x**43) + 
            L0x200198a0_f * (x**44) + L0x200198a2_f * (x**45) + 
            L0x200198a4_f * (x**46) + L0x200198a6_f * (x**47) + 
            L0x200198a8_f * (x**48) + L0x200198aa_f * (x**49) + 
            L0x200198ac_f * (x**50) + L0x200198ae_f * (x**51) + 
            L0x200198b0_f * (x**52) + L0x200198b2_f * (x**53) + 
            L0x200198b4_f * (x**54) + L0x200198b6_f * (x**55) + 
            L0x200198b8_f * (x**56) + L0x200198ba_f * (x**57) + 
            L0x200198bc_f * (x**58) + L0x200198be_f * (x**59) + 
            L0x200198c0_f * (x**60) + L0x200198c2_f * (x**61) + 
            L0x200198c4_f * (x**62) + L0x200198c6_f * (x**63) + 
            L0x200198c8_f * (x**64) + L0x200198ca_f * (x**65) + 
            L0x200198cc_f * (x**66) + L0x200198ce_f * (x**67) + 
            L0x200198d0_f * (x**68) + L0x200198d2_f * (x**69) + 
            L0x200198d4_f * (x**70) + L0x200198d6_f * (x**71) + 
            L0x200198d8_f * (x**72) + L0x200198da_f * (x**73) + 
            L0x200198dc_f * (x**74) + L0x200198de_f * (x**75) + 
            L0x200198e0_f * (x**76) + L0x200198e2_f * (x**77) + 
            L0x200198e4_f * (x**78) + L0x200198e6_f * (x**79) + 
            L0x200198e8_f * (x**80) + L0x200198ea_f * (x**81) + 
            L0x200198ec_f * (x**82) + L0x200198ee_f * (x**83) + 
            L0x200198f0_f * (x**84) + L0x200198f2_f * (x**85) + 
            L0x200198f4_f * (x**86) + L0x200198f6_f * (x**87) + 
            L0x200198f8_f * (x**88) + L0x200198fa_f * (x**89) + 
            L0x200198fc_f * (x**90) + L0x200198fe_f * (x**91) + 
            L0x20019900_f * (x**92) + L0x20019902_f * (x**93) + 
            L0x20019904_f * (x**94) + L0x20019906_f * (x**95) + 
            L0x20019908_f * (x**96) + L0x2001990a_f * (x**97) + 
            L0x2001990c_f * (x**98) + L0x2001990e_f * (x**99) + 
            L0x20019910_f * (x**100) + L0x20019912_f * (x**101) + 
            L0x20019914_f * (x**102) + L0x20019916_f * (x**103) + 
            L0x20019918_f * (x**104) + L0x2001991a_f * (x**105) + 
            L0x2001991c_f * (x**106) + L0x2001991e_f * (x**107) + 
            L0x20019920_f * (x**108) + L0x20019922_f * (x**109) + 
            L0x20019924_f * (x**110) + L0x20019926_f * (x**111) + 
            L0x20019928_f * (x**112) + L0x2001992a_f * (x**113) + 
            L0x2001992c_f * (x**114) + L0x2001992e_f * (x**115) + 
            L0x20019930_f * (x**116) + L0x20019932_f * (x**117) + 
            L0x20019934_f * (x**118) + L0x20019936_f * (x**119) + 
            L0x20019938_f * (x**120) + L0x2001993a_f * (x**121) + 
            L0x2001993c_f * (x**122) + L0x2001993e_f * (x**123) + 
            L0x20019940_f * (x**124) + L0x20019942_f * (x**125) + 
            L0x20019944_f * (x**126) + L0x20019946_f * (x**127) + 
            L0x20019948_f * (x**128) + L0x2001994a_f * (x**129) + 
            L0x2001994c_f * (x**130) + L0x2001994e_f * (x**131) + 
            L0x20019950_f * (x**132) + L0x20019952_f * (x**133) + 
            L0x20019954_f * (x**134) + L0x20019956_f * (x**135) + 
            L0x20019958_f * (x**136) + L0x2001995a_f * (x**137) + 
            L0x2001995c_f * (x**138) + L0x2001995e_f * (x**139) + 
            L0x20019960_f * (x**140) + L0x20019962_f * (x**141) + 
            L0x20019964_f * (x**142) + L0x20019966_f * (x**143) + 
            L0x20019968_f * (x**144) + L0x2001996a_f * (x**145) + 
            L0x2001996c_f * (x**146) + L0x2001996e_f * (x**147) + 
            L0x20019970_f * (x**148) + L0x20019972_f * (x**149) + 
            L0x20019974_f * (x**150) + L0x20019976_f * (x**151) + 
            L0x20019978_f * (x**152) + L0x2001997a_f * (x**153) + 
            L0x2001997c_f * (x**154) + L0x2001997e_f * (x**155) + 
            L0x20019980_f * (x**156) + L0x20019982_f * (x**157) + 
            L0x20019984_f * (x**158) + L0x20019986_f * (x**159) + 
            L0x20019988_f * (x**160) + L0x2001998a_f * (x**161) + 
            L0x2001998c_f * (x**162) + L0x2001998e_f * (x**163) + 
            L0x20019990_f * (x**164) + L0x20019992_f * (x**165) + 
            L0x20019994_f * (x**166) + L0x20019996_f * (x**167) + 
            L0x20019998_f * (x**168) + L0x2001999a_f * (x**169) + 
            L0x2001999c_f * (x**170) + L0x2001999e_f * (x**171) + 
            L0x200199a0_f * (x**172) + L0x200199a2_f * (x**173) + 
            L0x200199a4_f * (x**174) + L0x200199a6_f * (x**175) + 
            L0x200199a8_f * (x**176) + L0x200199aa_f * (x**177) + 
            L0x200199ac_f * (x**178) + L0x200199ae_f * (x**179) + 
            L0x200199b0_f * (x**180) + L0x200199b2_f * (x**181) + 
            L0x200199b4_f * (x**182) + L0x200199b6_f * (x**183) + 
            L0x200199b8_f * (x**184) + L0x200199ba_f * (x**185) + 
            L0x200199bc_f * (x**186) + L0x200199be_f * (x**187) + 
            L0x200199c0_f * (x**188) + L0x200199c2_f * (x**189) + 
            L0x200199c4_f * (x**190) + L0x200199c6_f * (x**191) + 
            L0x200199c8_f * (x**192) + L0x200199ca_f * (x**193) + 
            L0x200199cc_f * (x**194) + L0x200199ce_f * (x**195) + 
            L0x200199d0_f * (x**196) + L0x200199d2_f * (x**197) + 
            L0x200199d4_f * (x**198) + L0x200199d6_f * (x**199) + 
            L0x200199d8_f * (x**200) + L0x200199da_f * (x**201) + 
            L0x200199dc_f * (x**202) + L0x200199de_f * (x**203) + 
            L0x200199e0_f * (x**204) + L0x200199e2_f * (x**205) + 
            L0x200199e4_f * (x**206) + L0x200199e6_f * (x**207) + 
            L0x200199e8_f * (x**208) + L0x200199ea_f * (x**209) + 
            L0x200199ec_f * (x**210) + L0x200199ee_f * (x**211) + 
            L0x200199f0_f * (x**212) + L0x200199f2_f * (x**213) + 
            L0x200199f4_f * (x**214) + L0x200199f6_f * (x**215) + 
            L0x200199f8_f * (x**216) + L0x200199fa_f * (x**217) + 
            L0x200199fc_f * (x**218) + L0x200199fe_f * (x**219) + 
            L0x20019a00_f * (x**220) + L0x20019a02_f * (x**221) + 
            L0x20019a04_f * (x**222) + L0x20019a06_f * (x**223) + 
            L0x20019a08_f * (x**224) + L0x20019a0a_f * (x**225) + 
            L0x20019a0c_f * (x**226) + L0x20019a0e_f * (x**227) + 
            L0x20019a10_f * (x**228) + L0x20019a12_f * (x**229) + 
            L0x20019a14_f * (x**230) + L0x20019a16_f * (x**231) + 
            L0x20019a18_f * (x**232) + L0x20019a1a_f * (x**233) + 
            L0x20019a1c_f * (x**234) + L0x20019a1e_f * (x**235) + 
            L0x20019a20_f * (x**236) + L0x20019a22_f * (x**237) + 
            L0x20019a24_f * (x**238) + L0x20019a26_f * (x**239) + 
            L0x20019a28_f * (x**240) + L0x20019a2a_f * (x**241) + 
            L0x20019a2c_f * (x**242) + L0x20019a2e_f * (x**243) + 
            L0x20019a30_f * (x**244) + L0x20019a32_f * (x**245) + 
            L0x20019a34_f * (x**246) + L0x20019a36_f * (x**247) + 
            L0x20019a38_f * (x**248) + L0x20019a3a_f * (x**249) + 
            L0x20019a3c_f * (x**250) + L0x20019a3e_f * (x**251) + 
            L0x20019a40_f * (x**252) + L0x20019a42_f * (x**253) + 
            L0x20019a44_f * (x**254) + L0x20019a46_f * (x**255)
          )
          [25570049, x**4 - y_0_61 * 6706041, y_0_61 - 1],
    (* inp_poly_62 *)
    eqmod (2**32) * (inp_poly_62 * inp_poly_62)
          (
            L0x20019848_f * (x**0) + L0x2001984a_f * (x**1) + 
            L0x2001984c_f * (x**2) + L0x2001984e_f * (x**3) + 
            L0x20019850_f * (x**4) + L0x20019852_f * (x**5) + 
            L0x20019854_f * (x**6) + L0x20019856_f * (x**7) + 
            L0x20019858_f * (x**8) + L0x2001985a_f * (x**9) + 
            L0x2001985c_f * (x**10) + L0x2001985e_f * (x**11) + 
            L0x20019860_f * (x**12) + L0x20019862_f * (x**13) + 
            L0x20019864_f * (x**14) + L0x20019866_f * (x**15) + 
            L0x20019868_f * (x**16) + L0x2001986a_f * (x**17) + 
            L0x2001986c_f * (x**18) + L0x2001986e_f * (x**19) + 
            L0x20019870_f * (x**20) + L0x20019872_f * (x**21) + 
            L0x20019874_f * (x**22) + L0x20019876_f * (x**23) + 
            L0x20019878_f * (x**24) + L0x2001987a_f * (x**25) + 
            L0x2001987c_f * (x**26) + L0x2001987e_f * (x**27) + 
            L0x20019880_f * (x**28) + L0x20019882_f * (x**29) + 
            L0x20019884_f * (x**30) + L0x20019886_f * (x**31) + 
            L0x20019888_f * (x**32) + L0x2001988a_f * (x**33) + 
            L0x2001988c_f * (x**34) + L0x2001988e_f * (x**35) + 
            L0x20019890_f * (x**36) + L0x20019892_f * (x**37) + 
            L0x20019894_f * (x**38) + L0x20019896_f * (x**39) + 
            L0x20019898_f * (x**40) + L0x2001989a_f * (x**41) + 
            L0x2001989c_f * (x**42) + L0x2001989e_f * (x**43) + 
            L0x200198a0_f * (x**44) + L0x200198a2_f * (x**45) + 
            L0x200198a4_f * (x**46) + L0x200198a6_f * (x**47) + 
            L0x200198a8_f * (x**48) + L0x200198aa_f * (x**49) + 
            L0x200198ac_f * (x**50) + L0x200198ae_f * (x**51) + 
            L0x200198b0_f * (x**52) + L0x200198b2_f * (x**53) + 
            L0x200198b4_f * (x**54) + L0x200198b6_f * (x**55) + 
            L0x200198b8_f * (x**56) + L0x200198ba_f * (x**57) + 
            L0x200198bc_f * (x**58) + L0x200198be_f * (x**59) + 
            L0x200198c0_f * (x**60) + L0x200198c2_f * (x**61) + 
            L0x200198c4_f * (x**62) + L0x200198c6_f * (x**63) + 
            L0x200198c8_f * (x**64) + L0x200198ca_f * (x**65) + 
            L0x200198cc_f * (x**66) + L0x200198ce_f * (x**67) + 
            L0x200198d0_f * (x**68) + L0x200198d2_f * (x**69) + 
            L0x200198d4_f * (x**70) + L0x200198d6_f * (x**71) + 
            L0x200198d8_f * (x**72) + L0x200198da_f * (x**73) + 
            L0x200198dc_f * (x**74) + L0x200198de_f * (x**75) + 
            L0x200198e0_f * (x**76) + L0x200198e2_f * (x**77) + 
            L0x200198e4_f * (x**78) + L0x200198e6_f * (x**79) + 
            L0x200198e8_f * (x**80) + L0x200198ea_f * (x**81) + 
            L0x200198ec_f * (x**82) + L0x200198ee_f * (x**83) + 
            L0x200198f0_f * (x**84) + L0x200198f2_f * (x**85) + 
            L0x200198f4_f * (x**86) + L0x200198f6_f * (x**87) + 
            L0x200198f8_f * (x**88) + L0x200198fa_f * (x**89) + 
            L0x200198fc_f * (x**90) + L0x200198fe_f * (x**91) + 
            L0x20019900_f * (x**92) + L0x20019902_f * (x**93) + 
            L0x20019904_f * (x**94) + L0x20019906_f * (x**95) + 
            L0x20019908_f * (x**96) + L0x2001990a_f * (x**97) + 
            L0x2001990c_f * (x**98) + L0x2001990e_f * (x**99) + 
            L0x20019910_f * (x**100) + L0x20019912_f * (x**101) + 
            L0x20019914_f * (x**102) + L0x20019916_f * (x**103) + 
            L0x20019918_f * (x**104) + L0x2001991a_f * (x**105) + 
            L0x2001991c_f * (x**106) + L0x2001991e_f * (x**107) + 
            L0x20019920_f * (x**108) + L0x20019922_f * (x**109) + 
            L0x20019924_f * (x**110) + L0x20019926_f * (x**111) + 
            L0x20019928_f * (x**112) + L0x2001992a_f * (x**113) + 
            L0x2001992c_f * (x**114) + L0x2001992e_f * (x**115) + 
            L0x20019930_f * (x**116) + L0x20019932_f * (x**117) + 
            L0x20019934_f * (x**118) + L0x20019936_f * (x**119) + 
            L0x20019938_f * (x**120) + L0x2001993a_f * (x**121) + 
            L0x2001993c_f * (x**122) + L0x2001993e_f * (x**123) + 
            L0x20019940_f * (x**124) + L0x20019942_f * (x**125) + 
            L0x20019944_f * (x**126) + L0x20019946_f * (x**127) + 
            L0x20019948_f * (x**128) + L0x2001994a_f * (x**129) + 
            L0x2001994c_f * (x**130) + L0x2001994e_f * (x**131) + 
            L0x20019950_f * (x**132) + L0x20019952_f * (x**133) + 
            L0x20019954_f * (x**134) + L0x20019956_f * (x**135) + 
            L0x20019958_f * (x**136) + L0x2001995a_f * (x**137) + 
            L0x2001995c_f * (x**138) + L0x2001995e_f * (x**139) + 
            L0x20019960_f * (x**140) + L0x20019962_f * (x**141) + 
            L0x20019964_f * (x**142) + L0x20019966_f * (x**143) + 
            L0x20019968_f * (x**144) + L0x2001996a_f * (x**145) + 
            L0x2001996c_f * (x**146) + L0x2001996e_f * (x**147) + 
            L0x20019970_f * (x**148) + L0x20019972_f * (x**149) + 
            L0x20019974_f * (x**150) + L0x20019976_f * (x**151) + 
            L0x20019978_f * (x**152) + L0x2001997a_f * (x**153) + 
            L0x2001997c_f * (x**154) + L0x2001997e_f * (x**155) + 
            L0x20019980_f * (x**156) + L0x20019982_f * (x**157) + 
            L0x20019984_f * (x**158) + L0x20019986_f * (x**159) + 
            L0x20019988_f * (x**160) + L0x2001998a_f * (x**161) + 
            L0x2001998c_f * (x**162) + L0x2001998e_f * (x**163) + 
            L0x20019990_f * (x**164) + L0x20019992_f * (x**165) + 
            L0x20019994_f * (x**166) + L0x20019996_f * (x**167) + 
            L0x20019998_f * (x**168) + L0x2001999a_f * (x**169) + 
            L0x2001999c_f * (x**170) + L0x2001999e_f * (x**171) + 
            L0x200199a0_f * (x**172) + L0x200199a2_f * (x**173) + 
            L0x200199a4_f * (x**174) + L0x200199a6_f * (x**175) + 
            L0x200199a8_f * (x**176) + L0x200199aa_f * (x**177) + 
            L0x200199ac_f * (x**178) + L0x200199ae_f * (x**179) + 
            L0x200199b0_f * (x**180) + L0x200199b2_f * (x**181) + 
            L0x200199b4_f * (x**182) + L0x200199b6_f * (x**183) + 
            L0x200199b8_f * (x**184) + L0x200199ba_f * (x**185) + 
            L0x200199bc_f * (x**186) + L0x200199be_f * (x**187) + 
            L0x200199c0_f * (x**188) + L0x200199c2_f * (x**189) + 
            L0x200199c4_f * (x**190) + L0x200199c6_f * (x**191) + 
            L0x200199c8_f * (x**192) + L0x200199ca_f * (x**193) + 
            L0x200199cc_f * (x**194) + L0x200199ce_f * (x**195) + 
            L0x200199d0_f * (x**196) + L0x200199d2_f * (x**197) + 
            L0x200199d4_f * (x**198) + L0x200199d6_f * (x**199) + 
            L0x200199d8_f * (x**200) + L0x200199da_f * (x**201) + 
            L0x200199dc_f * (x**202) + L0x200199de_f * (x**203) + 
            L0x200199e0_f * (x**204) + L0x200199e2_f * (x**205) + 
            L0x200199e4_f * (x**206) + L0x200199e6_f * (x**207) + 
            L0x200199e8_f * (x**208) + L0x200199ea_f * (x**209) + 
            L0x200199ec_f * (x**210) + L0x200199ee_f * (x**211) + 
            L0x200199f0_f * (x**212) + L0x200199f2_f * (x**213) + 
            L0x200199f4_f * (x**214) + L0x200199f6_f * (x**215) + 
            L0x200199f8_f * (x**216) + L0x200199fa_f * (x**217) + 
            L0x200199fc_f * (x**218) + L0x200199fe_f * (x**219) + 
            L0x20019a00_f * (x**220) + L0x20019a02_f * (x**221) + 
            L0x20019a04_f * (x**222) + L0x20019a06_f * (x**223) + 
            L0x20019a08_f * (x**224) + L0x20019a0a_f * (x**225) + 
            L0x20019a0c_f * (x**226) + L0x20019a0e_f * (x**227) + 
            L0x20019a10_f * (x**228) + L0x20019a12_f * (x**229) + 
            L0x20019a14_f * (x**230) + L0x20019a16_f * (x**231) + 
            L0x20019a18_f * (x**232) + L0x20019a1a_f * (x**233) + 
            L0x20019a1c_f * (x**234) + L0x20019a1e_f * (x**235) + 
            L0x20019a20_f * (x**236) + L0x20019a22_f * (x**237) + 
            L0x20019a24_f * (x**238) + L0x20019a26_f * (x**239) + 
            L0x20019a28_f * (x**240) + L0x20019a2a_f * (x**241) + 
            L0x20019a2c_f * (x**242) + L0x20019a2e_f * (x**243) + 
            L0x20019a30_f * (x**244) + L0x20019a32_f * (x**245) + 
            L0x20019a34_f * (x**246) + L0x20019a36_f * (x**247) + 
            L0x20019a38_f * (x**248) + L0x20019a3a_f * (x**249) + 
            L0x20019a3c_f * (x**250) + L0x20019a3e_f * (x**251) + 
            L0x20019a40_f * (x**252) + L0x20019a42_f * (x**253) + 
            L0x20019a44_f * (x**254) + L0x20019a46_f * (x**255)
          )
          [25570049, x**4 - y_0_62 * 18761234, y_0_62 - 1],
    (* inp_poly_63 *)
    eqmod (2**32) * (inp_poly_63 * inp_poly_63)
          (
            L0x20019848_f * (x**0) + L0x2001984a_f * (x**1) + 
            L0x2001984c_f * (x**2) + L0x2001984e_f * (x**3) + 
            L0x20019850_f * (x**4) + L0x20019852_f * (x**5) + 
            L0x20019854_f * (x**6) + L0x20019856_f * (x**7) + 
            L0x20019858_f * (x**8) + L0x2001985a_f * (x**9) + 
            L0x2001985c_f * (x**10) + L0x2001985e_f * (x**11) + 
            L0x20019860_f * (x**12) + L0x20019862_f * (x**13) + 
            L0x20019864_f * (x**14) + L0x20019866_f * (x**15) + 
            L0x20019868_f * (x**16) + L0x2001986a_f * (x**17) + 
            L0x2001986c_f * (x**18) + L0x2001986e_f * (x**19) + 
            L0x20019870_f * (x**20) + L0x20019872_f * (x**21) + 
            L0x20019874_f * (x**22) + L0x20019876_f * (x**23) + 
            L0x20019878_f * (x**24) + L0x2001987a_f * (x**25) + 
            L0x2001987c_f * (x**26) + L0x2001987e_f * (x**27) + 
            L0x20019880_f * (x**28) + L0x20019882_f * (x**29) + 
            L0x20019884_f * (x**30) + L0x20019886_f * (x**31) + 
            L0x20019888_f * (x**32) + L0x2001988a_f * (x**33) + 
            L0x2001988c_f * (x**34) + L0x2001988e_f * (x**35) + 
            L0x20019890_f * (x**36) + L0x20019892_f * (x**37) + 
            L0x20019894_f * (x**38) + L0x20019896_f * (x**39) + 
            L0x20019898_f * (x**40) + L0x2001989a_f * (x**41) + 
            L0x2001989c_f * (x**42) + L0x2001989e_f * (x**43) + 
            L0x200198a0_f * (x**44) + L0x200198a2_f * (x**45) + 
            L0x200198a4_f * (x**46) + L0x200198a6_f * (x**47) + 
            L0x200198a8_f * (x**48) + L0x200198aa_f * (x**49) + 
            L0x200198ac_f * (x**50) + L0x200198ae_f * (x**51) + 
            L0x200198b0_f * (x**52) + L0x200198b2_f * (x**53) + 
            L0x200198b4_f * (x**54) + L0x200198b6_f * (x**55) + 
            L0x200198b8_f * (x**56) + L0x200198ba_f * (x**57) + 
            L0x200198bc_f * (x**58) + L0x200198be_f * (x**59) + 
            L0x200198c0_f * (x**60) + L0x200198c2_f * (x**61) + 
            L0x200198c4_f * (x**62) + L0x200198c6_f * (x**63) + 
            L0x200198c8_f * (x**64) + L0x200198ca_f * (x**65) + 
            L0x200198cc_f * (x**66) + L0x200198ce_f * (x**67) + 
            L0x200198d0_f * (x**68) + L0x200198d2_f * (x**69) + 
            L0x200198d4_f * (x**70) + L0x200198d6_f * (x**71) + 
            L0x200198d8_f * (x**72) + L0x200198da_f * (x**73) + 
            L0x200198dc_f * (x**74) + L0x200198de_f * (x**75) + 
            L0x200198e0_f * (x**76) + L0x200198e2_f * (x**77) + 
            L0x200198e4_f * (x**78) + L0x200198e6_f * (x**79) + 
            L0x200198e8_f * (x**80) + L0x200198ea_f * (x**81) + 
            L0x200198ec_f * (x**82) + L0x200198ee_f * (x**83) + 
            L0x200198f0_f * (x**84) + L0x200198f2_f * (x**85) + 
            L0x200198f4_f * (x**86) + L0x200198f6_f * (x**87) + 
            L0x200198f8_f * (x**88) + L0x200198fa_f * (x**89) + 
            L0x200198fc_f * (x**90) + L0x200198fe_f * (x**91) + 
            L0x20019900_f * (x**92) + L0x20019902_f * (x**93) + 
            L0x20019904_f * (x**94) + L0x20019906_f * (x**95) + 
            L0x20019908_f * (x**96) + L0x2001990a_f * (x**97) + 
            L0x2001990c_f * (x**98) + L0x2001990e_f * (x**99) + 
            L0x20019910_f * (x**100) + L0x20019912_f * (x**101) + 
            L0x20019914_f * (x**102) + L0x20019916_f * (x**103) + 
            L0x20019918_f * (x**104) + L0x2001991a_f * (x**105) + 
            L0x2001991c_f * (x**106) + L0x2001991e_f * (x**107) + 
            L0x20019920_f * (x**108) + L0x20019922_f * (x**109) + 
            L0x20019924_f * (x**110) + L0x20019926_f * (x**111) + 
            L0x20019928_f * (x**112) + L0x2001992a_f * (x**113) + 
            L0x2001992c_f * (x**114) + L0x2001992e_f * (x**115) + 
            L0x20019930_f * (x**116) + L0x20019932_f * (x**117) + 
            L0x20019934_f * (x**118) + L0x20019936_f * (x**119) + 
            L0x20019938_f * (x**120) + L0x2001993a_f * (x**121) + 
            L0x2001993c_f * (x**122) + L0x2001993e_f * (x**123) + 
            L0x20019940_f * (x**124) + L0x20019942_f * (x**125) + 
            L0x20019944_f * (x**126) + L0x20019946_f * (x**127) + 
            L0x20019948_f * (x**128) + L0x2001994a_f * (x**129) + 
            L0x2001994c_f * (x**130) + L0x2001994e_f * (x**131) + 
            L0x20019950_f * (x**132) + L0x20019952_f * (x**133) + 
            L0x20019954_f * (x**134) + L0x20019956_f * (x**135) + 
            L0x20019958_f * (x**136) + L0x2001995a_f * (x**137) + 
            L0x2001995c_f * (x**138) + L0x2001995e_f * (x**139) + 
            L0x20019960_f * (x**140) + L0x20019962_f * (x**141) + 
            L0x20019964_f * (x**142) + L0x20019966_f * (x**143) + 
            L0x20019968_f * (x**144) + L0x2001996a_f * (x**145) + 
            L0x2001996c_f * (x**146) + L0x2001996e_f * (x**147) + 
            L0x20019970_f * (x**148) + L0x20019972_f * (x**149) + 
            L0x20019974_f * (x**150) + L0x20019976_f * (x**151) + 
            L0x20019978_f * (x**152) + L0x2001997a_f * (x**153) + 
            L0x2001997c_f * (x**154) + L0x2001997e_f * (x**155) + 
            L0x20019980_f * (x**156) + L0x20019982_f * (x**157) + 
            L0x20019984_f * (x**158) + L0x20019986_f * (x**159) + 
            L0x20019988_f * (x**160) + L0x2001998a_f * (x**161) + 
            L0x2001998c_f * (x**162) + L0x2001998e_f * (x**163) + 
            L0x20019990_f * (x**164) + L0x20019992_f * (x**165) + 
            L0x20019994_f * (x**166) + L0x20019996_f * (x**167) + 
            L0x20019998_f * (x**168) + L0x2001999a_f * (x**169) + 
            L0x2001999c_f * (x**170) + L0x2001999e_f * (x**171) + 
            L0x200199a0_f * (x**172) + L0x200199a2_f * (x**173) + 
            L0x200199a4_f * (x**174) + L0x200199a6_f * (x**175) + 
            L0x200199a8_f * (x**176) + L0x200199aa_f * (x**177) + 
            L0x200199ac_f * (x**178) + L0x200199ae_f * (x**179) + 
            L0x200199b0_f * (x**180) + L0x200199b2_f * (x**181) + 
            L0x200199b4_f * (x**182) + L0x200199b6_f * (x**183) + 
            L0x200199b8_f * (x**184) + L0x200199ba_f * (x**185) + 
            L0x200199bc_f * (x**186) + L0x200199be_f * (x**187) + 
            L0x200199c0_f * (x**188) + L0x200199c2_f * (x**189) + 
            L0x200199c4_f * (x**190) + L0x200199c6_f * (x**191) + 
            L0x200199c8_f * (x**192) + L0x200199ca_f * (x**193) + 
            L0x200199cc_f * (x**194) + L0x200199ce_f * (x**195) + 
            L0x200199d0_f * (x**196) + L0x200199d2_f * (x**197) + 
            L0x200199d4_f * (x**198) + L0x200199d6_f * (x**199) + 
            L0x200199d8_f * (x**200) + L0x200199da_f * (x**201) + 
            L0x200199dc_f * (x**202) + L0x200199de_f * (x**203) + 
            L0x200199e0_f * (x**204) + L0x200199e2_f * (x**205) + 
            L0x200199e4_f * (x**206) + L0x200199e6_f * (x**207) + 
            L0x200199e8_f * (x**208) + L0x200199ea_f * (x**209) + 
            L0x200199ec_f * (x**210) + L0x200199ee_f * (x**211) + 
            L0x200199f0_f * (x**212) + L0x200199f2_f * (x**213) + 
            L0x200199f4_f * (x**214) + L0x200199f6_f * (x**215) + 
            L0x200199f8_f * (x**216) + L0x200199fa_f * (x**217) + 
            L0x200199fc_f * (x**218) + L0x200199fe_f * (x**219) + 
            L0x20019a00_f * (x**220) + L0x20019a02_f * (x**221) + 
            L0x20019a04_f * (x**222) + L0x20019a06_f * (x**223) + 
            L0x20019a08_f * (x**224) + L0x20019a0a_f * (x**225) + 
            L0x20019a0c_f * (x**226) + L0x20019a0e_f * (x**227) + 
            L0x20019a10_f * (x**228) + L0x20019a12_f * (x**229) + 
            L0x20019a14_f * (x**230) + L0x20019a16_f * (x**231) + 
            L0x20019a18_f * (x**232) + L0x20019a1a_f * (x**233) + 
            L0x20019a1c_f * (x**234) + L0x20019a1e_f * (x**235) + 
            L0x20019a20_f * (x**236) + L0x20019a22_f * (x**237) + 
            L0x20019a24_f * (x**238) + L0x20019a26_f * (x**239) + 
            L0x20019a28_f * (x**240) + L0x20019a2a_f * (x**241) + 
            L0x20019a2c_f * (x**242) + L0x20019a2e_f * (x**243) + 
            L0x20019a30_f * (x**244) + L0x20019a32_f * (x**245) + 
            L0x20019a34_f * (x**246) + L0x20019a36_f * (x**247) + 
            L0x20019a38_f * (x**248) + L0x20019a3a_f * (x**249) + 
            L0x20019a3c_f * (x**250) + L0x20019a3e_f * (x**251) + 
            L0x20019a40_f * (x**252) + L0x20019a42_f * (x**253) + 
            L0x20019a44_f * (x**254) + L0x20019a46_f * (x**255)
          )
          [25570049, x**4 - y_0_63 * 6808815, y_0_63 - 1]
  ] prove with [cuts [52, 54], all ghosts]
  &&
  true
;

(* === prove complete condition separately === *)
cut (* 71 *)
  true && true;

(* slice 0 *)
assume (* instantiating y_0's *)
  and [
    y_0_00 = 1, y_0_01 = 1, y_0_02 = 1, y_0_03 = 1, 
    y_0_04 = 1, y_0_05 = 1, y_0_06 = 1, y_0_07 = 1
  ] && true;
cut (* 72 *)
  and [
    (* inp_poly_0 *)
    eqmod (2**32) * (inp_poly_0 * inp_poly_0)
          (
            L0x20019848_f * (x**0) + L0x2001984a_f * (x**1) + 
            L0x2001984c_f * (x**2) + L0x2001984e_f * (x**3) + 
            L0x20019850_f * (x**4) + L0x20019852_f * (x**5) + 
            L0x20019854_f * (x**6) + L0x20019856_f * (x**7) + 
            L0x20019858_f * (x**8) + L0x2001985a_f * (x**9) + 
            L0x2001985c_f * (x**10) + L0x2001985e_f * (x**11) + 
            L0x20019860_f * (x**12) + L0x20019862_f * (x**13) + 
            L0x20019864_f * (x**14) + L0x20019866_f * (x**15) + 
            L0x20019868_f * (x**16) + L0x2001986a_f * (x**17) + 
            L0x2001986c_f * (x**18) + L0x2001986e_f * (x**19) + 
            L0x20019870_f * (x**20) + L0x20019872_f * (x**21) + 
            L0x20019874_f * (x**22) + L0x20019876_f * (x**23) + 
            L0x20019878_f * (x**24) + L0x2001987a_f * (x**25) + 
            L0x2001987c_f * (x**26) + L0x2001987e_f * (x**27) + 
            L0x20019880_f * (x**28) + L0x20019882_f * (x**29) + 
            L0x20019884_f * (x**30) + L0x20019886_f * (x**31) + 
            L0x20019888_f * (x**32) + L0x2001988a_f * (x**33) + 
            L0x2001988c_f * (x**34) + L0x2001988e_f * (x**35) + 
            L0x20019890_f * (x**36) + L0x20019892_f * (x**37) + 
            L0x20019894_f * (x**38) + L0x20019896_f * (x**39) + 
            L0x20019898_f * (x**40) + L0x2001989a_f * (x**41) + 
            L0x2001989c_f * (x**42) + L0x2001989e_f * (x**43) + 
            L0x200198a0_f * (x**44) + L0x200198a2_f * (x**45) + 
            L0x200198a4_f * (x**46) + L0x200198a6_f * (x**47) + 
            L0x200198a8_f * (x**48) + L0x200198aa_f * (x**49) + 
            L0x200198ac_f * (x**50) + L0x200198ae_f * (x**51) + 
            L0x200198b0_f * (x**52) + L0x200198b2_f * (x**53) + 
            L0x200198b4_f * (x**54) + L0x200198b6_f * (x**55) + 
            L0x200198b8_f * (x**56) + L0x200198ba_f * (x**57) + 
            L0x200198bc_f * (x**58) + L0x200198be_f * (x**59) + 
            L0x200198c0_f * (x**60) + L0x200198c2_f * (x**61) + 
            L0x200198c4_f * (x**62) + L0x200198c6_f * (x**63) + 
            L0x200198c8_f * (x**64) + L0x200198ca_f * (x**65) + 
            L0x200198cc_f * (x**66) + L0x200198ce_f * (x**67) + 
            L0x200198d0_f * (x**68) + L0x200198d2_f * (x**69) + 
            L0x200198d4_f * (x**70) + L0x200198d6_f * (x**71) + 
            L0x200198d8_f * (x**72) + L0x200198da_f * (x**73) + 
            L0x200198dc_f * (x**74) + L0x200198de_f * (x**75) + 
            L0x200198e0_f * (x**76) + L0x200198e2_f * (x**77) + 
            L0x200198e4_f * (x**78) + L0x200198e6_f * (x**79) + 
            L0x200198e8_f * (x**80) + L0x200198ea_f * (x**81) + 
            L0x200198ec_f * (x**82) + L0x200198ee_f * (x**83) + 
            L0x200198f0_f * (x**84) + L0x200198f2_f * (x**85) + 
            L0x200198f4_f * (x**86) + L0x200198f6_f * (x**87) + 
            L0x200198f8_f * (x**88) + L0x200198fa_f * (x**89) + 
            L0x200198fc_f * (x**90) + L0x200198fe_f * (x**91) + 
            L0x20019900_f * (x**92) + L0x20019902_f * (x**93) + 
            L0x20019904_f * (x**94) + L0x20019906_f * (x**95) + 
            L0x20019908_f * (x**96) + L0x2001990a_f * (x**97) + 
            L0x2001990c_f * (x**98) + L0x2001990e_f * (x**99) + 
            L0x20019910_f * (x**100) + L0x20019912_f * (x**101) + 
            L0x20019914_f * (x**102) + L0x20019916_f * (x**103) + 
            L0x20019918_f * (x**104) + L0x2001991a_f * (x**105) + 
            L0x2001991c_f * (x**106) + L0x2001991e_f * (x**107) + 
            L0x20019920_f * (x**108) + L0x20019922_f * (x**109) + 
            L0x20019924_f * (x**110) + L0x20019926_f * (x**111) + 
            L0x20019928_f * (x**112) + L0x2001992a_f * (x**113) + 
            L0x2001992c_f * (x**114) + L0x2001992e_f * (x**115) + 
            L0x20019930_f * (x**116) + L0x20019932_f * (x**117) + 
            L0x20019934_f * (x**118) + L0x20019936_f * (x**119) + 
            L0x20019938_f * (x**120) + L0x2001993a_f * (x**121) + 
            L0x2001993c_f * (x**122) + L0x2001993e_f * (x**123) + 
            L0x20019940_f * (x**124) + L0x20019942_f * (x**125) + 
            L0x20019944_f * (x**126) + L0x20019946_f * (x**127) + 
            L0x20019948_f * (x**128) + L0x2001994a_f * (x**129) + 
            L0x2001994c_f * (x**130) + L0x2001994e_f * (x**131) + 
            L0x20019950_f * (x**132) + L0x20019952_f * (x**133) + 
            L0x20019954_f * (x**134) + L0x20019956_f * (x**135) + 
            L0x20019958_f * (x**136) + L0x2001995a_f * (x**137) + 
            L0x2001995c_f * (x**138) + L0x2001995e_f * (x**139) + 
            L0x20019960_f * (x**140) + L0x20019962_f * (x**141) + 
            L0x20019964_f * (x**142) + L0x20019966_f * (x**143) + 
            L0x20019968_f * (x**144) + L0x2001996a_f * (x**145) + 
            L0x2001996c_f * (x**146) + L0x2001996e_f * (x**147) + 
            L0x20019970_f * (x**148) + L0x20019972_f * (x**149) + 
            L0x20019974_f * (x**150) + L0x20019976_f * (x**151) + 
            L0x20019978_f * (x**152) + L0x2001997a_f * (x**153) + 
            L0x2001997c_f * (x**154) + L0x2001997e_f * (x**155) + 
            L0x20019980_f * (x**156) + L0x20019982_f * (x**157) + 
            L0x20019984_f * (x**158) + L0x20019986_f * (x**159) + 
            L0x20019988_f * (x**160) + L0x2001998a_f * (x**161) + 
            L0x2001998c_f * (x**162) + L0x2001998e_f * (x**163) + 
            L0x20019990_f * (x**164) + L0x20019992_f * (x**165) + 
            L0x20019994_f * (x**166) + L0x20019996_f * (x**167) + 
            L0x20019998_f * (x**168) + L0x2001999a_f * (x**169) + 
            L0x2001999c_f * (x**170) + L0x2001999e_f * (x**171) + 
            L0x200199a0_f * (x**172) + L0x200199a2_f * (x**173) + 
            L0x200199a4_f * (x**174) + L0x200199a6_f * (x**175) + 
            L0x200199a8_f * (x**176) + L0x200199aa_f * (x**177) + 
            L0x200199ac_f * (x**178) + L0x200199ae_f * (x**179) + 
            L0x200199b0_f * (x**180) + L0x200199b2_f * (x**181) + 
            L0x200199b4_f * (x**182) + L0x200199b6_f * (x**183) + 
            L0x200199b8_f * (x**184) + L0x200199ba_f * (x**185) + 
            L0x200199bc_f * (x**186) + L0x200199be_f * (x**187) + 
            L0x200199c0_f * (x**188) + L0x200199c2_f * (x**189) + 
            L0x200199c4_f * (x**190) + L0x200199c6_f * (x**191) + 
            L0x200199c8_f * (x**192) + L0x200199ca_f * (x**193) + 
            L0x200199cc_f * (x**194) + L0x200199ce_f * (x**195) + 
            L0x200199d0_f * (x**196) + L0x200199d2_f * (x**197) + 
            L0x200199d4_f * (x**198) + L0x200199d6_f * (x**199) + 
            L0x200199d8_f * (x**200) + L0x200199da_f * (x**201) + 
            L0x200199dc_f * (x**202) + L0x200199de_f * (x**203) + 
            L0x200199e0_f * (x**204) + L0x200199e2_f * (x**205) + 
            L0x200199e4_f * (x**206) + L0x200199e6_f * (x**207) + 
            L0x200199e8_f * (x**208) + L0x200199ea_f * (x**209) + 
            L0x200199ec_f * (x**210) + L0x200199ee_f * (x**211) + 
            L0x200199f0_f * (x**212) + L0x200199f2_f * (x**213) + 
            L0x200199f4_f * (x**214) + L0x200199f6_f * (x**215) + 
            L0x200199f8_f * (x**216) + L0x200199fa_f * (x**217) + 
            L0x200199fc_f * (x**218) + L0x200199fe_f * (x**219) + 
            L0x20019a00_f * (x**220) + L0x20019a02_f * (x**221) + 
            L0x20019a04_f * (x**222) + L0x20019a06_f * (x**223) + 
            L0x20019a08_f * (x**224) + L0x20019a0a_f * (x**225) + 
            L0x20019a0c_f * (x**226) + L0x20019a0e_f * (x**227) + 
            L0x20019a10_f * (x**228) + L0x20019a12_f * (x**229) + 
            L0x20019a14_f * (x**230) + L0x20019a16_f * (x**231) + 
            L0x20019a18_f * (x**232) + L0x20019a1a_f * (x**233) + 
            L0x20019a1c_f * (x**234) + L0x20019a1e_f * (x**235) + 
            L0x20019a20_f * (x**236) + L0x20019a22_f * (x**237) + 
            L0x20019a24_f * (x**238) + L0x20019a26_f * (x**239) + 
            L0x20019a28_f * (x**240) + L0x20019a2a_f * (x**241) + 
            L0x20019a2c_f * (x**242) + L0x20019a2e_f * (x**243) + 
            L0x20019a30_f * (x**244) + L0x20019a32_f * (x**245) + 
            L0x20019a34_f * (x**246) + L0x20019a36_f * (x**247) + 
            L0x20019a38_f * (x**248) + L0x20019a3a_f * (x**249) + 
            L0x20019a3c_f * (x**250) + L0x20019a3e_f * (x**251) + 
            L0x20019a40_f * (x**252) + L0x20019a42_f * (x**253) + 
            L0x20019a44_f * (x**254) + L0x20019a46_f * (x**255)
          )
          [25570049, x**4 - 6103972],
    (* inp_poly_1 *)
    eqmod (2**32) * (inp_poly_1 * inp_poly_1)
          (
            L0x20019848_f * (x**0) + L0x2001984a_f * (x**1) + 
            L0x2001984c_f * (x**2) + L0x2001984e_f * (x**3) + 
            L0x20019850_f * (x**4) + L0x20019852_f * (x**5) + 
            L0x20019854_f * (x**6) + L0x20019856_f * (x**7) + 
            L0x20019858_f * (x**8) + L0x2001985a_f * (x**9) + 
            L0x2001985c_f * (x**10) + L0x2001985e_f * (x**11) + 
            L0x20019860_f * (x**12) + L0x20019862_f * (x**13) + 
            L0x20019864_f * (x**14) + L0x20019866_f * (x**15) + 
            L0x20019868_f * (x**16) + L0x2001986a_f * (x**17) + 
            L0x2001986c_f * (x**18) + L0x2001986e_f * (x**19) + 
            L0x20019870_f * (x**20) + L0x20019872_f * (x**21) + 
            L0x20019874_f * (x**22) + L0x20019876_f * (x**23) + 
            L0x20019878_f * (x**24) + L0x2001987a_f * (x**25) + 
            L0x2001987c_f * (x**26) + L0x2001987e_f * (x**27) + 
            L0x20019880_f * (x**28) + L0x20019882_f * (x**29) + 
            L0x20019884_f * (x**30) + L0x20019886_f * (x**31) + 
            L0x20019888_f * (x**32) + L0x2001988a_f * (x**33) + 
            L0x2001988c_f * (x**34) + L0x2001988e_f * (x**35) + 
            L0x20019890_f * (x**36) + L0x20019892_f * (x**37) + 
            L0x20019894_f * (x**38) + L0x20019896_f * (x**39) + 
            L0x20019898_f * (x**40) + L0x2001989a_f * (x**41) + 
            L0x2001989c_f * (x**42) + L0x2001989e_f * (x**43) + 
            L0x200198a0_f * (x**44) + L0x200198a2_f * (x**45) + 
            L0x200198a4_f * (x**46) + L0x200198a6_f * (x**47) + 
            L0x200198a8_f * (x**48) + L0x200198aa_f * (x**49) + 
            L0x200198ac_f * (x**50) + L0x200198ae_f * (x**51) + 
            L0x200198b0_f * (x**52) + L0x200198b2_f * (x**53) + 
            L0x200198b4_f * (x**54) + L0x200198b6_f * (x**55) + 
            L0x200198b8_f * (x**56) + L0x200198ba_f * (x**57) + 
            L0x200198bc_f * (x**58) + L0x200198be_f * (x**59) + 
            L0x200198c0_f * (x**60) + L0x200198c2_f * (x**61) + 
            L0x200198c4_f * (x**62) + L0x200198c6_f * (x**63) + 
            L0x200198c8_f * (x**64) + L0x200198ca_f * (x**65) + 
            L0x200198cc_f * (x**66) + L0x200198ce_f * (x**67) + 
            L0x200198d0_f * (x**68) + L0x200198d2_f * (x**69) + 
            L0x200198d4_f * (x**70) + L0x200198d6_f * (x**71) + 
            L0x200198d8_f * (x**72) + L0x200198da_f * (x**73) + 
            L0x200198dc_f * (x**74) + L0x200198de_f * (x**75) + 
            L0x200198e0_f * (x**76) + L0x200198e2_f * (x**77) + 
            L0x200198e4_f * (x**78) + L0x200198e6_f * (x**79) + 
            L0x200198e8_f * (x**80) + L0x200198ea_f * (x**81) + 
            L0x200198ec_f * (x**82) + L0x200198ee_f * (x**83) + 
            L0x200198f0_f * (x**84) + L0x200198f2_f * (x**85) + 
            L0x200198f4_f * (x**86) + L0x200198f6_f * (x**87) + 
            L0x200198f8_f * (x**88) + L0x200198fa_f * (x**89) + 
            L0x200198fc_f * (x**90) + L0x200198fe_f * (x**91) + 
            L0x20019900_f * (x**92) + L0x20019902_f * (x**93) + 
            L0x20019904_f * (x**94) + L0x20019906_f * (x**95) + 
            L0x20019908_f * (x**96) + L0x2001990a_f * (x**97) + 
            L0x2001990c_f * (x**98) + L0x2001990e_f * (x**99) + 
            L0x20019910_f * (x**100) + L0x20019912_f * (x**101) + 
            L0x20019914_f * (x**102) + L0x20019916_f * (x**103) + 
            L0x20019918_f * (x**104) + L0x2001991a_f * (x**105) + 
            L0x2001991c_f * (x**106) + L0x2001991e_f * (x**107) + 
            L0x20019920_f * (x**108) + L0x20019922_f * (x**109) + 
            L0x20019924_f * (x**110) + L0x20019926_f * (x**111) + 
            L0x20019928_f * (x**112) + L0x2001992a_f * (x**113) + 
            L0x2001992c_f * (x**114) + L0x2001992e_f * (x**115) + 
            L0x20019930_f * (x**116) + L0x20019932_f * (x**117) + 
            L0x20019934_f * (x**118) + L0x20019936_f * (x**119) + 
            L0x20019938_f * (x**120) + L0x2001993a_f * (x**121) + 
            L0x2001993c_f * (x**122) + L0x2001993e_f * (x**123) + 
            L0x20019940_f * (x**124) + L0x20019942_f * (x**125) + 
            L0x20019944_f * (x**126) + L0x20019946_f * (x**127) + 
            L0x20019948_f * (x**128) + L0x2001994a_f * (x**129) + 
            L0x2001994c_f * (x**130) + L0x2001994e_f * (x**131) + 
            L0x20019950_f * (x**132) + L0x20019952_f * (x**133) + 
            L0x20019954_f * (x**134) + L0x20019956_f * (x**135) + 
            L0x20019958_f * (x**136) + L0x2001995a_f * (x**137) + 
            L0x2001995c_f * (x**138) + L0x2001995e_f * (x**139) + 
            L0x20019960_f * (x**140) + L0x20019962_f * (x**141) + 
            L0x20019964_f * (x**142) + L0x20019966_f * (x**143) + 
            L0x20019968_f * (x**144) + L0x2001996a_f * (x**145) + 
            L0x2001996c_f * (x**146) + L0x2001996e_f * (x**147) + 
            L0x20019970_f * (x**148) + L0x20019972_f * (x**149) + 
            L0x20019974_f * (x**150) + L0x20019976_f * (x**151) + 
            L0x20019978_f * (x**152) + L0x2001997a_f * (x**153) + 
            L0x2001997c_f * (x**154) + L0x2001997e_f * (x**155) + 
            L0x20019980_f * (x**156) + L0x20019982_f * (x**157) + 
            L0x20019984_f * (x**158) + L0x20019986_f * (x**159) + 
            L0x20019988_f * (x**160) + L0x2001998a_f * (x**161) + 
            L0x2001998c_f * (x**162) + L0x2001998e_f * (x**163) + 
            L0x20019990_f * (x**164) + L0x20019992_f * (x**165) + 
            L0x20019994_f * (x**166) + L0x20019996_f * (x**167) + 
            L0x20019998_f * (x**168) + L0x2001999a_f * (x**169) + 
            L0x2001999c_f * (x**170) + L0x2001999e_f * (x**171) + 
            L0x200199a0_f * (x**172) + L0x200199a2_f * (x**173) + 
            L0x200199a4_f * (x**174) + L0x200199a6_f * (x**175) + 
            L0x200199a8_f * (x**176) + L0x200199aa_f * (x**177) + 
            L0x200199ac_f * (x**178) + L0x200199ae_f * (x**179) + 
            L0x200199b0_f * (x**180) + L0x200199b2_f * (x**181) + 
            L0x200199b4_f * (x**182) + L0x200199b6_f * (x**183) + 
            L0x200199b8_f * (x**184) + L0x200199ba_f * (x**185) + 
            L0x200199bc_f * (x**186) + L0x200199be_f * (x**187) + 
            L0x200199c0_f * (x**188) + L0x200199c2_f * (x**189) + 
            L0x200199c4_f * (x**190) + L0x200199c6_f * (x**191) + 
            L0x200199c8_f * (x**192) + L0x200199ca_f * (x**193) + 
            L0x200199cc_f * (x**194) + L0x200199ce_f * (x**195) + 
            L0x200199d0_f * (x**196) + L0x200199d2_f * (x**197) + 
            L0x200199d4_f * (x**198) + L0x200199d6_f * (x**199) + 
            L0x200199d8_f * (x**200) + L0x200199da_f * (x**201) + 
            L0x200199dc_f * (x**202) + L0x200199de_f * (x**203) + 
            L0x200199e0_f * (x**204) + L0x200199e2_f * (x**205) + 
            L0x200199e4_f * (x**206) + L0x200199e6_f * (x**207) + 
            L0x200199e8_f * (x**208) + L0x200199ea_f * (x**209) + 
            L0x200199ec_f * (x**210) + L0x200199ee_f * (x**211) + 
            L0x200199f0_f * (x**212) + L0x200199f2_f * (x**213) + 
            L0x200199f4_f * (x**214) + L0x200199f6_f * (x**215) + 
            L0x200199f8_f * (x**216) + L0x200199fa_f * (x**217) + 
            L0x200199fc_f * (x**218) + L0x200199fe_f * (x**219) + 
            L0x20019a00_f * (x**220) + L0x20019a02_f * (x**221) + 
            L0x20019a04_f * (x**222) + L0x20019a06_f * (x**223) + 
            L0x20019a08_f * (x**224) + L0x20019a0a_f * (x**225) + 
            L0x20019a0c_f * (x**226) + L0x20019a0e_f * (x**227) + 
            L0x20019a10_f * (x**228) + L0x20019a12_f * (x**229) + 
            L0x20019a14_f * (x**230) + L0x20019a16_f * (x**231) + 
            L0x20019a18_f * (x**232) + L0x20019a1a_f * (x**233) + 
            L0x20019a1c_f * (x**234) + L0x20019a1e_f * (x**235) + 
            L0x20019a20_f * (x**236) + L0x20019a22_f * (x**237) + 
            L0x20019a24_f * (x**238) + L0x20019a26_f * (x**239) + 
            L0x20019a28_f * (x**240) + L0x20019a2a_f * (x**241) + 
            L0x20019a2c_f * (x**242) + L0x20019a2e_f * (x**243) + 
            L0x20019a30_f * (x**244) + L0x20019a32_f * (x**245) + 
            L0x20019a34_f * (x**246) + L0x20019a36_f * (x**247) + 
            L0x20019a38_f * (x**248) + L0x20019a3a_f * (x**249) + 
            L0x20019a3c_f * (x**250) + L0x20019a3e_f * (x**251) + 
            L0x20019a40_f * (x**252) + L0x20019a42_f * (x**253) + 
            L0x20019a44_f * (x**254) + L0x20019a46_f * (x**255)
          )
          [25570049, x**4 - 19466077],
    (* inp_poly_2 *)
    eqmod (2**32) * (inp_poly_2 * inp_poly_2)
          (
            L0x20019848_f * (x**0) + L0x2001984a_f * (x**1) + 
            L0x2001984c_f * (x**2) + L0x2001984e_f * (x**3) + 
            L0x20019850_f * (x**4) + L0x20019852_f * (x**5) + 
            L0x20019854_f * (x**6) + L0x20019856_f * (x**7) + 
            L0x20019858_f * (x**8) + L0x2001985a_f * (x**9) + 
            L0x2001985c_f * (x**10) + L0x2001985e_f * (x**11) + 
            L0x20019860_f * (x**12) + L0x20019862_f * (x**13) + 
            L0x20019864_f * (x**14) + L0x20019866_f * (x**15) + 
            L0x20019868_f * (x**16) + L0x2001986a_f * (x**17) + 
            L0x2001986c_f * (x**18) + L0x2001986e_f * (x**19) + 
            L0x20019870_f * (x**20) + L0x20019872_f * (x**21) + 
            L0x20019874_f * (x**22) + L0x20019876_f * (x**23) + 
            L0x20019878_f * (x**24) + L0x2001987a_f * (x**25) + 
            L0x2001987c_f * (x**26) + L0x2001987e_f * (x**27) + 
            L0x20019880_f * (x**28) + L0x20019882_f * (x**29) + 
            L0x20019884_f * (x**30) + L0x20019886_f * (x**31) + 
            L0x20019888_f * (x**32) + L0x2001988a_f * (x**33) + 
            L0x2001988c_f * (x**34) + L0x2001988e_f * (x**35) + 
            L0x20019890_f * (x**36) + L0x20019892_f * (x**37) + 
            L0x20019894_f * (x**38) + L0x20019896_f * (x**39) + 
            L0x20019898_f * (x**40) + L0x2001989a_f * (x**41) + 
            L0x2001989c_f * (x**42) + L0x2001989e_f * (x**43) + 
            L0x200198a0_f * (x**44) + L0x200198a2_f * (x**45) + 
            L0x200198a4_f * (x**46) + L0x200198a6_f * (x**47) + 
            L0x200198a8_f * (x**48) + L0x200198aa_f * (x**49) + 
            L0x200198ac_f * (x**50) + L0x200198ae_f * (x**51) + 
            L0x200198b0_f * (x**52) + L0x200198b2_f * (x**53) + 
            L0x200198b4_f * (x**54) + L0x200198b6_f * (x**55) + 
            L0x200198b8_f * (x**56) + L0x200198ba_f * (x**57) + 
            L0x200198bc_f * (x**58) + L0x200198be_f * (x**59) + 
            L0x200198c0_f * (x**60) + L0x200198c2_f * (x**61) + 
            L0x200198c4_f * (x**62) + L0x200198c6_f * (x**63) + 
            L0x200198c8_f * (x**64) + L0x200198ca_f * (x**65) + 
            L0x200198cc_f * (x**66) + L0x200198ce_f * (x**67) + 
            L0x200198d0_f * (x**68) + L0x200198d2_f * (x**69) + 
            L0x200198d4_f * (x**70) + L0x200198d6_f * (x**71) + 
            L0x200198d8_f * (x**72) + L0x200198da_f * (x**73) + 
            L0x200198dc_f * (x**74) + L0x200198de_f * (x**75) + 
            L0x200198e0_f * (x**76) + L0x200198e2_f * (x**77) + 
            L0x200198e4_f * (x**78) + L0x200198e6_f * (x**79) + 
            L0x200198e8_f * (x**80) + L0x200198ea_f * (x**81) + 
            L0x200198ec_f * (x**82) + L0x200198ee_f * (x**83) + 
            L0x200198f0_f * (x**84) + L0x200198f2_f * (x**85) + 
            L0x200198f4_f * (x**86) + L0x200198f6_f * (x**87) + 
            L0x200198f8_f * (x**88) + L0x200198fa_f * (x**89) + 
            L0x200198fc_f * (x**90) + L0x200198fe_f * (x**91) + 
            L0x20019900_f * (x**92) + L0x20019902_f * (x**93) + 
            L0x20019904_f * (x**94) + L0x20019906_f * (x**95) + 
            L0x20019908_f * (x**96) + L0x2001990a_f * (x**97) + 
            L0x2001990c_f * (x**98) + L0x2001990e_f * (x**99) + 
            L0x20019910_f * (x**100) + L0x20019912_f * (x**101) + 
            L0x20019914_f * (x**102) + L0x20019916_f * (x**103) + 
            L0x20019918_f * (x**104) + L0x2001991a_f * (x**105) + 
            L0x2001991c_f * (x**106) + L0x2001991e_f * (x**107) + 
            L0x20019920_f * (x**108) + L0x20019922_f * (x**109) + 
            L0x20019924_f * (x**110) + L0x20019926_f * (x**111) + 
            L0x20019928_f * (x**112) + L0x2001992a_f * (x**113) + 
            L0x2001992c_f * (x**114) + L0x2001992e_f * (x**115) + 
            L0x20019930_f * (x**116) + L0x20019932_f * (x**117) + 
            L0x20019934_f * (x**118) + L0x20019936_f * (x**119) + 
            L0x20019938_f * (x**120) + L0x2001993a_f * (x**121) + 
            L0x2001993c_f * (x**122) + L0x2001993e_f * (x**123) + 
            L0x20019940_f * (x**124) + L0x20019942_f * (x**125) + 
            L0x20019944_f * (x**126) + L0x20019946_f * (x**127) + 
            L0x20019948_f * (x**128) + L0x2001994a_f * (x**129) + 
            L0x2001994c_f * (x**130) + L0x2001994e_f * (x**131) + 
            L0x20019950_f * (x**132) + L0x20019952_f * (x**133) + 
            L0x20019954_f * (x**134) + L0x20019956_f * (x**135) + 
            L0x20019958_f * (x**136) + L0x2001995a_f * (x**137) + 
            L0x2001995c_f * (x**138) + L0x2001995e_f * (x**139) + 
            L0x20019960_f * (x**140) + L0x20019962_f * (x**141) + 
            L0x20019964_f * (x**142) + L0x20019966_f * (x**143) + 
            L0x20019968_f * (x**144) + L0x2001996a_f * (x**145) + 
            L0x2001996c_f * (x**146) + L0x2001996e_f * (x**147) + 
            L0x20019970_f * (x**148) + L0x20019972_f * (x**149) + 
            L0x20019974_f * (x**150) + L0x20019976_f * (x**151) + 
            L0x20019978_f * (x**152) + L0x2001997a_f * (x**153) + 
            L0x2001997c_f * (x**154) + L0x2001997e_f * (x**155) + 
            L0x20019980_f * (x**156) + L0x20019982_f * (x**157) + 
            L0x20019984_f * (x**158) + L0x20019986_f * (x**159) + 
            L0x20019988_f * (x**160) + L0x2001998a_f * (x**161) + 
            L0x2001998c_f * (x**162) + L0x2001998e_f * (x**163) + 
            L0x20019990_f * (x**164) + L0x20019992_f * (x**165) + 
            L0x20019994_f * (x**166) + L0x20019996_f * (x**167) + 
            L0x20019998_f * (x**168) + L0x2001999a_f * (x**169) + 
            L0x2001999c_f * (x**170) + L0x2001999e_f * (x**171) + 
            L0x200199a0_f * (x**172) + L0x200199a2_f * (x**173) + 
            L0x200199a4_f * (x**174) + L0x200199a6_f * (x**175) + 
            L0x200199a8_f * (x**176) + L0x200199aa_f * (x**177) + 
            L0x200199ac_f * (x**178) + L0x200199ae_f * (x**179) + 
            L0x200199b0_f * (x**180) + L0x200199b2_f * (x**181) + 
            L0x200199b4_f * (x**182) + L0x200199b6_f * (x**183) + 
            L0x200199b8_f * (x**184) + L0x200199ba_f * (x**185) + 
            L0x200199bc_f * (x**186) + L0x200199be_f * (x**187) + 
            L0x200199c0_f * (x**188) + L0x200199c2_f * (x**189) + 
            L0x200199c4_f * (x**190) + L0x200199c6_f * (x**191) + 
            L0x200199c8_f * (x**192) + L0x200199ca_f * (x**193) + 
            L0x200199cc_f * (x**194) + L0x200199ce_f * (x**195) + 
            L0x200199d0_f * (x**196) + L0x200199d2_f * (x**197) + 
            L0x200199d4_f * (x**198) + L0x200199d6_f * (x**199) + 
            L0x200199d8_f * (x**200) + L0x200199da_f * (x**201) + 
            L0x200199dc_f * (x**202) + L0x200199de_f * (x**203) + 
            L0x200199e0_f * (x**204) + L0x200199e2_f * (x**205) + 
            L0x200199e4_f * (x**206) + L0x200199e6_f * (x**207) + 
            L0x200199e8_f * (x**208) + L0x200199ea_f * (x**209) + 
            L0x200199ec_f * (x**210) + L0x200199ee_f * (x**211) + 
            L0x200199f0_f * (x**212) + L0x200199f2_f * (x**213) + 
            L0x200199f4_f * (x**214) + L0x200199f6_f * (x**215) + 
            L0x200199f8_f * (x**216) + L0x200199fa_f * (x**217) + 
            L0x200199fc_f * (x**218) + L0x200199fe_f * (x**219) + 
            L0x20019a00_f * (x**220) + L0x20019a02_f * (x**221) + 
            L0x20019a04_f * (x**222) + L0x20019a06_f * (x**223) + 
            L0x20019a08_f * (x**224) + L0x20019a0a_f * (x**225) + 
            L0x20019a0c_f * (x**226) + L0x20019a0e_f * (x**227) + 
            L0x20019a10_f * (x**228) + L0x20019a12_f * (x**229) + 
            L0x20019a14_f * (x**230) + L0x20019a16_f * (x**231) + 
            L0x20019a18_f * (x**232) + L0x20019a1a_f * (x**233) + 
            L0x20019a1c_f * (x**234) + L0x20019a1e_f * (x**235) + 
            L0x20019a20_f * (x**236) + L0x20019a22_f * (x**237) + 
            L0x20019a24_f * (x**238) + L0x20019a26_f * (x**239) + 
            L0x20019a28_f * (x**240) + L0x20019a2a_f * (x**241) + 
            L0x20019a2c_f * (x**242) + L0x20019a2e_f * (x**243) + 
            L0x20019a30_f * (x**244) + L0x20019a32_f * (x**245) + 
            L0x20019a34_f * (x**246) + L0x20019a36_f * (x**247) + 
            L0x20019a38_f * (x**248) + L0x20019a3a_f * (x**249) + 
            L0x20019a3c_f * (x**250) + L0x20019a3e_f * (x**251) + 
            L0x20019a40_f * (x**252) + L0x20019a42_f * (x**253) + 
            L0x20019a44_f * (x**254) + L0x20019a46_f * (x**255)
          )
          [25570049, x**4 - 830930],
    (* inp_poly_3 *)
    eqmod (2**32) * (inp_poly_3 * inp_poly_3)
          (
            L0x20019848_f * (x**0) + L0x2001984a_f * (x**1) + 
            L0x2001984c_f * (x**2) + L0x2001984e_f * (x**3) + 
            L0x20019850_f * (x**4) + L0x20019852_f * (x**5) + 
            L0x20019854_f * (x**6) + L0x20019856_f * (x**7) + 
            L0x20019858_f * (x**8) + L0x2001985a_f * (x**9) + 
            L0x2001985c_f * (x**10) + L0x2001985e_f * (x**11) + 
            L0x20019860_f * (x**12) + L0x20019862_f * (x**13) + 
            L0x20019864_f * (x**14) + L0x20019866_f * (x**15) + 
            L0x20019868_f * (x**16) + L0x2001986a_f * (x**17) + 
            L0x2001986c_f * (x**18) + L0x2001986e_f * (x**19) + 
            L0x20019870_f * (x**20) + L0x20019872_f * (x**21) + 
            L0x20019874_f * (x**22) + L0x20019876_f * (x**23) + 
            L0x20019878_f * (x**24) + L0x2001987a_f * (x**25) + 
            L0x2001987c_f * (x**26) + L0x2001987e_f * (x**27) + 
            L0x20019880_f * (x**28) + L0x20019882_f * (x**29) + 
            L0x20019884_f * (x**30) + L0x20019886_f * (x**31) + 
            L0x20019888_f * (x**32) + L0x2001988a_f * (x**33) + 
            L0x2001988c_f * (x**34) + L0x2001988e_f * (x**35) + 
            L0x20019890_f * (x**36) + L0x20019892_f * (x**37) + 
            L0x20019894_f * (x**38) + L0x20019896_f * (x**39) + 
            L0x20019898_f * (x**40) + L0x2001989a_f * (x**41) + 
            L0x2001989c_f * (x**42) + L0x2001989e_f * (x**43) + 
            L0x200198a0_f * (x**44) + L0x200198a2_f * (x**45) + 
            L0x200198a4_f * (x**46) + L0x200198a6_f * (x**47) + 
            L0x200198a8_f * (x**48) + L0x200198aa_f * (x**49) + 
            L0x200198ac_f * (x**50) + L0x200198ae_f * (x**51) + 
            L0x200198b0_f * (x**52) + L0x200198b2_f * (x**53) + 
            L0x200198b4_f * (x**54) + L0x200198b6_f * (x**55) + 
            L0x200198b8_f * (x**56) + L0x200198ba_f * (x**57) + 
            L0x200198bc_f * (x**58) + L0x200198be_f * (x**59) + 
            L0x200198c0_f * (x**60) + L0x200198c2_f * (x**61) + 
            L0x200198c4_f * (x**62) + L0x200198c6_f * (x**63) + 
            L0x200198c8_f * (x**64) + L0x200198ca_f * (x**65) + 
            L0x200198cc_f * (x**66) + L0x200198ce_f * (x**67) + 
            L0x200198d0_f * (x**68) + L0x200198d2_f * (x**69) + 
            L0x200198d4_f * (x**70) + L0x200198d6_f * (x**71) + 
            L0x200198d8_f * (x**72) + L0x200198da_f * (x**73) + 
            L0x200198dc_f * (x**74) + L0x200198de_f * (x**75) + 
            L0x200198e0_f * (x**76) + L0x200198e2_f * (x**77) + 
            L0x200198e4_f * (x**78) + L0x200198e6_f * (x**79) + 
            L0x200198e8_f * (x**80) + L0x200198ea_f * (x**81) + 
            L0x200198ec_f * (x**82) + L0x200198ee_f * (x**83) + 
            L0x200198f0_f * (x**84) + L0x200198f2_f * (x**85) + 
            L0x200198f4_f * (x**86) + L0x200198f6_f * (x**87) + 
            L0x200198f8_f * (x**88) + L0x200198fa_f * (x**89) + 
            L0x200198fc_f * (x**90) + L0x200198fe_f * (x**91) + 
            L0x20019900_f * (x**92) + L0x20019902_f * (x**93) + 
            L0x20019904_f * (x**94) + L0x20019906_f * (x**95) + 
            L0x20019908_f * (x**96) + L0x2001990a_f * (x**97) + 
            L0x2001990c_f * (x**98) + L0x2001990e_f * (x**99) + 
            L0x20019910_f * (x**100) + L0x20019912_f * (x**101) + 
            L0x20019914_f * (x**102) + L0x20019916_f * (x**103) + 
            L0x20019918_f * (x**104) + L0x2001991a_f * (x**105) + 
            L0x2001991c_f * (x**106) + L0x2001991e_f * (x**107) + 
            L0x20019920_f * (x**108) + L0x20019922_f * (x**109) + 
            L0x20019924_f * (x**110) + L0x20019926_f * (x**111) + 
            L0x20019928_f * (x**112) + L0x2001992a_f * (x**113) + 
            L0x2001992c_f * (x**114) + L0x2001992e_f * (x**115) + 
            L0x20019930_f * (x**116) + L0x20019932_f * (x**117) + 
            L0x20019934_f * (x**118) + L0x20019936_f * (x**119) + 
            L0x20019938_f * (x**120) + L0x2001993a_f * (x**121) + 
            L0x2001993c_f * (x**122) + L0x2001993e_f * (x**123) + 
            L0x20019940_f * (x**124) + L0x20019942_f * (x**125) + 
            L0x20019944_f * (x**126) + L0x20019946_f * (x**127) + 
            L0x20019948_f * (x**128) + L0x2001994a_f * (x**129) + 
            L0x2001994c_f * (x**130) + L0x2001994e_f * (x**131) + 
            L0x20019950_f * (x**132) + L0x20019952_f * (x**133) + 
            L0x20019954_f * (x**134) + L0x20019956_f * (x**135) + 
            L0x20019958_f * (x**136) + L0x2001995a_f * (x**137) + 
            L0x2001995c_f * (x**138) + L0x2001995e_f * (x**139) + 
            L0x20019960_f * (x**140) + L0x20019962_f * (x**141) + 
            L0x20019964_f * (x**142) + L0x20019966_f * (x**143) + 
            L0x20019968_f * (x**144) + L0x2001996a_f * (x**145) + 
            L0x2001996c_f * (x**146) + L0x2001996e_f * (x**147) + 
            L0x20019970_f * (x**148) + L0x20019972_f * (x**149) + 
            L0x20019974_f * (x**150) + L0x20019976_f * (x**151) + 
            L0x20019978_f * (x**152) + L0x2001997a_f * (x**153) + 
            L0x2001997c_f * (x**154) + L0x2001997e_f * (x**155) + 
            L0x20019980_f * (x**156) + L0x20019982_f * (x**157) + 
            L0x20019984_f * (x**158) + L0x20019986_f * (x**159) + 
            L0x20019988_f * (x**160) + L0x2001998a_f * (x**161) + 
            L0x2001998c_f * (x**162) + L0x2001998e_f * (x**163) + 
            L0x20019990_f * (x**164) + L0x20019992_f * (x**165) + 
            L0x20019994_f * (x**166) + L0x20019996_f * (x**167) + 
            L0x20019998_f * (x**168) + L0x2001999a_f * (x**169) + 
            L0x2001999c_f * (x**170) + L0x2001999e_f * (x**171) + 
            L0x200199a0_f * (x**172) + L0x200199a2_f * (x**173) + 
            L0x200199a4_f * (x**174) + L0x200199a6_f * (x**175) + 
            L0x200199a8_f * (x**176) + L0x200199aa_f * (x**177) + 
            L0x200199ac_f * (x**178) + L0x200199ae_f * (x**179) + 
            L0x200199b0_f * (x**180) + L0x200199b2_f * (x**181) + 
            L0x200199b4_f * (x**182) + L0x200199b6_f * (x**183) + 
            L0x200199b8_f * (x**184) + L0x200199ba_f * (x**185) + 
            L0x200199bc_f * (x**186) + L0x200199be_f * (x**187) + 
            L0x200199c0_f * (x**188) + L0x200199c2_f * (x**189) + 
            L0x200199c4_f * (x**190) + L0x200199c6_f * (x**191) + 
            L0x200199c8_f * (x**192) + L0x200199ca_f * (x**193) + 
            L0x200199cc_f * (x**194) + L0x200199ce_f * (x**195) + 
            L0x200199d0_f * (x**196) + L0x200199d2_f * (x**197) + 
            L0x200199d4_f * (x**198) + L0x200199d6_f * (x**199) + 
            L0x200199d8_f * (x**200) + L0x200199da_f * (x**201) + 
            L0x200199dc_f * (x**202) + L0x200199de_f * (x**203) + 
            L0x200199e0_f * (x**204) + L0x200199e2_f * (x**205) + 
            L0x200199e4_f * (x**206) + L0x200199e6_f * (x**207) + 
            L0x200199e8_f * (x**208) + L0x200199ea_f * (x**209) + 
            L0x200199ec_f * (x**210) + L0x200199ee_f * (x**211) + 
            L0x200199f0_f * (x**212) + L0x200199f2_f * (x**213) + 
            L0x200199f4_f * (x**214) + L0x200199f6_f * (x**215) + 
            L0x200199f8_f * (x**216) + L0x200199fa_f * (x**217) + 
            L0x200199fc_f * (x**218) + L0x200199fe_f * (x**219) + 
            L0x20019a00_f * (x**220) + L0x20019a02_f * (x**221) + 
            L0x20019a04_f * (x**222) + L0x20019a06_f * (x**223) + 
            L0x20019a08_f * (x**224) + L0x20019a0a_f * (x**225) + 
            L0x20019a0c_f * (x**226) + L0x20019a0e_f * (x**227) + 
            L0x20019a10_f * (x**228) + L0x20019a12_f * (x**229) + 
            L0x20019a14_f * (x**230) + L0x20019a16_f * (x**231) + 
            L0x20019a18_f * (x**232) + L0x20019a1a_f * (x**233) + 
            L0x20019a1c_f * (x**234) + L0x20019a1e_f * (x**235) + 
            L0x20019a20_f * (x**236) + L0x20019a22_f * (x**237) + 
            L0x20019a24_f * (x**238) + L0x20019a26_f * (x**239) + 
            L0x20019a28_f * (x**240) + L0x20019a2a_f * (x**241) + 
            L0x20019a2c_f * (x**242) + L0x20019a2e_f * (x**243) + 
            L0x20019a30_f * (x**244) + L0x20019a32_f * (x**245) + 
            L0x20019a34_f * (x**246) + L0x20019a36_f * (x**247) + 
            L0x20019a38_f * (x**248) + L0x20019a3a_f * (x**249) + 
            L0x20019a3c_f * (x**250) + L0x20019a3e_f * (x**251) + 
            L0x20019a40_f * (x**252) + L0x20019a42_f * (x**253) + 
            L0x20019a44_f * (x**254) + L0x20019a46_f * (x**255)
          )
          [25570049, x**4 - 24739119],
    (* inp_poly_4 *)
    eqmod (2**32) * (inp_poly_4 * inp_poly_4)
          (
            L0x20019848_f * (x**0) + L0x2001984a_f * (x**1) + 
            L0x2001984c_f * (x**2) + L0x2001984e_f * (x**3) + 
            L0x20019850_f * (x**4) + L0x20019852_f * (x**5) + 
            L0x20019854_f * (x**6) + L0x20019856_f * (x**7) + 
            L0x20019858_f * (x**8) + L0x2001985a_f * (x**9) + 
            L0x2001985c_f * (x**10) + L0x2001985e_f * (x**11) + 
            L0x20019860_f * (x**12) + L0x20019862_f * (x**13) + 
            L0x20019864_f * (x**14) + L0x20019866_f * (x**15) + 
            L0x20019868_f * (x**16) + L0x2001986a_f * (x**17) + 
            L0x2001986c_f * (x**18) + L0x2001986e_f * (x**19) + 
            L0x20019870_f * (x**20) + L0x20019872_f * (x**21) + 
            L0x20019874_f * (x**22) + L0x20019876_f * (x**23) + 
            L0x20019878_f * (x**24) + L0x2001987a_f * (x**25) + 
            L0x2001987c_f * (x**26) + L0x2001987e_f * (x**27) + 
            L0x20019880_f * (x**28) + L0x20019882_f * (x**29) + 
            L0x20019884_f * (x**30) + L0x20019886_f * (x**31) + 
            L0x20019888_f * (x**32) + L0x2001988a_f * (x**33) + 
            L0x2001988c_f * (x**34) + L0x2001988e_f * (x**35) + 
            L0x20019890_f * (x**36) + L0x20019892_f * (x**37) + 
            L0x20019894_f * (x**38) + L0x20019896_f * (x**39) + 
            L0x20019898_f * (x**40) + L0x2001989a_f * (x**41) + 
            L0x2001989c_f * (x**42) + L0x2001989e_f * (x**43) + 
            L0x200198a0_f * (x**44) + L0x200198a2_f * (x**45) + 
            L0x200198a4_f * (x**46) + L0x200198a6_f * (x**47) + 
            L0x200198a8_f * (x**48) + L0x200198aa_f * (x**49) + 
            L0x200198ac_f * (x**50) + L0x200198ae_f * (x**51) + 
            L0x200198b0_f * (x**52) + L0x200198b2_f * (x**53) + 
            L0x200198b4_f * (x**54) + L0x200198b6_f * (x**55) + 
            L0x200198b8_f * (x**56) + L0x200198ba_f * (x**57) + 
            L0x200198bc_f * (x**58) + L0x200198be_f * (x**59) + 
            L0x200198c0_f * (x**60) + L0x200198c2_f * (x**61) + 
            L0x200198c4_f * (x**62) + L0x200198c6_f * (x**63) + 
            L0x200198c8_f * (x**64) + L0x200198ca_f * (x**65) + 
            L0x200198cc_f * (x**66) + L0x200198ce_f * (x**67) + 
            L0x200198d0_f * (x**68) + L0x200198d2_f * (x**69) + 
            L0x200198d4_f * (x**70) + L0x200198d6_f * (x**71) + 
            L0x200198d8_f * (x**72) + L0x200198da_f * (x**73) + 
            L0x200198dc_f * (x**74) + L0x200198de_f * (x**75) + 
            L0x200198e0_f * (x**76) + L0x200198e2_f * (x**77) + 
            L0x200198e4_f * (x**78) + L0x200198e6_f * (x**79) + 
            L0x200198e8_f * (x**80) + L0x200198ea_f * (x**81) + 
            L0x200198ec_f * (x**82) + L0x200198ee_f * (x**83) + 
            L0x200198f0_f * (x**84) + L0x200198f2_f * (x**85) + 
            L0x200198f4_f * (x**86) + L0x200198f6_f * (x**87) + 
            L0x200198f8_f * (x**88) + L0x200198fa_f * (x**89) + 
            L0x200198fc_f * (x**90) + L0x200198fe_f * (x**91) + 
            L0x20019900_f * (x**92) + L0x20019902_f * (x**93) + 
            L0x20019904_f * (x**94) + L0x20019906_f * (x**95) + 
            L0x20019908_f * (x**96) + L0x2001990a_f * (x**97) + 
            L0x2001990c_f * (x**98) + L0x2001990e_f * (x**99) + 
            L0x20019910_f * (x**100) + L0x20019912_f * (x**101) + 
            L0x20019914_f * (x**102) + L0x20019916_f * (x**103) + 
            L0x20019918_f * (x**104) + L0x2001991a_f * (x**105) + 
            L0x2001991c_f * (x**106) + L0x2001991e_f * (x**107) + 
            L0x20019920_f * (x**108) + L0x20019922_f * (x**109) + 
            L0x20019924_f * (x**110) + L0x20019926_f * (x**111) + 
            L0x20019928_f * (x**112) + L0x2001992a_f * (x**113) + 
            L0x2001992c_f * (x**114) + L0x2001992e_f * (x**115) + 
            L0x20019930_f * (x**116) + L0x20019932_f * (x**117) + 
            L0x20019934_f * (x**118) + L0x20019936_f * (x**119) + 
            L0x20019938_f * (x**120) + L0x2001993a_f * (x**121) + 
            L0x2001993c_f * (x**122) + L0x2001993e_f * (x**123) + 
            L0x20019940_f * (x**124) + L0x20019942_f * (x**125) + 
            L0x20019944_f * (x**126) + L0x20019946_f * (x**127) + 
            L0x20019948_f * (x**128) + L0x2001994a_f * (x**129) + 
            L0x2001994c_f * (x**130) + L0x2001994e_f * (x**131) + 
            L0x20019950_f * (x**132) + L0x20019952_f * (x**133) + 
            L0x20019954_f * (x**134) + L0x20019956_f * (x**135) + 
            L0x20019958_f * (x**136) + L0x2001995a_f * (x**137) + 
            L0x2001995c_f * (x**138) + L0x2001995e_f * (x**139) + 
            L0x20019960_f * (x**140) + L0x20019962_f * (x**141) + 
            L0x20019964_f * (x**142) + L0x20019966_f * (x**143) + 
            L0x20019968_f * (x**144) + L0x2001996a_f * (x**145) + 
            L0x2001996c_f * (x**146) + L0x2001996e_f * (x**147) + 
            L0x20019970_f * (x**148) + L0x20019972_f * (x**149) + 
            L0x20019974_f * (x**150) + L0x20019976_f * (x**151) + 
            L0x20019978_f * (x**152) + L0x2001997a_f * (x**153) + 
            L0x2001997c_f * (x**154) + L0x2001997e_f * (x**155) + 
            L0x20019980_f * (x**156) + L0x20019982_f * (x**157) + 
            L0x20019984_f * (x**158) + L0x20019986_f * (x**159) + 
            L0x20019988_f * (x**160) + L0x2001998a_f * (x**161) + 
            L0x2001998c_f * (x**162) + L0x2001998e_f * (x**163) + 
            L0x20019990_f * (x**164) + L0x20019992_f * (x**165) + 
            L0x20019994_f * (x**166) + L0x20019996_f * (x**167) + 
            L0x20019998_f * (x**168) + L0x2001999a_f * (x**169) + 
            L0x2001999c_f * (x**170) + L0x2001999e_f * (x**171) + 
            L0x200199a0_f * (x**172) + L0x200199a2_f * (x**173) + 
            L0x200199a4_f * (x**174) + L0x200199a6_f * (x**175) + 
            L0x200199a8_f * (x**176) + L0x200199aa_f * (x**177) + 
            L0x200199ac_f * (x**178) + L0x200199ae_f * (x**179) + 
            L0x200199b0_f * (x**180) + L0x200199b2_f * (x**181) + 
            L0x200199b4_f * (x**182) + L0x200199b6_f * (x**183) + 
            L0x200199b8_f * (x**184) + L0x200199ba_f * (x**185) + 
            L0x200199bc_f * (x**186) + L0x200199be_f * (x**187) + 
            L0x200199c0_f * (x**188) + L0x200199c2_f * (x**189) + 
            L0x200199c4_f * (x**190) + L0x200199c6_f * (x**191) + 
            L0x200199c8_f * (x**192) + L0x200199ca_f * (x**193) + 
            L0x200199cc_f * (x**194) + L0x200199ce_f * (x**195) + 
            L0x200199d0_f * (x**196) + L0x200199d2_f * (x**197) + 
            L0x200199d4_f * (x**198) + L0x200199d6_f * (x**199) + 
            L0x200199d8_f * (x**200) + L0x200199da_f * (x**201) + 
            L0x200199dc_f * (x**202) + L0x200199de_f * (x**203) + 
            L0x200199e0_f * (x**204) + L0x200199e2_f * (x**205) + 
            L0x200199e4_f * (x**206) + L0x200199e6_f * (x**207) + 
            L0x200199e8_f * (x**208) + L0x200199ea_f * (x**209) + 
            L0x200199ec_f * (x**210) + L0x200199ee_f * (x**211) + 
            L0x200199f0_f * (x**212) + L0x200199f2_f * (x**213) + 
            L0x200199f4_f * (x**214) + L0x200199f6_f * (x**215) + 
            L0x200199f8_f * (x**216) + L0x200199fa_f * (x**217) + 
            L0x200199fc_f * (x**218) + L0x200199fe_f * (x**219) + 
            L0x20019a00_f * (x**220) + L0x20019a02_f * (x**221) + 
            L0x20019a04_f * (x**222) + L0x20019a06_f * (x**223) + 
            L0x20019a08_f * (x**224) + L0x20019a0a_f * (x**225) + 
            L0x20019a0c_f * (x**226) + L0x20019a0e_f * (x**227) + 
            L0x20019a10_f * (x**228) + L0x20019a12_f * (x**229) + 
            L0x20019a14_f * (x**230) + L0x20019a16_f * (x**231) + 
            L0x20019a18_f * (x**232) + L0x20019a1a_f * (x**233) + 
            L0x20019a1c_f * (x**234) + L0x20019a1e_f * (x**235) + 
            L0x20019a20_f * (x**236) + L0x20019a22_f * (x**237) + 
            L0x20019a24_f * (x**238) + L0x20019a26_f * (x**239) + 
            L0x20019a28_f * (x**240) + L0x20019a2a_f * (x**241) + 
            L0x20019a2c_f * (x**242) + L0x20019a2e_f * (x**243) + 
            L0x20019a30_f * (x**244) + L0x20019a32_f * (x**245) + 
            L0x20019a34_f * (x**246) + L0x20019a36_f * (x**247) + 
            L0x20019a38_f * (x**248) + L0x20019a3a_f * (x**249) + 
            L0x20019a3c_f * (x**250) + L0x20019a3e_f * (x**251) + 
            L0x20019a40_f * (x**252) + L0x20019a42_f * (x**253) + 
            L0x20019a44_f * (x**254) + L0x20019a46_f * (x**255)
          )
          [25570049, x**4 - 678652],
    (* inp_poly_5 *)
    eqmod (2**32) * (inp_poly_5 * inp_poly_5)
          (
            L0x20019848_f * (x**0) + L0x2001984a_f * (x**1) + 
            L0x2001984c_f * (x**2) + L0x2001984e_f * (x**3) + 
            L0x20019850_f * (x**4) + L0x20019852_f * (x**5) + 
            L0x20019854_f * (x**6) + L0x20019856_f * (x**7) + 
            L0x20019858_f * (x**8) + L0x2001985a_f * (x**9) + 
            L0x2001985c_f * (x**10) + L0x2001985e_f * (x**11) + 
            L0x20019860_f * (x**12) + L0x20019862_f * (x**13) + 
            L0x20019864_f * (x**14) + L0x20019866_f * (x**15) + 
            L0x20019868_f * (x**16) + L0x2001986a_f * (x**17) + 
            L0x2001986c_f * (x**18) + L0x2001986e_f * (x**19) + 
            L0x20019870_f * (x**20) + L0x20019872_f * (x**21) + 
            L0x20019874_f * (x**22) + L0x20019876_f * (x**23) + 
            L0x20019878_f * (x**24) + L0x2001987a_f * (x**25) + 
            L0x2001987c_f * (x**26) + L0x2001987e_f * (x**27) + 
            L0x20019880_f * (x**28) + L0x20019882_f * (x**29) + 
            L0x20019884_f * (x**30) + L0x20019886_f * (x**31) + 
            L0x20019888_f * (x**32) + L0x2001988a_f * (x**33) + 
            L0x2001988c_f * (x**34) + L0x2001988e_f * (x**35) + 
            L0x20019890_f * (x**36) + L0x20019892_f * (x**37) + 
            L0x20019894_f * (x**38) + L0x20019896_f * (x**39) + 
            L0x20019898_f * (x**40) + L0x2001989a_f * (x**41) + 
            L0x2001989c_f * (x**42) + L0x2001989e_f * (x**43) + 
            L0x200198a0_f * (x**44) + L0x200198a2_f * (x**45) + 
            L0x200198a4_f * (x**46) + L0x200198a6_f * (x**47) + 
            L0x200198a8_f * (x**48) + L0x200198aa_f * (x**49) + 
            L0x200198ac_f * (x**50) + L0x200198ae_f * (x**51) + 
            L0x200198b0_f * (x**52) + L0x200198b2_f * (x**53) + 
            L0x200198b4_f * (x**54) + L0x200198b6_f * (x**55) + 
            L0x200198b8_f * (x**56) + L0x200198ba_f * (x**57) + 
            L0x200198bc_f * (x**58) + L0x200198be_f * (x**59) + 
            L0x200198c0_f * (x**60) + L0x200198c2_f * (x**61) + 
            L0x200198c4_f * (x**62) + L0x200198c6_f * (x**63) + 
            L0x200198c8_f * (x**64) + L0x200198ca_f * (x**65) + 
            L0x200198cc_f * (x**66) + L0x200198ce_f * (x**67) + 
            L0x200198d0_f * (x**68) + L0x200198d2_f * (x**69) + 
            L0x200198d4_f * (x**70) + L0x200198d6_f * (x**71) + 
            L0x200198d8_f * (x**72) + L0x200198da_f * (x**73) + 
            L0x200198dc_f * (x**74) + L0x200198de_f * (x**75) + 
            L0x200198e0_f * (x**76) + L0x200198e2_f * (x**77) + 
            L0x200198e4_f * (x**78) + L0x200198e6_f * (x**79) + 
            L0x200198e8_f * (x**80) + L0x200198ea_f * (x**81) + 
            L0x200198ec_f * (x**82) + L0x200198ee_f * (x**83) + 
            L0x200198f0_f * (x**84) + L0x200198f2_f * (x**85) + 
            L0x200198f4_f * (x**86) + L0x200198f6_f * (x**87) + 
            L0x200198f8_f * (x**88) + L0x200198fa_f * (x**89) + 
            L0x200198fc_f * (x**90) + L0x200198fe_f * (x**91) + 
            L0x20019900_f * (x**92) + L0x20019902_f * (x**93) + 
            L0x20019904_f * (x**94) + L0x20019906_f * (x**95) + 
            L0x20019908_f * (x**96) + L0x2001990a_f * (x**97) + 
            L0x2001990c_f * (x**98) + L0x2001990e_f * (x**99) + 
            L0x20019910_f * (x**100) + L0x20019912_f * (x**101) + 
            L0x20019914_f * (x**102) + L0x20019916_f * (x**103) + 
            L0x20019918_f * (x**104) + L0x2001991a_f * (x**105) + 
            L0x2001991c_f * (x**106) + L0x2001991e_f * (x**107) + 
            L0x20019920_f * (x**108) + L0x20019922_f * (x**109) + 
            L0x20019924_f * (x**110) + L0x20019926_f * (x**111) + 
            L0x20019928_f * (x**112) + L0x2001992a_f * (x**113) + 
            L0x2001992c_f * (x**114) + L0x2001992e_f * (x**115) + 
            L0x20019930_f * (x**116) + L0x20019932_f * (x**117) + 
            L0x20019934_f * (x**118) + L0x20019936_f * (x**119) + 
            L0x20019938_f * (x**120) + L0x2001993a_f * (x**121) + 
            L0x2001993c_f * (x**122) + L0x2001993e_f * (x**123) + 
            L0x20019940_f * (x**124) + L0x20019942_f * (x**125) + 
            L0x20019944_f * (x**126) + L0x20019946_f * (x**127) + 
            L0x20019948_f * (x**128) + L0x2001994a_f * (x**129) + 
            L0x2001994c_f * (x**130) + L0x2001994e_f * (x**131) + 
            L0x20019950_f * (x**132) + L0x20019952_f * (x**133) + 
            L0x20019954_f * (x**134) + L0x20019956_f * (x**135) + 
            L0x20019958_f * (x**136) + L0x2001995a_f * (x**137) + 
            L0x2001995c_f * (x**138) + L0x2001995e_f * (x**139) + 
            L0x20019960_f * (x**140) + L0x20019962_f * (x**141) + 
            L0x20019964_f * (x**142) + L0x20019966_f * (x**143) + 
            L0x20019968_f * (x**144) + L0x2001996a_f * (x**145) + 
            L0x2001996c_f * (x**146) + L0x2001996e_f * (x**147) + 
            L0x20019970_f * (x**148) + L0x20019972_f * (x**149) + 
            L0x20019974_f * (x**150) + L0x20019976_f * (x**151) + 
            L0x20019978_f * (x**152) + L0x2001997a_f * (x**153) + 
            L0x2001997c_f * (x**154) + L0x2001997e_f * (x**155) + 
            L0x20019980_f * (x**156) + L0x20019982_f * (x**157) + 
            L0x20019984_f * (x**158) + L0x20019986_f * (x**159) + 
            L0x20019988_f * (x**160) + L0x2001998a_f * (x**161) + 
            L0x2001998c_f * (x**162) + L0x2001998e_f * (x**163) + 
            L0x20019990_f * (x**164) + L0x20019992_f * (x**165) + 
            L0x20019994_f * (x**166) + L0x20019996_f * (x**167) + 
            L0x20019998_f * (x**168) + L0x2001999a_f * (x**169) + 
            L0x2001999c_f * (x**170) + L0x2001999e_f * (x**171) + 
            L0x200199a0_f * (x**172) + L0x200199a2_f * (x**173) + 
            L0x200199a4_f * (x**174) + L0x200199a6_f * (x**175) + 
            L0x200199a8_f * (x**176) + L0x200199aa_f * (x**177) + 
            L0x200199ac_f * (x**178) + L0x200199ae_f * (x**179) + 
            L0x200199b0_f * (x**180) + L0x200199b2_f * (x**181) + 
            L0x200199b4_f * (x**182) + L0x200199b6_f * (x**183) + 
            L0x200199b8_f * (x**184) + L0x200199ba_f * (x**185) + 
            L0x200199bc_f * (x**186) + L0x200199be_f * (x**187) + 
            L0x200199c0_f * (x**188) + L0x200199c2_f * (x**189) + 
            L0x200199c4_f * (x**190) + L0x200199c6_f * (x**191) + 
            L0x200199c8_f * (x**192) + L0x200199ca_f * (x**193) + 
            L0x200199cc_f * (x**194) + L0x200199ce_f * (x**195) + 
            L0x200199d0_f * (x**196) + L0x200199d2_f * (x**197) + 
            L0x200199d4_f * (x**198) + L0x200199d6_f * (x**199) + 
            L0x200199d8_f * (x**200) + L0x200199da_f * (x**201) + 
            L0x200199dc_f * (x**202) + L0x200199de_f * (x**203) + 
            L0x200199e0_f * (x**204) + L0x200199e2_f * (x**205) + 
            L0x200199e4_f * (x**206) + L0x200199e6_f * (x**207) + 
            L0x200199e8_f * (x**208) + L0x200199ea_f * (x**209) + 
            L0x200199ec_f * (x**210) + L0x200199ee_f * (x**211) + 
            L0x200199f0_f * (x**212) + L0x200199f2_f * (x**213) + 
            L0x200199f4_f * (x**214) + L0x200199f6_f * (x**215) + 
            L0x200199f8_f * (x**216) + L0x200199fa_f * (x**217) + 
            L0x200199fc_f * (x**218) + L0x200199fe_f * (x**219) + 
            L0x20019a00_f * (x**220) + L0x20019a02_f * (x**221) + 
            L0x20019a04_f * (x**222) + L0x20019a06_f * (x**223) + 
            L0x20019a08_f * (x**224) + L0x20019a0a_f * (x**225) + 
            L0x20019a0c_f * (x**226) + L0x20019a0e_f * (x**227) + 
            L0x20019a10_f * (x**228) + L0x20019a12_f * (x**229) + 
            L0x20019a14_f * (x**230) + L0x20019a16_f * (x**231) + 
            L0x20019a18_f * (x**232) + L0x20019a1a_f * (x**233) + 
            L0x20019a1c_f * (x**234) + L0x20019a1e_f * (x**235) + 
            L0x20019a20_f * (x**236) + L0x20019a22_f * (x**237) + 
            L0x20019a24_f * (x**238) + L0x20019a26_f * (x**239) + 
            L0x20019a28_f * (x**240) + L0x20019a2a_f * (x**241) + 
            L0x20019a2c_f * (x**242) + L0x20019a2e_f * (x**243) + 
            L0x20019a30_f * (x**244) + L0x20019a32_f * (x**245) + 
            L0x20019a34_f * (x**246) + L0x20019a36_f * (x**247) + 
            L0x20019a38_f * (x**248) + L0x20019a3a_f * (x**249) + 
            L0x20019a3c_f * (x**250) + L0x20019a3e_f * (x**251) + 
            L0x20019a40_f * (x**252) + L0x20019a42_f * (x**253) + 
            L0x20019a44_f * (x**254) + L0x20019a46_f * (x**255)
          )
          [25570049, x**4 - 24891397],
    (* inp_poly_6 *)
    eqmod (2**32) * (inp_poly_6 * inp_poly_6)
          (
            L0x20019848_f * (x**0) + L0x2001984a_f * (x**1) + 
            L0x2001984c_f * (x**2) + L0x2001984e_f * (x**3) + 
            L0x20019850_f * (x**4) + L0x20019852_f * (x**5) + 
            L0x20019854_f * (x**6) + L0x20019856_f * (x**7) + 
            L0x20019858_f * (x**8) + L0x2001985a_f * (x**9) + 
            L0x2001985c_f * (x**10) + L0x2001985e_f * (x**11) + 
            L0x20019860_f * (x**12) + L0x20019862_f * (x**13) + 
            L0x20019864_f * (x**14) + L0x20019866_f * (x**15) + 
            L0x20019868_f * (x**16) + L0x2001986a_f * (x**17) + 
            L0x2001986c_f * (x**18) + L0x2001986e_f * (x**19) + 
            L0x20019870_f * (x**20) + L0x20019872_f * (x**21) + 
            L0x20019874_f * (x**22) + L0x20019876_f * (x**23) + 
            L0x20019878_f * (x**24) + L0x2001987a_f * (x**25) + 
            L0x2001987c_f * (x**26) + L0x2001987e_f * (x**27) + 
            L0x20019880_f * (x**28) + L0x20019882_f * (x**29) + 
            L0x20019884_f * (x**30) + L0x20019886_f * (x**31) + 
            L0x20019888_f * (x**32) + L0x2001988a_f * (x**33) + 
            L0x2001988c_f * (x**34) + L0x2001988e_f * (x**35) + 
            L0x20019890_f * (x**36) + L0x20019892_f * (x**37) + 
            L0x20019894_f * (x**38) + L0x20019896_f * (x**39) + 
            L0x20019898_f * (x**40) + L0x2001989a_f * (x**41) + 
            L0x2001989c_f * (x**42) + L0x2001989e_f * (x**43) + 
            L0x200198a0_f * (x**44) + L0x200198a2_f * (x**45) + 
            L0x200198a4_f * (x**46) + L0x200198a6_f * (x**47) + 
            L0x200198a8_f * (x**48) + L0x200198aa_f * (x**49) + 
            L0x200198ac_f * (x**50) + L0x200198ae_f * (x**51) + 
            L0x200198b0_f * (x**52) + L0x200198b2_f * (x**53) + 
            L0x200198b4_f * (x**54) + L0x200198b6_f * (x**55) + 
            L0x200198b8_f * (x**56) + L0x200198ba_f * (x**57) + 
            L0x200198bc_f * (x**58) + L0x200198be_f * (x**59) + 
            L0x200198c0_f * (x**60) + L0x200198c2_f * (x**61) + 
            L0x200198c4_f * (x**62) + L0x200198c6_f * (x**63) + 
            L0x200198c8_f * (x**64) + L0x200198ca_f * (x**65) + 
            L0x200198cc_f * (x**66) + L0x200198ce_f * (x**67) + 
            L0x200198d0_f * (x**68) + L0x200198d2_f * (x**69) + 
            L0x200198d4_f * (x**70) + L0x200198d6_f * (x**71) + 
            L0x200198d8_f * (x**72) + L0x200198da_f * (x**73) + 
            L0x200198dc_f * (x**74) + L0x200198de_f * (x**75) + 
            L0x200198e0_f * (x**76) + L0x200198e2_f * (x**77) + 
            L0x200198e4_f * (x**78) + L0x200198e6_f * (x**79) + 
            L0x200198e8_f * (x**80) + L0x200198ea_f * (x**81) + 
            L0x200198ec_f * (x**82) + L0x200198ee_f * (x**83) + 
            L0x200198f0_f * (x**84) + L0x200198f2_f * (x**85) + 
            L0x200198f4_f * (x**86) + L0x200198f6_f * (x**87) + 
            L0x200198f8_f * (x**88) + L0x200198fa_f * (x**89) + 
            L0x200198fc_f * (x**90) + L0x200198fe_f * (x**91) + 
            L0x20019900_f * (x**92) + L0x20019902_f * (x**93) + 
            L0x20019904_f * (x**94) + L0x20019906_f * (x**95) + 
            L0x20019908_f * (x**96) + L0x2001990a_f * (x**97) + 
            L0x2001990c_f * (x**98) + L0x2001990e_f * (x**99) + 
            L0x20019910_f * (x**100) + L0x20019912_f * (x**101) + 
            L0x20019914_f * (x**102) + L0x20019916_f * (x**103) + 
            L0x20019918_f * (x**104) + L0x2001991a_f * (x**105) + 
            L0x2001991c_f * (x**106) + L0x2001991e_f * (x**107) + 
            L0x20019920_f * (x**108) + L0x20019922_f * (x**109) + 
            L0x20019924_f * (x**110) + L0x20019926_f * (x**111) + 
            L0x20019928_f * (x**112) + L0x2001992a_f * (x**113) + 
            L0x2001992c_f * (x**114) + L0x2001992e_f * (x**115) + 
            L0x20019930_f * (x**116) + L0x20019932_f * (x**117) + 
            L0x20019934_f * (x**118) + L0x20019936_f * (x**119) + 
            L0x20019938_f * (x**120) + L0x2001993a_f * (x**121) + 
            L0x2001993c_f * (x**122) + L0x2001993e_f * (x**123) + 
            L0x20019940_f * (x**124) + L0x20019942_f * (x**125) + 
            L0x20019944_f * (x**126) + L0x20019946_f * (x**127) + 
            L0x20019948_f * (x**128) + L0x2001994a_f * (x**129) + 
            L0x2001994c_f * (x**130) + L0x2001994e_f * (x**131) + 
            L0x20019950_f * (x**132) + L0x20019952_f * (x**133) + 
            L0x20019954_f * (x**134) + L0x20019956_f * (x**135) + 
            L0x20019958_f * (x**136) + L0x2001995a_f * (x**137) + 
            L0x2001995c_f * (x**138) + L0x2001995e_f * (x**139) + 
            L0x20019960_f * (x**140) + L0x20019962_f * (x**141) + 
            L0x20019964_f * (x**142) + L0x20019966_f * (x**143) + 
            L0x20019968_f * (x**144) + L0x2001996a_f * (x**145) + 
            L0x2001996c_f * (x**146) + L0x2001996e_f * (x**147) + 
            L0x20019970_f * (x**148) + L0x20019972_f * (x**149) + 
            L0x20019974_f * (x**150) + L0x20019976_f * (x**151) + 
            L0x20019978_f * (x**152) + L0x2001997a_f * (x**153) + 
            L0x2001997c_f * (x**154) + L0x2001997e_f * (x**155) + 
            L0x20019980_f * (x**156) + L0x20019982_f * (x**157) + 
            L0x20019984_f * (x**158) + L0x20019986_f * (x**159) + 
            L0x20019988_f * (x**160) + L0x2001998a_f * (x**161) + 
            L0x2001998c_f * (x**162) + L0x2001998e_f * (x**163) + 
            L0x20019990_f * (x**164) + L0x20019992_f * (x**165) + 
            L0x20019994_f * (x**166) + L0x20019996_f * (x**167) + 
            L0x20019998_f * (x**168) + L0x2001999a_f * (x**169) + 
            L0x2001999c_f * (x**170) + L0x2001999e_f * (x**171) + 
            L0x200199a0_f * (x**172) + L0x200199a2_f * (x**173) + 
            L0x200199a4_f * (x**174) + L0x200199a6_f * (x**175) + 
            L0x200199a8_f * (x**176) + L0x200199aa_f * (x**177) + 
            L0x200199ac_f * (x**178) + L0x200199ae_f * (x**179) + 
            L0x200199b0_f * (x**180) + L0x200199b2_f * (x**181) + 
            L0x200199b4_f * (x**182) + L0x200199b6_f * (x**183) + 
            L0x200199b8_f * (x**184) + L0x200199ba_f * (x**185) + 
            L0x200199bc_f * (x**186) + L0x200199be_f * (x**187) + 
            L0x200199c0_f * (x**188) + L0x200199c2_f * (x**189) + 
            L0x200199c4_f * (x**190) + L0x200199c6_f * (x**191) + 
            L0x200199c8_f * (x**192) + L0x200199ca_f * (x**193) + 
            L0x200199cc_f * (x**194) + L0x200199ce_f * (x**195) + 
            L0x200199d0_f * (x**196) + L0x200199d2_f * (x**197) + 
            L0x200199d4_f * (x**198) + L0x200199d6_f * (x**199) + 
            L0x200199d8_f * (x**200) + L0x200199da_f * (x**201) + 
            L0x200199dc_f * (x**202) + L0x200199de_f * (x**203) + 
            L0x200199e0_f * (x**204) + L0x200199e2_f * (x**205) + 
            L0x200199e4_f * (x**206) + L0x200199e6_f * (x**207) + 
            L0x200199e8_f * (x**208) + L0x200199ea_f * (x**209) + 
            L0x200199ec_f * (x**210) + L0x200199ee_f * (x**211) + 
            L0x200199f0_f * (x**212) + L0x200199f2_f * (x**213) + 
            L0x200199f4_f * (x**214) + L0x200199f6_f * (x**215) + 
            L0x200199f8_f * (x**216) + L0x200199fa_f * (x**217) + 
            L0x200199fc_f * (x**218) + L0x200199fe_f * (x**219) + 
            L0x20019a00_f * (x**220) + L0x20019a02_f * (x**221) + 
            L0x20019a04_f * (x**222) + L0x20019a06_f * (x**223) + 
            L0x20019a08_f * (x**224) + L0x20019a0a_f * (x**225) + 
            L0x20019a0c_f * (x**226) + L0x20019a0e_f * (x**227) + 
            L0x20019a10_f * (x**228) + L0x20019a12_f * (x**229) + 
            L0x20019a14_f * (x**230) + L0x20019a16_f * (x**231) + 
            L0x20019a18_f * (x**232) + L0x20019a1a_f * (x**233) + 
            L0x20019a1c_f * (x**234) + L0x20019a1e_f * (x**235) + 
            L0x20019a20_f * (x**236) + L0x20019a22_f * (x**237) + 
            L0x20019a24_f * (x**238) + L0x20019a26_f * (x**239) + 
            L0x20019a28_f * (x**240) + L0x20019a2a_f * (x**241) + 
            L0x20019a2c_f * (x**242) + L0x20019a2e_f * (x**243) + 
            L0x20019a30_f * (x**244) + L0x20019a32_f * (x**245) + 
            L0x20019a34_f * (x**246) + L0x20019a36_f * (x**247) + 
            L0x20019a38_f * (x**248) + L0x20019a3a_f * (x**249) + 
            L0x20019a3c_f * (x**250) + L0x20019a3e_f * (x**251) + 
            L0x20019a40_f * (x**252) + L0x20019a42_f * (x**253) + 
            L0x20019a44_f * (x**254) + L0x20019a46_f * (x**255)
          )
          [25570049, x**4 - 9510986],
    (* inp_poly_7 *)
    eqmod (2**32) * (inp_poly_7 * inp_poly_7)
          (
            L0x20019848_f * (x**0) + L0x2001984a_f * (x**1) + 
            L0x2001984c_f * (x**2) + L0x2001984e_f * (x**3) + 
            L0x20019850_f * (x**4) + L0x20019852_f * (x**5) + 
            L0x20019854_f * (x**6) + L0x20019856_f * (x**7) + 
            L0x20019858_f * (x**8) + L0x2001985a_f * (x**9) + 
            L0x2001985c_f * (x**10) + L0x2001985e_f * (x**11) + 
            L0x20019860_f * (x**12) + L0x20019862_f * (x**13) + 
            L0x20019864_f * (x**14) + L0x20019866_f * (x**15) + 
            L0x20019868_f * (x**16) + L0x2001986a_f * (x**17) + 
            L0x2001986c_f * (x**18) + L0x2001986e_f * (x**19) + 
            L0x20019870_f * (x**20) + L0x20019872_f * (x**21) + 
            L0x20019874_f * (x**22) + L0x20019876_f * (x**23) + 
            L0x20019878_f * (x**24) + L0x2001987a_f * (x**25) + 
            L0x2001987c_f * (x**26) + L0x2001987e_f * (x**27) + 
            L0x20019880_f * (x**28) + L0x20019882_f * (x**29) + 
            L0x20019884_f * (x**30) + L0x20019886_f * (x**31) + 
            L0x20019888_f * (x**32) + L0x2001988a_f * (x**33) + 
            L0x2001988c_f * (x**34) + L0x2001988e_f * (x**35) + 
            L0x20019890_f * (x**36) + L0x20019892_f * (x**37) + 
            L0x20019894_f * (x**38) + L0x20019896_f * (x**39) + 
            L0x20019898_f * (x**40) + L0x2001989a_f * (x**41) + 
            L0x2001989c_f * (x**42) + L0x2001989e_f * (x**43) + 
            L0x200198a0_f * (x**44) + L0x200198a2_f * (x**45) + 
            L0x200198a4_f * (x**46) + L0x200198a6_f * (x**47) + 
            L0x200198a8_f * (x**48) + L0x200198aa_f * (x**49) + 
            L0x200198ac_f * (x**50) + L0x200198ae_f * (x**51) + 
            L0x200198b0_f * (x**52) + L0x200198b2_f * (x**53) + 
            L0x200198b4_f * (x**54) + L0x200198b6_f * (x**55) + 
            L0x200198b8_f * (x**56) + L0x200198ba_f * (x**57) + 
            L0x200198bc_f * (x**58) + L0x200198be_f * (x**59) + 
            L0x200198c0_f * (x**60) + L0x200198c2_f * (x**61) + 
            L0x200198c4_f * (x**62) + L0x200198c6_f * (x**63) + 
            L0x200198c8_f * (x**64) + L0x200198ca_f * (x**65) + 
            L0x200198cc_f * (x**66) + L0x200198ce_f * (x**67) + 
            L0x200198d0_f * (x**68) + L0x200198d2_f * (x**69) + 
            L0x200198d4_f * (x**70) + L0x200198d6_f * (x**71) + 
            L0x200198d8_f * (x**72) + L0x200198da_f * (x**73) + 
            L0x200198dc_f * (x**74) + L0x200198de_f * (x**75) + 
            L0x200198e0_f * (x**76) + L0x200198e2_f * (x**77) + 
            L0x200198e4_f * (x**78) + L0x200198e6_f * (x**79) + 
            L0x200198e8_f * (x**80) + L0x200198ea_f * (x**81) + 
            L0x200198ec_f * (x**82) + L0x200198ee_f * (x**83) + 
            L0x200198f0_f * (x**84) + L0x200198f2_f * (x**85) + 
            L0x200198f4_f * (x**86) + L0x200198f6_f * (x**87) + 
            L0x200198f8_f * (x**88) + L0x200198fa_f * (x**89) + 
            L0x200198fc_f * (x**90) + L0x200198fe_f * (x**91) + 
            L0x20019900_f * (x**92) + L0x20019902_f * (x**93) + 
            L0x20019904_f * (x**94) + L0x20019906_f * (x**95) + 
            L0x20019908_f * (x**96) + L0x2001990a_f * (x**97) + 
            L0x2001990c_f * (x**98) + L0x2001990e_f * (x**99) + 
            L0x20019910_f * (x**100) + L0x20019912_f * (x**101) + 
            L0x20019914_f * (x**102) + L0x20019916_f * (x**103) + 
            L0x20019918_f * (x**104) + L0x2001991a_f * (x**105) + 
            L0x2001991c_f * (x**106) + L0x2001991e_f * (x**107) + 
            L0x20019920_f * (x**108) + L0x20019922_f * (x**109) + 
            L0x20019924_f * (x**110) + L0x20019926_f * (x**111) + 
            L0x20019928_f * (x**112) + L0x2001992a_f * (x**113) + 
            L0x2001992c_f * (x**114) + L0x2001992e_f * (x**115) + 
            L0x20019930_f * (x**116) + L0x20019932_f * (x**117) + 
            L0x20019934_f * (x**118) + L0x20019936_f * (x**119) + 
            L0x20019938_f * (x**120) + L0x2001993a_f * (x**121) + 
            L0x2001993c_f * (x**122) + L0x2001993e_f * (x**123) + 
            L0x20019940_f * (x**124) + L0x20019942_f * (x**125) + 
            L0x20019944_f * (x**126) + L0x20019946_f * (x**127) + 
            L0x20019948_f * (x**128) + L0x2001994a_f * (x**129) + 
            L0x2001994c_f * (x**130) + L0x2001994e_f * (x**131) + 
            L0x20019950_f * (x**132) + L0x20019952_f * (x**133) + 
            L0x20019954_f * (x**134) + L0x20019956_f * (x**135) + 
            L0x20019958_f * (x**136) + L0x2001995a_f * (x**137) + 
            L0x2001995c_f * (x**138) + L0x2001995e_f * (x**139) + 
            L0x20019960_f * (x**140) + L0x20019962_f * (x**141) + 
            L0x20019964_f * (x**142) + L0x20019966_f * (x**143) + 
            L0x20019968_f * (x**144) + L0x2001996a_f * (x**145) + 
            L0x2001996c_f * (x**146) + L0x2001996e_f * (x**147) + 
            L0x20019970_f * (x**148) + L0x20019972_f * (x**149) + 
            L0x20019974_f * (x**150) + L0x20019976_f * (x**151) + 
            L0x20019978_f * (x**152) + L0x2001997a_f * (x**153) + 
            L0x2001997c_f * (x**154) + L0x2001997e_f * (x**155) + 
            L0x20019980_f * (x**156) + L0x20019982_f * (x**157) + 
            L0x20019984_f * (x**158) + L0x20019986_f * (x**159) + 
            L0x20019988_f * (x**160) + L0x2001998a_f * (x**161) + 
            L0x2001998c_f * (x**162) + L0x2001998e_f * (x**163) + 
            L0x20019990_f * (x**164) + L0x20019992_f * (x**165) + 
            L0x20019994_f * (x**166) + L0x20019996_f * (x**167) + 
            L0x20019998_f * (x**168) + L0x2001999a_f * (x**169) + 
            L0x2001999c_f * (x**170) + L0x2001999e_f * (x**171) + 
            L0x200199a0_f * (x**172) + L0x200199a2_f * (x**173) + 
            L0x200199a4_f * (x**174) + L0x200199a6_f * (x**175) + 
            L0x200199a8_f * (x**176) + L0x200199aa_f * (x**177) + 
            L0x200199ac_f * (x**178) + L0x200199ae_f * (x**179) + 
            L0x200199b0_f * (x**180) + L0x200199b2_f * (x**181) + 
            L0x200199b4_f * (x**182) + L0x200199b6_f * (x**183) + 
            L0x200199b8_f * (x**184) + L0x200199ba_f * (x**185) + 
            L0x200199bc_f * (x**186) + L0x200199be_f * (x**187) + 
            L0x200199c0_f * (x**188) + L0x200199c2_f * (x**189) + 
            L0x200199c4_f * (x**190) + L0x200199c6_f * (x**191) + 
            L0x200199c8_f * (x**192) + L0x200199ca_f * (x**193) + 
            L0x200199cc_f * (x**194) + L0x200199ce_f * (x**195) + 
            L0x200199d0_f * (x**196) + L0x200199d2_f * (x**197) + 
            L0x200199d4_f * (x**198) + L0x200199d6_f * (x**199) + 
            L0x200199d8_f * (x**200) + L0x200199da_f * (x**201) + 
            L0x200199dc_f * (x**202) + L0x200199de_f * (x**203) + 
            L0x200199e0_f * (x**204) + L0x200199e2_f * (x**205) + 
            L0x200199e4_f * (x**206) + L0x200199e6_f * (x**207) + 
            L0x200199e8_f * (x**208) + L0x200199ea_f * (x**209) + 
            L0x200199ec_f * (x**210) + L0x200199ee_f * (x**211) + 
            L0x200199f0_f * (x**212) + L0x200199f2_f * (x**213) + 
            L0x200199f4_f * (x**214) + L0x200199f6_f * (x**215) + 
            L0x200199f8_f * (x**216) + L0x200199fa_f * (x**217) + 
            L0x200199fc_f * (x**218) + L0x200199fe_f * (x**219) + 
            L0x20019a00_f * (x**220) + L0x20019a02_f * (x**221) + 
            L0x20019a04_f * (x**222) + L0x20019a06_f * (x**223) + 
            L0x20019a08_f * (x**224) + L0x20019a0a_f * (x**225) + 
            L0x20019a0c_f * (x**226) + L0x20019a0e_f * (x**227) + 
            L0x20019a10_f * (x**228) + L0x20019a12_f * (x**229) + 
            L0x20019a14_f * (x**230) + L0x20019a16_f * (x**231) + 
            L0x20019a18_f * (x**232) + L0x20019a1a_f * (x**233) + 
            L0x20019a1c_f * (x**234) + L0x20019a1e_f * (x**235) + 
            L0x20019a20_f * (x**236) + L0x20019a22_f * (x**237) + 
            L0x20019a24_f * (x**238) + L0x20019a26_f * (x**239) + 
            L0x20019a28_f * (x**240) + L0x20019a2a_f * (x**241) + 
            L0x20019a2c_f * (x**242) + L0x20019a2e_f * (x**243) + 
            L0x20019a30_f * (x**244) + L0x20019a32_f * (x**245) + 
            L0x20019a34_f * (x**246) + L0x20019a36_f * (x**247) + 
            L0x20019a38_f * (x**248) + L0x20019a3a_f * (x**249) + 
            L0x20019a3c_f * (x**250) + L0x20019a3e_f * (x**251) + 
            L0x20019a40_f * (x**252) + L0x20019a42_f * (x**253) + 
            L0x20019a44_f * (x**254) + L0x20019a46_f * (x**255)
          )
          [25570049, x**4 - 16059063]
  ] prove with [cuts [56]]
  &&
  true
;

cut (* 73 *)
  true && true;

(* slice 1 *)
assume (* instantiating y_0's *)
  and [
    y_0_08 = 1, y_0_09 = 1, y_0_10 = 1, y_0_11 = 1, 
    y_0_12 = 1, y_0_13 = 1, y_0_14 = 1, y_0_15 = 1
  ] && true;
cut (* 74 *)
  and [
    (* inp_poly_8 *)
    eqmod (2**32) * (inp_poly_8 * inp_poly_8)
          (
            L0x20019848_f * (x**0) + L0x2001984a_f * (x**1) + 
            L0x2001984c_f * (x**2) + L0x2001984e_f * (x**3) + 
            L0x20019850_f * (x**4) + L0x20019852_f * (x**5) + 
            L0x20019854_f * (x**6) + L0x20019856_f * (x**7) + 
            L0x20019858_f * (x**8) + L0x2001985a_f * (x**9) + 
            L0x2001985c_f * (x**10) + L0x2001985e_f * (x**11) + 
            L0x20019860_f * (x**12) + L0x20019862_f * (x**13) + 
            L0x20019864_f * (x**14) + L0x20019866_f * (x**15) + 
            L0x20019868_f * (x**16) + L0x2001986a_f * (x**17) + 
            L0x2001986c_f * (x**18) + L0x2001986e_f * (x**19) + 
            L0x20019870_f * (x**20) + L0x20019872_f * (x**21) + 
            L0x20019874_f * (x**22) + L0x20019876_f * (x**23) + 
            L0x20019878_f * (x**24) + L0x2001987a_f * (x**25) + 
            L0x2001987c_f * (x**26) + L0x2001987e_f * (x**27) + 
            L0x20019880_f * (x**28) + L0x20019882_f * (x**29) + 
            L0x20019884_f * (x**30) + L0x20019886_f * (x**31) + 
            L0x20019888_f * (x**32) + L0x2001988a_f * (x**33) + 
            L0x2001988c_f * (x**34) + L0x2001988e_f * (x**35) + 
            L0x20019890_f * (x**36) + L0x20019892_f * (x**37) + 
            L0x20019894_f * (x**38) + L0x20019896_f * (x**39) + 
            L0x20019898_f * (x**40) + L0x2001989a_f * (x**41) + 
            L0x2001989c_f * (x**42) + L0x2001989e_f * (x**43) + 
            L0x200198a0_f * (x**44) + L0x200198a2_f * (x**45) + 
            L0x200198a4_f * (x**46) + L0x200198a6_f * (x**47) + 
            L0x200198a8_f * (x**48) + L0x200198aa_f * (x**49) + 
            L0x200198ac_f * (x**50) + L0x200198ae_f * (x**51) + 
            L0x200198b0_f * (x**52) + L0x200198b2_f * (x**53) + 
            L0x200198b4_f * (x**54) + L0x200198b6_f * (x**55) + 
            L0x200198b8_f * (x**56) + L0x200198ba_f * (x**57) + 
            L0x200198bc_f * (x**58) + L0x200198be_f * (x**59) + 
            L0x200198c0_f * (x**60) + L0x200198c2_f * (x**61) + 
            L0x200198c4_f * (x**62) + L0x200198c6_f * (x**63) + 
            L0x200198c8_f * (x**64) + L0x200198ca_f * (x**65) + 
            L0x200198cc_f * (x**66) + L0x200198ce_f * (x**67) + 
            L0x200198d0_f * (x**68) + L0x200198d2_f * (x**69) + 
            L0x200198d4_f * (x**70) + L0x200198d6_f * (x**71) + 
            L0x200198d8_f * (x**72) + L0x200198da_f * (x**73) + 
            L0x200198dc_f * (x**74) + L0x200198de_f * (x**75) + 
            L0x200198e0_f * (x**76) + L0x200198e2_f * (x**77) + 
            L0x200198e4_f * (x**78) + L0x200198e6_f * (x**79) + 
            L0x200198e8_f * (x**80) + L0x200198ea_f * (x**81) + 
            L0x200198ec_f * (x**82) + L0x200198ee_f * (x**83) + 
            L0x200198f0_f * (x**84) + L0x200198f2_f * (x**85) + 
            L0x200198f4_f * (x**86) + L0x200198f6_f * (x**87) + 
            L0x200198f8_f * (x**88) + L0x200198fa_f * (x**89) + 
            L0x200198fc_f * (x**90) + L0x200198fe_f * (x**91) + 
            L0x20019900_f * (x**92) + L0x20019902_f * (x**93) + 
            L0x20019904_f * (x**94) + L0x20019906_f * (x**95) + 
            L0x20019908_f * (x**96) + L0x2001990a_f * (x**97) + 
            L0x2001990c_f * (x**98) + L0x2001990e_f * (x**99) + 
            L0x20019910_f * (x**100) + L0x20019912_f * (x**101) + 
            L0x20019914_f * (x**102) + L0x20019916_f * (x**103) + 
            L0x20019918_f * (x**104) + L0x2001991a_f * (x**105) + 
            L0x2001991c_f * (x**106) + L0x2001991e_f * (x**107) + 
            L0x20019920_f * (x**108) + L0x20019922_f * (x**109) + 
            L0x20019924_f * (x**110) + L0x20019926_f * (x**111) + 
            L0x20019928_f * (x**112) + L0x2001992a_f * (x**113) + 
            L0x2001992c_f * (x**114) + L0x2001992e_f * (x**115) + 
            L0x20019930_f * (x**116) + L0x20019932_f * (x**117) + 
            L0x20019934_f * (x**118) + L0x20019936_f * (x**119) + 
            L0x20019938_f * (x**120) + L0x2001993a_f * (x**121) + 
            L0x2001993c_f * (x**122) + L0x2001993e_f * (x**123) + 
            L0x20019940_f * (x**124) + L0x20019942_f * (x**125) + 
            L0x20019944_f * (x**126) + L0x20019946_f * (x**127) + 
            L0x20019948_f * (x**128) + L0x2001994a_f * (x**129) + 
            L0x2001994c_f * (x**130) + L0x2001994e_f * (x**131) + 
            L0x20019950_f * (x**132) + L0x20019952_f * (x**133) + 
            L0x20019954_f * (x**134) + L0x20019956_f * (x**135) + 
            L0x20019958_f * (x**136) + L0x2001995a_f * (x**137) + 
            L0x2001995c_f * (x**138) + L0x2001995e_f * (x**139) + 
            L0x20019960_f * (x**140) + L0x20019962_f * (x**141) + 
            L0x20019964_f * (x**142) + L0x20019966_f * (x**143) + 
            L0x20019968_f * (x**144) + L0x2001996a_f * (x**145) + 
            L0x2001996c_f * (x**146) + L0x2001996e_f * (x**147) + 
            L0x20019970_f * (x**148) + L0x20019972_f * (x**149) + 
            L0x20019974_f * (x**150) + L0x20019976_f * (x**151) + 
            L0x20019978_f * (x**152) + L0x2001997a_f * (x**153) + 
            L0x2001997c_f * (x**154) + L0x2001997e_f * (x**155) + 
            L0x20019980_f * (x**156) + L0x20019982_f * (x**157) + 
            L0x20019984_f * (x**158) + L0x20019986_f * (x**159) + 
            L0x20019988_f * (x**160) + L0x2001998a_f * (x**161) + 
            L0x2001998c_f * (x**162) + L0x2001998e_f * (x**163) + 
            L0x20019990_f * (x**164) + L0x20019992_f * (x**165) + 
            L0x20019994_f * (x**166) + L0x20019996_f * (x**167) + 
            L0x20019998_f * (x**168) + L0x2001999a_f * (x**169) + 
            L0x2001999c_f * (x**170) + L0x2001999e_f * (x**171) + 
            L0x200199a0_f * (x**172) + L0x200199a2_f * (x**173) + 
            L0x200199a4_f * (x**174) + L0x200199a6_f * (x**175) + 
            L0x200199a8_f * (x**176) + L0x200199aa_f * (x**177) + 
            L0x200199ac_f * (x**178) + L0x200199ae_f * (x**179) + 
            L0x200199b0_f * (x**180) + L0x200199b2_f * (x**181) + 
            L0x200199b4_f * (x**182) + L0x200199b6_f * (x**183) + 
            L0x200199b8_f * (x**184) + L0x200199ba_f * (x**185) + 
            L0x200199bc_f * (x**186) + L0x200199be_f * (x**187) + 
            L0x200199c0_f * (x**188) + L0x200199c2_f * (x**189) + 
            L0x200199c4_f * (x**190) + L0x200199c6_f * (x**191) + 
            L0x200199c8_f * (x**192) + L0x200199ca_f * (x**193) + 
            L0x200199cc_f * (x**194) + L0x200199ce_f * (x**195) + 
            L0x200199d0_f * (x**196) + L0x200199d2_f * (x**197) + 
            L0x200199d4_f * (x**198) + L0x200199d6_f * (x**199) + 
            L0x200199d8_f * (x**200) + L0x200199da_f * (x**201) + 
            L0x200199dc_f * (x**202) + L0x200199de_f * (x**203) + 
            L0x200199e0_f * (x**204) + L0x200199e2_f * (x**205) + 
            L0x200199e4_f * (x**206) + L0x200199e6_f * (x**207) + 
            L0x200199e8_f * (x**208) + L0x200199ea_f * (x**209) + 
            L0x200199ec_f * (x**210) + L0x200199ee_f * (x**211) + 
            L0x200199f0_f * (x**212) + L0x200199f2_f * (x**213) + 
            L0x200199f4_f * (x**214) + L0x200199f6_f * (x**215) + 
            L0x200199f8_f * (x**216) + L0x200199fa_f * (x**217) + 
            L0x200199fc_f * (x**218) + L0x200199fe_f * (x**219) + 
            L0x20019a00_f * (x**220) + L0x20019a02_f * (x**221) + 
            L0x20019a04_f * (x**222) + L0x20019a06_f * (x**223) + 
            L0x20019a08_f * (x**224) + L0x20019a0a_f * (x**225) + 
            L0x20019a0c_f * (x**226) + L0x20019a0e_f * (x**227) + 
            L0x20019a10_f * (x**228) + L0x20019a12_f * (x**229) + 
            L0x20019a14_f * (x**230) + L0x20019a16_f * (x**231) + 
            L0x20019a18_f * (x**232) + L0x20019a1a_f * (x**233) + 
            L0x20019a1c_f * (x**234) + L0x20019a1e_f * (x**235) + 
            L0x20019a20_f * (x**236) + L0x20019a22_f * (x**237) + 
            L0x20019a24_f * (x**238) + L0x20019a26_f * (x**239) + 
            L0x20019a28_f * (x**240) + L0x20019a2a_f * (x**241) + 
            L0x20019a2c_f * (x**242) + L0x20019a2e_f * (x**243) + 
            L0x20019a30_f * (x**244) + L0x20019a32_f * (x**245) + 
            L0x20019a34_f * (x**246) + L0x20019a36_f * (x**247) + 
            L0x20019a38_f * (x**248) + L0x20019a3a_f * (x**249) + 
            L0x20019a3c_f * (x**250) + L0x20019a3e_f * (x**251) + 
            L0x20019a40_f * (x**252) + L0x20019a42_f * (x**253) + 
            L0x20019a44_f * (x**254) + L0x20019a46_f * (x**255)
          )
          [25570049, x**4 - 24972806],
    (* inp_poly_9 *)
    eqmod (2**32) * (inp_poly_9 * inp_poly_9)
          (
            L0x20019848_f * (x**0) + L0x2001984a_f * (x**1) + 
            L0x2001984c_f * (x**2) + L0x2001984e_f * (x**3) + 
            L0x20019850_f * (x**4) + L0x20019852_f * (x**5) + 
            L0x20019854_f * (x**6) + L0x20019856_f * (x**7) + 
            L0x20019858_f * (x**8) + L0x2001985a_f * (x**9) + 
            L0x2001985c_f * (x**10) + L0x2001985e_f * (x**11) + 
            L0x20019860_f * (x**12) + L0x20019862_f * (x**13) + 
            L0x20019864_f * (x**14) + L0x20019866_f * (x**15) + 
            L0x20019868_f * (x**16) + L0x2001986a_f * (x**17) + 
            L0x2001986c_f * (x**18) + L0x2001986e_f * (x**19) + 
            L0x20019870_f * (x**20) + L0x20019872_f * (x**21) + 
            L0x20019874_f * (x**22) + L0x20019876_f * (x**23) + 
            L0x20019878_f * (x**24) + L0x2001987a_f * (x**25) + 
            L0x2001987c_f * (x**26) + L0x2001987e_f * (x**27) + 
            L0x20019880_f * (x**28) + L0x20019882_f * (x**29) + 
            L0x20019884_f * (x**30) + L0x20019886_f * (x**31) + 
            L0x20019888_f * (x**32) + L0x2001988a_f * (x**33) + 
            L0x2001988c_f * (x**34) + L0x2001988e_f * (x**35) + 
            L0x20019890_f * (x**36) + L0x20019892_f * (x**37) + 
            L0x20019894_f * (x**38) + L0x20019896_f * (x**39) + 
            L0x20019898_f * (x**40) + L0x2001989a_f * (x**41) + 
            L0x2001989c_f * (x**42) + L0x2001989e_f * (x**43) + 
            L0x200198a0_f * (x**44) + L0x200198a2_f * (x**45) + 
            L0x200198a4_f * (x**46) + L0x200198a6_f * (x**47) + 
            L0x200198a8_f * (x**48) + L0x200198aa_f * (x**49) + 
            L0x200198ac_f * (x**50) + L0x200198ae_f * (x**51) + 
            L0x200198b0_f * (x**52) + L0x200198b2_f * (x**53) + 
            L0x200198b4_f * (x**54) + L0x200198b6_f * (x**55) + 
            L0x200198b8_f * (x**56) + L0x200198ba_f * (x**57) + 
            L0x200198bc_f * (x**58) + L0x200198be_f * (x**59) + 
            L0x200198c0_f * (x**60) + L0x200198c2_f * (x**61) + 
            L0x200198c4_f * (x**62) + L0x200198c6_f * (x**63) + 
            L0x200198c8_f * (x**64) + L0x200198ca_f * (x**65) + 
            L0x200198cc_f * (x**66) + L0x200198ce_f * (x**67) + 
            L0x200198d0_f * (x**68) + L0x200198d2_f * (x**69) + 
            L0x200198d4_f * (x**70) + L0x200198d6_f * (x**71) + 
            L0x200198d8_f * (x**72) + L0x200198da_f * (x**73) + 
            L0x200198dc_f * (x**74) + L0x200198de_f * (x**75) + 
            L0x200198e0_f * (x**76) + L0x200198e2_f * (x**77) + 
            L0x200198e4_f * (x**78) + L0x200198e6_f * (x**79) + 
            L0x200198e8_f * (x**80) + L0x200198ea_f * (x**81) + 
            L0x200198ec_f * (x**82) + L0x200198ee_f * (x**83) + 
            L0x200198f0_f * (x**84) + L0x200198f2_f * (x**85) + 
            L0x200198f4_f * (x**86) + L0x200198f6_f * (x**87) + 
            L0x200198f8_f * (x**88) + L0x200198fa_f * (x**89) + 
            L0x200198fc_f * (x**90) + L0x200198fe_f * (x**91) + 
            L0x20019900_f * (x**92) + L0x20019902_f * (x**93) + 
            L0x20019904_f * (x**94) + L0x20019906_f * (x**95) + 
            L0x20019908_f * (x**96) + L0x2001990a_f * (x**97) + 
            L0x2001990c_f * (x**98) + L0x2001990e_f * (x**99) + 
            L0x20019910_f * (x**100) + L0x20019912_f * (x**101) + 
            L0x20019914_f * (x**102) + L0x20019916_f * (x**103) + 
            L0x20019918_f * (x**104) + L0x2001991a_f * (x**105) + 
            L0x2001991c_f * (x**106) + L0x2001991e_f * (x**107) + 
            L0x20019920_f * (x**108) + L0x20019922_f * (x**109) + 
            L0x20019924_f * (x**110) + L0x20019926_f * (x**111) + 
            L0x20019928_f * (x**112) + L0x2001992a_f * (x**113) + 
            L0x2001992c_f * (x**114) + L0x2001992e_f * (x**115) + 
            L0x20019930_f * (x**116) + L0x20019932_f * (x**117) + 
            L0x20019934_f * (x**118) + L0x20019936_f * (x**119) + 
            L0x20019938_f * (x**120) + L0x2001993a_f * (x**121) + 
            L0x2001993c_f * (x**122) + L0x2001993e_f * (x**123) + 
            L0x20019940_f * (x**124) + L0x20019942_f * (x**125) + 
            L0x20019944_f * (x**126) + L0x20019946_f * (x**127) + 
            L0x20019948_f * (x**128) + L0x2001994a_f * (x**129) + 
            L0x2001994c_f * (x**130) + L0x2001994e_f * (x**131) + 
            L0x20019950_f * (x**132) + L0x20019952_f * (x**133) + 
            L0x20019954_f * (x**134) + L0x20019956_f * (x**135) + 
            L0x20019958_f * (x**136) + L0x2001995a_f * (x**137) + 
            L0x2001995c_f * (x**138) + L0x2001995e_f * (x**139) + 
            L0x20019960_f * (x**140) + L0x20019962_f * (x**141) + 
            L0x20019964_f * (x**142) + L0x20019966_f * (x**143) + 
            L0x20019968_f * (x**144) + L0x2001996a_f * (x**145) + 
            L0x2001996c_f * (x**146) + L0x2001996e_f * (x**147) + 
            L0x20019970_f * (x**148) + L0x20019972_f * (x**149) + 
            L0x20019974_f * (x**150) + L0x20019976_f * (x**151) + 
            L0x20019978_f * (x**152) + L0x2001997a_f * (x**153) + 
            L0x2001997c_f * (x**154) + L0x2001997e_f * (x**155) + 
            L0x20019980_f * (x**156) + L0x20019982_f * (x**157) + 
            L0x20019984_f * (x**158) + L0x20019986_f * (x**159) + 
            L0x20019988_f * (x**160) + L0x2001998a_f * (x**161) + 
            L0x2001998c_f * (x**162) + L0x2001998e_f * (x**163) + 
            L0x20019990_f * (x**164) + L0x20019992_f * (x**165) + 
            L0x20019994_f * (x**166) + L0x20019996_f * (x**167) + 
            L0x20019998_f * (x**168) + L0x2001999a_f * (x**169) + 
            L0x2001999c_f * (x**170) + L0x2001999e_f * (x**171) + 
            L0x200199a0_f * (x**172) + L0x200199a2_f * (x**173) + 
            L0x200199a4_f * (x**174) + L0x200199a6_f * (x**175) + 
            L0x200199a8_f * (x**176) + L0x200199aa_f * (x**177) + 
            L0x200199ac_f * (x**178) + L0x200199ae_f * (x**179) + 
            L0x200199b0_f * (x**180) + L0x200199b2_f * (x**181) + 
            L0x200199b4_f * (x**182) + L0x200199b6_f * (x**183) + 
            L0x200199b8_f * (x**184) + L0x200199ba_f * (x**185) + 
            L0x200199bc_f * (x**186) + L0x200199be_f * (x**187) + 
            L0x200199c0_f * (x**188) + L0x200199c2_f * (x**189) + 
            L0x200199c4_f * (x**190) + L0x200199c6_f * (x**191) + 
            L0x200199c8_f * (x**192) + L0x200199ca_f * (x**193) + 
            L0x200199cc_f * (x**194) + L0x200199ce_f * (x**195) + 
            L0x200199d0_f * (x**196) + L0x200199d2_f * (x**197) + 
            L0x200199d4_f * (x**198) + L0x200199d6_f * (x**199) + 
            L0x200199d8_f * (x**200) + L0x200199da_f * (x**201) + 
            L0x200199dc_f * (x**202) + L0x200199de_f * (x**203) + 
            L0x200199e0_f * (x**204) + L0x200199e2_f * (x**205) + 
            L0x200199e4_f * (x**206) + L0x200199e6_f * (x**207) + 
            L0x200199e8_f * (x**208) + L0x200199ea_f * (x**209) + 
            L0x200199ec_f * (x**210) + L0x200199ee_f * (x**211) + 
            L0x200199f0_f * (x**212) + L0x200199f2_f * (x**213) + 
            L0x200199f4_f * (x**214) + L0x200199f6_f * (x**215) + 
            L0x200199f8_f * (x**216) + L0x200199fa_f * (x**217) + 
            L0x200199fc_f * (x**218) + L0x200199fe_f * (x**219) + 
            L0x20019a00_f * (x**220) + L0x20019a02_f * (x**221) + 
            L0x20019a04_f * (x**222) + L0x20019a06_f * (x**223) + 
            L0x20019a08_f * (x**224) + L0x20019a0a_f * (x**225) + 
            L0x20019a0c_f * (x**226) + L0x20019a0e_f * (x**227) + 
            L0x20019a10_f * (x**228) + L0x20019a12_f * (x**229) + 
            L0x20019a14_f * (x**230) + L0x20019a16_f * (x**231) + 
            L0x20019a18_f * (x**232) + L0x20019a1a_f * (x**233) + 
            L0x20019a1c_f * (x**234) + L0x20019a1e_f * (x**235) + 
            L0x20019a20_f * (x**236) + L0x20019a22_f * (x**237) + 
            L0x20019a24_f * (x**238) + L0x20019a26_f * (x**239) + 
            L0x20019a28_f * (x**240) + L0x20019a2a_f * (x**241) + 
            L0x20019a2c_f * (x**242) + L0x20019a2e_f * (x**243) + 
            L0x20019a30_f * (x**244) + L0x20019a32_f * (x**245) + 
            L0x20019a34_f * (x**246) + L0x20019a36_f * (x**247) + 
            L0x20019a38_f * (x**248) + L0x20019a3a_f * (x**249) + 
            L0x20019a3c_f * (x**250) + L0x20019a3e_f * (x**251) + 
            L0x20019a40_f * (x**252) + L0x20019a42_f * (x**253) + 
            L0x20019a44_f * (x**254) + L0x20019a46_f * (x**255)
          )
          [25570049, x**4 - 597243],
    (* inp_poly_10 *)
    eqmod (2**32) * (inp_poly_10 * inp_poly_10)
          (
            L0x20019848_f * (x**0) + L0x2001984a_f * (x**1) + 
            L0x2001984c_f * (x**2) + L0x2001984e_f * (x**3) + 
            L0x20019850_f * (x**4) + L0x20019852_f * (x**5) + 
            L0x20019854_f * (x**6) + L0x20019856_f * (x**7) + 
            L0x20019858_f * (x**8) + L0x2001985a_f * (x**9) + 
            L0x2001985c_f * (x**10) + L0x2001985e_f * (x**11) + 
            L0x20019860_f * (x**12) + L0x20019862_f * (x**13) + 
            L0x20019864_f * (x**14) + L0x20019866_f * (x**15) + 
            L0x20019868_f * (x**16) + L0x2001986a_f * (x**17) + 
            L0x2001986c_f * (x**18) + L0x2001986e_f * (x**19) + 
            L0x20019870_f * (x**20) + L0x20019872_f * (x**21) + 
            L0x20019874_f * (x**22) + L0x20019876_f * (x**23) + 
            L0x20019878_f * (x**24) + L0x2001987a_f * (x**25) + 
            L0x2001987c_f * (x**26) + L0x2001987e_f * (x**27) + 
            L0x20019880_f * (x**28) + L0x20019882_f * (x**29) + 
            L0x20019884_f * (x**30) + L0x20019886_f * (x**31) + 
            L0x20019888_f * (x**32) + L0x2001988a_f * (x**33) + 
            L0x2001988c_f * (x**34) + L0x2001988e_f * (x**35) + 
            L0x20019890_f * (x**36) + L0x20019892_f * (x**37) + 
            L0x20019894_f * (x**38) + L0x20019896_f * (x**39) + 
            L0x20019898_f * (x**40) + L0x2001989a_f * (x**41) + 
            L0x2001989c_f * (x**42) + L0x2001989e_f * (x**43) + 
            L0x200198a0_f * (x**44) + L0x200198a2_f * (x**45) + 
            L0x200198a4_f * (x**46) + L0x200198a6_f * (x**47) + 
            L0x200198a8_f * (x**48) + L0x200198aa_f * (x**49) + 
            L0x200198ac_f * (x**50) + L0x200198ae_f * (x**51) + 
            L0x200198b0_f * (x**52) + L0x200198b2_f * (x**53) + 
            L0x200198b4_f * (x**54) + L0x200198b6_f * (x**55) + 
            L0x200198b8_f * (x**56) + L0x200198ba_f * (x**57) + 
            L0x200198bc_f * (x**58) + L0x200198be_f * (x**59) + 
            L0x200198c0_f * (x**60) + L0x200198c2_f * (x**61) + 
            L0x200198c4_f * (x**62) + L0x200198c6_f * (x**63) + 
            L0x200198c8_f * (x**64) + L0x200198ca_f * (x**65) + 
            L0x200198cc_f * (x**66) + L0x200198ce_f * (x**67) + 
            L0x200198d0_f * (x**68) + L0x200198d2_f * (x**69) + 
            L0x200198d4_f * (x**70) + L0x200198d6_f * (x**71) + 
            L0x200198d8_f * (x**72) + L0x200198da_f * (x**73) + 
            L0x200198dc_f * (x**74) + L0x200198de_f * (x**75) + 
            L0x200198e0_f * (x**76) + L0x200198e2_f * (x**77) + 
            L0x200198e4_f * (x**78) + L0x200198e6_f * (x**79) + 
            L0x200198e8_f * (x**80) + L0x200198ea_f * (x**81) + 
            L0x200198ec_f * (x**82) + L0x200198ee_f * (x**83) + 
            L0x200198f0_f * (x**84) + L0x200198f2_f * (x**85) + 
            L0x200198f4_f * (x**86) + L0x200198f6_f * (x**87) + 
            L0x200198f8_f * (x**88) + L0x200198fa_f * (x**89) + 
            L0x200198fc_f * (x**90) + L0x200198fe_f * (x**91) + 
            L0x20019900_f * (x**92) + L0x20019902_f * (x**93) + 
            L0x20019904_f * (x**94) + L0x20019906_f * (x**95) + 
            L0x20019908_f * (x**96) + L0x2001990a_f * (x**97) + 
            L0x2001990c_f * (x**98) + L0x2001990e_f * (x**99) + 
            L0x20019910_f * (x**100) + L0x20019912_f * (x**101) + 
            L0x20019914_f * (x**102) + L0x20019916_f * (x**103) + 
            L0x20019918_f * (x**104) + L0x2001991a_f * (x**105) + 
            L0x2001991c_f * (x**106) + L0x2001991e_f * (x**107) + 
            L0x20019920_f * (x**108) + L0x20019922_f * (x**109) + 
            L0x20019924_f * (x**110) + L0x20019926_f * (x**111) + 
            L0x20019928_f * (x**112) + L0x2001992a_f * (x**113) + 
            L0x2001992c_f * (x**114) + L0x2001992e_f * (x**115) + 
            L0x20019930_f * (x**116) + L0x20019932_f * (x**117) + 
            L0x20019934_f * (x**118) + L0x20019936_f * (x**119) + 
            L0x20019938_f * (x**120) + L0x2001993a_f * (x**121) + 
            L0x2001993c_f * (x**122) + L0x2001993e_f * (x**123) + 
            L0x20019940_f * (x**124) + L0x20019942_f * (x**125) + 
            L0x20019944_f * (x**126) + L0x20019946_f * (x**127) + 
            L0x20019948_f * (x**128) + L0x2001994a_f * (x**129) + 
            L0x2001994c_f * (x**130) + L0x2001994e_f * (x**131) + 
            L0x20019950_f * (x**132) + L0x20019952_f * (x**133) + 
            L0x20019954_f * (x**134) + L0x20019956_f * (x**135) + 
            L0x20019958_f * (x**136) + L0x2001995a_f * (x**137) + 
            L0x2001995c_f * (x**138) + L0x2001995e_f * (x**139) + 
            L0x20019960_f * (x**140) + L0x20019962_f * (x**141) + 
            L0x20019964_f * (x**142) + L0x20019966_f * (x**143) + 
            L0x20019968_f * (x**144) + L0x2001996a_f * (x**145) + 
            L0x2001996c_f * (x**146) + L0x2001996e_f * (x**147) + 
            L0x20019970_f * (x**148) + L0x20019972_f * (x**149) + 
            L0x20019974_f * (x**150) + L0x20019976_f * (x**151) + 
            L0x20019978_f * (x**152) + L0x2001997a_f * (x**153) + 
            L0x2001997c_f * (x**154) + L0x2001997e_f * (x**155) + 
            L0x20019980_f * (x**156) + L0x20019982_f * (x**157) + 
            L0x20019984_f * (x**158) + L0x20019986_f * (x**159) + 
            L0x20019988_f * (x**160) + L0x2001998a_f * (x**161) + 
            L0x2001998c_f * (x**162) + L0x2001998e_f * (x**163) + 
            L0x20019990_f * (x**164) + L0x20019992_f * (x**165) + 
            L0x20019994_f * (x**166) + L0x20019996_f * (x**167) + 
            L0x20019998_f * (x**168) + L0x2001999a_f * (x**169) + 
            L0x2001999c_f * (x**170) + L0x2001999e_f * (x**171) + 
            L0x200199a0_f * (x**172) + L0x200199a2_f * (x**173) + 
            L0x200199a4_f * (x**174) + L0x200199a6_f * (x**175) + 
            L0x200199a8_f * (x**176) + L0x200199aa_f * (x**177) + 
            L0x200199ac_f * (x**178) + L0x200199ae_f * (x**179) + 
            L0x200199b0_f * (x**180) + L0x200199b2_f * (x**181) + 
            L0x200199b4_f * (x**182) + L0x200199b6_f * (x**183) + 
            L0x200199b8_f * (x**184) + L0x200199ba_f * (x**185) + 
            L0x200199bc_f * (x**186) + L0x200199be_f * (x**187) + 
            L0x200199c0_f * (x**188) + L0x200199c2_f * (x**189) + 
            L0x200199c4_f * (x**190) + L0x200199c6_f * (x**191) + 
            L0x200199c8_f * (x**192) + L0x200199ca_f * (x**193) + 
            L0x200199cc_f * (x**194) + L0x200199ce_f * (x**195) + 
            L0x200199d0_f * (x**196) + L0x200199d2_f * (x**197) + 
            L0x200199d4_f * (x**198) + L0x200199d6_f * (x**199) + 
            L0x200199d8_f * (x**200) + L0x200199da_f * (x**201) + 
            L0x200199dc_f * (x**202) + L0x200199de_f * (x**203) + 
            L0x200199e0_f * (x**204) + L0x200199e2_f * (x**205) + 
            L0x200199e4_f * (x**206) + L0x200199e6_f * (x**207) + 
            L0x200199e8_f * (x**208) + L0x200199ea_f * (x**209) + 
            L0x200199ec_f * (x**210) + L0x200199ee_f * (x**211) + 
            L0x200199f0_f * (x**212) + L0x200199f2_f * (x**213) + 
            L0x200199f4_f * (x**214) + L0x200199f6_f * (x**215) + 
            L0x200199f8_f * (x**216) + L0x200199fa_f * (x**217) + 
            L0x200199fc_f * (x**218) + L0x200199fe_f * (x**219) + 
            L0x20019a00_f * (x**220) + L0x20019a02_f * (x**221) + 
            L0x20019a04_f * (x**222) + L0x20019a06_f * (x**223) + 
            L0x20019a08_f * (x**224) + L0x20019a0a_f * (x**225) + 
            L0x20019a0c_f * (x**226) + L0x20019a0e_f * (x**227) + 
            L0x20019a10_f * (x**228) + L0x20019a12_f * (x**229) + 
            L0x20019a14_f * (x**230) + L0x20019a16_f * (x**231) + 
            L0x20019a18_f * (x**232) + L0x20019a1a_f * (x**233) + 
            L0x20019a1c_f * (x**234) + L0x20019a1e_f * (x**235) + 
            L0x20019a20_f * (x**236) + L0x20019a22_f * (x**237) + 
            L0x20019a24_f * (x**238) + L0x20019a26_f * (x**239) + 
            L0x20019a28_f * (x**240) + L0x20019a2a_f * (x**241) + 
            L0x20019a2c_f * (x**242) + L0x20019a2e_f * (x**243) + 
            L0x20019a30_f * (x**244) + L0x20019a32_f * (x**245) + 
            L0x20019a34_f * (x**246) + L0x20019a36_f * (x**247) + 
            L0x20019a38_f * (x**248) + L0x20019a3a_f * (x**249) + 
            L0x20019a3c_f * (x**250) + L0x20019a3e_f * (x**251) + 
            L0x20019a40_f * (x**252) + L0x20019a42_f * (x**253) + 
            L0x20019a44_f * (x**254) + L0x20019a46_f * (x**255)
          )
          [25570049, x**4 - 4410275],
    (* inp_poly_11 *)
    eqmod (2**32) * (inp_poly_11 * inp_poly_11)
          (
            L0x20019848_f * (x**0) + L0x2001984a_f * (x**1) + 
            L0x2001984c_f * (x**2) + L0x2001984e_f * (x**3) + 
            L0x20019850_f * (x**4) + L0x20019852_f * (x**5) + 
            L0x20019854_f * (x**6) + L0x20019856_f * (x**7) + 
            L0x20019858_f * (x**8) + L0x2001985a_f * (x**9) + 
            L0x2001985c_f * (x**10) + L0x2001985e_f * (x**11) + 
            L0x20019860_f * (x**12) + L0x20019862_f * (x**13) + 
            L0x20019864_f * (x**14) + L0x20019866_f * (x**15) + 
            L0x20019868_f * (x**16) + L0x2001986a_f * (x**17) + 
            L0x2001986c_f * (x**18) + L0x2001986e_f * (x**19) + 
            L0x20019870_f * (x**20) + L0x20019872_f * (x**21) + 
            L0x20019874_f * (x**22) + L0x20019876_f * (x**23) + 
            L0x20019878_f * (x**24) + L0x2001987a_f * (x**25) + 
            L0x2001987c_f * (x**26) + L0x2001987e_f * (x**27) + 
            L0x20019880_f * (x**28) + L0x20019882_f * (x**29) + 
            L0x20019884_f * (x**30) + L0x20019886_f * (x**31) + 
            L0x20019888_f * (x**32) + L0x2001988a_f * (x**33) + 
            L0x2001988c_f * (x**34) + L0x2001988e_f * (x**35) + 
            L0x20019890_f * (x**36) + L0x20019892_f * (x**37) + 
            L0x20019894_f * (x**38) + L0x20019896_f * (x**39) + 
            L0x20019898_f * (x**40) + L0x2001989a_f * (x**41) + 
            L0x2001989c_f * (x**42) + L0x2001989e_f * (x**43) + 
            L0x200198a0_f * (x**44) + L0x200198a2_f * (x**45) + 
            L0x200198a4_f * (x**46) + L0x200198a6_f * (x**47) + 
            L0x200198a8_f * (x**48) + L0x200198aa_f * (x**49) + 
            L0x200198ac_f * (x**50) + L0x200198ae_f * (x**51) + 
            L0x200198b0_f * (x**52) + L0x200198b2_f * (x**53) + 
            L0x200198b4_f * (x**54) + L0x200198b6_f * (x**55) + 
            L0x200198b8_f * (x**56) + L0x200198ba_f * (x**57) + 
            L0x200198bc_f * (x**58) + L0x200198be_f * (x**59) + 
            L0x200198c0_f * (x**60) + L0x200198c2_f * (x**61) + 
            L0x200198c4_f * (x**62) + L0x200198c6_f * (x**63) + 
            L0x200198c8_f * (x**64) + L0x200198ca_f * (x**65) + 
            L0x200198cc_f * (x**66) + L0x200198ce_f * (x**67) + 
            L0x200198d0_f * (x**68) + L0x200198d2_f * (x**69) + 
            L0x200198d4_f * (x**70) + L0x200198d6_f * (x**71) + 
            L0x200198d8_f * (x**72) + L0x200198da_f * (x**73) + 
            L0x200198dc_f * (x**74) + L0x200198de_f * (x**75) + 
            L0x200198e0_f * (x**76) + L0x200198e2_f * (x**77) + 
            L0x200198e4_f * (x**78) + L0x200198e6_f * (x**79) + 
            L0x200198e8_f * (x**80) + L0x200198ea_f * (x**81) + 
            L0x200198ec_f * (x**82) + L0x200198ee_f * (x**83) + 
            L0x200198f0_f * (x**84) + L0x200198f2_f * (x**85) + 
            L0x200198f4_f * (x**86) + L0x200198f6_f * (x**87) + 
            L0x200198f8_f * (x**88) + L0x200198fa_f * (x**89) + 
            L0x200198fc_f * (x**90) + L0x200198fe_f * (x**91) + 
            L0x20019900_f * (x**92) + L0x20019902_f * (x**93) + 
            L0x20019904_f * (x**94) + L0x20019906_f * (x**95) + 
            L0x20019908_f * (x**96) + L0x2001990a_f * (x**97) + 
            L0x2001990c_f * (x**98) + L0x2001990e_f * (x**99) + 
            L0x20019910_f * (x**100) + L0x20019912_f * (x**101) + 
            L0x20019914_f * (x**102) + L0x20019916_f * (x**103) + 
            L0x20019918_f * (x**104) + L0x2001991a_f * (x**105) + 
            L0x2001991c_f * (x**106) + L0x2001991e_f * (x**107) + 
            L0x20019920_f * (x**108) + L0x20019922_f * (x**109) + 
            L0x20019924_f * (x**110) + L0x20019926_f * (x**111) + 
            L0x20019928_f * (x**112) + L0x2001992a_f * (x**113) + 
            L0x2001992c_f * (x**114) + L0x2001992e_f * (x**115) + 
            L0x20019930_f * (x**116) + L0x20019932_f * (x**117) + 
            L0x20019934_f * (x**118) + L0x20019936_f * (x**119) + 
            L0x20019938_f * (x**120) + L0x2001993a_f * (x**121) + 
            L0x2001993c_f * (x**122) + L0x2001993e_f * (x**123) + 
            L0x20019940_f * (x**124) + L0x20019942_f * (x**125) + 
            L0x20019944_f * (x**126) + L0x20019946_f * (x**127) + 
            L0x20019948_f * (x**128) + L0x2001994a_f * (x**129) + 
            L0x2001994c_f * (x**130) + L0x2001994e_f * (x**131) + 
            L0x20019950_f * (x**132) + L0x20019952_f * (x**133) + 
            L0x20019954_f * (x**134) + L0x20019956_f * (x**135) + 
            L0x20019958_f * (x**136) + L0x2001995a_f * (x**137) + 
            L0x2001995c_f * (x**138) + L0x2001995e_f * (x**139) + 
            L0x20019960_f * (x**140) + L0x20019962_f * (x**141) + 
            L0x20019964_f * (x**142) + L0x20019966_f * (x**143) + 
            L0x20019968_f * (x**144) + L0x2001996a_f * (x**145) + 
            L0x2001996c_f * (x**146) + L0x2001996e_f * (x**147) + 
            L0x20019970_f * (x**148) + L0x20019972_f * (x**149) + 
            L0x20019974_f * (x**150) + L0x20019976_f * (x**151) + 
            L0x20019978_f * (x**152) + L0x2001997a_f * (x**153) + 
            L0x2001997c_f * (x**154) + L0x2001997e_f * (x**155) + 
            L0x20019980_f * (x**156) + L0x20019982_f * (x**157) + 
            L0x20019984_f * (x**158) + L0x20019986_f * (x**159) + 
            L0x20019988_f * (x**160) + L0x2001998a_f * (x**161) + 
            L0x2001998c_f * (x**162) + L0x2001998e_f * (x**163) + 
            L0x20019990_f * (x**164) + L0x20019992_f * (x**165) + 
            L0x20019994_f * (x**166) + L0x20019996_f * (x**167) + 
            L0x20019998_f * (x**168) + L0x2001999a_f * (x**169) + 
            L0x2001999c_f * (x**170) + L0x2001999e_f * (x**171) + 
            L0x200199a0_f * (x**172) + L0x200199a2_f * (x**173) + 
            L0x200199a4_f * (x**174) + L0x200199a6_f * (x**175) + 
            L0x200199a8_f * (x**176) + L0x200199aa_f * (x**177) + 
            L0x200199ac_f * (x**178) + L0x200199ae_f * (x**179) + 
            L0x200199b0_f * (x**180) + L0x200199b2_f * (x**181) + 
            L0x200199b4_f * (x**182) + L0x200199b6_f * (x**183) + 
            L0x200199b8_f * (x**184) + L0x200199ba_f * (x**185) + 
            L0x200199bc_f * (x**186) + L0x200199be_f * (x**187) + 
            L0x200199c0_f * (x**188) + L0x200199c2_f * (x**189) + 
            L0x200199c4_f * (x**190) + L0x200199c6_f * (x**191) + 
            L0x200199c8_f * (x**192) + L0x200199ca_f * (x**193) + 
            L0x200199cc_f * (x**194) + L0x200199ce_f * (x**195) + 
            L0x200199d0_f * (x**196) + L0x200199d2_f * (x**197) + 
            L0x200199d4_f * (x**198) + L0x200199d6_f * (x**199) + 
            L0x200199d8_f * (x**200) + L0x200199da_f * (x**201) + 
            L0x200199dc_f * (x**202) + L0x200199de_f * (x**203) + 
            L0x200199e0_f * (x**204) + L0x200199e2_f * (x**205) + 
            L0x200199e4_f * (x**206) + L0x200199e6_f * (x**207) + 
            L0x200199e8_f * (x**208) + L0x200199ea_f * (x**209) + 
            L0x200199ec_f * (x**210) + L0x200199ee_f * (x**211) + 
            L0x200199f0_f * (x**212) + L0x200199f2_f * (x**213) + 
            L0x200199f4_f * (x**214) + L0x200199f6_f * (x**215) + 
            L0x200199f8_f * (x**216) + L0x200199fa_f * (x**217) + 
            L0x200199fc_f * (x**218) + L0x200199fe_f * (x**219) + 
            L0x20019a00_f * (x**220) + L0x20019a02_f * (x**221) + 
            L0x20019a04_f * (x**222) + L0x20019a06_f * (x**223) + 
            L0x20019a08_f * (x**224) + L0x20019a0a_f * (x**225) + 
            L0x20019a0c_f * (x**226) + L0x20019a0e_f * (x**227) + 
            L0x20019a10_f * (x**228) + L0x20019a12_f * (x**229) + 
            L0x20019a14_f * (x**230) + L0x20019a16_f * (x**231) + 
            L0x20019a18_f * (x**232) + L0x20019a1a_f * (x**233) + 
            L0x20019a1c_f * (x**234) + L0x20019a1e_f * (x**235) + 
            L0x20019a20_f * (x**236) + L0x20019a22_f * (x**237) + 
            L0x20019a24_f * (x**238) + L0x20019a26_f * (x**239) + 
            L0x20019a28_f * (x**240) + L0x20019a2a_f * (x**241) + 
            L0x20019a2c_f * (x**242) + L0x20019a2e_f * (x**243) + 
            L0x20019a30_f * (x**244) + L0x20019a32_f * (x**245) + 
            L0x20019a34_f * (x**246) + L0x20019a36_f * (x**247) + 
            L0x20019a38_f * (x**248) + L0x20019a3a_f * (x**249) + 
            L0x20019a3c_f * (x**250) + L0x20019a3e_f * (x**251) + 
            L0x20019a40_f * (x**252) + L0x20019a42_f * (x**253) + 
            L0x20019a44_f * (x**254) + L0x20019a46_f * (x**255)
          )
          [25570049, x**4 - 21159774],
    (* inp_poly_12 *)
    eqmod (2**32) * (inp_poly_12 * inp_poly_12)
          (
            L0x20019848_f * (x**0) + L0x2001984a_f * (x**1) + 
            L0x2001984c_f * (x**2) + L0x2001984e_f * (x**3) + 
            L0x20019850_f * (x**4) + L0x20019852_f * (x**5) + 
            L0x20019854_f * (x**6) + L0x20019856_f * (x**7) + 
            L0x20019858_f * (x**8) + L0x2001985a_f * (x**9) + 
            L0x2001985c_f * (x**10) + L0x2001985e_f * (x**11) + 
            L0x20019860_f * (x**12) + L0x20019862_f * (x**13) + 
            L0x20019864_f * (x**14) + L0x20019866_f * (x**15) + 
            L0x20019868_f * (x**16) + L0x2001986a_f * (x**17) + 
            L0x2001986c_f * (x**18) + L0x2001986e_f * (x**19) + 
            L0x20019870_f * (x**20) + L0x20019872_f * (x**21) + 
            L0x20019874_f * (x**22) + L0x20019876_f * (x**23) + 
            L0x20019878_f * (x**24) + L0x2001987a_f * (x**25) + 
            L0x2001987c_f * (x**26) + L0x2001987e_f * (x**27) + 
            L0x20019880_f * (x**28) + L0x20019882_f * (x**29) + 
            L0x20019884_f * (x**30) + L0x20019886_f * (x**31) + 
            L0x20019888_f * (x**32) + L0x2001988a_f * (x**33) + 
            L0x2001988c_f * (x**34) + L0x2001988e_f * (x**35) + 
            L0x20019890_f * (x**36) + L0x20019892_f * (x**37) + 
            L0x20019894_f * (x**38) + L0x20019896_f * (x**39) + 
            L0x20019898_f * (x**40) + L0x2001989a_f * (x**41) + 
            L0x2001989c_f * (x**42) + L0x2001989e_f * (x**43) + 
            L0x200198a0_f * (x**44) + L0x200198a2_f * (x**45) + 
            L0x200198a4_f * (x**46) + L0x200198a6_f * (x**47) + 
            L0x200198a8_f * (x**48) + L0x200198aa_f * (x**49) + 
            L0x200198ac_f * (x**50) + L0x200198ae_f * (x**51) + 
            L0x200198b0_f * (x**52) + L0x200198b2_f * (x**53) + 
            L0x200198b4_f * (x**54) + L0x200198b6_f * (x**55) + 
            L0x200198b8_f * (x**56) + L0x200198ba_f * (x**57) + 
            L0x200198bc_f * (x**58) + L0x200198be_f * (x**59) + 
            L0x200198c0_f * (x**60) + L0x200198c2_f * (x**61) + 
            L0x200198c4_f * (x**62) + L0x200198c6_f * (x**63) + 
            L0x200198c8_f * (x**64) + L0x200198ca_f * (x**65) + 
            L0x200198cc_f * (x**66) + L0x200198ce_f * (x**67) + 
            L0x200198d0_f * (x**68) + L0x200198d2_f * (x**69) + 
            L0x200198d4_f * (x**70) + L0x200198d6_f * (x**71) + 
            L0x200198d8_f * (x**72) + L0x200198da_f * (x**73) + 
            L0x200198dc_f * (x**74) + L0x200198de_f * (x**75) + 
            L0x200198e0_f * (x**76) + L0x200198e2_f * (x**77) + 
            L0x200198e4_f * (x**78) + L0x200198e6_f * (x**79) + 
            L0x200198e8_f * (x**80) + L0x200198ea_f * (x**81) + 
            L0x200198ec_f * (x**82) + L0x200198ee_f * (x**83) + 
            L0x200198f0_f * (x**84) + L0x200198f2_f * (x**85) + 
            L0x200198f4_f * (x**86) + L0x200198f6_f * (x**87) + 
            L0x200198f8_f * (x**88) + L0x200198fa_f * (x**89) + 
            L0x200198fc_f * (x**90) + L0x200198fe_f * (x**91) + 
            L0x20019900_f * (x**92) + L0x20019902_f * (x**93) + 
            L0x20019904_f * (x**94) + L0x20019906_f * (x**95) + 
            L0x20019908_f * (x**96) + L0x2001990a_f * (x**97) + 
            L0x2001990c_f * (x**98) + L0x2001990e_f * (x**99) + 
            L0x20019910_f * (x**100) + L0x20019912_f * (x**101) + 
            L0x20019914_f * (x**102) + L0x20019916_f * (x**103) + 
            L0x20019918_f * (x**104) + L0x2001991a_f * (x**105) + 
            L0x2001991c_f * (x**106) + L0x2001991e_f * (x**107) + 
            L0x20019920_f * (x**108) + L0x20019922_f * (x**109) + 
            L0x20019924_f * (x**110) + L0x20019926_f * (x**111) + 
            L0x20019928_f * (x**112) + L0x2001992a_f * (x**113) + 
            L0x2001992c_f * (x**114) + L0x2001992e_f * (x**115) + 
            L0x20019930_f * (x**116) + L0x20019932_f * (x**117) + 
            L0x20019934_f * (x**118) + L0x20019936_f * (x**119) + 
            L0x20019938_f * (x**120) + L0x2001993a_f * (x**121) + 
            L0x2001993c_f * (x**122) + L0x2001993e_f * (x**123) + 
            L0x20019940_f * (x**124) + L0x20019942_f * (x**125) + 
            L0x20019944_f * (x**126) + L0x20019946_f * (x**127) + 
            L0x20019948_f * (x**128) + L0x2001994a_f * (x**129) + 
            L0x2001994c_f * (x**130) + L0x2001994e_f * (x**131) + 
            L0x20019950_f * (x**132) + L0x20019952_f * (x**133) + 
            L0x20019954_f * (x**134) + L0x20019956_f * (x**135) + 
            L0x20019958_f * (x**136) + L0x2001995a_f * (x**137) + 
            L0x2001995c_f * (x**138) + L0x2001995e_f * (x**139) + 
            L0x20019960_f * (x**140) + L0x20019962_f * (x**141) + 
            L0x20019964_f * (x**142) + L0x20019966_f * (x**143) + 
            L0x20019968_f * (x**144) + L0x2001996a_f * (x**145) + 
            L0x2001996c_f * (x**146) + L0x2001996e_f * (x**147) + 
            L0x20019970_f * (x**148) + L0x20019972_f * (x**149) + 
            L0x20019974_f * (x**150) + L0x20019976_f * (x**151) + 
            L0x20019978_f * (x**152) + L0x2001997a_f * (x**153) + 
            L0x2001997c_f * (x**154) + L0x2001997e_f * (x**155) + 
            L0x20019980_f * (x**156) + L0x20019982_f * (x**157) + 
            L0x20019984_f * (x**158) + L0x20019986_f * (x**159) + 
            L0x20019988_f * (x**160) + L0x2001998a_f * (x**161) + 
            L0x2001998c_f * (x**162) + L0x2001998e_f * (x**163) + 
            L0x20019990_f * (x**164) + L0x20019992_f * (x**165) + 
            L0x20019994_f * (x**166) + L0x20019996_f * (x**167) + 
            L0x20019998_f * (x**168) + L0x2001999a_f * (x**169) + 
            L0x2001999c_f * (x**170) + L0x2001999e_f * (x**171) + 
            L0x200199a0_f * (x**172) + L0x200199a2_f * (x**173) + 
            L0x200199a4_f * (x**174) + L0x200199a6_f * (x**175) + 
            L0x200199a8_f * (x**176) + L0x200199aa_f * (x**177) + 
            L0x200199ac_f * (x**178) + L0x200199ae_f * (x**179) + 
            L0x200199b0_f * (x**180) + L0x200199b2_f * (x**181) + 
            L0x200199b4_f * (x**182) + L0x200199b6_f * (x**183) + 
            L0x200199b8_f * (x**184) + L0x200199ba_f * (x**185) + 
            L0x200199bc_f * (x**186) + L0x200199be_f * (x**187) + 
            L0x200199c0_f * (x**188) + L0x200199c2_f * (x**189) + 
            L0x200199c4_f * (x**190) + L0x200199c6_f * (x**191) + 
            L0x200199c8_f * (x**192) + L0x200199ca_f * (x**193) + 
            L0x200199cc_f * (x**194) + L0x200199ce_f * (x**195) + 
            L0x200199d0_f * (x**196) + L0x200199d2_f * (x**197) + 
            L0x200199d4_f * (x**198) + L0x200199d6_f * (x**199) + 
            L0x200199d8_f * (x**200) + L0x200199da_f * (x**201) + 
            L0x200199dc_f * (x**202) + L0x200199de_f * (x**203) + 
            L0x200199e0_f * (x**204) + L0x200199e2_f * (x**205) + 
            L0x200199e4_f * (x**206) + L0x200199e6_f * (x**207) + 
            L0x200199e8_f * (x**208) + L0x200199ea_f * (x**209) + 
            L0x200199ec_f * (x**210) + L0x200199ee_f * (x**211) + 
            L0x200199f0_f * (x**212) + L0x200199f2_f * (x**213) + 
            L0x200199f4_f * (x**214) + L0x200199f6_f * (x**215) + 
            L0x200199f8_f * (x**216) + L0x200199fa_f * (x**217) + 
            L0x200199fc_f * (x**218) + L0x200199fe_f * (x**219) + 
            L0x20019a00_f * (x**220) + L0x20019a02_f * (x**221) + 
            L0x20019a04_f * (x**222) + L0x20019a06_f * (x**223) + 
            L0x20019a08_f * (x**224) + L0x20019a0a_f * (x**225) + 
            L0x20019a0c_f * (x**226) + L0x20019a0e_f * (x**227) + 
            L0x20019a10_f * (x**228) + L0x20019a12_f * (x**229) + 
            L0x20019a14_f * (x**230) + L0x20019a16_f * (x**231) + 
            L0x20019a18_f * (x**232) + L0x20019a1a_f * (x**233) + 
            L0x20019a1c_f * (x**234) + L0x20019a1e_f * (x**235) + 
            L0x20019a20_f * (x**236) + L0x20019a22_f * (x**237) + 
            L0x20019a24_f * (x**238) + L0x20019a26_f * (x**239) + 
            L0x20019a28_f * (x**240) + L0x20019a2a_f * (x**241) + 
            L0x20019a2c_f * (x**242) + L0x20019a2e_f * (x**243) + 
            L0x20019a30_f * (x**244) + L0x20019a32_f * (x**245) + 
            L0x20019a34_f * (x**246) + L0x20019a36_f * (x**247) + 
            L0x20019a38_f * (x**248) + L0x20019a3a_f * (x**249) + 
            L0x20019a3c_f * (x**250) + L0x20019a3e_f * (x**251) + 
            L0x20019a40_f * (x**252) + L0x20019a42_f * (x**253) + 
            L0x20019a44_f * (x**254) + L0x20019a46_f * (x**255)
          )
          [25570049, x**4 - 2389590],
    (* inp_poly_13 *)
    eqmod (2**32) * (inp_poly_13 * inp_poly_13)
          (
            L0x20019848_f * (x**0) + L0x2001984a_f * (x**1) + 
            L0x2001984c_f * (x**2) + L0x2001984e_f * (x**3) + 
            L0x20019850_f * (x**4) + L0x20019852_f * (x**5) + 
            L0x20019854_f * (x**6) + L0x20019856_f * (x**7) + 
            L0x20019858_f * (x**8) + L0x2001985a_f * (x**9) + 
            L0x2001985c_f * (x**10) + L0x2001985e_f * (x**11) + 
            L0x20019860_f * (x**12) + L0x20019862_f * (x**13) + 
            L0x20019864_f * (x**14) + L0x20019866_f * (x**15) + 
            L0x20019868_f * (x**16) + L0x2001986a_f * (x**17) + 
            L0x2001986c_f * (x**18) + L0x2001986e_f * (x**19) + 
            L0x20019870_f * (x**20) + L0x20019872_f * (x**21) + 
            L0x20019874_f * (x**22) + L0x20019876_f * (x**23) + 
            L0x20019878_f * (x**24) + L0x2001987a_f * (x**25) + 
            L0x2001987c_f * (x**26) + L0x2001987e_f * (x**27) + 
            L0x20019880_f * (x**28) + L0x20019882_f * (x**29) + 
            L0x20019884_f * (x**30) + L0x20019886_f * (x**31) + 
            L0x20019888_f * (x**32) + L0x2001988a_f * (x**33) + 
            L0x2001988c_f * (x**34) + L0x2001988e_f * (x**35) + 
            L0x20019890_f * (x**36) + L0x20019892_f * (x**37) + 
            L0x20019894_f * (x**38) + L0x20019896_f * (x**39) + 
            L0x20019898_f * (x**40) + L0x2001989a_f * (x**41) + 
            L0x2001989c_f * (x**42) + L0x2001989e_f * (x**43) + 
            L0x200198a0_f * (x**44) + L0x200198a2_f * (x**45) + 
            L0x200198a4_f * (x**46) + L0x200198a6_f * (x**47) + 
            L0x200198a8_f * (x**48) + L0x200198aa_f * (x**49) + 
            L0x200198ac_f * (x**50) + L0x200198ae_f * (x**51) + 
            L0x200198b0_f * (x**52) + L0x200198b2_f * (x**53) + 
            L0x200198b4_f * (x**54) + L0x200198b6_f * (x**55) + 
            L0x200198b8_f * (x**56) + L0x200198ba_f * (x**57) + 
            L0x200198bc_f * (x**58) + L0x200198be_f * (x**59) + 
            L0x200198c0_f * (x**60) + L0x200198c2_f * (x**61) + 
            L0x200198c4_f * (x**62) + L0x200198c6_f * (x**63) + 
            L0x200198c8_f * (x**64) + L0x200198ca_f * (x**65) + 
            L0x200198cc_f * (x**66) + L0x200198ce_f * (x**67) + 
            L0x200198d0_f * (x**68) + L0x200198d2_f * (x**69) + 
            L0x200198d4_f * (x**70) + L0x200198d6_f * (x**71) + 
            L0x200198d8_f * (x**72) + L0x200198da_f * (x**73) + 
            L0x200198dc_f * (x**74) + L0x200198de_f * (x**75) + 
            L0x200198e0_f * (x**76) + L0x200198e2_f * (x**77) + 
            L0x200198e4_f * (x**78) + L0x200198e6_f * (x**79) + 
            L0x200198e8_f * (x**80) + L0x200198ea_f * (x**81) + 
            L0x200198ec_f * (x**82) + L0x200198ee_f * (x**83) + 
            L0x200198f0_f * (x**84) + L0x200198f2_f * (x**85) + 
            L0x200198f4_f * (x**86) + L0x200198f6_f * (x**87) + 
            L0x200198f8_f * (x**88) + L0x200198fa_f * (x**89) + 
            L0x200198fc_f * (x**90) + L0x200198fe_f * (x**91) + 
            L0x20019900_f * (x**92) + L0x20019902_f * (x**93) + 
            L0x20019904_f * (x**94) + L0x20019906_f * (x**95) + 
            L0x20019908_f * (x**96) + L0x2001990a_f * (x**97) + 
            L0x2001990c_f * (x**98) + L0x2001990e_f * (x**99) + 
            L0x20019910_f * (x**100) + L0x20019912_f * (x**101) + 
            L0x20019914_f * (x**102) + L0x20019916_f * (x**103) + 
            L0x20019918_f * (x**104) + L0x2001991a_f * (x**105) + 
            L0x2001991c_f * (x**106) + L0x2001991e_f * (x**107) + 
            L0x20019920_f * (x**108) + L0x20019922_f * (x**109) + 
            L0x20019924_f * (x**110) + L0x20019926_f * (x**111) + 
            L0x20019928_f * (x**112) + L0x2001992a_f * (x**113) + 
            L0x2001992c_f * (x**114) + L0x2001992e_f * (x**115) + 
            L0x20019930_f * (x**116) + L0x20019932_f * (x**117) + 
            L0x20019934_f * (x**118) + L0x20019936_f * (x**119) + 
            L0x20019938_f * (x**120) + L0x2001993a_f * (x**121) + 
            L0x2001993c_f * (x**122) + L0x2001993e_f * (x**123) + 
            L0x20019940_f * (x**124) + L0x20019942_f * (x**125) + 
            L0x20019944_f * (x**126) + L0x20019946_f * (x**127) + 
            L0x20019948_f * (x**128) + L0x2001994a_f * (x**129) + 
            L0x2001994c_f * (x**130) + L0x2001994e_f * (x**131) + 
            L0x20019950_f * (x**132) + L0x20019952_f * (x**133) + 
            L0x20019954_f * (x**134) + L0x20019956_f * (x**135) + 
            L0x20019958_f * (x**136) + L0x2001995a_f * (x**137) + 
            L0x2001995c_f * (x**138) + L0x2001995e_f * (x**139) + 
            L0x20019960_f * (x**140) + L0x20019962_f * (x**141) + 
            L0x20019964_f * (x**142) + L0x20019966_f * (x**143) + 
            L0x20019968_f * (x**144) + L0x2001996a_f * (x**145) + 
            L0x2001996c_f * (x**146) + L0x2001996e_f * (x**147) + 
            L0x20019970_f * (x**148) + L0x20019972_f * (x**149) + 
            L0x20019974_f * (x**150) + L0x20019976_f * (x**151) + 
            L0x20019978_f * (x**152) + L0x2001997a_f * (x**153) + 
            L0x2001997c_f * (x**154) + L0x2001997e_f * (x**155) + 
            L0x20019980_f * (x**156) + L0x20019982_f * (x**157) + 
            L0x20019984_f * (x**158) + L0x20019986_f * (x**159) + 
            L0x20019988_f * (x**160) + L0x2001998a_f * (x**161) + 
            L0x2001998c_f * (x**162) + L0x2001998e_f * (x**163) + 
            L0x20019990_f * (x**164) + L0x20019992_f * (x**165) + 
            L0x20019994_f * (x**166) + L0x20019996_f * (x**167) + 
            L0x20019998_f * (x**168) + L0x2001999a_f * (x**169) + 
            L0x2001999c_f * (x**170) + L0x2001999e_f * (x**171) + 
            L0x200199a0_f * (x**172) + L0x200199a2_f * (x**173) + 
            L0x200199a4_f * (x**174) + L0x200199a6_f * (x**175) + 
            L0x200199a8_f * (x**176) + L0x200199aa_f * (x**177) + 
            L0x200199ac_f * (x**178) + L0x200199ae_f * (x**179) + 
            L0x200199b0_f * (x**180) + L0x200199b2_f * (x**181) + 
            L0x200199b4_f * (x**182) + L0x200199b6_f * (x**183) + 
            L0x200199b8_f * (x**184) + L0x200199ba_f * (x**185) + 
            L0x200199bc_f * (x**186) + L0x200199be_f * (x**187) + 
            L0x200199c0_f * (x**188) + L0x200199c2_f * (x**189) + 
            L0x200199c4_f * (x**190) + L0x200199c6_f * (x**191) + 
            L0x200199c8_f * (x**192) + L0x200199ca_f * (x**193) + 
            L0x200199cc_f * (x**194) + L0x200199ce_f * (x**195) + 
            L0x200199d0_f * (x**196) + L0x200199d2_f * (x**197) + 
            L0x200199d4_f * (x**198) + L0x200199d6_f * (x**199) + 
            L0x200199d8_f * (x**200) + L0x200199da_f * (x**201) + 
            L0x200199dc_f * (x**202) + L0x200199de_f * (x**203) + 
            L0x200199e0_f * (x**204) + L0x200199e2_f * (x**205) + 
            L0x200199e4_f * (x**206) + L0x200199e6_f * (x**207) + 
            L0x200199e8_f * (x**208) + L0x200199ea_f * (x**209) + 
            L0x200199ec_f * (x**210) + L0x200199ee_f * (x**211) + 
            L0x200199f0_f * (x**212) + L0x200199f2_f * (x**213) + 
            L0x200199f4_f * (x**214) + L0x200199f6_f * (x**215) + 
            L0x200199f8_f * (x**216) + L0x200199fa_f * (x**217) + 
            L0x200199fc_f * (x**218) + L0x200199fe_f * (x**219) + 
            L0x20019a00_f * (x**220) + L0x20019a02_f * (x**221) + 
            L0x20019a04_f * (x**222) + L0x20019a06_f * (x**223) + 
            L0x20019a08_f * (x**224) + L0x20019a0a_f * (x**225) + 
            L0x20019a0c_f * (x**226) + L0x20019a0e_f * (x**227) + 
            L0x20019a10_f * (x**228) + L0x20019a12_f * (x**229) + 
            L0x20019a14_f * (x**230) + L0x20019a16_f * (x**231) + 
            L0x20019a18_f * (x**232) + L0x20019a1a_f * (x**233) + 
            L0x20019a1c_f * (x**234) + L0x20019a1e_f * (x**235) + 
            L0x20019a20_f * (x**236) + L0x20019a22_f * (x**237) + 
            L0x20019a24_f * (x**238) + L0x20019a26_f * (x**239) + 
            L0x20019a28_f * (x**240) + L0x20019a2a_f * (x**241) + 
            L0x20019a2c_f * (x**242) + L0x20019a2e_f * (x**243) + 
            L0x20019a30_f * (x**244) + L0x20019a32_f * (x**245) + 
            L0x20019a34_f * (x**246) + L0x20019a36_f * (x**247) + 
            L0x20019a38_f * (x**248) + L0x20019a3a_f * (x**249) + 
            L0x20019a3c_f * (x**250) + L0x20019a3e_f * (x**251) + 
            L0x20019a40_f * (x**252) + L0x20019a42_f * (x**253) + 
            L0x20019a44_f * (x**254) + L0x20019a46_f * (x**255)
          )
          [25570049, x**4 - 23180459],
    (* inp_poly_14 *)
    eqmod (2**32) * (inp_poly_14 * inp_poly_14)
          (
            L0x20019848_f * (x**0) + L0x2001984a_f * (x**1) + 
            L0x2001984c_f * (x**2) + L0x2001984e_f * (x**3) + 
            L0x20019850_f * (x**4) + L0x20019852_f * (x**5) + 
            L0x20019854_f * (x**6) + L0x20019856_f * (x**7) + 
            L0x20019858_f * (x**8) + L0x2001985a_f * (x**9) + 
            L0x2001985c_f * (x**10) + L0x2001985e_f * (x**11) + 
            L0x20019860_f * (x**12) + L0x20019862_f * (x**13) + 
            L0x20019864_f * (x**14) + L0x20019866_f * (x**15) + 
            L0x20019868_f * (x**16) + L0x2001986a_f * (x**17) + 
            L0x2001986c_f * (x**18) + L0x2001986e_f * (x**19) + 
            L0x20019870_f * (x**20) + L0x20019872_f * (x**21) + 
            L0x20019874_f * (x**22) + L0x20019876_f * (x**23) + 
            L0x20019878_f * (x**24) + L0x2001987a_f * (x**25) + 
            L0x2001987c_f * (x**26) + L0x2001987e_f * (x**27) + 
            L0x20019880_f * (x**28) + L0x20019882_f * (x**29) + 
            L0x20019884_f * (x**30) + L0x20019886_f * (x**31) + 
            L0x20019888_f * (x**32) + L0x2001988a_f * (x**33) + 
            L0x2001988c_f * (x**34) + L0x2001988e_f * (x**35) + 
            L0x20019890_f * (x**36) + L0x20019892_f * (x**37) + 
            L0x20019894_f * (x**38) + L0x20019896_f * (x**39) + 
            L0x20019898_f * (x**40) + L0x2001989a_f * (x**41) + 
            L0x2001989c_f * (x**42) + L0x2001989e_f * (x**43) + 
            L0x200198a0_f * (x**44) + L0x200198a2_f * (x**45) + 
            L0x200198a4_f * (x**46) + L0x200198a6_f * (x**47) + 
            L0x200198a8_f * (x**48) + L0x200198aa_f * (x**49) + 
            L0x200198ac_f * (x**50) + L0x200198ae_f * (x**51) + 
            L0x200198b0_f * (x**52) + L0x200198b2_f * (x**53) + 
            L0x200198b4_f * (x**54) + L0x200198b6_f * (x**55) + 
            L0x200198b8_f * (x**56) + L0x200198ba_f * (x**57) + 
            L0x200198bc_f * (x**58) + L0x200198be_f * (x**59) + 
            L0x200198c0_f * (x**60) + L0x200198c2_f * (x**61) + 
            L0x200198c4_f * (x**62) + L0x200198c6_f * (x**63) + 
            L0x200198c8_f * (x**64) + L0x200198ca_f * (x**65) + 
            L0x200198cc_f * (x**66) + L0x200198ce_f * (x**67) + 
            L0x200198d0_f * (x**68) + L0x200198d2_f * (x**69) + 
            L0x200198d4_f * (x**70) + L0x200198d6_f * (x**71) + 
            L0x200198d8_f * (x**72) + L0x200198da_f * (x**73) + 
            L0x200198dc_f * (x**74) + L0x200198de_f * (x**75) + 
            L0x200198e0_f * (x**76) + L0x200198e2_f * (x**77) + 
            L0x200198e4_f * (x**78) + L0x200198e6_f * (x**79) + 
            L0x200198e8_f * (x**80) + L0x200198ea_f * (x**81) + 
            L0x200198ec_f * (x**82) + L0x200198ee_f * (x**83) + 
            L0x200198f0_f * (x**84) + L0x200198f2_f * (x**85) + 
            L0x200198f4_f * (x**86) + L0x200198f6_f * (x**87) + 
            L0x200198f8_f * (x**88) + L0x200198fa_f * (x**89) + 
            L0x200198fc_f * (x**90) + L0x200198fe_f * (x**91) + 
            L0x20019900_f * (x**92) + L0x20019902_f * (x**93) + 
            L0x20019904_f * (x**94) + L0x20019906_f * (x**95) + 
            L0x20019908_f * (x**96) + L0x2001990a_f * (x**97) + 
            L0x2001990c_f * (x**98) + L0x2001990e_f * (x**99) + 
            L0x20019910_f * (x**100) + L0x20019912_f * (x**101) + 
            L0x20019914_f * (x**102) + L0x20019916_f * (x**103) + 
            L0x20019918_f * (x**104) + L0x2001991a_f * (x**105) + 
            L0x2001991c_f * (x**106) + L0x2001991e_f * (x**107) + 
            L0x20019920_f * (x**108) + L0x20019922_f * (x**109) + 
            L0x20019924_f * (x**110) + L0x20019926_f * (x**111) + 
            L0x20019928_f * (x**112) + L0x2001992a_f * (x**113) + 
            L0x2001992c_f * (x**114) + L0x2001992e_f * (x**115) + 
            L0x20019930_f * (x**116) + L0x20019932_f * (x**117) + 
            L0x20019934_f * (x**118) + L0x20019936_f * (x**119) + 
            L0x20019938_f * (x**120) + L0x2001993a_f * (x**121) + 
            L0x2001993c_f * (x**122) + L0x2001993e_f * (x**123) + 
            L0x20019940_f * (x**124) + L0x20019942_f * (x**125) + 
            L0x20019944_f * (x**126) + L0x20019946_f * (x**127) + 
            L0x20019948_f * (x**128) + L0x2001994a_f * (x**129) + 
            L0x2001994c_f * (x**130) + L0x2001994e_f * (x**131) + 
            L0x20019950_f * (x**132) + L0x20019952_f * (x**133) + 
            L0x20019954_f * (x**134) + L0x20019956_f * (x**135) + 
            L0x20019958_f * (x**136) + L0x2001995a_f * (x**137) + 
            L0x2001995c_f * (x**138) + L0x2001995e_f * (x**139) + 
            L0x20019960_f * (x**140) + L0x20019962_f * (x**141) + 
            L0x20019964_f * (x**142) + L0x20019966_f * (x**143) + 
            L0x20019968_f * (x**144) + L0x2001996a_f * (x**145) + 
            L0x2001996c_f * (x**146) + L0x2001996e_f * (x**147) + 
            L0x20019970_f * (x**148) + L0x20019972_f * (x**149) + 
            L0x20019974_f * (x**150) + L0x20019976_f * (x**151) + 
            L0x20019978_f * (x**152) + L0x2001997a_f * (x**153) + 
            L0x2001997c_f * (x**154) + L0x2001997e_f * (x**155) + 
            L0x20019980_f * (x**156) + L0x20019982_f * (x**157) + 
            L0x20019984_f * (x**158) + L0x20019986_f * (x**159) + 
            L0x20019988_f * (x**160) + L0x2001998a_f * (x**161) + 
            L0x2001998c_f * (x**162) + L0x2001998e_f * (x**163) + 
            L0x20019990_f * (x**164) + L0x20019992_f * (x**165) + 
            L0x20019994_f * (x**166) + L0x20019996_f * (x**167) + 
            L0x20019998_f * (x**168) + L0x2001999a_f * (x**169) + 
            L0x2001999c_f * (x**170) + L0x2001999e_f * (x**171) + 
            L0x200199a0_f * (x**172) + L0x200199a2_f * (x**173) + 
            L0x200199a4_f * (x**174) + L0x200199a6_f * (x**175) + 
            L0x200199a8_f * (x**176) + L0x200199aa_f * (x**177) + 
            L0x200199ac_f * (x**178) + L0x200199ae_f * (x**179) + 
            L0x200199b0_f * (x**180) + L0x200199b2_f * (x**181) + 
            L0x200199b4_f * (x**182) + L0x200199b6_f * (x**183) + 
            L0x200199b8_f * (x**184) + L0x200199ba_f * (x**185) + 
            L0x200199bc_f * (x**186) + L0x200199be_f * (x**187) + 
            L0x200199c0_f * (x**188) + L0x200199c2_f * (x**189) + 
            L0x200199c4_f * (x**190) + L0x200199c6_f * (x**191) + 
            L0x200199c8_f * (x**192) + L0x200199ca_f * (x**193) + 
            L0x200199cc_f * (x**194) + L0x200199ce_f * (x**195) + 
            L0x200199d0_f * (x**196) + L0x200199d2_f * (x**197) + 
            L0x200199d4_f * (x**198) + L0x200199d6_f * (x**199) + 
            L0x200199d8_f * (x**200) + L0x200199da_f * (x**201) + 
            L0x200199dc_f * (x**202) + L0x200199de_f * (x**203) + 
            L0x200199e0_f * (x**204) + L0x200199e2_f * (x**205) + 
            L0x200199e4_f * (x**206) + L0x200199e6_f * (x**207) + 
            L0x200199e8_f * (x**208) + L0x200199ea_f * (x**209) + 
            L0x200199ec_f * (x**210) + L0x200199ee_f * (x**211) + 
            L0x200199f0_f * (x**212) + L0x200199f2_f * (x**213) + 
            L0x200199f4_f * (x**214) + L0x200199f6_f * (x**215) + 
            L0x200199f8_f * (x**216) + L0x200199fa_f * (x**217) + 
            L0x200199fc_f * (x**218) + L0x200199fe_f * (x**219) + 
            L0x20019a00_f * (x**220) + L0x20019a02_f * (x**221) + 
            L0x20019a04_f * (x**222) + L0x20019a06_f * (x**223) + 
            L0x20019a08_f * (x**224) + L0x20019a0a_f * (x**225) + 
            L0x20019a0c_f * (x**226) + L0x20019a0e_f * (x**227) + 
            L0x20019a10_f * (x**228) + L0x20019a12_f * (x**229) + 
            L0x20019a14_f * (x**230) + L0x20019a16_f * (x**231) + 
            L0x20019a18_f * (x**232) + L0x20019a1a_f * (x**233) + 
            L0x20019a1c_f * (x**234) + L0x20019a1e_f * (x**235) + 
            L0x20019a20_f * (x**236) + L0x20019a22_f * (x**237) + 
            L0x20019a24_f * (x**238) + L0x20019a26_f * (x**239) + 
            L0x20019a28_f * (x**240) + L0x20019a2a_f * (x**241) + 
            L0x20019a2c_f * (x**242) + L0x20019a2e_f * (x**243) + 
            L0x20019a30_f * (x**244) + L0x20019a32_f * (x**245) + 
            L0x20019a34_f * (x**246) + L0x20019a36_f * (x**247) + 
            L0x20019a38_f * (x**248) + L0x20019a3a_f * (x**249) + 
            L0x20019a3c_f * (x**250) + L0x20019a3e_f * (x**251) + 
            L0x20019a40_f * (x**252) + L0x20019a42_f * (x**253) + 
            L0x20019a44_f * (x**254) + L0x20019a46_f * (x**255)
          )
          [25570049, x**4 - 4363503],
    (* inp_poly_15 *)
    eqmod (2**32) * (inp_poly_15 * inp_poly_15)
          (
            L0x20019848_f * (x**0) + L0x2001984a_f * (x**1) + 
            L0x2001984c_f * (x**2) + L0x2001984e_f * (x**3) + 
            L0x20019850_f * (x**4) + L0x20019852_f * (x**5) + 
            L0x20019854_f * (x**6) + L0x20019856_f * (x**7) + 
            L0x20019858_f * (x**8) + L0x2001985a_f * (x**9) + 
            L0x2001985c_f * (x**10) + L0x2001985e_f * (x**11) + 
            L0x20019860_f * (x**12) + L0x20019862_f * (x**13) + 
            L0x20019864_f * (x**14) + L0x20019866_f * (x**15) + 
            L0x20019868_f * (x**16) + L0x2001986a_f * (x**17) + 
            L0x2001986c_f * (x**18) + L0x2001986e_f * (x**19) + 
            L0x20019870_f * (x**20) + L0x20019872_f * (x**21) + 
            L0x20019874_f * (x**22) + L0x20019876_f * (x**23) + 
            L0x20019878_f * (x**24) + L0x2001987a_f * (x**25) + 
            L0x2001987c_f * (x**26) + L0x2001987e_f * (x**27) + 
            L0x20019880_f * (x**28) + L0x20019882_f * (x**29) + 
            L0x20019884_f * (x**30) + L0x20019886_f * (x**31) + 
            L0x20019888_f * (x**32) + L0x2001988a_f * (x**33) + 
            L0x2001988c_f * (x**34) + L0x2001988e_f * (x**35) + 
            L0x20019890_f * (x**36) + L0x20019892_f * (x**37) + 
            L0x20019894_f * (x**38) + L0x20019896_f * (x**39) + 
            L0x20019898_f * (x**40) + L0x2001989a_f * (x**41) + 
            L0x2001989c_f * (x**42) + L0x2001989e_f * (x**43) + 
            L0x200198a0_f * (x**44) + L0x200198a2_f * (x**45) + 
            L0x200198a4_f * (x**46) + L0x200198a6_f * (x**47) + 
            L0x200198a8_f * (x**48) + L0x200198aa_f * (x**49) + 
            L0x200198ac_f * (x**50) + L0x200198ae_f * (x**51) + 
            L0x200198b0_f * (x**52) + L0x200198b2_f * (x**53) + 
            L0x200198b4_f * (x**54) + L0x200198b6_f * (x**55) + 
            L0x200198b8_f * (x**56) + L0x200198ba_f * (x**57) + 
            L0x200198bc_f * (x**58) + L0x200198be_f * (x**59) + 
            L0x200198c0_f * (x**60) + L0x200198c2_f * (x**61) + 
            L0x200198c4_f * (x**62) + L0x200198c6_f * (x**63) + 
            L0x200198c8_f * (x**64) + L0x200198ca_f * (x**65) + 
            L0x200198cc_f * (x**66) + L0x200198ce_f * (x**67) + 
            L0x200198d0_f * (x**68) + L0x200198d2_f * (x**69) + 
            L0x200198d4_f * (x**70) + L0x200198d6_f * (x**71) + 
            L0x200198d8_f * (x**72) + L0x200198da_f * (x**73) + 
            L0x200198dc_f * (x**74) + L0x200198de_f * (x**75) + 
            L0x200198e0_f * (x**76) + L0x200198e2_f * (x**77) + 
            L0x200198e4_f * (x**78) + L0x200198e6_f * (x**79) + 
            L0x200198e8_f * (x**80) + L0x200198ea_f * (x**81) + 
            L0x200198ec_f * (x**82) + L0x200198ee_f * (x**83) + 
            L0x200198f0_f * (x**84) + L0x200198f2_f * (x**85) + 
            L0x200198f4_f * (x**86) + L0x200198f6_f * (x**87) + 
            L0x200198f8_f * (x**88) + L0x200198fa_f * (x**89) + 
            L0x200198fc_f * (x**90) + L0x200198fe_f * (x**91) + 
            L0x20019900_f * (x**92) + L0x20019902_f * (x**93) + 
            L0x20019904_f * (x**94) + L0x20019906_f * (x**95) + 
            L0x20019908_f * (x**96) + L0x2001990a_f * (x**97) + 
            L0x2001990c_f * (x**98) + L0x2001990e_f * (x**99) + 
            L0x20019910_f * (x**100) + L0x20019912_f * (x**101) + 
            L0x20019914_f * (x**102) + L0x20019916_f * (x**103) + 
            L0x20019918_f * (x**104) + L0x2001991a_f * (x**105) + 
            L0x2001991c_f * (x**106) + L0x2001991e_f * (x**107) + 
            L0x20019920_f * (x**108) + L0x20019922_f * (x**109) + 
            L0x20019924_f * (x**110) + L0x20019926_f * (x**111) + 
            L0x20019928_f * (x**112) + L0x2001992a_f * (x**113) + 
            L0x2001992c_f * (x**114) + L0x2001992e_f * (x**115) + 
            L0x20019930_f * (x**116) + L0x20019932_f * (x**117) + 
            L0x20019934_f * (x**118) + L0x20019936_f * (x**119) + 
            L0x20019938_f * (x**120) + L0x2001993a_f * (x**121) + 
            L0x2001993c_f * (x**122) + L0x2001993e_f * (x**123) + 
            L0x20019940_f * (x**124) + L0x20019942_f * (x**125) + 
            L0x20019944_f * (x**126) + L0x20019946_f * (x**127) + 
            L0x20019948_f * (x**128) + L0x2001994a_f * (x**129) + 
            L0x2001994c_f * (x**130) + L0x2001994e_f * (x**131) + 
            L0x20019950_f * (x**132) + L0x20019952_f * (x**133) + 
            L0x20019954_f * (x**134) + L0x20019956_f * (x**135) + 
            L0x20019958_f * (x**136) + L0x2001995a_f * (x**137) + 
            L0x2001995c_f * (x**138) + L0x2001995e_f * (x**139) + 
            L0x20019960_f * (x**140) + L0x20019962_f * (x**141) + 
            L0x20019964_f * (x**142) + L0x20019966_f * (x**143) + 
            L0x20019968_f * (x**144) + L0x2001996a_f * (x**145) + 
            L0x2001996c_f * (x**146) + L0x2001996e_f * (x**147) + 
            L0x20019970_f * (x**148) + L0x20019972_f * (x**149) + 
            L0x20019974_f * (x**150) + L0x20019976_f * (x**151) + 
            L0x20019978_f * (x**152) + L0x2001997a_f * (x**153) + 
            L0x2001997c_f * (x**154) + L0x2001997e_f * (x**155) + 
            L0x20019980_f * (x**156) + L0x20019982_f * (x**157) + 
            L0x20019984_f * (x**158) + L0x20019986_f * (x**159) + 
            L0x20019988_f * (x**160) + L0x2001998a_f * (x**161) + 
            L0x2001998c_f * (x**162) + L0x2001998e_f * (x**163) + 
            L0x20019990_f * (x**164) + L0x20019992_f * (x**165) + 
            L0x20019994_f * (x**166) + L0x20019996_f * (x**167) + 
            L0x20019998_f * (x**168) + L0x2001999a_f * (x**169) + 
            L0x2001999c_f * (x**170) + L0x2001999e_f * (x**171) + 
            L0x200199a0_f * (x**172) + L0x200199a2_f * (x**173) + 
            L0x200199a4_f * (x**174) + L0x200199a6_f * (x**175) + 
            L0x200199a8_f * (x**176) + L0x200199aa_f * (x**177) + 
            L0x200199ac_f * (x**178) + L0x200199ae_f * (x**179) + 
            L0x200199b0_f * (x**180) + L0x200199b2_f * (x**181) + 
            L0x200199b4_f * (x**182) + L0x200199b6_f * (x**183) + 
            L0x200199b8_f * (x**184) + L0x200199ba_f * (x**185) + 
            L0x200199bc_f * (x**186) + L0x200199be_f * (x**187) + 
            L0x200199c0_f * (x**188) + L0x200199c2_f * (x**189) + 
            L0x200199c4_f * (x**190) + L0x200199c6_f * (x**191) + 
            L0x200199c8_f * (x**192) + L0x200199ca_f * (x**193) + 
            L0x200199cc_f * (x**194) + L0x200199ce_f * (x**195) + 
            L0x200199d0_f * (x**196) + L0x200199d2_f * (x**197) + 
            L0x200199d4_f * (x**198) + L0x200199d6_f * (x**199) + 
            L0x200199d8_f * (x**200) + L0x200199da_f * (x**201) + 
            L0x200199dc_f * (x**202) + L0x200199de_f * (x**203) + 
            L0x200199e0_f * (x**204) + L0x200199e2_f * (x**205) + 
            L0x200199e4_f * (x**206) + L0x200199e6_f * (x**207) + 
            L0x200199e8_f * (x**208) + L0x200199ea_f * (x**209) + 
            L0x200199ec_f * (x**210) + L0x200199ee_f * (x**211) + 
            L0x200199f0_f * (x**212) + L0x200199f2_f * (x**213) + 
            L0x200199f4_f * (x**214) + L0x200199f6_f * (x**215) + 
            L0x200199f8_f * (x**216) + L0x200199fa_f * (x**217) + 
            L0x200199fc_f * (x**218) + L0x200199fe_f * (x**219) + 
            L0x20019a00_f * (x**220) + L0x20019a02_f * (x**221) + 
            L0x20019a04_f * (x**222) + L0x20019a06_f * (x**223) + 
            L0x20019a08_f * (x**224) + L0x20019a0a_f * (x**225) + 
            L0x20019a0c_f * (x**226) + L0x20019a0e_f * (x**227) + 
            L0x20019a10_f * (x**228) + L0x20019a12_f * (x**229) + 
            L0x20019a14_f * (x**230) + L0x20019a16_f * (x**231) + 
            L0x20019a18_f * (x**232) + L0x20019a1a_f * (x**233) + 
            L0x20019a1c_f * (x**234) + L0x20019a1e_f * (x**235) + 
            L0x20019a20_f * (x**236) + L0x20019a22_f * (x**237) + 
            L0x20019a24_f * (x**238) + L0x20019a26_f * (x**239) + 
            L0x20019a28_f * (x**240) + L0x20019a2a_f * (x**241) + 
            L0x20019a2c_f * (x**242) + L0x20019a2e_f * (x**243) + 
            L0x20019a30_f * (x**244) + L0x20019a32_f * (x**245) + 
            L0x20019a34_f * (x**246) + L0x20019a36_f * (x**247) + 
            L0x20019a38_f * (x**248) + L0x20019a3a_f * (x**249) + 
            L0x20019a3c_f * (x**250) + L0x20019a3e_f * (x**251) + 
            L0x20019a40_f * (x**252) + L0x20019a42_f * (x**253) + 
            L0x20019a44_f * (x**254) + L0x20019a46_f * (x**255)
          )
          [25570049, x**4 - 21206546]
  ] prove with [cuts [58]]
  &&
  true
;

cut (* 75 *)
  true && true;

(* slice 2 *)
assume (* instantiating y_0's *)
  and [
    y_0_16 = 1, y_0_17 = 1, y_0_18 = 1, y_0_19 = 1, 
    y_0_20 = 1, y_0_21 = 1, y_0_22 = 1, y_0_23 = 1
  ] && true;
cut (* 76 *)
  and [
    (* inp_poly_16 *)
    eqmod (2**32) * (inp_poly_16 * inp_poly_16)
          (
            L0x20019848_f * (x**0) + L0x2001984a_f * (x**1) + 
            L0x2001984c_f * (x**2) + L0x2001984e_f * (x**3) + 
            L0x20019850_f * (x**4) + L0x20019852_f * (x**5) + 
            L0x20019854_f * (x**6) + L0x20019856_f * (x**7) + 
            L0x20019858_f * (x**8) + L0x2001985a_f * (x**9) + 
            L0x2001985c_f * (x**10) + L0x2001985e_f * (x**11) + 
            L0x20019860_f * (x**12) + L0x20019862_f * (x**13) + 
            L0x20019864_f * (x**14) + L0x20019866_f * (x**15) + 
            L0x20019868_f * (x**16) + L0x2001986a_f * (x**17) + 
            L0x2001986c_f * (x**18) + L0x2001986e_f * (x**19) + 
            L0x20019870_f * (x**20) + L0x20019872_f * (x**21) + 
            L0x20019874_f * (x**22) + L0x20019876_f * (x**23) + 
            L0x20019878_f * (x**24) + L0x2001987a_f * (x**25) + 
            L0x2001987c_f * (x**26) + L0x2001987e_f * (x**27) + 
            L0x20019880_f * (x**28) + L0x20019882_f * (x**29) + 
            L0x20019884_f * (x**30) + L0x20019886_f * (x**31) + 
            L0x20019888_f * (x**32) + L0x2001988a_f * (x**33) + 
            L0x2001988c_f * (x**34) + L0x2001988e_f * (x**35) + 
            L0x20019890_f * (x**36) + L0x20019892_f * (x**37) + 
            L0x20019894_f * (x**38) + L0x20019896_f * (x**39) + 
            L0x20019898_f * (x**40) + L0x2001989a_f * (x**41) + 
            L0x2001989c_f * (x**42) + L0x2001989e_f * (x**43) + 
            L0x200198a0_f * (x**44) + L0x200198a2_f * (x**45) + 
            L0x200198a4_f * (x**46) + L0x200198a6_f * (x**47) + 
            L0x200198a8_f * (x**48) + L0x200198aa_f * (x**49) + 
            L0x200198ac_f * (x**50) + L0x200198ae_f * (x**51) + 
            L0x200198b0_f * (x**52) + L0x200198b2_f * (x**53) + 
            L0x200198b4_f * (x**54) + L0x200198b6_f * (x**55) + 
            L0x200198b8_f * (x**56) + L0x200198ba_f * (x**57) + 
            L0x200198bc_f * (x**58) + L0x200198be_f * (x**59) + 
            L0x200198c0_f * (x**60) + L0x200198c2_f * (x**61) + 
            L0x200198c4_f * (x**62) + L0x200198c6_f * (x**63) + 
            L0x200198c8_f * (x**64) + L0x200198ca_f * (x**65) + 
            L0x200198cc_f * (x**66) + L0x200198ce_f * (x**67) + 
            L0x200198d0_f * (x**68) + L0x200198d2_f * (x**69) + 
            L0x200198d4_f * (x**70) + L0x200198d6_f * (x**71) + 
            L0x200198d8_f * (x**72) + L0x200198da_f * (x**73) + 
            L0x200198dc_f * (x**74) + L0x200198de_f * (x**75) + 
            L0x200198e0_f * (x**76) + L0x200198e2_f * (x**77) + 
            L0x200198e4_f * (x**78) + L0x200198e6_f * (x**79) + 
            L0x200198e8_f * (x**80) + L0x200198ea_f * (x**81) + 
            L0x200198ec_f * (x**82) + L0x200198ee_f * (x**83) + 
            L0x200198f0_f * (x**84) + L0x200198f2_f * (x**85) + 
            L0x200198f4_f * (x**86) + L0x200198f6_f * (x**87) + 
            L0x200198f8_f * (x**88) + L0x200198fa_f * (x**89) + 
            L0x200198fc_f * (x**90) + L0x200198fe_f * (x**91) + 
            L0x20019900_f * (x**92) + L0x20019902_f * (x**93) + 
            L0x20019904_f * (x**94) + L0x20019906_f * (x**95) + 
            L0x20019908_f * (x**96) + L0x2001990a_f * (x**97) + 
            L0x2001990c_f * (x**98) + L0x2001990e_f * (x**99) + 
            L0x20019910_f * (x**100) + L0x20019912_f * (x**101) + 
            L0x20019914_f * (x**102) + L0x20019916_f * (x**103) + 
            L0x20019918_f * (x**104) + L0x2001991a_f * (x**105) + 
            L0x2001991c_f * (x**106) + L0x2001991e_f * (x**107) + 
            L0x20019920_f * (x**108) + L0x20019922_f * (x**109) + 
            L0x20019924_f * (x**110) + L0x20019926_f * (x**111) + 
            L0x20019928_f * (x**112) + L0x2001992a_f * (x**113) + 
            L0x2001992c_f * (x**114) + L0x2001992e_f * (x**115) + 
            L0x20019930_f * (x**116) + L0x20019932_f * (x**117) + 
            L0x20019934_f * (x**118) + L0x20019936_f * (x**119) + 
            L0x20019938_f * (x**120) + L0x2001993a_f * (x**121) + 
            L0x2001993c_f * (x**122) + L0x2001993e_f * (x**123) + 
            L0x20019940_f * (x**124) + L0x20019942_f * (x**125) + 
            L0x20019944_f * (x**126) + L0x20019946_f * (x**127) + 
            L0x20019948_f * (x**128) + L0x2001994a_f * (x**129) + 
            L0x2001994c_f * (x**130) + L0x2001994e_f * (x**131) + 
            L0x20019950_f * (x**132) + L0x20019952_f * (x**133) + 
            L0x20019954_f * (x**134) + L0x20019956_f * (x**135) + 
            L0x20019958_f * (x**136) + L0x2001995a_f * (x**137) + 
            L0x2001995c_f * (x**138) + L0x2001995e_f * (x**139) + 
            L0x20019960_f * (x**140) + L0x20019962_f * (x**141) + 
            L0x20019964_f * (x**142) + L0x20019966_f * (x**143) + 
            L0x20019968_f * (x**144) + L0x2001996a_f * (x**145) + 
            L0x2001996c_f * (x**146) + L0x2001996e_f * (x**147) + 
            L0x20019970_f * (x**148) + L0x20019972_f * (x**149) + 
            L0x20019974_f * (x**150) + L0x20019976_f * (x**151) + 
            L0x20019978_f * (x**152) + L0x2001997a_f * (x**153) + 
            L0x2001997c_f * (x**154) + L0x2001997e_f * (x**155) + 
            L0x20019980_f * (x**156) + L0x20019982_f * (x**157) + 
            L0x20019984_f * (x**158) + L0x20019986_f * (x**159) + 
            L0x20019988_f * (x**160) + L0x2001998a_f * (x**161) + 
            L0x2001998c_f * (x**162) + L0x2001998e_f * (x**163) + 
            L0x20019990_f * (x**164) + L0x20019992_f * (x**165) + 
            L0x20019994_f * (x**166) + L0x20019996_f * (x**167) + 
            L0x20019998_f * (x**168) + L0x2001999a_f * (x**169) + 
            L0x2001999c_f * (x**170) + L0x2001999e_f * (x**171) + 
            L0x200199a0_f * (x**172) + L0x200199a2_f * (x**173) + 
            L0x200199a4_f * (x**174) + L0x200199a6_f * (x**175) + 
            L0x200199a8_f * (x**176) + L0x200199aa_f * (x**177) + 
            L0x200199ac_f * (x**178) + L0x200199ae_f * (x**179) + 
            L0x200199b0_f * (x**180) + L0x200199b2_f * (x**181) + 
            L0x200199b4_f * (x**182) + L0x200199b6_f * (x**183) + 
            L0x200199b8_f * (x**184) + L0x200199ba_f * (x**185) + 
            L0x200199bc_f * (x**186) + L0x200199be_f * (x**187) + 
            L0x200199c0_f * (x**188) + L0x200199c2_f * (x**189) + 
            L0x200199c4_f * (x**190) + L0x200199c6_f * (x**191) + 
            L0x200199c8_f * (x**192) + L0x200199ca_f * (x**193) + 
            L0x200199cc_f * (x**194) + L0x200199ce_f * (x**195) + 
            L0x200199d0_f * (x**196) + L0x200199d2_f * (x**197) + 
            L0x200199d4_f * (x**198) + L0x200199d6_f * (x**199) + 
            L0x200199d8_f * (x**200) + L0x200199da_f * (x**201) + 
            L0x200199dc_f * (x**202) + L0x200199de_f * (x**203) + 
            L0x200199e0_f * (x**204) + L0x200199e2_f * (x**205) + 
            L0x200199e4_f * (x**206) + L0x200199e6_f * (x**207) + 
            L0x200199e8_f * (x**208) + L0x200199ea_f * (x**209) + 
            L0x200199ec_f * (x**210) + L0x200199ee_f * (x**211) + 
            L0x200199f0_f * (x**212) + L0x200199f2_f * (x**213) + 
            L0x200199f4_f * (x**214) + L0x200199f6_f * (x**215) + 
            L0x200199f8_f * (x**216) + L0x200199fa_f * (x**217) + 
            L0x200199fc_f * (x**218) + L0x200199fe_f * (x**219) + 
            L0x20019a00_f * (x**220) + L0x20019a02_f * (x**221) + 
            L0x20019a04_f * (x**222) + L0x20019a06_f * (x**223) + 
            L0x20019a08_f * (x**224) + L0x20019a0a_f * (x**225) + 
            L0x20019a0c_f * (x**226) + L0x20019a0e_f * (x**227) + 
            L0x20019a10_f * (x**228) + L0x20019a12_f * (x**229) + 
            L0x20019a14_f * (x**230) + L0x20019a16_f * (x**231) + 
            L0x20019a18_f * (x**232) + L0x20019a1a_f * (x**233) + 
            L0x20019a1c_f * (x**234) + L0x20019a1e_f * (x**235) + 
            L0x20019a20_f * (x**236) + L0x20019a22_f * (x**237) + 
            L0x20019a24_f * (x**238) + L0x20019a26_f * (x**239) + 
            L0x20019a28_f * (x**240) + L0x20019a2a_f * (x**241) + 
            L0x20019a2c_f * (x**242) + L0x20019a2e_f * (x**243) + 
            L0x20019a30_f * (x**244) + L0x20019a32_f * (x**245) + 
            L0x20019a34_f * (x**246) + L0x20019a36_f * (x**247) + 
            L0x20019a38_f * (x**248) + L0x20019a3a_f * (x**249) + 
            L0x20019a3c_f * (x**250) + L0x20019a3e_f * (x**251) + 
            L0x20019a40_f * (x**252) + L0x20019a42_f * (x**253) + 
            L0x20019a44_f * (x**254) + L0x20019a46_f * (x**255)
          )
          [25570049, x**4 - 21713494],
    (* inp_poly_17 *)
    eqmod (2**32) * (inp_poly_17 * inp_poly_17)
          (
            L0x20019848_f * (x**0) + L0x2001984a_f * (x**1) + 
            L0x2001984c_f * (x**2) + L0x2001984e_f * (x**3) + 
            L0x20019850_f * (x**4) + L0x20019852_f * (x**5) + 
            L0x20019854_f * (x**6) + L0x20019856_f * (x**7) + 
            L0x20019858_f * (x**8) + L0x2001985a_f * (x**9) + 
            L0x2001985c_f * (x**10) + L0x2001985e_f * (x**11) + 
            L0x20019860_f * (x**12) + L0x20019862_f * (x**13) + 
            L0x20019864_f * (x**14) + L0x20019866_f * (x**15) + 
            L0x20019868_f * (x**16) + L0x2001986a_f * (x**17) + 
            L0x2001986c_f * (x**18) + L0x2001986e_f * (x**19) + 
            L0x20019870_f * (x**20) + L0x20019872_f * (x**21) + 
            L0x20019874_f * (x**22) + L0x20019876_f * (x**23) + 
            L0x20019878_f * (x**24) + L0x2001987a_f * (x**25) + 
            L0x2001987c_f * (x**26) + L0x2001987e_f * (x**27) + 
            L0x20019880_f * (x**28) + L0x20019882_f * (x**29) + 
            L0x20019884_f * (x**30) + L0x20019886_f * (x**31) + 
            L0x20019888_f * (x**32) + L0x2001988a_f * (x**33) + 
            L0x2001988c_f * (x**34) + L0x2001988e_f * (x**35) + 
            L0x20019890_f * (x**36) + L0x20019892_f * (x**37) + 
            L0x20019894_f * (x**38) + L0x20019896_f * (x**39) + 
            L0x20019898_f * (x**40) + L0x2001989a_f * (x**41) + 
            L0x2001989c_f * (x**42) + L0x2001989e_f * (x**43) + 
            L0x200198a0_f * (x**44) + L0x200198a2_f * (x**45) + 
            L0x200198a4_f * (x**46) + L0x200198a6_f * (x**47) + 
            L0x200198a8_f * (x**48) + L0x200198aa_f * (x**49) + 
            L0x200198ac_f * (x**50) + L0x200198ae_f * (x**51) + 
            L0x200198b0_f * (x**52) + L0x200198b2_f * (x**53) + 
            L0x200198b4_f * (x**54) + L0x200198b6_f * (x**55) + 
            L0x200198b8_f * (x**56) + L0x200198ba_f * (x**57) + 
            L0x200198bc_f * (x**58) + L0x200198be_f * (x**59) + 
            L0x200198c0_f * (x**60) + L0x200198c2_f * (x**61) + 
            L0x200198c4_f * (x**62) + L0x200198c6_f * (x**63) + 
            L0x200198c8_f * (x**64) + L0x200198ca_f * (x**65) + 
            L0x200198cc_f * (x**66) + L0x200198ce_f * (x**67) + 
            L0x200198d0_f * (x**68) + L0x200198d2_f * (x**69) + 
            L0x200198d4_f * (x**70) + L0x200198d6_f * (x**71) + 
            L0x200198d8_f * (x**72) + L0x200198da_f * (x**73) + 
            L0x200198dc_f * (x**74) + L0x200198de_f * (x**75) + 
            L0x200198e0_f * (x**76) + L0x200198e2_f * (x**77) + 
            L0x200198e4_f * (x**78) + L0x200198e6_f * (x**79) + 
            L0x200198e8_f * (x**80) + L0x200198ea_f * (x**81) + 
            L0x200198ec_f * (x**82) + L0x200198ee_f * (x**83) + 
            L0x200198f0_f * (x**84) + L0x200198f2_f * (x**85) + 
            L0x200198f4_f * (x**86) + L0x200198f6_f * (x**87) + 
            L0x200198f8_f * (x**88) + L0x200198fa_f * (x**89) + 
            L0x200198fc_f * (x**90) + L0x200198fe_f * (x**91) + 
            L0x20019900_f * (x**92) + L0x20019902_f * (x**93) + 
            L0x20019904_f * (x**94) + L0x20019906_f * (x**95) + 
            L0x20019908_f * (x**96) + L0x2001990a_f * (x**97) + 
            L0x2001990c_f * (x**98) + L0x2001990e_f * (x**99) + 
            L0x20019910_f * (x**100) + L0x20019912_f * (x**101) + 
            L0x20019914_f * (x**102) + L0x20019916_f * (x**103) + 
            L0x20019918_f * (x**104) + L0x2001991a_f * (x**105) + 
            L0x2001991c_f * (x**106) + L0x2001991e_f * (x**107) + 
            L0x20019920_f * (x**108) + L0x20019922_f * (x**109) + 
            L0x20019924_f * (x**110) + L0x20019926_f * (x**111) + 
            L0x20019928_f * (x**112) + L0x2001992a_f * (x**113) + 
            L0x2001992c_f * (x**114) + L0x2001992e_f * (x**115) + 
            L0x20019930_f * (x**116) + L0x20019932_f * (x**117) + 
            L0x20019934_f * (x**118) + L0x20019936_f * (x**119) + 
            L0x20019938_f * (x**120) + L0x2001993a_f * (x**121) + 
            L0x2001993c_f * (x**122) + L0x2001993e_f * (x**123) + 
            L0x20019940_f * (x**124) + L0x20019942_f * (x**125) + 
            L0x20019944_f * (x**126) + L0x20019946_f * (x**127) + 
            L0x20019948_f * (x**128) + L0x2001994a_f * (x**129) + 
            L0x2001994c_f * (x**130) + L0x2001994e_f * (x**131) + 
            L0x20019950_f * (x**132) + L0x20019952_f * (x**133) + 
            L0x20019954_f * (x**134) + L0x20019956_f * (x**135) + 
            L0x20019958_f * (x**136) + L0x2001995a_f * (x**137) + 
            L0x2001995c_f * (x**138) + L0x2001995e_f * (x**139) + 
            L0x20019960_f * (x**140) + L0x20019962_f * (x**141) + 
            L0x20019964_f * (x**142) + L0x20019966_f * (x**143) + 
            L0x20019968_f * (x**144) + L0x2001996a_f * (x**145) + 
            L0x2001996c_f * (x**146) + L0x2001996e_f * (x**147) + 
            L0x20019970_f * (x**148) + L0x20019972_f * (x**149) + 
            L0x20019974_f * (x**150) + L0x20019976_f * (x**151) + 
            L0x20019978_f * (x**152) + L0x2001997a_f * (x**153) + 
            L0x2001997c_f * (x**154) + L0x2001997e_f * (x**155) + 
            L0x20019980_f * (x**156) + L0x20019982_f * (x**157) + 
            L0x20019984_f * (x**158) + L0x20019986_f * (x**159) + 
            L0x20019988_f * (x**160) + L0x2001998a_f * (x**161) + 
            L0x2001998c_f * (x**162) + L0x2001998e_f * (x**163) + 
            L0x20019990_f * (x**164) + L0x20019992_f * (x**165) + 
            L0x20019994_f * (x**166) + L0x20019996_f * (x**167) + 
            L0x20019998_f * (x**168) + L0x2001999a_f * (x**169) + 
            L0x2001999c_f * (x**170) + L0x2001999e_f * (x**171) + 
            L0x200199a0_f * (x**172) + L0x200199a2_f * (x**173) + 
            L0x200199a4_f * (x**174) + L0x200199a6_f * (x**175) + 
            L0x200199a8_f * (x**176) + L0x200199aa_f * (x**177) + 
            L0x200199ac_f * (x**178) + L0x200199ae_f * (x**179) + 
            L0x200199b0_f * (x**180) + L0x200199b2_f * (x**181) + 
            L0x200199b4_f * (x**182) + L0x200199b6_f * (x**183) + 
            L0x200199b8_f * (x**184) + L0x200199ba_f * (x**185) + 
            L0x200199bc_f * (x**186) + L0x200199be_f * (x**187) + 
            L0x200199c0_f * (x**188) + L0x200199c2_f * (x**189) + 
            L0x200199c4_f * (x**190) + L0x200199c6_f * (x**191) + 
            L0x200199c8_f * (x**192) + L0x200199ca_f * (x**193) + 
            L0x200199cc_f * (x**194) + L0x200199ce_f * (x**195) + 
            L0x200199d0_f * (x**196) + L0x200199d2_f * (x**197) + 
            L0x200199d4_f * (x**198) + L0x200199d6_f * (x**199) + 
            L0x200199d8_f * (x**200) + L0x200199da_f * (x**201) + 
            L0x200199dc_f * (x**202) + L0x200199de_f * (x**203) + 
            L0x200199e0_f * (x**204) + L0x200199e2_f * (x**205) + 
            L0x200199e4_f * (x**206) + L0x200199e6_f * (x**207) + 
            L0x200199e8_f * (x**208) + L0x200199ea_f * (x**209) + 
            L0x200199ec_f * (x**210) + L0x200199ee_f * (x**211) + 
            L0x200199f0_f * (x**212) + L0x200199f2_f * (x**213) + 
            L0x200199f4_f * (x**214) + L0x200199f6_f * (x**215) + 
            L0x200199f8_f * (x**216) + L0x200199fa_f * (x**217) + 
            L0x200199fc_f * (x**218) + L0x200199fe_f * (x**219) + 
            L0x20019a00_f * (x**220) + L0x20019a02_f * (x**221) + 
            L0x20019a04_f * (x**222) + L0x20019a06_f * (x**223) + 
            L0x20019a08_f * (x**224) + L0x20019a0a_f * (x**225) + 
            L0x20019a0c_f * (x**226) + L0x20019a0e_f * (x**227) + 
            L0x20019a10_f * (x**228) + L0x20019a12_f * (x**229) + 
            L0x20019a14_f * (x**230) + L0x20019a16_f * (x**231) + 
            L0x20019a18_f * (x**232) + L0x20019a1a_f * (x**233) + 
            L0x20019a1c_f * (x**234) + L0x20019a1e_f * (x**235) + 
            L0x20019a20_f * (x**236) + L0x20019a22_f * (x**237) + 
            L0x20019a24_f * (x**238) + L0x20019a26_f * (x**239) + 
            L0x20019a28_f * (x**240) + L0x20019a2a_f * (x**241) + 
            L0x20019a2c_f * (x**242) + L0x20019a2e_f * (x**243) + 
            L0x20019a30_f * (x**244) + L0x20019a32_f * (x**245) + 
            L0x20019a34_f * (x**246) + L0x20019a36_f * (x**247) + 
            L0x20019a38_f * (x**248) + L0x20019a3a_f * (x**249) + 
            L0x20019a3c_f * (x**250) + L0x20019a3e_f * (x**251) + 
            L0x20019a40_f * (x**252) + L0x20019a42_f * (x**253) + 
            L0x20019a44_f * (x**254) + L0x20019a46_f * (x**255)
          )
          [25570049, x**4 - 3856555],
    (* inp_poly_18 *)
    eqmod (2**32) * (inp_poly_18 * inp_poly_18)
          (
            L0x20019848_f * (x**0) + L0x2001984a_f * (x**1) + 
            L0x2001984c_f * (x**2) + L0x2001984e_f * (x**3) + 
            L0x20019850_f * (x**4) + L0x20019852_f * (x**5) + 
            L0x20019854_f * (x**6) + L0x20019856_f * (x**7) + 
            L0x20019858_f * (x**8) + L0x2001985a_f * (x**9) + 
            L0x2001985c_f * (x**10) + L0x2001985e_f * (x**11) + 
            L0x20019860_f * (x**12) + L0x20019862_f * (x**13) + 
            L0x20019864_f * (x**14) + L0x20019866_f * (x**15) + 
            L0x20019868_f * (x**16) + L0x2001986a_f * (x**17) + 
            L0x2001986c_f * (x**18) + L0x2001986e_f * (x**19) + 
            L0x20019870_f * (x**20) + L0x20019872_f * (x**21) + 
            L0x20019874_f * (x**22) + L0x20019876_f * (x**23) + 
            L0x20019878_f * (x**24) + L0x2001987a_f * (x**25) + 
            L0x2001987c_f * (x**26) + L0x2001987e_f * (x**27) + 
            L0x20019880_f * (x**28) + L0x20019882_f * (x**29) + 
            L0x20019884_f * (x**30) + L0x20019886_f * (x**31) + 
            L0x20019888_f * (x**32) + L0x2001988a_f * (x**33) + 
            L0x2001988c_f * (x**34) + L0x2001988e_f * (x**35) + 
            L0x20019890_f * (x**36) + L0x20019892_f * (x**37) + 
            L0x20019894_f * (x**38) + L0x20019896_f * (x**39) + 
            L0x20019898_f * (x**40) + L0x2001989a_f * (x**41) + 
            L0x2001989c_f * (x**42) + L0x2001989e_f * (x**43) + 
            L0x200198a0_f * (x**44) + L0x200198a2_f * (x**45) + 
            L0x200198a4_f * (x**46) + L0x200198a6_f * (x**47) + 
            L0x200198a8_f * (x**48) + L0x200198aa_f * (x**49) + 
            L0x200198ac_f * (x**50) + L0x200198ae_f * (x**51) + 
            L0x200198b0_f * (x**52) + L0x200198b2_f * (x**53) + 
            L0x200198b4_f * (x**54) + L0x200198b6_f * (x**55) + 
            L0x200198b8_f * (x**56) + L0x200198ba_f * (x**57) + 
            L0x200198bc_f * (x**58) + L0x200198be_f * (x**59) + 
            L0x200198c0_f * (x**60) + L0x200198c2_f * (x**61) + 
            L0x200198c4_f * (x**62) + L0x200198c6_f * (x**63) + 
            L0x200198c8_f * (x**64) + L0x200198ca_f * (x**65) + 
            L0x200198cc_f * (x**66) + L0x200198ce_f * (x**67) + 
            L0x200198d0_f * (x**68) + L0x200198d2_f * (x**69) + 
            L0x200198d4_f * (x**70) + L0x200198d6_f * (x**71) + 
            L0x200198d8_f * (x**72) + L0x200198da_f * (x**73) + 
            L0x200198dc_f * (x**74) + L0x200198de_f * (x**75) + 
            L0x200198e0_f * (x**76) + L0x200198e2_f * (x**77) + 
            L0x200198e4_f * (x**78) + L0x200198e6_f * (x**79) + 
            L0x200198e8_f * (x**80) + L0x200198ea_f * (x**81) + 
            L0x200198ec_f * (x**82) + L0x200198ee_f * (x**83) + 
            L0x200198f0_f * (x**84) + L0x200198f2_f * (x**85) + 
            L0x200198f4_f * (x**86) + L0x200198f6_f * (x**87) + 
            L0x200198f8_f * (x**88) + L0x200198fa_f * (x**89) + 
            L0x200198fc_f * (x**90) + L0x200198fe_f * (x**91) + 
            L0x20019900_f * (x**92) + L0x20019902_f * (x**93) + 
            L0x20019904_f * (x**94) + L0x20019906_f * (x**95) + 
            L0x20019908_f * (x**96) + L0x2001990a_f * (x**97) + 
            L0x2001990c_f * (x**98) + L0x2001990e_f * (x**99) + 
            L0x20019910_f * (x**100) + L0x20019912_f * (x**101) + 
            L0x20019914_f * (x**102) + L0x20019916_f * (x**103) + 
            L0x20019918_f * (x**104) + L0x2001991a_f * (x**105) + 
            L0x2001991c_f * (x**106) + L0x2001991e_f * (x**107) + 
            L0x20019920_f * (x**108) + L0x20019922_f * (x**109) + 
            L0x20019924_f * (x**110) + L0x20019926_f * (x**111) + 
            L0x20019928_f * (x**112) + L0x2001992a_f * (x**113) + 
            L0x2001992c_f * (x**114) + L0x2001992e_f * (x**115) + 
            L0x20019930_f * (x**116) + L0x20019932_f * (x**117) + 
            L0x20019934_f * (x**118) + L0x20019936_f * (x**119) + 
            L0x20019938_f * (x**120) + L0x2001993a_f * (x**121) + 
            L0x2001993c_f * (x**122) + L0x2001993e_f * (x**123) + 
            L0x20019940_f * (x**124) + L0x20019942_f * (x**125) + 
            L0x20019944_f * (x**126) + L0x20019946_f * (x**127) + 
            L0x20019948_f * (x**128) + L0x2001994a_f * (x**129) + 
            L0x2001994c_f * (x**130) + L0x2001994e_f * (x**131) + 
            L0x20019950_f * (x**132) + L0x20019952_f * (x**133) + 
            L0x20019954_f * (x**134) + L0x20019956_f * (x**135) + 
            L0x20019958_f * (x**136) + L0x2001995a_f * (x**137) + 
            L0x2001995c_f * (x**138) + L0x2001995e_f * (x**139) + 
            L0x20019960_f * (x**140) + L0x20019962_f * (x**141) + 
            L0x20019964_f * (x**142) + L0x20019966_f * (x**143) + 
            L0x20019968_f * (x**144) + L0x2001996a_f * (x**145) + 
            L0x2001996c_f * (x**146) + L0x2001996e_f * (x**147) + 
            L0x20019970_f * (x**148) + L0x20019972_f * (x**149) + 
            L0x20019974_f * (x**150) + L0x20019976_f * (x**151) + 
            L0x20019978_f * (x**152) + L0x2001997a_f * (x**153) + 
            L0x2001997c_f * (x**154) + L0x2001997e_f * (x**155) + 
            L0x20019980_f * (x**156) + L0x20019982_f * (x**157) + 
            L0x20019984_f * (x**158) + L0x20019986_f * (x**159) + 
            L0x20019988_f * (x**160) + L0x2001998a_f * (x**161) + 
            L0x2001998c_f * (x**162) + L0x2001998e_f * (x**163) + 
            L0x20019990_f * (x**164) + L0x20019992_f * (x**165) + 
            L0x20019994_f * (x**166) + L0x20019996_f * (x**167) + 
            L0x20019998_f * (x**168) + L0x2001999a_f * (x**169) + 
            L0x2001999c_f * (x**170) + L0x2001999e_f * (x**171) + 
            L0x200199a0_f * (x**172) + L0x200199a2_f * (x**173) + 
            L0x200199a4_f * (x**174) + L0x200199a6_f * (x**175) + 
            L0x200199a8_f * (x**176) + L0x200199aa_f * (x**177) + 
            L0x200199ac_f * (x**178) + L0x200199ae_f * (x**179) + 
            L0x200199b0_f * (x**180) + L0x200199b2_f * (x**181) + 
            L0x200199b4_f * (x**182) + L0x200199b6_f * (x**183) + 
            L0x200199b8_f * (x**184) + L0x200199ba_f * (x**185) + 
            L0x200199bc_f * (x**186) + L0x200199be_f * (x**187) + 
            L0x200199c0_f * (x**188) + L0x200199c2_f * (x**189) + 
            L0x200199c4_f * (x**190) + L0x200199c6_f * (x**191) + 
            L0x200199c8_f * (x**192) + L0x200199ca_f * (x**193) + 
            L0x200199cc_f * (x**194) + L0x200199ce_f * (x**195) + 
            L0x200199d0_f * (x**196) + L0x200199d2_f * (x**197) + 
            L0x200199d4_f * (x**198) + L0x200199d6_f * (x**199) + 
            L0x200199d8_f * (x**200) + L0x200199da_f * (x**201) + 
            L0x200199dc_f * (x**202) + L0x200199de_f * (x**203) + 
            L0x200199e0_f * (x**204) + L0x200199e2_f * (x**205) + 
            L0x200199e4_f * (x**206) + L0x200199e6_f * (x**207) + 
            L0x200199e8_f * (x**208) + L0x200199ea_f * (x**209) + 
            L0x200199ec_f * (x**210) + L0x200199ee_f * (x**211) + 
            L0x200199f0_f * (x**212) + L0x200199f2_f * (x**213) + 
            L0x200199f4_f * (x**214) + L0x200199f6_f * (x**215) + 
            L0x200199f8_f * (x**216) + L0x200199fa_f * (x**217) + 
            L0x200199fc_f * (x**218) + L0x200199fe_f * (x**219) + 
            L0x20019a00_f * (x**220) + L0x20019a02_f * (x**221) + 
            L0x20019a04_f * (x**222) + L0x20019a06_f * (x**223) + 
            L0x20019a08_f * (x**224) + L0x20019a0a_f * (x**225) + 
            L0x20019a0c_f * (x**226) + L0x20019a0e_f * (x**227) + 
            L0x20019a10_f * (x**228) + L0x20019a12_f * (x**229) + 
            L0x20019a14_f * (x**230) + L0x20019a16_f * (x**231) + 
            L0x20019a18_f * (x**232) + L0x20019a1a_f * (x**233) + 
            L0x20019a1c_f * (x**234) + L0x20019a1e_f * (x**235) + 
            L0x20019a20_f * (x**236) + L0x20019a22_f * (x**237) + 
            L0x20019a24_f * (x**238) + L0x20019a26_f * (x**239) + 
            L0x20019a28_f * (x**240) + L0x20019a2a_f * (x**241) + 
            L0x20019a2c_f * (x**242) + L0x20019a2e_f * (x**243) + 
            L0x20019a30_f * (x**244) + L0x20019a32_f * (x**245) + 
            L0x20019a34_f * (x**246) + L0x20019a36_f * (x**247) + 
            L0x20019a38_f * (x**248) + L0x20019a3a_f * (x**249) + 
            L0x20019a3c_f * (x**250) + L0x20019a3e_f * (x**251) + 
            L0x20019a40_f * (x**252) + L0x20019a42_f * (x**253) + 
            L0x20019a44_f * (x**254) + L0x20019a46_f * (x**255)
          )
          [25570049, x**4 - 23159929],
    (* inp_poly_19 *)
    eqmod (2**32) * (inp_poly_19 * inp_poly_19)
          (
            L0x20019848_f * (x**0) + L0x2001984a_f * (x**1) + 
            L0x2001984c_f * (x**2) + L0x2001984e_f * (x**3) + 
            L0x20019850_f * (x**4) + L0x20019852_f * (x**5) + 
            L0x20019854_f * (x**6) + L0x20019856_f * (x**7) + 
            L0x20019858_f * (x**8) + L0x2001985a_f * (x**9) + 
            L0x2001985c_f * (x**10) + L0x2001985e_f * (x**11) + 
            L0x20019860_f * (x**12) + L0x20019862_f * (x**13) + 
            L0x20019864_f * (x**14) + L0x20019866_f * (x**15) + 
            L0x20019868_f * (x**16) + L0x2001986a_f * (x**17) + 
            L0x2001986c_f * (x**18) + L0x2001986e_f * (x**19) + 
            L0x20019870_f * (x**20) + L0x20019872_f * (x**21) + 
            L0x20019874_f * (x**22) + L0x20019876_f * (x**23) + 
            L0x20019878_f * (x**24) + L0x2001987a_f * (x**25) + 
            L0x2001987c_f * (x**26) + L0x2001987e_f * (x**27) + 
            L0x20019880_f * (x**28) + L0x20019882_f * (x**29) + 
            L0x20019884_f * (x**30) + L0x20019886_f * (x**31) + 
            L0x20019888_f * (x**32) + L0x2001988a_f * (x**33) + 
            L0x2001988c_f * (x**34) + L0x2001988e_f * (x**35) + 
            L0x20019890_f * (x**36) + L0x20019892_f * (x**37) + 
            L0x20019894_f * (x**38) + L0x20019896_f * (x**39) + 
            L0x20019898_f * (x**40) + L0x2001989a_f * (x**41) + 
            L0x2001989c_f * (x**42) + L0x2001989e_f * (x**43) + 
            L0x200198a0_f * (x**44) + L0x200198a2_f * (x**45) + 
            L0x200198a4_f * (x**46) + L0x200198a6_f * (x**47) + 
            L0x200198a8_f * (x**48) + L0x200198aa_f * (x**49) + 
            L0x200198ac_f * (x**50) + L0x200198ae_f * (x**51) + 
            L0x200198b0_f * (x**52) + L0x200198b2_f * (x**53) + 
            L0x200198b4_f * (x**54) + L0x200198b6_f * (x**55) + 
            L0x200198b8_f * (x**56) + L0x200198ba_f * (x**57) + 
            L0x200198bc_f * (x**58) + L0x200198be_f * (x**59) + 
            L0x200198c0_f * (x**60) + L0x200198c2_f * (x**61) + 
            L0x200198c4_f * (x**62) + L0x200198c6_f * (x**63) + 
            L0x200198c8_f * (x**64) + L0x200198ca_f * (x**65) + 
            L0x200198cc_f * (x**66) + L0x200198ce_f * (x**67) + 
            L0x200198d0_f * (x**68) + L0x200198d2_f * (x**69) + 
            L0x200198d4_f * (x**70) + L0x200198d6_f * (x**71) + 
            L0x200198d8_f * (x**72) + L0x200198da_f * (x**73) + 
            L0x200198dc_f * (x**74) + L0x200198de_f * (x**75) + 
            L0x200198e0_f * (x**76) + L0x200198e2_f * (x**77) + 
            L0x200198e4_f * (x**78) + L0x200198e6_f * (x**79) + 
            L0x200198e8_f * (x**80) + L0x200198ea_f * (x**81) + 
            L0x200198ec_f * (x**82) + L0x200198ee_f * (x**83) + 
            L0x200198f0_f * (x**84) + L0x200198f2_f * (x**85) + 
            L0x200198f4_f * (x**86) + L0x200198f6_f * (x**87) + 
            L0x200198f8_f * (x**88) + L0x200198fa_f * (x**89) + 
            L0x200198fc_f * (x**90) + L0x200198fe_f * (x**91) + 
            L0x20019900_f * (x**92) + L0x20019902_f * (x**93) + 
            L0x20019904_f * (x**94) + L0x20019906_f * (x**95) + 
            L0x20019908_f * (x**96) + L0x2001990a_f * (x**97) + 
            L0x2001990c_f * (x**98) + L0x2001990e_f * (x**99) + 
            L0x20019910_f * (x**100) + L0x20019912_f * (x**101) + 
            L0x20019914_f * (x**102) + L0x20019916_f * (x**103) + 
            L0x20019918_f * (x**104) + L0x2001991a_f * (x**105) + 
            L0x2001991c_f * (x**106) + L0x2001991e_f * (x**107) + 
            L0x20019920_f * (x**108) + L0x20019922_f * (x**109) + 
            L0x20019924_f * (x**110) + L0x20019926_f * (x**111) + 
            L0x20019928_f * (x**112) + L0x2001992a_f * (x**113) + 
            L0x2001992c_f * (x**114) + L0x2001992e_f * (x**115) + 
            L0x20019930_f * (x**116) + L0x20019932_f * (x**117) + 
            L0x20019934_f * (x**118) + L0x20019936_f * (x**119) + 
            L0x20019938_f * (x**120) + L0x2001993a_f * (x**121) + 
            L0x2001993c_f * (x**122) + L0x2001993e_f * (x**123) + 
            L0x20019940_f * (x**124) + L0x20019942_f * (x**125) + 
            L0x20019944_f * (x**126) + L0x20019946_f * (x**127) + 
            L0x20019948_f * (x**128) + L0x2001994a_f * (x**129) + 
            L0x2001994c_f * (x**130) + L0x2001994e_f * (x**131) + 
            L0x20019950_f * (x**132) + L0x20019952_f * (x**133) + 
            L0x20019954_f * (x**134) + L0x20019956_f * (x**135) + 
            L0x20019958_f * (x**136) + L0x2001995a_f * (x**137) + 
            L0x2001995c_f * (x**138) + L0x2001995e_f * (x**139) + 
            L0x20019960_f * (x**140) + L0x20019962_f * (x**141) + 
            L0x20019964_f * (x**142) + L0x20019966_f * (x**143) + 
            L0x20019968_f * (x**144) + L0x2001996a_f * (x**145) + 
            L0x2001996c_f * (x**146) + L0x2001996e_f * (x**147) + 
            L0x20019970_f * (x**148) + L0x20019972_f * (x**149) + 
            L0x20019974_f * (x**150) + L0x20019976_f * (x**151) + 
            L0x20019978_f * (x**152) + L0x2001997a_f * (x**153) + 
            L0x2001997c_f * (x**154) + L0x2001997e_f * (x**155) + 
            L0x20019980_f * (x**156) + L0x20019982_f * (x**157) + 
            L0x20019984_f * (x**158) + L0x20019986_f * (x**159) + 
            L0x20019988_f * (x**160) + L0x2001998a_f * (x**161) + 
            L0x2001998c_f * (x**162) + L0x2001998e_f * (x**163) + 
            L0x20019990_f * (x**164) + L0x20019992_f * (x**165) + 
            L0x20019994_f * (x**166) + L0x20019996_f * (x**167) + 
            L0x20019998_f * (x**168) + L0x2001999a_f * (x**169) + 
            L0x2001999c_f * (x**170) + L0x2001999e_f * (x**171) + 
            L0x200199a0_f * (x**172) + L0x200199a2_f * (x**173) + 
            L0x200199a4_f * (x**174) + L0x200199a6_f * (x**175) + 
            L0x200199a8_f * (x**176) + L0x200199aa_f * (x**177) + 
            L0x200199ac_f * (x**178) + L0x200199ae_f * (x**179) + 
            L0x200199b0_f * (x**180) + L0x200199b2_f * (x**181) + 
            L0x200199b4_f * (x**182) + L0x200199b6_f * (x**183) + 
            L0x200199b8_f * (x**184) + L0x200199ba_f * (x**185) + 
            L0x200199bc_f * (x**186) + L0x200199be_f * (x**187) + 
            L0x200199c0_f * (x**188) + L0x200199c2_f * (x**189) + 
            L0x200199c4_f * (x**190) + L0x200199c6_f * (x**191) + 
            L0x200199c8_f * (x**192) + L0x200199ca_f * (x**193) + 
            L0x200199cc_f * (x**194) + L0x200199ce_f * (x**195) + 
            L0x200199d0_f * (x**196) + L0x200199d2_f * (x**197) + 
            L0x200199d4_f * (x**198) + L0x200199d6_f * (x**199) + 
            L0x200199d8_f * (x**200) + L0x200199da_f * (x**201) + 
            L0x200199dc_f * (x**202) + L0x200199de_f * (x**203) + 
            L0x200199e0_f * (x**204) + L0x200199e2_f * (x**205) + 
            L0x200199e4_f * (x**206) + L0x200199e6_f * (x**207) + 
            L0x200199e8_f * (x**208) + L0x200199ea_f * (x**209) + 
            L0x200199ec_f * (x**210) + L0x200199ee_f * (x**211) + 
            L0x200199f0_f * (x**212) + L0x200199f2_f * (x**213) + 
            L0x200199f4_f * (x**214) + L0x200199f6_f * (x**215) + 
            L0x200199f8_f * (x**216) + L0x200199fa_f * (x**217) + 
            L0x200199fc_f * (x**218) + L0x200199fe_f * (x**219) + 
            L0x20019a00_f * (x**220) + L0x20019a02_f * (x**221) + 
            L0x20019a04_f * (x**222) + L0x20019a06_f * (x**223) + 
            L0x20019a08_f * (x**224) + L0x20019a0a_f * (x**225) + 
            L0x20019a0c_f * (x**226) + L0x20019a0e_f * (x**227) + 
            L0x20019a10_f * (x**228) + L0x20019a12_f * (x**229) + 
            L0x20019a14_f * (x**230) + L0x20019a16_f * (x**231) + 
            L0x20019a18_f * (x**232) + L0x20019a1a_f * (x**233) + 
            L0x20019a1c_f * (x**234) + L0x20019a1e_f * (x**235) + 
            L0x20019a20_f * (x**236) + L0x20019a22_f * (x**237) + 
            L0x20019a24_f * (x**238) + L0x20019a26_f * (x**239) + 
            L0x20019a28_f * (x**240) + L0x20019a2a_f * (x**241) + 
            L0x20019a2c_f * (x**242) + L0x20019a2e_f * (x**243) + 
            L0x20019a30_f * (x**244) + L0x20019a32_f * (x**245) + 
            L0x20019a34_f * (x**246) + L0x20019a36_f * (x**247) + 
            L0x20019a38_f * (x**248) + L0x20019a3a_f * (x**249) + 
            L0x20019a3c_f * (x**250) + L0x20019a3e_f * (x**251) + 
            L0x20019a40_f * (x**252) + L0x20019a42_f * (x**253) + 
            L0x20019a44_f * (x**254) + L0x20019a46_f * (x**255)
          )
          [25570049, x**4 - 2410120],
    (* inp_poly_20 *)
    eqmod (2**32) * (inp_poly_20 * inp_poly_20)
          (
            L0x20019848_f * (x**0) + L0x2001984a_f * (x**1) + 
            L0x2001984c_f * (x**2) + L0x2001984e_f * (x**3) + 
            L0x20019850_f * (x**4) + L0x20019852_f * (x**5) + 
            L0x20019854_f * (x**6) + L0x20019856_f * (x**7) + 
            L0x20019858_f * (x**8) + L0x2001985a_f * (x**9) + 
            L0x2001985c_f * (x**10) + L0x2001985e_f * (x**11) + 
            L0x20019860_f * (x**12) + L0x20019862_f * (x**13) + 
            L0x20019864_f * (x**14) + L0x20019866_f * (x**15) + 
            L0x20019868_f * (x**16) + L0x2001986a_f * (x**17) + 
            L0x2001986c_f * (x**18) + L0x2001986e_f * (x**19) + 
            L0x20019870_f * (x**20) + L0x20019872_f * (x**21) + 
            L0x20019874_f * (x**22) + L0x20019876_f * (x**23) + 
            L0x20019878_f * (x**24) + L0x2001987a_f * (x**25) + 
            L0x2001987c_f * (x**26) + L0x2001987e_f * (x**27) + 
            L0x20019880_f * (x**28) + L0x20019882_f * (x**29) + 
            L0x20019884_f * (x**30) + L0x20019886_f * (x**31) + 
            L0x20019888_f * (x**32) + L0x2001988a_f * (x**33) + 
            L0x2001988c_f * (x**34) + L0x2001988e_f * (x**35) + 
            L0x20019890_f * (x**36) + L0x20019892_f * (x**37) + 
            L0x20019894_f * (x**38) + L0x20019896_f * (x**39) + 
            L0x20019898_f * (x**40) + L0x2001989a_f * (x**41) + 
            L0x2001989c_f * (x**42) + L0x2001989e_f * (x**43) + 
            L0x200198a0_f * (x**44) + L0x200198a2_f * (x**45) + 
            L0x200198a4_f * (x**46) + L0x200198a6_f * (x**47) + 
            L0x200198a8_f * (x**48) + L0x200198aa_f * (x**49) + 
            L0x200198ac_f * (x**50) + L0x200198ae_f * (x**51) + 
            L0x200198b0_f * (x**52) + L0x200198b2_f * (x**53) + 
            L0x200198b4_f * (x**54) + L0x200198b6_f * (x**55) + 
            L0x200198b8_f * (x**56) + L0x200198ba_f * (x**57) + 
            L0x200198bc_f * (x**58) + L0x200198be_f * (x**59) + 
            L0x200198c0_f * (x**60) + L0x200198c2_f * (x**61) + 
            L0x200198c4_f * (x**62) + L0x200198c6_f * (x**63) + 
            L0x200198c8_f * (x**64) + L0x200198ca_f * (x**65) + 
            L0x200198cc_f * (x**66) + L0x200198ce_f * (x**67) + 
            L0x200198d0_f * (x**68) + L0x200198d2_f * (x**69) + 
            L0x200198d4_f * (x**70) + L0x200198d6_f * (x**71) + 
            L0x200198d8_f * (x**72) + L0x200198da_f * (x**73) + 
            L0x200198dc_f * (x**74) + L0x200198de_f * (x**75) + 
            L0x200198e0_f * (x**76) + L0x200198e2_f * (x**77) + 
            L0x200198e4_f * (x**78) + L0x200198e6_f * (x**79) + 
            L0x200198e8_f * (x**80) + L0x200198ea_f * (x**81) + 
            L0x200198ec_f * (x**82) + L0x200198ee_f * (x**83) + 
            L0x200198f0_f * (x**84) + L0x200198f2_f * (x**85) + 
            L0x200198f4_f * (x**86) + L0x200198f6_f * (x**87) + 
            L0x200198f8_f * (x**88) + L0x200198fa_f * (x**89) + 
            L0x200198fc_f * (x**90) + L0x200198fe_f * (x**91) + 
            L0x20019900_f * (x**92) + L0x20019902_f * (x**93) + 
            L0x20019904_f * (x**94) + L0x20019906_f * (x**95) + 
            L0x20019908_f * (x**96) + L0x2001990a_f * (x**97) + 
            L0x2001990c_f * (x**98) + L0x2001990e_f * (x**99) + 
            L0x20019910_f * (x**100) + L0x20019912_f * (x**101) + 
            L0x20019914_f * (x**102) + L0x20019916_f * (x**103) + 
            L0x20019918_f * (x**104) + L0x2001991a_f * (x**105) + 
            L0x2001991c_f * (x**106) + L0x2001991e_f * (x**107) + 
            L0x20019920_f * (x**108) + L0x20019922_f * (x**109) + 
            L0x20019924_f * (x**110) + L0x20019926_f * (x**111) + 
            L0x20019928_f * (x**112) + L0x2001992a_f * (x**113) + 
            L0x2001992c_f * (x**114) + L0x2001992e_f * (x**115) + 
            L0x20019930_f * (x**116) + L0x20019932_f * (x**117) + 
            L0x20019934_f * (x**118) + L0x20019936_f * (x**119) + 
            L0x20019938_f * (x**120) + L0x2001993a_f * (x**121) + 
            L0x2001993c_f * (x**122) + L0x2001993e_f * (x**123) + 
            L0x20019940_f * (x**124) + L0x20019942_f * (x**125) + 
            L0x20019944_f * (x**126) + L0x20019946_f * (x**127) + 
            L0x20019948_f * (x**128) + L0x2001994a_f * (x**129) + 
            L0x2001994c_f * (x**130) + L0x2001994e_f * (x**131) + 
            L0x20019950_f * (x**132) + L0x20019952_f * (x**133) + 
            L0x20019954_f * (x**134) + L0x20019956_f * (x**135) + 
            L0x20019958_f * (x**136) + L0x2001995a_f * (x**137) + 
            L0x2001995c_f * (x**138) + L0x2001995e_f * (x**139) + 
            L0x20019960_f * (x**140) + L0x20019962_f * (x**141) + 
            L0x20019964_f * (x**142) + L0x20019966_f * (x**143) + 
            L0x20019968_f * (x**144) + L0x2001996a_f * (x**145) + 
            L0x2001996c_f * (x**146) + L0x2001996e_f * (x**147) + 
            L0x20019970_f * (x**148) + L0x20019972_f * (x**149) + 
            L0x20019974_f * (x**150) + L0x20019976_f * (x**151) + 
            L0x20019978_f * (x**152) + L0x2001997a_f * (x**153) + 
            L0x2001997c_f * (x**154) + L0x2001997e_f * (x**155) + 
            L0x20019980_f * (x**156) + L0x20019982_f * (x**157) + 
            L0x20019984_f * (x**158) + L0x20019986_f * (x**159) + 
            L0x20019988_f * (x**160) + L0x2001998a_f * (x**161) + 
            L0x2001998c_f * (x**162) + L0x2001998e_f * (x**163) + 
            L0x20019990_f * (x**164) + L0x20019992_f * (x**165) + 
            L0x20019994_f * (x**166) + L0x20019996_f * (x**167) + 
            L0x20019998_f * (x**168) + L0x2001999a_f * (x**169) + 
            L0x2001999c_f * (x**170) + L0x2001999e_f * (x**171) + 
            L0x200199a0_f * (x**172) + L0x200199a2_f * (x**173) + 
            L0x200199a4_f * (x**174) + L0x200199a6_f * (x**175) + 
            L0x200199a8_f * (x**176) + L0x200199aa_f * (x**177) + 
            L0x200199ac_f * (x**178) + L0x200199ae_f * (x**179) + 
            L0x200199b0_f * (x**180) + L0x200199b2_f * (x**181) + 
            L0x200199b4_f * (x**182) + L0x200199b6_f * (x**183) + 
            L0x200199b8_f * (x**184) + L0x200199ba_f * (x**185) + 
            L0x200199bc_f * (x**186) + L0x200199be_f * (x**187) + 
            L0x200199c0_f * (x**188) + L0x200199c2_f * (x**189) + 
            L0x200199c4_f * (x**190) + L0x200199c6_f * (x**191) + 
            L0x200199c8_f * (x**192) + L0x200199ca_f * (x**193) + 
            L0x200199cc_f * (x**194) + L0x200199ce_f * (x**195) + 
            L0x200199d0_f * (x**196) + L0x200199d2_f * (x**197) + 
            L0x200199d4_f * (x**198) + L0x200199d6_f * (x**199) + 
            L0x200199d8_f * (x**200) + L0x200199da_f * (x**201) + 
            L0x200199dc_f * (x**202) + L0x200199de_f * (x**203) + 
            L0x200199e0_f * (x**204) + L0x200199e2_f * (x**205) + 
            L0x200199e4_f * (x**206) + L0x200199e6_f * (x**207) + 
            L0x200199e8_f * (x**208) + L0x200199ea_f * (x**209) + 
            L0x200199ec_f * (x**210) + L0x200199ee_f * (x**211) + 
            L0x200199f0_f * (x**212) + L0x200199f2_f * (x**213) + 
            L0x200199f4_f * (x**214) + L0x200199f6_f * (x**215) + 
            L0x200199f8_f * (x**216) + L0x200199fa_f * (x**217) + 
            L0x200199fc_f * (x**218) + L0x200199fe_f * (x**219) + 
            L0x20019a00_f * (x**220) + L0x20019a02_f * (x**221) + 
            L0x20019a04_f * (x**222) + L0x20019a06_f * (x**223) + 
            L0x20019a08_f * (x**224) + L0x20019a0a_f * (x**225) + 
            L0x20019a0c_f * (x**226) + L0x20019a0e_f * (x**227) + 
            L0x20019a10_f * (x**228) + L0x20019a12_f * (x**229) + 
            L0x20019a14_f * (x**230) + L0x20019a16_f * (x**231) + 
            L0x20019a18_f * (x**232) + L0x20019a1a_f * (x**233) + 
            L0x20019a1c_f * (x**234) + L0x20019a1e_f * (x**235) + 
            L0x20019a20_f * (x**236) + L0x20019a22_f * (x**237) + 
            L0x20019a24_f * (x**238) + L0x20019a26_f * (x**239) + 
            L0x20019a28_f * (x**240) + L0x20019a2a_f * (x**241) + 
            L0x20019a2c_f * (x**242) + L0x20019a2e_f * (x**243) + 
            L0x20019a30_f * (x**244) + L0x20019a32_f * (x**245) + 
            L0x20019a34_f * (x**246) + L0x20019a36_f * (x**247) + 
            L0x20019a38_f * (x**248) + L0x20019a3a_f * (x**249) + 
            L0x20019a3c_f * (x**250) + L0x20019a3e_f * (x**251) + 
            L0x20019a40_f * (x**252) + L0x20019a42_f * (x**253) + 
            L0x20019a44_f * (x**254) + L0x20019a46_f * (x**255)
          )
          [25570049, x**4 - 23569609],
    (* inp_poly_21 *)
    eqmod (2**32) * (inp_poly_21 * inp_poly_21)
          (
            L0x20019848_f * (x**0) + L0x2001984a_f * (x**1) + 
            L0x2001984c_f * (x**2) + L0x2001984e_f * (x**3) + 
            L0x20019850_f * (x**4) + L0x20019852_f * (x**5) + 
            L0x20019854_f * (x**6) + L0x20019856_f * (x**7) + 
            L0x20019858_f * (x**8) + L0x2001985a_f * (x**9) + 
            L0x2001985c_f * (x**10) + L0x2001985e_f * (x**11) + 
            L0x20019860_f * (x**12) + L0x20019862_f * (x**13) + 
            L0x20019864_f * (x**14) + L0x20019866_f * (x**15) + 
            L0x20019868_f * (x**16) + L0x2001986a_f * (x**17) + 
            L0x2001986c_f * (x**18) + L0x2001986e_f * (x**19) + 
            L0x20019870_f * (x**20) + L0x20019872_f * (x**21) + 
            L0x20019874_f * (x**22) + L0x20019876_f * (x**23) + 
            L0x20019878_f * (x**24) + L0x2001987a_f * (x**25) + 
            L0x2001987c_f * (x**26) + L0x2001987e_f * (x**27) + 
            L0x20019880_f * (x**28) + L0x20019882_f * (x**29) + 
            L0x20019884_f * (x**30) + L0x20019886_f * (x**31) + 
            L0x20019888_f * (x**32) + L0x2001988a_f * (x**33) + 
            L0x2001988c_f * (x**34) + L0x2001988e_f * (x**35) + 
            L0x20019890_f * (x**36) + L0x20019892_f * (x**37) + 
            L0x20019894_f * (x**38) + L0x20019896_f * (x**39) + 
            L0x20019898_f * (x**40) + L0x2001989a_f * (x**41) + 
            L0x2001989c_f * (x**42) + L0x2001989e_f * (x**43) + 
            L0x200198a0_f * (x**44) + L0x200198a2_f * (x**45) + 
            L0x200198a4_f * (x**46) + L0x200198a6_f * (x**47) + 
            L0x200198a8_f * (x**48) + L0x200198aa_f * (x**49) + 
            L0x200198ac_f * (x**50) + L0x200198ae_f * (x**51) + 
            L0x200198b0_f * (x**52) + L0x200198b2_f * (x**53) + 
            L0x200198b4_f * (x**54) + L0x200198b6_f * (x**55) + 
            L0x200198b8_f * (x**56) + L0x200198ba_f * (x**57) + 
            L0x200198bc_f * (x**58) + L0x200198be_f * (x**59) + 
            L0x200198c0_f * (x**60) + L0x200198c2_f * (x**61) + 
            L0x200198c4_f * (x**62) + L0x200198c6_f * (x**63) + 
            L0x200198c8_f * (x**64) + L0x200198ca_f * (x**65) + 
            L0x200198cc_f * (x**66) + L0x200198ce_f * (x**67) + 
            L0x200198d0_f * (x**68) + L0x200198d2_f * (x**69) + 
            L0x200198d4_f * (x**70) + L0x200198d6_f * (x**71) + 
            L0x200198d8_f * (x**72) + L0x200198da_f * (x**73) + 
            L0x200198dc_f * (x**74) + L0x200198de_f * (x**75) + 
            L0x200198e0_f * (x**76) + L0x200198e2_f * (x**77) + 
            L0x200198e4_f * (x**78) + L0x200198e6_f * (x**79) + 
            L0x200198e8_f * (x**80) + L0x200198ea_f * (x**81) + 
            L0x200198ec_f * (x**82) + L0x200198ee_f * (x**83) + 
            L0x200198f0_f * (x**84) + L0x200198f2_f * (x**85) + 
            L0x200198f4_f * (x**86) + L0x200198f6_f * (x**87) + 
            L0x200198f8_f * (x**88) + L0x200198fa_f * (x**89) + 
            L0x200198fc_f * (x**90) + L0x200198fe_f * (x**91) + 
            L0x20019900_f * (x**92) + L0x20019902_f * (x**93) + 
            L0x20019904_f * (x**94) + L0x20019906_f * (x**95) + 
            L0x20019908_f * (x**96) + L0x2001990a_f * (x**97) + 
            L0x2001990c_f * (x**98) + L0x2001990e_f * (x**99) + 
            L0x20019910_f * (x**100) + L0x20019912_f * (x**101) + 
            L0x20019914_f * (x**102) + L0x20019916_f * (x**103) + 
            L0x20019918_f * (x**104) + L0x2001991a_f * (x**105) + 
            L0x2001991c_f * (x**106) + L0x2001991e_f * (x**107) + 
            L0x20019920_f * (x**108) + L0x20019922_f * (x**109) + 
            L0x20019924_f * (x**110) + L0x20019926_f * (x**111) + 
            L0x20019928_f * (x**112) + L0x2001992a_f * (x**113) + 
            L0x2001992c_f * (x**114) + L0x2001992e_f * (x**115) + 
            L0x20019930_f * (x**116) + L0x20019932_f * (x**117) + 
            L0x20019934_f * (x**118) + L0x20019936_f * (x**119) + 
            L0x20019938_f * (x**120) + L0x2001993a_f * (x**121) + 
            L0x2001993c_f * (x**122) + L0x2001993e_f * (x**123) + 
            L0x20019940_f * (x**124) + L0x20019942_f * (x**125) + 
            L0x20019944_f * (x**126) + L0x20019946_f * (x**127) + 
            L0x20019948_f * (x**128) + L0x2001994a_f * (x**129) + 
            L0x2001994c_f * (x**130) + L0x2001994e_f * (x**131) + 
            L0x20019950_f * (x**132) + L0x20019952_f * (x**133) + 
            L0x20019954_f * (x**134) + L0x20019956_f * (x**135) + 
            L0x20019958_f * (x**136) + L0x2001995a_f * (x**137) + 
            L0x2001995c_f * (x**138) + L0x2001995e_f * (x**139) + 
            L0x20019960_f * (x**140) + L0x20019962_f * (x**141) + 
            L0x20019964_f * (x**142) + L0x20019966_f * (x**143) + 
            L0x20019968_f * (x**144) + L0x2001996a_f * (x**145) + 
            L0x2001996c_f * (x**146) + L0x2001996e_f * (x**147) + 
            L0x20019970_f * (x**148) + L0x20019972_f * (x**149) + 
            L0x20019974_f * (x**150) + L0x20019976_f * (x**151) + 
            L0x20019978_f * (x**152) + L0x2001997a_f * (x**153) + 
            L0x2001997c_f * (x**154) + L0x2001997e_f * (x**155) + 
            L0x20019980_f * (x**156) + L0x20019982_f * (x**157) + 
            L0x20019984_f * (x**158) + L0x20019986_f * (x**159) + 
            L0x20019988_f * (x**160) + L0x2001998a_f * (x**161) + 
            L0x2001998c_f * (x**162) + L0x2001998e_f * (x**163) + 
            L0x20019990_f * (x**164) + L0x20019992_f * (x**165) + 
            L0x20019994_f * (x**166) + L0x20019996_f * (x**167) + 
            L0x20019998_f * (x**168) + L0x2001999a_f * (x**169) + 
            L0x2001999c_f * (x**170) + L0x2001999e_f * (x**171) + 
            L0x200199a0_f * (x**172) + L0x200199a2_f * (x**173) + 
            L0x200199a4_f * (x**174) + L0x200199a6_f * (x**175) + 
            L0x200199a8_f * (x**176) + L0x200199aa_f * (x**177) + 
            L0x200199ac_f * (x**178) + L0x200199ae_f * (x**179) + 
            L0x200199b0_f * (x**180) + L0x200199b2_f * (x**181) + 
            L0x200199b4_f * (x**182) + L0x200199b6_f * (x**183) + 
            L0x200199b8_f * (x**184) + L0x200199ba_f * (x**185) + 
            L0x200199bc_f * (x**186) + L0x200199be_f * (x**187) + 
            L0x200199c0_f * (x**188) + L0x200199c2_f * (x**189) + 
            L0x200199c4_f * (x**190) + L0x200199c6_f * (x**191) + 
            L0x200199c8_f * (x**192) + L0x200199ca_f * (x**193) + 
            L0x200199cc_f * (x**194) + L0x200199ce_f * (x**195) + 
            L0x200199d0_f * (x**196) + L0x200199d2_f * (x**197) + 
            L0x200199d4_f * (x**198) + L0x200199d6_f * (x**199) + 
            L0x200199d8_f * (x**200) + L0x200199da_f * (x**201) + 
            L0x200199dc_f * (x**202) + L0x200199de_f * (x**203) + 
            L0x200199e0_f * (x**204) + L0x200199e2_f * (x**205) + 
            L0x200199e4_f * (x**206) + L0x200199e6_f * (x**207) + 
            L0x200199e8_f * (x**208) + L0x200199ea_f * (x**209) + 
            L0x200199ec_f * (x**210) + L0x200199ee_f * (x**211) + 
            L0x200199f0_f * (x**212) + L0x200199f2_f * (x**213) + 
            L0x200199f4_f * (x**214) + L0x200199f6_f * (x**215) + 
            L0x200199f8_f * (x**216) + L0x200199fa_f * (x**217) + 
            L0x200199fc_f * (x**218) + L0x200199fe_f * (x**219) + 
            L0x20019a00_f * (x**220) + L0x20019a02_f * (x**221) + 
            L0x20019a04_f * (x**222) + L0x20019a06_f * (x**223) + 
            L0x20019a08_f * (x**224) + L0x20019a0a_f * (x**225) + 
            L0x20019a0c_f * (x**226) + L0x20019a0e_f * (x**227) + 
            L0x20019a10_f * (x**228) + L0x20019a12_f * (x**229) + 
            L0x20019a14_f * (x**230) + L0x20019a16_f * (x**231) + 
            L0x20019a18_f * (x**232) + L0x20019a1a_f * (x**233) + 
            L0x20019a1c_f * (x**234) + L0x20019a1e_f * (x**235) + 
            L0x20019a20_f * (x**236) + L0x20019a22_f * (x**237) + 
            L0x20019a24_f * (x**238) + L0x20019a26_f * (x**239) + 
            L0x20019a28_f * (x**240) + L0x20019a2a_f * (x**241) + 
            L0x20019a2c_f * (x**242) + L0x20019a2e_f * (x**243) + 
            L0x20019a30_f * (x**244) + L0x20019a32_f * (x**245) + 
            L0x20019a34_f * (x**246) + L0x20019a36_f * (x**247) + 
            L0x20019a38_f * (x**248) + L0x20019a3a_f * (x**249) + 
            L0x20019a3c_f * (x**250) + L0x20019a3e_f * (x**251) + 
            L0x20019a40_f * (x**252) + L0x20019a42_f * (x**253) + 
            L0x20019a44_f * (x**254) + L0x20019a46_f * (x**255)
          )
          [25570049, x**4 - 2000440],
    (* inp_poly_22 *)
    eqmod (2**32) * (inp_poly_22 * inp_poly_22)
          (
            L0x20019848_f * (x**0) + L0x2001984a_f * (x**1) + 
            L0x2001984c_f * (x**2) + L0x2001984e_f * (x**3) + 
            L0x20019850_f * (x**4) + L0x20019852_f * (x**5) + 
            L0x20019854_f * (x**6) + L0x20019856_f * (x**7) + 
            L0x20019858_f * (x**8) + L0x2001985a_f * (x**9) + 
            L0x2001985c_f * (x**10) + L0x2001985e_f * (x**11) + 
            L0x20019860_f * (x**12) + L0x20019862_f * (x**13) + 
            L0x20019864_f * (x**14) + L0x20019866_f * (x**15) + 
            L0x20019868_f * (x**16) + L0x2001986a_f * (x**17) + 
            L0x2001986c_f * (x**18) + L0x2001986e_f * (x**19) + 
            L0x20019870_f * (x**20) + L0x20019872_f * (x**21) + 
            L0x20019874_f * (x**22) + L0x20019876_f * (x**23) + 
            L0x20019878_f * (x**24) + L0x2001987a_f * (x**25) + 
            L0x2001987c_f * (x**26) + L0x2001987e_f * (x**27) + 
            L0x20019880_f * (x**28) + L0x20019882_f * (x**29) + 
            L0x20019884_f * (x**30) + L0x20019886_f * (x**31) + 
            L0x20019888_f * (x**32) + L0x2001988a_f * (x**33) + 
            L0x2001988c_f * (x**34) + L0x2001988e_f * (x**35) + 
            L0x20019890_f * (x**36) + L0x20019892_f * (x**37) + 
            L0x20019894_f * (x**38) + L0x20019896_f * (x**39) + 
            L0x20019898_f * (x**40) + L0x2001989a_f * (x**41) + 
            L0x2001989c_f * (x**42) + L0x2001989e_f * (x**43) + 
            L0x200198a0_f * (x**44) + L0x200198a2_f * (x**45) + 
            L0x200198a4_f * (x**46) + L0x200198a6_f * (x**47) + 
            L0x200198a8_f * (x**48) + L0x200198aa_f * (x**49) + 
            L0x200198ac_f * (x**50) + L0x200198ae_f * (x**51) + 
            L0x200198b0_f * (x**52) + L0x200198b2_f * (x**53) + 
            L0x200198b4_f * (x**54) + L0x200198b6_f * (x**55) + 
            L0x200198b8_f * (x**56) + L0x200198ba_f * (x**57) + 
            L0x200198bc_f * (x**58) + L0x200198be_f * (x**59) + 
            L0x200198c0_f * (x**60) + L0x200198c2_f * (x**61) + 
            L0x200198c4_f * (x**62) + L0x200198c6_f * (x**63) + 
            L0x200198c8_f * (x**64) + L0x200198ca_f * (x**65) + 
            L0x200198cc_f * (x**66) + L0x200198ce_f * (x**67) + 
            L0x200198d0_f * (x**68) + L0x200198d2_f * (x**69) + 
            L0x200198d4_f * (x**70) + L0x200198d6_f * (x**71) + 
            L0x200198d8_f * (x**72) + L0x200198da_f * (x**73) + 
            L0x200198dc_f * (x**74) + L0x200198de_f * (x**75) + 
            L0x200198e0_f * (x**76) + L0x200198e2_f * (x**77) + 
            L0x200198e4_f * (x**78) + L0x200198e6_f * (x**79) + 
            L0x200198e8_f * (x**80) + L0x200198ea_f * (x**81) + 
            L0x200198ec_f * (x**82) + L0x200198ee_f * (x**83) + 
            L0x200198f0_f * (x**84) + L0x200198f2_f * (x**85) + 
            L0x200198f4_f * (x**86) + L0x200198f6_f * (x**87) + 
            L0x200198f8_f * (x**88) + L0x200198fa_f * (x**89) + 
            L0x200198fc_f * (x**90) + L0x200198fe_f * (x**91) + 
            L0x20019900_f * (x**92) + L0x20019902_f * (x**93) + 
            L0x20019904_f * (x**94) + L0x20019906_f * (x**95) + 
            L0x20019908_f * (x**96) + L0x2001990a_f * (x**97) + 
            L0x2001990c_f * (x**98) + L0x2001990e_f * (x**99) + 
            L0x20019910_f * (x**100) + L0x20019912_f * (x**101) + 
            L0x20019914_f * (x**102) + L0x20019916_f * (x**103) + 
            L0x20019918_f * (x**104) + L0x2001991a_f * (x**105) + 
            L0x2001991c_f * (x**106) + L0x2001991e_f * (x**107) + 
            L0x20019920_f * (x**108) + L0x20019922_f * (x**109) + 
            L0x20019924_f * (x**110) + L0x20019926_f * (x**111) + 
            L0x20019928_f * (x**112) + L0x2001992a_f * (x**113) + 
            L0x2001992c_f * (x**114) + L0x2001992e_f * (x**115) + 
            L0x20019930_f * (x**116) + L0x20019932_f * (x**117) + 
            L0x20019934_f * (x**118) + L0x20019936_f * (x**119) + 
            L0x20019938_f * (x**120) + L0x2001993a_f * (x**121) + 
            L0x2001993c_f * (x**122) + L0x2001993e_f * (x**123) + 
            L0x20019940_f * (x**124) + L0x20019942_f * (x**125) + 
            L0x20019944_f * (x**126) + L0x20019946_f * (x**127) + 
            L0x20019948_f * (x**128) + L0x2001994a_f * (x**129) + 
            L0x2001994c_f * (x**130) + L0x2001994e_f * (x**131) + 
            L0x20019950_f * (x**132) + L0x20019952_f * (x**133) + 
            L0x20019954_f * (x**134) + L0x20019956_f * (x**135) + 
            L0x20019958_f * (x**136) + L0x2001995a_f * (x**137) + 
            L0x2001995c_f * (x**138) + L0x2001995e_f * (x**139) + 
            L0x20019960_f * (x**140) + L0x20019962_f * (x**141) + 
            L0x20019964_f * (x**142) + L0x20019966_f * (x**143) + 
            L0x20019968_f * (x**144) + L0x2001996a_f * (x**145) + 
            L0x2001996c_f * (x**146) + L0x2001996e_f * (x**147) + 
            L0x20019970_f * (x**148) + L0x20019972_f * (x**149) + 
            L0x20019974_f * (x**150) + L0x20019976_f * (x**151) + 
            L0x20019978_f * (x**152) + L0x2001997a_f * (x**153) + 
            L0x2001997c_f * (x**154) + L0x2001997e_f * (x**155) + 
            L0x20019980_f * (x**156) + L0x20019982_f * (x**157) + 
            L0x20019984_f * (x**158) + L0x20019986_f * (x**159) + 
            L0x20019988_f * (x**160) + L0x2001998a_f * (x**161) + 
            L0x2001998c_f * (x**162) + L0x2001998e_f * (x**163) + 
            L0x20019990_f * (x**164) + L0x20019992_f * (x**165) + 
            L0x20019994_f * (x**166) + L0x20019996_f * (x**167) + 
            L0x20019998_f * (x**168) + L0x2001999a_f * (x**169) + 
            L0x2001999c_f * (x**170) + L0x2001999e_f * (x**171) + 
            L0x200199a0_f * (x**172) + L0x200199a2_f * (x**173) + 
            L0x200199a4_f * (x**174) + L0x200199a6_f * (x**175) + 
            L0x200199a8_f * (x**176) + L0x200199aa_f * (x**177) + 
            L0x200199ac_f * (x**178) + L0x200199ae_f * (x**179) + 
            L0x200199b0_f * (x**180) + L0x200199b2_f * (x**181) + 
            L0x200199b4_f * (x**182) + L0x200199b6_f * (x**183) + 
            L0x200199b8_f * (x**184) + L0x200199ba_f * (x**185) + 
            L0x200199bc_f * (x**186) + L0x200199be_f * (x**187) + 
            L0x200199c0_f * (x**188) + L0x200199c2_f * (x**189) + 
            L0x200199c4_f * (x**190) + L0x200199c6_f * (x**191) + 
            L0x200199c8_f * (x**192) + L0x200199ca_f * (x**193) + 
            L0x200199cc_f * (x**194) + L0x200199ce_f * (x**195) + 
            L0x200199d0_f * (x**196) + L0x200199d2_f * (x**197) + 
            L0x200199d4_f * (x**198) + L0x200199d6_f * (x**199) + 
            L0x200199d8_f * (x**200) + L0x200199da_f * (x**201) + 
            L0x200199dc_f * (x**202) + L0x200199de_f * (x**203) + 
            L0x200199e0_f * (x**204) + L0x200199e2_f * (x**205) + 
            L0x200199e4_f * (x**206) + L0x200199e6_f * (x**207) + 
            L0x200199e8_f * (x**208) + L0x200199ea_f * (x**209) + 
            L0x200199ec_f * (x**210) + L0x200199ee_f * (x**211) + 
            L0x200199f0_f * (x**212) + L0x200199f2_f * (x**213) + 
            L0x200199f4_f * (x**214) + L0x200199f6_f * (x**215) + 
            L0x200199f8_f * (x**216) + L0x200199fa_f * (x**217) + 
            L0x200199fc_f * (x**218) + L0x200199fe_f * (x**219) + 
            L0x20019a00_f * (x**220) + L0x20019a02_f * (x**221) + 
            L0x20019a04_f * (x**222) + L0x20019a06_f * (x**223) + 
            L0x20019a08_f * (x**224) + L0x20019a0a_f * (x**225) + 
            L0x20019a0c_f * (x**226) + L0x20019a0e_f * (x**227) + 
            L0x20019a10_f * (x**228) + L0x20019a12_f * (x**229) + 
            L0x20019a14_f * (x**230) + L0x20019a16_f * (x**231) + 
            L0x20019a18_f * (x**232) + L0x20019a1a_f * (x**233) + 
            L0x20019a1c_f * (x**234) + L0x20019a1e_f * (x**235) + 
            L0x20019a20_f * (x**236) + L0x20019a22_f * (x**237) + 
            L0x20019a24_f * (x**238) + L0x20019a26_f * (x**239) + 
            L0x20019a28_f * (x**240) + L0x20019a2a_f * (x**241) + 
            L0x20019a2c_f * (x**242) + L0x20019a2e_f * (x**243) + 
            L0x20019a30_f * (x**244) + L0x20019a32_f * (x**245) + 
            L0x20019a34_f * (x**246) + L0x20019a36_f * (x**247) + 
            L0x20019a38_f * (x**248) + L0x20019a3a_f * (x**249) + 
            L0x20019a3c_f * (x**250) + L0x20019a3e_f * (x**251) + 
            L0x20019a40_f * (x**252) + L0x20019a42_f * (x**253) + 
            L0x20019a44_f * (x**254) + L0x20019a46_f * (x**255)
          )
          [25570049, x**4 - 7617083],
    (* inp_poly_23 *)
    eqmod (2**32) * (inp_poly_23 * inp_poly_23)
          (
            L0x20019848_f * (x**0) + L0x2001984a_f * (x**1) + 
            L0x2001984c_f * (x**2) + L0x2001984e_f * (x**3) + 
            L0x20019850_f * (x**4) + L0x20019852_f * (x**5) + 
            L0x20019854_f * (x**6) + L0x20019856_f * (x**7) + 
            L0x20019858_f * (x**8) + L0x2001985a_f * (x**9) + 
            L0x2001985c_f * (x**10) + L0x2001985e_f * (x**11) + 
            L0x20019860_f * (x**12) + L0x20019862_f * (x**13) + 
            L0x20019864_f * (x**14) + L0x20019866_f * (x**15) + 
            L0x20019868_f * (x**16) + L0x2001986a_f * (x**17) + 
            L0x2001986c_f * (x**18) + L0x2001986e_f * (x**19) + 
            L0x20019870_f * (x**20) + L0x20019872_f * (x**21) + 
            L0x20019874_f * (x**22) + L0x20019876_f * (x**23) + 
            L0x20019878_f * (x**24) + L0x2001987a_f * (x**25) + 
            L0x2001987c_f * (x**26) + L0x2001987e_f * (x**27) + 
            L0x20019880_f * (x**28) + L0x20019882_f * (x**29) + 
            L0x20019884_f * (x**30) + L0x20019886_f * (x**31) + 
            L0x20019888_f * (x**32) + L0x2001988a_f * (x**33) + 
            L0x2001988c_f * (x**34) + L0x2001988e_f * (x**35) + 
            L0x20019890_f * (x**36) + L0x20019892_f * (x**37) + 
            L0x20019894_f * (x**38) + L0x20019896_f * (x**39) + 
            L0x20019898_f * (x**40) + L0x2001989a_f * (x**41) + 
            L0x2001989c_f * (x**42) + L0x2001989e_f * (x**43) + 
            L0x200198a0_f * (x**44) + L0x200198a2_f * (x**45) + 
            L0x200198a4_f * (x**46) + L0x200198a6_f * (x**47) + 
            L0x200198a8_f * (x**48) + L0x200198aa_f * (x**49) + 
            L0x200198ac_f * (x**50) + L0x200198ae_f * (x**51) + 
            L0x200198b0_f * (x**52) + L0x200198b2_f * (x**53) + 
            L0x200198b4_f * (x**54) + L0x200198b6_f * (x**55) + 
            L0x200198b8_f * (x**56) + L0x200198ba_f * (x**57) + 
            L0x200198bc_f * (x**58) + L0x200198be_f * (x**59) + 
            L0x200198c0_f * (x**60) + L0x200198c2_f * (x**61) + 
            L0x200198c4_f * (x**62) + L0x200198c6_f * (x**63) + 
            L0x200198c8_f * (x**64) + L0x200198ca_f * (x**65) + 
            L0x200198cc_f * (x**66) + L0x200198ce_f * (x**67) + 
            L0x200198d0_f * (x**68) + L0x200198d2_f * (x**69) + 
            L0x200198d4_f * (x**70) + L0x200198d6_f * (x**71) + 
            L0x200198d8_f * (x**72) + L0x200198da_f * (x**73) + 
            L0x200198dc_f * (x**74) + L0x200198de_f * (x**75) + 
            L0x200198e0_f * (x**76) + L0x200198e2_f * (x**77) + 
            L0x200198e4_f * (x**78) + L0x200198e6_f * (x**79) + 
            L0x200198e8_f * (x**80) + L0x200198ea_f * (x**81) + 
            L0x200198ec_f * (x**82) + L0x200198ee_f * (x**83) + 
            L0x200198f0_f * (x**84) + L0x200198f2_f * (x**85) + 
            L0x200198f4_f * (x**86) + L0x200198f6_f * (x**87) + 
            L0x200198f8_f * (x**88) + L0x200198fa_f * (x**89) + 
            L0x200198fc_f * (x**90) + L0x200198fe_f * (x**91) + 
            L0x20019900_f * (x**92) + L0x20019902_f * (x**93) + 
            L0x20019904_f * (x**94) + L0x20019906_f * (x**95) + 
            L0x20019908_f * (x**96) + L0x2001990a_f * (x**97) + 
            L0x2001990c_f * (x**98) + L0x2001990e_f * (x**99) + 
            L0x20019910_f * (x**100) + L0x20019912_f * (x**101) + 
            L0x20019914_f * (x**102) + L0x20019916_f * (x**103) + 
            L0x20019918_f * (x**104) + L0x2001991a_f * (x**105) + 
            L0x2001991c_f * (x**106) + L0x2001991e_f * (x**107) + 
            L0x20019920_f * (x**108) + L0x20019922_f * (x**109) + 
            L0x20019924_f * (x**110) + L0x20019926_f * (x**111) + 
            L0x20019928_f * (x**112) + L0x2001992a_f * (x**113) + 
            L0x2001992c_f * (x**114) + L0x2001992e_f * (x**115) + 
            L0x20019930_f * (x**116) + L0x20019932_f * (x**117) + 
            L0x20019934_f * (x**118) + L0x20019936_f * (x**119) + 
            L0x20019938_f * (x**120) + L0x2001993a_f * (x**121) + 
            L0x2001993c_f * (x**122) + L0x2001993e_f * (x**123) + 
            L0x20019940_f * (x**124) + L0x20019942_f * (x**125) + 
            L0x20019944_f * (x**126) + L0x20019946_f * (x**127) + 
            L0x20019948_f * (x**128) + L0x2001994a_f * (x**129) + 
            L0x2001994c_f * (x**130) + L0x2001994e_f * (x**131) + 
            L0x20019950_f * (x**132) + L0x20019952_f * (x**133) + 
            L0x20019954_f * (x**134) + L0x20019956_f * (x**135) + 
            L0x20019958_f * (x**136) + L0x2001995a_f * (x**137) + 
            L0x2001995c_f * (x**138) + L0x2001995e_f * (x**139) + 
            L0x20019960_f * (x**140) + L0x20019962_f * (x**141) + 
            L0x20019964_f * (x**142) + L0x20019966_f * (x**143) + 
            L0x20019968_f * (x**144) + L0x2001996a_f * (x**145) + 
            L0x2001996c_f * (x**146) + L0x2001996e_f * (x**147) + 
            L0x20019970_f * (x**148) + L0x20019972_f * (x**149) + 
            L0x20019974_f * (x**150) + L0x20019976_f * (x**151) + 
            L0x20019978_f * (x**152) + L0x2001997a_f * (x**153) + 
            L0x2001997c_f * (x**154) + L0x2001997e_f * (x**155) + 
            L0x20019980_f * (x**156) + L0x20019982_f * (x**157) + 
            L0x20019984_f * (x**158) + L0x20019986_f * (x**159) + 
            L0x20019988_f * (x**160) + L0x2001998a_f * (x**161) + 
            L0x2001998c_f * (x**162) + L0x2001998e_f * (x**163) + 
            L0x20019990_f * (x**164) + L0x20019992_f * (x**165) + 
            L0x20019994_f * (x**166) + L0x20019996_f * (x**167) + 
            L0x20019998_f * (x**168) + L0x2001999a_f * (x**169) + 
            L0x2001999c_f * (x**170) + L0x2001999e_f * (x**171) + 
            L0x200199a0_f * (x**172) + L0x200199a2_f * (x**173) + 
            L0x200199a4_f * (x**174) + L0x200199a6_f * (x**175) + 
            L0x200199a8_f * (x**176) + L0x200199aa_f * (x**177) + 
            L0x200199ac_f * (x**178) + L0x200199ae_f * (x**179) + 
            L0x200199b0_f * (x**180) + L0x200199b2_f * (x**181) + 
            L0x200199b4_f * (x**182) + L0x200199b6_f * (x**183) + 
            L0x200199b8_f * (x**184) + L0x200199ba_f * (x**185) + 
            L0x200199bc_f * (x**186) + L0x200199be_f * (x**187) + 
            L0x200199c0_f * (x**188) + L0x200199c2_f * (x**189) + 
            L0x200199c4_f * (x**190) + L0x200199c6_f * (x**191) + 
            L0x200199c8_f * (x**192) + L0x200199ca_f * (x**193) + 
            L0x200199cc_f * (x**194) + L0x200199ce_f * (x**195) + 
            L0x200199d0_f * (x**196) + L0x200199d2_f * (x**197) + 
            L0x200199d4_f * (x**198) + L0x200199d6_f * (x**199) + 
            L0x200199d8_f * (x**200) + L0x200199da_f * (x**201) + 
            L0x200199dc_f * (x**202) + L0x200199de_f * (x**203) + 
            L0x200199e0_f * (x**204) + L0x200199e2_f * (x**205) + 
            L0x200199e4_f * (x**206) + L0x200199e6_f * (x**207) + 
            L0x200199e8_f * (x**208) + L0x200199ea_f * (x**209) + 
            L0x200199ec_f * (x**210) + L0x200199ee_f * (x**211) + 
            L0x200199f0_f * (x**212) + L0x200199f2_f * (x**213) + 
            L0x200199f4_f * (x**214) + L0x200199f6_f * (x**215) + 
            L0x200199f8_f * (x**216) + L0x200199fa_f * (x**217) + 
            L0x200199fc_f * (x**218) + L0x200199fe_f * (x**219) + 
            L0x20019a00_f * (x**220) + L0x20019a02_f * (x**221) + 
            L0x20019a04_f * (x**222) + L0x20019a06_f * (x**223) + 
            L0x20019a08_f * (x**224) + L0x20019a0a_f * (x**225) + 
            L0x20019a0c_f * (x**226) + L0x20019a0e_f * (x**227) + 
            L0x20019a10_f * (x**228) + L0x20019a12_f * (x**229) + 
            L0x20019a14_f * (x**230) + L0x20019a16_f * (x**231) + 
            L0x20019a18_f * (x**232) + L0x20019a1a_f * (x**233) + 
            L0x20019a1c_f * (x**234) + L0x20019a1e_f * (x**235) + 
            L0x20019a20_f * (x**236) + L0x20019a22_f * (x**237) + 
            L0x20019a24_f * (x**238) + L0x20019a26_f * (x**239) + 
            L0x20019a28_f * (x**240) + L0x20019a2a_f * (x**241) + 
            L0x20019a2c_f * (x**242) + L0x20019a2e_f * (x**243) + 
            L0x20019a30_f * (x**244) + L0x20019a32_f * (x**245) + 
            L0x20019a34_f * (x**246) + L0x20019a36_f * (x**247) + 
            L0x20019a38_f * (x**248) + L0x20019a3a_f * (x**249) + 
            L0x20019a3c_f * (x**250) + L0x20019a3e_f * (x**251) + 
            L0x20019a40_f * (x**252) + L0x20019a42_f * (x**253) + 
            L0x20019a44_f * (x**254) + L0x20019a46_f * (x**255)
          )
          [25570049, x**4 - 17952966]
  ] prove with [cuts [60]]
  &&
  true
;

cut (* 77 *)
  true && true;

(* slice 3 *)
assume (* instantiating y_0's *)
  and [
    y_0_24 = 1, y_0_25 = 1, y_0_26 = 1, y_0_27 = 1, 
    y_0_28 = 1, y_0_29 = 1, y_0_30 = 1, y_0_31 = 1
  ] && true;
cut (* 78 *)
  and [
    (* inp_poly_24 *)
    eqmod (2**32) * (inp_poly_24 * inp_poly_24)
          (
            L0x20019848_f * (x**0) + L0x2001984a_f * (x**1) + 
            L0x2001984c_f * (x**2) + L0x2001984e_f * (x**3) + 
            L0x20019850_f * (x**4) + L0x20019852_f * (x**5) + 
            L0x20019854_f * (x**6) + L0x20019856_f * (x**7) + 
            L0x20019858_f * (x**8) + L0x2001985a_f * (x**9) + 
            L0x2001985c_f * (x**10) + L0x2001985e_f * (x**11) + 
            L0x20019860_f * (x**12) + L0x20019862_f * (x**13) + 
            L0x20019864_f * (x**14) + L0x20019866_f * (x**15) + 
            L0x20019868_f * (x**16) + L0x2001986a_f * (x**17) + 
            L0x2001986c_f * (x**18) + L0x2001986e_f * (x**19) + 
            L0x20019870_f * (x**20) + L0x20019872_f * (x**21) + 
            L0x20019874_f * (x**22) + L0x20019876_f * (x**23) + 
            L0x20019878_f * (x**24) + L0x2001987a_f * (x**25) + 
            L0x2001987c_f * (x**26) + L0x2001987e_f * (x**27) + 
            L0x20019880_f * (x**28) + L0x20019882_f * (x**29) + 
            L0x20019884_f * (x**30) + L0x20019886_f * (x**31) + 
            L0x20019888_f * (x**32) + L0x2001988a_f * (x**33) + 
            L0x2001988c_f * (x**34) + L0x2001988e_f * (x**35) + 
            L0x20019890_f * (x**36) + L0x20019892_f * (x**37) + 
            L0x20019894_f * (x**38) + L0x20019896_f * (x**39) + 
            L0x20019898_f * (x**40) + L0x2001989a_f * (x**41) + 
            L0x2001989c_f * (x**42) + L0x2001989e_f * (x**43) + 
            L0x200198a0_f * (x**44) + L0x200198a2_f * (x**45) + 
            L0x200198a4_f * (x**46) + L0x200198a6_f * (x**47) + 
            L0x200198a8_f * (x**48) + L0x200198aa_f * (x**49) + 
            L0x200198ac_f * (x**50) + L0x200198ae_f * (x**51) + 
            L0x200198b0_f * (x**52) + L0x200198b2_f * (x**53) + 
            L0x200198b4_f * (x**54) + L0x200198b6_f * (x**55) + 
            L0x200198b8_f * (x**56) + L0x200198ba_f * (x**57) + 
            L0x200198bc_f * (x**58) + L0x200198be_f * (x**59) + 
            L0x200198c0_f * (x**60) + L0x200198c2_f * (x**61) + 
            L0x200198c4_f * (x**62) + L0x200198c6_f * (x**63) + 
            L0x200198c8_f * (x**64) + L0x200198ca_f * (x**65) + 
            L0x200198cc_f * (x**66) + L0x200198ce_f * (x**67) + 
            L0x200198d0_f * (x**68) + L0x200198d2_f * (x**69) + 
            L0x200198d4_f * (x**70) + L0x200198d6_f * (x**71) + 
            L0x200198d8_f * (x**72) + L0x200198da_f * (x**73) + 
            L0x200198dc_f * (x**74) + L0x200198de_f * (x**75) + 
            L0x200198e0_f * (x**76) + L0x200198e2_f * (x**77) + 
            L0x200198e4_f * (x**78) + L0x200198e6_f * (x**79) + 
            L0x200198e8_f * (x**80) + L0x200198ea_f * (x**81) + 
            L0x200198ec_f * (x**82) + L0x200198ee_f * (x**83) + 
            L0x200198f0_f * (x**84) + L0x200198f2_f * (x**85) + 
            L0x200198f4_f * (x**86) + L0x200198f6_f * (x**87) + 
            L0x200198f8_f * (x**88) + L0x200198fa_f * (x**89) + 
            L0x200198fc_f * (x**90) + L0x200198fe_f * (x**91) + 
            L0x20019900_f * (x**92) + L0x20019902_f * (x**93) + 
            L0x20019904_f * (x**94) + L0x20019906_f * (x**95) + 
            L0x20019908_f * (x**96) + L0x2001990a_f * (x**97) + 
            L0x2001990c_f * (x**98) + L0x2001990e_f * (x**99) + 
            L0x20019910_f * (x**100) + L0x20019912_f * (x**101) + 
            L0x20019914_f * (x**102) + L0x20019916_f * (x**103) + 
            L0x20019918_f * (x**104) + L0x2001991a_f * (x**105) + 
            L0x2001991c_f * (x**106) + L0x2001991e_f * (x**107) + 
            L0x20019920_f * (x**108) + L0x20019922_f * (x**109) + 
            L0x20019924_f * (x**110) + L0x20019926_f * (x**111) + 
            L0x20019928_f * (x**112) + L0x2001992a_f * (x**113) + 
            L0x2001992c_f * (x**114) + L0x2001992e_f * (x**115) + 
            L0x20019930_f * (x**116) + L0x20019932_f * (x**117) + 
            L0x20019934_f * (x**118) + L0x20019936_f * (x**119) + 
            L0x20019938_f * (x**120) + L0x2001993a_f * (x**121) + 
            L0x2001993c_f * (x**122) + L0x2001993e_f * (x**123) + 
            L0x20019940_f * (x**124) + L0x20019942_f * (x**125) + 
            L0x20019944_f * (x**126) + L0x20019946_f * (x**127) + 
            L0x20019948_f * (x**128) + L0x2001994a_f * (x**129) + 
            L0x2001994c_f * (x**130) + L0x2001994e_f * (x**131) + 
            L0x20019950_f * (x**132) + L0x20019952_f * (x**133) + 
            L0x20019954_f * (x**134) + L0x20019956_f * (x**135) + 
            L0x20019958_f * (x**136) + L0x2001995a_f * (x**137) + 
            L0x2001995c_f * (x**138) + L0x2001995e_f * (x**139) + 
            L0x20019960_f * (x**140) + L0x20019962_f * (x**141) + 
            L0x20019964_f * (x**142) + L0x20019966_f * (x**143) + 
            L0x20019968_f * (x**144) + L0x2001996a_f * (x**145) + 
            L0x2001996c_f * (x**146) + L0x2001996e_f * (x**147) + 
            L0x20019970_f * (x**148) + L0x20019972_f * (x**149) + 
            L0x20019974_f * (x**150) + L0x20019976_f * (x**151) + 
            L0x20019978_f * (x**152) + L0x2001997a_f * (x**153) + 
            L0x2001997c_f * (x**154) + L0x2001997e_f * (x**155) + 
            L0x20019980_f * (x**156) + L0x20019982_f * (x**157) + 
            L0x20019984_f * (x**158) + L0x20019986_f * (x**159) + 
            L0x20019988_f * (x**160) + L0x2001998a_f * (x**161) + 
            L0x2001998c_f * (x**162) + L0x2001998e_f * (x**163) + 
            L0x20019990_f * (x**164) + L0x20019992_f * (x**165) + 
            L0x20019994_f * (x**166) + L0x20019996_f * (x**167) + 
            L0x20019998_f * (x**168) + L0x2001999a_f * (x**169) + 
            L0x2001999c_f * (x**170) + L0x2001999e_f * (x**171) + 
            L0x200199a0_f * (x**172) + L0x200199a2_f * (x**173) + 
            L0x200199a4_f * (x**174) + L0x200199a6_f * (x**175) + 
            L0x200199a8_f * (x**176) + L0x200199aa_f * (x**177) + 
            L0x200199ac_f * (x**178) + L0x200199ae_f * (x**179) + 
            L0x200199b0_f * (x**180) + L0x200199b2_f * (x**181) + 
            L0x200199b4_f * (x**182) + L0x200199b6_f * (x**183) + 
            L0x200199b8_f * (x**184) + L0x200199ba_f * (x**185) + 
            L0x200199bc_f * (x**186) + L0x200199be_f * (x**187) + 
            L0x200199c0_f * (x**188) + L0x200199c2_f * (x**189) + 
            L0x200199c4_f * (x**190) + L0x200199c6_f * (x**191) + 
            L0x200199c8_f * (x**192) + L0x200199ca_f * (x**193) + 
            L0x200199cc_f * (x**194) + L0x200199ce_f * (x**195) + 
            L0x200199d0_f * (x**196) + L0x200199d2_f * (x**197) + 
            L0x200199d4_f * (x**198) + L0x200199d6_f * (x**199) + 
            L0x200199d8_f * (x**200) + L0x200199da_f * (x**201) + 
            L0x200199dc_f * (x**202) + L0x200199de_f * (x**203) + 
            L0x200199e0_f * (x**204) + L0x200199e2_f * (x**205) + 
            L0x200199e4_f * (x**206) + L0x200199e6_f * (x**207) + 
            L0x200199e8_f * (x**208) + L0x200199ea_f * (x**209) + 
            L0x200199ec_f * (x**210) + L0x200199ee_f * (x**211) + 
            L0x200199f0_f * (x**212) + L0x200199f2_f * (x**213) + 
            L0x200199f4_f * (x**214) + L0x200199f6_f * (x**215) + 
            L0x200199f8_f * (x**216) + L0x200199fa_f * (x**217) + 
            L0x200199fc_f * (x**218) + L0x200199fe_f * (x**219) + 
            L0x20019a00_f * (x**220) + L0x20019a02_f * (x**221) + 
            L0x20019a04_f * (x**222) + L0x20019a06_f * (x**223) + 
            L0x20019a08_f * (x**224) + L0x20019a0a_f * (x**225) + 
            L0x20019a0c_f * (x**226) + L0x20019a0e_f * (x**227) + 
            L0x20019a10_f * (x**228) + L0x20019a12_f * (x**229) + 
            L0x20019a14_f * (x**230) + L0x20019a16_f * (x**231) + 
            L0x20019a18_f * (x**232) + L0x20019a1a_f * (x**233) + 
            L0x20019a1c_f * (x**234) + L0x20019a1e_f * (x**235) + 
            L0x20019a20_f * (x**236) + L0x20019a22_f * (x**237) + 
            L0x20019a24_f * (x**238) + L0x20019a26_f * (x**239) + 
            L0x20019a28_f * (x**240) + L0x20019a2a_f * (x**241) + 
            L0x20019a2c_f * (x**242) + L0x20019a2e_f * (x**243) + 
            L0x20019a30_f * (x**244) + L0x20019a32_f * (x**245) + 
            L0x20019a34_f * (x**246) + L0x20019a36_f * (x**247) + 
            L0x20019a38_f * (x**248) + L0x20019a3a_f * (x**249) + 
            L0x20019a3c_f * (x**250) + L0x20019a3e_f * (x**251) + 
            L0x20019a40_f * (x**252) + L0x20019a42_f * (x**253) + 
            L0x20019a44_f * (x**254) + L0x20019a46_f * (x**255)
          )
          [25570049, x**4 - 24859920],
    (* inp_poly_25 *)
    eqmod (2**32) * (inp_poly_25 * inp_poly_25)
          (
            L0x20019848_f * (x**0) + L0x2001984a_f * (x**1) + 
            L0x2001984c_f * (x**2) + L0x2001984e_f * (x**3) + 
            L0x20019850_f * (x**4) + L0x20019852_f * (x**5) + 
            L0x20019854_f * (x**6) + L0x20019856_f * (x**7) + 
            L0x20019858_f * (x**8) + L0x2001985a_f * (x**9) + 
            L0x2001985c_f * (x**10) + L0x2001985e_f * (x**11) + 
            L0x20019860_f * (x**12) + L0x20019862_f * (x**13) + 
            L0x20019864_f * (x**14) + L0x20019866_f * (x**15) + 
            L0x20019868_f * (x**16) + L0x2001986a_f * (x**17) + 
            L0x2001986c_f * (x**18) + L0x2001986e_f * (x**19) + 
            L0x20019870_f * (x**20) + L0x20019872_f * (x**21) + 
            L0x20019874_f * (x**22) + L0x20019876_f * (x**23) + 
            L0x20019878_f * (x**24) + L0x2001987a_f * (x**25) + 
            L0x2001987c_f * (x**26) + L0x2001987e_f * (x**27) + 
            L0x20019880_f * (x**28) + L0x20019882_f * (x**29) + 
            L0x20019884_f * (x**30) + L0x20019886_f * (x**31) + 
            L0x20019888_f * (x**32) + L0x2001988a_f * (x**33) + 
            L0x2001988c_f * (x**34) + L0x2001988e_f * (x**35) + 
            L0x20019890_f * (x**36) + L0x20019892_f * (x**37) + 
            L0x20019894_f * (x**38) + L0x20019896_f * (x**39) + 
            L0x20019898_f * (x**40) + L0x2001989a_f * (x**41) + 
            L0x2001989c_f * (x**42) + L0x2001989e_f * (x**43) + 
            L0x200198a0_f * (x**44) + L0x200198a2_f * (x**45) + 
            L0x200198a4_f * (x**46) + L0x200198a6_f * (x**47) + 
            L0x200198a8_f * (x**48) + L0x200198aa_f * (x**49) + 
            L0x200198ac_f * (x**50) + L0x200198ae_f * (x**51) + 
            L0x200198b0_f * (x**52) + L0x200198b2_f * (x**53) + 
            L0x200198b4_f * (x**54) + L0x200198b6_f * (x**55) + 
            L0x200198b8_f * (x**56) + L0x200198ba_f * (x**57) + 
            L0x200198bc_f * (x**58) + L0x200198be_f * (x**59) + 
            L0x200198c0_f * (x**60) + L0x200198c2_f * (x**61) + 
            L0x200198c4_f * (x**62) + L0x200198c6_f * (x**63) + 
            L0x200198c8_f * (x**64) + L0x200198ca_f * (x**65) + 
            L0x200198cc_f * (x**66) + L0x200198ce_f * (x**67) + 
            L0x200198d0_f * (x**68) + L0x200198d2_f * (x**69) + 
            L0x200198d4_f * (x**70) + L0x200198d6_f * (x**71) + 
            L0x200198d8_f * (x**72) + L0x200198da_f * (x**73) + 
            L0x200198dc_f * (x**74) + L0x200198de_f * (x**75) + 
            L0x200198e0_f * (x**76) + L0x200198e2_f * (x**77) + 
            L0x200198e4_f * (x**78) + L0x200198e6_f * (x**79) + 
            L0x200198e8_f * (x**80) + L0x200198ea_f * (x**81) + 
            L0x200198ec_f * (x**82) + L0x200198ee_f * (x**83) + 
            L0x200198f0_f * (x**84) + L0x200198f2_f * (x**85) + 
            L0x200198f4_f * (x**86) + L0x200198f6_f * (x**87) + 
            L0x200198f8_f * (x**88) + L0x200198fa_f * (x**89) + 
            L0x200198fc_f * (x**90) + L0x200198fe_f * (x**91) + 
            L0x20019900_f * (x**92) + L0x20019902_f * (x**93) + 
            L0x20019904_f * (x**94) + L0x20019906_f * (x**95) + 
            L0x20019908_f * (x**96) + L0x2001990a_f * (x**97) + 
            L0x2001990c_f * (x**98) + L0x2001990e_f * (x**99) + 
            L0x20019910_f * (x**100) + L0x20019912_f * (x**101) + 
            L0x20019914_f * (x**102) + L0x20019916_f * (x**103) + 
            L0x20019918_f * (x**104) + L0x2001991a_f * (x**105) + 
            L0x2001991c_f * (x**106) + L0x2001991e_f * (x**107) + 
            L0x20019920_f * (x**108) + L0x20019922_f * (x**109) + 
            L0x20019924_f * (x**110) + L0x20019926_f * (x**111) + 
            L0x20019928_f * (x**112) + L0x2001992a_f * (x**113) + 
            L0x2001992c_f * (x**114) + L0x2001992e_f * (x**115) + 
            L0x20019930_f * (x**116) + L0x20019932_f * (x**117) + 
            L0x20019934_f * (x**118) + L0x20019936_f * (x**119) + 
            L0x20019938_f * (x**120) + L0x2001993a_f * (x**121) + 
            L0x2001993c_f * (x**122) + L0x2001993e_f * (x**123) + 
            L0x20019940_f * (x**124) + L0x20019942_f * (x**125) + 
            L0x20019944_f * (x**126) + L0x20019946_f * (x**127) + 
            L0x20019948_f * (x**128) + L0x2001994a_f * (x**129) + 
            L0x2001994c_f * (x**130) + L0x2001994e_f * (x**131) + 
            L0x20019950_f * (x**132) + L0x20019952_f * (x**133) + 
            L0x20019954_f * (x**134) + L0x20019956_f * (x**135) + 
            L0x20019958_f * (x**136) + L0x2001995a_f * (x**137) + 
            L0x2001995c_f * (x**138) + L0x2001995e_f * (x**139) + 
            L0x20019960_f * (x**140) + L0x20019962_f * (x**141) + 
            L0x20019964_f * (x**142) + L0x20019966_f * (x**143) + 
            L0x20019968_f * (x**144) + L0x2001996a_f * (x**145) + 
            L0x2001996c_f * (x**146) + L0x2001996e_f * (x**147) + 
            L0x20019970_f * (x**148) + L0x20019972_f * (x**149) + 
            L0x20019974_f * (x**150) + L0x20019976_f * (x**151) + 
            L0x20019978_f * (x**152) + L0x2001997a_f * (x**153) + 
            L0x2001997c_f * (x**154) + L0x2001997e_f * (x**155) + 
            L0x20019980_f * (x**156) + L0x20019982_f * (x**157) + 
            L0x20019984_f * (x**158) + L0x20019986_f * (x**159) + 
            L0x20019988_f * (x**160) + L0x2001998a_f * (x**161) + 
            L0x2001998c_f * (x**162) + L0x2001998e_f * (x**163) + 
            L0x20019990_f * (x**164) + L0x20019992_f * (x**165) + 
            L0x20019994_f * (x**166) + L0x20019996_f * (x**167) + 
            L0x20019998_f * (x**168) + L0x2001999a_f * (x**169) + 
            L0x2001999c_f * (x**170) + L0x2001999e_f * (x**171) + 
            L0x200199a0_f * (x**172) + L0x200199a2_f * (x**173) + 
            L0x200199a4_f * (x**174) + L0x200199a6_f * (x**175) + 
            L0x200199a8_f * (x**176) + L0x200199aa_f * (x**177) + 
            L0x200199ac_f * (x**178) + L0x200199ae_f * (x**179) + 
            L0x200199b0_f * (x**180) + L0x200199b2_f * (x**181) + 
            L0x200199b4_f * (x**182) + L0x200199b6_f * (x**183) + 
            L0x200199b8_f * (x**184) + L0x200199ba_f * (x**185) + 
            L0x200199bc_f * (x**186) + L0x200199be_f * (x**187) + 
            L0x200199c0_f * (x**188) + L0x200199c2_f * (x**189) + 
            L0x200199c4_f * (x**190) + L0x200199c6_f * (x**191) + 
            L0x200199c8_f * (x**192) + L0x200199ca_f * (x**193) + 
            L0x200199cc_f * (x**194) + L0x200199ce_f * (x**195) + 
            L0x200199d0_f * (x**196) + L0x200199d2_f * (x**197) + 
            L0x200199d4_f * (x**198) + L0x200199d6_f * (x**199) + 
            L0x200199d8_f * (x**200) + L0x200199da_f * (x**201) + 
            L0x200199dc_f * (x**202) + L0x200199de_f * (x**203) + 
            L0x200199e0_f * (x**204) + L0x200199e2_f * (x**205) + 
            L0x200199e4_f * (x**206) + L0x200199e6_f * (x**207) + 
            L0x200199e8_f * (x**208) + L0x200199ea_f * (x**209) + 
            L0x200199ec_f * (x**210) + L0x200199ee_f * (x**211) + 
            L0x200199f0_f * (x**212) + L0x200199f2_f * (x**213) + 
            L0x200199f4_f * (x**214) + L0x200199f6_f * (x**215) + 
            L0x200199f8_f * (x**216) + L0x200199fa_f * (x**217) + 
            L0x200199fc_f * (x**218) + L0x200199fe_f * (x**219) + 
            L0x20019a00_f * (x**220) + L0x20019a02_f * (x**221) + 
            L0x20019a04_f * (x**222) + L0x20019a06_f * (x**223) + 
            L0x20019a08_f * (x**224) + L0x20019a0a_f * (x**225) + 
            L0x20019a0c_f * (x**226) + L0x20019a0e_f * (x**227) + 
            L0x20019a10_f * (x**228) + L0x20019a12_f * (x**229) + 
            L0x20019a14_f * (x**230) + L0x20019a16_f * (x**231) + 
            L0x20019a18_f * (x**232) + L0x20019a1a_f * (x**233) + 
            L0x20019a1c_f * (x**234) + L0x20019a1e_f * (x**235) + 
            L0x20019a20_f * (x**236) + L0x20019a22_f * (x**237) + 
            L0x20019a24_f * (x**238) + L0x20019a26_f * (x**239) + 
            L0x20019a28_f * (x**240) + L0x20019a2a_f * (x**241) + 
            L0x20019a2c_f * (x**242) + L0x20019a2e_f * (x**243) + 
            L0x20019a30_f * (x**244) + L0x20019a32_f * (x**245) + 
            L0x20019a34_f * (x**246) + L0x20019a36_f * (x**247) + 
            L0x20019a38_f * (x**248) + L0x20019a3a_f * (x**249) + 
            L0x20019a3c_f * (x**250) + L0x20019a3e_f * (x**251) + 
            L0x20019a40_f * (x**252) + L0x20019a42_f * (x**253) + 
            L0x20019a44_f * (x**254) + L0x20019a46_f * (x**255)
          )
          [25570049, x**4 - 710129],
    (* inp_poly_26 *)
    eqmod (2**32) * (inp_poly_26 * inp_poly_26)
          (
            L0x20019848_f * (x**0) + L0x2001984a_f * (x**1) + 
            L0x2001984c_f * (x**2) + L0x2001984e_f * (x**3) + 
            L0x20019850_f * (x**4) + L0x20019852_f * (x**5) + 
            L0x20019854_f * (x**6) + L0x20019856_f * (x**7) + 
            L0x20019858_f * (x**8) + L0x2001985a_f * (x**9) + 
            L0x2001985c_f * (x**10) + L0x2001985e_f * (x**11) + 
            L0x20019860_f * (x**12) + L0x20019862_f * (x**13) + 
            L0x20019864_f * (x**14) + L0x20019866_f * (x**15) + 
            L0x20019868_f * (x**16) + L0x2001986a_f * (x**17) + 
            L0x2001986c_f * (x**18) + L0x2001986e_f * (x**19) + 
            L0x20019870_f * (x**20) + L0x20019872_f * (x**21) + 
            L0x20019874_f * (x**22) + L0x20019876_f * (x**23) + 
            L0x20019878_f * (x**24) + L0x2001987a_f * (x**25) + 
            L0x2001987c_f * (x**26) + L0x2001987e_f * (x**27) + 
            L0x20019880_f * (x**28) + L0x20019882_f * (x**29) + 
            L0x20019884_f * (x**30) + L0x20019886_f * (x**31) + 
            L0x20019888_f * (x**32) + L0x2001988a_f * (x**33) + 
            L0x2001988c_f * (x**34) + L0x2001988e_f * (x**35) + 
            L0x20019890_f * (x**36) + L0x20019892_f * (x**37) + 
            L0x20019894_f * (x**38) + L0x20019896_f * (x**39) + 
            L0x20019898_f * (x**40) + L0x2001989a_f * (x**41) + 
            L0x2001989c_f * (x**42) + L0x2001989e_f * (x**43) + 
            L0x200198a0_f * (x**44) + L0x200198a2_f * (x**45) + 
            L0x200198a4_f * (x**46) + L0x200198a6_f * (x**47) + 
            L0x200198a8_f * (x**48) + L0x200198aa_f * (x**49) + 
            L0x200198ac_f * (x**50) + L0x200198ae_f * (x**51) + 
            L0x200198b0_f * (x**52) + L0x200198b2_f * (x**53) + 
            L0x200198b4_f * (x**54) + L0x200198b6_f * (x**55) + 
            L0x200198b8_f * (x**56) + L0x200198ba_f * (x**57) + 
            L0x200198bc_f * (x**58) + L0x200198be_f * (x**59) + 
            L0x200198c0_f * (x**60) + L0x200198c2_f * (x**61) + 
            L0x200198c4_f * (x**62) + L0x200198c6_f * (x**63) + 
            L0x200198c8_f * (x**64) + L0x200198ca_f * (x**65) + 
            L0x200198cc_f * (x**66) + L0x200198ce_f * (x**67) + 
            L0x200198d0_f * (x**68) + L0x200198d2_f * (x**69) + 
            L0x200198d4_f * (x**70) + L0x200198d6_f * (x**71) + 
            L0x200198d8_f * (x**72) + L0x200198da_f * (x**73) + 
            L0x200198dc_f * (x**74) + L0x200198de_f * (x**75) + 
            L0x200198e0_f * (x**76) + L0x200198e2_f * (x**77) + 
            L0x200198e4_f * (x**78) + L0x200198e6_f * (x**79) + 
            L0x200198e8_f * (x**80) + L0x200198ea_f * (x**81) + 
            L0x200198ec_f * (x**82) + L0x200198ee_f * (x**83) + 
            L0x200198f0_f * (x**84) + L0x200198f2_f * (x**85) + 
            L0x200198f4_f * (x**86) + L0x200198f6_f * (x**87) + 
            L0x200198f8_f * (x**88) + L0x200198fa_f * (x**89) + 
            L0x200198fc_f * (x**90) + L0x200198fe_f * (x**91) + 
            L0x20019900_f * (x**92) + L0x20019902_f * (x**93) + 
            L0x20019904_f * (x**94) + L0x20019906_f * (x**95) + 
            L0x20019908_f * (x**96) + L0x2001990a_f * (x**97) + 
            L0x2001990c_f * (x**98) + L0x2001990e_f * (x**99) + 
            L0x20019910_f * (x**100) + L0x20019912_f * (x**101) + 
            L0x20019914_f * (x**102) + L0x20019916_f * (x**103) + 
            L0x20019918_f * (x**104) + L0x2001991a_f * (x**105) + 
            L0x2001991c_f * (x**106) + L0x2001991e_f * (x**107) + 
            L0x20019920_f * (x**108) + L0x20019922_f * (x**109) + 
            L0x20019924_f * (x**110) + L0x20019926_f * (x**111) + 
            L0x20019928_f * (x**112) + L0x2001992a_f * (x**113) + 
            L0x2001992c_f * (x**114) + L0x2001992e_f * (x**115) + 
            L0x20019930_f * (x**116) + L0x20019932_f * (x**117) + 
            L0x20019934_f * (x**118) + L0x20019936_f * (x**119) + 
            L0x20019938_f * (x**120) + L0x2001993a_f * (x**121) + 
            L0x2001993c_f * (x**122) + L0x2001993e_f * (x**123) + 
            L0x20019940_f * (x**124) + L0x20019942_f * (x**125) + 
            L0x20019944_f * (x**126) + L0x20019946_f * (x**127) + 
            L0x20019948_f * (x**128) + L0x2001994a_f * (x**129) + 
            L0x2001994c_f * (x**130) + L0x2001994e_f * (x**131) + 
            L0x20019950_f * (x**132) + L0x20019952_f * (x**133) + 
            L0x20019954_f * (x**134) + L0x20019956_f * (x**135) + 
            L0x20019958_f * (x**136) + L0x2001995a_f * (x**137) + 
            L0x2001995c_f * (x**138) + L0x2001995e_f * (x**139) + 
            L0x20019960_f * (x**140) + L0x20019962_f * (x**141) + 
            L0x20019964_f * (x**142) + L0x20019966_f * (x**143) + 
            L0x20019968_f * (x**144) + L0x2001996a_f * (x**145) + 
            L0x2001996c_f * (x**146) + L0x2001996e_f * (x**147) + 
            L0x20019970_f * (x**148) + L0x20019972_f * (x**149) + 
            L0x20019974_f * (x**150) + L0x20019976_f * (x**151) + 
            L0x20019978_f * (x**152) + L0x2001997a_f * (x**153) + 
            L0x2001997c_f * (x**154) + L0x2001997e_f * (x**155) + 
            L0x20019980_f * (x**156) + L0x20019982_f * (x**157) + 
            L0x20019984_f * (x**158) + L0x20019986_f * (x**159) + 
            L0x20019988_f * (x**160) + L0x2001998a_f * (x**161) + 
            L0x2001998c_f * (x**162) + L0x2001998e_f * (x**163) + 
            L0x20019990_f * (x**164) + L0x20019992_f * (x**165) + 
            L0x20019994_f * (x**166) + L0x20019996_f * (x**167) + 
            L0x20019998_f * (x**168) + L0x2001999a_f * (x**169) + 
            L0x2001999c_f * (x**170) + L0x2001999e_f * (x**171) + 
            L0x200199a0_f * (x**172) + L0x200199a2_f * (x**173) + 
            L0x200199a4_f * (x**174) + L0x200199a6_f * (x**175) + 
            L0x200199a8_f * (x**176) + L0x200199aa_f * (x**177) + 
            L0x200199ac_f * (x**178) + L0x200199ae_f * (x**179) + 
            L0x200199b0_f * (x**180) + L0x200199b2_f * (x**181) + 
            L0x200199b4_f * (x**182) + L0x200199b6_f * (x**183) + 
            L0x200199b8_f * (x**184) + L0x200199ba_f * (x**185) + 
            L0x200199bc_f * (x**186) + L0x200199be_f * (x**187) + 
            L0x200199c0_f * (x**188) + L0x200199c2_f * (x**189) + 
            L0x200199c4_f * (x**190) + L0x200199c6_f * (x**191) + 
            L0x200199c8_f * (x**192) + L0x200199ca_f * (x**193) + 
            L0x200199cc_f * (x**194) + L0x200199ce_f * (x**195) + 
            L0x200199d0_f * (x**196) + L0x200199d2_f * (x**197) + 
            L0x200199d4_f * (x**198) + L0x200199d6_f * (x**199) + 
            L0x200199d8_f * (x**200) + L0x200199da_f * (x**201) + 
            L0x200199dc_f * (x**202) + L0x200199de_f * (x**203) + 
            L0x200199e0_f * (x**204) + L0x200199e2_f * (x**205) + 
            L0x200199e4_f * (x**206) + L0x200199e6_f * (x**207) + 
            L0x200199e8_f * (x**208) + L0x200199ea_f * (x**209) + 
            L0x200199ec_f * (x**210) + L0x200199ee_f * (x**211) + 
            L0x200199f0_f * (x**212) + L0x200199f2_f * (x**213) + 
            L0x200199f4_f * (x**214) + L0x200199f6_f * (x**215) + 
            L0x200199f8_f * (x**216) + L0x200199fa_f * (x**217) + 
            L0x200199fc_f * (x**218) + L0x200199fe_f * (x**219) + 
            L0x20019a00_f * (x**220) + L0x20019a02_f * (x**221) + 
            L0x20019a04_f * (x**222) + L0x20019a06_f * (x**223) + 
            L0x20019a08_f * (x**224) + L0x20019a0a_f * (x**225) + 
            L0x20019a0c_f * (x**226) + L0x20019a0e_f * (x**227) + 
            L0x20019a10_f * (x**228) + L0x20019a12_f * (x**229) + 
            L0x20019a14_f * (x**230) + L0x20019a16_f * (x**231) + 
            L0x20019a18_f * (x**232) + L0x20019a1a_f * (x**233) + 
            L0x20019a1c_f * (x**234) + L0x20019a1e_f * (x**235) + 
            L0x20019a20_f * (x**236) + L0x20019a22_f * (x**237) + 
            L0x20019a24_f * (x**238) + L0x20019a26_f * (x**239) + 
            L0x20019a28_f * (x**240) + L0x20019a2a_f * (x**241) + 
            L0x20019a2c_f * (x**242) + L0x20019a2e_f * (x**243) + 
            L0x20019a30_f * (x**244) + L0x20019a32_f * (x**245) + 
            L0x20019a34_f * (x**246) + L0x20019a36_f * (x**247) + 
            L0x20019a38_f * (x**248) + L0x20019a3a_f * (x**249) + 
            L0x20019a3c_f * (x**250) + L0x20019a3e_f * (x**251) + 
            L0x20019a40_f * (x**252) + L0x20019a42_f * (x**253) + 
            L0x20019a44_f * (x**254) + L0x20019a46_f * (x**255)
          )
          [25570049, x**4 - 4519508],
    (* inp_poly_27 *)
    eqmod (2**32) * (inp_poly_27 * inp_poly_27)
          (
            L0x20019848_f * (x**0) + L0x2001984a_f * (x**1) + 
            L0x2001984c_f * (x**2) + L0x2001984e_f * (x**3) + 
            L0x20019850_f * (x**4) + L0x20019852_f * (x**5) + 
            L0x20019854_f * (x**6) + L0x20019856_f * (x**7) + 
            L0x20019858_f * (x**8) + L0x2001985a_f * (x**9) + 
            L0x2001985c_f * (x**10) + L0x2001985e_f * (x**11) + 
            L0x20019860_f * (x**12) + L0x20019862_f * (x**13) + 
            L0x20019864_f * (x**14) + L0x20019866_f * (x**15) + 
            L0x20019868_f * (x**16) + L0x2001986a_f * (x**17) + 
            L0x2001986c_f * (x**18) + L0x2001986e_f * (x**19) + 
            L0x20019870_f * (x**20) + L0x20019872_f * (x**21) + 
            L0x20019874_f * (x**22) + L0x20019876_f * (x**23) + 
            L0x20019878_f * (x**24) + L0x2001987a_f * (x**25) + 
            L0x2001987c_f * (x**26) + L0x2001987e_f * (x**27) + 
            L0x20019880_f * (x**28) + L0x20019882_f * (x**29) + 
            L0x20019884_f * (x**30) + L0x20019886_f * (x**31) + 
            L0x20019888_f * (x**32) + L0x2001988a_f * (x**33) + 
            L0x2001988c_f * (x**34) + L0x2001988e_f * (x**35) + 
            L0x20019890_f * (x**36) + L0x20019892_f * (x**37) + 
            L0x20019894_f * (x**38) + L0x20019896_f * (x**39) + 
            L0x20019898_f * (x**40) + L0x2001989a_f * (x**41) + 
            L0x2001989c_f * (x**42) + L0x2001989e_f * (x**43) + 
            L0x200198a0_f * (x**44) + L0x200198a2_f * (x**45) + 
            L0x200198a4_f * (x**46) + L0x200198a6_f * (x**47) + 
            L0x200198a8_f * (x**48) + L0x200198aa_f * (x**49) + 
            L0x200198ac_f * (x**50) + L0x200198ae_f * (x**51) + 
            L0x200198b0_f * (x**52) + L0x200198b2_f * (x**53) + 
            L0x200198b4_f * (x**54) + L0x200198b6_f * (x**55) + 
            L0x200198b8_f * (x**56) + L0x200198ba_f * (x**57) + 
            L0x200198bc_f * (x**58) + L0x200198be_f * (x**59) + 
            L0x200198c0_f * (x**60) + L0x200198c2_f * (x**61) + 
            L0x200198c4_f * (x**62) + L0x200198c6_f * (x**63) + 
            L0x200198c8_f * (x**64) + L0x200198ca_f * (x**65) + 
            L0x200198cc_f * (x**66) + L0x200198ce_f * (x**67) + 
            L0x200198d0_f * (x**68) + L0x200198d2_f * (x**69) + 
            L0x200198d4_f * (x**70) + L0x200198d6_f * (x**71) + 
            L0x200198d8_f * (x**72) + L0x200198da_f * (x**73) + 
            L0x200198dc_f * (x**74) + L0x200198de_f * (x**75) + 
            L0x200198e0_f * (x**76) + L0x200198e2_f * (x**77) + 
            L0x200198e4_f * (x**78) + L0x200198e6_f * (x**79) + 
            L0x200198e8_f * (x**80) + L0x200198ea_f * (x**81) + 
            L0x200198ec_f * (x**82) + L0x200198ee_f * (x**83) + 
            L0x200198f0_f * (x**84) + L0x200198f2_f * (x**85) + 
            L0x200198f4_f * (x**86) + L0x200198f6_f * (x**87) + 
            L0x200198f8_f * (x**88) + L0x200198fa_f * (x**89) + 
            L0x200198fc_f * (x**90) + L0x200198fe_f * (x**91) + 
            L0x20019900_f * (x**92) + L0x20019902_f * (x**93) + 
            L0x20019904_f * (x**94) + L0x20019906_f * (x**95) + 
            L0x20019908_f * (x**96) + L0x2001990a_f * (x**97) + 
            L0x2001990c_f * (x**98) + L0x2001990e_f * (x**99) + 
            L0x20019910_f * (x**100) + L0x20019912_f * (x**101) + 
            L0x20019914_f * (x**102) + L0x20019916_f * (x**103) + 
            L0x20019918_f * (x**104) + L0x2001991a_f * (x**105) + 
            L0x2001991c_f * (x**106) + L0x2001991e_f * (x**107) + 
            L0x20019920_f * (x**108) + L0x20019922_f * (x**109) + 
            L0x20019924_f * (x**110) + L0x20019926_f * (x**111) + 
            L0x20019928_f * (x**112) + L0x2001992a_f * (x**113) + 
            L0x2001992c_f * (x**114) + L0x2001992e_f * (x**115) + 
            L0x20019930_f * (x**116) + L0x20019932_f * (x**117) + 
            L0x20019934_f * (x**118) + L0x20019936_f * (x**119) + 
            L0x20019938_f * (x**120) + L0x2001993a_f * (x**121) + 
            L0x2001993c_f * (x**122) + L0x2001993e_f * (x**123) + 
            L0x20019940_f * (x**124) + L0x20019942_f * (x**125) + 
            L0x20019944_f * (x**126) + L0x20019946_f * (x**127) + 
            L0x20019948_f * (x**128) + L0x2001994a_f * (x**129) + 
            L0x2001994c_f * (x**130) + L0x2001994e_f * (x**131) + 
            L0x20019950_f * (x**132) + L0x20019952_f * (x**133) + 
            L0x20019954_f * (x**134) + L0x20019956_f * (x**135) + 
            L0x20019958_f * (x**136) + L0x2001995a_f * (x**137) + 
            L0x2001995c_f * (x**138) + L0x2001995e_f * (x**139) + 
            L0x20019960_f * (x**140) + L0x20019962_f * (x**141) + 
            L0x20019964_f * (x**142) + L0x20019966_f * (x**143) + 
            L0x20019968_f * (x**144) + L0x2001996a_f * (x**145) + 
            L0x2001996c_f * (x**146) + L0x2001996e_f * (x**147) + 
            L0x20019970_f * (x**148) + L0x20019972_f * (x**149) + 
            L0x20019974_f * (x**150) + L0x20019976_f * (x**151) + 
            L0x20019978_f * (x**152) + L0x2001997a_f * (x**153) + 
            L0x2001997c_f * (x**154) + L0x2001997e_f * (x**155) + 
            L0x20019980_f * (x**156) + L0x20019982_f * (x**157) + 
            L0x20019984_f * (x**158) + L0x20019986_f * (x**159) + 
            L0x20019988_f * (x**160) + L0x2001998a_f * (x**161) + 
            L0x2001998c_f * (x**162) + L0x2001998e_f * (x**163) + 
            L0x20019990_f * (x**164) + L0x20019992_f * (x**165) + 
            L0x20019994_f * (x**166) + L0x20019996_f * (x**167) + 
            L0x20019998_f * (x**168) + L0x2001999a_f * (x**169) + 
            L0x2001999c_f * (x**170) + L0x2001999e_f * (x**171) + 
            L0x200199a0_f * (x**172) + L0x200199a2_f * (x**173) + 
            L0x200199a4_f * (x**174) + L0x200199a6_f * (x**175) + 
            L0x200199a8_f * (x**176) + L0x200199aa_f * (x**177) + 
            L0x200199ac_f * (x**178) + L0x200199ae_f * (x**179) + 
            L0x200199b0_f * (x**180) + L0x200199b2_f * (x**181) + 
            L0x200199b4_f * (x**182) + L0x200199b6_f * (x**183) + 
            L0x200199b8_f * (x**184) + L0x200199ba_f * (x**185) + 
            L0x200199bc_f * (x**186) + L0x200199be_f * (x**187) + 
            L0x200199c0_f * (x**188) + L0x200199c2_f * (x**189) + 
            L0x200199c4_f * (x**190) + L0x200199c6_f * (x**191) + 
            L0x200199c8_f * (x**192) + L0x200199ca_f * (x**193) + 
            L0x200199cc_f * (x**194) + L0x200199ce_f * (x**195) + 
            L0x200199d0_f * (x**196) + L0x200199d2_f * (x**197) + 
            L0x200199d4_f * (x**198) + L0x200199d6_f * (x**199) + 
            L0x200199d8_f * (x**200) + L0x200199da_f * (x**201) + 
            L0x200199dc_f * (x**202) + L0x200199de_f * (x**203) + 
            L0x200199e0_f * (x**204) + L0x200199e2_f * (x**205) + 
            L0x200199e4_f * (x**206) + L0x200199e6_f * (x**207) + 
            L0x200199e8_f * (x**208) + L0x200199ea_f * (x**209) + 
            L0x200199ec_f * (x**210) + L0x200199ee_f * (x**211) + 
            L0x200199f0_f * (x**212) + L0x200199f2_f * (x**213) + 
            L0x200199f4_f * (x**214) + L0x200199f6_f * (x**215) + 
            L0x200199f8_f * (x**216) + L0x200199fa_f * (x**217) + 
            L0x200199fc_f * (x**218) + L0x200199fe_f * (x**219) + 
            L0x20019a00_f * (x**220) + L0x20019a02_f * (x**221) + 
            L0x20019a04_f * (x**222) + L0x20019a06_f * (x**223) + 
            L0x20019a08_f * (x**224) + L0x20019a0a_f * (x**225) + 
            L0x20019a0c_f * (x**226) + L0x20019a0e_f * (x**227) + 
            L0x20019a10_f * (x**228) + L0x20019a12_f * (x**229) + 
            L0x20019a14_f * (x**230) + L0x20019a16_f * (x**231) + 
            L0x20019a18_f * (x**232) + L0x20019a1a_f * (x**233) + 
            L0x20019a1c_f * (x**234) + L0x20019a1e_f * (x**235) + 
            L0x20019a20_f * (x**236) + L0x20019a22_f * (x**237) + 
            L0x20019a24_f * (x**238) + L0x20019a26_f * (x**239) + 
            L0x20019a28_f * (x**240) + L0x20019a2a_f * (x**241) + 
            L0x20019a2c_f * (x**242) + L0x20019a2e_f * (x**243) + 
            L0x20019a30_f * (x**244) + L0x20019a32_f * (x**245) + 
            L0x20019a34_f * (x**246) + L0x20019a36_f * (x**247) + 
            L0x20019a38_f * (x**248) + L0x20019a3a_f * (x**249) + 
            L0x20019a3c_f * (x**250) + L0x20019a3e_f * (x**251) + 
            L0x20019a40_f * (x**252) + L0x20019a42_f * (x**253) + 
            L0x20019a44_f * (x**254) + L0x20019a46_f * (x**255)
          )
          [25570049, x**4 - 21050541],
    (* inp_poly_28 *)
    eqmod (2**32) * (inp_poly_28 * inp_poly_28)
          (
            L0x20019848_f * (x**0) + L0x2001984a_f * (x**1) + 
            L0x2001984c_f * (x**2) + L0x2001984e_f * (x**3) + 
            L0x20019850_f * (x**4) + L0x20019852_f * (x**5) + 
            L0x20019854_f * (x**6) + L0x20019856_f * (x**7) + 
            L0x20019858_f * (x**8) + L0x2001985a_f * (x**9) + 
            L0x2001985c_f * (x**10) + L0x2001985e_f * (x**11) + 
            L0x20019860_f * (x**12) + L0x20019862_f * (x**13) + 
            L0x20019864_f * (x**14) + L0x20019866_f * (x**15) + 
            L0x20019868_f * (x**16) + L0x2001986a_f * (x**17) + 
            L0x2001986c_f * (x**18) + L0x2001986e_f * (x**19) + 
            L0x20019870_f * (x**20) + L0x20019872_f * (x**21) + 
            L0x20019874_f * (x**22) + L0x20019876_f * (x**23) + 
            L0x20019878_f * (x**24) + L0x2001987a_f * (x**25) + 
            L0x2001987c_f * (x**26) + L0x2001987e_f * (x**27) + 
            L0x20019880_f * (x**28) + L0x20019882_f * (x**29) + 
            L0x20019884_f * (x**30) + L0x20019886_f * (x**31) + 
            L0x20019888_f * (x**32) + L0x2001988a_f * (x**33) + 
            L0x2001988c_f * (x**34) + L0x2001988e_f * (x**35) + 
            L0x20019890_f * (x**36) + L0x20019892_f * (x**37) + 
            L0x20019894_f * (x**38) + L0x20019896_f * (x**39) + 
            L0x20019898_f * (x**40) + L0x2001989a_f * (x**41) + 
            L0x2001989c_f * (x**42) + L0x2001989e_f * (x**43) + 
            L0x200198a0_f * (x**44) + L0x200198a2_f * (x**45) + 
            L0x200198a4_f * (x**46) + L0x200198a6_f * (x**47) + 
            L0x200198a8_f * (x**48) + L0x200198aa_f * (x**49) + 
            L0x200198ac_f * (x**50) + L0x200198ae_f * (x**51) + 
            L0x200198b0_f * (x**52) + L0x200198b2_f * (x**53) + 
            L0x200198b4_f * (x**54) + L0x200198b6_f * (x**55) + 
            L0x200198b8_f * (x**56) + L0x200198ba_f * (x**57) + 
            L0x200198bc_f * (x**58) + L0x200198be_f * (x**59) + 
            L0x200198c0_f * (x**60) + L0x200198c2_f * (x**61) + 
            L0x200198c4_f * (x**62) + L0x200198c6_f * (x**63) + 
            L0x200198c8_f * (x**64) + L0x200198ca_f * (x**65) + 
            L0x200198cc_f * (x**66) + L0x200198ce_f * (x**67) + 
            L0x200198d0_f * (x**68) + L0x200198d2_f * (x**69) + 
            L0x200198d4_f * (x**70) + L0x200198d6_f * (x**71) + 
            L0x200198d8_f * (x**72) + L0x200198da_f * (x**73) + 
            L0x200198dc_f * (x**74) + L0x200198de_f * (x**75) + 
            L0x200198e0_f * (x**76) + L0x200198e2_f * (x**77) + 
            L0x200198e4_f * (x**78) + L0x200198e6_f * (x**79) + 
            L0x200198e8_f * (x**80) + L0x200198ea_f * (x**81) + 
            L0x200198ec_f * (x**82) + L0x200198ee_f * (x**83) + 
            L0x200198f0_f * (x**84) + L0x200198f2_f * (x**85) + 
            L0x200198f4_f * (x**86) + L0x200198f6_f * (x**87) + 
            L0x200198f8_f * (x**88) + L0x200198fa_f * (x**89) + 
            L0x200198fc_f * (x**90) + L0x200198fe_f * (x**91) + 
            L0x20019900_f * (x**92) + L0x20019902_f * (x**93) + 
            L0x20019904_f * (x**94) + L0x20019906_f * (x**95) + 
            L0x20019908_f * (x**96) + L0x2001990a_f * (x**97) + 
            L0x2001990c_f * (x**98) + L0x2001990e_f * (x**99) + 
            L0x20019910_f * (x**100) + L0x20019912_f * (x**101) + 
            L0x20019914_f * (x**102) + L0x20019916_f * (x**103) + 
            L0x20019918_f * (x**104) + L0x2001991a_f * (x**105) + 
            L0x2001991c_f * (x**106) + L0x2001991e_f * (x**107) + 
            L0x20019920_f * (x**108) + L0x20019922_f * (x**109) + 
            L0x20019924_f * (x**110) + L0x20019926_f * (x**111) + 
            L0x20019928_f * (x**112) + L0x2001992a_f * (x**113) + 
            L0x2001992c_f * (x**114) + L0x2001992e_f * (x**115) + 
            L0x20019930_f * (x**116) + L0x20019932_f * (x**117) + 
            L0x20019934_f * (x**118) + L0x20019936_f * (x**119) + 
            L0x20019938_f * (x**120) + L0x2001993a_f * (x**121) + 
            L0x2001993c_f * (x**122) + L0x2001993e_f * (x**123) + 
            L0x20019940_f * (x**124) + L0x20019942_f * (x**125) + 
            L0x20019944_f * (x**126) + L0x20019946_f * (x**127) + 
            L0x20019948_f * (x**128) + L0x2001994a_f * (x**129) + 
            L0x2001994c_f * (x**130) + L0x2001994e_f * (x**131) + 
            L0x20019950_f * (x**132) + L0x20019952_f * (x**133) + 
            L0x20019954_f * (x**134) + L0x20019956_f * (x**135) + 
            L0x20019958_f * (x**136) + L0x2001995a_f * (x**137) + 
            L0x2001995c_f * (x**138) + L0x2001995e_f * (x**139) + 
            L0x20019960_f * (x**140) + L0x20019962_f * (x**141) + 
            L0x20019964_f * (x**142) + L0x20019966_f * (x**143) + 
            L0x20019968_f * (x**144) + L0x2001996a_f * (x**145) + 
            L0x2001996c_f * (x**146) + L0x2001996e_f * (x**147) + 
            L0x20019970_f * (x**148) + L0x20019972_f * (x**149) + 
            L0x20019974_f * (x**150) + L0x20019976_f * (x**151) + 
            L0x20019978_f * (x**152) + L0x2001997a_f * (x**153) + 
            L0x2001997c_f * (x**154) + L0x2001997e_f * (x**155) + 
            L0x20019980_f * (x**156) + L0x20019982_f * (x**157) + 
            L0x20019984_f * (x**158) + L0x20019986_f * (x**159) + 
            L0x20019988_f * (x**160) + L0x2001998a_f * (x**161) + 
            L0x2001998c_f * (x**162) + L0x2001998e_f * (x**163) + 
            L0x20019990_f * (x**164) + L0x20019992_f * (x**165) + 
            L0x20019994_f * (x**166) + L0x20019996_f * (x**167) + 
            L0x20019998_f * (x**168) + L0x2001999a_f * (x**169) + 
            L0x2001999c_f * (x**170) + L0x2001999e_f * (x**171) + 
            L0x200199a0_f * (x**172) + L0x200199a2_f * (x**173) + 
            L0x200199a4_f * (x**174) + L0x200199a6_f * (x**175) + 
            L0x200199a8_f * (x**176) + L0x200199aa_f * (x**177) + 
            L0x200199ac_f * (x**178) + L0x200199ae_f * (x**179) + 
            L0x200199b0_f * (x**180) + L0x200199b2_f * (x**181) + 
            L0x200199b4_f * (x**182) + L0x200199b6_f * (x**183) + 
            L0x200199b8_f * (x**184) + L0x200199ba_f * (x**185) + 
            L0x200199bc_f * (x**186) + L0x200199be_f * (x**187) + 
            L0x200199c0_f * (x**188) + L0x200199c2_f * (x**189) + 
            L0x200199c4_f * (x**190) + L0x200199c6_f * (x**191) + 
            L0x200199c8_f * (x**192) + L0x200199ca_f * (x**193) + 
            L0x200199cc_f * (x**194) + L0x200199ce_f * (x**195) + 
            L0x200199d0_f * (x**196) + L0x200199d2_f * (x**197) + 
            L0x200199d4_f * (x**198) + L0x200199d6_f * (x**199) + 
            L0x200199d8_f * (x**200) + L0x200199da_f * (x**201) + 
            L0x200199dc_f * (x**202) + L0x200199de_f * (x**203) + 
            L0x200199e0_f * (x**204) + L0x200199e2_f * (x**205) + 
            L0x200199e4_f * (x**206) + L0x200199e6_f * (x**207) + 
            L0x200199e8_f * (x**208) + L0x200199ea_f * (x**209) + 
            L0x200199ec_f * (x**210) + L0x200199ee_f * (x**211) + 
            L0x200199f0_f * (x**212) + L0x200199f2_f * (x**213) + 
            L0x200199f4_f * (x**214) + L0x200199f6_f * (x**215) + 
            L0x200199f8_f * (x**216) + L0x200199fa_f * (x**217) + 
            L0x200199fc_f * (x**218) + L0x200199fe_f * (x**219) + 
            L0x20019a00_f * (x**220) + L0x20019a02_f * (x**221) + 
            L0x20019a04_f * (x**222) + L0x20019a06_f * (x**223) + 
            L0x20019a08_f * (x**224) + L0x20019a0a_f * (x**225) + 
            L0x20019a0c_f * (x**226) + L0x20019a0e_f * (x**227) + 
            L0x20019a10_f * (x**228) + L0x20019a12_f * (x**229) + 
            L0x20019a14_f * (x**230) + L0x20019a16_f * (x**231) + 
            L0x20019a18_f * (x**232) + L0x20019a1a_f * (x**233) + 
            L0x20019a1c_f * (x**234) + L0x20019a1e_f * (x**235) + 
            L0x20019a20_f * (x**236) + L0x20019a22_f * (x**237) + 
            L0x20019a24_f * (x**238) + L0x20019a26_f * (x**239) + 
            L0x20019a28_f * (x**240) + L0x20019a2a_f * (x**241) + 
            L0x20019a2c_f * (x**242) + L0x20019a2e_f * (x**243) + 
            L0x20019a30_f * (x**244) + L0x20019a32_f * (x**245) + 
            L0x20019a34_f * (x**246) + L0x20019a36_f * (x**247) + 
            L0x20019a38_f * (x**248) + L0x20019a3a_f * (x**249) + 
            L0x20019a3c_f * (x**250) + L0x20019a3e_f * (x**251) + 
            L0x20019a40_f * (x**252) + L0x20019a42_f * (x**253) + 
            L0x20019a44_f * (x**254) + L0x20019a46_f * (x**255)
          )
          [25570049, x**4 - 1712131],
    (* inp_poly_29 *)
    eqmod (2**32) * (inp_poly_29 * inp_poly_29)
          (
            L0x20019848_f * (x**0) + L0x2001984a_f * (x**1) + 
            L0x2001984c_f * (x**2) + L0x2001984e_f * (x**3) + 
            L0x20019850_f * (x**4) + L0x20019852_f * (x**5) + 
            L0x20019854_f * (x**6) + L0x20019856_f * (x**7) + 
            L0x20019858_f * (x**8) + L0x2001985a_f * (x**9) + 
            L0x2001985c_f * (x**10) + L0x2001985e_f * (x**11) + 
            L0x20019860_f * (x**12) + L0x20019862_f * (x**13) + 
            L0x20019864_f * (x**14) + L0x20019866_f * (x**15) + 
            L0x20019868_f * (x**16) + L0x2001986a_f * (x**17) + 
            L0x2001986c_f * (x**18) + L0x2001986e_f * (x**19) + 
            L0x20019870_f * (x**20) + L0x20019872_f * (x**21) + 
            L0x20019874_f * (x**22) + L0x20019876_f * (x**23) + 
            L0x20019878_f * (x**24) + L0x2001987a_f * (x**25) + 
            L0x2001987c_f * (x**26) + L0x2001987e_f * (x**27) + 
            L0x20019880_f * (x**28) + L0x20019882_f * (x**29) + 
            L0x20019884_f * (x**30) + L0x20019886_f * (x**31) + 
            L0x20019888_f * (x**32) + L0x2001988a_f * (x**33) + 
            L0x2001988c_f * (x**34) + L0x2001988e_f * (x**35) + 
            L0x20019890_f * (x**36) + L0x20019892_f * (x**37) + 
            L0x20019894_f * (x**38) + L0x20019896_f * (x**39) + 
            L0x20019898_f * (x**40) + L0x2001989a_f * (x**41) + 
            L0x2001989c_f * (x**42) + L0x2001989e_f * (x**43) + 
            L0x200198a0_f * (x**44) + L0x200198a2_f * (x**45) + 
            L0x200198a4_f * (x**46) + L0x200198a6_f * (x**47) + 
            L0x200198a8_f * (x**48) + L0x200198aa_f * (x**49) + 
            L0x200198ac_f * (x**50) + L0x200198ae_f * (x**51) + 
            L0x200198b0_f * (x**52) + L0x200198b2_f * (x**53) + 
            L0x200198b4_f * (x**54) + L0x200198b6_f * (x**55) + 
            L0x200198b8_f * (x**56) + L0x200198ba_f * (x**57) + 
            L0x200198bc_f * (x**58) + L0x200198be_f * (x**59) + 
            L0x200198c0_f * (x**60) + L0x200198c2_f * (x**61) + 
            L0x200198c4_f * (x**62) + L0x200198c6_f * (x**63) + 
            L0x200198c8_f * (x**64) + L0x200198ca_f * (x**65) + 
            L0x200198cc_f * (x**66) + L0x200198ce_f * (x**67) + 
            L0x200198d0_f * (x**68) + L0x200198d2_f * (x**69) + 
            L0x200198d4_f * (x**70) + L0x200198d6_f * (x**71) + 
            L0x200198d8_f * (x**72) + L0x200198da_f * (x**73) + 
            L0x200198dc_f * (x**74) + L0x200198de_f * (x**75) + 
            L0x200198e0_f * (x**76) + L0x200198e2_f * (x**77) + 
            L0x200198e4_f * (x**78) + L0x200198e6_f * (x**79) + 
            L0x200198e8_f * (x**80) + L0x200198ea_f * (x**81) + 
            L0x200198ec_f * (x**82) + L0x200198ee_f * (x**83) + 
            L0x200198f0_f * (x**84) + L0x200198f2_f * (x**85) + 
            L0x200198f4_f * (x**86) + L0x200198f6_f * (x**87) + 
            L0x200198f8_f * (x**88) + L0x200198fa_f * (x**89) + 
            L0x200198fc_f * (x**90) + L0x200198fe_f * (x**91) + 
            L0x20019900_f * (x**92) + L0x20019902_f * (x**93) + 
            L0x20019904_f * (x**94) + L0x20019906_f * (x**95) + 
            L0x20019908_f * (x**96) + L0x2001990a_f * (x**97) + 
            L0x2001990c_f * (x**98) + L0x2001990e_f * (x**99) + 
            L0x20019910_f * (x**100) + L0x20019912_f * (x**101) + 
            L0x20019914_f * (x**102) + L0x20019916_f * (x**103) + 
            L0x20019918_f * (x**104) + L0x2001991a_f * (x**105) + 
            L0x2001991c_f * (x**106) + L0x2001991e_f * (x**107) + 
            L0x20019920_f * (x**108) + L0x20019922_f * (x**109) + 
            L0x20019924_f * (x**110) + L0x20019926_f * (x**111) + 
            L0x20019928_f * (x**112) + L0x2001992a_f * (x**113) + 
            L0x2001992c_f * (x**114) + L0x2001992e_f * (x**115) + 
            L0x20019930_f * (x**116) + L0x20019932_f * (x**117) + 
            L0x20019934_f * (x**118) + L0x20019936_f * (x**119) + 
            L0x20019938_f * (x**120) + L0x2001993a_f * (x**121) + 
            L0x2001993c_f * (x**122) + L0x2001993e_f * (x**123) + 
            L0x20019940_f * (x**124) + L0x20019942_f * (x**125) + 
            L0x20019944_f * (x**126) + L0x20019946_f * (x**127) + 
            L0x20019948_f * (x**128) + L0x2001994a_f * (x**129) + 
            L0x2001994c_f * (x**130) + L0x2001994e_f * (x**131) + 
            L0x20019950_f * (x**132) + L0x20019952_f * (x**133) + 
            L0x20019954_f * (x**134) + L0x20019956_f * (x**135) + 
            L0x20019958_f * (x**136) + L0x2001995a_f * (x**137) + 
            L0x2001995c_f * (x**138) + L0x2001995e_f * (x**139) + 
            L0x20019960_f * (x**140) + L0x20019962_f * (x**141) + 
            L0x20019964_f * (x**142) + L0x20019966_f * (x**143) + 
            L0x20019968_f * (x**144) + L0x2001996a_f * (x**145) + 
            L0x2001996c_f * (x**146) + L0x2001996e_f * (x**147) + 
            L0x20019970_f * (x**148) + L0x20019972_f * (x**149) + 
            L0x20019974_f * (x**150) + L0x20019976_f * (x**151) + 
            L0x20019978_f * (x**152) + L0x2001997a_f * (x**153) + 
            L0x2001997c_f * (x**154) + L0x2001997e_f * (x**155) + 
            L0x20019980_f * (x**156) + L0x20019982_f * (x**157) + 
            L0x20019984_f * (x**158) + L0x20019986_f * (x**159) + 
            L0x20019988_f * (x**160) + L0x2001998a_f * (x**161) + 
            L0x2001998c_f * (x**162) + L0x2001998e_f * (x**163) + 
            L0x20019990_f * (x**164) + L0x20019992_f * (x**165) + 
            L0x20019994_f * (x**166) + L0x20019996_f * (x**167) + 
            L0x20019998_f * (x**168) + L0x2001999a_f * (x**169) + 
            L0x2001999c_f * (x**170) + L0x2001999e_f * (x**171) + 
            L0x200199a0_f * (x**172) + L0x200199a2_f * (x**173) + 
            L0x200199a4_f * (x**174) + L0x200199a6_f * (x**175) + 
            L0x200199a8_f * (x**176) + L0x200199aa_f * (x**177) + 
            L0x200199ac_f * (x**178) + L0x200199ae_f * (x**179) + 
            L0x200199b0_f * (x**180) + L0x200199b2_f * (x**181) + 
            L0x200199b4_f * (x**182) + L0x200199b6_f * (x**183) + 
            L0x200199b8_f * (x**184) + L0x200199ba_f * (x**185) + 
            L0x200199bc_f * (x**186) + L0x200199be_f * (x**187) + 
            L0x200199c0_f * (x**188) + L0x200199c2_f * (x**189) + 
            L0x200199c4_f * (x**190) + L0x200199c6_f * (x**191) + 
            L0x200199c8_f * (x**192) + L0x200199ca_f * (x**193) + 
            L0x200199cc_f * (x**194) + L0x200199ce_f * (x**195) + 
            L0x200199d0_f * (x**196) + L0x200199d2_f * (x**197) + 
            L0x200199d4_f * (x**198) + L0x200199d6_f * (x**199) + 
            L0x200199d8_f * (x**200) + L0x200199da_f * (x**201) + 
            L0x200199dc_f * (x**202) + L0x200199de_f * (x**203) + 
            L0x200199e0_f * (x**204) + L0x200199e2_f * (x**205) + 
            L0x200199e4_f * (x**206) + L0x200199e6_f * (x**207) + 
            L0x200199e8_f * (x**208) + L0x200199ea_f * (x**209) + 
            L0x200199ec_f * (x**210) + L0x200199ee_f * (x**211) + 
            L0x200199f0_f * (x**212) + L0x200199f2_f * (x**213) + 
            L0x200199f4_f * (x**214) + L0x200199f6_f * (x**215) + 
            L0x200199f8_f * (x**216) + L0x200199fa_f * (x**217) + 
            L0x200199fc_f * (x**218) + L0x200199fe_f * (x**219) + 
            L0x20019a00_f * (x**220) + L0x20019a02_f * (x**221) + 
            L0x20019a04_f * (x**222) + L0x20019a06_f * (x**223) + 
            L0x20019a08_f * (x**224) + L0x20019a0a_f * (x**225) + 
            L0x20019a0c_f * (x**226) + L0x20019a0e_f * (x**227) + 
            L0x20019a10_f * (x**228) + L0x20019a12_f * (x**229) + 
            L0x20019a14_f * (x**230) + L0x20019a16_f * (x**231) + 
            L0x20019a18_f * (x**232) + L0x20019a1a_f * (x**233) + 
            L0x20019a1c_f * (x**234) + L0x20019a1e_f * (x**235) + 
            L0x20019a20_f * (x**236) + L0x20019a22_f * (x**237) + 
            L0x20019a24_f * (x**238) + L0x20019a26_f * (x**239) + 
            L0x20019a28_f * (x**240) + L0x20019a2a_f * (x**241) + 
            L0x20019a2c_f * (x**242) + L0x20019a2e_f * (x**243) + 
            L0x20019a30_f * (x**244) + L0x20019a32_f * (x**245) + 
            L0x20019a34_f * (x**246) + L0x20019a36_f * (x**247) + 
            L0x20019a38_f * (x**248) + L0x20019a3a_f * (x**249) + 
            L0x20019a3c_f * (x**250) + L0x20019a3e_f * (x**251) + 
            L0x20019a40_f * (x**252) + L0x20019a42_f * (x**253) + 
            L0x20019a44_f * (x**254) + L0x20019a46_f * (x**255)
          )
          [25570049, x**4 - 23857918],
    (* inp_poly_30 *)
    eqmod (2**32) * (inp_poly_30 * inp_poly_30)
          (
            L0x20019848_f * (x**0) + L0x2001984a_f * (x**1) + 
            L0x2001984c_f * (x**2) + L0x2001984e_f * (x**3) + 
            L0x20019850_f * (x**4) + L0x20019852_f * (x**5) + 
            L0x20019854_f * (x**6) + L0x20019856_f * (x**7) + 
            L0x20019858_f * (x**8) + L0x2001985a_f * (x**9) + 
            L0x2001985c_f * (x**10) + L0x2001985e_f * (x**11) + 
            L0x20019860_f * (x**12) + L0x20019862_f * (x**13) + 
            L0x20019864_f * (x**14) + L0x20019866_f * (x**15) + 
            L0x20019868_f * (x**16) + L0x2001986a_f * (x**17) + 
            L0x2001986c_f * (x**18) + L0x2001986e_f * (x**19) + 
            L0x20019870_f * (x**20) + L0x20019872_f * (x**21) + 
            L0x20019874_f * (x**22) + L0x20019876_f * (x**23) + 
            L0x20019878_f * (x**24) + L0x2001987a_f * (x**25) + 
            L0x2001987c_f * (x**26) + L0x2001987e_f * (x**27) + 
            L0x20019880_f * (x**28) + L0x20019882_f * (x**29) + 
            L0x20019884_f * (x**30) + L0x20019886_f * (x**31) + 
            L0x20019888_f * (x**32) + L0x2001988a_f * (x**33) + 
            L0x2001988c_f * (x**34) + L0x2001988e_f * (x**35) + 
            L0x20019890_f * (x**36) + L0x20019892_f * (x**37) + 
            L0x20019894_f * (x**38) + L0x20019896_f * (x**39) + 
            L0x20019898_f * (x**40) + L0x2001989a_f * (x**41) + 
            L0x2001989c_f * (x**42) + L0x2001989e_f * (x**43) + 
            L0x200198a0_f * (x**44) + L0x200198a2_f * (x**45) + 
            L0x200198a4_f * (x**46) + L0x200198a6_f * (x**47) + 
            L0x200198a8_f * (x**48) + L0x200198aa_f * (x**49) + 
            L0x200198ac_f * (x**50) + L0x200198ae_f * (x**51) + 
            L0x200198b0_f * (x**52) + L0x200198b2_f * (x**53) + 
            L0x200198b4_f * (x**54) + L0x200198b6_f * (x**55) + 
            L0x200198b8_f * (x**56) + L0x200198ba_f * (x**57) + 
            L0x200198bc_f * (x**58) + L0x200198be_f * (x**59) + 
            L0x200198c0_f * (x**60) + L0x200198c2_f * (x**61) + 
            L0x200198c4_f * (x**62) + L0x200198c6_f * (x**63) + 
            L0x200198c8_f * (x**64) + L0x200198ca_f * (x**65) + 
            L0x200198cc_f * (x**66) + L0x200198ce_f * (x**67) + 
            L0x200198d0_f * (x**68) + L0x200198d2_f * (x**69) + 
            L0x200198d4_f * (x**70) + L0x200198d6_f * (x**71) + 
            L0x200198d8_f * (x**72) + L0x200198da_f * (x**73) + 
            L0x200198dc_f * (x**74) + L0x200198de_f * (x**75) + 
            L0x200198e0_f * (x**76) + L0x200198e2_f * (x**77) + 
            L0x200198e4_f * (x**78) + L0x200198e6_f * (x**79) + 
            L0x200198e8_f * (x**80) + L0x200198ea_f * (x**81) + 
            L0x200198ec_f * (x**82) + L0x200198ee_f * (x**83) + 
            L0x200198f0_f * (x**84) + L0x200198f2_f * (x**85) + 
            L0x200198f4_f * (x**86) + L0x200198f6_f * (x**87) + 
            L0x200198f8_f * (x**88) + L0x200198fa_f * (x**89) + 
            L0x200198fc_f * (x**90) + L0x200198fe_f * (x**91) + 
            L0x20019900_f * (x**92) + L0x20019902_f * (x**93) + 
            L0x20019904_f * (x**94) + L0x20019906_f * (x**95) + 
            L0x20019908_f * (x**96) + L0x2001990a_f * (x**97) + 
            L0x2001990c_f * (x**98) + L0x2001990e_f * (x**99) + 
            L0x20019910_f * (x**100) + L0x20019912_f * (x**101) + 
            L0x20019914_f * (x**102) + L0x20019916_f * (x**103) + 
            L0x20019918_f * (x**104) + L0x2001991a_f * (x**105) + 
            L0x2001991c_f * (x**106) + L0x2001991e_f * (x**107) + 
            L0x20019920_f * (x**108) + L0x20019922_f * (x**109) + 
            L0x20019924_f * (x**110) + L0x20019926_f * (x**111) + 
            L0x20019928_f * (x**112) + L0x2001992a_f * (x**113) + 
            L0x2001992c_f * (x**114) + L0x2001992e_f * (x**115) + 
            L0x20019930_f * (x**116) + L0x20019932_f * (x**117) + 
            L0x20019934_f * (x**118) + L0x20019936_f * (x**119) + 
            L0x20019938_f * (x**120) + L0x2001993a_f * (x**121) + 
            L0x2001993c_f * (x**122) + L0x2001993e_f * (x**123) + 
            L0x20019940_f * (x**124) + L0x20019942_f * (x**125) + 
            L0x20019944_f * (x**126) + L0x20019946_f * (x**127) + 
            L0x20019948_f * (x**128) + L0x2001994a_f * (x**129) + 
            L0x2001994c_f * (x**130) + L0x2001994e_f * (x**131) + 
            L0x20019950_f * (x**132) + L0x20019952_f * (x**133) + 
            L0x20019954_f * (x**134) + L0x20019956_f * (x**135) + 
            L0x20019958_f * (x**136) + L0x2001995a_f * (x**137) + 
            L0x2001995c_f * (x**138) + L0x2001995e_f * (x**139) + 
            L0x20019960_f * (x**140) + L0x20019962_f * (x**141) + 
            L0x20019964_f * (x**142) + L0x20019966_f * (x**143) + 
            L0x20019968_f * (x**144) + L0x2001996a_f * (x**145) + 
            L0x2001996c_f * (x**146) + L0x2001996e_f * (x**147) + 
            L0x20019970_f * (x**148) + L0x20019972_f * (x**149) + 
            L0x20019974_f * (x**150) + L0x20019976_f * (x**151) + 
            L0x20019978_f * (x**152) + L0x2001997a_f * (x**153) + 
            L0x2001997c_f * (x**154) + L0x2001997e_f * (x**155) + 
            L0x20019980_f * (x**156) + L0x20019982_f * (x**157) + 
            L0x20019984_f * (x**158) + L0x20019986_f * (x**159) + 
            L0x20019988_f * (x**160) + L0x2001998a_f * (x**161) + 
            L0x2001998c_f * (x**162) + L0x2001998e_f * (x**163) + 
            L0x20019990_f * (x**164) + L0x20019992_f * (x**165) + 
            L0x20019994_f * (x**166) + L0x20019996_f * (x**167) + 
            L0x20019998_f * (x**168) + L0x2001999a_f * (x**169) + 
            L0x2001999c_f * (x**170) + L0x2001999e_f * (x**171) + 
            L0x200199a0_f * (x**172) + L0x200199a2_f * (x**173) + 
            L0x200199a4_f * (x**174) + L0x200199a6_f * (x**175) + 
            L0x200199a8_f * (x**176) + L0x200199aa_f * (x**177) + 
            L0x200199ac_f * (x**178) + L0x200199ae_f * (x**179) + 
            L0x200199b0_f * (x**180) + L0x200199b2_f * (x**181) + 
            L0x200199b4_f * (x**182) + L0x200199b6_f * (x**183) + 
            L0x200199b8_f * (x**184) + L0x200199ba_f * (x**185) + 
            L0x200199bc_f * (x**186) + L0x200199be_f * (x**187) + 
            L0x200199c0_f * (x**188) + L0x200199c2_f * (x**189) + 
            L0x200199c4_f * (x**190) + L0x200199c6_f * (x**191) + 
            L0x200199c8_f * (x**192) + L0x200199ca_f * (x**193) + 
            L0x200199cc_f * (x**194) + L0x200199ce_f * (x**195) + 
            L0x200199d0_f * (x**196) + L0x200199d2_f * (x**197) + 
            L0x200199d4_f * (x**198) + L0x200199d6_f * (x**199) + 
            L0x200199d8_f * (x**200) + L0x200199da_f * (x**201) + 
            L0x200199dc_f * (x**202) + L0x200199de_f * (x**203) + 
            L0x200199e0_f * (x**204) + L0x200199e2_f * (x**205) + 
            L0x200199e4_f * (x**206) + L0x200199e6_f * (x**207) + 
            L0x200199e8_f * (x**208) + L0x200199ea_f * (x**209) + 
            L0x200199ec_f * (x**210) + L0x200199ee_f * (x**211) + 
            L0x200199f0_f * (x**212) + L0x200199f2_f * (x**213) + 
            L0x200199f4_f * (x**214) + L0x200199f6_f * (x**215) + 
            L0x200199f8_f * (x**216) + L0x200199fa_f * (x**217) + 
            L0x200199fc_f * (x**218) + L0x200199fe_f * (x**219) + 
            L0x20019a00_f * (x**220) + L0x20019a02_f * (x**221) + 
            L0x20019a04_f * (x**222) + L0x20019a06_f * (x**223) + 
            L0x20019a08_f * (x**224) + L0x20019a0a_f * (x**225) + 
            L0x20019a0c_f * (x**226) + L0x20019a0e_f * (x**227) + 
            L0x20019a10_f * (x**228) + L0x20019a12_f * (x**229) + 
            L0x20019a14_f * (x**230) + L0x20019a16_f * (x**231) + 
            L0x20019a18_f * (x**232) + L0x20019a1a_f * (x**233) + 
            L0x20019a1c_f * (x**234) + L0x20019a1e_f * (x**235) + 
            L0x20019a20_f * (x**236) + L0x20019a22_f * (x**237) + 
            L0x20019a24_f * (x**238) + L0x20019a26_f * (x**239) + 
            L0x20019a28_f * (x**240) + L0x20019a2a_f * (x**241) + 
            L0x20019a2c_f * (x**242) + L0x20019a2e_f * (x**243) + 
            L0x20019a30_f * (x**244) + L0x20019a32_f * (x**245) + 
            L0x20019a34_f * (x**246) + L0x20019a36_f * (x**247) + 
            L0x20019a38_f * (x**248) + L0x20019a3a_f * (x**249) + 
            L0x20019a3c_f * (x**250) + L0x20019a3e_f * (x**251) + 
            L0x20019a40_f * (x**252) + L0x20019a42_f * (x**253) + 
            L0x20019a44_f * (x**254) + L0x20019a46_f * (x**255)
          )
          [25570049, x**4 - 14036261],
    (* inp_poly_31 *)
    eqmod (2**32) * (inp_poly_31 * inp_poly_31)
          (
            L0x20019848_f * (x**0) + L0x2001984a_f * (x**1) + 
            L0x2001984c_f * (x**2) + L0x2001984e_f * (x**3) + 
            L0x20019850_f * (x**4) + L0x20019852_f * (x**5) + 
            L0x20019854_f * (x**6) + L0x20019856_f * (x**7) + 
            L0x20019858_f * (x**8) + L0x2001985a_f * (x**9) + 
            L0x2001985c_f * (x**10) + L0x2001985e_f * (x**11) + 
            L0x20019860_f * (x**12) + L0x20019862_f * (x**13) + 
            L0x20019864_f * (x**14) + L0x20019866_f * (x**15) + 
            L0x20019868_f * (x**16) + L0x2001986a_f * (x**17) + 
            L0x2001986c_f * (x**18) + L0x2001986e_f * (x**19) + 
            L0x20019870_f * (x**20) + L0x20019872_f * (x**21) + 
            L0x20019874_f * (x**22) + L0x20019876_f * (x**23) + 
            L0x20019878_f * (x**24) + L0x2001987a_f * (x**25) + 
            L0x2001987c_f * (x**26) + L0x2001987e_f * (x**27) + 
            L0x20019880_f * (x**28) + L0x20019882_f * (x**29) + 
            L0x20019884_f * (x**30) + L0x20019886_f * (x**31) + 
            L0x20019888_f * (x**32) + L0x2001988a_f * (x**33) + 
            L0x2001988c_f * (x**34) + L0x2001988e_f * (x**35) + 
            L0x20019890_f * (x**36) + L0x20019892_f * (x**37) + 
            L0x20019894_f * (x**38) + L0x20019896_f * (x**39) + 
            L0x20019898_f * (x**40) + L0x2001989a_f * (x**41) + 
            L0x2001989c_f * (x**42) + L0x2001989e_f * (x**43) + 
            L0x200198a0_f * (x**44) + L0x200198a2_f * (x**45) + 
            L0x200198a4_f * (x**46) + L0x200198a6_f * (x**47) + 
            L0x200198a8_f * (x**48) + L0x200198aa_f * (x**49) + 
            L0x200198ac_f * (x**50) + L0x200198ae_f * (x**51) + 
            L0x200198b0_f * (x**52) + L0x200198b2_f * (x**53) + 
            L0x200198b4_f * (x**54) + L0x200198b6_f * (x**55) + 
            L0x200198b8_f * (x**56) + L0x200198ba_f * (x**57) + 
            L0x200198bc_f * (x**58) + L0x200198be_f * (x**59) + 
            L0x200198c0_f * (x**60) + L0x200198c2_f * (x**61) + 
            L0x200198c4_f * (x**62) + L0x200198c6_f * (x**63) + 
            L0x200198c8_f * (x**64) + L0x200198ca_f * (x**65) + 
            L0x200198cc_f * (x**66) + L0x200198ce_f * (x**67) + 
            L0x200198d0_f * (x**68) + L0x200198d2_f * (x**69) + 
            L0x200198d4_f * (x**70) + L0x200198d6_f * (x**71) + 
            L0x200198d8_f * (x**72) + L0x200198da_f * (x**73) + 
            L0x200198dc_f * (x**74) + L0x200198de_f * (x**75) + 
            L0x200198e0_f * (x**76) + L0x200198e2_f * (x**77) + 
            L0x200198e4_f * (x**78) + L0x200198e6_f * (x**79) + 
            L0x200198e8_f * (x**80) + L0x200198ea_f * (x**81) + 
            L0x200198ec_f * (x**82) + L0x200198ee_f * (x**83) + 
            L0x200198f0_f * (x**84) + L0x200198f2_f * (x**85) + 
            L0x200198f4_f * (x**86) + L0x200198f6_f * (x**87) + 
            L0x200198f8_f * (x**88) + L0x200198fa_f * (x**89) + 
            L0x200198fc_f * (x**90) + L0x200198fe_f * (x**91) + 
            L0x20019900_f * (x**92) + L0x20019902_f * (x**93) + 
            L0x20019904_f * (x**94) + L0x20019906_f * (x**95) + 
            L0x20019908_f * (x**96) + L0x2001990a_f * (x**97) + 
            L0x2001990c_f * (x**98) + L0x2001990e_f * (x**99) + 
            L0x20019910_f * (x**100) + L0x20019912_f * (x**101) + 
            L0x20019914_f * (x**102) + L0x20019916_f * (x**103) + 
            L0x20019918_f * (x**104) + L0x2001991a_f * (x**105) + 
            L0x2001991c_f * (x**106) + L0x2001991e_f * (x**107) + 
            L0x20019920_f * (x**108) + L0x20019922_f * (x**109) + 
            L0x20019924_f * (x**110) + L0x20019926_f * (x**111) + 
            L0x20019928_f * (x**112) + L0x2001992a_f * (x**113) + 
            L0x2001992c_f * (x**114) + L0x2001992e_f * (x**115) + 
            L0x20019930_f * (x**116) + L0x20019932_f * (x**117) + 
            L0x20019934_f * (x**118) + L0x20019936_f * (x**119) + 
            L0x20019938_f * (x**120) + L0x2001993a_f * (x**121) + 
            L0x2001993c_f * (x**122) + L0x2001993e_f * (x**123) + 
            L0x20019940_f * (x**124) + L0x20019942_f * (x**125) + 
            L0x20019944_f * (x**126) + L0x20019946_f * (x**127) + 
            L0x20019948_f * (x**128) + L0x2001994a_f * (x**129) + 
            L0x2001994c_f * (x**130) + L0x2001994e_f * (x**131) + 
            L0x20019950_f * (x**132) + L0x20019952_f * (x**133) + 
            L0x20019954_f * (x**134) + L0x20019956_f * (x**135) + 
            L0x20019958_f * (x**136) + L0x2001995a_f * (x**137) + 
            L0x2001995c_f * (x**138) + L0x2001995e_f * (x**139) + 
            L0x20019960_f * (x**140) + L0x20019962_f * (x**141) + 
            L0x20019964_f * (x**142) + L0x20019966_f * (x**143) + 
            L0x20019968_f * (x**144) + L0x2001996a_f * (x**145) + 
            L0x2001996c_f * (x**146) + L0x2001996e_f * (x**147) + 
            L0x20019970_f * (x**148) + L0x20019972_f * (x**149) + 
            L0x20019974_f * (x**150) + L0x20019976_f * (x**151) + 
            L0x20019978_f * (x**152) + L0x2001997a_f * (x**153) + 
            L0x2001997c_f * (x**154) + L0x2001997e_f * (x**155) + 
            L0x20019980_f * (x**156) + L0x20019982_f * (x**157) + 
            L0x20019984_f * (x**158) + L0x20019986_f * (x**159) + 
            L0x20019988_f * (x**160) + L0x2001998a_f * (x**161) + 
            L0x2001998c_f * (x**162) + L0x2001998e_f * (x**163) + 
            L0x20019990_f * (x**164) + L0x20019992_f * (x**165) + 
            L0x20019994_f * (x**166) + L0x20019996_f * (x**167) + 
            L0x20019998_f * (x**168) + L0x2001999a_f * (x**169) + 
            L0x2001999c_f * (x**170) + L0x2001999e_f * (x**171) + 
            L0x200199a0_f * (x**172) + L0x200199a2_f * (x**173) + 
            L0x200199a4_f * (x**174) + L0x200199a6_f * (x**175) + 
            L0x200199a8_f * (x**176) + L0x200199aa_f * (x**177) + 
            L0x200199ac_f * (x**178) + L0x200199ae_f * (x**179) + 
            L0x200199b0_f * (x**180) + L0x200199b2_f * (x**181) + 
            L0x200199b4_f * (x**182) + L0x200199b6_f * (x**183) + 
            L0x200199b8_f * (x**184) + L0x200199ba_f * (x**185) + 
            L0x200199bc_f * (x**186) + L0x200199be_f * (x**187) + 
            L0x200199c0_f * (x**188) + L0x200199c2_f * (x**189) + 
            L0x200199c4_f * (x**190) + L0x200199c6_f * (x**191) + 
            L0x200199c8_f * (x**192) + L0x200199ca_f * (x**193) + 
            L0x200199cc_f * (x**194) + L0x200199ce_f * (x**195) + 
            L0x200199d0_f * (x**196) + L0x200199d2_f * (x**197) + 
            L0x200199d4_f * (x**198) + L0x200199d6_f * (x**199) + 
            L0x200199d8_f * (x**200) + L0x200199da_f * (x**201) + 
            L0x200199dc_f * (x**202) + L0x200199de_f * (x**203) + 
            L0x200199e0_f * (x**204) + L0x200199e2_f * (x**205) + 
            L0x200199e4_f * (x**206) + L0x200199e6_f * (x**207) + 
            L0x200199e8_f * (x**208) + L0x200199ea_f * (x**209) + 
            L0x200199ec_f * (x**210) + L0x200199ee_f * (x**211) + 
            L0x200199f0_f * (x**212) + L0x200199f2_f * (x**213) + 
            L0x200199f4_f * (x**214) + L0x200199f6_f * (x**215) + 
            L0x200199f8_f * (x**216) + L0x200199fa_f * (x**217) + 
            L0x200199fc_f * (x**218) + L0x200199fe_f * (x**219) + 
            L0x20019a00_f * (x**220) + L0x20019a02_f * (x**221) + 
            L0x20019a04_f * (x**222) + L0x20019a06_f * (x**223) + 
            L0x20019a08_f * (x**224) + L0x20019a0a_f * (x**225) + 
            L0x20019a0c_f * (x**226) + L0x20019a0e_f * (x**227) + 
            L0x20019a10_f * (x**228) + L0x20019a12_f * (x**229) + 
            L0x20019a14_f * (x**230) + L0x20019a16_f * (x**231) + 
            L0x20019a18_f * (x**232) + L0x20019a1a_f * (x**233) + 
            L0x20019a1c_f * (x**234) + L0x20019a1e_f * (x**235) + 
            L0x20019a20_f * (x**236) + L0x20019a22_f * (x**237) + 
            L0x20019a24_f * (x**238) + L0x20019a26_f * (x**239) + 
            L0x20019a28_f * (x**240) + L0x20019a2a_f * (x**241) + 
            L0x20019a2c_f * (x**242) + L0x20019a2e_f * (x**243) + 
            L0x20019a30_f * (x**244) + L0x20019a32_f * (x**245) + 
            L0x20019a34_f * (x**246) + L0x20019a36_f * (x**247) + 
            L0x20019a38_f * (x**248) + L0x20019a3a_f * (x**249) + 
            L0x20019a3c_f * (x**250) + L0x20019a3e_f * (x**251) + 
            L0x20019a40_f * (x**252) + L0x20019a42_f * (x**253) + 
            L0x20019a44_f * (x**254) + L0x20019a46_f * (x**255)
          )
          [25570049, x**4 - 11533788]
  ] prove with [cuts [62]]
  &&
  true
;

cut (* 79 *)
  true && true;

(* slice 4 *)
assume (* instantiating y_0's *)
  and [
    y_0_32 = 1, y_0_33 = 1, y_0_34 = 1, y_0_35 = 1, 
    y_0_36 = 1, y_0_37 = 1, y_0_38 = 1, y_0_39 = 1
  ] && true;
cut (* 80 *)
  and [
    (* inp_poly_32 *)
    eqmod (2**32) * (inp_poly_32 * inp_poly_32)
          (
            L0x20019848_f * (x**0) + L0x2001984a_f * (x**1) + 
            L0x2001984c_f * (x**2) + L0x2001984e_f * (x**3) + 
            L0x20019850_f * (x**4) + L0x20019852_f * (x**5) + 
            L0x20019854_f * (x**6) + L0x20019856_f * (x**7) + 
            L0x20019858_f * (x**8) + L0x2001985a_f * (x**9) + 
            L0x2001985c_f * (x**10) + L0x2001985e_f * (x**11) + 
            L0x20019860_f * (x**12) + L0x20019862_f * (x**13) + 
            L0x20019864_f * (x**14) + L0x20019866_f * (x**15) + 
            L0x20019868_f * (x**16) + L0x2001986a_f * (x**17) + 
            L0x2001986c_f * (x**18) + L0x2001986e_f * (x**19) + 
            L0x20019870_f * (x**20) + L0x20019872_f * (x**21) + 
            L0x20019874_f * (x**22) + L0x20019876_f * (x**23) + 
            L0x20019878_f * (x**24) + L0x2001987a_f * (x**25) + 
            L0x2001987c_f * (x**26) + L0x2001987e_f * (x**27) + 
            L0x20019880_f * (x**28) + L0x20019882_f * (x**29) + 
            L0x20019884_f * (x**30) + L0x20019886_f * (x**31) + 
            L0x20019888_f * (x**32) + L0x2001988a_f * (x**33) + 
            L0x2001988c_f * (x**34) + L0x2001988e_f * (x**35) + 
            L0x20019890_f * (x**36) + L0x20019892_f * (x**37) + 
            L0x20019894_f * (x**38) + L0x20019896_f * (x**39) + 
            L0x20019898_f * (x**40) + L0x2001989a_f * (x**41) + 
            L0x2001989c_f * (x**42) + L0x2001989e_f * (x**43) + 
            L0x200198a0_f * (x**44) + L0x200198a2_f * (x**45) + 
            L0x200198a4_f * (x**46) + L0x200198a6_f * (x**47) + 
            L0x200198a8_f * (x**48) + L0x200198aa_f * (x**49) + 
            L0x200198ac_f * (x**50) + L0x200198ae_f * (x**51) + 
            L0x200198b0_f * (x**52) + L0x200198b2_f * (x**53) + 
            L0x200198b4_f * (x**54) + L0x200198b6_f * (x**55) + 
            L0x200198b8_f * (x**56) + L0x200198ba_f * (x**57) + 
            L0x200198bc_f * (x**58) + L0x200198be_f * (x**59) + 
            L0x200198c0_f * (x**60) + L0x200198c2_f * (x**61) + 
            L0x200198c4_f * (x**62) + L0x200198c6_f * (x**63) + 
            L0x200198c8_f * (x**64) + L0x200198ca_f * (x**65) + 
            L0x200198cc_f * (x**66) + L0x200198ce_f * (x**67) + 
            L0x200198d0_f * (x**68) + L0x200198d2_f * (x**69) + 
            L0x200198d4_f * (x**70) + L0x200198d6_f * (x**71) + 
            L0x200198d8_f * (x**72) + L0x200198da_f * (x**73) + 
            L0x200198dc_f * (x**74) + L0x200198de_f * (x**75) + 
            L0x200198e0_f * (x**76) + L0x200198e2_f * (x**77) + 
            L0x200198e4_f * (x**78) + L0x200198e6_f * (x**79) + 
            L0x200198e8_f * (x**80) + L0x200198ea_f * (x**81) + 
            L0x200198ec_f * (x**82) + L0x200198ee_f * (x**83) + 
            L0x200198f0_f * (x**84) + L0x200198f2_f * (x**85) + 
            L0x200198f4_f * (x**86) + L0x200198f6_f * (x**87) + 
            L0x200198f8_f * (x**88) + L0x200198fa_f * (x**89) + 
            L0x200198fc_f * (x**90) + L0x200198fe_f * (x**91) + 
            L0x20019900_f * (x**92) + L0x20019902_f * (x**93) + 
            L0x20019904_f * (x**94) + L0x20019906_f * (x**95) + 
            L0x20019908_f * (x**96) + L0x2001990a_f * (x**97) + 
            L0x2001990c_f * (x**98) + L0x2001990e_f * (x**99) + 
            L0x20019910_f * (x**100) + L0x20019912_f * (x**101) + 
            L0x20019914_f * (x**102) + L0x20019916_f * (x**103) + 
            L0x20019918_f * (x**104) + L0x2001991a_f * (x**105) + 
            L0x2001991c_f * (x**106) + L0x2001991e_f * (x**107) + 
            L0x20019920_f * (x**108) + L0x20019922_f * (x**109) + 
            L0x20019924_f * (x**110) + L0x20019926_f * (x**111) + 
            L0x20019928_f * (x**112) + L0x2001992a_f * (x**113) + 
            L0x2001992c_f * (x**114) + L0x2001992e_f * (x**115) + 
            L0x20019930_f * (x**116) + L0x20019932_f * (x**117) + 
            L0x20019934_f * (x**118) + L0x20019936_f * (x**119) + 
            L0x20019938_f * (x**120) + L0x2001993a_f * (x**121) + 
            L0x2001993c_f * (x**122) + L0x2001993e_f * (x**123) + 
            L0x20019940_f * (x**124) + L0x20019942_f * (x**125) + 
            L0x20019944_f * (x**126) + L0x20019946_f * (x**127) + 
            L0x20019948_f * (x**128) + L0x2001994a_f * (x**129) + 
            L0x2001994c_f * (x**130) + L0x2001994e_f * (x**131) + 
            L0x20019950_f * (x**132) + L0x20019952_f * (x**133) + 
            L0x20019954_f * (x**134) + L0x20019956_f * (x**135) + 
            L0x20019958_f * (x**136) + L0x2001995a_f * (x**137) + 
            L0x2001995c_f * (x**138) + L0x2001995e_f * (x**139) + 
            L0x20019960_f * (x**140) + L0x20019962_f * (x**141) + 
            L0x20019964_f * (x**142) + L0x20019966_f * (x**143) + 
            L0x20019968_f * (x**144) + L0x2001996a_f * (x**145) + 
            L0x2001996c_f * (x**146) + L0x2001996e_f * (x**147) + 
            L0x20019970_f * (x**148) + L0x20019972_f * (x**149) + 
            L0x20019974_f * (x**150) + L0x20019976_f * (x**151) + 
            L0x20019978_f * (x**152) + L0x2001997a_f * (x**153) + 
            L0x2001997c_f * (x**154) + L0x2001997e_f * (x**155) + 
            L0x20019980_f * (x**156) + L0x20019982_f * (x**157) + 
            L0x20019984_f * (x**158) + L0x20019986_f * (x**159) + 
            L0x20019988_f * (x**160) + L0x2001998a_f * (x**161) + 
            L0x2001998c_f * (x**162) + L0x2001998e_f * (x**163) + 
            L0x20019990_f * (x**164) + L0x20019992_f * (x**165) + 
            L0x20019994_f * (x**166) + L0x20019996_f * (x**167) + 
            L0x20019998_f * (x**168) + L0x2001999a_f * (x**169) + 
            L0x2001999c_f * (x**170) + L0x2001999e_f * (x**171) + 
            L0x200199a0_f * (x**172) + L0x200199a2_f * (x**173) + 
            L0x200199a4_f * (x**174) + L0x200199a6_f * (x**175) + 
            L0x200199a8_f * (x**176) + L0x200199aa_f * (x**177) + 
            L0x200199ac_f * (x**178) + L0x200199ae_f * (x**179) + 
            L0x200199b0_f * (x**180) + L0x200199b2_f * (x**181) + 
            L0x200199b4_f * (x**182) + L0x200199b6_f * (x**183) + 
            L0x200199b8_f * (x**184) + L0x200199ba_f * (x**185) + 
            L0x200199bc_f * (x**186) + L0x200199be_f * (x**187) + 
            L0x200199c0_f * (x**188) + L0x200199c2_f * (x**189) + 
            L0x200199c4_f * (x**190) + L0x200199c6_f * (x**191) + 
            L0x200199c8_f * (x**192) + L0x200199ca_f * (x**193) + 
            L0x200199cc_f * (x**194) + L0x200199ce_f * (x**195) + 
            L0x200199d0_f * (x**196) + L0x200199d2_f * (x**197) + 
            L0x200199d4_f * (x**198) + L0x200199d6_f * (x**199) + 
            L0x200199d8_f * (x**200) + L0x200199da_f * (x**201) + 
            L0x200199dc_f * (x**202) + L0x200199de_f * (x**203) + 
            L0x200199e0_f * (x**204) + L0x200199e2_f * (x**205) + 
            L0x200199e4_f * (x**206) + L0x200199e6_f * (x**207) + 
            L0x200199e8_f * (x**208) + L0x200199ea_f * (x**209) + 
            L0x200199ec_f * (x**210) + L0x200199ee_f * (x**211) + 
            L0x200199f0_f * (x**212) + L0x200199f2_f * (x**213) + 
            L0x200199f4_f * (x**214) + L0x200199f6_f * (x**215) + 
            L0x200199f8_f * (x**216) + L0x200199fa_f * (x**217) + 
            L0x200199fc_f * (x**218) + L0x200199fe_f * (x**219) + 
            L0x20019a00_f * (x**220) + L0x20019a02_f * (x**221) + 
            L0x20019a04_f * (x**222) + L0x20019a06_f * (x**223) + 
            L0x20019a08_f * (x**224) + L0x20019a0a_f * (x**225) + 
            L0x20019a0c_f * (x**226) + L0x20019a0e_f * (x**227) + 
            L0x20019a10_f * (x**228) + L0x20019a12_f * (x**229) + 
            L0x20019a14_f * (x**230) + L0x20019a16_f * (x**231) + 
            L0x20019a18_f * (x**232) + L0x20019a1a_f * (x**233) + 
            L0x20019a1c_f * (x**234) + L0x20019a1e_f * (x**235) + 
            L0x20019a20_f * (x**236) + L0x20019a22_f * (x**237) + 
            L0x20019a24_f * (x**238) + L0x20019a26_f * (x**239) + 
            L0x20019a28_f * (x**240) + L0x20019a2a_f * (x**241) + 
            L0x20019a2c_f * (x**242) + L0x20019a2e_f * (x**243) + 
            L0x20019a30_f * (x**244) + L0x20019a32_f * (x**245) + 
            L0x20019a34_f * (x**246) + L0x20019a36_f * (x**247) + 
            L0x20019a38_f * (x**248) + L0x20019a3a_f * (x**249) + 
            L0x20019a3c_f * (x**250) + L0x20019a3e_f * (x**251) + 
            L0x20019a40_f * (x**252) + L0x20019a42_f * (x**253) + 
            L0x20019a44_f * (x**254) + L0x20019a46_f * (x**255)
          )
          [25570049, x**4 - 7847101],
    (* inp_poly_33 *)
    eqmod (2**32) * (inp_poly_33 * inp_poly_33)
          (
            L0x20019848_f * (x**0) + L0x2001984a_f * (x**1) + 
            L0x2001984c_f * (x**2) + L0x2001984e_f * (x**3) + 
            L0x20019850_f * (x**4) + L0x20019852_f * (x**5) + 
            L0x20019854_f * (x**6) + L0x20019856_f * (x**7) + 
            L0x20019858_f * (x**8) + L0x2001985a_f * (x**9) + 
            L0x2001985c_f * (x**10) + L0x2001985e_f * (x**11) + 
            L0x20019860_f * (x**12) + L0x20019862_f * (x**13) + 
            L0x20019864_f * (x**14) + L0x20019866_f * (x**15) + 
            L0x20019868_f * (x**16) + L0x2001986a_f * (x**17) + 
            L0x2001986c_f * (x**18) + L0x2001986e_f * (x**19) + 
            L0x20019870_f * (x**20) + L0x20019872_f * (x**21) + 
            L0x20019874_f * (x**22) + L0x20019876_f * (x**23) + 
            L0x20019878_f * (x**24) + L0x2001987a_f * (x**25) + 
            L0x2001987c_f * (x**26) + L0x2001987e_f * (x**27) + 
            L0x20019880_f * (x**28) + L0x20019882_f * (x**29) + 
            L0x20019884_f * (x**30) + L0x20019886_f * (x**31) + 
            L0x20019888_f * (x**32) + L0x2001988a_f * (x**33) + 
            L0x2001988c_f * (x**34) + L0x2001988e_f * (x**35) + 
            L0x20019890_f * (x**36) + L0x20019892_f * (x**37) + 
            L0x20019894_f * (x**38) + L0x20019896_f * (x**39) + 
            L0x20019898_f * (x**40) + L0x2001989a_f * (x**41) + 
            L0x2001989c_f * (x**42) + L0x2001989e_f * (x**43) + 
            L0x200198a0_f * (x**44) + L0x200198a2_f * (x**45) + 
            L0x200198a4_f * (x**46) + L0x200198a6_f * (x**47) + 
            L0x200198a8_f * (x**48) + L0x200198aa_f * (x**49) + 
            L0x200198ac_f * (x**50) + L0x200198ae_f * (x**51) + 
            L0x200198b0_f * (x**52) + L0x200198b2_f * (x**53) + 
            L0x200198b4_f * (x**54) + L0x200198b6_f * (x**55) + 
            L0x200198b8_f * (x**56) + L0x200198ba_f * (x**57) + 
            L0x200198bc_f * (x**58) + L0x200198be_f * (x**59) + 
            L0x200198c0_f * (x**60) + L0x200198c2_f * (x**61) + 
            L0x200198c4_f * (x**62) + L0x200198c6_f * (x**63) + 
            L0x200198c8_f * (x**64) + L0x200198ca_f * (x**65) + 
            L0x200198cc_f * (x**66) + L0x200198ce_f * (x**67) + 
            L0x200198d0_f * (x**68) + L0x200198d2_f * (x**69) + 
            L0x200198d4_f * (x**70) + L0x200198d6_f * (x**71) + 
            L0x200198d8_f * (x**72) + L0x200198da_f * (x**73) + 
            L0x200198dc_f * (x**74) + L0x200198de_f * (x**75) + 
            L0x200198e0_f * (x**76) + L0x200198e2_f * (x**77) + 
            L0x200198e4_f * (x**78) + L0x200198e6_f * (x**79) + 
            L0x200198e8_f * (x**80) + L0x200198ea_f * (x**81) + 
            L0x200198ec_f * (x**82) + L0x200198ee_f * (x**83) + 
            L0x200198f0_f * (x**84) + L0x200198f2_f * (x**85) + 
            L0x200198f4_f * (x**86) + L0x200198f6_f * (x**87) + 
            L0x200198f8_f * (x**88) + L0x200198fa_f * (x**89) + 
            L0x200198fc_f * (x**90) + L0x200198fe_f * (x**91) + 
            L0x20019900_f * (x**92) + L0x20019902_f * (x**93) + 
            L0x20019904_f * (x**94) + L0x20019906_f * (x**95) + 
            L0x20019908_f * (x**96) + L0x2001990a_f * (x**97) + 
            L0x2001990c_f * (x**98) + L0x2001990e_f * (x**99) + 
            L0x20019910_f * (x**100) + L0x20019912_f * (x**101) + 
            L0x20019914_f * (x**102) + L0x20019916_f * (x**103) + 
            L0x20019918_f * (x**104) + L0x2001991a_f * (x**105) + 
            L0x2001991c_f * (x**106) + L0x2001991e_f * (x**107) + 
            L0x20019920_f * (x**108) + L0x20019922_f * (x**109) + 
            L0x20019924_f * (x**110) + L0x20019926_f * (x**111) + 
            L0x20019928_f * (x**112) + L0x2001992a_f * (x**113) + 
            L0x2001992c_f * (x**114) + L0x2001992e_f * (x**115) + 
            L0x20019930_f * (x**116) + L0x20019932_f * (x**117) + 
            L0x20019934_f * (x**118) + L0x20019936_f * (x**119) + 
            L0x20019938_f * (x**120) + L0x2001993a_f * (x**121) + 
            L0x2001993c_f * (x**122) + L0x2001993e_f * (x**123) + 
            L0x20019940_f * (x**124) + L0x20019942_f * (x**125) + 
            L0x20019944_f * (x**126) + L0x20019946_f * (x**127) + 
            L0x20019948_f * (x**128) + L0x2001994a_f * (x**129) + 
            L0x2001994c_f * (x**130) + L0x2001994e_f * (x**131) + 
            L0x20019950_f * (x**132) + L0x20019952_f * (x**133) + 
            L0x20019954_f * (x**134) + L0x20019956_f * (x**135) + 
            L0x20019958_f * (x**136) + L0x2001995a_f * (x**137) + 
            L0x2001995c_f * (x**138) + L0x2001995e_f * (x**139) + 
            L0x20019960_f * (x**140) + L0x20019962_f * (x**141) + 
            L0x20019964_f * (x**142) + L0x20019966_f * (x**143) + 
            L0x20019968_f * (x**144) + L0x2001996a_f * (x**145) + 
            L0x2001996c_f * (x**146) + L0x2001996e_f * (x**147) + 
            L0x20019970_f * (x**148) + L0x20019972_f * (x**149) + 
            L0x20019974_f * (x**150) + L0x20019976_f * (x**151) + 
            L0x20019978_f * (x**152) + L0x2001997a_f * (x**153) + 
            L0x2001997c_f * (x**154) + L0x2001997e_f * (x**155) + 
            L0x20019980_f * (x**156) + L0x20019982_f * (x**157) + 
            L0x20019984_f * (x**158) + L0x20019986_f * (x**159) + 
            L0x20019988_f * (x**160) + L0x2001998a_f * (x**161) + 
            L0x2001998c_f * (x**162) + L0x2001998e_f * (x**163) + 
            L0x20019990_f * (x**164) + L0x20019992_f * (x**165) + 
            L0x20019994_f * (x**166) + L0x20019996_f * (x**167) + 
            L0x20019998_f * (x**168) + L0x2001999a_f * (x**169) + 
            L0x2001999c_f * (x**170) + L0x2001999e_f * (x**171) + 
            L0x200199a0_f * (x**172) + L0x200199a2_f * (x**173) + 
            L0x200199a4_f * (x**174) + L0x200199a6_f * (x**175) + 
            L0x200199a8_f * (x**176) + L0x200199aa_f * (x**177) + 
            L0x200199ac_f * (x**178) + L0x200199ae_f * (x**179) + 
            L0x200199b0_f * (x**180) + L0x200199b2_f * (x**181) + 
            L0x200199b4_f * (x**182) + L0x200199b6_f * (x**183) + 
            L0x200199b8_f * (x**184) + L0x200199ba_f * (x**185) + 
            L0x200199bc_f * (x**186) + L0x200199be_f * (x**187) + 
            L0x200199c0_f * (x**188) + L0x200199c2_f * (x**189) + 
            L0x200199c4_f * (x**190) + L0x200199c6_f * (x**191) + 
            L0x200199c8_f * (x**192) + L0x200199ca_f * (x**193) + 
            L0x200199cc_f * (x**194) + L0x200199ce_f * (x**195) + 
            L0x200199d0_f * (x**196) + L0x200199d2_f * (x**197) + 
            L0x200199d4_f * (x**198) + L0x200199d6_f * (x**199) + 
            L0x200199d8_f * (x**200) + L0x200199da_f * (x**201) + 
            L0x200199dc_f * (x**202) + L0x200199de_f * (x**203) + 
            L0x200199e0_f * (x**204) + L0x200199e2_f * (x**205) + 
            L0x200199e4_f * (x**206) + L0x200199e6_f * (x**207) + 
            L0x200199e8_f * (x**208) + L0x200199ea_f * (x**209) + 
            L0x200199ec_f * (x**210) + L0x200199ee_f * (x**211) + 
            L0x200199f0_f * (x**212) + L0x200199f2_f * (x**213) + 
            L0x200199f4_f * (x**214) + L0x200199f6_f * (x**215) + 
            L0x200199f8_f * (x**216) + L0x200199fa_f * (x**217) + 
            L0x200199fc_f * (x**218) + L0x200199fe_f * (x**219) + 
            L0x20019a00_f * (x**220) + L0x20019a02_f * (x**221) + 
            L0x20019a04_f * (x**222) + L0x20019a06_f * (x**223) + 
            L0x20019a08_f * (x**224) + L0x20019a0a_f * (x**225) + 
            L0x20019a0c_f * (x**226) + L0x20019a0e_f * (x**227) + 
            L0x20019a10_f * (x**228) + L0x20019a12_f * (x**229) + 
            L0x20019a14_f * (x**230) + L0x20019a16_f * (x**231) + 
            L0x20019a18_f * (x**232) + L0x20019a1a_f * (x**233) + 
            L0x20019a1c_f * (x**234) + L0x20019a1e_f * (x**235) + 
            L0x20019a20_f * (x**236) + L0x20019a22_f * (x**237) + 
            L0x20019a24_f * (x**238) + L0x20019a26_f * (x**239) + 
            L0x20019a28_f * (x**240) + L0x20019a2a_f * (x**241) + 
            L0x20019a2c_f * (x**242) + L0x20019a2e_f * (x**243) + 
            L0x20019a30_f * (x**244) + L0x20019a32_f * (x**245) + 
            L0x20019a34_f * (x**246) + L0x20019a36_f * (x**247) + 
            L0x20019a38_f * (x**248) + L0x20019a3a_f * (x**249) + 
            L0x20019a3c_f * (x**250) + L0x20019a3e_f * (x**251) + 
            L0x20019a40_f * (x**252) + L0x20019a42_f * (x**253) + 
            L0x20019a44_f * (x**254) + L0x20019a46_f * (x**255)
          )
          [25570049, x**4 - 17722948],
    (* inp_poly_34 *)
    eqmod (2**32) * (inp_poly_34 * inp_poly_34)
          (
            L0x20019848_f * (x**0) + L0x2001984a_f * (x**1) + 
            L0x2001984c_f * (x**2) + L0x2001984e_f * (x**3) + 
            L0x20019850_f * (x**4) + L0x20019852_f * (x**5) + 
            L0x20019854_f * (x**6) + L0x20019856_f * (x**7) + 
            L0x20019858_f * (x**8) + L0x2001985a_f * (x**9) + 
            L0x2001985c_f * (x**10) + L0x2001985e_f * (x**11) + 
            L0x20019860_f * (x**12) + L0x20019862_f * (x**13) + 
            L0x20019864_f * (x**14) + L0x20019866_f * (x**15) + 
            L0x20019868_f * (x**16) + L0x2001986a_f * (x**17) + 
            L0x2001986c_f * (x**18) + L0x2001986e_f * (x**19) + 
            L0x20019870_f * (x**20) + L0x20019872_f * (x**21) + 
            L0x20019874_f * (x**22) + L0x20019876_f * (x**23) + 
            L0x20019878_f * (x**24) + L0x2001987a_f * (x**25) + 
            L0x2001987c_f * (x**26) + L0x2001987e_f * (x**27) + 
            L0x20019880_f * (x**28) + L0x20019882_f * (x**29) + 
            L0x20019884_f * (x**30) + L0x20019886_f * (x**31) + 
            L0x20019888_f * (x**32) + L0x2001988a_f * (x**33) + 
            L0x2001988c_f * (x**34) + L0x2001988e_f * (x**35) + 
            L0x20019890_f * (x**36) + L0x20019892_f * (x**37) + 
            L0x20019894_f * (x**38) + L0x20019896_f * (x**39) + 
            L0x20019898_f * (x**40) + L0x2001989a_f * (x**41) + 
            L0x2001989c_f * (x**42) + L0x2001989e_f * (x**43) + 
            L0x200198a0_f * (x**44) + L0x200198a2_f * (x**45) + 
            L0x200198a4_f * (x**46) + L0x200198a6_f * (x**47) + 
            L0x200198a8_f * (x**48) + L0x200198aa_f * (x**49) + 
            L0x200198ac_f * (x**50) + L0x200198ae_f * (x**51) + 
            L0x200198b0_f * (x**52) + L0x200198b2_f * (x**53) + 
            L0x200198b4_f * (x**54) + L0x200198b6_f * (x**55) + 
            L0x200198b8_f * (x**56) + L0x200198ba_f * (x**57) + 
            L0x200198bc_f * (x**58) + L0x200198be_f * (x**59) + 
            L0x200198c0_f * (x**60) + L0x200198c2_f * (x**61) + 
            L0x200198c4_f * (x**62) + L0x200198c6_f * (x**63) + 
            L0x200198c8_f * (x**64) + L0x200198ca_f * (x**65) + 
            L0x200198cc_f * (x**66) + L0x200198ce_f * (x**67) + 
            L0x200198d0_f * (x**68) + L0x200198d2_f * (x**69) + 
            L0x200198d4_f * (x**70) + L0x200198d6_f * (x**71) + 
            L0x200198d8_f * (x**72) + L0x200198da_f * (x**73) + 
            L0x200198dc_f * (x**74) + L0x200198de_f * (x**75) + 
            L0x200198e0_f * (x**76) + L0x200198e2_f * (x**77) + 
            L0x200198e4_f * (x**78) + L0x200198e6_f * (x**79) + 
            L0x200198e8_f * (x**80) + L0x200198ea_f * (x**81) + 
            L0x200198ec_f * (x**82) + L0x200198ee_f * (x**83) + 
            L0x200198f0_f * (x**84) + L0x200198f2_f * (x**85) + 
            L0x200198f4_f * (x**86) + L0x200198f6_f * (x**87) + 
            L0x200198f8_f * (x**88) + L0x200198fa_f * (x**89) + 
            L0x200198fc_f * (x**90) + L0x200198fe_f * (x**91) + 
            L0x20019900_f * (x**92) + L0x20019902_f * (x**93) + 
            L0x20019904_f * (x**94) + L0x20019906_f * (x**95) + 
            L0x20019908_f * (x**96) + L0x2001990a_f * (x**97) + 
            L0x2001990c_f * (x**98) + L0x2001990e_f * (x**99) + 
            L0x20019910_f * (x**100) + L0x20019912_f * (x**101) + 
            L0x20019914_f * (x**102) + L0x20019916_f * (x**103) + 
            L0x20019918_f * (x**104) + L0x2001991a_f * (x**105) + 
            L0x2001991c_f * (x**106) + L0x2001991e_f * (x**107) + 
            L0x20019920_f * (x**108) + L0x20019922_f * (x**109) + 
            L0x20019924_f * (x**110) + L0x20019926_f * (x**111) + 
            L0x20019928_f * (x**112) + L0x2001992a_f * (x**113) + 
            L0x2001992c_f * (x**114) + L0x2001992e_f * (x**115) + 
            L0x20019930_f * (x**116) + L0x20019932_f * (x**117) + 
            L0x20019934_f * (x**118) + L0x20019936_f * (x**119) + 
            L0x20019938_f * (x**120) + L0x2001993a_f * (x**121) + 
            L0x2001993c_f * (x**122) + L0x2001993e_f * (x**123) + 
            L0x20019940_f * (x**124) + L0x20019942_f * (x**125) + 
            L0x20019944_f * (x**126) + L0x20019946_f * (x**127) + 
            L0x20019948_f * (x**128) + L0x2001994a_f * (x**129) + 
            L0x2001994c_f * (x**130) + L0x2001994e_f * (x**131) + 
            L0x20019950_f * (x**132) + L0x20019952_f * (x**133) + 
            L0x20019954_f * (x**134) + L0x20019956_f * (x**135) + 
            L0x20019958_f * (x**136) + L0x2001995a_f * (x**137) + 
            L0x2001995c_f * (x**138) + L0x2001995e_f * (x**139) + 
            L0x20019960_f * (x**140) + L0x20019962_f * (x**141) + 
            L0x20019964_f * (x**142) + L0x20019966_f * (x**143) + 
            L0x20019968_f * (x**144) + L0x2001996a_f * (x**145) + 
            L0x2001996c_f * (x**146) + L0x2001996e_f * (x**147) + 
            L0x20019970_f * (x**148) + L0x20019972_f * (x**149) + 
            L0x20019974_f * (x**150) + L0x20019976_f * (x**151) + 
            L0x20019978_f * (x**152) + L0x2001997a_f * (x**153) + 
            L0x2001997c_f * (x**154) + L0x2001997e_f * (x**155) + 
            L0x20019980_f * (x**156) + L0x20019982_f * (x**157) + 
            L0x20019984_f * (x**158) + L0x20019986_f * (x**159) + 
            L0x20019988_f * (x**160) + L0x2001998a_f * (x**161) + 
            L0x2001998c_f * (x**162) + L0x2001998e_f * (x**163) + 
            L0x20019990_f * (x**164) + L0x20019992_f * (x**165) + 
            L0x20019994_f * (x**166) + L0x20019996_f * (x**167) + 
            L0x20019998_f * (x**168) + L0x2001999a_f * (x**169) + 
            L0x2001999c_f * (x**170) + L0x2001999e_f * (x**171) + 
            L0x200199a0_f * (x**172) + L0x200199a2_f * (x**173) + 
            L0x200199a4_f * (x**174) + L0x200199a6_f * (x**175) + 
            L0x200199a8_f * (x**176) + L0x200199aa_f * (x**177) + 
            L0x200199ac_f * (x**178) + L0x200199ae_f * (x**179) + 
            L0x200199b0_f * (x**180) + L0x200199b2_f * (x**181) + 
            L0x200199b4_f * (x**182) + L0x200199b6_f * (x**183) + 
            L0x200199b8_f * (x**184) + L0x200199ba_f * (x**185) + 
            L0x200199bc_f * (x**186) + L0x200199be_f * (x**187) + 
            L0x200199c0_f * (x**188) + L0x200199c2_f * (x**189) + 
            L0x200199c4_f * (x**190) + L0x200199c6_f * (x**191) + 
            L0x200199c8_f * (x**192) + L0x200199ca_f * (x**193) + 
            L0x200199cc_f * (x**194) + L0x200199ce_f * (x**195) + 
            L0x200199d0_f * (x**196) + L0x200199d2_f * (x**197) + 
            L0x200199d4_f * (x**198) + L0x200199d6_f * (x**199) + 
            L0x200199d8_f * (x**200) + L0x200199da_f * (x**201) + 
            L0x200199dc_f * (x**202) + L0x200199de_f * (x**203) + 
            L0x200199e0_f * (x**204) + L0x200199e2_f * (x**205) + 
            L0x200199e4_f * (x**206) + L0x200199e6_f * (x**207) + 
            L0x200199e8_f * (x**208) + L0x200199ea_f * (x**209) + 
            L0x200199ec_f * (x**210) + L0x200199ee_f * (x**211) + 
            L0x200199f0_f * (x**212) + L0x200199f2_f * (x**213) + 
            L0x200199f4_f * (x**214) + L0x200199f6_f * (x**215) + 
            L0x200199f8_f * (x**216) + L0x200199fa_f * (x**217) + 
            L0x200199fc_f * (x**218) + L0x200199fe_f * (x**219) + 
            L0x20019a00_f * (x**220) + L0x20019a02_f * (x**221) + 
            L0x20019a04_f * (x**222) + L0x20019a06_f * (x**223) + 
            L0x20019a08_f * (x**224) + L0x20019a0a_f * (x**225) + 
            L0x20019a0c_f * (x**226) + L0x20019a0e_f * (x**227) + 
            L0x20019a10_f * (x**228) + L0x20019a12_f * (x**229) + 
            L0x20019a14_f * (x**230) + L0x20019a16_f * (x**231) + 
            L0x20019a18_f * (x**232) + L0x20019a1a_f * (x**233) + 
            L0x20019a1c_f * (x**234) + L0x20019a1e_f * (x**235) + 
            L0x20019a20_f * (x**236) + L0x20019a22_f * (x**237) + 
            L0x20019a24_f * (x**238) + L0x20019a26_f * (x**239) + 
            L0x20019a28_f * (x**240) + L0x20019a2a_f * (x**241) + 
            L0x20019a2c_f * (x**242) + L0x20019a2e_f * (x**243) + 
            L0x20019a30_f * (x**244) + L0x20019a32_f * (x**245) + 
            L0x20019a34_f * (x**246) + L0x20019a36_f * (x**247) + 
            L0x20019a38_f * (x**248) + L0x20019a3a_f * (x**249) + 
            L0x20019a3c_f * (x**250) + L0x20019a3e_f * (x**251) + 
            L0x20019a40_f * (x**252) + L0x20019a42_f * (x**253) + 
            L0x20019a44_f * (x**254) + L0x20019a46_f * (x**255)
          )
          [25570049, x**4 - 19240139],
    (* inp_poly_35 *)
    eqmod (2**32) * (inp_poly_35 * inp_poly_35)
          (
            L0x20019848_f * (x**0) + L0x2001984a_f * (x**1) + 
            L0x2001984c_f * (x**2) + L0x2001984e_f * (x**3) + 
            L0x20019850_f * (x**4) + L0x20019852_f * (x**5) + 
            L0x20019854_f * (x**6) + L0x20019856_f * (x**7) + 
            L0x20019858_f * (x**8) + L0x2001985a_f * (x**9) + 
            L0x2001985c_f * (x**10) + L0x2001985e_f * (x**11) + 
            L0x20019860_f * (x**12) + L0x20019862_f * (x**13) + 
            L0x20019864_f * (x**14) + L0x20019866_f * (x**15) + 
            L0x20019868_f * (x**16) + L0x2001986a_f * (x**17) + 
            L0x2001986c_f * (x**18) + L0x2001986e_f * (x**19) + 
            L0x20019870_f * (x**20) + L0x20019872_f * (x**21) + 
            L0x20019874_f * (x**22) + L0x20019876_f * (x**23) + 
            L0x20019878_f * (x**24) + L0x2001987a_f * (x**25) + 
            L0x2001987c_f * (x**26) + L0x2001987e_f * (x**27) + 
            L0x20019880_f * (x**28) + L0x20019882_f * (x**29) + 
            L0x20019884_f * (x**30) + L0x20019886_f * (x**31) + 
            L0x20019888_f * (x**32) + L0x2001988a_f * (x**33) + 
            L0x2001988c_f * (x**34) + L0x2001988e_f * (x**35) + 
            L0x20019890_f * (x**36) + L0x20019892_f * (x**37) + 
            L0x20019894_f * (x**38) + L0x20019896_f * (x**39) + 
            L0x20019898_f * (x**40) + L0x2001989a_f * (x**41) + 
            L0x2001989c_f * (x**42) + L0x2001989e_f * (x**43) + 
            L0x200198a0_f * (x**44) + L0x200198a2_f * (x**45) + 
            L0x200198a4_f * (x**46) + L0x200198a6_f * (x**47) + 
            L0x200198a8_f * (x**48) + L0x200198aa_f * (x**49) + 
            L0x200198ac_f * (x**50) + L0x200198ae_f * (x**51) + 
            L0x200198b0_f * (x**52) + L0x200198b2_f * (x**53) + 
            L0x200198b4_f * (x**54) + L0x200198b6_f * (x**55) + 
            L0x200198b8_f * (x**56) + L0x200198ba_f * (x**57) + 
            L0x200198bc_f * (x**58) + L0x200198be_f * (x**59) + 
            L0x200198c0_f * (x**60) + L0x200198c2_f * (x**61) + 
            L0x200198c4_f * (x**62) + L0x200198c6_f * (x**63) + 
            L0x200198c8_f * (x**64) + L0x200198ca_f * (x**65) + 
            L0x200198cc_f * (x**66) + L0x200198ce_f * (x**67) + 
            L0x200198d0_f * (x**68) + L0x200198d2_f * (x**69) + 
            L0x200198d4_f * (x**70) + L0x200198d6_f * (x**71) + 
            L0x200198d8_f * (x**72) + L0x200198da_f * (x**73) + 
            L0x200198dc_f * (x**74) + L0x200198de_f * (x**75) + 
            L0x200198e0_f * (x**76) + L0x200198e2_f * (x**77) + 
            L0x200198e4_f * (x**78) + L0x200198e6_f * (x**79) + 
            L0x200198e8_f * (x**80) + L0x200198ea_f * (x**81) + 
            L0x200198ec_f * (x**82) + L0x200198ee_f * (x**83) + 
            L0x200198f0_f * (x**84) + L0x200198f2_f * (x**85) + 
            L0x200198f4_f * (x**86) + L0x200198f6_f * (x**87) + 
            L0x200198f8_f * (x**88) + L0x200198fa_f * (x**89) + 
            L0x200198fc_f * (x**90) + L0x200198fe_f * (x**91) + 
            L0x20019900_f * (x**92) + L0x20019902_f * (x**93) + 
            L0x20019904_f * (x**94) + L0x20019906_f * (x**95) + 
            L0x20019908_f * (x**96) + L0x2001990a_f * (x**97) + 
            L0x2001990c_f * (x**98) + L0x2001990e_f * (x**99) + 
            L0x20019910_f * (x**100) + L0x20019912_f * (x**101) + 
            L0x20019914_f * (x**102) + L0x20019916_f * (x**103) + 
            L0x20019918_f * (x**104) + L0x2001991a_f * (x**105) + 
            L0x2001991c_f * (x**106) + L0x2001991e_f * (x**107) + 
            L0x20019920_f * (x**108) + L0x20019922_f * (x**109) + 
            L0x20019924_f * (x**110) + L0x20019926_f * (x**111) + 
            L0x20019928_f * (x**112) + L0x2001992a_f * (x**113) + 
            L0x2001992c_f * (x**114) + L0x2001992e_f * (x**115) + 
            L0x20019930_f * (x**116) + L0x20019932_f * (x**117) + 
            L0x20019934_f * (x**118) + L0x20019936_f * (x**119) + 
            L0x20019938_f * (x**120) + L0x2001993a_f * (x**121) + 
            L0x2001993c_f * (x**122) + L0x2001993e_f * (x**123) + 
            L0x20019940_f * (x**124) + L0x20019942_f * (x**125) + 
            L0x20019944_f * (x**126) + L0x20019946_f * (x**127) + 
            L0x20019948_f * (x**128) + L0x2001994a_f * (x**129) + 
            L0x2001994c_f * (x**130) + L0x2001994e_f * (x**131) + 
            L0x20019950_f * (x**132) + L0x20019952_f * (x**133) + 
            L0x20019954_f * (x**134) + L0x20019956_f * (x**135) + 
            L0x20019958_f * (x**136) + L0x2001995a_f * (x**137) + 
            L0x2001995c_f * (x**138) + L0x2001995e_f * (x**139) + 
            L0x20019960_f * (x**140) + L0x20019962_f * (x**141) + 
            L0x20019964_f * (x**142) + L0x20019966_f * (x**143) + 
            L0x20019968_f * (x**144) + L0x2001996a_f * (x**145) + 
            L0x2001996c_f * (x**146) + L0x2001996e_f * (x**147) + 
            L0x20019970_f * (x**148) + L0x20019972_f * (x**149) + 
            L0x20019974_f * (x**150) + L0x20019976_f * (x**151) + 
            L0x20019978_f * (x**152) + L0x2001997a_f * (x**153) + 
            L0x2001997c_f * (x**154) + L0x2001997e_f * (x**155) + 
            L0x20019980_f * (x**156) + L0x20019982_f * (x**157) + 
            L0x20019984_f * (x**158) + L0x20019986_f * (x**159) + 
            L0x20019988_f * (x**160) + L0x2001998a_f * (x**161) + 
            L0x2001998c_f * (x**162) + L0x2001998e_f * (x**163) + 
            L0x20019990_f * (x**164) + L0x20019992_f * (x**165) + 
            L0x20019994_f * (x**166) + L0x20019996_f * (x**167) + 
            L0x20019998_f * (x**168) + L0x2001999a_f * (x**169) + 
            L0x2001999c_f * (x**170) + L0x2001999e_f * (x**171) + 
            L0x200199a0_f * (x**172) + L0x200199a2_f * (x**173) + 
            L0x200199a4_f * (x**174) + L0x200199a6_f * (x**175) + 
            L0x200199a8_f * (x**176) + L0x200199aa_f * (x**177) + 
            L0x200199ac_f * (x**178) + L0x200199ae_f * (x**179) + 
            L0x200199b0_f * (x**180) + L0x200199b2_f * (x**181) + 
            L0x200199b4_f * (x**182) + L0x200199b6_f * (x**183) + 
            L0x200199b8_f * (x**184) + L0x200199ba_f * (x**185) + 
            L0x200199bc_f * (x**186) + L0x200199be_f * (x**187) + 
            L0x200199c0_f * (x**188) + L0x200199c2_f * (x**189) + 
            L0x200199c4_f * (x**190) + L0x200199c6_f * (x**191) + 
            L0x200199c8_f * (x**192) + L0x200199ca_f * (x**193) + 
            L0x200199cc_f * (x**194) + L0x200199ce_f * (x**195) + 
            L0x200199d0_f * (x**196) + L0x200199d2_f * (x**197) + 
            L0x200199d4_f * (x**198) + L0x200199d6_f * (x**199) + 
            L0x200199d8_f * (x**200) + L0x200199da_f * (x**201) + 
            L0x200199dc_f * (x**202) + L0x200199de_f * (x**203) + 
            L0x200199e0_f * (x**204) + L0x200199e2_f * (x**205) + 
            L0x200199e4_f * (x**206) + L0x200199e6_f * (x**207) + 
            L0x200199e8_f * (x**208) + L0x200199ea_f * (x**209) + 
            L0x200199ec_f * (x**210) + L0x200199ee_f * (x**211) + 
            L0x200199f0_f * (x**212) + L0x200199f2_f * (x**213) + 
            L0x200199f4_f * (x**214) + L0x200199f6_f * (x**215) + 
            L0x200199f8_f * (x**216) + L0x200199fa_f * (x**217) + 
            L0x200199fc_f * (x**218) + L0x200199fe_f * (x**219) + 
            L0x20019a00_f * (x**220) + L0x20019a02_f * (x**221) + 
            L0x20019a04_f * (x**222) + L0x20019a06_f * (x**223) + 
            L0x20019a08_f * (x**224) + L0x20019a0a_f * (x**225) + 
            L0x20019a0c_f * (x**226) + L0x20019a0e_f * (x**227) + 
            L0x20019a10_f * (x**228) + L0x20019a12_f * (x**229) + 
            L0x20019a14_f * (x**230) + L0x20019a16_f * (x**231) + 
            L0x20019a18_f * (x**232) + L0x20019a1a_f * (x**233) + 
            L0x20019a1c_f * (x**234) + L0x20019a1e_f * (x**235) + 
            L0x20019a20_f * (x**236) + L0x20019a22_f * (x**237) + 
            L0x20019a24_f * (x**238) + L0x20019a26_f * (x**239) + 
            L0x20019a28_f * (x**240) + L0x20019a2a_f * (x**241) + 
            L0x20019a2c_f * (x**242) + L0x20019a2e_f * (x**243) + 
            L0x20019a30_f * (x**244) + L0x20019a32_f * (x**245) + 
            L0x20019a34_f * (x**246) + L0x20019a36_f * (x**247) + 
            L0x20019a38_f * (x**248) + L0x20019a3a_f * (x**249) + 
            L0x20019a3c_f * (x**250) + L0x20019a3e_f * (x**251) + 
            L0x20019a40_f * (x**252) + L0x20019a42_f * (x**253) + 
            L0x20019a44_f * (x**254) + L0x20019a46_f * (x**255)
          )
          [25570049, x**4 - 6329910],
    (* inp_poly_36 *)
    eqmod (2**32) * (inp_poly_36 * inp_poly_36)
          (
            L0x20019848_f * (x**0) + L0x2001984a_f * (x**1) + 
            L0x2001984c_f * (x**2) + L0x2001984e_f * (x**3) + 
            L0x20019850_f * (x**4) + L0x20019852_f * (x**5) + 
            L0x20019854_f * (x**6) + L0x20019856_f * (x**7) + 
            L0x20019858_f * (x**8) + L0x2001985a_f * (x**9) + 
            L0x2001985c_f * (x**10) + L0x2001985e_f * (x**11) + 
            L0x20019860_f * (x**12) + L0x20019862_f * (x**13) + 
            L0x20019864_f * (x**14) + L0x20019866_f * (x**15) + 
            L0x20019868_f * (x**16) + L0x2001986a_f * (x**17) + 
            L0x2001986c_f * (x**18) + L0x2001986e_f * (x**19) + 
            L0x20019870_f * (x**20) + L0x20019872_f * (x**21) + 
            L0x20019874_f * (x**22) + L0x20019876_f * (x**23) + 
            L0x20019878_f * (x**24) + L0x2001987a_f * (x**25) + 
            L0x2001987c_f * (x**26) + L0x2001987e_f * (x**27) + 
            L0x20019880_f * (x**28) + L0x20019882_f * (x**29) + 
            L0x20019884_f * (x**30) + L0x20019886_f * (x**31) + 
            L0x20019888_f * (x**32) + L0x2001988a_f * (x**33) + 
            L0x2001988c_f * (x**34) + L0x2001988e_f * (x**35) + 
            L0x20019890_f * (x**36) + L0x20019892_f * (x**37) + 
            L0x20019894_f * (x**38) + L0x20019896_f * (x**39) + 
            L0x20019898_f * (x**40) + L0x2001989a_f * (x**41) + 
            L0x2001989c_f * (x**42) + L0x2001989e_f * (x**43) + 
            L0x200198a0_f * (x**44) + L0x200198a2_f * (x**45) + 
            L0x200198a4_f * (x**46) + L0x200198a6_f * (x**47) + 
            L0x200198a8_f * (x**48) + L0x200198aa_f * (x**49) + 
            L0x200198ac_f * (x**50) + L0x200198ae_f * (x**51) + 
            L0x200198b0_f * (x**52) + L0x200198b2_f * (x**53) + 
            L0x200198b4_f * (x**54) + L0x200198b6_f * (x**55) + 
            L0x200198b8_f * (x**56) + L0x200198ba_f * (x**57) + 
            L0x200198bc_f * (x**58) + L0x200198be_f * (x**59) + 
            L0x200198c0_f * (x**60) + L0x200198c2_f * (x**61) + 
            L0x200198c4_f * (x**62) + L0x200198c6_f * (x**63) + 
            L0x200198c8_f * (x**64) + L0x200198ca_f * (x**65) + 
            L0x200198cc_f * (x**66) + L0x200198ce_f * (x**67) + 
            L0x200198d0_f * (x**68) + L0x200198d2_f * (x**69) + 
            L0x200198d4_f * (x**70) + L0x200198d6_f * (x**71) + 
            L0x200198d8_f * (x**72) + L0x200198da_f * (x**73) + 
            L0x200198dc_f * (x**74) + L0x200198de_f * (x**75) + 
            L0x200198e0_f * (x**76) + L0x200198e2_f * (x**77) + 
            L0x200198e4_f * (x**78) + L0x200198e6_f * (x**79) + 
            L0x200198e8_f * (x**80) + L0x200198ea_f * (x**81) + 
            L0x200198ec_f * (x**82) + L0x200198ee_f * (x**83) + 
            L0x200198f0_f * (x**84) + L0x200198f2_f * (x**85) + 
            L0x200198f4_f * (x**86) + L0x200198f6_f * (x**87) + 
            L0x200198f8_f * (x**88) + L0x200198fa_f * (x**89) + 
            L0x200198fc_f * (x**90) + L0x200198fe_f * (x**91) + 
            L0x20019900_f * (x**92) + L0x20019902_f * (x**93) + 
            L0x20019904_f * (x**94) + L0x20019906_f * (x**95) + 
            L0x20019908_f * (x**96) + L0x2001990a_f * (x**97) + 
            L0x2001990c_f * (x**98) + L0x2001990e_f * (x**99) + 
            L0x20019910_f * (x**100) + L0x20019912_f * (x**101) + 
            L0x20019914_f * (x**102) + L0x20019916_f * (x**103) + 
            L0x20019918_f * (x**104) + L0x2001991a_f * (x**105) + 
            L0x2001991c_f * (x**106) + L0x2001991e_f * (x**107) + 
            L0x20019920_f * (x**108) + L0x20019922_f * (x**109) + 
            L0x20019924_f * (x**110) + L0x20019926_f * (x**111) + 
            L0x20019928_f * (x**112) + L0x2001992a_f * (x**113) + 
            L0x2001992c_f * (x**114) + L0x2001992e_f * (x**115) + 
            L0x20019930_f * (x**116) + L0x20019932_f * (x**117) + 
            L0x20019934_f * (x**118) + L0x20019936_f * (x**119) + 
            L0x20019938_f * (x**120) + L0x2001993a_f * (x**121) + 
            L0x2001993c_f * (x**122) + L0x2001993e_f * (x**123) + 
            L0x20019940_f * (x**124) + L0x20019942_f * (x**125) + 
            L0x20019944_f * (x**126) + L0x20019946_f * (x**127) + 
            L0x20019948_f * (x**128) + L0x2001994a_f * (x**129) + 
            L0x2001994c_f * (x**130) + L0x2001994e_f * (x**131) + 
            L0x20019950_f * (x**132) + L0x20019952_f * (x**133) + 
            L0x20019954_f * (x**134) + L0x20019956_f * (x**135) + 
            L0x20019958_f * (x**136) + L0x2001995a_f * (x**137) + 
            L0x2001995c_f * (x**138) + L0x2001995e_f * (x**139) + 
            L0x20019960_f * (x**140) + L0x20019962_f * (x**141) + 
            L0x20019964_f * (x**142) + L0x20019966_f * (x**143) + 
            L0x20019968_f * (x**144) + L0x2001996a_f * (x**145) + 
            L0x2001996c_f * (x**146) + L0x2001996e_f * (x**147) + 
            L0x20019970_f * (x**148) + L0x20019972_f * (x**149) + 
            L0x20019974_f * (x**150) + L0x20019976_f * (x**151) + 
            L0x20019978_f * (x**152) + L0x2001997a_f * (x**153) + 
            L0x2001997c_f * (x**154) + L0x2001997e_f * (x**155) + 
            L0x20019980_f * (x**156) + L0x20019982_f * (x**157) + 
            L0x20019984_f * (x**158) + L0x20019986_f * (x**159) + 
            L0x20019988_f * (x**160) + L0x2001998a_f * (x**161) + 
            L0x2001998c_f * (x**162) + L0x2001998e_f * (x**163) + 
            L0x20019990_f * (x**164) + L0x20019992_f * (x**165) + 
            L0x20019994_f * (x**166) + L0x20019996_f * (x**167) + 
            L0x20019998_f * (x**168) + L0x2001999a_f * (x**169) + 
            L0x2001999c_f * (x**170) + L0x2001999e_f * (x**171) + 
            L0x200199a0_f * (x**172) + L0x200199a2_f * (x**173) + 
            L0x200199a4_f * (x**174) + L0x200199a6_f * (x**175) + 
            L0x200199a8_f * (x**176) + L0x200199aa_f * (x**177) + 
            L0x200199ac_f * (x**178) + L0x200199ae_f * (x**179) + 
            L0x200199b0_f * (x**180) + L0x200199b2_f * (x**181) + 
            L0x200199b4_f * (x**182) + L0x200199b6_f * (x**183) + 
            L0x200199b8_f * (x**184) + L0x200199ba_f * (x**185) + 
            L0x200199bc_f * (x**186) + L0x200199be_f * (x**187) + 
            L0x200199c0_f * (x**188) + L0x200199c2_f * (x**189) + 
            L0x200199c4_f * (x**190) + L0x200199c6_f * (x**191) + 
            L0x200199c8_f * (x**192) + L0x200199ca_f * (x**193) + 
            L0x200199cc_f * (x**194) + L0x200199ce_f * (x**195) + 
            L0x200199d0_f * (x**196) + L0x200199d2_f * (x**197) + 
            L0x200199d4_f * (x**198) + L0x200199d6_f * (x**199) + 
            L0x200199d8_f * (x**200) + L0x200199da_f * (x**201) + 
            L0x200199dc_f * (x**202) + L0x200199de_f * (x**203) + 
            L0x200199e0_f * (x**204) + L0x200199e2_f * (x**205) + 
            L0x200199e4_f * (x**206) + L0x200199e6_f * (x**207) + 
            L0x200199e8_f * (x**208) + L0x200199ea_f * (x**209) + 
            L0x200199ec_f * (x**210) + L0x200199ee_f * (x**211) + 
            L0x200199f0_f * (x**212) + L0x200199f2_f * (x**213) + 
            L0x200199f4_f * (x**214) + L0x200199f6_f * (x**215) + 
            L0x200199f8_f * (x**216) + L0x200199fa_f * (x**217) + 
            L0x200199fc_f * (x**218) + L0x200199fe_f * (x**219) + 
            L0x20019a00_f * (x**220) + L0x20019a02_f * (x**221) + 
            L0x20019a04_f * (x**222) + L0x20019a06_f * (x**223) + 
            L0x20019a08_f * (x**224) + L0x20019a0a_f * (x**225) + 
            L0x20019a0c_f * (x**226) + L0x20019a0e_f * (x**227) + 
            L0x20019a10_f * (x**228) + L0x20019a12_f * (x**229) + 
            L0x20019a14_f * (x**230) + L0x20019a16_f * (x**231) + 
            L0x20019a18_f * (x**232) + L0x20019a1a_f * (x**233) + 
            L0x20019a1c_f * (x**234) + L0x20019a1e_f * (x**235) + 
            L0x20019a20_f * (x**236) + L0x20019a22_f * (x**237) + 
            L0x20019a24_f * (x**238) + L0x20019a26_f * (x**239) + 
            L0x20019a28_f * (x**240) + L0x20019a2a_f * (x**241) + 
            L0x20019a2c_f * (x**242) + L0x20019a2e_f * (x**243) + 
            L0x20019a30_f * (x**244) + L0x20019a32_f * (x**245) + 
            L0x20019a34_f * (x**246) + L0x20019a36_f * (x**247) + 
            L0x20019a38_f * (x**248) + L0x20019a3a_f * (x**249) + 
            L0x20019a3c_f * (x**250) + L0x20019a3e_f * (x**251) + 
            L0x20019a40_f * (x**252) + L0x20019a42_f * (x**253) + 
            L0x20019a44_f * (x**254) + L0x20019a46_f * (x**255)
          )
          [25570049, x**4 - 5192558],
    (* inp_poly_37 *)
    eqmod (2**32) * (inp_poly_37 * inp_poly_37)
          (
            L0x20019848_f * (x**0) + L0x2001984a_f * (x**1) + 
            L0x2001984c_f * (x**2) + L0x2001984e_f * (x**3) + 
            L0x20019850_f * (x**4) + L0x20019852_f * (x**5) + 
            L0x20019854_f * (x**6) + L0x20019856_f * (x**7) + 
            L0x20019858_f * (x**8) + L0x2001985a_f * (x**9) + 
            L0x2001985c_f * (x**10) + L0x2001985e_f * (x**11) + 
            L0x20019860_f * (x**12) + L0x20019862_f * (x**13) + 
            L0x20019864_f * (x**14) + L0x20019866_f * (x**15) + 
            L0x20019868_f * (x**16) + L0x2001986a_f * (x**17) + 
            L0x2001986c_f * (x**18) + L0x2001986e_f * (x**19) + 
            L0x20019870_f * (x**20) + L0x20019872_f * (x**21) + 
            L0x20019874_f * (x**22) + L0x20019876_f * (x**23) + 
            L0x20019878_f * (x**24) + L0x2001987a_f * (x**25) + 
            L0x2001987c_f * (x**26) + L0x2001987e_f * (x**27) + 
            L0x20019880_f * (x**28) + L0x20019882_f * (x**29) + 
            L0x20019884_f * (x**30) + L0x20019886_f * (x**31) + 
            L0x20019888_f * (x**32) + L0x2001988a_f * (x**33) + 
            L0x2001988c_f * (x**34) + L0x2001988e_f * (x**35) + 
            L0x20019890_f * (x**36) + L0x20019892_f * (x**37) + 
            L0x20019894_f * (x**38) + L0x20019896_f * (x**39) + 
            L0x20019898_f * (x**40) + L0x2001989a_f * (x**41) + 
            L0x2001989c_f * (x**42) + L0x2001989e_f * (x**43) + 
            L0x200198a0_f * (x**44) + L0x200198a2_f * (x**45) + 
            L0x200198a4_f * (x**46) + L0x200198a6_f * (x**47) + 
            L0x200198a8_f * (x**48) + L0x200198aa_f * (x**49) + 
            L0x200198ac_f * (x**50) + L0x200198ae_f * (x**51) + 
            L0x200198b0_f * (x**52) + L0x200198b2_f * (x**53) + 
            L0x200198b4_f * (x**54) + L0x200198b6_f * (x**55) + 
            L0x200198b8_f * (x**56) + L0x200198ba_f * (x**57) + 
            L0x200198bc_f * (x**58) + L0x200198be_f * (x**59) + 
            L0x200198c0_f * (x**60) + L0x200198c2_f * (x**61) + 
            L0x200198c4_f * (x**62) + L0x200198c6_f * (x**63) + 
            L0x200198c8_f * (x**64) + L0x200198ca_f * (x**65) + 
            L0x200198cc_f * (x**66) + L0x200198ce_f * (x**67) + 
            L0x200198d0_f * (x**68) + L0x200198d2_f * (x**69) + 
            L0x200198d4_f * (x**70) + L0x200198d6_f * (x**71) + 
            L0x200198d8_f * (x**72) + L0x200198da_f * (x**73) + 
            L0x200198dc_f * (x**74) + L0x200198de_f * (x**75) + 
            L0x200198e0_f * (x**76) + L0x200198e2_f * (x**77) + 
            L0x200198e4_f * (x**78) + L0x200198e6_f * (x**79) + 
            L0x200198e8_f * (x**80) + L0x200198ea_f * (x**81) + 
            L0x200198ec_f * (x**82) + L0x200198ee_f * (x**83) + 
            L0x200198f0_f * (x**84) + L0x200198f2_f * (x**85) + 
            L0x200198f4_f * (x**86) + L0x200198f6_f * (x**87) + 
            L0x200198f8_f * (x**88) + L0x200198fa_f * (x**89) + 
            L0x200198fc_f * (x**90) + L0x200198fe_f * (x**91) + 
            L0x20019900_f * (x**92) + L0x20019902_f * (x**93) + 
            L0x20019904_f * (x**94) + L0x20019906_f * (x**95) + 
            L0x20019908_f * (x**96) + L0x2001990a_f * (x**97) + 
            L0x2001990c_f * (x**98) + L0x2001990e_f * (x**99) + 
            L0x20019910_f * (x**100) + L0x20019912_f * (x**101) + 
            L0x20019914_f * (x**102) + L0x20019916_f * (x**103) + 
            L0x20019918_f * (x**104) + L0x2001991a_f * (x**105) + 
            L0x2001991c_f * (x**106) + L0x2001991e_f * (x**107) + 
            L0x20019920_f * (x**108) + L0x20019922_f * (x**109) + 
            L0x20019924_f * (x**110) + L0x20019926_f * (x**111) + 
            L0x20019928_f * (x**112) + L0x2001992a_f * (x**113) + 
            L0x2001992c_f * (x**114) + L0x2001992e_f * (x**115) + 
            L0x20019930_f * (x**116) + L0x20019932_f * (x**117) + 
            L0x20019934_f * (x**118) + L0x20019936_f * (x**119) + 
            L0x20019938_f * (x**120) + L0x2001993a_f * (x**121) + 
            L0x2001993c_f * (x**122) + L0x2001993e_f * (x**123) + 
            L0x20019940_f * (x**124) + L0x20019942_f * (x**125) + 
            L0x20019944_f * (x**126) + L0x20019946_f * (x**127) + 
            L0x20019948_f * (x**128) + L0x2001994a_f * (x**129) + 
            L0x2001994c_f * (x**130) + L0x2001994e_f * (x**131) + 
            L0x20019950_f * (x**132) + L0x20019952_f * (x**133) + 
            L0x20019954_f * (x**134) + L0x20019956_f * (x**135) + 
            L0x20019958_f * (x**136) + L0x2001995a_f * (x**137) + 
            L0x2001995c_f * (x**138) + L0x2001995e_f * (x**139) + 
            L0x20019960_f * (x**140) + L0x20019962_f * (x**141) + 
            L0x20019964_f * (x**142) + L0x20019966_f * (x**143) + 
            L0x20019968_f * (x**144) + L0x2001996a_f * (x**145) + 
            L0x2001996c_f * (x**146) + L0x2001996e_f * (x**147) + 
            L0x20019970_f * (x**148) + L0x20019972_f * (x**149) + 
            L0x20019974_f * (x**150) + L0x20019976_f * (x**151) + 
            L0x20019978_f * (x**152) + L0x2001997a_f * (x**153) + 
            L0x2001997c_f * (x**154) + L0x2001997e_f * (x**155) + 
            L0x20019980_f * (x**156) + L0x20019982_f * (x**157) + 
            L0x20019984_f * (x**158) + L0x20019986_f * (x**159) + 
            L0x20019988_f * (x**160) + L0x2001998a_f * (x**161) + 
            L0x2001998c_f * (x**162) + L0x2001998e_f * (x**163) + 
            L0x20019990_f * (x**164) + L0x20019992_f * (x**165) + 
            L0x20019994_f * (x**166) + L0x20019996_f * (x**167) + 
            L0x20019998_f * (x**168) + L0x2001999a_f * (x**169) + 
            L0x2001999c_f * (x**170) + L0x2001999e_f * (x**171) + 
            L0x200199a0_f * (x**172) + L0x200199a2_f * (x**173) + 
            L0x200199a4_f * (x**174) + L0x200199a6_f * (x**175) + 
            L0x200199a8_f * (x**176) + L0x200199aa_f * (x**177) + 
            L0x200199ac_f * (x**178) + L0x200199ae_f * (x**179) + 
            L0x200199b0_f * (x**180) + L0x200199b2_f * (x**181) + 
            L0x200199b4_f * (x**182) + L0x200199b6_f * (x**183) + 
            L0x200199b8_f * (x**184) + L0x200199ba_f * (x**185) + 
            L0x200199bc_f * (x**186) + L0x200199be_f * (x**187) + 
            L0x200199c0_f * (x**188) + L0x200199c2_f * (x**189) + 
            L0x200199c4_f * (x**190) + L0x200199c6_f * (x**191) + 
            L0x200199c8_f * (x**192) + L0x200199ca_f * (x**193) + 
            L0x200199cc_f * (x**194) + L0x200199ce_f * (x**195) + 
            L0x200199d0_f * (x**196) + L0x200199d2_f * (x**197) + 
            L0x200199d4_f * (x**198) + L0x200199d6_f * (x**199) + 
            L0x200199d8_f * (x**200) + L0x200199da_f * (x**201) + 
            L0x200199dc_f * (x**202) + L0x200199de_f * (x**203) + 
            L0x200199e0_f * (x**204) + L0x200199e2_f * (x**205) + 
            L0x200199e4_f * (x**206) + L0x200199e6_f * (x**207) + 
            L0x200199e8_f * (x**208) + L0x200199ea_f * (x**209) + 
            L0x200199ec_f * (x**210) + L0x200199ee_f * (x**211) + 
            L0x200199f0_f * (x**212) + L0x200199f2_f * (x**213) + 
            L0x200199f4_f * (x**214) + L0x200199f6_f * (x**215) + 
            L0x200199f8_f * (x**216) + L0x200199fa_f * (x**217) + 
            L0x200199fc_f * (x**218) + L0x200199fe_f * (x**219) + 
            L0x20019a00_f * (x**220) + L0x20019a02_f * (x**221) + 
            L0x20019a04_f * (x**222) + L0x20019a06_f * (x**223) + 
            L0x20019a08_f * (x**224) + L0x20019a0a_f * (x**225) + 
            L0x20019a0c_f * (x**226) + L0x20019a0e_f * (x**227) + 
            L0x20019a10_f * (x**228) + L0x20019a12_f * (x**229) + 
            L0x20019a14_f * (x**230) + L0x20019a16_f * (x**231) + 
            L0x20019a18_f * (x**232) + L0x20019a1a_f * (x**233) + 
            L0x20019a1c_f * (x**234) + L0x20019a1e_f * (x**235) + 
            L0x20019a20_f * (x**236) + L0x20019a22_f * (x**237) + 
            L0x20019a24_f * (x**238) + L0x20019a26_f * (x**239) + 
            L0x20019a28_f * (x**240) + L0x20019a2a_f * (x**241) + 
            L0x20019a2c_f * (x**242) + L0x20019a2e_f * (x**243) + 
            L0x20019a30_f * (x**244) + L0x20019a32_f * (x**245) + 
            L0x20019a34_f * (x**246) + L0x20019a36_f * (x**247) + 
            L0x20019a38_f * (x**248) + L0x20019a3a_f * (x**249) + 
            L0x20019a3c_f * (x**250) + L0x20019a3e_f * (x**251) + 
            L0x20019a40_f * (x**252) + L0x20019a42_f * (x**253) + 
            L0x20019a44_f * (x**254) + L0x20019a46_f * (x**255)
          )
          [25570049, x**4 - 20377491],
    (* inp_poly_38 *)
    eqmod (2**32) * (inp_poly_38 * inp_poly_38)
          (
            L0x20019848_f * (x**0) + L0x2001984a_f * (x**1) + 
            L0x2001984c_f * (x**2) + L0x2001984e_f * (x**3) + 
            L0x20019850_f * (x**4) + L0x20019852_f * (x**5) + 
            L0x20019854_f * (x**6) + L0x20019856_f * (x**7) + 
            L0x20019858_f * (x**8) + L0x2001985a_f * (x**9) + 
            L0x2001985c_f * (x**10) + L0x2001985e_f * (x**11) + 
            L0x20019860_f * (x**12) + L0x20019862_f * (x**13) + 
            L0x20019864_f * (x**14) + L0x20019866_f * (x**15) + 
            L0x20019868_f * (x**16) + L0x2001986a_f * (x**17) + 
            L0x2001986c_f * (x**18) + L0x2001986e_f * (x**19) + 
            L0x20019870_f * (x**20) + L0x20019872_f * (x**21) + 
            L0x20019874_f * (x**22) + L0x20019876_f * (x**23) + 
            L0x20019878_f * (x**24) + L0x2001987a_f * (x**25) + 
            L0x2001987c_f * (x**26) + L0x2001987e_f * (x**27) + 
            L0x20019880_f * (x**28) + L0x20019882_f * (x**29) + 
            L0x20019884_f * (x**30) + L0x20019886_f * (x**31) + 
            L0x20019888_f * (x**32) + L0x2001988a_f * (x**33) + 
            L0x2001988c_f * (x**34) + L0x2001988e_f * (x**35) + 
            L0x20019890_f * (x**36) + L0x20019892_f * (x**37) + 
            L0x20019894_f * (x**38) + L0x20019896_f * (x**39) + 
            L0x20019898_f * (x**40) + L0x2001989a_f * (x**41) + 
            L0x2001989c_f * (x**42) + L0x2001989e_f * (x**43) + 
            L0x200198a0_f * (x**44) + L0x200198a2_f * (x**45) + 
            L0x200198a4_f * (x**46) + L0x200198a6_f * (x**47) + 
            L0x200198a8_f * (x**48) + L0x200198aa_f * (x**49) + 
            L0x200198ac_f * (x**50) + L0x200198ae_f * (x**51) + 
            L0x200198b0_f * (x**52) + L0x200198b2_f * (x**53) + 
            L0x200198b4_f * (x**54) + L0x200198b6_f * (x**55) + 
            L0x200198b8_f * (x**56) + L0x200198ba_f * (x**57) + 
            L0x200198bc_f * (x**58) + L0x200198be_f * (x**59) + 
            L0x200198c0_f * (x**60) + L0x200198c2_f * (x**61) + 
            L0x200198c4_f * (x**62) + L0x200198c6_f * (x**63) + 
            L0x200198c8_f * (x**64) + L0x200198ca_f * (x**65) + 
            L0x200198cc_f * (x**66) + L0x200198ce_f * (x**67) + 
            L0x200198d0_f * (x**68) + L0x200198d2_f * (x**69) + 
            L0x200198d4_f * (x**70) + L0x200198d6_f * (x**71) + 
            L0x200198d8_f * (x**72) + L0x200198da_f * (x**73) + 
            L0x200198dc_f * (x**74) + L0x200198de_f * (x**75) + 
            L0x200198e0_f * (x**76) + L0x200198e2_f * (x**77) + 
            L0x200198e4_f * (x**78) + L0x200198e6_f * (x**79) + 
            L0x200198e8_f * (x**80) + L0x200198ea_f * (x**81) + 
            L0x200198ec_f * (x**82) + L0x200198ee_f * (x**83) + 
            L0x200198f0_f * (x**84) + L0x200198f2_f * (x**85) + 
            L0x200198f4_f * (x**86) + L0x200198f6_f * (x**87) + 
            L0x200198f8_f * (x**88) + L0x200198fa_f * (x**89) + 
            L0x200198fc_f * (x**90) + L0x200198fe_f * (x**91) + 
            L0x20019900_f * (x**92) + L0x20019902_f * (x**93) + 
            L0x20019904_f * (x**94) + L0x20019906_f * (x**95) + 
            L0x20019908_f * (x**96) + L0x2001990a_f * (x**97) + 
            L0x2001990c_f * (x**98) + L0x2001990e_f * (x**99) + 
            L0x20019910_f * (x**100) + L0x20019912_f * (x**101) + 
            L0x20019914_f * (x**102) + L0x20019916_f * (x**103) + 
            L0x20019918_f * (x**104) + L0x2001991a_f * (x**105) + 
            L0x2001991c_f * (x**106) + L0x2001991e_f * (x**107) + 
            L0x20019920_f * (x**108) + L0x20019922_f * (x**109) + 
            L0x20019924_f * (x**110) + L0x20019926_f * (x**111) + 
            L0x20019928_f * (x**112) + L0x2001992a_f * (x**113) + 
            L0x2001992c_f * (x**114) + L0x2001992e_f * (x**115) + 
            L0x20019930_f * (x**116) + L0x20019932_f * (x**117) + 
            L0x20019934_f * (x**118) + L0x20019936_f * (x**119) + 
            L0x20019938_f * (x**120) + L0x2001993a_f * (x**121) + 
            L0x2001993c_f * (x**122) + L0x2001993e_f * (x**123) + 
            L0x20019940_f * (x**124) + L0x20019942_f * (x**125) + 
            L0x20019944_f * (x**126) + L0x20019946_f * (x**127) + 
            L0x20019948_f * (x**128) + L0x2001994a_f * (x**129) + 
            L0x2001994c_f * (x**130) + L0x2001994e_f * (x**131) + 
            L0x20019950_f * (x**132) + L0x20019952_f * (x**133) + 
            L0x20019954_f * (x**134) + L0x20019956_f * (x**135) + 
            L0x20019958_f * (x**136) + L0x2001995a_f * (x**137) + 
            L0x2001995c_f * (x**138) + L0x2001995e_f * (x**139) + 
            L0x20019960_f * (x**140) + L0x20019962_f * (x**141) + 
            L0x20019964_f * (x**142) + L0x20019966_f * (x**143) + 
            L0x20019968_f * (x**144) + L0x2001996a_f * (x**145) + 
            L0x2001996c_f * (x**146) + L0x2001996e_f * (x**147) + 
            L0x20019970_f * (x**148) + L0x20019972_f * (x**149) + 
            L0x20019974_f * (x**150) + L0x20019976_f * (x**151) + 
            L0x20019978_f * (x**152) + L0x2001997a_f * (x**153) + 
            L0x2001997c_f * (x**154) + L0x2001997e_f * (x**155) + 
            L0x20019980_f * (x**156) + L0x20019982_f * (x**157) + 
            L0x20019984_f * (x**158) + L0x20019986_f * (x**159) + 
            L0x20019988_f * (x**160) + L0x2001998a_f * (x**161) + 
            L0x2001998c_f * (x**162) + L0x2001998e_f * (x**163) + 
            L0x20019990_f * (x**164) + L0x20019992_f * (x**165) + 
            L0x20019994_f * (x**166) + L0x20019996_f * (x**167) + 
            L0x20019998_f * (x**168) + L0x2001999a_f * (x**169) + 
            L0x2001999c_f * (x**170) + L0x2001999e_f * (x**171) + 
            L0x200199a0_f * (x**172) + L0x200199a2_f * (x**173) + 
            L0x200199a4_f * (x**174) + L0x200199a6_f * (x**175) + 
            L0x200199a8_f * (x**176) + L0x200199aa_f * (x**177) + 
            L0x200199ac_f * (x**178) + L0x200199ae_f * (x**179) + 
            L0x200199b0_f * (x**180) + L0x200199b2_f * (x**181) + 
            L0x200199b4_f * (x**182) + L0x200199b6_f * (x**183) + 
            L0x200199b8_f * (x**184) + L0x200199ba_f * (x**185) + 
            L0x200199bc_f * (x**186) + L0x200199be_f * (x**187) + 
            L0x200199c0_f * (x**188) + L0x200199c2_f * (x**189) + 
            L0x200199c4_f * (x**190) + L0x200199c6_f * (x**191) + 
            L0x200199c8_f * (x**192) + L0x200199ca_f * (x**193) + 
            L0x200199cc_f * (x**194) + L0x200199ce_f * (x**195) + 
            L0x200199d0_f * (x**196) + L0x200199d2_f * (x**197) + 
            L0x200199d4_f * (x**198) + L0x200199d6_f * (x**199) + 
            L0x200199d8_f * (x**200) + L0x200199da_f * (x**201) + 
            L0x200199dc_f * (x**202) + L0x200199de_f * (x**203) + 
            L0x200199e0_f * (x**204) + L0x200199e2_f * (x**205) + 
            L0x200199e4_f * (x**206) + L0x200199e6_f * (x**207) + 
            L0x200199e8_f * (x**208) + L0x200199ea_f * (x**209) + 
            L0x200199ec_f * (x**210) + L0x200199ee_f * (x**211) + 
            L0x200199f0_f * (x**212) + L0x200199f2_f * (x**213) + 
            L0x200199f4_f * (x**214) + L0x200199f6_f * (x**215) + 
            L0x200199f8_f * (x**216) + L0x200199fa_f * (x**217) + 
            L0x200199fc_f * (x**218) + L0x200199fe_f * (x**219) + 
            L0x20019a00_f * (x**220) + L0x20019a02_f * (x**221) + 
            L0x20019a04_f * (x**222) + L0x20019a06_f * (x**223) + 
            L0x20019a08_f * (x**224) + L0x20019a0a_f * (x**225) + 
            L0x20019a0c_f * (x**226) + L0x20019a0e_f * (x**227) + 
            L0x20019a10_f * (x**228) + L0x20019a12_f * (x**229) + 
            L0x20019a14_f * (x**230) + L0x20019a16_f * (x**231) + 
            L0x20019a18_f * (x**232) + L0x20019a1a_f * (x**233) + 
            L0x20019a1c_f * (x**234) + L0x20019a1e_f * (x**235) + 
            L0x20019a20_f * (x**236) + L0x20019a22_f * (x**237) + 
            L0x20019a24_f * (x**238) + L0x20019a26_f * (x**239) + 
            L0x20019a28_f * (x**240) + L0x20019a2a_f * (x**241) + 
            L0x20019a2c_f * (x**242) + L0x20019a2e_f * (x**243) + 
            L0x20019a30_f * (x**244) + L0x20019a32_f * (x**245) + 
            L0x20019a34_f * (x**246) + L0x20019a36_f * (x**247) + 
            L0x20019a38_f * (x**248) + L0x20019a3a_f * (x**249) + 
            L0x20019a3c_f * (x**250) + L0x20019a3e_f * (x**251) + 
            L0x20019a40_f * (x**252) + L0x20019a42_f * (x**253) + 
            L0x20019a44_f * (x**254) + L0x20019a46_f * (x**255)
          )
          [25570049, x**4 - 25163199],
    (* inp_poly_39 *)
    eqmod (2**32) * (inp_poly_39 * inp_poly_39)
          (
            L0x20019848_f * (x**0) + L0x2001984a_f * (x**1) + 
            L0x2001984c_f * (x**2) + L0x2001984e_f * (x**3) + 
            L0x20019850_f * (x**4) + L0x20019852_f * (x**5) + 
            L0x20019854_f * (x**6) + L0x20019856_f * (x**7) + 
            L0x20019858_f * (x**8) + L0x2001985a_f * (x**9) + 
            L0x2001985c_f * (x**10) + L0x2001985e_f * (x**11) + 
            L0x20019860_f * (x**12) + L0x20019862_f * (x**13) + 
            L0x20019864_f * (x**14) + L0x20019866_f * (x**15) + 
            L0x20019868_f * (x**16) + L0x2001986a_f * (x**17) + 
            L0x2001986c_f * (x**18) + L0x2001986e_f * (x**19) + 
            L0x20019870_f * (x**20) + L0x20019872_f * (x**21) + 
            L0x20019874_f * (x**22) + L0x20019876_f * (x**23) + 
            L0x20019878_f * (x**24) + L0x2001987a_f * (x**25) + 
            L0x2001987c_f * (x**26) + L0x2001987e_f * (x**27) + 
            L0x20019880_f * (x**28) + L0x20019882_f * (x**29) + 
            L0x20019884_f * (x**30) + L0x20019886_f * (x**31) + 
            L0x20019888_f * (x**32) + L0x2001988a_f * (x**33) + 
            L0x2001988c_f * (x**34) + L0x2001988e_f * (x**35) + 
            L0x20019890_f * (x**36) + L0x20019892_f * (x**37) + 
            L0x20019894_f * (x**38) + L0x20019896_f * (x**39) + 
            L0x20019898_f * (x**40) + L0x2001989a_f * (x**41) + 
            L0x2001989c_f * (x**42) + L0x2001989e_f * (x**43) + 
            L0x200198a0_f * (x**44) + L0x200198a2_f * (x**45) + 
            L0x200198a4_f * (x**46) + L0x200198a6_f * (x**47) + 
            L0x200198a8_f * (x**48) + L0x200198aa_f * (x**49) + 
            L0x200198ac_f * (x**50) + L0x200198ae_f * (x**51) + 
            L0x200198b0_f * (x**52) + L0x200198b2_f * (x**53) + 
            L0x200198b4_f * (x**54) + L0x200198b6_f * (x**55) + 
            L0x200198b8_f * (x**56) + L0x200198ba_f * (x**57) + 
            L0x200198bc_f * (x**58) + L0x200198be_f * (x**59) + 
            L0x200198c0_f * (x**60) + L0x200198c2_f * (x**61) + 
            L0x200198c4_f * (x**62) + L0x200198c6_f * (x**63) + 
            L0x200198c8_f * (x**64) + L0x200198ca_f * (x**65) + 
            L0x200198cc_f * (x**66) + L0x200198ce_f * (x**67) + 
            L0x200198d0_f * (x**68) + L0x200198d2_f * (x**69) + 
            L0x200198d4_f * (x**70) + L0x200198d6_f * (x**71) + 
            L0x200198d8_f * (x**72) + L0x200198da_f * (x**73) + 
            L0x200198dc_f * (x**74) + L0x200198de_f * (x**75) + 
            L0x200198e0_f * (x**76) + L0x200198e2_f * (x**77) + 
            L0x200198e4_f * (x**78) + L0x200198e6_f * (x**79) + 
            L0x200198e8_f * (x**80) + L0x200198ea_f * (x**81) + 
            L0x200198ec_f * (x**82) + L0x200198ee_f * (x**83) + 
            L0x200198f0_f * (x**84) + L0x200198f2_f * (x**85) + 
            L0x200198f4_f * (x**86) + L0x200198f6_f * (x**87) + 
            L0x200198f8_f * (x**88) + L0x200198fa_f * (x**89) + 
            L0x200198fc_f * (x**90) + L0x200198fe_f * (x**91) + 
            L0x20019900_f * (x**92) + L0x20019902_f * (x**93) + 
            L0x20019904_f * (x**94) + L0x20019906_f * (x**95) + 
            L0x20019908_f * (x**96) + L0x2001990a_f * (x**97) + 
            L0x2001990c_f * (x**98) + L0x2001990e_f * (x**99) + 
            L0x20019910_f * (x**100) + L0x20019912_f * (x**101) + 
            L0x20019914_f * (x**102) + L0x20019916_f * (x**103) + 
            L0x20019918_f * (x**104) + L0x2001991a_f * (x**105) + 
            L0x2001991c_f * (x**106) + L0x2001991e_f * (x**107) + 
            L0x20019920_f * (x**108) + L0x20019922_f * (x**109) + 
            L0x20019924_f * (x**110) + L0x20019926_f * (x**111) + 
            L0x20019928_f * (x**112) + L0x2001992a_f * (x**113) + 
            L0x2001992c_f * (x**114) + L0x2001992e_f * (x**115) + 
            L0x20019930_f * (x**116) + L0x20019932_f * (x**117) + 
            L0x20019934_f * (x**118) + L0x20019936_f * (x**119) + 
            L0x20019938_f * (x**120) + L0x2001993a_f * (x**121) + 
            L0x2001993c_f * (x**122) + L0x2001993e_f * (x**123) + 
            L0x20019940_f * (x**124) + L0x20019942_f * (x**125) + 
            L0x20019944_f * (x**126) + L0x20019946_f * (x**127) + 
            L0x20019948_f * (x**128) + L0x2001994a_f * (x**129) + 
            L0x2001994c_f * (x**130) + L0x2001994e_f * (x**131) + 
            L0x20019950_f * (x**132) + L0x20019952_f * (x**133) + 
            L0x20019954_f * (x**134) + L0x20019956_f * (x**135) + 
            L0x20019958_f * (x**136) + L0x2001995a_f * (x**137) + 
            L0x2001995c_f * (x**138) + L0x2001995e_f * (x**139) + 
            L0x20019960_f * (x**140) + L0x20019962_f * (x**141) + 
            L0x20019964_f * (x**142) + L0x20019966_f * (x**143) + 
            L0x20019968_f * (x**144) + L0x2001996a_f * (x**145) + 
            L0x2001996c_f * (x**146) + L0x2001996e_f * (x**147) + 
            L0x20019970_f * (x**148) + L0x20019972_f * (x**149) + 
            L0x20019974_f * (x**150) + L0x20019976_f * (x**151) + 
            L0x20019978_f * (x**152) + L0x2001997a_f * (x**153) + 
            L0x2001997c_f * (x**154) + L0x2001997e_f * (x**155) + 
            L0x20019980_f * (x**156) + L0x20019982_f * (x**157) + 
            L0x20019984_f * (x**158) + L0x20019986_f * (x**159) + 
            L0x20019988_f * (x**160) + L0x2001998a_f * (x**161) + 
            L0x2001998c_f * (x**162) + L0x2001998e_f * (x**163) + 
            L0x20019990_f * (x**164) + L0x20019992_f * (x**165) + 
            L0x20019994_f * (x**166) + L0x20019996_f * (x**167) + 
            L0x20019998_f * (x**168) + L0x2001999a_f * (x**169) + 
            L0x2001999c_f * (x**170) + L0x2001999e_f * (x**171) + 
            L0x200199a0_f * (x**172) + L0x200199a2_f * (x**173) + 
            L0x200199a4_f * (x**174) + L0x200199a6_f * (x**175) + 
            L0x200199a8_f * (x**176) + L0x200199aa_f * (x**177) + 
            L0x200199ac_f * (x**178) + L0x200199ae_f * (x**179) + 
            L0x200199b0_f * (x**180) + L0x200199b2_f * (x**181) + 
            L0x200199b4_f * (x**182) + L0x200199b6_f * (x**183) + 
            L0x200199b8_f * (x**184) + L0x200199ba_f * (x**185) + 
            L0x200199bc_f * (x**186) + L0x200199be_f * (x**187) + 
            L0x200199c0_f * (x**188) + L0x200199c2_f * (x**189) + 
            L0x200199c4_f * (x**190) + L0x200199c6_f * (x**191) + 
            L0x200199c8_f * (x**192) + L0x200199ca_f * (x**193) + 
            L0x200199cc_f * (x**194) + L0x200199ce_f * (x**195) + 
            L0x200199d0_f * (x**196) + L0x200199d2_f * (x**197) + 
            L0x200199d4_f * (x**198) + L0x200199d6_f * (x**199) + 
            L0x200199d8_f * (x**200) + L0x200199da_f * (x**201) + 
            L0x200199dc_f * (x**202) + L0x200199de_f * (x**203) + 
            L0x200199e0_f * (x**204) + L0x200199e2_f * (x**205) + 
            L0x200199e4_f * (x**206) + L0x200199e6_f * (x**207) + 
            L0x200199e8_f * (x**208) + L0x200199ea_f * (x**209) + 
            L0x200199ec_f * (x**210) + L0x200199ee_f * (x**211) + 
            L0x200199f0_f * (x**212) + L0x200199f2_f * (x**213) + 
            L0x200199f4_f * (x**214) + L0x200199f6_f * (x**215) + 
            L0x200199f8_f * (x**216) + L0x200199fa_f * (x**217) + 
            L0x200199fc_f * (x**218) + L0x200199fe_f * (x**219) + 
            L0x20019a00_f * (x**220) + L0x20019a02_f * (x**221) + 
            L0x20019a04_f * (x**222) + L0x20019a06_f * (x**223) + 
            L0x20019a08_f * (x**224) + L0x20019a0a_f * (x**225) + 
            L0x20019a0c_f * (x**226) + L0x20019a0e_f * (x**227) + 
            L0x20019a10_f * (x**228) + L0x20019a12_f * (x**229) + 
            L0x20019a14_f * (x**230) + L0x20019a16_f * (x**231) + 
            L0x20019a18_f * (x**232) + L0x20019a1a_f * (x**233) + 
            L0x20019a1c_f * (x**234) + L0x20019a1e_f * (x**235) + 
            L0x20019a20_f * (x**236) + L0x20019a22_f * (x**237) + 
            L0x20019a24_f * (x**238) + L0x20019a26_f * (x**239) + 
            L0x20019a28_f * (x**240) + L0x20019a2a_f * (x**241) + 
            L0x20019a2c_f * (x**242) + L0x20019a2e_f * (x**243) + 
            L0x20019a30_f * (x**244) + L0x20019a32_f * (x**245) + 
            L0x20019a34_f * (x**246) + L0x20019a36_f * (x**247) + 
            L0x20019a38_f * (x**248) + L0x20019a3a_f * (x**249) + 
            L0x20019a3c_f * (x**250) + L0x20019a3e_f * (x**251) + 
            L0x20019a40_f * (x**252) + L0x20019a42_f * (x**253) + 
            L0x20019a44_f * (x**254) + L0x20019a46_f * (x**255)
          )
          [25570049, x**4 - 406850]
  ] prove with [cuts [64]]
  &&
  true
;

cut (* 81 *)
  true && true;

(* slice 5 *)
assume (* instantiating y_0's *)
  and [
    y_0_40 = 1, y_0_41 = 1, y_0_42 = 1, y_0_43 = 1, 
    y_0_44 = 1, y_0_45 = 1, y_0_46 = 1, y_0_47 = 1
  ] && true;
cut (* 82 *)
  and [
    (* inp_poly_40 *)
    eqmod (2**32) * (inp_poly_40 * inp_poly_40)
          (
            L0x20019848_f * (x**0) + L0x2001984a_f * (x**1) + 
            L0x2001984c_f * (x**2) + L0x2001984e_f * (x**3) + 
            L0x20019850_f * (x**4) + L0x20019852_f * (x**5) + 
            L0x20019854_f * (x**6) + L0x20019856_f * (x**7) + 
            L0x20019858_f * (x**8) + L0x2001985a_f * (x**9) + 
            L0x2001985c_f * (x**10) + L0x2001985e_f * (x**11) + 
            L0x20019860_f * (x**12) + L0x20019862_f * (x**13) + 
            L0x20019864_f * (x**14) + L0x20019866_f * (x**15) + 
            L0x20019868_f * (x**16) + L0x2001986a_f * (x**17) + 
            L0x2001986c_f * (x**18) + L0x2001986e_f * (x**19) + 
            L0x20019870_f * (x**20) + L0x20019872_f * (x**21) + 
            L0x20019874_f * (x**22) + L0x20019876_f * (x**23) + 
            L0x20019878_f * (x**24) + L0x2001987a_f * (x**25) + 
            L0x2001987c_f * (x**26) + L0x2001987e_f * (x**27) + 
            L0x20019880_f * (x**28) + L0x20019882_f * (x**29) + 
            L0x20019884_f * (x**30) + L0x20019886_f * (x**31) + 
            L0x20019888_f * (x**32) + L0x2001988a_f * (x**33) + 
            L0x2001988c_f * (x**34) + L0x2001988e_f * (x**35) + 
            L0x20019890_f * (x**36) + L0x20019892_f * (x**37) + 
            L0x20019894_f * (x**38) + L0x20019896_f * (x**39) + 
            L0x20019898_f * (x**40) + L0x2001989a_f * (x**41) + 
            L0x2001989c_f * (x**42) + L0x2001989e_f * (x**43) + 
            L0x200198a0_f * (x**44) + L0x200198a2_f * (x**45) + 
            L0x200198a4_f * (x**46) + L0x200198a6_f * (x**47) + 
            L0x200198a8_f * (x**48) + L0x200198aa_f * (x**49) + 
            L0x200198ac_f * (x**50) + L0x200198ae_f * (x**51) + 
            L0x200198b0_f * (x**52) + L0x200198b2_f * (x**53) + 
            L0x200198b4_f * (x**54) + L0x200198b6_f * (x**55) + 
            L0x200198b8_f * (x**56) + L0x200198ba_f * (x**57) + 
            L0x200198bc_f * (x**58) + L0x200198be_f * (x**59) + 
            L0x200198c0_f * (x**60) + L0x200198c2_f * (x**61) + 
            L0x200198c4_f * (x**62) + L0x200198c6_f * (x**63) + 
            L0x200198c8_f * (x**64) + L0x200198ca_f * (x**65) + 
            L0x200198cc_f * (x**66) + L0x200198ce_f * (x**67) + 
            L0x200198d0_f * (x**68) + L0x200198d2_f * (x**69) + 
            L0x200198d4_f * (x**70) + L0x200198d6_f * (x**71) + 
            L0x200198d8_f * (x**72) + L0x200198da_f * (x**73) + 
            L0x200198dc_f * (x**74) + L0x200198de_f * (x**75) + 
            L0x200198e0_f * (x**76) + L0x200198e2_f * (x**77) + 
            L0x200198e4_f * (x**78) + L0x200198e6_f * (x**79) + 
            L0x200198e8_f * (x**80) + L0x200198ea_f * (x**81) + 
            L0x200198ec_f * (x**82) + L0x200198ee_f * (x**83) + 
            L0x200198f0_f * (x**84) + L0x200198f2_f * (x**85) + 
            L0x200198f4_f * (x**86) + L0x200198f6_f * (x**87) + 
            L0x200198f8_f * (x**88) + L0x200198fa_f * (x**89) + 
            L0x200198fc_f * (x**90) + L0x200198fe_f * (x**91) + 
            L0x20019900_f * (x**92) + L0x20019902_f * (x**93) + 
            L0x20019904_f * (x**94) + L0x20019906_f * (x**95) + 
            L0x20019908_f * (x**96) + L0x2001990a_f * (x**97) + 
            L0x2001990c_f * (x**98) + L0x2001990e_f * (x**99) + 
            L0x20019910_f * (x**100) + L0x20019912_f * (x**101) + 
            L0x20019914_f * (x**102) + L0x20019916_f * (x**103) + 
            L0x20019918_f * (x**104) + L0x2001991a_f * (x**105) + 
            L0x2001991c_f * (x**106) + L0x2001991e_f * (x**107) + 
            L0x20019920_f * (x**108) + L0x20019922_f * (x**109) + 
            L0x20019924_f * (x**110) + L0x20019926_f * (x**111) + 
            L0x20019928_f * (x**112) + L0x2001992a_f * (x**113) + 
            L0x2001992c_f * (x**114) + L0x2001992e_f * (x**115) + 
            L0x20019930_f * (x**116) + L0x20019932_f * (x**117) + 
            L0x20019934_f * (x**118) + L0x20019936_f * (x**119) + 
            L0x20019938_f * (x**120) + L0x2001993a_f * (x**121) + 
            L0x2001993c_f * (x**122) + L0x2001993e_f * (x**123) + 
            L0x20019940_f * (x**124) + L0x20019942_f * (x**125) + 
            L0x20019944_f * (x**126) + L0x20019946_f * (x**127) + 
            L0x20019948_f * (x**128) + L0x2001994a_f * (x**129) + 
            L0x2001994c_f * (x**130) + L0x2001994e_f * (x**131) + 
            L0x20019950_f * (x**132) + L0x20019952_f * (x**133) + 
            L0x20019954_f * (x**134) + L0x20019956_f * (x**135) + 
            L0x20019958_f * (x**136) + L0x2001995a_f * (x**137) + 
            L0x2001995c_f * (x**138) + L0x2001995e_f * (x**139) + 
            L0x20019960_f * (x**140) + L0x20019962_f * (x**141) + 
            L0x20019964_f * (x**142) + L0x20019966_f * (x**143) + 
            L0x20019968_f * (x**144) + L0x2001996a_f * (x**145) + 
            L0x2001996c_f * (x**146) + L0x2001996e_f * (x**147) + 
            L0x20019970_f * (x**148) + L0x20019972_f * (x**149) + 
            L0x20019974_f * (x**150) + L0x20019976_f * (x**151) + 
            L0x20019978_f * (x**152) + L0x2001997a_f * (x**153) + 
            L0x2001997c_f * (x**154) + L0x2001997e_f * (x**155) + 
            L0x20019980_f * (x**156) + L0x20019982_f * (x**157) + 
            L0x20019984_f * (x**158) + L0x20019986_f * (x**159) + 
            L0x20019988_f * (x**160) + L0x2001998a_f * (x**161) + 
            L0x2001998c_f * (x**162) + L0x2001998e_f * (x**163) + 
            L0x20019990_f * (x**164) + L0x20019992_f * (x**165) + 
            L0x20019994_f * (x**166) + L0x20019996_f * (x**167) + 
            L0x20019998_f * (x**168) + L0x2001999a_f * (x**169) + 
            L0x2001999c_f * (x**170) + L0x2001999e_f * (x**171) + 
            L0x200199a0_f * (x**172) + L0x200199a2_f * (x**173) + 
            L0x200199a4_f * (x**174) + L0x200199a6_f * (x**175) + 
            L0x200199a8_f * (x**176) + L0x200199aa_f * (x**177) + 
            L0x200199ac_f * (x**178) + L0x200199ae_f * (x**179) + 
            L0x200199b0_f * (x**180) + L0x200199b2_f * (x**181) + 
            L0x200199b4_f * (x**182) + L0x200199b6_f * (x**183) + 
            L0x200199b8_f * (x**184) + L0x200199ba_f * (x**185) + 
            L0x200199bc_f * (x**186) + L0x200199be_f * (x**187) + 
            L0x200199c0_f * (x**188) + L0x200199c2_f * (x**189) + 
            L0x200199c4_f * (x**190) + L0x200199c6_f * (x**191) + 
            L0x200199c8_f * (x**192) + L0x200199ca_f * (x**193) + 
            L0x200199cc_f * (x**194) + L0x200199ce_f * (x**195) + 
            L0x200199d0_f * (x**196) + L0x200199d2_f * (x**197) + 
            L0x200199d4_f * (x**198) + L0x200199d6_f * (x**199) + 
            L0x200199d8_f * (x**200) + L0x200199da_f * (x**201) + 
            L0x200199dc_f * (x**202) + L0x200199de_f * (x**203) + 
            L0x200199e0_f * (x**204) + L0x200199e2_f * (x**205) + 
            L0x200199e4_f * (x**206) + L0x200199e6_f * (x**207) + 
            L0x200199e8_f * (x**208) + L0x200199ea_f * (x**209) + 
            L0x200199ec_f * (x**210) + L0x200199ee_f * (x**211) + 
            L0x200199f0_f * (x**212) + L0x200199f2_f * (x**213) + 
            L0x200199f4_f * (x**214) + L0x200199f6_f * (x**215) + 
            L0x200199f8_f * (x**216) + L0x200199fa_f * (x**217) + 
            L0x200199fc_f * (x**218) + L0x200199fe_f * (x**219) + 
            L0x20019a00_f * (x**220) + L0x20019a02_f * (x**221) + 
            L0x20019a04_f * (x**222) + L0x20019a06_f * (x**223) + 
            L0x20019a08_f * (x**224) + L0x20019a0a_f * (x**225) + 
            L0x20019a0c_f * (x**226) + L0x20019a0e_f * (x**227) + 
            L0x20019a10_f * (x**228) + L0x20019a12_f * (x**229) + 
            L0x20019a14_f * (x**230) + L0x20019a16_f * (x**231) + 
            L0x20019a18_f * (x**232) + L0x20019a1a_f * (x**233) + 
            L0x20019a1c_f * (x**234) + L0x20019a1e_f * (x**235) + 
            L0x20019a20_f * (x**236) + L0x20019a22_f * (x**237) + 
            L0x20019a24_f * (x**238) + L0x20019a26_f * (x**239) + 
            L0x20019a28_f * (x**240) + L0x20019a2a_f * (x**241) + 
            L0x20019a2c_f * (x**242) + L0x20019a2e_f * (x**243) + 
            L0x20019a30_f * (x**244) + L0x20019a32_f * (x**245) + 
            L0x20019a34_f * (x**246) + L0x20019a36_f * (x**247) + 
            L0x20019a38_f * (x**248) + L0x20019a3a_f * (x**249) + 
            L0x20019a3c_f * (x**250) + L0x20019a3e_f * (x**251) + 
            L0x20019a40_f * (x**252) + L0x20019a42_f * (x**253) + 
            L0x20019a44_f * (x**254) + L0x20019a46_f * (x**255)
          )
          [25570049, x**4 - 19921963],
    (* inp_poly_41 *)
    eqmod (2**32) * (inp_poly_41 * inp_poly_41)
          (
            L0x20019848_f * (x**0) + L0x2001984a_f * (x**1) + 
            L0x2001984c_f * (x**2) + L0x2001984e_f * (x**3) + 
            L0x20019850_f * (x**4) + L0x20019852_f * (x**5) + 
            L0x20019854_f * (x**6) + L0x20019856_f * (x**7) + 
            L0x20019858_f * (x**8) + L0x2001985a_f * (x**9) + 
            L0x2001985c_f * (x**10) + L0x2001985e_f * (x**11) + 
            L0x20019860_f * (x**12) + L0x20019862_f * (x**13) + 
            L0x20019864_f * (x**14) + L0x20019866_f * (x**15) + 
            L0x20019868_f * (x**16) + L0x2001986a_f * (x**17) + 
            L0x2001986c_f * (x**18) + L0x2001986e_f * (x**19) + 
            L0x20019870_f * (x**20) + L0x20019872_f * (x**21) + 
            L0x20019874_f * (x**22) + L0x20019876_f * (x**23) + 
            L0x20019878_f * (x**24) + L0x2001987a_f * (x**25) + 
            L0x2001987c_f * (x**26) + L0x2001987e_f * (x**27) + 
            L0x20019880_f * (x**28) + L0x20019882_f * (x**29) + 
            L0x20019884_f * (x**30) + L0x20019886_f * (x**31) + 
            L0x20019888_f * (x**32) + L0x2001988a_f * (x**33) + 
            L0x2001988c_f * (x**34) + L0x2001988e_f * (x**35) + 
            L0x20019890_f * (x**36) + L0x20019892_f * (x**37) + 
            L0x20019894_f * (x**38) + L0x20019896_f * (x**39) + 
            L0x20019898_f * (x**40) + L0x2001989a_f * (x**41) + 
            L0x2001989c_f * (x**42) + L0x2001989e_f * (x**43) + 
            L0x200198a0_f * (x**44) + L0x200198a2_f * (x**45) + 
            L0x200198a4_f * (x**46) + L0x200198a6_f * (x**47) + 
            L0x200198a8_f * (x**48) + L0x200198aa_f * (x**49) + 
            L0x200198ac_f * (x**50) + L0x200198ae_f * (x**51) + 
            L0x200198b0_f * (x**52) + L0x200198b2_f * (x**53) + 
            L0x200198b4_f * (x**54) + L0x200198b6_f * (x**55) + 
            L0x200198b8_f * (x**56) + L0x200198ba_f * (x**57) + 
            L0x200198bc_f * (x**58) + L0x200198be_f * (x**59) + 
            L0x200198c0_f * (x**60) + L0x200198c2_f * (x**61) + 
            L0x200198c4_f * (x**62) + L0x200198c6_f * (x**63) + 
            L0x200198c8_f * (x**64) + L0x200198ca_f * (x**65) + 
            L0x200198cc_f * (x**66) + L0x200198ce_f * (x**67) + 
            L0x200198d0_f * (x**68) + L0x200198d2_f * (x**69) + 
            L0x200198d4_f * (x**70) + L0x200198d6_f * (x**71) + 
            L0x200198d8_f * (x**72) + L0x200198da_f * (x**73) + 
            L0x200198dc_f * (x**74) + L0x200198de_f * (x**75) + 
            L0x200198e0_f * (x**76) + L0x200198e2_f * (x**77) + 
            L0x200198e4_f * (x**78) + L0x200198e6_f * (x**79) + 
            L0x200198e8_f * (x**80) + L0x200198ea_f * (x**81) + 
            L0x200198ec_f * (x**82) + L0x200198ee_f * (x**83) + 
            L0x200198f0_f * (x**84) + L0x200198f2_f * (x**85) + 
            L0x200198f4_f * (x**86) + L0x200198f6_f * (x**87) + 
            L0x200198f8_f * (x**88) + L0x200198fa_f * (x**89) + 
            L0x200198fc_f * (x**90) + L0x200198fe_f * (x**91) + 
            L0x20019900_f * (x**92) + L0x20019902_f * (x**93) + 
            L0x20019904_f * (x**94) + L0x20019906_f * (x**95) + 
            L0x20019908_f * (x**96) + L0x2001990a_f * (x**97) + 
            L0x2001990c_f * (x**98) + L0x2001990e_f * (x**99) + 
            L0x20019910_f * (x**100) + L0x20019912_f * (x**101) + 
            L0x20019914_f * (x**102) + L0x20019916_f * (x**103) + 
            L0x20019918_f * (x**104) + L0x2001991a_f * (x**105) + 
            L0x2001991c_f * (x**106) + L0x2001991e_f * (x**107) + 
            L0x20019920_f * (x**108) + L0x20019922_f * (x**109) + 
            L0x20019924_f * (x**110) + L0x20019926_f * (x**111) + 
            L0x20019928_f * (x**112) + L0x2001992a_f * (x**113) + 
            L0x2001992c_f * (x**114) + L0x2001992e_f * (x**115) + 
            L0x20019930_f * (x**116) + L0x20019932_f * (x**117) + 
            L0x20019934_f * (x**118) + L0x20019936_f * (x**119) + 
            L0x20019938_f * (x**120) + L0x2001993a_f * (x**121) + 
            L0x2001993c_f * (x**122) + L0x2001993e_f * (x**123) + 
            L0x20019940_f * (x**124) + L0x20019942_f * (x**125) + 
            L0x20019944_f * (x**126) + L0x20019946_f * (x**127) + 
            L0x20019948_f * (x**128) + L0x2001994a_f * (x**129) + 
            L0x2001994c_f * (x**130) + L0x2001994e_f * (x**131) + 
            L0x20019950_f * (x**132) + L0x20019952_f * (x**133) + 
            L0x20019954_f * (x**134) + L0x20019956_f * (x**135) + 
            L0x20019958_f * (x**136) + L0x2001995a_f * (x**137) + 
            L0x2001995c_f * (x**138) + L0x2001995e_f * (x**139) + 
            L0x20019960_f * (x**140) + L0x20019962_f * (x**141) + 
            L0x20019964_f * (x**142) + L0x20019966_f * (x**143) + 
            L0x20019968_f * (x**144) + L0x2001996a_f * (x**145) + 
            L0x2001996c_f * (x**146) + L0x2001996e_f * (x**147) + 
            L0x20019970_f * (x**148) + L0x20019972_f * (x**149) + 
            L0x20019974_f * (x**150) + L0x20019976_f * (x**151) + 
            L0x20019978_f * (x**152) + L0x2001997a_f * (x**153) + 
            L0x2001997c_f * (x**154) + L0x2001997e_f * (x**155) + 
            L0x20019980_f * (x**156) + L0x20019982_f * (x**157) + 
            L0x20019984_f * (x**158) + L0x20019986_f * (x**159) + 
            L0x20019988_f * (x**160) + L0x2001998a_f * (x**161) + 
            L0x2001998c_f * (x**162) + L0x2001998e_f * (x**163) + 
            L0x20019990_f * (x**164) + L0x20019992_f * (x**165) + 
            L0x20019994_f * (x**166) + L0x20019996_f * (x**167) + 
            L0x20019998_f * (x**168) + L0x2001999a_f * (x**169) + 
            L0x2001999c_f * (x**170) + L0x2001999e_f * (x**171) + 
            L0x200199a0_f * (x**172) + L0x200199a2_f * (x**173) + 
            L0x200199a4_f * (x**174) + L0x200199a6_f * (x**175) + 
            L0x200199a8_f * (x**176) + L0x200199aa_f * (x**177) + 
            L0x200199ac_f * (x**178) + L0x200199ae_f * (x**179) + 
            L0x200199b0_f * (x**180) + L0x200199b2_f * (x**181) + 
            L0x200199b4_f * (x**182) + L0x200199b6_f * (x**183) + 
            L0x200199b8_f * (x**184) + L0x200199ba_f * (x**185) + 
            L0x200199bc_f * (x**186) + L0x200199be_f * (x**187) + 
            L0x200199c0_f * (x**188) + L0x200199c2_f * (x**189) + 
            L0x200199c4_f * (x**190) + L0x200199c6_f * (x**191) + 
            L0x200199c8_f * (x**192) + L0x200199ca_f * (x**193) + 
            L0x200199cc_f * (x**194) + L0x200199ce_f * (x**195) + 
            L0x200199d0_f * (x**196) + L0x200199d2_f * (x**197) + 
            L0x200199d4_f * (x**198) + L0x200199d6_f * (x**199) + 
            L0x200199d8_f * (x**200) + L0x200199da_f * (x**201) + 
            L0x200199dc_f * (x**202) + L0x200199de_f * (x**203) + 
            L0x200199e0_f * (x**204) + L0x200199e2_f * (x**205) + 
            L0x200199e4_f * (x**206) + L0x200199e6_f * (x**207) + 
            L0x200199e8_f * (x**208) + L0x200199ea_f * (x**209) + 
            L0x200199ec_f * (x**210) + L0x200199ee_f * (x**211) + 
            L0x200199f0_f * (x**212) + L0x200199f2_f * (x**213) + 
            L0x200199f4_f * (x**214) + L0x200199f6_f * (x**215) + 
            L0x200199f8_f * (x**216) + L0x200199fa_f * (x**217) + 
            L0x200199fc_f * (x**218) + L0x200199fe_f * (x**219) + 
            L0x20019a00_f * (x**220) + L0x20019a02_f * (x**221) + 
            L0x20019a04_f * (x**222) + L0x20019a06_f * (x**223) + 
            L0x20019a08_f * (x**224) + L0x20019a0a_f * (x**225) + 
            L0x20019a0c_f * (x**226) + L0x20019a0e_f * (x**227) + 
            L0x20019a10_f * (x**228) + L0x20019a12_f * (x**229) + 
            L0x20019a14_f * (x**230) + L0x20019a16_f * (x**231) + 
            L0x20019a18_f * (x**232) + L0x20019a1a_f * (x**233) + 
            L0x20019a1c_f * (x**234) + L0x20019a1e_f * (x**235) + 
            L0x20019a20_f * (x**236) + L0x20019a22_f * (x**237) + 
            L0x20019a24_f * (x**238) + L0x20019a26_f * (x**239) + 
            L0x20019a28_f * (x**240) + L0x20019a2a_f * (x**241) + 
            L0x20019a2c_f * (x**242) + L0x20019a2e_f * (x**243) + 
            L0x20019a30_f * (x**244) + L0x20019a32_f * (x**245) + 
            L0x20019a34_f * (x**246) + L0x20019a36_f * (x**247) + 
            L0x20019a38_f * (x**248) + L0x20019a3a_f * (x**249) + 
            L0x20019a3c_f * (x**250) + L0x20019a3e_f * (x**251) + 
            L0x20019a40_f * (x**252) + L0x20019a42_f * (x**253) + 
            L0x20019a44_f * (x**254) + L0x20019a46_f * (x**255)
          )
          [25570049, x**4 - 5648086],
    (* inp_poly_42 *)
    eqmod (2**32) * (inp_poly_42 * inp_poly_42)
          (
            L0x20019848_f * (x**0) + L0x2001984a_f * (x**1) + 
            L0x2001984c_f * (x**2) + L0x2001984e_f * (x**3) + 
            L0x20019850_f * (x**4) + L0x20019852_f * (x**5) + 
            L0x20019854_f * (x**6) + L0x20019856_f * (x**7) + 
            L0x20019858_f * (x**8) + L0x2001985a_f * (x**9) + 
            L0x2001985c_f * (x**10) + L0x2001985e_f * (x**11) + 
            L0x20019860_f * (x**12) + L0x20019862_f * (x**13) + 
            L0x20019864_f * (x**14) + L0x20019866_f * (x**15) + 
            L0x20019868_f * (x**16) + L0x2001986a_f * (x**17) + 
            L0x2001986c_f * (x**18) + L0x2001986e_f * (x**19) + 
            L0x20019870_f * (x**20) + L0x20019872_f * (x**21) + 
            L0x20019874_f * (x**22) + L0x20019876_f * (x**23) + 
            L0x20019878_f * (x**24) + L0x2001987a_f * (x**25) + 
            L0x2001987c_f * (x**26) + L0x2001987e_f * (x**27) + 
            L0x20019880_f * (x**28) + L0x20019882_f * (x**29) + 
            L0x20019884_f * (x**30) + L0x20019886_f * (x**31) + 
            L0x20019888_f * (x**32) + L0x2001988a_f * (x**33) + 
            L0x2001988c_f * (x**34) + L0x2001988e_f * (x**35) + 
            L0x20019890_f * (x**36) + L0x20019892_f * (x**37) + 
            L0x20019894_f * (x**38) + L0x20019896_f * (x**39) + 
            L0x20019898_f * (x**40) + L0x2001989a_f * (x**41) + 
            L0x2001989c_f * (x**42) + L0x2001989e_f * (x**43) + 
            L0x200198a0_f * (x**44) + L0x200198a2_f * (x**45) + 
            L0x200198a4_f * (x**46) + L0x200198a6_f * (x**47) + 
            L0x200198a8_f * (x**48) + L0x200198aa_f * (x**49) + 
            L0x200198ac_f * (x**50) + L0x200198ae_f * (x**51) + 
            L0x200198b0_f * (x**52) + L0x200198b2_f * (x**53) + 
            L0x200198b4_f * (x**54) + L0x200198b6_f * (x**55) + 
            L0x200198b8_f * (x**56) + L0x200198ba_f * (x**57) + 
            L0x200198bc_f * (x**58) + L0x200198be_f * (x**59) + 
            L0x200198c0_f * (x**60) + L0x200198c2_f * (x**61) + 
            L0x200198c4_f * (x**62) + L0x200198c6_f * (x**63) + 
            L0x200198c8_f * (x**64) + L0x200198ca_f * (x**65) + 
            L0x200198cc_f * (x**66) + L0x200198ce_f * (x**67) + 
            L0x200198d0_f * (x**68) + L0x200198d2_f * (x**69) + 
            L0x200198d4_f * (x**70) + L0x200198d6_f * (x**71) + 
            L0x200198d8_f * (x**72) + L0x200198da_f * (x**73) + 
            L0x200198dc_f * (x**74) + L0x200198de_f * (x**75) + 
            L0x200198e0_f * (x**76) + L0x200198e2_f * (x**77) + 
            L0x200198e4_f * (x**78) + L0x200198e6_f * (x**79) + 
            L0x200198e8_f * (x**80) + L0x200198ea_f * (x**81) + 
            L0x200198ec_f * (x**82) + L0x200198ee_f * (x**83) + 
            L0x200198f0_f * (x**84) + L0x200198f2_f * (x**85) + 
            L0x200198f4_f * (x**86) + L0x200198f6_f * (x**87) + 
            L0x200198f8_f * (x**88) + L0x200198fa_f * (x**89) + 
            L0x200198fc_f * (x**90) + L0x200198fe_f * (x**91) + 
            L0x20019900_f * (x**92) + L0x20019902_f * (x**93) + 
            L0x20019904_f * (x**94) + L0x20019906_f * (x**95) + 
            L0x20019908_f * (x**96) + L0x2001990a_f * (x**97) + 
            L0x2001990c_f * (x**98) + L0x2001990e_f * (x**99) + 
            L0x20019910_f * (x**100) + L0x20019912_f * (x**101) + 
            L0x20019914_f * (x**102) + L0x20019916_f * (x**103) + 
            L0x20019918_f * (x**104) + L0x2001991a_f * (x**105) + 
            L0x2001991c_f * (x**106) + L0x2001991e_f * (x**107) + 
            L0x20019920_f * (x**108) + L0x20019922_f * (x**109) + 
            L0x20019924_f * (x**110) + L0x20019926_f * (x**111) + 
            L0x20019928_f * (x**112) + L0x2001992a_f * (x**113) + 
            L0x2001992c_f * (x**114) + L0x2001992e_f * (x**115) + 
            L0x20019930_f * (x**116) + L0x20019932_f * (x**117) + 
            L0x20019934_f * (x**118) + L0x20019936_f * (x**119) + 
            L0x20019938_f * (x**120) + L0x2001993a_f * (x**121) + 
            L0x2001993c_f * (x**122) + L0x2001993e_f * (x**123) + 
            L0x20019940_f * (x**124) + L0x20019942_f * (x**125) + 
            L0x20019944_f * (x**126) + L0x20019946_f * (x**127) + 
            L0x20019948_f * (x**128) + L0x2001994a_f * (x**129) + 
            L0x2001994c_f * (x**130) + L0x2001994e_f * (x**131) + 
            L0x20019950_f * (x**132) + L0x20019952_f * (x**133) + 
            L0x20019954_f * (x**134) + L0x20019956_f * (x**135) + 
            L0x20019958_f * (x**136) + L0x2001995a_f * (x**137) + 
            L0x2001995c_f * (x**138) + L0x2001995e_f * (x**139) + 
            L0x20019960_f * (x**140) + L0x20019962_f * (x**141) + 
            L0x20019964_f * (x**142) + L0x20019966_f * (x**143) + 
            L0x20019968_f * (x**144) + L0x2001996a_f * (x**145) + 
            L0x2001996c_f * (x**146) + L0x2001996e_f * (x**147) + 
            L0x20019970_f * (x**148) + L0x20019972_f * (x**149) + 
            L0x20019974_f * (x**150) + L0x20019976_f * (x**151) + 
            L0x20019978_f * (x**152) + L0x2001997a_f * (x**153) + 
            L0x2001997c_f * (x**154) + L0x2001997e_f * (x**155) + 
            L0x20019980_f * (x**156) + L0x20019982_f * (x**157) + 
            L0x20019984_f * (x**158) + L0x20019986_f * (x**159) + 
            L0x20019988_f * (x**160) + L0x2001998a_f * (x**161) + 
            L0x2001998c_f * (x**162) + L0x2001998e_f * (x**163) + 
            L0x20019990_f * (x**164) + L0x20019992_f * (x**165) + 
            L0x20019994_f * (x**166) + L0x20019996_f * (x**167) + 
            L0x20019998_f * (x**168) + L0x2001999a_f * (x**169) + 
            L0x2001999c_f * (x**170) + L0x2001999e_f * (x**171) + 
            L0x200199a0_f * (x**172) + L0x200199a2_f * (x**173) + 
            L0x200199a4_f * (x**174) + L0x200199a6_f * (x**175) + 
            L0x200199a8_f * (x**176) + L0x200199aa_f * (x**177) + 
            L0x200199ac_f * (x**178) + L0x200199ae_f * (x**179) + 
            L0x200199b0_f * (x**180) + L0x200199b2_f * (x**181) + 
            L0x200199b4_f * (x**182) + L0x200199b6_f * (x**183) + 
            L0x200199b8_f * (x**184) + L0x200199ba_f * (x**185) + 
            L0x200199bc_f * (x**186) + L0x200199be_f * (x**187) + 
            L0x200199c0_f * (x**188) + L0x200199c2_f * (x**189) + 
            L0x200199c4_f * (x**190) + L0x200199c6_f * (x**191) + 
            L0x200199c8_f * (x**192) + L0x200199ca_f * (x**193) + 
            L0x200199cc_f * (x**194) + L0x200199ce_f * (x**195) + 
            L0x200199d0_f * (x**196) + L0x200199d2_f * (x**197) + 
            L0x200199d4_f * (x**198) + L0x200199d6_f * (x**199) + 
            L0x200199d8_f * (x**200) + L0x200199da_f * (x**201) + 
            L0x200199dc_f * (x**202) + L0x200199de_f * (x**203) + 
            L0x200199e0_f * (x**204) + L0x200199e2_f * (x**205) + 
            L0x200199e4_f * (x**206) + L0x200199e6_f * (x**207) + 
            L0x200199e8_f * (x**208) + L0x200199ea_f * (x**209) + 
            L0x200199ec_f * (x**210) + L0x200199ee_f * (x**211) + 
            L0x200199f0_f * (x**212) + L0x200199f2_f * (x**213) + 
            L0x200199f4_f * (x**214) + L0x200199f6_f * (x**215) + 
            L0x200199f8_f * (x**216) + L0x200199fa_f * (x**217) + 
            L0x200199fc_f * (x**218) + L0x200199fe_f * (x**219) + 
            L0x20019a00_f * (x**220) + L0x20019a02_f * (x**221) + 
            L0x20019a04_f * (x**222) + L0x20019a06_f * (x**223) + 
            L0x20019a08_f * (x**224) + L0x20019a0a_f * (x**225) + 
            L0x20019a0c_f * (x**226) + L0x20019a0e_f * (x**227) + 
            L0x20019a10_f * (x**228) + L0x20019a12_f * (x**229) + 
            L0x20019a14_f * (x**230) + L0x20019a16_f * (x**231) + 
            L0x20019a18_f * (x**232) + L0x20019a1a_f * (x**233) + 
            L0x20019a1c_f * (x**234) + L0x20019a1e_f * (x**235) + 
            L0x20019a20_f * (x**236) + L0x20019a22_f * (x**237) + 
            L0x20019a24_f * (x**238) + L0x20019a26_f * (x**239) + 
            L0x20019a28_f * (x**240) + L0x20019a2a_f * (x**241) + 
            L0x20019a2c_f * (x**242) + L0x20019a2e_f * (x**243) + 
            L0x20019a30_f * (x**244) + L0x20019a32_f * (x**245) + 
            L0x20019a34_f * (x**246) + L0x20019a36_f * (x**247) + 
            L0x20019a38_f * (x**248) + L0x20019a3a_f * (x**249) + 
            L0x20019a3c_f * (x**250) + L0x20019a3e_f * (x**251) + 
            L0x20019a40_f * (x**252) + L0x20019a42_f * (x**253) + 
            L0x20019a44_f * (x**254) + L0x20019a46_f * (x**255)
          )
          [25570049, x**4 - 6202837],
    (* inp_poly_43 *)
    eqmod (2**32) * (inp_poly_43 * inp_poly_43)
          (
            L0x20019848_f * (x**0) + L0x2001984a_f * (x**1) + 
            L0x2001984c_f * (x**2) + L0x2001984e_f * (x**3) + 
            L0x20019850_f * (x**4) + L0x20019852_f * (x**5) + 
            L0x20019854_f * (x**6) + L0x20019856_f * (x**7) + 
            L0x20019858_f * (x**8) + L0x2001985a_f * (x**9) + 
            L0x2001985c_f * (x**10) + L0x2001985e_f * (x**11) + 
            L0x20019860_f * (x**12) + L0x20019862_f * (x**13) + 
            L0x20019864_f * (x**14) + L0x20019866_f * (x**15) + 
            L0x20019868_f * (x**16) + L0x2001986a_f * (x**17) + 
            L0x2001986c_f * (x**18) + L0x2001986e_f * (x**19) + 
            L0x20019870_f * (x**20) + L0x20019872_f * (x**21) + 
            L0x20019874_f * (x**22) + L0x20019876_f * (x**23) + 
            L0x20019878_f * (x**24) + L0x2001987a_f * (x**25) + 
            L0x2001987c_f * (x**26) + L0x2001987e_f * (x**27) + 
            L0x20019880_f * (x**28) + L0x20019882_f * (x**29) + 
            L0x20019884_f * (x**30) + L0x20019886_f * (x**31) + 
            L0x20019888_f * (x**32) + L0x2001988a_f * (x**33) + 
            L0x2001988c_f * (x**34) + L0x2001988e_f * (x**35) + 
            L0x20019890_f * (x**36) + L0x20019892_f * (x**37) + 
            L0x20019894_f * (x**38) + L0x20019896_f * (x**39) + 
            L0x20019898_f * (x**40) + L0x2001989a_f * (x**41) + 
            L0x2001989c_f * (x**42) + L0x2001989e_f * (x**43) + 
            L0x200198a0_f * (x**44) + L0x200198a2_f * (x**45) + 
            L0x200198a4_f * (x**46) + L0x200198a6_f * (x**47) + 
            L0x200198a8_f * (x**48) + L0x200198aa_f * (x**49) + 
            L0x200198ac_f * (x**50) + L0x200198ae_f * (x**51) + 
            L0x200198b0_f * (x**52) + L0x200198b2_f * (x**53) + 
            L0x200198b4_f * (x**54) + L0x200198b6_f * (x**55) + 
            L0x200198b8_f * (x**56) + L0x200198ba_f * (x**57) + 
            L0x200198bc_f * (x**58) + L0x200198be_f * (x**59) + 
            L0x200198c0_f * (x**60) + L0x200198c2_f * (x**61) + 
            L0x200198c4_f * (x**62) + L0x200198c6_f * (x**63) + 
            L0x200198c8_f * (x**64) + L0x200198ca_f * (x**65) + 
            L0x200198cc_f * (x**66) + L0x200198ce_f * (x**67) + 
            L0x200198d0_f * (x**68) + L0x200198d2_f * (x**69) + 
            L0x200198d4_f * (x**70) + L0x200198d6_f * (x**71) + 
            L0x200198d8_f * (x**72) + L0x200198da_f * (x**73) + 
            L0x200198dc_f * (x**74) + L0x200198de_f * (x**75) + 
            L0x200198e0_f * (x**76) + L0x200198e2_f * (x**77) + 
            L0x200198e4_f * (x**78) + L0x200198e6_f * (x**79) + 
            L0x200198e8_f * (x**80) + L0x200198ea_f * (x**81) + 
            L0x200198ec_f * (x**82) + L0x200198ee_f * (x**83) + 
            L0x200198f0_f * (x**84) + L0x200198f2_f * (x**85) + 
            L0x200198f4_f * (x**86) + L0x200198f6_f * (x**87) + 
            L0x200198f8_f * (x**88) + L0x200198fa_f * (x**89) + 
            L0x200198fc_f * (x**90) + L0x200198fe_f * (x**91) + 
            L0x20019900_f * (x**92) + L0x20019902_f * (x**93) + 
            L0x20019904_f * (x**94) + L0x20019906_f * (x**95) + 
            L0x20019908_f * (x**96) + L0x2001990a_f * (x**97) + 
            L0x2001990c_f * (x**98) + L0x2001990e_f * (x**99) + 
            L0x20019910_f * (x**100) + L0x20019912_f * (x**101) + 
            L0x20019914_f * (x**102) + L0x20019916_f * (x**103) + 
            L0x20019918_f * (x**104) + L0x2001991a_f * (x**105) + 
            L0x2001991c_f * (x**106) + L0x2001991e_f * (x**107) + 
            L0x20019920_f * (x**108) + L0x20019922_f * (x**109) + 
            L0x20019924_f * (x**110) + L0x20019926_f * (x**111) + 
            L0x20019928_f * (x**112) + L0x2001992a_f * (x**113) + 
            L0x2001992c_f * (x**114) + L0x2001992e_f * (x**115) + 
            L0x20019930_f * (x**116) + L0x20019932_f * (x**117) + 
            L0x20019934_f * (x**118) + L0x20019936_f * (x**119) + 
            L0x20019938_f * (x**120) + L0x2001993a_f * (x**121) + 
            L0x2001993c_f * (x**122) + L0x2001993e_f * (x**123) + 
            L0x20019940_f * (x**124) + L0x20019942_f * (x**125) + 
            L0x20019944_f * (x**126) + L0x20019946_f * (x**127) + 
            L0x20019948_f * (x**128) + L0x2001994a_f * (x**129) + 
            L0x2001994c_f * (x**130) + L0x2001994e_f * (x**131) + 
            L0x20019950_f * (x**132) + L0x20019952_f * (x**133) + 
            L0x20019954_f * (x**134) + L0x20019956_f * (x**135) + 
            L0x20019958_f * (x**136) + L0x2001995a_f * (x**137) + 
            L0x2001995c_f * (x**138) + L0x2001995e_f * (x**139) + 
            L0x20019960_f * (x**140) + L0x20019962_f * (x**141) + 
            L0x20019964_f * (x**142) + L0x20019966_f * (x**143) + 
            L0x20019968_f * (x**144) + L0x2001996a_f * (x**145) + 
            L0x2001996c_f * (x**146) + L0x2001996e_f * (x**147) + 
            L0x20019970_f * (x**148) + L0x20019972_f * (x**149) + 
            L0x20019974_f * (x**150) + L0x20019976_f * (x**151) + 
            L0x20019978_f * (x**152) + L0x2001997a_f * (x**153) + 
            L0x2001997c_f * (x**154) + L0x2001997e_f * (x**155) + 
            L0x20019980_f * (x**156) + L0x20019982_f * (x**157) + 
            L0x20019984_f * (x**158) + L0x20019986_f * (x**159) + 
            L0x20019988_f * (x**160) + L0x2001998a_f * (x**161) + 
            L0x2001998c_f * (x**162) + L0x2001998e_f * (x**163) + 
            L0x20019990_f * (x**164) + L0x20019992_f * (x**165) + 
            L0x20019994_f * (x**166) + L0x20019996_f * (x**167) + 
            L0x20019998_f * (x**168) + L0x2001999a_f * (x**169) + 
            L0x2001999c_f * (x**170) + L0x2001999e_f * (x**171) + 
            L0x200199a0_f * (x**172) + L0x200199a2_f * (x**173) + 
            L0x200199a4_f * (x**174) + L0x200199a6_f * (x**175) + 
            L0x200199a8_f * (x**176) + L0x200199aa_f * (x**177) + 
            L0x200199ac_f * (x**178) + L0x200199ae_f * (x**179) + 
            L0x200199b0_f * (x**180) + L0x200199b2_f * (x**181) + 
            L0x200199b4_f * (x**182) + L0x200199b6_f * (x**183) + 
            L0x200199b8_f * (x**184) + L0x200199ba_f * (x**185) + 
            L0x200199bc_f * (x**186) + L0x200199be_f * (x**187) + 
            L0x200199c0_f * (x**188) + L0x200199c2_f * (x**189) + 
            L0x200199c4_f * (x**190) + L0x200199c6_f * (x**191) + 
            L0x200199c8_f * (x**192) + L0x200199ca_f * (x**193) + 
            L0x200199cc_f * (x**194) + L0x200199ce_f * (x**195) + 
            L0x200199d0_f * (x**196) + L0x200199d2_f * (x**197) + 
            L0x200199d4_f * (x**198) + L0x200199d6_f * (x**199) + 
            L0x200199d8_f * (x**200) + L0x200199da_f * (x**201) + 
            L0x200199dc_f * (x**202) + L0x200199de_f * (x**203) + 
            L0x200199e0_f * (x**204) + L0x200199e2_f * (x**205) + 
            L0x200199e4_f * (x**206) + L0x200199e6_f * (x**207) + 
            L0x200199e8_f * (x**208) + L0x200199ea_f * (x**209) + 
            L0x200199ec_f * (x**210) + L0x200199ee_f * (x**211) + 
            L0x200199f0_f * (x**212) + L0x200199f2_f * (x**213) + 
            L0x200199f4_f * (x**214) + L0x200199f6_f * (x**215) + 
            L0x200199f8_f * (x**216) + L0x200199fa_f * (x**217) + 
            L0x200199fc_f * (x**218) + L0x200199fe_f * (x**219) + 
            L0x20019a00_f * (x**220) + L0x20019a02_f * (x**221) + 
            L0x20019a04_f * (x**222) + L0x20019a06_f * (x**223) + 
            L0x20019a08_f * (x**224) + L0x20019a0a_f * (x**225) + 
            L0x20019a0c_f * (x**226) + L0x20019a0e_f * (x**227) + 
            L0x20019a10_f * (x**228) + L0x20019a12_f * (x**229) + 
            L0x20019a14_f * (x**230) + L0x20019a16_f * (x**231) + 
            L0x20019a18_f * (x**232) + L0x20019a1a_f * (x**233) + 
            L0x20019a1c_f * (x**234) + L0x20019a1e_f * (x**235) + 
            L0x20019a20_f * (x**236) + L0x20019a22_f * (x**237) + 
            L0x20019a24_f * (x**238) + L0x20019a26_f * (x**239) + 
            L0x20019a28_f * (x**240) + L0x20019a2a_f * (x**241) + 
            L0x20019a2c_f * (x**242) + L0x20019a2e_f * (x**243) + 
            L0x20019a30_f * (x**244) + L0x20019a32_f * (x**245) + 
            L0x20019a34_f * (x**246) + L0x20019a36_f * (x**247) + 
            L0x20019a38_f * (x**248) + L0x20019a3a_f * (x**249) + 
            L0x20019a3c_f * (x**250) + L0x20019a3e_f * (x**251) + 
            L0x20019a40_f * (x**252) + L0x20019a42_f * (x**253) + 
            L0x20019a44_f * (x**254) + L0x20019a46_f * (x**255)
          )
          [25570049, x**4 - 19367212],
    (* inp_poly_44 *)
    eqmod (2**32) * (inp_poly_44 * inp_poly_44)
          (
            L0x20019848_f * (x**0) + L0x2001984a_f * (x**1) + 
            L0x2001984c_f * (x**2) + L0x2001984e_f * (x**3) + 
            L0x20019850_f * (x**4) + L0x20019852_f * (x**5) + 
            L0x20019854_f * (x**6) + L0x20019856_f * (x**7) + 
            L0x20019858_f * (x**8) + L0x2001985a_f * (x**9) + 
            L0x2001985c_f * (x**10) + L0x2001985e_f * (x**11) + 
            L0x20019860_f * (x**12) + L0x20019862_f * (x**13) + 
            L0x20019864_f * (x**14) + L0x20019866_f * (x**15) + 
            L0x20019868_f * (x**16) + L0x2001986a_f * (x**17) + 
            L0x2001986c_f * (x**18) + L0x2001986e_f * (x**19) + 
            L0x20019870_f * (x**20) + L0x20019872_f * (x**21) + 
            L0x20019874_f * (x**22) + L0x20019876_f * (x**23) + 
            L0x20019878_f * (x**24) + L0x2001987a_f * (x**25) + 
            L0x2001987c_f * (x**26) + L0x2001987e_f * (x**27) + 
            L0x20019880_f * (x**28) + L0x20019882_f * (x**29) + 
            L0x20019884_f * (x**30) + L0x20019886_f * (x**31) + 
            L0x20019888_f * (x**32) + L0x2001988a_f * (x**33) + 
            L0x2001988c_f * (x**34) + L0x2001988e_f * (x**35) + 
            L0x20019890_f * (x**36) + L0x20019892_f * (x**37) + 
            L0x20019894_f * (x**38) + L0x20019896_f * (x**39) + 
            L0x20019898_f * (x**40) + L0x2001989a_f * (x**41) + 
            L0x2001989c_f * (x**42) + L0x2001989e_f * (x**43) + 
            L0x200198a0_f * (x**44) + L0x200198a2_f * (x**45) + 
            L0x200198a4_f * (x**46) + L0x200198a6_f * (x**47) + 
            L0x200198a8_f * (x**48) + L0x200198aa_f * (x**49) + 
            L0x200198ac_f * (x**50) + L0x200198ae_f * (x**51) + 
            L0x200198b0_f * (x**52) + L0x200198b2_f * (x**53) + 
            L0x200198b4_f * (x**54) + L0x200198b6_f * (x**55) + 
            L0x200198b8_f * (x**56) + L0x200198ba_f * (x**57) + 
            L0x200198bc_f * (x**58) + L0x200198be_f * (x**59) + 
            L0x200198c0_f * (x**60) + L0x200198c2_f * (x**61) + 
            L0x200198c4_f * (x**62) + L0x200198c6_f * (x**63) + 
            L0x200198c8_f * (x**64) + L0x200198ca_f * (x**65) + 
            L0x200198cc_f * (x**66) + L0x200198ce_f * (x**67) + 
            L0x200198d0_f * (x**68) + L0x200198d2_f * (x**69) + 
            L0x200198d4_f * (x**70) + L0x200198d6_f * (x**71) + 
            L0x200198d8_f * (x**72) + L0x200198da_f * (x**73) + 
            L0x200198dc_f * (x**74) + L0x200198de_f * (x**75) + 
            L0x200198e0_f * (x**76) + L0x200198e2_f * (x**77) + 
            L0x200198e4_f * (x**78) + L0x200198e6_f * (x**79) + 
            L0x200198e8_f * (x**80) + L0x200198ea_f * (x**81) + 
            L0x200198ec_f * (x**82) + L0x200198ee_f * (x**83) + 
            L0x200198f0_f * (x**84) + L0x200198f2_f * (x**85) + 
            L0x200198f4_f * (x**86) + L0x200198f6_f * (x**87) + 
            L0x200198f8_f * (x**88) + L0x200198fa_f * (x**89) + 
            L0x200198fc_f * (x**90) + L0x200198fe_f * (x**91) + 
            L0x20019900_f * (x**92) + L0x20019902_f * (x**93) + 
            L0x20019904_f * (x**94) + L0x20019906_f * (x**95) + 
            L0x20019908_f * (x**96) + L0x2001990a_f * (x**97) + 
            L0x2001990c_f * (x**98) + L0x2001990e_f * (x**99) + 
            L0x20019910_f * (x**100) + L0x20019912_f * (x**101) + 
            L0x20019914_f * (x**102) + L0x20019916_f * (x**103) + 
            L0x20019918_f * (x**104) + L0x2001991a_f * (x**105) + 
            L0x2001991c_f * (x**106) + L0x2001991e_f * (x**107) + 
            L0x20019920_f * (x**108) + L0x20019922_f * (x**109) + 
            L0x20019924_f * (x**110) + L0x20019926_f * (x**111) + 
            L0x20019928_f * (x**112) + L0x2001992a_f * (x**113) + 
            L0x2001992c_f * (x**114) + L0x2001992e_f * (x**115) + 
            L0x20019930_f * (x**116) + L0x20019932_f * (x**117) + 
            L0x20019934_f * (x**118) + L0x20019936_f * (x**119) + 
            L0x20019938_f * (x**120) + L0x2001993a_f * (x**121) + 
            L0x2001993c_f * (x**122) + L0x2001993e_f * (x**123) + 
            L0x20019940_f * (x**124) + L0x20019942_f * (x**125) + 
            L0x20019944_f * (x**126) + L0x20019946_f * (x**127) + 
            L0x20019948_f * (x**128) + L0x2001994a_f * (x**129) + 
            L0x2001994c_f * (x**130) + L0x2001994e_f * (x**131) + 
            L0x20019950_f * (x**132) + L0x20019952_f * (x**133) + 
            L0x20019954_f * (x**134) + L0x20019956_f * (x**135) + 
            L0x20019958_f * (x**136) + L0x2001995a_f * (x**137) + 
            L0x2001995c_f * (x**138) + L0x2001995e_f * (x**139) + 
            L0x20019960_f * (x**140) + L0x20019962_f * (x**141) + 
            L0x20019964_f * (x**142) + L0x20019966_f * (x**143) + 
            L0x20019968_f * (x**144) + L0x2001996a_f * (x**145) + 
            L0x2001996c_f * (x**146) + L0x2001996e_f * (x**147) + 
            L0x20019970_f * (x**148) + L0x20019972_f * (x**149) + 
            L0x20019974_f * (x**150) + L0x20019976_f * (x**151) + 
            L0x20019978_f * (x**152) + L0x2001997a_f * (x**153) + 
            L0x2001997c_f * (x**154) + L0x2001997e_f * (x**155) + 
            L0x20019980_f * (x**156) + L0x20019982_f * (x**157) + 
            L0x20019984_f * (x**158) + L0x20019986_f * (x**159) + 
            L0x20019988_f * (x**160) + L0x2001998a_f * (x**161) + 
            L0x2001998c_f * (x**162) + L0x2001998e_f * (x**163) + 
            L0x20019990_f * (x**164) + L0x20019992_f * (x**165) + 
            L0x20019994_f * (x**166) + L0x20019996_f * (x**167) + 
            L0x20019998_f * (x**168) + L0x2001999a_f * (x**169) + 
            L0x2001999c_f * (x**170) + L0x2001999e_f * (x**171) + 
            L0x200199a0_f * (x**172) + L0x200199a2_f * (x**173) + 
            L0x200199a4_f * (x**174) + L0x200199a6_f * (x**175) + 
            L0x200199a8_f * (x**176) + L0x200199aa_f * (x**177) + 
            L0x200199ac_f * (x**178) + L0x200199ae_f * (x**179) + 
            L0x200199b0_f * (x**180) + L0x200199b2_f * (x**181) + 
            L0x200199b4_f * (x**182) + L0x200199b6_f * (x**183) + 
            L0x200199b8_f * (x**184) + L0x200199ba_f * (x**185) + 
            L0x200199bc_f * (x**186) + L0x200199be_f * (x**187) + 
            L0x200199c0_f * (x**188) + L0x200199c2_f * (x**189) + 
            L0x200199c4_f * (x**190) + L0x200199c6_f * (x**191) + 
            L0x200199c8_f * (x**192) + L0x200199ca_f * (x**193) + 
            L0x200199cc_f * (x**194) + L0x200199ce_f * (x**195) + 
            L0x200199d0_f * (x**196) + L0x200199d2_f * (x**197) + 
            L0x200199d4_f * (x**198) + L0x200199d6_f * (x**199) + 
            L0x200199d8_f * (x**200) + L0x200199da_f * (x**201) + 
            L0x200199dc_f * (x**202) + L0x200199de_f * (x**203) + 
            L0x200199e0_f * (x**204) + L0x200199e2_f * (x**205) + 
            L0x200199e4_f * (x**206) + L0x200199e6_f * (x**207) + 
            L0x200199e8_f * (x**208) + L0x200199ea_f * (x**209) + 
            L0x200199ec_f * (x**210) + L0x200199ee_f * (x**211) + 
            L0x200199f0_f * (x**212) + L0x200199f2_f * (x**213) + 
            L0x200199f4_f * (x**214) + L0x200199f6_f * (x**215) + 
            L0x200199f8_f * (x**216) + L0x200199fa_f * (x**217) + 
            L0x200199fc_f * (x**218) + L0x200199fe_f * (x**219) + 
            L0x20019a00_f * (x**220) + L0x20019a02_f * (x**221) + 
            L0x20019a04_f * (x**222) + L0x20019a06_f * (x**223) + 
            L0x20019a08_f * (x**224) + L0x20019a0a_f * (x**225) + 
            L0x20019a0c_f * (x**226) + L0x20019a0e_f * (x**227) + 
            L0x20019a10_f * (x**228) + L0x20019a12_f * (x**229) + 
            L0x20019a14_f * (x**230) + L0x20019a16_f * (x**231) + 
            L0x20019a18_f * (x**232) + L0x20019a1a_f * (x**233) + 
            L0x20019a1c_f * (x**234) + L0x20019a1e_f * (x**235) + 
            L0x20019a20_f * (x**236) + L0x20019a22_f * (x**237) + 
            L0x20019a24_f * (x**238) + L0x20019a26_f * (x**239) + 
            L0x20019a28_f * (x**240) + L0x20019a2a_f * (x**241) + 
            L0x20019a2c_f * (x**242) + L0x20019a2e_f * (x**243) + 
            L0x20019a30_f * (x**244) + L0x20019a32_f * (x**245) + 
            L0x20019a34_f * (x**246) + L0x20019a36_f * (x**247) + 
            L0x20019a38_f * (x**248) + L0x20019a3a_f * (x**249) + 
            L0x20019a3c_f * (x**250) + L0x20019a3e_f * (x**251) + 
            L0x20019a40_f * (x**252) + L0x20019a42_f * (x**253) + 
            L0x20019a44_f * (x**254) + L0x20019a46_f * (x**255)
          )
          [25570049, x**4 - 17091305],
    (* inp_poly_45 *)
    eqmod (2**32) * (inp_poly_45 * inp_poly_45)
          (
            L0x20019848_f * (x**0) + L0x2001984a_f * (x**1) + 
            L0x2001984c_f * (x**2) + L0x2001984e_f * (x**3) + 
            L0x20019850_f * (x**4) + L0x20019852_f * (x**5) + 
            L0x20019854_f * (x**6) + L0x20019856_f * (x**7) + 
            L0x20019858_f * (x**8) + L0x2001985a_f * (x**9) + 
            L0x2001985c_f * (x**10) + L0x2001985e_f * (x**11) + 
            L0x20019860_f * (x**12) + L0x20019862_f * (x**13) + 
            L0x20019864_f * (x**14) + L0x20019866_f * (x**15) + 
            L0x20019868_f * (x**16) + L0x2001986a_f * (x**17) + 
            L0x2001986c_f * (x**18) + L0x2001986e_f * (x**19) + 
            L0x20019870_f * (x**20) + L0x20019872_f * (x**21) + 
            L0x20019874_f * (x**22) + L0x20019876_f * (x**23) + 
            L0x20019878_f * (x**24) + L0x2001987a_f * (x**25) + 
            L0x2001987c_f * (x**26) + L0x2001987e_f * (x**27) + 
            L0x20019880_f * (x**28) + L0x20019882_f * (x**29) + 
            L0x20019884_f * (x**30) + L0x20019886_f * (x**31) + 
            L0x20019888_f * (x**32) + L0x2001988a_f * (x**33) + 
            L0x2001988c_f * (x**34) + L0x2001988e_f * (x**35) + 
            L0x20019890_f * (x**36) + L0x20019892_f * (x**37) + 
            L0x20019894_f * (x**38) + L0x20019896_f * (x**39) + 
            L0x20019898_f * (x**40) + L0x2001989a_f * (x**41) + 
            L0x2001989c_f * (x**42) + L0x2001989e_f * (x**43) + 
            L0x200198a0_f * (x**44) + L0x200198a2_f * (x**45) + 
            L0x200198a4_f * (x**46) + L0x200198a6_f * (x**47) + 
            L0x200198a8_f * (x**48) + L0x200198aa_f * (x**49) + 
            L0x200198ac_f * (x**50) + L0x200198ae_f * (x**51) + 
            L0x200198b0_f * (x**52) + L0x200198b2_f * (x**53) + 
            L0x200198b4_f * (x**54) + L0x200198b6_f * (x**55) + 
            L0x200198b8_f * (x**56) + L0x200198ba_f * (x**57) + 
            L0x200198bc_f * (x**58) + L0x200198be_f * (x**59) + 
            L0x200198c0_f * (x**60) + L0x200198c2_f * (x**61) + 
            L0x200198c4_f * (x**62) + L0x200198c6_f * (x**63) + 
            L0x200198c8_f * (x**64) + L0x200198ca_f * (x**65) + 
            L0x200198cc_f * (x**66) + L0x200198ce_f * (x**67) + 
            L0x200198d0_f * (x**68) + L0x200198d2_f * (x**69) + 
            L0x200198d4_f * (x**70) + L0x200198d6_f * (x**71) + 
            L0x200198d8_f * (x**72) + L0x200198da_f * (x**73) + 
            L0x200198dc_f * (x**74) + L0x200198de_f * (x**75) + 
            L0x200198e0_f * (x**76) + L0x200198e2_f * (x**77) + 
            L0x200198e4_f * (x**78) + L0x200198e6_f * (x**79) + 
            L0x200198e8_f * (x**80) + L0x200198ea_f * (x**81) + 
            L0x200198ec_f * (x**82) + L0x200198ee_f * (x**83) + 
            L0x200198f0_f * (x**84) + L0x200198f2_f * (x**85) + 
            L0x200198f4_f * (x**86) + L0x200198f6_f * (x**87) + 
            L0x200198f8_f * (x**88) + L0x200198fa_f * (x**89) + 
            L0x200198fc_f * (x**90) + L0x200198fe_f * (x**91) + 
            L0x20019900_f * (x**92) + L0x20019902_f * (x**93) + 
            L0x20019904_f * (x**94) + L0x20019906_f * (x**95) + 
            L0x20019908_f * (x**96) + L0x2001990a_f * (x**97) + 
            L0x2001990c_f * (x**98) + L0x2001990e_f * (x**99) + 
            L0x20019910_f * (x**100) + L0x20019912_f * (x**101) + 
            L0x20019914_f * (x**102) + L0x20019916_f * (x**103) + 
            L0x20019918_f * (x**104) + L0x2001991a_f * (x**105) + 
            L0x2001991c_f * (x**106) + L0x2001991e_f * (x**107) + 
            L0x20019920_f * (x**108) + L0x20019922_f * (x**109) + 
            L0x20019924_f * (x**110) + L0x20019926_f * (x**111) + 
            L0x20019928_f * (x**112) + L0x2001992a_f * (x**113) + 
            L0x2001992c_f * (x**114) + L0x2001992e_f * (x**115) + 
            L0x20019930_f * (x**116) + L0x20019932_f * (x**117) + 
            L0x20019934_f * (x**118) + L0x20019936_f * (x**119) + 
            L0x20019938_f * (x**120) + L0x2001993a_f * (x**121) + 
            L0x2001993c_f * (x**122) + L0x2001993e_f * (x**123) + 
            L0x20019940_f * (x**124) + L0x20019942_f * (x**125) + 
            L0x20019944_f * (x**126) + L0x20019946_f * (x**127) + 
            L0x20019948_f * (x**128) + L0x2001994a_f * (x**129) + 
            L0x2001994c_f * (x**130) + L0x2001994e_f * (x**131) + 
            L0x20019950_f * (x**132) + L0x20019952_f * (x**133) + 
            L0x20019954_f * (x**134) + L0x20019956_f * (x**135) + 
            L0x20019958_f * (x**136) + L0x2001995a_f * (x**137) + 
            L0x2001995c_f * (x**138) + L0x2001995e_f * (x**139) + 
            L0x20019960_f * (x**140) + L0x20019962_f * (x**141) + 
            L0x20019964_f * (x**142) + L0x20019966_f * (x**143) + 
            L0x20019968_f * (x**144) + L0x2001996a_f * (x**145) + 
            L0x2001996c_f * (x**146) + L0x2001996e_f * (x**147) + 
            L0x20019970_f * (x**148) + L0x20019972_f * (x**149) + 
            L0x20019974_f * (x**150) + L0x20019976_f * (x**151) + 
            L0x20019978_f * (x**152) + L0x2001997a_f * (x**153) + 
            L0x2001997c_f * (x**154) + L0x2001997e_f * (x**155) + 
            L0x20019980_f * (x**156) + L0x20019982_f * (x**157) + 
            L0x20019984_f * (x**158) + L0x20019986_f * (x**159) + 
            L0x20019988_f * (x**160) + L0x2001998a_f * (x**161) + 
            L0x2001998c_f * (x**162) + L0x2001998e_f * (x**163) + 
            L0x20019990_f * (x**164) + L0x20019992_f * (x**165) + 
            L0x20019994_f * (x**166) + L0x20019996_f * (x**167) + 
            L0x20019998_f * (x**168) + L0x2001999a_f * (x**169) + 
            L0x2001999c_f * (x**170) + L0x2001999e_f * (x**171) + 
            L0x200199a0_f * (x**172) + L0x200199a2_f * (x**173) + 
            L0x200199a4_f * (x**174) + L0x200199a6_f * (x**175) + 
            L0x200199a8_f * (x**176) + L0x200199aa_f * (x**177) + 
            L0x200199ac_f * (x**178) + L0x200199ae_f * (x**179) + 
            L0x200199b0_f * (x**180) + L0x200199b2_f * (x**181) + 
            L0x200199b4_f * (x**182) + L0x200199b6_f * (x**183) + 
            L0x200199b8_f * (x**184) + L0x200199ba_f * (x**185) + 
            L0x200199bc_f * (x**186) + L0x200199be_f * (x**187) + 
            L0x200199c0_f * (x**188) + L0x200199c2_f * (x**189) + 
            L0x200199c4_f * (x**190) + L0x200199c6_f * (x**191) + 
            L0x200199c8_f * (x**192) + L0x200199ca_f * (x**193) + 
            L0x200199cc_f * (x**194) + L0x200199ce_f * (x**195) + 
            L0x200199d0_f * (x**196) + L0x200199d2_f * (x**197) + 
            L0x200199d4_f * (x**198) + L0x200199d6_f * (x**199) + 
            L0x200199d8_f * (x**200) + L0x200199da_f * (x**201) + 
            L0x200199dc_f * (x**202) + L0x200199de_f * (x**203) + 
            L0x200199e0_f * (x**204) + L0x200199e2_f * (x**205) + 
            L0x200199e4_f * (x**206) + L0x200199e6_f * (x**207) + 
            L0x200199e8_f * (x**208) + L0x200199ea_f * (x**209) + 
            L0x200199ec_f * (x**210) + L0x200199ee_f * (x**211) + 
            L0x200199f0_f * (x**212) + L0x200199f2_f * (x**213) + 
            L0x200199f4_f * (x**214) + L0x200199f6_f * (x**215) + 
            L0x200199f8_f * (x**216) + L0x200199fa_f * (x**217) + 
            L0x200199fc_f * (x**218) + L0x200199fe_f * (x**219) + 
            L0x20019a00_f * (x**220) + L0x20019a02_f * (x**221) + 
            L0x20019a04_f * (x**222) + L0x20019a06_f * (x**223) + 
            L0x20019a08_f * (x**224) + L0x20019a0a_f * (x**225) + 
            L0x20019a0c_f * (x**226) + L0x20019a0e_f * (x**227) + 
            L0x20019a10_f * (x**228) + L0x20019a12_f * (x**229) + 
            L0x20019a14_f * (x**230) + L0x20019a16_f * (x**231) + 
            L0x20019a18_f * (x**232) + L0x20019a1a_f * (x**233) + 
            L0x20019a1c_f * (x**234) + L0x20019a1e_f * (x**235) + 
            L0x20019a20_f * (x**236) + L0x20019a22_f * (x**237) + 
            L0x20019a24_f * (x**238) + L0x20019a26_f * (x**239) + 
            L0x20019a28_f * (x**240) + L0x20019a2a_f * (x**241) + 
            L0x20019a2c_f * (x**242) + L0x20019a2e_f * (x**243) + 
            L0x20019a30_f * (x**244) + L0x20019a32_f * (x**245) + 
            L0x20019a34_f * (x**246) + L0x20019a36_f * (x**247) + 
            L0x20019a38_f * (x**248) + L0x20019a3a_f * (x**249) + 
            L0x20019a3c_f * (x**250) + L0x20019a3e_f * (x**251) + 
            L0x20019a40_f * (x**252) + L0x20019a42_f * (x**253) + 
            L0x20019a44_f * (x**254) + L0x20019a46_f * (x**255)
          )
          [25570049, x**4 - 8478744],
    (* inp_poly_46 *)
    eqmod (2**32) * (inp_poly_46 * inp_poly_46)
          (
            L0x20019848_f * (x**0) + L0x2001984a_f * (x**1) + 
            L0x2001984c_f * (x**2) + L0x2001984e_f * (x**3) + 
            L0x20019850_f * (x**4) + L0x20019852_f * (x**5) + 
            L0x20019854_f * (x**6) + L0x20019856_f * (x**7) + 
            L0x20019858_f * (x**8) + L0x2001985a_f * (x**9) + 
            L0x2001985c_f * (x**10) + L0x2001985e_f * (x**11) + 
            L0x20019860_f * (x**12) + L0x20019862_f * (x**13) + 
            L0x20019864_f * (x**14) + L0x20019866_f * (x**15) + 
            L0x20019868_f * (x**16) + L0x2001986a_f * (x**17) + 
            L0x2001986c_f * (x**18) + L0x2001986e_f * (x**19) + 
            L0x20019870_f * (x**20) + L0x20019872_f * (x**21) + 
            L0x20019874_f * (x**22) + L0x20019876_f * (x**23) + 
            L0x20019878_f * (x**24) + L0x2001987a_f * (x**25) + 
            L0x2001987c_f * (x**26) + L0x2001987e_f * (x**27) + 
            L0x20019880_f * (x**28) + L0x20019882_f * (x**29) + 
            L0x20019884_f * (x**30) + L0x20019886_f * (x**31) + 
            L0x20019888_f * (x**32) + L0x2001988a_f * (x**33) + 
            L0x2001988c_f * (x**34) + L0x2001988e_f * (x**35) + 
            L0x20019890_f * (x**36) + L0x20019892_f * (x**37) + 
            L0x20019894_f * (x**38) + L0x20019896_f * (x**39) + 
            L0x20019898_f * (x**40) + L0x2001989a_f * (x**41) + 
            L0x2001989c_f * (x**42) + L0x2001989e_f * (x**43) + 
            L0x200198a0_f * (x**44) + L0x200198a2_f * (x**45) + 
            L0x200198a4_f * (x**46) + L0x200198a6_f * (x**47) + 
            L0x200198a8_f * (x**48) + L0x200198aa_f * (x**49) + 
            L0x200198ac_f * (x**50) + L0x200198ae_f * (x**51) + 
            L0x200198b0_f * (x**52) + L0x200198b2_f * (x**53) + 
            L0x200198b4_f * (x**54) + L0x200198b6_f * (x**55) + 
            L0x200198b8_f * (x**56) + L0x200198ba_f * (x**57) + 
            L0x200198bc_f * (x**58) + L0x200198be_f * (x**59) + 
            L0x200198c0_f * (x**60) + L0x200198c2_f * (x**61) + 
            L0x200198c4_f * (x**62) + L0x200198c6_f * (x**63) + 
            L0x200198c8_f * (x**64) + L0x200198ca_f * (x**65) + 
            L0x200198cc_f * (x**66) + L0x200198ce_f * (x**67) + 
            L0x200198d0_f * (x**68) + L0x200198d2_f * (x**69) + 
            L0x200198d4_f * (x**70) + L0x200198d6_f * (x**71) + 
            L0x200198d8_f * (x**72) + L0x200198da_f * (x**73) + 
            L0x200198dc_f * (x**74) + L0x200198de_f * (x**75) + 
            L0x200198e0_f * (x**76) + L0x200198e2_f * (x**77) + 
            L0x200198e4_f * (x**78) + L0x200198e6_f * (x**79) + 
            L0x200198e8_f * (x**80) + L0x200198ea_f * (x**81) + 
            L0x200198ec_f * (x**82) + L0x200198ee_f * (x**83) + 
            L0x200198f0_f * (x**84) + L0x200198f2_f * (x**85) + 
            L0x200198f4_f * (x**86) + L0x200198f6_f * (x**87) + 
            L0x200198f8_f * (x**88) + L0x200198fa_f * (x**89) + 
            L0x200198fc_f * (x**90) + L0x200198fe_f * (x**91) + 
            L0x20019900_f * (x**92) + L0x20019902_f * (x**93) + 
            L0x20019904_f * (x**94) + L0x20019906_f * (x**95) + 
            L0x20019908_f * (x**96) + L0x2001990a_f * (x**97) + 
            L0x2001990c_f * (x**98) + L0x2001990e_f * (x**99) + 
            L0x20019910_f * (x**100) + L0x20019912_f * (x**101) + 
            L0x20019914_f * (x**102) + L0x20019916_f * (x**103) + 
            L0x20019918_f * (x**104) + L0x2001991a_f * (x**105) + 
            L0x2001991c_f * (x**106) + L0x2001991e_f * (x**107) + 
            L0x20019920_f * (x**108) + L0x20019922_f * (x**109) + 
            L0x20019924_f * (x**110) + L0x20019926_f * (x**111) + 
            L0x20019928_f * (x**112) + L0x2001992a_f * (x**113) + 
            L0x2001992c_f * (x**114) + L0x2001992e_f * (x**115) + 
            L0x20019930_f * (x**116) + L0x20019932_f * (x**117) + 
            L0x20019934_f * (x**118) + L0x20019936_f * (x**119) + 
            L0x20019938_f * (x**120) + L0x2001993a_f * (x**121) + 
            L0x2001993c_f * (x**122) + L0x2001993e_f * (x**123) + 
            L0x20019940_f * (x**124) + L0x20019942_f * (x**125) + 
            L0x20019944_f * (x**126) + L0x20019946_f * (x**127) + 
            L0x20019948_f * (x**128) + L0x2001994a_f * (x**129) + 
            L0x2001994c_f * (x**130) + L0x2001994e_f * (x**131) + 
            L0x20019950_f * (x**132) + L0x20019952_f * (x**133) + 
            L0x20019954_f * (x**134) + L0x20019956_f * (x**135) + 
            L0x20019958_f * (x**136) + L0x2001995a_f * (x**137) + 
            L0x2001995c_f * (x**138) + L0x2001995e_f * (x**139) + 
            L0x20019960_f * (x**140) + L0x20019962_f * (x**141) + 
            L0x20019964_f * (x**142) + L0x20019966_f * (x**143) + 
            L0x20019968_f * (x**144) + L0x2001996a_f * (x**145) + 
            L0x2001996c_f * (x**146) + L0x2001996e_f * (x**147) + 
            L0x20019970_f * (x**148) + L0x20019972_f * (x**149) + 
            L0x20019974_f * (x**150) + L0x20019976_f * (x**151) + 
            L0x20019978_f * (x**152) + L0x2001997a_f * (x**153) + 
            L0x2001997c_f * (x**154) + L0x2001997e_f * (x**155) + 
            L0x20019980_f * (x**156) + L0x20019982_f * (x**157) + 
            L0x20019984_f * (x**158) + L0x20019986_f * (x**159) + 
            L0x20019988_f * (x**160) + L0x2001998a_f * (x**161) + 
            L0x2001998c_f * (x**162) + L0x2001998e_f * (x**163) + 
            L0x20019990_f * (x**164) + L0x20019992_f * (x**165) + 
            L0x20019994_f * (x**166) + L0x20019996_f * (x**167) + 
            L0x20019998_f * (x**168) + L0x2001999a_f * (x**169) + 
            L0x2001999c_f * (x**170) + L0x2001999e_f * (x**171) + 
            L0x200199a0_f * (x**172) + L0x200199a2_f * (x**173) + 
            L0x200199a4_f * (x**174) + L0x200199a6_f * (x**175) + 
            L0x200199a8_f * (x**176) + L0x200199aa_f * (x**177) + 
            L0x200199ac_f * (x**178) + L0x200199ae_f * (x**179) + 
            L0x200199b0_f * (x**180) + L0x200199b2_f * (x**181) + 
            L0x200199b4_f * (x**182) + L0x200199b6_f * (x**183) + 
            L0x200199b8_f * (x**184) + L0x200199ba_f * (x**185) + 
            L0x200199bc_f * (x**186) + L0x200199be_f * (x**187) + 
            L0x200199c0_f * (x**188) + L0x200199c2_f * (x**189) + 
            L0x200199c4_f * (x**190) + L0x200199c6_f * (x**191) + 
            L0x200199c8_f * (x**192) + L0x200199ca_f * (x**193) + 
            L0x200199cc_f * (x**194) + L0x200199ce_f * (x**195) + 
            L0x200199d0_f * (x**196) + L0x200199d2_f * (x**197) + 
            L0x200199d4_f * (x**198) + L0x200199d6_f * (x**199) + 
            L0x200199d8_f * (x**200) + L0x200199da_f * (x**201) + 
            L0x200199dc_f * (x**202) + L0x200199de_f * (x**203) + 
            L0x200199e0_f * (x**204) + L0x200199e2_f * (x**205) + 
            L0x200199e4_f * (x**206) + L0x200199e6_f * (x**207) + 
            L0x200199e8_f * (x**208) + L0x200199ea_f * (x**209) + 
            L0x200199ec_f * (x**210) + L0x200199ee_f * (x**211) + 
            L0x200199f0_f * (x**212) + L0x200199f2_f * (x**213) + 
            L0x200199f4_f * (x**214) + L0x200199f6_f * (x**215) + 
            L0x200199f8_f * (x**216) + L0x200199fa_f * (x**217) + 
            L0x200199fc_f * (x**218) + L0x200199fe_f * (x**219) + 
            L0x20019a00_f * (x**220) + L0x20019a02_f * (x**221) + 
            L0x20019a04_f * (x**222) + L0x20019a06_f * (x**223) + 
            L0x20019a08_f * (x**224) + L0x20019a0a_f * (x**225) + 
            L0x20019a0c_f * (x**226) + L0x20019a0e_f * (x**227) + 
            L0x20019a10_f * (x**228) + L0x20019a12_f * (x**229) + 
            L0x20019a14_f * (x**230) + L0x20019a16_f * (x**231) + 
            L0x20019a18_f * (x**232) + L0x20019a1a_f * (x**233) + 
            L0x20019a1c_f * (x**234) + L0x20019a1e_f * (x**235) + 
            L0x20019a20_f * (x**236) + L0x20019a22_f * (x**237) + 
            L0x20019a24_f * (x**238) + L0x20019a26_f * (x**239) + 
            L0x20019a28_f * (x**240) + L0x20019a2a_f * (x**241) + 
            L0x20019a2c_f * (x**242) + L0x20019a2e_f * (x**243) + 
            L0x20019a30_f * (x**244) + L0x20019a32_f * (x**245) + 
            L0x20019a34_f * (x**246) + L0x20019a36_f * (x**247) + 
            L0x20019a38_f * (x**248) + L0x20019a3a_f * (x**249) + 
            L0x20019a3c_f * (x**250) + L0x20019a3e_f * (x**251) + 
            L0x20019a40_f * (x**252) + L0x20019a42_f * (x**253) + 
            L0x20019a44_f * (x**254) + L0x20019a46_f * (x**255)
          )
          [25570049, x**4 - 18298658],
    (* inp_poly_47 *)
    eqmod (2**32) * (inp_poly_47 * inp_poly_47)
          (
            L0x20019848_f * (x**0) + L0x2001984a_f * (x**1) + 
            L0x2001984c_f * (x**2) + L0x2001984e_f * (x**3) + 
            L0x20019850_f * (x**4) + L0x20019852_f * (x**5) + 
            L0x20019854_f * (x**6) + L0x20019856_f * (x**7) + 
            L0x20019858_f * (x**8) + L0x2001985a_f * (x**9) + 
            L0x2001985c_f * (x**10) + L0x2001985e_f * (x**11) + 
            L0x20019860_f * (x**12) + L0x20019862_f * (x**13) + 
            L0x20019864_f * (x**14) + L0x20019866_f * (x**15) + 
            L0x20019868_f * (x**16) + L0x2001986a_f * (x**17) + 
            L0x2001986c_f * (x**18) + L0x2001986e_f * (x**19) + 
            L0x20019870_f * (x**20) + L0x20019872_f * (x**21) + 
            L0x20019874_f * (x**22) + L0x20019876_f * (x**23) + 
            L0x20019878_f * (x**24) + L0x2001987a_f * (x**25) + 
            L0x2001987c_f * (x**26) + L0x2001987e_f * (x**27) + 
            L0x20019880_f * (x**28) + L0x20019882_f * (x**29) + 
            L0x20019884_f * (x**30) + L0x20019886_f * (x**31) + 
            L0x20019888_f * (x**32) + L0x2001988a_f * (x**33) + 
            L0x2001988c_f * (x**34) + L0x2001988e_f * (x**35) + 
            L0x20019890_f * (x**36) + L0x20019892_f * (x**37) + 
            L0x20019894_f * (x**38) + L0x20019896_f * (x**39) + 
            L0x20019898_f * (x**40) + L0x2001989a_f * (x**41) + 
            L0x2001989c_f * (x**42) + L0x2001989e_f * (x**43) + 
            L0x200198a0_f * (x**44) + L0x200198a2_f * (x**45) + 
            L0x200198a4_f * (x**46) + L0x200198a6_f * (x**47) + 
            L0x200198a8_f * (x**48) + L0x200198aa_f * (x**49) + 
            L0x200198ac_f * (x**50) + L0x200198ae_f * (x**51) + 
            L0x200198b0_f * (x**52) + L0x200198b2_f * (x**53) + 
            L0x200198b4_f * (x**54) + L0x200198b6_f * (x**55) + 
            L0x200198b8_f * (x**56) + L0x200198ba_f * (x**57) + 
            L0x200198bc_f * (x**58) + L0x200198be_f * (x**59) + 
            L0x200198c0_f * (x**60) + L0x200198c2_f * (x**61) + 
            L0x200198c4_f * (x**62) + L0x200198c6_f * (x**63) + 
            L0x200198c8_f * (x**64) + L0x200198ca_f * (x**65) + 
            L0x200198cc_f * (x**66) + L0x200198ce_f * (x**67) + 
            L0x200198d0_f * (x**68) + L0x200198d2_f * (x**69) + 
            L0x200198d4_f * (x**70) + L0x200198d6_f * (x**71) + 
            L0x200198d8_f * (x**72) + L0x200198da_f * (x**73) + 
            L0x200198dc_f * (x**74) + L0x200198de_f * (x**75) + 
            L0x200198e0_f * (x**76) + L0x200198e2_f * (x**77) + 
            L0x200198e4_f * (x**78) + L0x200198e6_f * (x**79) + 
            L0x200198e8_f * (x**80) + L0x200198ea_f * (x**81) + 
            L0x200198ec_f * (x**82) + L0x200198ee_f * (x**83) + 
            L0x200198f0_f * (x**84) + L0x200198f2_f * (x**85) + 
            L0x200198f4_f * (x**86) + L0x200198f6_f * (x**87) + 
            L0x200198f8_f * (x**88) + L0x200198fa_f * (x**89) + 
            L0x200198fc_f * (x**90) + L0x200198fe_f * (x**91) + 
            L0x20019900_f * (x**92) + L0x20019902_f * (x**93) + 
            L0x20019904_f * (x**94) + L0x20019906_f * (x**95) + 
            L0x20019908_f * (x**96) + L0x2001990a_f * (x**97) + 
            L0x2001990c_f * (x**98) + L0x2001990e_f * (x**99) + 
            L0x20019910_f * (x**100) + L0x20019912_f * (x**101) + 
            L0x20019914_f * (x**102) + L0x20019916_f * (x**103) + 
            L0x20019918_f * (x**104) + L0x2001991a_f * (x**105) + 
            L0x2001991c_f * (x**106) + L0x2001991e_f * (x**107) + 
            L0x20019920_f * (x**108) + L0x20019922_f * (x**109) + 
            L0x20019924_f * (x**110) + L0x20019926_f * (x**111) + 
            L0x20019928_f * (x**112) + L0x2001992a_f * (x**113) + 
            L0x2001992c_f * (x**114) + L0x2001992e_f * (x**115) + 
            L0x20019930_f * (x**116) + L0x20019932_f * (x**117) + 
            L0x20019934_f * (x**118) + L0x20019936_f * (x**119) + 
            L0x20019938_f * (x**120) + L0x2001993a_f * (x**121) + 
            L0x2001993c_f * (x**122) + L0x2001993e_f * (x**123) + 
            L0x20019940_f * (x**124) + L0x20019942_f * (x**125) + 
            L0x20019944_f * (x**126) + L0x20019946_f * (x**127) + 
            L0x20019948_f * (x**128) + L0x2001994a_f * (x**129) + 
            L0x2001994c_f * (x**130) + L0x2001994e_f * (x**131) + 
            L0x20019950_f * (x**132) + L0x20019952_f * (x**133) + 
            L0x20019954_f * (x**134) + L0x20019956_f * (x**135) + 
            L0x20019958_f * (x**136) + L0x2001995a_f * (x**137) + 
            L0x2001995c_f * (x**138) + L0x2001995e_f * (x**139) + 
            L0x20019960_f * (x**140) + L0x20019962_f * (x**141) + 
            L0x20019964_f * (x**142) + L0x20019966_f * (x**143) + 
            L0x20019968_f * (x**144) + L0x2001996a_f * (x**145) + 
            L0x2001996c_f * (x**146) + L0x2001996e_f * (x**147) + 
            L0x20019970_f * (x**148) + L0x20019972_f * (x**149) + 
            L0x20019974_f * (x**150) + L0x20019976_f * (x**151) + 
            L0x20019978_f * (x**152) + L0x2001997a_f * (x**153) + 
            L0x2001997c_f * (x**154) + L0x2001997e_f * (x**155) + 
            L0x20019980_f * (x**156) + L0x20019982_f * (x**157) + 
            L0x20019984_f * (x**158) + L0x20019986_f * (x**159) + 
            L0x20019988_f * (x**160) + L0x2001998a_f * (x**161) + 
            L0x2001998c_f * (x**162) + L0x2001998e_f * (x**163) + 
            L0x20019990_f * (x**164) + L0x20019992_f * (x**165) + 
            L0x20019994_f * (x**166) + L0x20019996_f * (x**167) + 
            L0x20019998_f * (x**168) + L0x2001999a_f * (x**169) + 
            L0x2001999c_f * (x**170) + L0x2001999e_f * (x**171) + 
            L0x200199a0_f * (x**172) + L0x200199a2_f * (x**173) + 
            L0x200199a4_f * (x**174) + L0x200199a6_f * (x**175) + 
            L0x200199a8_f * (x**176) + L0x200199aa_f * (x**177) + 
            L0x200199ac_f * (x**178) + L0x200199ae_f * (x**179) + 
            L0x200199b0_f * (x**180) + L0x200199b2_f * (x**181) + 
            L0x200199b4_f * (x**182) + L0x200199b6_f * (x**183) + 
            L0x200199b8_f * (x**184) + L0x200199ba_f * (x**185) + 
            L0x200199bc_f * (x**186) + L0x200199be_f * (x**187) + 
            L0x200199c0_f * (x**188) + L0x200199c2_f * (x**189) + 
            L0x200199c4_f * (x**190) + L0x200199c6_f * (x**191) + 
            L0x200199c8_f * (x**192) + L0x200199ca_f * (x**193) + 
            L0x200199cc_f * (x**194) + L0x200199ce_f * (x**195) + 
            L0x200199d0_f * (x**196) + L0x200199d2_f * (x**197) + 
            L0x200199d4_f * (x**198) + L0x200199d6_f * (x**199) + 
            L0x200199d8_f * (x**200) + L0x200199da_f * (x**201) + 
            L0x200199dc_f * (x**202) + L0x200199de_f * (x**203) + 
            L0x200199e0_f * (x**204) + L0x200199e2_f * (x**205) + 
            L0x200199e4_f * (x**206) + L0x200199e6_f * (x**207) + 
            L0x200199e8_f * (x**208) + L0x200199ea_f * (x**209) + 
            L0x200199ec_f * (x**210) + L0x200199ee_f * (x**211) + 
            L0x200199f0_f * (x**212) + L0x200199f2_f * (x**213) + 
            L0x200199f4_f * (x**214) + L0x200199f6_f * (x**215) + 
            L0x200199f8_f * (x**216) + L0x200199fa_f * (x**217) + 
            L0x200199fc_f * (x**218) + L0x200199fe_f * (x**219) + 
            L0x20019a00_f * (x**220) + L0x20019a02_f * (x**221) + 
            L0x20019a04_f * (x**222) + L0x20019a06_f * (x**223) + 
            L0x20019a08_f * (x**224) + L0x20019a0a_f * (x**225) + 
            L0x20019a0c_f * (x**226) + L0x20019a0e_f * (x**227) + 
            L0x20019a10_f * (x**228) + L0x20019a12_f * (x**229) + 
            L0x20019a14_f * (x**230) + L0x20019a16_f * (x**231) + 
            L0x20019a18_f * (x**232) + L0x20019a1a_f * (x**233) + 
            L0x20019a1c_f * (x**234) + L0x20019a1e_f * (x**235) + 
            L0x20019a20_f * (x**236) + L0x20019a22_f * (x**237) + 
            L0x20019a24_f * (x**238) + L0x20019a26_f * (x**239) + 
            L0x20019a28_f * (x**240) + L0x20019a2a_f * (x**241) + 
            L0x20019a2c_f * (x**242) + L0x20019a2e_f * (x**243) + 
            L0x20019a30_f * (x**244) + L0x20019a32_f * (x**245) + 
            L0x20019a34_f * (x**246) + L0x20019a36_f * (x**247) + 
            L0x20019a38_f * (x**248) + L0x20019a3a_f * (x**249) + 
            L0x20019a3c_f * (x**250) + L0x20019a3e_f * (x**251) + 
            L0x20019a40_f * (x**252) + L0x20019a42_f * (x**253) + 
            L0x20019a44_f * (x**254) + L0x20019a46_f * (x**255)
          )
          [25570049, x**4 - 7271391]
  ] prove with [cuts [66]]
  &&
  true
;

cut (* 83 *)
  true && true;

(* slice 6 *)
assume (* instantiating y_0's *)
  and [
    y_0_48 = 1, y_0_49 = 1, y_0_50 = 1, y_0_51 = 1, 
    y_0_52 = 1, y_0_53 = 1, y_0_54 = 1, y_0_55 = 1
  ] && true;
cut (* 84 *)
  and [
    (* inp_poly_48 *)
    eqmod (2**32) * (inp_poly_48 * inp_poly_48)
          (
            L0x20019848_f * (x**0) + L0x2001984a_f * (x**1) + 
            L0x2001984c_f * (x**2) + L0x2001984e_f * (x**3) + 
            L0x20019850_f * (x**4) + L0x20019852_f * (x**5) + 
            L0x20019854_f * (x**6) + L0x20019856_f * (x**7) + 
            L0x20019858_f * (x**8) + L0x2001985a_f * (x**9) + 
            L0x2001985c_f * (x**10) + L0x2001985e_f * (x**11) + 
            L0x20019860_f * (x**12) + L0x20019862_f * (x**13) + 
            L0x20019864_f * (x**14) + L0x20019866_f * (x**15) + 
            L0x20019868_f * (x**16) + L0x2001986a_f * (x**17) + 
            L0x2001986c_f * (x**18) + L0x2001986e_f * (x**19) + 
            L0x20019870_f * (x**20) + L0x20019872_f * (x**21) + 
            L0x20019874_f * (x**22) + L0x20019876_f * (x**23) + 
            L0x20019878_f * (x**24) + L0x2001987a_f * (x**25) + 
            L0x2001987c_f * (x**26) + L0x2001987e_f * (x**27) + 
            L0x20019880_f * (x**28) + L0x20019882_f * (x**29) + 
            L0x20019884_f * (x**30) + L0x20019886_f * (x**31) + 
            L0x20019888_f * (x**32) + L0x2001988a_f * (x**33) + 
            L0x2001988c_f * (x**34) + L0x2001988e_f * (x**35) + 
            L0x20019890_f * (x**36) + L0x20019892_f * (x**37) + 
            L0x20019894_f * (x**38) + L0x20019896_f * (x**39) + 
            L0x20019898_f * (x**40) + L0x2001989a_f * (x**41) + 
            L0x2001989c_f * (x**42) + L0x2001989e_f * (x**43) + 
            L0x200198a0_f * (x**44) + L0x200198a2_f * (x**45) + 
            L0x200198a4_f * (x**46) + L0x200198a6_f * (x**47) + 
            L0x200198a8_f * (x**48) + L0x200198aa_f * (x**49) + 
            L0x200198ac_f * (x**50) + L0x200198ae_f * (x**51) + 
            L0x200198b0_f * (x**52) + L0x200198b2_f * (x**53) + 
            L0x200198b4_f * (x**54) + L0x200198b6_f * (x**55) + 
            L0x200198b8_f * (x**56) + L0x200198ba_f * (x**57) + 
            L0x200198bc_f * (x**58) + L0x200198be_f * (x**59) + 
            L0x200198c0_f * (x**60) + L0x200198c2_f * (x**61) + 
            L0x200198c4_f * (x**62) + L0x200198c6_f * (x**63) + 
            L0x200198c8_f * (x**64) + L0x200198ca_f * (x**65) + 
            L0x200198cc_f * (x**66) + L0x200198ce_f * (x**67) + 
            L0x200198d0_f * (x**68) + L0x200198d2_f * (x**69) + 
            L0x200198d4_f * (x**70) + L0x200198d6_f * (x**71) + 
            L0x200198d8_f * (x**72) + L0x200198da_f * (x**73) + 
            L0x200198dc_f * (x**74) + L0x200198de_f * (x**75) + 
            L0x200198e0_f * (x**76) + L0x200198e2_f * (x**77) + 
            L0x200198e4_f * (x**78) + L0x200198e6_f * (x**79) + 
            L0x200198e8_f * (x**80) + L0x200198ea_f * (x**81) + 
            L0x200198ec_f * (x**82) + L0x200198ee_f * (x**83) + 
            L0x200198f0_f * (x**84) + L0x200198f2_f * (x**85) + 
            L0x200198f4_f * (x**86) + L0x200198f6_f * (x**87) + 
            L0x200198f8_f * (x**88) + L0x200198fa_f * (x**89) + 
            L0x200198fc_f * (x**90) + L0x200198fe_f * (x**91) + 
            L0x20019900_f * (x**92) + L0x20019902_f * (x**93) + 
            L0x20019904_f * (x**94) + L0x20019906_f * (x**95) + 
            L0x20019908_f * (x**96) + L0x2001990a_f * (x**97) + 
            L0x2001990c_f * (x**98) + L0x2001990e_f * (x**99) + 
            L0x20019910_f * (x**100) + L0x20019912_f * (x**101) + 
            L0x20019914_f * (x**102) + L0x20019916_f * (x**103) + 
            L0x20019918_f * (x**104) + L0x2001991a_f * (x**105) + 
            L0x2001991c_f * (x**106) + L0x2001991e_f * (x**107) + 
            L0x20019920_f * (x**108) + L0x20019922_f * (x**109) + 
            L0x20019924_f * (x**110) + L0x20019926_f * (x**111) + 
            L0x20019928_f * (x**112) + L0x2001992a_f * (x**113) + 
            L0x2001992c_f * (x**114) + L0x2001992e_f * (x**115) + 
            L0x20019930_f * (x**116) + L0x20019932_f * (x**117) + 
            L0x20019934_f * (x**118) + L0x20019936_f * (x**119) + 
            L0x20019938_f * (x**120) + L0x2001993a_f * (x**121) + 
            L0x2001993c_f * (x**122) + L0x2001993e_f * (x**123) + 
            L0x20019940_f * (x**124) + L0x20019942_f * (x**125) + 
            L0x20019944_f * (x**126) + L0x20019946_f * (x**127) + 
            L0x20019948_f * (x**128) + L0x2001994a_f * (x**129) + 
            L0x2001994c_f * (x**130) + L0x2001994e_f * (x**131) + 
            L0x20019950_f * (x**132) + L0x20019952_f * (x**133) + 
            L0x20019954_f * (x**134) + L0x20019956_f * (x**135) + 
            L0x20019958_f * (x**136) + L0x2001995a_f * (x**137) + 
            L0x2001995c_f * (x**138) + L0x2001995e_f * (x**139) + 
            L0x20019960_f * (x**140) + L0x20019962_f * (x**141) + 
            L0x20019964_f * (x**142) + L0x20019966_f * (x**143) + 
            L0x20019968_f * (x**144) + L0x2001996a_f * (x**145) + 
            L0x2001996c_f * (x**146) + L0x2001996e_f * (x**147) + 
            L0x20019970_f * (x**148) + L0x20019972_f * (x**149) + 
            L0x20019974_f * (x**150) + L0x20019976_f * (x**151) + 
            L0x20019978_f * (x**152) + L0x2001997a_f * (x**153) + 
            L0x2001997c_f * (x**154) + L0x2001997e_f * (x**155) + 
            L0x20019980_f * (x**156) + L0x20019982_f * (x**157) + 
            L0x20019984_f * (x**158) + L0x20019986_f * (x**159) + 
            L0x20019988_f * (x**160) + L0x2001998a_f * (x**161) + 
            L0x2001998c_f * (x**162) + L0x2001998e_f * (x**163) + 
            L0x20019990_f * (x**164) + L0x20019992_f * (x**165) + 
            L0x20019994_f * (x**166) + L0x20019996_f * (x**167) + 
            L0x20019998_f * (x**168) + L0x2001999a_f * (x**169) + 
            L0x2001999c_f * (x**170) + L0x2001999e_f * (x**171) + 
            L0x200199a0_f * (x**172) + L0x200199a2_f * (x**173) + 
            L0x200199a4_f * (x**174) + L0x200199a6_f * (x**175) + 
            L0x200199a8_f * (x**176) + L0x200199aa_f * (x**177) + 
            L0x200199ac_f * (x**178) + L0x200199ae_f * (x**179) + 
            L0x200199b0_f * (x**180) + L0x200199b2_f * (x**181) + 
            L0x200199b4_f * (x**182) + L0x200199b6_f * (x**183) + 
            L0x200199b8_f * (x**184) + L0x200199ba_f * (x**185) + 
            L0x200199bc_f * (x**186) + L0x200199be_f * (x**187) + 
            L0x200199c0_f * (x**188) + L0x200199c2_f * (x**189) + 
            L0x200199c4_f * (x**190) + L0x200199c6_f * (x**191) + 
            L0x200199c8_f * (x**192) + L0x200199ca_f * (x**193) + 
            L0x200199cc_f * (x**194) + L0x200199ce_f * (x**195) + 
            L0x200199d0_f * (x**196) + L0x200199d2_f * (x**197) + 
            L0x200199d4_f * (x**198) + L0x200199d6_f * (x**199) + 
            L0x200199d8_f * (x**200) + L0x200199da_f * (x**201) + 
            L0x200199dc_f * (x**202) + L0x200199de_f * (x**203) + 
            L0x200199e0_f * (x**204) + L0x200199e2_f * (x**205) + 
            L0x200199e4_f * (x**206) + L0x200199e6_f * (x**207) + 
            L0x200199e8_f * (x**208) + L0x200199ea_f * (x**209) + 
            L0x200199ec_f * (x**210) + L0x200199ee_f * (x**211) + 
            L0x200199f0_f * (x**212) + L0x200199f2_f * (x**213) + 
            L0x200199f4_f * (x**214) + L0x200199f6_f * (x**215) + 
            L0x200199f8_f * (x**216) + L0x200199fa_f * (x**217) + 
            L0x200199fc_f * (x**218) + L0x200199fe_f * (x**219) + 
            L0x20019a00_f * (x**220) + L0x20019a02_f * (x**221) + 
            L0x20019a04_f * (x**222) + L0x20019a06_f * (x**223) + 
            L0x20019a08_f * (x**224) + L0x20019a0a_f * (x**225) + 
            L0x20019a0c_f * (x**226) + L0x20019a0e_f * (x**227) + 
            L0x20019a10_f * (x**228) + L0x20019a12_f * (x**229) + 
            L0x20019a14_f * (x**230) + L0x20019a16_f * (x**231) + 
            L0x20019a18_f * (x**232) + L0x20019a1a_f * (x**233) + 
            L0x20019a1c_f * (x**234) + L0x20019a1e_f * (x**235) + 
            L0x20019a20_f * (x**236) + L0x20019a22_f * (x**237) + 
            L0x20019a24_f * (x**238) + L0x20019a26_f * (x**239) + 
            L0x20019a28_f * (x**240) + L0x20019a2a_f * (x**241) + 
            L0x20019a2c_f * (x**242) + L0x20019a2e_f * (x**243) + 
            L0x20019a30_f * (x**244) + L0x20019a32_f * (x**245) + 
            L0x20019a34_f * (x**246) + L0x20019a36_f * (x**247) + 
            L0x20019a38_f * (x**248) + L0x20019a3a_f * (x**249) + 
            L0x20019a3c_f * (x**250) + L0x20019a3e_f * (x**251) + 
            L0x20019a40_f * (x**252) + L0x20019a42_f * (x**253) + 
            L0x20019a44_f * (x**254) + L0x20019a46_f * (x**255)
          )
          [25570049, x**4 - 17500092],
    (* inp_poly_49 *)
    eqmod (2**32) * (inp_poly_49 * inp_poly_49)
          (
            L0x20019848_f * (x**0) + L0x2001984a_f * (x**1) + 
            L0x2001984c_f * (x**2) + L0x2001984e_f * (x**3) + 
            L0x20019850_f * (x**4) + L0x20019852_f * (x**5) + 
            L0x20019854_f * (x**6) + L0x20019856_f * (x**7) + 
            L0x20019858_f * (x**8) + L0x2001985a_f * (x**9) + 
            L0x2001985c_f * (x**10) + L0x2001985e_f * (x**11) + 
            L0x20019860_f * (x**12) + L0x20019862_f * (x**13) + 
            L0x20019864_f * (x**14) + L0x20019866_f * (x**15) + 
            L0x20019868_f * (x**16) + L0x2001986a_f * (x**17) + 
            L0x2001986c_f * (x**18) + L0x2001986e_f * (x**19) + 
            L0x20019870_f * (x**20) + L0x20019872_f * (x**21) + 
            L0x20019874_f * (x**22) + L0x20019876_f * (x**23) + 
            L0x20019878_f * (x**24) + L0x2001987a_f * (x**25) + 
            L0x2001987c_f * (x**26) + L0x2001987e_f * (x**27) + 
            L0x20019880_f * (x**28) + L0x20019882_f * (x**29) + 
            L0x20019884_f * (x**30) + L0x20019886_f * (x**31) + 
            L0x20019888_f * (x**32) + L0x2001988a_f * (x**33) + 
            L0x2001988c_f * (x**34) + L0x2001988e_f * (x**35) + 
            L0x20019890_f * (x**36) + L0x20019892_f * (x**37) + 
            L0x20019894_f * (x**38) + L0x20019896_f * (x**39) + 
            L0x20019898_f * (x**40) + L0x2001989a_f * (x**41) + 
            L0x2001989c_f * (x**42) + L0x2001989e_f * (x**43) + 
            L0x200198a0_f * (x**44) + L0x200198a2_f * (x**45) + 
            L0x200198a4_f * (x**46) + L0x200198a6_f * (x**47) + 
            L0x200198a8_f * (x**48) + L0x200198aa_f * (x**49) + 
            L0x200198ac_f * (x**50) + L0x200198ae_f * (x**51) + 
            L0x200198b0_f * (x**52) + L0x200198b2_f * (x**53) + 
            L0x200198b4_f * (x**54) + L0x200198b6_f * (x**55) + 
            L0x200198b8_f * (x**56) + L0x200198ba_f * (x**57) + 
            L0x200198bc_f * (x**58) + L0x200198be_f * (x**59) + 
            L0x200198c0_f * (x**60) + L0x200198c2_f * (x**61) + 
            L0x200198c4_f * (x**62) + L0x200198c6_f * (x**63) + 
            L0x200198c8_f * (x**64) + L0x200198ca_f * (x**65) + 
            L0x200198cc_f * (x**66) + L0x200198ce_f * (x**67) + 
            L0x200198d0_f * (x**68) + L0x200198d2_f * (x**69) + 
            L0x200198d4_f * (x**70) + L0x200198d6_f * (x**71) + 
            L0x200198d8_f * (x**72) + L0x200198da_f * (x**73) + 
            L0x200198dc_f * (x**74) + L0x200198de_f * (x**75) + 
            L0x200198e0_f * (x**76) + L0x200198e2_f * (x**77) + 
            L0x200198e4_f * (x**78) + L0x200198e6_f * (x**79) + 
            L0x200198e8_f * (x**80) + L0x200198ea_f * (x**81) + 
            L0x200198ec_f * (x**82) + L0x200198ee_f * (x**83) + 
            L0x200198f0_f * (x**84) + L0x200198f2_f * (x**85) + 
            L0x200198f4_f * (x**86) + L0x200198f6_f * (x**87) + 
            L0x200198f8_f * (x**88) + L0x200198fa_f * (x**89) + 
            L0x200198fc_f * (x**90) + L0x200198fe_f * (x**91) + 
            L0x20019900_f * (x**92) + L0x20019902_f * (x**93) + 
            L0x20019904_f * (x**94) + L0x20019906_f * (x**95) + 
            L0x20019908_f * (x**96) + L0x2001990a_f * (x**97) + 
            L0x2001990c_f * (x**98) + L0x2001990e_f * (x**99) + 
            L0x20019910_f * (x**100) + L0x20019912_f * (x**101) + 
            L0x20019914_f * (x**102) + L0x20019916_f * (x**103) + 
            L0x20019918_f * (x**104) + L0x2001991a_f * (x**105) + 
            L0x2001991c_f * (x**106) + L0x2001991e_f * (x**107) + 
            L0x20019920_f * (x**108) + L0x20019922_f * (x**109) + 
            L0x20019924_f * (x**110) + L0x20019926_f * (x**111) + 
            L0x20019928_f * (x**112) + L0x2001992a_f * (x**113) + 
            L0x2001992c_f * (x**114) + L0x2001992e_f * (x**115) + 
            L0x20019930_f * (x**116) + L0x20019932_f * (x**117) + 
            L0x20019934_f * (x**118) + L0x20019936_f * (x**119) + 
            L0x20019938_f * (x**120) + L0x2001993a_f * (x**121) + 
            L0x2001993c_f * (x**122) + L0x2001993e_f * (x**123) + 
            L0x20019940_f * (x**124) + L0x20019942_f * (x**125) + 
            L0x20019944_f * (x**126) + L0x20019946_f * (x**127) + 
            L0x20019948_f * (x**128) + L0x2001994a_f * (x**129) + 
            L0x2001994c_f * (x**130) + L0x2001994e_f * (x**131) + 
            L0x20019950_f * (x**132) + L0x20019952_f * (x**133) + 
            L0x20019954_f * (x**134) + L0x20019956_f * (x**135) + 
            L0x20019958_f * (x**136) + L0x2001995a_f * (x**137) + 
            L0x2001995c_f * (x**138) + L0x2001995e_f * (x**139) + 
            L0x20019960_f * (x**140) + L0x20019962_f * (x**141) + 
            L0x20019964_f * (x**142) + L0x20019966_f * (x**143) + 
            L0x20019968_f * (x**144) + L0x2001996a_f * (x**145) + 
            L0x2001996c_f * (x**146) + L0x2001996e_f * (x**147) + 
            L0x20019970_f * (x**148) + L0x20019972_f * (x**149) + 
            L0x20019974_f * (x**150) + L0x20019976_f * (x**151) + 
            L0x20019978_f * (x**152) + L0x2001997a_f * (x**153) + 
            L0x2001997c_f * (x**154) + L0x2001997e_f * (x**155) + 
            L0x20019980_f * (x**156) + L0x20019982_f * (x**157) + 
            L0x20019984_f * (x**158) + L0x20019986_f * (x**159) + 
            L0x20019988_f * (x**160) + L0x2001998a_f * (x**161) + 
            L0x2001998c_f * (x**162) + L0x2001998e_f * (x**163) + 
            L0x20019990_f * (x**164) + L0x20019992_f * (x**165) + 
            L0x20019994_f * (x**166) + L0x20019996_f * (x**167) + 
            L0x20019998_f * (x**168) + L0x2001999a_f * (x**169) + 
            L0x2001999c_f * (x**170) + L0x2001999e_f * (x**171) + 
            L0x200199a0_f * (x**172) + L0x200199a2_f * (x**173) + 
            L0x200199a4_f * (x**174) + L0x200199a6_f * (x**175) + 
            L0x200199a8_f * (x**176) + L0x200199aa_f * (x**177) + 
            L0x200199ac_f * (x**178) + L0x200199ae_f * (x**179) + 
            L0x200199b0_f * (x**180) + L0x200199b2_f * (x**181) + 
            L0x200199b4_f * (x**182) + L0x200199b6_f * (x**183) + 
            L0x200199b8_f * (x**184) + L0x200199ba_f * (x**185) + 
            L0x200199bc_f * (x**186) + L0x200199be_f * (x**187) + 
            L0x200199c0_f * (x**188) + L0x200199c2_f * (x**189) + 
            L0x200199c4_f * (x**190) + L0x200199c6_f * (x**191) + 
            L0x200199c8_f * (x**192) + L0x200199ca_f * (x**193) + 
            L0x200199cc_f * (x**194) + L0x200199ce_f * (x**195) + 
            L0x200199d0_f * (x**196) + L0x200199d2_f * (x**197) + 
            L0x200199d4_f * (x**198) + L0x200199d6_f * (x**199) + 
            L0x200199d8_f * (x**200) + L0x200199da_f * (x**201) + 
            L0x200199dc_f * (x**202) + L0x200199de_f * (x**203) + 
            L0x200199e0_f * (x**204) + L0x200199e2_f * (x**205) + 
            L0x200199e4_f * (x**206) + L0x200199e6_f * (x**207) + 
            L0x200199e8_f * (x**208) + L0x200199ea_f * (x**209) + 
            L0x200199ec_f * (x**210) + L0x200199ee_f * (x**211) + 
            L0x200199f0_f * (x**212) + L0x200199f2_f * (x**213) + 
            L0x200199f4_f * (x**214) + L0x200199f6_f * (x**215) + 
            L0x200199f8_f * (x**216) + L0x200199fa_f * (x**217) + 
            L0x200199fc_f * (x**218) + L0x200199fe_f * (x**219) + 
            L0x20019a00_f * (x**220) + L0x20019a02_f * (x**221) + 
            L0x20019a04_f * (x**222) + L0x20019a06_f * (x**223) + 
            L0x20019a08_f * (x**224) + L0x20019a0a_f * (x**225) + 
            L0x20019a0c_f * (x**226) + L0x20019a0e_f * (x**227) + 
            L0x20019a10_f * (x**228) + L0x20019a12_f * (x**229) + 
            L0x20019a14_f * (x**230) + L0x20019a16_f * (x**231) + 
            L0x20019a18_f * (x**232) + L0x20019a1a_f * (x**233) + 
            L0x20019a1c_f * (x**234) + L0x20019a1e_f * (x**235) + 
            L0x20019a20_f * (x**236) + L0x20019a22_f * (x**237) + 
            L0x20019a24_f * (x**238) + L0x20019a26_f * (x**239) + 
            L0x20019a28_f * (x**240) + L0x20019a2a_f * (x**241) + 
            L0x20019a2c_f * (x**242) + L0x20019a2e_f * (x**243) + 
            L0x20019a30_f * (x**244) + L0x20019a32_f * (x**245) + 
            L0x20019a34_f * (x**246) + L0x20019a36_f * (x**247) + 
            L0x20019a38_f * (x**248) + L0x20019a3a_f * (x**249) + 
            L0x20019a3c_f * (x**250) + L0x20019a3e_f * (x**251) + 
            L0x20019a40_f * (x**252) + L0x20019a42_f * (x**253) + 
            L0x20019a44_f * (x**254) + L0x20019a46_f * (x**255)
          )
          [25570049, x**4 - 8069957],
    (* inp_poly_50 *)
    eqmod (2**32) * (inp_poly_50 * inp_poly_50)
          (
            L0x20019848_f * (x**0) + L0x2001984a_f * (x**1) + 
            L0x2001984c_f * (x**2) + L0x2001984e_f * (x**3) + 
            L0x20019850_f * (x**4) + L0x20019852_f * (x**5) + 
            L0x20019854_f * (x**6) + L0x20019856_f * (x**7) + 
            L0x20019858_f * (x**8) + L0x2001985a_f * (x**9) + 
            L0x2001985c_f * (x**10) + L0x2001985e_f * (x**11) + 
            L0x20019860_f * (x**12) + L0x20019862_f * (x**13) + 
            L0x20019864_f * (x**14) + L0x20019866_f * (x**15) + 
            L0x20019868_f * (x**16) + L0x2001986a_f * (x**17) + 
            L0x2001986c_f * (x**18) + L0x2001986e_f * (x**19) + 
            L0x20019870_f * (x**20) + L0x20019872_f * (x**21) + 
            L0x20019874_f * (x**22) + L0x20019876_f * (x**23) + 
            L0x20019878_f * (x**24) + L0x2001987a_f * (x**25) + 
            L0x2001987c_f * (x**26) + L0x2001987e_f * (x**27) + 
            L0x20019880_f * (x**28) + L0x20019882_f * (x**29) + 
            L0x20019884_f * (x**30) + L0x20019886_f * (x**31) + 
            L0x20019888_f * (x**32) + L0x2001988a_f * (x**33) + 
            L0x2001988c_f * (x**34) + L0x2001988e_f * (x**35) + 
            L0x20019890_f * (x**36) + L0x20019892_f * (x**37) + 
            L0x20019894_f * (x**38) + L0x20019896_f * (x**39) + 
            L0x20019898_f * (x**40) + L0x2001989a_f * (x**41) + 
            L0x2001989c_f * (x**42) + L0x2001989e_f * (x**43) + 
            L0x200198a0_f * (x**44) + L0x200198a2_f * (x**45) + 
            L0x200198a4_f * (x**46) + L0x200198a6_f * (x**47) + 
            L0x200198a8_f * (x**48) + L0x200198aa_f * (x**49) + 
            L0x200198ac_f * (x**50) + L0x200198ae_f * (x**51) + 
            L0x200198b0_f * (x**52) + L0x200198b2_f * (x**53) + 
            L0x200198b4_f * (x**54) + L0x200198b6_f * (x**55) + 
            L0x200198b8_f * (x**56) + L0x200198ba_f * (x**57) + 
            L0x200198bc_f * (x**58) + L0x200198be_f * (x**59) + 
            L0x200198c0_f * (x**60) + L0x200198c2_f * (x**61) + 
            L0x200198c4_f * (x**62) + L0x200198c6_f * (x**63) + 
            L0x200198c8_f * (x**64) + L0x200198ca_f * (x**65) + 
            L0x200198cc_f * (x**66) + L0x200198ce_f * (x**67) + 
            L0x200198d0_f * (x**68) + L0x200198d2_f * (x**69) + 
            L0x200198d4_f * (x**70) + L0x200198d6_f * (x**71) + 
            L0x200198d8_f * (x**72) + L0x200198da_f * (x**73) + 
            L0x200198dc_f * (x**74) + L0x200198de_f * (x**75) + 
            L0x200198e0_f * (x**76) + L0x200198e2_f * (x**77) + 
            L0x200198e4_f * (x**78) + L0x200198e6_f * (x**79) + 
            L0x200198e8_f * (x**80) + L0x200198ea_f * (x**81) + 
            L0x200198ec_f * (x**82) + L0x200198ee_f * (x**83) + 
            L0x200198f0_f * (x**84) + L0x200198f2_f * (x**85) + 
            L0x200198f4_f * (x**86) + L0x200198f6_f * (x**87) + 
            L0x200198f8_f * (x**88) + L0x200198fa_f * (x**89) + 
            L0x200198fc_f * (x**90) + L0x200198fe_f * (x**91) + 
            L0x20019900_f * (x**92) + L0x20019902_f * (x**93) + 
            L0x20019904_f * (x**94) + L0x20019906_f * (x**95) + 
            L0x20019908_f * (x**96) + L0x2001990a_f * (x**97) + 
            L0x2001990c_f * (x**98) + L0x2001990e_f * (x**99) + 
            L0x20019910_f * (x**100) + L0x20019912_f * (x**101) + 
            L0x20019914_f * (x**102) + L0x20019916_f * (x**103) + 
            L0x20019918_f * (x**104) + L0x2001991a_f * (x**105) + 
            L0x2001991c_f * (x**106) + L0x2001991e_f * (x**107) + 
            L0x20019920_f * (x**108) + L0x20019922_f * (x**109) + 
            L0x20019924_f * (x**110) + L0x20019926_f * (x**111) + 
            L0x20019928_f * (x**112) + L0x2001992a_f * (x**113) + 
            L0x2001992c_f * (x**114) + L0x2001992e_f * (x**115) + 
            L0x20019930_f * (x**116) + L0x20019932_f * (x**117) + 
            L0x20019934_f * (x**118) + L0x20019936_f * (x**119) + 
            L0x20019938_f * (x**120) + L0x2001993a_f * (x**121) + 
            L0x2001993c_f * (x**122) + L0x2001993e_f * (x**123) + 
            L0x20019940_f * (x**124) + L0x20019942_f * (x**125) + 
            L0x20019944_f * (x**126) + L0x20019946_f * (x**127) + 
            L0x20019948_f * (x**128) + L0x2001994a_f * (x**129) + 
            L0x2001994c_f * (x**130) + L0x2001994e_f * (x**131) + 
            L0x20019950_f * (x**132) + L0x20019952_f * (x**133) + 
            L0x20019954_f * (x**134) + L0x20019956_f * (x**135) + 
            L0x20019958_f * (x**136) + L0x2001995a_f * (x**137) + 
            L0x2001995c_f * (x**138) + L0x2001995e_f * (x**139) + 
            L0x20019960_f * (x**140) + L0x20019962_f * (x**141) + 
            L0x20019964_f * (x**142) + L0x20019966_f * (x**143) + 
            L0x20019968_f * (x**144) + L0x2001996a_f * (x**145) + 
            L0x2001996c_f * (x**146) + L0x2001996e_f * (x**147) + 
            L0x20019970_f * (x**148) + L0x20019972_f * (x**149) + 
            L0x20019974_f * (x**150) + L0x20019976_f * (x**151) + 
            L0x20019978_f * (x**152) + L0x2001997a_f * (x**153) + 
            L0x2001997c_f * (x**154) + L0x2001997e_f * (x**155) + 
            L0x20019980_f * (x**156) + L0x20019982_f * (x**157) + 
            L0x20019984_f * (x**158) + L0x20019986_f * (x**159) + 
            L0x20019988_f * (x**160) + L0x2001998a_f * (x**161) + 
            L0x2001998c_f * (x**162) + L0x2001998e_f * (x**163) + 
            L0x20019990_f * (x**164) + L0x20019992_f * (x**165) + 
            L0x20019994_f * (x**166) + L0x20019996_f * (x**167) + 
            L0x20019998_f * (x**168) + L0x2001999a_f * (x**169) + 
            L0x2001999c_f * (x**170) + L0x2001999e_f * (x**171) + 
            L0x200199a0_f * (x**172) + L0x200199a2_f * (x**173) + 
            L0x200199a4_f * (x**174) + L0x200199a6_f * (x**175) + 
            L0x200199a8_f * (x**176) + L0x200199aa_f * (x**177) + 
            L0x200199ac_f * (x**178) + L0x200199ae_f * (x**179) + 
            L0x200199b0_f * (x**180) + L0x200199b2_f * (x**181) + 
            L0x200199b4_f * (x**182) + L0x200199b6_f * (x**183) + 
            L0x200199b8_f * (x**184) + L0x200199ba_f * (x**185) + 
            L0x200199bc_f * (x**186) + L0x200199be_f * (x**187) + 
            L0x200199c0_f * (x**188) + L0x200199c2_f * (x**189) + 
            L0x200199c4_f * (x**190) + L0x200199c6_f * (x**191) + 
            L0x200199c8_f * (x**192) + L0x200199ca_f * (x**193) + 
            L0x200199cc_f * (x**194) + L0x200199ce_f * (x**195) + 
            L0x200199d0_f * (x**196) + L0x200199d2_f * (x**197) + 
            L0x200199d4_f * (x**198) + L0x200199d6_f * (x**199) + 
            L0x200199d8_f * (x**200) + L0x200199da_f * (x**201) + 
            L0x200199dc_f * (x**202) + L0x200199de_f * (x**203) + 
            L0x200199e0_f * (x**204) + L0x200199e2_f * (x**205) + 
            L0x200199e4_f * (x**206) + L0x200199e6_f * (x**207) + 
            L0x200199e8_f * (x**208) + L0x200199ea_f * (x**209) + 
            L0x200199ec_f * (x**210) + L0x200199ee_f * (x**211) + 
            L0x200199f0_f * (x**212) + L0x200199f2_f * (x**213) + 
            L0x200199f4_f * (x**214) + L0x200199f6_f * (x**215) + 
            L0x200199f8_f * (x**216) + L0x200199fa_f * (x**217) + 
            L0x200199fc_f * (x**218) + L0x200199fe_f * (x**219) + 
            L0x20019a00_f * (x**220) + L0x20019a02_f * (x**221) + 
            L0x20019a04_f * (x**222) + L0x20019a06_f * (x**223) + 
            L0x20019a08_f * (x**224) + L0x20019a0a_f * (x**225) + 
            L0x20019a0c_f * (x**226) + L0x20019a0e_f * (x**227) + 
            L0x20019a10_f * (x**228) + L0x20019a12_f * (x**229) + 
            L0x20019a14_f * (x**230) + L0x20019a16_f * (x**231) + 
            L0x20019a18_f * (x**232) + L0x20019a1a_f * (x**233) + 
            L0x20019a1c_f * (x**234) + L0x20019a1e_f * (x**235) + 
            L0x20019a20_f * (x**236) + L0x20019a22_f * (x**237) + 
            L0x20019a24_f * (x**238) + L0x20019a26_f * (x**239) + 
            L0x20019a28_f * (x**240) + L0x20019a2a_f * (x**241) + 
            L0x20019a2c_f * (x**242) + L0x20019a2e_f * (x**243) + 
            L0x20019a30_f * (x**244) + L0x20019a32_f * (x**245) + 
            L0x20019a34_f * (x**246) + L0x20019a36_f * (x**247) + 
            L0x20019a38_f * (x**248) + L0x20019a3a_f * (x**249) + 
            L0x20019a3c_f * (x**250) + L0x20019a3e_f * (x**251) + 
            L0x20019a40_f * (x**252) + L0x20019a42_f * (x**253) + 
            L0x20019a44_f * (x**254) + L0x20019a46_f * (x**255)
          )
          [25570049, x**4 - 3627172],
    (* inp_poly_51 *)
    eqmod (2**32) * (inp_poly_51 * inp_poly_51)
          (
            L0x20019848_f * (x**0) + L0x2001984a_f * (x**1) + 
            L0x2001984c_f * (x**2) + L0x2001984e_f * (x**3) + 
            L0x20019850_f * (x**4) + L0x20019852_f * (x**5) + 
            L0x20019854_f * (x**6) + L0x20019856_f * (x**7) + 
            L0x20019858_f * (x**8) + L0x2001985a_f * (x**9) + 
            L0x2001985c_f * (x**10) + L0x2001985e_f * (x**11) + 
            L0x20019860_f * (x**12) + L0x20019862_f * (x**13) + 
            L0x20019864_f * (x**14) + L0x20019866_f * (x**15) + 
            L0x20019868_f * (x**16) + L0x2001986a_f * (x**17) + 
            L0x2001986c_f * (x**18) + L0x2001986e_f * (x**19) + 
            L0x20019870_f * (x**20) + L0x20019872_f * (x**21) + 
            L0x20019874_f * (x**22) + L0x20019876_f * (x**23) + 
            L0x20019878_f * (x**24) + L0x2001987a_f * (x**25) + 
            L0x2001987c_f * (x**26) + L0x2001987e_f * (x**27) + 
            L0x20019880_f * (x**28) + L0x20019882_f * (x**29) + 
            L0x20019884_f * (x**30) + L0x20019886_f * (x**31) + 
            L0x20019888_f * (x**32) + L0x2001988a_f * (x**33) + 
            L0x2001988c_f * (x**34) + L0x2001988e_f * (x**35) + 
            L0x20019890_f * (x**36) + L0x20019892_f * (x**37) + 
            L0x20019894_f * (x**38) + L0x20019896_f * (x**39) + 
            L0x20019898_f * (x**40) + L0x2001989a_f * (x**41) + 
            L0x2001989c_f * (x**42) + L0x2001989e_f * (x**43) + 
            L0x200198a0_f * (x**44) + L0x200198a2_f * (x**45) + 
            L0x200198a4_f * (x**46) + L0x200198a6_f * (x**47) + 
            L0x200198a8_f * (x**48) + L0x200198aa_f * (x**49) + 
            L0x200198ac_f * (x**50) + L0x200198ae_f * (x**51) + 
            L0x200198b0_f * (x**52) + L0x200198b2_f * (x**53) + 
            L0x200198b4_f * (x**54) + L0x200198b6_f * (x**55) + 
            L0x200198b8_f * (x**56) + L0x200198ba_f * (x**57) + 
            L0x200198bc_f * (x**58) + L0x200198be_f * (x**59) + 
            L0x200198c0_f * (x**60) + L0x200198c2_f * (x**61) + 
            L0x200198c4_f * (x**62) + L0x200198c6_f * (x**63) + 
            L0x200198c8_f * (x**64) + L0x200198ca_f * (x**65) + 
            L0x200198cc_f * (x**66) + L0x200198ce_f * (x**67) + 
            L0x200198d0_f * (x**68) + L0x200198d2_f * (x**69) + 
            L0x200198d4_f * (x**70) + L0x200198d6_f * (x**71) + 
            L0x200198d8_f * (x**72) + L0x200198da_f * (x**73) + 
            L0x200198dc_f * (x**74) + L0x200198de_f * (x**75) + 
            L0x200198e0_f * (x**76) + L0x200198e2_f * (x**77) + 
            L0x200198e4_f * (x**78) + L0x200198e6_f * (x**79) + 
            L0x200198e8_f * (x**80) + L0x200198ea_f * (x**81) + 
            L0x200198ec_f * (x**82) + L0x200198ee_f * (x**83) + 
            L0x200198f0_f * (x**84) + L0x200198f2_f * (x**85) + 
            L0x200198f4_f * (x**86) + L0x200198f6_f * (x**87) + 
            L0x200198f8_f * (x**88) + L0x200198fa_f * (x**89) + 
            L0x200198fc_f * (x**90) + L0x200198fe_f * (x**91) + 
            L0x20019900_f * (x**92) + L0x20019902_f * (x**93) + 
            L0x20019904_f * (x**94) + L0x20019906_f * (x**95) + 
            L0x20019908_f * (x**96) + L0x2001990a_f * (x**97) + 
            L0x2001990c_f * (x**98) + L0x2001990e_f * (x**99) + 
            L0x20019910_f * (x**100) + L0x20019912_f * (x**101) + 
            L0x20019914_f * (x**102) + L0x20019916_f * (x**103) + 
            L0x20019918_f * (x**104) + L0x2001991a_f * (x**105) + 
            L0x2001991c_f * (x**106) + L0x2001991e_f * (x**107) + 
            L0x20019920_f * (x**108) + L0x20019922_f * (x**109) + 
            L0x20019924_f * (x**110) + L0x20019926_f * (x**111) + 
            L0x20019928_f * (x**112) + L0x2001992a_f * (x**113) + 
            L0x2001992c_f * (x**114) + L0x2001992e_f * (x**115) + 
            L0x20019930_f * (x**116) + L0x20019932_f * (x**117) + 
            L0x20019934_f * (x**118) + L0x20019936_f * (x**119) + 
            L0x20019938_f * (x**120) + L0x2001993a_f * (x**121) + 
            L0x2001993c_f * (x**122) + L0x2001993e_f * (x**123) + 
            L0x20019940_f * (x**124) + L0x20019942_f * (x**125) + 
            L0x20019944_f * (x**126) + L0x20019946_f * (x**127) + 
            L0x20019948_f * (x**128) + L0x2001994a_f * (x**129) + 
            L0x2001994c_f * (x**130) + L0x2001994e_f * (x**131) + 
            L0x20019950_f * (x**132) + L0x20019952_f * (x**133) + 
            L0x20019954_f * (x**134) + L0x20019956_f * (x**135) + 
            L0x20019958_f * (x**136) + L0x2001995a_f * (x**137) + 
            L0x2001995c_f * (x**138) + L0x2001995e_f * (x**139) + 
            L0x20019960_f * (x**140) + L0x20019962_f * (x**141) + 
            L0x20019964_f * (x**142) + L0x20019966_f * (x**143) + 
            L0x20019968_f * (x**144) + L0x2001996a_f * (x**145) + 
            L0x2001996c_f * (x**146) + L0x2001996e_f * (x**147) + 
            L0x20019970_f * (x**148) + L0x20019972_f * (x**149) + 
            L0x20019974_f * (x**150) + L0x20019976_f * (x**151) + 
            L0x20019978_f * (x**152) + L0x2001997a_f * (x**153) + 
            L0x2001997c_f * (x**154) + L0x2001997e_f * (x**155) + 
            L0x20019980_f * (x**156) + L0x20019982_f * (x**157) + 
            L0x20019984_f * (x**158) + L0x20019986_f * (x**159) + 
            L0x20019988_f * (x**160) + L0x2001998a_f * (x**161) + 
            L0x2001998c_f * (x**162) + L0x2001998e_f * (x**163) + 
            L0x20019990_f * (x**164) + L0x20019992_f * (x**165) + 
            L0x20019994_f * (x**166) + L0x20019996_f * (x**167) + 
            L0x20019998_f * (x**168) + L0x2001999a_f * (x**169) + 
            L0x2001999c_f * (x**170) + L0x2001999e_f * (x**171) + 
            L0x200199a0_f * (x**172) + L0x200199a2_f * (x**173) + 
            L0x200199a4_f * (x**174) + L0x200199a6_f * (x**175) + 
            L0x200199a8_f * (x**176) + L0x200199aa_f * (x**177) + 
            L0x200199ac_f * (x**178) + L0x200199ae_f * (x**179) + 
            L0x200199b0_f * (x**180) + L0x200199b2_f * (x**181) + 
            L0x200199b4_f * (x**182) + L0x200199b6_f * (x**183) + 
            L0x200199b8_f * (x**184) + L0x200199ba_f * (x**185) + 
            L0x200199bc_f * (x**186) + L0x200199be_f * (x**187) + 
            L0x200199c0_f * (x**188) + L0x200199c2_f * (x**189) + 
            L0x200199c4_f * (x**190) + L0x200199c6_f * (x**191) + 
            L0x200199c8_f * (x**192) + L0x200199ca_f * (x**193) + 
            L0x200199cc_f * (x**194) + L0x200199ce_f * (x**195) + 
            L0x200199d0_f * (x**196) + L0x200199d2_f * (x**197) + 
            L0x200199d4_f * (x**198) + L0x200199d6_f * (x**199) + 
            L0x200199d8_f * (x**200) + L0x200199da_f * (x**201) + 
            L0x200199dc_f * (x**202) + L0x200199de_f * (x**203) + 
            L0x200199e0_f * (x**204) + L0x200199e2_f * (x**205) + 
            L0x200199e4_f * (x**206) + L0x200199e6_f * (x**207) + 
            L0x200199e8_f * (x**208) + L0x200199ea_f * (x**209) + 
            L0x200199ec_f * (x**210) + L0x200199ee_f * (x**211) + 
            L0x200199f0_f * (x**212) + L0x200199f2_f * (x**213) + 
            L0x200199f4_f * (x**214) + L0x200199f6_f * (x**215) + 
            L0x200199f8_f * (x**216) + L0x200199fa_f * (x**217) + 
            L0x200199fc_f * (x**218) + L0x200199fe_f * (x**219) + 
            L0x20019a00_f * (x**220) + L0x20019a02_f * (x**221) + 
            L0x20019a04_f * (x**222) + L0x20019a06_f * (x**223) + 
            L0x20019a08_f * (x**224) + L0x20019a0a_f * (x**225) + 
            L0x20019a0c_f * (x**226) + L0x20019a0e_f * (x**227) + 
            L0x20019a10_f * (x**228) + L0x20019a12_f * (x**229) + 
            L0x20019a14_f * (x**230) + L0x20019a16_f * (x**231) + 
            L0x20019a18_f * (x**232) + L0x20019a1a_f * (x**233) + 
            L0x20019a1c_f * (x**234) + L0x20019a1e_f * (x**235) + 
            L0x20019a20_f * (x**236) + L0x20019a22_f * (x**237) + 
            L0x20019a24_f * (x**238) + L0x20019a26_f * (x**239) + 
            L0x20019a28_f * (x**240) + L0x20019a2a_f * (x**241) + 
            L0x20019a2c_f * (x**242) + L0x20019a2e_f * (x**243) + 
            L0x20019a30_f * (x**244) + L0x20019a32_f * (x**245) + 
            L0x20019a34_f * (x**246) + L0x20019a36_f * (x**247) + 
            L0x20019a38_f * (x**248) + L0x20019a3a_f * (x**249) + 
            L0x20019a3c_f * (x**250) + L0x20019a3e_f * (x**251) + 
            L0x20019a40_f * (x**252) + L0x20019a42_f * (x**253) + 
            L0x20019a44_f * (x**254) + L0x20019a46_f * (x**255)
          )
          [25570049, x**4 - 21942877],
    (* inp_poly_52 *)
    eqmod (2**32) * (inp_poly_52 * inp_poly_52)
          (
            L0x20019848_f * (x**0) + L0x2001984a_f * (x**1) + 
            L0x2001984c_f * (x**2) + L0x2001984e_f * (x**3) + 
            L0x20019850_f * (x**4) + L0x20019852_f * (x**5) + 
            L0x20019854_f * (x**6) + L0x20019856_f * (x**7) + 
            L0x20019858_f * (x**8) + L0x2001985a_f * (x**9) + 
            L0x2001985c_f * (x**10) + L0x2001985e_f * (x**11) + 
            L0x20019860_f * (x**12) + L0x20019862_f * (x**13) + 
            L0x20019864_f * (x**14) + L0x20019866_f * (x**15) + 
            L0x20019868_f * (x**16) + L0x2001986a_f * (x**17) + 
            L0x2001986c_f * (x**18) + L0x2001986e_f * (x**19) + 
            L0x20019870_f * (x**20) + L0x20019872_f * (x**21) + 
            L0x20019874_f * (x**22) + L0x20019876_f * (x**23) + 
            L0x20019878_f * (x**24) + L0x2001987a_f * (x**25) + 
            L0x2001987c_f * (x**26) + L0x2001987e_f * (x**27) + 
            L0x20019880_f * (x**28) + L0x20019882_f * (x**29) + 
            L0x20019884_f * (x**30) + L0x20019886_f * (x**31) + 
            L0x20019888_f * (x**32) + L0x2001988a_f * (x**33) + 
            L0x2001988c_f * (x**34) + L0x2001988e_f * (x**35) + 
            L0x20019890_f * (x**36) + L0x20019892_f * (x**37) + 
            L0x20019894_f * (x**38) + L0x20019896_f * (x**39) + 
            L0x20019898_f * (x**40) + L0x2001989a_f * (x**41) + 
            L0x2001989c_f * (x**42) + L0x2001989e_f * (x**43) + 
            L0x200198a0_f * (x**44) + L0x200198a2_f * (x**45) + 
            L0x200198a4_f * (x**46) + L0x200198a6_f * (x**47) + 
            L0x200198a8_f * (x**48) + L0x200198aa_f * (x**49) + 
            L0x200198ac_f * (x**50) + L0x200198ae_f * (x**51) + 
            L0x200198b0_f * (x**52) + L0x200198b2_f * (x**53) + 
            L0x200198b4_f * (x**54) + L0x200198b6_f * (x**55) + 
            L0x200198b8_f * (x**56) + L0x200198ba_f * (x**57) + 
            L0x200198bc_f * (x**58) + L0x200198be_f * (x**59) + 
            L0x200198c0_f * (x**60) + L0x200198c2_f * (x**61) + 
            L0x200198c4_f * (x**62) + L0x200198c6_f * (x**63) + 
            L0x200198c8_f * (x**64) + L0x200198ca_f * (x**65) + 
            L0x200198cc_f * (x**66) + L0x200198ce_f * (x**67) + 
            L0x200198d0_f * (x**68) + L0x200198d2_f * (x**69) + 
            L0x200198d4_f * (x**70) + L0x200198d6_f * (x**71) + 
            L0x200198d8_f * (x**72) + L0x200198da_f * (x**73) + 
            L0x200198dc_f * (x**74) + L0x200198de_f * (x**75) + 
            L0x200198e0_f * (x**76) + L0x200198e2_f * (x**77) + 
            L0x200198e4_f * (x**78) + L0x200198e6_f * (x**79) + 
            L0x200198e8_f * (x**80) + L0x200198ea_f * (x**81) + 
            L0x200198ec_f * (x**82) + L0x200198ee_f * (x**83) + 
            L0x200198f0_f * (x**84) + L0x200198f2_f * (x**85) + 
            L0x200198f4_f * (x**86) + L0x200198f6_f * (x**87) + 
            L0x200198f8_f * (x**88) + L0x200198fa_f * (x**89) + 
            L0x200198fc_f * (x**90) + L0x200198fe_f * (x**91) + 
            L0x20019900_f * (x**92) + L0x20019902_f * (x**93) + 
            L0x20019904_f * (x**94) + L0x20019906_f * (x**95) + 
            L0x20019908_f * (x**96) + L0x2001990a_f * (x**97) + 
            L0x2001990c_f * (x**98) + L0x2001990e_f * (x**99) + 
            L0x20019910_f * (x**100) + L0x20019912_f * (x**101) + 
            L0x20019914_f * (x**102) + L0x20019916_f * (x**103) + 
            L0x20019918_f * (x**104) + L0x2001991a_f * (x**105) + 
            L0x2001991c_f * (x**106) + L0x2001991e_f * (x**107) + 
            L0x20019920_f * (x**108) + L0x20019922_f * (x**109) + 
            L0x20019924_f * (x**110) + L0x20019926_f * (x**111) + 
            L0x20019928_f * (x**112) + L0x2001992a_f * (x**113) + 
            L0x2001992c_f * (x**114) + L0x2001992e_f * (x**115) + 
            L0x20019930_f * (x**116) + L0x20019932_f * (x**117) + 
            L0x20019934_f * (x**118) + L0x20019936_f * (x**119) + 
            L0x20019938_f * (x**120) + L0x2001993a_f * (x**121) + 
            L0x2001993c_f * (x**122) + L0x2001993e_f * (x**123) + 
            L0x20019940_f * (x**124) + L0x20019942_f * (x**125) + 
            L0x20019944_f * (x**126) + L0x20019946_f * (x**127) + 
            L0x20019948_f * (x**128) + L0x2001994a_f * (x**129) + 
            L0x2001994c_f * (x**130) + L0x2001994e_f * (x**131) + 
            L0x20019950_f * (x**132) + L0x20019952_f * (x**133) + 
            L0x20019954_f * (x**134) + L0x20019956_f * (x**135) + 
            L0x20019958_f * (x**136) + L0x2001995a_f * (x**137) + 
            L0x2001995c_f * (x**138) + L0x2001995e_f * (x**139) + 
            L0x20019960_f * (x**140) + L0x20019962_f * (x**141) + 
            L0x20019964_f * (x**142) + L0x20019966_f * (x**143) + 
            L0x20019968_f * (x**144) + L0x2001996a_f * (x**145) + 
            L0x2001996c_f * (x**146) + L0x2001996e_f * (x**147) + 
            L0x20019970_f * (x**148) + L0x20019972_f * (x**149) + 
            L0x20019974_f * (x**150) + L0x20019976_f * (x**151) + 
            L0x20019978_f * (x**152) + L0x2001997a_f * (x**153) + 
            L0x2001997c_f * (x**154) + L0x2001997e_f * (x**155) + 
            L0x20019980_f * (x**156) + L0x20019982_f * (x**157) + 
            L0x20019984_f * (x**158) + L0x20019986_f * (x**159) + 
            L0x20019988_f * (x**160) + L0x2001998a_f * (x**161) + 
            L0x2001998c_f * (x**162) + L0x2001998e_f * (x**163) + 
            L0x20019990_f * (x**164) + L0x20019992_f * (x**165) + 
            L0x20019994_f * (x**166) + L0x20019996_f * (x**167) + 
            L0x20019998_f * (x**168) + L0x2001999a_f * (x**169) + 
            L0x2001999c_f * (x**170) + L0x2001999e_f * (x**171) + 
            L0x200199a0_f * (x**172) + L0x200199a2_f * (x**173) + 
            L0x200199a4_f * (x**174) + L0x200199a6_f * (x**175) + 
            L0x200199a8_f * (x**176) + L0x200199aa_f * (x**177) + 
            L0x200199ac_f * (x**178) + L0x200199ae_f * (x**179) + 
            L0x200199b0_f * (x**180) + L0x200199b2_f * (x**181) + 
            L0x200199b4_f * (x**182) + L0x200199b6_f * (x**183) + 
            L0x200199b8_f * (x**184) + L0x200199ba_f * (x**185) + 
            L0x200199bc_f * (x**186) + L0x200199be_f * (x**187) + 
            L0x200199c0_f * (x**188) + L0x200199c2_f * (x**189) + 
            L0x200199c4_f * (x**190) + L0x200199c6_f * (x**191) + 
            L0x200199c8_f * (x**192) + L0x200199ca_f * (x**193) + 
            L0x200199cc_f * (x**194) + L0x200199ce_f * (x**195) + 
            L0x200199d0_f * (x**196) + L0x200199d2_f * (x**197) + 
            L0x200199d4_f * (x**198) + L0x200199d6_f * (x**199) + 
            L0x200199d8_f * (x**200) + L0x200199da_f * (x**201) + 
            L0x200199dc_f * (x**202) + L0x200199de_f * (x**203) + 
            L0x200199e0_f * (x**204) + L0x200199e2_f * (x**205) + 
            L0x200199e4_f * (x**206) + L0x200199e6_f * (x**207) + 
            L0x200199e8_f * (x**208) + L0x200199ea_f * (x**209) + 
            L0x200199ec_f * (x**210) + L0x200199ee_f * (x**211) + 
            L0x200199f0_f * (x**212) + L0x200199f2_f * (x**213) + 
            L0x200199f4_f * (x**214) + L0x200199f6_f * (x**215) + 
            L0x200199f8_f * (x**216) + L0x200199fa_f * (x**217) + 
            L0x200199fc_f * (x**218) + L0x200199fe_f * (x**219) + 
            L0x20019a00_f * (x**220) + L0x20019a02_f * (x**221) + 
            L0x20019a04_f * (x**222) + L0x20019a06_f * (x**223) + 
            L0x20019a08_f * (x**224) + L0x20019a0a_f * (x**225) + 
            L0x20019a0c_f * (x**226) + L0x20019a0e_f * (x**227) + 
            L0x20019a10_f * (x**228) + L0x20019a12_f * (x**229) + 
            L0x20019a14_f * (x**230) + L0x20019a16_f * (x**231) + 
            L0x20019a18_f * (x**232) + L0x20019a1a_f * (x**233) + 
            L0x20019a1c_f * (x**234) + L0x20019a1e_f * (x**235) + 
            L0x20019a20_f * (x**236) + L0x20019a22_f * (x**237) + 
            L0x20019a24_f * (x**238) + L0x20019a26_f * (x**239) + 
            L0x20019a28_f * (x**240) + L0x20019a2a_f * (x**241) + 
            L0x20019a2c_f * (x**242) + L0x20019a2e_f * (x**243) + 
            L0x20019a30_f * (x**244) + L0x20019a32_f * (x**245) + 
            L0x20019a34_f * (x**246) + L0x20019a36_f * (x**247) + 
            L0x20019a38_f * (x**248) + L0x20019a3a_f * (x**249) + 
            L0x20019a3c_f * (x**250) + L0x20019a3e_f * (x**251) + 
            L0x20019a40_f * (x**252) + L0x20019a42_f * (x**253) + 
            L0x20019a44_f * (x**254) + L0x20019a46_f * (x**255)
          )
          [25570049, x**4 - 4002385],
    (* inp_poly_53 *)
    eqmod (2**32) * (inp_poly_53 * inp_poly_53)
          (
            L0x20019848_f * (x**0) + L0x2001984a_f * (x**1) + 
            L0x2001984c_f * (x**2) + L0x2001984e_f * (x**3) + 
            L0x20019850_f * (x**4) + L0x20019852_f * (x**5) + 
            L0x20019854_f * (x**6) + L0x20019856_f * (x**7) + 
            L0x20019858_f * (x**8) + L0x2001985a_f * (x**9) + 
            L0x2001985c_f * (x**10) + L0x2001985e_f * (x**11) + 
            L0x20019860_f * (x**12) + L0x20019862_f * (x**13) + 
            L0x20019864_f * (x**14) + L0x20019866_f * (x**15) + 
            L0x20019868_f * (x**16) + L0x2001986a_f * (x**17) + 
            L0x2001986c_f * (x**18) + L0x2001986e_f * (x**19) + 
            L0x20019870_f * (x**20) + L0x20019872_f * (x**21) + 
            L0x20019874_f * (x**22) + L0x20019876_f * (x**23) + 
            L0x20019878_f * (x**24) + L0x2001987a_f * (x**25) + 
            L0x2001987c_f * (x**26) + L0x2001987e_f * (x**27) + 
            L0x20019880_f * (x**28) + L0x20019882_f * (x**29) + 
            L0x20019884_f * (x**30) + L0x20019886_f * (x**31) + 
            L0x20019888_f * (x**32) + L0x2001988a_f * (x**33) + 
            L0x2001988c_f * (x**34) + L0x2001988e_f * (x**35) + 
            L0x20019890_f * (x**36) + L0x20019892_f * (x**37) + 
            L0x20019894_f * (x**38) + L0x20019896_f * (x**39) + 
            L0x20019898_f * (x**40) + L0x2001989a_f * (x**41) + 
            L0x2001989c_f * (x**42) + L0x2001989e_f * (x**43) + 
            L0x200198a0_f * (x**44) + L0x200198a2_f * (x**45) + 
            L0x200198a4_f * (x**46) + L0x200198a6_f * (x**47) + 
            L0x200198a8_f * (x**48) + L0x200198aa_f * (x**49) + 
            L0x200198ac_f * (x**50) + L0x200198ae_f * (x**51) + 
            L0x200198b0_f * (x**52) + L0x200198b2_f * (x**53) + 
            L0x200198b4_f * (x**54) + L0x200198b6_f * (x**55) + 
            L0x200198b8_f * (x**56) + L0x200198ba_f * (x**57) + 
            L0x200198bc_f * (x**58) + L0x200198be_f * (x**59) + 
            L0x200198c0_f * (x**60) + L0x200198c2_f * (x**61) + 
            L0x200198c4_f * (x**62) + L0x200198c6_f * (x**63) + 
            L0x200198c8_f * (x**64) + L0x200198ca_f * (x**65) + 
            L0x200198cc_f * (x**66) + L0x200198ce_f * (x**67) + 
            L0x200198d0_f * (x**68) + L0x200198d2_f * (x**69) + 
            L0x200198d4_f * (x**70) + L0x200198d6_f * (x**71) + 
            L0x200198d8_f * (x**72) + L0x200198da_f * (x**73) + 
            L0x200198dc_f * (x**74) + L0x200198de_f * (x**75) + 
            L0x200198e0_f * (x**76) + L0x200198e2_f * (x**77) + 
            L0x200198e4_f * (x**78) + L0x200198e6_f * (x**79) + 
            L0x200198e8_f * (x**80) + L0x200198ea_f * (x**81) + 
            L0x200198ec_f * (x**82) + L0x200198ee_f * (x**83) + 
            L0x200198f0_f * (x**84) + L0x200198f2_f * (x**85) + 
            L0x200198f4_f * (x**86) + L0x200198f6_f * (x**87) + 
            L0x200198f8_f * (x**88) + L0x200198fa_f * (x**89) + 
            L0x200198fc_f * (x**90) + L0x200198fe_f * (x**91) + 
            L0x20019900_f * (x**92) + L0x20019902_f * (x**93) + 
            L0x20019904_f * (x**94) + L0x20019906_f * (x**95) + 
            L0x20019908_f * (x**96) + L0x2001990a_f * (x**97) + 
            L0x2001990c_f * (x**98) + L0x2001990e_f * (x**99) + 
            L0x20019910_f * (x**100) + L0x20019912_f * (x**101) + 
            L0x20019914_f * (x**102) + L0x20019916_f * (x**103) + 
            L0x20019918_f * (x**104) + L0x2001991a_f * (x**105) + 
            L0x2001991c_f * (x**106) + L0x2001991e_f * (x**107) + 
            L0x20019920_f * (x**108) + L0x20019922_f * (x**109) + 
            L0x20019924_f * (x**110) + L0x20019926_f * (x**111) + 
            L0x20019928_f * (x**112) + L0x2001992a_f * (x**113) + 
            L0x2001992c_f * (x**114) + L0x2001992e_f * (x**115) + 
            L0x20019930_f * (x**116) + L0x20019932_f * (x**117) + 
            L0x20019934_f * (x**118) + L0x20019936_f * (x**119) + 
            L0x20019938_f * (x**120) + L0x2001993a_f * (x**121) + 
            L0x2001993c_f * (x**122) + L0x2001993e_f * (x**123) + 
            L0x20019940_f * (x**124) + L0x20019942_f * (x**125) + 
            L0x20019944_f * (x**126) + L0x20019946_f * (x**127) + 
            L0x20019948_f * (x**128) + L0x2001994a_f * (x**129) + 
            L0x2001994c_f * (x**130) + L0x2001994e_f * (x**131) + 
            L0x20019950_f * (x**132) + L0x20019952_f * (x**133) + 
            L0x20019954_f * (x**134) + L0x20019956_f * (x**135) + 
            L0x20019958_f * (x**136) + L0x2001995a_f * (x**137) + 
            L0x2001995c_f * (x**138) + L0x2001995e_f * (x**139) + 
            L0x20019960_f * (x**140) + L0x20019962_f * (x**141) + 
            L0x20019964_f * (x**142) + L0x20019966_f * (x**143) + 
            L0x20019968_f * (x**144) + L0x2001996a_f * (x**145) + 
            L0x2001996c_f * (x**146) + L0x2001996e_f * (x**147) + 
            L0x20019970_f * (x**148) + L0x20019972_f * (x**149) + 
            L0x20019974_f * (x**150) + L0x20019976_f * (x**151) + 
            L0x20019978_f * (x**152) + L0x2001997a_f * (x**153) + 
            L0x2001997c_f * (x**154) + L0x2001997e_f * (x**155) + 
            L0x20019980_f * (x**156) + L0x20019982_f * (x**157) + 
            L0x20019984_f * (x**158) + L0x20019986_f * (x**159) + 
            L0x20019988_f * (x**160) + L0x2001998a_f * (x**161) + 
            L0x2001998c_f * (x**162) + L0x2001998e_f * (x**163) + 
            L0x20019990_f * (x**164) + L0x20019992_f * (x**165) + 
            L0x20019994_f * (x**166) + L0x20019996_f * (x**167) + 
            L0x20019998_f * (x**168) + L0x2001999a_f * (x**169) + 
            L0x2001999c_f * (x**170) + L0x2001999e_f * (x**171) + 
            L0x200199a0_f * (x**172) + L0x200199a2_f * (x**173) + 
            L0x200199a4_f * (x**174) + L0x200199a6_f * (x**175) + 
            L0x200199a8_f * (x**176) + L0x200199aa_f * (x**177) + 
            L0x200199ac_f * (x**178) + L0x200199ae_f * (x**179) + 
            L0x200199b0_f * (x**180) + L0x200199b2_f * (x**181) + 
            L0x200199b4_f * (x**182) + L0x200199b6_f * (x**183) + 
            L0x200199b8_f * (x**184) + L0x200199ba_f * (x**185) + 
            L0x200199bc_f * (x**186) + L0x200199be_f * (x**187) + 
            L0x200199c0_f * (x**188) + L0x200199c2_f * (x**189) + 
            L0x200199c4_f * (x**190) + L0x200199c6_f * (x**191) + 
            L0x200199c8_f * (x**192) + L0x200199ca_f * (x**193) + 
            L0x200199cc_f * (x**194) + L0x200199ce_f * (x**195) + 
            L0x200199d0_f * (x**196) + L0x200199d2_f * (x**197) + 
            L0x200199d4_f * (x**198) + L0x200199d6_f * (x**199) + 
            L0x200199d8_f * (x**200) + L0x200199da_f * (x**201) + 
            L0x200199dc_f * (x**202) + L0x200199de_f * (x**203) + 
            L0x200199e0_f * (x**204) + L0x200199e2_f * (x**205) + 
            L0x200199e4_f * (x**206) + L0x200199e6_f * (x**207) + 
            L0x200199e8_f * (x**208) + L0x200199ea_f * (x**209) + 
            L0x200199ec_f * (x**210) + L0x200199ee_f * (x**211) + 
            L0x200199f0_f * (x**212) + L0x200199f2_f * (x**213) + 
            L0x200199f4_f * (x**214) + L0x200199f6_f * (x**215) + 
            L0x200199f8_f * (x**216) + L0x200199fa_f * (x**217) + 
            L0x200199fc_f * (x**218) + L0x200199fe_f * (x**219) + 
            L0x20019a00_f * (x**220) + L0x20019a02_f * (x**221) + 
            L0x20019a04_f * (x**222) + L0x20019a06_f * (x**223) + 
            L0x20019a08_f * (x**224) + L0x20019a0a_f * (x**225) + 
            L0x20019a0c_f * (x**226) + L0x20019a0e_f * (x**227) + 
            L0x20019a10_f * (x**228) + L0x20019a12_f * (x**229) + 
            L0x20019a14_f * (x**230) + L0x20019a16_f * (x**231) + 
            L0x20019a18_f * (x**232) + L0x20019a1a_f * (x**233) + 
            L0x20019a1c_f * (x**234) + L0x20019a1e_f * (x**235) + 
            L0x20019a20_f * (x**236) + L0x20019a22_f * (x**237) + 
            L0x20019a24_f * (x**238) + L0x20019a26_f * (x**239) + 
            L0x20019a28_f * (x**240) + L0x20019a2a_f * (x**241) + 
            L0x20019a2c_f * (x**242) + L0x20019a2e_f * (x**243) + 
            L0x20019a30_f * (x**244) + L0x20019a32_f * (x**245) + 
            L0x20019a34_f * (x**246) + L0x20019a36_f * (x**247) + 
            L0x20019a38_f * (x**248) + L0x20019a3a_f * (x**249) + 
            L0x20019a3c_f * (x**250) + L0x20019a3e_f * (x**251) + 
            L0x20019a40_f * (x**252) + L0x20019a42_f * (x**253) + 
            L0x20019a44_f * (x**254) + L0x20019a46_f * (x**255)
          )
          [25570049, x**4 - 21567664],
    (* inp_poly_54 *)
    eqmod (2**32) * (inp_poly_54 * inp_poly_54)
          (
            L0x20019848_f * (x**0) + L0x2001984a_f * (x**1) + 
            L0x2001984c_f * (x**2) + L0x2001984e_f * (x**3) + 
            L0x20019850_f * (x**4) + L0x20019852_f * (x**5) + 
            L0x20019854_f * (x**6) + L0x20019856_f * (x**7) + 
            L0x20019858_f * (x**8) + L0x2001985a_f * (x**9) + 
            L0x2001985c_f * (x**10) + L0x2001985e_f * (x**11) + 
            L0x20019860_f * (x**12) + L0x20019862_f * (x**13) + 
            L0x20019864_f * (x**14) + L0x20019866_f * (x**15) + 
            L0x20019868_f * (x**16) + L0x2001986a_f * (x**17) + 
            L0x2001986c_f * (x**18) + L0x2001986e_f * (x**19) + 
            L0x20019870_f * (x**20) + L0x20019872_f * (x**21) + 
            L0x20019874_f * (x**22) + L0x20019876_f * (x**23) + 
            L0x20019878_f * (x**24) + L0x2001987a_f * (x**25) + 
            L0x2001987c_f * (x**26) + L0x2001987e_f * (x**27) + 
            L0x20019880_f * (x**28) + L0x20019882_f * (x**29) + 
            L0x20019884_f * (x**30) + L0x20019886_f * (x**31) + 
            L0x20019888_f * (x**32) + L0x2001988a_f * (x**33) + 
            L0x2001988c_f * (x**34) + L0x2001988e_f * (x**35) + 
            L0x20019890_f * (x**36) + L0x20019892_f * (x**37) + 
            L0x20019894_f * (x**38) + L0x20019896_f * (x**39) + 
            L0x20019898_f * (x**40) + L0x2001989a_f * (x**41) + 
            L0x2001989c_f * (x**42) + L0x2001989e_f * (x**43) + 
            L0x200198a0_f * (x**44) + L0x200198a2_f * (x**45) + 
            L0x200198a4_f * (x**46) + L0x200198a6_f * (x**47) + 
            L0x200198a8_f * (x**48) + L0x200198aa_f * (x**49) + 
            L0x200198ac_f * (x**50) + L0x200198ae_f * (x**51) + 
            L0x200198b0_f * (x**52) + L0x200198b2_f * (x**53) + 
            L0x200198b4_f * (x**54) + L0x200198b6_f * (x**55) + 
            L0x200198b8_f * (x**56) + L0x200198ba_f * (x**57) + 
            L0x200198bc_f * (x**58) + L0x200198be_f * (x**59) + 
            L0x200198c0_f * (x**60) + L0x200198c2_f * (x**61) + 
            L0x200198c4_f * (x**62) + L0x200198c6_f * (x**63) + 
            L0x200198c8_f * (x**64) + L0x200198ca_f * (x**65) + 
            L0x200198cc_f * (x**66) + L0x200198ce_f * (x**67) + 
            L0x200198d0_f * (x**68) + L0x200198d2_f * (x**69) + 
            L0x200198d4_f * (x**70) + L0x200198d6_f * (x**71) + 
            L0x200198d8_f * (x**72) + L0x200198da_f * (x**73) + 
            L0x200198dc_f * (x**74) + L0x200198de_f * (x**75) + 
            L0x200198e0_f * (x**76) + L0x200198e2_f * (x**77) + 
            L0x200198e4_f * (x**78) + L0x200198e6_f * (x**79) + 
            L0x200198e8_f * (x**80) + L0x200198ea_f * (x**81) + 
            L0x200198ec_f * (x**82) + L0x200198ee_f * (x**83) + 
            L0x200198f0_f * (x**84) + L0x200198f2_f * (x**85) + 
            L0x200198f4_f * (x**86) + L0x200198f6_f * (x**87) + 
            L0x200198f8_f * (x**88) + L0x200198fa_f * (x**89) + 
            L0x200198fc_f * (x**90) + L0x200198fe_f * (x**91) + 
            L0x20019900_f * (x**92) + L0x20019902_f * (x**93) + 
            L0x20019904_f * (x**94) + L0x20019906_f * (x**95) + 
            L0x20019908_f * (x**96) + L0x2001990a_f * (x**97) + 
            L0x2001990c_f * (x**98) + L0x2001990e_f * (x**99) + 
            L0x20019910_f * (x**100) + L0x20019912_f * (x**101) + 
            L0x20019914_f * (x**102) + L0x20019916_f * (x**103) + 
            L0x20019918_f * (x**104) + L0x2001991a_f * (x**105) + 
            L0x2001991c_f * (x**106) + L0x2001991e_f * (x**107) + 
            L0x20019920_f * (x**108) + L0x20019922_f * (x**109) + 
            L0x20019924_f * (x**110) + L0x20019926_f * (x**111) + 
            L0x20019928_f * (x**112) + L0x2001992a_f * (x**113) + 
            L0x2001992c_f * (x**114) + L0x2001992e_f * (x**115) + 
            L0x20019930_f * (x**116) + L0x20019932_f * (x**117) + 
            L0x20019934_f * (x**118) + L0x20019936_f * (x**119) + 
            L0x20019938_f * (x**120) + L0x2001993a_f * (x**121) + 
            L0x2001993c_f * (x**122) + L0x2001993e_f * (x**123) + 
            L0x20019940_f * (x**124) + L0x20019942_f * (x**125) + 
            L0x20019944_f * (x**126) + L0x20019946_f * (x**127) + 
            L0x20019948_f * (x**128) + L0x2001994a_f * (x**129) + 
            L0x2001994c_f * (x**130) + L0x2001994e_f * (x**131) + 
            L0x20019950_f * (x**132) + L0x20019952_f * (x**133) + 
            L0x20019954_f * (x**134) + L0x20019956_f * (x**135) + 
            L0x20019958_f * (x**136) + L0x2001995a_f * (x**137) + 
            L0x2001995c_f * (x**138) + L0x2001995e_f * (x**139) + 
            L0x20019960_f * (x**140) + L0x20019962_f * (x**141) + 
            L0x20019964_f * (x**142) + L0x20019966_f * (x**143) + 
            L0x20019968_f * (x**144) + L0x2001996a_f * (x**145) + 
            L0x2001996c_f * (x**146) + L0x2001996e_f * (x**147) + 
            L0x20019970_f * (x**148) + L0x20019972_f * (x**149) + 
            L0x20019974_f * (x**150) + L0x20019976_f * (x**151) + 
            L0x20019978_f * (x**152) + L0x2001997a_f * (x**153) + 
            L0x2001997c_f * (x**154) + L0x2001997e_f * (x**155) + 
            L0x20019980_f * (x**156) + L0x20019982_f * (x**157) + 
            L0x20019984_f * (x**158) + L0x20019986_f * (x**159) + 
            L0x20019988_f * (x**160) + L0x2001998a_f * (x**161) + 
            L0x2001998c_f * (x**162) + L0x2001998e_f * (x**163) + 
            L0x20019990_f * (x**164) + L0x20019992_f * (x**165) + 
            L0x20019994_f * (x**166) + L0x20019996_f * (x**167) + 
            L0x20019998_f * (x**168) + L0x2001999a_f * (x**169) + 
            L0x2001999c_f * (x**170) + L0x2001999e_f * (x**171) + 
            L0x200199a0_f * (x**172) + L0x200199a2_f * (x**173) + 
            L0x200199a4_f * (x**174) + L0x200199a6_f * (x**175) + 
            L0x200199a8_f * (x**176) + L0x200199aa_f * (x**177) + 
            L0x200199ac_f * (x**178) + L0x200199ae_f * (x**179) + 
            L0x200199b0_f * (x**180) + L0x200199b2_f * (x**181) + 
            L0x200199b4_f * (x**182) + L0x200199b6_f * (x**183) + 
            L0x200199b8_f * (x**184) + L0x200199ba_f * (x**185) + 
            L0x200199bc_f * (x**186) + L0x200199be_f * (x**187) + 
            L0x200199c0_f * (x**188) + L0x200199c2_f * (x**189) + 
            L0x200199c4_f * (x**190) + L0x200199c6_f * (x**191) + 
            L0x200199c8_f * (x**192) + L0x200199ca_f * (x**193) + 
            L0x200199cc_f * (x**194) + L0x200199ce_f * (x**195) + 
            L0x200199d0_f * (x**196) + L0x200199d2_f * (x**197) + 
            L0x200199d4_f * (x**198) + L0x200199d6_f * (x**199) + 
            L0x200199d8_f * (x**200) + L0x200199da_f * (x**201) + 
            L0x200199dc_f * (x**202) + L0x200199de_f * (x**203) + 
            L0x200199e0_f * (x**204) + L0x200199e2_f * (x**205) + 
            L0x200199e4_f * (x**206) + L0x200199e6_f * (x**207) + 
            L0x200199e8_f * (x**208) + L0x200199ea_f * (x**209) + 
            L0x200199ec_f * (x**210) + L0x200199ee_f * (x**211) + 
            L0x200199f0_f * (x**212) + L0x200199f2_f * (x**213) + 
            L0x200199f4_f * (x**214) + L0x200199f6_f * (x**215) + 
            L0x200199f8_f * (x**216) + L0x200199fa_f * (x**217) + 
            L0x200199fc_f * (x**218) + L0x200199fe_f * (x**219) + 
            L0x20019a00_f * (x**220) + L0x20019a02_f * (x**221) + 
            L0x20019a04_f * (x**222) + L0x20019a06_f * (x**223) + 
            L0x20019a08_f * (x**224) + L0x20019a0a_f * (x**225) + 
            L0x20019a0c_f * (x**226) + L0x20019a0e_f * (x**227) + 
            L0x20019a10_f * (x**228) + L0x20019a12_f * (x**229) + 
            L0x20019a14_f * (x**230) + L0x20019a16_f * (x**231) + 
            L0x20019a18_f * (x**232) + L0x20019a1a_f * (x**233) + 
            L0x20019a1c_f * (x**234) + L0x20019a1e_f * (x**235) + 
            L0x20019a20_f * (x**236) + L0x20019a22_f * (x**237) + 
            L0x20019a24_f * (x**238) + L0x20019a26_f * (x**239) + 
            L0x20019a28_f * (x**240) + L0x20019a2a_f * (x**241) + 
            L0x20019a2c_f * (x**242) + L0x20019a2e_f * (x**243) + 
            L0x20019a30_f * (x**244) + L0x20019a32_f * (x**245) + 
            L0x20019a34_f * (x**246) + L0x20019a36_f * (x**247) + 
            L0x20019a38_f * (x**248) + L0x20019a3a_f * (x**249) + 
            L0x20019a3c_f * (x**250) + L0x20019a3e_f * (x**251) + 
            L0x20019a40_f * (x**252) + L0x20019a42_f * (x**253) + 
            L0x20019a44_f * (x**254) + L0x20019a46_f * (x**255)
          )
          [25570049, x**4 - 9845387],
    (* inp_poly_55 *)
    eqmod (2**32) * (inp_poly_55 * inp_poly_55)
          (
            L0x20019848_f * (x**0) + L0x2001984a_f * (x**1) + 
            L0x2001984c_f * (x**2) + L0x2001984e_f * (x**3) + 
            L0x20019850_f * (x**4) + L0x20019852_f * (x**5) + 
            L0x20019854_f * (x**6) + L0x20019856_f * (x**7) + 
            L0x20019858_f * (x**8) + L0x2001985a_f * (x**9) + 
            L0x2001985c_f * (x**10) + L0x2001985e_f * (x**11) + 
            L0x20019860_f * (x**12) + L0x20019862_f * (x**13) + 
            L0x20019864_f * (x**14) + L0x20019866_f * (x**15) + 
            L0x20019868_f * (x**16) + L0x2001986a_f * (x**17) + 
            L0x2001986c_f * (x**18) + L0x2001986e_f * (x**19) + 
            L0x20019870_f * (x**20) + L0x20019872_f * (x**21) + 
            L0x20019874_f * (x**22) + L0x20019876_f * (x**23) + 
            L0x20019878_f * (x**24) + L0x2001987a_f * (x**25) + 
            L0x2001987c_f * (x**26) + L0x2001987e_f * (x**27) + 
            L0x20019880_f * (x**28) + L0x20019882_f * (x**29) + 
            L0x20019884_f * (x**30) + L0x20019886_f * (x**31) + 
            L0x20019888_f * (x**32) + L0x2001988a_f * (x**33) + 
            L0x2001988c_f * (x**34) + L0x2001988e_f * (x**35) + 
            L0x20019890_f * (x**36) + L0x20019892_f * (x**37) + 
            L0x20019894_f * (x**38) + L0x20019896_f * (x**39) + 
            L0x20019898_f * (x**40) + L0x2001989a_f * (x**41) + 
            L0x2001989c_f * (x**42) + L0x2001989e_f * (x**43) + 
            L0x200198a0_f * (x**44) + L0x200198a2_f * (x**45) + 
            L0x200198a4_f * (x**46) + L0x200198a6_f * (x**47) + 
            L0x200198a8_f * (x**48) + L0x200198aa_f * (x**49) + 
            L0x200198ac_f * (x**50) + L0x200198ae_f * (x**51) + 
            L0x200198b0_f * (x**52) + L0x200198b2_f * (x**53) + 
            L0x200198b4_f * (x**54) + L0x200198b6_f * (x**55) + 
            L0x200198b8_f * (x**56) + L0x200198ba_f * (x**57) + 
            L0x200198bc_f * (x**58) + L0x200198be_f * (x**59) + 
            L0x200198c0_f * (x**60) + L0x200198c2_f * (x**61) + 
            L0x200198c4_f * (x**62) + L0x200198c6_f * (x**63) + 
            L0x200198c8_f * (x**64) + L0x200198ca_f * (x**65) + 
            L0x200198cc_f * (x**66) + L0x200198ce_f * (x**67) + 
            L0x200198d0_f * (x**68) + L0x200198d2_f * (x**69) + 
            L0x200198d4_f * (x**70) + L0x200198d6_f * (x**71) + 
            L0x200198d8_f * (x**72) + L0x200198da_f * (x**73) + 
            L0x200198dc_f * (x**74) + L0x200198de_f * (x**75) + 
            L0x200198e0_f * (x**76) + L0x200198e2_f * (x**77) + 
            L0x200198e4_f * (x**78) + L0x200198e6_f * (x**79) + 
            L0x200198e8_f * (x**80) + L0x200198ea_f * (x**81) + 
            L0x200198ec_f * (x**82) + L0x200198ee_f * (x**83) + 
            L0x200198f0_f * (x**84) + L0x200198f2_f * (x**85) + 
            L0x200198f4_f * (x**86) + L0x200198f6_f * (x**87) + 
            L0x200198f8_f * (x**88) + L0x200198fa_f * (x**89) + 
            L0x200198fc_f * (x**90) + L0x200198fe_f * (x**91) + 
            L0x20019900_f * (x**92) + L0x20019902_f * (x**93) + 
            L0x20019904_f * (x**94) + L0x20019906_f * (x**95) + 
            L0x20019908_f * (x**96) + L0x2001990a_f * (x**97) + 
            L0x2001990c_f * (x**98) + L0x2001990e_f * (x**99) + 
            L0x20019910_f * (x**100) + L0x20019912_f * (x**101) + 
            L0x20019914_f * (x**102) + L0x20019916_f * (x**103) + 
            L0x20019918_f * (x**104) + L0x2001991a_f * (x**105) + 
            L0x2001991c_f * (x**106) + L0x2001991e_f * (x**107) + 
            L0x20019920_f * (x**108) + L0x20019922_f * (x**109) + 
            L0x20019924_f * (x**110) + L0x20019926_f * (x**111) + 
            L0x20019928_f * (x**112) + L0x2001992a_f * (x**113) + 
            L0x2001992c_f * (x**114) + L0x2001992e_f * (x**115) + 
            L0x20019930_f * (x**116) + L0x20019932_f * (x**117) + 
            L0x20019934_f * (x**118) + L0x20019936_f * (x**119) + 
            L0x20019938_f * (x**120) + L0x2001993a_f * (x**121) + 
            L0x2001993c_f * (x**122) + L0x2001993e_f * (x**123) + 
            L0x20019940_f * (x**124) + L0x20019942_f * (x**125) + 
            L0x20019944_f * (x**126) + L0x20019946_f * (x**127) + 
            L0x20019948_f * (x**128) + L0x2001994a_f * (x**129) + 
            L0x2001994c_f * (x**130) + L0x2001994e_f * (x**131) + 
            L0x20019950_f * (x**132) + L0x20019952_f * (x**133) + 
            L0x20019954_f * (x**134) + L0x20019956_f * (x**135) + 
            L0x20019958_f * (x**136) + L0x2001995a_f * (x**137) + 
            L0x2001995c_f * (x**138) + L0x2001995e_f * (x**139) + 
            L0x20019960_f * (x**140) + L0x20019962_f * (x**141) + 
            L0x20019964_f * (x**142) + L0x20019966_f * (x**143) + 
            L0x20019968_f * (x**144) + L0x2001996a_f * (x**145) + 
            L0x2001996c_f * (x**146) + L0x2001996e_f * (x**147) + 
            L0x20019970_f * (x**148) + L0x20019972_f * (x**149) + 
            L0x20019974_f * (x**150) + L0x20019976_f * (x**151) + 
            L0x20019978_f * (x**152) + L0x2001997a_f * (x**153) + 
            L0x2001997c_f * (x**154) + L0x2001997e_f * (x**155) + 
            L0x20019980_f * (x**156) + L0x20019982_f * (x**157) + 
            L0x20019984_f * (x**158) + L0x20019986_f * (x**159) + 
            L0x20019988_f * (x**160) + L0x2001998a_f * (x**161) + 
            L0x2001998c_f * (x**162) + L0x2001998e_f * (x**163) + 
            L0x20019990_f * (x**164) + L0x20019992_f * (x**165) + 
            L0x20019994_f * (x**166) + L0x20019996_f * (x**167) + 
            L0x20019998_f * (x**168) + L0x2001999a_f * (x**169) + 
            L0x2001999c_f * (x**170) + L0x2001999e_f * (x**171) + 
            L0x200199a0_f * (x**172) + L0x200199a2_f * (x**173) + 
            L0x200199a4_f * (x**174) + L0x200199a6_f * (x**175) + 
            L0x200199a8_f * (x**176) + L0x200199aa_f * (x**177) + 
            L0x200199ac_f * (x**178) + L0x200199ae_f * (x**179) + 
            L0x200199b0_f * (x**180) + L0x200199b2_f * (x**181) + 
            L0x200199b4_f * (x**182) + L0x200199b6_f * (x**183) + 
            L0x200199b8_f * (x**184) + L0x200199ba_f * (x**185) + 
            L0x200199bc_f * (x**186) + L0x200199be_f * (x**187) + 
            L0x200199c0_f * (x**188) + L0x200199c2_f * (x**189) + 
            L0x200199c4_f * (x**190) + L0x200199c6_f * (x**191) + 
            L0x200199c8_f * (x**192) + L0x200199ca_f * (x**193) + 
            L0x200199cc_f * (x**194) + L0x200199ce_f * (x**195) + 
            L0x200199d0_f * (x**196) + L0x200199d2_f * (x**197) + 
            L0x200199d4_f * (x**198) + L0x200199d6_f * (x**199) + 
            L0x200199d8_f * (x**200) + L0x200199da_f * (x**201) + 
            L0x200199dc_f * (x**202) + L0x200199de_f * (x**203) + 
            L0x200199e0_f * (x**204) + L0x200199e2_f * (x**205) + 
            L0x200199e4_f * (x**206) + L0x200199e6_f * (x**207) + 
            L0x200199e8_f * (x**208) + L0x200199ea_f * (x**209) + 
            L0x200199ec_f * (x**210) + L0x200199ee_f * (x**211) + 
            L0x200199f0_f * (x**212) + L0x200199f2_f * (x**213) + 
            L0x200199f4_f * (x**214) + L0x200199f6_f * (x**215) + 
            L0x200199f8_f * (x**216) + L0x200199fa_f * (x**217) + 
            L0x200199fc_f * (x**218) + L0x200199fe_f * (x**219) + 
            L0x20019a00_f * (x**220) + L0x20019a02_f * (x**221) + 
            L0x20019a04_f * (x**222) + L0x20019a06_f * (x**223) + 
            L0x20019a08_f * (x**224) + L0x20019a0a_f * (x**225) + 
            L0x20019a0c_f * (x**226) + L0x20019a0e_f * (x**227) + 
            L0x20019a10_f * (x**228) + L0x20019a12_f * (x**229) + 
            L0x20019a14_f * (x**230) + L0x20019a16_f * (x**231) + 
            L0x20019a18_f * (x**232) + L0x20019a1a_f * (x**233) + 
            L0x20019a1c_f * (x**234) + L0x20019a1e_f * (x**235) + 
            L0x20019a20_f * (x**236) + L0x20019a22_f * (x**237) + 
            L0x20019a24_f * (x**238) + L0x20019a26_f * (x**239) + 
            L0x20019a28_f * (x**240) + L0x20019a2a_f * (x**241) + 
            L0x20019a2c_f * (x**242) + L0x20019a2e_f * (x**243) + 
            L0x20019a30_f * (x**244) + L0x20019a32_f * (x**245) + 
            L0x20019a34_f * (x**246) + L0x20019a36_f * (x**247) + 
            L0x20019a38_f * (x**248) + L0x20019a3a_f * (x**249) + 
            L0x20019a3c_f * (x**250) + L0x20019a3e_f * (x**251) + 
            L0x20019a40_f * (x**252) + L0x20019a42_f * (x**253) + 
            L0x20019a44_f * (x**254) + L0x20019a46_f * (x**255)
          )
          [25570049, x**4 - 15724662]
  ] prove with [cuts [68]]
  &&
  true
;

cut (* 85 *)
  true && true;

(* slice 7 *)
assume (* instantiating y_0's *)
  and [
    y_0_56 = 1, y_0_57 = 1, y_0_58 = 1, y_0_59 = 1, 
    y_0_60 = 1, y_0_61 = 1, y_0_62 = 1, y_0_63 = 1
  ] && true;
cut (* 86 *)
  and [
    (* inp_poly_56 *)
    eqmod (2**32) * (inp_poly_56 * inp_poly_56)
          (
            L0x20019848_f * (x**0) + L0x2001984a_f * (x**1) + 
            L0x2001984c_f * (x**2) + L0x2001984e_f * (x**3) + 
            L0x20019850_f * (x**4) + L0x20019852_f * (x**5) + 
            L0x20019854_f * (x**6) + L0x20019856_f * (x**7) + 
            L0x20019858_f * (x**8) + L0x2001985a_f * (x**9) + 
            L0x2001985c_f * (x**10) + L0x2001985e_f * (x**11) + 
            L0x20019860_f * (x**12) + L0x20019862_f * (x**13) + 
            L0x20019864_f * (x**14) + L0x20019866_f * (x**15) + 
            L0x20019868_f * (x**16) + L0x2001986a_f * (x**17) + 
            L0x2001986c_f * (x**18) + L0x2001986e_f * (x**19) + 
            L0x20019870_f * (x**20) + L0x20019872_f * (x**21) + 
            L0x20019874_f * (x**22) + L0x20019876_f * (x**23) + 
            L0x20019878_f * (x**24) + L0x2001987a_f * (x**25) + 
            L0x2001987c_f * (x**26) + L0x2001987e_f * (x**27) + 
            L0x20019880_f * (x**28) + L0x20019882_f * (x**29) + 
            L0x20019884_f * (x**30) + L0x20019886_f * (x**31) + 
            L0x20019888_f * (x**32) + L0x2001988a_f * (x**33) + 
            L0x2001988c_f * (x**34) + L0x2001988e_f * (x**35) + 
            L0x20019890_f * (x**36) + L0x20019892_f * (x**37) + 
            L0x20019894_f * (x**38) + L0x20019896_f * (x**39) + 
            L0x20019898_f * (x**40) + L0x2001989a_f * (x**41) + 
            L0x2001989c_f * (x**42) + L0x2001989e_f * (x**43) + 
            L0x200198a0_f * (x**44) + L0x200198a2_f * (x**45) + 
            L0x200198a4_f * (x**46) + L0x200198a6_f * (x**47) + 
            L0x200198a8_f * (x**48) + L0x200198aa_f * (x**49) + 
            L0x200198ac_f * (x**50) + L0x200198ae_f * (x**51) + 
            L0x200198b0_f * (x**52) + L0x200198b2_f * (x**53) + 
            L0x200198b4_f * (x**54) + L0x200198b6_f * (x**55) + 
            L0x200198b8_f * (x**56) + L0x200198ba_f * (x**57) + 
            L0x200198bc_f * (x**58) + L0x200198be_f * (x**59) + 
            L0x200198c0_f * (x**60) + L0x200198c2_f * (x**61) + 
            L0x200198c4_f * (x**62) + L0x200198c6_f * (x**63) + 
            L0x200198c8_f * (x**64) + L0x200198ca_f * (x**65) + 
            L0x200198cc_f * (x**66) + L0x200198ce_f * (x**67) + 
            L0x200198d0_f * (x**68) + L0x200198d2_f * (x**69) + 
            L0x200198d4_f * (x**70) + L0x200198d6_f * (x**71) + 
            L0x200198d8_f * (x**72) + L0x200198da_f * (x**73) + 
            L0x200198dc_f * (x**74) + L0x200198de_f * (x**75) + 
            L0x200198e0_f * (x**76) + L0x200198e2_f * (x**77) + 
            L0x200198e4_f * (x**78) + L0x200198e6_f * (x**79) + 
            L0x200198e8_f * (x**80) + L0x200198ea_f * (x**81) + 
            L0x200198ec_f * (x**82) + L0x200198ee_f * (x**83) + 
            L0x200198f0_f * (x**84) + L0x200198f2_f * (x**85) + 
            L0x200198f4_f * (x**86) + L0x200198f6_f * (x**87) + 
            L0x200198f8_f * (x**88) + L0x200198fa_f * (x**89) + 
            L0x200198fc_f * (x**90) + L0x200198fe_f * (x**91) + 
            L0x20019900_f * (x**92) + L0x20019902_f * (x**93) + 
            L0x20019904_f * (x**94) + L0x20019906_f * (x**95) + 
            L0x20019908_f * (x**96) + L0x2001990a_f * (x**97) + 
            L0x2001990c_f * (x**98) + L0x2001990e_f * (x**99) + 
            L0x20019910_f * (x**100) + L0x20019912_f * (x**101) + 
            L0x20019914_f * (x**102) + L0x20019916_f * (x**103) + 
            L0x20019918_f * (x**104) + L0x2001991a_f * (x**105) + 
            L0x2001991c_f * (x**106) + L0x2001991e_f * (x**107) + 
            L0x20019920_f * (x**108) + L0x20019922_f * (x**109) + 
            L0x20019924_f * (x**110) + L0x20019926_f * (x**111) + 
            L0x20019928_f * (x**112) + L0x2001992a_f * (x**113) + 
            L0x2001992c_f * (x**114) + L0x2001992e_f * (x**115) + 
            L0x20019930_f * (x**116) + L0x20019932_f * (x**117) + 
            L0x20019934_f * (x**118) + L0x20019936_f * (x**119) + 
            L0x20019938_f * (x**120) + L0x2001993a_f * (x**121) + 
            L0x2001993c_f * (x**122) + L0x2001993e_f * (x**123) + 
            L0x20019940_f * (x**124) + L0x20019942_f * (x**125) + 
            L0x20019944_f * (x**126) + L0x20019946_f * (x**127) + 
            L0x20019948_f * (x**128) + L0x2001994a_f * (x**129) + 
            L0x2001994c_f * (x**130) + L0x2001994e_f * (x**131) + 
            L0x20019950_f * (x**132) + L0x20019952_f * (x**133) + 
            L0x20019954_f * (x**134) + L0x20019956_f * (x**135) + 
            L0x20019958_f * (x**136) + L0x2001995a_f * (x**137) + 
            L0x2001995c_f * (x**138) + L0x2001995e_f * (x**139) + 
            L0x20019960_f * (x**140) + L0x20019962_f * (x**141) + 
            L0x20019964_f * (x**142) + L0x20019966_f * (x**143) + 
            L0x20019968_f * (x**144) + L0x2001996a_f * (x**145) + 
            L0x2001996c_f * (x**146) + L0x2001996e_f * (x**147) + 
            L0x20019970_f * (x**148) + L0x20019972_f * (x**149) + 
            L0x20019974_f * (x**150) + L0x20019976_f * (x**151) + 
            L0x20019978_f * (x**152) + L0x2001997a_f * (x**153) + 
            L0x2001997c_f * (x**154) + L0x2001997e_f * (x**155) + 
            L0x20019980_f * (x**156) + L0x20019982_f * (x**157) + 
            L0x20019984_f * (x**158) + L0x20019986_f * (x**159) + 
            L0x20019988_f * (x**160) + L0x2001998a_f * (x**161) + 
            L0x2001998c_f * (x**162) + L0x2001998e_f * (x**163) + 
            L0x20019990_f * (x**164) + L0x20019992_f * (x**165) + 
            L0x20019994_f * (x**166) + L0x20019996_f * (x**167) + 
            L0x20019998_f * (x**168) + L0x2001999a_f * (x**169) + 
            L0x2001999c_f * (x**170) + L0x2001999e_f * (x**171) + 
            L0x200199a0_f * (x**172) + L0x200199a2_f * (x**173) + 
            L0x200199a4_f * (x**174) + L0x200199a6_f * (x**175) + 
            L0x200199a8_f * (x**176) + L0x200199aa_f * (x**177) + 
            L0x200199ac_f * (x**178) + L0x200199ae_f * (x**179) + 
            L0x200199b0_f * (x**180) + L0x200199b2_f * (x**181) + 
            L0x200199b4_f * (x**182) + L0x200199b6_f * (x**183) + 
            L0x200199b8_f * (x**184) + L0x200199ba_f * (x**185) + 
            L0x200199bc_f * (x**186) + L0x200199be_f * (x**187) + 
            L0x200199c0_f * (x**188) + L0x200199c2_f * (x**189) + 
            L0x200199c4_f * (x**190) + L0x200199c6_f * (x**191) + 
            L0x200199c8_f * (x**192) + L0x200199ca_f * (x**193) + 
            L0x200199cc_f * (x**194) + L0x200199ce_f * (x**195) + 
            L0x200199d0_f * (x**196) + L0x200199d2_f * (x**197) + 
            L0x200199d4_f * (x**198) + L0x200199d6_f * (x**199) + 
            L0x200199d8_f * (x**200) + L0x200199da_f * (x**201) + 
            L0x200199dc_f * (x**202) + L0x200199de_f * (x**203) + 
            L0x200199e0_f * (x**204) + L0x200199e2_f * (x**205) + 
            L0x200199e4_f * (x**206) + L0x200199e6_f * (x**207) + 
            L0x200199e8_f * (x**208) + L0x200199ea_f * (x**209) + 
            L0x200199ec_f * (x**210) + L0x200199ee_f * (x**211) + 
            L0x200199f0_f * (x**212) + L0x200199f2_f * (x**213) + 
            L0x200199f4_f * (x**214) + L0x200199f6_f * (x**215) + 
            L0x200199f8_f * (x**216) + L0x200199fa_f * (x**217) + 
            L0x200199fc_f * (x**218) + L0x200199fe_f * (x**219) + 
            L0x20019a00_f * (x**220) + L0x20019a02_f * (x**221) + 
            L0x20019a04_f * (x**222) + L0x20019a06_f * (x**223) + 
            L0x20019a08_f * (x**224) + L0x20019a0a_f * (x**225) + 
            L0x20019a0c_f * (x**226) + L0x20019a0e_f * (x**227) + 
            L0x20019a10_f * (x**228) + L0x20019a12_f * (x**229) + 
            L0x20019a14_f * (x**230) + L0x20019a16_f * (x**231) + 
            L0x20019a18_f * (x**232) + L0x20019a1a_f * (x**233) + 
            L0x20019a1c_f * (x**234) + L0x20019a1e_f * (x**235) + 
            L0x20019a20_f * (x**236) + L0x20019a22_f * (x**237) + 
            L0x20019a24_f * (x**238) + L0x20019a26_f * (x**239) + 
            L0x20019a28_f * (x**240) + L0x20019a2a_f * (x**241) + 
            L0x20019a2c_f * (x**242) + L0x20019a2e_f * (x**243) + 
            L0x20019a30_f * (x**244) + L0x20019a32_f * (x**245) + 
            L0x20019a34_f * (x**246) + L0x20019a36_f * (x**247) + 
            L0x20019a38_f * (x**248) + L0x20019a3a_f * (x**249) + 
            L0x20019a3c_f * (x**250) + L0x20019a3e_f * (x**251) + 
            L0x20019a40_f * (x**252) + L0x20019a42_f * (x**253) + 
            L0x20019a44_f * (x**254) + L0x20019a46_f * (x**255)
          )
          [25570049, x**4 - 6096206],
    (* inp_poly_57 *)
    eqmod (2**32) * (inp_poly_57 * inp_poly_57)
          (
            L0x20019848_f * (x**0) + L0x2001984a_f * (x**1) + 
            L0x2001984c_f * (x**2) + L0x2001984e_f * (x**3) + 
            L0x20019850_f * (x**4) + L0x20019852_f * (x**5) + 
            L0x20019854_f * (x**6) + L0x20019856_f * (x**7) + 
            L0x20019858_f * (x**8) + L0x2001985a_f * (x**9) + 
            L0x2001985c_f * (x**10) + L0x2001985e_f * (x**11) + 
            L0x20019860_f * (x**12) + L0x20019862_f * (x**13) + 
            L0x20019864_f * (x**14) + L0x20019866_f * (x**15) + 
            L0x20019868_f * (x**16) + L0x2001986a_f * (x**17) + 
            L0x2001986c_f * (x**18) + L0x2001986e_f * (x**19) + 
            L0x20019870_f * (x**20) + L0x20019872_f * (x**21) + 
            L0x20019874_f * (x**22) + L0x20019876_f * (x**23) + 
            L0x20019878_f * (x**24) + L0x2001987a_f * (x**25) + 
            L0x2001987c_f * (x**26) + L0x2001987e_f * (x**27) + 
            L0x20019880_f * (x**28) + L0x20019882_f * (x**29) + 
            L0x20019884_f * (x**30) + L0x20019886_f * (x**31) + 
            L0x20019888_f * (x**32) + L0x2001988a_f * (x**33) + 
            L0x2001988c_f * (x**34) + L0x2001988e_f * (x**35) + 
            L0x20019890_f * (x**36) + L0x20019892_f * (x**37) + 
            L0x20019894_f * (x**38) + L0x20019896_f * (x**39) + 
            L0x20019898_f * (x**40) + L0x2001989a_f * (x**41) + 
            L0x2001989c_f * (x**42) + L0x2001989e_f * (x**43) + 
            L0x200198a0_f * (x**44) + L0x200198a2_f * (x**45) + 
            L0x200198a4_f * (x**46) + L0x200198a6_f * (x**47) + 
            L0x200198a8_f * (x**48) + L0x200198aa_f * (x**49) + 
            L0x200198ac_f * (x**50) + L0x200198ae_f * (x**51) + 
            L0x200198b0_f * (x**52) + L0x200198b2_f * (x**53) + 
            L0x200198b4_f * (x**54) + L0x200198b6_f * (x**55) + 
            L0x200198b8_f * (x**56) + L0x200198ba_f * (x**57) + 
            L0x200198bc_f * (x**58) + L0x200198be_f * (x**59) + 
            L0x200198c0_f * (x**60) + L0x200198c2_f * (x**61) + 
            L0x200198c4_f * (x**62) + L0x200198c6_f * (x**63) + 
            L0x200198c8_f * (x**64) + L0x200198ca_f * (x**65) + 
            L0x200198cc_f * (x**66) + L0x200198ce_f * (x**67) + 
            L0x200198d0_f * (x**68) + L0x200198d2_f * (x**69) + 
            L0x200198d4_f * (x**70) + L0x200198d6_f * (x**71) + 
            L0x200198d8_f * (x**72) + L0x200198da_f * (x**73) + 
            L0x200198dc_f * (x**74) + L0x200198de_f * (x**75) + 
            L0x200198e0_f * (x**76) + L0x200198e2_f * (x**77) + 
            L0x200198e4_f * (x**78) + L0x200198e6_f * (x**79) + 
            L0x200198e8_f * (x**80) + L0x200198ea_f * (x**81) + 
            L0x200198ec_f * (x**82) + L0x200198ee_f * (x**83) + 
            L0x200198f0_f * (x**84) + L0x200198f2_f * (x**85) + 
            L0x200198f4_f * (x**86) + L0x200198f6_f * (x**87) + 
            L0x200198f8_f * (x**88) + L0x200198fa_f * (x**89) + 
            L0x200198fc_f * (x**90) + L0x200198fe_f * (x**91) + 
            L0x20019900_f * (x**92) + L0x20019902_f * (x**93) + 
            L0x20019904_f * (x**94) + L0x20019906_f * (x**95) + 
            L0x20019908_f * (x**96) + L0x2001990a_f * (x**97) + 
            L0x2001990c_f * (x**98) + L0x2001990e_f * (x**99) + 
            L0x20019910_f * (x**100) + L0x20019912_f * (x**101) + 
            L0x20019914_f * (x**102) + L0x20019916_f * (x**103) + 
            L0x20019918_f * (x**104) + L0x2001991a_f * (x**105) + 
            L0x2001991c_f * (x**106) + L0x2001991e_f * (x**107) + 
            L0x20019920_f * (x**108) + L0x20019922_f * (x**109) + 
            L0x20019924_f * (x**110) + L0x20019926_f * (x**111) + 
            L0x20019928_f * (x**112) + L0x2001992a_f * (x**113) + 
            L0x2001992c_f * (x**114) + L0x2001992e_f * (x**115) + 
            L0x20019930_f * (x**116) + L0x20019932_f * (x**117) + 
            L0x20019934_f * (x**118) + L0x20019936_f * (x**119) + 
            L0x20019938_f * (x**120) + L0x2001993a_f * (x**121) + 
            L0x2001993c_f * (x**122) + L0x2001993e_f * (x**123) + 
            L0x20019940_f * (x**124) + L0x20019942_f * (x**125) + 
            L0x20019944_f * (x**126) + L0x20019946_f * (x**127) + 
            L0x20019948_f * (x**128) + L0x2001994a_f * (x**129) + 
            L0x2001994c_f * (x**130) + L0x2001994e_f * (x**131) + 
            L0x20019950_f * (x**132) + L0x20019952_f * (x**133) + 
            L0x20019954_f * (x**134) + L0x20019956_f * (x**135) + 
            L0x20019958_f * (x**136) + L0x2001995a_f * (x**137) + 
            L0x2001995c_f * (x**138) + L0x2001995e_f * (x**139) + 
            L0x20019960_f * (x**140) + L0x20019962_f * (x**141) + 
            L0x20019964_f * (x**142) + L0x20019966_f * (x**143) + 
            L0x20019968_f * (x**144) + L0x2001996a_f * (x**145) + 
            L0x2001996c_f * (x**146) + L0x2001996e_f * (x**147) + 
            L0x20019970_f * (x**148) + L0x20019972_f * (x**149) + 
            L0x20019974_f * (x**150) + L0x20019976_f * (x**151) + 
            L0x20019978_f * (x**152) + L0x2001997a_f * (x**153) + 
            L0x2001997c_f * (x**154) + L0x2001997e_f * (x**155) + 
            L0x20019980_f * (x**156) + L0x20019982_f * (x**157) + 
            L0x20019984_f * (x**158) + L0x20019986_f * (x**159) + 
            L0x20019988_f * (x**160) + L0x2001998a_f * (x**161) + 
            L0x2001998c_f * (x**162) + L0x2001998e_f * (x**163) + 
            L0x20019990_f * (x**164) + L0x20019992_f * (x**165) + 
            L0x20019994_f * (x**166) + L0x20019996_f * (x**167) + 
            L0x20019998_f * (x**168) + L0x2001999a_f * (x**169) + 
            L0x2001999c_f * (x**170) + L0x2001999e_f * (x**171) + 
            L0x200199a0_f * (x**172) + L0x200199a2_f * (x**173) + 
            L0x200199a4_f * (x**174) + L0x200199a6_f * (x**175) + 
            L0x200199a8_f * (x**176) + L0x200199aa_f * (x**177) + 
            L0x200199ac_f * (x**178) + L0x200199ae_f * (x**179) + 
            L0x200199b0_f * (x**180) + L0x200199b2_f * (x**181) + 
            L0x200199b4_f * (x**182) + L0x200199b6_f * (x**183) + 
            L0x200199b8_f * (x**184) + L0x200199ba_f * (x**185) + 
            L0x200199bc_f * (x**186) + L0x200199be_f * (x**187) + 
            L0x200199c0_f * (x**188) + L0x200199c2_f * (x**189) + 
            L0x200199c4_f * (x**190) + L0x200199c6_f * (x**191) + 
            L0x200199c8_f * (x**192) + L0x200199ca_f * (x**193) + 
            L0x200199cc_f * (x**194) + L0x200199ce_f * (x**195) + 
            L0x200199d0_f * (x**196) + L0x200199d2_f * (x**197) + 
            L0x200199d4_f * (x**198) + L0x200199d6_f * (x**199) + 
            L0x200199d8_f * (x**200) + L0x200199da_f * (x**201) + 
            L0x200199dc_f * (x**202) + L0x200199de_f * (x**203) + 
            L0x200199e0_f * (x**204) + L0x200199e2_f * (x**205) + 
            L0x200199e4_f * (x**206) + L0x200199e6_f * (x**207) + 
            L0x200199e8_f * (x**208) + L0x200199ea_f * (x**209) + 
            L0x200199ec_f * (x**210) + L0x200199ee_f * (x**211) + 
            L0x200199f0_f * (x**212) + L0x200199f2_f * (x**213) + 
            L0x200199f4_f * (x**214) + L0x200199f6_f * (x**215) + 
            L0x200199f8_f * (x**216) + L0x200199fa_f * (x**217) + 
            L0x200199fc_f * (x**218) + L0x200199fe_f * (x**219) + 
            L0x20019a00_f * (x**220) + L0x20019a02_f * (x**221) + 
            L0x20019a04_f * (x**222) + L0x20019a06_f * (x**223) + 
            L0x20019a08_f * (x**224) + L0x20019a0a_f * (x**225) + 
            L0x20019a0c_f * (x**226) + L0x20019a0e_f * (x**227) + 
            L0x20019a10_f * (x**228) + L0x20019a12_f * (x**229) + 
            L0x20019a14_f * (x**230) + L0x20019a16_f * (x**231) + 
            L0x20019a18_f * (x**232) + L0x20019a1a_f * (x**233) + 
            L0x20019a1c_f * (x**234) + L0x20019a1e_f * (x**235) + 
            L0x20019a20_f * (x**236) + L0x20019a22_f * (x**237) + 
            L0x20019a24_f * (x**238) + L0x20019a26_f * (x**239) + 
            L0x20019a28_f * (x**240) + L0x20019a2a_f * (x**241) + 
            L0x20019a2c_f * (x**242) + L0x20019a2e_f * (x**243) + 
            L0x20019a30_f * (x**244) + L0x20019a32_f * (x**245) + 
            L0x20019a34_f * (x**246) + L0x20019a36_f * (x**247) + 
            L0x20019a38_f * (x**248) + L0x20019a3a_f * (x**249) + 
            L0x20019a3c_f * (x**250) + L0x20019a3e_f * (x**251) + 
            L0x20019a40_f * (x**252) + L0x20019a42_f * (x**253) + 
            L0x20019a44_f * (x**254) + L0x20019a46_f * (x**255)
          )
          [25570049, x**4 - 19473843],
    (* inp_poly_58 *)
    eqmod (2**32) * (inp_poly_58 * inp_poly_58)
          (
            L0x20019848_f * (x**0) + L0x2001984a_f * (x**1) + 
            L0x2001984c_f * (x**2) + L0x2001984e_f * (x**3) + 
            L0x20019850_f * (x**4) + L0x20019852_f * (x**5) + 
            L0x20019854_f * (x**6) + L0x20019856_f * (x**7) + 
            L0x20019858_f * (x**8) + L0x2001985a_f * (x**9) + 
            L0x2001985c_f * (x**10) + L0x2001985e_f * (x**11) + 
            L0x20019860_f * (x**12) + L0x20019862_f * (x**13) + 
            L0x20019864_f * (x**14) + L0x20019866_f * (x**15) + 
            L0x20019868_f * (x**16) + L0x2001986a_f * (x**17) + 
            L0x2001986c_f * (x**18) + L0x2001986e_f * (x**19) + 
            L0x20019870_f * (x**20) + L0x20019872_f * (x**21) + 
            L0x20019874_f * (x**22) + L0x20019876_f * (x**23) + 
            L0x20019878_f * (x**24) + L0x2001987a_f * (x**25) + 
            L0x2001987c_f * (x**26) + L0x2001987e_f * (x**27) + 
            L0x20019880_f * (x**28) + L0x20019882_f * (x**29) + 
            L0x20019884_f * (x**30) + L0x20019886_f * (x**31) + 
            L0x20019888_f * (x**32) + L0x2001988a_f * (x**33) + 
            L0x2001988c_f * (x**34) + L0x2001988e_f * (x**35) + 
            L0x20019890_f * (x**36) + L0x20019892_f * (x**37) + 
            L0x20019894_f * (x**38) + L0x20019896_f * (x**39) + 
            L0x20019898_f * (x**40) + L0x2001989a_f * (x**41) + 
            L0x2001989c_f * (x**42) + L0x2001989e_f * (x**43) + 
            L0x200198a0_f * (x**44) + L0x200198a2_f * (x**45) + 
            L0x200198a4_f * (x**46) + L0x200198a6_f * (x**47) + 
            L0x200198a8_f * (x**48) + L0x200198aa_f * (x**49) + 
            L0x200198ac_f * (x**50) + L0x200198ae_f * (x**51) + 
            L0x200198b0_f * (x**52) + L0x200198b2_f * (x**53) + 
            L0x200198b4_f * (x**54) + L0x200198b6_f * (x**55) + 
            L0x200198b8_f * (x**56) + L0x200198ba_f * (x**57) + 
            L0x200198bc_f * (x**58) + L0x200198be_f * (x**59) + 
            L0x200198c0_f * (x**60) + L0x200198c2_f * (x**61) + 
            L0x200198c4_f * (x**62) + L0x200198c6_f * (x**63) + 
            L0x200198c8_f * (x**64) + L0x200198ca_f * (x**65) + 
            L0x200198cc_f * (x**66) + L0x200198ce_f * (x**67) + 
            L0x200198d0_f * (x**68) + L0x200198d2_f * (x**69) + 
            L0x200198d4_f * (x**70) + L0x200198d6_f * (x**71) + 
            L0x200198d8_f * (x**72) + L0x200198da_f * (x**73) + 
            L0x200198dc_f * (x**74) + L0x200198de_f * (x**75) + 
            L0x200198e0_f * (x**76) + L0x200198e2_f * (x**77) + 
            L0x200198e4_f * (x**78) + L0x200198e6_f * (x**79) + 
            L0x200198e8_f * (x**80) + L0x200198ea_f * (x**81) + 
            L0x200198ec_f * (x**82) + L0x200198ee_f * (x**83) + 
            L0x200198f0_f * (x**84) + L0x200198f2_f * (x**85) + 
            L0x200198f4_f * (x**86) + L0x200198f6_f * (x**87) + 
            L0x200198f8_f * (x**88) + L0x200198fa_f * (x**89) + 
            L0x200198fc_f * (x**90) + L0x200198fe_f * (x**91) + 
            L0x20019900_f * (x**92) + L0x20019902_f * (x**93) + 
            L0x20019904_f * (x**94) + L0x20019906_f * (x**95) + 
            L0x20019908_f * (x**96) + L0x2001990a_f * (x**97) + 
            L0x2001990c_f * (x**98) + L0x2001990e_f * (x**99) + 
            L0x20019910_f * (x**100) + L0x20019912_f * (x**101) + 
            L0x20019914_f * (x**102) + L0x20019916_f * (x**103) + 
            L0x20019918_f * (x**104) + L0x2001991a_f * (x**105) + 
            L0x2001991c_f * (x**106) + L0x2001991e_f * (x**107) + 
            L0x20019920_f * (x**108) + L0x20019922_f * (x**109) + 
            L0x20019924_f * (x**110) + L0x20019926_f * (x**111) + 
            L0x20019928_f * (x**112) + L0x2001992a_f * (x**113) + 
            L0x2001992c_f * (x**114) + L0x2001992e_f * (x**115) + 
            L0x20019930_f * (x**116) + L0x20019932_f * (x**117) + 
            L0x20019934_f * (x**118) + L0x20019936_f * (x**119) + 
            L0x20019938_f * (x**120) + L0x2001993a_f * (x**121) + 
            L0x2001993c_f * (x**122) + L0x2001993e_f * (x**123) + 
            L0x20019940_f * (x**124) + L0x20019942_f * (x**125) + 
            L0x20019944_f * (x**126) + L0x20019946_f * (x**127) + 
            L0x20019948_f * (x**128) + L0x2001994a_f * (x**129) + 
            L0x2001994c_f * (x**130) + L0x2001994e_f * (x**131) + 
            L0x20019950_f * (x**132) + L0x20019952_f * (x**133) + 
            L0x20019954_f * (x**134) + L0x20019956_f * (x**135) + 
            L0x20019958_f * (x**136) + L0x2001995a_f * (x**137) + 
            L0x2001995c_f * (x**138) + L0x2001995e_f * (x**139) + 
            L0x20019960_f * (x**140) + L0x20019962_f * (x**141) + 
            L0x20019964_f * (x**142) + L0x20019966_f * (x**143) + 
            L0x20019968_f * (x**144) + L0x2001996a_f * (x**145) + 
            L0x2001996c_f * (x**146) + L0x2001996e_f * (x**147) + 
            L0x20019970_f * (x**148) + L0x20019972_f * (x**149) + 
            L0x20019974_f * (x**150) + L0x20019976_f * (x**151) + 
            L0x20019978_f * (x**152) + L0x2001997a_f * (x**153) + 
            L0x2001997c_f * (x**154) + L0x2001997e_f * (x**155) + 
            L0x20019980_f * (x**156) + L0x20019982_f * (x**157) + 
            L0x20019984_f * (x**158) + L0x20019986_f * (x**159) + 
            L0x20019988_f * (x**160) + L0x2001998a_f * (x**161) + 
            L0x2001998c_f * (x**162) + L0x2001998e_f * (x**163) + 
            L0x20019990_f * (x**164) + L0x20019992_f * (x**165) + 
            L0x20019994_f * (x**166) + L0x20019996_f * (x**167) + 
            L0x20019998_f * (x**168) + L0x2001999a_f * (x**169) + 
            L0x2001999c_f * (x**170) + L0x2001999e_f * (x**171) + 
            L0x200199a0_f * (x**172) + L0x200199a2_f * (x**173) + 
            L0x200199a4_f * (x**174) + L0x200199a6_f * (x**175) + 
            L0x200199a8_f * (x**176) + L0x200199aa_f * (x**177) + 
            L0x200199ac_f * (x**178) + L0x200199ae_f * (x**179) + 
            L0x200199b0_f * (x**180) + L0x200199b2_f * (x**181) + 
            L0x200199b4_f * (x**182) + L0x200199b6_f * (x**183) + 
            L0x200199b8_f * (x**184) + L0x200199ba_f * (x**185) + 
            L0x200199bc_f * (x**186) + L0x200199be_f * (x**187) + 
            L0x200199c0_f * (x**188) + L0x200199c2_f * (x**189) + 
            L0x200199c4_f * (x**190) + L0x200199c6_f * (x**191) + 
            L0x200199c8_f * (x**192) + L0x200199ca_f * (x**193) + 
            L0x200199cc_f * (x**194) + L0x200199ce_f * (x**195) + 
            L0x200199d0_f * (x**196) + L0x200199d2_f * (x**197) + 
            L0x200199d4_f * (x**198) + L0x200199d6_f * (x**199) + 
            L0x200199d8_f * (x**200) + L0x200199da_f * (x**201) + 
            L0x200199dc_f * (x**202) + L0x200199de_f * (x**203) + 
            L0x200199e0_f * (x**204) + L0x200199e2_f * (x**205) + 
            L0x200199e4_f * (x**206) + L0x200199e6_f * (x**207) + 
            L0x200199e8_f * (x**208) + L0x200199ea_f * (x**209) + 
            L0x200199ec_f * (x**210) + L0x200199ee_f * (x**211) + 
            L0x200199f0_f * (x**212) + L0x200199f2_f * (x**213) + 
            L0x200199f4_f * (x**214) + L0x200199f6_f * (x**215) + 
            L0x200199f8_f * (x**216) + L0x200199fa_f * (x**217) + 
            L0x200199fc_f * (x**218) + L0x200199fe_f * (x**219) + 
            L0x20019a00_f * (x**220) + L0x20019a02_f * (x**221) + 
            L0x20019a04_f * (x**222) + L0x20019a06_f * (x**223) + 
            L0x20019a08_f * (x**224) + L0x20019a0a_f * (x**225) + 
            L0x20019a0c_f * (x**226) + L0x20019a0e_f * (x**227) + 
            L0x20019a10_f * (x**228) + L0x20019a12_f * (x**229) + 
            L0x20019a14_f * (x**230) + L0x20019a16_f * (x**231) + 
            L0x20019a18_f * (x**232) + L0x20019a1a_f * (x**233) + 
            L0x20019a1c_f * (x**234) + L0x20019a1e_f * (x**235) + 
            L0x20019a20_f * (x**236) + L0x20019a22_f * (x**237) + 
            L0x20019a24_f * (x**238) + L0x20019a26_f * (x**239) + 
            L0x20019a28_f * (x**240) + L0x20019a2a_f * (x**241) + 
            L0x20019a2c_f * (x**242) + L0x20019a2e_f * (x**243) + 
            L0x20019a30_f * (x**244) + L0x20019a32_f * (x**245) + 
            L0x20019a34_f * (x**246) + L0x20019a36_f * (x**247) + 
            L0x20019a38_f * (x**248) + L0x20019a3a_f * (x**249) + 
            L0x20019a3c_f * (x**250) + L0x20019a3e_f * (x**251) + 
            L0x20019a40_f * (x**252) + L0x20019a42_f * (x**253) + 
            L0x20019a44_f * (x**254) + L0x20019a46_f * (x**255)
          )
          [25570049, x**4 - 8645865],
    (* inp_poly_59 *)
    eqmod (2**32) * (inp_poly_59 * inp_poly_59)
          (
            L0x20019848_f * (x**0) + L0x2001984a_f * (x**1) + 
            L0x2001984c_f * (x**2) + L0x2001984e_f * (x**3) + 
            L0x20019850_f * (x**4) + L0x20019852_f * (x**5) + 
            L0x20019854_f * (x**6) + L0x20019856_f * (x**7) + 
            L0x20019858_f * (x**8) + L0x2001985a_f * (x**9) + 
            L0x2001985c_f * (x**10) + L0x2001985e_f * (x**11) + 
            L0x20019860_f * (x**12) + L0x20019862_f * (x**13) + 
            L0x20019864_f * (x**14) + L0x20019866_f * (x**15) + 
            L0x20019868_f * (x**16) + L0x2001986a_f * (x**17) + 
            L0x2001986c_f * (x**18) + L0x2001986e_f * (x**19) + 
            L0x20019870_f * (x**20) + L0x20019872_f * (x**21) + 
            L0x20019874_f * (x**22) + L0x20019876_f * (x**23) + 
            L0x20019878_f * (x**24) + L0x2001987a_f * (x**25) + 
            L0x2001987c_f * (x**26) + L0x2001987e_f * (x**27) + 
            L0x20019880_f * (x**28) + L0x20019882_f * (x**29) + 
            L0x20019884_f * (x**30) + L0x20019886_f * (x**31) + 
            L0x20019888_f * (x**32) + L0x2001988a_f * (x**33) + 
            L0x2001988c_f * (x**34) + L0x2001988e_f * (x**35) + 
            L0x20019890_f * (x**36) + L0x20019892_f * (x**37) + 
            L0x20019894_f * (x**38) + L0x20019896_f * (x**39) + 
            L0x20019898_f * (x**40) + L0x2001989a_f * (x**41) + 
            L0x2001989c_f * (x**42) + L0x2001989e_f * (x**43) + 
            L0x200198a0_f * (x**44) + L0x200198a2_f * (x**45) + 
            L0x200198a4_f * (x**46) + L0x200198a6_f * (x**47) + 
            L0x200198a8_f * (x**48) + L0x200198aa_f * (x**49) + 
            L0x200198ac_f * (x**50) + L0x200198ae_f * (x**51) + 
            L0x200198b0_f * (x**52) + L0x200198b2_f * (x**53) + 
            L0x200198b4_f * (x**54) + L0x200198b6_f * (x**55) + 
            L0x200198b8_f * (x**56) + L0x200198ba_f * (x**57) + 
            L0x200198bc_f * (x**58) + L0x200198be_f * (x**59) + 
            L0x200198c0_f * (x**60) + L0x200198c2_f * (x**61) + 
            L0x200198c4_f * (x**62) + L0x200198c6_f * (x**63) + 
            L0x200198c8_f * (x**64) + L0x200198ca_f * (x**65) + 
            L0x200198cc_f * (x**66) + L0x200198ce_f * (x**67) + 
            L0x200198d0_f * (x**68) + L0x200198d2_f * (x**69) + 
            L0x200198d4_f * (x**70) + L0x200198d6_f * (x**71) + 
            L0x200198d8_f * (x**72) + L0x200198da_f * (x**73) + 
            L0x200198dc_f * (x**74) + L0x200198de_f * (x**75) + 
            L0x200198e0_f * (x**76) + L0x200198e2_f * (x**77) + 
            L0x200198e4_f * (x**78) + L0x200198e6_f * (x**79) + 
            L0x200198e8_f * (x**80) + L0x200198ea_f * (x**81) + 
            L0x200198ec_f * (x**82) + L0x200198ee_f * (x**83) + 
            L0x200198f0_f * (x**84) + L0x200198f2_f * (x**85) + 
            L0x200198f4_f * (x**86) + L0x200198f6_f * (x**87) + 
            L0x200198f8_f * (x**88) + L0x200198fa_f * (x**89) + 
            L0x200198fc_f * (x**90) + L0x200198fe_f * (x**91) + 
            L0x20019900_f * (x**92) + L0x20019902_f * (x**93) + 
            L0x20019904_f * (x**94) + L0x20019906_f * (x**95) + 
            L0x20019908_f * (x**96) + L0x2001990a_f * (x**97) + 
            L0x2001990c_f * (x**98) + L0x2001990e_f * (x**99) + 
            L0x20019910_f * (x**100) + L0x20019912_f * (x**101) + 
            L0x20019914_f * (x**102) + L0x20019916_f * (x**103) + 
            L0x20019918_f * (x**104) + L0x2001991a_f * (x**105) + 
            L0x2001991c_f * (x**106) + L0x2001991e_f * (x**107) + 
            L0x20019920_f * (x**108) + L0x20019922_f * (x**109) + 
            L0x20019924_f * (x**110) + L0x20019926_f * (x**111) + 
            L0x20019928_f * (x**112) + L0x2001992a_f * (x**113) + 
            L0x2001992c_f * (x**114) + L0x2001992e_f * (x**115) + 
            L0x20019930_f * (x**116) + L0x20019932_f * (x**117) + 
            L0x20019934_f * (x**118) + L0x20019936_f * (x**119) + 
            L0x20019938_f * (x**120) + L0x2001993a_f * (x**121) + 
            L0x2001993c_f * (x**122) + L0x2001993e_f * (x**123) + 
            L0x20019940_f * (x**124) + L0x20019942_f * (x**125) + 
            L0x20019944_f * (x**126) + L0x20019946_f * (x**127) + 
            L0x20019948_f * (x**128) + L0x2001994a_f * (x**129) + 
            L0x2001994c_f * (x**130) + L0x2001994e_f * (x**131) + 
            L0x20019950_f * (x**132) + L0x20019952_f * (x**133) + 
            L0x20019954_f * (x**134) + L0x20019956_f * (x**135) + 
            L0x20019958_f * (x**136) + L0x2001995a_f * (x**137) + 
            L0x2001995c_f * (x**138) + L0x2001995e_f * (x**139) + 
            L0x20019960_f * (x**140) + L0x20019962_f * (x**141) + 
            L0x20019964_f * (x**142) + L0x20019966_f * (x**143) + 
            L0x20019968_f * (x**144) + L0x2001996a_f * (x**145) + 
            L0x2001996c_f * (x**146) + L0x2001996e_f * (x**147) + 
            L0x20019970_f * (x**148) + L0x20019972_f * (x**149) + 
            L0x20019974_f * (x**150) + L0x20019976_f * (x**151) + 
            L0x20019978_f * (x**152) + L0x2001997a_f * (x**153) + 
            L0x2001997c_f * (x**154) + L0x2001997e_f * (x**155) + 
            L0x20019980_f * (x**156) + L0x20019982_f * (x**157) + 
            L0x20019984_f * (x**158) + L0x20019986_f * (x**159) + 
            L0x20019988_f * (x**160) + L0x2001998a_f * (x**161) + 
            L0x2001998c_f * (x**162) + L0x2001998e_f * (x**163) + 
            L0x20019990_f * (x**164) + L0x20019992_f * (x**165) + 
            L0x20019994_f * (x**166) + L0x20019996_f * (x**167) + 
            L0x20019998_f * (x**168) + L0x2001999a_f * (x**169) + 
            L0x2001999c_f * (x**170) + L0x2001999e_f * (x**171) + 
            L0x200199a0_f * (x**172) + L0x200199a2_f * (x**173) + 
            L0x200199a4_f * (x**174) + L0x200199a6_f * (x**175) + 
            L0x200199a8_f * (x**176) + L0x200199aa_f * (x**177) + 
            L0x200199ac_f * (x**178) + L0x200199ae_f * (x**179) + 
            L0x200199b0_f * (x**180) + L0x200199b2_f * (x**181) + 
            L0x200199b4_f * (x**182) + L0x200199b6_f * (x**183) + 
            L0x200199b8_f * (x**184) + L0x200199ba_f * (x**185) + 
            L0x200199bc_f * (x**186) + L0x200199be_f * (x**187) + 
            L0x200199c0_f * (x**188) + L0x200199c2_f * (x**189) + 
            L0x200199c4_f * (x**190) + L0x200199c6_f * (x**191) + 
            L0x200199c8_f * (x**192) + L0x200199ca_f * (x**193) + 
            L0x200199cc_f * (x**194) + L0x200199ce_f * (x**195) + 
            L0x200199d0_f * (x**196) + L0x200199d2_f * (x**197) + 
            L0x200199d4_f * (x**198) + L0x200199d6_f * (x**199) + 
            L0x200199d8_f * (x**200) + L0x200199da_f * (x**201) + 
            L0x200199dc_f * (x**202) + L0x200199de_f * (x**203) + 
            L0x200199e0_f * (x**204) + L0x200199e2_f * (x**205) + 
            L0x200199e4_f * (x**206) + L0x200199e6_f * (x**207) + 
            L0x200199e8_f * (x**208) + L0x200199ea_f * (x**209) + 
            L0x200199ec_f * (x**210) + L0x200199ee_f * (x**211) + 
            L0x200199f0_f * (x**212) + L0x200199f2_f * (x**213) + 
            L0x200199f4_f * (x**214) + L0x200199f6_f * (x**215) + 
            L0x200199f8_f * (x**216) + L0x200199fa_f * (x**217) + 
            L0x200199fc_f * (x**218) + L0x200199fe_f * (x**219) + 
            L0x20019a00_f * (x**220) + L0x20019a02_f * (x**221) + 
            L0x20019a04_f * (x**222) + L0x20019a06_f * (x**223) + 
            L0x20019a08_f * (x**224) + L0x20019a0a_f * (x**225) + 
            L0x20019a0c_f * (x**226) + L0x20019a0e_f * (x**227) + 
            L0x20019a10_f * (x**228) + L0x20019a12_f * (x**229) + 
            L0x20019a14_f * (x**230) + L0x20019a16_f * (x**231) + 
            L0x20019a18_f * (x**232) + L0x20019a1a_f * (x**233) + 
            L0x20019a1c_f * (x**234) + L0x20019a1e_f * (x**235) + 
            L0x20019a20_f * (x**236) + L0x20019a22_f * (x**237) + 
            L0x20019a24_f * (x**238) + L0x20019a26_f * (x**239) + 
            L0x20019a28_f * (x**240) + L0x20019a2a_f * (x**241) + 
            L0x20019a2c_f * (x**242) + L0x20019a2e_f * (x**243) + 
            L0x20019a30_f * (x**244) + L0x20019a32_f * (x**245) + 
            L0x20019a34_f * (x**246) + L0x20019a36_f * (x**247) + 
            L0x20019a38_f * (x**248) + L0x20019a3a_f * (x**249) + 
            L0x20019a3c_f * (x**250) + L0x20019a3e_f * (x**251) + 
            L0x20019a40_f * (x**252) + L0x20019a42_f * (x**253) + 
            L0x20019a44_f * (x**254) + L0x20019a46_f * (x**255)
          )
          [25570049, x**4 - 16924184],
    (* inp_poly_60 *)
    eqmod (2**32) * (inp_poly_60 * inp_poly_60)
          (
            L0x20019848_f * (x**0) + L0x2001984a_f * (x**1) + 
            L0x2001984c_f * (x**2) + L0x2001984e_f * (x**3) + 
            L0x20019850_f * (x**4) + L0x20019852_f * (x**5) + 
            L0x20019854_f * (x**6) + L0x20019856_f * (x**7) + 
            L0x20019858_f * (x**8) + L0x2001985a_f * (x**9) + 
            L0x2001985c_f * (x**10) + L0x2001985e_f * (x**11) + 
            L0x20019860_f * (x**12) + L0x20019862_f * (x**13) + 
            L0x20019864_f * (x**14) + L0x20019866_f * (x**15) + 
            L0x20019868_f * (x**16) + L0x2001986a_f * (x**17) + 
            L0x2001986c_f * (x**18) + L0x2001986e_f * (x**19) + 
            L0x20019870_f * (x**20) + L0x20019872_f * (x**21) + 
            L0x20019874_f * (x**22) + L0x20019876_f * (x**23) + 
            L0x20019878_f * (x**24) + L0x2001987a_f * (x**25) + 
            L0x2001987c_f * (x**26) + L0x2001987e_f * (x**27) + 
            L0x20019880_f * (x**28) + L0x20019882_f * (x**29) + 
            L0x20019884_f * (x**30) + L0x20019886_f * (x**31) + 
            L0x20019888_f * (x**32) + L0x2001988a_f * (x**33) + 
            L0x2001988c_f * (x**34) + L0x2001988e_f * (x**35) + 
            L0x20019890_f * (x**36) + L0x20019892_f * (x**37) + 
            L0x20019894_f * (x**38) + L0x20019896_f * (x**39) + 
            L0x20019898_f * (x**40) + L0x2001989a_f * (x**41) + 
            L0x2001989c_f * (x**42) + L0x2001989e_f * (x**43) + 
            L0x200198a0_f * (x**44) + L0x200198a2_f * (x**45) + 
            L0x200198a4_f * (x**46) + L0x200198a6_f * (x**47) + 
            L0x200198a8_f * (x**48) + L0x200198aa_f * (x**49) + 
            L0x200198ac_f * (x**50) + L0x200198ae_f * (x**51) + 
            L0x200198b0_f * (x**52) + L0x200198b2_f * (x**53) + 
            L0x200198b4_f * (x**54) + L0x200198b6_f * (x**55) + 
            L0x200198b8_f * (x**56) + L0x200198ba_f * (x**57) + 
            L0x200198bc_f * (x**58) + L0x200198be_f * (x**59) + 
            L0x200198c0_f * (x**60) + L0x200198c2_f * (x**61) + 
            L0x200198c4_f * (x**62) + L0x200198c6_f * (x**63) + 
            L0x200198c8_f * (x**64) + L0x200198ca_f * (x**65) + 
            L0x200198cc_f * (x**66) + L0x200198ce_f * (x**67) + 
            L0x200198d0_f * (x**68) + L0x200198d2_f * (x**69) + 
            L0x200198d4_f * (x**70) + L0x200198d6_f * (x**71) + 
            L0x200198d8_f * (x**72) + L0x200198da_f * (x**73) + 
            L0x200198dc_f * (x**74) + L0x200198de_f * (x**75) + 
            L0x200198e0_f * (x**76) + L0x200198e2_f * (x**77) + 
            L0x200198e4_f * (x**78) + L0x200198e6_f * (x**79) + 
            L0x200198e8_f * (x**80) + L0x200198ea_f * (x**81) + 
            L0x200198ec_f * (x**82) + L0x200198ee_f * (x**83) + 
            L0x200198f0_f * (x**84) + L0x200198f2_f * (x**85) + 
            L0x200198f4_f * (x**86) + L0x200198f6_f * (x**87) + 
            L0x200198f8_f * (x**88) + L0x200198fa_f * (x**89) + 
            L0x200198fc_f * (x**90) + L0x200198fe_f * (x**91) + 
            L0x20019900_f * (x**92) + L0x20019902_f * (x**93) + 
            L0x20019904_f * (x**94) + L0x20019906_f * (x**95) + 
            L0x20019908_f * (x**96) + L0x2001990a_f * (x**97) + 
            L0x2001990c_f * (x**98) + L0x2001990e_f * (x**99) + 
            L0x20019910_f * (x**100) + L0x20019912_f * (x**101) + 
            L0x20019914_f * (x**102) + L0x20019916_f * (x**103) + 
            L0x20019918_f * (x**104) + L0x2001991a_f * (x**105) + 
            L0x2001991c_f * (x**106) + L0x2001991e_f * (x**107) + 
            L0x20019920_f * (x**108) + L0x20019922_f * (x**109) + 
            L0x20019924_f * (x**110) + L0x20019926_f * (x**111) + 
            L0x20019928_f * (x**112) + L0x2001992a_f * (x**113) + 
            L0x2001992c_f * (x**114) + L0x2001992e_f * (x**115) + 
            L0x20019930_f * (x**116) + L0x20019932_f * (x**117) + 
            L0x20019934_f * (x**118) + L0x20019936_f * (x**119) + 
            L0x20019938_f * (x**120) + L0x2001993a_f * (x**121) + 
            L0x2001993c_f * (x**122) + L0x2001993e_f * (x**123) + 
            L0x20019940_f * (x**124) + L0x20019942_f * (x**125) + 
            L0x20019944_f * (x**126) + L0x20019946_f * (x**127) + 
            L0x20019948_f * (x**128) + L0x2001994a_f * (x**129) + 
            L0x2001994c_f * (x**130) + L0x2001994e_f * (x**131) + 
            L0x20019950_f * (x**132) + L0x20019952_f * (x**133) + 
            L0x20019954_f * (x**134) + L0x20019956_f * (x**135) + 
            L0x20019958_f * (x**136) + L0x2001995a_f * (x**137) + 
            L0x2001995c_f * (x**138) + L0x2001995e_f * (x**139) + 
            L0x20019960_f * (x**140) + L0x20019962_f * (x**141) + 
            L0x20019964_f * (x**142) + L0x20019966_f * (x**143) + 
            L0x20019968_f * (x**144) + L0x2001996a_f * (x**145) + 
            L0x2001996c_f * (x**146) + L0x2001996e_f * (x**147) + 
            L0x20019970_f * (x**148) + L0x20019972_f * (x**149) + 
            L0x20019974_f * (x**150) + L0x20019976_f * (x**151) + 
            L0x20019978_f * (x**152) + L0x2001997a_f * (x**153) + 
            L0x2001997c_f * (x**154) + L0x2001997e_f * (x**155) + 
            L0x20019980_f * (x**156) + L0x20019982_f * (x**157) + 
            L0x20019984_f * (x**158) + L0x20019986_f * (x**159) + 
            L0x20019988_f * (x**160) + L0x2001998a_f * (x**161) + 
            L0x2001998c_f * (x**162) + L0x2001998e_f * (x**163) + 
            L0x20019990_f * (x**164) + L0x20019992_f * (x**165) + 
            L0x20019994_f * (x**166) + L0x20019996_f * (x**167) + 
            L0x20019998_f * (x**168) + L0x2001999a_f * (x**169) + 
            L0x2001999c_f * (x**170) + L0x2001999e_f * (x**171) + 
            L0x200199a0_f * (x**172) + L0x200199a2_f * (x**173) + 
            L0x200199a4_f * (x**174) + L0x200199a6_f * (x**175) + 
            L0x200199a8_f * (x**176) + L0x200199aa_f * (x**177) + 
            L0x200199ac_f * (x**178) + L0x200199ae_f * (x**179) + 
            L0x200199b0_f * (x**180) + L0x200199b2_f * (x**181) + 
            L0x200199b4_f * (x**182) + L0x200199b6_f * (x**183) + 
            L0x200199b8_f * (x**184) + L0x200199ba_f * (x**185) + 
            L0x200199bc_f * (x**186) + L0x200199be_f * (x**187) + 
            L0x200199c0_f * (x**188) + L0x200199c2_f * (x**189) + 
            L0x200199c4_f * (x**190) + L0x200199c6_f * (x**191) + 
            L0x200199c8_f * (x**192) + L0x200199ca_f * (x**193) + 
            L0x200199cc_f * (x**194) + L0x200199ce_f * (x**195) + 
            L0x200199d0_f * (x**196) + L0x200199d2_f * (x**197) + 
            L0x200199d4_f * (x**198) + L0x200199d6_f * (x**199) + 
            L0x200199d8_f * (x**200) + L0x200199da_f * (x**201) + 
            L0x200199dc_f * (x**202) + L0x200199de_f * (x**203) + 
            L0x200199e0_f * (x**204) + L0x200199e2_f * (x**205) + 
            L0x200199e4_f * (x**206) + L0x200199e6_f * (x**207) + 
            L0x200199e8_f * (x**208) + L0x200199ea_f * (x**209) + 
            L0x200199ec_f * (x**210) + L0x200199ee_f * (x**211) + 
            L0x200199f0_f * (x**212) + L0x200199f2_f * (x**213) + 
            L0x200199f4_f * (x**214) + L0x200199f6_f * (x**215) + 
            L0x200199f8_f * (x**216) + L0x200199fa_f * (x**217) + 
            L0x200199fc_f * (x**218) + L0x200199fe_f * (x**219) + 
            L0x20019a00_f * (x**220) + L0x20019a02_f * (x**221) + 
            L0x20019a04_f * (x**222) + L0x20019a06_f * (x**223) + 
            L0x20019a08_f * (x**224) + L0x20019a0a_f * (x**225) + 
            L0x20019a0c_f * (x**226) + L0x20019a0e_f * (x**227) + 
            L0x20019a10_f * (x**228) + L0x20019a12_f * (x**229) + 
            L0x20019a14_f * (x**230) + L0x20019a16_f * (x**231) + 
            L0x20019a18_f * (x**232) + L0x20019a1a_f * (x**233) + 
            L0x20019a1c_f * (x**234) + L0x20019a1e_f * (x**235) + 
            L0x20019a20_f * (x**236) + L0x20019a22_f * (x**237) + 
            L0x20019a24_f * (x**238) + L0x20019a26_f * (x**239) + 
            L0x20019a28_f * (x**240) + L0x20019a2a_f * (x**241) + 
            L0x20019a2c_f * (x**242) + L0x20019a2e_f * (x**243) + 
            L0x20019a30_f * (x**244) + L0x20019a32_f * (x**245) + 
            L0x20019a34_f * (x**246) + L0x20019a36_f * (x**247) + 
            L0x20019a38_f * (x**248) + L0x20019a3a_f * (x**249) + 
            L0x20019a3c_f * (x**250) + L0x20019a3e_f * (x**251) + 
            L0x20019a40_f * (x**252) + L0x20019a42_f * (x**253) + 
            L0x20019a44_f * (x**254) + L0x20019a46_f * (x**255)
          )
          [25570049, x**4 - 18864008],
    (* inp_poly_61 *)
    eqmod (2**32) * (inp_poly_61 * inp_poly_61)
          (
            L0x20019848_f * (x**0) + L0x2001984a_f * (x**1) + 
            L0x2001984c_f * (x**2) + L0x2001984e_f * (x**3) + 
            L0x20019850_f * (x**4) + L0x20019852_f * (x**5) + 
            L0x20019854_f * (x**6) + L0x20019856_f * (x**7) + 
            L0x20019858_f * (x**8) + L0x2001985a_f * (x**9) + 
            L0x2001985c_f * (x**10) + L0x2001985e_f * (x**11) + 
            L0x20019860_f * (x**12) + L0x20019862_f * (x**13) + 
            L0x20019864_f * (x**14) + L0x20019866_f * (x**15) + 
            L0x20019868_f * (x**16) + L0x2001986a_f * (x**17) + 
            L0x2001986c_f * (x**18) + L0x2001986e_f * (x**19) + 
            L0x20019870_f * (x**20) + L0x20019872_f * (x**21) + 
            L0x20019874_f * (x**22) + L0x20019876_f * (x**23) + 
            L0x20019878_f * (x**24) + L0x2001987a_f * (x**25) + 
            L0x2001987c_f * (x**26) + L0x2001987e_f * (x**27) + 
            L0x20019880_f * (x**28) + L0x20019882_f * (x**29) + 
            L0x20019884_f * (x**30) + L0x20019886_f * (x**31) + 
            L0x20019888_f * (x**32) + L0x2001988a_f * (x**33) + 
            L0x2001988c_f * (x**34) + L0x2001988e_f * (x**35) + 
            L0x20019890_f * (x**36) + L0x20019892_f * (x**37) + 
            L0x20019894_f * (x**38) + L0x20019896_f * (x**39) + 
            L0x20019898_f * (x**40) + L0x2001989a_f * (x**41) + 
            L0x2001989c_f * (x**42) + L0x2001989e_f * (x**43) + 
            L0x200198a0_f * (x**44) + L0x200198a2_f * (x**45) + 
            L0x200198a4_f * (x**46) + L0x200198a6_f * (x**47) + 
            L0x200198a8_f * (x**48) + L0x200198aa_f * (x**49) + 
            L0x200198ac_f * (x**50) + L0x200198ae_f * (x**51) + 
            L0x200198b0_f * (x**52) + L0x200198b2_f * (x**53) + 
            L0x200198b4_f * (x**54) + L0x200198b6_f * (x**55) + 
            L0x200198b8_f * (x**56) + L0x200198ba_f * (x**57) + 
            L0x200198bc_f * (x**58) + L0x200198be_f * (x**59) + 
            L0x200198c0_f * (x**60) + L0x200198c2_f * (x**61) + 
            L0x200198c4_f * (x**62) + L0x200198c6_f * (x**63) + 
            L0x200198c8_f * (x**64) + L0x200198ca_f * (x**65) + 
            L0x200198cc_f * (x**66) + L0x200198ce_f * (x**67) + 
            L0x200198d0_f * (x**68) + L0x200198d2_f * (x**69) + 
            L0x200198d4_f * (x**70) + L0x200198d6_f * (x**71) + 
            L0x200198d8_f * (x**72) + L0x200198da_f * (x**73) + 
            L0x200198dc_f * (x**74) + L0x200198de_f * (x**75) + 
            L0x200198e0_f * (x**76) + L0x200198e2_f * (x**77) + 
            L0x200198e4_f * (x**78) + L0x200198e6_f * (x**79) + 
            L0x200198e8_f * (x**80) + L0x200198ea_f * (x**81) + 
            L0x200198ec_f * (x**82) + L0x200198ee_f * (x**83) + 
            L0x200198f0_f * (x**84) + L0x200198f2_f * (x**85) + 
            L0x200198f4_f * (x**86) + L0x200198f6_f * (x**87) + 
            L0x200198f8_f * (x**88) + L0x200198fa_f * (x**89) + 
            L0x200198fc_f * (x**90) + L0x200198fe_f * (x**91) + 
            L0x20019900_f * (x**92) + L0x20019902_f * (x**93) + 
            L0x20019904_f * (x**94) + L0x20019906_f * (x**95) + 
            L0x20019908_f * (x**96) + L0x2001990a_f * (x**97) + 
            L0x2001990c_f * (x**98) + L0x2001990e_f * (x**99) + 
            L0x20019910_f * (x**100) + L0x20019912_f * (x**101) + 
            L0x20019914_f * (x**102) + L0x20019916_f * (x**103) + 
            L0x20019918_f * (x**104) + L0x2001991a_f * (x**105) + 
            L0x2001991c_f * (x**106) + L0x2001991e_f * (x**107) + 
            L0x20019920_f * (x**108) + L0x20019922_f * (x**109) + 
            L0x20019924_f * (x**110) + L0x20019926_f * (x**111) + 
            L0x20019928_f * (x**112) + L0x2001992a_f * (x**113) + 
            L0x2001992c_f * (x**114) + L0x2001992e_f * (x**115) + 
            L0x20019930_f * (x**116) + L0x20019932_f * (x**117) + 
            L0x20019934_f * (x**118) + L0x20019936_f * (x**119) + 
            L0x20019938_f * (x**120) + L0x2001993a_f * (x**121) + 
            L0x2001993c_f * (x**122) + L0x2001993e_f * (x**123) + 
            L0x20019940_f * (x**124) + L0x20019942_f * (x**125) + 
            L0x20019944_f * (x**126) + L0x20019946_f * (x**127) + 
            L0x20019948_f * (x**128) + L0x2001994a_f * (x**129) + 
            L0x2001994c_f * (x**130) + L0x2001994e_f * (x**131) + 
            L0x20019950_f * (x**132) + L0x20019952_f * (x**133) + 
            L0x20019954_f * (x**134) + L0x20019956_f * (x**135) + 
            L0x20019958_f * (x**136) + L0x2001995a_f * (x**137) + 
            L0x2001995c_f * (x**138) + L0x2001995e_f * (x**139) + 
            L0x20019960_f * (x**140) + L0x20019962_f * (x**141) + 
            L0x20019964_f * (x**142) + L0x20019966_f * (x**143) + 
            L0x20019968_f * (x**144) + L0x2001996a_f * (x**145) + 
            L0x2001996c_f * (x**146) + L0x2001996e_f * (x**147) + 
            L0x20019970_f * (x**148) + L0x20019972_f * (x**149) + 
            L0x20019974_f * (x**150) + L0x20019976_f * (x**151) + 
            L0x20019978_f * (x**152) + L0x2001997a_f * (x**153) + 
            L0x2001997c_f * (x**154) + L0x2001997e_f * (x**155) + 
            L0x20019980_f * (x**156) + L0x20019982_f * (x**157) + 
            L0x20019984_f * (x**158) + L0x20019986_f * (x**159) + 
            L0x20019988_f * (x**160) + L0x2001998a_f * (x**161) + 
            L0x2001998c_f * (x**162) + L0x2001998e_f * (x**163) + 
            L0x20019990_f * (x**164) + L0x20019992_f * (x**165) + 
            L0x20019994_f * (x**166) + L0x20019996_f * (x**167) + 
            L0x20019998_f * (x**168) + L0x2001999a_f * (x**169) + 
            L0x2001999c_f * (x**170) + L0x2001999e_f * (x**171) + 
            L0x200199a0_f * (x**172) + L0x200199a2_f * (x**173) + 
            L0x200199a4_f * (x**174) + L0x200199a6_f * (x**175) + 
            L0x200199a8_f * (x**176) + L0x200199aa_f * (x**177) + 
            L0x200199ac_f * (x**178) + L0x200199ae_f * (x**179) + 
            L0x200199b0_f * (x**180) + L0x200199b2_f * (x**181) + 
            L0x200199b4_f * (x**182) + L0x200199b6_f * (x**183) + 
            L0x200199b8_f * (x**184) + L0x200199ba_f * (x**185) + 
            L0x200199bc_f * (x**186) + L0x200199be_f * (x**187) + 
            L0x200199c0_f * (x**188) + L0x200199c2_f * (x**189) + 
            L0x200199c4_f * (x**190) + L0x200199c6_f * (x**191) + 
            L0x200199c8_f * (x**192) + L0x200199ca_f * (x**193) + 
            L0x200199cc_f * (x**194) + L0x200199ce_f * (x**195) + 
            L0x200199d0_f * (x**196) + L0x200199d2_f * (x**197) + 
            L0x200199d4_f * (x**198) + L0x200199d6_f * (x**199) + 
            L0x200199d8_f * (x**200) + L0x200199da_f * (x**201) + 
            L0x200199dc_f * (x**202) + L0x200199de_f * (x**203) + 
            L0x200199e0_f * (x**204) + L0x200199e2_f * (x**205) + 
            L0x200199e4_f * (x**206) + L0x200199e6_f * (x**207) + 
            L0x200199e8_f * (x**208) + L0x200199ea_f * (x**209) + 
            L0x200199ec_f * (x**210) + L0x200199ee_f * (x**211) + 
            L0x200199f0_f * (x**212) + L0x200199f2_f * (x**213) + 
            L0x200199f4_f * (x**214) + L0x200199f6_f * (x**215) + 
            L0x200199f8_f * (x**216) + L0x200199fa_f * (x**217) + 
            L0x200199fc_f * (x**218) + L0x200199fe_f * (x**219) + 
            L0x20019a00_f * (x**220) + L0x20019a02_f * (x**221) + 
            L0x20019a04_f * (x**222) + L0x20019a06_f * (x**223) + 
            L0x20019a08_f * (x**224) + L0x20019a0a_f * (x**225) + 
            L0x20019a0c_f * (x**226) + L0x20019a0e_f * (x**227) + 
            L0x20019a10_f * (x**228) + L0x20019a12_f * (x**229) + 
            L0x20019a14_f * (x**230) + L0x20019a16_f * (x**231) + 
            L0x20019a18_f * (x**232) + L0x20019a1a_f * (x**233) + 
            L0x20019a1c_f * (x**234) + L0x20019a1e_f * (x**235) + 
            L0x20019a20_f * (x**236) + L0x20019a22_f * (x**237) + 
            L0x20019a24_f * (x**238) + L0x20019a26_f * (x**239) + 
            L0x20019a28_f * (x**240) + L0x20019a2a_f * (x**241) + 
            L0x20019a2c_f * (x**242) + L0x20019a2e_f * (x**243) + 
            L0x20019a30_f * (x**244) + L0x20019a32_f * (x**245) + 
            L0x20019a34_f * (x**246) + L0x20019a36_f * (x**247) + 
            L0x20019a38_f * (x**248) + L0x20019a3a_f * (x**249) + 
            L0x20019a3c_f * (x**250) + L0x20019a3e_f * (x**251) + 
            L0x20019a40_f * (x**252) + L0x20019a42_f * (x**253) + 
            L0x20019a44_f * (x**254) + L0x20019a46_f * (x**255)
          )
          [25570049, x**4 - 6706041],
    (* inp_poly_62 *)
    eqmod (2**32) * (inp_poly_62 * inp_poly_62)
          (
            L0x20019848_f * (x**0) + L0x2001984a_f * (x**1) + 
            L0x2001984c_f * (x**2) + L0x2001984e_f * (x**3) + 
            L0x20019850_f * (x**4) + L0x20019852_f * (x**5) + 
            L0x20019854_f * (x**6) + L0x20019856_f * (x**7) + 
            L0x20019858_f * (x**8) + L0x2001985a_f * (x**9) + 
            L0x2001985c_f * (x**10) + L0x2001985e_f * (x**11) + 
            L0x20019860_f * (x**12) + L0x20019862_f * (x**13) + 
            L0x20019864_f * (x**14) + L0x20019866_f * (x**15) + 
            L0x20019868_f * (x**16) + L0x2001986a_f * (x**17) + 
            L0x2001986c_f * (x**18) + L0x2001986e_f * (x**19) + 
            L0x20019870_f * (x**20) + L0x20019872_f * (x**21) + 
            L0x20019874_f * (x**22) + L0x20019876_f * (x**23) + 
            L0x20019878_f * (x**24) + L0x2001987a_f * (x**25) + 
            L0x2001987c_f * (x**26) + L0x2001987e_f * (x**27) + 
            L0x20019880_f * (x**28) + L0x20019882_f * (x**29) + 
            L0x20019884_f * (x**30) + L0x20019886_f * (x**31) + 
            L0x20019888_f * (x**32) + L0x2001988a_f * (x**33) + 
            L0x2001988c_f * (x**34) + L0x2001988e_f * (x**35) + 
            L0x20019890_f * (x**36) + L0x20019892_f * (x**37) + 
            L0x20019894_f * (x**38) + L0x20019896_f * (x**39) + 
            L0x20019898_f * (x**40) + L0x2001989a_f * (x**41) + 
            L0x2001989c_f * (x**42) + L0x2001989e_f * (x**43) + 
            L0x200198a0_f * (x**44) + L0x200198a2_f * (x**45) + 
            L0x200198a4_f * (x**46) + L0x200198a6_f * (x**47) + 
            L0x200198a8_f * (x**48) + L0x200198aa_f * (x**49) + 
            L0x200198ac_f * (x**50) + L0x200198ae_f * (x**51) + 
            L0x200198b0_f * (x**52) + L0x200198b2_f * (x**53) + 
            L0x200198b4_f * (x**54) + L0x200198b6_f * (x**55) + 
            L0x200198b8_f * (x**56) + L0x200198ba_f * (x**57) + 
            L0x200198bc_f * (x**58) + L0x200198be_f * (x**59) + 
            L0x200198c0_f * (x**60) + L0x200198c2_f * (x**61) + 
            L0x200198c4_f * (x**62) + L0x200198c6_f * (x**63) + 
            L0x200198c8_f * (x**64) + L0x200198ca_f * (x**65) + 
            L0x200198cc_f * (x**66) + L0x200198ce_f * (x**67) + 
            L0x200198d0_f * (x**68) + L0x200198d2_f * (x**69) + 
            L0x200198d4_f * (x**70) + L0x200198d6_f * (x**71) + 
            L0x200198d8_f * (x**72) + L0x200198da_f * (x**73) + 
            L0x200198dc_f * (x**74) + L0x200198de_f * (x**75) + 
            L0x200198e0_f * (x**76) + L0x200198e2_f * (x**77) + 
            L0x200198e4_f * (x**78) + L0x200198e6_f * (x**79) + 
            L0x200198e8_f * (x**80) + L0x200198ea_f * (x**81) + 
            L0x200198ec_f * (x**82) + L0x200198ee_f * (x**83) + 
            L0x200198f0_f * (x**84) + L0x200198f2_f * (x**85) + 
            L0x200198f4_f * (x**86) + L0x200198f6_f * (x**87) + 
            L0x200198f8_f * (x**88) + L0x200198fa_f * (x**89) + 
            L0x200198fc_f * (x**90) + L0x200198fe_f * (x**91) + 
            L0x20019900_f * (x**92) + L0x20019902_f * (x**93) + 
            L0x20019904_f * (x**94) + L0x20019906_f * (x**95) + 
            L0x20019908_f * (x**96) + L0x2001990a_f * (x**97) + 
            L0x2001990c_f * (x**98) + L0x2001990e_f * (x**99) + 
            L0x20019910_f * (x**100) + L0x20019912_f * (x**101) + 
            L0x20019914_f * (x**102) + L0x20019916_f * (x**103) + 
            L0x20019918_f * (x**104) + L0x2001991a_f * (x**105) + 
            L0x2001991c_f * (x**106) + L0x2001991e_f * (x**107) + 
            L0x20019920_f * (x**108) + L0x20019922_f * (x**109) + 
            L0x20019924_f * (x**110) + L0x20019926_f * (x**111) + 
            L0x20019928_f * (x**112) + L0x2001992a_f * (x**113) + 
            L0x2001992c_f * (x**114) + L0x2001992e_f * (x**115) + 
            L0x20019930_f * (x**116) + L0x20019932_f * (x**117) + 
            L0x20019934_f * (x**118) + L0x20019936_f * (x**119) + 
            L0x20019938_f * (x**120) + L0x2001993a_f * (x**121) + 
            L0x2001993c_f * (x**122) + L0x2001993e_f * (x**123) + 
            L0x20019940_f * (x**124) + L0x20019942_f * (x**125) + 
            L0x20019944_f * (x**126) + L0x20019946_f * (x**127) + 
            L0x20019948_f * (x**128) + L0x2001994a_f * (x**129) + 
            L0x2001994c_f * (x**130) + L0x2001994e_f * (x**131) + 
            L0x20019950_f * (x**132) + L0x20019952_f * (x**133) + 
            L0x20019954_f * (x**134) + L0x20019956_f * (x**135) + 
            L0x20019958_f * (x**136) + L0x2001995a_f * (x**137) + 
            L0x2001995c_f * (x**138) + L0x2001995e_f * (x**139) + 
            L0x20019960_f * (x**140) + L0x20019962_f * (x**141) + 
            L0x20019964_f * (x**142) + L0x20019966_f * (x**143) + 
            L0x20019968_f * (x**144) + L0x2001996a_f * (x**145) + 
            L0x2001996c_f * (x**146) + L0x2001996e_f * (x**147) + 
            L0x20019970_f * (x**148) + L0x20019972_f * (x**149) + 
            L0x20019974_f * (x**150) + L0x20019976_f * (x**151) + 
            L0x20019978_f * (x**152) + L0x2001997a_f * (x**153) + 
            L0x2001997c_f * (x**154) + L0x2001997e_f * (x**155) + 
            L0x20019980_f * (x**156) + L0x20019982_f * (x**157) + 
            L0x20019984_f * (x**158) + L0x20019986_f * (x**159) + 
            L0x20019988_f * (x**160) + L0x2001998a_f * (x**161) + 
            L0x2001998c_f * (x**162) + L0x2001998e_f * (x**163) + 
            L0x20019990_f * (x**164) + L0x20019992_f * (x**165) + 
            L0x20019994_f * (x**166) + L0x20019996_f * (x**167) + 
            L0x20019998_f * (x**168) + L0x2001999a_f * (x**169) + 
            L0x2001999c_f * (x**170) + L0x2001999e_f * (x**171) + 
            L0x200199a0_f * (x**172) + L0x200199a2_f * (x**173) + 
            L0x200199a4_f * (x**174) + L0x200199a6_f * (x**175) + 
            L0x200199a8_f * (x**176) + L0x200199aa_f * (x**177) + 
            L0x200199ac_f * (x**178) + L0x200199ae_f * (x**179) + 
            L0x200199b0_f * (x**180) + L0x200199b2_f * (x**181) + 
            L0x200199b4_f * (x**182) + L0x200199b6_f * (x**183) + 
            L0x200199b8_f * (x**184) + L0x200199ba_f * (x**185) + 
            L0x200199bc_f * (x**186) + L0x200199be_f * (x**187) + 
            L0x200199c0_f * (x**188) + L0x200199c2_f * (x**189) + 
            L0x200199c4_f * (x**190) + L0x200199c6_f * (x**191) + 
            L0x200199c8_f * (x**192) + L0x200199ca_f * (x**193) + 
            L0x200199cc_f * (x**194) + L0x200199ce_f * (x**195) + 
            L0x200199d0_f * (x**196) + L0x200199d2_f * (x**197) + 
            L0x200199d4_f * (x**198) + L0x200199d6_f * (x**199) + 
            L0x200199d8_f * (x**200) + L0x200199da_f * (x**201) + 
            L0x200199dc_f * (x**202) + L0x200199de_f * (x**203) + 
            L0x200199e0_f * (x**204) + L0x200199e2_f * (x**205) + 
            L0x200199e4_f * (x**206) + L0x200199e6_f * (x**207) + 
            L0x200199e8_f * (x**208) + L0x200199ea_f * (x**209) + 
            L0x200199ec_f * (x**210) + L0x200199ee_f * (x**211) + 
            L0x200199f0_f * (x**212) + L0x200199f2_f * (x**213) + 
            L0x200199f4_f * (x**214) + L0x200199f6_f * (x**215) + 
            L0x200199f8_f * (x**216) + L0x200199fa_f * (x**217) + 
            L0x200199fc_f * (x**218) + L0x200199fe_f * (x**219) + 
            L0x20019a00_f * (x**220) + L0x20019a02_f * (x**221) + 
            L0x20019a04_f * (x**222) + L0x20019a06_f * (x**223) + 
            L0x20019a08_f * (x**224) + L0x20019a0a_f * (x**225) + 
            L0x20019a0c_f * (x**226) + L0x20019a0e_f * (x**227) + 
            L0x20019a10_f * (x**228) + L0x20019a12_f * (x**229) + 
            L0x20019a14_f * (x**230) + L0x20019a16_f * (x**231) + 
            L0x20019a18_f * (x**232) + L0x20019a1a_f * (x**233) + 
            L0x20019a1c_f * (x**234) + L0x20019a1e_f * (x**235) + 
            L0x20019a20_f * (x**236) + L0x20019a22_f * (x**237) + 
            L0x20019a24_f * (x**238) + L0x20019a26_f * (x**239) + 
            L0x20019a28_f * (x**240) + L0x20019a2a_f * (x**241) + 
            L0x20019a2c_f * (x**242) + L0x20019a2e_f * (x**243) + 
            L0x20019a30_f * (x**244) + L0x20019a32_f * (x**245) + 
            L0x20019a34_f * (x**246) + L0x20019a36_f * (x**247) + 
            L0x20019a38_f * (x**248) + L0x20019a3a_f * (x**249) + 
            L0x20019a3c_f * (x**250) + L0x20019a3e_f * (x**251) + 
            L0x20019a40_f * (x**252) + L0x20019a42_f * (x**253) + 
            L0x20019a44_f * (x**254) + L0x20019a46_f * (x**255)
          )
          [25570049, x**4 - 18761234],
    (* inp_poly_63 *)
    eqmod (2**32) * (inp_poly_63 * inp_poly_63)
          (
            L0x20019848_f * (x**0) + L0x2001984a_f * (x**1) + 
            L0x2001984c_f * (x**2) + L0x2001984e_f * (x**3) + 
            L0x20019850_f * (x**4) + L0x20019852_f * (x**5) + 
            L0x20019854_f * (x**6) + L0x20019856_f * (x**7) + 
            L0x20019858_f * (x**8) + L0x2001985a_f * (x**9) + 
            L0x2001985c_f * (x**10) + L0x2001985e_f * (x**11) + 
            L0x20019860_f * (x**12) + L0x20019862_f * (x**13) + 
            L0x20019864_f * (x**14) + L0x20019866_f * (x**15) + 
            L0x20019868_f * (x**16) + L0x2001986a_f * (x**17) + 
            L0x2001986c_f * (x**18) + L0x2001986e_f * (x**19) + 
            L0x20019870_f * (x**20) + L0x20019872_f * (x**21) + 
            L0x20019874_f * (x**22) + L0x20019876_f * (x**23) + 
            L0x20019878_f * (x**24) + L0x2001987a_f * (x**25) + 
            L0x2001987c_f * (x**26) + L0x2001987e_f * (x**27) + 
            L0x20019880_f * (x**28) + L0x20019882_f * (x**29) + 
            L0x20019884_f * (x**30) + L0x20019886_f * (x**31) + 
            L0x20019888_f * (x**32) + L0x2001988a_f * (x**33) + 
            L0x2001988c_f * (x**34) + L0x2001988e_f * (x**35) + 
            L0x20019890_f * (x**36) + L0x20019892_f * (x**37) + 
            L0x20019894_f * (x**38) + L0x20019896_f * (x**39) + 
            L0x20019898_f * (x**40) + L0x2001989a_f * (x**41) + 
            L0x2001989c_f * (x**42) + L0x2001989e_f * (x**43) + 
            L0x200198a0_f * (x**44) + L0x200198a2_f * (x**45) + 
            L0x200198a4_f * (x**46) + L0x200198a6_f * (x**47) + 
            L0x200198a8_f * (x**48) + L0x200198aa_f * (x**49) + 
            L0x200198ac_f * (x**50) + L0x200198ae_f * (x**51) + 
            L0x200198b0_f * (x**52) + L0x200198b2_f * (x**53) + 
            L0x200198b4_f * (x**54) + L0x200198b6_f * (x**55) + 
            L0x200198b8_f * (x**56) + L0x200198ba_f * (x**57) + 
            L0x200198bc_f * (x**58) + L0x200198be_f * (x**59) + 
            L0x200198c0_f * (x**60) + L0x200198c2_f * (x**61) + 
            L0x200198c4_f * (x**62) + L0x200198c6_f * (x**63) + 
            L0x200198c8_f * (x**64) + L0x200198ca_f * (x**65) + 
            L0x200198cc_f * (x**66) + L0x200198ce_f * (x**67) + 
            L0x200198d0_f * (x**68) + L0x200198d2_f * (x**69) + 
            L0x200198d4_f * (x**70) + L0x200198d6_f * (x**71) + 
            L0x200198d8_f * (x**72) + L0x200198da_f * (x**73) + 
            L0x200198dc_f * (x**74) + L0x200198de_f * (x**75) + 
            L0x200198e0_f * (x**76) + L0x200198e2_f * (x**77) + 
            L0x200198e4_f * (x**78) + L0x200198e6_f * (x**79) + 
            L0x200198e8_f * (x**80) + L0x200198ea_f * (x**81) + 
            L0x200198ec_f * (x**82) + L0x200198ee_f * (x**83) + 
            L0x200198f0_f * (x**84) + L0x200198f2_f * (x**85) + 
            L0x200198f4_f * (x**86) + L0x200198f6_f * (x**87) + 
            L0x200198f8_f * (x**88) + L0x200198fa_f * (x**89) + 
            L0x200198fc_f * (x**90) + L0x200198fe_f * (x**91) + 
            L0x20019900_f * (x**92) + L0x20019902_f * (x**93) + 
            L0x20019904_f * (x**94) + L0x20019906_f * (x**95) + 
            L0x20019908_f * (x**96) + L0x2001990a_f * (x**97) + 
            L0x2001990c_f * (x**98) + L0x2001990e_f * (x**99) + 
            L0x20019910_f * (x**100) + L0x20019912_f * (x**101) + 
            L0x20019914_f * (x**102) + L0x20019916_f * (x**103) + 
            L0x20019918_f * (x**104) + L0x2001991a_f * (x**105) + 
            L0x2001991c_f * (x**106) + L0x2001991e_f * (x**107) + 
            L0x20019920_f * (x**108) + L0x20019922_f * (x**109) + 
            L0x20019924_f * (x**110) + L0x20019926_f * (x**111) + 
            L0x20019928_f * (x**112) + L0x2001992a_f * (x**113) + 
            L0x2001992c_f * (x**114) + L0x2001992e_f * (x**115) + 
            L0x20019930_f * (x**116) + L0x20019932_f * (x**117) + 
            L0x20019934_f * (x**118) + L0x20019936_f * (x**119) + 
            L0x20019938_f * (x**120) + L0x2001993a_f * (x**121) + 
            L0x2001993c_f * (x**122) + L0x2001993e_f * (x**123) + 
            L0x20019940_f * (x**124) + L0x20019942_f * (x**125) + 
            L0x20019944_f * (x**126) + L0x20019946_f * (x**127) + 
            L0x20019948_f * (x**128) + L0x2001994a_f * (x**129) + 
            L0x2001994c_f * (x**130) + L0x2001994e_f * (x**131) + 
            L0x20019950_f * (x**132) + L0x20019952_f * (x**133) + 
            L0x20019954_f * (x**134) + L0x20019956_f * (x**135) + 
            L0x20019958_f * (x**136) + L0x2001995a_f * (x**137) + 
            L0x2001995c_f * (x**138) + L0x2001995e_f * (x**139) + 
            L0x20019960_f * (x**140) + L0x20019962_f * (x**141) + 
            L0x20019964_f * (x**142) + L0x20019966_f * (x**143) + 
            L0x20019968_f * (x**144) + L0x2001996a_f * (x**145) + 
            L0x2001996c_f * (x**146) + L0x2001996e_f * (x**147) + 
            L0x20019970_f * (x**148) + L0x20019972_f * (x**149) + 
            L0x20019974_f * (x**150) + L0x20019976_f * (x**151) + 
            L0x20019978_f * (x**152) + L0x2001997a_f * (x**153) + 
            L0x2001997c_f * (x**154) + L0x2001997e_f * (x**155) + 
            L0x20019980_f * (x**156) + L0x20019982_f * (x**157) + 
            L0x20019984_f * (x**158) + L0x20019986_f * (x**159) + 
            L0x20019988_f * (x**160) + L0x2001998a_f * (x**161) + 
            L0x2001998c_f * (x**162) + L0x2001998e_f * (x**163) + 
            L0x20019990_f * (x**164) + L0x20019992_f * (x**165) + 
            L0x20019994_f * (x**166) + L0x20019996_f * (x**167) + 
            L0x20019998_f * (x**168) + L0x2001999a_f * (x**169) + 
            L0x2001999c_f * (x**170) + L0x2001999e_f * (x**171) + 
            L0x200199a0_f * (x**172) + L0x200199a2_f * (x**173) + 
            L0x200199a4_f * (x**174) + L0x200199a6_f * (x**175) + 
            L0x200199a8_f * (x**176) + L0x200199aa_f * (x**177) + 
            L0x200199ac_f * (x**178) + L0x200199ae_f * (x**179) + 
            L0x200199b0_f * (x**180) + L0x200199b2_f * (x**181) + 
            L0x200199b4_f * (x**182) + L0x200199b6_f * (x**183) + 
            L0x200199b8_f * (x**184) + L0x200199ba_f * (x**185) + 
            L0x200199bc_f * (x**186) + L0x200199be_f * (x**187) + 
            L0x200199c0_f * (x**188) + L0x200199c2_f * (x**189) + 
            L0x200199c4_f * (x**190) + L0x200199c6_f * (x**191) + 
            L0x200199c8_f * (x**192) + L0x200199ca_f * (x**193) + 
            L0x200199cc_f * (x**194) + L0x200199ce_f * (x**195) + 
            L0x200199d0_f * (x**196) + L0x200199d2_f * (x**197) + 
            L0x200199d4_f * (x**198) + L0x200199d6_f * (x**199) + 
            L0x200199d8_f * (x**200) + L0x200199da_f * (x**201) + 
            L0x200199dc_f * (x**202) + L0x200199de_f * (x**203) + 
            L0x200199e0_f * (x**204) + L0x200199e2_f * (x**205) + 
            L0x200199e4_f * (x**206) + L0x200199e6_f * (x**207) + 
            L0x200199e8_f * (x**208) + L0x200199ea_f * (x**209) + 
            L0x200199ec_f * (x**210) + L0x200199ee_f * (x**211) + 
            L0x200199f0_f * (x**212) + L0x200199f2_f * (x**213) + 
            L0x200199f4_f * (x**214) + L0x200199f6_f * (x**215) + 
            L0x200199f8_f * (x**216) + L0x200199fa_f * (x**217) + 
            L0x200199fc_f * (x**218) + L0x200199fe_f * (x**219) + 
            L0x20019a00_f * (x**220) + L0x20019a02_f * (x**221) + 
            L0x20019a04_f * (x**222) + L0x20019a06_f * (x**223) + 
            L0x20019a08_f * (x**224) + L0x20019a0a_f * (x**225) + 
            L0x20019a0c_f * (x**226) + L0x20019a0e_f * (x**227) + 
            L0x20019a10_f * (x**228) + L0x20019a12_f * (x**229) + 
            L0x20019a14_f * (x**230) + L0x20019a16_f * (x**231) + 
            L0x20019a18_f * (x**232) + L0x20019a1a_f * (x**233) + 
            L0x20019a1c_f * (x**234) + L0x20019a1e_f * (x**235) + 
            L0x20019a20_f * (x**236) + L0x20019a22_f * (x**237) + 
            L0x20019a24_f * (x**238) + L0x20019a26_f * (x**239) + 
            L0x20019a28_f * (x**240) + L0x20019a2a_f * (x**241) + 
            L0x20019a2c_f * (x**242) + L0x20019a2e_f * (x**243) + 
            L0x20019a30_f * (x**244) + L0x20019a32_f * (x**245) + 
            L0x20019a34_f * (x**246) + L0x20019a36_f * (x**247) + 
            L0x20019a38_f * (x**248) + L0x20019a3a_f * (x**249) + 
            L0x20019a3c_f * (x**250) + L0x20019a3e_f * (x**251) + 
            L0x20019a40_f * (x**252) + L0x20019a42_f * (x**253) + 
            L0x20019a44_f * (x**254) + L0x20019a46_f * (x**255)
          )
          [25570049, x**4 - 6808815]
  ] prove with [cuts [70]]
  &&
  true
;

(* === prove output poly and the one before truncated are equivalent mod q === *)
cut (* 87 *)
  true && true;

cut (* 88 *)
  and [
    eqmod (
            L0x20019848 * (x**0) + L0x2001984a * (x**1) + 
            L0x2001984c * (x**2) + L0x2001984e * (x**3) + 
            L0x20019850 * (x**4) + L0x20019852 * (x**5) + 
            L0x20019854 * (x**6) + L0x20019856 * (x**7) + 
            L0x20019858 * (x**8) + L0x2001985a * (x**9) + 
            L0x2001985c * (x**10) + L0x2001985e * (x**11) + 
            L0x20019860 * (x**12) + L0x20019862 * (x**13) + 
            L0x20019864 * (x**14) + L0x20019866 * (x**15) + 
            L0x20019868 * (x**16) + L0x2001986a * (x**17) + 
            L0x2001986c * (x**18) + L0x2001986e * (x**19) + 
            L0x20019870 * (x**20) + L0x20019872 * (x**21) + 
            L0x20019874 * (x**22) + L0x20019876 * (x**23) + 
            L0x20019878 * (x**24) + L0x2001987a * (x**25) + 
            L0x2001987c * (x**26) + L0x2001987e * (x**27) + 
            L0x20019880 * (x**28) + L0x20019882 * (x**29) + 
            L0x20019884 * (x**30) + L0x20019886 * (x**31) + 
            L0x20019888 * (x**32) + L0x2001988a * (x**33) + 
            L0x2001988c * (x**34) + L0x2001988e * (x**35) + 
            L0x20019890 * (x**36) + L0x20019892 * (x**37) + 
            L0x20019894 * (x**38) + L0x20019896 * (x**39) + 
            L0x20019898 * (x**40) + L0x2001989a * (x**41) + 
            L0x2001989c * (x**42) + L0x2001989e * (x**43) + 
            L0x200198a0 * (x**44) + L0x200198a2 * (x**45) + 
            L0x200198a4 * (x**46) + L0x200198a6 * (x**47) + 
            L0x200198a8 * (x**48) + L0x200198aa * (x**49) + 
            L0x200198ac * (x**50) + L0x200198ae * (x**51) + 
            L0x200198b0 * (x**52) + L0x200198b2 * (x**53) + 
            L0x200198b4 * (x**54) + L0x200198b6 * (x**55) + 
            L0x200198b8 * (x**56) + L0x200198ba * (x**57) + 
            L0x200198bc * (x**58) + L0x200198be * (x**59) + 
            L0x200198c0 * (x**60) + L0x200198c2 * (x**61) + 
            L0x200198c4 * (x**62) + L0x200198c6 * (x**63) + 
            L0x200198c8 * (x**64) + L0x200198ca * (x**65) + 
            L0x200198cc * (x**66) + L0x200198ce * (x**67) + 
            L0x200198d0 * (x**68) + L0x200198d2 * (x**69) + 
            L0x200198d4 * (x**70) + L0x200198d6 * (x**71) + 
            L0x200198d8 * (x**72) + L0x200198da * (x**73) + 
            L0x200198dc * (x**74) + L0x200198de * (x**75) + 
            L0x200198e0 * (x**76) + L0x200198e2 * (x**77) + 
            L0x200198e4 * (x**78) + L0x200198e6 * (x**79) + 
            L0x200198e8 * (x**80) + L0x200198ea * (x**81) + 
            L0x200198ec * (x**82) + L0x200198ee * (x**83) + 
            L0x200198f0 * (x**84) + L0x200198f2 * (x**85) + 
            L0x200198f4 * (x**86) + L0x200198f6 * (x**87) + 
            L0x200198f8 * (x**88) + L0x200198fa * (x**89) + 
            L0x200198fc * (x**90) + L0x200198fe * (x**91) + 
            L0x20019900 * (x**92) + L0x20019902 * (x**93) + 
            L0x20019904 * (x**94) + L0x20019906 * (x**95) + 
            L0x20019908 * (x**96) + L0x2001990a * (x**97) + 
            L0x2001990c * (x**98) + L0x2001990e * (x**99) + 
            L0x20019910 * (x**100) + L0x20019912 * (x**101) + 
            L0x20019914 * (x**102) + L0x20019916 * (x**103) + 
            L0x20019918 * (x**104) + L0x2001991a * (x**105) + 
            L0x2001991c * (x**106) + L0x2001991e * (x**107) + 
            L0x20019920 * (x**108) + L0x20019922 * (x**109) + 
            L0x20019924 * (x**110) + L0x20019926 * (x**111) + 
            L0x20019928 * (x**112) + L0x2001992a * (x**113) + 
            L0x2001992c * (x**114) + L0x2001992e * (x**115) + 
            L0x20019930 * (x**116) + L0x20019932 * (x**117) + 
            L0x20019934 * (x**118) + L0x20019936 * (x**119) + 
            L0x20019938 * (x**120) + L0x2001993a * (x**121) + 
            L0x2001993c * (x**122) + L0x2001993e * (x**123) + 
            L0x20019940 * (x**124) + L0x20019942 * (x**125) + 
            L0x20019944 * (x**126) + L0x20019946 * (x**127) + 
            L0x20019948 * (x**128) + L0x2001994a * (x**129) + 
            L0x2001994c * (x**130) + L0x2001994e * (x**131) + 
            L0x20019950 * (x**132) + L0x20019952 * (x**133) + 
            L0x20019954 * (x**134) + L0x20019956 * (x**135) + 
            L0x20019958 * (x**136) + L0x2001995a * (x**137) + 
            L0x2001995c * (x**138) + L0x2001995e * (x**139) + 
            L0x20019960 * (x**140) + L0x20019962 * (x**141) + 
            L0x20019964 * (x**142) + L0x20019966 * (x**143) + 
            L0x20019968 * (x**144) + L0x2001996a * (x**145) + 
            L0x2001996c * (x**146) + L0x2001996e * (x**147) + 
            L0x20019970 * (x**148) + L0x20019972 * (x**149) + 
            L0x20019974 * (x**150) + L0x20019976 * (x**151) + 
            L0x20019978 * (x**152) + L0x2001997a * (x**153) + 
            L0x2001997c * (x**154) + L0x2001997e * (x**155) + 
            L0x20019980 * (x**156) + L0x20019982 * (x**157) + 
            L0x20019984 * (x**158) + L0x20019986 * (x**159) + 
            L0x20019988 * (x**160) + L0x2001998a * (x**161) + 
            L0x2001998c * (x**162) + L0x2001998e * (x**163) + 
            L0x20019990 * (x**164) + L0x20019992 * (x**165) + 
            L0x20019994 * (x**166) + L0x20019996 * (x**167) + 
            L0x20019998 * (x**168) + L0x2001999a * (x**169) + 
            L0x2001999c * (x**170) + L0x2001999e * (x**171) + 
            L0x200199a0 * (x**172) + L0x200199a2 * (x**173) + 
            L0x200199a4 * (x**174) + L0x200199a6 * (x**175) + 
            L0x200199a8 * (x**176) + L0x200199aa * (x**177) + 
            L0x200199ac * (x**178) + L0x200199ae * (x**179) + 
            L0x200199b0 * (x**180) + L0x200199b2 * (x**181) + 
            L0x200199b4 * (x**182) + L0x200199b6 * (x**183) + 
            L0x200199b8 * (x**184) + L0x200199ba * (x**185) + 
            L0x200199bc * (x**186) + L0x200199be * (x**187) + 
            L0x200199c0 * (x**188) + L0x200199c2 * (x**189) + 
            L0x200199c4 * (x**190) + L0x200199c6 * (x**191) + 
            L0x200199c8 * (x**192) + L0x200199ca * (x**193) + 
            L0x200199cc * (x**194) + L0x200199ce * (x**195) + 
            L0x200199d0 * (x**196) + L0x200199d2 * (x**197) + 
            L0x200199d4 * (x**198) + L0x200199d6 * (x**199) + 
            L0x200199d8 * (x**200) + L0x200199da * (x**201) + 
            L0x200199dc * (x**202) + L0x200199de * (x**203) + 
            L0x200199e0 * (x**204) + L0x200199e2 * (x**205) + 
            L0x200199e4 * (x**206) + L0x200199e6 * (x**207) + 
            L0x200199e8 * (x**208) + L0x200199ea * (x**209) + 
            L0x200199ec * (x**210) + L0x200199ee * (x**211) + 
            L0x200199f0 * (x**212) + L0x200199f2 * (x**213) + 
            L0x200199f4 * (x**214) + L0x200199f6 * (x**215) + 
            L0x200199f8 * (x**216) + L0x200199fa * (x**217) + 
            L0x200199fc * (x**218) + L0x200199fe * (x**219) + 
            L0x20019a00 * (x**220) + L0x20019a02 * (x**221) + 
            L0x20019a04 * (x**222) + L0x20019a06 * (x**223) + 
            L0x20019a08 * (x**224) + L0x20019a0a * (x**225) + 
            L0x20019a0c * (x**226) + L0x20019a0e * (x**227) + 
            L0x20019a10 * (x**228) + L0x20019a12 * (x**229) + 
            L0x20019a14 * (x**230) + L0x20019a16 * (x**231) + 
            L0x20019a18 * (x**232) + L0x20019a1a * (x**233) + 
            L0x20019a1c * (x**234) + L0x20019a1e * (x**235) + 
            L0x20019a20 * (x**236) + L0x20019a22 * (x**237) + 
            L0x20019a24 * (x**238) + L0x20019a26 * (x**239) + 
            L0x20019a28 * (x**240) + L0x20019a2a * (x**241) + 
            L0x20019a2c * (x**242) + L0x20019a2e * (x**243) + 
            L0x20019a30 * (x**244) + L0x20019a32 * (x**245) + 
            L0x20019a34 * (x**246) + L0x20019a36 * (x**247) + 
            L0x20019a38 * (x**248) + L0x20019a3a * (x**249) + 
            L0x20019a3c * (x**250) + L0x20019a3e * (x**251) + 
            L0x20019a40 * (x**252) + L0x20019a42 * (x**253) + 
            L0x20019a44 * (x**254) + L0x20019a46 * (x**255)
          )
          (
            L0x20019848_f * (x**0) + L0x2001984a_f * (x**1) + 
            L0x2001984c_f * (x**2) + L0x2001984e_f * (x**3) + 
            L0x20019850_f * (x**4) + L0x20019852_f * (x**5) + 
            L0x20019854_f * (x**6) + L0x20019856_f * (x**7) + 
            L0x20019858_f * (x**8) + L0x2001985a_f * (x**9) + 
            L0x2001985c_f * (x**10) + L0x2001985e_f * (x**11) + 
            L0x20019860_f * (x**12) + L0x20019862_f * (x**13) + 
            L0x20019864_f * (x**14) + L0x20019866_f * (x**15) + 
            L0x20019868_f * (x**16) + L0x2001986a_f * (x**17) + 
            L0x2001986c_f * (x**18) + L0x2001986e_f * (x**19) + 
            L0x20019870_f * (x**20) + L0x20019872_f * (x**21) + 
            L0x20019874_f * (x**22) + L0x20019876_f * (x**23) + 
            L0x20019878_f * (x**24) + L0x2001987a_f * (x**25) + 
            L0x2001987c_f * (x**26) + L0x2001987e_f * (x**27) + 
            L0x20019880_f * (x**28) + L0x20019882_f * (x**29) + 
            L0x20019884_f * (x**30) + L0x20019886_f * (x**31) + 
            L0x20019888_f * (x**32) + L0x2001988a_f * (x**33) + 
            L0x2001988c_f * (x**34) + L0x2001988e_f * (x**35) + 
            L0x20019890_f * (x**36) + L0x20019892_f * (x**37) + 
            L0x20019894_f * (x**38) + L0x20019896_f * (x**39) + 
            L0x20019898_f * (x**40) + L0x2001989a_f * (x**41) + 
            L0x2001989c_f * (x**42) + L0x2001989e_f * (x**43) + 
            L0x200198a0_f * (x**44) + L0x200198a2_f * (x**45) + 
            L0x200198a4_f * (x**46) + L0x200198a6_f * (x**47) + 
            L0x200198a8_f * (x**48) + L0x200198aa_f * (x**49) + 
            L0x200198ac_f * (x**50) + L0x200198ae_f * (x**51) + 
            L0x200198b0_f * (x**52) + L0x200198b2_f * (x**53) + 
            L0x200198b4_f * (x**54) + L0x200198b6_f * (x**55) + 
            L0x200198b8_f * (x**56) + L0x200198ba_f * (x**57) + 
            L0x200198bc_f * (x**58) + L0x200198be_f * (x**59) + 
            L0x200198c0_f * (x**60) + L0x200198c2_f * (x**61) + 
            L0x200198c4_f * (x**62) + L0x200198c6_f * (x**63) + 
            L0x200198c8_f * (x**64) + L0x200198ca_f * (x**65) + 
            L0x200198cc_f * (x**66) + L0x200198ce_f * (x**67) + 
            L0x200198d0_f * (x**68) + L0x200198d2_f * (x**69) + 
            L0x200198d4_f * (x**70) + L0x200198d6_f * (x**71) + 
            L0x200198d8_f * (x**72) + L0x200198da_f * (x**73) + 
            L0x200198dc_f * (x**74) + L0x200198de_f * (x**75) + 
            L0x200198e0_f * (x**76) + L0x200198e2_f * (x**77) + 
            L0x200198e4_f * (x**78) + L0x200198e6_f * (x**79) + 
            L0x200198e8_f * (x**80) + L0x200198ea_f * (x**81) + 
            L0x200198ec_f * (x**82) + L0x200198ee_f * (x**83) + 
            L0x200198f0_f * (x**84) + L0x200198f2_f * (x**85) + 
            L0x200198f4_f * (x**86) + L0x200198f6_f * (x**87) + 
            L0x200198f8_f * (x**88) + L0x200198fa_f * (x**89) + 
            L0x200198fc_f * (x**90) + L0x200198fe_f * (x**91) + 
            L0x20019900_f * (x**92) + L0x20019902_f * (x**93) + 
            L0x20019904_f * (x**94) + L0x20019906_f * (x**95) + 
            L0x20019908_f * (x**96) + L0x2001990a_f * (x**97) + 
            L0x2001990c_f * (x**98) + L0x2001990e_f * (x**99) + 
            L0x20019910_f * (x**100) + L0x20019912_f * (x**101) + 
            L0x20019914_f * (x**102) + L0x20019916_f * (x**103) + 
            L0x20019918_f * (x**104) + L0x2001991a_f * (x**105) + 
            L0x2001991c_f * (x**106) + L0x2001991e_f * (x**107) + 
            L0x20019920_f * (x**108) + L0x20019922_f * (x**109) + 
            L0x20019924_f * (x**110) + L0x20019926_f * (x**111) + 
            L0x20019928_f * (x**112) + L0x2001992a_f * (x**113) + 
            L0x2001992c_f * (x**114) + L0x2001992e_f * (x**115) + 
            L0x20019930_f * (x**116) + L0x20019932_f * (x**117) + 
            L0x20019934_f * (x**118) + L0x20019936_f * (x**119) + 
            L0x20019938_f * (x**120) + L0x2001993a_f * (x**121) + 
            L0x2001993c_f * (x**122) + L0x2001993e_f * (x**123) + 
            L0x20019940_f * (x**124) + L0x20019942_f * (x**125) + 
            L0x20019944_f * (x**126) + L0x20019946_f * (x**127) + 
            L0x20019948_f * (x**128) + L0x2001994a_f * (x**129) + 
            L0x2001994c_f * (x**130) + L0x2001994e_f * (x**131) + 
            L0x20019950_f * (x**132) + L0x20019952_f * (x**133) + 
            L0x20019954_f * (x**134) + L0x20019956_f * (x**135) + 
            L0x20019958_f * (x**136) + L0x2001995a_f * (x**137) + 
            L0x2001995c_f * (x**138) + L0x2001995e_f * (x**139) + 
            L0x20019960_f * (x**140) + L0x20019962_f * (x**141) + 
            L0x20019964_f * (x**142) + L0x20019966_f * (x**143) + 
            L0x20019968_f * (x**144) + L0x2001996a_f * (x**145) + 
            L0x2001996c_f * (x**146) + L0x2001996e_f * (x**147) + 
            L0x20019970_f * (x**148) + L0x20019972_f * (x**149) + 
            L0x20019974_f * (x**150) + L0x20019976_f * (x**151) + 
            L0x20019978_f * (x**152) + L0x2001997a_f * (x**153) + 
            L0x2001997c_f * (x**154) + L0x2001997e_f * (x**155) + 
            L0x20019980_f * (x**156) + L0x20019982_f * (x**157) + 
            L0x20019984_f * (x**158) + L0x20019986_f * (x**159) + 
            L0x20019988_f * (x**160) + L0x2001998a_f * (x**161) + 
            L0x2001998c_f * (x**162) + L0x2001998e_f * (x**163) + 
            L0x20019990_f * (x**164) + L0x20019992_f * (x**165) + 
            L0x20019994_f * (x**166) + L0x20019996_f * (x**167) + 
            L0x20019998_f * (x**168) + L0x2001999a_f * (x**169) + 
            L0x2001999c_f * (x**170) + L0x2001999e_f * (x**171) + 
            L0x200199a0_f * (x**172) + L0x200199a2_f * (x**173) + 
            L0x200199a4_f * (x**174) + L0x200199a6_f * (x**175) + 
            L0x200199a8_f * (x**176) + L0x200199aa_f * (x**177) + 
            L0x200199ac_f * (x**178) + L0x200199ae_f * (x**179) + 
            L0x200199b0_f * (x**180) + L0x200199b2_f * (x**181) + 
            L0x200199b4_f * (x**182) + L0x200199b6_f * (x**183) + 
            L0x200199b8_f * (x**184) + L0x200199ba_f * (x**185) + 
            L0x200199bc_f * (x**186) + L0x200199be_f * (x**187) + 
            L0x200199c0_f * (x**188) + L0x200199c2_f * (x**189) + 
            L0x200199c4_f * (x**190) + L0x200199c6_f * (x**191) + 
            L0x200199c8_f * (x**192) + L0x200199ca_f * (x**193) + 
            L0x200199cc_f * (x**194) + L0x200199ce_f * (x**195) + 
            L0x200199d0_f * (x**196) + L0x200199d2_f * (x**197) + 
            L0x200199d4_f * (x**198) + L0x200199d6_f * (x**199) + 
            L0x200199d8_f * (x**200) + L0x200199da_f * (x**201) + 
            L0x200199dc_f * (x**202) + L0x200199de_f * (x**203) + 
            L0x200199e0_f * (x**204) + L0x200199e2_f * (x**205) + 
            L0x200199e4_f * (x**206) + L0x200199e6_f * (x**207) + 
            L0x200199e8_f * (x**208) + L0x200199ea_f * (x**209) + 
            L0x200199ec_f * (x**210) + L0x200199ee_f * (x**211) + 
            L0x200199f0_f * (x**212) + L0x200199f2_f * (x**213) + 
            L0x200199f4_f * (x**214) + L0x200199f6_f * (x**215) + 
            L0x200199f8_f * (x**216) + L0x200199fa_f * (x**217) + 
            L0x200199fc_f * (x**218) + L0x200199fe_f * (x**219) + 
            L0x20019a00_f * (x**220) + L0x20019a02_f * (x**221) + 
            L0x20019a04_f * (x**222) + L0x20019a06_f * (x**223) + 
            L0x20019a08_f * (x**224) + L0x20019a0a_f * (x**225) + 
            L0x20019a0c_f * (x**226) + L0x20019a0e_f * (x**227) + 
            L0x20019a10_f * (x**228) + L0x20019a12_f * (x**229) + 
            L0x20019a14_f * (x**230) + L0x20019a16_f * (x**231) + 
            L0x20019a18_f * (x**232) + L0x20019a1a_f * (x**233) + 
            L0x20019a1c_f * (x**234) + L0x20019a1e_f * (x**235) + 
            L0x20019a20_f * (x**236) + L0x20019a22_f * (x**237) + 
            L0x20019a24_f * (x**238) + L0x20019a26_f * (x**239) + 
            L0x20019a28_f * (x**240) + L0x20019a2a_f * (x**241) + 
            L0x20019a2c_f * (x**242) + L0x20019a2e_f * (x**243) + 
            L0x20019a30_f * (x**244) + L0x20019a32_f * (x**245) + 
            L0x20019a34_f * (x**246) + L0x20019a36_f * (x**247) + 
            L0x20019a38_f * (x**248) + L0x20019a3a_f * (x**249) + 
            L0x20019a3c_f * (x**250) + L0x20019a3e_f * (x**251) + 
            L0x20019a40_f * (x**252) + L0x20019a42_f * (x**253) + 
            L0x20019a44_f * (x**254) + L0x20019a46_f * (x**255)
          )
          [2**13]
  ] prove with [cuts [36]]
  &&
  true
;

(* === post condition === *)
{
  and [
    (* = correctness of inverse NTT = *)
    (* inp_poly_0 *)
    eqmod (2**32) * (inp_poly_0 * inp_poly_0)
          (
            L0x20019848_f * (x**0) + L0x2001984a_f * (x**1) + 
            L0x2001984c_f * (x**2) + L0x2001984e_f * (x**3) + 
            L0x20019850_f * (x**4) + L0x20019852_f * (x**5) + 
            L0x20019854_f * (x**6) + L0x20019856_f * (x**7) + 
            L0x20019858_f * (x**8) + L0x2001985a_f * (x**9) + 
            L0x2001985c_f * (x**10) + L0x2001985e_f * (x**11) + 
            L0x20019860_f * (x**12) + L0x20019862_f * (x**13) + 
            L0x20019864_f * (x**14) + L0x20019866_f * (x**15) + 
            L0x20019868_f * (x**16) + L0x2001986a_f * (x**17) + 
            L0x2001986c_f * (x**18) + L0x2001986e_f * (x**19) + 
            L0x20019870_f * (x**20) + L0x20019872_f * (x**21) + 
            L0x20019874_f * (x**22) + L0x20019876_f * (x**23) + 
            L0x20019878_f * (x**24) + L0x2001987a_f * (x**25) + 
            L0x2001987c_f * (x**26) + L0x2001987e_f * (x**27) + 
            L0x20019880_f * (x**28) + L0x20019882_f * (x**29) + 
            L0x20019884_f * (x**30) + L0x20019886_f * (x**31) + 
            L0x20019888_f * (x**32) + L0x2001988a_f * (x**33) + 
            L0x2001988c_f * (x**34) + L0x2001988e_f * (x**35) + 
            L0x20019890_f * (x**36) + L0x20019892_f * (x**37) + 
            L0x20019894_f * (x**38) + L0x20019896_f * (x**39) + 
            L0x20019898_f * (x**40) + L0x2001989a_f * (x**41) + 
            L0x2001989c_f * (x**42) + L0x2001989e_f * (x**43) + 
            L0x200198a0_f * (x**44) + L0x200198a2_f * (x**45) + 
            L0x200198a4_f * (x**46) + L0x200198a6_f * (x**47) + 
            L0x200198a8_f * (x**48) + L0x200198aa_f * (x**49) + 
            L0x200198ac_f * (x**50) + L0x200198ae_f * (x**51) + 
            L0x200198b0_f * (x**52) + L0x200198b2_f * (x**53) + 
            L0x200198b4_f * (x**54) + L0x200198b6_f * (x**55) + 
            L0x200198b8_f * (x**56) + L0x200198ba_f * (x**57) + 
            L0x200198bc_f * (x**58) + L0x200198be_f * (x**59) + 
            L0x200198c0_f * (x**60) + L0x200198c2_f * (x**61) + 
            L0x200198c4_f * (x**62) + L0x200198c6_f * (x**63) + 
            L0x200198c8_f * (x**64) + L0x200198ca_f * (x**65) + 
            L0x200198cc_f * (x**66) + L0x200198ce_f * (x**67) + 
            L0x200198d0_f * (x**68) + L0x200198d2_f * (x**69) + 
            L0x200198d4_f * (x**70) + L0x200198d6_f * (x**71) + 
            L0x200198d8_f * (x**72) + L0x200198da_f * (x**73) + 
            L0x200198dc_f * (x**74) + L0x200198de_f * (x**75) + 
            L0x200198e0_f * (x**76) + L0x200198e2_f * (x**77) + 
            L0x200198e4_f * (x**78) + L0x200198e6_f * (x**79) + 
            L0x200198e8_f * (x**80) + L0x200198ea_f * (x**81) + 
            L0x200198ec_f * (x**82) + L0x200198ee_f * (x**83) + 
            L0x200198f0_f * (x**84) + L0x200198f2_f * (x**85) + 
            L0x200198f4_f * (x**86) + L0x200198f6_f * (x**87) + 
            L0x200198f8_f * (x**88) + L0x200198fa_f * (x**89) + 
            L0x200198fc_f * (x**90) + L0x200198fe_f * (x**91) + 
            L0x20019900_f * (x**92) + L0x20019902_f * (x**93) + 
            L0x20019904_f * (x**94) + L0x20019906_f * (x**95) + 
            L0x20019908_f * (x**96) + L0x2001990a_f * (x**97) + 
            L0x2001990c_f * (x**98) + L0x2001990e_f * (x**99) + 
            L0x20019910_f * (x**100) + L0x20019912_f * (x**101) + 
            L0x20019914_f * (x**102) + L0x20019916_f * (x**103) + 
            L0x20019918_f * (x**104) + L0x2001991a_f * (x**105) + 
            L0x2001991c_f * (x**106) + L0x2001991e_f * (x**107) + 
            L0x20019920_f * (x**108) + L0x20019922_f * (x**109) + 
            L0x20019924_f * (x**110) + L0x20019926_f * (x**111) + 
            L0x20019928_f * (x**112) + L0x2001992a_f * (x**113) + 
            L0x2001992c_f * (x**114) + L0x2001992e_f * (x**115) + 
            L0x20019930_f * (x**116) + L0x20019932_f * (x**117) + 
            L0x20019934_f * (x**118) + L0x20019936_f * (x**119) + 
            L0x20019938_f * (x**120) + L0x2001993a_f * (x**121) + 
            L0x2001993c_f * (x**122) + L0x2001993e_f * (x**123) + 
            L0x20019940_f * (x**124) + L0x20019942_f * (x**125) + 
            L0x20019944_f * (x**126) + L0x20019946_f * (x**127) + 
            L0x20019948_f * (x**128) + L0x2001994a_f * (x**129) + 
            L0x2001994c_f * (x**130) + L0x2001994e_f * (x**131) + 
            L0x20019950_f * (x**132) + L0x20019952_f * (x**133) + 
            L0x20019954_f * (x**134) + L0x20019956_f * (x**135) + 
            L0x20019958_f * (x**136) + L0x2001995a_f * (x**137) + 
            L0x2001995c_f * (x**138) + L0x2001995e_f * (x**139) + 
            L0x20019960_f * (x**140) + L0x20019962_f * (x**141) + 
            L0x20019964_f * (x**142) + L0x20019966_f * (x**143) + 
            L0x20019968_f * (x**144) + L0x2001996a_f * (x**145) + 
            L0x2001996c_f * (x**146) + L0x2001996e_f * (x**147) + 
            L0x20019970_f * (x**148) + L0x20019972_f * (x**149) + 
            L0x20019974_f * (x**150) + L0x20019976_f * (x**151) + 
            L0x20019978_f * (x**152) + L0x2001997a_f * (x**153) + 
            L0x2001997c_f * (x**154) + L0x2001997e_f * (x**155) + 
            L0x20019980_f * (x**156) + L0x20019982_f * (x**157) + 
            L0x20019984_f * (x**158) + L0x20019986_f * (x**159) + 
            L0x20019988_f * (x**160) + L0x2001998a_f * (x**161) + 
            L0x2001998c_f * (x**162) + L0x2001998e_f * (x**163) + 
            L0x20019990_f * (x**164) + L0x20019992_f * (x**165) + 
            L0x20019994_f * (x**166) + L0x20019996_f * (x**167) + 
            L0x20019998_f * (x**168) + L0x2001999a_f * (x**169) + 
            L0x2001999c_f * (x**170) + L0x2001999e_f * (x**171) + 
            L0x200199a0_f * (x**172) + L0x200199a2_f * (x**173) + 
            L0x200199a4_f * (x**174) + L0x200199a6_f * (x**175) + 
            L0x200199a8_f * (x**176) + L0x200199aa_f * (x**177) + 
            L0x200199ac_f * (x**178) + L0x200199ae_f * (x**179) + 
            L0x200199b0_f * (x**180) + L0x200199b2_f * (x**181) + 
            L0x200199b4_f * (x**182) + L0x200199b6_f * (x**183) + 
            L0x200199b8_f * (x**184) + L0x200199ba_f * (x**185) + 
            L0x200199bc_f * (x**186) + L0x200199be_f * (x**187) + 
            L0x200199c0_f * (x**188) + L0x200199c2_f * (x**189) + 
            L0x200199c4_f * (x**190) + L0x200199c6_f * (x**191) + 
            L0x200199c8_f * (x**192) + L0x200199ca_f * (x**193) + 
            L0x200199cc_f * (x**194) + L0x200199ce_f * (x**195) + 
            L0x200199d0_f * (x**196) + L0x200199d2_f * (x**197) + 
            L0x200199d4_f * (x**198) + L0x200199d6_f * (x**199) + 
            L0x200199d8_f * (x**200) + L0x200199da_f * (x**201) + 
            L0x200199dc_f * (x**202) + L0x200199de_f * (x**203) + 
            L0x200199e0_f * (x**204) + L0x200199e2_f * (x**205) + 
            L0x200199e4_f * (x**206) + L0x200199e6_f * (x**207) + 
            L0x200199e8_f * (x**208) + L0x200199ea_f * (x**209) + 
            L0x200199ec_f * (x**210) + L0x200199ee_f * (x**211) + 
            L0x200199f0_f * (x**212) + L0x200199f2_f * (x**213) + 
            L0x200199f4_f * (x**214) + L0x200199f6_f * (x**215) + 
            L0x200199f8_f * (x**216) + L0x200199fa_f * (x**217) + 
            L0x200199fc_f * (x**218) + L0x200199fe_f * (x**219) + 
            L0x20019a00_f * (x**220) + L0x20019a02_f * (x**221) + 
            L0x20019a04_f * (x**222) + L0x20019a06_f * (x**223) + 
            L0x20019a08_f * (x**224) + L0x20019a0a_f * (x**225) + 
            L0x20019a0c_f * (x**226) + L0x20019a0e_f * (x**227) + 
            L0x20019a10_f * (x**228) + L0x20019a12_f * (x**229) + 
            L0x20019a14_f * (x**230) + L0x20019a16_f * (x**231) + 
            L0x20019a18_f * (x**232) + L0x20019a1a_f * (x**233) + 
            L0x20019a1c_f * (x**234) + L0x20019a1e_f * (x**235) + 
            L0x20019a20_f * (x**236) + L0x20019a22_f * (x**237) + 
            L0x20019a24_f * (x**238) + L0x20019a26_f * (x**239) + 
            L0x20019a28_f * (x**240) + L0x20019a2a_f * (x**241) + 
            L0x20019a2c_f * (x**242) + L0x20019a2e_f * (x**243) + 
            L0x20019a30_f * (x**244) + L0x20019a32_f * (x**245) + 
            L0x20019a34_f * (x**246) + L0x20019a36_f * (x**247) + 
            L0x20019a38_f * (x**248) + L0x20019a3a_f * (x**249) + 
            L0x20019a3c_f * (x**250) + L0x20019a3e_f * (x**251) + 
            L0x20019a40_f * (x**252) + L0x20019a42_f * (x**253) + 
            L0x20019a44_f * (x**254) + L0x20019a46_f * (x**255)
          )
          [25570049, x**4 - 6103972],
    (* inp_poly_1 *)
    eqmod (2**32) * (inp_poly_1 * inp_poly_1)
          (
            L0x20019848_f * (x**0) + L0x2001984a_f * (x**1) + 
            L0x2001984c_f * (x**2) + L0x2001984e_f * (x**3) + 
            L0x20019850_f * (x**4) + L0x20019852_f * (x**5) + 
            L0x20019854_f * (x**6) + L0x20019856_f * (x**7) + 
            L0x20019858_f * (x**8) + L0x2001985a_f * (x**9) + 
            L0x2001985c_f * (x**10) + L0x2001985e_f * (x**11) + 
            L0x20019860_f * (x**12) + L0x20019862_f * (x**13) + 
            L0x20019864_f * (x**14) + L0x20019866_f * (x**15) + 
            L0x20019868_f * (x**16) + L0x2001986a_f * (x**17) + 
            L0x2001986c_f * (x**18) + L0x2001986e_f * (x**19) + 
            L0x20019870_f * (x**20) + L0x20019872_f * (x**21) + 
            L0x20019874_f * (x**22) + L0x20019876_f * (x**23) + 
            L0x20019878_f * (x**24) + L0x2001987a_f * (x**25) + 
            L0x2001987c_f * (x**26) + L0x2001987e_f * (x**27) + 
            L0x20019880_f * (x**28) + L0x20019882_f * (x**29) + 
            L0x20019884_f * (x**30) + L0x20019886_f * (x**31) + 
            L0x20019888_f * (x**32) + L0x2001988a_f * (x**33) + 
            L0x2001988c_f * (x**34) + L0x2001988e_f * (x**35) + 
            L0x20019890_f * (x**36) + L0x20019892_f * (x**37) + 
            L0x20019894_f * (x**38) + L0x20019896_f * (x**39) + 
            L0x20019898_f * (x**40) + L0x2001989a_f * (x**41) + 
            L0x2001989c_f * (x**42) + L0x2001989e_f * (x**43) + 
            L0x200198a0_f * (x**44) + L0x200198a2_f * (x**45) + 
            L0x200198a4_f * (x**46) + L0x200198a6_f * (x**47) + 
            L0x200198a8_f * (x**48) + L0x200198aa_f * (x**49) + 
            L0x200198ac_f * (x**50) + L0x200198ae_f * (x**51) + 
            L0x200198b0_f * (x**52) + L0x200198b2_f * (x**53) + 
            L0x200198b4_f * (x**54) + L0x200198b6_f * (x**55) + 
            L0x200198b8_f * (x**56) + L0x200198ba_f * (x**57) + 
            L0x200198bc_f * (x**58) + L0x200198be_f * (x**59) + 
            L0x200198c0_f * (x**60) + L0x200198c2_f * (x**61) + 
            L0x200198c4_f * (x**62) + L0x200198c6_f * (x**63) + 
            L0x200198c8_f * (x**64) + L0x200198ca_f * (x**65) + 
            L0x200198cc_f * (x**66) + L0x200198ce_f * (x**67) + 
            L0x200198d0_f * (x**68) + L0x200198d2_f * (x**69) + 
            L0x200198d4_f * (x**70) + L0x200198d6_f * (x**71) + 
            L0x200198d8_f * (x**72) + L0x200198da_f * (x**73) + 
            L0x200198dc_f * (x**74) + L0x200198de_f * (x**75) + 
            L0x200198e0_f * (x**76) + L0x200198e2_f * (x**77) + 
            L0x200198e4_f * (x**78) + L0x200198e6_f * (x**79) + 
            L0x200198e8_f * (x**80) + L0x200198ea_f * (x**81) + 
            L0x200198ec_f * (x**82) + L0x200198ee_f * (x**83) + 
            L0x200198f0_f * (x**84) + L0x200198f2_f * (x**85) + 
            L0x200198f4_f * (x**86) + L0x200198f6_f * (x**87) + 
            L0x200198f8_f * (x**88) + L0x200198fa_f * (x**89) + 
            L0x200198fc_f * (x**90) + L0x200198fe_f * (x**91) + 
            L0x20019900_f * (x**92) + L0x20019902_f * (x**93) + 
            L0x20019904_f * (x**94) + L0x20019906_f * (x**95) + 
            L0x20019908_f * (x**96) + L0x2001990a_f * (x**97) + 
            L0x2001990c_f * (x**98) + L0x2001990e_f * (x**99) + 
            L0x20019910_f * (x**100) + L0x20019912_f * (x**101) + 
            L0x20019914_f * (x**102) + L0x20019916_f * (x**103) + 
            L0x20019918_f * (x**104) + L0x2001991a_f * (x**105) + 
            L0x2001991c_f * (x**106) + L0x2001991e_f * (x**107) + 
            L0x20019920_f * (x**108) + L0x20019922_f * (x**109) + 
            L0x20019924_f * (x**110) + L0x20019926_f * (x**111) + 
            L0x20019928_f * (x**112) + L0x2001992a_f * (x**113) + 
            L0x2001992c_f * (x**114) + L0x2001992e_f * (x**115) + 
            L0x20019930_f * (x**116) + L0x20019932_f * (x**117) + 
            L0x20019934_f * (x**118) + L0x20019936_f * (x**119) + 
            L0x20019938_f * (x**120) + L0x2001993a_f * (x**121) + 
            L0x2001993c_f * (x**122) + L0x2001993e_f * (x**123) + 
            L0x20019940_f * (x**124) + L0x20019942_f * (x**125) + 
            L0x20019944_f * (x**126) + L0x20019946_f * (x**127) + 
            L0x20019948_f * (x**128) + L0x2001994a_f * (x**129) + 
            L0x2001994c_f * (x**130) + L0x2001994e_f * (x**131) + 
            L0x20019950_f * (x**132) + L0x20019952_f * (x**133) + 
            L0x20019954_f * (x**134) + L0x20019956_f * (x**135) + 
            L0x20019958_f * (x**136) + L0x2001995a_f * (x**137) + 
            L0x2001995c_f * (x**138) + L0x2001995e_f * (x**139) + 
            L0x20019960_f * (x**140) + L0x20019962_f * (x**141) + 
            L0x20019964_f * (x**142) + L0x20019966_f * (x**143) + 
            L0x20019968_f * (x**144) + L0x2001996a_f * (x**145) + 
            L0x2001996c_f * (x**146) + L0x2001996e_f * (x**147) + 
            L0x20019970_f * (x**148) + L0x20019972_f * (x**149) + 
            L0x20019974_f * (x**150) + L0x20019976_f * (x**151) + 
            L0x20019978_f * (x**152) + L0x2001997a_f * (x**153) + 
            L0x2001997c_f * (x**154) + L0x2001997e_f * (x**155) + 
            L0x20019980_f * (x**156) + L0x20019982_f * (x**157) + 
            L0x20019984_f * (x**158) + L0x20019986_f * (x**159) + 
            L0x20019988_f * (x**160) + L0x2001998a_f * (x**161) + 
            L0x2001998c_f * (x**162) + L0x2001998e_f * (x**163) + 
            L0x20019990_f * (x**164) + L0x20019992_f * (x**165) + 
            L0x20019994_f * (x**166) + L0x20019996_f * (x**167) + 
            L0x20019998_f * (x**168) + L0x2001999a_f * (x**169) + 
            L0x2001999c_f * (x**170) + L0x2001999e_f * (x**171) + 
            L0x200199a0_f * (x**172) + L0x200199a2_f * (x**173) + 
            L0x200199a4_f * (x**174) + L0x200199a6_f * (x**175) + 
            L0x200199a8_f * (x**176) + L0x200199aa_f * (x**177) + 
            L0x200199ac_f * (x**178) + L0x200199ae_f * (x**179) + 
            L0x200199b0_f * (x**180) + L0x200199b2_f * (x**181) + 
            L0x200199b4_f * (x**182) + L0x200199b6_f * (x**183) + 
            L0x200199b8_f * (x**184) + L0x200199ba_f * (x**185) + 
            L0x200199bc_f * (x**186) + L0x200199be_f * (x**187) + 
            L0x200199c0_f * (x**188) + L0x200199c2_f * (x**189) + 
            L0x200199c4_f * (x**190) + L0x200199c6_f * (x**191) + 
            L0x200199c8_f * (x**192) + L0x200199ca_f * (x**193) + 
            L0x200199cc_f * (x**194) + L0x200199ce_f * (x**195) + 
            L0x200199d0_f * (x**196) + L0x200199d2_f * (x**197) + 
            L0x200199d4_f * (x**198) + L0x200199d6_f * (x**199) + 
            L0x200199d8_f * (x**200) + L0x200199da_f * (x**201) + 
            L0x200199dc_f * (x**202) + L0x200199de_f * (x**203) + 
            L0x200199e0_f * (x**204) + L0x200199e2_f * (x**205) + 
            L0x200199e4_f * (x**206) + L0x200199e6_f * (x**207) + 
            L0x200199e8_f * (x**208) + L0x200199ea_f * (x**209) + 
            L0x200199ec_f * (x**210) + L0x200199ee_f * (x**211) + 
            L0x200199f0_f * (x**212) + L0x200199f2_f * (x**213) + 
            L0x200199f4_f * (x**214) + L0x200199f6_f * (x**215) + 
            L0x200199f8_f * (x**216) + L0x200199fa_f * (x**217) + 
            L0x200199fc_f * (x**218) + L0x200199fe_f * (x**219) + 
            L0x20019a00_f * (x**220) + L0x20019a02_f * (x**221) + 
            L0x20019a04_f * (x**222) + L0x20019a06_f * (x**223) + 
            L0x20019a08_f * (x**224) + L0x20019a0a_f * (x**225) + 
            L0x20019a0c_f * (x**226) + L0x20019a0e_f * (x**227) + 
            L0x20019a10_f * (x**228) + L0x20019a12_f * (x**229) + 
            L0x20019a14_f * (x**230) + L0x20019a16_f * (x**231) + 
            L0x20019a18_f * (x**232) + L0x20019a1a_f * (x**233) + 
            L0x20019a1c_f * (x**234) + L0x20019a1e_f * (x**235) + 
            L0x20019a20_f * (x**236) + L0x20019a22_f * (x**237) + 
            L0x20019a24_f * (x**238) + L0x20019a26_f * (x**239) + 
            L0x20019a28_f * (x**240) + L0x20019a2a_f * (x**241) + 
            L0x20019a2c_f * (x**242) + L0x20019a2e_f * (x**243) + 
            L0x20019a30_f * (x**244) + L0x20019a32_f * (x**245) + 
            L0x20019a34_f * (x**246) + L0x20019a36_f * (x**247) + 
            L0x20019a38_f * (x**248) + L0x20019a3a_f * (x**249) + 
            L0x20019a3c_f * (x**250) + L0x20019a3e_f * (x**251) + 
            L0x20019a40_f * (x**252) + L0x20019a42_f * (x**253) + 
            L0x20019a44_f * (x**254) + L0x20019a46_f * (x**255)
          )
          [25570049, x**4 - 19466077],
    (* inp_poly_2 *)
    eqmod (2**32) * (inp_poly_2 * inp_poly_2)
          (
            L0x20019848_f * (x**0) + L0x2001984a_f * (x**1) + 
            L0x2001984c_f * (x**2) + L0x2001984e_f * (x**3) + 
            L0x20019850_f * (x**4) + L0x20019852_f * (x**5) + 
            L0x20019854_f * (x**6) + L0x20019856_f * (x**7) + 
            L0x20019858_f * (x**8) + L0x2001985a_f * (x**9) + 
            L0x2001985c_f * (x**10) + L0x2001985e_f * (x**11) + 
            L0x20019860_f * (x**12) + L0x20019862_f * (x**13) + 
            L0x20019864_f * (x**14) + L0x20019866_f * (x**15) + 
            L0x20019868_f * (x**16) + L0x2001986a_f * (x**17) + 
            L0x2001986c_f * (x**18) + L0x2001986e_f * (x**19) + 
            L0x20019870_f * (x**20) + L0x20019872_f * (x**21) + 
            L0x20019874_f * (x**22) + L0x20019876_f * (x**23) + 
            L0x20019878_f * (x**24) + L0x2001987a_f * (x**25) + 
            L0x2001987c_f * (x**26) + L0x2001987e_f * (x**27) + 
            L0x20019880_f * (x**28) + L0x20019882_f * (x**29) + 
            L0x20019884_f * (x**30) + L0x20019886_f * (x**31) + 
            L0x20019888_f * (x**32) + L0x2001988a_f * (x**33) + 
            L0x2001988c_f * (x**34) + L0x2001988e_f * (x**35) + 
            L0x20019890_f * (x**36) + L0x20019892_f * (x**37) + 
            L0x20019894_f * (x**38) + L0x20019896_f * (x**39) + 
            L0x20019898_f * (x**40) + L0x2001989a_f * (x**41) + 
            L0x2001989c_f * (x**42) + L0x2001989e_f * (x**43) + 
            L0x200198a0_f * (x**44) + L0x200198a2_f * (x**45) + 
            L0x200198a4_f * (x**46) + L0x200198a6_f * (x**47) + 
            L0x200198a8_f * (x**48) + L0x200198aa_f * (x**49) + 
            L0x200198ac_f * (x**50) + L0x200198ae_f * (x**51) + 
            L0x200198b0_f * (x**52) + L0x200198b2_f * (x**53) + 
            L0x200198b4_f * (x**54) + L0x200198b6_f * (x**55) + 
            L0x200198b8_f * (x**56) + L0x200198ba_f * (x**57) + 
            L0x200198bc_f * (x**58) + L0x200198be_f * (x**59) + 
            L0x200198c0_f * (x**60) + L0x200198c2_f * (x**61) + 
            L0x200198c4_f * (x**62) + L0x200198c6_f * (x**63) + 
            L0x200198c8_f * (x**64) + L0x200198ca_f * (x**65) + 
            L0x200198cc_f * (x**66) + L0x200198ce_f * (x**67) + 
            L0x200198d0_f * (x**68) + L0x200198d2_f * (x**69) + 
            L0x200198d4_f * (x**70) + L0x200198d6_f * (x**71) + 
            L0x200198d8_f * (x**72) + L0x200198da_f * (x**73) + 
            L0x200198dc_f * (x**74) + L0x200198de_f * (x**75) + 
            L0x200198e0_f * (x**76) + L0x200198e2_f * (x**77) + 
            L0x200198e4_f * (x**78) + L0x200198e6_f * (x**79) + 
            L0x200198e8_f * (x**80) + L0x200198ea_f * (x**81) + 
            L0x200198ec_f * (x**82) + L0x200198ee_f * (x**83) + 
            L0x200198f0_f * (x**84) + L0x200198f2_f * (x**85) + 
            L0x200198f4_f * (x**86) + L0x200198f6_f * (x**87) + 
            L0x200198f8_f * (x**88) + L0x200198fa_f * (x**89) + 
            L0x200198fc_f * (x**90) + L0x200198fe_f * (x**91) + 
            L0x20019900_f * (x**92) + L0x20019902_f * (x**93) + 
            L0x20019904_f * (x**94) + L0x20019906_f * (x**95) + 
            L0x20019908_f * (x**96) + L0x2001990a_f * (x**97) + 
            L0x2001990c_f * (x**98) + L0x2001990e_f * (x**99) + 
            L0x20019910_f * (x**100) + L0x20019912_f * (x**101) + 
            L0x20019914_f * (x**102) + L0x20019916_f * (x**103) + 
            L0x20019918_f * (x**104) + L0x2001991a_f * (x**105) + 
            L0x2001991c_f * (x**106) + L0x2001991e_f * (x**107) + 
            L0x20019920_f * (x**108) + L0x20019922_f * (x**109) + 
            L0x20019924_f * (x**110) + L0x20019926_f * (x**111) + 
            L0x20019928_f * (x**112) + L0x2001992a_f * (x**113) + 
            L0x2001992c_f * (x**114) + L0x2001992e_f * (x**115) + 
            L0x20019930_f * (x**116) + L0x20019932_f * (x**117) + 
            L0x20019934_f * (x**118) + L0x20019936_f * (x**119) + 
            L0x20019938_f * (x**120) + L0x2001993a_f * (x**121) + 
            L0x2001993c_f * (x**122) + L0x2001993e_f * (x**123) + 
            L0x20019940_f * (x**124) + L0x20019942_f * (x**125) + 
            L0x20019944_f * (x**126) + L0x20019946_f * (x**127) + 
            L0x20019948_f * (x**128) + L0x2001994a_f * (x**129) + 
            L0x2001994c_f * (x**130) + L0x2001994e_f * (x**131) + 
            L0x20019950_f * (x**132) + L0x20019952_f * (x**133) + 
            L0x20019954_f * (x**134) + L0x20019956_f * (x**135) + 
            L0x20019958_f * (x**136) + L0x2001995a_f * (x**137) + 
            L0x2001995c_f * (x**138) + L0x2001995e_f * (x**139) + 
            L0x20019960_f * (x**140) + L0x20019962_f * (x**141) + 
            L0x20019964_f * (x**142) + L0x20019966_f * (x**143) + 
            L0x20019968_f * (x**144) + L0x2001996a_f * (x**145) + 
            L0x2001996c_f * (x**146) + L0x2001996e_f * (x**147) + 
            L0x20019970_f * (x**148) + L0x20019972_f * (x**149) + 
            L0x20019974_f * (x**150) + L0x20019976_f * (x**151) + 
            L0x20019978_f * (x**152) + L0x2001997a_f * (x**153) + 
            L0x2001997c_f * (x**154) + L0x2001997e_f * (x**155) + 
            L0x20019980_f * (x**156) + L0x20019982_f * (x**157) + 
            L0x20019984_f * (x**158) + L0x20019986_f * (x**159) + 
            L0x20019988_f * (x**160) + L0x2001998a_f * (x**161) + 
            L0x2001998c_f * (x**162) + L0x2001998e_f * (x**163) + 
            L0x20019990_f * (x**164) + L0x20019992_f * (x**165) + 
            L0x20019994_f * (x**166) + L0x20019996_f * (x**167) + 
            L0x20019998_f * (x**168) + L0x2001999a_f * (x**169) + 
            L0x2001999c_f * (x**170) + L0x2001999e_f * (x**171) + 
            L0x200199a0_f * (x**172) + L0x200199a2_f * (x**173) + 
            L0x200199a4_f * (x**174) + L0x200199a6_f * (x**175) + 
            L0x200199a8_f * (x**176) + L0x200199aa_f * (x**177) + 
            L0x200199ac_f * (x**178) + L0x200199ae_f * (x**179) + 
            L0x200199b0_f * (x**180) + L0x200199b2_f * (x**181) + 
            L0x200199b4_f * (x**182) + L0x200199b6_f * (x**183) + 
            L0x200199b8_f * (x**184) + L0x200199ba_f * (x**185) + 
            L0x200199bc_f * (x**186) + L0x200199be_f * (x**187) + 
            L0x200199c0_f * (x**188) + L0x200199c2_f * (x**189) + 
            L0x200199c4_f * (x**190) + L0x200199c6_f * (x**191) + 
            L0x200199c8_f * (x**192) + L0x200199ca_f * (x**193) + 
            L0x200199cc_f * (x**194) + L0x200199ce_f * (x**195) + 
            L0x200199d0_f * (x**196) + L0x200199d2_f * (x**197) + 
            L0x200199d4_f * (x**198) + L0x200199d6_f * (x**199) + 
            L0x200199d8_f * (x**200) + L0x200199da_f * (x**201) + 
            L0x200199dc_f * (x**202) + L0x200199de_f * (x**203) + 
            L0x200199e0_f * (x**204) + L0x200199e2_f * (x**205) + 
            L0x200199e4_f * (x**206) + L0x200199e6_f * (x**207) + 
            L0x200199e8_f * (x**208) + L0x200199ea_f * (x**209) + 
            L0x200199ec_f * (x**210) + L0x200199ee_f * (x**211) + 
            L0x200199f0_f * (x**212) + L0x200199f2_f * (x**213) + 
            L0x200199f4_f * (x**214) + L0x200199f6_f * (x**215) + 
            L0x200199f8_f * (x**216) + L0x200199fa_f * (x**217) + 
            L0x200199fc_f * (x**218) + L0x200199fe_f * (x**219) + 
            L0x20019a00_f * (x**220) + L0x20019a02_f * (x**221) + 
            L0x20019a04_f * (x**222) + L0x20019a06_f * (x**223) + 
            L0x20019a08_f * (x**224) + L0x20019a0a_f * (x**225) + 
            L0x20019a0c_f * (x**226) + L0x20019a0e_f * (x**227) + 
            L0x20019a10_f * (x**228) + L0x20019a12_f * (x**229) + 
            L0x20019a14_f * (x**230) + L0x20019a16_f * (x**231) + 
            L0x20019a18_f * (x**232) + L0x20019a1a_f * (x**233) + 
            L0x20019a1c_f * (x**234) + L0x20019a1e_f * (x**235) + 
            L0x20019a20_f * (x**236) + L0x20019a22_f * (x**237) + 
            L0x20019a24_f * (x**238) + L0x20019a26_f * (x**239) + 
            L0x20019a28_f * (x**240) + L0x20019a2a_f * (x**241) + 
            L0x20019a2c_f * (x**242) + L0x20019a2e_f * (x**243) + 
            L0x20019a30_f * (x**244) + L0x20019a32_f * (x**245) + 
            L0x20019a34_f * (x**246) + L0x20019a36_f * (x**247) + 
            L0x20019a38_f * (x**248) + L0x20019a3a_f * (x**249) + 
            L0x20019a3c_f * (x**250) + L0x20019a3e_f * (x**251) + 
            L0x20019a40_f * (x**252) + L0x20019a42_f * (x**253) + 
            L0x20019a44_f * (x**254) + L0x20019a46_f * (x**255)
          )
          [25570049, x**4 - 830930],
    (* inp_poly_3 *)
    eqmod (2**32) * (inp_poly_3 * inp_poly_3)
          (
            L0x20019848_f * (x**0) + L0x2001984a_f * (x**1) + 
            L0x2001984c_f * (x**2) + L0x2001984e_f * (x**3) + 
            L0x20019850_f * (x**4) + L0x20019852_f * (x**5) + 
            L0x20019854_f * (x**6) + L0x20019856_f * (x**7) + 
            L0x20019858_f * (x**8) + L0x2001985a_f * (x**9) + 
            L0x2001985c_f * (x**10) + L0x2001985e_f * (x**11) + 
            L0x20019860_f * (x**12) + L0x20019862_f * (x**13) + 
            L0x20019864_f * (x**14) + L0x20019866_f * (x**15) + 
            L0x20019868_f * (x**16) + L0x2001986a_f * (x**17) + 
            L0x2001986c_f * (x**18) + L0x2001986e_f * (x**19) + 
            L0x20019870_f * (x**20) + L0x20019872_f * (x**21) + 
            L0x20019874_f * (x**22) + L0x20019876_f * (x**23) + 
            L0x20019878_f * (x**24) + L0x2001987a_f * (x**25) + 
            L0x2001987c_f * (x**26) + L0x2001987e_f * (x**27) + 
            L0x20019880_f * (x**28) + L0x20019882_f * (x**29) + 
            L0x20019884_f * (x**30) + L0x20019886_f * (x**31) + 
            L0x20019888_f * (x**32) + L0x2001988a_f * (x**33) + 
            L0x2001988c_f * (x**34) + L0x2001988e_f * (x**35) + 
            L0x20019890_f * (x**36) + L0x20019892_f * (x**37) + 
            L0x20019894_f * (x**38) + L0x20019896_f * (x**39) + 
            L0x20019898_f * (x**40) + L0x2001989a_f * (x**41) + 
            L0x2001989c_f * (x**42) + L0x2001989e_f * (x**43) + 
            L0x200198a0_f * (x**44) + L0x200198a2_f * (x**45) + 
            L0x200198a4_f * (x**46) + L0x200198a6_f * (x**47) + 
            L0x200198a8_f * (x**48) + L0x200198aa_f * (x**49) + 
            L0x200198ac_f * (x**50) + L0x200198ae_f * (x**51) + 
            L0x200198b0_f * (x**52) + L0x200198b2_f * (x**53) + 
            L0x200198b4_f * (x**54) + L0x200198b6_f * (x**55) + 
            L0x200198b8_f * (x**56) + L0x200198ba_f * (x**57) + 
            L0x200198bc_f * (x**58) + L0x200198be_f * (x**59) + 
            L0x200198c0_f * (x**60) + L0x200198c2_f * (x**61) + 
            L0x200198c4_f * (x**62) + L0x200198c6_f * (x**63) + 
            L0x200198c8_f * (x**64) + L0x200198ca_f * (x**65) + 
            L0x200198cc_f * (x**66) + L0x200198ce_f * (x**67) + 
            L0x200198d0_f * (x**68) + L0x200198d2_f * (x**69) + 
            L0x200198d4_f * (x**70) + L0x200198d6_f * (x**71) + 
            L0x200198d8_f * (x**72) + L0x200198da_f * (x**73) + 
            L0x200198dc_f * (x**74) + L0x200198de_f * (x**75) + 
            L0x200198e0_f * (x**76) + L0x200198e2_f * (x**77) + 
            L0x200198e4_f * (x**78) + L0x200198e6_f * (x**79) + 
            L0x200198e8_f * (x**80) + L0x200198ea_f * (x**81) + 
            L0x200198ec_f * (x**82) + L0x200198ee_f * (x**83) + 
            L0x200198f0_f * (x**84) + L0x200198f2_f * (x**85) + 
            L0x200198f4_f * (x**86) + L0x200198f6_f * (x**87) + 
            L0x200198f8_f * (x**88) + L0x200198fa_f * (x**89) + 
            L0x200198fc_f * (x**90) + L0x200198fe_f * (x**91) + 
            L0x20019900_f * (x**92) + L0x20019902_f * (x**93) + 
            L0x20019904_f * (x**94) + L0x20019906_f * (x**95) + 
            L0x20019908_f * (x**96) + L0x2001990a_f * (x**97) + 
            L0x2001990c_f * (x**98) + L0x2001990e_f * (x**99) + 
            L0x20019910_f * (x**100) + L0x20019912_f * (x**101) + 
            L0x20019914_f * (x**102) + L0x20019916_f * (x**103) + 
            L0x20019918_f * (x**104) + L0x2001991a_f * (x**105) + 
            L0x2001991c_f * (x**106) + L0x2001991e_f * (x**107) + 
            L0x20019920_f * (x**108) + L0x20019922_f * (x**109) + 
            L0x20019924_f * (x**110) + L0x20019926_f * (x**111) + 
            L0x20019928_f * (x**112) + L0x2001992a_f * (x**113) + 
            L0x2001992c_f * (x**114) + L0x2001992e_f * (x**115) + 
            L0x20019930_f * (x**116) + L0x20019932_f * (x**117) + 
            L0x20019934_f * (x**118) + L0x20019936_f * (x**119) + 
            L0x20019938_f * (x**120) + L0x2001993a_f * (x**121) + 
            L0x2001993c_f * (x**122) + L0x2001993e_f * (x**123) + 
            L0x20019940_f * (x**124) + L0x20019942_f * (x**125) + 
            L0x20019944_f * (x**126) + L0x20019946_f * (x**127) + 
            L0x20019948_f * (x**128) + L0x2001994a_f * (x**129) + 
            L0x2001994c_f * (x**130) + L0x2001994e_f * (x**131) + 
            L0x20019950_f * (x**132) + L0x20019952_f * (x**133) + 
            L0x20019954_f * (x**134) + L0x20019956_f * (x**135) + 
            L0x20019958_f * (x**136) + L0x2001995a_f * (x**137) + 
            L0x2001995c_f * (x**138) + L0x2001995e_f * (x**139) + 
            L0x20019960_f * (x**140) + L0x20019962_f * (x**141) + 
            L0x20019964_f * (x**142) + L0x20019966_f * (x**143) + 
            L0x20019968_f * (x**144) + L0x2001996a_f * (x**145) + 
            L0x2001996c_f * (x**146) + L0x2001996e_f * (x**147) + 
            L0x20019970_f * (x**148) + L0x20019972_f * (x**149) + 
            L0x20019974_f * (x**150) + L0x20019976_f * (x**151) + 
            L0x20019978_f * (x**152) + L0x2001997a_f * (x**153) + 
            L0x2001997c_f * (x**154) + L0x2001997e_f * (x**155) + 
            L0x20019980_f * (x**156) + L0x20019982_f * (x**157) + 
            L0x20019984_f * (x**158) + L0x20019986_f * (x**159) + 
            L0x20019988_f * (x**160) + L0x2001998a_f * (x**161) + 
            L0x2001998c_f * (x**162) + L0x2001998e_f * (x**163) + 
            L0x20019990_f * (x**164) + L0x20019992_f * (x**165) + 
            L0x20019994_f * (x**166) + L0x20019996_f * (x**167) + 
            L0x20019998_f * (x**168) + L0x2001999a_f * (x**169) + 
            L0x2001999c_f * (x**170) + L0x2001999e_f * (x**171) + 
            L0x200199a0_f * (x**172) + L0x200199a2_f * (x**173) + 
            L0x200199a4_f * (x**174) + L0x200199a6_f * (x**175) + 
            L0x200199a8_f * (x**176) + L0x200199aa_f * (x**177) + 
            L0x200199ac_f * (x**178) + L0x200199ae_f * (x**179) + 
            L0x200199b0_f * (x**180) + L0x200199b2_f * (x**181) + 
            L0x200199b4_f * (x**182) + L0x200199b6_f * (x**183) + 
            L0x200199b8_f * (x**184) + L0x200199ba_f * (x**185) + 
            L0x200199bc_f * (x**186) + L0x200199be_f * (x**187) + 
            L0x200199c0_f * (x**188) + L0x200199c2_f * (x**189) + 
            L0x200199c4_f * (x**190) + L0x200199c6_f * (x**191) + 
            L0x200199c8_f * (x**192) + L0x200199ca_f * (x**193) + 
            L0x200199cc_f * (x**194) + L0x200199ce_f * (x**195) + 
            L0x200199d0_f * (x**196) + L0x200199d2_f * (x**197) + 
            L0x200199d4_f * (x**198) + L0x200199d6_f * (x**199) + 
            L0x200199d8_f * (x**200) + L0x200199da_f * (x**201) + 
            L0x200199dc_f * (x**202) + L0x200199de_f * (x**203) + 
            L0x200199e0_f * (x**204) + L0x200199e2_f * (x**205) + 
            L0x200199e4_f * (x**206) + L0x200199e6_f * (x**207) + 
            L0x200199e8_f * (x**208) + L0x200199ea_f * (x**209) + 
            L0x200199ec_f * (x**210) + L0x200199ee_f * (x**211) + 
            L0x200199f0_f * (x**212) + L0x200199f2_f * (x**213) + 
            L0x200199f4_f * (x**214) + L0x200199f6_f * (x**215) + 
            L0x200199f8_f * (x**216) + L0x200199fa_f * (x**217) + 
            L0x200199fc_f * (x**218) + L0x200199fe_f * (x**219) + 
            L0x20019a00_f * (x**220) + L0x20019a02_f * (x**221) + 
            L0x20019a04_f * (x**222) + L0x20019a06_f * (x**223) + 
            L0x20019a08_f * (x**224) + L0x20019a0a_f * (x**225) + 
            L0x20019a0c_f * (x**226) + L0x20019a0e_f * (x**227) + 
            L0x20019a10_f * (x**228) + L0x20019a12_f * (x**229) + 
            L0x20019a14_f * (x**230) + L0x20019a16_f * (x**231) + 
            L0x20019a18_f * (x**232) + L0x20019a1a_f * (x**233) + 
            L0x20019a1c_f * (x**234) + L0x20019a1e_f * (x**235) + 
            L0x20019a20_f * (x**236) + L0x20019a22_f * (x**237) + 
            L0x20019a24_f * (x**238) + L0x20019a26_f * (x**239) + 
            L0x20019a28_f * (x**240) + L0x20019a2a_f * (x**241) + 
            L0x20019a2c_f * (x**242) + L0x20019a2e_f * (x**243) + 
            L0x20019a30_f * (x**244) + L0x20019a32_f * (x**245) + 
            L0x20019a34_f * (x**246) + L0x20019a36_f * (x**247) + 
            L0x20019a38_f * (x**248) + L0x20019a3a_f * (x**249) + 
            L0x20019a3c_f * (x**250) + L0x20019a3e_f * (x**251) + 
            L0x20019a40_f * (x**252) + L0x20019a42_f * (x**253) + 
            L0x20019a44_f * (x**254) + L0x20019a46_f * (x**255)
          )
          [25570049, x**4 - 24739119],
    (* inp_poly_4 *)
    eqmod (2**32) * (inp_poly_4 * inp_poly_4)
          (
            L0x20019848_f * (x**0) + L0x2001984a_f * (x**1) + 
            L0x2001984c_f * (x**2) + L0x2001984e_f * (x**3) + 
            L0x20019850_f * (x**4) + L0x20019852_f * (x**5) + 
            L0x20019854_f * (x**6) + L0x20019856_f * (x**7) + 
            L0x20019858_f * (x**8) + L0x2001985a_f * (x**9) + 
            L0x2001985c_f * (x**10) + L0x2001985e_f * (x**11) + 
            L0x20019860_f * (x**12) + L0x20019862_f * (x**13) + 
            L0x20019864_f * (x**14) + L0x20019866_f * (x**15) + 
            L0x20019868_f * (x**16) + L0x2001986a_f * (x**17) + 
            L0x2001986c_f * (x**18) + L0x2001986e_f * (x**19) + 
            L0x20019870_f * (x**20) + L0x20019872_f * (x**21) + 
            L0x20019874_f * (x**22) + L0x20019876_f * (x**23) + 
            L0x20019878_f * (x**24) + L0x2001987a_f * (x**25) + 
            L0x2001987c_f * (x**26) + L0x2001987e_f * (x**27) + 
            L0x20019880_f * (x**28) + L0x20019882_f * (x**29) + 
            L0x20019884_f * (x**30) + L0x20019886_f * (x**31) + 
            L0x20019888_f * (x**32) + L0x2001988a_f * (x**33) + 
            L0x2001988c_f * (x**34) + L0x2001988e_f * (x**35) + 
            L0x20019890_f * (x**36) + L0x20019892_f * (x**37) + 
            L0x20019894_f * (x**38) + L0x20019896_f * (x**39) + 
            L0x20019898_f * (x**40) + L0x2001989a_f * (x**41) + 
            L0x2001989c_f * (x**42) + L0x2001989e_f * (x**43) + 
            L0x200198a0_f * (x**44) + L0x200198a2_f * (x**45) + 
            L0x200198a4_f * (x**46) + L0x200198a6_f * (x**47) + 
            L0x200198a8_f * (x**48) + L0x200198aa_f * (x**49) + 
            L0x200198ac_f * (x**50) + L0x200198ae_f * (x**51) + 
            L0x200198b0_f * (x**52) + L0x200198b2_f * (x**53) + 
            L0x200198b4_f * (x**54) + L0x200198b6_f * (x**55) + 
            L0x200198b8_f * (x**56) + L0x200198ba_f * (x**57) + 
            L0x200198bc_f * (x**58) + L0x200198be_f * (x**59) + 
            L0x200198c0_f * (x**60) + L0x200198c2_f * (x**61) + 
            L0x200198c4_f * (x**62) + L0x200198c6_f * (x**63) + 
            L0x200198c8_f * (x**64) + L0x200198ca_f * (x**65) + 
            L0x200198cc_f * (x**66) + L0x200198ce_f * (x**67) + 
            L0x200198d0_f * (x**68) + L0x200198d2_f * (x**69) + 
            L0x200198d4_f * (x**70) + L0x200198d6_f * (x**71) + 
            L0x200198d8_f * (x**72) + L0x200198da_f * (x**73) + 
            L0x200198dc_f * (x**74) + L0x200198de_f * (x**75) + 
            L0x200198e0_f * (x**76) + L0x200198e2_f * (x**77) + 
            L0x200198e4_f * (x**78) + L0x200198e6_f * (x**79) + 
            L0x200198e8_f * (x**80) + L0x200198ea_f * (x**81) + 
            L0x200198ec_f * (x**82) + L0x200198ee_f * (x**83) + 
            L0x200198f0_f * (x**84) + L0x200198f2_f * (x**85) + 
            L0x200198f4_f * (x**86) + L0x200198f6_f * (x**87) + 
            L0x200198f8_f * (x**88) + L0x200198fa_f * (x**89) + 
            L0x200198fc_f * (x**90) + L0x200198fe_f * (x**91) + 
            L0x20019900_f * (x**92) + L0x20019902_f * (x**93) + 
            L0x20019904_f * (x**94) + L0x20019906_f * (x**95) + 
            L0x20019908_f * (x**96) + L0x2001990a_f * (x**97) + 
            L0x2001990c_f * (x**98) + L0x2001990e_f * (x**99) + 
            L0x20019910_f * (x**100) + L0x20019912_f * (x**101) + 
            L0x20019914_f * (x**102) + L0x20019916_f * (x**103) + 
            L0x20019918_f * (x**104) + L0x2001991a_f * (x**105) + 
            L0x2001991c_f * (x**106) + L0x2001991e_f * (x**107) + 
            L0x20019920_f * (x**108) + L0x20019922_f * (x**109) + 
            L0x20019924_f * (x**110) + L0x20019926_f * (x**111) + 
            L0x20019928_f * (x**112) + L0x2001992a_f * (x**113) + 
            L0x2001992c_f * (x**114) + L0x2001992e_f * (x**115) + 
            L0x20019930_f * (x**116) + L0x20019932_f * (x**117) + 
            L0x20019934_f * (x**118) + L0x20019936_f * (x**119) + 
            L0x20019938_f * (x**120) + L0x2001993a_f * (x**121) + 
            L0x2001993c_f * (x**122) + L0x2001993e_f * (x**123) + 
            L0x20019940_f * (x**124) + L0x20019942_f * (x**125) + 
            L0x20019944_f * (x**126) + L0x20019946_f * (x**127) + 
            L0x20019948_f * (x**128) + L0x2001994a_f * (x**129) + 
            L0x2001994c_f * (x**130) + L0x2001994e_f * (x**131) + 
            L0x20019950_f * (x**132) + L0x20019952_f * (x**133) + 
            L0x20019954_f * (x**134) + L0x20019956_f * (x**135) + 
            L0x20019958_f * (x**136) + L0x2001995a_f * (x**137) + 
            L0x2001995c_f * (x**138) + L0x2001995e_f * (x**139) + 
            L0x20019960_f * (x**140) + L0x20019962_f * (x**141) + 
            L0x20019964_f * (x**142) + L0x20019966_f * (x**143) + 
            L0x20019968_f * (x**144) + L0x2001996a_f * (x**145) + 
            L0x2001996c_f * (x**146) + L0x2001996e_f * (x**147) + 
            L0x20019970_f * (x**148) + L0x20019972_f * (x**149) + 
            L0x20019974_f * (x**150) + L0x20019976_f * (x**151) + 
            L0x20019978_f * (x**152) + L0x2001997a_f * (x**153) + 
            L0x2001997c_f * (x**154) + L0x2001997e_f * (x**155) + 
            L0x20019980_f * (x**156) + L0x20019982_f * (x**157) + 
            L0x20019984_f * (x**158) + L0x20019986_f * (x**159) + 
            L0x20019988_f * (x**160) + L0x2001998a_f * (x**161) + 
            L0x2001998c_f * (x**162) + L0x2001998e_f * (x**163) + 
            L0x20019990_f * (x**164) + L0x20019992_f * (x**165) + 
            L0x20019994_f * (x**166) + L0x20019996_f * (x**167) + 
            L0x20019998_f * (x**168) + L0x2001999a_f * (x**169) + 
            L0x2001999c_f * (x**170) + L0x2001999e_f * (x**171) + 
            L0x200199a0_f * (x**172) + L0x200199a2_f * (x**173) + 
            L0x200199a4_f * (x**174) + L0x200199a6_f * (x**175) + 
            L0x200199a8_f * (x**176) + L0x200199aa_f * (x**177) + 
            L0x200199ac_f * (x**178) + L0x200199ae_f * (x**179) + 
            L0x200199b0_f * (x**180) + L0x200199b2_f * (x**181) + 
            L0x200199b4_f * (x**182) + L0x200199b6_f * (x**183) + 
            L0x200199b8_f * (x**184) + L0x200199ba_f * (x**185) + 
            L0x200199bc_f * (x**186) + L0x200199be_f * (x**187) + 
            L0x200199c0_f * (x**188) + L0x200199c2_f * (x**189) + 
            L0x200199c4_f * (x**190) + L0x200199c6_f * (x**191) + 
            L0x200199c8_f * (x**192) + L0x200199ca_f * (x**193) + 
            L0x200199cc_f * (x**194) + L0x200199ce_f * (x**195) + 
            L0x200199d0_f * (x**196) + L0x200199d2_f * (x**197) + 
            L0x200199d4_f * (x**198) + L0x200199d6_f * (x**199) + 
            L0x200199d8_f * (x**200) + L0x200199da_f * (x**201) + 
            L0x200199dc_f * (x**202) + L0x200199de_f * (x**203) + 
            L0x200199e0_f * (x**204) + L0x200199e2_f * (x**205) + 
            L0x200199e4_f * (x**206) + L0x200199e6_f * (x**207) + 
            L0x200199e8_f * (x**208) + L0x200199ea_f * (x**209) + 
            L0x200199ec_f * (x**210) + L0x200199ee_f * (x**211) + 
            L0x200199f0_f * (x**212) + L0x200199f2_f * (x**213) + 
            L0x200199f4_f * (x**214) + L0x200199f6_f * (x**215) + 
            L0x200199f8_f * (x**216) + L0x200199fa_f * (x**217) + 
            L0x200199fc_f * (x**218) + L0x200199fe_f * (x**219) + 
            L0x20019a00_f * (x**220) + L0x20019a02_f * (x**221) + 
            L0x20019a04_f * (x**222) + L0x20019a06_f * (x**223) + 
            L0x20019a08_f * (x**224) + L0x20019a0a_f * (x**225) + 
            L0x20019a0c_f * (x**226) + L0x20019a0e_f * (x**227) + 
            L0x20019a10_f * (x**228) + L0x20019a12_f * (x**229) + 
            L0x20019a14_f * (x**230) + L0x20019a16_f * (x**231) + 
            L0x20019a18_f * (x**232) + L0x20019a1a_f * (x**233) + 
            L0x20019a1c_f * (x**234) + L0x20019a1e_f * (x**235) + 
            L0x20019a20_f * (x**236) + L0x20019a22_f * (x**237) + 
            L0x20019a24_f * (x**238) + L0x20019a26_f * (x**239) + 
            L0x20019a28_f * (x**240) + L0x20019a2a_f * (x**241) + 
            L0x20019a2c_f * (x**242) + L0x20019a2e_f * (x**243) + 
            L0x20019a30_f * (x**244) + L0x20019a32_f * (x**245) + 
            L0x20019a34_f * (x**246) + L0x20019a36_f * (x**247) + 
            L0x20019a38_f * (x**248) + L0x20019a3a_f * (x**249) + 
            L0x20019a3c_f * (x**250) + L0x20019a3e_f * (x**251) + 
            L0x20019a40_f * (x**252) + L0x20019a42_f * (x**253) + 
            L0x20019a44_f * (x**254) + L0x20019a46_f * (x**255)
          )
          [25570049, x**4 - 678652],
    (* inp_poly_5 *)
    eqmod (2**32) * (inp_poly_5 * inp_poly_5)
          (
            L0x20019848_f * (x**0) + L0x2001984a_f * (x**1) + 
            L0x2001984c_f * (x**2) + L0x2001984e_f * (x**3) + 
            L0x20019850_f * (x**4) + L0x20019852_f * (x**5) + 
            L0x20019854_f * (x**6) + L0x20019856_f * (x**7) + 
            L0x20019858_f * (x**8) + L0x2001985a_f * (x**9) + 
            L0x2001985c_f * (x**10) + L0x2001985e_f * (x**11) + 
            L0x20019860_f * (x**12) + L0x20019862_f * (x**13) + 
            L0x20019864_f * (x**14) + L0x20019866_f * (x**15) + 
            L0x20019868_f * (x**16) + L0x2001986a_f * (x**17) + 
            L0x2001986c_f * (x**18) + L0x2001986e_f * (x**19) + 
            L0x20019870_f * (x**20) + L0x20019872_f * (x**21) + 
            L0x20019874_f * (x**22) + L0x20019876_f * (x**23) + 
            L0x20019878_f * (x**24) + L0x2001987a_f * (x**25) + 
            L0x2001987c_f * (x**26) + L0x2001987e_f * (x**27) + 
            L0x20019880_f * (x**28) + L0x20019882_f * (x**29) + 
            L0x20019884_f * (x**30) + L0x20019886_f * (x**31) + 
            L0x20019888_f * (x**32) + L0x2001988a_f * (x**33) + 
            L0x2001988c_f * (x**34) + L0x2001988e_f * (x**35) + 
            L0x20019890_f * (x**36) + L0x20019892_f * (x**37) + 
            L0x20019894_f * (x**38) + L0x20019896_f * (x**39) + 
            L0x20019898_f * (x**40) + L0x2001989a_f * (x**41) + 
            L0x2001989c_f * (x**42) + L0x2001989e_f * (x**43) + 
            L0x200198a0_f * (x**44) + L0x200198a2_f * (x**45) + 
            L0x200198a4_f * (x**46) + L0x200198a6_f * (x**47) + 
            L0x200198a8_f * (x**48) + L0x200198aa_f * (x**49) + 
            L0x200198ac_f * (x**50) + L0x200198ae_f * (x**51) + 
            L0x200198b0_f * (x**52) + L0x200198b2_f * (x**53) + 
            L0x200198b4_f * (x**54) + L0x200198b6_f * (x**55) + 
            L0x200198b8_f * (x**56) + L0x200198ba_f * (x**57) + 
            L0x200198bc_f * (x**58) + L0x200198be_f * (x**59) + 
            L0x200198c0_f * (x**60) + L0x200198c2_f * (x**61) + 
            L0x200198c4_f * (x**62) + L0x200198c6_f * (x**63) + 
            L0x200198c8_f * (x**64) + L0x200198ca_f * (x**65) + 
            L0x200198cc_f * (x**66) + L0x200198ce_f * (x**67) + 
            L0x200198d0_f * (x**68) + L0x200198d2_f * (x**69) + 
            L0x200198d4_f * (x**70) + L0x200198d6_f * (x**71) + 
            L0x200198d8_f * (x**72) + L0x200198da_f * (x**73) + 
            L0x200198dc_f * (x**74) + L0x200198de_f * (x**75) + 
            L0x200198e0_f * (x**76) + L0x200198e2_f * (x**77) + 
            L0x200198e4_f * (x**78) + L0x200198e6_f * (x**79) + 
            L0x200198e8_f * (x**80) + L0x200198ea_f * (x**81) + 
            L0x200198ec_f * (x**82) + L0x200198ee_f * (x**83) + 
            L0x200198f0_f * (x**84) + L0x200198f2_f * (x**85) + 
            L0x200198f4_f * (x**86) + L0x200198f6_f * (x**87) + 
            L0x200198f8_f * (x**88) + L0x200198fa_f * (x**89) + 
            L0x200198fc_f * (x**90) + L0x200198fe_f * (x**91) + 
            L0x20019900_f * (x**92) + L0x20019902_f * (x**93) + 
            L0x20019904_f * (x**94) + L0x20019906_f * (x**95) + 
            L0x20019908_f * (x**96) + L0x2001990a_f * (x**97) + 
            L0x2001990c_f * (x**98) + L0x2001990e_f * (x**99) + 
            L0x20019910_f * (x**100) + L0x20019912_f * (x**101) + 
            L0x20019914_f * (x**102) + L0x20019916_f * (x**103) + 
            L0x20019918_f * (x**104) + L0x2001991a_f * (x**105) + 
            L0x2001991c_f * (x**106) + L0x2001991e_f * (x**107) + 
            L0x20019920_f * (x**108) + L0x20019922_f * (x**109) + 
            L0x20019924_f * (x**110) + L0x20019926_f * (x**111) + 
            L0x20019928_f * (x**112) + L0x2001992a_f * (x**113) + 
            L0x2001992c_f * (x**114) + L0x2001992e_f * (x**115) + 
            L0x20019930_f * (x**116) + L0x20019932_f * (x**117) + 
            L0x20019934_f * (x**118) + L0x20019936_f * (x**119) + 
            L0x20019938_f * (x**120) + L0x2001993a_f * (x**121) + 
            L0x2001993c_f * (x**122) + L0x2001993e_f * (x**123) + 
            L0x20019940_f * (x**124) + L0x20019942_f * (x**125) + 
            L0x20019944_f * (x**126) + L0x20019946_f * (x**127) + 
            L0x20019948_f * (x**128) + L0x2001994a_f * (x**129) + 
            L0x2001994c_f * (x**130) + L0x2001994e_f * (x**131) + 
            L0x20019950_f * (x**132) + L0x20019952_f * (x**133) + 
            L0x20019954_f * (x**134) + L0x20019956_f * (x**135) + 
            L0x20019958_f * (x**136) + L0x2001995a_f * (x**137) + 
            L0x2001995c_f * (x**138) + L0x2001995e_f * (x**139) + 
            L0x20019960_f * (x**140) + L0x20019962_f * (x**141) + 
            L0x20019964_f * (x**142) + L0x20019966_f * (x**143) + 
            L0x20019968_f * (x**144) + L0x2001996a_f * (x**145) + 
            L0x2001996c_f * (x**146) + L0x2001996e_f * (x**147) + 
            L0x20019970_f * (x**148) + L0x20019972_f * (x**149) + 
            L0x20019974_f * (x**150) + L0x20019976_f * (x**151) + 
            L0x20019978_f * (x**152) + L0x2001997a_f * (x**153) + 
            L0x2001997c_f * (x**154) + L0x2001997e_f * (x**155) + 
            L0x20019980_f * (x**156) + L0x20019982_f * (x**157) + 
            L0x20019984_f * (x**158) + L0x20019986_f * (x**159) + 
            L0x20019988_f * (x**160) + L0x2001998a_f * (x**161) + 
            L0x2001998c_f * (x**162) + L0x2001998e_f * (x**163) + 
            L0x20019990_f * (x**164) + L0x20019992_f * (x**165) + 
            L0x20019994_f * (x**166) + L0x20019996_f * (x**167) + 
            L0x20019998_f * (x**168) + L0x2001999a_f * (x**169) + 
            L0x2001999c_f * (x**170) + L0x2001999e_f * (x**171) + 
            L0x200199a0_f * (x**172) + L0x200199a2_f * (x**173) + 
            L0x200199a4_f * (x**174) + L0x200199a6_f * (x**175) + 
            L0x200199a8_f * (x**176) + L0x200199aa_f * (x**177) + 
            L0x200199ac_f * (x**178) + L0x200199ae_f * (x**179) + 
            L0x200199b0_f * (x**180) + L0x200199b2_f * (x**181) + 
            L0x200199b4_f * (x**182) + L0x200199b6_f * (x**183) + 
            L0x200199b8_f * (x**184) + L0x200199ba_f * (x**185) + 
            L0x200199bc_f * (x**186) + L0x200199be_f * (x**187) + 
            L0x200199c0_f * (x**188) + L0x200199c2_f * (x**189) + 
            L0x200199c4_f * (x**190) + L0x200199c6_f * (x**191) + 
            L0x200199c8_f * (x**192) + L0x200199ca_f * (x**193) + 
            L0x200199cc_f * (x**194) + L0x200199ce_f * (x**195) + 
            L0x200199d0_f * (x**196) + L0x200199d2_f * (x**197) + 
            L0x200199d4_f * (x**198) + L0x200199d6_f * (x**199) + 
            L0x200199d8_f * (x**200) + L0x200199da_f * (x**201) + 
            L0x200199dc_f * (x**202) + L0x200199de_f * (x**203) + 
            L0x200199e0_f * (x**204) + L0x200199e2_f * (x**205) + 
            L0x200199e4_f * (x**206) + L0x200199e6_f * (x**207) + 
            L0x200199e8_f * (x**208) + L0x200199ea_f * (x**209) + 
            L0x200199ec_f * (x**210) + L0x200199ee_f * (x**211) + 
            L0x200199f0_f * (x**212) + L0x200199f2_f * (x**213) + 
            L0x200199f4_f * (x**214) + L0x200199f6_f * (x**215) + 
            L0x200199f8_f * (x**216) + L0x200199fa_f * (x**217) + 
            L0x200199fc_f * (x**218) + L0x200199fe_f * (x**219) + 
            L0x20019a00_f * (x**220) + L0x20019a02_f * (x**221) + 
            L0x20019a04_f * (x**222) + L0x20019a06_f * (x**223) + 
            L0x20019a08_f * (x**224) + L0x20019a0a_f * (x**225) + 
            L0x20019a0c_f * (x**226) + L0x20019a0e_f * (x**227) + 
            L0x20019a10_f * (x**228) + L0x20019a12_f * (x**229) + 
            L0x20019a14_f * (x**230) + L0x20019a16_f * (x**231) + 
            L0x20019a18_f * (x**232) + L0x20019a1a_f * (x**233) + 
            L0x20019a1c_f * (x**234) + L0x20019a1e_f * (x**235) + 
            L0x20019a20_f * (x**236) + L0x20019a22_f * (x**237) + 
            L0x20019a24_f * (x**238) + L0x20019a26_f * (x**239) + 
            L0x20019a28_f * (x**240) + L0x20019a2a_f * (x**241) + 
            L0x20019a2c_f * (x**242) + L0x20019a2e_f * (x**243) + 
            L0x20019a30_f * (x**244) + L0x20019a32_f * (x**245) + 
            L0x20019a34_f * (x**246) + L0x20019a36_f * (x**247) + 
            L0x20019a38_f * (x**248) + L0x20019a3a_f * (x**249) + 
            L0x20019a3c_f * (x**250) + L0x20019a3e_f * (x**251) + 
            L0x20019a40_f * (x**252) + L0x20019a42_f * (x**253) + 
            L0x20019a44_f * (x**254) + L0x20019a46_f * (x**255)
          )
          [25570049, x**4 - 24891397],
    (* inp_poly_6 *)
    eqmod (2**32) * (inp_poly_6 * inp_poly_6)
          (
            L0x20019848_f * (x**0) + L0x2001984a_f * (x**1) + 
            L0x2001984c_f * (x**2) + L0x2001984e_f * (x**3) + 
            L0x20019850_f * (x**4) + L0x20019852_f * (x**5) + 
            L0x20019854_f * (x**6) + L0x20019856_f * (x**7) + 
            L0x20019858_f * (x**8) + L0x2001985a_f * (x**9) + 
            L0x2001985c_f * (x**10) + L0x2001985e_f * (x**11) + 
            L0x20019860_f * (x**12) + L0x20019862_f * (x**13) + 
            L0x20019864_f * (x**14) + L0x20019866_f * (x**15) + 
            L0x20019868_f * (x**16) + L0x2001986a_f * (x**17) + 
            L0x2001986c_f * (x**18) + L0x2001986e_f * (x**19) + 
            L0x20019870_f * (x**20) + L0x20019872_f * (x**21) + 
            L0x20019874_f * (x**22) + L0x20019876_f * (x**23) + 
            L0x20019878_f * (x**24) + L0x2001987a_f * (x**25) + 
            L0x2001987c_f * (x**26) + L0x2001987e_f * (x**27) + 
            L0x20019880_f * (x**28) + L0x20019882_f * (x**29) + 
            L0x20019884_f * (x**30) + L0x20019886_f * (x**31) + 
            L0x20019888_f * (x**32) + L0x2001988a_f * (x**33) + 
            L0x2001988c_f * (x**34) + L0x2001988e_f * (x**35) + 
            L0x20019890_f * (x**36) + L0x20019892_f * (x**37) + 
            L0x20019894_f * (x**38) + L0x20019896_f * (x**39) + 
            L0x20019898_f * (x**40) + L0x2001989a_f * (x**41) + 
            L0x2001989c_f * (x**42) + L0x2001989e_f * (x**43) + 
            L0x200198a0_f * (x**44) + L0x200198a2_f * (x**45) + 
            L0x200198a4_f * (x**46) + L0x200198a6_f * (x**47) + 
            L0x200198a8_f * (x**48) + L0x200198aa_f * (x**49) + 
            L0x200198ac_f * (x**50) + L0x200198ae_f * (x**51) + 
            L0x200198b0_f * (x**52) + L0x200198b2_f * (x**53) + 
            L0x200198b4_f * (x**54) + L0x200198b6_f * (x**55) + 
            L0x200198b8_f * (x**56) + L0x200198ba_f * (x**57) + 
            L0x200198bc_f * (x**58) + L0x200198be_f * (x**59) + 
            L0x200198c0_f * (x**60) + L0x200198c2_f * (x**61) + 
            L0x200198c4_f * (x**62) + L0x200198c6_f * (x**63) + 
            L0x200198c8_f * (x**64) + L0x200198ca_f * (x**65) + 
            L0x200198cc_f * (x**66) + L0x200198ce_f * (x**67) + 
            L0x200198d0_f * (x**68) + L0x200198d2_f * (x**69) + 
            L0x200198d4_f * (x**70) + L0x200198d6_f * (x**71) + 
            L0x200198d8_f * (x**72) + L0x200198da_f * (x**73) + 
            L0x200198dc_f * (x**74) + L0x200198de_f * (x**75) + 
            L0x200198e0_f * (x**76) + L0x200198e2_f * (x**77) + 
            L0x200198e4_f * (x**78) + L0x200198e6_f * (x**79) + 
            L0x200198e8_f * (x**80) + L0x200198ea_f * (x**81) + 
            L0x200198ec_f * (x**82) + L0x200198ee_f * (x**83) + 
            L0x200198f0_f * (x**84) + L0x200198f2_f * (x**85) + 
            L0x200198f4_f * (x**86) + L0x200198f6_f * (x**87) + 
            L0x200198f8_f * (x**88) + L0x200198fa_f * (x**89) + 
            L0x200198fc_f * (x**90) + L0x200198fe_f * (x**91) + 
            L0x20019900_f * (x**92) + L0x20019902_f * (x**93) + 
            L0x20019904_f * (x**94) + L0x20019906_f * (x**95) + 
            L0x20019908_f * (x**96) + L0x2001990a_f * (x**97) + 
            L0x2001990c_f * (x**98) + L0x2001990e_f * (x**99) + 
            L0x20019910_f * (x**100) + L0x20019912_f * (x**101) + 
            L0x20019914_f * (x**102) + L0x20019916_f * (x**103) + 
            L0x20019918_f * (x**104) + L0x2001991a_f * (x**105) + 
            L0x2001991c_f * (x**106) + L0x2001991e_f * (x**107) + 
            L0x20019920_f * (x**108) + L0x20019922_f * (x**109) + 
            L0x20019924_f * (x**110) + L0x20019926_f * (x**111) + 
            L0x20019928_f * (x**112) + L0x2001992a_f * (x**113) + 
            L0x2001992c_f * (x**114) + L0x2001992e_f * (x**115) + 
            L0x20019930_f * (x**116) + L0x20019932_f * (x**117) + 
            L0x20019934_f * (x**118) + L0x20019936_f * (x**119) + 
            L0x20019938_f * (x**120) + L0x2001993a_f * (x**121) + 
            L0x2001993c_f * (x**122) + L0x2001993e_f * (x**123) + 
            L0x20019940_f * (x**124) + L0x20019942_f * (x**125) + 
            L0x20019944_f * (x**126) + L0x20019946_f * (x**127) + 
            L0x20019948_f * (x**128) + L0x2001994a_f * (x**129) + 
            L0x2001994c_f * (x**130) + L0x2001994e_f * (x**131) + 
            L0x20019950_f * (x**132) + L0x20019952_f * (x**133) + 
            L0x20019954_f * (x**134) + L0x20019956_f * (x**135) + 
            L0x20019958_f * (x**136) + L0x2001995a_f * (x**137) + 
            L0x2001995c_f * (x**138) + L0x2001995e_f * (x**139) + 
            L0x20019960_f * (x**140) + L0x20019962_f * (x**141) + 
            L0x20019964_f * (x**142) + L0x20019966_f * (x**143) + 
            L0x20019968_f * (x**144) + L0x2001996a_f * (x**145) + 
            L0x2001996c_f * (x**146) + L0x2001996e_f * (x**147) + 
            L0x20019970_f * (x**148) + L0x20019972_f * (x**149) + 
            L0x20019974_f * (x**150) + L0x20019976_f * (x**151) + 
            L0x20019978_f * (x**152) + L0x2001997a_f * (x**153) + 
            L0x2001997c_f * (x**154) + L0x2001997e_f * (x**155) + 
            L0x20019980_f * (x**156) + L0x20019982_f * (x**157) + 
            L0x20019984_f * (x**158) + L0x20019986_f * (x**159) + 
            L0x20019988_f * (x**160) + L0x2001998a_f * (x**161) + 
            L0x2001998c_f * (x**162) + L0x2001998e_f * (x**163) + 
            L0x20019990_f * (x**164) + L0x20019992_f * (x**165) + 
            L0x20019994_f * (x**166) + L0x20019996_f * (x**167) + 
            L0x20019998_f * (x**168) + L0x2001999a_f * (x**169) + 
            L0x2001999c_f * (x**170) + L0x2001999e_f * (x**171) + 
            L0x200199a0_f * (x**172) + L0x200199a2_f * (x**173) + 
            L0x200199a4_f * (x**174) + L0x200199a6_f * (x**175) + 
            L0x200199a8_f * (x**176) + L0x200199aa_f * (x**177) + 
            L0x200199ac_f * (x**178) + L0x200199ae_f * (x**179) + 
            L0x200199b0_f * (x**180) + L0x200199b2_f * (x**181) + 
            L0x200199b4_f * (x**182) + L0x200199b6_f * (x**183) + 
            L0x200199b8_f * (x**184) + L0x200199ba_f * (x**185) + 
            L0x200199bc_f * (x**186) + L0x200199be_f * (x**187) + 
            L0x200199c0_f * (x**188) + L0x200199c2_f * (x**189) + 
            L0x200199c4_f * (x**190) + L0x200199c6_f * (x**191) + 
            L0x200199c8_f * (x**192) + L0x200199ca_f * (x**193) + 
            L0x200199cc_f * (x**194) + L0x200199ce_f * (x**195) + 
            L0x200199d0_f * (x**196) + L0x200199d2_f * (x**197) + 
            L0x200199d4_f * (x**198) + L0x200199d6_f * (x**199) + 
            L0x200199d8_f * (x**200) + L0x200199da_f * (x**201) + 
            L0x200199dc_f * (x**202) + L0x200199de_f * (x**203) + 
            L0x200199e0_f * (x**204) + L0x200199e2_f * (x**205) + 
            L0x200199e4_f * (x**206) + L0x200199e6_f * (x**207) + 
            L0x200199e8_f * (x**208) + L0x200199ea_f * (x**209) + 
            L0x200199ec_f * (x**210) + L0x200199ee_f * (x**211) + 
            L0x200199f0_f * (x**212) + L0x200199f2_f * (x**213) + 
            L0x200199f4_f * (x**214) + L0x200199f6_f * (x**215) + 
            L0x200199f8_f * (x**216) + L0x200199fa_f * (x**217) + 
            L0x200199fc_f * (x**218) + L0x200199fe_f * (x**219) + 
            L0x20019a00_f * (x**220) + L0x20019a02_f * (x**221) + 
            L0x20019a04_f * (x**222) + L0x20019a06_f * (x**223) + 
            L0x20019a08_f * (x**224) + L0x20019a0a_f * (x**225) + 
            L0x20019a0c_f * (x**226) + L0x20019a0e_f * (x**227) + 
            L0x20019a10_f * (x**228) + L0x20019a12_f * (x**229) + 
            L0x20019a14_f * (x**230) + L0x20019a16_f * (x**231) + 
            L0x20019a18_f * (x**232) + L0x20019a1a_f * (x**233) + 
            L0x20019a1c_f * (x**234) + L0x20019a1e_f * (x**235) + 
            L0x20019a20_f * (x**236) + L0x20019a22_f * (x**237) + 
            L0x20019a24_f * (x**238) + L0x20019a26_f * (x**239) + 
            L0x20019a28_f * (x**240) + L0x20019a2a_f * (x**241) + 
            L0x20019a2c_f * (x**242) + L0x20019a2e_f * (x**243) + 
            L0x20019a30_f * (x**244) + L0x20019a32_f * (x**245) + 
            L0x20019a34_f * (x**246) + L0x20019a36_f * (x**247) + 
            L0x20019a38_f * (x**248) + L0x20019a3a_f * (x**249) + 
            L0x20019a3c_f * (x**250) + L0x20019a3e_f * (x**251) + 
            L0x20019a40_f * (x**252) + L0x20019a42_f * (x**253) + 
            L0x20019a44_f * (x**254) + L0x20019a46_f * (x**255)
          )
          [25570049, x**4 - 9510986],
    (* inp_poly_7 *)
    eqmod (2**32) * (inp_poly_7 * inp_poly_7)
          (
            L0x20019848_f * (x**0) + L0x2001984a_f * (x**1) + 
            L0x2001984c_f * (x**2) + L0x2001984e_f * (x**3) + 
            L0x20019850_f * (x**4) + L0x20019852_f * (x**5) + 
            L0x20019854_f * (x**6) + L0x20019856_f * (x**7) + 
            L0x20019858_f * (x**8) + L0x2001985a_f * (x**9) + 
            L0x2001985c_f * (x**10) + L0x2001985e_f * (x**11) + 
            L0x20019860_f * (x**12) + L0x20019862_f * (x**13) + 
            L0x20019864_f * (x**14) + L0x20019866_f * (x**15) + 
            L0x20019868_f * (x**16) + L0x2001986a_f * (x**17) + 
            L0x2001986c_f * (x**18) + L0x2001986e_f * (x**19) + 
            L0x20019870_f * (x**20) + L0x20019872_f * (x**21) + 
            L0x20019874_f * (x**22) + L0x20019876_f * (x**23) + 
            L0x20019878_f * (x**24) + L0x2001987a_f * (x**25) + 
            L0x2001987c_f * (x**26) + L0x2001987e_f * (x**27) + 
            L0x20019880_f * (x**28) + L0x20019882_f * (x**29) + 
            L0x20019884_f * (x**30) + L0x20019886_f * (x**31) + 
            L0x20019888_f * (x**32) + L0x2001988a_f * (x**33) + 
            L0x2001988c_f * (x**34) + L0x2001988e_f * (x**35) + 
            L0x20019890_f * (x**36) + L0x20019892_f * (x**37) + 
            L0x20019894_f * (x**38) + L0x20019896_f * (x**39) + 
            L0x20019898_f * (x**40) + L0x2001989a_f * (x**41) + 
            L0x2001989c_f * (x**42) + L0x2001989e_f * (x**43) + 
            L0x200198a0_f * (x**44) + L0x200198a2_f * (x**45) + 
            L0x200198a4_f * (x**46) + L0x200198a6_f * (x**47) + 
            L0x200198a8_f * (x**48) + L0x200198aa_f * (x**49) + 
            L0x200198ac_f * (x**50) + L0x200198ae_f * (x**51) + 
            L0x200198b0_f * (x**52) + L0x200198b2_f * (x**53) + 
            L0x200198b4_f * (x**54) + L0x200198b6_f * (x**55) + 
            L0x200198b8_f * (x**56) + L0x200198ba_f * (x**57) + 
            L0x200198bc_f * (x**58) + L0x200198be_f * (x**59) + 
            L0x200198c0_f * (x**60) + L0x200198c2_f * (x**61) + 
            L0x200198c4_f * (x**62) + L0x200198c6_f * (x**63) + 
            L0x200198c8_f * (x**64) + L0x200198ca_f * (x**65) + 
            L0x200198cc_f * (x**66) + L0x200198ce_f * (x**67) + 
            L0x200198d0_f * (x**68) + L0x200198d2_f * (x**69) + 
            L0x200198d4_f * (x**70) + L0x200198d6_f * (x**71) + 
            L0x200198d8_f * (x**72) + L0x200198da_f * (x**73) + 
            L0x200198dc_f * (x**74) + L0x200198de_f * (x**75) + 
            L0x200198e0_f * (x**76) + L0x200198e2_f * (x**77) + 
            L0x200198e4_f * (x**78) + L0x200198e6_f * (x**79) + 
            L0x200198e8_f * (x**80) + L0x200198ea_f * (x**81) + 
            L0x200198ec_f * (x**82) + L0x200198ee_f * (x**83) + 
            L0x200198f0_f * (x**84) + L0x200198f2_f * (x**85) + 
            L0x200198f4_f * (x**86) + L0x200198f6_f * (x**87) + 
            L0x200198f8_f * (x**88) + L0x200198fa_f * (x**89) + 
            L0x200198fc_f * (x**90) + L0x200198fe_f * (x**91) + 
            L0x20019900_f * (x**92) + L0x20019902_f * (x**93) + 
            L0x20019904_f * (x**94) + L0x20019906_f * (x**95) + 
            L0x20019908_f * (x**96) + L0x2001990a_f * (x**97) + 
            L0x2001990c_f * (x**98) + L0x2001990e_f * (x**99) + 
            L0x20019910_f * (x**100) + L0x20019912_f * (x**101) + 
            L0x20019914_f * (x**102) + L0x20019916_f * (x**103) + 
            L0x20019918_f * (x**104) + L0x2001991a_f * (x**105) + 
            L0x2001991c_f * (x**106) + L0x2001991e_f * (x**107) + 
            L0x20019920_f * (x**108) + L0x20019922_f * (x**109) + 
            L0x20019924_f * (x**110) + L0x20019926_f * (x**111) + 
            L0x20019928_f * (x**112) + L0x2001992a_f * (x**113) + 
            L0x2001992c_f * (x**114) + L0x2001992e_f * (x**115) + 
            L0x20019930_f * (x**116) + L0x20019932_f * (x**117) + 
            L0x20019934_f * (x**118) + L0x20019936_f * (x**119) + 
            L0x20019938_f * (x**120) + L0x2001993a_f * (x**121) + 
            L0x2001993c_f * (x**122) + L0x2001993e_f * (x**123) + 
            L0x20019940_f * (x**124) + L0x20019942_f * (x**125) + 
            L0x20019944_f * (x**126) + L0x20019946_f * (x**127) + 
            L0x20019948_f * (x**128) + L0x2001994a_f * (x**129) + 
            L0x2001994c_f * (x**130) + L0x2001994e_f * (x**131) + 
            L0x20019950_f * (x**132) + L0x20019952_f * (x**133) + 
            L0x20019954_f * (x**134) + L0x20019956_f * (x**135) + 
            L0x20019958_f * (x**136) + L0x2001995a_f * (x**137) + 
            L0x2001995c_f * (x**138) + L0x2001995e_f * (x**139) + 
            L0x20019960_f * (x**140) + L0x20019962_f * (x**141) + 
            L0x20019964_f * (x**142) + L0x20019966_f * (x**143) + 
            L0x20019968_f * (x**144) + L0x2001996a_f * (x**145) + 
            L0x2001996c_f * (x**146) + L0x2001996e_f * (x**147) + 
            L0x20019970_f * (x**148) + L0x20019972_f * (x**149) + 
            L0x20019974_f * (x**150) + L0x20019976_f * (x**151) + 
            L0x20019978_f * (x**152) + L0x2001997a_f * (x**153) + 
            L0x2001997c_f * (x**154) + L0x2001997e_f * (x**155) + 
            L0x20019980_f * (x**156) + L0x20019982_f * (x**157) + 
            L0x20019984_f * (x**158) + L0x20019986_f * (x**159) + 
            L0x20019988_f * (x**160) + L0x2001998a_f * (x**161) + 
            L0x2001998c_f * (x**162) + L0x2001998e_f * (x**163) + 
            L0x20019990_f * (x**164) + L0x20019992_f * (x**165) + 
            L0x20019994_f * (x**166) + L0x20019996_f * (x**167) + 
            L0x20019998_f * (x**168) + L0x2001999a_f * (x**169) + 
            L0x2001999c_f * (x**170) + L0x2001999e_f * (x**171) + 
            L0x200199a0_f * (x**172) + L0x200199a2_f * (x**173) + 
            L0x200199a4_f * (x**174) + L0x200199a6_f * (x**175) + 
            L0x200199a8_f * (x**176) + L0x200199aa_f * (x**177) + 
            L0x200199ac_f * (x**178) + L0x200199ae_f * (x**179) + 
            L0x200199b0_f * (x**180) + L0x200199b2_f * (x**181) + 
            L0x200199b4_f * (x**182) + L0x200199b6_f * (x**183) + 
            L0x200199b8_f * (x**184) + L0x200199ba_f * (x**185) + 
            L0x200199bc_f * (x**186) + L0x200199be_f * (x**187) + 
            L0x200199c0_f * (x**188) + L0x200199c2_f * (x**189) + 
            L0x200199c4_f * (x**190) + L0x200199c6_f * (x**191) + 
            L0x200199c8_f * (x**192) + L0x200199ca_f * (x**193) + 
            L0x200199cc_f * (x**194) + L0x200199ce_f * (x**195) + 
            L0x200199d0_f * (x**196) + L0x200199d2_f * (x**197) + 
            L0x200199d4_f * (x**198) + L0x200199d6_f * (x**199) + 
            L0x200199d8_f * (x**200) + L0x200199da_f * (x**201) + 
            L0x200199dc_f * (x**202) + L0x200199de_f * (x**203) + 
            L0x200199e0_f * (x**204) + L0x200199e2_f * (x**205) + 
            L0x200199e4_f * (x**206) + L0x200199e6_f * (x**207) + 
            L0x200199e8_f * (x**208) + L0x200199ea_f * (x**209) + 
            L0x200199ec_f * (x**210) + L0x200199ee_f * (x**211) + 
            L0x200199f0_f * (x**212) + L0x200199f2_f * (x**213) + 
            L0x200199f4_f * (x**214) + L0x200199f6_f * (x**215) + 
            L0x200199f8_f * (x**216) + L0x200199fa_f * (x**217) + 
            L0x200199fc_f * (x**218) + L0x200199fe_f * (x**219) + 
            L0x20019a00_f * (x**220) + L0x20019a02_f * (x**221) + 
            L0x20019a04_f * (x**222) + L0x20019a06_f * (x**223) + 
            L0x20019a08_f * (x**224) + L0x20019a0a_f * (x**225) + 
            L0x20019a0c_f * (x**226) + L0x20019a0e_f * (x**227) + 
            L0x20019a10_f * (x**228) + L0x20019a12_f * (x**229) + 
            L0x20019a14_f * (x**230) + L0x20019a16_f * (x**231) + 
            L0x20019a18_f * (x**232) + L0x20019a1a_f * (x**233) + 
            L0x20019a1c_f * (x**234) + L0x20019a1e_f * (x**235) + 
            L0x20019a20_f * (x**236) + L0x20019a22_f * (x**237) + 
            L0x20019a24_f * (x**238) + L0x20019a26_f * (x**239) + 
            L0x20019a28_f * (x**240) + L0x20019a2a_f * (x**241) + 
            L0x20019a2c_f * (x**242) + L0x20019a2e_f * (x**243) + 
            L0x20019a30_f * (x**244) + L0x20019a32_f * (x**245) + 
            L0x20019a34_f * (x**246) + L0x20019a36_f * (x**247) + 
            L0x20019a38_f * (x**248) + L0x20019a3a_f * (x**249) + 
            L0x20019a3c_f * (x**250) + L0x20019a3e_f * (x**251) + 
            L0x20019a40_f * (x**252) + L0x20019a42_f * (x**253) + 
            L0x20019a44_f * (x**254) + L0x20019a46_f * (x**255)
          )
          [25570049, x**4 - 16059063],
    (* inp_poly_8 *)
    eqmod (2**32) * (inp_poly_8 * inp_poly_8)
          (
            L0x20019848_f * (x**0) + L0x2001984a_f * (x**1) + 
            L0x2001984c_f * (x**2) + L0x2001984e_f * (x**3) + 
            L0x20019850_f * (x**4) + L0x20019852_f * (x**5) + 
            L0x20019854_f * (x**6) + L0x20019856_f * (x**7) + 
            L0x20019858_f * (x**8) + L0x2001985a_f * (x**9) + 
            L0x2001985c_f * (x**10) + L0x2001985e_f * (x**11) + 
            L0x20019860_f * (x**12) + L0x20019862_f * (x**13) + 
            L0x20019864_f * (x**14) + L0x20019866_f * (x**15) + 
            L0x20019868_f * (x**16) + L0x2001986a_f * (x**17) + 
            L0x2001986c_f * (x**18) + L0x2001986e_f * (x**19) + 
            L0x20019870_f * (x**20) + L0x20019872_f * (x**21) + 
            L0x20019874_f * (x**22) + L0x20019876_f * (x**23) + 
            L0x20019878_f * (x**24) + L0x2001987a_f * (x**25) + 
            L0x2001987c_f * (x**26) + L0x2001987e_f * (x**27) + 
            L0x20019880_f * (x**28) + L0x20019882_f * (x**29) + 
            L0x20019884_f * (x**30) + L0x20019886_f * (x**31) + 
            L0x20019888_f * (x**32) + L0x2001988a_f * (x**33) + 
            L0x2001988c_f * (x**34) + L0x2001988e_f * (x**35) + 
            L0x20019890_f * (x**36) + L0x20019892_f * (x**37) + 
            L0x20019894_f * (x**38) + L0x20019896_f * (x**39) + 
            L0x20019898_f * (x**40) + L0x2001989a_f * (x**41) + 
            L0x2001989c_f * (x**42) + L0x2001989e_f * (x**43) + 
            L0x200198a0_f * (x**44) + L0x200198a2_f * (x**45) + 
            L0x200198a4_f * (x**46) + L0x200198a6_f * (x**47) + 
            L0x200198a8_f * (x**48) + L0x200198aa_f * (x**49) + 
            L0x200198ac_f * (x**50) + L0x200198ae_f * (x**51) + 
            L0x200198b0_f * (x**52) + L0x200198b2_f * (x**53) + 
            L0x200198b4_f * (x**54) + L0x200198b6_f * (x**55) + 
            L0x200198b8_f * (x**56) + L0x200198ba_f * (x**57) + 
            L0x200198bc_f * (x**58) + L0x200198be_f * (x**59) + 
            L0x200198c0_f * (x**60) + L0x200198c2_f * (x**61) + 
            L0x200198c4_f * (x**62) + L0x200198c6_f * (x**63) + 
            L0x200198c8_f * (x**64) + L0x200198ca_f * (x**65) + 
            L0x200198cc_f * (x**66) + L0x200198ce_f * (x**67) + 
            L0x200198d0_f * (x**68) + L0x200198d2_f * (x**69) + 
            L0x200198d4_f * (x**70) + L0x200198d6_f * (x**71) + 
            L0x200198d8_f * (x**72) + L0x200198da_f * (x**73) + 
            L0x200198dc_f * (x**74) + L0x200198de_f * (x**75) + 
            L0x200198e0_f * (x**76) + L0x200198e2_f * (x**77) + 
            L0x200198e4_f * (x**78) + L0x200198e6_f * (x**79) + 
            L0x200198e8_f * (x**80) + L0x200198ea_f * (x**81) + 
            L0x200198ec_f * (x**82) + L0x200198ee_f * (x**83) + 
            L0x200198f0_f * (x**84) + L0x200198f2_f * (x**85) + 
            L0x200198f4_f * (x**86) + L0x200198f6_f * (x**87) + 
            L0x200198f8_f * (x**88) + L0x200198fa_f * (x**89) + 
            L0x200198fc_f * (x**90) + L0x200198fe_f * (x**91) + 
            L0x20019900_f * (x**92) + L0x20019902_f * (x**93) + 
            L0x20019904_f * (x**94) + L0x20019906_f * (x**95) + 
            L0x20019908_f * (x**96) + L0x2001990a_f * (x**97) + 
            L0x2001990c_f * (x**98) + L0x2001990e_f * (x**99) + 
            L0x20019910_f * (x**100) + L0x20019912_f * (x**101) + 
            L0x20019914_f * (x**102) + L0x20019916_f * (x**103) + 
            L0x20019918_f * (x**104) + L0x2001991a_f * (x**105) + 
            L0x2001991c_f * (x**106) + L0x2001991e_f * (x**107) + 
            L0x20019920_f * (x**108) + L0x20019922_f * (x**109) + 
            L0x20019924_f * (x**110) + L0x20019926_f * (x**111) + 
            L0x20019928_f * (x**112) + L0x2001992a_f * (x**113) + 
            L0x2001992c_f * (x**114) + L0x2001992e_f * (x**115) + 
            L0x20019930_f * (x**116) + L0x20019932_f * (x**117) + 
            L0x20019934_f * (x**118) + L0x20019936_f * (x**119) + 
            L0x20019938_f * (x**120) + L0x2001993a_f * (x**121) + 
            L0x2001993c_f * (x**122) + L0x2001993e_f * (x**123) + 
            L0x20019940_f * (x**124) + L0x20019942_f * (x**125) + 
            L0x20019944_f * (x**126) + L0x20019946_f * (x**127) + 
            L0x20019948_f * (x**128) + L0x2001994a_f * (x**129) + 
            L0x2001994c_f * (x**130) + L0x2001994e_f * (x**131) + 
            L0x20019950_f * (x**132) + L0x20019952_f * (x**133) + 
            L0x20019954_f * (x**134) + L0x20019956_f * (x**135) + 
            L0x20019958_f * (x**136) + L0x2001995a_f * (x**137) + 
            L0x2001995c_f * (x**138) + L0x2001995e_f * (x**139) + 
            L0x20019960_f * (x**140) + L0x20019962_f * (x**141) + 
            L0x20019964_f * (x**142) + L0x20019966_f * (x**143) + 
            L0x20019968_f * (x**144) + L0x2001996a_f * (x**145) + 
            L0x2001996c_f * (x**146) + L0x2001996e_f * (x**147) + 
            L0x20019970_f * (x**148) + L0x20019972_f * (x**149) + 
            L0x20019974_f * (x**150) + L0x20019976_f * (x**151) + 
            L0x20019978_f * (x**152) + L0x2001997a_f * (x**153) + 
            L0x2001997c_f * (x**154) + L0x2001997e_f * (x**155) + 
            L0x20019980_f * (x**156) + L0x20019982_f * (x**157) + 
            L0x20019984_f * (x**158) + L0x20019986_f * (x**159) + 
            L0x20019988_f * (x**160) + L0x2001998a_f * (x**161) + 
            L0x2001998c_f * (x**162) + L0x2001998e_f * (x**163) + 
            L0x20019990_f * (x**164) + L0x20019992_f * (x**165) + 
            L0x20019994_f * (x**166) + L0x20019996_f * (x**167) + 
            L0x20019998_f * (x**168) + L0x2001999a_f * (x**169) + 
            L0x2001999c_f * (x**170) + L0x2001999e_f * (x**171) + 
            L0x200199a0_f * (x**172) + L0x200199a2_f * (x**173) + 
            L0x200199a4_f * (x**174) + L0x200199a6_f * (x**175) + 
            L0x200199a8_f * (x**176) + L0x200199aa_f * (x**177) + 
            L0x200199ac_f * (x**178) + L0x200199ae_f * (x**179) + 
            L0x200199b0_f * (x**180) + L0x200199b2_f * (x**181) + 
            L0x200199b4_f * (x**182) + L0x200199b6_f * (x**183) + 
            L0x200199b8_f * (x**184) + L0x200199ba_f * (x**185) + 
            L0x200199bc_f * (x**186) + L0x200199be_f * (x**187) + 
            L0x200199c0_f * (x**188) + L0x200199c2_f * (x**189) + 
            L0x200199c4_f * (x**190) + L0x200199c6_f * (x**191) + 
            L0x200199c8_f * (x**192) + L0x200199ca_f * (x**193) + 
            L0x200199cc_f * (x**194) + L0x200199ce_f * (x**195) + 
            L0x200199d0_f * (x**196) + L0x200199d2_f * (x**197) + 
            L0x200199d4_f * (x**198) + L0x200199d6_f * (x**199) + 
            L0x200199d8_f * (x**200) + L0x200199da_f * (x**201) + 
            L0x200199dc_f * (x**202) + L0x200199de_f * (x**203) + 
            L0x200199e0_f * (x**204) + L0x200199e2_f * (x**205) + 
            L0x200199e4_f * (x**206) + L0x200199e6_f * (x**207) + 
            L0x200199e8_f * (x**208) + L0x200199ea_f * (x**209) + 
            L0x200199ec_f * (x**210) + L0x200199ee_f * (x**211) + 
            L0x200199f0_f * (x**212) + L0x200199f2_f * (x**213) + 
            L0x200199f4_f * (x**214) + L0x200199f6_f * (x**215) + 
            L0x200199f8_f * (x**216) + L0x200199fa_f * (x**217) + 
            L0x200199fc_f * (x**218) + L0x200199fe_f * (x**219) + 
            L0x20019a00_f * (x**220) + L0x20019a02_f * (x**221) + 
            L0x20019a04_f * (x**222) + L0x20019a06_f * (x**223) + 
            L0x20019a08_f * (x**224) + L0x20019a0a_f * (x**225) + 
            L0x20019a0c_f * (x**226) + L0x20019a0e_f * (x**227) + 
            L0x20019a10_f * (x**228) + L0x20019a12_f * (x**229) + 
            L0x20019a14_f * (x**230) + L0x20019a16_f * (x**231) + 
            L0x20019a18_f * (x**232) + L0x20019a1a_f * (x**233) + 
            L0x20019a1c_f * (x**234) + L0x20019a1e_f * (x**235) + 
            L0x20019a20_f * (x**236) + L0x20019a22_f * (x**237) + 
            L0x20019a24_f * (x**238) + L0x20019a26_f * (x**239) + 
            L0x20019a28_f * (x**240) + L0x20019a2a_f * (x**241) + 
            L0x20019a2c_f * (x**242) + L0x20019a2e_f * (x**243) + 
            L0x20019a30_f * (x**244) + L0x20019a32_f * (x**245) + 
            L0x20019a34_f * (x**246) + L0x20019a36_f * (x**247) + 
            L0x20019a38_f * (x**248) + L0x20019a3a_f * (x**249) + 
            L0x20019a3c_f * (x**250) + L0x20019a3e_f * (x**251) + 
            L0x20019a40_f * (x**252) + L0x20019a42_f * (x**253) + 
            L0x20019a44_f * (x**254) + L0x20019a46_f * (x**255)
          )
          [25570049, x**4 - 24972806],
    (* inp_poly_9 *)
    eqmod (2**32) * (inp_poly_9 * inp_poly_9)
          (
            L0x20019848_f * (x**0) + L0x2001984a_f * (x**1) + 
            L0x2001984c_f * (x**2) + L0x2001984e_f * (x**3) + 
            L0x20019850_f * (x**4) + L0x20019852_f * (x**5) + 
            L0x20019854_f * (x**6) + L0x20019856_f * (x**7) + 
            L0x20019858_f * (x**8) + L0x2001985a_f * (x**9) + 
            L0x2001985c_f * (x**10) + L0x2001985e_f * (x**11) + 
            L0x20019860_f * (x**12) + L0x20019862_f * (x**13) + 
            L0x20019864_f * (x**14) + L0x20019866_f * (x**15) + 
            L0x20019868_f * (x**16) + L0x2001986a_f * (x**17) + 
            L0x2001986c_f * (x**18) + L0x2001986e_f * (x**19) + 
            L0x20019870_f * (x**20) + L0x20019872_f * (x**21) + 
            L0x20019874_f * (x**22) + L0x20019876_f * (x**23) + 
            L0x20019878_f * (x**24) + L0x2001987a_f * (x**25) + 
            L0x2001987c_f * (x**26) + L0x2001987e_f * (x**27) + 
            L0x20019880_f * (x**28) + L0x20019882_f * (x**29) + 
            L0x20019884_f * (x**30) + L0x20019886_f * (x**31) + 
            L0x20019888_f * (x**32) + L0x2001988a_f * (x**33) + 
            L0x2001988c_f * (x**34) + L0x2001988e_f * (x**35) + 
            L0x20019890_f * (x**36) + L0x20019892_f * (x**37) + 
            L0x20019894_f * (x**38) + L0x20019896_f * (x**39) + 
            L0x20019898_f * (x**40) + L0x2001989a_f * (x**41) + 
            L0x2001989c_f * (x**42) + L0x2001989e_f * (x**43) + 
            L0x200198a0_f * (x**44) + L0x200198a2_f * (x**45) + 
            L0x200198a4_f * (x**46) + L0x200198a6_f * (x**47) + 
            L0x200198a8_f * (x**48) + L0x200198aa_f * (x**49) + 
            L0x200198ac_f * (x**50) + L0x200198ae_f * (x**51) + 
            L0x200198b0_f * (x**52) + L0x200198b2_f * (x**53) + 
            L0x200198b4_f * (x**54) + L0x200198b6_f * (x**55) + 
            L0x200198b8_f * (x**56) + L0x200198ba_f * (x**57) + 
            L0x200198bc_f * (x**58) + L0x200198be_f * (x**59) + 
            L0x200198c0_f * (x**60) + L0x200198c2_f * (x**61) + 
            L0x200198c4_f * (x**62) + L0x200198c6_f * (x**63) + 
            L0x200198c8_f * (x**64) + L0x200198ca_f * (x**65) + 
            L0x200198cc_f * (x**66) + L0x200198ce_f * (x**67) + 
            L0x200198d0_f * (x**68) + L0x200198d2_f * (x**69) + 
            L0x200198d4_f * (x**70) + L0x200198d6_f * (x**71) + 
            L0x200198d8_f * (x**72) + L0x200198da_f * (x**73) + 
            L0x200198dc_f * (x**74) + L0x200198de_f * (x**75) + 
            L0x200198e0_f * (x**76) + L0x200198e2_f * (x**77) + 
            L0x200198e4_f * (x**78) + L0x200198e6_f * (x**79) + 
            L0x200198e8_f * (x**80) + L0x200198ea_f * (x**81) + 
            L0x200198ec_f * (x**82) + L0x200198ee_f * (x**83) + 
            L0x200198f0_f * (x**84) + L0x200198f2_f * (x**85) + 
            L0x200198f4_f * (x**86) + L0x200198f6_f * (x**87) + 
            L0x200198f8_f * (x**88) + L0x200198fa_f * (x**89) + 
            L0x200198fc_f * (x**90) + L0x200198fe_f * (x**91) + 
            L0x20019900_f * (x**92) + L0x20019902_f * (x**93) + 
            L0x20019904_f * (x**94) + L0x20019906_f * (x**95) + 
            L0x20019908_f * (x**96) + L0x2001990a_f * (x**97) + 
            L0x2001990c_f * (x**98) + L0x2001990e_f * (x**99) + 
            L0x20019910_f * (x**100) + L0x20019912_f * (x**101) + 
            L0x20019914_f * (x**102) + L0x20019916_f * (x**103) + 
            L0x20019918_f * (x**104) + L0x2001991a_f * (x**105) + 
            L0x2001991c_f * (x**106) + L0x2001991e_f * (x**107) + 
            L0x20019920_f * (x**108) + L0x20019922_f * (x**109) + 
            L0x20019924_f * (x**110) + L0x20019926_f * (x**111) + 
            L0x20019928_f * (x**112) + L0x2001992a_f * (x**113) + 
            L0x2001992c_f * (x**114) + L0x2001992e_f * (x**115) + 
            L0x20019930_f * (x**116) + L0x20019932_f * (x**117) + 
            L0x20019934_f * (x**118) + L0x20019936_f * (x**119) + 
            L0x20019938_f * (x**120) + L0x2001993a_f * (x**121) + 
            L0x2001993c_f * (x**122) + L0x2001993e_f * (x**123) + 
            L0x20019940_f * (x**124) + L0x20019942_f * (x**125) + 
            L0x20019944_f * (x**126) + L0x20019946_f * (x**127) + 
            L0x20019948_f * (x**128) + L0x2001994a_f * (x**129) + 
            L0x2001994c_f * (x**130) + L0x2001994e_f * (x**131) + 
            L0x20019950_f * (x**132) + L0x20019952_f * (x**133) + 
            L0x20019954_f * (x**134) + L0x20019956_f * (x**135) + 
            L0x20019958_f * (x**136) + L0x2001995a_f * (x**137) + 
            L0x2001995c_f * (x**138) + L0x2001995e_f * (x**139) + 
            L0x20019960_f * (x**140) + L0x20019962_f * (x**141) + 
            L0x20019964_f * (x**142) + L0x20019966_f * (x**143) + 
            L0x20019968_f * (x**144) + L0x2001996a_f * (x**145) + 
            L0x2001996c_f * (x**146) + L0x2001996e_f * (x**147) + 
            L0x20019970_f * (x**148) + L0x20019972_f * (x**149) + 
            L0x20019974_f * (x**150) + L0x20019976_f * (x**151) + 
            L0x20019978_f * (x**152) + L0x2001997a_f * (x**153) + 
            L0x2001997c_f * (x**154) + L0x2001997e_f * (x**155) + 
            L0x20019980_f * (x**156) + L0x20019982_f * (x**157) + 
            L0x20019984_f * (x**158) + L0x20019986_f * (x**159) + 
            L0x20019988_f * (x**160) + L0x2001998a_f * (x**161) + 
            L0x2001998c_f * (x**162) + L0x2001998e_f * (x**163) + 
            L0x20019990_f * (x**164) + L0x20019992_f * (x**165) + 
            L0x20019994_f * (x**166) + L0x20019996_f * (x**167) + 
            L0x20019998_f * (x**168) + L0x2001999a_f * (x**169) + 
            L0x2001999c_f * (x**170) + L0x2001999e_f * (x**171) + 
            L0x200199a0_f * (x**172) + L0x200199a2_f * (x**173) + 
            L0x200199a4_f * (x**174) + L0x200199a6_f * (x**175) + 
            L0x200199a8_f * (x**176) + L0x200199aa_f * (x**177) + 
            L0x200199ac_f * (x**178) + L0x200199ae_f * (x**179) + 
            L0x200199b0_f * (x**180) + L0x200199b2_f * (x**181) + 
            L0x200199b4_f * (x**182) + L0x200199b6_f * (x**183) + 
            L0x200199b8_f * (x**184) + L0x200199ba_f * (x**185) + 
            L0x200199bc_f * (x**186) + L0x200199be_f * (x**187) + 
            L0x200199c0_f * (x**188) + L0x200199c2_f * (x**189) + 
            L0x200199c4_f * (x**190) + L0x200199c6_f * (x**191) + 
            L0x200199c8_f * (x**192) + L0x200199ca_f * (x**193) + 
            L0x200199cc_f * (x**194) + L0x200199ce_f * (x**195) + 
            L0x200199d0_f * (x**196) + L0x200199d2_f * (x**197) + 
            L0x200199d4_f * (x**198) + L0x200199d6_f * (x**199) + 
            L0x200199d8_f * (x**200) + L0x200199da_f * (x**201) + 
            L0x200199dc_f * (x**202) + L0x200199de_f * (x**203) + 
            L0x200199e0_f * (x**204) + L0x200199e2_f * (x**205) + 
            L0x200199e4_f * (x**206) + L0x200199e6_f * (x**207) + 
            L0x200199e8_f * (x**208) + L0x200199ea_f * (x**209) + 
            L0x200199ec_f * (x**210) + L0x200199ee_f * (x**211) + 
            L0x200199f0_f * (x**212) + L0x200199f2_f * (x**213) + 
            L0x200199f4_f * (x**214) + L0x200199f6_f * (x**215) + 
            L0x200199f8_f * (x**216) + L0x200199fa_f * (x**217) + 
            L0x200199fc_f * (x**218) + L0x200199fe_f * (x**219) + 
            L0x20019a00_f * (x**220) + L0x20019a02_f * (x**221) + 
            L0x20019a04_f * (x**222) + L0x20019a06_f * (x**223) + 
            L0x20019a08_f * (x**224) + L0x20019a0a_f * (x**225) + 
            L0x20019a0c_f * (x**226) + L0x20019a0e_f * (x**227) + 
            L0x20019a10_f * (x**228) + L0x20019a12_f * (x**229) + 
            L0x20019a14_f * (x**230) + L0x20019a16_f * (x**231) + 
            L0x20019a18_f * (x**232) + L0x20019a1a_f * (x**233) + 
            L0x20019a1c_f * (x**234) + L0x20019a1e_f * (x**235) + 
            L0x20019a20_f * (x**236) + L0x20019a22_f * (x**237) + 
            L0x20019a24_f * (x**238) + L0x20019a26_f * (x**239) + 
            L0x20019a28_f * (x**240) + L0x20019a2a_f * (x**241) + 
            L0x20019a2c_f * (x**242) + L0x20019a2e_f * (x**243) + 
            L0x20019a30_f * (x**244) + L0x20019a32_f * (x**245) + 
            L0x20019a34_f * (x**246) + L0x20019a36_f * (x**247) + 
            L0x20019a38_f * (x**248) + L0x20019a3a_f * (x**249) + 
            L0x20019a3c_f * (x**250) + L0x20019a3e_f * (x**251) + 
            L0x20019a40_f * (x**252) + L0x20019a42_f * (x**253) + 
            L0x20019a44_f * (x**254) + L0x20019a46_f * (x**255)
          )
          [25570049, x**4 - 597243],
    (* inp_poly_10 *)
    eqmod (2**32) * (inp_poly_10 * inp_poly_10)
          (
            L0x20019848_f * (x**0) + L0x2001984a_f * (x**1) + 
            L0x2001984c_f * (x**2) + L0x2001984e_f * (x**3) + 
            L0x20019850_f * (x**4) + L0x20019852_f * (x**5) + 
            L0x20019854_f * (x**6) + L0x20019856_f * (x**7) + 
            L0x20019858_f * (x**8) + L0x2001985a_f * (x**9) + 
            L0x2001985c_f * (x**10) + L0x2001985e_f * (x**11) + 
            L0x20019860_f * (x**12) + L0x20019862_f * (x**13) + 
            L0x20019864_f * (x**14) + L0x20019866_f * (x**15) + 
            L0x20019868_f * (x**16) + L0x2001986a_f * (x**17) + 
            L0x2001986c_f * (x**18) + L0x2001986e_f * (x**19) + 
            L0x20019870_f * (x**20) + L0x20019872_f * (x**21) + 
            L0x20019874_f * (x**22) + L0x20019876_f * (x**23) + 
            L0x20019878_f * (x**24) + L0x2001987a_f * (x**25) + 
            L0x2001987c_f * (x**26) + L0x2001987e_f * (x**27) + 
            L0x20019880_f * (x**28) + L0x20019882_f * (x**29) + 
            L0x20019884_f * (x**30) + L0x20019886_f * (x**31) + 
            L0x20019888_f * (x**32) + L0x2001988a_f * (x**33) + 
            L0x2001988c_f * (x**34) + L0x2001988e_f * (x**35) + 
            L0x20019890_f * (x**36) + L0x20019892_f * (x**37) + 
            L0x20019894_f * (x**38) + L0x20019896_f * (x**39) + 
            L0x20019898_f * (x**40) + L0x2001989a_f * (x**41) + 
            L0x2001989c_f * (x**42) + L0x2001989e_f * (x**43) + 
            L0x200198a0_f * (x**44) + L0x200198a2_f * (x**45) + 
            L0x200198a4_f * (x**46) + L0x200198a6_f * (x**47) + 
            L0x200198a8_f * (x**48) + L0x200198aa_f * (x**49) + 
            L0x200198ac_f * (x**50) + L0x200198ae_f * (x**51) + 
            L0x200198b0_f * (x**52) + L0x200198b2_f * (x**53) + 
            L0x200198b4_f * (x**54) + L0x200198b6_f * (x**55) + 
            L0x200198b8_f * (x**56) + L0x200198ba_f * (x**57) + 
            L0x200198bc_f * (x**58) + L0x200198be_f * (x**59) + 
            L0x200198c0_f * (x**60) + L0x200198c2_f * (x**61) + 
            L0x200198c4_f * (x**62) + L0x200198c6_f * (x**63) + 
            L0x200198c8_f * (x**64) + L0x200198ca_f * (x**65) + 
            L0x200198cc_f * (x**66) + L0x200198ce_f * (x**67) + 
            L0x200198d0_f * (x**68) + L0x200198d2_f * (x**69) + 
            L0x200198d4_f * (x**70) + L0x200198d6_f * (x**71) + 
            L0x200198d8_f * (x**72) + L0x200198da_f * (x**73) + 
            L0x200198dc_f * (x**74) + L0x200198de_f * (x**75) + 
            L0x200198e0_f * (x**76) + L0x200198e2_f * (x**77) + 
            L0x200198e4_f * (x**78) + L0x200198e6_f * (x**79) + 
            L0x200198e8_f * (x**80) + L0x200198ea_f * (x**81) + 
            L0x200198ec_f * (x**82) + L0x200198ee_f * (x**83) + 
            L0x200198f0_f * (x**84) + L0x200198f2_f * (x**85) + 
            L0x200198f4_f * (x**86) + L0x200198f6_f * (x**87) + 
            L0x200198f8_f * (x**88) + L0x200198fa_f * (x**89) + 
            L0x200198fc_f * (x**90) + L0x200198fe_f * (x**91) + 
            L0x20019900_f * (x**92) + L0x20019902_f * (x**93) + 
            L0x20019904_f * (x**94) + L0x20019906_f * (x**95) + 
            L0x20019908_f * (x**96) + L0x2001990a_f * (x**97) + 
            L0x2001990c_f * (x**98) + L0x2001990e_f * (x**99) + 
            L0x20019910_f * (x**100) + L0x20019912_f * (x**101) + 
            L0x20019914_f * (x**102) + L0x20019916_f * (x**103) + 
            L0x20019918_f * (x**104) + L0x2001991a_f * (x**105) + 
            L0x2001991c_f * (x**106) + L0x2001991e_f * (x**107) + 
            L0x20019920_f * (x**108) + L0x20019922_f * (x**109) + 
            L0x20019924_f * (x**110) + L0x20019926_f * (x**111) + 
            L0x20019928_f * (x**112) + L0x2001992a_f * (x**113) + 
            L0x2001992c_f * (x**114) + L0x2001992e_f * (x**115) + 
            L0x20019930_f * (x**116) + L0x20019932_f * (x**117) + 
            L0x20019934_f * (x**118) + L0x20019936_f * (x**119) + 
            L0x20019938_f * (x**120) + L0x2001993a_f * (x**121) + 
            L0x2001993c_f * (x**122) + L0x2001993e_f * (x**123) + 
            L0x20019940_f * (x**124) + L0x20019942_f * (x**125) + 
            L0x20019944_f * (x**126) + L0x20019946_f * (x**127) + 
            L0x20019948_f * (x**128) + L0x2001994a_f * (x**129) + 
            L0x2001994c_f * (x**130) + L0x2001994e_f * (x**131) + 
            L0x20019950_f * (x**132) + L0x20019952_f * (x**133) + 
            L0x20019954_f * (x**134) + L0x20019956_f * (x**135) + 
            L0x20019958_f * (x**136) + L0x2001995a_f * (x**137) + 
            L0x2001995c_f * (x**138) + L0x2001995e_f * (x**139) + 
            L0x20019960_f * (x**140) + L0x20019962_f * (x**141) + 
            L0x20019964_f * (x**142) + L0x20019966_f * (x**143) + 
            L0x20019968_f * (x**144) + L0x2001996a_f * (x**145) + 
            L0x2001996c_f * (x**146) + L0x2001996e_f * (x**147) + 
            L0x20019970_f * (x**148) + L0x20019972_f * (x**149) + 
            L0x20019974_f * (x**150) + L0x20019976_f * (x**151) + 
            L0x20019978_f * (x**152) + L0x2001997a_f * (x**153) + 
            L0x2001997c_f * (x**154) + L0x2001997e_f * (x**155) + 
            L0x20019980_f * (x**156) + L0x20019982_f * (x**157) + 
            L0x20019984_f * (x**158) + L0x20019986_f * (x**159) + 
            L0x20019988_f * (x**160) + L0x2001998a_f * (x**161) + 
            L0x2001998c_f * (x**162) + L0x2001998e_f * (x**163) + 
            L0x20019990_f * (x**164) + L0x20019992_f * (x**165) + 
            L0x20019994_f * (x**166) + L0x20019996_f * (x**167) + 
            L0x20019998_f * (x**168) + L0x2001999a_f * (x**169) + 
            L0x2001999c_f * (x**170) + L0x2001999e_f * (x**171) + 
            L0x200199a0_f * (x**172) + L0x200199a2_f * (x**173) + 
            L0x200199a4_f * (x**174) + L0x200199a6_f * (x**175) + 
            L0x200199a8_f * (x**176) + L0x200199aa_f * (x**177) + 
            L0x200199ac_f * (x**178) + L0x200199ae_f * (x**179) + 
            L0x200199b0_f * (x**180) + L0x200199b2_f * (x**181) + 
            L0x200199b4_f * (x**182) + L0x200199b6_f * (x**183) + 
            L0x200199b8_f * (x**184) + L0x200199ba_f * (x**185) + 
            L0x200199bc_f * (x**186) + L0x200199be_f * (x**187) + 
            L0x200199c0_f * (x**188) + L0x200199c2_f * (x**189) + 
            L0x200199c4_f * (x**190) + L0x200199c6_f * (x**191) + 
            L0x200199c8_f * (x**192) + L0x200199ca_f * (x**193) + 
            L0x200199cc_f * (x**194) + L0x200199ce_f * (x**195) + 
            L0x200199d0_f * (x**196) + L0x200199d2_f * (x**197) + 
            L0x200199d4_f * (x**198) + L0x200199d6_f * (x**199) + 
            L0x200199d8_f * (x**200) + L0x200199da_f * (x**201) + 
            L0x200199dc_f * (x**202) + L0x200199de_f * (x**203) + 
            L0x200199e0_f * (x**204) + L0x200199e2_f * (x**205) + 
            L0x200199e4_f * (x**206) + L0x200199e6_f * (x**207) + 
            L0x200199e8_f * (x**208) + L0x200199ea_f * (x**209) + 
            L0x200199ec_f * (x**210) + L0x200199ee_f * (x**211) + 
            L0x200199f0_f * (x**212) + L0x200199f2_f * (x**213) + 
            L0x200199f4_f * (x**214) + L0x200199f6_f * (x**215) + 
            L0x200199f8_f * (x**216) + L0x200199fa_f * (x**217) + 
            L0x200199fc_f * (x**218) + L0x200199fe_f * (x**219) + 
            L0x20019a00_f * (x**220) + L0x20019a02_f * (x**221) + 
            L0x20019a04_f * (x**222) + L0x20019a06_f * (x**223) + 
            L0x20019a08_f * (x**224) + L0x20019a0a_f * (x**225) + 
            L0x20019a0c_f * (x**226) + L0x20019a0e_f * (x**227) + 
            L0x20019a10_f * (x**228) + L0x20019a12_f * (x**229) + 
            L0x20019a14_f * (x**230) + L0x20019a16_f * (x**231) + 
            L0x20019a18_f * (x**232) + L0x20019a1a_f * (x**233) + 
            L0x20019a1c_f * (x**234) + L0x20019a1e_f * (x**235) + 
            L0x20019a20_f * (x**236) + L0x20019a22_f * (x**237) + 
            L0x20019a24_f * (x**238) + L0x20019a26_f * (x**239) + 
            L0x20019a28_f * (x**240) + L0x20019a2a_f * (x**241) + 
            L0x20019a2c_f * (x**242) + L0x20019a2e_f * (x**243) + 
            L0x20019a30_f * (x**244) + L0x20019a32_f * (x**245) + 
            L0x20019a34_f * (x**246) + L0x20019a36_f * (x**247) + 
            L0x20019a38_f * (x**248) + L0x20019a3a_f * (x**249) + 
            L0x20019a3c_f * (x**250) + L0x20019a3e_f * (x**251) + 
            L0x20019a40_f * (x**252) + L0x20019a42_f * (x**253) + 
            L0x20019a44_f * (x**254) + L0x20019a46_f * (x**255)
          )
          [25570049, x**4 - 4410275],
    (* inp_poly_11 *)
    eqmod (2**32) * (inp_poly_11 * inp_poly_11)
          (
            L0x20019848_f * (x**0) + L0x2001984a_f * (x**1) + 
            L0x2001984c_f * (x**2) + L0x2001984e_f * (x**3) + 
            L0x20019850_f * (x**4) + L0x20019852_f * (x**5) + 
            L0x20019854_f * (x**6) + L0x20019856_f * (x**7) + 
            L0x20019858_f * (x**8) + L0x2001985a_f * (x**9) + 
            L0x2001985c_f * (x**10) + L0x2001985e_f * (x**11) + 
            L0x20019860_f * (x**12) + L0x20019862_f * (x**13) + 
            L0x20019864_f * (x**14) + L0x20019866_f * (x**15) + 
            L0x20019868_f * (x**16) + L0x2001986a_f * (x**17) + 
            L0x2001986c_f * (x**18) + L0x2001986e_f * (x**19) + 
            L0x20019870_f * (x**20) + L0x20019872_f * (x**21) + 
            L0x20019874_f * (x**22) + L0x20019876_f * (x**23) + 
            L0x20019878_f * (x**24) + L0x2001987a_f * (x**25) + 
            L0x2001987c_f * (x**26) + L0x2001987e_f * (x**27) + 
            L0x20019880_f * (x**28) + L0x20019882_f * (x**29) + 
            L0x20019884_f * (x**30) + L0x20019886_f * (x**31) + 
            L0x20019888_f * (x**32) + L0x2001988a_f * (x**33) + 
            L0x2001988c_f * (x**34) + L0x2001988e_f * (x**35) + 
            L0x20019890_f * (x**36) + L0x20019892_f * (x**37) + 
            L0x20019894_f * (x**38) + L0x20019896_f * (x**39) + 
            L0x20019898_f * (x**40) + L0x2001989a_f * (x**41) + 
            L0x2001989c_f * (x**42) + L0x2001989e_f * (x**43) + 
            L0x200198a0_f * (x**44) + L0x200198a2_f * (x**45) + 
            L0x200198a4_f * (x**46) + L0x200198a6_f * (x**47) + 
            L0x200198a8_f * (x**48) + L0x200198aa_f * (x**49) + 
            L0x200198ac_f * (x**50) + L0x200198ae_f * (x**51) + 
            L0x200198b0_f * (x**52) + L0x200198b2_f * (x**53) + 
            L0x200198b4_f * (x**54) + L0x200198b6_f * (x**55) + 
            L0x200198b8_f * (x**56) + L0x200198ba_f * (x**57) + 
            L0x200198bc_f * (x**58) + L0x200198be_f * (x**59) + 
            L0x200198c0_f * (x**60) + L0x200198c2_f * (x**61) + 
            L0x200198c4_f * (x**62) + L0x200198c6_f * (x**63) + 
            L0x200198c8_f * (x**64) + L0x200198ca_f * (x**65) + 
            L0x200198cc_f * (x**66) + L0x200198ce_f * (x**67) + 
            L0x200198d0_f * (x**68) + L0x200198d2_f * (x**69) + 
            L0x200198d4_f * (x**70) + L0x200198d6_f * (x**71) + 
            L0x200198d8_f * (x**72) + L0x200198da_f * (x**73) + 
            L0x200198dc_f * (x**74) + L0x200198de_f * (x**75) + 
            L0x200198e0_f * (x**76) + L0x200198e2_f * (x**77) + 
            L0x200198e4_f * (x**78) + L0x200198e6_f * (x**79) + 
            L0x200198e8_f * (x**80) + L0x200198ea_f * (x**81) + 
            L0x200198ec_f * (x**82) + L0x200198ee_f * (x**83) + 
            L0x200198f0_f * (x**84) + L0x200198f2_f * (x**85) + 
            L0x200198f4_f * (x**86) + L0x200198f6_f * (x**87) + 
            L0x200198f8_f * (x**88) + L0x200198fa_f * (x**89) + 
            L0x200198fc_f * (x**90) + L0x200198fe_f * (x**91) + 
            L0x20019900_f * (x**92) + L0x20019902_f * (x**93) + 
            L0x20019904_f * (x**94) + L0x20019906_f * (x**95) + 
            L0x20019908_f * (x**96) + L0x2001990a_f * (x**97) + 
            L0x2001990c_f * (x**98) + L0x2001990e_f * (x**99) + 
            L0x20019910_f * (x**100) + L0x20019912_f * (x**101) + 
            L0x20019914_f * (x**102) + L0x20019916_f * (x**103) + 
            L0x20019918_f * (x**104) + L0x2001991a_f * (x**105) + 
            L0x2001991c_f * (x**106) + L0x2001991e_f * (x**107) + 
            L0x20019920_f * (x**108) + L0x20019922_f * (x**109) + 
            L0x20019924_f * (x**110) + L0x20019926_f * (x**111) + 
            L0x20019928_f * (x**112) + L0x2001992a_f * (x**113) + 
            L0x2001992c_f * (x**114) + L0x2001992e_f * (x**115) + 
            L0x20019930_f * (x**116) + L0x20019932_f * (x**117) + 
            L0x20019934_f * (x**118) + L0x20019936_f * (x**119) + 
            L0x20019938_f * (x**120) + L0x2001993a_f * (x**121) + 
            L0x2001993c_f * (x**122) + L0x2001993e_f * (x**123) + 
            L0x20019940_f * (x**124) + L0x20019942_f * (x**125) + 
            L0x20019944_f * (x**126) + L0x20019946_f * (x**127) + 
            L0x20019948_f * (x**128) + L0x2001994a_f * (x**129) + 
            L0x2001994c_f * (x**130) + L0x2001994e_f * (x**131) + 
            L0x20019950_f * (x**132) + L0x20019952_f * (x**133) + 
            L0x20019954_f * (x**134) + L0x20019956_f * (x**135) + 
            L0x20019958_f * (x**136) + L0x2001995a_f * (x**137) + 
            L0x2001995c_f * (x**138) + L0x2001995e_f * (x**139) + 
            L0x20019960_f * (x**140) + L0x20019962_f * (x**141) + 
            L0x20019964_f * (x**142) + L0x20019966_f * (x**143) + 
            L0x20019968_f * (x**144) + L0x2001996a_f * (x**145) + 
            L0x2001996c_f * (x**146) + L0x2001996e_f * (x**147) + 
            L0x20019970_f * (x**148) + L0x20019972_f * (x**149) + 
            L0x20019974_f * (x**150) + L0x20019976_f * (x**151) + 
            L0x20019978_f * (x**152) + L0x2001997a_f * (x**153) + 
            L0x2001997c_f * (x**154) + L0x2001997e_f * (x**155) + 
            L0x20019980_f * (x**156) + L0x20019982_f * (x**157) + 
            L0x20019984_f * (x**158) + L0x20019986_f * (x**159) + 
            L0x20019988_f * (x**160) + L0x2001998a_f * (x**161) + 
            L0x2001998c_f * (x**162) + L0x2001998e_f * (x**163) + 
            L0x20019990_f * (x**164) + L0x20019992_f * (x**165) + 
            L0x20019994_f * (x**166) + L0x20019996_f * (x**167) + 
            L0x20019998_f * (x**168) + L0x2001999a_f * (x**169) + 
            L0x2001999c_f * (x**170) + L0x2001999e_f * (x**171) + 
            L0x200199a0_f * (x**172) + L0x200199a2_f * (x**173) + 
            L0x200199a4_f * (x**174) + L0x200199a6_f * (x**175) + 
            L0x200199a8_f * (x**176) + L0x200199aa_f * (x**177) + 
            L0x200199ac_f * (x**178) + L0x200199ae_f * (x**179) + 
            L0x200199b0_f * (x**180) + L0x200199b2_f * (x**181) + 
            L0x200199b4_f * (x**182) + L0x200199b6_f * (x**183) + 
            L0x200199b8_f * (x**184) + L0x200199ba_f * (x**185) + 
            L0x200199bc_f * (x**186) + L0x200199be_f * (x**187) + 
            L0x200199c0_f * (x**188) + L0x200199c2_f * (x**189) + 
            L0x200199c4_f * (x**190) + L0x200199c6_f * (x**191) + 
            L0x200199c8_f * (x**192) + L0x200199ca_f * (x**193) + 
            L0x200199cc_f * (x**194) + L0x200199ce_f * (x**195) + 
            L0x200199d0_f * (x**196) + L0x200199d2_f * (x**197) + 
            L0x200199d4_f * (x**198) + L0x200199d6_f * (x**199) + 
            L0x200199d8_f * (x**200) + L0x200199da_f * (x**201) + 
            L0x200199dc_f * (x**202) + L0x200199de_f * (x**203) + 
            L0x200199e0_f * (x**204) + L0x200199e2_f * (x**205) + 
            L0x200199e4_f * (x**206) + L0x200199e6_f * (x**207) + 
            L0x200199e8_f * (x**208) + L0x200199ea_f * (x**209) + 
            L0x200199ec_f * (x**210) + L0x200199ee_f * (x**211) + 
            L0x200199f0_f * (x**212) + L0x200199f2_f * (x**213) + 
            L0x200199f4_f * (x**214) + L0x200199f6_f * (x**215) + 
            L0x200199f8_f * (x**216) + L0x200199fa_f * (x**217) + 
            L0x200199fc_f * (x**218) + L0x200199fe_f * (x**219) + 
            L0x20019a00_f * (x**220) + L0x20019a02_f * (x**221) + 
            L0x20019a04_f * (x**222) + L0x20019a06_f * (x**223) + 
            L0x20019a08_f * (x**224) + L0x20019a0a_f * (x**225) + 
            L0x20019a0c_f * (x**226) + L0x20019a0e_f * (x**227) + 
            L0x20019a10_f * (x**228) + L0x20019a12_f * (x**229) + 
            L0x20019a14_f * (x**230) + L0x20019a16_f * (x**231) + 
            L0x20019a18_f * (x**232) + L0x20019a1a_f * (x**233) + 
            L0x20019a1c_f * (x**234) + L0x20019a1e_f * (x**235) + 
            L0x20019a20_f * (x**236) + L0x20019a22_f * (x**237) + 
            L0x20019a24_f * (x**238) + L0x20019a26_f * (x**239) + 
            L0x20019a28_f * (x**240) + L0x20019a2a_f * (x**241) + 
            L0x20019a2c_f * (x**242) + L0x20019a2e_f * (x**243) + 
            L0x20019a30_f * (x**244) + L0x20019a32_f * (x**245) + 
            L0x20019a34_f * (x**246) + L0x20019a36_f * (x**247) + 
            L0x20019a38_f * (x**248) + L0x20019a3a_f * (x**249) + 
            L0x20019a3c_f * (x**250) + L0x20019a3e_f * (x**251) + 
            L0x20019a40_f * (x**252) + L0x20019a42_f * (x**253) + 
            L0x20019a44_f * (x**254) + L0x20019a46_f * (x**255)
          )
          [25570049, x**4 - 21159774],
    (* inp_poly_12 *)
    eqmod (2**32) * (inp_poly_12 * inp_poly_12)
          (
            L0x20019848_f * (x**0) + L0x2001984a_f * (x**1) + 
            L0x2001984c_f * (x**2) + L0x2001984e_f * (x**3) + 
            L0x20019850_f * (x**4) + L0x20019852_f * (x**5) + 
            L0x20019854_f * (x**6) + L0x20019856_f * (x**7) + 
            L0x20019858_f * (x**8) + L0x2001985a_f * (x**9) + 
            L0x2001985c_f * (x**10) + L0x2001985e_f * (x**11) + 
            L0x20019860_f * (x**12) + L0x20019862_f * (x**13) + 
            L0x20019864_f * (x**14) + L0x20019866_f * (x**15) + 
            L0x20019868_f * (x**16) + L0x2001986a_f * (x**17) + 
            L0x2001986c_f * (x**18) + L0x2001986e_f * (x**19) + 
            L0x20019870_f * (x**20) + L0x20019872_f * (x**21) + 
            L0x20019874_f * (x**22) + L0x20019876_f * (x**23) + 
            L0x20019878_f * (x**24) + L0x2001987a_f * (x**25) + 
            L0x2001987c_f * (x**26) + L0x2001987e_f * (x**27) + 
            L0x20019880_f * (x**28) + L0x20019882_f * (x**29) + 
            L0x20019884_f * (x**30) + L0x20019886_f * (x**31) + 
            L0x20019888_f * (x**32) + L0x2001988a_f * (x**33) + 
            L0x2001988c_f * (x**34) + L0x2001988e_f * (x**35) + 
            L0x20019890_f * (x**36) + L0x20019892_f * (x**37) + 
            L0x20019894_f * (x**38) + L0x20019896_f * (x**39) + 
            L0x20019898_f * (x**40) + L0x2001989a_f * (x**41) + 
            L0x2001989c_f * (x**42) + L0x2001989e_f * (x**43) + 
            L0x200198a0_f * (x**44) + L0x200198a2_f * (x**45) + 
            L0x200198a4_f * (x**46) + L0x200198a6_f * (x**47) + 
            L0x200198a8_f * (x**48) + L0x200198aa_f * (x**49) + 
            L0x200198ac_f * (x**50) + L0x200198ae_f * (x**51) + 
            L0x200198b0_f * (x**52) + L0x200198b2_f * (x**53) + 
            L0x200198b4_f * (x**54) + L0x200198b6_f * (x**55) + 
            L0x200198b8_f * (x**56) + L0x200198ba_f * (x**57) + 
            L0x200198bc_f * (x**58) + L0x200198be_f * (x**59) + 
            L0x200198c0_f * (x**60) + L0x200198c2_f * (x**61) + 
            L0x200198c4_f * (x**62) + L0x200198c6_f * (x**63) + 
            L0x200198c8_f * (x**64) + L0x200198ca_f * (x**65) + 
            L0x200198cc_f * (x**66) + L0x200198ce_f * (x**67) + 
            L0x200198d0_f * (x**68) + L0x200198d2_f * (x**69) + 
            L0x200198d4_f * (x**70) + L0x200198d6_f * (x**71) + 
            L0x200198d8_f * (x**72) + L0x200198da_f * (x**73) + 
            L0x200198dc_f * (x**74) + L0x200198de_f * (x**75) + 
            L0x200198e0_f * (x**76) + L0x200198e2_f * (x**77) + 
            L0x200198e4_f * (x**78) + L0x200198e6_f * (x**79) + 
            L0x200198e8_f * (x**80) + L0x200198ea_f * (x**81) + 
            L0x200198ec_f * (x**82) + L0x200198ee_f * (x**83) + 
            L0x200198f0_f * (x**84) + L0x200198f2_f * (x**85) + 
            L0x200198f4_f * (x**86) + L0x200198f6_f * (x**87) + 
            L0x200198f8_f * (x**88) + L0x200198fa_f * (x**89) + 
            L0x200198fc_f * (x**90) + L0x200198fe_f * (x**91) + 
            L0x20019900_f * (x**92) + L0x20019902_f * (x**93) + 
            L0x20019904_f * (x**94) + L0x20019906_f * (x**95) + 
            L0x20019908_f * (x**96) + L0x2001990a_f * (x**97) + 
            L0x2001990c_f * (x**98) + L0x2001990e_f * (x**99) + 
            L0x20019910_f * (x**100) + L0x20019912_f * (x**101) + 
            L0x20019914_f * (x**102) + L0x20019916_f * (x**103) + 
            L0x20019918_f * (x**104) + L0x2001991a_f * (x**105) + 
            L0x2001991c_f * (x**106) + L0x2001991e_f * (x**107) + 
            L0x20019920_f * (x**108) + L0x20019922_f * (x**109) + 
            L0x20019924_f * (x**110) + L0x20019926_f * (x**111) + 
            L0x20019928_f * (x**112) + L0x2001992a_f * (x**113) + 
            L0x2001992c_f * (x**114) + L0x2001992e_f * (x**115) + 
            L0x20019930_f * (x**116) + L0x20019932_f * (x**117) + 
            L0x20019934_f * (x**118) + L0x20019936_f * (x**119) + 
            L0x20019938_f * (x**120) + L0x2001993a_f * (x**121) + 
            L0x2001993c_f * (x**122) + L0x2001993e_f * (x**123) + 
            L0x20019940_f * (x**124) + L0x20019942_f * (x**125) + 
            L0x20019944_f * (x**126) + L0x20019946_f * (x**127) + 
            L0x20019948_f * (x**128) + L0x2001994a_f * (x**129) + 
            L0x2001994c_f * (x**130) + L0x2001994e_f * (x**131) + 
            L0x20019950_f * (x**132) + L0x20019952_f * (x**133) + 
            L0x20019954_f * (x**134) + L0x20019956_f * (x**135) + 
            L0x20019958_f * (x**136) + L0x2001995a_f * (x**137) + 
            L0x2001995c_f * (x**138) + L0x2001995e_f * (x**139) + 
            L0x20019960_f * (x**140) + L0x20019962_f * (x**141) + 
            L0x20019964_f * (x**142) + L0x20019966_f * (x**143) + 
            L0x20019968_f * (x**144) + L0x2001996a_f * (x**145) + 
            L0x2001996c_f * (x**146) + L0x2001996e_f * (x**147) + 
            L0x20019970_f * (x**148) + L0x20019972_f * (x**149) + 
            L0x20019974_f * (x**150) + L0x20019976_f * (x**151) + 
            L0x20019978_f * (x**152) + L0x2001997a_f * (x**153) + 
            L0x2001997c_f * (x**154) + L0x2001997e_f * (x**155) + 
            L0x20019980_f * (x**156) + L0x20019982_f * (x**157) + 
            L0x20019984_f * (x**158) + L0x20019986_f * (x**159) + 
            L0x20019988_f * (x**160) + L0x2001998a_f * (x**161) + 
            L0x2001998c_f * (x**162) + L0x2001998e_f * (x**163) + 
            L0x20019990_f * (x**164) + L0x20019992_f * (x**165) + 
            L0x20019994_f * (x**166) + L0x20019996_f * (x**167) + 
            L0x20019998_f * (x**168) + L0x2001999a_f * (x**169) + 
            L0x2001999c_f * (x**170) + L0x2001999e_f * (x**171) + 
            L0x200199a0_f * (x**172) + L0x200199a2_f * (x**173) + 
            L0x200199a4_f * (x**174) + L0x200199a6_f * (x**175) + 
            L0x200199a8_f * (x**176) + L0x200199aa_f * (x**177) + 
            L0x200199ac_f * (x**178) + L0x200199ae_f * (x**179) + 
            L0x200199b0_f * (x**180) + L0x200199b2_f * (x**181) + 
            L0x200199b4_f * (x**182) + L0x200199b6_f * (x**183) + 
            L0x200199b8_f * (x**184) + L0x200199ba_f * (x**185) + 
            L0x200199bc_f * (x**186) + L0x200199be_f * (x**187) + 
            L0x200199c0_f * (x**188) + L0x200199c2_f * (x**189) + 
            L0x200199c4_f * (x**190) + L0x200199c6_f * (x**191) + 
            L0x200199c8_f * (x**192) + L0x200199ca_f * (x**193) + 
            L0x200199cc_f * (x**194) + L0x200199ce_f * (x**195) + 
            L0x200199d0_f * (x**196) + L0x200199d2_f * (x**197) + 
            L0x200199d4_f * (x**198) + L0x200199d6_f * (x**199) + 
            L0x200199d8_f * (x**200) + L0x200199da_f * (x**201) + 
            L0x200199dc_f * (x**202) + L0x200199de_f * (x**203) + 
            L0x200199e0_f * (x**204) + L0x200199e2_f * (x**205) + 
            L0x200199e4_f * (x**206) + L0x200199e6_f * (x**207) + 
            L0x200199e8_f * (x**208) + L0x200199ea_f * (x**209) + 
            L0x200199ec_f * (x**210) + L0x200199ee_f * (x**211) + 
            L0x200199f0_f * (x**212) + L0x200199f2_f * (x**213) + 
            L0x200199f4_f * (x**214) + L0x200199f6_f * (x**215) + 
            L0x200199f8_f * (x**216) + L0x200199fa_f * (x**217) + 
            L0x200199fc_f * (x**218) + L0x200199fe_f * (x**219) + 
            L0x20019a00_f * (x**220) + L0x20019a02_f * (x**221) + 
            L0x20019a04_f * (x**222) + L0x20019a06_f * (x**223) + 
            L0x20019a08_f * (x**224) + L0x20019a0a_f * (x**225) + 
            L0x20019a0c_f * (x**226) + L0x20019a0e_f * (x**227) + 
            L0x20019a10_f * (x**228) + L0x20019a12_f * (x**229) + 
            L0x20019a14_f * (x**230) + L0x20019a16_f * (x**231) + 
            L0x20019a18_f * (x**232) + L0x20019a1a_f * (x**233) + 
            L0x20019a1c_f * (x**234) + L0x20019a1e_f * (x**235) + 
            L0x20019a20_f * (x**236) + L0x20019a22_f * (x**237) + 
            L0x20019a24_f * (x**238) + L0x20019a26_f * (x**239) + 
            L0x20019a28_f * (x**240) + L0x20019a2a_f * (x**241) + 
            L0x20019a2c_f * (x**242) + L0x20019a2e_f * (x**243) + 
            L0x20019a30_f * (x**244) + L0x20019a32_f * (x**245) + 
            L0x20019a34_f * (x**246) + L0x20019a36_f * (x**247) + 
            L0x20019a38_f * (x**248) + L0x20019a3a_f * (x**249) + 
            L0x20019a3c_f * (x**250) + L0x20019a3e_f * (x**251) + 
            L0x20019a40_f * (x**252) + L0x20019a42_f * (x**253) + 
            L0x20019a44_f * (x**254) + L0x20019a46_f * (x**255)
          )
          [25570049, x**4 - 2389590],
    (* inp_poly_13 *)
    eqmod (2**32) * (inp_poly_13 * inp_poly_13)
          (
            L0x20019848_f * (x**0) + L0x2001984a_f * (x**1) + 
            L0x2001984c_f * (x**2) + L0x2001984e_f * (x**3) + 
            L0x20019850_f * (x**4) + L0x20019852_f * (x**5) + 
            L0x20019854_f * (x**6) + L0x20019856_f * (x**7) + 
            L0x20019858_f * (x**8) + L0x2001985a_f * (x**9) + 
            L0x2001985c_f * (x**10) + L0x2001985e_f * (x**11) + 
            L0x20019860_f * (x**12) + L0x20019862_f * (x**13) + 
            L0x20019864_f * (x**14) + L0x20019866_f * (x**15) + 
            L0x20019868_f * (x**16) + L0x2001986a_f * (x**17) + 
            L0x2001986c_f * (x**18) + L0x2001986e_f * (x**19) + 
            L0x20019870_f * (x**20) + L0x20019872_f * (x**21) + 
            L0x20019874_f * (x**22) + L0x20019876_f * (x**23) + 
            L0x20019878_f * (x**24) + L0x2001987a_f * (x**25) + 
            L0x2001987c_f * (x**26) + L0x2001987e_f * (x**27) + 
            L0x20019880_f * (x**28) + L0x20019882_f * (x**29) + 
            L0x20019884_f * (x**30) + L0x20019886_f * (x**31) + 
            L0x20019888_f * (x**32) + L0x2001988a_f * (x**33) + 
            L0x2001988c_f * (x**34) + L0x2001988e_f * (x**35) + 
            L0x20019890_f * (x**36) + L0x20019892_f * (x**37) + 
            L0x20019894_f * (x**38) + L0x20019896_f * (x**39) + 
            L0x20019898_f * (x**40) + L0x2001989a_f * (x**41) + 
            L0x2001989c_f * (x**42) + L0x2001989e_f * (x**43) + 
            L0x200198a0_f * (x**44) + L0x200198a2_f * (x**45) + 
            L0x200198a4_f * (x**46) + L0x200198a6_f * (x**47) + 
            L0x200198a8_f * (x**48) + L0x200198aa_f * (x**49) + 
            L0x200198ac_f * (x**50) + L0x200198ae_f * (x**51) + 
            L0x200198b0_f * (x**52) + L0x200198b2_f * (x**53) + 
            L0x200198b4_f * (x**54) + L0x200198b6_f * (x**55) + 
            L0x200198b8_f * (x**56) + L0x200198ba_f * (x**57) + 
            L0x200198bc_f * (x**58) + L0x200198be_f * (x**59) + 
            L0x200198c0_f * (x**60) + L0x200198c2_f * (x**61) + 
            L0x200198c4_f * (x**62) + L0x200198c6_f * (x**63) + 
            L0x200198c8_f * (x**64) + L0x200198ca_f * (x**65) + 
            L0x200198cc_f * (x**66) + L0x200198ce_f * (x**67) + 
            L0x200198d0_f * (x**68) + L0x200198d2_f * (x**69) + 
            L0x200198d4_f * (x**70) + L0x200198d6_f * (x**71) + 
            L0x200198d8_f * (x**72) + L0x200198da_f * (x**73) + 
            L0x200198dc_f * (x**74) + L0x200198de_f * (x**75) + 
            L0x200198e0_f * (x**76) + L0x200198e2_f * (x**77) + 
            L0x200198e4_f * (x**78) + L0x200198e6_f * (x**79) + 
            L0x200198e8_f * (x**80) + L0x200198ea_f * (x**81) + 
            L0x200198ec_f * (x**82) + L0x200198ee_f * (x**83) + 
            L0x200198f0_f * (x**84) + L0x200198f2_f * (x**85) + 
            L0x200198f4_f * (x**86) + L0x200198f6_f * (x**87) + 
            L0x200198f8_f * (x**88) + L0x200198fa_f * (x**89) + 
            L0x200198fc_f * (x**90) + L0x200198fe_f * (x**91) + 
            L0x20019900_f * (x**92) + L0x20019902_f * (x**93) + 
            L0x20019904_f * (x**94) + L0x20019906_f * (x**95) + 
            L0x20019908_f * (x**96) + L0x2001990a_f * (x**97) + 
            L0x2001990c_f * (x**98) + L0x2001990e_f * (x**99) + 
            L0x20019910_f * (x**100) + L0x20019912_f * (x**101) + 
            L0x20019914_f * (x**102) + L0x20019916_f * (x**103) + 
            L0x20019918_f * (x**104) + L0x2001991a_f * (x**105) + 
            L0x2001991c_f * (x**106) + L0x2001991e_f * (x**107) + 
            L0x20019920_f * (x**108) + L0x20019922_f * (x**109) + 
            L0x20019924_f * (x**110) + L0x20019926_f * (x**111) + 
            L0x20019928_f * (x**112) + L0x2001992a_f * (x**113) + 
            L0x2001992c_f * (x**114) + L0x2001992e_f * (x**115) + 
            L0x20019930_f * (x**116) + L0x20019932_f * (x**117) + 
            L0x20019934_f * (x**118) + L0x20019936_f * (x**119) + 
            L0x20019938_f * (x**120) + L0x2001993a_f * (x**121) + 
            L0x2001993c_f * (x**122) + L0x2001993e_f * (x**123) + 
            L0x20019940_f * (x**124) + L0x20019942_f * (x**125) + 
            L0x20019944_f * (x**126) + L0x20019946_f * (x**127) + 
            L0x20019948_f * (x**128) + L0x2001994a_f * (x**129) + 
            L0x2001994c_f * (x**130) + L0x2001994e_f * (x**131) + 
            L0x20019950_f * (x**132) + L0x20019952_f * (x**133) + 
            L0x20019954_f * (x**134) + L0x20019956_f * (x**135) + 
            L0x20019958_f * (x**136) + L0x2001995a_f * (x**137) + 
            L0x2001995c_f * (x**138) + L0x2001995e_f * (x**139) + 
            L0x20019960_f * (x**140) + L0x20019962_f * (x**141) + 
            L0x20019964_f * (x**142) + L0x20019966_f * (x**143) + 
            L0x20019968_f * (x**144) + L0x2001996a_f * (x**145) + 
            L0x2001996c_f * (x**146) + L0x2001996e_f * (x**147) + 
            L0x20019970_f * (x**148) + L0x20019972_f * (x**149) + 
            L0x20019974_f * (x**150) + L0x20019976_f * (x**151) + 
            L0x20019978_f * (x**152) + L0x2001997a_f * (x**153) + 
            L0x2001997c_f * (x**154) + L0x2001997e_f * (x**155) + 
            L0x20019980_f * (x**156) + L0x20019982_f * (x**157) + 
            L0x20019984_f * (x**158) + L0x20019986_f * (x**159) + 
            L0x20019988_f * (x**160) + L0x2001998a_f * (x**161) + 
            L0x2001998c_f * (x**162) + L0x2001998e_f * (x**163) + 
            L0x20019990_f * (x**164) + L0x20019992_f * (x**165) + 
            L0x20019994_f * (x**166) + L0x20019996_f * (x**167) + 
            L0x20019998_f * (x**168) + L0x2001999a_f * (x**169) + 
            L0x2001999c_f * (x**170) + L0x2001999e_f * (x**171) + 
            L0x200199a0_f * (x**172) + L0x200199a2_f * (x**173) + 
            L0x200199a4_f * (x**174) + L0x200199a6_f * (x**175) + 
            L0x200199a8_f * (x**176) + L0x200199aa_f * (x**177) + 
            L0x200199ac_f * (x**178) + L0x200199ae_f * (x**179) + 
            L0x200199b0_f * (x**180) + L0x200199b2_f * (x**181) + 
            L0x200199b4_f * (x**182) + L0x200199b6_f * (x**183) + 
            L0x200199b8_f * (x**184) + L0x200199ba_f * (x**185) + 
            L0x200199bc_f * (x**186) + L0x200199be_f * (x**187) + 
            L0x200199c0_f * (x**188) + L0x200199c2_f * (x**189) + 
            L0x200199c4_f * (x**190) + L0x200199c6_f * (x**191) + 
            L0x200199c8_f * (x**192) + L0x200199ca_f * (x**193) + 
            L0x200199cc_f * (x**194) + L0x200199ce_f * (x**195) + 
            L0x200199d0_f * (x**196) + L0x200199d2_f * (x**197) + 
            L0x200199d4_f * (x**198) + L0x200199d6_f * (x**199) + 
            L0x200199d8_f * (x**200) + L0x200199da_f * (x**201) + 
            L0x200199dc_f * (x**202) + L0x200199de_f * (x**203) + 
            L0x200199e0_f * (x**204) + L0x200199e2_f * (x**205) + 
            L0x200199e4_f * (x**206) + L0x200199e6_f * (x**207) + 
            L0x200199e8_f * (x**208) + L0x200199ea_f * (x**209) + 
            L0x200199ec_f * (x**210) + L0x200199ee_f * (x**211) + 
            L0x200199f0_f * (x**212) + L0x200199f2_f * (x**213) + 
            L0x200199f4_f * (x**214) + L0x200199f6_f * (x**215) + 
            L0x200199f8_f * (x**216) + L0x200199fa_f * (x**217) + 
            L0x200199fc_f * (x**218) + L0x200199fe_f * (x**219) + 
            L0x20019a00_f * (x**220) + L0x20019a02_f * (x**221) + 
            L0x20019a04_f * (x**222) + L0x20019a06_f * (x**223) + 
            L0x20019a08_f * (x**224) + L0x20019a0a_f * (x**225) + 
            L0x20019a0c_f * (x**226) + L0x20019a0e_f * (x**227) + 
            L0x20019a10_f * (x**228) + L0x20019a12_f * (x**229) + 
            L0x20019a14_f * (x**230) + L0x20019a16_f * (x**231) + 
            L0x20019a18_f * (x**232) + L0x20019a1a_f * (x**233) + 
            L0x20019a1c_f * (x**234) + L0x20019a1e_f * (x**235) + 
            L0x20019a20_f * (x**236) + L0x20019a22_f * (x**237) + 
            L0x20019a24_f * (x**238) + L0x20019a26_f * (x**239) + 
            L0x20019a28_f * (x**240) + L0x20019a2a_f * (x**241) + 
            L0x20019a2c_f * (x**242) + L0x20019a2e_f * (x**243) + 
            L0x20019a30_f * (x**244) + L0x20019a32_f * (x**245) + 
            L0x20019a34_f * (x**246) + L0x20019a36_f * (x**247) + 
            L0x20019a38_f * (x**248) + L0x20019a3a_f * (x**249) + 
            L0x20019a3c_f * (x**250) + L0x20019a3e_f * (x**251) + 
            L0x20019a40_f * (x**252) + L0x20019a42_f * (x**253) + 
            L0x20019a44_f * (x**254) + L0x20019a46_f * (x**255)
          )
          [25570049, x**4 - 23180459],
    (* inp_poly_14 *)
    eqmod (2**32) * (inp_poly_14 * inp_poly_14)
          (
            L0x20019848_f * (x**0) + L0x2001984a_f * (x**1) + 
            L0x2001984c_f * (x**2) + L0x2001984e_f * (x**3) + 
            L0x20019850_f * (x**4) + L0x20019852_f * (x**5) + 
            L0x20019854_f * (x**6) + L0x20019856_f * (x**7) + 
            L0x20019858_f * (x**8) + L0x2001985a_f * (x**9) + 
            L0x2001985c_f * (x**10) + L0x2001985e_f * (x**11) + 
            L0x20019860_f * (x**12) + L0x20019862_f * (x**13) + 
            L0x20019864_f * (x**14) + L0x20019866_f * (x**15) + 
            L0x20019868_f * (x**16) + L0x2001986a_f * (x**17) + 
            L0x2001986c_f * (x**18) + L0x2001986e_f * (x**19) + 
            L0x20019870_f * (x**20) + L0x20019872_f * (x**21) + 
            L0x20019874_f * (x**22) + L0x20019876_f * (x**23) + 
            L0x20019878_f * (x**24) + L0x2001987a_f * (x**25) + 
            L0x2001987c_f * (x**26) + L0x2001987e_f * (x**27) + 
            L0x20019880_f * (x**28) + L0x20019882_f * (x**29) + 
            L0x20019884_f * (x**30) + L0x20019886_f * (x**31) + 
            L0x20019888_f * (x**32) + L0x2001988a_f * (x**33) + 
            L0x2001988c_f * (x**34) + L0x2001988e_f * (x**35) + 
            L0x20019890_f * (x**36) + L0x20019892_f * (x**37) + 
            L0x20019894_f * (x**38) + L0x20019896_f * (x**39) + 
            L0x20019898_f * (x**40) + L0x2001989a_f * (x**41) + 
            L0x2001989c_f * (x**42) + L0x2001989e_f * (x**43) + 
            L0x200198a0_f * (x**44) + L0x200198a2_f * (x**45) + 
            L0x200198a4_f * (x**46) + L0x200198a6_f * (x**47) + 
            L0x200198a8_f * (x**48) + L0x200198aa_f * (x**49) + 
            L0x200198ac_f * (x**50) + L0x200198ae_f * (x**51) + 
            L0x200198b0_f * (x**52) + L0x200198b2_f * (x**53) + 
            L0x200198b4_f * (x**54) + L0x200198b6_f * (x**55) + 
            L0x200198b8_f * (x**56) + L0x200198ba_f * (x**57) + 
            L0x200198bc_f * (x**58) + L0x200198be_f * (x**59) + 
            L0x200198c0_f * (x**60) + L0x200198c2_f * (x**61) + 
            L0x200198c4_f * (x**62) + L0x200198c6_f * (x**63) + 
            L0x200198c8_f * (x**64) + L0x200198ca_f * (x**65) + 
            L0x200198cc_f * (x**66) + L0x200198ce_f * (x**67) + 
            L0x200198d0_f * (x**68) + L0x200198d2_f * (x**69) + 
            L0x200198d4_f * (x**70) + L0x200198d6_f * (x**71) + 
            L0x200198d8_f * (x**72) + L0x200198da_f * (x**73) + 
            L0x200198dc_f * (x**74) + L0x200198de_f * (x**75) + 
            L0x200198e0_f * (x**76) + L0x200198e2_f * (x**77) + 
            L0x200198e4_f * (x**78) + L0x200198e6_f * (x**79) + 
            L0x200198e8_f * (x**80) + L0x200198ea_f * (x**81) + 
            L0x200198ec_f * (x**82) + L0x200198ee_f * (x**83) + 
            L0x200198f0_f * (x**84) + L0x200198f2_f * (x**85) + 
            L0x200198f4_f * (x**86) + L0x200198f6_f * (x**87) + 
            L0x200198f8_f * (x**88) + L0x200198fa_f * (x**89) + 
            L0x200198fc_f * (x**90) + L0x200198fe_f * (x**91) + 
            L0x20019900_f * (x**92) + L0x20019902_f * (x**93) + 
            L0x20019904_f * (x**94) + L0x20019906_f * (x**95) + 
            L0x20019908_f * (x**96) + L0x2001990a_f * (x**97) + 
            L0x2001990c_f * (x**98) + L0x2001990e_f * (x**99) + 
            L0x20019910_f * (x**100) + L0x20019912_f * (x**101) + 
            L0x20019914_f * (x**102) + L0x20019916_f * (x**103) + 
            L0x20019918_f * (x**104) + L0x2001991a_f * (x**105) + 
            L0x2001991c_f * (x**106) + L0x2001991e_f * (x**107) + 
            L0x20019920_f * (x**108) + L0x20019922_f * (x**109) + 
            L0x20019924_f * (x**110) + L0x20019926_f * (x**111) + 
            L0x20019928_f * (x**112) + L0x2001992a_f * (x**113) + 
            L0x2001992c_f * (x**114) + L0x2001992e_f * (x**115) + 
            L0x20019930_f * (x**116) + L0x20019932_f * (x**117) + 
            L0x20019934_f * (x**118) + L0x20019936_f * (x**119) + 
            L0x20019938_f * (x**120) + L0x2001993a_f * (x**121) + 
            L0x2001993c_f * (x**122) + L0x2001993e_f * (x**123) + 
            L0x20019940_f * (x**124) + L0x20019942_f * (x**125) + 
            L0x20019944_f * (x**126) + L0x20019946_f * (x**127) + 
            L0x20019948_f * (x**128) + L0x2001994a_f * (x**129) + 
            L0x2001994c_f * (x**130) + L0x2001994e_f * (x**131) + 
            L0x20019950_f * (x**132) + L0x20019952_f * (x**133) + 
            L0x20019954_f * (x**134) + L0x20019956_f * (x**135) + 
            L0x20019958_f * (x**136) + L0x2001995a_f * (x**137) + 
            L0x2001995c_f * (x**138) + L0x2001995e_f * (x**139) + 
            L0x20019960_f * (x**140) + L0x20019962_f * (x**141) + 
            L0x20019964_f * (x**142) + L0x20019966_f * (x**143) + 
            L0x20019968_f * (x**144) + L0x2001996a_f * (x**145) + 
            L0x2001996c_f * (x**146) + L0x2001996e_f * (x**147) + 
            L0x20019970_f * (x**148) + L0x20019972_f * (x**149) + 
            L0x20019974_f * (x**150) + L0x20019976_f * (x**151) + 
            L0x20019978_f * (x**152) + L0x2001997a_f * (x**153) + 
            L0x2001997c_f * (x**154) + L0x2001997e_f * (x**155) + 
            L0x20019980_f * (x**156) + L0x20019982_f * (x**157) + 
            L0x20019984_f * (x**158) + L0x20019986_f * (x**159) + 
            L0x20019988_f * (x**160) + L0x2001998a_f * (x**161) + 
            L0x2001998c_f * (x**162) + L0x2001998e_f * (x**163) + 
            L0x20019990_f * (x**164) + L0x20019992_f * (x**165) + 
            L0x20019994_f * (x**166) + L0x20019996_f * (x**167) + 
            L0x20019998_f * (x**168) + L0x2001999a_f * (x**169) + 
            L0x2001999c_f * (x**170) + L0x2001999e_f * (x**171) + 
            L0x200199a0_f * (x**172) + L0x200199a2_f * (x**173) + 
            L0x200199a4_f * (x**174) + L0x200199a6_f * (x**175) + 
            L0x200199a8_f * (x**176) + L0x200199aa_f * (x**177) + 
            L0x200199ac_f * (x**178) + L0x200199ae_f * (x**179) + 
            L0x200199b0_f * (x**180) + L0x200199b2_f * (x**181) + 
            L0x200199b4_f * (x**182) + L0x200199b6_f * (x**183) + 
            L0x200199b8_f * (x**184) + L0x200199ba_f * (x**185) + 
            L0x200199bc_f * (x**186) + L0x200199be_f * (x**187) + 
            L0x200199c0_f * (x**188) + L0x200199c2_f * (x**189) + 
            L0x200199c4_f * (x**190) + L0x200199c6_f * (x**191) + 
            L0x200199c8_f * (x**192) + L0x200199ca_f * (x**193) + 
            L0x200199cc_f * (x**194) + L0x200199ce_f * (x**195) + 
            L0x200199d0_f * (x**196) + L0x200199d2_f * (x**197) + 
            L0x200199d4_f * (x**198) + L0x200199d6_f * (x**199) + 
            L0x200199d8_f * (x**200) + L0x200199da_f * (x**201) + 
            L0x200199dc_f * (x**202) + L0x200199de_f * (x**203) + 
            L0x200199e0_f * (x**204) + L0x200199e2_f * (x**205) + 
            L0x200199e4_f * (x**206) + L0x200199e6_f * (x**207) + 
            L0x200199e8_f * (x**208) + L0x200199ea_f * (x**209) + 
            L0x200199ec_f * (x**210) + L0x200199ee_f * (x**211) + 
            L0x200199f0_f * (x**212) + L0x200199f2_f * (x**213) + 
            L0x200199f4_f * (x**214) + L0x200199f6_f * (x**215) + 
            L0x200199f8_f * (x**216) + L0x200199fa_f * (x**217) + 
            L0x200199fc_f * (x**218) + L0x200199fe_f * (x**219) + 
            L0x20019a00_f * (x**220) + L0x20019a02_f * (x**221) + 
            L0x20019a04_f * (x**222) + L0x20019a06_f * (x**223) + 
            L0x20019a08_f * (x**224) + L0x20019a0a_f * (x**225) + 
            L0x20019a0c_f * (x**226) + L0x20019a0e_f * (x**227) + 
            L0x20019a10_f * (x**228) + L0x20019a12_f * (x**229) + 
            L0x20019a14_f * (x**230) + L0x20019a16_f * (x**231) + 
            L0x20019a18_f * (x**232) + L0x20019a1a_f * (x**233) + 
            L0x20019a1c_f * (x**234) + L0x20019a1e_f * (x**235) + 
            L0x20019a20_f * (x**236) + L0x20019a22_f * (x**237) + 
            L0x20019a24_f * (x**238) + L0x20019a26_f * (x**239) + 
            L0x20019a28_f * (x**240) + L0x20019a2a_f * (x**241) + 
            L0x20019a2c_f * (x**242) + L0x20019a2e_f * (x**243) + 
            L0x20019a30_f * (x**244) + L0x20019a32_f * (x**245) + 
            L0x20019a34_f * (x**246) + L0x20019a36_f * (x**247) + 
            L0x20019a38_f * (x**248) + L0x20019a3a_f * (x**249) + 
            L0x20019a3c_f * (x**250) + L0x20019a3e_f * (x**251) + 
            L0x20019a40_f * (x**252) + L0x20019a42_f * (x**253) + 
            L0x20019a44_f * (x**254) + L0x20019a46_f * (x**255)
          )
          [25570049, x**4 - 4363503],
    (* inp_poly_15 *)
    eqmod (2**32) * (inp_poly_15 * inp_poly_15)
          (
            L0x20019848_f * (x**0) + L0x2001984a_f * (x**1) + 
            L0x2001984c_f * (x**2) + L0x2001984e_f * (x**3) + 
            L0x20019850_f * (x**4) + L0x20019852_f * (x**5) + 
            L0x20019854_f * (x**6) + L0x20019856_f * (x**7) + 
            L0x20019858_f * (x**8) + L0x2001985a_f * (x**9) + 
            L0x2001985c_f * (x**10) + L0x2001985e_f * (x**11) + 
            L0x20019860_f * (x**12) + L0x20019862_f * (x**13) + 
            L0x20019864_f * (x**14) + L0x20019866_f * (x**15) + 
            L0x20019868_f * (x**16) + L0x2001986a_f * (x**17) + 
            L0x2001986c_f * (x**18) + L0x2001986e_f * (x**19) + 
            L0x20019870_f * (x**20) + L0x20019872_f * (x**21) + 
            L0x20019874_f * (x**22) + L0x20019876_f * (x**23) + 
            L0x20019878_f * (x**24) + L0x2001987a_f * (x**25) + 
            L0x2001987c_f * (x**26) + L0x2001987e_f * (x**27) + 
            L0x20019880_f * (x**28) + L0x20019882_f * (x**29) + 
            L0x20019884_f * (x**30) + L0x20019886_f * (x**31) + 
            L0x20019888_f * (x**32) + L0x2001988a_f * (x**33) + 
            L0x2001988c_f * (x**34) + L0x2001988e_f * (x**35) + 
            L0x20019890_f * (x**36) + L0x20019892_f * (x**37) + 
            L0x20019894_f * (x**38) + L0x20019896_f * (x**39) + 
            L0x20019898_f * (x**40) + L0x2001989a_f * (x**41) + 
            L0x2001989c_f * (x**42) + L0x2001989e_f * (x**43) + 
            L0x200198a0_f * (x**44) + L0x200198a2_f * (x**45) + 
            L0x200198a4_f * (x**46) + L0x200198a6_f * (x**47) + 
            L0x200198a8_f * (x**48) + L0x200198aa_f * (x**49) + 
            L0x200198ac_f * (x**50) + L0x200198ae_f * (x**51) + 
            L0x200198b0_f * (x**52) + L0x200198b2_f * (x**53) + 
            L0x200198b4_f * (x**54) + L0x200198b6_f * (x**55) + 
            L0x200198b8_f * (x**56) + L0x200198ba_f * (x**57) + 
            L0x200198bc_f * (x**58) + L0x200198be_f * (x**59) + 
            L0x200198c0_f * (x**60) + L0x200198c2_f * (x**61) + 
            L0x200198c4_f * (x**62) + L0x200198c6_f * (x**63) + 
            L0x200198c8_f * (x**64) + L0x200198ca_f * (x**65) + 
            L0x200198cc_f * (x**66) + L0x200198ce_f * (x**67) + 
            L0x200198d0_f * (x**68) + L0x200198d2_f * (x**69) + 
            L0x200198d4_f * (x**70) + L0x200198d6_f * (x**71) + 
            L0x200198d8_f * (x**72) + L0x200198da_f * (x**73) + 
            L0x200198dc_f * (x**74) + L0x200198de_f * (x**75) + 
            L0x200198e0_f * (x**76) + L0x200198e2_f * (x**77) + 
            L0x200198e4_f * (x**78) + L0x200198e6_f * (x**79) + 
            L0x200198e8_f * (x**80) + L0x200198ea_f * (x**81) + 
            L0x200198ec_f * (x**82) + L0x200198ee_f * (x**83) + 
            L0x200198f0_f * (x**84) + L0x200198f2_f * (x**85) + 
            L0x200198f4_f * (x**86) + L0x200198f6_f * (x**87) + 
            L0x200198f8_f * (x**88) + L0x200198fa_f * (x**89) + 
            L0x200198fc_f * (x**90) + L0x200198fe_f * (x**91) + 
            L0x20019900_f * (x**92) + L0x20019902_f * (x**93) + 
            L0x20019904_f * (x**94) + L0x20019906_f * (x**95) + 
            L0x20019908_f * (x**96) + L0x2001990a_f * (x**97) + 
            L0x2001990c_f * (x**98) + L0x2001990e_f * (x**99) + 
            L0x20019910_f * (x**100) + L0x20019912_f * (x**101) + 
            L0x20019914_f * (x**102) + L0x20019916_f * (x**103) + 
            L0x20019918_f * (x**104) + L0x2001991a_f * (x**105) + 
            L0x2001991c_f * (x**106) + L0x2001991e_f * (x**107) + 
            L0x20019920_f * (x**108) + L0x20019922_f * (x**109) + 
            L0x20019924_f * (x**110) + L0x20019926_f * (x**111) + 
            L0x20019928_f * (x**112) + L0x2001992a_f * (x**113) + 
            L0x2001992c_f * (x**114) + L0x2001992e_f * (x**115) + 
            L0x20019930_f * (x**116) + L0x20019932_f * (x**117) + 
            L0x20019934_f * (x**118) + L0x20019936_f * (x**119) + 
            L0x20019938_f * (x**120) + L0x2001993a_f * (x**121) + 
            L0x2001993c_f * (x**122) + L0x2001993e_f * (x**123) + 
            L0x20019940_f * (x**124) + L0x20019942_f * (x**125) + 
            L0x20019944_f * (x**126) + L0x20019946_f * (x**127) + 
            L0x20019948_f * (x**128) + L0x2001994a_f * (x**129) + 
            L0x2001994c_f * (x**130) + L0x2001994e_f * (x**131) + 
            L0x20019950_f * (x**132) + L0x20019952_f * (x**133) + 
            L0x20019954_f * (x**134) + L0x20019956_f * (x**135) + 
            L0x20019958_f * (x**136) + L0x2001995a_f * (x**137) + 
            L0x2001995c_f * (x**138) + L0x2001995e_f * (x**139) + 
            L0x20019960_f * (x**140) + L0x20019962_f * (x**141) + 
            L0x20019964_f * (x**142) + L0x20019966_f * (x**143) + 
            L0x20019968_f * (x**144) + L0x2001996a_f * (x**145) + 
            L0x2001996c_f * (x**146) + L0x2001996e_f * (x**147) + 
            L0x20019970_f * (x**148) + L0x20019972_f * (x**149) + 
            L0x20019974_f * (x**150) + L0x20019976_f * (x**151) + 
            L0x20019978_f * (x**152) + L0x2001997a_f * (x**153) + 
            L0x2001997c_f * (x**154) + L0x2001997e_f * (x**155) + 
            L0x20019980_f * (x**156) + L0x20019982_f * (x**157) + 
            L0x20019984_f * (x**158) + L0x20019986_f * (x**159) + 
            L0x20019988_f * (x**160) + L0x2001998a_f * (x**161) + 
            L0x2001998c_f * (x**162) + L0x2001998e_f * (x**163) + 
            L0x20019990_f * (x**164) + L0x20019992_f * (x**165) + 
            L0x20019994_f * (x**166) + L0x20019996_f * (x**167) + 
            L0x20019998_f * (x**168) + L0x2001999a_f * (x**169) + 
            L0x2001999c_f * (x**170) + L0x2001999e_f * (x**171) + 
            L0x200199a0_f * (x**172) + L0x200199a2_f * (x**173) + 
            L0x200199a4_f * (x**174) + L0x200199a6_f * (x**175) + 
            L0x200199a8_f * (x**176) + L0x200199aa_f * (x**177) + 
            L0x200199ac_f * (x**178) + L0x200199ae_f * (x**179) + 
            L0x200199b0_f * (x**180) + L0x200199b2_f * (x**181) + 
            L0x200199b4_f * (x**182) + L0x200199b6_f * (x**183) + 
            L0x200199b8_f * (x**184) + L0x200199ba_f * (x**185) + 
            L0x200199bc_f * (x**186) + L0x200199be_f * (x**187) + 
            L0x200199c0_f * (x**188) + L0x200199c2_f * (x**189) + 
            L0x200199c4_f * (x**190) + L0x200199c6_f * (x**191) + 
            L0x200199c8_f * (x**192) + L0x200199ca_f * (x**193) + 
            L0x200199cc_f * (x**194) + L0x200199ce_f * (x**195) + 
            L0x200199d0_f * (x**196) + L0x200199d2_f * (x**197) + 
            L0x200199d4_f * (x**198) + L0x200199d6_f * (x**199) + 
            L0x200199d8_f * (x**200) + L0x200199da_f * (x**201) + 
            L0x200199dc_f * (x**202) + L0x200199de_f * (x**203) + 
            L0x200199e0_f * (x**204) + L0x200199e2_f * (x**205) + 
            L0x200199e4_f * (x**206) + L0x200199e6_f * (x**207) + 
            L0x200199e8_f * (x**208) + L0x200199ea_f * (x**209) + 
            L0x200199ec_f * (x**210) + L0x200199ee_f * (x**211) + 
            L0x200199f0_f * (x**212) + L0x200199f2_f * (x**213) + 
            L0x200199f4_f * (x**214) + L0x200199f6_f * (x**215) + 
            L0x200199f8_f * (x**216) + L0x200199fa_f * (x**217) + 
            L0x200199fc_f * (x**218) + L0x200199fe_f * (x**219) + 
            L0x20019a00_f * (x**220) + L0x20019a02_f * (x**221) + 
            L0x20019a04_f * (x**222) + L0x20019a06_f * (x**223) + 
            L0x20019a08_f * (x**224) + L0x20019a0a_f * (x**225) + 
            L0x20019a0c_f * (x**226) + L0x20019a0e_f * (x**227) + 
            L0x20019a10_f * (x**228) + L0x20019a12_f * (x**229) + 
            L0x20019a14_f * (x**230) + L0x20019a16_f * (x**231) + 
            L0x20019a18_f * (x**232) + L0x20019a1a_f * (x**233) + 
            L0x20019a1c_f * (x**234) + L0x20019a1e_f * (x**235) + 
            L0x20019a20_f * (x**236) + L0x20019a22_f * (x**237) + 
            L0x20019a24_f * (x**238) + L0x20019a26_f * (x**239) + 
            L0x20019a28_f * (x**240) + L0x20019a2a_f * (x**241) + 
            L0x20019a2c_f * (x**242) + L0x20019a2e_f * (x**243) + 
            L0x20019a30_f * (x**244) + L0x20019a32_f * (x**245) + 
            L0x20019a34_f * (x**246) + L0x20019a36_f * (x**247) + 
            L0x20019a38_f * (x**248) + L0x20019a3a_f * (x**249) + 
            L0x20019a3c_f * (x**250) + L0x20019a3e_f * (x**251) + 
            L0x20019a40_f * (x**252) + L0x20019a42_f * (x**253) + 
            L0x20019a44_f * (x**254) + L0x20019a46_f * (x**255)
          )
          [25570049, x**4 - 21206546],
    (* inp_poly_16 *)
    eqmod (2**32) * (inp_poly_16 * inp_poly_16)
          (
            L0x20019848_f * (x**0) + L0x2001984a_f * (x**1) + 
            L0x2001984c_f * (x**2) + L0x2001984e_f * (x**3) + 
            L0x20019850_f * (x**4) + L0x20019852_f * (x**5) + 
            L0x20019854_f * (x**6) + L0x20019856_f * (x**7) + 
            L0x20019858_f * (x**8) + L0x2001985a_f * (x**9) + 
            L0x2001985c_f * (x**10) + L0x2001985e_f * (x**11) + 
            L0x20019860_f * (x**12) + L0x20019862_f * (x**13) + 
            L0x20019864_f * (x**14) + L0x20019866_f * (x**15) + 
            L0x20019868_f * (x**16) + L0x2001986a_f * (x**17) + 
            L0x2001986c_f * (x**18) + L0x2001986e_f * (x**19) + 
            L0x20019870_f * (x**20) + L0x20019872_f * (x**21) + 
            L0x20019874_f * (x**22) + L0x20019876_f * (x**23) + 
            L0x20019878_f * (x**24) + L0x2001987a_f * (x**25) + 
            L0x2001987c_f * (x**26) + L0x2001987e_f * (x**27) + 
            L0x20019880_f * (x**28) + L0x20019882_f * (x**29) + 
            L0x20019884_f * (x**30) + L0x20019886_f * (x**31) + 
            L0x20019888_f * (x**32) + L0x2001988a_f * (x**33) + 
            L0x2001988c_f * (x**34) + L0x2001988e_f * (x**35) + 
            L0x20019890_f * (x**36) + L0x20019892_f * (x**37) + 
            L0x20019894_f * (x**38) + L0x20019896_f * (x**39) + 
            L0x20019898_f * (x**40) + L0x2001989a_f * (x**41) + 
            L0x2001989c_f * (x**42) + L0x2001989e_f * (x**43) + 
            L0x200198a0_f * (x**44) + L0x200198a2_f * (x**45) + 
            L0x200198a4_f * (x**46) + L0x200198a6_f * (x**47) + 
            L0x200198a8_f * (x**48) + L0x200198aa_f * (x**49) + 
            L0x200198ac_f * (x**50) + L0x200198ae_f * (x**51) + 
            L0x200198b0_f * (x**52) + L0x200198b2_f * (x**53) + 
            L0x200198b4_f * (x**54) + L0x200198b6_f * (x**55) + 
            L0x200198b8_f * (x**56) + L0x200198ba_f * (x**57) + 
            L0x200198bc_f * (x**58) + L0x200198be_f * (x**59) + 
            L0x200198c0_f * (x**60) + L0x200198c2_f * (x**61) + 
            L0x200198c4_f * (x**62) + L0x200198c6_f * (x**63) + 
            L0x200198c8_f * (x**64) + L0x200198ca_f * (x**65) + 
            L0x200198cc_f * (x**66) + L0x200198ce_f * (x**67) + 
            L0x200198d0_f * (x**68) + L0x200198d2_f * (x**69) + 
            L0x200198d4_f * (x**70) + L0x200198d6_f * (x**71) + 
            L0x200198d8_f * (x**72) + L0x200198da_f * (x**73) + 
            L0x200198dc_f * (x**74) + L0x200198de_f * (x**75) + 
            L0x200198e0_f * (x**76) + L0x200198e2_f * (x**77) + 
            L0x200198e4_f * (x**78) + L0x200198e6_f * (x**79) + 
            L0x200198e8_f * (x**80) + L0x200198ea_f * (x**81) + 
            L0x200198ec_f * (x**82) + L0x200198ee_f * (x**83) + 
            L0x200198f0_f * (x**84) + L0x200198f2_f * (x**85) + 
            L0x200198f4_f * (x**86) + L0x200198f6_f * (x**87) + 
            L0x200198f8_f * (x**88) + L0x200198fa_f * (x**89) + 
            L0x200198fc_f * (x**90) + L0x200198fe_f * (x**91) + 
            L0x20019900_f * (x**92) + L0x20019902_f * (x**93) + 
            L0x20019904_f * (x**94) + L0x20019906_f * (x**95) + 
            L0x20019908_f * (x**96) + L0x2001990a_f * (x**97) + 
            L0x2001990c_f * (x**98) + L0x2001990e_f * (x**99) + 
            L0x20019910_f * (x**100) + L0x20019912_f * (x**101) + 
            L0x20019914_f * (x**102) + L0x20019916_f * (x**103) + 
            L0x20019918_f * (x**104) + L0x2001991a_f * (x**105) + 
            L0x2001991c_f * (x**106) + L0x2001991e_f * (x**107) + 
            L0x20019920_f * (x**108) + L0x20019922_f * (x**109) + 
            L0x20019924_f * (x**110) + L0x20019926_f * (x**111) + 
            L0x20019928_f * (x**112) + L0x2001992a_f * (x**113) + 
            L0x2001992c_f * (x**114) + L0x2001992e_f * (x**115) + 
            L0x20019930_f * (x**116) + L0x20019932_f * (x**117) + 
            L0x20019934_f * (x**118) + L0x20019936_f * (x**119) + 
            L0x20019938_f * (x**120) + L0x2001993a_f * (x**121) + 
            L0x2001993c_f * (x**122) + L0x2001993e_f * (x**123) + 
            L0x20019940_f * (x**124) + L0x20019942_f * (x**125) + 
            L0x20019944_f * (x**126) + L0x20019946_f * (x**127) + 
            L0x20019948_f * (x**128) + L0x2001994a_f * (x**129) + 
            L0x2001994c_f * (x**130) + L0x2001994e_f * (x**131) + 
            L0x20019950_f * (x**132) + L0x20019952_f * (x**133) + 
            L0x20019954_f * (x**134) + L0x20019956_f * (x**135) + 
            L0x20019958_f * (x**136) + L0x2001995a_f * (x**137) + 
            L0x2001995c_f * (x**138) + L0x2001995e_f * (x**139) + 
            L0x20019960_f * (x**140) + L0x20019962_f * (x**141) + 
            L0x20019964_f * (x**142) + L0x20019966_f * (x**143) + 
            L0x20019968_f * (x**144) + L0x2001996a_f * (x**145) + 
            L0x2001996c_f * (x**146) + L0x2001996e_f * (x**147) + 
            L0x20019970_f * (x**148) + L0x20019972_f * (x**149) + 
            L0x20019974_f * (x**150) + L0x20019976_f * (x**151) + 
            L0x20019978_f * (x**152) + L0x2001997a_f * (x**153) + 
            L0x2001997c_f * (x**154) + L0x2001997e_f * (x**155) + 
            L0x20019980_f * (x**156) + L0x20019982_f * (x**157) + 
            L0x20019984_f * (x**158) + L0x20019986_f * (x**159) + 
            L0x20019988_f * (x**160) + L0x2001998a_f * (x**161) + 
            L0x2001998c_f * (x**162) + L0x2001998e_f * (x**163) + 
            L0x20019990_f * (x**164) + L0x20019992_f * (x**165) + 
            L0x20019994_f * (x**166) + L0x20019996_f * (x**167) + 
            L0x20019998_f * (x**168) + L0x2001999a_f * (x**169) + 
            L0x2001999c_f * (x**170) + L0x2001999e_f * (x**171) + 
            L0x200199a0_f * (x**172) + L0x200199a2_f * (x**173) + 
            L0x200199a4_f * (x**174) + L0x200199a6_f * (x**175) + 
            L0x200199a8_f * (x**176) + L0x200199aa_f * (x**177) + 
            L0x200199ac_f * (x**178) + L0x200199ae_f * (x**179) + 
            L0x200199b0_f * (x**180) + L0x200199b2_f * (x**181) + 
            L0x200199b4_f * (x**182) + L0x200199b6_f * (x**183) + 
            L0x200199b8_f * (x**184) + L0x200199ba_f * (x**185) + 
            L0x200199bc_f * (x**186) + L0x200199be_f * (x**187) + 
            L0x200199c0_f * (x**188) + L0x200199c2_f * (x**189) + 
            L0x200199c4_f * (x**190) + L0x200199c6_f * (x**191) + 
            L0x200199c8_f * (x**192) + L0x200199ca_f * (x**193) + 
            L0x200199cc_f * (x**194) + L0x200199ce_f * (x**195) + 
            L0x200199d0_f * (x**196) + L0x200199d2_f * (x**197) + 
            L0x200199d4_f * (x**198) + L0x200199d6_f * (x**199) + 
            L0x200199d8_f * (x**200) + L0x200199da_f * (x**201) + 
            L0x200199dc_f * (x**202) + L0x200199de_f * (x**203) + 
            L0x200199e0_f * (x**204) + L0x200199e2_f * (x**205) + 
            L0x200199e4_f * (x**206) + L0x200199e6_f * (x**207) + 
            L0x200199e8_f * (x**208) + L0x200199ea_f * (x**209) + 
            L0x200199ec_f * (x**210) + L0x200199ee_f * (x**211) + 
            L0x200199f0_f * (x**212) + L0x200199f2_f * (x**213) + 
            L0x200199f4_f * (x**214) + L0x200199f6_f * (x**215) + 
            L0x200199f8_f * (x**216) + L0x200199fa_f * (x**217) + 
            L0x200199fc_f * (x**218) + L0x200199fe_f * (x**219) + 
            L0x20019a00_f * (x**220) + L0x20019a02_f * (x**221) + 
            L0x20019a04_f * (x**222) + L0x20019a06_f * (x**223) + 
            L0x20019a08_f * (x**224) + L0x20019a0a_f * (x**225) + 
            L0x20019a0c_f * (x**226) + L0x20019a0e_f * (x**227) + 
            L0x20019a10_f * (x**228) + L0x20019a12_f * (x**229) + 
            L0x20019a14_f * (x**230) + L0x20019a16_f * (x**231) + 
            L0x20019a18_f * (x**232) + L0x20019a1a_f * (x**233) + 
            L0x20019a1c_f * (x**234) + L0x20019a1e_f * (x**235) + 
            L0x20019a20_f * (x**236) + L0x20019a22_f * (x**237) + 
            L0x20019a24_f * (x**238) + L0x20019a26_f * (x**239) + 
            L0x20019a28_f * (x**240) + L0x20019a2a_f * (x**241) + 
            L0x20019a2c_f * (x**242) + L0x20019a2e_f * (x**243) + 
            L0x20019a30_f * (x**244) + L0x20019a32_f * (x**245) + 
            L0x20019a34_f * (x**246) + L0x20019a36_f * (x**247) + 
            L0x20019a38_f * (x**248) + L0x20019a3a_f * (x**249) + 
            L0x20019a3c_f * (x**250) + L0x20019a3e_f * (x**251) + 
            L0x20019a40_f * (x**252) + L0x20019a42_f * (x**253) + 
            L0x20019a44_f * (x**254) + L0x20019a46_f * (x**255)
          )
          [25570049, x**4 - 21713494],
    (* inp_poly_17 *)
    eqmod (2**32) * (inp_poly_17 * inp_poly_17)
          (
            L0x20019848_f * (x**0) + L0x2001984a_f * (x**1) + 
            L0x2001984c_f * (x**2) + L0x2001984e_f * (x**3) + 
            L0x20019850_f * (x**4) + L0x20019852_f * (x**5) + 
            L0x20019854_f * (x**6) + L0x20019856_f * (x**7) + 
            L0x20019858_f * (x**8) + L0x2001985a_f * (x**9) + 
            L0x2001985c_f * (x**10) + L0x2001985e_f * (x**11) + 
            L0x20019860_f * (x**12) + L0x20019862_f * (x**13) + 
            L0x20019864_f * (x**14) + L0x20019866_f * (x**15) + 
            L0x20019868_f * (x**16) + L0x2001986a_f * (x**17) + 
            L0x2001986c_f * (x**18) + L0x2001986e_f * (x**19) + 
            L0x20019870_f * (x**20) + L0x20019872_f * (x**21) + 
            L0x20019874_f * (x**22) + L0x20019876_f * (x**23) + 
            L0x20019878_f * (x**24) + L0x2001987a_f * (x**25) + 
            L0x2001987c_f * (x**26) + L0x2001987e_f * (x**27) + 
            L0x20019880_f * (x**28) + L0x20019882_f * (x**29) + 
            L0x20019884_f * (x**30) + L0x20019886_f * (x**31) + 
            L0x20019888_f * (x**32) + L0x2001988a_f * (x**33) + 
            L0x2001988c_f * (x**34) + L0x2001988e_f * (x**35) + 
            L0x20019890_f * (x**36) + L0x20019892_f * (x**37) + 
            L0x20019894_f * (x**38) + L0x20019896_f * (x**39) + 
            L0x20019898_f * (x**40) + L0x2001989a_f * (x**41) + 
            L0x2001989c_f * (x**42) + L0x2001989e_f * (x**43) + 
            L0x200198a0_f * (x**44) + L0x200198a2_f * (x**45) + 
            L0x200198a4_f * (x**46) + L0x200198a6_f * (x**47) + 
            L0x200198a8_f * (x**48) + L0x200198aa_f * (x**49) + 
            L0x200198ac_f * (x**50) + L0x200198ae_f * (x**51) + 
            L0x200198b0_f * (x**52) + L0x200198b2_f * (x**53) + 
            L0x200198b4_f * (x**54) + L0x200198b6_f * (x**55) + 
            L0x200198b8_f * (x**56) + L0x200198ba_f * (x**57) + 
            L0x200198bc_f * (x**58) + L0x200198be_f * (x**59) + 
            L0x200198c0_f * (x**60) + L0x200198c2_f * (x**61) + 
            L0x200198c4_f * (x**62) + L0x200198c6_f * (x**63) + 
            L0x200198c8_f * (x**64) + L0x200198ca_f * (x**65) + 
            L0x200198cc_f * (x**66) + L0x200198ce_f * (x**67) + 
            L0x200198d0_f * (x**68) + L0x200198d2_f * (x**69) + 
            L0x200198d4_f * (x**70) + L0x200198d6_f * (x**71) + 
            L0x200198d8_f * (x**72) + L0x200198da_f * (x**73) + 
            L0x200198dc_f * (x**74) + L0x200198de_f * (x**75) + 
            L0x200198e0_f * (x**76) + L0x200198e2_f * (x**77) + 
            L0x200198e4_f * (x**78) + L0x200198e6_f * (x**79) + 
            L0x200198e8_f * (x**80) + L0x200198ea_f * (x**81) + 
            L0x200198ec_f * (x**82) + L0x200198ee_f * (x**83) + 
            L0x200198f0_f * (x**84) + L0x200198f2_f * (x**85) + 
            L0x200198f4_f * (x**86) + L0x200198f6_f * (x**87) + 
            L0x200198f8_f * (x**88) + L0x200198fa_f * (x**89) + 
            L0x200198fc_f * (x**90) + L0x200198fe_f * (x**91) + 
            L0x20019900_f * (x**92) + L0x20019902_f * (x**93) + 
            L0x20019904_f * (x**94) + L0x20019906_f * (x**95) + 
            L0x20019908_f * (x**96) + L0x2001990a_f * (x**97) + 
            L0x2001990c_f * (x**98) + L0x2001990e_f * (x**99) + 
            L0x20019910_f * (x**100) + L0x20019912_f * (x**101) + 
            L0x20019914_f * (x**102) + L0x20019916_f * (x**103) + 
            L0x20019918_f * (x**104) + L0x2001991a_f * (x**105) + 
            L0x2001991c_f * (x**106) + L0x2001991e_f * (x**107) + 
            L0x20019920_f * (x**108) + L0x20019922_f * (x**109) + 
            L0x20019924_f * (x**110) + L0x20019926_f * (x**111) + 
            L0x20019928_f * (x**112) + L0x2001992a_f * (x**113) + 
            L0x2001992c_f * (x**114) + L0x2001992e_f * (x**115) + 
            L0x20019930_f * (x**116) + L0x20019932_f * (x**117) + 
            L0x20019934_f * (x**118) + L0x20019936_f * (x**119) + 
            L0x20019938_f * (x**120) + L0x2001993a_f * (x**121) + 
            L0x2001993c_f * (x**122) + L0x2001993e_f * (x**123) + 
            L0x20019940_f * (x**124) + L0x20019942_f * (x**125) + 
            L0x20019944_f * (x**126) + L0x20019946_f * (x**127) + 
            L0x20019948_f * (x**128) + L0x2001994a_f * (x**129) + 
            L0x2001994c_f * (x**130) + L0x2001994e_f * (x**131) + 
            L0x20019950_f * (x**132) + L0x20019952_f * (x**133) + 
            L0x20019954_f * (x**134) + L0x20019956_f * (x**135) + 
            L0x20019958_f * (x**136) + L0x2001995a_f * (x**137) + 
            L0x2001995c_f * (x**138) + L0x2001995e_f * (x**139) + 
            L0x20019960_f * (x**140) + L0x20019962_f * (x**141) + 
            L0x20019964_f * (x**142) + L0x20019966_f * (x**143) + 
            L0x20019968_f * (x**144) + L0x2001996a_f * (x**145) + 
            L0x2001996c_f * (x**146) + L0x2001996e_f * (x**147) + 
            L0x20019970_f * (x**148) + L0x20019972_f * (x**149) + 
            L0x20019974_f * (x**150) + L0x20019976_f * (x**151) + 
            L0x20019978_f * (x**152) + L0x2001997a_f * (x**153) + 
            L0x2001997c_f * (x**154) + L0x2001997e_f * (x**155) + 
            L0x20019980_f * (x**156) + L0x20019982_f * (x**157) + 
            L0x20019984_f * (x**158) + L0x20019986_f * (x**159) + 
            L0x20019988_f * (x**160) + L0x2001998a_f * (x**161) + 
            L0x2001998c_f * (x**162) + L0x2001998e_f * (x**163) + 
            L0x20019990_f * (x**164) + L0x20019992_f * (x**165) + 
            L0x20019994_f * (x**166) + L0x20019996_f * (x**167) + 
            L0x20019998_f * (x**168) + L0x2001999a_f * (x**169) + 
            L0x2001999c_f * (x**170) + L0x2001999e_f * (x**171) + 
            L0x200199a0_f * (x**172) + L0x200199a2_f * (x**173) + 
            L0x200199a4_f * (x**174) + L0x200199a6_f * (x**175) + 
            L0x200199a8_f * (x**176) + L0x200199aa_f * (x**177) + 
            L0x200199ac_f * (x**178) + L0x200199ae_f * (x**179) + 
            L0x200199b0_f * (x**180) + L0x200199b2_f * (x**181) + 
            L0x200199b4_f * (x**182) + L0x200199b6_f * (x**183) + 
            L0x200199b8_f * (x**184) + L0x200199ba_f * (x**185) + 
            L0x200199bc_f * (x**186) + L0x200199be_f * (x**187) + 
            L0x200199c0_f * (x**188) + L0x200199c2_f * (x**189) + 
            L0x200199c4_f * (x**190) + L0x200199c6_f * (x**191) + 
            L0x200199c8_f * (x**192) + L0x200199ca_f * (x**193) + 
            L0x200199cc_f * (x**194) + L0x200199ce_f * (x**195) + 
            L0x200199d0_f * (x**196) + L0x200199d2_f * (x**197) + 
            L0x200199d4_f * (x**198) + L0x200199d6_f * (x**199) + 
            L0x200199d8_f * (x**200) + L0x200199da_f * (x**201) + 
            L0x200199dc_f * (x**202) + L0x200199de_f * (x**203) + 
            L0x200199e0_f * (x**204) + L0x200199e2_f * (x**205) + 
            L0x200199e4_f * (x**206) + L0x200199e6_f * (x**207) + 
            L0x200199e8_f * (x**208) + L0x200199ea_f * (x**209) + 
            L0x200199ec_f * (x**210) + L0x200199ee_f * (x**211) + 
            L0x200199f0_f * (x**212) + L0x200199f2_f * (x**213) + 
            L0x200199f4_f * (x**214) + L0x200199f6_f * (x**215) + 
            L0x200199f8_f * (x**216) + L0x200199fa_f * (x**217) + 
            L0x200199fc_f * (x**218) + L0x200199fe_f * (x**219) + 
            L0x20019a00_f * (x**220) + L0x20019a02_f * (x**221) + 
            L0x20019a04_f * (x**222) + L0x20019a06_f * (x**223) + 
            L0x20019a08_f * (x**224) + L0x20019a0a_f * (x**225) + 
            L0x20019a0c_f * (x**226) + L0x20019a0e_f * (x**227) + 
            L0x20019a10_f * (x**228) + L0x20019a12_f * (x**229) + 
            L0x20019a14_f * (x**230) + L0x20019a16_f * (x**231) + 
            L0x20019a18_f * (x**232) + L0x20019a1a_f * (x**233) + 
            L0x20019a1c_f * (x**234) + L0x20019a1e_f * (x**235) + 
            L0x20019a20_f * (x**236) + L0x20019a22_f * (x**237) + 
            L0x20019a24_f * (x**238) + L0x20019a26_f * (x**239) + 
            L0x20019a28_f * (x**240) + L0x20019a2a_f * (x**241) + 
            L0x20019a2c_f * (x**242) + L0x20019a2e_f * (x**243) + 
            L0x20019a30_f * (x**244) + L0x20019a32_f * (x**245) + 
            L0x20019a34_f * (x**246) + L0x20019a36_f * (x**247) + 
            L0x20019a38_f * (x**248) + L0x20019a3a_f * (x**249) + 
            L0x20019a3c_f * (x**250) + L0x20019a3e_f * (x**251) + 
            L0x20019a40_f * (x**252) + L0x20019a42_f * (x**253) + 
            L0x20019a44_f * (x**254) + L0x20019a46_f * (x**255)
          )
          [25570049, x**4 - 3856555],
    (* inp_poly_18 *)
    eqmod (2**32) * (inp_poly_18 * inp_poly_18)
          (
            L0x20019848_f * (x**0) + L0x2001984a_f * (x**1) + 
            L0x2001984c_f * (x**2) + L0x2001984e_f * (x**3) + 
            L0x20019850_f * (x**4) + L0x20019852_f * (x**5) + 
            L0x20019854_f * (x**6) + L0x20019856_f * (x**7) + 
            L0x20019858_f * (x**8) + L0x2001985a_f * (x**9) + 
            L0x2001985c_f * (x**10) + L0x2001985e_f * (x**11) + 
            L0x20019860_f * (x**12) + L0x20019862_f * (x**13) + 
            L0x20019864_f * (x**14) + L0x20019866_f * (x**15) + 
            L0x20019868_f * (x**16) + L0x2001986a_f * (x**17) + 
            L0x2001986c_f * (x**18) + L0x2001986e_f * (x**19) + 
            L0x20019870_f * (x**20) + L0x20019872_f * (x**21) + 
            L0x20019874_f * (x**22) + L0x20019876_f * (x**23) + 
            L0x20019878_f * (x**24) + L0x2001987a_f * (x**25) + 
            L0x2001987c_f * (x**26) + L0x2001987e_f * (x**27) + 
            L0x20019880_f * (x**28) + L0x20019882_f * (x**29) + 
            L0x20019884_f * (x**30) + L0x20019886_f * (x**31) + 
            L0x20019888_f * (x**32) + L0x2001988a_f * (x**33) + 
            L0x2001988c_f * (x**34) + L0x2001988e_f * (x**35) + 
            L0x20019890_f * (x**36) + L0x20019892_f * (x**37) + 
            L0x20019894_f * (x**38) + L0x20019896_f * (x**39) + 
            L0x20019898_f * (x**40) + L0x2001989a_f * (x**41) + 
            L0x2001989c_f * (x**42) + L0x2001989e_f * (x**43) + 
            L0x200198a0_f * (x**44) + L0x200198a2_f * (x**45) + 
            L0x200198a4_f * (x**46) + L0x200198a6_f * (x**47) + 
            L0x200198a8_f * (x**48) + L0x200198aa_f * (x**49) + 
            L0x200198ac_f * (x**50) + L0x200198ae_f * (x**51) + 
            L0x200198b0_f * (x**52) + L0x200198b2_f * (x**53) + 
            L0x200198b4_f * (x**54) + L0x200198b6_f * (x**55) + 
            L0x200198b8_f * (x**56) + L0x200198ba_f * (x**57) + 
            L0x200198bc_f * (x**58) + L0x200198be_f * (x**59) + 
            L0x200198c0_f * (x**60) + L0x200198c2_f * (x**61) + 
            L0x200198c4_f * (x**62) + L0x200198c6_f * (x**63) + 
            L0x200198c8_f * (x**64) + L0x200198ca_f * (x**65) + 
            L0x200198cc_f * (x**66) + L0x200198ce_f * (x**67) + 
            L0x200198d0_f * (x**68) + L0x200198d2_f * (x**69) + 
            L0x200198d4_f * (x**70) + L0x200198d6_f * (x**71) + 
            L0x200198d8_f * (x**72) + L0x200198da_f * (x**73) + 
            L0x200198dc_f * (x**74) + L0x200198de_f * (x**75) + 
            L0x200198e0_f * (x**76) + L0x200198e2_f * (x**77) + 
            L0x200198e4_f * (x**78) + L0x200198e6_f * (x**79) + 
            L0x200198e8_f * (x**80) + L0x200198ea_f * (x**81) + 
            L0x200198ec_f * (x**82) + L0x200198ee_f * (x**83) + 
            L0x200198f0_f * (x**84) + L0x200198f2_f * (x**85) + 
            L0x200198f4_f * (x**86) + L0x200198f6_f * (x**87) + 
            L0x200198f8_f * (x**88) + L0x200198fa_f * (x**89) + 
            L0x200198fc_f * (x**90) + L0x200198fe_f * (x**91) + 
            L0x20019900_f * (x**92) + L0x20019902_f * (x**93) + 
            L0x20019904_f * (x**94) + L0x20019906_f * (x**95) + 
            L0x20019908_f * (x**96) + L0x2001990a_f * (x**97) + 
            L0x2001990c_f * (x**98) + L0x2001990e_f * (x**99) + 
            L0x20019910_f * (x**100) + L0x20019912_f * (x**101) + 
            L0x20019914_f * (x**102) + L0x20019916_f * (x**103) + 
            L0x20019918_f * (x**104) + L0x2001991a_f * (x**105) + 
            L0x2001991c_f * (x**106) + L0x2001991e_f * (x**107) + 
            L0x20019920_f * (x**108) + L0x20019922_f * (x**109) + 
            L0x20019924_f * (x**110) + L0x20019926_f * (x**111) + 
            L0x20019928_f * (x**112) + L0x2001992a_f * (x**113) + 
            L0x2001992c_f * (x**114) + L0x2001992e_f * (x**115) + 
            L0x20019930_f * (x**116) + L0x20019932_f * (x**117) + 
            L0x20019934_f * (x**118) + L0x20019936_f * (x**119) + 
            L0x20019938_f * (x**120) + L0x2001993a_f * (x**121) + 
            L0x2001993c_f * (x**122) + L0x2001993e_f * (x**123) + 
            L0x20019940_f * (x**124) + L0x20019942_f * (x**125) + 
            L0x20019944_f * (x**126) + L0x20019946_f * (x**127) + 
            L0x20019948_f * (x**128) + L0x2001994a_f * (x**129) + 
            L0x2001994c_f * (x**130) + L0x2001994e_f * (x**131) + 
            L0x20019950_f * (x**132) + L0x20019952_f * (x**133) + 
            L0x20019954_f * (x**134) + L0x20019956_f * (x**135) + 
            L0x20019958_f * (x**136) + L0x2001995a_f * (x**137) + 
            L0x2001995c_f * (x**138) + L0x2001995e_f * (x**139) + 
            L0x20019960_f * (x**140) + L0x20019962_f * (x**141) + 
            L0x20019964_f * (x**142) + L0x20019966_f * (x**143) + 
            L0x20019968_f * (x**144) + L0x2001996a_f * (x**145) + 
            L0x2001996c_f * (x**146) + L0x2001996e_f * (x**147) + 
            L0x20019970_f * (x**148) + L0x20019972_f * (x**149) + 
            L0x20019974_f * (x**150) + L0x20019976_f * (x**151) + 
            L0x20019978_f * (x**152) + L0x2001997a_f * (x**153) + 
            L0x2001997c_f * (x**154) + L0x2001997e_f * (x**155) + 
            L0x20019980_f * (x**156) + L0x20019982_f * (x**157) + 
            L0x20019984_f * (x**158) + L0x20019986_f * (x**159) + 
            L0x20019988_f * (x**160) + L0x2001998a_f * (x**161) + 
            L0x2001998c_f * (x**162) + L0x2001998e_f * (x**163) + 
            L0x20019990_f * (x**164) + L0x20019992_f * (x**165) + 
            L0x20019994_f * (x**166) + L0x20019996_f * (x**167) + 
            L0x20019998_f * (x**168) + L0x2001999a_f * (x**169) + 
            L0x2001999c_f * (x**170) + L0x2001999e_f * (x**171) + 
            L0x200199a0_f * (x**172) + L0x200199a2_f * (x**173) + 
            L0x200199a4_f * (x**174) + L0x200199a6_f * (x**175) + 
            L0x200199a8_f * (x**176) + L0x200199aa_f * (x**177) + 
            L0x200199ac_f * (x**178) + L0x200199ae_f * (x**179) + 
            L0x200199b0_f * (x**180) + L0x200199b2_f * (x**181) + 
            L0x200199b4_f * (x**182) + L0x200199b6_f * (x**183) + 
            L0x200199b8_f * (x**184) + L0x200199ba_f * (x**185) + 
            L0x200199bc_f * (x**186) + L0x200199be_f * (x**187) + 
            L0x200199c0_f * (x**188) + L0x200199c2_f * (x**189) + 
            L0x200199c4_f * (x**190) + L0x200199c6_f * (x**191) + 
            L0x200199c8_f * (x**192) + L0x200199ca_f * (x**193) + 
            L0x200199cc_f * (x**194) + L0x200199ce_f * (x**195) + 
            L0x200199d0_f * (x**196) + L0x200199d2_f * (x**197) + 
            L0x200199d4_f * (x**198) + L0x200199d6_f * (x**199) + 
            L0x200199d8_f * (x**200) + L0x200199da_f * (x**201) + 
            L0x200199dc_f * (x**202) + L0x200199de_f * (x**203) + 
            L0x200199e0_f * (x**204) + L0x200199e2_f * (x**205) + 
            L0x200199e4_f * (x**206) + L0x200199e6_f * (x**207) + 
            L0x200199e8_f * (x**208) + L0x200199ea_f * (x**209) + 
            L0x200199ec_f * (x**210) + L0x200199ee_f * (x**211) + 
            L0x200199f0_f * (x**212) + L0x200199f2_f * (x**213) + 
            L0x200199f4_f * (x**214) + L0x200199f6_f * (x**215) + 
            L0x200199f8_f * (x**216) + L0x200199fa_f * (x**217) + 
            L0x200199fc_f * (x**218) + L0x200199fe_f * (x**219) + 
            L0x20019a00_f * (x**220) + L0x20019a02_f * (x**221) + 
            L0x20019a04_f * (x**222) + L0x20019a06_f * (x**223) + 
            L0x20019a08_f * (x**224) + L0x20019a0a_f * (x**225) + 
            L0x20019a0c_f * (x**226) + L0x20019a0e_f * (x**227) + 
            L0x20019a10_f * (x**228) + L0x20019a12_f * (x**229) + 
            L0x20019a14_f * (x**230) + L0x20019a16_f * (x**231) + 
            L0x20019a18_f * (x**232) + L0x20019a1a_f * (x**233) + 
            L0x20019a1c_f * (x**234) + L0x20019a1e_f * (x**235) + 
            L0x20019a20_f * (x**236) + L0x20019a22_f * (x**237) + 
            L0x20019a24_f * (x**238) + L0x20019a26_f * (x**239) + 
            L0x20019a28_f * (x**240) + L0x20019a2a_f * (x**241) + 
            L0x20019a2c_f * (x**242) + L0x20019a2e_f * (x**243) + 
            L0x20019a30_f * (x**244) + L0x20019a32_f * (x**245) + 
            L0x20019a34_f * (x**246) + L0x20019a36_f * (x**247) + 
            L0x20019a38_f * (x**248) + L0x20019a3a_f * (x**249) + 
            L0x20019a3c_f * (x**250) + L0x20019a3e_f * (x**251) + 
            L0x20019a40_f * (x**252) + L0x20019a42_f * (x**253) + 
            L0x20019a44_f * (x**254) + L0x20019a46_f * (x**255)
          )
          [25570049, x**4 - 23159929],
    (* inp_poly_19 *)
    eqmod (2**32) * (inp_poly_19 * inp_poly_19)
          (
            L0x20019848_f * (x**0) + L0x2001984a_f * (x**1) + 
            L0x2001984c_f * (x**2) + L0x2001984e_f * (x**3) + 
            L0x20019850_f * (x**4) + L0x20019852_f * (x**5) + 
            L0x20019854_f * (x**6) + L0x20019856_f * (x**7) + 
            L0x20019858_f * (x**8) + L0x2001985a_f * (x**9) + 
            L0x2001985c_f * (x**10) + L0x2001985e_f * (x**11) + 
            L0x20019860_f * (x**12) + L0x20019862_f * (x**13) + 
            L0x20019864_f * (x**14) + L0x20019866_f * (x**15) + 
            L0x20019868_f * (x**16) + L0x2001986a_f * (x**17) + 
            L0x2001986c_f * (x**18) + L0x2001986e_f * (x**19) + 
            L0x20019870_f * (x**20) + L0x20019872_f * (x**21) + 
            L0x20019874_f * (x**22) + L0x20019876_f * (x**23) + 
            L0x20019878_f * (x**24) + L0x2001987a_f * (x**25) + 
            L0x2001987c_f * (x**26) + L0x2001987e_f * (x**27) + 
            L0x20019880_f * (x**28) + L0x20019882_f * (x**29) + 
            L0x20019884_f * (x**30) + L0x20019886_f * (x**31) + 
            L0x20019888_f * (x**32) + L0x2001988a_f * (x**33) + 
            L0x2001988c_f * (x**34) + L0x2001988e_f * (x**35) + 
            L0x20019890_f * (x**36) + L0x20019892_f * (x**37) + 
            L0x20019894_f * (x**38) + L0x20019896_f * (x**39) + 
            L0x20019898_f * (x**40) + L0x2001989a_f * (x**41) + 
            L0x2001989c_f * (x**42) + L0x2001989e_f * (x**43) + 
            L0x200198a0_f * (x**44) + L0x200198a2_f * (x**45) + 
            L0x200198a4_f * (x**46) + L0x200198a6_f * (x**47) + 
            L0x200198a8_f * (x**48) + L0x200198aa_f * (x**49) + 
            L0x200198ac_f * (x**50) + L0x200198ae_f * (x**51) + 
            L0x200198b0_f * (x**52) + L0x200198b2_f * (x**53) + 
            L0x200198b4_f * (x**54) + L0x200198b6_f * (x**55) + 
            L0x200198b8_f * (x**56) + L0x200198ba_f * (x**57) + 
            L0x200198bc_f * (x**58) + L0x200198be_f * (x**59) + 
            L0x200198c0_f * (x**60) + L0x200198c2_f * (x**61) + 
            L0x200198c4_f * (x**62) + L0x200198c6_f * (x**63) + 
            L0x200198c8_f * (x**64) + L0x200198ca_f * (x**65) + 
            L0x200198cc_f * (x**66) + L0x200198ce_f * (x**67) + 
            L0x200198d0_f * (x**68) + L0x200198d2_f * (x**69) + 
            L0x200198d4_f * (x**70) + L0x200198d6_f * (x**71) + 
            L0x200198d8_f * (x**72) + L0x200198da_f * (x**73) + 
            L0x200198dc_f * (x**74) + L0x200198de_f * (x**75) + 
            L0x200198e0_f * (x**76) + L0x200198e2_f * (x**77) + 
            L0x200198e4_f * (x**78) + L0x200198e6_f * (x**79) + 
            L0x200198e8_f * (x**80) + L0x200198ea_f * (x**81) + 
            L0x200198ec_f * (x**82) + L0x200198ee_f * (x**83) + 
            L0x200198f0_f * (x**84) + L0x200198f2_f * (x**85) + 
            L0x200198f4_f * (x**86) + L0x200198f6_f * (x**87) + 
            L0x200198f8_f * (x**88) + L0x200198fa_f * (x**89) + 
            L0x200198fc_f * (x**90) + L0x200198fe_f * (x**91) + 
            L0x20019900_f * (x**92) + L0x20019902_f * (x**93) + 
            L0x20019904_f * (x**94) + L0x20019906_f * (x**95) + 
            L0x20019908_f * (x**96) + L0x2001990a_f * (x**97) + 
            L0x2001990c_f * (x**98) + L0x2001990e_f * (x**99) + 
            L0x20019910_f * (x**100) + L0x20019912_f * (x**101) + 
            L0x20019914_f * (x**102) + L0x20019916_f * (x**103) + 
            L0x20019918_f * (x**104) + L0x2001991a_f * (x**105) + 
            L0x2001991c_f * (x**106) + L0x2001991e_f * (x**107) + 
            L0x20019920_f * (x**108) + L0x20019922_f * (x**109) + 
            L0x20019924_f * (x**110) + L0x20019926_f * (x**111) + 
            L0x20019928_f * (x**112) + L0x2001992a_f * (x**113) + 
            L0x2001992c_f * (x**114) + L0x2001992e_f * (x**115) + 
            L0x20019930_f * (x**116) + L0x20019932_f * (x**117) + 
            L0x20019934_f * (x**118) + L0x20019936_f * (x**119) + 
            L0x20019938_f * (x**120) + L0x2001993a_f * (x**121) + 
            L0x2001993c_f * (x**122) + L0x2001993e_f * (x**123) + 
            L0x20019940_f * (x**124) + L0x20019942_f * (x**125) + 
            L0x20019944_f * (x**126) + L0x20019946_f * (x**127) + 
            L0x20019948_f * (x**128) + L0x2001994a_f * (x**129) + 
            L0x2001994c_f * (x**130) + L0x2001994e_f * (x**131) + 
            L0x20019950_f * (x**132) + L0x20019952_f * (x**133) + 
            L0x20019954_f * (x**134) + L0x20019956_f * (x**135) + 
            L0x20019958_f * (x**136) + L0x2001995a_f * (x**137) + 
            L0x2001995c_f * (x**138) + L0x2001995e_f * (x**139) + 
            L0x20019960_f * (x**140) + L0x20019962_f * (x**141) + 
            L0x20019964_f * (x**142) + L0x20019966_f * (x**143) + 
            L0x20019968_f * (x**144) + L0x2001996a_f * (x**145) + 
            L0x2001996c_f * (x**146) + L0x2001996e_f * (x**147) + 
            L0x20019970_f * (x**148) + L0x20019972_f * (x**149) + 
            L0x20019974_f * (x**150) + L0x20019976_f * (x**151) + 
            L0x20019978_f * (x**152) + L0x2001997a_f * (x**153) + 
            L0x2001997c_f * (x**154) + L0x2001997e_f * (x**155) + 
            L0x20019980_f * (x**156) + L0x20019982_f * (x**157) + 
            L0x20019984_f * (x**158) + L0x20019986_f * (x**159) + 
            L0x20019988_f * (x**160) + L0x2001998a_f * (x**161) + 
            L0x2001998c_f * (x**162) + L0x2001998e_f * (x**163) + 
            L0x20019990_f * (x**164) + L0x20019992_f * (x**165) + 
            L0x20019994_f * (x**166) + L0x20019996_f * (x**167) + 
            L0x20019998_f * (x**168) + L0x2001999a_f * (x**169) + 
            L0x2001999c_f * (x**170) + L0x2001999e_f * (x**171) + 
            L0x200199a0_f * (x**172) + L0x200199a2_f * (x**173) + 
            L0x200199a4_f * (x**174) + L0x200199a6_f * (x**175) + 
            L0x200199a8_f * (x**176) + L0x200199aa_f * (x**177) + 
            L0x200199ac_f * (x**178) + L0x200199ae_f * (x**179) + 
            L0x200199b0_f * (x**180) + L0x200199b2_f * (x**181) + 
            L0x200199b4_f * (x**182) + L0x200199b6_f * (x**183) + 
            L0x200199b8_f * (x**184) + L0x200199ba_f * (x**185) + 
            L0x200199bc_f * (x**186) + L0x200199be_f * (x**187) + 
            L0x200199c0_f * (x**188) + L0x200199c2_f * (x**189) + 
            L0x200199c4_f * (x**190) + L0x200199c6_f * (x**191) + 
            L0x200199c8_f * (x**192) + L0x200199ca_f * (x**193) + 
            L0x200199cc_f * (x**194) + L0x200199ce_f * (x**195) + 
            L0x200199d0_f * (x**196) + L0x200199d2_f * (x**197) + 
            L0x200199d4_f * (x**198) + L0x200199d6_f * (x**199) + 
            L0x200199d8_f * (x**200) + L0x200199da_f * (x**201) + 
            L0x200199dc_f * (x**202) + L0x200199de_f * (x**203) + 
            L0x200199e0_f * (x**204) + L0x200199e2_f * (x**205) + 
            L0x200199e4_f * (x**206) + L0x200199e6_f * (x**207) + 
            L0x200199e8_f * (x**208) + L0x200199ea_f * (x**209) + 
            L0x200199ec_f * (x**210) + L0x200199ee_f * (x**211) + 
            L0x200199f0_f * (x**212) + L0x200199f2_f * (x**213) + 
            L0x200199f4_f * (x**214) + L0x200199f6_f * (x**215) + 
            L0x200199f8_f * (x**216) + L0x200199fa_f * (x**217) + 
            L0x200199fc_f * (x**218) + L0x200199fe_f * (x**219) + 
            L0x20019a00_f * (x**220) + L0x20019a02_f * (x**221) + 
            L0x20019a04_f * (x**222) + L0x20019a06_f * (x**223) + 
            L0x20019a08_f * (x**224) + L0x20019a0a_f * (x**225) + 
            L0x20019a0c_f * (x**226) + L0x20019a0e_f * (x**227) + 
            L0x20019a10_f * (x**228) + L0x20019a12_f * (x**229) + 
            L0x20019a14_f * (x**230) + L0x20019a16_f * (x**231) + 
            L0x20019a18_f * (x**232) + L0x20019a1a_f * (x**233) + 
            L0x20019a1c_f * (x**234) + L0x20019a1e_f * (x**235) + 
            L0x20019a20_f * (x**236) + L0x20019a22_f * (x**237) + 
            L0x20019a24_f * (x**238) + L0x20019a26_f * (x**239) + 
            L0x20019a28_f * (x**240) + L0x20019a2a_f * (x**241) + 
            L0x20019a2c_f * (x**242) + L0x20019a2e_f * (x**243) + 
            L0x20019a30_f * (x**244) + L0x20019a32_f * (x**245) + 
            L0x20019a34_f * (x**246) + L0x20019a36_f * (x**247) + 
            L0x20019a38_f * (x**248) + L0x20019a3a_f * (x**249) + 
            L0x20019a3c_f * (x**250) + L0x20019a3e_f * (x**251) + 
            L0x20019a40_f * (x**252) + L0x20019a42_f * (x**253) + 
            L0x20019a44_f * (x**254) + L0x20019a46_f * (x**255)
          )
          [25570049, x**4 - 2410120],
    (* inp_poly_20 *)
    eqmod (2**32) * (inp_poly_20 * inp_poly_20)
          (
            L0x20019848_f * (x**0) + L0x2001984a_f * (x**1) + 
            L0x2001984c_f * (x**2) + L0x2001984e_f * (x**3) + 
            L0x20019850_f * (x**4) + L0x20019852_f * (x**5) + 
            L0x20019854_f * (x**6) + L0x20019856_f * (x**7) + 
            L0x20019858_f * (x**8) + L0x2001985a_f * (x**9) + 
            L0x2001985c_f * (x**10) + L0x2001985e_f * (x**11) + 
            L0x20019860_f * (x**12) + L0x20019862_f * (x**13) + 
            L0x20019864_f * (x**14) + L0x20019866_f * (x**15) + 
            L0x20019868_f * (x**16) + L0x2001986a_f * (x**17) + 
            L0x2001986c_f * (x**18) + L0x2001986e_f * (x**19) + 
            L0x20019870_f * (x**20) + L0x20019872_f * (x**21) + 
            L0x20019874_f * (x**22) + L0x20019876_f * (x**23) + 
            L0x20019878_f * (x**24) + L0x2001987a_f * (x**25) + 
            L0x2001987c_f * (x**26) + L0x2001987e_f * (x**27) + 
            L0x20019880_f * (x**28) + L0x20019882_f * (x**29) + 
            L0x20019884_f * (x**30) + L0x20019886_f * (x**31) + 
            L0x20019888_f * (x**32) + L0x2001988a_f * (x**33) + 
            L0x2001988c_f * (x**34) + L0x2001988e_f * (x**35) + 
            L0x20019890_f * (x**36) + L0x20019892_f * (x**37) + 
            L0x20019894_f * (x**38) + L0x20019896_f * (x**39) + 
            L0x20019898_f * (x**40) + L0x2001989a_f * (x**41) + 
            L0x2001989c_f * (x**42) + L0x2001989e_f * (x**43) + 
            L0x200198a0_f * (x**44) + L0x200198a2_f * (x**45) + 
            L0x200198a4_f * (x**46) + L0x200198a6_f * (x**47) + 
            L0x200198a8_f * (x**48) + L0x200198aa_f * (x**49) + 
            L0x200198ac_f * (x**50) + L0x200198ae_f * (x**51) + 
            L0x200198b0_f * (x**52) + L0x200198b2_f * (x**53) + 
            L0x200198b4_f * (x**54) + L0x200198b6_f * (x**55) + 
            L0x200198b8_f * (x**56) + L0x200198ba_f * (x**57) + 
            L0x200198bc_f * (x**58) + L0x200198be_f * (x**59) + 
            L0x200198c0_f * (x**60) + L0x200198c2_f * (x**61) + 
            L0x200198c4_f * (x**62) + L0x200198c6_f * (x**63) + 
            L0x200198c8_f * (x**64) + L0x200198ca_f * (x**65) + 
            L0x200198cc_f * (x**66) + L0x200198ce_f * (x**67) + 
            L0x200198d0_f * (x**68) + L0x200198d2_f * (x**69) + 
            L0x200198d4_f * (x**70) + L0x200198d6_f * (x**71) + 
            L0x200198d8_f * (x**72) + L0x200198da_f * (x**73) + 
            L0x200198dc_f * (x**74) + L0x200198de_f * (x**75) + 
            L0x200198e0_f * (x**76) + L0x200198e2_f * (x**77) + 
            L0x200198e4_f * (x**78) + L0x200198e6_f * (x**79) + 
            L0x200198e8_f * (x**80) + L0x200198ea_f * (x**81) + 
            L0x200198ec_f * (x**82) + L0x200198ee_f * (x**83) + 
            L0x200198f0_f * (x**84) + L0x200198f2_f * (x**85) + 
            L0x200198f4_f * (x**86) + L0x200198f6_f * (x**87) + 
            L0x200198f8_f * (x**88) + L0x200198fa_f * (x**89) + 
            L0x200198fc_f * (x**90) + L0x200198fe_f * (x**91) + 
            L0x20019900_f * (x**92) + L0x20019902_f * (x**93) + 
            L0x20019904_f * (x**94) + L0x20019906_f * (x**95) + 
            L0x20019908_f * (x**96) + L0x2001990a_f * (x**97) + 
            L0x2001990c_f * (x**98) + L0x2001990e_f * (x**99) + 
            L0x20019910_f * (x**100) + L0x20019912_f * (x**101) + 
            L0x20019914_f * (x**102) + L0x20019916_f * (x**103) + 
            L0x20019918_f * (x**104) + L0x2001991a_f * (x**105) + 
            L0x2001991c_f * (x**106) + L0x2001991e_f * (x**107) + 
            L0x20019920_f * (x**108) + L0x20019922_f * (x**109) + 
            L0x20019924_f * (x**110) + L0x20019926_f * (x**111) + 
            L0x20019928_f * (x**112) + L0x2001992a_f * (x**113) + 
            L0x2001992c_f * (x**114) + L0x2001992e_f * (x**115) + 
            L0x20019930_f * (x**116) + L0x20019932_f * (x**117) + 
            L0x20019934_f * (x**118) + L0x20019936_f * (x**119) + 
            L0x20019938_f * (x**120) + L0x2001993a_f * (x**121) + 
            L0x2001993c_f * (x**122) + L0x2001993e_f * (x**123) + 
            L0x20019940_f * (x**124) + L0x20019942_f * (x**125) + 
            L0x20019944_f * (x**126) + L0x20019946_f * (x**127) + 
            L0x20019948_f * (x**128) + L0x2001994a_f * (x**129) + 
            L0x2001994c_f * (x**130) + L0x2001994e_f * (x**131) + 
            L0x20019950_f * (x**132) + L0x20019952_f * (x**133) + 
            L0x20019954_f * (x**134) + L0x20019956_f * (x**135) + 
            L0x20019958_f * (x**136) + L0x2001995a_f * (x**137) + 
            L0x2001995c_f * (x**138) + L0x2001995e_f * (x**139) + 
            L0x20019960_f * (x**140) + L0x20019962_f * (x**141) + 
            L0x20019964_f * (x**142) + L0x20019966_f * (x**143) + 
            L0x20019968_f * (x**144) + L0x2001996a_f * (x**145) + 
            L0x2001996c_f * (x**146) + L0x2001996e_f * (x**147) + 
            L0x20019970_f * (x**148) + L0x20019972_f * (x**149) + 
            L0x20019974_f * (x**150) + L0x20019976_f * (x**151) + 
            L0x20019978_f * (x**152) + L0x2001997a_f * (x**153) + 
            L0x2001997c_f * (x**154) + L0x2001997e_f * (x**155) + 
            L0x20019980_f * (x**156) + L0x20019982_f * (x**157) + 
            L0x20019984_f * (x**158) + L0x20019986_f * (x**159) + 
            L0x20019988_f * (x**160) + L0x2001998a_f * (x**161) + 
            L0x2001998c_f * (x**162) + L0x2001998e_f * (x**163) + 
            L0x20019990_f * (x**164) + L0x20019992_f * (x**165) + 
            L0x20019994_f * (x**166) + L0x20019996_f * (x**167) + 
            L0x20019998_f * (x**168) + L0x2001999a_f * (x**169) + 
            L0x2001999c_f * (x**170) + L0x2001999e_f * (x**171) + 
            L0x200199a0_f * (x**172) + L0x200199a2_f * (x**173) + 
            L0x200199a4_f * (x**174) + L0x200199a6_f * (x**175) + 
            L0x200199a8_f * (x**176) + L0x200199aa_f * (x**177) + 
            L0x200199ac_f * (x**178) + L0x200199ae_f * (x**179) + 
            L0x200199b0_f * (x**180) + L0x200199b2_f * (x**181) + 
            L0x200199b4_f * (x**182) + L0x200199b6_f * (x**183) + 
            L0x200199b8_f * (x**184) + L0x200199ba_f * (x**185) + 
            L0x200199bc_f * (x**186) + L0x200199be_f * (x**187) + 
            L0x200199c0_f * (x**188) + L0x200199c2_f * (x**189) + 
            L0x200199c4_f * (x**190) + L0x200199c6_f * (x**191) + 
            L0x200199c8_f * (x**192) + L0x200199ca_f * (x**193) + 
            L0x200199cc_f * (x**194) + L0x200199ce_f * (x**195) + 
            L0x200199d0_f * (x**196) + L0x200199d2_f * (x**197) + 
            L0x200199d4_f * (x**198) + L0x200199d6_f * (x**199) + 
            L0x200199d8_f * (x**200) + L0x200199da_f * (x**201) + 
            L0x200199dc_f * (x**202) + L0x200199de_f * (x**203) + 
            L0x200199e0_f * (x**204) + L0x200199e2_f * (x**205) + 
            L0x200199e4_f * (x**206) + L0x200199e6_f * (x**207) + 
            L0x200199e8_f * (x**208) + L0x200199ea_f * (x**209) + 
            L0x200199ec_f * (x**210) + L0x200199ee_f * (x**211) + 
            L0x200199f0_f * (x**212) + L0x200199f2_f * (x**213) + 
            L0x200199f4_f * (x**214) + L0x200199f6_f * (x**215) + 
            L0x200199f8_f * (x**216) + L0x200199fa_f * (x**217) + 
            L0x200199fc_f * (x**218) + L0x200199fe_f * (x**219) + 
            L0x20019a00_f * (x**220) + L0x20019a02_f * (x**221) + 
            L0x20019a04_f * (x**222) + L0x20019a06_f * (x**223) + 
            L0x20019a08_f * (x**224) + L0x20019a0a_f * (x**225) + 
            L0x20019a0c_f * (x**226) + L0x20019a0e_f * (x**227) + 
            L0x20019a10_f * (x**228) + L0x20019a12_f * (x**229) + 
            L0x20019a14_f * (x**230) + L0x20019a16_f * (x**231) + 
            L0x20019a18_f * (x**232) + L0x20019a1a_f * (x**233) + 
            L0x20019a1c_f * (x**234) + L0x20019a1e_f * (x**235) + 
            L0x20019a20_f * (x**236) + L0x20019a22_f * (x**237) + 
            L0x20019a24_f * (x**238) + L0x20019a26_f * (x**239) + 
            L0x20019a28_f * (x**240) + L0x20019a2a_f * (x**241) + 
            L0x20019a2c_f * (x**242) + L0x20019a2e_f * (x**243) + 
            L0x20019a30_f * (x**244) + L0x20019a32_f * (x**245) + 
            L0x20019a34_f * (x**246) + L0x20019a36_f * (x**247) + 
            L0x20019a38_f * (x**248) + L0x20019a3a_f * (x**249) + 
            L0x20019a3c_f * (x**250) + L0x20019a3e_f * (x**251) + 
            L0x20019a40_f * (x**252) + L0x20019a42_f * (x**253) + 
            L0x20019a44_f * (x**254) + L0x20019a46_f * (x**255)
          )
          [25570049, x**4 - 23569609],
    (* inp_poly_21 *)
    eqmod (2**32) * (inp_poly_21 * inp_poly_21)
          (
            L0x20019848_f * (x**0) + L0x2001984a_f * (x**1) + 
            L0x2001984c_f * (x**2) + L0x2001984e_f * (x**3) + 
            L0x20019850_f * (x**4) + L0x20019852_f * (x**5) + 
            L0x20019854_f * (x**6) + L0x20019856_f * (x**7) + 
            L0x20019858_f * (x**8) + L0x2001985a_f * (x**9) + 
            L0x2001985c_f * (x**10) + L0x2001985e_f * (x**11) + 
            L0x20019860_f * (x**12) + L0x20019862_f * (x**13) + 
            L0x20019864_f * (x**14) + L0x20019866_f * (x**15) + 
            L0x20019868_f * (x**16) + L0x2001986a_f * (x**17) + 
            L0x2001986c_f * (x**18) + L0x2001986e_f * (x**19) + 
            L0x20019870_f * (x**20) + L0x20019872_f * (x**21) + 
            L0x20019874_f * (x**22) + L0x20019876_f * (x**23) + 
            L0x20019878_f * (x**24) + L0x2001987a_f * (x**25) + 
            L0x2001987c_f * (x**26) + L0x2001987e_f * (x**27) + 
            L0x20019880_f * (x**28) + L0x20019882_f * (x**29) + 
            L0x20019884_f * (x**30) + L0x20019886_f * (x**31) + 
            L0x20019888_f * (x**32) + L0x2001988a_f * (x**33) + 
            L0x2001988c_f * (x**34) + L0x2001988e_f * (x**35) + 
            L0x20019890_f * (x**36) + L0x20019892_f * (x**37) + 
            L0x20019894_f * (x**38) + L0x20019896_f * (x**39) + 
            L0x20019898_f * (x**40) + L0x2001989a_f * (x**41) + 
            L0x2001989c_f * (x**42) + L0x2001989e_f * (x**43) + 
            L0x200198a0_f * (x**44) + L0x200198a2_f * (x**45) + 
            L0x200198a4_f * (x**46) + L0x200198a6_f * (x**47) + 
            L0x200198a8_f * (x**48) + L0x200198aa_f * (x**49) + 
            L0x200198ac_f * (x**50) + L0x200198ae_f * (x**51) + 
            L0x200198b0_f * (x**52) + L0x200198b2_f * (x**53) + 
            L0x200198b4_f * (x**54) + L0x200198b6_f * (x**55) + 
            L0x200198b8_f * (x**56) + L0x200198ba_f * (x**57) + 
            L0x200198bc_f * (x**58) + L0x200198be_f * (x**59) + 
            L0x200198c0_f * (x**60) + L0x200198c2_f * (x**61) + 
            L0x200198c4_f * (x**62) + L0x200198c6_f * (x**63) + 
            L0x200198c8_f * (x**64) + L0x200198ca_f * (x**65) + 
            L0x200198cc_f * (x**66) + L0x200198ce_f * (x**67) + 
            L0x200198d0_f * (x**68) + L0x200198d2_f * (x**69) + 
            L0x200198d4_f * (x**70) + L0x200198d6_f * (x**71) + 
            L0x200198d8_f * (x**72) + L0x200198da_f * (x**73) + 
            L0x200198dc_f * (x**74) + L0x200198de_f * (x**75) + 
            L0x200198e0_f * (x**76) + L0x200198e2_f * (x**77) + 
            L0x200198e4_f * (x**78) + L0x200198e6_f * (x**79) + 
            L0x200198e8_f * (x**80) + L0x200198ea_f * (x**81) + 
            L0x200198ec_f * (x**82) + L0x200198ee_f * (x**83) + 
            L0x200198f0_f * (x**84) + L0x200198f2_f * (x**85) + 
            L0x200198f4_f * (x**86) + L0x200198f6_f * (x**87) + 
            L0x200198f8_f * (x**88) + L0x200198fa_f * (x**89) + 
            L0x200198fc_f * (x**90) + L0x200198fe_f * (x**91) + 
            L0x20019900_f * (x**92) + L0x20019902_f * (x**93) + 
            L0x20019904_f * (x**94) + L0x20019906_f * (x**95) + 
            L0x20019908_f * (x**96) + L0x2001990a_f * (x**97) + 
            L0x2001990c_f * (x**98) + L0x2001990e_f * (x**99) + 
            L0x20019910_f * (x**100) + L0x20019912_f * (x**101) + 
            L0x20019914_f * (x**102) + L0x20019916_f * (x**103) + 
            L0x20019918_f * (x**104) + L0x2001991a_f * (x**105) + 
            L0x2001991c_f * (x**106) + L0x2001991e_f * (x**107) + 
            L0x20019920_f * (x**108) + L0x20019922_f * (x**109) + 
            L0x20019924_f * (x**110) + L0x20019926_f * (x**111) + 
            L0x20019928_f * (x**112) + L0x2001992a_f * (x**113) + 
            L0x2001992c_f * (x**114) + L0x2001992e_f * (x**115) + 
            L0x20019930_f * (x**116) + L0x20019932_f * (x**117) + 
            L0x20019934_f * (x**118) + L0x20019936_f * (x**119) + 
            L0x20019938_f * (x**120) + L0x2001993a_f * (x**121) + 
            L0x2001993c_f * (x**122) + L0x2001993e_f * (x**123) + 
            L0x20019940_f * (x**124) + L0x20019942_f * (x**125) + 
            L0x20019944_f * (x**126) + L0x20019946_f * (x**127) + 
            L0x20019948_f * (x**128) + L0x2001994a_f * (x**129) + 
            L0x2001994c_f * (x**130) + L0x2001994e_f * (x**131) + 
            L0x20019950_f * (x**132) + L0x20019952_f * (x**133) + 
            L0x20019954_f * (x**134) + L0x20019956_f * (x**135) + 
            L0x20019958_f * (x**136) + L0x2001995a_f * (x**137) + 
            L0x2001995c_f * (x**138) + L0x2001995e_f * (x**139) + 
            L0x20019960_f * (x**140) + L0x20019962_f * (x**141) + 
            L0x20019964_f * (x**142) + L0x20019966_f * (x**143) + 
            L0x20019968_f * (x**144) + L0x2001996a_f * (x**145) + 
            L0x2001996c_f * (x**146) + L0x2001996e_f * (x**147) + 
            L0x20019970_f * (x**148) + L0x20019972_f * (x**149) + 
            L0x20019974_f * (x**150) + L0x20019976_f * (x**151) + 
            L0x20019978_f * (x**152) + L0x2001997a_f * (x**153) + 
            L0x2001997c_f * (x**154) + L0x2001997e_f * (x**155) + 
            L0x20019980_f * (x**156) + L0x20019982_f * (x**157) + 
            L0x20019984_f * (x**158) + L0x20019986_f * (x**159) + 
            L0x20019988_f * (x**160) + L0x2001998a_f * (x**161) + 
            L0x2001998c_f * (x**162) + L0x2001998e_f * (x**163) + 
            L0x20019990_f * (x**164) + L0x20019992_f * (x**165) + 
            L0x20019994_f * (x**166) + L0x20019996_f * (x**167) + 
            L0x20019998_f * (x**168) + L0x2001999a_f * (x**169) + 
            L0x2001999c_f * (x**170) + L0x2001999e_f * (x**171) + 
            L0x200199a0_f * (x**172) + L0x200199a2_f * (x**173) + 
            L0x200199a4_f * (x**174) + L0x200199a6_f * (x**175) + 
            L0x200199a8_f * (x**176) + L0x200199aa_f * (x**177) + 
            L0x200199ac_f * (x**178) + L0x200199ae_f * (x**179) + 
            L0x200199b0_f * (x**180) + L0x200199b2_f * (x**181) + 
            L0x200199b4_f * (x**182) + L0x200199b6_f * (x**183) + 
            L0x200199b8_f * (x**184) + L0x200199ba_f * (x**185) + 
            L0x200199bc_f * (x**186) + L0x200199be_f * (x**187) + 
            L0x200199c0_f * (x**188) + L0x200199c2_f * (x**189) + 
            L0x200199c4_f * (x**190) + L0x200199c6_f * (x**191) + 
            L0x200199c8_f * (x**192) + L0x200199ca_f * (x**193) + 
            L0x200199cc_f * (x**194) + L0x200199ce_f * (x**195) + 
            L0x200199d0_f * (x**196) + L0x200199d2_f * (x**197) + 
            L0x200199d4_f * (x**198) + L0x200199d6_f * (x**199) + 
            L0x200199d8_f * (x**200) + L0x200199da_f * (x**201) + 
            L0x200199dc_f * (x**202) + L0x200199de_f * (x**203) + 
            L0x200199e0_f * (x**204) + L0x200199e2_f * (x**205) + 
            L0x200199e4_f * (x**206) + L0x200199e6_f * (x**207) + 
            L0x200199e8_f * (x**208) + L0x200199ea_f * (x**209) + 
            L0x200199ec_f * (x**210) + L0x200199ee_f * (x**211) + 
            L0x200199f0_f * (x**212) + L0x200199f2_f * (x**213) + 
            L0x200199f4_f * (x**214) + L0x200199f6_f * (x**215) + 
            L0x200199f8_f * (x**216) + L0x200199fa_f * (x**217) + 
            L0x200199fc_f * (x**218) + L0x200199fe_f * (x**219) + 
            L0x20019a00_f * (x**220) + L0x20019a02_f * (x**221) + 
            L0x20019a04_f * (x**222) + L0x20019a06_f * (x**223) + 
            L0x20019a08_f * (x**224) + L0x20019a0a_f * (x**225) + 
            L0x20019a0c_f * (x**226) + L0x20019a0e_f * (x**227) + 
            L0x20019a10_f * (x**228) + L0x20019a12_f * (x**229) + 
            L0x20019a14_f * (x**230) + L0x20019a16_f * (x**231) + 
            L0x20019a18_f * (x**232) + L0x20019a1a_f * (x**233) + 
            L0x20019a1c_f * (x**234) + L0x20019a1e_f * (x**235) + 
            L0x20019a20_f * (x**236) + L0x20019a22_f * (x**237) + 
            L0x20019a24_f * (x**238) + L0x20019a26_f * (x**239) + 
            L0x20019a28_f * (x**240) + L0x20019a2a_f * (x**241) + 
            L0x20019a2c_f * (x**242) + L0x20019a2e_f * (x**243) + 
            L0x20019a30_f * (x**244) + L0x20019a32_f * (x**245) + 
            L0x20019a34_f * (x**246) + L0x20019a36_f * (x**247) + 
            L0x20019a38_f * (x**248) + L0x20019a3a_f * (x**249) + 
            L0x20019a3c_f * (x**250) + L0x20019a3e_f * (x**251) + 
            L0x20019a40_f * (x**252) + L0x20019a42_f * (x**253) + 
            L0x20019a44_f * (x**254) + L0x20019a46_f * (x**255)
          )
          [25570049, x**4 - 2000440],
    (* inp_poly_22 *)
    eqmod (2**32) * (inp_poly_22 * inp_poly_22)
          (
            L0x20019848_f * (x**0) + L0x2001984a_f * (x**1) + 
            L0x2001984c_f * (x**2) + L0x2001984e_f * (x**3) + 
            L0x20019850_f * (x**4) + L0x20019852_f * (x**5) + 
            L0x20019854_f * (x**6) + L0x20019856_f * (x**7) + 
            L0x20019858_f * (x**8) + L0x2001985a_f * (x**9) + 
            L0x2001985c_f * (x**10) + L0x2001985e_f * (x**11) + 
            L0x20019860_f * (x**12) + L0x20019862_f * (x**13) + 
            L0x20019864_f * (x**14) + L0x20019866_f * (x**15) + 
            L0x20019868_f * (x**16) + L0x2001986a_f * (x**17) + 
            L0x2001986c_f * (x**18) + L0x2001986e_f * (x**19) + 
            L0x20019870_f * (x**20) + L0x20019872_f * (x**21) + 
            L0x20019874_f * (x**22) + L0x20019876_f * (x**23) + 
            L0x20019878_f * (x**24) + L0x2001987a_f * (x**25) + 
            L0x2001987c_f * (x**26) + L0x2001987e_f * (x**27) + 
            L0x20019880_f * (x**28) + L0x20019882_f * (x**29) + 
            L0x20019884_f * (x**30) + L0x20019886_f * (x**31) + 
            L0x20019888_f * (x**32) + L0x2001988a_f * (x**33) + 
            L0x2001988c_f * (x**34) + L0x2001988e_f * (x**35) + 
            L0x20019890_f * (x**36) + L0x20019892_f * (x**37) + 
            L0x20019894_f * (x**38) + L0x20019896_f * (x**39) + 
            L0x20019898_f * (x**40) + L0x2001989a_f * (x**41) + 
            L0x2001989c_f * (x**42) + L0x2001989e_f * (x**43) + 
            L0x200198a0_f * (x**44) + L0x200198a2_f * (x**45) + 
            L0x200198a4_f * (x**46) + L0x200198a6_f * (x**47) + 
            L0x200198a8_f * (x**48) + L0x200198aa_f * (x**49) + 
            L0x200198ac_f * (x**50) + L0x200198ae_f * (x**51) + 
            L0x200198b0_f * (x**52) + L0x200198b2_f * (x**53) + 
            L0x200198b4_f * (x**54) + L0x200198b6_f * (x**55) + 
            L0x200198b8_f * (x**56) + L0x200198ba_f * (x**57) + 
            L0x200198bc_f * (x**58) + L0x200198be_f * (x**59) + 
            L0x200198c0_f * (x**60) + L0x200198c2_f * (x**61) + 
            L0x200198c4_f * (x**62) + L0x200198c6_f * (x**63) + 
            L0x200198c8_f * (x**64) + L0x200198ca_f * (x**65) + 
            L0x200198cc_f * (x**66) + L0x200198ce_f * (x**67) + 
            L0x200198d0_f * (x**68) + L0x200198d2_f * (x**69) + 
            L0x200198d4_f * (x**70) + L0x200198d6_f * (x**71) + 
            L0x200198d8_f * (x**72) + L0x200198da_f * (x**73) + 
            L0x200198dc_f * (x**74) + L0x200198de_f * (x**75) + 
            L0x200198e0_f * (x**76) + L0x200198e2_f * (x**77) + 
            L0x200198e4_f * (x**78) + L0x200198e6_f * (x**79) + 
            L0x200198e8_f * (x**80) + L0x200198ea_f * (x**81) + 
            L0x200198ec_f * (x**82) + L0x200198ee_f * (x**83) + 
            L0x200198f0_f * (x**84) + L0x200198f2_f * (x**85) + 
            L0x200198f4_f * (x**86) + L0x200198f6_f * (x**87) + 
            L0x200198f8_f * (x**88) + L0x200198fa_f * (x**89) + 
            L0x200198fc_f * (x**90) + L0x200198fe_f * (x**91) + 
            L0x20019900_f * (x**92) + L0x20019902_f * (x**93) + 
            L0x20019904_f * (x**94) + L0x20019906_f * (x**95) + 
            L0x20019908_f * (x**96) + L0x2001990a_f * (x**97) + 
            L0x2001990c_f * (x**98) + L0x2001990e_f * (x**99) + 
            L0x20019910_f * (x**100) + L0x20019912_f * (x**101) + 
            L0x20019914_f * (x**102) + L0x20019916_f * (x**103) + 
            L0x20019918_f * (x**104) + L0x2001991a_f * (x**105) + 
            L0x2001991c_f * (x**106) + L0x2001991e_f * (x**107) + 
            L0x20019920_f * (x**108) + L0x20019922_f * (x**109) + 
            L0x20019924_f * (x**110) + L0x20019926_f * (x**111) + 
            L0x20019928_f * (x**112) + L0x2001992a_f * (x**113) + 
            L0x2001992c_f * (x**114) + L0x2001992e_f * (x**115) + 
            L0x20019930_f * (x**116) + L0x20019932_f * (x**117) + 
            L0x20019934_f * (x**118) + L0x20019936_f * (x**119) + 
            L0x20019938_f * (x**120) + L0x2001993a_f * (x**121) + 
            L0x2001993c_f * (x**122) + L0x2001993e_f * (x**123) + 
            L0x20019940_f * (x**124) + L0x20019942_f * (x**125) + 
            L0x20019944_f * (x**126) + L0x20019946_f * (x**127) + 
            L0x20019948_f * (x**128) + L0x2001994a_f * (x**129) + 
            L0x2001994c_f * (x**130) + L0x2001994e_f * (x**131) + 
            L0x20019950_f * (x**132) + L0x20019952_f * (x**133) + 
            L0x20019954_f * (x**134) + L0x20019956_f * (x**135) + 
            L0x20019958_f * (x**136) + L0x2001995a_f * (x**137) + 
            L0x2001995c_f * (x**138) + L0x2001995e_f * (x**139) + 
            L0x20019960_f * (x**140) + L0x20019962_f * (x**141) + 
            L0x20019964_f * (x**142) + L0x20019966_f * (x**143) + 
            L0x20019968_f * (x**144) + L0x2001996a_f * (x**145) + 
            L0x2001996c_f * (x**146) + L0x2001996e_f * (x**147) + 
            L0x20019970_f * (x**148) + L0x20019972_f * (x**149) + 
            L0x20019974_f * (x**150) + L0x20019976_f * (x**151) + 
            L0x20019978_f * (x**152) + L0x2001997a_f * (x**153) + 
            L0x2001997c_f * (x**154) + L0x2001997e_f * (x**155) + 
            L0x20019980_f * (x**156) + L0x20019982_f * (x**157) + 
            L0x20019984_f * (x**158) + L0x20019986_f * (x**159) + 
            L0x20019988_f * (x**160) + L0x2001998a_f * (x**161) + 
            L0x2001998c_f * (x**162) + L0x2001998e_f * (x**163) + 
            L0x20019990_f * (x**164) + L0x20019992_f * (x**165) + 
            L0x20019994_f * (x**166) + L0x20019996_f * (x**167) + 
            L0x20019998_f * (x**168) + L0x2001999a_f * (x**169) + 
            L0x2001999c_f * (x**170) + L0x2001999e_f * (x**171) + 
            L0x200199a0_f * (x**172) + L0x200199a2_f * (x**173) + 
            L0x200199a4_f * (x**174) + L0x200199a6_f * (x**175) + 
            L0x200199a8_f * (x**176) + L0x200199aa_f * (x**177) + 
            L0x200199ac_f * (x**178) + L0x200199ae_f * (x**179) + 
            L0x200199b0_f * (x**180) + L0x200199b2_f * (x**181) + 
            L0x200199b4_f * (x**182) + L0x200199b6_f * (x**183) + 
            L0x200199b8_f * (x**184) + L0x200199ba_f * (x**185) + 
            L0x200199bc_f * (x**186) + L0x200199be_f * (x**187) + 
            L0x200199c0_f * (x**188) + L0x200199c2_f * (x**189) + 
            L0x200199c4_f * (x**190) + L0x200199c6_f * (x**191) + 
            L0x200199c8_f * (x**192) + L0x200199ca_f * (x**193) + 
            L0x200199cc_f * (x**194) + L0x200199ce_f * (x**195) + 
            L0x200199d0_f * (x**196) + L0x200199d2_f * (x**197) + 
            L0x200199d4_f * (x**198) + L0x200199d6_f * (x**199) + 
            L0x200199d8_f * (x**200) + L0x200199da_f * (x**201) + 
            L0x200199dc_f * (x**202) + L0x200199de_f * (x**203) + 
            L0x200199e0_f * (x**204) + L0x200199e2_f * (x**205) + 
            L0x200199e4_f * (x**206) + L0x200199e6_f * (x**207) + 
            L0x200199e8_f * (x**208) + L0x200199ea_f * (x**209) + 
            L0x200199ec_f * (x**210) + L0x200199ee_f * (x**211) + 
            L0x200199f0_f * (x**212) + L0x200199f2_f * (x**213) + 
            L0x200199f4_f * (x**214) + L0x200199f6_f * (x**215) + 
            L0x200199f8_f * (x**216) + L0x200199fa_f * (x**217) + 
            L0x200199fc_f * (x**218) + L0x200199fe_f * (x**219) + 
            L0x20019a00_f * (x**220) + L0x20019a02_f * (x**221) + 
            L0x20019a04_f * (x**222) + L0x20019a06_f * (x**223) + 
            L0x20019a08_f * (x**224) + L0x20019a0a_f * (x**225) + 
            L0x20019a0c_f * (x**226) + L0x20019a0e_f * (x**227) + 
            L0x20019a10_f * (x**228) + L0x20019a12_f * (x**229) + 
            L0x20019a14_f * (x**230) + L0x20019a16_f * (x**231) + 
            L0x20019a18_f * (x**232) + L0x20019a1a_f * (x**233) + 
            L0x20019a1c_f * (x**234) + L0x20019a1e_f * (x**235) + 
            L0x20019a20_f * (x**236) + L0x20019a22_f * (x**237) + 
            L0x20019a24_f * (x**238) + L0x20019a26_f * (x**239) + 
            L0x20019a28_f * (x**240) + L0x20019a2a_f * (x**241) + 
            L0x20019a2c_f * (x**242) + L0x20019a2e_f * (x**243) + 
            L0x20019a30_f * (x**244) + L0x20019a32_f * (x**245) + 
            L0x20019a34_f * (x**246) + L0x20019a36_f * (x**247) + 
            L0x20019a38_f * (x**248) + L0x20019a3a_f * (x**249) + 
            L0x20019a3c_f * (x**250) + L0x20019a3e_f * (x**251) + 
            L0x20019a40_f * (x**252) + L0x20019a42_f * (x**253) + 
            L0x20019a44_f * (x**254) + L0x20019a46_f * (x**255)
          )
          [25570049, x**4 - 7617083],
    (* inp_poly_23 *)
    eqmod (2**32) * (inp_poly_23 * inp_poly_23)
          (
            L0x20019848_f * (x**0) + L0x2001984a_f * (x**1) + 
            L0x2001984c_f * (x**2) + L0x2001984e_f * (x**3) + 
            L0x20019850_f * (x**4) + L0x20019852_f * (x**5) + 
            L0x20019854_f * (x**6) + L0x20019856_f * (x**7) + 
            L0x20019858_f * (x**8) + L0x2001985a_f * (x**9) + 
            L0x2001985c_f * (x**10) + L0x2001985e_f * (x**11) + 
            L0x20019860_f * (x**12) + L0x20019862_f * (x**13) + 
            L0x20019864_f * (x**14) + L0x20019866_f * (x**15) + 
            L0x20019868_f * (x**16) + L0x2001986a_f * (x**17) + 
            L0x2001986c_f * (x**18) + L0x2001986e_f * (x**19) + 
            L0x20019870_f * (x**20) + L0x20019872_f * (x**21) + 
            L0x20019874_f * (x**22) + L0x20019876_f * (x**23) + 
            L0x20019878_f * (x**24) + L0x2001987a_f * (x**25) + 
            L0x2001987c_f * (x**26) + L0x2001987e_f * (x**27) + 
            L0x20019880_f * (x**28) + L0x20019882_f * (x**29) + 
            L0x20019884_f * (x**30) + L0x20019886_f * (x**31) + 
            L0x20019888_f * (x**32) + L0x2001988a_f * (x**33) + 
            L0x2001988c_f * (x**34) + L0x2001988e_f * (x**35) + 
            L0x20019890_f * (x**36) + L0x20019892_f * (x**37) + 
            L0x20019894_f * (x**38) + L0x20019896_f * (x**39) + 
            L0x20019898_f * (x**40) + L0x2001989a_f * (x**41) + 
            L0x2001989c_f * (x**42) + L0x2001989e_f * (x**43) + 
            L0x200198a0_f * (x**44) + L0x200198a2_f * (x**45) + 
            L0x200198a4_f * (x**46) + L0x200198a6_f * (x**47) + 
            L0x200198a8_f * (x**48) + L0x200198aa_f * (x**49) + 
            L0x200198ac_f * (x**50) + L0x200198ae_f * (x**51) + 
            L0x200198b0_f * (x**52) + L0x200198b2_f * (x**53) + 
            L0x200198b4_f * (x**54) + L0x200198b6_f * (x**55) + 
            L0x200198b8_f * (x**56) + L0x200198ba_f * (x**57) + 
            L0x200198bc_f * (x**58) + L0x200198be_f * (x**59) + 
            L0x200198c0_f * (x**60) + L0x200198c2_f * (x**61) + 
            L0x200198c4_f * (x**62) + L0x200198c6_f * (x**63) + 
            L0x200198c8_f * (x**64) + L0x200198ca_f * (x**65) + 
            L0x200198cc_f * (x**66) + L0x200198ce_f * (x**67) + 
            L0x200198d0_f * (x**68) + L0x200198d2_f * (x**69) + 
            L0x200198d4_f * (x**70) + L0x200198d6_f * (x**71) + 
            L0x200198d8_f * (x**72) + L0x200198da_f * (x**73) + 
            L0x200198dc_f * (x**74) + L0x200198de_f * (x**75) + 
            L0x200198e0_f * (x**76) + L0x200198e2_f * (x**77) + 
            L0x200198e4_f * (x**78) + L0x200198e6_f * (x**79) + 
            L0x200198e8_f * (x**80) + L0x200198ea_f * (x**81) + 
            L0x200198ec_f * (x**82) + L0x200198ee_f * (x**83) + 
            L0x200198f0_f * (x**84) + L0x200198f2_f * (x**85) + 
            L0x200198f4_f * (x**86) + L0x200198f6_f * (x**87) + 
            L0x200198f8_f * (x**88) + L0x200198fa_f * (x**89) + 
            L0x200198fc_f * (x**90) + L0x200198fe_f * (x**91) + 
            L0x20019900_f * (x**92) + L0x20019902_f * (x**93) + 
            L0x20019904_f * (x**94) + L0x20019906_f * (x**95) + 
            L0x20019908_f * (x**96) + L0x2001990a_f * (x**97) + 
            L0x2001990c_f * (x**98) + L0x2001990e_f * (x**99) + 
            L0x20019910_f * (x**100) + L0x20019912_f * (x**101) + 
            L0x20019914_f * (x**102) + L0x20019916_f * (x**103) + 
            L0x20019918_f * (x**104) + L0x2001991a_f * (x**105) + 
            L0x2001991c_f * (x**106) + L0x2001991e_f * (x**107) + 
            L0x20019920_f * (x**108) + L0x20019922_f * (x**109) + 
            L0x20019924_f * (x**110) + L0x20019926_f * (x**111) + 
            L0x20019928_f * (x**112) + L0x2001992a_f * (x**113) + 
            L0x2001992c_f * (x**114) + L0x2001992e_f * (x**115) + 
            L0x20019930_f * (x**116) + L0x20019932_f * (x**117) + 
            L0x20019934_f * (x**118) + L0x20019936_f * (x**119) + 
            L0x20019938_f * (x**120) + L0x2001993a_f * (x**121) + 
            L0x2001993c_f * (x**122) + L0x2001993e_f * (x**123) + 
            L0x20019940_f * (x**124) + L0x20019942_f * (x**125) + 
            L0x20019944_f * (x**126) + L0x20019946_f * (x**127) + 
            L0x20019948_f * (x**128) + L0x2001994a_f * (x**129) + 
            L0x2001994c_f * (x**130) + L0x2001994e_f * (x**131) + 
            L0x20019950_f * (x**132) + L0x20019952_f * (x**133) + 
            L0x20019954_f * (x**134) + L0x20019956_f * (x**135) + 
            L0x20019958_f * (x**136) + L0x2001995a_f * (x**137) + 
            L0x2001995c_f * (x**138) + L0x2001995e_f * (x**139) + 
            L0x20019960_f * (x**140) + L0x20019962_f * (x**141) + 
            L0x20019964_f * (x**142) + L0x20019966_f * (x**143) + 
            L0x20019968_f * (x**144) + L0x2001996a_f * (x**145) + 
            L0x2001996c_f * (x**146) + L0x2001996e_f * (x**147) + 
            L0x20019970_f * (x**148) + L0x20019972_f * (x**149) + 
            L0x20019974_f * (x**150) + L0x20019976_f * (x**151) + 
            L0x20019978_f * (x**152) + L0x2001997a_f * (x**153) + 
            L0x2001997c_f * (x**154) + L0x2001997e_f * (x**155) + 
            L0x20019980_f * (x**156) + L0x20019982_f * (x**157) + 
            L0x20019984_f * (x**158) + L0x20019986_f * (x**159) + 
            L0x20019988_f * (x**160) + L0x2001998a_f * (x**161) + 
            L0x2001998c_f * (x**162) + L0x2001998e_f * (x**163) + 
            L0x20019990_f * (x**164) + L0x20019992_f * (x**165) + 
            L0x20019994_f * (x**166) + L0x20019996_f * (x**167) + 
            L0x20019998_f * (x**168) + L0x2001999a_f * (x**169) + 
            L0x2001999c_f * (x**170) + L0x2001999e_f * (x**171) + 
            L0x200199a0_f * (x**172) + L0x200199a2_f * (x**173) + 
            L0x200199a4_f * (x**174) + L0x200199a6_f * (x**175) + 
            L0x200199a8_f * (x**176) + L0x200199aa_f * (x**177) + 
            L0x200199ac_f * (x**178) + L0x200199ae_f * (x**179) + 
            L0x200199b0_f * (x**180) + L0x200199b2_f * (x**181) + 
            L0x200199b4_f * (x**182) + L0x200199b6_f * (x**183) + 
            L0x200199b8_f * (x**184) + L0x200199ba_f * (x**185) + 
            L0x200199bc_f * (x**186) + L0x200199be_f * (x**187) + 
            L0x200199c0_f * (x**188) + L0x200199c2_f * (x**189) + 
            L0x200199c4_f * (x**190) + L0x200199c6_f * (x**191) + 
            L0x200199c8_f * (x**192) + L0x200199ca_f * (x**193) + 
            L0x200199cc_f * (x**194) + L0x200199ce_f * (x**195) + 
            L0x200199d0_f * (x**196) + L0x200199d2_f * (x**197) + 
            L0x200199d4_f * (x**198) + L0x200199d6_f * (x**199) + 
            L0x200199d8_f * (x**200) + L0x200199da_f * (x**201) + 
            L0x200199dc_f * (x**202) + L0x200199de_f * (x**203) + 
            L0x200199e0_f * (x**204) + L0x200199e2_f * (x**205) + 
            L0x200199e4_f * (x**206) + L0x200199e6_f * (x**207) + 
            L0x200199e8_f * (x**208) + L0x200199ea_f * (x**209) + 
            L0x200199ec_f * (x**210) + L0x200199ee_f * (x**211) + 
            L0x200199f0_f * (x**212) + L0x200199f2_f * (x**213) + 
            L0x200199f4_f * (x**214) + L0x200199f6_f * (x**215) + 
            L0x200199f8_f * (x**216) + L0x200199fa_f * (x**217) + 
            L0x200199fc_f * (x**218) + L0x200199fe_f * (x**219) + 
            L0x20019a00_f * (x**220) + L0x20019a02_f * (x**221) + 
            L0x20019a04_f * (x**222) + L0x20019a06_f * (x**223) + 
            L0x20019a08_f * (x**224) + L0x20019a0a_f * (x**225) + 
            L0x20019a0c_f * (x**226) + L0x20019a0e_f * (x**227) + 
            L0x20019a10_f * (x**228) + L0x20019a12_f * (x**229) + 
            L0x20019a14_f * (x**230) + L0x20019a16_f * (x**231) + 
            L0x20019a18_f * (x**232) + L0x20019a1a_f * (x**233) + 
            L0x20019a1c_f * (x**234) + L0x20019a1e_f * (x**235) + 
            L0x20019a20_f * (x**236) + L0x20019a22_f * (x**237) + 
            L0x20019a24_f * (x**238) + L0x20019a26_f * (x**239) + 
            L0x20019a28_f * (x**240) + L0x20019a2a_f * (x**241) + 
            L0x20019a2c_f * (x**242) + L0x20019a2e_f * (x**243) + 
            L0x20019a30_f * (x**244) + L0x20019a32_f * (x**245) + 
            L0x20019a34_f * (x**246) + L0x20019a36_f * (x**247) + 
            L0x20019a38_f * (x**248) + L0x20019a3a_f * (x**249) + 
            L0x20019a3c_f * (x**250) + L0x20019a3e_f * (x**251) + 
            L0x20019a40_f * (x**252) + L0x20019a42_f * (x**253) + 
            L0x20019a44_f * (x**254) + L0x20019a46_f * (x**255)
          )
          [25570049, x**4 - 17952966],
    (* inp_poly_24 *)
    eqmod (2**32) * (inp_poly_24 * inp_poly_24)
          (
            L0x20019848_f * (x**0) + L0x2001984a_f * (x**1) + 
            L0x2001984c_f * (x**2) + L0x2001984e_f * (x**3) + 
            L0x20019850_f * (x**4) + L0x20019852_f * (x**5) + 
            L0x20019854_f * (x**6) + L0x20019856_f * (x**7) + 
            L0x20019858_f * (x**8) + L0x2001985a_f * (x**9) + 
            L0x2001985c_f * (x**10) + L0x2001985e_f * (x**11) + 
            L0x20019860_f * (x**12) + L0x20019862_f * (x**13) + 
            L0x20019864_f * (x**14) + L0x20019866_f * (x**15) + 
            L0x20019868_f * (x**16) + L0x2001986a_f * (x**17) + 
            L0x2001986c_f * (x**18) + L0x2001986e_f * (x**19) + 
            L0x20019870_f * (x**20) + L0x20019872_f * (x**21) + 
            L0x20019874_f * (x**22) + L0x20019876_f * (x**23) + 
            L0x20019878_f * (x**24) + L0x2001987a_f * (x**25) + 
            L0x2001987c_f * (x**26) + L0x2001987e_f * (x**27) + 
            L0x20019880_f * (x**28) + L0x20019882_f * (x**29) + 
            L0x20019884_f * (x**30) + L0x20019886_f * (x**31) + 
            L0x20019888_f * (x**32) + L0x2001988a_f * (x**33) + 
            L0x2001988c_f * (x**34) + L0x2001988e_f * (x**35) + 
            L0x20019890_f * (x**36) + L0x20019892_f * (x**37) + 
            L0x20019894_f * (x**38) + L0x20019896_f * (x**39) + 
            L0x20019898_f * (x**40) + L0x2001989a_f * (x**41) + 
            L0x2001989c_f * (x**42) + L0x2001989e_f * (x**43) + 
            L0x200198a0_f * (x**44) + L0x200198a2_f * (x**45) + 
            L0x200198a4_f * (x**46) + L0x200198a6_f * (x**47) + 
            L0x200198a8_f * (x**48) + L0x200198aa_f * (x**49) + 
            L0x200198ac_f * (x**50) + L0x200198ae_f * (x**51) + 
            L0x200198b0_f * (x**52) + L0x200198b2_f * (x**53) + 
            L0x200198b4_f * (x**54) + L0x200198b6_f * (x**55) + 
            L0x200198b8_f * (x**56) + L0x200198ba_f * (x**57) + 
            L0x200198bc_f * (x**58) + L0x200198be_f * (x**59) + 
            L0x200198c0_f * (x**60) + L0x200198c2_f * (x**61) + 
            L0x200198c4_f * (x**62) + L0x200198c6_f * (x**63) + 
            L0x200198c8_f * (x**64) + L0x200198ca_f * (x**65) + 
            L0x200198cc_f * (x**66) + L0x200198ce_f * (x**67) + 
            L0x200198d0_f * (x**68) + L0x200198d2_f * (x**69) + 
            L0x200198d4_f * (x**70) + L0x200198d6_f * (x**71) + 
            L0x200198d8_f * (x**72) + L0x200198da_f * (x**73) + 
            L0x200198dc_f * (x**74) + L0x200198de_f * (x**75) + 
            L0x200198e0_f * (x**76) + L0x200198e2_f * (x**77) + 
            L0x200198e4_f * (x**78) + L0x200198e6_f * (x**79) + 
            L0x200198e8_f * (x**80) + L0x200198ea_f * (x**81) + 
            L0x200198ec_f * (x**82) + L0x200198ee_f * (x**83) + 
            L0x200198f0_f * (x**84) + L0x200198f2_f * (x**85) + 
            L0x200198f4_f * (x**86) + L0x200198f6_f * (x**87) + 
            L0x200198f8_f * (x**88) + L0x200198fa_f * (x**89) + 
            L0x200198fc_f * (x**90) + L0x200198fe_f * (x**91) + 
            L0x20019900_f * (x**92) + L0x20019902_f * (x**93) + 
            L0x20019904_f * (x**94) + L0x20019906_f * (x**95) + 
            L0x20019908_f * (x**96) + L0x2001990a_f * (x**97) + 
            L0x2001990c_f * (x**98) + L0x2001990e_f * (x**99) + 
            L0x20019910_f * (x**100) + L0x20019912_f * (x**101) + 
            L0x20019914_f * (x**102) + L0x20019916_f * (x**103) + 
            L0x20019918_f * (x**104) + L0x2001991a_f * (x**105) + 
            L0x2001991c_f * (x**106) + L0x2001991e_f * (x**107) + 
            L0x20019920_f * (x**108) + L0x20019922_f * (x**109) + 
            L0x20019924_f * (x**110) + L0x20019926_f * (x**111) + 
            L0x20019928_f * (x**112) + L0x2001992a_f * (x**113) + 
            L0x2001992c_f * (x**114) + L0x2001992e_f * (x**115) + 
            L0x20019930_f * (x**116) + L0x20019932_f * (x**117) + 
            L0x20019934_f * (x**118) + L0x20019936_f * (x**119) + 
            L0x20019938_f * (x**120) + L0x2001993a_f * (x**121) + 
            L0x2001993c_f * (x**122) + L0x2001993e_f * (x**123) + 
            L0x20019940_f * (x**124) + L0x20019942_f * (x**125) + 
            L0x20019944_f * (x**126) + L0x20019946_f * (x**127) + 
            L0x20019948_f * (x**128) + L0x2001994a_f * (x**129) + 
            L0x2001994c_f * (x**130) + L0x2001994e_f * (x**131) + 
            L0x20019950_f * (x**132) + L0x20019952_f * (x**133) + 
            L0x20019954_f * (x**134) + L0x20019956_f * (x**135) + 
            L0x20019958_f * (x**136) + L0x2001995a_f * (x**137) + 
            L0x2001995c_f * (x**138) + L0x2001995e_f * (x**139) + 
            L0x20019960_f * (x**140) + L0x20019962_f * (x**141) + 
            L0x20019964_f * (x**142) + L0x20019966_f * (x**143) + 
            L0x20019968_f * (x**144) + L0x2001996a_f * (x**145) + 
            L0x2001996c_f * (x**146) + L0x2001996e_f * (x**147) + 
            L0x20019970_f * (x**148) + L0x20019972_f * (x**149) + 
            L0x20019974_f * (x**150) + L0x20019976_f * (x**151) + 
            L0x20019978_f * (x**152) + L0x2001997a_f * (x**153) + 
            L0x2001997c_f * (x**154) + L0x2001997e_f * (x**155) + 
            L0x20019980_f * (x**156) + L0x20019982_f * (x**157) + 
            L0x20019984_f * (x**158) + L0x20019986_f * (x**159) + 
            L0x20019988_f * (x**160) + L0x2001998a_f * (x**161) + 
            L0x2001998c_f * (x**162) + L0x2001998e_f * (x**163) + 
            L0x20019990_f * (x**164) + L0x20019992_f * (x**165) + 
            L0x20019994_f * (x**166) + L0x20019996_f * (x**167) + 
            L0x20019998_f * (x**168) + L0x2001999a_f * (x**169) + 
            L0x2001999c_f * (x**170) + L0x2001999e_f * (x**171) + 
            L0x200199a0_f * (x**172) + L0x200199a2_f * (x**173) + 
            L0x200199a4_f * (x**174) + L0x200199a6_f * (x**175) + 
            L0x200199a8_f * (x**176) + L0x200199aa_f * (x**177) + 
            L0x200199ac_f * (x**178) + L0x200199ae_f * (x**179) + 
            L0x200199b0_f * (x**180) + L0x200199b2_f * (x**181) + 
            L0x200199b4_f * (x**182) + L0x200199b6_f * (x**183) + 
            L0x200199b8_f * (x**184) + L0x200199ba_f * (x**185) + 
            L0x200199bc_f * (x**186) + L0x200199be_f * (x**187) + 
            L0x200199c0_f * (x**188) + L0x200199c2_f * (x**189) + 
            L0x200199c4_f * (x**190) + L0x200199c6_f * (x**191) + 
            L0x200199c8_f * (x**192) + L0x200199ca_f * (x**193) + 
            L0x200199cc_f * (x**194) + L0x200199ce_f * (x**195) + 
            L0x200199d0_f * (x**196) + L0x200199d2_f * (x**197) + 
            L0x200199d4_f * (x**198) + L0x200199d6_f * (x**199) + 
            L0x200199d8_f * (x**200) + L0x200199da_f * (x**201) + 
            L0x200199dc_f * (x**202) + L0x200199de_f * (x**203) + 
            L0x200199e0_f * (x**204) + L0x200199e2_f * (x**205) + 
            L0x200199e4_f * (x**206) + L0x200199e6_f * (x**207) + 
            L0x200199e8_f * (x**208) + L0x200199ea_f * (x**209) + 
            L0x200199ec_f * (x**210) + L0x200199ee_f * (x**211) + 
            L0x200199f0_f * (x**212) + L0x200199f2_f * (x**213) + 
            L0x200199f4_f * (x**214) + L0x200199f6_f * (x**215) + 
            L0x200199f8_f * (x**216) + L0x200199fa_f * (x**217) + 
            L0x200199fc_f * (x**218) + L0x200199fe_f * (x**219) + 
            L0x20019a00_f * (x**220) + L0x20019a02_f * (x**221) + 
            L0x20019a04_f * (x**222) + L0x20019a06_f * (x**223) + 
            L0x20019a08_f * (x**224) + L0x20019a0a_f * (x**225) + 
            L0x20019a0c_f * (x**226) + L0x20019a0e_f * (x**227) + 
            L0x20019a10_f * (x**228) + L0x20019a12_f * (x**229) + 
            L0x20019a14_f * (x**230) + L0x20019a16_f * (x**231) + 
            L0x20019a18_f * (x**232) + L0x20019a1a_f * (x**233) + 
            L0x20019a1c_f * (x**234) + L0x20019a1e_f * (x**235) + 
            L0x20019a20_f * (x**236) + L0x20019a22_f * (x**237) + 
            L0x20019a24_f * (x**238) + L0x20019a26_f * (x**239) + 
            L0x20019a28_f * (x**240) + L0x20019a2a_f * (x**241) + 
            L0x20019a2c_f * (x**242) + L0x20019a2e_f * (x**243) + 
            L0x20019a30_f * (x**244) + L0x20019a32_f * (x**245) + 
            L0x20019a34_f * (x**246) + L0x20019a36_f * (x**247) + 
            L0x20019a38_f * (x**248) + L0x20019a3a_f * (x**249) + 
            L0x20019a3c_f * (x**250) + L0x20019a3e_f * (x**251) + 
            L0x20019a40_f * (x**252) + L0x20019a42_f * (x**253) + 
            L0x20019a44_f * (x**254) + L0x20019a46_f * (x**255)
          )
          [25570049, x**4 - 24859920],
    (* inp_poly_25 *)
    eqmod (2**32) * (inp_poly_25 * inp_poly_25)
          (
            L0x20019848_f * (x**0) + L0x2001984a_f * (x**1) + 
            L0x2001984c_f * (x**2) + L0x2001984e_f * (x**3) + 
            L0x20019850_f * (x**4) + L0x20019852_f * (x**5) + 
            L0x20019854_f * (x**6) + L0x20019856_f * (x**7) + 
            L0x20019858_f * (x**8) + L0x2001985a_f * (x**9) + 
            L0x2001985c_f * (x**10) + L0x2001985e_f * (x**11) + 
            L0x20019860_f * (x**12) + L0x20019862_f * (x**13) + 
            L0x20019864_f * (x**14) + L0x20019866_f * (x**15) + 
            L0x20019868_f * (x**16) + L0x2001986a_f * (x**17) + 
            L0x2001986c_f * (x**18) + L0x2001986e_f * (x**19) + 
            L0x20019870_f * (x**20) + L0x20019872_f * (x**21) + 
            L0x20019874_f * (x**22) + L0x20019876_f * (x**23) + 
            L0x20019878_f * (x**24) + L0x2001987a_f * (x**25) + 
            L0x2001987c_f * (x**26) + L0x2001987e_f * (x**27) + 
            L0x20019880_f * (x**28) + L0x20019882_f * (x**29) + 
            L0x20019884_f * (x**30) + L0x20019886_f * (x**31) + 
            L0x20019888_f * (x**32) + L0x2001988a_f * (x**33) + 
            L0x2001988c_f * (x**34) + L0x2001988e_f * (x**35) + 
            L0x20019890_f * (x**36) + L0x20019892_f * (x**37) + 
            L0x20019894_f * (x**38) + L0x20019896_f * (x**39) + 
            L0x20019898_f * (x**40) + L0x2001989a_f * (x**41) + 
            L0x2001989c_f * (x**42) + L0x2001989e_f * (x**43) + 
            L0x200198a0_f * (x**44) + L0x200198a2_f * (x**45) + 
            L0x200198a4_f * (x**46) + L0x200198a6_f * (x**47) + 
            L0x200198a8_f * (x**48) + L0x200198aa_f * (x**49) + 
            L0x200198ac_f * (x**50) + L0x200198ae_f * (x**51) + 
            L0x200198b0_f * (x**52) + L0x200198b2_f * (x**53) + 
            L0x200198b4_f * (x**54) + L0x200198b6_f * (x**55) + 
            L0x200198b8_f * (x**56) + L0x200198ba_f * (x**57) + 
            L0x200198bc_f * (x**58) + L0x200198be_f * (x**59) + 
            L0x200198c0_f * (x**60) + L0x200198c2_f * (x**61) + 
            L0x200198c4_f * (x**62) + L0x200198c6_f * (x**63) + 
            L0x200198c8_f * (x**64) + L0x200198ca_f * (x**65) + 
            L0x200198cc_f * (x**66) + L0x200198ce_f * (x**67) + 
            L0x200198d0_f * (x**68) + L0x200198d2_f * (x**69) + 
            L0x200198d4_f * (x**70) + L0x200198d6_f * (x**71) + 
            L0x200198d8_f * (x**72) + L0x200198da_f * (x**73) + 
            L0x200198dc_f * (x**74) + L0x200198de_f * (x**75) + 
            L0x200198e0_f * (x**76) + L0x200198e2_f * (x**77) + 
            L0x200198e4_f * (x**78) + L0x200198e6_f * (x**79) + 
            L0x200198e8_f * (x**80) + L0x200198ea_f * (x**81) + 
            L0x200198ec_f * (x**82) + L0x200198ee_f * (x**83) + 
            L0x200198f0_f * (x**84) + L0x200198f2_f * (x**85) + 
            L0x200198f4_f * (x**86) + L0x200198f6_f * (x**87) + 
            L0x200198f8_f * (x**88) + L0x200198fa_f * (x**89) + 
            L0x200198fc_f * (x**90) + L0x200198fe_f * (x**91) + 
            L0x20019900_f * (x**92) + L0x20019902_f * (x**93) + 
            L0x20019904_f * (x**94) + L0x20019906_f * (x**95) + 
            L0x20019908_f * (x**96) + L0x2001990a_f * (x**97) + 
            L0x2001990c_f * (x**98) + L0x2001990e_f * (x**99) + 
            L0x20019910_f * (x**100) + L0x20019912_f * (x**101) + 
            L0x20019914_f * (x**102) + L0x20019916_f * (x**103) + 
            L0x20019918_f * (x**104) + L0x2001991a_f * (x**105) + 
            L0x2001991c_f * (x**106) + L0x2001991e_f * (x**107) + 
            L0x20019920_f * (x**108) + L0x20019922_f * (x**109) + 
            L0x20019924_f * (x**110) + L0x20019926_f * (x**111) + 
            L0x20019928_f * (x**112) + L0x2001992a_f * (x**113) + 
            L0x2001992c_f * (x**114) + L0x2001992e_f * (x**115) + 
            L0x20019930_f * (x**116) + L0x20019932_f * (x**117) + 
            L0x20019934_f * (x**118) + L0x20019936_f * (x**119) + 
            L0x20019938_f * (x**120) + L0x2001993a_f * (x**121) + 
            L0x2001993c_f * (x**122) + L0x2001993e_f * (x**123) + 
            L0x20019940_f * (x**124) + L0x20019942_f * (x**125) + 
            L0x20019944_f * (x**126) + L0x20019946_f * (x**127) + 
            L0x20019948_f * (x**128) + L0x2001994a_f * (x**129) + 
            L0x2001994c_f * (x**130) + L0x2001994e_f * (x**131) + 
            L0x20019950_f * (x**132) + L0x20019952_f * (x**133) + 
            L0x20019954_f * (x**134) + L0x20019956_f * (x**135) + 
            L0x20019958_f * (x**136) + L0x2001995a_f * (x**137) + 
            L0x2001995c_f * (x**138) + L0x2001995e_f * (x**139) + 
            L0x20019960_f * (x**140) + L0x20019962_f * (x**141) + 
            L0x20019964_f * (x**142) + L0x20019966_f * (x**143) + 
            L0x20019968_f * (x**144) + L0x2001996a_f * (x**145) + 
            L0x2001996c_f * (x**146) + L0x2001996e_f * (x**147) + 
            L0x20019970_f * (x**148) + L0x20019972_f * (x**149) + 
            L0x20019974_f * (x**150) + L0x20019976_f * (x**151) + 
            L0x20019978_f * (x**152) + L0x2001997a_f * (x**153) + 
            L0x2001997c_f * (x**154) + L0x2001997e_f * (x**155) + 
            L0x20019980_f * (x**156) + L0x20019982_f * (x**157) + 
            L0x20019984_f * (x**158) + L0x20019986_f * (x**159) + 
            L0x20019988_f * (x**160) + L0x2001998a_f * (x**161) + 
            L0x2001998c_f * (x**162) + L0x2001998e_f * (x**163) + 
            L0x20019990_f * (x**164) + L0x20019992_f * (x**165) + 
            L0x20019994_f * (x**166) + L0x20019996_f * (x**167) + 
            L0x20019998_f * (x**168) + L0x2001999a_f * (x**169) + 
            L0x2001999c_f * (x**170) + L0x2001999e_f * (x**171) + 
            L0x200199a0_f * (x**172) + L0x200199a2_f * (x**173) + 
            L0x200199a4_f * (x**174) + L0x200199a6_f * (x**175) + 
            L0x200199a8_f * (x**176) + L0x200199aa_f * (x**177) + 
            L0x200199ac_f * (x**178) + L0x200199ae_f * (x**179) + 
            L0x200199b0_f * (x**180) + L0x200199b2_f * (x**181) + 
            L0x200199b4_f * (x**182) + L0x200199b6_f * (x**183) + 
            L0x200199b8_f * (x**184) + L0x200199ba_f * (x**185) + 
            L0x200199bc_f * (x**186) + L0x200199be_f * (x**187) + 
            L0x200199c0_f * (x**188) + L0x200199c2_f * (x**189) + 
            L0x200199c4_f * (x**190) + L0x200199c6_f * (x**191) + 
            L0x200199c8_f * (x**192) + L0x200199ca_f * (x**193) + 
            L0x200199cc_f * (x**194) + L0x200199ce_f * (x**195) + 
            L0x200199d0_f * (x**196) + L0x200199d2_f * (x**197) + 
            L0x200199d4_f * (x**198) + L0x200199d6_f * (x**199) + 
            L0x200199d8_f * (x**200) + L0x200199da_f * (x**201) + 
            L0x200199dc_f * (x**202) + L0x200199de_f * (x**203) + 
            L0x200199e0_f * (x**204) + L0x200199e2_f * (x**205) + 
            L0x200199e4_f * (x**206) + L0x200199e6_f * (x**207) + 
            L0x200199e8_f * (x**208) + L0x200199ea_f * (x**209) + 
            L0x200199ec_f * (x**210) + L0x200199ee_f * (x**211) + 
            L0x200199f0_f * (x**212) + L0x200199f2_f * (x**213) + 
            L0x200199f4_f * (x**214) + L0x200199f6_f * (x**215) + 
            L0x200199f8_f * (x**216) + L0x200199fa_f * (x**217) + 
            L0x200199fc_f * (x**218) + L0x200199fe_f * (x**219) + 
            L0x20019a00_f * (x**220) + L0x20019a02_f * (x**221) + 
            L0x20019a04_f * (x**222) + L0x20019a06_f * (x**223) + 
            L0x20019a08_f * (x**224) + L0x20019a0a_f * (x**225) + 
            L0x20019a0c_f * (x**226) + L0x20019a0e_f * (x**227) + 
            L0x20019a10_f * (x**228) + L0x20019a12_f * (x**229) + 
            L0x20019a14_f * (x**230) + L0x20019a16_f * (x**231) + 
            L0x20019a18_f * (x**232) + L0x20019a1a_f * (x**233) + 
            L0x20019a1c_f * (x**234) + L0x20019a1e_f * (x**235) + 
            L0x20019a20_f * (x**236) + L0x20019a22_f * (x**237) + 
            L0x20019a24_f * (x**238) + L0x20019a26_f * (x**239) + 
            L0x20019a28_f * (x**240) + L0x20019a2a_f * (x**241) + 
            L0x20019a2c_f * (x**242) + L0x20019a2e_f * (x**243) + 
            L0x20019a30_f * (x**244) + L0x20019a32_f * (x**245) + 
            L0x20019a34_f * (x**246) + L0x20019a36_f * (x**247) + 
            L0x20019a38_f * (x**248) + L0x20019a3a_f * (x**249) + 
            L0x20019a3c_f * (x**250) + L0x20019a3e_f * (x**251) + 
            L0x20019a40_f * (x**252) + L0x20019a42_f * (x**253) + 
            L0x20019a44_f * (x**254) + L0x20019a46_f * (x**255)
          )
          [25570049, x**4 - 710129],
    (* inp_poly_26 *)
    eqmod (2**32) * (inp_poly_26 * inp_poly_26)
          (
            L0x20019848_f * (x**0) + L0x2001984a_f * (x**1) + 
            L0x2001984c_f * (x**2) + L0x2001984e_f * (x**3) + 
            L0x20019850_f * (x**4) + L0x20019852_f * (x**5) + 
            L0x20019854_f * (x**6) + L0x20019856_f * (x**7) + 
            L0x20019858_f * (x**8) + L0x2001985a_f * (x**9) + 
            L0x2001985c_f * (x**10) + L0x2001985e_f * (x**11) + 
            L0x20019860_f * (x**12) + L0x20019862_f * (x**13) + 
            L0x20019864_f * (x**14) + L0x20019866_f * (x**15) + 
            L0x20019868_f * (x**16) + L0x2001986a_f * (x**17) + 
            L0x2001986c_f * (x**18) + L0x2001986e_f * (x**19) + 
            L0x20019870_f * (x**20) + L0x20019872_f * (x**21) + 
            L0x20019874_f * (x**22) + L0x20019876_f * (x**23) + 
            L0x20019878_f * (x**24) + L0x2001987a_f * (x**25) + 
            L0x2001987c_f * (x**26) + L0x2001987e_f * (x**27) + 
            L0x20019880_f * (x**28) + L0x20019882_f * (x**29) + 
            L0x20019884_f * (x**30) + L0x20019886_f * (x**31) + 
            L0x20019888_f * (x**32) + L0x2001988a_f * (x**33) + 
            L0x2001988c_f * (x**34) + L0x2001988e_f * (x**35) + 
            L0x20019890_f * (x**36) + L0x20019892_f * (x**37) + 
            L0x20019894_f * (x**38) + L0x20019896_f * (x**39) + 
            L0x20019898_f * (x**40) + L0x2001989a_f * (x**41) + 
            L0x2001989c_f * (x**42) + L0x2001989e_f * (x**43) + 
            L0x200198a0_f * (x**44) + L0x200198a2_f * (x**45) + 
            L0x200198a4_f * (x**46) + L0x200198a6_f * (x**47) + 
            L0x200198a8_f * (x**48) + L0x200198aa_f * (x**49) + 
            L0x200198ac_f * (x**50) + L0x200198ae_f * (x**51) + 
            L0x200198b0_f * (x**52) + L0x200198b2_f * (x**53) + 
            L0x200198b4_f * (x**54) + L0x200198b6_f * (x**55) + 
            L0x200198b8_f * (x**56) + L0x200198ba_f * (x**57) + 
            L0x200198bc_f * (x**58) + L0x200198be_f * (x**59) + 
            L0x200198c0_f * (x**60) + L0x200198c2_f * (x**61) + 
            L0x200198c4_f * (x**62) + L0x200198c6_f * (x**63) + 
            L0x200198c8_f * (x**64) + L0x200198ca_f * (x**65) + 
            L0x200198cc_f * (x**66) + L0x200198ce_f * (x**67) + 
            L0x200198d0_f * (x**68) + L0x200198d2_f * (x**69) + 
            L0x200198d4_f * (x**70) + L0x200198d6_f * (x**71) + 
            L0x200198d8_f * (x**72) + L0x200198da_f * (x**73) + 
            L0x200198dc_f * (x**74) + L0x200198de_f * (x**75) + 
            L0x200198e0_f * (x**76) + L0x200198e2_f * (x**77) + 
            L0x200198e4_f * (x**78) + L0x200198e6_f * (x**79) + 
            L0x200198e8_f * (x**80) + L0x200198ea_f * (x**81) + 
            L0x200198ec_f * (x**82) + L0x200198ee_f * (x**83) + 
            L0x200198f0_f * (x**84) + L0x200198f2_f * (x**85) + 
            L0x200198f4_f * (x**86) + L0x200198f6_f * (x**87) + 
            L0x200198f8_f * (x**88) + L0x200198fa_f * (x**89) + 
            L0x200198fc_f * (x**90) + L0x200198fe_f * (x**91) + 
            L0x20019900_f * (x**92) + L0x20019902_f * (x**93) + 
            L0x20019904_f * (x**94) + L0x20019906_f * (x**95) + 
            L0x20019908_f * (x**96) + L0x2001990a_f * (x**97) + 
            L0x2001990c_f * (x**98) + L0x2001990e_f * (x**99) + 
            L0x20019910_f * (x**100) + L0x20019912_f * (x**101) + 
            L0x20019914_f * (x**102) + L0x20019916_f * (x**103) + 
            L0x20019918_f * (x**104) + L0x2001991a_f * (x**105) + 
            L0x2001991c_f * (x**106) + L0x2001991e_f * (x**107) + 
            L0x20019920_f * (x**108) + L0x20019922_f * (x**109) + 
            L0x20019924_f * (x**110) + L0x20019926_f * (x**111) + 
            L0x20019928_f * (x**112) + L0x2001992a_f * (x**113) + 
            L0x2001992c_f * (x**114) + L0x2001992e_f * (x**115) + 
            L0x20019930_f * (x**116) + L0x20019932_f * (x**117) + 
            L0x20019934_f * (x**118) + L0x20019936_f * (x**119) + 
            L0x20019938_f * (x**120) + L0x2001993a_f * (x**121) + 
            L0x2001993c_f * (x**122) + L0x2001993e_f * (x**123) + 
            L0x20019940_f * (x**124) + L0x20019942_f * (x**125) + 
            L0x20019944_f * (x**126) + L0x20019946_f * (x**127) + 
            L0x20019948_f * (x**128) + L0x2001994a_f * (x**129) + 
            L0x2001994c_f * (x**130) + L0x2001994e_f * (x**131) + 
            L0x20019950_f * (x**132) + L0x20019952_f * (x**133) + 
            L0x20019954_f * (x**134) + L0x20019956_f * (x**135) + 
            L0x20019958_f * (x**136) + L0x2001995a_f * (x**137) + 
            L0x2001995c_f * (x**138) + L0x2001995e_f * (x**139) + 
            L0x20019960_f * (x**140) + L0x20019962_f * (x**141) + 
            L0x20019964_f * (x**142) + L0x20019966_f * (x**143) + 
            L0x20019968_f * (x**144) + L0x2001996a_f * (x**145) + 
            L0x2001996c_f * (x**146) + L0x2001996e_f * (x**147) + 
            L0x20019970_f * (x**148) + L0x20019972_f * (x**149) + 
            L0x20019974_f * (x**150) + L0x20019976_f * (x**151) + 
            L0x20019978_f * (x**152) + L0x2001997a_f * (x**153) + 
            L0x2001997c_f * (x**154) + L0x2001997e_f * (x**155) + 
            L0x20019980_f * (x**156) + L0x20019982_f * (x**157) + 
            L0x20019984_f * (x**158) + L0x20019986_f * (x**159) + 
            L0x20019988_f * (x**160) + L0x2001998a_f * (x**161) + 
            L0x2001998c_f * (x**162) + L0x2001998e_f * (x**163) + 
            L0x20019990_f * (x**164) + L0x20019992_f * (x**165) + 
            L0x20019994_f * (x**166) + L0x20019996_f * (x**167) + 
            L0x20019998_f * (x**168) + L0x2001999a_f * (x**169) + 
            L0x2001999c_f * (x**170) + L0x2001999e_f * (x**171) + 
            L0x200199a0_f * (x**172) + L0x200199a2_f * (x**173) + 
            L0x200199a4_f * (x**174) + L0x200199a6_f * (x**175) + 
            L0x200199a8_f * (x**176) + L0x200199aa_f * (x**177) + 
            L0x200199ac_f * (x**178) + L0x200199ae_f * (x**179) + 
            L0x200199b0_f * (x**180) + L0x200199b2_f * (x**181) + 
            L0x200199b4_f * (x**182) + L0x200199b6_f * (x**183) + 
            L0x200199b8_f * (x**184) + L0x200199ba_f * (x**185) + 
            L0x200199bc_f * (x**186) + L0x200199be_f * (x**187) + 
            L0x200199c0_f * (x**188) + L0x200199c2_f * (x**189) + 
            L0x200199c4_f * (x**190) + L0x200199c6_f * (x**191) + 
            L0x200199c8_f * (x**192) + L0x200199ca_f * (x**193) + 
            L0x200199cc_f * (x**194) + L0x200199ce_f * (x**195) + 
            L0x200199d0_f * (x**196) + L0x200199d2_f * (x**197) + 
            L0x200199d4_f * (x**198) + L0x200199d6_f * (x**199) + 
            L0x200199d8_f * (x**200) + L0x200199da_f * (x**201) + 
            L0x200199dc_f * (x**202) + L0x200199de_f * (x**203) + 
            L0x200199e0_f * (x**204) + L0x200199e2_f * (x**205) + 
            L0x200199e4_f * (x**206) + L0x200199e6_f * (x**207) + 
            L0x200199e8_f * (x**208) + L0x200199ea_f * (x**209) + 
            L0x200199ec_f * (x**210) + L0x200199ee_f * (x**211) + 
            L0x200199f0_f * (x**212) + L0x200199f2_f * (x**213) + 
            L0x200199f4_f * (x**214) + L0x200199f6_f * (x**215) + 
            L0x200199f8_f * (x**216) + L0x200199fa_f * (x**217) + 
            L0x200199fc_f * (x**218) + L0x200199fe_f * (x**219) + 
            L0x20019a00_f * (x**220) + L0x20019a02_f * (x**221) + 
            L0x20019a04_f * (x**222) + L0x20019a06_f * (x**223) + 
            L0x20019a08_f * (x**224) + L0x20019a0a_f * (x**225) + 
            L0x20019a0c_f * (x**226) + L0x20019a0e_f * (x**227) + 
            L0x20019a10_f * (x**228) + L0x20019a12_f * (x**229) + 
            L0x20019a14_f * (x**230) + L0x20019a16_f * (x**231) + 
            L0x20019a18_f * (x**232) + L0x20019a1a_f * (x**233) + 
            L0x20019a1c_f * (x**234) + L0x20019a1e_f * (x**235) + 
            L0x20019a20_f * (x**236) + L0x20019a22_f * (x**237) + 
            L0x20019a24_f * (x**238) + L0x20019a26_f * (x**239) + 
            L0x20019a28_f * (x**240) + L0x20019a2a_f * (x**241) + 
            L0x20019a2c_f * (x**242) + L0x20019a2e_f * (x**243) + 
            L0x20019a30_f * (x**244) + L0x20019a32_f * (x**245) + 
            L0x20019a34_f * (x**246) + L0x20019a36_f * (x**247) + 
            L0x20019a38_f * (x**248) + L0x20019a3a_f * (x**249) + 
            L0x20019a3c_f * (x**250) + L0x20019a3e_f * (x**251) + 
            L0x20019a40_f * (x**252) + L0x20019a42_f * (x**253) + 
            L0x20019a44_f * (x**254) + L0x20019a46_f * (x**255)
          )
          [25570049, x**4 - 4519508],
    (* inp_poly_27 *)
    eqmod (2**32) * (inp_poly_27 * inp_poly_27)
          (
            L0x20019848_f * (x**0) + L0x2001984a_f * (x**1) + 
            L0x2001984c_f * (x**2) + L0x2001984e_f * (x**3) + 
            L0x20019850_f * (x**4) + L0x20019852_f * (x**5) + 
            L0x20019854_f * (x**6) + L0x20019856_f * (x**7) + 
            L0x20019858_f * (x**8) + L0x2001985a_f * (x**9) + 
            L0x2001985c_f * (x**10) + L0x2001985e_f * (x**11) + 
            L0x20019860_f * (x**12) + L0x20019862_f * (x**13) + 
            L0x20019864_f * (x**14) + L0x20019866_f * (x**15) + 
            L0x20019868_f * (x**16) + L0x2001986a_f * (x**17) + 
            L0x2001986c_f * (x**18) + L0x2001986e_f * (x**19) + 
            L0x20019870_f * (x**20) + L0x20019872_f * (x**21) + 
            L0x20019874_f * (x**22) + L0x20019876_f * (x**23) + 
            L0x20019878_f * (x**24) + L0x2001987a_f * (x**25) + 
            L0x2001987c_f * (x**26) + L0x2001987e_f * (x**27) + 
            L0x20019880_f * (x**28) + L0x20019882_f * (x**29) + 
            L0x20019884_f * (x**30) + L0x20019886_f * (x**31) + 
            L0x20019888_f * (x**32) + L0x2001988a_f * (x**33) + 
            L0x2001988c_f * (x**34) + L0x2001988e_f * (x**35) + 
            L0x20019890_f * (x**36) + L0x20019892_f * (x**37) + 
            L0x20019894_f * (x**38) + L0x20019896_f * (x**39) + 
            L0x20019898_f * (x**40) + L0x2001989a_f * (x**41) + 
            L0x2001989c_f * (x**42) + L0x2001989e_f * (x**43) + 
            L0x200198a0_f * (x**44) + L0x200198a2_f * (x**45) + 
            L0x200198a4_f * (x**46) + L0x200198a6_f * (x**47) + 
            L0x200198a8_f * (x**48) + L0x200198aa_f * (x**49) + 
            L0x200198ac_f * (x**50) + L0x200198ae_f * (x**51) + 
            L0x200198b0_f * (x**52) + L0x200198b2_f * (x**53) + 
            L0x200198b4_f * (x**54) + L0x200198b6_f * (x**55) + 
            L0x200198b8_f * (x**56) + L0x200198ba_f * (x**57) + 
            L0x200198bc_f * (x**58) + L0x200198be_f * (x**59) + 
            L0x200198c0_f * (x**60) + L0x200198c2_f * (x**61) + 
            L0x200198c4_f * (x**62) + L0x200198c6_f * (x**63) + 
            L0x200198c8_f * (x**64) + L0x200198ca_f * (x**65) + 
            L0x200198cc_f * (x**66) + L0x200198ce_f * (x**67) + 
            L0x200198d0_f * (x**68) + L0x200198d2_f * (x**69) + 
            L0x200198d4_f * (x**70) + L0x200198d6_f * (x**71) + 
            L0x200198d8_f * (x**72) + L0x200198da_f * (x**73) + 
            L0x200198dc_f * (x**74) + L0x200198de_f * (x**75) + 
            L0x200198e0_f * (x**76) + L0x200198e2_f * (x**77) + 
            L0x200198e4_f * (x**78) + L0x200198e6_f * (x**79) + 
            L0x200198e8_f * (x**80) + L0x200198ea_f * (x**81) + 
            L0x200198ec_f * (x**82) + L0x200198ee_f * (x**83) + 
            L0x200198f0_f * (x**84) + L0x200198f2_f * (x**85) + 
            L0x200198f4_f * (x**86) + L0x200198f6_f * (x**87) + 
            L0x200198f8_f * (x**88) + L0x200198fa_f * (x**89) + 
            L0x200198fc_f * (x**90) + L0x200198fe_f * (x**91) + 
            L0x20019900_f * (x**92) + L0x20019902_f * (x**93) + 
            L0x20019904_f * (x**94) + L0x20019906_f * (x**95) + 
            L0x20019908_f * (x**96) + L0x2001990a_f * (x**97) + 
            L0x2001990c_f * (x**98) + L0x2001990e_f * (x**99) + 
            L0x20019910_f * (x**100) + L0x20019912_f * (x**101) + 
            L0x20019914_f * (x**102) + L0x20019916_f * (x**103) + 
            L0x20019918_f * (x**104) + L0x2001991a_f * (x**105) + 
            L0x2001991c_f * (x**106) + L0x2001991e_f * (x**107) + 
            L0x20019920_f * (x**108) + L0x20019922_f * (x**109) + 
            L0x20019924_f * (x**110) + L0x20019926_f * (x**111) + 
            L0x20019928_f * (x**112) + L0x2001992a_f * (x**113) + 
            L0x2001992c_f * (x**114) + L0x2001992e_f * (x**115) + 
            L0x20019930_f * (x**116) + L0x20019932_f * (x**117) + 
            L0x20019934_f * (x**118) + L0x20019936_f * (x**119) + 
            L0x20019938_f * (x**120) + L0x2001993a_f * (x**121) + 
            L0x2001993c_f * (x**122) + L0x2001993e_f * (x**123) + 
            L0x20019940_f * (x**124) + L0x20019942_f * (x**125) + 
            L0x20019944_f * (x**126) + L0x20019946_f * (x**127) + 
            L0x20019948_f * (x**128) + L0x2001994a_f * (x**129) + 
            L0x2001994c_f * (x**130) + L0x2001994e_f * (x**131) + 
            L0x20019950_f * (x**132) + L0x20019952_f * (x**133) + 
            L0x20019954_f * (x**134) + L0x20019956_f * (x**135) + 
            L0x20019958_f * (x**136) + L0x2001995a_f * (x**137) + 
            L0x2001995c_f * (x**138) + L0x2001995e_f * (x**139) + 
            L0x20019960_f * (x**140) + L0x20019962_f * (x**141) + 
            L0x20019964_f * (x**142) + L0x20019966_f * (x**143) + 
            L0x20019968_f * (x**144) + L0x2001996a_f * (x**145) + 
            L0x2001996c_f * (x**146) + L0x2001996e_f * (x**147) + 
            L0x20019970_f * (x**148) + L0x20019972_f * (x**149) + 
            L0x20019974_f * (x**150) + L0x20019976_f * (x**151) + 
            L0x20019978_f * (x**152) + L0x2001997a_f * (x**153) + 
            L0x2001997c_f * (x**154) + L0x2001997e_f * (x**155) + 
            L0x20019980_f * (x**156) + L0x20019982_f * (x**157) + 
            L0x20019984_f * (x**158) + L0x20019986_f * (x**159) + 
            L0x20019988_f * (x**160) + L0x2001998a_f * (x**161) + 
            L0x2001998c_f * (x**162) + L0x2001998e_f * (x**163) + 
            L0x20019990_f * (x**164) + L0x20019992_f * (x**165) + 
            L0x20019994_f * (x**166) + L0x20019996_f * (x**167) + 
            L0x20019998_f * (x**168) + L0x2001999a_f * (x**169) + 
            L0x2001999c_f * (x**170) + L0x2001999e_f * (x**171) + 
            L0x200199a0_f * (x**172) + L0x200199a2_f * (x**173) + 
            L0x200199a4_f * (x**174) + L0x200199a6_f * (x**175) + 
            L0x200199a8_f * (x**176) + L0x200199aa_f * (x**177) + 
            L0x200199ac_f * (x**178) + L0x200199ae_f * (x**179) + 
            L0x200199b0_f * (x**180) + L0x200199b2_f * (x**181) + 
            L0x200199b4_f * (x**182) + L0x200199b6_f * (x**183) + 
            L0x200199b8_f * (x**184) + L0x200199ba_f * (x**185) + 
            L0x200199bc_f * (x**186) + L0x200199be_f * (x**187) + 
            L0x200199c0_f * (x**188) + L0x200199c2_f * (x**189) + 
            L0x200199c4_f * (x**190) + L0x200199c6_f * (x**191) + 
            L0x200199c8_f * (x**192) + L0x200199ca_f * (x**193) + 
            L0x200199cc_f * (x**194) + L0x200199ce_f * (x**195) + 
            L0x200199d0_f * (x**196) + L0x200199d2_f * (x**197) + 
            L0x200199d4_f * (x**198) + L0x200199d6_f * (x**199) + 
            L0x200199d8_f * (x**200) + L0x200199da_f * (x**201) + 
            L0x200199dc_f * (x**202) + L0x200199de_f * (x**203) + 
            L0x200199e0_f * (x**204) + L0x200199e2_f * (x**205) + 
            L0x200199e4_f * (x**206) + L0x200199e6_f * (x**207) + 
            L0x200199e8_f * (x**208) + L0x200199ea_f * (x**209) + 
            L0x200199ec_f * (x**210) + L0x200199ee_f * (x**211) + 
            L0x200199f0_f * (x**212) + L0x200199f2_f * (x**213) + 
            L0x200199f4_f * (x**214) + L0x200199f6_f * (x**215) + 
            L0x200199f8_f * (x**216) + L0x200199fa_f * (x**217) + 
            L0x200199fc_f * (x**218) + L0x200199fe_f * (x**219) + 
            L0x20019a00_f * (x**220) + L0x20019a02_f * (x**221) + 
            L0x20019a04_f * (x**222) + L0x20019a06_f * (x**223) + 
            L0x20019a08_f * (x**224) + L0x20019a0a_f * (x**225) + 
            L0x20019a0c_f * (x**226) + L0x20019a0e_f * (x**227) + 
            L0x20019a10_f * (x**228) + L0x20019a12_f * (x**229) + 
            L0x20019a14_f * (x**230) + L0x20019a16_f * (x**231) + 
            L0x20019a18_f * (x**232) + L0x20019a1a_f * (x**233) + 
            L0x20019a1c_f * (x**234) + L0x20019a1e_f * (x**235) + 
            L0x20019a20_f * (x**236) + L0x20019a22_f * (x**237) + 
            L0x20019a24_f * (x**238) + L0x20019a26_f * (x**239) + 
            L0x20019a28_f * (x**240) + L0x20019a2a_f * (x**241) + 
            L0x20019a2c_f * (x**242) + L0x20019a2e_f * (x**243) + 
            L0x20019a30_f * (x**244) + L0x20019a32_f * (x**245) + 
            L0x20019a34_f * (x**246) + L0x20019a36_f * (x**247) + 
            L0x20019a38_f * (x**248) + L0x20019a3a_f * (x**249) + 
            L0x20019a3c_f * (x**250) + L0x20019a3e_f * (x**251) + 
            L0x20019a40_f * (x**252) + L0x20019a42_f * (x**253) + 
            L0x20019a44_f * (x**254) + L0x20019a46_f * (x**255)
          )
          [25570049, x**4 - 21050541],
    (* inp_poly_28 *)
    eqmod (2**32) * (inp_poly_28 * inp_poly_28)
          (
            L0x20019848_f * (x**0) + L0x2001984a_f * (x**1) + 
            L0x2001984c_f * (x**2) + L0x2001984e_f * (x**3) + 
            L0x20019850_f * (x**4) + L0x20019852_f * (x**5) + 
            L0x20019854_f * (x**6) + L0x20019856_f * (x**7) + 
            L0x20019858_f * (x**8) + L0x2001985a_f * (x**9) + 
            L0x2001985c_f * (x**10) + L0x2001985e_f * (x**11) + 
            L0x20019860_f * (x**12) + L0x20019862_f * (x**13) + 
            L0x20019864_f * (x**14) + L0x20019866_f * (x**15) + 
            L0x20019868_f * (x**16) + L0x2001986a_f * (x**17) + 
            L0x2001986c_f * (x**18) + L0x2001986e_f * (x**19) + 
            L0x20019870_f * (x**20) + L0x20019872_f * (x**21) + 
            L0x20019874_f * (x**22) + L0x20019876_f * (x**23) + 
            L0x20019878_f * (x**24) + L0x2001987a_f * (x**25) + 
            L0x2001987c_f * (x**26) + L0x2001987e_f * (x**27) + 
            L0x20019880_f * (x**28) + L0x20019882_f * (x**29) + 
            L0x20019884_f * (x**30) + L0x20019886_f * (x**31) + 
            L0x20019888_f * (x**32) + L0x2001988a_f * (x**33) + 
            L0x2001988c_f * (x**34) + L0x2001988e_f * (x**35) + 
            L0x20019890_f * (x**36) + L0x20019892_f * (x**37) + 
            L0x20019894_f * (x**38) + L0x20019896_f * (x**39) + 
            L0x20019898_f * (x**40) + L0x2001989a_f * (x**41) + 
            L0x2001989c_f * (x**42) + L0x2001989e_f * (x**43) + 
            L0x200198a0_f * (x**44) + L0x200198a2_f * (x**45) + 
            L0x200198a4_f * (x**46) + L0x200198a6_f * (x**47) + 
            L0x200198a8_f * (x**48) + L0x200198aa_f * (x**49) + 
            L0x200198ac_f * (x**50) + L0x200198ae_f * (x**51) + 
            L0x200198b0_f * (x**52) + L0x200198b2_f * (x**53) + 
            L0x200198b4_f * (x**54) + L0x200198b6_f * (x**55) + 
            L0x200198b8_f * (x**56) + L0x200198ba_f * (x**57) + 
            L0x200198bc_f * (x**58) + L0x200198be_f * (x**59) + 
            L0x200198c0_f * (x**60) + L0x200198c2_f * (x**61) + 
            L0x200198c4_f * (x**62) + L0x200198c6_f * (x**63) + 
            L0x200198c8_f * (x**64) + L0x200198ca_f * (x**65) + 
            L0x200198cc_f * (x**66) + L0x200198ce_f * (x**67) + 
            L0x200198d0_f * (x**68) + L0x200198d2_f * (x**69) + 
            L0x200198d4_f * (x**70) + L0x200198d6_f * (x**71) + 
            L0x200198d8_f * (x**72) + L0x200198da_f * (x**73) + 
            L0x200198dc_f * (x**74) + L0x200198de_f * (x**75) + 
            L0x200198e0_f * (x**76) + L0x200198e2_f * (x**77) + 
            L0x200198e4_f * (x**78) + L0x200198e6_f * (x**79) + 
            L0x200198e8_f * (x**80) + L0x200198ea_f * (x**81) + 
            L0x200198ec_f * (x**82) + L0x200198ee_f * (x**83) + 
            L0x200198f0_f * (x**84) + L0x200198f2_f * (x**85) + 
            L0x200198f4_f * (x**86) + L0x200198f6_f * (x**87) + 
            L0x200198f8_f * (x**88) + L0x200198fa_f * (x**89) + 
            L0x200198fc_f * (x**90) + L0x200198fe_f * (x**91) + 
            L0x20019900_f * (x**92) + L0x20019902_f * (x**93) + 
            L0x20019904_f * (x**94) + L0x20019906_f * (x**95) + 
            L0x20019908_f * (x**96) + L0x2001990a_f * (x**97) + 
            L0x2001990c_f * (x**98) + L0x2001990e_f * (x**99) + 
            L0x20019910_f * (x**100) + L0x20019912_f * (x**101) + 
            L0x20019914_f * (x**102) + L0x20019916_f * (x**103) + 
            L0x20019918_f * (x**104) + L0x2001991a_f * (x**105) + 
            L0x2001991c_f * (x**106) + L0x2001991e_f * (x**107) + 
            L0x20019920_f * (x**108) + L0x20019922_f * (x**109) + 
            L0x20019924_f * (x**110) + L0x20019926_f * (x**111) + 
            L0x20019928_f * (x**112) + L0x2001992a_f * (x**113) + 
            L0x2001992c_f * (x**114) + L0x2001992e_f * (x**115) + 
            L0x20019930_f * (x**116) + L0x20019932_f * (x**117) + 
            L0x20019934_f * (x**118) + L0x20019936_f * (x**119) + 
            L0x20019938_f * (x**120) + L0x2001993a_f * (x**121) + 
            L0x2001993c_f * (x**122) + L0x2001993e_f * (x**123) + 
            L0x20019940_f * (x**124) + L0x20019942_f * (x**125) + 
            L0x20019944_f * (x**126) + L0x20019946_f * (x**127) + 
            L0x20019948_f * (x**128) + L0x2001994a_f * (x**129) + 
            L0x2001994c_f * (x**130) + L0x2001994e_f * (x**131) + 
            L0x20019950_f * (x**132) + L0x20019952_f * (x**133) + 
            L0x20019954_f * (x**134) + L0x20019956_f * (x**135) + 
            L0x20019958_f * (x**136) + L0x2001995a_f * (x**137) + 
            L0x2001995c_f * (x**138) + L0x2001995e_f * (x**139) + 
            L0x20019960_f * (x**140) + L0x20019962_f * (x**141) + 
            L0x20019964_f * (x**142) + L0x20019966_f * (x**143) + 
            L0x20019968_f * (x**144) + L0x2001996a_f * (x**145) + 
            L0x2001996c_f * (x**146) + L0x2001996e_f * (x**147) + 
            L0x20019970_f * (x**148) + L0x20019972_f * (x**149) + 
            L0x20019974_f * (x**150) + L0x20019976_f * (x**151) + 
            L0x20019978_f * (x**152) + L0x2001997a_f * (x**153) + 
            L0x2001997c_f * (x**154) + L0x2001997e_f * (x**155) + 
            L0x20019980_f * (x**156) + L0x20019982_f * (x**157) + 
            L0x20019984_f * (x**158) + L0x20019986_f * (x**159) + 
            L0x20019988_f * (x**160) + L0x2001998a_f * (x**161) + 
            L0x2001998c_f * (x**162) + L0x2001998e_f * (x**163) + 
            L0x20019990_f * (x**164) + L0x20019992_f * (x**165) + 
            L0x20019994_f * (x**166) + L0x20019996_f * (x**167) + 
            L0x20019998_f * (x**168) + L0x2001999a_f * (x**169) + 
            L0x2001999c_f * (x**170) + L0x2001999e_f * (x**171) + 
            L0x200199a0_f * (x**172) + L0x200199a2_f * (x**173) + 
            L0x200199a4_f * (x**174) + L0x200199a6_f * (x**175) + 
            L0x200199a8_f * (x**176) + L0x200199aa_f * (x**177) + 
            L0x200199ac_f * (x**178) + L0x200199ae_f * (x**179) + 
            L0x200199b0_f * (x**180) + L0x200199b2_f * (x**181) + 
            L0x200199b4_f * (x**182) + L0x200199b6_f * (x**183) + 
            L0x200199b8_f * (x**184) + L0x200199ba_f * (x**185) + 
            L0x200199bc_f * (x**186) + L0x200199be_f * (x**187) + 
            L0x200199c0_f * (x**188) + L0x200199c2_f * (x**189) + 
            L0x200199c4_f * (x**190) + L0x200199c6_f * (x**191) + 
            L0x200199c8_f * (x**192) + L0x200199ca_f * (x**193) + 
            L0x200199cc_f * (x**194) + L0x200199ce_f * (x**195) + 
            L0x200199d0_f * (x**196) + L0x200199d2_f * (x**197) + 
            L0x200199d4_f * (x**198) + L0x200199d6_f * (x**199) + 
            L0x200199d8_f * (x**200) + L0x200199da_f * (x**201) + 
            L0x200199dc_f * (x**202) + L0x200199de_f * (x**203) + 
            L0x200199e0_f * (x**204) + L0x200199e2_f * (x**205) + 
            L0x200199e4_f * (x**206) + L0x200199e6_f * (x**207) + 
            L0x200199e8_f * (x**208) + L0x200199ea_f * (x**209) + 
            L0x200199ec_f * (x**210) + L0x200199ee_f * (x**211) + 
            L0x200199f0_f * (x**212) + L0x200199f2_f * (x**213) + 
            L0x200199f4_f * (x**214) + L0x200199f6_f * (x**215) + 
            L0x200199f8_f * (x**216) + L0x200199fa_f * (x**217) + 
            L0x200199fc_f * (x**218) + L0x200199fe_f * (x**219) + 
            L0x20019a00_f * (x**220) + L0x20019a02_f * (x**221) + 
            L0x20019a04_f * (x**222) + L0x20019a06_f * (x**223) + 
            L0x20019a08_f * (x**224) + L0x20019a0a_f * (x**225) + 
            L0x20019a0c_f * (x**226) + L0x20019a0e_f * (x**227) + 
            L0x20019a10_f * (x**228) + L0x20019a12_f * (x**229) + 
            L0x20019a14_f * (x**230) + L0x20019a16_f * (x**231) + 
            L0x20019a18_f * (x**232) + L0x20019a1a_f * (x**233) + 
            L0x20019a1c_f * (x**234) + L0x20019a1e_f * (x**235) + 
            L0x20019a20_f * (x**236) + L0x20019a22_f * (x**237) + 
            L0x20019a24_f * (x**238) + L0x20019a26_f * (x**239) + 
            L0x20019a28_f * (x**240) + L0x20019a2a_f * (x**241) + 
            L0x20019a2c_f * (x**242) + L0x20019a2e_f * (x**243) + 
            L0x20019a30_f * (x**244) + L0x20019a32_f * (x**245) + 
            L0x20019a34_f * (x**246) + L0x20019a36_f * (x**247) + 
            L0x20019a38_f * (x**248) + L0x20019a3a_f * (x**249) + 
            L0x20019a3c_f * (x**250) + L0x20019a3e_f * (x**251) + 
            L0x20019a40_f * (x**252) + L0x20019a42_f * (x**253) + 
            L0x20019a44_f * (x**254) + L0x20019a46_f * (x**255)
          )
          [25570049, x**4 - 1712131],
    (* inp_poly_29 *)
    eqmod (2**32) * (inp_poly_29 * inp_poly_29)
          (
            L0x20019848_f * (x**0) + L0x2001984a_f * (x**1) + 
            L0x2001984c_f * (x**2) + L0x2001984e_f * (x**3) + 
            L0x20019850_f * (x**4) + L0x20019852_f * (x**5) + 
            L0x20019854_f * (x**6) + L0x20019856_f * (x**7) + 
            L0x20019858_f * (x**8) + L0x2001985a_f * (x**9) + 
            L0x2001985c_f * (x**10) + L0x2001985e_f * (x**11) + 
            L0x20019860_f * (x**12) + L0x20019862_f * (x**13) + 
            L0x20019864_f * (x**14) + L0x20019866_f * (x**15) + 
            L0x20019868_f * (x**16) + L0x2001986a_f * (x**17) + 
            L0x2001986c_f * (x**18) + L0x2001986e_f * (x**19) + 
            L0x20019870_f * (x**20) + L0x20019872_f * (x**21) + 
            L0x20019874_f * (x**22) + L0x20019876_f * (x**23) + 
            L0x20019878_f * (x**24) + L0x2001987a_f * (x**25) + 
            L0x2001987c_f * (x**26) + L0x2001987e_f * (x**27) + 
            L0x20019880_f * (x**28) + L0x20019882_f * (x**29) + 
            L0x20019884_f * (x**30) + L0x20019886_f * (x**31) + 
            L0x20019888_f * (x**32) + L0x2001988a_f * (x**33) + 
            L0x2001988c_f * (x**34) + L0x2001988e_f * (x**35) + 
            L0x20019890_f * (x**36) + L0x20019892_f * (x**37) + 
            L0x20019894_f * (x**38) + L0x20019896_f * (x**39) + 
            L0x20019898_f * (x**40) + L0x2001989a_f * (x**41) + 
            L0x2001989c_f * (x**42) + L0x2001989e_f * (x**43) + 
            L0x200198a0_f * (x**44) + L0x200198a2_f * (x**45) + 
            L0x200198a4_f * (x**46) + L0x200198a6_f * (x**47) + 
            L0x200198a8_f * (x**48) + L0x200198aa_f * (x**49) + 
            L0x200198ac_f * (x**50) + L0x200198ae_f * (x**51) + 
            L0x200198b0_f * (x**52) + L0x200198b2_f * (x**53) + 
            L0x200198b4_f * (x**54) + L0x200198b6_f * (x**55) + 
            L0x200198b8_f * (x**56) + L0x200198ba_f * (x**57) + 
            L0x200198bc_f * (x**58) + L0x200198be_f * (x**59) + 
            L0x200198c0_f * (x**60) + L0x200198c2_f * (x**61) + 
            L0x200198c4_f * (x**62) + L0x200198c6_f * (x**63) + 
            L0x200198c8_f * (x**64) + L0x200198ca_f * (x**65) + 
            L0x200198cc_f * (x**66) + L0x200198ce_f * (x**67) + 
            L0x200198d0_f * (x**68) + L0x200198d2_f * (x**69) + 
            L0x200198d4_f * (x**70) + L0x200198d6_f * (x**71) + 
            L0x200198d8_f * (x**72) + L0x200198da_f * (x**73) + 
            L0x200198dc_f * (x**74) + L0x200198de_f * (x**75) + 
            L0x200198e0_f * (x**76) + L0x200198e2_f * (x**77) + 
            L0x200198e4_f * (x**78) + L0x200198e6_f * (x**79) + 
            L0x200198e8_f * (x**80) + L0x200198ea_f * (x**81) + 
            L0x200198ec_f * (x**82) + L0x200198ee_f * (x**83) + 
            L0x200198f0_f * (x**84) + L0x200198f2_f * (x**85) + 
            L0x200198f4_f * (x**86) + L0x200198f6_f * (x**87) + 
            L0x200198f8_f * (x**88) + L0x200198fa_f * (x**89) + 
            L0x200198fc_f * (x**90) + L0x200198fe_f * (x**91) + 
            L0x20019900_f * (x**92) + L0x20019902_f * (x**93) + 
            L0x20019904_f * (x**94) + L0x20019906_f * (x**95) + 
            L0x20019908_f * (x**96) + L0x2001990a_f * (x**97) + 
            L0x2001990c_f * (x**98) + L0x2001990e_f * (x**99) + 
            L0x20019910_f * (x**100) + L0x20019912_f * (x**101) + 
            L0x20019914_f * (x**102) + L0x20019916_f * (x**103) + 
            L0x20019918_f * (x**104) + L0x2001991a_f * (x**105) + 
            L0x2001991c_f * (x**106) + L0x2001991e_f * (x**107) + 
            L0x20019920_f * (x**108) + L0x20019922_f * (x**109) + 
            L0x20019924_f * (x**110) + L0x20019926_f * (x**111) + 
            L0x20019928_f * (x**112) + L0x2001992a_f * (x**113) + 
            L0x2001992c_f * (x**114) + L0x2001992e_f * (x**115) + 
            L0x20019930_f * (x**116) + L0x20019932_f * (x**117) + 
            L0x20019934_f * (x**118) + L0x20019936_f * (x**119) + 
            L0x20019938_f * (x**120) + L0x2001993a_f * (x**121) + 
            L0x2001993c_f * (x**122) + L0x2001993e_f * (x**123) + 
            L0x20019940_f * (x**124) + L0x20019942_f * (x**125) + 
            L0x20019944_f * (x**126) + L0x20019946_f * (x**127) + 
            L0x20019948_f * (x**128) + L0x2001994a_f * (x**129) + 
            L0x2001994c_f * (x**130) + L0x2001994e_f * (x**131) + 
            L0x20019950_f * (x**132) + L0x20019952_f * (x**133) + 
            L0x20019954_f * (x**134) + L0x20019956_f * (x**135) + 
            L0x20019958_f * (x**136) + L0x2001995a_f * (x**137) + 
            L0x2001995c_f * (x**138) + L0x2001995e_f * (x**139) + 
            L0x20019960_f * (x**140) + L0x20019962_f * (x**141) + 
            L0x20019964_f * (x**142) + L0x20019966_f * (x**143) + 
            L0x20019968_f * (x**144) + L0x2001996a_f * (x**145) + 
            L0x2001996c_f * (x**146) + L0x2001996e_f * (x**147) + 
            L0x20019970_f * (x**148) + L0x20019972_f * (x**149) + 
            L0x20019974_f * (x**150) + L0x20019976_f * (x**151) + 
            L0x20019978_f * (x**152) + L0x2001997a_f * (x**153) + 
            L0x2001997c_f * (x**154) + L0x2001997e_f * (x**155) + 
            L0x20019980_f * (x**156) + L0x20019982_f * (x**157) + 
            L0x20019984_f * (x**158) + L0x20019986_f * (x**159) + 
            L0x20019988_f * (x**160) + L0x2001998a_f * (x**161) + 
            L0x2001998c_f * (x**162) + L0x2001998e_f * (x**163) + 
            L0x20019990_f * (x**164) + L0x20019992_f * (x**165) + 
            L0x20019994_f * (x**166) + L0x20019996_f * (x**167) + 
            L0x20019998_f * (x**168) + L0x2001999a_f * (x**169) + 
            L0x2001999c_f * (x**170) + L0x2001999e_f * (x**171) + 
            L0x200199a0_f * (x**172) + L0x200199a2_f * (x**173) + 
            L0x200199a4_f * (x**174) + L0x200199a6_f * (x**175) + 
            L0x200199a8_f * (x**176) + L0x200199aa_f * (x**177) + 
            L0x200199ac_f * (x**178) + L0x200199ae_f * (x**179) + 
            L0x200199b0_f * (x**180) + L0x200199b2_f * (x**181) + 
            L0x200199b4_f * (x**182) + L0x200199b6_f * (x**183) + 
            L0x200199b8_f * (x**184) + L0x200199ba_f * (x**185) + 
            L0x200199bc_f * (x**186) + L0x200199be_f * (x**187) + 
            L0x200199c0_f * (x**188) + L0x200199c2_f * (x**189) + 
            L0x200199c4_f * (x**190) + L0x200199c6_f * (x**191) + 
            L0x200199c8_f * (x**192) + L0x200199ca_f * (x**193) + 
            L0x200199cc_f * (x**194) + L0x200199ce_f * (x**195) + 
            L0x200199d0_f * (x**196) + L0x200199d2_f * (x**197) + 
            L0x200199d4_f * (x**198) + L0x200199d6_f * (x**199) + 
            L0x200199d8_f * (x**200) + L0x200199da_f * (x**201) + 
            L0x200199dc_f * (x**202) + L0x200199de_f * (x**203) + 
            L0x200199e0_f * (x**204) + L0x200199e2_f * (x**205) + 
            L0x200199e4_f * (x**206) + L0x200199e6_f * (x**207) + 
            L0x200199e8_f * (x**208) + L0x200199ea_f * (x**209) + 
            L0x200199ec_f * (x**210) + L0x200199ee_f * (x**211) + 
            L0x200199f0_f * (x**212) + L0x200199f2_f * (x**213) + 
            L0x200199f4_f * (x**214) + L0x200199f6_f * (x**215) + 
            L0x200199f8_f * (x**216) + L0x200199fa_f * (x**217) + 
            L0x200199fc_f * (x**218) + L0x200199fe_f * (x**219) + 
            L0x20019a00_f * (x**220) + L0x20019a02_f * (x**221) + 
            L0x20019a04_f * (x**222) + L0x20019a06_f * (x**223) + 
            L0x20019a08_f * (x**224) + L0x20019a0a_f * (x**225) + 
            L0x20019a0c_f * (x**226) + L0x20019a0e_f * (x**227) + 
            L0x20019a10_f * (x**228) + L0x20019a12_f * (x**229) + 
            L0x20019a14_f * (x**230) + L0x20019a16_f * (x**231) + 
            L0x20019a18_f * (x**232) + L0x20019a1a_f * (x**233) + 
            L0x20019a1c_f * (x**234) + L0x20019a1e_f * (x**235) + 
            L0x20019a20_f * (x**236) + L0x20019a22_f * (x**237) + 
            L0x20019a24_f * (x**238) + L0x20019a26_f * (x**239) + 
            L0x20019a28_f * (x**240) + L0x20019a2a_f * (x**241) + 
            L0x20019a2c_f * (x**242) + L0x20019a2e_f * (x**243) + 
            L0x20019a30_f * (x**244) + L0x20019a32_f * (x**245) + 
            L0x20019a34_f * (x**246) + L0x20019a36_f * (x**247) + 
            L0x20019a38_f * (x**248) + L0x20019a3a_f * (x**249) + 
            L0x20019a3c_f * (x**250) + L0x20019a3e_f * (x**251) + 
            L0x20019a40_f * (x**252) + L0x20019a42_f * (x**253) + 
            L0x20019a44_f * (x**254) + L0x20019a46_f * (x**255)
          )
          [25570049, x**4 - 23857918],
    (* inp_poly_30 *)
    eqmod (2**32) * (inp_poly_30 * inp_poly_30)
          (
            L0x20019848_f * (x**0) + L0x2001984a_f * (x**1) + 
            L0x2001984c_f * (x**2) + L0x2001984e_f * (x**3) + 
            L0x20019850_f * (x**4) + L0x20019852_f * (x**5) + 
            L0x20019854_f * (x**6) + L0x20019856_f * (x**7) + 
            L0x20019858_f * (x**8) + L0x2001985a_f * (x**9) + 
            L0x2001985c_f * (x**10) + L0x2001985e_f * (x**11) + 
            L0x20019860_f * (x**12) + L0x20019862_f * (x**13) + 
            L0x20019864_f * (x**14) + L0x20019866_f * (x**15) + 
            L0x20019868_f * (x**16) + L0x2001986a_f * (x**17) + 
            L0x2001986c_f * (x**18) + L0x2001986e_f * (x**19) + 
            L0x20019870_f * (x**20) + L0x20019872_f * (x**21) + 
            L0x20019874_f * (x**22) + L0x20019876_f * (x**23) + 
            L0x20019878_f * (x**24) + L0x2001987a_f * (x**25) + 
            L0x2001987c_f * (x**26) + L0x2001987e_f * (x**27) + 
            L0x20019880_f * (x**28) + L0x20019882_f * (x**29) + 
            L0x20019884_f * (x**30) + L0x20019886_f * (x**31) + 
            L0x20019888_f * (x**32) + L0x2001988a_f * (x**33) + 
            L0x2001988c_f * (x**34) + L0x2001988e_f * (x**35) + 
            L0x20019890_f * (x**36) + L0x20019892_f * (x**37) + 
            L0x20019894_f * (x**38) + L0x20019896_f * (x**39) + 
            L0x20019898_f * (x**40) + L0x2001989a_f * (x**41) + 
            L0x2001989c_f * (x**42) + L0x2001989e_f * (x**43) + 
            L0x200198a0_f * (x**44) + L0x200198a2_f * (x**45) + 
            L0x200198a4_f * (x**46) + L0x200198a6_f * (x**47) + 
            L0x200198a8_f * (x**48) + L0x200198aa_f * (x**49) + 
            L0x200198ac_f * (x**50) + L0x200198ae_f * (x**51) + 
            L0x200198b0_f * (x**52) + L0x200198b2_f * (x**53) + 
            L0x200198b4_f * (x**54) + L0x200198b6_f * (x**55) + 
            L0x200198b8_f * (x**56) + L0x200198ba_f * (x**57) + 
            L0x200198bc_f * (x**58) + L0x200198be_f * (x**59) + 
            L0x200198c0_f * (x**60) + L0x200198c2_f * (x**61) + 
            L0x200198c4_f * (x**62) + L0x200198c6_f * (x**63) + 
            L0x200198c8_f * (x**64) + L0x200198ca_f * (x**65) + 
            L0x200198cc_f * (x**66) + L0x200198ce_f * (x**67) + 
            L0x200198d0_f * (x**68) + L0x200198d2_f * (x**69) + 
            L0x200198d4_f * (x**70) + L0x200198d6_f * (x**71) + 
            L0x200198d8_f * (x**72) + L0x200198da_f * (x**73) + 
            L0x200198dc_f * (x**74) + L0x200198de_f * (x**75) + 
            L0x200198e0_f * (x**76) + L0x200198e2_f * (x**77) + 
            L0x200198e4_f * (x**78) + L0x200198e6_f * (x**79) + 
            L0x200198e8_f * (x**80) + L0x200198ea_f * (x**81) + 
            L0x200198ec_f * (x**82) + L0x200198ee_f * (x**83) + 
            L0x200198f0_f * (x**84) + L0x200198f2_f * (x**85) + 
            L0x200198f4_f * (x**86) + L0x200198f6_f * (x**87) + 
            L0x200198f8_f * (x**88) + L0x200198fa_f * (x**89) + 
            L0x200198fc_f * (x**90) + L0x200198fe_f * (x**91) + 
            L0x20019900_f * (x**92) + L0x20019902_f * (x**93) + 
            L0x20019904_f * (x**94) + L0x20019906_f * (x**95) + 
            L0x20019908_f * (x**96) + L0x2001990a_f * (x**97) + 
            L0x2001990c_f * (x**98) + L0x2001990e_f * (x**99) + 
            L0x20019910_f * (x**100) + L0x20019912_f * (x**101) + 
            L0x20019914_f * (x**102) + L0x20019916_f * (x**103) + 
            L0x20019918_f * (x**104) + L0x2001991a_f * (x**105) + 
            L0x2001991c_f * (x**106) + L0x2001991e_f * (x**107) + 
            L0x20019920_f * (x**108) + L0x20019922_f * (x**109) + 
            L0x20019924_f * (x**110) + L0x20019926_f * (x**111) + 
            L0x20019928_f * (x**112) + L0x2001992a_f * (x**113) + 
            L0x2001992c_f * (x**114) + L0x2001992e_f * (x**115) + 
            L0x20019930_f * (x**116) + L0x20019932_f * (x**117) + 
            L0x20019934_f * (x**118) + L0x20019936_f * (x**119) + 
            L0x20019938_f * (x**120) + L0x2001993a_f * (x**121) + 
            L0x2001993c_f * (x**122) + L0x2001993e_f * (x**123) + 
            L0x20019940_f * (x**124) + L0x20019942_f * (x**125) + 
            L0x20019944_f * (x**126) + L0x20019946_f * (x**127) + 
            L0x20019948_f * (x**128) + L0x2001994a_f * (x**129) + 
            L0x2001994c_f * (x**130) + L0x2001994e_f * (x**131) + 
            L0x20019950_f * (x**132) + L0x20019952_f * (x**133) + 
            L0x20019954_f * (x**134) + L0x20019956_f * (x**135) + 
            L0x20019958_f * (x**136) + L0x2001995a_f * (x**137) + 
            L0x2001995c_f * (x**138) + L0x2001995e_f * (x**139) + 
            L0x20019960_f * (x**140) + L0x20019962_f * (x**141) + 
            L0x20019964_f * (x**142) + L0x20019966_f * (x**143) + 
            L0x20019968_f * (x**144) + L0x2001996a_f * (x**145) + 
            L0x2001996c_f * (x**146) + L0x2001996e_f * (x**147) + 
            L0x20019970_f * (x**148) + L0x20019972_f * (x**149) + 
            L0x20019974_f * (x**150) + L0x20019976_f * (x**151) + 
            L0x20019978_f * (x**152) + L0x2001997a_f * (x**153) + 
            L0x2001997c_f * (x**154) + L0x2001997e_f * (x**155) + 
            L0x20019980_f * (x**156) + L0x20019982_f * (x**157) + 
            L0x20019984_f * (x**158) + L0x20019986_f * (x**159) + 
            L0x20019988_f * (x**160) + L0x2001998a_f * (x**161) + 
            L0x2001998c_f * (x**162) + L0x2001998e_f * (x**163) + 
            L0x20019990_f * (x**164) + L0x20019992_f * (x**165) + 
            L0x20019994_f * (x**166) + L0x20019996_f * (x**167) + 
            L0x20019998_f * (x**168) + L0x2001999a_f * (x**169) + 
            L0x2001999c_f * (x**170) + L0x2001999e_f * (x**171) + 
            L0x200199a0_f * (x**172) + L0x200199a2_f * (x**173) + 
            L0x200199a4_f * (x**174) + L0x200199a6_f * (x**175) + 
            L0x200199a8_f * (x**176) + L0x200199aa_f * (x**177) + 
            L0x200199ac_f * (x**178) + L0x200199ae_f * (x**179) + 
            L0x200199b0_f * (x**180) + L0x200199b2_f * (x**181) + 
            L0x200199b4_f * (x**182) + L0x200199b6_f * (x**183) + 
            L0x200199b8_f * (x**184) + L0x200199ba_f * (x**185) + 
            L0x200199bc_f * (x**186) + L0x200199be_f * (x**187) + 
            L0x200199c0_f * (x**188) + L0x200199c2_f * (x**189) + 
            L0x200199c4_f * (x**190) + L0x200199c6_f * (x**191) + 
            L0x200199c8_f * (x**192) + L0x200199ca_f * (x**193) + 
            L0x200199cc_f * (x**194) + L0x200199ce_f * (x**195) + 
            L0x200199d0_f * (x**196) + L0x200199d2_f * (x**197) + 
            L0x200199d4_f * (x**198) + L0x200199d6_f * (x**199) + 
            L0x200199d8_f * (x**200) + L0x200199da_f * (x**201) + 
            L0x200199dc_f * (x**202) + L0x200199de_f * (x**203) + 
            L0x200199e0_f * (x**204) + L0x200199e2_f * (x**205) + 
            L0x200199e4_f * (x**206) + L0x200199e6_f * (x**207) + 
            L0x200199e8_f * (x**208) + L0x200199ea_f * (x**209) + 
            L0x200199ec_f * (x**210) + L0x200199ee_f * (x**211) + 
            L0x200199f0_f * (x**212) + L0x200199f2_f * (x**213) + 
            L0x200199f4_f * (x**214) + L0x200199f6_f * (x**215) + 
            L0x200199f8_f * (x**216) + L0x200199fa_f * (x**217) + 
            L0x200199fc_f * (x**218) + L0x200199fe_f * (x**219) + 
            L0x20019a00_f * (x**220) + L0x20019a02_f * (x**221) + 
            L0x20019a04_f * (x**222) + L0x20019a06_f * (x**223) + 
            L0x20019a08_f * (x**224) + L0x20019a0a_f * (x**225) + 
            L0x20019a0c_f * (x**226) + L0x20019a0e_f * (x**227) + 
            L0x20019a10_f * (x**228) + L0x20019a12_f * (x**229) + 
            L0x20019a14_f * (x**230) + L0x20019a16_f * (x**231) + 
            L0x20019a18_f * (x**232) + L0x20019a1a_f * (x**233) + 
            L0x20019a1c_f * (x**234) + L0x20019a1e_f * (x**235) + 
            L0x20019a20_f * (x**236) + L0x20019a22_f * (x**237) + 
            L0x20019a24_f * (x**238) + L0x20019a26_f * (x**239) + 
            L0x20019a28_f * (x**240) + L0x20019a2a_f * (x**241) + 
            L0x20019a2c_f * (x**242) + L0x20019a2e_f * (x**243) + 
            L0x20019a30_f * (x**244) + L0x20019a32_f * (x**245) + 
            L0x20019a34_f * (x**246) + L0x20019a36_f * (x**247) + 
            L0x20019a38_f * (x**248) + L0x20019a3a_f * (x**249) + 
            L0x20019a3c_f * (x**250) + L0x20019a3e_f * (x**251) + 
            L0x20019a40_f * (x**252) + L0x20019a42_f * (x**253) + 
            L0x20019a44_f * (x**254) + L0x20019a46_f * (x**255)
          )
          [25570049, x**4 - 14036261],
    (* inp_poly_31 *)
    eqmod (2**32) * (inp_poly_31 * inp_poly_31)
          (
            L0x20019848_f * (x**0) + L0x2001984a_f * (x**1) + 
            L0x2001984c_f * (x**2) + L0x2001984e_f * (x**3) + 
            L0x20019850_f * (x**4) + L0x20019852_f * (x**5) + 
            L0x20019854_f * (x**6) + L0x20019856_f * (x**7) + 
            L0x20019858_f * (x**8) + L0x2001985a_f * (x**9) + 
            L0x2001985c_f * (x**10) + L0x2001985e_f * (x**11) + 
            L0x20019860_f * (x**12) + L0x20019862_f * (x**13) + 
            L0x20019864_f * (x**14) + L0x20019866_f * (x**15) + 
            L0x20019868_f * (x**16) + L0x2001986a_f * (x**17) + 
            L0x2001986c_f * (x**18) + L0x2001986e_f * (x**19) + 
            L0x20019870_f * (x**20) + L0x20019872_f * (x**21) + 
            L0x20019874_f * (x**22) + L0x20019876_f * (x**23) + 
            L0x20019878_f * (x**24) + L0x2001987a_f * (x**25) + 
            L0x2001987c_f * (x**26) + L0x2001987e_f * (x**27) + 
            L0x20019880_f * (x**28) + L0x20019882_f * (x**29) + 
            L0x20019884_f * (x**30) + L0x20019886_f * (x**31) + 
            L0x20019888_f * (x**32) + L0x2001988a_f * (x**33) + 
            L0x2001988c_f * (x**34) + L0x2001988e_f * (x**35) + 
            L0x20019890_f * (x**36) + L0x20019892_f * (x**37) + 
            L0x20019894_f * (x**38) + L0x20019896_f * (x**39) + 
            L0x20019898_f * (x**40) + L0x2001989a_f * (x**41) + 
            L0x2001989c_f * (x**42) + L0x2001989e_f * (x**43) + 
            L0x200198a0_f * (x**44) + L0x200198a2_f * (x**45) + 
            L0x200198a4_f * (x**46) + L0x200198a6_f * (x**47) + 
            L0x200198a8_f * (x**48) + L0x200198aa_f * (x**49) + 
            L0x200198ac_f * (x**50) + L0x200198ae_f * (x**51) + 
            L0x200198b0_f * (x**52) + L0x200198b2_f * (x**53) + 
            L0x200198b4_f * (x**54) + L0x200198b6_f * (x**55) + 
            L0x200198b8_f * (x**56) + L0x200198ba_f * (x**57) + 
            L0x200198bc_f * (x**58) + L0x200198be_f * (x**59) + 
            L0x200198c0_f * (x**60) + L0x200198c2_f * (x**61) + 
            L0x200198c4_f * (x**62) + L0x200198c6_f * (x**63) + 
            L0x200198c8_f * (x**64) + L0x200198ca_f * (x**65) + 
            L0x200198cc_f * (x**66) + L0x200198ce_f * (x**67) + 
            L0x200198d0_f * (x**68) + L0x200198d2_f * (x**69) + 
            L0x200198d4_f * (x**70) + L0x200198d6_f * (x**71) + 
            L0x200198d8_f * (x**72) + L0x200198da_f * (x**73) + 
            L0x200198dc_f * (x**74) + L0x200198de_f * (x**75) + 
            L0x200198e0_f * (x**76) + L0x200198e2_f * (x**77) + 
            L0x200198e4_f * (x**78) + L0x200198e6_f * (x**79) + 
            L0x200198e8_f * (x**80) + L0x200198ea_f * (x**81) + 
            L0x200198ec_f * (x**82) + L0x200198ee_f * (x**83) + 
            L0x200198f0_f * (x**84) + L0x200198f2_f * (x**85) + 
            L0x200198f4_f * (x**86) + L0x200198f6_f * (x**87) + 
            L0x200198f8_f * (x**88) + L0x200198fa_f * (x**89) + 
            L0x200198fc_f * (x**90) + L0x200198fe_f * (x**91) + 
            L0x20019900_f * (x**92) + L0x20019902_f * (x**93) + 
            L0x20019904_f * (x**94) + L0x20019906_f * (x**95) + 
            L0x20019908_f * (x**96) + L0x2001990a_f * (x**97) + 
            L0x2001990c_f * (x**98) + L0x2001990e_f * (x**99) + 
            L0x20019910_f * (x**100) + L0x20019912_f * (x**101) + 
            L0x20019914_f * (x**102) + L0x20019916_f * (x**103) + 
            L0x20019918_f * (x**104) + L0x2001991a_f * (x**105) + 
            L0x2001991c_f * (x**106) + L0x2001991e_f * (x**107) + 
            L0x20019920_f * (x**108) + L0x20019922_f * (x**109) + 
            L0x20019924_f * (x**110) + L0x20019926_f * (x**111) + 
            L0x20019928_f * (x**112) + L0x2001992a_f * (x**113) + 
            L0x2001992c_f * (x**114) + L0x2001992e_f * (x**115) + 
            L0x20019930_f * (x**116) + L0x20019932_f * (x**117) + 
            L0x20019934_f * (x**118) + L0x20019936_f * (x**119) + 
            L0x20019938_f * (x**120) + L0x2001993a_f * (x**121) + 
            L0x2001993c_f * (x**122) + L0x2001993e_f * (x**123) + 
            L0x20019940_f * (x**124) + L0x20019942_f * (x**125) + 
            L0x20019944_f * (x**126) + L0x20019946_f * (x**127) + 
            L0x20019948_f * (x**128) + L0x2001994a_f * (x**129) + 
            L0x2001994c_f * (x**130) + L0x2001994e_f * (x**131) + 
            L0x20019950_f * (x**132) + L0x20019952_f * (x**133) + 
            L0x20019954_f * (x**134) + L0x20019956_f * (x**135) + 
            L0x20019958_f * (x**136) + L0x2001995a_f * (x**137) + 
            L0x2001995c_f * (x**138) + L0x2001995e_f * (x**139) + 
            L0x20019960_f * (x**140) + L0x20019962_f * (x**141) + 
            L0x20019964_f * (x**142) + L0x20019966_f * (x**143) + 
            L0x20019968_f * (x**144) + L0x2001996a_f * (x**145) + 
            L0x2001996c_f * (x**146) + L0x2001996e_f * (x**147) + 
            L0x20019970_f * (x**148) + L0x20019972_f * (x**149) + 
            L0x20019974_f * (x**150) + L0x20019976_f * (x**151) + 
            L0x20019978_f * (x**152) + L0x2001997a_f * (x**153) + 
            L0x2001997c_f * (x**154) + L0x2001997e_f * (x**155) + 
            L0x20019980_f * (x**156) + L0x20019982_f * (x**157) + 
            L0x20019984_f * (x**158) + L0x20019986_f * (x**159) + 
            L0x20019988_f * (x**160) + L0x2001998a_f * (x**161) + 
            L0x2001998c_f * (x**162) + L0x2001998e_f * (x**163) + 
            L0x20019990_f * (x**164) + L0x20019992_f * (x**165) + 
            L0x20019994_f * (x**166) + L0x20019996_f * (x**167) + 
            L0x20019998_f * (x**168) + L0x2001999a_f * (x**169) + 
            L0x2001999c_f * (x**170) + L0x2001999e_f * (x**171) + 
            L0x200199a0_f * (x**172) + L0x200199a2_f * (x**173) + 
            L0x200199a4_f * (x**174) + L0x200199a6_f * (x**175) + 
            L0x200199a8_f * (x**176) + L0x200199aa_f * (x**177) + 
            L0x200199ac_f * (x**178) + L0x200199ae_f * (x**179) + 
            L0x200199b0_f * (x**180) + L0x200199b2_f * (x**181) + 
            L0x200199b4_f * (x**182) + L0x200199b6_f * (x**183) + 
            L0x200199b8_f * (x**184) + L0x200199ba_f * (x**185) + 
            L0x200199bc_f * (x**186) + L0x200199be_f * (x**187) + 
            L0x200199c0_f * (x**188) + L0x200199c2_f * (x**189) + 
            L0x200199c4_f * (x**190) + L0x200199c6_f * (x**191) + 
            L0x200199c8_f * (x**192) + L0x200199ca_f * (x**193) + 
            L0x200199cc_f * (x**194) + L0x200199ce_f * (x**195) + 
            L0x200199d0_f * (x**196) + L0x200199d2_f * (x**197) + 
            L0x200199d4_f * (x**198) + L0x200199d6_f * (x**199) + 
            L0x200199d8_f * (x**200) + L0x200199da_f * (x**201) + 
            L0x200199dc_f * (x**202) + L0x200199de_f * (x**203) + 
            L0x200199e0_f * (x**204) + L0x200199e2_f * (x**205) + 
            L0x200199e4_f * (x**206) + L0x200199e6_f * (x**207) + 
            L0x200199e8_f * (x**208) + L0x200199ea_f * (x**209) + 
            L0x200199ec_f * (x**210) + L0x200199ee_f * (x**211) + 
            L0x200199f0_f * (x**212) + L0x200199f2_f * (x**213) + 
            L0x200199f4_f * (x**214) + L0x200199f6_f * (x**215) + 
            L0x200199f8_f * (x**216) + L0x200199fa_f * (x**217) + 
            L0x200199fc_f * (x**218) + L0x200199fe_f * (x**219) + 
            L0x20019a00_f * (x**220) + L0x20019a02_f * (x**221) + 
            L0x20019a04_f * (x**222) + L0x20019a06_f * (x**223) + 
            L0x20019a08_f * (x**224) + L0x20019a0a_f * (x**225) + 
            L0x20019a0c_f * (x**226) + L0x20019a0e_f * (x**227) + 
            L0x20019a10_f * (x**228) + L0x20019a12_f * (x**229) + 
            L0x20019a14_f * (x**230) + L0x20019a16_f * (x**231) + 
            L0x20019a18_f * (x**232) + L0x20019a1a_f * (x**233) + 
            L0x20019a1c_f * (x**234) + L0x20019a1e_f * (x**235) + 
            L0x20019a20_f * (x**236) + L0x20019a22_f * (x**237) + 
            L0x20019a24_f * (x**238) + L0x20019a26_f * (x**239) + 
            L0x20019a28_f * (x**240) + L0x20019a2a_f * (x**241) + 
            L0x20019a2c_f * (x**242) + L0x20019a2e_f * (x**243) + 
            L0x20019a30_f * (x**244) + L0x20019a32_f * (x**245) + 
            L0x20019a34_f * (x**246) + L0x20019a36_f * (x**247) + 
            L0x20019a38_f * (x**248) + L0x20019a3a_f * (x**249) + 
            L0x20019a3c_f * (x**250) + L0x20019a3e_f * (x**251) + 
            L0x20019a40_f * (x**252) + L0x20019a42_f * (x**253) + 
            L0x20019a44_f * (x**254) + L0x20019a46_f * (x**255)
          )
          [25570049, x**4 - 11533788],
    (* inp_poly_32 *)
    eqmod (2**32) * (inp_poly_32 * inp_poly_32)
          (
            L0x20019848_f * (x**0) + L0x2001984a_f * (x**1) + 
            L0x2001984c_f * (x**2) + L0x2001984e_f * (x**3) + 
            L0x20019850_f * (x**4) + L0x20019852_f * (x**5) + 
            L0x20019854_f * (x**6) + L0x20019856_f * (x**7) + 
            L0x20019858_f * (x**8) + L0x2001985a_f * (x**9) + 
            L0x2001985c_f * (x**10) + L0x2001985e_f * (x**11) + 
            L0x20019860_f * (x**12) + L0x20019862_f * (x**13) + 
            L0x20019864_f * (x**14) + L0x20019866_f * (x**15) + 
            L0x20019868_f * (x**16) + L0x2001986a_f * (x**17) + 
            L0x2001986c_f * (x**18) + L0x2001986e_f * (x**19) + 
            L0x20019870_f * (x**20) + L0x20019872_f * (x**21) + 
            L0x20019874_f * (x**22) + L0x20019876_f * (x**23) + 
            L0x20019878_f * (x**24) + L0x2001987a_f * (x**25) + 
            L0x2001987c_f * (x**26) + L0x2001987e_f * (x**27) + 
            L0x20019880_f * (x**28) + L0x20019882_f * (x**29) + 
            L0x20019884_f * (x**30) + L0x20019886_f * (x**31) + 
            L0x20019888_f * (x**32) + L0x2001988a_f * (x**33) + 
            L0x2001988c_f * (x**34) + L0x2001988e_f * (x**35) + 
            L0x20019890_f * (x**36) + L0x20019892_f * (x**37) + 
            L0x20019894_f * (x**38) + L0x20019896_f * (x**39) + 
            L0x20019898_f * (x**40) + L0x2001989a_f * (x**41) + 
            L0x2001989c_f * (x**42) + L0x2001989e_f * (x**43) + 
            L0x200198a0_f * (x**44) + L0x200198a2_f * (x**45) + 
            L0x200198a4_f * (x**46) + L0x200198a6_f * (x**47) + 
            L0x200198a8_f * (x**48) + L0x200198aa_f * (x**49) + 
            L0x200198ac_f * (x**50) + L0x200198ae_f * (x**51) + 
            L0x200198b0_f * (x**52) + L0x200198b2_f * (x**53) + 
            L0x200198b4_f * (x**54) + L0x200198b6_f * (x**55) + 
            L0x200198b8_f * (x**56) + L0x200198ba_f * (x**57) + 
            L0x200198bc_f * (x**58) + L0x200198be_f * (x**59) + 
            L0x200198c0_f * (x**60) + L0x200198c2_f * (x**61) + 
            L0x200198c4_f * (x**62) + L0x200198c6_f * (x**63) + 
            L0x200198c8_f * (x**64) + L0x200198ca_f * (x**65) + 
            L0x200198cc_f * (x**66) + L0x200198ce_f * (x**67) + 
            L0x200198d0_f * (x**68) + L0x200198d2_f * (x**69) + 
            L0x200198d4_f * (x**70) + L0x200198d6_f * (x**71) + 
            L0x200198d8_f * (x**72) + L0x200198da_f * (x**73) + 
            L0x200198dc_f * (x**74) + L0x200198de_f * (x**75) + 
            L0x200198e0_f * (x**76) + L0x200198e2_f * (x**77) + 
            L0x200198e4_f * (x**78) + L0x200198e6_f * (x**79) + 
            L0x200198e8_f * (x**80) + L0x200198ea_f * (x**81) + 
            L0x200198ec_f * (x**82) + L0x200198ee_f * (x**83) + 
            L0x200198f0_f * (x**84) + L0x200198f2_f * (x**85) + 
            L0x200198f4_f * (x**86) + L0x200198f6_f * (x**87) + 
            L0x200198f8_f * (x**88) + L0x200198fa_f * (x**89) + 
            L0x200198fc_f * (x**90) + L0x200198fe_f * (x**91) + 
            L0x20019900_f * (x**92) + L0x20019902_f * (x**93) + 
            L0x20019904_f * (x**94) + L0x20019906_f * (x**95) + 
            L0x20019908_f * (x**96) + L0x2001990a_f * (x**97) + 
            L0x2001990c_f * (x**98) + L0x2001990e_f * (x**99) + 
            L0x20019910_f * (x**100) + L0x20019912_f * (x**101) + 
            L0x20019914_f * (x**102) + L0x20019916_f * (x**103) + 
            L0x20019918_f * (x**104) + L0x2001991a_f * (x**105) + 
            L0x2001991c_f * (x**106) + L0x2001991e_f * (x**107) + 
            L0x20019920_f * (x**108) + L0x20019922_f * (x**109) + 
            L0x20019924_f * (x**110) + L0x20019926_f * (x**111) + 
            L0x20019928_f * (x**112) + L0x2001992a_f * (x**113) + 
            L0x2001992c_f * (x**114) + L0x2001992e_f * (x**115) + 
            L0x20019930_f * (x**116) + L0x20019932_f * (x**117) + 
            L0x20019934_f * (x**118) + L0x20019936_f * (x**119) + 
            L0x20019938_f * (x**120) + L0x2001993a_f * (x**121) + 
            L0x2001993c_f * (x**122) + L0x2001993e_f * (x**123) + 
            L0x20019940_f * (x**124) + L0x20019942_f * (x**125) + 
            L0x20019944_f * (x**126) + L0x20019946_f * (x**127) + 
            L0x20019948_f * (x**128) + L0x2001994a_f * (x**129) + 
            L0x2001994c_f * (x**130) + L0x2001994e_f * (x**131) + 
            L0x20019950_f * (x**132) + L0x20019952_f * (x**133) + 
            L0x20019954_f * (x**134) + L0x20019956_f * (x**135) + 
            L0x20019958_f * (x**136) + L0x2001995a_f * (x**137) + 
            L0x2001995c_f * (x**138) + L0x2001995e_f * (x**139) + 
            L0x20019960_f * (x**140) + L0x20019962_f * (x**141) + 
            L0x20019964_f * (x**142) + L0x20019966_f * (x**143) + 
            L0x20019968_f * (x**144) + L0x2001996a_f * (x**145) + 
            L0x2001996c_f * (x**146) + L0x2001996e_f * (x**147) + 
            L0x20019970_f * (x**148) + L0x20019972_f * (x**149) + 
            L0x20019974_f * (x**150) + L0x20019976_f * (x**151) + 
            L0x20019978_f * (x**152) + L0x2001997a_f * (x**153) + 
            L0x2001997c_f * (x**154) + L0x2001997e_f * (x**155) + 
            L0x20019980_f * (x**156) + L0x20019982_f * (x**157) + 
            L0x20019984_f * (x**158) + L0x20019986_f * (x**159) + 
            L0x20019988_f * (x**160) + L0x2001998a_f * (x**161) + 
            L0x2001998c_f * (x**162) + L0x2001998e_f * (x**163) + 
            L0x20019990_f * (x**164) + L0x20019992_f * (x**165) + 
            L0x20019994_f * (x**166) + L0x20019996_f * (x**167) + 
            L0x20019998_f * (x**168) + L0x2001999a_f * (x**169) + 
            L0x2001999c_f * (x**170) + L0x2001999e_f * (x**171) + 
            L0x200199a0_f * (x**172) + L0x200199a2_f * (x**173) + 
            L0x200199a4_f * (x**174) + L0x200199a6_f * (x**175) + 
            L0x200199a8_f * (x**176) + L0x200199aa_f * (x**177) + 
            L0x200199ac_f * (x**178) + L0x200199ae_f * (x**179) + 
            L0x200199b0_f * (x**180) + L0x200199b2_f * (x**181) + 
            L0x200199b4_f * (x**182) + L0x200199b6_f * (x**183) + 
            L0x200199b8_f * (x**184) + L0x200199ba_f * (x**185) + 
            L0x200199bc_f * (x**186) + L0x200199be_f * (x**187) + 
            L0x200199c0_f * (x**188) + L0x200199c2_f * (x**189) + 
            L0x200199c4_f * (x**190) + L0x200199c6_f * (x**191) + 
            L0x200199c8_f * (x**192) + L0x200199ca_f * (x**193) + 
            L0x200199cc_f * (x**194) + L0x200199ce_f * (x**195) + 
            L0x200199d0_f * (x**196) + L0x200199d2_f * (x**197) + 
            L0x200199d4_f * (x**198) + L0x200199d6_f * (x**199) + 
            L0x200199d8_f * (x**200) + L0x200199da_f * (x**201) + 
            L0x200199dc_f * (x**202) + L0x200199de_f * (x**203) + 
            L0x200199e0_f * (x**204) + L0x200199e2_f * (x**205) + 
            L0x200199e4_f * (x**206) + L0x200199e6_f * (x**207) + 
            L0x200199e8_f * (x**208) + L0x200199ea_f * (x**209) + 
            L0x200199ec_f * (x**210) + L0x200199ee_f * (x**211) + 
            L0x200199f0_f * (x**212) + L0x200199f2_f * (x**213) + 
            L0x200199f4_f * (x**214) + L0x200199f6_f * (x**215) + 
            L0x200199f8_f * (x**216) + L0x200199fa_f * (x**217) + 
            L0x200199fc_f * (x**218) + L0x200199fe_f * (x**219) + 
            L0x20019a00_f * (x**220) + L0x20019a02_f * (x**221) + 
            L0x20019a04_f * (x**222) + L0x20019a06_f * (x**223) + 
            L0x20019a08_f * (x**224) + L0x20019a0a_f * (x**225) + 
            L0x20019a0c_f * (x**226) + L0x20019a0e_f * (x**227) + 
            L0x20019a10_f * (x**228) + L0x20019a12_f * (x**229) + 
            L0x20019a14_f * (x**230) + L0x20019a16_f * (x**231) + 
            L0x20019a18_f * (x**232) + L0x20019a1a_f * (x**233) + 
            L0x20019a1c_f * (x**234) + L0x20019a1e_f * (x**235) + 
            L0x20019a20_f * (x**236) + L0x20019a22_f * (x**237) + 
            L0x20019a24_f * (x**238) + L0x20019a26_f * (x**239) + 
            L0x20019a28_f * (x**240) + L0x20019a2a_f * (x**241) + 
            L0x20019a2c_f * (x**242) + L0x20019a2e_f * (x**243) + 
            L0x20019a30_f * (x**244) + L0x20019a32_f * (x**245) + 
            L0x20019a34_f * (x**246) + L0x20019a36_f * (x**247) + 
            L0x20019a38_f * (x**248) + L0x20019a3a_f * (x**249) + 
            L0x20019a3c_f * (x**250) + L0x20019a3e_f * (x**251) + 
            L0x20019a40_f * (x**252) + L0x20019a42_f * (x**253) + 
            L0x20019a44_f * (x**254) + L0x20019a46_f * (x**255)
          )
          [25570049, x**4 - 7847101],
    (* inp_poly_33 *)
    eqmod (2**32) * (inp_poly_33 * inp_poly_33)
          (
            L0x20019848_f * (x**0) + L0x2001984a_f * (x**1) + 
            L0x2001984c_f * (x**2) + L0x2001984e_f * (x**3) + 
            L0x20019850_f * (x**4) + L0x20019852_f * (x**5) + 
            L0x20019854_f * (x**6) + L0x20019856_f * (x**7) + 
            L0x20019858_f * (x**8) + L0x2001985a_f * (x**9) + 
            L0x2001985c_f * (x**10) + L0x2001985e_f * (x**11) + 
            L0x20019860_f * (x**12) + L0x20019862_f * (x**13) + 
            L0x20019864_f * (x**14) + L0x20019866_f * (x**15) + 
            L0x20019868_f * (x**16) + L0x2001986a_f * (x**17) + 
            L0x2001986c_f * (x**18) + L0x2001986e_f * (x**19) + 
            L0x20019870_f * (x**20) + L0x20019872_f * (x**21) + 
            L0x20019874_f * (x**22) + L0x20019876_f * (x**23) + 
            L0x20019878_f * (x**24) + L0x2001987a_f * (x**25) + 
            L0x2001987c_f * (x**26) + L0x2001987e_f * (x**27) + 
            L0x20019880_f * (x**28) + L0x20019882_f * (x**29) + 
            L0x20019884_f * (x**30) + L0x20019886_f * (x**31) + 
            L0x20019888_f * (x**32) + L0x2001988a_f * (x**33) + 
            L0x2001988c_f * (x**34) + L0x2001988e_f * (x**35) + 
            L0x20019890_f * (x**36) + L0x20019892_f * (x**37) + 
            L0x20019894_f * (x**38) + L0x20019896_f * (x**39) + 
            L0x20019898_f * (x**40) + L0x2001989a_f * (x**41) + 
            L0x2001989c_f * (x**42) + L0x2001989e_f * (x**43) + 
            L0x200198a0_f * (x**44) + L0x200198a2_f * (x**45) + 
            L0x200198a4_f * (x**46) + L0x200198a6_f * (x**47) + 
            L0x200198a8_f * (x**48) + L0x200198aa_f * (x**49) + 
            L0x200198ac_f * (x**50) + L0x200198ae_f * (x**51) + 
            L0x200198b0_f * (x**52) + L0x200198b2_f * (x**53) + 
            L0x200198b4_f * (x**54) + L0x200198b6_f * (x**55) + 
            L0x200198b8_f * (x**56) + L0x200198ba_f * (x**57) + 
            L0x200198bc_f * (x**58) + L0x200198be_f * (x**59) + 
            L0x200198c0_f * (x**60) + L0x200198c2_f * (x**61) + 
            L0x200198c4_f * (x**62) + L0x200198c6_f * (x**63) + 
            L0x200198c8_f * (x**64) + L0x200198ca_f * (x**65) + 
            L0x200198cc_f * (x**66) + L0x200198ce_f * (x**67) + 
            L0x200198d0_f * (x**68) + L0x200198d2_f * (x**69) + 
            L0x200198d4_f * (x**70) + L0x200198d6_f * (x**71) + 
            L0x200198d8_f * (x**72) + L0x200198da_f * (x**73) + 
            L0x200198dc_f * (x**74) + L0x200198de_f * (x**75) + 
            L0x200198e0_f * (x**76) + L0x200198e2_f * (x**77) + 
            L0x200198e4_f * (x**78) + L0x200198e6_f * (x**79) + 
            L0x200198e8_f * (x**80) + L0x200198ea_f * (x**81) + 
            L0x200198ec_f * (x**82) + L0x200198ee_f * (x**83) + 
            L0x200198f0_f * (x**84) + L0x200198f2_f * (x**85) + 
            L0x200198f4_f * (x**86) + L0x200198f6_f * (x**87) + 
            L0x200198f8_f * (x**88) + L0x200198fa_f * (x**89) + 
            L0x200198fc_f * (x**90) + L0x200198fe_f * (x**91) + 
            L0x20019900_f * (x**92) + L0x20019902_f * (x**93) + 
            L0x20019904_f * (x**94) + L0x20019906_f * (x**95) + 
            L0x20019908_f * (x**96) + L0x2001990a_f * (x**97) + 
            L0x2001990c_f * (x**98) + L0x2001990e_f * (x**99) + 
            L0x20019910_f * (x**100) + L0x20019912_f * (x**101) + 
            L0x20019914_f * (x**102) + L0x20019916_f * (x**103) + 
            L0x20019918_f * (x**104) + L0x2001991a_f * (x**105) + 
            L0x2001991c_f * (x**106) + L0x2001991e_f * (x**107) + 
            L0x20019920_f * (x**108) + L0x20019922_f * (x**109) + 
            L0x20019924_f * (x**110) + L0x20019926_f * (x**111) + 
            L0x20019928_f * (x**112) + L0x2001992a_f * (x**113) + 
            L0x2001992c_f * (x**114) + L0x2001992e_f * (x**115) + 
            L0x20019930_f * (x**116) + L0x20019932_f * (x**117) + 
            L0x20019934_f * (x**118) + L0x20019936_f * (x**119) + 
            L0x20019938_f * (x**120) + L0x2001993a_f * (x**121) + 
            L0x2001993c_f * (x**122) + L0x2001993e_f * (x**123) + 
            L0x20019940_f * (x**124) + L0x20019942_f * (x**125) + 
            L0x20019944_f * (x**126) + L0x20019946_f * (x**127) + 
            L0x20019948_f * (x**128) + L0x2001994a_f * (x**129) + 
            L0x2001994c_f * (x**130) + L0x2001994e_f * (x**131) + 
            L0x20019950_f * (x**132) + L0x20019952_f * (x**133) + 
            L0x20019954_f * (x**134) + L0x20019956_f * (x**135) + 
            L0x20019958_f * (x**136) + L0x2001995a_f * (x**137) + 
            L0x2001995c_f * (x**138) + L0x2001995e_f * (x**139) + 
            L0x20019960_f * (x**140) + L0x20019962_f * (x**141) + 
            L0x20019964_f * (x**142) + L0x20019966_f * (x**143) + 
            L0x20019968_f * (x**144) + L0x2001996a_f * (x**145) + 
            L0x2001996c_f * (x**146) + L0x2001996e_f * (x**147) + 
            L0x20019970_f * (x**148) + L0x20019972_f * (x**149) + 
            L0x20019974_f * (x**150) + L0x20019976_f * (x**151) + 
            L0x20019978_f * (x**152) + L0x2001997a_f * (x**153) + 
            L0x2001997c_f * (x**154) + L0x2001997e_f * (x**155) + 
            L0x20019980_f * (x**156) + L0x20019982_f * (x**157) + 
            L0x20019984_f * (x**158) + L0x20019986_f * (x**159) + 
            L0x20019988_f * (x**160) + L0x2001998a_f * (x**161) + 
            L0x2001998c_f * (x**162) + L0x2001998e_f * (x**163) + 
            L0x20019990_f * (x**164) + L0x20019992_f * (x**165) + 
            L0x20019994_f * (x**166) + L0x20019996_f * (x**167) + 
            L0x20019998_f * (x**168) + L0x2001999a_f * (x**169) + 
            L0x2001999c_f * (x**170) + L0x2001999e_f * (x**171) + 
            L0x200199a0_f * (x**172) + L0x200199a2_f * (x**173) + 
            L0x200199a4_f * (x**174) + L0x200199a6_f * (x**175) + 
            L0x200199a8_f * (x**176) + L0x200199aa_f * (x**177) + 
            L0x200199ac_f * (x**178) + L0x200199ae_f * (x**179) + 
            L0x200199b0_f * (x**180) + L0x200199b2_f * (x**181) + 
            L0x200199b4_f * (x**182) + L0x200199b6_f * (x**183) + 
            L0x200199b8_f * (x**184) + L0x200199ba_f * (x**185) + 
            L0x200199bc_f * (x**186) + L0x200199be_f * (x**187) + 
            L0x200199c0_f * (x**188) + L0x200199c2_f * (x**189) + 
            L0x200199c4_f * (x**190) + L0x200199c6_f * (x**191) + 
            L0x200199c8_f * (x**192) + L0x200199ca_f * (x**193) + 
            L0x200199cc_f * (x**194) + L0x200199ce_f * (x**195) + 
            L0x200199d0_f * (x**196) + L0x200199d2_f * (x**197) + 
            L0x200199d4_f * (x**198) + L0x200199d6_f * (x**199) + 
            L0x200199d8_f * (x**200) + L0x200199da_f * (x**201) + 
            L0x200199dc_f * (x**202) + L0x200199de_f * (x**203) + 
            L0x200199e0_f * (x**204) + L0x200199e2_f * (x**205) + 
            L0x200199e4_f * (x**206) + L0x200199e6_f * (x**207) + 
            L0x200199e8_f * (x**208) + L0x200199ea_f * (x**209) + 
            L0x200199ec_f * (x**210) + L0x200199ee_f * (x**211) + 
            L0x200199f0_f * (x**212) + L0x200199f2_f * (x**213) + 
            L0x200199f4_f * (x**214) + L0x200199f6_f * (x**215) + 
            L0x200199f8_f * (x**216) + L0x200199fa_f * (x**217) + 
            L0x200199fc_f * (x**218) + L0x200199fe_f * (x**219) + 
            L0x20019a00_f * (x**220) + L0x20019a02_f * (x**221) + 
            L0x20019a04_f * (x**222) + L0x20019a06_f * (x**223) + 
            L0x20019a08_f * (x**224) + L0x20019a0a_f * (x**225) + 
            L0x20019a0c_f * (x**226) + L0x20019a0e_f * (x**227) + 
            L0x20019a10_f * (x**228) + L0x20019a12_f * (x**229) + 
            L0x20019a14_f * (x**230) + L0x20019a16_f * (x**231) + 
            L0x20019a18_f * (x**232) + L0x20019a1a_f * (x**233) + 
            L0x20019a1c_f * (x**234) + L0x20019a1e_f * (x**235) + 
            L0x20019a20_f * (x**236) + L0x20019a22_f * (x**237) + 
            L0x20019a24_f * (x**238) + L0x20019a26_f * (x**239) + 
            L0x20019a28_f * (x**240) + L0x20019a2a_f * (x**241) + 
            L0x20019a2c_f * (x**242) + L0x20019a2e_f * (x**243) + 
            L0x20019a30_f * (x**244) + L0x20019a32_f * (x**245) + 
            L0x20019a34_f * (x**246) + L0x20019a36_f * (x**247) + 
            L0x20019a38_f * (x**248) + L0x20019a3a_f * (x**249) + 
            L0x20019a3c_f * (x**250) + L0x20019a3e_f * (x**251) + 
            L0x20019a40_f * (x**252) + L0x20019a42_f * (x**253) + 
            L0x20019a44_f * (x**254) + L0x20019a46_f * (x**255)
          )
          [25570049, x**4 - 17722948],
    (* inp_poly_34 *)
    eqmod (2**32) * (inp_poly_34 * inp_poly_34)
          (
            L0x20019848_f * (x**0) + L0x2001984a_f * (x**1) + 
            L0x2001984c_f * (x**2) + L0x2001984e_f * (x**3) + 
            L0x20019850_f * (x**4) + L0x20019852_f * (x**5) + 
            L0x20019854_f * (x**6) + L0x20019856_f * (x**7) + 
            L0x20019858_f * (x**8) + L0x2001985a_f * (x**9) + 
            L0x2001985c_f * (x**10) + L0x2001985e_f * (x**11) + 
            L0x20019860_f * (x**12) + L0x20019862_f * (x**13) + 
            L0x20019864_f * (x**14) + L0x20019866_f * (x**15) + 
            L0x20019868_f * (x**16) + L0x2001986a_f * (x**17) + 
            L0x2001986c_f * (x**18) + L0x2001986e_f * (x**19) + 
            L0x20019870_f * (x**20) + L0x20019872_f * (x**21) + 
            L0x20019874_f * (x**22) + L0x20019876_f * (x**23) + 
            L0x20019878_f * (x**24) + L0x2001987a_f * (x**25) + 
            L0x2001987c_f * (x**26) + L0x2001987e_f * (x**27) + 
            L0x20019880_f * (x**28) + L0x20019882_f * (x**29) + 
            L0x20019884_f * (x**30) + L0x20019886_f * (x**31) + 
            L0x20019888_f * (x**32) + L0x2001988a_f * (x**33) + 
            L0x2001988c_f * (x**34) + L0x2001988e_f * (x**35) + 
            L0x20019890_f * (x**36) + L0x20019892_f * (x**37) + 
            L0x20019894_f * (x**38) + L0x20019896_f * (x**39) + 
            L0x20019898_f * (x**40) + L0x2001989a_f * (x**41) + 
            L0x2001989c_f * (x**42) + L0x2001989e_f * (x**43) + 
            L0x200198a0_f * (x**44) + L0x200198a2_f * (x**45) + 
            L0x200198a4_f * (x**46) + L0x200198a6_f * (x**47) + 
            L0x200198a8_f * (x**48) + L0x200198aa_f * (x**49) + 
            L0x200198ac_f * (x**50) + L0x200198ae_f * (x**51) + 
            L0x200198b0_f * (x**52) + L0x200198b2_f * (x**53) + 
            L0x200198b4_f * (x**54) + L0x200198b6_f * (x**55) + 
            L0x200198b8_f * (x**56) + L0x200198ba_f * (x**57) + 
            L0x200198bc_f * (x**58) + L0x200198be_f * (x**59) + 
            L0x200198c0_f * (x**60) + L0x200198c2_f * (x**61) + 
            L0x200198c4_f * (x**62) + L0x200198c6_f * (x**63) + 
            L0x200198c8_f * (x**64) + L0x200198ca_f * (x**65) + 
            L0x200198cc_f * (x**66) + L0x200198ce_f * (x**67) + 
            L0x200198d0_f * (x**68) + L0x200198d2_f * (x**69) + 
            L0x200198d4_f * (x**70) + L0x200198d6_f * (x**71) + 
            L0x200198d8_f * (x**72) + L0x200198da_f * (x**73) + 
            L0x200198dc_f * (x**74) + L0x200198de_f * (x**75) + 
            L0x200198e0_f * (x**76) + L0x200198e2_f * (x**77) + 
            L0x200198e4_f * (x**78) + L0x200198e6_f * (x**79) + 
            L0x200198e8_f * (x**80) + L0x200198ea_f * (x**81) + 
            L0x200198ec_f * (x**82) + L0x200198ee_f * (x**83) + 
            L0x200198f0_f * (x**84) + L0x200198f2_f * (x**85) + 
            L0x200198f4_f * (x**86) + L0x200198f6_f * (x**87) + 
            L0x200198f8_f * (x**88) + L0x200198fa_f * (x**89) + 
            L0x200198fc_f * (x**90) + L0x200198fe_f * (x**91) + 
            L0x20019900_f * (x**92) + L0x20019902_f * (x**93) + 
            L0x20019904_f * (x**94) + L0x20019906_f * (x**95) + 
            L0x20019908_f * (x**96) + L0x2001990a_f * (x**97) + 
            L0x2001990c_f * (x**98) + L0x2001990e_f * (x**99) + 
            L0x20019910_f * (x**100) + L0x20019912_f * (x**101) + 
            L0x20019914_f * (x**102) + L0x20019916_f * (x**103) + 
            L0x20019918_f * (x**104) + L0x2001991a_f * (x**105) + 
            L0x2001991c_f * (x**106) + L0x2001991e_f * (x**107) + 
            L0x20019920_f * (x**108) + L0x20019922_f * (x**109) + 
            L0x20019924_f * (x**110) + L0x20019926_f * (x**111) + 
            L0x20019928_f * (x**112) + L0x2001992a_f * (x**113) + 
            L0x2001992c_f * (x**114) + L0x2001992e_f * (x**115) + 
            L0x20019930_f * (x**116) + L0x20019932_f * (x**117) + 
            L0x20019934_f * (x**118) + L0x20019936_f * (x**119) + 
            L0x20019938_f * (x**120) + L0x2001993a_f * (x**121) + 
            L0x2001993c_f * (x**122) + L0x2001993e_f * (x**123) + 
            L0x20019940_f * (x**124) + L0x20019942_f * (x**125) + 
            L0x20019944_f * (x**126) + L0x20019946_f * (x**127) + 
            L0x20019948_f * (x**128) + L0x2001994a_f * (x**129) + 
            L0x2001994c_f * (x**130) + L0x2001994e_f * (x**131) + 
            L0x20019950_f * (x**132) + L0x20019952_f * (x**133) + 
            L0x20019954_f * (x**134) + L0x20019956_f * (x**135) + 
            L0x20019958_f * (x**136) + L0x2001995a_f * (x**137) + 
            L0x2001995c_f * (x**138) + L0x2001995e_f * (x**139) + 
            L0x20019960_f * (x**140) + L0x20019962_f * (x**141) + 
            L0x20019964_f * (x**142) + L0x20019966_f * (x**143) + 
            L0x20019968_f * (x**144) + L0x2001996a_f * (x**145) + 
            L0x2001996c_f * (x**146) + L0x2001996e_f * (x**147) + 
            L0x20019970_f * (x**148) + L0x20019972_f * (x**149) + 
            L0x20019974_f * (x**150) + L0x20019976_f * (x**151) + 
            L0x20019978_f * (x**152) + L0x2001997a_f * (x**153) + 
            L0x2001997c_f * (x**154) + L0x2001997e_f * (x**155) + 
            L0x20019980_f * (x**156) + L0x20019982_f * (x**157) + 
            L0x20019984_f * (x**158) + L0x20019986_f * (x**159) + 
            L0x20019988_f * (x**160) + L0x2001998a_f * (x**161) + 
            L0x2001998c_f * (x**162) + L0x2001998e_f * (x**163) + 
            L0x20019990_f * (x**164) + L0x20019992_f * (x**165) + 
            L0x20019994_f * (x**166) + L0x20019996_f * (x**167) + 
            L0x20019998_f * (x**168) + L0x2001999a_f * (x**169) + 
            L0x2001999c_f * (x**170) + L0x2001999e_f * (x**171) + 
            L0x200199a0_f * (x**172) + L0x200199a2_f * (x**173) + 
            L0x200199a4_f * (x**174) + L0x200199a6_f * (x**175) + 
            L0x200199a8_f * (x**176) + L0x200199aa_f * (x**177) + 
            L0x200199ac_f * (x**178) + L0x200199ae_f * (x**179) + 
            L0x200199b0_f * (x**180) + L0x200199b2_f * (x**181) + 
            L0x200199b4_f * (x**182) + L0x200199b6_f * (x**183) + 
            L0x200199b8_f * (x**184) + L0x200199ba_f * (x**185) + 
            L0x200199bc_f * (x**186) + L0x200199be_f * (x**187) + 
            L0x200199c0_f * (x**188) + L0x200199c2_f * (x**189) + 
            L0x200199c4_f * (x**190) + L0x200199c6_f * (x**191) + 
            L0x200199c8_f * (x**192) + L0x200199ca_f * (x**193) + 
            L0x200199cc_f * (x**194) + L0x200199ce_f * (x**195) + 
            L0x200199d0_f * (x**196) + L0x200199d2_f * (x**197) + 
            L0x200199d4_f * (x**198) + L0x200199d6_f * (x**199) + 
            L0x200199d8_f * (x**200) + L0x200199da_f * (x**201) + 
            L0x200199dc_f * (x**202) + L0x200199de_f * (x**203) + 
            L0x200199e0_f * (x**204) + L0x200199e2_f * (x**205) + 
            L0x200199e4_f * (x**206) + L0x200199e6_f * (x**207) + 
            L0x200199e8_f * (x**208) + L0x200199ea_f * (x**209) + 
            L0x200199ec_f * (x**210) + L0x200199ee_f * (x**211) + 
            L0x200199f0_f * (x**212) + L0x200199f2_f * (x**213) + 
            L0x200199f4_f * (x**214) + L0x200199f6_f * (x**215) + 
            L0x200199f8_f * (x**216) + L0x200199fa_f * (x**217) + 
            L0x200199fc_f * (x**218) + L0x200199fe_f * (x**219) + 
            L0x20019a00_f * (x**220) + L0x20019a02_f * (x**221) + 
            L0x20019a04_f * (x**222) + L0x20019a06_f * (x**223) + 
            L0x20019a08_f * (x**224) + L0x20019a0a_f * (x**225) + 
            L0x20019a0c_f * (x**226) + L0x20019a0e_f * (x**227) + 
            L0x20019a10_f * (x**228) + L0x20019a12_f * (x**229) + 
            L0x20019a14_f * (x**230) + L0x20019a16_f * (x**231) + 
            L0x20019a18_f * (x**232) + L0x20019a1a_f * (x**233) + 
            L0x20019a1c_f * (x**234) + L0x20019a1e_f * (x**235) + 
            L0x20019a20_f * (x**236) + L0x20019a22_f * (x**237) + 
            L0x20019a24_f * (x**238) + L0x20019a26_f * (x**239) + 
            L0x20019a28_f * (x**240) + L0x20019a2a_f * (x**241) + 
            L0x20019a2c_f * (x**242) + L0x20019a2e_f * (x**243) + 
            L0x20019a30_f * (x**244) + L0x20019a32_f * (x**245) + 
            L0x20019a34_f * (x**246) + L0x20019a36_f * (x**247) + 
            L0x20019a38_f * (x**248) + L0x20019a3a_f * (x**249) + 
            L0x20019a3c_f * (x**250) + L0x20019a3e_f * (x**251) + 
            L0x20019a40_f * (x**252) + L0x20019a42_f * (x**253) + 
            L0x20019a44_f * (x**254) + L0x20019a46_f * (x**255)
          )
          [25570049, x**4 - 19240139],
    (* inp_poly_35 *)
    eqmod (2**32) * (inp_poly_35 * inp_poly_35)
          (
            L0x20019848_f * (x**0) + L0x2001984a_f * (x**1) + 
            L0x2001984c_f * (x**2) + L0x2001984e_f * (x**3) + 
            L0x20019850_f * (x**4) + L0x20019852_f * (x**5) + 
            L0x20019854_f * (x**6) + L0x20019856_f * (x**7) + 
            L0x20019858_f * (x**8) + L0x2001985a_f * (x**9) + 
            L0x2001985c_f * (x**10) + L0x2001985e_f * (x**11) + 
            L0x20019860_f * (x**12) + L0x20019862_f * (x**13) + 
            L0x20019864_f * (x**14) + L0x20019866_f * (x**15) + 
            L0x20019868_f * (x**16) + L0x2001986a_f * (x**17) + 
            L0x2001986c_f * (x**18) + L0x2001986e_f * (x**19) + 
            L0x20019870_f * (x**20) + L0x20019872_f * (x**21) + 
            L0x20019874_f * (x**22) + L0x20019876_f * (x**23) + 
            L0x20019878_f * (x**24) + L0x2001987a_f * (x**25) + 
            L0x2001987c_f * (x**26) + L0x2001987e_f * (x**27) + 
            L0x20019880_f * (x**28) + L0x20019882_f * (x**29) + 
            L0x20019884_f * (x**30) + L0x20019886_f * (x**31) + 
            L0x20019888_f * (x**32) + L0x2001988a_f * (x**33) + 
            L0x2001988c_f * (x**34) + L0x2001988e_f * (x**35) + 
            L0x20019890_f * (x**36) + L0x20019892_f * (x**37) + 
            L0x20019894_f * (x**38) + L0x20019896_f * (x**39) + 
            L0x20019898_f * (x**40) + L0x2001989a_f * (x**41) + 
            L0x2001989c_f * (x**42) + L0x2001989e_f * (x**43) + 
            L0x200198a0_f * (x**44) + L0x200198a2_f * (x**45) + 
            L0x200198a4_f * (x**46) + L0x200198a6_f * (x**47) + 
            L0x200198a8_f * (x**48) + L0x200198aa_f * (x**49) + 
            L0x200198ac_f * (x**50) + L0x200198ae_f * (x**51) + 
            L0x200198b0_f * (x**52) + L0x200198b2_f * (x**53) + 
            L0x200198b4_f * (x**54) + L0x200198b6_f * (x**55) + 
            L0x200198b8_f * (x**56) + L0x200198ba_f * (x**57) + 
            L0x200198bc_f * (x**58) + L0x200198be_f * (x**59) + 
            L0x200198c0_f * (x**60) + L0x200198c2_f * (x**61) + 
            L0x200198c4_f * (x**62) + L0x200198c6_f * (x**63) + 
            L0x200198c8_f * (x**64) + L0x200198ca_f * (x**65) + 
            L0x200198cc_f * (x**66) + L0x200198ce_f * (x**67) + 
            L0x200198d0_f * (x**68) + L0x200198d2_f * (x**69) + 
            L0x200198d4_f * (x**70) + L0x200198d6_f * (x**71) + 
            L0x200198d8_f * (x**72) + L0x200198da_f * (x**73) + 
            L0x200198dc_f * (x**74) + L0x200198de_f * (x**75) + 
            L0x200198e0_f * (x**76) + L0x200198e2_f * (x**77) + 
            L0x200198e4_f * (x**78) + L0x200198e6_f * (x**79) + 
            L0x200198e8_f * (x**80) + L0x200198ea_f * (x**81) + 
            L0x200198ec_f * (x**82) + L0x200198ee_f * (x**83) + 
            L0x200198f0_f * (x**84) + L0x200198f2_f * (x**85) + 
            L0x200198f4_f * (x**86) + L0x200198f6_f * (x**87) + 
            L0x200198f8_f * (x**88) + L0x200198fa_f * (x**89) + 
            L0x200198fc_f * (x**90) + L0x200198fe_f * (x**91) + 
            L0x20019900_f * (x**92) + L0x20019902_f * (x**93) + 
            L0x20019904_f * (x**94) + L0x20019906_f * (x**95) + 
            L0x20019908_f * (x**96) + L0x2001990a_f * (x**97) + 
            L0x2001990c_f * (x**98) + L0x2001990e_f * (x**99) + 
            L0x20019910_f * (x**100) + L0x20019912_f * (x**101) + 
            L0x20019914_f * (x**102) + L0x20019916_f * (x**103) + 
            L0x20019918_f * (x**104) + L0x2001991a_f * (x**105) + 
            L0x2001991c_f * (x**106) + L0x2001991e_f * (x**107) + 
            L0x20019920_f * (x**108) + L0x20019922_f * (x**109) + 
            L0x20019924_f * (x**110) + L0x20019926_f * (x**111) + 
            L0x20019928_f * (x**112) + L0x2001992a_f * (x**113) + 
            L0x2001992c_f * (x**114) + L0x2001992e_f * (x**115) + 
            L0x20019930_f * (x**116) + L0x20019932_f * (x**117) + 
            L0x20019934_f * (x**118) + L0x20019936_f * (x**119) + 
            L0x20019938_f * (x**120) + L0x2001993a_f * (x**121) + 
            L0x2001993c_f * (x**122) + L0x2001993e_f * (x**123) + 
            L0x20019940_f * (x**124) + L0x20019942_f * (x**125) + 
            L0x20019944_f * (x**126) + L0x20019946_f * (x**127) + 
            L0x20019948_f * (x**128) + L0x2001994a_f * (x**129) + 
            L0x2001994c_f * (x**130) + L0x2001994e_f * (x**131) + 
            L0x20019950_f * (x**132) + L0x20019952_f * (x**133) + 
            L0x20019954_f * (x**134) + L0x20019956_f * (x**135) + 
            L0x20019958_f * (x**136) + L0x2001995a_f * (x**137) + 
            L0x2001995c_f * (x**138) + L0x2001995e_f * (x**139) + 
            L0x20019960_f * (x**140) + L0x20019962_f * (x**141) + 
            L0x20019964_f * (x**142) + L0x20019966_f * (x**143) + 
            L0x20019968_f * (x**144) + L0x2001996a_f * (x**145) + 
            L0x2001996c_f * (x**146) + L0x2001996e_f * (x**147) + 
            L0x20019970_f * (x**148) + L0x20019972_f * (x**149) + 
            L0x20019974_f * (x**150) + L0x20019976_f * (x**151) + 
            L0x20019978_f * (x**152) + L0x2001997a_f * (x**153) + 
            L0x2001997c_f * (x**154) + L0x2001997e_f * (x**155) + 
            L0x20019980_f * (x**156) + L0x20019982_f * (x**157) + 
            L0x20019984_f * (x**158) + L0x20019986_f * (x**159) + 
            L0x20019988_f * (x**160) + L0x2001998a_f * (x**161) + 
            L0x2001998c_f * (x**162) + L0x2001998e_f * (x**163) + 
            L0x20019990_f * (x**164) + L0x20019992_f * (x**165) + 
            L0x20019994_f * (x**166) + L0x20019996_f * (x**167) + 
            L0x20019998_f * (x**168) + L0x2001999a_f * (x**169) + 
            L0x2001999c_f * (x**170) + L0x2001999e_f * (x**171) + 
            L0x200199a0_f * (x**172) + L0x200199a2_f * (x**173) + 
            L0x200199a4_f * (x**174) + L0x200199a6_f * (x**175) + 
            L0x200199a8_f * (x**176) + L0x200199aa_f * (x**177) + 
            L0x200199ac_f * (x**178) + L0x200199ae_f * (x**179) + 
            L0x200199b0_f * (x**180) + L0x200199b2_f * (x**181) + 
            L0x200199b4_f * (x**182) + L0x200199b6_f * (x**183) + 
            L0x200199b8_f * (x**184) + L0x200199ba_f * (x**185) + 
            L0x200199bc_f * (x**186) + L0x200199be_f * (x**187) + 
            L0x200199c0_f * (x**188) + L0x200199c2_f * (x**189) + 
            L0x200199c4_f * (x**190) + L0x200199c6_f * (x**191) + 
            L0x200199c8_f * (x**192) + L0x200199ca_f * (x**193) + 
            L0x200199cc_f * (x**194) + L0x200199ce_f * (x**195) + 
            L0x200199d0_f * (x**196) + L0x200199d2_f * (x**197) + 
            L0x200199d4_f * (x**198) + L0x200199d6_f * (x**199) + 
            L0x200199d8_f * (x**200) + L0x200199da_f * (x**201) + 
            L0x200199dc_f * (x**202) + L0x200199de_f * (x**203) + 
            L0x200199e0_f * (x**204) + L0x200199e2_f * (x**205) + 
            L0x200199e4_f * (x**206) + L0x200199e6_f * (x**207) + 
            L0x200199e8_f * (x**208) + L0x200199ea_f * (x**209) + 
            L0x200199ec_f * (x**210) + L0x200199ee_f * (x**211) + 
            L0x200199f0_f * (x**212) + L0x200199f2_f * (x**213) + 
            L0x200199f4_f * (x**214) + L0x200199f6_f * (x**215) + 
            L0x200199f8_f * (x**216) + L0x200199fa_f * (x**217) + 
            L0x200199fc_f * (x**218) + L0x200199fe_f * (x**219) + 
            L0x20019a00_f * (x**220) + L0x20019a02_f * (x**221) + 
            L0x20019a04_f * (x**222) + L0x20019a06_f * (x**223) + 
            L0x20019a08_f * (x**224) + L0x20019a0a_f * (x**225) + 
            L0x20019a0c_f * (x**226) + L0x20019a0e_f * (x**227) + 
            L0x20019a10_f * (x**228) + L0x20019a12_f * (x**229) + 
            L0x20019a14_f * (x**230) + L0x20019a16_f * (x**231) + 
            L0x20019a18_f * (x**232) + L0x20019a1a_f * (x**233) + 
            L0x20019a1c_f * (x**234) + L0x20019a1e_f * (x**235) + 
            L0x20019a20_f * (x**236) + L0x20019a22_f * (x**237) + 
            L0x20019a24_f * (x**238) + L0x20019a26_f * (x**239) + 
            L0x20019a28_f * (x**240) + L0x20019a2a_f * (x**241) + 
            L0x20019a2c_f * (x**242) + L0x20019a2e_f * (x**243) + 
            L0x20019a30_f * (x**244) + L0x20019a32_f * (x**245) + 
            L0x20019a34_f * (x**246) + L0x20019a36_f * (x**247) + 
            L0x20019a38_f * (x**248) + L0x20019a3a_f * (x**249) + 
            L0x20019a3c_f * (x**250) + L0x20019a3e_f * (x**251) + 
            L0x20019a40_f * (x**252) + L0x20019a42_f * (x**253) + 
            L0x20019a44_f * (x**254) + L0x20019a46_f * (x**255)
          )
          [25570049, x**4 - 6329910],
    (* inp_poly_36 *)
    eqmod (2**32) * (inp_poly_36 * inp_poly_36)
          (
            L0x20019848_f * (x**0) + L0x2001984a_f * (x**1) + 
            L0x2001984c_f * (x**2) + L0x2001984e_f * (x**3) + 
            L0x20019850_f * (x**4) + L0x20019852_f * (x**5) + 
            L0x20019854_f * (x**6) + L0x20019856_f * (x**7) + 
            L0x20019858_f * (x**8) + L0x2001985a_f * (x**9) + 
            L0x2001985c_f * (x**10) + L0x2001985e_f * (x**11) + 
            L0x20019860_f * (x**12) + L0x20019862_f * (x**13) + 
            L0x20019864_f * (x**14) + L0x20019866_f * (x**15) + 
            L0x20019868_f * (x**16) + L0x2001986a_f * (x**17) + 
            L0x2001986c_f * (x**18) + L0x2001986e_f * (x**19) + 
            L0x20019870_f * (x**20) + L0x20019872_f * (x**21) + 
            L0x20019874_f * (x**22) + L0x20019876_f * (x**23) + 
            L0x20019878_f * (x**24) + L0x2001987a_f * (x**25) + 
            L0x2001987c_f * (x**26) + L0x2001987e_f * (x**27) + 
            L0x20019880_f * (x**28) + L0x20019882_f * (x**29) + 
            L0x20019884_f * (x**30) + L0x20019886_f * (x**31) + 
            L0x20019888_f * (x**32) + L0x2001988a_f * (x**33) + 
            L0x2001988c_f * (x**34) + L0x2001988e_f * (x**35) + 
            L0x20019890_f * (x**36) + L0x20019892_f * (x**37) + 
            L0x20019894_f * (x**38) + L0x20019896_f * (x**39) + 
            L0x20019898_f * (x**40) + L0x2001989a_f * (x**41) + 
            L0x2001989c_f * (x**42) + L0x2001989e_f * (x**43) + 
            L0x200198a0_f * (x**44) + L0x200198a2_f * (x**45) + 
            L0x200198a4_f * (x**46) + L0x200198a6_f * (x**47) + 
            L0x200198a8_f * (x**48) + L0x200198aa_f * (x**49) + 
            L0x200198ac_f * (x**50) + L0x200198ae_f * (x**51) + 
            L0x200198b0_f * (x**52) + L0x200198b2_f * (x**53) + 
            L0x200198b4_f * (x**54) + L0x200198b6_f * (x**55) + 
            L0x200198b8_f * (x**56) + L0x200198ba_f * (x**57) + 
            L0x200198bc_f * (x**58) + L0x200198be_f * (x**59) + 
            L0x200198c0_f * (x**60) + L0x200198c2_f * (x**61) + 
            L0x200198c4_f * (x**62) + L0x200198c6_f * (x**63) + 
            L0x200198c8_f * (x**64) + L0x200198ca_f * (x**65) + 
            L0x200198cc_f * (x**66) + L0x200198ce_f * (x**67) + 
            L0x200198d0_f * (x**68) + L0x200198d2_f * (x**69) + 
            L0x200198d4_f * (x**70) + L0x200198d6_f * (x**71) + 
            L0x200198d8_f * (x**72) + L0x200198da_f * (x**73) + 
            L0x200198dc_f * (x**74) + L0x200198de_f * (x**75) + 
            L0x200198e0_f * (x**76) + L0x200198e2_f * (x**77) + 
            L0x200198e4_f * (x**78) + L0x200198e6_f * (x**79) + 
            L0x200198e8_f * (x**80) + L0x200198ea_f * (x**81) + 
            L0x200198ec_f * (x**82) + L0x200198ee_f * (x**83) + 
            L0x200198f0_f * (x**84) + L0x200198f2_f * (x**85) + 
            L0x200198f4_f * (x**86) + L0x200198f6_f * (x**87) + 
            L0x200198f8_f * (x**88) + L0x200198fa_f * (x**89) + 
            L0x200198fc_f * (x**90) + L0x200198fe_f * (x**91) + 
            L0x20019900_f * (x**92) + L0x20019902_f * (x**93) + 
            L0x20019904_f * (x**94) + L0x20019906_f * (x**95) + 
            L0x20019908_f * (x**96) + L0x2001990a_f * (x**97) + 
            L0x2001990c_f * (x**98) + L0x2001990e_f * (x**99) + 
            L0x20019910_f * (x**100) + L0x20019912_f * (x**101) + 
            L0x20019914_f * (x**102) + L0x20019916_f * (x**103) + 
            L0x20019918_f * (x**104) + L0x2001991a_f * (x**105) + 
            L0x2001991c_f * (x**106) + L0x2001991e_f * (x**107) + 
            L0x20019920_f * (x**108) + L0x20019922_f * (x**109) + 
            L0x20019924_f * (x**110) + L0x20019926_f * (x**111) + 
            L0x20019928_f * (x**112) + L0x2001992a_f * (x**113) + 
            L0x2001992c_f * (x**114) + L0x2001992e_f * (x**115) + 
            L0x20019930_f * (x**116) + L0x20019932_f * (x**117) + 
            L0x20019934_f * (x**118) + L0x20019936_f * (x**119) + 
            L0x20019938_f * (x**120) + L0x2001993a_f * (x**121) + 
            L0x2001993c_f * (x**122) + L0x2001993e_f * (x**123) + 
            L0x20019940_f * (x**124) + L0x20019942_f * (x**125) + 
            L0x20019944_f * (x**126) + L0x20019946_f * (x**127) + 
            L0x20019948_f * (x**128) + L0x2001994a_f * (x**129) + 
            L0x2001994c_f * (x**130) + L0x2001994e_f * (x**131) + 
            L0x20019950_f * (x**132) + L0x20019952_f * (x**133) + 
            L0x20019954_f * (x**134) + L0x20019956_f * (x**135) + 
            L0x20019958_f * (x**136) + L0x2001995a_f * (x**137) + 
            L0x2001995c_f * (x**138) + L0x2001995e_f * (x**139) + 
            L0x20019960_f * (x**140) + L0x20019962_f * (x**141) + 
            L0x20019964_f * (x**142) + L0x20019966_f * (x**143) + 
            L0x20019968_f * (x**144) + L0x2001996a_f * (x**145) + 
            L0x2001996c_f * (x**146) + L0x2001996e_f * (x**147) + 
            L0x20019970_f * (x**148) + L0x20019972_f * (x**149) + 
            L0x20019974_f * (x**150) + L0x20019976_f * (x**151) + 
            L0x20019978_f * (x**152) + L0x2001997a_f * (x**153) + 
            L0x2001997c_f * (x**154) + L0x2001997e_f * (x**155) + 
            L0x20019980_f * (x**156) + L0x20019982_f * (x**157) + 
            L0x20019984_f * (x**158) + L0x20019986_f * (x**159) + 
            L0x20019988_f * (x**160) + L0x2001998a_f * (x**161) + 
            L0x2001998c_f * (x**162) + L0x2001998e_f * (x**163) + 
            L0x20019990_f * (x**164) + L0x20019992_f * (x**165) + 
            L0x20019994_f * (x**166) + L0x20019996_f * (x**167) + 
            L0x20019998_f * (x**168) + L0x2001999a_f * (x**169) + 
            L0x2001999c_f * (x**170) + L0x2001999e_f * (x**171) + 
            L0x200199a0_f * (x**172) + L0x200199a2_f * (x**173) + 
            L0x200199a4_f * (x**174) + L0x200199a6_f * (x**175) + 
            L0x200199a8_f * (x**176) + L0x200199aa_f * (x**177) + 
            L0x200199ac_f * (x**178) + L0x200199ae_f * (x**179) + 
            L0x200199b0_f * (x**180) + L0x200199b2_f * (x**181) + 
            L0x200199b4_f * (x**182) + L0x200199b6_f * (x**183) + 
            L0x200199b8_f * (x**184) + L0x200199ba_f * (x**185) + 
            L0x200199bc_f * (x**186) + L0x200199be_f * (x**187) + 
            L0x200199c0_f * (x**188) + L0x200199c2_f * (x**189) + 
            L0x200199c4_f * (x**190) + L0x200199c6_f * (x**191) + 
            L0x200199c8_f * (x**192) + L0x200199ca_f * (x**193) + 
            L0x200199cc_f * (x**194) + L0x200199ce_f * (x**195) + 
            L0x200199d0_f * (x**196) + L0x200199d2_f * (x**197) + 
            L0x200199d4_f * (x**198) + L0x200199d6_f * (x**199) + 
            L0x200199d8_f * (x**200) + L0x200199da_f * (x**201) + 
            L0x200199dc_f * (x**202) + L0x200199de_f * (x**203) + 
            L0x200199e0_f * (x**204) + L0x200199e2_f * (x**205) + 
            L0x200199e4_f * (x**206) + L0x200199e6_f * (x**207) + 
            L0x200199e8_f * (x**208) + L0x200199ea_f * (x**209) + 
            L0x200199ec_f * (x**210) + L0x200199ee_f * (x**211) + 
            L0x200199f0_f * (x**212) + L0x200199f2_f * (x**213) + 
            L0x200199f4_f * (x**214) + L0x200199f6_f * (x**215) + 
            L0x200199f8_f * (x**216) + L0x200199fa_f * (x**217) + 
            L0x200199fc_f * (x**218) + L0x200199fe_f * (x**219) + 
            L0x20019a00_f * (x**220) + L0x20019a02_f * (x**221) + 
            L0x20019a04_f * (x**222) + L0x20019a06_f * (x**223) + 
            L0x20019a08_f * (x**224) + L0x20019a0a_f * (x**225) + 
            L0x20019a0c_f * (x**226) + L0x20019a0e_f * (x**227) + 
            L0x20019a10_f * (x**228) + L0x20019a12_f * (x**229) + 
            L0x20019a14_f * (x**230) + L0x20019a16_f * (x**231) + 
            L0x20019a18_f * (x**232) + L0x20019a1a_f * (x**233) + 
            L0x20019a1c_f * (x**234) + L0x20019a1e_f * (x**235) + 
            L0x20019a20_f * (x**236) + L0x20019a22_f * (x**237) + 
            L0x20019a24_f * (x**238) + L0x20019a26_f * (x**239) + 
            L0x20019a28_f * (x**240) + L0x20019a2a_f * (x**241) + 
            L0x20019a2c_f * (x**242) + L0x20019a2e_f * (x**243) + 
            L0x20019a30_f * (x**244) + L0x20019a32_f * (x**245) + 
            L0x20019a34_f * (x**246) + L0x20019a36_f * (x**247) + 
            L0x20019a38_f * (x**248) + L0x20019a3a_f * (x**249) + 
            L0x20019a3c_f * (x**250) + L0x20019a3e_f * (x**251) + 
            L0x20019a40_f * (x**252) + L0x20019a42_f * (x**253) + 
            L0x20019a44_f * (x**254) + L0x20019a46_f * (x**255)
          )
          [25570049, x**4 - 5192558],
    (* inp_poly_37 *)
    eqmod (2**32) * (inp_poly_37 * inp_poly_37)
          (
            L0x20019848_f * (x**0) + L0x2001984a_f * (x**1) + 
            L0x2001984c_f * (x**2) + L0x2001984e_f * (x**3) + 
            L0x20019850_f * (x**4) + L0x20019852_f * (x**5) + 
            L0x20019854_f * (x**6) + L0x20019856_f * (x**7) + 
            L0x20019858_f * (x**8) + L0x2001985a_f * (x**9) + 
            L0x2001985c_f * (x**10) + L0x2001985e_f * (x**11) + 
            L0x20019860_f * (x**12) + L0x20019862_f * (x**13) + 
            L0x20019864_f * (x**14) + L0x20019866_f * (x**15) + 
            L0x20019868_f * (x**16) + L0x2001986a_f * (x**17) + 
            L0x2001986c_f * (x**18) + L0x2001986e_f * (x**19) + 
            L0x20019870_f * (x**20) + L0x20019872_f * (x**21) + 
            L0x20019874_f * (x**22) + L0x20019876_f * (x**23) + 
            L0x20019878_f * (x**24) + L0x2001987a_f * (x**25) + 
            L0x2001987c_f * (x**26) + L0x2001987e_f * (x**27) + 
            L0x20019880_f * (x**28) + L0x20019882_f * (x**29) + 
            L0x20019884_f * (x**30) + L0x20019886_f * (x**31) + 
            L0x20019888_f * (x**32) + L0x2001988a_f * (x**33) + 
            L0x2001988c_f * (x**34) + L0x2001988e_f * (x**35) + 
            L0x20019890_f * (x**36) + L0x20019892_f * (x**37) + 
            L0x20019894_f * (x**38) + L0x20019896_f * (x**39) + 
            L0x20019898_f * (x**40) + L0x2001989a_f * (x**41) + 
            L0x2001989c_f * (x**42) + L0x2001989e_f * (x**43) + 
            L0x200198a0_f * (x**44) + L0x200198a2_f * (x**45) + 
            L0x200198a4_f * (x**46) + L0x200198a6_f * (x**47) + 
            L0x200198a8_f * (x**48) + L0x200198aa_f * (x**49) + 
            L0x200198ac_f * (x**50) + L0x200198ae_f * (x**51) + 
            L0x200198b0_f * (x**52) + L0x200198b2_f * (x**53) + 
            L0x200198b4_f * (x**54) + L0x200198b6_f * (x**55) + 
            L0x200198b8_f * (x**56) + L0x200198ba_f * (x**57) + 
            L0x200198bc_f * (x**58) + L0x200198be_f * (x**59) + 
            L0x200198c0_f * (x**60) + L0x200198c2_f * (x**61) + 
            L0x200198c4_f * (x**62) + L0x200198c6_f * (x**63) + 
            L0x200198c8_f * (x**64) + L0x200198ca_f * (x**65) + 
            L0x200198cc_f * (x**66) + L0x200198ce_f * (x**67) + 
            L0x200198d0_f * (x**68) + L0x200198d2_f * (x**69) + 
            L0x200198d4_f * (x**70) + L0x200198d6_f * (x**71) + 
            L0x200198d8_f * (x**72) + L0x200198da_f * (x**73) + 
            L0x200198dc_f * (x**74) + L0x200198de_f * (x**75) + 
            L0x200198e0_f * (x**76) + L0x200198e2_f * (x**77) + 
            L0x200198e4_f * (x**78) + L0x200198e6_f * (x**79) + 
            L0x200198e8_f * (x**80) + L0x200198ea_f * (x**81) + 
            L0x200198ec_f * (x**82) + L0x200198ee_f * (x**83) + 
            L0x200198f0_f * (x**84) + L0x200198f2_f * (x**85) + 
            L0x200198f4_f * (x**86) + L0x200198f6_f * (x**87) + 
            L0x200198f8_f * (x**88) + L0x200198fa_f * (x**89) + 
            L0x200198fc_f * (x**90) + L0x200198fe_f * (x**91) + 
            L0x20019900_f * (x**92) + L0x20019902_f * (x**93) + 
            L0x20019904_f * (x**94) + L0x20019906_f * (x**95) + 
            L0x20019908_f * (x**96) + L0x2001990a_f * (x**97) + 
            L0x2001990c_f * (x**98) + L0x2001990e_f * (x**99) + 
            L0x20019910_f * (x**100) + L0x20019912_f * (x**101) + 
            L0x20019914_f * (x**102) + L0x20019916_f * (x**103) + 
            L0x20019918_f * (x**104) + L0x2001991a_f * (x**105) + 
            L0x2001991c_f * (x**106) + L0x2001991e_f * (x**107) + 
            L0x20019920_f * (x**108) + L0x20019922_f * (x**109) + 
            L0x20019924_f * (x**110) + L0x20019926_f * (x**111) + 
            L0x20019928_f * (x**112) + L0x2001992a_f * (x**113) + 
            L0x2001992c_f * (x**114) + L0x2001992e_f * (x**115) + 
            L0x20019930_f * (x**116) + L0x20019932_f * (x**117) + 
            L0x20019934_f * (x**118) + L0x20019936_f * (x**119) + 
            L0x20019938_f * (x**120) + L0x2001993a_f * (x**121) + 
            L0x2001993c_f * (x**122) + L0x2001993e_f * (x**123) + 
            L0x20019940_f * (x**124) + L0x20019942_f * (x**125) + 
            L0x20019944_f * (x**126) + L0x20019946_f * (x**127) + 
            L0x20019948_f * (x**128) + L0x2001994a_f * (x**129) + 
            L0x2001994c_f * (x**130) + L0x2001994e_f * (x**131) + 
            L0x20019950_f * (x**132) + L0x20019952_f * (x**133) + 
            L0x20019954_f * (x**134) + L0x20019956_f * (x**135) + 
            L0x20019958_f * (x**136) + L0x2001995a_f * (x**137) + 
            L0x2001995c_f * (x**138) + L0x2001995e_f * (x**139) + 
            L0x20019960_f * (x**140) + L0x20019962_f * (x**141) + 
            L0x20019964_f * (x**142) + L0x20019966_f * (x**143) + 
            L0x20019968_f * (x**144) + L0x2001996a_f * (x**145) + 
            L0x2001996c_f * (x**146) + L0x2001996e_f * (x**147) + 
            L0x20019970_f * (x**148) + L0x20019972_f * (x**149) + 
            L0x20019974_f * (x**150) + L0x20019976_f * (x**151) + 
            L0x20019978_f * (x**152) + L0x2001997a_f * (x**153) + 
            L0x2001997c_f * (x**154) + L0x2001997e_f * (x**155) + 
            L0x20019980_f * (x**156) + L0x20019982_f * (x**157) + 
            L0x20019984_f * (x**158) + L0x20019986_f * (x**159) + 
            L0x20019988_f * (x**160) + L0x2001998a_f * (x**161) + 
            L0x2001998c_f * (x**162) + L0x2001998e_f * (x**163) + 
            L0x20019990_f * (x**164) + L0x20019992_f * (x**165) + 
            L0x20019994_f * (x**166) + L0x20019996_f * (x**167) + 
            L0x20019998_f * (x**168) + L0x2001999a_f * (x**169) + 
            L0x2001999c_f * (x**170) + L0x2001999e_f * (x**171) + 
            L0x200199a0_f * (x**172) + L0x200199a2_f * (x**173) + 
            L0x200199a4_f * (x**174) + L0x200199a6_f * (x**175) + 
            L0x200199a8_f * (x**176) + L0x200199aa_f * (x**177) + 
            L0x200199ac_f * (x**178) + L0x200199ae_f * (x**179) + 
            L0x200199b0_f * (x**180) + L0x200199b2_f * (x**181) + 
            L0x200199b4_f * (x**182) + L0x200199b6_f * (x**183) + 
            L0x200199b8_f * (x**184) + L0x200199ba_f * (x**185) + 
            L0x200199bc_f * (x**186) + L0x200199be_f * (x**187) + 
            L0x200199c0_f * (x**188) + L0x200199c2_f * (x**189) + 
            L0x200199c4_f * (x**190) + L0x200199c6_f * (x**191) + 
            L0x200199c8_f * (x**192) + L0x200199ca_f * (x**193) + 
            L0x200199cc_f * (x**194) + L0x200199ce_f * (x**195) + 
            L0x200199d0_f * (x**196) + L0x200199d2_f * (x**197) + 
            L0x200199d4_f * (x**198) + L0x200199d6_f * (x**199) + 
            L0x200199d8_f * (x**200) + L0x200199da_f * (x**201) + 
            L0x200199dc_f * (x**202) + L0x200199de_f * (x**203) + 
            L0x200199e0_f * (x**204) + L0x200199e2_f * (x**205) + 
            L0x200199e4_f * (x**206) + L0x200199e6_f * (x**207) + 
            L0x200199e8_f * (x**208) + L0x200199ea_f * (x**209) + 
            L0x200199ec_f * (x**210) + L0x200199ee_f * (x**211) + 
            L0x200199f0_f * (x**212) + L0x200199f2_f * (x**213) + 
            L0x200199f4_f * (x**214) + L0x200199f6_f * (x**215) + 
            L0x200199f8_f * (x**216) + L0x200199fa_f * (x**217) + 
            L0x200199fc_f * (x**218) + L0x200199fe_f * (x**219) + 
            L0x20019a00_f * (x**220) + L0x20019a02_f * (x**221) + 
            L0x20019a04_f * (x**222) + L0x20019a06_f * (x**223) + 
            L0x20019a08_f * (x**224) + L0x20019a0a_f * (x**225) + 
            L0x20019a0c_f * (x**226) + L0x20019a0e_f * (x**227) + 
            L0x20019a10_f * (x**228) + L0x20019a12_f * (x**229) + 
            L0x20019a14_f * (x**230) + L0x20019a16_f * (x**231) + 
            L0x20019a18_f * (x**232) + L0x20019a1a_f * (x**233) + 
            L0x20019a1c_f * (x**234) + L0x20019a1e_f * (x**235) + 
            L0x20019a20_f * (x**236) + L0x20019a22_f * (x**237) + 
            L0x20019a24_f * (x**238) + L0x20019a26_f * (x**239) + 
            L0x20019a28_f * (x**240) + L0x20019a2a_f * (x**241) + 
            L0x20019a2c_f * (x**242) + L0x20019a2e_f * (x**243) + 
            L0x20019a30_f * (x**244) + L0x20019a32_f * (x**245) + 
            L0x20019a34_f * (x**246) + L0x20019a36_f * (x**247) + 
            L0x20019a38_f * (x**248) + L0x20019a3a_f * (x**249) + 
            L0x20019a3c_f * (x**250) + L0x20019a3e_f * (x**251) + 
            L0x20019a40_f * (x**252) + L0x20019a42_f * (x**253) + 
            L0x20019a44_f * (x**254) + L0x20019a46_f * (x**255)
          )
          [25570049, x**4 - 20377491],
    (* inp_poly_38 *)
    eqmod (2**32) * (inp_poly_38 * inp_poly_38)
          (
            L0x20019848_f * (x**0) + L0x2001984a_f * (x**1) + 
            L0x2001984c_f * (x**2) + L0x2001984e_f * (x**3) + 
            L0x20019850_f * (x**4) + L0x20019852_f * (x**5) + 
            L0x20019854_f * (x**6) + L0x20019856_f * (x**7) + 
            L0x20019858_f * (x**8) + L0x2001985a_f * (x**9) + 
            L0x2001985c_f * (x**10) + L0x2001985e_f * (x**11) + 
            L0x20019860_f * (x**12) + L0x20019862_f * (x**13) + 
            L0x20019864_f * (x**14) + L0x20019866_f * (x**15) + 
            L0x20019868_f * (x**16) + L0x2001986a_f * (x**17) + 
            L0x2001986c_f * (x**18) + L0x2001986e_f * (x**19) + 
            L0x20019870_f * (x**20) + L0x20019872_f * (x**21) + 
            L0x20019874_f * (x**22) + L0x20019876_f * (x**23) + 
            L0x20019878_f * (x**24) + L0x2001987a_f * (x**25) + 
            L0x2001987c_f * (x**26) + L0x2001987e_f * (x**27) + 
            L0x20019880_f * (x**28) + L0x20019882_f * (x**29) + 
            L0x20019884_f * (x**30) + L0x20019886_f * (x**31) + 
            L0x20019888_f * (x**32) + L0x2001988a_f * (x**33) + 
            L0x2001988c_f * (x**34) + L0x2001988e_f * (x**35) + 
            L0x20019890_f * (x**36) + L0x20019892_f * (x**37) + 
            L0x20019894_f * (x**38) + L0x20019896_f * (x**39) + 
            L0x20019898_f * (x**40) + L0x2001989a_f * (x**41) + 
            L0x2001989c_f * (x**42) + L0x2001989e_f * (x**43) + 
            L0x200198a0_f * (x**44) + L0x200198a2_f * (x**45) + 
            L0x200198a4_f * (x**46) + L0x200198a6_f * (x**47) + 
            L0x200198a8_f * (x**48) + L0x200198aa_f * (x**49) + 
            L0x200198ac_f * (x**50) + L0x200198ae_f * (x**51) + 
            L0x200198b0_f * (x**52) + L0x200198b2_f * (x**53) + 
            L0x200198b4_f * (x**54) + L0x200198b6_f * (x**55) + 
            L0x200198b8_f * (x**56) + L0x200198ba_f * (x**57) + 
            L0x200198bc_f * (x**58) + L0x200198be_f * (x**59) + 
            L0x200198c0_f * (x**60) + L0x200198c2_f * (x**61) + 
            L0x200198c4_f * (x**62) + L0x200198c6_f * (x**63) + 
            L0x200198c8_f * (x**64) + L0x200198ca_f * (x**65) + 
            L0x200198cc_f * (x**66) + L0x200198ce_f * (x**67) + 
            L0x200198d0_f * (x**68) + L0x200198d2_f * (x**69) + 
            L0x200198d4_f * (x**70) + L0x200198d6_f * (x**71) + 
            L0x200198d8_f * (x**72) + L0x200198da_f * (x**73) + 
            L0x200198dc_f * (x**74) + L0x200198de_f * (x**75) + 
            L0x200198e0_f * (x**76) + L0x200198e2_f * (x**77) + 
            L0x200198e4_f * (x**78) + L0x200198e6_f * (x**79) + 
            L0x200198e8_f * (x**80) + L0x200198ea_f * (x**81) + 
            L0x200198ec_f * (x**82) + L0x200198ee_f * (x**83) + 
            L0x200198f0_f * (x**84) + L0x200198f2_f * (x**85) + 
            L0x200198f4_f * (x**86) + L0x200198f6_f * (x**87) + 
            L0x200198f8_f * (x**88) + L0x200198fa_f * (x**89) + 
            L0x200198fc_f * (x**90) + L0x200198fe_f * (x**91) + 
            L0x20019900_f * (x**92) + L0x20019902_f * (x**93) + 
            L0x20019904_f * (x**94) + L0x20019906_f * (x**95) + 
            L0x20019908_f * (x**96) + L0x2001990a_f * (x**97) + 
            L0x2001990c_f * (x**98) + L0x2001990e_f * (x**99) + 
            L0x20019910_f * (x**100) + L0x20019912_f * (x**101) + 
            L0x20019914_f * (x**102) + L0x20019916_f * (x**103) + 
            L0x20019918_f * (x**104) + L0x2001991a_f * (x**105) + 
            L0x2001991c_f * (x**106) + L0x2001991e_f * (x**107) + 
            L0x20019920_f * (x**108) + L0x20019922_f * (x**109) + 
            L0x20019924_f * (x**110) + L0x20019926_f * (x**111) + 
            L0x20019928_f * (x**112) + L0x2001992a_f * (x**113) + 
            L0x2001992c_f * (x**114) + L0x2001992e_f * (x**115) + 
            L0x20019930_f * (x**116) + L0x20019932_f * (x**117) + 
            L0x20019934_f * (x**118) + L0x20019936_f * (x**119) + 
            L0x20019938_f * (x**120) + L0x2001993a_f * (x**121) + 
            L0x2001993c_f * (x**122) + L0x2001993e_f * (x**123) + 
            L0x20019940_f * (x**124) + L0x20019942_f * (x**125) + 
            L0x20019944_f * (x**126) + L0x20019946_f * (x**127) + 
            L0x20019948_f * (x**128) + L0x2001994a_f * (x**129) + 
            L0x2001994c_f * (x**130) + L0x2001994e_f * (x**131) + 
            L0x20019950_f * (x**132) + L0x20019952_f * (x**133) + 
            L0x20019954_f * (x**134) + L0x20019956_f * (x**135) + 
            L0x20019958_f * (x**136) + L0x2001995a_f * (x**137) + 
            L0x2001995c_f * (x**138) + L0x2001995e_f * (x**139) + 
            L0x20019960_f * (x**140) + L0x20019962_f * (x**141) + 
            L0x20019964_f * (x**142) + L0x20019966_f * (x**143) + 
            L0x20019968_f * (x**144) + L0x2001996a_f * (x**145) + 
            L0x2001996c_f * (x**146) + L0x2001996e_f * (x**147) + 
            L0x20019970_f * (x**148) + L0x20019972_f * (x**149) + 
            L0x20019974_f * (x**150) + L0x20019976_f * (x**151) + 
            L0x20019978_f * (x**152) + L0x2001997a_f * (x**153) + 
            L0x2001997c_f * (x**154) + L0x2001997e_f * (x**155) + 
            L0x20019980_f * (x**156) + L0x20019982_f * (x**157) + 
            L0x20019984_f * (x**158) + L0x20019986_f * (x**159) + 
            L0x20019988_f * (x**160) + L0x2001998a_f * (x**161) + 
            L0x2001998c_f * (x**162) + L0x2001998e_f * (x**163) + 
            L0x20019990_f * (x**164) + L0x20019992_f * (x**165) + 
            L0x20019994_f * (x**166) + L0x20019996_f * (x**167) + 
            L0x20019998_f * (x**168) + L0x2001999a_f * (x**169) + 
            L0x2001999c_f * (x**170) + L0x2001999e_f * (x**171) + 
            L0x200199a0_f * (x**172) + L0x200199a2_f * (x**173) + 
            L0x200199a4_f * (x**174) + L0x200199a6_f * (x**175) + 
            L0x200199a8_f * (x**176) + L0x200199aa_f * (x**177) + 
            L0x200199ac_f * (x**178) + L0x200199ae_f * (x**179) + 
            L0x200199b0_f * (x**180) + L0x200199b2_f * (x**181) + 
            L0x200199b4_f * (x**182) + L0x200199b6_f * (x**183) + 
            L0x200199b8_f * (x**184) + L0x200199ba_f * (x**185) + 
            L0x200199bc_f * (x**186) + L0x200199be_f * (x**187) + 
            L0x200199c0_f * (x**188) + L0x200199c2_f * (x**189) + 
            L0x200199c4_f * (x**190) + L0x200199c6_f * (x**191) + 
            L0x200199c8_f * (x**192) + L0x200199ca_f * (x**193) + 
            L0x200199cc_f * (x**194) + L0x200199ce_f * (x**195) + 
            L0x200199d0_f * (x**196) + L0x200199d2_f * (x**197) + 
            L0x200199d4_f * (x**198) + L0x200199d6_f * (x**199) + 
            L0x200199d8_f * (x**200) + L0x200199da_f * (x**201) + 
            L0x200199dc_f * (x**202) + L0x200199de_f * (x**203) + 
            L0x200199e0_f * (x**204) + L0x200199e2_f * (x**205) + 
            L0x200199e4_f * (x**206) + L0x200199e6_f * (x**207) + 
            L0x200199e8_f * (x**208) + L0x200199ea_f * (x**209) + 
            L0x200199ec_f * (x**210) + L0x200199ee_f * (x**211) + 
            L0x200199f0_f * (x**212) + L0x200199f2_f * (x**213) + 
            L0x200199f4_f * (x**214) + L0x200199f6_f * (x**215) + 
            L0x200199f8_f * (x**216) + L0x200199fa_f * (x**217) + 
            L0x200199fc_f * (x**218) + L0x200199fe_f * (x**219) + 
            L0x20019a00_f * (x**220) + L0x20019a02_f * (x**221) + 
            L0x20019a04_f * (x**222) + L0x20019a06_f * (x**223) + 
            L0x20019a08_f * (x**224) + L0x20019a0a_f * (x**225) + 
            L0x20019a0c_f * (x**226) + L0x20019a0e_f * (x**227) + 
            L0x20019a10_f * (x**228) + L0x20019a12_f * (x**229) + 
            L0x20019a14_f * (x**230) + L0x20019a16_f * (x**231) + 
            L0x20019a18_f * (x**232) + L0x20019a1a_f * (x**233) + 
            L0x20019a1c_f * (x**234) + L0x20019a1e_f * (x**235) + 
            L0x20019a20_f * (x**236) + L0x20019a22_f * (x**237) + 
            L0x20019a24_f * (x**238) + L0x20019a26_f * (x**239) + 
            L0x20019a28_f * (x**240) + L0x20019a2a_f * (x**241) + 
            L0x20019a2c_f * (x**242) + L0x20019a2e_f * (x**243) + 
            L0x20019a30_f * (x**244) + L0x20019a32_f * (x**245) + 
            L0x20019a34_f * (x**246) + L0x20019a36_f * (x**247) + 
            L0x20019a38_f * (x**248) + L0x20019a3a_f * (x**249) + 
            L0x20019a3c_f * (x**250) + L0x20019a3e_f * (x**251) + 
            L0x20019a40_f * (x**252) + L0x20019a42_f * (x**253) + 
            L0x20019a44_f * (x**254) + L0x20019a46_f * (x**255)
          )
          [25570049, x**4 - 25163199],
    (* inp_poly_39 *)
    eqmod (2**32) * (inp_poly_39 * inp_poly_39)
          (
            L0x20019848_f * (x**0) + L0x2001984a_f * (x**1) + 
            L0x2001984c_f * (x**2) + L0x2001984e_f * (x**3) + 
            L0x20019850_f * (x**4) + L0x20019852_f * (x**5) + 
            L0x20019854_f * (x**6) + L0x20019856_f * (x**7) + 
            L0x20019858_f * (x**8) + L0x2001985a_f * (x**9) + 
            L0x2001985c_f * (x**10) + L0x2001985e_f * (x**11) + 
            L0x20019860_f * (x**12) + L0x20019862_f * (x**13) + 
            L0x20019864_f * (x**14) + L0x20019866_f * (x**15) + 
            L0x20019868_f * (x**16) + L0x2001986a_f * (x**17) + 
            L0x2001986c_f * (x**18) + L0x2001986e_f * (x**19) + 
            L0x20019870_f * (x**20) + L0x20019872_f * (x**21) + 
            L0x20019874_f * (x**22) + L0x20019876_f * (x**23) + 
            L0x20019878_f * (x**24) + L0x2001987a_f * (x**25) + 
            L0x2001987c_f * (x**26) + L0x2001987e_f * (x**27) + 
            L0x20019880_f * (x**28) + L0x20019882_f * (x**29) + 
            L0x20019884_f * (x**30) + L0x20019886_f * (x**31) + 
            L0x20019888_f * (x**32) + L0x2001988a_f * (x**33) + 
            L0x2001988c_f * (x**34) + L0x2001988e_f * (x**35) + 
            L0x20019890_f * (x**36) + L0x20019892_f * (x**37) + 
            L0x20019894_f * (x**38) + L0x20019896_f * (x**39) + 
            L0x20019898_f * (x**40) + L0x2001989a_f * (x**41) + 
            L0x2001989c_f * (x**42) + L0x2001989e_f * (x**43) + 
            L0x200198a0_f * (x**44) + L0x200198a2_f * (x**45) + 
            L0x200198a4_f * (x**46) + L0x200198a6_f * (x**47) + 
            L0x200198a8_f * (x**48) + L0x200198aa_f * (x**49) + 
            L0x200198ac_f * (x**50) + L0x200198ae_f * (x**51) + 
            L0x200198b0_f * (x**52) + L0x200198b2_f * (x**53) + 
            L0x200198b4_f * (x**54) + L0x200198b6_f * (x**55) + 
            L0x200198b8_f * (x**56) + L0x200198ba_f * (x**57) + 
            L0x200198bc_f * (x**58) + L0x200198be_f * (x**59) + 
            L0x200198c0_f * (x**60) + L0x200198c2_f * (x**61) + 
            L0x200198c4_f * (x**62) + L0x200198c6_f * (x**63) + 
            L0x200198c8_f * (x**64) + L0x200198ca_f * (x**65) + 
            L0x200198cc_f * (x**66) + L0x200198ce_f * (x**67) + 
            L0x200198d0_f * (x**68) + L0x200198d2_f * (x**69) + 
            L0x200198d4_f * (x**70) + L0x200198d6_f * (x**71) + 
            L0x200198d8_f * (x**72) + L0x200198da_f * (x**73) + 
            L0x200198dc_f * (x**74) + L0x200198de_f * (x**75) + 
            L0x200198e0_f * (x**76) + L0x200198e2_f * (x**77) + 
            L0x200198e4_f * (x**78) + L0x200198e6_f * (x**79) + 
            L0x200198e8_f * (x**80) + L0x200198ea_f * (x**81) + 
            L0x200198ec_f * (x**82) + L0x200198ee_f * (x**83) + 
            L0x200198f0_f * (x**84) + L0x200198f2_f * (x**85) + 
            L0x200198f4_f * (x**86) + L0x200198f6_f * (x**87) + 
            L0x200198f8_f * (x**88) + L0x200198fa_f * (x**89) + 
            L0x200198fc_f * (x**90) + L0x200198fe_f * (x**91) + 
            L0x20019900_f * (x**92) + L0x20019902_f * (x**93) + 
            L0x20019904_f * (x**94) + L0x20019906_f * (x**95) + 
            L0x20019908_f * (x**96) + L0x2001990a_f * (x**97) + 
            L0x2001990c_f * (x**98) + L0x2001990e_f * (x**99) + 
            L0x20019910_f * (x**100) + L0x20019912_f * (x**101) + 
            L0x20019914_f * (x**102) + L0x20019916_f * (x**103) + 
            L0x20019918_f * (x**104) + L0x2001991a_f * (x**105) + 
            L0x2001991c_f * (x**106) + L0x2001991e_f * (x**107) + 
            L0x20019920_f * (x**108) + L0x20019922_f * (x**109) + 
            L0x20019924_f * (x**110) + L0x20019926_f * (x**111) + 
            L0x20019928_f * (x**112) + L0x2001992a_f * (x**113) + 
            L0x2001992c_f * (x**114) + L0x2001992e_f * (x**115) + 
            L0x20019930_f * (x**116) + L0x20019932_f * (x**117) + 
            L0x20019934_f * (x**118) + L0x20019936_f * (x**119) + 
            L0x20019938_f * (x**120) + L0x2001993a_f * (x**121) + 
            L0x2001993c_f * (x**122) + L0x2001993e_f * (x**123) + 
            L0x20019940_f * (x**124) + L0x20019942_f * (x**125) + 
            L0x20019944_f * (x**126) + L0x20019946_f * (x**127) + 
            L0x20019948_f * (x**128) + L0x2001994a_f * (x**129) + 
            L0x2001994c_f * (x**130) + L0x2001994e_f * (x**131) + 
            L0x20019950_f * (x**132) + L0x20019952_f * (x**133) + 
            L0x20019954_f * (x**134) + L0x20019956_f * (x**135) + 
            L0x20019958_f * (x**136) + L0x2001995a_f * (x**137) + 
            L0x2001995c_f * (x**138) + L0x2001995e_f * (x**139) + 
            L0x20019960_f * (x**140) + L0x20019962_f * (x**141) + 
            L0x20019964_f * (x**142) + L0x20019966_f * (x**143) + 
            L0x20019968_f * (x**144) + L0x2001996a_f * (x**145) + 
            L0x2001996c_f * (x**146) + L0x2001996e_f * (x**147) + 
            L0x20019970_f * (x**148) + L0x20019972_f * (x**149) + 
            L0x20019974_f * (x**150) + L0x20019976_f * (x**151) + 
            L0x20019978_f * (x**152) + L0x2001997a_f * (x**153) + 
            L0x2001997c_f * (x**154) + L0x2001997e_f * (x**155) + 
            L0x20019980_f * (x**156) + L0x20019982_f * (x**157) + 
            L0x20019984_f * (x**158) + L0x20019986_f * (x**159) + 
            L0x20019988_f * (x**160) + L0x2001998a_f * (x**161) + 
            L0x2001998c_f * (x**162) + L0x2001998e_f * (x**163) + 
            L0x20019990_f * (x**164) + L0x20019992_f * (x**165) + 
            L0x20019994_f * (x**166) + L0x20019996_f * (x**167) + 
            L0x20019998_f * (x**168) + L0x2001999a_f * (x**169) + 
            L0x2001999c_f * (x**170) + L0x2001999e_f * (x**171) + 
            L0x200199a0_f * (x**172) + L0x200199a2_f * (x**173) + 
            L0x200199a4_f * (x**174) + L0x200199a6_f * (x**175) + 
            L0x200199a8_f * (x**176) + L0x200199aa_f * (x**177) + 
            L0x200199ac_f * (x**178) + L0x200199ae_f * (x**179) + 
            L0x200199b0_f * (x**180) + L0x200199b2_f * (x**181) + 
            L0x200199b4_f * (x**182) + L0x200199b6_f * (x**183) + 
            L0x200199b8_f * (x**184) + L0x200199ba_f * (x**185) + 
            L0x200199bc_f * (x**186) + L0x200199be_f * (x**187) + 
            L0x200199c0_f * (x**188) + L0x200199c2_f * (x**189) + 
            L0x200199c4_f * (x**190) + L0x200199c6_f * (x**191) + 
            L0x200199c8_f * (x**192) + L0x200199ca_f * (x**193) + 
            L0x200199cc_f * (x**194) + L0x200199ce_f * (x**195) + 
            L0x200199d0_f * (x**196) + L0x200199d2_f * (x**197) + 
            L0x200199d4_f * (x**198) + L0x200199d6_f * (x**199) + 
            L0x200199d8_f * (x**200) + L0x200199da_f * (x**201) + 
            L0x200199dc_f * (x**202) + L0x200199de_f * (x**203) + 
            L0x200199e0_f * (x**204) + L0x200199e2_f * (x**205) + 
            L0x200199e4_f * (x**206) + L0x200199e6_f * (x**207) + 
            L0x200199e8_f * (x**208) + L0x200199ea_f * (x**209) + 
            L0x200199ec_f * (x**210) + L0x200199ee_f * (x**211) + 
            L0x200199f0_f * (x**212) + L0x200199f2_f * (x**213) + 
            L0x200199f4_f * (x**214) + L0x200199f6_f * (x**215) + 
            L0x200199f8_f * (x**216) + L0x200199fa_f * (x**217) + 
            L0x200199fc_f * (x**218) + L0x200199fe_f * (x**219) + 
            L0x20019a00_f * (x**220) + L0x20019a02_f * (x**221) + 
            L0x20019a04_f * (x**222) + L0x20019a06_f * (x**223) + 
            L0x20019a08_f * (x**224) + L0x20019a0a_f * (x**225) + 
            L0x20019a0c_f * (x**226) + L0x20019a0e_f * (x**227) + 
            L0x20019a10_f * (x**228) + L0x20019a12_f * (x**229) + 
            L0x20019a14_f * (x**230) + L0x20019a16_f * (x**231) + 
            L0x20019a18_f * (x**232) + L0x20019a1a_f * (x**233) + 
            L0x20019a1c_f * (x**234) + L0x20019a1e_f * (x**235) + 
            L0x20019a20_f * (x**236) + L0x20019a22_f * (x**237) + 
            L0x20019a24_f * (x**238) + L0x20019a26_f * (x**239) + 
            L0x20019a28_f * (x**240) + L0x20019a2a_f * (x**241) + 
            L0x20019a2c_f * (x**242) + L0x20019a2e_f * (x**243) + 
            L0x20019a30_f * (x**244) + L0x20019a32_f * (x**245) + 
            L0x20019a34_f * (x**246) + L0x20019a36_f * (x**247) + 
            L0x20019a38_f * (x**248) + L0x20019a3a_f * (x**249) + 
            L0x20019a3c_f * (x**250) + L0x20019a3e_f * (x**251) + 
            L0x20019a40_f * (x**252) + L0x20019a42_f * (x**253) + 
            L0x20019a44_f * (x**254) + L0x20019a46_f * (x**255)
          )
          [25570049, x**4 - 406850],
    (* inp_poly_40 *)
    eqmod (2**32) * (inp_poly_40 * inp_poly_40)
          (
            L0x20019848_f * (x**0) + L0x2001984a_f * (x**1) + 
            L0x2001984c_f * (x**2) + L0x2001984e_f * (x**3) + 
            L0x20019850_f * (x**4) + L0x20019852_f * (x**5) + 
            L0x20019854_f * (x**6) + L0x20019856_f * (x**7) + 
            L0x20019858_f * (x**8) + L0x2001985a_f * (x**9) + 
            L0x2001985c_f * (x**10) + L0x2001985e_f * (x**11) + 
            L0x20019860_f * (x**12) + L0x20019862_f * (x**13) + 
            L0x20019864_f * (x**14) + L0x20019866_f * (x**15) + 
            L0x20019868_f * (x**16) + L0x2001986a_f * (x**17) + 
            L0x2001986c_f * (x**18) + L0x2001986e_f * (x**19) + 
            L0x20019870_f * (x**20) + L0x20019872_f * (x**21) + 
            L0x20019874_f * (x**22) + L0x20019876_f * (x**23) + 
            L0x20019878_f * (x**24) + L0x2001987a_f * (x**25) + 
            L0x2001987c_f * (x**26) + L0x2001987e_f * (x**27) + 
            L0x20019880_f * (x**28) + L0x20019882_f * (x**29) + 
            L0x20019884_f * (x**30) + L0x20019886_f * (x**31) + 
            L0x20019888_f * (x**32) + L0x2001988a_f * (x**33) + 
            L0x2001988c_f * (x**34) + L0x2001988e_f * (x**35) + 
            L0x20019890_f * (x**36) + L0x20019892_f * (x**37) + 
            L0x20019894_f * (x**38) + L0x20019896_f * (x**39) + 
            L0x20019898_f * (x**40) + L0x2001989a_f * (x**41) + 
            L0x2001989c_f * (x**42) + L0x2001989e_f * (x**43) + 
            L0x200198a0_f * (x**44) + L0x200198a2_f * (x**45) + 
            L0x200198a4_f * (x**46) + L0x200198a6_f * (x**47) + 
            L0x200198a8_f * (x**48) + L0x200198aa_f * (x**49) + 
            L0x200198ac_f * (x**50) + L0x200198ae_f * (x**51) + 
            L0x200198b0_f * (x**52) + L0x200198b2_f * (x**53) + 
            L0x200198b4_f * (x**54) + L0x200198b6_f * (x**55) + 
            L0x200198b8_f * (x**56) + L0x200198ba_f * (x**57) + 
            L0x200198bc_f * (x**58) + L0x200198be_f * (x**59) + 
            L0x200198c0_f * (x**60) + L0x200198c2_f * (x**61) + 
            L0x200198c4_f * (x**62) + L0x200198c6_f * (x**63) + 
            L0x200198c8_f * (x**64) + L0x200198ca_f * (x**65) + 
            L0x200198cc_f * (x**66) + L0x200198ce_f * (x**67) + 
            L0x200198d0_f * (x**68) + L0x200198d2_f * (x**69) + 
            L0x200198d4_f * (x**70) + L0x200198d6_f * (x**71) + 
            L0x200198d8_f * (x**72) + L0x200198da_f * (x**73) + 
            L0x200198dc_f * (x**74) + L0x200198de_f * (x**75) + 
            L0x200198e0_f * (x**76) + L0x200198e2_f * (x**77) + 
            L0x200198e4_f * (x**78) + L0x200198e6_f * (x**79) + 
            L0x200198e8_f * (x**80) + L0x200198ea_f * (x**81) + 
            L0x200198ec_f * (x**82) + L0x200198ee_f * (x**83) + 
            L0x200198f0_f * (x**84) + L0x200198f2_f * (x**85) + 
            L0x200198f4_f * (x**86) + L0x200198f6_f * (x**87) + 
            L0x200198f8_f * (x**88) + L0x200198fa_f * (x**89) + 
            L0x200198fc_f * (x**90) + L0x200198fe_f * (x**91) + 
            L0x20019900_f * (x**92) + L0x20019902_f * (x**93) + 
            L0x20019904_f * (x**94) + L0x20019906_f * (x**95) + 
            L0x20019908_f * (x**96) + L0x2001990a_f * (x**97) + 
            L0x2001990c_f * (x**98) + L0x2001990e_f * (x**99) + 
            L0x20019910_f * (x**100) + L0x20019912_f * (x**101) + 
            L0x20019914_f * (x**102) + L0x20019916_f * (x**103) + 
            L0x20019918_f * (x**104) + L0x2001991a_f * (x**105) + 
            L0x2001991c_f * (x**106) + L0x2001991e_f * (x**107) + 
            L0x20019920_f * (x**108) + L0x20019922_f * (x**109) + 
            L0x20019924_f * (x**110) + L0x20019926_f * (x**111) + 
            L0x20019928_f * (x**112) + L0x2001992a_f * (x**113) + 
            L0x2001992c_f * (x**114) + L0x2001992e_f * (x**115) + 
            L0x20019930_f * (x**116) + L0x20019932_f * (x**117) + 
            L0x20019934_f * (x**118) + L0x20019936_f * (x**119) + 
            L0x20019938_f * (x**120) + L0x2001993a_f * (x**121) + 
            L0x2001993c_f * (x**122) + L0x2001993e_f * (x**123) + 
            L0x20019940_f * (x**124) + L0x20019942_f * (x**125) + 
            L0x20019944_f * (x**126) + L0x20019946_f * (x**127) + 
            L0x20019948_f * (x**128) + L0x2001994a_f * (x**129) + 
            L0x2001994c_f * (x**130) + L0x2001994e_f * (x**131) + 
            L0x20019950_f * (x**132) + L0x20019952_f * (x**133) + 
            L0x20019954_f * (x**134) + L0x20019956_f * (x**135) + 
            L0x20019958_f * (x**136) + L0x2001995a_f * (x**137) + 
            L0x2001995c_f * (x**138) + L0x2001995e_f * (x**139) + 
            L0x20019960_f * (x**140) + L0x20019962_f * (x**141) + 
            L0x20019964_f * (x**142) + L0x20019966_f * (x**143) + 
            L0x20019968_f * (x**144) + L0x2001996a_f * (x**145) + 
            L0x2001996c_f * (x**146) + L0x2001996e_f * (x**147) + 
            L0x20019970_f * (x**148) + L0x20019972_f * (x**149) + 
            L0x20019974_f * (x**150) + L0x20019976_f * (x**151) + 
            L0x20019978_f * (x**152) + L0x2001997a_f * (x**153) + 
            L0x2001997c_f * (x**154) + L0x2001997e_f * (x**155) + 
            L0x20019980_f * (x**156) + L0x20019982_f * (x**157) + 
            L0x20019984_f * (x**158) + L0x20019986_f * (x**159) + 
            L0x20019988_f * (x**160) + L0x2001998a_f * (x**161) + 
            L0x2001998c_f * (x**162) + L0x2001998e_f * (x**163) + 
            L0x20019990_f * (x**164) + L0x20019992_f * (x**165) + 
            L0x20019994_f * (x**166) + L0x20019996_f * (x**167) + 
            L0x20019998_f * (x**168) + L0x2001999a_f * (x**169) + 
            L0x2001999c_f * (x**170) + L0x2001999e_f * (x**171) + 
            L0x200199a0_f * (x**172) + L0x200199a2_f * (x**173) + 
            L0x200199a4_f * (x**174) + L0x200199a6_f * (x**175) + 
            L0x200199a8_f * (x**176) + L0x200199aa_f * (x**177) + 
            L0x200199ac_f * (x**178) + L0x200199ae_f * (x**179) + 
            L0x200199b0_f * (x**180) + L0x200199b2_f * (x**181) + 
            L0x200199b4_f * (x**182) + L0x200199b6_f * (x**183) + 
            L0x200199b8_f * (x**184) + L0x200199ba_f * (x**185) + 
            L0x200199bc_f * (x**186) + L0x200199be_f * (x**187) + 
            L0x200199c0_f * (x**188) + L0x200199c2_f * (x**189) + 
            L0x200199c4_f * (x**190) + L0x200199c6_f * (x**191) + 
            L0x200199c8_f * (x**192) + L0x200199ca_f * (x**193) + 
            L0x200199cc_f * (x**194) + L0x200199ce_f * (x**195) + 
            L0x200199d0_f * (x**196) + L0x200199d2_f * (x**197) + 
            L0x200199d4_f * (x**198) + L0x200199d6_f * (x**199) + 
            L0x200199d8_f * (x**200) + L0x200199da_f * (x**201) + 
            L0x200199dc_f * (x**202) + L0x200199de_f * (x**203) + 
            L0x200199e0_f * (x**204) + L0x200199e2_f * (x**205) + 
            L0x200199e4_f * (x**206) + L0x200199e6_f * (x**207) + 
            L0x200199e8_f * (x**208) + L0x200199ea_f * (x**209) + 
            L0x200199ec_f * (x**210) + L0x200199ee_f * (x**211) + 
            L0x200199f0_f * (x**212) + L0x200199f2_f * (x**213) + 
            L0x200199f4_f * (x**214) + L0x200199f6_f * (x**215) + 
            L0x200199f8_f * (x**216) + L0x200199fa_f * (x**217) + 
            L0x200199fc_f * (x**218) + L0x200199fe_f * (x**219) + 
            L0x20019a00_f * (x**220) + L0x20019a02_f * (x**221) + 
            L0x20019a04_f * (x**222) + L0x20019a06_f * (x**223) + 
            L0x20019a08_f * (x**224) + L0x20019a0a_f * (x**225) + 
            L0x20019a0c_f * (x**226) + L0x20019a0e_f * (x**227) + 
            L0x20019a10_f * (x**228) + L0x20019a12_f * (x**229) + 
            L0x20019a14_f * (x**230) + L0x20019a16_f * (x**231) + 
            L0x20019a18_f * (x**232) + L0x20019a1a_f * (x**233) + 
            L0x20019a1c_f * (x**234) + L0x20019a1e_f * (x**235) + 
            L0x20019a20_f * (x**236) + L0x20019a22_f * (x**237) + 
            L0x20019a24_f * (x**238) + L0x20019a26_f * (x**239) + 
            L0x20019a28_f * (x**240) + L0x20019a2a_f * (x**241) + 
            L0x20019a2c_f * (x**242) + L0x20019a2e_f * (x**243) + 
            L0x20019a30_f * (x**244) + L0x20019a32_f * (x**245) + 
            L0x20019a34_f * (x**246) + L0x20019a36_f * (x**247) + 
            L0x20019a38_f * (x**248) + L0x20019a3a_f * (x**249) + 
            L0x20019a3c_f * (x**250) + L0x20019a3e_f * (x**251) + 
            L0x20019a40_f * (x**252) + L0x20019a42_f * (x**253) + 
            L0x20019a44_f * (x**254) + L0x20019a46_f * (x**255)
          )
          [25570049, x**4 - 19921963],
    (* inp_poly_41 *)
    eqmod (2**32) * (inp_poly_41 * inp_poly_41)
          (
            L0x20019848_f * (x**0) + L0x2001984a_f * (x**1) + 
            L0x2001984c_f * (x**2) + L0x2001984e_f * (x**3) + 
            L0x20019850_f * (x**4) + L0x20019852_f * (x**5) + 
            L0x20019854_f * (x**6) + L0x20019856_f * (x**7) + 
            L0x20019858_f * (x**8) + L0x2001985a_f * (x**9) + 
            L0x2001985c_f * (x**10) + L0x2001985e_f * (x**11) + 
            L0x20019860_f * (x**12) + L0x20019862_f * (x**13) + 
            L0x20019864_f * (x**14) + L0x20019866_f * (x**15) + 
            L0x20019868_f * (x**16) + L0x2001986a_f * (x**17) + 
            L0x2001986c_f * (x**18) + L0x2001986e_f * (x**19) + 
            L0x20019870_f * (x**20) + L0x20019872_f * (x**21) + 
            L0x20019874_f * (x**22) + L0x20019876_f * (x**23) + 
            L0x20019878_f * (x**24) + L0x2001987a_f * (x**25) + 
            L0x2001987c_f * (x**26) + L0x2001987e_f * (x**27) + 
            L0x20019880_f * (x**28) + L0x20019882_f * (x**29) + 
            L0x20019884_f * (x**30) + L0x20019886_f * (x**31) + 
            L0x20019888_f * (x**32) + L0x2001988a_f * (x**33) + 
            L0x2001988c_f * (x**34) + L0x2001988e_f * (x**35) + 
            L0x20019890_f * (x**36) + L0x20019892_f * (x**37) + 
            L0x20019894_f * (x**38) + L0x20019896_f * (x**39) + 
            L0x20019898_f * (x**40) + L0x2001989a_f * (x**41) + 
            L0x2001989c_f * (x**42) + L0x2001989e_f * (x**43) + 
            L0x200198a0_f * (x**44) + L0x200198a2_f * (x**45) + 
            L0x200198a4_f * (x**46) + L0x200198a6_f * (x**47) + 
            L0x200198a8_f * (x**48) + L0x200198aa_f * (x**49) + 
            L0x200198ac_f * (x**50) + L0x200198ae_f * (x**51) + 
            L0x200198b0_f * (x**52) + L0x200198b2_f * (x**53) + 
            L0x200198b4_f * (x**54) + L0x200198b6_f * (x**55) + 
            L0x200198b8_f * (x**56) + L0x200198ba_f * (x**57) + 
            L0x200198bc_f * (x**58) + L0x200198be_f * (x**59) + 
            L0x200198c0_f * (x**60) + L0x200198c2_f * (x**61) + 
            L0x200198c4_f * (x**62) + L0x200198c6_f * (x**63) + 
            L0x200198c8_f * (x**64) + L0x200198ca_f * (x**65) + 
            L0x200198cc_f * (x**66) + L0x200198ce_f * (x**67) + 
            L0x200198d0_f * (x**68) + L0x200198d2_f * (x**69) + 
            L0x200198d4_f * (x**70) + L0x200198d6_f * (x**71) + 
            L0x200198d8_f * (x**72) + L0x200198da_f * (x**73) + 
            L0x200198dc_f * (x**74) + L0x200198de_f * (x**75) + 
            L0x200198e0_f * (x**76) + L0x200198e2_f * (x**77) + 
            L0x200198e4_f * (x**78) + L0x200198e6_f * (x**79) + 
            L0x200198e8_f * (x**80) + L0x200198ea_f * (x**81) + 
            L0x200198ec_f * (x**82) + L0x200198ee_f * (x**83) + 
            L0x200198f0_f * (x**84) + L0x200198f2_f * (x**85) + 
            L0x200198f4_f * (x**86) + L0x200198f6_f * (x**87) + 
            L0x200198f8_f * (x**88) + L0x200198fa_f * (x**89) + 
            L0x200198fc_f * (x**90) + L0x200198fe_f * (x**91) + 
            L0x20019900_f * (x**92) + L0x20019902_f * (x**93) + 
            L0x20019904_f * (x**94) + L0x20019906_f * (x**95) + 
            L0x20019908_f * (x**96) + L0x2001990a_f * (x**97) + 
            L0x2001990c_f * (x**98) + L0x2001990e_f * (x**99) + 
            L0x20019910_f * (x**100) + L0x20019912_f * (x**101) + 
            L0x20019914_f * (x**102) + L0x20019916_f * (x**103) + 
            L0x20019918_f * (x**104) + L0x2001991a_f * (x**105) + 
            L0x2001991c_f * (x**106) + L0x2001991e_f * (x**107) + 
            L0x20019920_f * (x**108) + L0x20019922_f * (x**109) + 
            L0x20019924_f * (x**110) + L0x20019926_f * (x**111) + 
            L0x20019928_f * (x**112) + L0x2001992a_f * (x**113) + 
            L0x2001992c_f * (x**114) + L0x2001992e_f * (x**115) + 
            L0x20019930_f * (x**116) + L0x20019932_f * (x**117) + 
            L0x20019934_f * (x**118) + L0x20019936_f * (x**119) + 
            L0x20019938_f * (x**120) + L0x2001993a_f * (x**121) + 
            L0x2001993c_f * (x**122) + L0x2001993e_f * (x**123) + 
            L0x20019940_f * (x**124) + L0x20019942_f * (x**125) + 
            L0x20019944_f * (x**126) + L0x20019946_f * (x**127) + 
            L0x20019948_f * (x**128) + L0x2001994a_f * (x**129) + 
            L0x2001994c_f * (x**130) + L0x2001994e_f * (x**131) + 
            L0x20019950_f * (x**132) + L0x20019952_f * (x**133) + 
            L0x20019954_f * (x**134) + L0x20019956_f * (x**135) + 
            L0x20019958_f * (x**136) + L0x2001995a_f * (x**137) + 
            L0x2001995c_f * (x**138) + L0x2001995e_f * (x**139) + 
            L0x20019960_f * (x**140) + L0x20019962_f * (x**141) + 
            L0x20019964_f * (x**142) + L0x20019966_f * (x**143) + 
            L0x20019968_f * (x**144) + L0x2001996a_f * (x**145) + 
            L0x2001996c_f * (x**146) + L0x2001996e_f * (x**147) + 
            L0x20019970_f * (x**148) + L0x20019972_f * (x**149) + 
            L0x20019974_f * (x**150) + L0x20019976_f * (x**151) + 
            L0x20019978_f * (x**152) + L0x2001997a_f * (x**153) + 
            L0x2001997c_f * (x**154) + L0x2001997e_f * (x**155) + 
            L0x20019980_f * (x**156) + L0x20019982_f * (x**157) + 
            L0x20019984_f * (x**158) + L0x20019986_f * (x**159) + 
            L0x20019988_f * (x**160) + L0x2001998a_f * (x**161) + 
            L0x2001998c_f * (x**162) + L0x2001998e_f * (x**163) + 
            L0x20019990_f * (x**164) + L0x20019992_f * (x**165) + 
            L0x20019994_f * (x**166) + L0x20019996_f * (x**167) + 
            L0x20019998_f * (x**168) + L0x2001999a_f * (x**169) + 
            L0x2001999c_f * (x**170) + L0x2001999e_f * (x**171) + 
            L0x200199a0_f * (x**172) + L0x200199a2_f * (x**173) + 
            L0x200199a4_f * (x**174) + L0x200199a6_f * (x**175) + 
            L0x200199a8_f * (x**176) + L0x200199aa_f * (x**177) + 
            L0x200199ac_f * (x**178) + L0x200199ae_f * (x**179) + 
            L0x200199b0_f * (x**180) + L0x200199b2_f * (x**181) + 
            L0x200199b4_f * (x**182) + L0x200199b6_f * (x**183) + 
            L0x200199b8_f * (x**184) + L0x200199ba_f * (x**185) + 
            L0x200199bc_f * (x**186) + L0x200199be_f * (x**187) + 
            L0x200199c0_f * (x**188) + L0x200199c2_f * (x**189) + 
            L0x200199c4_f * (x**190) + L0x200199c6_f * (x**191) + 
            L0x200199c8_f * (x**192) + L0x200199ca_f * (x**193) + 
            L0x200199cc_f * (x**194) + L0x200199ce_f * (x**195) + 
            L0x200199d0_f * (x**196) + L0x200199d2_f * (x**197) + 
            L0x200199d4_f * (x**198) + L0x200199d6_f * (x**199) + 
            L0x200199d8_f * (x**200) + L0x200199da_f * (x**201) + 
            L0x200199dc_f * (x**202) + L0x200199de_f * (x**203) + 
            L0x200199e0_f * (x**204) + L0x200199e2_f * (x**205) + 
            L0x200199e4_f * (x**206) + L0x200199e6_f * (x**207) + 
            L0x200199e8_f * (x**208) + L0x200199ea_f * (x**209) + 
            L0x200199ec_f * (x**210) + L0x200199ee_f * (x**211) + 
            L0x200199f0_f * (x**212) + L0x200199f2_f * (x**213) + 
            L0x200199f4_f * (x**214) + L0x200199f6_f * (x**215) + 
            L0x200199f8_f * (x**216) + L0x200199fa_f * (x**217) + 
            L0x200199fc_f * (x**218) + L0x200199fe_f * (x**219) + 
            L0x20019a00_f * (x**220) + L0x20019a02_f * (x**221) + 
            L0x20019a04_f * (x**222) + L0x20019a06_f * (x**223) + 
            L0x20019a08_f * (x**224) + L0x20019a0a_f * (x**225) + 
            L0x20019a0c_f * (x**226) + L0x20019a0e_f * (x**227) + 
            L0x20019a10_f * (x**228) + L0x20019a12_f * (x**229) + 
            L0x20019a14_f * (x**230) + L0x20019a16_f * (x**231) + 
            L0x20019a18_f * (x**232) + L0x20019a1a_f * (x**233) + 
            L0x20019a1c_f * (x**234) + L0x20019a1e_f * (x**235) + 
            L0x20019a20_f * (x**236) + L0x20019a22_f * (x**237) + 
            L0x20019a24_f * (x**238) + L0x20019a26_f * (x**239) + 
            L0x20019a28_f * (x**240) + L0x20019a2a_f * (x**241) + 
            L0x20019a2c_f * (x**242) + L0x20019a2e_f * (x**243) + 
            L0x20019a30_f * (x**244) + L0x20019a32_f * (x**245) + 
            L0x20019a34_f * (x**246) + L0x20019a36_f * (x**247) + 
            L0x20019a38_f * (x**248) + L0x20019a3a_f * (x**249) + 
            L0x20019a3c_f * (x**250) + L0x20019a3e_f * (x**251) + 
            L0x20019a40_f * (x**252) + L0x20019a42_f * (x**253) + 
            L0x20019a44_f * (x**254) + L0x20019a46_f * (x**255)
          )
          [25570049, x**4 - 5648086],
    (* inp_poly_42 *)
    eqmod (2**32) * (inp_poly_42 * inp_poly_42)
          (
            L0x20019848_f * (x**0) + L0x2001984a_f * (x**1) + 
            L0x2001984c_f * (x**2) + L0x2001984e_f * (x**3) + 
            L0x20019850_f * (x**4) + L0x20019852_f * (x**5) + 
            L0x20019854_f * (x**6) + L0x20019856_f * (x**7) + 
            L0x20019858_f * (x**8) + L0x2001985a_f * (x**9) + 
            L0x2001985c_f * (x**10) + L0x2001985e_f * (x**11) + 
            L0x20019860_f * (x**12) + L0x20019862_f * (x**13) + 
            L0x20019864_f * (x**14) + L0x20019866_f * (x**15) + 
            L0x20019868_f * (x**16) + L0x2001986a_f * (x**17) + 
            L0x2001986c_f * (x**18) + L0x2001986e_f * (x**19) + 
            L0x20019870_f * (x**20) + L0x20019872_f * (x**21) + 
            L0x20019874_f * (x**22) + L0x20019876_f * (x**23) + 
            L0x20019878_f * (x**24) + L0x2001987a_f * (x**25) + 
            L0x2001987c_f * (x**26) + L0x2001987e_f * (x**27) + 
            L0x20019880_f * (x**28) + L0x20019882_f * (x**29) + 
            L0x20019884_f * (x**30) + L0x20019886_f * (x**31) + 
            L0x20019888_f * (x**32) + L0x2001988a_f * (x**33) + 
            L0x2001988c_f * (x**34) + L0x2001988e_f * (x**35) + 
            L0x20019890_f * (x**36) + L0x20019892_f * (x**37) + 
            L0x20019894_f * (x**38) + L0x20019896_f * (x**39) + 
            L0x20019898_f * (x**40) + L0x2001989a_f * (x**41) + 
            L0x2001989c_f * (x**42) + L0x2001989e_f * (x**43) + 
            L0x200198a0_f * (x**44) + L0x200198a2_f * (x**45) + 
            L0x200198a4_f * (x**46) + L0x200198a6_f * (x**47) + 
            L0x200198a8_f * (x**48) + L0x200198aa_f * (x**49) + 
            L0x200198ac_f * (x**50) + L0x200198ae_f * (x**51) + 
            L0x200198b0_f * (x**52) + L0x200198b2_f * (x**53) + 
            L0x200198b4_f * (x**54) + L0x200198b6_f * (x**55) + 
            L0x200198b8_f * (x**56) + L0x200198ba_f * (x**57) + 
            L0x200198bc_f * (x**58) + L0x200198be_f * (x**59) + 
            L0x200198c0_f * (x**60) + L0x200198c2_f * (x**61) + 
            L0x200198c4_f * (x**62) + L0x200198c6_f * (x**63) + 
            L0x200198c8_f * (x**64) + L0x200198ca_f * (x**65) + 
            L0x200198cc_f * (x**66) + L0x200198ce_f * (x**67) + 
            L0x200198d0_f * (x**68) + L0x200198d2_f * (x**69) + 
            L0x200198d4_f * (x**70) + L0x200198d6_f * (x**71) + 
            L0x200198d8_f * (x**72) + L0x200198da_f * (x**73) + 
            L0x200198dc_f * (x**74) + L0x200198de_f * (x**75) + 
            L0x200198e0_f * (x**76) + L0x200198e2_f * (x**77) + 
            L0x200198e4_f * (x**78) + L0x200198e6_f * (x**79) + 
            L0x200198e8_f * (x**80) + L0x200198ea_f * (x**81) + 
            L0x200198ec_f * (x**82) + L0x200198ee_f * (x**83) + 
            L0x200198f0_f * (x**84) + L0x200198f2_f * (x**85) + 
            L0x200198f4_f * (x**86) + L0x200198f6_f * (x**87) + 
            L0x200198f8_f * (x**88) + L0x200198fa_f * (x**89) + 
            L0x200198fc_f * (x**90) + L0x200198fe_f * (x**91) + 
            L0x20019900_f * (x**92) + L0x20019902_f * (x**93) + 
            L0x20019904_f * (x**94) + L0x20019906_f * (x**95) + 
            L0x20019908_f * (x**96) + L0x2001990a_f * (x**97) + 
            L0x2001990c_f * (x**98) + L0x2001990e_f * (x**99) + 
            L0x20019910_f * (x**100) + L0x20019912_f * (x**101) + 
            L0x20019914_f * (x**102) + L0x20019916_f * (x**103) + 
            L0x20019918_f * (x**104) + L0x2001991a_f * (x**105) + 
            L0x2001991c_f * (x**106) + L0x2001991e_f * (x**107) + 
            L0x20019920_f * (x**108) + L0x20019922_f * (x**109) + 
            L0x20019924_f * (x**110) + L0x20019926_f * (x**111) + 
            L0x20019928_f * (x**112) + L0x2001992a_f * (x**113) + 
            L0x2001992c_f * (x**114) + L0x2001992e_f * (x**115) + 
            L0x20019930_f * (x**116) + L0x20019932_f * (x**117) + 
            L0x20019934_f * (x**118) + L0x20019936_f * (x**119) + 
            L0x20019938_f * (x**120) + L0x2001993a_f * (x**121) + 
            L0x2001993c_f * (x**122) + L0x2001993e_f * (x**123) + 
            L0x20019940_f * (x**124) + L0x20019942_f * (x**125) + 
            L0x20019944_f * (x**126) + L0x20019946_f * (x**127) + 
            L0x20019948_f * (x**128) + L0x2001994a_f * (x**129) + 
            L0x2001994c_f * (x**130) + L0x2001994e_f * (x**131) + 
            L0x20019950_f * (x**132) + L0x20019952_f * (x**133) + 
            L0x20019954_f * (x**134) + L0x20019956_f * (x**135) + 
            L0x20019958_f * (x**136) + L0x2001995a_f * (x**137) + 
            L0x2001995c_f * (x**138) + L0x2001995e_f * (x**139) + 
            L0x20019960_f * (x**140) + L0x20019962_f * (x**141) + 
            L0x20019964_f * (x**142) + L0x20019966_f * (x**143) + 
            L0x20019968_f * (x**144) + L0x2001996a_f * (x**145) + 
            L0x2001996c_f * (x**146) + L0x2001996e_f * (x**147) + 
            L0x20019970_f * (x**148) + L0x20019972_f * (x**149) + 
            L0x20019974_f * (x**150) + L0x20019976_f * (x**151) + 
            L0x20019978_f * (x**152) + L0x2001997a_f * (x**153) + 
            L0x2001997c_f * (x**154) + L0x2001997e_f * (x**155) + 
            L0x20019980_f * (x**156) + L0x20019982_f * (x**157) + 
            L0x20019984_f * (x**158) + L0x20019986_f * (x**159) + 
            L0x20019988_f * (x**160) + L0x2001998a_f * (x**161) + 
            L0x2001998c_f * (x**162) + L0x2001998e_f * (x**163) + 
            L0x20019990_f * (x**164) + L0x20019992_f * (x**165) + 
            L0x20019994_f * (x**166) + L0x20019996_f * (x**167) + 
            L0x20019998_f * (x**168) + L0x2001999a_f * (x**169) + 
            L0x2001999c_f * (x**170) + L0x2001999e_f * (x**171) + 
            L0x200199a0_f * (x**172) + L0x200199a2_f * (x**173) + 
            L0x200199a4_f * (x**174) + L0x200199a6_f * (x**175) + 
            L0x200199a8_f * (x**176) + L0x200199aa_f * (x**177) + 
            L0x200199ac_f * (x**178) + L0x200199ae_f * (x**179) + 
            L0x200199b0_f * (x**180) + L0x200199b2_f * (x**181) + 
            L0x200199b4_f * (x**182) + L0x200199b6_f * (x**183) + 
            L0x200199b8_f * (x**184) + L0x200199ba_f * (x**185) + 
            L0x200199bc_f * (x**186) + L0x200199be_f * (x**187) + 
            L0x200199c0_f * (x**188) + L0x200199c2_f * (x**189) + 
            L0x200199c4_f * (x**190) + L0x200199c6_f * (x**191) + 
            L0x200199c8_f * (x**192) + L0x200199ca_f * (x**193) + 
            L0x200199cc_f * (x**194) + L0x200199ce_f * (x**195) + 
            L0x200199d0_f * (x**196) + L0x200199d2_f * (x**197) + 
            L0x200199d4_f * (x**198) + L0x200199d6_f * (x**199) + 
            L0x200199d8_f * (x**200) + L0x200199da_f * (x**201) + 
            L0x200199dc_f * (x**202) + L0x200199de_f * (x**203) + 
            L0x200199e0_f * (x**204) + L0x200199e2_f * (x**205) + 
            L0x200199e4_f * (x**206) + L0x200199e6_f * (x**207) + 
            L0x200199e8_f * (x**208) + L0x200199ea_f * (x**209) + 
            L0x200199ec_f * (x**210) + L0x200199ee_f * (x**211) + 
            L0x200199f0_f * (x**212) + L0x200199f2_f * (x**213) + 
            L0x200199f4_f * (x**214) + L0x200199f6_f * (x**215) + 
            L0x200199f8_f * (x**216) + L0x200199fa_f * (x**217) + 
            L0x200199fc_f * (x**218) + L0x200199fe_f * (x**219) + 
            L0x20019a00_f * (x**220) + L0x20019a02_f * (x**221) + 
            L0x20019a04_f * (x**222) + L0x20019a06_f * (x**223) + 
            L0x20019a08_f * (x**224) + L0x20019a0a_f * (x**225) + 
            L0x20019a0c_f * (x**226) + L0x20019a0e_f * (x**227) + 
            L0x20019a10_f * (x**228) + L0x20019a12_f * (x**229) + 
            L0x20019a14_f * (x**230) + L0x20019a16_f * (x**231) + 
            L0x20019a18_f * (x**232) + L0x20019a1a_f * (x**233) + 
            L0x20019a1c_f * (x**234) + L0x20019a1e_f * (x**235) + 
            L0x20019a20_f * (x**236) + L0x20019a22_f * (x**237) + 
            L0x20019a24_f * (x**238) + L0x20019a26_f * (x**239) + 
            L0x20019a28_f * (x**240) + L0x20019a2a_f * (x**241) + 
            L0x20019a2c_f * (x**242) + L0x20019a2e_f * (x**243) + 
            L0x20019a30_f * (x**244) + L0x20019a32_f * (x**245) + 
            L0x20019a34_f * (x**246) + L0x20019a36_f * (x**247) + 
            L0x20019a38_f * (x**248) + L0x20019a3a_f * (x**249) + 
            L0x20019a3c_f * (x**250) + L0x20019a3e_f * (x**251) + 
            L0x20019a40_f * (x**252) + L0x20019a42_f * (x**253) + 
            L0x20019a44_f * (x**254) + L0x20019a46_f * (x**255)
          )
          [25570049, x**4 - 6202837],
    (* inp_poly_43 *)
    eqmod (2**32) * (inp_poly_43 * inp_poly_43)
          (
            L0x20019848_f * (x**0) + L0x2001984a_f * (x**1) + 
            L0x2001984c_f * (x**2) + L0x2001984e_f * (x**3) + 
            L0x20019850_f * (x**4) + L0x20019852_f * (x**5) + 
            L0x20019854_f * (x**6) + L0x20019856_f * (x**7) + 
            L0x20019858_f * (x**8) + L0x2001985a_f * (x**9) + 
            L0x2001985c_f * (x**10) + L0x2001985e_f * (x**11) + 
            L0x20019860_f * (x**12) + L0x20019862_f * (x**13) + 
            L0x20019864_f * (x**14) + L0x20019866_f * (x**15) + 
            L0x20019868_f * (x**16) + L0x2001986a_f * (x**17) + 
            L0x2001986c_f * (x**18) + L0x2001986e_f * (x**19) + 
            L0x20019870_f * (x**20) + L0x20019872_f * (x**21) + 
            L0x20019874_f * (x**22) + L0x20019876_f * (x**23) + 
            L0x20019878_f * (x**24) + L0x2001987a_f * (x**25) + 
            L0x2001987c_f * (x**26) + L0x2001987e_f * (x**27) + 
            L0x20019880_f * (x**28) + L0x20019882_f * (x**29) + 
            L0x20019884_f * (x**30) + L0x20019886_f * (x**31) + 
            L0x20019888_f * (x**32) + L0x2001988a_f * (x**33) + 
            L0x2001988c_f * (x**34) + L0x2001988e_f * (x**35) + 
            L0x20019890_f * (x**36) + L0x20019892_f * (x**37) + 
            L0x20019894_f * (x**38) + L0x20019896_f * (x**39) + 
            L0x20019898_f * (x**40) + L0x2001989a_f * (x**41) + 
            L0x2001989c_f * (x**42) + L0x2001989e_f * (x**43) + 
            L0x200198a0_f * (x**44) + L0x200198a2_f * (x**45) + 
            L0x200198a4_f * (x**46) + L0x200198a6_f * (x**47) + 
            L0x200198a8_f * (x**48) + L0x200198aa_f * (x**49) + 
            L0x200198ac_f * (x**50) + L0x200198ae_f * (x**51) + 
            L0x200198b0_f * (x**52) + L0x200198b2_f * (x**53) + 
            L0x200198b4_f * (x**54) + L0x200198b6_f * (x**55) + 
            L0x200198b8_f * (x**56) + L0x200198ba_f * (x**57) + 
            L0x200198bc_f * (x**58) + L0x200198be_f * (x**59) + 
            L0x200198c0_f * (x**60) + L0x200198c2_f * (x**61) + 
            L0x200198c4_f * (x**62) + L0x200198c6_f * (x**63) + 
            L0x200198c8_f * (x**64) + L0x200198ca_f * (x**65) + 
            L0x200198cc_f * (x**66) + L0x200198ce_f * (x**67) + 
            L0x200198d0_f * (x**68) + L0x200198d2_f * (x**69) + 
            L0x200198d4_f * (x**70) + L0x200198d6_f * (x**71) + 
            L0x200198d8_f * (x**72) + L0x200198da_f * (x**73) + 
            L0x200198dc_f * (x**74) + L0x200198de_f * (x**75) + 
            L0x200198e0_f * (x**76) + L0x200198e2_f * (x**77) + 
            L0x200198e4_f * (x**78) + L0x200198e6_f * (x**79) + 
            L0x200198e8_f * (x**80) + L0x200198ea_f * (x**81) + 
            L0x200198ec_f * (x**82) + L0x200198ee_f * (x**83) + 
            L0x200198f0_f * (x**84) + L0x200198f2_f * (x**85) + 
            L0x200198f4_f * (x**86) + L0x200198f6_f * (x**87) + 
            L0x200198f8_f * (x**88) + L0x200198fa_f * (x**89) + 
            L0x200198fc_f * (x**90) + L0x200198fe_f * (x**91) + 
            L0x20019900_f * (x**92) + L0x20019902_f * (x**93) + 
            L0x20019904_f * (x**94) + L0x20019906_f * (x**95) + 
            L0x20019908_f * (x**96) + L0x2001990a_f * (x**97) + 
            L0x2001990c_f * (x**98) + L0x2001990e_f * (x**99) + 
            L0x20019910_f * (x**100) + L0x20019912_f * (x**101) + 
            L0x20019914_f * (x**102) + L0x20019916_f * (x**103) + 
            L0x20019918_f * (x**104) + L0x2001991a_f * (x**105) + 
            L0x2001991c_f * (x**106) + L0x2001991e_f * (x**107) + 
            L0x20019920_f * (x**108) + L0x20019922_f * (x**109) + 
            L0x20019924_f * (x**110) + L0x20019926_f * (x**111) + 
            L0x20019928_f * (x**112) + L0x2001992a_f * (x**113) + 
            L0x2001992c_f * (x**114) + L0x2001992e_f * (x**115) + 
            L0x20019930_f * (x**116) + L0x20019932_f * (x**117) + 
            L0x20019934_f * (x**118) + L0x20019936_f * (x**119) + 
            L0x20019938_f * (x**120) + L0x2001993a_f * (x**121) + 
            L0x2001993c_f * (x**122) + L0x2001993e_f * (x**123) + 
            L0x20019940_f * (x**124) + L0x20019942_f * (x**125) + 
            L0x20019944_f * (x**126) + L0x20019946_f * (x**127) + 
            L0x20019948_f * (x**128) + L0x2001994a_f * (x**129) + 
            L0x2001994c_f * (x**130) + L0x2001994e_f * (x**131) + 
            L0x20019950_f * (x**132) + L0x20019952_f * (x**133) + 
            L0x20019954_f * (x**134) + L0x20019956_f * (x**135) + 
            L0x20019958_f * (x**136) + L0x2001995a_f * (x**137) + 
            L0x2001995c_f * (x**138) + L0x2001995e_f * (x**139) + 
            L0x20019960_f * (x**140) + L0x20019962_f * (x**141) + 
            L0x20019964_f * (x**142) + L0x20019966_f * (x**143) + 
            L0x20019968_f * (x**144) + L0x2001996a_f * (x**145) + 
            L0x2001996c_f * (x**146) + L0x2001996e_f * (x**147) + 
            L0x20019970_f * (x**148) + L0x20019972_f * (x**149) + 
            L0x20019974_f * (x**150) + L0x20019976_f * (x**151) + 
            L0x20019978_f * (x**152) + L0x2001997a_f * (x**153) + 
            L0x2001997c_f * (x**154) + L0x2001997e_f * (x**155) + 
            L0x20019980_f * (x**156) + L0x20019982_f * (x**157) + 
            L0x20019984_f * (x**158) + L0x20019986_f * (x**159) + 
            L0x20019988_f * (x**160) + L0x2001998a_f * (x**161) + 
            L0x2001998c_f * (x**162) + L0x2001998e_f * (x**163) + 
            L0x20019990_f * (x**164) + L0x20019992_f * (x**165) + 
            L0x20019994_f * (x**166) + L0x20019996_f * (x**167) + 
            L0x20019998_f * (x**168) + L0x2001999a_f * (x**169) + 
            L0x2001999c_f * (x**170) + L0x2001999e_f * (x**171) + 
            L0x200199a0_f * (x**172) + L0x200199a2_f * (x**173) + 
            L0x200199a4_f * (x**174) + L0x200199a6_f * (x**175) + 
            L0x200199a8_f * (x**176) + L0x200199aa_f * (x**177) + 
            L0x200199ac_f * (x**178) + L0x200199ae_f * (x**179) + 
            L0x200199b0_f * (x**180) + L0x200199b2_f * (x**181) + 
            L0x200199b4_f * (x**182) + L0x200199b6_f * (x**183) + 
            L0x200199b8_f * (x**184) + L0x200199ba_f * (x**185) + 
            L0x200199bc_f * (x**186) + L0x200199be_f * (x**187) + 
            L0x200199c0_f * (x**188) + L0x200199c2_f * (x**189) + 
            L0x200199c4_f * (x**190) + L0x200199c6_f * (x**191) + 
            L0x200199c8_f * (x**192) + L0x200199ca_f * (x**193) + 
            L0x200199cc_f * (x**194) + L0x200199ce_f * (x**195) + 
            L0x200199d0_f * (x**196) + L0x200199d2_f * (x**197) + 
            L0x200199d4_f * (x**198) + L0x200199d6_f * (x**199) + 
            L0x200199d8_f * (x**200) + L0x200199da_f * (x**201) + 
            L0x200199dc_f * (x**202) + L0x200199de_f * (x**203) + 
            L0x200199e0_f * (x**204) + L0x200199e2_f * (x**205) + 
            L0x200199e4_f * (x**206) + L0x200199e6_f * (x**207) + 
            L0x200199e8_f * (x**208) + L0x200199ea_f * (x**209) + 
            L0x200199ec_f * (x**210) + L0x200199ee_f * (x**211) + 
            L0x200199f0_f * (x**212) + L0x200199f2_f * (x**213) + 
            L0x200199f4_f * (x**214) + L0x200199f6_f * (x**215) + 
            L0x200199f8_f * (x**216) + L0x200199fa_f * (x**217) + 
            L0x200199fc_f * (x**218) + L0x200199fe_f * (x**219) + 
            L0x20019a00_f * (x**220) + L0x20019a02_f * (x**221) + 
            L0x20019a04_f * (x**222) + L0x20019a06_f * (x**223) + 
            L0x20019a08_f * (x**224) + L0x20019a0a_f * (x**225) + 
            L0x20019a0c_f * (x**226) + L0x20019a0e_f * (x**227) + 
            L0x20019a10_f * (x**228) + L0x20019a12_f * (x**229) + 
            L0x20019a14_f * (x**230) + L0x20019a16_f * (x**231) + 
            L0x20019a18_f * (x**232) + L0x20019a1a_f * (x**233) + 
            L0x20019a1c_f * (x**234) + L0x20019a1e_f * (x**235) + 
            L0x20019a20_f * (x**236) + L0x20019a22_f * (x**237) + 
            L0x20019a24_f * (x**238) + L0x20019a26_f * (x**239) + 
            L0x20019a28_f * (x**240) + L0x20019a2a_f * (x**241) + 
            L0x20019a2c_f * (x**242) + L0x20019a2e_f * (x**243) + 
            L0x20019a30_f * (x**244) + L0x20019a32_f * (x**245) + 
            L0x20019a34_f * (x**246) + L0x20019a36_f * (x**247) + 
            L0x20019a38_f * (x**248) + L0x20019a3a_f * (x**249) + 
            L0x20019a3c_f * (x**250) + L0x20019a3e_f * (x**251) + 
            L0x20019a40_f * (x**252) + L0x20019a42_f * (x**253) + 
            L0x20019a44_f * (x**254) + L0x20019a46_f * (x**255)
          )
          [25570049, x**4 - 19367212],
    (* inp_poly_44 *)
    eqmod (2**32) * (inp_poly_44 * inp_poly_44)
          (
            L0x20019848_f * (x**0) + L0x2001984a_f * (x**1) + 
            L0x2001984c_f * (x**2) + L0x2001984e_f * (x**3) + 
            L0x20019850_f * (x**4) + L0x20019852_f * (x**5) + 
            L0x20019854_f * (x**6) + L0x20019856_f * (x**7) + 
            L0x20019858_f * (x**8) + L0x2001985a_f * (x**9) + 
            L0x2001985c_f * (x**10) + L0x2001985e_f * (x**11) + 
            L0x20019860_f * (x**12) + L0x20019862_f * (x**13) + 
            L0x20019864_f * (x**14) + L0x20019866_f * (x**15) + 
            L0x20019868_f * (x**16) + L0x2001986a_f * (x**17) + 
            L0x2001986c_f * (x**18) + L0x2001986e_f * (x**19) + 
            L0x20019870_f * (x**20) + L0x20019872_f * (x**21) + 
            L0x20019874_f * (x**22) + L0x20019876_f * (x**23) + 
            L0x20019878_f * (x**24) + L0x2001987a_f * (x**25) + 
            L0x2001987c_f * (x**26) + L0x2001987e_f * (x**27) + 
            L0x20019880_f * (x**28) + L0x20019882_f * (x**29) + 
            L0x20019884_f * (x**30) + L0x20019886_f * (x**31) + 
            L0x20019888_f * (x**32) + L0x2001988a_f * (x**33) + 
            L0x2001988c_f * (x**34) + L0x2001988e_f * (x**35) + 
            L0x20019890_f * (x**36) + L0x20019892_f * (x**37) + 
            L0x20019894_f * (x**38) + L0x20019896_f * (x**39) + 
            L0x20019898_f * (x**40) + L0x2001989a_f * (x**41) + 
            L0x2001989c_f * (x**42) + L0x2001989e_f * (x**43) + 
            L0x200198a0_f * (x**44) + L0x200198a2_f * (x**45) + 
            L0x200198a4_f * (x**46) + L0x200198a6_f * (x**47) + 
            L0x200198a8_f * (x**48) + L0x200198aa_f * (x**49) + 
            L0x200198ac_f * (x**50) + L0x200198ae_f * (x**51) + 
            L0x200198b0_f * (x**52) + L0x200198b2_f * (x**53) + 
            L0x200198b4_f * (x**54) + L0x200198b6_f * (x**55) + 
            L0x200198b8_f * (x**56) + L0x200198ba_f * (x**57) + 
            L0x200198bc_f * (x**58) + L0x200198be_f * (x**59) + 
            L0x200198c0_f * (x**60) + L0x200198c2_f * (x**61) + 
            L0x200198c4_f * (x**62) + L0x200198c6_f * (x**63) + 
            L0x200198c8_f * (x**64) + L0x200198ca_f * (x**65) + 
            L0x200198cc_f * (x**66) + L0x200198ce_f * (x**67) + 
            L0x200198d0_f * (x**68) + L0x200198d2_f * (x**69) + 
            L0x200198d4_f * (x**70) + L0x200198d6_f * (x**71) + 
            L0x200198d8_f * (x**72) + L0x200198da_f * (x**73) + 
            L0x200198dc_f * (x**74) + L0x200198de_f * (x**75) + 
            L0x200198e0_f * (x**76) + L0x200198e2_f * (x**77) + 
            L0x200198e4_f * (x**78) + L0x200198e6_f * (x**79) + 
            L0x200198e8_f * (x**80) + L0x200198ea_f * (x**81) + 
            L0x200198ec_f * (x**82) + L0x200198ee_f * (x**83) + 
            L0x200198f0_f * (x**84) + L0x200198f2_f * (x**85) + 
            L0x200198f4_f * (x**86) + L0x200198f6_f * (x**87) + 
            L0x200198f8_f * (x**88) + L0x200198fa_f * (x**89) + 
            L0x200198fc_f * (x**90) + L0x200198fe_f * (x**91) + 
            L0x20019900_f * (x**92) + L0x20019902_f * (x**93) + 
            L0x20019904_f * (x**94) + L0x20019906_f * (x**95) + 
            L0x20019908_f * (x**96) + L0x2001990a_f * (x**97) + 
            L0x2001990c_f * (x**98) + L0x2001990e_f * (x**99) + 
            L0x20019910_f * (x**100) + L0x20019912_f * (x**101) + 
            L0x20019914_f * (x**102) + L0x20019916_f * (x**103) + 
            L0x20019918_f * (x**104) + L0x2001991a_f * (x**105) + 
            L0x2001991c_f * (x**106) + L0x2001991e_f * (x**107) + 
            L0x20019920_f * (x**108) + L0x20019922_f * (x**109) + 
            L0x20019924_f * (x**110) + L0x20019926_f * (x**111) + 
            L0x20019928_f * (x**112) + L0x2001992a_f * (x**113) + 
            L0x2001992c_f * (x**114) + L0x2001992e_f * (x**115) + 
            L0x20019930_f * (x**116) + L0x20019932_f * (x**117) + 
            L0x20019934_f * (x**118) + L0x20019936_f * (x**119) + 
            L0x20019938_f * (x**120) + L0x2001993a_f * (x**121) + 
            L0x2001993c_f * (x**122) + L0x2001993e_f * (x**123) + 
            L0x20019940_f * (x**124) + L0x20019942_f * (x**125) + 
            L0x20019944_f * (x**126) + L0x20019946_f * (x**127) + 
            L0x20019948_f * (x**128) + L0x2001994a_f * (x**129) + 
            L0x2001994c_f * (x**130) + L0x2001994e_f * (x**131) + 
            L0x20019950_f * (x**132) + L0x20019952_f * (x**133) + 
            L0x20019954_f * (x**134) + L0x20019956_f * (x**135) + 
            L0x20019958_f * (x**136) + L0x2001995a_f * (x**137) + 
            L0x2001995c_f * (x**138) + L0x2001995e_f * (x**139) + 
            L0x20019960_f * (x**140) + L0x20019962_f * (x**141) + 
            L0x20019964_f * (x**142) + L0x20019966_f * (x**143) + 
            L0x20019968_f * (x**144) + L0x2001996a_f * (x**145) + 
            L0x2001996c_f * (x**146) + L0x2001996e_f * (x**147) + 
            L0x20019970_f * (x**148) + L0x20019972_f * (x**149) + 
            L0x20019974_f * (x**150) + L0x20019976_f * (x**151) + 
            L0x20019978_f * (x**152) + L0x2001997a_f * (x**153) + 
            L0x2001997c_f * (x**154) + L0x2001997e_f * (x**155) + 
            L0x20019980_f * (x**156) + L0x20019982_f * (x**157) + 
            L0x20019984_f * (x**158) + L0x20019986_f * (x**159) + 
            L0x20019988_f * (x**160) + L0x2001998a_f * (x**161) + 
            L0x2001998c_f * (x**162) + L0x2001998e_f * (x**163) + 
            L0x20019990_f * (x**164) + L0x20019992_f * (x**165) + 
            L0x20019994_f * (x**166) + L0x20019996_f * (x**167) + 
            L0x20019998_f * (x**168) + L0x2001999a_f * (x**169) + 
            L0x2001999c_f * (x**170) + L0x2001999e_f * (x**171) + 
            L0x200199a0_f * (x**172) + L0x200199a2_f * (x**173) + 
            L0x200199a4_f * (x**174) + L0x200199a6_f * (x**175) + 
            L0x200199a8_f * (x**176) + L0x200199aa_f * (x**177) + 
            L0x200199ac_f * (x**178) + L0x200199ae_f * (x**179) + 
            L0x200199b0_f * (x**180) + L0x200199b2_f * (x**181) + 
            L0x200199b4_f * (x**182) + L0x200199b6_f * (x**183) + 
            L0x200199b8_f * (x**184) + L0x200199ba_f * (x**185) + 
            L0x200199bc_f * (x**186) + L0x200199be_f * (x**187) + 
            L0x200199c0_f * (x**188) + L0x200199c2_f * (x**189) + 
            L0x200199c4_f * (x**190) + L0x200199c6_f * (x**191) + 
            L0x200199c8_f * (x**192) + L0x200199ca_f * (x**193) + 
            L0x200199cc_f * (x**194) + L0x200199ce_f * (x**195) + 
            L0x200199d0_f * (x**196) + L0x200199d2_f * (x**197) + 
            L0x200199d4_f * (x**198) + L0x200199d6_f * (x**199) + 
            L0x200199d8_f * (x**200) + L0x200199da_f * (x**201) + 
            L0x200199dc_f * (x**202) + L0x200199de_f * (x**203) + 
            L0x200199e0_f * (x**204) + L0x200199e2_f * (x**205) + 
            L0x200199e4_f * (x**206) + L0x200199e6_f * (x**207) + 
            L0x200199e8_f * (x**208) + L0x200199ea_f * (x**209) + 
            L0x200199ec_f * (x**210) + L0x200199ee_f * (x**211) + 
            L0x200199f0_f * (x**212) + L0x200199f2_f * (x**213) + 
            L0x200199f4_f * (x**214) + L0x200199f6_f * (x**215) + 
            L0x200199f8_f * (x**216) + L0x200199fa_f * (x**217) + 
            L0x200199fc_f * (x**218) + L0x200199fe_f * (x**219) + 
            L0x20019a00_f * (x**220) + L0x20019a02_f * (x**221) + 
            L0x20019a04_f * (x**222) + L0x20019a06_f * (x**223) + 
            L0x20019a08_f * (x**224) + L0x20019a0a_f * (x**225) + 
            L0x20019a0c_f * (x**226) + L0x20019a0e_f * (x**227) + 
            L0x20019a10_f * (x**228) + L0x20019a12_f * (x**229) + 
            L0x20019a14_f * (x**230) + L0x20019a16_f * (x**231) + 
            L0x20019a18_f * (x**232) + L0x20019a1a_f * (x**233) + 
            L0x20019a1c_f * (x**234) + L0x20019a1e_f * (x**235) + 
            L0x20019a20_f * (x**236) + L0x20019a22_f * (x**237) + 
            L0x20019a24_f * (x**238) + L0x20019a26_f * (x**239) + 
            L0x20019a28_f * (x**240) + L0x20019a2a_f * (x**241) + 
            L0x20019a2c_f * (x**242) + L0x20019a2e_f * (x**243) + 
            L0x20019a30_f * (x**244) + L0x20019a32_f * (x**245) + 
            L0x20019a34_f * (x**246) + L0x20019a36_f * (x**247) + 
            L0x20019a38_f * (x**248) + L0x20019a3a_f * (x**249) + 
            L0x20019a3c_f * (x**250) + L0x20019a3e_f * (x**251) + 
            L0x20019a40_f * (x**252) + L0x20019a42_f * (x**253) + 
            L0x20019a44_f * (x**254) + L0x20019a46_f * (x**255)
          )
          [25570049, x**4 - 17091305],
    (* inp_poly_45 *)
    eqmod (2**32) * (inp_poly_45 * inp_poly_45)
          (
            L0x20019848_f * (x**0) + L0x2001984a_f * (x**1) + 
            L0x2001984c_f * (x**2) + L0x2001984e_f * (x**3) + 
            L0x20019850_f * (x**4) + L0x20019852_f * (x**5) + 
            L0x20019854_f * (x**6) + L0x20019856_f * (x**7) + 
            L0x20019858_f * (x**8) + L0x2001985a_f * (x**9) + 
            L0x2001985c_f * (x**10) + L0x2001985e_f * (x**11) + 
            L0x20019860_f * (x**12) + L0x20019862_f * (x**13) + 
            L0x20019864_f * (x**14) + L0x20019866_f * (x**15) + 
            L0x20019868_f * (x**16) + L0x2001986a_f * (x**17) + 
            L0x2001986c_f * (x**18) + L0x2001986e_f * (x**19) + 
            L0x20019870_f * (x**20) + L0x20019872_f * (x**21) + 
            L0x20019874_f * (x**22) + L0x20019876_f * (x**23) + 
            L0x20019878_f * (x**24) + L0x2001987a_f * (x**25) + 
            L0x2001987c_f * (x**26) + L0x2001987e_f * (x**27) + 
            L0x20019880_f * (x**28) + L0x20019882_f * (x**29) + 
            L0x20019884_f * (x**30) + L0x20019886_f * (x**31) + 
            L0x20019888_f * (x**32) + L0x2001988a_f * (x**33) + 
            L0x2001988c_f * (x**34) + L0x2001988e_f * (x**35) + 
            L0x20019890_f * (x**36) + L0x20019892_f * (x**37) + 
            L0x20019894_f * (x**38) + L0x20019896_f * (x**39) + 
            L0x20019898_f * (x**40) + L0x2001989a_f * (x**41) + 
            L0x2001989c_f * (x**42) + L0x2001989e_f * (x**43) + 
            L0x200198a0_f * (x**44) + L0x200198a2_f * (x**45) + 
            L0x200198a4_f * (x**46) + L0x200198a6_f * (x**47) + 
            L0x200198a8_f * (x**48) + L0x200198aa_f * (x**49) + 
            L0x200198ac_f * (x**50) + L0x200198ae_f * (x**51) + 
            L0x200198b0_f * (x**52) + L0x200198b2_f * (x**53) + 
            L0x200198b4_f * (x**54) + L0x200198b6_f * (x**55) + 
            L0x200198b8_f * (x**56) + L0x200198ba_f * (x**57) + 
            L0x200198bc_f * (x**58) + L0x200198be_f * (x**59) + 
            L0x200198c0_f * (x**60) + L0x200198c2_f * (x**61) + 
            L0x200198c4_f * (x**62) + L0x200198c6_f * (x**63) + 
            L0x200198c8_f * (x**64) + L0x200198ca_f * (x**65) + 
            L0x200198cc_f * (x**66) + L0x200198ce_f * (x**67) + 
            L0x200198d0_f * (x**68) + L0x200198d2_f * (x**69) + 
            L0x200198d4_f * (x**70) + L0x200198d6_f * (x**71) + 
            L0x200198d8_f * (x**72) + L0x200198da_f * (x**73) + 
            L0x200198dc_f * (x**74) + L0x200198de_f * (x**75) + 
            L0x200198e0_f * (x**76) + L0x200198e2_f * (x**77) + 
            L0x200198e4_f * (x**78) + L0x200198e6_f * (x**79) + 
            L0x200198e8_f * (x**80) + L0x200198ea_f * (x**81) + 
            L0x200198ec_f * (x**82) + L0x200198ee_f * (x**83) + 
            L0x200198f0_f * (x**84) + L0x200198f2_f * (x**85) + 
            L0x200198f4_f * (x**86) + L0x200198f6_f * (x**87) + 
            L0x200198f8_f * (x**88) + L0x200198fa_f * (x**89) + 
            L0x200198fc_f * (x**90) + L0x200198fe_f * (x**91) + 
            L0x20019900_f * (x**92) + L0x20019902_f * (x**93) + 
            L0x20019904_f * (x**94) + L0x20019906_f * (x**95) + 
            L0x20019908_f * (x**96) + L0x2001990a_f * (x**97) + 
            L0x2001990c_f * (x**98) + L0x2001990e_f * (x**99) + 
            L0x20019910_f * (x**100) + L0x20019912_f * (x**101) + 
            L0x20019914_f * (x**102) + L0x20019916_f * (x**103) + 
            L0x20019918_f * (x**104) + L0x2001991a_f * (x**105) + 
            L0x2001991c_f * (x**106) + L0x2001991e_f * (x**107) + 
            L0x20019920_f * (x**108) + L0x20019922_f * (x**109) + 
            L0x20019924_f * (x**110) + L0x20019926_f * (x**111) + 
            L0x20019928_f * (x**112) + L0x2001992a_f * (x**113) + 
            L0x2001992c_f * (x**114) + L0x2001992e_f * (x**115) + 
            L0x20019930_f * (x**116) + L0x20019932_f * (x**117) + 
            L0x20019934_f * (x**118) + L0x20019936_f * (x**119) + 
            L0x20019938_f * (x**120) + L0x2001993a_f * (x**121) + 
            L0x2001993c_f * (x**122) + L0x2001993e_f * (x**123) + 
            L0x20019940_f * (x**124) + L0x20019942_f * (x**125) + 
            L0x20019944_f * (x**126) + L0x20019946_f * (x**127) + 
            L0x20019948_f * (x**128) + L0x2001994a_f * (x**129) + 
            L0x2001994c_f * (x**130) + L0x2001994e_f * (x**131) + 
            L0x20019950_f * (x**132) + L0x20019952_f * (x**133) + 
            L0x20019954_f * (x**134) + L0x20019956_f * (x**135) + 
            L0x20019958_f * (x**136) + L0x2001995a_f * (x**137) + 
            L0x2001995c_f * (x**138) + L0x2001995e_f * (x**139) + 
            L0x20019960_f * (x**140) + L0x20019962_f * (x**141) + 
            L0x20019964_f * (x**142) + L0x20019966_f * (x**143) + 
            L0x20019968_f * (x**144) + L0x2001996a_f * (x**145) + 
            L0x2001996c_f * (x**146) + L0x2001996e_f * (x**147) + 
            L0x20019970_f * (x**148) + L0x20019972_f * (x**149) + 
            L0x20019974_f * (x**150) + L0x20019976_f * (x**151) + 
            L0x20019978_f * (x**152) + L0x2001997a_f * (x**153) + 
            L0x2001997c_f * (x**154) + L0x2001997e_f * (x**155) + 
            L0x20019980_f * (x**156) + L0x20019982_f * (x**157) + 
            L0x20019984_f * (x**158) + L0x20019986_f * (x**159) + 
            L0x20019988_f * (x**160) + L0x2001998a_f * (x**161) + 
            L0x2001998c_f * (x**162) + L0x2001998e_f * (x**163) + 
            L0x20019990_f * (x**164) + L0x20019992_f * (x**165) + 
            L0x20019994_f * (x**166) + L0x20019996_f * (x**167) + 
            L0x20019998_f * (x**168) + L0x2001999a_f * (x**169) + 
            L0x2001999c_f * (x**170) + L0x2001999e_f * (x**171) + 
            L0x200199a0_f * (x**172) + L0x200199a2_f * (x**173) + 
            L0x200199a4_f * (x**174) + L0x200199a6_f * (x**175) + 
            L0x200199a8_f * (x**176) + L0x200199aa_f * (x**177) + 
            L0x200199ac_f * (x**178) + L0x200199ae_f * (x**179) + 
            L0x200199b0_f * (x**180) + L0x200199b2_f * (x**181) + 
            L0x200199b4_f * (x**182) + L0x200199b6_f * (x**183) + 
            L0x200199b8_f * (x**184) + L0x200199ba_f * (x**185) + 
            L0x200199bc_f * (x**186) + L0x200199be_f * (x**187) + 
            L0x200199c0_f * (x**188) + L0x200199c2_f * (x**189) + 
            L0x200199c4_f * (x**190) + L0x200199c6_f * (x**191) + 
            L0x200199c8_f * (x**192) + L0x200199ca_f * (x**193) + 
            L0x200199cc_f * (x**194) + L0x200199ce_f * (x**195) + 
            L0x200199d0_f * (x**196) + L0x200199d2_f * (x**197) + 
            L0x200199d4_f * (x**198) + L0x200199d6_f * (x**199) + 
            L0x200199d8_f * (x**200) + L0x200199da_f * (x**201) + 
            L0x200199dc_f * (x**202) + L0x200199de_f * (x**203) + 
            L0x200199e0_f * (x**204) + L0x200199e2_f * (x**205) + 
            L0x200199e4_f * (x**206) + L0x200199e6_f * (x**207) + 
            L0x200199e8_f * (x**208) + L0x200199ea_f * (x**209) + 
            L0x200199ec_f * (x**210) + L0x200199ee_f * (x**211) + 
            L0x200199f0_f * (x**212) + L0x200199f2_f * (x**213) + 
            L0x200199f4_f * (x**214) + L0x200199f6_f * (x**215) + 
            L0x200199f8_f * (x**216) + L0x200199fa_f * (x**217) + 
            L0x200199fc_f * (x**218) + L0x200199fe_f * (x**219) + 
            L0x20019a00_f * (x**220) + L0x20019a02_f * (x**221) + 
            L0x20019a04_f * (x**222) + L0x20019a06_f * (x**223) + 
            L0x20019a08_f * (x**224) + L0x20019a0a_f * (x**225) + 
            L0x20019a0c_f * (x**226) + L0x20019a0e_f * (x**227) + 
            L0x20019a10_f * (x**228) + L0x20019a12_f * (x**229) + 
            L0x20019a14_f * (x**230) + L0x20019a16_f * (x**231) + 
            L0x20019a18_f * (x**232) + L0x20019a1a_f * (x**233) + 
            L0x20019a1c_f * (x**234) + L0x20019a1e_f * (x**235) + 
            L0x20019a20_f * (x**236) + L0x20019a22_f * (x**237) + 
            L0x20019a24_f * (x**238) + L0x20019a26_f * (x**239) + 
            L0x20019a28_f * (x**240) + L0x20019a2a_f * (x**241) + 
            L0x20019a2c_f * (x**242) + L0x20019a2e_f * (x**243) + 
            L0x20019a30_f * (x**244) + L0x20019a32_f * (x**245) + 
            L0x20019a34_f * (x**246) + L0x20019a36_f * (x**247) + 
            L0x20019a38_f * (x**248) + L0x20019a3a_f * (x**249) + 
            L0x20019a3c_f * (x**250) + L0x20019a3e_f * (x**251) + 
            L0x20019a40_f * (x**252) + L0x20019a42_f * (x**253) + 
            L0x20019a44_f * (x**254) + L0x20019a46_f * (x**255)
          )
          [25570049, x**4 - 8478744],
    (* inp_poly_46 *)
    eqmod (2**32) * (inp_poly_46 * inp_poly_46)
          (
            L0x20019848_f * (x**0) + L0x2001984a_f * (x**1) + 
            L0x2001984c_f * (x**2) + L0x2001984e_f * (x**3) + 
            L0x20019850_f * (x**4) + L0x20019852_f * (x**5) + 
            L0x20019854_f * (x**6) + L0x20019856_f * (x**7) + 
            L0x20019858_f * (x**8) + L0x2001985a_f * (x**9) + 
            L0x2001985c_f * (x**10) + L0x2001985e_f * (x**11) + 
            L0x20019860_f * (x**12) + L0x20019862_f * (x**13) + 
            L0x20019864_f * (x**14) + L0x20019866_f * (x**15) + 
            L0x20019868_f * (x**16) + L0x2001986a_f * (x**17) + 
            L0x2001986c_f * (x**18) + L0x2001986e_f * (x**19) + 
            L0x20019870_f * (x**20) + L0x20019872_f * (x**21) + 
            L0x20019874_f * (x**22) + L0x20019876_f * (x**23) + 
            L0x20019878_f * (x**24) + L0x2001987a_f * (x**25) + 
            L0x2001987c_f * (x**26) + L0x2001987e_f * (x**27) + 
            L0x20019880_f * (x**28) + L0x20019882_f * (x**29) + 
            L0x20019884_f * (x**30) + L0x20019886_f * (x**31) + 
            L0x20019888_f * (x**32) + L0x2001988a_f * (x**33) + 
            L0x2001988c_f * (x**34) + L0x2001988e_f * (x**35) + 
            L0x20019890_f * (x**36) + L0x20019892_f * (x**37) + 
            L0x20019894_f * (x**38) + L0x20019896_f * (x**39) + 
            L0x20019898_f * (x**40) + L0x2001989a_f * (x**41) + 
            L0x2001989c_f * (x**42) + L0x2001989e_f * (x**43) + 
            L0x200198a0_f * (x**44) + L0x200198a2_f * (x**45) + 
            L0x200198a4_f * (x**46) + L0x200198a6_f * (x**47) + 
            L0x200198a8_f * (x**48) + L0x200198aa_f * (x**49) + 
            L0x200198ac_f * (x**50) + L0x200198ae_f * (x**51) + 
            L0x200198b0_f * (x**52) + L0x200198b2_f * (x**53) + 
            L0x200198b4_f * (x**54) + L0x200198b6_f * (x**55) + 
            L0x200198b8_f * (x**56) + L0x200198ba_f * (x**57) + 
            L0x200198bc_f * (x**58) + L0x200198be_f * (x**59) + 
            L0x200198c0_f * (x**60) + L0x200198c2_f * (x**61) + 
            L0x200198c4_f * (x**62) + L0x200198c6_f * (x**63) + 
            L0x200198c8_f * (x**64) + L0x200198ca_f * (x**65) + 
            L0x200198cc_f * (x**66) + L0x200198ce_f * (x**67) + 
            L0x200198d0_f * (x**68) + L0x200198d2_f * (x**69) + 
            L0x200198d4_f * (x**70) + L0x200198d6_f * (x**71) + 
            L0x200198d8_f * (x**72) + L0x200198da_f * (x**73) + 
            L0x200198dc_f * (x**74) + L0x200198de_f * (x**75) + 
            L0x200198e0_f * (x**76) + L0x200198e2_f * (x**77) + 
            L0x200198e4_f * (x**78) + L0x200198e6_f * (x**79) + 
            L0x200198e8_f * (x**80) + L0x200198ea_f * (x**81) + 
            L0x200198ec_f * (x**82) + L0x200198ee_f * (x**83) + 
            L0x200198f0_f * (x**84) + L0x200198f2_f * (x**85) + 
            L0x200198f4_f * (x**86) + L0x200198f6_f * (x**87) + 
            L0x200198f8_f * (x**88) + L0x200198fa_f * (x**89) + 
            L0x200198fc_f * (x**90) + L0x200198fe_f * (x**91) + 
            L0x20019900_f * (x**92) + L0x20019902_f * (x**93) + 
            L0x20019904_f * (x**94) + L0x20019906_f * (x**95) + 
            L0x20019908_f * (x**96) + L0x2001990a_f * (x**97) + 
            L0x2001990c_f * (x**98) + L0x2001990e_f * (x**99) + 
            L0x20019910_f * (x**100) + L0x20019912_f * (x**101) + 
            L0x20019914_f * (x**102) + L0x20019916_f * (x**103) + 
            L0x20019918_f * (x**104) + L0x2001991a_f * (x**105) + 
            L0x2001991c_f * (x**106) + L0x2001991e_f * (x**107) + 
            L0x20019920_f * (x**108) + L0x20019922_f * (x**109) + 
            L0x20019924_f * (x**110) + L0x20019926_f * (x**111) + 
            L0x20019928_f * (x**112) + L0x2001992a_f * (x**113) + 
            L0x2001992c_f * (x**114) + L0x2001992e_f * (x**115) + 
            L0x20019930_f * (x**116) + L0x20019932_f * (x**117) + 
            L0x20019934_f * (x**118) + L0x20019936_f * (x**119) + 
            L0x20019938_f * (x**120) + L0x2001993a_f * (x**121) + 
            L0x2001993c_f * (x**122) + L0x2001993e_f * (x**123) + 
            L0x20019940_f * (x**124) + L0x20019942_f * (x**125) + 
            L0x20019944_f * (x**126) + L0x20019946_f * (x**127) + 
            L0x20019948_f * (x**128) + L0x2001994a_f * (x**129) + 
            L0x2001994c_f * (x**130) + L0x2001994e_f * (x**131) + 
            L0x20019950_f * (x**132) + L0x20019952_f * (x**133) + 
            L0x20019954_f * (x**134) + L0x20019956_f * (x**135) + 
            L0x20019958_f * (x**136) + L0x2001995a_f * (x**137) + 
            L0x2001995c_f * (x**138) + L0x2001995e_f * (x**139) + 
            L0x20019960_f * (x**140) + L0x20019962_f * (x**141) + 
            L0x20019964_f * (x**142) + L0x20019966_f * (x**143) + 
            L0x20019968_f * (x**144) + L0x2001996a_f * (x**145) + 
            L0x2001996c_f * (x**146) + L0x2001996e_f * (x**147) + 
            L0x20019970_f * (x**148) + L0x20019972_f * (x**149) + 
            L0x20019974_f * (x**150) + L0x20019976_f * (x**151) + 
            L0x20019978_f * (x**152) + L0x2001997a_f * (x**153) + 
            L0x2001997c_f * (x**154) + L0x2001997e_f * (x**155) + 
            L0x20019980_f * (x**156) + L0x20019982_f * (x**157) + 
            L0x20019984_f * (x**158) + L0x20019986_f * (x**159) + 
            L0x20019988_f * (x**160) + L0x2001998a_f * (x**161) + 
            L0x2001998c_f * (x**162) + L0x2001998e_f * (x**163) + 
            L0x20019990_f * (x**164) + L0x20019992_f * (x**165) + 
            L0x20019994_f * (x**166) + L0x20019996_f * (x**167) + 
            L0x20019998_f * (x**168) + L0x2001999a_f * (x**169) + 
            L0x2001999c_f * (x**170) + L0x2001999e_f * (x**171) + 
            L0x200199a0_f * (x**172) + L0x200199a2_f * (x**173) + 
            L0x200199a4_f * (x**174) + L0x200199a6_f * (x**175) + 
            L0x200199a8_f * (x**176) + L0x200199aa_f * (x**177) + 
            L0x200199ac_f * (x**178) + L0x200199ae_f * (x**179) + 
            L0x200199b0_f * (x**180) + L0x200199b2_f * (x**181) + 
            L0x200199b4_f * (x**182) + L0x200199b6_f * (x**183) + 
            L0x200199b8_f * (x**184) + L0x200199ba_f * (x**185) + 
            L0x200199bc_f * (x**186) + L0x200199be_f * (x**187) + 
            L0x200199c0_f * (x**188) + L0x200199c2_f * (x**189) + 
            L0x200199c4_f * (x**190) + L0x200199c6_f * (x**191) + 
            L0x200199c8_f * (x**192) + L0x200199ca_f * (x**193) + 
            L0x200199cc_f * (x**194) + L0x200199ce_f * (x**195) + 
            L0x200199d0_f * (x**196) + L0x200199d2_f * (x**197) + 
            L0x200199d4_f * (x**198) + L0x200199d6_f * (x**199) + 
            L0x200199d8_f * (x**200) + L0x200199da_f * (x**201) + 
            L0x200199dc_f * (x**202) + L0x200199de_f * (x**203) + 
            L0x200199e0_f * (x**204) + L0x200199e2_f * (x**205) + 
            L0x200199e4_f * (x**206) + L0x200199e6_f * (x**207) + 
            L0x200199e8_f * (x**208) + L0x200199ea_f * (x**209) + 
            L0x200199ec_f * (x**210) + L0x200199ee_f * (x**211) + 
            L0x200199f0_f * (x**212) + L0x200199f2_f * (x**213) + 
            L0x200199f4_f * (x**214) + L0x200199f6_f * (x**215) + 
            L0x200199f8_f * (x**216) + L0x200199fa_f * (x**217) + 
            L0x200199fc_f * (x**218) + L0x200199fe_f * (x**219) + 
            L0x20019a00_f * (x**220) + L0x20019a02_f * (x**221) + 
            L0x20019a04_f * (x**222) + L0x20019a06_f * (x**223) + 
            L0x20019a08_f * (x**224) + L0x20019a0a_f * (x**225) + 
            L0x20019a0c_f * (x**226) + L0x20019a0e_f * (x**227) + 
            L0x20019a10_f * (x**228) + L0x20019a12_f * (x**229) + 
            L0x20019a14_f * (x**230) + L0x20019a16_f * (x**231) + 
            L0x20019a18_f * (x**232) + L0x20019a1a_f * (x**233) + 
            L0x20019a1c_f * (x**234) + L0x20019a1e_f * (x**235) + 
            L0x20019a20_f * (x**236) + L0x20019a22_f * (x**237) + 
            L0x20019a24_f * (x**238) + L0x20019a26_f * (x**239) + 
            L0x20019a28_f * (x**240) + L0x20019a2a_f * (x**241) + 
            L0x20019a2c_f * (x**242) + L0x20019a2e_f * (x**243) + 
            L0x20019a30_f * (x**244) + L0x20019a32_f * (x**245) + 
            L0x20019a34_f * (x**246) + L0x20019a36_f * (x**247) + 
            L0x20019a38_f * (x**248) + L0x20019a3a_f * (x**249) + 
            L0x20019a3c_f * (x**250) + L0x20019a3e_f * (x**251) + 
            L0x20019a40_f * (x**252) + L0x20019a42_f * (x**253) + 
            L0x20019a44_f * (x**254) + L0x20019a46_f * (x**255)
          )
          [25570049, x**4 - 18298658],
    (* inp_poly_47 *)
    eqmod (2**32) * (inp_poly_47 * inp_poly_47)
          (
            L0x20019848_f * (x**0) + L0x2001984a_f * (x**1) + 
            L0x2001984c_f * (x**2) + L0x2001984e_f * (x**3) + 
            L0x20019850_f * (x**4) + L0x20019852_f * (x**5) + 
            L0x20019854_f * (x**6) + L0x20019856_f * (x**7) + 
            L0x20019858_f * (x**8) + L0x2001985a_f * (x**9) + 
            L0x2001985c_f * (x**10) + L0x2001985e_f * (x**11) + 
            L0x20019860_f * (x**12) + L0x20019862_f * (x**13) + 
            L0x20019864_f * (x**14) + L0x20019866_f * (x**15) + 
            L0x20019868_f * (x**16) + L0x2001986a_f * (x**17) + 
            L0x2001986c_f * (x**18) + L0x2001986e_f * (x**19) + 
            L0x20019870_f * (x**20) + L0x20019872_f * (x**21) + 
            L0x20019874_f * (x**22) + L0x20019876_f * (x**23) + 
            L0x20019878_f * (x**24) + L0x2001987a_f * (x**25) + 
            L0x2001987c_f * (x**26) + L0x2001987e_f * (x**27) + 
            L0x20019880_f * (x**28) + L0x20019882_f * (x**29) + 
            L0x20019884_f * (x**30) + L0x20019886_f * (x**31) + 
            L0x20019888_f * (x**32) + L0x2001988a_f * (x**33) + 
            L0x2001988c_f * (x**34) + L0x2001988e_f * (x**35) + 
            L0x20019890_f * (x**36) + L0x20019892_f * (x**37) + 
            L0x20019894_f * (x**38) + L0x20019896_f * (x**39) + 
            L0x20019898_f * (x**40) + L0x2001989a_f * (x**41) + 
            L0x2001989c_f * (x**42) + L0x2001989e_f * (x**43) + 
            L0x200198a0_f * (x**44) + L0x200198a2_f * (x**45) + 
            L0x200198a4_f * (x**46) + L0x200198a6_f * (x**47) + 
            L0x200198a8_f * (x**48) + L0x200198aa_f * (x**49) + 
            L0x200198ac_f * (x**50) + L0x200198ae_f * (x**51) + 
            L0x200198b0_f * (x**52) + L0x200198b2_f * (x**53) + 
            L0x200198b4_f * (x**54) + L0x200198b6_f * (x**55) + 
            L0x200198b8_f * (x**56) + L0x200198ba_f * (x**57) + 
            L0x200198bc_f * (x**58) + L0x200198be_f * (x**59) + 
            L0x200198c0_f * (x**60) + L0x200198c2_f * (x**61) + 
            L0x200198c4_f * (x**62) + L0x200198c6_f * (x**63) + 
            L0x200198c8_f * (x**64) + L0x200198ca_f * (x**65) + 
            L0x200198cc_f * (x**66) + L0x200198ce_f * (x**67) + 
            L0x200198d0_f * (x**68) + L0x200198d2_f * (x**69) + 
            L0x200198d4_f * (x**70) + L0x200198d6_f * (x**71) + 
            L0x200198d8_f * (x**72) + L0x200198da_f * (x**73) + 
            L0x200198dc_f * (x**74) + L0x200198de_f * (x**75) + 
            L0x200198e0_f * (x**76) + L0x200198e2_f * (x**77) + 
            L0x200198e4_f * (x**78) + L0x200198e6_f * (x**79) + 
            L0x200198e8_f * (x**80) + L0x200198ea_f * (x**81) + 
            L0x200198ec_f * (x**82) + L0x200198ee_f * (x**83) + 
            L0x200198f0_f * (x**84) + L0x200198f2_f * (x**85) + 
            L0x200198f4_f * (x**86) + L0x200198f6_f * (x**87) + 
            L0x200198f8_f * (x**88) + L0x200198fa_f * (x**89) + 
            L0x200198fc_f * (x**90) + L0x200198fe_f * (x**91) + 
            L0x20019900_f * (x**92) + L0x20019902_f * (x**93) + 
            L0x20019904_f * (x**94) + L0x20019906_f * (x**95) + 
            L0x20019908_f * (x**96) + L0x2001990a_f * (x**97) + 
            L0x2001990c_f * (x**98) + L0x2001990e_f * (x**99) + 
            L0x20019910_f * (x**100) + L0x20019912_f * (x**101) + 
            L0x20019914_f * (x**102) + L0x20019916_f * (x**103) + 
            L0x20019918_f * (x**104) + L0x2001991a_f * (x**105) + 
            L0x2001991c_f * (x**106) + L0x2001991e_f * (x**107) + 
            L0x20019920_f * (x**108) + L0x20019922_f * (x**109) + 
            L0x20019924_f * (x**110) + L0x20019926_f * (x**111) + 
            L0x20019928_f * (x**112) + L0x2001992a_f * (x**113) + 
            L0x2001992c_f * (x**114) + L0x2001992e_f * (x**115) + 
            L0x20019930_f * (x**116) + L0x20019932_f * (x**117) + 
            L0x20019934_f * (x**118) + L0x20019936_f * (x**119) + 
            L0x20019938_f * (x**120) + L0x2001993a_f * (x**121) + 
            L0x2001993c_f * (x**122) + L0x2001993e_f * (x**123) + 
            L0x20019940_f * (x**124) + L0x20019942_f * (x**125) + 
            L0x20019944_f * (x**126) + L0x20019946_f * (x**127) + 
            L0x20019948_f * (x**128) + L0x2001994a_f * (x**129) + 
            L0x2001994c_f * (x**130) + L0x2001994e_f * (x**131) + 
            L0x20019950_f * (x**132) + L0x20019952_f * (x**133) + 
            L0x20019954_f * (x**134) + L0x20019956_f * (x**135) + 
            L0x20019958_f * (x**136) + L0x2001995a_f * (x**137) + 
            L0x2001995c_f * (x**138) + L0x2001995e_f * (x**139) + 
            L0x20019960_f * (x**140) + L0x20019962_f * (x**141) + 
            L0x20019964_f * (x**142) + L0x20019966_f * (x**143) + 
            L0x20019968_f * (x**144) + L0x2001996a_f * (x**145) + 
            L0x2001996c_f * (x**146) + L0x2001996e_f * (x**147) + 
            L0x20019970_f * (x**148) + L0x20019972_f * (x**149) + 
            L0x20019974_f * (x**150) + L0x20019976_f * (x**151) + 
            L0x20019978_f * (x**152) + L0x2001997a_f * (x**153) + 
            L0x2001997c_f * (x**154) + L0x2001997e_f * (x**155) + 
            L0x20019980_f * (x**156) + L0x20019982_f * (x**157) + 
            L0x20019984_f * (x**158) + L0x20019986_f * (x**159) + 
            L0x20019988_f * (x**160) + L0x2001998a_f * (x**161) + 
            L0x2001998c_f * (x**162) + L0x2001998e_f * (x**163) + 
            L0x20019990_f * (x**164) + L0x20019992_f * (x**165) + 
            L0x20019994_f * (x**166) + L0x20019996_f * (x**167) + 
            L0x20019998_f * (x**168) + L0x2001999a_f * (x**169) + 
            L0x2001999c_f * (x**170) + L0x2001999e_f * (x**171) + 
            L0x200199a0_f * (x**172) + L0x200199a2_f * (x**173) + 
            L0x200199a4_f * (x**174) + L0x200199a6_f * (x**175) + 
            L0x200199a8_f * (x**176) + L0x200199aa_f * (x**177) + 
            L0x200199ac_f * (x**178) + L0x200199ae_f * (x**179) + 
            L0x200199b0_f * (x**180) + L0x200199b2_f * (x**181) + 
            L0x200199b4_f * (x**182) + L0x200199b6_f * (x**183) + 
            L0x200199b8_f * (x**184) + L0x200199ba_f * (x**185) + 
            L0x200199bc_f * (x**186) + L0x200199be_f * (x**187) + 
            L0x200199c0_f * (x**188) + L0x200199c2_f * (x**189) + 
            L0x200199c4_f * (x**190) + L0x200199c6_f * (x**191) + 
            L0x200199c8_f * (x**192) + L0x200199ca_f * (x**193) + 
            L0x200199cc_f * (x**194) + L0x200199ce_f * (x**195) + 
            L0x200199d0_f * (x**196) + L0x200199d2_f * (x**197) + 
            L0x200199d4_f * (x**198) + L0x200199d6_f * (x**199) + 
            L0x200199d8_f * (x**200) + L0x200199da_f * (x**201) + 
            L0x200199dc_f * (x**202) + L0x200199de_f * (x**203) + 
            L0x200199e0_f * (x**204) + L0x200199e2_f * (x**205) + 
            L0x200199e4_f * (x**206) + L0x200199e6_f * (x**207) + 
            L0x200199e8_f * (x**208) + L0x200199ea_f * (x**209) + 
            L0x200199ec_f * (x**210) + L0x200199ee_f * (x**211) + 
            L0x200199f0_f * (x**212) + L0x200199f2_f * (x**213) + 
            L0x200199f4_f * (x**214) + L0x200199f6_f * (x**215) + 
            L0x200199f8_f * (x**216) + L0x200199fa_f * (x**217) + 
            L0x200199fc_f * (x**218) + L0x200199fe_f * (x**219) + 
            L0x20019a00_f * (x**220) + L0x20019a02_f * (x**221) + 
            L0x20019a04_f * (x**222) + L0x20019a06_f * (x**223) + 
            L0x20019a08_f * (x**224) + L0x20019a0a_f * (x**225) + 
            L0x20019a0c_f * (x**226) + L0x20019a0e_f * (x**227) + 
            L0x20019a10_f * (x**228) + L0x20019a12_f * (x**229) + 
            L0x20019a14_f * (x**230) + L0x20019a16_f * (x**231) + 
            L0x20019a18_f * (x**232) + L0x20019a1a_f * (x**233) + 
            L0x20019a1c_f * (x**234) + L0x20019a1e_f * (x**235) + 
            L0x20019a20_f * (x**236) + L0x20019a22_f * (x**237) + 
            L0x20019a24_f * (x**238) + L0x20019a26_f * (x**239) + 
            L0x20019a28_f * (x**240) + L0x20019a2a_f * (x**241) + 
            L0x20019a2c_f * (x**242) + L0x20019a2e_f * (x**243) + 
            L0x20019a30_f * (x**244) + L0x20019a32_f * (x**245) + 
            L0x20019a34_f * (x**246) + L0x20019a36_f * (x**247) + 
            L0x20019a38_f * (x**248) + L0x20019a3a_f * (x**249) + 
            L0x20019a3c_f * (x**250) + L0x20019a3e_f * (x**251) + 
            L0x20019a40_f * (x**252) + L0x20019a42_f * (x**253) + 
            L0x20019a44_f * (x**254) + L0x20019a46_f * (x**255)
          )
          [25570049, x**4 - 7271391],
    (* inp_poly_48 *)
    eqmod (2**32) * (inp_poly_48 * inp_poly_48)
          (
            L0x20019848_f * (x**0) + L0x2001984a_f * (x**1) + 
            L0x2001984c_f * (x**2) + L0x2001984e_f * (x**3) + 
            L0x20019850_f * (x**4) + L0x20019852_f * (x**5) + 
            L0x20019854_f * (x**6) + L0x20019856_f * (x**7) + 
            L0x20019858_f * (x**8) + L0x2001985a_f * (x**9) + 
            L0x2001985c_f * (x**10) + L0x2001985e_f * (x**11) + 
            L0x20019860_f * (x**12) + L0x20019862_f * (x**13) + 
            L0x20019864_f * (x**14) + L0x20019866_f * (x**15) + 
            L0x20019868_f * (x**16) + L0x2001986a_f * (x**17) + 
            L0x2001986c_f * (x**18) + L0x2001986e_f * (x**19) + 
            L0x20019870_f * (x**20) + L0x20019872_f * (x**21) + 
            L0x20019874_f * (x**22) + L0x20019876_f * (x**23) + 
            L0x20019878_f * (x**24) + L0x2001987a_f * (x**25) + 
            L0x2001987c_f * (x**26) + L0x2001987e_f * (x**27) + 
            L0x20019880_f * (x**28) + L0x20019882_f * (x**29) + 
            L0x20019884_f * (x**30) + L0x20019886_f * (x**31) + 
            L0x20019888_f * (x**32) + L0x2001988a_f * (x**33) + 
            L0x2001988c_f * (x**34) + L0x2001988e_f * (x**35) + 
            L0x20019890_f * (x**36) + L0x20019892_f * (x**37) + 
            L0x20019894_f * (x**38) + L0x20019896_f * (x**39) + 
            L0x20019898_f * (x**40) + L0x2001989a_f * (x**41) + 
            L0x2001989c_f * (x**42) + L0x2001989e_f * (x**43) + 
            L0x200198a0_f * (x**44) + L0x200198a2_f * (x**45) + 
            L0x200198a4_f * (x**46) + L0x200198a6_f * (x**47) + 
            L0x200198a8_f * (x**48) + L0x200198aa_f * (x**49) + 
            L0x200198ac_f * (x**50) + L0x200198ae_f * (x**51) + 
            L0x200198b0_f * (x**52) + L0x200198b2_f * (x**53) + 
            L0x200198b4_f * (x**54) + L0x200198b6_f * (x**55) + 
            L0x200198b8_f * (x**56) + L0x200198ba_f * (x**57) + 
            L0x200198bc_f * (x**58) + L0x200198be_f * (x**59) + 
            L0x200198c0_f * (x**60) + L0x200198c2_f * (x**61) + 
            L0x200198c4_f * (x**62) + L0x200198c6_f * (x**63) + 
            L0x200198c8_f * (x**64) + L0x200198ca_f * (x**65) + 
            L0x200198cc_f * (x**66) + L0x200198ce_f * (x**67) + 
            L0x200198d0_f * (x**68) + L0x200198d2_f * (x**69) + 
            L0x200198d4_f * (x**70) + L0x200198d6_f * (x**71) + 
            L0x200198d8_f * (x**72) + L0x200198da_f * (x**73) + 
            L0x200198dc_f * (x**74) + L0x200198de_f * (x**75) + 
            L0x200198e0_f * (x**76) + L0x200198e2_f * (x**77) + 
            L0x200198e4_f * (x**78) + L0x200198e6_f * (x**79) + 
            L0x200198e8_f * (x**80) + L0x200198ea_f * (x**81) + 
            L0x200198ec_f * (x**82) + L0x200198ee_f * (x**83) + 
            L0x200198f0_f * (x**84) + L0x200198f2_f * (x**85) + 
            L0x200198f4_f * (x**86) + L0x200198f6_f * (x**87) + 
            L0x200198f8_f * (x**88) + L0x200198fa_f * (x**89) + 
            L0x200198fc_f * (x**90) + L0x200198fe_f * (x**91) + 
            L0x20019900_f * (x**92) + L0x20019902_f * (x**93) + 
            L0x20019904_f * (x**94) + L0x20019906_f * (x**95) + 
            L0x20019908_f * (x**96) + L0x2001990a_f * (x**97) + 
            L0x2001990c_f * (x**98) + L0x2001990e_f * (x**99) + 
            L0x20019910_f * (x**100) + L0x20019912_f * (x**101) + 
            L0x20019914_f * (x**102) + L0x20019916_f * (x**103) + 
            L0x20019918_f * (x**104) + L0x2001991a_f * (x**105) + 
            L0x2001991c_f * (x**106) + L0x2001991e_f * (x**107) + 
            L0x20019920_f * (x**108) + L0x20019922_f * (x**109) + 
            L0x20019924_f * (x**110) + L0x20019926_f * (x**111) + 
            L0x20019928_f * (x**112) + L0x2001992a_f * (x**113) + 
            L0x2001992c_f * (x**114) + L0x2001992e_f * (x**115) + 
            L0x20019930_f * (x**116) + L0x20019932_f * (x**117) + 
            L0x20019934_f * (x**118) + L0x20019936_f * (x**119) + 
            L0x20019938_f * (x**120) + L0x2001993a_f * (x**121) + 
            L0x2001993c_f * (x**122) + L0x2001993e_f * (x**123) + 
            L0x20019940_f * (x**124) + L0x20019942_f * (x**125) + 
            L0x20019944_f * (x**126) + L0x20019946_f * (x**127) + 
            L0x20019948_f * (x**128) + L0x2001994a_f * (x**129) + 
            L0x2001994c_f * (x**130) + L0x2001994e_f * (x**131) + 
            L0x20019950_f * (x**132) + L0x20019952_f * (x**133) + 
            L0x20019954_f * (x**134) + L0x20019956_f * (x**135) + 
            L0x20019958_f * (x**136) + L0x2001995a_f * (x**137) + 
            L0x2001995c_f * (x**138) + L0x2001995e_f * (x**139) + 
            L0x20019960_f * (x**140) + L0x20019962_f * (x**141) + 
            L0x20019964_f * (x**142) + L0x20019966_f * (x**143) + 
            L0x20019968_f * (x**144) + L0x2001996a_f * (x**145) + 
            L0x2001996c_f * (x**146) + L0x2001996e_f * (x**147) + 
            L0x20019970_f * (x**148) + L0x20019972_f * (x**149) + 
            L0x20019974_f * (x**150) + L0x20019976_f * (x**151) + 
            L0x20019978_f * (x**152) + L0x2001997a_f * (x**153) + 
            L0x2001997c_f * (x**154) + L0x2001997e_f * (x**155) + 
            L0x20019980_f * (x**156) + L0x20019982_f * (x**157) + 
            L0x20019984_f * (x**158) + L0x20019986_f * (x**159) + 
            L0x20019988_f * (x**160) + L0x2001998a_f * (x**161) + 
            L0x2001998c_f * (x**162) + L0x2001998e_f * (x**163) + 
            L0x20019990_f * (x**164) + L0x20019992_f * (x**165) + 
            L0x20019994_f * (x**166) + L0x20019996_f * (x**167) + 
            L0x20019998_f * (x**168) + L0x2001999a_f * (x**169) + 
            L0x2001999c_f * (x**170) + L0x2001999e_f * (x**171) + 
            L0x200199a0_f * (x**172) + L0x200199a2_f * (x**173) + 
            L0x200199a4_f * (x**174) + L0x200199a6_f * (x**175) + 
            L0x200199a8_f * (x**176) + L0x200199aa_f * (x**177) + 
            L0x200199ac_f * (x**178) + L0x200199ae_f * (x**179) + 
            L0x200199b0_f * (x**180) + L0x200199b2_f * (x**181) + 
            L0x200199b4_f * (x**182) + L0x200199b6_f * (x**183) + 
            L0x200199b8_f * (x**184) + L0x200199ba_f * (x**185) + 
            L0x200199bc_f * (x**186) + L0x200199be_f * (x**187) + 
            L0x200199c0_f * (x**188) + L0x200199c2_f * (x**189) + 
            L0x200199c4_f * (x**190) + L0x200199c6_f * (x**191) + 
            L0x200199c8_f * (x**192) + L0x200199ca_f * (x**193) + 
            L0x200199cc_f * (x**194) + L0x200199ce_f * (x**195) + 
            L0x200199d0_f * (x**196) + L0x200199d2_f * (x**197) + 
            L0x200199d4_f * (x**198) + L0x200199d6_f * (x**199) + 
            L0x200199d8_f * (x**200) + L0x200199da_f * (x**201) + 
            L0x200199dc_f * (x**202) + L0x200199de_f * (x**203) + 
            L0x200199e0_f * (x**204) + L0x200199e2_f * (x**205) + 
            L0x200199e4_f * (x**206) + L0x200199e6_f * (x**207) + 
            L0x200199e8_f * (x**208) + L0x200199ea_f * (x**209) + 
            L0x200199ec_f * (x**210) + L0x200199ee_f * (x**211) + 
            L0x200199f0_f * (x**212) + L0x200199f2_f * (x**213) + 
            L0x200199f4_f * (x**214) + L0x200199f6_f * (x**215) + 
            L0x200199f8_f * (x**216) + L0x200199fa_f * (x**217) + 
            L0x200199fc_f * (x**218) + L0x200199fe_f * (x**219) + 
            L0x20019a00_f * (x**220) + L0x20019a02_f * (x**221) + 
            L0x20019a04_f * (x**222) + L0x20019a06_f * (x**223) + 
            L0x20019a08_f * (x**224) + L0x20019a0a_f * (x**225) + 
            L0x20019a0c_f * (x**226) + L0x20019a0e_f * (x**227) + 
            L0x20019a10_f * (x**228) + L0x20019a12_f * (x**229) + 
            L0x20019a14_f * (x**230) + L0x20019a16_f * (x**231) + 
            L0x20019a18_f * (x**232) + L0x20019a1a_f * (x**233) + 
            L0x20019a1c_f * (x**234) + L0x20019a1e_f * (x**235) + 
            L0x20019a20_f * (x**236) + L0x20019a22_f * (x**237) + 
            L0x20019a24_f * (x**238) + L0x20019a26_f * (x**239) + 
            L0x20019a28_f * (x**240) + L0x20019a2a_f * (x**241) + 
            L0x20019a2c_f * (x**242) + L0x20019a2e_f * (x**243) + 
            L0x20019a30_f * (x**244) + L0x20019a32_f * (x**245) + 
            L0x20019a34_f * (x**246) + L0x20019a36_f * (x**247) + 
            L0x20019a38_f * (x**248) + L0x20019a3a_f * (x**249) + 
            L0x20019a3c_f * (x**250) + L0x20019a3e_f * (x**251) + 
            L0x20019a40_f * (x**252) + L0x20019a42_f * (x**253) + 
            L0x20019a44_f * (x**254) + L0x20019a46_f * (x**255)
          )
          [25570049, x**4 - 17500092],
    (* inp_poly_49 *)
    eqmod (2**32) * (inp_poly_49 * inp_poly_49)
          (
            L0x20019848_f * (x**0) + L0x2001984a_f * (x**1) + 
            L0x2001984c_f * (x**2) + L0x2001984e_f * (x**3) + 
            L0x20019850_f * (x**4) + L0x20019852_f * (x**5) + 
            L0x20019854_f * (x**6) + L0x20019856_f * (x**7) + 
            L0x20019858_f * (x**8) + L0x2001985a_f * (x**9) + 
            L0x2001985c_f * (x**10) + L0x2001985e_f * (x**11) + 
            L0x20019860_f * (x**12) + L0x20019862_f * (x**13) + 
            L0x20019864_f * (x**14) + L0x20019866_f * (x**15) + 
            L0x20019868_f * (x**16) + L0x2001986a_f * (x**17) + 
            L0x2001986c_f * (x**18) + L0x2001986e_f * (x**19) + 
            L0x20019870_f * (x**20) + L0x20019872_f * (x**21) + 
            L0x20019874_f * (x**22) + L0x20019876_f * (x**23) + 
            L0x20019878_f * (x**24) + L0x2001987a_f * (x**25) + 
            L0x2001987c_f * (x**26) + L0x2001987e_f * (x**27) + 
            L0x20019880_f * (x**28) + L0x20019882_f * (x**29) + 
            L0x20019884_f * (x**30) + L0x20019886_f * (x**31) + 
            L0x20019888_f * (x**32) + L0x2001988a_f * (x**33) + 
            L0x2001988c_f * (x**34) + L0x2001988e_f * (x**35) + 
            L0x20019890_f * (x**36) + L0x20019892_f * (x**37) + 
            L0x20019894_f * (x**38) + L0x20019896_f * (x**39) + 
            L0x20019898_f * (x**40) + L0x2001989a_f * (x**41) + 
            L0x2001989c_f * (x**42) + L0x2001989e_f * (x**43) + 
            L0x200198a0_f * (x**44) + L0x200198a2_f * (x**45) + 
            L0x200198a4_f * (x**46) + L0x200198a6_f * (x**47) + 
            L0x200198a8_f * (x**48) + L0x200198aa_f * (x**49) + 
            L0x200198ac_f * (x**50) + L0x200198ae_f * (x**51) + 
            L0x200198b0_f * (x**52) + L0x200198b2_f * (x**53) + 
            L0x200198b4_f * (x**54) + L0x200198b6_f * (x**55) + 
            L0x200198b8_f * (x**56) + L0x200198ba_f * (x**57) + 
            L0x200198bc_f * (x**58) + L0x200198be_f * (x**59) + 
            L0x200198c0_f * (x**60) + L0x200198c2_f * (x**61) + 
            L0x200198c4_f * (x**62) + L0x200198c6_f * (x**63) + 
            L0x200198c8_f * (x**64) + L0x200198ca_f * (x**65) + 
            L0x200198cc_f * (x**66) + L0x200198ce_f * (x**67) + 
            L0x200198d0_f * (x**68) + L0x200198d2_f * (x**69) + 
            L0x200198d4_f * (x**70) + L0x200198d6_f * (x**71) + 
            L0x200198d8_f * (x**72) + L0x200198da_f * (x**73) + 
            L0x200198dc_f * (x**74) + L0x200198de_f * (x**75) + 
            L0x200198e0_f * (x**76) + L0x200198e2_f * (x**77) + 
            L0x200198e4_f * (x**78) + L0x200198e6_f * (x**79) + 
            L0x200198e8_f * (x**80) + L0x200198ea_f * (x**81) + 
            L0x200198ec_f * (x**82) + L0x200198ee_f * (x**83) + 
            L0x200198f0_f * (x**84) + L0x200198f2_f * (x**85) + 
            L0x200198f4_f * (x**86) + L0x200198f6_f * (x**87) + 
            L0x200198f8_f * (x**88) + L0x200198fa_f * (x**89) + 
            L0x200198fc_f * (x**90) + L0x200198fe_f * (x**91) + 
            L0x20019900_f * (x**92) + L0x20019902_f * (x**93) + 
            L0x20019904_f * (x**94) + L0x20019906_f * (x**95) + 
            L0x20019908_f * (x**96) + L0x2001990a_f * (x**97) + 
            L0x2001990c_f * (x**98) + L0x2001990e_f * (x**99) + 
            L0x20019910_f * (x**100) + L0x20019912_f * (x**101) + 
            L0x20019914_f * (x**102) + L0x20019916_f * (x**103) + 
            L0x20019918_f * (x**104) + L0x2001991a_f * (x**105) + 
            L0x2001991c_f * (x**106) + L0x2001991e_f * (x**107) + 
            L0x20019920_f * (x**108) + L0x20019922_f * (x**109) + 
            L0x20019924_f * (x**110) + L0x20019926_f * (x**111) + 
            L0x20019928_f * (x**112) + L0x2001992a_f * (x**113) + 
            L0x2001992c_f * (x**114) + L0x2001992e_f * (x**115) + 
            L0x20019930_f * (x**116) + L0x20019932_f * (x**117) + 
            L0x20019934_f * (x**118) + L0x20019936_f * (x**119) + 
            L0x20019938_f * (x**120) + L0x2001993a_f * (x**121) + 
            L0x2001993c_f * (x**122) + L0x2001993e_f * (x**123) + 
            L0x20019940_f * (x**124) + L0x20019942_f * (x**125) + 
            L0x20019944_f * (x**126) + L0x20019946_f * (x**127) + 
            L0x20019948_f * (x**128) + L0x2001994a_f * (x**129) + 
            L0x2001994c_f * (x**130) + L0x2001994e_f * (x**131) + 
            L0x20019950_f * (x**132) + L0x20019952_f * (x**133) + 
            L0x20019954_f * (x**134) + L0x20019956_f * (x**135) + 
            L0x20019958_f * (x**136) + L0x2001995a_f * (x**137) + 
            L0x2001995c_f * (x**138) + L0x2001995e_f * (x**139) + 
            L0x20019960_f * (x**140) + L0x20019962_f * (x**141) + 
            L0x20019964_f * (x**142) + L0x20019966_f * (x**143) + 
            L0x20019968_f * (x**144) + L0x2001996a_f * (x**145) + 
            L0x2001996c_f * (x**146) + L0x2001996e_f * (x**147) + 
            L0x20019970_f * (x**148) + L0x20019972_f * (x**149) + 
            L0x20019974_f * (x**150) + L0x20019976_f * (x**151) + 
            L0x20019978_f * (x**152) + L0x2001997a_f * (x**153) + 
            L0x2001997c_f * (x**154) + L0x2001997e_f * (x**155) + 
            L0x20019980_f * (x**156) + L0x20019982_f * (x**157) + 
            L0x20019984_f * (x**158) + L0x20019986_f * (x**159) + 
            L0x20019988_f * (x**160) + L0x2001998a_f * (x**161) + 
            L0x2001998c_f * (x**162) + L0x2001998e_f * (x**163) + 
            L0x20019990_f * (x**164) + L0x20019992_f * (x**165) + 
            L0x20019994_f * (x**166) + L0x20019996_f * (x**167) + 
            L0x20019998_f * (x**168) + L0x2001999a_f * (x**169) + 
            L0x2001999c_f * (x**170) + L0x2001999e_f * (x**171) + 
            L0x200199a0_f * (x**172) + L0x200199a2_f * (x**173) + 
            L0x200199a4_f * (x**174) + L0x200199a6_f * (x**175) + 
            L0x200199a8_f * (x**176) + L0x200199aa_f * (x**177) + 
            L0x200199ac_f * (x**178) + L0x200199ae_f * (x**179) + 
            L0x200199b0_f * (x**180) + L0x200199b2_f * (x**181) + 
            L0x200199b4_f * (x**182) + L0x200199b6_f * (x**183) + 
            L0x200199b8_f * (x**184) + L0x200199ba_f * (x**185) + 
            L0x200199bc_f * (x**186) + L0x200199be_f * (x**187) + 
            L0x200199c0_f * (x**188) + L0x200199c2_f * (x**189) + 
            L0x200199c4_f * (x**190) + L0x200199c6_f * (x**191) + 
            L0x200199c8_f * (x**192) + L0x200199ca_f * (x**193) + 
            L0x200199cc_f * (x**194) + L0x200199ce_f * (x**195) + 
            L0x200199d0_f * (x**196) + L0x200199d2_f * (x**197) + 
            L0x200199d4_f * (x**198) + L0x200199d6_f * (x**199) + 
            L0x200199d8_f * (x**200) + L0x200199da_f * (x**201) + 
            L0x200199dc_f * (x**202) + L0x200199de_f * (x**203) + 
            L0x200199e0_f * (x**204) + L0x200199e2_f * (x**205) + 
            L0x200199e4_f * (x**206) + L0x200199e6_f * (x**207) + 
            L0x200199e8_f * (x**208) + L0x200199ea_f * (x**209) + 
            L0x200199ec_f * (x**210) + L0x200199ee_f * (x**211) + 
            L0x200199f0_f * (x**212) + L0x200199f2_f * (x**213) + 
            L0x200199f4_f * (x**214) + L0x200199f6_f * (x**215) + 
            L0x200199f8_f * (x**216) + L0x200199fa_f * (x**217) + 
            L0x200199fc_f * (x**218) + L0x200199fe_f * (x**219) + 
            L0x20019a00_f * (x**220) + L0x20019a02_f * (x**221) + 
            L0x20019a04_f * (x**222) + L0x20019a06_f * (x**223) + 
            L0x20019a08_f * (x**224) + L0x20019a0a_f * (x**225) + 
            L0x20019a0c_f * (x**226) + L0x20019a0e_f * (x**227) + 
            L0x20019a10_f * (x**228) + L0x20019a12_f * (x**229) + 
            L0x20019a14_f * (x**230) + L0x20019a16_f * (x**231) + 
            L0x20019a18_f * (x**232) + L0x20019a1a_f * (x**233) + 
            L0x20019a1c_f * (x**234) + L0x20019a1e_f * (x**235) + 
            L0x20019a20_f * (x**236) + L0x20019a22_f * (x**237) + 
            L0x20019a24_f * (x**238) + L0x20019a26_f * (x**239) + 
            L0x20019a28_f * (x**240) + L0x20019a2a_f * (x**241) + 
            L0x20019a2c_f * (x**242) + L0x20019a2e_f * (x**243) + 
            L0x20019a30_f * (x**244) + L0x20019a32_f * (x**245) + 
            L0x20019a34_f * (x**246) + L0x20019a36_f * (x**247) + 
            L0x20019a38_f * (x**248) + L0x20019a3a_f * (x**249) + 
            L0x20019a3c_f * (x**250) + L0x20019a3e_f * (x**251) + 
            L0x20019a40_f * (x**252) + L0x20019a42_f * (x**253) + 
            L0x20019a44_f * (x**254) + L0x20019a46_f * (x**255)
          )
          [25570049, x**4 - 8069957],
    (* inp_poly_50 *)
    eqmod (2**32) * (inp_poly_50 * inp_poly_50)
          (
            L0x20019848_f * (x**0) + L0x2001984a_f * (x**1) + 
            L0x2001984c_f * (x**2) + L0x2001984e_f * (x**3) + 
            L0x20019850_f * (x**4) + L0x20019852_f * (x**5) + 
            L0x20019854_f * (x**6) + L0x20019856_f * (x**7) + 
            L0x20019858_f * (x**8) + L0x2001985a_f * (x**9) + 
            L0x2001985c_f * (x**10) + L0x2001985e_f * (x**11) + 
            L0x20019860_f * (x**12) + L0x20019862_f * (x**13) + 
            L0x20019864_f * (x**14) + L0x20019866_f * (x**15) + 
            L0x20019868_f * (x**16) + L0x2001986a_f * (x**17) + 
            L0x2001986c_f * (x**18) + L0x2001986e_f * (x**19) + 
            L0x20019870_f * (x**20) + L0x20019872_f * (x**21) + 
            L0x20019874_f * (x**22) + L0x20019876_f * (x**23) + 
            L0x20019878_f * (x**24) + L0x2001987a_f * (x**25) + 
            L0x2001987c_f * (x**26) + L0x2001987e_f * (x**27) + 
            L0x20019880_f * (x**28) + L0x20019882_f * (x**29) + 
            L0x20019884_f * (x**30) + L0x20019886_f * (x**31) + 
            L0x20019888_f * (x**32) + L0x2001988a_f * (x**33) + 
            L0x2001988c_f * (x**34) + L0x2001988e_f * (x**35) + 
            L0x20019890_f * (x**36) + L0x20019892_f * (x**37) + 
            L0x20019894_f * (x**38) + L0x20019896_f * (x**39) + 
            L0x20019898_f * (x**40) + L0x2001989a_f * (x**41) + 
            L0x2001989c_f * (x**42) + L0x2001989e_f * (x**43) + 
            L0x200198a0_f * (x**44) + L0x200198a2_f * (x**45) + 
            L0x200198a4_f * (x**46) + L0x200198a6_f * (x**47) + 
            L0x200198a8_f * (x**48) + L0x200198aa_f * (x**49) + 
            L0x200198ac_f * (x**50) + L0x200198ae_f * (x**51) + 
            L0x200198b0_f * (x**52) + L0x200198b2_f * (x**53) + 
            L0x200198b4_f * (x**54) + L0x200198b6_f * (x**55) + 
            L0x200198b8_f * (x**56) + L0x200198ba_f * (x**57) + 
            L0x200198bc_f * (x**58) + L0x200198be_f * (x**59) + 
            L0x200198c0_f * (x**60) + L0x200198c2_f * (x**61) + 
            L0x200198c4_f * (x**62) + L0x200198c6_f * (x**63) + 
            L0x200198c8_f * (x**64) + L0x200198ca_f * (x**65) + 
            L0x200198cc_f * (x**66) + L0x200198ce_f * (x**67) + 
            L0x200198d0_f * (x**68) + L0x200198d2_f * (x**69) + 
            L0x200198d4_f * (x**70) + L0x200198d6_f * (x**71) + 
            L0x200198d8_f * (x**72) + L0x200198da_f * (x**73) + 
            L0x200198dc_f * (x**74) + L0x200198de_f * (x**75) + 
            L0x200198e0_f * (x**76) + L0x200198e2_f * (x**77) + 
            L0x200198e4_f * (x**78) + L0x200198e6_f * (x**79) + 
            L0x200198e8_f * (x**80) + L0x200198ea_f * (x**81) + 
            L0x200198ec_f * (x**82) + L0x200198ee_f * (x**83) + 
            L0x200198f0_f * (x**84) + L0x200198f2_f * (x**85) + 
            L0x200198f4_f * (x**86) + L0x200198f6_f * (x**87) + 
            L0x200198f8_f * (x**88) + L0x200198fa_f * (x**89) + 
            L0x200198fc_f * (x**90) + L0x200198fe_f * (x**91) + 
            L0x20019900_f * (x**92) + L0x20019902_f * (x**93) + 
            L0x20019904_f * (x**94) + L0x20019906_f * (x**95) + 
            L0x20019908_f * (x**96) + L0x2001990a_f * (x**97) + 
            L0x2001990c_f * (x**98) + L0x2001990e_f * (x**99) + 
            L0x20019910_f * (x**100) + L0x20019912_f * (x**101) + 
            L0x20019914_f * (x**102) + L0x20019916_f * (x**103) + 
            L0x20019918_f * (x**104) + L0x2001991a_f * (x**105) + 
            L0x2001991c_f * (x**106) + L0x2001991e_f * (x**107) + 
            L0x20019920_f * (x**108) + L0x20019922_f * (x**109) + 
            L0x20019924_f * (x**110) + L0x20019926_f * (x**111) + 
            L0x20019928_f * (x**112) + L0x2001992a_f * (x**113) + 
            L0x2001992c_f * (x**114) + L0x2001992e_f * (x**115) + 
            L0x20019930_f * (x**116) + L0x20019932_f * (x**117) + 
            L0x20019934_f * (x**118) + L0x20019936_f * (x**119) + 
            L0x20019938_f * (x**120) + L0x2001993a_f * (x**121) + 
            L0x2001993c_f * (x**122) + L0x2001993e_f * (x**123) + 
            L0x20019940_f * (x**124) + L0x20019942_f * (x**125) + 
            L0x20019944_f * (x**126) + L0x20019946_f * (x**127) + 
            L0x20019948_f * (x**128) + L0x2001994a_f * (x**129) + 
            L0x2001994c_f * (x**130) + L0x2001994e_f * (x**131) + 
            L0x20019950_f * (x**132) + L0x20019952_f * (x**133) + 
            L0x20019954_f * (x**134) + L0x20019956_f * (x**135) + 
            L0x20019958_f * (x**136) + L0x2001995a_f * (x**137) + 
            L0x2001995c_f * (x**138) + L0x2001995e_f * (x**139) + 
            L0x20019960_f * (x**140) + L0x20019962_f * (x**141) + 
            L0x20019964_f * (x**142) + L0x20019966_f * (x**143) + 
            L0x20019968_f * (x**144) + L0x2001996a_f * (x**145) + 
            L0x2001996c_f * (x**146) + L0x2001996e_f * (x**147) + 
            L0x20019970_f * (x**148) + L0x20019972_f * (x**149) + 
            L0x20019974_f * (x**150) + L0x20019976_f * (x**151) + 
            L0x20019978_f * (x**152) + L0x2001997a_f * (x**153) + 
            L0x2001997c_f * (x**154) + L0x2001997e_f * (x**155) + 
            L0x20019980_f * (x**156) + L0x20019982_f * (x**157) + 
            L0x20019984_f * (x**158) + L0x20019986_f * (x**159) + 
            L0x20019988_f * (x**160) + L0x2001998a_f * (x**161) + 
            L0x2001998c_f * (x**162) + L0x2001998e_f * (x**163) + 
            L0x20019990_f * (x**164) + L0x20019992_f * (x**165) + 
            L0x20019994_f * (x**166) + L0x20019996_f * (x**167) + 
            L0x20019998_f * (x**168) + L0x2001999a_f * (x**169) + 
            L0x2001999c_f * (x**170) + L0x2001999e_f * (x**171) + 
            L0x200199a0_f * (x**172) + L0x200199a2_f * (x**173) + 
            L0x200199a4_f * (x**174) + L0x200199a6_f * (x**175) + 
            L0x200199a8_f * (x**176) + L0x200199aa_f * (x**177) + 
            L0x200199ac_f * (x**178) + L0x200199ae_f * (x**179) + 
            L0x200199b0_f * (x**180) + L0x200199b2_f * (x**181) + 
            L0x200199b4_f * (x**182) + L0x200199b6_f * (x**183) + 
            L0x200199b8_f * (x**184) + L0x200199ba_f * (x**185) + 
            L0x200199bc_f * (x**186) + L0x200199be_f * (x**187) + 
            L0x200199c0_f * (x**188) + L0x200199c2_f * (x**189) + 
            L0x200199c4_f * (x**190) + L0x200199c6_f * (x**191) + 
            L0x200199c8_f * (x**192) + L0x200199ca_f * (x**193) + 
            L0x200199cc_f * (x**194) + L0x200199ce_f * (x**195) + 
            L0x200199d0_f * (x**196) + L0x200199d2_f * (x**197) + 
            L0x200199d4_f * (x**198) + L0x200199d6_f * (x**199) + 
            L0x200199d8_f * (x**200) + L0x200199da_f * (x**201) + 
            L0x200199dc_f * (x**202) + L0x200199de_f * (x**203) + 
            L0x200199e0_f * (x**204) + L0x200199e2_f * (x**205) + 
            L0x200199e4_f * (x**206) + L0x200199e6_f * (x**207) + 
            L0x200199e8_f * (x**208) + L0x200199ea_f * (x**209) + 
            L0x200199ec_f * (x**210) + L0x200199ee_f * (x**211) + 
            L0x200199f0_f * (x**212) + L0x200199f2_f * (x**213) + 
            L0x200199f4_f * (x**214) + L0x200199f6_f * (x**215) + 
            L0x200199f8_f * (x**216) + L0x200199fa_f * (x**217) + 
            L0x200199fc_f * (x**218) + L0x200199fe_f * (x**219) + 
            L0x20019a00_f * (x**220) + L0x20019a02_f * (x**221) + 
            L0x20019a04_f * (x**222) + L0x20019a06_f * (x**223) + 
            L0x20019a08_f * (x**224) + L0x20019a0a_f * (x**225) + 
            L0x20019a0c_f * (x**226) + L0x20019a0e_f * (x**227) + 
            L0x20019a10_f * (x**228) + L0x20019a12_f * (x**229) + 
            L0x20019a14_f * (x**230) + L0x20019a16_f * (x**231) + 
            L0x20019a18_f * (x**232) + L0x20019a1a_f * (x**233) + 
            L0x20019a1c_f * (x**234) + L0x20019a1e_f * (x**235) + 
            L0x20019a20_f * (x**236) + L0x20019a22_f * (x**237) + 
            L0x20019a24_f * (x**238) + L0x20019a26_f * (x**239) + 
            L0x20019a28_f * (x**240) + L0x20019a2a_f * (x**241) + 
            L0x20019a2c_f * (x**242) + L0x20019a2e_f * (x**243) + 
            L0x20019a30_f * (x**244) + L0x20019a32_f * (x**245) + 
            L0x20019a34_f * (x**246) + L0x20019a36_f * (x**247) + 
            L0x20019a38_f * (x**248) + L0x20019a3a_f * (x**249) + 
            L0x20019a3c_f * (x**250) + L0x20019a3e_f * (x**251) + 
            L0x20019a40_f * (x**252) + L0x20019a42_f * (x**253) + 
            L0x20019a44_f * (x**254) + L0x20019a46_f * (x**255)
          )
          [25570049, x**4 - 3627172],
    (* inp_poly_51 *)
    eqmod (2**32) * (inp_poly_51 * inp_poly_51)
          (
            L0x20019848_f * (x**0) + L0x2001984a_f * (x**1) + 
            L0x2001984c_f * (x**2) + L0x2001984e_f * (x**3) + 
            L0x20019850_f * (x**4) + L0x20019852_f * (x**5) + 
            L0x20019854_f * (x**6) + L0x20019856_f * (x**7) + 
            L0x20019858_f * (x**8) + L0x2001985a_f * (x**9) + 
            L0x2001985c_f * (x**10) + L0x2001985e_f * (x**11) + 
            L0x20019860_f * (x**12) + L0x20019862_f * (x**13) + 
            L0x20019864_f * (x**14) + L0x20019866_f * (x**15) + 
            L0x20019868_f * (x**16) + L0x2001986a_f * (x**17) + 
            L0x2001986c_f * (x**18) + L0x2001986e_f * (x**19) + 
            L0x20019870_f * (x**20) + L0x20019872_f * (x**21) + 
            L0x20019874_f * (x**22) + L0x20019876_f * (x**23) + 
            L0x20019878_f * (x**24) + L0x2001987a_f * (x**25) + 
            L0x2001987c_f * (x**26) + L0x2001987e_f * (x**27) + 
            L0x20019880_f * (x**28) + L0x20019882_f * (x**29) + 
            L0x20019884_f * (x**30) + L0x20019886_f * (x**31) + 
            L0x20019888_f * (x**32) + L0x2001988a_f * (x**33) + 
            L0x2001988c_f * (x**34) + L0x2001988e_f * (x**35) + 
            L0x20019890_f * (x**36) + L0x20019892_f * (x**37) + 
            L0x20019894_f * (x**38) + L0x20019896_f * (x**39) + 
            L0x20019898_f * (x**40) + L0x2001989a_f * (x**41) + 
            L0x2001989c_f * (x**42) + L0x2001989e_f * (x**43) + 
            L0x200198a0_f * (x**44) + L0x200198a2_f * (x**45) + 
            L0x200198a4_f * (x**46) + L0x200198a6_f * (x**47) + 
            L0x200198a8_f * (x**48) + L0x200198aa_f * (x**49) + 
            L0x200198ac_f * (x**50) + L0x200198ae_f * (x**51) + 
            L0x200198b0_f * (x**52) + L0x200198b2_f * (x**53) + 
            L0x200198b4_f * (x**54) + L0x200198b6_f * (x**55) + 
            L0x200198b8_f * (x**56) + L0x200198ba_f * (x**57) + 
            L0x200198bc_f * (x**58) + L0x200198be_f * (x**59) + 
            L0x200198c0_f * (x**60) + L0x200198c2_f * (x**61) + 
            L0x200198c4_f * (x**62) + L0x200198c6_f * (x**63) + 
            L0x200198c8_f * (x**64) + L0x200198ca_f * (x**65) + 
            L0x200198cc_f * (x**66) + L0x200198ce_f * (x**67) + 
            L0x200198d0_f * (x**68) + L0x200198d2_f * (x**69) + 
            L0x200198d4_f * (x**70) + L0x200198d6_f * (x**71) + 
            L0x200198d8_f * (x**72) + L0x200198da_f * (x**73) + 
            L0x200198dc_f * (x**74) + L0x200198de_f * (x**75) + 
            L0x200198e0_f * (x**76) + L0x200198e2_f * (x**77) + 
            L0x200198e4_f * (x**78) + L0x200198e6_f * (x**79) + 
            L0x200198e8_f * (x**80) + L0x200198ea_f * (x**81) + 
            L0x200198ec_f * (x**82) + L0x200198ee_f * (x**83) + 
            L0x200198f0_f * (x**84) + L0x200198f2_f * (x**85) + 
            L0x200198f4_f * (x**86) + L0x200198f6_f * (x**87) + 
            L0x200198f8_f * (x**88) + L0x200198fa_f * (x**89) + 
            L0x200198fc_f * (x**90) + L0x200198fe_f * (x**91) + 
            L0x20019900_f * (x**92) + L0x20019902_f * (x**93) + 
            L0x20019904_f * (x**94) + L0x20019906_f * (x**95) + 
            L0x20019908_f * (x**96) + L0x2001990a_f * (x**97) + 
            L0x2001990c_f * (x**98) + L0x2001990e_f * (x**99) + 
            L0x20019910_f * (x**100) + L0x20019912_f * (x**101) + 
            L0x20019914_f * (x**102) + L0x20019916_f * (x**103) + 
            L0x20019918_f * (x**104) + L0x2001991a_f * (x**105) + 
            L0x2001991c_f * (x**106) + L0x2001991e_f * (x**107) + 
            L0x20019920_f * (x**108) + L0x20019922_f * (x**109) + 
            L0x20019924_f * (x**110) + L0x20019926_f * (x**111) + 
            L0x20019928_f * (x**112) + L0x2001992a_f * (x**113) + 
            L0x2001992c_f * (x**114) + L0x2001992e_f * (x**115) + 
            L0x20019930_f * (x**116) + L0x20019932_f * (x**117) + 
            L0x20019934_f * (x**118) + L0x20019936_f * (x**119) + 
            L0x20019938_f * (x**120) + L0x2001993a_f * (x**121) + 
            L0x2001993c_f * (x**122) + L0x2001993e_f * (x**123) + 
            L0x20019940_f * (x**124) + L0x20019942_f * (x**125) + 
            L0x20019944_f * (x**126) + L0x20019946_f * (x**127) + 
            L0x20019948_f * (x**128) + L0x2001994a_f * (x**129) + 
            L0x2001994c_f * (x**130) + L0x2001994e_f * (x**131) + 
            L0x20019950_f * (x**132) + L0x20019952_f * (x**133) + 
            L0x20019954_f * (x**134) + L0x20019956_f * (x**135) + 
            L0x20019958_f * (x**136) + L0x2001995a_f * (x**137) + 
            L0x2001995c_f * (x**138) + L0x2001995e_f * (x**139) + 
            L0x20019960_f * (x**140) + L0x20019962_f * (x**141) + 
            L0x20019964_f * (x**142) + L0x20019966_f * (x**143) + 
            L0x20019968_f * (x**144) + L0x2001996a_f * (x**145) + 
            L0x2001996c_f * (x**146) + L0x2001996e_f * (x**147) + 
            L0x20019970_f * (x**148) + L0x20019972_f * (x**149) + 
            L0x20019974_f * (x**150) + L0x20019976_f * (x**151) + 
            L0x20019978_f * (x**152) + L0x2001997a_f * (x**153) + 
            L0x2001997c_f * (x**154) + L0x2001997e_f * (x**155) + 
            L0x20019980_f * (x**156) + L0x20019982_f * (x**157) + 
            L0x20019984_f * (x**158) + L0x20019986_f * (x**159) + 
            L0x20019988_f * (x**160) + L0x2001998a_f * (x**161) + 
            L0x2001998c_f * (x**162) + L0x2001998e_f * (x**163) + 
            L0x20019990_f * (x**164) + L0x20019992_f * (x**165) + 
            L0x20019994_f * (x**166) + L0x20019996_f * (x**167) + 
            L0x20019998_f * (x**168) + L0x2001999a_f * (x**169) + 
            L0x2001999c_f * (x**170) + L0x2001999e_f * (x**171) + 
            L0x200199a0_f * (x**172) + L0x200199a2_f * (x**173) + 
            L0x200199a4_f * (x**174) + L0x200199a6_f * (x**175) + 
            L0x200199a8_f * (x**176) + L0x200199aa_f * (x**177) + 
            L0x200199ac_f * (x**178) + L0x200199ae_f * (x**179) + 
            L0x200199b0_f * (x**180) + L0x200199b2_f * (x**181) + 
            L0x200199b4_f * (x**182) + L0x200199b6_f * (x**183) + 
            L0x200199b8_f * (x**184) + L0x200199ba_f * (x**185) + 
            L0x200199bc_f * (x**186) + L0x200199be_f * (x**187) + 
            L0x200199c0_f * (x**188) + L0x200199c2_f * (x**189) + 
            L0x200199c4_f * (x**190) + L0x200199c6_f * (x**191) + 
            L0x200199c8_f * (x**192) + L0x200199ca_f * (x**193) + 
            L0x200199cc_f * (x**194) + L0x200199ce_f * (x**195) + 
            L0x200199d0_f * (x**196) + L0x200199d2_f * (x**197) + 
            L0x200199d4_f * (x**198) + L0x200199d6_f * (x**199) + 
            L0x200199d8_f * (x**200) + L0x200199da_f * (x**201) + 
            L0x200199dc_f * (x**202) + L0x200199de_f * (x**203) + 
            L0x200199e0_f * (x**204) + L0x200199e2_f * (x**205) + 
            L0x200199e4_f * (x**206) + L0x200199e6_f * (x**207) + 
            L0x200199e8_f * (x**208) + L0x200199ea_f * (x**209) + 
            L0x200199ec_f * (x**210) + L0x200199ee_f * (x**211) + 
            L0x200199f0_f * (x**212) + L0x200199f2_f * (x**213) + 
            L0x200199f4_f * (x**214) + L0x200199f6_f * (x**215) + 
            L0x200199f8_f * (x**216) + L0x200199fa_f * (x**217) + 
            L0x200199fc_f * (x**218) + L0x200199fe_f * (x**219) + 
            L0x20019a00_f * (x**220) + L0x20019a02_f * (x**221) + 
            L0x20019a04_f * (x**222) + L0x20019a06_f * (x**223) + 
            L0x20019a08_f * (x**224) + L0x20019a0a_f * (x**225) + 
            L0x20019a0c_f * (x**226) + L0x20019a0e_f * (x**227) + 
            L0x20019a10_f * (x**228) + L0x20019a12_f * (x**229) + 
            L0x20019a14_f * (x**230) + L0x20019a16_f * (x**231) + 
            L0x20019a18_f * (x**232) + L0x20019a1a_f * (x**233) + 
            L0x20019a1c_f * (x**234) + L0x20019a1e_f * (x**235) + 
            L0x20019a20_f * (x**236) + L0x20019a22_f * (x**237) + 
            L0x20019a24_f * (x**238) + L0x20019a26_f * (x**239) + 
            L0x20019a28_f * (x**240) + L0x20019a2a_f * (x**241) + 
            L0x20019a2c_f * (x**242) + L0x20019a2e_f * (x**243) + 
            L0x20019a30_f * (x**244) + L0x20019a32_f * (x**245) + 
            L0x20019a34_f * (x**246) + L0x20019a36_f * (x**247) + 
            L0x20019a38_f * (x**248) + L0x20019a3a_f * (x**249) + 
            L0x20019a3c_f * (x**250) + L0x20019a3e_f * (x**251) + 
            L0x20019a40_f * (x**252) + L0x20019a42_f * (x**253) + 
            L0x20019a44_f * (x**254) + L0x20019a46_f * (x**255)
          )
          [25570049, x**4 - 21942877],
    (* inp_poly_52 *)
    eqmod (2**32) * (inp_poly_52 * inp_poly_52)
          (
            L0x20019848_f * (x**0) + L0x2001984a_f * (x**1) + 
            L0x2001984c_f * (x**2) + L0x2001984e_f * (x**3) + 
            L0x20019850_f * (x**4) + L0x20019852_f * (x**5) + 
            L0x20019854_f * (x**6) + L0x20019856_f * (x**7) + 
            L0x20019858_f * (x**8) + L0x2001985a_f * (x**9) + 
            L0x2001985c_f * (x**10) + L0x2001985e_f * (x**11) + 
            L0x20019860_f * (x**12) + L0x20019862_f * (x**13) + 
            L0x20019864_f * (x**14) + L0x20019866_f * (x**15) + 
            L0x20019868_f * (x**16) + L0x2001986a_f * (x**17) + 
            L0x2001986c_f * (x**18) + L0x2001986e_f * (x**19) + 
            L0x20019870_f * (x**20) + L0x20019872_f * (x**21) + 
            L0x20019874_f * (x**22) + L0x20019876_f * (x**23) + 
            L0x20019878_f * (x**24) + L0x2001987a_f * (x**25) + 
            L0x2001987c_f * (x**26) + L0x2001987e_f * (x**27) + 
            L0x20019880_f * (x**28) + L0x20019882_f * (x**29) + 
            L0x20019884_f * (x**30) + L0x20019886_f * (x**31) + 
            L0x20019888_f * (x**32) + L0x2001988a_f * (x**33) + 
            L0x2001988c_f * (x**34) + L0x2001988e_f * (x**35) + 
            L0x20019890_f * (x**36) + L0x20019892_f * (x**37) + 
            L0x20019894_f * (x**38) + L0x20019896_f * (x**39) + 
            L0x20019898_f * (x**40) + L0x2001989a_f * (x**41) + 
            L0x2001989c_f * (x**42) + L0x2001989e_f * (x**43) + 
            L0x200198a0_f * (x**44) + L0x200198a2_f * (x**45) + 
            L0x200198a4_f * (x**46) + L0x200198a6_f * (x**47) + 
            L0x200198a8_f * (x**48) + L0x200198aa_f * (x**49) + 
            L0x200198ac_f * (x**50) + L0x200198ae_f * (x**51) + 
            L0x200198b0_f * (x**52) + L0x200198b2_f * (x**53) + 
            L0x200198b4_f * (x**54) + L0x200198b6_f * (x**55) + 
            L0x200198b8_f * (x**56) + L0x200198ba_f * (x**57) + 
            L0x200198bc_f * (x**58) + L0x200198be_f * (x**59) + 
            L0x200198c0_f * (x**60) + L0x200198c2_f * (x**61) + 
            L0x200198c4_f * (x**62) + L0x200198c6_f * (x**63) + 
            L0x200198c8_f * (x**64) + L0x200198ca_f * (x**65) + 
            L0x200198cc_f * (x**66) + L0x200198ce_f * (x**67) + 
            L0x200198d0_f * (x**68) + L0x200198d2_f * (x**69) + 
            L0x200198d4_f * (x**70) + L0x200198d6_f * (x**71) + 
            L0x200198d8_f * (x**72) + L0x200198da_f * (x**73) + 
            L0x200198dc_f * (x**74) + L0x200198de_f * (x**75) + 
            L0x200198e0_f * (x**76) + L0x200198e2_f * (x**77) + 
            L0x200198e4_f * (x**78) + L0x200198e6_f * (x**79) + 
            L0x200198e8_f * (x**80) + L0x200198ea_f * (x**81) + 
            L0x200198ec_f * (x**82) + L0x200198ee_f * (x**83) + 
            L0x200198f0_f * (x**84) + L0x200198f2_f * (x**85) + 
            L0x200198f4_f * (x**86) + L0x200198f6_f * (x**87) + 
            L0x200198f8_f * (x**88) + L0x200198fa_f * (x**89) + 
            L0x200198fc_f * (x**90) + L0x200198fe_f * (x**91) + 
            L0x20019900_f * (x**92) + L0x20019902_f * (x**93) + 
            L0x20019904_f * (x**94) + L0x20019906_f * (x**95) + 
            L0x20019908_f * (x**96) + L0x2001990a_f * (x**97) + 
            L0x2001990c_f * (x**98) + L0x2001990e_f * (x**99) + 
            L0x20019910_f * (x**100) + L0x20019912_f * (x**101) + 
            L0x20019914_f * (x**102) + L0x20019916_f * (x**103) + 
            L0x20019918_f * (x**104) + L0x2001991a_f * (x**105) + 
            L0x2001991c_f * (x**106) + L0x2001991e_f * (x**107) + 
            L0x20019920_f * (x**108) + L0x20019922_f * (x**109) + 
            L0x20019924_f * (x**110) + L0x20019926_f * (x**111) + 
            L0x20019928_f * (x**112) + L0x2001992a_f * (x**113) + 
            L0x2001992c_f * (x**114) + L0x2001992e_f * (x**115) + 
            L0x20019930_f * (x**116) + L0x20019932_f * (x**117) + 
            L0x20019934_f * (x**118) + L0x20019936_f * (x**119) + 
            L0x20019938_f * (x**120) + L0x2001993a_f * (x**121) + 
            L0x2001993c_f * (x**122) + L0x2001993e_f * (x**123) + 
            L0x20019940_f * (x**124) + L0x20019942_f * (x**125) + 
            L0x20019944_f * (x**126) + L0x20019946_f * (x**127) + 
            L0x20019948_f * (x**128) + L0x2001994a_f * (x**129) + 
            L0x2001994c_f * (x**130) + L0x2001994e_f * (x**131) + 
            L0x20019950_f * (x**132) + L0x20019952_f * (x**133) + 
            L0x20019954_f * (x**134) + L0x20019956_f * (x**135) + 
            L0x20019958_f * (x**136) + L0x2001995a_f * (x**137) + 
            L0x2001995c_f * (x**138) + L0x2001995e_f * (x**139) + 
            L0x20019960_f * (x**140) + L0x20019962_f * (x**141) + 
            L0x20019964_f * (x**142) + L0x20019966_f * (x**143) + 
            L0x20019968_f * (x**144) + L0x2001996a_f * (x**145) + 
            L0x2001996c_f * (x**146) + L0x2001996e_f * (x**147) + 
            L0x20019970_f * (x**148) + L0x20019972_f * (x**149) + 
            L0x20019974_f * (x**150) + L0x20019976_f * (x**151) + 
            L0x20019978_f * (x**152) + L0x2001997a_f * (x**153) + 
            L0x2001997c_f * (x**154) + L0x2001997e_f * (x**155) + 
            L0x20019980_f * (x**156) + L0x20019982_f * (x**157) + 
            L0x20019984_f * (x**158) + L0x20019986_f * (x**159) + 
            L0x20019988_f * (x**160) + L0x2001998a_f * (x**161) + 
            L0x2001998c_f * (x**162) + L0x2001998e_f * (x**163) + 
            L0x20019990_f * (x**164) + L0x20019992_f * (x**165) + 
            L0x20019994_f * (x**166) + L0x20019996_f * (x**167) + 
            L0x20019998_f * (x**168) + L0x2001999a_f * (x**169) + 
            L0x2001999c_f * (x**170) + L0x2001999e_f * (x**171) + 
            L0x200199a0_f * (x**172) + L0x200199a2_f * (x**173) + 
            L0x200199a4_f * (x**174) + L0x200199a6_f * (x**175) + 
            L0x200199a8_f * (x**176) + L0x200199aa_f * (x**177) + 
            L0x200199ac_f * (x**178) + L0x200199ae_f * (x**179) + 
            L0x200199b0_f * (x**180) + L0x200199b2_f * (x**181) + 
            L0x200199b4_f * (x**182) + L0x200199b6_f * (x**183) + 
            L0x200199b8_f * (x**184) + L0x200199ba_f * (x**185) + 
            L0x200199bc_f * (x**186) + L0x200199be_f * (x**187) + 
            L0x200199c0_f * (x**188) + L0x200199c2_f * (x**189) + 
            L0x200199c4_f * (x**190) + L0x200199c6_f * (x**191) + 
            L0x200199c8_f * (x**192) + L0x200199ca_f * (x**193) + 
            L0x200199cc_f * (x**194) + L0x200199ce_f * (x**195) + 
            L0x200199d0_f * (x**196) + L0x200199d2_f * (x**197) + 
            L0x200199d4_f * (x**198) + L0x200199d6_f * (x**199) + 
            L0x200199d8_f * (x**200) + L0x200199da_f * (x**201) + 
            L0x200199dc_f * (x**202) + L0x200199de_f * (x**203) + 
            L0x200199e0_f * (x**204) + L0x200199e2_f * (x**205) + 
            L0x200199e4_f * (x**206) + L0x200199e6_f * (x**207) + 
            L0x200199e8_f * (x**208) + L0x200199ea_f * (x**209) + 
            L0x200199ec_f * (x**210) + L0x200199ee_f * (x**211) + 
            L0x200199f0_f * (x**212) + L0x200199f2_f * (x**213) + 
            L0x200199f4_f * (x**214) + L0x200199f6_f * (x**215) + 
            L0x200199f8_f * (x**216) + L0x200199fa_f * (x**217) + 
            L0x200199fc_f * (x**218) + L0x200199fe_f * (x**219) + 
            L0x20019a00_f * (x**220) + L0x20019a02_f * (x**221) + 
            L0x20019a04_f * (x**222) + L0x20019a06_f * (x**223) + 
            L0x20019a08_f * (x**224) + L0x20019a0a_f * (x**225) + 
            L0x20019a0c_f * (x**226) + L0x20019a0e_f * (x**227) + 
            L0x20019a10_f * (x**228) + L0x20019a12_f * (x**229) + 
            L0x20019a14_f * (x**230) + L0x20019a16_f * (x**231) + 
            L0x20019a18_f * (x**232) + L0x20019a1a_f * (x**233) + 
            L0x20019a1c_f * (x**234) + L0x20019a1e_f * (x**235) + 
            L0x20019a20_f * (x**236) + L0x20019a22_f * (x**237) + 
            L0x20019a24_f * (x**238) + L0x20019a26_f * (x**239) + 
            L0x20019a28_f * (x**240) + L0x20019a2a_f * (x**241) + 
            L0x20019a2c_f * (x**242) + L0x20019a2e_f * (x**243) + 
            L0x20019a30_f * (x**244) + L0x20019a32_f * (x**245) + 
            L0x20019a34_f * (x**246) + L0x20019a36_f * (x**247) + 
            L0x20019a38_f * (x**248) + L0x20019a3a_f * (x**249) + 
            L0x20019a3c_f * (x**250) + L0x20019a3e_f * (x**251) + 
            L0x20019a40_f * (x**252) + L0x20019a42_f * (x**253) + 
            L0x20019a44_f * (x**254) + L0x20019a46_f * (x**255)
          )
          [25570049, x**4 - 4002385],
    (* inp_poly_53 *)
    eqmod (2**32) * (inp_poly_53 * inp_poly_53)
          (
            L0x20019848_f * (x**0) + L0x2001984a_f * (x**1) + 
            L0x2001984c_f * (x**2) + L0x2001984e_f * (x**3) + 
            L0x20019850_f * (x**4) + L0x20019852_f * (x**5) + 
            L0x20019854_f * (x**6) + L0x20019856_f * (x**7) + 
            L0x20019858_f * (x**8) + L0x2001985a_f * (x**9) + 
            L0x2001985c_f * (x**10) + L0x2001985e_f * (x**11) + 
            L0x20019860_f * (x**12) + L0x20019862_f * (x**13) + 
            L0x20019864_f * (x**14) + L0x20019866_f * (x**15) + 
            L0x20019868_f * (x**16) + L0x2001986a_f * (x**17) + 
            L0x2001986c_f * (x**18) + L0x2001986e_f * (x**19) + 
            L0x20019870_f * (x**20) + L0x20019872_f * (x**21) + 
            L0x20019874_f * (x**22) + L0x20019876_f * (x**23) + 
            L0x20019878_f * (x**24) + L0x2001987a_f * (x**25) + 
            L0x2001987c_f * (x**26) + L0x2001987e_f * (x**27) + 
            L0x20019880_f * (x**28) + L0x20019882_f * (x**29) + 
            L0x20019884_f * (x**30) + L0x20019886_f * (x**31) + 
            L0x20019888_f * (x**32) + L0x2001988a_f * (x**33) + 
            L0x2001988c_f * (x**34) + L0x2001988e_f * (x**35) + 
            L0x20019890_f * (x**36) + L0x20019892_f * (x**37) + 
            L0x20019894_f * (x**38) + L0x20019896_f * (x**39) + 
            L0x20019898_f * (x**40) + L0x2001989a_f * (x**41) + 
            L0x2001989c_f * (x**42) + L0x2001989e_f * (x**43) + 
            L0x200198a0_f * (x**44) + L0x200198a2_f * (x**45) + 
            L0x200198a4_f * (x**46) + L0x200198a6_f * (x**47) + 
            L0x200198a8_f * (x**48) + L0x200198aa_f * (x**49) + 
            L0x200198ac_f * (x**50) + L0x200198ae_f * (x**51) + 
            L0x200198b0_f * (x**52) + L0x200198b2_f * (x**53) + 
            L0x200198b4_f * (x**54) + L0x200198b6_f * (x**55) + 
            L0x200198b8_f * (x**56) + L0x200198ba_f * (x**57) + 
            L0x200198bc_f * (x**58) + L0x200198be_f * (x**59) + 
            L0x200198c0_f * (x**60) + L0x200198c2_f * (x**61) + 
            L0x200198c4_f * (x**62) + L0x200198c6_f * (x**63) + 
            L0x200198c8_f * (x**64) + L0x200198ca_f * (x**65) + 
            L0x200198cc_f * (x**66) + L0x200198ce_f * (x**67) + 
            L0x200198d0_f * (x**68) + L0x200198d2_f * (x**69) + 
            L0x200198d4_f * (x**70) + L0x200198d6_f * (x**71) + 
            L0x200198d8_f * (x**72) + L0x200198da_f * (x**73) + 
            L0x200198dc_f * (x**74) + L0x200198de_f * (x**75) + 
            L0x200198e0_f * (x**76) + L0x200198e2_f * (x**77) + 
            L0x200198e4_f * (x**78) + L0x200198e6_f * (x**79) + 
            L0x200198e8_f * (x**80) + L0x200198ea_f * (x**81) + 
            L0x200198ec_f * (x**82) + L0x200198ee_f * (x**83) + 
            L0x200198f0_f * (x**84) + L0x200198f2_f * (x**85) + 
            L0x200198f4_f * (x**86) + L0x200198f6_f * (x**87) + 
            L0x200198f8_f * (x**88) + L0x200198fa_f * (x**89) + 
            L0x200198fc_f * (x**90) + L0x200198fe_f * (x**91) + 
            L0x20019900_f * (x**92) + L0x20019902_f * (x**93) + 
            L0x20019904_f * (x**94) + L0x20019906_f * (x**95) + 
            L0x20019908_f * (x**96) + L0x2001990a_f * (x**97) + 
            L0x2001990c_f * (x**98) + L0x2001990e_f * (x**99) + 
            L0x20019910_f * (x**100) + L0x20019912_f * (x**101) + 
            L0x20019914_f * (x**102) + L0x20019916_f * (x**103) + 
            L0x20019918_f * (x**104) + L0x2001991a_f * (x**105) + 
            L0x2001991c_f * (x**106) + L0x2001991e_f * (x**107) + 
            L0x20019920_f * (x**108) + L0x20019922_f * (x**109) + 
            L0x20019924_f * (x**110) + L0x20019926_f * (x**111) + 
            L0x20019928_f * (x**112) + L0x2001992a_f * (x**113) + 
            L0x2001992c_f * (x**114) + L0x2001992e_f * (x**115) + 
            L0x20019930_f * (x**116) + L0x20019932_f * (x**117) + 
            L0x20019934_f * (x**118) + L0x20019936_f * (x**119) + 
            L0x20019938_f * (x**120) + L0x2001993a_f * (x**121) + 
            L0x2001993c_f * (x**122) + L0x2001993e_f * (x**123) + 
            L0x20019940_f * (x**124) + L0x20019942_f * (x**125) + 
            L0x20019944_f * (x**126) + L0x20019946_f * (x**127) + 
            L0x20019948_f * (x**128) + L0x2001994a_f * (x**129) + 
            L0x2001994c_f * (x**130) + L0x2001994e_f * (x**131) + 
            L0x20019950_f * (x**132) + L0x20019952_f * (x**133) + 
            L0x20019954_f * (x**134) + L0x20019956_f * (x**135) + 
            L0x20019958_f * (x**136) + L0x2001995a_f * (x**137) + 
            L0x2001995c_f * (x**138) + L0x2001995e_f * (x**139) + 
            L0x20019960_f * (x**140) + L0x20019962_f * (x**141) + 
            L0x20019964_f * (x**142) + L0x20019966_f * (x**143) + 
            L0x20019968_f * (x**144) + L0x2001996a_f * (x**145) + 
            L0x2001996c_f * (x**146) + L0x2001996e_f * (x**147) + 
            L0x20019970_f * (x**148) + L0x20019972_f * (x**149) + 
            L0x20019974_f * (x**150) + L0x20019976_f * (x**151) + 
            L0x20019978_f * (x**152) + L0x2001997a_f * (x**153) + 
            L0x2001997c_f * (x**154) + L0x2001997e_f * (x**155) + 
            L0x20019980_f * (x**156) + L0x20019982_f * (x**157) + 
            L0x20019984_f * (x**158) + L0x20019986_f * (x**159) + 
            L0x20019988_f * (x**160) + L0x2001998a_f * (x**161) + 
            L0x2001998c_f * (x**162) + L0x2001998e_f * (x**163) + 
            L0x20019990_f * (x**164) + L0x20019992_f * (x**165) + 
            L0x20019994_f * (x**166) + L0x20019996_f * (x**167) + 
            L0x20019998_f * (x**168) + L0x2001999a_f * (x**169) + 
            L0x2001999c_f * (x**170) + L0x2001999e_f * (x**171) + 
            L0x200199a0_f * (x**172) + L0x200199a2_f * (x**173) + 
            L0x200199a4_f * (x**174) + L0x200199a6_f * (x**175) + 
            L0x200199a8_f * (x**176) + L0x200199aa_f * (x**177) + 
            L0x200199ac_f * (x**178) + L0x200199ae_f * (x**179) + 
            L0x200199b0_f * (x**180) + L0x200199b2_f * (x**181) + 
            L0x200199b4_f * (x**182) + L0x200199b6_f * (x**183) + 
            L0x200199b8_f * (x**184) + L0x200199ba_f * (x**185) + 
            L0x200199bc_f * (x**186) + L0x200199be_f * (x**187) + 
            L0x200199c0_f * (x**188) + L0x200199c2_f * (x**189) + 
            L0x200199c4_f * (x**190) + L0x200199c6_f * (x**191) + 
            L0x200199c8_f * (x**192) + L0x200199ca_f * (x**193) + 
            L0x200199cc_f * (x**194) + L0x200199ce_f * (x**195) + 
            L0x200199d0_f * (x**196) + L0x200199d2_f * (x**197) + 
            L0x200199d4_f * (x**198) + L0x200199d6_f * (x**199) + 
            L0x200199d8_f * (x**200) + L0x200199da_f * (x**201) + 
            L0x200199dc_f * (x**202) + L0x200199de_f * (x**203) + 
            L0x200199e0_f * (x**204) + L0x200199e2_f * (x**205) + 
            L0x200199e4_f * (x**206) + L0x200199e6_f * (x**207) + 
            L0x200199e8_f * (x**208) + L0x200199ea_f * (x**209) + 
            L0x200199ec_f * (x**210) + L0x200199ee_f * (x**211) + 
            L0x200199f0_f * (x**212) + L0x200199f2_f * (x**213) + 
            L0x200199f4_f * (x**214) + L0x200199f6_f * (x**215) + 
            L0x200199f8_f * (x**216) + L0x200199fa_f * (x**217) + 
            L0x200199fc_f * (x**218) + L0x200199fe_f * (x**219) + 
            L0x20019a00_f * (x**220) + L0x20019a02_f * (x**221) + 
            L0x20019a04_f * (x**222) + L0x20019a06_f * (x**223) + 
            L0x20019a08_f * (x**224) + L0x20019a0a_f * (x**225) + 
            L0x20019a0c_f * (x**226) + L0x20019a0e_f * (x**227) + 
            L0x20019a10_f * (x**228) + L0x20019a12_f * (x**229) + 
            L0x20019a14_f * (x**230) + L0x20019a16_f * (x**231) + 
            L0x20019a18_f * (x**232) + L0x20019a1a_f * (x**233) + 
            L0x20019a1c_f * (x**234) + L0x20019a1e_f * (x**235) + 
            L0x20019a20_f * (x**236) + L0x20019a22_f * (x**237) + 
            L0x20019a24_f * (x**238) + L0x20019a26_f * (x**239) + 
            L0x20019a28_f * (x**240) + L0x20019a2a_f * (x**241) + 
            L0x20019a2c_f * (x**242) + L0x20019a2e_f * (x**243) + 
            L0x20019a30_f * (x**244) + L0x20019a32_f * (x**245) + 
            L0x20019a34_f * (x**246) + L0x20019a36_f * (x**247) + 
            L0x20019a38_f * (x**248) + L0x20019a3a_f * (x**249) + 
            L0x20019a3c_f * (x**250) + L0x20019a3e_f * (x**251) + 
            L0x20019a40_f * (x**252) + L0x20019a42_f * (x**253) + 
            L0x20019a44_f * (x**254) + L0x20019a46_f * (x**255)
          )
          [25570049, x**4 - 21567664],
    (* inp_poly_54 *)
    eqmod (2**32) * (inp_poly_54 * inp_poly_54)
          (
            L0x20019848_f * (x**0) + L0x2001984a_f * (x**1) + 
            L0x2001984c_f * (x**2) + L0x2001984e_f * (x**3) + 
            L0x20019850_f * (x**4) + L0x20019852_f * (x**5) + 
            L0x20019854_f * (x**6) + L0x20019856_f * (x**7) + 
            L0x20019858_f * (x**8) + L0x2001985a_f * (x**9) + 
            L0x2001985c_f * (x**10) + L0x2001985e_f * (x**11) + 
            L0x20019860_f * (x**12) + L0x20019862_f * (x**13) + 
            L0x20019864_f * (x**14) + L0x20019866_f * (x**15) + 
            L0x20019868_f * (x**16) + L0x2001986a_f * (x**17) + 
            L0x2001986c_f * (x**18) + L0x2001986e_f * (x**19) + 
            L0x20019870_f * (x**20) + L0x20019872_f * (x**21) + 
            L0x20019874_f * (x**22) + L0x20019876_f * (x**23) + 
            L0x20019878_f * (x**24) + L0x2001987a_f * (x**25) + 
            L0x2001987c_f * (x**26) + L0x2001987e_f * (x**27) + 
            L0x20019880_f * (x**28) + L0x20019882_f * (x**29) + 
            L0x20019884_f * (x**30) + L0x20019886_f * (x**31) + 
            L0x20019888_f * (x**32) + L0x2001988a_f * (x**33) + 
            L0x2001988c_f * (x**34) + L0x2001988e_f * (x**35) + 
            L0x20019890_f * (x**36) + L0x20019892_f * (x**37) + 
            L0x20019894_f * (x**38) + L0x20019896_f * (x**39) + 
            L0x20019898_f * (x**40) + L0x2001989a_f * (x**41) + 
            L0x2001989c_f * (x**42) + L0x2001989e_f * (x**43) + 
            L0x200198a0_f * (x**44) + L0x200198a2_f * (x**45) + 
            L0x200198a4_f * (x**46) + L0x200198a6_f * (x**47) + 
            L0x200198a8_f * (x**48) + L0x200198aa_f * (x**49) + 
            L0x200198ac_f * (x**50) + L0x200198ae_f * (x**51) + 
            L0x200198b0_f * (x**52) + L0x200198b2_f * (x**53) + 
            L0x200198b4_f * (x**54) + L0x200198b6_f * (x**55) + 
            L0x200198b8_f * (x**56) + L0x200198ba_f * (x**57) + 
            L0x200198bc_f * (x**58) + L0x200198be_f * (x**59) + 
            L0x200198c0_f * (x**60) + L0x200198c2_f * (x**61) + 
            L0x200198c4_f * (x**62) + L0x200198c6_f * (x**63) + 
            L0x200198c8_f * (x**64) + L0x200198ca_f * (x**65) + 
            L0x200198cc_f * (x**66) + L0x200198ce_f * (x**67) + 
            L0x200198d0_f * (x**68) + L0x200198d2_f * (x**69) + 
            L0x200198d4_f * (x**70) + L0x200198d6_f * (x**71) + 
            L0x200198d8_f * (x**72) + L0x200198da_f * (x**73) + 
            L0x200198dc_f * (x**74) + L0x200198de_f * (x**75) + 
            L0x200198e0_f * (x**76) + L0x200198e2_f * (x**77) + 
            L0x200198e4_f * (x**78) + L0x200198e6_f * (x**79) + 
            L0x200198e8_f * (x**80) + L0x200198ea_f * (x**81) + 
            L0x200198ec_f * (x**82) + L0x200198ee_f * (x**83) + 
            L0x200198f0_f * (x**84) + L0x200198f2_f * (x**85) + 
            L0x200198f4_f * (x**86) + L0x200198f6_f * (x**87) + 
            L0x200198f8_f * (x**88) + L0x200198fa_f * (x**89) + 
            L0x200198fc_f * (x**90) + L0x200198fe_f * (x**91) + 
            L0x20019900_f * (x**92) + L0x20019902_f * (x**93) + 
            L0x20019904_f * (x**94) + L0x20019906_f * (x**95) + 
            L0x20019908_f * (x**96) + L0x2001990a_f * (x**97) + 
            L0x2001990c_f * (x**98) + L0x2001990e_f * (x**99) + 
            L0x20019910_f * (x**100) + L0x20019912_f * (x**101) + 
            L0x20019914_f * (x**102) + L0x20019916_f * (x**103) + 
            L0x20019918_f * (x**104) + L0x2001991a_f * (x**105) + 
            L0x2001991c_f * (x**106) + L0x2001991e_f * (x**107) + 
            L0x20019920_f * (x**108) + L0x20019922_f * (x**109) + 
            L0x20019924_f * (x**110) + L0x20019926_f * (x**111) + 
            L0x20019928_f * (x**112) + L0x2001992a_f * (x**113) + 
            L0x2001992c_f * (x**114) + L0x2001992e_f * (x**115) + 
            L0x20019930_f * (x**116) + L0x20019932_f * (x**117) + 
            L0x20019934_f * (x**118) + L0x20019936_f * (x**119) + 
            L0x20019938_f * (x**120) + L0x2001993a_f * (x**121) + 
            L0x2001993c_f * (x**122) + L0x2001993e_f * (x**123) + 
            L0x20019940_f * (x**124) + L0x20019942_f * (x**125) + 
            L0x20019944_f * (x**126) + L0x20019946_f * (x**127) + 
            L0x20019948_f * (x**128) + L0x2001994a_f * (x**129) + 
            L0x2001994c_f * (x**130) + L0x2001994e_f * (x**131) + 
            L0x20019950_f * (x**132) + L0x20019952_f * (x**133) + 
            L0x20019954_f * (x**134) + L0x20019956_f * (x**135) + 
            L0x20019958_f * (x**136) + L0x2001995a_f * (x**137) + 
            L0x2001995c_f * (x**138) + L0x2001995e_f * (x**139) + 
            L0x20019960_f * (x**140) + L0x20019962_f * (x**141) + 
            L0x20019964_f * (x**142) + L0x20019966_f * (x**143) + 
            L0x20019968_f * (x**144) + L0x2001996a_f * (x**145) + 
            L0x2001996c_f * (x**146) + L0x2001996e_f * (x**147) + 
            L0x20019970_f * (x**148) + L0x20019972_f * (x**149) + 
            L0x20019974_f * (x**150) + L0x20019976_f * (x**151) + 
            L0x20019978_f * (x**152) + L0x2001997a_f * (x**153) + 
            L0x2001997c_f * (x**154) + L0x2001997e_f * (x**155) + 
            L0x20019980_f * (x**156) + L0x20019982_f * (x**157) + 
            L0x20019984_f * (x**158) + L0x20019986_f * (x**159) + 
            L0x20019988_f * (x**160) + L0x2001998a_f * (x**161) + 
            L0x2001998c_f * (x**162) + L0x2001998e_f * (x**163) + 
            L0x20019990_f * (x**164) + L0x20019992_f * (x**165) + 
            L0x20019994_f * (x**166) + L0x20019996_f * (x**167) + 
            L0x20019998_f * (x**168) + L0x2001999a_f * (x**169) + 
            L0x2001999c_f * (x**170) + L0x2001999e_f * (x**171) + 
            L0x200199a0_f * (x**172) + L0x200199a2_f * (x**173) + 
            L0x200199a4_f * (x**174) + L0x200199a6_f * (x**175) + 
            L0x200199a8_f * (x**176) + L0x200199aa_f * (x**177) + 
            L0x200199ac_f * (x**178) + L0x200199ae_f * (x**179) + 
            L0x200199b0_f * (x**180) + L0x200199b2_f * (x**181) + 
            L0x200199b4_f * (x**182) + L0x200199b6_f * (x**183) + 
            L0x200199b8_f * (x**184) + L0x200199ba_f * (x**185) + 
            L0x200199bc_f * (x**186) + L0x200199be_f * (x**187) + 
            L0x200199c0_f * (x**188) + L0x200199c2_f * (x**189) + 
            L0x200199c4_f * (x**190) + L0x200199c6_f * (x**191) + 
            L0x200199c8_f * (x**192) + L0x200199ca_f * (x**193) + 
            L0x200199cc_f * (x**194) + L0x200199ce_f * (x**195) + 
            L0x200199d0_f * (x**196) + L0x200199d2_f * (x**197) + 
            L0x200199d4_f * (x**198) + L0x200199d6_f * (x**199) + 
            L0x200199d8_f * (x**200) + L0x200199da_f * (x**201) + 
            L0x200199dc_f * (x**202) + L0x200199de_f * (x**203) + 
            L0x200199e0_f * (x**204) + L0x200199e2_f * (x**205) + 
            L0x200199e4_f * (x**206) + L0x200199e6_f * (x**207) + 
            L0x200199e8_f * (x**208) + L0x200199ea_f * (x**209) + 
            L0x200199ec_f * (x**210) + L0x200199ee_f * (x**211) + 
            L0x200199f0_f * (x**212) + L0x200199f2_f * (x**213) + 
            L0x200199f4_f * (x**214) + L0x200199f6_f * (x**215) + 
            L0x200199f8_f * (x**216) + L0x200199fa_f * (x**217) + 
            L0x200199fc_f * (x**218) + L0x200199fe_f * (x**219) + 
            L0x20019a00_f * (x**220) + L0x20019a02_f * (x**221) + 
            L0x20019a04_f * (x**222) + L0x20019a06_f * (x**223) + 
            L0x20019a08_f * (x**224) + L0x20019a0a_f * (x**225) + 
            L0x20019a0c_f * (x**226) + L0x20019a0e_f * (x**227) + 
            L0x20019a10_f * (x**228) + L0x20019a12_f * (x**229) + 
            L0x20019a14_f * (x**230) + L0x20019a16_f * (x**231) + 
            L0x20019a18_f * (x**232) + L0x20019a1a_f * (x**233) + 
            L0x20019a1c_f * (x**234) + L0x20019a1e_f * (x**235) + 
            L0x20019a20_f * (x**236) + L0x20019a22_f * (x**237) + 
            L0x20019a24_f * (x**238) + L0x20019a26_f * (x**239) + 
            L0x20019a28_f * (x**240) + L0x20019a2a_f * (x**241) + 
            L0x20019a2c_f * (x**242) + L0x20019a2e_f * (x**243) + 
            L0x20019a30_f * (x**244) + L0x20019a32_f * (x**245) + 
            L0x20019a34_f * (x**246) + L0x20019a36_f * (x**247) + 
            L0x20019a38_f * (x**248) + L0x20019a3a_f * (x**249) + 
            L0x20019a3c_f * (x**250) + L0x20019a3e_f * (x**251) + 
            L0x20019a40_f * (x**252) + L0x20019a42_f * (x**253) + 
            L0x20019a44_f * (x**254) + L0x20019a46_f * (x**255)
          )
          [25570049, x**4 - 9845387],
    (* inp_poly_55 *)
    eqmod (2**32) * (inp_poly_55 * inp_poly_55)
          (
            L0x20019848_f * (x**0) + L0x2001984a_f * (x**1) + 
            L0x2001984c_f * (x**2) + L0x2001984e_f * (x**3) + 
            L0x20019850_f * (x**4) + L0x20019852_f * (x**5) + 
            L0x20019854_f * (x**6) + L0x20019856_f * (x**7) + 
            L0x20019858_f * (x**8) + L0x2001985a_f * (x**9) + 
            L0x2001985c_f * (x**10) + L0x2001985e_f * (x**11) + 
            L0x20019860_f * (x**12) + L0x20019862_f * (x**13) + 
            L0x20019864_f * (x**14) + L0x20019866_f * (x**15) + 
            L0x20019868_f * (x**16) + L0x2001986a_f * (x**17) + 
            L0x2001986c_f * (x**18) + L0x2001986e_f * (x**19) + 
            L0x20019870_f * (x**20) + L0x20019872_f * (x**21) + 
            L0x20019874_f * (x**22) + L0x20019876_f * (x**23) + 
            L0x20019878_f * (x**24) + L0x2001987a_f * (x**25) + 
            L0x2001987c_f * (x**26) + L0x2001987e_f * (x**27) + 
            L0x20019880_f * (x**28) + L0x20019882_f * (x**29) + 
            L0x20019884_f * (x**30) + L0x20019886_f * (x**31) + 
            L0x20019888_f * (x**32) + L0x2001988a_f * (x**33) + 
            L0x2001988c_f * (x**34) + L0x2001988e_f * (x**35) + 
            L0x20019890_f * (x**36) + L0x20019892_f * (x**37) + 
            L0x20019894_f * (x**38) + L0x20019896_f * (x**39) + 
            L0x20019898_f * (x**40) + L0x2001989a_f * (x**41) + 
            L0x2001989c_f * (x**42) + L0x2001989e_f * (x**43) + 
            L0x200198a0_f * (x**44) + L0x200198a2_f * (x**45) + 
            L0x200198a4_f * (x**46) + L0x200198a6_f * (x**47) + 
            L0x200198a8_f * (x**48) + L0x200198aa_f * (x**49) + 
            L0x200198ac_f * (x**50) + L0x200198ae_f * (x**51) + 
            L0x200198b0_f * (x**52) + L0x200198b2_f * (x**53) + 
            L0x200198b4_f * (x**54) + L0x200198b6_f * (x**55) + 
            L0x200198b8_f * (x**56) + L0x200198ba_f * (x**57) + 
            L0x200198bc_f * (x**58) + L0x200198be_f * (x**59) + 
            L0x200198c0_f * (x**60) + L0x200198c2_f * (x**61) + 
            L0x200198c4_f * (x**62) + L0x200198c6_f * (x**63) + 
            L0x200198c8_f * (x**64) + L0x200198ca_f * (x**65) + 
            L0x200198cc_f * (x**66) + L0x200198ce_f * (x**67) + 
            L0x200198d0_f * (x**68) + L0x200198d2_f * (x**69) + 
            L0x200198d4_f * (x**70) + L0x200198d6_f * (x**71) + 
            L0x200198d8_f * (x**72) + L0x200198da_f * (x**73) + 
            L0x200198dc_f * (x**74) + L0x200198de_f * (x**75) + 
            L0x200198e0_f * (x**76) + L0x200198e2_f * (x**77) + 
            L0x200198e4_f * (x**78) + L0x200198e6_f * (x**79) + 
            L0x200198e8_f * (x**80) + L0x200198ea_f * (x**81) + 
            L0x200198ec_f * (x**82) + L0x200198ee_f * (x**83) + 
            L0x200198f0_f * (x**84) + L0x200198f2_f * (x**85) + 
            L0x200198f4_f * (x**86) + L0x200198f6_f * (x**87) + 
            L0x200198f8_f * (x**88) + L0x200198fa_f * (x**89) + 
            L0x200198fc_f * (x**90) + L0x200198fe_f * (x**91) + 
            L0x20019900_f * (x**92) + L0x20019902_f * (x**93) + 
            L0x20019904_f * (x**94) + L0x20019906_f * (x**95) + 
            L0x20019908_f * (x**96) + L0x2001990a_f * (x**97) + 
            L0x2001990c_f * (x**98) + L0x2001990e_f * (x**99) + 
            L0x20019910_f * (x**100) + L0x20019912_f * (x**101) + 
            L0x20019914_f * (x**102) + L0x20019916_f * (x**103) + 
            L0x20019918_f * (x**104) + L0x2001991a_f * (x**105) + 
            L0x2001991c_f * (x**106) + L0x2001991e_f * (x**107) + 
            L0x20019920_f * (x**108) + L0x20019922_f * (x**109) + 
            L0x20019924_f * (x**110) + L0x20019926_f * (x**111) + 
            L0x20019928_f * (x**112) + L0x2001992a_f * (x**113) + 
            L0x2001992c_f * (x**114) + L0x2001992e_f * (x**115) + 
            L0x20019930_f * (x**116) + L0x20019932_f * (x**117) + 
            L0x20019934_f * (x**118) + L0x20019936_f * (x**119) + 
            L0x20019938_f * (x**120) + L0x2001993a_f * (x**121) + 
            L0x2001993c_f * (x**122) + L0x2001993e_f * (x**123) + 
            L0x20019940_f * (x**124) + L0x20019942_f * (x**125) + 
            L0x20019944_f * (x**126) + L0x20019946_f * (x**127) + 
            L0x20019948_f * (x**128) + L0x2001994a_f * (x**129) + 
            L0x2001994c_f * (x**130) + L0x2001994e_f * (x**131) + 
            L0x20019950_f * (x**132) + L0x20019952_f * (x**133) + 
            L0x20019954_f * (x**134) + L0x20019956_f * (x**135) + 
            L0x20019958_f * (x**136) + L0x2001995a_f * (x**137) + 
            L0x2001995c_f * (x**138) + L0x2001995e_f * (x**139) + 
            L0x20019960_f * (x**140) + L0x20019962_f * (x**141) + 
            L0x20019964_f * (x**142) + L0x20019966_f * (x**143) + 
            L0x20019968_f * (x**144) + L0x2001996a_f * (x**145) + 
            L0x2001996c_f * (x**146) + L0x2001996e_f * (x**147) + 
            L0x20019970_f * (x**148) + L0x20019972_f * (x**149) + 
            L0x20019974_f * (x**150) + L0x20019976_f * (x**151) + 
            L0x20019978_f * (x**152) + L0x2001997a_f * (x**153) + 
            L0x2001997c_f * (x**154) + L0x2001997e_f * (x**155) + 
            L0x20019980_f * (x**156) + L0x20019982_f * (x**157) + 
            L0x20019984_f * (x**158) + L0x20019986_f * (x**159) + 
            L0x20019988_f * (x**160) + L0x2001998a_f * (x**161) + 
            L0x2001998c_f * (x**162) + L0x2001998e_f * (x**163) + 
            L0x20019990_f * (x**164) + L0x20019992_f * (x**165) + 
            L0x20019994_f * (x**166) + L0x20019996_f * (x**167) + 
            L0x20019998_f * (x**168) + L0x2001999a_f * (x**169) + 
            L0x2001999c_f * (x**170) + L0x2001999e_f * (x**171) + 
            L0x200199a0_f * (x**172) + L0x200199a2_f * (x**173) + 
            L0x200199a4_f * (x**174) + L0x200199a6_f * (x**175) + 
            L0x200199a8_f * (x**176) + L0x200199aa_f * (x**177) + 
            L0x200199ac_f * (x**178) + L0x200199ae_f * (x**179) + 
            L0x200199b0_f * (x**180) + L0x200199b2_f * (x**181) + 
            L0x200199b4_f * (x**182) + L0x200199b6_f * (x**183) + 
            L0x200199b8_f * (x**184) + L0x200199ba_f * (x**185) + 
            L0x200199bc_f * (x**186) + L0x200199be_f * (x**187) + 
            L0x200199c0_f * (x**188) + L0x200199c2_f * (x**189) + 
            L0x200199c4_f * (x**190) + L0x200199c6_f * (x**191) + 
            L0x200199c8_f * (x**192) + L0x200199ca_f * (x**193) + 
            L0x200199cc_f * (x**194) + L0x200199ce_f * (x**195) + 
            L0x200199d0_f * (x**196) + L0x200199d2_f * (x**197) + 
            L0x200199d4_f * (x**198) + L0x200199d6_f * (x**199) + 
            L0x200199d8_f * (x**200) + L0x200199da_f * (x**201) + 
            L0x200199dc_f * (x**202) + L0x200199de_f * (x**203) + 
            L0x200199e0_f * (x**204) + L0x200199e2_f * (x**205) + 
            L0x200199e4_f * (x**206) + L0x200199e6_f * (x**207) + 
            L0x200199e8_f * (x**208) + L0x200199ea_f * (x**209) + 
            L0x200199ec_f * (x**210) + L0x200199ee_f * (x**211) + 
            L0x200199f0_f * (x**212) + L0x200199f2_f * (x**213) + 
            L0x200199f4_f * (x**214) + L0x200199f6_f * (x**215) + 
            L0x200199f8_f * (x**216) + L0x200199fa_f * (x**217) + 
            L0x200199fc_f * (x**218) + L0x200199fe_f * (x**219) + 
            L0x20019a00_f * (x**220) + L0x20019a02_f * (x**221) + 
            L0x20019a04_f * (x**222) + L0x20019a06_f * (x**223) + 
            L0x20019a08_f * (x**224) + L0x20019a0a_f * (x**225) + 
            L0x20019a0c_f * (x**226) + L0x20019a0e_f * (x**227) + 
            L0x20019a10_f * (x**228) + L0x20019a12_f * (x**229) + 
            L0x20019a14_f * (x**230) + L0x20019a16_f * (x**231) + 
            L0x20019a18_f * (x**232) + L0x20019a1a_f * (x**233) + 
            L0x20019a1c_f * (x**234) + L0x20019a1e_f * (x**235) + 
            L0x20019a20_f * (x**236) + L0x20019a22_f * (x**237) + 
            L0x20019a24_f * (x**238) + L0x20019a26_f * (x**239) + 
            L0x20019a28_f * (x**240) + L0x20019a2a_f * (x**241) + 
            L0x20019a2c_f * (x**242) + L0x20019a2e_f * (x**243) + 
            L0x20019a30_f * (x**244) + L0x20019a32_f * (x**245) + 
            L0x20019a34_f * (x**246) + L0x20019a36_f * (x**247) + 
            L0x20019a38_f * (x**248) + L0x20019a3a_f * (x**249) + 
            L0x20019a3c_f * (x**250) + L0x20019a3e_f * (x**251) + 
            L0x20019a40_f * (x**252) + L0x20019a42_f * (x**253) + 
            L0x20019a44_f * (x**254) + L0x20019a46_f * (x**255)
          )
          [25570049, x**4 - 15724662],
    (* inp_poly_56 *)
    eqmod (2**32) * (inp_poly_56 * inp_poly_56)
          (
            L0x20019848_f * (x**0) + L0x2001984a_f * (x**1) + 
            L0x2001984c_f * (x**2) + L0x2001984e_f * (x**3) + 
            L0x20019850_f * (x**4) + L0x20019852_f * (x**5) + 
            L0x20019854_f * (x**6) + L0x20019856_f * (x**7) + 
            L0x20019858_f * (x**8) + L0x2001985a_f * (x**9) + 
            L0x2001985c_f * (x**10) + L0x2001985e_f * (x**11) + 
            L0x20019860_f * (x**12) + L0x20019862_f * (x**13) + 
            L0x20019864_f * (x**14) + L0x20019866_f * (x**15) + 
            L0x20019868_f * (x**16) + L0x2001986a_f * (x**17) + 
            L0x2001986c_f * (x**18) + L0x2001986e_f * (x**19) + 
            L0x20019870_f * (x**20) + L0x20019872_f * (x**21) + 
            L0x20019874_f * (x**22) + L0x20019876_f * (x**23) + 
            L0x20019878_f * (x**24) + L0x2001987a_f * (x**25) + 
            L0x2001987c_f * (x**26) + L0x2001987e_f * (x**27) + 
            L0x20019880_f * (x**28) + L0x20019882_f * (x**29) + 
            L0x20019884_f * (x**30) + L0x20019886_f * (x**31) + 
            L0x20019888_f * (x**32) + L0x2001988a_f * (x**33) + 
            L0x2001988c_f * (x**34) + L0x2001988e_f * (x**35) + 
            L0x20019890_f * (x**36) + L0x20019892_f * (x**37) + 
            L0x20019894_f * (x**38) + L0x20019896_f * (x**39) + 
            L0x20019898_f * (x**40) + L0x2001989a_f * (x**41) + 
            L0x2001989c_f * (x**42) + L0x2001989e_f * (x**43) + 
            L0x200198a0_f * (x**44) + L0x200198a2_f * (x**45) + 
            L0x200198a4_f * (x**46) + L0x200198a6_f * (x**47) + 
            L0x200198a8_f * (x**48) + L0x200198aa_f * (x**49) + 
            L0x200198ac_f * (x**50) + L0x200198ae_f * (x**51) + 
            L0x200198b0_f * (x**52) + L0x200198b2_f * (x**53) + 
            L0x200198b4_f * (x**54) + L0x200198b6_f * (x**55) + 
            L0x200198b8_f * (x**56) + L0x200198ba_f * (x**57) + 
            L0x200198bc_f * (x**58) + L0x200198be_f * (x**59) + 
            L0x200198c0_f * (x**60) + L0x200198c2_f * (x**61) + 
            L0x200198c4_f * (x**62) + L0x200198c6_f * (x**63) + 
            L0x200198c8_f * (x**64) + L0x200198ca_f * (x**65) + 
            L0x200198cc_f * (x**66) + L0x200198ce_f * (x**67) + 
            L0x200198d0_f * (x**68) + L0x200198d2_f * (x**69) + 
            L0x200198d4_f * (x**70) + L0x200198d6_f * (x**71) + 
            L0x200198d8_f * (x**72) + L0x200198da_f * (x**73) + 
            L0x200198dc_f * (x**74) + L0x200198de_f * (x**75) + 
            L0x200198e0_f * (x**76) + L0x200198e2_f * (x**77) + 
            L0x200198e4_f * (x**78) + L0x200198e6_f * (x**79) + 
            L0x200198e8_f * (x**80) + L0x200198ea_f * (x**81) + 
            L0x200198ec_f * (x**82) + L0x200198ee_f * (x**83) + 
            L0x200198f0_f * (x**84) + L0x200198f2_f * (x**85) + 
            L0x200198f4_f * (x**86) + L0x200198f6_f * (x**87) + 
            L0x200198f8_f * (x**88) + L0x200198fa_f * (x**89) + 
            L0x200198fc_f * (x**90) + L0x200198fe_f * (x**91) + 
            L0x20019900_f * (x**92) + L0x20019902_f * (x**93) + 
            L0x20019904_f * (x**94) + L0x20019906_f * (x**95) + 
            L0x20019908_f * (x**96) + L0x2001990a_f * (x**97) + 
            L0x2001990c_f * (x**98) + L0x2001990e_f * (x**99) + 
            L0x20019910_f * (x**100) + L0x20019912_f * (x**101) + 
            L0x20019914_f * (x**102) + L0x20019916_f * (x**103) + 
            L0x20019918_f * (x**104) + L0x2001991a_f * (x**105) + 
            L0x2001991c_f * (x**106) + L0x2001991e_f * (x**107) + 
            L0x20019920_f * (x**108) + L0x20019922_f * (x**109) + 
            L0x20019924_f * (x**110) + L0x20019926_f * (x**111) + 
            L0x20019928_f * (x**112) + L0x2001992a_f * (x**113) + 
            L0x2001992c_f * (x**114) + L0x2001992e_f * (x**115) + 
            L0x20019930_f * (x**116) + L0x20019932_f * (x**117) + 
            L0x20019934_f * (x**118) + L0x20019936_f * (x**119) + 
            L0x20019938_f * (x**120) + L0x2001993a_f * (x**121) + 
            L0x2001993c_f * (x**122) + L0x2001993e_f * (x**123) + 
            L0x20019940_f * (x**124) + L0x20019942_f * (x**125) + 
            L0x20019944_f * (x**126) + L0x20019946_f * (x**127) + 
            L0x20019948_f * (x**128) + L0x2001994a_f * (x**129) + 
            L0x2001994c_f * (x**130) + L0x2001994e_f * (x**131) + 
            L0x20019950_f * (x**132) + L0x20019952_f * (x**133) + 
            L0x20019954_f * (x**134) + L0x20019956_f * (x**135) + 
            L0x20019958_f * (x**136) + L0x2001995a_f * (x**137) + 
            L0x2001995c_f * (x**138) + L0x2001995e_f * (x**139) + 
            L0x20019960_f * (x**140) + L0x20019962_f * (x**141) + 
            L0x20019964_f * (x**142) + L0x20019966_f * (x**143) + 
            L0x20019968_f * (x**144) + L0x2001996a_f * (x**145) + 
            L0x2001996c_f * (x**146) + L0x2001996e_f * (x**147) + 
            L0x20019970_f * (x**148) + L0x20019972_f * (x**149) + 
            L0x20019974_f * (x**150) + L0x20019976_f * (x**151) + 
            L0x20019978_f * (x**152) + L0x2001997a_f * (x**153) + 
            L0x2001997c_f * (x**154) + L0x2001997e_f * (x**155) + 
            L0x20019980_f * (x**156) + L0x20019982_f * (x**157) + 
            L0x20019984_f * (x**158) + L0x20019986_f * (x**159) + 
            L0x20019988_f * (x**160) + L0x2001998a_f * (x**161) + 
            L0x2001998c_f * (x**162) + L0x2001998e_f * (x**163) + 
            L0x20019990_f * (x**164) + L0x20019992_f * (x**165) + 
            L0x20019994_f * (x**166) + L0x20019996_f * (x**167) + 
            L0x20019998_f * (x**168) + L0x2001999a_f * (x**169) + 
            L0x2001999c_f * (x**170) + L0x2001999e_f * (x**171) + 
            L0x200199a0_f * (x**172) + L0x200199a2_f * (x**173) + 
            L0x200199a4_f * (x**174) + L0x200199a6_f * (x**175) + 
            L0x200199a8_f * (x**176) + L0x200199aa_f * (x**177) + 
            L0x200199ac_f * (x**178) + L0x200199ae_f * (x**179) + 
            L0x200199b0_f * (x**180) + L0x200199b2_f * (x**181) + 
            L0x200199b4_f * (x**182) + L0x200199b6_f * (x**183) + 
            L0x200199b8_f * (x**184) + L0x200199ba_f * (x**185) + 
            L0x200199bc_f * (x**186) + L0x200199be_f * (x**187) + 
            L0x200199c0_f * (x**188) + L0x200199c2_f * (x**189) + 
            L0x200199c4_f * (x**190) + L0x200199c6_f * (x**191) + 
            L0x200199c8_f * (x**192) + L0x200199ca_f * (x**193) + 
            L0x200199cc_f * (x**194) + L0x200199ce_f * (x**195) + 
            L0x200199d0_f * (x**196) + L0x200199d2_f * (x**197) + 
            L0x200199d4_f * (x**198) + L0x200199d6_f * (x**199) + 
            L0x200199d8_f * (x**200) + L0x200199da_f * (x**201) + 
            L0x200199dc_f * (x**202) + L0x200199de_f * (x**203) + 
            L0x200199e0_f * (x**204) + L0x200199e2_f * (x**205) + 
            L0x200199e4_f * (x**206) + L0x200199e6_f * (x**207) + 
            L0x200199e8_f * (x**208) + L0x200199ea_f * (x**209) + 
            L0x200199ec_f * (x**210) + L0x200199ee_f * (x**211) + 
            L0x200199f0_f * (x**212) + L0x200199f2_f * (x**213) + 
            L0x200199f4_f * (x**214) + L0x200199f6_f * (x**215) + 
            L0x200199f8_f * (x**216) + L0x200199fa_f * (x**217) + 
            L0x200199fc_f * (x**218) + L0x200199fe_f * (x**219) + 
            L0x20019a00_f * (x**220) + L0x20019a02_f * (x**221) + 
            L0x20019a04_f * (x**222) + L0x20019a06_f * (x**223) + 
            L0x20019a08_f * (x**224) + L0x20019a0a_f * (x**225) + 
            L0x20019a0c_f * (x**226) + L0x20019a0e_f * (x**227) + 
            L0x20019a10_f * (x**228) + L0x20019a12_f * (x**229) + 
            L0x20019a14_f * (x**230) + L0x20019a16_f * (x**231) + 
            L0x20019a18_f * (x**232) + L0x20019a1a_f * (x**233) + 
            L0x20019a1c_f * (x**234) + L0x20019a1e_f * (x**235) + 
            L0x20019a20_f * (x**236) + L0x20019a22_f * (x**237) + 
            L0x20019a24_f * (x**238) + L0x20019a26_f * (x**239) + 
            L0x20019a28_f * (x**240) + L0x20019a2a_f * (x**241) + 
            L0x20019a2c_f * (x**242) + L0x20019a2e_f * (x**243) + 
            L0x20019a30_f * (x**244) + L0x20019a32_f * (x**245) + 
            L0x20019a34_f * (x**246) + L0x20019a36_f * (x**247) + 
            L0x20019a38_f * (x**248) + L0x20019a3a_f * (x**249) + 
            L0x20019a3c_f * (x**250) + L0x20019a3e_f * (x**251) + 
            L0x20019a40_f * (x**252) + L0x20019a42_f * (x**253) + 
            L0x20019a44_f * (x**254) + L0x20019a46_f * (x**255)
          )
          [25570049, x**4 - 6096206],
    (* inp_poly_57 *)
    eqmod (2**32) * (inp_poly_57 * inp_poly_57)
          (
            L0x20019848_f * (x**0) + L0x2001984a_f * (x**1) + 
            L0x2001984c_f * (x**2) + L0x2001984e_f * (x**3) + 
            L0x20019850_f * (x**4) + L0x20019852_f * (x**5) + 
            L0x20019854_f * (x**6) + L0x20019856_f * (x**7) + 
            L0x20019858_f * (x**8) + L0x2001985a_f * (x**9) + 
            L0x2001985c_f * (x**10) + L0x2001985e_f * (x**11) + 
            L0x20019860_f * (x**12) + L0x20019862_f * (x**13) + 
            L0x20019864_f * (x**14) + L0x20019866_f * (x**15) + 
            L0x20019868_f * (x**16) + L0x2001986a_f * (x**17) + 
            L0x2001986c_f * (x**18) + L0x2001986e_f * (x**19) + 
            L0x20019870_f * (x**20) + L0x20019872_f * (x**21) + 
            L0x20019874_f * (x**22) + L0x20019876_f * (x**23) + 
            L0x20019878_f * (x**24) + L0x2001987a_f * (x**25) + 
            L0x2001987c_f * (x**26) + L0x2001987e_f * (x**27) + 
            L0x20019880_f * (x**28) + L0x20019882_f * (x**29) + 
            L0x20019884_f * (x**30) + L0x20019886_f * (x**31) + 
            L0x20019888_f * (x**32) + L0x2001988a_f * (x**33) + 
            L0x2001988c_f * (x**34) + L0x2001988e_f * (x**35) + 
            L0x20019890_f * (x**36) + L0x20019892_f * (x**37) + 
            L0x20019894_f * (x**38) + L0x20019896_f * (x**39) + 
            L0x20019898_f * (x**40) + L0x2001989a_f * (x**41) + 
            L0x2001989c_f * (x**42) + L0x2001989e_f * (x**43) + 
            L0x200198a0_f * (x**44) + L0x200198a2_f * (x**45) + 
            L0x200198a4_f * (x**46) + L0x200198a6_f * (x**47) + 
            L0x200198a8_f * (x**48) + L0x200198aa_f * (x**49) + 
            L0x200198ac_f * (x**50) + L0x200198ae_f * (x**51) + 
            L0x200198b0_f * (x**52) + L0x200198b2_f * (x**53) + 
            L0x200198b4_f * (x**54) + L0x200198b6_f * (x**55) + 
            L0x200198b8_f * (x**56) + L0x200198ba_f * (x**57) + 
            L0x200198bc_f * (x**58) + L0x200198be_f * (x**59) + 
            L0x200198c0_f * (x**60) + L0x200198c2_f * (x**61) + 
            L0x200198c4_f * (x**62) + L0x200198c6_f * (x**63) + 
            L0x200198c8_f * (x**64) + L0x200198ca_f * (x**65) + 
            L0x200198cc_f * (x**66) + L0x200198ce_f * (x**67) + 
            L0x200198d0_f * (x**68) + L0x200198d2_f * (x**69) + 
            L0x200198d4_f * (x**70) + L0x200198d6_f * (x**71) + 
            L0x200198d8_f * (x**72) + L0x200198da_f * (x**73) + 
            L0x200198dc_f * (x**74) + L0x200198de_f * (x**75) + 
            L0x200198e0_f * (x**76) + L0x200198e2_f * (x**77) + 
            L0x200198e4_f * (x**78) + L0x200198e6_f * (x**79) + 
            L0x200198e8_f * (x**80) + L0x200198ea_f * (x**81) + 
            L0x200198ec_f * (x**82) + L0x200198ee_f * (x**83) + 
            L0x200198f0_f * (x**84) + L0x200198f2_f * (x**85) + 
            L0x200198f4_f * (x**86) + L0x200198f6_f * (x**87) + 
            L0x200198f8_f * (x**88) + L0x200198fa_f * (x**89) + 
            L0x200198fc_f * (x**90) + L0x200198fe_f * (x**91) + 
            L0x20019900_f * (x**92) + L0x20019902_f * (x**93) + 
            L0x20019904_f * (x**94) + L0x20019906_f * (x**95) + 
            L0x20019908_f * (x**96) + L0x2001990a_f * (x**97) + 
            L0x2001990c_f * (x**98) + L0x2001990e_f * (x**99) + 
            L0x20019910_f * (x**100) + L0x20019912_f * (x**101) + 
            L0x20019914_f * (x**102) + L0x20019916_f * (x**103) + 
            L0x20019918_f * (x**104) + L0x2001991a_f * (x**105) + 
            L0x2001991c_f * (x**106) + L0x2001991e_f * (x**107) + 
            L0x20019920_f * (x**108) + L0x20019922_f * (x**109) + 
            L0x20019924_f * (x**110) + L0x20019926_f * (x**111) + 
            L0x20019928_f * (x**112) + L0x2001992a_f * (x**113) + 
            L0x2001992c_f * (x**114) + L0x2001992e_f * (x**115) + 
            L0x20019930_f * (x**116) + L0x20019932_f * (x**117) + 
            L0x20019934_f * (x**118) + L0x20019936_f * (x**119) + 
            L0x20019938_f * (x**120) + L0x2001993a_f * (x**121) + 
            L0x2001993c_f * (x**122) + L0x2001993e_f * (x**123) + 
            L0x20019940_f * (x**124) + L0x20019942_f * (x**125) + 
            L0x20019944_f * (x**126) + L0x20019946_f * (x**127) + 
            L0x20019948_f * (x**128) + L0x2001994a_f * (x**129) + 
            L0x2001994c_f * (x**130) + L0x2001994e_f * (x**131) + 
            L0x20019950_f * (x**132) + L0x20019952_f * (x**133) + 
            L0x20019954_f * (x**134) + L0x20019956_f * (x**135) + 
            L0x20019958_f * (x**136) + L0x2001995a_f * (x**137) + 
            L0x2001995c_f * (x**138) + L0x2001995e_f * (x**139) + 
            L0x20019960_f * (x**140) + L0x20019962_f * (x**141) + 
            L0x20019964_f * (x**142) + L0x20019966_f * (x**143) + 
            L0x20019968_f * (x**144) + L0x2001996a_f * (x**145) + 
            L0x2001996c_f * (x**146) + L0x2001996e_f * (x**147) + 
            L0x20019970_f * (x**148) + L0x20019972_f * (x**149) + 
            L0x20019974_f * (x**150) + L0x20019976_f * (x**151) + 
            L0x20019978_f * (x**152) + L0x2001997a_f * (x**153) + 
            L0x2001997c_f * (x**154) + L0x2001997e_f * (x**155) + 
            L0x20019980_f * (x**156) + L0x20019982_f * (x**157) + 
            L0x20019984_f * (x**158) + L0x20019986_f * (x**159) + 
            L0x20019988_f * (x**160) + L0x2001998a_f * (x**161) + 
            L0x2001998c_f * (x**162) + L0x2001998e_f * (x**163) + 
            L0x20019990_f * (x**164) + L0x20019992_f * (x**165) + 
            L0x20019994_f * (x**166) + L0x20019996_f * (x**167) + 
            L0x20019998_f * (x**168) + L0x2001999a_f * (x**169) + 
            L0x2001999c_f * (x**170) + L0x2001999e_f * (x**171) + 
            L0x200199a0_f * (x**172) + L0x200199a2_f * (x**173) + 
            L0x200199a4_f * (x**174) + L0x200199a6_f * (x**175) + 
            L0x200199a8_f * (x**176) + L0x200199aa_f * (x**177) + 
            L0x200199ac_f * (x**178) + L0x200199ae_f * (x**179) + 
            L0x200199b0_f * (x**180) + L0x200199b2_f * (x**181) + 
            L0x200199b4_f * (x**182) + L0x200199b6_f * (x**183) + 
            L0x200199b8_f * (x**184) + L0x200199ba_f * (x**185) + 
            L0x200199bc_f * (x**186) + L0x200199be_f * (x**187) + 
            L0x200199c0_f * (x**188) + L0x200199c2_f * (x**189) + 
            L0x200199c4_f * (x**190) + L0x200199c6_f * (x**191) + 
            L0x200199c8_f * (x**192) + L0x200199ca_f * (x**193) + 
            L0x200199cc_f * (x**194) + L0x200199ce_f * (x**195) + 
            L0x200199d0_f * (x**196) + L0x200199d2_f * (x**197) + 
            L0x200199d4_f * (x**198) + L0x200199d6_f * (x**199) + 
            L0x200199d8_f * (x**200) + L0x200199da_f * (x**201) + 
            L0x200199dc_f * (x**202) + L0x200199de_f * (x**203) + 
            L0x200199e0_f * (x**204) + L0x200199e2_f * (x**205) + 
            L0x200199e4_f * (x**206) + L0x200199e6_f * (x**207) + 
            L0x200199e8_f * (x**208) + L0x200199ea_f * (x**209) + 
            L0x200199ec_f * (x**210) + L0x200199ee_f * (x**211) + 
            L0x200199f0_f * (x**212) + L0x200199f2_f * (x**213) + 
            L0x200199f4_f * (x**214) + L0x200199f6_f * (x**215) + 
            L0x200199f8_f * (x**216) + L0x200199fa_f * (x**217) + 
            L0x200199fc_f * (x**218) + L0x200199fe_f * (x**219) + 
            L0x20019a00_f * (x**220) + L0x20019a02_f * (x**221) + 
            L0x20019a04_f * (x**222) + L0x20019a06_f * (x**223) + 
            L0x20019a08_f * (x**224) + L0x20019a0a_f * (x**225) + 
            L0x20019a0c_f * (x**226) + L0x20019a0e_f * (x**227) + 
            L0x20019a10_f * (x**228) + L0x20019a12_f * (x**229) + 
            L0x20019a14_f * (x**230) + L0x20019a16_f * (x**231) + 
            L0x20019a18_f * (x**232) + L0x20019a1a_f * (x**233) + 
            L0x20019a1c_f * (x**234) + L0x20019a1e_f * (x**235) + 
            L0x20019a20_f * (x**236) + L0x20019a22_f * (x**237) + 
            L0x20019a24_f * (x**238) + L0x20019a26_f * (x**239) + 
            L0x20019a28_f * (x**240) + L0x20019a2a_f * (x**241) + 
            L0x20019a2c_f * (x**242) + L0x20019a2e_f * (x**243) + 
            L0x20019a30_f * (x**244) + L0x20019a32_f * (x**245) + 
            L0x20019a34_f * (x**246) + L0x20019a36_f * (x**247) + 
            L0x20019a38_f * (x**248) + L0x20019a3a_f * (x**249) + 
            L0x20019a3c_f * (x**250) + L0x20019a3e_f * (x**251) + 
            L0x20019a40_f * (x**252) + L0x20019a42_f * (x**253) + 
            L0x20019a44_f * (x**254) + L0x20019a46_f * (x**255)
          )
          [25570049, x**4 - 19473843],
    (* inp_poly_58 *)
    eqmod (2**32) * (inp_poly_58 * inp_poly_58)
          (
            L0x20019848_f * (x**0) + L0x2001984a_f * (x**1) + 
            L0x2001984c_f * (x**2) + L0x2001984e_f * (x**3) + 
            L0x20019850_f * (x**4) + L0x20019852_f * (x**5) + 
            L0x20019854_f * (x**6) + L0x20019856_f * (x**7) + 
            L0x20019858_f * (x**8) + L0x2001985a_f * (x**9) + 
            L0x2001985c_f * (x**10) + L0x2001985e_f * (x**11) + 
            L0x20019860_f * (x**12) + L0x20019862_f * (x**13) + 
            L0x20019864_f * (x**14) + L0x20019866_f * (x**15) + 
            L0x20019868_f * (x**16) + L0x2001986a_f * (x**17) + 
            L0x2001986c_f * (x**18) + L0x2001986e_f * (x**19) + 
            L0x20019870_f * (x**20) + L0x20019872_f * (x**21) + 
            L0x20019874_f * (x**22) + L0x20019876_f * (x**23) + 
            L0x20019878_f * (x**24) + L0x2001987a_f * (x**25) + 
            L0x2001987c_f * (x**26) + L0x2001987e_f * (x**27) + 
            L0x20019880_f * (x**28) + L0x20019882_f * (x**29) + 
            L0x20019884_f * (x**30) + L0x20019886_f * (x**31) + 
            L0x20019888_f * (x**32) + L0x2001988a_f * (x**33) + 
            L0x2001988c_f * (x**34) + L0x2001988e_f * (x**35) + 
            L0x20019890_f * (x**36) + L0x20019892_f * (x**37) + 
            L0x20019894_f * (x**38) + L0x20019896_f * (x**39) + 
            L0x20019898_f * (x**40) + L0x2001989a_f * (x**41) + 
            L0x2001989c_f * (x**42) + L0x2001989e_f * (x**43) + 
            L0x200198a0_f * (x**44) + L0x200198a2_f * (x**45) + 
            L0x200198a4_f * (x**46) + L0x200198a6_f * (x**47) + 
            L0x200198a8_f * (x**48) + L0x200198aa_f * (x**49) + 
            L0x200198ac_f * (x**50) + L0x200198ae_f * (x**51) + 
            L0x200198b0_f * (x**52) + L0x200198b2_f * (x**53) + 
            L0x200198b4_f * (x**54) + L0x200198b6_f * (x**55) + 
            L0x200198b8_f * (x**56) + L0x200198ba_f * (x**57) + 
            L0x200198bc_f * (x**58) + L0x200198be_f * (x**59) + 
            L0x200198c0_f * (x**60) + L0x200198c2_f * (x**61) + 
            L0x200198c4_f * (x**62) + L0x200198c6_f * (x**63) + 
            L0x200198c8_f * (x**64) + L0x200198ca_f * (x**65) + 
            L0x200198cc_f * (x**66) + L0x200198ce_f * (x**67) + 
            L0x200198d0_f * (x**68) + L0x200198d2_f * (x**69) + 
            L0x200198d4_f * (x**70) + L0x200198d6_f * (x**71) + 
            L0x200198d8_f * (x**72) + L0x200198da_f * (x**73) + 
            L0x200198dc_f * (x**74) + L0x200198de_f * (x**75) + 
            L0x200198e0_f * (x**76) + L0x200198e2_f * (x**77) + 
            L0x200198e4_f * (x**78) + L0x200198e6_f * (x**79) + 
            L0x200198e8_f * (x**80) + L0x200198ea_f * (x**81) + 
            L0x200198ec_f * (x**82) + L0x200198ee_f * (x**83) + 
            L0x200198f0_f * (x**84) + L0x200198f2_f * (x**85) + 
            L0x200198f4_f * (x**86) + L0x200198f6_f * (x**87) + 
            L0x200198f8_f * (x**88) + L0x200198fa_f * (x**89) + 
            L0x200198fc_f * (x**90) + L0x200198fe_f * (x**91) + 
            L0x20019900_f * (x**92) + L0x20019902_f * (x**93) + 
            L0x20019904_f * (x**94) + L0x20019906_f * (x**95) + 
            L0x20019908_f * (x**96) + L0x2001990a_f * (x**97) + 
            L0x2001990c_f * (x**98) + L0x2001990e_f * (x**99) + 
            L0x20019910_f * (x**100) + L0x20019912_f * (x**101) + 
            L0x20019914_f * (x**102) + L0x20019916_f * (x**103) + 
            L0x20019918_f * (x**104) + L0x2001991a_f * (x**105) + 
            L0x2001991c_f * (x**106) + L0x2001991e_f * (x**107) + 
            L0x20019920_f * (x**108) + L0x20019922_f * (x**109) + 
            L0x20019924_f * (x**110) + L0x20019926_f * (x**111) + 
            L0x20019928_f * (x**112) + L0x2001992a_f * (x**113) + 
            L0x2001992c_f * (x**114) + L0x2001992e_f * (x**115) + 
            L0x20019930_f * (x**116) + L0x20019932_f * (x**117) + 
            L0x20019934_f * (x**118) + L0x20019936_f * (x**119) + 
            L0x20019938_f * (x**120) + L0x2001993a_f * (x**121) + 
            L0x2001993c_f * (x**122) + L0x2001993e_f * (x**123) + 
            L0x20019940_f * (x**124) + L0x20019942_f * (x**125) + 
            L0x20019944_f * (x**126) + L0x20019946_f * (x**127) + 
            L0x20019948_f * (x**128) + L0x2001994a_f * (x**129) + 
            L0x2001994c_f * (x**130) + L0x2001994e_f * (x**131) + 
            L0x20019950_f * (x**132) + L0x20019952_f * (x**133) + 
            L0x20019954_f * (x**134) + L0x20019956_f * (x**135) + 
            L0x20019958_f * (x**136) + L0x2001995a_f * (x**137) + 
            L0x2001995c_f * (x**138) + L0x2001995e_f * (x**139) + 
            L0x20019960_f * (x**140) + L0x20019962_f * (x**141) + 
            L0x20019964_f * (x**142) + L0x20019966_f * (x**143) + 
            L0x20019968_f * (x**144) + L0x2001996a_f * (x**145) + 
            L0x2001996c_f * (x**146) + L0x2001996e_f * (x**147) + 
            L0x20019970_f * (x**148) + L0x20019972_f * (x**149) + 
            L0x20019974_f * (x**150) + L0x20019976_f * (x**151) + 
            L0x20019978_f * (x**152) + L0x2001997a_f * (x**153) + 
            L0x2001997c_f * (x**154) + L0x2001997e_f * (x**155) + 
            L0x20019980_f * (x**156) + L0x20019982_f * (x**157) + 
            L0x20019984_f * (x**158) + L0x20019986_f * (x**159) + 
            L0x20019988_f * (x**160) + L0x2001998a_f * (x**161) + 
            L0x2001998c_f * (x**162) + L0x2001998e_f * (x**163) + 
            L0x20019990_f * (x**164) + L0x20019992_f * (x**165) + 
            L0x20019994_f * (x**166) + L0x20019996_f * (x**167) + 
            L0x20019998_f * (x**168) + L0x2001999a_f * (x**169) + 
            L0x2001999c_f * (x**170) + L0x2001999e_f * (x**171) + 
            L0x200199a0_f * (x**172) + L0x200199a2_f * (x**173) + 
            L0x200199a4_f * (x**174) + L0x200199a6_f * (x**175) + 
            L0x200199a8_f * (x**176) + L0x200199aa_f * (x**177) + 
            L0x200199ac_f * (x**178) + L0x200199ae_f * (x**179) + 
            L0x200199b0_f * (x**180) + L0x200199b2_f * (x**181) + 
            L0x200199b4_f * (x**182) + L0x200199b6_f * (x**183) + 
            L0x200199b8_f * (x**184) + L0x200199ba_f * (x**185) + 
            L0x200199bc_f * (x**186) + L0x200199be_f * (x**187) + 
            L0x200199c0_f * (x**188) + L0x200199c2_f * (x**189) + 
            L0x200199c4_f * (x**190) + L0x200199c6_f * (x**191) + 
            L0x200199c8_f * (x**192) + L0x200199ca_f * (x**193) + 
            L0x200199cc_f * (x**194) + L0x200199ce_f * (x**195) + 
            L0x200199d0_f * (x**196) + L0x200199d2_f * (x**197) + 
            L0x200199d4_f * (x**198) + L0x200199d6_f * (x**199) + 
            L0x200199d8_f * (x**200) + L0x200199da_f * (x**201) + 
            L0x200199dc_f * (x**202) + L0x200199de_f * (x**203) + 
            L0x200199e0_f * (x**204) + L0x200199e2_f * (x**205) + 
            L0x200199e4_f * (x**206) + L0x200199e6_f * (x**207) + 
            L0x200199e8_f * (x**208) + L0x200199ea_f * (x**209) + 
            L0x200199ec_f * (x**210) + L0x200199ee_f * (x**211) + 
            L0x200199f0_f * (x**212) + L0x200199f2_f * (x**213) + 
            L0x200199f4_f * (x**214) + L0x200199f6_f * (x**215) + 
            L0x200199f8_f * (x**216) + L0x200199fa_f * (x**217) + 
            L0x200199fc_f * (x**218) + L0x200199fe_f * (x**219) + 
            L0x20019a00_f * (x**220) + L0x20019a02_f * (x**221) + 
            L0x20019a04_f * (x**222) + L0x20019a06_f * (x**223) + 
            L0x20019a08_f * (x**224) + L0x20019a0a_f * (x**225) + 
            L0x20019a0c_f * (x**226) + L0x20019a0e_f * (x**227) + 
            L0x20019a10_f * (x**228) + L0x20019a12_f * (x**229) + 
            L0x20019a14_f * (x**230) + L0x20019a16_f * (x**231) + 
            L0x20019a18_f * (x**232) + L0x20019a1a_f * (x**233) + 
            L0x20019a1c_f * (x**234) + L0x20019a1e_f * (x**235) + 
            L0x20019a20_f * (x**236) + L0x20019a22_f * (x**237) + 
            L0x20019a24_f * (x**238) + L0x20019a26_f * (x**239) + 
            L0x20019a28_f * (x**240) + L0x20019a2a_f * (x**241) + 
            L0x20019a2c_f * (x**242) + L0x20019a2e_f * (x**243) + 
            L0x20019a30_f * (x**244) + L0x20019a32_f * (x**245) + 
            L0x20019a34_f * (x**246) + L0x20019a36_f * (x**247) + 
            L0x20019a38_f * (x**248) + L0x20019a3a_f * (x**249) + 
            L0x20019a3c_f * (x**250) + L0x20019a3e_f * (x**251) + 
            L0x20019a40_f * (x**252) + L0x20019a42_f * (x**253) + 
            L0x20019a44_f * (x**254) + L0x20019a46_f * (x**255)
          )
          [25570049, x**4 - 8645865],
    (* inp_poly_59 *)
    eqmod (2**32) * (inp_poly_59 * inp_poly_59)
          (
            L0x20019848_f * (x**0) + L0x2001984a_f * (x**1) + 
            L0x2001984c_f * (x**2) + L0x2001984e_f * (x**3) + 
            L0x20019850_f * (x**4) + L0x20019852_f * (x**5) + 
            L0x20019854_f * (x**6) + L0x20019856_f * (x**7) + 
            L0x20019858_f * (x**8) + L0x2001985a_f * (x**9) + 
            L0x2001985c_f * (x**10) + L0x2001985e_f * (x**11) + 
            L0x20019860_f * (x**12) + L0x20019862_f * (x**13) + 
            L0x20019864_f * (x**14) + L0x20019866_f * (x**15) + 
            L0x20019868_f * (x**16) + L0x2001986a_f * (x**17) + 
            L0x2001986c_f * (x**18) + L0x2001986e_f * (x**19) + 
            L0x20019870_f * (x**20) + L0x20019872_f * (x**21) + 
            L0x20019874_f * (x**22) + L0x20019876_f * (x**23) + 
            L0x20019878_f * (x**24) + L0x2001987a_f * (x**25) + 
            L0x2001987c_f * (x**26) + L0x2001987e_f * (x**27) + 
            L0x20019880_f * (x**28) + L0x20019882_f * (x**29) + 
            L0x20019884_f * (x**30) + L0x20019886_f * (x**31) + 
            L0x20019888_f * (x**32) + L0x2001988a_f * (x**33) + 
            L0x2001988c_f * (x**34) + L0x2001988e_f * (x**35) + 
            L0x20019890_f * (x**36) + L0x20019892_f * (x**37) + 
            L0x20019894_f * (x**38) + L0x20019896_f * (x**39) + 
            L0x20019898_f * (x**40) + L0x2001989a_f * (x**41) + 
            L0x2001989c_f * (x**42) + L0x2001989e_f * (x**43) + 
            L0x200198a0_f * (x**44) + L0x200198a2_f * (x**45) + 
            L0x200198a4_f * (x**46) + L0x200198a6_f * (x**47) + 
            L0x200198a8_f * (x**48) + L0x200198aa_f * (x**49) + 
            L0x200198ac_f * (x**50) + L0x200198ae_f * (x**51) + 
            L0x200198b0_f * (x**52) + L0x200198b2_f * (x**53) + 
            L0x200198b4_f * (x**54) + L0x200198b6_f * (x**55) + 
            L0x200198b8_f * (x**56) + L0x200198ba_f * (x**57) + 
            L0x200198bc_f * (x**58) + L0x200198be_f * (x**59) + 
            L0x200198c0_f * (x**60) + L0x200198c2_f * (x**61) + 
            L0x200198c4_f * (x**62) + L0x200198c6_f * (x**63) + 
            L0x200198c8_f * (x**64) + L0x200198ca_f * (x**65) + 
            L0x200198cc_f * (x**66) + L0x200198ce_f * (x**67) + 
            L0x200198d0_f * (x**68) + L0x200198d2_f * (x**69) + 
            L0x200198d4_f * (x**70) + L0x200198d6_f * (x**71) + 
            L0x200198d8_f * (x**72) + L0x200198da_f * (x**73) + 
            L0x200198dc_f * (x**74) + L0x200198de_f * (x**75) + 
            L0x200198e0_f * (x**76) + L0x200198e2_f * (x**77) + 
            L0x200198e4_f * (x**78) + L0x200198e6_f * (x**79) + 
            L0x200198e8_f * (x**80) + L0x200198ea_f * (x**81) + 
            L0x200198ec_f * (x**82) + L0x200198ee_f * (x**83) + 
            L0x200198f0_f * (x**84) + L0x200198f2_f * (x**85) + 
            L0x200198f4_f * (x**86) + L0x200198f6_f * (x**87) + 
            L0x200198f8_f * (x**88) + L0x200198fa_f * (x**89) + 
            L0x200198fc_f * (x**90) + L0x200198fe_f * (x**91) + 
            L0x20019900_f * (x**92) + L0x20019902_f * (x**93) + 
            L0x20019904_f * (x**94) + L0x20019906_f * (x**95) + 
            L0x20019908_f * (x**96) + L0x2001990a_f * (x**97) + 
            L0x2001990c_f * (x**98) + L0x2001990e_f * (x**99) + 
            L0x20019910_f * (x**100) + L0x20019912_f * (x**101) + 
            L0x20019914_f * (x**102) + L0x20019916_f * (x**103) + 
            L0x20019918_f * (x**104) + L0x2001991a_f * (x**105) + 
            L0x2001991c_f * (x**106) + L0x2001991e_f * (x**107) + 
            L0x20019920_f * (x**108) + L0x20019922_f * (x**109) + 
            L0x20019924_f * (x**110) + L0x20019926_f * (x**111) + 
            L0x20019928_f * (x**112) + L0x2001992a_f * (x**113) + 
            L0x2001992c_f * (x**114) + L0x2001992e_f * (x**115) + 
            L0x20019930_f * (x**116) + L0x20019932_f * (x**117) + 
            L0x20019934_f * (x**118) + L0x20019936_f * (x**119) + 
            L0x20019938_f * (x**120) + L0x2001993a_f * (x**121) + 
            L0x2001993c_f * (x**122) + L0x2001993e_f * (x**123) + 
            L0x20019940_f * (x**124) + L0x20019942_f * (x**125) + 
            L0x20019944_f * (x**126) + L0x20019946_f * (x**127) + 
            L0x20019948_f * (x**128) + L0x2001994a_f * (x**129) + 
            L0x2001994c_f * (x**130) + L0x2001994e_f * (x**131) + 
            L0x20019950_f * (x**132) + L0x20019952_f * (x**133) + 
            L0x20019954_f * (x**134) + L0x20019956_f * (x**135) + 
            L0x20019958_f * (x**136) + L0x2001995a_f * (x**137) + 
            L0x2001995c_f * (x**138) + L0x2001995e_f * (x**139) + 
            L0x20019960_f * (x**140) + L0x20019962_f * (x**141) + 
            L0x20019964_f * (x**142) + L0x20019966_f * (x**143) + 
            L0x20019968_f * (x**144) + L0x2001996a_f * (x**145) + 
            L0x2001996c_f * (x**146) + L0x2001996e_f * (x**147) + 
            L0x20019970_f * (x**148) + L0x20019972_f * (x**149) + 
            L0x20019974_f * (x**150) + L0x20019976_f * (x**151) + 
            L0x20019978_f * (x**152) + L0x2001997a_f * (x**153) + 
            L0x2001997c_f * (x**154) + L0x2001997e_f * (x**155) + 
            L0x20019980_f * (x**156) + L0x20019982_f * (x**157) + 
            L0x20019984_f * (x**158) + L0x20019986_f * (x**159) + 
            L0x20019988_f * (x**160) + L0x2001998a_f * (x**161) + 
            L0x2001998c_f * (x**162) + L0x2001998e_f * (x**163) + 
            L0x20019990_f * (x**164) + L0x20019992_f * (x**165) + 
            L0x20019994_f * (x**166) + L0x20019996_f * (x**167) + 
            L0x20019998_f * (x**168) + L0x2001999a_f * (x**169) + 
            L0x2001999c_f * (x**170) + L0x2001999e_f * (x**171) + 
            L0x200199a0_f * (x**172) + L0x200199a2_f * (x**173) + 
            L0x200199a4_f * (x**174) + L0x200199a6_f * (x**175) + 
            L0x200199a8_f * (x**176) + L0x200199aa_f * (x**177) + 
            L0x200199ac_f * (x**178) + L0x200199ae_f * (x**179) + 
            L0x200199b0_f * (x**180) + L0x200199b2_f * (x**181) + 
            L0x200199b4_f * (x**182) + L0x200199b6_f * (x**183) + 
            L0x200199b8_f * (x**184) + L0x200199ba_f * (x**185) + 
            L0x200199bc_f * (x**186) + L0x200199be_f * (x**187) + 
            L0x200199c0_f * (x**188) + L0x200199c2_f * (x**189) + 
            L0x200199c4_f * (x**190) + L0x200199c6_f * (x**191) + 
            L0x200199c8_f * (x**192) + L0x200199ca_f * (x**193) + 
            L0x200199cc_f * (x**194) + L0x200199ce_f * (x**195) + 
            L0x200199d0_f * (x**196) + L0x200199d2_f * (x**197) + 
            L0x200199d4_f * (x**198) + L0x200199d6_f * (x**199) + 
            L0x200199d8_f * (x**200) + L0x200199da_f * (x**201) + 
            L0x200199dc_f * (x**202) + L0x200199de_f * (x**203) + 
            L0x200199e0_f * (x**204) + L0x200199e2_f * (x**205) + 
            L0x200199e4_f * (x**206) + L0x200199e6_f * (x**207) + 
            L0x200199e8_f * (x**208) + L0x200199ea_f * (x**209) + 
            L0x200199ec_f * (x**210) + L0x200199ee_f * (x**211) + 
            L0x200199f0_f * (x**212) + L0x200199f2_f * (x**213) + 
            L0x200199f4_f * (x**214) + L0x200199f6_f * (x**215) + 
            L0x200199f8_f * (x**216) + L0x200199fa_f * (x**217) + 
            L0x200199fc_f * (x**218) + L0x200199fe_f * (x**219) + 
            L0x20019a00_f * (x**220) + L0x20019a02_f * (x**221) + 
            L0x20019a04_f * (x**222) + L0x20019a06_f * (x**223) + 
            L0x20019a08_f * (x**224) + L0x20019a0a_f * (x**225) + 
            L0x20019a0c_f * (x**226) + L0x20019a0e_f * (x**227) + 
            L0x20019a10_f * (x**228) + L0x20019a12_f * (x**229) + 
            L0x20019a14_f * (x**230) + L0x20019a16_f * (x**231) + 
            L0x20019a18_f * (x**232) + L0x20019a1a_f * (x**233) + 
            L0x20019a1c_f * (x**234) + L0x20019a1e_f * (x**235) + 
            L0x20019a20_f * (x**236) + L0x20019a22_f * (x**237) + 
            L0x20019a24_f * (x**238) + L0x20019a26_f * (x**239) + 
            L0x20019a28_f * (x**240) + L0x20019a2a_f * (x**241) + 
            L0x20019a2c_f * (x**242) + L0x20019a2e_f * (x**243) + 
            L0x20019a30_f * (x**244) + L0x20019a32_f * (x**245) + 
            L0x20019a34_f * (x**246) + L0x20019a36_f * (x**247) + 
            L0x20019a38_f * (x**248) + L0x20019a3a_f * (x**249) + 
            L0x20019a3c_f * (x**250) + L0x20019a3e_f * (x**251) + 
            L0x20019a40_f * (x**252) + L0x20019a42_f * (x**253) + 
            L0x20019a44_f * (x**254) + L0x20019a46_f * (x**255)
          )
          [25570049, x**4 - 16924184],
    (* inp_poly_60 *)
    eqmod (2**32) * (inp_poly_60 * inp_poly_60)
          (
            L0x20019848_f * (x**0) + L0x2001984a_f * (x**1) + 
            L0x2001984c_f * (x**2) + L0x2001984e_f * (x**3) + 
            L0x20019850_f * (x**4) + L0x20019852_f * (x**5) + 
            L0x20019854_f * (x**6) + L0x20019856_f * (x**7) + 
            L0x20019858_f * (x**8) + L0x2001985a_f * (x**9) + 
            L0x2001985c_f * (x**10) + L0x2001985e_f * (x**11) + 
            L0x20019860_f * (x**12) + L0x20019862_f * (x**13) + 
            L0x20019864_f * (x**14) + L0x20019866_f * (x**15) + 
            L0x20019868_f * (x**16) + L0x2001986a_f * (x**17) + 
            L0x2001986c_f * (x**18) + L0x2001986e_f * (x**19) + 
            L0x20019870_f * (x**20) + L0x20019872_f * (x**21) + 
            L0x20019874_f * (x**22) + L0x20019876_f * (x**23) + 
            L0x20019878_f * (x**24) + L0x2001987a_f * (x**25) + 
            L0x2001987c_f * (x**26) + L0x2001987e_f * (x**27) + 
            L0x20019880_f * (x**28) + L0x20019882_f * (x**29) + 
            L0x20019884_f * (x**30) + L0x20019886_f * (x**31) + 
            L0x20019888_f * (x**32) + L0x2001988a_f * (x**33) + 
            L0x2001988c_f * (x**34) + L0x2001988e_f * (x**35) + 
            L0x20019890_f * (x**36) + L0x20019892_f * (x**37) + 
            L0x20019894_f * (x**38) + L0x20019896_f * (x**39) + 
            L0x20019898_f * (x**40) + L0x2001989a_f * (x**41) + 
            L0x2001989c_f * (x**42) + L0x2001989e_f * (x**43) + 
            L0x200198a0_f * (x**44) + L0x200198a2_f * (x**45) + 
            L0x200198a4_f * (x**46) + L0x200198a6_f * (x**47) + 
            L0x200198a8_f * (x**48) + L0x200198aa_f * (x**49) + 
            L0x200198ac_f * (x**50) + L0x200198ae_f * (x**51) + 
            L0x200198b0_f * (x**52) + L0x200198b2_f * (x**53) + 
            L0x200198b4_f * (x**54) + L0x200198b6_f * (x**55) + 
            L0x200198b8_f * (x**56) + L0x200198ba_f * (x**57) + 
            L0x200198bc_f * (x**58) + L0x200198be_f * (x**59) + 
            L0x200198c0_f * (x**60) + L0x200198c2_f * (x**61) + 
            L0x200198c4_f * (x**62) + L0x200198c6_f * (x**63) + 
            L0x200198c8_f * (x**64) + L0x200198ca_f * (x**65) + 
            L0x200198cc_f * (x**66) + L0x200198ce_f * (x**67) + 
            L0x200198d0_f * (x**68) + L0x200198d2_f * (x**69) + 
            L0x200198d4_f * (x**70) + L0x200198d6_f * (x**71) + 
            L0x200198d8_f * (x**72) + L0x200198da_f * (x**73) + 
            L0x200198dc_f * (x**74) + L0x200198de_f * (x**75) + 
            L0x200198e0_f * (x**76) + L0x200198e2_f * (x**77) + 
            L0x200198e4_f * (x**78) + L0x200198e6_f * (x**79) + 
            L0x200198e8_f * (x**80) + L0x200198ea_f * (x**81) + 
            L0x200198ec_f * (x**82) + L0x200198ee_f * (x**83) + 
            L0x200198f0_f * (x**84) + L0x200198f2_f * (x**85) + 
            L0x200198f4_f * (x**86) + L0x200198f6_f * (x**87) + 
            L0x200198f8_f * (x**88) + L0x200198fa_f * (x**89) + 
            L0x200198fc_f * (x**90) + L0x200198fe_f * (x**91) + 
            L0x20019900_f * (x**92) + L0x20019902_f * (x**93) + 
            L0x20019904_f * (x**94) + L0x20019906_f * (x**95) + 
            L0x20019908_f * (x**96) + L0x2001990a_f * (x**97) + 
            L0x2001990c_f * (x**98) + L0x2001990e_f * (x**99) + 
            L0x20019910_f * (x**100) + L0x20019912_f * (x**101) + 
            L0x20019914_f * (x**102) + L0x20019916_f * (x**103) + 
            L0x20019918_f * (x**104) + L0x2001991a_f * (x**105) + 
            L0x2001991c_f * (x**106) + L0x2001991e_f * (x**107) + 
            L0x20019920_f * (x**108) + L0x20019922_f * (x**109) + 
            L0x20019924_f * (x**110) + L0x20019926_f * (x**111) + 
            L0x20019928_f * (x**112) + L0x2001992a_f * (x**113) + 
            L0x2001992c_f * (x**114) + L0x2001992e_f * (x**115) + 
            L0x20019930_f * (x**116) + L0x20019932_f * (x**117) + 
            L0x20019934_f * (x**118) + L0x20019936_f * (x**119) + 
            L0x20019938_f * (x**120) + L0x2001993a_f * (x**121) + 
            L0x2001993c_f * (x**122) + L0x2001993e_f * (x**123) + 
            L0x20019940_f * (x**124) + L0x20019942_f * (x**125) + 
            L0x20019944_f * (x**126) + L0x20019946_f * (x**127) + 
            L0x20019948_f * (x**128) + L0x2001994a_f * (x**129) + 
            L0x2001994c_f * (x**130) + L0x2001994e_f * (x**131) + 
            L0x20019950_f * (x**132) + L0x20019952_f * (x**133) + 
            L0x20019954_f * (x**134) + L0x20019956_f * (x**135) + 
            L0x20019958_f * (x**136) + L0x2001995a_f * (x**137) + 
            L0x2001995c_f * (x**138) + L0x2001995e_f * (x**139) + 
            L0x20019960_f * (x**140) + L0x20019962_f * (x**141) + 
            L0x20019964_f * (x**142) + L0x20019966_f * (x**143) + 
            L0x20019968_f * (x**144) + L0x2001996a_f * (x**145) + 
            L0x2001996c_f * (x**146) + L0x2001996e_f * (x**147) + 
            L0x20019970_f * (x**148) + L0x20019972_f * (x**149) + 
            L0x20019974_f * (x**150) + L0x20019976_f * (x**151) + 
            L0x20019978_f * (x**152) + L0x2001997a_f * (x**153) + 
            L0x2001997c_f * (x**154) + L0x2001997e_f * (x**155) + 
            L0x20019980_f * (x**156) + L0x20019982_f * (x**157) + 
            L0x20019984_f * (x**158) + L0x20019986_f * (x**159) + 
            L0x20019988_f * (x**160) + L0x2001998a_f * (x**161) + 
            L0x2001998c_f * (x**162) + L0x2001998e_f * (x**163) + 
            L0x20019990_f * (x**164) + L0x20019992_f * (x**165) + 
            L0x20019994_f * (x**166) + L0x20019996_f * (x**167) + 
            L0x20019998_f * (x**168) + L0x2001999a_f * (x**169) + 
            L0x2001999c_f * (x**170) + L0x2001999e_f * (x**171) + 
            L0x200199a0_f * (x**172) + L0x200199a2_f * (x**173) + 
            L0x200199a4_f * (x**174) + L0x200199a6_f * (x**175) + 
            L0x200199a8_f * (x**176) + L0x200199aa_f * (x**177) + 
            L0x200199ac_f * (x**178) + L0x200199ae_f * (x**179) + 
            L0x200199b0_f * (x**180) + L0x200199b2_f * (x**181) + 
            L0x200199b4_f * (x**182) + L0x200199b6_f * (x**183) + 
            L0x200199b8_f * (x**184) + L0x200199ba_f * (x**185) + 
            L0x200199bc_f * (x**186) + L0x200199be_f * (x**187) + 
            L0x200199c0_f * (x**188) + L0x200199c2_f * (x**189) + 
            L0x200199c4_f * (x**190) + L0x200199c6_f * (x**191) + 
            L0x200199c8_f * (x**192) + L0x200199ca_f * (x**193) + 
            L0x200199cc_f * (x**194) + L0x200199ce_f * (x**195) + 
            L0x200199d0_f * (x**196) + L0x200199d2_f * (x**197) + 
            L0x200199d4_f * (x**198) + L0x200199d6_f * (x**199) + 
            L0x200199d8_f * (x**200) + L0x200199da_f * (x**201) + 
            L0x200199dc_f * (x**202) + L0x200199de_f * (x**203) + 
            L0x200199e0_f * (x**204) + L0x200199e2_f * (x**205) + 
            L0x200199e4_f * (x**206) + L0x200199e6_f * (x**207) + 
            L0x200199e8_f * (x**208) + L0x200199ea_f * (x**209) + 
            L0x200199ec_f * (x**210) + L0x200199ee_f * (x**211) + 
            L0x200199f0_f * (x**212) + L0x200199f2_f * (x**213) + 
            L0x200199f4_f * (x**214) + L0x200199f6_f * (x**215) + 
            L0x200199f8_f * (x**216) + L0x200199fa_f * (x**217) + 
            L0x200199fc_f * (x**218) + L0x200199fe_f * (x**219) + 
            L0x20019a00_f * (x**220) + L0x20019a02_f * (x**221) + 
            L0x20019a04_f * (x**222) + L0x20019a06_f * (x**223) + 
            L0x20019a08_f * (x**224) + L0x20019a0a_f * (x**225) + 
            L0x20019a0c_f * (x**226) + L0x20019a0e_f * (x**227) + 
            L0x20019a10_f * (x**228) + L0x20019a12_f * (x**229) + 
            L0x20019a14_f * (x**230) + L0x20019a16_f * (x**231) + 
            L0x20019a18_f * (x**232) + L0x20019a1a_f * (x**233) + 
            L0x20019a1c_f * (x**234) + L0x20019a1e_f * (x**235) + 
            L0x20019a20_f * (x**236) + L0x20019a22_f * (x**237) + 
            L0x20019a24_f * (x**238) + L0x20019a26_f * (x**239) + 
            L0x20019a28_f * (x**240) + L0x20019a2a_f * (x**241) + 
            L0x20019a2c_f * (x**242) + L0x20019a2e_f * (x**243) + 
            L0x20019a30_f * (x**244) + L0x20019a32_f * (x**245) + 
            L0x20019a34_f * (x**246) + L0x20019a36_f * (x**247) + 
            L0x20019a38_f * (x**248) + L0x20019a3a_f * (x**249) + 
            L0x20019a3c_f * (x**250) + L0x20019a3e_f * (x**251) + 
            L0x20019a40_f * (x**252) + L0x20019a42_f * (x**253) + 
            L0x20019a44_f * (x**254) + L0x20019a46_f * (x**255)
          )
          [25570049, x**4 - 18864008],
    (* inp_poly_61 *)
    eqmod (2**32) * (inp_poly_61 * inp_poly_61)
          (
            L0x20019848_f * (x**0) + L0x2001984a_f * (x**1) + 
            L0x2001984c_f * (x**2) + L0x2001984e_f * (x**3) + 
            L0x20019850_f * (x**4) + L0x20019852_f * (x**5) + 
            L0x20019854_f * (x**6) + L0x20019856_f * (x**7) + 
            L0x20019858_f * (x**8) + L0x2001985a_f * (x**9) + 
            L0x2001985c_f * (x**10) + L0x2001985e_f * (x**11) + 
            L0x20019860_f * (x**12) + L0x20019862_f * (x**13) + 
            L0x20019864_f * (x**14) + L0x20019866_f * (x**15) + 
            L0x20019868_f * (x**16) + L0x2001986a_f * (x**17) + 
            L0x2001986c_f * (x**18) + L0x2001986e_f * (x**19) + 
            L0x20019870_f * (x**20) + L0x20019872_f * (x**21) + 
            L0x20019874_f * (x**22) + L0x20019876_f * (x**23) + 
            L0x20019878_f * (x**24) + L0x2001987a_f * (x**25) + 
            L0x2001987c_f * (x**26) + L0x2001987e_f * (x**27) + 
            L0x20019880_f * (x**28) + L0x20019882_f * (x**29) + 
            L0x20019884_f * (x**30) + L0x20019886_f * (x**31) + 
            L0x20019888_f * (x**32) + L0x2001988a_f * (x**33) + 
            L0x2001988c_f * (x**34) + L0x2001988e_f * (x**35) + 
            L0x20019890_f * (x**36) + L0x20019892_f * (x**37) + 
            L0x20019894_f * (x**38) + L0x20019896_f * (x**39) + 
            L0x20019898_f * (x**40) + L0x2001989a_f * (x**41) + 
            L0x2001989c_f * (x**42) + L0x2001989e_f * (x**43) + 
            L0x200198a0_f * (x**44) + L0x200198a2_f * (x**45) + 
            L0x200198a4_f * (x**46) + L0x200198a6_f * (x**47) + 
            L0x200198a8_f * (x**48) + L0x200198aa_f * (x**49) + 
            L0x200198ac_f * (x**50) + L0x200198ae_f * (x**51) + 
            L0x200198b0_f * (x**52) + L0x200198b2_f * (x**53) + 
            L0x200198b4_f * (x**54) + L0x200198b6_f * (x**55) + 
            L0x200198b8_f * (x**56) + L0x200198ba_f * (x**57) + 
            L0x200198bc_f * (x**58) + L0x200198be_f * (x**59) + 
            L0x200198c0_f * (x**60) + L0x200198c2_f * (x**61) + 
            L0x200198c4_f * (x**62) + L0x200198c6_f * (x**63) + 
            L0x200198c8_f * (x**64) + L0x200198ca_f * (x**65) + 
            L0x200198cc_f * (x**66) + L0x200198ce_f * (x**67) + 
            L0x200198d0_f * (x**68) + L0x200198d2_f * (x**69) + 
            L0x200198d4_f * (x**70) + L0x200198d6_f * (x**71) + 
            L0x200198d8_f * (x**72) + L0x200198da_f * (x**73) + 
            L0x200198dc_f * (x**74) + L0x200198de_f * (x**75) + 
            L0x200198e0_f * (x**76) + L0x200198e2_f * (x**77) + 
            L0x200198e4_f * (x**78) + L0x200198e6_f * (x**79) + 
            L0x200198e8_f * (x**80) + L0x200198ea_f * (x**81) + 
            L0x200198ec_f * (x**82) + L0x200198ee_f * (x**83) + 
            L0x200198f0_f * (x**84) + L0x200198f2_f * (x**85) + 
            L0x200198f4_f * (x**86) + L0x200198f6_f * (x**87) + 
            L0x200198f8_f * (x**88) + L0x200198fa_f * (x**89) + 
            L0x200198fc_f * (x**90) + L0x200198fe_f * (x**91) + 
            L0x20019900_f * (x**92) + L0x20019902_f * (x**93) + 
            L0x20019904_f * (x**94) + L0x20019906_f * (x**95) + 
            L0x20019908_f * (x**96) + L0x2001990a_f * (x**97) + 
            L0x2001990c_f * (x**98) + L0x2001990e_f * (x**99) + 
            L0x20019910_f * (x**100) + L0x20019912_f * (x**101) + 
            L0x20019914_f * (x**102) + L0x20019916_f * (x**103) + 
            L0x20019918_f * (x**104) + L0x2001991a_f * (x**105) + 
            L0x2001991c_f * (x**106) + L0x2001991e_f * (x**107) + 
            L0x20019920_f * (x**108) + L0x20019922_f * (x**109) + 
            L0x20019924_f * (x**110) + L0x20019926_f * (x**111) + 
            L0x20019928_f * (x**112) + L0x2001992a_f * (x**113) + 
            L0x2001992c_f * (x**114) + L0x2001992e_f * (x**115) + 
            L0x20019930_f * (x**116) + L0x20019932_f * (x**117) + 
            L0x20019934_f * (x**118) + L0x20019936_f * (x**119) + 
            L0x20019938_f * (x**120) + L0x2001993a_f * (x**121) + 
            L0x2001993c_f * (x**122) + L0x2001993e_f * (x**123) + 
            L0x20019940_f * (x**124) + L0x20019942_f * (x**125) + 
            L0x20019944_f * (x**126) + L0x20019946_f * (x**127) + 
            L0x20019948_f * (x**128) + L0x2001994a_f * (x**129) + 
            L0x2001994c_f * (x**130) + L0x2001994e_f * (x**131) + 
            L0x20019950_f * (x**132) + L0x20019952_f * (x**133) + 
            L0x20019954_f * (x**134) + L0x20019956_f * (x**135) + 
            L0x20019958_f * (x**136) + L0x2001995a_f * (x**137) + 
            L0x2001995c_f * (x**138) + L0x2001995e_f * (x**139) + 
            L0x20019960_f * (x**140) + L0x20019962_f * (x**141) + 
            L0x20019964_f * (x**142) + L0x20019966_f * (x**143) + 
            L0x20019968_f * (x**144) + L0x2001996a_f * (x**145) + 
            L0x2001996c_f * (x**146) + L0x2001996e_f * (x**147) + 
            L0x20019970_f * (x**148) + L0x20019972_f * (x**149) + 
            L0x20019974_f * (x**150) + L0x20019976_f * (x**151) + 
            L0x20019978_f * (x**152) + L0x2001997a_f * (x**153) + 
            L0x2001997c_f * (x**154) + L0x2001997e_f * (x**155) + 
            L0x20019980_f * (x**156) + L0x20019982_f * (x**157) + 
            L0x20019984_f * (x**158) + L0x20019986_f * (x**159) + 
            L0x20019988_f * (x**160) + L0x2001998a_f * (x**161) + 
            L0x2001998c_f * (x**162) + L0x2001998e_f * (x**163) + 
            L0x20019990_f * (x**164) + L0x20019992_f * (x**165) + 
            L0x20019994_f * (x**166) + L0x20019996_f * (x**167) + 
            L0x20019998_f * (x**168) + L0x2001999a_f * (x**169) + 
            L0x2001999c_f * (x**170) + L0x2001999e_f * (x**171) + 
            L0x200199a0_f * (x**172) + L0x200199a2_f * (x**173) + 
            L0x200199a4_f * (x**174) + L0x200199a6_f * (x**175) + 
            L0x200199a8_f * (x**176) + L0x200199aa_f * (x**177) + 
            L0x200199ac_f * (x**178) + L0x200199ae_f * (x**179) + 
            L0x200199b0_f * (x**180) + L0x200199b2_f * (x**181) + 
            L0x200199b4_f * (x**182) + L0x200199b6_f * (x**183) + 
            L0x200199b8_f * (x**184) + L0x200199ba_f * (x**185) + 
            L0x200199bc_f * (x**186) + L0x200199be_f * (x**187) + 
            L0x200199c0_f * (x**188) + L0x200199c2_f * (x**189) + 
            L0x200199c4_f * (x**190) + L0x200199c6_f * (x**191) + 
            L0x200199c8_f * (x**192) + L0x200199ca_f * (x**193) + 
            L0x200199cc_f * (x**194) + L0x200199ce_f * (x**195) + 
            L0x200199d0_f * (x**196) + L0x200199d2_f * (x**197) + 
            L0x200199d4_f * (x**198) + L0x200199d6_f * (x**199) + 
            L0x200199d8_f * (x**200) + L0x200199da_f * (x**201) + 
            L0x200199dc_f * (x**202) + L0x200199de_f * (x**203) + 
            L0x200199e0_f * (x**204) + L0x200199e2_f * (x**205) + 
            L0x200199e4_f * (x**206) + L0x200199e6_f * (x**207) + 
            L0x200199e8_f * (x**208) + L0x200199ea_f * (x**209) + 
            L0x200199ec_f * (x**210) + L0x200199ee_f * (x**211) + 
            L0x200199f0_f * (x**212) + L0x200199f2_f * (x**213) + 
            L0x200199f4_f * (x**214) + L0x200199f6_f * (x**215) + 
            L0x200199f8_f * (x**216) + L0x200199fa_f * (x**217) + 
            L0x200199fc_f * (x**218) + L0x200199fe_f * (x**219) + 
            L0x20019a00_f * (x**220) + L0x20019a02_f * (x**221) + 
            L0x20019a04_f * (x**222) + L0x20019a06_f * (x**223) + 
            L0x20019a08_f * (x**224) + L0x20019a0a_f * (x**225) + 
            L0x20019a0c_f * (x**226) + L0x20019a0e_f * (x**227) + 
            L0x20019a10_f * (x**228) + L0x20019a12_f * (x**229) + 
            L0x20019a14_f * (x**230) + L0x20019a16_f * (x**231) + 
            L0x20019a18_f * (x**232) + L0x20019a1a_f * (x**233) + 
            L0x20019a1c_f * (x**234) + L0x20019a1e_f * (x**235) + 
            L0x20019a20_f * (x**236) + L0x20019a22_f * (x**237) + 
            L0x20019a24_f * (x**238) + L0x20019a26_f * (x**239) + 
            L0x20019a28_f * (x**240) + L0x20019a2a_f * (x**241) + 
            L0x20019a2c_f * (x**242) + L0x20019a2e_f * (x**243) + 
            L0x20019a30_f * (x**244) + L0x20019a32_f * (x**245) + 
            L0x20019a34_f * (x**246) + L0x20019a36_f * (x**247) + 
            L0x20019a38_f * (x**248) + L0x20019a3a_f * (x**249) + 
            L0x20019a3c_f * (x**250) + L0x20019a3e_f * (x**251) + 
            L0x20019a40_f * (x**252) + L0x20019a42_f * (x**253) + 
            L0x20019a44_f * (x**254) + L0x20019a46_f * (x**255)
          )
          [25570049, x**4 - 6706041],
    (* inp_poly_62 *)
    eqmod (2**32) * (inp_poly_62 * inp_poly_62)
          (
            L0x20019848_f * (x**0) + L0x2001984a_f * (x**1) + 
            L0x2001984c_f * (x**2) + L0x2001984e_f * (x**3) + 
            L0x20019850_f * (x**4) + L0x20019852_f * (x**5) + 
            L0x20019854_f * (x**6) + L0x20019856_f * (x**7) + 
            L0x20019858_f * (x**8) + L0x2001985a_f * (x**9) + 
            L0x2001985c_f * (x**10) + L0x2001985e_f * (x**11) + 
            L0x20019860_f * (x**12) + L0x20019862_f * (x**13) + 
            L0x20019864_f * (x**14) + L0x20019866_f * (x**15) + 
            L0x20019868_f * (x**16) + L0x2001986a_f * (x**17) + 
            L0x2001986c_f * (x**18) + L0x2001986e_f * (x**19) + 
            L0x20019870_f * (x**20) + L0x20019872_f * (x**21) + 
            L0x20019874_f * (x**22) + L0x20019876_f * (x**23) + 
            L0x20019878_f * (x**24) + L0x2001987a_f * (x**25) + 
            L0x2001987c_f * (x**26) + L0x2001987e_f * (x**27) + 
            L0x20019880_f * (x**28) + L0x20019882_f * (x**29) + 
            L0x20019884_f * (x**30) + L0x20019886_f * (x**31) + 
            L0x20019888_f * (x**32) + L0x2001988a_f * (x**33) + 
            L0x2001988c_f * (x**34) + L0x2001988e_f * (x**35) + 
            L0x20019890_f * (x**36) + L0x20019892_f * (x**37) + 
            L0x20019894_f * (x**38) + L0x20019896_f * (x**39) + 
            L0x20019898_f * (x**40) + L0x2001989a_f * (x**41) + 
            L0x2001989c_f * (x**42) + L0x2001989e_f * (x**43) + 
            L0x200198a0_f * (x**44) + L0x200198a2_f * (x**45) + 
            L0x200198a4_f * (x**46) + L0x200198a6_f * (x**47) + 
            L0x200198a8_f * (x**48) + L0x200198aa_f * (x**49) + 
            L0x200198ac_f * (x**50) + L0x200198ae_f * (x**51) + 
            L0x200198b0_f * (x**52) + L0x200198b2_f * (x**53) + 
            L0x200198b4_f * (x**54) + L0x200198b6_f * (x**55) + 
            L0x200198b8_f * (x**56) + L0x200198ba_f * (x**57) + 
            L0x200198bc_f * (x**58) + L0x200198be_f * (x**59) + 
            L0x200198c0_f * (x**60) + L0x200198c2_f * (x**61) + 
            L0x200198c4_f * (x**62) + L0x200198c6_f * (x**63) + 
            L0x200198c8_f * (x**64) + L0x200198ca_f * (x**65) + 
            L0x200198cc_f * (x**66) + L0x200198ce_f * (x**67) + 
            L0x200198d0_f * (x**68) + L0x200198d2_f * (x**69) + 
            L0x200198d4_f * (x**70) + L0x200198d6_f * (x**71) + 
            L0x200198d8_f * (x**72) + L0x200198da_f * (x**73) + 
            L0x200198dc_f * (x**74) + L0x200198de_f * (x**75) + 
            L0x200198e0_f * (x**76) + L0x200198e2_f * (x**77) + 
            L0x200198e4_f * (x**78) + L0x200198e6_f * (x**79) + 
            L0x200198e8_f * (x**80) + L0x200198ea_f * (x**81) + 
            L0x200198ec_f * (x**82) + L0x200198ee_f * (x**83) + 
            L0x200198f0_f * (x**84) + L0x200198f2_f * (x**85) + 
            L0x200198f4_f * (x**86) + L0x200198f6_f * (x**87) + 
            L0x200198f8_f * (x**88) + L0x200198fa_f * (x**89) + 
            L0x200198fc_f * (x**90) + L0x200198fe_f * (x**91) + 
            L0x20019900_f * (x**92) + L0x20019902_f * (x**93) + 
            L0x20019904_f * (x**94) + L0x20019906_f * (x**95) + 
            L0x20019908_f * (x**96) + L0x2001990a_f * (x**97) + 
            L0x2001990c_f * (x**98) + L0x2001990e_f * (x**99) + 
            L0x20019910_f * (x**100) + L0x20019912_f * (x**101) + 
            L0x20019914_f * (x**102) + L0x20019916_f * (x**103) + 
            L0x20019918_f * (x**104) + L0x2001991a_f * (x**105) + 
            L0x2001991c_f * (x**106) + L0x2001991e_f * (x**107) + 
            L0x20019920_f * (x**108) + L0x20019922_f * (x**109) + 
            L0x20019924_f * (x**110) + L0x20019926_f * (x**111) + 
            L0x20019928_f * (x**112) + L0x2001992a_f * (x**113) + 
            L0x2001992c_f * (x**114) + L0x2001992e_f * (x**115) + 
            L0x20019930_f * (x**116) + L0x20019932_f * (x**117) + 
            L0x20019934_f * (x**118) + L0x20019936_f * (x**119) + 
            L0x20019938_f * (x**120) + L0x2001993a_f * (x**121) + 
            L0x2001993c_f * (x**122) + L0x2001993e_f * (x**123) + 
            L0x20019940_f * (x**124) + L0x20019942_f * (x**125) + 
            L0x20019944_f * (x**126) + L0x20019946_f * (x**127) + 
            L0x20019948_f * (x**128) + L0x2001994a_f * (x**129) + 
            L0x2001994c_f * (x**130) + L0x2001994e_f * (x**131) + 
            L0x20019950_f * (x**132) + L0x20019952_f * (x**133) + 
            L0x20019954_f * (x**134) + L0x20019956_f * (x**135) + 
            L0x20019958_f * (x**136) + L0x2001995a_f * (x**137) + 
            L0x2001995c_f * (x**138) + L0x2001995e_f * (x**139) + 
            L0x20019960_f * (x**140) + L0x20019962_f * (x**141) + 
            L0x20019964_f * (x**142) + L0x20019966_f * (x**143) + 
            L0x20019968_f * (x**144) + L0x2001996a_f * (x**145) + 
            L0x2001996c_f * (x**146) + L0x2001996e_f * (x**147) + 
            L0x20019970_f * (x**148) + L0x20019972_f * (x**149) + 
            L0x20019974_f * (x**150) + L0x20019976_f * (x**151) + 
            L0x20019978_f * (x**152) + L0x2001997a_f * (x**153) + 
            L0x2001997c_f * (x**154) + L0x2001997e_f * (x**155) + 
            L0x20019980_f * (x**156) + L0x20019982_f * (x**157) + 
            L0x20019984_f * (x**158) + L0x20019986_f * (x**159) + 
            L0x20019988_f * (x**160) + L0x2001998a_f * (x**161) + 
            L0x2001998c_f * (x**162) + L0x2001998e_f * (x**163) + 
            L0x20019990_f * (x**164) + L0x20019992_f * (x**165) + 
            L0x20019994_f * (x**166) + L0x20019996_f * (x**167) + 
            L0x20019998_f * (x**168) + L0x2001999a_f * (x**169) + 
            L0x2001999c_f * (x**170) + L0x2001999e_f * (x**171) + 
            L0x200199a0_f * (x**172) + L0x200199a2_f * (x**173) + 
            L0x200199a4_f * (x**174) + L0x200199a6_f * (x**175) + 
            L0x200199a8_f * (x**176) + L0x200199aa_f * (x**177) + 
            L0x200199ac_f * (x**178) + L0x200199ae_f * (x**179) + 
            L0x200199b0_f * (x**180) + L0x200199b2_f * (x**181) + 
            L0x200199b4_f * (x**182) + L0x200199b6_f * (x**183) + 
            L0x200199b8_f * (x**184) + L0x200199ba_f * (x**185) + 
            L0x200199bc_f * (x**186) + L0x200199be_f * (x**187) + 
            L0x200199c0_f * (x**188) + L0x200199c2_f * (x**189) + 
            L0x200199c4_f * (x**190) + L0x200199c6_f * (x**191) + 
            L0x200199c8_f * (x**192) + L0x200199ca_f * (x**193) + 
            L0x200199cc_f * (x**194) + L0x200199ce_f * (x**195) + 
            L0x200199d0_f * (x**196) + L0x200199d2_f * (x**197) + 
            L0x200199d4_f * (x**198) + L0x200199d6_f * (x**199) + 
            L0x200199d8_f * (x**200) + L0x200199da_f * (x**201) + 
            L0x200199dc_f * (x**202) + L0x200199de_f * (x**203) + 
            L0x200199e0_f * (x**204) + L0x200199e2_f * (x**205) + 
            L0x200199e4_f * (x**206) + L0x200199e6_f * (x**207) + 
            L0x200199e8_f * (x**208) + L0x200199ea_f * (x**209) + 
            L0x200199ec_f * (x**210) + L0x200199ee_f * (x**211) + 
            L0x200199f0_f * (x**212) + L0x200199f2_f * (x**213) + 
            L0x200199f4_f * (x**214) + L0x200199f6_f * (x**215) + 
            L0x200199f8_f * (x**216) + L0x200199fa_f * (x**217) + 
            L0x200199fc_f * (x**218) + L0x200199fe_f * (x**219) + 
            L0x20019a00_f * (x**220) + L0x20019a02_f * (x**221) + 
            L0x20019a04_f * (x**222) + L0x20019a06_f * (x**223) + 
            L0x20019a08_f * (x**224) + L0x20019a0a_f * (x**225) + 
            L0x20019a0c_f * (x**226) + L0x20019a0e_f * (x**227) + 
            L0x20019a10_f * (x**228) + L0x20019a12_f * (x**229) + 
            L0x20019a14_f * (x**230) + L0x20019a16_f * (x**231) + 
            L0x20019a18_f * (x**232) + L0x20019a1a_f * (x**233) + 
            L0x20019a1c_f * (x**234) + L0x20019a1e_f * (x**235) + 
            L0x20019a20_f * (x**236) + L0x20019a22_f * (x**237) + 
            L0x20019a24_f * (x**238) + L0x20019a26_f * (x**239) + 
            L0x20019a28_f * (x**240) + L0x20019a2a_f * (x**241) + 
            L0x20019a2c_f * (x**242) + L0x20019a2e_f * (x**243) + 
            L0x20019a30_f * (x**244) + L0x20019a32_f * (x**245) + 
            L0x20019a34_f * (x**246) + L0x20019a36_f * (x**247) + 
            L0x20019a38_f * (x**248) + L0x20019a3a_f * (x**249) + 
            L0x20019a3c_f * (x**250) + L0x20019a3e_f * (x**251) + 
            L0x20019a40_f * (x**252) + L0x20019a42_f * (x**253) + 
            L0x20019a44_f * (x**254) + L0x20019a46_f * (x**255)
          )
          [25570049, x**4 - 18761234],
    (* inp_poly_63 *)
    eqmod (2**32) * (inp_poly_63 * inp_poly_63)
          (
            L0x20019848_f * (x**0) + L0x2001984a_f * (x**1) + 
            L0x2001984c_f * (x**2) + L0x2001984e_f * (x**3) + 
            L0x20019850_f * (x**4) + L0x20019852_f * (x**5) + 
            L0x20019854_f * (x**6) + L0x20019856_f * (x**7) + 
            L0x20019858_f * (x**8) + L0x2001985a_f * (x**9) + 
            L0x2001985c_f * (x**10) + L0x2001985e_f * (x**11) + 
            L0x20019860_f * (x**12) + L0x20019862_f * (x**13) + 
            L0x20019864_f * (x**14) + L0x20019866_f * (x**15) + 
            L0x20019868_f * (x**16) + L0x2001986a_f * (x**17) + 
            L0x2001986c_f * (x**18) + L0x2001986e_f * (x**19) + 
            L0x20019870_f * (x**20) + L0x20019872_f * (x**21) + 
            L0x20019874_f * (x**22) + L0x20019876_f * (x**23) + 
            L0x20019878_f * (x**24) + L0x2001987a_f * (x**25) + 
            L0x2001987c_f * (x**26) + L0x2001987e_f * (x**27) + 
            L0x20019880_f * (x**28) + L0x20019882_f * (x**29) + 
            L0x20019884_f * (x**30) + L0x20019886_f * (x**31) + 
            L0x20019888_f * (x**32) + L0x2001988a_f * (x**33) + 
            L0x2001988c_f * (x**34) + L0x2001988e_f * (x**35) + 
            L0x20019890_f * (x**36) + L0x20019892_f * (x**37) + 
            L0x20019894_f * (x**38) + L0x20019896_f * (x**39) + 
            L0x20019898_f * (x**40) + L0x2001989a_f * (x**41) + 
            L0x2001989c_f * (x**42) + L0x2001989e_f * (x**43) + 
            L0x200198a0_f * (x**44) + L0x200198a2_f * (x**45) + 
            L0x200198a4_f * (x**46) + L0x200198a6_f * (x**47) + 
            L0x200198a8_f * (x**48) + L0x200198aa_f * (x**49) + 
            L0x200198ac_f * (x**50) + L0x200198ae_f * (x**51) + 
            L0x200198b0_f * (x**52) + L0x200198b2_f * (x**53) + 
            L0x200198b4_f * (x**54) + L0x200198b6_f * (x**55) + 
            L0x200198b8_f * (x**56) + L0x200198ba_f * (x**57) + 
            L0x200198bc_f * (x**58) + L0x200198be_f * (x**59) + 
            L0x200198c0_f * (x**60) + L0x200198c2_f * (x**61) + 
            L0x200198c4_f * (x**62) + L0x200198c6_f * (x**63) + 
            L0x200198c8_f * (x**64) + L0x200198ca_f * (x**65) + 
            L0x200198cc_f * (x**66) + L0x200198ce_f * (x**67) + 
            L0x200198d0_f * (x**68) + L0x200198d2_f * (x**69) + 
            L0x200198d4_f * (x**70) + L0x200198d6_f * (x**71) + 
            L0x200198d8_f * (x**72) + L0x200198da_f * (x**73) + 
            L0x200198dc_f * (x**74) + L0x200198de_f * (x**75) + 
            L0x200198e0_f * (x**76) + L0x200198e2_f * (x**77) + 
            L0x200198e4_f * (x**78) + L0x200198e6_f * (x**79) + 
            L0x200198e8_f * (x**80) + L0x200198ea_f * (x**81) + 
            L0x200198ec_f * (x**82) + L0x200198ee_f * (x**83) + 
            L0x200198f0_f * (x**84) + L0x200198f2_f * (x**85) + 
            L0x200198f4_f * (x**86) + L0x200198f6_f * (x**87) + 
            L0x200198f8_f * (x**88) + L0x200198fa_f * (x**89) + 
            L0x200198fc_f * (x**90) + L0x200198fe_f * (x**91) + 
            L0x20019900_f * (x**92) + L0x20019902_f * (x**93) + 
            L0x20019904_f * (x**94) + L0x20019906_f * (x**95) + 
            L0x20019908_f * (x**96) + L0x2001990a_f * (x**97) + 
            L0x2001990c_f * (x**98) + L0x2001990e_f * (x**99) + 
            L0x20019910_f * (x**100) + L0x20019912_f * (x**101) + 
            L0x20019914_f * (x**102) + L0x20019916_f * (x**103) + 
            L0x20019918_f * (x**104) + L0x2001991a_f * (x**105) + 
            L0x2001991c_f * (x**106) + L0x2001991e_f * (x**107) + 
            L0x20019920_f * (x**108) + L0x20019922_f * (x**109) + 
            L0x20019924_f * (x**110) + L0x20019926_f * (x**111) + 
            L0x20019928_f * (x**112) + L0x2001992a_f * (x**113) + 
            L0x2001992c_f * (x**114) + L0x2001992e_f * (x**115) + 
            L0x20019930_f * (x**116) + L0x20019932_f * (x**117) + 
            L0x20019934_f * (x**118) + L0x20019936_f * (x**119) + 
            L0x20019938_f * (x**120) + L0x2001993a_f * (x**121) + 
            L0x2001993c_f * (x**122) + L0x2001993e_f * (x**123) + 
            L0x20019940_f * (x**124) + L0x20019942_f * (x**125) + 
            L0x20019944_f * (x**126) + L0x20019946_f * (x**127) + 
            L0x20019948_f * (x**128) + L0x2001994a_f * (x**129) + 
            L0x2001994c_f * (x**130) + L0x2001994e_f * (x**131) + 
            L0x20019950_f * (x**132) + L0x20019952_f * (x**133) + 
            L0x20019954_f * (x**134) + L0x20019956_f * (x**135) + 
            L0x20019958_f * (x**136) + L0x2001995a_f * (x**137) + 
            L0x2001995c_f * (x**138) + L0x2001995e_f * (x**139) + 
            L0x20019960_f * (x**140) + L0x20019962_f * (x**141) + 
            L0x20019964_f * (x**142) + L0x20019966_f * (x**143) + 
            L0x20019968_f * (x**144) + L0x2001996a_f * (x**145) + 
            L0x2001996c_f * (x**146) + L0x2001996e_f * (x**147) + 
            L0x20019970_f * (x**148) + L0x20019972_f * (x**149) + 
            L0x20019974_f * (x**150) + L0x20019976_f * (x**151) + 
            L0x20019978_f * (x**152) + L0x2001997a_f * (x**153) + 
            L0x2001997c_f * (x**154) + L0x2001997e_f * (x**155) + 
            L0x20019980_f * (x**156) + L0x20019982_f * (x**157) + 
            L0x20019984_f * (x**158) + L0x20019986_f * (x**159) + 
            L0x20019988_f * (x**160) + L0x2001998a_f * (x**161) + 
            L0x2001998c_f * (x**162) + L0x2001998e_f * (x**163) + 
            L0x20019990_f * (x**164) + L0x20019992_f * (x**165) + 
            L0x20019994_f * (x**166) + L0x20019996_f * (x**167) + 
            L0x20019998_f * (x**168) + L0x2001999a_f * (x**169) + 
            L0x2001999c_f * (x**170) + L0x2001999e_f * (x**171) + 
            L0x200199a0_f * (x**172) + L0x200199a2_f * (x**173) + 
            L0x200199a4_f * (x**174) + L0x200199a6_f * (x**175) + 
            L0x200199a8_f * (x**176) + L0x200199aa_f * (x**177) + 
            L0x200199ac_f * (x**178) + L0x200199ae_f * (x**179) + 
            L0x200199b0_f * (x**180) + L0x200199b2_f * (x**181) + 
            L0x200199b4_f * (x**182) + L0x200199b6_f * (x**183) + 
            L0x200199b8_f * (x**184) + L0x200199ba_f * (x**185) + 
            L0x200199bc_f * (x**186) + L0x200199be_f * (x**187) + 
            L0x200199c0_f * (x**188) + L0x200199c2_f * (x**189) + 
            L0x200199c4_f * (x**190) + L0x200199c6_f * (x**191) + 
            L0x200199c8_f * (x**192) + L0x200199ca_f * (x**193) + 
            L0x200199cc_f * (x**194) + L0x200199ce_f * (x**195) + 
            L0x200199d0_f * (x**196) + L0x200199d2_f * (x**197) + 
            L0x200199d4_f * (x**198) + L0x200199d6_f * (x**199) + 
            L0x200199d8_f * (x**200) + L0x200199da_f * (x**201) + 
            L0x200199dc_f * (x**202) + L0x200199de_f * (x**203) + 
            L0x200199e0_f * (x**204) + L0x200199e2_f * (x**205) + 
            L0x200199e4_f * (x**206) + L0x200199e6_f * (x**207) + 
            L0x200199e8_f * (x**208) + L0x200199ea_f * (x**209) + 
            L0x200199ec_f * (x**210) + L0x200199ee_f * (x**211) + 
            L0x200199f0_f * (x**212) + L0x200199f2_f * (x**213) + 
            L0x200199f4_f * (x**214) + L0x200199f6_f * (x**215) + 
            L0x200199f8_f * (x**216) + L0x200199fa_f * (x**217) + 
            L0x200199fc_f * (x**218) + L0x200199fe_f * (x**219) + 
            L0x20019a00_f * (x**220) + L0x20019a02_f * (x**221) + 
            L0x20019a04_f * (x**222) + L0x20019a06_f * (x**223) + 
            L0x20019a08_f * (x**224) + L0x20019a0a_f * (x**225) + 
            L0x20019a0c_f * (x**226) + L0x20019a0e_f * (x**227) + 
            L0x20019a10_f * (x**228) + L0x20019a12_f * (x**229) + 
            L0x20019a14_f * (x**230) + L0x20019a16_f * (x**231) + 
            L0x20019a18_f * (x**232) + L0x20019a1a_f * (x**233) + 
            L0x20019a1c_f * (x**234) + L0x20019a1e_f * (x**235) + 
            L0x20019a20_f * (x**236) + L0x20019a22_f * (x**237) + 
            L0x20019a24_f * (x**238) + L0x20019a26_f * (x**239) + 
            L0x20019a28_f * (x**240) + L0x20019a2a_f * (x**241) + 
            L0x20019a2c_f * (x**242) + L0x20019a2e_f * (x**243) + 
            L0x20019a30_f * (x**244) + L0x20019a32_f * (x**245) + 
            L0x20019a34_f * (x**246) + L0x20019a36_f * (x**247) + 
            L0x20019a38_f * (x**248) + L0x20019a3a_f * (x**249) + 
            L0x20019a3c_f * (x**250) + L0x20019a3e_f * (x**251) + 
            L0x20019a40_f * (x**252) + L0x20019a42_f * (x**253) + 
            L0x20019a44_f * (x**254) + L0x20019a46_f * (x**255)
          )
          [25570049, x**4 - 6808815],
    (* = relation between final output and output of iNTT = *)
    eqmod (
            L0x20019848 * (x**0) + L0x2001984a * (x**1) + 
            L0x2001984c * (x**2) + L0x2001984e * (x**3) + 
            L0x20019850 * (x**4) + L0x20019852 * (x**5) + 
            L0x20019854 * (x**6) + L0x20019856 * (x**7) + 
            L0x20019858 * (x**8) + L0x2001985a * (x**9) + 
            L0x2001985c * (x**10) + L0x2001985e * (x**11) + 
            L0x20019860 * (x**12) + L0x20019862 * (x**13) + 
            L0x20019864 * (x**14) + L0x20019866 * (x**15) + 
            L0x20019868 * (x**16) + L0x2001986a * (x**17) + 
            L0x2001986c * (x**18) + L0x2001986e * (x**19) + 
            L0x20019870 * (x**20) + L0x20019872 * (x**21) + 
            L0x20019874 * (x**22) + L0x20019876 * (x**23) + 
            L0x20019878 * (x**24) + L0x2001987a * (x**25) + 
            L0x2001987c * (x**26) + L0x2001987e * (x**27) + 
            L0x20019880 * (x**28) + L0x20019882 * (x**29) + 
            L0x20019884 * (x**30) + L0x20019886 * (x**31) + 
            L0x20019888 * (x**32) + L0x2001988a * (x**33) + 
            L0x2001988c * (x**34) + L0x2001988e * (x**35) + 
            L0x20019890 * (x**36) + L0x20019892 * (x**37) + 
            L0x20019894 * (x**38) + L0x20019896 * (x**39) + 
            L0x20019898 * (x**40) + L0x2001989a * (x**41) + 
            L0x2001989c * (x**42) + L0x2001989e * (x**43) + 
            L0x200198a0 * (x**44) + L0x200198a2 * (x**45) + 
            L0x200198a4 * (x**46) + L0x200198a6 * (x**47) + 
            L0x200198a8 * (x**48) + L0x200198aa * (x**49) + 
            L0x200198ac * (x**50) + L0x200198ae * (x**51) + 
            L0x200198b0 * (x**52) + L0x200198b2 * (x**53) + 
            L0x200198b4 * (x**54) + L0x200198b6 * (x**55) + 
            L0x200198b8 * (x**56) + L0x200198ba * (x**57) + 
            L0x200198bc * (x**58) + L0x200198be * (x**59) + 
            L0x200198c0 * (x**60) + L0x200198c2 * (x**61) + 
            L0x200198c4 * (x**62) + L0x200198c6 * (x**63) + 
            L0x200198c8 * (x**64) + L0x200198ca * (x**65) + 
            L0x200198cc * (x**66) + L0x200198ce * (x**67) + 
            L0x200198d0 * (x**68) + L0x200198d2 * (x**69) + 
            L0x200198d4 * (x**70) + L0x200198d6 * (x**71) + 
            L0x200198d8 * (x**72) + L0x200198da * (x**73) + 
            L0x200198dc * (x**74) + L0x200198de * (x**75) + 
            L0x200198e0 * (x**76) + L0x200198e2 * (x**77) + 
            L0x200198e4 * (x**78) + L0x200198e6 * (x**79) + 
            L0x200198e8 * (x**80) + L0x200198ea * (x**81) + 
            L0x200198ec * (x**82) + L0x200198ee * (x**83) + 
            L0x200198f0 * (x**84) + L0x200198f2 * (x**85) + 
            L0x200198f4 * (x**86) + L0x200198f6 * (x**87) + 
            L0x200198f8 * (x**88) + L0x200198fa * (x**89) + 
            L0x200198fc * (x**90) + L0x200198fe * (x**91) + 
            L0x20019900 * (x**92) + L0x20019902 * (x**93) + 
            L0x20019904 * (x**94) + L0x20019906 * (x**95) + 
            L0x20019908 * (x**96) + L0x2001990a * (x**97) + 
            L0x2001990c * (x**98) + L0x2001990e * (x**99) + 
            L0x20019910 * (x**100) + L0x20019912 * (x**101) + 
            L0x20019914 * (x**102) + L0x20019916 * (x**103) + 
            L0x20019918 * (x**104) + L0x2001991a * (x**105) + 
            L0x2001991c * (x**106) + L0x2001991e * (x**107) + 
            L0x20019920 * (x**108) + L0x20019922 * (x**109) + 
            L0x20019924 * (x**110) + L0x20019926 * (x**111) + 
            L0x20019928 * (x**112) + L0x2001992a * (x**113) + 
            L0x2001992c * (x**114) + L0x2001992e * (x**115) + 
            L0x20019930 * (x**116) + L0x20019932 * (x**117) + 
            L0x20019934 * (x**118) + L0x20019936 * (x**119) + 
            L0x20019938 * (x**120) + L0x2001993a * (x**121) + 
            L0x2001993c * (x**122) + L0x2001993e * (x**123) + 
            L0x20019940 * (x**124) + L0x20019942 * (x**125) + 
            L0x20019944 * (x**126) + L0x20019946 * (x**127) + 
            L0x20019948 * (x**128) + L0x2001994a * (x**129) + 
            L0x2001994c * (x**130) + L0x2001994e * (x**131) + 
            L0x20019950 * (x**132) + L0x20019952 * (x**133) + 
            L0x20019954 * (x**134) + L0x20019956 * (x**135) + 
            L0x20019958 * (x**136) + L0x2001995a * (x**137) + 
            L0x2001995c * (x**138) + L0x2001995e * (x**139) + 
            L0x20019960 * (x**140) + L0x20019962 * (x**141) + 
            L0x20019964 * (x**142) + L0x20019966 * (x**143) + 
            L0x20019968 * (x**144) + L0x2001996a * (x**145) + 
            L0x2001996c * (x**146) + L0x2001996e * (x**147) + 
            L0x20019970 * (x**148) + L0x20019972 * (x**149) + 
            L0x20019974 * (x**150) + L0x20019976 * (x**151) + 
            L0x20019978 * (x**152) + L0x2001997a * (x**153) + 
            L0x2001997c * (x**154) + L0x2001997e * (x**155) + 
            L0x20019980 * (x**156) + L0x20019982 * (x**157) + 
            L0x20019984 * (x**158) + L0x20019986 * (x**159) + 
            L0x20019988 * (x**160) + L0x2001998a * (x**161) + 
            L0x2001998c * (x**162) + L0x2001998e * (x**163) + 
            L0x20019990 * (x**164) + L0x20019992 * (x**165) + 
            L0x20019994 * (x**166) + L0x20019996 * (x**167) + 
            L0x20019998 * (x**168) + L0x2001999a * (x**169) + 
            L0x2001999c * (x**170) + L0x2001999e * (x**171) + 
            L0x200199a0 * (x**172) + L0x200199a2 * (x**173) + 
            L0x200199a4 * (x**174) + L0x200199a6 * (x**175) + 
            L0x200199a8 * (x**176) + L0x200199aa * (x**177) + 
            L0x200199ac * (x**178) + L0x200199ae * (x**179) + 
            L0x200199b0 * (x**180) + L0x200199b2 * (x**181) + 
            L0x200199b4 * (x**182) + L0x200199b6 * (x**183) + 
            L0x200199b8 * (x**184) + L0x200199ba * (x**185) + 
            L0x200199bc * (x**186) + L0x200199be * (x**187) + 
            L0x200199c0 * (x**188) + L0x200199c2 * (x**189) + 
            L0x200199c4 * (x**190) + L0x200199c6 * (x**191) + 
            L0x200199c8 * (x**192) + L0x200199ca * (x**193) + 
            L0x200199cc * (x**194) + L0x200199ce * (x**195) + 
            L0x200199d0 * (x**196) + L0x200199d2 * (x**197) + 
            L0x200199d4 * (x**198) + L0x200199d6 * (x**199) + 
            L0x200199d8 * (x**200) + L0x200199da * (x**201) + 
            L0x200199dc * (x**202) + L0x200199de * (x**203) + 
            L0x200199e0 * (x**204) + L0x200199e2 * (x**205) + 
            L0x200199e4 * (x**206) + L0x200199e6 * (x**207) + 
            L0x200199e8 * (x**208) + L0x200199ea * (x**209) + 
            L0x200199ec * (x**210) + L0x200199ee * (x**211) + 
            L0x200199f0 * (x**212) + L0x200199f2 * (x**213) + 
            L0x200199f4 * (x**214) + L0x200199f6 * (x**215) + 
            L0x200199f8 * (x**216) + L0x200199fa * (x**217) + 
            L0x200199fc * (x**218) + L0x200199fe * (x**219) + 
            L0x20019a00 * (x**220) + L0x20019a02 * (x**221) + 
            L0x20019a04 * (x**222) + L0x20019a06 * (x**223) + 
            L0x20019a08 * (x**224) + L0x20019a0a * (x**225) + 
            L0x20019a0c * (x**226) + L0x20019a0e * (x**227) + 
            L0x20019a10 * (x**228) + L0x20019a12 * (x**229) + 
            L0x20019a14 * (x**230) + L0x20019a16 * (x**231) + 
            L0x20019a18 * (x**232) + L0x20019a1a * (x**233) + 
            L0x20019a1c * (x**234) + L0x20019a1e * (x**235) + 
            L0x20019a20 * (x**236) + L0x20019a22 * (x**237) + 
            L0x20019a24 * (x**238) + L0x20019a26 * (x**239) + 
            L0x20019a28 * (x**240) + L0x20019a2a * (x**241) + 
            L0x20019a2c * (x**242) + L0x20019a2e * (x**243) + 
            L0x20019a30 * (x**244) + L0x20019a32 * (x**245) + 
            L0x20019a34 * (x**246) + L0x20019a36 * (x**247) + 
            L0x20019a38 * (x**248) + L0x20019a3a * (x**249) + 
            L0x20019a3c * (x**250) + L0x20019a3e * (x**251) + 
            L0x20019a40 * (x**252) + L0x20019a42 * (x**253) + 
            L0x20019a44 * (x**254) + L0x20019a46 * (x**255)
          )
          (
            L0x20019848_f * (x**0) + L0x2001984a_f * (x**1) + 
            L0x2001984c_f * (x**2) + L0x2001984e_f * (x**3) + 
            L0x20019850_f * (x**4) + L0x20019852_f * (x**5) + 
            L0x20019854_f * (x**6) + L0x20019856_f * (x**7) + 
            L0x20019858_f * (x**8) + L0x2001985a_f * (x**9) + 
            L0x2001985c_f * (x**10) + L0x2001985e_f * (x**11) + 
            L0x20019860_f * (x**12) + L0x20019862_f * (x**13) + 
            L0x20019864_f * (x**14) + L0x20019866_f * (x**15) + 
            L0x20019868_f * (x**16) + L0x2001986a_f * (x**17) + 
            L0x2001986c_f * (x**18) + L0x2001986e_f * (x**19) + 
            L0x20019870_f * (x**20) + L0x20019872_f * (x**21) + 
            L0x20019874_f * (x**22) + L0x20019876_f * (x**23) + 
            L0x20019878_f * (x**24) + L0x2001987a_f * (x**25) + 
            L0x2001987c_f * (x**26) + L0x2001987e_f * (x**27) + 
            L0x20019880_f * (x**28) + L0x20019882_f * (x**29) + 
            L0x20019884_f * (x**30) + L0x20019886_f * (x**31) + 
            L0x20019888_f * (x**32) + L0x2001988a_f * (x**33) + 
            L0x2001988c_f * (x**34) + L0x2001988e_f * (x**35) + 
            L0x20019890_f * (x**36) + L0x20019892_f * (x**37) + 
            L0x20019894_f * (x**38) + L0x20019896_f * (x**39) + 
            L0x20019898_f * (x**40) + L0x2001989a_f * (x**41) + 
            L0x2001989c_f * (x**42) + L0x2001989e_f * (x**43) + 
            L0x200198a0_f * (x**44) + L0x200198a2_f * (x**45) + 
            L0x200198a4_f * (x**46) + L0x200198a6_f * (x**47) + 
            L0x200198a8_f * (x**48) + L0x200198aa_f * (x**49) + 
            L0x200198ac_f * (x**50) + L0x200198ae_f * (x**51) + 
            L0x200198b0_f * (x**52) + L0x200198b2_f * (x**53) + 
            L0x200198b4_f * (x**54) + L0x200198b6_f * (x**55) + 
            L0x200198b8_f * (x**56) + L0x200198ba_f * (x**57) + 
            L0x200198bc_f * (x**58) + L0x200198be_f * (x**59) + 
            L0x200198c0_f * (x**60) + L0x200198c2_f * (x**61) + 
            L0x200198c4_f * (x**62) + L0x200198c6_f * (x**63) + 
            L0x200198c8_f * (x**64) + L0x200198ca_f * (x**65) + 
            L0x200198cc_f * (x**66) + L0x200198ce_f * (x**67) + 
            L0x200198d0_f * (x**68) + L0x200198d2_f * (x**69) + 
            L0x200198d4_f * (x**70) + L0x200198d6_f * (x**71) + 
            L0x200198d8_f * (x**72) + L0x200198da_f * (x**73) + 
            L0x200198dc_f * (x**74) + L0x200198de_f * (x**75) + 
            L0x200198e0_f * (x**76) + L0x200198e2_f * (x**77) + 
            L0x200198e4_f * (x**78) + L0x200198e6_f * (x**79) + 
            L0x200198e8_f * (x**80) + L0x200198ea_f * (x**81) + 
            L0x200198ec_f * (x**82) + L0x200198ee_f * (x**83) + 
            L0x200198f0_f * (x**84) + L0x200198f2_f * (x**85) + 
            L0x200198f4_f * (x**86) + L0x200198f6_f * (x**87) + 
            L0x200198f8_f * (x**88) + L0x200198fa_f * (x**89) + 
            L0x200198fc_f * (x**90) + L0x200198fe_f * (x**91) + 
            L0x20019900_f * (x**92) + L0x20019902_f * (x**93) + 
            L0x20019904_f * (x**94) + L0x20019906_f * (x**95) + 
            L0x20019908_f * (x**96) + L0x2001990a_f * (x**97) + 
            L0x2001990c_f * (x**98) + L0x2001990e_f * (x**99) + 
            L0x20019910_f * (x**100) + L0x20019912_f * (x**101) + 
            L0x20019914_f * (x**102) + L0x20019916_f * (x**103) + 
            L0x20019918_f * (x**104) + L0x2001991a_f * (x**105) + 
            L0x2001991c_f * (x**106) + L0x2001991e_f * (x**107) + 
            L0x20019920_f * (x**108) + L0x20019922_f * (x**109) + 
            L0x20019924_f * (x**110) + L0x20019926_f * (x**111) + 
            L0x20019928_f * (x**112) + L0x2001992a_f * (x**113) + 
            L0x2001992c_f * (x**114) + L0x2001992e_f * (x**115) + 
            L0x20019930_f * (x**116) + L0x20019932_f * (x**117) + 
            L0x20019934_f * (x**118) + L0x20019936_f * (x**119) + 
            L0x20019938_f * (x**120) + L0x2001993a_f * (x**121) + 
            L0x2001993c_f * (x**122) + L0x2001993e_f * (x**123) + 
            L0x20019940_f * (x**124) + L0x20019942_f * (x**125) + 
            L0x20019944_f * (x**126) + L0x20019946_f * (x**127) + 
            L0x20019948_f * (x**128) + L0x2001994a_f * (x**129) + 
            L0x2001994c_f * (x**130) + L0x2001994e_f * (x**131) + 
            L0x20019950_f * (x**132) + L0x20019952_f * (x**133) + 
            L0x20019954_f * (x**134) + L0x20019956_f * (x**135) + 
            L0x20019958_f * (x**136) + L0x2001995a_f * (x**137) + 
            L0x2001995c_f * (x**138) + L0x2001995e_f * (x**139) + 
            L0x20019960_f * (x**140) + L0x20019962_f * (x**141) + 
            L0x20019964_f * (x**142) + L0x20019966_f * (x**143) + 
            L0x20019968_f * (x**144) + L0x2001996a_f * (x**145) + 
            L0x2001996c_f * (x**146) + L0x2001996e_f * (x**147) + 
            L0x20019970_f * (x**148) + L0x20019972_f * (x**149) + 
            L0x20019974_f * (x**150) + L0x20019976_f * (x**151) + 
            L0x20019978_f * (x**152) + L0x2001997a_f * (x**153) + 
            L0x2001997c_f * (x**154) + L0x2001997e_f * (x**155) + 
            L0x20019980_f * (x**156) + L0x20019982_f * (x**157) + 
            L0x20019984_f * (x**158) + L0x20019986_f * (x**159) + 
            L0x20019988_f * (x**160) + L0x2001998a_f * (x**161) + 
            L0x2001998c_f * (x**162) + L0x2001998e_f * (x**163) + 
            L0x20019990_f * (x**164) + L0x20019992_f * (x**165) + 
            L0x20019994_f * (x**166) + L0x20019996_f * (x**167) + 
            L0x20019998_f * (x**168) + L0x2001999a_f * (x**169) + 
            L0x2001999c_f * (x**170) + L0x2001999e_f * (x**171) + 
            L0x200199a0_f * (x**172) + L0x200199a2_f * (x**173) + 
            L0x200199a4_f * (x**174) + L0x200199a6_f * (x**175) + 
            L0x200199a8_f * (x**176) + L0x200199aa_f * (x**177) + 
            L0x200199ac_f * (x**178) + L0x200199ae_f * (x**179) + 
            L0x200199b0_f * (x**180) + L0x200199b2_f * (x**181) + 
            L0x200199b4_f * (x**182) + L0x200199b6_f * (x**183) + 
            L0x200199b8_f * (x**184) + L0x200199ba_f * (x**185) + 
            L0x200199bc_f * (x**186) + L0x200199be_f * (x**187) + 
            L0x200199c0_f * (x**188) + L0x200199c2_f * (x**189) + 
            L0x200199c4_f * (x**190) + L0x200199c6_f * (x**191) + 
            L0x200199c8_f * (x**192) + L0x200199ca_f * (x**193) + 
            L0x200199cc_f * (x**194) + L0x200199ce_f * (x**195) + 
            L0x200199d0_f * (x**196) + L0x200199d2_f * (x**197) + 
            L0x200199d4_f * (x**198) + L0x200199d6_f * (x**199) + 
            L0x200199d8_f * (x**200) + L0x200199da_f * (x**201) + 
            L0x200199dc_f * (x**202) + L0x200199de_f * (x**203) + 
            L0x200199e0_f * (x**204) + L0x200199e2_f * (x**205) + 
            L0x200199e4_f * (x**206) + L0x200199e6_f * (x**207) + 
            L0x200199e8_f * (x**208) + L0x200199ea_f * (x**209) + 
            L0x200199ec_f * (x**210) + L0x200199ee_f * (x**211) + 
            L0x200199f0_f * (x**212) + L0x200199f2_f * (x**213) + 
            L0x200199f4_f * (x**214) + L0x200199f6_f * (x**215) + 
            L0x200199f8_f * (x**216) + L0x200199fa_f * (x**217) + 
            L0x200199fc_f * (x**218) + L0x200199fe_f * (x**219) + 
            L0x20019a00_f * (x**220) + L0x20019a02_f * (x**221) + 
            L0x20019a04_f * (x**222) + L0x20019a06_f * (x**223) + 
            L0x20019a08_f * (x**224) + L0x20019a0a_f * (x**225) + 
            L0x20019a0c_f * (x**226) + L0x20019a0e_f * (x**227) + 
            L0x20019a10_f * (x**228) + L0x20019a12_f * (x**229) + 
            L0x20019a14_f * (x**230) + L0x20019a16_f * (x**231) + 
            L0x20019a18_f * (x**232) + L0x20019a1a_f * (x**233) + 
            L0x20019a1c_f * (x**234) + L0x20019a1e_f * (x**235) + 
            L0x20019a20_f * (x**236) + L0x20019a22_f * (x**237) + 
            L0x20019a24_f * (x**238) + L0x20019a26_f * (x**239) + 
            L0x20019a28_f * (x**240) + L0x20019a2a_f * (x**241) + 
            L0x20019a2c_f * (x**242) + L0x20019a2e_f * (x**243) + 
            L0x20019a30_f * (x**244) + L0x20019a32_f * (x**245) + 
            L0x20019a34_f * (x**246) + L0x20019a36_f * (x**247) + 
            L0x20019a38_f * (x**248) + L0x20019a3a_f * (x**249) + 
            L0x20019a3c_f * (x**250) + L0x20019a3e_f * (x**251) + 
            L0x20019a40_f * (x**252) + L0x20019a42_f * (x**253) + 
            L0x20019a44_f * (x**254) + L0x20019a46_f * (x**255)
          )
          [2**13]
  ] prove with [cuts [72, 74, 76, 78, 80, 82, 84, 86, 88]]
  &&
  (* range *)
  and [
    (-12785024)@32 <=s L0x20019848_f, L0x20019848_f <=s 12785024@32,
    (-12785024)@32 <=s L0x2001984a_f, L0x2001984a_f <=s 12785024@32,
    (-12785024)@32 <=s L0x2001984c_f, L0x2001984c_f <=s 12785024@32,
    (-12785024)@32 <=s L0x2001984e_f, L0x2001984e_f <=s 12785024@32,
    (-12785024)@32 <=s L0x20019850_f, L0x20019850_f <=s 12785024@32,
    (-12785024)@32 <=s L0x20019852_f, L0x20019852_f <=s 12785024@32,
    (-12785024)@32 <=s L0x20019854_f, L0x20019854_f <=s 12785024@32,
    (-12785024)@32 <=s L0x20019856_f, L0x20019856_f <=s 12785024@32,
    (-12785024)@32 <=s L0x20019858_f, L0x20019858_f <=s 12785024@32,
    (-12785024)@32 <=s L0x2001985a_f, L0x2001985a_f <=s 12785024@32,
    (-12785024)@32 <=s L0x2001985c_f, L0x2001985c_f <=s 12785024@32,
    (-12785024)@32 <=s L0x2001985e_f, L0x2001985e_f <=s 12785024@32,
    (-12785024)@32 <=s L0x20019860_f, L0x20019860_f <=s 12785024@32,
    (-12785024)@32 <=s L0x20019862_f, L0x20019862_f <=s 12785024@32,
    (-12785024)@32 <=s L0x20019864_f, L0x20019864_f <=s 12785024@32,
    (-12785024)@32 <=s L0x20019866_f, L0x20019866_f <=s 12785024@32,
    (-12785024)@32 <=s L0x20019868_f, L0x20019868_f <=s 12785024@32,
    (-12785024)@32 <=s L0x2001986a_f, L0x2001986a_f <=s 12785024@32,
    (-12785024)@32 <=s L0x2001986c_f, L0x2001986c_f <=s 12785024@32,
    (-12785024)@32 <=s L0x2001986e_f, L0x2001986e_f <=s 12785024@32,
    (-12785024)@32 <=s L0x20019870_f, L0x20019870_f <=s 12785024@32,
    (-12785024)@32 <=s L0x20019872_f, L0x20019872_f <=s 12785024@32,
    (-12785024)@32 <=s L0x20019874_f, L0x20019874_f <=s 12785024@32,
    (-12785024)@32 <=s L0x20019876_f, L0x20019876_f <=s 12785024@32,
    (-12785024)@32 <=s L0x20019878_f, L0x20019878_f <=s 12785024@32,
    (-12785024)@32 <=s L0x2001987a_f, L0x2001987a_f <=s 12785024@32,
    (-12785024)@32 <=s L0x2001987c_f, L0x2001987c_f <=s 12785024@32,
    (-12785024)@32 <=s L0x2001987e_f, L0x2001987e_f <=s 12785024@32,
    (-12785024)@32 <=s L0x20019880_f, L0x20019880_f <=s 12785024@32,
    (-12785024)@32 <=s L0x20019882_f, L0x20019882_f <=s 12785024@32,
    (-12785024)@32 <=s L0x20019884_f, L0x20019884_f <=s 12785024@32,
    (-12785024)@32 <=s L0x20019886_f, L0x20019886_f <=s 12785024@32,
    (-12785024)@32 <=s L0x20019888_f, L0x20019888_f <=s 12785024@32,
    (-12785024)@32 <=s L0x2001988a_f, L0x2001988a_f <=s 12785024@32,
    (-12785024)@32 <=s L0x2001988c_f, L0x2001988c_f <=s 12785024@32,
    (-12785024)@32 <=s L0x2001988e_f, L0x2001988e_f <=s 12785024@32,
    (-12785024)@32 <=s L0x20019890_f, L0x20019890_f <=s 12785024@32,
    (-12785024)@32 <=s L0x20019892_f, L0x20019892_f <=s 12785024@32,
    (-12785024)@32 <=s L0x20019894_f, L0x20019894_f <=s 12785024@32,
    (-12785024)@32 <=s L0x20019896_f, L0x20019896_f <=s 12785024@32,
    (-12785024)@32 <=s L0x20019898_f, L0x20019898_f <=s 12785024@32,
    (-12785024)@32 <=s L0x2001989a_f, L0x2001989a_f <=s 12785024@32,
    (-12785024)@32 <=s L0x2001989c_f, L0x2001989c_f <=s 12785024@32,
    (-12785024)@32 <=s L0x2001989e_f, L0x2001989e_f <=s 12785024@32,
    (-12785024)@32 <=s L0x200198a0_f, L0x200198a0_f <=s 12785024@32,
    (-12785024)@32 <=s L0x200198a2_f, L0x200198a2_f <=s 12785024@32,
    (-12785024)@32 <=s L0x200198a4_f, L0x200198a4_f <=s 12785024@32,
    (-12785024)@32 <=s L0x200198a6_f, L0x200198a6_f <=s 12785024@32,
    (-12785024)@32 <=s L0x200198a8_f, L0x200198a8_f <=s 12785024@32,
    (-12785024)@32 <=s L0x200198aa_f, L0x200198aa_f <=s 12785024@32,
    (-12785024)@32 <=s L0x200198ac_f, L0x200198ac_f <=s 12785024@32,
    (-12785024)@32 <=s L0x200198ae_f, L0x200198ae_f <=s 12785024@32,
    (-12785024)@32 <=s L0x200198b0_f, L0x200198b0_f <=s 12785024@32,
    (-12785024)@32 <=s L0x200198b2_f, L0x200198b2_f <=s 12785024@32,
    (-12785024)@32 <=s L0x200198b4_f, L0x200198b4_f <=s 12785024@32,
    (-12785024)@32 <=s L0x200198b6_f, L0x200198b6_f <=s 12785024@32,
    (-12785024)@32 <=s L0x200198b8_f, L0x200198b8_f <=s 12785024@32,
    (-12785024)@32 <=s L0x200198ba_f, L0x200198ba_f <=s 12785024@32,
    (-12785024)@32 <=s L0x200198bc_f, L0x200198bc_f <=s 12785024@32,
    (-12785024)@32 <=s L0x200198be_f, L0x200198be_f <=s 12785024@32,
    (-12785024)@32 <=s L0x200198c0_f, L0x200198c0_f <=s 12785024@32,
    (-12785024)@32 <=s L0x200198c2_f, L0x200198c2_f <=s 12785024@32,
    (-12785024)@32 <=s L0x200198c4_f, L0x200198c4_f <=s 12785024@32,
    (-12785024)@32 <=s L0x200198c6_f, L0x200198c6_f <=s 12785024@32,
    (-12785024)@32 <=s L0x200198c8_f, L0x200198c8_f <=s 12785024@32,
    (-12785024)@32 <=s L0x200198ca_f, L0x200198ca_f <=s 12785024@32,
    (-12785024)@32 <=s L0x200198cc_f, L0x200198cc_f <=s 12785024@32,
    (-12785024)@32 <=s L0x200198ce_f, L0x200198ce_f <=s 12785024@32,
    (-12785024)@32 <=s L0x200198d0_f, L0x200198d0_f <=s 12785024@32,
    (-12785024)@32 <=s L0x200198d2_f, L0x200198d2_f <=s 12785024@32,
    (-12785024)@32 <=s L0x200198d4_f, L0x200198d4_f <=s 12785024@32,
    (-12785024)@32 <=s L0x200198d6_f, L0x200198d6_f <=s 12785024@32,
    (-12785024)@32 <=s L0x200198d8_f, L0x200198d8_f <=s 12785024@32,
    (-12785024)@32 <=s L0x200198da_f, L0x200198da_f <=s 12785024@32,
    (-12785024)@32 <=s L0x200198dc_f, L0x200198dc_f <=s 12785024@32,
    (-12785024)@32 <=s L0x200198de_f, L0x200198de_f <=s 12785024@32,
    (-12785024)@32 <=s L0x200198e0_f, L0x200198e0_f <=s 12785024@32,
    (-12785024)@32 <=s L0x200198e2_f, L0x200198e2_f <=s 12785024@32,
    (-12785024)@32 <=s L0x200198e4_f, L0x200198e4_f <=s 12785024@32,
    (-12785024)@32 <=s L0x200198e6_f, L0x200198e6_f <=s 12785024@32,
    (-12785024)@32 <=s L0x200198e8_f, L0x200198e8_f <=s 12785024@32,
    (-12785024)@32 <=s L0x200198ea_f, L0x200198ea_f <=s 12785024@32,
    (-12785024)@32 <=s L0x200198ec_f, L0x200198ec_f <=s 12785024@32,
    (-12785024)@32 <=s L0x200198ee_f, L0x200198ee_f <=s 12785024@32,
    (-12785024)@32 <=s L0x200198f0_f, L0x200198f0_f <=s 12785024@32,
    (-12785024)@32 <=s L0x200198f2_f, L0x200198f2_f <=s 12785024@32,
    (-12785024)@32 <=s L0x200198f4_f, L0x200198f4_f <=s 12785024@32,
    (-12785024)@32 <=s L0x200198f6_f, L0x200198f6_f <=s 12785024@32,
    (-12785024)@32 <=s L0x200198f8_f, L0x200198f8_f <=s 12785024@32,
    (-12785024)@32 <=s L0x200198fa_f, L0x200198fa_f <=s 12785024@32,
    (-12785024)@32 <=s L0x200198fc_f, L0x200198fc_f <=s 12785024@32,
    (-12785024)@32 <=s L0x200198fe_f, L0x200198fe_f <=s 12785024@32,
    (-12785024)@32 <=s L0x20019900_f, L0x20019900_f <=s 12785024@32,
    (-12785024)@32 <=s L0x20019902_f, L0x20019902_f <=s 12785024@32,
    (-12785024)@32 <=s L0x20019904_f, L0x20019904_f <=s 12785024@32,
    (-12785024)@32 <=s L0x20019906_f, L0x20019906_f <=s 12785024@32,
    (-12785024)@32 <=s L0x20019908_f, L0x20019908_f <=s 12785024@32,
    (-12785024)@32 <=s L0x2001990a_f, L0x2001990a_f <=s 12785024@32,
    (-12785024)@32 <=s L0x2001990c_f, L0x2001990c_f <=s 12785024@32,
    (-12785024)@32 <=s L0x2001990e_f, L0x2001990e_f <=s 12785024@32,
    (-12785024)@32 <=s L0x20019910_f, L0x20019910_f <=s 12785024@32,
    (-12785024)@32 <=s L0x20019912_f, L0x20019912_f <=s 12785024@32,
    (-12785024)@32 <=s L0x20019914_f, L0x20019914_f <=s 12785024@32,
    (-12785024)@32 <=s L0x20019916_f, L0x20019916_f <=s 12785024@32,
    (-12785024)@32 <=s L0x20019918_f, L0x20019918_f <=s 12785024@32,
    (-12785024)@32 <=s L0x2001991a_f, L0x2001991a_f <=s 12785024@32,
    (-12785024)@32 <=s L0x2001991c_f, L0x2001991c_f <=s 12785024@32,
    (-12785024)@32 <=s L0x2001991e_f, L0x2001991e_f <=s 12785024@32,
    (-12785024)@32 <=s L0x20019920_f, L0x20019920_f <=s 12785024@32,
    (-12785024)@32 <=s L0x20019922_f, L0x20019922_f <=s 12785024@32,
    (-12785024)@32 <=s L0x20019924_f, L0x20019924_f <=s 12785024@32,
    (-12785024)@32 <=s L0x20019926_f, L0x20019926_f <=s 12785024@32,
    (-12785024)@32 <=s L0x20019928_f, L0x20019928_f <=s 12785024@32,
    (-12785024)@32 <=s L0x2001992a_f, L0x2001992a_f <=s 12785024@32,
    (-12785024)@32 <=s L0x2001992c_f, L0x2001992c_f <=s 12785024@32,
    (-12785024)@32 <=s L0x2001992e_f, L0x2001992e_f <=s 12785024@32,
    (-12785024)@32 <=s L0x20019930_f, L0x20019930_f <=s 12785024@32,
    (-12785024)@32 <=s L0x20019932_f, L0x20019932_f <=s 12785024@32,
    (-12785024)@32 <=s L0x20019934_f, L0x20019934_f <=s 12785024@32,
    (-12785024)@32 <=s L0x20019936_f, L0x20019936_f <=s 12785024@32,
    (-12785024)@32 <=s L0x20019938_f, L0x20019938_f <=s 12785024@32,
    (-12785024)@32 <=s L0x2001993a_f, L0x2001993a_f <=s 12785024@32,
    (-12785024)@32 <=s L0x2001993c_f, L0x2001993c_f <=s 12785024@32,
    (-12785024)@32 <=s L0x2001993e_f, L0x2001993e_f <=s 12785024@32,
    (-12785024)@32 <=s L0x20019940_f, L0x20019940_f <=s 12785024@32,
    (-12785024)@32 <=s L0x20019942_f, L0x20019942_f <=s 12785024@32,
    (-12785024)@32 <=s L0x20019944_f, L0x20019944_f <=s 12785024@32,
    (-12785024)@32 <=s L0x20019946_f, L0x20019946_f <=s 12785024@32,
    (-12785024)@32 <=s L0x20019948_f, L0x20019948_f <=s 12785024@32,
    (-12785024)@32 <=s L0x2001994a_f, L0x2001994a_f <=s 12785024@32,
    (-12785024)@32 <=s L0x2001994c_f, L0x2001994c_f <=s 12785024@32,
    (-12785024)@32 <=s L0x2001994e_f, L0x2001994e_f <=s 12785024@32,
    (-12785024)@32 <=s L0x20019950_f, L0x20019950_f <=s 12785024@32,
    (-12785024)@32 <=s L0x20019952_f, L0x20019952_f <=s 12785024@32,
    (-12785024)@32 <=s L0x20019954_f, L0x20019954_f <=s 12785024@32,
    (-12785024)@32 <=s L0x20019956_f, L0x20019956_f <=s 12785024@32,
    (-12785024)@32 <=s L0x20019958_f, L0x20019958_f <=s 12785024@32,
    (-12785024)@32 <=s L0x2001995a_f, L0x2001995a_f <=s 12785024@32,
    (-12785024)@32 <=s L0x2001995c_f, L0x2001995c_f <=s 12785024@32,
    (-12785024)@32 <=s L0x2001995e_f, L0x2001995e_f <=s 12785024@32,
    (-12785024)@32 <=s L0x20019960_f, L0x20019960_f <=s 12785024@32,
    (-12785024)@32 <=s L0x20019962_f, L0x20019962_f <=s 12785024@32,
    (-12785024)@32 <=s L0x20019964_f, L0x20019964_f <=s 12785024@32,
    (-12785024)@32 <=s L0x20019966_f, L0x20019966_f <=s 12785024@32,
    (-12785024)@32 <=s L0x20019968_f, L0x20019968_f <=s 12785024@32,
    (-12785024)@32 <=s L0x2001996a_f, L0x2001996a_f <=s 12785024@32,
    (-12785024)@32 <=s L0x2001996c_f, L0x2001996c_f <=s 12785024@32,
    (-12785024)@32 <=s L0x2001996e_f, L0x2001996e_f <=s 12785024@32,
    (-12785024)@32 <=s L0x20019970_f, L0x20019970_f <=s 12785024@32,
    (-12785024)@32 <=s L0x20019972_f, L0x20019972_f <=s 12785024@32,
    (-12785024)@32 <=s L0x20019974_f, L0x20019974_f <=s 12785024@32,
    (-12785024)@32 <=s L0x20019976_f, L0x20019976_f <=s 12785024@32,
    (-12785024)@32 <=s L0x20019978_f, L0x20019978_f <=s 12785024@32,
    (-12785024)@32 <=s L0x2001997a_f, L0x2001997a_f <=s 12785024@32,
    (-12785024)@32 <=s L0x2001997c_f, L0x2001997c_f <=s 12785024@32,
    (-12785024)@32 <=s L0x2001997e_f, L0x2001997e_f <=s 12785024@32,
    (-12785024)@32 <=s L0x20019980_f, L0x20019980_f <=s 12785024@32,
    (-12785024)@32 <=s L0x20019982_f, L0x20019982_f <=s 12785024@32,
    (-12785024)@32 <=s L0x20019984_f, L0x20019984_f <=s 12785024@32,
    (-12785024)@32 <=s L0x20019986_f, L0x20019986_f <=s 12785024@32,
    (-12785024)@32 <=s L0x20019988_f, L0x20019988_f <=s 12785024@32,
    (-12785024)@32 <=s L0x2001998a_f, L0x2001998a_f <=s 12785024@32,
    (-12785024)@32 <=s L0x2001998c_f, L0x2001998c_f <=s 12785024@32,
    (-12785024)@32 <=s L0x2001998e_f, L0x2001998e_f <=s 12785024@32,
    (-12785024)@32 <=s L0x20019990_f, L0x20019990_f <=s 12785024@32,
    (-12785024)@32 <=s L0x20019992_f, L0x20019992_f <=s 12785024@32,
    (-12785024)@32 <=s L0x20019994_f, L0x20019994_f <=s 12785024@32,
    (-12785024)@32 <=s L0x20019996_f, L0x20019996_f <=s 12785024@32,
    (-12785024)@32 <=s L0x20019998_f, L0x20019998_f <=s 12785024@32,
    (-12785024)@32 <=s L0x2001999a_f, L0x2001999a_f <=s 12785024@32,
    (-12785024)@32 <=s L0x2001999c_f, L0x2001999c_f <=s 12785024@32,
    (-12785024)@32 <=s L0x2001999e_f, L0x2001999e_f <=s 12785024@32,
    (-12785024)@32 <=s L0x200199a0_f, L0x200199a0_f <=s 12785024@32,
    (-12785024)@32 <=s L0x200199a2_f, L0x200199a2_f <=s 12785024@32,
    (-12785024)@32 <=s L0x200199a4_f, L0x200199a4_f <=s 12785024@32,
    (-12785024)@32 <=s L0x200199a6_f, L0x200199a6_f <=s 12785024@32,
    (-12785024)@32 <=s L0x200199a8_f, L0x200199a8_f <=s 12785024@32,
    (-12785024)@32 <=s L0x200199aa_f, L0x200199aa_f <=s 12785024@32,
    (-12785024)@32 <=s L0x200199ac_f, L0x200199ac_f <=s 12785024@32,
    (-12785024)@32 <=s L0x200199ae_f, L0x200199ae_f <=s 12785024@32,
    (-12785024)@32 <=s L0x200199b0_f, L0x200199b0_f <=s 12785024@32,
    (-12785024)@32 <=s L0x200199b2_f, L0x200199b2_f <=s 12785024@32,
    (-12785024)@32 <=s L0x200199b4_f, L0x200199b4_f <=s 12785024@32,
    (-12785024)@32 <=s L0x200199b6_f, L0x200199b6_f <=s 12785024@32,
    (-12785024)@32 <=s L0x200199b8_f, L0x200199b8_f <=s 12785024@32,
    (-12785024)@32 <=s L0x200199ba_f, L0x200199ba_f <=s 12785024@32,
    (-12785024)@32 <=s L0x200199bc_f, L0x200199bc_f <=s 12785024@32,
    (-12785024)@32 <=s L0x200199be_f, L0x200199be_f <=s 12785024@32,
    (-12785024)@32 <=s L0x200199c0_f, L0x200199c0_f <=s 12785024@32,
    (-12785024)@32 <=s L0x200199c2_f, L0x200199c2_f <=s 12785024@32,
    (-12785024)@32 <=s L0x200199c4_f, L0x200199c4_f <=s 12785024@32,
    (-12785024)@32 <=s L0x200199c6_f, L0x200199c6_f <=s 12785024@32,
    (-12785024)@32 <=s L0x200199c8_f, L0x200199c8_f <=s 12785024@32,
    (-12785024)@32 <=s L0x200199ca_f, L0x200199ca_f <=s 12785024@32,
    (-12785024)@32 <=s L0x200199cc_f, L0x200199cc_f <=s 12785024@32,
    (-12785024)@32 <=s L0x200199ce_f, L0x200199ce_f <=s 12785024@32,
    (-12785024)@32 <=s L0x200199d0_f, L0x200199d0_f <=s 12785024@32,
    (-12785024)@32 <=s L0x200199d2_f, L0x200199d2_f <=s 12785024@32,
    (-12785024)@32 <=s L0x200199d4_f, L0x200199d4_f <=s 12785024@32,
    (-12785024)@32 <=s L0x200199d6_f, L0x200199d6_f <=s 12785024@32,
    (-12785024)@32 <=s L0x200199d8_f, L0x200199d8_f <=s 12785024@32,
    (-12785024)@32 <=s L0x200199da_f, L0x200199da_f <=s 12785024@32,
    (-12785024)@32 <=s L0x200199dc_f, L0x200199dc_f <=s 12785024@32,
    (-12785024)@32 <=s L0x200199de_f, L0x200199de_f <=s 12785024@32,
    (-12785024)@32 <=s L0x200199e0_f, L0x200199e0_f <=s 12785024@32,
    (-12785024)@32 <=s L0x200199e2_f, L0x200199e2_f <=s 12785024@32,
    (-12785024)@32 <=s L0x200199e4_f, L0x200199e4_f <=s 12785024@32,
    (-12785024)@32 <=s L0x200199e6_f, L0x200199e6_f <=s 12785024@32,
    (-12785024)@32 <=s L0x200199e8_f, L0x200199e8_f <=s 12785024@32,
    (-12785024)@32 <=s L0x200199ea_f, L0x200199ea_f <=s 12785024@32,
    (-12785024)@32 <=s L0x200199ec_f, L0x200199ec_f <=s 12785024@32,
    (-12785024)@32 <=s L0x200199ee_f, L0x200199ee_f <=s 12785024@32,
    (-12785024)@32 <=s L0x200199f0_f, L0x200199f0_f <=s 12785024@32,
    (-12785024)@32 <=s L0x200199f2_f, L0x200199f2_f <=s 12785024@32,
    (-12785024)@32 <=s L0x200199f4_f, L0x200199f4_f <=s 12785024@32,
    (-12785024)@32 <=s L0x200199f6_f, L0x200199f6_f <=s 12785024@32,
    (-12785024)@32 <=s L0x200199f8_f, L0x200199f8_f <=s 12785024@32,
    (-12785024)@32 <=s L0x200199fa_f, L0x200199fa_f <=s 12785024@32,
    (-12785024)@32 <=s L0x200199fc_f, L0x200199fc_f <=s 12785024@32,
    (-12785024)@32 <=s L0x200199fe_f, L0x200199fe_f <=s 12785024@32,
    (-12785024)@32 <=s L0x20019a00_f, L0x20019a00_f <=s 12785024@32,
    (-12785024)@32 <=s L0x20019a02_f, L0x20019a02_f <=s 12785024@32,
    (-12785024)@32 <=s L0x20019a04_f, L0x20019a04_f <=s 12785024@32,
    (-12785024)@32 <=s L0x20019a06_f, L0x20019a06_f <=s 12785024@32,
    (-12785024)@32 <=s L0x20019a08_f, L0x20019a08_f <=s 12785024@32,
    (-12785024)@32 <=s L0x20019a0a_f, L0x20019a0a_f <=s 12785024@32,
    (-12785024)@32 <=s L0x20019a0c_f, L0x20019a0c_f <=s 12785024@32,
    (-12785024)@32 <=s L0x20019a0e_f, L0x20019a0e_f <=s 12785024@32,
    (-12785024)@32 <=s L0x20019a10_f, L0x20019a10_f <=s 12785024@32,
    (-12785024)@32 <=s L0x20019a12_f, L0x20019a12_f <=s 12785024@32,
    (-12785024)@32 <=s L0x20019a14_f, L0x20019a14_f <=s 12785024@32,
    (-12785024)@32 <=s L0x20019a16_f, L0x20019a16_f <=s 12785024@32,
    (-12785024)@32 <=s L0x20019a18_f, L0x20019a18_f <=s 12785024@32,
    (-12785024)@32 <=s L0x20019a1a_f, L0x20019a1a_f <=s 12785024@32,
    (-12785024)@32 <=s L0x20019a1c_f, L0x20019a1c_f <=s 12785024@32,
    (-12785024)@32 <=s L0x20019a1e_f, L0x20019a1e_f <=s 12785024@32,
    (-12785024)@32 <=s L0x20019a20_f, L0x20019a20_f <=s 12785024@32,
    (-12785024)@32 <=s L0x20019a22_f, L0x20019a22_f <=s 12785024@32,
    (-12785024)@32 <=s L0x20019a24_f, L0x20019a24_f <=s 12785024@32,
    (-12785024)@32 <=s L0x20019a26_f, L0x20019a26_f <=s 12785024@32,
    (-12785024)@32 <=s L0x20019a28_f, L0x20019a28_f <=s 12785024@32,
    (-12785024)@32 <=s L0x20019a2a_f, L0x20019a2a_f <=s 12785024@32,
    (-12785024)@32 <=s L0x20019a2c_f, L0x20019a2c_f <=s 12785024@32,
    (-12785024)@32 <=s L0x20019a2e_f, L0x20019a2e_f <=s 12785024@32,
    (-12785024)@32 <=s L0x20019a30_f, L0x20019a30_f <=s 12785024@32,
    (-12785024)@32 <=s L0x20019a32_f, L0x20019a32_f <=s 12785024@32,
    (-12785024)@32 <=s L0x20019a34_f, L0x20019a34_f <=s 12785024@32,
    (-12785024)@32 <=s L0x20019a36_f, L0x20019a36_f <=s 12785024@32,
    (-12785024)@32 <=s L0x20019a38_f, L0x20019a38_f <=s 12785024@32,
    (-12785024)@32 <=s L0x20019a3a_f, L0x20019a3a_f <=s 12785024@32,
    (-12785024)@32 <=s L0x20019a3c_f, L0x20019a3c_f <=s 12785024@32,
    (-12785024)@32 <=s L0x20019a3e_f, L0x20019a3e_f <=s 12785024@32,
    (-12785024)@32 <=s L0x20019a40_f, L0x20019a40_f <=s 12785024@32,
    (-12785024)@32 <=s L0x20019a42_f, L0x20019a42_f <=s 12785024@32,
    (-12785024)@32 <=s L0x20019a44_f, L0x20019a44_f <=s 12785024@32,
    (-12785024)@32 <=s L0x20019a46_f, L0x20019a46_f <=s 12785024@32
  ] prove with [cuts [18]]
}

