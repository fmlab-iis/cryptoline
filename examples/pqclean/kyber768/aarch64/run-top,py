
Q = 3329
omega = 17
twiddles = [
    0, 0, -15749, -1600, -7373, -749, -394, -40, -6762, -687, 6201, 630, -14095, -1432, 8347, 848, 10453, 1062, -13879, -1410, 1900, 193, 7845, 797, -5345, -543, -679, -69, 5601, 569, -15582, -1583, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2914, 2914, 14036, 14036, -8682, -8682, -12156, -12156, 296, 296, 1426, 1426, -882, -882, -1235, -1235, 2845, 2845, -9942, -9942, -748, -748, 7943, 7943, 289, 289, -1010, -1010, -76, -76, 807, 807, 3258, 3258, 14125, 14125, -15483, -15483, 4449, 4449, 331, 331, 1435, 1435, -1573, -1573, 452, 452, 167, 167, 15592, 15592, 16113, 16113, 3691, 3691, 17, 17, 1584, 1584, 1637, 1637, 375, 375, -5591, -5591, -10148, -10148, 7117, 7117, -7678, -7678, -568, -568, -1031, -1031, 723, 723, -780, -780, 5739, 5739, -12717, -12717, -10247, -10247, -12196, -12196, 583, 583, -1292, -1292, -1041, -1041, -1239, -1239, -6693, -6693, -1073, -1073, 10828, 10828, 16192, 16192, -680, -680, -109, -109, 1100, 1100, 1645, 1645, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 13180, 13180, 5266, 5266, 14529, 14529, -4400, -4400, 1339, 1339, 535, 535, 1476, 1476, -447, -447, 11782, 11782, 14155, 14155, -10355, -10355, 15099, 15099, 1197, 1197, 1438, 1438, -1052, -1052, 1534, 1534, -10089, -10089, -4538, -4538, -12540, -12540, -9125, -9125, -1025, -1025, -461, -461, -1274, -1274, -927, -927, 13869, 13869, 10463, 10463, 7441, 7441, -12107, -12107, 1409, 1409, 1063, 1063, 756, 756, -1230, -1230, -6565, -6565, 3140, 3140, -11546, -11546, 5522, 5522, -667, -667, 319, 319, -1173, -1173, 561, 561, -472, -472, -5473, -5473, -3091, -3091, -8495, -8495, -48, -48, -556, -556, -314, -314, -863, -863, 2293, 2293, 7451, 7451, -2746, -2746, -7235, -7235, 233, 233, 757, 757, -279, -279, -735, -735, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -2786, -2786, -9213, -9213, 551, 551, -4429, -4429, -283, -283, -936, -936, 56, 56, -450, -450, 6398, 6398, -6713, -6713, -8032, -8032, 14578, 14578, 650, 650, -682, -682, -816, -816, 1481, 1481, -13308, -13308, -7008, -7008, 6221, 6221, 6378, 6378, -1352, -1352, -712, -712, 632, 632, 648, 648, -16005, -16005, -5168, -5168, -14588, -14588, 11251, 11251, -1626, -1626, -525, -525, -1482, -1482, 1143, 1143, 16251, 16251, 10749, 10749, 9371, 9371, -11605, -11605, 1651, 1651, 1092, 1092, 952, 952, -1179, -1179, -5315, -5315, 3967, 3967, 14381, 14381, -5453, -5453, -540, -540, 403, 403, 1461, 1461, -554, -554, -15159, -15159, 10099, 10099, -6319, -6319, 8721, 8721, -1540, -1540, 1026, 1026, -642, -642, 886, 886, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -10719, -10719, -13338, -13338, 13121, 13121, 8081, 8081, -1089, -1089, -1355, -1355, 1333, 1333, 821, 821, -4567, -4567, -8416, -8416, 12993, 12993, 12078, 12078, -464, -464, -855, -855, 1320, 1320, 1227, 1227, 325, 325, -2156, -2156, -13918, -13918, 8957, 8957, 33, 33, -219, -219, -1414, -1414, 910, 910, 9243, 9243, -15818, -15818, 7215, 7215, -11999, -11999, 939, 939, -1607, -1607, 733, 733, -1219, -1219, -10050, -10050, 11930, 11930, -9764, -9764, -3878, -3878, -1021, -1021, 1212, 1212, -992, -992, -394, -394, -8780, -8780, -14322, -14322, 2638, 2638, 8711, 8711, -892, -892, -1455, -1455, 268, 268, 885, 885, -9262, -9262, 10129, 10129, 6309, 6309, -11566, -11566, -941, -941, 1029, 1029, 641, 641, -1175, -1175
    ]

def parameters (a):
    for i in range (256):
        print ('int16 {0}{1:02x}'.format (a, i),
               end = ', ' if i % 6 < 5 else ',\n')
    print ('int16   Q, int16  Q2,\nint16  NQ, int16 NQ2')

def preconditions (a):
    print ('Q = 3329 /\\ Q2 = 1665 /\\ NQ = -3329 /\\ NQ2 = -1665 /\\')
    for i in range (0, 256, 8):
        print ('[NQ2,NQ2,NQ2,NQ2,NQ2,NQ2,NQ2,NQ2] < [{0}{1:02x},{0}{2:02x},{0}{3:02x},{0}{4:02x},{0}{5:02x},{0}{6:02x},{0}{7:02x},{0}{8:02x}] /\\'.
               format (a, i, i+1, i+2, i+3, i+4, i+5, i+6, i+7))
        print ('[{0}{1:02x},{0}{2:02x},{0}{3:02x},{0}{4:02x},{0}{5:02x},{0}{6:02x},{0}{7:02x},{0}{8:02x}] < [Q2,Q2,Q2,Q2,Q2,Q2,Q2,Q2]'.
               format (a, i, i+1, i+2, i+3, i+4, i+5, i+6, i+7),
               end = ' /\\\n' if i < 248 else '\n')
    print ('&&')
    print ('Q = 3329@16 /\\ Q2 = 1665@16 /\\ NQ = (-3329)@16 /\\ NQ2 = (-1665)@16 /\\')
    for i in range (0, 256, 8):
        print ('[NQ2,NQ2,NQ2,NQ2,NQ2,NQ2,NQ2,NQ2] <s [{0}{1:02x},{0}{2:02x},{0}{3:02x},{0}{4:02x},{0}{5:02x},{0}{6:02x},{0}{7:02x},{0}{8:02x}] /\\'.
               format (a, i, i+1, i+2, i+3, i+4, i+5, i+6, i+7))
        print ('[{0}{1:02x},{0}{2:02x},{0}{3:02x},{0}{4:02x},{0}{5:02x},{0}{6:02x},{0}{7:02x},{0}{8:02x}] <s [Q2,Q2,Q2,Q2,Q2,Q2,Q2,Q2]'.
               format (a, i, i+1, i+2, i+3, i+4, i+5, i+6, i+7),
               end = ' /\\\n' if i < 248 else '\n')
    
        
def nondets ():
    print ('nondet sp@uint64;')
    print ('nondet  %v8@sint16[8]; nondet  %v9@sint16[8]; nondet %v10@sint16[8];')
    print ('nondet %v11@sint16[8]; nondet %v12@sint16[8]; nondet %v13@sint16[8];')
    print ('nondet %v14@sint16[8]; nondet %v15@sint16[8];')

def inputs (base, a):
    for i in range (256):
        print ('mov L0x{0:x} {1}{2:02x};'.format (base + 2*i, a, i),
               end = '\n' if i % 3 == 2 else ' ')
    print ()

def constants (base, table):
    for i in range (len (table)):
        print ('mov L0x{0:x} ({1:6})@int16;'.format (base + 2*i, table[i]),
               end = '\n' if i % 2 == 1 else ' ')
    print ()
                                                     
def polys (a):
    print ('ghost X@int16,F@int16,')
    for i in range (32):
        print ('F{0:x}{1}@int16'.format (i // 2, 8*(i % 2)),
               end = ':\n' if i == 31 else
                     ',\n' if i % 7 == 6 else ',')
    for i in range (16):
        for j in range (2):
            print ('F{0:x}{1}**2 = '.format (i, 8*j), end = '')
            for k in range (8):
                print ('{0}{1:02x}*X**{1:3}'.format (a, 0x10*i + j*8 + k),
                       end = ' /\\\n' if k == 7 else
                             ' +\n         ' if k % 5 == 4 else ' + ')
    print ('F**2 = ', end = '')
    for i in range (32):
        print ('F{0:x}{1}**2'.format (i//2, i%2),
               end = ' && true;\n' if i == 31 else
                     '+\n       ' if i % 10 == 9 else '+')

def cut45 (base):
    print ('assert ', end = '')
    for i in range (16):
        for j in range (0,8,2):
            print ('[4*NQ+NQ2, 4*NQ+NQ2] < [L0x{0:x}, L0x{1:x}] /\\\n       [L0x{0:x}, L0x{1:x}] < [4*Q+Q2, 4*Q+Q2]'.
                   format (base + 0x20*i + 2*j, base + 0x20*i + 2*(j+1)),
                   end = '\n       prove with [algebra solver ppl, precondition, cuts [35]] && true;\n' if i == 15 and j == 6 else ' /\\\n       ')
    print ('assume ', end = '')
    for i in range (16):
        for j in range (0,8,2):
            print ('[4*NQ+NQ2, 4*NQ+NQ2] < [L0x{0:x}, L0x{1:x}] /\\\n       [L0x{0:x}, L0x{1:x}] < [4*Q+Q2, 4*Q+Q2]'.
                   format (base + 0x20*i + 2*j, base + 0x20*i + 2*(j+1)),
                   end = '\n    && ' if i == 15 and j == 6 else ' /\\\n       ')
    for i in range (16):
        for j in range (0,8,2):
            print ('[4@16*NQ+NQ2, 4@16*NQ+NQ2] < [L0x{0:x}, L0x{1:x}] /\\\n       [L0x{0:x}, L0x{1:x}] < [4@16*Q+Q2, 4@16*Q+Q2]'.
                   format (base + 0x20*i + 2*j, base + 0x20*i + 2*(j+1)),
                   end = ';\n' if i == 15 and j == 6 else ' /\\\n       ')
    print ('\n(* CUT 45 7 *)\n')
    print ('cut ', end = '')
    exps = [8, 8+128, 8+64, 8+64+128, 8+32, 8+32+128, 8+32+64, 8+32+64+128,
            8+16, 8+16+128, 8+16+64, 8+16+64+128, 8+16+32, 8+16+32+128, 8+16+32+64, 8+16+32+64+128]
    for i in range (16):
        print ('eqmod (poly X [', end = '')
        for j in range (8):
            print ('L0x{0:x}'.format (base + 0x20*i + 2*j),
                   end = '])\n          ' if j == 7 else
                         ',\n                   ' if j % 4 == 3 else ',')
        print ('(', end = '')
        for j in range (16):
            print ('F{0:x}0**2'.format (j),
                   end = ')\n          ' if j == 15 else
                         '+\n           ' if j % 8 == 7 else '+')
        print ('[Q, X**16 - 17**{0}] prove with [precondition, cuts [{1},{2}],'
               .format (exps[i], 26+i//2, 36+i//2),
               end = ' all ghosts],\n    ')
    for i in range (16):
        for j in range (0,8,2):
            print ('[4*NQ+NQ2, 4*NQ+NQ2] < [L0x{0:x}, L0x{1:x}] /\\\n    [L0x{0:x}, L0x{1:x}] < [4*Q+Q2, 4*Q+Q2]'.
                   format (base + 0x20*i + 2*j, base + 0x20*i + 2*(j+1)),
                   end = '\n && ' if i == 15 and j == 6 else ' /\\\n    ')
    for i in range (16):
        for j in range (0,8,2):
            print ('[4@16*NQ+NQ2, 4@16*NQ+NQ2] < [L0x{0:x}, L0x{1:x}] /\\\n    [L0x{0:x}, L0x{1:x}] < [4@16*Q+Q2, 4@16*Q+Q2]'.
                   format (base + 0x20*i + 2*j, base + 0x20*i + 2*(j+1)),
                   end = '\n    prove with [precondition, cuts [5]];\n' if i == 15 and j == 6 else ' /\\\n    ')
    
print ('(******** parameters ********)\n')
parameters ('A')
print ('\n\n\n(******** preconditions ********)\n')
preconditions ('A')
print ('\n\n\n(******** nondets ********)\n')
nondets ()
print ('\n\n\n(******** inputs ********)\n')
inputs (0xffffffffc400, 'A')
print ('\n\n\n(******** constants ********)\n')
print ('mov L0x414860 3329@int16;')
constants (0x414880, twiddles)
print ('\n\n\n(******** polynomials ********)\n')
polys ('A')
print ('\n\n\n(******** CUT 45 7 ********)\n')
cut45 (0xffffffffc400)
print ('\n\n\n(******** CUT 91 15 ********)\n')
cut45 (0xffffffffc410)

