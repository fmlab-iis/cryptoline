(* quine: cv.exe -v -isafety -jobs 22 -no_carry_constraint -slicing -vo appearing radix_conversions.cl
Parsing CryptoLine file:                [OK]            2.6579 seconds
Checking well-formedness:               [OK]            0.4350 seconds

Procedure main
==============
Transforming to SSA form:               [OK]            0.2386 seconds
Normalizing specification:              [OK]            0.2848 seconds
Rewriting assignments:                  [OK]            0.5299 seconds
Verifying program safety:               [OK]            0.0048 seconds
Verifying range assertions:             [OK]            0.0011 seconds
Verifying range specification:          [OK]            0.0034 seconds
Rewriting value-preserved casting:      [OK]            0.0192 seconds
Verifying algebraic assertions:         [OK]            0.0037 seconds
Verifying algebraic specification:      [OK]            168.2575 seconds

Procedure Summary
-----------------
Procedure verification:                 [OK]            169.5123 seconds

Procedure vec_mul_asm
=====================
Transforming to SSA form:               [OK]            0.0029 seconds
Normalizing specification:              [OK]            0.0105 seconds
Rewriting assignments:                  [OK]            0.0002 seconds
Verifying program safety:               [OK]            0.0001 seconds
Verifying range specification:          [OK]            0.0010 seconds
Rewriting value-preserved casting:      [OK]            0.0002 seconds
Verifying algebraic specification:      [OK]            0.0095 seconds

Procedure Summary
-----------------
Procedure verification:                 [OK]            0.0394 seconds

Summary
=======
Verification result:                    [OK]            172.6574 seconds
*)

proc vec_mul_asm (uint16 z,
                  bit[64] %a0, bit[64] %a1, bit[64] %a2, bit[64] %a3,
                  bit[64] %a4, bit[64] %a5, bit[64] %a6, bit[64] %a7,
                  bit[64] %a8, bit[64] %a9, bit[64] %aa, bit[64] %ab,
                  bit[64] %b0, bit[64] %b1, bit[64] %b2, bit[64] %b3,
                  bit[64] %b4, bit[64] %b5, bit[64] %b6, bit[64] %b7,
                  bit[64] %b8, bit[64] %b9, bit[64] %ba, bit[64] %bb;
                  bit[64] %R0, bit[64] %R1, bit[64] %R2, bit[64] %R3,
                  bit[64] %R4, bit[64] %R5, bit[64] %R6, bit[64] %R7,
                  bit[64] %R8, bit[64] %R9, bit[64] %Ra, bit[64] %Rb) =
{ true && true }

nondet %R0@bit[64]; nondet %R1@bit[64]; nondet %R2@bit[64]; nondet %R3@bit[64];
nondet %R4@bit[64]; nondet %R5@bit[64]; nondet %R6@bit[64]; nondet %R7@bit[64];
nondet %R8@bit[64]; nondet %R9@bit[64]; nondet %Ra@bit[64]; nondet %Rb@bit[64];

(* need the following for well-formedness *)

(*
nondet %a0@bit[64]; nondet %a1@bit[64]; nondet %a2@bit[64]; nondet %a3@bit[64];
nondet %a4@bit[64]; nondet %a5@bit[64]; nondet %a6@bit[64]; nondet %a7@bit[64];
nondet %a8@bit[64]; nondet %a9@bit[64]; nondet %aa@bit[64]; nondet %ab@bit[64];

nondet %b0@bit[64]; nondet %b1@bit[64]; nondet %b2@bit[64]; nondet %b3@bit[64];
nondet %b4@bit[64]; nondet %b5@bit[64]; nondet %b6@bit[64]; nondet %b7@bit[64];
nondet %b8@bit[64]; nondet %b9@bit[64]; nondet %ba@bit[64]; nondet %bb@bit[64];

nondet %R0@bit[64]; nondet %R1@bit[64]; nondet %R2@bit[64]; nondet %R3@bit[64];
nondet %R4@bit[64]; nondet %R5@bit[64]; nondet %R6@bit[64]; nondet %R7@bit[64];
nondet %R8@bit[64]; nondet %R9@bit[64]; nondet %Ra@bit[64]; nondet %Rb@bit[64];
*)

assume
eqmod (poly z [%R0[0],%R1[0],%R2[0],%R3[0],%R4[0],%R5[0],
               %R6[0],%R7[0],%R8[0],%R9[0],%Ra[0],%Rb[0]])
      (poly z [%a0[0],%a1[0],%a2[0],%a3[0],%a4[0],%a5[0],
               %a6[0],%a7[0],%a8[0],%a9[0],%aa[0],%ab[0]] *
       poly z [%b0[0],%b1[0],%b2[0],%b3[0],%b4[0],%b5[0],
               %b6[0],%b7[0],%b8[0],%b9[0],%ba[0],%bb[0]])
      [2, z**12+z**3+1] /\
eqmod (poly z [%R0[1],%R1[1],%R2[1],%R3[1],%R4[1],%R5[1],
               %R6[1],%R7[1],%R8[1],%R9[1],%Ra[1],%Rb[1]])
      (poly z [%a0[1],%a1[1],%a2[1],%a3[1],%a4[1],%a5[1],
               %a6[1],%a7[1],%a8[1],%a9[1],%aa[1],%ab[1]] *
       poly z [%b0[1],%b1[1],%b2[1],%b3[1],%b4[1],%b5[1],
               %b6[1],%b7[1],%b8[1],%b9[1],%ba[1],%bb[1]])
      [2, z**12+z**3+1] /\
eqmod (poly z [%R0[2],%R1[2],%R2[2],%R3[2],%R4[2],%R5[2],
               %R6[2],%R7[2],%R8[2],%R9[2],%Ra[2],%Rb[2]])
      (poly z [%a0[2],%a1[2],%a2[2],%a3[2],%a4[2],%a5[2],
               %a6[2],%a7[2],%a8[2],%a9[2],%aa[2],%ab[2]] *
       poly z [%b0[2],%b1[2],%b2[2],%b3[2],%b4[2],%b5[2],
               %b6[2],%b7[2],%b8[2],%b9[2],%ba[2],%bb[2]])
      [2, z**12+z**3+1] /\
eqmod (poly z [%R0[3],%R1[3],%R2[3],%R3[3],%R4[3],%R5[3],
               %R6[3],%R7[3],%R8[3],%R9[3],%Ra[3],%Rb[3]])
      (poly z [%a0[3],%a1[3],%a2[3],%a3[3],%a4[3],%a5[3],
               %a6[3],%a7[3],%a8[3],%a9[3],%aa[3],%ab[3]] *
       poly z [%b0[3],%b1[3],%b2[3],%b3[3],%b4[3],%b5[3],
               %b6[3],%b7[3],%b8[3],%b9[3],%ba[3],%bb[3]])
      [2, z**12+z**3+1] /\
eqmod (poly z [%R0[4],%R1[4],%R2[4],%R3[4],%R4[4],%R5[4],
               %R6[4],%R7[4],%R8[4],%R9[4],%Ra[4],%Rb[4]])
      (poly z [%a0[4],%a1[4],%a2[4],%a3[4],%a4[4],%a5[4],
               %a6[4],%a7[4],%a8[4],%a9[4],%aa[4],%ab[4]] *
       poly z [%b0[4],%b1[4],%b2[4],%b3[4],%b4[4],%b5[4],
               %b6[4],%b7[4],%b8[4],%b9[4],%ba[4],%bb[4]])
      [2, z**12+z**3+1] /\
eqmod (poly z [%R0[5],%R1[5],%R2[5],%R3[5],%R4[5],%R5[5],
               %R6[5],%R7[5],%R8[5],%R9[5],%Ra[5],%Rb[5]])
      (poly z [%a0[5],%a1[5],%a2[5],%a3[5],%a4[5],%a5[5],
               %a6[5],%a7[5],%a8[5],%a9[5],%aa[5],%ab[5]] *
       poly z [%b0[5],%b1[5],%b2[5],%b3[5],%b4[5],%b5[5],
               %b6[5],%b7[5],%b8[5],%b9[5],%ba[5],%bb[5]])
      [2, z**12+z**3+1] /\
eqmod (poly z [%R0[6],%R1[6],%R2[6],%R3[6],%R4[6],%R5[6],
               %R6[6],%R7[6],%R8[6],%R9[6],%Ra[6],%Rb[6]])
      (poly z [%a0[6],%a1[6],%a2[6],%a3[6],%a4[6],%a5[6],
               %a6[6],%a7[6],%a8[6],%a9[6],%aa[6],%ab[6]] *
       poly z [%b0[6],%b1[6],%b2[6],%b3[6],%b4[6],%b5[6],
               %b6[6],%b7[6],%b8[6],%b9[6],%ba[6],%bb[6]])
      [2, z**12+z**3+1] /\
eqmod (poly z [%R0[7],%R1[7],%R2[7],%R3[7],%R4[7],%R5[7],
               %R6[7],%R7[7],%R8[7],%R9[7],%Ra[7],%Rb[7]])
      (poly z [%a0[7],%a1[7],%a2[7],%a3[7],%a4[7],%a5[7],
               %a6[7],%a7[7],%a8[7],%a9[7],%aa[7],%ab[7]] *
       poly z [%b0[7],%b1[7],%b2[7],%b3[7],%b4[7],%b5[7],
               %b6[7],%b7[7],%b8[7],%b9[7],%ba[7],%bb[7]])
      [2, z**12+z**3+1] /\
eqmod (poly z [%R0[8],%R1[8],%R2[8],%R3[8],%R4[8],%R5[8],
               %R6[8],%R7[8],%R8[8],%R9[8],%Ra[8],%Rb[8]])
      (poly z [%a0[8],%a1[8],%a2[8],%a3[8],%a4[8],%a5[8],
               %a6[8],%a7[8],%a8[8],%a9[8],%aa[8],%ab[8]] *
       poly z [%b0[8],%b1[8],%b2[8],%b3[8],%b4[8],%b5[8],
               %b6[8],%b7[8],%b8[8],%b9[8],%ba[8],%bb[8]])
      [2, z**12+z**3+1] /\
eqmod (poly z [%R0[9],%R1[9],%R2[9],%R3[9],%R4[9],%R5[9],
               %R6[9],%R7[9],%R8[9],%R9[9],%Ra[9],%Rb[9]])
      (poly z [%a0[9],%a1[9],%a2[9],%a3[9],%a4[9],%a5[9],
               %a6[9],%a7[9],%a8[9],%a9[9],%aa[9],%ab[9]] *
       poly z [%b0[9],%b1[9],%b2[9],%b3[9],%b4[9],%b5[9],
               %b6[9],%b7[9],%b8[9],%b9[9],%ba[9],%bb[9]])
      [2, z**12+z**3+1] /\
eqmod (poly z [%R0[10],%R1[10],%R2[10],%R3[10],%R4[10],%R5[10],
               %R6[10],%R7[10],%R8[10],%R9[10],%Ra[10],%Rb[10]])
      (poly z [%a0[10],%a1[10],%a2[10],%a3[10],%a4[10],%a5[10],
               %a6[10],%a7[10],%a8[10],%a9[10],%aa[10],%ab[10]] *
       poly z [%b0[10],%b1[10],%b2[10],%b3[10],%b4[10],%b5[10],
               %b6[10],%b7[10],%b8[10],%b9[10],%ba[10],%bb[10]])
      [2, z**12+z**3+1] /\
eqmod (poly z [%R0[11],%R1[11],%R2[11],%R3[11],%R4[11],%R5[11],
               %R6[11],%R7[11],%R8[11],%R9[11],%Ra[11],%Rb[11]])
      (poly z [%a0[11],%a1[11],%a2[11],%a3[11],%a4[11],%a5[11],
               %a6[11],%a7[11],%a8[11],%a9[11],%aa[11],%ab[11]] *
       poly z [%b0[11],%b1[11],%b2[11],%b3[11],%b4[11],%b5[11],
               %b6[11],%b7[11],%b8[11],%b9[11],%ba[11],%bb[11]])
      [2, z**12+z**3+1] /\
eqmod (poly z [%R0[12],%R1[12],%R2[12],%R3[12],%R4[12],%R5[12],
               %R6[12],%R7[12],%R8[12],%R9[12],%Ra[12],%Rb[12]])
      (poly z [%a0[12],%a1[12],%a2[12],%a3[12],%a4[12],%a5[12],
               %a6[12],%a7[12],%a8[12],%a9[12],%aa[12],%ab[12]] *
       poly z [%b0[12],%b1[12],%b2[12],%b3[12],%b4[12],%b5[12],
               %b6[12],%b7[12],%b8[12],%b9[12],%ba[12],%bb[12]])
      [2, z**12+z**3+1] /\
eqmod (poly z [%R0[13],%R1[13],%R2[13],%R3[13],%R4[13],%R5[13],
               %R6[13],%R7[13],%R8[13],%R9[13],%Ra[13],%Rb[13]])
      (poly z [%a0[13],%a1[13],%a2[13],%a3[13],%a4[13],%a5[13],
               %a6[13],%a7[13],%a8[13],%a9[13],%aa[13],%ab[13]] *
       poly z [%b0[13],%b1[13],%b2[13],%b3[13],%b4[13],%b5[13],
               %b6[13],%b7[13],%b8[13],%b9[13],%ba[13],%bb[13]])
      [2, z**12+z**3+1] /\
eqmod (poly z [%R0[14],%R1[14],%R2[14],%R3[14],%R4[14],%R5[14],
               %R6[14],%R7[14],%R8[14],%R9[14],%Ra[14],%Rb[14]])
      (poly z [%a0[14],%a1[14],%a2[14],%a3[14],%a4[14],%a5[14],
               %a6[14],%a7[14],%a8[14],%a9[14],%aa[14],%ab[14]] *
       poly z [%b0[14],%b1[14],%b2[14],%b3[14],%b4[14],%b5[14],
               %b6[14],%b7[14],%b8[14],%b9[14],%ba[14],%bb[14]])
      [2, z**12+z**3+1] /\
eqmod (poly z [%R0[15],%R1[15],%R2[15],%R3[15],%R4[15],%R5[15],
               %R6[15],%R7[15],%R8[15],%R9[15],%Ra[15],%Rb[15]])
      (poly z [%a0[15],%a1[15],%a2[15],%a3[15],%a4[15],%a5[15],
               %a6[15],%a7[15],%a8[15],%a9[15],%aa[15],%ab[15]] *
       poly z [%b0[15],%b1[15],%b2[15],%b3[15],%b4[15],%b5[15],
               %b6[15],%b7[15],%b8[15],%b9[15],%ba[15],%bb[15]])
      [2, z**12+z**3+1] /\
eqmod (poly z [%R0[16],%R1[16],%R2[16],%R3[16],%R4[16],%R5[16],
               %R6[16],%R7[16],%R8[16],%R9[16],%Ra[16],%Rb[16]])
      (poly z [%a0[16],%a1[16],%a2[16],%a3[16],%a4[16],%a5[16],
               %a6[16],%a7[16],%a8[16],%a9[16],%aa[16],%ab[16]] *
       poly z [%b0[16],%b1[16],%b2[16],%b3[16],%b4[16],%b5[16],
               %b6[16],%b7[16],%b8[16],%b9[16],%ba[16],%bb[16]])
      [2, z**12+z**3+1] /\
eqmod (poly z [%R0[17],%R1[17],%R2[17],%R3[17],%R4[17],%R5[17],
               %R6[17],%R7[17],%R8[17],%R9[17],%Ra[17],%Rb[17]])
      (poly z [%a0[17],%a1[17],%a2[17],%a3[17],%a4[17],%a5[17],
               %a6[17],%a7[17],%a8[17],%a9[17],%aa[17],%ab[17]] *
       poly z [%b0[17],%b1[17],%b2[17],%b3[17],%b4[17],%b5[17],
               %b6[17],%b7[17],%b8[17],%b9[17],%ba[17],%bb[17]])
      [2, z**12+z**3+1] /\
eqmod (poly z [%R0[18],%R1[18],%R2[18],%R3[18],%R4[18],%R5[18],
               %R6[18],%R7[18],%R8[18],%R9[18],%Ra[18],%Rb[18]])
      (poly z [%a0[18],%a1[18],%a2[18],%a3[18],%a4[18],%a5[18],
               %a6[18],%a7[18],%a8[18],%a9[18],%aa[18],%ab[18]] *
       poly z [%b0[18],%b1[18],%b2[18],%b3[18],%b4[18],%b5[18],
               %b6[18],%b7[18],%b8[18],%b9[18],%ba[18],%bb[18]])
      [2, z**12+z**3+1] /\
eqmod (poly z [%R0[19],%R1[19],%R2[19],%R3[19],%R4[19],%R5[19],
               %R6[19],%R7[19],%R8[19],%R9[19],%Ra[19],%Rb[19]])
      (poly z [%a0[19],%a1[19],%a2[19],%a3[19],%a4[19],%a5[19],
               %a6[19],%a7[19],%a8[19],%a9[19],%aa[19],%ab[19]] *
       poly z [%b0[19],%b1[19],%b2[19],%b3[19],%b4[19],%b5[19],
               %b6[19],%b7[19],%b8[19],%b9[19],%ba[19],%bb[19]])
      [2, z**12+z**3+1] /\
eqmod (poly z [%R0[20],%R1[20],%R2[20],%R3[20],%R4[20],%R5[20],
               %R6[20],%R7[20],%R8[20],%R9[20],%Ra[20],%Rb[20]])
      (poly z [%a0[20],%a1[20],%a2[20],%a3[20],%a4[20],%a5[20],
               %a6[20],%a7[20],%a8[20],%a9[20],%aa[20],%ab[20]] *
       poly z [%b0[20],%b1[20],%b2[20],%b3[20],%b4[20],%b5[20],
               %b6[20],%b7[20],%b8[20],%b9[20],%ba[20],%bb[20]])
      [2, z**12+z**3+1] /\
eqmod (poly z [%R0[21],%R1[21],%R2[21],%R3[21],%R4[21],%R5[21],
               %R6[21],%R7[21],%R8[21],%R9[21],%Ra[21],%Rb[21]])
      (poly z [%a0[21],%a1[21],%a2[21],%a3[21],%a4[21],%a5[21],
               %a6[21],%a7[21],%a8[21],%a9[21],%aa[21],%ab[21]] *
       poly z [%b0[21],%b1[21],%b2[21],%b3[21],%b4[21],%b5[21],
               %b6[21],%b7[21],%b8[21],%b9[21],%ba[21],%bb[21]])
      [2, z**12+z**3+1] /\
eqmod (poly z [%R0[22],%R1[22],%R2[22],%R3[22],%R4[22],%R5[22],
               %R6[22],%R7[22],%R8[22],%R9[22],%Ra[22],%Rb[22]])
      (poly z [%a0[22],%a1[22],%a2[22],%a3[22],%a4[22],%a5[22],
               %a6[22],%a7[22],%a8[22],%a9[22],%aa[22],%ab[22]] *
       poly z [%b0[22],%b1[22],%b2[22],%b3[22],%b4[22],%b5[22],
               %b6[22],%b7[22],%b8[22],%b9[22],%ba[22],%bb[22]])
      [2, z**12+z**3+1] /\
eqmod (poly z [%R0[23],%R1[23],%R2[23],%R3[23],%R4[23],%R5[23],
               %R6[23],%R7[23],%R8[23],%R9[23],%Ra[23],%Rb[23]])
      (poly z [%a0[23],%a1[23],%a2[23],%a3[23],%a4[23],%a5[23],
               %a6[23],%a7[23],%a8[23],%a9[23],%aa[23],%ab[23]] *
       poly z [%b0[23],%b1[23],%b2[23],%b3[23],%b4[23],%b5[23],
               %b6[23],%b7[23],%b8[23],%b9[23],%ba[23],%bb[23]])
      [2, z**12+z**3+1] /\
eqmod (poly z [%R0[24],%R1[24],%R2[24],%R3[24],%R4[24],%R5[24],
               %R6[24],%R7[24],%R8[24],%R9[24],%Ra[24],%Rb[24]])
      (poly z [%a0[24],%a1[24],%a2[24],%a3[24],%a4[24],%a5[24],
               %a6[24],%a7[24],%a8[24],%a9[24],%aa[24],%ab[24]] *
       poly z [%b0[24],%b1[24],%b2[24],%b3[24],%b4[24],%b5[24],
               %b6[24],%b7[24],%b8[24],%b9[24],%ba[24],%bb[24]])
      [2, z**12+z**3+1] /\
eqmod (poly z [%R0[25],%R1[25],%R2[25],%R3[25],%R4[25],%R5[25],
               %R6[25],%R7[25],%R8[25],%R9[25],%Ra[25],%Rb[25]])
      (poly z [%a0[25],%a1[25],%a2[25],%a3[25],%a4[25],%a5[25],
               %a6[25],%a7[25],%a8[25],%a9[25],%aa[25],%ab[25]] *
       poly z [%b0[25],%b1[25],%b2[25],%b3[25],%b4[25],%b5[25],
               %b6[25],%b7[25],%b8[25],%b9[25],%ba[25],%bb[25]])
      [2, z**12+z**3+1] /\
eqmod (poly z [%R0[26],%R1[26],%R2[26],%R3[26],%R4[26],%R5[26],
               %R6[26],%R7[26],%R8[26],%R9[26],%Ra[26],%Rb[26]])
      (poly z [%a0[26],%a1[26],%a2[26],%a3[26],%a4[26],%a5[26],
               %a6[26],%a7[26],%a8[26],%a9[26],%aa[26],%ab[26]] *
       poly z [%b0[26],%b1[26],%b2[26],%b3[26],%b4[26],%b5[26],
               %b6[26],%b7[26],%b8[26],%b9[26],%ba[26],%bb[26]])
      [2, z**12+z**3+1] /\
eqmod (poly z [%R0[27],%R1[27],%R2[27],%R3[27],%R4[27],%R5[27],
               %R6[27],%R7[27],%R8[27],%R9[27],%Ra[27],%Rb[27]])
      (poly z [%a0[27],%a1[27],%a2[27],%a3[27],%a4[27],%a5[27],
               %a6[27],%a7[27],%a8[27],%a9[27],%aa[27],%ab[27]] *
       poly z [%b0[27],%b1[27],%b2[27],%b3[27],%b4[27],%b5[27],
               %b6[27],%b7[27],%b8[27],%b9[27],%ba[27],%bb[27]])
      [2, z**12+z**3+1] /\
eqmod (poly z [%R0[28],%R1[28],%R2[28],%R3[28],%R4[28],%R5[28],
               %R6[28],%R7[28],%R8[28],%R9[28],%Ra[28],%Rb[28]])
      (poly z [%a0[28],%a1[28],%a2[28],%a3[28],%a4[28],%a5[28],
               %a6[28],%a7[28],%a8[28],%a9[28],%aa[28],%ab[28]] *
       poly z [%b0[28],%b1[28],%b2[28],%b3[28],%b4[28],%b5[28],
               %b6[28],%b7[28],%b8[28],%b9[28],%ba[28],%bb[28]])
      [2, z**12+z**3+1] /\
eqmod (poly z [%R0[29],%R1[29],%R2[29],%R3[29],%R4[29],%R5[29],
               %R6[29],%R7[29],%R8[29],%R9[29],%Ra[29],%Rb[29]])
      (poly z [%a0[29],%a1[29],%a2[29],%a3[29],%a4[29],%a5[29],
               %a6[29],%a7[29],%a8[29],%a9[29],%aa[29],%ab[29]] *
       poly z [%b0[29],%b1[29],%b2[29],%b3[29],%b4[29],%b5[29],
               %b6[29],%b7[29],%b8[29],%b9[29],%ba[29],%bb[29]])
      [2, z**12+z**3+1] /\
eqmod (poly z [%R0[30],%R1[30],%R2[30],%R3[30],%R4[30],%R5[30],
               %R6[30],%R7[30],%R8[30],%R9[30],%Ra[30],%Rb[30]])
      (poly z [%a0[30],%a1[30],%a2[30],%a3[30],%a4[30],%a5[30],
               %a6[30],%a7[30],%a8[30],%a9[30],%aa[30],%ab[30]] *
       poly z [%b0[30],%b1[30],%b2[30],%b3[30],%b4[30],%b5[30],
               %b6[30],%b7[30],%b8[30],%b9[30],%ba[30],%bb[30]])
      [2, z**12+z**3+1] /\
eqmod (poly z [%R0[31],%R1[31],%R2[31],%R3[31],%R4[31],%R5[31],
               %R6[31],%R7[31],%R8[31],%R9[31],%Ra[31],%Rb[31]])
      (poly z [%a0[31],%a1[31],%a2[31],%a3[31],%a4[31],%a5[31],
               %a6[31],%a7[31],%a8[31],%a9[31],%aa[31],%ab[31]] *
       poly z [%b0[31],%b1[31],%b2[31],%b3[31],%b4[31],%b5[31],
               %b6[31],%b7[31],%b8[31],%b9[31],%ba[31],%bb[31]])
      [2, z**12+z**3+1] /\
eqmod (poly z [%R0[32],%R1[32],%R2[32],%R3[32],%R4[32],%R5[32],
               %R6[32],%R7[32],%R8[32],%R9[32],%Ra[32],%Rb[32]])
      (poly z [%a0[32],%a1[32],%a2[32],%a3[32],%a4[32],%a5[32],
               %a6[32],%a7[32],%a8[32],%a9[32],%aa[32],%ab[32]] *
       poly z [%b0[32],%b1[32],%b2[32],%b3[32],%b4[32],%b5[32],
               %b6[32],%b7[32],%b8[32],%b9[32],%ba[32],%bb[32]])
      [2, z**12+z**3+1] /\
eqmod (poly z [%R0[33],%R1[33],%R2[33],%R3[33],%R4[33],%R5[33],
               %R6[33],%R7[33],%R8[33],%R9[33],%Ra[33],%Rb[33]])
      (poly z [%a0[33],%a1[33],%a2[33],%a3[33],%a4[33],%a5[33],
               %a6[33],%a7[33],%a8[33],%a9[33],%aa[33],%ab[33]] *
       poly z [%b0[33],%b1[33],%b2[33],%b3[33],%b4[33],%b5[33],
               %b6[33],%b7[33],%b8[33],%b9[33],%ba[33],%bb[33]])
      [2, z**12+z**3+1] /\
eqmod (poly z [%R0[34],%R1[34],%R2[34],%R3[34],%R4[34],%R5[34],
               %R6[34],%R7[34],%R8[34],%R9[34],%Ra[34],%Rb[34]])
      (poly z [%a0[34],%a1[34],%a2[34],%a3[34],%a4[34],%a5[34],
               %a6[34],%a7[34],%a8[34],%a9[34],%aa[34],%ab[34]] *
       poly z [%b0[34],%b1[34],%b2[34],%b3[34],%b4[34],%b5[34],
               %b6[34],%b7[34],%b8[34],%b9[34],%ba[34],%bb[34]])
      [2, z**12+z**3+1] /\
eqmod (poly z [%R0[35],%R1[35],%R2[35],%R3[35],%R4[35],%R5[35],
               %R6[35],%R7[35],%R8[35],%R9[35],%Ra[35],%Rb[35]])
      (poly z [%a0[35],%a1[35],%a2[35],%a3[35],%a4[35],%a5[35],
               %a6[35],%a7[35],%a8[35],%a9[35],%aa[35],%ab[35]] *
       poly z [%b0[35],%b1[35],%b2[35],%b3[35],%b4[35],%b5[35],
               %b6[35],%b7[35],%b8[35],%b9[35],%ba[35],%bb[35]])
      [2, z**12+z**3+1] /\
eqmod (poly z [%R0[36],%R1[36],%R2[36],%R3[36],%R4[36],%R5[36],
               %R6[36],%R7[36],%R8[36],%R9[36],%Ra[36],%Rb[36]])
      (poly z [%a0[36],%a1[36],%a2[36],%a3[36],%a4[36],%a5[36],
               %a6[36],%a7[36],%a8[36],%a9[36],%aa[36],%ab[36]] *
       poly z [%b0[36],%b1[36],%b2[36],%b3[36],%b4[36],%b5[36],
               %b6[36],%b7[36],%b8[36],%b9[36],%ba[36],%bb[36]])
      [2, z**12+z**3+1] /\
eqmod (poly z [%R0[37],%R1[37],%R2[37],%R3[37],%R4[37],%R5[37],
               %R6[37],%R7[37],%R8[37],%R9[37],%Ra[37],%Rb[37]])
      (poly z [%a0[37],%a1[37],%a2[37],%a3[37],%a4[37],%a5[37],
               %a6[37],%a7[37],%a8[37],%a9[37],%aa[37],%ab[37]] *
       poly z [%b0[37],%b1[37],%b2[37],%b3[37],%b4[37],%b5[37],
               %b6[37],%b7[37],%b8[37],%b9[37],%ba[37],%bb[37]])
      [2, z**12+z**3+1] /\
eqmod (poly z [%R0[38],%R1[38],%R2[38],%R3[38],%R4[38],%R5[38],
               %R6[38],%R7[38],%R8[38],%R9[38],%Ra[38],%Rb[38]])
      (poly z [%a0[38],%a1[38],%a2[38],%a3[38],%a4[38],%a5[38],
               %a6[38],%a7[38],%a8[38],%a9[38],%aa[38],%ab[38]] *
       poly z [%b0[38],%b1[38],%b2[38],%b3[38],%b4[38],%b5[38],
               %b6[38],%b7[38],%b8[38],%b9[38],%ba[38],%bb[38]])
      [2, z**12+z**3+1] /\
eqmod (poly z [%R0[39],%R1[39],%R2[39],%R3[39],%R4[39],%R5[39],
               %R6[39],%R7[39],%R8[39],%R9[39],%Ra[39],%Rb[39]])
      (poly z [%a0[39],%a1[39],%a2[39],%a3[39],%a4[39],%a5[39],
               %a6[39],%a7[39],%a8[39],%a9[39],%aa[39],%ab[39]] *
       poly z [%b0[39],%b1[39],%b2[39],%b3[39],%b4[39],%b5[39],
               %b6[39],%b7[39],%b8[39],%b9[39],%ba[39],%bb[39]])
      [2, z**12+z**3+1] /\
eqmod (poly z [%R0[40],%R1[40],%R2[40],%R3[40],%R4[40],%R5[40],
               %R6[40],%R7[40],%R8[40],%R9[40],%Ra[40],%Rb[40]])
      (poly z [%a0[40],%a1[40],%a2[40],%a3[40],%a4[40],%a5[40],
               %a6[40],%a7[40],%a8[40],%a9[40],%aa[40],%ab[40]] *
       poly z [%b0[40],%b1[40],%b2[40],%b3[40],%b4[40],%b5[40],
               %b6[40],%b7[40],%b8[40],%b9[40],%ba[40],%bb[40]])
      [2, z**12+z**3+1] /\
eqmod (poly z [%R0[41],%R1[41],%R2[41],%R3[41],%R4[41],%R5[41],
               %R6[41],%R7[41],%R8[41],%R9[41],%Ra[41],%Rb[41]])
      (poly z [%a0[41],%a1[41],%a2[41],%a3[41],%a4[41],%a5[41],
               %a6[41],%a7[41],%a8[41],%a9[41],%aa[41],%ab[41]] *
       poly z [%b0[41],%b1[41],%b2[41],%b3[41],%b4[41],%b5[41],
               %b6[41],%b7[41],%b8[41],%b9[41],%ba[41],%bb[41]])
      [2, z**12+z**3+1] /\
eqmod (poly z [%R0[42],%R1[42],%R2[42],%R3[42],%R4[42],%R5[42],
               %R6[42],%R7[42],%R8[42],%R9[42],%Ra[42],%Rb[42]])
      (poly z [%a0[42],%a1[42],%a2[42],%a3[42],%a4[42],%a5[42],
               %a6[42],%a7[42],%a8[42],%a9[42],%aa[42],%ab[42]] *
       poly z [%b0[42],%b1[42],%b2[42],%b3[42],%b4[42],%b5[42],
               %b6[42],%b7[42],%b8[42],%b9[42],%ba[42],%bb[42]])
      [2, z**12+z**3+1] /\
eqmod (poly z [%R0[43],%R1[43],%R2[43],%R3[43],%R4[43],%R5[43],
               %R6[43],%R7[43],%R8[43],%R9[43],%Ra[43],%Rb[43]])
      (poly z [%a0[43],%a1[43],%a2[43],%a3[43],%a4[43],%a5[43],
               %a6[43],%a7[43],%a8[43],%a9[43],%aa[43],%ab[43]] *
       poly z [%b0[43],%b1[43],%b2[43],%b3[43],%b4[43],%b5[43],
               %b6[43],%b7[43],%b8[43],%b9[43],%ba[43],%bb[43]])
      [2, z**12+z**3+1] /\
eqmod (poly z [%R0[44],%R1[44],%R2[44],%R3[44],%R4[44],%R5[44],
               %R6[44],%R7[44],%R8[44],%R9[44],%Ra[44],%Rb[44]])
      (poly z [%a0[44],%a1[44],%a2[44],%a3[44],%a4[44],%a5[44],
               %a6[44],%a7[44],%a8[44],%a9[44],%aa[44],%ab[44]] *
       poly z [%b0[44],%b1[44],%b2[44],%b3[44],%b4[44],%b5[44],
               %b6[44],%b7[44],%b8[44],%b9[44],%ba[44],%bb[44]])
      [2, z**12+z**3+1] /\
eqmod (poly z [%R0[45],%R1[45],%R2[45],%R3[45],%R4[45],%R5[45],
               %R6[45],%R7[45],%R8[45],%R9[45],%Ra[45],%Rb[45]])
      (poly z [%a0[45],%a1[45],%a2[45],%a3[45],%a4[45],%a5[45],
               %a6[45],%a7[45],%a8[45],%a9[45],%aa[45],%ab[45]] *
       poly z [%b0[45],%b1[45],%b2[45],%b3[45],%b4[45],%b5[45],
               %b6[45],%b7[45],%b8[45],%b9[45],%ba[45],%bb[45]])
      [2, z**12+z**3+1] /\
eqmod (poly z [%R0[46],%R1[46],%R2[46],%R3[46],%R4[46],%R5[46],
               %R6[46],%R7[46],%R8[46],%R9[46],%Ra[46],%Rb[46]])
      (poly z [%a0[46],%a1[46],%a2[46],%a3[46],%a4[46],%a5[46],
               %a6[46],%a7[46],%a8[46],%a9[46],%aa[46],%ab[46]] *
       poly z [%b0[46],%b1[46],%b2[46],%b3[46],%b4[46],%b5[46],
               %b6[46],%b7[46],%b8[46],%b9[46],%ba[46],%bb[46]])
      [2, z**12+z**3+1] /\
eqmod (poly z [%R0[47],%R1[47],%R2[47],%R3[47],%R4[47],%R5[47],
               %R6[47],%R7[47],%R8[47],%R9[47],%Ra[47],%Rb[47]])
      (poly z [%a0[47],%a1[47],%a2[47],%a3[47],%a4[47],%a5[47],
               %a6[47],%a7[47],%a8[47],%a9[47],%aa[47],%ab[47]] *
       poly z [%b0[47],%b1[47],%b2[47],%b3[47],%b4[47],%b5[47],
               %b6[47],%b7[47],%b8[47],%b9[47],%ba[47],%bb[47]])
      [2, z**12+z**3+1] /\
eqmod (poly z [%R0[48],%R1[48],%R2[48],%R3[48],%R4[48],%R5[48],
               %R6[48],%R7[48],%R8[48],%R9[48],%Ra[48],%Rb[48]])
      (poly z [%a0[48],%a1[48],%a2[48],%a3[48],%a4[48],%a5[48],
               %a6[48],%a7[48],%a8[48],%a9[48],%aa[48],%ab[48]] *
       poly z [%b0[48],%b1[48],%b2[48],%b3[48],%b4[48],%b5[48],
               %b6[48],%b7[48],%b8[48],%b9[48],%ba[48],%bb[48]])
      [2, z**12+z**3+1] /\
eqmod (poly z [%R0[49],%R1[49],%R2[49],%R3[49],%R4[49],%R5[49],
               %R6[49],%R7[49],%R8[49],%R9[49],%Ra[49],%Rb[49]])
      (poly z [%a0[49],%a1[49],%a2[49],%a3[49],%a4[49],%a5[49],
               %a6[49],%a7[49],%a8[49],%a9[49],%aa[49],%ab[49]] *
       poly z [%b0[49],%b1[49],%b2[49],%b3[49],%b4[49],%b5[49],
               %b6[49],%b7[49],%b8[49],%b9[49],%ba[49],%bb[49]])
      [2, z**12+z**3+1] /\
eqmod (poly z [%R0[50],%R1[50],%R2[50],%R3[50],%R4[50],%R5[50],
               %R6[50],%R7[50],%R8[50],%R9[50],%Ra[50],%Rb[50]])
      (poly z [%a0[50],%a1[50],%a2[50],%a3[50],%a4[50],%a5[50],
               %a6[50],%a7[50],%a8[50],%a9[50],%aa[50],%ab[50]] *
       poly z [%b0[50],%b1[50],%b2[50],%b3[50],%b4[50],%b5[50],
               %b6[50],%b7[50],%b8[50],%b9[50],%ba[50],%bb[50]])
      [2, z**12+z**3+1] /\
eqmod (poly z [%R0[51],%R1[51],%R2[51],%R3[51],%R4[51],%R5[51],
               %R6[51],%R7[51],%R8[51],%R9[51],%Ra[51],%Rb[51]])
      (poly z [%a0[51],%a1[51],%a2[51],%a3[51],%a4[51],%a5[51],
               %a6[51],%a7[51],%a8[51],%a9[51],%aa[51],%ab[51]] *
       poly z [%b0[51],%b1[51],%b2[51],%b3[51],%b4[51],%b5[51],
               %b6[51],%b7[51],%b8[51],%b9[51],%ba[51],%bb[51]])
      [2, z**12+z**3+1] /\
eqmod (poly z [%R0[52],%R1[52],%R2[52],%R3[52],%R4[52],%R5[52],
               %R6[52],%R7[52],%R8[52],%R9[52],%Ra[52],%Rb[52]])
      (poly z [%a0[52],%a1[52],%a2[52],%a3[52],%a4[52],%a5[52],
               %a6[52],%a7[52],%a8[52],%a9[52],%aa[52],%ab[52]] *
       poly z [%b0[52],%b1[52],%b2[52],%b3[52],%b4[52],%b5[52],
               %b6[52],%b7[52],%b8[52],%b9[52],%ba[52],%bb[52]])
      [2, z**12+z**3+1] /\
eqmod (poly z [%R0[53],%R1[53],%R2[53],%R3[53],%R4[53],%R5[53],
               %R6[53],%R7[53],%R8[53],%R9[53],%Ra[53],%Rb[53]])
      (poly z [%a0[53],%a1[53],%a2[53],%a3[53],%a4[53],%a5[53],
               %a6[53],%a7[53],%a8[53],%a9[53],%aa[53],%ab[53]] *
       poly z [%b0[53],%b1[53],%b2[53],%b3[53],%b4[53],%b5[53],
               %b6[53],%b7[53],%b8[53],%b9[53],%ba[53],%bb[53]])
      [2, z**12+z**3+1] /\
eqmod (poly z [%R0[54],%R1[54],%R2[54],%R3[54],%R4[54],%R5[54],
               %R6[54],%R7[54],%R8[54],%R9[54],%Ra[54],%Rb[54]])
      (poly z [%a0[54],%a1[54],%a2[54],%a3[54],%a4[54],%a5[54],
               %a6[54],%a7[54],%a8[54],%a9[54],%aa[54],%ab[54]] *
       poly z [%b0[54],%b1[54],%b2[54],%b3[54],%b4[54],%b5[54],
               %b6[54],%b7[54],%b8[54],%b9[54],%ba[54],%bb[54]])
      [2, z**12+z**3+1] /\
eqmod (poly z [%R0[55],%R1[55],%R2[55],%R3[55],%R4[55],%R5[55],
               %R6[55],%R7[55],%R8[55],%R9[55],%Ra[55],%Rb[55]])
      (poly z [%a0[55],%a1[55],%a2[55],%a3[55],%a4[55],%a5[55],
               %a6[55],%a7[55],%a8[55],%a9[55],%aa[55],%ab[55]] *
       poly z [%b0[55],%b1[55],%b2[55],%b3[55],%b4[55],%b5[55],
               %b6[55],%b7[55],%b8[55],%b9[55],%ba[55],%bb[55]])
      [2, z**12+z**3+1] /\
eqmod (poly z [%R0[56],%R1[56],%R2[56],%R3[56],%R4[56],%R5[56],
               %R6[56],%R7[56],%R8[56],%R9[56],%Ra[56],%Rb[56]])
      (poly z [%a0[56],%a1[56],%a2[56],%a3[56],%a4[56],%a5[56],
               %a6[56],%a7[56],%a8[56],%a9[56],%aa[56],%ab[56]] *
       poly z [%b0[56],%b1[56],%b2[56],%b3[56],%b4[56],%b5[56],
               %b6[56],%b7[56],%b8[56],%b9[56],%ba[56],%bb[56]])
      [2, z**12+z**3+1] /\
eqmod (poly z [%R0[57],%R1[57],%R2[57],%R3[57],%R4[57],%R5[57],
               %R6[57],%R7[57],%R8[57],%R9[57],%Ra[57],%Rb[57]])
      (poly z [%a0[57],%a1[57],%a2[57],%a3[57],%a4[57],%a5[57],
               %a6[57],%a7[57],%a8[57],%a9[57],%aa[57],%ab[57]] *
       poly z [%b0[57],%b1[57],%b2[57],%b3[57],%b4[57],%b5[57],
               %b6[57],%b7[57],%b8[57],%b9[57],%ba[57],%bb[57]])
      [2, z**12+z**3+1] /\
eqmod (poly z [%R0[58],%R1[58],%R2[58],%R3[58],%R4[58],%R5[58],
               %R6[58],%R7[58],%R8[58],%R9[58],%Ra[58],%Rb[58]])
      (poly z [%a0[58],%a1[58],%a2[58],%a3[58],%a4[58],%a5[58],
               %a6[58],%a7[58],%a8[58],%a9[58],%aa[58],%ab[58]] *
       poly z [%b0[58],%b1[58],%b2[58],%b3[58],%b4[58],%b5[58],
               %b6[58],%b7[58],%b8[58],%b9[58],%ba[58],%bb[58]])
      [2, z**12+z**3+1] /\
eqmod (poly z [%R0[59],%R1[59],%R2[59],%R3[59],%R4[59],%R5[59],
               %R6[59],%R7[59],%R8[59],%R9[59],%Ra[59],%Rb[59]])
      (poly z [%a0[59],%a1[59],%a2[59],%a3[59],%a4[59],%a5[59],
               %a6[59],%a7[59],%a8[59],%a9[59],%aa[59],%ab[59]] *
       poly z [%b0[59],%b1[59],%b2[59],%b3[59],%b4[59],%b5[59],
               %b6[59],%b7[59],%b8[59],%b9[59],%ba[59],%bb[59]])
      [2, z**12+z**3+1] /\
eqmod (poly z [%R0[60],%R1[60],%R2[60],%R3[60],%R4[60],%R5[60],
               %R6[60],%R7[60],%R8[60],%R9[60],%Ra[60],%Rb[60]])
      (poly z [%a0[60],%a1[60],%a2[60],%a3[60],%a4[60],%a5[60],
               %a6[60],%a7[60],%a8[60],%a9[60],%aa[60],%ab[60]] *
       poly z [%b0[60],%b1[60],%b2[60],%b3[60],%b4[60],%b5[60],
               %b6[60],%b7[60],%b8[60],%b9[60],%ba[60],%bb[60]])
      [2, z**12+z**3+1] /\
eqmod (poly z [%R0[61],%R1[61],%R2[61],%R3[61],%R4[61],%R5[61],
               %R6[61],%R7[61],%R8[61],%R9[61],%Ra[61],%Rb[61]])
      (poly z [%a0[61],%a1[61],%a2[61],%a3[61],%a4[61],%a5[61],
               %a6[61],%a7[61],%a8[61],%a9[61],%aa[61],%ab[61]] *
       poly z [%b0[61],%b1[61],%b2[61],%b3[61],%b4[61],%b5[61],
               %b6[61],%b7[61],%b8[61],%b9[61],%ba[61],%bb[61]])
      [2, z**12+z**3+1] /\
eqmod (poly z [%R0[62],%R1[62],%R2[62],%R3[62],%R4[62],%R5[62],
               %R6[62],%R7[62],%R8[62],%R9[62],%Ra[62],%Rb[62]])
      (poly z [%a0[62],%a1[62],%a2[62],%a3[62],%a4[62],%a5[62],
               %a6[62],%a7[62],%a8[62],%a9[62],%aa[62],%ab[62]] *
       poly z [%b0[62],%b1[62],%b2[62],%b3[62],%b4[62],%b5[62],
               %b6[62],%b7[62],%b8[62],%b9[62],%ba[62],%bb[62]])
      [2, z**12+z**3+1] /\
eqmod (poly z [%R0[63],%R1[63],%R2[63],%R3[63],%R4[63],%R5[63],
               %R6[63],%R7[63],%R8[63],%R9[63],%Ra[63],%Rb[63]])
      (poly z [%a0[63],%a1[63],%a2[63],%a3[63],%a4[63],%a5[63],
               %a6[63],%a7[63],%a8[63],%a9[63],%aa[63],%ab[63]] *
       poly z [%b0[63],%b1[63],%b2[63],%b3[63],%b4[63],%b5[63],
               %b6[63],%b7[63],%b8[63],%b9[63],%ba[63],%bb[63]])
      [2, z**12+z**3+1]
&&
true;

{
eqmod (poly z [%R0[0],%R1[0],%R2[0],%R3[0],%R4[0],%R5[0],
               %R6[0],%R7[0],%R8[0],%R9[0],%Ra[0],%Rb[0]])
      (poly z [%a0[0],%a1[0],%a2[0],%a3[0],%a4[0],%a5[0],
               %a6[0],%a7[0],%a8[0],%a9[0],%aa[0],%ab[0]] *
       poly z [%b0[0],%b1[0],%b2[0],%b3[0],%b4[0],%b5[0],
               %b6[0],%b7[0],%b8[0],%b9[0],%ba[0],%bb[0]])
      [2, z**12+z**3+1] /\
eqmod (poly z [%R0[1],%R1[1],%R2[1],%R3[1],%R4[1],%R5[1],
               %R6[1],%R7[1],%R8[1],%R9[1],%Ra[1],%Rb[1]])
      (poly z [%a0[1],%a1[1],%a2[1],%a3[1],%a4[1],%a5[1],
               %a6[1],%a7[1],%a8[1],%a9[1],%aa[1],%ab[1]] *
       poly z [%b0[1],%b1[1],%b2[1],%b3[1],%b4[1],%b5[1],
               %b6[1],%b7[1],%b8[1],%b9[1],%ba[1],%bb[1]])
      [2, z**12+z**3+1] /\
eqmod (poly z [%R0[2],%R1[2],%R2[2],%R3[2],%R4[2],%R5[2],
               %R6[2],%R7[2],%R8[2],%R9[2],%Ra[2],%Rb[2]])
      (poly z [%a0[2],%a1[2],%a2[2],%a3[2],%a4[2],%a5[2],
               %a6[2],%a7[2],%a8[2],%a9[2],%aa[2],%ab[2]] *
       poly z [%b0[2],%b1[2],%b2[2],%b3[2],%b4[2],%b5[2],
               %b6[2],%b7[2],%b8[2],%b9[2],%ba[2],%bb[2]])
      [2, z**12+z**3+1] /\
eqmod (poly z [%R0[3],%R1[3],%R2[3],%R3[3],%R4[3],%R5[3],
               %R6[3],%R7[3],%R8[3],%R9[3],%Ra[3],%Rb[3]])
      (poly z [%a0[3],%a1[3],%a2[3],%a3[3],%a4[3],%a5[3],
               %a6[3],%a7[3],%a8[3],%a9[3],%aa[3],%ab[3]] *
       poly z [%b0[3],%b1[3],%b2[3],%b3[3],%b4[3],%b5[3],
               %b6[3],%b7[3],%b8[3],%b9[3],%ba[3],%bb[3]])
      [2, z**12+z**3+1] /\
eqmod (poly z [%R0[4],%R1[4],%R2[4],%R3[4],%R4[4],%R5[4],
               %R6[4],%R7[4],%R8[4],%R9[4],%Ra[4],%Rb[4]])
      (poly z [%a0[4],%a1[4],%a2[4],%a3[4],%a4[4],%a5[4],
               %a6[4],%a7[4],%a8[4],%a9[4],%aa[4],%ab[4]] *
       poly z [%b0[4],%b1[4],%b2[4],%b3[4],%b4[4],%b5[4],
               %b6[4],%b7[4],%b8[4],%b9[4],%ba[4],%bb[4]])
      [2, z**12+z**3+1] /\
eqmod (poly z [%R0[5],%R1[5],%R2[5],%R3[5],%R4[5],%R5[5],
               %R6[5],%R7[5],%R8[5],%R9[5],%Ra[5],%Rb[5]])
      (poly z [%a0[5],%a1[5],%a2[5],%a3[5],%a4[5],%a5[5],
               %a6[5],%a7[5],%a8[5],%a9[5],%aa[5],%ab[5]] *
       poly z [%b0[5],%b1[5],%b2[5],%b3[5],%b4[5],%b5[5],
               %b6[5],%b7[5],%b8[5],%b9[5],%ba[5],%bb[5]])
      [2, z**12+z**3+1] /\
eqmod (poly z [%R0[6],%R1[6],%R2[6],%R3[6],%R4[6],%R5[6],
               %R6[6],%R7[6],%R8[6],%R9[6],%Ra[6],%Rb[6]])
      (poly z [%a0[6],%a1[6],%a2[6],%a3[6],%a4[6],%a5[6],
               %a6[6],%a7[6],%a8[6],%a9[6],%aa[6],%ab[6]] *
       poly z [%b0[6],%b1[6],%b2[6],%b3[6],%b4[6],%b5[6],
               %b6[6],%b7[6],%b8[6],%b9[6],%ba[6],%bb[6]])
      [2, z**12+z**3+1] /\
eqmod (poly z [%R0[7],%R1[7],%R2[7],%R3[7],%R4[7],%R5[7],
               %R6[7],%R7[7],%R8[7],%R9[7],%Ra[7],%Rb[7]])
      (poly z [%a0[7],%a1[7],%a2[7],%a3[7],%a4[7],%a5[7],
               %a6[7],%a7[7],%a8[7],%a9[7],%aa[7],%ab[7]] *
       poly z [%b0[7],%b1[7],%b2[7],%b3[7],%b4[7],%b5[7],
               %b6[7],%b7[7],%b8[7],%b9[7],%ba[7],%bb[7]])
      [2, z**12+z**3+1] /\
eqmod (poly z [%R0[8],%R1[8],%R2[8],%R3[8],%R4[8],%R5[8],
               %R6[8],%R7[8],%R8[8],%R9[8],%Ra[8],%Rb[8]])
      (poly z [%a0[8],%a1[8],%a2[8],%a3[8],%a4[8],%a5[8],
               %a6[8],%a7[8],%a8[8],%a9[8],%aa[8],%ab[8]] *
       poly z [%b0[8],%b1[8],%b2[8],%b3[8],%b4[8],%b5[8],
               %b6[8],%b7[8],%b8[8],%b9[8],%ba[8],%bb[8]])
      [2, z**12+z**3+1] /\
eqmod (poly z [%R0[9],%R1[9],%R2[9],%R3[9],%R4[9],%R5[9],
               %R6[9],%R7[9],%R8[9],%R9[9],%Ra[9],%Rb[9]])
      (poly z [%a0[9],%a1[9],%a2[9],%a3[9],%a4[9],%a5[9],
               %a6[9],%a7[9],%a8[9],%a9[9],%aa[9],%ab[9]] *
       poly z [%b0[9],%b1[9],%b2[9],%b3[9],%b4[9],%b5[9],
               %b6[9],%b7[9],%b8[9],%b9[9],%ba[9],%bb[9]])
      [2, z**12+z**3+1] /\
eqmod (poly z [%R0[10],%R1[10],%R2[10],%R3[10],%R4[10],%R5[10],
               %R6[10],%R7[10],%R8[10],%R9[10],%Ra[10],%Rb[10]])
      (poly z [%a0[10],%a1[10],%a2[10],%a3[10],%a4[10],%a5[10],
               %a6[10],%a7[10],%a8[10],%a9[10],%aa[10],%ab[10]] *
       poly z [%b0[10],%b1[10],%b2[10],%b3[10],%b4[10],%b5[10],
               %b6[10],%b7[10],%b8[10],%b9[10],%ba[10],%bb[10]])
      [2, z**12+z**3+1] /\
eqmod (poly z [%R0[11],%R1[11],%R2[11],%R3[11],%R4[11],%R5[11],
               %R6[11],%R7[11],%R8[11],%R9[11],%Ra[11],%Rb[11]])
      (poly z [%a0[11],%a1[11],%a2[11],%a3[11],%a4[11],%a5[11],
               %a6[11],%a7[11],%a8[11],%a9[11],%aa[11],%ab[11]] *
       poly z [%b0[11],%b1[11],%b2[11],%b3[11],%b4[11],%b5[11],
               %b6[11],%b7[11],%b8[11],%b9[11],%ba[11],%bb[11]])
      [2, z**12+z**3+1] /\
eqmod (poly z [%R0[12],%R1[12],%R2[12],%R3[12],%R4[12],%R5[12],
               %R6[12],%R7[12],%R8[12],%R9[12],%Ra[12],%Rb[12]])
      (poly z [%a0[12],%a1[12],%a2[12],%a3[12],%a4[12],%a5[12],
               %a6[12],%a7[12],%a8[12],%a9[12],%aa[12],%ab[12]] *
       poly z [%b0[12],%b1[12],%b2[12],%b3[12],%b4[12],%b5[12],
               %b6[12],%b7[12],%b8[12],%b9[12],%ba[12],%bb[12]])
      [2, z**12+z**3+1] /\
eqmod (poly z [%R0[13],%R1[13],%R2[13],%R3[13],%R4[13],%R5[13],
               %R6[13],%R7[13],%R8[13],%R9[13],%Ra[13],%Rb[13]])
      (poly z [%a0[13],%a1[13],%a2[13],%a3[13],%a4[13],%a5[13],
               %a6[13],%a7[13],%a8[13],%a9[13],%aa[13],%ab[13]] *
       poly z [%b0[13],%b1[13],%b2[13],%b3[13],%b4[13],%b5[13],
               %b6[13],%b7[13],%b8[13],%b9[13],%ba[13],%bb[13]])
      [2, z**12+z**3+1] /\
eqmod (poly z [%R0[14],%R1[14],%R2[14],%R3[14],%R4[14],%R5[14],
               %R6[14],%R7[14],%R8[14],%R9[14],%Ra[14],%Rb[14]])
      (poly z [%a0[14],%a1[14],%a2[14],%a3[14],%a4[14],%a5[14],
               %a6[14],%a7[14],%a8[14],%a9[14],%aa[14],%ab[14]] *
       poly z [%b0[14],%b1[14],%b2[14],%b3[14],%b4[14],%b5[14],
               %b6[14],%b7[14],%b8[14],%b9[14],%ba[14],%bb[14]])
      [2, z**12+z**3+1] /\
eqmod (poly z [%R0[15],%R1[15],%R2[15],%R3[15],%R4[15],%R5[15],
               %R6[15],%R7[15],%R8[15],%R9[15],%Ra[15],%Rb[15]])
      (poly z [%a0[15],%a1[15],%a2[15],%a3[15],%a4[15],%a5[15],
               %a6[15],%a7[15],%a8[15],%a9[15],%aa[15],%ab[15]] *
       poly z [%b0[15],%b1[15],%b2[15],%b3[15],%b4[15],%b5[15],
               %b6[15],%b7[15],%b8[15],%b9[15],%ba[15],%bb[15]])
      [2, z**12+z**3+1] /\
eqmod (poly z [%R0[16],%R1[16],%R2[16],%R3[16],%R4[16],%R5[16],
               %R6[16],%R7[16],%R8[16],%R9[16],%Ra[16],%Rb[16]])
      (poly z [%a0[16],%a1[16],%a2[16],%a3[16],%a4[16],%a5[16],
               %a6[16],%a7[16],%a8[16],%a9[16],%aa[16],%ab[16]] *
       poly z [%b0[16],%b1[16],%b2[16],%b3[16],%b4[16],%b5[16],
               %b6[16],%b7[16],%b8[16],%b9[16],%ba[16],%bb[16]])
      [2, z**12+z**3+1] /\
eqmod (poly z [%R0[17],%R1[17],%R2[17],%R3[17],%R4[17],%R5[17],
               %R6[17],%R7[17],%R8[17],%R9[17],%Ra[17],%Rb[17]])
      (poly z [%a0[17],%a1[17],%a2[17],%a3[17],%a4[17],%a5[17],
               %a6[17],%a7[17],%a8[17],%a9[17],%aa[17],%ab[17]] *
       poly z [%b0[17],%b1[17],%b2[17],%b3[17],%b4[17],%b5[17],
               %b6[17],%b7[17],%b8[17],%b9[17],%ba[17],%bb[17]])
      [2, z**12+z**3+1] /\
eqmod (poly z [%R0[18],%R1[18],%R2[18],%R3[18],%R4[18],%R5[18],
               %R6[18],%R7[18],%R8[18],%R9[18],%Ra[18],%Rb[18]])
      (poly z [%a0[18],%a1[18],%a2[18],%a3[18],%a4[18],%a5[18],
               %a6[18],%a7[18],%a8[18],%a9[18],%aa[18],%ab[18]] *
       poly z [%b0[18],%b1[18],%b2[18],%b3[18],%b4[18],%b5[18],
               %b6[18],%b7[18],%b8[18],%b9[18],%ba[18],%bb[18]])
      [2, z**12+z**3+1] /\
eqmod (poly z [%R0[19],%R1[19],%R2[19],%R3[19],%R4[19],%R5[19],
               %R6[19],%R7[19],%R8[19],%R9[19],%Ra[19],%Rb[19]])
      (poly z [%a0[19],%a1[19],%a2[19],%a3[19],%a4[19],%a5[19],
               %a6[19],%a7[19],%a8[19],%a9[19],%aa[19],%ab[19]] *
       poly z [%b0[19],%b1[19],%b2[19],%b3[19],%b4[19],%b5[19],
               %b6[19],%b7[19],%b8[19],%b9[19],%ba[19],%bb[19]])
      [2, z**12+z**3+1] /\
eqmod (poly z [%R0[20],%R1[20],%R2[20],%R3[20],%R4[20],%R5[20],
               %R6[20],%R7[20],%R8[20],%R9[20],%Ra[20],%Rb[20]])
      (poly z [%a0[20],%a1[20],%a2[20],%a3[20],%a4[20],%a5[20],
               %a6[20],%a7[20],%a8[20],%a9[20],%aa[20],%ab[20]] *
       poly z [%b0[20],%b1[20],%b2[20],%b3[20],%b4[20],%b5[20],
               %b6[20],%b7[20],%b8[20],%b9[20],%ba[20],%bb[20]])
      [2, z**12+z**3+1] /\
eqmod (poly z [%R0[21],%R1[21],%R2[21],%R3[21],%R4[21],%R5[21],
               %R6[21],%R7[21],%R8[21],%R9[21],%Ra[21],%Rb[21]])
      (poly z [%a0[21],%a1[21],%a2[21],%a3[21],%a4[21],%a5[21],
               %a6[21],%a7[21],%a8[21],%a9[21],%aa[21],%ab[21]] *
       poly z [%b0[21],%b1[21],%b2[21],%b3[21],%b4[21],%b5[21],
               %b6[21],%b7[21],%b8[21],%b9[21],%ba[21],%bb[21]])
      [2, z**12+z**3+1] /\
eqmod (poly z [%R0[22],%R1[22],%R2[22],%R3[22],%R4[22],%R5[22],
               %R6[22],%R7[22],%R8[22],%R9[22],%Ra[22],%Rb[22]])
      (poly z [%a0[22],%a1[22],%a2[22],%a3[22],%a4[22],%a5[22],
               %a6[22],%a7[22],%a8[22],%a9[22],%aa[22],%ab[22]] *
       poly z [%b0[22],%b1[22],%b2[22],%b3[22],%b4[22],%b5[22],
               %b6[22],%b7[22],%b8[22],%b9[22],%ba[22],%bb[22]])
      [2, z**12+z**3+1] /\
eqmod (poly z [%R0[23],%R1[23],%R2[23],%R3[23],%R4[23],%R5[23],
               %R6[23],%R7[23],%R8[23],%R9[23],%Ra[23],%Rb[23]])
      (poly z [%a0[23],%a1[23],%a2[23],%a3[23],%a4[23],%a5[23],
               %a6[23],%a7[23],%a8[23],%a9[23],%aa[23],%ab[23]] *
       poly z [%b0[23],%b1[23],%b2[23],%b3[23],%b4[23],%b5[23],
               %b6[23],%b7[23],%b8[23],%b9[23],%ba[23],%bb[23]])
      [2, z**12+z**3+1] /\
eqmod (poly z [%R0[24],%R1[24],%R2[24],%R3[24],%R4[24],%R5[24],
               %R6[24],%R7[24],%R8[24],%R9[24],%Ra[24],%Rb[24]])
      (poly z [%a0[24],%a1[24],%a2[24],%a3[24],%a4[24],%a5[24],
               %a6[24],%a7[24],%a8[24],%a9[24],%aa[24],%ab[24]] *
       poly z [%b0[24],%b1[24],%b2[24],%b3[24],%b4[24],%b5[24],
               %b6[24],%b7[24],%b8[24],%b9[24],%ba[24],%bb[24]])
      [2, z**12+z**3+1] /\
eqmod (poly z [%R0[25],%R1[25],%R2[25],%R3[25],%R4[25],%R5[25],
               %R6[25],%R7[25],%R8[25],%R9[25],%Ra[25],%Rb[25]])
      (poly z [%a0[25],%a1[25],%a2[25],%a3[25],%a4[25],%a5[25],
               %a6[25],%a7[25],%a8[25],%a9[25],%aa[25],%ab[25]] *
       poly z [%b0[25],%b1[25],%b2[25],%b3[25],%b4[25],%b5[25],
               %b6[25],%b7[25],%b8[25],%b9[25],%ba[25],%bb[25]])
      [2, z**12+z**3+1] /\
eqmod (poly z [%R0[26],%R1[26],%R2[26],%R3[26],%R4[26],%R5[26],
               %R6[26],%R7[26],%R8[26],%R9[26],%Ra[26],%Rb[26]])
      (poly z [%a0[26],%a1[26],%a2[26],%a3[26],%a4[26],%a5[26],
               %a6[26],%a7[26],%a8[26],%a9[26],%aa[26],%ab[26]] *
       poly z [%b0[26],%b1[26],%b2[26],%b3[26],%b4[26],%b5[26],
               %b6[26],%b7[26],%b8[26],%b9[26],%ba[26],%bb[26]])
      [2, z**12+z**3+1] /\
eqmod (poly z [%R0[27],%R1[27],%R2[27],%R3[27],%R4[27],%R5[27],
               %R6[27],%R7[27],%R8[27],%R9[27],%Ra[27],%Rb[27]])
      (poly z [%a0[27],%a1[27],%a2[27],%a3[27],%a4[27],%a5[27],
               %a6[27],%a7[27],%a8[27],%a9[27],%aa[27],%ab[27]] *
       poly z [%b0[27],%b1[27],%b2[27],%b3[27],%b4[27],%b5[27],
               %b6[27],%b7[27],%b8[27],%b9[27],%ba[27],%bb[27]])
      [2, z**12+z**3+1] /\
eqmod (poly z [%R0[28],%R1[28],%R2[28],%R3[28],%R4[28],%R5[28],
               %R6[28],%R7[28],%R8[28],%R9[28],%Ra[28],%Rb[28]])
      (poly z [%a0[28],%a1[28],%a2[28],%a3[28],%a4[28],%a5[28],
               %a6[28],%a7[28],%a8[28],%a9[28],%aa[28],%ab[28]] *
       poly z [%b0[28],%b1[28],%b2[28],%b3[28],%b4[28],%b5[28],
               %b6[28],%b7[28],%b8[28],%b9[28],%ba[28],%bb[28]])
      [2, z**12+z**3+1] /\
eqmod (poly z [%R0[29],%R1[29],%R2[29],%R3[29],%R4[29],%R5[29],
               %R6[29],%R7[29],%R8[29],%R9[29],%Ra[29],%Rb[29]])
      (poly z [%a0[29],%a1[29],%a2[29],%a3[29],%a4[29],%a5[29],
               %a6[29],%a7[29],%a8[29],%a9[29],%aa[29],%ab[29]] *
       poly z [%b0[29],%b1[29],%b2[29],%b3[29],%b4[29],%b5[29],
               %b6[29],%b7[29],%b8[29],%b9[29],%ba[29],%bb[29]])
      [2, z**12+z**3+1] /\
eqmod (poly z [%R0[30],%R1[30],%R2[30],%R3[30],%R4[30],%R5[30],
               %R6[30],%R7[30],%R8[30],%R9[30],%Ra[30],%Rb[30]])
      (poly z [%a0[30],%a1[30],%a2[30],%a3[30],%a4[30],%a5[30],
               %a6[30],%a7[30],%a8[30],%a9[30],%aa[30],%ab[30]] *
       poly z [%b0[30],%b1[30],%b2[30],%b3[30],%b4[30],%b5[30],
               %b6[30],%b7[30],%b8[30],%b9[30],%ba[30],%bb[30]])
      [2, z**12+z**3+1] /\
eqmod (poly z [%R0[31],%R1[31],%R2[31],%R3[31],%R4[31],%R5[31],
               %R6[31],%R7[31],%R8[31],%R9[31],%Ra[31],%Rb[31]])
      (poly z [%a0[31],%a1[31],%a2[31],%a3[31],%a4[31],%a5[31],
               %a6[31],%a7[31],%a8[31],%a9[31],%aa[31],%ab[31]] *
       poly z [%b0[31],%b1[31],%b2[31],%b3[31],%b4[31],%b5[31],
               %b6[31],%b7[31],%b8[31],%b9[31],%ba[31],%bb[31]])
      [2, z**12+z**3+1] /\
eqmod (poly z [%R0[32],%R1[32],%R2[32],%R3[32],%R4[32],%R5[32],
               %R6[32],%R7[32],%R8[32],%R9[32],%Ra[32],%Rb[32]])
      (poly z [%a0[32],%a1[32],%a2[32],%a3[32],%a4[32],%a5[32],
               %a6[32],%a7[32],%a8[32],%a9[32],%aa[32],%ab[32]] *
       poly z [%b0[32],%b1[32],%b2[32],%b3[32],%b4[32],%b5[32],
               %b6[32],%b7[32],%b8[32],%b9[32],%ba[32],%bb[32]])
      [2, z**12+z**3+1] /\
eqmod (poly z [%R0[33],%R1[33],%R2[33],%R3[33],%R4[33],%R5[33],
               %R6[33],%R7[33],%R8[33],%R9[33],%Ra[33],%Rb[33]])
      (poly z [%a0[33],%a1[33],%a2[33],%a3[33],%a4[33],%a5[33],
               %a6[33],%a7[33],%a8[33],%a9[33],%aa[33],%ab[33]] *
       poly z [%b0[33],%b1[33],%b2[33],%b3[33],%b4[33],%b5[33],
               %b6[33],%b7[33],%b8[33],%b9[33],%ba[33],%bb[33]])
      [2, z**12+z**3+1] /\
eqmod (poly z [%R0[34],%R1[34],%R2[34],%R3[34],%R4[34],%R5[34],
               %R6[34],%R7[34],%R8[34],%R9[34],%Ra[34],%Rb[34]])
      (poly z [%a0[34],%a1[34],%a2[34],%a3[34],%a4[34],%a5[34],
               %a6[34],%a7[34],%a8[34],%a9[34],%aa[34],%ab[34]] *
       poly z [%b0[34],%b1[34],%b2[34],%b3[34],%b4[34],%b5[34],
               %b6[34],%b7[34],%b8[34],%b9[34],%ba[34],%bb[34]])
      [2, z**12+z**3+1] /\
eqmod (poly z [%R0[35],%R1[35],%R2[35],%R3[35],%R4[35],%R5[35],
               %R6[35],%R7[35],%R8[35],%R9[35],%Ra[35],%Rb[35]])
      (poly z [%a0[35],%a1[35],%a2[35],%a3[35],%a4[35],%a5[35],
               %a6[35],%a7[35],%a8[35],%a9[35],%aa[35],%ab[35]] *
       poly z [%b0[35],%b1[35],%b2[35],%b3[35],%b4[35],%b5[35],
               %b6[35],%b7[35],%b8[35],%b9[35],%ba[35],%bb[35]])
      [2, z**12+z**3+1] /\
eqmod (poly z [%R0[36],%R1[36],%R2[36],%R3[36],%R4[36],%R5[36],
               %R6[36],%R7[36],%R8[36],%R9[36],%Ra[36],%Rb[36]])
      (poly z [%a0[36],%a1[36],%a2[36],%a3[36],%a4[36],%a5[36],
               %a6[36],%a7[36],%a8[36],%a9[36],%aa[36],%ab[36]] *
       poly z [%b0[36],%b1[36],%b2[36],%b3[36],%b4[36],%b5[36],
               %b6[36],%b7[36],%b8[36],%b9[36],%ba[36],%bb[36]])
      [2, z**12+z**3+1] /\
eqmod (poly z [%R0[37],%R1[37],%R2[37],%R3[37],%R4[37],%R5[37],
               %R6[37],%R7[37],%R8[37],%R9[37],%Ra[37],%Rb[37]])
      (poly z [%a0[37],%a1[37],%a2[37],%a3[37],%a4[37],%a5[37],
               %a6[37],%a7[37],%a8[37],%a9[37],%aa[37],%ab[37]] *
       poly z [%b0[37],%b1[37],%b2[37],%b3[37],%b4[37],%b5[37],
               %b6[37],%b7[37],%b8[37],%b9[37],%ba[37],%bb[37]])
      [2, z**12+z**3+1] /\
eqmod (poly z [%R0[38],%R1[38],%R2[38],%R3[38],%R4[38],%R5[38],
               %R6[38],%R7[38],%R8[38],%R9[38],%Ra[38],%Rb[38]])
      (poly z [%a0[38],%a1[38],%a2[38],%a3[38],%a4[38],%a5[38],
               %a6[38],%a7[38],%a8[38],%a9[38],%aa[38],%ab[38]] *
       poly z [%b0[38],%b1[38],%b2[38],%b3[38],%b4[38],%b5[38],
               %b6[38],%b7[38],%b8[38],%b9[38],%ba[38],%bb[38]])
      [2, z**12+z**3+1] /\
eqmod (poly z [%R0[39],%R1[39],%R2[39],%R3[39],%R4[39],%R5[39],
               %R6[39],%R7[39],%R8[39],%R9[39],%Ra[39],%Rb[39]])
      (poly z [%a0[39],%a1[39],%a2[39],%a3[39],%a4[39],%a5[39],
               %a6[39],%a7[39],%a8[39],%a9[39],%aa[39],%ab[39]] *
       poly z [%b0[39],%b1[39],%b2[39],%b3[39],%b4[39],%b5[39],
               %b6[39],%b7[39],%b8[39],%b9[39],%ba[39],%bb[39]])
      [2, z**12+z**3+1] /\
eqmod (poly z [%R0[40],%R1[40],%R2[40],%R3[40],%R4[40],%R5[40],
               %R6[40],%R7[40],%R8[40],%R9[40],%Ra[40],%Rb[40]])
      (poly z [%a0[40],%a1[40],%a2[40],%a3[40],%a4[40],%a5[40],
               %a6[40],%a7[40],%a8[40],%a9[40],%aa[40],%ab[40]] *
       poly z [%b0[40],%b1[40],%b2[40],%b3[40],%b4[40],%b5[40],
               %b6[40],%b7[40],%b8[40],%b9[40],%ba[40],%bb[40]])
      [2, z**12+z**3+1] /\
eqmod (poly z [%R0[41],%R1[41],%R2[41],%R3[41],%R4[41],%R5[41],
               %R6[41],%R7[41],%R8[41],%R9[41],%Ra[41],%Rb[41]])
      (poly z [%a0[41],%a1[41],%a2[41],%a3[41],%a4[41],%a5[41],
               %a6[41],%a7[41],%a8[41],%a9[41],%aa[41],%ab[41]] *
       poly z [%b0[41],%b1[41],%b2[41],%b3[41],%b4[41],%b5[41],
               %b6[41],%b7[41],%b8[41],%b9[41],%ba[41],%bb[41]])
      [2, z**12+z**3+1] /\
eqmod (poly z [%R0[42],%R1[42],%R2[42],%R3[42],%R4[42],%R5[42],
               %R6[42],%R7[42],%R8[42],%R9[42],%Ra[42],%Rb[42]])
      (poly z [%a0[42],%a1[42],%a2[42],%a3[42],%a4[42],%a5[42],
               %a6[42],%a7[42],%a8[42],%a9[42],%aa[42],%ab[42]] *
       poly z [%b0[42],%b1[42],%b2[42],%b3[42],%b4[42],%b5[42],
               %b6[42],%b7[42],%b8[42],%b9[42],%ba[42],%bb[42]])
      [2, z**12+z**3+1] /\
eqmod (poly z [%R0[43],%R1[43],%R2[43],%R3[43],%R4[43],%R5[43],
               %R6[43],%R7[43],%R8[43],%R9[43],%Ra[43],%Rb[43]])
      (poly z [%a0[43],%a1[43],%a2[43],%a3[43],%a4[43],%a5[43],
               %a6[43],%a7[43],%a8[43],%a9[43],%aa[43],%ab[43]] *
       poly z [%b0[43],%b1[43],%b2[43],%b3[43],%b4[43],%b5[43],
               %b6[43],%b7[43],%b8[43],%b9[43],%ba[43],%bb[43]])
      [2, z**12+z**3+1] /\
eqmod (poly z [%R0[44],%R1[44],%R2[44],%R3[44],%R4[44],%R5[44],
               %R6[44],%R7[44],%R8[44],%R9[44],%Ra[44],%Rb[44]])
      (poly z [%a0[44],%a1[44],%a2[44],%a3[44],%a4[44],%a5[44],
               %a6[44],%a7[44],%a8[44],%a9[44],%aa[44],%ab[44]] *
       poly z [%b0[44],%b1[44],%b2[44],%b3[44],%b4[44],%b5[44],
               %b6[44],%b7[44],%b8[44],%b9[44],%ba[44],%bb[44]])
      [2, z**12+z**3+1] /\
eqmod (poly z [%R0[45],%R1[45],%R2[45],%R3[45],%R4[45],%R5[45],
               %R6[45],%R7[45],%R8[45],%R9[45],%Ra[45],%Rb[45]])
      (poly z [%a0[45],%a1[45],%a2[45],%a3[45],%a4[45],%a5[45],
               %a6[45],%a7[45],%a8[45],%a9[45],%aa[45],%ab[45]] *
       poly z [%b0[45],%b1[45],%b2[45],%b3[45],%b4[45],%b5[45],
               %b6[45],%b7[45],%b8[45],%b9[45],%ba[45],%bb[45]])
      [2, z**12+z**3+1] /\
eqmod (poly z [%R0[46],%R1[46],%R2[46],%R3[46],%R4[46],%R5[46],
               %R6[46],%R7[46],%R8[46],%R9[46],%Ra[46],%Rb[46]])
      (poly z [%a0[46],%a1[46],%a2[46],%a3[46],%a4[46],%a5[46],
               %a6[46],%a7[46],%a8[46],%a9[46],%aa[46],%ab[46]] *
       poly z [%b0[46],%b1[46],%b2[46],%b3[46],%b4[46],%b5[46],
               %b6[46],%b7[46],%b8[46],%b9[46],%ba[46],%bb[46]])
      [2, z**12+z**3+1] /\
eqmod (poly z [%R0[47],%R1[47],%R2[47],%R3[47],%R4[47],%R5[47],
               %R6[47],%R7[47],%R8[47],%R9[47],%Ra[47],%Rb[47]])
      (poly z [%a0[47],%a1[47],%a2[47],%a3[47],%a4[47],%a5[47],
               %a6[47],%a7[47],%a8[47],%a9[47],%aa[47],%ab[47]] *
       poly z [%b0[47],%b1[47],%b2[47],%b3[47],%b4[47],%b5[47],
               %b6[47],%b7[47],%b8[47],%b9[47],%ba[47],%bb[47]])
      [2, z**12+z**3+1] /\
eqmod (poly z [%R0[48],%R1[48],%R2[48],%R3[48],%R4[48],%R5[48],
               %R6[48],%R7[48],%R8[48],%R9[48],%Ra[48],%Rb[48]])
      (poly z [%a0[48],%a1[48],%a2[48],%a3[48],%a4[48],%a5[48],
               %a6[48],%a7[48],%a8[48],%a9[48],%aa[48],%ab[48]] *
       poly z [%b0[48],%b1[48],%b2[48],%b3[48],%b4[48],%b5[48],
               %b6[48],%b7[48],%b8[48],%b9[48],%ba[48],%bb[48]])
      [2, z**12+z**3+1] /\
eqmod (poly z [%R0[49],%R1[49],%R2[49],%R3[49],%R4[49],%R5[49],
               %R6[49],%R7[49],%R8[49],%R9[49],%Ra[49],%Rb[49]])
      (poly z [%a0[49],%a1[49],%a2[49],%a3[49],%a4[49],%a5[49],
               %a6[49],%a7[49],%a8[49],%a9[49],%aa[49],%ab[49]] *
       poly z [%b0[49],%b1[49],%b2[49],%b3[49],%b4[49],%b5[49],
               %b6[49],%b7[49],%b8[49],%b9[49],%ba[49],%bb[49]])
      [2, z**12+z**3+1] /\
eqmod (poly z [%R0[50],%R1[50],%R2[50],%R3[50],%R4[50],%R5[50],
               %R6[50],%R7[50],%R8[50],%R9[50],%Ra[50],%Rb[50]])
      (poly z [%a0[50],%a1[50],%a2[50],%a3[50],%a4[50],%a5[50],
               %a6[50],%a7[50],%a8[50],%a9[50],%aa[50],%ab[50]] *
       poly z [%b0[50],%b1[50],%b2[50],%b3[50],%b4[50],%b5[50],
               %b6[50],%b7[50],%b8[50],%b9[50],%ba[50],%bb[50]])
      [2, z**12+z**3+1] /\
eqmod (poly z [%R0[51],%R1[51],%R2[51],%R3[51],%R4[51],%R5[51],
               %R6[51],%R7[51],%R8[51],%R9[51],%Ra[51],%Rb[51]])
      (poly z [%a0[51],%a1[51],%a2[51],%a3[51],%a4[51],%a5[51],
               %a6[51],%a7[51],%a8[51],%a9[51],%aa[51],%ab[51]] *
       poly z [%b0[51],%b1[51],%b2[51],%b3[51],%b4[51],%b5[51],
               %b6[51],%b7[51],%b8[51],%b9[51],%ba[51],%bb[51]])
      [2, z**12+z**3+1] /\
eqmod (poly z [%R0[52],%R1[52],%R2[52],%R3[52],%R4[52],%R5[52],
               %R6[52],%R7[52],%R8[52],%R9[52],%Ra[52],%Rb[52]])
      (poly z [%a0[52],%a1[52],%a2[52],%a3[52],%a4[52],%a5[52],
               %a6[52],%a7[52],%a8[52],%a9[52],%aa[52],%ab[52]] *
       poly z [%b0[52],%b1[52],%b2[52],%b3[52],%b4[52],%b5[52],
               %b6[52],%b7[52],%b8[52],%b9[52],%ba[52],%bb[52]])
      [2, z**12+z**3+1] /\
eqmod (poly z [%R0[53],%R1[53],%R2[53],%R3[53],%R4[53],%R5[53],
               %R6[53],%R7[53],%R8[53],%R9[53],%Ra[53],%Rb[53]])
      (poly z [%a0[53],%a1[53],%a2[53],%a3[53],%a4[53],%a5[53],
               %a6[53],%a7[53],%a8[53],%a9[53],%aa[53],%ab[53]] *
       poly z [%b0[53],%b1[53],%b2[53],%b3[53],%b4[53],%b5[53],
               %b6[53],%b7[53],%b8[53],%b9[53],%ba[53],%bb[53]])
      [2, z**12+z**3+1] /\
eqmod (poly z [%R0[54],%R1[54],%R2[54],%R3[54],%R4[54],%R5[54],
               %R6[54],%R7[54],%R8[54],%R9[54],%Ra[54],%Rb[54]])
      (poly z [%a0[54],%a1[54],%a2[54],%a3[54],%a4[54],%a5[54],
               %a6[54],%a7[54],%a8[54],%a9[54],%aa[54],%ab[54]] *
       poly z [%b0[54],%b1[54],%b2[54],%b3[54],%b4[54],%b5[54],
               %b6[54],%b7[54],%b8[54],%b9[54],%ba[54],%bb[54]])
      [2, z**12+z**3+1] /\
eqmod (poly z [%R0[55],%R1[55],%R2[55],%R3[55],%R4[55],%R5[55],
               %R6[55],%R7[55],%R8[55],%R9[55],%Ra[55],%Rb[55]])
      (poly z [%a0[55],%a1[55],%a2[55],%a3[55],%a4[55],%a5[55],
               %a6[55],%a7[55],%a8[55],%a9[55],%aa[55],%ab[55]] *
       poly z [%b0[55],%b1[55],%b2[55],%b3[55],%b4[55],%b5[55],
               %b6[55],%b7[55],%b8[55],%b9[55],%ba[55],%bb[55]])
      [2, z**12+z**3+1] /\
eqmod (poly z [%R0[56],%R1[56],%R2[56],%R3[56],%R4[56],%R5[56],
               %R6[56],%R7[56],%R8[56],%R9[56],%Ra[56],%Rb[56]])
      (poly z [%a0[56],%a1[56],%a2[56],%a3[56],%a4[56],%a5[56],
               %a6[56],%a7[56],%a8[56],%a9[56],%aa[56],%ab[56]] *
       poly z [%b0[56],%b1[56],%b2[56],%b3[56],%b4[56],%b5[56],
               %b6[56],%b7[56],%b8[56],%b9[56],%ba[56],%bb[56]])
      [2, z**12+z**3+1] /\
eqmod (poly z [%R0[57],%R1[57],%R2[57],%R3[57],%R4[57],%R5[57],
               %R6[57],%R7[57],%R8[57],%R9[57],%Ra[57],%Rb[57]])
      (poly z [%a0[57],%a1[57],%a2[57],%a3[57],%a4[57],%a5[57],
               %a6[57],%a7[57],%a8[57],%a9[57],%aa[57],%ab[57]] *
       poly z [%b0[57],%b1[57],%b2[57],%b3[57],%b4[57],%b5[57],
               %b6[57],%b7[57],%b8[57],%b9[57],%ba[57],%bb[57]])
      [2, z**12+z**3+1] /\
eqmod (poly z [%R0[58],%R1[58],%R2[58],%R3[58],%R4[58],%R5[58],
               %R6[58],%R7[58],%R8[58],%R9[58],%Ra[58],%Rb[58]])
      (poly z [%a0[58],%a1[58],%a2[58],%a3[58],%a4[58],%a5[58],
               %a6[58],%a7[58],%a8[58],%a9[58],%aa[58],%ab[58]] *
       poly z [%b0[58],%b1[58],%b2[58],%b3[58],%b4[58],%b5[58],
               %b6[58],%b7[58],%b8[58],%b9[58],%ba[58],%bb[58]])
      [2, z**12+z**3+1] /\
eqmod (poly z [%R0[59],%R1[59],%R2[59],%R3[59],%R4[59],%R5[59],
               %R6[59],%R7[59],%R8[59],%R9[59],%Ra[59],%Rb[59]])
      (poly z [%a0[59],%a1[59],%a2[59],%a3[59],%a4[59],%a5[59],
               %a6[59],%a7[59],%a8[59],%a9[59],%aa[59],%ab[59]] *
       poly z [%b0[59],%b1[59],%b2[59],%b3[59],%b4[59],%b5[59],
               %b6[59],%b7[59],%b8[59],%b9[59],%ba[59],%bb[59]])
      [2, z**12+z**3+1] /\
eqmod (poly z [%R0[60],%R1[60],%R2[60],%R3[60],%R4[60],%R5[60],
               %R6[60],%R7[60],%R8[60],%R9[60],%Ra[60],%Rb[60]])
      (poly z [%a0[60],%a1[60],%a2[60],%a3[60],%a4[60],%a5[60],
               %a6[60],%a7[60],%a8[60],%a9[60],%aa[60],%ab[60]] *
       poly z [%b0[60],%b1[60],%b2[60],%b3[60],%b4[60],%b5[60],
               %b6[60],%b7[60],%b8[60],%b9[60],%ba[60],%bb[60]])
      [2, z**12+z**3+1] /\
eqmod (poly z [%R0[61],%R1[61],%R2[61],%R3[61],%R4[61],%R5[61],
               %R6[61],%R7[61],%R8[61],%R9[61],%Ra[61],%Rb[61]])
      (poly z [%a0[61],%a1[61],%a2[61],%a3[61],%a4[61],%a5[61],
               %a6[61],%a7[61],%a8[61],%a9[61],%aa[61],%ab[61]] *
       poly z [%b0[61],%b1[61],%b2[61],%b3[61],%b4[61],%b5[61],
               %b6[61],%b7[61],%b8[61],%b9[61],%ba[61],%bb[61]])
      [2, z**12+z**3+1] /\
eqmod (poly z [%R0[62],%R1[62],%R2[62],%R3[62],%R4[62],%R5[62],
               %R6[62],%R7[62],%R8[62],%R9[62],%Ra[62],%Rb[62]])
      (poly z [%a0[62],%a1[62],%a2[62],%a3[62],%a4[62],%a5[62],
               %a6[62],%a7[62],%a8[62],%a9[62],%aa[62],%ab[62]] *
       poly z [%b0[62],%b1[62],%b2[62],%b3[62],%b4[62],%b5[62],
               %b6[62],%b7[62],%b8[62],%b9[62],%ba[62],%bb[62]])
      [2, z**12+z**3+1] /\
eqmod (poly z [%R0[63],%R1[63],%R2[63],%R3[63],%R4[63],%R5[63],
               %R6[63],%R7[63],%R8[63],%R9[63],%Ra[63],%Rb[63]])
      (poly z [%a0[63],%a1[63],%a2[63],%a3[63],%a4[63],%a5[63],
               %a6[63],%a7[63],%a8[63],%a9[63],%aa[63],%ab[63]] *
       poly z [%b0[63],%b1[63],%b2[63],%b3[63],%b4[63],%b5[63],
               %b6[63],%b7[63],%b8[63],%b9[63],%ba[63],%bb[63]])
      [2, z**12+z**3+1]
&&
true
}

proc main (uint16 z, uint16 X,
bit c000,bit c001,bit c002,bit c003,bit c004,bit c005,
bit c006,bit c007,bit c008,bit c009,bit c00a,bit c00b,
bit c010,bit c011,bit c012,bit c013,bit c014,bit c015,
bit c016,bit c017,bit c018,bit c019,bit c01a,bit c01b,
bit c020,bit c021,bit c022,bit c023,bit c024,bit c025,
bit c026,bit c027,bit c028,bit c029,bit c02a,bit c02b,
bit c030,bit c031,bit c032,bit c033,bit c034,bit c035,
bit c036,bit c037,bit c038,bit c039,bit c03a,bit c03b,
bit c040,bit c041,bit c042,bit c043,bit c044,bit c045,
bit c046,bit c047,bit c048,bit c049,bit c04a,bit c04b,
bit c050,bit c051,bit c052,bit c053,bit c054,bit c055,
bit c056,bit c057,bit c058,bit c059,bit c05a,bit c05b,
bit c060,bit c061,bit c062,bit c063,bit c064,bit c065,
bit c066,bit c067,bit c068,bit c069,bit c06a,bit c06b,
bit c070,bit c071,bit c072,bit c073,bit c074,bit c075,
bit c076,bit c077,bit c078,bit c079,bit c07a,bit c07b,
bit c080,bit c081,bit c082,bit c083,bit c084,bit c085,
bit c086,bit c087,bit c088,bit c089,bit c08a,bit c08b,
bit c090,bit c091,bit c092,bit c093,bit c094,bit c095,
bit c096,bit c097,bit c098,bit c099,bit c09a,bit c09b,
bit c0a0,bit c0a1,bit c0a2,bit c0a3,bit c0a4,bit c0a5,
bit c0a6,bit c0a7,bit c0a8,bit c0a9,bit c0aa,bit c0ab,
bit c0b0,bit c0b1,bit c0b2,bit c0b3,bit c0b4,bit c0b5,
bit c0b6,bit c0b7,bit c0b8,bit c0b9,bit c0ba,bit c0bb,
bit c0c0,bit c0c1,bit c0c2,bit c0c3,bit c0c4,bit c0c5,
bit c0c6,bit c0c7,bit c0c8,bit c0c9,bit c0ca,bit c0cb,
bit c0d0,bit c0d1,bit c0d2,bit c0d3,bit c0d4,bit c0d5,
bit c0d6,bit c0d7,bit c0d8,bit c0d9,bit c0da,bit c0db,
bit c0e0,bit c0e1,bit c0e2,bit c0e3,bit c0e4,bit c0e5,
bit c0e6,bit c0e7,bit c0e8,bit c0e9,bit c0ea,bit c0eb,
bit c0f0,bit c0f1,bit c0f2,bit c0f3,bit c0f4,bit c0f5,
bit c0f6,bit c0f7,bit c0f8,bit c0f9,bit c0fa,bit c0fb,
bit c100,bit c101,bit c102,bit c103,bit c104,bit c105,
bit c106,bit c107,bit c108,bit c109,bit c10a,bit c10b,
bit c110,bit c111,bit c112,bit c113,bit c114,bit c115,
bit c116,bit c117,bit c118,bit c119,bit c11a,bit c11b,
bit c120,bit c121,bit c122,bit c123,bit c124,bit c125,
bit c126,bit c127,bit c128,bit c129,bit c12a,bit c12b,
bit c130,bit c131,bit c132,bit c133,bit c134,bit c135,
bit c136,bit c137,bit c138,bit c139,bit c13a,bit c13b,
bit c140,bit c141,bit c142,bit c143,bit c144,bit c145,
bit c146,bit c147,bit c148,bit c149,bit c14a,bit c14b,
bit c150,bit c151,bit c152,bit c153,bit c154,bit c155,
bit c156,bit c157,bit c158,bit c159,bit c15a,bit c15b,
bit c160,bit c161,bit c162,bit c163,bit c164,bit c165,
bit c166,bit c167,bit c168,bit c169,bit c16a,bit c16b,
bit c170,bit c171,bit c172,bit c173,bit c174,bit c175,
bit c176,bit c177,bit c178,bit c179,bit c17a,bit c17b,
bit c180,bit c181,bit c182,bit c183,bit c184,bit c185,
bit c186,bit c187,bit c188,bit c189,bit c18a,bit c18b,
bit c190,bit c191,bit c192,bit c193,bit c194,bit c195,
bit c196,bit c197,bit c198,bit c199,bit c19a,bit c19b,
bit c1a0,bit c1a1,bit c1a2,bit c1a3,bit c1a4,bit c1a5,
bit c1a6,bit c1a7,bit c1a8,bit c1a9,bit c1aa,bit c1ab,
bit c1b0,bit c1b1,bit c1b2,bit c1b3,bit c1b4,bit c1b5,
bit c1b6,bit c1b7,bit c1b8,bit c1b9,bit c1ba,bit c1bb,
bit c1c0,bit c1c1,bit c1c2,bit c1c3,bit c1c4,bit c1c5,
bit c1c6,bit c1c7,bit c1c8,bit c1c9,bit c1ca,bit c1cb,
bit c1d0,bit c1d1,bit c1d2,bit c1d3,bit c1d4,bit c1d5,
bit c1d6,bit c1d7,bit c1d8,bit c1d9,bit c1da,bit c1db,
bit c1e0,bit c1e1,bit c1e2,bit c1e3,bit c1e4,bit c1e5,
bit c1e6,bit c1e7,bit c1e8,bit c1e9,bit c1ea,bit c1eb,
bit c1f0,bit c1f1,bit c1f2,bit c1f3,bit c1f4,bit c1f5,
bit c1f6,bit c1f7,bit c1f8,bit c1f9,bit c1fa,bit c1fb,
bit c200,bit c201,bit c202,bit c203,bit c204,bit c205,
bit c206,bit c207,bit c208,bit c209,bit c20a,bit c20b,
bit c210,bit c211,bit c212,bit c213,bit c214,bit c215,
bit c216,bit c217,bit c218,bit c219,bit c21a,bit c21b,
bit c220,bit c221,bit c222,bit c223,bit c224,bit c225,
bit c226,bit c227,bit c228,bit c229,bit c22a,bit c22b,
bit c230,bit c231,bit c232,bit c233,bit c234,bit c235,
bit c236,bit c237,bit c238,bit c239,bit c23a,bit c23b,
bit c240,bit c241,bit c242,bit c243,bit c244,bit c245,
bit c246,bit c247,bit c248,bit c249,bit c24a,bit c24b,
bit c250,bit c251,bit c252,bit c253,bit c254,bit c255,
bit c256,bit c257,bit c258,bit c259,bit c25a,bit c25b,
bit c260,bit c261,bit c262,bit c263,bit c264,bit c265,
bit c266,bit c267,bit c268,bit c269,bit c26a,bit c26b,
bit c270,bit c271,bit c272,bit c273,bit c274,bit c275,
bit c276,bit c277,bit c278,bit c279,bit c27a,bit c27b,
bit c280,bit c281,bit c282,bit c283,bit c284,bit c285,
bit c286,bit c287,bit c288,bit c289,bit c28a,bit c28b,
bit c290,bit c291,bit c292,bit c293,bit c294,bit c295,
bit c296,bit c297,bit c298,bit c299,bit c29a,bit c29b,
bit c2a0,bit c2a1,bit c2a2,bit c2a3,bit c2a4,bit c2a5,
bit c2a6,bit c2a7,bit c2a8,bit c2a9,bit c2aa,bit c2ab,
bit c2b0,bit c2b1,bit c2b2,bit c2b3,bit c2b4,bit c2b5,
bit c2b6,bit c2b7,bit c2b8,bit c2b9,bit c2ba,bit c2bb,
bit c2c0,bit c2c1,bit c2c2,bit c2c3,bit c2c4,bit c2c5,
bit c2c6,bit c2c7,bit c2c8,bit c2c9,bit c2ca,bit c2cb,
bit c2d0,bit c2d1,bit c2d2,bit c2d3,bit c2d4,bit c2d5,
bit c2d6,bit c2d7,bit c2d8,bit c2d9,bit c2da,bit c2db,
bit c2e0,bit c2e1,bit c2e2,bit c2e3,bit c2e4,bit c2e5,
bit c2e6,bit c2e7,bit c2e8,bit c2e9,bit c2ea,bit c2eb,
bit c2f0,bit c2f1,bit c2f2,bit c2f3,bit c2f4,bit c2f5,
bit c2f6,bit c2f7,bit c2f8,bit c2f9,bit c2fa,bit c2fb,
bit c300,bit c301,bit c302,bit c303,bit c304,bit c305,
bit c306,bit c307,bit c308,bit c309,bit c30a,bit c30b,
bit c310,bit c311,bit c312,bit c313,bit c314,bit c315,
bit c316,bit c317,bit c318,bit c319,bit c31a,bit c31b,
bit c320,bit c321,bit c322,bit c323,bit c324,bit c325,
bit c326,bit c327,bit c328,bit c329,bit c32a,bit c32b,
bit c330,bit c331,bit c332,bit c333,bit c334,bit c335,
bit c336,bit c337,bit c338,bit c339,bit c33a,bit c33b,
bit c340,bit c341,bit c342,bit c343,bit c344,bit c345,
bit c346,bit c347,bit c348,bit c349,bit c34a,bit c34b,
bit c350,bit c351,bit c352,bit c353,bit c354,bit c355,
bit c356,bit c357,bit c358,bit c359,bit c35a,bit c35b,
bit c360,bit c361,bit c362,bit c363,bit c364,bit c365,
bit c366,bit c367,bit c368,bit c369,bit c36a,bit c36b,
bit c370,bit c371,bit c372,bit c373,bit c374,bit c375,
bit c376,bit c377,bit c378,bit c379,bit c37a,bit c37b,
bit c380,bit c381,bit c382,bit c383,bit c384,bit c385,
bit c386,bit c387,bit c388,bit c389,bit c38a,bit c38b,
bit c390,bit c391,bit c392,bit c393,bit c394,bit c395,
bit c396,bit c397,bit c398,bit c399,bit c39a,bit c39b,
bit c3a0,bit c3a1,bit c3a2,bit c3a3,bit c3a4,bit c3a5,
bit c3a6,bit c3a7,bit c3a8,bit c3a9,bit c3aa,bit c3ab,
bit c3b0,bit c3b1,bit c3b2,bit c3b3,bit c3b4,bit c3b5,
bit c3b6,bit c3b7,bit c3b8,bit c3b9,bit c3ba,bit c3bb,
bit c3c0,bit c3c1,bit c3c2,bit c3c3,bit c3c4,bit c3c5,
bit c3c6,bit c3c7,bit c3c8,bit c3c9,bit c3ca,bit c3cb,
bit c3d0,bit c3d1,bit c3d2,bit c3d3,bit c3d4,bit c3d5,
bit c3d6,bit c3d7,bit c3d8,bit c3d9,bit c3da,bit c3db,
bit c3e0,bit c3e1,bit c3e2,bit c3e3,bit c3e4,bit c3e5,
bit c3e6,bit c3e7,bit c3e8,bit c3e9,bit c3ea,bit c3eb,
bit c3f0,bit c3f1,bit c3f2,bit c3f3,bit c3f4,bit c3f5,
bit c3f6,bit c3f7,bit c3f8,bit c3f9,bit c3fa,bit c3fb
) =
{
  true
  &&
  true
}

(**************** constants ****************)



mov %L0x555555590a60
    [1@bit,1@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     0@bit,0@bit,0@bit,0@bit,1@bit,1@bit,1@bit,1@bit,
     0@bit,0@bit,0@bit,0@bit,1@bit,1@bit,0@bit,0@bit,
     0@bit,0@bit,1@bit,1@bit,1@bit,1@bit,1@bit,1@bit,
     0@bit,0@bit,0@bit,0@bit,1@bit,1@bit,0@bit,0@bit,
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,1@bit,1@bit,
     1@bit,1@bit,1@bit,1@bit,0@bit,0@bit,1@bit,1@bit,
     1@bit,1@bit,0@bit,0@bit,1@bit,1@bit,1@bit,1@bit];
mov %L0x555555590a68
    [0@bit,0@bit,1@bit,1@bit,0@bit,0@bit,0@bit,0@bit,
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,1@bit,1@bit,
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     0@bit,0@bit,1@bit,1@bit,1@bit,1@bit,0@bit,0@bit,
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     1@bit,1@bit,1@bit,1@bit,0@bit,0@bit,0@bit,0@bit,
     1@bit,1@bit,1@bit,1@bit,0@bit,0@bit,1@bit,1@bit,
     1@bit,1@bit,1@bit,1@bit,1@bit,1@bit,0@bit,0@bit];
mov %L0x555555590a70
    [0@bit,0@bit,1@bit,1@bit,1@bit,1@bit,0@bit,0@bit,
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,1@bit,1@bit,
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,1@bit,1@bit,
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     1@bit,1@bit,0@bit,0@bit,0@bit,0@bit,1@bit,1@bit,
     0@bit,0@bit,1@bit,1@bit,1@bit,1@bit,0@bit,0@bit,
     1@bit,1@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     0@bit,0@bit,0@bit,0@bit,1@bit,1@bit,0@bit,0@bit];
mov %L0x555555590a78
    [0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,1@bit,1@bit,
     0@bit,0@bit,0@bit,0@bit,1@bit,1@bit,1@bit,1@bit,
     0@bit,0@bit,0@bit,0@bit,1@bit,1@bit,0@bit,0@bit,
     1@bit,1@bit,1@bit,1@bit,0@bit,0@bit,0@bit,0@bit,
     0@bit,0@bit,1@bit,1@bit,1@bit,1@bit,0@bit,0@bit,
     1@bit,1@bit,1@bit,1@bit,0@bit,0@bit,0@bit,0@bit,
     1@bit,1@bit,1@bit,1@bit,1@bit,1@bit,1@bit,1@bit,
     0@bit,0@bit,1@bit,1@bit,0@bit,0@bit,1@bit,1@bit];
mov %L0x555555590a80
    [0@bit,0@bit,0@bit,0@bit,1@bit,1@bit,1@bit,1@bit,
     1@bit,1@bit,0@bit,0@bit,0@bit,0@bit,1@bit,1@bit,
     1@bit,1@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     1@bit,1@bit,0@bit,0@bit,1@bit,1@bit,1@bit,1@bit,
     1@bit,1@bit,1@bit,1@bit,1@bit,1@bit,0@bit,0@bit,
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,1@bit,1@bit,
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     1@bit,1@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit];
mov %L0x555555590a88
    [0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,1@bit,1@bit,
     0@bit,0@bit,1@bit,1@bit,0@bit,0@bit,1@bit,1@bit,
     0@bit,0@bit,1@bit,1@bit,0@bit,0@bit,1@bit,1@bit,
     0@bit,0@bit,0@bit,0@bit,1@bit,1@bit,1@bit,1@bit,
     1@bit,1@bit,1@bit,1@bit,0@bit,0@bit,0@bit,0@bit,
     0@bit,0@bit,1@bit,1@bit,1@bit,1@bit,0@bit,0@bit,
     1@bit,1@bit,1@bit,1@bit,1@bit,1@bit,1@bit,1@bit,
     1@bit,1@bit,1@bit,1@bit,1@bit,1@bit,0@bit,0@bit];
mov %L0x555555590a90
    [0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,1@bit,1@bit,
     0@bit,0@bit,1@bit,1@bit,1@bit,1@bit,0@bit,0@bit,
     0@bit,0@bit,1@bit,1@bit,1@bit,1@bit,0@bit,0@bit,
     1@bit,1@bit,1@bit,1@bit,0@bit,0@bit,0@bit,0@bit,
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,1@bit,1@bit,
     0@bit,0@bit,0@bit,0@bit,1@bit,1@bit,1@bit,1@bit,
     1@bit,1@bit,1@bit,1@bit,1@bit,1@bit,1@bit,1@bit,
     1@bit,1@bit,0@bit,0@bit,1@bit,1@bit,1@bit,1@bit];
mov %L0x555555590a98
    [0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,1@bit,1@bit,
     1@bit,1@bit,0@bit,0@bit,0@bit,0@bit,1@bit,1@bit,
     1@bit,1@bit,1@bit,1@bit,1@bit,1@bit,1@bit,1@bit,
     1@bit,1@bit,1@bit,1@bit,1@bit,1@bit,0@bit,0@bit,
     1@bit,1@bit,0@bit,0@bit,1@bit,1@bit,0@bit,0@bit,
     1@bit,1@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     0@bit,0@bit,0@bit,0@bit,1@bit,1@bit,0@bit,0@bit];
mov %L0x555555590aa0
    [0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     1@bit,1@bit,0@bit,0@bit,1@bit,1@bit,1@bit,1@bit,
     1@bit,1@bit,1@bit,1@bit,1@bit,1@bit,1@bit,1@bit,
     1@bit,1@bit,0@bit,0@bit,0@bit,0@bit,1@bit,1@bit,
     1@bit,1@bit,1@bit,1@bit,1@bit,1@bit,1@bit,1@bit,
     1@bit,1@bit,1@bit,1@bit,0@bit,0@bit,0@bit,0@bit,
     1@bit,1@bit,0@bit,0@bit,1@bit,1@bit,1@bit,1@bit,
     1@bit,1@bit,1@bit,1@bit,0@bit,0@bit,0@bit,0@bit];
mov %L0x555555590aa8
    [0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     0@bit,0@bit,1@bit,1@bit,0@bit,0@bit,1@bit,1@bit,
     0@bit,0@bit,0@bit,0@bit,1@bit,1@bit,1@bit,1@bit,
     0@bit,0@bit,0@bit,0@bit,1@bit,1@bit,1@bit,1@bit,
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     1@bit,1@bit,0@bit,0@bit,1@bit,1@bit,1@bit,1@bit,
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,1@bit,1@bit,
     1@bit,1@bit,1@bit,1@bit,1@bit,1@bit,1@bit,1@bit];
mov %L0x555555590ab0
    [0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     0@bit,0@bit,1@bit,1@bit,1@bit,1@bit,1@bit,1@bit,
     0@bit,0@bit,1@bit,1@bit,1@bit,1@bit,0@bit,0@bit,
     0@bit,0@bit,1@bit,1@bit,0@bit,0@bit,1@bit,1@bit,
     0@bit,0@bit,1@bit,1@bit,1@bit,1@bit,1@bit,1@bit,
     1@bit,1@bit,0@bit,0@bit,1@bit,1@bit,1@bit,1@bit,
     1@bit,1@bit,1@bit,1@bit,0@bit,0@bit,1@bit,1@bit,
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,1@bit,1@bit];
mov %L0x555555590ab8
    [0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,1@bit,1@bit,
     0@bit,0@bit,0@bit,0@bit,1@bit,1@bit,0@bit,0@bit,
     1@bit,1@bit,0@bit,0@bit,1@bit,1@bit,1@bit,1@bit,
     0@bit,0@bit,0@bit,0@bit,1@bit,1@bit,1@bit,1@bit,
     1@bit,1@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     0@bit,0@bit,1@bit,1@bit,1@bit,1@bit,0@bit,0@bit,
     0@bit,0@bit,1@bit,1@bit,1@bit,1@bit,1@bit,1@bit];
mov %L0x555555590ac0
    [1@bit,1@bit,1@bit,1@bit,0@bit,0@bit,0@bit,0@bit,
     0@bit,0@bit,0@bit,0@bit,1@bit,1@bit,1@bit,1@bit,
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     1@bit,1@bit,1@bit,1@bit,0@bit,0@bit,0@bit,0@bit,
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit];
mov %L0x555555590ac8
    [0@bit,0@bit,0@bit,0@bit,1@bit,1@bit,1@bit,1@bit,
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     0@bit,0@bit,0@bit,0@bit,1@bit,1@bit,1@bit,1@bit,
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     1@bit,1@bit,1@bit,1@bit,0@bit,0@bit,0@bit,0@bit,
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit];
mov %L0x555555590ad0
    [0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     1@bit,1@bit,1@bit,1@bit,0@bit,0@bit,0@bit,0@bit,
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     1@bit,1@bit,1@bit,1@bit,0@bit,0@bit,0@bit,0@bit,
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     1@bit,1@bit,1@bit,1@bit,0@bit,0@bit,0@bit,0@bit];
mov %L0x555555590ad8
    [0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     1@bit,1@bit,1@bit,1@bit,0@bit,0@bit,0@bit,0@bit,
     0@bit,0@bit,0@bit,0@bit,1@bit,1@bit,1@bit,1@bit,
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     1@bit,1@bit,1@bit,1@bit,0@bit,0@bit,0@bit,0@bit,
     0@bit,0@bit,0@bit,0@bit,1@bit,1@bit,1@bit,1@bit];
mov %L0x555555590ae0
    [0@bit,0@bit,0@bit,0@bit,1@bit,1@bit,1@bit,1@bit,
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     0@bit,0@bit,0@bit,0@bit,1@bit,1@bit,1@bit,1@bit,
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit];
mov %L0x555555590ae8
    [0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     1@bit,1@bit,1@bit,1@bit,0@bit,0@bit,0@bit,0@bit,
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit];
mov %L0x555555590af0
    [0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     0@bit,0@bit,0@bit,0@bit,1@bit,1@bit,1@bit,1@bit,
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     1@bit,1@bit,1@bit,1@bit,0@bit,0@bit,0@bit,0@bit,
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     0@bit,0@bit,0@bit,0@bit,1@bit,1@bit,1@bit,1@bit];
mov %L0x555555590af8
    [0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     1@bit,1@bit,1@bit,1@bit,0@bit,0@bit,0@bit,0@bit,
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     1@bit,1@bit,1@bit,1@bit,0@bit,0@bit,0@bit,0@bit,
     0@bit,0@bit,0@bit,0@bit,1@bit,1@bit,1@bit,1@bit,
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit];
mov %L0x555555590b00
    [0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     1@bit,1@bit,1@bit,1@bit,0@bit,0@bit,0@bit,0@bit,
     0@bit,0@bit,0@bit,0@bit,1@bit,1@bit,1@bit,1@bit,
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     0@bit,0@bit,0@bit,0@bit,1@bit,1@bit,1@bit,1@bit,
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit];
mov %L0x555555590b08
    [0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     0@bit,0@bit,0@bit,0@bit,1@bit,1@bit,1@bit,1@bit,
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     1@bit,1@bit,1@bit,1@bit,0@bit,0@bit,0@bit,0@bit,
     0@bit,0@bit,0@bit,0@bit,1@bit,1@bit,1@bit,1@bit,
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     1@bit,1@bit,1@bit,1@bit,0@bit,0@bit,0@bit,0@bit,
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit];
mov %L0x555555590b10
    [0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     1@bit,1@bit,1@bit,1@bit,0@bit,0@bit,0@bit,0@bit,
     0@bit,0@bit,0@bit,0@bit,1@bit,1@bit,1@bit,1@bit,
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit];
mov %L0x555555590b18
    [0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     0@bit,0@bit,0@bit,0@bit,1@bit,1@bit,1@bit,1@bit,
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit];
mov %L0x555555590b20
    [1@bit,1@bit,1@bit,1@bit,1@bit,1@bit,1@bit,1@bit,
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     1@bit,1@bit,1@bit,1@bit,1@bit,1@bit,1@bit,1@bit,
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     1@bit,1@bit,1@bit,1@bit,1@bit,1@bit,1@bit,1@bit,
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit];
mov %L0x555555590b28
    [0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     1@bit,1@bit,1@bit,1@bit,1@bit,1@bit,1@bit,1@bit,
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     1@bit,1@bit,1@bit,1@bit,1@bit,1@bit,1@bit,1@bit,
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit];
mov %L0x555555590b30
    [0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     1@bit,1@bit,1@bit,1@bit,1@bit,1@bit,1@bit,1@bit,
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     1@bit,1@bit,1@bit,1@bit,1@bit,1@bit,1@bit,1@bit,
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     1@bit,1@bit,1@bit,1@bit,1@bit,1@bit,1@bit,1@bit];
mov %L0x555555590b38
    [0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     1@bit,1@bit,1@bit,1@bit,1@bit,1@bit,1@bit,1@bit,
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     1@bit,1@bit,1@bit,1@bit,1@bit,1@bit,1@bit,1@bit,
     1@bit,1@bit,1@bit,1@bit,1@bit,1@bit,1@bit,1@bit];
mov %L0x555555590b40
    [0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     1@bit,1@bit,1@bit,1@bit,1@bit,1@bit,1@bit,1@bit,
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     1@bit,1@bit,1@bit,1@bit,1@bit,1@bit,1@bit,1@bit,
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     1@bit,1@bit,1@bit,1@bit,1@bit,1@bit,1@bit,1@bit,
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit];
mov %L0x555555590b48
    [0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     1@bit,1@bit,1@bit,1@bit,1@bit,1@bit,1@bit,1@bit,
     1@bit,1@bit,1@bit,1@bit,1@bit,1@bit,1@bit,1@bit,
     1@bit,1@bit,1@bit,1@bit,1@bit,1@bit,1@bit,1@bit,
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit];
mov %L0x555555590b50
    [0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     1@bit,1@bit,1@bit,1@bit,1@bit,1@bit,1@bit,1@bit,
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     1@bit,1@bit,1@bit,1@bit,1@bit,1@bit,1@bit,1@bit,
     1@bit,1@bit,1@bit,1@bit,1@bit,1@bit,1@bit,1@bit,
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit];
mov %L0x555555590b58
    [0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     1@bit,1@bit,1@bit,1@bit,1@bit,1@bit,1@bit,1@bit,
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     1@bit,1@bit,1@bit,1@bit,1@bit,1@bit,1@bit,1@bit,
     1@bit,1@bit,1@bit,1@bit,1@bit,1@bit,1@bit,1@bit,
     1@bit,1@bit,1@bit,1@bit,1@bit,1@bit,1@bit,1@bit];
mov %L0x555555590b60
    [0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     1@bit,1@bit,1@bit,1@bit,1@bit,1@bit,1@bit,1@bit,
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     1@bit,1@bit,1@bit,1@bit,1@bit,1@bit,1@bit,1@bit,
     1@bit,1@bit,1@bit,1@bit,1@bit,1@bit,1@bit,1@bit,
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     1@bit,1@bit,1@bit,1@bit,1@bit,1@bit,1@bit,1@bit,
     1@bit,1@bit,1@bit,1@bit,1@bit,1@bit,1@bit,1@bit];
mov %L0x555555590b68
    [0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     1@bit,1@bit,1@bit,1@bit,1@bit,1@bit,1@bit,1@bit,
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit];
mov %L0x555555590b70
    [0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     1@bit,1@bit,1@bit,1@bit,1@bit,1@bit,1@bit,1@bit,
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     1@bit,1@bit,1@bit,1@bit,1@bit,1@bit,1@bit,1@bit,
     1@bit,1@bit,1@bit,1@bit,1@bit,1@bit,1@bit,1@bit,
     1@bit,1@bit,1@bit,1@bit,1@bit,1@bit,1@bit,1@bit];
mov %L0x555555590b78
    [0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     1@bit,1@bit,1@bit,1@bit,1@bit,1@bit,1@bit,1@bit,
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit];
mov %L0x555555590b80
    [1@bit,1@bit,1@bit,1@bit,1@bit,1@bit,1@bit,1@bit,
     1@bit,1@bit,1@bit,1@bit,1@bit,1@bit,1@bit,1@bit,
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit];
mov %L0x555555590b88
    [0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     1@bit,1@bit,1@bit,1@bit,1@bit,1@bit,1@bit,1@bit,
     1@bit,1@bit,1@bit,1@bit,1@bit,1@bit,1@bit,1@bit,
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit];
mov %L0x555555590b90
    [0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit];
mov %L0x555555590b98
    [0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     1@bit,1@bit,1@bit,1@bit,1@bit,1@bit,1@bit,1@bit,
     1@bit,1@bit,1@bit,1@bit,1@bit,1@bit,1@bit,1@bit];
mov %L0x555555590ba0
    [0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     1@bit,1@bit,1@bit,1@bit,1@bit,1@bit,1@bit,1@bit,
     1@bit,1@bit,1@bit,1@bit,1@bit,1@bit,1@bit,1@bit,
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit];
mov %L0x555555590ba8
    [0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     1@bit,1@bit,1@bit,1@bit,1@bit,1@bit,1@bit,1@bit,
     1@bit,1@bit,1@bit,1@bit,1@bit,1@bit,1@bit,1@bit,
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit];
mov %L0x555555590bb0
    [0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit];
mov %L0x555555590bb8
    [0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     1@bit,1@bit,1@bit,1@bit,1@bit,1@bit,1@bit,1@bit,
     1@bit,1@bit,1@bit,1@bit,1@bit,1@bit,1@bit,1@bit,
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit];
mov %L0x555555590bc0
    [0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     1@bit,1@bit,1@bit,1@bit,1@bit,1@bit,1@bit,1@bit,
     1@bit,1@bit,1@bit,1@bit,1@bit,1@bit,1@bit,1@bit,
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit];
mov %L0x555555590bc8
    [0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit];
mov %L0x555555590bd0
    [0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit];
mov %L0x555555590bd8
    [0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit];
mov %L0x555555590be0
    [1@bit,1@bit,1@bit,1@bit,1@bit,1@bit,1@bit,1@bit,
     1@bit,1@bit,1@bit,1@bit,1@bit,1@bit,1@bit,1@bit,
     1@bit,1@bit,1@bit,1@bit,1@bit,1@bit,1@bit,1@bit,
     1@bit,1@bit,1@bit,1@bit,1@bit,1@bit,1@bit,1@bit,
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit];
mov %L0x555555590be8
    [0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     1@bit,1@bit,1@bit,1@bit,1@bit,1@bit,1@bit,1@bit,
     1@bit,1@bit,1@bit,1@bit,1@bit,1@bit,1@bit,1@bit,
     1@bit,1@bit,1@bit,1@bit,1@bit,1@bit,1@bit,1@bit,
     1@bit,1@bit,1@bit,1@bit,1@bit,1@bit,1@bit,1@bit];
mov %L0x555555590bf0
    [0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     1@bit,1@bit,1@bit,1@bit,1@bit,1@bit,1@bit,1@bit,
     1@bit,1@bit,1@bit,1@bit,1@bit,1@bit,1@bit,1@bit,
     1@bit,1@bit,1@bit,1@bit,1@bit,1@bit,1@bit,1@bit,
     1@bit,1@bit,1@bit,1@bit,1@bit,1@bit,1@bit,1@bit];
mov %L0x555555590bf8
    [0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit];
mov %L0x555555590c00
    [0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit];
mov %L0x555555590c08
    [0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     1@bit,1@bit,1@bit,1@bit,1@bit,1@bit,1@bit,1@bit,
     1@bit,1@bit,1@bit,1@bit,1@bit,1@bit,1@bit,1@bit,
     1@bit,1@bit,1@bit,1@bit,1@bit,1@bit,1@bit,1@bit,
     1@bit,1@bit,1@bit,1@bit,1@bit,1@bit,1@bit,1@bit];
mov %L0x555555590c10
    [0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit];
mov %L0x555555590c18
    [0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit];
mov %L0x555555590c20
    [0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     1@bit,1@bit,1@bit,1@bit,1@bit,1@bit,1@bit,1@bit,
     1@bit,1@bit,1@bit,1@bit,1@bit,1@bit,1@bit,1@bit,
     1@bit,1@bit,1@bit,1@bit,1@bit,1@bit,1@bit,1@bit,
     1@bit,1@bit,1@bit,1@bit,1@bit,1@bit,1@bit,1@bit];
mov %L0x555555590c28
    [0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit];
mov %L0x555555590c30
    [0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit];
mov %L0x555555590c38
    [0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit];

nondet %rax@bit[64]; nondet %rcx@bit[64]; nondet %rdi@bit[64];
nondet %r12@bit[64];




(**************** inputs ****************)



mov %L0x7ffffff50ca0
    [c000,c010,c020,c030,c040,c050,c060,c070,c080,c090,c0a0,c0b0,c0c0,c0d0,c0e0,c0f0,
     c100,c110,c120,c130,c140,c150,c160,c170,c180,c190,c1a0,c1b0,c1c0,c1d0,c1e0,c1f0,
     c200,c210,c220,c230,c240,c250,c260,c270,c280,c290,c2a0,c2b0,c2c0,c2d0,c2e0,c2f0,
     c300,c310,c320,c330,c340,c350,c360,c370,c380,c390,c3a0,c3b0,c3c0,c3d0,c3e0,c3f0];
mov %L0x7ffffff50ca8
    [c001,c011,c021,c031,c041,c051,c061,c071,c081,c091,c0a1,c0b1,c0c1,c0d1,c0e1,c0f1,
     c101,c111,c121,c131,c141,c151,c161,c171,c181,c191,c1a1,c1b1,c1c1,c1d1,c1e1,c1f1,
     c201,c211,c221,c231,c241,c251,c261,c271,c281,c291,c2a1,c2b1,c2c1,c2d1,c2e1,c2f1,
     c301,c311,c321,c331,c341,c351,c361,c371,c381,c391,c3a1,c3b1,c3c1,c3d1,c3e1,c3f1];
mov %L0x7ffffff50cb0
    [c002,c012,c022,c032,c042,c052,c062,c072,c082,c092,c0a2,c0b2,c0c2,c0d2,c0e2,c0f2,
     c102,c112,c122,c132,c142,c152,c162,c172,c182,c192,c1a2,c1b2,c1c2,c1d2,c1e2,c1f2,
     c202,c212,c222,c232,c242,c252,c262,c272,c282,c292,c2a2,c2b2,c2c2,c2d2,c2e2,c2f2,
     c302,c312,c322,c332,c342,c352,c362,c372,c382,c392,c3a2,c3b2,c3c2,c3d2,c3e2,c3f2];
mov %L0x7ffffff50cb8
    [c003,c013,c023,c033,c043,c053,c063,c073,c083,c093,c0a3,c0b3,c0c3,c0d3,c0e3,c0f3,
     c103,c113,c123,c133,c143,c153,c163,c173,c183,c193,c1a3,c1b3,c1c3,c1d3,c1e3,c1f3,
     c203,c213,c223,c233,c243,c253,c263,c273,c283,c293,c2a3,c2b3,c2c3,c2d3,c2e3,c2f3,
     c303,c313,c323,c333,c343,c353,c363,c373,c383,c393,c3a3,c3b3,c3c3,c3d3,c3e3,c3f3];
mov %L0x7ffffff50cc0
    [c004,c014,c024,c034,c044,c054,c064,c074,c084,c094,c0a4,c0b4,c0c4,c0d4,c0e4,c0f4,
     c104,c114,c124,c134,c144,c154,c164,c174,c184,c194,c1a4,c1b4,c1c4,c1d4,c1e4,c1f4,
     c204,c214,c224,c234,c244,c254,c264,c274,c284,c294,c2a4,c2b4,c2c4,c2d4,c2e4,c2f4,
     c304,c314,c324,c334,c344,c354,c364,c374,c384,c394,c3a4,c3b4,c3c4,c3d4,c3e4,c3f4];
mov %L0x7ffffff50cc8
    [c005,c015,c025,c035,c045,c055,c065,c075,c085,c095,c0a5,c0b5,c0c5,c0d5,c0e5,c0f5,
     c105,c115,c125,c135,c145,c155,c165,c175,c185,c195,c1a5,c1b5,c1c5,c1d5,c1e5,c1f5,
     c205,c215,c225,c235,c245,c255,c265,c275,c285,c295,c2a5,c2b5,c2c5,c2d5,c2e5,c2f5,
     c305,c315,c325,c335,c345,c355,c365,c375,c385,c395,c3a5,c3b5,c3c5,c3d5,c3e5,c3f5];
mov %L0x7ffffff50cd0
    [c006,c016,c026,c036,c046,c056,c066,c076,c086,c096,c0a6,c0b6,c0c6,c0d6,c0e6,c0f6,
     c106,c116,c126,c136,c146,c156,c166,c176,c186,c196,c1a6,c1b6,c1c6,c1d6,c1e6,c1f6,
     c206,c216,c226,c236,c246,c256,c266,c276,c286,c296,c2a6,c2b6,c2c6,c2d6,c2e6,c2f6,
     c306,c316,c326,c336,c346,c356,c366,c376,c386,c396,c3a6,c3b6,c3c6,c3d6,c3e6,c3f6];
mov %L0x7ffffff50cd8
    [c007,c017,c027,c037,c047,c057,c067,c077,c087,c097,c0a7,c0b7,c0c7,c0d7,c0e7,c0f7,
     c107,c117,c127,c137,c147,c157,c167,c177,c187,c197,c1a7,c1b7,c1c7,c1d7,c1e7,c1f7,
     c207,c217,c227,c237,c247,c257,c267,c277,c287,c297,c2a7,c2b7,c2c7,c2d7,c2e7,c2f7,
     c307,c317,c327,c337,c347,c357,c367,c377,c387,c397,c3a7,c3b7,c3c7,c3d7,c3e7,c3f7];
mov %L0x7ffffff50ce0
    [c008,c018,c028,c038,c048,c058,c068,c078,c088,c098,c0a8,c0b8,c0c8,c0d8,c0e8,c0f8,
     c108,c118,c128,c138,c148,c158,c168,c178,c188,c198,c1a8,c1b8,c1c8,c1d8,c1e8,c1f8,
     c208,c218,c228,c238,c248,c258,c268,c278,c288,c298,c2a8,c2b8,c2c8,c2d8,c2e8,c2f8,
     c308,c318,c328,c338,c348,c358,c368,c378,c388,c398,c3a8,c3b8,c3c8,c3d8,c3e8,c3f8];
mov %L0x7ffffff50ce8
    [c009,c019,c029,c039,c049,c059,c069,c079,c089,c099,c0a9,c0b9,c0c9,c0d9,c0e9,c0f9,
     c109,c119,c129,c139,c149,c159,c169,c179,c189,c199,c1a9,c1b9,c1c9,c1d9,c1e9,c1f9,
     c209,c219,c229,c239,c249,c259,c269,c279,c289,c299,c2a9,c2b9,c2c9,c2d9,c2e9,c2f9,
     c309,c319,c329,c339,c349,c359,c369,c379,c389,c399,c3a9,c3b9,c3c9,c3d9,c3e9,c3f9];
mov %L0x7ffffff50cf0
    [c00a,c01a,c02a,c03a,c04a,c05a,c06a,c07a,c08a,c09a,c0aa,c0ba,c0ca,c0da,c0ea,c0fa,
     c10a,c11a,c12a,c13a,c14a,c15a,c16a,c17a,c18a,c19a,c1aa,c1ba,c1ca,c1da,c1ea,c1fa,
     c20a,c21a,c22a,c23a,c24a,c25a,c26a,c27a,c28a,c29a,c2aa,c2ba,c2ca,c2da,c2ea,c2fa,
     c30a,c31a,c32a,c33a,c34a,c35a,c36a,c37a,c38a,c39a,c3aa,c3ba,c3ca,c3da,c3ea,c3fa];
mov %L0x7ffffff50cf8
    [c00b,c01b,c02b,c03b,c04b,c05b,c06b,c07b,c08b,c09b,c0ab,c0bb,c0cb,c0db,c0eb,c0fb,
     c10b,c11b,c12b,c13b,c14b,c15b,c16b,c17b,c18b,c19b,c1ab,c1bb,c1cb,c1db,c1eb,c1fb,
     c20b,c21b,c22b,c23b,c24b,c25b,c26b,c27b,c28b,c29b,c2ab,c2bb,c2cb,c2db,c2eb,c2fb,
     c30b,c31b,c32b,c33b,c34b,c35b,c36b,c37b,c38b,c39b,c3ab,c3bb,c3cb,c3db,c3eb,c3fb];

(**************** polynomial ****************)



ghost F@uint16:
F = poly z [c000,c001,c002,c003,c004,c005,c006,c007,c008,c009,c00a,c00b]*X**0+
    poly z [c010,c011,c012,c013,c014,c015,c016,c017,c018,c019,c01a,c01b]*X**1+
    poly z [c020,c021,c022,c023,c024,c025,c026,c027,c028,c029,c02a,c02b]*X**2+
    poly z [c030,c031,c032,c033,c034,c035,c036,c037,c038,c039,c03a,c03b]*X**3+
    poly z [c040,c041,c042,c043,c044,c045,c046,c047,c048,c049,c04a,c04b]*X**4+
    poly z [c050,c051,c052,c053,c054,c055,c056,c057,c058,c059,c05a,c05b]*X**5+
    poly z [c060,c061,c062,c063,c064,c065,c066,c067,c068,c069,c06a,c06b]*X**6+
    poly z [c070,c071,c072,c073,c074,c075,c076,c077,c078,c079,c07a,c07b]*X**7+
    poly z [c080,c081,c082,c083,c084,c085,c086,c087,c088,c089,c08a,c08b]*X**8+
    poly z [c090,c091,c092,c093,c094,c095,c096,c097,c098,c099,c09a,c09b]*X**9+
    poly z [c0a0,c0a1,c0a2,c0a3,c0a4,c0a5,c0a6,c0a7,c0a8,c0a9,c0aa,c0ab]*X**10+
    poly z [c0b0,c0b1,c0b2,c0b3,c0b4,c0b5,c0b6,c0b7,c0b8,c0b9,c0ba,c0bb]*X**11+
    poly z [c0c0,c0c1,c0c2,c0c3,c0c4,c0c5,c0c6,c0c7,c0c8,c0c9,c0ca,c0cb]*X**12+
    poly z [c0d0,c0d1,c0d2,c0d3,c0d4,c0d5,c0d6,c0d7,c0d8,c0d9,c0da,c0db]*X**13+
    poly z [c0e0,c0e1,c0e2,c0e3,c0e4,c0e5,c0e6,c0e7,c0e8,c0e9,c0ea,c0eb]*X**14+
    poly z [c0f0,c0f1,c0f2,c0f3,c0f4,c0f5,c0f6,c0f7,c0f8,c0f9,c0fa,c0fb]*X**15+
    poly z [c100,c101,c102,c103,c104,c105,c106,c107,c108,c109,c10a,c10b]*X**16+
    poly z [c110,c111,c112,c113,c114,c115,c116,c117,c118,c119,c11a,c11b]*X**17+
    poly z [c120,c121,c122,c123,c124,c125,c126,c127,c128,c129,c12a,c12b]*X**18+
    poly z [c130,c131,c132,c133,c134,c135,c136,c137,c138,c139,c13a,c13b]*X**19+
    poly z [c140,c141,c142,c143,c144,c145,c146,c147,c148,c149,c14a,c14b]*X**20+
    poly z [c150,c151,c152,c153,c154,c155,c156,c157,c158,c159,c15a,c15b]*X**21+
    poly z [c160,c161,c162,c163,c164,c165,c166,c167,c168,c169,c16a,c16b]*X**22+
    poly z [c170,c171,c172,c173,c174,c175,c176,c177,c178,c179,c17a,c17b]*X**23+
    poly z [c180,c181,c182,c183,c184,c185,c186,c187,c188,c189,c18a,c18b]*X**24+
    poly z [c190,c191,c192,c193,c194,c195,c196,c197,c198,c199,c19a,c19b]*X**25+
    poly z [c1a0,c1a1,c1a2,c1a3,c1a4,c1a5,c1a6,c1a7,c1a8,c1a9,c1aa,c1ab]*X**26+
    poly z [c1b0,c1b1,c1b2,c1b3,c1b4,c1b5,c1b6,c1b7,c1b8,c1b9,c1ba,c1bb]*X**27+
    poly z [c1c0,c1c1,c1c2,c1c3,c1c4,c1c5,c1c6,c1c7,c1c8,c1c9,c1ca,c1cb]*X**28+
    poly z [c1d0,c1d1,c1d2,c1d3,c1d4,c1d5,c1d6,c1d7,c1d8,c1d9,c1da,c1db]*X**29+
    poly z [c1e0,c1e1,c1e2,c1e3,c1e4,c1e5,c1e6,c1e7,c1e8,c1e9,c1ea,c1eb]*X**30+
    poly z [c1f0,c1f1,c1f2,c1f3,c1f4,c1f5,c1f6,c1f7,c1f8,c1f9,c1fa,c1fb]*X**31+
    poly z [c200,c201,c202,c203,c204,c205,c206,c207,c208,c209,c20a,c20b]*X**32+
    poly z [c210,c211,c212,c213,c214,c215,c216,c217,c218,c219,c21a,c21b]*X**33+
    poly z [c220,c221,c222,c223,c224,c225,c226,c227,c228,c229,c22a,c22b]*X**34+
    poly z [c230,c231,c232,c233,c234,c235,c236,c237,c238,c239,c23a,c23b]*X**35+
    poly z [c240,c241,c242,c243,c244,c245,c246,c247,c248,c249,c24a,c24b]*X**36+
    poly z [c250,c251,c252,c253,c254,c255,c256,c257,c258,c259,c25a,c25b]*X**37+
    poly z [c260,c261,c262,c263,c264,c265,c266,c267,c268,c269,c26a,c26b]*X**38+
    poly z [c270,c271,c272,c273,c274,c275,c276,c277,c278,c279,c27a,c27b]*X**39+
    poly z [c280,c281,c282,c283,c284,c285,c286,c287,c288,c289,c28a,c28b]*X**40+
    poly z [c290,c291,c292,c293,c294,c295,c296,c297,c298,c299,c29a,c29b]*X**41+
    poly z [c2a0,c2a1,c2a2,c2a3,c2a4,c2a5,c2a6,c2a7,c2a8,c2a9,c2aa,c2ab]*X**42+
    poly z [c2b0,c2b1,c2b2,c2b3,c2b4,c2b5,c2b6,c2b7,c2b8,c2b9,c2ba,c2bb]*X**43+
    poly z [c2c0,c2c1,c2c2,c2c3,c2c4,c2c5,c2c6,c2c7,c2c8,c2c9,c2ca,c2cb]*X**44+
    poly z [c2d0,c2d1,c2d2,c2d3,c2d4,c2d5,c2d6,c2d7,c2d8,c2d9,c2da,c2db]*X**45+
    poly z [c2e0,c2e1,c2e2,c2e3,c2e4,c2e5,c2e6,c2e7,c2e8,c2e9,c2ea,c2eb]*X**46+
    poly z [c2f0,c2f1,c2f2,c2f3,c2f4,c2f5,c2f6,c2f7,c2f8,c2f9,c2fa,c2fb]*X**47+
    poly z [c300,c301,c302,c303,c304,c305,c306,c307,c308,c309,c30a,c30b]*X**48+
    poly z [c310,c311,c312,c313,c314,c315,c316,c317,c318,c319,c31a,c31b]*X**49+
    poly z [c320,c321,c322,c323,c324,c325,c326,c327,c328,c329,c32a,c32b]*X**50+
    poly z [c330,c331,c332,c333,c334,c335,c336,c337,c338,c339,c33a,c33b]*X**51+
    poly z [c340,c341,c342,c343,c344,c345,c346,c347,c348,c349,c34a,c34b]*X**52+
    poly z [c350,c351,c352,c353,c354,c355,c356,c357,c358,c359,c35a,c35b]*X**53+
    poly z [c360,c361,c362,c363,c364,c365,c366,c367,c368,c369,c36a,c36b]*X**54+
    poly z [c370,c371,c372,c373,c374,c375,c376,c377,c378,c379,c37a,c37b]*X**55+
    poly z [c380,c381,c382,c383,c384,c385,c386,c387,c388,c389,c38a,c38b]*X**56+
    poly z [c390,c391,c392,c393,c394,c395,c396,c397,c398,c399,c39a,c39b]*X**57+
    poly z [c3a0,c3a1,c3a2,c3a3,c3a4,c3a5,c3a6,c3a7,c3a8,c3a9,c3aa,c3ab]*X**58+
    poly z [c3b0,c3b1,c3b2,c3b3,c3b4,c3b5,c3b6,c3b7,c3b8,c3b9,c3ba,c3bb]*X**59+
    poly z [c3c0,c3c1,c3c2,c3c3,c3c4,c3c5,c3c6,c3c7,c3c8,c3c9,c3ca,c3cb]*X**60+
    poly z [c3d0,c3d1,c3d2,c3d3,c3d4,c3d5,c3d6,c3d7,c3d8,c3d9,c3da,c3db]*X**61+
    poly z [c3e0,c3e1,c3e2,c3e3,c3e4,c3e5,c3e6,c3e7,c3e8,c3e9,c3ea,c3eb]*X**62+
    poly z [c3f0,c3f1,c3f2,c3f3,c3f4,c3f5,c3f6,c3f7,c3f8,c3f9,c3fa,c3fb]*X**63
&& true;

(* #! -> SP = 0x7ffffff50bd8 *)
#! 0x7ffffff50bd8 = 0x7ffffff50bd8;
(* push   %rbp                                     #! EA = L0x7ffffff50bd0; PC = 0x555555582b00 *)
(* push rbp *)
nop;
(* xor    %ecx,%ecx                                #! PC = 0x555555582b01 *)
(* xor ecx, ecx *)
nop;
(* mov    %rsp,%rbp                                #! PC = 0x555555582b03 *)
(* mov rsp, rbp *)
nop;
(* push   %r15                                     #! EA = L0x7ffffff50bc8; PC = 0x555555582b06 *)
(* push r15 *)
nop;
(* push   %r14                                     #! EA = L0x7ffffff50bc0; PC = 0x555555582b08 *)
(* push r14 *)
nop;
(* movabs $0xff000000ff0000,%r14                   #! PC = 0x555555582b0a *)
cast %r14@bit[64] [0xff000000ff0000@uint64];
(* push   %r13                                     #! EA = L0x7ffffff50bb8; PC = 0x555555582b14 *)
(* push r13 *)
nop;
(* movabs $0xff000000ff00,%r13                     #! PC = 0x555555582b16 *)
cast %r13@bit[64] [0xff000000ff00@uint64];
(* push   %r12                                     #! EA = L0x7ffffff50bb0; PC = 0x555555582b20 *)
(* push r12 *)
nop;
(* lea    0x60(%rdi),%r12                          #! PC = 0x555555582b22 *)
(* lea %%EA, r12 *)
nop;
(* push   %rbx                                     #! EA = L0x7ffffff50ba8; PC = 0x555555582b26 *)
(* push rbx *)
nop;
(* movabs $0xffff00000000,%rbx                     #! PC = 0x555555582b27 *)
cast %rbx@bit[64] [0xffff00000000@uint64];
(* and    $0xffffffffffffffe0,%rsp                 #! PC = 0x555555582b31 *)
(* and 0xffffffffffffffe0, rsp *)
nop;
(* sub    $0x220,%rsp                              #! PC = 0x555555582b35 *)
(* sub 0x220, rsp *)
nop;
(* vmovdqa 0xdf1c(%rip),%ymm0        # 0x555555590a60#! EA = L0x555555590a60; Value = 0xf3cfc030fc30f003; PC = 0x555555582b3c *)
mov %ymm0
    [%L0x555555590a60[0],%L0x555555590a60[1],%L0x555555590a60[2],%L0x555555590a60[3],
     %L0x555555590a60[4],%L0x555555590a60[5],%L0x555555590a60[6],%L0x555555590a60[7],
     %L0x555555590a60[8],%L0x555555590a60[9],%L0x555555590a60[10],%L0x555555590a60[11],
     %L0x555555590a60[12],%L0x555555590a60[13],%L0x555555590a60[14],%L0x555555590a60[15],
     %L0x555555590a60[16],%L0x555555590a60[17],%L0x555555590a60[18],%L0x555555590a60[19],
     %L0x555555590a60[20],%L0x555555590a60[21],%L0x555555590a60[22],%L0x555555590a60[23],
     %L0x555555590a60[24],%L0x555555590a60[25],%L0x555555590a60[26],%L0x555555590a60[27],
     %L0x555555590a60[28],%L0x555555590a60[29],%L0x555555590a60[30],%L0x555555590a60[31],
     %L0x555555590a60[32],%L0x555555590a60[33],%L0x555555590a60[34],%L0x555555590a60[35],
     %L0x555555590a60[36],%L0x555555590a60[37],%L0x555555590a60[38],%L0x555555590a60[39],
     %L0x555555590a60[40],%L0x555555590a60[41],%L0x555555590a60[42],%L0x555555590a60[43],
     %L0x555555590a60[44],%L0x555555590a60[45],%L0x555555590a60[46],%L0x555555590a60[47],
     %L0x555555590a60[48],%L0x555555590a60[49],%L0x555555590a60[50],%L0x555555590a60[51],
     %L0x555555590a60[52],%L0x555555590a60[53],%L0x555555590a60[54],%L0x555555590a60[55],
     %L0x555555590a60[56],%L0x555555590a60[57],%L0x555555590a60[58],%L0x555555590a60[59],
     %L0x555555590a60[60],%L0x555555590a60[61],%L0x555555590a60[62],%L0x555555590a60[63],
     %L0x555555590a68[0],%L0x555555590a68[1],%L0x555555590a68[2],%L0x555555590a68[3],
     %L0x555555590a68[4],%L0x555555590a68[5],%L0x555555590a68[6],%L0x555555590a68[7],
     %L0x555555590a68[8],%L0x555555590a68[9],%L0x555555590a68[10],%L0x555555590a68[11],
     %L0x555555590a68[12],%L0x555555590a68[13],%L0x555555590a68[14],%L0x555555590a68[15],
     %L0x555555590a68[16],%L0x555555590a68[17],%L0x555555590a68[18],%L0x555555590a68[19],
     %L0x555555590a68[20],%L0x555555590a68[21],%L0x555555590a68[22],%L0x555555590a68[23],
     %L0x555555590a68[24],%L0x555555590a68[25],%L0x555555590a68[26],%L0x555555590a68[27],
     %L0x555555590a68[28],%L0x555555590a68[29],%L0x555555590a68[30],%L0x555555590a68[31],
     %L0x555555590a68[32],%L0x555555590a68[33],%L0x555555590a68[34],%L0x555555590a68[35],
     %L0x555555590a68[36],%L0x555555590a68[37],%L0x555555590a68[38],%L0x555555590a68[39],
     %L0x555555590a68[40],%L0x555555590a68[41],%L0x555555590a68[42],%L0x555555590a68[43],
     %L0x555555590a68[44],%L0x555555590a68[45],%L0x555555590a68[46],%L0x555555590a68[47],
     %L0x555555590a68[48],%L0x555555590a68[49],%L0x555555590a68[50],%L0x555555590a68[51],
     %L0x555555590a68[52],%L0x555555590a68[53],%L0x555555590a68[54],%L0x555555590a68[55],
     %L0x555555590a68[56],%L0x555555590a68[57],%L0x555555590a68[58],%L0x555555590a68[59],
     %L0x555555590a68[60],%L0x555555590a68[61],%L0x555555590a68[62],%L0x555555590a68[63],
     %L0x555555590a70[0],%L0x555555590a70[1],%L0x555555590a70[2],%L0x555555590a70[3],
     %L0x555555590a70[4],%L0x555555590a70[5],%L0x555555590a70[6],%L0x555555590a70[7],
     %L0x555555590a70[8],%L0x555555590a70[9],%L0x555555590a70[10],%L0x555555590a70[11],
     %L0x555555590a70[12],%L0x555555590a70[13],%L0x555555590a70[14],%L0x555555590a70[15],
     %L0x555555590a70[16],%L0x555555590a70[17],%L0x555555590a70[18],%L0x555555590a70[19],
     %L0x555555590a70[20],%L0x555555590a70[21],%L0x555555590a70[22],%L0x555555590a70[23],
     %L0x555555590a70[24],%L0x555555590a70[25],%L0x555555590a70[26],%L0x555555590a70[27],
     %L0x555555590a70[28],%L0x555555590a70[29],%L0x555555590a70[30],%L0x555555590a70[31],
     %L0x555555590a70[32],%L0x555555590a70[33],%L0x555555590a70[34],%L0x555555590a70[35],
     %L0x555555590a70[36],%L0x555555590a70[37],%L0x555555590a70[38],%L0x555555590a70[39],
     %L0x555555590a70[40],%L0x555555590a70[41],%L0x555555590a70[42],%L0x555555590a70[43],
     %L0x555555590a70[44],%L0x555555590a70[45],%L0x555555590a70[46],%L0x555555590a70[47],
     %L0x555555590a70[48],%L0x555555590a70[49],%L0x555555590a70[50],%L0x555555590a70[51],
     %L0x555555590a70[52],%L0x555555590a70[53],%L0x555555590a70[54],%L0x555555590a70[55],
     %L0x555555590a70[56],%L0x555555590a70[57],%L0x555555590a70[58],%L0x555555590a70[59],
     %L0x555555590a70[60],%L0x555555590a70[61],%L0x555555590a70[62],%L0x555555590a70[63],
     %L0x555555590a78[0],%L0x555555590a78[1],%L0x555555590a78[2],%L0x555555590a78[3],
     %L0x555555590a78[4],%L0x555555590a78[5],%L0x555555590a78[6],%L0x555555590a78[7],
     %L0x555555590a78[8],%L0x555555590a78[9],%L0x555555590a78[10],%L0x555555590a78[11],
     %L0x555555590a78[12],%L0x555555590a78[13],%L0x555555590a78[14],%L0x555555590a78[15],
     %L0x555555590a78[16],%L0x555555590a78[17],%L0x555555590a78[18],%L0x555555590a78[19],
     %L0x555555590a78[20],%L0x555555590a78[21],%L0x555555590a78[22],%L0x555555590a78[23],
     %L0x555555590a78[24],%L0x555555590a78[25],%L0x555555590a78[26],%L0x555555590a78[27],
     %L0x555555590a78[28],%L0x555555590a78[29],%L0x555555590a78[30],%L0x555555590a78[31],
     %L0x555555590a78[32],%L0x555555590a78[33],%L0x555555590a78[34],%L0x555555590a78[35],
     %L0x555555590a78[36],%L0x555555590a78[37],%L0x555555590a78[38],%L0x555555590a78[39],
     %L0x555555590a78[40],%L0x555555590a78[41],%L0x555555590a78[42],%L0x555555590a78[43],
     %L0x555555590a78[44],%L0x555555590a78[45],%L0x555555590a78[46],%L0x555555590a78[47],
     %L0x555555590a78[48],%L0x555555590a78[49],%L0x555555590a78[50],%L0x555555590a78[51],
     %L0x555555590a78[52],%L0x555555590a78[53],%L0x555555590a78[54],%L0x555555590a78[55],
     %L0x555555590a78[56],%L0x555555590a78[57],%L0x555555590a78[58],%L0x555555590a78[59],
     %L0x555555590a78[60],%L0x555555590a78[61],%L0x555555590a78[62],%L0x555555590a78[63]];
(* mov    %rdi,0x18(%rsp)                          #! EA = L0x7ffffff50998; PC = 0x555555582b44 *)
mov %L0x7ffffff50998 %rdi;
(* mov    %fs:0x28,%rax                            #! PC = 0x555555582b49 *)
(* mov %fs:0x28, rax *)
nop;
(* mov    %rax,0x218(%rsp)                         #! EA = L0x7ffffff50b98; PC = 0x555555582b52 *)
mov %L0x7ffffff50b98 %rax;
(* xor    %eax,%eax                                #! PC = 0x555555582b5a *)
(* xor eax, eax *)
nop;
(* vmovdqa %ymm0,0x20(%rsp)                        #! EA = L0x7ffffff509a0; PC = 0x555555582b5c *)
mov %L0x7ffffff509a0
    [%ymm0[0],%ymm0[1],%ymm0[2],%ymm0[3],%ymm0[4],%ymm0[5],%ymm0[6],%ymm0[7],
     %ymm0[8],%ymm0[9],%ymm0[10],%ymm0[11],%ymm0[12],%ymm0[13],%ymm0[14],%ymm0[15],
     %ymm0[16],%ymm0[17],%ymm0[18],%ymm0[19],%ymm0[20],%ymm0[21],%ymm0[22],%ymm0[23],
     %ymm0[24],%ymm0[25],%ymm0[26],%ymm0[27],%ymm0[28],%ymm0[29],%ymm0[30],%ymm0[31],
     %ymm0[32],%ymm0[33],%ymm0[34],%ymm0[35],%ymm0[36],%ymm0[37],%ymm0[38],%ymm0[39],
     %ymm0[40],%ymm0[41],%ymm0[42],%ymm0[43],%ymm0[44],%ymm0[45],%ymm0[46],%ymm0[47],
     %ymm0[48],%ymm0[49],%ymm0[50],%ymm0[51],%ymm0[52],%ymm0[53],%ymm0[54],%ymm0[55],
     %ymm0[56],%ymm0[57],%ymm0[58],%ymm0[59],%ymm0[60],%ymm0[61],%ymm0[62],%ymm0[63]];
mov %L0x7ffffff509a8
    [%ymm0[64],%ymm0[65],%ymm0[66],%ymm0[67],%ymm0[68],%ymm0[69],%ymm0[70],%ymm0[71],
     %ymm0[72],%ymm0[73],%ymm0[74],%ymm0[75],%ymm0[76],%ymm0[77],%ymm0[78],%ymm0[79],
     %ymm0[80],%ymm0[81],%ymm0[82],%ymm0[83],%ymm0[84],%ymm0[85],%ymm0[86],%ymm0[87],
     %ymm0[88],%ymm0[89],%ymm0[90],%ymm0[91],%ymm0[92],%ymm0[93],%ymm0[94],%ymm0[95],
     %ymm0[96],%ymm0[97],%ymm0[98],%ymm0[99],%ymm0[100],%ymm0[101],%ymm0[102],%ymm0[103],
     %ymm0[104],%ymm0[105],%ymm0[106],%ymm0[107],%ymm0[108],%ymm0[109],%ymm0[110],%ymm0[111],
     %ymm0[112],%ymm0[113],%ymm0[114],%ymm0[115],%ymm0[116],%ymm0[117],%ymm0[118],%ymm0[119],
     %ymm0[120],%ymm0[121],%ymm0[122],%ymm0[123],%ymm0[124],%ymm0[125],%ymm0[126],%ymm0[127]];
mov %L0x7ffffff509b0
    [%ymm0[128],%ymm0[129],%ymm0[130],%ymm0[131],%ymm0[132],%ymm0[133],%ymm0[134],%ymm0[135],
     %ymm0[136],%ymm0[137],%ymm0[138],%ymm0[139],%ymm0[140],%ymm0[141],%ymm0[142],%ymm0[143],
     %ymm0[144],%ymm0[145],%ymm0[146],%ymm0[147],%ymm0[148],%ymm0[149],%ymm0[150],%ymm0[151],
     %ymm0[152],%ymm0[153],%ymm0[154],%ymm0[155],%ymm0[156],%ymm0[157],%ymm0[158],%ymm0[159],
     %ymm0[160],%ymm0[161],%ymm0[162],%ymm0[163],%ymm0[164],%ymm0[165],%ymm0[166],%ymm0[167],
     %ymm0[168],%ymm0[169],%ymm0[170],%ymm0[171],%ymm0[172],%ymm0[173],%ymm0[174],%ymm0[175],
     %ymm0[176],%ymm0[177],%ymm0[178],%ymm0[179],%ymm0[180],%ymm0[181],%ymm0[182],%ymm0[183],
     %ymm0[184],%ymm0[185],%ymm0[186],%ymm0[187],%ymm0[188],%ymm0[189],%ymm0[190],%ymm0[191]];
mov %L0x7ffffff509b8
    [%ymm0[192],%ymm0[193],%ymm0[194],%ymm0[195],%ymm0[196],%ymm0[197],%ymm0[198],%ymm0[199],
     %ymm0[200],%ymm0[201],%ymm0[202],%ymm0[203],%ymm0[204],%ymm0[205],%ymm0[206],%ymm0[207],
     %ymm0[208],%ymm0[209],%ymm0[210],%ymm0[211],%ymm0[212],%ymm0[213],%ymm0[214],%ymm0[215],
     %ymm0[216],%ymm0[217],%ymm0[218],%ymm0[219],%ymm0[220],%ymm0[221],%ymm0[222],%ymm0[223],
     %ymm0[224],%ymm0[225],%ymm0[226],%ymm0[227],%ymm0[228],%ymm0[229],%ymm0[230],%ymm0[231],
     %ymm0[232],%ymm0[233],%ymm0[234],%ymm0[235],%ymm0[236],%ymm0[237],%ymm0[238],%ymm0[239],
     %ymm0[240],%ymm0[241],%ymm0[242],%ymm0[243],%ymm0[244],%ymm0[245],%ymm0[246],%ymm0[247],
     %ymm0[248],%ymm0[249],%ymm0[250],%ymm0[251],%ymm0[252],%ymm0[253],%ymm0[254],%ymm0[255]];
(* vmovdqa 0xdf16(%rip),%ymm0        # 0x555555590a80#! EA = L0x555555590a80; Value = 0x0300c03ff303c3f0; PC = 0x555555582b62 *)
mov %ymm0
    [%L0x555555590a80[0],%L0x555555590a80[1],%L0x555555590a80[2],%L0x555555590a80[3],
     %L0x555555590a80[4],%L0x555555590a80[5],%L0x555555590a80[6],%L0x555555590a80[7],
     %L0x555555590a80[8],%L0x555555590a80[9],%L0x555555590a80[10],%L0x555555590a80[11],
     %L0x555555590a80[12],%L0x555555590a80[13],%L0x555555590a80[14],%L0x555555590a80[15],
     %L0x555555590a80[16],%L0x555555590a80[17],%L0x555555590a80[18],%L0x555555590a80[19],
     %L0x555555590a80[20],%L0x555555590a80[21],%L0x555555590a80[22],%L0x555555590a80[23],
     %L0x555555590a80[24],%L0x555555590a80[25],%L0x555555590a80[26],%L0x555555590a80[27],
     %L0x555555590a80[28],%L0x555555590a80[29],%L0x555555590a80[30],%L0x555555590a80[31],
     %L0x555555590a80[32],%L0x555555590a80[33],%L0x555555590a80[34],%L0x555555590a80[35],
     %L0x555555590a80[36],%L0x555555590a80[37],%L0x555555590a80[38],%L0x555555590a80[39],
     %L0x555555590a80[40],%L0x555555590a80[41],%L0x555555590a80[42],%L0x555555590a80[43],
     %L0x555555590a80[44],%L0x555555590a80[45],%L0x555555590a80[46],%L0x555555590a80[47],
     %L0x555555590a80[48],%L0x555555590a80[49],%L0x555555590a80[50],%L0x555555590a80[51],
     %L0x555555590a80[52],%L0x555555590a80[53],%L0x555555590a80[54],%L0x555555590a80[55],
     %L0x555555590a80[56],%L0x555555590a80[57],%L0x555555590a80[58],%L0x555555590a80[59],
     %L0x555555590a80[60],%L0x555555590a80[61],%L0x555555590a80[62],%L0x555555590a80[63],
     %L0x555555590a88[0],%L0x555555590a88[1],%L0x555555590a88[2],%L0x555555590a88[3],
     %L0x555555590a88[4],%L0x555555590a88[5],%L0x555555590a88[6],%L0x555555590a88[7],
     %L0x555555590a88[8],%L0x555555590a88[9],%L0x555555590a88[10],%L0x555555590a88[11],
     %L0x555555590a88[12],%L0x555555590a88[13],%L0x555555590a88[14],%L0x555555590a88[15],
     %L0x555555590a88[16],%L0x555555590a88[17],%L0x555555590a88[18],%L0x555555590a88[19],
     %L0x555555590a88[20],%L0x555555590a88[21],%L0x555555590a88[22],%L0x555555590a88[23],
     %L0x555555590a88[24],%L0x555555590a88[25],%L0x555555590a88[26],%L0x555555590a88[27],
     %L0x555555590a88[28],%L0x555555590a88[29],%L0x555555590a88[30],%L0x555555590a88[31],
     %L0x555555590a88[32],%L0x555555590a88[33],%L0x555555590a88[34],%L0x555555590a88[35],
     %L0x555555590a88[36],%L0x555555590a88[37],%L0x555555590a88[38],%L0x555555590a88[39],
     %L0x555555590a88[40],%L0x555555590a88[41],%L0x555555590a88[42],%L0x555555590a88[43],
     %L0x555555590a88[44],%L0x555555590a88[45],%L0x555555590a88[46],%L0x555555590a88[47],
     %L0x555555590a88[48],%L0x555555590a88[49],%L0x555555590a88[50],%L0x555555590a88[51],
     %L0x555555590a88[52],%L0x555555590a88[53],%L0x555555590a88[54],%L0x555555590a88[55],
     %L0x555555590a88[56],%L0x555555590a88[57],%L0x555555590a88[58],%L0x555555590a88[59],
     %L0x555555590a88[60],%L0x555555590a88[61],%L0x555555590a88[62],%L0x555555590a88[63],
     %L0x555555590a90[0],%L0x555555590a90[1],%L0x555555590a90[2],%L0x555555590a90[3],
     %L0x555555590a90[4],%L0x555555590a90[5],%L0x555555590a90[6],%L0x555555590a90[7],
     %L0x555555590a90[8],%L0x555555590a90[9],%L0x555555590a90[10],%L0x555555590a90[11],
     %L0x555555590a90[12],%L0x555555590a90[13],%L0x555555590a90[14],%L0x555555590a90[15],
     %L0x555555590a90[16],%L0x555555590a90[17],%L0x555555590a90[18],%L0x555555590a90[19],
     %L0x555555590a90[20],%L0x555555590a90[21],%L0x555555590a90[22],%L0x555555590a90[23],
     %L0x555555590a90[24],%L0x555555590a90[25],%L0x555555590a90[26],%L0x555555590a90[27],
     %L0x555555590a90[28],%L0x555555590a90[29],%L0x555555590a90[30],%L0x555555590a90[31],
     %L0x555555590a90[32],%L0x555555590a90[33],%L0x555555590a90[34],%L0x555555590a90[35],
     %L0x555555590a90[36],%L0x555555590a90[37],%L0x555555590a90[38],%L0x555555590a90[39],
     %L0x555555590a90[40],%L0x555555590a90[41],%L0x555555590a90[42],%L0x555555590a90[43],
     %L0x555555590a90[44],%L0x555555590a90[45],%L0x555555590a90[46],%L0x555555590a90[47],
     %L0x555555590a90[48],%L0x555555590a90[49],%L0x555555590a90[50],%L0x555555590a90[51],
     %L0x555555590a90[52],%L0x555555590a90[53],%L0x555555590a90[54],%L0x555555590a90[55],
     %L0x555555590a90[56],%L0x555555590a90[57],%L0x555555590a90[58],%L0x555555590a90[59],
     %L0x555555590a90[60],%L0x555555590a90[61],%L0x555555590a90[62],%L0x555555590a90[63],
     %L0x555555590a98[0],%L0x555555590a98[1],%L0x555555590a98[2],%L0x555555590a98[3],
     %L0x555555590a98[4],%L0x555555590a98[5],%L0x555555590a98[6],%L0x555555590a98[7],
     %L0x555555590a98[8],%L0x555555590a98[9],%L0x555555590a98[10],%L0x555555590a98[11],
     %L0x555555590a98[12],%L0x555555590a98[13],%L0x555555590a98[14],%L0x555555590a98[15],
     %L0x555555590a98[16],%L0x555555590a98[17],%L0x555555590a98[18],%L0x555555590a98[19],
     %L0x555555590a98[20],%L0x555555590a98[21],%L0x555555590a98[22],%L0x555555590a98[23],
     %L0x555555590a98[24],%L0x555555590a98[25],%L0x555555590a98[26],%L0x555555590a98[27],
     %L0x555555590a98[28],%L0x555555590a98[29],%L0x555555590a98[30],%L0x555555590a98[31],
     %L0x555555590a98[32],%L0x555555590a98[33],%L0x555555590a98[34],%L0x555555590a98[35],
     %L0x555555590a98[36],%L0x555555590a98[37],%L0x555555590a98[38],%L0x555555590a98[39],
     %L0x555555590a98[40],%L0x555555590a98[41],%L0x555555590a98[42],%L0x555555590a98[43],
     %L0x555555590a98[44],%L0x555555590a98[45],%L0x555555590a98[46],%L0x555555590a98[47],
     %L0x555555590a98[48],%L0x555555590a98[49],%L0x555555590a98[50],%L0x555555590a98[51],
     %L0x555555590a98[52],%L0x555555590a98[53],%L0x555555590a98[54],%L0x555555590a98[55],
     %L0x555555590a98[56],%L0x555555590a98[57],%L0x555555590a98[58],%L0x555555590a98[59],
     %L0x555555590a98[60],%L0x555555590a98[61],%L0x555555590a98[62],%L0x555555590a98[63]];
(* lea    0x20(%rsp),%rax                          #! PC = 0x555555582b6a *)
(* lea %%EA, rax *)
nop;
(* vmovdqa %ymm0,0x40(%rsp)                        #! EA = L0x7ffffff509c0; PC = 0x555555582b6f *)
mov %L0x7ffffff509c0
    [%ymm0[0],%ymm0[1],%ymm0[2],%ymm0[3],%ymm0[4],%ymm0[5],%ymm0[6],%ymm0[7],
     %ymm0[8],%ymm0[9],%ymm0[10],%ymm0[11],%ymm0[12],%ymm0[13],%ymm0[14],%ymm0[15],
     %ymm0[16],%ymm0[17],%ymm0[18],%ymm0[19],%ymm0[20],%ymm0[21],%ymm0[22],%ymm0[23],
     %ymm0[24],%ymm0[25],%ymm0[26],%ymm0[27],%ymm0[28],%ymm0[29],%ymm0[30],%ymm0[31],
     %ymm0[32],%ymm0[33],%ymm0[34],%ymm0[35],%ymm0[36],%ymm0[37],%ymm0[38],%ymm0[39],
     %ymm0[40],%ymm0[41],%ymm0[42],%ymm0[43],%ymm0[44],%ymm0[45],%ymm0[46],%ymm0[47],
     %ymm0[48],%ymm0[49],%ymm0[50],%ymm0[51],%ymm0[52],%ymm0[53],%ymm0[54],%ymm0[55],
     %ymm0[56],%ymm0[57],%ymm0[58],%ymm0[59],%ymm0[60],%ymm0[61],%ymm0[62],%ymm0[63]];
mov %L0x7ffffff509c8
    [%ymm0[64],%ymm0[65],%ymm0[66],%ymm0[67],%ymm0[68],%ymm0[69],%ymm0[70],%ymm0[71],
     %ymm0[72],%ymm0[73],%ymm0[74],%ymm0[75],%ymm0[76],%ymm0[77],%ymm0[78],%ymm0[79],
     %ymm0[80],%ymm0[81],%ymm0[82],%ymm0[83],%ymm0[84],%ymm0[85],%ymm0[86],%ymm0[87],
     %ymm0[88],%ymm0[89],%ymm0[90],%ymm0[91],%ymm0[92],%ymm0[93],%ymm0[94],%ymm0[95],
     %ymm0[96],%ymm0[97],%ymm0[98],%ymm0[99],%ymm0[100],%ymm0[101],%ymm0[102],%ymm0[103],
     %ymm0[104],%ymm0[105],%ymm0[106],%ymm0[107],%ymm0[108],%ymm0[109],%ymm0[110],%ymm0[111],
     %ymm0[112],%ymm0[113],%ymm0[114],%ymm0[115],%ymm0[116],%ymm0[117],%ymm0[118],%ymm0[119],
     %ymm0[120],%ymm0[121],%ymm0[122],%ymm0[123],%ymm0[124],%ymm0[125],%ymm0[126],%ymm0[127]];
mov %L0x7ffffff509d0
    [%ymm0[128],%ymm0[129],%ymm0[130],%ymm0[131],%ymm0[132],%ymm0[133],%ymm0[134],%ymm0[135],
     %ymm0[136],%ymm0[137],%ymm0[138],%ymm0[139],%ymm0[140],%ymm0[141],%ymm0[142],%ymm0[143],
     %ymm0[144],%ymm0[145],%ymm0[146],%ymm0[147],%ymm0[148],%ymm0[149],%ymm0[150],%ymm0[151],
     %ymm0[152],%ymm0[153],%ymm0[154],%ymm0[155],%ymm0[156],%ymm0[157],%ymm0[158],%ymm0[159],
     %ymm0[160],%ymm0[161],%ymm0[162],%ymm0[163],%ymm0[164],%ymm0[165],%ymm0[166],%ymm0[167],
     %ymm0[168],%ymm0[169],%ymm0[170],%ymm0[171],%ymm0[172],%ymm0[173],%ymm0[174],%ymm0[175],
     %ymm0[176],%ymm0[177],%ymm0[178],%ymm0[179],%ymm0[180],%ymm0[181],%ymm0[182],%ymm0[183],
     %ymm0[184],%ymm0[185],%ymm0[186],%ymm0[187],%ymm0[188],%ymm0[189],%ymm0[190],%ymm0[191]];
mov %L0x7ffffff509d8
    [%ymm0[192],%ymm0[193],%ymm0[194],%ymm0[195],%ymm0[196],%ymm0[197],%ymm0[198],%ymm0[199],
     %ymm0[200],%ymm0[201],%ymm0[202],%ymm0[203],%ymm0[204],%ymm0[205],%ymm0[206],%ymm0[207],
     %ymm0[208],%ymm0[209],%ymm0[210],%ymm0[211],%ymm0[212],%ymm0[213],%ymm0[214],%ymm0[215],
     %ymm0[216],%ymm0[217],%ymm0[218],%ymm0[219],%ymm0[220],%ymm0[221],%ymm0[222],%ymm0[223],
     %ymm0[224],%ymm0[225],%ymm0[226],%ymm0[227],%ymm0[228],%ymm0[229],%ymm0[230],%ymm0[231],
     %ymm0[232],%ymm0[233],%ymm0[234],%ymm0[235],%ymm0[236],%ymm0[237],%ymm0[238],%ymm0[239],
     %ymm0[240],%ymm0[241],%ymm0[242],%ymm0[243],%ymm0[244],%ymm0[245],%ymm0[246],%ymm0[247],
     %ymm0[248],%ymm0[249],%ymm0[250],%ymm0[251],%ymm0[252],%ymm0[253],%ymm0[254],%ymm0[255]];
(* vmovdqa 0xdf23(%rip),%ymm0        # 0x555555590aa0#! EA = L0x555555590aa0; Value = 0x0ff30fffc3fff300; PC = 0x555555582b75 *)
mov %ymm0
    [%L0x555555590aa0[0],%L0x555555590aa0[1],%L0x555555590aa0[2],%L0x555555590aa0[3],
     %L0x555555590aa0[4],%L0x555555590aa0[5],%L0x555555590aa0[6],%L0x555555590aa0[7],
     %L0x555555590aa0[8],%L0x555555590aa0[9],%L0x555555590aa0[10],%L0x555555590aa0[11],
     %L0x555555590aa0[12],%L0x555555590aa0[13],%L0x555555590aa0[14],%L0x555555590aa0[15],
     %L0x555555590aa0[16],%L0x555555590aa0[17],%L0x555555590aa0[18],%L0x555555590aa0[19],
     %L0x555555590aa0[20],%L0x555555590aa0[21],%L0x555555590aa0[22],%L0x555555590aa0[23],
     %L0x555555590aa0[24],%L0x555555590aa0[25],%L0x555555590aa0[26],%L0x555555590aa0[27],
     %L0x555555590aa0[28],%L0x555555590aa0[29],%L0x555555590aa0[30],%L0x555555590aa0[31],
     %L0x555555590aa0[32],%L0x555555590aa0[33],%L0x555555590aa0[34],%L0x555555590aa0[35],
     %L0x555555590aa0[36],%L0x555555590aa0[37],%L0x555555590aa0[38],%L0x555555590aa0[39],
     %L0x555555590aa0[40],%L0x555555590aa0[41],%L0x555555590aa0[42],%L0x555555590aa0[43],
     %L0x555555590aa0[44],%L0x555555590aa0[45],%L0x555555590aa0[46],%L0x555555590aa0[47],
     %L0x555555590aa0[48],%L0x555555590aa0[49],%L0x555555590aa0[50],%L0x555555590aa0[51],
     %L0x555555590aa0[52],%L0x555555590aa0[53],%L0x555555590aa0[54],%L0x555555590aa0[55],
     %L0x555555590aa0[56],%L0x555555590aa0[57],%L0x555555590aa0[58],%L0x555555590aa0[59],
     %L0x555555590aa0[60],%L0x555555590aa0[61],%L0x555555590aa0[62],%L0x555555590aa0[63],
     %L0x555555590aa8[0],%L0x555555590aa8[1],%L0x555555590aa8[2],%L0x555555590aa8[3],
     %L0x555555590aa8[4],%L0x555555590aa8[5],%L0x555555590aa8[6],%L0x555555590aa8[7],
     %L0x555555590aa8[8],%L0x555555590aa8[9],%L0x555555590aa8[10],%L0x555555590aa8[11],
     %L0x555555590aa8[12],%L0x555555590aa8[13],%L0x555555590aa8[14],%L0x555555590aa8[15],
     %L0x555555590aa8[16],%L0x555555590aa8[17],%L0x555555590aa8[18],%L0x555555590aa8[19],
     %L0x555555590aa8[20],%L0x555555590aa8[21],%L0x555555590aa8[22],%L0x555555590aa8[23],
     %L0x555555590aa8[24],%L0x555555590aa8[25],%L0x555555590aa8[26],%L0x555555590aa8[27],
     %L0x555555590aa8[28],%L0x555555590aa8[29],%L0x555555590aa8[30],%L0x555555590aa8[31],
     %L0x555555590aa8[32],%L0x555555590aa8[33],%L0x555555590aa8[34],%L0x555555590aa8[35],
     %L0x555555590aa8[36],%L0x555555590aa8[37],%L0x555555590aa8[38],%L0x555555590aa8[39],
     %L0x555555590aa8[40],%L0x555555590aa8[41],%L0x555555590aa8[42],%L0x555555590aa8[43],
     %L0x555555590aa8[44],%L0x555555590aa8[45],%L0x555555590aa8[46],%L0x555555590aa8[47],
     %L0x555555590aa8[48],%L0x555555590aa8[49],%L0x555555590aa8[50],%L0x555555590aa8[51],
     %L0x555555590aa8[52],%L0x555555590aa8[53],%L0x555555590aa8[54],%L0x555555590aa8[55],
     %L0x555555590aa8[56],%L0x555555590aa8[57],%L0x555555590aa8[58],%L0x555555590aa8[59],
     %L0x555555590aa8[60],%L0x555555590aa8[61],%L0x555555590aa8[62],%L0x555555590aa8[63],
     %L0x555555590ab0[0],%L0x555555590ab0[1],%L0x555555590ab0[2],%L0x555555590ab0[3],
     %L0x555555590ab0[4],%L0x555555590ab0[5],%L0x555555590ab0[6],%L0x555555590ab0[7],
     %L0x555555590ab0[8],%L0x555555590ab0[9],%L0x555555590ab0[10],%L0x555555590ab0[11],
     %L0x555555590ab0[12],%L0x555555590ab0[13],%L0x555555590ab0[14],%L0x555555590ab0[15],
     %L0x555555590ab0[16],%L0x555555590ab0[17],%L0x555555590ab0[18],%L0x555555590ab0[19],
     %L0x555555590ab0[20],%L0x555555590ab0[21],%L0x555555590ab0[22],%L0x555555590ab0[23],
     %L0x555555590ab0[24],%L0x555555590ab0[25],%L0x555555590ab0[26],%L0x555555590ab0[27],
     %L0x555555590ab0[28],%L0x555555590ab0[29],%L0x555555590ab0[30],%L0x555555590ab0[31],
     %L0x555555590ab0[32],%L0x555555590ab0[33],%L0x555555590ab0[34],%L0x555555590ab0[35],
     %L0x555555590ab0[36],%L0x555555590ab0[37],%L0x555555590ab0[38],%L0x555555590ab0[39],
     %L0x555555590ab0[40],%L0x555555590ab0[41],%L0x555555590ab0[42],%L0x555555590ab0[43],
     %L0x555555590ab0[44],%L0x555555590ab0[45],%L0x555555590ab0[46],%L0x555555590ab0[47],
     %L0x555555590ab0[48],%L0x555555590ab0[49],%L0x555555590ab0[50],%L0x555555590ab0[51],
     %L0x555555590ab0[52],%L0x555555590ab0[53],%L0x555555590ab0[54],%L0x555555590ab0[55],
     %L0x555555590ab0[56],%L0x555555590ab0[57],%L0x555555590ab0[58],%L0x555555590ab0[59],
     %L0x555555590ab0[60],%L0x555555590ab0[61],%L0x555555590ab0[62],%L0x555555590ab0[63],
     %L0x555555590ab8[0],%L0x555555590ab8[1],%L0x555555590ab8[2],%L0x555555590ab8[3],
     %L0x555555590ab8[4],%L0x555555590ab8[5],%L0x555555590ab8[6],%L0x555555590ab8[7],
     %L0x555555590ab8[8],%L0x555555590ab8[9],%L0x555555590ab8[10],%L0x555555590ab8[11],
     %L0x555555590ab8[12],%L0x555555590ab8[13],%L0x555555590ab8[14],%L0x555555590ab8[15],
     %L0x555555590ab8[16],%L0x555555590ab8[17],%L0x555555590ab8[18],%L0x555555590ab8[19],
     %L0x555555590ab8[20],%L0x555555590ab8[21],%L0x555555590ab8[22],%L0x555555590ab8[23],
     %L0x555555590ab8[24],%L0x555555590ab8[25],%L0x555555590ab8[26],%L0x555555590ab8[27],
     %L0x555555590ab8[28],%L0x555555590ab8[29],%L0x555555590ab8[30],%L0x555555590ab8[31],
     %L0x555555590ab8[32],%L0x555555590ab8[33],%L0x555555590ab8[34],%L0x555555590ab8[35],
     %L0x555555590ab8[36],%L0x555555590ab8[37],%L0x555555590ab8[38],%L0x555555590ab8[39],
     %L0x555555590ab8[40],%L0x555555590ab8[41],%L0x555555590ab8[42],%L0x555555590ab8[43],
     %L0x555555590ab8[44],%L0x555555590ab8[45],%L0x555555590ab8[46],%L0x555555590ab8[47],
     %L0x555555590ab8[48],%L0x555555590ab8[49],%L0x555555590ab8[50],%L0x555555590ab8[51],
     %L0x555555590ab8[52],%L0x555555590ab8[53],%L0x555555590ab8[54],%L0x555555590ab8[55],
     %L0x555555590ab8[56],%L0x555555590ab8[57],%L0x555555590ab8[58],%L0x555555590ab8[59],
     %L0x555555590ab8[60],%L0x555555590ab8[61],%L0x555555590ab8[62],%L0x555555590ab8[63]];
(* vmovdqa %ymm0,0x60(%rsp)                        #! EA = L0x7ffffff509e0; PC = 0x555555582b7d *)
mov %L0x7ffffff509e0
    [%ymm0[0],%ymm0[1],%ymm0[2],%ymm0[3],%ymm0[4],%ymm0[5],%ymm0[6],%ymm0[7],
     %ymm0[8],%ymm0[9],%ymm0[10],%ymm0[11],%ymm0[12],%ymm0[13],%ymm0[14],%ymm0[15],
     %ymm0[16],%ymm0[17],%ymm0[18],%ymm0[19],%ymm0[20],%ymm0[21],%ymm0[22],%ymm0[23],
     %ymm0[24],%ymm0[25],%ymm0[26],%ymm0[27],%ymm0[28],%ymm0[29],%ymm0[30],%ymm0[31],
     %ymm0[32],%ymm0[33],%ymm0[34],%ymm0[35],%ymm0[36],%ymm0[37],%ymm0[38],%ymm0[39],
     %ymm0[40],%ymm0[41],%ymm0[42],%ymm0[43],%ymm0[44],%ymm0[45],%ymm0[46],%ymm0[47],
     %ymm0[48],%ymm0[49],%ymm0[50],%ymm0[51],%ymm0[52],%ymm0[53],%ymm0[54],%ymm0[55],
     %ymm0[56],%ymm0[57],%ymm0[58],%ymm0[59],%ymm0[60],%ymm0[61],%ymm0[62],%ymm0[63]];
mov %L0x7ffffff509e8
    [%ymm0[64],%ymm0[65],%ymm0[66],%ymm0[67],%ymm0[68],%ymm0[69],%ymm0[70],%ymm0[71],
     %ymm0[72],%ymm0[73],%ymm0[74],%ymm0[75],%ymm0[76],%ymm0[77],%ymm0[78],%ymm0[79],
     %ymm0[80],%ymm0[81],%ymm0[82],%ymm0[83],%ymm0[84],%ymm0[85],%ymm0[86],%ymm0[87],
     %ymm0[88],%ymm0[89],%ymm0[90],%ymm0[91],%ymm0[92],%ymm0[93],%ymm0[94],%ymm0[95],
     %ymm0[96],%ymm0[97],%ymm0[98],%ymm0[99],%ymm0[100],%ymm0[101],%ymm0[102],%ymm0[103],
     %ymm0[104],%ymm0[105],%ymm0[106],%ymm0[107],%ymm0[108],%ymm0[109],%ymm0[110],%ymm0[111],
     %ymm0[112],%ymm0[113],%ymm0[114],%ymm0[115],%ymm0[116],%ymm0[117],%ymm0[118],%ymm0[119],
     %ymm0[120],%ymm0[121],%ymm0[122],%ymm0[123],%ymm0[124],%ymm0[125],%ymm0[126],%ymm0[127]];
mov %L0x7ffffff509f0
    [%ymm0[128],%ymm0[129],%ymm0[130],%ymm0[131],%ymm0[132],%ymm0[133],%ymm0[134],%ymm0[135],
     %ymm0[136],%ymm0[137],%ymm0[138],%ymm0[139],%ymm0[140],%ymm0[141],%ymm0[142],%ymm0[143],
     %ymm0[144],%ymm0[145],%ymm0[146],%ymm0[147],%ymm0[148],%ymm0[149],%ymm0[150],%ymm0[151],
     %ymm0[152],%ymm0[153],%ymm0[154],%ymm0[155],%ymm0[156],%ymm0[157],%ymm0[158],%ymm0[159],
     %ymm0[160],%ymm0[161],%ymm0[162],%ymm0[163],%ymm0[164],%ymm0[165],%ymm0[166],%ymm0[167],
     %ymm0[168],%ymm0[169],%ymm0[170],%ymm0[171],%ymm0[172],%ymm0[173],%ymm0[174],%ymm0[175],
     %ymm0[176],%ymm0[177],%ymm0[178],%ymm0[179],%ymm0[180],%ymm0[181],%ymm0[182],%ymm0[183],
     %ymm0[184],%ymm0[185],%ymm0[186],%ymm0[187],%ymm0[188],%ymm0[189],%ymm0[190],%ymm0[191]];
mov %L0x7ffffff509f8
    [%ymm0[192],%ymm0[193],%ymm0[194],%ymm0[195],%ymm0[196],%ymm0[197],%ymm0[198],%ymm0[199],
     %ymm0[200],%ymm0[201],%ymm0[202],%ymm0[203],%ymm0[204],%ymm0[205],%ymm0[206],%ymm0[207],
     %ymm0[208],%ymm0[209],%ymm0[210],%ymm0[211],%ymm0[212],%ymm0[213],%ymm0[214],%ymm0[215],
     %ymm0[216],%ymm0[217],%ymm0[218],%ymm0[219],%ymm0[220],%ymm0[221],%ymm0[222],%ymm0[223],
     %ymm0[224],%ymm0[225],%ymm0[226],%ymm0[227],%ymm0[228],%ymm0[229],%ymm0[230],%ymm0[231],
     %ymm0[232],%ymm0[233],%ymm0[234],%ymm0[235],%ymm0[236],%ymm0[237],%ymm0[238],%ymm0[239],
     %ymm0[240],%ymm0[241],%ymm0[242],%ymm0[243],%ymm0[244],%ymm0[245],%ymm0[246],%ymm0[247],
     %ymm0[248],%ymm0[249],%ymm0[250],%ymm0[251],%ymm0[252],%ymm0[253],%ymm0[254],%ymm0[255]];
(* vmovdqa 0xdf35(%rip),%ymm0        # 0x555555590ac0#! EA = L0x555555590ac0; Value = 0x000f00000000f00f; PC = 0x555555582b83 *)
mov %ymm0
    [%L0x555555590ac0[0],%L0x555555590ac0[1],%L0x555555590ac0[2],%L0x555555590ac0[3],
     %L0x555555590ac0[4],%L0x555555590ac0[5],%L0x555555590ac0[6],%L0x555555590ac0[7],
     %L0x555555590ac0[8],%L0x555555590ac0[9],%L0x555555590ac0[10],%L0x555555590ac0[11],
     %L0x555555590ac0[12],%L0x555555590ac0[13],%L0x555555590ac0[14],%L0x555555590ac0[15],
     %L0x555555590ac0[16],%L0x555555590ac0[17],%L0x555555590ac0[18],%L0x555555590ac0[19],
     %L0x555555590ac0[20],%L0x555555590ac0[21],%L0x555555590ac0[22],%L0x555555590ac0[23],
     %L0x555555590ac0[24],%L0x555555590ac0[25],%L0x555555590ac0[26],%L0x555555590ac0[27],
     %L0x555555590ac0[28],%L0x555555590ac0[29],%L0x555555590ac0[30],%L0x555555590ac0[31],
     %L0x555555590ac0[32],%L0x555555590ac0[33],%L0x555555590ac0[34],%L0x555555590ac0[35],
     %L0x555555590ac0[36],%L0x555555590ac0[37],%L0x555555590ac0[38],%L0x555555590ac0[39],
     %L0x555555590ac0[40],%L0x555555590ac0[41],%L0x555555590ac0[42],%L0x555555590ac0[43],
     %L0x555555590ac0[44],%L0x555555590ac0[45],%L0x555555590ac0[46],%L0x555555590ac0[47],
     %L0x555555590ac0[48],%L0x555555590ac0[49],%L0x555555590ac0[50],%L0x555555590ac0[51],
     %L0x555555590ac0[52],%L0x555555590ac0[53],%L0x555555590ac0[54],%L0x555555590ac0[55],
     %L0x555555590ac0[56],%L0x555555590ac0[57],%L0x555555590ac0[58],%L0x555555590ac0[59],
     %L0x555555590ac0[60],%L0x555555590ac0[61],%L0x555555590ac0[62],%L0x555555590ac0[63],
     %L0x555555590ac8[0],%L0x555555590ac8[1],%L0x555555590ac8[2],%L0x555555590ac8[3],
     %L0x555555590ac8[4],%L0x555555590ac8[5],%L0x555555590ac8[6],%L0x555555590ac8[7],
     %L0x555555590ac8[8],%L0x555555590ac8[9],%L0x555555590ac8[10],%L0x555555590ac8[11],
     %L0x555555590ac8[12],%L0x555555590ac8[13],%L0x555555590ac8[14],%L0x555555590ac8[15],
     %L0x555555590ac8[16],%L0x555555590ac8[17],%L0x555555590ac8[18],%L0x555555590ac8[19],
     %L0x555555590ac8[20],%L0x555555590ac8[21],%L0x555555590ac8[22],%L0x555555590ac8[23],
     %L0x555555590ac8[24],%L0x555555590ac8[25],%L0x555555590ac8[26],%L0x555555590ac8[27],
     %L0x555555590ac8[28],%L0x555555590ac8[29],%L0x555555590ac8[30],%L0x555555590ac8[31],
     %L0x555555590ac8[32],%L0x555555590ac8[33],%L0x555555590ac8[34],%L0x555555590ac8[35],
     %L0x555555590ac8[36],%L0x555555590ac8[37],%L0x555555590ac8[38],%L0x555555590ac8[39],
     %L0x555555590ac8[40],%L0x555555590ac8[41],%L0x555555590ac8[42],%L0x555555590ac8[43],
     %L0x555555590ac8[44],%L0x555555590ac8[45],%L0x555555590ac8[46],%L0x555555590ac8[47],
     %L0x555555590ac8[48],%L0x555555590ac8[49],%L0x555555590ac8[50],%L0x555555590ac8[51],
     %L0x555555590ac8[52],%L0x555555590ac8[53],%L0x555555590ac8[54],%L0x555555590ac8[55],
     %L0x555555590ac8[56],%L0x555555590ac8[57],%L0x555555590ac8[58],%L0x555555590ac8[59],
     %L0x555555590ac8[60],%L0x555555590ac8[61],%L0x555555590ac8[62],%L0x555555590ac8[63],
     %L0x555555590ad0[0],%L0x555555590ad0[1],%L0x555555590ad0[2],%L0x555555590ad0[3],
     %L0x555555590ad0[4],%L0x555555590ad0[5],%L0x555555590ad0[6],%L0x555555590ad0[7],
     %L0x555555590ad0[8],%L0x555555590ad0[9],%L0x555555590ad0[10],%L0x555555590ad0[11],
     %L0x555555590ad0[12],%L0x555555590ad0[13],%L0x555555590ad0[14],%L0x555555590ad0[15],
     %L0x555555590ad0[16],%L0x555555590ad0[17],%L0x555555590ad0[18],%L0x555555590ad0[19],
     %L0x555555590ad0[20],%L0x555555590ad0[21],%L0x555555590ad0[22],%L0x555555590ad0[23],
     %L0x555555590ad0[24],%L0x555555590ad0[25],%L0x555555590ad0[26],%L0x555555590ad0[27],
     %L0x555555590ad0[28],%L0x555555590ad0[29],%L0x555555590ad0[30],%L0x555555590ad0[31],
     %L0x555555590ad0[32],%L0x555555590ad0[33],%L0x555555590ad0[34],%L0x555555590ad0[35],
     %L0x555555590ad0[36],%L0x555555590ad0[37],%L0x555555590ad0[38],%L0x555555590ad0[39],
     %L0x555555590ad0[40],%L0x555555590ad0[41],%L0x555555590ad0[42],%L0x555555590ad0[43],
     %L0x555555590ad0[44],%L0x555555590ad0[45],%L0x555555590ad0[46],%L0x555555590ad0[47],
     %L0x555555590ad0[48],%L0x555555590ad0[49],%L0x555555590ad0[50],%L0x555555590ad0[51],
     %L0x555555590ad0[52],%L0x555555590ad0[53],%L0x555555590ad0[54],%L0x555555590ad0[55],
     %L0x555555590ad0[56],%L0x555555590ad0[57],%L0x555555590ad0[58],%L0x555555590ad0[59],
     %L0x555555590ad0[60],%L0x555555590ad0[61],%L0x555555590ad0[62],%L0x555555590ad0[63],
     %L0x555555590ad8[0],%L0x555555590ad8[1],%L0x555555590ad8[2],%L0x555555590ad8[3],
     %L0x555555590ad8[4],%L0x555555590ad8[5],%L0x555555590ad8[6],%L0x555555590ad8[7],
     %L0x555555590ad8[8],%L0x555555590ad8[9],%L0x555555590ad8[10],%L0x555555590ad8[11],
     %L0x555555590ad8[12],%L0x555555590ad8[13],%L0x555555590ad8[14],%L0x555555590ad8[15],
     %L0x555555590ad8[16],%L0x555555590ad8[17],%L0x555555590ad8[18],%L0x555555590ad8[19],
     %L0x555555590ad8[20],%L0x555555590ad8[21],%L0x555555590ad8[22],%L0x555555590ad8[23],
     %L0x555555590ad8[24],%L0x555555590ad8[25],%L0x555555590ad8[26],%L0x555555590ad8[27],
     %L0x555555590ad8[28],%L0x555555590ad8[29],%L0x555555590ad8[30],%L0x555555590ad8[31],
     %L0x555555590ad8[32],%L0x555555590ad8[33],%L0x555555590ad8[34],%L0x555555590ad8[35],
     %L0x555555590ad8[36],%L0x555555590ad8[37],%L0x555555590ad8[38],%L0x555555590ad8[39],
     %L0x555555590ad8[40],%L0x555555590ad8[41],%L0x555555590ad8[42],%L0x555555590ad8[43],
     %L0x555555590ad8[44],%L0x555555590ad8[45],%L0x555555590ad8[46],%L0x555555590ad8[47],
     %L0x555555590ad8[48],%L0x555555590ad8[49],%L0x555555590ad8[50],%L0x555555590ad8[51],
     %L0x555555590ad8[52],%L0x555555590ad8[53],%L0x555555590ad8[54],%L0x555555590ad8[55],
     %L0x555555590ad8[56],%L0x555555590ad8[57],%L0x555555590ad8[58],%L0x555555590ad8[59],
     %L0x555555590ad8[60],%L0x555555590ad8[61],%L0x555555590ad8[62],%L0x555555590ad8[63]];
(* vmovdqa %ymm0,0x80(%rsp)                        #! EA = L0x7ffffff50a00; PC = 0x555555582b8b *)
mov %L0x7ffffff50a00
    [%ymm0[0],%ymm0[1],%ymm0[2],%ymm0[3],%ymm0[4],%ymm0[5],%ymm0[6],%ymm0[7],
     %ymm0[8],%ymm0[9],%ymm0[10],%ymm0[11],%ymm0[12],%ymm0[13],%ymm0[14],%ymm0[15],
     %ymm0[16],%ymm0[17],%ymm0[18],%ymm0[19],%ymm0[20],%ymm0[21],%ymm0[22],%ymm0[23],
     %ymm0[24],%ymm0[25],%ymm0[26],%ymm0[27],%ymm0[28],%ymm0[29],%ymm0[30],%ymm0[31],
     %ymm0[32],%ymm0[33],%ymm0[34],%ymm0[35],%ymm0[36],%ymm0[37],%ymm0[38],%ymm0[39],
     %ymm0[40],%ymm0[41],%ymm0[42],%ymm0[43],%ymm0[44],%ymm0[45],%ymm0[46],%ymm0[47],
     %ymm0[48],%ymm0[49],%ymm0[50],%ymm0[51],%ymm0[52],%ymm0[53],%ymm0[54],%ymm0[55],
     %ymm0[56],%ymm0[57],%ymm0[58],%ymm0[59],%ymm0[60],%ymm0[61],%ymm0[62],%ymm0[63]];
mov %L0x7ffffff50a08
    [%ymm0[64],%ymm0[65],%ymm0[66],%ymm0[67],%ymm0[68],%ymm0[69],%ymm0[70],%ymm0[71],
     %ymm0[72],%ymm0[73],%ymm0[74],%ymm0[75],%ymm0[76],%ymm0[77],%ymm0[78],%ymm0[79],
     %ymm0[80],%ymm0[81],%ymm0[82],%ymm0[83],%ymm0[84],%ymm0[85],%ymm0[86],%ymm0[87],
     %ymm0[88],%ymm0[89],%ymm0[90],%ymm0[91],%ymm0[92],%ymm0[93],%ymm0[94],%ymm0[95],
     %ymm0[96],%ymm0[97],%ymm0[98],%ymm0[99],%ymm0[100],%ymm0[101],%ymm0[102],%ymm0[103],
     %ymm0[104],%ymm0[105],%ymm0[106],%ymm0[107],%ymm0[108],%ymm0[109],%ymm0[110],%ymm0[111],
     %ymm0[112],%ymm0[113],%ymm0[114],%ymm0[115],%ymm0[116],%ymm0[117],%ymm0[118],%ymm0[119],
     %ymm0[120],%ymm0[121],%ymm0[122],%ymm0[123],%ymm0[124],%ymm0[125],%ymm0[126],%ymm0[127]];
mov %L0x7ffffff50a10
    [%ymm0[128],%ymm0[129],%ymm0[130],%ymm0[131],%ymm0[132],%ymm0[133],%ymm0[134],%ymm0[135],
     %ymm0[136],%ymm0[137],%ymm0[138],%ymm0[139],%ymm0[140],%ymm0[141],%ymm0[142],%ymm0[143],
     %ymm0[144],%ymm0[145],%ymm0[146],%ymm0[147],%ymm0[148],%ymm0[149],%ymm0[150],%ymm0[151],
     %ymm0[152],%ymm0[153],%ymm0[154],%ymm0[155],%ymm0[156],%ymm0[157],%ymm0[158],%ymm0[159],
     %ymm0[160],%ymm0[161],%ymm0[162],%ymm0[163],%ymm0[164],%ymm0[165],%ymm0[166],%ymm0[167],
     %ymm0[168],%ymm0[169],%ymm0[170],%ymm0[171],%ymm0[172],%ymm0[173],%ymm0[174],%ymm0[175],
     %ymm0[176],%ymm0[177],%ymm0[178],%ymm0[179],%ymm0[180],%ymm0[181],%ymm0[182],%ymm0[183],
     %ymm0[184],%ymm0[185],%ymm0[186],%ymm0[187],%ymm0[188],%ymm0[189],%ymm0[190],%ymm0[191]];
mov %L0x7ffffff50a18
    [%ymm0[192],%ymm0[193],%ymm0[194],%ymm0[195],%ymm0[196],%ymm0[197],%ymm0[198],%ymm0[199],
     %ymm0[200],%ymm0[201],%ymm0[202],%ymm0[203],%ymm0[204],%ymm0[205],%ymm0[206],%ymm0[207],
     %ymm0[208],%ymm0[209],%ymm0[210],%ymm0[211],%ymm0[212],%ymm0[213],%ymm0[214],%ymm0[215],
     %ymm0[216],%ymm0[217],%ymm0[218],%ymm0[219],%ymm0[220],%ymm0[221],%ymm0[222],%ymm0[223],
     %ymm0[224],%ymm0[225],%ymm0[226],%ymm0[227],%ymm0[228],%ymm0[229],%ymm0[230],%ymm0[231],
     %ymm0[232],%ymm0[233],%ymm0[234],%ymm0[235],%ymm0[236],%ymm0[237],%ymm0[238],%ymm0[239],
     %ymm0[240],%ymm0[241],%ymm0[242],%ymm0[243],%ymm0[244],%ymm0[245],%ymm0[246],%ymm0[247],
     %ymm0[248],%ymm0[249],%ymm0[250],%ymm0[251],%ymm0[252],%ymm0[253],%ymm0[254],%ymm0[255]];
(* vmovdqa 0xdf44(%rip),%ymm0        # 0x555555590ae0#! EA = L0x555555590ae0; Value = 0x00f00000000000f0; PC = 0x555555582b94 *)
mov %ymm0
    [%L0x555555590ae0[0],%L0x555555590ae0[1],%L0x555555590ae0[2],%L0x555555590ae0[3],
     %L0x555555590ae0[4],%L0x555555590ae0[5],%L0x555555590ae0[6],%L0x555555590ae0[7],
     %L0x555555590ae0[8],%L0x555555590ae0[9],%L0x555555590ae0[10],%L0x555555590ae0[11],
     %L0x555555590ae0[12],%L0x555555590ae0[13],%L0x555555590ae0[14],%L0x555555590ae0[15],
     %L0x555555590ae0[16],%L0x555555590ae0[17],%L0x555555590ae0[18],%L0x555555590ae0[19],
     %L0x555555590ae0[20],%L0x555555590ae0[21],%L0x555555590ae0[22],%L0x555555590ae0[23],
     %L0x555555590ae0[24],%L0x555555590ae0[25],%L0x555555590ae0[26],%L0x555555590ae0[27],
     %L0x555555590ae0[28],%L0x555555590ae0[29],%L0x555555590ae0[30],%L0x555555590ae0[31],
     %L0x555555590ae0[32],%L0x555555590ae0[33],%L0x555555590ae0[34],%L0x555555590ae0[35],
     %L0x555555590ae0[36],%L0x555555590ae0[37],%L0x555555590ae0[38],%L0x555555590ae0[39],
     %L0x555555590ae0[40],%L0x555555590ae0[41],%L0x555555590ae0[42],%L0x555555590ae0[43],
     %L0x555555590ae0[44],%L0x555555590ae0[45],%L0x555555590ae0[46],%L0x555555590ae0[47],
     %L0x555555590ae0[48],%L0x555555590ae0[49],%L0x555555590ae0[50],%L0x555555590ae0[51],
     %L0x555555590ae0[52],%L0x555555590ae0[53],%L0x555555590ae0[54],%L0x555555590ae0[55],
     %L0x555555590ae0[56],%L0x555555590ae0[57],%L0x555555590ae0[58],%L0x555555590ae0[59],
     %L0x555555590ae0[60],%L0x555555590ae0[61],%L0x555555590ae0[62],%L0x555555590ae0[63],
     %L0x555555590ae8[0],%L0x555555590ae8[1],%L0x555555590ae8[2],%L0x555555590ae8[3],
     %L0x555555590ae8[4],%L0x555555590ae8[5],%L0x555555590ae8[6],%L0x555555590ae8[7],
     %L0x555555590ae8[8],%L0x555555590ae8[9],%L0x555555590ae8[10],%L0x555555590ae8[11],
     %L0x555555590ae8[12],%L0x555555590ae8[13],%L0x555555590ae8[14],%L0x555555590ae8[15],
     %L0x555555590ae8[16],%L0x555555590ae8[17],%L0x555555590ae8[18],%L0x555555590ae8[19],
     %L0x555555590ae8[20],%L0x555555590ae8[21],%L0x555555590ae8[22],%L0x555555590ae8[23],
     %L0x555555590ae8[24],%L0x555555590ae8[25],%L0x555555590ae8[26],%L0x555555590ae8[27],
     %L0x555555590ae8[28],%L0x555555590ae8[29],%L0x555555590ae8[30],%L0x555555590ae8[31],
     %L0x555555590ae8[32],%L0x555555590ae8[33],%L0x555555590ae8[34],%L0x555555590ae8[35],
     %L0x555555590ae8[36],%L0x555555590ae8[37],%L0x555555590ae8[38],%L0x555555590ae8[39],
     %L0x555555590ae8[40],%L0x555555590ae8[41],%L0x555555590ae8[42],%L0x555555590ae8[43],
     %L0x555555590ae8[44],%L0x555555590ae8[45],%L0x555555590ae8[46],%L0x555555590ae8[47],
     %L0x555555590ae8[48],%L0x555555590ae8[49],%L0x555555590ae8[50],%L0x555555590ae8[51],
     %L0x555555590ae8[52],%L0x555555590ae8[53],%L0x555555590ae8[54],%L0x555555590ae8[55],
     %L0x555555590ae8[56],%L0x555555590ae8[57],%L0x555555590ae8[58],%L0x555555590ae8[59],
     %L0x555555590ae8[60],%L0x555555590ae8[61],%L0x555555590ae8[62],%L0x555555590ae8[63],
     %L0x555555590af0[0],%L0x555555590af0[1],%L0x555555590af0[2],%L0x555555590af0[3],
     %L0x555555590af0[4],%L0x555555590af0[5],%L0x555555590af0[6],%L0x555555590af0[7],
     %L0x555555590af0[8],%L0x555555590af0[9],%L0x555555590af0[10],%L0x555555590af0[11],
     %L0x555555590af0[12],%L0x555555590af0[13],%L0x555555590af0[14],%L0x555555590af0[15],
     %L0x555555590af0[16],%L0x555555590af0[17],%L0x555555590af0[18],%L0x555555590af0[19],
     %L0x555555590af0[20],%L0x555555590af0[21],%L0x555555590af0[22],%L0x555555590af0[23],
     %L0x555555590af0[24],%L0x555555590af0[25],%L0x555555590af0[26],%L0x555555590af0[27],
     %L0x555555590af0[28],%L0x555555590af0[29],%L0x555555590af0[30],%L0x555555590af0[31],
     %L0x555555590af0[32],%L0x555555590af0[33],%L0x555555590af0[34],%L0x555555590af0[35],
     %L0x555555590af0[36],%L0x555555590af0[37],%L0x555555590af0[38],%L0x555555590af0[39],
     %L0x555555590af0[40],%L0x555555590af0[41],%L0x555555590af0[42],%L0x555555590af0[43],
     %L0x555555590af0[44],%L0x555555590af0[45],%L0x555555590af0[46],%L0x555555590af0[47],
     %L0x555555590af0[48],%L0x555555590af0[49],%L0x555555590af0[50],%L0x555555590af0[51],
     %L0x555555590af0[52],%L0x555555590af0[53],%L0x555555590af0[54],%L0x555555590af0[55],
     %L0x555555590af0[56],%L0x555555590af0[57],%L0x555555590af0[58],%L0x555555590af0[59],
     %L0x555555590af0[60],%L0x555555590af0[61],%L0x555555590af0[62],%L0x555555590af0[63],
     %L0x555555590af8[0],%L0x555555590af8[1],%L0x555555590af8[2],%L0x555555590af8[3],
     %L0x555555590af8[4],%L0x555555590af8[5],%L0x555555590af8[6],%L0x555555590af8[7],
     %L0x555555590af8[8],%L0x555555590af8[9],%L0x555555590af8[10],%L0x555555590af8[11],
     %L0x555555590af8[12],%L0x555555590af8[13],%L0x555555590af8[14],%L0x555555590af8[15],
     %L0x555555590af8[16],%L0x555555590af8[17],%L0x555555590af8[18],%L0x555555590af8[19],
     %L0x555555590af8[20],%L0x555555590af8[21],%L0x555555590af8[22],%L0x555555590af8[23],
     %L0x555555590af8[24],%L0x555555590af8[25],%L0x555555590af8[26],%L0x555555590af8[27],
     %L0x555555590af8[28],%L0x555555590af8[29],%L0x555555590af8[30],%L0x555555590af8[31],
     %L0x555555590af8[32],%L0x555555590af8[33],%L0x555555590af8[34],%L0x555555590af8[35],
     %L0x555555590af8[36],%L0x555555590af8[37],%L0x555555590af8[38],%L0x555555590af8[39],
     %L0x555555590af8[40],%L0x555555590af8[41],%L0x555555590af8[42],%L0x555555590af8[43],
     %L0x555555590af8[44],%L0x555555590af8[45],%L0x555555590af8[46],%L0x555555590af8[47],
     %L0x555555590af8[48],%L0x555555590af8[49],%L0x555555590af8[50],%L0x555555590af8[51],
     %L0x555555590af8[52],%L0x555555590af8[53],%L0x555555590af8[54],%L0x555555590af8[55],
     %L0x555555590af8[56],%L0x555555590af8[57],%L0x555555590af8[58],%L0x555555590af8[59],
     %L0x555555590af8[60],%L0x555555590af8[61],%L0x555555590af8[62],%L0x555555590af8[63]];
(* vmovdqa %ymm0,0xa0(%rsp)                        #! EA = L0x7ffffff50a20; PC = 0x555555582b9c *)
mov %L0x7ffffff50a20
    [%ymm0[0],%ymm0[1],%ymm0[2],%ymm0[3],%ymm0[4],%ymm0[5],%ymm0[6],%ymm0[7],
     %ymm0[8],%ymm0[9],%ymm0[10],%ymm0[11],%ymm0[12],%ymm0[13],%ymm0[14],%ymm0[15],
     %ymm0[16],%ymm0[17],%ymm0[18],%ymm0[19],%ymm0[20],%ymm0[21],%ymm0[22],%ymm0[23],
     %ymm0[24],%ymm0[25],%ymm0[26],%ymm0[27],%ymm0[28],%ymm0[29],%ymm0[30],%ymm0[31],
     %ymm0[32],%ymm0[33],%ymm0[34],%ymm0[35],%ymm0[36],%ymm0[37],%ymm0[38],%ymm0[39],
     %ymm0[40],%ymm0[41],%ymm0[42],%ymm0[43],%ymm0[44],%ymm0[45],%ymm0[46],%ymm0[47],
     %ymm0[48],%ymm0[49],%ymm0[50],%ymm0[51],%ymm0[52],%ymm0[53],%ymm0[54],%ymm0[55],
     %ymm0[56],%ymm0[57],%ymm0[58],%ymm0[59],%ymm0[60],%ymm0[61],%ymm0[62],%ymm0[63]];
mov %L0x7ffffff50a28
    [%ymm0[64],%ymm0[65],%ymm0[66],%ymm0[67],%ymm0[68],%ymm0[69],%ymm0[70],%ymm0[71],
     %ymm0[72],%ymm0[73],%ymm0[74],%ymm0[75],%ymm0[76],%ymm0[77],%ymm0[78],%ymm0[79],
     %ymm0[80],%ymm0[81],%ymm0[82],%ymm0[83],%ymm0[84],%ymm0[85],%ymm0[86],%ymm0[87],
     %ymm0[88],%ymm0[89],%ymm0[90],%ymm0[91],%ymm0[92],%ymm0[93],%ymm0[94],%ymm0[95],
     %ymm0[96],%ymm0[97],%ymm0[98],%ymm0[99],%ymm0[100],%ymm0[101],%ymm0[102],%ymm0[103],
     %ymm0[104],%ymm0[105],%ymm0[106],%ymm0[107],%ymm0[108],%ymm0[109],%ymm0[110],%ymm0[111],
     %ymm0[112],%ymm0[113],%ymm0[114],%ymm0[115],%ymm0[116],%ymm0[117],%ymm0[118],%ymm0[119],
     %ymm0[120],%ymm0[121],%ymm0[122],%ymm0[123],%ymm0[124],%ymm0[125],%ymm0[126],%ymm0[127]];
mov %L0x7ffffff50a30
    [%ymm0[128],%ymm0[129],%ymm0[130],%ymm0[131],%ymm0[132],%ymm0[133],%ymm0[134],%ymm0[135],
     %ymm0[136],%ymm0[137],%ymm0[138],%ymm0[139],%ymm0[140],%ymm0[141],%ymm0[142],%ymm0[143],
     %ymm0[144],%ymm0[145],%ymm0[146],%ymm0[147],%ymm0[148],%ymm0[149],%ymm0[150],%ymm0[151],
     %ymm0[152],%ymm0[153],%ymm0[154],%ymm0[155],%ymm0[156],%ymm0[157],%ymm0[158],%ymm0[159],
     %ymm0[160],%ymm0[161],%ymm0[162],%ymm0[163],%ymm0[164],%ymm0[165],%ymm0[166],%ymm0[167],
     %ymm0[168],%ymm0[169],%ymm0[170],%ymm0[171],%ymm0[172],%ymm0[173],%ymm0[174],%ymm0[175],
     %ymm0[176],%ymm0[177],%ymm0[178],%ymm0[179],%ymm0[180],%ymm0[181],%ymm0[182],%ymm0[183],
     %ymm0[184],%ymm0[185],%ymm0[186],%ymm0[187],%ymm0[188],%ymm0[189],%ymm0[190],%ymm0[191]];
mov %L0x7ffffff50a38
    [%ymm0[192],%ymm0[193],%ymm0[194],%ymm0[195],%ymm0[196],%ymm0[197],%ymm0[198],%ymm0[199],
     %ymm0[200],%ymm0[201],%ymm0[202],%ymm0[203],%ymm0[204],%ymm0[205],%ymm0[206],%ymm0[207],
     %ymm0[208],%ymm0[209],%ymm0[210],%ymm0[211],%ymm0[212],%ymm0[213],%ymm0[214],%ymm0[215],
     %ymm0[216],%ymm0[217],%ymm0[218],%ymm0[219],%ymm0[220],%ymm0[221],%ymm0[222],%ymm0[223],
     %ymm0[224],%ymm0[225],%ymm0[226],%ymm0[227],%ymm0[228],%ymm0[229],%ymm0[230],%ymm0[231],
     %ymm0[232],%ymm0[233],%ymm0[234],%ymm0[235],%ymm0[236],%ymm0[237],%ymm0[238],%ymm0[239],
     %ymm0[240],%ymm0[241],%ymm0[242],%ymm0[243],%ymm0[244],%ymm0[245],%ymm0[246],%ymm0[247],
     %ymm0[248],%ymm0[249],%ymm0[250],%ymm0[251],%ymm0[252],%ymm0[253],%ymm0[254],%ymm0[255]];
(* vmovdqa 0xdf53(%rip),%ymm0        # 0x555555590b00#! EA = L0x555555590b00; Value = 0x0000f00000f00f00; PC = 0x555555582ba5 *)
mov %ymm0
    [%L0x555555590b00[0],%L0x555555590b00[1],%L0x555555590b00[2],%L0x555555590b00[3],
     %L0x555555590b00[4],%L0x555555590b00[5],%L0x555555590b00[6],%L0x555555590b00[7],
     %L0x555555590b00[8],%L0x555555590b00[9],%L0x555555590b00[10],%L0x555555590b00[11],
     %L0x555555590b00[12],%L0x555555590b00[13],%L0x555555590b00[14],%L0x555555590b00[15],
     %L0x555555590b00[16],%L0x555555590b00[17],%L0x555555590b00[18],%L0x555555590b00[19],
     %L0x555555590b00[20],%L0x555555590b00[21],%L0x555555590b00[22],%L0x555555590b00[23],
     %L0x555555590b00[24],%L0x555555590b00[25],%L0x555555590b00[26],%L0x555555590b00[27],
     %L0x555555590b00[28],%L0x555555590b00[29],%L0x555555590b00[30],%L0x555555590b00[31],
     %L0x555555590b00[32],%L0x555555590b00[33],%L0x555555590b00[34],%L0x555555590b00[35],
     %L0x555555590b00[36],%L0x555555590b00[37],%L0x555555590b00[38],%L0x555555590b00[39],
     %L0x555555590b00[40],%L0x555555590b00[41],%L0x555555590b00[42],%L0x555555590b00[43],
     %L0x555555590b00[44],%L0x555555590b00[45],%L0x555555590b00[46],%L0x555555590b00[47],
     %L0x555555590b00[48],%L0x555555590b00[49],%L0x555555590b00[50],%L0x555555590b00[51],
     %L0x555555590b00[52],%L0x555555590b00[53],%L0x555555590b00[54],%L0x555555590b00[55],
     %L0x555555590b00[56],%L0x555555590b00[57],%L0x555555590b00[58],%L0x555555590b00[59],
     %L0x555555590b00[60],%L0x555555590b00[61],%L0x555555590b00[62],%L0x555555590b00[63],
     %L0x555555590b08[0],%L0x555555590b08[1],%L0x555555590b08[2],%L0x555555590b08[3],
     %L0x555555590b08[4],%L0x555555590b08[5],%L0x555555590b08[6],%L0x555555590b08[7],
     %L0x555555590b08[8],%L0x555555590b08[9],%L0x555555590b08[10],%L0x555555590b08[11],
     %L0x555555590b08[12],%L0x555555590b08[13],%L0x555555590b08[14],%L0x555555590b08[15],
     %L0x555555590b08[16],%L0x555555590b08[17],%L0x555555590b08[18],%L0x555555590b08[19],
     %L0x555555590b08[20],%L0x555555590b08[21],%L0x555555590b08[22],%L0x555555590b08[23],
     %L0x555555590b08[24],%L0x555555590b08[25],%L0x555555590b08[26],%L0x555555590b08[27],
     %L0x555555590b08[28],%L0x555555590b08[29],%L0x555555590b08[30],%L0x555555590b08[31],
     %L0x555555590b08[32],%L0x555555590b08[33],%L0x555555590b08[34],%L0x555555590b08[35],
     %L0x555555590b08[36],%L0x555555590b08[37],%L0x555555590b08[38],%L0x555555590b08[39],
     %L0x555555590b08[40],%L0x555555590b08[41],%L0x555555590b08[42],%L0x555555590b08[43],
     %L0x555555590b08[44],%L0x555555590b08[45],%L0x555555590b08[46],%L0x555555590b08[47],
     %L0x555555590b08[48],%L0x555555590b08[49],%L0x555555590b08[50],%L0x555555590b08[51],
     %L0x555555590b08[52],%L0x555555590b08[53],%L0x555555590b08[54],%L0x555555590b08[55],
     %L0x555555590b08[56],%L0x555555590b08[57],%L0x555555590b08[58],%L0x555555590b08[59],
     %L0x555555590b08[60],%L0x555555590b08[61],%L0x555555590b08[62],%L0x555555590b08[63],
     %L0x555555590b10[0],%L0x555555590b10[1],%L0x555555590b10[2],%L0x555555590b10[3],
     %L0x555555590b10[4],%L0x555555590b10[5],%L0x555555590b10[6],%L0x555555590b10[7],
     %L0x555555590b10[8],%L0x555555590b10[9],%L0x555555590b10[10],%L0x555555590b10[11],
     %L0x555555590b10[12],%L0x555555590b10[13],%L0x555555590b10[14],%L0x555555590b10[15],
     %L0x555555590b10[16],%L0x555555590b10[17],%L0x555555590b10[18],%L0x555555590b10[19],
     %L0x555555590b10[20],%L0x555555590b10[21],%L0x555555590b10[22],%L0x555555590b10[23],
     %L0x555555590b10[24],%L0x555555590b10[25],%L0x555555590b10[26],%L0x555555590b10[27],
     %L0x555555590b10[28],%L0x555555590b10[29],%L0x555555590b10[30],%L0x555555590b10[31],
     %L0x555555590b10[32],%L0x555555590b10[33],%L0x555555590b10[34],%L0x555555590b10[35],
     %L0x555555590b10[36],%L0x555555590b10[37],%L0x555555590b10[38],%L0x555555590b10[39],
     %L0x555555590b10[40],%L0x555555590b10[41],%L0x555555590b10[42],%L0x555555590b10[43],
     %L0x555555590b10[44],%L0x555555590b10[45],%L0x555555590b10[46],%L0x555555590b10[47],
     %L0x555555590b10[48],%L0x555555590b10[49],%L0x555555590b10[50],%L0x555555590b10[51],
     %L0x555555590b10[52],%L0x555555590b10[53],%L0x555555590b10[54],%L0x555555590b10[55],
     %L0x555555590b10[56],%L0x555555590b10[57],%L0x555555590b10[58],%L0x555555590b10[59],
     %L0x555555590b10[60],%L0x555555590b10[61],%L0x555555590b10[62],%L0x555555590b10[63],
     %L0x555555590b18[0],%L0x555555590b18[1],%L0x555555590b18[2],%L0x555555590b18[3],
     %L0x555555590b18[4],%L0x555555590b18[5],%L0x555555590b18[6],%L0x555555590b18[7],
     %L0x555555590b18[8],%L0x555555590b18[9],%L0x555555590b18[10],%L0x555555590b18[11],
     %L0x555555590b18[12],%L0x555555590b18[13],%L0x555555590b18[14],%L0x555555590b18[15],
     %L0x555555590b18[16],%L0x555555590b18[17],%L0x555555590b18[18],%L0x555555590b18[19],
     %L0x555555590b18[20],%L0x555555590b18[21],%L0x555555590b18[22],%L0x555555590b18[23],
     %L0x555555590b18[24],%L0x555555590b18[25],%L0x555555590b18[26],%L0x555555590b18[27],
     %L0x555555590b18[28],%L0x555555590b18[29],%L0x555555590b18[30],%L0x555555590b18[31],
     %L0x555555590b18[32],%L0x555555590b18[33],%L0x555555590b18[34],%L0x555555590b18[35],
     %L0x555555590b18[36],%L0x555555590b18[37],%L0x555555590b18[38],%L0x555555590b18[39],
     %L0x555555590b18[40],%L0x555555590b18[41],%L0x555555590b18[42],%L0x555555590b18[43],
     %L0x555555590b18[44],%L0x555555590b18[45],%L0x555555590b18[46],%L0x555555590b18[47],
     %L0x555555590b18[48],%L0x555555590b18[49],%L0x555555590b18[50],%L0x555555590b18[51],
     %L0x555555590b18[52],%L0x555555590b18[53],%L0x555555590b18[54],%L0x555555590b18[55],
     %L0x555555590b18[56],%L0x555555590b18[57],%L0x555555590b18[58],%L0x555555590b18[59],
     %L0x555555590b18[60],%L0x555555590b18[61],%L0x555555590b18[62],%L0x555555590b18[63]];
(* vmovdqa %ymm0,0xc0(%rsp)                        #! EA = L0x7ffffff50a40; PC = 0x555555582bad *)
mov %L0x7ffffff50a40
    [%ymm0[0],%ymm0[1],%ymm0[2],%ymm0[3],%ymm0[4],%ymm0[5],%ymm0[6],%ymm0[7],
     %ymm0[8],%ymm0[9],%ymm0[10],%ymm0[11],%ymm0[12],%ymm0[13],%ymm0[14],%ymm0[15],
     %ymm0[16],%ymm0[17],%ymm0[18],%ymm0[19],%ymm0[20],%ymm0[21],%ymm0[22],%ymm0[23],
     %ymm0[24],%ymm0[25],%ymm0[26],%ymm0[27],%ymm0[28],%ymm0[29],%ymm0[30],%ymm0[31],
     %ymm0[32],%ymm0[33],%ymm0[34],%ymm0[35],%ymm0[36],%ymm0[37],%ymm0[38],%ymm0[39],
     %ymm0[40],%ymm0[41],%ymm0[42],%ymm0[43],%ymm0[44],%ymm0[45],%ymm0[46],%ymm0[47],
     %ymm0[48],%ymm0[49],%ymm0[50],%ymm0[51],%ymm0[52],%ymm0[53],%ymm0[54],%ymm0[55],
     %ymm0[56],%ymm0[57],%ymm0[58],%ymm0[59],%ymm0[60],%ymm0[61],%ymm0[62],%ymm0[63]];
mov %L0x7ffffff50a48
    [%ymm0[64],%ymm0[65],%ymm0[66],%ymm0[67],%ymm0[68],%ymm0[69],%ymm0[70],%ymm0[71],
     %ymm0[72],%ymm0[73],%ymm0[74],%ymm0[75],%ymm0[76],%ymm0[77],%ymm0[78],%ymm0[79],
     %ymm0[80],%ymm0[81],%ymm0[82],%ymm0[83],%ymm0[84],%ymm0[85],%ymm0[86],%ymm0[87],
     %ymm0[88],%ymm0[89],%ymm0[90],%ymm0[91],%ymm0[92],%ymm0[93],%ymm0[94],%ymm0[95],
     %ymm0[96],%ymm0[97],%ymm0[98],%ymm0[99],%ymm0[100],%ymm0[101],%ymm0[102],%ymm0[103],
     %ymm0[104],%ymm0[105],%ymm0[106],%ymm0[107],%ymm0[108],%ymm0[109],%ymm0[110],%ymm0[111],
     %ymm0[112],%ymm0[113],%ymm0[114],%ymm0[115],%ymm0[116],%ymm0[117],%ymm0[118],%ymm0[119],
     %ymm0[120],%ymm0[121],%ymm0[122],%ymm0[123],%ymm0[124],%ymm0[125],%ymm0[126],%ymm0[127]];
mov %L0x7ffffff50a50
    [%ymm0[128],%ymm0[129],%ymm0[130],%ymm0[131],%ymm0[132],%ymm0[133],%ymm0[134],%ymm0[135],
     %ymm0[136],%ymm0[137],%ymm0[138],%ymm0[139],%ymm0[140],%ymm0[141],%ymm0[142],%ymm0[143],
     %ymm0[144],%ymm0[145],%ymm0[146],%ymm0[147],%ymm0[148],%ymm0[149],%ymm0[150],%ymm0[151],
     %ymm0[152],%ymm0[153],%ymm0[154],%ymm0[155],%ymm0[156],%ymm0[157],%ymm0[158],%ymm0[159],
     %ymm0[160],%ymm0[161],%ymm0[162],%ymm0[163],%ymm0[164],%ymm0[165],%ymm0[166],%ymm0[167],
     %ymm0[168],%ymm0[169],%ymm0[170],%ymm0[171],%ymm0[172],%ymm0[173],%ymm0[174],%ymm0[175],
     %ymm0[176],%ymm0[177],%ymm0[178],%ymm0[179],%ymm0[180],%ymm0[181],%ymm0[182],%ymm0[183],
     %ymm0[184],%ymm0[185],%ymm0[186],%ymm0[187],%ymm0[188],%ymm0[189],%ymm0[190],%ymm0[191]];
mov %L0x7ffffff50a58
    [%ymm0[192],%ymm0[193],%ymm0[194],%ymm0[195],%ymm0[196],%ymm0[197],%ymm0[198],%ymm0[199],
     %ymm0[200],%ymm0[201],%ymm0[202],%ymm0[203],%ymm0[204],%ymm0[205],%ymm0[206],%ymm0[207],
     %ymm0[208],%ymm0[209],%ymm0[210],%ymm0[211],%ymm0[212],%ymm0[213],%ymm0[214],%ymm0[215],
     %ymm0[216],%ymm0[217],%ymm0[218],%ymm0[219],%ymm0[220],%ymm0[221],%ymm0[222],%ymm0[223],
     %ymm0[224],%ymm0[225],%ymm0[226],%ymm0[227],%ymm0[228],%ymm0[229],%ymm0[230],%ymm0[231],
     %ymm0[232],%ymm0[233],%ymm0[234],%ymm0[235],%ymm0[236],%ymm0[237],%ymm0[238],%ymm0[239],
     %ymm0[240],%ymm0[241],%ymm0[242],%ymm0[243],%ymm0[244],%ymm0[245],%ymm0[246],%ymm0[247],
     %ymm0[248],%ymm0[249],%ymm0[250],%ymm0[251],%ymm0[252],%ymm0[253],%ymm0[254],%ymm0[255]];
(* vmovdqa 0xdf62(%rip),%ymm0        # 0x555555590b20#! EA = L0x555555590b20; Value = 0x0000ff00ff0000ff; PC = 0x555555582bb6 *)
mov %ymm0
    [%L0x555555590b20[0],%L0x555555590b20[1],%L0x555555590b20[2],%L0x555555590b20[3],
     %L0x555555590b20[4],%L0x555555590b20[5],%L0x555555590b20[6],%L0x555555590b20[7],
     %L0x555555590b20[8],%L0x555555590b20[9],%L0x555555590b20[10],%L0x555555590b20[11],
     %L0x555555590b20[12],%L0x555555590b20[13],%L0x555555590b20[14],%L0x555555590b20[15],
     %L0x555555590b20[16],%L0x555555590b20[17],%L0x555555590b20[18],%L0x555555590b20[19],
     %L0x555555590b20[20],%L0x555555590b20[21],%L0x555555590b20[22],%L0x555555590b20[23],
     %L0x555555590b20[24],%L0x555555590b20[25],%L0x555555590b20[26],%L0x555555590b20[27],
     %L0x555555590b20[28],%L0x555555590b20[29],%L0x555555590b20[30],%L0x555555590b20[31],
     %L0x555555590b20[32],%L0x555555590b20[33],%L0x555555590b20[34],%L0x555555590b20[35],
     %L0x555555590b20[36],%L0x555555590b20[37],%L0x555555590b20[38],%L0x555555590b20[39],
     %L0x555555590b20[40],%L0x555555590b20[41],%L0x555555590b20[42],%L0x555555590b20[43],
     %L0x555555590b20[44],%L0x555555590b20[45],%L0x555555590b20[46],%L0x555555590b20[47],
     %L0x555555590b20[48],%L0x555555590b20[49],%L0x555555590b20[50],%L0x555555590b20[51],
     %L0x555555590b20[52],%L0x555555590b20[53],%L0x555555590b20[54],%L0x555555590b20[55],
     %L0x555555590b20[56],%L0x555555590b20[57],%L0x555555590b20[58],%L0x555555590b20[59],
     %L0x555555590b20[60],%L0x555555590b20[61],%L0x555555590b20[62],%L0x555555590b20[63],
     %L0x555555590b28[0],%L0x555555590b28[1],%L0x555555590b28[2],%L0x555555590b28[3],
     %L0x555555590b28[4],%L0x555555590b28[5],%L0x555555590b28[6],%L0x555555590b28[7],
     %L0x555555590b28[8],%L0x555555590b28[9],%L0x555555590b28[10],%L0x555555590b28[11],
     %L0x555555590b28[12],%L0x555555590b28[13],%L0x555555590b28[14],%L0x555555590b28[15],
     %L0x555555590b28[16],%L0x555555590b28[17],%L0x555555590b28[18],%L0x555555590b28[19],
     %L0x555555590b28[20],%L0x555555590b28[21],%L0x555555590b28[22],%L0x555555590b28[23],
     %L0x555555590b28[24],%L0x555555590b28[25],%L0x555555590b28[26],%L0x555555590b28[27],
     %L0x555555590b28[28],%L0x555555590b28[29],%L0x555555590b28[30],%L0x555555590b28[31],
     %L0x555555590b28[32],%L0x555555590b28[33],%L0x555555590b28[34],%L0x555555590b28[35],
     %L0x555555590b28[36],%L0x555555590b28[37],%L0x555555590b28[38],%L0x555555590b28[39],
     %L0x555555590b28[40],%L0x555555590b28[41],%L0x555555590b28[42],%L0x555555590b28[43],
     %L0x555555590b28[44],%L0x555555590b28[45],%L0x555555590b28[46],%L0x555555590b28[47],
     %L0x555555590b28[48],%L0x555555590b28[49],%L0x555555590b28[50],%L0x555555590b28[51],
     %L0x555555590b28[52],%L0x555555590b28[53],%L0x555555590b28[54],%L0x555555590b28[55],
     %L0x555555590b28[56],%L0x555555590b28[57],%L0x555555590b28[58],%L0x555555590b28[59],
     %L0x555555590b28[60],%L0x555555590b28[61],%L0x555555590b28[62],%L0x555555590b28[63],
     %L0x555555590b30[0],%L0x555555590b30[1],%L0x555555590b30[2],%L0x555555590b30[3],
     %L0x555555590b30[4],%L0x555555590b30[5],%L0x555555590b30[6],%L0x555555590b30[7],
     %L0x555555590b30[8],%L0x555555590b30[9],%L0x555555590b30[10],%L0x555555590b30[11],
     %L0x555555590b30[12],%L0x555555590b30[13],%L0x555555590b30[14],%L0x555555590b30[15],
     %L0x555555590b30[16],%L0x555555590b30[17],%L0x555555590b30[18],%L0x555555590b30[19],
     %L0x555555590b30[20],%L0x555555590b30[21],%L0x555555590b30[22],%L0x555555590b30[23],
     %L0x555555590b30[24],%L0x555555590b30[25],%L0x555555590b30[26],%L0x555555590b30[27],
     %L0x555555590b30[28],%L0x555555590b30[29],%L0x555555590b30[30],%L0x555555590b30[31],
     %L0x555555590b30[32],%L0x555555590b30[33],%L0x555555590b30[34],%L0x555555590b30[35],
     %L0x555555590b30[36],%L0x555555590b30[37],%L0x555555590b30[38],%L0x555555590b30[39],
     %L0x555555590b30[40],%L0x555555590b30[41],%L0x555555590b30[42],%L0x555555590b30[43],
     %L0x555555590b30[44],%L0x555555590b30[45],%L0x555555590b30[46],%L0x555555590b30[47],
     %L0x555555590b30[48],%L0x555555590b30[49],%L0x555555590b30[50],%L0x555555590b30[51],
     %L0x555555590b30[52],%L0x555555590b30[53],%L0x555555590b30[54],%L0x555555590b30[55],
     %L0x555555590b30[56],%L0x555555590b30[57],%L0x555555590b30[58],%L0x555555590b30[59],
     %L0x555555590b30[60],%L0x555555590b30[61],%L0x555555590b30[62],%L0x555555590b30[63],
     %L0x555555590b38[0],%L0x555555590b38[1],%L0x555555590b38[2],%L0x555555590b38[3],
     %L0x555555590b38[4],%L0x555555590b38[5],%L0x555555590b38[6],%L0x555555590b38[7],
     %L0x555555590b38[8],%L0x555555590b38[9],%L0x555555590b38[10],%L0x555555590b38[11],
     %L0x555555590b38[12],%L0x555555590b38[13],%L0x555555590b38[14],%L0x555555590b38[15],
     %L0x555555590b38[16],%L0x555555590b38[17],%L0x555555590b38[18],%L0x555555590b38[19],
     %L0x555555590b38[20],%L0x555555590b38[21],%L0x555555590b38[22],%L0x555555590b38[23],
     %L0x555555590b38[24],%L0x555555590b38[25],%L0x555555590b38[26],%L0x555555590b38[27],
     %L0x555555590b38[28],%L0x555555590b38[29],%L0x555555590b38[30],%L0x555555590b38[31],
     %L0x555555590b38[32],%L0x555555590b38[33],%L0x555555590b38[34],%L0x555555590b38[35],
     %L0x555555590b38[36],%L0x555555590b38[37],%L0x555555590b38[38],%L0x555555590b38[39],
     %L0x555555590b38[40],%L0x555555590b38[41],%L0x555555590b38[42],%L0x555555590b38[43],
     %L0x555555590b38[44],%L0x555555590b38[45],%L0x555555590b38[46],%L0x555555590b38[47],
     %L0x555555590b38[48],%L0x555555590b38[49],%L0x555555590b38[50],%L0x555555590b38[51],
     %L0x555555590b38[52],%L0x555555590b38[53],%L0x555555590b38[54],%L0x555555590b38[55],
     %L0x555555590b38[56],%L0x555555590b38[57],%L0x555555590b38[58],%L0x555555590b38[59],
     %L0x555555590b38[60],%L0x555555590b38[61],%L0x555555590b38[62],%L0x555555590b38[63]];
(* vmovdqa %ymm0,0xe0(%rsp)                        #! EA = L0x7ffffff50a60; PC = 0x555555582bbe *)
mov %L0x7ffffff50a60
    [%ymm0[0],%ymm0[1],%ymm0[2],%ymm0[3],%ymm0[4],%ymm0[5],%ymm0[6],%ymm0[7],
     %ymm0[8],%ymm0[9],%ymm0[10],%ymm0[11],%ymm0[12],%ymm0[13],%ymm0[14],%ymm0[15],
     %ymm0[16],%ymm0[17],%ymm0[18],%ymm0[19],%ymm0[20],%ymm0[21],%ymm0[22],%ymm0[23],
     %ymm0[24],%ymm0[25],%ymm0[26],%ymm0[27],%ymm0[28],%ymm0[29],%ymm0[30],%ymm0[31],
     %ymm0[32],%ymm0[33],%ymm0[34],%ymm0[35],%ymm0[36],%ymm0[37],%ymm0[38],%ymm0[39],
     %ymm0[40],%ymm0[41],%ymm0[42],%ymm0[43],%ymm0[44],%ymm0[45],%ymm0[46],%ymm0[47],
     %ymm0[48],%ymm0[49],%ymm0[50],%ymm0[51],%ymm0[52],%ymm0[53],%ymm0[54],%ymm0[55],
     %ymm0[56],%ymm0[57],%ymm0[58],%ymm0[59],%ymm0[60],%ymm0[61],%ymm0[62],%ymm0[63]];
mov %L0x7ffffff50a68
    [%ymm0[64],%ymm0[65],%ymm0[66],%ymm0[67],%ymm0[68],%ymm0[69],%ymm0[70],%ymm0[71],
     %ymm0[72],%ymm0[73],%ymm0[74],%ymm0[75],%ymm0[76],%ymm0[77],%ymm0[78],%ymm0[79],
     %ymm0[80],%ymm0[81],%ymm0[82],%ymm0[83],%ymm0[84],%ymm0[85],%ymm0[86],%ymm0[87],
     %ymm0[88],%ymm0[89],%ymm0[90],%ymm0[91],%ymm0[92],%ymm0[93],%ymm0[94],%ymm0[95],
     %ymm0[96],%ymm0[97],%ymm0[98],%ymm0[99],%ymm0[100],%ymm0[101],%ymm0[102],%ymm0[103],
     %ymm0[104],%ymm0[105],%ymm0[106],%ymm0[107],%ymm0[108],%ymm0[109],%ymm0[110],%ymm0[111],
     %ymm0[112],%ymm0[113],%ymm0[114],%ymm0[115],%ymm0[116],%ymm0[117],%ymm0[118],%ymm0[119],
     %ymm0[120],%ymm0[121],%ymm0[122],%ymm0[123],%ymm0[124],%ymm0[125],%ymm0[126],%ymm0[127]];
mov %L0x7ffffff50a70
    [%ymm0[128],%ymm0[129],%ymm0[130],%ymm0[131],%ymm0[132],%ymm0[133],%ymm0[134],%ymm0[135],
     %ymm0[136],%ymm0[137],%ymm0[138],%ymm0[139],%ymm0[140],%ymm0[141],%ymm0[142],%ymm0[143],
     %ymm0[144],%ymm0[145],%ymm0[146],%ymm0[147],%ymm0[148],%ymm0[149],%ymm0[150],%ymm0[151],
     %ymm0[152],%ymm0[153],%ymm0[154],%ymm0[155],%ymm0[156],%ymm0[157],%ymm0[158],%ymm0[159],
     %ymm0[160],%ymm0[161],%ymm0[162],%ymm0[163],%ymm0[164],%ymm0[165],%ymm0[166],%ymm0[167],
     %ymm0[168],%ymm0[169],%ymm0[170],%ymm0[171],%ymm0[172],%ymm0[173],%ymm0[174],%ymm0[175],
     %ymm0[176],%ymm0[177],%ymm0[178],%ymm0[179],%ymm0[180],%ymm0[181],%ymm0[182],%ymm0[183],
     %ymm0[184],%ymm0[185],%ymm0[186],%ymm0[187],%ymm0[188],%ymm0[189],%ymm0[190],%ymm0[191]];
mov %L0x7ffffff50a78
    [%ymm0[192],%ymm0[193],%ymm0[194],%ymm0[195],%ymm0[196],%ymm0[197],%ymm0[198],%ymm0[199],
     %ymm0[200],%ymm0[201],%ymm0[202],%ymm0[203],%ymm0[204],%ymm0[205],%ymm0[206],%ymm0[207],
     %ymm0[208],%ymm0[209],%ymm0[210],%ymm0[211],%ymm0[212],%ymm0[213],%ymm0[214],%ymm0[215],
     %ymm0[216],%ymm0[217],%ymm0[218],%ymm0[219],%ymm0[220],%ymm0[221],%ymm0[222],%ymm0[223],
     %ymm0[224],%ymm0[225],%ymm0[226],%ymm0[227],%ymm0[228],%ymm0[229],%ymm0[230],%ymm0[231],
     %ymm0[232],%ymm0[233],%ymm0[234],%ymm0[235],%ymm0[236],%ymm0[237],%ymm0[238],%ymm0[239],
     %ymm0[240],%ymm0[241],%ymm0[242],%ymm0[243],%ymm0[244],%ymm0[245],%ymm0[246],%ymm0[247],
     %ymm0[248],%ymm0[249],%ymm0[250],%ymm0[251],%ymm0[252],%ymm0[253],%ymm0[254],%ymm0[255]];
(* vmovdqa 0xdf71(%rip),%ymm0        # 0x555555590b40#! EA = L0x555555590b40; Value = 0x00ff00ff00ff0000; PC = 0x555555582bc7 *)
mov %ymm0
    [%L0x555555590b40[0],%L0x555555590b40[1],%L0x555555590b40[2],%L0x555555590b40[3],
     %L0x555555590b40[4],%L0x555555590b40[5],%L0x555555590b40[6],%L0x555555590b40[7],
     %L0x555555590b40[8],%L0x555555590b40[9],%L0x555555590b40[10],%L0x555555590b40[11],
     %L0x555555590b40[12],%L0x555555590b40[13],%L0x555555590b40[14],%L0x555555590b40[15],
     %L0x555555590b40[16],%L0x555555590b40[17],%L0x555555590b40[18],%L0x555555590b40[19],
     %L0x555555590b40[20],%L0x555555590b40[21],%L0x555555590b40[22],%L0x555555590b40[23],
     %L0x555555590b40[24],%L0x555555590b40[25],%L0x555555590b40[26],%L0x555555590b40[27],
     %L0x555555590b40[28],%L0x555555590b40[29],%L0x555555590b40[30],%L0x555555590b40[31],
     %L0x555555590b40[32],%L0x555555590b40[33],%L0x555555590b40[34],%L0x555555590b40[35],
     %L0x555555590b40[36],%L0x555555590b40[37],%L0x555555590b40[38],%L0x555555590b40[39],
     %L0x555555590b40[40],%L0x555555590b40[41],%L0x555555590b40[42],%L0x555555590b40[43],
     %L0x555555590b40[44],%L0x555555590b40[45],%L0x555555590b40[46],%L0x555555590b40[47],
     %L0x555555590b40[48],%L0x555555590b40[49],%L0x555555590b40[50],%L0x555555590b40[51],
     %L0x555555590b40[52],%L0x555555590b40[53],%L0x555555590b40[54],%L0x555555590b40[55],
     %L0x555555590b40[56],%L0x555555590b40[57],%L0x555555590b40[58],%L0x555555590b40[59],
     %L0x555555590b40[60],%L0x555555590b40[61],%L0x555555590b40[62],%L0x555555590b40[63],
     %L0x555555590b48[0],%L0x555555590b48[1],%L0x555555590b48[2],%L0x555555590b48[3],
     %L0x555555590b48[4],%L0x555555590b48[5],%L0x555555590b48[6],%L0x555555590b48[7],
     %L0x555555590b48[8],%L0x555555590b48[9],%L0x555555590b48[10],%L0x555555590b48[11],
     %L0x555555590b48[12],%L0x555555590b48[13],%L0x555555590b48[14],%L0x555555590b48[15],
     %L0x555555590b48[16],%L0x555555590b48[17],%L0x555555590b48[18],%L0x555555590b48[19],
     %L0x555555590b48[20],%L0x555555590b48[21],%L0x555555590b48[22],%L0x555555590b48[23],
     %L0x555555590b48[24],%L0x555555590b48[25],%L0x555555590b48[26],%L0x555555590b48[27],
     %L0x555555590b48[28],%L0x555555590b48[29],%L0x555555590b48[30],%L0x555555590b48[31],
     %L0x555555590b48[32],%L0x555555590b48[33],%L0x555555590b48[34],%L0x555555590b48[35],
     %L0x555555590b48[36],%L0x555555590b48[37],%L0x555555590b48[38],%L0x555555590b48[39],
     %L0x555555590b48[40],%L0x555555590b48[41],%L0x555555590b48[42],%L0x555555590b48[43],
     %L0x555555590b48[44],%L0x555555590b48[45],%L0x555555590b48[46],%L0x555555590b48[47],
     %L0x555555590b48[48],%L0x555555590b48[49],%L0x555555590b48[50],%L0x555555590b48[51],
     %L0x555555590b48[52],%L0x555555590b48[53],%L0x555555590b48[54],%L0x555555590b48[55],
     %L0x555555590b48[56],%L0x555555590b48[57],%L0x555555590b48[58],%L0x555555590b48[59],
     %L0x555555590b48[60],%L0x555555590b48[61],%L0x555555590b48[62],%L0x555555590b48[63],
     %L0x555555590b50[0],%L0x555555590b50[1],%L0x555555590b50[2],%L0x555555590b50[3],
     %L0x555555590b50[4],%L0x555555590b50[5],%L0x555555590b50[6],%L0x555555590b50[7],
     %L0x555555590b50[8],%L0x555555590b50[9],%L0x555555590b50[10],%L0x555555590b50[11],
     %L0x555555590b50[12],%L0x555555590b50[13],%L0x555555590b50[14],%L0x555555590b50[15],
     %L0x555555590b50[16],%L0x555555590b50[17],%L0x555555590b50[18],%L0x555555590b50[19],
     %L0x555555590b50[20],%L0x555555590b50[21],%L0x555555590b50[22],%L0x555555590b50[23],
     %L0x555555590b50[24],%L0x555555590b50[25],%L0x555555590b50[26],%L0x555555590b50[27],
     %L0x555555590b50[28],%L0x555555590b50[29],%L0x555555590b50[30],%L0x555555590b50[31],
     %L0x555555590b50[32],%L0x555555590b50[33],%L0x555555590b50[34],%L0x555555590b50[35],
     %L0x555555590b50[36],%L0x555555590b50[37],%L0x555555590b50[38],%L0x555555590b50[39],
     %L0x555555590b50[40],%L0x555555590b50[41],%L0x555555590b50[42],%L0x555555590b50[43],
     %L0x555555590b50[44],%L0x555555590b50[45],%L0x555555590b50[46],%L0x555555590b50[47],
     %L0x555555590b50[48],%L0x555555590b50[49],%L0x555555590b50[50],%L0x555555590b50[51],
     %L0x555555590b50[52],%L0x555555590b50[53],%L0x555555590b50[54],%L0x555555590b50[55],
     %L0x555555590b50[56],%L0x555555590b50[57],%L0x555555590b50[58],%L0x555555590b50[59],
     %L0x555555590b50[60],%L0x555555590b50[61],%L0x555555590b50[62],%L0x555555590b50[63],
     %L0x555555590b58[0],%L0x555555590b58[1],%L0x555555590b58[2],%L0x555555590b58[3],
     %L0x555555590b58[4],%L0x555555590b58[5],%L0x555555590b58[6],%L0x555555590b58[7],
     %L0x555555590b58[8],%L0x555555590b58[9],%L0x555555590b58[10],%L0x555555590b58[11],
     %L0x555555590b58[12],%L0x555555590b58[13],%L0x555555590b58[14],%L0x555555590b58[15],
     %L0x555555590b58[16],%L0x555555590b58[17],%L0x555555590b58[18],%L0x555555590b58[19],
     %L0x555555590b58[20],%L0x555555590b58[21],%L0x555555590b58[22],%L0x555555590b58[23],
     %L0x555555590b58[24],%L0x555555590b58[25],%L0x555555590b58[26],%L0x555555590b58[27],
     %L0x555555590b58[28],%L0x555555590b58[29],%L0x555555590b58[30],%L0x555555590b58[31],
     %L0x555555590b58[32],%L0x555555590b58[33],%L0x555555590b58[34],%L0x555555590b58[35],
     %L0x555555590b58[36],%L0x555555590b58[37],%L0x555555590b58[38],%L0x555555590b58[39],
     %L0x555555590b58[40],%L0x555555590b58[41],%L0x555555590b58[42],%L0x555555590b58[43],
     %L0x555555590b58[44],%L0x555555590b58[45],%L0x555555590b58[46],%L0x555555590b58[47],
     %L0x555555590b58[48],%L0x555555590b58[49],%L0x555555590b58[50],%L0x555555590b58[51],
     %L0x555555590b58[52],%L0x555555590b58[53],%L0x555555590b58[54],%L0x555555590b58[55],
     %L0x555555590b58[56],%L0x555555590b58[57],%L0x555555590b58[58],%L0x555555590b58[59],
     %L0x555555590b58[60],%L0x555555590b58[61],%L0x555555590b58[62],%L0x555555590b58[63]];
(* mov    %rax,0x8(%rsp)                           #! EA = L0x7ffffff50988; PC = 0x555555582bcf *)
mov %L0x7ffffff50988 %rax;
(* vmovdqa %ymm0,0x100(%rsp)                       #! EA = L0x7ffffff50a80; PC = 0x555555582bd4 *)
mov %L0x7ffffff50a80
    [%ymm0[0],%ymm0[1],%ymm0[2],%ymm0[3],%ymm0[4],%ymm0[5],%ymm0[6],%ymm0[7],
     %ymm0[8],%ymm0[9],%ymm0[10],%ymm0[11],%ymm0[12],%ymm0[13],%ymm0[14],%ymm0[15],
     %ymm0[16],%ymm0[17],%ymm0[18],%ymm0[19],%ymm0[20],%ymm0[21],%ymm0[22],%ymm0[23],
     %ymm0[24],%ymm0[25],%ymm0[26],%ymm0[27],%ymm0[28],%ymm0[29],%ymm0[30],%ymm0[31],
     %ymm0[32],%ymm0[33],%ymm0[34],%ymm0[35],%ymm0[36],%ymm0[37],%ymm0[38],%ymm0[39],
     %ymm0[40],%ymm0[41],%ymm0[42],%ymm0[43],%ymm0[44],%ymm0[45],%ymm0[46],%ymm0[47],
     %ymm0[48],%ymm0[49],%ymm0[50],%ymm0[51],%ymm0[52],%ymm0[53],%ymm0[54],%ymm0[55],
     %ymm0[56],%ymm0[57],%ymm0[58],%ymm0[59],%ymm0[60],%ymm0[61],%ymm0[62],%ymm0[63]];
mov %L0x7ffffff50a88
    [%ymm0[64],%ymm0[65],%ymm0[66],%ymm0[67],%ymm0[68],%ymm0[69],%ymm0[70],%ymm0[71],
     %ymm0[72],%ymm0[73],%ymm0[74],%ymm0[75],%ymm0[76],%ymm0[77],%ymm0[78],%ymm0[79],
     %ymm0[80],%ymm0[81],%ymm0[82],%ymm0[83],%ymm0[84],%ymm0[85],%ymm0[86],%ymm0[87],
     %ymm0[88],%ymm0[89],%ymm0[90],%ymm0[91],%ymm0[92],%ymm0[93],%ymm0[94],%ymm0[95],
     %ymm0[96],%ymm0[97],%ymm0[98],%ymm0[99],%ymm0[100],%ymm0[101],%ymm0[102],%ymm0[103],
     %ymm0[104],%ymm0[105],%ymm0[106],%ymm0[107],%ymm0[108],%ymm0[109],%ymm0[110],%ymm0[111],
     %ymm0[112],%ymm0[113],%ymm0[114],%ymm0[115],%ymm0[116],%ymm0[117],%ymm0[118],%ymm0[119],
     %ymm0[120],%ymm0[121],%ymm0[122],%ymm0[123],%ymm0[124],%ymm0[125],%ymm0[126],%ymm0[127]];
mov %L0x7ffffff50a90
    [%ymm0[128],%ymm0[129],%ymm0[130],%ymm0[131],%ymm0[132],%ymm0[133],%ymm0[134],%ymm0[135],
     %ymm0[136],%ymm0[137],%ymm0[138],%ymm0[139],%ymm0[140],%ymm0[141],%ymm0[142],%ymm0[143],
     %ymm0[144],%ymm0[145],%ymm0[146],%ymm0[147],%ymm0[148],%ymm0[149],%ymm0[150],%ymm0[151],
     %ymm0[152],%ymm0[153],%ymm0[154],%ymm0[155],%ymm0[156],%ymm0[157],%ymm0[158],%ymm0[159],
     %ymm0[160],%ymm0[161],%ymm0[162],%ymm0[163],%ymm0[164],%ymm0[165],%ymm0[166],%ymm0[167],
     %ymm0[168],%ymm0[169],%ymm0[170],%ymm0[171],%ymm0[172],%ymm0[173],%ymm0[174],%ymm0[175],
     %ymm0[176],%ymm0[177],%ymm0[178],%ymm0[179],%ymm0[180],%ymm0[181],%ymm0[182],%ymm0[183],
     %ymm0[184],%ymm0[185],%ymm0[186],%ymm0[187],%ymm0[188],%ymm0[189],%ymm0[190],%ymm0[191]];
mov %L0x7ffffff50a98
    [%ymm0[192],%ymm0[193],%ymm0[194],%ymm0[195],%ymm0[196],%ymm0[197],%ymm0[198],%ymm0[199],
     %ymm0[200],%ymm0[201],%ymm0[202],%ymm0[203],%ymm0[204],%ymm0[205],%ymm0[206],%ymm0[207],
     %ymm0[208],%ymm0[209],%ymm0[210],%ymm0[211],%ymm0[212],%ymm0[213],%ymm0[214],%ymm0[215],
     %ymm0[216],%ymm0[217],%ymm0[218],%ymm0[219],%ymm0[220],%ymm0[221],%ymm0[222],%ymm0[223],
     %ymm0[224],%ymm0[225],%ymm0[226],%ymm0[227],%ymm0[228],%ymm0[229],%ymm0[230],%ymm0[231],
     %ymm0[232],%ymm0[233],%ymm0[234],%ymm0[235],%ymm0[236],%ymm0[237],%ymm0[238],%ymm0[239],
     %ymm0[240],%ymm0[241],%ymm0[242],%ymm0[243],%ymm0[244],%ymm0[245],%ymm0[246],%ymm0[247],
     %ymm0[248],%ymm0[249],%ymm0[250],%ymm0[251],%ymm0[252],%ymm0[253],%ymm0[254],%ymm0[255]];
(* vmovdqa 0xdf7b(%rip),%ymm0        # 0x555555590b60#! EA = L0x555555590b60; Value = 0xffff00ffff00ff00; PC = 0x555555582bdd *)
mov %ymm0
    [%L0x555555590b60[0],%L0x555555590b60[1],%L0x555555590b60[2],%L0x555555590b60[3],
     %L0x555555590b60[4],%L0x555555590b60[5],%L0x555555590b60[6],%L0x555555590b60[7],
     %L0x555555590b60[8],%L0x555555590b60[9],%L0x555555590b60[10],%L0x555555590b60[11],
     %L0x555555590b60[12],%L0x555555590b60[13],%L0x555555590b60[14],%L0x555555590b60[15],
     %L0x555555590b60[16],%L0x555555590b60[17],%L0x555555590b60[18],%L0x555555590b60[19],
     %L0x555555590b60[20],%L0x555555590b60[21],%L0x555555590b60[22],%L0x555555590b60[23],
     %L0x555555590b60[24],%L0x555555590b60[25],%L0x555555590b60[26],%L0x555555590b60[27],
     %L0x555555590b60[28],%L0x555555590b60[29],%L0x555555590b60[30],%L0x555555590b60[31],
     %L0x555555590b60[32],%L0x555555590b60[33],%L0x555555590b60[34],%L0x555555590b60[35],
     %L0x555555590b60[36],%L0x555555590b60[37],%L0x555555590b60[38],%L0x555555590b60[39],
     %L0x555555590b60[40],%L0x555555590b60[41],%L0x555555590b60[42],%L0x555555590b60[43],
     %L0x555555590b60[44],%L0x555555590b60[45],%L0x555555590b60[46],%L0x555555590b60[47],
     %L0x555555590b60[48],%L0x555555590b60[49],%L0x555555590b60[50],%L0x555555590b60[51],
     %L0x555555590b60[52],%L0x555555590b60[53],%L0x555555590b60[54],%L0x555555590b60[55],
     %L0x555555590b60[56],%L0x555555590b60[57],%L0x555555590b60[58],%L0x555555590b60[59],
     %L0x555555590b60[60],%L0x555555590b60[61],%L0x555555590b60[62],%L0x555555590b60[63],
     %L0x555555590b68[0],%L0x555555590b68[1],%L0x555555590b68[2],%L0x555555590b68[3],
     %L0x555555590b68[4],%L0x555555590b68[5],%L0x555555590b68[6],%L0x555555590b68[7],
     %L0x555555590b68[8],%L0x555555590b68[9],%L0x555555590b68[10],%L0x555555590b68[11],
     %L0x555555590b68[12],%L0x555555590b68[13],%L0x555555590b68[14],%L0x555555590b68[15],
     %L0x555555590b68[16],%L0x555555590b68[17],%L0x555555590b68[18],%L0x555555590b68[19],
     %L0x555555590b68[20],%L0x555555590b68[21],%L0x555555590b68[22],%L0x555555590b68[23],
     %L0x555555590b68[24],%L0x555555590b68[25],%L0x555555590b68[26],%L0x555555590b68[27],
     %L0x555555590b68[28],%L0x555555590b68[29],%L0x555555590b68[30],%L0x555555590b68[31],
     %L0x555555590b68[32],%L0x555555590b68[33],%L0x555555590b68[34],%L0x555555590b68[35],
     %L0x555555590b68[36],%L0x555555590b68[37],%L0x555555590b68[38],%L0x555555590b68[39],
     %L0x555555590b68[40],%L0x555555590b68[41],%L0x555555590b68[42],%L0x555555590b68[43],
     %L0x555555590b68[44],%L0x555555590b68[45],%L0x555555590b68[46],%L0x555555590b68[47],
     %L0x555555590b68[48],%L0x555555590b68[49],%L0x555555590b68[50],%L0x555555590b68[51],
     %L0x555555590b68[52],%L0x555555590b68[53],%L0x555555590b68[54],%L0x555555590b68[55],
     %L0x555555590b68[56],%L0x555555590b68[57],%L0x555555590b68[58],%L0x555555590b68[59],
     %L0x555555590b68[60],%L0x555555590b68[61],%L0x555555590b68[62],%L0x555555590b68[63],
     %L0x555555590b70[0],%L0x555555590b70[1],%L0x555555590b70[2],%L0x555555590b70[3],
     %L0x555555590b70[4],%L0x555555590b70[5],%L0x555555590b70[6],%L0x555555590b70[7],
     %L0x555555590b70[8],%L0x555555590b70[9],%L0x555555590b70[10],%L0x555555590b70[11],
     %L0x555555590b70[12],%L0x555555590b70[13],%L0x555555590b70[14],%L0x555555590b70[15],
     %L0x555555590b70[16],%L0x555555590b70[17],%L0x555555590b70[18],%L0x555555590b70[19],
     %L0x555555590b70[20],%L0x555555590b70[21],%L0x555555590b70[22],%L0x555555590b70[23],
     %L0x555555590b70[24],%L0x555555590b70[25],%L0x555555590b70[26],%L0x555555590b70[27],
     %L0x555555590b70[28],%L0x555555590b70[29],%L0x555555590b70[30],%L0x555555590b70[31],
     %L0x555555590b70[32],%L0x555555590b70[33],%L0x555555590b70[34],%L0x555555590b70[35],
     %L0x555555590b70[36],%L0x555555590b70[37],%L0x555555590b70[38],%L0x555555590b70[39],
     %L0x555555590b70[40],%L0x555555590b70[41],%L0x555555590b70[42],%L0x555555590b70[43],
     %L0x555555590b70[44],%L0x555555590b70[45],%L0x555555590b70[46],%L0x555555590b70[47],
     %L0x555555590b70[48],%L0x555555590b70[49],%L0x555555590b70[50],%L0x555555590b70[51],
     %L0x555555590b70[52],%L0x555555590b70[53],%L0x555555590b70[54],%L0x555555590b70[55],
     %L0x555555590b70[56],%L0x555555590b70[57],%L0x555555590b70[58],%L0x555555590b70[59],
     %L0x555555590b70[60],%L0x555555590b70[61],%L0x555555590b70[62],%L0x555555590b70[63],
     %L0x555555590b78[0],%L0x555555590b78[1],%L0x555555590b78[2],%L0x555555590b78[3],
     %L0x555555590b78[4],%L0x555555590b78[5],%L0x555555590b78[6],%L0x555555590b78[7],
     %L0x555555590b78[8],%L0x555555590b78[9],%L0x555555590b78[10],%L0x555555590b78[11],
     %L0x555555590b78[12],%L0x555555590b78[13],%L0x555555590b78[14],%L0x555555590b78[15],
     %L0x555555590b78[16],%L0x555555590b78[17],%L0x555555590b78[18],%L0x555555590b78[19],
     %L0x555555590b78[20],%L0x555555590b78[21],%L0x555555590b78[22],%L0x555555590b78[23],
     %L0x555555590b78[24],%L0x555555590b78[25],%L0x555555590b78[26],%L0x555555590b78[27],
     %L0x555555590b78[28],%L0x555555590b78[29],%L0x555555590b78[30],%L0x555555590b78[31],
     %L0x555555590b78[32],%L0x555555590b78[33],%L0x555555590b78[34],%L0x555555590b78[35],
     %L0x555555590b78[36],%L0x555555590b78[37],%L0x555555590b78[38],%L0x555555590b78[39],
     %L0x555555590b78[40],%L0x555555590b78[41],%L0x555555590b78[42],%L0x555555590b78[43],
     %L0x555555590b78[44],%L0x555555590b78[45],%L0x555555590b78[46],%L0x555555590b78[47],
     %L0x555555590b78[48],%L0x555555590b78[49],%L0x555555590b78[50],%L0x555555590b78[51],
     %L0x555555590b78[52],%L0x555555590b78[53],%L0x555555590b78[54],%L0x555555590b78[55],
     %L0x555555590b78[56],%L0x555555590b78[57],%L0x555555590b78[58],%L0x555555590b78[59],
     %L0x555555590b78[60],%L0x555555590b78[61],%L0x555555590b78[62],%L0x555555590b78[63]];
(* vmovdqa %ymm0,0x120(%rsp)                       #! EA = L0x7ffffff50aa0; PC = 0x555555582be5 *)
mov %L0x7ffffff50aa0
    [%ymm0[0],%ymm0[1],%ymm0[2],%ymm0[3],%ymm0[4],%ymm0[5],%ymm0[6],%ymm0[7],
     %ymm0[8],%ymm0[9],%ymm0[10],%ymm0[11],%ymm0[12],%ymm0[13],%ymm0[14],%ymm0[15],
     %ymm0[16],%ymm0[17],%ymm0[18],%ymm0[19],%ymm0[20],%ymm0[21],%ymm0[22],%ymm0[23],
     %ymm0[24],%ymm0[25],%ymm0[26],%ymm0[27],%ymm0[28],%ymm0[29],%ymm0[30],%ymm0[31],
     %ymm0[32],%ymm0[33],%ymm0[34],%ymm0[35],%ymm0[36],%ymm0[37],%ymm0[38],%ymm0[39],
     %ymm0[40],%ymm0[41],%ymm0[42],%ymm0[43],%ymm0[44],%ymm0[45],%ymm0[46],%ymm0[47],
     %ymm0[48],%ymm0[49],%ymm0[50],%ymm0[51],%ymm0[52],%ymm0[53],%ymm0[54],%ymm0[55],
     %ymm0[56],%ymm0[57],%ymm0[58],%ymm0[59],%ymm0[60],%ymm0[61],%ymm0[62],%ymm0[63]];
mov %L0x7ffffff50aa8
    [%ymm0[64],%ymm0[65],%ymm0[66],%ymm0[67],%ymm0[68],%ymm0[69],%ymm0[70],%ymm0[71],
     %ymm0[72],%ymm0[73],%ymm0[74],%ymm0[75],%ymm0[76],%ymm0[77],%ymm0[78],%ymm0[79],
     %ymm0[80],%ymm0[81],%ymm0[82],%ymm0[83],%ymm0[84],%ymm0[85],%ymm0[86],%ymm0[87],
     %ymm0[88],%ymm0[89],%ymm0[90],%ymm0[91],%ymm0[92],%ymm0[93],%ymm0[94],%ymm0[95],
     %ymm0[96],%ymm0[97],%ymm0[98],%ymm0[99],%ymm0[100],%ymm0[101],%ymm0[102],%ymm0[103],
     %ymm0[104],%ymm0[105],%ymm0[106],%ymm0[107],%ymm0[108],%ymm0[109],%ymm0[110],%ymm0[111],
     %ymm0[112],%ymm0[113],%ymm0[114],%ymm0[115],%ymm0[116],%ymm0[117],%ymm0[118],%ymm0[119],
     %ymm0[120],%ymm0[121],%ymm0[122],%ymm0[123],%ymm0[124],%ymm0[125],%ymm0[126],%ymm0[127]];
mov %L0x7ffffff50ab0
    [%ymm0[128],%ymm0[129],%ymm0[130],%ymm0[131],%ymm0[132],%ymm0[133],%ymm0[134],%ymm0[135],
     %ymm0[136],%ymm0[137],%ymm0[138],%ymm0[139],%ymm0[140],%ymm0[141],%ymm0[142],%ymm0[143],
     %ymm0[144],%ymm0[145],%ymm0[146],%ymm0[147],%ymm0[148],%ymm0[149],%ymm0[150],%ymm0[151],
     %ymm0[152],%ymm0[153],%ymm0[154],%ymm0[155],%ymm0[156],%ymm0[157],%ymm0[158],%ymm0[159],
     %ymm0[160],%ymm0[161],%ymm0[162],%ymm0[163],%ymm0[164],%ymm0[165],%ymm0[166],%ymm0[167],
     %ymm0[168],%ymm0[169],%ymm0[170],%ymm0[171],%ymm0[172],%ymm0[173],%ymm0[174],%ymm0[175],
     %ymm0[176],%ymm0[177],%ymm0[178],%ymm0[179],%ymm0[180],%ymm0[181],%ymm0[182],%ymm0[183],
     %ymm0[184],%ymm0[185],%ymm0[186],%ymm0[187],%ymm0[188],%ymm0[189],%ymm0[190],%ymm0[191]];
mov %L0x7ffffff50ab8
    [%ymm0[192],%ymm0[193],%ymm0[194],%ymm0[195],%ymm0[196],%ymm0[197],%ymm0[198],%ymm0[199],
     %ymm0[200],%ymm0[201],%ymm0[202],%ymm0[203],%ymm0[204],%ymm0[205],%ymm0[206],%ymm0[207],
     %ymm0[208],%ymm0[209],%ymm0[210],%ymm0[211],%ymm0[212],%ymm0[213],%ymm0[214],%ymm0[215],
     %ymm0[216],%ymm0[217],%ymm0[218],%ymm0[219],%ymm0[220],%ymm0[221],%ymm0[222],%ymm0[223],
     %ymm0[224],%ymm0[225],%ymm0[226],%ymm0[227],%ymm0[228],%ymm0[229],%ymm0[230],%ymm0[231],
     %ymm0[232],%ymm0[233],%ymm0[234],%ymm0[235],%ymm0[236],%ymm0[237],%ymm0[238],%ymm0[239],
     %ymm0[240],%ymm0[241],%ymm0[242],%ymm0[243],%ymm0[244],%ymm0[245],%ymm0[246],%ymm0[247],
     %ymm0[248],%ymm0[249],%ymm0[250],%ymm0[251],%ymm0[252],%ymm0[253],%ymm0[254],%ymm0[255]];
(* vmovdqa 0xdf8a(%rip),%ymm0        # 0x555555590b80#! EA = L0x555555590b80; Value = 0x000000000000ffff; PC = 0x555555582bee *)
mov %ymm0
    [%L0x555555590b80[0],%L0x555555590b80[1],%L0x555555590b80[2],%L0x555555590b80[3],
     %L0x555555590b80[4],%L0x555555590b80[5],%L0x555555590b80[6],%L0x555555590b80[7],
     %L0x555555590b80[8],%L0x555555590b80[9],%L0x555555590b80[10],%L0x555555590b80[11],
     %L0x555555590b80[12],%L0x555555590b80[13],%L0x555555590b80[14],%L0x555555590b80[15],
     %L0x555555590b80[16],%L0x555555590b80[17],%L0x555555590b80[18],%L0x555555590b80[19],
     %L0x555555590b80[20],%L0x555555590b80[21],%L0x555555590b80[22],%L0x555555590b80[23],
     %L0x555555590b80[24],%L0x555555590b80[25],%L0x555555590b80[26],%L0x555555590b80[27],
     %L0x555555590b80[28],%L0x555555590b80[29],%L0x555555590b80[30],%L0x555555590b80[31],
     %L0x555555590b80[32],%L0x555555590b80[33],%L0x555555590b80[34],%L0x555555590b80[35],
     %L0x555555590b80[36],%L0x555555590b80[37],%L0x555555590b80[38],%L0x555555590b80[39],
     %L0x555555590b80[40],%L0x555555590b80[41],%L0x555555590b80[42],%L0x555555590b80[43],
     %L0x555555590b80[44],%L0x555555590b80[45],%L0x555555590b80[46],%L0x555555590b80[47],
     %L0x555555590b80[48],%L0x555555590b80[49],%L0x555555590b80[50],%L0x555555590b80[51],
     %L0x555555590b80[52],%L0x555555590b80[53],%L0x555555590b80[54],%L0x555555590b80[55],
     %L0x555555590b80[56],%L0x555555590b80[57],%L0x555555590b80[58],%L0x555555590b80[59],
     %L0x555555590b80[60],%L0x555555590b80[61],%L0x555555590b80[62],%L0x555555590b80[63],
     %L0x555555590b88[0],%L0x555555590b88[1],%L0x555555590b88[2],%L0x555555590b88[3],
     %L0x555555590b88[4],%L0x555555590b88[5],%L0x555555590b88[6],%L0x555555590b88[7],
     %L0x555555590b88[8],%L0x555555590b88[9],%L0x555555590b88[10],%L0x555555590b88[11],
     %L0x555555590b88[12],%L0x555555590b88[13],%L0x555555590b88[14],%L0x555555590b88[15],
     %L0x555555590b88[16],%L0x555555590b88[17],%L0x555555590b88[18],%L0x555555590b88[19],
     %L0x555555590b88[20],%L0x555555590b88[21],%L0x555555590b88[22],%L0x555555590b88[23],
     %L0x555555590b88[24],%L0x555555590b88[25],%L0x555555590b88[26],%L0x555555590b88[27],
     %L0x555555590b88[28],%L0x555555590b88[29],%L0x555555590b88[30],%L0x555555590b88[31],
     %L0x555555590b88[32],%L0x555555590b88[33],%L0x555555590b88[34],%L0x555555590b88[35],
     %L0x555555590b88[36],%L0x555555590b88[37],%L0x555555590b88[38],%L0x555555590b88[39],
     %L0x555555590b88[40],%L0x555555590b88[41],%L0x555555590b88[42],%L0x555555590b88[43],
     %L0x555555590b88[44],%L0x555555590b88[45],%L0x555555590b88[46],%L0x555555590b88[47],
     %L0x555555590b88[48],%L0x555555590b88[49],%L0x555555590b88[50],%L0x555555590b88[51],
     %L0x555555590b88[52],%L0x555555590b88[53],%L0x555555590b88[54],%L0x555555590b88[55],
     %L0x555555590b88[56],%L0x555555590b88[57],%L0x555555590b88[58],%L0x555555590b88[59],
     %L0x555555590b88[60],%L0x555555590b88[61],%L0x555555590b88[62],%L0x555555590b88[63],
     %L0x555555590b90[0],%L0x555555590b90[1],%L0x555555590b90[2],%L0x555555590b90[3],
     %L0x555555590b90[4],%L0x555555590b90[5],%L0x555555590b90[6],%L0x555555590b90[7],
     %L0x555555590b90[8],%L0x555555590b90[9],%L0x555555590b90[10],%L0x555555590b90[11],
     %L0x555555590b90[12],%L0x555555590b90[13],%L0x555555590b90[14],%L0x555555590b90[15],
     %L0x555555590b90[16],%L0x555555590b90[17],%L0x555555590b90[18],%L0x555555590b90[19],
     %L0x555555590b90[20],%L0x555555590b90[21],%L0x555555590b90[22],%L0x555555590b90[23],
     %L0x555555590b90[24],%L0x555555590b90[25],%L0x555555590b90[26],%L0x555555590b90[27],
     %L0x555555590b90[28],%L0x555555590b90[29],%L0x555555590b90[30],%L0x555555590b90[31],
     %L0x555555590b90[32],%L0x555555590b90[33],%L0x555555590b90[34],%L0x555555590b90[35],
     %L0x555555590b90[36],%L0x555555590b90[37],%L0x555555590b90[38],%L0x555555590b90[39],
     %L0x555555590b90[40],%L0x555555590b90[41],%L0x555555590b90[42],%L0x555555590b90[43],
     %L0x555555590b90[44],%L0x555555590b90[45],%L0x555555590b90[46],%L0x555555590b90[47],
     %L0x555555590b90[48],%L0x555555590b90[49],%L0x555555590b90[50],%L0x555555590b90[51],
     %L0x555555590b90[52],%L0x555555590b90[53],%L0x555555590b90[54],%L0x555555590b90[55],
     %L0x555555590b90[56],%L0x555555590b90[57],%L0x555555590b90[58],%L0x555555590b90[59],
     %L0x555555590b90[60],%L0x555555590b90[61],%L0x555555590b90[62],%L0x555555590b90[63],
     %L0x555555590b98[0],%L0x555555590b98[1],%L0x555555590b98[2],%L0x555555590b98[3],
     %L0x555555590b98[4],%L0x555555590b98[5],%L0x555555590b98[6],%L0x555555590b98[7],
     %L0x555555590b98[8],%L0x555555590b98[9],%L0x555555590b98[10],%L0x555555590b98[11],
     %L0x555555590b98[12],%L0x555555590b98[13],%L0x555555590b98[14],%L0x555555590b98[15],
     %L0x555555590b98[16],%L0x555555590b98[17],%L0x555555590b98[18],%L0x555555590b98[19],
     %L0x555555590b98[20],%L0x555555590b98[21],%L0x555555590b98[22],%L0x555555590b98[23],
     %L0x555555590b98[24],%L0x555555590b98[25],%L0x555555590b98[26],%L0x555555590b98[27],
     %L0x555555590b98[28],%L0x555555590b98[29],%L0x555555590b98[30],%L0x555555590b98[31],
     %L0x555555590b98[32],%L0x555555590b98[33],%L0x555555590b98[34],%L0x555555590b98[35],
     %L0x555555590b98[36],%L0x555555590b98[37],%L0x555555590b98[38],%L0x555555590b98[39],
     %L0x555555590b98[40],%L0x555555590b98[41],%L0x555555590b98[42],%L0x555555590b98[43],
     %L0x555555590b98[44],%L0x555555590b98[45],%L0x555555590b98[46],%L0x555555590b98[47],
     %L0x555555590b98[48],%L0x555555590b98[49],%L0x555555590b98[50],%L0x555555590b98[51],
     %L0x555555590b98[52],%L0x555555590b98[53],%L0x555555590b98[54],%L0x555555590b98[55],
     %L0x555555590b98[56],%L0x555555590b98[57],%L0x555555590b98[58],%L0x555555590b98[59],
     %L0x555555590b98[60],%L0x555555590b98[61],%L0x555555590b98[62],%L0x555555590b98[63]];
(* vmovdqa %ymm0,0x140(%rsp)                       #! EA = L0x7ffffff50ac0; PC = 0x555555582bf6 *)
mov %L0x7ffffff50ac0
    [%ymm0[0],%ymm0[1],%ymm0[2],%ymm0[3],%ymm0[4],%ymm0[5],%ymm0[6],%ymm0[7],
     %ymm0[8],%ymm0[9],%ymm0[10],%ymm0[11],%ymm0[12],%ymm0[13],%ymm0[14],%ymm0[15],
     %ymm0[16],%ymm0[17],%ymm0[18],%ymm0[19],%ymm0[20],%ymm0[21],%ymm0[22],%ymm0[23],
     %ymm0[24],%ymm0[25],%ymm0[26],%ymm0[27],%ymm0[28],%ymm0[29],%ymm0[30],%ymm0[31],
     %ymm0[32],%ymm0[33],%ymm0[34],%ymm0[35],%ymm0[36],%ymm0[37],%ymm0[38],%ymm0[39],
     %ymm0[40],%ymm0[41],%ymm0[42],%ymm0[43],%ymm0[44],%ymm0[45],%ymm0[46],%ymm0[47],
     %ymm0[48],%ymm0[49],%ymm0[50],%ymm0[51],%ymm0[52],%ymm0[53],%ymm0[54],%ymm0[55],
     %ymm0[56],%ymm0[57],%ymm0[58],%ymm0[59],%ymm0[60],%ymm0[61],%ymm0[62],%ymm0[63]];
mov %L0x7ffffff50ac8
    [%ymm0[64],%ymm0[65],%ymm0[66],%ymm0[67],%ymm0[68],%ymm0[69],%ymm0[70],%ymm0[71],
     %ymm0[72],%ymm0[73],%ymm0[74],%ymm0[75],%ymm0[76],%ymm0[77],%ymm0[78],%ymm0[79],
     %ymm0[80],%ymm0[81],%ymm0[82],%ymm0[83],%ymm0[84],%ymm0[85],%ymm0[86],%ymm0[87],
     %ymm0[88],%ymm0[89],%ymm0[90],%ymm0[91],%ymm0[92],%ymm0[93],%ymm0[94],%ymm0[95],
     %ymm0[96],%ymm0[97],%ymm0[98],%ymm0[99],%ymm0[100],%ymm0[101],%ymm0[102],%ymm0[103],
     %ymm0[104],%ymm0[105],%ymm0[106],%ymm0[107],%ymm0[108],%ymm0[109],%ymm0[110],%ymm0[111],
     %ymm0[112],%ymm0[113],%ymm0[114],%ymm0[115],%ymm0[116],%ymm0[117],%ymm0[118],%ymm0[119],
     %ymm0[120],%ymm0[121],%ymm0[122],%ymm0[123],%ymm0[124],%ymm0[125],%ymm0[126],%ymm0[127]];
mov %L0x7ffffff50ad0
    [%ymm0[128],%ymm0[129],%ymm0[130],%ymm0[131],%ymm0[132],%ymm0[133],%ymm0[134],%ymm0[135],
     %ymm0[136],%ymm0[137],%ymm0[138],%ymm0[139],%ymm0[140],%ymm0[141],%ymm0[142],%ymm0[143],
     %ymm0[144],%ymm0[145],%ymm0[146],%ymm0[147],%ymm0[148],%ymm0[149],%ymm0[150],%ymm0[151],
     %ymm0[152],%ymm0[153],%ymm0[154],%ymm0[155],%ymm0[156],%ymm0[157],%ymm0[158],%ymm0[159],
     %ymm0[160],%ymm0[161],%ymm0[162],%ymm0[163],%ymm0[164],%ymm0[165],%ymm0[166],%ymm0[167],
     %ymm0[168],%ymm0[169],%ymm0[170],%ymm0[171],%ymm0[172],%ymm0[173],%ymm0[174],%ymm0[175],
     %ymm0[176],%ymm0[177],%ymm0[178],%ymm0[179],%ymm0[180],%ymm0[181],%ymm0[182],%ymm0[183],
     %ymm0[184],%ymm0[185],%ymm0[186],%ymm0[187],%ymm0[188],%ymm0[189],%ymm0[190],%ymm0[191]];
mov %L0x7ffffff50ad8
    [%ymm0[192],%ymm0[193],%ymm0[194],%ymm0[195],%ymm0[196],%ymm0[197],%ymm0[198],%ymm0[199],
     %ymm0[200],%ymm0[201],%ymm0[202],%ymm0[203],%ymm0[204],%ymm0[205],%ymm0[206],%ymm0[207],
     %ymm0[208],%ymm0[209],%ymm0[210],%ymm0[211],%ymm0[212],%ymm0[213],%ymm0[214],%ymm0[215],
     %ymm0[216],%ymm0[217],%ymm0[218],%ymm0[219],%ymm0[220],%ymm0[221],%ymm0[222],%ymm0[223],
     %ymm0[224],%ymm0[225],%ymm0[226],%ymm0[227],%ymm0[228],%ymm0[229],%ymm0[230],%ymm0[231],
     %ymm0[232],%ymm0[233],%ymm0[234],%ymm0[235],%ymm0[236],%ymm0[237],%ymm0[238],%ymm0[239],
     %ymm0[240],%ymm0[241],%ymm0[242],%ymm0[243],%ymm0[244],%ymm0[245],%ymm0[246],%ymm0[247],
     %ymm0[248],%ymm0[249],%ymm0[250],%ymm0[251],%ymm0[252],%ymm0[253],%ymm0[254],%ymm0[255]];
(* vmovdqa 0xdf99(%rip),%ymm0        # 0x555555590ba0#! EA = L0x555555590ba0; Value = 0x00000000ffff0000; PC = 0x555555582bff *)
mov %ymm0
    [%L0x555555590ba0[0],%L0x555555590ba0[1],%L0x555555590ba0[2],%L0x555555590ba0[3],
     %L0x555555590ba0[4],%L0x555555590ba0[5],%L0x555555590ba0[6],%L0x555555590ba0[7],
     %L0x555555590ba0[8],%L0x555555590ba0[9],%L0x555555590ba0[10],%L0x555555590ba0[11],
     %L0x555555590ba0[12],%L0x555555590ba0[13],%L0x555555590ba0[14],%L0x555555590ba0[15],
     %L0x555555590ba0[16],%L0x555555590ba0[17],%L0x555555590ba0[18],%L0x555555590ba0[19],
     %L0x555555590ba0[20],%L0x555555590ba0[21],%L0x555555590ba0[22],%L0x555555590ba0[23],
     %L0x555555590ba0[24],%L0x555555590ba0[25],%L0x555555590ba0[26],%L0x555555590ba0[27],
     %L0x555555590ba0[28],%L0x555555590ba0[29],%L0x555555590ba0[30],%L0x555555590ba0[31],
     %L0x555555590ba0[32],%L0x555555590ba0[33],%L0x555555590ba0[34],%L0x555555590ba0[35],
     %L0x555555590ba0[36],%L0x555555590ba0[37],%L0x555555590ba0[38],%L0x555555590ba0[39],
     %L0x555555590ba0[40],%L0x555555590ba0[41],%L0x555555590ba0[42],%L0x555555590ba0[43],
     %L0x555555590ba0[44],%L0x555555590ba0[45],%L0x555555590ba0[46],%L0x555555590ba0[47],
     %L0x555555590ba0[48],%L0x555555590ba0[49],%L0x555555590ba0[50],%L0x555555590ba0[51],
     %L0x555555590ba0[52],%L0x555555590ba0[53],%L0x555555590ba0[54],%L0x555555590ba0[55],
     %L0x555555590ba0[56],%L0x555555590ba0[57],%L0x555555590ba0[58],%L0x555555590ba0[59],
     %L0x555555590ba0[60],%L0x555555590ba0[61],%L0x555555590ba0[62],%L0x555555590ba0[63],
     %L0x555555590ba8[0],%L0x555555590ba8[1],%L0x555555590ba8[2],%L0x555555590ba8[3],
     %L0x555555590ba8[4],%L0x555555590ba8[5],%L0x555555590ba8[6],%L0x555555590ba8[7],
     %L0x555555590ba8[8],%L0x555555590ba8[9],%L0x555555590ba8[10],%L0x555555590ba8[11],
     %L0x555555590ba8[12],%L0x555555590ba8[13],%L0x555555590ba8[14],%L0x555555590ba8[15],
     %L0x555555590ba8[16],%L0x555555590ba8[17],%L0x555555590ba8[18],%L0x555555590ba8[19],
     %L0x555555590ba8[20],%L0x555555590ba8[21],%L0x555555590ba8[22],%L0x555555590ba8[23],
     %L0x555555590ba8[24],%L0x555555590ba8[25],%L0x555555590ba8[26],%L0x555555590ba8[27],
     %L0x555555590ba8[28],%L0x555555590ba8[29],%L0x555555590ba8[30],%L0x555555590ba8[31],
     %L0x555555590ba8[32],%L0x555555590ba8[33],%L0x555555590ba8[34],%L0x555555590ba8[35],
     %L0x555555590ba8[36],%L0x555555590ba8[37],%L0x555555590ba8[38],%L0x555555590ba8[39],
     %L0x555555590ba8[40],%L0x555555590ba8[41],%L0x555555590ba8[42],%L0x555555590ba8[43],
     %L0x555555590ba8[44],%L0x555555590ba8[45],%L0x555555590ba8[46],%L0x555555590ba8[47],
     %L0x555555590ba8[48],%L0x555555590ba8[49],%L0x555555590ba8[50],%L0x555555590ba8[51],
     %L0x555555590ba8[52],%L0x555555590ba8[53],%L0x555555590ba8[54],%L0x555555590ba8[55],
     %L0x555555590ba8[56],%L0x555555590ba8[57],%L0x555555590ba8[58],%L0x555555590ba8[59],
     %L0x555555590ba8[60],%L0x555555590ba8[61],%L0x555555590ba8[62],%L0x555555590ba8[63],
     %L0x555555590bb0[0],%L0x555555590bb0[1],%L0x555555590bb0[2],%L0x555555590bb0[3],
     %L0x555555590bb0[4],%L0x555555590bb0[5],%L0x555555590bb0[6],%L0x555555590bb0[7],
     %L0x555555590bb0[8],%L0x555555590bb0[9],%L0x555555590bb0[10],%L0x555555590bb0[11],
     %L0x555555590bb0[12],%L0x555555590bb0[13],%L0x555555590bb0[14],%L0x555555590bb0[15],
     %L0x555555590bb0[16],%L0x555555590bb0[17],%L0x555555590bb0[18],%L0x555555590bb0[19],
     %L0x555555590bb0[20],%L0x555555590bb0[21],%L0x555555590bb0[22],%L0x555555590bb0[23],
     %L0x555555590bb0[24],%L0x555555590bb0[25],%L0x555555590bb0[26],%L0x555555590bb0[27],
     %L0x555555590bb0[28],%L0x555555590bb0[29],%L0x555555590bb0[30],%L0x555555590bb0[31],
     %L0x555555590bb0[32],%L0x555555590bb0[33],%L0x555555590bb0[34],%L0x555555590bb0[35],
     %L0x555555590bb0[36],%L0x555555590bb0[37],%L0x555555590bb0[38],%L0x555555590bb0[39],
     %L0x555555590bb0[40],%L0x555555590bb0[41],%L0x555555590bb0[42],%L0x555555590bb0[43],
     %L0x555555590bb0[44],%L0x555555590bb0[45],%L0x555555590bb0[46],%L0x555555590bb0[47],
     %L0x555555590bb0[48],%L0x555555590bb0[49],%L0x555555590bb0[50],%L0x555555590bb0[51],
     %L0x555555590bb0[52],%L0x555555590bb0[53],%L0x555555590bb0[54],%L0x555555590bb0[55],
     %L0x555555590bb0[56],%L0x555555590bb0[57],%L0x555555590bb0[58],%L0x555555590bb0[59],
     %L0x555555590bb0[60],%L0x555555590bb0[61],%L0x555555590bb0[62],%L0x555555590bb0[63],
     %L0x555555590bb8[0],%L0x555555590bb8[1],%L0x555555590bb8[2],%L0x555555590bb8[3],
     %L0x555555590bb8[4],%L0x555555590bb8[5],%L0x555555590bb8[6],%L0x555555590bb8[7],
     %L0x555555590bb8[8],%L0x555555590bb8[9],%L0x555555590bb8[10],%L0x555555590bb8[11],
     %L0x555555590bb8[12],%L0x555555590bb8[13],%L0x555555590bb8[14],%L0x555555590bb8[15],
     %L0x555555590bb8[16],%L0x555555590bb8[17],%L0x555555590bb8[18],%L0x555555590bb8[19],
     %L0x555555590bb8[20],%L0x555555590bb8[21],%L0x555555590bb8[22],%L0x555555590bb8[23],
     %L0x555555590bb8[24],%L0x555555590bb8[25],%L0x555555590bb8[26],%L0x555555590bb8[27],
     %L0x555555590bb8[28],%L0x555555590bb8[29],%L0x555555590bb8[30],%L0x555555590bb8[31],
     %L0x555555590bb8[32],%L0x555555590bb8[33],%L0x555555590bb8[34],%L0x555555590bb8[35],
     %L0x555555590bb8[36],%L0x555555590bb8[37],%L0x555555590bb8[38],%L0x555555590bb8[39],
     %L0x555555590bb8[40],%L0x555555590bb8[41],%L0x555555590bb8[42],%L0x555555590bb8[43],
     %L0x555555590bb8[44],%L0x555555590bb8[45],%L0x555555590bb8[46],%L0x555555590bb8[47],
     %L0x555555590bb8[48],%L0x555555590bb8[49],%L0x555555590bb8[50],%L0x555555590bb8[51],
     %L0x555555590bb8[52],%L0x555555590bb8[53],%L0x555555590bb8[54],%L0x555555590bb8[55],
     %L0x555555590bb8[56],%L0x555555590bb8[57],%L0x555555590bb8[58],%L0x555555590bb8[59],
     %L0x555555590bb8[60],%L0x555555590bb8[61],%L0x555555590bb8[62],%L0x555555590bb8[63]];
(* vmovdqa %ymm0,0x160(%rsp)                       #! EA = L0x7ffffff50ae0; PC = 0x555555582c07 *)
mov %L0x7ffffff50ae0
    [%ymm0[0],%ymm0[1],%ymm0[2],%ymm0[3],%ymm0[4],%ymm0[5],%ymm0[6],%ymm0[7],
     %ymm0[8],%ymm0[9],%ymm0[10],%ymm0[11],%ymm0[12],%ymm0[13],%ymm0[14],%ymm0[15],
     %ymm0[16],%ymm0[17],%ymm0[18],%ymm0[19],%ymm0[20],%ymm0[21],%ymm0[22],%ymm0[23],
     %ymm0[24],%ymm0[25],%ymm0[26],%ymm0[27],%ymm0[28],%ymm0[29],%ymm0[30],%ymm0[31],
     %ymm0[32],%ymm0[33],%ymm0[34],%ymm0[35],%ymm0[36],%ymm0[37],%ymm0[38],%ymm0[39],
     %ymm0[40],%ymm0[41],%ymm0[42],%ymm0[43],%ymm0[44],%ymm0[45],%ymm0[46],%ymm0[47],
     %ymm0[48],%ymm0[49],%ymm0[50],%ymm0[51],%ymm0[52],%ymm0[53],%ymm0[54],%ymm0[55],
     %ymm0[56],%ymm0[57],%ymm0[58],%ymm0[59],%ymm0[60],%ymm0[61],%ymm0[62],%ymm0[63]];
mov %L0x7ffffff50ae8
    [%ymm0[64],%ymm0[65],%ymm0[66],%ymm0[67],%ymm0[68],%ymm0[69],%ymm0[70],%ymm0[71],
     %ymm0[72],%ymm0[73],%ymm0[74],%ymm0[75],%ymm0[76],%ymm0[77],%ymm0[78],%ymm0[79],
     %ymm0[80],%ymm0[81],%ymm0[82],%ymm0[83],%ymm0[84],%ymm0[85],%ymm0[86],%ymm0[87],
     %ymm0[88],%ymm0[89],%ymm0[90],%ymm0[91],%ymm0[92],%ymm0[93],%ymm0[94],%ymm0[95],
     %ymm0[96],%ymm0[97],%ymm0[98],%ymm0[99],%ymm0[100],%ymm0[101],%ymm0[102],%ymm0[103],
     %ymm0[104],%ymm0[105],%ymm0[106],%ymm0[107],%ymm0[108],%ymm0[109],%ymm0[110],%ymm0[111],
     %ymm0[112],%ymm0[113],%ymm0[114],%ymm0[115],%ymm0[116],%ymm0[117],%ymm0[118],%ymm0[119],
     %ymm0[120],%ymm0[121],%ymm0[122],%ymm0[123],%ymm0[124],%ymm0[125],%ymm0[126],%ymm0[127]];
mov %L0x7ffffff50af0
    [%ymm0[128],%ymm0[129],%ymm0[130],%ymm0[131],%ymm0[132],%ymm0[133],%ymm0[134],%ymm0[135],
     %ymm0[136],%ymm0[137],%ymm0[138],%ymm0[139],%ymm0[140],%ymm0[141],%ymm0[142],%ymm0[143],
     %ymm0[144],%ymm0[145],%ymm0[146],%ymm0[147],%ymm0[148],%ymm0[149],%ymm0[150],%ymm0[151],
     %ymm0[152],%ymm0[153],%ymm0[154],%ymm0[155],%ymm0[156],%ymm0[157],%ymm0[158],%ymm0[159],
     %ymm0[160],%ymm0[161],%ymm0[162],%ymm0[163],%ymm0[164],%ymm0[165],%ymm0[166],%ymm0[167],
     %ymm0[168],%ymm0[169],%ymm0[170],%ymm0[171],%ymm0[172],%ymm0[173],%ymm0[174],%ymm0[175],
     %ymm0[176],%ymm0[177],%ymm0[178],%ymm0[179],%ymm0[180],%ymm0[181],%ymm0[182],%ymm0[183],
     %ymm0[184],%ymm0[185],%ymm0[186],%ymm0[187],%ymm0[188],%ymm0[189],%ymm0[190],%ymm0[191]];
mov %L0x7ffffff50af8
    [%ymm0[192],%ymm0[193],%ymm0[194],%ymm0[195],%ymm0[196],%ymm0[197],%ymm0[198],%ymm0[199],
     %ymm0[200],%ymm0[201],%ymm0[202],%ymm0[203],%ymm0[204],%ymm0[205],%ymm0[206],%ymm0[207],
     %ymm0[208],%ymm0[209],%ymm0[210],%ymm0[211],%ymm0[212],%ymm0[213],%ymm0[214],%ymm0[215],
     %ymm0[216],%ymm0[217],%ymm0[218],%ymm0[219],%ymm0[220],%ymm0[221],%ymm0[222],%ymm0[223],
     %ymm0[224],%ymm0[225],%ymm0[226],%ymm0[227],%ymm0[228],%ymm0[229],%ymm0[230],%ymm0[231],
     %ymm0[232],%ymm0[233],%ymm0[234],%ymm0[235],%ymm0[236],%ymm0[237],%ymm0[238],%ymm0[239],
     %ymm0[240],%ymm0[241],%ymm0[242],%ymm0[243],%ymm0[244],%ymm0[245],%ymm0[246],%ymm0[247],
     %ymm0[248],%ymm0[249],%ymm0[250],%ymm0[251],%ymm0[252],%ymm0[253],%ymm0[254],%ymm0[255]];
(* vmovdqa 0xdfa8(%rip),%ymm0        # 0x555555590bc0#! EA = L0x555555590bc0; Value = 0x0000ffff00000000; PC = 0x555555582c10 *)
mov %ymm0
    [%L0x555555590bc0[0],%L0x555555590bc0[1],%L0x555555590bc0[2],%L0x555555590bc0[3],
     %L0x555555590bc0[4],%L0x555555590bc0[5],%L0x555555590bc0[6],%L0x555555590bc0[7],
     %L0x555555590bc0[8],%L0x555555590bc0[9],%L0x555555590bc0[10],%L0x555555590bc0[11],
     %L0x555555590bc0[12],%L0x555555590bc0[13],%L0x555555590bc0[14],%L0x555555590bc0[15],
     %L0x555555590bc0[16],%L0x555555590bc0[17],%L0x555555590bc0[18],%L0x555555590bc0[19],
     %L0x555555590bc0[20],%L0x555555590bc0[21],%L0x555555590bc0[22],%L0x555555590bc0[23],
     %L0x555555590bc0[24],%L0x555555590bc0[25],%L0x555555590bc0[26],%L0x555555590bc0[27],
     %L0x555555590bc0[28],%L0x555555590bc0[29],%L0x555555590bc0[30],%L0x555555590bc0[31],
     %L0x555555590bc0[32],%L0x555555590bc0[33],%L0x555555590bc0[34],%L0x555555590bc0[35],
     %L0x555555590bc0[36],%L0x555555590bc0[37],%L0x555555590bc0[38],%L0x555555590bc0[39],
     %L0x555555590bc0[40],%L0x555555590bc0[41],%L0x555555590bc0[42],%L0x555555590bc0[43],
     %L0x555555590bc0[44],%L0x555555590bc0[45],%L0x555555590bc0[46],%L0x555555590bc0[47],
     %L0x555555590bc0[48],%L0x555555590bc0[49],%L0x555555590bc0[50],%L0x555555590bc0[51],
     %L0x555555590bc0[52],%L0x555555590bc0[53],%L0x555555590bc0[54],%L0x555555590bc0[55],
     %L0x555555590bc0[56],%L0x555555590bc0[57],%L0x555555590bc0[58],%L0x555555590bc0[59],
     %L0x555555590bc0[60],%L0x555555590bc0[61],%L0x555555590bc0[62],%L0x555555590bc0[63],
     %L0x555555590bc8[0],%L0x555555590bc8[1],%L0x555555590bc8[2],%L0x555555590bc8[3],
     %L0x555555590bc8[4],%L0x555555590bc8[5],%L0x555555590bc8[6],%L0x555555590bc8[7],
     %L0x555555590bc8[8],%L0x555555590bc8[9],%L0x555555590bc8[10],%L0x555555590bc8[11],
     %L0x555555590bc8[12],%L0x555555590bc8[13],%L0x555555590bc8[14],%L0x555555590bc8[15],
     %L0x555555590bc8[16],%L0x555555590bc8[17],%L0x555555590bc8[18],%L0x555555590bc8[19],
     %L0x555555590bc8[20],%L0x555555590bc8[21],%L0x555555590bc8[22],%L0x555555590bc8[23],
     %L0x555555590bc8[24],%L0x555555590bc8[25],%L0x555555590bc8[26],%L0x555555590bc8[27],
     %L0x555555590bc8[28],%L0x555555590bc8[29],%L0x555555590bc8[30],%L0x555555590bc8[31],
     %L0x555555590bc8[32],%L0x555555590bc8[33],%L0x555555590bc8[34],%L0x555555590bc8[35],
     %L0x555555590bc8[36],%L0x555555590bc8[37],%L0x555555590bc8[38],%L0x555555590bc8[39],
     %L0x555555590bc8[40],%L0x555555590bc8[41],%L0x555555590bc8[42],%L0x555555590bc8[43],
     %L0x555555590bc8[44],%L0x555555590bc8[45],%L0x555555590bc8[46],%L0x555555590bc8[47],
     %L0x555555590bc8[48],%L0x555555590bc8[49],%L0x555555590bc8[50],%L0x555555590bc8[51],
     %L0x555555590bc8[52],%L0x555555590bc8[53],%L0x555555590bc8[54],%L0x555555590bc8[55],
     %L0x555555590bc8[56],%L0x555555590bc8[57],%L0x555555590bc8[58],%L0x555555590bc8[59],
     %L0x555555590bc8[60],%L0x555555590bc8[61],%L0x555555590bc8[62],%L0x555555590bc8[63],
     %L0x555555590bd0[0],%L0x555555590bd0[1],%L0x555555590bd0[2],%L0x555555590bd0[3],
     %L0x555555590bd0[4],%L0x555555590bd0[5],%L0x555555590bd0[6],%L0x555555590bd0[7],
     %L0x555555590bd0[8],%L0x555555590bd0[9],%L0x555555590bd0[10],%L0x555555590bd0[11],
     %L0x555555590bd0[12],%L0x555555590bd0[13],%L0x555555590bd0[14],%L0x555555590bd0[15],
     %L0x555555590bd0[16],%L0x555555590bd0[17],%L0x555555590bd0[18],%L0x555555590bd0[19],
     %L0x555555590bd0[20],%L0x555555590bd0[21],%L0x555555590bd0[22],%L0x555555590bd0[23],
     %L0x555555590bd0[24],%L0x555555590bd0[25],%L0x555555590bd0[26],%L0x555555590bd0[27],
     %L0x555555590bd0[28],%L0x555555590bd0[29],%L0x555555590bd0[30],%L0x555555590bd0[31],
     %L0x555555590bd0[32],%L0x555555590bd0[33],%L0x555555590bd0[34],%L0x555555590bd0[35],
     %L0x555555590bd0[36],%L0x555555590bd0[37],%L0x555555590bd0[38],%L0x555555590bd0[39],
     %L0x555555590bd0[40],%L0x555555590bd0[41],%L0x555555590bd0[42],%L0x555555590bd0[43],
     %L0x555555590bd0[44],%L0x555555590bd0[45],%L0x555555590bd0[46],%L0x555555590bd0[47],
     %L0x555555590bd0[48],%L0x555555590bd0[49],%L0x555555590bd0[50],%L0x555555590bd0[51],
     %L0x555555590bd0[52],%L0x555555590bd0[53],%L0x555555590bd0[54],%L0x555555590bd0[55],
     %L0x555555590bd0[56],%L0x555555590bd0[57],%L0x555555590bd0[58],%L0x555555590bd0[59],
     %L0x555555590bd0[60],%L0x555555590bd0[61],%L0x555555590bd0[62],%L0x555555590bd0[63],
     %L0x555555590bd8[0],%L0x555555590bd8[1],%L0x555555590bd8[2],%L0x555555590bd8[3],
     %L0x555555590bd8[4],%L0x555555590bd8[5],%L0x555555590bd8[6],%L0x555555590bd8[7],
     %L0x555555590bd8[8],%L0x555555590bd8[9],%L0x555555590bd8[10],%L0x555555590bd8[11],
     %L0x555555590bd8[12],%L0x555555590bd8[13],%L0x555555590bd8[14],%L0x555555590bd8[15],
     %L0x555555590bd8[16],%L0x555555590bd8[17],%L0x555555590bd8[18],%L0x555555590bd8[19],
     %L0x555555590bd8[20],%L0x555555590bd8[21],%L0x555555590bd8[22],%L0x555555590bd8[23],
     %L0x555555590bd8[24],%L0x555555590bd8[25],%L0x555555590bd8[26],%L0x555555590bd8[27],
     %L0x555555590bd8[28],%L0x555555590bd8[29],%L0x555555590bd8[30],%L0x555555590bd8[31],
     %L0x555555590bd8[32],%L0x555555590bd8[33],%L0x555555590bd8[34],%L0x555555590bd8[35],
     %L0x555555590bd8[36],%L0x555555590bd8[37],%L0x555555590bd8[38],%L0x555555590bd8[39],
     %L0x555555590bd8[40],%L0x555555590bd8[41],%L0x555555590bd8[42],%L0x555555590bd8[43],
     %L0x555555590bd8[44],%L0x555555590bd8[45],%L0x555555590bd8[46],%L0x555555590bd8[47],
     %L0x555555590bd8[48],%L0x555555590bd8[49],%L0x555555590bd8[50],%L0x555555590bd8[51],
     %L0x555555590bd8[52],%L0x555555590bd8[53],%L0x555555590bd8[54],%L0x555555590bd8[55],
     %L0x555555590bd8[56],%L0x555555590bd8[57],%L0x555555590bd8[58],%L0x555555590bd8[59],
     %L0x555555590bd8[60],%L0x555555590bd8[61],%L0x555555590bd8[62],%L0x555555590bd8[63]];
(* vmovdqa %ymm0,0x180(%rsp)                       #! EA = L0x7ffffff50b00; PC = 0x555555582c18 *)
mov %L0x7ffffff50b00
    [%ymm0[0],%ymm0[1],%ymm0[2],%ymm0[3],%ymm0[4],%ymm0[5],%ymm0[6],%ymm0[7],
     %ymm0[8],%ymm0[9],%ymm0[10],%ymm0[11],%ymm0[12],%ymm0[13],%ymm0[14],%ymm0[15],
     %ymm0[16],%ymm0[17],%ymm0[18],%ymm0[19],%ymm0[20],%ymm0[21],%ymm0[22],%ymm0[23],
     %ymm0[24],%ymm0[25],%ymm0[26],%ymm0[27],%ymm0[28],%ymm0[29],%ymm0[30],%ymm0[31],
     %ymm0[32],%ymm0[33],%ymm0[34],%ymm0[35],%ymm0[36],%ymm0[37],%ymm0[38],%ymm0[39],
     %ymm0[40],%ymm0[41],%ymm0[42],%ymm0[43],%ymm0[44],%ymm0[45],%ymm0[46],%ymm0[47],
     %ymm0[48],%ymm0[49],%ymm0[50],%ymm0[51],%ymm0[52],%ymm0[53],%ymm0[54],%ymm0[55],
     %ymm0[56],%ymm0[57],%ymm0[58],%ymm0[59],%ymm0[60],%ymm0[61],%ymm0[62],%ymm0[63]];
mov %L0x7ffffff50b08
    [%ymm0[64],%ymm0[65],%ymm0[66],%ymm0[67],%ymm0[68],%ymm0[69],%ymm0[70],%ymm0[71],
     %ymm0[72],%ymm0[73],%ymm0[74],%ymm0[75],%ymm0[76],%ymm0[77],%ymm0[78],%ymm0[79],
     %ymm0[80],%ymm0[81],%ymm0[82],%ymm0[83],%ymm0[84],%ymm0[85],%ymm0[86],%ymm0[87],
     %ymm0[88],%ymm0[89],%ymm0[90],%ymm0[91],%ymm0[92],%ymm0[93],%ymm0[94],%ymm0[95],
     %ymm0[96],%ymm0[97],%ymm0[98],%ymm0[99],%ymm0[100],%ymm0[101],%ymm0[102],%ymm0[103],
     %ymm0[104],%ymm0[105],%ymm0[106],%ymm0[107],%ymm0[108],%ymm0[109],%ymm0[110],%ymm0[111],
     %ymm0[112],%ymm0[113],%ymm0[114],%ymm0[115],%ymm0[116],%ymm0[117],%ymm0[118],%ymm0[119],
     %ymm0[120],%ymm0[121],%ymm0[122],%ymm0[123],%ymm0[124],%ymm0[125],%ymm0[126],%ymm0[127]];
mov %L0x7ffffff50b10
    [%ymm0[128],%ymm0[129],%ymm0[130],%ymm0[131],%ymm0[132],%ymm0[133],%ymm0[134],%ymm0[135],
     %ymm0[136],%ymm0[137],%ymm0[138],%ymm0[139],%ymm0[140],%ymm0[141],%ymm0[142],%ymm0[143],
     %ymm0[144],%ymm0[145],%ymm0[146],%ymm0[147],%ymm0[148],%ymm0[149],%ymm0[150],%ymm0[151],
     %ymm0[152],%ymm0[153],%ymm0[154],%ymm0[155],%ymm0[156],%ymm0[157],%ymm0[158],%ymm0[159],
     %ymm0[160],%ymm0[161],%ymm0[162],%ymm0[163],%ymm0[164],%ymm0[165],%ymm0[166],%ymm0[167],
     %ymm0[168],%ymm0[169],%ymm0[170],%ymm0[171],%ymm0[172],%ymm0[173],%ymm0[174],%ymm0[175],
     %ymm0[176],%ymm0[177],%ymm0[178],%ymm0[179],%ymm0[180],%ymm0[181],%ymm0[182],%ymm0[183],
     %ymm0[184],%ymm0[185],%ymm0[186],%ymm0[187],%ymm0[188],%ymm0[189],%ymm0[190],%ymm0[191]];
mov %L0x7ffffff50b18
    [%ymm0[192],%ymm0[193],%ymm0[194],%ymm0[195],%ymm0[196],%ymm0[197],%ymm0[198],%ymm0[199],
     %ymm0[200],%ymm0[201],%ymm0[202],%ymm0[203],%ymm0[204],%ymm0[205],%ymm0[206],%ymm0[207],
     %ymm0[208],%ymm0[209],%ymm0[210],%ymm0[211],%ymm0[212],%ymm0[213],%ymm0[214],%ymm0[215],
     %ymm0[216],%ymm0[217],%ymm0[218],%ymm0[219],%ymm0[220],%ymm0[221],%ymm0[222],%ymm0[223],
     %ymm0[224],%ymm0[225],%ymm0[226],%ymm0[227],%ymm0[228],%ymm0[229],%ymm0[230],%ymm0[231],
     %ymm0[232],%ymm0[233],%ymm0[234],%ymm0[235],%ymm0[236],%ymm0[237],%ymm0[238],%ymm0[239],
     %ymm0[240],%ymm0[241],%ymm0[242],%ymm0[243],%ymm0[244],%ymm0[245],%ymm0[246],%ymm0[247],
     %ymm0[248],%ymm0[249],%ymm0[250],%ymm0[251],%ymm0[252],%ymm0[253],%ymm0[254],%ymm0[255]];
(* vmovdqa 0xdfb7(%rip),%ymm0        # 0x555555590be0#! EA = L0x555555590be0; Value = 0x00000000ffffffff; PC = 0x555555582c21 *)
mov %ymm0
    [%L0x555555590be0[0],%L0x555555590be0[1],%L0x555555590be0[2],%L0x555555590be0[3],
     %L0x555555590be0[4],%L0x555555590be0[5],%L0x555555590be0[6],%L0x555555590be0[7],
     %L0x555555590be0[8],%L0x555555590be0[9],%L0x555555590be0[10],%L0x555555590be0[11],
     %L0x555555590be0[12],%L0x555555590be0[13],%L0x555555590be0[14],%L0x555555590be0[15],
     %L0x555555590be0[16],%L0x555555590be0[17],%L0x555555590be0[18],%L0x555555590be0[19],
     %L0x555555590be0[20],%L0x555555590be0[21],%L0x555555590be0[22],%L0x555555590be0[23],
     %L0x555555590be0[24],%L0x555555590be0[25],%L0x555555590be0[26],%L0x555555590be0[27],
     %L0x555555590be0[28],%L0x555555590be0[29],%L0x555555590be0[30],%L0x555555590be0[31],
     %L0x555555590be0[32],%L0x555555590be0[33],%L0x555555590be0[34],%L0x555555590be0[35],
     %L0x555555590be0[36],%L0x555555590be0[37],%L0x555555590be0[38],%L0x555555590be0[39],
     %L0x555555590be0[40],%L0x555555590be0[41],%L0x555555590be0[42],%L0x555555590be0[43],
     %L0x555555590be0[44],%L0x555555590be0[45],%L0x555555590be0[46],%L0x555555590be0[47],
     %L0x555555590be0[48],%L0x555555590be0[49],%L0x555555590be0[50],%L0x555555590be0[51],
     %L0x555555590be0[52],%L0x555555590be0[53],%L0x555555590be0[54],%L0x555555590be0[55],
     %L0x555555590be0[56],%L0x555555590be0[57],%L0x555555590be0[58],%L0x555555590be0[59],
     %L0x555555590be0[60],%L0x555555590be0[61],%L0x555555590be0[62],%L0x555555590be0[63],
     %L0x555555590be8[0],%L0x555555590be8[1],%L0x555555590be8[2],%L0x555555590be8[3],
     %L0x555555590be8[4],%L0x555555590be8[5],%L0x555555590be8[6],%L0x555555590be8[7],
     %L0x555555590be8[8],%L0x555555590be8[9],%L0x555555590be8[10],%L0x555555590be8[11],
     %L0x555555590be8[12],%L0x555555590be8[13],%L0x555555590be8[14],%L0x555555590be8[15],
     %L0x555555590be8[16],%L0x555555590be8[17],%L0x555555590be8[18],%L0x555555590be8[19],
     %L0x555555590be8[20],%L0x555555590be8[21],%L0x555555590be8[22],%L0x555555590be8[23],
     %L0x555555590be8[24],%L0x555555590be8[25],%L0x555555590be8[26],%L0x555555590be8[27],
     %L0x555555590be8[28],%L0x555555590be8[29],%L0x555555590be8[30],%L0x555555590be8[31],
     %L0x555555590be8[32],%L0x555555590be8[33],%L0x555555590be8[34],%L0x555555590be8[35],
     %L0x555555590be8[36],%L0x555555590be8[37],%L0x555555590be8[38],%L0x555555590be8[39],
     %L0x555555590be8[40],%L0x555555590be8[41],%L0x555555590be8[42],%L0x555555590be8[43],
     %L0x555555590be8[44],%L0x555555590be8[45],%L0x555555590be8[46],%L0x555555590be8[47],
     %L0x555555590be8[48],%L0x555555590be8[49],%L0x555555590be8[50],%L0x555555590be8[51],
     %L0x555555590be8[52],%L0x555555590be8[53],%L0x555555590be8[54],%L0x555555590be8[55],
     %L0x555555590be8[56],%L0x555555590be8[57],%L0x555555590be8[58],%L0x555555590be8[59],
     %L0x555555590be8[60],%L0x555555590be8[61],%L0x555555590be8[62],%L0x555555590be8[63],
     %L0x555555590bf0[0],%L0x555555590bf0[1],%L0x555555590bf0[2],%L0x555555590bf0[3],
     %L0x555555590bf0[4],%L0x555555590bf0[5],%L0x555555590bf0[6],%L0x555555590bf0[7],
     %L0x555555590bf0[8],%L0x555555590bf0[9],%L0x555555590bf0[10],%L0x555555590bf0[11],
     %L0x555555590bf0[12],%L0x555555590bf0[13],%L0x555555590bf0[14],%L0x555555590bf0[15],
     %L0x555555590bf0[16],%L0x555555590bf0[17],%L0x555555590bf0[18],%L0x555555590bf0[19],
     %L0x555555590bf0[20],%L0x555555590bf0[21],%L0x555555590bf0[22],%L0x555555590bf0[23],
     %L0x555555590bf0[24],%L0x555555590bf0[25],%L0x555555590bf0[26],%L0x555555590bf0[27],
     %L0x555555590bf0[28],%L0x555555590bf0[29],%L0x555555590bf0[30],%L0x555555590bf0[31],
     %L0x555555590bf0[32],%L0x555555590bf0[33],%L0x555555590bf0[34],%L0x555555590bf0[35],
     %L0x555555590bf0[36],%L0x555555590bf0[37],%L0x555555590bf0[38],%L0x555555590bf0[39],
     %L0x555555590bf0[40],%L0x555555590bf0[41],%L0x555555590bf0[42],%L0x555555590bf0[43],
     %L0x555555590bf0[44],%L0x555555590bf0[45],%L0x555555590bf0[46],%L0x555555590bf0[47],
     %L0x555555590bf0[48],%L0x555555590bf0[49],%L0x555555590bf0[50],%L0x555555590bf0[51],
     %L0x555555590bf0[52],%L0x555555590bf0[53],%L0x555555590bf0[54],%L0x555555590bf0[55],
     %L0x555555590bf0[56],%L0x555555590bf0[57],%L0x555555590bf0[58],%L0x555555590bf0[59],
     %L0x555555590bf0[60],%L0x555555590bf0[61],%L0x555555590bf0[62],%L0x555555590bf0[63],
     %L0x555555590bf8[0],%L0x555555590bf8[1],%L0x555555590bf8[2],%L0x555555590bf8[3],
     %L0x555555590bf8[4],%L0x555555590bf8[5],%L0x555555590bf8[6],%L0x555555590bf8[7],
     %L0x555555590bf8[8],%L0x555555590bf8[9],%L0x555555590bf8[10],%L0x555555590bf8[11],
     %L0x555555590bf8[12],%L0x555555590bf8[13],%L0x555555590bf8[14],%L0x555555590bf8[15],
     %L0x555555590bf8[16],%L0x555555590bf8[17],%L0x555555590bf8[18],%L0x555555590bf8[19],
     %L0x555555590bf8[20],%L0x555555590bf8[21],%L0x555555590bf8[22],%L0x555555590bf8[23],
     %L0x555555590bf8[24],%L0x555555590bf8[25],%L0x555555590bf8[26],%L0x555555590bf8[27],
     %L0x555555590bf8[28],%L0x555555590bf8[29],%L0x555555590bf8[30],%L0x555555590bf8[31],
     %L0x555555590bf8[32],%L0x555555590bf8[33],%L0x555555590bf8[34],%L0x555555590bf8[35],
     %L0x555555590bf8[36],%L0x555555590bf8[37],%L0x555555590bf8[38],%L0x555555590bf8[39],
     %L0x555555590bf8[40],%L0x555555590bf8[41],%L0x555555590bf8[42],%L0x555555590bf8[43],
     %L0x555555590bf8[44],%L0x555555590bf8[45],%L0x555555590bf8[46],%L0x555555590bf8[47],
     %L0x555555590bf8[48],%L0x555555590bf8[49],%L0x555555590bf8[50],%L0x555555590bf8[51],
     %L0x555555590bf8[52],%L0x555555590bf8[53],%L0x555555590bf8[54],%L0x555555590bf8[55],
     %L0x555555590bf8[56],%L0x555555590bf8[57],%L0x555555590bf8[58],%L0x555555590bf8[59],
     %L0x555555590bf8[60],%L0x555555590bf8[61],%L0x555555590bf8[62],%L0x555555590bf8[63]];
(* vmovdqa %ymm0,0x1a0(%rsp)                       #! EA = L0x7ffffff50b20; PC = 0x555555582c29 *)
mov %L0x7ffffff50b20
    [%ymm0[0],%ymm0[1],%ymm0[2],%ymm0[3],%ymm0[4],%ymm0[5],%ymm0[6],%ymm0[7],
     %ymm0[8],%ymm0[9],%ymm0[10],%ymm0[11],%ymm0[12],%ymm0[13],%ymm0[14],%ymm0[15],
     %ymm0[16],%ymm0[17],%ymm0[18],%ymm0[19],%ymm0[20],%ymm0[21],%ymm0[22],%ymm0[23],
     %ymm0[24],%ymm0[25],%ymm0[26],%ymm0[27],%ymm0[28],%ymm0[29],%ymm0[30],%ymm0[31],
     %ymm0[32],%ymm0[33],%ymm0[34],%ymm0[35],%ymm0[36],%ymm0[37],%ymm0[38],%ymm0[39],
     %ymm0[40],%ymm0[41],%ymm0[42],%ymm0[43],%ymm0[44],%ymm0[45],%ymm0[46],%ymm0[47],
     %ymm0[48],%ymm0[49],%ymm0[50],%ymm0[51],%ymm0[52],%ymm0[53],%ymm0[54],%ymm0[55],
     %ymm0[56],%ymm0[57],%ymm0[58],%ymm0[59],%ymm0[60],%ymm0[61],%ymm0[62],%ymm0[63]];
mov %L0x7ffffff50b28
    [%ymm0[64],%ymm0[65],%ymm0[66],%ymm0[67],%ymm0[68],%ymm0[69],%ymm0[70],%ymm0[71],
     %ymm0[72],%ymm0[73],%ymm0[74],%ymm0[75],%ymm0[76],%ymm0[77],%ymm0[78],%ymm0[79],
     %ymm0[80],%ymm0[81],%ymm0[82],%ymm0[83],%ymm0[84],%ymm0[85],%ymm0[86],%ymm0[87],
     %ymm0[88],%ymm0[89],%ymm0[90],%ymm0[91],%ymm0[92],%ymm0[93],%ymm0[94],%ymm0[95],
     %ymm0[96],%ymm0[97],%ymm0[98],%ymm0[99],%ymm0[100],%ymm0[101],%ymm0[102],%ymm0[103],
     %ymm0[104],%ymm0[105],%ymm0[106],%ymm0[107],%ymm0[108],%ymm0[109],%ymm0[110],%ymm0[111],
     %ymm0[112],%ymm0[113],%ymm0[114],%ymm0[115],%ymm0[116],%ymm0[117],%ymm0[118],%ymm0[119],
     %ymm0[120],%ymm0[121],%ymm0[122],%ymm0[123],%ymm0[124],%ymm0[125],%ymm0[126],%ymm0[127]];
mov %L0x7ffffff50b30
    [%ymm0[128],%ymm0[129],%ymm0[130],%ymm0[131],%ymm0[132],%ymm0[133],%ymm0[134],%ymm0[135],
     %ymm0[136],%ymm0[137],%ymm0[138],%ymm0[139],%ymm0[140],%ymm0[141],%ymm0[142],%ymm0[143],
     %ymm0[144],%ymm0[145],%ymm0[146],%ymm0[147],%ymm0[148],%ymm0[149],%ymm0[150],%ymm0[151],
     %ymm0[152],%ymm0[153],%ymm0[154],%ymm0[155],%ymm0[156],%ymm0[157],%ymm0[158],%ymm0[159],
     %ymm0[160],%ymm0[161],%ymm0[162],%ymm0[163],%ymm0[164],%ymm0[165],%ymm0[166],%ymm0[167],
     %ymm0[168],%ymm0[169],%ymm0[170],%ymm0[171],%ymm0[172],%ymm0[173],%ymm0[174],%ymm0[175],
     %ymm0[176],%ymm0[177],%ymm0[178],%ymm0[179],%ymm0[180],%ymm0[181],%ymm0[182],%ymm0[183],
     %ymm0[184],%ymm0[185],%ymm0[186],%ymm0[187],%ymm0[188],%ymm0[189],%ymm0[190],%ymm0[191]];
mov %L0x7ffffff50b38
    [%ymm0[192],%ymm0[193],%ymm0[194],%ymm0[195],%ymm0[196],%ymm0[197],%ymm0[198],%ymm0[199],
     %ymm0[200],%ymm0[201],%ymm0[202],%ymm0[203],%ymm0[204],%ymm0[205],%ymm0[206],%ymm0[207],
     %ymm0[208],%ymm0[209],%ymm0[210],%ymm0[211],%ymm0[212],%ymm0[213],%ymm0[214],%ymm0[215],
     %ymm0[216],%ymm0[217],%ymm0[218],%ymm0[219],%ymm0[220],%ymm0[221],%ymm0[222],%ymm0[223],
     %ymm0[224],%ymm0[225],%ymm0[226],%ymm0[227],%ymm0[228],%ymm0[229],%ymm0[230],%ymm0[231],
     %ymm0[232],%ymm0[233],%ymm0[234],%ymm0[235],%ymm0[236],%ymm0[237],%ymm0[238],%ymm0[239],
     %ymm0[240],%ymm0[241],%ymm0[242],%ymm0[243],%ymm0[244],%ymm0[245],%ymm0[246],%ymm0[247],
     %ymm0[248],%ymm0[249],%ymm0[250],%ymm0[251],%ymm0[252],%ymm0[253],%ymm0[254],%ymm0[255]];
(* vmovdqa 0xdfc6(%rip),%ymm0        # 0x555555590c00#! EA = L0x555555590c00; Value = 0x0000000000000000; PC = 0x555555582c32 *)
mov %ymm0
    [%L0x555555590c00[0],%L0x555555590c00[1],%L0x555555590c00[2],%L0x555555590c00[3],
     %L0x555555590c00[4],%L0x555555590c00[5],%L0x555555590c00[6],%L0x555555590c00[7],
     %L0x555555590c00[8],%L0x555555590c00[9],%L0x555555590c00[10],%L0x555555590c00[11],
     %L0x555555590c00[12],%L0x555555590c00[13],%L0x555555590c00[14],%L0x555555590c00[15],
     %L0x555555590c00[16],%L0x555555590c00[17],%L0x555555590c00[18],%L0x555555590c00[19],
     %L0x555555590c00[20],%L0x555555590c00[21],%L0x555555590c00[22],%L0x555555590c00[23],
     %L0x555555590c00[24],%L0x555555590c00[25],%L0x555555590c00[26],%L0x555555590c00[27],
     %L0x555555590c00[28],%L0x555555590c00[29],%L0x555555590c00[30],%L0x555555590c00[31],
     %L0x555555590c00[32],%L0x555555590c00[33],%L0x555555590c00[34],%L0x555555590c00[35],
     %L0x555555590c00[36],%L0x555555590c00[37],%L0x555555590c00[38],%L0x555555590c00[39],
     %L0x555555590c00[40],%L0x555555590c00[41],%L0x555555590c00[42],%L0x555555590c00[43],
     %L0x555555590c00[44],%L0x555555590c00[45],%L0x555555590c00[46],%L0x555555590c00[47],
     %L0x555555590c00[48],%L0x555555590c00[49],%L0x555555590c00[50],%L0x555555590c00[51],
     %L0x555555590c00[52],%L0x555555590c00[53],%L0x555555590c00[54],%L0x555555590c00[55],
     %L0x555555590c00[56],%L0x555555590c00[57],%L0x555555590c00[58],%L0x555555590c00[59],
     %L0x555555590c00[60],%L0x555555590c00[61],%L0x555555590c00[62],%L0x555555590c00[63],
     %L0x555555590c08[0],%L0x555555590c08[1],%L0x555555590c08[2],%L0x555555590c08[3],
     %L0x555555590c08[4],%L0x555555590c08[5],%L0x555555590c08[6],%L0x555555590c08[7],
     %L0x555555590c08[8],%L0x555555590c08[9],%L0x555555590c08[10],%L0x555555590c08[11],
     %L0x555555590c08[12],%L0x555555590c08[13],%L0x555555590c08[14],%L0x555555590c08[15],
     %L0x555555590c08[16],%L0x555555590c08[17],%L0x555555590c08[18],%L0x555555590c08[19],
     %L0x555555590c08[20],%L0x555555590c08[21],%L0x555555590c08[22],%L0x555555590c08[23],
     %L0x555555590c08[24],%L0x555555590c08[25],%L0x555555590c08[26],%L0x555555590c08[27],
     %L0x555555590c08[28],%L0x555555590c08[29],%L0x555555590c08[30],%L0x555555590c08[31],
     %L0x555555590c08[32],%L0x555555590c08[33],%L0x555555590c08[34],%L0x555555590c08[35],
     %L0x555555590c08[36],%L0x555555590c08[37],%L0x555555590c08[38],%L0x555555590c08[39],
     %L0x555555590c08[40],%L0x555555590c08[41],%L0x555555590c08[42],%L0x555555590c08[43],
     %L0x555555590c08[44],%L0x555555590c08[45],%L0x555555590c08[46],%L0x555555590c08[47],
     %L0x555555590c08[48],%L0x555555590c08[49],%L0x555555590c08[50],%L0x555555590c08[51],
     %L0x555555590c08[52],%L0x555555590c08[53],%L0x555555590c08[54],%L0x555555590c08[55],
     %L0x555555590c08[56],%L0x555555590c08[57],%L0x555555590c08[58],%L0x555555590c08[59],
     %L0x555555590c08[60],%L0x555555590c08[61],%L0x555555590c08[62],%L0x555555590c08[63],
     %L0x555555590c10[0],%L0x555555590c10[1],%L0x555555590c10[2],%L0x555555590c10[3],
     %L0x555555590c10[4],%L0x555555590c10[5],%L0x555555590c10[6],%L0x555555590c10[7],
     %L0x555555590c10[8],%L0x555555590c10[9],%L0x555555590c10[10],%L0x555555590c10[11],
     %L0x555555590c10[12],%L0x555555590c10[13],%L0x555555590c10[14],%L0x555555590c10[15],
     %L0x555555590c10[16],%L0x555555590c10[17],%L0x555555590c10[18],%L0x555555590c10[19],
     %L0x555555590c10[20],%L0x555555590c10[21],%L0x555555590c10[22],%L0x555555590c10[23],
     %L0x555555590c10[24],%L0x555555590c10[25],%L0x555555590c10[26],%L0x555555590c10[27],
     %L0x555555590c10[28],%L0x555555590c10[29],%L0x555555590c10[30],%L0x555555590c10[31],
     %L0x555555590c10[32],%L0x555555590c10[33],%L0x555555590c10[34],%L0x555555590c10[35],
     %L0x555555590c10[36],%L0x555555590c10[37],%L0x555555590c10[38],%L0x555555590c10[39],
     %L0x555555590c10[40],%L0x555555590c10[41],%L0x555555590c10[42],%L0x555555590c10[43],
     %L0x555555590c10[44],%L0x555555590c10[45],%L0x555555590c10[46],%L0x555555590c10[47],
     %L0x555555590c10[48],%L0x555555590c10[49],%L0x555555590c10[50],%L0x555555590c10[51],
     %L0x555555590c10[52],%L0x555555590c10[53],%L0x555555590c10[54],%L0x555555590c10[55],
     %L0x555555590c10[56],%L0x555555590c10[57],%L0x555555590c10[58],%L0x555555590c10[59],
     %L0x555555590c10[60],%L0x555555590c10[61],%L0x555555590c10[62],%L0x555555590c10[63],
     %L0x555555590c18[0],%L0x555555590c18[1],%L0x555555590c18[2],%L0x555555590c18[3],
     %L0x555555590c18[4],%L0x555555590c18[5],%L0x555555590c18[6],%L0x555555590c18[7],
     %L0x555555590c18[8],%L0x555555590c18[9],%L0x555555590c18[10],%L0x555555590c18[11],
     %L0x555555590c18[12],%L0x555555590c18[13],%L0x555555590c18[14],%L0x555555590c18[15],
     %L0x555555590c18[16],%L0x555555590c18[17],%L0x555555590c18[18],%L0x555555590c18[19],
     %L0x555555590c18[20],%L0x555555590c18[21],%L0x555555590c18[22],%L0x555555590c18[23],
     %L0x555555590c18[24],%L0x555555590c18[25],%L0x555555590c18[26],%L0x555555590c18[27],
     %L0x555555590c18[28],%L0x555555590c18[29],%L0x555555590c18[30],%L0x555555590c18[31],
     %L0x555555590c18[32],%L0x555555590c18[33],%L0x555555590c18[34],%L0x555555590c18[35],
     %L0x555555590c18[36],%L0x555555590c18[37],%L0x555555590c18[38],%L0x555555590c18[39],
     %L0x555555590c18[40],%L0x555555590c18[41],%L0x555555590c18[42],%L0x555555590c18[43],
     %L0x555555590c18[44],%L0x555555590c18[45],%L0x555555590c18[46],%L0x555555590c18[47],
     %L0x555555590c18[48],%L0x555555590c18[49],%L0x555555590c18[50],%L0x555555590c18[51],
     %L0x555555590c18[52],%L0x555555590c18[53],%L0x555555590c18[54],%L0x555555590c18[55],
     %L0x555555590c18[56],%L0x555555590c18[57],%L0x555555590c18[58],%L0x555555590c18[59],
     %L0x555555590c18[60],%L0x555555590c18[61],%L0x555555590c18[62],%L0x555555590c18[63]];
(* vmovdqa %ymm0,0x1c0(%rsp)                       #! EA = L0x7ffffff50b40; PC = 0x555555582c3a *)
mov %L0x7ffffff50b40
    [%ymm0[0],%ymm0[1],%ymm0[2],%ymm0[3],%ymm0[4],%ymm0[5],%ymm0[6],%ymm0[7],
     %ymm0[8],%ymm0[9],%ymm0[10],%ymm0[11],%ymm0[12],%ymm0[13],%ymm0[14],%ymm0[15],
     %ymm0[16],%ymm0[17],%ymm0[18],%ymm0[19],%ymm0[20],%ymm0[21],%ymm0[22],%ymm0[23],
     %ymm0[24],%ymm0[25],%ymm0[26],%ymm0[27],%ymm0[28],%ymm0[29],%ymm0[30],%ymm0[31],
     %ymm0[32],%ymm0[33],%ymm0[34],%ymm0[35],%ymm0[36],%ymm0[37],%ymm0[38],%ymm0[39],
     %ymm0[40],%ymm0[41],%ymm0[42],%ymm0[43],%ymm0[44],%ymm0[45],%ymm0[46],%ymm0[47],
     %ymm0[48],%ymm0[49],%ymm0[50],%ymm0[51],%ymm0[52],%ymm0[53],%ymm0[54],%ymm0[55],
     %ymm0[56],%ymm0[57],%ymm0[58],%ymm0[59],%ymm0[60],%ymm0[61],%ymm0[62],%ymm0[63]];
mov %L0x7ffffff50b48
    [%ymm0[64],%ymm0[65],%ymm0[66],%ymm0[67],%ymm0[68],%ymm0[69],%ymm0[70],%ymm0[71],
     %ymm0[72],%ymm0[73],%ymm0[74],%ymm0[75],%ymm0[76],%ymm0[77],%ymm0[78],%ymm0[79],
     %ymm0[80],%ymm0[81],%ymm0[82],%ymm0[83],%ymm0[84],%ymm0[85],%ymm0[86],%ymm0[87],
     %ymm0[88],%ymm0[89],%ymm0[90],%ymm0[91],%ymm0[92],%ymm0[93],%ymm0[94],%ymm0[95],
     %ymm0[96],%ymm0[97],%ymm0[98],%ymm0[99],%ymm0[100],%ymm0[101],%ymm0[102],%ymm0[103],
     %ymm0[104],%ymm0[105],%ymm0[106],%ymm0[107],%ymm0[108],%ymm0[109],%ymm0[110],%ymm0[111],
     %ymm0[112],%ymm0[113],%ymm0[114],%ymm0[115],%ymm0[116],%ymm0[117],%ymm0[118],%ymm0[119],
     %ymm0[120],%ymm0[121],%ymm0[122],%ymm0[123],%ymm0[124],%ymm0[125],%ymm0[126],%ymm0[127]];
mov %L0x7ffffff50b50
    [%ymm0[128],%ymm0[129],%ymm0[130],%ymm0[131],%ymm0[132],%ymm0[133],%ymm0[134],%ymm0[135],
     %ymm0[136],%ymm0[137],%ymm0[138],%ymm0[139],%ymm0[140],%ymm0[141],%ymm0[142],%ymm0[143],
     %ymm0[144],%ymm0[145],%ymm0[146],%ymm0[147],%ymm0[148],%ymm0[149],%ymm0[150],%ymm0[151],
     %ymm0[152],%ymm0[153],%ymm0[154],%ymm0[155],%ymm0[156],%ymm0[157],%ymm0[158],%ymm0[159],
     %ymm0[160],%ymm0[161],%ymm0[162],%ymm0[163],%ymm0[164],%ymm0[165],%ymm0[166],%ymm0[167],
     %ymm0[168],%ymm0[169],%ymm0[170],%ymm0[171],%ymm0[172],%ymm0[173],%ymm0[174],%ymm0[175],
     %ymm0[176],%ymm0[177],%ymm0[178],%ymm0[179],%ymm0[180],%ymm0[181],%ymm0[182],%ymm0[183],
     %ymm0[184],%ymm0[185],%ymm0[186],%ymm0[187],%ymm0[188],%ymm0[189],%ymm0[190],%ymm0[191]];
mov %L0x7ffffff50b58
    [%ymm0[192],%ymm0[193],%ymm0[194],%ymm0[195],%ymm0[196],%ymm0[197],%ymm0[198],%ymm0[199],
     %ymm0[200],%ymm0[201],%ymm0[202],%ymm0[203],%ymm0[204],%ymm0[205],%ymm0[206],%ymm0[207],
     %ymm0[208],%ymm0[209],%ymm0[210],%ymm0[211],%ymm0[212],%ymm0[213],%ymm0[214],%ymm0[215],
     %ymm0[216],%ymm0[217],%ymm0[218],%ymm0[219],%ymm0[220],%ymm0[221],%ymm0[222],%ymm0[223],
     %ymm0[224],%ymm0[225],%ymm0[226],%ymm0[227],%ymm0[228],%ymm0[229],%ymm0[230],%ymm0[231],
     %ymm0[232],%ymm0[233],%ymm0[234],%ymm0[235],%ymm0[236],%ymm0[237],%ymm0[238],%ymm0[239],
     %ymm0[240],%ymm0[241],%ymm0[242],%ymm0[243],%ymm0[244],%ymm0[245],%ymm0[246],%ymm0[247],
     %ymm0[248],%ymm0[249],%ymm0[250],%ymm0[251],%ymm0[252],%ymm0[253],%ymm0[254],%ymm0[255]];
(* vmovdqa 0xdfd5(%rip),%ymm0        # 0x555555590c20#! EA = L0x555555590c20; Value = 0xffffffff00000000; PC = 0x555555582c43 *)
mov %ymm0
    [%L0x555555590c20[0],%L0x555555590c20[1],%L0x555555590c20[2],%L0x555555590c20[3],
     %L0x555555590c20[4],%L0x555555590c20[5],%L0x555555590c20[6],%L0x555555590c20[7],
     %L0x555555590c20[8],%L0x555555590c20[9],%L0x555555590c20[10],%L0x555555590c20[11],
     %L0x555555590c20[12],%L0x555555590c20[13],%L0x555555590c20[14],%L0x555555590c20[15],
     %L0x555555590c20[16],%L0x555555590c20[17],%L0x555555590c20[18],%L0x555555590c20[19],
     %L0x555555590c20[20],%L0x555555590c20[21],%L0x555555590c20[22],%L0x555555590c20[23],
     %L0x555555590c20[24],%L0x555555590c20[25],%L0x555555590c20[26],%L0x555555590c20[27],
     %L0x555555590c20[28],%L0x555555590c20[29],%L0x555555590c20[30],%L0x555555590c20[31],
     %L0x555555590c20[32],%L0x555555590c20[33],%L0x555555590c20[34],%L0x555555590c20[35],
     %L0x555555590c20[36],%L0x555555590c20[37],%L0x555555590c20[38],%L0x555555590c20[39],
     %L0x555555590c20[40],%L0x555555590c20[41],%L0x555555590c20[42],%L0x555555590c20[43],
     %L0x555555590c20[44],%L0x555555590c20[45],%L0x555555590c20[46],%L0x555555590c20[47],
     %L0x555555590c20[48],%L0x555555590c20[49],%L0x555555590c20[50],%L0x555555590c20[51],
     %L0x555555590c20[52],%L0x555555590c20[53],%L0x555555590c20[54],%L0x555555590c20[55],
     %L0x555555590c20[56],%L0x555555590c20[57],%L0x555555590c20[58],%L0x555555590c20[59],
     %L0x555555590c20[60],%L0x555555590c20[61],%L0x555555590c20[62],%L0x555555590c20[63],
     %L0x555555590c28[0],%L0x555555590c28[1],%L0x555555590c28[2],%L0x555555590c28[3],
     %L0x555555590c28[4],%L0x555555590c28[5],%L0x555555590c28[6],%L0x555555590c28[7],
     %L0x555555590c28[8],%L0x555555590c28[9],%L0x555555590c28[10],%L0x555555590c28[11],
     %L0x555555590c28[12],%L0x555555590c28[13],%L0x555555590c28[14],%L0x555555590c28[15],
     %L0x555555590c28[16],%L0x555555590c28[17],%L0x555555590c28[18],%L0x555555590c28[19],
     %L0x555555590c28[20],%L0x555555590c28[21],%L0x555555590c28[22],%L0x555555590c28[23],
     %L0x555555590c28[24],%L0x555555590c28[25],%L0x555555590c28[26],%L0x555555590c28[27],
     %L0x555555590c28[28],%L0x555555590c28[29],%L0x555555590c28[30],%L0x555555590c28[31],
     %L0x555555590c28[32],%L0x555555590c28[33],%L0x555555590c28[34],%L0x555555590c28[35],
     %L0x555555590c28[36],%L0x555555590c28[37],%L0x555555590c28[38],%L0x555555590c28[39],
     %L0x555555590c28[40],%L0x555555590c28[41],%L0x555555590c28[42],%L0x555555590c28[43],
     %L0x555555590c28[44],%L0x555555590c28[45],%L0x555555590c28[46],%L0x555555590c28[47],
     %L0x555555590c28[48],%L0x555555590c28[49],%L0x555555590c28[50],%L0x555555590c28[51],
     %L0x555555590c28[52],%L0x555555590c28[53],%L0x555555590c28[54],%L0x555555590c28[55],
     %L0x555555590c28[56],%L0x555555590c28[57],%L0x555555590c28[58],%L0x555555590c28[59],
     %L0x555555590c28[60],%L0x555555590c28[61],%L0x555555590c28[62],%L0x555555590c28[63],
     %L0x555555590c30[0],%L0x555555590c30[1],%L0x555555590c30[2],%L0x555555590c30[3],
     %L0x555555590c30[4],%L0x555555590c30[5],%L0x555555590c30[6],%L0x555555590c30[7],
     %L0x555555590c30[8],%L0x555555590c30[9],%L0x555555590c30[10],%L0x555555590c30[11],
     %L0x555555590c30[12],%L0x555555590c30[13],%L0x555555590c30[14],%L0x555555590c30[15],
     %L0x555555590c30[16],%L0x555555590c30[17],%L0x555555590c30[18],%L0x555555590c30[19],
     %L0x555555590c30[20],%L0x555555590c30[21],%L0x555555590c30[22],%L0x555555590c30[23],
     %L0x555555590c30[24],%L0x555555590c30[25],%L0x555555590c30[26],%L0x555555590c30[27],
     %L0x555555590c30[28],%L0x555555590c30[29],%L0x555555590c30[30],%L0x555555590c30[31],
     %L0x555555590c30[32],%L0x555555590c30[33],%L0x555555590c30[34],%L0x555555590c30[35],
     %L0x555555590c30[36],%L0x555555590c30[37],%L0x555555590c30[38],%L0x555555590c30[39],
     %L0x555555590c30[40],%L0x555555590c30[41],%L0x555555590c30[42],%L0x555555590c30[43],
     %L0x555555590c30[44],%L0x555555590c30[45],%L0x555555590c30[46],%L0x555555590c30[47],
     %L0x555555590c30[48],%L0x555555590c30[49],%L0x555555590c30[50],%L0x555555590c30[51],
     %L0x555555590c30[52],%L0x555555590c30[53],%L0x555555590c30[54],%L0x555555590c30[55],
     %L0x555555590c30[56],%L0x555555590c30[57],%L0x555555590c30[58],%L0x555555590c30[59],
     %L0x555555590c30[60],%L0x555555590c30[61],%L0x555555590c30[62],%L0x555555590c30[63],
     %L0x555555590c38[0],%L0x555555590c38[1],%L0x555555590c38[2],%L0x555555590c38[3],
     %L0x555555590c38[4],%L0x555555590c38[5],%L0x555555590c38[6],%L0x555555590c38[7],
     %L0x555555590c38[8],%L0x555555590c38[9],%L0x555555590c38[10],%L0x555555590c38[11],
     %L0x555555590c38[12],%L0x555555590c38[13],%L0x555555590c38[14],%L0x555555590c38[15],
     %L0x555555590c38[16],%L0x555555590c38[17],%L0x555555590c38[18],%L0x555555590c38[19],
     %L0x555555590c38[20],%L0x555555590c38[21],%L0x555555590c38[22],%L0x555555590c38[23],
     %L0x555555590c38[24],%L0x555555590c38[25],%L0x555555590c38[26],%L0x555555590c38[27],
     %L0x555555590c38[28],%L0x555555590c38[29],%L0x555555590c38[30],%L0x555555590c38[31],
     %L0x555555590c38[32],%L0x555555590c38[33],%L0x555555590c38[34],%L0x555555590c38[35],
     %L0x555555590c38[36],%L0x555555590c38[37],%L0x555555590c38[38],%L0x555555590c38[39],
     %L0x555555590c38[40],%L0x555555590c38[41],%L0x555555590c38[42],%L0x555555590c38[43],
     %L0x555555590c38[44],%L0x555555590c38[45],%L0x555555590c38[46],%L0x555555590c38[47],
     %L0x555555590c38[48],%L0x555555590c38[49],%L0x555555590c38[50],%L0x555555590c38[51],
     %L0x555555590c38[52],%L0x555555590c38[53],%L0x555555590c38[54],%L0x555555590c38[55],
     %L0x555555590c38[56],%L0x555555590c38[57],%L0x555555590c38[58],%L0x555555590c38[59],
     %L0x555555590c38[60],%L0x555555590c38[61],%L0x555555590c38[62],%L0x555555590c38[63]];
(* vmovdqa %ymm0,0x1e0(%rsp)                       #! EA = L0x7ffffff50b60; PC = 0x555555582c4b *)
mov %L0x7ffffff50b60
    [%ymm0[0],%ymm0[1],%ymm0[2],%ymm0[3],%ymm0[4],%ymm0[5],%ymm0[6],%ymm0[7],
     %ymm0[8],%ymm0[9],%ymm0[10],%ymm0[11],%ymm0[12],%ymm0[13],%ymm0[14],%ymm0[15],
     %ymm0[16],%ymm0[17],%ymm0[18],%ymm0[19],%ymm0[20],%ymm0[21],%ymm0[22],%ymm0[23],
     %ymm0[24],%ymm0[25],%ymm0[26],%ymm0[27],%ymm0[28],%ymm0[29],%ymm0[30],%ymm0[31],
     %ymm0[32],%ymm0[33],%ymm0[34],%ymm0[35],%ymm0[36],%ymm0[37],%ymm0[38],%ymm0[39],
     %ymm0[40],%ymm0[41],%ymm0[42],%ymm0[43],%ymm0[44],%ymm0[45],%ymm0[46],%ymm0[47],
     %ymm0[48],%ymm0[49],%ymm0[50],%ymm0[51],%ymm0[52],%ymm0[53],%ymm0[54],%ymm0[55],
     %ymm0[56],%ymm0[57],%ymm0[58],%ymm0[59],%ymm0[60],%ymm0[61],%ymm0[62],%ymm0[63]];
mov %L0x7ffffff50b68
    [%ymm0[64],%ymm0[65],%ymm0[66],%ymm0[67],%ymm0[68],%ymm0[69],%ymm0[70],%ymm0[71],
     %ymm0[72],%ymm0[73],%ymm0[74],%ymm0[75],%ymm0[76],%ymm0[77],%ymm0[78],%ymm0[79],
     %ymm0[80],%ymm0[81],%ymm0[82],%ymm0[83],%ymm0[84],%ymm0[85],%ymm0[86],%ymm0[87],
     %ymm0[88],%ymm0[89],%ymm0[90],%ymm0[91],%ymm0[92],%ymm0[93],%ymm0[94],%ymm0[95],
     %ymm0[96],%ymm0[97],%ymm0[98],%ymm0[99],%ymm0[100],%ymm0[101],%ymm0[102],%ymm0[103],
     %ymm0[104],%ymm0[105],%ymm0[106],%ymm0[107],%ymm0[108],%ymm0[109],%ymm0[110],%ymm0[111],
     %ymm0[112],%ymm0[113],%ymm0[114],%ymm0[115],%ymm0[116],%ymm0[117],%ymm0[118],%ymm0[119],
     %ymm0[120],%ymm0[121],%ymm0[122],%ymm0[123],%ymm0[124],%ymm0[125],%ymm0[126],%ymm0[127]];
mov %L0x7ffffff50b70
    [%ymm0[128],%ymm0[129],%ymm0[130],%ymm0[131],%ymm0[132],%ymm0[133],%ymm0[134],%ymm0[135],
     %ymm0[136],%ymm0[137],%ymm0[138],%ymm0[139],%ymm0[140],%ymm0[141],%ymm0[142],%ymm0[143],
     %ymm0[144],%ymm0[145],%ymm0[146],%ymm0[147],%ymm0[148],%ymm0[149],%ymm0[150],%ymm0[151],
     %ymm0[152],%ymm0[153],%ymm0[154],%ymm0[155],%ymm0[156],%ymm0[157],%ymm0[158],%ymm0[159],
     %ymm0[160],%ymm0[161],%ymm0[162],%ymm0[163],%ymm0[164],%ymm0[165],%ymm0[166],%ymm0[167],
     %ymm0[168],%ymm0[169],%ymm0[170],%ymm0[171],%ymm0[172],%ymm0[173],%ymm0[174],%ymm0[175],
     %ymm0[176],%ymm0[177],%ymm0[178],%ymm0[179],%ymm0[180],%ymm0[181],%ymm0[182],%ymm0[183],
     %ymm0[184],%ymm0[185],%ymm0[186],%ymm0[187],%ymm0[188],%ymm0[189],%ymm0[190],%ymm0[191]];
mov %L0x7ffffff50b78
    [%ymm0[192],%ymm0[193],%ymm0[194],%ymm0[195],%ymm0[196],%ymm0[197],%ymm0[198],%ymm0[199],
     %ymm0[200],%ymm0[201],%ymm0[202],%ymm0[203],%ymm0[204],%ymm0[205],%ymm0[206],%ymm0[207],
     %ymm0[208],%ymm0[209],%ymm0[210],%ymm0[211],%ymm0[212],%ymm0[213],%ymm0[214],%ymm0[215],
     %ymm0[216],%ymm0[217],%ymm0[218],%ymm0[219],%ymm0[220],%ymm0[221],%ymm0[222],%ymm0[223],
     %ymm0[224],%ymm0[225],%ymm0[226],%ymm0[227],%ymm0[228],%ymm0[229],%ymm0[230],%ymm0[231],
     %ymm0[232],%ymm0[233],%ymm0[234],%ymm0[235],%ymm0[236],%ymm0[237],%ymm0[238],%ymm0[239],
     %ymm0[240],%ymm0[241],%ymm0[242],%ymm0[243],%ymm0[244],%ymm0[245],%ymm0[246],%ymm0[247],
     %ymm0[248],%ymm0[249],%ymm0[250],%ymm0[251],%ymm0[252],%ymm0[253],%ymm0[254],%ymm0[255]];
(* vzeroupper                                      #! PC = 0x555555582c54 *)
(* vzeroupper *)
nop;
(* nopw   0x0(%rax,%rax,1)                         #! EA = L0xffffffea1340; PC = 0x555555582c57 *)
(* nopw *)
nop;
(* mov    %rcx,0x10(%rsp)                          #! EA = L0x7ffffff50990; PC = 0x555555582c60 *)
mov %L0x7ffffff50990 %rcx;
(* mov    0x18(%rsp),%rdx                          #! EA = L0x7ffffff50998; Value = 0x00007ffffff50ca0; PC = 0x555555582c65 *)
mov %rdx %L0x7ffffff50998;
(* mov    %ecx,%esi                                #! PC = 0x555555582c6a *)
(* mov ecx, esi *)
nop;
(* movabs $0xf000f000f000f00,%r8                   #! PC = 0x555555582c6c *)
cast %r8@bit[64] [0xf000f000f000f00@uint64];
(* movabs $0xf000f000f000f0,%rdi                   #! PC = 0x555555582c76 *)
cast %rdi@bit[64] [0xf000f000f000f0@uint64];
(* movabs $0x3030303030303030,%r10                 #! PC = 0x555555582c80 *)
cast %r10@bit[64] [0x3030303030303030@uint64];
(* movabs $0xc0c0c0c0c0c0c0c,%r9                   #! PC = 0x555555582c8a *)
cast %r9@bit[64] [0xc0c0c0c0c0c0c0c@uint64];
(* movabs $0x4444444444444444,%r15                 #! PC = 0x555555582c94 *)
cast %r15@bit[64] [0x4444444444444444@uint64];
(* movabs $0x2222222222222222,%r11                 #! PC = 0x555555582c9e *)
cast %r11@bit[64] [0x2222222222222222@uint64];
(* nopl   0x0(%rax,%rax,1)                         #! EA = L0xffffffea1340; PC = 0x555555582ca8 *)
(* nopl *)
nop;
(* mov    (%rdx),%rax                              #! EA = L0x7ffffff50ca0; Value = 0xbaa654e082a77932; PC = 0x555555582cb0 *)
mov %rax %L0x7ffffff50ca0;
(* mov    %rax,%rcx                                #! PC = 0x555555582cb3 *)
mov %rcx %rax;
(* shr    $0x10,%rcx                               #! PC = 0x555555582cb6 *)
mov %rcx
    [%rcx[16],%rcx[17],%rcx[18],%rcx[19],%rcx[20],%rcx[21],%rcx[22],%rcx[23],
     %rcx[24],%rcx[25],%rcx[26],%rcx[27],%rcx[28],%rcx[29],%rcx[30],%rcx[31],
     %rcx[32],%rcx[33],%rcx[34],%rcx[35],%rcx[36],%rcx[37],%rcx[38],%rcx[39],
     %rcx[40],%rcx[41],%rcx[42],%rcx[43],%rcx[44],%rcx[45],%rcx[46],%rcx[47],
     %rcx[48],%rcx[49],%rcx[50],%rcx[51],%rcx[52],%rcx[53],%rcx[54],%rcx[55],
     %rcx[56],%rcx[57],%rcx[58],%rcx[59],%rcx[60],%rcx[61],%rcx[62],%rcx[63],
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit];
(* and    %rbx,%rcx                                #! PC = 0x555555582cba *)
mov %rcx
    [0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     %rcx[32],%rcx[33],%rcx[34],%rcx[35],%rcx[36],%rcx[37],%rcx[38],%rcx[39],
     %rcx[40],%rcx[41],%rcx[42],%rcx[43],%rcx[44],%rcx[45],%rcx[46],%rcx[47],
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit];
(* xor    %rax,%rcx                                #! PC = 0x555555582cbd *)
adds %dc %rcx %rax %rcx;
(* mov    %rcx,%rax                                #! PC = 0x555555582cc0 *)
mov %rax %rcx;
(* shr    $0x10,%rax                               #! PC = 0x555555582cc3 *)
mov %rax
    [%rax[16],%rax[17],%rax[18],%rax[19],%rax[20],%rax[21],%rax[22],%rax[23],
     %rax[24],%rax[25],%rax[26],%rax[27],%rax[28],%rax[29],%rax[30],%rax[31],
     %rax[32],%rax[33],%rax[34],%rax[35],%rax[36],%rax[37],%rax[38],%rax[39],
     %rax[40],%rax[41],%rax[42],%rax[43],%rax[44],%rax[45],%rax[46],%rax[47],
     %rax[48],%rax[49],%rax[50],%rax[51],%rax[52],%rax[53],%rax[54],%rax[55],
     %rax[56],%rax[57],%rax[58],%rax[59],%rax[60],%rax[61],%rax[62],%rax[63],
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit];
(* and    $0xffff0000,%eax                         #! PC = 0x555555582cc7 *)
mov %rax
    [0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     %rax[16],%rax[17],%rax[18],%rax[19],%rax[20],%rax[21],%rax[22],%rax[23],
     %rax[24],%rax[25],%rax[26],%rax[27],%rax[28],%rax[29],%rax[30],%rax[31],
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit];
(* xor    %rcx,%rax                                #! PC = 0x555555582ccc *)
adds %dc %rax %rcx %rax;
(* cmp    $0x4,%esi                                #! PC = 0x555555582ccf *)
(* cmp 0x4, esi *)
nop;

(**************** NOTE: divides by X**32+X**16 ****************)
(*
assert eqmod (poly X [c000,c010,c020,c030,c040,c050,c060,c070,
                      c080,c090,c0a0,c0b0,c0c0,c0d0,c0e0,c0f0,
                      c100,c110,c120,c130,c140,c150,c160,c170,
                      c180,c190,c1a0,c1b0,c1c0,c1d0,c1e0,c1f0,
                      c200,c210,c220,c230,c240,c250,c260,c270,
                      c280,c290,c2a0,c2b0,c2c0,c2d0,c2e0,c2f0,
                      c300,c310,c320,c330,c340,c350,c360,c370,
                      c380,c390,c3a0,c3b0,c3c0,c3d0,c3e0,c3f0])
             (poly X [%rax[0],%rax[1],%rax[2],%rax[3],%rax[4],%rax[5],
                      %rax[6],%rax[7],%rax[8],%rax[9],%rax[10],%rax[11],
                      %rax[12],%rax[13],%rax[14],%rax[15],%rax[16],%rax[17],
                      %rax[18],%rax[19],%rax[20],%rax[21],%rax[22],%rax[23],
                      %rax[24],%rax[25],%rax[26],%rax[27],%rax[28],%rax[29],
                      %rax[30],%rax[31]] +
              (X**32+X**16)*
               poly X [%rax[32],%rax[33],%rax[34],%rax[35],%rax[36],%rax[37],
                       %rax[38],%rax[39],%rax[40],%rax[41],%rax[42],%rax[43],
                       %rax[44],%rax[45],%rax[46],%rax[47],%rax[48],%rax[49],
                       %rax[50],%rax[51],%rax[52],%rax[53],%rax[54],%rax[55],
                       %rax[56],%rax[57],%rax[58],%rax[59],%rax[60],%rax[61],
                       %rax[62],%rax[63]])
              [2] && true;

ghost %raxo0@bit[64] : %raxo0 = %rax && true;
*)

(* #je     0x555555582d48 <radix_conversions+584>  #! PC = 0x555555582cd2 *)
#je     0x555555582d48 <radix_conversions+584>  #! 0x555555582cd2 = 0x555555582cd2;
(* mov    %rax,%rcx                                #! PC = 0x555555582cd4 *)
mov %rcx %rax;
(* shr    $0x8,%rcx                                #! PC = 0x555555582cd7 *)
mov %rcx
    [%rcx[8],%rcx[9],%rcx[10],%rcx[11],%rcx[12],%rcx[13],%rcx[14],%rcx[15],
     %rcx[16],%rcx[17],%rcx[18],%rcx[19],%rcx[20],%rcx[21],%rcx[22],%rcx[23],
     %rcx[24],%rcx[25],%rcx[26],%rcx[27],%rcx[28],%rcx[29],%rcx[30],%rcx[31],
     %rcx[32],%rcx[33],%rcx[34],%rcx[35],%rcx[36],%rcx[37],%rcx[38],%rcx[39],
     %rcx[40],%rcx[41],%rcx[42],%rcx[43],%rcx[44],%rcx[45],%rcx[46],%rcx[47],
     %rcx[48],%rcx[49],%rcx[50],%rcx[51],%rcx[52],%rcx[53],%rcx[54],%rcx[55],
     %rcx[56],%rcx[57],%rcx[58],%rcx[59],%rcx[60],%rcx[61],%rcx[62],%rcx[63],
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit];
(* and    %r14,%rcx                                #! PC = 0x555555582cdb *)
mov %rcx
    [0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     %rcx[16],%rcx[17],%rcx[18],%rcx[19],%rcx[20],%rcx[21],%rcx[22],%rcx[23],
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     %rcx[48],%rcx[49],%rcx[50],%rcx[51],%rcx[52],%rcx[53],%rcx[54],%rcx[55],
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit];
(* xor    %rax,%rcx                                #! PC = 0x555555582cde *)
adds %dc %rcx %rax %rcx;
(* mov    %rcx,%rax                                #! PC = 0x555555582ce1 *)
mov %rax %rcx;
(* shr    $0x8,%rax                                #! PC = 0x555555582ce4 *)
mov %rax
    [%rax[8],%rax[9],%rax[10],%rax[11],%rax[12],%rax[13],%rax[14],%rax[15],
     %rax[16],%rax[17],%rax[18],%rax[19],%rax[20],%rax[21],%rax[22],%rax[23],
     %rax[24],%rax[25],%rax[26],%rax[27],%rax[28],%rax[29],%rax[30],%rax[31],
     %rax[32],%rax[33],%rax[34],%rax[35],%rax[36],%rax[37],%rax[38],%rax[39],
     %rax[40],%rax[41],%rax[42],%rax[43],%rax[44],%rax[45],%rax[46],%rax[47],
     %rax[48],%rax[49],%rax[50],%rax[51],%rax[52],%rax[53],%rax[54],%rax[55],
     %rax[56],%rax[57],%rax[58],%rax[59],%rax[60],%rax[61],%rax[62],%rax[63],
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit];
(* and    %r13,%rax                                #! PC = 0x555555582ce8 *)
mov %rax
    [0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     %rax[8],%rax[9],%rax[10],%rax[11],%rax[12],%rax[13],%rax[14],%rax[15],
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     %rax[40],%rax[41],%rax[42],%rax[43],%rax[44],%rax[45],%rax[46],%rax[47],
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit];
(* xor    %rcx,%rax                                #! PC = 0x555555582ceb *)
adds %dc %rax %rcx %rax;
(* cmp    $0x3,%esi                                #! PC = 0x555555582cee *)
(* cmp 0x3, esi *)
nop;

(**************** NOTE: divides by X**16+X**8 ****************)
(*
assert eqmod (poly X
              [%raxo0[0],%raxo0[1],%raxo0[2],%raxo0[3],%raxo0[4],%raxo0[5],
               %raxo0[6],%raxo0[7],%raxo0[8],%raxo0[9],%raxo0[10],%raxo0[11],
               %raxo0[12],%raxo0[13],%raxo0[14],%raxo0[15],%raxo0[16],%raxo0[17],
               %raxo0[18],%raxo0[19],%raxo0[20],%raxo0[21],%raxo0[22],%raxo0[23],
               %raxo0[24],%raxo0[25],%raxo0[26],%raxo0[27],%raxo0[28],%raxo0[29],
               %raxo0[30],%raxo0[31]])
             (poly X
              [%rax[0],%rax[1],%rax[2],%rax[3],%rax[4],%rax[5],
               %rax[6],%rax[7],%rax[8],%rax[9],%rax[10],%rax[11],
               %rax[12],%rax[13],%rax[14],%rax[15]] +
              (X**16+X**8)*
              poly X
              [%rax[16],%rax[17],%rax[18],%rax[19],%rax[20],%rax[21],
               %rax[22],%rax[23],%rax[24],%rax[25],%rax[26],%rax[27],
               %rax[28],%rax[29],%rax[30],%rax[31]])
             [2, z**12+z**3+1] /\
       eqmod (poly X
              [%raxo0[32],%raxo0[33],%raxo0[34],%raxo0[35],%raxo0[36],%raxo0[37],
               %raxo0[38],%raxo0[39],%raxo0[40],%raxo0[41],%raxo0[42],%raxo0[43],
               %raxo0[44],%raxo0[45],%raxo0[46],%raxo0[47],%raxo0[48],%raxo0[49],
               %raxo0[50],%raxo0[51],%raxo0[52],%raxo0[53],%raxo0[54],%raxo0[55],
               %raxo0[56],%raxo0[57],%raxo0[58],%raxo0[59],%raxo0[60],%raxo0[61],
               %raxo0[62],%raxo0[63]])
             (poly X
              [%rax[32],%rax[33],%rax[34],%rax[35],%rax[36],%rax[37],
               %rax[38],%rax[39],%rax[40],%rax[41],%rax[42],%rax[43],
               %rax[44],%rax[45],%rax[46],%rax[47]] +
              (X**16+X**8)*
              poly X
              [%rax[48],%rax[49],%rax[50],%rax[51],%rax[52],%rax[53],
               %rax[54],%rax[55],%rax[56],%rax[57],%rax[58],%rax[59],
               %rax[60],%rax[61],%rax[62],%rax[63]])
             [2, z**12+z**3+1] && true;

ghost %raxo1@bit[64] : %raxo1 = %rax && true;
*)

(* #je     0x555555582d48 <radix_conversions+584>  #! PC = 0x555555582cf1 *)
#je     0x555555582d48 <radix_conversions+584>  #! 0x555555582cf1 = 0x555555582cf1;
(* mov    %rax,%rcx                                #! PC = 0x555555582cf3 *)
mov %rcx %rax;
(* shr    $0x4,%rcx                                #! PC = 0x555555582cf6 *)
mov %rcx
    [%rcx[4],%rcx[5],%rcx[6],%rcx[7],
     %rcx[8],%rcx[9],%rcx[10],%rcx[11],%rcx[12],%rcx[13],%rcx[14],%rcx[15],
     %rcx[16],%rcx[17],%rcx[18],%rcx[19],%rcx[20],%rcx[21],%rcx[22],%rcx[23],
     %rcx[24],%rcx[25],%rcx[26],%rcx[27],%rcx[28],%rcx[29],%rcx[30],%rcx[31],
     %rcx[32],%rcx[33],%rcx[34],%rcx[35],%rcx[36],%rcx[37],%rcx[38],%rcx[39],
     %rcx[40],%rcx[41],%rcx[42],%rcx[43],%rcx[44],%rcx[45],%rcx[46],%rcx[47],
     %rcx[48],%rcx[49],%rcx[50],%rcx[51],%rcx[52],%rcx[53],%rcx[54],%rcx[55],
     %rcx[56],%rcx[57],%rcx[58],%rcx[59],%rcx[60],%rcx[61],%rcx[62],%rcx[63],
     0@bit,0@bit,0@bit,0@bit];
(* and    %r8,%rcx                                 #! PC = 0x555555582cfa *)
mov %rcx
    [0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     %rcx[8],%rcx[9],%rcx[10],%rcx[11],0@bit,0@bit,0@bit,0@bit,
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     %rcx[24],%rcx[25],%rcx[26],%rcx[27],0@bit,0@bit,0@bit,0@bit,
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     %rcx[40],%rcx[41],%rcx[42],%rcx[43],0@bit,0@bit,0@bit,0@bit,
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     %rcx[56],%rcx[57],%rcx[58],%rcx[59],0@bit,0@bit,0@bit,0@bit];
(* xor    %rax,%rcx                                #! PC = 0x555555582cfd *)
adds %dc %rcx %rax %rcx;
(* mov    %rcx,%rax                                #! PC = 0x555555582d00 *)
mov %rax %rcx;
(* shr    $0x4,%rax                                #! PC = 0x555555582d03 *)
mov %rax
    [%rax[4],%rax[5],%rax[6],%rax[7],
     %rax[8],%rax[9],%rax[10],%rax[11],%rax[12],%rax[13],%rax[14],%rax[15],
     %rax[16],%rax[17],%rax[18],%rax[19],%rax[20],%rax[21],%rax[22],%rax[23],
     %rax[24],%rax[25],%rax[26],%rax[27],%rax[28],%rax[29],%rax[30],%rax[31],
     %rax[32],%rax[33],%rax[34],%rax[35],%rax[36],%rax[37],%rax[38],%rax[39],
     %rax[40],%rax[41],%rax[42],%rax[43],%rax[44],%rax[45],%rax[46],%rax[47],
     %rax[48],%rax[49],%rax[50],%rax[51],%rax[52],%rax[53],%rax[54],%rax[55],
     %rax[56],%rax[57],%rax[58],%rax[59],%rax[60],%rax[61],%rax[62],%rax[63],
     0@bit,0@bit,0@bit,0@bit];
(* and    %rdi,%rax                                #! PC = 0x555555582d07 *)
mov %rax
    [0@bit,0@bit,0@bit,0@bit,%rax[4],%rax[5],%rax[6],%rax[7],
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     0@bit,0@bit,0@bit,0@bit,%rax[20],%rax[21],%rax[22],%rax[23],
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     0@bit,0@bit,0@bit,0@bit,%rax[36],%rax[37],%rax[38],%rax[39],
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     0@bit,0@bit,0@bit,0@bit,%rax[52],%rax[53],%rax[54],%rax[55],
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit];
(* xor    %rcx,%rax                                #! PC = 0x555555582d0a *)
adds %dc %rax %rcx %rax;
(* cmp    $0x2,%esi                                #! PC = 0x555555582d0d *)
(* cmp 0x2, esi *)
nop;

(**************** NOTE: divides by X**8+X**4 ****************)
(*
assert eqmod (poly X
              [%raxo1[0],%raxo1[1],%raxo1[2],%raxo1[3],%raxo1[4],%raxo1[5],
               %raxo1[6],%raxo1[7],%raxo1[8],%raxo1[9],%raxo1[10],%raxo1[11],
               %raxo1[12],%raxo1[13],%raxo1[14],%raxo1[15]])
             (poly X
              [%rax[0],%rax[1],%rax[2],%rax[3],%rax[4],%rax[5],
               %rax[6],%rax[7]] +
              (X**8+X**4)*
              poly X
              [%rax[8],%rax[9],%rax[10],%rax[11],%rax[12],%rax[13],
               %rax[14],%rax[15]])
             [2, z**12+z**3+1] /\
       eqmod (poly X
              [%raxo1[16],%raxo1[17],%raxo1[18],%raxo1[19],%raxo1[20],%raxo1[21],
               %raxo1[22],%raxo1[23],%raxo1[24],%raxo1[25],%raxo1[26],%raxo1[27],
               %raxo1[28],%raxo1[29],%raxo1[30],%raxo1[31]])
             (poly X
              [%rax[16],%rax[17],%rax[18],%rax[19],%rax[20],%rax[21],
               %rax[22],%rax[23]] +
              (X**8+X**4)*
              poly X
              [%rax[24],%rax[25],%rax[26],%rax[27],%rax[28],%rax[29],
               %rax[30],%rax[31]])
             [2, z**12+z**3+1] /\
       eqmod (poly X
              [%raxo1[32],%raxo1[33],%raxo1[34],%raxo1[35],%raxo1[36],%raxo1[37],
               %raxo1[38],%raxo1[39],%raxo1[40],%raxo1[41],%raxo1[42],%raxo1[43],
               %raxo1[44],%raxo1[45],%raxo1[46],%raxo1[47]])
             (poly X
              [%rax[32],%rax[33],%rax[34],%rax[35],%rax[36],%rax[37],
               %rax[38],%rax[39]] +
              (X**8+X**4)*
              poly X
              [%rax[40],%rax[41],%rax[42],%rax[43],%rax[44],%rax[45],
               %rax[46],%rax[47]])
             [2, z**12+z**3+1] /\
       eqmod (poly X
              [%raxo1[48],%raxo1[49],%raxo1[50],%raxo1[51],%raxo1[52],%raxo1[53],
               %raxo1[54],%raxo1[55],%raxo1[56],%raxo1[57],%raxo1[58],%raxo1[59],
               %raxo1[60],%raxo1[61],%raxo1[62],%raxo1[63]])
             (poly X
              [%rax[48],%rax[49],%rax[50],%rax[51],%rax[52],%rax[53],
               %rax[54],%rax[55]] +
              (X**8+X**4)*
              poly X
              [%rax[56],%rax[57],%rax[58],%rax[59],%rax[60],%rax[61],
               %rax[62],%rax[63]])
             [2, z**12+z**3+1] && true;

ghost %raxo2@bit[64]: %raxo2 = %rax && true;
*)

(* #je     0x555555582d48 <radix_conversions+584>  #! PC = 0x555555582d10 *)
#je     0x555555582d48 <radix_conversions+584>  #! 0x555555582d10 = 0x555555582d10;
(* mov    %rax,%rcx                                #! PC = 0x555555582d12 *)
mov %rcx %rax;
(* shr    $0x2,%rcx                                #! PC = 0x555555582d15 *)
mov %rcx
    [%rcx[2],%rcx[3],%rcx[4],%rcx[5],%rcx[6],%rcx[7],
     %rcx[8],%rcx[9],%rcx[10],%rcx[11],%rcx[12],%rcx[13],%rcx[14],%rcx[15],
     %rcx[16],%rcx[17],%rcx[18],%rcx[19],%rcx[20],%rcx[21],%rcx[22],%rcx[23],
     %rcx[24],%rcx[25],%rcx[26],%rcx[27],%rcx[28],%rcx[29],%rcx[30],%rcx[31],
     %rcx[32],%rcx[33],%rcx[34],%rcx[35],%rcx[36],%rcx[37],%rcx[38],%rcx[39],
     %rcx[40],%rcx[41],%rcx[42],%rcx[43],%rcx[44],%rcx[45],%rcx[46],%rcx[47],
     %rcx[48],%rcx[49],%rcx[50],%rcx[51],%rcx[52],%rcx[53],%rcx[54],%rcx[55],
     %rcx[56],%rcx[57],%rcx[58],%rcx[59],%rcx[60],%rcx[61],%rcx[62],%rcx[63],
     0@bit,0@bit];
(* and    %r10,%rcx                                #! PC = 0x555555582d19 *)
mov %rcx
    [0@bit,0@bit,0@bit,0@bit,%rcx[4],%rcx[5],0@bit,0@bit,
     0@bit,0@bit,0@bit,0@bit,%rcx[12],%rcx[13],0@bit,0@bit,
     0@bit,0@bit,0@bit,0@bit,%rcx[20],%rcx[21],0@bit,0@bit,
     0@bit,0@bit,0@bit,0@bit,%rcx[28],%rcx[29],0@bit,0@bit,
     0@bit,0@bit,0@bit,0@bit,%rcx[36],%rcx[37],0@bit,0@bit,
     0@bit,0@bit,0@bit,0@bit,%rcx[44],%rcx[45],0@bit,0@bit,
     0@bit,0@bit,0@bit,0@bit,%rcx[52],%rcx[53],0@bit,0@bit,
     0@bit,0@bit,0@bit,0@bit,%rcx[60],%rcx[61],0@bit,0@bit];
(* xor    %rax,%rcx                                #! PC = 0x555555582d1c *)
adds %dc %rcx %rax %rcx;
(* mov    %rcx,%rax                                #! PC = 0x555555582d1f *)
mov %rax %rcx;
(* shr    $0x2,%rax                                #! PC = 0x555555582d22 *)
mov %rax
    [%rax[2],%rax[3],%rax[4],%rax[5],%rax[6],%rax[7],
     %rax[8],%rax[9],%rax[10],%rax[11],%rax[12],%rax[13],%rax[14],%rax[15],
     %rax[16],%rax[17],%rax[18],%rax[19],%rax[20],%rax[21],%rax[22],%rax[23],
     %rax[24],%rax[25],%rax[26],%rax[27],%rax[28],%rax[29],%rax[30],%rax[31],
     %rax[32],%rax[33],%rax[34],%rax[35],%rax[36],%rax[37],%rax[38],%rax[39],
     %rax[40],%rax[41],%rax[42],%rax[43],%rax[44],%rax[45],%rax[46],%rax[47],
     %rax[48],%rax[49],%rax[50],%rax[51],%rax[52],%rax[53],%rax[54],%rax[55],
     %rax[56],%rax[57],%rax[58],%rax[59],%rax[60],%rax[61],%rax[62],%rax[63],
     0@bit,0@bit];
(* and    %r9,%rax                                 #! PC = 0x555555582d26 *)
mov %rax
    [0@bit,0@bit,%rax[2],%rax[3],0@bit,0@bit,0@bit,0@bit,
     0@bit,0@bit,%rax[10],%rax[11],0@bit,0@bit,0@bit,0@bit,
     0@bit,0@bit,%rax[18],%rax[19],0@bit,0@bit,0@bit,0@bit,
     0@bit,0@bit,%rax[26],%rax[27],0@bit,0@bit,0@bit,0@bit,
     0@bit,0@bit,%rax[34],%rax[35],0@bit,0@bit,0@bit,0@bit,
     0@bit,0@bit,%rax[42],%rax[43],0@bit,0@bit,0@bit,0@bit,
     0@bit,0@bit,%rax[50],%rax[51],0@bit,0@bit,0@bit,0@bit,
     0@bit,0@bit,%rax[58],%rax[59],0@bit,0@bit,0@bit,0@bit];
(* xor    %rcx,%rax                                #! PC = 0x555555582d29 *)
adds %dc %rax %rcx %rax;
(* test   %esi,%esi                                #! PC = 0x555555582d2c *)
(* test esi, esi *)
nop;

(**************** NOTE: divides by X**4+X**2 ****************)
(*
assert eqmod (poly X
              [%raxo2[0],%raxo2[1],%raxo2[2],%raxo2[3],%raxo2[4],%raxo2[5],
               %raxo2[6],%raxo2[7]])
             (poly X [%rax[0],%rax[1],%rax[2],%rax[3]] +
              (X**4+X**2) *
              poly X [%rax[4],%rax[5],%rax[6],%rax[7]])
             [2, z**12+z**3+1] /\
       eqmod (poly X
              [%raxo2[8],%raxo2[9],%raxo2[10],%raxo2[11],%raxo2[12],%raxo2[13],
               %raxo2[14],%raxo2[15]])
             (poly X [%rax[8],%rax[9],%rax[10],%rax[11]] +
              (X**4 + X**2) *
              poly X [%rax[12],%rax[13],%rax[14],%rax[15]])
             [2, z**12+z**3+1] /\
       eqmod (poly X
              [%raxo2[16],%raxo2[17],%raxo2[18],%raxo2[19],%raxo2[20],%raxo2[21],
               %raxo2[22],%raxo2[23]])
             (poly X [%rax[16],%rax[17],%rax[18],%rax[19]] +
              (X**4+X**2)*
              poly X [%rax[20],%rax[21],%rax[22],%rax[23]])
             [2, z**12+z**3+1] /\
       eqmod (poly X
              [%raxo2[24],%raxo2[25],%raxo2[26],%raxo2[27],%raxo2[28],%raxo2[29],
               %raxo2[30],%raxo2[31]])
             (poly X [%rax[24],%rax[25],%rax[26],%rax[27]] +
              (X**4+X**2)*
              poly X [%rax[28],%rax[29],%rax[30],%rax[31]])
             [2, z**12+z**3+1] /\
       eqmod (poly X
              [%raxo2[32],%raxo2[33],%raxo2[34],%raxo2[35],%raxo2[36],%raxo2[37],
               %raxo2[38],%raxo2[39]])
             (poly X [%rax[32],%rax[33],%rax[34],%rax[35]] +
              (X**4+X**2)*
              poly X [%rax[36],%rax[37],%rax[38],%rax[39]])
             [2, z**12+z**3+1] /\
       eqmod (poly X
              [%raxo2[40],%raxo2[41],%raxo2[42],%raxo2[43],%raxo2[44],%raxo2[45],
               %raxo2[46],%raxo2[47]])
             (poly X [%rax[40],%rax[41],%rax[42],%rax[43]] +
              (X**4+X**2)*
              poly X [%rax[44],%rax[45],%rax[46],%rax[47]])
             [2, z**12+z**3+1] /\
       eqmod (poly X
              [%raxo2[48],%raxo2[49],%raxo2[50],%raxo2[51],%raxo2[52],%raxo2[53],
               %raxo2[54],%raxo2[55]])
             (poly X [%rax[48],%rax[49],%rax[50],%rax[51]] +
              (X**4+X**2)*
              poly X [%rax[52],%rax[53],%rax[54],%rax[55]])
             [2, z**12+z**3+1] /\
       eqmod (poly X
              [%raxo2[56],%raxo2[57],%raxo2[58],%raxo2[59],
               %raxo2[60],%raxo2[61],%raxo2[62],%raxo2[63]])
             (poly X [%rax[56],%rax[57],%rax[58],%rax[59]] +
              (X**4+X**2)*
              poly X [%rax[60],%rax[61],%rax[62],%rax[63]])
             [2, z**12+z**3+1] && true;

ghost %raxo3@bit[64] : %raxo3 = %rax && true;
*)

(* #jne    0x555555582d48 <radix_conversions+584>  #! PC = 0x555555582d2e *)
#jne    0x555555582d48 <radix_conversions+584>  #! 0x555555582d2e = 0x555555582d2e;
(* mov    %rax,%rcx                                #! PC = 0x555555582d30 *)
mov %rcx %rax;
(* shr    $1,%rcx                                  #! PC = 0x555555582d33 *)
mov %rcx
    [%rcx[1],%rcx[2],%rcx[3],%rcx[4],%rcx[5],%rcx[6],%rcx[7],
     %rcx[8],%rcx[9],%rcx[10],%rcx[11],%rcx[12],%rcx[13],%rcx[14],%rcx[15],
     %rcx[16],%rcx[17],%rcx[18],%rcx[19],%rcx[20],%rcx[21],%rcx[22],%rcx[23],
     %rcx[24],%rcx[25],%rcx[26],%rcx[27],%rcx[28],%rcx[29],%rcx[30],%rcx[31],
     %rcx[32],%rcx[33],%rcx[34],%rcx[35],%rcx[36],%rcx[37],%rcx[38],%rcx[39],
     %rcx[40],%rcx[41],%rcx[42],%rcx[43],%rcx[44],%rcx[45],%rcx[46],%rcx[47],
     %rcx[48],%rcx[49],%rcx[50],%rcx[51],%rcx[52],%rcx[53],%rcx[54],%rcx[55],
     %rcx[56],%rcx[57],%rcx[58],%rcx[59],%rcx[60],%rcx[61],%rcx[62],%rcx[63],
     0@bit];
(* and    %r15,%rcx                                #! PC = 0x555555582d36 *)
mov %rcx
    [0@bit,0@bit,%rcx[2],0@bit,0@bit,0@bit,%rcx[6],0@bit,
     0@bit,0@bit,%rcx[10],0@bit,0@bit,0@bit,%rcx[14],0@bit,
     0@bit,0@bit,%rcx[18],0@bit,0@bit,0@bit,%rcx[22],0@bit,
     0@bit,0@bit,%rcx[26],0@bit,0@bit,0@bit,%rcx[30],0@bit,
     0@bit,0@bit,%rcx[34],0@bit,0@bit,0@bit,%rcx[38],0@bit,
     0@bit,0@bit,%rcx[42],0@bit,0@bit,0@bit,%rcx[46],0@bit,
     0@bit,0@bit,%rcx[50],0@bit,0@bit,0@bit,%rcx[54],0@bit,
     0@bit,0@bit,%rcx[58],0@bit,0@bit,0@bit,%rcx[62],0@bit];
(* xor    %rax,%rcx                                #! PC = 0x555555582d39 *)
adds %dc %rcx %rax %rcx;
(* mov    %rcx,%rax                                #! PC = 0x555555582d3c *)
mov %rax %rcx;
(* shr    $1,%rax                                  #! PC = 0x555555582d3f *)
mov %rax
    [%rax[1],%rax[2],%rax[3],%rax[4],%rax[5],%rax[6],%rax[7],
     %rax[8],%rax[9],%rax[10],%rax[11],%rax[12],%rax[13],%rax[14],%rax[15],
     %rax[16],%rax[17],%rax[18],%rax[19],%rax[20],%rax[21],%rax[22],%rax[23],
     %rax[24],%rax[25],%rax[26],%rax[27],%rax[28],%rax[29],%rax[30],%rax[31],
     %rax[32],%rax[33],%rax[34],%rax[35],%rax[36],%rax[37],%rax[38],%rax[39],
     %rax[40],%rax[41],%rax[42],%rax[43],%rax[44],%rax[45],%rax[46],%rax[47],
     %rax[48],%rax[49],%rax[50],%rax[51],%rax[52],%rax[53],%rax[54],%rax[55],
     %rax[56],%rax[57],%rax[58],%rax[59],%rax[60],%rax[61],%rax[62],%rax[63],
     0@bit];
(* and    %r11,%rax                                #! PC = 0x555555582d42 *)
mov %rax
    [0@bit,%rax[1],0@bit,0@bit,0@bit,%rax[5],0@bit,0@bit,
     0@bit,%rax[9],0@bit,0@bit,0@bit,%rax[13],0@bit,0@bit,
     0@bit,%rax[17],0@bit,0@bit,0@bit,%rax[21],0@bit,0@bit,
     0@bit,%rax[25],0@bit,0@bit,0@bit,%rax[29],0@bit,0@bit,
     0@bit,%rax[33],0@bit,0@bit,0@bit,%rax[37],0@bit,0@bit,
     0@bit,%rax[41],0@bit,0@bit,0@bit,%rax[45],0@bit,0@bit,
     0@bit,%rax[49],0@bit,0@bit,0@bit,%rax[53],0@bit,0@bit,
     0@bit,%rax[57],0@bit,0@bit,0@bit,%rax[61],0@bit,0@bit];
(* xor    %rcx,%rax                                #! PC = 0x555555582d45 *)
adds %dc %rax %rcx %rax;
(* mov    %rax,(%rdx)                              #! EA = L0x7ffffff50ca0; PC = 0x555555582d48 *)
mov %L0x7ffffff50ca0 %rax;
(* add    $0x8,%rdx                                #! PC = 0x555555582d4b *)
(* add $0x8, rdx *)
nop;

(**************** NOTE: divides by X**2+X ****************)
(*
assert eqmod (poly X [%raxo3[0],%raxo3[1],%raxo3[2],%raxo3[3]])
             (poly X [%rax[0],%rax[1]] +
              (X**2+X) * poly X [%rax[2],%rax[3]])
             [2, z**12+z**3+1] /\
       eqmod (poly X [%raxo3[4],%raxo3[5],%raxo3[6],%raxo3[7]])
             (poly X [%rax[4],%rax[5]] +
              (X**2+X) * poly X [%rax[6],%rax[7]])
             [2, z**12+z**3+1] /\
       eqmod (poly X [%raxo3[8],%raxo3[9],%raxo3[10],%raxo3[11]])
             (poly X [%rax[8],%rax[9]] +
              (X**2+X) * poly X [%rax[10],%rax[11]])
             [2, z**12+z**3+1] /\
       eqmod (poly X [%raxo3[12],%raxo3[13],%raxo3[14],%raxo3[15]])
             (poly X [%rax[12],%rax[13]] +
              (X**2+X) * poly X [%rax[14],%rax[15]])
             [2, z**12+z**3+1] /\
       eqmod (poly X [%raxo3[16],%raxo3[17],%raxo3[18],%raxo3[19]])
             (poly X [%rax[16],%rax[17]] +
              (X**2+X) * poly X [%rax[18],%rax[19]])
             [2, z**12+z**3+1] /\
       eqmod (poly X [%raxo3[20],%raxo3[21],%raxo3[22],%raxo3[23]])
             (poly X [%rax[20],%rax[21]] +
              (X**2+X) * poly X [%rax[22],%rax[23]])
             [2, z**12+z**3+1] /\
       eqmod (poly X [%raxo3[24],%raxo3[25],%raxo3[26],%raxo3[27]])
             (poly X [%rax[24],%rax[25]] +
              (X**2+X) * poly X [%rax[26],%rax[27]])
             [2, z**12+z**3+1] /\
       eqmod (poly X [%raxo3[28],%raxo3[29],%raxo3[30],%raxo3[31]])
             (poly X [%rax[28],%rax[29]] +
              (X**2+X) * poly X [%rax[30],%rax[31]])
             [2, z**12+z**3+1] /\
       eqmod (poly X [%raxo3[32],%raxo3[33],%raxo3[34],%raxo3[35]])
             (poly X [%rax[32],%rax[33]] +
              (X**2+X) * poly X [%rax[34],%rax[35]])
             [2, z**12+z**3+1] /\
       eqmod (poly X [%raxo3[36],%raxo3[37],%raxo3[38],%raxo3[39]])
             (poly X [%rax[36],%rax[37]] +
              (X**2+X) * poly X [%rax[38],%rax[39]])
             [2, z**12+z**3+1] /\
       eqmod (poly X [%raxo3[40],%raxo3[41],%raxo3[42],%raxo3[43]])
             (poly X [%rax[40],%rax[41]] +
              (X**2+X) * poly X [%rax[42],%rax[43]])
             [2, z**12+z**3+1] /\
       eqmod (poly X [%raxo3[44],%raxo3[45],%raxo3[46],%raxo3[47]])
             (poly X [%rax[44],%rax[45]] +
              (X**2+X) * poly X [%rax[46],%rax[47]])
             [2, z**12+z**3+1] /\
       eqmod (poly X [%raxo3[48],%raxo3[49],%raxo3[50],%raxo3[51]])
             (poly X [%rax[48],%rax[49]] +
              (X**2+X) * poly X [%rax[50],%rax[51]])
             [2, z**12+z**3+1] /\
       eqmod (poly X [%raxo3[52],%raxo3[53],%raxo3[54],%raxo3[55]])
             (poly X [%rax[52],%rax[53]] +
              (X**2+X) * poly X [%rax[54],%rax[55]])
             [2, z**12+z**3+1] /\
       eqmod (poly X [%raxo3[56],%raxo3[57],%raxo3[58],%raxo3[59]])
             (poly X [%rax[56],%rax[57]] +
              (X**2+X) * poly X [%rax[58],%rax[59]])
             [2, z**12+z**3+1] /\
       eqmod (poly X [%raxo3[60],%raxo3[61],%raxo3[62],%raxo3[63]])
             (poly X [%rax[60],%rax[61]] +
              (X**2+X) * poly X [%rax[62],%rax[63]])
             [2, z**12+z**3+1] && true;
*)

(* cmp    %rdx,%r12                                #! PC = 0x555555582d4f *)
(* cmp rdx, r12 *)
nop;
(* #jne    0x555555582cb0 <radix_conversions+432>  #! PC = 0x555555582d52 *)
#jne    0x555555582cb0 <radix_conversions+432>  #! 0x555555582d52 = 0x555555582d52;
(* mov    (%rdx),%rax                              #! EA = L0x7ffffff50ca8; Value = 0x6552dccb8087477e; PC = 0x555555582cb0 *)
mov %rax %L0x7ffffff50ca8;
(* mov    %rax,%rcx                                #! PC = 0x555555582cb3 *)
mov %rcx %rax;
(* shr    $0x10,%rcx                               #! PC = 0x555555582cb6 *)
mov %rcx
    [%rcx[16],%rcx[17],%rcx[18],%rcx[19],%rcx[20],%rcx[21],%rcx[22],%rcx[23],
     %rcx[24],%rcx[25],%rcx[26],%rcx[27],%rcx[28],%rcx[29],%rcx[30],%rcx[31],
     %rcx[32],%rcx[33],%rcx[34],%rcx[35],%rcx[36],%rcx[37],%rcx[38],%rcx[39],
     %rcx[40],%rcx[41],%rcx[42],%rcx[43],%rcx[44],%rcx[45],%rcx[46],%rcx[47],
     %rcx[48],%rcx[49],%rcx[50],%rcx[51],%rcx[52],%rcx[53],%rcx[54],%rcx[55],
     %rcx[56],%rcx[57],%rcx[58],%rcx[59],%rcx[60],%rcx[61],%rcx[62],%rcx[63],
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit];
(* and    %rbx,%rcx                                #! PC = 0x555555582cba *)
mov %rcx
    [0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     %rcx[32],%rcx[33],%rcx[34],%rcx[35],%rcx[36],%rcx[37],%rcx[38],%rcx[39],
     %rcx[40],%rcx[41],%rcx[42],%rcx[43],%rcx[44],%rcx[45],%rcx[46],%rcx[47],
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit];
(* xor    %rax,%rcx                                #! PC = 0x555555582cbd *)
adds %dc %rcx %rax %rcx;
(* mov    %rcx,%rax                                #! PC = 0x555555582cc0 *)
mov %rax %rcx;
(* shr    $0x10,%rax                               #! PC = 0x555555582cc3 *)
mov %rax
    [%rax[16],%rax[17],%rax[18],%rax[19],%rax[20],%rax[21],%rax[22],%rax[23],
     %rax[24],%rax[25],%rax[26],%rax[27],%rax[28],%rax[29],%rax[30],%rax[31],
     %rax[32],%rax[33],%rax[34],%rax[35],%rax[36],%rax[37],%rax[38],%rax[39],
     %rax[40],%rax[41],%rax[42],%rax[43],%rax[44],%rax[45],%rax[46],%rax[47],
     %rax[48],%rax[49],%rax[50],%rax[51],%rax[52],%rax[53],%rax[54],%rax[55],
     %rax[56],%rax[57],%rax[58],%rax[59],%rax[60],%rax[61],%rax[62],%rax[63],
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit];
(* and    $0xffff0000,%eax                         #! PC = 0x555555582cc7 *)
mov %rax
    [0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     %rax[16],%rax[17],%rax[18],%rax[19],%rax[20],%rax[21],%rax[22],%rax[23],
     %rax[24],%rax[25],%rax[26],%rax[27],%rax[28],%rax[29],%rax[30],%rax[31],
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit];
(* xor    %rcx,%rax                                #! PC = 0x555555582ccc *)
adds %dc %rax %rcx %rax;
(* cmp    $0x4,%esi                                #! PC = 0x555555582ccf *)
(* cmp 0x4, esi *)
nop;
(* #je     0x555555582d48 <radix_conversions+584>  #! PC = 0x555555582cd2 *)
#je     0x555555582d48 <radix_conversions+584>  #! 0x555555582cd2 = 0x555555582cd2;
(* mov    %rax,%rcx                                #! PC = 0x555555582cd4 *)
mov %rcx %rax;
(* shr    $0x8,%rcx                                #! PC = 0x555555582cd7 *)
mov %rcx
    [%rcx[8],%rcx[9],%rcx[10],%rcx[11],%rcx[12],%rcx[13],%rcx[14],%rcx[15],
     %rcx[16],%rcx[17],%rcx[18],%rcx[19],%rcx[20],%rcx[21],%rcx[22],%rcx[23],
     %rcx[24],%rcx[25],%rcx[26],%rcx[27],%rcx[28],%rcx[29],%rcx[30],%rcx[31],
     %rcx[32],%rcx[33],%rcx[34],%rcx[35],%rcx[36],%rcx[37],%rcx[38],%rcx[39],
     %rcx[40],%rcx[41],%rcx[42],%rcx[43],%rcx[44],%rcx[45],%rcx[46],%rcx[47],
     %rcx[48],%rcx[49],%rcx[50],%rcx[51],%rcx[52],%rcx[53],%rcx[54],%rcx[55],
     %rcx[56],%rcx[57],%rcx[58],%rcx[59],%rcx[60],%rcx[61],%rcx[62],%rcx[63],
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit];
(* and    %r14,%rcx                                #! PC = 0x555555582cdb *)
mov %rcx
    [0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     %rcx[16],%rcx[17],%rcx[18],%rcx[19],%rcx[20],%rcx[21],%rcx[22],%rcx[23],
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     %rcx[48],%rcx[49],%rcx[50],%rcx[51],%rcx[52],%rcx[53],%rcx[54],%rcx[55],
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit];
(* xor    %rax,%rcx                                #! PC = 0x555555582cde *)
adds %dc %rcx %rax %rcx;
(* mov    %rcx,%rax                                #! PC = 0x555555582ce1 *)
mov %rax %rcx;
(* shr    $0x8,%rax                                #! PC = 0x555555582ce4 *)
mov %rax
    [%rax[8],%rax[9],%rax[10],%rax[11],%rax[12],%rax[13],%rax[14],%rax[15],
     %rax[16],%rax[17],%rax[18],%rax[19],%rax[20],%rax[21],%rax[22],%rax[23],
     %rax[24],%rax[25],%rax[26],%rax[27],%rax[28],%rax[29],%rax[30],%rax[31],
     %rax[32],%rax[33],%rax[34],%rax[35],%rax[36],%rax[37],%rax[38],%rax[39],
     %rax[40],%rax[41],%rax[42],%rax[43],%rax[44],%rax[45],%rax[46],%rax[47],
     %rax[48],%rax[49],%rax[50],%rax[51],%rax[52],%rax[53],%rax[54],%rax[55],
     %rax[56],%rax[57],%rax[58],%rax[59],%rax[60],%rax[61],%rax[62],%rax[63],
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit];
(* and    %r13,%rax                                #! PC = 0x555555582ce8 *)
mov %rax
    [0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     %rax[8],%rax[9],%rax[10],%rax[11],%rax[12],%rax[13],%rax[14],%rax[15],
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     %rax[40],%rax[41],%rax[42],%rax[43],%rax[44],%rax[45],%rax[46],%rax[47],
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit];
(* xor    %rcx,%rax                                #! PC = 0x555555582ceb *)
adds %dc %rax %rcx %rax;
(* cmp    $0x3,%esi                                #! PC = 0x555555582cee *)
(* cmp 0x3, esi *)
nop;
(* #je     0x555555582d48 <radix_conversions+584>  #! PC = 0x555555582cf1 *)
#je     0x555555582d48 <radix_conversions+584>  #! 0x555555582cf1 = 0x555555582cf1;
(* mov    %rax,%rcx                                #! PC = 0x555555582cf3 *)
mov %rcx %rax;
(* shr    $0x4,%rcx                                #! PC = 0x555555582cf6 *)
mov %rcx
    [%rcx[4],%rcx[5],%rcx[6],%rcx[7],
     %rcx[8],%rcx[9],%rcx[10],%rcx[11],%rcx[12],%rcx[13],%rcx[14],%rcx[15],
     %rcx[16],%rcx[17],%rcx[18],%rcx[19],%rcx[20],%rcx[21],%rcx[22],%rcx[23],
     %rcx[24],%rcx[25],%rcx[26],%rcx[27],%rcx[28],%rcx[29],%rcx[30],%rcx[31],
     %rcx[32],%rcx[33],%rcx[34],%rcx[35],%rcx[36],%rcx[37],%rcx[38],%rcx[39],
     %rcx[40],%rcx[41],%rcx[42],%rcx[43],%rcx[44],%rcx[45],%rcx[46],%rcx[47],
     %rcx[48],%rcx[49],%rcx[50],%rcx[51],%rcx[52],%rcx[53],%rcx[54],%rcx[55],
     %rcx[56],%rcx[57],%rcx[58],%rcx[59],%rcx[60],%rcx[61],%rcx[62],%rcx[63],
     0@bit,0@bit,0@bit,0@bit];
(* and    %r8,%rcx                                 #! PC = 0x555555582cfa *)
mov %rcx
    [0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     %rcx[8],%rcx[9],%rcx[10],%rcx[11],0@bit,0@bit,0@bit,0@bit,
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     %rcx[24],%rcx[25],%rcx[26],%rcx[27],0@bit,0@bit,0@bit,0@bit,
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     %rcx[40],%rcx[41],%rcx[42],%rcx[43],0@bit,0@bit,0@bit,0@bit,
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     %rcx[56],%rcx[57],%rcx[58],%rcx[59],0@bit,0@bit,0@bit,0@bit];
(* xor    %rax,%rcx                                #! PC = 0x555555582cfd *)
adds %dc %rcx %rax %rcx;
(* mov    %rcx,%rax                                #! PC = 0x555555582d00 *)
mov %rax %rcx;
(* shr    $0x4,%rax                                #! PC = 0x555555582d03 *)
mov %rax
    [%rax[4],%rax[5],%rax[6],%rax[7],
     %rax[8],%rax[9],%rax[10],%rax[11],%rax[12],%rax[13],%rax[14],%rax[15],
     %rax[16],%rax[17],%rax[18],%rax[19],%rax[20],%rax[21],%rax[22],%rax[23],
     %rax[24],%rax[25],%rax[26],%rax[27],%rax[28],%rax[29],%rax[30],%rax[31],
     %rax[32],%rax[33],%rax[34],%rax[35],%rax[36],%rax[37],%rax[38],%rax[39],
     %rax[40],%rax[41],%rax[42],%rax[43],%rax[44],%rax[45],%rax[46],%rax[47],
     %rax[48],%rax[49],%rax[50],%rax[51],%rax[52],%rax[53],%rax[54],%rax[55],
     %rax[56],%rax[57],%rax[58],%rax[59],%rax[60],%rax[61],%rax[62],%rax[63],
     0@bit,0@bit,0@bit,0@bit];
(* and    %rdi,%rax                                #! PC = 0x555555582d07 *)
mov %rax
    [0@bit,0@bit,0@bit,0@bit,%rax[4],%rax[5],%rax[6],%rax[7],
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     0@bit,0@bit,0@bit,0@bit,%rax[20],%rax[21],%rax[22],%rax[23],
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     0@bit,0@bit,0@bit,0@bit,%rax[36],%rax[37],%rax[38],%rax[39],
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     0@bit,0@bit,0@bit,0@bit,%rax[52],%rax[53],%rax[54],%rax[55],
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit];
(* xor    %rcx,%rax                                #! PC = 0x555555582d0a *)
adds %dc %rax %rcx %rax;
(* cmp    $0x2,%esi                                #! PC = 0x555555582d0d *)
(* cmp 0x2, esi *)
nop;
(* #je     0x555555582d48 <radix_conversions+584>  #! PC = 0x555555582d10 *)
#je     0x555555582d48 <radix_conversions+584>  #! 0x555555582d10 = 0x555555582d10;
(* mov    %rax,%rcx                                #! PC = 0x555555582d12 *)
mov %rcx %rax;
(* shr    $0x2,%rcx                                #! PC = 0x555555582d15 *)
mov %rcx
    [%rcx[2],%rcx[3],%rcx[4],%rcx[5],%rcx[6],%rcx[7],
     %rcx[8],%rcx[9],%rcx[10],%rcx[11],%rcx[12],%rcx[13],%rcx[14],%rcx[15],
     %rcx[16],%rcx[17],%rcx[18],%rcx[19],%rcx[20],%rcx[21],%rcx[22],%rcx[23],
     %rcx[24],%rcx[25],%rcx[26],%rcx[27],%rcx[28],%rcx[29],%rcx[30],%rcx[31],
     %rcx[32],%rcx[33],%rcx[34],%rcx[35],%rcx[36],%rcx[37],%rcx[38],%rcx[39],
     %rcx[40],%rcx[41],%rcx[42],%rcx[43],%rcx[44],%rcx[45],%rcx[46],%rcx[47],
     %rcx[48],%rcx[49],%rcx[50],%rcx[51],%rcx[52],%rcx[53],%rcx[54],%rcx[55],
     %rcx[56],%rcx[57],%rcx[58],%rcx[59],%rcx[60],%rcx[61],%rcx[62],%rcx[63],
     0@bit,0@bit];
(* and    %r10,%rcx                                #! PC = 0x555555582d19 *)
mov %rcx
    [0@bit,0@bit,0@bit,0@bit,%rcx[4],%rcx[5],0@bit,0@bit,
     0@bit,0@bit,0@bit,0@bit,%rcx[12],%rcx[13],0@bit,0@bit,
     0@bit,0@bit,0@bit,0@bit,%rcx[20],%rcx[21],0@bit,0@bit,
     0@bit,0@bit,0@bit,0@bit,%rcx[28],%rcx[29],0@bit,0@bit,
     0@bit,0@bit,0@bit,0@bit,%rcx[36],%rcx[37],0@bit,0@bit,
     0@bit,0@bit,0@bit,0@bit,%rcx[44],%rcx[45],0@bit,0@bit,
     0@bit,0@bit,0@bit,0@bit,%rcx[52],%rcx[53],0@bit,0@bit,
     0@bit,0@bit,0@bit,0@bit,%rcx[60],%rcx[61],0@bit,0@bit];
(* xor    %rax,%rcx                                #! PC = 0x555555582d1c *)
adds %dc %rcx %rax %rcx;
(* mov    %rcx,%rax                                #! PC = 0x555555582d1f *)
mov %rax %rcx;
(* shr    $0x2,%rax                                #! PC = 0x555555582d22 *)
mov %rax
    [%rax[2],%rax[3],%rax[4],%rax[5],%rax[6],%rax[7],
     %rax[8],%rax[9],%rax[10],%rax[11],%rax[12],%rax[13],%rax[14],%rax[15],
     %rax[16],%rax[17],%rax[18],%rax[19],%rax[20],%rax[21],%rax[22],%rax[23],
     %rax[24],%rax[25],%rax[26],%rax[27],%rax[28],%rax[29],%rax[30],%rax[31],
     %rax[32],%rax[33],%rax[34],%rax[35],%rax[36],%rax[37],%rax[38],%rax[39],
     %rax[40],%rax[41],%rax[42],%rax[43],%rax[44],%rax[45],%rax[46],%rax[47],
     %rax[48],%rax[49],%rax[50],%rax[51],%rax[52],%rax[53],%rax[54],%rax[55],
     %rax[56],%rax[57],%rax[58],%rax[59],%rax[60],%rax[61],%rax[62],%rax[63],
     0@bit,0@bit];
(* and    %r9,%rax                                 #! PC = 0x555555582d26 *)
mov %rax
    [0@bit,0@bit,%rax[2],%rax[3],0@bit,0@bit,0@bit,0@bit,
     0@bit,0@bit,%rax[10],%rax[11],0@bit,0@bit,0@bit,0@bit,
     0@bit,0@bit,%rax[18],%rax[19],0@bit,0@bit,0@bit,0@bit,
     0@bit,0@bit,%rax[26],%rax[27],0@bit,0@bit,0@bit,0@bit,
     0@bit,0@bit,%rax[34],%rax[35],0@bit,0@bit,0@bit,0@bit,
     0@bit,0@bit,%rax[42],%rax[43],0@bit,0@bit,0@bit,0@bit,
     0@bit,0@bit,%rax[50],%rax[51],0@bit,0@bit,0@bit,0@bit,
     0@bit,0@bit,%rax[58],%rax[59],0@bit,0@bit,0@bit,0@bit];
(* xor    %rcx,%rax                                #! PC = 0x555555582d29 *)
adds %dc %rax %rcx %rax;
(* test   %esi,%esi                                #! PC = 0x555555582d2c *)
(* test esi, esi *)
nop;
(* #jne    0x555555582d48 <radix_conversions+584>  #! PC = 0x555555582d2e *)
#jne    0x555555582d48 <radix_conversions+584>  #! 0x555555582d2e = 0x555555582d2e;
(* mov    %rax,%rcx                                #! PC = 0x555555582d30 *)
mov %rcx %rax;
(* shr    $1,%rcx                                  #! PC = 0x555555582d33 *)
mov %rcx
    [%rcx[1],%rcx[2],%rcx[3],%rcx[4],%rcx[5],%rcx[6],%rcx[7],
     %rcx[8],%rcx[9],%rcx[10],%rcx[11],%rcx[12],%rcx[13],%rcx[14],%rcx[15],
     %rcx[16],%rcx[17],%rcx[18],%rcx[19],%rcx[20],%rcx[21],%rcx[22],%rcx[23],
     %rcx[24],%rcx[25],%rcx[26],%rcx[27],%rcx[28],%rcx[29],%rcx[30],%rcx[31],
     %rcx[32],%rcx[33],%rcx[34],%rcx[35],%rcx[36],%rcx[37],%rcx[38],%rcx[39],
     %rcx[40],%rcx[41],%rcx[42],%rcx[43],%rcx[44],%rcx[45],%rcx[46],%rcx[47],
     %rcx[48],%rcx[49],%rcx[50],%rcx[51],%rcx[52],%rcx[53],%rcx[54],%rcx[55],
     %rcx[56],%rcx[57],%rcx[58],%rcx[59],%rcx[60],%rcx[61],%rcx[62],%rcx[63],
     0@bit];
(* and    %r15,%rcx                                #! PC = 0x555555582d36 *)
mov %rcx
    [0@bit,0@bit,%rcx[2],0@bit,0@bit,0@bit,%rcx[6],0@bit,
     0@bit,0@bit,%rcx[10],0@bit,0@bit,0@bit,%rcx[14],0@bit,
     0@bit,0@bit,%rcx[18],0@bit,0@bit,0@bit,%rcx[22],0@bit,
     0@bit,0@bit,%rcx[26],0@bit,0@bit,0@bit,%rcx[30],0@bit,
     0@bit,0@bit,%rcx[34],0@bit,0@bit,0@bit,%rcx[38],0@bit,
     0@bit,0@bit,%rcx[42],0@bit,0@bit,0@bit,%rcx[46],0@bit,
     0@bit,0@bit,%rcx[50],0@bit,0@bit,0@bit,%rcx[54],0@bit,
     0@bit,0@bit,%rcx[58],0@bit,0@bit,0@bit,%rcx[62],0@bit];
(* xor    %rax,%rcx                                #! PC = 0x555555582d39 *)
adds %dc %rcx %rax %rcx;
(* mov    %rcx,%rax                                #! PC = 0x555555582d3c *)
mov %rax %rcx;
(* shr    $1,%rax                                  #! PC = 0x555555582d3f *)
mov %rax
    [%rax[1],%rax[2],%rax[3],%rax[4],%rax[5],%rax[6],%rax[7],
     %rax[8],%rax[9],%rax[10],%rax[11],%rax[12],%rax[13],%rax[14],%rax[15],
     %rax[16],%rax[17],%rax[18],%rax[19],%rax[20],%rax[21],%rax[22],%rax[23],
     %rax[24],%rax[25],%rax[26],%rax[27],%rax[28],%rax[29],%rax[30],%rax[31],
     %rax[32],%rax[33],%rax[34],%rax[35],%rax[36],%rax[37],%rax[38],%rax[39],
     %rax[40],%rax[41],%rax[42],%rax[43],%rax[44],%rax[45],%rax[46],%rax[47],
     %rax[48],%rax[49],%rax[50],%rax[51],%rax[52],%rax[53],%rax[54],%rax[55],
     %rax[56],%rax[57],%rax[58],%rax[59],%rax[60],%rax[61],%rax[62],%rax[63],
     0@bit];
(* and    %r11,%rax                                #! PC = 0x555555582d42 *)
mov %rax
    [0@bit,%rax[1],0@bit,0@bit,0@bit,%rax[5],0@bit,0@bit,
     0@bit,%rax[9],0@bit,0@bit,0@bit,%rax[13],0@bit,0@bit,
     0@bit,%rax[17],0@bit,0@bit,0@bit,%rax[21],0@bit,0@bit,
     0@bit,%rax[25],0@bit,0@bit,0@bit,%rax[29],0@bit,0@bit,
     0@bit,%rax[33],0@bit,0@bit,0@bit,%rax[37],0@bit,0@bit,
     0@bit,%rax[41],0@bit,0@bit,0@bit,%rax[45],0@bit,0@bit,
     0@bit,%rax[49],0@bit,0@bit,0@bit,%rax[53],0@bit,0@bit,
     0@bit,%rax[57],0@bit,0@bit,0@bit,%rax[61],0@bit,0@bit];
(* xor    %rcx,%rax                                #! PC = 0x555555582d45 *)
adds %dc %rax %rcx %rax;
(* mov    %rax,(%rdx)                              #! EA = L0x7ffffff50ca8; PC = 0x555555582d48 *)
mov %L0x7ffffff50ca8 %rax;
(* add    $0x8,%rdx                                #! PC = 0x555555582d4b *)
(* add $0x8, rdx *)
nop;
(* cmp    %rdx,%r12                                #! PC = 0x555555582d4f *)
(* cmp rdx, r12 *)
nop;
(* #jne    0x555555582cb0 <radix_conversions+432>  #! PC = 0x555555582d52 *)
#jne    0x555555582cb0 <radix_conversions+432>  #! 0x555555582d52 = 0x555555582d52;
(* mov    (%rdx),%rax                              #! EA = L0x7ffffff50cb0; Value = 0xa32e094e8272750c; PC = 0x555555582cb0 *)
mov %rax %L0x7ffffff50cb0;
(* mov    %rax,%rcx                                #! PC = 0x555555582cb3 *)
mov %rcx %rax;
(* shr    $0x10,%rcx                               #! PC = 0x555555582cb6 *)
mov %rcx
    [%rcx[16],%rcx[17],%rcx[18],%rcx[19],%rcx[20],%rcx[21],%rcx[22],%rcx[23],
     %rcx[24],%rcx[25],%rcx[26],%rcx[27],%rcx[28],%rcx[29],%rcx[30],%rcx[31],
     %rcx[32],%rcx[33],%rcx[34],%rcx[35],%rcx[36],%rcx[37],%rcx[38],%rcx[39],
     %rcx[40],%rcx[41],%rcx[42],%rcx[43],%rcx[44],%rcx[45],%rcx[46],%rcx[47],
     %rcx[48],%rcx[49],%rcx[50],%rcx[51],%rcx[52],%rcx[53],%rcx[54],%rcx[55],
     %rcx[56],%rcx[57],%rcx[58],%rcx[59],%rcx[60],%rcx[61],%rcx[62],%rcx[63],
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit];
(* and    %rbx,%rcx                                #! PC = 0x555555582cba *)
mov %rcx
    [0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     %rcx[32],%rcx[33],%rcx[34],%rcx[35],%rcx[36],%rcx[37],%rcx[38],%rcx[39],
     %rcx[40],%rcx[41],%rcx[42],%rcx[43],%rcx[44],%rcx[45],%rcx[46],%rcx[47],
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit];
(* xor    %rax,%rcx                                #! PC = 0x555555582cbd *)
adds %dc %rcx %rax %rcx;
(* mov    %rcx,%rax                                #! PC = 0x555555582cc0 *)
mov %rax %rcx;
(* shr    $0x10,%rax                               #! PC = 0x555555582cc3 *)
mov %rax
    [%rax[16],%rax[17],%rax[18],%rax[19],%rax[20],%rax[21],%rax[22],%rax[23],
     %rax[24],%rax[25],%rax[26],%rax[27],%rax[28],%rax[29],%rax[30],%rax[31],
     %rax[32],%rax[33],%rax[34],%rax[35],%rax[36],%rax[37],%rax[38],%rax[39],
     %rax[40],%rax[41],%rax[42],%rax[43],%rax[44],%rax[45],%rax[46],%rax[47],
     %rax[48],%rax[49],%rax[50],%rax[51],%rax[52],%rax[53],%rax[54],%rax[55],
     %rax[56],%rax[57],%rax[58],%rax[59],%rax[60],%rax[61],%rax[62],%rax[63],
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit];
(* and    $0xffff0000,%eax                         #! PC = 0x555555582cc7 *)
mov %rax
    [0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     %rax[16],%rax[17],%rax[18],%rax[19],%rax[20],%rax[21],%rax[22],%rax[23],
     %rax[24],%rax[25],%rax[26],%rax[27],%rax[28],%rax[29],%rax[30],%rax[31],
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit];
(* xor    %rcx,%rax                                #! PC = 0x555555582ccc *)
adds %dc %rax %rcx %rax;
(* cmp    $0x4,%esi                                #! PC = 0x555555582ccf *)
(* cmp 0x4, esi *)
nop;
(* #je     0x555555582d48 <radix_conversions+584>  #! PC = 0x555555582cd2 *)
#je     0x555555582d48 <radix_conversions+584>  #! 0x555555582cd2 = 0x555555582cd2;
(* mov    %rax,%rcx                                #! PC = 0x555555582cd4 *)
mov %rcx %rax;
(* shr    $0x8,%rcx                                #! PC = 0x555555582cd7 *)
mov %rcx
    [%rcx[8],%rcx[9],%rcx[10],%rcx[11],%rcx[12],%rcx[13],%rcx[14],%rcx[15],
     %rcx[16],%rcx[17],%rcx[18],%rcx[19],%rcx[20],%rcx[21],%rcx[22],%rcx[23],
     %rcx[24],%rcx[25],%rcx[26],%rcx[27],%rcx[28],%rcx[29],%rcx[30],%rcx[31],
     %rcx[32],%rcx[33],%rcx[34],%rcx[35],%rcx[36],%rcx[37],%rcx[38],%rcx[39],
     %rcx[40],%rcx[41],%rcx[42],%rcx[43],%rcx[44],%rcx[45],%rcx[46],%rcx[47],
     %rcx[48],%rcx[49],%rcx[50],%rcx[51],%rcx[52],%rcx[53],%rcx[54],%rcx[55],
     %rcx[56],%rcx[57],%rcx[58],%rcx[59],%rcx[60],%rcx[61],%rcx[62],%rcx[63],
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit];
(* and    %r14,%rcx                                #! PC = 0x555555582cdb *)
mov %rcx
    [0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     %rcx[16],%rcx[17],%rcx[18],%rcx[19],%rcx[20],%rcx[21],%rcx[22],%rcx[23],
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     %rcx[48],%rcx[49],%rcx[50],%rcx[51],%rcx[52],%rcx[53],%rcx[54],%rcx[55],
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit];
(* xor    %rax,%rcx                                #! PC = 0x555555582cde *)
adds %dc %rcx %rax %rcx;
(* mov    %rcx,%rax                                #! PC = 0x555555582ce1 *)
mov %rax %rcx;
(* shr    $0x8,%rax                                #! PC = 0x555555582ce4 *)
mov %rax
    [%rax[8],%rax[9],%rax[10],%rax[11],%rax[12],%rax[13],%rax[14],%rax[15],
     %rax[16],%rax[17],%rax[18],%rax[19],%rax[20],%rax[21],%rax[22],%rax[23],
     %rax[24],%rax[25],%rax[26],%rax[27],%rax[28],%rax[29],%rax[30],%rax[31],
     %rax[32],%rax[33],%rax[34],%rax[35],%rax[36],%rax[37],%rax[38],%rax[39],
     %rax[40],%rax[41],%rax[42],%rax[43],%rax[44],%rax[45],%rax[46],%rax[47],
     %rax[48],%rax[49],%rax[50],%rax[51],%rax[52],%rax[53],%rax[54],%rax[55],
     %rax[56],%rax[57],%rax[58],%rax[59],%rax[60],%rax[61],%rax[62],%rax[63],
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit];
(* and    %r13,%rax                                #! PC = 0x555555582ce8 *)
mov %rax
    [0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     %rax[8],%rax[9],%rax[10],%rax[11],%rax[12],%rax[13],%rax[14],%rax[15],
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     %rax[40],%rax[41],%rax[42],%rax[43],%rax[44],%rax[45],%rax[46],%rax[47],
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit];
(* xor    %rcx,%rax                                #! PC = 0x555555582ceb *)
adds %dc %rax %rcx %rax;
(* cmp    $0x3,%esi                                #! PC = 0x555555582cee *)
(* cmp 0x3, esi *)
nop;
(* #je     0x555555582d48 <radix_conversions+584>  #! PC = 0x555555582cf1 *)
#je     0x555555582d48 <radix_conversions+584>  #! 0x555555582cf1 = 0x555555582cf1;
(* mov    %rax,%rcx                                #! PC = 0x555555582cf3 *)
mov %rcx %rax;
(* shr    $0x4,%rcx                                #! PC = 0x555555582cf6 *)
mov %rcx
    [%rcx[4],%rcx[5],%rcx[6],%rcx[7],
     %rcx[8],%rcx[9],%rcx[10],%rcx[11],%rcx[12],%rcx[13],%rcx[14],%rcx[15],
     %rcx[16],%rcx[17],%rcx[18],%rcx[19],%rcx[20],%rcx[21],%rcx[22],%rcx[23],
     %rcx[24],%rcx[25],%rcx[26],%rcx[27],%rcx[28],%rcx[29],%rcx[30],%rcx[31],
     %rcx[32],%rcx[33],%rcx[34],%rcx[35],%rcx[36],%rcx[37],%rcx[38],%rcx[39],
     %rcx[40],%rcx[41],%rcx[42],%rcx[43],%rcx[44],%rcx[45],%rcx[46],%rcx[47],
     %rcx[48],%rcx[49],%rcx[50],%rcx[51],%rcx[52],%rcx[53],%rcx[54],%rcx[55],
     %rcx[56],%rcx[57],%rcx[58],%rcx[59],%rcx[60],%rcx[61],%rcx[62],%rcx[63],
     0@bit,0@bit,0@bit,0@bit];
(* and    %r8,%rcx                                 #! PC = 0x555555582cfa *)
mov %rcx
    [0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     %rcx[8],%rcx[9],%rcx[10],%rcx[11],0@bit,0@bit,0@bit,0@bit,
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     %rcx[24],%rcx[25],%rcx[26],%rcx[27],0@bit,0@bit,0@bit,0@bit,
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     %rcx[40],%rcx[41],%rcx[42],%rcx[43],0@bit,0@bit,0@bit,0@bit,
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     %rcx[56],%rcx[57],%rcx[58],%rcx[59],0@bit,0@bit,0@bit,0@bit];
(* xor    %rax,%rcx                                #! PC = 0x555555582cfd *)
adds %dc %rcx %rax %rcx;
(* mov    %rcx,%rax                                #! PC = 0x555555582d00 *)
mov %rax %rcx;
(* shr    $0x4,%rax                                #! PC = 0x555555582d03 *)
mov %rax
    [%rax[4],%rax[5],%rax[6],%rax[7],
     %rax[8],%rax[9],%rax[10],%rax[11],%rax[12],%rax[13],%rax[14],%rax[15],
     %rax[16],%rax[17],%rax[18],%rax[19],%rax[20],%rax[21],%rax[22],%rax[23],
     %rax[24],%rax[25],%rax[26],%rax[27],%rax[28],%rax[29],%rax[30],%rax[31],
     %rax[32],%rax[33],%rax[34],%rax[35],%rax[36],%rax[37],%rax[38],%rax[39],
     %rax[40],%rax[41],%rax[42],%rax[43],%rax[44],%rax[45],%rax[46],%rax[47],
     %rax[48],%rax[49],%rax[50],%rax[51],%rax[52],%rax[53],%rax[54],%rax[55],
     %rax[56],%rax[57],%rax[58],%rax[59],%rax[60],%rax[61],%rax[62],%rax[63],
     0@bit,0@bit,0@bit,0@bit];
(* and    %rdi,%rax                                #! PC = 0x555555582d07 *)
mov %rax
    [0@bit,0@bit,0@bit,0@bit,%rax[4],%rax[5],%rax[6],%rax[7],
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     0@bit,0@bit,0@bit,0@bit,%rax[20],%rax[21],%rax[22],%rax[23],
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     0@bit,0@bit,0@bit,0@bit,%rax[36],%rax[37],%rax[38],%rax[39],
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     0@bit,0@bit,0@bit,0@bit,%rax[52],%rax[53],%rax[54],%rax[55],
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit];
(* xor    %rcx,%rax                                #! PC = 0x555555582d0a *)
adds %dc %rax %rcx %rax;
(* cmp    $0x2,%esi                                #! PC = 0x555555582d0d *)
(* cmp 0x2, esi *)
nop;
(* #je     0x555555582d48 <radix_conversions+584>  #! PC = 0x555555582d10 *)
#je     0x555555582d48 <radix_conversions+584>  #! 0x555555582d10 = 0x555555582d10;
(* mov    %rax,%rcx                                #! PC = 0x555555582d12 *)
mov %rcx %rax;
(* shr    $0x2,%rcx                                #! PC = 0x555555582d15 *)
mov %rcx
    [%rcx[2],%rcx[3],%rcx[4],%rcx[5],%rcx[6],%rcx[7],
     %rcx[8],%rcx[9],%rcx[10],%rcx[11],%rcx[12],%rcx[13],%rcx[14],%rcx[15],
     %rcx[16],%rcx[17],%rcx[18],%rcx[19],%rcx[20],%rcx[21],%rcx[22],%rcx[23],
     %rcx[24],%rcx[25],%rcx[26],%rcx[27],%rcx[28],%rcx[29],%rcx[30],%rcx[31],
     %rcx[32],%rcx[33],%rcx[34],%rcx[35],%rcx[36],%rcx[37],%rcx[38],%rcx[39],
     %rcx[40],%rcx[41],%rcx[42],%rcx[43],%rcx[44],%rcx[45],%rcx[46],%rcx[47],
     %rcx[48],%rcx[49],%rcx[50],%rcx[51],%rcx[52],%rcx[53],%rcx[54],%rcx[55],
     %rcx[56],%rcx[57],%rcx[58],%rcx[59],%rcx[60],%rcx[61],%rcx[62],%rcx[63],
     0@bit,0@bit];
(* and    %r10,%rcx                                #! PC = 0x555555582d19 *)
mov %rcx
    [0@bit,0@bit,0@bit,0@bit,%rcx[4],%rcx[5],0@bit,0@bit,
     0@bit,0@bit,0@bit,0@bit,%rcx[12],%rcx[13],0@bit,0@bit,
     0@bit,0@bit,0@bit,0@bit,%rcx[20],%rcx[21],0@bit,0@bit,
     0@bit,0@bit,0@bit,0@bit,%rcx[28],%rcx[29],0@bit,0@bit,
     0@bit,0@bit,0@bit,0@bit,%rcx[36],%rcx[37],0@bit,0@bit,
     0@bit,0@bit,0@bit,0@bit,%rcx[44],%rcx[45],0@bit,0@bit,
     0@bit,0@bit,0@bit,0@bit,%rcx[52],%rcx[53],0@bit,0@bit,
     0@bit,0@bit,0@bit,0@bit,%rcx[60],%rcx[61],0@bit,0@bit];
(* xor    %rax,%rcx                                #! PC = 0x555555582d1c *)
adds %dc %rcx %rax %rcx;
(* mov    %rcx,%rax                                #! PC = 0x555555582d1f *)
mov %rax %rcx;
(* shr    $0x2,%rax                                #! PC = 0x555555582d22 *)
mov %rax
    [%rax[2],%rax[3],%rax[4],%rax[5],%rax[6],%rax[7],
     %rax[8],%rax[9],%rax[10],%rax[11],%rax[12],%rax[13],%rax[14],%rax[15],
     %rax[16],%rax[17],%rax[18],%rax[19],%rax[20],%rax[21],%rax[22],%rax[23],
     %rax[24],%rax[25],%rax[26],%rax[27],%rax[28],%rax[29],%rax[30],%rax[31],
     %rax[32],%rax[33],%rax[34],%rax[35],%rax[36],%rax[37],%rax[38],%rax[39],
     %rax[40],%rax[41],%rax[42],%rax[43],%rax[44],%rax[45],%rax[46],%rax[47],
     %rax[48],%rax[49],%rax[50],%rax[51],%rax[52],%rax[53],%rax[54],%rax[55],
     %rax[56],%rax[57],%rax[58],%rax[59],%rax[60],%rax[61],%rax[62],%rax[63],
     0@bit,0@bit];
(* and    %r9,%rax                                 #! PC = 0x555555582d26 *)
mov %rax
    [0@bit,0@bit,%rax[2],%rax[3],0@bit,0@bit,0@bit,0@bit,
     0@bit,0@bit,%rax[10],%rax[11],0@bit,0@bit,0@bit,0@bit,
     0@bit,0@bit,%rax[18],%rax[19],0@bit,0@bit,0@bit,0@bit,
     0@bit,0@bit,%rax[26],%rax[27],0@bit,0@bit,0@bit,0@bit,
     0@bit,0@bit,%rax[34],%rax[35],0@bit,0@bit,0@bit,0@bit,
     0@bit,0@bit,%rax[42],%rax[43],0@bit,0@bit,0@bit,0@bit,
     0@bit,0@bit,%rax[50],%rax[51],0@bit,0@bit,0@bit,0@bit,
     0@bit,0@bit,%rax[58],%rax[59],0@bit,0@bit,0@bit,0@bit];
(* xor    %rcx,%rax                                #! PC = 0x555555582d29 *)
adds %dc %rax %rcx %rax;
(* test   %esi,%esi                                #! PC = 0x555555582d2c *)
(* test esi, esi *)
nop;
(* #jne    0x555555582d48 <radix_conversions+584>  #! PC = 0x555555582d2e *)
#jne    0x555555582d48 <radix_conversions+584>  #! 0x555555582d2e = 0x555555582d2e;
(* mov    %rax,%rcx                                #! PC = 0x555555582d30 *)
mov %rcx %rax;
(* shr    $1,%rcx                                  #! PC = 0x555555582d33 *)
mov %rcx
    [%rcx[1],%rcx[2],%rcx[3],%rcx[4],%rcx[5],%rcx[6],%rcx[7],
     %rcx[8],%rcx[9],%rcx[10],%rcx[11],%rcx[12],%rcx[13],%rcx[14],%rcx[15],
     %rcx[16],%rcx[17],%rcx[18],%rcx[19],%rcx[20],%rcx[21],%rcx[22],%rcx[23],
     %rcx[24],%rcx[25],%rcx[26],%rcx[27],%rcx[28],%rcx[29],%rcx[30],%rcx[31],
     %rcx[32],%rcx[33],%rcx[34],%rcx[35],%rcx[36],%rcx[37],%rcx[38],%rcx[39],
     %rcx[40],%rcx[41],%rcx[42],%rcx[43],%rcx[44],%rcx[45],%rcx[46],%rcx[47],
     %rcx[48],%rcx[49],%rcx[50],%rcx[51],%rcx[52],%rcx[53],%rcx[54],%rcx[55],
     %rcx[56],%rcx[57],%rcx[58],%rcx[59],%rcx[60],%rcx[61],%rcx[62],%rcx[63],
     0@bit];
(* and    %r15,%rcx                                #! PC = 0x555555582d36 *)
mov %rcx
    [0@bit,0@bit,%rcx[2],0@bit,0@bit,0@bit,%rcx[6],0@bit,
     0@bit,0@bit,%rcx[10],0@bit,0@bit,0@bit,%rcx[14],0@bit,
     0@bit,0@bit,%rcx[18],0@bit,0@bit,0@bit,%rcx[22],0@bit,
     0@bit,0@bit,%rcx[26],0@bit,0@bit,0@bit,%rcx[30],0@bit,
     0@bit,0@bit,%rcx[34],0@bit,0@bit,0@bit,%rcx[38],0@bit,
     0@bit,0@bit,%rcx[42],0@bit,0@bit,0@bit,%rcx[46],0@bit,
     0@bit,0@bit,%rcx[50],0@bit,0@bit,0@bit,%rcx[54],0@bit,
     0@bit,0@bit,%rcx[58],0@bit,0@bit,0@bit,%rcx[62],0@bit];
(* xor    %rax,%rcx                                #! PC = 0x555555582d39 *)
adds %dc %rcx %rax %rcx;
(* mov    %rcx,%rax                                #! PC = 0x555555582d3c *)
mov %rax %rcx;
(* shr    $1,%rax                                  #! PC = 0x555555582d3f *)
mov %rax
    [%rax[1],%rax[2],%rax[3],%rax[4],%rax[5],%rax[6],%rax[7],
     %rax[8],%rax[9],%rax[10],%rax[11],%rax[12],%rax[13],%rax[14],%rax[15],
     %rax[16],%rax[17],%rax[18],%rax[19],%rax[20],%rax[21],%rax[22],%rax[23],
     %rax[24],%rax[25],%rax[26],%rax[27],%rax[28],%rax[29],%rax[30],%rax[31],
     %rax[32],%rax[33],%rax[34],%rax[35],%rax[36],%rax[37],%rax[38],%rax[39],
     %rax[40],%rax[41],%rax[42],%rax[43],%rax[44],%rax[45],%rax[46],%rax[47],
     %rax[48],%rax[49],%rax[50],%rax[51],%rax[52],%rax[53],%rax[54],%rax[55],
     %rax[56],%rax[57],%rax[58],%rax[59],%rax[60],%rax[61],%rax[62],%rax[63],
     0@bit];
(* and    %r11,%rax                                #! PC = 0x555555582d42 *)
mov %rax
    [0@bit,%rax[1],0@bit,0@bit,0@bit,%rax[5],0@bit,0@bit,
     0@bit,%rax[9],0@bit,0@bit,0@bit,%rax[13],0@bit,0@bit,
     0@bit,%rax[17],0@bit,0@bit,0@bit,%rax[21],0@bit,0@bit,
     0@bit,%rax[25],0@bit,0@bit,0@bit,%rax[29],0@bit,0@bit,
     0@bit,%rax[33],0@bit,0@bit,0@bit,%rax[37],0@bit,0@bit,
     0@bit,%rax[41],0@bit,0@bit,0@bit,%rax[45],0@bit,0@bit,
     0@bit,%rax[49],0@bit,0@bit,0@bit,%rax[53],0@bit,0@bit,
     0@bit,%rax[57],0@bit,0@bit,0@bit,%rax[61],0@bit,0@bit];
(* xor    %rcx,%rax                                #! PC = 0x555555582d45 *)
adds %dc %rax %rcx %rax;
(* mov    %rax,(%rdx)                              #! EA = L0x7ffffff50cb0; PC = 0x555555582d48 *)
mov %L0x7ffffff50cb0 %rax;
(* add    $0x8,%rdx                                #! PC = 0x555555582d4b *)
(* add $0x8, rdx *)
nop;
(* cmp    %rdx,%r12                                #! PC = 0x555555582d4f *)
(* cmp rdx, r12 *)
nop;
(* #jne    0x555555582cb0 <radix_conversions+432>  #! PC = 0x555555582d52 *)
#jne    0x555555582cb0 <radix_conversions+432>  #! 0x555555582d52 = 0x555555582d52;
(* mov    (%rdx),%rax                              #! EA = L0x7ffffff50cb8; Value = 0xd960b301701fad7f; PC = 0x555555582cb0 *)
mov %rax %L0x7ffffff50cb8;
(* mov    %rax,%rcx                                #! PC = 0x555555582cb3 *)
mov %rcx %rax;
(* shr    $0x10,%rcx                               #! PC = 0x555555582cb6 *)
mov %rcx
    [%rcx[16],%rcx[17],%rcx[18],%rcx[19],%rcx[20],%rcx[21],%rcx[22],%rcx[23],
     %rcx[24],%rcx[25],%rcx[26],%rcx[27],%rcx[28],%rcx[29],%rcx[30],%rcx[31],
     %rcx[32],%rcx[33],%rcx[34],%rcx[35],%rcx[36],%rcx[37],%rcx[38],%rcx[39],
     %rcx[40],%rcx[41],%rcx[42],%rcx[43],%rcx[44],%rcx[45],%rcx[46],%rcx[47],
     %rcx[48],%rcx[49],%rcx[50],%rcx[51],%rcx[52],%rcx[53],%rcx[54],%rcx[55],
     %rcx[56],%rcx[57],%rcx[58],%rcx[59],%rcx[60],%rcx[61],%rcx[62],%rcx[63],
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit];
(* and    %rbx,%rcx                                #! PC = 0x555555582cba *)
mov %rcx
    [0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     %rcx[32],%rcx[33],%rcx[34],%rcx[35],%rcx[36],%rcx[37],%rcx[38],%rcx[39],
     %rcx[40],%rcx[41],%rcx[42],%rcx[43],%rcx[44],%rcx[45],%rcx[46],%rcx[47],
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit];
(* xor    %rax,%rcx                                #! PC = 0x555555582cbd *)
adds %dc %rcx %rax %rcx;
(* mov    %rcx,%rax                                #! PC = 0x555555582cc0 *)
mov %rax %rcx;
(* shr    $0x10,%rax                               #! PC = 0x555555582cc3 *)
mov %rax
    [%rax[16],%rax[17],%rax[18],%rax[19],%rax[20],%rax[21],%rax[22],%rax[23],
     %rax[24],%rax[25],%rax[26],%rax[27],%rax[28],%rax[29],%rax[30],%rax[31],
     %rax[32],%rax[33],%rax[34],%rax[35],%rax[36],%rax[37],%rax[38],%rax[39],
     %rax[40],%rax[41],%rax[42],%rax[43],%rax[44],%rax[45],%rax[46],%rax[47],
     %rax[48],%rax[49],%rax[50],%rax[51],%rax[52],%rax[53],%rax[54],%rax[55],
     %rax[56],%rax[57],%rax[58],%rax[59],%rax[60],%rax[61],%rax[62],%rax[63],
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit];
(* and    $0xffff0000,%eax                         #! PC = 0x555555582cc7 *)
mov %rax
    [0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     %rax[16],%rax[17],%rax[18],%rax[19],%rax[20],%rax[21],%rax[22],%rax[23],
     %rax[24],%rax[25],%rax[26],%rax[27],%rax[28],%rax[29],%rax[30],%rax[31],
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit];
(* xor    %rcx,%rax                                #! PC = 0x555555582ccc *)
adds %dc %rax %rcx %rax;
(* cmp    $0x4,%esi                                #! PC = 0x555555582ccf *)
(* cmp 0x4, esi *)
nop;
(* #je     0x555555582d48 <radix_conversions+584>  #! PC = 0x555555582cd2 *)
#je     0x555555582d48 <radix_conversions+584>  #! 0x555555582cd2 = 0x555555582cd2;
(* mov    %rax,%rcx                                #! PC = 0x555555582cd4 *)
mov %rcx %rax;
(* shr    $0x8,%rcx                                #! PC = 0x555555582cd7 *)
mov %rcx
    [%rcx[8],%rcx[9],%rcx[10],%rcx[11],%rcx[12],%rcx[13],%rcx[14],%rcx[15],
     %rcx[16],%rcx[17],%rcx[18],%rcx[19],%rcx[20],%rcx[21],%rcx[22],%rcx[23],
     %rcx[24],%rcx[25],%rcx[26],%rcx[27],%rcx[28],%rcx[29],%rcx[30],%rcx[31],
     %rcx[32],%rcx[33],%rcx[34],%rcx[35],%rcx[36],%rcx[37],%rcx[38],%rcx[39],
     %rcx[40],%rcx[41],%rcx[42],%rcx[43],%rcx[44],%rcx[45],%rcx[46],%rcx[47],
     %rcx[48],%rcx[49],%rcx[50],%rcx[51],%rcx[52],%rcx[53],%rcx[54],%rcx[55],
     %rcx[56],%rcx[57],%rcx[58],%rcx[59],%rcx[60],%rcx[61],%rcx[62],%rcx[63],
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit];
(* and    %r14,%rcx                                #! PC = 0x555555582cdb *)
mov %rcx
    [0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     %rcx[16],%rcx[17],%rcx[18],%rcx[19],%rcx[20],%rcx[21],%rcx[22],%rcx[23],
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     %rcx[48],%rcx[49],%rcx[50],%rcx[51],%rcx[52],%rcx[53],%rcx[54],%rcx[55],
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit];
(* xor    %rax,%rcx                                #! PC = 0x555555582cde *)
adds %dc %rcx %rax %rcx;
(* mov    %rcx,%rax                                #! PC = 0x555555582ce1 *)
mov %rax %rcx;
(* shr    $0x8,%rax                                #! PC = 0x555555582ce4 *)
mov %rax
    [%rax[8],%rax[9],%rax[10],%rax[11],%rax[12],%rax[13],%rax[14],%rax[15],
     %rax[16],%rax[17],%rax[18],%rax[19],%rax[20],%rax[21],%rax[22],%rax[23],
     %rax[24],%rax[25],%rax[26],%rax[27],%rax[28],%rax[29],%rax[30],%rax[31],
     %rax[32],%rax[33],%rax[34],%rax[35],%rax[36],%rax[37],%rax[38],%rax[39],
     %rax[40],%rax[41],%rax[42],%rax[43],%rax[44],%rax[45],%rax[46],%rax[47],
     %rax[48],%rax[49],%rax[50],%rax[51],%rax[52],%rax[53],%rax[54],%rax[55],
     %rax[56],%rax[57],%rax[58],%rax[59],%rax[60],%rax[61],%rax[62],%rax[63],
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit];
(* and    %r13,%rax                                #! PC = 0x555555582ce8 *)
mov %rax
    [0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     %rax[8],%rax[9],%rax[10],%rax[11],%rax[12],%rax[13],%rax[14],%rax[15],
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     %rax[40],%rax[41],%rax[42],%rax[43],%rax[44],%rax[45],%rax[46],%rax[47],
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit];
(* xor    %rcx,%rax                                #! PC = 0x555555582ceb *)
adds %dc %rax %rcx %rax;
(* cmp    $0x3,%esi                                #! PC = 0x555555582cee *)
(* cmp 0x3, esi *)
nop;
(* #je     0x555555582d48 <radix_conversions+584>  #! PC = 0x555555582cf1 *)
#je     0x555555582d48 <radix_conversions+584>  #! 0x555555582cf1 = 0x555555582cf1;
(* mov    %rax,%rcx                                #! PC = 0x555555582cf3 *)
mov %rcx %rax;
(* shr    $0x4,%rcx                                #! PC = 0x555555582cf6 *)
mov %rcx
    [%rcx[4],%rcx[5],%rcx[6],%rcx[7],
     %rcx[8],%rcx[9],%rcx[10],%rcx[11],%rcx[12],%rcx[13],%rcx[14],%rcx[15],
     %rcx[16],%rcx[17],%rcx[18],%rcx[19],%rcx[20],%rcx[21],%rcx[22],%rcx[23],
     %rcx[24],%rcx[25],%rcx[26],%rcx[27],%rcx[28],%rcx[29],%rcx[30],%rcx[31],
     %rcx[32],%rcx[33],%rcx[34],%rcx[35],%rcx[36],%rcx[37],%rcx[38],%rcx[39],
     %rcx[40],%rcx[41],%rcx[42],%rcx[43],%rcx[44],%rcx[45],%rcx[46],%rcx[47],
     %rcx[48],%rcx[49],%rcx[50],%rcx[51],%rcx[52],%rcx[53],%rcx[54],%rcx[55],
     %rcx[56],%rcx[57],%rcx[58],%rcx[59],%rcx[60],%rcx[61],%rcx[62],%rcx[63],
     0@bit,0@bit,0@bit,0@bit];
(* and    %r8,%rcx                                 #! PC = 0x555555582cfa *)
mov %rcx
    [0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     %rcx[8],%rcx[9],%rcx[10],%rcx[11],0@bit,0@bit,0@bit,0@bit,
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     %rcx[24],%rcx[25],%rcx[26],%rcx[27],0@bit,0@bit,0@bit,0@bit,
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     %rcx[40],%rcx[41],%rcx[42],%rcx[43],0@bit,0@bit,0@bit,0@bit,
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     %rcx[56],%rcx[57],%rcx[58],%rcx[59],0@bit,0@bit,0@bit,0@bit];
(* xor    %rax,%rcx                                #! PC = 0x555555582cfd *)
adds %dc %rcx %rax %rcx;
(* mov    %rcx,%rax                                #! PC = 0x555555582d00 *)
mov %rax %rcx;
(* shr    $0x4,%rax                                #! PC = 0x555555582d03 *)
mov %rax
    [%rax[4],%rax[5],%rax[6],%rax[7],
     %rax[8],%rax[9],%rax[10],%rax[11],%rax[12],%rax[13],%rax[14],%rax[15],
     %rax[16],%rax[17],%rax[18],%rax[19],%rax[20],%rax[21],%rax[22],%rax[23],
     %rax[24],%rax[25],%rax[26],%rax[27],%rax[28],%rax[29],%rax[30],%rax[31],
     %rax[32],%rax[33],%rax[34],%rax[35],%rax[36],%rax[37],%rax[38],%rax[39],
     %rax[40],%rax[41],%rax[42],%rax[43],%rax[44],%rax[45],%rax[46],%rax[47],
     %rax[48],%rax[49],%rax[50],%rax[51],%rax[52],%rax[53],%rax[54],%rax[55],
     %rax[56],%rax[57],%rax[58],%rax[59],%rax[60],%rax[61],%rax[62],%rax[63],
     0@bit,0@bit,0@bit,0@bit];
(* and    %rdi,%rax                                #! PC = 0x555555582d07 *)
mov %rax
    [0@bit,0@bit,0@bit,0@bit,%rax[4],%rax[5],%rax[6],%rax[7],
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     0@bit,0@bit,0@bit,0@bit,%rax[20],%rax[21],%rax[22],%rax[23],
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     0@bit,0@bit,0@bit,0@bit,%rax[36],%rax[37],%rax[38],%rax[39],
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     0@bit,0@bit,0@bit,0@bit,%rax[52],%rax[53],%rax[54],%rax[55],
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit];
(* xor    %rcx,%rax                                #! PC = 0x555555582d0a *)
adds %dc %rax %rcx %rax;
(* cmp    $0x2,%esi                                #! PC = 0x555555582d0d *)
(* cmp 0x2, esi *)
nop;
(* #je     0x555555582d48 <radix_conversions+584>  #! PC = 0x555555582d10 *)
#je     0x555555582d48 <radix_conversions+584>  #! 0x555555582d10 = 0x555555582d10;
(* mov    %rax,%rcx                                #! PC = 0x555555582d12 *)
mov %rcx %rax;
(* shr    $0x2,%rcx                                #! PC = 0x555555582d15 *)
mov %rcx
    [%rcx[2],%rcx[3],%rcx[4],%rcx[5],%rcx[6],%rcx[7],
     %rcx[8],%rcx[9],%rcx[10],%rcx[11],%rcx[12],%rcx[13],%rcx[14],%rcx[15],
     %rcx[16],%rcx[17],%rcx[18],%rcx[19],%rcx[20],%rcx[21],%rcx[22],%rcx[23],
     %rcx[24],%rcx[25],%rcx[26],%rcx[27],%rcx[28],%rcx[29],%rcx[30],%rcx[31],
     %rcx[32],%rcx[33],%rcx[34],%rcx[35],%rcx[36],%rcx[37],%rcx[38],%rcx[39],
     %rcx[40],%rcx[41],%rcx[42],%rcx[43],%rcx[44],%rcx[45],%rcx[46],%rcx[47],
     %rcx[48],%rcx[49],%rcx[50],%rcx[51],%rcx[52],%rcx[53],%rcx[54],%rcx[55],
     %rcx[56],%rcx[57],%rcx[58],%rcx[59],%rcx[60],%rcx[61],%rcx[62],%rcx[63],
     0@bit,0@bit];
(* and    %r10,%rcx                                #! PC = 0x555555582d19 *)
mov %rcx
    [0@bit,0@bit,0@bit,0@bit,%rcx[4],%rcx[5],0@bit,0@bit,
     0@bit,0@bit,0@bit,0@bit,%rcx[12],%rcx[13],0@bit,0@bit,
     0@bit,0@bit,0@bit,0@bit,%rcx[20],%rcx[21],0@bit,0@bit,
     0@bit,0@bit,0@bit,0@bit,%rcx[28],%rcx[29],0@bit,0@bit,
     0@bit,0@bit,0@bit,0@bit,%rcx[36],%rcx[37],0@bit,0@bit,
     0@bit,0@bit,0@bit,0@bit,%rcx[44],%rcx[45],0@bit,0@bit,
     0@bit,0@bit,0@bit,0@bit,%rcx[52],%rcx[53],0@bit,0@bit,
     0@bit,0@bit,0@bit,0@bit,%rcx[60],%rcx[61],0@bit,0@bit];
(* xor    %rax,%rcx                                #! PC = 0x555555582d1c *)
adds %dc %rcx %rax %rcx;
(* mov    %rcx,%rax                                #! PC = 0x555555582d1f *)
mov %rax %rcx;
(* shr    $0x2,%rax                                #! PC = 0x555555582d22 *)
mov %rax
    [%rax[2],%rax[3],%rax[4],%rax[5],%rax[6],%rax[7],
     %rax[8],%rax[9],%rax[10],%rax[11],%rax[12],%rax[13],%rax[14],%rax[15],
     %rax[16],%rax[17],%rax[18],%rax[19],%rax[20],%rax[21],%rax[22],%rax[23],
     %rax[24],%rax[25],%rax[26],%rax[27],%rax[28],%rax[29],%rax[30],%rax[31],
     %rax[32],%rax[33],%rax[34],%rax[35],%rax[36],%rax[37],%rax[38],%rax[39],
     %rax[40],%rax[41],%rax[42],%rax[43],%rax[44],%rax[45],%rax[46],%rax[47],
     %rax[48],%rax[49],%rax[50],%rax[51],%rax[52],%rax[53],%rax[54],%rax[55],
     %rax[56],%rax[57],%rax[58],%rax[59],%rax[60],%rax[61],%rax[62],%rax[63],
     0@bit,0@bit];
(* and    %r9,%rax                                 #! PC = 0x555555582d26 *)
mov %rax
    [0@bit,0@bit,%rax[2],%rax[3],0@bit,0@bit,0@bit,0@bit,
     0@bit,0@bit,%rax[10],%rax[11],0@bit,0@bit,0@bit,0@bit,
     0@bit,0@bit,%rax[18],%rax[19],0@bit,0@bit,0@bit,0@bit,
     0@bit,0@bit,%rax[26],%rax[27],0@bit,0@bit,0@bit,0@bit,
     0@bit,0@bit,%rax[34],%rax[35],0@bit,0@bit,0@bit,0@bit,
     0@bit,0@bit,%rax[42],%rax[43],0@bit,0@bit,0@bit,0@bit,
     0@bit,0@bit,%rax[50],%rax[51],0@bit,0@bit,0@bit,0@bit,
     0@bit,0@bit,%rax[58],%rax[59],0@bit,0@bit,0@bit,0@bit];
(* xor    %rcx,%rax                                #! PC = 0x555555582d29 *)
adds %dc %rax %rcx %rax;
(* test   %esi,%esi                                #! PC = 0x555555582d2c *)
(* test esi, esi *)
nop;
(* #jne    0x555555582d48 <radix_conversions+584>  #! PC = 0x555555582d2e *)
#jne    0x555555582d48 <radix_conversions+584>  #! 0x555555582d2e = 0x555555582d2e;
(* mov    %rax,%rcx                                #! PC = 0x555555582d30 *)
mov %rcx %rax;
(* shr    $1,%rcx                                  #! PC = 0x555555582d33 *)
mov %rcx
    [%rcx[1],%rcx[2],%rcx[3],%rcx[4],%rcx[5],%rcx[6],%rcx[7],
     %rcx[8],%rcx[9],%rcx[10],%rcx[11],%rcx[12],%rcx[13],%rcx[14],%rcx[15],
     %rcx[16],%rcx[17],%rcx[18],%rcx[19],%rcx[20],%rcx[21],%rcx[22],%rcx[23],
     %rcx[24],%rcx[25],%rcx[26],%rcx[27],%rcx[28],%rcx[29],%rcx[30],%rcx[31],
     %rcx[32],%rcx[33],%rcx[34],%rcx[35],%rcx[36],%rcx[37],%rcx[38],%rcx[39],
     %rcx[40],%rcx[41],%rcx[42],%rcx[43],%rcx[44],%rcx[45],%rcx[46],%rcx[47],
     %rcx[48],%rcx[49],%rcx[50],%rcx[51],%rcx[52],%rcx[53],%rcx[54],%rcx[55],
     %rcx[56],%rcx[57],%rcx[58],%rcx[59],%rcx[60],%rcx[61],%rcx[62],%rcx[63],
     0@bit];
(* and    %r15,%rcx                                #! PC = 0x555555582d36 *)
mov %rcx
    [0@bit,0@bit,%rcx[2],0@bit,0@bit,0@bit,%rcx[6],0@bit,
     0@bit,0@bit,%rcx[10],0@bit,0@bit,0@bit,%rcx[14],0@bit,
     0@bit,0@bit,%rcx[18],0@bit,0@bit,0@bit,%rcx[22],0@bit,
     0@bit,0@bit,%rcx[26],0@bit,0@bit,0@bit,%rcx[30],0@bit,
     0@bit,0@bit,%rcx[34],0@bit,0@bit,0@bit,%rcx[38],0@bit,
     0@bit,0@bit,%rcx[42],0@bit,0@bit,0@bit,%rcx[46],0@bit,
     0@bit,0@bit,%rcx[50],0@bit,0@bit,0@bit,%rcx[54],0@bit,
     0@bit,0@bit,%rcx[58],0@bit,0@bit,0@bit,%rcx[62],0@bit];
(* xor    %rax,%rcx                                #! PC = 0x555555582d39 *)
adds %dc %rcx %rax %rcx;
(* mov    %rcx,%rax                                #! PC = 0x555555582d3c *)
mov %rax %rcx;
(* shr    $1,%rax                                  #! PC = 0x555555582d3f *)
mov %rax
    [%rax[1],%rax[2],%rax[3],%rax[4],%rax[5],%rax[6],%rax[7],
     %rax[8],%rax[9],%rax[10],%rax[11],%rax[12],%rax[13],%rax[14],%rax[15],
     %rax[16],%rax[17],%rax[18],%rax[19],%rax[20],%rax[21],%rax[22],%rax[23],
     %rax[24],%rax[25],%rax[26],%rax[27],%rax[28],%rax[29],%rax[30],%rax[31],
     %rax[32],%rax[33],%rax[34],%rax[35],%rax[36],%rax[37],%rax[38],%rax[39],
     %rax[40],%rax[41],%rax[42],%rax[43],%rax[44],%rax[45],%rax[46],%rax[47],
     %rax[48],%rax[49],%rax[50],%rax[51],%rax[52],%rax[53],%rax[54],%rax[55],
     %rax[56],%rax[57],%rax[58],%rax[59],%rax[60],%rax[61],%rax[62],%rax[63],
     0@bit];
(* and    %r11,%rax                                #! PC = 0x555555582d42 *)
mov %rax
    [0@bit,%rax[1],0@bit,0@bit,0@bit,%rax[5],0@bit,0@bit,
     0@bit,%rax[9],0@bit,0@bit,0@bit,%rax[13],0@bit,0@bit,
     0@bit,%rax[17],0@bit,0@bit,0@bit,%rax[21],0@bit,0@bit,
     0@bit,%rax[25],0@bit,0@bit,0@bit,%rax[29],0@bit,0@bit,
     0@bit,%rax[33],0@bit,0@bit,0@bit,%rax[37],0@bit,0@bit,
     0@bit,%rax[41],0@bit,0@bit,0@bit,%rax[45],0@bit,0@bit,
     0@bit,%rax[49],0@bit,0@bit,0@bit,%rax[53],0@bit,0@bit,
     0@bit,%rax[57],0@bit,0@bit,0@bit,%rax[61],0@bit,0@bit];
(* xor    %rcx,%rax                                #! PC = 0x555555582d45 *)
adds %dc %rax %rcx %rax;
(* mov    %rax,(%rdx)                              #! EA = L0x7ffffff50cb8; PC = 0x555555582d48 *)
mov %L0x7ffffff50cb8 %rax;
(* add    $0x8,%rdx                                #! PC = 0x555555582d4b *)
(* add $0x8, rdx *)
nop;
(* cmp    %rdx,%r12                                #! PC = 0x555555582d4f *)
(* cmp rdx, r12 *)
nop;
(* #jne    0x555555582cb0 <radix_conversions+432>  #! PC = 0x555555582d52 *)
#jne    0x555555582cb0 <radix_conversions+432>  #! 0x555555582d52 = 0x555555582d52;
(* mov    (%rdx),%rax                              #! EA = L0x7ffffff50cc0; Value = 0x016b42f6252f321c; PC = 0x555555582cb0 *)
mov %rax %L0x7ffffff50cc0;
(* mov    %rax,%rcx                                #! PC = 0x555555582cb3 *)
mov %rcx %rax;
(* shr    $0x10,%rcx                               #! PC = 0x555555582cb6 *)
mov %rcx
    [%rcx[16],%rcx[17],%rcx[18],%rcx[19],%rcx[20],%rcx[21],%rcx[22],%rcx[23],
     %rcx[24],%rcx[25],%rcx[26],%rcx[27],%rcx[28],%rcx[29],%rcx[30],%rcx[31],
     %rcx[32],%rcx[33],%rcx[34],%rcx[35],%rcx[36],%rcx[37],%rcx[38],%rcx[39],
     %rcx[40],%rcx[41],%rcx[42],%rcx[43],%rcx[44],%rcx[45],%rcx[46],%rcx[47],
     %rcx[48],%rcx[49],%rcx[50],%rcx[51],%rcx[52],%rcx[53],%rcx[54],%rcx[55],
     %rcx[56],%rcx[57],%rcx[58],%rcx[59],%rcx[60],%rcx[61],%rcx[62],%rcx[63],
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit];
(* and    %rbx,%rcx                                #! PC = 0x555555582cba *)
mov %rcx
    [0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     %rcx[32],%rcx[33],%rcx[34],%rcx[35],%rcx[36],%rcx[37],%rcx[38],%rcx[39],
     %rcx[40],%rcx[41],%rcx[42],%rcx[43],%rcx[44],%rcx[45],%rcx[46],%rcx[47],
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit];
(* xor    %rax,%rcx                                #! PC = 0x555555582cbd *)
adds %dc %rcx %rax %rcx;
(* mov    %rcx,%rax                                #! PC = 0x555555582cc0 *)
mov %rax %rcx;
(* shr    $0x10,%rax                               #! PC = 0x555555582cc3 *)
mov %rax
    [%rax[16],%rax[17],%rax[18],%rax[19],%rax[20],%rax[21],%rax[22],%rax[23],
     %rax[24],%rax[25],%rax[26],%rax[27],%rax[28],%rax[29],%rax[30],%rax[31],
     %rax[32],%rax[33],%rax[34],%rax[35],%rax[36],%rax[37],%rax[38],%rax[39],
     %rax[40],%rax[41],%rax[42],%rax[43],%rax[44],%rax[45],%rax[46],%rax[47],
     %rax[48],%rax[49],%rax[50],%rax[51],%rax[52],%rax[53],%rax[54],%rax[55],
     %rax[56],%rax[57],%rax[58],%rax[59],%rax[60],%rax[61],%rax[62],%rax[63],
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit];
(* and    $0xffff0000,%eax                         #! PC = 0x555555582cc7 *)
mov %rax
    [0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     %rax[16],%rax[17],%rax[18],%rax[19],%rax[20],%rax[21],%rax[22],%rax[23],
     %rax[24],%rax[25],%rax[26],%rax[27],%rax[28],%rax[29],%rax[30],%rax[31],
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit];
(* xor    %rcx,%rax                                #! PC = 0x555555582ccc *)
adds %dc %rax %rcx %rax;
(* cmp    $0x4,%esi                                #! PC = 0x555555582ccf *)
(* cmp 0x4, esi *)
nop;
(* #je     0x555555582d48 <radix_conversions+584>  #! PC = 0x555555582cd2 *)
#je     0x555555582d48 <radix_conversions+584>  #! 0x555555582cd2 = 0x555555582cd2;
(* mov    %rax,%rcx                                #! PC = 0x555555582cd4 *)
mov %rcx %rax;
(* shr    $0x8,%rcx                                #! PC = 0x555555582cd7 *)
mov %rcx
    [%rcx[8],%rcx[9],%rcx[10],%rcx[11],%rcx[12],%rcx[13],%rcx[14],%rcx[15],
     %rcx[16],%rcx[17],%rcx[18],%rcx[19],%rcx[20],%rcx[21],%rcx[22],%rcx[23],
     %rcx[24],%rcx[25],%rcx[26],%rcx[27],%rcx[28],%rcx[29],%rcx[30],%rcx[31],
     %rcx[32],%rcx[33],%rcx[34],%rcx[35],%rcx[36],%rcx[37],%rcx[38],%rcx[39],
     %rcx[40],%rcx[41],%rcx[42],%rcx[43],%rcx[44],%rcx[45],%rcx[46],%rcx[47],
     %rcx[48],%rcx[49],%rcx[50],%rcx[51],%rcx[52],%rcx[53],%rcx[54],%rcx[55],
     %rcx[56],%rcx[57],%rcx[58],%rcx[59],%rcx[60],%rcx[61],%rcx[62],%rcx[63],
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit];
(* and    %r14,%rcx                                #! PC = 0x555555582cdb *)
mov %rcx
    [0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     %rcx[16],%rcx[17],%rcx[18],%rcx[19],%rcx[20],%rcx[21],%rcx[22],%rcx[23],
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     %rcx[48],%rcx[49],%rcx[50],%rcx[51],%rcx[52],%rcx[53],%rcx[54],%rcx[55],
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit];
(* xor    %rax,%rcx                                #! PC = 0x555555582cde *)
adds %dc %rcx %rax %rcx;
(* mov    %rcx,%rax                                #! PC = 0x555555582ce1 *)
mov %rax %rcx;
(* shr    $0x8,%rax                                #! PC = 0x555555582ce4 *)
mov %rax
    [%rax[8],%rax[9],%rax[10],%rax[11],%rax[12],%rax[13],%rax[14],%rax[15],
     %rax[16],%rax[17],%rax[18],%rax[19],%rax[20],%rax[21],%rax[22],%rax[23],
     %rax[24],%rax[25],%rax[26],%rax[27],%rax[28],%rax[29],%rax[30],%rax[31],
     %rax[32],%rax[33],%rax[34],%rax[35],%rax[36],%rax[37],%rax[38],%rax[39],
     %rax[40],%rax[41],%rax[42],%rax[43],%rax[44],%rax[45],%rax[46],%rax[47],
     %rax[48],%rax[49],%rax[50],%rax[51],%rax[52],%rax[53],%rax[54],%rax[55],
     %rax[56],%rax[57],%rax[58],%rax[59],%rax[60],%rax[61],%rax[62],%rax[63],
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit];
(* and    %r13,%rax                                #! PC = 0x555555582ce8 *)
mov %rax
    [0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     %rax[8],%rax[9],%rax[10],%rax[11],%rax[12],%rax[13],%rax[14],%rax[15],
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     %rax[40],%rax[41],%rax[42],%rax[43],%rax[44],%rax[45],%rax[46],%rax[47],
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit];
(* xor    %rcx,%rax                                #! PC = 0x555555582ceb *)
adds %dc %rax %rcx %rax;
(* cmp    $0x3,%esi                                #! PC = 0x555555582cee *)
(* cmp 0x3, esi *)
nop;
(* #je     0x555555582d48 <radix_conversions+584>  #! PC = 0x555555582cf1 *)
#je     0x555555582d48 <radix_conversions+584>  #! 0x555555582cf1 = 0x555555582cf1;
(* mov    %rax,%rcx                                #! PC = 0x555555582cf3 *)
mov %rcx %rax;
(* shr    $0x4,%rcx                                #! PC = 0x555555582cf6 *)
mov %rcx
    [%rcx[4],%rcx[5],%rcx[6],%rcx[7],
     %rcx[8],%rcx[9],%rcx[10],%rcx[11],%rcx[12],%rcx[13],%rcx[14],%rcx[15],
     %rcx[16],%rcx[17],%rcx[18],%rcx[19],%rcx[20],%rcx[21],%rcx[22],%rcx[23],
     %rcx[24],%rcx[25],%rcx[26],%rcx[27],%rcx[28],%rcx[29],%rcx[30],%rcx[31],
     %rcx[32],%rcx[33],%rcx[34],%rcx[35],%rcx[36],%rcx[37],%rcx[38],%rcx[39],
     %rcx[40],%rcx[41],%rcx[42],%rcx[43],%rcx[44],%rcx[45],%rcx[46],%rcx[47],
     %rcx[48],%rcx[49],%rcx[50],%rcx[51],%rcx[52],%rcx[53],%rcx[54],%rcx[55],
     %rcx[56],%rcx[57],%rcx[58],%rcx[59],%rcx[60],%rcx[61],%rcx[62],%rcx[63],
     0@bit,0@bit,0@bit,0@bit];
(* and    %r8,%rcx                                 #! PC = 0x555555582cfa *)
mov %rcx
    [0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     %rcx[8],%rcx[9],%rcx[10],%rcx[11],0@bit,0@bit,0@bit,0@bit,
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     %rcx[24],%rcx[25],%rcx[26],%rcx[27],0@bit,0@bit,0@bit,0@bit,
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     %rcx[40],%rcx[41],%rcx[42],%rcx[43],0@bit,0@bit,0@bit,0@bit,
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     %rcx[56],%rcx[57],%rcx[58],%rcx[59],0@bit,0@bit,0@bit,0@bit];
(* xor    %rax,%rcx                                #! PC = 0x555555582cfd *)
adds %dc %rcx %rax %rcx;
(* mov    %rcx,%rax                                #! PC = 0x555555582d00 *)
mov %rax %rcx;
(* shr    $0x4,%rax                                #! PC = 0x555555582d03 *)
mov %rax
    [%rax[4],%rax[5],%rax[6],%rax[7],
     %rax[8],%rax[9],%rax[10],%rax[11],%rax[12],%rax[13],%rax[14],%rax[15],
     %rax[16],%rax[17],%rax[18],%rax[19],%rax[20],%rax[21],%rax[22],%rax[23],
     %rax[24],%rax[25],%rax[26],%rax[27],%rax[28],%rax[29],%rax[30],%rax[31],
     %rax[32],%rax[33],%rax[34],%rax[35],%rax[36],%rax[37],%rax[38],%rax[39],
     %rax[40],%rax[41],%rax[42],%rax[43],%rax[44],%rax[45],%rax[46],%rax[47],
     %rax[48],%rax[49],%rax[50],%rax[51],%rax[52],%rax[53],%rax[54],%rax[55],
     %rax[56],%rax[57],%rax[58],%rax[59],%rax[60],%rax[61],%rax[62],%rax[63],
     0@bit,0@bit,0@bit,0@bit];
(* and    %rdi,%rax                                #! PC = 0x555555582d07 *)
mov %rax
    [0@bit,0@bit,0@bit,0@bit,%rax[4],%rax[5],%rax[6],%rax[7],
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     0@bit,0@bit,0@bit,0@bit,%rax[20],%rax[21],%rax[22],%rax[23],
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     0@bit,0@bit,0@bit,0@bit,%rax[36],%rax[37],%rax[38],%rax[39],
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     0@bit,0@bit,0@bit,0@bit,%rax[52],%rax[53],%rax[54],%rax[55],
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit];
(* xor    %rcx,%rax                                #! PC = 0x555555582d0a *)
adds %dc %rax %rcx %rax;
(* cmp    $0x2,%esi                                #! PC = 0x555555582d0d *)
(* cmp 0x2, esi *)
nop;
(* #je     0x555555582d48 <radix_conversions+584>  #! PC = 0x555555582d10 *)
#je     0x555555582d48 <radix_conversions+584>  #! 0x555555582d10 = 0x555555582d10;
(* mov    %rax,%rcx                                #! PC = 0x555555582d12 *)
mov %rcx %rax;
(* shr    $0x2,%rcx                                #! PC = 0x555555582d15 *)
mov %rcx
    [%rcx[2],%rcx[3],%rcx[4],%rcx[5],%rcx[6],%rcx[7],
     %rcx[8],%rcx[9],%rcx[10],%rcx[11],%rcx[12],%rcx[13],%rcx[14],%rcx[15],
     %rcx[16],%rcx[17],%rcx[18],%rcx[19],%rcx[20],%rcx[21],%rcx[22],%rcx[23],
     %rcx[24],%rcx[25],%rcx[26],%rcx[27],%rcx[28],%rcx[29],%rcx[30],%rcx[31],
     %rcx[32],%rcx[33],%rcx[34],%rcx[35],%rcx[36],%rcx[37],%rcx[38],%rcx[39],
     %rcx[40],%rcx[41],%rcx[42],%rcx[43],%rcx[44],%rcx[45],%rcx[46],%rcx[47],
     %rcx[48],%rcx[49],%rcx[50],%rcx[51],%rcx[52],%rcx[53],%rcx[54],%rcx[55],
     %rcx[56],%rcx[57],%rcx[58],%rcx[59],%rcx[60],%rcx[61],%rcx[62],%rcx[63],
     0@bit,0@bit];
(* and    %r10,%rcx                                #! PC = 0x555555582d19 *)
mov %rcx
    [0@bit,0@bit,0@bit,0@bit,%rcx[4],%rcx[5],0@bit,0@bit,
     0@bit,0@bit,0@bit,0@bit,%rcx[12],%rcx[13],0@bit,0@bit,
     0@bit,0@bit,0@bit,0@bit,%rcx[20],%rcx[21],0@bit,0@bit,
     0@bit,0@bit,0@bit,0@bit,%rcx[28],%rcx[29],0@bit,0@bit,
     0@bit,0@bit,0@bit,0@bit,%rcx[36],%rcx[37],0@bit,0@bit,
     0@bit,0@bit,0@bit,0@bit,%rcx[44],%rcx[45],0@bit,0@bit,
     0@bit,0@bit,0@bit,0@bit,%rcx[52],%rcx[53],0@bit,0@bit,
     0@bit,0@bit,0@bit,0@bit,%rcx[60],%rcx[61],0@bit,0@bit];
(* xor    %rax,%rcx                                #! PC = 0x555555582d1c *)
adds %dc %rcx %rax %rcx;
(* mov    %rcx,%rax                                #! PC = 0x555555582d1f *)
mov %rax %rcx;
(* shr    $0x2,%rax                                #! PC = 0x555555582d22 *)
mov %rax
    [%rax[2],%rax[3],%rax[4],%rax[5],%rax[6],%rax[7],
     %rax[8],%rax[9],%rax[10],%rax[11],%rax[12],%rax[13],%rax[14],%rax[15],
     %rax[16],%rax[17],%rax[18],%rax[19],%rax[20],%rax[21],%rax[22],%rax[23],
     %rax[24],%rax[25],%rax[26],%rax[27],%rax[28],%rax[29],%rax[30],%rax[31],
     %rax[32],%rax[33],%rax[34],%rax[35],%rax[36],%rax[37],%rax[38],%rax[39],
     %rax[40],%rax[41],%rax[42],%rax[43],%rax[44],%rax[45],%rax[46],%rax[47],
     %rax[48],%rax[49],%rax[50],%rax[51],%rax[52],%rax[53],%rax[54],%rax[55],
     %rax[56],%rax[57],%rax[58],%rax[59],%rax[60],%rax[61],%rax[62],%rax[63],
     0@bit,0@bit];
(* and    %r9,%rax                                 #! PC = 0x555555582d26 *)
mov %rax
    [0@bit,0@bit,%rax[2],%rax[3],0@bit,0@bit,0@bit,0@bit,
     0@bit,0@bit,%rax[10],%rax[11],0@bit,0@bit,0@bit,0@bit,
     0@bit,0@bit,%rax[18],%rax[19],0@bit,0@bit,0@bit,0@bit,
     0@bit,0@bit,%rax[26],%rax[27],0@bit,0@bit,0@bit,0@bit,
     0@bit,0@bit,%rax[34],%rax[35],0@bit,0@bit,0@bit,0@bit,
     0@bit,0@bit,%rax[42],%rax[43],0@bit,0@bit,0@bit,0@bit,
     0@bit,0@bit,%rax[50],%rax[51],0@bit,0@bit,0@bit,0@bit,
     0@bit,0@bit,%rax[58],%rax[59],0@bit,0@bit,0@bit,0@bit];
(* xor    %rcx,%rax                                #! PC = 0x555555582d29 *)
adds %dc %rax %rcx %rax;
(* test   %esi,%esi                                #! PC = 0x555555582d2c *)
(* test esi, esi *)
nop;
(* #jne    0x555555582d48 <radix_conversions+584>  #! PC = 0x555555582d2e *)
#jne    0x555555582d48 <radix_conversions+584>  #! 0x555555582d2e = 0x555555582d2e;
(* mov    %rax,%rcx                                #! PC = 0x555555582d30 *)
mov %rcx %rax;
(* shr    $1,%rcx                                  #! PC = 0x555555582d33 *)
mov %rcx
    [%rcx[1],%rcx[2],%rcx[3],%rcx[4],%rcx[5],%rcx[6],%rcx[7],
     %rcx[8],%rcx[9],%rcx[10],%rcx[11],%rcx[12],%rcx[13],%rcx[14],%rcx[15],
     %rcx[16],%rcx[17],%rcx[18],%rcx[19],%rcx[20],%rcx[21],%rcx[22],%rcx[23],
     %rcx[24],%rcx[25],%rcx[26],%rcx[27],%rcx[28],%rcx[29],%rcx[30],%rcx[31],
     %rcx[32],%rcx[33],%rcx[34],%rcx[35],%rcx[36],%rcx[37],%rcx[38],%rcx[39],
     %rcx[40],%rcx[41],%rcx[42],%rcx[43],%rcx[44],%rcx[45],%rcx[46],%rcx[47],
     %rcx[48],%rcx[49],%rcx[50],%rcx[51],%rcx[52],%rcx[53],%rcx[54],%rcx[55],
     %rcx[56],%rcx[57],%rcx[58],%rcx[59],%rcx[60],%rcx[61],%rcx[62],%rcx[63],
     0@bit];
(* and    %r15,%rcx                                #! PC = 0x555555582d36 *)
mov %rcx
    [0@bit,0@bit,%rcx[2],0@bit,0@bit,0@bit,%rcx[6],0@bit,
     0@bit,0@bit,%rcx[10],0@bit,0@bit,0@bit,%rcx[14],0@bit,
     0@bit,0@bit,%rcx[18],0@bit,0@bit,0@bit,%rcx[22],0@bit,
     0@bit,0@bit,%rcx[26],0@bit,0@bit,0@bit,%rcx[30],0@bit,
     0@bit,0@bit,%rcx[34],0@bit,0@bit,0@bit,%rcx[38],0@bit,
     0@bit,0@bit,%rcx[42],0@bit,0@bit,0@bit,%rcx[46],0@bit,
     0@bit,0@bit,%rcx[50],0@bit,0@bit,0@bit,%rcx[54],0@bit,
     0@bit,0@bit,%rcx[58],0@bit,0@bit,0@bit,%rcx[62],0@bit];
(* xor    %rax,%rcx                                #! PC = 0x555555582d39 *)
adds %dc %rcx %rax %rcx;
(* mov    %rcx,%rax                                #! PC = 0x555555582d3c *)
mov %rax %rcx;
(* shr    $1,%rax                                  #! PC = 0x555555582d3f *)
mov %rax
    [%rax[1],%rax[2],%rax[3],%rax[4],%rax[5],%rax[6],%rax[7],
     %rax[8],%rax[9],%rax[10],%rax[11],%rax[12],%rax[13],%rax[14],%rax[15],
     %rax[16],%rax[17],%rax[18],%rax[19],%rax[20],%rax[21],%rax[22],%rax[23],
     %rax[24],%rax[25],%rax[26],%rax[27],%rax[28],%rax[29],%rax[30],%rax[31],
     %rax[32],%rax[33],%rax[34],%rax[35],%rax[36],%rax[37],%rax[38],%rax[39],
     %rax[40],%rax[41],%rax[42],%rax[43],%rax[44],%rax[45],%rax[46],%rax[47],
     %rax[48],%rax[49],%rax[50],%rax[51],%rax[52],%rax[53],%rax[54],%rax[55],
     %rax[56],%rax[57],%rax[58],%rax[59],%rax[60],%rax[61],%rax[62],%rax[63],
     0@bit];
(* and    %r11,%rax                                #! PC = 0x555555582d42 *)
mov %rax
    [0@bit,%rax[1],0@bit,0@bit,0@bit,%rax[5],0@bit,0@bit,
     0@bit,%rax[9],0@bit,0@bit,0@bit,%rax[13],0@bit,0@bit,
     0@bit,%rax[17],0@bit,0@bit,0@bit,%rax[21],0@bit,0@bit,
     0@bit,%rax[25],0@bit,0@bit,0@bit,%rax[29],0@bit,0@bit,
     0@bit,%rax[33],0@bit,0@bit,0@bit,%rax[37],0@bit,0@bit,
     0@bit,%rax[41],0@bit,0@bit,0@bit,%rax[45],0@bit,0@bit,
     0@bit,%rax[49],0@bit,0@bit,0@bit,%rax[53],0@bit,0@bit,
     0@bit,%rax[57],0@bit,0@bit,0@bit,%rax[61],0@bit,0@bit];
(* xor    %rcx,%rax                                #! PC = 0x555555582d45 *)
adds %dc %rax %rcx %rax;
(* mov    %rax,(%rdx)                              #! EA = L0x7ffffff50cc0; PC = 0x555555582d48 *)
mov %L0x7ffffff50cc0 %rax;
(* add    $0x8,%rdx                                #! PC = 0x555555582d4b *)
(* add $0x8, rdx *)
nop;
(* cmp    %rdx,%r12                                #! PC = 0x555555582d4f *)
(* cmp rdx, r12 *)
nop;
(* #jne    0x555555582cb0 <radix_conversions+432>  #! PC = 0x555555582d52 *)
#jne    0x555555582cb0 <radix_conversions+432>  #! 0x555555582d52 = 0x555555582d52;
(* mov    (%rdx),%rax                              #! EA = L0x7ffffff50cc8; Value = 0x4567dd257768fbae; PC = 0x555555582cb0 *)
mov %rax %L0x7ffffff50cc8;
(* mov    %rax,%rcx                                #! PC = 0x555555582cb3 *)
mov %rcx %rax;
(* shr    $0x10,%rcx                               #! PC = 0x555555582cb6 *)
mov %rcx
    [%rcx[16],%rcx[17],%rcx[18],%rcx[19],%rcx[20],%rcx[21],%rcx[22],%rcx[23],
     %rcx[24],%rcx[25],%rcx[26],%rcx[27],%rcx[28],%rcx[29],%rcx[30],%rcx[31],
     %rcx[32],%rcx[33],%rcx[34],%rcx[35],%rcx[36],%rcx[37],%rcx[38],%rcx[39],
     %rcx[40],%rcx[41],%rcx[42],%rcx[43],%rcx[44],%rcx[45],%rcx[46],%rcx[47],
     %rcx[48],%rcx[49],%rcx[50],%rcx[51],%rcx[52],%rcx[53],%rcx[54],%rcx[55],
     %rcx[56],%rcx[57],%rcx[58],%rcx[59],%rcx[60],%rcx[61],%rcx[62],%rcx[63],
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit];
(* and    %rbx,%rcx                                #! PC = 0x555555582cba *)
mov %rcx
    [0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     %rcx[32],%rcx[33],%rcx[34],%rcx[35],%rcx[36],%rcx[37],%rcx[38],%rcx[39],
     %rcx[40],%rcx[41],%rcx[42],%rcx[43],%rcx[44],%rcx[45],%rcx[46],%rcx[47],
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit];
(* xor    %rax,%rcx                                #! PC = 0x555555582cbd *)
adds %dc %rcx %rax %rcx;
(* mov    %rcx,%rax                                #! PC = 0x555555582cc0 *)
mov %rax %rcx;
(* shr    $0x10,%rax                               #! PC = 0x555555582cc3 *)
mov %rax
    [%rax[16],%rax[17],%rax[18],%rax[19],%rax[20],%rax[21],%rax[22],%rax[23],
     %rax[24],%rax[25],%rax[26],%rax[27],%rax[28],%rax[29],%rax[30],%rax[31],
     %rax[32],%rax[33],%rax[34],%rax[35],%rax[36],%rax[37],%rax[38],%rax[39],
     %rax[40],%rax[41],%rax[42],%rax[43],%rax[44],%rax[45],%rax[46],%rax[47],
     %rax[48],%rax[49],%rax[50],%rax[51],%rax[52],%rax[53],%rax[54],%rax[55],
     %rax[56],%rax[57],%rax[58],%rax[59],%rax[60],%rax[61],%rax[62],%rax[63],
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit];
(* and    $0xffff0000,%eax                         #! PC = 0x555555582cc7 *)
mov %rax
    [0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     %rax[16],%rax[17],%rax[18],%rax[19],%rax[20],%rax[21],%rax[22],%rax[23],
     %rax[24],%rax[25],%rax[26],%rax[27],%rax[28],%rax[29],%rax[30],%rax[31],
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit];
(* xor    %rcx,%rax                                #! PC = 0x555555582ccc *)
adds %dc %rax %rcx %rax;
(* cmp    $0x4,%esi                                #! PC = 0x555555582ccf *)
(* cmp 0x4, esi *)
nop;
(* #je     0x555555582d48 <radix_conversions+584>  #! PC = 0x555555582cd2 *)
#je     0x555555582d48 <radix_conversions+584>  #! 0x555555582cd2 = 0x555555582cd2;
(* mov    %rax,%rcx                                #! PC = 0x555555582cd4 *)
mov %rcx %rax;
(* shr    $0x8,%rcx                                #! PC = 0x555555582cd7 *)
mov %rcx
    [%rcx[8],%rcx[9],%rcx[10],%rcx[11],%rcx[12],%rcx[13],%rcx[14],%rcx[15],
     %rcx[16],%rcx[17],%rcx[18],%rcx[19],%rcx[20],%rcx[21],%rcx[22],%rcx[23],
     %rcx[24],%rcx[25],%rcx[26],%rcx[27],%rcx[28],%rcx[29],%rcx[30],%rcx[31],
     %rcx[32],%rcx[33],%rcx[34],%rcx[35],%rcx[36],%rcx[37],%rcx[38],%rcx[39],
     %rcx[40],%rcx[41],%rcx[42],%rcx[43],%rcx[44],%rcx[45],%rcx[46],%rcx[47],
     %rcx[48],%rcx[49],%rcx[50],%rcx[51],%rcx[52],%rcx[53],%rcx[54],%rcx[55],
     %rcx[56],%rcx[57],%rcx[58],%rcx[59],%rcx[60],%rcx[61],%rcx[62],%rcx[63],
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit];
(* and    %r14,%rcx                                #! PC = 0x555555582cdb *)
mov %rcx
    [0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     %rcx[16],%rcx[17],%rcx[18],%rcx[19],%rcx[20],%rcx[21],%rcx[22],%rcx[23],
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     %rcx[48],%rcx[49],%rcx[50],%rcx[51],%rcx[52],%rcx[53],%rcx[54],%rcx[55],
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit];
(* xor    %rax,%rcx                                #! PC = 0x555555582cde *)
adds %dc %rcx %rax %rcx;
(* mov    %rcx,%rax                                #! PC = 0x555555582ce1 *)
mov %rax %rcx;
(* shr    $0x8,%rax                                #! PC = 0x555555582ce4 *)
mov %rax
    [%rax[8],%rax[9],%rax[10],%rax[11],%rax[12],%rax[13],%rax[14],%rax[15],
     %rax[16],%rax[17],%rax[18],%rax[19],%rax[20],%rax[21],%rax[22],%rax[23],
     %rax[24],%rax[25],%rax[26],%rax[27],%rax[28],%rax[29],%rax[30],%rax[31],
     %rax[32],%rax[33],%rax[34],%rax[35],%rax[36],%rax[37],%rax[38],%rax[39],
     %rax[40],%rax[41],%rax[42],%rax[43],%rax[44],%rax[45],%rax[46],%rax[47],
     %rax[48],%rax[49],%rax[50],%rax[51],%rax[52],%rax[53],%rax[54],%rax[55],
     %rax[56],%rax[57],%rax[58],%rax[59],%rax[60],%rax[61],%rax[62],%rax[63],
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit];
(* and    %r13,%rax                                #! PC = 0x555555582ce8 *)
mov %rax
    [0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     %rax[8],%rax[9],%rax[10],%rax[11],%rax[12],%rax[13],%rax[14],%rax[15],
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     %rax[40],%rax[41],%rax[42],%rax[43],%rax[44],%rax[45],%rax[46],%rax[47],
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit];
(* xor    %rcx,%rax                                #! PC = 0x555555582ceb *)
adds %dc %rax %rcx %rax;
(* cmp    $0x3,%esi                                #! PC = 0x555555582cee *)
(* cmp 0x3, esi *)
nop;
(* #je     0x555555582d48 <radix_conversions+584>  #! PC = 0x555555582cf1 *)
#je     0x555555582d48 <radix_conversions+584>  #! 0x555555582cf1 = 0x555555582cf1;
(* mov    %rax,%rcx                                #! PC = 0x555555582cf3 *)
mov %rcx %rax;
(* shr    $0x4,%rcx                                #! PC = 0x555555582cf6 *)
mov %rcx
    [%rcx[4],%rcx[5],%rcx[6],%rcx[7],
     %rcx[8],%rcx[9],%rcx[10],%rcx[11],%rcx[12],%rcx[13],%rcx[14],%rcx[15],
     %rcx[16],%rcx[17],%rcx[18],%rcx[19],%rcx[20],%rcx[21],%rcx[22],%rcx[23],
     %rcx[24],%rcx[25],%rcx[26],%rcx[27],%rcx[28],%rcx[29],%rcx[30],%rcx[31],
     %rcx[32],%rcx[33],%rcx[34],%rcx[35],%rcx[36],%rcx[37],%rcx[38],%rcx[39],
     %rcx[40],%rcx[41],%rcx[42],%rcx[43],%rcx[44],%rcx[45],%rcx[46],%rcx[47],
     %rcx[48],%rcx[49],%rcx[50],%rcx[51],%rcx[52],%rcx[53],%rcx[54],%rcx[55],
     %rcx[56],%rcx[57],%rcx[58],%rcx[59],%rcx[60],%rcx[61],%rcx[62],%rcx[63],
     0@bit,0@bit,0@bit,0@bit];
(* and    %r8,%rcx                                 #! PC = 0x555555582cfa *)
mov %rcx
    [0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     %rcx[8],%rcx[9],%rcx[10],%rcx[11],0@bit,0@bit,0@bit,0@bit,
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     %rcx[24],%rcx[25],%rcx[26],%rcx[27],0@bit,0@bit,0@bit,0@bit,
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     %rcx[40],%rcx[41],%rcx[42],%rcx[43],0@bit,0@bit,0@bit,0@bit,
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     %rcx[56],%rcx[57],%rcx[58],%rcx[59],0@bit,0@bit,0@bit,0@bit];
(* xor    %rax,%rcx                                #! PC = 0x555555582cfd *)
adds %dc %rcx %rax %rcx;
(* mov    %rcx,%rax                                #! PC = 0x555555582d00 *)
mov %rax %rcx;
(* shr    $0x4,%rax                                #! PC = 0x555555582d03 *)
mov %rax
    [%rax[4],%rax[5],%rax[6],%rax[7],
     %rax[8],%rax[9],%rax[10],%rax[11],%rax[12],%rax[13],%rax[14],%rax[15],
     %rax[16],%rax[17],%rax[18],%rax[19],%rax[20],%rax[21],%rax[22],%rax[23],
     %rax[24],%rax[25],%rax[26],%rax[27],%rax[28],%rax[29],%rax[30],%rax[31],
     %rax[32],%rax[33],%rax[34],%rax[35],%rax[36],%rax[37],%rax[38],%rax[39],
     %rax[40],%rax[41],%rax[42],%rax[43],%rax[44],%rax[45],%rax[46],%rax[47],
     %rax[48],%rax[49],%rax[50],%rax[51],%rax[52],%rax[53],%rax[54],%rax[55],
     %rax[56],%rax[57],%rax[58],%rax[59],%rax[60],%rax[61],%rax[62],%rax[63],
     0@bit,0@bit,0@bit,0@bit];
(* and    %rdi,%rax                                #! PC = 0x555555582d07 *)
mov %rax
    [0@bit,0@bit,0@bit,0@bit,%rax[4],%rax[5],%rax[6],%rax[7],
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     0@bit,0@bit,0@bit,0@bit,%rax[20],%rax[21],%rax[22],%rax[23],
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     0@bit,0@bit,0@bit,0@bit,%rax[36],%rax[37],%rax[38],%rax[39],
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     0@bit,0@bit,0@bit,0@bit,%rax[52],%rax[53],%rax[54],%rax[55],
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit];
(* xor    %rcx,%rax                                #! PC = 0x555555582d0a *)
adds %dc %rax %rcx %rax;
(* cmp    $0x2,%esi                                #! PC = 0x555555582d0d *)
(* cmp 0x2, esi *)
nop;
(* #je     0x555555582d48 <radix_conversions+584>  #! PC = 0x555555582d10 *)
#je     0x555555582d48 <radix_conversions+584>  #! 0x555555582d10 = 0x555555582d10;
(* mov    %rax,%rcx                                #! PC = 0x555555582d12 *)
mov %rcx %rax;
(* shr    $0x2,%rcx                                #! PC = 0x555555582d15 *)
mov %rcx
    [%rcx[2],%rcx[3],%rcx[4],%rcx[5],%rcx[6],%rcx[7],
     %rcx[8],%rcx[9],%rcx[10],%rcx[11],%rcx[12],%rcx[13],%rcx[14],%rcx[15],
     %rcx[16],%rcx[17],%rcx[18],%rcx[19],%rcx[20],%rcx[21],%rcx[22],%rcx[23],
     %rcx[24],%rcx[25],%rcx[26],%rcx[27],%rcx[28],%rcx[29],%rcx[30],%rcx[31],
     %rcx[32],%rcx[33],%rcx[34],%rcx[35],%rcx[36],%rcx[37],%rcx[38],%rcx[39],
     %rcx[40],%rcx[41],%rcx[42],%rcx[43],%rcx[44],%rcx[45],%rcx[46],%rcx[47],
     %rcx[48],%rcx[49],%rcx[50],%rcx[51],%rcx[52],%rcx[53],%rcx[54],%rcx[55],
     %rcx[56],%rcx[57],%rcx[58],%rcx[59],%rcx[60],%rcx[61],%rcx[62],%rcx[63],
     0@bit,0@bit];
(* and    %r10,%rcx                                #! PC = 0x555555582d19 *)
mov %rcx
    [0@bit,0@bit,0@bit,0@bit,%rcx[4],%rcx[5],0@bit,0@bit,
     0@bit,0@bit,0@bit,0@bit,%rcx[12],%rcx[13],0@bit,0@bit,
     0@bit,0@bit,0@bit,0@bit,%rcx[20],%rcx[21],0@bit,0@bit,
     0@bit,0@bit,0@bit,0@bit,%rcx[28],%rcx[29],0@bit,0@bit,
     0@bit,0@bit,0@bit,0@bit,%rcx[36],%rcx[37],0@bit,0@bit,
     0@bit,0@bit,0@bit,0@bit,%rcx[44],%rcx[45],0@bit,0@bit,
     0@bit,0@bit,0@bit,0@bit,%rcx[52],%rcx[53],0@bit,0@bit,
     0@bit,0@bit,0@bit,0@bit,%rcx[60],%rcx[61],0@bit,0@bit];
(* xor    %rax,%rcx                                #! PC = 0x555555582d1c *)
adds %dc %rcx %rax %rcx;
(* mov    %rcx,%rax                                #! PC = 0x555555582d1f *)
mov %rax %rcx;
(* shr    $0x2,%rax                                #! PC = 0x555555582d22 *)
mov %rax
    [%rax[2],%rax[3],%rax[4],%rax[5],%rax[6],%rax[7],
     %rax[8],%rax[9],%rax[10],%rax[11],%rax[12],%rax[13],%rax[14],%rax[15],
     %rax[16],%rax[17],%rax[18],%rax[19],%rax[20],%rax[21],%rax[22],%rax[23],
     %rax[24],%rax[25],%rax[26],%rax[27],%rax[28],%rax[29],%rax[30],%rax[31],
     %rax[32],%rax[33],%rax[34],%rax[35],%rax[36],%rax[37],%rax[38],%rax[39],
     %rax[40],%rax[41],%rax[42],%rax[43],%rax[44],%rax[45],%rax[46],%rax[47],
     %rax[48],%rax[49],%rax[50],%rax[51],%rax[52],%rax[53],%rax[54],%rax[55],
     %rax[56],%rax[57],%rax[58],%rax[59],%rax[60],%rax[61],%rax[62],%rax[63],
     0@bit,0@bit];
(* and    %r9,%rax                                 #! PC = 0x555555582d26 *)
mov %rax
    [0@bit,0@bit,%rax[2],%rax[3],0@bit,0@bit,0@bit,0@bit,
     0@bit,0@bit,%rax[10],%rax[11],0@bit,0@bit,0@bit,0@bit,
     0@bit,0@bit,%rax[18],%rax[19],0@bit,0@bit,0@bit,0@bit,
     0@bit,0@bit,%rax[26],%rax[27],0@bit,0@bit,0@bit,0@bit,
     0@bit,0@bit,%rax[34],%rax[35],0@bit,0@bit,0@bit,0@bit,
     0@bit,0@bit,%rax[42],%rax[43],0@bit,0@bit,0@bit,0@bit,
     0@bit,0@bit,%rax[50],%rax[51],0@bit,0@bit,0@bit,0@bit,
     0@bit,0@bit,%rax[58],%rax[59],0@bit,0@bit,0@bit,0@bit];
(* xor    %rcx,%rax                                #! PC = 0x555555582d29 *)
adds %dc %rax %rcx %rax;
(* test   %esi,%esi                                #! PC = 0x555555582d2c *)
(* test esi, esi *)
nop;
(* #jne    0x555555582d48 <radix_conversions+584>  #! PC = 0x555555582d2e *)
#jne    0x555555582d48 <radix_conversions+584>  #! 0x555555582d2e = 0x555555582d2e;
(* mov    %rax,%rcx                                #! PC = 0x555555582d30 *)
mov %rcx %rax;
(* shr    $1,%rcx                                  #! PC = 0x555555582d33 *)
mov %rcx
    [%rcx[1],%rcx[2],%rcx[3],%rcx[4],%rcx[5],%rcx[6],%rcx[7],
     %rcx[8],%rcx[9],%rcx[10],%rcx[11],%rcx[12],%rcx[13],%rcx[14],%rcx[15],
     %rcx[16],%rcx[17],%rcx[18],%rcx[19],%rcx[20],%rcx[21],%rcx[22],%rcx[23],
     %rcx[24],%rcx[25],%rcx[26],%rcx[27],%rcx[28],%rcx[29],%rcx[30],%rcx[31],
     %rcx[32],%rcx[33],%rcx[34],%rcx[35],%rcx[36],%rcx[37],%rcx[38],%rcx[39],
     %rcx[40],%rcx[41],%rcx[42],%rcx[43],%rcx[44],%rcx[45],%rcx[46],%rcx[47],
     %rcx[48],%rcx[49],%rcx[50],%rcx[51],%rcx[52],%rcx[53],%rcx[54],%rcx[55],
     %rcx[56],%rcx[57],%rcx[58],%rcx[59],%rcx[60],%rcx[61],%rcx[62],%rcx[63],
     0@bit];
(* and    %r15,%rcx                                #! PC = 0x555555582d36 *)
mov %rcx
    [0@bit,0@bit,%rcx[2],0@bit,0@bit,0@bit,%rcx[6],0@bit,
     0@bit,0@bit,%rcx[10],0@bit,0@bit,0@bit,%rcx[14],0@bit,
     0@bit,0@bit,%rcx[18],0@bit,0@bit,0@bit,%rcx[22],0@bit,
     0@bit,0@bit,%rcx[26],0@bit,0@bit,0@bit,%rcx[30],0@bit,
     0@bit,0@bit,%rcx[34],0@bit,0@bit,0@bit,%rcx[38],0@bit,
     0@bit,0@bit,%rcx[42],0@bit,0@bit,0@bit,%rcx[46],0@bit,
     0@bit,0@bit,%rcx[50],0@bit,0@bit,0@bit,%rcx[54],0@bit,
     0@bit,0@bit,%rcx[58],0@bit,0@bit,0@bit,%rcx[62],0@bit];
(* xor    %rax,%rcx                                #! PC = 0x555555582d39 *)
adds %dc %rcx %rax %rcx;
(* mov    %rcx,%rax                                #! PC = 0x555555582d3c *)
mov %rax %rcx;
(* shr    $1,%rax                                  #! PC = 0x555555582d3f *)
mov %rax
    [%rax[1],%rax[2],%rax[3],%rax[4],%rax[5],%rax[6],%rax[7],
     %rax[8],%rax[9],%rax[10],%rax[11],%rax[12],%rax[13],%rax[14],%rax[15],
     %rax[16],%rax[17],%rax[18],%rax[19],%rax[20],%rax[21],%rax[22],%rax[23],
     %rax[24],%rax[25],%rax[26],%rax[27],%rax[28],%rax[29],%rax[30],%rax[31],
     %rax[32],%rax[33],%rax[34],%rax[35],%rax[36],%rax[37],%rax[38],%rax[39],
     %rax[40],%rax[41],%rax[42],%rax[43],%rax[44],%rax[45],%rax[46],%rax[47],
     %rax[48],%rax[49],%rax[50],%rax[51],%rax[52],%rax[53],%rax[54],%rax[55],
     %rax[56],%rax[57],%rax[58],%rax[59],%rax[60],%rax[61],%rax[62],%rax[63],
     0@bit];
(* and    %r11,%rax                                #! PC = 0x555555582d42 *)
mov %rax
    [0@bit,%rax[1],0@bit,0@bit,0@bit,%rax[5],0@bit,0@bit,
     0@bit,%rax[9],0@bit,0@bit,0@bit,%rax[13],0@bit,0@bit,
     0@bit,%rax[17],0@bit,0@bit,0@bit,%rax[21],0@bit,0@bit,
     0@bit,%rax[25],0@bit,0@bit,0@bit,%rax[29],0@bit,0@bit,
     0@bit,%rax[33],0@bit,0@bit,0@bit,%rax[37],0@bit,0@bit,
     0@bit,%rax[41],0@bit,0@bit,0@bit,%rax[45],0@bit,0@bit,
     0@bit,%rax[49],0@bit,0@bit,0@bit,%rax[53],0@bit,0@bit,
     0@bit,%rax[57],0@bit,0@bit,0@bit,%rax[61],0@bit,0@bit];
(* xor    %rcx,%rax                                #! PC = 0x555555582d45 *)
adds %dc %rax %rcx %rax;
(* mov    %rax,(%rdx)                              #! EA = L0x7ffffff50cc8; PC = 0x555555582d48 *)
mov %L0x7ffffff50cc8 %rax;
(* add    $0x8,%rdx                                #! PC = 0x555555582d4b *)
(* add $0x8, rdx *)
nop;
(* cmp    %rdx,%r12                                #! PC = 0x555555582d4f *)
(* cmp rdx, r12 *)
nop;
(* #jne    0x555555582cb0 <radix_conversions+432>  #! PC = 0x555555582d52 *)
#jne    0x555555582cb0 <radix_conversions+432>  #! 0x555555582d52 = 0x555555582d52;
(* mov    (%rdx),%rax                              #! EA = L0x7ffffff50cd0; Value = 0xcf49534d271fb38d; PC = 0x555555582cb0 *)
mov %rax %L0x7ffffff50cd0;
(* mov    %rax,%rcx                                #! PC = 0x555555582cb3 *)
mov %rcx %rax;
(* shr    $0x10,%rcx                               #! PC = 0x555555582cb6 *)
mov %rcx
    [%rcx[16],%rcx[17],%rcx[18],%rcx[19],%rcx[20],%rcx[21],%rcx[22],%rcx[23],
     %rcx[24],%rcx[25],%rcx[26],%rcx[27],%rcx[28],%rcx[29],%rcx[30],%rcx[31],
     %rcx[32],%rcx[33],%rcx[34],%rcx[35],%rcx[36],%rcx[37],%rcx[38],%rcx[39],
     %rcx[40],%rcx[41],%rcx[42],%rcx[43],%rcx[44],%rcx[45],%rcx[46],%rcx[47],
     %rcx[48],%rcx[49],%rcx[50],%rcx[51],%rcx[52],%rcx[53],%rcx[54],%rcx[55],
     %rcx[56],%rcx[57],%rcx[58],%rcx[59],%rcx[60],%rcx[61],%rcx[62],%rcx[63],
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit];
(* and    %rbx,%rcx                                #! PC = 0x555555582cba *)
mov %rcx
    [0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     %rcx[32],%rcx[33],%rcx[34],%rcx[35],%rcx[36],%rcx[37],%rcx[38],%rcx[39],
     %rcx[40],%rcx[41],%rcx[42],%rcx[43],%rcx[44],%rcx[45],%rcx[46],%rcx[47],
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit];
(* xor    %rax,%rcx                                #! PC = 0x555555582cbd *)
adds %dc %rcx %rax %rcx;
(* mov    %rcx,%rax                                #! PC = 0x555555582cc0 *)
mov %rax %rcx;
(* shr    $0x10,%rax                               #! PC = 0x555555582cc3 *)
mov %rax
    [%rax[16],%rax[17],%rax[18],%rax[19],%rax[20],%rax[21],%rax[22],%rax[23],
     %rax[24],%rax[25],%rax[26],%rax[27],%rax[28],%rax[29],%rax[30],%rax[31],
     %rax[32],%rax[33],%rax[34],%rax[35],%rax[36],%rax[37],%rax[38],%rax[39],
     %rax[40],%rax[41],%rax[42],%rax[43],%rax[44],%rax[45],%rax[46],%rax[47],
     %rax[48],%rax[49],%rax[50],%rax[51],%rax[52],%rax[53],%rax[54],%rax[55],
     %rax[56],%rax[57],%rax[58],%rax[59],%rax[60],%rax[61],%rax[62],%rax[63],
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit];
(* and    $0xffff0000,%eax                         #! PC = 0x555555582cc7 *)
mov %rax
    [0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     %rax[16],%rax[17],%rax[18],%rax[19],%rax[20],%rax[21],%rax[22],%rax[23],
     %rax[24],%rax[25],%rax[26],%rax[27],%rax[28],%rax[29],%rax[30],%rax[31],
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit];
(* xor    %rcx,%rax                                #! PC = 0x555555582ccc *)
adds %dc %rax %rcx %rax;
(* cmp    $0x4,%esi                                #! PC = 0x555555582ccf *)
(* cmp 0x4, esi *)
nop;
(* #je     0x555555582d48 <radix_conversions+584>  #! PC = 0x555555582cd2 *)
#je     0x555555582d48 <radix_conversions+584>  #! 0x555555582cd2 = 0x555555582cd2;
(* mov    %rax,%rcx                                #! PC = 0x555555582cd4 *)
mov %rcx %rax;
(* shr    $0x8,%rcx                                #! PC = 0x555555582cd7 *)
mov %rcx
    [%rcx[8],%rcx[9],%rcx[10],%rcx[11],%rcx[12],%rcx[13],%rcx[14],%rcx[15],
     %rcx[16],%rcx[17],%rcx[18],%rcx[19],%rcx[20],%rcx[21],%rcx[22],%rcx[23],
     %rcx[24],%rcx[25],%rcx[26],%rcx[27],%rcx[28],%rcx[29],%rcx[30],%rcx[31],
     %rcx[32],%rcx[33],%rcx[34],%rcx[35],%rcx[36],%rcx[37],%rcx[38],%rcx[39],
     %rcx[40],%rcx[41],%rcx[42],%rcx[43],%rcx[44],%rcx[45],%rcx[46],%rcx[47],
     %rcx[48],%rcx[49],%rcx[50],%rcx[51],%rcx[52],%rcx[53],%rcx[54],%rcx[55],
     %rcx[56],%rcx[57],%rcx[58],%rcx[59],%rcx[60],%rcx[61],%rcx[62],%rcx[63],
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit];
(* and    %r14,%rcx                                #! PC = 0x555555582cdb *)
mov %rcx
    [0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     %rcx[16],%rcx[17],%rcx[18],%rcx[19],%rcx[20],%rcx[21],%rcx[22],%rcx[23],
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     %rcx[48],%rcx[49],%rcx[50],%rcx[51],%rcx[52],%rcx[53],%rcx[54],%rcx[55],
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit];
(* xor    %rax,%rcx                                #! PC = 0x555555582cde *)
adds %dc %rcx %rax %rcx;
(* mov    %rcx,%rax                                #! PC = 0x555555582ce1 *)
mov %rax %rcx;
(* shr    $0x8,%rax                                #! PC = 0x555555582ce4 *)
mov %rax
    [%rax[8],%rax[9],%rax[10],%rax[11],%rax[12],%rax[13],%rax[14],%rax[15],
     %rax[16],%rax[17],%rax[18],%rax[19],%rax[20],%rax[21],%rax[22],%rax[23],
     %rax[24],%rax[25],%rax[26],%rax[27],%rax[28],%rax[29],%rax[30],%rax[31],
     %rax[32],%rax[33],%rax[34],%rax[35],%rax[36],%rax[37],%rax[38],%rax[39],
     %rax[40],%rax[41],%rax[42],%rax[43],%rax[44],%rax[45],%rax[46],%rax[47],
     %rax[48],%rax[49],%rax[50],%rax[51],%rax[52],%rax[53],%rax[54],%rax[55],
     %rax[56],%rax[57],%rax[58],%rax[59],%rax[60],%rax[61],%rax[62],%rax[63],
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit];
(* and    %r13,%rax                                #! PC = 0x555555582ce8 *)
mov %rax
    [0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     %rax[8],%rax[9],%rax[10],%rax[11],%rax[12],%rax[13],%rax[14],%rax[15],
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     %rax[40],%rax[41],%rax[42],%rax[43],%rax[44],%rax[45],%rax[46],%rax[47],
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit];
(* xor    %rcx,%rax                                #! PC = 0x555555582ceb *)
adds %dc %rax %rcx %rax;
(* cmp    $0x3,%esi                                #! PC = 0x555555582cee *)
(* cmp 0x3, esi *)
nop;
(* #je     0x555555582d48 <radix_conversions+584>  #! PC = 0x555555582cf1 *)
#je     0x555555582d48 <radix_conversions+584>  #! 0x555555582cf1 = 0x555555582cf1;
(* mov    %rax,%rcx                                #! PC = 0x555555582cf3 *)
mov %rcx %rax;
(* shr    $0x4,%rcx                                #! PC = 0x555555582cf6 *)
mov %rcx
    [%rcx[4],%rcx[5],%rcx[6],%rcx[7],
     %rcx[8],%rcx[9],%rcx[10],%rcx[11],%rcx[12],%rcx[13],%rcx[14],%rcx[15],
     %rcx[16],%rcx[17],%rcx[18],%rcx[19],%rcx[20],%rcx[21],%rcx[22],%rcx[23],
     %rcx[24],%rcx[25],%rcx[26],%rcx[27],%rcx[28],%rcx[29],%rcx[30],%rcx[31],
     %rcx[32],%rcx[33],%rcx[34],%rcx[35],%rcx[36],%rcx[37],%rcx[38],%rcx[39],
     %rcx[40],%rcx[41],%rcx[42],%rcx[43],%rcx[44],%rcx[45],%rcx[46],%rcx[47],
     %rcx[48],%rcx[49],%rcx[50],%rcx[51],%rcx[52],%rcx[53],%rcx[54],%rcx[55],
     %rcx[56],%rcx[57],%rcx[58],%rcx[59],%rcx[60],%rcx[61],%rcx[62],%rcx[63],
     0@bit,0@bit,0@bit,0@bit];
(* and    %r8,%rcx                                 #! PC = 0x555555582cfa *)
mov %rcx
    [0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     %rcx[8],%rcx[9],%rcx[10],%rcx[11],0@bit,0@bit,0@bit,0@bit,
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     %rcx[24],%rcx[25],%rcx[26],%rcx[27],0@bit,0@bit,0@bit,0@bit,
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     %rcx[40],%rcx[41],%rcx[42],%rcx[43],0@bit,0@bit,0@bit,0@bit,
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     %rcx[56],%rcx[57],%rcx[58],%rcx[59],0@bit,0@bit,0@bit,0@bit];
(* xor    %rax,%rcx                                #! PC = 0x555555582cfd *)
adds %dc %rcx %rax %rcx;
(* mov    %rcx,%rax                                #! PC = 0x555555582d00 *)
mov %rax %rcx;
(* shr    $0x4,%rax                                #! PC = 0x555555582d03 *)
mov %rax
    [%rax[4],%rax[5],%rax[6],%rax[7],
     %rax[8],%rax[9],%rax[10],%rax[11],%rax[12],%rax[13],%rax[14],%rax[15],
     %rax[16],%rax[17],%rax[18],%rax[19],%rax[20],%rax[21],%rax[22],%rax[23],
     %rax[24],%rax[25],%rax[26],%rax[27],%rax[28],%rax[29],%rax[30],%rax[31],
     %rax[32],%rax[33],%rax[34],%rax[35],%rax[36],%rax[37],%rax[38],%rax[39],
     %rax[40],%rax[41],%rax[42],%rax[43],%rax[44],%rax[45],%rax[46],%rax[47],
     %rax[48],%rax[49],%rax[50],%rax[51],%rax[52],%rax[53],%rax[54],%rax[55],
     %rax[56],%rax[57],%rax[58],%rax[59],%rax[60],%rax[61],%rax[62],%rax[63],
     0@bit,0@bit,0@bit,0@bit];
(* and    %rdi,%rax                                #! PC = 0x555555582d07 *)
mov %rax
    [0@bit,0@bit,0@bit,0@bit,%rax[4],%rax[5],%rax[6],%rax[7],
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     0@bit,0@bit,0@bit,0@bit,%rax[20],%rax[21],%rax[22],%rax[23],
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     0@bit,0@bit,0@bit,0@bit,%rax[36],%rax[37],%rax[38],%rax[39],
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     0@bit,0@bit,0@bit,0@bit,%rax[52],%rax[53],%rax[54],%rax[55],
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit];
(* xor    %rcx,%rax                                #! PC = 0x555555582d0a *)
adds %dc %rax %rcx %rax;
(* cmp    $0x2,%esi                                #! PC = 0x555555582d0d *)
(* cmp 0x2, esi *)
nop;
(* #je     0x555555582d48 <radix_conversions+584>  #! PC = 0x555555582d10 *)
#je     0x555555582d48 <radix_conversions+584>  #! 0x555555582d10 = 0x555555582d10;
(* mov    %rax,%rcx                                #! PC = 0x555555582d12 *)
mov %rcx %rax;
(* shr    $0x2,%rcx                                #! PC = 0x555555582d15 *)
mov %rcx
    [%rcx[2],%rcx[3],%rcx[4],%rcx[5],%rcx[6],%rcx[7],
     %rcx[8],%rcx[9],%rcx[10],%rcx[11],%rcx[12],%rcx[13],%rcx[14],%rcx[15],
     %rcx[16],%rcx[17],%rcx[18],%rcx[19],%rcx[20],%rcx[21],%rcx[22],%rcx[23],
     %rcx[24],%rcx[25],%rcx[26],%rcx[27],%rcx[28],%rcx[29],%rcx[30],%rcx[31],
     %rcx[32],%rcx[33],%rcx[34],%rcx[35],%rcx[36],%rcx[37],%rcx[38],%rcx[39],
     %rcx[40],%rcx[41],%rcx[42],%rcx[43],%rcx[44],%rcx[45],%rcx[46],%rcx[47],
     %rcx[48],%rcx[49],%rcx[50],%rcx[51],%rcx[52],%rcx[53],%rcx[54],%rcx[55],
     %rcx[56],%rcx[57],%rcx[58],%rcx[59],%rcx[60],%rcx[61],%rcx[62],%rcx[63],
     0@bit,0@bit];
(* and    %r10,%rcx                                #! PC = 0x555555582d19 *)
mov %rcx
    [0@bit,0@bit,0@bit,0@bit,%rcx[4],%rcx[5],0@bit,0@bit,
     0@bit,0@bit,0@bit,0@bit,%rcx[12],%rcx[13],0@bit,0@bit,
     0@bit,0@bit,0@bit,0@bit,%rcx[20],%rcx[21],0@bit,0@bit,
     0@bit,0@bit,0@bit,0@bit,%rcx[28],%rcx[29],0@bit,0@bit,
     0@bit,0@bit,0@bit,0@bit,%rcx[36],%rcx[37],0@bit,0@bit,
     0@bit,0@bit,0@bit,0@bit,%rcx[44],%rcx[45],0@bit,0@bit,
     0@bit,0@bit,0@bit,0@bit,%rcx[52],%rcx[53],0@bit,0@bit,
     0@bit,0@bit,0@bit,0@bit,%rcx[60],%rcx[61],0@bit,0@bit];
(* xor    %rax,%rcx                                #! PC = 0x555555582d1c *)
adds %dc %rcx %rax %rcx;
(* mov    %rcx,%rax                                #! PC = 0x555555582d1f *)
mov %rax %rcx;
(* shr    $0x2,%rax                                #! PC = 0x555555582d22 *)
mov %rax
    [%rax[2],%rax[3],%rax[4],%rax[5],%rax[6],%rax[7],
     %rax[8],%rax[9],%rax[10],%rax[11],%rax[12],%rax[13],%rax[14],%rax[15],
     %rax[16],%rax[17],%rax[18],%rax[19],%rax[20],%rax[21],%rax[22],%rax[23],
     %rax[24],%rax[25],%rax[26],%rax[27],%rax[28],%rax[29],%rax[30],%rax[31],
     %rax[32],%rax[33],%rax[34],%rax[35],%rax[36],%rax[37],%rax[38],%rax[39],
     %rax[40],%rax[41],%rax[42],%rax[43],%rax[44],%rax[45],%rax[46],%rax[47],
     %rax[48],%rax[49],%rax[50],%rax[51],%rax[52],%rax[53],%rax[54],%rax[55],
     %rax[56],%rax[57],%rax[58],%rax[59],%rax[60],%rax[61],%rax[62],%rax[63],
     0@bit,0@bit];
(* and    %r9,%rax                                 #! PC = 0x555555582d26 *)
mov %rax
    [0@bit,0@bit,%rax[2],%rax[3],0@bit,0@bit,0@bit,0@bit,
     0@bit,0@bit,%rax[10],%rax[11],0@bit,0@bit,0@bit,0@bit,
     0@bit,0@bit,%rax[18],%rax[19],0@bit,0@bit,0@bit,0@bit,
     0@bit,0@bit,%rax[26],%rax[27],0@bit,0@bit,0@bit,0@bit,
     0@bit,0@bit,%rax[34],%rax[35],0@bit,0@bit,0@bit,0@bit,
     0@bit,0@bit,%rax[42],%rax[43],0@bit,0@bit,0@bit,0@bit,
     0@bit,0@bit,%rax[50],%rax[51],0@bit,0@bit,0@bit,0@bit,
     0@bit,0@bit,%rax[58],%rax[59],0@bit,0@bit,0@bit,0@bit];
(* xor    %rcx,%rax                                #! PC = 0x555555582d29 *)
adds %dc %rax %rcx %rax;
(* test   %esi,%esi                                #! PC = 0x555555582d2c *)
(* test esi, esi *)
nop;
(* #jne    0x555555582d48 <radix_conversions+584>  #! PC = 0x555555582d2e *)
#jne    0x555555582d48 <radix_conversions+584>  #! 0x555555582d2e = 0x555555582d2e;
(* mov    %rax,%rcx                                #! PC = 0x555555582d30 *)
mov %rcx %rax;
(* shr    $1,%rcx                                  #! PC = 0x555555582d33 *)
mov %rcx
    [%rcx[1],%rcx[2],%rcx[3],%rcx[4],%rcx[5],%rcx[6],%rcx[7],
     %rcx[8],%rcx[9],%rcx[10],%rcx[11],%rcx[12],%rcx[13],%rcx[14],%rcx[15],
     %rcx[16],%rcx[17],%rcx[18],%rcx[19],%rcx[20],%rcx[21],%rcx[22],%rcx[23],
     %rcx[24],%rcx[25],%rcx[26],%rcx[27],%rcx[28],%rcx[29],%rcx[30],%rcx[31],
     %rcx[32],%rcx[33],%rcx[34],%rcx[35],%rcx[36],%rcx[37],%rcx[38],%rcx[39],
     %rcx[40],%rcx[41],%rcx[42],%rcx[43],%rcx[44],%rcx[45],%rcx[46],%rcx[47],
     %rcx[48],%rcx[49],%rcx[50],%rcx[51],%rcx[52],%rcx[53],%rcx[54],%rcx[55],
     %rcx[56],%rcx[57],%rcx[58],%rcx[59],%rcx[60],%rcx[61],%rcx[62],%rcx[63],
     0@bit];
(* and    %r15,%rcx                                #! PC = 0x555555582d36 *)
mov %rcx
    [0@bit,0@bit,%rcx[2],0@bit,0@bit,0@bit,%rcx[6],0@bit,
     0@bit,0@bit,%rcx[10],0@bit,0@bit,0@bit,%rcx[14],0@bit,
     0@bit,0@bit,%rcx[18],0@bit,0@bit,0@bit,%rcx[22],0@bit,
     0@bit,0@bit,%rcx[26],0@bit,0@bit,0@bit,%rcx[30],0@bit,
     0@bit,0@bit,%rcx[34],0@bit,0@bit,0@bit,%rcx[38],0@bit,
     0@bit,0@bit,%rcx[42],0@bit,0@bit,0@bit,%rcx[46],0@bit,
     0@bit,0@bit,%rcx[50],0@bit,0@bit,0@bit,%rcx[54],0@bit,
     0@bit,0@bit,%rcx[58],0@bit,0@bit,0@bit,%rcx[62],0@bit];
(* xor    %rax,%rcx                                #! PC = 0x555555582d39 *)
adds %dc %rcx %rax %rcx;
(* mov    %rcx,%rax                                #! PC = 0x555555582d3c *)
mov %rax %rcx;
(* shr    $1,%rax                                  #! PC = 0x555555582d3f *)
mov %rax
    [%rax[1],%rax[2],%rax[3],%rax[4],%rax[5],%rax[6],%rax[7],
     %rax[8],%rax[9],%rax[10],%rax[11],%rax[12],%rax[13],%rax[14],%rax[15],
     %rax[16],%rax[17],%rax[18],%rax[19],%rax[20],%rax[21],%rax[22],%rax[23],
     %rax[24],%rax[25],%rax[26],%rax[27],%rax[28],%rax[29],%rax[30],%rax[31],
     %rax[32],%rax[33],%rax[34],%rax[35],%rax[36],%rax[37],%rax[38],%rax[39],
     %rax[40],%rax[41],%rax[42],%rax[43],%rax[44],%rax[45],%rax[46],%rax[47],
     %rax[48],%rax[49],%rax[50],%rax[51],%rax[52],%rax[53],%rax[54],%rax[55],
     %rax[56],%rax[57],%rax[58],%rax[59],%rax[60],%rax[61],%rax[62],%rax[63],
     0@bit];
(* and    %r11,%rax                                #! PC = 0x555555582d42 *)
mov %rax
    [0@bit,%rax[1],0@bit,0@bit,0@bit,%rax[5],0@bit,0@bit,
     0@bit,%rax[9],0@bit,0@bit,0@bit,%rax[13],0@bit,0@bit,
     0@bit,%rax[17],0@bit,0@bit,0@bit,%rax[21],0@bit,0@bit,
     0@bit,%rax[25],0@bit,0@bit,0@bit,%rax[29],0@bit,0@bit,
     0@bit,%rax[33],0@bit,0@bit,0@bit,%rax[37],0@bit,0@bit,
     0@bit,%rax[41],0@bit,0@bit,0@bit,%rax[45],0@bit,0@bit,
     0@bit,%rax[49],0@bit,0@bit,0@bit,%rax[53],0@bit,0@bit,
     0@bit,%rax[57],0@bit,0@bit,0@bit,%rax[61],0@bit,0@bit];
(* xor    %rcx,%rax                                #! PC = 0x555555582d45 *)
adds %dc %rax %rcx %rax;
(* mov    %rax,(%rdx)                              #! EA = L0x7ffffff50cd0; PC = 0x555555582d48 *)
mov %L0x7ffffff50cd0 %rax;
(* add    $0x8,%rdx                                #! PC = 0x555555582d4b *)
(* add $0x8, rdx *)
nop;
(* cmp    %rdx,%r12                                #! PC = 0x555555582d4f *)
(* cmp rdx, r12 *)
nop;
(* #jne    0x555555582cb0 <radix_conversions+432>  #! PC = 0x555555582d52 *)
#jne    0x555555582cb0 <radix_conversions+432>  #! 0x555555582d52 = 0x555555582d52;
(* mov    (%rdx),%rax                              #! EA = L0x7ffffff50cd8; Value = 0x7d5ae456b481e05f; PC = 0x555555582cb0 *)
mov %rax %L0x7ffffff50cd8;
(* mov    %rax,%rcx                                #! PC = 0x555555582cb3 *)
mov %rcx %rax;
(* shr    $0x10,%rcx                               #! PC = 0x555555582cb6 *)
mov %rcx
    [%rcx[16],%rcx[17],%rcx[18],%rcx[19],%rcx[20],%rcx[21],%rcx[22],%rcx[23],
     %rcx[24],%rcx[25],%rcx[26],%rcx[27],%rcx[28],%rcx[29],%rcx[30],%rcx[31],
     %rcx[32],%rcx[33],%rcx[34],%rcx[35],%rcx[36],%rcx[37],%rcx[38],%rcx[39],
     %rcx[40],%rcx[41],%rcx[42],%rcx[43],%rcx[44],%rcx[45],%rcx[46],%rcx[47],
     %rcx[48],%rcx[49],%rcx[50],%rcx[51],%rcx[52],%rcx[53],%rcx[54],%rcx[55],
     %rcx[56],%rcx[57],%rcx[58],%rcx[59],%rcx[60],%rcx[61],%rcx[62],%rcx[63],
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit];
(* and    %rbx,%rcx                                #! PC = 0x555555582cba *)
mov %rcx
    [0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     %rcx[32],%rcx[33],%rcx[34],%rcx[35],%rcx[36],%rcx[37],%rcx[38],%rcx[39],
     %rcx[40],%rcx[41],%rcx[42],%rcx[43],%rcx[44],%rcx[45],%rcx[46],%rcx[47],
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit];
(* xor    %rax,%rcx                                #! PC = 0x555555582cbd *)
adds %dc %rcx %rax %rcx;
(* mov    %rcx,%rax                                #! PC = 0x555555582cc0 *)
mov %rax %rcx;
(* shr    $0x10,%rax                               #! PC = 0x555555582cc3 *)
mov %rax
    [%rax[16],%rax[17],%rax[18],%rax[19],%rax[20],%rax[21],%rax[22],%rax[23],
     %rax[24],%rax[25],%rax[26],%rax[27],%rax[28],%rax[29],%rax[30],%rax[31],
     %rax[32],%rax[33],%rax[34],%rax[35],%rax[36],%rax[37],%rax[38],%rax[39],
     %rax[40],%rax[41],%rax[42],%rax[43],%rax[44],%rax[45],%rax[46],%rax[47],
     %rax[48],%rax[49],%rax[50],%rax[51],%rax[52],%rax[53],%rax[54],%rax[55],
     %rax[56],%rax[57],%rax[58],%rax[59],%rax[60],%rax[61],%rax[62],%rax[63],
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit];
(* and    $0xffff0000,%eax                         #! PC = 0x555555582cc7 *)
mov %rax
    [0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     %rax[16],%rax[17],%rax[18],%rax[19],%rax[20],%rax[21],%rax[22],%rax[23],
     %rax[24],%rax[25],%rax[26],%rax[27],%rax[28],%rax[29],%rax[30],%rax[31],
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit];
(* xor    %rcx,%rax                                #! PC = 0x555555582ccc *)
adds %dc %rax %rcx %rax;
(* cmp    $0x4,%esi                                #! PC = 0x555555582ccf *)
(* cmp 0x4, esi *)
nop;
(* #je     0x555555582d48 <radix_conversions+584>  #! PC = 0x555555582cd2 *)
#je     0x555555582d48 <radix_conversions+584>  #! 0x555555582cd2 = 0x555555582cd2;
(* mov    %rax,%rcx                                #! PC = 0x555555582cd4 *)
mov %rcx %rax;
(* shr    $0x8,%rcx                                #! PC = 0x555555582cd7 *)
mov %rcx
    [%rcx[8],%rcx[9],%rcx[10],%rcx[11],%rcx[12],%rcx[13],%rcx[14],%rcx[15],
     %rcx[16],%rcx[17],%rcx[18],%rcx[19],%rcx[20],%rcx[21],%rcx[22],%rcx[23],
     %rcx[24],%rcx[25],%rcx[26],%rcx[27],%rcx[28],%rcx[29],%rcx[30],%rcx[31],
     %rcx[32],%rcx[33],%rcx[34],%rcx[35],%rcx[36],%rcx[37],%rcx[38],%rcx[39],
     %rcx[40],%rcx[41],%rcx[42],%rcx[43],%rcx[44],%rcx[45],%rcx[46],%rcx[47],
     %rcx[48],%rcx[49],%rcx[50],%rcx[51],%rcx[52],%rcx[53],%rcx[54],%rcx[55],
     %rcx[56],%rcx[57],%rcx[58],%rcx[59],%rcx[60],%rcx[61],%rcx[62],%rcx[63],
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit];
(* and    %r14,%rcx                                #! PC = 0x555555582cdb *)
mov %rcx
    [0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     %rcx[16],%rcx[17],%rcx[18],%rcx[19],%rcx[20],%rcx[21],%rcx[22],%rcx[23],
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     %rcx[48],%rcx[49],%rcx[50],%rcx[51],%rcx[52],%rcx[53],%rcx[54],%rcx[55],
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit];
(* xor    %rax,%rcx                                #! PC = 0x555555582cde *)
adds %dc %rcx %rax %rcx;
(* mov    %rcx,%rax                                #! PC = 0x555555582ce1 *)
mov %rax %rcx;
(* shr    $0x8,%rax                                #! PC = 0x555555582ce4 *)
mov %rax
    [%rax[8],%rax[9],%rax[10],%rax[11],%rax[12],%rax[13],%rax[14],%rax[15],
     %rax[16],%rax[17],%rax[18],%rax[19],%rax[20],%rax[21],%rax[22],%rax[23],
     %rax[24],%rax[25],%rax[26],%rax[27],%rax[28],%rax[29],%rax[30],%rax[31],
     %rax[32],%rax[33],%rax[34],%rax[35],%rax[36],%rax[37],%rax[38],%rax[39],
     %rax[40],%rax[41],%rax[42],%rax[43],%rax[44],%rax[45],%rax[46],%rax[47],
     %rax[48],%rax[49],%rax[50],%rax[51],%rax[52],%rax[53],%rax[54],%rax[55],
     %rax[56],%rax[57],%rax[58],%rax[59],%rax[60],%rax[61],%rax[62],%rax[63],
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit];
(* and    %r13,%rax                                #! PC = 0x555555582ce8 *)
mov %rax
    [0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     %rax[8],%rax[9],%rax[10],%rax[11],%rax[12],%rax[13],%rax[14],%rax[15],
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     %rax[40],%rax[41],%rax[42],%rax[43],%rax[44],%rax[45],%rax[46],%rax[47],
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit];
(* xor    %rcx,%rax                                #! PC = 0x555555582ceb *)
adds %dc %rax %rcx %rax;
(* cmp    $0x3,%esi                                #! PC = 0x555555582cee *)
(* cmp 0x3, esi *)
nop;
(* #je     0x555555582d48 <radix_conversions+584>  #! PC = 0x555555582cf1 *)
#je     0x555555582d48 <radix_conversions+584>  #! 0x555555582cf1 = 0x555555582cf1;
(* mov    %rax,%rcx                                #! PC = 0x555555582cf3 *)
mov %rcx %rax;
(* shr    $0x4,%rcx                                #! PC = 0x555555582cf6 *)
mov %rcx
    [%rcx[4],%rcx[5],%rcx[6],%rcx[7],
     %rcx[8],%rcx[9],%rcx[10],%rcx[11],%rcx[12],%rcx[13],%rcx[14],%rcx[15],
     %rcx[16],%rcx[17],%rcx[18],%rcx[19],%rcx[20],%rcx[21],%rcx[22],%rcx[23],
     %rcx[24],%rcx[25],%rcx[26],%rcx[27],%rcx[28],%rcx[29],%rcx[30],%rcx[31],
     %rcx[32],%rcx[33],%rcx[34],%rcx[35],%rcx[36],%rcx[37],%rcx[38],%rcx[39],
     %rcx[40],%rcx[41],%rcx[42],%rcx[43],%rcx[44],%rcx[45],%rcx[46],%rcx[47],
     %rcx[48],%rcx[49],%rcx[50],%rcx[51],%rcx[52],%rcx[53],%rcx[54],%rcx[55],
     %rcx[56],%rcx[57],%rcx[58],%rcx[59],%rcx[60],%rcx[61],%rcx[62],%rcx[63],
     0@bit,0@bit,0@bit,0@bit];
(* and    %r8,%rcx                                 #! PC = 0x555555582cfa *)
mov %rcx
    [0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     %rcx[8],%rcx[9],%rcx[10],%rcx[11],0@bit,0@bit,0@bit,0@bit,
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     %rcx[24],%rcx[25],%rcx[26],%rcx[27],0@bit,0@bit,0@bit,0@bit,
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     %rcx[40],%rcx[41],%rcx[42],%rcx[43],0@bit,0@bit,0@bit,0@bit,
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     %rcx[56],%rcx[57],%rcx[58],%rcx[59],0@bit,0@bit,0@bit,0@bit];
(* xor    %rax,%rcx                                #! PC = 0x555555582cfd *)
adds %dc %rcx %rax %rcx;
(* mov    %rcx,%rax                                #! PC = 0x555555582d00 *)
mov %rax %rcx;
(* shr    $0x4,%rax                                #! PC = 0x555555582d03 *)
mov %rax
    [%rax[4],%rax[5],%rax[6],%rax[7],
     %rax[8],%rax[9],%rax[10],%rax[11],%rax[12],%rax[13],%rax[14],%rax[15],
     %rax[16],%rax[17],%rax[18],%rax[19],%rax[20],%rax[21],%rax[22],%rax[23],
     %rax[24],%rax[25],%rax[26],%rax[27],%rax[28],%rax[29],%rax[30],%rax[31],
     %rax[32],%rax[33],%rax[34],%rax[35],%rax[36],%rax[37],%rax[38],%rax[39],
     %rax[40],%rax[41],%rax[42],%rax[43],%rax[44],%rax[45],%rax[46],%rax[47],
     %rax[48],%rax[49],%rax[50],%rax[51],%rax[52],%rax[53],%rax[54],%rax[55],
     %rax[56],%rax[57],%rax[58],%rax[59],%rax[60],%rax[61],%rax[62],%rax[63],
     0@bit,0@bit,0@bit,0@bit];
(* and    %rdi,%rax                                #! PC = 0x555555582d07 *)
mov %rax
    [0@bit,0@bit,0@bit,0@bit,%rax[4],%rax[5],%rax[6],%rax[7],
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     0@bit,0@bit,0@bit,0@bit,%rax[20],%rax[21],%rax[22],%rax[23],
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     0@bit,0@bit,0@bit,0@bit,%rax[36],%rax[37],%rax[38],%rax[39],
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     0@bit,0@bit,0@bit,0@bit,%rax[52],%rax[53],%rax[54],%rax[55],
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit];
(* xor    %rcx,%rax                                #! PC = 0x555555582d0a *)
adds %dc %rax %rcx %rax;
(* cmp    $0x2,%esi                                #! PC = 0x555555582d0d *)
(* cmp 0x2, esi *)
nop;
(* #je     0x555555582d48 <radix_conversions+584>  #! PC = 0x555555582d10 *)
#je     0x555555582d48 <radix_conversions+584>  #! 0x555555582d10 = 0x555555582d10;
(* mov    %rax,%rcx                                #! PC = 0x555555582d12 *)
mov %rcx %rax;
(* shr    $0x2,%rcx                                #! PC = 0x555555582d15 *)
mov %rcx
    [%rcx[2],%rcx[3],%rcx[4],%rcx[5],%rcx[6],%rcx[7],
     %rcx[8],%rcx[9],%rcx[10],%rcx[11],%rcx[12],%rcx[13],%rcx[14],%rcx[15],
     %rcx[16],%rcx[17],%rcx[18],%rcx[19],%rcx[20],%rcx[21],%rcx[22],%rcx[23],
     %rcx[24],%rcx[25],%rcx[26],%rcx[27],%rcx[28],%rcx[29],%rcx[30],%rcx[31],
     %rcx[32],%rcx[33],%rcx[34],%rcx[35],%rcx[36],%rcx[37],%rcx[38],%rcx[39],
     %rcx[40],%rcx[41],%rcx[42],%rcx[43],%rcx[44],%rcx[45],%rcx[46],%rcx[47],
     %rcx[48],%rcx[49],%rcx[50],%rcx[51],%rcx[52],%rcx[53],%rcx[54],%rcx[55],
     %rcx[56],%rcx[57],%rcx[58],%rcx[59],%rcx[60],%rcx[61],%rcx[62],%rcx[63],
     0@bit,0@bit];
(* and    %r10,%rcx                                #! PC = 0x555555582d19 *)
mov %rcx
    [0@bit,0@bit,0@bit,0@bit,%rcx[4],%rcx[5],0@bit,0@bit,
     0@bit,0@bit,0@bit,0@bit,%rcx[12],%rcx[13],0@bit,0@bit,
     0@bit,0@bit,0@bit,0@bit,%rcx[20],%rcx[21],0@bit,0@bit,
     0@bit,0@bit,0@bit,0@bit,%rcx[28],%rcx[29],0@bit,0@bit,
     0@bit,0@bit,0@bit,0@bit,%rcx[36],%rcx[37],0@bit,0@bit,
     0@bit,0@bit,0@bit,0@bit,%rcx[44],%rcx[45],0@bit,0@bit,
     0@bit,0@bit,0@bit,0@bit,%rcx[52],%rcx[53],0@bit,0@bit,
     0@bit,0@bit,0@bit,0@bit,%rcx[60],%rcx[61],0@bit,0@bit];
(* xor    %rax,%rcx                                #! PC = 0x555555582d1c *)
adds %dc %rcx %rax %rcx;
(* mov    %rcx,%rax                                #! PC = 0x555555582d1f *)
mov %rax %rcx;
(* shr    $0x2,%rax                                #! PC = 0x555555582d22 *)
mov %rax
    [%rax[2],%rax[3],%rax[4],%rax[5],%rax[6],%rax[7],
     %rax[8],%rax[9],%rax[10],%rax[11],%rax[12],%rax[13],%rax[14],%rax[15],
     %rax[16],%rax[17],%rax[18],%rax[19],%rax[20],%rax[21],%rax[22],%rax[23],
     %rax[24],%rax[25],%rax[26],%rax[27],%rax[28],%rax[29],%rax[30],%rax[31],
     %rax[32],%rax[33],%rax[34],%rax[35],%rax[36],%rax[37],%rax[38],%rax[39],
     %rax[40],%rax[41],%rax[42],%rax[43],%rax[44],%rax[45],%rax[46],%rax[47],
     %rax[48],%rax[49],%rax[50],%rax[51],%rax[52],%rax[53],%rax[54],%rax[55],
     %rax[56],%rax[57],%rax[58],%rax[59],%rax[60],%rax[61],%rax[62],%rax[63],
     0@bit,0@bit];
(* and    %r9,%rax                                 #! PC = 0x555555582d26 *)
mov %rax
    [0@bit,0@bit,%rax[2],%rax[3],0@bit,0@bit,0@bit,0@bit,
     0@bit,0@bit,%rax[10],%rax[11],0@bit,0@bit,0@bit,0@bit,
     0@bit,0@bit,%rax[18],%rax[19],0@bit,0@bit,0@bit,0@bit,
     0@bit,0@bit,%rax[26],%rax[27],0@bit,0@bit,0@bit,0@bit,
     0@bit,0@bit,%rax[34],%rax[35],0@bit,0@bit,0@bit,0@bit,
     0@bit,0@bit,%rax[42],%rax[43],0@bit,0@bit,0@bit,0@bit,
     0@bit,0@bit,%rax[50],%rax[51],0@bit,0@bit,0@bit,0@bit,
     0@bit,0@bit,%rax[58],%rax[59],0@bit,0@bit,0@bit,0@bit];
(* xor    %rcx,%rax                                #! PC = 0x555555582d29 *)
adds %dc %rax %rcx %rax;
(* test   %esi,%esi                                #! PC = 0x555555582d2c *)
(* test esi, esi *)
nop;
(* #jne    0x555555582d48 <radix_conversions+584>  #! PC = 0x555555582d2e *)
#jne    0x555555582d48 <radix_conversions+584>  #! 0x555555582d2e = 0x555555582d2e;
(* mov    %rax,%rcx                                #! PC = 0x555555582d30 *)
mov %rcx %rax;
(* shr    $1,%rcx                                  #! PC = 0x555555582d33 *)
mov %rcx
    [%rcx[1],%rcx[2],%rcx[3],%rcx[4],%rcx[5],%rcx[6],%rcx[7],
     %rcx[8],%rcx[9],%rcx[10],%rcx[11],%rcx[12],%rcx[13],%rcx[14],%rcx[15],
     %rcx[16],%rcx[17],%rcx[18],%rcx[19],%rcx[20],%rcx[21],%rcx[22],%rcx[23],
     %rcx[24],%rcx[25],%rcx[26],%rcx[27],%rcx[28],%rcx[29],%rcx[30],%rcx[31],
     %rcx[32],%rcx[33],%rcx[34],%rcx[35],%rcx[36],%rcx[37],%rcx[38],%rcx[39],
     %rcx[40],%rcx[41],%rcx[42],%rcx[43],%rcx[44],%rcx[45],%rcx[46],%rcx[47],
     %rcx[48],%rcx[49],%rcx[50],%rcx[51],%rcx[52],%rcx[53],%rcx[54],%rcx[55],
     %rcx[56],%rcx[57],%rcx[58],%rcx[59],%rcx[60],%rcx[61],%rcx[62],%rcx[63],
     0@bit];
(* and    %r15,%rcx                                #! PC = 0x555555582d36 *)
mov %rcx
    [0@bit,0@bit,%rcx[2],0@bit,0@bit,0@bit,%rcx[6],0@bit,
     0@bit,0@bit,%rcx[10],0@bit,0@bit,0@bit,%rcx[14],0@bit,
     0@bit,0@bit,%rcx[18],0@bit,0@bit,0@bit,%rcx[22],0@bit,
     0@bit,0@bit,%rcx[26],0@bit,0@bit,0@bit,%rcx[30],0@bit,
     0@bit,0@bit,%rcx[34],0@bit,0@bit,0@bit,%rcx[38],0@bit,
     0@bit,0@bit,%rcx[42],0@bit,0@bit,0@bit,%rcx[46],0@bit,
     0@bit,0@bit,%rcx[50],0@bit,0@bit,0@bit,%rcx[54],0@bit,
     0@bit,0@bit,%rcx[58],0@bit,0@bit,0@bit,%rcx[62],0@bit];
(* xor    %rax,%rcx                                #! PC = 0x555555582d39 *)
adds %dc %rcx %rax %rcx;
(* mov    %rcx,%rax                                #! PC = 0x555555582d3c *)
mov %rax %rcx;
(* shr    $1,%rax                                  #! PC = 0x555555582d3f *)
mov %rax
    [%rax[1],%rax[2],%rax[3],%rax[4],%rax[5],%rax[6],%rax[7],
     %rax[8],%rax[9],%rax[10],%rax[11],%rax[12],%rax[13],%rax[14],%rax[15],
     %rax[16],%rax[17],%rax[18],%rax[19],%rax[20],%rax[21],%rax[22],%rax[23],
     %rax[24],%rax[25],%rax[26],%rax[27],%rax[28],%rax[29],%rax[30],%rax[31],
     %rax[32],%rax[33],%rax[34],%rax[35],%rax[36],%rax[37],%rax[38],%rax[39],
     %rax[40],%rax[41],%rax[42],%rax[43],%rax[44],%rax[45],%rax[46],%rax[47],
     %rax[48],%rax[49],%rax[50],%rax[51],%rax[52],%rax[53],%rax[54],%rax[55],
     %rax[56],%rax[57],%rax[58],%rax[59],%rax[60],%rax[61],%rax[62],%rax[63],
     0@bit];
(* and    %r11,%rax                                #! PC = 0x555555582d42 *)
mov %rax
    [0@bit,%rax[1],0@bit,0@bit,0@bit,%rax[5],0@bit,0@bit,
     0@bit,%rax[9],0@bit,0@bit,0@bit,%rax[13],0@bit,0@bit,
     0@bit,%rax[17],0@bit,0@bit,0@bit,%rax[21],0@bit,0@bit,
     0@bit,%rax[25],0@bit,0@bit,0@bit,%rax[29],0@bit,0@bit,
     0@bit,%rax[33],0@bit,0@bit,0@bit,%rax[37],0@bit,0@bit,
     0@bit,%rax[41],0@bit,0@bit,0@bit,%rax[45],0@bit,0@bit,
     0@bit,%rax[49],0@bit,0@bit,0@bit,%rax[53],0@bit,0@bit,
     0@bit,%rax[57],0@bit,0@bit,0@bit,%rax[61],0@bit,0@bit];
(* xor    %rcx,%rax                                #! PC = 0x555555582d45 *)
adds %dc %rax %rcx %rax;
(* mov    %rax,(%rdx)                              #! EA = L0x7ffffff50cd8; PC = 0x555555582d48 *)
mov %L0x7ffffff50cd8 %rax;
(* add    $0x8,%rdx                                #! PC = 0x555555582d4b *)
(* add $0x8, rdx *)
nop;
(* cmp    %rdx,%r12                                #! PC = 0x555555582d4f *)
(* cmp rdx, r12 *)
nop;
(* #jne    0x555555582cb0 <radix_conversions+432>  #! PC = 0x555555582d52 *)
#jne    0x555555582cb0 <radix_conversions+432>  #! 0x555555582d52 = 0x555555582d52;
(* mov    (%rdx),%rax                              #! EA = L0x7ffffff50ce0; Value = 0xc084a2d4f951f3bd; PC = 0x555555582cb0 *)
mov %rax %L0x7ffffff50ce0;
(* mov    %rax,%rcx                                #! PC = 0x555555582cb3 *)
mov %rcx %rax;
(* shr    $0x10,%rcx                               #! PC = 0x555555582cb6 *)
mov %rcx
    [%rcx[16],%rcx[17],%rcx[18],%rcx[19],%rcx[20],%rcx[21],%rcx[22],%rcx[23],
     %rcx[24],%rcx[25],%rcx[26],%rcx[27],%rcx[28],%rcx[29],%rcx[30],%rcx[31],
     %rcx[32],%rcx[33],%rcx[34],%rcx[35],%rcx[36],%rcx[37],%rcx[38],%rcx[39],
     %rcx[40],%rcx[41],%rcx[42],%rcx[43],%rcx[44],%rcx[45],%rcx[46],%rcx[47],
     %rcx[48],%rcx[49],%rcx[50],%rcx[51],%rcx[52],%rcx[53],%rcx[54],%rcx[55],
     %rcx[56],%rcx[57],%rcx[58],%rcx[59],%rcx[60],%rcx[61],%rcx[62],%rcx[63],
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit];
(* and    %rbx,%rcx                                #! PC = 0x555555582cba *)
mov %rcx
    [0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     %rcx[32],%rcx[33],%rcx[34],%rcx[35],%rcx[36],%rcx[37],%rcx[38],%rcx[39],
     %rcx[40],%rcx[41],%rcx[42],%rcx[43],%rcx[44],%rcx[45],%rcx[46],%rcx[47],
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit];
(* xor    %rax,%rcx                                #! PC = 0x555555582cbd *)
adds %dc %rcx %rax %rcx;
(* mov    %rcx,%rax                                #! PC = 0x555555582cc0 *)
mov %rax %rcx;
(* shr    $0x10,%rax                               #! PC = 0x555555582cc3 *)
mov %rax
    [%rax[16],%rax[17],%rax[18],%rax[19],%rax[20],%rax[21],%rax[22],%rax[23],
     %rax[24],%rax[25],%rax[26],%rax[27],%rax[28],%rax[29],%rax[30],%rax[31],
     %rax[32],%rax[33],%rax[34],%rax[35],%rax[36],%rax[37],%rax[38],%rax[39],
     %rax[40],%rax[41],%rax[42],%rax[43],%rax[44],%rax[45],%rax[46],%rax[47],
     %rax[48],%rax[49],%rax[50],%rax[51],%rax[52],%rax[53],%rax[54],%rax[55],
     %rax[56],%rax[57],%rax[58],%rax[59],%rax[60],%rax[61],%rax[62],%rax[63],
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit];
(* and    $0xffff0000,%eax                         #! PC = 0x555555582cc7 *)
mov %rax
    [0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     %rax[16],%rax[17],%rax[18],%rax[19],%rax[20],%rax[21],%rax[22],%rax[23],
     %rax[24],%rax[25],%rax[26],%rax[27],%rax[28],%rax[29],%rax[30],%rax[31],
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit];
(* xor    %rcx,%rax                                #! PC = 0x555555582ccc *)
adds %dc %rax %rcx %rax;
(* cmp    $0x4,%esi                                #! PC = 0x555555582ccf *)
(* cmp 0x4, esi *)
nop;
(* #je     0x555555582d48 <radix_conversions+584>  #! PC = 0x555555582cd2 *)
#je     0x555555582d48 <radix_conversions+584>  #! 0x555555582cd2 = 0x555555582cd2;
(* mov    %rax,%rcx                                #! PC = 0x555555582cd4 *)
mov %rcx %rax;
(* shr    $0x8,%rcx                                #! PC = 0x555555582cd7 *)
mov %rcx
    [%rcx[8],%rcx[9],%rcx[10],%rcx[11],%rcx[12],%rcx[13],%rcx[14],%rcx[15],
     %rcx[16],%rcx[17],%rcx[18],%rcx[19],%rcx[20],%rcx[21],%rcx[22],%rcx[23],
     %rcx[24],%rcx[25],%rcx[26],%rcx[27],%rcx[28],%rcx[29],%rcx[30],%rcx[31],
     %rcx[32],%rcx[33],%rcx[34],%rcx[35],%rcx[36],%rcx[37],%rcx[38],%rcx[39],
     %rcx[40],%rcx[41],%rcx[42],%rcx[43],%rcx[44],%rcx[45],%rcx[46],%rcx[47],
     %rcx[48],%rcx[49],%rcx[50],%rcx[51],%rcx[52],%rcx[53],%rcx[54],%rcx[55],
     %rcx[56],%rcx[57],%rcx[58],%rcx[59],%rcx[60],%rcx[61],%rcx[62],%rcx[63],
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit];
(* and    %r14,%rcx                                #! PC = 0x555555582cdb *)
mov %rcx
    [0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     %rcx[16],%rcx[17],%rcx[18],%rcx[19],%rcx[20],%rcx[21],%rcx[22],%rcx[23],
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     %rcx[48],%rcx[49],%rcx[50],%rcx[51],%rcx[52],%rcx[53],%rcx[54],%rcx[55],
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit];
(* xor    %rax,%rcx                                #! PC = 0x555555582cde *)
adds %dc %rcx %rax %rcx;
(* mov    %rcx,%rax                                #! PC = 0x555555582ce1 *)
mov %rax %rcx;
(* shr    $0x8,%rax                                #! PC = 0x555555582ce4 *)
mov %rax
    [%rax[8],%rax[9],%rax[10],%rax[11],%rax[12],%rax[13],%rax[14],%rax[15],
     %rax[16],%rax[17],%rax[18],%rax[19],%rax[20],%rax[21],%rax[22],%rax[23],
     %rax[24],%rax[25],%rax[26],%rax[27],%rax[28],%rax[29],%rax[30],%rax[31],
     %rax[32],%rax[33],%rax[34],%rax[35],%rax[36],%rax[37],%rax[38],%rax[39],
     %rax[40],%rax[41],%rax[42],%rax[43],%rax[44],%rax[45],%rax[46],%rax[47],
     %rax[48],%rax[49],%rax[50],%rax[51],%rax[52],%rax[53],%rax[54],%rax[55],
     %rax[56],%rax[57],%rax[58],%rax[59],%rax[60],%rax[61],%rax[62],%rax[63],
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit];
(* and    %r13,%rax                                #! PC = 0x555555582ce8 *)
mov %rax
    [0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     %rax[8],%rax[9],%rax[10],%rax[11],%rax[12],%rax[13],%rax[14],%rax[15],
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     %rax[40],%rax[41],%rax[42],%rax[43],%rax[44],%rax[45],%rax[46],%rax[47],
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit];
(* xor    %rcx,%rax                                #! PC = 0x555555582ceb *)
adds %dc %rax %rcx %rax;
(* cmp    $0x3,%esi                                #! PC = 0x555555582cee *)
(* cmp 0x3, esi *)
nop;
(* #je     0x555555582d48 <radix_conversions+584>  #! PC = 0x555555582cf1 *)
#je     0x555555582d48 <radix_conversions+584>  #! 0x555555582cf1 = 0x555555582cf1;
(* mov    %rax,%rcx                                #! PC = 0x555555582cf3 *)
mov %rcx %rax;
(* shr    $0x4,%rcx                                #! PC = 0x555555582cf6 *)
mov %rcx
    [%rcx[4],%rcx[5],%rcx[6],%rcx[7],
     %rcx[8],%rcx[9],%rcx[10],%rcx[11],%rcx[12],%rcx[13],%rcx[14],%rcx[15],
     %rcx[16],%rcx[17],%rcx[18],%rcx[19],%rcx[20],%rcx[21],%rcx[22],%rcx[23],
     %rcx[24],%rcx[25],%rcx[26],%rcx[27],%rcx[28],%rcx[29],%rcx[30],%rcx[31],
     %rcx[32],%rcx[33],%rcx[34],%rcx[35],%rcx[36],%rcx[37],%rcx[38],%rcx[39],
     %rcx[40],%rcx[41],%rcx[42],%rcx[43],%rcx[44],%rcx[45],%rcx[46],%rcx[47],
     %rcx[48],%rcx[49],%rcx[50],%rcx[51],%rcx[52],%rcx[53],%rcx[54],%rcx[55],
     %rcx[56],%rcx[57],%rcx[58],%rcx[59],%rcx[60],%rcx[61],%rcx[62],%rcx[63],
     0@bit,0@bit,0@bit,0@bit];
(* and    %r8,%rcx                                 #! PC = 0x555555582cfa *)
mov %rcx
    [0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     %rcx[8],%rcx[9],%rcx[10],%rcx[11],0@bit,0@bit,0@bit,0@bit,
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     %rcx[24],%rcx[25],%rcx[26],%rcx[27],0@bit,0@bit,0@bit,0@bit,
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     %rcx[40],%rcx[41],%rcx[42],%rcx[43],0@bit,0@bit,0@bit,0@bit,
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     %rcx[56],%rcx[57],%rcx[58],%rcx[59],0@bit,0@bit,0@bit,0@bit];
(* xor    %rax,%rcx                                #! PC = 0x555555582cfd *)
adds %dc %rcx %rax %rcx;
(* mov    %rcx,%rax                                #! PC = 0x555555582d00 *)
mov %rax %rcx;
(* shr    $0x4,%rax                                #! PC = 0x555555582d03 *)
mov %rax
    [%rax[4],%rax[5],%rax[6],%rax[7],
     %rax[8],%rax[9],%rax[10],%rax[11],%rax[12],%rax[13],%rax[14],%rax[15],
     %rax[16],%rax[17],%rax[18],%rax[19],%rax[20],%rax[21],%rax[22],%rax[23],
     %rax[24],%rax[25],%rax[26],%rax[27],%rax[28],%rax[29],%rax[30],%rax[31],
     %rax[32],%rax[33],%rax[34],%rax[35],%rax[36],%rax[37],%rax[38],%rax[39],
     %rax[40],%rax[41],%rax[42],%rax[43],%rax[44],%rax[45],%rax[46],%rax[47],
     %rax[48],%rax[49],%rax[50],%rax[51],%rax[52],%rax[53],%rax[54],%rax[55],
     %rax[56],%rax[57],%rax[58],%rax[59],%rax[60],%rax[61],%rax[62],%rax[63],
     0@bit,0@bit,0@bit,0@bit];
(* and    %rdi,%rax                                #! PC = 0x555555582d07 *)
mov %rax
    [0@bit,0@bit,0@bit,0@bit,%rax[4],%rax[5],%rax[6],%rax[7],
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     0@bit,0@bit,0@bit,0@bit,%rax[20],%rax[21],%rax[22],%rax[23],
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     0@bit,0@bit,0@bit,0@bit,%rax[36],%rax[37],%rax[38],%rax[39],
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     0@bit,0@bit,0@bit,0@bit,%rax[52],%rax[53],%rax[54],%rax[55],
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit];
(* xor    %rcx,%rax                                #! PC = 0x555555582d0a *)
adds %dc %rax %rcx %rax;
(* cmp    $0x2,%esi                                #! PC = 0x555555582d0d *)
(* cmp 0x2, esi *)
nop;
(* #je     0x555555582d48 <radix_conversions+584>  #! PC = 0x555555582d10 *)
#je     0x555555582d48 <radix_conversions+584>  #! 0x555555582d10 = 0x555555582d10;
(* mov    %rax,%rcx                                #! PC = 0x555555582d12 *)
mov %rcx %rax;
(* shr    $0x2,%rcx                                #! PC = 0x555555582d15 *)
mov %rcx
    [%rcx[2],%rcx[3],%rcx[4],%rcx[5],%rcx[6],%rcx[7],
     %rcx[8],%rcx[9],%rcx[10],%rcx[11],%rcx[12],%rcx[13],%rcx[14],%rcx[15],
     %rcx[16],%rcx[17],%rcx[18],%rcx[19],%rcx[20],%rcx[21],%rcx[22],%rcx[23],
     %rcx[24],%rcx[25],%rcx[26],%rcx[27],%rcx[28],%rcx[29],%rcx[30],%rcx[31],
     %rcx[32],%rcx[33],%rcx[34],%rcx[35],%rcx[36],%rcx[37],%rcx[38],%rcx[39],
     %rcx[40],%rcx[41],%rcx[42],%rcx[43],%rcx[44],%rcx[45],%rcx[46],%rcx[47],
     %rcx[48],%rcx[49],%rcx[50],%rcx[51],%rcx[52],%rcx[53],%rcx[54],%rcx[55],
     %rcx[56],%rcx[57],%rcx[58],%rcx[59],%rcx[60],%rcx[61],%rcx[62],%rcx[63],
     0@bit,0@bit];
(* and    %r10,%rcx                                #! PC = 0x555555582d19 *)
mov %rcx
    [0@bit,0@bit,0@bit,0@bit,%rcx[4],%rcx[5],0@bit,0@bit,
     0@bit,0@bit,0@bit,0@bit,%rcx[12],%rcx[13],0@bit,0@bit,
     0@bit,0@bit,0@bit,0@bit,%rcx[20],%rcx[21],0@bit,0@bit,
     0@bit,0@bit,0@bit,0@bit,%rcx[28],%rcx[29],0@bit,0@bit,
     0@bit,0@bit,0@bit,0@bit,%rcx[36],%rcx[37],0@bit,0@bit,
     0@bit,0@bit,0@bit,0@bit,%rcx[44],%rcx[45],0@bit,0@bit,
     0@bit,0@bit,0@bit,0@bit,%rcx[52],%rcx[53],0@bit,0@bit,
     0@bit,0@bit,0@bit,0@bit,%rcx[60],%rcx[61],0@bit,0@bit];
(* xor    %rax,%rcx                                #! PC = 0x555555582d1c *)
adds %dc %rcx %rax %rcx;
(* mov    %rcx,%rax                                #! PC = 0x555555582d1f *)
mov %rax %rcx;
(* shr    $0x2,%rax                                #! PC = 0x555555582d22 *)
mov %rax
    [%rax[2],%rax[3],%rax[4],%rax[5],%rax[6],%rax[7],
     %rax[8],%rax[9],%rax[10],%rax[11],%rax[12],%rax[13],%rax[14],%rax[15],
     %rax[16],%rax[17],%rax[18],%rax[19],%rax[20],%rax[21],%rax[22],%rax[23],
     %rax[24],%rax[25],%rax[26],%rax[27],%rax[28],%rax[29],%rax[30],%rax[31],
     %rax[32],%rax[33],%rax[34],%rax[35],%rax[36],%rax[37],%rax[38],%rax[39],
     %rax[40],%rax[41],%rax[42],%rax[43],%rax[44],%rax[45],%rax[46],%rax[47],
     %rax[48],%rax[49],%rax[50],%rax[51],%rax[52],%rax[53],%rax[54],%rax[55],
     %rax[56],%rax[57],%rax[58],%rax[59],%rax[60],%rax[61],%rax[62],%rax[63],
     0@bit,0@bit];
(* and    %r9,%rax                                 #! PC = 0x555555582d26 *)
mov %rax
    [0@bit,0@bit,%rax[2],%rax[3],0@bit,0@bit,0@bit,0@bit,
     0@bit,0@bit,%rax[10],%rax[11],0@bit,0@bit,0@bit,0@bit,
     0@bit,0@bit,%rax[18],%rax[19],0@bit,0@bit,0@bit,0@bit,
     0@bit,0@bit,%rax[26],%rax[27],0@bit,0@bit,0@bit,0@bit,
     0@bit,0@bit,%rax[34],%rax[35],0@bit,0@bit,0@bit,0@bit,
     0@bit,0@bit,%rax[42],%rax[43],0@bit,0@bit,0@bit,0@bit,
     0@bit,0@bit,%rax[50],%rax[51],0@bit,0@bit,0@bit,0@bit,
     0@bit,0@bit,%rax[58],%rax[59],0@bit,0@bit,0@bit,0@bit];
(* xor    %rcx,%rax                                #! PC = 0x555555582d29 *)
adds %dc %rax %rcx %rax;
(* test   %esi,%esi                                #! PC = 0x555555582d2c *)
(* test esi, esi *)
nop;
(* #jne    0x555555582d48 <radix_conversions+584>  #! PC = 0x555555582d2e *)
#jne    0x555555582d48 <radix_conversions+584>  #! 0x555555582d2e = 0x555555582d2e;
(* mov    %rax,%rcx                                #! PC = 0x555555582d30 *)
mov %rcx %rax;
(* shr    $1,%rcx                                  #! PC = 0x555555582d33 *)
mov %rcx
    [%rcx[1],%rcx[2],%rcx[3],%rcx[4],%rcx[5],%rcx[6],%rcx[7],
     %rcx[8],%rcx[9],%rcx[10],%rcx[11],%rcx[12],%rcx[13],%rcx[14],%rcx[15],
     %rcx[16],%rcx[17],%rcx[18],%rcx[19],%rcx[20],%rcx[21],%rcx[22],%rcx[23],
     %rcx[24],%rcx[25],%rcx[26],%rcx[27],%rcx[28],%rcx[29],%rcx[30],%rcx[31],
     %rcx[32],%rcx[33],%rcx[34],%rcx[35],%rcx[36],%rcx[37],%rcx[38],%rcx[39],
     %rcx[40],%rcx[41],%rcx[42],%rcx[43],%rcx[44],%rcx[45],%rcx[46],%rcx[47],
     %rcx[48],%rcx[49],%rcx[50],%rcx[51],%rcx[52],%rcx[53],%rcx[54],%rcx[55],
     %rcx[56],%rcx[57],%rcx[58],%rcx[59],%rcx[60],%rcx[61],%rcx[62],%rcx[63],
     0@bit];
(* and    %r15,%rcx                                #! PC = 0x555555582d36 *)
mov %rcx
    [0@bit,0@bit,%rcx[2],0@bit,0@bit,0@bit,%rcx[6],0@bit,
     0@bit,0@bit,%rcx[10],0@bit,0@bit,0@bit,%rcx[14],0@bit,
     0@bit,0@bit,%rcx[18],0@bit,0@bit,0@bit,%rcx[22],0@bit,
     0@bit,0@bit,%rcx[26],0@bit,0@bit,0@bit,%rcx[30],0@bit,
     0@bit,0@bit,%rcx[34],0@bit,0@bit,0@bit,%rcx[38],0@bit,
     0@bit,0@bit,%rcx[42],0@bit,0@bit,0@bit,%rcx[46],0@bit,
     0@bit,0@bit,%rcx[50],0@bit,0@bit,0@bit,%rcx[54],0@bit,
     0@bit,0@bit,%rcx[58],0@bit,0@bit,0@bit,%rcx[62],0@bit];
(* xor    %rax,%rcx                                #! PC = 0x555555582d39 *)
adds %dc %rcx %rax %rcx;
(* mov    %rcx,%rax                                #! PC = 0x555555582d3c *)
mov %rax %rcx;
(* shr    $1,%rax                                  #! PC = 0x555555582d3f *)
mov %rax
    [%rax[1],%rax[2],%rax[3],%rax[4],%rax[5],%rax[6],%rax[7],
     %rax[8],%rax[9],%rax[10],%rax[11],%rax[12],%rax[13],%rax[14],%rax[15],
     %rax[16],%rax[17],%rax[18],%rax[19],%rax[20],%rax[21],%rax[22],%rax[23],
     %rax[24],%rax[25],%rax[26],%rax[27],%rax[28],%rax[29],%rax[30],%rax[31],
     %rax[32],%rax[33],%rax[34],%rax[35],%rax[36],%rax[37],%rax[38],%rax[39],
     %rax[40],%rax[41],%rax[42],%rax[43],%rax[44],%rax[45],%rax[46],%rax[47],
     %rax[48],%rax[49],%rax[50],%rax[51],%rax[52],%rax[53],%rax[54],%rax[55],
     %rax[56],%rax[57],%rax[58],%rax[59],%rax[60],%rax[61],%rax[62],%rax[63],
     0@bit];
(* and    %r11,%rax                                #! PC = 0x555555582d42 *)
mov %rax
    [0@bit,%rax[1],0@bit,0@bit,0@bit,%rax[5],0@bit,0@bit,
     0@bit,%rax[9],0@bit,0@bit,0@bit,%rax[13],0@bit,0@bit,
     0@bit,%rax[17],0@bit,0@bit,0@bit,%rax[21],0@bit,0@bit,
     0@bit,%rax[25],0@bit,0@bit,0@bit,%rax[29],0@bit,0@bit,
     0@bit,%rax[33],0@bit,0@bit,0@bit,%rax[37],0@bit,0@bit,
     0@bit,%rax[41],0@bit,0@bit,0@bit,%rax[45],0@bit,0@bit,
     0@bit,%rax[49],0@bit,0@bit,0@bit,%rax[53],0@bit,0@bit,
     0@bit,%rax[57],0@bit,0@bit,0@bit,%rax[61],0@bit,0@bit];
(* xor    %rcx,%rax                                #! PC = 0x555555582d45 *)
adds %dc %rax %rcx %rax;
(* mov    %rax,(%rdx)                              #! EA = L0x7ffffff50ce0; PC = 0x555555582d48 *)
mov %L0x7ffffff50ce0 %rax;
(* add    $0x8,%rdx                                #! PC = 0x555555582d4b *)
(* add $0x8, rdx *)
nop;
(* cmp    %rdx,%r12                                #! PC = 0x555555582d4f *)
(* cmp rdx, r12 *)
nop;
(* #jne    0x555555582cb0 <radix_conversions+432>  #! PC = 0x555555582d52 *)
#jne    0x555555582cb0 <radix_conversions+432>  #! 0x555555582d52 = 0x555555582d52;
(* mov    (%rdx),%rax                              #! EA = L0x7ffffff50ce8; Value = 0x74c1d688c866372a; PC = 0x555555582cb0 *)
mov %rax %L0x7ffffff50ce8;
(* mov    %rax,%rcx                                #! PC = 0x555555582cb3 *)
mov %rcx %rax;
(* shr    $0x10,%rcx                               #! PC = 0x555555582cb6 *)
mov %rcx
    [%rcx[16],%rcx[17],%rcx[18],%rcx[19],%rcx[20],%rcx[21],%rcx[22],%rcx[23],
     %rcx[24],%rcx[25],%rcx[26],%rcx[27],%rcx[28],%rcx[29],%rcx[30],%rcx[31],
     %rcx[32],%rcx[33],%rcx[34],%rcx[35],%rcx[36],%rcx[37],%rcx[38],%rcx[39],
     %rcx[40],%rcx[41],%rcx[42],%rcx[43],%rcx[44],%rcx[45],%rcx[46],%rcx[47],
     %rcx[48],%rcx[49],%rcx[50],%rcx[51],%rcx[52],%rcx[53],%rcx[54],%rcx[55],
     %rcx[56],%rcx[57],%rcx[58],%rcx[59],%rcx[60],%rcx[61],%rcx[62],%rcx[63],
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit];
(* and    %rbx,%rcx                                #! PC = 0x555555582cba *)
mov %rcx
    [0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     %rcx[32],%rcx[33],%rcx[34],%rcx[35],%rcx[36],%rcx[37],%rcx[38],%rcx[39],
     %rcx[40],%rcx[41],%rcx[42],%rcx[43],%rcx[44],%rcx[45],%rcx[46],%rcx[47],
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit];
(* xor    %rax,%rcx                                #! PC = 0x555555582cbd *)
adds %dc %rcx %rax %rcx;
(* mov    %rcx,%rax                                #! PC = 0x555555582cc0 *)
mov %rax %rcx;
(* shr    $0x10,%rax                               #! PC = 0x555555582cc3 *)
mov %rax
    [%rax[16],%rax[17],%rax[18],%rax[19],%rax[20],%rax[21],%rax[22],%rax[23],
     %rax[24],%rax[25],%rax[26],%rax[27],%rax[28],%rax[29],%rax[30],%rax[31],
     %rax[32],%rax[33],%rax[34],%rax[35],%rax[36],%rax[37],%rax[38],%rax[39],
     %rax[40],%rax[41],%rax[42],%rax[43],%rax[44],%rax[45],%rax[46],%rax[47],
     %rax[48],%rax[49],%rax[50],%rax[51],%rax[52],%rax[53],%rax[54],%rax[55],
     %rax[56],%rax[57],%rax[58],%rax[59],%rax[60],%rax[61],%rax[62],%rax[63],
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit];
(* and    $0xffff0000,%eax                         #! PC = 0x555555582cc7 *)
mov %rax
    [0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     %rax[16],%rax[17],%rax[18],%rax[19],%rax[20],%rax[21],%rax[22],%rax[23],
     %rax[24],%rax[25],%rax[26],%rax[27],%rax[28],%rax[29],%rax[30],%rax[31],
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit];
(* xor    %rcx,%rax                                #! PC = 0x555555582ccc *)
adds %dc %rax %rcx %rax;
(* cmp    $0x4,%esi                                #! PC = 0x555555582ccf *)
(* cmp 0x4, esi *)
nop;
(* #je     0x555555582d48 <radix_conversions+584>  #! PC = 0x555555582cd2 *)
#je     0x555555582d48 <radix_conversions+584>  #! 0x555555582cd2 = 0x555555582cd2;
(* mov    %rax,%rcx                                #! PC = 0x555555582cd4 *)
mov %rcx %rax;
(* shr    $0x8,%rcx                                #! PC = 0x555555582cd7 *)
mov %rcx
    [%rcx[8],%rcx[9],%rcx[10],%rcx[11],%rcx[12],%rcx[13],%rcx[14],%rcx[15],
     %rcx[16],%rcx[17],%rcx[18],%rcx[19],%rcx[20],%rcx[21],%rcx[22],%rcx[23],
     %rcx[24],%rcx[25],%rcx[26],%rcx[27],%rcx[28],%rcx[29],%rcx[30],%rcx[31],
     %rcx[32],%rcx[33],%rcx[34],%rcx[35],%rcx[36],%rcx[37],%rcx[38],%rcx[39],
     %rcx[40],%rcx[41],%rcx[42],%rcx[43],%rcx[44],%rcx[45],%rcx[46],%rcx[47],
     %rcx[48],%rcx[49],%rcx[50],%rcx[51],%rcx[52],%rcx[53],%rcx[54],%rcx[55],
     %rcx[56],%rcx[57],%rcx[58],%rcx[59],%rcx[60],%rcx[61],%rcx[62],%rcx[63],
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit];
(* and    %r14,%rcx                                #! PC = 0x555555582cdb *)
mov %rcx
    [0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     %rcx[16],%rcx[17],%rcx[18],%rcx[19],%rcx[20],%rcx[21],%rcx[22],%rcx[23],
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     %rcx[48],%rcx[49],%rcx[50],%rcx[51],%rcx[52],%rcx[53],%rcx[54],%rcx[55],
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit];
(* xor    %rax,%rcx                                #! PC = 0x555555582cde *)
adds %dc %rcx %rax %rcx;
(* mov    %rcx,%rax                                #! PC = 0x555555582ce1 *)
mov %rax %rcx;
(* shr    $0x8,%rax                                #! PC = 0x555555582ce4 *)
mov %rax
    [%rax[8],%rax[9],%rax[10],%rax[11],%rax[12],%rax[13],%rax[14],%rax[15],
     %rax[16],%rax[17],%rax[18],%rax[19],%rax[20],%rax[21],%rax[22],%rax[23],
     %rax[24],%rax[25],%rax[26],%rax[27],%rax[28],%rax[29],%rax[30],%rax[31],
     %rax[32],%rax[33],%rax[34],%rax[35],%rax[36],%rax[37],%rax[38],%rax[39],
     %rax[40],%rax[41],%rax[42],%rax[43],%rax[44],%rax[45],%rax[46],%rax[47],
     %rax[48],%rax[49],%rax[50],%rax[51],%rax[52],%rax[53],%rax[54],%rax[55],
     %rax[56],%rax[57],%rax[58],%rax[59],%rax[60],%rax[61],%rax[62],%rax[63],
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit];
(* and    %r13,%rax                                #! PC = 0x555555582ce8 *)
mov %rax
    [0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     %rax[8],%rax[9],%rax[10],%rax[11],%rax[12],%rax[13],%rax[14],%rax[15],
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     %rax[40],%rax[41],%rax[42],%rax[43],%rax[44],%rax[45],%rax[46],%rax[47],
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit];
(* xor    %rcx,%rax                                #! PC = 0x555555582ceb *)
adds %dc %rax %rcx %rax;
(* cmp    $0x3,%esi                                #! PC = 0x555555582cee *)
(* cmp 0x3, esi *)
nop;
(* #je     0x555555582d48 <radix_conversions+584>  #! PC = 0x555555582cf1 *)
#je     0x555555582d48 <radix_conversions+584>  #! 0x555555582cf1 = 0x555555582cf1;
(* mov    %rax,%rcx                                #! PC = 0x555555582cf3 *)
mov %rcx %rax;
(* shr    $0x4,%rcx                                #! PC = 0x555555582cf6 *)
mov %rcx
    [%rcx[4],%rcx[5],%rcx[6],%rcx[7],
     %rcx[8],%rcx[9],%rcx[10],%rcx[11],%rcx[12],%rcx[13],%rcx[14],%rcx[15],
     %rcx[16],%rcx[17],%rcx[18],%rcx[19],%rcx[20],%rcx[21],%rcx[22],%rcx[23],
     %rcx[24],%rcx[25],%rcx[26],%rcx[27],%rcx[28],%rcx[29],%rcx[30],%rcx[31],
     %rcx[32],%rcx[33],%rcx[34],%rcx[35],%rcx[36],%rcx[37],%rcx[38],%rcx[39],
     %rcx[40],%rcx[41],%rcx[42],%rcx[43],%rcx[44],%rcx[45],%rcx[46],%rcx[47],
     %rcx[48],%rcx[49],%rcx[50],%rcx[51],%rcx[52],%rcx[53],%rcx[54],%rcx[55],
     %rcx[56],%rcx[57],%rcx[58],%rcx[59],%rcx[60],%rcx[61],%rcx[62],%rcx[63],
     0@bit,0@bit,0@bit,0@bit];
(* and    %r8,%rcx                                 #! PC = 0x555555582cfa *)
mov %rcx
    [0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     %rcx[8],%rcx[9],%rcx[10],%rcx[11],0@bit,0@bit,0@bit,0@bit,
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     %rcx[24],%rcx[25],%rcx[26],%rcx[27],0@bit,0@bit,0@bit,0@bit,
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     %rcx[40],%rcx[41],%rcx[42],%rcx[43],0@bit,0@bit,0@bit,0@bit,
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     %rcx[56],%rcx[57],%rcx[58],%rcx[59],0@bit,0@bit,0@bit,0@bit];
(* xor    %rax,%rcx                                #! PC = 0x555555582cfd *)
adds %dc %rcx %rax %rcx;
(* mov    %rcx,%rax                                #! PC = 0x555555582d00 *)
mov %rax %rcx;
(* shr    $0x4,%rax                                #! PC = 0x555555582d03 *)
mov %rax
    [%rax[4],%rax[5],%rax[6],%rax[7],
     %rax[8],%rax[9],%rax[10],%rax[11],%rax[12],%rax[13],%rax[14],%rax[15],
     %rax[16],%rax[17],%rax[18],%rax[19],%rax[20],%rax[21],%rax[22],%rax[23],
     %rax[24],%rax[25],%rax[26],%rax[27],%rax[28],%rax[29],%rax[30],%rax[31],
     %rax[32],%rax[33],%rax[34],%rax[35],%rax[36],%rax[37],%rax[38],%rax[39],
     %rax[40],%rax[41],%rax[42],%rax[43],%rax[44],%rax[45],%rax[46],%rax[47],
     %rax[48],%rax[49],%rax[50],%rax[51],%rax[52],%rax[53],%rax[54],%rax[55],
     %rax[56],%rax[57],%rax[58],%rax[59],%rax[60],%rax[61],%rax[62],%rax[63],
     0@bit,0@bit,0@bit,0@bit];
(* and    %rdi,%rax                                #! PC = 0x555555582d07 *)
mov %rax
    [0@bit,0@bit,0@bit,0@bit,%rax[4],%rax[5],%rax[6],%rax[7],
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     0@bit,0@bit,0@bit,0@bit,%rax[20],%rax[21],%rax[22],%rax[23],
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     0@bit,0@bit,0@bit,0@bit,%rax[36],%rax[37],%rax[38],%rax[39],
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     0@bit,0@bit,0@bit,0@bit,%rax[52],%rax[53],%rax[54],%rax[55],
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit];
(* xor    %rcx,%rax                                #! PC = 0x555555582d0a *)
adds %dc %rax %rcx %rax;
(* cmp    $0x2,%esi                                #! PC = 0x555555582d0d *)
(* cmp 0x2, esi *)
nop;
(* #je     0x555555582d48 <radix_conversions+584>  #! PC = 0x555555582d10 *)
#je     0x555555582d48 <radix_conversions+584>  #! 0x555555582d10 = 0x555555582d10;
(* mov    %rax,%rcx                                #! PC = 0x555555582d12 *)
mov %rcx %rax;
(* shr    $0x2,%rcx                                #! PC = 0x555555582d15 *)
mov %rcx
    [%rcx[2],%rcx[3],%rcx[4],%rcx[5],%rcx[6],%rcx[7],
     %rcx[8],%rcx[9],%rcx[10],%rcx[11],%rcx[12],%rcx[13],%rcx[14],%rcx[15],
     %rcx[16],%rcx[17],%rcx[18],%rcx[19],%rcx[20],%rcx[21],%rcx[22],%rcx[23],
     %rcx[24],%rcx[25],%rcx[26],%rcx[27],%rcx[28],%rcx[29],%rcx[30],%rcx[31],
     %rcx[32],%rcx[33],%rcx[34],%rcx[35],%rcx[36],%rcx[37],%rcx[38],%rcx[39],
     %rcx[40],%rcx[41],%rcx[42],%rcx[43],%rcx[44],%rcx[45],%rcx[46],%rcx[47],
     %rcx[48],%rcx[49],%rcx[50],%rcx[51],%rcx[52],%rcx[53],%rcx[54],%rcx[55],
     %rcx[56],%rcx[57],%rcx[58],%rcx[59],%rcx[60],%rcx[61],%rcx[62],%rcx[63],
     0@bit,0@bit];
(* and    %r10,%rcx                                #! PC = 0x555555582d19 *)
mov %rcx
    [0@bit,0@bit,0@bit,0@bit,%rcx[4],%rcx[5],0@bit,0@bit,
     0@bit,0@bit,0@bit,0@bit,%rcx[12],%rcx[13],0@bit,0@bit,
     0@bit,0@bit,0@bit,0@bit,%rcx[20],%rcx[21],0@bit,0@bit,
     0@bit,0@bit,0@bit,0@bit,%rcx[28],%rcx[29],0@bit,0@bit,
     0@bit,0@bit,0@bit,0@bit,%rcx[36],%rcx[37],0@bit,0@bit,
     0@bit,0@bit,0@bit,0@bit,%rcx[44],%rcx[45],0@bit,0@bit,
     0@bit,0@bit,0@bit,0@bit,%rcx[52],%rcx[53],0@bit,0@bit,
     0@bit,0@bit,0@bit,0@bit,%rcx[60],%rcx[61],0@bit,0@bit];
(* xor    %rax,%rcx                                #! PC = 0x555555582d1c *)
adds %dc %rcx %rax %rcx;
(* mov    %rcx,%rax                                #! PC = 0x555555582d1f *)
mov %rax %rcx;
(* shr    $0x2,%rax                                #! PC = 0x555555582d22 *)
mov %rax
    [%rax[2],%rax[3],%rax[4],%rax[5],%rax[6],%rax[7],
     %rax[8],%rax[9],%rax[10],%rax[11],%rax[12],%rax[13],%rax[14],%rax[15],
     %rax[16],%rax[17],%rax[18],%rax[19],%rax[20],%rax[21],%rax[22],%rax[23],
     %rax[24],%rax[25],%rax[26],%rax[27],%rax[28],%rax[29],%rax[30],%rax[31],
     %rax[32],%rax[33],%rax[34],%rax[35],%rax[36],%rax[37],%rax[38],%rax[39],
     %rax[40],%rax[41],%rax[42],%rax[43],%rax[44],%rax[45],%rax[46],%rax[47],
     %rax[48],%rax[49],%rax[50],%rax[51],%rax[52],%rax[53],%rax[54],%rax[55],
     %rax[56],%rax[57],%rax[58],%rax[59],%rax[60],%rax[61],%rax[62],%rax[63],
     0@bit,0@bit];
(* and    %r9,%rax                                 #! PC = 0x555555582d26 *)
mov %rax
    [0@bit,0@bit,%rax[2],%rax[3],0@bit,0@bit,0@bit,0@bit,
     0@bit,0@bit,%rax[10],%rax[11],0@bit,0@bit,0@bit,0@bit,
     0@bit,0@bit,%rax[18],%rax[19],0@bit,0@bit,0@bit,0@bit,
     0@bit,0@bit,%rax[26],%rax[27],0@bit,0@bit,0@bit,0@bit,
     0@bit,0@bit,%rax[34],%rax[35],0@bit,0@bit,0@bit,0@bit,
     0@bit,0@bit,%rax[42],%rax[43],0@bit,0@bit,0@bit,0@bit,
     0@bit,0@bit,%rax[50],%rax[51],0@bit,0@bit,0@bit,0@bit,
     0@bit,0@bit,%rax[58],%rax[59],0@bit,0@bit,0@bit,0@bit];
(* xor    %rcx,%rax                                #! PC = 0x555555582d29 *)
adds %dc %rax %rcx %rax;
(* test   %esi,%esi                                #! PC = 0x555555582d2c *)
(* test esi, esi *)
nop;
(* #jne    0x555555582d48 <radix_conversions+584>  #! PC = 0x555555582d2e *)
#jne    0x555555582d48 <radix_conversions+584>  #! 0x555555582d2e = 0x555555582d2e;
(* mov    %rax,%rcx                                #! PC = 0x555555582d30 *)
mov %rcx %rax;
(* shr    $1,%rcx                                  #! PC = 0x555555582d33 *)
mov %rcx
    [%rcx[1],%rcx[2],%rcx[3],%rcx[4],%rcx[5],%rcx[6],%rcx[7],
     %rcx[8],%rcx[9],%rcx[10],%rcx[11],%rcx[12],%rcx[13],%rcx[14],%rcx[15],
     %rcx[16],%rcx[17],%rcx[18],%rcx[19],%rcx[20],%rcx[21],%rcx[22],%rcx[23],
     %rcx[24],%rcx[25],%rcx[26],%rcx[27],%rcx[28],%rcx[29],%rcx[30],%rcx[31],
     %rcx[32],%rcx[33],%rcx[34],%rcx[35],%rcx[36],%rcx[37],%rcx[38],%rcx[39],
     %rcx[40],%rcx[41],%rcx[42],%rcx[43],%rcx[44],%rcx[45],%rcx[46],%rcx[47],
     %rcx[48],%rcx[49],%rcx[50],%rcx[51],%rcx[52],%rcx[53],%rcx[54],%rcx[55],
     %rcx[56],%rcx[57],%rcx[58],%rcx[59],%rcx[60],%rcx[61],%rcx[62],%rcx[63],
     0@bit];
(* and    %r15,%rcx                                #! PC = 0x555555582d36 *)
mov %rcx
    [0@bit,0@bit,%rcx[2],0@bit,0@bit,0@bit,%rcx[6],0@bit,
     0@bit,0@bit,%rcx[10],0@bit,0@bit,0@bit,%rcx[14],0@bit,
     0@bit,0@bit,%rcx[18],0@bit,0@bit,0@bit,%rcx[22],0@bit,
     0@bit,0@bit,%rcx[26],0@bit,0@bit,0@bit,%rcx[30],0@bit,
     0@bit,0@bit,%rcx[34],0@bit,0@bit,0@bit,%rcx[38],0@bit,
     0@bit,0@bit,%rcx[42],0@bit,0@bit,0@bit,%rcx[46],0@bit,
     0@bit,0@bit,%rcx[50],0@bit,0@bit,0@bit,%rcx[54],0@bit,
     0@bit,0@bit,%rcx[58],0@bit,0@bit,0@bit,%rcx[62],0@bit];
(* xor    %rax,%rcx                                #! PC = 0x555555582d39 *)
adds %dc %rcx %rax %rcx;
(* mov    %rcx,%rax                                #! PC = 0x555555582d3c *)
mov %rax %rcx;
(* shr    $1,%rax                                  #! PC = 0x555555582d3f *)
mov %rax
    [%rax[1],%rax[2],%rax[3],%rax[4],%rax[5],%rax[6],%rax[7],
     %rax[8],%rax[9],%rax[10],%rax[11],%rax[12],%rax[13],%rax[14],%rax[15],
     %rax[16],%rax[17],%rax[18],%rax[19],%rax[20],%rax[21],%rax[22],%rax[23],
     %rax[24],%rax[25],%rax[26],%rax[27],%rax[28],%rax[29],%rax[30],%rax[31],
     %rax[32],%rax[33],%rax[34],%rax[35],%rax[36],%rax[37],%rax[38],%rax[39],
     %rax[40],%rax[41],%rax[42],%rax[43],%rax[44],%rax[45],%rax[46],%rax[47],
     %rax[48],%rax[49],%rax[50],%rax[51],%rax[52],%rax[53],%rax[54],%rax[55],
     %rax[56],%rax[57],%rax[58],%rax[59],%rax[60],%rax[61],%rax[62],%rax[63],
     0@bit];
(* and    %r11,%rax                                #! PC = 0x555555582d42 *)
mov %rax
    [0@bit,%rax[1],0@bit,0@bit,0@bit,%rax[5],0@bit,0@bit,
     0@bit,%rax[9],0@bit,0@bit,0@bit,%rax[13],0@bit,0@bit,
     0@bit,%rax[17],0@bit,0@bit,0@bit,%rax[21],0@bit,0@bit,
     0@bit,%rax[25],0@bit,0@bit,0@bit,%rax[29],0@bit,0@bit,
     0@bit,%rax[33],0@bit,0@bit,0@bit,%rax[37],0@bit,0@bit,
     0@bit,%rax[41],0@bit,0@bit,0@bit,%rax[45],0@bit,0@bit,
     0@bit,%rax[49],0@bit,0@bit,0@bit,%rax[53],0@bit,0@bit,
     0@bit,%rax[57],0@bit,0@bit,0@bit,%rax[61],0@bit,0@bit];
(* xor    %rcx,%rax                                #! PC = 0x555555582d45 *)
adds %dc %rax %rcx %rax;
(* mov    %rax,(%rdx)                              #! EA = L0x7ffffff50ce8; PC = 0x555555582d48 *)
mov %L0x7ffffff50ce8 %rax;
(* add    $0x8,%rdx                                #! PC = 0x555555582d4b *)
(* add $0x8, rdx *)
nop;
(* cmp    %rdx,%r12                                #! PC = 0x555555582d4f *)
(* cmp rdx, r12 *)
nop;
(* #jne    0x555555582cb0 <radix_conversions+432>  #! PC = 0x555555582d52 *)
#jne    0x555555582cb0 <radix_conversions+432>  #! 0x555555582d52 = 0x555555582d52;
(* mov    (%rdx),%rax                              #! EA = L0x7ffffff50cf0; Value = 0x5fc7f66715f23feb; PC = 0x555555582cb0 *)
mov %rax %L0x7ffffff50cf0;
(* mov    %rax,%rcx                                #! PC = 0x555555582cb3 *)
mov %rcx %rax;
(* shr    $0x10,%rcx                               #! PC = 0x555555582cb6 *)
mov %rcx
    [%rcx[16],%rcx[17],%rcx[18],%rcx[19],%rcx[20],%rcx[21],%rcx[22],%rcx[23],
     %rcx[24],%rcx[25],%rcx[26],%rcx[27],%rcx[28],%rcx[29],%rcx[30],%rcx[31],
     %rcx[32],%rcx[33],%rcx[34],%rcx[35],%rcx[36],%rcx[37],%rcx[38],%rcx[39],
     %rcx[40],%rcx[41],%rcx[42],%rcx[43],%rcx[44],%rcx[45],%rcx[46],%rcx[47],
     %rcx[48],%rcx[49],%rcx[50],%rcx[51],%rcx[52],%rcx[53],%rcx[54],%rcx[55],
     %rcx[56],%rcx[57],%rcx[58],%rcx[59],%rcx[60],%rcx[61],%rcx[62],%rcx[63],
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit];
(* and    %rbx,%rcx                                #! PC = 0x555555582cba *)
mov %rcx
    [0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     %rcx[32],%rcx[33],%rcx[34],%rcx[35],%rcx[36],%rcx[37],%rcx[38],%rcx[39],
     %rcx[40],%rcx[41],%rcx[42],%rcx[43],%rcx[44],%rcx[45],%rcx[46],%rcx[47],
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit];
(* xor    %rax,%rcx                                #! PC = 0x555555582cbd *)
adds %dc %rcx %rax %rcx;
(* mov    %rcx,%rax                                #! PC = 0x555555582cc0 *)
mov %rax %rcx;
(* shr    $0x10,%rax                               #! PC = 0x555555582cc3 *)
mov %rax
    [%rax[16],%rax[17],%rax[18],%rax[19],%rax[20],%rax[21],%rax[22],%rax[23],
     %rax[24],%rax[25],%rax[26],%rax[27],%rax[28],%rax[29],%rax[30],%rax[31],
     %rax[32],%rax[33],%rax[34],%rax[35],%rax[36],%rax[37],%rax[38],%rax[39],
     %rax[40],%rax[41],%rax[42],%rax[43],%rax[44],%rax[45],%rax[46],%rax[47],
     %rax[48],%rax[49],%rax[50],%rax[51],%rax[52],%rax[53],%rax[54],%rax[55],
     %rax[56],%rax[57],%rax[58],%rax[59],%rax[60],%rax[61],%rax[62],%rax[63],
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit];
(* and    $0xffff0000,%eax                         #! PC = 0x555555582cc7 *)
mov %rax
    [0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     %rax[16],%rax[17],%rax[18],%rax[19],%rax[20],%rax[21],%rax[22],%rax[23],
     %rax[24],%rax[25],%rax[26],%rax[27],%rax[28],%rax[29],%rax[30],%rax[31],
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit];
(* xor    %rcx,%rax                                #! PC = 0x555555582ccc *)
adds %dc %rax %rcx %rax;
(* cmp    $0x4,%esi                                #! PC = 0x555555582ccf *)
(* cmp 0x4, esi *)
nop;
(* #je     0x555555582d48 <radix_conversions+584>  #! PC = 0x555555582cd2 *)
#je     0x555555582d48 <radix_conversions+584>  #! 0x555555582cd2 = 0x555555582cd2;
(* mov    %rax,%rcx                                #! PC = 0x555555582cd4 *)
mov %rcx %rax;
(* shr    $0x8,%rcx                                #! PC = 0x555555582cd7 *)
mov %rcx
    [%rcx[8],%rcx[9],%rcx[10],%rcx[11],%rcx[12],%rcx[13],%rcx[14],%rcx[15],
     %rcx[16],%rcx[17],%rcx[18],%rcx[19],%rcx[20],%rcx[21],%rcx[22],%rcx[23],
     %rcx[24],%rcx[25],%rcx[26],%rcx[27],%rcx[28],%rcx[29],%rcx[30],%rcx[31],
     %rcx[32],%rcx[33],%rcx[34],%rcx[35],%rcx[36],%rcx[37],%rcx[38],%rcx[39],
     %rcx[40],%rcx[41],%rcx[42],%rcx[43],%rcx[44],%rcx[45],%rcx[46],%rcx[47],
     %rcx[48],%rcx[49],%rcx[50],%rcx[51],%rcx[52],%rcx[53],%rcx[54],%rcx[55],
     %rcx[56],%rcx[57],%rcx[58],%rcx[59],%rcx[60],%rcx[61],%rcx[62],%rcx[63],
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit];
(* and    %r14,%rcx                                #! PC = 0x555555582cdb *)
mov %rcx
    [0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     %rcx[16],%rcx[17],%rcx[18],%rcx[19],%rcx[20],%rcx[21],%rcx[22],%rcx[23],
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     %rcx[48],%rcx[49],%rcx[50],%rcx[51],%rcx[52],%rcx[53],%rcx[54],%rcx[55],
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit];
(* xor    %rax,%rcx                                #! PC = 0x555555582cde *)
adds %dc %rcx %rax %rcx;
(* mov    %rcx,%rax                                #! PC = 0x555555582ce1 *)
mov %rax %rcx;
(* shr    $0x8,%rax                                #! PC = 0x555555582ce4 *)
mov %rax
    [%rax[8],%rax[9],%rax[10],%rax[11],%rax[12],%rax[13],%rax[14],%rax[15],
     %rax[16],%rax[17],%rax[18],%rax[19],%rax[20],%rax[21],%rax[22],%rax[23],
     %rax[24],%rax[25],%rax[26],%rax[27],%rax[28],%rax[29],%rax[30],%rax[31],
     %rax[32],%rax[33],%rax[34],%rax[35],%rax[36],%rax[37],%rax[38],%rax[39],
     %rax[40],%rax[41],%rax[42],%rax[43],%rax[44],%rax[45],%rax[46],%rax[47],
     %rax[48],%rax[49],%rax[50],%rax[51],%rax[52],%rax[53],%rax[54],%rax[55],
     %rax[56],%rax[57],%rax[58],%rax[59],%rax[60],%rax[61],%rax[62],%rax[63],
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit];
(* and    %r13,%rax                                #! PC = 0x555555582ce8 *)
mov %rax
    [0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     %rax[8],%rax[9],%rax[10],%rax[11],%rax[12],%rax[13],%rax[14],%rax[15],
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     %rax[40],%rax[41],%rax[42],%rax[43],%rax[44],%rax[45],%rax[46],%rax[47],
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit];
(* xor    %rcx,%rax                                #! PC = 0x555555582ceb *)
adds %dc %rax %rcx %rax;
(* cmp    $0x3,%esi                                #! PC = 0x555555582cee *)
(* cmp 0x3, esi *)
nop;
(* #je     0x555555582d48 <radix_conversions+584>  #! PC = 0x555555582cf1 *)
#je     0x555555582d48 <radix_conversions+584>  #! 0x555555582cf1 = 0x555555582cf1;
(* mov    %rax,%rcx                                #! PC = 0x555555582cf3 *)
mov %rcx %rax;
(* shr    $0x4,%rcx                                #! PC = 0x555555582cf6 *)
mov %rcx
    [%rcx[4],%rcx[5],%rcx[6],%rcx[7],
     %rcx[8],%rcx[9],%rcx[10],%rcx[11],%rcx[12],%rcx[13],%rcx[14],%rcx[15],
     %rcx[16],%rcx[17],%rcx[18],%rcx[19],%rcx[20],%rcx[21],%rcx[22],%rcx[23],
     %rcx[24],%rcx[25],%rcx[26],%rcx[27],%rcx[28],%rcx[29],%rcx[30],%rcx[31],
     %rcx[32],%rcx[33],%rcx[34],%rcx[35],%rcx[36],%rcx[37],%rcx[38],%rcx[39],
     %rcx[40],%rcx[41],%rcx[42],%rcx[43],%rcx[44],%rcx[45],%rcx[46],%rcx[47],
     %rcx[48],%rcx[49],%rcx[50],%rcx[51],%rcx[52],%rcx[53],%rcx[54],%rcx[55],
     %rcx[56],%rcx[57],%rcx[58],%rcx[59],%rcx[60],%rcx[61],%rcx[62],%rcx[63],
     0@bit,0@bit,0@bit,0@bit];
(* and    %r8,%rcx                                 #! PC = 0x555555582cfa *)
mov %rcx
    [0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     %rcx[8],%rcx[9],%rcx[10],%rcx[11],0@bit,0@bit,0@bit,0@bit,
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     %rcx[24],%rcx[25],%rcx[26],%rcx[27],0@bit,0@bit,0@bit,0@bit,
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     %rcx[40],%rcx[41],%rcx[42],%rcx[43],0@bit,0@bit,0@bit,0@bit,
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     %rcx[56],%rcx[57],%rcx[58],%rcx[59],0@bit,0@bit,0@bit,0@bit];
(* xor    %rax,%rcx                                #! PC = 0x555555582cfd *)
adds %dc %rcx %rax %rcx;
(* mov    %rcx,%rax                                #! PC = 0x555555582d00 *)
mov %rax %rcx;
(* shr    $0x4,%rax                                #! PC = 0x555555582d03 *)
mov %rax
    [%rax[4],%rax[5],%rax[6],%rax[7],
     %rax[8],%rax[9],%rax[10],%rax[11],%rax[12],%rax[13],%rax[14],%rax[15],
     %rax[16],%rax[17],%rax[18],%rax[19],%rax[20],%rax[21],%rax[22],%rax[23],
     %rax[24],%rax[25],%rax[26],%rax[27],%rax[28],%rax[29],%rax[30],%rax[31],
     %rax[32],%rax[33],%rax[34],%rax[35],%rax[36],%rax[37],%rax[38],%rax[39],
     %rax[40],%rax[41],%rax[42],%rax[43],%rax[44],%rax[45],%rax[46],%rax[47],
     %rax[48],%rax[49],%rax[50],%rax[51],%rax[52],%rax[53],%rax[54],%rax[55],
     %rax[56],%rax[57],%rax[58],%rax[59],%rax[60],%rax[61],%rax[62],%rax[63],
     0@bit,0@bit,0@bit,0@bit];
(* and    %rdi,%rax                                #! PC = 0x555555582d07 *)
mov %rax
    [0@bit,0@bit,0@bit,0@bit,%rax[4],%rax[5],%rax[6],%rax[7],
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     0@bit,0@bit,0@bit,0@bit,%rax[20],%rax[21],%rax[22],%rax[23],
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     0@bit,0@bit,0@bit,0@bit,%rax[36],%rax[37],%rax[38],%rax[39],
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     0@bit,0@bit,0@bit,0@bit,%rax[52],%rax[53],%rax[54],%rax[55],
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit];
(* xor    %rcx,%rax                                #! PC = 0x555555582d0a *)
adds %dc %rax %rcx %rax;
(* cmp    $0x2,%esi                                #! PC = 0x555555582d0d *)
(* cmp 0x2, esi *)
nop;
(* #je     0x555555582d48 <radix_conversions+584>  #! PC = 0x555555582d10 *)
#je     0x555555582d48 <radix_conversions+584>  #! 0x555555582d10 = 0x555555582d10;
(* mov    %rax,%rcx                                #! PC = 0x555555582d12 *)
mov %rcx %rax;
(* shr    $0x2,%rcx                                #! PC = 0x555555582d15 *)
mov %rcx
    [%rcx[2],%rcx[3],%rcx[4],%rcx[5],%rcx[6],%rcx[7],
     %rcx[8],%rcx[9],%rcx[10],%rcx[11],%rcx[12],%rcx[13],%rcx[14],%rcx[15],
     %rcx[16],%rcx[17],%rcx[18],%rcx[19],%rcx[20],%rcx[21],%rcx[22],%rcx[23],
     %rcx[24],%rcx[25],%rcx[26],%rcx[27],%rcx[28],%rcx[29],%rcx[30],%rcx[31],
     %rcx[32],%rcx[33],%rcx[34],%rcx[35],%rcx[36],%rcx[37],%rcx[38],%rcx[39],
     %rcx[40],%rcx[41],%rcx[42],%rcx[43],%rcx[44],%rcx[45],%rcx[46],%rcx[47],
     %rcx[48],%rcx[49],%rcx[50],%rcx[51],%rcx[52],%rcx[53],%rcx[54],%rcx[55],
     %rcx[56],%rcx[57],%rcx[58],%rcx[59],%rcx[60],%rcx[61],%rcx[62],%rcx[63],
     0@bit,0@bit];
(* and    %r10,%rcx                                #! PC = 0x555555582d19 *)
mov %rcx
    [0@bit,0@bit,0@bit,0@bit,%rcx[4],%rcx[5],0@bit,0@bit,
     0@bit,0@bit,0@bit,0@bit,%rcx[12],%rcx[13],0@bit,0@bit,
     0@bit,0@bit,0@bit,0@bit,%rcx[20],%rcx[21],0@bit,0@bit,
     0@bit,0@bit,0@bit,0@bit,%rcx[28],%rcx[29],0@bit,0@bit,
     0@bit,0@bit,0@bit,0@bit,%rcx[36],%rcx[37],0@bit,0@bit,
     0@bit,0@bit,0@bit,0@bit,%rcx[44],%rcx[45],0@bit,0@bit,
     0@bit,0@bit,0@bit,0@bit,%rcx[52],%rcx[53],0@bit,0@bit,
     0@bit,0@bit,0@bit,0@bit,%rcx[60],%rcx[61],0@bit,0@bit];
(* xor    %rax,%rcx                                #! PC = 0x555555582d1c *)
adds %dc %rcx %rax %rcx;
(* mov    %rcx,%rax                                #! PC = 0x555555582d1f *)
mov %rax %rcx;
(* shr    $0x2,%rax                                #! PC = 0x555555582d22 *)
mov %rax
    [%rax[2],%rax[3],%rax[4],%rax[5],%rax[6],%rax[7],
     %rax[8],%rax[9],%rax[10],%rax[11],%rax[12],%rax[13],%rax[14],%rax[15],
     %rax[16],%rax[17],%rax[18],%rax[19],%rax[20],%rax[21],%rax[22],%rax[23],
     %rax[24],%rax[25],%rax[26],%rax[27],%rax[28],%rax[29],%rax[30],%rax[31],
     %rax[32],%rax[33],%rax[34],%rax[35],%rax[36],%rax[37],%rax[38],%rax[39],
     %rax[40],%rax[41],%rax[42],%rax[43],%rax[44],%rax[45],%rax[46],%rax[47],
     %rax[48],%rax[49],%rax[50],%rax[51],%rax[52],%rax[53],%rax[54],%rax[55],
     %rax[56],%rax[57],%rax[58],%rax[59],%rax[60],%rax[61],%rax[62],%rax[63],
     0@bit,0@bit];
(* and    %r9,%rax                                 #! PC = 0x555555582d26 *)
mov %rax
    [0@bit,0@bit,%rax[2],%rax[3],0@bit,0@bit,0@bit,0@bit,
     0@bit,0@bit,%rax[10],%rax[11],0@bit,0@bit,0@bit,0@bit,
     0@bit,0@bit,%rax[18],%rax[19],0@bit,0@bit,0@bit,0@bit,
     0@bit,0@bit,%rax[26],%rax[27],0@bit,0@bit,0@bit,0@bit,
     0@bit,0@bit,%rax[34],%rax[35],0@bit,0@bit,0@bit,0@bit,
     0@bit,0@bit,%rax[42],%rax[43],0@bit,0@bit,0@bit,0@bit,
     0@bit,0@bit,%rax[50],%rax[51],0@bit,0@bit,0@bit,0@bit,
     0@bit,0@bit,%rax[58],%rax[59],0@bit,0@bit,0@bit,0@bit];
(* xor    %rcx,%rax                                #! PC = 0x555555582d29 *)
adds %dc %rax %rcx %rax;
(* test   %esi,%esi                                #! PC = 0x555555582d2c *)
(* test esi, esi *)
nop;
(* #jne    0x555555582d48 <radix_conversions+584>  #! PC = 0x555555582d2e *)
#jne    0x555555582d48 <radix_conversions+584>  #! 0x555555582d2e = 0x555555582d2e;
(* mov    %rax,%rcx                                #! PC = 0x555555582d30 *)
mov %rcx %rax;
(* shr    $1,%rcx                                  #! PC = 0x555555582d33 *)
mov %rcx
    [%rcx[1],%rcx[2],%rcx[3],%rcx[4],%rcx[5],%rcx[6],%rcx[7],
     %rcx[8],%rcx[9],%rcx[10],%rcx[11],%rcx[12],%rcx[13],%rcx[14],%rcx[15],
     %rcx[16],%rcx[17],%rcx[18],%rcx[19],%rcx[20],%rcx[21],%rcx[22],%rcx[23],
     %rcx[24],%rcx[25],%rcx[26],%rcx[27],%rcx[28],%rcx[29],%rcx[30],%rcx[31],
     %rcx[32],%rcx[33],%rcx[34],%rcx[35],%rcx[36],%rcx[37],%rcx[38],%rcx[39],
     %rcx[40],%rcx[41],%rcx[42],%rcx[43],%rcx[44],%rcx[45],%rcx[46],%rcx[47],
     %rcx[48],%rcx[49],%rcx[50],%rcx[51],%rcx[52],%rcx[53],%rcx[54],%rcx[55],
     %rcx[56],%rcx[57],%rcx[58],%rcx[59],%rcx[60],%rcx[61],%rcx[62],%rcx[63],
     0@bit];
(* and    %r15,%rcx                                #! PC = 0x555555582d36 *)
mov %rcx
    [0@bit,0@bit,%rcx[2],0@bit,0@bit,0@bit,%rcx[6],0@bit,
     0@bit,0@bit,%rcx[10],0@bit,0@bit,0@bit,%rcx[14],0@bit,
     0@bit,0@bit,%rcx[18],0@bit,0@bit,0@bit,%rcx[22],0@bit,
     0@bit,0@bit,%rcx[26],0@bit,0@bit,0@bit,%rcx[30],0@bit,
     0@bit,0@bit,%rcx[34],0@bit,0@bit,0@bit,%rcx[38],0@bit,
     0@bit,0@bit,%rcx[42],0@bit,0@bit,0@bit,%rcx[46],0@bit,
     0@bit,0@bit,%rcx[50],0@bit,0@bit,0@bit,%rcx[54],0@bit,
     0@bit,0@bit,%rcx[58],0@bit,0@bit,0@bit,%rcx[62],0@bit];
(* xor    %rax,%rcx                                #! PC = 0x555555582d39 *)
adds %dc %rcx %rax %rcx;
(* mov    %rcx,%rax                                #! PC = 0x555555582d3c *)
mov %rax %rcx;
(* shr    $1,%rax                                  #! PC = 0x555555582d3f *)
mov %rax
    [%rax[1],%rax[2],%rax[3],%rax[4],%rax[5],%rax[6],%rax[7],
     %rax[8],%rax[9],%rax[10],%rax[11],%rax[12],%rax[13],%rax[14],%rax[15],
     %rax[16],%rax[17],%rax[18],%rax[19],%rax[20],%rax[21],%rax[22],%rax[23],
     %rax[24],%rax[25],%rax[26],%rax[27],%rax[28],%rax[29],%rax[30],%rax[31],
     %rax[32],%rax[33],%rax[34],%rax[35],%rax[36],%rax[37],%rax[38],%rax[39],
     %rax[40],%rax[41],%rax[42],%rax[43],%rax[44],%rax[45],%rax[46],%rax[47],
     %rax[48],%rax[49],%rax[50],%rax[51],%rax[52],%rax[53],%rax[54],%rax[55],
     %rax[56],%rax[57],%rax[58],%rax[59],%rax[60],%rax[61],%rax[62],%rax[63],
     0@bit];
(* and    %r11,%rax                                #! PC = 0x555555582d42 *)
mov %rax
    [0@bit,%rax[1],0@bit,0@bit,0@bit,%rax[5],0@bit,0@bit,
     0@bit,%rax[9],0@bit,0@bit,0@bit,%rax[13],0@bit,0@bit,
     0@bit,%rax[17],0@bit,0@bit,0@bit,%rax[21],0@bit,0@bit,
     0@bit,%rax[25],0@bit,0@bit,0@bit,%rax[29],0@bit,0@bit,
     0@bit,%rax[33],0@bit,0@bit,0@bit,%rax[37],0@bit,0@bit,
     0@bit,%rax[41],0@bit,0@bit,0@bit,%rax[45],0@bit,0@bit,
     0@bit,%rax[49],0@bit,0@bit,0@bit,%rax[53],0@bit,0@bit,
     0@bit,%rax[57],0@bit,0@bit,0@bit,%rax[61],0@bit,0@bit];
(* xor    %rcx,%rax                                #! PC = 0x555555582d45 *)
adds %dc %rax %rcx %rax;
(* mov    %rax,(%rdx)                              #! EA = L0x7ffffff50cf0; PC = 0x555555582d48 *)
mov %L0x7ffffff50cf0 %rax;
(* add    $0x8,%rdx                                #! PC = 0x555555582d4b *)
(* add $0x8, rdx *)
nop;
(* cmp    %rdx,%r12                                #! PC = 0x555555582d4f *)
(* cmp rdx, r12 *)
nop;
(* #jne    0x555555582cb0 <radix_conversions+432>  #! PC = 0x555555582d52 *)
#jne    0x555555582cb0 <radix_conversions+432>  #! 0x555555582d52 = 0x555555582d52;
(* mov    (%rdx),%rax                              #! EA = L0x7ffffff50cf8; Value = 0x23afde6f59611c32; PC = 0x555555582cb0 *)
mov %rax %L0x7ffffff50cf8;
(* mov    %rax,%rcx                                #! PC = 0x555555582cb3 *)
mov %rcx %rax;
(* shr    $0x10,%rcx                               #! PC = 0x555555582cb6 *)
mov %rcx
    [%rcx[16],%rcx[17],%rcx[18],%rcx[19],%rcx[20],%rcx[21],%rcx[22],%rcx[23],
     %rcx[24],%rcx[25],%rcx[26],%rcx[27],%rcx[28],%rcx[29],%rcx[30],%rcx[31],
     %rcx[32],%rcx[33],%rcx[34],%rcx[35],%rcx[36],%rcx[37],%rcx[38],%rcx[39],
     %rcx[40],%rcx[41],%rcx[42],%rcx[43],%rcx[44],%rcx[45],%rcx[46],%rcx[47],
     %rcx[48],%rcx[49],%rcx[50],%rcx[51],%rcx[52],%rcx[53],%rcx[54],%rcx[55],
     %rcx[56],%rcx[57],%rcx[58],%rcx[59],%rcx[60],%rcx[61],%rcx[62],%rcx[63],
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit];
(* and    %rbx,%rcx                                #! PC = 0x555555582cba *)
mov %rcx
    [0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     %rcx[32],%rcx[33],%rcx[34],%rcx[35],%rcx[36],%rcx[37],%rcx[38],%rcx[39],
     %rcx[40],%rcx[41],%rcx[42],%rcx[43],%rcx[44],%rcx[45],%rcx[46],%rcx[47],
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit];
(* xor    %rax,%rcx                                #! PC = 0x555555582cbd *)
adds %dc %rcx %rax %rcx;
(* mov    %rcx,%rax                                #! PC = 0x555555582cc0 *)
mov %rax %rcx;
(* shr    $0x10,%rax                               #! PC = 0x555555582cc3 *)
mov %rax
    [%rax[16],%rax[17],%rax[18],%rax[19],%rax[20],%rax[21],%rax[22],%rax[23],
     %rax[24],%rax[25],%rax[26],%rax[27],%rax[28],%rax[29],%rax[30],%rax[31],
     %rax[32],%rax[33],%rax[34],%rax[35],%rax[36],%rax[37],%rax[38],%rax[39],
     %rax[40],%rax[41],%rax[42],%rax[43],%rax[44],%rax[45],%rax[46],%rax[47],
     %rax[48],%rax[49],%rax[50],%rax[51],%rax[52],%rax[53],%rax[54],%rax[55],
     %rax[56],%rax[57],%rax[58],%rax[59],%rax[60],%rax[61],%rax[62],%rax[63],
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit];
(* and    $0xffff0000,%eax                         #! PC = 0x555555582cc7 *)
mov %rax
    [0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     %rax[16],%rax[17],%rax[18],%rax[19],%rax[20],%rax[21],%rax[22],%rax[23],
     %rax[24],%rax[25],%rax[26],%rax[27],%rax[28],%rax[29],%rax[30],%rax[31],
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit];
(* xor    %rcx,%rax                                #! PC = 0x555555582ccc *)
adds %dc %rax %rcx %rax;
(* cmp    $0x4,%esi                                #! PC = 0x555555582ccf *)
(* cmp 0x4, esi *)
nop;
(* #je     0x555555582d48 <radix_conversions+584>  #! PC = 0x555555582cd2 *)
#je     0x555555582d48 <radix_conversions+584>  #! 0x555555582cd2 = 0x555555582cd2;
(* mov    %rax,%rcx                                #! PC = 0x555555582cd4 *)
mov %rcx %rax;
(* shr    $0x8,%rcx                                #! PC = 0x555555582cd7 *)
mov %rcx
    [%rcx[8],%rcx[9],%rcx[10],%rcx[11],%rcx[12],%rcx[13],%rcx[14],%rcx[15],
     %rcx[16],%rcx[17],%rcx[18],%rcx[19],%rcx[20],%rcx[21],%rcx[22],%rcx[23],
     %rcx[24],%rcx[25],%rcx[26],%rcx[27],%rcx[28],%rcx[29],%rcx[30],%rcx[31],
     %rcx[32],%rcx[33],%rcx[34],%rcx[35],%rcx[36],%rcx[37],%rcx[38],%rcx[39],
     %rcx[40],%rcx[41],%rcx[42],%rcx[43],%rcx[44],%rcx[45],%rcx[46],%rcx[47],
     %rcx[48],%rcx[49],%rcx[50],%rcx[51],%rcx[52],%rcx[53],%rcx[54],%rcx[55],
     %rcx[56],%rcx[57],%rcx[58],%rcx[59],%rcx[60],%rcx[61],%rcx[62],%rcx[63],
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit];
(* and    %r14,%rcx                                #! PC = 0x555555582cdb *)
mov %rcx
    [0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     %rcx[16],%rcx[17],%rcx[18],%rcx[19],%rcx[20],%rcx[21],%rcx[22],%rcx[23],
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     %rcx[48],%rcx[49],%rcx[50],%rcx[51],%rcx[52],%rcx[53],%rcx[54],%rcx[55],
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit];
(* xor    %rax,%rcx                                #! PC = 0x555555582cde *)
adds %dc %rcx %rax %rcx;
(* mov    %rcx,%rax                                #! PC = 0x555555582ce1 *)
mov %rax %rcx;
(* shr    $0x8,%rax                                #! PC = 0x555555582ce4 *)
mov %rax
    [%rax[8],%rax[9],%rax[10],%rax[11],%rax[12],%rax[13],%rax[14],%rax[15],
     %rax[16],%rax[17],%rax[18],%rax[19],%rax[20],%rax[21],%rax[22],%rax[23],
     %rax[24],%rax[25],%rax[26],%rax[27],%rax[28],%rax[29],%rax[30],%rax[31],
     %rax[32],%rax[33],%rax[34],%rax[35],%rax[36],%rax[37],%rax[38],%rax[39],
     %rax[40],%rax[41],%rax[42],%rax[43],%rax[44],%rax[45],%rax[46],%rax[47],
     %rax[48],%rax[49],%rax[50],%rax[51],%rax[52],%rax[53],%rax[54],%rax[55],
     %rax[56],%rax[57],%rax[58],%rax[59],%rax[60],%rax[61],%rax[62],%rax[63],
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit];
(* and    %r13,%rax                                #! PC = 0x555555582ce8 *)
mov %rax
    [0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     %rax[8],%rax[9],%rax[10],%rax[11],%rax[12],%rax[13],%rax[14],%rax[15],
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     %rax[40],%rax[41],%rax[42],%rax[43],%rax[44],%rax[45],%rax[46],%rax[47],
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit];
(* xor    %rcx,%rax                                #! PC = 0x555555582ceb *)
adds %dc %rax %rcx %rax;
(* cmp    $0x3,%esi                                #! PC = 0x555555582cee *)
(* cmp 0x3, esi *)
nop;
(* #je     0x555555582d48 <radix_conversions+584>  #! PC = 0x555555582cf1 *)
#je     0x555555582d48 <radix_conversions+584>  #! 0x555555582cf1 = 0x555555582cf1;
(* mov    %rax,%rcx                                #! PC = 0x555555582cf3 *)
mov %rcx %rax;
(* shr    $0x4,%rcx                                #! PC = 0x555555582cf6 *)
mov %rcx
    [%rcx[4],%rcx[5],%rcx[6],%rcx[7],
     %rcx[8],%rcx[9],%rcx[10],%rcx[11],%rcx[12],%rcx[13],%rcx[14],%rcx[15],
     %rcx[16],%rcx[17],%rcx[18],%rcx[19],%rcx[20],%rcx[21],%rcx[22],%rcx[23],
     %rcx[24],%rcx[25],%rcx[26],%rcx[27],%rcx[28],%rcx[29],%rcx[30],%rcx[31],
     %rcx[32],%rcx[33],%rcx[34],%rcx[35],%rcx[36],%rcx[37],%rcx[38],%rcx[39],
     %rcx[40],%rcx[41],%rcx[42],%rcx[43],%rcx[44],%rcx[45],%rcx[46],%rcx[47],
     %rcx[48],%rcx[49],%rcx[50],%rcx[51],%rcx[52],%rcx[53],%rcx[54],%rcx[55],
     %rcx[56],%rcx[57],%rcx[58],%rcx[59],%rcx[60],%rcx[61],%rcx[62],%rcx[63],
     0@bit,0@bit,0@bit,0@bit];
(* and    %r8,%rcx                                 #! PC = 0x555555582cfa *)
mov %rcx
    [0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     %rcx[8],%rcx[9],%rcx[10],%rcx[11],0@bit,0@bit,0@bit,0@bit,
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     %rcx[24],%rcx[25],%rcx[26],%rcx[27],0@bit,0@bit,0@bit,0@bit,
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     %rcx[40],%rcx[41],%rcx[42],%rcx[43],0@bit,0@bit,0@bit,0@bit,
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     %rcx[56],%rcx[57],%rcx[58],%rcx[59],0@bit,0@bit,0@bit,0@bit];
(* xor    %rax,%rcx                                #! PC = 0x555555582cfd *)
adds %dc %rcx %rax %rcx;
(* mov    %rcx,%rax                                #! PC = 0x555555582d00 *)
mov %rax %rcx;
(* shr    $0x4,%rax                                #! PC = 0x555555582d03 *)
mov %rax
    [%rax[4],%rax[5],%rax[6],%rax[7],
     %rax[8],%rax[9],%rax[10],%rax[11],%rax[12],%rax[13],%rax[14],%rax[15],
     %rax[16],%rax[17],%rax[18],%rax[19],%rax[20],%rax[21],%rax[22],%rax[23],
     %rax[24],%rax[25],%rax[26],%rax[27],%rax[28],%rax[29],%rax[30],%rax[31],
     %rax[32],%rax[33],%rax[34],%rax[35],%rax[36],%rax[37],%rax[38],%rax[39],
     %rax[40],%rax[41],%rax[42],%rax[43],%rax[44],%rax[45],%rax[46],%rax[47],
     %rax[48],%rax[49],%rax[50],%rax[51],%rax[52],%rax[53],%rax[54],%rax[55],
     %rax[56],%rax[57],%rax[58],%rax[59],%rax[60],%rax[61],%rax[62],%rax[63],
     0@bit,0@bit,0@bit,0@bit];
(* and    %rdi,%rax                                #! PC = 0x555555582d07 *)
mov %rax
    [0@bit,0@bit,0@bit,0@bit,%rax[4],%rax[5],%rax[6],%rax[7],
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     0@bit,0@bit,0@bit,0@bit,%rax[20],%rax[21],%rax[22],%rax[23],
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     0@bit,0@bit,0@bit,0@bit,%rax[36],%rax[37],%rax[38],%rax[39],
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     0@bit,0@bit,0@bit,0@bit,%rax[52],%rax[53],%rax[54],%rax[55],
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit];
(* xor    %rcx,%rax                                #! PC = 0x555555582d0a *)
adds %dc %rax %rcx %rax;
(* cmp    $0x2,%esi                                #! PC = 0x555555582d0d *)
(* cmp 0x2, esi *)
nop;
(* #je     0x555555582d48 <radix_conversions+584>  #! PC = 0x555555582d10 *)
#je     0x555555582d48 <radix_conversions+584>  #! 0x555555582d10 = 0x555555582d10;
(* mov    %rax,%rcx                                #! PC = 0x555555582d12 *)
mov %rcx %rax;
(* shr    $0x2,%rcx                                #! PC = 0x555555582d15 *)
mov %rcx
    [%rcx[2],%rcx[3],%rcx[4],%rcx[5],%rcx[6],%rcx[7],
     %rcx[8],%rcx[9],%rcx[10],%rcx[11],%rcx[12],%rcx[13],%rcx[14],%rcx[15],
     %rcx[16],%rcx[17],%rcx[18],%rcx[19],%rcx[20],%rcx[21],%rcx[22],%rcx[23],
     %rcx[24],%rcx[25],%rcx[26],%rcx[27],%rcx[28],%rcx[29],%rcx[30],%rcx[31],
     %rcx[32],%rcx[33],%rcx[34],%rcx[35],%rcx[36],%rcx[37],%rcx[38],%rcx[39],
     %rcx[40],%rcx[41],%rcx[42],%rcx[43],%rcx[44],%rcx[45],%rcx[46],%rcx[47],
     %rcx[48],%rcx[49],%rcx[50],%rcx[51],%rcx[52],%rcx[53],%rcx[54],%rcx[55],
     %rcx[56],%rcx[57],%rcx[58],%rcx[59],%rcx[60],%rcx[61],%rcx[62],%rcx[63],
     0@bit,0@bit];
(* and    %r10,%rcx                                #! PC = 0x555555582d19 *)
mov %rcx
    [0@bit,0@bit,0@bit,0@bit,%rcx[4],%rcx[5],0@bit,0@bit,
     0@bit,0@bit,0@bit,0@bit,%rcx[12],%rcx[13],0@bit,0@bit,
     0@bit,0@bit,0@bit,0@bit,%rcx[20],%rcx[21],0@bit,0@bit,
     0@bit,0@bit,0@bit,0@bit,%rcx[28],%rcx[29],0@bit,0@bit,
     0@bit,0@bit,0@bit,0@bit,%rcx[36],%rcx[37],0@bit,0@bit,
     0@bit,0@bit,0@bit,0@bit,%rcx[44],%rcx[45],0@bit,0@bit,
     0@bit,0@bit,0@bit,0@bit,%rcx[52],%rcx[53],0@bit,0@bit,
     0@bit,0@bit,0@bit,0@bit,%rcx[60],%rcx[61],0@bit,0@bit];
(* xor    %rax,%rcx                                #! PC = 0x555555582d1c *)
adds %dc %rcx %rax %rcx;
(* mov    %rcx,%rax                                #! PC = 0x555555582d1f *)
mov %rax %rcx;
(* shr    $0x2,%rax                                #! PC = 0x555555582d22 *)
mov %rax
    [%rax[2],%rax[3],%rax[4],%rax[5],%rax[6],%rax[7],
     %rax[8],%rax[9],%rax[10],%rax[11],%rax[12],%rax[13],%rax[14],%rax[15],
     %rax[16],%rax[17],%rax[18],%rax[19],%rax[20],%rax[21],%rax[22],%rax[23],
     %rax[24],%rax[25],%rax[26],%rax[27],%rax[28],%rax[29],%rax[30],%rax[31],
     %rax[32],%rax[33],%rax[34],%rax[35],%rax[36],%rax[37],%rax[38],%rax[39],
     %rax[40],%rax[41],%rax[42],%rax[43],%rax[44],%rax[45],%rax[46],%rax[47],
     %rax[48],%rax[49],%rax[50],%rax[51],%rax[52],%rax[53],%rax[54],%rax[55],
     %rax[56],%rax[57],%rax[58],%rax[59],%rax[60],%rax[61],%rax[62],%rax[63],
     0@bit,0@bit];
(* and    %r9,%rax                                 #! PC = 0x555555582d26 *)
mov %rax
    [0@bit,0@bit,%rax[2],%rax[3],0@bit,0@bit,0@bit,0@bit,
     0@bit,0@bit,%rax[10],%rax[11],0@bit,0@bit,0@bit,0@bit,
     0@bit,0@bit,%rax[18],%rax[19],0@bit,0@bit,0@bit,0@bit,
     0@bit,0@bit,%rax[26],%rax[27],0@bit,0@bit,0@bit,0@bit,
     0@bit,0@bit,%rax[34],%rax[35],0@bit,0@bit,0@bit,0@bit,
     0@bit,0@bit,%rax[42],%rax[43],0@bit,0@bit,0@bit,0@bit,
     0@bit,0@bit,%rax[50],%rax[51],0@bit,0@bit,0@bit,0@bit,
     0@bit,0@bit,%rax[58],%rax[59],0@bit,0@bit,0@bit,0@bit];
(* xor    %rcx,%rax                                #! PC = 0x555555582d29 *)
adds %dc %rax %rcx %rax;
(* test   %esi,%esi                                #! PC = 0x555555582d2c *)
(* test esi, esi *)
nop;
(* #jne    0x555555582d48 <radix_conversions+584>  #! PC = 0x555555582d2e *)
#jne    0x555555582d48 <radix_conversions+584>  #! 0x555555582d2e = 0x555555582d2e;
(* mov    %rax,%rcx                                #! PC = 0x555555582d30 *)
mov %rcx %rax;
(* shr    $1,%rcx                                  #! PC = 0x555555582d33 *)
mov %rcx
    [%rcx[1],%rcx[2],%rcx[3],%rcx[4],%rcx[5],%rcx[6],%rcx[7],
     %rcx[8],%rcx[9],%rcx[10],%rcx[11],%rcx[12],%rcx[13],%rcx[14],%rcx[15],
     %rcx[16],%rcx[17],%rcx[18],%rcx[19],%rcx[20],%rcx[21],%rcx[22],%rcx[23],
     %rcx[24],%rcx[25],%rcx[26],%rcx[27],%rcx[28],%rcx[29],%rcx[30],%rcx[31],
     %rcx[32],%rcx[33],%rcx[34],%rcx[35],%rcx[36],%rcx[37],%rcx[38],%rcx[39],
     %rcx[40],%rcx[41],%rcx[42],%rcx[43],%rcx[44],%rcx[45],%rcx[46],%rcx[47],
     %rcx[48],%rcx[49],%rcx[50],%rcx[51],%rcx[52],%rcx[53],%rcx[54],%rcx[55],
     %rcx[56],%rcx[57],%rcx[58],%rcx[59],%rcx[60],%rcx[61],%rcx[62],%rcx[63],
     0@bit];
(* and    %r15,%rcx                                #! PC = 0x555555582d36 *)
mov %rcx
    [0@bit,0@bit,%rcx[2],0@bit,0@bit,0@bit,%rcx[6],0@bit,
     0@bit,0@bit,%rcx[10],0@bit,0@bit,0@bit,%rcx[14],0@bit,
     0@bit,0@bit,%rcx[18],0@bit,0@bit,0@bit,%rcx[22],0@bit,
     0@bit,0@bit,%rcx[26],0@bit,0@bit,0@bit,%rcx[30],0@bit,
     0@bit,0@bit,%rcx[34],0@bit,0@bit,0@bit,%rcx[38],0@bit,
     0@bit,0@bit,%rcx[42],0@bit,0@bit,0@bit,%rcx[46],0@bit,
     0@bit,0@bit,%rcx[50],0@bit,0@bit,0@bit,%rcx[54],0@bit,
     0@bit,0@bit,%rcx[58],0@bit,0@bit,0@bit,%rcx[62],0@bit];
(* xor    %rax,%rcx                                #! PC = 0x555555582d39 *)
adds %dc %rcx %rax %rcx;
(* mov    %rcx,%rax                                #! PC = 0x555555582d3c *)
mov %rax %rcx;
(* shr    $1,%rax                                  #! PC = 0x555555582d3f *)
mov %rax
    [%rax[1],%rax[2],%rax[3],%rax[4],%rax[5],%rax[6],%rax[7],
     %rax[8],%rax[9],%rax[10],%rax[11],%rax[12],%rax[13],%rax[14],%rax[15],
     %rax[16],%rax[17],%rax[18],%rax[19],%rax[20],%rax[21],%rax[22],%rax[23],
     %rax[24],%rax[25],%rax[26],%rax[27],%rax[28],%rax[29],%rax[30],%rax[31],
     %rax[32],%rax[33],%rax[34],%rax[35],%rax[36],%rax[37],%rax[38],%rax[39],
     %rax[40],%rax[41],%rax[42],%rax[43],%rax[44],%rax[45],%rax[46],%rax[47],
     %rax[48],%rax[49],%rax[50],%rax[51],%rax[52],%rax[53],%rax[54],%rax[55],
     %rax[56],%rax[57],%rax[58],%rax[59],%rax[60],%rax[61],%rax[62],%rax[63],
     0@bit];
(* and    %r11,%rax                                #! PC = 0x555555582d42 *)
mov %rax
    [0@bit,%rax[1],0@bit,0@bit,0@bit,%rax[5],0@bit,0@bit,
     0@bit,%rax[9],0@bit,0@bit,0@bit,%rax[13],0@bit,0@bit,
     0@bit,%rax[17],0@bit,0@bit,0@bit,%rax[21],0@bit,0@bit,
     0@bit,%rax[25],0@bit,0@bit,0@bit,%rax[29],0@bit,0@bit,
     0@bit,%rax[33],0@bit,0@bit,0@bit,%rax[37],0@bit,0@bit,
     0@bit,%rax[41],0@bit,0@bit,0@bit,%rax[45],0@bit,0@bit,
     0@bit,%rax[49],0@bit,0@bit,0@bit,%rax[53],0@bit,0@bit,
     0@bit,%rax[57],0@bit,0@bit,0@bit,%rax[61],0@bit,0@bit];
(* xor    %rcx,%rax                                #! PC = 0x555555582d45 *)
adds %dc %rax %rcx %rax;
(* mov    %rax,(%rdx)                              #! EA = L0x7ffffff50cf8; PC = 0x555555582d48 *)
mov %L0x7ffffff50cf8 %rax;
(* add    $0x8,%rdx                                #! PC = 0x555555582d4b *)
(* add $0x8, rdx *)
nop;
(* cmp    %rdx,%r12                                #! PC = 0x555555582d4f *)
(* cmp rdx, r12 *)
nop;
(* #jne    0x555555582cb0 <radix_conversions+432>  #! PC = 0x555555582d52 *)
#jne    0x555555582cb0 <radix_conversions+432>  #! 0x555555582d52 = 0x555555582d52;

(****************
  NOTE: end of 1st radix conversion. obtain 2 32-coefficient polynomials
 ****************)

ghost X0@uint64,F00@uint16,F01@uint16:
X0 = X**2 + X /\
F00 =
poly z [%L0x7ffffff50ca0[0],%L0x7ffffff50ca8[0],%L0x7ffffff50cb0[0],
        %L0x7ffffff50cb8[0],%L0x7ffffff50cc0[0],%L0x7ffffff50cc8[0],
        %L0x7ffffff50cd0[0],%L0x7ffffff50cd8[0],%L0x7ffffff50ce0[0],
        %L0x7ffffff50ce8[0],%L0x7ffffff50cf0[0],%L0x7ffffff50cf8[0]]*X0**0+
poly z [%L0x7ffffff50ca0[2],%L0x7ffffff50ca8[2],%L0x7ffffff50cb0[2],
        %L0x7ffffff50cb8[2],%L0x7ffffff50cc0[2],%L0x7ffffff50cc8[2],
        %L0x7ffffff50cd0[2],%L0x7ffffff50cd8[2],%L0x7ffffff50ce0[2],
        %L0x7ffffff50ce8[2],%L0x7ffffff50cf0[2],%L0x7ffffff50cf8[2]]*X0**1+
poly z [%L0x7ffffff50ca0[4],%L0x7ffffff50ca8[4],%L0x7ffffff50cb0[4],
        %L0x7ffffff50cb8[4],%L0x7ffffff50cc0[4],%L0x7ffffff50cc8[4],
        %L0x7ffffff50cd0[4],%L0x7ffffff50cd8[4],%L0x7ffffff50ce0[4],
        %L0x7ffffff50ce8[4],%L0x7ffffff50cf0[4],%L0x7ffffff50cf8[4]]*X0**2+
poly z [%L0x7ffffff50ca0[6],%L0x7ffffff50ca8[6],%L0x7ffffff50cb0[6],
        %L0x7ffffff50cb8[6],%L0x7ffffff50cc0[6],%L0x7ffffff50cc8[6],
        %L0x7ffffff50cd0[6],%L0x7ffffff50cd8[6],%L0x7ffffff50ce0[6],
        %L0x7ffffff50ce8[6],%L0x7ffffff50cf0[6],%L0x7ffffff50cf8[6]]*X0**3+
poly z [%L0x7ffffff50ca0[8],%L0x7ffffff50ca8[8],%L0x7ffffff50cb0[8],
        %L0x7ffffff50cb8[8],%L0x7ffffff50cc0[8],%L0x7ffffff50cc8[8],
        %L0x7ffffff50cd0[8],%L0x7ffffff50cd8[8],%L0x7ffffff50ce0[8],
        %L0x7ffffff50ce8[8],%L0x7ffffff50cf0[8],%L0x7ffffff50cf8[8]]*X0**4+
poly z [%L0x7ffffff50ca0[10],%L0x7ffffff50ca8[10],%L0x7ffffff50cb0[10],
        %L0x7ffffff50cb8[10],%L0x7ffffff50cc0[10],%L0x7ffffff50cc8[10],
        %L0x7ffffff50cd0[10],%L0x7ffffff50cd8[10],%L0x7ffffff50ce0[10],
        %L0x7ffffff50ce8[10],%L0x7ffffff50cf0[10],%L0x7ffffff50cf8[10]]*X0**5+
poly z [%L0x7ffffff50ca0[12],%L0x7ffffff50ca8[12],%L0x7ffffff50cb0[12],
        %L0x7ffffff50cb8[12],%L0x7ffffff50cc0[12],%L0x7ffffff50cc8[12],
        %L0x7ffffff50cd0[12],%L0x7ffffff50cd8[12],%L0x7ffffff50ce0[12],
        %L0x7ffffff50ce8[12],%L0x7ffffff50cf0[12],%L0x7ffffff50cf8[12]]*X0**6+
poly z [%L0x7ffffff50ca0[14],%L0x7ffffff50ca8[14],%L0x7ffffff50cb0[14],
        %L0x7ffffff50cb8[14],%L0x7ffffff50cc0[14],%L0x7ffffff50cc8[14],
        %L0x7ffffff50cd0[14],%L0x7ffffff50cd8[14],%L0x7ffffff50ce0[14],
        %L0x7ffffff50ce8[14],%L0x7ffffff50cf0[14],%L0x7ffffff50cf8[14]]*X0**7+
poly z [%L0x7ffffff50ca0[16],%L0x7ffffff50ca8[16],%L0x7ffffff50cb0[16],
        %L0x7ffffff50cb8[16],%L0x7ffffff50cc0[16],%L0x7ffffff50cc8[16],
        %L0x7ffffff50cd0[16],%L0x7ffffff50cd8[16],%L0x7ffffff50ce0[16],
        %L0x7ffffff50ce8[16],%L0x7ffffff50cf0[16],%L0x7ffffff50cf8[16]]*X0**8+
poly z [%L0x7ffffff50ca0[18],%L0x7ffffff50ca8[18],%L0x7ffffff50cb0[18],
        %L0x7ffffff50cb8[18],%L0x7ffffff50cc0[18],%L0x7ffffff50cc8[18],
        %L0x7ffffff50cd0[18],%L0x7ffffff50cd8[18],%L0x7ffffff50ce0[18],
        %L0x7ffffff50ce8[18],%L0x7ffffff50cf0[18],%L0x7ffffff50cf8[18]]*X0**9+
poly z [%L0x7ffffff50ca0[20],%L0x7ffffff50ca8[20],%L0x7ffffff50cb0[20],
        %L0x7ffffff50cb8[20],%L0x7ffffff50cc0[20],%L0x7ffffff50cc8[20],
        %L0x7ffffff50cd0[20],%L0x7ffffff50cd8[20],%L0x7ffffff50ce0[20],
        %L0x7ffffff50ce8[20],%L0x7ffffff50cf0[20],%L0x7ffffff50cf8[20]]*X0**10+
poly z [%L0x7ffffff50ca0[22],%L0x7ffffff50ca8[22],%L0x7ffffff50cb0[22],
        %L0x7ffffff50cb8[22],%L0x7ffffff50cc0[22],%L0x7ffffff50cc8[22],
        %L0x7ffffff50cd0[22],%L0x7ffffff50cd8[22],%L0x7ffffff50ce0[22],
        %L0x7ffffff50ce8[22],%L0x7ffffff50cf0[22],%L0x7ffffff50cf8[22]]*X0**11+
poly z [%L0x7ffffff50ca0[24],%L0x7ffffff50ca8[24],%L0x7ffffff50cb0[24],
        %L0x7ffffff50cb8[24],%L0x7ffffff50cc0[24],%L0x7ffffff50cc8[24],
        %L0x7ffffff50cd0[24],%L0x7ffffff50cd8[24],%L0x7ffffff50ce0[24],
        %L0x7ffffff50ce8[24],%L0x7ffffff50cf0[24],%L0x7ffffff50cf8[24]]*X0**12+
poly z [%L0x7ffffff50ca0[26],%L0x7ffffff50ca8[26],%L0x7ffffff50cb0[26],
        %L0x7ffffff50cb8[26],%L0x7ffffff50cc0[26],%L0x7ffffff50cc8[26],
        %L0x7ffffff50cd0[26],%L0x7ffffff50cd8[26],%L0x7ffffff50ce0[26],
        %L0x7ffffff50ce8[26],%L0x7ffffff50cf0[26],%L0x7ffffff50cf8[26]]*X0**13+
poly z [%L0x7ffffff50ca0[28],%L0x7ffffff50ca8[28],%L0x7ffffff50cb0[28],
        %L0x7ffffff50cb8[28],%L0x7ffffff50cc0[28],%L0x7ffffff50cc8[28],
        %L0x7ffffff50cd0[28],%L0x7ffffff50cd8[28],%L0x7ffffff50ce0[28],
        %L0x7ffffff50ce8[28],%L0x7ffffff50cf0[28],%L0x7ffffff50cf8[28]]*X0**14+
poly z [%L0x7ffffff50ca0[30],%L0x7ffffff50ca8[30],%L0x7ffffff50cb0[30],
        %L0x7ffffff50cb8[30],%L0x7ffffff50cc0[30],%L0x7ffffff50cc8[30],
        %L0x7ffffff50cd0[30],%L0x7ffffff50cd8[30],%L0x7ffffff50ce0[30],
        %L0x7ffffff50ce8[30],%L0x7ffffff50cf0[30],%L0x7ffffff50cf8[30]]*X0**15+
poly z [%L0x7ffffff50ca0[32],%L0x7ffffff50ca8[32],%L0x7ffffff50cb0[32],
        %L0x7ffffff50cb8[32],%L0x7ffffff50cc0[32],%L0x7ffffff50cc8[32],
        %L0x7ffffff50cd0[32],%L0x7ffffff50cd8[32],%L0x7ffffff50ce0[32],
        %L0x7ffffff50ce8[32],%L0x7ffffff50cf0[32],%L0x7ffffff50cf8[32]]*X0**16+
poly z [%L0x7ffffff50ca0[34],%L0x7ffffff50ca8[34],%L0x7ffffff50cb0[34],
        %L0x7ffffff50cb8[34],%L0x7ffffff50cc0[34],%L0x7ffffff50cc8[34],
        %L0x7ffffff50cd0[34],%L0x7ffffff50cd8[34],%L0x7ffffff50ce0[34],
        %L0x7ffffff50ce8[34],%L0x7ffffff50cf0[34],%L0x7ffffff50cf8[34]]*X0**17+
poly z [%L0x7ffffff50ca0[36],%L0x7ffffff50ca8[36],%L0x7ffffff50cb0[36],
        %L0x7ffffff50cb8[36],%L0x7ffffff50cc0[36],%L0x7ffffff50cc8[36],
        %L0x7ffffff50cd0[36],%L0x7ffffff50cd8[36],%L0x7ffffff50ce0[36],
        %L0x7ffffff50ce8[36],%L0x7ffffff50cf0[36],%L0x7ffffff50cf8[36]]*X0**18+
poly z [%L0x7ffffff50ca0[38],%L0x7ffffff50ca8[38],%L0x7ffffff50cb0[38],
        %L0x7ffffff50cb8[38],%L0x7ffffff50cc0[38],%L0x7ffffff50cc8[38],
        %L0x7ffffff50cd0[38],%L0x7ffffff50cd8[38],%L0x7ffffff50ce0[38],
        %L0x7ffffff50ce8[38],%L0x7ffffff50cf0[38],%L0x7ffffff50cf8[38]]*X0**19+
poly z [%L0x7ffffff50ca0[40],%L0x7ffffff50ca8[40],%L0x7ffffff50cb0[40],
        %L0x7ffffff50cb8[40],%L0x7ffffff50cc0[40],%L0x7ffffff50cc8[40],
        %L0x7ffffff50cd0[40],%L0x7ffffff50cd8[40],%L0x7ffffff50ce0[40],
        %L0x7ffffff50ce8[40],%L0x7ffffff50cf0[40],%L0x7ffffff50cf8[40]]*X0**20+
poly z [%L0x7ffffff50ca0[42],%L0x7ffffff50ca8[42],%L0x7ffffff50cb0[42],
        %L0x7ffffff50cb8[42],%L0x7ffffff50cc0[42],%L0x7ffffff50cc8[42],
        %L0x7ffffff50cd0[42],%L0x7ffffff50cd8[42],%L0x7ffffff50ce0[42],
        %L0x7ffffff50ce8[42],%L0x7ffffff50cf0[42],%L0x7ffffff50cf8[42]]*X0**21+
poly z [%L0x7ffffff50ca0[44],%L0x7ffffff50ca8[44],%L0x7ffffff50cb0[44],
        %L0x7ffffff50cb8[44],%L0x7ffffff50cc0[44],%L0x7ffffff50cc8[44],
        %L0x7ffffff50cd0[44],%L0x7ffffff50cd8[44],%L0x7ffffff50ce0[44],
        %L0x7ffffff50ce8[44],%L0x7ffffff50cf0[44],%L0x7ffffff50cf8[44]]*X0**22+
poly z [%L0x7ffffff50ca0[46],%L0x7ffffff50ca8[46],%L0x7ffffff50cb0[46],
        %L0x7ffffff50cb8[46],%L0x7ffffff50cc0[46],%L0x7ffffff50cc8[46],
        %L0x7ffffff50cd0[46],%L0x7ffffff50cd8[46],%L0x7ffffff50ce0[46],
        %L0x7ffffff50ce8[46],%L0x7ffffff50cf0[46],%L0x7ffffff50cf8[46]]*X0**23+
poly z [%L0x7ffffff50ca0[48],%L0x7ffffff50ca8[48],%L0x7ffffff50cb0[48],
        %L0x7ffffff50cb8[48],%L0x7ffffff50cc0[48],%L0x7ffffff50cc8[48],
        %L0x7ffffff50cd0[48],%L0x7ffffff50cd8[48],%L0x7ffffff50ce0[48],
        %L0x7ffffff50ce8[48],%L0x7ffffff50cf0[48],%L0x7ffffff50cf8[48]]*X0**24+
poly z [%L0x7ffffff50ca0[50],%L0x7ffffff50ca8[50],%L0x7ffffff50cb0[50],
        %L0x7ffffff50cb8[50],%L0x7ffffff50cc0[50],%L0x7ffffff50cc8[50],
        %L0x7ffffff50cd0[50],%L0x7ffffff50cd8[50],%L0x7ffffff50ce0[50],
        %L0x7ffffff50ce8[50],%L0x7ffffff50cf0[50],%L0x7ffffff50cf8[50]]*X0**25+
poly z [%L0x7ffffff50ca0[52],%L0x7ffffff50ca8[52],%L0x7ffffff50cb0[52],
        %L0x7ffffff50cb8[52],%L0x7ffffff50cc0[52],%L0x7ffffff50cc8[52],
        %L0x7ffffff50cd0[52],%L0x7ffffff50cd8[52],%L0x7ffffff50ce0[52],
        %L0x7ffffff50ce8[52],%L0x7ffffff50cf0[52],%L0x7ffffff50cf8[52]]*X0**26+
poly z [%L0x7ffffff50ca0[54],%L0x7ffffff50ca8[54],%L0x7ffffff50cb0[54],
        %L0x7ffffff50cb8[54],%L0x7ffffff50cc0[54],%L0x7ffffff50cc8[54],
        %L0x7ffffff50cd0[54],%L0x7ffffff50cd8[54],%L0x7ffffff50ce0[54],
        %L0x7ffffff50ce8[54],%L0x7ffffff50cf0[54],%L0x7ffffff50cf8[54]]*X0**27+
poly z [%L0x7ffffff50ca0[56],%L0x7ffffff50ca8[56],%L0x7ffffff50cb0[56],
        %L0x7ffffff50cb8[56],%L0x7ffffff50cc0[56],%L0x7ffffff50cc8[56],
        %L0x7ffffff50cd0[56],%L0x7ffffff50cd8[56],%L0x7ffffff50ce0[56],
        %L0x7ffffff50ce8[56],%L0x7ffffff50cf0[56],%L0x7ffffff50cf8[56]]*X0**28+
poly z [%L0x7ffffff50ca0[58],%L0x7ffffff50ca8[58],%L0x7ffffff50cb0[58],
        %L0x7ffffff50cb8[58],%L0x7ffffff50cc0[58],%L0x7ffffff50cc8[58],
        %L0x7ffffff50cd0[58],%L0x7ffffff50cd8[58],%L0x7ffffff50ce0[58],
        %L0x7ffffff50ce8[58],%L0x7ffffff50cf0[58],%L0x7ffffff50cf8[58]]*X0**29+
poly z [%L0x7ffffff50ca0[60],%L0x7ffffff50ca8[60],%L0x7ffffff50cb0[60],
        %L0x7ffffff50cb8[60],%L0x7ffffff50cc0[60],%L0x7ffffff50cc8[60],
        %L0x7ffffff50cd0[60],%L0x7ffffff50cd8[60],%L0x7ffffff50ce0[60],
        %L0x7ffffff50ce8[60],%L0x7ffffff50cf0[60],%L0x7ffffff50cf8[60]]*X0**30+
poly z [%L0x7ffffff50ca0[62],%L0x7ffffff50ca8[62],%L0x7ffffff50cb0[62],
        %L0x7ffffff50cb8[62],%L0x7ffffff50cc0[62],%L0x7ffffff50cc8[62],
        %L0x7ffffff50cd0[62],%L0x7ffffff50cd8[62],%L0x7ffffff50ce0[62],
        %L0x7ffffff50ce8[62],%L0x7ffffff50cf0[62],%L0x7ffffff50cf8[62]]*X0**31
 /\
F01 =
poly z [%L0x7ffffff50ca0[1],%L0x7ffffff50ca8[1],%L0x7ffffff50cb0[1],
        %L0x7ffffff50cb8[1],%L0x7ffffff50cc0[1],%L0x7ffffff50cc8[1],
        %L0x7ffffff50cd0[1],%L0x7ffffff50cd8[1],%L0x7ffffff50ce0[1],
        %L0x7ffffff50ce8[1],%L0x7ffffff50cf0[1],%L0x7ffffff50cf8[1]]*X0**0+
poly z [%L0x7ffffff50ca0[3],%L0x7ffffff50ca8[3],%L0x7ffffff50cb0[3],
        %L0x7ffffff50cb8[3],%L0x7ffffff50cc0[3],%L0x7ffffff50cc8[3],
        %L0x7ffffff50cd0[3],%L0x7ffffff50cd8[3],%L0x7ffffff50ce0[3],
        %L0x7ffffff50ce8[3],%L0x7ffffff50cf0[3],%L0x7ffffff50cf8[3]]*X0**1+
poly z [%L0x7ffffff50ca0[5],%L0x7ffffff50ca8[5],%L0x7ffffff50cb0[5],
        %L0x7ffffff50cb8[5],%L0x7ffffff50cc0[5],%L0x7ffffff50cc8[5],
        %L0x7ffffff50cd0[5],%L0x7ffffff50cd8[5],%L0x7ffffff50ce0[5],
        %L0x7ffffff50ce8[5],%L0x7ffffff50cf0[5],%L0x7ffffff50cf8[5]]*X0**2+
poly z [%L0x7ffffff50ca0[7],%L0x7ffffff50ca8[7],%L0x7ffffff50cb0[7],
        %L0x7ffffff50cb8[7],%L0x7ffffff50cc0[7],%L0x7ffffff50cc8[7],
        %L0x7ffffff50cd0[7],%L0x7ffffff50cd8[7],%L0x7ffffff50ce0[7],
        %L0x7ffffff50ce8[7],%L0x7ffffff50cf0[7],%L0x7ffffff50cf8[7]]*X0**3+
poly z [%L0x7ffffff50ca0[9],%L0x7ffffff50ca8[9],%L0x7ffffff50cb0[9],
        %L0x7ffffff50cb8[9],%L0x7ffffff50cc0[9],%L0x7ffffff50cc8[9],
        %L0x7ffffff50cd0[9],%L0x7ffffff50cd8[9],%L0x7ffffff50ce0[9],
        %L0x7ffffff50ce8[9],%L0x7ffffff50cf0[9],%L0x7ffffff50cf8[9]]*X0**4+
poly z [%L0x7ffffff50ca0[11],%L0x7ffffff50ca8[11],%L0x7ffffff50cb0[11],
        %L0x7ffffff50cb8[11],%L0x7ffffff50cc0[11],%L0x7ffffff50cc8[11],
        %L0x7ffffff50cd0[11],%L0x7ffffff50cd8[11],%L0x7ffffff50ce0[11],
        %L0x7ffffff50ce8[11],%L0x7ffffff50cf0[11],%L0x7ffffff50cf8[11]]*X0**5+
poly z [%L0x7ffffff50ca0[13],%L0x7ffffff50ca8[13],%L0x7ffffff50cb0[13],
        %L0x7ffffff50cb8[13],%L0x7ffffff50cc0[13],%L0x7ffffff50cc8[13],
        %L0x7ffffff50cd0[13],%L0x7ffffff50cd8[13],%L0x7ffffff50ce0[13],
        %L0x7ffffff50ce8[13],%L0x7ffffff50cf0[13],%L0x7ffffff50cf8[13]]*X0**6+
poly z [%L0x7ffffff50ca0[15],%L0x7ffffff50ca8[15],%L0x7ffffff50cb0[15],
        %L0x7ffffff50cb8[15],%L0x7ffffff50cc0[15],%L0x7ffffff50cc8[15],
        %L0x7ffffff50cd0[15],%L0x7ffffff50cd8[15],%L0x7ffffff50ce0[15],
        %L0x7ffffff50ce8[15],%L0x7ffffff50cf0[15],%L0x7ffffff50cf8[15]]*X0**7+
poly z [%L0x7ffffff50ca0[17],%L0x7ffffff50ca8[17],%L0x7ffffff50cb0[17],
        %L0x7ffffff50cb8[17],%L0x7ffffff50cc0[17],%L0x7ffffff50cc8[17],
        %L0x7ffffff50cd0[17],%L0x7ffffff50cd8[17],%L0x7ffffff50ce0[17],
        %L0x7ffffff50ce8[17],%L0x7ffffff50cf0[17],%L0x7ffffff50cf8[17]]*X0**8+
poly z [%L0x7ffffff50ca0[19],%L0x7ffffff50ca8[19],%L0x7ffffff50cb0[19],
        %L0x7ffffff50cb8[19],%L0x7ffffff50cc0[19],%L0x7ffffff50cc8[19],
        %L0x7ffffff50cd0[19],%L0x7ffffff50cd8[19],%L0x7ffffff50ce0[19],
        %L0x7ffffff50ce8[19],%L0x7ffffff50cf0[19],%L0x7ffffff50cf8[19]]*X0**9+
poly z [%L0x7ffffff50ca0[21],%L0x7ffffff50ca8[21],%L0x7ffffff50cb0[21],
        %L0x7ffffff50cb8[21],%L0x7ffffff50cc0[21],%L0x7ffffff50cc8[21],
        %L0x7ffffff50cd0[21],%L0x7ffffff50cd8[21],%L0x7ffffff50ce0[21],
        %L0x7ffffff50ce8[21],%L0x7ffffff50cf0[21],%L0x7ffffff50cf8[21]]*X0**10+
poly z [%L0x7ffffff50ca0[23],%L0x7ffffff50ca8[23],%L0x7ffffff50cb0[23],
        %L0x7ffffff50cb8[23],%L0x7ffffff50cc0[23],%L0x7ffffff50cc8[23],
        %L0x7ffffff50cd0[23],%L0x7ffffff50cd8[23],%L0x7ffffff50ce0[23],
        %L0x7ffffff50ce8[23],%L0x7ffffff50cf0[23],%L0x7ffffff50cf8[23]]*X0**11+
poly z [%L0x7ffffff50ca0[25],%L0x7ffffff50ca8[25],%L0x7ffffff50cb0[25],
        %L0x7ffffff50cb8[25],%L0x7ffffff50cc0[25],%L0x7ffffff50cc8[25],
        %L0x7ffffff50cd0[25],%L0x7ffffff50cd8[25],%L0x7ffffff50ce0[25],
        %L0x7ffffff50ce8[25],%L0x7ffffff50cf0[25],%L0x7ffffff50cf8[25]]*X0**12+
poly z [%L0x7ffffff50ca0[27],%L0x7ffffff50ca8[27],%L0x7ffffff50cb0[27],
        %L0x7ffffff50cb8[27],%L0x7ffffff50cc0[27],%L0x7ffffff50cc8[27],
        %L0x7ffffff50cd0[27],%L0x7ffffff50cd8[27],%L0x7ffffff50ce0[27],
        %L0x7ffffff50ce8[27],%L0x7ffffff50cf0[27],%L0x7ffffff50cf8[27]]*X0**13+
poly z [%L0x7ffffff50ca0[29],%L0x7ffffff50ca8[29],%L0x7ffffff50cb0[29],
        %L0x7ffffff50cb8[29],%L0x7ffffff50cc0[29],%L0x7ffffff50cc8[29],
        %L0x7ffffff50cd0[29],%L0x7ffffff50cd8[29],%L0x7ffffff50ce0[29],
        %L0x7ffffff50ce8[29],%L0x7ffffff50cf0[29],%L0x7ffffff50cf8[29]]*X0**14+
poly z [%L0x7ffffff50ca0[31],%L0x7ffffff50ca8[31],%L0x7ffffff50cb0[31],
        %L0x7ffffff50cb8[31],%L0x7ffffff50cc0[31],%L0x7ffffff50cc8[31],
        %L0x7ffffff50cd0[31],%L0x7ffffff50cd8[31],%L0x7ffffff50ce0[31],
        %L0x7ffffff50ce8[31],%L0x7ffffff50cf0[31],%L0x7ffffff50cf8[31]]*X0**15+
poly z [%L0x7ffffff50ca0[33],%L0x7ffffff50ca8[33],%L0x7ffffff50cb0[33],
        %L0x7ffffff50cb8[33],%L0x7ffffff50cc0[33],%L0x7ffffff50cc8[33],
        %L0x7ffffff50cd0[33],%L0x7ffffff50cd8[33],%L0x7ffffff50ce0[33],
        %L0x7ffffff50ce8[33],%L0x7ffffff50cf0[33],%L0x7ffffff50cf8[33]]*X0**16+
poly z [%L0x7ffffff50ca0[35],%L0x7ffffff50ca8[35],%L0x7ffffff50cb0[35],
        %L0x7ffffff50cb8[35],%L0x7ffffff50cc0[35],%L0x7ffffff50cc8[35],
        %L0x7ffffff50cd0[35],%L0x7ffffff50cd8[35],%L0x7ffffff50ce0[35],
        %L0x7ffffff50ce8[35],%L0x7ffffff50cf0[35],%L0x7ffffff50cf8[35]]*X0**17+
poly z [%L0x7ffffff50ca0[37],%L0x7ffffff50ca8[37],%L0x7ffffff50cb0[37],
        %L0x7ffffff50cb8[37],%L0x7ffffff50cc0[37],%L0x7ffffff50cc8[37],
        %L0x7ffffff50cd0[37],%L0x7ffffff50cd8[37],%L0x7ffffff50ce0[37],
        %L0x7ffffff50ce8[37],%L0x7ffffff50cf0[37],%L0x7ffffff50cf8[37]]*X0**18+
poly z [%L0x7ffffff50ca0[39],%L0x7ffffff50ca8[39],%L0x7ffffff50cb0[39],
        %L0x7ffffff50cb8[39],%L0x7ffffff50cc0[39],%L0x7ffffff50cc8[39],
        %L0x7ffffff50cd0[39],%L0x7ffffff50cd8[39],%L0x7ffffff50ce0[39],
        %L0x7ffffff50ce8[39],%L0x7ffffff50cf0[39],%L0x7ffffff50cf8[39]]*X0**19+
poly z [%L0x7ffffff50ca0[41],%L0x7ffffff50ca8[41],%L0x7ffffff50cb0[41],
        %L0x7ffffff50cb8[41],%L0x7ffffff50cc0[41],%L0x7ffffff50cc8[41],
        %L0x7ffffff50cd0[41],%L0x7ffffff50cd8[41],%L0x7ffffff50ce0[41],
        %L0x7ffffff50ce8[41],%L0x7ffffff50cf0[41],%L0x7ffffff50cf8[41]]*X0**20+
poly z [%L0x7ffffff50ca0[43],%L0x7ffffff50ca8[43],%L0x7ffffff50cb0[43],
        %L0x7ffffff50cb8[43],%L0x7ffffff50cc0[43],%L0x7ffffff50cc8[43],
        %L0x7ffffff50cd0[43],%L0x7ffffff50cd8[43],%L0x7ffffff50ce0[43],
        %L0x7ffffff50ce8[43],%L0x7ffffff50cf0[43],%L0x7ffffff50cf8[43]]*X0**21+
poly z [%L0x7ffffff50ca0[45],%L0x7ffffff50ca8[45],%L0x7ffffff50cb0[45],
        %L0x7ffffff50cb8[45],%L0x7ffffff50cc0[45],%L0x7ffffff50cc8[45],
        %L0x7ffffff50cd0[45],%L0x7ffffff50cd8[45],%L0x7ffffff50ce0[45],
        %L0x7ffffff50ce8[45],%L0x7ffffff50cf0[45],%L0x7ffffff50cf8[45]]*X0**22+
poly z [%L0x7ffffff50ca0[47],%L0x7ffffff50ca8[47],%L0x7ffffff50cb0[47],
        %L0x7ffffff50cb8[47],%L0x7ffffff50cc0[47],%L0x7ffffff50cc8[47],
        %L0x7ffffff50cd0[47],%L0x7ffffff50cd8[47],%L0x7ffffff50ce0[47],
        %L0x7ffffff50ce8[47],%L0x7ffffff50cf0[47],%L0x7ffffff50cf8[47]]*X0**23+
poly z [%L0x7ffffff50ca0[49],%L0x7ffffff50ca8[49],%L0x7ffffff50cb0[49],
        %L0x7ffffff50cb8[49],%L0x7ffffff50cc0[49],%L0x7ffffff50cc8[49],
        %L0x7ffffff50cd0[49],%L0x7ffffff50cd8[49],%L0x7ffffff50ce0[49],
        %L0x7ffffff50ce8[49],%L0x7ffffff50cf0[49],%L0x7ffffff50cf8[49]]*X0**24+
poly z [%L0x7ffffff50ca0[51],%L0x7ffffff50ca8[51],%L0x7ffffff50cb0[51],
        %L0x7ffffff50cb8[51],%L0x7ffffff50cc0[51],%L0x7ffffff50cc8[51],
        %L0x7ffffff50cd0[51],%L0x7ffffff50cd8[51],%L0x7ffffff50ce0[51],
        %L0x7ffffff50ce8[51],%L0x7ffffff50cf0[51],%L0x7ffffff50cf8[51]]*X0**25+
poly z [%L0x7ffffff50ca0[53],%L0x7ffffff50ca8[53],%L0x7ffffff50cb0[53],
        %L0x7ffffff50cb8[53],%L0x7ffffff50cc0[53],%L0x7ffffff50cc8[53],
        %L0x7ffffff50cd0[53],%L0x7ffffff50cd8[53],%L0x7ffffff50ce0[53],
        %L0x7ffffff50ce8[53],%L0x7ffffff50cf0[53],%L0x7ffffff50cf8[53]]*X0**26+
poly z [%L0x7ffffff50ca0[55],%L0x7ffffff50ca8[55],%L0x7ffffff50cb0[55],
        %L0x7ffffff50cb8[55],%L0x7ffffff50cc0[55],%L0x7ffffff50cc8[55],
        %L0x7ffffff50cd0[55],%L0x7ffffff50cd8[55],%L0x7ffffff50ce0[55],
        %L0x7ffffff50ce8[55],%L0x7ffffff50cf0[55],%L0x7ffffff50cf8[55]]*X0**27+
poly z [%L0x7ffffff50ca0[57],%L0x7ffffff50ca8[57],%L0x7ffffff50cb0[57],
        %L0x7ffffff50cb8[57],%L0x7ffffff50cc0[57],%L0x7ffffff50cc8[57],
        %L0x7ffffff50cd0[57],%L0x7ffffff50cd8[57],%L0x7ffffff50ce0[57],
        %L0x7ffffff50ce8[57],%L0x7ffffff50cf0[57],%L0x7ffffff50cf8[57]]*X0**28+
poly z [%L0x7ffffff50ca0[59],%L0x7ffffff50ca8[59],%L0x7ffffff50cb0[59],
        %L0x7ffffff50cb8[59],%L0x7ffffff50cc0[59],%L0x7ffffff50cc8[59],
        %L0x7ffffff50cd0[59],%L0x7ffffff50cd8[59],%L0x7ffffff50ce0[59],
        %L0x7ffffff50ce8[59],%L0x7ffffff50cf0[59],%L0x7ffffff50cf8[59]]*X0**29+
poly z [%L0x7ffffff50ca0[61],%L0x7ffffff50ca8[61],%L0x7ffffff50cb0[61],
        %L0x7ffffff50cb8[61],%L0x7ffffff50cc0[61],%L0x7ffffff50cc8[61],
        %L0x7ffffff50cd0[61],%L0x7ffffff50cd8[61],%L0x7ffffff50ce0[61],
        %L0x7ffffff50ce8[61],%L0x7ffffff50cf0[61],%L0x7ffffff50cf8[61]]*X0**30+
poly z [%L0x7ffffff50ca0[63],%L0x7ffffff50ca8[63],%L0x7ffffff50cb0[63],
        %L0x7ffffff50cb8[63],%L0x7ffffff50cc0[63],%L0x7ffffff50cc8[63],
        %L0x7ffffff50cd0[63],%L0x7ffffff50cd8[63],%L0x7ffffff50ce0[63],
        %L0x7ffffff50ce8[63],%L0x7ffffff50cf0[63],%L0x7ffffff50cf8[63]]*X0**31
&& true;

(* 0 *)
cut eqmod F (F00 + X*F01) [2, z**12 + z**3 + 1] /\
F00 =
poly z [%L0x7ffffff50ca0[0],%L0x7ffffff50ca8[0],%L0x7ffffff50cb0[0],
        %L0x7ffffff50cb8[0],%L0x7ffffff50cc0[0],%L0x7ffffff50cc8[0],
        %L0x7ffffff50cd0[0],%L0x7ffffff50cd8[0],%L0x7ffffff50ce0[0],
        %L0x7ffffff50ce8[0],%L0x7ffffff50cf0[0],%L0x7ffffff50cf8[0]]*X0**0+
poly z [%L0x7ffffff50ca0[2],%L0x7ffffff50ca8[2],%L0x7ffffff50cb0[2],
        %L0x7ffffff50cb8[2],%L0x7ffffff50cc0[2],%L0x7ffffff50cc8[2],
        %L0x7ffffff50cd0[2],%L0x7ffffff50cd8[2],%L0x7ffffff50ce0[2],
        %L0x7ffffff50ce8[2],%L0x7ffffff50cf0[2],%L0x7ffffff50cf8[2]]*X0**1+
poly z [%L0x7ffffff50ca0[4],%L0x7ffffff50ca8[4],%L0x7ffffff50cb0[4],
        %L0x7ffffff50cb8[4],%L0x7ffffff50cc0[4],%L0x7ffffff50cc8[4],
        %L0x7ffffff50cd0[4],%L0x7ffffff50cd8[4],%L0x7ffffff50ce0[4],
        %L0x7ffffff50ce8[4],%L0x7ffffff50cf0[4],%L0x7ffffff50cf8[4]]*X0**2+
poly z [%L0x7ffffff50ca0[6],%L0x7ffffff50ca8[6],%L0x7ffffff50cb0[6],
        %L0x7ffffff50cb8[6],%L0x7ffffff50cc0[6],%L0x7ffffff50cc8[6],
        %L0x7ffffff50cd0[6],%L0x7ffffff50cd8[6],%L0x7ffffff50ce0[6],
        %L0x7ffffff50ce8[6],%L0x7ffffff50cf0[6],%L0x7ffffff50cf8[6]]*X0**3+
poly z [%L0x7ffffff50ca0[8],%L0x7ffffff50ca8[8],%L0x7ffffff50cb0[8],
        %L0x7ffffff50cb8[8],%L0x7ffffff50cc0[8],%L0x7ffffff50cc8[8],
        %L0x7ffffff50cd0[8],%L0x7ffffff50cd8[8],%L0x7ffffff50ce0[8],
        %L0x7ffffff50ce8[8],%L0x7ffffff50cf0[8],%L0x7ffffff50cf8[8]]*X0**4+
poly z [%L0x7ffffff50ca0[10],%L0x7ffffff50ca8[10],%L0x7ffffff50cb0[10],
        %L0x7ffffff50cb8[10],%L0x7ffffff50cc0[10],%L0x7ffffff50cc8[10],
        %L0x7ffffff50cd0[10],%L0x7ffffff50cd8[10],%L0x7ffffff50ce0[10],
        %L0x7ffffff50ce8[10],%L0x7ffffff50cf0[10],%L0x7ffffff50cf8[10]]*X0**5+
poly z [%L0x7ffffff50ca0[12],%L0x7ffffff50ca8[12],%L0x7ffffff50cb0[12],
        %L0x7ffffff50cb8[12],%L0x7ffffff50cc0[12],%L0x7ffffff50cc8[12],
        %L0x7ffffff50cd0[12],%L0x7ffffff50cd8[12],%L0x7ffffff50ce0[12],
        %L0x7ffffff50ce8[12],%L0x7ffffff50cf0[12],%L0x7ffffff50cf8[12]]*X0**6+
poly z [%L0x7ffffff50ca0[14],%L0x7ffffff50ca8[14],%L0x7ffffff50cb0[14],
        %L0x7ffffff50cb8[14],%L0x7ffffff50cc0[14],%L0x7ffffff50cc8[14],
        %L0x7ffffff50cd0[14],%L0x7ffffff50cd8[14],%L0x7ffffff50ce0[14],
        %L0x7ffffff50ce8[14],%L0x7ffffff50cf0[14],%L0x7ffffff50cf8[14]]*X0**7+
poly z [%L0x7ffffff50ca0[16],%L0x7ffffff50ca8[16],%L0x7ffffff50cb0[16],
        %L0x7ffffff50cb8[16],%L0x7ffffff50cc0[16],%L0x7ffffff50cc8[16],
        %L0x7ffffff50cd0[16],%L0x7ffffff50cd8[16],%L0x7ffffff50ce0[16],
        %L0x7ffffff50ce8[16],%L0x7ffffff50cf0[16],%L0x7ffffff50cf8[16]]*X0**8+
poly z [%L0x7ffffff50ca0[18],%L0x7ffffff50ca8[18],%L0x7ffffff50cb0[18],
        %L0x7ffffff50cb8[18],%L0x7ffffff50cc0[18],%L0x7ffffff50cc8[18],
        %L0x7ffffff50cd0[18],%L0x7ffffff50cd8[18],%L0x7ffffff50ce0[18],
        %L0x7ffffff50ce8[18],%L0x7ffffff50cf0[18],%L0x7ffffff50cf8[18]]*X0**9+
poly z [%L0x7ffffff50ca0[20],%L0x7ffffff50ca8[20],%L0x7ffffff50cb0[20],
        %L0x7ffffff50cb8[20],%L0x7ffffff50cc0[20],%L0x7ffffff50cc8[20],
        %L0x7ffffff50cd0[20],%L0x7ffffff50cd8[20],%L0x7ffffff50ce0[20],
        %L0x7ffffff50ce8[20],%L0x7ffffff50cf0[20],%L0x7ffffff50cf8[20]]*X0**10+
poly z [%L0x7ffffff50ca0[22],%L0x7ffffff50ca8[22],%L0x7ffffff50cb0[22],
        %L0x7ffffff50cb8[22],%L0x7ffffff50cc0[22],%L0x7ffffff50cc8[22],
        %L0x7ffffff50cd0[22],%L0x7ffffff50cd8[22],%L0x7ffffff50ce0[22],
        %L0x7ffffff50ce8[22],%L0x7ffffff50cf0[22],%L0x7ffffff50cf8[22]]*X0**11+
poly z [%L0x7ffffff50ca0[24],%L0x7ffffff50ca8[24],%L0x7ffffff50cb0[24],
        %L0x7ffffff50cb8[24],%L0x7ffffff50cc0[24],%L0x7ffffff50cc8[24],
        %L0x7ffffff50cd0[24],%L0x7ffffff50cd8[24],%L0x7ffffff50ce0[24],
        %L0x7ffffff50ce8[24],%L0x7ffffff50cf0[24],%L0x7ffffff50cf8[24]]*X0**12+
poly z [%L0x7ffffff50ca0[26],%L0x7ffffff50ca8[26],%L0x7ffffff50cb0[26],
        %L0x7ffffff50cb8[26],%L0x7ffffff50cc0[26],%L0x7ffffff50cc8[26],
        %L0x7ffffff50cd0[26],%L0x7ffffff50cd8[26],%L0x7ffffff50ce0[26],
        %L0x7ffffff50ce8[26],%L0x7ffffff50cf0[26],%L0x7ffffff50cf8[26]]*X0**13+
poly z [%L0x7ffffff50ca0[28],%L0x7ffffff50ca8[28],%L0x7ffffff50cb0[28],
        %L0x7ffffff50cb8[28],%L0x7ffffff50cc0[28],%L0x7ffffff50cc8[28],
        %L0x7ffffff50cd0[28],%L0x7ffffff50cd8[28],%L0x7ffffff50ce0[28],
        %L0x7ffffff50ce8[28],%L0x7ffffff50cf0[28],%L0x7ffffff50cf8[28]]*X0**14+
poly z [%L0x7ffffff50ca0[30],%L0x7ffffff50ca8[30],%L0x7ffffff50cb0[30],
        %L0x7ffffff50cb8[30],%L0x7ffffff50cc0[30],%L0x7ffffff50cc8[30],
        %L0x7ffffff50cd0[30],%L0x7ffffff50cd8[30],%L0x7ffffff50ce0[30],
        %L0x7ffffff50ce8[30],%L0x7ffffff50cf0[30],%L0x7ffffff50cf8[30]]*X0**15+
poly z [%L0x7ffffff50ca0[32],%L0x7ffffff50ca8[32],%L0x7ffffff50cb0[32],
        %L0x7ffffff50cb8[32],%L0x7ffffff50cc0[32],%L0x7ffffff50cc8[32],
        %L0x7ffffff50cd0[32],%L0x7ffffff50cd8[32],%L0x7ffffff50ce0[32],
        %L0x7ffffff50ce8[32],%L0x7ffffff50cf0[32],%L0x7ffffff50cf8[32]]*X0**16+
poly z [%L0x7ffffff50ca0[34],%L0x7ffffff50ca8[34],%L0x7ffffff50cb0[34],
        %L0x7ffffff50cb8[34],%L0x7ffffff50cc0[34],%L0x7ffffff50cc8[34],
        %L0x7ffffff50cd0[34],%L0x7ffffff50cd8[34],%L0x7ffffff50ce0[34],
        %L0x7ffffff50ce8[34],%L0x7ffffff50cf0[34],%L0x7ffffff50cf8[34]]*X0**17+
poly z [%L0x7ffffff50ca0[36],%L0x7ffffff50ca8[36],%L0x7ffffff50cb0[36],
        %L0x7ffffff50cb8[36],%L0x7ffffff50cc0[36],%L0x7ffffff50cc8[36],
        %L0x7ffffff50cd0[36],%L0x7ffffff50cd8[36],%L0x7ffffff50ce0[36],
        %L0x7ffffff50ce8[36],%L0x7ffffff50cf0[36],%L0x7ffffff50cf8[36]]*X0**18+
poly z [%L0x7ffffff50ca0[38],%L0x7ffffff50ca8[38],%L0x7ffffff50cb0[38],
        %L0x7ffffff50cb8[38],%L0x7ffffff50cc0[38],%L0x7ffffff50cc8[38],
        %L0x7ffffff50cd0[38],%L0x7ffffff50cd8[38],%L0x7ffffff50ce0[38],
        %L0x7ffffff50ce8[38],%L0x7ffffff50cf0[38],%L0x7ffffff50cf8[38]]*X0**19+
poly z [%L0x7ffffff50ca0[40],%L0x7ffffff50ca8[40],%L0x7ffffff50cb0[40],
        %L0x7ffffff50cb8[40],%L0x7ffffff50cc0[40],%L0x7ffffff50cc8[40],
        %L0x7ffffff50cd0[40],%L0x7ffffff50cd8[40],%L0x7ffffff50ce0[40],
        %L0x7ffffff50ce8[40],%L0x7ffffff50cf0[40],%L0x7ffffff50cf8[40]]*X0**20+
poly z [%L0x7ffffff50ca0[42],%L0x7ffffff50ca8[42],%L0x7ffffff50cb0[42],
        %L0x7ffffff50cb8[42],%L0x7ffffff50cc0[42],%L0x7ffffff50cc8[42],
        %L0x7ffffff50cd0[42],%L0x7ffffff50cd8[42],%L0x7ffffff50ce0[42],
        %L0x7ffffff50ce8[42],%L0x7ffffff50cf0[42],%L0x7ffffff50cf8[42]]*X0**21+
poly z [%L0x7ffffff50ca0[44],%L0x7ffffff50ca8[44],%L0x7ffffff50cb0[44],
        %L0x7ffffff50cb8[44],%L0x7ffffff50cc0[44],%L0x7ffffff50cc8[44],
        %L0x7ffffff50cd0[44],%L0x7ffffff50cd8[44],%L0x7ffffff50ce0[44],
        %L0x7ffffff50ce8[44],%L0x7ffffff50cf0[44],%L0x7ffffff50cf8[44]]*X0**22+
poly z [%L0x7ffffff50ca0[46],%L0x7ffffff50ca8[46],%L0x7ffffff50cb0[46],
        %L0x7ffffff50cb8[46],%L0x7ffffff50cc0[46],%L0x7ffffff50cc8[46],
        %L0x7ffffff50cd0[46],%L0x7ffffff50cd8[46],%L0x7ffffff50ce0[46],
        %L0x7ffffff50ce8[46],%L0x7ffffff50cf0[46],%L0x7ffffff50cf8[46]]*X0**23+
poly z [%L0x7ffffff50ca0[48],%L0x7ffffff50ca8[48],%L0x7ffffff50cb0[48],
        %L0x7ffffff50cb8[48],%L0x7ffffff50cc0[48],%L0x7ffffff50cc8[48],
        %L0x7ffffff50cd0[48],%L0x7ffffff50cd8[48],%L0x7ffffff50ce0[48],
        %L0x7ffffff50ce8[48],%L0x7ffffff50cf0[48],%L0x7ffffff50cf8[48]]*X0**24+
poly z [%L0x7ffffff50ca0[50],%L0x7ffffff50ca8[50],%L0x7ffffff50cb0[50],
        %L0x7ffffff50cb8[50],%L0x7ffffff50cc0[50],%L0x7ffffff50cc8[50],
        %L0x7ffffff50cd0[50],%L0x7ffffff50cd8[50],%L0x7ffffff50ce0[50],
        %L0x7ffffff50ce8[50],%L0x7ffffff50cf0[50],%L0x7ffffff50cf8[50]]*X0**25+
poly z [%L0x7ffffff50ca0[52],%L0x7ffffff50ca8[52],%L0x7ffffff50cb0[52],
        %L0x7ffffff50cb8[52],%L0x7ffffff50cc0[52],%L0x7ffffff50cc8[52],
        %L0x7ffffff50cd0[52],%L0x7ffffff50cd8[52],%L0x7ffffff50ce0[52],
        %L0x7ffffff50ce8[52],%L0x7ffffff50cf0[52],%L0x7ffffff50cf8[52]]*X0**26+
poly z [%L0x7ffffff50ca0[54],%L0x7ffffff50ca8[54],%L0x7ffffff50cb0[54],
        %L0x7ffffff50cb8[54],%L0x7ffffff50cc0[54],%L0x7ffffff50cc8[54],
        %L0x7ffffff50cd0[54],%L0x7ffffff50cd8[54],%L0x7ffffff50ce0[54],
        %L0x7ffffff50ce8[54],%L0x7ffffff50cf0[54],%L0x7ffffff50cf8[54]]*X0**27+
poly z [%L0x7ffffff50ca0[56],%L0x7ffffff50ca8[56],%L0x7ffffff50cb0[56],
        %L0x7ffffff50cb8[56],%L0x7ffffff50cc0[56],%L0x7ffffff50cc8[56],
        %L0x7ffffff50cd0[56],%L0x7ffffff50cd8[56],%L0x7ffffff50ce0[56],
        %L0x7ffffff50ce8[56],%L0x7ffffff50cf0[56],%L0x7ffffff50cf8[56]]*X0**28+
poly z [%L0x7ffffff50ca0[58],%L0x7ffffff50ca8[58],%L0x7ffffff50cb0[58],
        %L0x7ffffff50cb8[58],%L0x7ffffff50cc0[58],%L0x7ffffff50cc8[58],
        %L0x7ffffff50cd0[58],%L0x7ffffff50cd8[58],%L0x7ffffff50ce0[58],
        %L0x7ffffff50ce8[58],%L0x7ffffff50cf0[58],%L0x7ffffff50cf8[58]]*X0**29+
poly z [%L0x7ffffff50ca0[60],%L0x7ffffff50ca8[60],%L0x7ffffff50cb0[60],
        %L0x7ffffff50cb8[60],%L0x7ffffff50cc0[60],%L0x7ffffff50cc8[60],
        %L0x7ffffff50cd0[60],%L0x7ffffff50cd8[60],%L0x7ffffff50ce0[60],
        %L0x7ffffff50ce8[60],%L0x7ffffff50cf0[60],%L0x7ffffff50cf8[60]]*X0**30+
poly z [%L0x7ffffff50ca0[62],%L0x7ffffff50ca8[62],%L0x7ffffff50cb0[62],
        %L0x7ffffff50cb8[62],%L0x7ffffff50cc0[62],%L0x7ffffff50cc8[62],
        %L0x7ffffff50cd0[62],%L0x7ffffff50cd8[62],%L0x7ffffff50ce0[62],
        %L0x7ffffff50ce8[62],%L0x7ffffff50cf0[62],%L0x7ffffff50cf8[62]]*X0**31
 /\
F01 =
poly z [%L0x7ffffff50ca0[1],%L0x7ffffff50ca8[1],%L0x7ffffff50cb0[1],
        %L0x7ffffff50cb8[1],%L0x7ffffff50cc0[1],%L0x7ffffff50cc8[1],
        %L0x7ffffff50cd0[1],%L0x7ffffff50cd8[1],%L0x7ffffff50ce0[1],
        %L0x7ffffff50ce8[1],%L0x7ffffff50cf0[1],%L0x7ffffff50cf8[1]]*X0**0+
poly z [%L0x7ffffff50ca0[3],%L0x7ffffff50ca8[3],%L0x7ffffff50cb0[3],
        %L0x7ffffff50cb8[3],%L0x7ffffff50cc0[3],%L0x7ffffff50cc8[3],
        %L0x7ffffff50cd0[3],%L0x7ffffff50cd8[3],%L0x7ffffff50ce0[3],
        %L0x7ffffff50ce8[3],%L0x7ffffff50cf0[3],%L0x7ffffff50cf8[3]]*X0**1+
poly z [%L0x7ffffff50ca0[5],%L0x7ffffff50ca8[5],%L0x7ffffff50cb0[5],
        %L0x7ffffff50cb8[5],%L0x7ffffff50cc0[5],%L0x7ffffff50cc8[5],
        %L0x7ffffff50cd0[5],%L0x7ffffff50cd8[5],%L0x7ffffff50ce0[5],
        %L0x7ffffff50ce8[5],%L0x7ffffff50cf0[5],%L0x7ffffff50cf8[5]]*X0**2+
poly z [%L0x7ffffff50ca0[7],%L0x7ffffff50ca8[7],%L0x7ffffff50cb0[7],
        %L0x7ffffff50cb8[7],%L0x7ffffff50cc0[7],%L0x7ffffff50cc8[7],
        %L0x7ffffff50cd0[7],%L0x7ffffff50cd8[7],%L0x7ffffff50ce0[7],
        %L0x7ffffff50ce8[7],%L0x7ffffff50cf0[7],%L0x7ffffff50cf8[7]]*X0**3+
poly z [%L0x7ffffff50ca0[9],%L0x7ffffff50ca8[9],%L0x7ffffff50cb0[9],
        %L0x7ffffff50cb8[9],%L0x7ffffff50cc0[9],%L0x7ffffff50cc8[9],
        %L0x7ffffff50cd0[9],%L0x7ffffff50cd8[9],%L0x7ffffff50ce0[9],
        %L0x7ffffff50ce8[9],%L0x7ffffff50cf0[9],%L0x7ffffff50cf8[9]]*X0**4+
poly z [%L0x7ffffff50ca0[11],%L0x7ffffff50ca8[11],%L0x7ffffff50cb0[11],
        %L0x7ffffff50cb8[11],%L0x7ffffff50cc0[11],%L0x7ffffff50cc8[11],
        %L0x7ffffff50cd0[11],%L0x7ffffff50cd8[11],%L0x7ffffff50ce0[11],
        %L0x7ffffff50ce8[11],%L0x7ffffff50cf0[11],%L0x7ffffff50cf8[11]]*X0**5+
poly z [%L0x7ffffff50ca0[13],%L0x7ffffff50ca8[13],%L0x7ffffff50cb0[13],
        %L0x7ffffff50cb8[13],%L0x7ffffff50cc0[13],%L0x7ffffff50cc8[13],
        %L0x7ffffff50cd0[13],%L0x7ffffff50cd8[13],%L0x7ffffff50ce0[13],
        %L0x7ffffff50ce8[13],%L0x7ffffff50cf0[13],%L0x7ffffff50cf8[13]]*X0**6+
poly z [%L0x7ffffff50ca0[15],%L0x7ffffff50ca8[15],%L0x7ffffff50cb0[15],
        %L0x7ffffff50cb8[15],%L0x7ffffff50cc0[15],%L0x7ffffff50cc8[15],
        %L0x7ffffff50cd0[15],%L0x7ffffff50cd8[15],%L0x7ffffff50ce0[15],
        %L0x7ffffff50ce8[15],%L0x7ffffff50cf0[15],%L0x7ffffff50cf8[15]]*X0**7+
poly z [%L0x7ffffff50ca0[17],%L0x7ffffff50ca8[17],%L0x7ffffff50cb0[17],
        %L0x7ffffff50cb8[17],%L0x7ffffff50cc0[17],%L0x7ffffff50cc8[17],
        %L0x7ffffff50cd0[17],%L0x7ffffff50cd8[17],%L0x7ffffff50ce0[17],
        %L0x7ffffff50ce8[17],%L0x7ffffff50cf0[17],%L0x7ffffff50cf8[17]]*X0**8+
poly z [%L0x7ffffff50ca0[19],%L0x7ffffff50ca8[19],%L0x7ffffff50cb0[19],
        %L0x7ffffff50cb8[19],%L0x7ffffff50cc0[19],%L0x7ffffff50cc8[19],
        %L0x7ffffff50cd0[19],%L0x7ffffff50cd8[19],%L0x7ffffff50ce0[19],
        %L0x7ffffff50ce8[19],%L0x7ffffff50cf0[19],%L0x7ffffff50cf8[19]]*X0**9+
poly z [%L0x7ffffff50ca0[21],%L0x7ffffff50ca8[21],%L0x7ffffff50cb0[21],
        %L0x7ffffff50cb8[21],%L0x7ffffff50cc0[21],%L0x7ffffff50cc8[21],
        %L0x7ffffff50cd0[21],%L0x7ffffff50cd8[21],%L0x7ffffff50ce0[21],
        %L0x7ffffff50ce8[21],%L0x7ffffff50cf0[21],%L0x7ffffff50cf8[21]]*X0**10+
poly z [%L0x7ffffff50ca0[23],%L0x7ffffff50ca8[23],%L0x7ffffff50cb0[23],
        %L0x7ffffff50cb8[23],%L0x7ffffff50cc0[23],%L0x7ffffff50cc8[23],
        %L0x7ffffff50cd0[23],%L0x7ffffff50cd8[23],%L0x7ffffff50ce0[23],
        %L0x7ffffff50ce8[23],%L0x7ffffff50cf0[23],%L0x7ffffff50cf8[23]]*X0**11+
poly z [%L0x7ffffff50ca0[25],%L0x7ffffff50ca8[25],%L0x7ffffff50cb0[25],
        %L0x7ffffff50cb8[25],%L0x7ffffff50cc0[25],%L0x7ffffff50cc8[25],
        %L0x7ffffff50cd0[25],%L0x7ffffff50cd8[25],%L0x7ffffff50ce0[25],
        %L0x7ffffff50ce8[25],%L0x7ffffff50cf0[25],%L0x7ffffff50cf8[25]]*X0**12+
poly z [%L0x7ffffff50ca0[27],%L0x7ffffff50ca8[27],%L0x7ffffff50cb0[27],
        %L0x7ffffff50cb8[27],%L0x7ffffff50cc0[27],%L0x7ffffff50cc8[27],
        %L0x7ffffff50cd0[27],%L0x7ffffff50cd8[27],%L0x7ffffff50ce0[27],
        %L0x7ffffff50ce8[27],%L0x7ffffff50cf0[27],%L0x7ffffff50cf8[27]]*X0**13+
poly z [%L0x7ffffff50ca0[29],%L0x7ffffff50ca8[29],%L0x7ffffff50cb0[29],
        %L0x7ffffff50cb8[29],%L0x7ffffff50cc0[29],%L0x7ffffff50cc8[29],
        %L0x7ffffff50cd0[29],%L0x7ffffff50cd8[29],%L0x7ffffff50ce0[29],
        %L0x7ffffff50ce8[29],%L0x7ffffff50cf0[29],%L0x7ffffff50cf8[29]]*X0**14+
poly z [%L0x7ffffff50ca0[31],%L0x7ffffff50ca8[31],%L0x7ffffff50cb0[31],
        %L0x7ffffff50cb8[31],%L0x7ffffff50cc0[31],%L0x7ffffff50cc8[31],
        %L0x7ffffff50cd0[31],%L0x7ffffff50cd8[31],%L0x7ffffff50ce0[31],
        %L0x7ffffff50ce8[31],%L0x7ffffff50cf0[31],%L0x7ffffff50cf8[31]]*X0**15+
poly z [%L0x7ffffff50ca0[33],%L0x7ffffff50ca8[33],%L0x7ffffff50cb0[33],
        %L0x7ffffff50cb8[33],%L0x7ffffff50cc0[33],%L0x7ffffff50cc8[33],
        %L0x7ffffff50cd0[33],%L0x7ffffff50cd8[33],%L0x7ffffff50ce0[33],
        %L0x7ffffff50ce8[33],%L0x7ffffff50cf0[33],%L0x7ffffff50cf8[33]]*X0**16+
poly z [%L0x7ffffff50ca0[35],%L0x7ffffff50ca8[35],%L0x7ffffff50cb0[35],
        %L0x7ffffff50cb8[35],%L0x7ffffff50cc0[35],%L0x7ffffff50cc8[35],
        %L0x7ffffff50cd0[35],%L0x7ffffff50cd8[35],%L0x7ffffff50ce0[35],
        %L0x7ffffff50ce8[35],%L0x7ffffff50cf0[35],%L0x7ffffff50cf8[35]]*X0**17+
poly z [%L0x7ffffff50ca0[37],%L0x7ffffff50ca8[37],%L0x7ffffff50cb0[37],
        %L0x7ffffff50cb8[37],%L0x7ffffff50cc0[37],%L0x7ffffff50cc8[37],
        %L0x7ffffff50cd0[37],%L0x7ffffff50cd8[37],%L0x7ffffff50ce0[37],
        %L0x7ffffff50ce8[37],%L0x7ffffff50cf0[37],%L0x7ffffff50cf8[37]]*X0**18+
poly z [%L0x7ffffff50ca0[39],%L0x7ffffff50ca8[39],%L0x7ffffff50cb0[39],
        %L0x7ffffff50cb8[39],%L0x7ffffff50cc0[39],%L0x7ffffff50cc8[39],
        %L0x7ffffff50cd0[39],%L0x7ffffff50cd8[39],%L0x7ffffff50ce0[39],
        %L0x7ffffff50ce8[39],%L0x7ffffff50cf0[39],%L0x7ffffff50cf8[39]]*X0**19+
poly z [%L0x7ffffff50ca0[41],%L0x7ffffff50ca8[41],%L0x7ffffff50cb0[41],
        %L0x7ffffff50cb8[41],%L0x7ffffff50cc0[41],%L0x7ffffff50cc8[41],
        %L0x7ffffff50cd0[41],%L0x7ffffff50cd8[41],%L0x7ffffff50ce0[41],
        %L0x7ffffff50ce8[41],%L0x7ffffff50cf0[41],%L0x7ffffff50cf8[41]]*X0**20+
poly z [%L0x7ffffff50ca0[43],%L0x7ffffff50ca8[43],%L0x7ffffff50cb0[43],
        %L0x7ffffff50cb8[43],%L0x7ffffff50cc0[43],%L0x7ffffff50cc8[43],
        %L0x7ffffff50cd0[43],%L0x7ffffff50cd8[43],%L0x7ffffff50ce0[43],
        %L0x7ffffff50ce8[43],%L0x7ffffff50cf0[43],%L0x7ffffff50cf8[43]]*X0**21+
poly z [%L0x7ffffff50ca0[45],%L0x7ffffff50ca8[45],%L0x7ffffff50cb0[45],
        %L0x7ffffff50cb8[45],%L0x7ffffff50cc0[45],%L0x7ffffff50cc8[45],
        %L0x7ffffff50cd0[45],%L0x7ffffff50cd8[45],%L0x7ffffff50ce0[45],
        %L0x7ffffff50ce8[45],%L0x7ffffff50cf0[45],%L0x7ffffff50cf8[45]]*X0**22+
poly z [%L0x7ffffff50ca0[47],%L0x7ffffff50ca8[47],%L0x7ffffff50cb0[47],
        %L0x7ffffff50cb8[47],%L0x7ffffff50cc0[47],%L0x7ffffff50cc8[47],
        %L0x7ffffff50cd0[47],%L0x7ffffff50cd8[47],%L0x7ffffff50ce0[47],
        %L0x7ffffff50ce8[47],%L0x7ffffff50cf0[47],%L0x7ffffff50cf8[47]]*X0**23+
poly z [%L0x7ffffff50ca0[49],%L0x7ffffff50ca8[49],%L0x7ffffff50cb0[49],
        %L0x7ffffff50cb8[49],%L0x7ffffff50cc0[49],%L0x7ffffff50cc8[49],
        %L0x7ffffff50cd0[49],%L0x7ffffff50cd8[49],%L0x7ffffff50ce0[49],
        %L0x7ffffff50ce8[49],%L0x7ffffff50cf0[49],%L0x7ffffff50cf8[49]]*X0**24+
poly z [%L0x7ffffff50ca0[51],%L0x7ffffff50ca8[51],%L0x7ffffff50cb0[51],
        %L0x7ffffff50cb8[51],%L0x7ffffff50cc0[51],%L0x7ffffff50cc8[51],
        %L0x7ffffff50cd0[51],%L0x7ffffff50cd8[51],%L0x7ffffff50ce0[51],
        %L0x7ffffff50ce8[51],%L0x7ffffff50cf0[51],%L0x7ffffff50cf8[51]]*X0**25+
poly z [%L0x7ffffff50ca0[53],%L0x7ffffff50ca8[53],%L0x7ffffff50cb0[53],
        %L0x7ffffff50cb8[53],%L0x7ffffff50cc0[53],%L0x7ffffff50cc8[53],
        %L0x7ffffff50cd0[53],%L0x7ffffff50cd8[53],%L0x7ffffff50ce0[53],
        %L0x7ffffff50ce8[53],%L0x7ffffff50cf0[53],%L0x7ffffff50cf8[53]]*X0**26+
poly z [%L0x7ffffff50ca0[55],%L0x7ffffff50ca8[55],%L0x7ffffff50cb0[55],
        %L0x7ffffff50cb8[55],%L0x7ffffff50cc0[55],%L0x7ffffff50cc8[55],
        %L0x7ffffff50cd0[55],%L0x7ffffff50cd8[55],%L0x7ffffff50ce0[55],
        %L0x7ffffff50ce8[55],%L0x7ffffff50cf0[55],%L0x7ffffff50cf8[55]]*X0**27+
poly z [%L0x7ffffff50ca0[57],%L0x7ffffff50ca8[57],%L0x7ffffff50cb0[57],
        %L0x7ffffff50cb8[57],%L0x7ffffff50cc0[57],%L0x7ffffff50cc8[57],
        %L0x7ffffff50cd0[57],%L0x7ffffff50cd8[57],%L0x7ffffff50ce0[57],
        %L0x7ffffff50ce8[57],%L0x7ffffff50cf0[57],%L0x7ffffff50cf8[57]]*X0**28+
poly z [%L0x7ffffff50ca0[59],%L0x7ffffff50ca8[59],%L0x7ffffff50cb0[59],
        %L0x7ffffff50cb8[59],%L0x7ffffff50cc0[59],%L0x7ffffff50cc8[59],
        %L0x7ffffff50cd0[59],%L0x7ffffff50cd8[59],%L0x7ffffff50ce0[59],
        %L0x7ffffff50ce8[59],%L0x7ffffff50cf0[59],%L0x7ffffff50cf8[59]]*X0**29+
poly z [%L0x7ffffff50ca0[61],%L0x7ffffff50ca8[61],%L0x7ffffff50cb0[61],
        %L0x7ffffff50cb8[61],%L0x7ffffff50cc0[61],%L0x7ffffff50cc8[61],
        %L0x7ffffff50cd0[61],%L0x7ffffff50cd8[61],%L0x7ffffff50ce0[61],
        %L0x7ffffff50ce8[61],%L0x7ffffff50cf0[61],%L0x7ffffff50cf8[61]]*X0**30+
poly z [%L0x7ffffff50ca0[63],%L0x7ffffff50ca8[63],%L0x7ffffff50cb0[63],
        %L0x7ffffff50cb8[63],%L0x7ffffff50cc0[63],%L0x7ffffff50cc8[63],
        %L0x7ffffff50cd0[63],%L0x7ffffff50cd8[63],%L0x7ffffff50ce0[63],
        %L0x7ffffff50ce8[63],%L0x7ffffff50cf0[63],%L0x7ffffff50cf8[63]]*X0**31
 && true;

(* mov    0x10(%rsp),%rcx                          #! EA = L0x7ffffff50990; Value = 0x0000000000000000; PC = 0x555555582d58 *)
mov %rcx %L0x7ffffff50990;
(* mov    0x8(%rsp),%rax                           #! EA = L0x7ffffff50988; Value = 0x00007ffffff509a0; PC = 0x555555582d5d *)
mov %rax %L0x7ffffff50988;
(* mov    0x18(%rsp),%rdi                          #! EA = L0x7ffffff50998; Value = 0x00007ffffff50ca0; PC = 0x555555582d62 *)
mov %rdi %L0x7ffffff50998;
(* lea    (%rcx,%rcx,2),%rdx                       #! PC = 0x555555582d67 *)
(* lea \(rcx,rcx,2), rdx *)
nop;
(* shl    $0x5,%rdx                                #! PC = 0x555555582d6b *)
(* shl $0x5, rdx *)
nop;
(* mov    %rdi,%rsi                                #! PC = 0x555555582d6f *)
mov %rsi %rdi;
(* add    %rax,%rdx                                #! PC = 0x555555582d72 *)
(* add rax, rdx *)
nop;
(* #call   0x55555557c600 <_PQCLEAN_MCELIECE348864_AVX2_vec_mul_asm>#! PC = 0x555555582d75 *)
#call   0x55555557c600 <_PQCLEAN_MCELIECE348864_AVX2_vec_mul_asm>#! 0x555555582d75 = 0x555555582d75;
(* #! -> SP = 0x7ffffff50978 *)
#! 0x7ffffff50978 = 0x7ffffff50978;
(* mov    %rsp,%r11                                #! PC = 0x55555557c600 *)
(* mov rsp, r11 *)
nop;
(* and    $0x1f,%r11                               #! PC = 0x55555557c603 *)
(* and $0x1f, r11 *)
nop;
(* add    $0x2a0,%r11                              #! PC = 0x55555557c607 *)
(* add 0x2a0, r11 *)
nop;
(* sub    %r11,%rsp                                #! PC = 0x55555557c60e *)
(* sub r11, rsp *)
nop;
(* mov    %r11,0x260(%rsp)                         #! EA = L0x7ffffff50920; PC = 0x55555557c611 *)
mov %L0x7ffffff50920 %r11;
(* mov    %r12,0x268(%rsp)                         #! EA = L0x7ffffff50928; PC = 0x55555557c619 *)
mov %L0x7ffffff50928 %r12;
(* mov    %r13,0x270(%rsp)                         #! EA = L0x7ffffff50930; PC = 0x55555557c621 *)
mov %L0x7ffffff50930 %r13;
(* mov    %r14,0x278(%rsp)                         #! EA = L0x7ffffff50938; PC = 0x55555557c629 *)
mov %L0x7ffffff50938 %r14;
(* mov    %r15,0x280(%rsp)                         #! EA = L0x7ffffff50940; PC = 0x55555557c631 *)
mov %L0x7ffffff50940 %r15;
(* mov    %rbx,0x288(%rsp)                         #! EA = L0x7ffffff50948; PC = 0x55555557c639 *)
mov %L0x7ffffff50948 %rbx;
(* lea    (%rsp),%rcx                              #! PC = 0x55555557c641 *)
(* lea (rsp), rcx *)
nop;

mov %ina0 %L0x7ffffff50ca0; mov %ina1 %L0x7ffffff50ca8;
mov %ina2 %L0x7ffffff50cb0; mov %ina3 %L0x7ffffff50cb8;
mov %ina4 %L0x7ffffff50cc0; mov %ina5 %L0x7ffffff50cc8;
mov %ina6 %L0x7ffffff50cd0; mov %ina7 %L0x7ffffff50cd8;
mov %ina8 %L0x7ffffff50ce0; mov %ina9 %L0x7ffffff50ce8;
mov %inaa %L0x7ffffff50cf0; mov %inab %L0x7ffffff50cf8;

mov %inb0 %L0x7ffffff509a0; mov %inb1 %L0x7ffffff509a8;
mov %inb2 %L0x7ffffff509b0; mov %inb3 %L0x7ffffff509b8;
mov %inb4 %L0x7ffffff509c0; mov %inb5 %L0x7ffffff509c8;
mov %inb6 %L0x7ffffff509d0; mov %inb7 %L0x7ffffff509d8;
mov %inb8 %L0x7ffffff509e0; mov %inb9 %L0x7ffffff509e8;
mov %inba %L0x7ffffff509f0; mov %inbb %L0x7ffffff509f8;

ghost %ina0o@bit[64],%ina1o@bit[64],%ina2o@bit[64],%ina3o@bit[64],
      %ina4o@bit[64],%ina5o@bit[64],%ina6o@bit[64],%ina7o@bit[64],
      %ina8o@bit[64],%ina9o@bit[64],%inaao@bit[64],%inabo@bit[64]:
      %ina0o=%ina0 /\ %ina1o=%ina1 /\ %ina2o=%ina2 /\ %ina3o=%ina3 /\
      %ina4o=%ina4 /\ %ina5o=%ina5 /\ %ina6o=%ina6 /\ %ina7o=%ina7 /\
      %ina8o=%ina8 /\ %ina9o=%ina9 /\ %inaao=%inaa /\ %inabo=%inab && true;
      
call vec_mul_asm (z,
%ina0,%ina1,%ina2,%ina3,%ina4,%ina5,%ina6,%ina7,%ina8,%ina9,%inaa,%inab,
%inb0,%inb1,%inb2,%inb3,%inb4,%inb5,%inb6,%inb7,%inb8,%inb9,%inba,%inbb
(*
%L0x7ffffff50ca0,%L0x7ffffff50ca8,%L0x7ffffff50cb0,%L0x7ffffff50cb8,
%L0x7ffffff50cc0,%L0x7ffffff50cc8,%L0x7ffffff50cd0,%L0x7ffffff50cd8,
%L0x7ffffff50ce0,%L0x7ffffff50ce8,%L0x7ffffff50cf0,%L0x7ffffff50cf8,
%L0x7ffffff509a0,%L0x7ffffff509a8,%L0x7ffffff509b0,%L0x7ffffff509b8,
%L0x7ffffff509c0,%L0x7ffffff509c8,%L0x7ffffff509d0,%L0x7ffffff509d8,
%L0x7ffffff509e0,%L0x7ffffff509e8,%L0x7ffffff509f0,%L0x7ffffff509f8
*)
,
%L0x7ffffff50ca0,%L0x7ffffff50ca8,%L0x7ffffff50cb0,%L0x7ffffff50cb8,
%L0x7ffffff50cc0,%L0x7ffffff50cc8,%L0x7ffffff50cd0,%L0x7ffffff50cd8,
%L0x7ffffff50ce0,%L0x7ffffff50ce8,%L0x7ffffff50cf0,%L0x7ffffff50cf8);

(*
assert eqmod (poly z [%L0x7ffffff50ca0[2],%L0x7ffffff50ca8[2],
                      %L0x7ffffff50cb0[2],%L0x7ffffff50cb8[2],
                      %L0x7ffffff50cc0[2],%L0x7ffffff50cc8[2],
                      %L0x7ffffff50cd0[2],%L0x7ffffff50cd8[2],
                      %L0x7ffffff50ce0[2],%L0x7ffffff50ce8[2],
                      %L0x7ffffff50cf0[2],%L0x7ffffff50cf8[2]])
             (poly z [%ina0o[2],%ina1o[2],%ina2o[2],%ina3o[2],
                      %ina4o[2],%ina5o[2],%ina6o[2],%ina7o[2],
                      %ina8o[2],%ina9o[2],%inaao[2],%inabo[2]] *
              (z**2+z))
             [2, z**12+z**3+1] && true;
*)

(* mov    0x260(%rsp),%r11                         #! EA = L0x7ffffff50920; Value = 0x00000000000002b8; PC = 0x55555557c97c *)
mov %r11 %L0x7ffffff50920;
(* mov    0x268(%rsp),%r12                         #! EA = L0x7ffffff50928; Value = 0x00007ffffff50d00; PC = 0x55555557c984 *)
mov %r12 %L0x7ffffff50928;
(* mov    0x270(%rsp),%r13                         #! EA = L0x7ffffff50930; Value = 0x0000ff000000ff00; PC = 0x55555557c98c *)
mov %r13 %L0x7ffffff50930;
(* mov    0x278(%rsp),%r14                         #! EA = L0x7ffffff50938; Value = 0x00ff000000ff0000; PC = 0x55555557c994 *)
mov %r14 %L0x7ffffff50938;
(* mov    0x280(%rsp),%r15                         #! EA = L0x7ffffff50940; Value = 0x4444444444444444; PC = 0x55555557c99c *)
mov %r15 %L0x7ffffff50940;
(* mov    0x288(%rsp),%rbx                         #! EA = L0x7ffffff50948; Value = 0x0000ffff00000000; PC = 0x55555557c9a4 *)
mov %rbx %L0x7ffffff50948;
(* add    %r11,%rsp                                #! PC = 0x55555557c9ac *)
(* add r11, rsp *)
nop;
(* #! <- SP = 0x7ffffff50978 *)
#! 0x7ffffff50978 = 0x7ffffff50978;
(* #ret                                            #! PC = 0x55555557c9af *)
#ret                                            #! 0x55555557c9af = 0x55555557c9af;


(**************** NOTE: twists ****************)

ghost Y0@uint64,G00@uint16,G01@uint16:
      (z**2+z)*Y0 = X0 /\
G00 = poly z [%L0x7ffffff50ca0[0],%L0x7ffffff50ca8[0],%L0x7ffffff50cb0[0],
              %L0x7ffffff50cb8[0],%L0x7ffffff50cc0[0],%L0x7ffffff50cc8[0],
              %L0x7ffffff50cd0[0],%L0x7ffffff50cd8[0],%L0x7ffffff50ce0[0],
              %L0x7ffffff50ce8[0],%L0x7ffffff50cf0[0],%L0x7ffffff50cf8[0]]*Y0**0+
      poly z [%L0x7ffffff50ca0[2],%L0x7ffffff50ca8[2],%L0x7ffffff50cb0[2],
              %L0x7ffffff50cb8[2],%L0x7ffffff50cc0[2],%L0x7ffffff50cc8[2],
              %L0x7ffffff50cd0[2],%L0x7ffffff50cd8[2],%L0x7ffffff50ce0[2],
              %L0x7ffffff50ce8[2],%L0x7ffffff50cf0[2],%L0x7ffffff50cf8[2]]*Y0**1+
      poly z [%L0x7ffffff50ca0[4],%L0x7ffffff50ca8[4],%L0x7ffffff50cb0[4],
              %L0x7ffffff50cb8[4],%L0x7ffffff50cc0[4],%L0x7ffffff50cc8[4],
              %L0x7ffffff50cd0[4],%L0x7ffffff50cd8[4],%L0x7ffffff50ce0[4],
              %L0x7ffffff50ce8[4],%L0x7ffffff50cf0[4],%L0x7ffffff50cf8[4]]*Y0**2+
      poly z [%L0x7ffffff50ca0[6],%L0x7ffffff50ca8[6],%L0x7ffffff50cb0[6],
              %L0x7ffffff50cb8[6],%L0x7ffffff50cc0[6],%L0x7ffffff50cc8[6],
              %L0x7ffffff50cd0[6],%L0x7ffffff50cd8[6],%L0x7ffffff50ce0[6],
              %L0x7ffffff50ce8[6],%L0x7ffffff50cf0[6],%L0x7ffffff50cf8[6]]*Y0**3+
      poly z [%L0x7ffffff50ca0[8],%L0x7ffffff50ca8[8],%L0x7ffffff50cb0[8],
              %L0x7ffffff50cb8[8],%L0x7ffffff50cc0[8],%L0x7ffffff50cc8[8],
              %L0x7ffffff50cd0[8],%L0x7ffffff50cd8[8],%L0x7ffffff50ce0[8],
              %L0x7ffffff50ce8[8],%L0x7ffffff50cf0[8],%L0x7ffffff50cf8[8]]*Y0**4+
      poly z [%L0x7ffffff50ca0[10],%L0x7ffffff50ca8[10],%L0x7ffffff50cb0[10],
              %L0x7ffffff50cb8[10],%L0x7ffffff50cc0[10],%L0x7ffffff50cc8[10],
              %L0x7ffffff50cd0[10],%L0x7ffffff50cd8[10],%L0x7ffffff50ce0[10],
              %L0x7ffffff50ce8[10],%L0x7ffffff50cf0[10],%L0x7ffffff50cf8[10]]*Y0**5+
      poly z [%L0x7ffffff50ca0[12],%L0x7ffffff50ca8[12],%L0x7ffffff50cb0[12],
              %L0x7ffffff50cb8[12],%L0x7ffffff50cc0[12],%L0x7ffffff50cc8[12],
              %L0x7ffffff50cd0[12],%L0x7ffffff50cd8[12],%L0x7ffffff50ce0[12],
              %L0x7ffffff50ce8[12],%L0x7ffffff50cf0[12],%L0x7ffffff50cf8[12]]*Y0**6+
      poly z [%L0x7ffffff50ca0[14],%L0x7ffffff50ca8[14],%L0x7ffffff50cb0[14],
              %L0x7ffffff50cb8[14],%L0x7ffffff50cc0[14],%L0x7ffffff50cc8[14],
              %L0x7ffffff50cd0[14],%L0x7ffffff50cd8[14],%L0x7ffffff50ce0[14],
              %L0x7ffffff50ce8[14],%L0x7ffffff50cf0[14],%L0x7ffffff50cf8[14]]*Y0**7+
      poly z [%L0x7ffffff50ca0[16],%L0x7ffffff50ca8[16],%L0x7ffffff50cb0[16],
              %L0x7ffffff50cb8[16],%L0x7ffffff50cc0[16],%L0x7ffffff50cc8[16],
              %L0x7ffffff50cd0[16],%L0x7ffffff50cd8[16],%L0x7ffffff50ce0[16],
              %L0x7ffffff50ce8[16],%L0x7ffffff50cf0[16],%L0x7ffffff50cf8[16]]*Y0**8+
      poly z [%L0x7ffffff50ca0[18],%L0x7ffffff50ca8[18],%L0x7ffffff50cb0[18],
              %L0x7ffffff50cb8[18],%L0x7ffffff50cc0[18],%L0x7ffffff50cc8[18],
              %L0x7ffffff50cd0[18],%L0x7ffffff50cd8[18],%L0x7ffffff50ce0[18],
              %L0x7ffffff50ce8[18],%L0x7ffffff50cf0[18],%L0x7ffffff50cf8[18]]*Y0**9+
      poly z [%L0x7ffffff50ca0[20],%L0x7ffffff50ca8[20],%L0x7ffffff50cb0[20],
              %L0x7ffffff50cb8[20],%L0x7ffffff50cc0[20],%L0x7ffffff50cc8[20],
              %L0x7ffffff50cd0[20],%L0x7ffffff50cd8[20],%L0x7ffffff50ce0[20],
              %L0x7ffffff50ce8[20],%L0x7ffffff50cf0[20],%L0x7ffffff50cf8[20]]*Y0**10+
      poly z [%L0x7ffffff50ca0[22],%L0x7ffffff50ca8[22],%L0x7ffffff50cb0[22],
              %L0x7ffffff50cb8[22],%L0x7ffffff50cc0[22],%L0x7ffffff50cc8[22],
              %L0x7ffffff50cd0[22],%L0x7ffffff50cd8[22],%L0x7ffffff50ce0[22],
              %L0x7ffffff50ce8[22],%L0x7ffffff50cf0[22],%L0x7ffffff50cf8[22]]*Y0**11+
      poly z [%L0x7ffffff50ca0[24],%L0x7ffffff50ca8[24],%L0x7ffffff50cb0[24],
              %L0x7ffffff50cb8[24],%L0x7ffffff50cc0[24],%L0x7ffffff50cc8[24],
              %L0x7ffffff50cd0[24],%L0x7ffffff50cd8[24],%L0x7ffffff50ce0[24],
              %L0x7ffffff50ce8[24],%L0x7ffffff50cf0[24],%L0x7ffffff50cf8[24]]*Y0**12+
      poly z [%L0x7ffffff50ca0[26],%L0x7ffffff50ca8[26],%L0x7ffffff50cb0[26],
              %L0x7ffffff50cb8[26],%L0x7ffffff50cc0[26],%L0x7ffffff50cc8[26],
              %L0x7ffffff50cd0[26],%L0x7ffffff50cd8[26],%L0x7ffffff50ce0[26],
              %L0x7ffffff50ce8[26],%L0x7ffffff50cf0[26],%L0x7ffffff50cf8[26]]*Y0**13+
      poly z [%L0x7ffffff50ca0[28],%L0x7ffffff50ca8[28],%L0x7ffffff50cb0[28],
              %L0x7ffffff50cb8[28],%L0x7ffffff50cc0[28],%L0x7ffffff50cc8[28],
              %L0x7ffffff50cd0[28],%L0x7ffffff50cd8[28],%L0x7ffffff50ce0[28],
              %L0x7ffffff50ce8[28],%L0x7ffffff50cf0[28],%L0x7ffffff50cf8[28]]*Y0**14+
      poly z [%L0x7ffffff50ca0[30],%L0x7ffffff50ca8[30],%L0x7ffffff50cb0[30],
              %L0x7ffffff50cb8[30],%L0x7ffffff50cc0[30],%L0x7ffffff50cc8[30],
              %L0x7ffffff50cd0[30],%L0x7ffffff50cd8[30],%L0x7ffffff50ce0[30],
              %L0x7ffffff50ce8[30],%L0x7ffffff50cf0[30],%L0x7ffffff50cf8[30]]*Y0**15+
      poly z [%L0x7ffffff50ca0[32],%L0x7ffffff50ca8[32],%L0x7ffffff50cb0[32],
              %L0x7ffffff50cb8[32],%L0x7ffffff50cc0[32],%L0x7ffffff50cc8[32],
              %L0x7ffffff50cd0[32],%L0x7ffffff50cd8[32],%L0x7ffffff50ce0[32],
              %L0x7ffffff50ce8[32],%L0x7ffffff50cf0[32],%L0x7ffffff50cf8[32]]*Y0**16+
      poly z [%L0x7ffffff50ca0[34],%L0x7ffffff50ca8[34],%L0x7ffffff50cb0[34],
              %L0x7ffffff50cb8[34],%L0x7ffffff50cc0[34],%L0x7ffffff50cc8[34],
              %L0x7ffffff50cd0[34],%L0x7ffffff50cd8[34],%L0x7ffffff50ce0[34],
              %L0x7ffffff50ce8[34],%L0x7ffffff50cf0[34],%L0x7ffffff50cf8[34]]*Y0**17+
      poly z [%L0x7ffffff50ca0[36],%L0x7ffffff50ca8[36],%L0x7ffffff50cb0[36],
              %L0x7ffffff50cb8[36],%L0x7ffffff50cc0[36],%L0x7ffffff50cc8[36],
              %L0x7ffffff50cd0[36],%L0x7ffffff50cd8[36],%L0x7ffffff50ce0[36],
              %L0x7ffffff50ce8[36],%L0x7ffffff50cf0[36],%L0x7ffffff50cf8[36]]*Y0**18+
      poly z [%L0x7ffffff50ca0[38],%L0x7ffffff50ca8[38],%L0x7ffffff50cb0[38],
              %L0x7ffffff50cb8[38],%L0x7ffffff50cc0[38],%L0x7ffffff50cc8[38],
              %L0x7ffffff50cd0[38],%L0x7ffffff50cd8[38],%L0x7ffffff50ce0[38],
              %L0x7ffffff50ce8[38],%L0x7ffffff50cf0[38],%L0x7ffffff50cf8[38]]*Y0**19+
      poly z [%L0x7ffffff50ca0[40],%L0x7ffffff50ca8[40],%L0x7ffffff50cb0[40],
              %L0x7ffffff50cb8[40],%L0x7ffffff50cc0[40],%L0x7ffffff50cc8[40],
              %L0x7ffffff50cd0[40],%L0x7ffffff50cd8[40],%L0x7ffffff50ce0[40],
              %L0x7ffffff50ce8[40],%L0x7ffffff50cf0[40],%L0x7ffffff50cf8[40]]*Y0**20+
      poly z [%L0x7ffffff50ca0[42],%L0x7ffffff50ca8[42],%L0x7ffffff50cb0[42],
              %L0x7ffffff50cb8[42],%L0x7ffffff50cc0[42],%L0x7ffffff50cc8[42],
              %L0x7ffffff50cd0[42],%L0x7ffffff50cd8[42],%L0x7ffffff50ce0[42],
              %L0x7ffffff50ce8[42],%L0x7ffffff50cf0[42],%L0x7ffffff50cf8[42]]*Y0**21+
      poly z [%L0x7ffffff50ca0[44],%L0x7ffffff50ca8[44],%L0x7ffffff50cb0[44],
              %L0x7ffffff50cb8[44],%L0x7ffffff50cc0[44],%L0x7ffffff50cc8[44],
              %L0x7ffffff50cd0[44],%L0x7ffffff50cd8[44],%L0x7ffffff50ce0[44],
              %L0x7ffffff50ce8[44],%L0x7ffffff50cf0[44],%L0x7ffffff50cf8[44]]*Y0**22+
      poly z [%L0x7ffffff50ca0[46],%L0x7ffffff50ca8[46],%L0x7ffffff50cb0[46],
              %L0x7ffffff50cb8[46],%L0x7ffffff50cc0[46],%L0x7ffffff50cc8[46],
              %L0x7ffffff50cd0[46],%L0x7ffffff50cd8[46],%L0x7ffffff50ce0[46],
              %L0x7ffffff50ce8[46],%L0x7ffffff50cf0[46],%L0x7ffffff50cf8[46]]*Y0**23+
      poly z [%L0x7ffffff50ca0[48],%L0x7ffffff50ca8[48],%L0x7ffffff50cb0[48],
              %L0x7ffffff50cb8[48],%L0x7ffffff50cc0[48],%L0x7ffffff50cc8[48],
              %L0x7ffffff50cd0[48],%L0x7ffffff50cd8[48],%L0x7ffffff50ce0[48],
              %L0x7ffffff50ce8[48],%L0x7ffffff50cf0[48],%L0x7ffffff50cf8[48]]*Y0**24+
      poly z [%L0x7ffffff50ca0[50],%L0x7ffffff50ca8[50],%L0x7ffffff50cb0[50],
              %L0x7ffffff50cb8[50],%L0x7ffffff50cc0[50],%L0x7ffffff50cc8[50],
              %L0x7ffffff50cd0[50],%L0x7ffffff50cd8[50],%L0x7ffffff50ce0[50],
              %L0x7ffffff50ce8[50],%L0x7ffffff50cf0[50],%L0x7ffffff50cf8[50]]*Y0**25+
      poly z [%L0x7ffffff50ca0[52],%L0x7ffffff50ca8[52],%L0x7ffffff50cb0[52],
              %L0x7ffffff50cb8[52],%L0x7ffffff50cc0[52],%L0x7ffffff50cc8[52],
              %L0x7ffffff50cd0[52],%L0x7ffffff50cd8[52],%L0x7ffffff50ce0[52],
              %L0x7ffffff50ce8[52],%L0x7ffffff50cf0[52],%L0x7ffffff50cf8[52]]*Y0**26+
      poly z [%L0x7ffffff50ca0[54],%L0x7ffffff50ca8[54],%L0x7ffffff50cb0[54],
              %L0x7ffffff50cb8[54],%L0x7ffffff50cc0[54],%L0x7ffffff50cc8[54],
              %L0x7ffffff50cd0[54],%L0x7ffffff50cd8[54],%L0x7ffffff50ce0[54],
              %L0x7ffffff50ce8[54],%L0x7ffffff50cf0[54],%L0x7ffffff50cf8[54]]*Y0**27+
      poly z [%L0x7ffffff50ca0[56],%L0x7ffffff50ca8[56],%L0x7ffffff50cb0[56],
              %L0x7ffffff50cb8[56],%L0x7ffffff50cc0[56],%L0x7ffffff50cc8[56],
              %L0x7ffffff50cd0[56],%L0x7ffffff50cd8[56],%L0x7ffffff50ce0[56],
              %L0x7ffffff50ce8[56],%L0x7ffffff50cf0[56],%L0x7ffffff50cf8[56]]*Y0**28+
      poly z [%L0x7ffffff50ca0[58],%L0x7ffffff50ca8[58],%L0x7ffffff50cb0[58],
              %L0x7ffffff50cb8[58],%L0x7ffffff50cc0[58],%L0x7ffffff50cc8[58],
              %L0x7ffffff50cd0[58],%L0x7ffffff50cd8[58],%L0x7ffffff50ce0[58],
              %L0x7ffffff50ce8[58],%L0x7ffffff50cf0[58],%L0x7ffffff50cf8[58]]*Y0**29+
      poly z [%L0x7ffffff50ca0[60],%L0x7ffffff50ca8[60],%L0x7ffffff50cb0[60],
              %L0x7ffffff50cb8[60],%L0x7ffffff50cc0[60],%L0x7ffffff50cc8[60],
              %L0x7ffffff50cd0[60],%L0x7ffffff50cd8[60],%L0x7ffffff50ce0[60],
              %L0x7ffffff50ce8[60],%L0x7ffffff50cf0[60],%L0x7ffffff50cf8[60]]*Y0**30+
      poly z [%L0x7ffffff50ca0[62],%L0x7ffffff50ca8[62],%L0x7ffffff50cb0[62],
              %L0x7ffffff50cb8[62],%L0x7ffffff50cc0[62],%L0x7ffffff50cc8[62],
              %L0x7ffffff50cd0[62],%L0x7ffffff50cd8[62],%L0x7ffffff50ce0[62],
              %L0x7ffffff50ce8[62],%L0x7ffffff50cf0[62],%L0x7ffffff50cf8[62]]*Y0**31 /\
G01 = poly z [%L0x7ffffff50ca0[1],%L0x7ffffff50ca8[1],%L0x7ffffff50cb0[1],
              %L0x7ffffff50cb8[1],%L0x7ffffff50cc0[1],%L0x7ffffff50cc8[1],
              %L0x7ffffff50cd0[1],%L0x7ffffff50cd8[1],%L0x7ffffff50ce0[1],
              %L0x7ffffff50ce8[1],%L0x7ffffff50cf0[1],%L0x7ffffff50cf8[1]]*Y0**0+
      poly z [%L0x7ffffff50ca0[3],%L0x7ffffff50ca8[3],%L0x7ffffff50cb0[3],
              %L0x7ffffff50cb8[3],%L0x7ffffff50cc0[3],%L0x7ffffff50cc8[3],
              %L0x7ffffff50cd0[3],%L0x7ffffff50cd8[3],%L0x7ffffff50ce0[3],
              %L0x7ffffff50ce8[3],%L0x7ffffff50cf0[3],%L0x7ffffff50cf8[3]]*Y0**1+
      poly z [%L0x7ffffff50ca0[5],%L0x7ffffff50ca8[5],%L0x7ffffff50cb0[5],
              %L0x7ffffff50cb8[5],%L0x7ffffff50cc0[5],%L0x7ffffff50cc8[5],
              %L0x7ffffff50cd0[5],%L0x7ffffff50cd8[5],%L0x7ffffff50ce0[5],
              %L0x7ffffff50ce8[5],%L0x7ffffff50cf0[5],%L0x7ffffff50cf8[5]]*Y0**2+
      poly z [%L0x7ffffff50ca0[7],%L0x7ffffff50ca8[7],%L0x7ffffff50cb0[7],
              %L0x7ffffff50cb8[7],%L0x7ffffff50cc0[7],%L0x7ffffff50cc8[7],
              %L0x7ffffff50cd0[7],%L0x7ffffff50cd8[7],%L0x7ffffff50ce0[7],
              %L0x7ffffff50ce8[7],%L0x7ffffff50cf0[7],%L0x7ffffff50cf8[7]]*Y0**3+
      poly z [%L0x7ffffff50ca0[9],%L0x7ffffff50ca8[9],%L0x7ffffff50cb0[9],
              %L0x7ffffff50cb8[9],%L0x7ffffff50cc0[9],%L0x7ffffff50cc8[9],
              %L0x7ffffff50cd0[9],%L0x7ffffff50cd8[9],%L0x7ffffff50ce0[9],
              %L0x7ffffff50ce8[9],%L0x7ffffff50cf0[9],%L0x7ffffff50cf8[9]]*Y0**4+
      poly z [%L0x7ffffff50ca0[11],%L0x7ffffff50ca8[11],%L0x7ffffff50cb0[11],
              %L0x7ffffff50cb8[11],%L0x7ffffff50cc0[11],%L0x7ffffff50cc8[11],
              %L0x7ffffff50cd0[11],%L0x7ffffff50cd8[11],%L0x7ffffff50ce0[11],
              %L0x7ffffff50ce8[11],%L0x7ffffff50cf0[11],%L0x7ffffff50cf8[11]]*Y0**5+
      poly z [%L0x7ffffff50ca0[13],%L0x7ffffff50ca8[13],%L0x7ffffff50cb0[13],
              %L0x7ffffff50cb8[13],%L0x7ffffff50cc0[13],%L0x7ffffff50cc8[13],
              %L0x7ffffff50cd0[13],%L0x7ffffff50cd8[13],%L0x7ffffff50ce0[13],
              %L0x7ffffff50ce8[13],%L0x7ffffff50cf0[13],%L0x7ffffff50cf8[13]]*Y0**6+
      poly z [%L0x7ffffff50ca0[15],%L0x7ffffff50ca8[15],%L0x7ffffff50cb0[15],
              %L0x7ffffff50cb8[15],%L0x7ffffff50cc0[15],%L0x7ffffff50cc8[15],
              %L0x7ffffff50cd0[15],%L0x7ffffff50cd8[15],%L0x7ffffff50ce0[15],
              %L0x7ffffff50ce8[15],%L0x7ffffff50cf0[15],%L0x7ffffff50cf8[15]]*Y0**7+
      poly z [%L0x7ffffff50ca0[17],%L0x7ffffff50ca8[17],%L0x7ffffff50cb0[17],
              %L0x7ffffff50cb8[17],%L0x7ffffff50cc0[17],%L0x7ffffff50cc8[17],
              %L0x7ffffff50cd0[17],%L0x7ffffff50cd8[17],%L0x7ffffff50ce0[17],
              %L0x7ffffff50ce8[17],%L0x7ffffff50cf0[17],%L0x7ffffff50cf8[17]]*Y0**8+
      poly z [%L0x7ffffff50ca0[19],%L0x7ffffff50ca8[19],%L0x7ffffff50cb0[19],
              %L0x7ffffff50cb8[19],%L0x7ffffff50cc0[19],%L0x7ffffff50cc8[19],
              %L0x7ffffff50cd0[19],%L0x7ffffff50cd8[19],%L0x7ffffff50ce0[19],
              %L0x7ffffff50ce8[19],%L0x7ffffff50cf0[19],%L0x7ffffff50cf8[19]]*Y0**9+
      poly z [%L0x7ffffff50ca0[21],%L0x7ffffff50ca8[21],%L0x7ffffff50cb0[21],
              %L0x7ffffff50cb8[21],%L0x7ffffff50cc0[21],%L0x7ffffff50cc8[21],
              %L0x7ffffff50cd0[21],%L0x7ffffff50cd8[21],%L0x7ffffff50ce0[21],
              %L0x7ffffff50ce8[21],%L0x7ffffff50cf0[21],%L0x7ffffff50cf8[21]]*Y0**10+
      poly z [%L0x7ffffff50ca0[23],%L0x7ffffff50ca8[23],%L0x7ffffff50cb0[23],
              %L0x7ffffff50cb8[23],%L0x7ffffff50cc0[23],%L0x7ffffff50cc8[23],
              %L0x7ffffff50cd0[23],%L0x7ffffff50cd8[23],%L0x7ffffff50ce0[23],
              %L0x7ffffff50ce8[23],%L0x7ffffff50cf0[23],%L0x7ffffff50cf8[23]]*Y0**11+
      poly z [%L0x7ffffff50ca0[25],%L0x7ffffff50ca8[25],%L0x7ffffff50cb0[25],
              %L0x7ffffff50cb8[25],%L0x7ffffff50cc0[25],%L0x7ffffff50cc8[25],
              %L0x7ffffff50cd0[25],%L0x7ffffff50cd8[25],%L0x7ffffff50ce0[25],
              %L0x7ffffff50ce8[25],%L0x7ffffff50cf0[25],%L0x7ffffff50cf8[25]]*Y0**12+
      poly z [%L0x7ffffff50ca0[27],%L0x7ffffff50ca8[27],%L0x7ffffff50cb0[27],
              %L0x7ffffff50cb8[27],%L0x7ffffff50cc0[27],%L0x7ffffff50cc8[27],
              %L0x7ffffff50cd0[27],%L0x7ffffff50cd8[27],%L0x7ffffff50ce0[27],
              %L0x7ffffff50ce8[27],%L0x7ffffff50cf0[27],%L0x7ffffff50cf8[27]]*Y0**13+
      poly z [%L0x7ffffff50ca0[29],%L0x7ffffff50ca8[29],%L0x7ffffff50cb0[29],
              %L0x7ffffff50cb8[29],%L0x7ffffff50cc0[29],%L0x7ffffff50cc8[29],
              %L0x7ffffff50cd0[29],%L0x7ffffff50cd8[29],%L0x7ffffff50ce0[29],
              %L0x7ffffff50ce8[29],%L0x7ffffff50cf0[29],%L0x7ffffff50cf8[29]]*Y0**14+
      poly z [%L0x7ffffff50ca0[31],%L0x7ffffff50ca8[31],%L0x7ffffff50cb0[31],
              %L0x7ffffff50cb8[31],%L0x7ffffff50cc0[31],%L0x7ffffff50cc8[31],
              %L0x7ffffff50cd0[31],%L0x7ffffff50cd8[31],%L0x7ffffff50ce0[31],
              %L0x7ffffff50ce8[31],%L0x7ffffff50cf0[31],%L0x7ffffff50cf8[31]]*Y0**15+
      poly z [%L0x7ffffff50ca0[33],%L0x7ffffff50ca8[33],%L0x7ffffff50cb0[33],
              %L0x7ffffff50cb8[33],%L0x7ffffff50cc0[33],%L0x7ffffff50cc8[33],
              %L0x7ffffff50cd0[33],%L0x7ffffff50cd8[33],%L0x7ffffff50ce0[33],
              %L0x7ffffff50ce8[33],%L0x7ffffff50cf0[33],%L0x7ffffff50cf8[33]]*Y0**16+
      poly z [%L0x7ffffff50ca0[35],%L0x7ffffff50ca8[35],%L0x7ffffff50cb0[35],
              %L0x7ffffff50cb8[35],%L0x7ffffff50cc0[35],%L0x7ffffff50cc8[35],
              %L0x7ffffff50cd0[35],%L0x7ffffff50cd8[35],%L0x7ffffff50ce0[35],
              %L0x7ffffff50ce8[35],%L0x7ffffff50cf0[35],%L0x7ffffff50cf8[35]]*Y0**17+
      poly z [%L0x7ffffff50ca0[37],%L0x7ffffff50ca8[37],%L0x7ffffff50cb0[37],
              %L0x7ffffff50cb8[37],%L0x7ffffff50cc0[37],%L0x7ffffff50cc8[37],
              %L0x7ffffff50cd0[37],%L0x7ffffff50cd8[37],%L0x7ffffff50ce0[37],
              %L0x7ffffff50ce8[37],%L0x7ffffff50cf0[37],%L0x7ffffff50cf8[37]]*Y0**18+
      poly z [%L0x7ffffff50ca0[39],%L0x7ffffff50ca8[39],%L0x7ffffff50cb0[39],
              %L0x7ffffff50cb8[39],%L0x7ffffff50cc0[39],%L0x7ffffff50cc8[39],
              %L0x7ffffff50cd0[39],%L0x7ffffff50cd8[39],%L0x7ffffff50ce0[39],
              %L0x7ffffff50ce8[39],%L0x7ffffff50cf0[39],%L0x7ffffff50cf8[39]]*Y0**19+
      poly z [%L0x7ffffff50ca0[41],%L0x7ffffff50ca8[41],%L0x7ffffff50cb0[41],
              %L0x7ffffff50cb8[41],%L0x7ffffff50cc0[41],%L0x7ffffff50cc8[41],
              %L0x7ffffff50cd0[41],%L0x7ffffff50cd8[41],%L0x7ffffff50ce0[41],
              %L0x7ffffff50ce8[41],%L0x7ffffff50cf0[41],%L0x7ffffff50cf8[41]]*Y0**20+
      poly z [%L0x7ffffff50ca0[43],%L0x7ffffff50ca8[43],%L0x7ffffff50cb0[43],
              %L0x7ffffff50cb8[43],%L0x7ffffff50cc0[43],%L0x7ffffff50cc8[43],
              %L0x7ffffff50cd0[43],%L0x7ffffff50cd8[43],%L0x7ffffff50ce0[43],
              %L0x7ffffff50ce8[43],%L0x7ffffff50cf0[43],%L0x7ffffff50cf8[43]]*Y0**21+
      poly z [%L0x7ffffff50ca0[45],%L0x7ffffff50ca8[45],%L0x7ffffff50cb0[45],
              %L0x7ffffff50cb8[45],%L0x7ffffff50cc0[45],%L0x7ffffff50cc8[45],
              %L0x7ffffff50cd0[45],%L0x7ffffff50cd8[45],%L0x7ffffff50ce0[45],
              %L0x7ffffff50ce8[45],%L0x7ffffff50cf0[45],%L0x7ffffff50cf8[45]]*Y0**22+
      poly z [%L0x7ffffff50ca0[47],%L0x7ffffff50ca8[47],%L0x7ffffff50cb0[47],
              %L0x7ffffff50cb8[47],%L0x7ffffff50cc0[47],%L0x7ffffff50cc8[47],
              %L0x7ffffff50cd0[47],%L0x7ffffff50cd8[47],%L0x7ffffff50ce0[47],
              %L0x7ffffff50ce8[47],%L0x7ffffff50cf0[47],%L0x7ffffff50cf8[47]]*Y0**23+
      poly z [%L0x7ffffff50ca0[49],%L0x7ffffff50ca8[49],%L0x7ffffff50cb0[49],
              %L0x7ffffff50cb8[49],%L0x7ffffff50cc0[49],%L0x7ffffff50cc8[49],
              %L0x7ffffff50cd0[49],%L0x7ffffff50cd8[49],%L0x7ffffff50ce0[49],
              %L0x7ffffff50ce8[49],%L0x7ffffff50cf0[49],%L0x7ffffff50cf8[49]]*Y0**24+
      poly z [%L0x7ffffff50ca0[51],%L0x7ffffff50ca8[51],%L0x7ffffff50cb0[51],
              %L0x7ffffff50cb8[51],%L0x7ffffff50cc0[51],%L0x7ffffff50cc8[51],
              %L0x7ffffff50cd0[51],%L0x7ffffff50cd8[51],%L0x7ffffff50ce0[51],
              %L0x7ffffff50ce8[51],%L0x7ffffff50cf0[51],%L0x7ffffff50cf8[51]]*Y0**25+
      poly z [%L0x7ffffff50ca0[53],%L0x7ffffff50ca8[53],%L0x7ffffff50cb0[53],
              %L0x7ffffff50cb8[53],%L0x7ffffff50cc0[53],%L0x7ffffff50cc8[53],
              %L0x7ffffff50cd0[53],%L0x7ffffff50cd8[53],%L0x7ffffff50ce0[53],
              %L0x7ffffff50ce8[53],%L0x7ffffff50cf0[53],%L0x7ffffff50cf8[53]]*Y0**26+
      poly z [%L0x7ffffff50ca0[55],%L0x7ffffff50ca8[55],%L0x7ffffff50cb0[55],
              %L0x7ffffff50cb8[55],%L0x7ffffff50cc0[55],%L0x7ffffff50cc8[55],
              %L0x7ffffff50cd0[55],%L0x7ffffff50cd8[55],%L0x7ffffff50ce0[55],
              %L0x7ffffff50ce8[55],%L0x7ffffff50cf0[55],%L0x7ffffff50cf8[55]]*Y0**27+
      poly z [%L0x7ffffff50ca0[57],%L0x7ffffff50ca8[57],%L0x7ffffff50cb0[57],
              %L0x7ffffff50cb8[57],%L0x7ffffff50cc0[57],%L0x7ffffff50cc8[57],
              %L0x7ffffff50cd0[57],%L0x7ffffff50cd8[57],%L0x7ffffff50ce0[57],
              %L0x7ffffff50ce8[57],%L0x7ffffff50cf0[57],%L0x7ffffff50cf8[57]]*Y0**28+
      poly z [%L0x7ffffff50ca0[59],%L0x7ffffff50ca8[59],%L0x7ffffff50cb0[59],
              %L0x7ffffff50cb8[59],%L0x7ffffff50cc0[59],%L0x7ffffff50cc8[59],
              %L0x7ffffff50cd0[59],%L0x7ffffff50cd8[59],%L0x7ffffff50ce0[59],
              %L0x7ffffff50ce8[59],%L0x7ffffff50cf0[59],%L0x7ffffff50cf8[59]]*Y0**29+
      poly z [%L0x7ffffff50ca0[61],%L0x7ffffff50ca8[61],%L0x7ffffff50cb0[61],
              %L0x7ffffff50cb8[61],%L0x7ffffff50cc0[61],%L0x7ffffff50cc8[61],
              %L0x7ffffff50cd0[61],%L0x7ffffff50cd8[61],%L0x7ffffff50ce0[61],
              %L0x7ffffff50ce8[61],%L0x7ffffff50cf0[61],%L0x7ffffff50cf8[61]]*Y0**30+
      poly z [%L0x7ffffff50ca0[63],%L0x7ffffff50ca8[63],%L0x7ffffff50cb0[63],
              %L0x7ffffff50cb8[63],%L0x7ffffff50cc0[63],%L0x7ffffff50cc8[63],
              %L0x7ffffff50cd0[63],%L0x7ffffff50cd8[63],%L0x7ffffff50ce0[63],
              %L0x7ffffff50ce8[63],%L0x7ffffff50cf0[63],%L0x7ffffff50cf8[63]]*Y0**31   && true;

(* 1 *)
cut eqmod F00 G00 [2, z**12+z**3+1] /\
    eqmod F01 G01 [2, z**12+z**3+1] /\
G00 = poly z [%L0x7ffffff50ca0[0],%L0x7ffffff50ca8[0],%L0x7ffffff50cb0[0],
              %L0x7ffffff50cb8[0],%L0x7ffffff50cc0[0],%L0x7ffffff50cc8[0],
              %L0x7ffffff50cd0[0],%L0x7ffffff50cd8[0],%L0x7ffffff50ce0[0],
              %L0x7ffffff50ce8[0],%L0x7ffffff50cf0[0],%L0x7ffffff50cf8[0]]*Y0**0+
      poly z [%L0x7ffffff50ca0[2],%L0x7ffffff50ca8[2],%L0x7ffffff50cb0[2],
              %L0x7ffffff50cb8[2],%L0x7ffffff50cc0[2],%L0x7ffffff50cc8[2],
              %L0x7ffffff50cd0[2],%L0x7ffffff50cd8[2],%L0x7ffffff50ce0[2],
              %L0x7ffffff50ce8[2],%L0x7ffffff50cf0[2],%L0x7ffffff50cf8[2]]*Y0**1+
      poly z [%L0x7ffffff50ca0[4],%L0x7ffffff50ca8[4],%L0x7ffffff50cb0[4],
              %L0x7ffffff50cb8[4],%L0x7ffffff50cc0[4],%L0x7ffffff50cc8[4],
              %L0x7ffffff50cd0[4],%L0x7ffffff50cd8[4],%L0x7ffffff50ce0[4],
              %L0x7ffffff50ce8[4],%L0x7ffffff50cf0[4],%L0x7ffffff50cf8[4]]*Y0**2+
      poly z [%L0x7ffffff50ca0[6],%L0x7ffffff50ca8[6],%L0x7ffffff50cb0[6],
              %L0x7ffffff50cb8[6],%L0x7ffffff50cc0[6],%L0x7ffffff50cc8[6],
              %L0x7ffffff50cd0[6],%L0x7ffffff50cd8[6],%L0x7ffffff50ce0[6],
              %L0x7ffffff50ce8[6],%L0x7ffffff50cf0[6],%L0x7ffffff50cf8[6]]*Y0**3+
      poly z [%L0x7ffffff50ca0[8],%L0x7ffffff50ca8[8],%L0x7ffffff50cb0[8],
              %L0x7ffffff50cb8[8],%L0x7ffffff50cc0[8],%L0x7ffffff50cc8[8],
              %L0x7ffffff50cd0[8],%L0x7ffffff50cd8[8],%L0x7ffffff50ce0[8],
              %L0x7ffffff50ce8[8],%L0x7ffffff50cf0[8],%L0x7ffffff50cf8[8]]*Y0**4+
      poly z [%L0x7ffffff50ca0[10],%L0x7ffffff50ca8[10],%L0x7ffffff50cb0[10],
              %L0x7ffffff50cb8[10],%L0x7ffffff50cc0[10],%L0x7ffffff50cc8[10],
              %L0x7ffffff50cd0[10],%L0x7ffffff50cd8[10],%L0x7ffffff50ce0[10],
              %L0x7ffffff50ce8[10],%L0x7ffffff50cf0[10],%L0x7ffffff50cf8[10]]*Y0**5+
      poly z [%L0x7ffffff50ca0[12],%L0x7ffffff50ca8[12],%L0x7ffffff50cb0[12],
              %L0x7ffffff50cb8[12],%L0x7ffffff50cc0[12],%L0x7ffffff50cc8[12],
              %L0x7ffffff50cd0[12],%L0x7ffffff50cd8[12],%L0x7ffffff50ce0[12],
              %L0x7ffffff50ce8[12],%L0x7ffffff50cf0[12],%L0x7ffffff50cf8[12]]*Y0**6+
      poly z [%L0x7ffffff50ca0[14],%L0x7ffffff50ca8[14],%L0x7ffffff50cb0[14],
              %L0x7ffffff50cb8[14],%L0x7ffffff50cc0[14],%L0x7ffffff50cc8[14],
              %L0x7ffffff50cd0[14],%L0x7ffffff50cd8[14],%L0x7ffffff50ce0[14],
              %L0x7ffffff50ce8[14],%L0x7ffffff50cf0[14],%L0x7ffffff50cf8[14]]*Y0**7+
      poly z [%L0x7ffffff50ca0[16],%L0x7ffffff50ca8[16],%L0x7ffffff50cb0[16],
              %L0x7ffffff50cb8[16],%L0x7ffffff50cc0[16],%L0x7ffffff50cc8[16],
              %L0x7ffffff50cd0[16],%L0x7ffffff50cd8[16],%L0x7ffffff50ce0[16],
              %L0x7ffffff50ce8[16],%L0x7ffffff50cf0[16],%L0x7ffffff50cf8[16]]*Y0**8+
      poly z [%L0x7ffffff50ca0[18],%L0x7ffffff50ca8[18],%L0x7ffffff50cb0[18],
              %L0x7ffffff50cb8[18],%L0x7ffffff50cc0[18],%L0x7ffffff50cc8[18],
              %L0x7ffffff50cd0[18],%L0x7ffffff50cd8[18],%L0x7ffffff50ce0[18],
              %L0x7ffffff50ce8[18],%L0x7ffffff50cf0[18],%L0x7ffffff50cf8[18]]*Y0**9+
      poly z [%L0x7ffffff50ca0[20],%L0x7ffffff50ca8[20],%L0x7ffffff50cb0[20],
              %L0x7ffffff50cb8[20],%L0x7ffffff50cc0[20],%L0x7ffffff50cc8[20],
              %L0x7ffffff50cd0[20],%L0x7ffffff50cd8[20],%L0x7ffffff50ce0[20],
              %L0x7ffffff50ce8[20],%L0x7ffffff50cf0[20],%L0x7ffffff50cf8[20]]*Y0**10+
      poly z [%L0x7ffffff50ca0[22],%L0x7ffffff50ca8[22],%L0x7ffffff50cb0[22],
              %L0x7ffffff50cb8[22],%L0x7ffffff50cc0[22],%L0x7ffffff50cc8[22],
              %L0x7ffffff50cd0[22],%L0x7ffffff50cd8[22],%L0x7ffffff50ce0[22],
              %L0x7ffffff50ce8[22],%L0x7ffffff50cf0[22],%L0x7ffffff50cf8[22]]*Y0**11+
      poly z [%L0x7ffffff50ca0[24],%L0x7ffffff50ca8[24],%L0x7ffffff50cb0[24],
              %L0x7ffffff50cb8[24],%L0x7ffffff50cc0[24],%L0x7ffffff50cc8[24],
              %L0x7ffffff50cd0[24],%L0x7ffffff50cd8[24],%L0x7ffffff50ce0[24],
              %L0x7ffffff50ce8[24],%L0x7ffffff50cf0[24],%L0x7ffffff50cf8[24]]*Y0**12+
      poly z [%L0x7ffffff50ca0[26],%L0x7ffffff50ca8[26],%L0x7ffffff50cb0[26],
              %L0x7ffffff50cb8[26],%L0x7ffffff50cc0[26],%L0x7ffffff50cc8[26],
              %L0x7ffffff50cd0[26],%L0x7ffffff50cd8[26],%L0x7ffffff50ce0[26],
              %L0x7ffffff50ce8[26],%L0x7ffffff50cf0[26],%L0x7ffffff50cf8[26]]*Y0**13+
      poly z [%L0x7ffffff50ca0[28],%L0x7ffffff50ca8[28],%L0x7ffffff50cb0[28],
              %L0x7ffffff50cb8[28],%L0x7ffffff50cc0[28],%L0x7ffffff50cc8[28],
              %L0x7ffffff50cd0[28],%L0x7ffffff50cd8[28],%L0x7ffffff50ce0[28],
              %L0x7ffffff50ce8[28],%L0x7ffffff50cf0[28],%L0x7ffffff50cf8[28]]*Y0**14+
      poly z [%L0x7ffffff50ca0[30],%L0x7ffffff50ca8[30],%L0x7ffffff50cb0[30],
              %L0x7ffffff50cb8[30],%L0x7ffffff50cc0[30],%L0x7ffffff50cc8[30],
              %L0x7ffffff50cd0[30],%L0x7ffffff50cd8[30],%L0x7ffffff50ce0[30],
              %L0x7ffffff50ce8[30],%L0x7ffffff50cf0[30],%L0x7ffffff50cf8[30]]*Y0**15+
      poly z [%L0x7ffffff50ca0[32],%L0x7ffffff50ca8[32],%L0x7ffffff50cb0[32],
              %L0x7ffffff50cb8[32],%L0x7ffffff50cc0[32],%L0x7ffffff50cc8[32],
              %L0x7ffffff50cd0[32],%L0x7ffffff50cd8[32],%L0x7ffffff50ce0[32],
              %L0x7ffffff50ce8[32],%L0x7ffffff50cf0[32],%L0x7ffffff50cf8[32]]*Y0**16+
      poly z [%L0x7ffffff50ca0[34],%L0x7ffffff50ca8[34],%L0x7ffffff50cb0[34],
              %L0x7ffffff50cb8[34],%L0x7ffffff50cc0[34],%L0x7ffffff50cc8[34],
              %L0x7ffffff50cd0[34],%L0x7ffffff50cd8[34],%L0x7ffffff50ce0[34],
              %L0x7ffffff50ce8[34],%L0x7ffffff50cf0[34],%L0x7ffffff50cf8[34]]*Y0**17+
      poly z [%L0x7ffffff50ca0[36],%L0x7ffffff50ca8[36],%L0x7ffffff50cb0[36],
              %L0x7ffffff50cb8[36],%L0x7ffffff50cc0[36],%L0x7ffffff50cc8[36],
              %L0x7ffffff50cd0[36],%L0x7ffffff50cd8[36],%L0x7ffffff50ce0[36],
              %L0x7ffffff50ce8[36],%L0x7ffffff50cf0[36],%L0x7ffffff50cf8[36]]*Y0**18+
      poly z [%L0x7ffffff50ca0[38],%L0x7ffffff50ca8[38],%L0x7ffffff50cb0[38],
              %L0x7ffffff50cb8[38],%L0x7ffffff50cc0[38],%L0x7ffffff50cc8[38],
              %L0x7ffffff50cd0[38],%L0x7ffffff50cd8[38],%L0x7ffffff50ce0[38],
              %L0x7ffffff50ce8[38],%L0x7ffffff50cf0[38],%L0x7ffffff50cf8[38]]*Y0**19+
      poly z [%L0x7ffffff50ca0[40],%L0x7ffffff50ca8[40],%L0x7ffffff50cb0[40],
              %L0x7ffffff50cb8[40],%L0x7ffffff50cc0[40],%L0x7ffffff50cc8[40],
              %L0x7ffffff50cd0[40],%L0x7ffffff50cd8[40],%L0x7ffffff50ce0[40],
              %L0x7ffffff50ce8[40],%L0x7ffffff50cf0[40],%L0x7ffffff50cf8[40]]*Y0**20+
      poly z [%L0x7ffffff50ca0[42],%L0x7ffffff50ca8[42],%L0x7ffffff50cb0[42],
              %L0x7ffffff50cb8[42],%L0x7ffffff50cc0[42],%L0x7ffffff50cc8[42],
              %L0x7ffffff50cd0[42],%L0x7ffffff50cd8[42],%L0x7ffffff50ce0[42],
              %L0x7ffffff50ce8[42],%L0x7ffffff50cf0[42],%L0x7ffffff50cf8[42]]*Y0**21+
      poly z [%L0x7ffffff50ca0[44],%L0x7ffffff50ca8[44],%L0x7ffffff50cb0[44],
              %L0x7ffffff50cb8[44],%L0x7ffffff50cc0[44],%L0x7ffffff50cc8[44],
              %L0x7ffffff50cd0[44],%L0x7ffffff50cd8[44],%L0x7ffffff50ce0[44],
              %L0x7ffffff50ce8[44],%L0x7ffffff50cf0[44],%L0x7ffffff50cf8[44]]*Y0**22+
      poly z [%L0x7ffffff50ca0[46],%L0x7ffffff50ca8[46],%L0x7ffffff50cb0[46],
              %L0x7ffffff50cb8[46],%L0x7ffffff50cc0[46],%L0x7ffffff50cc8[46],
              %L0x7ffffff50cd0[46],%L0x7ffffff50cd8[46],%L0x7ffffff50ce0[46],
              %L0x7ffffff50ce8[46],%L0x7ffffff50cf0[46],%L0x7ffffff50cf8[46]]*Y0**23+
      poly z [%L0x7ffffff50ca0[48],%L0x7ffffff50ca8[48],%L0x7ffffff50cb0[48],
              %L0x7ffffff50cb8[48],%L0x7ffffff50cc0[48],%L0x7ffffff50cc8[48],
              %L0x7ffffff50cd0[48],%L0x7ffffff50cd8[48],%L0x7ffffff50ce0[48],
              %L0x7ffffff50ce8[48],%L0x7ffffff50cf0[48],%L0x7ffffff50cf8[48]]*Y0**24+
      poly z [%L0x7ffffff50ca0[50],%L0x7ffffff50ca8[50],%L0x7ffffff50cb0[50],
              %L0x7ffffff50cb8[50],%L0x7ffffff50cc0[50],%L0x7ffffff50cc8[50],
              %L0x7ffffff50cd0[50],%L0x7ffffff50cd8[50],%L0x7ffffff50ce0[50],
              %L0x7ffffff50ce8[50],%L0x7ffffff50cf0[50],%L0x7ffffff50cf8[50]]*Y0**25+
      poly z [%L0x7ffffff50ca0[52],%L0x7ffffff50ca8[52],%L0x7ffffff50cb0[52],
              %L0x7ffffff50cb8[52],%L0x7ffffff50cc0[52],%L0x7ffffff50cc8[52],
              %L0x7ffffff50cd0[52],%L0x7ffffff50cd8[52],%L0x7ffffff50ce0[52],
              %L0x7ffffff50ce8[52],%L0x7ffffff50cf0[52],%L0x7ffffff50cf8[52]]*Y0**26+
      poly z [%L0x7ffffff50ca0[54],%L0x7ffffff50ca8[54],%L0x7ffffff50cb0[54],
              %L0x7ffffff50cb8[54],%L0x7ffffff50cc0[54],%L0x7ffffff50cc8[54],
              %L0x7ffffff50cd0[54],%L0x7ffffff50cd8[54],%L0x7ffffff50ce0[54],
              %L0x7ffffff50ce8[54],%L0x7ffffff50cf0[54],%L0x7ffffff50cf8[54]]*Y0**27+
      poly z [%L0x7ffffff50ca0[56],%L0x7ffffff50ca8[56],%L0x7ffffff50cb0[56],
              %L0x7ffffff50cb8[56],%L0x7ffffff50cc0[56],%L0x7ffffff50cc8[56],
              %L0x7ffffff50cd0[56],%L0x7ffffff50cd8[56],%L0x7ffffff50ce0[56],
              %L0x7ffffff50ce8[56],%L0x7ffffff50cf0[56],%L0x7ffffff50cf8[56]]*Y0**28+
      poly z [%L0x7ffffff50ca0[58],%L0x7ffffff50ca8[58],%L0x7ffffff50cb0[58],
              %L0x7ffffff50cb8[58],%L0x7ffffff50cc0[58],%L0x7ffffff50cc8[58],
              %L0x7ffffff50cd0[58],%L0x7ffffff50cd8[58],%L0x7ffffff50ce0[58],
              %L0x7ffffff50ce8[58],%L0x7ffffff50cf0[58],%L0x7ffffff50cf8[58]]*Y0**29+
      poly z [%L0x7ffffff50ca0[60],%L0x7ffffff50ca8[60],%L0x7ffffff50cb0[60],
              %L0x7ffffff50cb8[60],%L0x7ffffff50cc0[60],%L0x7ffffff50cc8[60],
              %L0x7ffffff50cd0[60],%L0x7ffffff50cd8[60],%L0x7ffffff50ce0[60],
              %L0x7ffffff50ce8[60],%L0x7ffffff50cf0[60],%L0x7ffffff50cf8[60]]*Y0**30+
      poly z [%L0x7ffffff50ca0[62],%L0x7ffffff50ca8[62],%L0x7ffffff50cb0[62],
              %L0x7ffffff50cb8[62],%L0x7ffffff50cc0[62],%L0x7ffffff50cc8[62],
              %L0x7ffffff50cd0[62],%L0x7ffffff50cd8[62],%L0x7ffffff50ce0[62],
              %L0x7ffffff50ce8[62],%L0x7ffffff50cf0[62],%L0x7ffffff50cf8[62]]*Y0**31 /\
G01 = poly z [%L0x7ffffff50ca0[1],%L0x7ffffff50ca8[1],%L0x7ffffff50cb0[1],
              %L0x7ffffff50cb8[1],%L0x7ffffff50cc0[1],%L0x7ffffff50cc8[1],
              %L0x7ffffff50cd0[1],%L0x7ffffff50cd8[1],%L0x7ffffff50ce0[1],
              %L0x7ffffff50ce8[1],%L0x7ffffff50cf0[1],%L0x7ffffff50cf8[1]]*Y0**0+
      poly z [%L0x7ffffff50ca0[3],%L0x7ffffff50ca8[3],%L0x7ffffff50cb0[3],
              %L0x7ffffff50cb8[3],%L0x7ffffff50cc0[3],%L0x7ffffff50cc8[3],
              %L0x7ffffff50cd0[3],%L0x7ffffff50cd8[3],%L0x7ffffff50ce0[3],
              %L0x7ffffff50ce8[3],%L0x7ffffff50cf0[3],%L0x7ffffff50cf8[3]]*Y0**1+
      poly z [%L0x7ffffff50ca0[5],%L0x7ffffff50ca8[5],%L0x7ffffff50cb0[5],
              %L0x7ffffff50cb8[5],%L0x7ffffff50cc0[5],%L0x7ffffff50cc8[5],
              %L0x7ffffff50cd0[5],%L0x7ffffff50cd8[5],%L0x7ffffff50ce0[5],
              %L0x7ffffff50ce8[5],%L0x7ffffff50cf0[5],%L0x7ffffff50cf8[5]]*Y0**2+
      poly z [%L0x7ffffff50ca0[7],%L0x7ffffff50ca8[7],%L0x7ffffff50cb0[7],
              %L0x7ffffff50cb8[7],%L0x7ffffff50cc0[7],%L0x7ffffff50cc8[7],
              %L0x7ffffff50cd0[7],%L0x7ffffff50cd8[7],%L0x7ffffff50ce0[7],
              %L0x7ffffff50ce8[7],%L0x7ffffff50cf0[7],%L0x7ffffff50cf8[7]]*Y0**3+
      poly z [%L0x7ffffff50ca0[9],%L0x7ffffff50ca8[9],%L0x7ffffff50cb0[9],
              %L0x7ffffff50cb8[9],%L0x7ffffff50cc0[9],%L0x7ffffff50cc8[9],
              %L0x7ffffff50cd0[9],%L0x7ffffff50cd8[9],%L0x7ffffff50ce0[9],
              %L0x7ffffff50ce8[9],%L0x7ffffff50cf0[9],%L0x7ffffff50cf8[9]]*Y0**4+
      poly z [%L0x7ffffff50ca0[11],%L0x7ffffff50ca8[11],%L0x7ffffff50cb0[11],
              %L0x7ffffff50cb8[11],%L0x7ffffff50cc0[11],%L0x7ffffff50cc8[11],
              %L0x7ffffff50cd0[11],%L0x7ffffff50cd8[11],%L0x7ffffff50ce0[11],
              %L0x7ffffff50ce8[11],%L0x7ffffff50cf0[11],%L0x7ffffff50cf8[11]]*Y0**5+
      poly z [%L0x7ffffff50ca0[13],%L0x7ffffff50ca8[13],%L0x7ffffff50cb0[13],
              %L0x7ffffff50cb8[13],%L0x7ffffff50cc0[13],%L0x7ffffff50cc8[13],
              %L0x7ffffff50cd0[13],%L0x7ffffff50cd8[13],%L0x7ffffff50ce0[13],
              %L0x7ffffff50ce8[13],%L0x7ffffff50cf0[13],%L0x7ffffff50cf8[13]]*Y0**6+
      poly z [%L0x7ffffff50ca0[15],%L0x7ffffff50ca8[15],%L0x7ffffff50cb0[15],
              %L0x7ffffff50cb8[15],%L0x7ffffff50cc0[15],%L0x7ffffff50cc8[15],
              %L0x7ffffff50cd0[15],%L0x7ffffff50cd8[15],%L0x7ffffff50ce0[15],
              %L0x7ffffff50ce8[15],%L0x7ffffff50cf0[15],%L0x7ffffff50cf8[15]]*Y0**7+
      poly z [%L0x7ffffff50ca0[17],%L0x7ffffff50ca8[17],%L0x7ffffff50cb0[17],
              %L0x7ffffff50cb8[17],%L0x7ffffff50cc0[17],%L0x7ffffff50cc8[17],
              %L0x7ffffff50cd0[17],%L0x7ffffff50cd8[17],%L0x7ffffff50ce0[17],
              %L0x7ffffff50ce8[17],%L0x7ffffff50cf0[17],%L0x7ffffff50cf8[17]]*Y0**8+
      poly z [%L0x7ffffff50ca0[19],%L0x7ffffff50ca8[19],%L0x7ffffff50cb0[19],
              %L0x7ffffff50cb8[19],%L0x7ffffff50cc0[19],%L0x7ffffff50cc8[19],
              %L0x7ffffff50cd0[19],%L0x7ffffff50cd8[19],%L0x7ffffff50ce0[19],
              %L0x7ffffff50ce8[19],%L0x7ffffff50cf0[19],%L0x7ffffff50cf8[19]]*Y0**9+
      poly z [%L0x7ffffff50ca0[21],%L0x7ffffff50ca8[21],%L0x7ffffff50cb0[21],
              %L0x7ffffff50cb8[21],%L0x7ffffff50cc0[21],%L0x7ffffff50cc8[21],
              %L0x7ffffff50cd0[21],%L0x7ffffff50cd8[21],%L0x7ffffff50ce0[21],
              %L0x7ffffff50ce8[21],%L0x7ffffff50cf0[21],%L0x7ffffff50cf8[21]]*Y0**10+
      poly z [%L0x7ffffff50ca0[23],%L0x7ffffff50ca8[23],%L0x7ffffff50cb0[23],
              %L0x7ffffff50cb8[23],%L0x7ffffff50cc0[23],%L0x7ffffff50cc8[23],
              %L0x7ffffff50cd0[23],%L0x7ffffff50cd8[23],%L0x7ffffff50ce0[23],
              %L0x7ffffff50ce8[23],%L0x7ffffff50cf0[23],%L0x7ffffff50cf8[23]]*Y0**11+
      poly z [%L0x7ffffff50ca0[25],%L0x7ffffff50ca8[25],%L0x7ffffff50cb0[25],
              %L0x7ffffff50cb8[25],%L0x7ffffff50cc0[25],%L0x7ffffff50cc8[25],
              %L0x7ffffff50cd0[25],%L0x7ffffff50cd8[25],%L0x7ffffff50ce0[25],
              %L0x7ffffff50ce8[25],%L0x7ffffff50cf0[25],%L0x7ffffff50cf8[25]]*Y0**12+
      poly z [%L0x7ffffff50ca0[27],%L0x7ffffff50ca8[27],%L0x7ffffff50cb0[27],
              %L0x7ffffff50cb8[27],%L0x7ffffff50cc0[27],%L0x7ffffff50cc8[27],
              %L0x7ffffff50cd0[27],%L0x7ffffff50cd8[27],%L0x7ffffff50ce0[27],
              %L0x7ffffff50ce8[27],%L0x7ffffff50cf0[27],%L0x7ffffff50cf8[27]]*Y0**13+
      poly z [%L0x7ffffff50ca0[29],%L0x7ffffff50ca8[29],%L0x7ffffff50cb0[29],
              %L0x7ffffff50cb8[29],%L0x7ffffff50cc0[29],%L0x7ffffff50cc8[29],
              %L0x7ffffff50cd0[29],%L0x7ffffff50cd8[29],%L0x7ffffff50ce0[29],
              %L0x7ffffff50ce8[29],%L0x7ffffff50cf0[29],%L0x7ffffff50cf8[29]]*Y0**14+
      poly z [%L0x7ffffff50ca0[31],%L0x7ffffff50ca8[31],%L0x7ffffff50cb0[31],
              %L0x7ffffff50cb8[31],%L0x7ffffff50cc0[31],%L0x7ffffff50cc8[31],
              %L0x7ffffff50cd0[31],%L0x7ffffff50cd8[31],%L0x7ffffff50ce0[31],
              %L0x7ffffff50ce8[31],%L0x7ffffff50cf0[31],%L0x7ffffff50cf8[31]]*Y0**15+
      poly z [%L0x7ffffff50ca0[33],%L0x7ffffff50ca8[33],%L0x7ffffff50cb0[33],
              %L0x7ffffff50cb8[33],%L0x7ffffff50cc0[33],%L0x7ffffff50cc8[33],
              %L0x7ffffff50cd0[33],%L0x7ffffff50cd8[33],%L0x7ffffff50ce0[33],
              %L0x7ffffff50ce8[33],%L0x7ffffff50cf0[33],%L0x7ffffff50cf8[33]]*Y0**16+
      poly z [%L0x7ffffff50ca0[35],%L0x7ffffff50ca8[35],%L0x7ffffff50cb0[35],
              %L0x7ffffff50cb8[35],%L0x7ffffff50cc0[35],%L0x7ffffff50cc8[35],
              %L0x7ffffff50cd0[35],%L0x7ffffff50cd8[35],%L0x7ffffff50ce0[35],
              %L0x7ffffff50ce8[35],%L0x7ffffff50cf0[35],%L0x7ffffff50cf8[35]]*Y0**17+
      poly z [%L0x7ffffff50ca0[37],%L0x7ffffff50ca8[37],%L0x7ffffff50cb0[37],
              %L0x7ffffff50cb8[37],%L0x7ffffff50cc0[37],%L0x7ffffff50cc8[37],
              %L0x7ffffff50cd0[37],%L0x7ffffff50cd8[37],%L0x7ffffff50ce0[37],
              %L0x7ffffff50ce8[37],%L0x7ffffff50cf0[37],%L0x7ffffff50cf8[37]]*Y0**18+
      poly z [%L0x7ffffff50ca0[39],%L0x7ffffff50ca8[39],%L0x7ffffff50cb0[39],
              %L0x7ffffff50cb8[39],%L0x7ffffff50cc0[39],%L0x7ffffff50cc8[39],
              %L0x7ffffff50cd0[39],%L0x7ffffff50cd8[39],%L0x7ffffff50ce0[39],
              %L0x7ffffff50ce8[39],%L0x7ffffff50cf0[39],%L0x7ffffff50cf8[39]]*Y0**19+
      poly z [%L0x7ffffff50ca0[41],%L0x7ffffff50ca8[41],%L0x7ffffff50cb0[41],
              %L0x7ffffff50cb8[41],%L0x7ffffff50cc0[41],%L0x7ffffff50cc8[41],
              %L0x7ffffff50cd0[41],%L0x7ffffff50cd8[41],%L0x7ffffff50ce0[41],
              %L0x7ffffff50ce8[41],%L0x7ffffff50cf0[41],%L0x7ffffff50cf8[41]]*Y0**20+
      poly z [%L0x7ffffff50ca0[43],%L0x7ffffff50ca8[43],%L0x7ffffff50cb0[43],
              %L0x7ffffff50cb8[43],%L0x7ffffff50cc0[43],%L0x7ffffff50cc8[43],
              %L0x7ffffff50cd0[43],%L0x7ffffff50cd8[43],%L0x7ffffff50ce0[43],
              %L0x7ffffff50ce8[43],%L0x7ffffff50cf0[43],%L0x7ffffff50cf8[43]]*Y0**21+
      poly z [%L0x7ffffff50ca0[45],%L0x7ffffff50ca8[45],%L0x7ffffff50cb0[45],
              %L0x7ffffff50cb8[45],%L0x7ffffff50cc0[45],%L0x7ffffff50cc8[45],
              %L0x7ffffff50cd0[45],%L0x7ffffff50cd8[45],%L0x7ffffff50ce0[45],
              %L0x7ffffff50ce8[45],%L0x7ffffff50cf0[45],%L0x7ffffff50cf8[45]]*Y0**22+
      poly z [%L0x7ffffff50ca0[47],%L0x7ffffff50ca8[47],%L0x7ffffff50cb0[47],
              %L0x7ffffff50cb8[47],%L0x7ffffff50cc0[47],%L0x7ffffff50cc8[47],
              %L0x7ffffff50cd0[47],%L0x7ffffff50cd8[47],%L0x7ffffff50ce0[47],
              %L0x7ffffff50ce8[47],%L0x7ffffff50cf0[47],%L0x7ffffff50cf8[47]]*Y0**23+
      poly z [%L0x7ffffff50ca0[49],%L0x7ffffff50ca8[49],%L0x7ffffff50cb0[49],
              %L0x7ffffff50cb8[49],%L0x7ffffff50cc0[49],%L0x7ffffff50cc8[49],
              %L0x7ffffff50cd0[49],%L0x7ffffff50cd8[49],%L0x7ffffff50ce0[49],
              %L0x7ffffff50ce8[49],%L0x7ffffff50cf0[49],%L0x7ffffff50cf8[49]]*Y0**24+
      poly z [%L0x7ffffff50ca0[51],%L0x7ffffff50ca8[51],%L0x7ffffff50cb0[51],
              %L0x7ffffff50cb8[51],%L0x7ffffff50cc0[51],%L0x7ffffff50cc8[51],
              %L0x7ffffff50cd0[51],%L0x7ffffff50cd8[51],%L0x7ffffff50ce0[51],
              %L0x7ffffff50ce8[51],%L0x7ffffff50cf0[51],%L0x7ffffff50cf8[51]]*Y0**25+
      poly z [%L0x7ffffff50ca0[53],%L0x7ffffff50ca8[53],%L0x7ffffff50cb0[53],
              %L0x7ffffff50cb8[53],%L0x7ffffff50cc0[53],%L0x7ffffff50cc8[53],
              %L0x7ffffff50cd0[53],%L0x7ffffff50cd8[53],%L0x7ffffff50ce0[53],
              %L0x7ffffff50ce8[53],%L0x7ffffff50cf0[53],%L0x7ffffff50cf8[53]]*Y0**26+
      poly z [%L0x7ffffff50ca0[55],%L0x7ffffff50ca8[55],%L0x7ffffff50cb0[55],
              %L0x7ffffff50cb8[55],%L0x7ffffff50cc0[55],%L0x7ffffff50cc8[55],
              %L0x7ffffff50cd0[55],%L0x7ffffff50cd8[55],%L0x7ffffff50ce0[55],
              %L0x7ffffff50ce8[55],%L0x7ffffff50cf0[55],%L0x7ffffff50cf8[55]]*Y0**27+
      poly z [%L0x7ffffff50ca0[57],%L0x7ffffff50ca8[57],%L0x7ffffff50cb0[57],
              %L0x7ffffff50cb8[57],%L0x7ffffff50cc0[57],%L0x7ffffff50cc8[57],
              %L0x7ffffff50cd0[57],%L0x7ffffff50cd8[57],%L0x7ffffff50ce0[57],
              %L0x7ffffff50ce8[57],%L0x7ffffff50cf0[57],%L0x7ffffff50cf8[57]]*Y0**28+
      poly z [%L0x7ffffff50ca0[59],%L0x7ffffff50ca8[59],%L0x7ffffff50cb0[59],
              %L0x7ffffff50cb8[59],%L0x7ffffff50cc0[59],%L0x7ffffff50cc8[59],
              %L0x7ffffff50cd0[59],%L0x7ffffff50cd8[59],%L0x7ffffff50ce0[59],
              %L0x7ffffff50ce8[59],%L0x7ffffff50cf0[59],%L0x7ffffff50cf8[59]]*Y0**29+
      poly z [%L0x7ffffff50ca0[61],%L0x7ffffff50ca8[61],%L0x7ffffff50cb0[61],
              %L0x7ffffff50cb8[61],%L0x7ffffff50cc0[61],%L0x7ffffff50cc8[61],
              %L0x7ffffff50cd0[61],%L0x7ffffff50cd8[61],%L0x7ffffff50ce0[61],
              %L0x7ffffff50ce8[61],%L0x7ffffff50cf0[61],%L0x7ffffff50cf8[61]]*Y0**30+
      poly z [%L0x7ffffff50ca0[63],%L0x7ffffff50ca8[63],%L0x7ffffff50cb0[63],
              %L0x7ffffff50cb8[63],%L0x7ffffff50cc0[63],%L0x7ffffff50cc8[63],
              %L0x7ffffff50cd0[63],%L0x7ffffff50cd8[63],%L0x7ffffff50ce0[63],
              %L0x7ffffff50ce8[63],%L0x7ffffff50cf0[63],%L0x7ffffff50cf8[63]]*Y0**31
 && true;


(* mov    0x10(%rsp),%rcx                          #! EA = L0x7ffffff50990; Value = 0x0000000000000000; PC = 0x555555582d7a *)
mov %rcx %L0x7ffffff50990;
(* add    $0x1,%rcx                                #! PC = 0x555555582d7f *)
(* add $0x1, rcx *)
nop;
(* cmp    $0x5,%rcx                                #! PC = 0x555555582d83 *)
(* cmp 0x5, rcx *)
nop;
(* #jne    0x555555582c60 <radix_conversions+352>  #! PC = 0x555555582d87 *)
#jne    0x555555582c60 <radix_conversions+352>  #! 0x555555582d87 = 0x555555582d87;
(* mov    %rcx,0x10(%rsp)                          #! EA = L0x7ffffff50990; PC = 0x555555582c60 *)
mov %L0x7ffffff50990 %rcx;
(* mov    0x18(%rsp),%rdx                          #! EA = L0x7ffffff50998; Value = 0x00007ffffff50ca0; PC = 0x555555582c65 *)
mov %rdx %L0x7ffffff50998;
(* mov    %ecx,%esi                                #! PC = 0x555555582c6a *)
(* mov ecx, esi *)
nop;
(* movabs $0xf000f000f000f00,%r8                   #! PC = 0x555555582c6c *)
cast %r8@bit[64] [0xf000f000f000f00@uint64];
(* movabs $0xf000f000f000f0,%rdi                   #! PC = 0x555555582c76 *)
cast %rdi@bit[64] [0xf000f000f000f0@uint64];
(* movabs $0x3030303030303030,%r10                 #! PC = 0x555555582c80 *)
cast %r10@bit[64] [0x3030303030303030@uint64];
(* movabs $0xc0c0c0c0c0c0c0c,%r9                   #! PC = 0x555555582c8a *)
cast %r9@bit[64] [0xc0c0c0c0c0c0c0c@uint64];
(* movabs $0x4444444444444444,%r15                 #! PC = 0x555555582c94 *)
cast %r15@bit[64] [0x4444444444444444@uint64];
(* movabs $0x2222222222222222,%r11                 #! PC = 0x555555582c9e *)
cast %r11@bit[64] [0x2222222222222222@uint64];
(* nopl   0x0(%rax,%rax,1)                         #! EA = L0xfc9983204587a16e; PC = 0x555555582ca8 *)
(* nopl *)
nop;
(* mov    (%rdx),%rax                              #! EA = L0x7ffffff50ca0; Value = 0x6c0563b1441febd4; PC = 0x555555582cb0 *)
mov %rax %L0x7ffffff50ca0;
(* mov    %rax,%rcx                                #! PC = 0x555555582cb3 *)
mov %rcx %rax;
(* shr    $0x10,%rcx                               #! PC = 0x555555582cb6 *)
mov %rcx
    [%rcx[16],%rcx[17],%rcx[18],%rcx[19],%rcx[20],%rcx[21],%rcx[22],%rcx[23],
     %rcx[24],%rcx[25],%rcx[26],%rcx[27],%rcx[28],%rcx[29],%rcx[30],%rcx[31],
     %rcx[32],%rcx[33],%rcx[34],%rcx[35],%rcx[36],%rcx[37],%rcx[38],%rcx[39],
     %rcx[40],%rcx[41],%rcx[42],%rcx[43],%rcx[44],%rcx[45],%rcx[46],%rcx[47],
     %rcx[48],%rcx[49],%rcx[50],%rcx[51],%rcx[52],%rcx[53],%rcx[54],%rcx[55],
     %rcx[56],%rcx[57],%rcx[58],%rcx[59],%rcx[60],%rcx[61],%rcx[62],%rcx[63],
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit];
(* and    %rbx,%rcx                                #! PC = 0x555555582cba *)
mov %rcx
    [0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     %rcx[32],%rcx[33],%rcx[34],%rcx[35],%rcx[36],%rcx[37],%rcx[38],%rcx[39],
     %rcx[40],%rcx[41],%rcx[42],%rcx[43],%rcx[44],%rcx[45],%rcx[46],%rcx[47],
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit];
(* xor    %rax,%rcx                                #! PC = 0x555555582cbd *)
adds %dc %rcx %rax %rcx;
(* mov    %rcx,%rax                                #! PC = 0x555555582cc0 *)
mov %rax %rcx;
(* shr    $0x10,%rax                               #! PC = 0x555555582cc3 *)
mov %rax
    [%rax[16],%rax[17],%rax[18],%rax[19],%rax[20],%rax[21],%rax[22],%rax[23],
     %rax[24],%rax[25],%rax[26],%rax[27],%rax[28],%rax[29],%rax[30],%rax[31],
     %rax[32],%rax[33],%rax[34],%rax[35],%rax[36],%rax[37],%rax[38],%rax[39],
     %rax[40],%rax[41],%rax[42],%rax[43],%rax[44],%rax[45],%rax[46],%rax[47],
     %rax[48],%rax[49],%rax[50],%rax[51],%rax[52],%rax[53],%rax[54],%rax[55],
     %rax[56],%rax[57],%rax[58],%rax[59],%rax[60],%rax[61],%rax[62],%rax[63],
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit];
(* and    $0xffff0000,%eax                         #! PC = 0x555555582cc7 *)
mov %rax
    [0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     %rax[16],%rax[17],%rax[18],%rax[19],%rax[20],%rax[21],%rax[22],%rax[23],
     %rax[24],%rax[25],%rax[26],%rax[27],%rax[28],%rax[29],%rax[30],%rax[31],
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit];
(* xor    %rcx,%rax                                #! PC = 0x555555582ccc *)
adds %dc %rax %rcx %rax;
(* cmp    $0x4,%esi                                #! PC = 0x555555582ccf *)
(* cmp 0x4, esi *)
nop;
(* #je     0x555555582d48 <radix_conversions+584>  #! PC = 0x555555582cd2 *)
#je     0x555555582d48 <radix_conversions+584>  #! 0x555555582cd2 = 0x555555582cd2;
(* mov    %rax,%rcx                                #! PC = 0x555555582cd4 *)
mov %rcx %rax;
(* shr    $0x8,%rcx                                #! PC = 0x555555582cd7 *)
mov %rcx
    [%rcx[8],%rcx[9],%rcx[10],%rcx[11],%rcx[12],%rcx[13],%rcx[14],%rcx[15],
     %rcx[16],%rcx[17],%rcx[18],%rcx[19],%rcx[20],%rcx[21],%rcx[22],%rcx[23],
     %rcx[24],%rcx[25],%rcx[26],%rcx[27],%rcx[28],%rcx[29],%rcx[30],%rcx[31],
     %rcx[32],%rcx[33],%rcx[34],%rcx[35],%rcx[36],%rcx[37],%rcx[38],%rcx[39],
     %rcx[40],%rcx[41],%rcx[42],%rcx[43],%rcx[44],%rcx[45],%rcx[46],%rcx[47],
     %rcx[48],%rcx[49],%rcx[50],%rcx[51],%rcx[52],%rcx[53],%rcx[54],%rcx[55],
     %rcx[56],%rcx[57],%rcx[58],%rcx[59],%rcx[60],%rcx[61],%rcx[62],%rcx[63],
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit];
(* and    %r14,%rcx                                #! PC = 0x555555582cdb *)
mov %rcx
    [0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     %rcx[16],%rcx[17],%rcx[18],%rcx[19],%rcx[20],%rcx[21],%rcx[22],%rcx[23],
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     %rcx[48],%rcx[49],%rcx[50],%rcx[51],%rcx[52],%rcx[53],%rcx[54],%rcx[55],
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit];
(* xor    %rax,%rcx                                #! PC = 0x555555582cde *)
adds %dc %rcx %rax %rcx;
(* mov    %rcx,%rax                                #! PC = 0x555555582ce1 *)
mov %rax %rcx;
(* shr    $0x8,%rax                                #! PC = 0x555555582ce4 *)
mov %rax
    [%rax[8],%rax[9],%rax[10],%rax[11],%rax[12],%rax[13],%rax[14],%rax[15],
     %rax[16],%rax[17],%rax[18],%rax[19],%rax[20],%rax[21],%rax[22],%rax[23],
     %rax[24],%rax[25],%rax[26],%rax[27],%rax[28],%rax[29],%rax[30],%rax[31],
     %rax[32],%rax[33],%rax[34],%rax[35],%rax[36],%rax[37],%rax[38],%rax[39],
     %rax[40],%rax[41],%rax[42],%rax[43],%rax[44],%rax[45],%rax[46],%rax[47],
     %rax[48],%rax[49],%rax[50],%rax[51],%rax[52],%rax[53],%rax[54],%rax[55],
     %rax[56],%rax[57],%rax[58],%rax[59],%rax[60],%rax[61],%rax[62],%rax[63],
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit];
(* and    %r13,%rax                                #! PC = 0x555555582ce8 *)
mov %rax
    [0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     %rax[8],%rax[9],%rax[10],%rax[11],%rax[12],%rax[13],%rax[14],%rax[15],
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     %rax[40],%rax[41],%rax[42],%rax[43],%rax[44],%rax[45],%rax[46],%rax[47],
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit];
(* xor    %rcx,%rax                                #! PC = 0x555555582ceb *)
adds %dc %rax %rcx %rax;
(* cmp    $0x3,%esi                                #! PC = 0x555555582cee *)
(* cmp 0x3, esi *)
nop;
(* #je     0x555555582d48 <radix_conversions+584>  #! PC = 0x555555582cf1 *)
#je     0x555555582d48 <radix_conversions+584>  #! 0x555555582cf1 = 0x555555582cf1;
(* mov    %rax,%rcx                                #! PC = 0x555555582cf3 *)
mov %rcx %rax;
(* shr    $0x4,%rcx                                #! PC = 0x555555582cf6 *)
mov %rcx
    [%rcx[4],%rcx[5],%rcx[6],%rcx[7],
     %rcx[8],%rcx[9],%rcx[10],%rcx[11],%rcx[12],%rcx[13],%rcx[14],%rcx[15],
     %rcx[16],%rcx[17],%rcx[18],%rcx[19],%rcx[20],%rcx[21],%rcx[22],%rcx[23],
     %rcx[24],%rcx[25],%rcx[26],%rcx[27],%rcx[28],%rcx[29],%rcx[30],%rcx[31],
     %rcx[32],%rcx[33],%rcx[34],%rcx[35],%rcx[36],%rcx[37],%rcx[38],%rcx[39],
     %rcx[40],%rcx[41],%rcx[42],%rcx[43],%rcx[44],%rcx[45],%rcx[46],%rcx[47],
     %rcx[48],%rcx[49],%rcx[50],%rcx[51],%rcx[52],%rcx[53],%rcx[54],%rcx[55],
     %rcx[56],%rcx[57],%rcx[58],%rcx[59],%rcx[60],%rcx[61],%rcx[62],%rcx[63],
     0@bit,0@bit,0@bit,0@bit];
(* and    %r8,%rcx                                 #! PC = 0x555555582cfa *)
mov %rcx
    [0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     %rcx[8],%rcx[9],%rcx[10],%rcx[11],0@bit,0@bit,0@bit,0@bit,
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     %rcx[24],%rcx[25],%rcx[26],%rcx[27],0@bit,0@bit,0@bit,0@bit,
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     %rcx[40],%rcx[41],%rcx[42],%rcx[43],0@bit,0@bit,0@bit,0@bit,
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     %rcx[56],%rcx[57],%rcx[58],%rcx[59],0@bit,0@bit,0@bit,0@bit];
(* xor    %rax,%rcx                                #! PC = 0x555555582cfd *)
adds %dc %rcx %rax %rcx;
(* mov    %rcx,%rax                                #! PC = 0x555555582d00 *)
mov %rax %rcx;
(* shr    $0x4,%rax                                #! PC = 0x555555582d03 *)
mov %rax
    [%rax[4],%rax[5],%rax[6],%rax[7],
     %rax[8],%rax[9],%rax[10],%rax[11],%rax[12],%rax[13],%rax[14],%rax[15],
     %rax[16],%rax[17],%rax[18],%rax[19],%rax[20],%rax[21],%rax[22],%rax[23],
     %rax[24],%rax[25],%rax[26],%rax[27],%rax[28],%rax[29],%rax[30],%rax[31],
     %rax[32],%rax[33],%rax[34],%rax[35],%rax[36],%rax[37],%rax[38],%rax[39],
     %rax[40],%rax[41],%rax[42],%rax[43],%rax[44],%rax[45],%rax[46],%rax[47],
     %rax[48],%rax[49],%rax[50],%rax[51],%rax[52],%rax[53],%rax[54],%rax[55],
     %rax[56],%rax[57],%rax[58],%rax[59],%rax[60],%rax[61],%rax[62],%rax[63],
     0@bit,0@bit,0@bit,0@bit];
(* and    %rdi,%rax                                #! PC = 0x555555582d07 *)
mov %rax
    [0@bit,0@bit,0@bit,0@bit,%rax[4],%rax[5],%rax[6],%rax[7],
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     0@bit,0@bit,0@bit,0@bit,%rax[20],%rax[21],%rax[22],%rax[23],
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     0@bit,0@bit,0@bit,0@bit,%rax[36],%rax[37],%rax[38],%rax[39],
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     0@bit,0@bit,0@bit,0@bit,%rax[52],%rax[53],%rax[54],%rax[55],
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit];
(* xor    %rcx,%rax                                #! PC = 0x555555582d0a *)
adds %dc %rax %rcx %rax;
(* cmp    $0x2,%esi                                #! PC = 0x555555582d0d *)
(* cmp 0x2, esi *)
nop;
(* #je     0x555555582d48 <radix_conversions+584>  #! PC = 0x555555582d10 *)
#je     0x555555582d48 <radix_conversions+584>  #! 0x555555582d10 = 0x555555582d10;
(* mov    %rax,%rcx                                #! PC = 0x555555582d12 *)
mov %rcx %rax;
(* shr    $0x2,%rcx                                #! PC = 0x555555582d15 *)
mov %rcx
    [%rcx[2],%rcx[3],%rcx[4],%rcx[5],%rcx[6],%rcx[7],
     %rcx[8],%rcx[9],%rcx[10],%rcx[11],%rcx[12],%rcx[13],%rcx[14],%rcx[15],
     %rcx[16],%rcx[17],%rcx[18],%rcx[19],%rcx[20],%rcx[21],%rcx[22],%rcx[23],
     %rcx[24],%rcx[25],%rcx[26],%rcx[27],%rcx[28],%rcx[29],%rcx[30],%rcx[31],
     %rcx[32],%rcx[33],%rcx[34],%rcx[35],%rcx[36],%rcx[37],%rcx[38],%rcx[39],
     %rcx[40],%rcx[41],%rcx[42],%rcx[43],%rcx[44],%rcx[45],%rcx[46],%rcx[47],
     %rcx[48],%rcx[49],%rcx[50],%rcx[51],%rcx[52],%rcx[53],%rcx[54],%rcx[55],
     %rcx[56],%rcx[57],%rcx[58],%rcx[59],%rcx[60],%rcx[61],%rcx[62],%rcx[63],
     0@bit,0@bit];
(* and    %r10,%rcx                                #! PC = 0x555555582d19 *)
mov %rcx
    [0@bit,0@bit,0@bit,0@bit,%rcx[4],%rcx[5],0@bit,0@bit,
     0@bit,0@bit,0@bit,0@bit,%rcx[12],%rcx[13],0@bit,0@bit,
     0@bit,0@bit,0@bit,0@bit,%rcx[20],%rcx[21],0@bit,0@bit,
     0@bit,0@bit,0@bit,0@bit,%rcx[28],%rcx[29],0@bit,0@bit,
     0@bit,0@bit,0@bit,0@bit,%rcx[36],%rcx[37],0@bit,0@bit,
     0@bit,0@bit,0@bit,0@bit,%rcx[44],%rcx[45],0@bit,0@bit,
     0@bit,0@bit,0@bit,0@bit,%rcx[52],%rcx[53],0@bit,0@bit,
     0@bit,0@bit,0@bit,0@bit,%rcx[60],%rcx[61],0@bit,0@bit];
(* xor    %rax,%rcx                                #! PC = 0x555555582d1c *)
adds %dc %rcx %rax %rcx;
(* mov    %rcx,%rax                                #! PC = 0x555555582d1f *)
mov %rax %rcx;
(* shr    $0x2,%rax                                #! PC = 0x555555582d22 *)
mov %rax
    [%rax[2],%rax[3],%rax[4],%rax[5],%rax[6],%rax[7],
     %rax[8],%rax[9],%rax[10],%rax[11],%rax[12],%rax[13],%rax[14],%rax[15],
     %rax[16],%rax[17],%rax[18],%rax[19],%rax[20],%rax[21],%rax[22],%rax[23],
     %rax[24],%rax[25],%rax[26],%rax[27],%rax[28],%rax[29],%rax[30],%rax[31],
     %rax[32],%rax[33],%rax[34],%rax[35],%rax[36],%rax[37],%rax[38],%rax[39],
     %rax[40],%rax[41],%rax[42],%rax[43],%rax[44],%rax[45],%rax[46],%rax[47],
     %rax[48],%rax[49],%rax[50],%rax[51],%rax[52],%rax[53],%rax[54],%rax[55],
     %rax[56],%rax[57],%rax[58],%rax[59],%rax[60],%rax[61],%rax[62],%rax[63],
     0@bit,0@bit];
(* and    %r9,%rax                                 #! PC = 0x555555582d26 *)
mov %rax
    [0@bit,0@bit,%rax[2],%rax[3],0@bit,0@bit,0@bit,0@bit,
     0@bit,0@bit,%rax[10],%rax[11],0@bit,0@bit,0@bit,0@bit,
     0@bit,0@bit,%rax[18],%rax[19],0@bit,0@bit,0@bit,0@bit,
     0@bit,0@bit,%rax[26],%rax[27],0@bit,0@bit,0@bit,0@bit,
     0@bit,0@bit,%rax[34],%rax[35],0@bit,0@bit,0@bit,0@bit,
     0@bit,0@bit,%rax[42],%rax[43],0@bit,0@bit,0@bit,0@bit,
     0@bit,0@bit,%rax[50],%rax[51],0@bit,0@bit,0@bit,0@bit,
     0@bit,0@bit,%rax[58],%rax[59],0@bit,0@bit,0@bit,0@bit];
(* xor    %rcx,%rax                                #! PC = 0x555555582d29 *)
adds %dc %rax %rcx %rax;
(* test   %esi,%esi                                #! PC = 0x555555582d2c *)
(* test esi, esi *)
nop;
(* #jne    0x555555582d48 <radix_conversions+584>  #! PC = 0x555555582d2e *)
#jne    0x555555582d48 <radix_conversions+584>  #! 0x555555582d2e = 0x555555582d2e;
(* mov    %rax,(%rdx)                              #! EA = L0x7ffffff50ca0; PC = 0x555555582d48 *)
mov %L0x7ffffff50ca0 %rax;
(* add    $0x8,%rdx                                #! PC = 0x555555582d4b *)
(* add $0x8, rdx *)
nop;
(* cmp    %rdx,%r12                                #! PC = 0x555555582d4f *)
(* cmp rdx, r12 *)
nop;
(* #jne    0x555555582cb0 <radix_conversions+432>  #! PC = 0x555555582d52 *)
#jne    0x555555582cb0 <radix_conversions+432>  #! 0x555555582d52 = 0x555555582d52;
(* mov    (%rdx),%rax                              #! EA = L0x7ffffff50ca8; Value = 0x0dcb87e54b980438; PC = 0x555555582cb0 *)
mov %rax %L0x7ffffff50ca8;
(* mov    %rax,%rcx                                #! PC = 0x555555582cb3 *)
mov %rcx %rax;
(* shr    $0x10,%rcx                               #! PC = 0x555555582cb6 *)
mov %rcx
    [%rcx[16],%rcx[17],%rcx[18],%rcx[19],%rcx[20],%rcx[21],%rcx[22],%rcx[23],
     %rcx[24],%rcx[25],%rcx[26],%rcx[27],%rcx[28],%rcx[29],%rcx[30],%rcx[31],
     %rcx[32],%rcx[33],%rcx[34],%rcx[35],%rcx[36],%rcx[37],%rcx[38],%rcx[39],
     %rcx[40],%rcx[41],%rcx[42],%rcx[43],%rcx[44],%rcx[45],%rcx[46],%rcx[47],
     %rcx[48],%rcx[49],%rcx[50],%rcx[51],%rcx[52],%rcx[53],%rcx[54],%rcx[55],
     %rcx[56],%rcx[57],%rcx[58],%rcx[59],%rcx[60],%rcx[61],%rcx[62],%rcx[63],
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit];
(* and    %rbx,%rcx                                #! PC = 0x555555582cba *)
mov %rcx
    [0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     %rcx[32],%rcx[33],%rcx[34],%rcx[35],%rcx[36],%rcx[37],%rcx[38],%rcx[39],
     %rcx[40],%rcx[41],%rcx[42],%rcx[43],%rcx[44],%rcx[45],%rcx[46],%rcx[47],
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit];
(* xor    %rax,%rcx                                #! PC = 0x555555582cbd *)
adds %dc %rcx %rax %rcx;
(* mov    %rcx,%rax                                #! PC = 0x555555582cc0 *)
mov %rax %rcx;
(* shr    $0x10,%rax                               #! PC = 0x555555582cc3 *)
mov %rax
    [%rax[16],%rax[17],%rax[18],%rax[19],%rax[20],%rax[21],%rax[22],%rax[23],
     %rax[24],%rax[25],%rax[26],%rax[27],%rax[28],%rax[29],%rax[30],%rax[31],
     %rax[32],%rax[33],%rax[34],%rax[35],%rax[36],%rax[37],%rax[38],%rax[39],
     %rax[40],%rax[41],%rax[42],%rax[43],%rax[44],%rax[45],%rax[46],%rax[47],
     %rax[48],%rax[49],%rax[50],%rax[51],%rax[52],%rax[53],%rax[54],%rax[55],
     %rax[56],%rax[57],%rax[58],%rax[59],%rax[60],%rax[61],%rax[62],%rax[63],
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit];
(* and    $0xffff0000,%eax                         #! PC = 0x555555582cc7 *)
mov %rax
    [0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     %rax[16],%rax[17],%rax[18],%rax[19],%rax[20],%rax[21],%rax[22],%rax[23],
     %rax[24],%rax[25],%rax[26],%rax[27],%rax[28],%rax[29],%rax[30],%rax[31],
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit];
(* xor    %rcx,%rax                                #! PC = 0x555555582ccc *)
adds %dc %rax %rcx %rax;
(* cmp    $0x4,%esi                                #! PC = 0x555555582ccf *)
(* cmp 0x4, esi *)
nop;
(* #je     0x555555582d48 <radix_conversions+584>  #! PC = 0x555555582cd2 *)
#je     0x555555582d48 <radix_conversions+584>  #! 0x555555582cd2 = 0x555555582cd2;
(* mov    %rax,%rcx                                #! PC = 0x555555582cd4 *)
mov %rcx %rax;
(* shr    $0x8,%rcx                                #! PC = 0x555555582cd7 *)
mov %rcx
    [%rcx[8],%rcx[9],%rcx[10],%rcx[11],%rcx[12],%rcx[13],%rcx[14],%rcx[15],
     %rcx[16],%rcx[17],%rcx[18],%rcx[19],%rcx[20],%rcx[21],%rcx[22],%rcx[23],
     %rcx[24],%rcx[25],%rcx[26],%rcx[27],%rcx[28],%rcx[29],%rcx[30],%rcx[31],
     %rcx[32],%rcx[33],%rcx[34],%rcx[35],%rcx[36],%rcx[37],%rcx[38],%rcx[39],
     %rcx[40],%rcx[41],%rcx[42],%rcx[43],%rcx[44],%rcx[45],%rcx[46],%rcx[47],
     %rcx[48],%rcx[49],%rcx[50],%rcx[51],%rcx[52],%rcx[53],%rcx[54],%rcx[55],
     %rcx[56],%rcx[57],%rcx[58],%rcx[59],%rcx[60],%rcx[61],%rcx[62],%rcx[63],
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit];
(* and    %r14,%rcx                                #! PC = 0x555555582cdb *)
mov %rcx
    [0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     %rcx[16],%rcx[17],%rcx[18],%rcx[19],%rcx[20],%rcx[21],%rcx[22],%rcx[23],
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     %rcx[48],%rcx[49],%rcx[50],%rcx[51],%rcx[52],%rcx[53],%rcx[54],%rcx[55],
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit];
(* xor    %rax,%rcx                                #! PC = 0x555555582cde *)
adds %dc %rcx %rax %rcx;
(* mov    %rcx,%rax                                #! PC = 0x555555582ce1 *)
mov %rax %rcx;
(* shr    $0x8,%rax                                #! PC = 0x555555582ce4 *)
mov %rax
    [%rax[8],%rax[9],%rax[10],%rax[11],%rax[12],%rax[13],%rax[14],%rax[15],
     %rax[16],%rax[17],%rax[18],%rax[19],%rax[20],%rax[21],%rax[22],%rax[23],
     %rax[24],%rax[25],%rax[26],%rax[27],%rax[28],%rax[29],%rax[30],%rax[31],
     %rax[32],%rax[33],%rax[34],%rax[35],%rax[36],%rax[37],%rax[38],%rax[39],
     %rax[40],%rax[41],%rax[42],%rax[43],%rax[44],%rax[45],%rax[46],%rax[47],
     %rax[48],%rax[49],%rax[50],%rax[51],%rax[52],%rax[53],%rax[54],%rax[55],
     %rax[56],%rax[57],%rax[58],%rax[59],%rax[60],%rax[61],%rax[62],%rax[63],
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit];
(* and    %r13,%rax                                #! PC = 0x555555582ce8 *)
mov %rax
    [0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     %rax[8],%rax[9],%rax[10],%rax[11],%rax[12],%rax[13],%rax[14],%rax[15],
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     %rax[40],%rax[41],%rax[42],%rax[43],%rax[44],%rax[45],%rax[46],%rax[47],
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit];
(* xor    %rcx,%rax                                #! PC = 0x555555582ceb *)
adds %dc %rax %rcx %rax;
(* cmp    $0x3,%esi                                #! PC = 0x555555582cee *)
(* cmp 0x3, esi *)
nop;
(* #je     0x555555582d48 <radix_conversions+584>  #! PC = 0x555555582cf1 *)
#je     0x555555582d48 <radix_conversions+584>  #! 0x555555582cf1 = 0x555555582cf1;
(* mov    %rax,%rcx                                #! PC = 0x555555582cf3 *)
mov %rcx %rax;
(* shr    $0x4,%rcx                                #! PC = 0x555555582cf6 *)
mov %rcx
    [%rcx[4],%rcx[5],%rcx[6],%rcx[7],
     %rcx[8],%rcx[9],%rcx[10],%rcx[11],%rcx[12],%rcx[13],%rcx[14],%rcx[15],
     %rcx[16],%rcx[17],%rcx[18],%rcx[19],%rcx[20],%rcx[21],%rcx[22],%rcx[23],
     %rcx[24],%rcx[25],%rcx[26],%rcx[27],%rcx[28],%rcx[29],%rcx[30],%rcx[31],
     %rcx[32],%rcx[33],%rcx[34],%rcx[35],%rcx[36],%rcx[37],%rcx[38],%rcx[39],
     %rcx[40],%rcx[41],%rcx[42],%rcx[43],%rcx[44],%rcx[45],%rcx[46],%rcx[47],
     %rcx[48],%rcx[49],%rcx[50],%rcx[51],%rcx[52],%rcx[53],%rcx[54],%rcx[55],
     %rcx[56],%rcx[57],%rcx[58],%rcx[59],%rcx[60],%rcx[61],%rcx[62],%rcx[63],
     0@bit,0@bit,0@bit,0@bit];
(* and    %r8,%rcx                                 #! PC = 0x555555582cfa *)
mov %rcx
    [0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     %rcx[8],%rcx[9],%rcx[10],%rcx[11],0@bit,0@bit,0@bit,0@bit,
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     %rcx[24],%rcx[25],%rcx[26],%rcx[27],0@bit,0@bit,0@bit,0@bit,
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     %rcx[40],%rcx[41],%rcx[42],%rcx[43],0@bit,0@bit,0@bit,0@bit,
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     %rcx[56],%rcx[57],%rcx[58],%rcx[59],0@bit,0@bit,0@bit,0@bit];
(* xor    %rax,%rcx                                #! PC = 0x555555582cfd *)
adds %dc %rcx %rax %rcx;
(* mov    %rcx,%rax                                #! PC = 0x555555582d00 *)
mov %rax %rcx;
(* shr    $0x4,%rax                                #! PC = 0x555555582d03 *)
mov %rax
    [%rax[4],%rax[5],%rax[6],%rax[7],
     %rax[8],%rax[9],%rax[10],%rax[11],%rax[12],%rax[13],%rax[14],%rax[15],
     %rax[16],%rax[17],%rax[18],%rax[19],%rax[20],%rax[21],%rax[22],%rax[23],
     %rax[24],%rax[25],%rax[26],%rax[27],%rax[28],%rax[29],%rax[30],%rax[31],
     %rax[32],%rax[33],%rax[34],%rax[35],%rax[36],%rax[37],%rax[38],%rax[39],
     %rax[40],%rax[41],%rax[42],%rax[43],%rax[44],%rax[45],%rax[46],%rax[47],
     %rax[48],%rax[49],%rax[50],%rax[51],%rax[52],%rax[53],%rax[54],%rax[55],
     %rax[56],%rax[57],%rax[58],%rax[59],%rax[60],%rax[61],%rax[62],%rax[63],
     0@bit,0@bit,0@bit,0@bit];
(* and    %rdi,%rax                                #! PC = 0x555555582d07 *)
mov %rax
    [0@bit,0@bit,0@bit,0@bit,%rax[4],%rax[5],%rax[6],%rax[7],
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     0@bit,0@bit,0@bit,0@bit,%rax[20],%rax[21],%rax[22],%rax[23],
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     0@bit,0@bit,0@bit,0@bit,%rax[36],%rax[37],%rax[38],%rax[39],
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     0@bit,0@bit,0@bit,0@bit,%rax[52],%rax[53],%rax[54],%rax[55],
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit];
(* xor    %rcx,%rax                                #! PC = 0x555555582d0a *)
adds %dc %rax %rcx %rax;
(* cmp    $0x2,%esi                                #! PC = 0x555555582d0d *)
(* cmp 0x2, esi *)
nop;
(* #je     0x555555582d48 <radix_conversions+584>  #! PC = 0x555555582d10 *)
#je     0x555555582d48 <radix_conversions+584>  #! 0x555555582d10 = 0x555555582d10;
(* mov    %rax,%rcx                                #! PC = 0x555555582d12 *)
mov %rcx %rax;
(* shr    $0x2,%rcx                                #! PC = 0x555555582d15 *)
mov %rcx
    [%rcx[2],%rcx[3],%rcx[4],%rcx[5],%rcx[6],%rcx[7],
     %rcx[8],%rcx[9],%rcx[10],%rcx[11],%rcx[12],%rcx[13],%rcx[14],%rcx[15],
     %rcx[16],%rcx[17],%rcx[18],%rcx[19],%rcx[20],%rcx[21],%rcx[22],%rcx[23],
     %rcx[24],%rcx[25],%rcx[26],%rcx[27],%rcx[28],%rcx[29],%rcx[30],%rcx[31],
     %rcx[32],%rcx[33],%rcx[34],%rcx[35],%rcx[36],%rcx[37],%rcx[38],%rcx[39],
     %rcx[40],%rcx[41],%rcx[42],%rcx[43],%rcx[44],%rcx[45],%rcx[46],%rcx[47],
     %rcx[48],%rcx[49],%rcx[50],%rcx[51],%rcx[52],%rcx[53],%rcx[54],%rcx[55],
     %rcx[56],%rcx[57],%rcx[58],%rcx[59],%rcx[60],%rcx[61],%rcx[62],%rcx[63],
     0@bit,0@bit];
(* and    %r10,%rcx                                #! PC = 0x555555582d19 *)
mov %rcx
    [0@bit,0@bit,0@bit,0@bit,%rcx[4],%rcx[5],0@bit,0@bit,
     0@bit,0@bit,0@bit,0@bit,%rcx[12],%rcx[13],0@bit,0@bit,
     0@bit,0@bit,0@bit,0@bit,%rcx[20],%rcx[21],0@bit,0@bit,
     0@bit,0@bit,0@bit,0@bit,%rcx[28],%rcx[29],0@bit,0@bit,
     0@bit,0@bit,0@bit,0@bit,%rcx[36],%rcx[37],0@bit,0@bit,
     0@bit,0@bit,0@bit,0@bit,%rcx[44],%rcx[45],0@bit,0@bit,
     0@bit,0@bit,0@bit,0@bit,%rcx[52],%rcx[53],0@bit,0@bit,
     0@bit,0@bit,0@bit,0@bit,%rcx[60],%rcx[61],0@bit,0@bit];
(* xor    %rax,%rcx                                #! PC = 0x555555582d1c *)
adds %dc %rcx %rax %rcx;
(* mov    %rcx,%rax                                #! PC = 0x555555582d1f *)
mov %rax %rcx;
(* shr    $0x2,%rax                                #! PC = 0x555555582d22 *)
mov %rax
    [%rax[2],%rax[3],%rax[4],%rax[5],%rax[6],%rax[7],
     %rax[8],%rax[9],%rax[10],%rax[11],%rax[12],%rax[13],%rax[14],%rax[15],
     %rax[16],%rax[17],%rax[18],%rax[19],%rax[20],%rax[21],%rax[22],%rax[23],
     %rax[24],%rax[25],%rax[26],%rax[27],%rax[28],%rax[29],%rax[30],%rax[31],
     %rax[32],%rax[33],%rax[34],%rax[35],%rax[36],%rax[37],%rax[38],%rax[39],
     %rax[40],%rax[41],%rax[42],%rax[43],%rax[44],%rax[45],%rax[46],%rax[47],
     %rax[48],%rax[49],%rax[50],%rax[51],%rax[52],%rax[53],%rax[54],%rax[55],
     %rax[56],%rax[57],%rax[58],%rax[59],%rax[60],%rax[61],%rax[62],%rax[63],
     0@bit,0@bit];
(* and    %r9,%rax                                 #! PC = 0x555555582d26 *)
mov %rax
    [0@bit,0@bit,%rax[2],%rax[3],0@bit,0@bit,0@bit,0@bit,
     0@bit,0@bit,%rax[10],%rax[11],0@bit,0@bit,0@bit,0@bit,
     0@bit,0@bit,%rax[18],%rax[19],0@bit,0@bit,0@bit,0@bit,
     0@bit,0@bit,%rax[26],%rax[27],0@bit,0@bit,0@bit,0@bit,
     0@bit,0@bit,%rax[34],%rax[35],0@bit,0@bit,0@bit,0@bit,
     0@bit,0@bit,%rax[42],%rax[43],0@bit,0@bit,0@bit,0@bit,
     0@bit,0@bit,%rax[50],%rax[51],0@bit,0@bit,0@bit,0@bit,
     0@bit,0@bit,%rax[58],%rax[59],0@bit,0@bit,0@bit,0@bit];
(* xor    %rcx,%rax                                #! PC = 0x555555582d29 *)
adds %dc %rax %rcx %rax;
(* test   %esi,%esi                                #! PC = 0x555555582d2c *)
(* test esi, esi *)
nop;
(* #jne    0x555555582d48 <radix_conversions+584>  #! PC = 0x555555582d2e *)
#jne    0x555555582d48 <radix_conversions+584>  #! 0x555555582d2e = 0x555555582d2e;
(* mov    %rax,(%rdx)                              #! EA = L0x7ffffff50ca8; PC = 0x555555582d48 *)
mov %L0x7ffffff50ca8 %rax;
(* add    $0x8,%rdx                                #! PC = 0x555555582d4b *)
(* add $0x8, rdx *)
nop;
(* cmp    %rdx,%r12                                #! PC = 0x555555582d4f *)
(* cmp rdx, r12 *)
nop;
(* #jne    0x555555582cb0 <radix_conversions+432>  #! PC = 0x555555582d52 *)
#jne    0x555555582cb0 <radix_conversions+432>  #! 0x555555582d52 = 0x555555582d52;
(* mov    (%rdx),%rax                              #! EA = L0x7ffffff50cb0; Value = 0xad64d2e39bfa32e2; PC = 0x555555582cb0 *)
mov %rax %L0x7ffffff50cb0;
(* mov    %rax,%rcx                                #! PC = 0x555555582cb3 *)
mov %rcx %rax;
(* shr    $0x10,%rcx                               #! PC = 0x555555582cb6 *)
mov %rcx
    [%rcx[16],%rcx[17],%rcx[18],%rcx[19],%rcx[20],%rcx[21],%rcx[22],%rcx[23],
     %rcx[24],%rcx[25],%rcx[26],%rcx[27],%rcx[28],%rcx[29],%rcx[30],%rcx[31],
     %rcx[32],%rcx[33],%rcx[34],%rcx[35],%rcx[36],%rcx[37],%rcx[38],%rcx[39],
     %rcx[40],%rcx[41],%rcx[42],%rcx[43],%rcx[44],%rcx[45],%rcx[46],%rcx[47],
     %rcx[48],%rcx[49],%rcx[50],%rcx[51],%rcx[52],%rcx[53],%rcx[54],%rcx[55],
     %rcx[56],%rcx[57],%rcx[58],%rcx[59],%rcx[60],%rcx[61],%rcx[62],%rcx[63],
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit];
(* and    %rbx,%rcx                                #! PC = 0x555555582cba *)
mov %rcx
    [0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     %rcx[32],%rcx[33],%rcx[34],%rcx[35],%rcx[36],%rcx[37],%rcx[38],%rcx[39],
     %rcx[40],%rcx[41],%rcx[42],%rcx[43],%rcx[44],%rcx[45],%rcx[46],%rcx[47],
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit];
(* xor    %rax,%rcx                                #! PC = 0x555555582cbd *)
adds %dc %rcx %rax %rcx;
(* mov    %rcx,%rax                                #! PC = 0x555555582cc0 *)
mov %rax %rcx;
(* shr    $0x10,%rax                               #! PC = 0x555555582cc3 *)
mov %rax
    [%rax[16],%rax[17],%rax[18],%rax[19],%rax[20],%rax[21],%rax[22],%rax[23],
     %rax[24],%rax[25],%rax[26],%rax[27],%rax[28],%rax[29],%rax[30],%rax[31],
     %rax[32],%rax[33],%rax[34],%rax[35],%rax[36],%rax[37],%rax[38],%rax[39],
     %rax[40],%rax[41],%rax[42],%rax[43],%rax[44],%rax[45],%rax[46],%rax[47],
     %rax[48],%rax[49],%rax[50],%rax[51],%rax[52],%rax[53],%rax[54],%rax[55],
     %rax[56],%rax[57],%rax[58],%rax[59],%rax[60],%rax[61],%rax[62],%rax[63],
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit];
(* and    $0xffff0000,%eax                         #! PC = 0x555555582cc7 *)
mov %rax
    [0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     %rax[16],%rax[17],%rax[18],%rax[19],%rax[20],%rax[21],%rax[22],%rax[23],
     %rax[24],%rax[25],%rax[26],%rax[27],%rax[28],%rax[29],%rax[30],%rax[31],
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit];
(* xor    %rcx,%rax                                #! PC = 0x555555582ccc *)
adds %dc %rax %rcx %rax;
(* cmp    $0x4,%esi                                #! PC = 0x555555582ccf *)
(* cmp 0x4, esi *)
nop;
(* #je     0x555555582d48 <radix_conversions+584>  #! PC = 0x555555582cd2 *)
#je     0x555555582d48 <radix_conversions+584>  #! 0x555555582cd2 = 0x555555582cd2;
(* mov    %rax,%rcx                                #! PC = 0x555555582cd4 *)
mov %rcx %rax;
(* shr    $0x8,%rcx                                #! PC = 0x555555582cd7 *)
mov %rcx
    [%rcx[8],%rcx[9],%rcx[10],%rcx[11],%rcx[12],%rcx[13],%rcx[14],%rcx[15],
     %rcx[16],%rcx[17],%rcx[18],%rcx[19],%rcx[20],%rcx[21],%rcx[22],%rcx[23],
     %rcx[24],%rcx[25],%rcx[26],%rcx[27],%rcx[28],%rcx[29],%rcx[30],%rcx[31],
     %rcx[32],%rcx[33],%rcx[34],%rcx[35],%rcx[36],%rcx[37],%rcx[38],%rcx[39],
     %rcx[40],%rcx[41],%rcx[42],%rcx[43],%rcx[44],%rcx[45],%rcx[46],%rcx[47],
     %rcx[48],%rcx[49],%rcx[50],%rcx[51],%rcx[52],%rcx[53],%rcx[54],%rcx[55],
     %rcx[56],%rcx[57],%rcx[58],%rcx[59],%rcx[60],%rcx[61],%rcx[62],%rcx[63],
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit];
(* and    %r14,%rcx                                #! PC = 0x555555582cdb *)
mov %rcx
    [0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     %rcx[16],%rcx[17],%rcx[18],%rcx[19],%rcx[20],%rcx[21],%rcx[22],%rcx[23],
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     %rcx[48],%rcx[49],%rcx[50],%rcx[51],%rcx[52],%rcx[53],%rcx[54],%rcx[55],
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit];
(* xor    %rax,%rcx                                #! PC = 0x555555582cde *)
adds %dc %rcx %rax %rcx;
(* mov    %rcx,%rax                                #! PC = 0x555555582ce1 *)
mov %rax %rcx;
(* shr    $0x8,%rax                                #! PC = 0x555555582ce4 *)
mov %rax
    [%rax[8],%rax[9],%rax[10],%rax[11],%rax[12],%rax[13],%rax[14],%rax[15],
     %rax[16],%rax[17],%rax[18],%rax[19],%rax[20],%rax[21],%rax[22],%rax[23],
     %rax[24],%rax[25],%rax[26],%rax[27],%rax[28],%rax[29],%rax[30],%rax[31],
     %rax[32],%rax[33],%rax[34],%rax[35],%rax[36],%rax[37],%rax[38],%rax[39],
     %rax[40],%rax[41],%rax[42],%rax[43],%rax[44],%rax[45],%rax[46],%rax[47],
     %rax[48],%rax[49],%rax[50],%rax[51],%rax[52],%rax[53],%rax[54],%rax[55],
     %rax[56],%rax[57],%rax[58],%rax[59],%rax[60],%rax[61],%rax[62],%rax[63],
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit];
(* and    %r13,%rax                                #! PC = 0x555555582ce8 *)
mov %rax
    [0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     %rax[8],%rax[9],%rax[10],%rax[11],%rax[12],%rax[13],%rax[14],%rax[15],
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     %rax[40],%rax[41],%rax[42],%rax[43],%rax[44],%rax[45],%rax[46],%rax[47],
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit];
(* xor    %rcx,%rax                                #! PC = 0x555555582ceb *)
adds %dc %rax %rcx %rax;
(* cmp    $0x3,%esi                                #! PC = 0x555555582cee *)
(* cmp 0x3, esi *)
nop;
(* #je     0x555555582d48 <radix_conversions+584>  #! PC = 0x555555582cf1 *)
#je     0x555555582d48 <radix_conversions+584>  #! 0x555555582cf1 = 0x555555582cf1;
(* mov    %rax,%rcx                                #! PC = 0x555555582cf3 *)
mov %rcx %rax;
(* shr    $0x4,%rcx                                #! PC = 0x555555582cf6 *)
mov %rcx
    [%rcx[4],%rcx[5],%rcx[6],%rcx[7],
     %rcx[8],%rcx[9],%rcx[10],%rcx[11],%rcx[12],%rcx[13],%rcx[14],%rcx[15],
     %rcx[16],%rcx[17],%rcx[18],%rcx[19],%rcx[20],%rcx[21],%rcx[22],%rcx[23],
     %rcx[24],%rcx[25],%rcx[26],%rcx[27],%rcx[28],%rcx[29],%rcx[30],%rcx[31],
     %rcx[32],%rcx[33],%rcx[34],%rcx[35],%rcx[36],%rcx[37],%rcx[38],%rcx[39],
     %rcx[40],%rcx[41],%rcx[42],%rcx[43],%rcx[44],%rcx[45],%rcx[46],%rcx[47],
     %rcx[48],%rcx[49],%rcx[50],%rcx[51],%rcx[52],%rcx[53],%rcx[54],%rcx[55],
     %rcx[56],%rcx[57],%rcx[58],%rcx[59],%rcx[60],%rcx[61],%rcx[62],%rcx[63],
     0@bit,0@bit,0@bit,0@bit];
(* and    %r8,%rcx                                 #! PC = 0x555555582cfa *)
mov %rcx
    [0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     %rcx[8],%rcx[9],%rcx[10],%rcx[11],0@bit,0@bit,0@bit,0@bit,
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     %rcx[24],%rcx[25],%rcx[26],%rcx[27],0@bit,0@bit,0@bit,0@bit,
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     %rcx[40],%rcx[41],%rcx[42],%rcx[43],0@bit,0@bit,0@bit,0@bit,
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     %rcx[56],%rcx[57],%rcx[58],%rcx[59],0@bit,0@bit,0@bit,0@bit];
(* xor    %rax,%rcx                                #! PC = 0x555555582cfd *)
adds %dc %rcx %rax %rcx;
(* mov    %rcx,%rax                                #! PC = 0x555555582d00 *)
mov %rax %rcx;
(* shr    $0x4,%rax                                #! PC = 0x555555582d03 *)
mov %rax
    [%rax[4],%rax[5],%rax[6],%rax[7],
     %rax[8],%rax[9],%rax[10],%rax[11],%rax[12],%rax[13],%rax[14],%rax[15],
     %rax[16],%rax[17],%rax[18],%rax[19],%rax[20],%rax[21],%rax[22],%rax[23],
     %rax[24],%rax[25],%rax[26],%rax[27],%rax[28],%rax[29],%rax[30],%rax[31],
     %rax[32],%rax[33],%rax[34],%rax[35],%rax[36],%rax[37],%rax[38],%rax[39],
     %rax[40],%rax[41],%rax[42],%rax[43],%rax[44],%rax[45],%rax[46],%rax[47],
     %rax[48],%rax[49],%rax[50],%rax[51],%rax[52],%rax[53],%rax[54],%rax[55],
     %rax[56],%rax[57],%rax[58],%rax[59],%rax[60],%rax[61],%rax[62],%rax[63],
     0@bit,0@bit,0@bit,0@bit];
(* and    %rdi,%rax                                #! PC = 0x555555582d07 *)
mov %rax
    [0@bit,0@bit,0@bit,0@bit,%rax[4],%rax[5],%rax[6],%rax[7],
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     0@bit,0@bit,0@bit,0@bit,%rax[20],%rax[21],%rax[22],%rax[23],
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     0@bit,0@bit,0@bit,0@bit,%rax[36],%rax[37],%rax[38],%rax[39],
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     0@bit,0@bit,0@bit,0@bit,%rax[52],%rax[53],%rax[54],%rax[55],
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit];
(* xor    %rcx,%rax                                #! PC = 0x555555582d0a *)
adds %dc %rax %rcx %rax;
(* cmp    $0x2,%esi                                #! PC = 0x555555582d0d *)
(* cmp 0x2, esi *)
nop;
(* #je     0x555555582d48 <radix_conversions+584>  #! PC = 0x555555582d10 *)
#je     0x555555582d48 <radix_conversions+584>  #! 0x555555582d10 = 0x555555582d10;
(* mov    %rax,%rcx                                #! PC = 0x555555582d12 *)
mov %rcx %rax;
(* shr    $0x2,%rcx                                #! PC = 0x555555582d15 *)
mov %rcx
    [%rcx[2],%rcx[3],%rcx[4],%rcx[5],%rcx[6],%rcx[7],
     %rcx[8],%rcx[9],%rcx[10],%rcx[11],%rcx[12],%rcx[13],%rcx[14],%rcx[15],
     %rcx[16],%rcx[17],%rcx[18],%rcx[19],%rcx[20],%rcx[21],%rcx[22],%rcx[23],
     %rcx[24],%rcx[25],%rcx[26],%rcx[27],%rcx[28],%rcx[29],%rcx[30],%rcx[31],
     %rcx[32],%rcx[33],%rcx[34],%rcx[35],%rcx[36],%rcx[37],%rcx[38],%rcx[39],
     %rcx[40],%rcx[41],%rcx[42],%rcx[43],%rcx[44],%rcx[45],%rcx[46],%rcx[47],
     %rcx[48],%rcx[49],%rcx[50],%rcx[51],%rcx[52],%rcx[53],%rcx[54],%rcx[55],
     %rcx[56],%rcx[57],%rcx[58],%rcx[59],%rcx[60],%rcx[61],%rcx[62],%rcx[63],
     0@bit,0@bit];
(* and    %r10,%rcx                                #! PC = 0x555555582d19 *)
mov %rcx
    [0@bit,0@bit,0@bit,0@bit,%rcx[4],%rcx[5],0@bit,0@bit,
     0@bit,0@bit,0@bit,0@bit,%rcx[12],%rcx[13],0@bit,0@bit,
     0@bit,0@bit,0@bit,0@bit,%rcx[20],%rcx[21],0@bit,0@bit,
     0@bit,0@bit,0@bit,0@bit,%rcx[28],%rcx[29],0@bit,0@bit,
     0@bit,0@bit,0@bit,0@bit,%rcx[36],%rcx[37],0@bit,0@bit,
     0@bit,0@bit,0@bit,0@bit,%rcx[44],%rcx[45],0@bit,0@bit,
     0@bit,0@bit,0@bit,0@bit,%rcx[52],%rcx[53],0@bit,0@bit,
     0@bit,0@bit,0@bit,0@bit,%rcx[60],%rcx[61],0@bit,0@bit];
(* xor    %rax,%rcx                                #! PC = 0x555555582d1c *)
adds %dc %rcx %rax %rcx;
(* mov    %rcx,%rax                                #! PC = 0x555555582d1f *)
mov %rax %rcx;
(* shr    $0x2,%rax                                #! PC = 0x555555582d22 *)
mov %rax
    [%rax[2],%rax[3],%rax[4],%rax[5],%rax[6],%rax[7],
     %rax[8],%rax[9],%rax[10],%rax[11],%rax[12],%rax[13],%rax[14],%rax[15],
     %rax[16],%rax[17],%rax[18],%rax[19],%rax[20],%rax[21],%rax[22],%rax[23],
     %rax[24],%rax[25],%rax[26],%rax[27],%rax[28],%rax[29],%rax[30],%rax[31],
     %rax[32],%rax[33],%rax[34],%rax[35],%rax[36],%rax[37],%rax[38],%rax[39],
     %rax[40],%rax[41],%rax[42],%rax[43],%rax[44],%rax[45],%rax[46],%rax[47],
     %rax[48],%rax[49],%rax[50],%rax[51],%rax[52],%rax[53],%rax[54],%rax[55],
     %rax[56],%rax[57],%rax[58],%rax[59],%rax[60],%rax[61],%rax[62],%rax[63],
     0@bit,0@bit];
(* and    %r9,%rax                                 #! PC = 0x555555582d26 *)
mov %rax
    [0@bit,0@bit,%rax[2],%rax[3],0@bit,0@bit,0@bit,0@bit,
     0@bit,0@bit,%rax[10],%rax[11],0@bit,0@bit,0@bit,0@bit,
     0@bit,0@bit,%rax[18],%rax[19],0@bit,0@bit,0@bit,0@bit,
     0@bit,0@bit,%rax[26],%rax[27],0@bit,0@bit,0@bit,0@bit,
     0@bit,0@bit,%rax[34],%rax[35],0@bit,0@bit,0@bit,0@bit,
     0@bit,0@bit,%rax[42],%rax[43],0@bit,0@bit,0@bit,0@bit,
     0@bit,0@bit,%rax[50],%rax[51],0@bit,0@bit,0@bit,0@bit,
     0@bit,0@bit,%rax[58],%rax[59],0@bit,0@bit,0@bit,0@bit];
(* xor    %rcx,%rax                                #! PC = 0x555555582d29 *)
adds %dc %rax %rcx %rax;
(* test   %esi,%esi                                #! PC = 0x555555582d2c *)
(* test esi, esi *)
nop;
(* #jne    0x555555582d48 <radix_conversions+584>  #! PC = 0x555555582d2e *)
#jne    0x555555582d48 <radix_conversions+584>  #! 0x555555582d2e = 0x555555582d2e;
(* mov    %rax,(%rdx)                              #! EA = L0x7ffffff50cb0; PC = 0x555555582d48 *)
mov %L0x7ffffff50cb0 %rax;
(* add    $0x8,%rdx                                #! PC = 0x555555582d4b *)
(* add $0x8, rdx *)
nop;
(* cmp    %rdx,%r12                                #! PC = 0x555555582d4f *)
(* cmp rdx, r12 *)
nop;
(* #jne    0x555555582cb0 <radix_conversions+432>  #! PC = 0x555555582d52 *)
#jne    0x555555582cb0 <radix_conversions+432>  #! 0x555555582d52 = 0x555555582d52;
(* mov    (%rdx),%rax                              #! EA = L0x7ffffff50cb8; Value = 0x6372c12ec17c53b5; PC = 0x555555582cb0 *)
mov %rax %L0x7ffffff50cb8;
(* mov    %rax,%rcx                                #! PC = 0x555555582cb3 *)
mov %rcx %rax;
(* shr    $0x10,%rcx                               #! PC = 0x555555582cb6 *)
mov %rcx
    [%rcx[16],%rcx[17],%rcx[18],%rcx[19],%rcx[20],%rcx[21],%rcx[22],%rcx[23],
     %rcx[24],%rcx[25],%rcx[26],%rcx[27],%rcx[28],%rcx[29],%rcx[30],%rcx[31],
     %rcx[32],%rcx[33],%rcx[34],%rcx[35],%rcx[36],%rcx[37],%rcx[38],%rcx[39],
     %rcx[40],%rcx[41],%rcx[42],%rcx[43],%rcx[44],%rcx[45],%rcx[46],%rcx[47],
     %rcx[48],%rcx[49],%rcx[50],%rcx[51],%rcx[52],%rcx[53],%rcx[54],%rcx[55],
     %rcx[56],%rcx[57],%rcx[58],%rcx[59],%rcx[60],%rcx[61],%rcx[62],%rcx[63],
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit];
(* and    %rbx,%rcx                                #! PC = 0x555555582cba *)
mov %rcx
    [0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     %rcx[32],%rcx[33],%rcx[34],%rcx[35],%rcx[36],%rcx[37],%rcx[38],%rcx[39],
     %rcx[40],%rcx[41],%rcx[42],%rcx[43],%rcx[44],%rcx[45],%rcx[46],%rcx[47],
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit];
(* xor    %rax,%rcx                                #! PC = 0x555555582cbd *)
adds %dc %rcx %rax %rcx;
(* mov    %rcx,%rax                                #! PC = 0x555555582cc0 *)
mov %rax %rcx;
(* shr    $0x10,%rax                               #! PC = 0x555555582cc3 *)
mov %rax
    [%rax[16],%rax[17],%rax[18],%rax[19],%rax[20],%rax[21],%rax[22],%rax[23],
     %rax[24],%rax[25],%rax[26],%rax[27],%rax[28],%rax[29],%rax[30],%rax[31],
     %rax[32],%rax[33],%rax[34],%rax[35],%rax[36],%rax[37],%rax[38],%rax[39],
     %rax[40],%rax[41],%rax[42],%rax[43],%rax[44],%rax[45],%rax[46],%rax[47],
     %rax[48],%rax[49],%rax[50],%rax[51],%rax[52],%rax[53],%rax[54],%rax[55],
     %rax[56],%rax[57],%rax[58],%rax[59],%rax[60],%rax[61],%rax[62],%rax[63],
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit];
(* and    $0xffff0000,%eax                         #! PC = 0x555555582cc7 *)
mov %rax
    [0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     %rax[16],%rax[17],%rax[18],%rax[19],%rax[20],%rax[21],%rax[22],%rax[23],
     %rax[24],%rax[25],%rax[26],%rax[27],%rax[28],%rax[29],%rax[30],%rax[31],
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit];
(* xor    %rcx,%rax                                #! PC = 0x555555582ccc *)
adds %dc %rax %rcx %rax;
(* cmp    $0x4,%esi                                #! PC = 0x555555582ccf *)
(* cmp 0x4, esi *)
nop;
(* #je     0x555555582d48 <radix_conversions+584>  #! PC = 0x555555582cd2 *)
#je     0x555555582d48 <radix_conversions+584>  #! 0x555555582cd2 = 0x555555582cd2;
(* mov    %rax,%rcx                                #! PC = 0x555555582cd4 *)
mov %rcx %rax;
(* shr    $0x8,%rcx                                #! PC = 0x555555582cd7 *)
mov %rcx
    [%rcx[8],%rcx[9],%rcx[10],%rcx[11],%rcx[12],%rcx[13],%rcx[14],%rcx[15],
     %rcx[16],%rcx[17],%rcx[18],%rcx[19],%rcx[20],%rcx[21],%rcx[22],%rcx[23],
     %rcx[24],%rcx[25],%rcx[26],%rcx[27],%rcx[28],%rcx[29],%rcx[30],%rcx[31],
     %rcx[32],%rcx[33],%rcx[34],%rcx[35],%rcx[36],%rcx[37],%rcx[38],%rcx[39],
     %rcx[40],%rcx[41],%rcx[42],%rcx[43],%rcx[44],%rcx[45],%rcx[46],%rcx[47],
     %rcx[48],%rcx[49],%rcx[50],%rcx[51],%rcx[52],%rcx[53],%rcx[54],%rcx[55],
     %rcx[56],%rcx[57],%rcx[58],%rcx[59],%rcx[60],%rcx[61],%rcx[62],%rcx[63],
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit];
(* and    %r14,%rcx                                #! PC = 0x555555582cdb *)
mov %rcx
    [0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     %rcx[16],%rcx[17],%rcx[18],%rcx[19],%rcx[20],%rcx[21],%rcx[22],%rcx[23],
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     %rcx[48],%rcx[49],%rcx[50],%rcx[51],%rcx[52],%rcx[53],%rcx[54],%rcx[55],
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit];
(* xor    %rax,%rcx                                #! PC = 0x555555582cde *)
adds %dc %rcx %rax %rcx;
(* mov    %rcx,%rax                                #! PC = 0x555555582ce1 *)
mov %rax %rcx;
(* shr    $0x8,%rax                                #! PC = 0x555555582ce4 *)
mov %rax
    [%rax[8],%rax[9],%rax[10],%rax[11],%rax[12],%rax[13],%rax[14],%rax[15],
     %rax[16],%rax[17],%rax[18],%rax[19],%rax[20],%rax[21],%rax[22],%rax[23],
     %rax[24],%rax[25],%rax[26],%rax[27],%rax[28],%rax[29],%rax[30],%rax[31],
     %rax[32],%rax[33],%rax[34],%rax[35],%rax[36],%rax[37],%rax[38],%rax[39],
     %rax[40],%rax[41],%rax[42],%rax[43],%rax[44],%rax[45],%rax[46],%rax[47],
     %rax[48],%rax[49],%rax[50],%rax[51],%rax[52],%rax[53],%rax[54],%rax[55],
     %rax[56],%rax[57],%rax[58],%rax[59],%rax[60],%rax[61],%rax[62],%rax[63],
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit];
(* and    %r13,%rax                                #! PC = 0x555555582ce8 *)
mov %rax
    [0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     %rax[8],%rax[9],%rax[10],%rax[11],%rax[12],%rax[13],%rax[14],%rax[15],
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     %rax[40],%rax[41],%rax[42],%rax[43],%rax[44],%rax[45],%rax[46],%rax[47],
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit];
(* xor    %rcx,%rax                                #! PC = 0x555555582ceb *)
adds %dc %rax %rcx %rax;
(* cmp    $0x3,%esi                                #! PC = 0x555555582cee *)
(* cmp 0x3, esi *)
nop;
(* #je     0x555555582d48 <radix_conversions+584>  #! PC = 0x555555582cf1 *)
#je     0x555555582d48 <radix_conversions+584>  #! 0x555555582cf1 = 0x555555582cf1;
(* mov    %rax,%rcx                                #! PC = 0x555555582cf3 *)
mov %rcx %rax;
(* shr    $0x4,%rcx                                #! PC = 0x555555582cf6 *)
mov %rcx
    [%rcx[4],%rcx[5],%rcx[6],%rcx[7],
     %rcx[8],%rcx[9],%rcx[10],%rcx[11],%rcx[12],%rcx[13],%rcx[14],%rcx[15],
     %rcx[16],%rcx[17],%rcx[18],%rcx[19],%rcx[20],%rcx[21],%rcx[22],%rcx[23],
     %rcx[24],%rcx[25],%rcx[26],%rcx[27],%rcx[28],%rcx[29],%rcx[30],%rcx[31],
     %rcx[32],%rcx[33],%rcx[34],%rcx[35],%rcx[36],%rcx[37],%rcx[38],%rcx[39],
     %rcx[40],%rcx[41],%rcx[42],%rcx[43],%rcx[44],%rcx[45],%rcx[46],%rcx[47],
     %rcx[48],%rcx[49],%rcx[50],%rcx[51],%rcx[52],%rcx[53],%rcx[54],%rcx[55],
     %rcx[56],%rcx[57],%rcx[58],%rcx[59],%rcx[60],%rcx[61],%rcx[62],%rcx[63],
     0@bit,0@bit,0@bit,0@bit];
(* and    %r8,%rcx                                 #! PC = 0x555555582cfa *)
mov %rcx
    [0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     %rcx[8],%rcx[9],%rcx[10],%rcx[11],0@bit,0@bit,0@bit,0@bit,
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     %rcx[24],%rcx[25],%rcx[26],%rcx[27],0@bit,0@bit,0@bit,0@bit,
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     %rcx[40],%rcx[41],%rcx[42],%rcx[43],0@bit,0@bit,0@bit,0@bit,
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     %rcx[56],%rcx[57],%rcx[58],%rcx[59],0@bit,0@bit,0@bit,0@bit];
(* xor    %rax,%rcx                                #! PC = 0x555555582cfd *)
adds %dc %rcx %rax %rcx;
(* mov    %rcx,%rax                                #! PC = 0x555555582d00 *)
mov %rax %rcx;
(* shr    $0x4,%rax                                #! PC = 0x555555582d03 *)
mov %rax
    [%rax[4],%rax[5],%rax[6],%rax[7],
     %rax[8],%rax[9],%rax[10],%rax[11],%rax[12],%rax[13],%rax[14],%rax[15],
     %rax[16],%rax[17],%rax[18],%rax[19],%rax[20],%rax[21],%rax[22],%rax[23],
     %rax[24],%rax[25],%rax[26],%rax[27],%rax[28],%rax[29],%rax[30],%rax[31],
     %rax[32],%rax[33],%rax[34],%rax[35],%rax[36],%rax[37],%rax[38],%rax[39],
     %rax[40],%rax[41],%rax[42],%rax[43],%rax[44],%rax[45],%rax[46],%rax[47],
     %rax[48],%rax[49],%rax[50],%rax[51],%rax[52],%rax[53],%rax[54],%rax[55],
     %rax[56],%rax[57],%rax[58],%rax[59],%rax[60],%rax[61],%rax[62],%rax[63],
     0@bit,0@bit,0@bit,0@bit];
(* and    %rdi,%rax                                #! PC = 0x555555582d07 *)
mov %rax
    [0@bit,0@bit,0@bit,0@bit,%rax[4],%rax[5],%rax[6],%rax[7],
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     0@bit,0@bit,0@bit,0@bit,%rax[20],%rax[21],%rax[22],%rax[23],
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     0@bit,0@bit,0@bit,0@bit,%rax[36],%rax[37],%rax[38],%rax[39],
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     0@bit,0@bit,0@bit,0@bit,%rax[52],%rax[53],%rax[54],%rax[55],
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit];
(* xor    %rcx,%rax                                #! PC = 0x555555582d0a *)
adds %dc %rax %rcx %rax;
(* cmp    $0x2,%esi                                #! PC = 0x555555582d0d *)
(* cmp 0x2, esi *)
nop;
(* #je     0x555555582d48 <radix_conversions+584>  #! PC = 0x555555582d10 *)
#je     0x555555582d48 <radix_conversions+584>  #! 0x555555582d10 = 0x555555582d10;
(* mov    %rax,%rcx                                #! PC = 0x555555582d12 *)
mov %rcx %rax;
(* shr    $0x2,%rcx                                #! PC = 0x555555582d15 *)
mov %rcx
    [%rcx[2],%rcx[3],%rcx[4],%rcx[5],%rcx[6],%rcx[7],
     %rcx[8],%rcx[9],%rcx[10],%rcx[11],%rcx[12],%rcx[13],%rcx[14],%rcx[15],
     %rcx[16],%rcx[17],%rcx[18],%rcx[19],%rcx[20],%rcx[21],%rcx[22],%rcx[23],
     %rcx[24],%rcx[25],%rcx[26],%rcx[27],%rcx[28],%rcx[29],%rcx[30],%rcx[31],
     %rcx[32],%rcx[33],%rcx[34],%rcx[35],%rcx[36],%rcx[37],%rcx[38],%rcx[39],
     %rcx[40],%rcx[41],%rcx[42],%rcx[43],%rcx[44],%rcx[45],%rcx[46],%rcx[47],
     %rcx[48],%rcx[49],%rcx[50],%rcx[51],%rcx[52],%rcx[53],%rcx[54],%rcx[55],
     %rcx[56],%rcx[57],%rcx[58],%rcx[59],%rcx[60],%rcx[61],%rcx[62],%rcx[63],
     0@bit,0@bit];
(* and    %r10,%rcx                                #! PC = 0x555555582d19 *)
mov %rcx
    [0@bit,0@bit,0@bit,0@bit,%rcx[4],%rcx[5],0@bit,0@bit,
     0@bit,0@bit,0@bit,0@bit,%rcx[12],%rcx[13],0@bit,0@bit,
     0@bit,0@bit,0@bit,0@bit,%rcx[20],%rcx[21],0@bit,0@bit,
     0@bit,0@bit,0@bit,0@bit,%rcx[28],%rcx[29],0@bit,0@bit,
     0@bit,0@bit,0@bit,0@bit,%rcx[36],%rcx[37],0@bit,0@bit,
     0@bit,0@bit,0@bit,0@bit,%rcx[44],%rcx[45],0@bit,0@bit,
     0@bit,0@bit,0@bit,0@bit,%rcx[52],%rcx[53],0@bit,0@bit,
     0@bit,0@bit,0@bit,0@bit,%rcx[60],%rcx[61],0@bit,0@bit];
(* xor    %rax,%rcx                                #! PC = 0x555555582d1c *)
adds %dc %rcx %rax %rcx;
(* mov    %rcx,%rax                                #! PC = 0x555555582d1f *)
mov %rax %rcx;
(* shr    $0x2,%rax                                #! PC = 0x555555582d22 *)
mov %rax
    [%rax[2],%rax[3],%rax[4],%rax[5],%rax[6],%rax[7],
     %rax[8],%rax[9],%rax[10],%rax[11],%rax[12],%rax[13],%rax[14],%rax[15],
     %rax[16],%rax[17],%rax[18],%rax[19],%rax[20],%rax[21],%rax[22],%rax[23],
     %rax[24],%rax[25],%rax[26],%rax[27],%rax[28],%rax[29],%rax[30],%rax[31],
     %rax[32],%rax[33],%rax[34],%rax[35],%rax[36],%rax[37],%rax[38],%rax[39],
     %rax[40],%rax[41],%rax[42],%rax[43],%rax[44],%rax[45],%rax[46],%rax[47],
     %rax[48],%rax[49],%rax[50],%rax[51],%rax[52],%rax[53],%rax[54],%rax[55],
     %rax[56],%rax[57],%rax[58],%rax[59],%rax[60],%rax[61],%rax[62],%rax[63],
     0@bit,0@bit];
(* and    %r9,%rax                                 #! PC = 0x555555582d26 *)
mov %rax
    [0@bit,0@bit,%rax[2],%rax[3],0@bit,0@bit,0@bit,0@bit,
     0@bit,0@bit,%rax[10],%rax[11],0@bit,0@bit,0@bit,0@bit,
     0@bit,0@bit,%rax[18],%rax[19],0@bit,0@bit,0@bit,0@bit,
     0@bit,0@bit,%rax[26],%rax[27],0@bit,0@bit,0@bit,0@bit,
     0@bit,0@bit,%rax[34],%rax[35],0@bit,0@bit,0@bit,0@bit,
     0@bit,0@bit,%rax[42],%rax[43],0@bit,0@bit,0@bit,0@bit,
     0@bit,0@bit,%rax[50],%rax[51],0@bit,0@bit,0@bit,0@bit,
     0@bit,0@bit,%rax[58],%rax[59],0@bit,0@bit,0@bit,0@bit];
(* xor    %rcx,%rax                                #! PC = 0x555555582d29 *)
adds %dc %rax %rcx %rax;
(* test   %esi,%esi                                #! PC = 0x555555582d2c *)
(* test esi, esi *)
nop;
(* #jne    0x555555582d48 <radix_conversions+584>  #! PC = 0x555555582d2e *)
#jne    0x555555582d48 <radix_conversions+584>  #! 0x555555582d2e = 0x555555582d2e;
(* mov    %rax,(%rdx)                              #! EA = L0x7ffffff50cb8; PC = 0x555555582d48 *)
mov %L0x7ffffff50cb8 %rax;
(* add    $0x8,%rdx                                #! PC = 0x555555582d4b *)
(* add $0x8, rdx *)
nop;
(* cmp    %rdx,%r12                                #! PC = 0x555555582d4f *)
(* cmp rdx, r12 *)
nop;
(* #jne    0x555555582cb0 <radix_conversions+432>  #! PC = 0x555555582d52 *)
#jne    0x555555582cb0 <radix_conversions+432>  #! 0x555555582d52 = 0x555555582d52;
(* mov    (%rdx),%rax                              #! EA = L0x7ffffff50cc0; Value = 0xd2102bb279b03e0c; PC = 0x555555582cb0 *)
mov %rax %L0x7ffffff50cc0;
(* mov    %rax,%rcx                                #! PC = 0x555555582cb3 *)
mov %rcx %rax;
(* shr    $0x10,%rcx                               #! PC = 0x555555582cb6 *)
mov %rcx
    [%rcx[16],%rcx[17],%rcx[18],%rcx[19],%rcx[20],%rcx[21],%rcx[22],%rcx[23],
     %rcx[24],%rcx[25],%rcx[26],%rcx[27],%rcx[28],%rcx[29],%rcx[30],%rcx[31],
     %rcx[32],%rcx[33],%rcx[34],%rcx[35],%rcx[36],%rcx[37],%rcx[38],%rcx[39],
     %rcx[40],%rcx[41],%rcx[42],%rcx[43],%rcx[44],%rcx[45],%rcx[46],%rcx[47],
     %rcx[48],%rcx[49],%rcx[50],%rcx[51],%rcx[52],%rcx[53],%rcx[54],%rcx[55],
     %rcx[56],%rcx[57],%rcx[58],%rcx[59],%rcx[60],%rcx[61],%rcx[62],%rcx[63],
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit];
(* and    %rbx,%rcx                                #! PC = 0x555555582cba *)
mov %rcx
    [0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     %rcx[32],%rcx[33],%rcx[34],%rcx[35],%rcx[36],%rcx[37],%rcx[38],%rcx[39],
     %rcx[40],%rcx[41],%rcx[42],%rcx[43],%rcx[44],%rcx[45],%rcx[46],%rcx[47],
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit];
(* xor    %rax,%rcx                                #! PC = 0x555555582cbd *)
adds %dc %rcx %rax %rcx;
(* mov    %rcx,%rax                                #! PC = 0x555555582cc0 *)
mov %rax %rcx;
(* shr    $0x10,%rax                               #! PC = 0x555555582cc3 *)
mov %rax
    [%rax[16],%rax[17],%rax[18],%rax[19],%rax[20],%rax[21],%rax[22],%rax[23],
     %rax[24],%rax[25],%rax[26],%rax[27],%rax[28],%rax[29],%rax[30],%rax[31],
     %rax[32],%rax[33],%rax[34],%rax[35],%rax[36],%rax[37],%rax[38],%rax[39],
     %rax[40],%rax[41],%rax[42],%rax[43],%rax[44],%rax[45],%rax[46],%rax[47],
     %rax[48],%rax[49],%rax[50],%rax[51],%rax[52],%rax[53],%rax[54],%rax[55],
     %rax[56],%rax[57],%rax[58],%rax[59],%rax[60],%rax[61],%rax[62],%rax[63],
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit];
(* and    $0xffff0000,%eax                         #! PC = 0x555555582cc7 *)
mov %rax
    [0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     %rax[16],%rax[17],%rax[18],%rax[19],%rax[20],%rax[21],%rax[22],%rax[23],
     %rax[24],%rax[25],%rax[26],%rax[27],%rax[28],%rax[29],%rax[30],%rax[31],
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit];
(* xor    %rcx,%rax                                #! PC = 0x555555582ccc *)
adds %dc %rax %rcx %rax;
(* cmp    $0x4,%esi                                #! PC = 0x555555582ccf *)
(* cmp 0x4, esi *)
nop;
(* #je     0x555555582d48 <radix_conversions+584>  #! PC = 0x555555582cd2 *)
#je     0x555555582d48 <radix_conversions+584>  #! 0x555555582cd2 = 0x555555582cd2;
(* mov    %rax,%rcx                                #! PC = 0x555555582cd4 *)
mov %rcx %rax;
(* shr    $0x8,%rcx                                #! PC = 0x555555582cd7 *)
mov %rcx
    [%rcx[8],%rcx[9],%rcx[10],%rcx[11],%rcx[12],%rcx[13],%rcx[14],%rcx[15],
     %rcx[16],%rcx[17],%rcx[18],%rcx[19],%rcx[20],%rcx[21],%rcx[22],%rcx[23],
     %rcx[24],%rcx[25],%rcx[26],%rcx[27],%rcx[28],%rcx[29],%rcx[30],%rcx[31],
     %rcx[32],%rcx[33],%rcx[34],%rcx[35],%rcx[36],%rcx[37],%rcx[38],%rcx[39],
     %rcx[40],%rcx[41],%rcx[42],%rcx[43],%rcx[44],%rcx[45],%rcx[46],%rcx[47],
     %rcx[48],%rcx[49],%rcx[50],%rcx[51],%rcx[52],%rcx[53],%rcx[54],%rcx[55],
     %rcx[56],%rcx[57],%rcx[58],%rcx[59],%rcx[60],%rcx[61],%rcx[62],%rcx[63],
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit];
(* and    %r14,%rcx                                #! PC = 0x555555582cdb *)
mov %rcx
    [0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     %rcx[16],%rcx[17],%rcx[18],%rcx[19],%rcx[20],%rcx[21],%rcx[22],%rcx[23],
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     %rcx[48],%rcx[49],%rcx[50],%rcx[51],%rcx[52],%rcx[53],%rcx[54],%rcx[55],
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit];
(* xor    %rax,%rcx                                #! PC = 0x555555582cde *)
adds %dc %rcx %rax %rcx;
(* mov    %rcx,%rax                                #! PC = 0x555555582ce1 *)
mov %rax %rcx;
(* shr    $0x8,%rax                                #! PC = 0x555555582ce4 *)
mov %rax
    [%rax[8],%rax[9],%rax[10],%rax[11],%rax[12],%rax[13],%rax[14],%rax[15],
     %rax[16],%rax[17],%rax[18],%rax[19],%rax[20],%rax[21],%rax[22],%rax[23],
     %rax[24],%rax[25],%rax[26],%rax[27],%rax[28],%rax[29],%rax[30],%rax[31],
     %rax[32],%rax[33],%rax[34],%rax[35],%rax[36],%rax[37],%rax[38],%rax[39],
     %rax[40],%rax[41],%rax[42],%rax[43],%rax[44],%rax[45],%rax[46],%rax[47],
     %rax[48],%rax[49],%rax[50],%rax[51],%rax[52],%rax[53],%rax[54],%rax[55],
     %rax[56],%rax[57],%rax[58],%rax[59],%rax[60],%rax[61],%rax[62],%rax[63],
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit];
(* and    %r13,%rax                                #! PC = 0x555555582ce8 *)
mov %rax
    [0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     %rax[8],%rax[9],%rax[10],%rax[11],%rax[12],%rax[13],%rax[14],%rax[15],
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     %rax[40],%rax[41],%rax[42],%rax[43],%rax[44],%rax[45],%rax[46],%rax[47],
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit];
(* xor    %rcx,%rax                                #! PC = 0x555555582ceb *)
adds %dc %rax %rcx %rax;
(* cmp    $0x3,%esi                                #! PC = 0x555555582cee *)
(* cmp 0x3, esi *)
nop;
(* #je     0x555555582d48 <radix_conversions+584>  #! PC = 0x555555582cf1 *)
#je     0x555555582d48 <radix_conversions+584>  #! 0x555555582cf1 = 0x555555582cf1;
(* mov    %rax,%rcx                                #! PC = 0x555555582cf3 *)
mov %rcx %rax;
(* shr    $0x4,%rcx                                #! PC = 0x555555582cf6 *)
mov %rcx
    [%rcx[4],%rcx[5],%rcx[6],%rcx[7],
     %rcx[8],%rcx[9],%rcx[10],%rcx[11],%rcx[12],%rcx[13],%rcx[14],%rcx[15],
     %rcx[16],%rcx[17],%rcx[18],%rcx[19],%rcx[20],%rcx[21],%rcx[22],%rcx[23],
     %rcx[24],%rcx[25],%rcx[26],%rcx[27],%rcx[28],%rcx[29],%rcx[30],%rcx[31],
     %rcx[32],%rcx[33],%rcx[34],%rcx[35],%rcx[36],%rcx[37],%rcx[38],%rcx[39],
     %rcx[40],%rcx[41],%rcx[42],%rcx[43],%rcx[44],%rcx[45],%rcx[46],%rcx[47],
     %rcx[48],%rcx[49],%rcx[50],%rcx[51],%rcx[52],%rcx[53],%rcx[54],%rcx[55],
     %rcx[56],%rcx[57],%rcx[58],%rcx[59],%rcx[60],%rcx[61],%rcx[62],%rcx[63],
     0@bit,0@bit,0@bit,0@bit];
(* and    %r8,%rcx                                 #! PC = 0x555555582cfa *)
mov %rcx
    [0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     %rcx[8],%rcx[9],%rcx[10],%rcx[11],0@bit,0@bit,0@bit,0@bit,
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     %rcx[24],%rcx[25],%rcx[26],%rcx[27],0@bit,0@bit,0@bit,0@bit,
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     %rcx[40],%rcx[41],%rcx[42],%rcx[43],0@bit,0@bit,0@bit,0@bit,
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     %rcx[56],%rcx[57],%rcx[58],%rcx[59],0@bit,0@bit,0@bit,0@bit];
(* xor    %rax,%rcx                                #! PC = 0x555555582cfd *)
adds %dc %rcx %rax %rcx;
(* mov    %rcx,%rax                                #! PC = 0x555555582d00 *)
mov %rax %rcx;
(* shr    $0x4,%rax                                #! PC = 0x555555582d03 *)
mov %rax
    [%rax[4],%rax[5],%rax[6],%rax[7],
     %rax[8],%rax[9],%rax[10],%rax[11],%rax[12],%rax[13],%rax[14],%rax[15],
     %rax[16],%rax[17],%rax[18],%rax[19],%rax[20],%rax[21],%rax[22],%rax[23],
     %rax[24],%rax[25],%rax[26],%rax[27],%rax[28],%rax[29],%rax[30],%rax[31],
     %rax[32],%rax[33],%rax[34],%rax[35],%rax[36],%rax[37],%rax[38],%rax[39],
     %rax[40],%rax[41],%rax[42],%rax[43],%rax[44],%rax[45],%rax[46],%rax[47],
     %rax[48],%rax[49],%rax[50],%rax[51],%rax[52],%rax[53],%rax[54],%rax[55],
     %rax[56],%rax[57],%rax[58],%rax[59],%rax[60],%rax[61],%rax[62],%rax[63],
     0@bit,0@bit,0@bit,0@bit];
(* and    %rdi,%rax                                #! PC = 0x555555582d07 *)
mov %rax
    [0@bit,0@bit,0@bit,0@bit,%rax[4],%rax[5],%rax[6],%rax[7],
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     0@bit,0@bit,0@bit,0@bit,%rax[20],%rax[21],%rax[22],%rax[23],
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     0@bit,0@bit,0@bit,0@bit,%rax[36],%rax[37],%rax[38],%rax[39],
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     0@bit,0@bit,0@bit,0@bit,%rax[52],%rax[53],%rax[54],%rax[55],
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit];
(* xor    %rcx,%rax                                #! PC = 0x555555582d0a *)
adds %dc %rax %rcx %rax;
(* cmp    $0x2,%esi                                #! PC = 0x555555582d0d *)
(* cmp 0x2, esi *)
nop;
(* #je     0x555555582d48 <radix_conversions+584>  #! PC = 0x555555582d10 *)
#je     0x555555582d48 <radix_conversions+584>  #! 0x555555582d10 = 0x555555582d10;
(* mov    %rax,%rcx                                #! PC = 0x555555582d12 *)
mov %rcx %rax;
(* shr    $0x2,%rcx                                #! PC = 0x555555582d15 *)
mov %rcx
    [%rcx[2],%rcx[3],%rcx[4],%rcx[5],%rcx[6],%rcx[7],
     %rcx[8],%rcx[9],%rcx[10],%rcx[11],%rcx[12],%rcx[13],%rcx[14],%rcx[15],
     %rcx[16],%rcx[17],%rcx[18],%rcx[19],%rcx[20],%rcx[21],%rcx[22],%rcx[23],
     %rcx[24],%rcx[25],%rcx[26],%rcx[27],%rcx[28],%rcx[29],%rcx[30],%rcx[31],
     %rcx[32],%rcx[33],%rcx[34],%rcx[35],%rcx[36],%rcx[37],%rcx[38],%rcx[39],
     %rcx[40],%rcx[41],%rcx[42],%rcx[43],%rcx[44],%rcx[45],%rcx[46],%rcx[47],
     %rcx[48],%rcx[49],%rcx[50],%rcx[51],%rcx[52],%rcx[53],%rcx[54],%rcx[55],
     %rcx[56],%rcx[57],%rcx[58],%rcx[59],%rcx[60],%rcx[61],%rcx[62],%rcx[63],
     0@bit,0@bit];
(* and    %r10,%rcx                                #! PC = 0x555555582d19 *)
mov %rcx
    [0@bit,0@bit,0@bit,0@bit,%rcx[4],%rcx[5],0@bit,0@bit,
     0@bit,0@bit,0@bit,0@bit,%rcx[12],%rcx[13],0@bit,0@bit,
     0@bit,0@bit,0@bit,0@bit,%rcx[20],%rcx[21],0@bit,0@bit,
     0@bit,0@bit,0@bit,0@bit,%rcx[28],%rcx[29],0@bit,0@bit,
     0@bit,0@bit,0@bit,0@bit,%rcx[36],%rcx[37],0@bit,0@bit,
     0@bit,0@bit,0@bit,0@bit,%rcx[44],%rcx[45],0@bit,0@bit,
     0@bit,0@bit,0@bit,0@bit,%rcx[52],%rcx[53],0@bit,0@bit,
     0@bit,0@bit,0@bit,0@bit,%rcx[60],%rcx[61],0@bit,0@bit];
(* xor    %rax,%rcx                                #! PC = 0x555555582d1c *)
adds %dc %rcx %rax %rcx;
(* mov    %rcx,%rax                                #! PC = 0x555555582d1f *)
mov %rax %rcx;
(* shr    $0x2,%rax                                #! PC = 0x555555582d22 *)
mov %rax
    [%rax[2],%rax[3],%rax[4],%rax[5],%rax[6],%rax[7],
     %rax[8],%rax[9],%rax[10],%rax[11],%rax[12],%rax[13],%rax[14],%rax[15],
     %rax[16],%rax[17],%rax[18],%rax[19],%rax[20],%rax[21],%rax[22],%rax[23],
     %rax[24],%rax[25],%rax[26],%rax[27],%rax[28],%rax[29],%rax[30],%rax[31],
     %rax[32],%rax[33],%rax[34],%rax[35],%rax[36],%rax[37],%rax[38],%rax[39],
     %rax[40],%rax[41],%rax[42],%rax[43],%rax[44],%rax[45],%rax[46],%rax[47],
     %rax[48],%rax[49],%rax[50],%rax[51],%rax[52],%rax[53],%rax[54],%rax[55],
     %rax[56],%rax[57],%rax[58],%rax[59],%rax[60],%rax[61],%rax[62],%rax[63],
     0@bit,0@bit];
(* and    %r9,%rax                                 #! PC = 0x555555582d26 *)
mov %rax
    [0@bit,0@bit,%rax[2],%rax[3],0@bit,0@bit,0@bit,0@bit,
     0@bit,0@bit,%rax[10],%rax[11],0@bit,0@bit,0@bit,0@bit,
     0@bit,0@bit,%rax[18],%rax[19],0@bit,0@bit,0@bit,0@bit,
     0@bit,0@bit,%rax[26],%rax[27],0@bit,0@bit,0@bit,0@bit,
     0@bit,0@bit,%rax[34],%rax[35],0@bit,0@bit,0@bit,0@bit,
     0@bit,0@bit,%rax[42],%rax[43],0@bit,0@bit,0@bit,0@bit,
     0@bit,0@bit,%rax[50],%rax[51],0@bit,0@bit,0@bit,0@bit,
     0@bit,0@bit,%rax[58],%rax[59],0@bit,0@bit,0@bit,0@bit];
(* xor    %rcx,%rax                                #! PC = 0x555555582d29 *)
adds %dc %rax %rcx %rax;
(* test   %esi,%esi                                #! PC = 0x555555582d2c *)
(* test esi, esi *)
nop;
(* #jne    0x555555582d48 <radix_conversions+584>  #! PC = 0x555555582d2e *)
#jne    0x555555582d48 <radix_conversions+584>  #! 0x555555582d2e = 0x555555582d2e;
(* mov    %rax,(%rdx)                              #! EA = L0x7ffffff50cc0; PC = 0x555555582d48 *)
mov %L0x7ffffff50cc0 %rax;
(* add    $0x8,%rdx                                #! PC = 0x555555582d4b *)
(* add $0x8, rdx *)
nop;
(* cmp    %rdx,%r12                                #! PC = 0x555555582d4f *)
(* cmp rdx, r12 *)
nop;
(* #jne    0x555555582cb0 <radix_conversions+432>  #! PC = 0x555555582d52 *)
#jne    0x555555582cb0 <radix_conversions+432>  #! 0x555555582d52 = 0x555555582d52;
(* mov    (%rdx),%rax                              #! EA = L0x7ffffff50cc8; Value = 0x891a54bcfeb6e714; PC = 0x555555582cb0 *)
mov %rax %L0x7ffffff50cc8;
(* mov    %rax,%rcx                                #! PC = 0x555555582cb3 *)
mov %rcx %rax;
(* shr    $0x10,%rcx                               #! PC = 0x555555582cb6 *)
mov %rcx
    [%rcx[16],%rcx[17],%rcx[18],%rcx[19],%rcx[20],%rcx[21],%rcx[22],%rcx[23],
     %rcx[24],%rcx[25],%rcx[26],%rcx[27],%rcx[28],%rcx[29],%rcx[30],%rcx[31],
     %rcx[32],%rcx[33],%rcx[34],%rcx[35],%rcx[36],%rcx[37],%rcx[38],%rcx[39],
     %rcx[40],%rcx[41],%rcx[42],%rcx[43],%rcx[44],%rcx[45],%rcx[46],%rcx[47],
     %rcx[48],%rcx[49],%rcx[50],%rcx[51],%rcx[52],%rcx[53],%rcx[54],%rcx[55],
     %rcx[56],%rcx[57],%rcx[58],%rcx[59],%rcx[60],%rcx[61],%rcx[62],%rcx[63],
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit];
(* and    %rbx,%rcx                                #! PC = 0x555555582cba *)
mov %rcx
    [0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     %rcx[32],%rcx[33],%rcx[34],%rcx[35],%rcx[36],%rcx[37],%rcx[38],%rcx[39],
     %rcx[40],%rcx[41],%rcx[42],%rcx[43],%rcx[44],%rcx[45],%rcx[46],%rcx[47],
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit];
(* xor    %rax,%rcx                                #! PC = 0x555555582cbd *)
adds %dc %rcx %rax %rcx;
(* mov    %rcx,%rax                                #! PC = 0x555555582cc0 *)
mov %rax %rcx;
(* shr    $0x10,%rax                               #! PC = 0x555555582cc3 *)
mov %rax
    [%rax[16],%rax[17],%rax[18],%rax[19],%rax[20],%rax[21],%rax[22],%rax[23],
     %rax[24],%rax[25],%rax[26],%rax[27],%rax[28],%rax[29],%rax[30],%rax[31],
     %rax[32],%rax[33],%rax[34],%rax[35],%rax[36],%rax[37],%rax[38],%rax[39],
     %rax[40],%rax[41],%rax[42],%rax[43],%rax[44],%rax[45],%rax[46],%rax[47],
     %rax[48],%rax[49],%rax[50],%rax[51],%rax[52],%rax[53],%rax[54],%rax[55],
     %rax[56],%rax[57],%rax[58],%rax[59],%rax[60],%rax[61],%rax[62],%rax[63],
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit];
(* and    $0xffff0000,%eax                         #! PC = 0x555555582cc7 *)
mov %rax
    [0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     %rax[16],%rax[17],%rax[18],%rax[19],%rax[20],%rax[21],%rax[22],%rax[23],
     %rax[24],%rax[25],%rax[26],%rax[27],%rax[28],%rax[29],%rax[30],%rax[31],
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit];
(* xor    %rcx,%rax                                #! PC = 0x555555582ccc *)
adds %dc %rax %rcx %rax;
(* cmp    $0x4,%esi                                #! PC = 0x555555582ccf *)
(* cmp 0x4, esi *)
nop;
(* #je     0x555555582d48 <radix_conversions+584>  #! PC = 0x555555582cd2 *)
#je     0x555555582d48 <radix_conversions+584>  #! 0x555555582cd2 = 0x555555582cd2;
(* mov    %rax,%rcx                                #! PC = 0x555555582cd4 *)
mov %rcx %rax;
(* shr    $0x8,%rcx                                #! PC = 0x555555582cd7 *)
mov %rcx
    [%rcx[8],%rcx[9],%rcx[10],%rcx[11],%rcx[12],%rcx[13],%rcx[14],%rcx[15],
     %rcx[16],%rcx[17],%rcx[18],%rcx[19],%rcx[20],%rcx[21],%rcx[22],%rcx[23],
     %rcx[24],%rcx[25],%rcx[26],%rcx[27],%rcx[28],%rcx[29],%rcx[30],%rcx[31],
     %rcx[32],%rcx[33],%rcx[34],%rcx[35],%rcx[36],%rcx[37],%rcx[38],%rcx[39],
     %rcx[40],%rcx[41],%rcx[42],%rcx[43],%rcx[44],%rcx[45],%rcx[46],%rcx[47],
     %rcx[48],%rcx[49],%rcx[50],%rcx[51],%rcx[52],%rcx[53],%rcx[54],%rcx[55],
     %rcx[56],%rcx[57],%rcx[58],%rcx[59],%rcx[60],%rcx[61],%rcx[62],%rcx[63],
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit];
(* and    %r14,%rcx                                #! PC = 0x555555582cdb *)
mov %rcx
    [0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     %rcx[16],%rcx[17],%rcx[18],%rcx[19],%rcx[20],%rcx[21],%rcx[22],%rcx[23],
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     %rcx[48],%rcx[49],%rcx[50],%rcx[51],%rcx[52],%rcx[53],%rcx[54],%rcx[55],
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit];
(* xor    %rax,%rcx                                #! PC = 0x555555582cde *)
adds %dc %rcx %rax %rcx;
(* mov    %rcx,%rax                                #! PC = 0x555555582ce1 *)
mov %rax %rcx;
(* shr    $0x8,%rax                                #! PC = 0x555555582ce4 *)
mov %rax
    [%rax[8],%rax[9],%rax[10],%rax[11],%rax[12],%rax[13],%rax[14],%rax[15],
     %rax[16],%rax[17],%rax[18],%rax[19],%rax[20],%rax[21],%rax[22],%rax[23],
     %rax[24],%rax[25],%rax[26],%rax[27],%rax[28],%rax[29],%rax[30],%rax[31],
     %rax[32],%rax[33],%rax[34],%rax[35],%rax[36],%rax[37],%rax[38],%rax[39],
     %rax[40],%rax[41],%rax[42],%rax[43],%rax[44],%rax[45],%rax[46],%rax[47],
     %rax[48],%rax[49],%rax[50],%rax[51],%rax[52],%rax[53],%rax[54],%rax[55],
     %rax[56],%rax[57],%rax[58],%rax[59],%rax[60],%rax[61],%rax[62],%rax[63],
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit];
(* and    %r13,%rax                                #! PC = 0x555555582ce8 *)
mov %rax
    [0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     %rax[8],%rax[9],%rax[10],%rax[11],%rax[12],%rax[13],%rax[14],%rax[15],
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     %rax[40],%rax[41],%rax[42],%rax[43],%rax[44],%rax[45],%rax[46],%rax[47],
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit];
(* xor    %rcx,%rax                                #! PC = 0x555555582ceb *)
adds %dc %rax %rcx %rax;
(* cmp    $0x3,%esi                                #! PC = 0x555555582cee *)
(* cmp 0x3, esi *)
nop;
(* #je     0x555555582d48 <radix_conversions+584>  #! PC = 0x555555582cf1 *)
#je     0x555555582d48 <radix_conversions+584>  #! 0x555555582cf1 = 0x555555582cf1;
(* mov    %rax,%rcx                                #! PC = 0x555555582cf3 *)
mov %rcx %rax;
(* shr    $0x4,%rcx                                #! PC = 0x555555582cf6 *)
mov %rcx
    [%rcx[4],%rcx[5],%rcx[6],%rcx[7],
     %rcx[8],%rcx[9],%rcx[10],%rcx[11],%rcx[12],%rcx[13],%rcx[14],%rcx[15],
     %rcx[16],%rcx[17],%rcx[18],%rcx[19],%rcx[20],%rcx[21],%rcx[22],%rcx[23],
     %rcx[24],%rcx[25],%rcx[26],%rcx[27],%rcx[28],%rcx[29],%rcx[30],%rcx[31],
     %rcx[32],%rcx[33],%rcx[34],%rcx[35],%rcx[36],%rcx[37],%rcx[38],%rcx[39],
     %rcx[40],%rcx[41],%rcx[42],%rcx[43],%rcx[44],%rcx[45],%rcx[46],%rcx[47],
     %rcx[48],%rcx[49],%rcx[50],%rcx[51],%rcx[52],%rcx[53],%rcx[54],%rcx[55],
     %rcx[56],%rcx[57],%rcx[58],%rcx[59],%rcx[60],%rcx[61],%rcx[62],%rcx[63],
     0@bit,0@bit,0@bit,0@bit];
(* and    %r8,%rcx                                 #! PC = 0x555555582cfa *)
mov %rcx
    [0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     %rcx[8],%rcx[9],%rcx[10],%rcx[11],0@bit,0@bit,0@bit,0@bit,
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     %rcx[24],%rcx[25],%rcx[26],%rcx[27],0@bit,0@bit,0@bit,0@bit,
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     %rcx[40],%rcx[41],%rcx[42],%rcx[43],0@bit,0@bit,0@bit,0@bit,
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     %rcx[56],%rcx[57],%rcx[58],%rcx[59],0@bit,0@bit,0@bit,0@bit];
(* xor    %rax,%rcx                                #! PC = 0x555555582cfd *)
adds %dc %rcx %rax %rcx;
(* mov    %rcx,%rax                                #! PC = 0x555555582d00 *)
mov %rax %rcx;
(* shr    $0x4,%rax                                #! PC = 0x555555582d03 *)
mov %rax
    [%rax[4],%rax[5],%rax[6],%rax[7],
     %rax[8],%rax[9],%rax[10],%rax[11],%rax[12],%rax[13],%rax[14],%rax[15],
     %rax[16],%rax[17],%rax[18],%rax[19],%rax[20],%rax[21],%rax[22],%rax[23],
     %rax[24],%rax[25],%rax[26],%rax[27],%rax[28],%rax[29],%rax[30],%rax[31],
     %rax[32],%rax[33],%rax[34],%rax[35],%rax[36],%rax[37],%rax[38],%rax[39],
     %rax[40],%rax[41],%rax[42],%rax[43],%rax[44],%rax[45],%rax[46],%rax[47],
     %rax[48],%rax[49],%rax[50],%rax[51],%rax[52],%rax[53],%rax[54],%rax[55],
     %rax[56],%rax[57],%rax[58],%rax[59],%rax[60],%rax[61],%rax[62],%rax[63],
     0@bit,0@bit,0@bit,0@bit];
(* and    %rdi,%rax                                #! PC = 0x555555582d07 *)
mov %rax
    [0@bit,0@bit,0@bit,0@bit,%rax[4],%rax[5],%rax[6],%rax[7],
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     0@bit,0@bit,0@bit,0@bit,%rax[20],%rax[21],%rax[22],%rax[23],
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     0@bit,0@bit,0@bit,0@bit,%rax[36],%rax[37],%rax[38],%rax[39],
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     0@bit,0@bit,0@bit,0@bit,%rax[52],%rax[53],%rax[54],%rax[55],
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit];
(* xor    %rcx,%rax                                #! PC = 0x555555582d0a *)
adds %dc %rax %rcx %rax;
(* cmp    $0x2,%esi                                #! PC = 0x555555582d0d *)
(* cmp 0x2, esi *)
nop;
(* #je     0x555555582d48 <radix_conversions+584>  #! PC = 0x555555582d10 *)
#je     0x555555582d48 <radix_conversions+584>  #! 0x555555582d10 = 0x555555582d10;
(* mov    %rax,%rcx                                #! PC = 0x555555582d12 *)
mov %rcx %rax;
(* shr    $0x2,%rcx                                #! PC = 0x555555582d15 *)
mov %rcx
    [%rcx[2],%rcx[3],%rcx[4],%rcx[5],%rcx[6],%rcx[7],
     %rcx[8],%rcx[9],%rcx[10],%rcx[11],%rcx[12],%rcx[13],%rcx[14],%rcx[15],
     %rcx[16],%rcx[17],%rcx[18],%rcx[19],%rcx[20],%rcx[21],%rcx[22],%rcx[23],
     %rcx[24],%rcx[25],%rcx[26],%rcx[27],%rcx[28],%rcx[29],%rcx[30],%rcx[31],
     %rcx[32],%rcx[33],%rcx[34],%rcx[35],%rcx[36],%rcx[37],%rcx[38],%rcx[39],
     %rcx[40],%rcx[41],%rcx[42],%rcx[43],%rcx[44],%rcx[45],%rcx[46],%rcx[47],
     %rcx[48],%rcx[49],%rcx[50],%rcx[51],%rcx[52],%rcx[53],%rcx[54],%rcx[55],
     %rcx[56],%rcx[57],%rcx[58],%rcx[59],%rcx[60],%rcx[61],%rcx[62],%rcx[63],
     0@bit,0@bit];
(* and    %r10,%rcx                                #! PC = 0x555555582d19 *)
mov %rcx
    [0@bit,0@bit,0@bit,0@bit,%rcx[4],%rcx[5],0@bit,0@bit,
     0@bit,0@bit,0@bit,0@bit,%rcx[12],%rcx[13],0@bit,0@bit,
     0@bit,0@bit,0@bit,0@bit,%rcx[20],%rcx[21],0@bit,0@bit,
     0@bit,0@bit,0@bit,0@bit,%rcx[28],%rcx[29],0@bit,0@bit,
     0@bit,0@bit,0@bit,0@bit,%rcx[36],%rcx[37],0@bit,0@bit,
     0@bit,0@bit,0@bit,0@bit,%rcx[44],%rcx[45],0@bit,0@bit,
     0@bit,0@bit,0@bit,0@bit,%rcx[52],%rcx[53],0@bit,0@bit,
     0@bit,0@bit,0@bit,0@bit,%rcx[60],%rcx[61],0@bit,0@bit];
(* xor    %rax,%rcx                                #! PC = 0x555555582d1c *)
adds %dc %rcx %rax %rcx;
(* mov    %rcx,%rax                                #! PC = 0x555555582d1f *)
mov %rax %rcx;
(* shr    $0x2,%rax                                #! PC = 0x555555582d22 *)
mov %rax
    [%rax[2],%rax[3],%rax[4],%rax[5],%rax[6],%rax[7],
     %rax[8],%rax[9],%rax[10],%rax[11],%rax[12],%rax[13],%rax[14],%rax[15],
     %rax[16],%rax[17],%rax[18],%rax[19],%rax[20],%rax[21],%rax[22],%rax[23],
     %rax[24],%rax[25],%rax[26],%rax[27],%rax[28],%rax[29],%rax[30],%rax[31],
     %rax[32],%rax[33],%rax[34],%rax[35],%rax[36],%rax[37],%rax[38],%rax[39],
     %rax[40],%rax[41],%rax[42],%rax[43],%rax[44],%rax[45],%rax[46],%rax[47],
     %rax[48],%rax[49],%rax[50],%rax[51],%rax[52],%rax[53],%rax[54],%rax[55],
     %rax[56],%rax[57],%rax[58],%rax[59],%rax[60],%rax[61],%rax[62],%rax[63],
     0@bit,0@bit];
(* and    %r9,%rax                                 #! PC = 0x555555582d26 *)
mov %rax
    [0@bit,0@bit,%rax[2],%rax[3],0@bit,0@bit,0@bit,0@bit,
     0@bit,0@bit,%rax[10],%rax[11],0@bit,0@bit,0@bit,0@bit,
     0@bit,0@bit,%rax[18],%rax[19],0@bit,0@bit,0@bit,0@bit,
     0@bit,0@bit,%rax[26],%rax[27],0@bit,0@bit,0@bit,0@bit,
     0@bit,0@bit,%rax[34],%rax[35],0@bit,0@bit,0@bit,0@bit,
     0@bit,0@bit,%rax[42],%rax[43],0@bit,0@bit,0@bit,0@bit,
     0@bit,0@bit,%rax[50],%rax[51],0@bit,0@bit,0@bit,0@bit,
     0@bit,0@bit,%rax[58],%rax[59],0@bit,0@bit,0@bit,0@bit];
(* xor    %rcx,%rax                                #! PC = 0x555555582d29 *)
adds %dc %rax %rcx %rax;
(* test   %esi,%esi                                #! PC = 0x555555582d2c *)
(* test esi, esi *)
nop;
(* #jne    0x555555582d48 <radix_conversions+584>  #! PC = 0x555555582d2e *)
#jne    0x555555582d48 <radix_conversions+584>  #! 0x555555582d2e = 0x555555582d2e;
(* mov    %rax,(%rdx)                              #! EA = L0x7ffffff50cc8; PC = 0x555555582d48 *)
mov %L0x7ffffff50cc8 %rax;
(* add    $0x8,%rdx                                #! PC = 0x555555582d4b *)
(* add $0x8, rdx *)
nop;
(* cmp    %rdx,%r12                                #! PC = 0x555555582d4f *)
(* cmp rdx, r12 *)
nop;
(* #jne    0x555555582cb0 <radix_conversions+432>  #! PC = 0x555555582d52 *)
#jne    0x555555582cb0 <radix_conversions+432>  #! 0x555555582d52 = 0x555555582d52;
(* mov    (%rdx),%rax                              #! EA = L0x7ffffff50cd0; Value = 0xe18c3a428064d195; PC = 0x555555582cb0 *)
mov %rax %L0x7ffffff50cd0;
(* mov    %rax,%rcx                                #! PC = 0x555555582cb3 *)
mov %rcx %rax;
(* shr    $0x10,%rcx                               #! PC = 0x555555582cb6 *)
mov %rcx
    [%rcx[16],%rcx[17],%rcx[18],%rcx[19],%rcx[20],%rcx[21],%rcx[22],%rcx[23],
     %rcx[24],%rcx[25],%rcx[26],%rcx[27],%rcx[28],%rcx[29],%rcx[30],%rcx[31],
     %rcx[32],%rcx[33],%rcx[34],%rcx[35],%rcx[36],%rcx[37],%rcx[38],%rcx[39],
     %rcx[40],%rcx[41],%rcx[42],%rcx[43],%rcx[44],%rcx[45],%rcx[46],%rcx[47],
     %rcx[48],%rcx[49],%rcx[50],%rcx[51],%rcx[52],%rcx[53],%rcx[54],%rcx[55],
     %rcx[56],%rcx[57],%rcx[58],%rcx[59],%rcx[60],%rcx[61],%rcx[62],%rcx[63],
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit];
(* and    %rbx,%rcx                                #! PC = 0x555555582cba *)
mov %rcx
    [0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     %rcx[32],%rcx[33],%rcx[34],%rcx[35],%rcx[36],%rcx[37],%rcx[38],%rcx[39],
     %rcx[40],%rcx[41],%rcx[42],%rcx[43],%rcx[44],%rcx[45],%rcx[46],%rcx[47],
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit];
(* xor    %rax,%rcx                                #! PC = 0x555555582cbd *)
adds %dc %rcx %rax %rcx;
(* mov    %rcx,%rax                                #! PC = 0x555555582cc0 *)
mov %rax %rcx;
(* shr    $0x10,%rax                               #! PC = 0x555555582cc3 *)
mov %rax
    [%rax[16],%rax[17],%rax[18],%rax[19],%rax[20],%rax[21],%rax[22],%rax[23],
     %rax[24],%rax[25],%rax[26],%rax[27],%rax[28],%rax[29],%rax[30],%rax[31],
     %rax[32],%rax[33],%rax[34],%rax[35],%rax[36],%rax[37],%rax[38],%rax[39],
     %rax[40],%rax[41],%rax[42],%rax[43],%rax[44],%rax[45],%rax[46],%rax[47],
     %rax[48],%rax[49],%rax[50],%rax[51],%rax[52],%rax[53],%rax[54],%rax[55],
     %rax[56],%rax[57],%rax[58],%rax[59],%rax[60],%rax[61],%rax[62],%rax[63],
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit];
(* and    $0xffff0000,%eax                         #! PC = 0x555555582cc7 *)
mov %rax
    [0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     %rax[16],%rax[17],%rax[18],%rax[19],%rax[20],%rax[21],%rax[22],%rax[23],
     %rax[24],%rax[25],%rax[26],%rax[27],%rax[28],%rax[29],%rax[30],%rax[31],
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit];
(* xor    %rcx,%rax                                #! PC = 0x555555582ccc *)
adds %dc %rax %rcx %rax;
(* cmp    $0x4,%esi                                #! PC = 0x555555582ccf *)
(* cmp 0x4, esi *)
nop;
(* #je     0x555555582d48 <radix_conversions+584>  #! PC = 0x555555582cd2 *)
#je     0x555555582d48 <radix_conversions+584>  #! 0x555555582cd2 = 0x555555582cd2;
(* mov    %rax,%rcx                                #! PC = 0x555555582cd4 *)
mov %rcx %rax;
(* shr    $0x8,%rcx                                #! PC = 0x555555582cd7 *)
mov %rcx
    [%rcx[8],%rcx[9],%rcx[10],%rcx[11],%rcx[12],%rcx[13],%rcx[14],%rcx[15],
     %rcx[16],%rcx[17],%rcx[18],%rcx[19],%rcx[20],%rcx[21],%rcx[22],%rcx[23],
     %rcx[24],%rcx[25],%rcx[26],%rcx[27],%rcx[28],%rcx[29],%rcx[30],%rcx[31],
     %rcx[32],%rcx[33],%rcx[34],%rcx[35],%rcx[36],%rcx[37],%rcx[38],%rcx[39],
     %rcx[40],%rcx[41],%rcx[42],%rcx[43],%rcx[44],%rcx[45],%rcx[46],%rcx[47],
     %rcx[48],%rcx[49],%rcx[50],%rcx[51],%rcx[52],%rcx[53],%rcx[54],%rcx[55],
     %rcx[56],%rcx[57],%rcx[58],%rcx[59],%rcx[60],%rcx[61],%rcx[62],%rcx[63],
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit];
(* and    %r14,%rcx                                #! PC = 0x555555582cdb *)
mov %rcx
    [0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     %rcx[16],%rcx[17],%rcx[18],%rcx[19],%rcx[20],%rcx[21],%rcx[22],%rcx[23],
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     %rcx[48],%rcx[49],%rcx[50],%rcx[51],%rcx[52],%rcx[53],%rcx[54],%rcx[55],
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit];
(* xor    %rax,%rcx                                #! PC = 0x555555582cde *)
adds %dc %rcx %rax %rcx;
(* mov    %rcx,%rax                                #! PC = 0x555555582ce1 *)
mov %rax %rcx;
(* shr    $0x8,%rax                                #! PC = 0x555555582ce4 *)
mov %rax
    [%rax[8],%rax[9],%rax[10],%rax[11],%rax[12],%rax[13],%rax[14],%rax[15],
     %rax[16],%rax[17],%rax[18],%rax[19],%rax[20],%rax[21],%rax[22],%rax[23],
     %rax[24],%rax[25],%rax[26],%rax[27],%rax[28],%rax[29],%rax[30],%rax[31],
     %rax[32],%rax[33],%rax[34],%rax[35],%rax[36],%rax[37],%rax[38],%rax[39],
     %rax[40],%rax[41],%rax[42],%rax[43],%rax[44],%rax[45],%rax[46],%rax[47],
     %rax[48],%rax[49],%rax[50],%rax[51],%rax[52],%rax[53],%rax[54],%rax[55],
     %rax[56],%rax[57],%rax[58],%rax[59],%rax[60],%rax[61],%rax[62],%rax[63],
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit];
(* and    %r13,%rax                                #! PC = 0x555555582ce8 *)
mov %rax
    [0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     %rax[8],%rax[9],%rax[10],%rax[11],%rax[12],%rax[13],%rax[14],%rax[15],
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     %rax[40],%rax[41],%rax[42],%rax[43],%rax[44],%rax[45],%rax[46],%rax[47],
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit];
(* xor    %rcx,%rax                                #! PC = 0x555555582ceb *)
adds %dc %rax %rcx %rax;
(* cmp    $0x3,%esi                                #! PC = 0x555555582cee *)
(* cmp 0x3, esi *)
nop;
(* #je     0x555555582d48 <radix_conversions+584>  #! PC = 0x555555582cf1 *)
#je     0x555555582d48 <radix_conversions+584>  #! 0x555555582cf1 = 0x555555582cf1;
(* mov    %rax,%rcx                                #! PC = 0x555555582cf3 *)
mov %rcx %rax;
(* shr    $0x4,%rcx                                #! PC = 0x555555582cf6 *)
mov %rcx
    [%rcx[4],%rcx[5],%rcx[6],%rcx[7],
     %rcx[8],%rcx[9],%rcx[10],%rcx[11],%rcx[12],%rcx[13],%rcx[14],%rcx[15],
     %rcx[16],%rcx[17],%rcx[18],%rcx[19],%rcx[20],%rcx[21],%rcx[22],%rcx[23],
     %rcx[24],%rcx[25],%rcx[26],%rcx[27],%rcx[28],%rcx[29],%rcx[30],%rcx[31],
     %rcx[32],%rcx[33],%rcx[34],%rcx[35],%rcx[36],%rcx[37],%rcx[38],%rcx[39],
     %rcx[40],%rcx[41],%rcx[42],%rcx[43],%rcx[44],%rcx[45],%rcx[46],%rcx[47],
     %rcx[48],%rcx[49],%rcx[50],%rcx[51],%rcx[52],%rcx[53],%rcx[54],%rcx[55],
     %rcx[56],%rcx[57],%rcx[58],%rcx[59],%rcx[60],%rcx[61],%rcx[62],%rcx[63],
     0@bit,0@bit,0@bit,0@bit];
(* and    %r8,%rcx                                 #! PC = 0x555555582cfa *)
mov %rcx
    [0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     %rcx[8],%rcx[9],%rcx[10],%rcx[11],0@bit,0@bit,0@bit,0@bit,
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     %rcx[24],%rcx[25],%rcx[26],%rcx[27],0@bit,0@bit,0@bit,0@bit,
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     %rcx[40],%rcx[41],%rcx[42],%rcx[43],0@bit,0@bit,0@bit,0@bit,
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     %rcx[56],%rcx[57],%rcx[58],%rcx[59],0@bit,0@bit,0@bit,0@bit];
(* xor    %rax,%rcx                                #! PC = 0x555555582cfd *)
adds %dc %rcx %rax %rcx;
(* mov    %rcx,%rax                                #! PC = 0x555555582d00 *)
mov %rax %rcx;
(* shr    $0x4,%rax                                #! PC = 0x555555582d03 *)
mov %rax
    [%rax[4],%rax[5],%rax[6],%rax[7],
     %rax[8],%rax[9],%rax[10],%rax[11],%rax[12],%rax[13],%rax[14],%rax[15],
     %rax[16],%rax[17],%rax[18],%rax[19],%rax[20],%rax[21],%rax[22],%rax[23],
     %rax[24],%rax[25],%rax[26],%rax[27],%rax[28],%rax[29],%rax[30],%rax[31],
     %rax[32],%rax[33],%rax[34],%rax[35],%rax[36],%rax[37],%rax[38],%rax[39],
     %rax[40],%rax[41],%rax[42],%rax[43],%rax[44],%rax[45],%rax[46],%rax[47],
     %rax[48],%rax[49],%rax[50],%rax[51],%rax[52],%rax[53],%rax[54],%rax[55],
     %rax[56],%rax[57],%rax[58],%rax[59],%rax[60],%rax[61],%rax[62],%rax[63],
     0@bit,0@bit,0@bit,0@bit];
(* and    %rdi,%rax                                #! PC = 0x555555582d07 *)
mov %rax
    [0@bit,0@bit,0@bit,0@bit,%rax[4],%rax[5],%rax[6],%rax[7],
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     0@bit,0@bit,0@bit,0@bit,%rax[20],%rax[21],%rax[22],%rax[23],
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     0@bit,0@bit,0@bit,0@bit,%rax[36],%rax[37],%rax[38],%rax[39],
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     0@bit,0@bit,0@bit,0@bit,%rax[52],%rax[53],%rax[54],%rax[55],
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit];
(* xor    %rcx,%rax                                #! PC = 0x555555582d0a *)
adds %dc %rax %rcx %rax;
(* cmp    $0x2,%esi                                #! PC = 0x555555582d0d *)
(* cmp 0x2, esi *)
nop;
(* #je     0x555555582d48 <radix_conversions+584>  #! PC = 0x555555582d10 *)
#je     0x555555582d48 <radix_conversions+584>  #! 0x555555582d10 = 0x555555582d10;
(* mov    %rax,%rcx                                #! PC = 0x555555582d12 *)
mov %rcx %rax;
(* shr    $0x2,%rcx                                #! PC = 0x555555582d15 *)
mov %rcx
    [%rcx[2],%rcx[3],%rcx[4],%rcx[5],%rcx[6],%rcx[7],
     %rcx[8],%rcx[9],%rcx[10],%rcx[11],%rcx[12],%rcx[13],%rcx[14],%rcx[15],
     %rcx[16],%rcx[17],%rcx[18],%rcx[19],%rcx[20],%rcx[21],%rcx[22],%rcx[23],
     %rcx[24],%rcx[25],%rcx[26],%rcx[27],%rcx[28],%rcx[29],%rcx[30],%rcx[31],
     %rcx[32],%rcx[33],%rcx[34],%rcx[35],%rcx[36],%rcx[37],%rcx[38],%rcx[39],
     %rcx[40],%rcx[41],%rcx[42],%rcx[43],%rcx[44],%rcx[45],%rcx[46],%rcx[47],
     %rcx[48],%rcx[49],%rcx[50],%rcx[51],%rcx[52],%rcx[53],%rcx[54],%rcx[55],
     %rcx[56],%rcx[57],%rcx[58],%rcx[59],%rcx[60],%rcx[61],%rcx[62],%rcx[63],
     0@bit,0@bit];
(* and    %r10,%rcx                                #! PC = 0x555555582d19 *)
mov %rcx
    [0@bit,0@bit,0@bit,0@bit,%rcx[4],%rcx[5],0@bit,0@bit,
     0@bit,0@bit,0@bit,0@bit,%rcx[12],%rcx[13],0@bit,0@bit,
     0@bit,0@bit,0@bit,0@bit,%rcx[20],%rcx[21],0@bit,0@bit,
     0@bit,0@bit,0@bit,0@bit,%rcx[28],%rcx[29],0@bit,0@bit,
     0@bit,0@bit,0@bit,0@bit,%rcx[36],%rcx[37],0@bit,0@bit,
     0@bit,0@bit,0@bit,0@bit,%rcx[44],%rcx[45],0@bit,0@bit,
     0@bit,0@bit,0@bit,0@bit,%rcx[52],%rcx[53],0@bit,0@bit,
     0@bit,0@bit,0@bit,0@bit,%rcx[60],%rcx[61],0@bit,0@bit];
(* xor    %rax,%rcx                                #! PC = 0x555555582d1c *)
adds %dc %rcx %rax %rcx;
(* mov    %rcx,%rax                                #! PC = 0x555555582d1f *)
mov %rax %rcx;
(* shr    $0x2,%rax                                #! PC = 0x555555582d22 *)
mov %rax
    [%rax[2],%rax[3],%rax[4],%rax[5],%rax[6],%rax[7],
     %rax[8],%rax[9],%rax[10],%rax[11],%rax[12],%rax[13],%rax[14],%rax[15],
     %rax[16],%rax[17],%rax[18],%rax[19],%rax[20],%rax[21],%rax[22],%rax[23],
     %rax[24],%rax[25],%rax[26],%rax[27],%rax[28],%rax[29],%rax[30],%rax[31],
     %rax[32],%rax[33],%rax[34],%rax[35],%rax[36],%rax[37],%rax[38],%rax[39],
     %rax[40],%rax[41],%rax[42],%rax[43],%rax[44],%rax[45],%rax[46],%rax[47],
     %rax[48],%rax[49],%rax[50],%rax[51],%rax[52],%rax[53],%rax[54],%rax[55],
     %rax[56],%rax[57],%rax[58],%rax[59],%rax[60],%rax[61],%rax[62],%rax[63],
     0@bit,0@bit];
(* and    %r9,%rax                                 #! PC = 0x555555582d26 *)
mov %rax
    [0@bit,0@bit,%rax[2],%rax[3],0@bit,0@bit,0@bit,0@bit,
     0@bit,0@bit,%rax[10],%rax[11],0@bit,0@bit,0@bit,0@bit,
     0@bit,0@bit,%rax[18],%rax[19],0@bit,0@bit,0@bit,0@bit,
     0@bit,0@bit,%rax[26],%rax[27],0@bit,0@bit,0@bit,0@bit,
     0@bit,0@bit,%rax[34],%rax[35],0@bit,0@bit,0@bit,0@bit,
     0@bit,0@bit,%rax[42],%rax[43],0@bit,0@bit,0@bit,0@bit,
     0@bit,0@bit,%rax[50],%rax[51],0@bit,0@bit,0@bit,0@bit,
     0@bit,0@bit,%rax[58],%rax[59],0@bit,0@bit,0@bit,0@bit];
(* xor    %rcx,%rax                                #! PC = 0x555555582d29 *)
adds %dc %rax %rcx %rax;
(* test   %esi,%esi                                #! PC = 0x555555582d2c *)
(* test esi, esi *)
nop;
(* #jne    0x555555582d48 <radix_conversions+584>  #! PC = 0x555555582d2e *)
#jne    0x555555582d48 <radix_conversions+584>  #! 0x555555582d2e = 0x555555582d2e;
(* mov    %rax,(%rdx)                              #! EA = L0x7ffffff50cd0; PC = 0x555555582d48 *)
mov %L0x7ffffff50cd0 %rax;
(* add    $0x8,%rdx                                #! PC = 0x555555582d4b *)
(* add $0x8, rdx *)
nop;
(* cmp    %rdx,%r12                                #! PC = 0x555555582d4f *)
(* cmp rdx, r12 *)
nop;
(* #jne    0x555555582cb0 <radix_conversions+432>  #! PC = 0x555555582d52 *)
#jne    0x555555582cb0 <radix_conversions+432>  #! 0x555555582d52 = 0x555555582d52;
(* mov    (%rdx),%rax                              #! EA = L0x7ffffff50cd8; Value = 0x6f5f7c6addfd40ed; PC = 0x555555582cb0 *)
mov %rax %L0x7ffffff50cd8;
(* mov    %rax,%rcx                                #! PC = 0x555555582cb3 *)
mov %rcx %rax;
(* shr    $0x10,%rcx                               #! PC = 0x555555582cb6 *)
mov %rcx
    [%rcx[16],%rcx[17],%rcx[18],%rcx[19],%rcx[20],%rcx[21],%rcx[22],%rcx[23],
     %rcx[24],%rcx[25],%rcx[26],%rcx[27],%rcx[28],%rcx[29],%rcx[30],%rcx[31],
     %rcx[32],%rcx[33],%rcx[34],%rcx[35],%rcx[36],%rcx[37],%rcx[38],%rcx[39],
     %rcx[40],%rcx[41],%rcx[42],%rcx[43],%rcx[44],%rcx[45],%rcx[46],%rcx[47],
     %rcx[48],%rcx[49],%rcx[50],%rcx[51],%rcx[52],%rcx[53],%rcx[54],%rcx[55],
     %rcx[56],%rcx[57],%rcx[58],%rcx[59],%rcx[60],%rcx[61],%rcx[62],%rcx[63],
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit];
(* and    %rbx,%rcx                                #! PC = 0x555555582cba *)
mov %rcx
    [0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     %rcx[32],%rcx[33],%rcx[34],%rcx[35],%rcx[36],%rcx[37],%rcx[38],%rcx[39],
     %rcx[40],%rcx[41],%rcx[42],%rcx[43],%rcx[44],%rcx[45],%rcx[46],%rcx[47],
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit];
(* xor    %rax,%rcx                                #! PC = 0x555555582cbd *)
adds %dc %rcx %rax %rcx;
(* mov    %rcx,%rax                                #! PC = 0x555555582cc0 *)
mov %rax %rcx;
(* shr    $0x10,%rax                               #! PC = 0x555555582cc3 *)
mov %rax
    [%rax[16],%rax[17],%rax[18],%rax[19],%rax[20],%rax[21],%rax[22],%rax[23],
     %rax[24],%rax[25],%rax[26],%rax[27],%rax[28],%rax[29],%rax[30],%rax[31],
     %rax[32],%rax[33],%rax[34],%rax[35],%rax[36],%rax[37],%rax[38],%rax[39],
     %rax[40],%rax[41],%rax[42],%rax[43],%rax[44],%rax[45],%rax[46],%rax[47],
     %rax[48],%rax[49],%rax[50],%rax[51],%rax[52],%rax[53],%rax[54],%rax[55],
     %rax[56],%rax[57],%rax[58],%rax[59],%rax[60],%rax[61],%rax[62],%rax[63],
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit];
(* and    $0xffff0000,%eax                         #! PC = 0x555555582cc7 *)
mov %rax
    [0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     %rax[16],%rax[17],%rax[18],%rax[19],%rax[20],%rax[21],%rax[22],%rax[23],
     %rax[24],%rax[25],%rax[26],%rax[27],%rax[28],%rax[29],%rax[30],%rax[31],
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit];
(* xor    %rcx,%rax                                #! PC = 0x555555582ccc *)
adds %dc %rax %rcx %rax;
(* cmp    $0x4,%esi                                #! PC = 0x555555582ccf *)
(* cmp 0x4, esi *)
nop;
(* #je     0x555555582d48 <radix_conversions+584>  #! PC = 0x555555582cd2 *)
#je     0x555555582d48 <radix_conversions+584>  #! 0x555555582cd2 = 0x555555582cd2;
(* mov    %rax,%rcx                                #! PC = 0x555555582cd4 *)
mov %rcx %rax;
(* shr    $0x8,%rcx                                #! PC = 0x555555582cd7 *)
mov %rcx
    [%rcx[8],%rcx[9],%rcx[10],%rcx[11],%rcx[12],%rcx[13],%rcx[14],%rcx[15],
     %rcx[16],%rcx[17],%rcx[18],%rcx[19],%rcx[20],%rcx[21],%rcx[22],%rcx[23],
     %rcx[24],%rcx[25],%rcx[26],%rcx[27],%rcx[28],%rcx[29],%rcx[30],%rcx[31],
     %rcx[32],%rcx[33],%rcx[34],%rcx[35],%rcx[36],%rcx[37],%rcx[38],%rcx[39],
     %rcx[40],%rcx[41],%rcx[42],%rcx[43],%rcx[44],%rcx[45],%rcx[46],%rcx[47],
     %rcx[48],%rcx[49],%rcx[50],%rcx[51],%rcx[52],%rcx[53],%rcx[54],%rcx[55],
     %rcx[56],%rcx[57],%rcx[58],%rcx[59],%rcx[60],%rcx[61],%rcx[62],%rcx[63],
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit];
(* and    %r14,%rcx                                #! PC = 0x555555582cdb *)
mov %rcx
    [0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     %rcx[16],%rcx[17],%rcx[18],%rcx[19],%rcx[20],%rcx[21],%rcx[22],%rcx[23],
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     %rcx[48],%rcx[49],%rcx[50],%rcx[51],%rcx[52],%rcx[53],%rcx[54],%rcx[55],
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit];
(* xor    %rax,%rcx                                #! PC = 0x555555582cde *)
adds %dc %rcx %rax %rcx;
(* mov    %rcx,%rax                                #! PC = 0x555555582ce1 *)
mov %rax %rcx;
(* shr    $0x8,%rax                                #! PC = 0x555555582ce4 *)
mov %rax
    [%rax[8],%rax[9],%rax[10],%rax[11],%rax[12],%rax[13],%rax[14],%rax[15],
     %rax[16],%rax[17],%rax[18],%rax[19],%rax[20],%rax[21],%rax[22],%rax[23],
     %rax[24],%rax[25],%rax[26],%rax[27],%rax[28],%rax[29],%rax[30],%rax[31],
     %rax[32],%rax[33],%rax[34],%rax[35],%rax[36],%rax[37],%rax[38],%rax[39],
     %rax[40],%rax[41],%rax[42],%rax[43],%rax[44],%rax[45],%rax[46],%rax[47],
     %rax[48],%rax[49],%rax[50],%rax[51],%rax[52],%rax[53],%rax[54],%rax[55],
     %rax[56],%rax[57],%rax[58],%rax[59],%rax[60],%rax[61],%rax[62],%rax[63],
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit];
(* and    %r13,%rax                                #! PC = 0x555555582ce8 *)
mov %rax
    [0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     %rax[8],%rax[9],%rax[10],%rax[11],%rax[12],%rax[13],%rax[14],%rax[15],
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     %rax[40],%rax[41],%rax[42],%rax[43],%rax[44],%rax[45],%rax[46],%rax[47],
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit];
(* xor    %rcx,%rax                                #! PC = 0x555555582ceb *)
adds %dc %rax %rcx %rax;
(* cmp    $0x3,%esi                                #! PC = 0x555555582cee *)
(* cmp 0x3, esi *)
nop;
(* #je     0x555555582d48 <radix_conversions+584>  #! PC = 0x555555582cf1 *)
#je     0x555555582d48 <radix_conversions+584>  #! 0x555555582cf1 = 0x555555582cf1;
(* mov    %rax,%rcx                                #! PC = 0x555555582cf3 *)
mov %rcx %rax;
(* shr    $0x4,%rcx                                #! PC = 0x555555582cf6 *)
mov %rcx
    [%rcx[4],%rcx[5],%rcx[6],%rcx[7],
     %rcx[8],%rcx[9],%rcx[10],%rcx[11],%rcx[12],%rcx[13],%rcx[14],%rcx[15],
     %rcx[16],%rcx[17],%rcx[18],%rcx[19],%rcx[20],%rcx[21],%rcx[22],%rcx[23],
     %rcx[24],%rcx[25],%rcx[26],%rcx[27],%rcx[28],%rcx[29],%rcx[30],%rcx[31],
     %rcx[32],%rcx[33],%rcx[34],%rcx[35],%rcx[36],%rcx[37],%rcx[38],%rcx[39],
     %rcx[40],%rcx[41],%rcx[42],%rcx[43],%rcx[44],%rcx[45],%rcx[46],%rcx[47],
     %rcx[48],%rcx[49],%rcx[50],%rcx[51],%rcx[52],%rcx[53],%rcx[54],%rcx[55],
     %rcx[56],%rcx[57],%rcx[58],%rcx[59],%rcx[60],%rcx[61],%rcx[62],%rcx[63],
     0@bit,0@bit,0@bit,0@bit];
(* and    %r8,%rcx                                 #! PC = 0x555555582cfa *)
mov %rcx
    [0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     %rcx[8],%rcx[9],%rcx[10],%rcx[11],0@bit,0@bit,0@bit,0@bit,
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     %rcx[24],%rcx[25],%rcx[26],%rcx[27],0@bit,0@bit,0@bit,0@bit,
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     %rcx[40],%rcx[41],%rcx[42],%rcx[43],0@bit,0@bit,0@bit,0@bit,
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     %rcx[56],%rcx[57],%rcx[58],%rcx[59],0@bit,0@bit,0@bit,0@bit];
(* xor    %rax,%rcx                                #! PC = 0x555555582cfd *)
adds %dc %rcx %rax %rcx;
(* mov    %rcx,%rax                                #! PC = 0x555555582d00 *)
mov %rax %rcx;
(* shr    $0x4,%rax                                #! PC = 0x555555582d03 *)
mov %rax
    [%rax[4],%rax[5],%rax[6],%rax[7],
     %rax[8],%rax[9],%rax[10],%rax[11],%rax[12],%rax[13],%rax[14],%rax[15],
     %rax[16],%rax[17],%rax[18],%rax[19],%rax[20],%rax[21],%rax[22],%rax[23],
     %rax[24],%rax[25],%rax[26],%rax[27],%rax[28],%rax[29],%rax[30],%rax[31],
     %rax[32],%rax[33],%rax[34],%rax[35],%rax[36],%rax[37],%rax[38],%rax[39],
     %rax[40],%rax[41],%rax[42],%rax[43],%rax[44],%rax[45],%rax[46],%rax[47],
     %rax[48],%rax[49],%rax[50],%rax[51],%rax[52],%rax[53],%rax[54],%rax[55],
     %rax[56],%rax[57],%rax[58],%rax[59],%rax[60],%rax[61],%rax[62],%rax[63],
     0@bit,0@bit,0@bit,0@bit];
(* and    %rdi,%rax                                #! PC = 0x555555582d07 *)
mov %rax
    [0@bit,0@bit,0@bit,0@bit,%rax[4],%rax[5],%rax[6],%rax[7],
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     0@bit,0@bit,0@bit,0@bit,%rax[20],%rax[21],%rax[22],%rax[23],
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     0@bit,0@bit,0@bit,0@bit,%rax[36],%rax[37],%rax[38],%rax[39],
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     0@bit,0@bit,0@bit,0@bit,%rax[52],%rax[53],%rax[54],%rax[55],
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit];
(* xor    %rcx,%rax                                #! PC = 0x555555582d0a *)
adds %dc %rax %rcx %rax;
(* cmp    $0x2,%esi                                #! PC = 0x555555582d0d *)
(* cmp 0x2, esi *)
nop;
(* #je     0x555555582d48 <radix_conversions+584>  #! PC = 0x555555582d10 *)
#je     0x555555582d48 <radix_conversions+584>  #! 0x555555582d10 = 0x555555582d10;
(* mov    %rax,%rcx                                #! PC = 0x555555582d12 *)
mov %rcx %rax;
(* shr    $0x2,%rcx                                #! PC = 0x555555582d15 *)
mov %rcx
    [%rcx[2],%rcx[3],%rcx[4],%rcx[5],%rcx[6],%rcx[7],
     %rcx[8],%rcx[9],%rcx[10],%rcx[11],%rcx[12],%rcx[13],%rcx[14],%rcx[15],
     %rcx[16],%rcx[17],%rcx[18],%rcx[19],%rcx[20],%rcx[21],%rcx[22],%rcx[23],
     %rcx[24],%rcx[25],%rcx[26],%rcx[27],%rcx[28],%rcx[29],%rcx[30],%rcx[31],
     %rcx[32],%rcx[33],%rcx[34],%rcx[35],%rcx[36],%rcx[37],%rcx[38],%rcx[39],
     %rcx[40],%rcx[41],%rcx[42],%rcx[43],%rcx[44],%rcx[45],%rcx[46],%rcx[47],
     %rcx[48],%rcx[49],%rcx[50],%rcx[51],%rcx[52],%rcx[53],%rcx[54],%rcx[55],
     %rcx[56],%rcx[57],%rcx[58],%rcx[59],%rcx[60],%rcx[61],%rcx[62],%rcx[63],
     0@bit,0@bit];
(* and    %r10,%rcx                                #! PC = 0x555555582d19 *)
mov %rcx
    [0@bit,0@bit,0@bit,0@bit,%rcx[4],%rcx[5],0@bit,0@bit,
     0@bit,0@bit,0@bit,0@bit,%rcx[12],%rcx[13],0@bit,0@bit,
     0@bit,0@bit,0@bit,0@bit,%rcx[20],%rcx[21],0@bit,0@bit,
     0@bit,0@bit,0@bit,0@bit,%rcx[28],%rcx[29],0@bit,0@bit,
     0@bit,0@bit,0@bit,0@bit,%rcx[36],%rcx[37],0@bit,0@bit,
     0@bit,0@bit,0@bit,0@bit,%rcx[44],%rcx[45],0@bit,0@bit,
     0@bit,0@bit,0@bit,0@bit,%rcx[52],%rcx[53],0@bit,0@bit,
     0@bit,0@bit,0@bit,0@bit,%rcx[60],%rcx[61],0@bit,0@bit];
(* xor    %rax,%rcx                                #! PC = 0x555555582d1c *)
adds %dc %rcx %rax %rcx;
(* mov    %rcx,%rax                                #! PC = 0x555555582d1f *)
mov %rax %rcx;
(* shr    $0x2,%rax                                #! PC = 0x555555582d22 *)
mov %rax
    [%rax[2],%rax[3],%rax[4],%rax[5],%rax[6],%rax[7],
     %rax[8],%rax[9],%rax[10],%rax[11],%rax[12],%rax[13],%rax[14],%rax[15],
     %rax[16],%rax[17],%rax[18],%rax[19],%rax[20],%rax[21],%rax[22],%rax[23],
     %rax[24],%rax[25],%rax[26],%rax[27],%rax[28],%rax[29],%rax[30],%rax[31],
     %rax[32],%rax[33],%rax[34],%rax[35],%rax[36],%rax[37],%rax[38],%rax[39],
     %rax[40],%rax[41],%rax[42],%rax[43],%rax[44],%rax[45],%rax[46],%rax[47],
     %rax[48],%rax[49],%rax[50],%rax[51],%rax[52],%rax[53],%rax[54],%rax[55],
     %rax[56],%rax[57],%rax[58],%rax[59],%rax[60],%rax[61],%rax[62],%rax[63],
     0@bit,0@bit];
(* and    %r9,%rax                                 #! PC = 0x555555582d26 *)
mov %rax
    [0@bit,0@bit,%rax[2],%rax[3],0@bit,0@bit,0@bit,0@bit,
     0@bit,0@bit,%rax[10],%rax[11],0@bit,0@bit,0@bit,0@bit,
     0@bit,0@bit,%rax[18],%rax[19],0@bit,0@bit,0@bit,0@bit,
     0@bit,0@bit,%rax[26],%rax[27],0@bit,0@bit,0@bit,0@bit,
     0@bit,0@bit,%rax[34],%rax[35],0@bit,0@bit,0@bit,0@bit,
     0@bit,0@bit,%rax[42],%rax[43],0@bit,0@bit,0@bit,0@bit,
     0@bit,0@bit,%rax[50],%rax[51],0@bit,0@bit,0@bit,0@bit,
     0@bit,0@bit,%rax[58],%rax[59],0@bit,0@bit,0@bit,0@bit];
(* xor    %rcx,%rax                                #! PC = 0x555555582d29 *)
adds %dc %rax %rcx %rax;
(* test   %esi,%esi                                #! PC = 0x555555582d2c *)
(* test esi, esi *)
nop;
(* #jne    0x555555582d48 <radix_conversions+584>  #! PC = 0x555555582d2e *)
#jne    0x555555582d48 <radix_conversions+584>  #! 0x555555582d2e = 0x555555582d2e;
(* mov    %rax,(%rdx)                              #! EA = L0x7ffffff50cd8; PC = 0x555555582d48 *)
mov %L0x7ffffff50cd8 %rax;
(* add    $0x8,%rdx                                #! PC = 0x555555582d4b *)
(* add $0x8, rdx *)
nop;
(* cmp    %rdx,%r12                                #! PC = 0x555555582d4f *)
(* cmp rdx, r12 *)
nop;
(* #jne    0x555555582cb0 <radix_conversions+432>  #! PC = 0x555555582d52 *)
#jne    0x555555582cb0 <radix_conversions+432>  #! 0x555555582d52 = 0x555555582d52;
(* mov    (%rdx),%rax                              #! EA = L0x7ffffff50ce0; Value = 0x7e4cc19022c3d0b7; PC = 0x555555582cb0 *)
mov %rax %L0x7ffffff50ce0;
(* mov    %rax,%rcx                                #! PC = 0x555555582cb3 *)
mov %rcx %rax;
(* shr    $0x10,%rcx                               #! PC = 0x555555582cb6 *)
mov %rcx
    [%rcx[16],%rcx[17],%rcx[18],%rcx[19],%rcx[20],%rcx[21],%rcx[22],%rcx[23],
     %rcx[24],%rcx[25],%rcx[26],%rcx[27],%rcx[28],%rcx[29],%rcx[30],%rcx[31],
     %rcx[32],%rcx[33],%rcx[34],%rcx[35],%rcx[36],%rcx[37],%rcx[38],%rcx[39],
     %rcx[40],%rcx[41],%rcx[42],%rcx[43],%rcx[44],%rcx[45],%rcx[46],%rcx[47],
     %rcx[48],%rcx[49],%rcx[50],%rcx[51],%rcx[52],%rcx[53],%rcx[54],%rcx[55],
     %rcx[56],%rcx[57],%rcx[58],%rcx[59],%rcx[60],%rcx[61],%rcx[62],%rcx[63],
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit];
(* and    %rbx,%rcx                                #! PC = 0x555555582cba *)
mov %rcx
    [0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     %rcx[32],%rcx[33],%rcx[34],%rcx[35],%rcx[36],%rcx[37],%rcx[38],%rcx[39],
     %rcx[40],%rcx[41],%rcx[42],%rcx[43],%rcx[44],%rcx[45],%rcx[46],%rcx[47],
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit];
(* xor    %rax,%rcx                                #! PC = 0x555555582cbd *)
adds %dc %rcx %rax %rcx;
(* mov    %rcx,%rax                                #! PC = 0x555555582cc0 *)
mov %rax %rcx;
(* shr    $0x10,%rax                               #! PC = 0x555555582cc3 *)
mov %rax
    [%rax[16],%rax[17],%rax[18],%rax[19],%rax[20],%rax[21],%rax[22],%rax[23],
     %rax[24],%rax[25],%rax[26],%rax[27],%rax[28],%rax[29],%rax[30],%rax[31],
     %rax[32],%rax[33],%rax[34],%rax[35],%rax[36],%rax[37],%rax[38],%rax[39],
     %rax[40],%rax[41],%rax[42],%rax[43],%rax[44],%rax[45],%rax[46],%rax[47],
     %rax[48],%rax[49],%rax[50],%rax[51],%rax[52],%rax[53],%rax[54],%rax[55],
     %rax[56],%rax[57],%rax[58],%rax[59],%rax[60],%rax[61],%rax[62],%rax[63],
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit];
(* and    $0xffff0000,%eax                         #! PC = 0x555555582cc7 *)
mov %rax
    [0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     %rax[16],%rax[17],%rax[18],%rax[19],%rax[20],%rax[21],%rax[22],%rax[23],
     %rax[24],%rax[25],%rax[26],%rax[27],%rax[28],%rax[29],%rax[30],%rax[31],
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit];
(* xor    %rcx,%rax                                #! PC = 0x555555582ccc *)
adds %dc %rax %rcx %rax;
(* cmp    $0x4,%esi                                #! PC = 0x555555582ccf *)
(* cmp 0x4, esi *)
nop;
(* #je     0x555555582d48 <radix_conversions+584>  #! PC = 0x555555582cd2 *)
#je     0x555555582d48 <radix_conversions+584>  #! 0x555555582cd2 = 0x555555582cd2;
(* mov    %rax,%rcx                                #! PC = 0x555555582cd4 *)
mov %rcx %rax;
(* shr    $0x8,%rcx                                #! PC = 0x555555582cd7 *)
mov %rcx
    [%rcx[8],%rcx[9],%rcx[10],%rcx[11],%rcx[12],%rcx[13],%rcx[14],%rcx[15],
     %rcx[16],%rcx[17],%rcx[18],%rcx[19],%rcx[20],%rcx[21],%rcx[22],%rcx[23],
     %rcx[24],%rcx[25],%rcx[26],%rcx[27],%rcx[28],%rcx[29],%rcx[30],%rcx[31],
     %rcx[32],%rcx[33],%rcx[34],%rcx[35],%rcx[36],%rcx[37],%rcx[38],%rcx[39],
     %rcx[40],%rcx[41],%rcx[42],%rcx[43],%rcx[44],%rcx[45],%rcx[46],%rcx[47],
     %rcx[48],%rcx[49],%rcx[50],%rcx[51],%rcx[52],%rcx[53],%rcx[54],%rcx[55],
     %rcx[56],%rcx[57],%rcx[58],%rcx[59],%rcx[60],%rcx[61],%rcx[62],%rcx[63],
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit];
(* and    %r14,%rcx                                #! PC = 0x555555582cdb *)
mov %rcx
    [0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     %rcx[16],%rcx[17],%rcx[18],%rcx[19],%rcx[20],%rcx[21],%rcx[22],%rcx[23],
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     %rcx[48],%rcx[49],%rcx[50],%rcx[51],%rcx[52],%rcx[53],%rcx[54],%rcx[55],
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit];
(* xor    %rax,%rcx                                #! PC = 0x555555582cde *)
adds %dc %rcx %rax %rcx;
(* mov    %rcx,%rax                                #! PC = 0x555555582ce1 *)
mov %rax %rcx;
(* shr    $0x8,%rax                                #! PC = 0x555555582ce4 *)
mov %rax
    [%rax[8],%rax[9],%rax[10],%rax[11],%rax[12],%rax[13],%rax[14],%rax[15],
     %rax[16],%rax[17],%rax[18],%rax[19],%rax[20],%rax[21],%rax[22],%rax[23],
     %rax[24],%rax[25],%rax[26],%rax[27],%rax[28],%rax[29],%rax[30],%rax[31],
     %rax[32],%rax[33],%rax[34],%rax[35],%rax[36],%rax[37],%rax[38],%rax[39],
     %rax[40],%rax[41],%rax[42],%rax[43],%rax[44],%rax[45],%rax[46],%rax[47],
     %rax[48],%rax[49],%rax[50],%rax[51],%rax[52],%rax[53],%rax[54],%rax[55],
     %rax[56],%rax[57],%rax[58],%rax[59],%rax[60],%rax[61],%rax[62],%rax[63],
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit];
(* and    %r13,%rax                                #! PC = 0x555555582ce8 *)
mov %rax
    [0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     %rax[8],%rax[9],%rax[10],%rax[11],%rax[12],%rax[13],%rax[14],%rax[15],
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     %rax[40],%rax[41],%rax[42],%rax[43],%rax[44],%rax[45],%rax[46],%rax[47],
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit];
(* xor    %rcx,%rax                                #! PC = 0x555555582ceb *)
adds %dc %rax %rcx %rax;
(* cmp    $0x3,%esi                                #! PC = 0x555555582cee *)
(* cmp 0x3, esi *)
nop;
(* #je     0x555555582d48 <radix_conversions+584>  #! PC = 0x555555582cf1 *)
#je     0x555555582d48 <radix_conversions+584>  #! 0x555555582cf1 = 0x555555582cf1;
(* mov    %rax,%rcx                                #! PC = 0x555555582cf3 *)
mov %rcx %rax;
(* shr    $0x4,%rcx                                #! PC = 0x555555582cf6 *)
mov %rcx
    [%rcx[4],%rcx[5],%rcx[6],%rcx[7],
     %rcx[8],%rcx[9],%rcx[10],%rcx[11],%rcx[12],%rcx[13],%rcx[14],%rcx[15],
     %rcx[16],%rcx[17],%rcx[18],%rcx[19],%rcx[20],%rcx[21],%rcx[22],%rcx[23],
     %rcx[24],%rcx[25],%rcx[26],%rcx[27],%rcx[28],%rcx[29],%rcx[30],%rcx[31],
     %rcx[32],%rcx[33],%rcx[34],%rcx[35],%rcx[36],%rcx[37],%rcx[38],%rcx[39],
     %rcx[40],%rcx[41],%rcx[42],%rcx[43],%rcx[44],%rcx[45],%rcx[46],%rcx[47],
     %rcx[48],%rcx[49],%rcx[50],%rcx[51],%rcx[52],%rcx[53],%rcx[54],%rcx[55],
     %rcx[56],%rcx[57],%rcx[58],%rcx[59],%rcx[60],%rcx[61],%rcx[62],%rcx[63],
     0@bit,0@bit,0@bit,0@bit];
(* and    %r8,%rcx                                 #! PC = 0x555555582cfa *)
mov %rcx
    [0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     %rcx[8],%rcx[9],%rcx[10],%rcx[11],0@bit,0@bit,0@bit,0@bit,
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     %rcx[24],%rcx[25],%rcx[26],%rcx[27],0@bit,0@bit,0@bit,0@bit,
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     %rcx[40],%rcx[41],%rcx[42],%rcx[43],0@bit,0@bit,0@bit,0@bit,
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     %rcx[56],%rcx[57],%rcx[58],%rcx[59],0@bit,0@bit,0@bit,0@bit];
(* xor    %rax,%rcx                                #! PC = 0x555555582cfd *)
adds %dc %rcx %rax %rcx;
(* mov    %rcx,%rax                                #! PC = 0x555555582d00 *)
mov %rax %rcx;
(* shr    $0x4,%rax                                #! PC = 0x555555582d03 *)
mov %rax
    [%rax[4],%rax[5],%rax[6],%rax[7],
     %rax[8],%rax[9],%rax[10],%rax[11],%rax[12],%rax[13],%rax[14],%rax[15],
     %rax[16],%rax[17],%rax[18],%rax[19],%rax[20],%rax[21],%rax[22],%rax[23],
     %rax[24],%rax[25],%rax[26],%rax[27],%rax[28],%rax[29],%rax[30],%rax[31],
     %rax[32],%rax[33],%rax[34],%rax[35],%rax[36],%rax[37],%rax[38],%rax[39],
     %rax[40],%rax[41],%rax[42],%rax[43],%rax[44],%rax[45],%rax[46],%rax[47],
     %rax[48],%rax[49],%rax[50],%rax[51],%rax[52],%rax[53],%rax[54],%rax[55],
     %rax[56],%rax[57],%rax[58],%rax[59],%rax[60],%rax[61],%rax[62],%rax[63],
     0@bit,0@bit,0@bit,0@bit];
(* and    %rdi,%rax                                #! PC = 0x555555582d07 *)
mov %rax
    [0@bit,0@bit,0@bit,0@bit,%rax[4],%rax[5],%rax[6],%rax[7],
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     0@bit,0@bit,0@bit,0@bit,%rax[20],%rax[21],%rax[22],%rax[23],
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     0@bit,0@bit,0@bit,0@bit,%rax[36],%rax[37],%rax[38],%rax[39],
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     0@bit,0@bit,0@bit,0@bit,%rax[52],%rax[53],%rax[54],%rax[55],
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit];
(* xor    %rcx,%rax                                #! PC = 0x555555582d0a *)
adds %dc %rax %rcx %rax;
(* cmp    $0x2,%esi                                #! PC = 0x555555582d0d *)
(* cmp 0x2, esi *)
nop;
(* #je     0x555555582d48 <radix_conversions+584>  #! PC = 0x555555582d10 *)
#je     0x555555582d48 <radix_conversions+584>  #! 0x555555582d10 = 0x555555582d10;
(* mov    %rax,%rcx                                #! PC = 0x555555582d12 *)
mov %rcx %rax;
(* shr    $0x2,%rcx                                #! PC = 0x555555582d15 *)
mov %rcx
    [%rcx[2],%rcx[3],%rcx[4],%rcx[5],%rcx[6],%rcx[7],
     %rcx[8],%rcx[9],%rcx[10],%rcx[11],%rcx[12],%rcx[13],%rcx[14],%rcx[15],
     %rcx[16],%rcx[17],%rcx[18],%rcx[19],%rcx[20],%rcx[21],%rcx[22],%rcx[23],
     %rcx[24],%rcx[25],%rcx[26],%rcx[27],%rcx[28],%rcx[29],%rcx[30],%rcx[31],
     %rcx[32],%rcx[33],%rcx[34],%rcx[35],%rcx[36],%rcx[37],%rcx[38],%rcx[39],
     %rcx[40],%rcx[41],%rcx[42],%rcx[43],%rcx[44],%rcx[45],%rcx[46],%rcx[47],
     %rcx[48],%rcx[49],%rcx[50],%rcx[51],%rcx[52],%rcx[53],%rcx[54],%rcx[55],
     %rcx[56],%rcx[57],%rcx[58],%rcx[59],%rcx[60],%rcx[61],%rcx[62],%rcx[63],
     0@bit,0@bit];
(* and    %r10,%rcx                                #! PC = 0x555555582d19 *)
mov %rcx
    [0@bit,0@bit,0@bit,0@bit,%rcx[4],%rcx[5],0@bit,0@bit,
     0@bit,0@bit,0@bit,0@bit,%rcx[12],%rcx[13],0@bit,0@bit,
     0@bit,0@bit,0@bit,0@bit,%rcx[20],%rcx[21],0@bit,0@bit,
     0@bit,0@bit,0@bit,0@bit,%rcx[28],%rcx[29],0@bit,0@bit,
     0@bit,0@bit,0@bit,0@bit,%rcx[36],%rcx[37],0@bit,0@bit,
     0@bit,0@bit,0@bit,0@bit,%rcx[44],%rcx[45],0@bit,0@bit,
     0@bit,0@bit,0@bit,0@bit,%rcx[52],%rcx[53],0@bit,0@bit,
     0@bit,0@bit,0@bit,0@bit,%rcx[60],%rcx[61],0@bit,0@bit];
(* xor    %rax,%rcx                                #! PC = 0x555555582d1c *)
adds %dc %rcx %rax %rcx;
(* mov    %rcx,%rax                                #! PC = 0x555555582d1f *)
mov %rax %rcx;
(* shr    $0x2,%rax                                #! PC = 0x555555582d22 *)
mov %rax
    [%rax[2],%rax[3],%rax[4],%rax[5],%rax[6],%rax[7],
     %rax[8],%rax[9],%rax[10],%rax[11],%rax[12],%rax[13],%rax[14],%rax[15],
     %rax[16],%rax[17],%rax[18],%rax[19],%rax[20],%rax[21],%rax[22],%rax[23],
     %rax[24],%rax[25],%rax[26],%rax[27],%rax[28],%rax[29],%rax[30],%rax[31],
     %rax[32],%rax[33],%rax[34],%rax[35],%rax[36],%rax[37],%rax[38],%rax[39],
     %rax[40],%rax[41],%rax[42],%rax[43],%rax[44],%rax[45],%rax[46],%rax[47],
     %rax[48],%rax[49],%rax[50],%rax[51],%rax[52],%rax[53],%rax[54],%rax[55],
     %rax[56],%rax[57],%rax[58],%rax[59],%rax[60],%rax[61],%rax[62],%rax[63],
     0@bit,0@bit];
(* and    %r9,%rax                                 #! PC = 0x555555582d26 *)
mov %rax
    [0@bit,0@bit,%rax[2],%rax[3],0@bit,0@bit,0@bit,0@bit,
     0@bit,0@bit,%rax[10],%rax[11],0@bit,0@bit,0@bit,0@bit,
     0@bit,0@bit,%rax[18],%rax[19],0@bit,0@bit,0@bit,0@bit,
     0@bit,0@bit,%rax[26],%rax[27],0@bit,0@bit,0@bit,0@bit,
     0@bit,0@bit,%rax[34],%rax[35],0@bit,0@bit,0@bit,0@bit,
     0@bit,0@bit,%rax[42],%rax[43],0@bit,0@bit,0@bit,0@bit,
     0@bit,0@bit,%rax[50],%rax[51],0@bit,0@bit,0@bit,0@bit,
     0@bit,0@bit,%rax[58],%rax[59],0@bit,0@bit,0@bit,0@bit];
(* xor    %rcx,%rax                                #! PC = 0x555555582d29 *)
adds %dc %rax %rcx %rax;
(* test   %esi,%esi                                #! PC = 0x555555582d2c *)
(* test esi, esi *)
nop;
(* #jne    0x555555582d48 <radix_conversions+584>  #! PC = 0x555555582d2e *)
#jne    0x555555582d48 <radix_conversions+584>  #! 0x555555582d2e = 0x555555582d2e;
(* mov    %rax,(%rdx)                              #! EA = L0x7ffffff50ce0; PC = 0x555555582d48 *)
mov %L0x7ffffff50ce0 %rax;
(* add    $0x8,%rdx                                #! PC = 0x555555582d4b *)
(* add $0x8, rdx *)
nop;
(* cmp    %rdx,%r12                                #! PC = 0x555555582d4f *)
(* cmp rdx, r12 *)
nop;
(* #jne    0x555555582cb0 <radix_conversions+432>  #! PC = 0x555555582d52 *)
#jne    0x555555582cb0 <radix_conversions+432>  #! 0x555555582d52 = 0x555555582d52;
(* mov    (%rdx),%rax                              #! EA = L0x7ffffff50ce8; Value = 0x4af9a2b85f611b52; PC = 0x555555582cb0 *)
mov %rax %L0x7ffffff50ce8;
(* mov    %rax,%rcx                                #! PC = 0x555555582cb3 *)
mov %rcx %rax;
(* shr    $0x10,%rcx                               #! PC = 0x555555582cb6 *)
mov %rcx
    [%rcx[16],%rcx[17],%rcx[18],%rcx[19],%rcx[20],%rcx[21],%rcx[22],%rcx[23],
     %rcx[24],%rcx[25],%rcx[26],%rcx[27],%rcx[28],%rcx[29],%rcx[30],%rcx[31],
     %rcx[32],%rcx[33],%rcx[34],%rcx[35],%rcx[36],%rcx[37],%rcx[38],%rcx[39],
     %rcx[40],%rcx[41],%rcx[42],%rcx[43],%rcx[44],%rcx[45],%rcx[46],%rcx[47],
     %rcx[48],%rcx[49],%rcx[50],%rcx[51],%rcx[52],%rcx[53],%rcx[54],%rcx[55],
     %rcx[56],%rcx[57],%rcx[58],%rcx[59],%rcx[60],%rcx[61],%rcx[62],%rcx[63],
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit];
(* and    %rbx,%rcx                                #! PC = 0x555555582cba *)
mov %rcx
    [0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     %rcx[32],%rcx[33],%rcx[34],%rcx[35],%rcx[36],%rcx[37],%rcx[38],%rcx[39],
     %rcx[40],%rcx[41],%rcx[42],%rcx[43],%rcx[44],%rcx[45],%rcx[46],%rcx[47],
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit];
(* xor    %rax,%rcx                                #! PC = 0x555555582cbd *)
adds %dc %rcx %rax %rcx;
(* mov    %rcx,%rax                                #! PC = 0x555555582cc0 *)
mov %rax %rcx;
(* shr    $0x10,%rax                               #! PC = 0x555555582cc3 *)
mov %rax
    [%rax[16],%rax[17],%rax[18],%rax[19],%rax[20],%rax[21],%rax[22],%rax[23],
     %rax[24],%rax[25],%rax[26],%rax[27],%rax[28],%rax[29],%rax[30],%rax[31],
     %rax[32],%rax[33],%rax[34],%rax[35],%rax[36],%rax[37],%rax[38],%rax[39],
     %rax[40],%rax[41],%rax[42],%rax[43],%rax[44],%rax[45],%rax[46],%rax[47],
     %rax[48],%rax[49],%rax[50],%rax[51],%rax[52],%rax[53],%rax[54],%rax[55],
     %rax[56],%rax[57],%rax[58],%rax[59],%rax[60],%rax[61],%rax[62],%rax[63],
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit];
(* and    $0xffff0000,%eax                         #! PC = 0x555555582cc7 *)
mov %rax
    [0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     %rax[16],%rax[17],%rax[18],%rax[19],%rax[20],%rax[21],%rax[22],%rax[23],
     %rax[24],%rax[25],%rax[26],%rax[27],%rax[28],%rax[29],%rax[30],%rax[31],
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit];
(* xor    %rcx,%rax                                #! PC = 0x555555582ccc *)
adds %dc %rax %rcx %rax;
(* cmp    $0x4,%esi                                #! PC = 0x555555582ccf *)
(* cmp 0x4, esi *)
nop;
(* #je     0x555555582d48 <radix_conversions+584>  #! PC = 0x555555582cd2 *)
#je     0x555555582d48 <radix_conversions+584>  #! 0x555555582cd2 = 0x555555582cd2;
(* mov    %rax,%rcx                                #! PC = 0x555555582cd4 *)
mov %rcx %rax;
(* shr    $0x8,%rcx                                #! PC = 0x555555582cd7 *)
mov %rcx
    [%rcx[8],%rcx[9],%rcx[10],%rcx[11],%rcx[12],%rcx[13],%rcx[14],%rcx[15],
     %rcx[16],%rcx[17],%rcx[18],%rcx[19],%rcx[20],%rcx[21],%rcx[22],%rcx[23],
     %rcx[24],%rcx[25],%rcx[26],%rcx[27],%rcx[28],%rcx[29],%rcx[30],%rcx[31],
     %rcx[32],%rcx[33],%rcx[34],%rcx[35],%rcx[36],%rcx[37],%rcx[38],%rcx[39],
     %rcx[40],%rcx[41],%rcx[42],%rcx[43],%rcx[44],%rcx[45],%rcx[46],%rcx[47],
     %rcx[48],%rcx[49],%rcx[50],%rcx[51],%rcx[52],%rcx[53],%rcx[54],%rcx[55],
     %rcx[56],%rcx[57],%rcx[58],%rcx[59],%rcx[60],%rcx[61],%rcx[62],%rcx[63],
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit];
(* and    %r14,%rcx                                #! PC = 0x555555582cdb *)
mov %rcx
    [0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     %rcx[16],%rcx[17],%rcx[18],%rcx[19],%rcx[20],%rcx[21],%rcx[22],%rcx[23],
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     %rcx[48],%rcx[49],%rcx[50],%rcx[51],%rcx[52],%rcx[53],%rcx[54],%rcx[55],
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit];
(* xor    %rax,%rcx                                #! PC = 0x555555582cde *)
adds %dc %rcx %rax %rcx;
(* mov    %rcx,%rax                                #! PC = 0x555555582ce1 *)
mov %rax %rcx;
(* shr    $0x8,%rax                                #! PC = 0x555555582ce4 *)
mov %rax
    [%rax[8],%rax[9],%rax[10],%rax[11],%rax[12],%rax[13],%rax[14],%rax[15],
     %rax[16],%rax[17],%rax[18],%rax[19],%rax[20],%rax[21],%rax[22],%rax[23],
     %rax[24],%rax[25],%rax[26],%rax[27],%rax[28],%rax[29],%rax[30],%rax[31],
     %rax[32],%rax[33],%rax[34],%rax[35],%rax[36],%rax[37],%rax[38],%rax[39],
     %rax[40],%rax[41],%rax[42],%rax[43],%rax[44],%rax[45],%rax[46],%rax[47],
     %rax[48],%rax[49],%rax[50],%rax[51],%rax[52],%rax[53],%rax[54],%rax[55],
     %rax[56],%rax[57],%rax[58],%rax[59],%rax[60],%rax[61],%rax[62],%rax[63],
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit];
(* and    %r13,%rax                                #! PC = 0x555555582ce8 *)
mov %rax
    [0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     %rax[8],%rax[9],%rax[10],%rax[11],%rax[12],%rax[13],%rax[14],%rax[15],
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     %rax[40],%rax[41],%rax[42],%rax[43],%rax[44],%rax[45],%rax[46],%rax[47],
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit];
(* xor    %rcx,%rax                                #! PC = 0x555555582ceb *)
adds %dc %rax %rcx %rax;
(* cmp    $0x3,%esi                                #! PC = 0x555555582cee *)
(* cmp 0x3, esi *)
nop;
(* #je     0x555555582d48 <radix_conversions+584>  #! PC = 0x555555582cf1 *)
#je     0x555555582d48 <radix_conversions+584>  #! 0x555555582cf1 = 0x555555582cf1;
(* mov    %rax,%rcx                                #! PC = 0x555555582cf3 *)
mov %rcx %rax;
(* shr    $0x4,%rcx                                #! PC = 0x555555582cf6 *)
mov %rcx
    [%rcx[4],%rcx[5],%rcx[6],%rcx[7],
     %rcx[8],%rcx[9],%rcx[10],%rcx[11],%rcx[12],%rcx[13],%rcx[14],%rcx[15],
     %rcx[16],%rcx[17],%rcx[18],%rcx[19],%rcx[20],%rcx[21],%rcx[22],%rcx[23],
     %rcx[24],%rcx[25],%rcx[26],%rcx[27],%rcx[28],%rcx[29],%rcx[30],%rcx[31],
     %rcx[32],%rcx[33],%rcx[34],%rcx[35],%rcx[36],%rcx[37],%rcx[38],%rcx[39],
     %rcx[40],%rcx[41],%rcx[42],%rcx[43],%rcx[44],%rcx[45],%rcx[46],%rcx[47],
     %rcx[48],%rcx[49],%rcx[50],%rcx[51],%rcx[52],%rcx[53],%rcx[54],%rcx[55],
     %rcx[56],%rcx[57],%rcx[58],%rcx[59],%rcx[60],%rcx[61],%rcx[62],%rcx[63],
     0@bit,0@bit,0@bit,0@bit];
(* and    %r8,%rcx                                 #! PC = 0x555555582cfa *)
mov %rcx
    [0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     %rcx[8],%rcx[9],%rcx[10],%rcx[11],0@bit,0@bit,0@bit,0@bit,
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     %rcx[24],%rcx[25],%rcx[26],%rcx[27],0@bit,0@bit,0@bit,0@bit,
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     %rcx[40],%rcx[41],%rcx[42],%rcx[43],0@bit,0@bit,0@bit,0@bit,
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     %rcx[56],%rcx[57],%rcx[58],%rcx[59],0@bit,0@bit,0@bit,0@bit];
(* xor    %rax,%rcx                                #! PC = 0x555555582cfd *)
adds %dc %rcx %rax %rcx;
(* mov    %rcx,%rax                                #! PC = 0x555555582d00 *)
mov %rax %rcx;
(* shr    $0x4,%rax                                #! PC = 0x555555582d03 *)
mov %rax
    [%rax[4],%rax[5],%rax[6],%rax[7],
     %rax[8],%rax[9],%rax[10],%rax[11],%rax[12],%rax[13],%rax[14],%rax[15],
     %rax[16],%rax[17],%rax[18],%rax[19],%rax[20],%rax[21],%rax[22],%rax[23],
     %rax[24],%rax[25],%rax[26],%rax[27],%rax[28],%rax[29],%rax[30],%rax[31],
     %rax[32],%rax[33],%rax[34],%rax[35],%rax[36],%rax[37],%rax[38],%rax[39],
     %rax[40],%rax[41],%rax[42],%rax[43],%rax[44],%rax[45],%rax[46],%rax[47],
     %rax[48],%rax[49],%rax[50],%rax[51],%rax[52],%rax[53],%rax[54],%rax[55],
     %rax[56],%rax[57],%rax[58],%rax[59],%rax[60],%rax[61],%rax[62],%rax[63],
     0@bit,0@bit,0@bit,0@bit];
(* and    %rdi,%rax                                #! PC = 0x555555582d07 *)
mov %rax
    [0@bit,0@bit,0@bit,0@bit,%rax[4],%rax[5],%rax[6],%rax[7],
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     0@bit,0@bit,0@bit,0@bit,%rax[20],%rax[21],%rax[22],%rax[23],
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     0@bit,0@bit,0@bit,0@bit,%rax[36],%rax[37],%rax[38],%rax[39],
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     0@bit,0@bit,0@bit,0@bit,%rax[52],%rax[53],%rax[54],%rax[55],
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit];
(* xor    %rcx,%rax                                #! PC = 0x555555582d0a *)
adds %dc %rax %rcx %rax;
(* cmp    $0x2,%esi                                #! PC = 0x555555582d0d *)
(* cmp 0x2, esi *)
nop;
(* #je     0x555555582d48 <radix_conversions+584>  #! PC = 0x555555582d10 *)
#je     0x555555582d48 <radix_conversions+584>  #! 0x555555582d10 = 0x555555582d10;
(* mov    %rax,%rcx                                #! PC = 0x555555582d12 *)
mov %rcx %rax;
(* shr    $0x2,%rcx                                #! PC = 0x555555582d15 *)
mov %rcx
    [%rcx[2],%rcx[3],%rcx[4],%rcx[5],%rcx[6],%rcx[7],
     %rcx[8],%rcx[9],%rcx[10],%rcx[11],%rcx[12],%rcx[13],%rcx[14],%rcx[15],
     %rcx[16],%rcx[17],%rcx[18],%rcx[19],%rcx[20],%rcx[21],%rcx[22],%rcx[23],
     %rcx[24],%rcx[25],%rcx[26],%rcx[27],%rcx[28],%rcx[29],%rcx[30],%rcx[31],
     %rcx[32],%rcx[33],%rcx[34],%rcx[35],%rcx[36],%rcx[37],%rcx[38],%rcx[39],
     %rcx[40],%rcx[41],%rcx[42],%rcx[43],%rcx[44],%rcx[45],%rcx[46],%rcx[47],
     %rcx[48],%rcx[49],%rcx[50],%rcx[51],%rcx[52],%rcx[53],%rcx[54],%rcx[55],
     %rcx[56],%rcx[57],%rcx[58],%rcx[59],%rcx[60],%rcx[61],%rcx[62],%rcx[63],
     0@bit,0@bit];
(* and    %r10,%rcx                                #! PC = 0x555555582d19 *)
mov %rcx
    [0@bit,0@bit,0@bit,0@bit,%rcx[4],%rcx[5],0@bit,0@bit,
     0@bit,0@bit,0@bit,0@bit,%rcx[12],%rcx[13],0@bit,0@bit,
     0@bit,0@bit,0@bit,0@bit,%rcx[20],%rcx[21],0@bit,0@bit,
     0@bit,0@bit,0@bit,0@bit,%rcx[28],%rcx[29],0@bit,0@bit,
     0@bit,0@bit,0@bit,0@bit,%rcx[36],%rcx[37],0@bit,0@bit,
     0@bit,0@bit,0@bit,0@bit,%rcx[44],%rcx[45],0@bit,0@bit,
     0@bit,0@bit,0@bit,0@bit,%rcx[52],%rcx[53],0@bit,0@bit,
     0@bit,0@bit,0@bit,0@bit,%rcx[60],%rcx[61],0@bit,0@bit];
(* xor    %rax,%rcx                                #! PC = 0x555555582d1c *)
adds %dc %rcx %rax %rcx;
(* mov    %rcx,%rax                                #! PC = 0x555555582d1f *)
mov %rax %rcx;
(* shr    $0x2,%rax                                #! PC = 0x555555582d22 *)
mov %rax
    [%rax[2],%rax[3],%rax[4],%rax[5],%rax[6],%rax[7],
     %rax[8],%rax[9],%rax[10],%rax[11],%rax[12],%rax[13],%rax[14],%rax[15],
     %rax[16],%rax[17],%rax[18],%rax[19],%rax[20],%rax[21],%rax[22],%rax[23],
     %rax[24],%rax[25],%rax[26],%rax[27],%rax[28],%rax[29],%rax[30],%rax[31],
     %rax[32],%rax[33],%rax[34],%rax[35],%rax[36],%rax[37],%rax[38],%rax[39],
     %rax[40],%rax[41],%rax[42],%rax[43],%rax[44],%rax[45],%rax[46],%rax[47],
     %rax[48],%rax[49],%rax[50],%rax[51],%rax[52],%rax[53],%rax[54],%rax[55],
     %rax[56],%rax[57],%rax[58],%rax[59],%rax[60],%rax[61],%rax[62],%rax[63],
     0@bit,0@bit];
(* and    %r9,%rax                                 #! PC = 0x555555582d26 *)
mov %rax
    [0@bit,0@bit,%rax[2],%rax[3],0@bit,0@bit,0@bit,0@bit,
     0@bit,0@bit,%rax[10],%rax[11],0@bit,0@bit,0@bit,0@bit,
     0@bit,0@bit,%rax[18],%rax[19],0@bit,0@bit,0@bit,0@bit,
     0@bit,0@bit,%rax[26],%rax[27],0@bit,0@bit,0@bit,0@bit,
     0@bit,0@bit,%rax[34],%rax[35],0@bit,0@bit,0@bit,0@bit,
     0@bit,0@bit,%rax[42],%rax[43],0@bit,0@bit,0@bit,0@bit,
     0@bit,0@bit,%rax[50],%rax[51],0@bit,0@bit,0@bit,0@bit,
     0@bit,0@bit,%rax[58],%rax[59],0@bit,0@bit,0@bit,0@bit];
(* xor    %rcx,%rax                                #! PC = 0x555555582d29 *)
adds %dc %rax %rcx %rax;
(* test   %esi,%esi                                #! PC = 0x555555582d2c *)
(* test esi, esi *)
nop;
(* #jne    0x555555582d48 <radix_conversions+584>  #! PC = 0x555555582d2e *)
#jne    0x555555582d48 <radix_conversions+584>  #! 0x555555582d2e = 0x555555582d2e;
(* mov    %rax,(%rdx)                              #! EA = L0x7ffffff50ce8; PC = 0x555555582d48 *)
mov %L0x7ffffff50ce8 %rax;
(* add    $0x8,%rdx                                #! PC = 0x555555582d4b *)
(* add $0x8, rdx *)
nop;
(* cmp    %rdx,%r12                                #! PC = 0x555555582d4f *)
(* cmp rdx, r12 *)
nop;
(* #jne    0x555555582cb0 <radix_conversions+432>  #! PC = 0x555555582d52 *)
#jne    0x555555582cb0 <radix_conversions+432>  #! 0x555555582d52 = 0x555555582d52;
(* mov    (%rdx),%rax                              #! EA = L0x7ffffff50cf0; Value = 0x23657dc3a089675f; PC = 0x555555582cb0 *)
mov %rax %L0x7ffffff50cf0;
(* mov    %rax,%rcx                                #! PC = 0x555555582cb3 *)
mov %rcx %rax;
(* shr    $0x10,%rcx                               #! PC = 0x555555582cb6 *)
mov %rcx
    [%rcx[16],%rcx[17],%rcx[18],%rcx[19],%rcx[20],%rcx[21],%rcx[22],%rcx[23],
     %rcx[24],%rcx[25],%rcx[26],%rcx[27],%rcx[28],%rcx[29],%rcx[30],%rcx[31],
     %rcx[32],%rcx[33],%rcx[34],%rcx[35],%rcx[36],%rcx[37],%rcx[38],%rcx[39],
     %rcx[40],%rcx[41],%rcx[42],%rcx[43],%rcx[44],%rcx[45],%rcx[46],%rcx[47],
     %rcx[48],%rcx[49],%rcx[50],%rcx[51],%rcx[52],%rcx[53],%rcx[54],%rcx[55],
     %rcx[56],%rcx[57],%rcx[58],%rcx[59],%rcx[60],%rcx[61],%rcx[62],%rcx[63],
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit];
(* and    %rbx,%rcx                                #! PC = 0x555555582cba *)
mov %rcx
    [0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     %rcx[32],%rcx[33],%rcx[34],%rcx[35],%rcx[36],%rcx[37],%rcx[38],%rcx[39],
     %rcx[40],%rcx[41],%rcx[42],%rcx[43],%rcx[44],%rcx[45],%rcx[46],%rcx[47],
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit];
(* xor    %rax,%rcx                                #! PC = 0x555555582cbd *)
adds %dc %rcx %rax %rcx;
(* mov    %rcx,%rax                                #! PC = 0x555555582cc0 *)
mov %rax %rcx;
(* shr    $0x10,%rax                               #! PC = 0x555555582cc3 *)
mov %rax
    [%rax[16],%rax[17],%rax[18],%rax[19],%rax[20],%rax[21],%rax[22],%rax[23],
     %rax[24],%rax[25],%rax[26],%rax[27],%rax[28],%rax[29],%rax[30],%rax[31],
     %rax[32],%rax[33],%rax[34],%rax[35],%rax[36],%rax[37],%rax[38],%rax[39],
     %rax[40],%rax[41],%rax[42],%rax[43],%rax[44],%rax[45],%rax[46],%rax[47],
     %rax[48],%rax[49],%rax[50],%rax[51],%rax[52],%rax[53],%rax[54],%rax[55],
     %rax[56],%rax[57],%rax[58],%rax[59],%rax[60],%rax[61],%rax[62],%rax[63],
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit];
(* and    $0xffff0000,%eax                         #! PC = 0x555555582cc7 *)
mov %rax
    [0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     %rax[16],%rax[17],%rax[18],%rax[19],%rax[20],%rax[21],%rax[22],%rax[23],
     %rax[24],%rax[25],%rax[26],%rax[27],%rax[28],%rax[29],%rax[30],%rax[31],
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit];
(* xor    %rcx,%rax                                #! PC = 0x555555582ccc *)
adds %dc %rax %rcx %rax;
(* cmp    $0x4,%esi                                #! PC = 0x555555582ccf *)
(* cmp 0x4, esi *)
nop;
(* #je     0x555555582d48 <radix_conversions+584>  #! PC = 0x555555582cd2 *)
#je     0x555555582d48 <radix_conversions+584>  #! 0x555555582cd2 = 0x555555582cd2;
(* mov    %rax,%rcx                                #! PC = 0x555555582cd4 *)
mov %rcx %rax;
(* shr    $0x8,%rcx                                #! PC = 0x555555582cd7 *)
mov %rcx
    [%rcx[8],%rcx[9],%rcx[10],%rcx[11],%rcx[12],%rcx[13],%rcx[14],%rcx[15],
     %rcx[16],%rcx[17],%rcx[18],%rcx[19],%rcx[20],%rcx[21],%rcx[22],%rcx[23],
     %rcx[24],%rcx[25],%rcx[26],%rcx[27],%rcx[28],%rcx[29],%rcx[30],%rcx[31],
     %rcx[32],%rcx[33],%rcx[34],%rcx[35],%rcx[36],%rcx[37],%rcx[38],%rcx[39],
     %rcx[40],%rcx[41],%rcx[42],%rcx[43],%rcx[44],%rcx[45],%rcx[46],%rcx[47],
     %rcx[48],%rcx[49],%rcx[50],%rcx[51],%rcx[52],%rcx[53],%rcx[54],%rcx[55],
     %rcx[56],%rcx[57],%rcx[58],%rcx[59],%rcx[60],%rcx[61],%rcx[62],%rcx[63],
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit];
(* and    %r14,%rcx                                #! PC = 0x555555582cdb *)
mov %rcx
    [0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     %rcx[16],%rcx[17],%rcx[18],%rcx[19],%rcx[20],%rcx[21],%rcx[22],%rcx[23],
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     %rcx[48],%rcx[49],%rcx[50],%rcx[51],%rcx[52],%rcx[53],%rcx[54],%rcx[55],
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit];
(* xor    %rax,%rcx                                #! PC = 0x555555582cde *)
adds %dc %rcx %rax %rcx;
(* mov    %rcx,%rax                                #! PC = 0x555555582ce1 *)
mov %rax %rcx;
(* shr    $0x8,%rax                                #! PC = 0x555555582ce4 *)
mov %rax
    [%rax[8],%rax[9],%rax[10],%rax[11],%rax[12],%rax[13],%rax[14],%rax[15],
     %rax[16],%rax[17],%rax[18],%rax[19],%rax[20],%rax[21],%rax[22],%rax[23],
     %rax[24],%rax[25],%rax[26],%rax[27],%rax[28],%rax[29],%rax[30],%rax[31],
     %rax[32],%rax[33],%rax[34],%rax[35],%rax[36],%rax[37],%rax[38],%rax[39],
     %rax[40],%rax[41],%rax[42],%rax[43],%rax[44],%rax[45],%rax[46],%rax[47],
     %rax[48],%rax[49],%rax[50],%rax[51],%rax[52],%rax[53],%rax[54],%rax[55],
     %rax[56],%rax[57],%rax[58],%rax[59],%rax[60],%rax[61],%rax[62],%rax[63],
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit];
(* and    %r13,%rax                                #! PC = 0x555555582ce8 *)
mov %rax
    [0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     %rax[8],%rax[9],%rax[10],%rax[11],%rax[12],%rax[13],%rax[14],%rax[15],
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     %rax[40],%rax[41],%rax[42],%rax[43],%rax[44],%rax[45],%rax[46],%rax[47],
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit];
(* xor    %rcx,%rax                                #! PC = 0x555555582ceb *)
adds %dc %rax %rcx %rax;
(* cmp    $0x3,%esi                                #! PC = 0x555555582cee *)
(* cmp 0x3, esi *)
nop;
(* #je     0x555555582d48 <radix_conversions+584>  #! PC = 0x555555582cf1 *)
#je     0x555555582d48 <radix_conversions+584>  #! 0x555555582cf1 = 0x555555582cf1;
(* mov    %rax,%rcx                                #! PC = 0x555555582cf3 *)
mov %rcx %rax;
(* shr    $0x4,%rcx                                #! PC = 0x555555582cf6 *)
mov %rcx
    [%rcx[4],%rcx[5],%rcx[6],%rcx[7],
     %rcx[8],%rcx[9],%rcx[10],%rcx[11],%rcx[12],%rcx[13],%rcx[14],%rcx[15],
     %rcx[16],%rcx[17],%rcx[18],%rcx[19],%rcx[20],%rcx[21],%rcx[22],%rcx[23],
     %rcx[24],%rcx[25],%rcx[26],%rcx[27],%rcx[28],%rcx[29],%rcx[30],%rcx[31],
     %rcx[32],%rcx[33],%rcx[34],%rcx[35],%rcx[36],%rcx[37],%rcx[38],%rcx[39],
     %rcx[40],%rcx[41],%rcx[42],%rcx[43],%rcx[44],%rcx[45],%rcx[46],%rcx[47],
     %rcx[48],%rcx[49],%rcx[50],%rcx[51],%rcx[52],%rcx[53],%rcx[54],%rcx[55],
     %rcx[56],%rcx[57],%rcx[58],%rcx[59],%rcx[60],%rcx[61],%rcx[62],%rcx[63],
     0@bit,0@bit,0@bit,0@bit];
(* and    %r8,%rcx                                 #! PC = 0x555555582cfa *)
mov %rcx
    [0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     %rcx[8],%rcx[9],%rcx[10],%rcx[11],0@bit,0@bit,0@bit,0@bit,
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     %rcx[24],%rcx[25],%rcx[26],%rcx[27],0@bit,0@bit,0@bit,0@bit,
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     %rcx[40],%rcx[41],%rcx[42],%rcx[43],0@bit,0@bit,0@bit,0@bit,
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     %rcx[56],%rcx[57],%rcx[58],%rcx[59],0@bit,0@bit,0@bit,0@bit];
(* xor    %rax,%rcx                                #! PC = 0x555555582cfd *)
adds %dc %rcx %rax %rcx;
(* mov    %rcx,%rax                                #! PC = 0x555555582d00 *)
mov %rax %rcx;
(* shr    $0x4,%rax                                #! PC = 0x555555582d03 *)
mov %rax
    [%rax[4],%rax[5],%rax[6],%rax[7],
     %rax[8],%rax[9],%rax[10],%rax[11],%rax[12],%rax[13],%rax[14],%rax[15],
     %rax[16],%rax[17],%rax[18],%rax[19],%rax[20],%rax[21],%rax[22],%rax[23],
     %rax[24],%rax[25],%rax[26],%rax[27],%rax[28],%rax[29],%rax[30],%rax[31],
     %rax[32],%rax[33],%rax[34],%rax[35],%rax[36],%rax[37],%rax[38],%rax[39],
     %rax[40],%rax[41],%rax[42],%rax[43],%rax[44],%rax[45],%rax[46],%rax[47],
     %rax[48],%rax[49],%rax[50],%rax[51],%rax[52],%rax[53],%rax[54],%rax[55],
     %rax[56],%rax[57],%rax[58],%rax[59],%rax[60],%rax[61],%rax[62],%rax[63],
     0@bit,0@bit,0@bit,0@bit];
(* and    %rdi,%rax                                #! PC = 0x555555582d07 *)
mov %rax
    [0@bit,0@bit,0@bit,0@bit,%rax[4],%rax[5],%rax[6],%rax[7],
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     0@bit,0@bit,0@bit,0@bit,%rax[20],%rax[21],%rax[22],%rax[23],
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     0@bit,0@bit,0@bit,0@bit,%rax[36],%rax[37],%rax[38],%rax[39],
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     0@bit,0@bit,0@bit,0@bit,%rax[52],%rax[53],%rax[54],%rax[55],
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit];
(* xor    %rcx,%rax                                #! PC = 0x555555582d0a *)
adds %dc %rax %rcx %rax;
(* cmp    $0x2,%esi                                #! PC = 0x555555582d0d *)
(* cmp 0x2, esi *)
nop;
(* #je     0x555555582d48 <radix_conversions+584>  #! PC = 0x555555582d10 *)
#je     0x555555582d48 <radix_conversions+584>  #! 0x555555582d10 = 0x555555582d10;
(* mov    %rax,%rcx                                #! PC = 0x555555582d12 *)
mov %rcx %rax;
(* shr    $0x2,%rcx                                #! PC = 0x555555582d15 *)
mov %rcx
    [%rcx[2],%rcx[3],%rcx[4],%rcx[5],%rcx[6],%rcx[7],
     %rcx[8],%rcx[9],%rcx[10],%rcx[11],%rcx[12],%rcx[13],%rcx[14],%rcx[15],
     %rcx[16],%rcx[17],%rcx[18],%rcx[19],%rcx[20],%rcx[21],%rcx[22],%rcx[23],
     %rcx[24],%rcx[25],%rcx[26],%rcx[27],%rcx[28],%rcx[29],%rcx[30],%rcx[31],
     %rcx[32],%rcx[33],%rcx[34],%rcx[35],%rcx[36],%rcx[37],%rcx[38],%rcx[39],
     %rcx[40],%rcx[41],%rcx[42],%rcx[43],%rcx[44],%rcx[45],%rcx[46],%rcx[47],
     %rcx[48],%rcx[49],%rcx[50],%rcx[51],%rcx[52],%rcx[53],%rcx[54],%rcx[55],
     %rcx[56],%rcx[57],%rcx[58],%rcx[59],%rcx[60],%rcx[61],%rcx[62],%rcx[63],
     0@bit,0@bit];
(* and    %r10,%rcx                                #! PC = 0x555555582d19 *)
mov %rcx
    [0@bit,0@bit,0@bit,0@bit,%rcx[4],%rcx[5],0@bit,0@bit,
     0@bit,0@bit,0@bit,0@bit,%rcx[12],%rcx[13],0@bit,0@bit,
     0@bit,0@bit,0@bit,0@bit,%rcx[20],%rcx[21],0@bit,0@bit,
     0@bit,0@bit,0@bit,0@bit,%rcx[28],%rcx[29],0@bit,0@bit,
     0@bit,0@bit,0@bit,0@bit,%rcx[36],%rcx[37],0@bit,0@bit,
     0@bit,0@bit,0@bit,0@bit,%rcx[44],%rcx[45],0@bit,0@bit,
     0@bit,0@bit,0@bit,0@bit,%rcx[52],%rcx[53],0@bit,0@bit,
     0@bit,0@bit,0@bit,0@bit,%rcx[60],%rcx[61],0@bit,0@bit];
(* xor    %rax,%rcx                                #! PC = 0x555555582d1c *)
adds %dc %rcx %rax %rcx;
(* mov    %rcx,%rax                                #! PC = 0x555555582d1f *)
mov %rax %rcx;
(* shr    $0x2,%rax                                #! PC = 0x555555582d22 *)
mov %rax
    [%rax[2],%rax[3],%rax[4],%rax[5],%rax[6],%rax[7],
     %rax[8],%rax[9],%rax[10],%rax[11],%rax[12],%rax[13],%rax[14],%rax[15],
     %rax[16],%rax[17],%rax[18],%rax[19],%rax[20],%rax[21],%rax[22],%rax[23],
     %rax[24],%rax[25],%rax[26],%rax[27],%rax[28],%rax[29],%rax[30],%rax[31],
     %rax[32],%rax[33],%rax[34],%rax[35],%rax[36],%rax[37],%rax[38],%rax[39],
     %rax[40],%rax[41],%rax[42],%rax[43],%rax[44],%rax[45],%rax[46],%rax[47],
     %rax[48],%rax[49],%rax[50],%rax[51],%rax[52],%rax[53],%rax[54],%rax[55],
     %rax[56],%rax[57],%rax[58],%rax[59],%rax[60],%rax[61],%rax[62],%rax[63],
     0@bit,0@bit];
(* and    %r9,%rax                                 #! PC = 0x555555582d26 *)
mov %rax
    [0@bit,0@bit,%rax[2],%rax[3],0@bit,0@bit,0@bit,0@bit,
     0@bit,0@bit,%rax[10],%rax[11],0@bit,0@bit,0@bit,0@bit,
     0@bit,0@bit,%rax[18],%rax[19],0@bit,0@bit,0@bit,0@bit,
     0@bit,0@bit,%rax[26],%rax[27],0@bit,0@bit,0@bit,0@bit,
     0@bit,0@bit,%rax[34],%rax[35],0@bit,0@bit,0@bit,0@bit,
     0@bit,0@bit,%rax[42],%rax[43],0@bit,0@bit,0@bit,0@bit,
     0@bit,0@bit,%rax[50],%rax[51],0@bit,0@bit,0@bit,0@bit,
     0@bit,0@bit,%rax[58],%rax[59],0@bit,0@bit,0@bit,0@bit];
(* xor    %rcx,%rax                                #! PC = 0x555555582d29 *)
adds %dc %rax %rcx %rax;
(* test   %esi,%esi                                #! PC = 0x555555582d2c *)
(* test esi, esi *)
nop;
(* #jne    0x555555582d48 <radix_conversions+584>  #! PC = 0x555555582d2e *)
#jne    0x555555582d48 <radix_conversions+584>  #! 0x555555582d2e = 0x555555582d2e;
(* mov    %rax,(%rdx)                              #! EA = L0x7ffffff50cf0; PC = 0x555555582d48 *)
mov %L0x7ffffff50cf0 %rax;
(* add    $0x8,%rdx                                #! PC = 0x555555582d4b *)
(* add $0x8, rdx *)
nop;
(* cmp    %rdx,%r12                                #! PC = 0x555555582d4f *)
(* cmp rdx, r12 *)
nop;
(* #jne    0x555555582cb0 <radix_conversions+432>  #! PC = 0x555555582d52 *)
#jne    0x555555582cb0 <radix_conversions+432>  #! 0x555555582d52 = 0x555555582d52;
(* mov    (%rdx),%rax                              #! EA = L0x7ffffff50cf8; Value = 0xb585cd055b58bfd0; PC = 0x555555582cb0 *)
mov %rax %L0x7ffffff50cf8;
(* mov    %rax,%rcx                                #! PC = 0x555555582cb3 *)
mov %rcx %rax;
(* shr    $0x10,%rcx                               #! PC = 0x555555582cb6 *)
mov %rcx
    [%rcx[16],%rcx[17],%rcx[18],%rcx[19],%rcx[20],%rcx[21],%rcx[22],%rcx[23],
     %rcx[24],%rcx[25],%rcx[26],%rcx[27],%rcx[28],%rcx[29],%rcx[30],%rcx[31],
     %rcx[32],%rcx[33],%rcx[34],%rcx[35],%rcx[36],%rcx[37],%rcx[38],%rcx[39],
     %rcx[40],%rcx[41],%rcx[42],%rcx[43],%rcx[44],%rcx[45],%rcx[46],%rcx[47],
     %rcx[48],%rcx[49],%rcx[50],%rcx[51],%rcx[52],%rcx[53],%rcx[54],%rcx[55],
     %rcx[56],%rcx[57],%rcx[58],%rcx[59],%rcx[60],%rcx[61],%rcx[62],%rcx[63],
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit];
(* and    %rbx,%rcx                                #! PC = 0x555555582cba *)
mov %rcx
    [0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     %rcx[32],%rcx[33],%rcx[34],%rcx[35],%rcx[36],%rcx[37],%rcx[38],%rcx[39],
     %rcx[40],%rcx[41],%rcx[42],%rcx[43],%rcx[44],%rcx[45],%rcx[46],%rcx[47],
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit];
(* xor    %rax,%rcx                                #! PC = 0x555555582cbd *)
adds %dc %rcx %rax %rcx;
(* mov    %rcx,%rax                                #! PC = 0x555555582cc0 *)
mov %rax %rcx;
(* shr    $0x10,%rax                               #! PC = 0x555555582cc3 *)
mov %rax
    [%rax[16],%rax[17],%rax[18],%rax[19],%rax[20],%rax[21],%rax[22],%rax[23],
     %rax[24],%rax[25],%rax[26],%rax[27],%rax[28],%rax[29],%rax[30],%rax[31],
     %rax[32],%rax[33],%rax[34],%rax[35],%rax[36],%rax[37],%rax[38],%rax[39],
     %rax[40],%rax[41],%rax[42],%rax[43],%rax[44],%rax[45],%rax[46],%rax[47],
     %rax[48],%rax[49],%rax[50],%rax[51],%rax[52],%rax[53],%rax[54],%rax[55],
     %rax[56],%rax[57],%rax[58],%rax[59],%rax[60],%rax[61],%rax[62],%rax[63],
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit];
(* and    $0xffff0000,%eax                         #! PC = 0x555555582cc7 *)
mov %rax
    [0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     %rax[16],%rax[17],%rax[18],%rax[19],%rax[20],%rax[21],%rax[22],%rax[23],
     %rax[24],%rax[25],%rax[26],%rax[27],%rax[28],%rax[29],%rax[30],%rax[31],
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit];
(* xor    %rcx,%rax                                #! PC = 0x555555582ccc *)
adds %dc %rax %rcx %rax;
(* cmp    $0x4,%esi                                #! PC = 0x555555582ccf *)
(* cmp 0x4, esi *)
nop;
(* #je     0x555555582d48 <radix_conversions+584>  #! PC = 0x555555582cd2 *)
#je     0x555555582d48 <radix_conversions+584>  #! 0x555555582cd2 = 0x555555582cd2;
(* mov    %rax,%rcx                                #! PC = 0x555555582cd4 *)
mov %rcx %rax;
(* shr    $0x8,%rcx                                #! PC = 0x555555582cd7 *)
mov %rcx
    [%rcx[8],%rcx[9],%rcx[10],%rcx[11],%rcx[12],%rcx[13],%rcx[14],%rcx[15],
     %rcx[16],%rcx[17],%rcx[18],%rcx[19],%rcx[20],%rcx[21],%rcx[22],%rcx[23],
     %rcx[24],%rcx[25],%rcx[26],%rcx[27],%rcx[28],%rcx[29],%rcx[30],%rcx[31],
     %rcx[32],%rcx[33],%rcx[34],%rcx[35],%rcx[36],%rcx[37],%rcx[38],%rcx[39],
     %rcx[40],%rcx[41],%rcx[42],%rcx[43],%rcx[44],%rcx[45],%rcx[46],%rcx[47],
     %rcx[48],%rcx[49],%rcx[50],%rcx[51],%rcx[52],%rcx[53],%rcx[54],%rcx[55],
     %rcx[56],%rcx[57],%rcx[58],%rcx[59],%rcx[60],%rcx[61],%rcx[62],%rcx[63],
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit];
(* and    %r14,%rcx                                #! PC = 0x555555582cdb *)
mov %rcx
    [0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     %rcx[16],%rcx[17],%rcx[18],%rcx[19],%rcx[20],%rcx[21],%rcx[22],%rcx[23],
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     %rcx[48],%rcx[49],%rcx[50],%rcx[51],%rcx[52],%rcx[53],%rcx[54],%rcx[55],
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit];
(* xor    %rax,%rcx                                #! PC = 0x555555582cde *)
adds %dc %rcx %rax %rcx;
(* mov    %rcx,%rax                                #! PC = 0x555555582ce1 *)
mov %rax %rcx;
(* shr    $0x8,%rax                                #! PC = 0x555555582ce4 *)
mov %rax
    [%rax[8],%rax[9],%rax[10],%rax[11],%rax[12],%rax[13],%rax[14],%rax[15],
     %rax[16],%rax[17],%rax[18],%rax[19],%rax[20],%rax[21],%rax[22],%rax[23],
     %rax[24],%rax[25],%rax[26],%rax[27],%rax[28],%rax[29],%rax[30],%rax[31],
     %rax[32],%rax[33],%rax[34],%rax[35],%rax[36],%rax[37],%rax[38],%rax[39],
     %rax[40],%rax[41],%rax[42],%rax[43],%rax[44],%rax[45],%rax[46],%rax[47],
     %rax[48],%rax[49],%rax[50],%rax[51],%rax[52],%rax[53],%rax[54],%rax[55],
     %rax[56],%rax[57],%rax[58],%rax[59],%rax[60],%rax[61],%rax[62],%rax[63],
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit];
(* and    %r13,%rax                                #! PC = 0x555555582ce8 *)
mov %rax
    [0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     %rax[8],%rax[9],%rax[10],%rax[11],%rax[12],%rax[13],%rax[14],%rax[15],
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     %rax[40],%rax[41],%rax[42],%rax[43],%rax[44],%rax[45],%rax[46],%rax[47],
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit];
(* xor    %rcx,%rax                                #! PC = 0x555555582ceb *)
adds %dc %rax %rcx %rax;
(* cmp    $0x3,%esi                                #! PC = 0x555555582cee *)
(* cmp 0x3, esi *)
nop;
(* #je     0x555555582d48 <radix_conversions+584>  #! PC = 0x555555582cf1 *)
#je     0x555555582d48 <radix_conversions+584>  #! 0x555555582cf1 = 0x555555582cf1;
(* mov    %rax,%rcx                                #! PC = 0x555555582cf3 *)
mov %rcx %rax;
(* shr    $0x4,%rcx                                #! PC = 0x555555582cf6 *)
mov %rcx
    [%rcx[4],%rcx[5],%rcx[6],%rcx[7],
     %rcx[8],%rcx[9],%rcx[10],%rcx[11],%rcx[12],%rcx[13],%rcx[14],%rcx[15],
     %rcx[16],%rcx[17],%rcx[18],%rcx[19],%rcx[20],%rcx[21],%rcx[22],%rcx[23],
     %rcx[24],%rcx[25],%rcx[26],%rcx[27],%rcx[28],%rcx[29],%rcx[30],%rcx[31],
     %rcx[32],%rcx[33],%rcx[34],%rcx[35],%rcx[36],%rcx[37],%rcx[38],%rcx[39],
     %rcx[40],%rcx[41],%rcx[42],%rcx[43],%rcx[44],%rcx[45],%rcx[46],%rcx[47],
     %rcx[48],%rcx[49],%rcx[50],%rcx[51],%rcx[52],%rcx[53],%rcx[54],%rcx[55],
     %rcx[56],%rcx[57],%rcx[58],%rcx[59],%rcx[60],%rcx[61],%rcx[62],%rcx[63],
     0@bit,0@bit,0@bit,0@bit];
(* and    %r8,%rcx                                 #! PC = 0x555555582cfa *)
mov %rcx
    [0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     %rcx[8],%rcx[9],%rcx[10],%rcx[11],0@bit,0@bit,0@bit,0@bit,
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     %rcx[24],%rcx[25],%rcx[26],%rcx[27],0@bit,0@bit,0@bit,0@bit,
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     %rcx[40],%rcx[41],%rcx[42],%rcx[43],0@bit,0@bit,0@bit,0@bit,
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     %rcx[56],%rcx[57],%rcx[58],%rcx[59],0@bit,0@bit,0@bit,0@bit];
(* xor    %rax,%rcx                                #! PC = 0x555555582cfd *)
adds %dc %rcx %rax %rcx;
(* mov    %rcx,%rax                                #! PC = 0x555555582d00 *)
mov %rax %rcx;
(* shr    $0x4,%rax                                #! PC = 0x555555582d03 *)
mov %rax
    [%rax[4],%rax[5],%rax[6],%rax[7],
     %rax[8],%rax[9],%rax[10],%rax[11],%rax[12],%rax[13],%rax[14],%rax[15],
     %rax[16],%rax[17],%rax[18],%rax[19],%rax[20],%rax[21],%rax[22],%rax[23],
     %rax[24],%rax[25],%rax[26],%rax[27],%rax[28],%rax[29],%rax[30],%rax[31],
     %rax[32],%rax[33],%rax[34],%rax[35],%rax[36],%rax[37],%rax[38],%rax[39],
     %rax[40],%rax[41],%rax[42],%rax[43],%rax[44],%rax[45],%rax[46],%rax[47],
     %rax[48],%rax[49],%rax[50],%rax[51],%rax[52],%rax[53],%rax[54],%rax[55],
     %rax[56],%rax[57],%rax[58],%rax[59],%rax[60],%rax[61],%rax[62],%rax[63],
     0@bit,0@bit,0@bit,0@bit];
(* and    %rdi,%rax                                #! PC = 0x555555582d07 *)
mov %rax
    [0@bit,0@bit,0@bit,0@bit,%rax[4],%rax[5],%rax[6],%rax[7],
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     0@bit,0@bit,0@bit,0@bit,%rax[20],%rax[21],%rax[22],%rax[23],
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     0@bit,0@bit,0@bit,0@bit,%rax[36],%rax[37],%rax[38],%rax[39],
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     0@bit,0@bit,0@bit,0@bit,%rax[52],%rax[53],%rax[54],%rax[55],
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit];
(* xor    %rcx,%rax                                #! PC = 0x555555582d0a *)
adds %dc %rax %rcx %rax;
(* cmp    $0x2,%esi                                #! PC = 0x555555582d0d *)
(* cmp 0x2, esi *)
nop;
(* #je     0x555555582d48 <radix_conversions+584>  #! PC = 0x555555582d10 *)
#je     0x555555582d48 <radix_conversions+584>  #! 0x555555582d10 = 0x555555582d10;
(* mov    %rax,%rcx                                #! PC = 0x555555582d12 *)
mov %rcx %rax;
(* shr    $0x2,%rcx                                #! PC = 0x555555582d15 *)
mov %rcx
    [%rcx[2],%rcx[3],%rcx[4],%rcx[5],%rcx[6],%rcx[7],
     %rcx[8],%rcx[9],%rcx[10],%rcx[11],%rcx[12],%rcx[13],%rcx[14],%rcx[15],
     %rcx[16],%rcx[17],%rcx[18],%rcx[19],%rcx[20],%rcx[21],%rcx[22],%rcx[23],
     %rcx[24],%rcx[25],%rcx[26],%rcx[27],%rcx[28],%rcx[29],%rcx[30],%rcx[31],
     %rcx[32],%rcx[33],%rcx[34],%rcx[35],%rcx[36],%rcx[37],%rcx[38],%rcx[39],
     %rcx[40],%rcx[41],%rcx[42],%rcx[43],%rcx[44],%rcx[45],%rcx[46],%rcx[47],
     %rcx[48],%rcx[49],%rcx[50],%rcx[51],%rcx[52],%rcx[53],%rcx[54],%rcx[55],
     %rcx[56],%rcx[57],%rcx[58],%rcx[59],%rcx[60],%rcx[61],%rcx[62],%rcx[63],
     0@bit,0@bit];
(* and    %r10,%rcx                                #! PC = 0x555555582d19 *)
mov %rcx
    [0@bit,0@bit,0@bit,0@bit,%rcx[4],%rcx[5],0@bit,0@bit,
     0@bit,0@bit,0@bit,0@bit,%rcx[12],%rcx[13],0@bit,0@bit,
     0@bit,0@bit,0@bit,0@bit,%rcx[20],%rcx[21],0@bit,0@bit,
     0@bit,0@bit,0@bit,0@bit,%rcx[28],%rcx[29],0@bit,0@bit,
     0@bit,0@bit,0@bit,0@bit,%rcx[36],%rcx[37],0@bit,0@bit,
     0@bit,0@bit,0@bit,0@bit,%rcx[44],%rcx[45],0@bit,0@bit,
     0@bit,0@bit,0@bit,0@bit,%rcx[52],%rcx[53],0@bit,0@bit,
     0@bit,0@bit,0@bit,0@bit,%rcx[60],%rcx[61],0@bit,0@bit];
(* xor    %rax,%rcx                                #! PC = 0x555555582d1c *)
adds %dc %rcx %rax %rcx;
(* mov    %rcx,%rax                                #! PC = 0x555555582d1f *)
mov %rax %rcx;
(* shr    $0x2,%rax                                #! PC = 0x555555582d22 *)
mov %rax
    [%rax[2],%rax[3],%rax[4],%rax[5],%rax[6],%rax[7],
     %rax[8],%rax[9],%rax[10],%rax[11],%rax[12],%rax[13],%rax[14],%rax[15],
     %rax[16],%rax[17],%rax[18],%rax[19],%rax[20],%rax[21],%rax[22],%rax[23],
     %rax[24],%rax[25],%rax[26],%rax[27],%rax[28],%rax[29],%rax[30],%rax[31],
     %rax[32],%rax[33],%rax[34],%rax[35],%rax[36],%rax[37],%rax[38],%rax[39],
     %rax[40],%rax[41],%rax[42],%rax[43],%rax[44],%rax[45],%rax[46],%rax[47],
     %rax[48],%rax[49],%rax[50],%rax[51],%rax[52],%rax[53],%rax[54],%rax[55],
     %rax[56],%rax[57],%rax[58],%rax[59],%rax[60],%rax[61],%rax[62],%rax[63],
     0@bit,0@bit];
(* and    %r9,%rax                                 #! PC = 0x555555582d26 *)
mov %rax
    [0@bit,0@bit,%rax[2],%rax[3],0@bit,0@bit,0@bit,0@bit,
     0@bit,0@bit,%rax[10],%rax[11],0@bit,0@bit,0@bit,0@bit,
     0@bit,0@bit,%rax[18],%rax[19],0@bit,0@bit,0@bit,0@bit,
     0@bit,0@bit,%rax[26],%rax[27],0@bit,0@bit,0@bit,0@bit,
     0@bit,0@bit,%rax[34],%rax[35],0@bit,0@bit,0@bit,0@bit,
     0@bit,0@bit,%rax[42],%rax[43],0@bit,0@bit,0@bit,0@bit,
     0@bit,0@bit,%rax[50],%rax[51],0@bit,0@bit,0@bit,0@bit,
     0@bit,0@bit,%rax[58],%rax[59],0@bit,0@bit,0@bit,0@bit];
(* xor    %rcx,%rax                                #! PC = 0x555555582d29 *)
adds %dc %rax %rcx %rax;
(* test   %esi,%esi                                #! PC = 0x555555582d2c *)
(* test esi, esi *)
nop;
(* #jne    0x555555582d48 <radix_conversions+584>  #! PC = 0x555555582d2e *)
#jne    0x555555582d48 <radix_conversions+584>  #! 0x555555582d2e = 0x555555582d2e;
(* mov    %rax,(%rdx)                              #! EA = L0x7ffffff50cf8; PC = 0x555555582d48 *)
mov %L0x7ffffff50cf8 %rax;
(* add    $0x8,%rdx                                #! PC = 0x555555582d4b *)
(* add $0x8, rdx *)
nop;
(* cmp    %rdx,%r12                                #! PC = 0x555555582d4f *)
(* cmp rdx, r12 *)
nop;
(* #jne    0x555555582cb0 <radix_conversions+432>  #! PC = 0x555555582d52 *)
#jne    0x555555582cb0 <radix_conversions+432>  #! 0x555555582d52 = 0x555555582d52;



(****************
  NOTE: end of 2nd radix conversion. obtain 4 16-coefficient polynomials
 ****************)

ghost X1@uint64,F10@uint16,F11@uint16,F12@uint16,F13@uint16:
X1 = Y0**2 + Y0 /\
F10 =
poly z [%L0x7ffffff50ca0[0],%L0x7ffffff50ca8[0],%L0x7ffffff50cb0[0],
        %L0x7ffffff50cb8[0],%L0x7ffffff50cc0[0],%L0x7ffffff50cc8[0],
        %L0x7ffffff50cd0[0],%L0x7ffffff50cd8[0],%L0x7ffffff50ce0[0],
        %L0x7ffffff50ce8[0],%L0x7ffffff50cf0[0],%L0x7ffffff50cf8[0]]*X1**0+
poly z [%L0x7ffffff50ca0[4],%L0x7ffffff50ca8[4],%L0x7ffffff50cb0[4],
        %L0x7ffffff50cb8[4],%L0x7ffffff50cc0[4],%L0x7ffffff50cc8[4],
        %L0x7ffffff50cd0[4],%L0x7ffffff50cd8[4],%L0x7ffffff50ce0[4],
        %L0x7ffffff50ce8[4],%L0x7ffffff50cf0[4],%L0x7ffffff50cf8[4]]*X1**1+
poly z [%L0x7ffffff50ca0[8],%L0x7ffffff50ca8[8],%L0x7ffffff50cb0[8],
        %L0x7ffffff50cb8[8],%L0x7ffffff50cc0[8],%L0x7ffffff50cc8[8],
        %L0x7ffffff50cd0[8],%L0x7ffffff50cd8[8],%L0x7ffffff50ce0[8],
        %L0x7ffffff50ce8[8],%L0x7ffffff50cf0[8],%L0x7ffffff50cf8[8]]*X1**2+
poly z [%L0x7ffffff50ca0[12],%L0x7ffffff50ca8[12],%L0x7ffffff50cb0[12],
        %L0x7ffffff50cb8[12],%L0x7ffffff50cc0[12],%L0x7ffffff50cc8[12],
        %L0x7ffffff50cd0[12],%L0x7ffffff50cd8[12],%L0x7ffffff50ce0[12],
        %L0x7ffffff50ce8[12],%L0x7ffffff50cf0[12],%L0x7ffffff50cf8[12]]*X1**3+
poly z [%L0x7ffffff50ca0[16],%L0x7ffffff50ca8[16],%L0x7ffffff50cb0[16],
        %L0x7ffffff50cb8[16],%L0x7ffffff50cc0[16],%L0x7ffffff50cc8[16],
        %L0x7ffffff50cd0[16],%L0x7ffffff50cd8[16],%L0x7ffffff50ce0[16],
        %L0x7ffffff50ce8[16],%L0x7ffffff50cf0[16],%L0x7ffffff50cf8[16]]*X1**4+
poly z [%L0x7ffffff50ca0[20],%L0x7ffffff50ca8[20],%L0x7ffffff50cb0[20],
        %L0x7ffffff50cb8[20],%L0x7ffffff50cc0[20],%L0x7ffffff50cc8[20],
        %L0x7ffffff50cd0[20],%L0x7ffffff50cd8[20],%L0x7ffffff50ce0[20],
        %L0x7ffffff50ce8[20],%L0x7ffffff50cf0[20],%L0x7ffffff50cf8[20]]*X1**5+
poly z [%L0x7ffffff50ca0[24],%L0x7ffffff50ca8[24],%L0x7ffffff50cb0[24],
        %L0x7ffffff50cb8[24],%L0x7ffffff50cc0[24],%L0x7ffffff50cc8[24],
        %L0x7ffffff50cd0[24],%L0x7ffffff50cd8[24],%L0x7ffffff50ce0[24],
        %L0x7ffffff50ce8[24],%L0x7ffffff50cf0[24],%L0x7ffffff50cf8[24]]*X1**6+
poly z [%L0x7ffffff50ca0[28],%L0x7ffffff50ca8[28],%L0x7ffffff50cb0[28],
        %L0x7ffffff50cb8[28],%L0x7ffffff50cc0[28],%L0x7ffffff50cc8[28],
        %L0x7ffffff50cd0[28],%L0x7ffffff50cd8[28],%L0x7ffffff50ce0[28],
        %L0x7ffffff50ce8[28],%L0x7ffffff50cf0[28],%L0x7ffffff50cf8[28]]*X1**7+
poly z [%L0x7ffffff50ca0[32],%L0x7ffffff50ca8[32],%L0x7ffffff50cb0[32],
        %L0x7ffffff50cb8[32],%L0x7ffffff50cc0[32],%L0x7ffffff50cc8[32],
        %L0x7ffffff50cd0[32],%L0x7ffffff50cd8[32],%L0x7ffffff50ce0[32],
        %L0x7ffffff50ce8[32],%L0x7ffffff50cf0[32],%L0x7ffffff50cf8[32]]*X1**8+
poly z [%L0x7ffffff50ca0[36],%L0x7ffffff50ca8[36],%L0x7ffffff50cb0[36],
        %L0x7ffffff50cb8[36],%L0x7ffffff50cc0[36],%L0x7ffffff50cc8[36],
        %L0x7ffffff50cd0[36],%L0x7ffffff50cd8[36],%L0x7ffffff50ce0[36],
        %L0x7ffffff50ce8[36],%L0x7ffffff50cf0[36],%L0x7ffffff50cf8[36]]*X1**9+
poly z [%L0x7ffffff50ca0[40],%L0x7ffffff50ca8[40],%L0x7ffffff50cb0[40],
        %L0x7ffffff50cb8[40],%L0x7ffffff50cc0[40],%L0x7ffffff50cc8[40],
        %L0x7ffffff50cd0[40],%L0x7ffffff50cd8[40],%L0x7ffffff50ce0[40],
        %L0x7ffffff50ce8[40],%L0x7ffffff50cf0[40],%L0x7ffffff50cf8[40]]*X1**10+
poly z [%L0x7ffffff50ca0[44],%L0x7ffffff50ca8[44],%L0x7ffffff50cb0[44],
        %L0x7ffffff50cb8[44],%L0x7ffffff50cc0[44],%L0x7ffffff50cc8[44],
        %L0x7ffffff50cd0[44],%L0x7ffffff50cd8[44],%L0x7ffffff50ce0[44],
        %L0x7ffffff50ce8[44],%L0x7ffffff50cf0[44],%L0x7ffffff50cf8[44]]*X1**11+
poly z [%L0x7ffffff50ca0[48],%L0x7ffffff50ca8[48],%L0x7ffffff50cb0[48],
        %L0x7ffffff50cb8[48],%L0x7ffffff50cc0[48],%L0x7ffffff50cc8[48],
        %L0x7ffffff50cd0[48],%L0x7ffffff50cd8[48],%L0x7ffffff50ce0[48],
        %L0x7ffffff50ce8[48],%L0x7ffffff50cf0[48],%L0x7ffffff50cf8[48]]*X1**12+
poly z [%L0x7ffffff50ca0[52],%L0x7ffffff50ca8[52],%L0x7ffffff50cb0[52],
        %L0x7ffffff50cb8[52],%L0x7ffffff50cc0[52],%L0x7ffffff50cc8[52],
        %L0x7ffffff50cd0[52],%L0x7ffffff50cd8[52],%L0x7ffffff50ce0[52],
        %L0x7ffffff50ce8[52],%L0x7ffffff50cf0[52],%L0x7ffffff50cf8[52]]*X1**13+
poly z [%L0x7ffffff50ca0[56],%L0x7ffffff50ca8[56],%L0x7ffffff50cb0[56],
        %L0x7ffffff50cb8[56],%L0x7ffffff50cc0[56],%L0x7ffffff50cc8[56],
        %L0x7ffffff50cd0[56],%L0x7ffffff50cd8[56],%L0x7ffffff50ce0[56],
        %L0x7ffffff50ce8[56],%L0x7ffffff50cf0[56],%L0x7ffffff50cf8[56]]*X1**14+
poly z [%L0x7ffffff50ca0[60],%L0x7ffffff50ca8[60],%L0x7ffffff50cb0[60],
        %L0x7ffffff50cb8[60],%L0x7ffffff50cc0[60],%L0x7ffffff50cc8[60],
        %L0x7ffffff50cd0[60],%L0x7ffffff50cd8[60],%L0x7ffffff50ce0[60],
        %L0x7ffffff50ce8[60],%L0x7ffffff50cf0[60],%L0x7ffffff50cf8[60]]*X1**15
 /\
F11 =
poly z [%L0x7ffffff50ca0[1],%L0x7ffffff50ca8[1],%L0x7ffffff50cb0[1],
        %L0x7ffffff50cb8[1],%L0x7ffffff50cc0[1],%L0x7ffffff50cc8[1],
        %L0x7ffffff50cd0[1],%L0x7ffffff50cd8[1],%L0x7ffffff50ce0[1],
        %L0x7ffffff50ce8[1],%L0x7ffffff50cf0[1],%L0x7ffffff50cf8[1]]*X1**0+
poly z [%L0x7ffffff50ca0[5],%L0x7ffffff50ca8[5],%L0x7ffffff50cb0[5],
        %L0x7ffffff50cb8[5],%L0x7ffffff50cc0[5],%L0x7ffffff50cc8[5],
        %L0x7ffffff50cd0[5],%L0x7ffffff50cd8[5],%L0x7ffffff50ce0[5],
        %L0x7ffffff50ce8[5],%L0x7ffffff50cf0[5],%L0x7ffffff50cf8[5]]*X1**1+
poly z [%L0x7ffffff50ca0[9],%L0x7ffffff50ca8[9],%L0x7ffffff50cb0[9],
        %L0x7ffffff50cb8[9],%L0x7ffffff50cc0[9],%L0x7ffffff50cc8[9],
        %L0x7ffffff50cd0[9],%L0x7ffffff50cd8[9],%L0x7ffffff50ce0[9],
        %L0x7ffffff50ce8[9],%L0x7ffffff50cf0[9],%L0x7ffffff50cf8[9]]*X1**2+
poly z [%L0x7ffffff50ca0[13],%L0x7ffffff50ca8[13],%L0x7ffffff50cb0[13],
        %L0x7ffffff50cb8[13],%L0x7ffffff50cc0[13],%L0x7ffffff50cc8[13],
        %L0x7ffffff50cd0[13],%L0x7ffffff50cd8[13],%L0x7ffffff50ce0[13],
        %L0x7ffffff50ce8[13],%L0x7ffffff50cf0[13],%L0x7ffffff50cf8[13]]*X1**3+
poly z [%L0x7ffffff50ca0[17],%L0x7ffffff50ca8[17],%L0x7ffffff50cb0[17],
        %L0x7ffffff50cb8[17],%L0x7ffffff50cc0[17],%L0x7ffffff50cc8[17],
        %L0x7ffffff50cd0[17],%L0x7ffffff50cd8[17],%L0x7ffffff50ce0[17],
        %L0x7ffffff50ce8[17],%L0x7ffffff50cf0[17],%L0x7ffffff50cf8[17]]*X1**4+
poly z [%L0x7ffffff50ca0[21],%L0x7ffffff50ca8[21],%L0x7ffffff50cb0[21],
        %L0x7ffffff50cb8[21],%L0x7ffffff50cc0[21],%L0x7ffffff50cc8[21],
        %L0x7ffffff50cd0[21],%L0x7ffffff50cd8[21],%L0x7ffffff50ce0[21],
        %L0x7ffffff50ce8[21],%L0x7ffffff50cf0[21],%L0x7ffffff50cf8[21]]*X1**5+
poly z [%L0x7ffffff50ca0[25],%L0x7ffffff50ca8[25],%L0x7ffffff50cb0[25],
        %L0x7ffffff50cb8[25],%L0x7ffffff50cc0[25],%L0x7ffffff50cc8[25],
        %L0x7ffffff50cd0[25],%L0x7ffffff50cd8[25],%L0x7ffffff50ce0[25],
        %L0x7ffffff50ce8[25],%L0x7ffffff50cf0[25],%L0x7ffffff50cf8[25]]*X1**6+
poly z [%L0x7ffffff50ca0[29],%L0x7ffffff50ca8[29],%L0x7ffffff50cb0[29],
        %L0x7ffffff50cb8[29],%L0x7ffffff50cc0[29],%L0x7ffffff50cc8[29],
        %L0x7ffffff50cd0[29],%L0x7ffffff50cd8[29],%L0x7ffffff50ce0[29],
        %L0x7ffffff50ce8[29],%L0x7ffffff50cf0[29],%L0x7ffffff50cf8[29]]*X1**7+
poly z [%L0x7ffffff50ca0[33],%L0x7ffffff50ca8[33],%L0x7ffffff50cb0[33],
        %L0x7ffffff50cb8[33],%L0x7ffffff50cc0[33],%L0x7ffffff50cc8[33],
        %L0x7ffffff50cd0[33],%L0x7ffffff50cd8[33],%L0x7ffffff50ce0[33],
        %L0x7ffffff50ce8[33],%L0x7ffffff50cf0[33],%L0x7ffffff50cf8[33]]*X1**8+
poly z [%L0x7ffffff50ca0[37],%L0x7ffffff50ca8[37],%L0x7ffffff50cb0[37],
        %L0x7ffffff50cb8[37],%L0x7ffffff50cc0[37],%L0x7ffffff50cc8[37],
        %L0x7ffffff50cd0[37],%L0x7ffffff50cd8[37],%L0x7ffffff50ce0[37],
        %L0x7ffffff50ce8[37],%L0x7ffffff50cf0[37],%L0x7ffffff50cf8[37]]*X1**9+
poly z [%L0x7ffffff50ca0[41],%L0x7ffffff50ca8[41],%L0x7ffffff50cb0[41],
        %L0x7ffffff50cb8[41],%L0x7ffffff50cc0[41],%L0x7ffffff50cc8[41],
        %L0x7ffffff50cd0[41],%L0x7ffffff50cd8[41],%L0x7ffffff50ce0[41],
        %L0x7ffffff50ce8[41],%L0x7ffffff50cf0[41],%L0x7ffffff50cf8[41]]*X1**10+
poly z [%L0x7ffffff50ca0[45],%L0x7ffffff50ca8[45],%L0x7ffffff50cb0[45],
        %L0x7ffffff50cb8[45],%L0x7ffffff50cc0[45],%L0x7ffffff50cc8[45],
        %L0x7ffffff50cd0[45],%L0x7ffffff50cd8[45],%L0x7ffffff50ce0[45],
        %L0x7ffffff50ce8[45],%L0x7ffffff50cf0[45],%L0x7ffffff50cf8[45]]*X1**11+
poly z [%L0x7ffffff50ca0[49],%L0x7ffffff50ca8[49],%L0x7ffffff50cb0[49],
        %L0x7ffffff50cb8[49],%L0x7ffffff50cc0[49],%L0x7ffffff50cc8[49],
        %L0x7ffffff50cd0[49],%L0x7ffffff50cd8[49],%L0x7ffffff50ce0[49],
        %L0x7ffffff50ce8[49],%L0x7ffffff50cf0[49],%L0x7ffffff50cf8[49]]*X1**12+
poly z [%L0x7ffffff50ca0[53],%L0x7ffffff50ca8[53],%L0x7ffffff50cb0[53],
        %L0x7ffffff50cb8[53],%L0x7ffffff50cc0[53],%L0x7ffffff50cc8[53],
        %L0x7ffffff50cd0[53],%L0x7ffffff50cd8[53],%L0x7ffffff50ce0[53],
        %L0x7ffffff50ce8[53],%L0x7ffffff50cf0[53],%L0x7ffffff50cf8[53]]*X1**13+
poly z [%L0x7ffffff50ca0[57],%L0x7ffffff50ca8[57],%L0x7ffffff50cb0[57],
        %L0x7ffffff50cb8[57],%L0x7ffffff50cc0[57],%L0x7ffffff50cc8[57],
        %L0x7ffffff50cd0[57],%L0x7ffffff50cd8[57],%L0x7ffffff50ce0[57],
        %L0x7ffffff50ce8[57],%L0x7ffffff50cf0[57],%L0x7ffffff50cf8[57]]*X1**14+
poly z [%L0x7ffffff50ca0[61],%L0x7ffffff50ca8[61],%L0x7ffffff50cb0[61],
        %L0x7ffffff50cb8[61],%L0x7ffffff50cc0[61],%L0x7ffffff50cc8[61],
        %L0x7ffffff50cd0[61],%L0x7ffffff50cd8[61],%L0x7ffffff50ce0[61],
        %L0x7ffffff50ce8[61],%L0x7ffffff50cf0[61],%L0x7ffffff50cf8[61]]*X1**15
 /\
F12 =
poly z [%L0x7ffffff50ca0[2],%L0x7ffffff50ca8[2],%L0x7ffffff50cb0[2],
        %L0x7ffffff50cb8[2],%L0x7ffffff50cc0[2],%L0x7ffffff50cc8[2],
        %L0x7ffffff50cd0[2],%L0x7ffffff50cd8[2],%L0x7ffffff50ce0[2],
        %L0x7ffffff50ce8[2],%L0x7ffffff50cf0[2],%L0x7ffffff50cf8[2]]*X1**0+
poly z [%L0x7ffffff50ca0[6],%L0x7ffffff50ca8[6],%L0x7ffffff50cb0[6],
        %L0x7ffffff50cb8[6],%L0x7ffffff50cc0[6],%L0x7ffffff50cc8[6],
        %L0x7ffffff50cd0[6],%L0x7ffffff50cd8[6],%L0x7ffffff50ce0[6],
        %L0x7ffffff50ce8[6],%L0x7ffffff50cf0[6],%L0x7ffffff50cf8[6]]*X1**1+
poly z [%L0x7ffffff50ca0[10],%L0x7ffffff50ca8[10],%L0x7ffffff50cb0[10],
        %L0x7ffffff50cb8[10],%L0x7ffffff50cc0[10],%L0x7ffffff50cc8[10],
        %L0x7ffffff50cd0[10],%L0x7ffffff50cd8[10],%L0x7ffffff50ce0[10],
        %L0x7ffffff50ce8[10],%L0x7ffffff50cf0[10],%L0x7ffffff50cf8[10]]*X1**2+
poly z [%L0x7ffffff50ca0[14],%L0x7ffffff50ca8[14],%L0x7ffffff50cb0[14],
        %L0x7ffffff50cb8[14],%L0x7ffffff50cc0[14],%L0x7ffffff50cc8[14],
        %L0x7ffffff50cd0[14],%L0x7ffffff50cd8[14],%L0x7ffffff50ce0[14],
        %L0x7ffffff50ce8[14],%L0x7ffffff50cf0[14],%L0x7ffffff50cf8[14]]*X1**3+
poly z [%L0x7ffffff50ca0[18],%L0x7ffffff50ca8[18],%L0x7ffffff50cb0[18],
        %L0x7ffffff50cb8[18],%L0x7ffffff50cc0[18],%L0x7ffffff50cc8[18],
        %L0x7ffffff50cd0[18],%L0x7ffffff50cd8[18],%L0x7ffffff50ce0[18],
        %L0x7ffffff50ce8[18],%L0x7ffffff50cf0[18],%L0x7ffffff50cf8[18]]*X1**4+
poly z [%L0x7ffffff50ca0[22],%L0x7ffffff50ca8[22],%L0x7ffffff50cb0[22],
        %L0x7ffffff50cb8[22],%L0x7ffffff50cc0[22],%L0x7ffffff50cc8[22],
        %L0x7ffffff50cd0[22],%L0x7ffffff50cd8[22],%L0x7ffffff50ce0[22],
        %L0x7ffffff50ce8[22],%L0x7ffffff50cf0[22],%L0x7ffffff50cf8[22]]*X1**5+
poly z [%L0x7ffffff50ca0[26],%L0x7ffffff50ca8[26],%L0x7ffffff50cb0[26],
        %L0x7ffffff50cb8[26],%L0x7ffffff50cc0[26],%L0x7ffffff50cc8[26],
        %L0x7ffffff50cd0[26],%L0x7ffffff50cd8[26],%L0x7ffffff50ce0[26],
        %L0x7ffffff50ce8[26],%L0x7ffffff50cf0[26],%L0x7ffffff50cf8[26]]*X1**6+
poly z [%L0x7ffffff50ca0[30],%L0x7ffffff50ca8[30],%L0x7ffffff50cb0[30],
        %L0x7ffffff50cb8[30],%L0x7ffffff50cc0[30],%L0x7ffffff50cc8[30],
        %L0x7ffffff50cd0[30],%L0x7ffffff50cd8[30],%L0x7ffffff50ce0[30],
        %L0x7ffffff50ce8[30],%L0x7ffffff50cf0[30],%L0x7ffffff50cf8[30]]*X1**7+
poly z [%L0x7ffffff50ca0[34],%L0x7ffffff50ca8[34],%L0x7ffffff50cb0[34],
        %L0x7ffffff50cb8[34],%L0x7ffffff50cc0[34],%L0x7ffffff50cc8[34],
        %L0x7ffffff50cd0[34],%L0x7ffffff50cd8[34],%L0x7ffffff50ce0[34],
        %L0x7ffffff50ce8[34],%L0x7ffffff50cf0[34],%L0x7ffffff50cf8[34]]*X1**8+
poly z [%L0x7ffffff50ca0[38],%L0x7ffffff50ca8[38],%L0x7ffffff50cb0[38],
        %L0x7ffffff50cb8[38],%L0x7ffffff50cc0[38],%L0x7ffffff50cc8[38],
        %L0x7ffffff50cd0[38],%L0x7ffffff50cd8[38],%L0x7ffffff50ce0[38],
        %L0x7ffffff50ce8[38],%L0x7ffffff50cf0[38],%L0x7ffffff50cf8[38]]*X1**9+
poly z [%L0x7ffffff50ca0[42],%L0x7ffffff50ca8[42],%L0x7ffffff50cb0[42],
        %L0x7ffffff50cb8[42],%L0x7ffffff50cc0[42],%L0x7ffffff50cc8[42],
        %L0x7ffffff50cd0[42],%L0x7ffffff50cd8[42],%L0x7ffffff50ce0[42],
        %L0x7ffffff50ce8[42],%L0x7ffffff50cf0[42],%L0x7ffffff50cf8[42]]*X1**10+
poly z [%L0x7ffffff50ca0[46],%L0x7ffffff50ca8[46],%L0x7ffffff50cb0[46],
        %L0x7ffffff50cb8[46],%L0x7ffffff50cc0[46],%L0x7ffffff50cc8[46],
        %L0x7ffffff50cd0[46],%L0x7ffffff50cd8[46],%L0x7ffffff50ce0[46],
        %L0x7ffffff50ce8[46],%L0x7ffffff50cf0[46],%L0x7ffffff50cf8[46]]*X1**11+
poly z [%L0x7ffffff50ca0[50],%L0x7ffffff50ca8[50],%L0x7ffffff50cb0[50],
        %L0x7ffffff50cb8[50],%L0x7ffffff50cc0[50],%L0x7ffffff50cc8[50],
        %L0x7ffffff50cd0[50],%L0x7ffffff50cd8[50],%L0x7ffffff50ce0[50],
        %L0x7ffffff50ce8[50],%L0x7ffffff50cf0[50],%L0x7ffffff50cf8[50]]*X1**12+
poly z [%L0x7ffffff50ca0[54],%L0x7ffffff50ca8[54],%L0x7ffffff50cb0[54],
        %L0x7ffffff50cb8[54],%L0x7ffffff50cc0[54],%L0x7ffffff50cc8[54],
        %L0x7ffffff50cd0[54],%L0x7ffffff50cd8[54],%L0x7ffffff50ce0[54],
        %L0x7ffffff50ce8[54],%L0x7ffffff50cf0[54],%L0x7ffffff50cf8[54]]*X1**13+
poly z [%L0x7ffffff50ca0[58],%L0x7ffffff50ca8[58],%L0x7ffffff50cb0[58],
        %L0x7ffffff50cb8[58],%L0x7ffffff50cc0[58],%L0x7ffffff50cc8[58],
        %L0x7ffffff50cd0[58],%L0x7ffffff50cd8[58],%L0x7ffffff50ce0[58],
        %L0x7ffffff50ce8[58],%L0x7ffffff50cf0[58],%L0x7ffffff50cf8[58]]*X1**14+
poly z [%L0x7ffffff50ca0[62],%L0x7ffffff50ca8[62],%L0x7ffffff50cb0[62],
        %L0x7ffffff50cb8[62],%L0x7ffffff50cc0[62],%L0x7ffffff50cc8[62],
        %L0x7ffffff50cd0[62],%L0x7ffffff50cd8[62],%L0x7ffffff50ce0[62],
        %L0x7ffffff50ce8[62],%L0x7ffffff50cf0[62],%L0x7ffffff50cf8[62]]*X1**15
 /\
F13 =
poly z [%L0x7ffffff50ca0[3],%L0x7ffffff50ca8[3],%L0x7ffffff50cb0[3],
        %L0x7ffffff50cb8[3],%L0x7ffffff50cc0[3],%L0x7ffffff50cc8[3],
        %L0x7ffffff50cd0[3],%L0x7ffffff50cd8[3],%L0x7ffffff50ce0[3],
        %L0x7ffffff50ce8[3],%L0x7ffffff50cf0[3],%L0x7ffffff50cf8[3]]*X1**0+
poly z [%L0x7ffffff50ca0[7],%L0x7ffffff50ca8[7],%L0x7ffffff50cb0[7],
        %L0x7ffffff50cb8[7],%L0x7ffffff50cc0[7],%L0x7ffffff50cc8[7],
        %L0x7ffffff50cd0[7],%L0x7ffffff50cd8[7],%L0x7ffffff50ce0[7],
        %L0x7ffffff50ce8[7],%L0x7ffffff50cf0[7],%L0x7ffffff50cf8[7]]*X1**1+
poly z [%L0x7ffffff50ca0[11],%L0x7ffffff50ca8[11],%L0x7ffffff50cb0[11],
        %L0x7ffffff50cb8[11],%L0x7ffffff50cc0[11],%L0x7ffffff50cc8[11],
        %L0x7ffffff50cd0[11],%L0x7ffffff50cd8[11],%L0x7ffffff50ce0[11],
        %L0x7ffffff50ce8[11],%L0x7ffffff50cf0[11],%L0x7ffffff50cf8[11]]*X1**2+
poly z [%L0x7ffffff50ca0[15],%L0x7ffffff50ca8[15],%L0x7ffffff50cb0[15],
        %L0x7ffffff50cb8[15],%L0x7ffffff50cc0[15],%L0x7ffffff50cc8[15],
        %L0x7ffffff50cd0[15],%L0x7ffffff50cd8[15],%L0x7ffffff50ce0[15],
        %L0x7ffffff50ce8[15],%L0x7ffffff50cf0[15],%L0x7ffffff50cf8[15]]*X1**3+
poly z [%L0x7ffffff50ca0[19],%L0x7ffffff50ca8[19],%L0x7ffffff50cb0[19],
        %L0x7ffffff50cb8[19],%L0x7ffffff50cc0[19],%L0x7ffffff50cc8[19],
        %L0x7ffffff50cd0[19],%L0x7ffffff50cd8[19],%L0x7ffffff50ce0[19],
        %L0x7ffffff50ce8[19],%L0x7ffffff50cf0[19],%L0x7ffffff50cf8[19]]*X1**4+
poly z [%L0x7ffffff50ca0[23],%L0x7ffffff50ca8[23],%L0x7ffffff50cb0[23],
        %L0x7ffffff50cb8[23],%L0x7ffffff50cc0[23],%L0x7ffffff50cc8[23],
        %L0x7ffffff50cd0[23],%L0x7ffffff50cd8[23],%L0x7ffffff50ce0[23],
        %L0x7ffffff50ce8[23],%L0x7ffffff50cf0[23],%L0x7ffffff50cf8[23]]*X1**5+
poly z [%L0x7ffffff50ca0[27],%L0x7ffffff50ca8[27],%L0x7ffffff50cb0[27],
        %L0x7ffffff50cb8[27],%L0x7ffffff50cc0[27],%L0x7ffffff50cc8[27],
        %L0x7ffffff50cd0[27],%L0x7ffffff50cd8[27],%L0x7ffffff50ce0[27],
        %L0x7ffffff50ce8[27],%L0x7ffffff50cf0[27],%L0x7ffffff50cf8[27]]*X1**6+
poly z [%L0x7ffffff50ca0[31],%L0x7ffffff50ca8[31],%L0x7ffffff50cb0[31],
        %L0x7ffffff50cb8[31],%L0x7ffffff50cc0[31],%L0x7ffffff50cc8[31],
        %L0x7ffffff50cd0[31],%L0x7ffffff50cd8[31],%L0x7ffffff50ce0[31],
        %L0x7ffffff50ce8[31],%L0x7ffffff50cf0[31],%L0x7ffffff50cf8[31]]*X1**7+
poly z [%L0x7ffffff50ca0[35],%L0x7ffffff50ca8[35],%L0x7ffffff50cb0[35],
        %L0x7ffffff50cb8[35],%L0x7ffffff50cc0[35],%L0x7ffffff50cc8[35],
        %L0x7ffffff50cd0[35],%L0x7ffffff50cd8[35],%L0x7ffffff50ce0[35],
        %L0x7ffffff50ce8[35],%L0x7ffffff50cf0[35],%L0x7ffffff50cf8[35]]*X1**8+
poly z [%L0x7ffffff50ca0[39],%L0x7ffffff50ca8[39],%L0x7ffffff50cb0[39],
        %L0x7ffffff50cb8[39],%L0x7ffffff50cc0[39],%L0x7ffffff50cc8[39],
        %L0x7ffffff50cd0[39],%L0x7ffffff50cd8[39],%L0x7ffffff50ce0[39],
        %L0x7ffffff50ce8[39],%L0x7ffffff50cf0[39],%L0x7ffffff50cf8[39]]*X1**9+
poly z [%L0x7ffffff50ca0[43],%L0x7ffffff50ca8[43],%L0x7ffffff50cb0[43],
        %L0x7ffffff50cb8[43],%L0x7ffffff50cc0[43],%L0x7ffffff50cc8[43],
        %L0x7ffffff50cd0[43],%L0x7ffffff50cd8[43],%L0x7ffffff50ce0[43],
        %L0x7ffffff50ce8[43],%L0x7ffffff50cf0[43],%L0x7ffffff50cf8[43]]*X1**10+
poly z [%L0x7ffffff50ca0[47],%L0x7ffffff50ca8[47],%L0x7ffffff50cb0[47],
        %L0x7ffffff50cb8[47],%L0x7ffffff50cc0[47],%L0x7ffffff50cc8[47],
        %L0x7ffffff50cd0[47],%L0x7ffffff50cd8[47],%L0x7ffffff50ce0[47],
        %L0x7ffffff50ce8[47],%L0x7ffffff50cf0[47],%L0x7ffffff50cf8[47]]*X1**11+
poly z [%L0x7ffffff50ca0[51],%L0x7ffffff50ca8[51],%L0x7ffffff50cb0[51],
        %L0x7ffffff50cb8[51],%L0x7ffffff50cc0[51],%L0x7ffffff50cc8[51],
        %L0x7ffffff50cd0[51],%L0x7ffffff50cd8[51],%L0x7ffffff50ce0[51],
        %L0x7ffffff50ce8[51],%L0x7ffffff50cf0[51],%L0x7ffffff50cf8[51]]*X1**12+
poly z [%L0x7ffffff50ca0[55],%L0x7ffffff50ca8[55],%L0x7ffffff50cb0[55],
        %L0x7ffffff50cb8[55],%L0x7ffffff50cc0[55],%L0x7ffffff50cc8[55],
        %L0x7ffffff50cd0[55],%L0x7ffffff50cd8[55],%L0x7ffffff50ce0[55],
        %L0x7ffffff50ce8[55],%L0x7ffffff50cf0[55],%L0x7ffffff50cf8[55]]*X1**13+
poly z [%L0x7ffffff50ca0[59],%L0x7ffffff50ca8[59],%L0x7ffffff50cb0[59],
        %L0x7ffffff50cb8[59],%L0x7ffffff50cc0[59],%L0x7ffffff50cc8[59],
        %L0x7ffffff50cd0[59],%L0x7ffffff50cd8[59],%L0x7ffffff50ce0[59],
        %L0x7ffffff50ce8[59],%L0x7ffffff50cf0[59],%L0x7ffffff50cf8[59]]*X1**14+
poly z [%L0x7ffffff50ca0[63],%L0x7ffffff50ca8[63],%L0x7ffffff50cb0[63],
        %L0x7ffffff50cb8[63],%L0x7ffffff50cc0[63],%L0x7ffffff50cc8[63],
        %L0x7ffffff50cd0[63],%L0x7ffffff50cd8[63],%L0x7ffffff50ce0[63],
        %L0x7ffffff50ce8[63],%L0x7ffffff50cf0[63],%L0x7ffffff50cf8[63]]*X1**15
&& true;

(* 2 *)
cut eqmod G00 (F10 + Y0*F12) [2, z**12+z**3+1] /\
    eqmod G01 (F11 + Y0*F13) [2, z**12+z**3+1] /\
F10 =
poly z [%L0x7ffffff50ca0[0],%L0x7ffffff50ca8[0],%L0x7ffffff50cb0[0],
        %L0x7ffffff50cb8[0],%L0x7ffffff50cc0[0],%L0x7ffffff50cc8[0],
        %L0x7ffffff50cd0[0],%L0x7ffffff50cd8[0],%L0x7ffffff50ce0[0],
        %L0x7ffffff50ce8[0],%L0x7ffffff50cf0[0],%L0x7ffffff50cf8[0]]*X1**0+
poly z [%L0x7ffffff50ca0[4],%L0x7ffffff50ca8[4],%L0x7ffffff50cb0[4],
        %L0x7ffffff50cb8[4],%L0x7ffffff50cc0[4],%L0x7ffffff50cc8[4],
        %L0x7ffffff50cd0[4],%L0x7ffffff50cd8[4],%L0x7ffffff50ce0[4],
        %L0x7ffffff50ce8[4],%L0x7ffffff50cf0[4],%L0x7ffffff50cf8[4]]*X1**1+
poly z [%L0x7ffffff50ca0[8],%L0x7ffffff50ca8[8],%L0x7ffffff50cb0[8],
        %L0x7ffffff50cb8[8],%L0x7ffffff50cc0[8],%L0x7ffffff50cc8[8],
        %L0x7ffffff50cd0[8],%L0x7ffffff50cd8[8],%L0x7ffffff50ce0[8],
        %L0x7ffffff50ce8[8],%L0x7ffffff50cf0[8],%L0x7ffffff50cf8[8]]*X1**2+
poly z [%L0x7ffffff50ca0[12],%L0x7ffffff50ca8[12],%L0x7ffffff50cb0[12],
        %L0x7ffffff50cb8[12],%L0x7ffffff50cc0[12],%L0x7ffffff50cc8[12],
        %L0x7ffffff50cd0[12],%L0x7ffffff50cd8[12],%L0x7ffffff50ce0[12],
        %L0x7ffffff50ce8[12],%L0x7ffffff50cf0[12],%L0x7ffffff50cf8[12]]*X1**3+
poly z [%L0x7ffffff50ca0[16],%L0x7ffffff50ca8[16],%L0x7ffffff50cb0[16],
        %L0x7ffffff50cb8[16],%L0x7ffffff50cc0[16],%L0x7ffffff50cc8[16],
        %L0x7ffffff50cd0[16],%L0x7ffffff50cd8[16],%L0x7ffffff50ce0[16],
        %L0x7ffffff50ce8[16],%L0x7ffffff50cf0[16],%L0x7ffffff50cf8[16]]*X1**4+
poly z [%L0x7ffffff50ca0[20],%L0x7ffffff50ca8[20],%L0x7ffffff50cb0[20],
        %L0x7ffffff50cb8[20],%L0x7ffffff50cc0[20],%L0x7ffffff50cc8[20],
        %L0x7ffffff50cd0[20],%L0x7ffffff50cd8[20],%L0x7ffffff50ce0[20],
        %L0x7ffffff50ce8[20],%L0x7ffffff50cf0[20],%L0x7ffffff50cf8[20]]*X1**5+
poly z [%L0x7ffffff50ca0[24],%L0x7ffffff50ca8[24],%L0x7ffffff50cb0[24],
        %L0x7ffffff50cb8[24],%L0x7ffffff50cc0[24],%L0x7ffffff50cc8[24],
        %L0x7ffffff50cd0[24],%L0x7ffffff50cd8[24],%L0x7ffffff50ce0[24],
        %L0x7ffffff50ce8[24],%L0x7ffffff50cf0[24],%L0x7ffffff50cf8[24]]*X1**6+
poly z [%L0x7ffffff50ca0[28],%L0x7ffffff50ca8[28],%L0x7ffffff50cb0[28],
        %L0x7ffffff50cb8[28],%L0x7ffffff50cc0[28],%L0x7ffffff50cc8[28],
        %L0x7ffffff50cd0[28],%L0x7ffffff50cd8[28],%L0x7ffffff50ce0[28],
        %L0x7ffffff50ce8[28],%L0x7ffffff50cf0[28],%L0x7ffffff50cf8[28]]*X1**7+
poly z [%L0x7ffffff50ca0[32],%L0x7ffffff50ca8[32],%L0x7ffffff50cb0[32],
        %L0x7ffffff50cb8[32],%L0x7ffffff50cc0[32],%L0x7ffffff50cc8[32],
        %L0x7ffffff50cd0[32],%L0x7ffffff50cd8[32],%L0x7ffffff50ce0[32],
        %L0x7ffffff50ce8[32],%L0x7ffffff50cf0[32],%L0x7ffffff50cf8[32]]*X1**8+
poly z [%L0x7ffffff50ca0[36],%L0x7ffffff50ca8[36],%L0x7ffffff50cb0[36],
        %L0x7ffffff50cb8[36],%L0x7ffffff50cc0[36],%L0x7ffffff50cc8[36],
        %L0x7ffffff50cd0[36],%L0x7ffffff50cd8[36],%L0x7ffffff50ce0[36],
        %L0x7ffffff50ce8[36],%L0x7ffffff50cf0[36],%L0x7ffffff50cf8[36]]*X1**9+
poly z [%L0x7ffffff50ca0[40],%L0x7ffffff50ca8[40],%L0x7ffffff50cb0[40],
        %L0x7ffffff50cb8[40],%L0x7ffffff50cc0[40],%L0x7ffffff50cc8[40],
        %L0x7ffffff50cd0[40],%L0x7ffffff50cd8[40],%L0x7ffffff50ce0[40],
        %L0x7ffffff50ce8[40],%L0x7ffffff50cf0[40],%L0x7ffffff50cf8[40]]*X1**10+
poly z [%L0x7ffffff50ca0[44],%L0x7ffffff50ca8[44],%L0x7ffffff50cb0[44],
        %L0x7ffffff50cb8[44],%L0x7ffffff50cc0[44],%L0x7ffffff50cc8[44],
        %L0x7ffffff50cd0[44],%L0x7ffffff50cd8[44],%L0x7ffffff50ce0[44],
        %L0x7ffffff50ce8[44],%L0x7ffffff50cf0[44],%L0x7ffffff50cf8[44]]*X1**11+
poly z [%L0x7ffffff50ca0[48],%L0x7ffffff50ca8[48],%L0x7ffffff50cb0[48],
        %L0x7ffffff50cb8[48],%L0x7ffffff50cc0[48],%L0x7ffffff50cc8[48],
        %L0x7ffffff50cd0[48],%L0x7ffffff50cd8[48],%L0x7ffffff50ce0[48],
        %L0x7ffffff50ce8[48],%L0x7ffffff50cf0[48],%L0x7ffffff50cf8[48]]*X1**12+
poly z [%L0x7ffffff50ca0[52],%L0x7ffffff50ca8[52],%L0x7ffffff50cb0[52],
        %L0x7ffffff50cb8[52],%L0x7ffffff50cc0[52],%L0x7ffffff50cc8[52],
        %L0x7ffffff50cd0[52],%L0x7ffffff50cd8[52],%L0x7ffffff50ce0[52],
        %L0x7ffffff50ce8[52],%L0x7ffffff50cf0[52],%L0x7ffffff50cf8[52]]*X1**13+
poly z [%L0x7ffffff50ca0[56],%L0x7ffffff50ca8[56],%L0x7ffffff50cb0[56],
        %L0x7ffffff50cb8[56],%L0x7ffffff50cc0[56],%L0x7ffffff50cc8[56],
        %L0x7ffffff50cd0[56],%L0x7ffffff50cd8[56],%L0x7ffffff50ce0[56],
        %L0x7ffffff50ce8[56],%L0x7ffffff50cf0[56],%L0x7ffffff50cf8[56]]*X1**14+
poly z [%L0x7ffffff50ca0[60],%L0x7ffffff50ca8[60],%L0x7ffffff50cb0[60],
        %L0x7ffffff50cb8[60],%L0x7ffffff50cc0[60],%L0x7ffffff50cc8[60],
        %L0x7ffffff50cd0[60],%L0x7ffffff50cd8[60],%L0x7ffffff50ce0[60],
        %L0x7ffffff50ce8[60],%L0x7ffffff50cf0[60],%L0x7ffffff50cf8[60]]*X1**15
 /\
F11 =
poly z [%L0x7ffffff50ca0[1],%L0x7ffffff50ca8[1],%L0x7ffffff50cb0[1],
        %L0x7ffffff50cb8[1],%L0x7ffffff50cc0[1],%L0x7ffffff50cc8[1],
        %L0x7ffffff50cd0[1],%L0x7ffffff50cd8[1],%L0x7ffffff50ce0[1],
        %L0x7ffffff50ce8[1],%L0x7ffffff50cf0[1],%L0x7ffffff50cf8[1]]*X1**0+
poly z [%L0x7ffffff50ca0[5],%L0x7ffffff50ca8[5],%L0x7ffffff50cb0[5],
        %L0x7ffffff50cb8[5],%L0x7ffffff50cc0[5],%L0x7ffffff50cc8[5],
        %L0x7ffffff50cd0[5],%L0x7ffffff50cd8[5],%L0x7ffffff50ce0[5],
        %L0x7ffffff50ce8[5],%L0x7ffffff50cf0[5],%L0x7ffffff50cf8[5]]*X1**1+
poly z [%L0x7ffffff50ca0[9],%L0x7ffffff50ca8[9],%L0x7ffffff50cb0[9],
        %L0x7ffffff50cb8[9],%L0x7ffffff50cc0[9],%L0x7ffffff50cc8[9],
        %L0x7ffffff50cd0[9],%L0x7ffffff50cd8[9],%L0x7ffffff50ce0[9],
        %L0x7ffffff50ce8[9],%L0x7ffffff50cf0[9],%L0x7ffffff50cf8[9]]*X1**2+
poly z [%L0x7ffffff50ca0[13],%L0x7ffffff50ca8[13],%L0x7ffffff50cb0[13],
        %L0x7ffffff50cb8[13],%L0x7ffffff50cc0[13],%L0x7ffffff50cc8[13],
        %L0x7ffffff50cd0[13],%L0x7ffffff50cd8[13],%L0x7ffffff50ce0[13],
        %L0x7ffffff50ce8[13],%L0x7ffffff50cf0[13],%L0x7ffffff50cf8[13]]*X1**3+
poly z [%L0x7ffffff50ca0[17],%L0x7ffffff50ca8[17],%L0x7ffffff50cb0[17],
        %L0x7ffffff50cb8[17],%L0x7ffffff50cc0[17],%L0x7ffffff50cc8[17],
        %L0x7ffffff50cd0[17],%L0x7ffffff50cd8[17],%L0x7ffffff50ce0[17],
        %L0x7ffffff50ce8[17],%L0x7ffffff50cf0[17],%L0x7ffffff50cf8[17]]*X1**4+
poly z [%L0x7ffffff50ca0[21],%L0x7ffffff50ca8[21],%L0x7ffffff50cb0[21],
        %L0x7ffffff50cb8[21],%L0x7ffffff50cc0[21],%L0x7ffffff50cc8[21],
        %L0x7ffffff50cd0[21],%L0x7ffffff50cd8[21],%L0x7ffffff50ce0[21],
        %L0x7ffffff50ce8[21],%L0x7ffffff50cf0[21],%L0x7ffffff50cf8[21]]*X1**5+
poly z [%L0x7ffffff50ca0[25],%L0x7ffffff50ca8[25],%L0x7ffffff50cb0[25],
        %L0x7ffffff50cb8[25],%L0x7ffffff50cc0[25],%L0x7ffffff50cc8[25],
        %L0x7ffffff50cd0[25],%L0x7ffffff50cd8[25],%L0x7ffffff50ce0[25],
        %L0x7ffffff50ce8[25],%L0x7ffffff50cf0[25],%L0x7ffffff50cf8[25]]*X1**6+
poly z [%L0x7ffffff50ca0[29],%L0x7ffffff50ca8[29],%L0x7ffffff50cb0[29],
        %L0x7ffffff50cb8[29],%L0x7ffffff50cc0[29],%L0x7ffffff50cc8[29],
        %L0x7ffffff50cd0[29],%L0x7ffffff50cd8[29],%L0x7ffffff50ce0[29],
        %L0x7ffffff50ce8[29],%L0x7ffffff50cf0[29],%L0x7ffffff50cf8[29]]*X1**7+
poly z [%L0x7ffffff50ca0[33],%L0x7ffffff50ca8[33],%L0x7ffffff50cb0[33],
        %L0x7ffffff50cb8[33],%L0x7ffffff50cc0[33],%L0x7ffffff50cc8[33],
        %L0x7ffffff50cd0[33],%L0x7ffffff50cd8[33],%L0x7ffffff50ce0[33],
        %L0x7ffffff50ce8[33],%L0x7ffffff50cf0[33],%L0x7ffffff50cf8[33]]*X1**8+
poly z [%L0x7ffffff50ca0[37],%L0x7ffffff50ca8[37],%L0x7ffffff50cb0[37],
        %L0x7ffffff50cb8[37],%L0x7ffffff50cc0[37],%L0x7ffffff50cc8[37],
        %L0x7ffffff50cd0[37],%L0x7ffffff50cd8[37],%L0x7ffffff50ce0[37],
        %L0x7ffffff50ce8[37],%L0x7ffffff50cf0[37],%L0x7ffffff50cf8[37]]*X1**9+
poly z [%L0x7ffffff50ca0[41],%L0x7ffffff50ca8[41],%L0x7ffffff50cb0[41],
        %L0x7ffffff50cb8[41],%L0x7ffffff50cc0[41],%L0x7ffffff50cc8[41],
        %L0x7ffffff50cd0[41],%L0x7ffffff50cd8[41],%L0x7ffffff50ce0[41],
        %L0x7ffffff50ce8[41],%L0x7ffffff50cf0[41],%L0x7ffffff50cf8[41]]*X1**10+
poly z [%L0x7ffffff50ca0[45],%L0x7ffffff50ca8[45],%L0x7ffffff50cb0[45],
        %L0x7ffffff50cb8[45],%L0x7ffffff50cc0[45],%L0x7ffffff50cc8[45],
        %L0x7ffffff50cd0[45],%L0x7ffffff50cd8[45],%L0x7ffffff50ce0[45],
        %L0x7ffffff50ce8[45],%L0x7ffffff50cf0[45],%L0x7ffffff50cf8[45]]*X1**11+
poly z [%L0x7ffffff50ca0[49],%L0x7ffffff50ca8[49],%L0x7ffffff50cb0[49],
        %L0x7ffffff50cb8[49],%L0x7ffffff50cc0[49],%L0x7ffffff50cc8[49],
        %L0x7ffffff50cd0[49],%L0x7ffffff50cd8[49],%L0x7ffffff50ce0[49],
        %L0x7ffffff50ce8[49],%L0x7ffffff50cf0[49],%L0x7ffffff50cf8[49]]*X1**12+
poly z [%L0x7ffffff50ca0[53],%L0x7ffffff50ca8[53],%L0x7ffffff50cb0[53],
        %L0x7ffffff50cb8[53],%L0x7ffffff50cc0[53],%L0x7ffffff50cc8[53],
        %L0x7ffffff50cd0[53],%L0x7ffffff50cd8[53],%L0x7ffffff50ce0[53],
        %L0x7ffffff50ce8[53],%L0x7ffffff50cf0[53],%L0x7ffffff50cf8[53]]*X1**13+
poly z [%L0x7ffffff50ca0[57],%L0x7ffffff50ca8[57],%L0x7ffffff50cb0[57],
        %L0x7ffffff50cb8[57],%L0x7ffffff50cc0[57],%L0x7ffffff50cc8[57],
        %L0x7ffffff50cd0[57],%L0x7ffffff50cd8[57],%L0x7ffffff50ce0[57],
        %L0x7ffffff50ce8[57],%L0x7ffffff50cf0[57],%L0x7ffffff50cf8[57]]*X1**14+
poly z [%L0x7ffffff50ca0[61],%L0x7ffffff50ca8[61],%L0x7ffffff50cb0[61],
        %L0x7ffffff50cb8[61],%L0x7ffffff50cc0[61],%L0x7ffffff50cc8[61],
        %L0x7ffffff50cd0[61],%L0x7ffffff50cd8[61],%L0x7ffffff50ce0[61],
        %L0x7ffffff50ce8[61],%L0x7ffffff50cf0[61],%L0x7ffffff50cf8[61]]*X1**15
 /\
F12 =
poly z [%L0x7ffffff50ca0[2],%L0x7ffffff50ca8[2],%L0x7ffffff50cb0[2],
        %L0x7ffffff50cb8[2],%L0x7ffffff50cc0[2],%L0x7ffffff50cc8[2],
        %L0x7ffffff50cd0[2],%L0x7ffffff50cd8[2],%L0x7ffffff50ce0[2],
        %L0x7ffffff50ce8[2],%L0x7ffffff50cf0[2],%L0x7ffffff50cf8[2]]*X1**0+
poly z [%L0x7ffffff50ca0[6],%L0x7ffffff50ca8[6],%L0x7ffffff50cb0[6],
        %L0x7ffffff50cb8[6],%L0x7ffffff50cc0[6],%L0x7ffffff50cc8[6],
        %L0x7ffffff50cd0[6],%L0x7ffffff50cd8[6],%L0x7ffffff50ce0[6],
        %L0x7ffffff50ce8[6],%L0x7ffffff50cf0[6],%L0x7ffffff50cf8[6]]*X1**1+
poly z [%L0x7ffffff50ca0[10],%L0x7ffffff50ca8[10],%L0x7ffffff50cb0[10],
        %L0x7ffffff50cb8[10],%L0x7ffffff50cc0[10],%L0x7ffffff50cc8[10],
        %L0x7ffffff50cd0[10],%L0x7ffffff50cd8[10],%L0x7ffffff50ce0[10],
        %L0x7ffffff50ce8[10],%L0x7ffffff50cf0[10],%L0x7ffffff50cf8[10]]*X1**2+
poly z [%L0x7ffffff50ca0[14],%L0x7ffffff50ca8[14],%L0x7ffffff50cb0[14],
        %L0x7ffffff50cb8[14],%L0x7ffffff50cc0[14],%L0x7ffffff50cc8[14],
        %L0x7ffffff50cd0[14],%L0x7ffffff50cd8[14],%L0x7ffffff50ce0[14],
        %L0x7ffffff50ce8[14],%L0x7ffffff50cf0[14],%L0x7ffffff50cf8[14]]*X1**3+
poly z [%L0x7ffffff50ca0[18],%L0x7ffffff50ca8[18],%L0x7ffffff50cb0[18],
        %L0x7ffffff50cb8[18],%L0x7ffffff50cc0[18],%L0x7ffffff50cc8[18],
        %L0x7ffffff50cd0[18],%L0x7ffffff50cd8[18],%L0x7ffffff50ce0[18],
        %L0x7ffffff50ce8[18],%L0x7ffffff50cf0[18],%L0x7ffffff50cf8[18]]*X1**4+
poly z [%L0x7ffffff50ca0[22],%L0x7ffffff50ca8[22],%L0x7ffffff50cb0[22],
        %L0x7ffffff50cb8[22],%L0x7ffffff50cc0[22],%L0x7ffffff50cc8[22],
        %L0x7ffffff50cd0[22],%L0x7ffffff50cd8[22],%L0x7ffffff50ce0[22],
        %L0x7ffffff50ce8[22],%L0x7ffffff50cf0[22],%L0x7ffffff50cf8[22]]*X1**5+
poly z [%L0x7ffffff50ca0[26],%L0x7ffffff50ca8[26],%L0x7ffffff50cb0[26],
        %L0x7ffffff50cb8[26],%L0x7ffffff50cc0[26],%L0x7ffffff50cc8[26],
        %L0x7ffffff50cd0[26],%L0x7ffffff50cd8[26],%L0x7ffffff50ce0[26],
        %L0x7ffffff50ce8[26],%L0x7ffffff50cf0[26],%L0x7ffffff50cf8[26]]*X1**6+
poly z [%L0x7ffffff50ca0[30],%L0x7ffffff50ca8[30],%L0x7ffffff50cb0[30],
        %L0x7ffffff50cb8[30],%L0x7ffffff50cc0[30],%L0x7ffffff50cc8[30],
        %L0x7ffffff50cd0[30],%L0x7ffffff50cd8[30],%L0x7ffffff50ce0[30],
        %L0x7ffffff50ce8[30],%L0x7ffffff50cf0[30],%L0x7ffffff50cf8[30]]*X1**7+
poly z [%L0x7ffffff50ca0[34],%L0x7ffffff50ca8[34],%L0x7ffffff50cb0[34],
        %L0x7ffffff50cb8[34],%L0x7ffffff50cc0[34],%L0x7ffffff50cc8[34],
        %L0x7ffffff50cd0[34],%L0x7ffffff50cd8[34],%L0x7ffffff50ce0[34],
        %L0x7ffffff50ce8[34],%L0x7ffffff50cf0[34],%L0x7ffffff50cf8[34]]*X1**8+
poly z [%L0x7ffffff50ca0[38],%L0x7ffffff50ca8[38],%L0x7ffffff50cb0[38],
        %L0x7ffffff50cb8[38],%L0x7ffffff50cc0[38],%L0x7ffffff50cc8[38],
        %L0x7ffffff50cd0[38],%L0x7ffffff50cd8[38],%L0x7ffffff50ce0[38],
        %L0x7ffffff50ce8[38],%L0x7ffffff50cf0[38],%L0x7ffffff50cf8[38]]*X1**9+
poly z [%L0x7ffffff50ca0[42],%L0x7ffffff50ca8[42],%L0x7ffffff50cb0[42],
        %L0x7ffffff50cb8[42],%L0x7ffffff50cc0[42],%L0x7ffffff50cc8[42],
        %L0x7ffffff50cd0[42],%L0x7ffffff50cd8[42],%L0x7ffffff50ce0[42],
        %L0x7ffffff50ce8[42],%L0x7ffffff50cf0[42],%L0x7ffffff50cf8[42]]*X1**10+
poly z [%L0x7ffffff50ca0[46],%L0x7ffffff50ca8[46],%L0x7ffffff50cb0[46],
        %L0x7ffffff50cb8[46],%L0x7ffffff50cc0[46],%L0x7ffffff50cc8[46],
        %L0x7ffffff50cd0[46],%L0x7ffffff50cd8[46],%L0x7ffffff50ce0[46],
        %L0x7ffffff50ce8[46],%L0x7ffffff50cf0[46],%L0x7ffffff50cf8[46]]*X1**11+
poly z [%L0x7ffffff50ca0[50],%L0x7ffffff50ca8[50],%L0x7ffffff50cb0[50],
        %L0x7ffffff50cb8[50],%L0x7ffffff50cc0[50],%L0x7ffffff50cc8[50],
        %L0x7ffffff50cd0[50],%L0x7ffffff50cd8[50],%L0x7ffffff50ce0[50],
        %L0x7ffffff50ce8[50],%L0x7ffffff50cf0[50],%L0x7ffffff50cf8[50]]*X1**12+
poly z [%L0x7ffffff50ca0[54],%L0x7ffffff50ca8[54],%L0x7ffffff50cb0[54],
        %L0x7ffffff50cb8[54],%L0x7ffffff50cc0[54],%L0x7ffffff50cc8[54],
        %L0x7ffffff50cd0[54],%L0x7ffffff50cd8[54],%L0x7ffffff50ce0[54],
        %L0x7ffffff50ce8[54],%L0x7ffffff50cf0[54],%L0x7ffffff50cf8[54]]*X1**13+
poly z [%L0x7ffffff50ca0[58],%L0x7ffffff50ca8[58],%L0x7ffffff50cb0[58],
        %L0x7ffffff50cb8[58],%L0x7ffffff50cc0[58],%L0x7ffffff50cc8[58],
        %L0x7ffffff50cd0[58],%L0x7ffffff50cd8[58],%L0x7ffffff50ce0[58],
        %L0x7ffffff50ce8[58],%L0x7ffffff50cf0[58],%L0x7ffffff50cf8[58]]*X1**14+
poly z [%L0x7ffffff50ca0[62],%L0x7ffffff50ca8[62],%L0x7ffffff50cb0[62],
        %L0x7ffffff50cb8[62],%L0x7ffffff50cc0[62],%L0x7ffffff50cc8[62],
        %L0x7ffffff50cd0[62],%L0x7ffffff50cd8[62],%L0x7ffffff50ce0[62],
        %L0x7ffffff50ce8[62],%L0x7ffffff50cf0[62],%L0x7ffffff50cf8[62]]*X1**15
 /\
F13 =
poly z [%L0x7ffffff50ca0[3],%L0x7ffffff50ca8[3],%L0x7ffffff50cb0[3],
        %L0x7ffffff50cb8[3],%L0x7ffffff50cc0[3],%L0x7ffffff50cc8[3],
        %L0x7ffffff50cd0[3],%L0x7ffffff50cd8[3],%L0x7ffffff50ce0[3],
        %L0x7ffffff50ce8[3],%L0x7ffffff50cf0[3],%L0x7ffffff50cf8[3]]*X1**0+
poly z [%L0x7ffffff50ca0[7],%L0x7ffffff50ca8[7],%L0x7ffffff50cb0[7],
        %L0x7ffffff50cb8[7],%L0x7ffffff50cc0[7],%L0x7ffffff50cc8[7],
        %L0x7ffffff50cd0[7],%L0x7ffffff50cd8[7],%L0x7ffffff50ce0[7],
        %L0x7ffffff50ce8[7],%L0x7ffffff50cf0[7],%L0x7ffffff50cf8[7]]*X1**1+
poly z [%L0x7ffffff50ca0[11],%L0x7ffffff50ca8[11],%L0x7ffffff50cb0[11],
        %L0x7ffffff50cb8[11],%L0x7ffffff50cc0[11],%L0x7ffffff50cc8[11],
        %L0x7ffffff50cd0[11],%L0x7ffffff50cd8[11],%L0x7ffffff50ce0[11],
        %L0x7ffffff50ce8[11],%L0x7ffffff50cf0[11],%L0x7ffffff50cf8[11]]*X1**2+
poly z [%L0x7ffffff50ca0[15],%L0x7ffffff50ca8[15],%L0x7ffffff50cb0[15],
        %L0x7ffffff50cb8[15],%L0x7ffffff50cc0[15],%L0x7ffffff50cc8[15],
        %L0x7ffffff50cd0[15],%L0x7ffffff50cd8[15],%L0x7ffffff50ce0[15],
        %L0x7ffffff50ce8[15],%L0x7ffffff50cf0[15],%L0x7ffffff50cf8[15]]*X1**3+
poly z [%L0x7ffffff50ca0[19],%L0x7ffffff50ca8[19],%L0x7ffffff50cb0[19],
        %L0x7ffffff50cb8[19],%L0x7ffffff50cc0[19],%L0x7ffffff50cc8[19],
        %L0x7ffffff50cd0[19],%L0x7ffffff50cd8[19],%L0x7ffffff50ce0[19],
        %L0x7ffffff50ce8[19],%L0x7ffffff50cf0[19],%L0x7ffffff50cf8[19]]*X1**4+
poly z [%L0x7ffffff50ca0[23],%L0x7ffffff50ca8[23],%L0x7ffffff50cb0[23],
        %L0x7ffffff50cb8[23],%L0x7ffffff50cc0[23],%L0x7ffffff50cc8[23],
        %L0x7ffffff50cd0[23],%L0x7ffffff50cd8[23],%L0x7ffffff50ce0[23],
        %L0x7ffffff50ce8[23],%L0x7ffffff50cf0[23],%L0x7ffffff50cf8[23]]*X1**5+
poly z [%L0x7ffffff50ca0[27],%L0x7ffffff50ca8[27],%L0x7ffffff50cb0[27],
        %L0x7ffffff50cb8[27],%L0x7ffffff50cc0[27],%L0x7ffffff50cc8[27],
        %L0x7ffffff50cd0[27],%L0x7ffffff50cd8[27],%L0x7ffffff50ce0[27],
        %L0x7ffffff50ce8[27],%L0x7ffffff50cf0[27],%L0x7ffffff50cf8[27]]*X1**6+
poly z [%L0x7ffffff50ca0[31],%L0x7ffffff50ca8[31],%L0x7ffffff50cb0[31],
        %L0x7ffffff50cb8[31],%L0x7ffffff50cc0[31],%L0x7ffffff50cc8[31],
        %L0x7ffffff50cd0[31],%L0x7ffffff50cd8[31],%L0x7ffffff50ce0[31],
        %L0x7ffffff50ce8[31],%L0x7ffffff50cf0[31],%L0x7ffffff50cf8[31]]*X1**7+
poly z [%L0x7ffffff50ca0[35],%L0x7ffffff50ca8[35],%L0x7ffffff50cb0[35],
        %L0x7ffffff50cb8[35],%L0x7ffffff50cc0[35],%L0x7ffffff50cc8[35],
        %L0x7ffffff50cd0[35],%L0x7ffffff50cd8[35],%L0x7ffffff50ce0[35],
        %L0x7ffffff50ce8[35],%L0x7ffffff50cf0[35],%L0x7ffffff50cf8[35]]*X1**8+
poly z [%L0x7ffffff50ca0[39],%L0x7ffffff50ca8[39],%L0x7ffffff50cb0[39],
        %L0x7ffffff50cb8[39],%L0x7ffffff50cc0[39],%L0x7ffffff50cc8[39],
        %L0x7ffffff50cd0[39],%L0x7ffffff50cd8[39],%L0x7ffffff50ce0[39],
        %L0x7ffffff50ce8[39],%L0x7ffffff50cf0[39],%L0x7ffffff50cf8[39]]*X1**9+
poly z [%L0x7ffffff50ca0[43],%L0x7ffffff50ca8[43],%L0x7ffffff50cb0[43],
        %L0x7ffffff50cb8[43],%L0x7ffffff50cc0[43],%L0x7ffffff50cc8[43],
        %L0x7ffffff50cd0[43],%L0x7ffffff50cd8[43],%L0x7ffffff50ce0[43],
        %L0x7ffffff50ce8[43],%L0x7ffffff50cf0[43],%L0x7ffffff50cf8[43]]*X1**10+
poly z [%L0x7ffffff50ca0[47],%L0x7ffffff50ca8[47],%L0x7ffffff50cb0[47],
        %L0x7ffffff50cb8[47],%L0x7ffffff50cc0[47],%L0x7ffffff50cc8[47],
        %L0x7ffffff50cd0[47],%L0x7ffffff50cd8[47],%L0x7ffffff50ce0[47],
        %L0x7ffffff50ce8[47],%L0x7ffffff50cf0[47],%L0x7ffffff50cf8[47]]*X1**11+
poly z [%L0x7ffffff50ca0[51],%L0x7ffffff50ca8[51],%L0x7ffffff50cb0[51],
        %L0x7ffffff50cb8[51],%L0x7ffffff50cc0[51],%L0x7ffffff50cc8[51],
        %L0x7ffffff50cd0[51],%L0x7ffffff50cd8[51],%L0x7ffffff50ce0[51],
        %L0x7ffffff50ce8[51],%L0x7ffffff50cf0[51],%L0x7ffffff50cf8[51]]*X1**12+
poly z [%L0x7ffffff50ca0[55],%L0x7ffffff50ca8[55],%L0x7ffffff50cb0[55],
        %L0x7ffffff50cb8[55],%L0x7ffffff50cc0[55],%L0x7ffffff50cc8[55],
        %L0x7ffffff50cd0[55],%L0x7ffffff50cd8[55],%L0x7ffffff50ce0[55],
        %L0x7ffffff50ce8[55],%L0x7ffffff50cf0[55],%L0x7ffffff50cf8[55]]*X1**13+
poly z [%L0x7ffffff50ca0[59],%L0x7ffffff50ca8[59],%L0x7ffffff50cb0[59],
        %L0x7ffffff50cb8[59],%L0x7ffffff50cc0[59],%L0x7ffffff50cc8[59],
        %L0x7ffffff50cd0[59],%L0x7ffffff50cd8[59],%L0x7ffffff50ce0[59],
        %L0x7ffffff50ce8[59],%L0x7ffffff50cf0[59],%L0x7ffffff50cf8[59]]*X1**14+
poly z [%L0x7ffffff50ca0[63],%L0x7ffffff50ca8[63],%L0x7ffffff50cb0[63],
        %L0x7ffffff50cb8[63],%L0x7ffffff50cc0[63],%L0x7ffffff50cc8[63],
        %L0x7ffffff50cd0[63],%L0x7ffffff50cd8[63],%L0x7ffffff50ce0[63],
        %L0x7ffffff50ce8[63],%L0x7ffffff50cf0[63],%L0x7ffffff50cf8[63]]*X1**15
  && true;

(* mov    0x10(%rsp),%rcx                          #! EA = L0x7ffffff50990; Value = 0x0000000000000001; PC = 0x555555582d58 *)
mov %rcx %L0x7ffffff50990;
(* mov    0x8(%rsp),%rax                           #! EA = L0x7ffffff50988; Value = 0x00007ffffff509a0; PC = 0x555555582d5d *)
mov %rax %L0x7ffffff50988;
(* mov    0x18(%rsp),%rdi                          #! EA = L0x7ffffff50998; Value = 0x00007ffffff50ca0; PC = 0x555555582d62 *)
mov %rdi %L0x7ffffff50998;
(* lea    (%rcx,%rcx,2),%rdx                       #! PC = 0x555555582d67 *)
(* lea \(rcx,rcx,2), rdx *)
nop;
(* shl    $0x5,%rdx                                #! PC = 0x555555582d6b *)
(* shl $0x5, rdx *)
nop;
(* mov    %rdi,%rsi                                #! PC = 0x555555582d6f *)
mov %rsi %rdi;
(* add    %rax,%rdx                                #! PC = 0x555555582d72 *)
(* add rax, rdx *)
nop;
(* #call   0x55555557c600 <_PQCLEAN_MCELIECE348864_AVX2_vec_mul_asm>#! PC = 0x555555582d75 *)
#call   0x55555557c600 <_PQCLEAN_MCELIECE348864_AVX2_vec_mul_asm>#! 0x555555582d75 = 0x555555582d75;
(* #! -> SP = 0x7ffffff50978 *)
#! 0x7ffffff50978 = 0x7ffffff50978;
(* mov    %rsp,%r11                                #! PC = 0x55555557c600 *)
(* mov rsp, r11 *)
nop;
(* and    $0x1f,%r11                               #! PC = 0x55555557c603 *)
(* and $0x1f, r11 *)
nop;
(* add    $0x2a0,%r11                              #! PC = 0x55555557c607 *)
(* add 0x2a0, r11 *)
nop;
(* sub    %r11,%rsp                                #! PC = 0x55555557c60e *)
(* sub r11, rsp *)
nop;
(* mov    %r11,0x260(%rsp)                         #! EA = L0x7ffffff50920; PC = 0x55555557c611 *)
mov %L0x7ffffff50920 %r11;
(* mov    %r12,0x268(%rsp)                         #! EA = L0x7ffffff50928; PC = 0x55555557c619 *)
mov %L0x7ffffff50928 %r12;
(* mov    %r13,0x270(%rsp)                         #! EA = L0x7ffffff50930; PC = 0x55555557c621 *)
mov %L0x7ffffff50930 %r13;
(* mov    %r14,0x278(%rsp)                         #! EA = L0x7ffffff50938; PC = 0x55555557c629 *)
mov %L0x7ffffff50938 %r14;
(* mov    %r15,0x280(%rsp)                         #! EA = L0x7ffffff50940; PC = 0x55555557c631 *)
mov %L0x7ffffff50940 %r15;
(* mov    %rbx,0x288(%rsp)                         #! EA = L0x7ffffff50948; PC = 0x55555557c639 *)
mov %L0x7ffffff50948 %rbx;
(* lea    (%rsp),%rcx                              #! PC = 0x55555557c641 *)
(* lea (rsp), rcx *)
nop;

mov %ina0 %L0x7ffffff50ca0; mov %ina1 %L0x7ffffff50ca8;
mov %ina2 %L0x7ffffff50cb0; mov %ina3 %L0x7ffffff50cb8;
mov %ina4 %L0x7ffffff50cc0; mov %ina5 %L0x7ffffff50cc8;
mov %ina6 %L0x7ffffff50cd0; mov %ina7 %L0x7ffffff50cd8;
mov %ina8 %L0x7ffffff50ce0; mov %ina9 %L0x7ffffff50ce8;
mov %inaa %L0x7ffffff50cf0; mov %inab %L0x7ffffff50cf8;

mov %inb0 %L0x7ffffff50a00; mov %inb1 %L0x7ffffff50a08;
mov %inb2 %L0x7ffffff50a10; mov %inb3 %L0x7ffffff50a18;
mov %inb4 %L0x7ffffff50a20; mov %inb5 %L0x7ffffff50a28;
mov %inb6 %L0x7ffffff50a30; mov %inb7 %L0x7ffffff50a38;
mov %inb8 %L0x7ffffff50a40; mov %inb9 %L0x7ffffff50a48;
mov %inba %L0x7ffffff50a50; mov %inbb %L0x7ffffff50a58;

call vec_mul_asm (z,
%ina0,%ina1,%ina2,%ina3,%ina4,%ina5,%ina6,%ina7,%ina8,%ina9,%inaa,%inab,
%inb0,%inb1,%inb2,%inb3,%inb4,%inb5,%inb6,%inb7,%inb8,%inb9,%inba,%inbb
(*
%L0x7ffffff50ca0,%L0x7ffffff50ca8,%L0x7ffffff50cb0,%L0x7ffffff50cb8,
%L0x7ffffff50cc0,%L0x7ffffff50cc8,%L0x7ffffff50cd0,%L0x7ffffff50cd8,
%L0x7ffffff50ce0,%L0x7ffffff50ce8,%L0x7ffffff50cf0,%L0x7ffffff50cf8,
%L0x7ffffff50a00,%L0x7ffffff50a08,%L0x7ffffff50a10,%L0x7ffffff50a18,
%L0x7ffffff50a20,%L0x7ffffff50a28,%L0x7ffffff50a30,%L0x7ffffff50a38,
%L0x7ffffff50a40,%L0x7ffffff50a48,%L0x7ffffff50a50,%L0x7ffffff50a58,
*)
,
%L0x7ffffff50ca0,%L0x7ffffff50ca8,%L0x7ffffff50cb0,%L0x7ffffff50cb8,
%L0x7ffffff50cc0,%L0x7ffffff50cc8,%L0x7ffffff50cd0,%L0x7ffffff50cd8,
%L0x7ffffff50ce0,%L0x7ffffff50ce8,%L0x7ffffff50cf0,%L0x7ffffff50cf8);

(* mov    0x260(%rsp),%r11                         #! EA = L0x7ffffff50920; Value = 0x00000000000002b8; PC = 0x55555557c97c *)
mov %r11 %L0x7ffffff50920;
(* mov    0x268(%rsp),%r12                         #! EA = L0x7ffffff50928; Value = 0x00007ffffff50d00; PC = 0x55555557c984 *)
mov %r12 %L0x7ffffff50928;
(* mov    0x270(%rsp),%r13                         #! EA = L0x7ffffff50930; Value = 0x0000ff000000ff00; PC = 0x55555557c98c *)
mov %r13 %L0x7ffffff50930;
(* mov    0x278(%rsp),%r14                         #! EA = L0x7ffffff50938; Value = 0x00ff000000ff0000; PC = 0x55555557c994 *)
mov %r14 %L0x7ffffff50938;
(* mov    0x280(%rsp),%r15                         #! EA = L0x7ffffff50940; Value = 0x4444444444444444; PC = 0x55555557c99c *)
mov %r15 %L0x7ffffff50940;
(* mov    0x288(%rsp),%rbx                         #! EA = L0x7ffffff50948; Value = 0x0000ffff00000000; PC = 0x55555557c9a4 *)
mov %rbx %L0x7ffffff50948;
(* add    %r11,%rsp                                #! PC = 0x55555557c9ac *)
(* add r11, rsp *)
nop;
(* #! <- SP = 0x7ffffff50978 *)
#! 0x7ffffff50978 = 0x7ffffff50978;
(* #ret                                            #! PC = 0x55555557c9af *)
#ret                                            #! 0x55555557c9af = 0x55555557c9af;


(**************** twists ****************)



ghost Y1@uint16,G10@uint16,G11@uint16,G12@uint16,G13@uint16:
      (z**4+z)*Y1 = X1 /\
G10 = poly z [%L0x7ffffff50ca0[0],%L0x7ffffff50ca8[0],%L0x7ffffff50cb0[0],
              %L0x7ffffff50cb8[0],%L0x7ffffff50cc0[0],%L0x7ffffff50cc8[0],
              %L0x7ffffff50cd0[0],%L0x7ffffff50cd8[0],%L0x7ffffff50ce0[0],
              %L0x7ffffff50ce8[0],%L0x7ffffff50cf0[0],%L0x7ffffff50cf8[0]]*Y1**0+
      poly z [%L0x7ffffff50ca0[4],%L0x7ffffff50ca8[4],%L0x7ffffff50cb0[4],
              %L0x7ffffff50cb8[4],%L0x7ffffff50cc0[4],%L0x7ffffff50cc8[4],
              %L0x7ffffff50cd0[4],%L0x7ffffff50cd8[4],%L0x7ffffff50ce0[4],
              %L0x7ffffff50ce8[4],%L0x7ffffff50cf0[4],%L0x7ffffff50cf8[4]]*Y1**1+
      poly z [%L0x7ffffff50ca0[8],%L0x7ffffff50ca8[8],%L0x7ffffff50cb0[8],
              %L0x7ffffff50cb8[8],%L0x7ffffff50cc0[8],%L0x7ffffff50cc8[8],
              %L0x7ffffff50cd0[8],%L0x7ffffff50cd8[8],%L0x7ffffff50ce0[8],
              %L0x7ffffff50ce8[8],%L0x7ffffff50cf0[8],%L0x7ffffff50cf8[8]]*Y1**2+
      poly z [%L0x7ffffff50ca0[12],%L0x7ffffff50ca8[12],%L0x7ffffff50cb0[12],
              %L0x7ffffff50cb8[12],%L0x7ffffff50cc0[12],%L0x7ffffff50cc8[12],
              %L0x7ffffff50cd0[12],%L0x7ffffff50cd8[12],%L0x7ffffff50ce0[12],
              %L0x7ffffff50ce8[12],%L0x7ffffff50cf0[12],%L0x7ffffff50cf8[12]]*Y1**3+
      poly z [%L0x7ffffff50ca0[16],%L0x7ffffff50ca8[16],%L0x7ffffff50cb0[16],
              %L0x7ffffff50cb8[16],%L0x7ffffff50cc0[16],%L0x7ffffff50cc8[16],
              %L0x7ffffff50cd0[16],%L0x7ffffff50cd8[16],%L0x7ffffff50ce0[16],
              %L0x7ffffff50ce8[16],%L0x7ffffff50cf0[16],%L0x7ffffff50cf8[16]]*Y1**4+
      poly z [%L0x7ffffff50ca0[20],%L0x7ffffff50ca8[20],%L0x7ffffff50cb0[20],
              %L0x7ffffff50cb8[20],%L0x7ffffff50cc0[20],%L0x7ffffff50cc8[20],
              %L0x7ffffff50cd0[20],%L0x7ffffff50cd8[20],%L0x7ffffff50ce0[20],
              %L0x7ffffff50ce8[20],%L0x7ffffff50cf0[20],%L0x7ffffff50cf8[20]]*Y1**5+
      poly z [%L0x7ffffff50ca0[24],%L0x7ffffff50ca8[24],%L0x7ffffff50cb0[24],
              %L0x7ffffff50cb8[24],%L0x7ffffff50cc0[24],%L0x7ffffff50cc8[24],
              %L0x7ffffff50cd0[24],%L0x7ffffff50cd8[24],%L0x7ffffff50ce0[24],
              %L0x7ffffff50ce8[24],%L0x7ffffff50cf0[24],%L0x7ffffff50cf8[24]]*Y1**6+
      poly z [%L0x7ffffff50ca0[28],%L0x7ffffff50ca8[28],%L0x7ffffff50cb0[28],
              %L0x7ffffff50cb8[28],%L0x7ffffff50cc0[28],%L0x7ffffff50cc8[28],
              %L0x7ffffff50cd0[28],%L0x7ffffff50cd8[28],%L0x7ffffff50ce0[28],
              %L0x7ffffff50ce8[28],%L0x7ffffff50cf0[28],%L0x7ffffff50cf8[28]]*Y1**7+
      poly z [%L0x7ffffff50ca0[32],%L0x7ffffff50ca8[32],%L0x7ffffff50cb0[32],
              %L0x7ffffff50cb8[32],%L0x7ffffff50cc0[32],%L0x7ffffff50cc8[32],
              %L0x7ffffff50cd0[32],%L0x7ffffff50cd8[32],%L0x7ffffff50ce0[32],
              %L0x7ffffff50ce8[32],%L0x7ffffff50cf0[32],%L0x7ffffff50cf8[32]]*Y1**8+
      poly z [%L0x7ffffff50ca0[36],%L0x7ffffff50ca8[36],%L0x7ffffff50cb0[36],
              %L0x7ffffff50cb8[36],%L0x7ffffff50cc0[36],%L0x7ffffff50cc8[36],
              %L0x7ffffff50cd0[36],%L0x7ffffff50cd8[36],%L0x7ffffff50ce0[36],
              %L0x7ffffff50ce8[36],%L0x7ffffff50cf0[36],%L0x7ffffff50cf8[36]]*Y1**9+
      poly z [%L0x7ffffff50ca0[40],%L0x7ffffff50ca8[40],%L0x7ffffff50cb0[40],
              %L0x7ffffff50cb8[40],%L0x7ffffff50cc0[40],%L0x7ffffff50cc8[40],
              %L0x7ffffff50cd0[40],%L0x7ffffff50cd8[40],%L0x7ffffff50ce0[40],
              %L0x7ffffff50ce8[40],%L0x7ffffff50cf0[40],%L0x7ffffff50cf8[40]]*Y1**10+
      poly z [%L0x7ffffff50ca0[44],%L0x7ffffff50ca8[44],%L0x7ffffff50cb0[44],
              %L0x7ffffff50cb8[44],%L0x7ffffff50cc0[44],%L0x7ffffff50cc8[44],
              %L0x7ffffff50cd0[44],%L0x7ffffff50cd8[44],%L0x7ffffff50ce0[44],
              %L0x7ffffff50ce8[44],%L0x7ffffff50cf0[44],%L0x7ffffff50cf8[44]]*Y1**11+
      poly z [%L0x7ffffff50ca0[48],%L0x7ffffff50ca8[48],%L0x7ffffff50cb0[48],
              %L0x7ffffff50cb8[48],%L0x7ffffff50cc0[48],%L0x7ffffff50cc8[48],
              %L0x7ffffff50cd0[48],%L0x7ffffff50cd8[48],%L0x7ffffff50ce0[48],
              %L0x7ffffff50ce8[48],%L0x7ffffff50cf0[48],%L0x7ffffff50cf8[48]]*Y1**12+
      poly z [%L0x7ffffff50ca0[52],%L0x7ffffff50ca8[52],%L0x7ffffff50cb0[52],
              %L0x7ffffff50cb8[52],%L0x7ffffff50cc0[52],%L0x7ffffff50cc8[52],
              %L0x7ffffff50cd0[52],%L0x7ffffff50cd8[52],%L0x7ffffff50ce0[52],
              %L0x7ffffff50ce8[52],%L0x7ffffff50cf0[52],%L0x7ffffff50cf8[52]]*Y1**13+
      poly z [%L0x7ffffff50ca0[56],%L0x7ffffff50ca8[56],%L0x7ffffff50cb0[56],
              %L0x7ffffff50cb8[56],%L0x7ffffff50cc0[56],%L0x7ffffff50cc8[56],
              %L0x7ffffff50cd0[56],%L0x7ffffff50cd8[56],%L0x7ffffff50ce0[56],
              %L0x7ffffff50ce8[56],%L0x7ffffff50cf0[56],%L0x7ffffff50cf8[56]]*Y1**14+
      poly z [%L0x7ffffff50ca0[60],%L0x7ffffff50ca8[60],%L0x7ffffff50cb0[60],
              %L0x7ffffff50cb8[60],%L0x7ffffff50cc0[60],%L0x7ffffff50cc8[60],
              %L0x7ffffff50cd0[60],%L0x7ffffff50cd8[60],%L0x7ffffff50ce0[60],
              %L0x7ffffff50ce8[60],%L0x7ffffff50cf0[60],%L0x7ffffff50cf8[60]]*Y1**15 /\
G11 = poly z [%L0x7ffffff50ca0[1],%L0x7ffffff50ca8[1],%L0x7ffffff50cb0[1],
              %L0x7ffffff50cb8[1],%L0x7ffffff50cc0[1],%L0x7ffffff50cc8[1],
              %L0x7ffffff50cd0[1],%L0x7ffffff50cd8[1],%L0x7ffffff50ce0[1],
              %L0x7ffffff50ce8[1],%L0x7ffffff50cf0[1],%L0x7ffffff50cf8[1]]*Y1**0+
      poly z [%L0x7ffffff50ca0[5],%L0x7ffffff50ca8[5],%L0x7ffffff50cb0[5],
              %L0x7ffffff50cb8[5],%L0x7ffffff50cc0[5],%L0x7ffffff50cc8[5],
              %L0x7ffffff50cd0[5],%L0x7ffffff50cd8[5],%L0x7ffffff50ce0[5],
              %L0x7ffffff50ce8[5],%L0x7ffffff50cf0[5],%L0x7ffffff50cf8[5]]*Y1**1+
      poly z [%L0x7ffffff50ca0[9],%L0x7ffffff50ca8[9],%L0x7ffffff50cb0[9],
              %L0x7ffffff50cb8[9],%L0x7ffffff50cc0[9],%L0x7ffffff50cc8[9],
              %L0x7ffffff50cd0[9],%L0x7ffffff50cd8[9],%L0x7ffffff50ce0[9],
              %L0x7ffffff50ce8[9],%L0x7ffffff50cf0[9],%L0x7ffffff50cf8[9]]*Y1**2+
      poly z [%L0x7ffffff50ca0[13],%L0x7ffffff50ca8[13],%L0x7ffffff50cb0[13],
              %L0x7ffffff50cb8[13],%L0x7ffffff50cc0[13],%L0x7ffffff50cc8[13],
              %L0x7ffffff50cd0[13],%L0x7ffffff50cd8[13],%L0x7ffffff50ce0[13],
              %L0x7ffffff50ce8[13],%L0x7ffffff50cf0[13],%L0x7ffffff50cf8[13]]*Y1**3+
      poly z [%L0x7ffffff50ca0[17],%L0x7ffffff50ca8[17],%L0x7ffffff50cb0[17],
              %L0x7ffffff50cb8[17],%L0x7ffffff50cc0[17],%L0x7ffffff50cc8[17],
              %L0x7ffffff50cd0[17],%L0x7ffffff50cd8[17],%L0x7ffffff50ce0[17],
              %L0x7ffffff50ce8[17],%L0x7ffffff50cf0[17],%L0x7ffffff50cf8[17]]*Y1**4+
      poly z [%L0x7ffffff50ca0[21],%L0x7ffffff50ca8[21],%L0x7ffffff50cb0[21],
              %L0x7ffffff50cb8[21],%L0x7ffffff50cc0[21],%L0x7ffffff50cc8[21],
              %L0x7ffffff50cd0[21],%L0x7ffffff50cd8[21],%L0x7ffffff50ce0[21],
              %L0x7ffffff50ce8[21],%L0x7ffffff50cf0[21],%L0x7ffffff50cf8[21]]*Y1**5+
      poly z [%L0x7ffffff50ca0[25],%L0x7ffffff50ca8[25],%L0x7ffffff50cb0[25],
              %L0x7ffffff50cb8[25],%L0x7ffffff50cc0[25],%L0x7ffffff50cc8[25],
              %L0x7ffffff50cd0[25],%L0x7ffffff50cd8[25],%L0x7ffffff50ce0[25],
              %L0x7ffffff50ce8[25],%L0x7ffffff50cf0[25],%L0x7ffffff50cf8[25]]*Y1**6+
      poly z [%L0x7ffffff50ca0[29],%L0x7ffffff50ca8[29],%L0x7ffffff50cb0[29],
              %L0x7ffffff50cb8[29],%L0x7ffffff50cc0[29],%L0x7ffffff50cc8[29],
              %L0x7ffffff50cd0[29],%L0x7ffffff50cd8[29],%L0x7ffffff50ce0[29],
              %L0x7ffffff50ce8[29],%L0x7ffffff50cf0[29],%L0x7ffffff50cf8[29]]*Y1**7+
      poly z [%L0x7ffffff50ca0[33],%L0x7ffffff50ca8[33],%L0x7ffffff50cb0[33],
              %L0x7ffffff50cb8[33],%L0x7ffffff50cc0[33],%L0x7ffffff50cc8[33],
              %L0x7ffffff50cd0[33],%L0x7ffffff50cd8[33],%L0x7ffffff50ce0[33],
              %L0x7ffffff50ce8[33],%L0x7ffffff50cf0[33],%L0x7ffffff50cf8[33]]*Y1**8+
      poly z [%L0x7ffffff50ca0[37],%L0x7ffffff50ca8[37],%L0x7ffffff50cb0[37],
              %L0x7ffffff50cb8[37],%L0x7ffffff50cc0[37],%L0x7ffffff50cc8[37],
              %L0x7ffffff50cd0[37],%L0x7ffffff50cd8[37],%L0x7ffffff50ce0[37],
              %L0x7ffffff50ce8[37],%L0x7ffffff50cf0[37],%L0x7ffffff50cf8[37]]*Y1**9+
      poly z [%L0x7ffffff50ca0[41],%L0x7ffffff50ca8[41],%L0x7ffffff50cb0[41],
              %L0x7ffffff50cb8[41],%L0x7ffffff50cc0[41],%L0x7ffffff50cc8[41],
              %L0x7ffffff50cd0[41],%L0x7ffffff50cd8[41],%L0x7ffffff50ce0[41],
              %L0x7ffffff50ce8[41],%L0x7ffffff50cf0[41],%L0x7ffffff50cf8[41]]*Y1**10+
      poly z [%L0x7ffffff50ca0[45],%L0x7ffffff50ca8[45],%L0x7ffffff50cb0[45],
              %L0x7ffffff50cb8[45],%L0x7ffffff50cc0[45],%L0x7ffffff50cc8[45],
              %L0x7ffffff50cd0[45],%L0x7ffffff50cd8[45],%L0x7ffffff50ce0[45],
              %L0x7ffffff50ce8[45],%L0x7ffffff50cf0[45],%L0x7ffffff50cf8[45]]*Y1**11+
      poly z [%L0x7ffffff50ca0[49],%L0x7ffffff50ca8[49],%L0x7ffffff50cb0[49],
              %L0x7ffffff50cb8[49],%L0x7ffffff50cc0[49],%L0x7ffffff50cc8[49],
              %L0x7ffffff50cd0[49],%L0x7ffffff50cd8[49],%L0x7ffffff50ce0[49],
              %L0x7ffffff50ce8[49],%L0x7ffffff50cf0[49],%L0x7ffffff50cf8[49]]*Y1**12+
      poly z [%L0x7ffffff50ca0[53],%L0x7ffffff50ca8[53],%L0x7ffffff50cb0[53],
              %L0x7ffffff50cb8[53],%L0x7ffffff50cc0[53],%L0x7ffffff50cc8[53],
              %L0x7ffffff50cd0[53],%L0x7ffffff50cd8[53],%L0x7ffffff50ce0[53],
              %L0x7ffffff50ce8[53],%L0x7ffffff50cf0[53],%L0x7ffffff50cf8[53]]*Y1**13+
      poly z [%L0x7ffffff50ca0[57],%L0x7ffffff50ca8[57],%L0x7ffffff50cb0[57],
              %L0x7ffffff50cb8[57],%L0x7ffffff50cc0[57],%L0x7ffffff50cc8[57],
              %L0x7ffffff50cd0[57],%L0x7ffffff50cd8[57],%L0x7ffffff50ce0[57],
              %L0x7ffffff50ce8[57],%L0x7ffffff50cf0[57],%L0x7ffffff50cf8[57]]*Y1**14+
      poly z [%L0x7ffffff50ca0[61],%L0x7ffffff50ca8[61],%L0x7ffffff50cb0[61],
              %L0x7ffffff50cb8[61],%L0x7ffffff50cc0[61],%L0x7ffffff50cc8[61],
              %L0x7ffffff50cd0[61],%L0x7ffffff50cd8[61],%L0x7ffffff50ce0[61],
              %L0x7ffffff50ce8[61],%L0x7ffffff50cf0[61],%L0x7ffffff50cf8[61]]*Y1**15 /\
G12 = poly z [%L0x7ffffff50ca0[2],%L0x7ffffff50ca8[2],%L0x7ffffff50cb0[2],
              %L0x7ffffff50cb8[2],%L0x7ffffff50cc0[2],%L0x7ffffff50cc8[2],
              %L0x7ffffff50cd0[2],%L0x7ffffff50cd8[2],%L0x7ffffff50ce0[2],
              %L0x7ffffff50ce8[2],%L0x7ffffff50cf0[2],%L0x7ffffff50cf8[2]]*Y1**0+
      poly z [%L0x7ffffff50ca0[6],%L0x7ffffff50ca8[6],%L0x7ffffff50cb0[6],
              %L0x7ffffff50cb8[6],%L0x7ffffff50cc0[6],%L0x7ffffff50cc8[6],
              %L0x7ffffff50cd0[6],%L0x7ffffff50cd8[6],%L0x7ffffff50ce0[6],
              %L0x7ffffff50ce8[6],%L0x7ffffff50cf0[6],%L0x7ffffff50cf8[6]]*Y1**1+
      poly z [%L0x7ffffff50ca0[10],%L0x7ffffff50ca8[10],%L0x7ffffff50cb0[10],
              %L0x7ffffff50cb8[10],%L0x7ffffff50cc0[10],%L0x7ffffff50cc8[10],
              %L0x7ffffff50cd0[10],%L0x7ffffff50cd8[10],%L0x7ffffff50ce0[10],
              %L0x7ffffff50ce8[10],%L0x7ffffff50cf0[10],%L0x7ffffff50cf8[10]]*Y1**2+
      poly z [%L0x7ffffff50ca0[14],%L0x7ffffff50ca8[14],%L0x7ffffff50cb0[14],
              %L0x7ffffff50cb8[14],%L0x7ffffff50cc0[14],%L0x7ffffff50cc8[14],
              %L0x7ffffff50cd0[14],%L0x7ffffff50cd8[14],%L0x7ffffff50ce0[14],
              %L0x7ffffff50ce8[14],%L0x7ffffff50cf0[14],%L0x7ffffff50cf8[14]]*Y1**3+
      poly z [%L0x7ffffff50ca0[18],%L0x7ffffff50ca8[18],%L0x7ffffff50cb0[18],
              %L0x7ffffff50cb8[18],%L0x7ffffff50cc0[18],%L0x7ffffff50cc8[18],
              %L0x7ffffff50cd0[18],%L0x7ffffff50cd8[18],%L0x7ffffff50ce0[18],
              %L0x7ffffff50ce8[18],%L0x7ffffff50cf0[18],%L0x7ffffff50cf8[18]]*Y1**4+
      poly z [%L0x7ffffff50ca0[22],%L0x7ffffff50ca8[22],%L0x7ffffff50cb0[22],
              %L0x7ffffff50cb8[22],%L0x7ffffff50cc0[22],%L0x7ffffff50cc8[22],
              %L0x7ffffff50cd0[22],%L0x7ffffff50cd8[22],%L0x7ffffff50ce0[22],
              %L0x7ffffff50ce8[22],%L0x7ffffff50cf0[22],%L0x7ffffff50cf8[22]]*Y1**5+
      poly z [%L0x7ffffff50ca0[26],%L0x7ffffff50ca8[26],%L0x7ffffff50cb0[26],
              %L0x7ffffff50cb8[26],%L0x7ffffff50cc0[26],%L0x7ffffff50cc8[26],
              %L0x7ffffff50cd0[26],%L0x7ffffff50cd8[26],%L0x7ffffff50ce0[26],
              %L0x7ffffff50ce8[26],%L0x7ffffff50cf0[26],%L0x7ffffff50cf8[26]]*Y1**6+
      poly z [%L0x7ffffff50ca0[30],%L0x7ffffff50ca8[30],%L0x7ffffff50cb0[30],
              %L0x7ffffff50cb8[30],%L0x7ffffff50cc0[30],%L0x7ffffff50cc8[30],
              %L0x7ffffff50cd0[30],%L0x7ffffff50cd8[30],%L0x7ffffff50ce0[30],
              %L0x7ffffff50ce8[30],%L0x7ffffff50cf0[30],%L0x7ffffff50cf8[30]]*Y1**7+
      poly z [%L0x7ffffff50ca0[34],%L0x7ffffff50ca8[34],%L0x7ffffff50cb0[34],
              %L0x7ffffff50cb8[34],%L0x7ffffff50cc0[34],%L0x7ffffff50cc8[34],
              %L0x7ffffff50cd0[34],%L0x7ffffff50cd8[34],%L0x7ffffff50ce0[34],
              %L0x7ffffff50ce8[34],%L0x7ffffff50cf0[34],%L0x7ffffff50cf8[34]]*Y1**8+
      poly z [%L0x7ffffff50ca0[38],%L0x7ffffff50ca8[38],%L0x7ffffff50cb0[38],
              %L0x7ffffff50cb8[38],%L0x7ffffff50cc0[38],%L0x7ffffff50cc8[38],
              %L0x7ffffff50cd0[38],%L0x7ffffff50cd8[38],%L0x7ffffff50ce0[38],
              %L0x7ffffff50ce8[38],%L0x7ffffff50cf0[38],%L0x7ffffff50cf8[38]]*Y1**9+
      poly z [%L0x7ffffff50ca0[42],%L0x7ffffff50ca8[42],%L0x7ffffff50cb0[42],
              %L0x7ffffff50cb8[42],%L0x7ffffff50cc0[42],%L0x7ffffff50cc8[42],
              %L0x7ffffff50cd0[42],%L0x7ffffff50cd8[42],%L0x7ffffff50ce0[42],
              %L0x7ffffff50ce8[42],%L0x7ffffff50cf0[42],%L0x7ffffff50cf8[42]]*Y1**10+
      poly z [%L0x7ffffff50ca0[46],%L0x7ffffff50ca8[46],%L0x7ffffff50cb0[46],
              %L0x7ffffff50cb8[46],%L0x7ffffff50cc0[46],%L0x7ffffff50cc8[46],
              %L0x7ffffff50cd0[46],%L0x7ffffff50cd8[46],%L0x7ffffff50ce0[46],
              %L0x7ffffff50ce8[46],%L0x7ffffff50cf0[46],%L0x7ffffff50cf8[46]]*Y1**11+
      poly z [%L0x7ffffff50ca0[50],%L0x7ffffff50ca8[50],%L0x7ffffff50cb0[50],
              %L0x7ffffff50cb8[50],%L0x7ffffff50cc0[50],%L0x7ffffff50cc8[50],
              %L0x7ffffff50cd0[50],%L0x7ffffff50cd8[50],%L0x7ffffff50ce0[50],
              %L0x7ffffff50ce8[50],%L0x7ffffff50cf0[50],%L0x7ffffff50cf8[50]]*Y1**12+
      poly z [%L0x7ffffff50ca0[54],%L0x7ffffff50ca8[54],%L0x7ffffff50cb0[54],
              %L0x7ffffff50cb8[54],%L0x7ffffff50cc0[54],%L0x7ffffff50cc8[54],
              %L0x7ffffff50cd0[54],%L0x7ffffff50cd8[54],%L0x7ffffff50ce0[54],
              %L0x7ffffff50ce8[54],%L0x7ffffff50cf0[54],%L0x7ffffff50cf8[54]]*Y1**13+
      poly z [%L0x7ffffff50ca0[58],%L0x7ffffff50ca8[58],%L0x7ffffff50cb0[58],
              %L0x7ffffff50cb8[58],%L0x7ffffff50cc0[58],%L0x7ffffff50cc8[58],
              %L0x7ffffff50cd0[58],%L0x7ffffff50cd8[58],%L0x7ffffff50ce0[58],
              %L0x7ffffff50ce8[58],%L0x7ffffff50cf0[58],%L0x7ffffff50cf8[58]]*Y1**14+
      poly z [%L0x7ffffff50ca0[62],%L0x7ffffff50ca8[62],%L0x7ffffff50cb0[62],
              %L0x7ffffff50cb8[62],%L0x7ffffff50cc0[62],%L0x7ffffff50cc8[62],
              %L0x7ffffff50cd0[62],%L0x7ffffff50cd8[62],%L0x7ffffff50ce0[62],
              %L0x7ffffff50ce8[62],%L0x7ffffff50cf0[62],%L0x7ffffff50cf8[62]]*Y1**15
  /\
G13 = poly z [%L0x7ffffff50ca0[3],%L0x7ffffff50ca8[3],%L0x7ffffff50cb0[3],
              %L0x7ffffff50cb8[3],%L0x7ffffff50cc0[3],%L0x7ffffff50cc8[3],
              %L0x7ffffff50cd0[3],%L0x7ffffff50cd8[3],%L0x7ffffff50ce0[3],
              %L0x7ffffff50ce8[3],%L0x7ffffff50cf0[3],%L0x7ffffff50cf8[3]]*Y1**0+
      poly z [%L0x7ffffff50ca0[7],%L0x7ffffff50ca8[7],%L0x7ffffff50cb0[7],
              %L0x7ffffff50cb8[7],%L0x7ffffff50cc0[7],%L0x7ffffff50cc8[7],
              %L0x7ffffff50cd0[7],%L0x7ffffff50cd8[7],%L0x7ffffff50ce0[7],
              %L0x7ffffff50ce8[7],%L0x7ffffff50cf0[7],%L0x7ffffff50cf8[7]]*Y1**1+
      poly z [%L0x7ffffff50ca0[11],%L0x7ffffff50ca8[11],%L0x7ffffff50cb0[11],
              %L0x7ffffff50cb8[11],%L0x7ffffff50cc0[11],%L0x7ffffff50cc8[11],
              %L0x7ffffff50cd0[11],%L0x7ffffff50cd8[11],%L0x7ffffff50ce0[11],
              %L0x7ffffff50ce8[11],%L0x7ffffff50cf0[11],%L0x7ffffff50cf8[11]]*Y1**2+
      poly z [%L0x7ffffff50ca0[15],%L0x7ffffff50ca8[15],%L0x7ffffff50cb0[15],
              %L0x7ffffff50cb8[15],%L0x7ffffff50cc0[15],%L0x7ffffff50cc8[15],
              %L0x7ffffff50cd0[15],%L0x7ffffff50cd8[15],%L0x7ffffff50ce0[15],
              %L0x7ffffff50ce8[15],%L0x7ffffff50cf0[15],%L0x7ffffff50cf8[15]]*Y1**3+
      poly z [%L0x7ffffff50ca0[19],%L0x7ffffff50ca8[19],%L0x7ffffff50cb0[19],
              %L0x7ffffff50cb8[19],%L0x7ffffff50cc0[19],%L0x7ffffff50cc8[19],
              %L0x7ffffff50cd0[19],%L0x7ffffff50cd8[19],%L0x7ffffff50ce0[19],
              %L0x7ffffff50ce8[19],%L0x7ffffff50cf0[19],%L0x7ffffff50cf8[19]]*Y1**4+
      poly z [%L0x7ffffff50ca0[23],%L0x7ffffff50ca8[23],%L0x7ffffff50cb0[23],
              %L0x7ffffff50cb8[23],%L0x7ffffff50cc0[23],%L0x7ffffff50cc8[23],
              %L0x7ffffff50cd0[23],%L0x7ffffff50cd8[23],%L0x7ffffff50ce0[23],
              %L0x7ffffff50ce8[23],%L0x7ffffff50cf0[23],%L0x7ffffff50cf8[23]]*Y1**5+
      poly z [%L0x7ffffff50ca0[27],%L0x7ffffff50ca8[27],%L0x7ffffff50cb0[27],
              %L0x7ffffff50cb8[27],%L0x7ffffff50cc0[27],%L0x7ffffff50cc8[27],
              %L0x7ffffff50cd0[27],%L0x7ffffff50cd8[27],%L0x7ffffff50ce0[27],
              %L0x7ffffff50ce8[27],%L0x7ffffff50cf0[27],%L0x7ffffff50cf8[27]]*Y1**6+
      poly z [%L0x7ffffff50ca0[31],%L0x7ffffff50ca8[31],%L0x7ffffff50cb0[31],
              %L0x7ffffff50cb8[31],%L0x7ffffff50cc0[31],%L0x7ffffff50cc8[31],
              %L0x7ffffff50cd0[31],%L0x7ffffff50cd8[31],%L0x7ffffff50ce0[31],
              %L0x7ffffff50ce8[31],%L0x7ffffff50cf0[31],%L0x7ffffff50cf8[31]]*Y1**7+
      poly z [%L0x7ffffff50ca0[35],%L0x7ffffff50ca8[35],%L0x7ffffff50cb0[35],
              %L0x7ffffff50cb8[35],%L0x7ffffff50cc0[35],%L0x7ffffff50cc8[35],
              %L0x7ffffff50cd0[35],%L0x7ffffff50cd8[35],%L0x7ffffff50ce0[35],
              %L0x7ffffff50ce8[35],%L0x7ffffff50cf0[35],%L0x7ffffff50cf8[35]]*Y1**8+
      poly z [%L0x7ffffff50ca0[39],%L0x7ffffff50ca8[39],%L0x7ffffff50cb0[39],
              %L0x7ffffff50cb8[39],%L0x7ffffff50cc0[39],%L0x7ffffff50cc8[39],
              %L0x7ffffff50cd0[39],%L0x7ffffff50cd8[39],%L0x7ffffff50ce0[39],
              %L0x7ffffff50ce8[39],%L0x7ffffff50cf0[39],%L0x7ffffff50cf8[39]]*Y1**9+
      poly z [%L0x7ffffff50ca0[43],%L0x7ffffff50ca8[43],%L0x7ffffff50cb0[43],
              %L0x7ffffff50cb8[43],%L0x7ffffff50cc0[43],%L0x7ffffff50cc8[43],
              %L0x7ffffff50cd0[43],%L0x7ffffff50cd8[43],%L0x7ffffff50ce0[43],
              %L0x7ffffff50ce8[43],%L0x7ffffff50cf0[43],%L0x7ffffff50cf8[43]]*Y1**10+
      poly z [%L0x7ffffff50ca0[47],%L0x7ffffff50ca8[47],%L0x7ffffff50cb0[47],
              %L0x7ffffff50cb8[47],%L0x7ffffff50cc0[47],%L0x7ffffff50cc8[47],
              %L0x7ffffff50cd0[47],%L0x7ffffff50cd8[47],%L0x7ffffff50ce0[47],
              %L0x7ffffff50ce8[47],%L0x7ffffff50cf0[47],%L0x7ffffff50cf8[47]]*Y1**11+
      poly z [%L0x7ffffff50ca0[51],%L0x7ffffff50ca8[51],%L0x7ffffff50cb0[51],
              %L0x7ffffff50cb8[51],%L0x7ffffff50cc0[51],%L0x7ffffff50cc8[51],
              %L0x7ffffff50cd0[51],%L0x7ffffff50cd8[51],%L0x7ffffff50ce0[51],
              %L0x7ffffff50ce8[51],%L0x7ffffff50cf0[51],%L0x7ffffff50cf8[51]]*Y1**12+
      poly z [%L0x7ffffff50ca0[55],%L0x7ffffff50ca8[55],%L0x7ffffff50cb0[55],
              %L0x7ffffff50cb8[55],%L0x7ffffff50cc0[55],%L0x7ffffff50cc8[55],
              %L0x7ffffff50cd0[55],%L0x7ffffff50cd8[55],%L0x7ffffff50ce0[55],
              %L0x7ffffff50ce8[55],%L0x7ffffff50cf0[55],%L0x7ffffff50cf8[55]]*Y1**13+
      poly z [%L0x7ffffff50ca0[59],%L0x7ffffff50ca8[59],%L0x7ffffff50cb0[59],
              %L0x7ffffff50cb8[59],%L0x7ffffff50cc0[59],%L0x7ffffff50cc8[59],
              %L0x7ffffff50cd0[59],%L0x7ffffff50cd8[59],%L0x7ffffff50ce0[59],
              %L0x7ffffff50ce8[59],%L0x7ffffff50cf0[59],%L0x7ffffff50cf8[59]]*Y1**14+
      poly z [%L0x7ffffff50ca0[63],%L0x7ffffff50ca8[63],%L0x7ffffff50cb0[63],
              %L0x7ffffff50cb8[63],%L0x7ffffff50cc0[63],%L0x7ffffff50cc8[63],
              %L0x7ffffff50cd0[63],%L0x7ffffff50cd8[63],%L0x7ffffff50ce0[63],
              %L0x7ffffff50ce8[63],%L0x7ffffff50cf0[63],%L0x7ffffff50cf8[63]]*Y1**15
   && true;

(* 3 *)
cut eqmod F10 G10 [2, z**12+z**3+1] /\ eqmod F11 G11 [2, z**12+z**3+1] /\
    eqmod F12 G12 [2, z**12+z**3+1] /\ eqmod F13 G13 [2, z**12+z**3+1] /\
G10 = poly z [%L0x7ffffff50ca0[0],%L0x7ffffff50ca8[0],%L0x7ffffff50cb0[0],
              %L0x7ffffff50cb8[0],%L0x7ffffff50cc0[0],%L0x7ffffff50cc8[0],
              %L0x7ffffff50cd0[0],%L0x7ffffff50cd8[0],%L0x7ffffff50ce0[0],
              %L0x7ffffff50ce8[0],%L0x7ffffff50cf0[0],%L0x7ffffff50cf8[0]]*Y1**0+
      poly z [%L0x7ffffff50ca0[4],%L0x7ffffff50ca8[4],%L0x7ffffff50cb0[4],
              %L0x7ffffff50cb8[4],%L0x7ffffff50cc0[4],%L0x7ffffff50cc8[4],
              %L0x7ffffff50cd0[4],%L0x7ffffff50cd8[4],%L0x7ffffff50ce0[4],
              %L0x7ffffff50ce8[4],%L0x7ffffff50cf0[4],%L0x7ffffff50cf8[4]]*Y1**1+
      poly z [%L0x7ffffff50ca0[8],%L0x7ffffff50ca8[8],%L0x7ffffff50cb0[8],
              %L0x7ffffff50cb8[8],%L0x7ffffff50cc0[8],%L0x7ffffff50cc8[8],
              %L0x7ffffff50cd0[8],%L0x7ffffff50cd8[8],%L0x7ffffff50ce0[8],
              %L0x7ffffff50ce8[8],%L0x7ffffff50cf0[8],%L0x7ffffff50cf8[8]]*Y1**2+
      poly z [%L0x7ffffff50ca0[12],%L0x7ffffff50ca8[12],%L0x7ffffff50cb0[12],
              %L0x7ffffff50cb8[12],%L0x7ffffff50cc0[12],%L0x7ffffff50cc8[12],
              %L0x7ffffff50cd0[12],%L0x7ffffff50cd8[12],%L0x7ffffff50ce0[12],
              %L0x7ffffff50ce8[12],%L0x7ffffff50cf0[12],%L0x7ffffff50cf8[12]]*Y1**3+
      poly z [%L0x7ffffff50ca0[16],%L0x7ffffff50ca8[16],%L0x7ffffff50cb0[16],
              %L0x7ffffff50cb8[16],%L0x7ffffff50cc0[16],%L0x7ffffff50cc8[16],
              %L0x7ffffff50cd0[16],%L0x7ffffff50cd8[16],%L0x7ffffff50ce0[16],
              %L0x7ffffff50ce8[16],%L0x7ffffff50cf0[16],%L0x7ffffff50cf8[16]]*Y1**4+
      poly z [%L0x7ffffff50ca0[20],%L0x7ffffff50ca8[20],%L0x7ffffff50cb0[20],
              %L0x7ffffff50cb8[20],%L0x7ffffff50cc0[20],%L0x7ffffff50cc8[20],
              %L0x7ffffff50cd0[20],%L0x7ffffff50cd8[20],%L0x7ffffff50ce0[20],
              %L0x7ffffff50ce8[20],%L0x7ffffff50cf0[20],%L0x7ffffff50cf8[20]]*Y1**5+
      poly z [%L0x7ffffff50ca0[24],%L0x7ffffff50ca8[24],%L0x7ffffff50cb0[24],
              %L0x7ffffff50cb8[24],%L0x7ffffff50cc0[24],%L0x7ffffff50cc8[24],
              %L0x7ffffff50cd0[24],%L0x7ffffff50cd8[24],%L0x7ffffff50ce0[24],
              %L0x7ffffff50ce8[24],%L0x7ffffff50cf0[24],%L0x7ffffff50cf8[24]]*Y1**6+
      poly z [%L0x7ffffff50ca0[28],%L0x7ffffff50ca8[28],%L0x7ffffff50cb0[28],
              %L0x7ffffff50cb8[28],%L0x7ffffff50cc0[28],%L0x7ffffff50cc8[28],
              %L0x7ffffff50cd0[28],%L0x7ffffff50cd8[28],%L0x7ffffff50ce0[28],
              %L0x7ffffff50ce8[28],%L0x7ffffff50cf0[28],%L0x7ffffff50cf8[28]]*Y1**7+
      poly z [%L0x7ffffff50ca0[32],%L0x7ffffff50ca8[32],%L0x7ffffff50cb0[32],
              %L0x7ffffff50cb8[32],%L0x7ffffff50cc0[32],%L0x7ffffff50cc8[32],
              %L0x7ffffff50cd0[32],%L0x7ffffff50cd8[32],%L0x7ffffff50ce0[32],
              %L0x7ffffff50ce8[32],%L0x7ffffff50cf0[32],%L0x7ffffff50cf8[32]]*Y1**8+
      poly z [%L0x7ffffff50ca0[36],%L0x7ffffff50ca8[36],%L0x7ffffff50cb0[36],
              %L0x7ffffff50cb8[36],%L0x7ffffff50cc0[36],%L0x7ffffff50cc8[36],
              %L0x7ffffff50cd0[36],%L0x7ffffff50cd8[36],%L0x7ffffff50ce0[36],
              %L0x7ffffff50ce8[36],%L0x7ffffff50cf0[36],%L0x7ffffff50cf8[36]]*Y1**9+
      poly z [%L0x7ffffff50ca0[40],%L0x7ffffff50ca8[40],%L0x7ffffff50cb0[40],
              %L0x7ffffff50cb8[40],%L0x7ffffff50cc0[40],%L0x7ffffff50cc8[40],
              %L0x7ffffff50cd0[40],%L0x7ffffff50cd8[40],%L0x7ffffff50ce0[40],
              %L0x7ffffff50ce8[40],%L0x7ffffff50cf0[40],%L0x7ffffff50cf8[40]]*Y1**10+
      poly z [%L0x7ffffff50ca0[44],%L0x7ffffff50ca8[44],%L0x7ffffff50cb0[44],
              %L0x7ffffff50cb8[44],%L0x7ffffff50cc0[44],%L0x7ffffff50cc8[44],
              %L0x7ffffff50cd0[44],%L0x7ffffff50cd8[44],%L0x7ffffff50ce0[44],
              %L0x7ffffff50ce8[44],%L0x7ffffff50cf0[44],%L0x7ffffff50cf8[44]]*Y1**11+
      poly z [%L0x7ffffff50ca0[48],%L0x7ffffff50ca8[48],%L0x7ffffff50cb0[48],
              %L0x7ffffff50cb8[48],%L0x7ffffff50cc0[48],%L0x7ffffff50cc8[48],
              %L0x7ffffff50cd0[48],%L0x7ffffff50cd8[48],%L0x7ffffff50ce0[48],
              %L0x7ffffff50ce8[48],%L0x7ffffff50cf0[48],%L0x7ffffff50cf8[48]]*Y1**12+
      poly z [%L0x7ffffff50ca0[52],%L0x7ffffff50ca8[52],%L0x7ffffff50cb0[52],
              %L0x7ffffff50cb8[52],%L0x7ffffff50cc0[52],%L0x7ffffff50cc8[52],
              %L0x7ffffff50cd0[52],%L0x7ffffff50cd8[52],%L0x7ffffff50ce0[52],
              %L0x7ffffff50ce8[52],%L0x7ffffff50cf0[52],%L0x7ffffff50cf8[52]]*Y1**13+
      poly z [%L0x7ffffff50ca0[56],%L0x7ffffff50ca8[56],%L0x7ffffff50cb0[56],
              %L0x7ffffff50cb8[56],%L0x7ffffff50cc0[56],%L0x7ffffff50cc8[56],
              %L0x7ffffff50cd0[56],%L0x7ffffff50cd8[56],%L0x7ffffff50ce0[56],
              %L0x7ffffff50ce8[56],%L0x7ffffff50cf0[56],%L0x7ffffff50cf8[56]]*Y1**14+
      poly z [%L0x7ffffff50ca0[60],%L0x7ffffff50ca8[60],%L0x7ffffff50cb0[60],
              %L0x7ffffff50cb8[60],%L0x7ffffff50cc0[60],%L0x7ffffff50cc8[60],
              %L0x7ffffff50cd0[60],%L0x7ffffff50cd8[60],%L0x7ffffff50ce0[60],
              %L0x7ffffff50ce8[60],%L0x7ffffff50cf0[60],%L0x7ffffff50cf8[60]]*Y1**15 /\
G11 = poly z [%L0x7ffffff50ca0[1],%L0x7ffffff50ca8[1],%L0x7ffffff50cb0[1],
              %L0x7ffffff50cb8[1],%L0x7ffffff50cc0[1],%L0x7ffffff50cc8[1],
              %L0x7ffffff50cd0[1],%L0x7ffffff50cd8[1],%L0x7ffffff50ce0[1],
              %L0x7ffffff50ce8[1],%L0x7ffffff50cf0[1],%L0x7ffffff50cf8[1]]*Y1**0+
      poly z [%L0x7ffffff50ca0[5],%L0x7ffffff50ca8[5],%L0x7ffffff50cb0[5],
              %L0x7ffffff50cb8[5],%L0x7ffffff50cc0[5],%L0x7ffffff50cc8[5],
              %L0x7ffffff50cd0[5],%L0x7ffffff50cd8[5],%L0x7ffffff50ce0[5],
              %L0x7ffffff50ce8[5],%L0x7ffffff50cf0[5],%L0x7ffffff50cf8[5]]*Y1**1+
      poly z [%L0x7ffffff50ca0[9],%L0x7ffffff50ca8[9],%L0x7ffffff50cb0[9],
              %L0x7ffffff50cb8[9],%L0x7ffffff50cc0[9],%L0x7ffffff50cc8[9],
              %L0x7ffffff50cd0[9],%L0x7ffffff50cd8[9],%L0x7ffffff50ce0[9],
              %L0x7ffffff50ce8[9],%L0x7ffffff50cf0[9],%L0x7ffffff50cf8[9]]*Y1**2+
      poly z [%L0x7ffffff50ca0[13],%L0x7ffffff50ca8[13],%L0x7ffffff50cb0[13],
              %L0x7ffffff50cb8[13],%L0x7ffffff50cc0[13],%L0x7ffffff50cc8[13],
              %L0x7ffffff50cd0[13],%L0x7ffffff50cd8[13],%L0x7ffffff50ce0[13],
              %L0x7ffffff50ce8[13],%L0x7ffffff50cf0[13],%L0x7ffffff50cf8[13]]*Y1**3+
      poly z [%L0x7ffffff50ca0[17],%L0x7ffffff50ca8[17],%L0x7ffffff50cb0[17],
              %L0x7ffffff50cb8[17],%L0x7ffffff50cc0[17],%L0x7ffffff50cc8[17],
              %L0x7ffffff50cd0[17],%L0x7ffffff50cd8[17],%L0x7ffffff50ce0[17],
              %L0x7ffffff50ce8[17],%L0x7ffffff50cf0[17],%L0x7ffffff50cf8[17]]*Y1**4+
      poly z [%L0x7ffffff50ca0[21],%L0x7ffffff50ca8[21],%L0x7ffffff50cb0[21],
              %L0x7ffffff50cb8[21],%L0x7ffffff50cc0[21],%L0x7ffffff50cc8[21],
              %L0x7ffffff50cd0[21],%L0x7ffffff50cd8[21],%L0x7ffffff50ce0[21],
              %L0x7ffffff50ce8[21],%L0x7ffffff50cf0[21],%L0x7ffffff50cf8[21]]*Y1**5+
      poly z [%L0x7ffffff50ca0[25],%L0x7ffffff50ca8[25],%L0x7ffffff50cb0[25],
              %L0x7ffffff50cb8[25],%L0x7ffffff50cc0[25],%L0x7ffffff50cc8[25],
              %L0x7ffffff50cd0[25],%L0x7ffffff50cd8[25],%L0x7ffffff50ce0[25],
              %L0x7ffffff50ce8[25],%L0x7ffffff50cf0[25],%L0x7ffffff50cf8[25]]*Y1**6+
      poly z [%L0x7ffffff50ca0[29],%L0x7ffffff50ca8[29],%L0x7ffffff50cb0[29],
              %L0x7ffffff50cb8[29],%L0x7ffffff50cc0[29],%L0x7ffffff50cc8[29],
              %L0x7ffffff50cd0[29],%L0x7ffffff50cd8[29],%L0x7ffffff50ce0[29],
              %L0x7ffffff50ce8[29],%L0x7ffffff50cf0[29],%L0x7ffffff50cf8[29]]*Y1**7+
      poly z [%L0x7ffffff50ca0[33],%L0x7ffffff50ca8[33],%L0x7ffffff50cb0[33],
              %L0x7ffffff50cb8[33],%L0x7ffffff50cc0[33],%L0x7ffffff50cc8[33],
              %L0x7ffffff50cd0[33],%L0x7ffffff50cd8[33],%L0x7ffffff50ce0[33],
              %L0x7ffffff50ce8[33],%L0x7ffffff50cf0[33],%L0x7ffffff50cf8[33]]*Y1**8+
      poly z [%L0x7ffffff50ca0[37],%L0x7ffffff50ca8[37],%L0x7ffffff50cb0[37],
              %L0x7ffffff50cb8[37],%L0x7ffffff50cc0[37],%L0x7ffffff50cc8[37],
              %L0x7ffffff50cd0[37],%L0x7ffffff50cd8[37],%L0x7ffffff50ce0[37],
              %L0x7ffffff50ce8[37],%L0x7ffffff50cf0[37],%L0x7ffffff50cf8[37]]*Y1**9+
      poly z [%L0x7ffffff50ca0[41],%L0x7ffffff50ca8[41],%L0x7ffffff50cb0[41],
              %L0x7ffffff50cb8[41],%L0x7ffffff50cc0[41],%L0x7ffffff50cc8[41],
              %L0x7ffffff50cd0[41],%L0x7ffffff50cd8[41],%L0x7ffffff50ce0[41],
              %L0x7ffffff50ce8[41],%L0x7ffffff50cf0[41],%L0x7ffffff50cf8[41]]*Y1**10+
      poly z [%L0x7ffffff50ca0[45],%L0x7ffffff50ca8[45],%L0x7ffffff50cb0[45],
              %L0x7ffffff50cb8[45],%L0x7ffffff50cc0[45],%L0x7ffffff50cc8[45],
              %L0x7ffffff50cd0[45],%L0x7ffffff50cd8[45],%L0x7ffffff50ce0[45],
              %L0x7ffffff50ce8[45],%L0x7ffffff50cf0[45],%L0x7ffffff50cf8[45]]*Y1**11+
      poly z [%L0x7ffffff50ca0[49],%L0x7ffffff50ca8[49],%L0x7ffffff50cb0[49],
              %L0x7ffffff50cb8[49],%L0x7ffffff50cc0[49],%L0x7ffffff50cc8[49],
              %L0x7ffffff50cd0[49],%L0x7ffffff50cd8[49],%L0x7ffffff50ce0[49],
              %L0x7ffffff50ce8[49],%L0x7ffffff50cf0[49],%L0x7ffffff50cf8[49]]*Y1**12+
      poly z [%L0x7ffffff50ca0[53],%L0x7ffffff50ca8[53],%L0x7ffffff50cb0[53],
              %L0x7ffffff50cb8[53],%L0x7ffffff50cc0[53],%L0x7ffffff50cc8[53],
              %L0x7ffffff50cd0[53],%L0x7ffffff50cd8[53],%L0x7ffffff50ce0[53],
              %L0x7ffffff50ce8[53],%L0x7ffffff50cf0[53],%L0x7ffffff50cf8[53]]*Y1**13+
      poly z [%L0x7ffffff50ca0[57],%L0x7ffffff50ca8[57],%L0x7ffffff50cb0[57],
              %L0x7ffffff50cb8[57],%L0x7ffffff50cc0[57],%L0x7ffffff50cc8[57],
              %L0x7ffffff50cd0[57],%L0x7ffffff50cd8[57],%L0x7ffffff50ce0[57],
              %L0x7ffffff50ce8[57],%L0x7ffffff50cf0[57],%L0x7ffffff50cf8[57]]*Y1**14+
      poly z [%L0x7ffffff50ca0[61],%L0x7ffffff50ca8[61],%L0x7ffffff50cb0[61],
              %L0x7ffffff50cb8[61],%L0x7ffffff50cc0[61],%L0x7ffffff50cc8[61],
              %L0x7ffffff50cd0[61],%L0x7ffffff50cd8[61],%L0x7ffffff50ce0[61],
              %L0x7ffffff50ce8[61],%L0x7ffffff50cf0[61],%L0x7ffffff50cf8[61]]*Y1**15 /\
G12 = poly z [%L0x7ffffff50ca0[2],%L0x7ffffff50ca8[2],%L0x7ffffff50cb0[2],
              %L0x7ffffff50cb8[2],%L0x7ffffff50cc0[2],%L0x7ffffff50cc8[2],
              %L0x7ffffff50cd0[2],%L0x7ffffff50cd8[2],%L0x7ffffff50ce0[2],
              %L0x7ffffff50ce8[2],%L0x7ffffff50cf0[2],%L0x7ffffff50cf8[2]]*Y1**0+
      poly z [%L0x7ffffff50ca0[6],%L0x7ffffff50ca8[6],%L0x7ffffff50cb0[6],
              %L0x7ffffff50cb8[6],%L0x7ffffff50cc0[6],%L0x7ffffff50cc8[6],
              %L0x7ffffff50cd0[6],%L0x7ffffff50cd8[6],%L0x7ffffff50ce0[6],
              %L0x7ffffff50ce8[6],%L0x7ffffff50cf0[6],%L0x7ffffff50cf8[6]]*Y1**1+
      poly z [%L0x7ffffff50ca0[10],%L0x7ffffff50ca8[10],%L0x7ffffff50cb0[10],
              %L0x7ffffff50cb8[10],%L0x7ffffff50cc0[10],%L0x7ffffff50cc8[10],
              %L0x7ffffff50cd0[10],%L0x7ffffff50cd8[10],%L0x7ffffff50ce0[10],
              %L0x7ffffff50ce8[10],%L0x7ffffff50cf0[10],%L0x7ffffff50cf8[10]]*Y1**2+
      poly z [%L0x7ffffff50ca0[14],%L0x7ffffff50ca8[14],%L0x7ffffff50cb0[14],
              %L0x7ffffff50cb8[14],%L0x7ffffff50cc0[14],%L0x7ffffff50cc8[14],
              %L0x7ffffff50cd0[14],%L0x7ffffff50cd8[14],%L0x7ffffff50ce0[14],
              %L0x7ffffff50ce8[14],%L0x7ffffff50cf0[14],%L0x7ffffff50cf8[14]]*Y1**3+
      poly z [%L0x7ffffff50ca0[18],%L0x7ffffff50ca8[18],%L0x7ffffff50cb0[18],
              %L0x7ffffff50cb8[18],%L0x7ffffff50cc0[18],%L0x7ffffff50cc8[18],
              %L0x7ffffff50cd0[18],%L0x7ffffff50cd8[18],%L0x7ffffff50ce0[18],
              %L0x7ffffff50ce8[18],%L0x7ffffff50cf0[18],%L0x7ffffff50cf8[18]]*Y1**4+
      poly z [%L0x7ffffff50ca0[22],%L0x7ffffff50ca8[22],%L0x7ffffff50cb0[22],
              %L0x7ffffff50cb8[22],%L0x7ffffff50cc0[22],%L0x7ffffff50cc8[22],
              %L0x7ffffff50cd0[22],%L0x7ffffff50cd8[22],%L0x7ffffff50ce0[22],
              %L0x7ffffff50ce8[22],%L0x7ffffff50cf0[22],%L0x7ffffff50cf8[22]]*Y1**5+
      poly z [%L0x7ffffff50ca0[26],%L0x7ffffff50ca8[26],%L0x7ffffff50cb0[26],
              %L0x7ffffff50cb8[26],%L0x7ffffff50cc0[26],%L0x7ffffff50cc8[26],
              %L0x7ffffff50cd0[26],%L0x7ffffff50cd8[26],%L0x7ffffff50ce0[26],
              %L0x7ffffff50ce8[26],%L0x7ffffff50cf0[26],%L0x7ffffff50cf8[26]]*Y1**6+
      poly z [%L0x7ffffff50ca0[30],%L0x7ffffff50ca8[30],%L0x7ffffff50cb0[30],
              %L0x7ffffff50cb8[30],%L0x7ffffff50cc0[30],%L0x7ffffff50cc8[30],
              %L0x7ffffff50cd0[30],%L0x7ffffff50cd8[30],%L0x7ffffff50ce0[30],
              %L0x7ffffff50ce8[30],%L0x7ffffff50cf0[30],%L0x7ffffff50cf8[30]]*Y1**7+
      poly z [%L0x7ffffff50ca0[34],%L0x7ffffff50ca8[34],%L0x7ffffff50cb0[34],
              %L0x7ffffff50cb8[34],%L0x7ffffff50cc0[34],%L0x7ffffff50cc8[34],
              %L0x7ffffff50cd0[34],%L0x7ffffff50cd8[34],%L0x7ffffff50ce0[34],
              %L0x7ffffff50ce8[34],%L0x7ffffff50cf0[34],%L0x7ffffff50cf8[34]]*Y1**8+
      poly z [%L0x7ffffff50ca0[38],%L0x7ffffff50ca8[38],%L0x7ffffff50cb0[38],
              %L0x7ffffff50cb8[38],%L0x7ffffff50cc0[38],%L0x7ffffff50cc8[38],
              %L0x7ffffff50cd0[38],%L0x7ffffff50cd8[38],%L0x7ffffff50ce0[38],
              %L0x7ffffff50ce8[38],%L0x7ffffff50cf0[38],%L0x7ffffff50cf8[38]]*Y1**9+
      poly z [%L0x7ffffff50ca0[42],%L0x7ffffff50ca8[42],%L0x7ffffff50cb0[42],
              %L0x7ffffff50cb8[42],%L0x7ffffff50cc0[42],%L0x7ffffff50cc8[42],
              %L0x7ffffff50cd0[42],%L0x7ffffff50cd8[42],%L0x7ffffff50ce0[42],
              %L0x7ffffff50ce8[42],%L0x7ffffff50cf0[42],%L0x7ffffff50cf8[42]]*Y1**10+
      poly z [%L0x7ffffff50ca0[46],%L0x7ffffff50ca8[46],%L0x7ffffff50cb0[46],
              %L0x7ffffff50cb8[46],%L0x7ffffff50cc0[46],%L0x7ffffff50cc8[46],
              %L0x7ffffff50cd0[46],%L0x7ffffff50cd8[46],%L0x7ffffff50ce0[46],
              %L0x7ffffff50ce8[46],%L0x7ffffff50cf0[46],%L0x7ffffff50cf8[46]]*Y1**11+
      poly z [%L0x7ffffff50ca0[50],%L0x7ffffff50ca8[50],%L0x7ffffff50cb0[50],
              %L0x7ffffff50cb8[50],%L0x7ffffff50cc0[50],%L0x7ffffff50cc8[50],
              %L0x7ffffff50cd0[50],%L0x7ffffff50cd8[50],%L0x7ffffff50ce0[50],
              %L0x7ffffff50ce8[50],%L0x7ffffff50cf0[50],%L0x7ffffff50cf8[50]]*Y1**12+
      poly z [%L0x7ffffff50ca0[54],%L0x7ffffff50ca8[54],%L0x7ffffff50cb0[54],
              %L0x7ffffff50cb8[54],%L0x7ffffff50cc0[54],%L0x7ffffff50cc8[54],
              %L0x7ffffff50cd0[54],%L0x7ffffff50cd8[54],%L0x7ffffff50ce0[54],
              %L0x7ffffff50ce8[54],%L0x7ffffff50cf0[54],%L0x7ffffff50cf8[54]]*Y1**13+
      poly z [%L0x7ffffff50ca0[58],%L0x7ffffff50ca8[58],%L0x7ffffff50cb0[58],
              %L0x7ffffff50cb8[58],%L0x7ffffff50cc0[58],%L0x7ffffff50cc8[58],
              %L0x7ffffff50cd0[58],%L0x7ffffff50cd8[58],%L0x7ffffff50ce0[58],
              %L0x7ffffff50ce8[58],%L0x7ffffff50cf0[58],%L0x7ffffff50cf8[58]]*Y1**14+
      poly z [%L0x7ffffff50ca0[62],%L0x7ffffff50ca8[62],%L0x7ffffff50cb0[62],
              %L0x7ffffff50cb8[62],%L0x7ffffff50cc0[62],%L0x7ffffff50cc8[62],
              %L0x7ffffff50cd0[62],%L0x7ffffff50cd8[62],%L0x7ffffff50ce0[62],
              %L0x7ffffff50ce8[62],%L0x7ffffff50cf0[62],%L0x7ffffff50cf8[62]]*Y1**15
  /\
G13 = poly z [%L0x7ffffff50ca0[3],%L0x7ffffff50ca8[3],%L0x7ffffff50cb0[3],
              %L0x7ffffff50cb8[3],%L0x7ffffff50cc0[3],%L0x7ffffff50cc8[3],
              %L0x7ffffff50cd0[3],%L0x7ffffff50cd8[3],%L0x7ffffff50ce0[3],
              %L0x7ffffff50ce8[3],%L0x7ffffff50cf0[3],%L0x7ffffff50cf8[3]]*Y1**0+
      poly z [%L0x7ffffff50ca0[7],%L0x7ffffff50ca8[7],%L0x7ffffff50cb0[7],
              %L0x7ffffff50cb8[7],%L0x7ffffff50cc0[7],%L0x7ffffff50cc8[7],
              %L0x7ffffff50cd0[7],%L0x7ffffff50cd8[7],%L0x7ffffff50ce0[7],
              %L0x7ffffff50ce8[7],%L0x7ffffff50cf0[7],%L0x7ffffff50cf8[7]]*Y1**1+
      poly z [%L0x7ffffff50ca0[11],%L0x7ffffff50ca8[11],%L0x7ffffff50cb0[11],
              %L0x7ffffff50cb8[11],%L0x7ffffff50cc0[11],%L0x7ffffff50cc8[11],
              %L0x7ffffff50cd0[11],%L0x7ffffff50cd8[11],%L0x7ffffff50ce0[11],
              %L0x7ffffff50ce8[11],%L0x7ffffff50cf0[11],%L0x7ffffff50cf8[11]]*Y1**2+
      poly z [%L0x7ffffff50ca0[15],%L0x7ffffff50ca8[15],%L0x7ffffff50cb0[15],
              %L0x7ffffff50cb8[15],%L0x7ffffff50cc0[15],%L0x7ffffff50cc8[15],
              %L0x7ffffff50cd0[15],%L0x7ffffff50cd8[15],%L0x7ffffff50ce0[15],
              %L0x7ffffff50ce8[15],%L0x7ffffff50cf0[15],%L0x7ffffff50cf8[15]]*Y1**3+
      poly z [%L0x7ffffff50ca0[19],%L0x7ffffff50ca8[19],%L0x7ffffff50cb0[19],
              %L0x7ffffff50cb8[19],%L0x7ffffff50cc0[19],%L0x7ffffff50cc8[19],
              %L0x7ffffff50cd0[19],%L0x7ffffff50cd8[19],%L0x7ffffff50ce0[19],
              %L0x7ffffff50ce8[19],%L0x7ffffff50cf0[19],%L0x7ffffff50cf8[19]]*Y1**4+
      poly z [%L0x7ffffff50ca0[23],%L0x7ffffff50ca8[23],%L0x7ffffff50cb0[23],
              %L0x7ffffff50cb8[23],%L0x7ffffff50cc0[23],%L0x7ffffff50cc8[23],
              %L0x7ffffff50cd0[23],%L0x7ffffff50cd8[23],%L0x7ffffff50ce0[23],
              %L0x7ffffff50ce8[23],%L0x7ffffff50cf0[23],%L0x7ffffff50cf8[23]]*Y1**5+
      poly z [%L0x7ffffff50ca0[27],%L0x7ffffff50ca8[27],%L0x7ffffff50cb0[27],
              %L0x7ffffff50cb8[27],%L0x7ffffff50cc0[27],%L0x7ffffff50cc8[27],
              %L0x7ffffff50cd0[27],%L0x7ffffff50cd8[27],%L0x7ffffff50ce0[27],
              %L0x7ffffff50ce8[27],%L0x7ffffff50cf0[27],%L0x7ffffff50cf8[27]]*Y1**6+
      poly z [%L0x7ffffff50ca0[31],%L0x7ffffff50ca8[31],%L0x7ffffff50cb0[31],
              %L0x7ffffff50cb8[31],%L0x7ffffff50cc0[31],%L0x7ffffff50cc8[31],
              %L0x7ffffff50cd0[31],%L0x7ffffff50cd8[31],%L0x7ffffff50ce0[31],
              %L0x7ffffff50ce8[31],%L0x7ffffff50cf0[31],%L0x7ffffff50cf8[31]]*Y1**7+
      poly z [%L0x7ffffff50ca0[35],%L0x7ffffff50ca8[35],%L0x7ffffff50cb0[35],
              %L0x7ffffff50cb8[35],%L0x7ffffff50cc0[35],%L0x7ffffff50cc8[35],
              %L0x7ffffff50cd0[35],%L0x7ffffff50cd8[35],%L0x7ffffff50ce0[35],
              %L0x7ffffff50ce8[35],%L0x7ffffff50cf0[35],%L0x7ffffff50cf8[35]]*Y1**8+
      poly z [%L0x7ffffff50ca0[39],%L0x7ffffff50ca8[39],%L0x7ffffff50cb0[39],
              %L0x7ffffff50cb8[39],%L0x7ffffff50cc0[39],%L0x7ffffff50cc8[39],
              %L0x7ffffff50cd0[39],%L0x7ffffff50cd8[39],%L0x7ffffff50ce0[39],
              %L0x7ffffff50ce8[39],%L0x7ffffff50cf0[39],%L0x7ffffff50cf8[39]]*Y1**9+
      poly z [%L0x7ffffff50ca0[43],%L0x7ffffff50ca8[43],%L0x7ffffff50cb0[43],
              %L0x7ffffff50cb8[43],%L0x7ffffff50cc0[43],%L0x7ffffff50cc8[43],
              %L0x7ffffff50cd0[43],%L0x7ffffff50cd8[43],%L0x7ffffff50ce0[43],
              %L0x7ffffff50ce8[43],%L0x7ffffff50cf0[43],%L0x7ffffff50cf8[43]]*Y1**10+
      poly z [%L0x7ffffff50ca0[47],%L0x7ffffff50ca8[47],%L0x7ffffff50cb0[47],
              %L0x7ffffff50cb8[47],%L0x7ffffff50cc0[47],%L0x7ffffff50cc8[47],
              %L0x7ffffff50cd0[47],%L0x7ffffff50cd8[47],%L0x7ffffff50ce0[47],
              %L0x7ffffff50ce8[47],%L0x7ffffff50cf0[47],%L0x7ffffff50cf8[47]]*Y1**11+
      poly z [%L0x7ffffff50ca0[51],%L0x7ffffff50ca8[51],%L0x7ffffff50cb0[51],
              %L0x7ffffff50cb8[51],%L0x7ffffff50cc0[51],%L0x7ffffff50cc8[51],
              %L0x7ffffff50cd0[51],%L0x7ffffff50cd8[51],%L0x7ffffff50ce0[51],
              %L0x7ffffff50ce8[51],%L0x7ffffff50cf0[51],%L0x7ffffff50cf8[51]]*Y1**12+
      poly z [%L0x7ffffff50ca0[55],%L0x7ffffff50ca8[55],%L0x7ffffff50cb0[55],
              %L0x7ffffff50cb8[55],%L0x7ffffff50cc0[55],%L0x7ffffff50cc8[55],
              %L0x7ffffff50cd0[55],%L0x7ffffff50cd8[55],%L0x7ffffff50ce0[55],
              %L0x7ffffff50ce8[55],%L0x7ffffff50cf0[55],%L0x7ffffff50cf8[55]]*Y1**13+
      poly z [%L0x7ffffff50ca0[59],%L0x7ffffff50ca8[59],%L0x7ffffff50cb0[59],
              %L0x7ffffff50cb8[59],%L0x7ffffff50cc0[59],%L0x7ffffff50cc8[59],
              %L0x7ffffff50cd0[59],%L0x7ffffff50cd8[59],%L0x7ffffff50ce0[59],
              %L0x7ffffff50ce8[59],%L0x7ffffff50cf0[59],%L0x7ffffff50cf8[59]]*Y1**14+
      poly z [%L0x7ffffff50ca0[63],%L0x7ffffff50ca8[63],%L0x7ffffff50cb0[63],
              %L0x7ffffff50cb8[63],%L0x7ffffff50cc0[63],%L0x7ffffff50cc8[63],
              %L0x7ffffff50cd0[63],%L0x7ffffff50cd8[63],%L0x7ffffff50ce0[63],
              %L0x7ffffff50ce8[63],%L0x7ffffff50cf0[63],%L0x7ffffff50cf8[63]]*Y1**15
 && true;


(* mov    0x10(%rsp),%rcx                          #! EA = L0x7ffffff50990; Value = 0x0000000000000001; PC = 0x555555582d7a *)
mov %rcx %L0x7ffffff50990;
(* add    $0x1,%rcx                                #! PC = 0x555555582d7f *)
(* add $0x1, rcx *)
nop;
(* cmp    $0x5,%rcx                                #! PC = 0x555555582d83 *)
(* cmp 0x5, rcx *)
nop;
(* #jne    0x555555582c60 <radix_conversions+352>  #! PC = 0x555555582d87 *)
#jne    0x555555582c60 <radix_conversions+352>  #! 0x555555582d87 = 0x555555582d87;
(* mov    %rcx,0x10(%rsp)                          #! EA = L0x7ffffff50990; PC = 0x555555582c60 *)
mov %L0x7ffffff50990 %rcx;
(* mov    0x18(%rsp),%rdx                          #! EA = L0x7ffffff50998; Value = 0x00007ffffff50ca0; PC = 0x555555582c65 *)
mov %rdx %L0x7ffffff50998;
(* mov    %ecx,%esi                                #! PC = 0x555555582c6a *)
(* mov ecx, esi *)
nop;
(* movabs $0xf000f000f000f00,%r8                   #! PC = 0x555555582c6c *)
cast %r8@bit[64] [0xf000f000f000f00@uint64];
(* movabs $0xf000f000f000f0,%rdi                   #! PC = 0x555555582c76 *)
cast %rdi@bit[64] [0xf000f000f000f0@uint64];
(* movabs $0x3030303030303030,%r10                 #! PC = 0x555555582c80 *)
cast %r10@bit[64] [0x3030303030303030@uint64];
(* movabs $0xc0c0c0c0c0c0c0c,%r9                   #! PC = 0x555555582c8a *)
cast %r9@bit[64] [0xc0c0c0c0c0c0c0c@uint64];
(* movabs $0x4444444444444444,%r15                 #! PC = 0x555555582c94 *)
cast %r15@bit[64] [0x4444444444444444@uint64];
(* movabs $0x2222222222222222,%r11                 #! PC = 0x555555582c9e *)
cast %r11@bit[64] [0x2222222222222222@uint64];
(* nopl   0x0(%rax,%rax,1)                         #! EA = L0x-88b9860201eae4ea; PC = 0x555555582ca8 *)
(* nopl *)
nop;
(* mov    (%rdx),%rax                              #! EA = L0x7ffffff50ca0; Value = 0x895337672f6b3f18; PC = 0x555555582cb0 *)
mov %rax %L0x7ffffff50ca0;
(* mov    %rax,%rcx                                #! PC = 0x555555582cb3 *)
mov %rcx %rax;
(* shr    $0x10,%rcx                               #! PC = 0x555555582cb6 *)
mov %rcx
    [%rcx[16],%rcx[17],%rcx[18],%rcx[19],%rcx[20],%rcx[21],%rcx[22],%rcx[23],
     %rcx[24],%rcx[25],%rcx[26],%rcx[27],%rcx[28],%rcx[29],%rcx[30],%rcx[31],
     %rcx[32],%rcx[33],%rcx[34],%rcx[35],%rcx[36],%rcx[37],%rcx[38],%rcx[39],
     %rcx[40],%rcx[41],%rcx[42],%rcx[43],%rcx[44],%rcx[45],%rcx[46],%rcx[47],
     %rcx[48],%rcx[49],%rcx[50],%rcx[51],%rcx[52],%rcx[53],%rcx[54],%rcx[55],
     %rcx[56],%rcx[57],%rcx[58],%rcx[59],%rcx[60],%rcx[61],%rcx[62],%rcx[63],
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit];
(* and    %rbx,%rcx                                #! PC = 0x555555582cba *)
mov %rcx
    [0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     %rcx[32],%rcx[33],%rcx[34],%rcx[35],%rcx[36],%rcx[37],%rcx[38],%rcx[39],
     %rcx[40],%rcx[41],%rcx[42],%rcx[43],%rcx[44],%rcx[45],%rcx[46],%rcx[47],
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit];
(* xor    %rax,%rcx                                #! PC = 0x555555582cbd *)
adds %dc %rcx %rax %rcx;
(* mov    %rcx,%rax                                #! PC = 0x555555582cc0 *)
mov %rax %rcx;
(* shr    $0x10,%rax                               #! PC = 0x555555582cc3 *)
mov %rax
    [%rax[16],%rax[17],%rax[18],%rax[19],%rax[20],%rax[21],%rax[22],%rax[23],
     %rax[24],%rax[25],%rax[26],%rax[27],%rax[28],%rax[29],%rax[30],%rax[31],
     %rax[32],%rax[33],%rax[34],%rax[35],%rax[36],%rax[37],%rax[38],%rax[39],
     %rax[40],%rax[41],%rax[42],%rax[43],%rax[44],%rax[45],%rax[46],%rax[47],
     %rax[48],%rax[49],%rax[50],%rax[51],%rax[52],%rax[53],%rax[54],%rax[55],
     %rax[56],%rax[57],%rax[58],%rax[59],%rax[60],%rax[61],%rax[62],%rax[63],
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit];
(* and    $0xffff0000,%eax                         #! PC = 0x555555582cc7 *)
mov %rax
    [0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     %rax[16],%rax[17],%rax[18],%rax[19],%rax[20],%rax[21],%rax[22],%rax[23],
     %rax[24],%rax[25],%rax[26],%rax[27],%rax[28],%rax[29],%rax[30],%rax[31],
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit];
(* xor    %rcx,%rax                                #! PC = 0x555555582ccc *)
adds %dc %rax %rcx %rax;
(* cmp    $0x4,%esi                                #! PC = 0x555555582ccf *)
(* cmp 0x4, esi *)
nop;
(* #je     0x555555582d48 <radix_conversions+584>  #! PC = 0x555555582cd2 *)
#je     0x555555582d48 <radix_conversions+584>  #! 0x555555582cd2 = 0x555555582cd2;
(* mov    %rax,%rcx                                #! PC = 0x555555582cd4 *)
mov %rcx %rax;
(* shr    $0x8,%rcx                                #! PC = 0x555555582cd7 *)
mov %rcx
    [%rcx[8],%rcx[9],%rcx[10],%rcx[11],%rcx[12],%rcx[13],%rcx[14],%rcx[15],
     %rcx[16],%rcx[17],%rcx[18],%rcx[19],%rcx[20],%rcx[21],%rcx[22],%rcx[23],
     %rcx[24],%rcx[25],%rcx[26],%rcx[27],%rcx[28],%rcx[29],%rcx[30],%rcx[31],
     %rcx[32],%rcx[33],%rcx[34],%rcx[35],%rcx[36],%rcx[37],%rcx[38],%rcx[39],
     %rcx[40],%rcx[41],%rcx[42],%rcx[43],%rcx[44],%rcx[45],%rcx[46],%rcx[47],
     %rcx[48],%rcx[49],%rcx[50],%rcx[51],%rcx[52],%rcx[53],%rcx[54],%rcx[55],
     %rcx[56],%rcx[57],%rcx[58],%rcx[59],%rcx[60],%rcx[61],%rcx[62],%rcx[63],
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit];
(* and    %r14,%rcx                                #! PC = 0x555555582cdb *)
mov %rcx
    [0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     %rcx[16],%rcx[17],%rcx[18],%rcx[19],%rcx[20],%rcx[21],%rcx[22],%rcx[23],
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     %rcx[48],%rcx[49],%rcx[50],%rcx[51],%rcx[52],%rcx[53],%rcx[54],%rcx[55],
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit];
(* xor    %rax,%rcx                                #! PC = 0x555555582cde *)
adds %dc %rcx %rax %rcx;
(* mov    %rcx,%rax                                #! PC = 0x555555582ce1 *)
mov %rax %rcx;
(* shr    $0x8,%rax                                #! PC = 0x555555582ce4 *)
mov %rax
    [%rax[8],%rax[9],%rax[10],%rax[11],%rax[12],%rax[13],%rax[14],%rax[15],
     %rax[16],%rax[17],%rax[18],%rax[19],%rax[20],%rax[21],%rax[22],%rax[23],
     %rax[24],%rax[25],%rax[26],%rax[27],%rax[28],%rax[29],%rax[30],%rax[31],
     %rax[32],%rax[33],%rax[34],%rax[35],%rax[36],%rax[37],%rax[38],%rax[39],
     %rax[40],%rax[41],%rax[42],%rax[43],%rax[44],%rax[45],%rax[46],%rax[47],
     %rax[48],%rax[49],%rax[50],%rax[51],%rax[52],%rax[53],%rax[54],%rax[55],
     %rax[56],%rax[57],%rax[58],%rax[59],%rax[60],%rax[61],%rax[62],%rax[63],
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit];
(* and    %r13,%rax                                #! PC = 0x555555582ce8 *)
mov %rax
    [0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     %rax[8],%rax[9],%rax[10],%rax[11],%rax[12],%rax[13],%rax[14],%rax[15],
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     %rax[40],%rax[41],%rax[42],%rax[43],%rax[44],%rax[45],%rax[46],%rax[47],
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit];
(* xor    %rcx,%rax                                #! PC = 0x555555582ceb *)
adds %dc %rax %rcx %rax;
(* cmp    $0x3,%esi                                #! PC = 0x555555582cee *)
(* cmp 0x3, esi *)
nop;
(* #je     0x555555582d48 <radix_conversions+584>  #! PC = 0x555555582cf1 *)
#je     0x555555582d48 <radix_conversions+584>  #! 0x555555582cf1 = 0x555555582cf1;
(* mov    %rax,%rcx                                #! PC = 0x555555582cf3 *)
mov %rcx %rax;
(* shr    $0x4,%rcx                                #! PC = 0x555555582cf6 *)
mov %rcx
    [%rcx[4],%rcx[5],%rcx[6],%rcx[7],
     %rcx[8],%rcx[9],%rcx[10],%rcx[11],%rcx[12],%rcx[13],%rcx[14],%rcx[15],
     %rcx[16],%rcx[17],%rcx[18],%rcx[19],%rcx[20],%rcx[21],%rcx[22],%rcx[23],
     %rcx[24],%rcx[25],%rcx[26],%rcx[27],%rcx[28],%rcx[29],%rcx[30],%rcx[31],
     %rcx[32],%rcx[33],%rcx[34],%rcx[35],%rcx[36],%rcx[37],%rcx[38],%rcx[39],
     %rcx[40],%rcx[41],%rcx[42],%rcx[43],%rcx[44],%rcx[45],%rcx[46],%rcx[47],
     %rcx[48],%rcx[49],%rcx[50],%rcx[51],%rcx[52],%rcx[53],%rcx[54],%rcx[55],
     %rcx[56],%rcx[57],%rcx[58],%rcx[59],%rcx[60],%rcx[61],%rcx[62],%rcx[63],
     0@bit,0@bit,0@bit,0@bit];
(* and    %r8,%rcx                                 #! PC = 0x555555582cfa *)
mov %rcx
    [0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     %rcx[8],%rcx[9],%rcx[10],%rcx[11],0@bit,0@bit,0@bit,0@bit,
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     %rcx[24],%rcx[25],%rcx[26],%rcx[27],0@bit,0@bit,0@bit,0@bit,
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     %rcx[40],%rcx[41],%rcx[42],%rcx[43],0@bit,0@bit,0@bit,0@bit,
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     %rcx[56],%rcx[57],%rcx[58],%rcx[59],0@bit,0@bit,0@bit,0@bit];
(* xor    %rax,%rcx                                #! PC = 0x555555582cfd *)
adds %dc %rcx %rax %rcx;
(* mov    %rcx,%rax                                #! PC = 0x555555582d00 *)
mov %rax %rcx;
(* shr    $0x4,%rax                                #! PC = 0x555555582d03 *)
mov %rax
    [%rax[4],%rax[5],%rax[6],%rax[7],
     %rax[8],%rax[9],%rax[10],%rax[11],%rax[12],%rax[13],%rax[14],%rax[15],
     %rax[16],%rax[17],%rax[18],%rax[19],%rax[20],%rax[21],%rax[22],%rax[23],
     %rax[24],%rax[25],%rax[26],%rax[27],%rax[28],%rax[29],%rax[30],%rax[31],
     %rax[32],%rax[33],%rax[34],%rax[35],%rax[36],%rax[37],%rax[38],%rax[39],
     %rax[40],%rax[41],%rax[42],%rax[43],%rax[44],%rax[45],%rax[46],%rax[47],
     %rax[48],%rax[49],%rax[50],%rax[51],%rax[52],%rax[53],%rax[54],%rax[55],
     %rax[56],%rax[57],%rax[58],%rax[59],%rax[60],%rax[61],%rax[62],%rax[63],
     0@bit,0@bit,0@bit,0@bit];
(* and    %rdi,%rax                                #! PC = 0x555555582d07 *)
mov %rax
    [0@bit,0@bit,0@bit,0@bit,%rax[4],%rax[5],%rax[6],%rax[7],
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     0@bit,0@bit,0@bit,0@bit,%rax[20],%rax[21],%rax[22],%rax[23],
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     0@bit,0@bit,0@bit,0@bit,%rax[36],%rax[37],%rax[38],%rax[39],
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     0@bit,0@bit,0@bit,0@bit,%rax[52],%rax[53],%rax[54],%rax[55],
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit];
(* xor    %rcx,%rax                                #! PC = 0x555555582d0a *)
adds %dc %rax %rcx %rax;
(* cmp    $0x2,%esi                                #! PC = 0x555555582d0d *)
(* cmp 0x2, esi *)
nop;
(* #je     0x555555582d48 <radix_conversions+584>  #! PC = 0x555555582d10 *)
#je     0x555555582d48 <radix_conversions+584>  #! 0x555555582d10 = 0x555555582d10;
(* mov    %rax,(%rdx)                              #! EA = L0x7ffffff50ca0; PC = 0x555555582d48 *)
mov %L0x7ffffff50ca0 %rax;
(* add    $0x8,%rdx                                #! PC = 0x555555582d4b *)
(* add $0x8, rdx *)
nop;
(* cmp    %rdx,%r12                                #! PC = 0x555555582d4f *)
(* cmp rdx, r12 *)
nop;
(* #jne    0x555555582cb0 <radix_conversions+432>  #! PC = 0x555555582d52 *)
#jne    0x555555582cb0 <radix_conversions+432>  #! 0x555555582d52 = 0x555555582d52;
(* mov    (%rdx),%rax                              #! EA = L0x7ffffff50ca8; Value = 0x5aaa59105fc5b560; PC = 0x555555582cb0 *)
mov %rax %L0x7ffffff50ca8;
(* mov    %rax,%rcx                                #! PC = 0x555555582cb3 *)
mov %rcx %rax;
(* shr    $0x10,%rcx                               #! PC = 0x555555582cb6 *)
mov %rcx
    [%rcx[16],%rcx[17],%rcx[18],%rcx[19],%rcx[20],%rcx[21],%rcx[22],%rcx[23],
     %rcx[24],%rcx[25],%rcx[26],%rcx[27],%rcx[28],%rcx[29],%rcx[30],%rcx[31],
     %rcx[32],%rcx[33],%rcx[34],%rcx[35],%rcx[36],%rcx[37],%rcx[38],%rcx[39],
     %rcx[40],%rcx[41],%rcx[42],%rcx[43],%rcx[44],%rcx[45],%rcx[46],%rcx[47],
     %rcx[48],%rcx[49],%rcx[50],%rcx[51],%rcx[52],%rcx[53],%rcx[54],%rcx[55],
     %rcx[56],%rcx[57],%rcx[58],%rcx[59],%rcx[60],%rcx[61],%rcx[62],%rcx[63],
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit];
(* and    %rbx,%rcx                                #! PC = 0x555555582cba *)
mov %rcx
    [0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     %rcx[32],%rcx[33],%rcx[34],%rcx[35],%rcx[36],%rcx[37],%rcx[38],%rcx[39],
     %rcx[40],%rcx[41],%rcx[42],%rcx[43],%rcx[44],%rcx[45],%rcx[46],%rcx[47],
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit];
(* xor    %rax,%rcx                                #! PC = 0x555555582cbd *)
adds %dc %rcx %rax %rcx;
(* mov    %rcx,%rax                                #! PC = 0x555555582cc0 *)
mov %rax %rcx;
(* shr    $0x10,%rax                               #! PC = 0x555555582cc3 *)
mov %rax
    [%rax[16],%rax[17],%rax[18],%rax[19],%rax[20],%rax[21],%rax[22],%rax[23],
     %rax[24],%rax[25],%rax[26],%rax[27],%rax[28],%rax[29],%rax[30],%rax[31],
     %rax[32],%rax[33],%rax[34],%rax[35],%rax[36],%rax[37],%rax[38],%rax[39],
     %rax[40],%rax[41],%rax[42],%rax[43],%rax[44],%rax[45],%rax[46],%rax[47],
     %rax[48],%rax[49],%rax[50],%rax[51],%rax[52],%rax[53],%rax[54],%rax[55],
     %rax[56],%rax[57],%rax[58],%rax[59],%rax[60],%rax[61],%rax[62],%rax[63],
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit];
(* and    $0xffff0000,%eax                         #! PC = 0x555555582cc7 *)
mov %rax
    [0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     %rax[16],%rax[17],%rax[18],%rax[19],%rax[20],%rax[21],%rax[22],%rax[23],
     %rax[24],%rax[25],%rax[26],%rax[27],%rax[28],%rax[29],%rax[30],%rax[31],
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit];
(* xor    %rcx,%rax                                #! PC = 0x555555582ccc *)
adds %dc %rax %rcx %rax;
(* cmp    $0x4,%esi                                #! PC = 0x555555582ccf *)
(* cmp 0x4, esi *)
nop;
(* #je     0x555555582d48 <radix_conversions+584>  #! PC = 0x555555582cd2 *)
#je     0x555555582d48 <radix_conversions+584>  #! 0x555555582cd2 = 0x555555582cd2;
(* mov    %rax,%rcx                                #! PC = 0x555555582cd4 *)
mov %rcx %rax;
(* shr    $0x8,%rcx                                #! PC = 0x555555582cd7 *)
mov %rcx
    [%rcx[8],%rcx[9],%rcx[10],%rcx[11],%rcx[12],%rcx[13],%rcx[14],%rcx[15],
     %rcx[16],%rcx[17],%rcx[18],%rcx[19],%rcx[20],%rcx[21],%rcx[22],%rcx[23],
     %rcx[24],%rcx[25],%rcx[26],%rcx[27],%rcx[28],%rcx[29],%rcx[30],%rcx[31],
     %rcx[32],%rcx[33],%rcx[34],%rcx[35],%rcx[36],%rcx[37],%rcx[38],%rcx[39],
     %rcx[40],%rcx[41],%rcx[42],%rcx[43],%rcx[44],%rcx[45],%rcx[46],%rcx[47],
     %rcx[48],%rcx[49],%rcx[50],%rcx[51],%rcx[52],%rcx[53],%rcx[54],%rcx[55],
     %rcx[56],%rcx[57],%rcx[58],%rcx[59],%rcx[60],%rcx[61],%rcx[62],%rcx[63],
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit];
(* and    %r14,%rcx                                #! PC = 0x555555582cdb *)
mov %rcx
    [0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     %rcx[16],%rcx[17],%rcx[18],%rcx[19],%rcx[20],%rcx[21],%rcx[22],%rcx[23],
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     %rcx[48],%rcx[49],%rcx[50],%rcx[51],%rcx[52],%rcx[53],%rcx[54],%rcx[55],
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit];
(* xor    %rax,%rcx                                #! PC = 0x555555582cde *)
adds %dc %rcx %rax %rcx;
(* mov    %rcx,%rax                                #! PC = 0x555555582ce1 *)
mov %rax %rcx;
(* shr    $0x8,%rax                                #! PC = 0x555555582ce4 *)
mov %rax
    [%rax[8],%rax[9],%rax[10],%rax[11],%rax[12],%rax[13],%rax[14],%rax[15],
     %rax[16],%rax[17],%rax[18],%rax[19],%rax[20],%rax[21],%rax[22],%rax[23],
     %rax[24],%rax[25],%rax[26],%rax[27],%rax[28],%rax[29],%rax[30],%rax[31],
     %rax[32],%rax[33],%rax[34],%rax[35],%rax[36],%rax[37],%rax[38],%rax[39],
     %rax[40],%rax[41],%rax[42],%rax[43],%rax[44],%rax[45],%rax[46],%rax[47],
     %rax[48],%rax[49],%rax[50],%rax[51],%rax[52],%rax[53],%rax[54],%rax[55],
     %rax[56],%rax[57],%rax[58],%rax[59],%rax[60],%rax[61],%rax[62],%rax[63],
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit];
(* and    %r13,%rax                                #! PC = 0x555555582ce8 *)
mov %rax
    [0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     %rax[8],%rax[9],%rax[10],%rax[11],%rax[12],%rax[13],%rax[14],%rax[15],
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     %rax[40],%rax[41],%rax[42],%rax[43],%rax[44],%rax[45],%rax[46],%rax[47],
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit];
(* xor    %rcx,%rax                                #! PC = 0x555555582ceb *)
adds %dc %rax %rcx %rax;
(* cmp    $0x3,%esi                                #! PC = 0x555555582cee *)
(* cmp 0x3, esi *)
nop;
(* #je     0x555555582d48 <radix_conversions+584>  #! PC = 0x555555582cf1 *)
#je     0x555555582d48 <radix_conversions+584>  #! 0x555555582cf1 = 0x555555582cf1;
(* mov    %rax,%rcx                                #! PC = 0x555555582cf3 *)
mov %rcx %rax;
(* shr    $0x4,%rcx                                #! PC = 0x555555582cf6 *)
mov %rcx
    [%rcx[4],%rcx[5],%rcx[6],%rcx[7],
     %rcx[8],%rcx[9],%rcx[10],%rcx[11],%rcx[12],%rcx[13],%rcx[14],%rcx[15],
     %rcx[16],%rcx[17],%rcx[18],%rcx[19],%rcx[20],%rcx[21],%rcx[22],%rcx[23],
     %rcx[24],%rcx[25],%rcx[26],%rcx[27],%rcx[28],%rcx[29],%rcx[30],%rcx[31],
     %rcx[32],%rcx[33],%rcx[34],%rcx[35],%rcx[36],%rcx[37],%rcx[38],%rcx[39],
     %rcx[40],%rcx[41],%rcx[42],%rcx[43],%rcx[44],%rcx[45],%rcx[46],%rcx[47],
     %rcx[48],%rcx[49],%rcx[50],%rcx[51],%rcx[52],%rcx[53],%rcx[54],%rcx[55],
     %rcx[56],%rcx[57],%rcx[58],%rcx[59],%rcx[60],%rcx[61],%rcx[62],%rcx[63],
     0@bit,0@bit,0@bit,0@bit];
(* and    %r8,%rcx                                 #! PC = 0x555555582cfa *)
mov %rcx
    [0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     %rcx[8],%rcx[9],%rcx[10],%rcx[11],0@bit,0@bit,0@bit,0@bit,
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     %rcx[24],%rcx[25],%rcx[26],%rcx[27],0@bit,0@bit,0@bit,0@bit,
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     %rcx[40],%rcx[41],%rcx[42],%rcx[43],0@bit,0@bit,0@bit,0@bit,
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     %rcx[56],%rcx[57],%rcx[58],%rcx[59],0@bit,0@bit,0@bit,0@bit];
(* xor    %rax,%rcx                                #! PC = 0x555555582cfd *)
adds %dc %rcx %rax %rcx;
(* mov    %rcx,%rax                                #! PC = 0x555555582d00 *)
mov %rax %rcx;
(* shr    $0x4,%rax                                #! PC = 0x555555582d03 *)
mov %rax
    [%rax[4],%rax[5],%rax[6],%rax[7],
     %rax[8],%rax[9],%rax[10],%rax[11],%rax[12],%rax[13],%rax[14],%rax[15],
     %rax[16],%rax[17],%rax[18],%rax[19],%rax[20],%rax[21],%rax[22],%rax[23],
     %rax[24],%rax[25],%rax[26],%rax[27],%rax[28],%rax[29],%rax[30],%rax[31],
     %rax[32],%rax[33],%rax[34],%rax[35],%rax[36],%rax[37],%rax[38],%rax[39],
     %rax[40],%rax[41],%rax[42],%rax[43],%rax[44],%rax[45],%rax[46],%rax[47],
     %rax[48],%rax[49],%rax[50],%rax[51],%rax[52],%rax[53],%rax[54],%rax[55],
     %rax[56],%rax[57],%rax[58],%rax[59],%rax[60],%rax[61],%rax[62],%rax[63],
     0@bit,0@bit,0@bit,0@bit];
(* and    %rdi,%rax                                #! PC = 0x555555582d07 *)
mov %rax
    [0@bit,0@bit,0@bit,0@bit,%rax[4],%rax[5],%rax[6],%rax[7],
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     0@bit,0@bit,0@bit,0@bit,%rax[20],%rax[21],%rax[22],%rax[23],
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     0@bit,0@bit,0@bit,0@bit,%rax[36],%rax[37],%rax[38],%rax[39],
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     0@bit,0@bit,0@bit,0@bit,%rax[52],%rax[53],%rax[54],%rax[55],
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit];
(* xor    %rcx,%rax                                #! PC = 0x555555582d0a *)
adds %dc %rax %rcx %rax;
(* cmp    $0x2,%esi                                #! PC = 0x555555582d0d *)
(* cmp 0x2, esi *)
nop;
(* #je     0x555555582d48 <radix_conversions+584>  #! PC = 0x555555582d10 *)
#je     0x555555582d48 <radix_conversions+584>  #! 0x555555582d10 = 0x555555582d10;
(* mov    %rax,(%rdx)                              #! EA = L0x7ffffff50ca8; PC = 0x555555582d48 *)
mov %L0x7ffffff50ca8 %rax;
(* add    $0x8,%rdx                                #! PC = 0x555555582d4b *)
(* add $0x8, rdx *)
nop;
(* cmp    %rdx,%r12                                #! PC = 0x555555582d4f *)
(* cmp rdx, r12 *)
nop;
(* #jne    0x555555582cb0 <radix_conversions+432>  #! PC = 0x555555582d52 *)
#jne    0x555555582cb0 <radix_conversions+432>  #! 0x555555582d52 = 0x555555582d52;
(* mov    (%rdx),%rax                              #! EA = L0x7ffffff50cb0; Value = 0xf6fe9151f80e21c2; PC = 0x555555582cb0 *)
mov %rax %L0x7ffffff50cb0;
(* mov    %rax,%rcx                                #! PC = 0x555555582cb3 *)
mov %rcx %rax;
(* shr    $0x10,%rcx                               #! PC = 0x555555582cb6 *)
mov %rcx
    [%rcx[16],%rcx[17],%rcx[18],%rcx[19],%rcx[20],%rcx[21],%rcx[22],%rcx[23],
     %rcx[24],%rcx[25],%rcx[26],%rcx[27],%rcx[28],%rcx[29],%rcx[30],%rcx[31],
     %rcx[32],%rcx[33],%rcx[34],%rcx[35],%rcx[36],%rcx[37],%rcx[38],%rcx[39],
     %rcx[40],%rcx[41],%rcx[42],%rcx[43],%rcx[44],%rcx[45],%rcx[46],%rcx[47],
     %rcx[48],%rcx[49],%rcx[50],%rcx[51],%rcx[52],%rcx[53],%rcx[54],%rcx[55],
     %rcx[56],%rcx[57],%rcx[58],%rcx[59],%rcx[60],%rcx[61],%rcx[62],%rcx[63],
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit];
(* and    %rbx,%rcx                                #! PC = 0x555555582cba *)
mov %rcx
    [0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     %rcx[32],%rcx[33],%rcx[34],%rcx[35],%rcx[36],%rcx[37],%rcx[38],%rcx[39],
     %rcx[40],%rcx[41],%rcx[42],%rcx[43],%rcx[44],%rcx[45],%rcx[46],%rcx[47],
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit];
(* xor    %rax,%rcx                                #! PC = 0x555555582cbd *)
adds %dc %rcx %rax %rcx;
(* mov    %rcx,%rax                                #! PC = 0x555555582cc0 *)
mov %rax %rcx;
(* shr    $0x10,%rax                               #! PC = 0x555555582cc3 *)
mov %rax
    [%rax[16],%rax[17],%rax[18],%rax[19],%rax[20],%rax[21],%rax[22],%rax[23],
     %rax[24],%rax[25],%rax[26],%rax[27],%rax[28],%rax[29],%rax[30],%rax[31],
     %rax[32],%rax[33],%rax[34],%rax[35],%rax[36],%rax[37],%rax[38],%rax[39],
     %rax[40],%rax[41],%rax[42],%rax[43],%rax[44],%rax[45],%rax[46],%rax[47],
     %rax[48],%rax[49],%rax[50],%rax[51],%rax[52],%rax[53],%rax[54],%rax[55],
     %rax[56],%rax[57],%rax[58],%rax[59],%rax[60],%rax[61],%rax[62],%rax[63],
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit];
(* and    $0xffff0000,%eax                         #! PC = 0x555555582cc7 *)
mov %rax
    [0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     %rax[16],%rax[17],%rax[18],%rax[19],%rax[20],%rax[21],%rax[22],%rax[23],
     %rax[24],%rax[25],%rax[26],%rax[27],%rax[28],%rax[29],%rax[30],%rax[31],
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit];
(* xor    %rcx,%rax                                #! PC = 0x555555582ccc *)
adds %dc %rax %rcx %rax;
(* cmp    $0x4,%esi                                #! PC = 0x555555582ccf *)
(* cmp 0x4, esi *)
nop;
(* #je     0x555555582d48 <radix_conversions+584>  #! PC = 0x555555582cd2 *)
#je     0x555555582d48 <radix_conversions+584>  #! 0x555555582cd2 = 0x555555582cd2;
(* mov    %rax,%rcx                                #! PC = 0x555555582cd4 *)
mov %rcx %rax;
(* shr    $0x8,%rcx                                #! PC = 0x555555582cd7 *)
mov %rcx
    [%rcx[8],%rcx[9],%rcx[10],%rcx[11],%rcx[12],%rcx[13],%rcx[14],%rcx[15],
     %rcx[16],%rcx[17],%rcx[18],%rcx[19],%rcx[20],%rcx[21],%rcx[22],%rcx[23],
     %rcx[24],%rcx[25],%rcx[26],%rcx[27],%rcx[28],%rcx[29],%rcx[30],%rcx[31],
     %rcx[32],%rcx[33],%rcx[34],%rcx[35],%rcx[36],%rcx[37],%rcx[38],%rcx[39],
     %rcx[40],%rcx[41],%rcx[42],%rcx[43],%rcx[44],%rcx[45],%rcx[46],%rcx[47],
     %rcx[48],%rcx[49],%rcx[50],%rcx[51],%rcx[52],%rcx[53],%rcx[54],%rcx[55],
     %rcx[56],%rcx[57],%rcx[58],%rcx[59],%rcx[60],%rcx[61],%rcx[62],%rcx[63],
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit];
(* and    %r14,%rcx                                #! PC = 0x555555582cdb *)
mov %rcx
    [0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     %rcx[16],%rcx[17],%rcx[18],%rcx[19],%rcx[20],%rcx[21],%rcx[22],%rcx[23],
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     %rcx[48],%rcx[49],%rcx[50],%rcx[51],%rcx[52],%rcx[53],%rcx[54],%rcx[55],
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit];
(* xor    %rax,%rcx                                #! PC = 0x555555582cde *)
adds %dc %rcx %rax %rcx;
(* mov    %rcx,%rax                                #! PC = 0x555555582ce1 *)
mov %rax %rcx;
(* shr    $0x8,%rax                                #! PC = 0x555555582ce4 *)
mov %rax
    [%rax[8],%rax[9],%rax[10],%rax[11],%rax[12],%rax[13],%rax[14],%rax[15],
     %rax[16],%rax[17],%rax[18],%rax[19],%rax[20],%rax[21],%rax[22],%rax[23],
     %rax[24],%rax[25],%rax[26],%rax[27],%rax[28],%rax[29],%rax[30],%rax[31],
     %rax[32],%rax[33],%rax[34],%rax[35],%rax[36],%rax[37],%rax[38],%rax[39],
     %rax[40],%rax[41],%rax[42],%rax[43],%rax[44],%rax[45],%rax[46],%rax[47],
     %rax[48],%rax[49],%rax[50],%rax[51],%rax[52],%rax[53],%rax[54],%rax[55],
     %rax[56],%rax[57],%rax[58],%rax[59],%rax[60],%rax[61],%rax[62],%rax[63],
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit];
(* and    %r13,%rax                                #! PC = 0x555555582ce8 *)
mov %rax
    [0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     %rax[8],%rax[9],%rax[10],%rax[11],%rax[12],%rax[13],%rax[14],%rax[15],
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     %rax[40],%rax[41],%rax[42],%rax[43],%rax[44],%rax[45],%rax[46],%rax[47],
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit];
(* xor    %rcx,%rax                                #! PC = 0x555555582ceb *)
adds %dc %rax %rcx %rax;
(* cmp    $0x3,%esi                                #! PC = 0x555555582cee *)
(* cmp 0x3, esi *)
nop;
(* #je     0x555555582d48 <radix_conversions+584>  #! PC = 0x555555582cf1 *)
#je     0x555555582d48 <radix_conversions+584>  #! 0x555555582cf1 = 0x555555582cf1;
(* mov    %rax,%rcx                                #! PC = 0x555555582cf3 *)
mov %rcx %rax;
(* shr    $0x4,%rcx                                #! PC = 0x555555582cf6 *)
mov %rcx
    [%rcx[4],%rcx[5],%rcx[6],%rcx[7],
     %rcx[8],%rcx[9],%rcx[10],%rcx[11],%rcx[12],%rcx[13],%rcx[14],%rcx[15],
     %rcx[16],%rcx[17],%rcx[18],%rcx[19],%rcx[20],%rcx[21],%rcx[22],%rcx[23],
     %rcx[24],%rcx[25],%rcx[26],%rcx[27],%rcx[28],%rcx[29],%rcx[30],%rcx[31],
     %rcx[32],%rcx[33],%rcx[34],%rcx[35],%rcx[36],%rcx[37],%rcx[38],%rcx[39],
     %rcx[40],%rcx[41],%rcx[42],%rcx[43],%rcx[44],%rcx[45],%rcx[46],%rcx[47],
     %rcx[48],%rcx[49],%rcx[50],%rcx[51],%rcx[52],%rcx[53],%rcx[54],%rcx[55],
     %rcx[56],%rcx[57],%rcx[58],%rcx[59],%rcx[60],%rcx[61],%rcx[62],%rcx[63],
     0@bit,0@bit,0@bit,0@bit];
(* and    %r8,%rcx                                 #! PC = 0x555555582cfa *)
mov %rcx
    [0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     %rcx[8],%rcx[9],%rcx[10],%rcx[11],0@bit,0@bit,0@bit,0@bit,
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     %rcx[24],%rcx[25],%rcx[26],%rcx[27],0@bit,0@bit,0@bit,0@bit,
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     %rcx[40],%rcx[41],%rcx[42],%rcx[43],0@bit,0@bit,0@bit,0@bit,
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     %rcx[56],%rcx[57],%rcx[58],%rcx[59],0@bit,0@bit,0@bit,0@bit];
(* xor    %rax,%rcx                                #! PC = 0x555555582cfd *)
adds %dc %rcx %rax %rcx;
(* mov    %rcx,%rax                                #! PC = 0x555555582d00 *)
mov %rax %rcx;
(* shr    $0x4,%rax                                #! PC = 0x555555582d03 *)
mov %rax
    [%rax[4],%rax[5],%rax[6],%rax[7],
     %rax[8],%rax[9],%rax[10],%rax[11],%rax[12],%rax[13],%rax[14],%rax[15],
     %rax[16],%rax[17],%rax[18],%rax[19],%rax[20],%rax[21],%rax[22],%rax[23],
     %rax[24],%rax[25],%rax[26],%rax[27],%rax[28],%rax[29],%rax[30],%rax[31],
     %rax[32],%rax[33],%rax[34],%rax[35],%rax[36],%rax[37],%rax[38],%rax[39],
     %rax[40],%rax[41],%rax[42],%rax[43],%rax[44],%rax[45],%rax[46],%rax[47],
     %rax[48],%rax[49],%rax[50],%rax[51],%rax[52],%rax[53],%rax[54],%rax[55],
     %rax[56],%rax[57],%rax[58],%rax[59],%rax[60],%rax[61],%rax[62],%rax[63],
     0@bit,0@bit,0@bit,0@bit];
(* and    %rdi,%rax                                #! PC = 0x555555582d07 *)
mov %rax
    [0@bit,0@bit,0@bit,0@bit,%rax[4],%rax[5],%rax[6],%rax[7],
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     0@bit,0@bit,0@bit,0@bit,%rax[20],%rax[21],%rax[22],%rax[23],
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     0@bit,0@bit,0@bit,0@bit,%rax[36],%rax[37],%rax[38],%rax[39],
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     0@bit,0@bit,0@bit,0@bit,%rax[52],%rax[53],%rax[54],%rax[55],
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit];
(* xor    %rcx,%rax                                #! PC = 0x555555582d0a *)
adds %dc %rax %rcx %rax;
(* cmp    $0x2,%esi                                #! PC = 0x555555582d0d *)
(* cmp 0x2, esi *)
nop;
(* #je     0x555555582d48 <radix_conversions+584>  #! PC = 0x555555582d10 *)
#je     0x555555582d48 <radix_conversions+584>  #! 0x555555582d10 = 0x555555582d10;
(* mov    %rax,(%rdx)                              #! EA = L0x7ffffff50cb0; PC = 0x555555582d48 *)
mov %L0x7ffffff50cb0 %rax;
(* add    $0x8,%rdx                                #! PC = 0x555555582d4b *)
(* add $0x8, rdx *)
nop;
(* cmp    %rdx,%r12                                #! PC = 0x555555582d4f *)
(* cmp rdx, r12 *)
nop;
(* #jne    0x555555582cb0 <radix_conversions+432>  #! PC = 0x555555582d52 *)
#jne    0x555555582cb0 <radix_conversions+432>  #! 0x555555582d52 = 0x555555582d52;
(* mov    (%rdx),%rax                              #! EA = L0x7ffffff50cb8; Value = 0xa4971de3f255a535; PC = 0x555555582cb0 *)
mov %rax %L0x7ffffff50cb8;
(* mov    %rax,%rcx                                #! PC = 0x555555582cb3 *)
mov %rcx %rax;
(* shr    $0x10,%rcx                               #! PC = 0x555555582cb6 *)
mov %rcx
    [%rcx[16],%rcx[17],%rcx[18],%rcx[19],%rcx[20],%rcx[21],%rcx[22],%rcx[23],
     %rcx[24],%rcx[25],%rcx[26],%rcx[27],%rcx[28],%rcx[29],%rcx[30],%rcx[31],
     %rcx[32],%rcx[33],%rcx[34],%rcx[35],%rcx[36],%rcx[37],%rcx[38],%rcx[39],
     %rcx[40],%rcx[41],%rcx[42],%rcx[43],%rcx[44],%rcx[45],%rcx[46],%rcx[47],
     %rcx[48],%rcx[49],%rcx[50],%rcx[51],%rcx[52],%rcx[53],%rcx[54],%rcx[55],
     %rcx[56],%rcx[57],%rcx[58],%rcx[59],%rcx[60],%rcx[61],%rcx[62],%rcx[63],
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit];
(* and    %rbx,%rcx                                #! PC = 0x555555582cba *)
mov %rcx
    [0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     %rcx[32],%rcx[33],%rcx[34],%rcx[35],%rcx[36],%rcx[37],%rcx[38],%rcx[39],
     %rcx[40],%rcx[41],%rcx[42],%rcx[43],%rcx[44],%rcx[45],%rcx[46],%rcx[47],
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit];
(* xor    %rax,%rcx                                #! PC = 0x555555582cbd *)
adds %dc %rcx %rax %rcx;
(* mov    %rcx,%rax                                #! PC = 0x555555582cc0 *)
mov %rax %rcx;
(* shr    $0x10,%rax                               #! PC = 0x555555582cc3 *)
mov %rax
    [%rax[16],%rax[17],%rax[18],%rax[19],%rax[20],%rax[21],%rax[22],%rax[23],
     %rax[24],%rax[25],%rax[26],%rax[27],%rax[28],%rax[29],%rax[30],%rax[31],
     %rax[32],%rax[33],%rax[34],%rax[35],%rax[36],%rax[37],%rax[38],%rax[39],
     %rax[40],%rax[41],%rax[42],%rax[43],%rax[44],%rax[45],%rax[46],%rax[47],
     %rax[48],%rax[49],%rax[50],%rax[51],%rax[52],%rax[53],%rax[54],%rax[55],
     %rax[56],%rax[57],%rax[58],%rax[59],%rax[60],%rax[61],%rax[62],%rax[63],
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit];
(* and    $0xffff0000,%eax                         #! PC = 0x555555582cc7 *)
mov %rax
    [0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     %rax[16],%rax[17],%rax[18],%rax[19],%rax[20],%rax[21],%rax[22],%rax[23],
     %rax[24],%rax[25],%rax[26],%rax[27],%rax[28],%rax[29],%rax[30],%rax[31],
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit];
(* xor    %rcx,%rax                                #! PC = 0x555555582ccc *)
adds %dc %rax %rcx %rax;
(* cmp    $0x4,%esi                                #! PC = 0x555555582ccf *)
(* cmp 0x4, esi *)
nop;
(* #je     0x555555582d48 <radix_conversions+584>  #! PC = 0x555555582cd2 *)
#je     0x555555582d48 <radix_conversions+584>  #! 0x555555582cd2 = 0x555555582cd2;
(* mov    %rax,%rcx                                #! PC = 0x555555582cd4 *)
mov %rcx %rax;
(* shr    $0x8,%rcx                                #! PC = 0x555555582cd7 *)
mov %rcx
    [%rcx[8],%rcx[9],%rcx[10],%rcx[11],%rcx[12],%rcx[13],%rcx[14],%rcx[15],
     %rcx[16],%rcx[17],%rcx[18],%rcx[19],%rcx[20],%rcx[21],%rcx[22],%rcx[23],
     %rcx[24],%rcx[25],%rcx[26],%rcx[27],%rcx[28],%rcx[29],%rcx[30],%rcx[31],
     %rcx[32],%rcx[33],%rcx[34],%rcx[35],%rcx[36],%rcx[37],%rcx[38],%rcx[39],
     %rcx[40],%rcx[41],%rcx[42],%rcx[43],%rcx[44],%rcx[45],%rcx[46],%rcx[47],
     %rcx[48],%rcx[49],%rcx[50],%rcx[51],%rcx[52],%rcx[53],%rcx[54],%rcx[55],
     %rcx[56],%rcx[57],%rcx[58],%rcx[59],%rcx[60],%rcx[61],%rcx[62],%rcx[63],
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit];
(* and    %r14,%rcx                                #! PC = 0x555555582cdb *)
mov %rcx
    [0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     %rcx[16],%rcx[17],%rcx[18],%rcx[19],%rcx[20],%rcx[21],%rcx[22],%rcx[23],
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     %rcx[48],%rcx[49],%rcx[50],%rcx[51],%rcx[52],%rcx[53],%rcx[54],%rcx[55],
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit];
(* xor    %rax,%rcx                                #! PC = 0x555555582cde *)
adds %dc %rcx %rax %rcx;
(* mov    %rcx,%rax                                #! PC = 0x555555582ce1 *)
mov %rax %rcx;
(* shr    $0x8,%rax                                #! PC = 0x555555582ce4 *)
mov %rax
    [%rax[8],%rax[9],%rax[10],%rax[11],%rax[12],%rax[13],%rax[14],%rax[15],
     %rax[16],%rax[17],%rax[18],%rax[19],%rax[20],%rax[21],%rax[22],%rax[23],
     %rax[24],%rax[25],%rax[26],%rax[27],%rax[28],%rax[29],%rax[30],%rax[31],
     %rax[32],%rax[33],%rax[34],%rax[35],%rax[36],%rax[37],%rax[38],%rax[39],
     %rax[40],%rax[41],%rax[42],%rax[43],%rax[44],%rax[45],%rax[46],%rax[47],
     %rax[48],%rax[49],%rax[50],%rax[51],%rax[52],%rax[53],%rax[54],%rax[55],
     %rax[56],%rax[57],%rax[58],%rax[59],%rax[60],%rax[61],%rax[62],%rax[63],
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit];
(* and    %r13,%rax                                #! PC = 0x555555582ce8 *)
mov %rax
    [0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     %rax[8],%rax[9],%rax[10],%rax[11],%rax[12],%rax[13],%rax[14],%rax[15],
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     %rax[40],%rax[41],%rax[42],%rax[43],%rax[44],%rax[45],%rax[46],%rax[47],
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit];
(* xor    %rcx,%rax                                #! PC = 0x555555582ceb *)
adds %dc %rax %rcx %rax;
(* cmp    $0x3,%esi                                #! PC = 0x555555582cee *)
(* cmp 0x3, esi *)
nop;
(* #je     0x555555582d48 <radix_conversions+584>  #! PC = 0x555555582cf1 *)
#je     0x555555582d48 <radix_conversions+584>  #! 0x555555582cf1 = 0x555555582cf1;
(* mov    %rax,%rcx                                #! PC = 0x555555582cf3 *)
mov %rcx %rax;
(* shr    $0x4,%rcx                                #! PC = 0x555555582cf6 *)
mov %rcx
    [%rcx[4],%rcx[5],%rcx[6],%rcx[7],
     %rcx[8],%rcx[9],%rcx[10],%rcx[11],%rcx[12],%rcx[13],%rcx[14],%rcx[15],
     %rcx[16],%rcx[17],%rcx[18],%rcx[19],%rcx[20],%rcx[21],%rcx[22],%rcx[23],
     %rcx[24],%rcx[25],%rcx[26],%rcx[27],%rcx[28],%rcx[29],%rcx[30],%rcx[31],
     %rcx[32],%rcx[33],%rcx[34],%rcx[35],%rcx[36],%rcx[37],%rcx[38],%rcx[39],
     %rcx[40],%rcx[41],%rcx[42],%rcx[43],%rcx[44],%rcx[45],%rcx[46],%rcx[47],
     %rcx[48],%rcx[49],%rcx[50],%rcx[51],%rcx[52],%rcx[53],%rcx[54],%rcx[55],
     %rcx[56],%rcx[57],%rcx[58],%rcx[59],%rcx[60],%rcx[61],%rcx[62],%rcx[63],
     0@bit,0@bit,0@bit,0@bit];
(* and    %r8,%rcx                                 #! PC = 0x555555582cfa *)
mov %rcx
    [0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     %rcx[8],%rcx[9],%rcx[10],%rcx[11],0@bit,0@bit,0@bit,0@bit,
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     %rcx[24],%rcx[25],%rcx[26],%rcx[27],0@bit,0@bit,0@bit,0@bit,
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     %rcx[40],%rcx[41],%rcx[42],%rcx[43],0@bit,0@bit,0@bit,0@bit,
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     %rcx[56],%rcx[57],%rcx[58],%rcx[59],0@bit,0@bit,0@bit,0@bit];
(* xor    %rax,%rcx                                #! PC = 0x555555582cfd *)
adds %dc %rcx %rax %rcx;
(* mov    %rcx,%rax                                #! PC = 0x555555582d00 *)
mov %rax %rcx;
(* shr    $0x4,%rax                                #! PC = 0x555555582d03 *)
mov %rax
    [%rax[4],%rax[5],%rax[6],%rax[7],
     %rax[8],%rax[9],%rax[10],%rax[11],%rax[12],%rax[13],%rax[14],%rax[15],
     %rax[16],%rax[17],%rax[18],%rax[19],%rax[20],%rax[21],%rax[22],%rax[23],
     %rax[24],%rax[25],%rax[26],%rax[27],%rax[28],%rax[29],%rax[30],%rax[31],
     %rax[32],%rax[33],%rax[34],%rax[35],%rax[36],%rax[37],%rax[38],%rax[39],
     %rax[40],%rax[41],%rax[42],%rax[43],%rax[44],%rax[45],%rax[46],%rax[47],
     %rax[48],%rax[49],%rax[50],%rax[51],%rax[52],%rax[53],%rax[54],%rax[55],
     %rax[56],%rax[57],%rax[58],%rax[59],%rax[60],%rax[61],%rax[62],%rax[63],
     0@bit,0@bit,0@bit,0@bit];
(* and    %rdi,%rax                                #! PC = 0x555555582d07 *)
mov %rax
    [0@bit,0@bit,0@bit,0@bit,%rax[4],%rax[5],%rax[6],%rax[7],
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     0@bit,0@bit,0@bit,0@bit,%rax[20],%rax[21],%rax[22],%rax[23],
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     0@bit,0@bit,0@bit,0@bit,%rax[36],%rax[37],%rax[38],%rax[39],
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     0@bit,0@bit,0@bit,0@bit,%rax[52],%rax[53],%rax[54],%rax[55],
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit];
(* xor    %rcx,%rax                                #! PC = 0x555555582d0a *)
adds %dc %rax %rcx %rax;
(* cmp    $0x2,%esi                                #! PC = 0x555555582d0d *)
(* cmp 0x2, esi *)
nop;
(* #je     0x555555582d48 <radix_conversions+584>  #! PC = 0x555555582d10 *)
#je     0x555555582d48 <radix_conversions+584>  #! 0x555555582d10 = 0x555555582d10;
(* mov    %rax,(%rdx)                              #! EA = L0x7ffffff50cb8; PC = 0x555555582d48 *)
mov %L0x7ffffff50cb8 %rax;
(* add    $0x8,%rdx                                #! PC = 0x555555582d4b *)
(* add $0x8, rdx *)
nop;
(* cmp    %rdx,%r12                                #! PC = 0x555555582d4f *)
(* cmp rdx, r12 *)
nop;
(* #jne    0x555555582cb0 <radix_conversions+432>  #! PC = 0x555555582d52 *)
#jne    0x555555582cb0 <radix_conversions+432>  #! 0x555555582d52 = 0x555555582d52;
(* mov    (%rdx),%rax                              #! EA = L0x7ffffff50cc0; Value = 0x7da4feb3711293e0; PC = 0x555555582cb0 *)
mov %rax %L0x7ffffff50cc0;
(* mov    %rax,%rcx                                #! PC = 0x555555582cb3 *)
mov %rcx %rax;
(* shr    $0x10,%rcx                               #! PC = 0x555555582cb6 *)
mov %rcx
    [%rcx[16],%rcx[17],%rcx[18],%rcx[19],%rcx[20],%rcx[21],%rcx[22],%rcx[23],
     %rcx[24],%rcx[25],%rcx[26],%rcx[27],%rcx[28],%rcx[29],%rcx[30],%rcx[31],
     %rcx[32],%rcx[33],%rcx[34],%rcx[35],%rcx[36],%rcx[37],%rcx[38],%rcx[39],
     %rcx[40],%rcx[41],%rcx[42],%rcx[43],%rcx[44],%rcx[45],%rcx[46],%rcx[47],
     %rcx[48],%rcx[49],%rcx[50],%rcx[51],%rcx[52],%rcx[53],%rcx[54],%rcx[55],
     %rcx[56],%rcx[57],%rcx[58],%rcx[59],%rcx[60],%rcx[61],%rcx[62],%rcx[63],
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit];
(* and    %rbx,%rcx                                #! PC = 0x555555582cba *)
mov %rcx
    [0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     %rcx[32],%rcx[33],%rcx[34],%rcx[35],%rcx[36],%rcx[37],%rcx[38],%rcx[39],
     %rcx[40],%rcx[41],%rcx[42],%rcx[43],%rcx[44],%rcx[45],%rcx[46],%rcx[47],
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit];
(* xor    %rax,%rcx                                #! PC = 0x555555582cbd *)
adds %dc %rcx %rax %rcx;
(* mov    %rcx,%rax                                #! PC = 0x555555582cc0 *)
mov %rax %rcx;
(* shr    $0x10,%rax                               #! PC = 0x555555582cc3 *)
mov %rax
    [%rax[16],%rax[17],%rax[18],%rax[19],%rax[20],%rax[21],%rax[22],%rax[23],
     %rax[24],%rax[25],%rax[26],%rax[27],%rax[28],%rax[29],%rax[30],%rax[31],
     %rax[32],%rax[33],%rax[34],%rax[35],%rax[36],%rax[37],%rax[38],%rax[39],
     %rax[40],%rax[41],%rax[42],%rax[43],%rax[44],%rax[45],%rax[46],%rax[47],
     %rax[48],%rax[49],%rax[50],%rax[51],%rax[52],%rax[53],%rax[54],%rax[55],
     %rax[56],%rax[57],%rax[58],%rax[59],%rax[60],%rax[61],%rax[62],%rax[63],
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit];
(* and    $0xffff0000,%eax                         #! PC = 0x555555582cc7 *)
mov %rax
    [0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     %rax[16],%rax[17],%rax[18],%rax[19],%rax[20],%rax[21],%rax[22],%rax[23],
     %rax[24],%rax[25],%rax[26],%rax[27],%rax[28],%rax[29],%rax[30],%rax[31],
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit];
(* xor    %rcx,%rax                                #! PC = 0x555555582ccc *)
adds %dc %rax %rcx %rax;
(* cmp    $0x4,%esi                                #! PC = 0x555555582ccf *)
(* cmp 0x4, esi *)
nop;
(* #je     0x555555582d48 <radix_conversions+584>  #! PC = 0x555555582cd2 *)
#je     0x555555582d48 <radix_conversions+584>  #! 0x555555582cd2 = 0x555555582cd2;
(* mov    %rax,%rcx                                #! PC = 0x555555582cd4 *)
mov %rcx %rax;
(* shr    $0x8,%rcx                                #! PC = 0x555555582cd7 *)
mov %rcx
    [%rcx[8],%rcx[9],%rcx[10],%rcx[11],%rcx[12],%rcx[13],%rcx[14],%rcx[15],
     %rcx[16],%rcx[17],%rcx[18],%rcx[19],%rcx[20],%rcx[21],%rcx[22],%rcx[23],
     %rcx[24],%rcx[25],%rcx[26],%rcx[27],%rcx[28],%rcx[29],%rcx[30],%rcx[31],
     %rcx[32],%rcx[33],%rcx[34],%rcx[35],%rcx[36],%rcx[37],%rcx[38],%rcx[39],
     %rcx[40],%rcx[41],%rcx[42],%rcx[43],%rcx[44],%rcx[45],%rcx[46],%rcx[47],
     %rcx[48],%rcx[49],%rcx[50],%rcx[51],%rcx[52],%rcx[53],%rcx[54],%rcx[55],
     %rcx[56],%rcx[57],%rcx[58],%rcx[59],%rcx[60],%rcx[61],%rcx[62],%rcx[63],
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit];
(* and    %r14,%rcx                                #! PC = 0x555555582cdb *)
mov %rcx
    [0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     %rcx[16],%rcx[17],%rcx[18],%rcx[19],%rcx[20],%rcx[21],%rcx[22],%rcx[23],
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     %rcx[48],%rcx[49],%rcx[50],%rcx[51],%rcx[52],%rcx[53],%rcx[54],%rcx[55],
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit];
(* xor    %rax,%rcx                                #! PC = 0x555555582cde *)
adds %dc %rcx %rax %rcx;
(* mov    %rcx,%rax                                #! PC = 0x555555582ce1 *)
mov %rax %rcx;
(* shr    $0x8,%rax                                #! PC = 0x555555582ce4 *)
mov %rax
    [%rax[8],%rax[9],%rax[10],%rax[11],%rax[12],%rax[13],%rax[14],%rax[15],
     %rax[16],%rax[17],%rax[18],%rax[19],%rax[20],%rax[21],%rax[22],%rax[23],
     %rax[24],%rax[25],%rax[26],%rax[27],%rax[28],%rax[29],%rax[30],%rax[31],
     %rax[32],%rax[33],%rax[34],%rax[35],%rax[36],%rax[37],%rax[38],%rax[39],
     %rax[40],%rax[41],%rax[42],%rax[43],%rax[44],%rax[45],%rax[46],%rax[47],
     %rax[48],%rax[49],%rax[50],%rax[51],%rax[52],%rax[53],%rax[54],%rax[55],
     %rax[56],%rax[57],%rax[58],%rax[59],%rax[60],%rax[61],%rax[62],%rax[63],
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit];
(* and    %r13,%rax                                #! PC = 0x555555582ce8 *)
mov %rax
    [0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     %rax[8],%rax[9],%rax[10],%rax[11],%rax[12],%rax[13],%rax[14],%rax[15],
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     %rax[40],%rax[41],%rax[42],%rax[43],%rax[44],%rax[45],%rax[46],%rax[47],
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit];
(* xor    %rcx,%rax                                #! PC = 0x555555582ceb *)
adds %dc %rax %rcx %rax;
(* cmp    $0x3,%esi                                #! PC = 0x555555582cee *)
(* cmp 0x3, esi *)
nop;
(* #je     0x555555582d48 <radix_conversions+584>  #! PC = 0x555555582cf1 *)
#je     0x555555582d48 <radix_conversions+584>  #! 0x555555582cf1 = 0x555555582cf1;
(* mov    %rax,%rcx                                #! PC = 0x555555582cf3 *)
mov %rcx %rax;
(* shr    $0x4,%rcx                                #! PC = 0x555555582cf6 *)
mov %rcx
    [%rcx[4],%rcx[5],%rcx[6],%rcx[7],
     %rcx[8],%rcx[9],%rcx[10],%rcx[11],%rcx[12],%rcx[13],%rcx[14],%rcx[15],
     %rcx[16],%rcx[17],%rcx[18],%rcx[19],%rcx[20],%rcx[21],%rcx[22],%rcx[23],
     %rcx[24],%rcx[25],%rcx[26],%rcx[27],%rcx[28],%rcx[29],%rcx[30],%rcx[31],
     %rcx[32],%rcx[33],%rcx[34],%rcx[35],%rcx[36],%rcx[37],%rcx[38],%rcx[39],
     %rcx[40],%rcx[41],%rcx[42],%rcx[43],%rcx[44],%rcx[45],%rcx[46],%rcx[47],
     %rcx[48],%rcx[49],%rcx[50],%rcx[51],%rcx[52],%rcx[53],%rcx[54],%rcx[55],
     %rcx[56],%rcx[57],%rcx[58],%rcx[59],%rcx[60],%rcx[61],%rcx[62],%rcx[63],
     0@bit,0@bit,0@bit,0@bit];
(* and    %r8,%rcx                                 #! PC = 0x555555582cfa *)
mov %rcx
    [0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     %rcx[8],%rcx[9],%rcx[10],%rcx[11],0@bit,0@bit,0@bit,0@bit,
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     %rcx[24],%rcx[25],%rcx[26],%rcx[27],0@bit,0@bit,0@bit,0@bit,
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     %rcx[40],%rcx[41],%rcx[42],%rcx[43],0@bit,0@bit,0@bit,0@bit,
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     %rcx[56],%rcx[57],%rcx[58],%rcx[59],0@bit,0@bit,0@bit,0@bit];
(* xor    %rax,%rcx                                #! PC = 0x555555582cfd *)
adds %dc %rcx %rax %rcx;
(* mov    %rcx,%rax                                #! PC = 0x555555582d00 *)
mov %rax %rcx;
(* shr    $0x4,%rax                                #! PC = 0x555555582d03 *)
mov %rax
    [%rax[4],%rax[5],%rax[6],%rax[7],
     %rax[8],%rax[9],%rax[10],%rax[11],%rax[12],%rax[13],%rax[14],%rax[15],
     %rax[16],%rax[17],%rax[18],%rax[19],%rax[20],%rax[21],%rax[22],%rax[23],
     %rax[24],%rax[25],%rax[26],%rax[27],%rax[28],%rax[29],%rax[30],%rax[31],
     %rax[32],%rax[33],%rax[34],%rax[35],%rax[36],%rax[37],%rax[38],%rax[39],
     %rax[40],%rax[41],%rax[42],%rax[43],%rax[44],%rax[45],%rax[46],%rax[47],
     %rax[48],%rax[49],%rax[50],%rax[51],%rax[52],%rax[53],%rax[54],%rax[55],
     %rax[56],%rax[57],%rax[58],%rax[59],%rax[60],%rax[61],%rax[62],%rax[63],
     0@bit,0@bit,0@bit,0@bit];
(* and    %rdi,%rax                                #! PC = 0x555555582d07 *)
mov %rax
    [0@bit,0@bit,0@bit,0@bit,%rax[4],%rax[5],%rax[6],%rax[7],
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     0@bit,0@bit,0@bit,0@bit,%rax[20],%rax[21],%rax[22],%rax[23],
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     0@bit,0@bit,0@bit,0@bit,%rax[36],%rax[37],%rax[38],%rax[39],
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     0@bit,0@bit,0@bit,0@bit,%rax[52],%rax[53],%rax[54],%rax[55],
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit];
(* xor    %rcx,%rax                                #! PC = 0x555555582d0a *)
adds %dc %rax %rcx %rax;
(* cmp    $0x2,%esi                                #! PC = 0x555555582d0d *)
(* cmp 0x2, esi *)
nop;
(* #je     0x555555582d48 <radix_conversions+584>  #! PC = 0x555555582d10 *)
#je     0x555555582d48 <radix_conversions+584>  #! 0x555555582d10 = 0x555555582d10;
(* mov    %rax,(%rdx)                              #! EA = L0x7ffffff50cc0; PC = 0x555555582d48 *)
mov %L0x7ffffff50cc0 %rax;
(* add    $0x8,%rdx                                #! PC = 0x555555582d4b *)
(* add $0x8, rdx *)
nop;
(* cmp    %rdx,%r12                                #! PC = 0x555555582d4f *)
(* cmp rdx, r12 *)
nop;
(* #jne    0x555555582cb0 <radix_conversions+432>  #! PC = 0x555555582d52 *)
#jne    0x555555582cb0 <radix_conversions+432>  #! 0x555555582d52 = 0x555555582d52;
(* mov    (%rdx),%rax                              #! EA = L0x7ffffff50cc8; Value = 0xe927ddb5a75353bc; PC = 0x555555582cb0 *)
mov %rax %L0x7ffffff50cc8;
(* mov    %rax,%rcx                                #! PC = 0x555555582cb3 *)
mov %rcx %rax;
(* shr    $0x10,%rcx                               #! PC = 0x555555582cb6 *)
mov %rcx
    [%rcx[16],%rcx[17],%rcx[18],%rcx[19],%rcx[20],%rcx[21],%rcx[22],%rcx[23],
     %rcx[24],%rcx[25],%rcx[26],%rcx[27],%rcx[28],%rcx[29],%rcx[30],%rcx[31],
     %rcx[32],%rcx[33],%rcx[34],%rcx[35],%rcx[36],%rcx[37],%rcx[38],%rcx[39],
     %rcx[40],%rcx[41],%rcx[42],%rcx[43],%rcx[44],%rcx[45],%rcx[46],%rcx[47],
     %rcx[48],%rcx[49],%rcx[50],%rcx[51],%rcx[52],%rcx[53],%rcx[54],%rcx[55],
     %rcx[56],%rcx[57],%rcx[58],%rcx[59],%rcx[60],%rcx[61],%rcx[62],%rcx[63],
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit];
(* and    %rbx,%rcx                                #! PC = 0x555555582cba *)
mov %rcx
    [0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     %rcx[32],%rcx[33],%rcx[34],%rcx[35],%rcx[36],%rcx[37],%rcx[38],%rcx[39],
     %rcx[40],%rcx[41],%rcx[42],%rcx[43],%rcx[44],%rcx[45],%rcx[46],%rcx[47],
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit];
(* xor    %rax,%rcx                                #! PC = 0x555555582cbd *)
adds %dc %rcx %rax %rcx;
(* mov    %rcx,%rax                                #! PC = 0x555555582cc0 *)
mov %rax %rcx;
(* shr    $0x10,%rax                               #! PC = 0x555555582cc3 *)
mov %rax
    [%rax[16],%rax[17],%rax[18],%rax[19],%rax[20],%rax[21],%rax[22],%rax[23],
     %rax[24],%rax[25],%rax[26],%rax[27],%rax[28],%rax[29],%rax[30],%rax[31],
     %rax[32],%rax[33],%rax[34],%rax[35],%rax[36],%rax[37],%rax[38],%rax[39],
     %rax[40],%rax[41],%rax[42],%rax[43],%rax[44],%rax[45],%rax[46],%rax[47],
     %rax[48],%rax[49],%rax[50],%rax[51],%rax[52],%rax[53],%rax[54],%rax[55],
     %rax[56],%rax[57],%rax[58],%rax[59],%rax[60],%rax[61],%rax[62],%rax[63],
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit];
(* and    $0xffff0000,%eax                         #! PC = 0x555555582cc7 *)
mov %rax
    [0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     %rax[16],%rax[17],%rax[18],%rax[19],%rax[20],%rax[21],%rax[22],%rax[23],
     %rax[24],%rax[25],%rax[26],%rax[27],%rax[28],%rax[29],%rax[30],%rax[31],
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit];
(* xor    %rcx,%rax                                #! PC = 0x555555582ccc *)
adds %dc %rax %rcx %rax;
(* cmp    $0x4,%esi                                #! PC = 0x555555582ccf *)
(* cmp 0x4, esi *)
nop;
(* #je     0x555555582d48 <radix_conversions+584>  #! PC = 0x555555582cd2 *)
#je     0x555555582d48 <radix_conversions+584>  #! 0x555555582cd2 = 0x555555582cd2;
(* mov    %rax,%rcx                                #! PC = 0x555555582cd4 *)
mov %rcx %rax;
(* shr    $0x8,%rcx                                #! PC = 0x555555582cd7 *)
mov %rcx
    [%rcx[8],%rcx[9],%rcx[10],%rcx[11],%rcx[12],%rcx[13],%rcx[14],%rcx[15],
     %rcx[16],%rcx[17],%rcx[18],%rcx[19],%rcx[20],%rcx[21],%rcx[22],%rcx[23],
     %rcx[24],%rcx[25],%rcx[26],%rcx[27],%rcx[28],%rcx[29],%rcx[30],%rcx[31],
     %rcx[32],%rcx[33],%rcx[34],%rcx[35],%rcx[36],%rcx[37],%rcx[38],%rcx[39],
     %rcx[40],%rcx[41],%rcx[42],%rcx[43],%rcx[44],%rcx[45],%rcx[46],%rcx[47],
     %rcx[48],%rcx[49],%rcx[50],%rcx[51],%rcx[52],%rcx[53],%rcx[54],%rcx[55],
     %rcx[56],%rcx[57],%rcx[58],%rcx[59],%rcx[60],%rcx[61],%rcx[62],%rcx[63],
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit];
(* and    %r14,%rcx                                #! PC = 0x555555582cdb *)
mov %rcx
    [0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     %rcx[16],%rcx[17],%rcx[18],%rcx[19],%rcx[20],%rcx[21],%rcx[22],%rcx[23],
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     %rcx[48],%rcx[49],%rcx[50],%rcx[51],%rcx[52],%rcx[53],%rcx[54],%rcx[55],
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit];
(* xor    %rax,%rcx                                #! PC = 0x555555582cde *)
adds %dc %rcx %rax %rcx;
(* mov    %rcx,%rax                                #! PC = 0x555555582ce1 *)
mov %rax %rcx;
(* shr    $0x8,%rax                                #! PC = 0x555555582ce4 *)
mov %rax
    [%rax[8],%rax[9],%rax[10],%rax[11],%rax[12],%rax[13],%rax[14],%rax[15],
     %rax[16],%rax[17],%rax[18],%rax[19],%rax[20],%rax[21],%rax[22],%rax[23],
     %rax[24],%rax[25],%rax[26],%rax[27],%rax[28],%rax[29],%rax[30],%rax[31],
     %rax[32],%rax[33],%rax[34],%rax[35],%rax[36],%rax[37],%rax[38],%rax[39],
     %rax[40],%rax[41],%rax[42],%rax[43],%rax[44],%rax[45],%rax[46],%rax[47],
     %rax[48],%rax[49],%rax[50],%rax[51],%rax[52],%rax[53],%rax[54],%rax[55],
     %rax[56],%rax[57],%rax[58],%rax[59],%rax[60],%rax[61],%rax[62],%rax[63],
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit];
(* and    %r13,%rax                                #! PC = 0x555555582ce8 *)
mov %rax
    [0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     %rax[8],%rax[9],%rax[10],%rax[11],%rax[12],%rax[13],%rax[14],%rax[15],
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     %rax[40],%rax[41],%rax[42],%rax[43],%rax[44],%rax[45],%rax[46],%rax[47],
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit];
(* xor    %rcx,%rax                                #! PC = 0x555555582ceb *)
adds %dc %rax %rcx %rax;
(* cmp    $0x3,%esi                                #! PC = 0x555555582cee *)
(* cmp 0x3, esi *)
nop;
(* #je     0x555555582d48 <radix_conversions+584>  #! PC = 0x555555582cf1 *)
#je     0x555555582d48 <radix_conversions+584>  #! 0x555555582cf1 = 0x555555582cf1;
(* mov    %rax,%rcx                                #! PC = 0x555555582cf3 *)
mov %rcx %rax;
(* shr    $0x4,%rcx                                #! PC = 0x555555582cf6 *)
mov %rcx
    [%rcx[4],%rcx[5],%rcx[6],%rcx[7],
     %rcx[8],%rcx[9],%rcx[10],%rcx[11],%rcx[12],%rcx[13],%rcx[14],%rcx[15],
     %rcx[16],%rcx[17],%rcx[18],%rcx[19],%rcx[20],%rcx[21],%rcx[22],%rcx[23],
     %rcx[24],%rcx[25],%rcx[26],%rcx[27],%rcx[28],%rcx[29],%rcx[30],%rcx[31],
     %rcx[32],%rcx[33],%rcx[34],%rcx[35],%rcx[36],%rcx[37],%rcx[38],%rcx[39],
     %rcx[40],%rcx[41],%rcx[42],%rcx[43],%rcx[44],%rcx[45],%rcx[46],%rcx[47],
     %rcx[48],%rcx[49],%rcx[50],%rcx[51],%rcx[52],%rcx[53],%rcx[54],%rcx[55],
     %rcx[56],%rcx[57],%rcx[58],%rcx[59],%rcx[60],%rcx[61],%rcx[62],%rcx[63],
     0@bit,0@bit,0@bit,0@bit];
(* and    %r8,%rcx                                 #! PC = 0x555555582cfa *)
mov %rcx
    [0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     %rcx[8],%rcx[9],%rcx[10],%rcx[11],0@bit,0@bit,0@bit,0@bit,
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     %rcx[24],%rcx[25],%rcx[26],%rcx[27],0@bit,0@bit,0@bit,0@bit,
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     %rcx[40],%rcx[41],%rcx[42],%rcx[43],0@bit,0@bit,0@bit,0@bit,
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     %rcx[56],%rcx[57],%rcx[58],%rcx[59],0@bit,0@bit,0@bit,0@bit];
(* xor    %rax,%rcx                                #! PC = 0x555555582cfd *)
adds %dc %rcx %rax %rcx;
(* mov    %rcx,%rax                                #! PC = 0x555555582d00 *)
mov %rax %rcx;
(* shr    $0x4,%rax                                #! PC = 0x555555582d03 *)
mov %rax
    [%rax[4],%rax[5],%rax[6],%rax[7],
     %rax[8],%rax[9],%rax[10],%rax[11],%rax[12],%rax[13],%rax[14],%rax[15],
     %rax[16],%rax[17],%rax[18],%rax[19],%rax[20],%rax[21],%rax[22],%rax[23],
     %rax[24],%rax[25],%rax[26],%rax[27],%rax[28],%rax[29],%rax[30],%rax[31],
     %rax[32],%rax[33],%rax[34],%rax[35],%rax[36],%rax[37],%rax[38],%rax[39],
     %rax[40],%rax[41],%rax[42],%rax[43],%rax[44],%rax[45],%rax[46],%rax[47],
     %rax[48],%rax[49],%rax[50],%rax[51],%rax[52],%rax[53],%rax[54],%rax[55],
     %rax[56],%rax[57],%rax[58],%rax[59],%rax[60],%rax[61],%rax[62],%rax[63],
     0@bit,0@bit,0@bit,0@bit];
(* and    %rdi,%rax                                #! PC = 0x555555582d07 *)
mov %rax
    [0@bit,0@bit,0@bit,0@bit,%rax[4],%rax[5],%rax[6],%rax[7],
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     0@bit,0@bit,0@bit,0@bit,%rax[20],%rax[21],%rax[22],%rax[23],
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     0@bit,0@bit,0@bit,0@bit,%rax[36],%rax[37],%rax[38],%rax[39],
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     0@bit,0@bit,0@bit,0@bit,%rax[52],%rax[53],%rax[54],%rax[55],
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit];
(* xor    %rcx,%rax                                #! PC = 0x555555582d0a *)
adds %dc %rax %rcx %rax;
(* cmp    $0x2,%esi                                #! PC = 0x555555582d0d *)
(* cmp 0x2, esi *)
nop;
(* #je     0x555555582d48 <radix_conversions+584>  #! PC = 0x555555582d10 *)
#je     0x555555582d48 <radix_conversions+584>  #! 0x555555582d10 = 0x555555582d10;
(* mov    %rax,(%rdx)                              #! EA = L0x7ffffff50cc8; PC = 0x555555582d48 *)
mov %L0x7ffffff50cc8 %rax;
(* add    $0x8,%rdx                                #! PC = 0x555555582d4b *)
(* add $0x8, rdx *)
nop;
(* cmp    %rdx,%r12                                #! PC = 0x555555582d4f *)
(* cmp rdx, r12 *)
nop;
(* #jne    0x555555582cb0 <radix_conversions+432>  #! PC = 0x555555582d52 *)
#jne    0x555555582cb0 <radix_conversions+432>  #! 0x555555582d52 = 0x555555582d52;
(* mov    (%rdx),%rax                              #! EA = L0x7ffffff50cd0; Value = 0x5736387e2ce10981; PC = 0x555555582cb0 *)
mov %rax %L0x7ffffff50cd0;
(* mov    %rax,%rcx                                #! PC = 0x555555582cb3 *)
mov %rcx %rax;
(* shr    $0x10,%rcx                               #! PC = 0x555555582cb6 *)
mov %rcx
    [%rcx[16],%rcx[17],%rcx[18],%rcx[19],%rcx[20],%rcx[21],%rcx[22],%rcx[23],
     %rcx[24],%rcx[25],%rcx[26],%rcx[27],%rcx[28],%rcx[29],%rcx[30],%rcx[31],
     %rcx[32],%rcx[33],%rcx[34],%rcx[35],%rcx[36],%rcx[37],%rcx[38],%rcx[39],
     %rcx[40],%rcx[41],%rcx[42],%rcx[43],%rcx[44],%rcx[45],%rcx[46],%rcx[47],
     %rcx[48],%rcx[49],%rcx[50],%rcx[51],%rcx[52],%rcx[53],%rcx[54],%rcx[55],
     %rcx[56],%rcx[57],%rcx[58],%rcx[59],%rcx[60],%rcx[61],%rcx[62],%rcx[63],
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit];
(* and    %rbx,%rcx                                #! PC = 0x555555582cba *)
mov %rcx
    [0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     %rcx[32],%rcx[33],%rcx[34],%rcx[35],%rcx[36],%rcx[37],%rcx[38],%rcx[39],
     %rcx[40],%rcx[41],%rcx[42],%rcx[43],%rcx[44],%rcx[45],%rcx[46],%rcx[47],
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit];
(* xor    %rax,%rcx                                #! PC = 0x555555582cbd *)
adds %dc %rcx %rax %rcx;
(* mov    %rcx,%rax                                #! PC = 0x555555582cc0 *)
mov %rax %rcx;
(* shr    $0x10,%rax                               #! PC = 0x555555582cc3 *)
mov %rax
    [%rax[16],%rax[17],%rax[18],%rax[19],%rax[20],%rax[21],%rax[22],%rax[23],
     %rax[24],%rax[25],%rax[26],%rax[27],%rax[28],%rax[29],%rax[30],%rax[31],
     %rax[32],%rax[33],%rax[34],%rax[35],%rax[36],%rax[37],%rax[38],%rax[39],
     %rax[40],%rax[41],%rax[42],%rax[43],%rax[44],%rax[45],%rax[46],%rax[47],
     %rax[48],%rax[49],%rax[50],%rax[51],%rax[52],%rax[53],%rax[54],%rax[55],
     %rax[56],%rax[57],%rax[58],%rax[59],%rax[60],%rax[61],%rax[62],%rax[63],
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit];
(* and    $0xffff0000,%eax                         #! PC = 0x555555582cc7 *)
mov %rax
    [0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     %rax[16],%rax[17],%rax[18],%rax[19],%rax[20],%rax[21],%rax[22],%rax[23],
     %rax[24],%rax[25],%rax[26],%rax[27],%rax[28],%rax[29],%rax[30],%rax[31],
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit];
(* xor    %rcx,%rax                                #! PC = 0x555555582ccc *)
adds %dc %rax %rcx %rax;
(* cmp    $0x4,%esi                                #! PC = 0x555555582ccf *)
(* cmp 0x4, esi *)
nop;
(* #je     0x555555582d48 <radix_conversions+584>  #! PC = 0x555555582cd2 *)
#je     0x555555582d48 <radix_conversions+584>  #! 0x555555582cd2 = 0x555555582cd2;
(* mov    %rax,%rcx                                #! PC = 0x555555582cd4 *)
mov %rcx %rax;
(* shr    $0x8,%rcx                                #! PC = 0x555555582cd7 *)
mov %rcx
    [%rcx[8],%rcx[9],%rcx[10],%rcx[11],%rcx[12],%rcx[13],%rcx[14],%rcx[15],
     %rcx[16],%rcx[17],%rcx[18],%rcx[19],%rcx[20],%rcx[21],%rcx[22],%rcx[23],
     %rcx[24],%rcx[25],%rcx[26],%rcx[27],%rcx[28],%rcx[29],%rcx[30],%rcx[31],
     %rcx[32],%rcx[33],%rcx[34],%rcx[35],%rcx[36],%rcx[37],%rcx[38],%rcx[39],
     %rcx[40],%rcx[41],%rcx[42],%rcx[43],%rcx[44],%rcx[45],%rcx[46],%rcx[47],
     %rcx[48],%rcx[49],%rcx[50],%rcx[51],%rcx[52],%rcx[53],%rcx[54],%rcx[55],
     %rcx[56],%rcx[57],%rcx[58],%rcx[59],%rcx[60],%rcx[61],%rcx[62],%rcx[63],
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit];
(* and    %r14,%rcx                                #! PC = 0x555555582cdb *)
mov %rcx
    [0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     %rcx[16],%rcx[17],%rcx[18],%rcx[19],%rcx[20],%rcx[21],%rcx[22],%rcx[23],
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     %rcx[48],%rcx[49],%rcx[50],%rcx[51],%rcx[52],%rcx[53],%rcx[54],%rcx[55],
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit];
(* xor    %rax,%rcx                                #! PC = 0x555555582cde *)
adds %dc %rcx %rax %rcx;
(* mov    %rcx,%rax                                #! PC = 0x555555582ce1 *)
mov %rax %rcx;
(* shr    $0x8,%rax                                #! PC = 0x555555582ce4 *)
mov %rax
    [%rax[8],%rax[9],%rax[10],%rax[11],%rax[12],%rax[13],%rax[14],%rax[15],
     %rax[16],%rax[17],%rax[18],%rax[19],%rax[20],%rax[21],%rax[22],%rax[23],
     %rax[24],%rax[25],%rax[26],%rax[27],%rax[28],%rax[29],%rax[30],%rax[31],
     %rax[32],%rax[33],%rax[34],%rax[35],%rax[36],%rax[37],%rax[38],%rax[39],
     %rax[40],%rax[41],%rax[42],%rax[43],%rax[44],%rax[45],%rax[46],%rax[47],
     %rax[48],%rax[49],%rax[50],%rax[51],%rax[52],%rax[53],%rax[54],%rax[55],
     %rax[56],%rax[57],%rax[58],%rax[59],%rax[60],%rax[61],%rax[62],%rax[63],
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit];
(* and    %r13,%rax                                #! PC = 0x555555582ce8 *)
mov %rax
    [0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     %rax[8],%rax[9],%rax[10],%rax[11],%rax[12],%rax[13],%rax[14],%rax[15],
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     %rax[40],%rax[41],%rax[42],%rax[43],%rax[44],%rax[45],%rax[46],%rax[47],
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit];
(* xor    %rcx,%rax                                #! PC = 0x555555582ceb *)
adds %dc %rax %rcx %rax;
(* cmp    $0x3,%esi                                #! PC = 0x555555582cee *)
(* cmp 0x3, esi *)
nop;
(* #je     0x555555582d48 <radix_conversions+584>  #! PC = 0x555555582cf1 *)
#je     0x555555582d48 <radix_conversions+584>  #! 0x555555582cf1 = 0x555555582cf1;
(* mov    %rax,%rcx                                #! PC = 0x555555582cf3 *)
mov %rcx %rax;
(* shr    $0x4,%rcx                                #! PC = 0x555555582cf6 *)
mov %rcx
    [%rcx[4],%rcx[5],%rcx[6],%rcx[7],
     %rcx[8],%rcx[9],%rcx[10],%rcx[11],%rcx[12],%rcx[13],%rcx[14],%rcx[15],
     %rcx[16],%rcx[17],%rcx[18],%rcx[19],%rcx[20],%rcx[21],%rcx[22],%rcx[23],
     %rcx[24],%rcx[25],%rcx[26],%rcx[27],%rcx[28],%rcx[29],%rcx[30],%rcx[31],
     %rcx[32],%rcx[33],%rcx[34],%rcx[35],%rcx[36],%rcx[37],%rcx[38],%rcx[39],
     %rcx[40],%rcx[41],%rcx[42],%rcx[43],%rcx[44],%rcx[45],%rcx[46],%rcx[47],
     %rcx[48],%rcx[49],%rcx[50],%rcx[51],%rcx[52],%rcx[53],%rcx[54],%rcx[55],
     %rcx[56],%rcx[57],%rcx[58],%rcx[59],%rcx[60],%rcx[61],%rcx[62],%rcx[63],
     0@bit,0@bit,0@bit,0@bit];
(* and    %r8,%rcx                                 #! PC = 0x555555582cfa *)
mov %rcx
    [0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     %rcx[8],%rcx[9],%rcx[10],%rcx[11],0@bit,0@bit,0@bit,0@bit,
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     %rcx[24],%rcx[25],%rcx[26],%rcx[27],0@bit,0@bit,0@bit,0@bit,
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     %rcx[40],%rcx[41],%rcx[42],%rcx[43],0@bit,0@bit,0@bit,0@bit,
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     %rcx[56],%rcx[57],%rcx[58],%rcx[59],0@bit,0@bit,0@bit,0@bit];
(* xor    %rax,%rcx                                #! PC = 0x555555582cfd *)
adds %dc %rcx %rax %rcx;
(* mov    %rcx,%rax                                #! PC = 0x555555582d00 *)
mov %rax %rcx;
(* shr    $0x4,%rax                                #! PC = 0x555555582d03 *)
mov %rax
    [%rax[4],%rax[5],%rax[6],%rax[7],
     %rax[8],%rax[9],%rax[10],%rax[11],%rax[12],%rax[13],%rax[14],%rax[15],
     %rax[16],%rax[17],%rax[18],%rax[19],%rax[20],%rax[21],%rax[22],%rax[23],
     %rax[24],%rax[25],%rax[26],%rax[27],%rax[28],%rax[29],%rax[30],%rax[31],
     %rax[32],%rax[33],%rax[34],%rax[35],%rax[36],%rax[37],%rax[38],%rax[39],
     %rax[40],%rax[41],%rax[42],%rax[43],%rax[44],%rax[45],%rax[46],%rax[47],
     %rax[48],%rax[49],%rax[50],%rax[51],%rax[52],%rax[53],%rax[54],%rax[55],
     %rax[56],%rax[57],%rax[58],%rax[59],%rax[60],%rax[61],%rax[62],%rax[63],
     0@bit,0@bit,0@bit,0@bit];
(* and    %rdi,%rax                                #! PC = 0x555555582d07 *)
mov %rax
    [0@bit,0@bit,0@bit,0@bit,%rax[4],%rax[5],%rax[6],%rax[7],
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     0@bit,0@bit,0@bit,0@bit,%rax[20],%rax[21],%rax[22],%rax[23],
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     0@bit,0@bit,0@bit,0@bit,%rax[36],%rax[37],%rax[38],%rax[39],
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     0@bit,0@bit,0@bit,0@bit,%rax[52],%rax[53],%rax[54],%rax[55],
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit];
(* xor    %rcx,%rax                                #! PC = 0x555555582d0a *)
adds %dc %rax %rcx %rax;
(* cmp    $0x2,%esi                                #! PC = 0x555555582d0d *)
(* cmp 0x2, esi *)
nop;
(* #je     0x555555582d48 <radix_conversions+584>  #! PC = 0x555555582d10 *)
#je     0x555555582d48 <radix_conversions+584>  #! 0x555555582d10 = 0x555555582d10;
(* mov    %rax,(%rdx)                              #! EA = L0x7ffffff50cd0; PC = 0x555555582d48 *)
mov %L0x7ffffff50cd0 %rax;
(* add    $0x8,%rdx                                #! PC = 0x555555582d4b *)
(* add $0x8, rdx *)
nop;
(* cmp    %rdx,%r12                                #! PC = 0x555555582d4f *)
(* cmp rdx, r12 *)
nop;
(* #jne    0x555555582cb0 <radix_conversions+432>  #! PC = 0x555555582d52 *)
#jne    0x555555582cb0 <radix_conversions+432>  #! 0x555555582d52 = 0x555555582d52;
(* mov    (%rdx),%rax                              #! EA = L0x7ffffff50cd8; Value = 0xc918fc354ff36211; PC = 0x555555582cb0 *)
mov %rax %L0x7ffffff50cd8;
(* mov    %rax,%rcx                                #! PC = 0x555555582cb3 *)
mov %rcx %rax;
(* shr    $0x10,%rcx                               #! PC = 0x555555582cb6 *)
mov %rcx
    [%rcx[16],%rcx[17],%rcx[18],%rcx[19],%rcx[20],%rcx[21],%rcx[22],%rcx[23],
     %rcx[24],%rcx[25],%rcx[26],%rcx[27],%rcx[28],%rcx[29],%rcx[30],%rcx[31],
     %rcx[32],%rcx[33],%rcx[34],%rcx[35],%rcx[36],%rcx[37],%rcx[38],%rcx[39],
     %rcx[40],%rcx[41],%rcx[42],%rcx[43],%rcx[44],%rcx[45],%rcx[46],%rcx[47],
     %rcx[48],%rcx[49],%rcx[50],%rcx[51],%rcx[52],%rcx[53],%rcx[54],%rcx[55],
     %rcx[56],%rcx[57],%rcx[58],%rcx[59],%rcx[60],%rcx[61],%rcx[62],%rcx[63],
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit];
(* and    %rbx,%rcx                                #! PC = 0x555555582cba *)
mov %rcx
    [0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     %rcx[32],%rcx[33],%rcx[34],%rcx[35],%rcx[36],%rcx[37],%rcx[38],%rcx[39],
     %rcx[40],%rcx[41],%rcx[42],%rcx[43],%rcx[44],%rcx[45],%rcx[46],%rcx[47],
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit];
(* xor    %rax,%rcx                                #! PC = 0x555555582cbd *)
adds %dc %rcx %rax %rcx;
(* mov    %rcx,%rax                                #! PC = 0x555555582cc0 *)
mov %rax %rcx;
(* shr    $0x10,%rax                               #! PC = 0x555555582cc3 *)
mov %rax
    [%rax[16],%rax[17],%rax[18],%rax[19],%rax[20],%rax[21],%rax[22],%rax[23],
     %rax[24],%rax[25],%rax[26],%rax[27],%rax[28],%rax[29],%rax[30],%rax[31],
     %rax[32],%rax[33],%rax[34],%rax[35],%rax[36],%rax[37],%rax[38],%rax[39],
     %rax[40],%rax[41],%rax[42],%rax[43],%rax[44],%rax[45],%rax[46],%rax[47],
     %rax[48],%rax[49],%rax[50],%rax[51],%rax[52],%rax[53],%rax[54],%rax[55],
     %rax[56],%rax[57],%rax[58],%rax[59],%rax[60],%rax[61],%rax[62],%rax[63],
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit];
(* and    $0xffff0000,%eax                         #! PC = 0x555555582cc7 *)
mov %rax
    [0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     %rax[16],%rax[17],%rax[18],%rax[19],%rax[20],%rax[21],%rax[22],%rax[23],
     %rax[24],%rax[25],%rax[26],%rax[27],%rax[28],%rax[29],%rax[30],%rax[31],
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit];
(* xor    %rcx,%rax                                #! PC = 0x555555582ccc *)
adds %dc %rax %rcx %rax;
(* cmp    $0x4,%esi                                #! PC = 0x555555582ccf *)
(* cmp 0x4, esi *)
nop;
(* #je     0x555555582d48 <radix_conversions+584>  #! PC = 0x555555582cd2 *)
#je     0x555555582d48 <radix_conversions+584>  #! 0x555555582cd2 = 0x555555582cd2;
(* mov    %rax,%rcx                                #! PC = 0x555555582cd4 *)
mov %rcx %rax;
(* shr    $0x8,%rcx                                #! PC = 0x555555582cd7 *)
mov %rcx
    [%rcx[8],%rcx[9],%rcx[10],%rcx[11],%rcx[12],%rcx[13],%rcx[14],%rcx[15],
     %rcx[16],%rcx[17],%rcx[18],%rcx[19],%rcx[20],%rcx[21],%rcx[22],%rcx[23],
     %rcx[24],%rcx[25],%rcx[26],%rcx[27],%rcx[28],%rcx[29],%rcx[30],%rcx[31],
     %rcx[32],%rcx[33],%rcx[34],%rcx[35],%rcx[36],%rcx[37],%rcx[38],%rcx[39],
     %rcx[40],%rcx[41],%rcx[42],%rcx[43],%rcx[44],%rcx[45],%rcx[46],%rcx[47],
     %rcx[48],%rcx[49],%rcx[50],%rcx[51],%rcx[52],%rcx[53],%rcx[54],%rcx[55],
     %rcx[56],%rcx[57],%rcx[58],%rcx[59],%rcx[60],%rcx[61],%rcx[62],%rcx[63],
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit];
(* and    %r14,%rcx                                #! PC = 0x555555582cdb *)
mov %rcx
    [0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     %rcx[16],%rcx[17],%rcx[18],%rcx[19],%rcx[20],%rcx[21],%rcx[22],%rcx[23],
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     %rcx[48],%rcx[49],%rcx[50],%rcx[51],%rcx[52],%rcx[53],%rcx[54],%rcx[55],
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit];
(* xor    %rax,%rcx                                #! PC = 0x555555582cde *)
adds %dc %rcx %rax %rcx;
(* mov    %rcx,%rax                                #! PC = 0x555555582ce1 *)
mov %rax %rcx;
(* shr    $0x8,%rax                                #! PC = 0x555555582ce4 *)
mov %rax
    [%rax[8],%rax[9],%rax[10],%rax[11],%rax[12],%rax[13],%rax[14],%rax[15],
     %rax[16],%rax[17],%rax[18],%rax[19],%rax[20],%rax[21],%rax[22],%rax[23],
     %rax[24],%rax[25],%rax[26],%rax[27],%rax[28],%rax[29],%rax[30],%rax[31],
     %rax[32],%rax[33],%rax[34],%rax[35],%rax[36],%rax[37],%rax[38],%rax[39],
     %rax[40],%rax[41],%rax[42],%rax[43],%rax[44],%rax[45],%rax[46],%rax[47],
     %rax[48],%rax[49],%rax[50],%rax[51],%rax[52],%rax[53],%rax[54],%rax[55],
     %rax[56],%rax[57],%rax[58],%rax[59],%rax[60],%rax[61],%rax[62],%rax[63],
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit];
(* and    %r13,%rax                                #! PC = 0x555555582ce8 *)
mov %rax
    [0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     %rax[8],%rax[9],%rax[10],%rax[11],%rax[12],%rax[13],%rax[14],%rax[15],
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     %rax[40],%rax[41],%rax[42],%rax[43],%rax[44],%rax[45],%rax[46],%rax[47],
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit];
(* xor    %rcx,%rax                                #! PC = 0x555555582ceb *)
adds %dc %rax %rcx %rax;
(* cmp    $0x3,%esi                                #! PC = 0x555555582cee *)
(* cmp 0x3, esi *)
nop;
(* #je     0x555555582d48 <radix_conversions+584>  #! PC = 0x555555582cf1 *)
#je     0x555555582d48 <radix_conversions+584>  #! 0x555555582cf1 = 0x555555582cf1;
(* mov    %rax,%rcx                                #! PC = 0x555555582cf3 *)
mov %rcx %rax;
(* shr    $0x4,%rcx                                #! PC = 0x555555582cf6 *)
mov %rcx
    [%rcx[4],%rcx[5],%rcx[6],%rcx[7],
     %rcx[8],%rcx[9],%rcx[10],%rcx[11],%rcx[12],%rcx[13],%rcx[14],%rcx[15],
     %rcx[16],%rcx[17],%rcx[18],%rcx[19],%rcx[20],%rcx[21],%rcx[22],%rcx[23],
     %rcx[24],%rcx[25],%rcx[26],%rcx[27],%rcx[28],%rcx[29],%rcx[30],%rcx[31],
     %rcx[32],%rcx[33],%rcx[34],%rcx[35],%rcx[36],%rcx[37],%rcx[38],%rcx[39],
     %rcx[40],%rcx[41],%rcx[42],%rcx[43],%rcx[44],%rcx[45],%rcx[46],%rcx[47],
     %rcx[48],%rcx[49],%rcx[50],%rcx[51],%rcx[52],%rcx[53],%rcx[54],%rcx[55],
     %rcx[56],%rcx[57],%rcx[58],%rcx[59],%rcx[60],%rcx[61],%rcx[62],%rcx[63],
     0@bit,0@bit,0@bit,0@bit];
(* and    %r8,%rcx                                 #! PC = 0x555555582cfa *)
mov %rcx
    [0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     %rcx[8],%rcx[9],%rcx[10],%rcx[11],0@bit,0@bit,0@bit,0@bit,
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     %rcx[24],%rcx[25],%rcx[26],%rcx[27],0@bit,0@bit,0@bit,0@bit,
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     %rcx[40],%rcx[41],%rcx[42],%rcx[43],0@bit,0@bit,0@bit,0@bit,
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     %rcx[56],%rcx[57],%rcx[58],%rcx[59],0@bit,0@bit,0@bit,0@bit];
(* xor    %rax,%rcx                                #! PC = 0x555555582cfd *)
adds %dc %rcx %rax %rcx;
(* mov    %rcx,%rax                                #! PC = 0x555555582d00 *)
mov %rax %rcx;
(* shr    $0x4,%rax                                #! PC = 0x555555582d03 *)
mov %rax
    [%rax[4],%rax[5],%rax[6],%rax[7],
     %rax[8],%rax[9],%rax[10],%rax[11],%rax[12],%rax[13],%rax[14],%rax[15],
     %rax[16],%rax[17],%rax[18],%rax[19],%rax[20],%rax[21],%rax[22],%rax[23],
     %rax[24],%rax[25],%rax[26],%rax[27],%rax[28],%rax[29],%rax[30],%rax[31],
     %rax[32],%rax[33],%rax[34],%rax[35],%rax[36],%rax[37],%rax[38],%rax[39],
     %rax[40],%rax[41],%rax[42],%rax[43],%rax[44],%rax[45],%rax[46],%rax[47],
     %rax[48],%rax[49],%rax[50],%rax[51],%rax[52],%rax[53],%rax[54],%rax[55],
     %rax[56],%rax[57],%rax[58],%rax[59],%rax[60],%rax[61],%rax[62],%rax[63],
     0@bit,0@bit,0@bit,0@bit];
(* and    %rdi,%rax                                #! PC = 0x555555582d07 *)
mov %rax
    [0@bit,0@bit,0@bit,0@bit,%rax[4],%rax[5],%rax[6],%rax[7],
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     0@bit,0@bit,0@bit,0@bit,%rax[20],%rax[21],%rax[22],%rax[23],
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     0@bit,0@bit,0@bit,0@bit,%rax[36],%rax[37],%rax[38],%rax[39],
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     0@bit,0@bit,0@bit,0@bit,%rax[52],%rax[53],%rax[54],%rax[55],
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit];
(* xor    %rcx,%rax                                #! PC = 0x555555582d0a *)
adds %dc %rax %rcx %rax;
(* cmp    $0x2,%esi                                #! PC = 0x555555582d0d *)
(* cmp 0x2, esi *)
nop;
(* #je     0x555555582d48 <radix_conversions+584>  #! PC = 0x555555582d10 *)
#je     0x555555582d48 <radix_conversions+584>  #! 0x555555582d10 = 0x555555582d10;
(* mov    %rax,(%rdx)                              #! EA = L0x7ffffff50cd8; PC = 0x555555582d48 *)
mov %L0x7ffffff50cd8 %rax;
(* add    $0x8,%rdx                                #! PC = 0x555555582d4b *)
(* add $0x8, rdx *)
nop;
(* cmp    %rdx,%r12                                #! PC = 0x555555582d4f *)
(* cmp rdx, r12 *)
nop;
(* #jne    0x555555582cb0 <radix_conversions+432>  #! PC = 0x555555582d52 *)
#jne    0x555555582cb0 <radix_conversions+432>  #! 0x555555582d52 = 0x555555582d52;
(* mov    (%rdx),%rax                              #! EA = L0x7ffffff50ce0; Value = 0xbba33cfeff0a8d8b; PC = 0x555555582cb0 *)
mov %rax %L0x7ffffff50ce0;
(* mov    %rax,%rcx                                #! PC = 0x555555582cb3 *)
mov %rcx %rax;
(* shr    $0x10,%rcx                               #! PC = 0x555555582cb6 *)
mov %rcx
    [%rcx[16],%rcx[17],%rcx[18],%rcx[19],%rcx[20],%rcx[21],%rcx[22],%rcx[23],
     %rcx[24],%rcx[25],%rcx[26],%rcx[27],%rcx[28],%rcx[29],%rcx[30],%rcx[31],
     %rcx[32],%rcx[33],%rcx[34],%rcx[35],%rcx[36],%rcx[37],%rcx[38],%rcx[39],
     %rcx[40],%rcx[41],%rcx[42],%rcx[43],%rcx[44],%rcx[45],%rcx[46],%rcx[47],
     %rcx[48],%rcx[49],%rcx[50],%rcx[51],%rcx[52],%rcx[53],%rcx[54],%rcx[55],
     %rcx[56],%rcx[57],%rcx[58],%rcx[59],%rcx[60],%rcx[61],%rcx[62],%rcx[63],
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit];
(* and    %rbx,%rcx                                #! PC = 0x555555582cba *)
mov %rcx
    [0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     %rcx[32],%rcx[33],%rcx[34],%rcx[35],%rcx[36],%rcx[37],%rcx[38],%rcx[39],
     %rcx[40],%rcx[41],%rcx[42],%rcx[43],%rcx[44],%rcx[45],%rcx[46],%rcx[47],
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit];
(* xor    %rax,%rcx                                #! PC = 0x555555582cbd *)
adds %dc %rcx %rax %rcx;
(* mov    %rcx,%rax                                #! PC = 0x555555582cc0 *)
mov %rax %rcx;
(* shr    $0x10,%rax                               #! PC = 0x555555582cc3 *)
mov %rax
    [%rax[16],%rax[17],%rax[18],%rax[19],%rax[20],%rax[21],%rax[22],%rax[23],
     %rax[24],%rax[25],%rax[26],%rax[27],%rax[28],%rax[29],%rax[30],%rax[31],
     %rax[32],%rax[33],%rax[34],%rax[35],%rax[36],%rax[37],%rax[38],%rax[39],
     %rax[40],%rax[41],%rax[42],%rax[43],%rax[44],%rax[45],%rax[46],%rax[47],
     %rax[48],%rax[49],%rax[50],%rax[51],%rax[52],%rax[53],%rax[54],%rax[55],
     %rax[56],%rax[57],%rax[58],%rax[59],%rax[60],%rax[61],%rax[62],%rax[63],
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit];
(* and    $0xffff0000,%eax                         #! PC = 0x555555582cc7 *)
mov %rax
    [0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     %rax[16],%rax[17],%rax[18],%rax[19],%rax[20],%rax[21],%rax[22],%rax[23],
     %rax[24],%rax[25],%rax[26],%rax[27],%rax[28],%rax[29],%rax[30],%rax[31],
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit];
(* xor    %rcx,%rax                                #! PC = 0x555555582ccc *)
adds %dc %rax %rcx %rax;
(* cmp    $0x4,%esi                                #! PC = 0x555555582ccf *)
(* cmp 0x4, esi *)
nop;
(* #je     0x555555582d48 <radix_conversions+584>  #! PC = 0x555555582cd2 *)
#je     0x555555582d48 <radix_conversions+584>  #! 0x555555582cd2 = 0x555555582cd2;
(* mov    %rax,%rcx                                #! PC = 0x555555582cd4 *)
mov %rcx %rax;
(* shr    $0x8,%rcx                                #! PC = 0x555555582cd7 *)
mov %rcx
    [%rcx[8],%rcx[9],%rcx[10],%rcx[11],%rcx[12],%rcx[13],%rcx[14],%rcx[15],
     %rcx[16],%rcx[17],%rcx[18],%rcx[19],%rcx[20],%rcx[21],%rcx[22],%rcx[23],
     %rcx[24],%rcx[25],%rcx[26],%rcx[27],%rcx[28],%rcx[29],%rcx[30],%rcx[31],
     %rcx[32],%rcx[33],%rcx[34],%rcx[35],%rcx[36],%rcx[37],%rcx[38],%rcx[39],
     %rcx[40],%rcx[41],%rcx[42],%rcx[43],%rcx[44],%rcx[45],%rcx[46],%rcx[47],
     %rcx[48],%rcx[49],%rcx[50],%rcx[51],%rcx[52],%rcx[53],%rcx[54],%rcx[55],
     %rcx[56],%rcx[57],%rcx[58],%rcx[59],%rcx[60],%rcx[61],%rcx[62],%rcx[63],
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit];
(* and    %r14,%rcx                                #! PC = 0x555555582cdb *)
mov %rcx
    [0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     %rcx[16],%rcx[17],%rcx[18],%rcx[19],%rcx[20],%rcx[21],%rcx[22],%rcx[23],
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     %rcx[48],%rcx[49],%rcx[50],%rcx[51],%rcx[52],%rcx[53],%rcx[54],%rcx[55],
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit];
(* xor    %rax,%rcx                                #! PC = 0x555555582cde *)
adds %dc %rcx %rax %rcx;
(* mov    %rcx,%rax                                #! PC = 0x555555582ce1 *)
mov %rax %rcx;
(* shr    $0x8,%rax                                #! PC = 0x555555582ce4 *)
mov %rax
    [%rax[8],%rax[9],%rax[10],%rax[11],%rax[12],%rax[13],%rax[14],%rax[15],
     %rax[16],%rax[17],%rax[18],%rax[19],%rax[20],%rax[21],%rax[22],%rax[23],
     %rax[24],%rax[25],%rax[26],%rax[27],%rax[28],%rax[29],%rax[30],%rax[31],
     %rax[32],%rax[33],%rax[34],%rax[35],%rax[36],%rax[37],%rax[38],%rax[39],
     %rax[40],%rax[41],%rax[42],%rax[43],%rax[44],%rax[45],%rax[46],%rax[47],
     %rax[48],%rax[49],%rax[50],%rax[51],%rax[52],%rax[53],%rax[54],%rax[55],
     %rax[56],%rax[57],%rax[58],%rax[59],%rax[60],%rax[61],%rax[62],%rax[63],
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit];
(* and    %r13,%rax                                #! PC = 0x555555582ce8 *)
mov %rax
    [0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     %rax[8],%rax[9],%rax[10],%rax[11],%rax[12],%rax[13],%rax[14],%rax[15],
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     %rax[40],%rax[41],%rax[42],%rax[43],%rax[44],%rax[45],%rax[46],%rax[47],
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit];
(* xor    %rcx,%rax                                #! PC = 0x555555582ceb *)
adds %dc %rax %rcx %rax;
(* cmp    $0x3,%esi                                #! PC = 0x555555582cee *)
(* cmp 0x3, esi *)
nop;
(* #je     0x555555582d48 <radix_conversions+584>  #! PC = 0x555555582cf1 *)
#je     0x555555582d48 <radix_conversions+584>  #! 0x555555582cf1 = 0x555555582cf1;
(* mov    %rax,%rcx                                #! PC = 0x555555582cf3 *)
mov %rcx %rax;
(* shr    $0x4,%rcx                                #! PC = 0x555555582cf6 *)
mov %rcx
    [%rcx[4],%rcx[5],%rcx[6],%rcx[7],
     %rcx[8],%rcx[9],%rcx[10],%rcx[11],%rcx[12],%rcx[13],%rcx[14],%rcx[15],
     %rcx[16],%rcx[17],%rcx[18],%rcx[19],%rcx[20],%rcx[21],%rcx[22],%rcx[23],
     %rcx[24],%rcx[25],%rcx[26],%rcx[27],%rcx[28],%rcx[29],%rcx[30],%rcx[31],
     %rcx[32],%rcx[33],%rcx[34],%rcx[35],%rcx[36],%rcx[37],%rcx[38],%rcx[39],
     %rcx[40],%rcx[41],%rcx[42],%rcx[43],%rcx[44],%rcx[45],%rcx[46],%rcx[47],
     %rcx[48],%rcx[49],%rcx[50],%rcx[51],%rcx[52],%rcx[53],%rcx[54],%rcx[55],
     %rcx[56],%rcx[57],%rcx[58],%rcx[59],%rcx[60],%rcx[61],%rcx[62],%rcx[63],
     0@bit,0@bit,0@bit,0@bit];
(* and    %r8,%rcx                                 #! PC = 0x555555582cfa *)
mov %rcx
    [0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     %rcx[8],%rcx[9],%rcx[10],%rcx[11],0@bit,0@bit,0@bit,0@bit,
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     %rcx[24],%rcx[25],%rcx[26],%rcx[27],0@bit,0@bit,0@bit,0@bit,
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     %rcx[40],%rcx[41],%rcx[42],%rcx[43],0@bit,0@bit,0@bit,0@bit,
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     %rcx[56],%rcx[57],%rcx[58],%rcx[59],0@bit,0@bit,0@bit,0@bit];
(* xor    %rax,%rcx                                #! PC = 0x555555582cfd *)
adds %dc %rcx %rax %rcx;
(* mov    %rcx,%rax                                #! PC = 0x555555582d00 *)
mov %rax %rcx;
(* shr    $0x4,%rax                                #! PC = 0x555555582d03 *)
mov %rax
    [%rax[4],%rax[5],%rax[6],%rax[7],
     %rax[8],%rax[9],%rax[10],%rax[11],%rax[12],%rax[13],%rax[14],%rax[15],
     %rax[16],%rax[17],%rax[18],%rax[19],%rax[20],%rax[21],%rax[22],%rax[23],
     %rax[24],%rax[25],%rax[26],%rax[27],%rax[28],%rax[29],%rax[30],%rax[31],
     %rax[32],%rax[33],%rax[34],%rax[35],%rax[36],%rax[37],%rax[38],%rax[39],
     %rax[40],%rax[41],%rax[42],%rax[43],%rax[44],%rax[45],%rax[46],%rax[47],
     %rax[48],%rax[49],%rax[50],%rax[51],%rax[52],%rax[53],%rax[54],%rax[55],
     %rax[56],%rax[57],%rax[58],%rax[59],%rax[60],%rax[61],%rax[62],%rax[63],
     0@bit,0@bit,0@bit,0@bit];
(* and    %rdi,%rax                                #! PC = 0x555555582d07 *)
mov %rax
    [0@bit,0@bit,0@bit,0@bit,%rax[4],%rax[5],%rax[6],%rax[7],
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     0@bit,0@bit,0@bit,0@bit,%rax[20],%rax[21],%rax[22],%rax[23],
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     0@bit,0@bit,0@bit,0@bit,%rax[36],%rax[37],%rax[38],%rax[39],
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     0@bit,0@bit,0@bit,0@bit,%rax[52],%rax[53],%rax[54],%rax[55],
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit];
(* xor    %rcx,%rax                                #! PC = 0x555555582d0a *)
adds %dc %rax %rcx %rax;
(* cmp    $0x2,%esi                                #! PC = 0x555555582d0d *)
(* cmp 0x2, esi *)
nop;
(* #je     0x555555582d48 <radix_conversions+584>  #! PC = 0x555555582d10 *)
#je     0x555555582d48 <radix_conversions+584>  #! 0x555555582d10 = 0x555555582d10;
(* mov    %rax,(%rdx)                              #! EA = L0x7ffffff50ce0; PC = 0x555555582d48 *)
mov %L0x7ffffff50ce0 %rax;
(* add    $0x8,%rdx                                #! PC = 0x555555582d4b *)
(* add $0x8, rdx *)
nop;
(* cmp    %rdx,%r12                                #! PC = 0x555555582d4f *)
(* cmp rdx, r12 *)
nop;
(* #jne    0x555555582cb0 <radix_conversions+432>  #! PC = 0x555555582d52 *)
#jne    0x555555582cb0 <radix_conversions+432>  #! 0x555555582d52 = 0x555555582d52;
(* mov    (%rdx),%rax                              #! EA = L0x7ffffff50ce8; Value = 0xa5b44907b4aa1356; PC = 0x555555582cb0 *)
mov %rax %L0x7ffffff50ce8;
(* mov    %rax,%rcx                                #! PC = 0x555555582cb3 *)
mov %rcx %rax;
(* shr    $0x10,%rcx                               #! PC = 0x555555582cb6 *)
mov %rcx
    [%rcx[16],%rcx[17],%rcx[18],%rcx[19],%rcx[20],%rcx[21],%rcx[22],%rcx[23],
     %rcx[24],%rcx[25],%rcx[26],%rcx[27],%rcx[28],%rcx[29],%rcx[30],%rcx[31],
     %rcx[32],%rcx[33],%rcx[34],%rcx[35],%rcx[36],%rcx[37],%rcx[38],%rcx[39],
     %rcx[40],%rcx[41],%rcx[42],%rcx[43],%rcx[44],%rcx[45],%rcx[46],%rcx[47],
     %rcx[48],%rcx[49],%rcx[50],%rcx[51],%rcx[52],%rcx[53],%rcx[54],%rcx[55],
     %rcx[56],%rcx[57],%rcx[58],%rcx[59],%rcx[60],%rcx[61],%rcx[62],%rcx[63],
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit];
(* and    %rbx,%rcx                                #! PC = 0x555555582cba *)
mov %rcx
    [0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     %rcx[32],%rcx[33],%rcx[34],%rcx[35],%rcx[36],%rcx[37],%rcx[38],%rcx[39],
     %rcx[40],%rcx[41],%rcx[42],%rcx[43],%rcx[44],%rcx[45],%rcx[46],%rcx[47],
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit];
(* xor    %rax,%rcx                                #! PC = 0x555555582cbd *)
adds %dc %rcx %rax %rcx;
(* mov    %rcx,%rax                                #! PC = 0x555555582cc0 *)
mov %rax %rcx;
(* shr    $0x10,%rax                               #! PC = 0x555555582cc3 *)
mov %rax
    [%rax[16],%rax[17],%rax[18],%rax[19],%rax[20],%rax[21],%rax[22],%rax[23],
     %rax[24],%rax[25],%rax[26],%rax[27],%rax[28],%rax[29],%rax[30],%rax[31],
     %rax[32],%rax[33],%rax[34],%rax[35],%rax[36],%rax[37],%rax[38],%rax[39],
     %rax[40],%rax[41],%rax[42],%rax[43],%rax[44],%rax[45],%rax[46],%rax[47],
     %rax[48],%rax[49],%rax[50],%rax[51],%rax[52],%rax[53],%rax[54],%rax[55],
     %rax[56],%rax[57],%rax[58],%rax[59],%rax[60],%rax[61],%rax[62],%rax[63],
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit];
(* and    $0xffff0000,%eax                         #! PC = 0x555555582cc7 *)
mov %rax
    [0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     %rax[16],%rax[17],%rax[18],%rax[19],%rax[20],%rax[21],%rax[22],%rax[23],
     %rax[24],%rax[25],%rax[26],%rax[27],%rax[28],%rax[29],%rax[30],%rax[31],
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit];
(* xor    %rcx,%rax                                #! PC = 0x555555582ccc *)
adds %dc %rax %rcx %rax;
(* cmp    $0x4,%esi                                #! PC = 0x555555582ccf *)
(* cmp 0x4, esi *)
nop;
(* #je     0x555555582d48 <radix_conversions+584>  #! PC = 0x555555582cd2 *)
#je     0x555555582d48 <radix_conversions+584>  #! 0x555555582cd2 = 0x555555582cd2;
(* mov    %rax,%rcx                                #! PC = 0x555555582cd4 *)
mov %rcx %rax;
(* shr    $0x8,%rcx                                #! PC = 0x555555582cd7 *)
mov %rcx
    [%rcx[8],%rcx[9],%rcx[10],%rcx[11],%rcx[12],%rcx[13],%rcx[14],%rcx[15],
     %rcx[16],%rcx[17],%rcx[18],%rcx[19],%rcx[20],%rcx[21],%rcx[22],%rcx[23],
     %rcx[24],%rcx[25],%rcx[26],%rcx[27],%rcx[28],%rcx[29],%rcx[30],%rcx[31],
     %rcx[32],%rcx[33],%rcx[34],%rcx[35],%rcx[36],%rcx[37],%rcx[38],%rcx[39],
     %rcx[40],%rcx[41],%rcx[42],%rcx[43],%rcx[44],%rcx[45],%rcx[46],%rcx[47],
     %rcx[48],%rcx[49],%rcx[50],%rcx[51],%rcx[52],%rcx[53],%rcx[54],%rcx[55],
     %rcx[56],%rcx[57],%rcx[58],%rcx[59],%rcx[60],%rcx[61],%rcx[62],%rcx[63],
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit];
(* and    %r14,%rcx                                #! PC = 0x555555582cdb *)
mov %rcx
    [0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     %rcx[16],%rcx[17],%rcx[18],%rcx[19],%rcx[20],%rcx[21],%rcx[22],%rcx[23],
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     %rcx[48],%rcx[49],%rcx[50],%rcx[51],%rcx[52],%rcx[53],%rcx[54],%rcx[55],
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit];
(* xor    %rax,%rcx                                #! PC = 0x555555582cde *)
adds %dc %rcx %rax %rcx;
(* mov    %rcx,%rax                                #! PC = 0x555555582ce1 *)
mov %rax %rcx;
(* shr    $0x8,%rax                                #! PC = 0x555555582ce4 *)
mov %rax
    [%rax[8],%rax[9],%rax[10],%rax[11],%rax[12],%rax[13],%rax[14],%rax[15],
     %rax[16],%rax[17],%rax[18],%rax[19],%rax[20],%rax[21],%rax[22],%rax[23],
     %rax[24],%rax[25],%rax[26],%rax[27],%rax[28],%rax[29],%rax[30],%rax[31],
     %rax[32],%rax[33],%rax[34],%rax[35],%rax[36],%rax[37],%rax[38],%rax[39],
     %rax[40],%rax[41],%rax[42],%rax[43],%rax[44],%rax[45],%rax[46],%rax[47],
     %rax[48],%rax[49],%rax[50],%rax[51],%rax[52],%rax[53],%rax[54],%rax[55],
     %rax[56],%rax[57],%rax[58],%rax[59],%rax[60],%rax[61],%rax[62],%rax[63],
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit];
(* and    %r13,%rax                                #! PC = 0x555555582ce8 *)
mov %rax
    [0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     %rax[8],%rax[9],%rax[10],%rax[11],%rax[12],%rax[13],%rax[14],%rax[15],
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     %rax[40],%rax[41],%rax[42],%rax[43],%rax[44],%rax[45],%rax[46],%rax[47],
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit];
(* xor    %rcx,%rax                                #! PC = 0x555555582ceb *)
adds %dc %rax %rcx %rax;
(* cmp    $0x3,%esi                                #! PC = 0x555555582cee *)
(* cmp 0x3, esi *)
nop;
(* #je     0x555555582d48 <radix_conversions+584>  #! PC = 0x555555582cf1 *)
#je     0x555555582d48 <radix_conversions+584>  #! 0x555555582cf1 = 0x555555582cf1;
(* mov    %rax,%rcx                                #! PC = 0x555555582cf3 *)
mov %rcx %rax;
(* shr    $0x4,%rcx                                #! PC = 0x555555582cf6 *)
mov %rcx
    [%rcx[4],%rcx[5],%rcx[6],%rcx[7],
     %rcx[8],%rcx[9],%rcx[10],%rcx[11],%rcx[12],%rcx[13],%rcx[14],%rcx[15],
     %rcx[16],%rcx[17],%rcx[18],%rcx[19],%rcx[20],%rcx[21],%rcx[22],%rcx[23],
     %rcx[24],%rcx[25],%rcx[26],%rcx[27],%rcx[28],%rcx[29],%rcx[30],%rcx[31],
     %rcx[32],%rcx[33],%rcx[34],%rcx[35],%rcx[36],%rcx[37],%rcx[38],%rcx[39],
     %rcx[40],%rcx[41],%rcx[42],%rcx[43],%rcx[44],%rcx[45],%rcx[46],%rcx[47],
     %rcx[48],%rcx[49],%rcx[50],%rcx[51],%rcx[52],%rcx[53],%rcx[54],%rcx[55],
     %rcx[56],%rcx[57],%rcx[58],%rcx[59],%rcx[60],%rcx[61],%rcx[62],%rcx[63],
     0@bit,0@bit,0@bit,0@bit];
(* and    %r8,%rcx                                 #! PC = 0x555555582cfa *)
mov %rcx
    [0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     %rcx[8],%rcx[9],%rcx[10],%rcx[11],0@bit,0@bit,0@bit,0@bit,
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     %rcx[24],%rcx[25],%rcx[26],%rcx[27],0@bit,0@bit,0@bit,0@bit,
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     %rcx[40],%rcx[41],%rcx[42],%rcx[43],0@bit,0@bit,0@bit,0@bit,
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     %rcx[56],%rcx[57],%rcx[58],%rcx[59],0@bit,0@bit,0@bit,0@bit];
(* xor    %rax,%rcx                                #! PC = 0x555555582cfd *)
adds %dc %rcx %rax %rcx;
(* mov    %rcx,%rax                                #! PC = 0x555555582d00 *)
mov %rax %rcx;
(* shr    $0x4,%rax                                #! PC = 0x555555582d03 *)
mov %rax
    [%rax[4],%rax[5],%rax[6],%rax[7],
     %rax[8],%rax[9],%rax[10],%rax[11],%rax[12],%rax[13],%rax[14],%rax[15],
     %rax[16],%rax[17],%rax[18],%rax[19],%rax[20],%rax[21],%rax[22],%rax[23],
     %rax[24],%rax[25],%rax[26],%rax[27],%rax[28],%rax[29],%rax[30],%rax[31],
     %rax[32],%rax[33],%rax[34],%rax[35],%rax[36],%rax[37],%rax[38],%rax[39],
     %rax[40],%rax[41],%rax[42],%rax[43],%rax[44],%rax[45],%rax[46],%rax[47],
     %rax[48],%rax[49],%rax[50],%rax[51],%rax[52],%rax[53],%rax[54],%rax[55],
     %rax[56],%rax[57],%rax[58],%rax[59],%rax[60],%rax[61],%rax[62],%rax[63],
     0@bit,0@bit,0@bit,0@bit];
(* and    %rdi,%rax                                #! PC = 0x555555582d07 *)
mov %rax
    [0@bit,0@bit,0@bit,0@bit,%rax[4],%rax[5],%rax[6],%rax[7],
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     0@bit,0@bit,0@bit,0@bit,%rax[20],%rax[21],%rax[22],%rax[23],
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     0@bit,0@bit,0@bit,0@bit,%rax[36],%rax[37],%rax[38],%rax[39],
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     0@bit,0@bit,0@bit,0@bit,%rax[52],%rax[53],%rax[54],%rax[55],
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit];
(* xor    %rcx,%rax                                #! PC = 0x555555582d0a *)
adds %dc %rax %rcx %rax;
(* cmp    $0x2,%esi                                #! PC = 0x555555582d0d *)
(* cmp 0x2, esi *)
nop;
(* #je     0x555555582d48 <radix_conversions+584>  #! PC = 0x555555582d10 *)
#je     0x555555582d48 <radix_conversions+584>  #! 0x555555582d10 = 0x555555582d10;
(* mov    %rax,(%rdx)                              #! EA = L0x7ffffff50ce8; PC = 0x555555582d48 *)
mov %L0x7ffffff50ce8 %rax;
(* add    $0x8,%rdx                                #! PC = 0x555555582d4b *)
(* add $0x8, rdx *)
nop;
(* cmp    %rdx,%r12                                #! PC = 0x555555582d4f *)
(* cmp rdx, r12 *)
nop;
(* #jne    0x555555582cb0 <radix_conversions+432>  #! PC = 0x555555582d52 *)
#jne    0x555555582cb0 <radix_conversions+432>  #! 0x555555582d52 = 0x555555582d52;
(* mov    (%rdx),%rax                              #! EA = L0x7ffffff50cf0; Value = 0x9152c0929ec7e287; PC = 0x555555582cb0 *)
mov %rax %L0x7ffffff50cf0;
(* mov    %rax,%rcx                                #! PC = 0x555555582cb3 *)
mov %rcx %rax;
(* shr    $0x10,%rcx                               #! PC = 0x555555582cb6 *)
mov %rcx
    [%rcx[16],%rcx[17],%rcx[18],%rcx[19],%rcx[20],%rcx[21],%rcx[22],%rcx[23],
     %rcx[24],%rcx[25],%rcx[26],%rcx[27],%rcx[28],%rcx[29],%rcx[30],%rcx[31],
     %rcx[32],%rcx[33],%rcx[34],%rcx[35],%rcx[36],%rcx[37],%rcx[38],%rcx[39],
     %rcx[40],%rcx[41],%rcx[42],%rcx[43],%rcx[44],%rcx[45],%rcx[46],%rcx[47],
     %rcx[48],%rcx[49],%rcx[50],%rcx[51],%rcx[52],%rcx[53],%rcx[54],%rcx[55],
     %rcx[56],%rcx[57],%rcx[58],%rcx[59],%rcx[60],%rcx[61],%rcx[62],%rcx[63],
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit];
(* and    %rbx,%rcx                                #! PC = 0x555555582cba *)
mov %rcx
    [0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     %rcx[32],%rcx[33],%rcx[34],%rcx[35],%rcx[36],%rcx[37],%rcx[38],%rcx[39],
     %rcx[40],%rcx[41],%rcx[42],%rcx[43],%rcx[44],%rcx[45],%rcx[46],%rcx[47],
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit];
(* xor    %rax,%rcx                                #! PC = 0x555555582cbd *)
adds %dc %rcx %rax %rcx;
(* mov    %rcx,%rax                                #! PC = 0x555555582cc0 *)
mov %rax %rcx;
(* shr    $0x10,%rax                               #! PC = 0x555555582cc3 *)
mov %rax
    [%rax[16],%rax[17],%rax[18],%rax[19],%rax[20],%rax[21],%rax[22],%rax[23],
     %rax[24],%rax[25],%rax[26],%rax[27],%rax[28],%rax[29],%rax[30],%rax[31],
     %rax[32],%rax[33],%rax[34],%rax[35],%rax[36],%rax[37],%rax[38],%rax[39],
     %rax[40],%rax[41],%rax[42],%rax[43],%rax[44],%rax[45],%rax[46],%rax[47],
     %rax[48],%rax[49],%rax[50],%rax[51],%rax[52],%rax[53],%rax[54],%rax[55],
     %rax[56],%rax[57],%rax[58],%rax[59],%rax[60],%rax[61],%rax[62],%rax[63],
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit];
(* and    $0xffff0000,%eax                         #! PC = 0x555555582cc7 *)
mov %rax
    [0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     %rax[16],%rax[17],%rax[18],%rax[19],%rax[20],%rax[21],%rax[22],%rax[23],
     %rax[24],%rax[25],%rax[26],%rax[27],%rax[28],%rax[29],%rax[30],%rax[31],
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit];
(* xor    %rcx,%rax                                #! PC = 0x555555582ccc *)
adds %dc %rax %rcx %rax;
(* cmp    $0x4,%esi                                #! PC = 0x555555582ccf *)
(* cmp 0x4, esi *)
nop;
(* #je     0x555555582d48 <radix_conversions+584>  #! PC = 0x555555582cd2 *)
#je     0x555555582d48 <radix_conversions+584>  #! 0x555555582cd2 = 0x555555582cd2;
(* mov    %rax,%rcx                                #! PC = 0x555555582cd4 *)
mov %rcx %rax;
(* shr    $0x8,%rcx                                #! PC = 0x555555582cd7 *)
mov %rcx
    [%rcx[8],%rcx[9],%rcx[10],%rcx[11],%rcx[12],%rcx[13],%rcx[14],%rcx[15],
     %rcx[16],%rcx[17],%rcx[18],%rcx[19],%rcx[20],%rcx[21],%rcx[22],%rcx[23],
     %rcx[24],%rcx[25],%rcx[26],%rcx[27],%rcx[28],%rcx[29],%rcx[30],%rcx[31],
     %rcx[32],%rcx[33],%rcx[34],%rcx[35],%rcx[36],%rcx[37],%rcx[38],%rcx[39],
     %rcx[40],%rcx[41],%rcx[42],%rcx[43],%rcx[44],%rcx[45],%rcx[46],%rcx[47],
     %rcx[48],%rcx[49],%rcx[50],%rcx[51],%rcx[52],%rcx[53],%rcx[54],%rcx[55],
     %rcx[56],%rcx[57],%rcx[58],%rcx[59],%rcx[60],%rcx[61],%rcx[62],%rcx[63],
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit];
(* and    %r14,%rcx                                #! PC = 0x555555582cdb *)
mov %rcx
    [0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     %rcx[16],%rcx[17],%rcx[18],%rcx[19],%rcx[20],%rcx[21],%rcx[22],%rcx[23],
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     %rcx[48],%rcx[49],%rcx[50],%rcx[51],%rcx[52],%rcx[53],%rcx[54],%rcx[55],
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit];
(* xor    %rax,%rcx                                #! PC = 0x555555582cde *)
adds %dc %rcx %rax %rcx;
(* mov    %rcx,%rax                                #! PC = 0x555555582ce1 *)
mov %rax %rcx;
(* shr    $0x8,%rax                                #! PC = 0x555555582ce4 *)
mov %rax
    [%rax[8],%rax[9],%rax[10],%rax[11],%rax[12],%rax[13],%rax[14],%rax[15],
     %rax[16],%rax[17],%rax[18],%rax[19],%rax[20],%rax[21],%rax[22],%rax[23],
     %rax[24],%rax[25],%rax[26],%rax[27],%rax[28],%rax[29],%rax[30],%rax[31],
     %rax[32],%rax[33],%rax[34],%rax[35],%rax[36],%rax[37],%rax[38],%rax[39],
     %rax[40],%rax[41],%rax[42],%rax[43],%rax[44],%rax[45],%rax[46],%rax[47],
     %rax[48],%rax[49],%rax[50],%rax[51],%rax[52],%rax[53],%rax[54],%rax[55],
     %rax[56],%rax[57],%rax[58],%rax[59],%rax[60],%rax[61],%rax[62],%rax[63],
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit];
(* and    %r13,%rax                                #! PC = 0x555555582ce8 *)
mov %rax
    [0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     %rax[8],%rax[9],%rax[10],%rax[11],%rax[12],%rax[13],%rax[14],%rax[15],
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     %rax[40],%rax[41],%rax[42],%rax[43],%rax[44],%rax[45],%rax[46],%rax[47],
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit];
(* xor    %rcx,%rax                                #! PC = 0x555555582ceb *)
adds %dc %rax %rcx %rax;
(* cmp    $0x3,%esi                                #! PC = 0x555555582cee *)
(* cmp 0x3, esi *)
nop;
(* #je     0x555555582d48 <radix_conversions+584>  #! PC = 0x555555582cf1 *)
#je     0x555555582d48 <radix_conversions+584>  #! 0x555555582cf1 = 0x555555582cf1;
(* mov    %rax,%rcx                                #! PC = 0x555555582cf3 *)
mov %rcx %rax;
(* shr    $0x4,%rcx                                #! PC = 0x555555582cf6 *)
mov %rcx
    [%rcx[4],%rcx[5],%rcx[6],%rcx[7],
     %rcx[8],%rcx[9],%rcx[10],%rcx[11],%rcx[12],%rcx[13],%rcx[14],%rcx[15],
     %rcx[16],%rcx[17],%rcx[18],%rcx[19],%rcx[20],%rcx[21],%rcx[22],%rcx[23],
     %rcx[24],%rcx[25],%rcx[26],%rcx[27],%rcx[28],%rcx[29],%rcx[30],%rcx[31],
     %rcx[32],%rcx[33],%rcx[34],%rcx[35],%rcx[36],%rcx[37],%rcx[38],%rcx[39],
     %rcx[40],%rcx[41],%rcx[42],%rcx[43],%rcx[44],%rcx[45],%rcx[46],%rcx[47],
     %rcx[48],%rcx[49],%rcx[50],%rcx[51],%rcx[52],%rcx[53],%rcx[54],%rcx[55],
     %rcx[56],%rcx[57],%rcx[58],%rcx[59],%rcx[60],%rcx[61],%rcx[62],%rcx[63],
     0@bit,0@bit,0@bit,0@bit];
(* and    %r8,%rcx                                 #! PC = 0x555555582cfa *)
mov %rcx
    [0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     %rcx[8],%rcx[9],%rcx[10],%rcx[11],0@bit,0@bit,0@bit,0@bit,
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     %rcx[24],%rcx[25],%rcx[26],%rcx[27],0@bit,0@bit,0@bit,0@bit,
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     %rcx[40],%rcx[41],%rcx[42],%rcx[43],0@bit,0@bit,0@bit,0@bit,
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     %rcx[56],%rcx[57],%rcx[58],%rcx[59],0@bit,0@bit,0@bit,0@bit];
(* xor    %rax,%rcx                                #! PC = 0x555555582cfd *)
adds %dc %rcx %rax %rcx;
(* mov    %rcx,%rax                                #! PC = 0x555555582d00 *)
mov %rax %rcx;
(* shr    $0x4,%rax                                #! PC = 0x555555582d03 *)
mov %rax
    [%rax[4],%rax[5],%rax[6],%rax[7],
     %rax[8],%rax[9],%rax[10],%rax[11],%rax[12],%rax[13],%rax[14],%rax[15],
     %rax[16],%rax[17],%rax[18],%rax[19],%rax[20],%rax[21],%rax[22],%rax[23],
     %rax[24],%rax[25],%rax[26],%rax[27],%rax[28],%rax[29],%rax[30],%rax[31],
     %rax[32],%rax[33],%rax[34],%rax[35],%rax[36],%rax[37],%rax[38],%rax[39],
     %rax[40],%rax[41],%rax[42],%rax[43],%rax[44],%rax[45],%rax[46],%rax[47],
     %rax[48],%rax[49],%rax[50],%rax[51],%rax[52],%rax[53],%rax[54],%rax[55],
     %rax[56],%rax[57],%rax[58],%rax[59],%rax[60],%rax[61],%rax[62],%rax[63],
     0@bit,0@bit,0@bit,0@bit];
(* and    %rdi,%rax                                #! PC = 0x555555582d07 *)
mov %rax
    [0@bit,0@bit,0@bit,0@bit,%rax[4],%rax[5],%rax[6],%rax[7],
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     0@bit,0@bit,0@bit,0@bit,%rax[20],%rax[21],%rax[22],%rax[23],
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     0@bit,0@bit,0@bit,0@bit,%rax[36],%rax[37],%rax[38],%rax[39],
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     0@bit,0@bit,0@bit,0@bit,%rax[52],%rax[53],%rax[54],%rax[55],
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit];
(* xor    %rcx,%rax                                #! PC = 0x555555582d0a *)
adds %dc %rax %rcx %rax;
(* cmp    $0x2,%esi                                #! PC = 0x555555582d0d *)
(* cmp 0x2, esi *)
nop;
(* #je     0x555555582d48 <radix_conversions+584>  #! PC = 0x555555582d10 *)
#je     0x555555582d48 <radix_conversions+584>  #! 0x555555582d10 = 0x555555582d10;
(* mov    %rax,(%rdx)                              #! EA = L0x7ffffff50cf0; PC = 0x555555582d48 *)
mov %L0x7ffffff50cf0 %rax;
(* add    $0x8,%rdx                                #! PC = 0x555555582d4b *)
(* add $0x8, rdx *)
nop;
(* cmp    %rdx,%r12                                #! PC = 0x555555582d4f *)
(* cmp rdx, r12 *)
nop;
(* #jne    0x555555582cb0 <radix_conversions+432>  #! PC = 0x555555582d52 *)
#jne    0x555555582cb0 <radix_conversions+432>  #! 0x555555582d52 = 0x555555582d52;
(* mov    (%rdx),%rax                              #! EA = L0x7ffffff50cf8; Value = 0xcaef98bbc6466958; PC = 0x555555582cb0 *)
mov %rax %L0x7ffffff50cf8;
(* mov    %rax,%rcx                                #! PC = 0x555555582cb3 *)
mov %rcx %rax;
(* shr    $0x10,%rcx                               #! PC = 0x555555582cb6 *)
mov %rcx
    [%rcx[16],%rcx[17],%rcx[18],%rcx[19],%rcx[20],%rcx[21],%rcx[22],%rcx[23],
     %rcx[24],%rcx[25],%rcx[26],%rcx[27],%rcx[28],%rcx[29],%rcx[30],%rcx[31],
     %rcx[32],%rcx[33],%rcx[34],%rcx[35],%rcx[36],%rcx[37],%rcx[38],%rcx[39],
     %rcx[40],%rcx[41],%rcx[42],%rcx[43],%rcx[44],%rcx[45],%rcx[46],%rcx[47],
     %rcx[48],%rcx[49],%rcx[50],%rcx[51],%rcx[52],%rcx[53],%rcx[54],%rcx[55],
     %rcx[56],%rcx[57],%rcx[58],%rcx[59],%rcx[60],%rcx[61],%rcx[62],%rcx[63],
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit];
(* and    %rbx,%rcx                                #! PC = 0x555555582cba *)
mov %rcx
    [0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     %rcx[32],%rcx[33],%rcx[34],%rcx[35],%rcx[36],%rcx[37],%rcx[38],%rcx[39],
     %rcx[40],%rcx[41],%rcx[42],%rcx[43],%rcx[44],%rcx[45],%rcx[46],%rcx[47],
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit];
(* xor    %rax,%rcx                                #! PC = 0x555555582cbd *)
adds %dc %rcx %rax %rcx;
(* mov    %rcx,%rax                                #! PC = 0x555555582cc0 *)
mov %rax %rcx;
(* shr    $0x10,%rax                               #! PC = 0x555555582cc3 *)
mov %rax
    [%rax[16],%rax[17],%rax[18],%rax[19],%rax[20],%rax[21],%rax[22],%rax[23],
     %rax[24],%rax[25],%rax[26],%rax[27],%rax[28],%rax[29],%rax[30],%rax[31],
     %rax[32],%rax[33],%rax[34],%rax[35],%rax[36],%rax[37],%rax[38],%rax[39],
     %rax[40],%rax[41],%rax[42],%rax[43],%rax[44],%rax[45],%rax[46],%rax[47],
     %rax[48],%rax[49],%rax[50],%rax[51],%rax[52],%rax[53],%rax[54],%rax[55],
     %rax[56],%rax[57],%rax[58],%rax[59],%rax[60],%rax[61],%rax[62],%rax[63],
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit];
(* and    $0xffff0000,%eax                         #! PC = 0x555555582cc7 *)
mov %rax
    [0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     %rax[16],%rax[17],%rax[18],%rax[19],%rax[20],%rax[21],%rax[22],%rax[23],
     %rax[24],%rax[25],%rax[26],%rax[27],%rax[28],%rax[29],%rax[30],%rax[31],
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit];
(* xor    %rcx,%rax                                #! PC = 0x555555582ccc *)
adds %dc %rax %rcx %rax;
(* cmp    $0x4,%esi                                #! PC = 0x555555582ccf *)
(* cmp 0x4, esi *)
nop;
(* #je     0x555555582d48 <radix_conversions+584>  #! PC = 0x555555582cd2 *)
#je     0x555555582d48 <radix_conversions+584>  #! 0x555555582cd2 = 0x555555582cd2;
(* mov    %rax,%rcx                                #! PC = 0x555555582cd4 *)
mov %rcx %rax;
(* shr    $0x8,%rcx                                #! PC = 0x555555582cd7 *)
mov %rcx
    [%rcx[8],%rcx[9],%rcx[10],%rcx[11],%rcx[12],%rcx[13],%rcx[14],%rcx[15],
     %rcx[16],%rcx[17],%rcx[18],%rcx[19],%rcx[20],%rcx[21],%rcx[22],%rcx[23],
     %rcx[24],%rcx[25],%rcx[26],%rcx[27],%rcx[28],%rcx[29],%rcx[30],%rcx[31],
     %rcx[32],%rcx[33],%rcx[34],%rcx[35],%rcx[36],%rcx[37],%rcx[38],%rcx[39],
     %rcx[40],%rcx[41],%rcx[42],%rcx[43],%rcx[44],%rcx[45],%rcx[46],%rcx[47],
     %rcx[48],%rcx[49],%rcx[50],%rcx[51],%rcx[52],%rcx[53],%rcx[54],%rcx[55],
     %rcx[56],%rcx[57],%rcx[58],%rcx[59],%rcx[60],%rcx[61],%rcx[62],%rcx[63],
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit];
(* and    %r14,%rcx                                #! PC = 0x555555582cdb *)
mov %rcx
    [0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     %rcx[16],%rcx[17],%rcx[18],%rcx[19],%rcx[20],%rcx[21],%rcx[22],%rcx[23],
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     %rcx[48],%rcx[49],%rcx[50],%rcx[51],%rcx[52],%rcx[53],%rcx[54],%rcx[55],
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit];
(* xor    %rax,%rcx                                #! PC = 0x555555582cde *)
adds %dc %rcx %rax %rcx;
(* mov    %rcx,%rax                                #! PC = 0x555555582ce1 *)
mov %rax %rcx;
(* shr    $0x8,%rax                                #! PC = 0x555555582ce4 *)
mov %rax
    [%rax[8],%rax[9],%rax[10],%rax[11],%rax[12],%rax[13],%rax[14],%rax[15],
     %rax[16],%rax[17],%rax[18],%rax[19],%rax[20],%rax[21],%rax[22],%rax[23],
     %rax[24],%rax[25],%rax[26],%rax[27],%rax[28],%rax[29],%rax[30],%rax[31],
     %rax[32],%rax[33],%rax[34],%rax[35],%rax[36],%rax[37],%rax[38],%rax[39],
     %rax[40],%rax[41],%rax[42],%rax[43],%rax[44],%rax[45],%rax[46],%rax[47],
     %rax[48],%rax[49],%rax[50],%rax[51],%rax[52],%rax[53],%rax[54],%rax[55],
     %rax[56],%rax[57],%rax[58],%rax[59],%rax[60],%rax[61],%rax[62],%rax[63],
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit];
(* and    %r13,%rax                                #! PC = 0x555555582ce8 *)
mov %rax
    [0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     %rax[8],%rax[9],%rax[10],%rax[11],%rax[12],%rax[13],%rax[14],%rax[15],
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     %rax[40],%rax[41],%rax[42],%rax[43],%rax[44],%rax[45],%rax[46],%rax[47],
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit];
(* xor    %rcx,%rax                                #! PC = 0x555555582ceb *)
adds %dc %rax %rcx %rax;
(* cmp    $0x3,%esi                                #! PC = 0x555555582cee *)
(* cmp 0x3, esi *)
nop;
(* #je     0x555555582d48 <radix_conversions+584>  #! PC = 0x555555582cf1 *)
#je     0x555555582d48 <radix_conversions+584>  #! 0x555555582cf1 = 0x555555582cf1;
(* mov    %rax,%rcx                                #! PC = 0x555555582cf3 *)
mov %rcx %rax;
(* shr    $0x4,%rcx                                #! PC = 0x555555582cf6 *)
mov %rcx
    [%rcx[4],%rcx[5],%rcx[6],%rcx[7],
     %rcx[8],%rcx[9],%rcx[10],%rcx[11],%rcx[12],%rcx[13],%rcx[14],%rcx[15],
     %rcx[16],%rcx[17],%rcx[18],%rcx[19],%rcx[20],%rcx[21],%rcx[22],%rcx[23],
     %rcx[24],%rcx[25],%rcx[26],%rcx[27],%rcx[28],%rcx[29],%rcx[30],%rcx[31],
     %rcx[32],%rcx[33],%rcx[34],%rcx[35],%rcx[36],%rcx[37],%rcx[38],%rcx[39],
     %rcx[40],%rcx[41],%rcx[42],%rcx[43],%rcx[44],%rcx[45],%rcx[46],%rcx[47],
     %rcx[48],%rcx[49],%rcx[50],%rcx[51],%rcx[52],%rcx[53],%rcx[54],%rcx[55],
     %rcx[56],%rcx[57],%rcx[58],%rcx[59],%rcx[60],%rcx[61],%rcx[62],%rcx[63],
     0@bit,0@bit,0@bit,0@bit];
(* and    %r8,%rcx                                 #! PC = 0x555555582cfa *)
mov %rcx
    [0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     %rcx[8],%rcx[9],%rcx[10],%rcx[11],0@bit,0@bit,0@bit,0@bit,
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     %rcx[24],%rcx[25],%rcx[26],%rcx[27],0@bit,0@bit,0@bit,0@bit,
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     %rcx[40],%rcx[41],%rcx[42],%rcx[43],0@bit,0@bit,0@bit,0@bit,
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     %rcx[56],%rcx[57],%rcx[58],%rcx[59],0@bit,0@bit,0@bit,0@bit];
(* xor    %rax,%rcx                                #! PC = 0x555555582cfd *)
adds %dc %rcx %rax %rcx;
(* mov    %rcx,%rax                                #! PC = 0x555555582d00 *)
mov %rax %rcx;
(* shr    $0x4,%rax                                #! PC = 0x555555582d03 *)
mov %rax
    [%rax[4],%rax[5],%rax[6],%rax[7],
     %rax[8],%rax[9],%rax[10],%rax[11],%rax[12],%rax[13],%rax[14],%rax[15],
     %rax[16],%rax[17],%rax[18],%rax[19],%rax[20],%rax[21],%rax[22],%rax[23],
     %rax[24],%rax[25],%rax[26],%rax[27],%rax[28],%rax[29],%rax[30],%rax[31],
     %rax[32],%rax[33],%rax[34],%rax[35],%rax[36],%rax[37],%rax[38],%rax[39],
     %rax[40],%rax[41],%rax[42],%rax[43],%rax[44],%rax[45],%rax[46],%rax[47],
     %rax[48],%rax[49],%rax[50],%rax[51],%rax[52],%rax[53],%rax[54],%rax[55],
     %rax[56],%rax[57],%rax[58],%rax[59],%rax[60],%rax[61],%rax[62],%rax[63],
     0@bit,0@bit,0@bit,0@bit];
(* and    %rdi,%rax                                #! PC = 0x555555582d07 *)
mov %rax
    [0@bit,0@bit,0@bit,0@bit,%rax[4],%rax[5],%rax[6],%rax[7],
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     0@bit,0@bit,0@bit,0@bit,%rax[20],%rax[21],%rax[22],%rax[23],
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     0@bit,0@bit,0@bit,0@bit,%rax[36],%rax[37],%rax[38],%rax[39],
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     0@bit,0@bit,0@bit,0@bit,%rax[52],%rax[53],%rax[54],%rax[55],
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit];
(* xor    %rcx,%rax                                #! PC = 0x555555582d0a *)
adds %dc %rax %rcx %rax;
(* cmp    $0x2,%esi                                #! PC = 0x555555582d0d *)
(* cmp 0x2, esi *)
nop;
(* #je     0x555555582d48 <radix_conversions+584>  #! PC = 0x555555582d10 *)
#je     0x555555582d48 <radix_conversions+584>  #! 0x555555582d10 = 0x555555582d10;
(* mov    %rax,(%rdx)                              #! EA = L0x7ffffff50cf8; PC = 0x555555582d48 *)
mov %L0x7ffffff50cf8 %rax;
(* add    $0x8,%rdx                                #! PC = 0x555555582d4b *)
(* add $0x8, rdx *)
nop;
(* cmp    %rdx,%r12                                #! PC = 0x555555582d4f *)
(* cmp rdx, r12 *)
nop;
(* #jne    0x555555582cb0 <radix_conversions+432>  #! PC = 0x555555582d52 *)
#jne    0x555555582cb0 <radix_conversions+432>  #! 0x555555582d52 = 0x555555582d52;


(****************
  NOTE: end of 3rd radix conversion. obtain 8 degree-8 polynomials
 ****************)

ghost X2@uint64,F20@uint16,F21@uint16,F22@uint16,F23@uint16,F24@uint16,F25@uint16,F26@uint16,F27@uint16:
X2 = Y1**2 + Y1 /\
F20 =
poly z [%L0x7ffffff50ca0[0],%L0x7ffffff50ca8[0],%L0x7ffffff50cb0[0],
        %L0x7ffffff50cb8[0],%L0x7ffffff50cc0[0],%L0x7ffffff50cc8[0],
        %L0x7ffffff50cd0[0],%L0x7ffffff50cd8[0],%L0x7ffffff50ce0[0],
        %L0x7ffffff50ce8[0],%L0x7ffffff50cf0[0],%L0x7ffffff50cf8[0]]*X2**0+
poly z [%L0x7ffffff50ca0[8],%L0x7ffffff50ca8[8],%L0x7ffffff50cb0[8],
        %L0x7ffffff50cb8[8],%L0x7ffffff50cc0[8],%L0x7ffffff50cc8[8],
        %L0x7ffffff50cd0[8],%L0x7ffffff50cd8[8],%L0x7ffffff50ce0[8],
        %L0x7ffffff50ce8[8],%L0x7ffffff50cf0[8],%L0x7ffffff50cf8[8]]*X2**1+
poly z [%L0x7ffffff50ca0[16],%L0x7ffffff50ca8[16],%L0x7ffffff50cb0[16],
        %L0x7ffffff50cb8[16],%L0x7ffffff50cc0[16],%L0x7ffffff50cc8[16],
        %L0x7ffffff50cd0[16],%L0x7ffffff50cd8[16],%L0x7ffffff50ce0[16],
        %L0x7ffffff50ce8[16],%L0x7ffffff50cf0[16],%L0x7ffffff50cf8[16]]*X2**2+
poly z [%L0x7ffffff50ca0[24],%L0x7ffffff50ca8[24],%L0x7ffffff50cb0[24],
        %L0x7ffffff50cb8[24],%L0x7ffffff50cc0[24],%L0x7ffffff50cc8[24],
        %L0x7ffffff50cd0[24],%L0x7ffffff50cd8[24],%L0x7ffffff50ce0[24],
        %L0x7ffffff50ce8[24],%L0x7ffffff50cf0[24],%L0x7ffffff50cf8[24]]*X2**3+
poly z [%L0x7ffffff50ca0[32],%L0x7ffffff50ca8[32],%L0x7ffffff50cb0[32],
        %L0x7ffffff50cb8[32],%L0x7ffffff50cc0[32],%L0x7ffffff50cc8[32],
        %L0x7ffffff50cd0[32],%L0x7ffffff50cd8[32],%L0x7ffffff50ce0[32],
        %L0x7ffffff50ce8[32],%L0x7ffffff50cf0[32],%L0x7ffffff50cf8[32]]*X2**4+
poly z [%L0x7ffffff50ca0[40],%L0x7ffffff50ca8[40],%L0x7ffffff50cb0[40],
        %L0x7ffffff50cb8[40],%L0x7ffffff50cc0[40],%L0x7ffffff50cc8[40],
        %L0x7ffffff50cd0[40],%L0x7ffffff50cd8[40],%L0x7ffffff50ce0[40],
        %L0x7ffffff50ce8[40],%L0x7ffffff50cf0[40],%L0x7ffffff50cf8[40]]*X2**5+
poly z [%L0x7ffffff50ca0[48],%L0x7ffffff50ca8[48],%L0x7ffffff50cb0[48],
        %L0x7ffffff50cb8[48],%L0x7ffffff50cc0[48],%L0x7ffffff50cc8[48],
        %L0x7ffffff50cd0[48],%L0x7ffffff50cd8[48],%L0x7ffffff50ce0[48],
        %L0x7ffffff50ce8[48],%L0x7ffffff50cf0[48],%L0x7ffffff50cf8[48]]*X2**6+
poly z [%L0x7ffffff50ca0[56],%L0x7ffffff50ca8[56],%L0x7ffffff50cb0[56],
        %L0x7ffffff50cb8[56],%L0x7ffffff50cc0[56],%L0x7ffffff50cc8[56],
        %L0x7ffffff50cd0[56],%L0x7ffffff50cd8[56],%L0x7ffffff50ce0[56],
        %L0x7ffffff50ce8[56],%L0x7ffffff50cf0[56],%L0x7ffffff50cf8[56]]*X2**7
 /\
F21 =
poly z [%L0x7ffffff50ca0[1],%L0x7ffffff50ca8[1],%L0x7ffffff50cb0[1],
        %L0x7ffffff50cb8[1],%L0x7ffffff50cc0[1],%L0x7ffffff50cc8[1],
        %L0x7ffffff50cd0[1],%L0x7ffffff50cd8[1],%L0x7ffffff50ce0[1],
        %L0x7ffffff50ce8[1],%L0x7ffffff50cf0[1],%L0x7ffffff50cf8[1]]*X2**0+
poly z [%L0x7ffffff50ca0[9],%L0x7ffffff50ca8[9],%L0x7ffffff50cb0[9],
        %L0x7ffffff50cb8[9],%L0x7ffffff50cc0[9],%L0x7ffffff50cc8[9],
        %L0x7ffffff50cd0[9],%L0x7ffffff50cd8[9],%L0x7ffffff50ce0[9],
        %L0x7ffffff50ce8[9],%L0x7ffffff50cf0[9],%L0x7ffffff50cf8[9]]*X2**1+
poly z [%L0x7ffffff50ca0[17],%L0x7ffffff50ca8[17],%L0x7ffffff50cb0[17],
        %L0x7ffffff50cb8[17],%L0x7ffffff50cc0[17],%L0x7ffffff50cc8[17],
        %L0x7ffffff50cd0[17],%L0x7ffffff50cd8[17],%L0x7ffffff50ce0[17],
        %L0x7ffffff50ce8[17],%L0x7ffffff50cf0[17],%L0x7ffffff50cf8[17]]*X2**2+
poly z [%L0x7ffffff50ca0[25],%L0x7ffffff50ca8[25],%L0x7ffffff50cb0[25],
        %L0x7ffffff50cb8[25],%L0x7ffffff50cc0[25],%L0x7ffffff50cc8[25],
        %L0x7ffffff50cd0[25],%L0x7ffffff50cd8[25],%L0x7ffffff50ce0[25],
        %L0x7ffffff50ce8[25],%L0x7ffffff50cf0[25],%L0x7ffffff50cf8[25]]*X2**3+
poly z [%L0x7ffffff50ca0[33],%L0x7ffffff50ca8[33],%L0x7ffffff50cb0[33],
        %L0x7ffffff50cb8[33],%L0x7ffffff50cc0[33],%L0x7ffffff50cc8[33],
        %L0x7ffffff50cd0[33],%L0x7ffffff50cd8[33],%L0x7ffffff50ce0[33],
        %L0x7ffffff50ce8[33],%L0x7ffffff50cf0[33],%L0x7ffffff50cf8[33]]*X2**4+
poly z [%L0x7ffffff50ca0[41],%L0x7ffffff50ca8[41],%L0x7ffffff50cb0[41],
        %L0x7ffffff50cb8[41],%L0x7ffffff50cc0[41],%L0x7ffffff50cc8[41],
        %L0x7ffffff50cd0[41],%L0x7ffffff50cd8[41],%L0x7ffffff50ce0[41],
        %L0x7ffffff50ce8[41],%L0x7ffffff50cf0[41],%L0x7ffffff50cf8[41]]*X2**5+
poly z [%L0x7ffffff50ca0[49],%L0x7ffffff50ca8[49],%L0x7ffffff50cb0[49],
        %L0x7ffffff50cb8[49],%L0x7ffffff50cc0[49],%L0x7ffffff50cc8[49],
        %L0x7ffffff50cd0[49],%L0x7ffffff50cd8[49],%L0x7ffffff50ce0[49],
        %L0x7ffffff50ce8[49],%L0x7ffffff50cf0[49],%L0x7ffffff50cf8[49]]*X2**6+
poly z [%L0x7ffffff50ca0[57],%L0x7ffffff50ca8[57],%L0x7ffffff50cb0[57],
        %L0x7ffffff50cb8[57],%L0x7ffffff50cc0[57],%L0x7ffffff50cc8[57],
        %L0x7ffffff50cd0[57],%L0x7ffffff50cd8[57],%L0x7ffffff50ce0[57],
        %L0x7ffffff50ce8[57],%L0x7ffffff50cf0[57],%L0x7ffffff50cf8[57]]*X2**7
 /\
F22 =
poly z [%L0x7ffffff50ca0[2],%L0x7ffffff50ca8[2],%L0x7ffffff50cb0[2],
        %L0x7ffffff50cb8[2],%L0x7ffffff50cc0[2],%L0x7ffffff50cc8[2],
        %L0x7ffffff50cd0[2],%L0x7ffffff50cd8[2],%L0x7ffffff50ce0[2],
        %L0x7ffffff50ce8[2],%L0x7ffffff50cf0[2],%L0x7ffffff50cf8[2]]*X2**0+
poly z [%L0x7ffffff50ca0[10],%L0x7ffffff50ca8[10],%L0x7ffffff50cb0[10],
        %L0x7ffffff50cb8[10],%L0x7ffffff50cc0[10],%L0x7ffffff50cc8[10],
        %L0x7ffffff50cd0[10],%L0x7ffffff50cd8[10],%L0x7ffffff50ce0[10],
        %L0x7ffffff50ce8[10],%L0x7ffffff50cf0[10],%L0x7ffffff50cf8[10]]*X2**1+
poly z [%L0x7ffffff50ca0[18],%L0x7ffffff50ca8[18],%L0x7ffffff50cb0[18],
        %L0x7ffffff50cb8[18],%L0x7ffffff50cc0[18],%L0x7ffffff50cc8[18],
        %L0x7ffffff50cd0[18],%L0x7ffffff50cd8[18],%L0x7ffffff50ce0[18],
        %L0x7ffffff50ce8[18],%L0x7ffffff50cf0[18],%L0x7ffffff50cf8[18]]*X2**2+
poly z [%L0x7ffffff50ca0[26],%L0x7ffffff50ca8[26],%L0x7ffffff50cb0[26],
        %L0x7ffffff50cb8[26],%L0x7ffffff50cc0[26],%L0x7ffffff50cc8[26],
        %L0x7ffffff50cd0[26],%L0x7ffffff50cd8[26],%L0x7ffffff50ce0[26],
        %L0x7ffffff50ce8[26],%L0x7ffffff50cf0[26],%L0x7ffffff50cf8[26]]*X2**3+
poly z [%L0x7ffffff50ca0[34],%L0x7ffffff50ca8[34],%L0x7ffffff50cb0[34],
        %L0x7ffffff50cb8[34],%L0x7ffffff50cc0[34],%L0x7ffffff50cc8[34],
        %L0x7ffffff50cd0[34],%L0x7ffffff50cd8[34],%L0x7ffffff50ce0[34],
        %L0x7ffffff50ce8[34],%L0x7ffffff50cf0[34],%L0x7ffffff50cf8[34]]*X2**4+
poly z [%L0x7ffffff50ca0[42],%L0x7ffffff50ca8[42],%L0x7ffffff50cb0[42],
        %L0x7ffffff50cb8[42],%L0x7ffffff50cc0[42],%L0x7ffffff50cc8[42],
        %L0x7ffffff50cd0[42],%L0x7ffffff50cd8[42],%L0x7ffffff50ce0[42],
        %L0x7ffffff50ce8[42],%L0x7ffffff50cf0[42],%L0x7ffffff50cf8[42]]*X2**5+
poly z [%L0x7ffffff50ca0[50],%L0x7ffffff50ca8[50],%L0x7ffffff50cb0[50],
        %L0x7ffffff50cb8[50],%L0x7ffffff50cc0[50],%L0x7ffffff50cc8[50],
        %L0x7ffffff50cd0[50],%L0x7ffffff50cd8[50],%L0x7ffffff50ce0[50],
        %L0x7ffffff50ce8[50],%L0x7ffffff50cf0[50],%L0x7ffffff50cf8[50]]*X2**6+
poly z [%L0x7ffffff50ca0[58],%L0x7ffffff50ca8[58],%L0x7ffffff50cb0[58],
        %L0x7ffffff50cb8[58],%L0x7ffffff50cc0[58],%L0x7ffffff50cc8[58],
        %L0x7ffffff50cd0[58],%L0x7ffffff50cd8[58],%L0x7ffffff50ce0[58],
        %L0x7ffffff50ce8[58],%L0x7ffffff50cf0[58],%L0x7ffffff50cf8[58]]*X2**7
 /\
F23 =
poly z [%L0x7ffffff50ca0[3],%L0x7ffffff50ca8[3],%L0x7ffffff50cb0[3],
        %L0x7ffffff50cb8[3],%L0x7ffffff50cc0[3],%L0x7ffffff50cc8[3],
        %L0x7ffffff50cd0[3],%L0x7ffffff50cd8[3],%L0x7ffffff50ce0[3],
        %L0x7ffffff50ce8[3],%L0x7ffffff50cf0[3],%L0x7ffffff50cf8[3]]*X2**0+
poly z [%L0x7ffffff50ca0[11],%L0x7ffffff50ca8[11],%L0x7ffffff50cb0[11],
        %L0x7ffffff50cb8[11],%L0x7ffffff50cc0[11],%L0x7ffffff50cc8[11],
        %L0x7ffffff50cd0[11],%L0x7ffffff50cd8[11],%L0x7ffffff50ce0[11],
        %L0x7ffffff50ce8[11],%L0x7ffffff50cf0[11],%L0x7ffffff50cf8[11]]*X2**1+
poly z [%L0x7ffffff50ca0[19],%L0x7ffffff50ca8[19],%L0x7ffffff50cb0[19],
        %L0x7ffffff50cb8[19],%L0x7ffffff50cc0[19],%L0x7ffffff50cc8[19],
        %L0x7ffffff50cd0[19],%L0x7ffffff50cd8[19],%L0x7ffffff50ce0[19],
        %L0x7ffffff50ce8[19],%L0x7ffffff50cf0[19],%L0x7ffffff50cf8[19]]*X2**2+
poly z [%L0x7ffffff50ca0[27],%L0x7ffffff50ca8[27],%L0x7ffffff50cb0[27],
        %L0x7ffffff50cb8[27],%L0x7ffffff50cc0[27],%L0x7ffffff50cc8[27],
        %L0x7ffffff50cd0[27],%L0x7ffffff50cd8[27],%L0x7ffffff50ce0[27],
        %L0x7ffffff50ce8[27],%L0x7ffffff50cf0[27],%L0x7ffffff50cf8[27]]*X2**3+
poly z [%L0x7ffffff50ca0[35],%L0x7ffffff50ca8[35],%L0x7ffffff50cb0[35],
        %L0x7ffffff50cb8[35],%L0x7ffffff50cc0[35],%L0x7ffffff50cc8[35],
        %L0x7ffffff50cd0[35],%L0x7ffffff50cd8[35],%L0x7ffffff50ce0[35],
        %L0x7ffffff50ce8[35],%L0x7ffffff50cf0[35],%L0x7ffffff50cf8[35]]*X2**4+
poly z [%L0x7ffffff50ca0[43],%L0x7ffffff50ca8[43],%L0x7ffffff50cb0[43],
        %L0x7ffffff50cb8[43],%L0x7ffffff50cc0[43],%L0x7ffffff50cc8[43],
        %L0x7ffffff50cd0[43],%L0x7ffffff50cd8[43],%L0x7ffffff50ce0[43],
        %L0x7ffffff50ce8[43],%L0x7ffffff50cf0[43],%L0x7ffffff50cf8[43]]*X2**5+
poly z [%L0x7ffffff50ca0[51],%L0x7ffffff50ca8[51],%L0x7ffffff50cb0[51],
        %L0x7ffffff50cb8[51],%L0x7ffffff50cc0[51],%L0x7ffffff50cc8[51],
        %L0x7ffffff50cd0[51],%L0x7ffffff50cd8[51],%L0x7ffffff50ce0[51],
        %L0x7ffffff50ce8[51],%L0x7ffffff50cf0[51],%L0x7ffffff50cf8[51]]*X2**6+
poly z [%L0x7ffffff50ca0[59],%L0x7ffffff50ca8[59],%L0x7ffffff50cb0[59],
        %L0x7ffffff50cb8[59],%L0x7ffffff50cc0[59],%L0x7ffffff50cc8[59],
        %L0x7ffffff50cd0[59],%L0x7ffffff50cd8[59],%L0x7ffffff50ce0[59],
        %L0x7ffffff50ce8[59],%L0x7ffffff50cf0[59],%L0x7ffffff50cf8[59]]*X2**7
 /\
F24 =
poly z [%L0x7ffffff50ca0[4],%L0x7ffffff50ca8[4],%L0x7ffffff50cb0[4],
        %L0x7ffffff50cb8[4],%L0x7ffffff50cc0[4],%L0x7ffffff50cc8[4],
        %L0x7ffffff50cd0[4],%L0x7ffffff50cd8[4],%L0x7ffffff50ce0[4],
        %L0x7ffffff50ce8[4],%L0x7ffffff50cf0[4],%L0x7ffffff50cf8[4]]*X2**0+
poly z [%L0x7ffffff50ca0[12],%L0x7ffffff50ca8[12],%L0x7ffffff50cb0[12],
        %L0x7ffffff50cb8[12],%L0x7ffffff50cc0[12],%L0x7ffffff50cc8[12],
        %L0x7ffffff50cd0[12],%L0x7ffffff50cd8[12],%L0x7ffffff50ce0[12],
        %L0x7ffffff50ce8[12],%L0x7ffffff50cf0[12],%L0x7ffffff50cf8[12]]*X2**1+
poly z [%L0x7ffffff50ca0[20],%L0x7ffffff50ca8[20],%L0x7ffffff50cb0[20],
        %L0x7ffffff50cb8[20],%L0x7ffffff50cc0[20],%L0x7ffffff50cc8[20],
        %L0x7ffffff50cd0[20],%L0x7ffffff50cd8[20],%L0x7ffffff50ce0[20],
        %L0x7ffffff50ce8[20],%L0x7ffffff50cf0[20],%L0x7ffffff50cf8[20]]*X2**2+
poly z [%L0x7ffffff50ca0[28],%L0x7ffffff50ca8[28],%L0x7ffffff50cb0[28],
        %L0x7ffffff50cb8[28],%L0x7ffffff50cc0[28],%L0x7ffffff50cc8[28],
        %L0x7ffffff50cd0[28],%L0x7ffffff50cd8[28],%L0x7ffffff50ce0[28],
        %L0x7ffffff50ce8[28],%L0x7ffffff50cf0[28],%L0x7ffffff50cf8[28]]*X2**3+
poly z [%L0x7ffffff50ca0[36],%L0x7ffffff50ca8[36],%L0x7ffffff50cb0[36],
        %L0x7ffffff50cb8[36],%L0x7ffffff50cc0[36],%L0x7ffffff50cc8[36],
        %L0x7ffffff50cd0[36],%L0x7ffffff50cd8[36],%L0x7ffffff50ce0[36],
        %L0x7ffffff50ce8[36],%L0x7ffffff50cf0[36],%L0x7ffffff50cf8[36]]*X2**4+
poly z [%L0x7ffffff50ca0[44],%L0x7ffffff50ca8[44],%L0x7ffffff50cb0[44],
        %L0x7ffffff50cb8[44],%L0x7ffffff50cc0[44],%L0x7ffffff50cc8[44],
        %L0x7ffffff50cd0[44],%L0x7ffffff50cd8[44],%L0x7ffffff50ce0[44],
        %L0x7ffffff50ce8[44],%L0x7ffffff50cf0[44],%L0x7ffffff50cf8[44]]*X2**5+
poly z [%L0x7ffffff50ca0[52],%L0x7ffffff50ca8[52],%L0x7ffffff50cb0[52],
        %L0x7ffffff50cb8[52],%L0x7ffffff50cc0[52],%L0x7ffffff50cc8[52],
        %L0x7ffffff50cd0[52],%L0x7ffffff50cd8[52],%L0x7ffffff50ce0[52],
        %L0x7ffffff50ce8[52],%L0x7ffffff50cf0[52],%L0x7ffffff50cf8[52]]*X2**6+
poly z [%L0x7ffffff50ca0[60],%L0x7ffffff50ca8[60],%L0x7ffffff50cb0[60],
        %L0x7ffffff50cb8[60],%L0x7ffffff50cc0[60],%L0x7ffffff50cc8[60],
        %L0x7ffffff50cd0[60],%L0x7ffffff50cd8[60],%L0x7ffffff50ce0[60],
        %L0x7ffffff50ce8[60],%L0x7ffffff50cf0[60],%L0x7ffffff50cf8[60]]*X2**7
 /\
F25 =
poly z [%L0x7ffffff50ca0[5],%L0x7ffffff50ca8[5],%L0x7ffffff50cb0[5],
        %L0x7ffffff50cb8[5],%L0x7ffffff50cc0[5],%L0x7ffffff50cc8[5],
        %L0x7ffffff50cd0[5],%L0x7ffffff50cd8[5],%L0x7ffffff50ce0[5],
        %L0x7ffffff50ce8[5],%L0x7ffffff50cf0[5],%L0x7ffffff50cf8[5]]*X2**0+
poly z [%L0x7ffffff50ca0[13],%L0x7ffffff50ca8[13],%L0x7ffffff50cb0[13],
        %L0x7ffffff50cb8[13],%L0x7ffffff50cc0[13],%L0x7ffffff50cc8[13],
        %L0x7ffffff50cd0[13],%L0x7ffffff50cd8[13],%L0x7ffffff50ce0[13],
        %L0x7ffffff50ce8[13],%L0x7ffffff50cf0[13],%L0x7ffffff50cf8[13]]*X2**1+
poly z [%L0x7ffffff50ca0[21],%L0x7ffffff50ca8[21],%L0x7ffffff50cb0[21],
        %L0x7ffffff50cb8[21],%L0x7ffffff50cc0[21],%L0x7ffffff50cc8[21],
        %L0x7ffffff50cd0[21],%L0x7ffffff50cd8[21],%L0x7ffffff50ce0[21],
        %L0x7ffffff50ce8[21],%L0x7ffffff50cf0[21],%L0x7ffffff50cf8[21]]*X2**2+
poly z [%L0x7ffffff50ca0[29],%L0x7ffffff50ca8[29],%L0x7ffffff50cb0[29],
        %L0x7ffffff50cb8[29],%L0x7ffffff50cc0[29],%L0x7ffffff50cc8[29],
        %L0x7ffffff50cd0[29],%L0x7ffffff50cd8[29],%L0x7ffffff50ce0[29],
        %L0x7ffffff50ce8[29],%L0x7ffffff50cf0[29],%L0x7ffffff50cf8[29]]*X2**3+
poly z [%L0x7ffffff50ca0[37],%L0x7ffffff50ca8[37],%L0x7ffffff50cb0[37],
        %L0x7ffffff50cb8[37],%L0x7ffffff50cc0[37],%L0x7ffffff50cc8[37],
        %L0x7ffffff50cd0[37],%L0x7ffffff50cd8[37],%L0x7ffffff50ce0[37],
        %L0x7ffffff50ce8[37],%L0x7ffffff50cf0[37],%L0x7ffffff50cf8[37]]*X2**4+
poly z [%L0x7ffffff50ca0[45],%L0x7ffffff50ca8[45],%L0x7ffffff50cb0[45],
        %L0x7ffffff50cb8[45],%L0x7ffffff50cc0[45],%L0x7ffffff50cc8[45],
        %L0x7ffffff50cd0[45],%L0x7ffffff50cd8[45],%L0x7ffffff50ce0[45],
        %L0x7ffffff50ce8[45],%L0x7ffffff50cf0[45],%L0x7ffffff50cf8[45]]*X2**5+
poly z [%L0x7ffffff50ca0[53],%L0x7ffffff50ca8[53],%L0x7ffffff50cb0[53],
        %L0x7ffffff50cb8[53],%L0x7ffffff50cc0[53],%L0x7ffffff50cc8[53],
        %L0x7ffffff50cd0[53],%L0x7ffffff50cd8[53],%L0x7ffffff50ce0[53],
        %L0x7ffffff50ce8[53],%L0x7ffffff50cf0[53],%L0x7ffffff50cf8[53]]*X2**6+
poly z [%L0x7ffffff50ca0[61],%L0x7ffffff50ca8[61],%L0x7ffffff50cb0[61],
        %L0x7ffffff50cb8[61],%L0x7ffffff50cc0[61],%L0x7ffffff50cc8[61],
        %L0x7ffffff50cd0[61],%L0x7ffffff50cd8[61],%L0x7ffffff50ce0[61],
        %L0x7ffffff50ce8[61],%L0x7ffffff50cf0[61],%L0x7ffffff50cf8[61]]*X2**7
 /\
F26 =
poly z [%L0x7ffffff50ca0[6],%L0x7ffffff50ca8[6],%L0x7ffffff50cb0[6],
        %L0x7ffffff50cb8[6],%L0x7ffffff50cc0[6],%L0x7ffffff50cc8[6],
        %L0x7ffffff50cd0[6],%L0x7ffffff50cd8[6],%L0x7ffffff50ce0[6],
        %L0x7ffffff50ce8[6],%L0x7ffffff50cf0[6],%L0x7ffffff50cf8[6]]*X2**0+
poly z [%L0x7ffffff50ca0[14],%L0x7ffffff50ca8[14],%L0x7ffffff50cb0[14],
        %L0x7ffffff50cb8[14],%L0x7ffffff50cc0[14],%L0x7ffffff50cc8[14],
        %L0x7ffffff50cd0[14],%L0x7ffffff50cd8[14],%L0x7ffffff50ce0[14],
        %L0x7ffffff50ce8[14],%L0x7ffffff50cf0[14],%L0x7ffffff50cf8[14]]*X2**1+
poly z [%L0x7ffffff50ca0[22],%L0x7ffffff50ca8[22],%L0x7ffffff50cb0[22],
        %L0x7ffffff50cb8[22],%L0x7ffffff50cc0[22],%L0x7ffffff50cc8[22],
        %L0x7ffffff50cd0[22],%L0x7ffffff50cd8[22],%L0x7ffffff50ce0[22],
        %L0x7ffffff50ce8[22],%L0x7ffffff50cf0[22],%L0x7ffffff50cf8[22]]*X2**2+
poly z [%L0x7ffffff50ca0[30],%L0x7ffffff50ca8[30],%L0x7ffffff50cb0[30],
        %L0x7ffffff50cb8[30],%L0x7ffffff50cc0[30],%L0x7ffffff50cc8[30],
        %L0x7ffffff50cd0[30],%L0x7ffffff50cd8[30],%L0x7ffffff50ce0[30],
        %L0x7ffffff50ce8[30],%L0x7ffffff50cf0[30],%L0x7ffffff50cf8[30]]*X2**3+
poly z [%L0x7ffffff50ca0[38],%L0x7ffffff50ca8[38],%L0x7ffffff50cb0[38],
        %L0x7ffffff50cb8[38],%L0x7ffffff50cc0[38],%L0x7ffffff50cc8[38],
        %L0x7ffffff50cd0[38],%L0x7ffffff50cd8[38],%L0x7ffffff50ce0[38],
        %L0x7ffffff50ce8[38],%L0x7ffffff50cf0[38],%L0x7ffffff50cf8[38]]*X2**4+
poly z [%L0x7ffffff50ca0[46],%L0x7ffffff50ca8[46],%L0x7ffffff50cb0[46],
        %L0x7ffffff50cb8[46],%L0x7ffffff50cc0[46],%L0x7ffffff50cc8[46],
        %L0x7ffffff50cd0[46],%L0x7ffffff50cd8[46],%L0x7ffffff50ce0[46],
        %L0x7ffffff50ce8[46],%L0x7ffffff50cf0[46],%L0x7ffffff50cf8[46]]*X2**5+
poly z [%L0x7ffffff50ca0[54],%L0x7ffffff50ca8[54],%L0x7ffffff50cb0[54],
        %L0x7ffffff50cb8[54],%L0x7ffffff50cc0[54],%L0x7ffffff50cc8[54],
        %L0x7ffffff50cd0[54],%L0x7ffffff50cd8[54],%L0x7ffffff50ce0[54],
        %L0x7ffffff50ce8[54],%L0x7ffffff50cf0[54],%L0x7ffffff50cf8[54]]*X2**6+
poly z [%L0x7ffffff50ca0[62],%L0x7ffffff50ca8[62],%L0x7ffffff50cb0[62],
        %L0x7ffffff50cb8[62],%L0x7ffffff50cc0[62],%L0x7ffffff50cc8[62],
        %L0x7ffffff50cd0[62],%L0x7ffffff50cd8[62],%L0x7ffffff50ce0[62],
        %L0x7ffffff50ce8[62],%L0x7ffffff50cf0[62],%L0x7ffffff50cf8[62]]*X2**7
 /\
F27 =
poly z [%L0x7ffffff50ca0[7],%L0x7ffffff50ca8[7],%L0x7ffffff50cb0[7],
        %L0x7ffffff50cb8[7],%L0x7ffffff50cc0[7],%L0x7ffffff50cc8[7],
        %L0x7ffffff50cd0[7],%L0x7ffffff50cd8[7],%L0x7ffffff50ce0[7],
        %L0x7ffffff50ce8[7],%L0x7ffffff50cf0[7],%L0x7ffffff50cf8[7]]*X2**0+
poly z [%L0x7ffffff50ca0[15],%L0x7ffffff50ca8[15],%L0x7ffffff50cb0[15],
        %L0x7ffffff50cb8[15],%L0x7ffffff50cc0[15],%L0x7ffffff50cc8[15],
        %L0x7ffffff50cd0[15],%L0x7ffffff50cd8[15],%L0x7ffffff50ce0[15],
        %L0x7ffffff50ce8[15],%L0x7ffffff50cf0[15],%L0x7ffffff50cf8[15]]*X2**1+
poly z [%L0x7ffffff50ca0[23],%L0x7ffffff50ca8[23],%L0x7ffffff50cb0[23],
        %L0x7ffffff50cb8[23],%L0x7ffffff50cc0[23],%L0x7ffffff50cc8[23],
        %L0x7ffffff50cd0[23],%L0x7ffffff50cd8[23],%L0x7ffffff50ce0[23],
        %L0x7ffffff50ce8[23],%L0x7ffffff50cf0[23],%L0x7ffffff50cf8[23]]*X2**2+
poly z [%L0x7ffffff50ca0[31],%L0x7ffffff50ca8[31],%L0x7ffffff50cb0[31],
        %L0x7ffffff50cb8[31],%L0x7ffffff50cc0[31],%L0x7ffffff50cc8[31],
        %L0x7ffffff50cd0[31],%L0x7ffffff50cd8[31],%L0x7ffffff50ce0[31],
        %L0x7ffffff50ce8[31],%L0x7ffffff50cf0[31],%L0x7ffffff50cf8[31]]*X2**3+
poly z [%L0x7ffffff50ca0[39],%L0x7ffffff50ca8[39],%L0x7ffffff50cb0[39],
        %L0x7ffffff50cb8[39],%L0x7ffffff50cc0[39],%L0x7ffffff50cc8[39],
        %L0x7ffffff50cd0[39],%L0x7ffffff50cd8[39],%L0x7ffffff50ce0[39],
        %L0x7ffffff50ce8[39],%L0x7ffffff50cf0[39],%L0x7ffffff50cf8[39]]*X2**4+
poly z [%L0x7ffffff50ca0[47],%L0x7ffffff50ca8[47],%L0x7ffffff50cb0[47],
        %L0x7ffffff50cb8[47],%L0x7ffffff50cc0[47],%L0x7ffffff50cc8[47],
        %L0x7ffffff50cd0[47],%L0x7ffffff50cd8[47],%L0x7ffffff50ce0[47],
        %L0x7ffffff50ce8[47],%L0x7ffffff50cf0[47],%L0x7ffffff50cf8[47]]*X2**5+
poly z [%L0x7ffffff50ca0[55],%L0x7ffffff50ca8[55],%L0x7ffffff50cb0[55],
        %L0x7ffffff50cb8[55],%L0x7ffffff50cc0[55],%L0x7ffffff50cc8[55],
        %L0x7ffffff50cd0[55],%L0x7ffffff50cd8[55],%L0x7ffffff50ce0[55],
        %L0x7ffffff50ce8[55],%L0x7ffffff50cf0[55],%L0x7ffffff50cf8[55]]*X2**6+
poly z [%L0x7ffffff50ca0[63],%L0x7ffffff50ca8[63],%L0x7ffffff50cb0[63],
        %L0x7ffffff50cb8[63],%L0x7ffffff50cc0[63],%L0x7ffffff50cc8[63],
        %L0x7ffffff50cd0[63],%L0x7ffffff50cd8[63],%L0x7ffffff50ce0[63],
        %L0x7ffffff50ce8[63],%L0x7ffffff50cf0[63],%L0x7ffffff50cf8[63]]*X2**7
&& true;

(* 4 *)
cut eqmod G10 (F20+Y1*F24) [2, z**12+z**3+1] /\
    eqmod G11 (F21+Y1*F25) [2, z**12+z**3+1] /\
    eqmod G12 (F22+Y1*F26) [2, z**12+z**3+1] /\
    eqmod G13 (F23+Y1*F27) [2, z**12+z**3+1] /\
F20 =
poly z [%L0x7ffffff50ca0[0],%L0x7ffffff50ca8[0],%L0x7ffffff50cb0[0],
        %L0x7ffffff50cb8[0],%L0x7ffffff50cc0[0],%L0x7ffffff50cc8[0],
        %L0x7ffffff50cd0[0],%L0x7ffffff50cd8[0],%L0x7ffffff50ce0[0],
        %L0x7ffffff50ce8[0],%L0x7ffffff50cf0[0],%L0x7ffffff50cf8[0]]*X2**0+
poly z [%L0x7ffffff50ca0[8],%L0x7ffffff50ca8[8],%L0x7ffffff50cb0[8],
        %L0x7ffffff50cb8[8],%L0x7ffffff50cc0[8],%L0x7ffffff50cc8[8],
        %L0x7ffffff50cd0[8],%L0x7ffffff50cd8[8],%L0x7ffffff50ce0[8],
        %L0x7ffffff50ce8[8],%L0x7ffffff50cf0[8],%L0x7ffffff50cf8[8]]*X2**1+
poly z [%L0x7ffffff50ca0[16],%L0x7ffffff50ca8[16],%L0x7ffffff50cb0[16],
        %L0x7ffffff50cb8[16],%L0x7ffffff50cc0[16],%L0x7ffffff50cc8[16],
        %L0x7ffffff50cd0[16],%L0x7ffffff50cd8[16],%L0x7ffffff50ce0[16],
        %L0x7ffffff50ce8[16],%L0x7ffffff50cf0[16],%L0x7ffffff50cf8[16]]*X2**2+
poly z [%L0x7ffffff50ca0[24],%L0x7ffffff50ca8[24],%L0x7ffffff50cb0[24],
        %L0x7ffffff50cb8[24],%L0x7ffffff50cc0[24],%L0x7ffffff50cc8[24],
        %L0x7ffffff50cd0[24],%L0x7ffffff50cd8[24],%L0x7ffffff50ce0[24],
        %L0x7ffffff50ce8[24],%L0x7ffffff50cf0[24],%L0x7ffffff50cf8[24]]*X2**3+
poly z [%L0x7ffffff50ca0[32],%L0x7ffffff50ca8[32],%L0x7ffffff50cb0[32],
        %L0x7ffffff50cb8[32],%L0x7ffffff50cc0[32],%L0x7ffffff50cc8[32],
        %L0x7ffffff50cd0[32],%L0x7ffffff50cd8[32],%L0x7ffffff50ce0[32],
        %L0x7ffffff50ce8[32],%L0x7ffffff50cf0[32],%L0x7ffffff50cf8[32]]*X2**4+
poly z [%L0x7ffffff50ca0[40],%L0x7ffffff50ca8[40],%L0x7ffffff50cb0[40],
        %L0x7ffffff50cb8[40],%L0x7ffffff50cc0[40],%L0x7ffffff50cc8[40],
        %L0x7ffffff50cd0[40],%L0x7ffffff50cd8[40],%L0x7ffffff50ce0[40],
        %L0x7ffffff50ce8[40],%L0x7ffffff50cf0[40],%L0x7ffffff50cf8[40]]*X2**5+
poly z [%L0x7ffffff50ca0[48],%L0x7ffffff50ca8[48],%L0x7ffffff50cb0[48],
        %L0x7ffffff50cb8[48],%L0x7ffffff50cc0[48],%L0x7ffffff50cc8[48],
        %L0x7ffffff50cd0[48],%L0x7ffffff50cd8[48],%L0x7ffffff50ce0[48],
        %L0x7ffffff50ce8[48],%L0x7ffffff50cf0[48],%L0x7ffffff50cf8[48]]*X2**6+
poly z [%L0x7ffffff50ca0[56],%L0x7ffffff50ca8[56],%L0x7ffffff50cb0[56],
        %L0x7ffffff50cb8[56],%L0x7ffffff50cc0[56],%L0x7ffffff50cc8[56],
        %L0x7ffffff50cd0[56],%L0x7ffffff50cd8[56],%L0x7ffffff50ce0[56],
        %L0x7ffffff50ce8[56],%L0x7ffffff50cf0[56],%L0x7ffffff50cf8[56]]*X2**7
 /\
F21 =
poly z [%L0x7ffffff50ca0[1],%L0x7ffffff50ca8[1],%L0x7ffffff50cb0[1],
        %L0x7ffffff50cb8[1],%L0x7ffffff50cc0[1],%L0x7ffffff50cc8[1],
        %L0x7ffffff50cd0[1],%L0x7ffffff50cd8[1],%L0x7ffffff50ce0[1],
        %L0x7ffffff50ce8[1],%L0x7ffffff50cf0[1],%L0x7ffffff50cf8[1]]*X2**0+
poly z [%L0x7ffffff50ca0[9],%L0x7ffffff50ca8[9],%L0x7ffffff50cb0[9],
        %L0x7ffffff50cb8[9],%L0x7ffffff50cc0[9],%L0x7ffffff50cc8[9],
        %L0x7ffffff50cd0[9],%L0x7ffffff50cd8[9],%L0x7ffffff50ce0[9],
        %L0x7ffffff50ce8[9],%L0x7ffffff50cf0[9],%L0x7ffffff50cf8[9]]*X2**1+
poly z [%L0x7ffffff50ca0[17],%L0x7ffffff50ca8[17],%L0x7ffffff50cb0[17],
        %L0x7ffffff50cb8[17],%L0x7ffffff50cc0[17],%L0x7ffffff50cc8[17],
        %L0x7ffffff50cd0[17],%L0x7ffffff50cd8[17],%L0x7ffffff50ce0[17],
        %L0x7ffffff50ce8[17],%L0x7ffffff50cf0[17],%L0x7ffffff50cf8[17]]*X2**2+
poly z [%L0x7ffffff50ca0[25],%L0x7ffffff50ca8[25],%L0x7ffffff50cb0[25],
        %L0x7ffffff50cb8[25],%L0x7ffffff50cc0[25],%L0x7ffffff50cc8[25],
        %L0x7ffffff50cd0[25],%L0x7ffffff50cd8[25],%L0x7ffffff50ce0[25],
        %L0x7ffffff50ce8[25],%L0x7ffffff50cf0[25],%L0x7ffffff50cf8[25]]*X2**3+
poly z [%L0x7ffffff50ca0[33],%L0x7ffffff50ca8[33],%L0x7ffffff50cb0[33],
        %L0x7ffffff50cb8[33],%L0x7ffffff50cc0[33],%L0x7ffffff50cc8[33],
        %L0x7ffffff50cd0[33],%L0x7ffffff50cd8[33],%L0x7ffffff50ce0[33],
        %L0x7ffffff50ce8[33],%L0x7ffffff50cf0[33],%L0x7ffffff50cf8[33]]*X2**4+
poly z [%L0x7ffffff50ca0[41],%L0x7ffffff50ca8[41],%L0x7ffffff50cb0[41],
        %L0x7ffffff50cb8[41],%L0x7ffffff50cc0[41],%L0x7ffffff50cc8[41],
        %L0x7ffffff50cd0[41],%L0x7ffffff50cd8[41],%L0x7ffffff50ce0[41],
        %L0x7ffffff50ce8[41],%L0x7ffffff50cf0[41],%L0x7ffffff50cf8[41]]*X2**5+
poly z [%L0x7ffffff50ca0[49],%L0x7ffffff50ca8[49],%L0x7ffffff50cb0[49],
        %L0x7ffffff50cb8[49],%L0x7ffffff50cc0[49],%L0x7ffffff50cc8[49],
        %L0x7ffffff50cd0[49],%L0x7ffffff50cd8[49],%L0x7ffffff50ce0[49],
        %L0x7ffffff50ce8[49],%L0x7ffffff50cf0[49],%L0x7ffffff50cf8[49]]*X2**6+
poly z [%L0x7ffffff50ca0[57],%L0x7ffffff50ca8[57],%L0x7ffffff50cb0[57],
        %L0x7ffffff50cb8[57],%L0x7ffffff50cc0[57],%L0x7ffffff50cc8[57],
        %L0x7ffffff50cd0[57],%L0x7ffffff50cd8[57],%L0x7ffffff50ce0[57],
        %L0x7ffffff50ce8[57],%L0x7ffffff50cf0[57],%L0x7ffffff50cf8[57]]*X2**7
 /\
F22 =
poly z [%L0x7ffffff50ca0[2],%L0x7ffffff50ca8[2],%L0x7ffffff50cb0[2],
        %L0x7ffffff50cb8[2],%L0x7ffffff50cc0[2],%L0x7ffffff50cc8[2],
        %L0x7ffffff50cd0[2],%L0x7ffffff50cd8[2],%L0x7ffffff50ce0[2],
        %L0x7ffffff50ce8[2],%L0x7ffffff50cf0[2],%L0x7ffffff50cf8[2]]*X2**0+
poly z [%L0x7ffffff50ca0[10],%L0x7ffffff50ca8[10],%L0x7ffffff50cb0[10],
        %L0x7ffffff50cb8[10],%L0x7ffffff50cc0[10],%L0x7ffffff50cc8[10],
        %L0x7ffffff50cd0[10],%L0x7ffffff50cd8[10],%L0x7ffffff50ce0[10],
        %L0x7ffffff50ce8[10],%L0x7ffffff50cf0[10],%L0x7ffffff50cf8[10]]*X2**1+
poly z [%L0x7ffffff50ca0[18],%L0x7ffffff50ca8[18],%L0x7ffffff50cb0[18],
        %L0x7ffffff50cb8[18],%L0x7ffffff50cc0[18],%L0x7ffffff50cc8[18],
        %L0x7ffffff50cd0[18],%L0x7ffffff50cd8[18],%L0x7ffffff50ce0[18],
        %L0x7ffffff50ce8[18],%L0x7ffffff50cf0[18],%L0x7ffffff50cf8[18]]*X2**2+
poly z [%L0x7ffffff50ca0[26],%L0x7ffffff50ca8[26],%L0x7ffffff50cb0[26],
        %L0x7ffffff50cb8[26],%L0x7ffffff50cc0[26],%L0x7ffffff50cc8[26],
        %L0x7ffffff50cd0[26],%L0x7ffffff50cd8[26],%L0x7ffffff50ce0[26],
        %L0x7ffffff50ce8[26],%L0x7ffffff50cf0[26],%L0x7ffffff50cf8[26]]*X2**3+
poly z [%L0x7ffffff50ca0[34],%L0x7ffffff50ca8[34],%L0x7ffffff50cb0[34],
        %L0x7ffffff50cb8[34],%L0x7ffffff50cc0[34],%L0x7ffffff50cc8[34],
        %L0x7ffffff50cd0[34],%L0x7ffffff50cd8[34],%L0x7ffffff50ce0[34],
        %L0x7ffffff50ce8[34],%L0x7ffffff50cf0[34],%L0x7ffffff50cf8[34]]*X2**4+
poly z [%L0x7ffffff50ca0[42],%L0x7ffffff50ca8[42],%L0x7ffffff50cb0[42],
        %L0x7ffffff50cb8[42],%L0x7ffffff50cc0[42],%L0x7ffffff50cc8[42],
        %L0x7ffffff50cd0[42],%L0x7ffffff50cd8[42],%L0x7ffffff50ce0[42],
        %L0x7ffffff50ce8[42],%L0x7ffffff50cf0[42],%L0x7ffffff50cf8[42]]*X2**5+
poly z [%L0x7ffffff50ca0[50],%L0x7ffffff50ca8[50],%L0x7ffffff50cb0[50],
        %L0x7ffffff50cb8[50],%L0x7ffffff50cc0[50],%L0x7ffffff50cc8[50],
        %L0x7ffffff50cd0[50],%L0x7ffffff50cd8[50],%L0x7ffffff50ce0[50],
        %L0x7ffffff50ce8[50],%L0x7ffffff50cf0[50],%L0x7ffffff50cf8[50]]*X2**6+
poly z [%L0x7ffffff50ca0[58],%L0x7ffffff50ca8[58],%L0x7ffffff50cb0[58],
        %L0x7ffffff50cb8[58],%L0x7ffffff50cc0[58],%L0x7ffffff50cc8[58],
        %L0x7ffffff50cd0[58],%L0x7ffffff50cd8[58],%L0x7ffffff50ce0[58],
        %L0x7ffffff50ce8[58],%L0x7ffffff50cf0[58],%L0x7ffffff50cf8[58]]*X2**7
 /\
F23 =
poly z [%L0x7ffffff50ca0[3],%L0x7ffffff50ca8[3],%L0x7ffffff50cb0[3],
        %L0x7ffffff50cb8[3],%L0x7ffffff50cc0[3],%L0x7ffffff50cc8[3],
        %L0x7ffffff50cd0[3],%L0x7ffffff50cd8[3],%L0x7ffffff50ce0[3],
        %L0x7ffffff50ce8[3],%L0x7ffffff50cf0[3],%L0x7ffffff50cf8[3]]*X2**0+
poly z [%L0x7ffffff50ca0[11],%L0x7ffffff50ca8[11],%L0x7ffffff50cb0[11],
        %L0x7ffffff50cb8[11],%L0x7ffffff50cc0[11],%L0x7ffffff50cc8[11],
        %L0x7ffffff50cd0[11],%L0x7ffffff50cd8[11],%L0x7ffffff50ce0[11],
        %L0x7ffffff50ce8[11],%L0x7ffffff50cf0[11],%L0x7ffffff50cf8[11]]*X2**1+
poly z [%L0x7ffffff50ca0[19],%L0x7ffffff50ca8[19],%L0x7ffffff50cb0[19],
        %L0x7ffffff50cb8[19],%L0x7ffffff50cc0[19],%L0x7ffffff50cc8[19],
        %L0x7ffffff50cd0[19],%L0x7ffffff50cd8[19],%L0x7ffffff50ce0[19],
        %L0x7ffffff50ce8[19],%L0x7ffffff50cf0[19],%L0x7ffffff50cf8[19]]*X2**2+
poly z [%L0x7ffffff50ca0[27],%L0x7ffffff50ca8[27],%L0x7ffffff50cb0[27],
        %L0x7ffffff50cb8[27],%L0x7ffffff50cc0[27],%L0x7ffffff50cc8[27],
        %L0x7ffffff50cd0[27],%L0x7ffffff50cd8[27],%L0x7ffffff50ce0[27],
        %L0x7ffffff50ce8[27],%L0x7ffffff50cf0[27],%L0x7ffffff50cf8[27]]*X2**3+
poly z [%L0x7ffffff50ca0[35],%L0x7ffffff50ca8[35],%L0x7ffffff50cb0[35],
        %L0x7ffffff50cb8[35],%L0x7ffffff50cc0[35],%L0x7ffffff50cc8[35],
        %L0x7ffffff50cd0[35],%L0x7ffffff50cd8[35],%L0x7ffffff50ce0[35],
        %L0x7ffffff50ce8[35],%L0x7ffffff50cf0[35],%L0x7ffffff50cf8[35]]*X2**4+
poly z [%L0x7ffffff50ca0[43],%L0x7ffffff50ca8[43],%L0x7ffffff50cb0[43],
        %L0x7ffffff50cb8[43],%L0x7ffffff50cc0[43],%L0x7ffffff50cc8[43],
        %L0x7ffffff50cd0[43],%L0x7ffffff50cd8[43],%L0x7ffffff50ce0[43],
        %L0x7ffffff50ce8[43],%L0x7ffffff50cf0[43],%L0x7ffffff50cf8[43]]*X2**5+
poly z [%L0x7ffffff50ca0[51],%L0x7ffffff50ca8[51],%L0x7ffffff50cb0[51],
        %L0x7ffffff50cb8[51],%L0x7ffffff50cc0[51],%L0x7ffffff50cc8[51],
        %L0x7ffffff50cd0[51],%L0x7ffffff50cd8[51],%L0x7ffffff50ce0[51],
        %L0x7ffffff50ce8[51],%L0x7ffffff50cf0[51],%L0x7ffffff50cf8[51]]*X2**6+
poly z [%L0x7ffffff50ca0[59],%L0x7ffffff50ca8[59],%L0x7ffffff50cb0[59],
        %L0x7ffffff50cb8[59],%L0x7ffffff50cc0[59],%L0x7ffffff50cc8[59],
        %L0x7ffffff50cd0[59],%L0x7ffffff50cd8[59],%L0x7ffffff50ce0[59],
        %L0x7ffffff50ce8[59],%L0x7ffffff50cf0[59],%L0x7ffffff50cf8[59]]*X2**7
 /\
F24 =
poly z [%L0x7ffffff50ca0[4],%L0x7ffffff50ca8[4],%L0x7ffffff50cb0[4],
        %L0x7ffffff50cb8[4],%L0x7ffffff50cc0[4],%L0x7ffffff50cc8[4],
        %L0x7ffffff50cd0[4],%L0x7ffffff50cd8[4],%L0x7ffffff50ce0[4],
        %L0x7ffffff50ce8[4],%L0x7ffffff50cf0[4],%L0x7ffffff50cf8[4]]*X2**0+
poly z [%L0x7ffffff50ca0[12],%L0x7ffffff50ca8[12],%L0x7ffffff50cb0[12],
        %L0x7ffffff50cb8[12],%L0x7ffffff50cc0[12],%L0x7ffffff50cc8[12],
        %L0x7ffffff50cd0[12],%L0x7ffffff50cd8[12],%L0x7ffffff50ce0[12],
        %L0x7ffffff50ce8[12],%L0x7ffffff50cf0[12],%L0x7ffffff50cf8[12]]*X2**1+
poly z [%L0x7ffffff50ca0[20],%L0x7ffffff50ca8[20],%L0x7ffffff50cb0[20],
        %L0x7ffffff50cb8[20],%L0x7ffffff50cc0[20],%L0x7ffffff50cc8[20],
        %L0x7ffffff50cd0[20],%L0x7ffffff50cd8[20],%L0x7ffffff50ce0[20],
        %L0x7ffffff50ce8[20],%L0x7ffffff50cf0[20],%L0x7ffffff50cf8[20]]*X2**2+
poly z [%L0x7ffffff50ca0[28],%L0x7ffffff50ca8[28],%L0x7ffffff50cb0[28],
        %L0x7ffffff50cb8[28],%L0x7ffffff50cc0[28],%L0x7ffffff50cc8[28],
        %L0x7ffffff50cd0[28],%L0x7ffffff50cd8[28],%L0x7ffffff50ce0[28],
        %L0x7ffffff50ce8[28],%L0x7ffffff50cf0[28],%L0x7ffffff50cf8[28]]*X2**3+
poly z [%L0x7ffffff50ca0[36],%L0x7ffffff50ca8[36],%L0x7ffffff50cb0[36],
        %L0x7ffffff50cb8[36],%L0x7ffffff50cc0[36],%L0x7ffffff50cc8[36],
        %L0x7ffffff50cd0[36],%L0x7ffffff50cd8[36],%L0x7ffffff50ce0[36],
        %L0x7ffffff50ce8[36],%L0x7ffffff50cf0[36],%L0x7ffffff50cf8[36]]*X2**4+
poly z [%L0x7ffffff50ca0[44],%L0x7ffffff50ca8[44],%L0x7ffffff50cb0[44],
        %L0x7ffffff50cb8[44],%L0x7ffffff50cc0[44],%L0x7ffffff50cc8[44],
        %L0x7ffffff50cd0[44],%L0x7ffffff50cd8[44],%L0x7ffffff50ce0[44],
        %L0x7ffffff50ce8[44],%L0x7ffffff50cf0[44],%L0x7ffffff50cf8[44]]*X2**5+
poly z [%L0x7ffffff50ca0[52],%L0x7ffffff50ca8[52],%L0x7ffffff50cb0[52],
        %L0x7ffffff50cb8[52],%L0x7ffffff50cc0[52],%L0x7ffffff50cc8[52],
        %L0x7ffffff50cd0[52],%L0x7ffffff50cd8[52],%L0x7ffffff50ce0[52],
        %L0x7ffffff50ce8[52],%L0x7ffffff50cf0[52],%L0x7ffffff50cf8[52]]*X2**6+
poly z [%L0x7ffffff50ca0[60],%L0x7ffffff50ca8[60],%L0x7ffffff50cb0[60],
        %L0x7ffffff50cb8[60],%L0x7ffffff50cc0[60],%L0x7ffffff50cc8[60],
        %L0x7ffffff50cd0[60],%L0x7ffffff50cd8[60],%L0x7ffffff50ce0[60],
        %L0x7ffffff50ce8[60],%L0x7ffffff50cf0[60],%L0x7ffffff50cf8[60]]*X2**7
 /\
F25 =
poly z [%L0x7ffffff50ca0[5],%L0x7ffffff50ca8[5],%L0x7ffffff50cb0[5],
        %L0x7ffffff50cb8[5],%L0x7ffffff50cc0[5],%L0x7ffffff50cc8[5],
        %L0x7ffffff50cd0[5],%L0x7ffffff50cd8[5],%L0x7ffffff50ce0[5],
        %L0x7ffffff50ce8[5],%L0x7ffffff50cf0[5],%L0x7ffffff50cf8[5]]*X2**0+
poly z [%L0x7ffffff50ca0[13],%L0x7ffffff50ca8[13],%L0x7ffffff50cb0[13],
        %L0x7ffffff50cb8[13],%L0x7ffffff50cc0[13],%L0x7ffffff50cc8[13],
        %L0x7ffffff50cd0[13],%L0x7ffffff50cd8[13],%L0x7ffffff50ce0[13],
        %L0x7ffffff50ce8[13],%L0x7ffffff50cf0[13],%L0x7ffffff50cf8[13]]*X2**1+
poly z [%L0x7ffffff50ca0[21],%L0x7ffffff50ca8[21],%L0x7ffffff50cb0[21],
        %L0x7ffffff50cb8[21],%L0x7ffffff50cc0[21],%L0x7ffffff50cc8[21],
        %L0x7ffffff50cd0[21],%L0x7ffffff50cd8[21],%L0x7ffffff50ce0[21],
        %L0x7ffffff50ce8[21],%L0x7ffffff50cf0[21],%L0x7ffffff50cf8[21]]*X2**2+
poly z [%L0x7ffffff50ca0[29],%L0x7ffffff50ca8[29],%L0x7ffffff50cb0[29],
        %L0x7ffffff50cb8[29],%L0x7ffffff50cc0[29],%L0x7ffffff50cc8[29],
        %L0x7ffffff50cd0[29],%L0x7ffffff50cd8[29],%L0x7ffffff50ce0[29],
        %L0x7ffffff50ce8[29],%L0x7ffffff50cf0[29],%L0x7ffffff50cf8[29]]*X2**3+
poly z [%L0x7ffffff50ca0[37],%L0x7ffffff50ca8[37],%L0x7ffffff50cb0[37],
        %L0x7ffffff50cb8[37],%L0x7ffffff50cc0[37],%L0x7ffffff50cc8[37],
        %L0x7ffffff50cd0[37],%L0x7ffffff50cd8[37],%L0x7ffffff50ce0[37],
        %L0x7ffffff50ce8[37],%L0x7ffffff50cf0[37],%L0x7ffffff50cf8[37]]*X2**4+
poly z [%L0x7ffffff50ca0[45],%L0x7ffffff50ca8[45],%L0x7ffffff50cb0[45],
        %L0x7ffffff50cb8[45],%L0x7ffffff50cc0[45],%L0x7ffffff50cc8[45],
        %L0x7ffffff50cd0[45],%L0x7ffffff50cd8[45],%L0x7ffffff50ce0[45],
        %L0x7ffffff50ce8[45],%L0x7ffffff50cf0[45],%L0x7ffffff50cf8[45]]*X2**5+
poly z [%L0x7ffffff50ca0[53],%L0x7ffffff50ca8[53],%L0x7ffffff50cb0[53],
        %L0x7ffffff50cb8[53],%L0x7ffffff50cc0[53],%L0x7ffffff50cc8[53],
        %L0x7ffffff50cd0[53],%L0x7ffffff50cd8[53],%L0x7ffffff50ce0[53],
        %L0x7ffffff50ce8[53],%L0x7ffffff50cf0[53],%L0x7ffffff50cf8[53]]*X2**6+
poly z [%L0x7ffffff50ca0[61],%L0x7ffffff50ca8[61],%L0x7ffffff50cb0[61],
        %L0x7ffffff50cb8[61],%L0x7ffffff50cc0[61],%L0x7ffffff50cc8[61],
        %L0x7ffffff50cd0[61],%L0x7ffffff50cd8[61],%L0x7ffffff50ce0[61],
        %L0x7ffffff50ce8[61],%L0x7ffffff50cf0[61],%L0x7ffffff50cf8[61]]*X2**7
 /\
F26 =
poly z [%L0x7ffffff50ca0[6],%L0x7ffffff50ca8[6],%L0x7ffffff50cb0[6],
        %L0x7ffffff50cb8[6],%L0x7ffffff50cc0[6],%L0x7ffffff50cc8[6],
        %L0x7ffffff50cd0[6],%L0x7ffffff50cd8[6],%L0x7ffffff50ce0[6],
        %L0x7ffffff50ce8[6],%L0x7ffffff50cf0[6],%L0x7ffffff50cf8[6]]*X2**0+
poly z [%L0x7ffffff50ca0[14],%L0x7ffffff50ca8[14],%L0x7ffffff50cb0[14],
        %L0x7ffffff50cb8[14],%L0x7ffffff50cc0[14],%L0x7ffffff50cc8[14],
        %L0x7ffffff50cd0[14],%L0x7ffffff50cd8[14],%L0x7ffffff50ce0[14],
        %L0x7ffffff50ce8[14],%L0x7ffffff50cf0[14],%L0x7ffffff50cf8[14]]*X2**1+
poly z [%L0x7ffffff50ca0[22],%L0x7ffffff50ca8[22],%L0x7ffffff50cb0[22],
        %L0x7ffffff50cb8[22],%L0x7ffffff50cc0[22],%L0x7ffffff50cc8[22],
        %L0x7ffffff50cd0[22],%L0x7ffffff50cd8[22],%L0x7ffffff50ce0[22],
        %L0x7ffffff50ce8[22],%L0x7ffffff50cf0[22],%L0x7ffffff50cf8[22]]*X2**2+
poly z [%L0x7ffffff50ca0[30],%L0x7ffffff50ca8[30],%L0x7ffffff50cb0[30],
        %L0x7ffffff50cb8[30],%L0x7ffffff50cc0[30],%L0x7ffffff50cc8[30],
        %L0x7ffffff50cd0[30],%L0x7ffffff50cd8[30],%L0x7ffffff50ce0[30],
        %L0x7ffffff50ce8[30],%L0x7ffffff50cf0[30],%L0x7ffffff50cf8[30]]*X2**3+
poly z [%L0x7ffffff50ca0[38],%L0x7ffffff50ca8[38],%L0x7ffffff50cb0[38],
        %L0x7ffffff50cb8[38],%L0x7ffffff50cc0[38],%L0x7ffffff50cc8[38],
        %L0x7ffffff50cd0[38],%L0x7ffffff50cd8[38],%L0x7ffffff50ce0[38],
        %L0x7ffffff50ce8[38],%L0x7ffffff50cf0[38],%L0x7ffffff50cf8[38]]*X2**4+
poly z [%L0x7ffffff50ca0[46],%L0x7ffffff50ca8[46],%L0x7ffffff50cb0[46],
        %L0x7ffffff50cb8[46],%L0x7ffffff50cc0[46],%L0x7ffffff50cc8[46],
        %L0x7ffffff50cd0[46],%L0x7ffffff50cd8[46],%L0x7ffffff50ce0[46],
        %L0x7ffffff50ce8[46],%L0x7ffffff50cf0[46],%L0x7ffffff50cf8[46]]*X2**5+
poly z [%L0x7ffffff50ca0[54],%L0x7ffffff50ca8[54],%L0x7ffffff50cb0[54],
        %L0x7ffffff50cb8[54],%L0x7ffffff50cc0[54],%L0x7ffffff50cc8[54],
        %L0x7ffffff50cd0[54],%L0x7ffffff50cd8[54],%L0x7ffffff50ce0[54],
        %L0x7ffffff50ce8[54],%L0x7ffffff50cf0[54],%L0x7ffffff50cf8[54]]*X2**6+
poly z [%L0x7ffffff50ca0[62],%L0x7ffffff50ca8[62],%L0x7ffffff50cb0[62],
        %L0x7ffffff50cb8[62],%L0x7ffffff50cc0[62],%L0x7ffffff50cc8[62],
        %L0x7ffffff50cd0[62],%L0x7ffffff50cd8[62],%L0x7ffffff50ce0[62],
        %L0x7ffffff50ce8[62],%L0x7ffffff50cf0[62],%L0x7ffffff50cf8[62]]*X2**7
 /\
F27 =
poly z [%L0x7ffffff50ca0[7],%L0x7ffffff50ca8[7],%L0x7ffffff50cb0[7],
        %L0x7ffffff50cb8[7],%L0x7ffffff50cc0[7],%L0x7ffffff50cc8[7],
        %L0x7ffffff50cd0[7],%L0x7ffffff50cd8[7],%L0x7ffffff50ce0[7],
        %L0x7ffffff50ce8[7],%L0x7ffffff50cf0[7],%L0x7ffffff50cf8[7]]*X2**0+
poly z [%L0x7ffffff50ca0[15],%L0x7ffffff50ca8[15],%L0x7ffffff50cb0[15],
        %L0x7ffffff50cb8[15],%L0x7ffffff50cc0[15],%L0x7ffffff50cc8[15],
        %L0x7ffffff50cd0[15],%L0x7ffffff50cd8[15],%L0x7ffffff50ce0[15],
        %L0x7ffffff50ce8[15],%L0x7ffffff50cf0[15],%L0x7ffffff50cf8[15]]*X2**1+
poly z [%L0x7ffffff50ca0[23],%L0x7ffffff50ca8[23],%L0x7ffffff50cb0[23],
        %L0x7ffffff50cb8[23],%L0x7ffffff50cc0[23],%L0x7ffffff50cc8[23],
        %L0x7ffffff50cd0[23],%L0x7ffffff50cd8[23],%L0x7ffffff50ce0[23],
        %L0x7ffffff50ce8[23],%L0x7ffffff50cf0[23],%L0x7ffffff50cf8[23]]*X2**2+
poly z [%L0x7ffffff50ca0[31],%L0x7ffffff50ca8[31],%L0x7ffffff50cb0[31],
        %L0x7ffffff50cb8[31],%L0x7ffffff50cc0[31],%L0x7ffffff50cc8[31],
        %L0x7ffffff50cd0[31],%L0x7ffffff50cd8[31],%L0x7ffffff50ce0[31],
        %L0x7ffffff50ce8[31],%L0x7ffffff50cf0[31],%L0x7ffffff50cf8[31]]*X2**3+
poly z [%L0x7ffffff50ca0[39],%L0x7ffffff50ca8[39],%L0x7ffffff50cb0[39],
        %L0x7ffffff50cb8[39],%L0x7ffffff50cc0[39],%L0x7ffffff50cc8[39],
        %L0x7ffffff50cd0[39],%L0x7ffffff50cd8[39],%L0x7ffffff50ce0[39],
        %L0x7ffffff50ce8[39],%L0x7ffffff50cf0[39],%L0x7ffffff50cf8[39]]*X2**4+
poly z [%L0x7ffffff50ca0[47],%L0x7ffffff50ca8[47],%L0x7ffffff50cb0[47],
        %L0x7ffffff50cb8[47],%L0x7ffffff50cc0[47],%L0x7ffffff50cc8[47],
        %L0x7ffffff50cd0[47],%L0x7ffffff50cd8[47],%L0x7ffffff50ce0[47],
        %L0x7ffffff50ce8[47],%L0x7ffffff50cf0[47],%L0x7ffffff50cf8[47]]*X2**5+
poly z [%L0x7ffffff50ca0[55],%L0x7ffffff50ca8[55],%L0x7ffffff50cb0[55],
        %L0x7ffffff50cb8[55],%L0x7ffffff50cc0[55],%L0x7ffffff50cc8[55],
        %L0x7ffffff50cd0[55],%L0x7ffffff50cd8[55],%L0x7ffffff50ce0[55],
        %L0x7ffffff50ce8[55],%L0x7ffffff50cf0[55],%L0x7ffffff50cf8[55]]*X2**6+
poly z [%L0x7ffffff50ca0[63],%L0x7ffffff50ca8[63],%L0x7ffffff50cb0[63],
        %L0x7ffffff50cb8[63],%L0x7ffffff50cc0[63],%L0x7ffffff50cc8[63],
        %L0x7ffffff50cd0[63],%L0x7ffffff50cd8[63],%L0x7ffffff50ce0[63],
        %L0x7ffffff50ce8[63],%L0x7ffffff50cf0[63],%L0x7ffffff50cf8[63]]*X2**7
 && true;

(* mov    0x10(%rsp),%rcx                          #! EA = L0x7ffffff50990; Value = 0x0000000000000002; PC = 0x555555582d58 *)
mov %rcx %L0x7ffffff50990;
(* mov    0x8(%rsp),%rax                           #! EA = L0x7ffffff50988; Value = 0x00007ffffff509a0; PC = 0x555555582d5d *)
mov %rax %L0x7ffffff50988;
(* mov    0x18(%rsp),%rdi                          #! EA = L0x7ffffff50998; Value = 0x00007ffffff50ca0; PC = 0x555555582d62 *)
mov %rdi %L0x7ffffff50998;
(* lea    (%rcx,%rcx,2),%rdx                       #! PC = 0x555555582d67 *)
(* lea \(rcx,rcx,2), rdx *)
nop;
(* shl    $0x5,%rdx                                #! PC = 0x555555582d6b *)
(* shl $0x5, rdx *)
nop;
(* mov    %rdi,%rsi                                #! PC = 0x555555582d6f *)
mov %rsi %rdi;
(* add    %rax,%rdx                                #! PC = 0x555555582d72 *)
(* add rax, rdx *)
nop;
(* #call   0x55555557c600 <_PQCLEAN_MCELIECE348864_AVX2_vec_mul_asm>#! PC = 0x555555582d75 *)
#call   0x55555557c600 <_PQCLEAN_MCELIECE348864_AVX2_vec_mul_asm>#! 0x555555582d75 = 0x555555582d75;
(* #! -> SP = 0x7ffffff50978 *)
#! 0x7ffffff50978 = 0x7ffffff50978;
(* mov    %rsp,%r11                                #! PC = 0x55555557c600 *)
(* mov rsp, r11 *)
nop;
(* and    $0x1f,%r11                               #! PC = 0x55555557c603 *)
(* and $0x1f, r11 *)
nop;
(* add    $0x2a0,%r11                              #! PC = 0x55555557c607 *)
(* add 0x2a0, r11 *)
nop;
(* sub    %r11,%rsp                                #! PC = 0x55555557c60e *)
(* sub r11, rsp *)
nop;
(* mov    %r11,0x260(%rsp)                         #! EA = L0x7ffffff50920; PC = 0x55555557c611 *)
mov %L0x7ffffff50920 %r11;
(* mov    %r12,0x268(%rsp)                         #! EA = L0x7ffffff50928; PC = 0x55555557c619 *)
mov %L0x7ffffff50928 %r12;
(* mov    %r13,0x270(%rsp)                         #! EA = L0x7ffffff50930; PC = 0x55555557c621 *)
mov %L0x7ffffff50930 %r13;
(* mov    %r14,0x278(%rsp)                         #! EA = L0x7ffffff50938; PC = 0x55555557c629 *)
mov %L0x7ffffff50938 %r14;
(* mov    %r15,0x280(%rsp)                         #! EA = L0x7ffffff50940; PC = 0x55555557c631 *)
mov %L0x7ffffff50940 %r15;
(* mov    %rbx,0x288(%rsp)                         #! EA = L0x7ffffff50948; PC = 0x55555557c639 *)
mov %L0x7ffffff50948 %rbx;
(* lea    (%rsp),%rcx                              #! PC = 0x55555557c641 *)
(* lea (rsp), rcx *)
nop;

mov %ina0 %L0x7ffffff50ca0; mov %ina1 %L0x7ffffff50ca8;
mov %ina2 %L0x7ffffff50cb0; mov %ina3 %L0x7ffffff50cb8;
mov %ina4 %L0x7ffffff50cc0; mov %ina5 %L0x7ffffff50cc8;
mov %ina6 %L0x7ffffff50cd0; mov %ina7 %L0x7ffffff50cd8;
mov %ina8 %L0x7ffffff50ce0; mov %ina9 %L0x7ffffff50ce8;
mov %inaa %L0x7ffffff50cf0; mov %inab %L0x7ffffff50cf8;

mov %inb0 %L0x7ffffff50a60; mov %inb1 %L0x7ffffff50a68;
mov %inb2 %L0x7ffffff50a70; mov %inb3 %L0x7ffffff50a78;
mov %inb4 %L0x7ffffff50a80; mov %inb5 %L0x7ffffff50a88;
mov %inb6 %L0x7ffffff50a90; mov %inb7 %L0x7ffffff50a98;
mov %inb8 %L0x7ffffff50aa0; mov %inb9 %L0x7ffffff50aa8;
mov %inba %L0x7ffffff50ab0; mov %inbb %L0x7ffffff50ab8;

call vec_mul_asm (z,
%ina0,%ina1,%ina2,%ina3,%ina4,%ina5,%ina6,%ina7,%ina8,%ina9,%inaa,%inab,
%inb0,%inb1,%inb2,%inb3,%inb4,%inb5,%inb6,%inb7,%inb8,%inb9,%inba,%inbb
(*
%L0x7ffffff50ca0,%L0x7ffffff50ca8,%L0x7ffffff50cb0,%L0x7ffffff50cb8,
%L0x7ffffff50cc0,%L0x7ffffff50cc8,%L0x7ffffff50cd0,%L0x7ffffff50cd8,
%L0x7ffffff50ce0,%L0x7ffffff50ce8,%L0x7ffffff50cf0,%L0x7ffffff50cf8,
%L0x7ffffff50a60,%L0x7ffffff50a68,%L0x7ffffff50a70,%L0x7ffffff50a78,
%L0x7ffffff50a80,%L0x7ffffff50a88,%L0x7ffffff50a90,%L0x7ffffff50a98,
%L0x7ffffff50aa0,%L0x7ffffff50aa8,%L0x7ffffff50ab0,%L0x7ffffff50ab8
*)
,
%L0x7ffffff50ca0,%L0x7ffffff50ca8,%L0x7ffffff50cb0,%L0x7ffffff50cb8,
%L0x7ffffff50cc0,%L0x7ffffff50cc8,%L0x7ffffff50cd0,%L0x7ffffff50cd8,
%L0x7ffffff50ce0,%L0x7ffffff50ce8,%L0x7ffffff50cf0,%L0x7ffffff50cf8);

(* mov    0x260(%rsp),%r11                         #! EA = L0x7ffffff50920; Value = 0x00000000000002b8; PC = 0x55555557c97c *)
mov %r11 %L0x7ffffff50920;
(* mov    0x268(%rsp),%r12                         #! EA = L0x7ffffff50928; Value = 0x00007ffffff50d00; PC = 0x55555557c984 *)
mov %r12 %L0x7ffffff50928;
(* mov    0x270(%rsp),%r13                         #! EA = L0x7ffffff50930; Value = 0x0000ff000000ff00; PC = 0x55555557c98c *)
mov %r13 %L0x7ffffff50930;
(* mov    0x278(%rsp),%r14                         #! EA = L0x7ffffff50938; Value = 0x00ff000000ff0000; PC = 0x55555557c994 *)
mov %r14 %L0x7ffffff50938;
(* mov    0x280(%rsp),%r15                         #! EA = L0x7ffffff50940; Value = 0x4444444444444444; PC = 0x55555557c99c *)
mov %r15 %L0x7ffffff50940;
(* mov    0x288(%rsp),%rbx                         #! EA = L0x7ffffff50948; Value = 0x0000ffff00000000; PC = 0x55555557c9a4 *)
mov %rbx %L0x7ffffff50948;
(* add    %r11,%rsp                                #! PC = 0x55555557c9ac *)
(* add r11, rsp *)
nop;
(* #! <- SP = 0x7ffffff50978 *)
#! 0x7ffffff50978 = 0x7ffffff50978;
(* #ret                                            #! PC = 0x55555557c9af *)
#ret                                            #! 0x55555557c9af = 0x55555557c9af;


(**************** twists ****************)



ghost Y2@uint16,G20@uint16,G21@uint16,G22@uint16,G23@uint16,G24@uint16,G25@uint16,G26@uint16,G27@uint16:
      (z**8+z)*Y2 = X2 /\
G20 = poly z [%L0x7ffffff50ca0[0],%L0x7ffffff50ca8[0],%L0x7ffffff50cb0[0],
              %L0x7ffffff50cb8[0],%L0x7ffffff50cc0[0],%L0x7ffffff50cc8[0],
              %L0x7ffffff50cd0[0],%L0x7ffffff50cd8[0],%L0x7ffffff50ce0[0],
              %L0x7ffffff50ce8[0],%L0x7ffffff50cf0[0],%L0x7ffffff50cf8[0]]*Y2**0+
      poly z [%L0x7ffffff50ca0[8],%L0x7ffffff50ca8[8],%L0x7ffffff50cb0[8],
              %L0x7ffffff50cb8[8],%L0x7ffffff50cc0[8],%L0x7ffffff50cc8[8],
              %L0x7ffffff50cd0[8],%L0x7ffffff50cd8[8],%L0x7ffffff50ce0[8],
              %L0x7ffffff50ce8[8],%L0x7ffffff50cf0[8],%L0x7ffffff50cf8[8]]*Y2**1+
      poly z [%L0x7ffffff50ca0[16],%L0x7ffffff50ca8[16],%L0x7ffffff50cb0[16],
              %L0x7ffffff50cb8[16],%L0x7ffffff50cc0[16],%L0x7ffffff50cc8[16],
              %L0x7ffffff50cd0[16],%L0x7ffffff50cd8[16],%L0x7ffffff50ce0[16],
              %L0x7ffffff50ce8[16],%L0x7ffffff50cf0[16],%L0x7ffffff50cf8[16]]*Y2**2+
      poly z [%L0x7ffffff50ca0[24],%L0x7ffffff50ca8[24],%L0x7ffffff50cb0[24],
              %L0x7ffffff50cb8[24],%L0x7ffffff50cc0[24],%L0x7ffffff50cc8[24],
              %L0x7ffffff50cd0[24],%L0x7ffffff50cd8[24],%L0x7ffffff50ce0[24],
              %L0x7ffffff50ce8[24],%L0x7ffffff50cf0[24],%L0x7ffffff50cf8[24]]*Y2**3+
      poly z [%L0x7ffffff50ca0[32],%L0x7ffffff50ca8[32],%L0x7ffffff50cb0[32],
              %L0x7ffffff50cb8[32],%L0x7ffffff50cc0[32],%L0x7ffffff50cc8[32],
              %L0x7ffffff50cd0[32],%L0x7ffffff50cd8[32],%L0x7ffffff50ce0[32],
              %L0x7ffffff50ce8[32],%L0x7ffffff50cf0[32],%L0x7ffffff50cf8[32]]*Y2**4+
      poly z [%L0x7ffffff50ca0[40],%L0x7ffffff50ca8[40],%L0x7ffffff50cb0[40],
              %L0x7ffffff50cb8[40],%L0x7ffffff50cc0[40],%L0x7ffffff50cc8[40],
              %L0x7ffffff50cd0[40],%L0x7ffffff50cd8[40],%L0x7ffffff50ce0[40],
              %L0x7ffffff50ce8[40],%L0x7ffffff50cf0[40],%L0x7ffffff50cf8[40]]*Y2**5+
      poly z [%L0x7ffffff50ca0[48],%L0x7ffffff50ca8[48],%L0x7ffffff50cb0[48],
              %L0x7ffffff50cb8[48],%L0x7ffffff50cc0[48],%L0x7ffffff50cc8[48],
              %L0x7ffffff50cd0[48],%L0x7ffffff50cd8[48],%L0x7ffffff50ce0[48],
              %L0x7ffffff50ce8[48],%L0x7ffffff50cf0[48],%L0x7ffffff50cf8[48]]*Y2**6+
      poly z [%L0x7ffffff50ca0[56],%L0x7ffffff50ca8[56],%L0x7ffffff50cb0[56],
              %L0x7ffffff50cb8[56],%L0x7ffffff50cc0[56],%L0x7ffffff50cc8[56],
              %L0x7ffffff50cd0[56],%L0x7ffffff50cd8[56],%L0x7ffffff50ce0[56],
              %L0x7ffffff50ce8[56],%L0x7ffffff50cf0[56],%L0x7ffffff50cf8[56]]*Y2**7 /\
G21 = poly z [%L0x7ffffff50ca0[1],%L0x7ffffff50ca8[1],%L0x7ffffff50cb0[1],
              %L0x7ffffff50cb8[1],%L0x7ffffff50cc0[1],%L0x7ffffff50cc8[1],
              %L0x7ffffff50cd0[1],%L0x7ffffff50cd8[1],%L0x7ffffff50ce0[1],
              %L0x7ffffff50ce8[1],%L0x7ffffff50cf0[1],%L0x7ffffff50cf8[1]]*Y2**0+
      poly z [%L0x7ffffff50ca0[9],%L0x7ffffff50ca8[9],%L0x7ffffff50cb0[9],
              %L0x7ffffff50cb8[9],%L0x7ffffff50cc0[9],%L0x7ffffff50cc8[9],
              %L0x7ffffff50cd0[9],%L0x7ffffff50cd8[9],%L0x7ffffff50ce0[9],
              %L0x7ffffff50ce8[9],%L0x7ffffff50cf0[9],%L0x7ffffff50cf8[9]]*Y2**1+
      poly z [%L0x7ffffff50ca0[17],%L0x7ffffff50ca8[17],%L0x7ffffff50cb0[17],
              %L0x7ffffff50cb8[17],%L0x7ffffff50cc0[17],%L0x7ffffff50cc8[17],
              %L0x7ffffff50cd0[17],%L0x7ffffff50cd8[17],%L0x7ffffff50ce0[17],
              %L0x7ffffff50ce8[17],%L0x7ffffff50cf0[17],%L0x7ffffff50cf8[17]]*Y2**2+
      poly z [%L0x7ffffff50ca0[25],%L0x7ffffff50ca8[25],%L0x7ffffff50cb0[25],
              %L0x7ffffff50cb8[25],%L0x7ffffff50cc0[25],%L0x7ffffff50cc8[25],
              %L0x7ffffff50cd0[25],%L0x7ffffff50cd8[25],%L0x7ffffff50ce0[25],
              %L0x7ffffff50ce8[25],%L0x7ffffff50cf0[25],%L0x7ffffff50cf8[25]]*Y2**3+
      poly z [%L0x7ffffff50ca0[33],%L0x7ffffff50ca8[33],%L0x7ffffff50cb0[33],
              %L0x7ffffff50cb8[33],%L0x7ffffff50cc0[33],%L0x7ffffff50cc8[33],
              %L0x7ffffff50cd0[33],%L0x7ffffff50cd8[33],%L0x7ffffff50ce0[33],
              %L0x7ffffff50ce8[33],%L0x7ffffff50cf0[33],%L0x7ffffff50cf8[33]]*Y2**4+
      poly z [%L0x7ffffff50ca0[41],%L0x7ffffff50ca8[41],%L0x7ffffff50cb0[41],
              %L0x7ffffff50cb8[41],%L0x7ffffff50cc0[41],%L0x7ffffff50cc8[41],
              %L0x7ffffff50cd0[41],%L0x7ffffff50cd8[41],%L0x7ffffff50ce0[41],
              %L0x7ffffff50ce8[41],%L0x7ffffff50cf0[41],%L0x7ffffff50cf8[41]]*Y2**5+
      poly z [%L0x7ffffff50ca0[49],%L0x7ffffff50ca8[49],%L0x7ffffff50cb0[49],
              %L0x7ffffff50cb8[49],%L0x7ffffff50cc0[49],%L0x7ffffff50cc8[49],
              %L0x7ffffff50cd0[49],%L0x7ffffff50cd8[49],%L0x7ffffff50ce0[49],
              %L0x7ffffff50ce8[49],%L0x7ffffff50cf0[49],%L0x7ffffff50cf8[49]]*Y2**6+
      poly z [%L0x7ffffff50ca0[57],%L0x7ffffff50ca8[57],%L0x7ffffff50cb0[57],
              %L0x7ffffff50cb8[57],%L0x7ffffff50cc0[57],%L0x7ffffff50cc8[57],
              %L0x7ffffff50cd0[57],%L0x7ffffff50cd8[57],%L0x7ffffff50ce0[57],
              %L0x7ffffff50ce8[57],%L0x7ffffff50cf0[57],%L0x7ffffff50cf8[57]]*Y2**7 /\
G22 = poly z [%L0x7ffffff50ca0[2],%L0x7ffffff50ca8[2],%L0x7ffffff50cb0[2],
              %L0x7ffffff50cb8[2],%L0x7ffffff50cc0[2],%L0x7ffffff50cc8[2],
              %L0x7ffffff50cd0[2],%L0x7ffffff50cd8[2],%L0x7ffffff50ce0[2],
              %L0x7ffffff50ce8[2],%L0x7ffffff50cf0[2],%L0x7ffffff50cf8[2]]*Y2**0+
      poly z [%L0x7ffffff50ca0[10],%L0x7ffffff50ca8[10],%L0x7ffffff50cb0[10],
              %L0x7ffffff50cb8[10],%L0x7ffffff50cc0[10],%L0x7ffffff50cc8[10],
              %L0x7ffffff50cd0[10],%L0x7ffffff50cd8[10],%L0x7ffffff50ce0[10],
              %L0x7ffffff50ce8[10],%L0x7ffffff50cf0[10],%L0x7ffffff50cf8[10]]*Y2**1+
      poly z [%L0x7ffffff50ca0[18],%L0x7ffffff50ca8[18],%L0x7ffffff50cb0[18],
              %L0x7ffffff50cb8[18],%L0x7ffffff50cc0[18],%L0x7ffffff50cc8[18],
              %L0x7ffffff50cd0[18],%L0x7ffffff50cd8[18],%L0x7ffffff50ce0[18],
              %L0x7ffffff50ce8[18],%L0x7ffffff50cf0[18],%L0x7ffffff50cf8[18]]*Y2**2+
      poly z [%L0x7ffffff50ca0[26],%L0x7ffffff50ca8[26],%L0x7ffffff50cb0[26],
              %L0x7ffffff50cb8[26],%L0x7ffffff50cc0[26],%L0x7ffffff50cc8[26],
              %L0x7ffffff50cd0[26],%L0x7ffffff50cd8[26],%L0x7ffffff50ce0[26],
              %L0x7ffffff50ce8[26],%L0x7ffffff50cf0[26],%L0x7ffffff50cf8[26]]*Y2**3+
      poly z [%L0x7ffffff50ca0[34],%L0x7ffffff50ca8[34],%L0x7ffffff50cb0[34],
              %L0x7ffffff50cb8[34],%L0x7ffffff50cc0[34],%L0x7ffffff50cc8[34],
              %L0x7ffffff50cd0[34],%L0x7ffffff50cd8[34],%L0x7ffffff50ce0[34],
              %L0x7ffffff50ce8[34],%L0x7ffffff50cf0[34],%L0x7ffffff50cf8[34]]*Y2**4+
      poly z [%L0x7ffffff50ca0[42],%L0x7ffffff50ca8[42],%L0x7ffffff50cb0[42],
              %L0x7ffffff50cb8[42],%L0x7ffffff50cc0[42],%L0x7ffffff50cc8[42],
              %L0x7ffffff50cd0[42],%L0x7ffffff50cd8[42],%L0x7ffffff50ce0[42],
              %L0x7ffffff50ce8[42],%L0x7ffffff50cf0[42],%L0x7ffffff50cf8[42]]*Y2**5+
      poly z [%L0x7ffffff50ca0[50],%L0x7ffffff50ca8[50],%L0x7ffffff50cb0[50],
              %L0x7ffffff50cb8[50],%L0x7ffffff50cc0[50],%L0x7ffffff50cc8[50],
              %L0x7ffffff50cd0[50],%L0x7ffffff50cd8[50],%L0x7ffffff50ce0[50],
              %L0x7ffffff50ce8[50],%L0x7ffffff50cf0[50],%L0x7ffffff50cf8[50]]*Y2**6+
      poly z [%L0x7ffffff50ca0[58],%L0x7ffffff50ca8[58],%L0x7ffffff50cb0[58],
              %L0x7ffffff50cb8[58],%L0x7ffffff50cc0[58],%L0x7ffffff50cc8[58],
              %L0x7ffffff50cd0[58],%L0x7ffffff50cd8[58],%L0x7ffffff50ce0[58],
              %L0x7ffffff50ce8[58],%L0x7ffffff50cf0[58],%L0x7ffffff50cf8[58]]*Y2**7 /\
G23 = poly z [%L0x7ffffff50ca0[3],%L0x7ffffff50ca8[3],%L0x7ffffff50cb0[3],
              %L0x7ffffff50cb8[3],%L0x7ffffff50cc0[3],%L0x7ffffff50cc8[3],
              %L0x7ffffff50cd0[3],%L0x7ffffff50cd8[3],%L0x7ffffff50ce0[3],
              %L0x7ffffff50ce8[3],%L0x7ffffff50cf0[3],%L0x7ffffff50cf8[3]]*Y2**0+
      poly z [%L0x7ffffff50ca0[11],%L0x7ffffff50ca8[11],%L0x7ffffff50cb0[11],
              %L0x7ffffff50cb8[11],%L0x7ffffff50cc0[11],%L0x7ffffff50cc8[11],
              %L0x7ffffff50cd0[11],%L0x7ffffff50cd8[11],%L0x7ffffff50ce0[11],
              %L0x7ffffff50ce8[11],%L0x7ffffff50cf0[11],%L0x7ffffff50cf8[11]]*Y2**1+
      poly z [%L0x7ffffff50ca0[19],%L0x7ffffff50ca8[19],%L0x7ffffff50cb0[19],
              %L0x7ffffff50cb8[19],%L0x7ffffff50cc0[19],%L0x7ffffff50cc8[19],
              %L0x7ffffff50cd0[19],%L0x7ffffff50cd8[19],%L0x7ffffff50ce0[19],
              %L0x7ffffff50ce8[19],%L0x7ffffff50cf0[19],%L0x7ffffff50cf8[19]]*Y2**2+
      poly z [%L0x7ffffff50ca0[27],%L0x7ffffff50ca8[27],%L0x7ffffff50cb0[27],
              %L0x7ffffff50cb8[27],%L0x7ffffff50cc0[27],%L0x7ffffff50cc8[27],
              %L0x7ffffff50cd0[27],%L0x7ffffff50cd8[27],%L0x7ffffff50ce0[27],
              %L0x7ffffff50ce8[27],%L0x7ffffff50cf0[27],%L0x7ffffff50cf8[27]]*Y2**3+
      poly z [%L0x7ffffff50ca0[35],%L0x7ffffff50ca8[35],%L0x7ffffff50cb0[35],
              %L0x7ffffff50cb8[35],%L0x7ffffff50cc0[35],%L0x7ffffff50cc8[35],
              %L0x7ffffff50cd0[35],%L0x7ffffff50cd8[35],%L0x7ffffff50ce0[35],
              %L0x7ffffff50ce8[35],%L0x7ffffff50cf0[35],%L0x7ffffff50cf8[35]]*Y2**4+
      poly z [%L0x7ffffff50ca0[43],%L0x7ffffff50ca8[43],%L0x7ffffff50cb0[43],
              %L0x7ffffff50cb8[43],%L0x7ffffff50cc0[43],%L0x7ffffff50cc8[43],
              %L0x7ffffff50cd0[43],%L0x7ffffff50cd8[43],%L0x7ffffff50ce0[43],
              %L0x7ffffff50ce8[43],%L0x7ffffff50cf0[43],%L0x7ffffff50cf8[43]]*Y2**5+
      poly z [%L0x7ffffff50ca0[51],%L0x7ffffff50ca8[51],%L0x7ffffff50cb0[51],
              %L0x7ffffff50cb8[51],%L0x7ffffff50cc0[51],%L0x7ffffff50cc8[51],
              %L0x7ffffff50cd0[51],%L0x7ffffff50cd8[51],%L0x7ffffff50ce0[51],
              %L0x7ffffff50ce8[51],%L0x7ffffff50cf0[51],%L0x7ffffff50cf8[51]]*Y2**6+
      poly z [%L0x7ffffff50ca0[59],%L0x7ffffff50ca8[59],%L0x7ffffff50cb0[59],
              %L0x7ffffff50cb8[59],%L0x7ffffff50cc0[59],%L0x7ffffff50cc8[59],
              %L0x7ffffff50cd0[59],%L0x7ffffff50cd8[59],%L0x7ffffff50ce0[59],
              %L0x7ffffff50ce8[59],%L0x7ffffff50cf0[59],%L0x7ffffff50cf8[59]]*Y2**7 /\
G24 = poly z [%L0x7ffffff50ca0[4],%L0x7ffffff50ca8[4],%L0x7ffffff50cb0[4],
              %L0x7ffffff50cb8[4],%L0x7ffffff50cc0[4],%L0x7ffffff50cc8[4],
              %L0x7ffffff50cd0[4],%L0x7ffffff50cd8[4],%L0x7ffffff50ce0[4],
              %L0x7ffffff50ce8[4],%L0x7ffffff50cf0[4],%L0x7ffffff50cf8[4]]*Y2**0+
      poly z [%L0x7ffffff50ca0[12],%L0x7ffffff50ca8[12],%L0x7ffffff50cb0[12],
              %L0x7ffffff50cb8[12],%L0x7ffffff50cc0[12],%L0x7ffffff50cc8[12],
              %L0x7ffffff50cd0[12],%L0x7ffffff50cd8[12],%L0x7ffffff50ce0[12],
              %L0x7ffffff50ce8[12],%L0x7ffffff50cf0[12],%L0x7ffffff50cf8[12]]*Y2**1+
      poly z [%L0x7ffffff50ca0[20],%L0x7ffffff50ca8[20],%L0x7ffffff50cb0[20],
              %L0x7ffffff50cb8[20],%L0x7ffffff50cc0[20],%L0x7ffffff50cc8[20],
              %L0x7ffffff50cd0[20],%L0x7ffffff50cd8[20],%L0x7ffffff50ce0[20],
              %L0x7ffffff50ce8[20],%L0x7ffffff50cf0[20],%L0x7ffffff50cf8[20]]*Y2**2+
      poly z [%L0x7ffffff50ca0[28],%L0x7ffffff50ca8[28],%L0x7ffffff50cb0[28],
              %L0x7ffffff50cb8[28],%L0x7ffffff50cc0[28],%L0x7ffffff50cc8[28],
              %L0x7ffffff50cd0[28],%L0x7ffffff50cd8[28],%L0x7ffffff50ce0[28],
              %L0x7ffffff50ce8[28],%L0x7ffffff50cf0[28],%L0x7ffffff50cf8[28]]*Y2**3+
      poly z [%L0x7ffffff50ca0[36],%L0x7ffffff50ca8[36],%L0x7ffffff50cb0[36],
              %L0x7ffffff50cb8[36],%L0x7ffffff50cc0[36],%L0x7ffffff50cc8[36],
              %L0x7ffffff50cd0[36],%L0x7ffffff50cd8[36],%L0x7ffffff50ce0[36],
              %L0x7ffffff50ce8[36],%L0x7ffffff50cf0[36],%L0x7ffffff50cf8[36]]*Y2**4+
      poly z [%L0x7ffffff50ca0[44],%L0x7ffffff50ca8[44],%L0x7ffffff50cb0[44],
              %L0x7ffffff50cb8[44],%L0x7ffffff50cc0[44],%L0x7ffffff50cc8[44],
              %L0x7ffffff50cd0[44],%L0x7ffffff50cd8[44],%L0x7ffffff50ce0[44],
              %L0x7ffffff50ce8[44],%L0x7ffffff50cf0[44],%L0x7ffffff50cf8[44]]*Y2**5+
      poly z [%L0x7ffffff50ca0[52],%L0x7ffffff50ca8[52],%L0x7ffffff50cb0[52],
              %L0x7ffffff50cb8[52],%L0x7ffffff50cc0[52],%L0x7ffffff50cc8[52],
              %L0x7ffffff50cd0[52],%L0x7ffffff50cd8[52],%L0x7ffffff50ce0[52],
              %L0x7ffffff50ce8[52],%L0x7ffffff50cf0[52],%L0x7ffffff50cf8[52]]*Y2**6+
      poly z [%L0x7ffffff50ca0[60],%L0x7ffffff50ca8[60],%L0x7ffffff50cb0[60],
              %L0x7ffffff50cb8[60],%L0x7ffffff50cc0[60],%L0x7ffffff50cc8[60],
              %L0x7ffffff50cd0[60],%L0x7ffffff50cd8[60],%L0x7ffffff50ce0[60],
              %L0x7ffffff50ce8[60],%L0x7ffffff50cf0[60],%L0x7ffffff50cf8[60]]*Y2**7 /\
G25 = poly z [%L0x7ffffff50ca0[5],%L0x7ffffff50ca8[5],%L0x7ffffff50cb0[5],
              %L0x7ffffff50cb8[5],%L0x7ffffff50cc0[5],%L0x7ffffff50cc8[5],
              %L0x7ffffff50cd0[5],%L0x7ffffff50cd8[5],%L0x7ffffff50ce0[5],
              %L0x7ffffff50ce8[5],%L0x7ffffff50cf0[5],%L0x7ffffff50cf8[5]]*Y2**0+
      poly z [%L0x7ffffff50ca0[13],%L0x7ffffff50ca8[13],%L0x7ffffff50cb0[13],
              %L0x7ffffff50cb8[13],%L0x7ffffff50cc0[13],%L0x7ffffff50cc8[13],
              %L0x7ffffff50cd0[13],%L0x7ffffff50cd8[13],%L0x7ffffff50ce0[13],
              %L0x7ffffff50ce8[13],%L0x7ffffff50cf0[13],%L0x7ffffff50cf8[13]]*Y2**1+
      poly z [%L0x7ffffff50ca0[21],%L0x7ffffff50ca8[21],%L0x7ffffff50cb0[21],
              %L0x7ffffff50cb8[21],%L0x7ffffff50cc0[21],%L0x7ffffff50cc8[21],
              %L0x7ffffff50cd0[21],%L0x7ffffff50cd8[21],%L0x7ffffff50ce0[21],
              %L0x7ffffff50ce8[21],%L0x7ffffff50cf0[21],%L0x7ffffff50cf8[21]]*Y2**2+
      poly z [%L0x7ffffff50ca0[29],%L0x7ffffff50ca8[29],%L0x7ffffff50cb0[29],
              %L0x7ffffff50cb8[29],%L0x7ffffff50cc0[29],%L0x7ffffff50cc8[29],
              %L0x7ffffff50cd0[29],%L0x7ffffff50cd8[29],%L0x7ffffff50ce0[29],
              %L0x7ffffff50ce8[29],%L0x7ffffff50cf0[29],%L0x7ffffff50cf8[29]]*Y2**3+
      poly z [%L0x7ffffff50ca0[37],%L0x7ffffff50ca8[37],%L0x7ffffff50cb0[37],
              %L0x7ffffff50cb8[37],%L0x7ffffff50cc0[37],%L0x7ffffff50cc8[37],
              %L0x7ffffff50cd0[37],%L0x7ffffff50cd8[37],%L0x7ffffff50ce0[37],
              %L0x7ffffff50ce8[37],%L0x7ffffff50cf0[37],%L0x7ffffff50cf8[37]]*Y2**4+
      poly z [%L0x7ffffff50ca0[45],%L0x7ffffff50ca8[45],%L0x7ffffff50cb0[45],
              %L0x7ffffff50cb8[45],%L0x7ffffff50cc0[45],%L0x7ffffff50cc8[45],
              %L0x7ffffff50cd0[45],%L0x7ffffff50cd8[45],%L0x7ffffff50ce0[45],
              %L0x7ffffff50ce8[45],%L0x7ffffff50cf0[45],%L0x7ffffff50cf8[45]]*Y2**5+
      poly z [%L0x7ffffff50ca0[53],%L0x7ffffff50ca8[53],%L0x7ffffff50cb0[53],
              %L0x7ffffff50cb8[53],%L0x7ffffff50cc0[53],%L0x7ffffff50cc8[53],
              %L0x7ffffff50cd0[53],%L0x7ffffff50cd8[53],%L0x7ffffff50ce0[53],
              %L0x7ffffff50ce8[53],%L0x7ffffff50cf0[53],%L0x7ffffff50cf8[53]]*Y2**6+
      poly z [%L0x7ffffff50ca0[61],%L0x7ffffff50ca8[61],%L0x7ffffff50cb0[61],
              %L0x7ffffff50cb8[61],%L0x7ffffff50cc0[61],%L0x7ffffff50cc8[61],
              %L0x7ffffff50cd0[61],%L0x7ffffff50cd8[61],%L0x7ffffff50ce0[61],
              %L0x7ffffff50ce8[61],%L0x7ffffff50cf0[61],%L0x7ffffff50cf8[61]]*Y2**7 /\
G26 = poly z [%L0x7ffffff50ca0[6],%L0x7ffffff50ca8[6],%L0x7ffffff50cb0[6],
              %L0x7ffffff50cb8[6],%L0x7ffffff50cc0[6],%L0x7ffffff50cc8[6],
              %L0x7ffffff50cd0[6],%L0x7ffffff50cd8[6],%L0x7ffffff50ce0[6],
              %L0x7ffffff50ce8[6],%L0x7ffffff50cf0[6],%L0x7ffffff50cf8[6]]*Y2**0+
      poly z [%L0x7ffffff50ca0[14],%L0x7ffffff50ca8[14],%L0x7ffffff50cb0[14],
              %L0x7ffffff50cb8[14],%L0x7ffffff50cc0[14],%L0x7ffffff50cc8[14],
              %L0x7ffffff50cd0[14],%L0x7ffffff50cd8[14],%L0x7ffffff50ce0[14],
              %L0x7ffffff50ce8[14],%L0x7ffffff50cf0[14],%L0x7ffffff50cf8[14]]*Y2**1+
      poly z [%L0x7ffffff50ca0[22],%L0x7ffffff50ca8[22],%L0x7ffffff50cb0[22],
              %L0x7ffffff50cb8[22],%L0x7ffffff50cc0[22],%L0x7ffffff50cc8[22],
              %L0x7ffffff50cd0[22],%L0x7ffffff50cd8[22],%L0x7ffffff50ce0[22],
              %L0x7ffffff50ce8[22],%L0x7ffffff50cf0[22],%L0x7ffffff50cf8[22]]*Y2**2+
      poly z [%L0x7ffffff50ca0[30],%L0x7ffffff50ca8[30],%L0x7ffffff50cb0[30],
              %L0x7ffffff50cb8[30],%L0x7ffffff50cc0[30],%L0x7ffffff50cc8[30],
              %L0x7ffffff50cd0[30],%L0x7ffffff50cd8[30],%L0x7ffffff50ce0[30],
              %L0x7ffffff50ce8[30],%L0x7ffffff50cf0[30],%L0x7ffffff50cf8[30]]*Y2**3+
      poly z [%L0x7ffffff50ca0[38],%L0x7ffffff50ca8[38],%L0x7ffffff50cb0[38],
              %L0x7ffffff50cb8[38],%L0x7ffffff50cc0[38],%L0x7ffffff50cc8[38],
              %L0x7ffffff50cd0[38],%L0x7ffffff50cd8[38],%L0x7ffffff50ce0[38],
              %L0x7ffffff50ce8[38],%L0x7ffffff50cf0[38],%L0x7ffffff50cf8[38]]*Y2**4+
      poly z [%L0x7ffffff50ca0[46],%L0x7ffffff50ca8[46],%L0x7ffffff50cb0[46],
              %L0x7ffffff50cb8[46],%L0x7ffffff50cc0[46],%L0x7ffffff50cc8[46],
              %L0x7ffffff50cd0[46],%L0x7ffffff50cd8[46],%L0x7ffffff50ce0[46],
              %L0x7ffffff50ce8[46],%L0x7ffffff50cf0[46],%L0x7ffffff50cf8[46]]*Y2**5+
      poly z [%L0x7ffffff50ca0[54],%L0x7ffffff50ca8[54],%L0x7ffffff50cb0[54],
              %L0x7ffffff50cb8[54],%L0x7ffffff50cc0[54],%L0x7ffffff50cc8[54],
              %L0x7ffffff50cd0[54],%L0x7ffffff50cd8[54],%L0x7ffffff50ce0[54],
              %L0x7ffffff50ce8[54],%L0x7ffffff50cf0[54],%L0x7ffffff50cf8[54]]*Y2**6+
      poly z [%L0x7ffffff50ca0[62],%L0x7ffffff50ca8[62],%L0x7ffffff50cb0[62],
              %L0x7ffffff50cb8[62],%L0x7ffffff50cc0[62],%L0x7ffffff50cc8[62],
              %L0x7ffffff50cd0[62],%L0x7ffffff50cd8[62],%L0x7ffffff50ce0[62],
              %L0x7ffffff50ce8[62],%L0x7ffffff50cf0[62],%L0x7ffffff50cf8[62]]*Y2**7 /\
G27 = poly z [%L0x7ffffff50ca0[7],%L0x7ffffff50ca8[7],%L0x7ffffff50cb0[7],
              %L0x7ffffff50cb8[7],%L0x7ffffff50cc0[7],%L0x7ffffff50cc8[7],
              %L0x7ffffff50cd0[7],%L0x7ffffff50cd8[7],%L0x7ffffff50ce0[7],
              %L0x7ffffff50ce8[7],%L0x7ffffff50cf0[7],%L0x7ffffff50cf8[7]]*Y2**0+
      poly z [%L0x7ffffff50ca0[15],%L0x7ffffff50ca8[15],%L0x7ffffff50cb0[15],
              %L0x7ffffff50cb8[15],%L0x7ffffff50cc0[15],%L0x7ffffff50cc8[15],
              %L0x7ffffff50cd0[15],%L0x7ffffff50cd8[15],%L0x7ffffff50ce0[15],
              %L0x7ffffff50ce8[15],%L0x7ffffff50cf0[15],%L0x7ffffff50cf8[15]]*Y2**1+
      poly z [%L0x7ffffff50ca0[23],%L0x7ffffff50ca8[23],%L0x7ffffff50cb0[23],
              %L0x7ffffff50cb8[23],%L0x7ffffff50cc0[23],%L0x7ffffff50cc8[23],
              %L0x7ffffff50cd0[23],%L0x7ffffff50cd8[23],%L0x7ffffff50ce0[23],
              %L0x7ffffff50ce8[23],%L0x7ffffff50cf0[23],%L0x7ffffff50cf8[23]]*Y2**2+
      poly z [%L0x7ffffff50ca0[31],%L0x7ffffff50ca8[31],%L0x7ffffff50cb0[31],
              %L0x7ffffff50cb8[31],%L0x7ffffff50cc0[31],%L0x7ffffff50cc8[31],
              %L0x7ffffff50cd0[31],%L0x7ffffff50cd8[31],%L0x7ffffff50ce0[31],
              %L0x7ffffff50ce8[31],%L0x7ffffff50cf0[31],%L0x7ffffff50cf8[31]]*Y2**3+
      poly z [%L0x7ffffff50ca0[39],%L0x7ffffff50ca8[39],%L0x7ffffff50cb0[39],
              %L0x7ffffff50cb8[39],%L0x7ffffff50cc0[39],%L0x7ffffff50cc8[39],
              %L0x7ffffff50cd0[39],%L0x7ffffff50cd8[39],%L0x7ffffff50ce0[39],
              %L0x7ffffff50ce8[39],%L0x7ffffff50cf0[39],%L0x7ffffff50cf8[39]]*Y2**4+
      poly z [%L0x7ffffff50ca0[47],%L0x7ffffff50ca8[47],%L0x7ffffff50cb0[47],
              %L0x7ffffff50cb8[47],%L0x7ffffff50cc0[47],%L0x7ffffff50cc8[47],
              %L0x7ffffff50cd0[47],%L0x7ffffff50cd8[47],%L0x7ffffff50ce0[47],
              %L0x7ffffff50ce8[47],%L0x7ffffff50cf0[47],%L0x7ffffff50cf8[47]]*Y2**5+
      poly z [%L0x7ffffff50ca0[55],%L0x7ffffff50ca8[55],%L0x7ffffff50cb0[55],
              %L0x7ffffff50cb8[55],%L0x7ffffff50cc0[55],%L0x7ffffff50cc8[55],
              %L0x7ffffff50cd0[55],%L0x7ffffff50cd8[55],%L0x7ffffff50ce0[55],
              %L0x7ffffff50ce8[55],%L0x7ffffff50cf0[55],%L0x7ffffff50cf8[55]]*Y2**6+
      poly z [%L0x7ffffff50ca0[63],%L0x7ffffff50ca8[63],%L0x7ffffff50cb0[63],
              %L0x7ffffff50cb8[63],%L0x7ffffff50cc0[63],%L0x7ffffff50cc8[63],
              %L0x7ffffff50cd0[63],%L0x7ffffff50cd8[63],%L0x7ffffff50ce0[63],
              %L0x7ffffff50ce8[63],%L0x7ffffff50cf0[63],%L0x7ffffff50cf8[63]]*Y2**7 
   && true;

(* 5 *)
cut eqmod F20 G20 [2, z**12+z**3+1] /\ eqmod F21 G21 [2, z**12+z**3+1] /\
    eqmod F22 G22 [2, z**12+z**3+1] /\ eqmod F23 G23 [2, z**12+z**3+1] /\
    eqmod F24 G24 [2, z**12+z**3+1] /\ eqmod F25 G25 [2, z**12+z**3+1] /\
    eqmod F26 G26 [2, z**12+z**3+1] /\ eqmod F27 G27 [2, z**12+z**3+1] /\
G20 = poly z [%L0x7ffffff50ca0[0],%L0x7ffffff50ca8[0],%L0x7ffffff50cb0[0],
              %L0x7ffffff50cb8[0],%L0x7ffffff50cc0[0],%L0x7ffffff50cc8[0],
              %L0x7ffffff50cd0[0],%L0x7ffffff50cd8[0],%L0x7ffffff50ce0[0],
              %L0x7ffffff50ce8[0],%L0x7ffffff50cf0[0],%L0x7ffffff50cf8[0]]*Y2**0+
      poly z [%L0x7ffffff50ca0[8],%L0x7ffffff50ca8[8],%L0x7ffffff50cb0[8],
              %L0x7ffffff50cb8[8],%L0x7ffffff50cc0[8],%L0x7ffffff50cc8[8],
              %L0x7ffffff50cd0[8],%L0x7ffffff50cd8[8],%L0x7ffffff50ce0[8],
              %L0x7ffffff50ce8[8],%L0x7ffffff50cf0[8],%L0x7ffffff50cf8[8]]*Y2**1+
      poly z [%L0x7ffffff50ca0[16],%L0x7ffffff50ca8[16],%L0x7ffffff50cb0[16],
              %L0x7ffffff50cb8[16],%L0x7ffffff50cc0[16],%L0x7ffffff50cc8[16],
              %L0x7ffffff50cd0[16],%L0x7ffffff50cd8[16],%L0x7ffffff50ce0[16],
              %L0x7ffffff50ce8[16],%L0x7ffffff50cf0[16],%L0x7ffffff50cf8[16]]*Y2**2+
      poly z [%L0x7ffffff50ca0[24],%L0x7ffffff50ca8[24],%L0x7ffffff50cb0[24],
              %L0x7ffffff50cb8[24],%L0x7ffffff50cc0[24],%L0x7ffffff50cc8[24],
              %L0x7ffffff50cd0[24],%L0x7ffffff50cd8[24],%L0x7ffffff50ce0[24],
              %L0x7ffffff50ce8[24],%L0x7ffffff50cf0[24],%L0x7ffffff50cf8[24]]*Y2**3+
      poly z [%L0x7ffffff50ca0[32],%L0x7ffffff50ca8[32],%L0x7ffffff50cb0[32],
              %L0x7ffffff50cb8[32],%L0x7ffffff50cc0[32],%L0x7ffffff50cc8[32],
              %L0x7ffffff50cd0[32],%L0x7ffffff50cd8[32],%L0x7ffffff50ce0[32],
              %L0x7ffffff50ce8[32],%L0x7ffffff50cf0[32],%L0x7ffffff50cf8[32]]*Y2**4+
      poly z [%L0x7ffffff50ca0[40],%L0x7ffffff50ca8[40],%L0x7ffffff50cb0[40],
              %L0x7ffffff50cb8[40],%L0x7ffffff50cc0[40],%L0x7ffffff50cc8[40],
              %L0x7ffffff50cd0[40],%L0x7ffffff50cd8[40],%L0x7ffffff50ce0[40],
              %L0x7ffffff50ce8[40],%L0x7ffffff50cf0[40],%L0x7ffffff50cf8[40]]*Y2**5+
      poly z [%L0x7ffffff50ca0[48],%L0x7ffffff50ca8[48],%L0x7ffffff50cb0[48],
              %L0x7ffffff50cb8[48],%L0x7ffffff50cc0[48],%L0x7ffffff50cc8[48],
              %L0x7ffffff50cd0[48],%L0x7ffffff50cd8[48],%L0x7ffffff50ce0[48],
              %L0x7ffffff50ce8[48],%L0x7ffffff50cf0[48],%L0x7ffffff50cf8[48]]*Y2**6+
      poly z [%L0x7ffffff50ca0[56],%L0x7ffffff50ca8[56],%L0x7ffffff50cb0[56],
              %L0x7ffffff50cb8[56],%L0x7ffffff50cc0[56],%L0x7ffffff50cc8[56],
              %L0x7ffffff50cd0[56],%L0x7ffffff50cd8[56],%L0x7ffffff50ce0[56],
              %L0x7ffffff50ce8[56],%L0x7ffffff50cf0[56],%L0x7ffffff50cf8[56]]*Y2**7 /\
G21 = poly z [%L0x7ffffff50ca0[1],%L0x7ffffff50ca8[1],%L0x7ffffff50cb0[1],
              %L0x7ffffff50cb8[1],%L0x7ffffff50cc0[1],%L0x7ffffff50cc8[1],
              %L0x7ffffff50cd0[1],%L0x7ffffff50cd8[1],%L0x7ffffff50ce0[1],
              %L0x7ffffff50ce8[1],%L0x7ffffff50cf0[1],%L0x7ffffff50cf8[1]]*Y2**0+
      poly z [%L0x7ffffff50ca0[9],%L0x7ffffff50ca8[9],%L0x7ffffff50cb0[9],
              %L0x7ffffff50cb8[9],%L0x7ffffff50cc0[9],%L0x7ffffff50cc8[9],
              %L0x7ffffff50cd0[9],%L0x7ffffff50cd8[9],%L0x7ffffff50ce0[9],
              %L0x7ffffff50ce8[9],%L0x7ffffff50cf0[9],%L0x7ffffff50cf8[9]]*Y2**1+
      poly z [%L0x7ffffff50ca0[17],%L0x7ffffff50ca8[17],%L0x7ffffff50cb0[17],
              %L0x7ffffff50cb8[17],%L0x7ffffff50cc0[17],%L0x7ffffff50cc8[17],
              %L0x7ffffff50cd0[17],%L0x7ffffff50cd8[17],%L0x7ffffff50ce0[17],
              %L0x7ffffff50ce8[17],%L0x7ffffff50cf0[17],%L0x7ffffff50cf8[17]]*Y2**2+
      poly z [%L0x7ffffff50ca0[25],%L0x7ffffff50ca8[25],%L0x7ffffff50cb0[25],
              %L0x7ffffff50cb8[25],%L0x7ffffff50cc0[25],%L0x7ffffff50cc8[25],
              %L0x7ffffff50cd0[25],%L0x7ffffff50cd8[25],%L0x7ffffff50ce0[25],
              %L0x7ffffff50ce8[25],%L0x7ffffff50cf0[25],%L0x7ffffff50cf8[25]]*Y2**3+
      poly z [%L0x7ffffff50ca0[33],%L0x7ffffff50ca8[33],%L0x7ffffff50cb0[33],
              %L0x7ffffff50cb8[33],%L0x7ffffff50cc0[33],%L0x7ffffff50cc8[33],
              %L0x7ffffff50cd0[33],%L0x7ffffff50cd8[33],%L0x7ffffff50ce0[33],
              %L0x7ffffff50ce8[33],%L0x7ffffff50cf0[33],%L0x7ffffff50cf8[33]]*Y2**4+
      poly z [%L0x7ffffff50ca0[41],%L0x7ffffff50ca8[41],%L0x7ffffff50cb0[41],
              %L0x7ffffff50cb8[41],%L0x7ffffff50cc0[41],%L0x7ffffff50cc8[41],
              %L0x7ffffff50cd0[41],%L0x7ffffff50cd8[41],%L0x7ffffff50ce0[41],
              %L0x7ffffff50ce8[41],%L0x7ffffff50cf0[41],%L0x7ffffff50cf8[41]]*Y2**5+
      poly z [%L0x7ffffff50ca0[49],%L0x7ffffff50ca8[49],%L0x7ffffff50cb0[49],
              %L0x7ffffff50cb8[49],%L0x7ffffff50cc0[49],%L0x7ffffff50cc8[49],
              %L0x7ffffff50cd0[49],%L0x7ffffff50cd8[49],%L0x7ffffff50ce0[49],
              %L0x7ffffff50ce8[49],%L0x7ffffff50cf0[49],%L0x7ffffff50cf8[49]]*Y2**6+
      poly z [%L0x7ffffff50ca0[57],%L0x7ffffff50ca8[57],%L0x7ffffff50cb0[57],
              %L0x7ffffff50cb8[57],%L0x7ffffff50cc0[57],%L0x7ffffff50cc8[57],
              %L0x7ffffff50cd0[57],%L0x7ffffff50cd8[57],%L0x7ffffff50ce0[57],
              %L0x7ffffff50ce8[57],%L0x7ffffff50cf0[57],%L0x7ffffff50cf8[57]]*Y2**7 /\
G22 = poly z [%L0x7ffffff50ca0[2],%L0x7ffffff50ca8[2],%L0x7ffffff50cb0[2],
              %L0x7ffffff50cb8[2],%L0x7ffffff50cc0[2],%L0x7ffffff50cc8[2],
              %L0x7ffffff50cd0[2],%L0x7ffffff50cd8[2],%L0x7ffffff50ce0[2],
              %L0x7ffffff50ce8[2],%L0x7ffffff50cf0[2],%L0x7ffffff50cf8[2]]*Y2**0+
      poly z [%L0x7ffffff50ca0[10],%L0x7ffffff50ca8[10],%L0x7ffffff50cb0[10],
              %L0x7ffffff50cb8[10],%L0x7ffffff50cc0[10],%L0x7ffffff50cc8[10],
              %L0x7ffffff50cd0[10],%L0x7ffffff50cd8[10],%L0x7ffffff50ce0[10],
              %L0x7ffffff50ce8[10],%L0x7ffffff50cf0[10],%L0x7ffffff50cf8[10]]*Y2**1+
      poly z [%L0x7ffffff50ca0[18],%L0x7ffffff50ca8[18],%L0x7ffffff50cb0[18],
              %L0x7ffffff50cb8[18],%L0x7ffffff50cc0[18],%L0x7ffffff50cc8[18],
              %L0x7ffffff50cd0[18],%L0x7ffffff50cd8[18],%L0x7ffffff50ce0[18],
              %L0x7ffffff50ce8[18],%L0x7ffffff50cf0[18],%L0x7ffffff50cf8[18]]*Y2**2+
      poly z [%L0x7ffffff50ca0[26],%L0x7ffffff50ca8[26],%L0x7ffffff50cb0[26],
              %L0x7ffffff50cb8[26],%L0x7ffffff50cc0[26],%L0x7ffffff50cc8[26],
              %L0x7ffffff50cd0[26],%L0x7ffffff50cd8[26],%L0x7ffffff50ce0[26],
              %L0x7ffffff50ce8[26],%L0x7ffffff50cf0[26],%L0x7ffffff50cf8[26]]*Y2**3+
      poly z [%L0x7ffffff50ca0[34],%L0x7ffffff50ca8[34],%L0x7ffffff50cb0[34],
              %L0x7ffffff50cb8[34],%L0x7ffffff50cc0[34],%L0x7ffffff50cc8[34],
              %L0x7ffffff50cd0[34],%L0x7ffffff50cd8[34],%L0x7ffffff50ce0[34],
              %L0x7ffffff50ce8[34],%L0x7ffffff50cf0[34],%L0x7ffffff50cf8[34]]*Y2**4+
      poly z [%L0x7ffffff50ca0[42],%L0x7ffffff50ca8[42],%L0x7ffffff50cb0[42],
              %L0x7ffffff50cb8[42],%L0x7ffffff50cc0[42],%L0x7ffffff50cc8[42],
              %L0x7ffffff50cd0[42],%L0x7ffffff50cd8[42],%L0x7ffffff50ce0[42],
              %L0x7ffffff50ce8[42],%L0x7ffffff50cf0[42],%L0x7ffffff50cf8[42]]*Y2**5+
      poly z [%L0x7ffffff50ca0[50],%L0x7ffffff50ca8[50],%L0x7ffffff50cb0[50],
              %L0x7ffffff50cb8[50],%L0x7ffffff50cc0[50],%L0x7ffffff50cc8[50],
              %L0x7ffffff50cd0[50],%L0x7ffffff50cd8[50],%L0x7ffffff50ce0[50],
              %L0x7ffffff50ce8[50],%L0x7ffffff50cf0[50],%L0x7ffffff50cf8[50]]*Y2**6+
      poly z [%L0x7ffffff50ca0[58],%L0x7ffffff50ca8[58],%L0x7ffffff50cb0[58],
              %L0x7ffffff50cb8[58],%L0x7ffffff50cc0[58],%L0x7ffffff50cc8[58],
              %L0x7ffffff50cd0[58],%L0x7ffffff50cd8[58],%L0x7ffffff50ce0[58],
              %L0x7ffffff50ce8[58],%L0x7ffffff50cf0[58],%L0x7ffffff50cf8[58]]*Y2**7 /\
G23 = poly z [%L0x7ffffff50ca0[3],%L0x7ffffff50ca8[3],%L0x7ffffff50cb0[3],
              %L0x7ffffff50cb8[3],%L0x7ffffff50cc0[3],%L0x7ffffff50cc8[3],
              %L0x7ffffff50cd0[3],%L0x7ffffff50cd8[3],%L0x7ffffff50ce0[3],
              %L0x7ffffff50ce8[3],%L0x7ffffff50cf0[3],%L0x7ffffff50cf8[3]]*Y2**0+
      poly z [%L0x7ffffff50ca0[11],%L0x7ffffff50ca8[11],%L0x7ffffff50cb0[11],
              %L0x7ffffff50cb8[11],%L0x7ffffff50cc0[11],%L0x7ffffff50cc8[11],
              %L0x7ffffff50cd0[11],%L0x7ffffff50cd8[11],%L0x7ffffff50ce0[11],
              %L0x7ffffff50ce8[11],%L0x7ffffff50cf0[11],%L0x7ffffff50cf8[11]]*Y2**1+
      poly z [%L0x7ffffff50ca0[19],%L0x7ffffff50ca8[19],%L0x7ffffff50cb0[19],
              %L0x7ffffff50cb8[19],%L0x7ffffff50cc0[19],%L0x7ffffff50cc8[19],
              %L0x7ffffff50cd0[19],%L0x7ffffff50cd8[19],%L0x7ffffff50ce0[19],
              %L0x7ffffff50ce8[19],%L0x7ffffff50cf0[19],%L0x7ffffff50cf8[19]]*Y2**2+
      poly z [%L0x7ffffff50ca0[27],%L0x7ffffff50ca8[27],%L0x7ffffff50cb0[27],
              %L0x7ffffff50cb8[27],%L0x7ffffff50cc0[27],%L0x7ffffff50cc8[27],
              %L0x7ffffff50cd0[27],%L0x7ffffff50cd8[27],%L0x7ffffff50ce0[27],
              %L0x7ffffff50ce8[27],%L0x7ffffff50cf0[27],%L0x7ffffff50cf8[27]]*Y2**3+
      poly z [%L0x7ffffff50ca0[35],%L0x7ffffff50ca8[35],%L0x7ffffff50cb0[35],
              %L0x7ffffff50cb8[35],%L0x7ffffff50cc0[35],%L0x7ffffff50cc8[35],
              %L0x7ffffff50cd0[35],%L0x7ffffff50cd8[35],%L0x7ffffff50ce0[35],
              %L0x7ffffff50ce8[35],%L0x7ffffff50cf0[35],%L0x7ffffff50cf8[35]]*Y2**4+
      poly z [%L0x7ffffff50ca0[43],%L0x7ffffff50ca8[43],%L0x7ffffff50cb0[43],
              %L0x7ffffff50cb8[43],%L0x7ffffff50cc0[43],%L0x7ffffff50cc8[43],
              %L0x7ffffff50cd0[43],%L0x7ffffff50cd8[43],%L0x7ffffff50ce0[43],
              %L0x7ffffff50ce8[43],%L0x7ffffff50cf0[43],%L0x7ffffff50cf8[43]]*Y2**5+
      poly z [%L0x7ffffff50ca0[51],%L0x7ffffff50ca8[51],%L0x7ffffff50cb0[51],
              %L0x7ffffff50cb8[51],%L0x7ffffff50cc0[51],%L0x7ffffff50cc8[51],
              %L0x7ffffff50cd0[51],%L0x7ffffff50cd8[51],%L0x7ffffff50ce0[51],
              %L0x7ffffff50ce8[51],%L0x7ffffff50cf0[51],%L0x7ffffff50cf8[51]]*Y2**6+
      poly z [%L0x7ffffff50ca0[59],%L0x7ffffff50ca8[59],%L0x7ffffff50cb0[59],
              %L0x7ffffff50cb8[59],%L0x7ffffff50cc0[59],%L0x7ffffff50cc8[59],
              %L0x7ffffff50cd0[59],%L0x7ffffff50cd8[59],%L0x7ffffff50ce0[59],
              %L0x7ffffff50ce8[59],%L0x7ffffff50cf0[59],%L0x7ffffff50cf8[59]]*Y2**7 /\
G24 = poly z [%L0x7ffffff50ca0[4],%L0x7ffffff50ca8[4],%L0x7ffffff50cb0[4],
              %L0x7ffffff50cb8[4],%L0x7ffffff50cc0[4],%L0x7ffffff50cc8[4],
              %L0x7ffffff50cd0[4],%L0x7ffffff50cd8[4],%L0x7ffffff50ce0[4],
              %L0x7ffffff50ce8[4],%L0x7ffffff50cf0[4],%L0x7ffffff50cf8[4]]*Y2**0+
      poly z [%L0x7ffffff50ca0[12],%L0x7ffffff50ca8[12],%L0x7ffffff50cb0[12],
              %L0x7ffffff50cb8[12],%L0x7ffffff50cc0[12],%L0x7ffffff50cc8[12],
              %L0x7ffffff50cd0[12],%L0x7ffffff50cd8[12],%L0x7ffffff50ce0[12],
              %L0x7ffffff50ce8[12],%L0x7ffffff50cf0[12],%L0x7ffffff50cf8[12]]*Y2**1+
      poly z [%L0x7ffffff50ca0[20],%L0x7ffffff50ca8[20],%L0x7ffffff50cb0[20],
              %L0x7ffffff50cb8[20],%L0x7ffffff50cc0[20],%L0x7ffffff50cc8[20],
              %L0x7ffffff50cd0[20],%L0x7ffffff50cd8[20],%L0x7ffffff50ce0[20],
              %L0x7ffffff50ce8[20],%L0x7ffffff50cf0[20],%L0x7ffffff50cf8[20]]*Y2**2+
      poly z [%L0x7ffffff50ca0[28],%L0x7ffffff50ca8[28],%L0x7ffffff50cb0[28],
              %L0x7ffffff50cb8[28],%L0x7ffffff50cc0[28],%L0x7ffffff50cc8[28],
              %L0x7ffffff50cd0[28],%L0x7ffffff50cd8[28],%L0x7ffffff50ce0[28],
              %L0x7ffffff50ce8[28],%L0x7ffffff50cf0[28],%L0x7ffffff50cf8[28]]*Y2**3+
      poly z [%L0x7ffffff50ca0[36],%L0x7ffffff50ca8[36],%L0x7ffffff50cb0[36],
              %L0x7ffffff50cb8[36],%L0x7ffffff50cc0[36],%L0x7ffffff50cc8[36],
              %L0x7ffffff50cd0[36],%L0x7ffffff50cd8[36],%L0x7ffffff50ce0[36],
              %L0x7ffffff50ce8[36],%L0x7ffffff50cf0[36],%L0x7ffffff50cf8[36]]*Y2**4+
      poly z [%L0x7ffffff50ca0[44],%L0x7ffffff50ca8[44],%L0x7ffffff50cb0[44],
              %L0x7ffffff50cb8[44],%L0x7ffffff50cc0[44],%L0x7ffffff50cc8[44],
              %L0x7ffffff50cd0[44],%L0x7ffffff50cd8[44],%L0x7ffffff50ce0[44],
              %L0x7ffffff50ce8[44],%L0x7ffffff50cf0[44],%L0x7ffffff50cf8[44]]*Y2**5+
      poly z [%L0x7ffffff50ca0[52],%L0x7ffffff50ca8[52],%L0x7ffffff50cb0[52],
              %L0x7ffffff50cb8[52],%L0x7ffffff50cc0[52],%L0x7ffffff50cc8[52],
              %L0x7ffffff50cd0[52],%L0x7ffffff50cd8[52],%L0x7ffffff50ce0[52],
              %L0x7ffffff50ce8[52],%L0x7ffffff50cf0[52],%L0x7ffffff50cf8[52]]*Y2**6+
      poly z [%L0x7ffffff50ca0[60],%L0x7ffffff50ca8[60],%L0x7ffffff50cb0[60],
              %L0x7ffffff50cb8[60],%L0x7ffffff50cc0[60],%L0x7ffffff50cc8[60],
              %L0x7ffffff50cd0[60],%L0x7ffffff50cd8[60],%L0x7ffffff50ce0[60],
              %L0x7ffffff50ce8[60],%L0x7ffffff50cf0[60],%L0x7ffffff50cf8[60]]*Y2**7 /\
G25 = poly z [%L0x7ffffff50ca0[5],%L0x7ffffff50ca8[5],%L0x7ffffff50cb0[5],
              %L0x7ffffff50cb8[5],%L0x7ffffff50cc0[5],%L0x7ffffff50cc8[5],
              %L0x7ffffff50cd0[5],%L0x7ffffff50cd8[5],%L0x7ffffff50ce0[5],
              %L0x7ffffff50ce8[5],%L0x7ffffff50cf0[5],%L0x7ffffff50cf8[5]]*Y2**0+
      poly z [%L0x7ffffff50ca0[13],%L0x7ffffff50ca8[13],%L0x7ffffff50cb0[13],
              %L0x7ffffff50cb8[13],%L0x7ffffff50cc0[13],%L0x7ffffff50cc8[13],
              %L0x7ffffff50cd0[13],%L0x7ffffff50cd8[13],%L0x7ffffff50ce0[13],
              %L0x7ffffff50ce8[13],%L0x7ffffff50cf0[13],%L0x7ffffff50cf8[13]]*Y2**1+
      poly z [%L0x7ffffff50ca0[21],%L0x7ffffff50ca8[21],%L0x7ffffff50cb0[21],
              %L0x7ffffff50cb8[21],%L0x7ffffff50cc0[21],%L0x7ffffff50cc8[21],
              %L0x7ffffff50cd0[21],%L0x7ffffff50cd8[21],%L0x7ffffff50ce0[21],
              %L0x7ffffff50ce8[21],%L0x7ffffff50cf0[21],%L0x7ffffff50cf8[21]]*Y2**2+
      poly z [%L0x7ffffff50ca0[29],%L0x7ffffff50ca8[29],%L0x7ffffff50cb0[29],
              %L0x7ffffff50cb8[29],%L0x7ffffff50cc0[29],%L0x7ffffff50cc8[29],
              %L0x7ffffff50cd0[29],%L0x7ffffff50cd8[29],%L0x7ffffff50ce0[29],
              %L0x7ffffff50ce8[29],%L0x7ffffff50cf0[29],%L0x7ffffff50cf8[29]]*Y2**3+
      poly z [%L0x7ffffff50ca0[37],%L0x7ffffff50ca8[37],%L0x7ffffff50cb0[37],
              %L0x7ffffff50cb8[37],%L0x7ffffff50cc0[37],%L0x7ffffff50cc8[37],
              %L0x7ffffff50cd0[37],%L0x7ffffff50cd8[37],%L0x7ffffff50ce0[37],
              %L0x7ffffff50ce8[37],%L0x7ffffff50cf0[37],%L0x7ffffff50cf8[37]]*Y2**4+
      poly z [%L0x7ffffff50ca0[45],%L0x7ffffff50ca8[45],%L0x7ffffff50cb0[45],
              %L0x7ffffff50cb8[45],%L0x7ffffff50cc0[45],%L0x7ffffff50cc8[45],
              %L0x7ffffff50cd0[45],%L0x7ffffff50cd8[45],%L0x7ffffff50ce0[45],
              %L0x7ffffff50ce8[45],%L0x7ffffff50cf0[45],%L0x7ffffff50cf8[45]]*Y2**5+
      poly z [%L0x7ffffff50ca0[53],%L0x7ffffff50ca8[53],%L0x7ffffff50cb0[53],
              %L0x7ffffff50cb8[53],%L0x7ffffff50cc0[53],%L0x7ffffff50cc8[53],
              %L0x7ffffff50cd0[53],%L0x7ffffff50cd8[53],%L0x7ffffff50ce0[53],
              %L0x7ffffff50ce8[53],%L0x7ffffff50cf0[53],%L0x7ffffff50cf8[53]]*Y2**6+
      poly z [%L0x7ffffff50ca0[61],%L0x7ffffff50ca8[61],%L0x7ffffff50cb0[61],
              %L0x7ffffff50cb8[61],%L0x7ffffff50cc0[61],%L0x7ffffff50cc8[61],
              %L0x7ffffff50cd0[61],%L0x7ffffff50cd8[61],%L0x7ffffff50ce0[61],
              %L0x7ffffff50ce8[61],%L0x7ffffff50cf0[61],%L0x7ffffff50cf8[61]]*Y2**7 /\
G26 = poly z [%L0x7ffffff50ca0[6],%L0x7ffffff50ca8[6],%L0x7ffffff50cb0[6],
              %L0x7ffffff50cb8[6],%L0x7ffffff50cc0[6],%L0x7ffffff50cc8[6],
              %L0x7ffffff50cd0[6],%L0x7ffffff50cd8[6],%L0x7ffffff50ce0[6],
              %L0x7ffffff50ce8[6],%L0x7ffffff50cf0[6],%L0x7ffffff50cf8[6]]*Y2**0+
      poly z [%L0x7ffffff50ca0[14],%L0x7ffffff50ca8[14],%L0x7ffffff50cb0[14],
              %L0x7ffffff50cb8[14],%L0x7ffffff50cc0[14],%L0x7ffffff50cc8[14],
              %L0x7ffffff50cd0[14],%L0x7ffffff50cd8[14],%L0x7ffffff50ce0[14],
              %L0x7ffffff50ce8[14],%L0x7ffffff50cf0[14],%L0x7ffffff50cf8[14]]*Y2**1+
      poly z [%L0x7ffffff50ca0[22],%L0x7ffffff50ca8[22],%L0x7ffffff50cb0[22],
              %L0x7ffffff50cb8[22],%L0x7ffffff50cc0[22],%L0x7ffffff50cc8[22],
              %L0x7ffffff50cd0[22],%L0x7ffffff50cd8[22],%L0x7ffffff50ce0[22],
              %L0x7ffffff50ce8[22],%L0x7ffffff50cf0[22],%L0x7ffffff50cf8[22]]*Y2**2+
      poly z [%L0x7ffffff50ca0[30],%L0x7ffffff50ca8[30],%L0x7ffffff50cb0[30],
              %L0x7ffffff50cb8[30],%L0x7ffffff50cc0[30],%L0x7ffffff50cc8[30],
              %L0x7ffffff50cd0[30],%L0x7ffffff50cd8[30],%L0x7ffffff50ce0[30],
              %L0x7ffffff50ce8[30],%L0x7ffffff50cf0[30],%L0x7ffffff50cf8[30]]*Y2**3+
      poly z [%L0x7ffffff50ca0[38],%L0x7ffffff50ca8[38],%L0x7ffffff50cb0[38],
              %L0x7ffffff50cb8[38],%L0x7ffffff50cc0[38],%L0x7ffffff50cc8[38],
              %L0x7ffffff50cd0[38],%L0x7ffffff50cd8[38],%L0x7ffffff50ce0[38],
              %L0x7ffffff50ce8[38],%L0x7ffffff50cf0[38],%L0x7ffffff50cf8[38]]*Y2**4+
      poly z [%L0x7ffffff50ca0[46],%L0x7ffffff50ca8[46],%L0x7ffffff50cb0[46],
              %L0x7ffffff50cb8[46],%L0x7ffffff50cc0[46],%L0x7ffffff50cc8[46],
              %L0x7ffffff50cd0[46],%L0x7ffffff50cd8[46],%L0x7ffffff50ce0[46],
              %L0x7ffffff50ce8[46],%L0x7ffffff50cf0[46],%L0x7ffffff50cf8[46]]*Y2**5+
      poly z [%L0x7ffffff50ca0[54],%L0x7ffffff50ca8[54],%L0x7ffffff50cb0[54],
              %L0x7ffffff50cb8[54],%L0x7ffffff50cc0[54],%L0x7ffffff50cc8[54],
              %L0x7ffffff50cd0[54],%L0x7ffffff50cd8[54],%L0x7ffffff50ce0[54],
              %L0x7ffffff50ce8[54],%L0x7ffffff50cf0[54],%L0x7ffffff50cf8[54]]*Y2**6+
      poly z [%L0x7ffffff50ca0[62],%L0x7ffffff50ca8[62],%L0x7ffffff50cb0[62],
              %L0x7ffffff50cb8[62],%L0x7ffffff50cc0[62],%L0x7ffffff50cc8[62],
              %L0x7ffffff50cd0[62],%L0x7ffffff50cd8[62],%L0x7ffffff50ce0[62],
              %L0x7ffffff50ce8[62],%L0x7ffffff50cf0[62],%L0x7ffffff50cf8[62]]*Y2**7 /\
G27 = poly z [%L0x7ffffff50ca0[7],%L0x7ffffff50ca8[7],%L0x7ffffff50cb0[7],
              %L0x7ffffff50cb8[7],%L0x7ffffff50cc0[7],%L0x7ffffff50cc8[7],
              %L0x7ffffff50cd0[7],%L0x7ffffff50cd8[7],%L0x7ffffff50ce0[7],
              %L0x7ffffff50ce8[7],%L0x7ffffff50cf0[7],%L0x7ffffff50cf8[7]]*Y2**0+
      poly z [%L0x7ffffff50ca0[15],%L0x7ffffff50ca8[15],%L0x7ffffff50cb0[15],
              %L0x7ffffff50cb8[15],%L0x7ffffff50cc0[15],%L0x7ffffff50cc8[15],
              %L0x7ffffff50cd0[15],%L0x7ffffff50cd8[15],%L0x7ffffff50ce0[15],
              %L0x7ffffff50ce8[15],%L0x7ffffff50cf0[15],%L0x7ffffff50cf8[15]]*Y2**1+
      poly z [%L0x7ffffff50ca0[23],%L0x7ffffff50ca8[23],%L0x7ffffff50cb0[23],
              %L0x7ffffff50cb8[23],%L0x7ffffff50cc0[23],%L0x7ffffff50cc8[23],
              %L0x7ffffff50cd0[23],%L0x7ffffff50cd8[23],%L0x7ffffff50ce0[23],
              %L0x7ffffff50ce8[23],%L0x7ffffff50cf0[23],%L0x7ffffff50cf8[23]]*Y2**2+
      poly z [%L0x7ffffff50ca0[31],%L0x7ffffff50ca8[31],%L0x7ffffff50cb0[31],
              %L0x7ffffff50cb8[31],%L0x7ffffff50cc0[31],%L0x7ffffff50cc8[31],
              %L0x7ffffff50cd0[31],%L0x7ffffff50cd8[31],%L0x7ffffff50ce0[31],
              %L0x7ffffff50ce8[31],%L0x7ffffff50cf0[31],%L0x7ffffff50cf8[31]]*Y2**3+
      poly z [%L0x7ffffff50ca0[39],%L0x7ffffff50ca8[39],%L0x7ffffff50cb0[39],
              %L0x7ffffff50cb8[39],%L0x7ffffff50cc0[39],%L0x7ffffff50cc8[39],
              %L0x7ffffff50cd0[39],%L0x7ffffff50cd8[39],%L0x7ffffff50ce0[39],
              %L0x7ffffff50ce8[39],%L0x7ffffff50cf0[39],%L0x7ffffff50cf8[39]]*Y2**4+
      poly z [%L0x7ffffff50ca0[47],%L0x7ffffff50ca8[47],%L0x7ffffff50cb0[47],
              %L0x7ffffff50cb8[47],%L0x7ffffff50cc0[47],%L0x7ffffff50cc8[47],
              %L0x7ffffff50cd0[47],%L0x7ffffff50cd8[47],%L0x7ffffff50ce0[47],
              %L0x7ffffff50ce8[47],%L0x7ffffff50cf0[47],%L0x7ffffff50cf8[47]]*Y2**5+
      poly z [%L0x7ffffff50ca0[55],%L0x7ffffff50ca8[55],%L0x7ffffff50cb0[55],
              %L0x7ffffff50cb8[55],%L0x7ffffff50cc0[55],%L0x7ffffff50cc8[55],
              %L0x7ffffff50cd0[55],%L0x7ffffff50cd8[55],%L0x7ffffff50ce0[55],
              %L0x7ffffff50ce8[55],%L0x7ffffff50cf0[55],%L0x7ffffff50cf8[55]]*Y2**6+
      poly z [%L0x7ffffff50ca0[63],%L0x7ffffff50ca8[63],%L0x7ffffff50cb0[63],
              %L0x7ffffff50cb8[63],%L0x7ffffff50cc0[63],%L0x7ffffff50cc8[63],
              %L0x7ffffff50cd0[63],%L0x7ffffff50cd8[63],%L0x7ffffff50ce0[63],
              %L0x7ffffff50ce8[63],%L0x7ffffff50cf0[63],%L0x7ffffff50cf8[63]]*Y2**7 
 && true;




(* mov    0x10(%rsp),%rcx                          #! EA = L0x7ffffff50990; Value = 0x0000000000000002; PC = 0x555555582d7a *)
mov %rcx %L0x7ffffff50990;
(* add    $0x1,%rcx                                #! PC = 0x555555582d7f *)
(* add $0x1, rcx *)
nop;
(* cmp    $0x5,%rcx                                #! PC = 0x555555582d83 *)
(* cmp 0x5, rcx *)
nop;
(* #jne    0x555555582c60 <radix_conversions+352>  #! PC = 0x555555582d87 *)
#jne    0x555555582c60 <radix_conversions+352>  #! 0x555555582d87 = 0x555555582d87;
(* mov    %rcx,0x10(%rsp)                          #! EA = L0x7ffffff50990; PC = 0x555555582c60 *)
mov %L0x7ffffff50990 %rcx;
(* mov    0x18(%rsp),%rdx                          #! EA = L0x7ffffff50998; Value = 0x00007ffffff50ca0; PC = 0x555555582c65 *)
mov %rdx %L0x7ffffff50998;
(* mov    %ecx,%esi                                #! PC = 0x555555582c6a *)
(* mov ecx, esi *)
nop;
(* movabs $0xf000f000f000f00,%r8                   #! PC = 0x555555582c6c *)
cast %r8@bit[64] [0xf000f000f000f00@uint64];
(* movabs $0xf000f000f000f0,%rdi                   #! PC = 0x555555582c76 *)
cast %rdi@bit[64] [0xf000f000f000f0@uint64];
(* movabs $0x3030303030303030,%r10                 #! PC = 0x555555582c80 *)
cast %r10@bit[64] [0x3030303030303030@uint64];
(* movabs $0xc0c0c0c0c0c0c0c,%r9                   #! PC = 0x555555582c8a *)
cast %r9@bit[64] [0xc0c0c0c0c0c0c0c@uint64];
(* movabs $0x4444444444444444,%r15                 #! PC = 0x555555582c94 *)
cast %r15@bit[64] [0x4444444444444444@uint64];
(* movabs $0x2222222222222222,%r11                 #! PC = 0x555555582c9e *)
cast %r11@bit[64] [0x2222222222222222@uint64];
(* nopl   0x0(%rax,%rax,1)                         #! EA = L0x2202f39b5ecc616; PC = 0x555555582ca8 *)
(* nopl *)
nop;
(* mov    (%rdx),%rax                              #! EA = L0x7ffffff50ca0; Value = 0x95e1982709d583f8; PC = 0x555555582cb0 *)
mov %rax %L0x7ffffff50ca0;
(* mov    %rax,%rcx                                #! PC = 0x555555582cb3 *)
mov %rcx %rax;
(* shr    $0x10,%rcx                               #! PC = 0x555555582cb6 *)
mov %rcx
    [%rcx[16],%rcx[17],%rcx[18],%rcx[19],%rcx[20],%rcx[21],%rcx[22],%rcx[23],
     %rcx[24],%rcx[25],%rcx[26],%rcx[27],%rcx[28],%rcx[29],%rcx[30],%rcx[31],
     %rcx[32],%rcx[33],%rcx[34],%rcx[35],%rcx[36],%rcx[37],%rcx[38],%rcx[39],
     %rcx[40],%rcx[41],%rcx[42],%rcx[43],%rcx[44],%rcx[45],%rcx[46],%rcx[47],
     %rcx[48],%rcx[49],%rcx[50],%rcx[51],%rcx[52],%rcx[53],%rcx[54],%rcx[55],
     %rcx[56],%rcx[57],%rcx[58],%rcx[59],%rcx[60],%rcx[61],%rcx[62],%rcx[63],
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit];
(* and    %rbx,%rcx                                #! PC = 0x555555582cba *)
mov %rcx
    [0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     %rcx[32],%rcx[33],%rcx[34],%rcx[35],%rcx[36],%rcx[37],%rcx[38],%rcx[39],
     %rcx[40],%rcx[41],%rcx[42],%rcx[43],%rcx[44],%rcx[45],%rcx[46],%rcx[47],
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit];
(* xor    %rax,%rcx                                #! PC = 0x555555582cbd *)
adds %dc %rcx %rax %rcx;
(* mov    %rcx,%rax                                #! PC = 0x555555582cc0 *)
mov %rax %rcx;
(* shr    $0x10,%rax                               #! PC = 0x555555582cc3 *)
mov %rax
    [%rax[16],%rax[17],%rax[18],%rax[19],%rax[20],%rax[21],%rax[22],%rax[23],
     %rax[24],%rax[25],%rax[26],%rax[27],%rax[28],%rax[29],%rax[30],%rax[31],
     %rax[32],%rax[33],%rax[34],%rax[35],%rax[36],%rax[37],%rax[38],%rax[39],
     %rax[40],%rax[41],%rax[42],%rax[43],%rax[44],%rax[45],%rax[46],%rax[47],
     %rax[48],%rax[49],%rax[50],%rax[51],%rax[52],%rax[53],%rax[54],%rax[55],
     %rax[56],%rax[57],%rax[58],%rax[59],%rax[60],%rax[61],%rax[62],%rax[63],
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit];
(* and    $0xffff0000,%eax                         #! PC = 0x555555582cc7 *)
mov %rax
    [0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     %rax[16],%rax[17],%rax[18],%rax[19],%rax[20],%rax[21],%rax[22],%rax[23],
     %rax[24],%rax[25],%rax[26],%rax[27],%rax[28],%rax[29],%rax[30],%rax[31],
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit];
(* xor    %rcx,%rax                                #! PC = 0x555555582ccc *)
adds %dc %rax %rcx %rax;
(* cmp    $0x4,%esi                                #! PC = 0x555555582ccf *)
(* cmp 0x4, esi *)
nop;
(* #je     0x555555582d48 <radix_conversions+584>  #! PC = 0x555555582cd2 *)
#je     0x555555582d48 <radix_conversions+584>  #! 0x555555582cd2 = 0x555555582cd2;
(* mov    %rax,%rcx                                #! PC = 0x555555582cd4 *)
mov %rcx %rax;
(* shr    $0x8,%rcx                                #! PC = 0x555555582cd7 *)
mov %rcx
    [%rcx[8],%rcx[9],%rcx[10],%rcx[11],%rcx[12],%rcx[13],%rcx[14],%rcx[15],
     %rcx[16],%rcx[17],%rcx[18],%rcx[19],%rcx[20],%rcx[21],%rcx[22],%rcx[23],
     %rcx[24],%rcx[25],%rcx[26],%rcx[27],%rcx[28],%rcx[29],%rcx[30],%rcx[31],
     %rcx[32],%rcx[33],%rcx[34],%rcx[35],%rcx[36],%rcx[37],%rcx[38],%rcx[39],
     %rcx[40],%rcx[41],%rcx[42],%rcx[43],%rcx[44],%rcx[45],%rcx[46],%rcx[47],
     %rcx[48],%rcx[49],%rcx[50],%rcx[51],%rcx[52],%rcx[53],%rcx[54],%rcx[55],
     %rcx[56],%rcx[57],%rcx[58],%rcx[59],%rcx[60],%rcx[61],%rcx[62],%rcx[63],
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit];
(* and    %r14,%rcx                                #! PC = 0x555555582cdb *)
mov %rcx
    [0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     %rcx[16],%rcx[17],%rcx[18],%rcx[19],%rcx[20],%rcx[21],%rcx[22],%rcx[23],
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     %rcx[48],%rcx[49],%rcx[50],%rcx[51],%rcx[52],%rcx[53],%rcx[54],%rcx[55],
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit];
(* xor    %rax,%rcx                                #! PC = 0x555555582cde *)
adds %dc %rcx %rax %rcx;
(* mov    %rcx,%rax                                #! PC = 0x555555582ce1 *)
mov %rax %rcx;
(* shr    $0x8,%rax                                #! PC = 0x555555582ce4 *)
mov %rax
    [%rax[8],%rax[9],%rax[10],%rax[11],%rax[12],%rax[13],%rax[14],%rax[15],
     %rax[16],%rax[17],%rax[18],%rax[19],%rax[20],%rax[21],%rax[22],%rax[23],
     %rax[24],%rax[25],%rax[26],%rax[27],%rax[28],%rax[29],%rax[30],%rax[31],
     %rax[32],%rax[33],%rax[34],%rax[35],%rax[36],%rax[37],%rax[38],%rax[39],
     %rax[40],%rax[41],%rax[42],%rax[43],%rax[44],%rax[45],%rax[46],%rax[47],
     %rax[48],%rax[49],%rax[50],%rax[51],%rax[52],%rax[53],%rax[54],%rax[55],
     %rax[56],%rax[57],%rax[58],%rax[59],%rax[60],%rax[61],%rax[62],%rax[63],
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit];
(* and    %r13,%rax                                #! PC = 0x555555582ce8 *)
mov %rax
    [0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     %rax[8],%rax[9],%rax[10],%rax[11],%rax[12],%rax[13],%rax[14],%rax[15],
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     %rax[40],%rax[41],%rax[42],%rax[43],%rax[44],%rax[45],%rax[46],%rax[47],
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit];
(* xor    %rcx,%rax                                #! PC = 0x555555582ceb *)
adds %dc %rax %rcx %rax;
(* cmp    $0x3,%esi                                #! PC = 0x555555582cee *)
(* cmp 0x3, esi *)
nop;
(* #je     0x555555582d48 <radix_conversions+584>  #! PC = 0x555555582cf1 *)
#je     0x555555582d48 <radix_conversions+584>  #! 0x555555582cf1 = 0x555555582cf1;
(* mov    %rax,(%rdx)                              #! EA = L0x7ffffff50ca0; PC = 0x555555582d48 *)
mov %L0x7ffffff50ca0 %rax;
(* add    $0x8,%rdx                                #! PC = 0x555555582d4b *)
(* add $0x8, rdx *)
nop;
(* cmp    %rdx,%r12                                #! PC = 0x555555582d4f *)
(* cmp rdx, r12 *)
nop;
(* #jne    0x555555582cb0 <radix_conversions+432>  #! PC = 0x555555582d52 *)
#jne    0x555555582cb0 <radix_conversions+432>  #! 0x555555582d52 = 0x555555582d52;
(* mov    (%rdx),%rax                              #! EA = L0x7ffffff50ca8; Value = 0x45d231384d5dff90; PC = 0x555555582cb0 *)
mov %rax %L0x7ffffff50ca8;
(* mov    %rax,%rcx                                #! PC = 0x555555582cb3 *)
mov %rcx %rax;
(* shr    $0x10,%rcx                               #! PC = 0x555555582cb6 *)
mov %rcx
    [%rcx[16],%rcx[17],%rcx[18],%rcx[19],%rcx[20],%rcx[21],%rcx[22],%rcx[23],
     %rcx[24],%rcx[25],%rcx[26],%rcx[27],%rcx[28],%rcx[29],%rcx[30],%rcx[31],
     %rcx[32],%rcx[33],%rcx[34],%rcx[35],%rcx[36],%rcx[37],%rcx[38],%rcx[39],
     %rcx[40],%rcx[41],%rcx[42],%rcx[43],%rcx[44],%rcx[45],%rcx[46],%rcx[47],
     %rcx[48],%rcx[49],%rcx[50],%rcx[51],%rcx[52],%rcx[53],%rcx[54],%rcx[55],
     %rcx[56],%rcx[57],%rcx[58],%rcx[59],%rcx[60],%rcx[61],%rcx[62],%rcx[63],
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit];
(* and    %rbx,%rcx                                #! PC = 0x555555582cba *)
mov %rcx
    [0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     %rcx[32],%rcx[33],%rcx[34],%rcx[35],%rcx[36],%rcx[37],%rcx[38],%rcx[39],
     %rcx[40],%rcx[41],%rcx[42],%rcx[43],%rcx[44],%rcx[45],%rcx[46],%rcx[47],
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit];
(* xor    %rax,%rcx                                #! PC = 0x555555582cbd *)
adds %dc %rcx %rax %rcx;
(* mov    %rcx,%rax                                #! PC = 0x555555582cc0 *)
mov %rax %rcx;
(* shr    $0x10,%rax                               #! PC = 0x555555582cc3 *)
mov %rax
    [%rax[16],%rax[17],%rax[18],%rax[19],%rax[20],%rax[21],%rax[22],%rax[23],
     %rax[24],%rax[25],%rax[26],%rax[27],%rax[28],%rax[29],%rax[30],%rax[31],
     %rax[32],%rax[33],%rax[34],%rax[35],%rax[36],%rax[37],%rax[38],%rax[39],
     %rax[40],%rax[41],%rax[42],%rax[43],%rax[44],%rax[45],%rax[46],%rax[47],
     %rax[48],%rax[49],%rax[50],%rax[51],%rax[52],%rax[53],%rax[54],%rax[55],
     %rax[56],%rax[57],%rax[58],%rax[59],%rax[60],%rax[61],%rax[62],%rax[63],
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit];
(* and    $0xffff0000,%eax                         #! PC = 0x555555582cc7 *)
mov %rax
    [0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     %rax[16],%rax[17],%rax[18],%rax[19],%rax[20],%rax[21],%rax[22],%rax[23],
     %rax[24],%rax[25],%rax[26],%rax[27],%rax[28],%rax[29],%rax[30],%rax[31],
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit];
(* xor    %rcx,%rax                                #! PC = 0x555555582ccc *)
adds %dc %rax %rcx %rax;
(* cmp    $0x4,%esi                                #! PC = 0x555555582ccf *)
(* cmp 0x4, esi *)
nop;
(* #je     0x555555582d48 <radix_conversions+584>  #! PC = 0x555555582cd2 *)
#je     0x555555582d48 <radix_conversions+584>  #! 0x555555582cd2 = 0x555555582cd2;
(* mov    %rax,%rcx                                #! PC = 0x555555582cd4 *)
mov %rcx %rax;
(* shr    $0x8,%rcx                                #! PC = 0x555555582cd7 *)
mov %rcx
    [%rcx[8],%rcx[9],%rcx[10],%rcx[11],%rcx[12],%rcx[13],%rcx[14],%rcx[15],
     %rcx[16],%rcx[17],%rcx[18],%rcx[19],%rcx[20],%rcx[21],%rcx[22],%rcx[23],
     %rcx[24],%rcx[25],%rcx[26],%rcx[27],%rcx[28],%rcx[29],%rcx[30],%rcx[31],
     %rcx[32],%rcx[33],%rcx[34],%rcx[35],%rcx[36],%rcx[37],%rcx[38],%rcx[39],
     %rcx[40],%rcx[41],%rcx[42],%rcx[43],%rcx[44],%rcx[45],%rcx[46],%rcx[47],
     %rcx[48],%rcx[49],%rcx[50],%rcx[51],%rcx[52],%rcx[53],%rcx[54],%rcx[55],
     %rcx[56],%rcx[57],%rcx[58],%rcx[59],%rcx[60],%rcx[61],%rcx[62],%rcx[63],
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit];
(* and    %r14,%rcx                                #! PC = 0x555555582cdb *)
mov %rcx
    [0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     %rcx[16],%rcx[17],%rcx[18],%rcx[19],%rcx[20],%rcx[21],%rcx[22],%rcx[23],
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     %rcx[48],%rcx[49],%rcx[50],%rcx[51],%rcx[52],%rcx[53],%rcx[54],%rcx[55],
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit];
(* xor    %rax,%rcx                                #! PC = 0x555555582cde *)
adds %dc %rcx %rax %rcx;
(* mov    %rcx,%rax                                #! PC = 0x555555582ce1 *)
mov %rax %rcx;
(* shr    $0x8,%rax                                #! PC = 0x555555582ce4 *)
mov %rax
    [%rax[8],%rax[9],%rax[10],%rax[11],%rax[12],%rax[13],%rax[14],%rax[15],
     %rax[16],%rax[17],%rax[18],%rax[19],%rax[20],%rax[21],%rax[22],%rax[23],
     %rax[24],%rax[25],%rax[26],%rax[27],%rax[28],%rax[29],%rax[30],%rax[31],
     %rax[32],%rax[33],%rax[34],%rax[35],%rax[36],%rax[37],%rax[38],%rax[39],
     %rax[40],%rax[41],%rax[42],%rax[43],%rax[44],%rax[45],%rax[46],%rax[47],
     %rax[48],%rax[49],%rax[50],%rax[51],%rax[52],%rax[53],%rax[54],%rax[55],
     %rax[56],%rax[57],%rax[58],%rax[59],%rax[60],%rax[61],%rax[62],%rax[63],
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit];
(* and    %r13,%rax                                #! PC = 0x555555582ce8 *)
mov %rax
    [0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     %rax[8],%rax[9],%rax[10],%rax[11],%rax[12],%rax[13],%rax[14],%rax[15],
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     %rax[40],%rax[41],%rax[42],%rax[43],%rax[44],%rax[45],%rax[46],%rax[47],
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit];
(* xor    %rcx,%rax                                #! PC = 0x555555582ceb *)
adds %dc %rax %rcx %rax;
(* cmp    $0x3,%esi                                #! PC = 0x555555582cee *)
(* cmp 0x3, esi *)
nop;
(* #je     0x555555582d48 <radix_conversions+584>  #! PC = 0x555555582cf1 *)
#je     0x555555582d48 <radix_conversions+584>  #! 0x555555582cf1 = 0x555555582cf1;
(* mov    %rax,(%rdx)                              #! EA = L0x7ffffff50ca8; PC = 0x555555582d48 *)
mov %L0x7ffffff50ca8 %rax;
(* add    $0x8,%rdx                                #! PC = 0x555555582d4b *)
(* add $0x8, rdx *)
nop;
(* cmp    %rdx,%r12                                #! PC = 0x555555582d4f *)
(* cmp rdx, r12 *)
nop;
(* #jne    0x555555582cb0 <radix_conversions+432>  #! PC = 0x555555582d52 *)
#jne    0x555555582cb0 <radix_conversions+432>  #! 0x555555582d52 = 0x555555582d52;
(* mov    (%rdx),%rax                              #! EA = L0x7ffffff50cb0; Value = 0xaa74b15f93c27222; PC = 0x555555582cb0 *)
mov %rax %L0x7ffffff50cb0;
(* mov    %rax,%rcx                                #! PC = 0x555555582cb3 *)
mov %rcx %rax;
(* shr    $0x10,%rcx                               #! PC = 0x555555582cb6 *)
mov %rcx
    [%rcx[16],%rcx[17],%rcx[18],%rcx[19],%rcx[20],%rcx[21],%rcx[22],%rcx[23],
     %rcx[24],%rcx[25],%rcx[26],%rcx[27],%rcx[28],%rcx[29],%rcx[30],%rcx[31],
     %rcx[32],%rcx[33],%rcx[34],%rcx[35],%rcx[36],%rcx[37],%rcx[38],%rcx[39],
     %rcx[40],%rcx[41],%rcx[42],%rcx[43],%rcx[44],%rcx[45],%rcx[46],%rcx[47],
     %rcx[48],%rcx[49],%rcx[50],%rcx[51],%rcx[52],%rcx[53],%rcx[54],%rcx[55],
     %rcx[56],%rcx[57],%rcx[58],%rcx[59],%rcx[60],%rcx[61],%rcx[62],%rcx[63],
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit];
(* and    %rbx,%rcx                                #! PC = 0x555555582cba *)
mov %rcx
    [0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     %rcx[32],%rcx[33],%rcx[34],%rcx[35],%rcx[36],%rcx[37],%rcx[38],%rcx[39],
     %rcx[40],%rcx[41],%rcx[42],%rcx[43],%rcx[44],%rcx[45],%rcx[46],%rcx[47],
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit];
(* xor    %rax,%rcx                                #! PC = 0x555555582cbd *)
adds %dc %rcx %rax %rcx;
(* mov    %rcx,%rax                                #! PC = 0x555555582cc0 *)
mov %rax %rcx;
(* shr    $0x10,%rax                               #! PC = 0x555555582cc3 *)
mov %rax
    [%rax[16],%rax[17],%rax[18],%rax[19],%rax[20],%rax[21],%rax[22],%rax[23],
     %rax[24],%rax[25],%rax[26],%rax[27],%rax[28],%rax[29],%rax[30],%rax[31],
     %rax[32],%rax[33],%rax[34],%rax[35],%rax[36],%rax[37],%rax[38],%rax[39],
     %rax[40],%rax[41],%rax[42],%rax[43],%rax[44],%rax[45],%rax[46],%rax[47],
     %rax[48],%rax[49],%rax[50],%rax[51],%rax[52],%rax[53],%rax[54],%rax[55],
     %rax[56],%rax[57],%rax[58],%rax[59],%rax[60],%rax[61],%rax[62],%rax[63],
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit];
(* and    $0xffff0000,%eax                         #! PC = 0x555555582cc7 *)
mov %rax
    [0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     %rax[16],%rax[17],%rax[18],%rax[19],%rax[20],%rax[21],%rax[22],%rax[23],
     %rax[24],%rax[25],%rax[26],%rax[27],%rax[28],%rax[29],%rax[30],%rax[31],
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit];
(* xor    %rcx,%rax                                #! PC = 0x555555582ccc *)
adds %dc %rax %rcx %rax;
(* cmp    $0x4,%esi                                #! PC = 0x555555582ccf *)
(* cmp 0x4, esi *)
nop;
(* #je     0x555555582d48 <radix_conversions+584>  #! PC = 0x555555582cd2 *)
#je     0x555555582d48 <radix_conversions+584>  #! 0x555555582cd2 = 0x555555582cd2;
(* mov    %rax,%rcx                                #! PC = 0x555555582cd4 *)
mov %rcx %rax;
(* shr    $0x8,%rcx                                #! PC = 0x555555582cd7 *)
mov %rcx
    [%rcx[8],%rcx[9],%rcx[10],%rcx[11],%rcx[12],%rcx[13],%rcx[14],%rcx[15],
     %rcx[16],%rcx[17],%rcx[18],%rcx[19],%rcx[20],%rcx[21],%rcx[22],%rcx[23],
     %rcx[24],%rcx[25],%rcx[26],%rcx[27],%rcx[28],%rcx[29],%rcx[30],%rcx[31],
     %rcx[32],%rcx[33],%rcx[34],%rcx[35],%rcx[36],%rcx[37],%rcx[38],%rcx[39],
     %rcx[40],%rcx[41],%rcx[42],%rcx[43],%rcx[44],%rcx[45],%rcx[46],%rcx[47],
     %rcx[48],%rcx[49],%rcx[50],%rcx[51],%rcx[52],%rcx[53],%rcx[54],%rcx[55],
     %rcx[56],%rcx[57],%rcx[58],%rcx[59],%rcx[60],%rcx[61],%rcx[62],%rcx[63],
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit];
(* and    %r14,%rcx                                #! PC = 0x555555582cdb *)
mov %rcx
    [0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     %rcx[16],%rcx[17],%rcx[18],%rcx[19],%rcx[20],%rcx[21],%rcx[22],%rcx[23],
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     %rcx[48],%rcx[49],%rcx[50],%rcx[51],%rcx[52],%rcx[53],%rcx[54],%rcx[55],
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit];
(* xor    %rax,%rcx                                #! PC = 0x555555582cde *)
adds %dc %rcx %rax %rcx;
(* mov    %rcx,%rax                                #! PC = 0x555555582ce1 *)
mov %rax %rcx;
(* shr    $0x8,%rax                                #! PC = 0x555555582ce4 *)
mov %rax
    [%rax[8],%rax[9],%rax[10],%rax[11],%rax[12],%rax[13],%rax[14],%rax[15],
     %rax[16],%rax[17],%rax[18],%rax[19],%rax[20],%rax[21],%rax[22],%rax[23],
     %rax[24],%rax[25],%rax[26],%rax[27],%rax[28],%rax[29],%rax[30],%rax[31],
     %rax[32],%rax[33],%rax[34],%rax[35],%rax[36],%rax[37],%rax[38],%rax[39],
     %rax[40],%rax[41],%rax[42],%rax[43],%rax[44],%rax[45],%rax[46],%rax[47],
     %rax[48],%rax[49],%rax[50],%rax[51],%rax[52],%rax[53],%rax[54],%rax[55],
     %rax[56],%rax[57],%rax[58],%rax[59],%rax[60],%rax[61],%rax[62],%rax[63],
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit];
(* and    %r13,%rax                                #! PC = 0x555555582ce8 *)
mov %rax
    [0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     %rax[8],%rax[9],%rax[10],%rax[11],%rax[12],%rax[13],%rax[14],%rax[15],
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     %rax[40],%rax[41],%rax[42],%rax[43],%rax[44],%rax[45],%rax[46],%rax[47],
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit];
(* xor    %rcx,%rax                                #! PC = 0x555555582ceb *)
adds %dc %rax %rcx %rax;
(* cmp    $0x3,%esi                                #! PC = 0x555555582cee *)
(* cmp 0x3, esi *)
nop;
(* #je     0x555555582d48 <radix_conversions+584>  #! PC = 0x555555582cf1 *)
#je     0x555555582d48 <radix_conversions+584>  #! 0x555555582cf1 = 0x555555582cf1;
(* mov    %rax,(%rdx)                              #! EA = L0x7ffffff50cb0; PC = 0x555555582d48 *)
mov %L0x7ffffff50cb0 %rax;
(* add    $0x8,%rdx                                #! PC = 0x555555582d4b *)
(* add $0x8, rdx *)
nop;
(* cmp    %rdx,%r12                                #! PC = 0x555555582d4f *)
(* cmp rdx, r12 *)
nop;
(* #jne    0x555555582cb0 <radix_conversions+432>  #! PC = 0x555555582d52 *)
#jne    0x555555582cb0 <radix_conversions+432>  #! 0x555555582d52 = 0x555555582d52;
(* mov    (%rdx),%rax                              #! EA = L0x7ffffff50cb8; Value = 0xd9d115f43fef5705; PC = 0x555555582cb0 *)
mov %rax %L0x7ffffff50cb8;
(* mov    %rax,%rcx                                #! PC = 0x555555582cb3 *)
mov %rcx %rax;
(* shr    $0x10,%rcx                               #! PC = 0x555555582cb6 *)
mov %rcx
    [%rcx[16],%rcx[17],%rcx[18],%rcx[19],%rcx[20],%rcx[21],%rcx[22],%rcx[23],
     %rcx[24],%rcx[25],%rcx[26],%rcx[27],%rcx[28],%rcx[29],%rcx[30],%rcx[31],
     %rcx[32],%rcx[33],%rcx[34],%rcx[35],%rcx[36],%rcx[37],%rcx[38],%rcx[39],
     %rcx[40],%rcx[41],%rcx[42],%rcx[43],%rcx[44],%rcx[45],%rcx[46],%rcx[47],
     %rcx[48],%rcx[49],%rcx[50],%rcx[51],%rcx[52],%rcx[53],%rcx[54],%rcx[55],
     %rcx[56],%rcx[57],%rcx[58],%rcx[59],%rcx[60],%rcx[61],%rcx[62],%rcx[63],
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit];
(* and    %rbx,%rcx                                #! PC = 0x555555582cba *)
mov %rcx
    [0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     %rcx[32],%rcx[33],%rcx[34],%rcx[35],%rcx[36],%rcx[37],%rcx[38],%rcx[39],
     %rcx[40],%rcx[41],%rcx[42],%rcx[43],%rcx[44],%rcx[45],%rcx[46],%rcx[47],
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit];
(* xor    %rax,%rcx                                #! PC = 0x555555582cbd *)
adds %dc %rcx %rax %rcx;
(* mov    %rcx,%rax                                #! PC = 0x555555582cc0 *)
mov %rax %rcx;
(* shr    $0x10,%rax                               #! PC = 0x555555582cc3 *)
mov %rax
    [%rax[16],%rax[17],%rax[18],%rax[19],%rax[20],%rax[21],%rax[22],%rax[23],
     %rax[24],%rax[25],%rax[26],%rax[27],%rax[28],%rax[29],%rax[30],%rax[31],
     %rax[32],%rax[33],%rax[34],%rax[35],%rax[36],%rax[37],%rax[38],%rax[39],
     %rax[40],%rax[41],%rax[42],%rax[43],%rax[44],%rax[45],%rax[46],%rax[47],
     %rax[48],%rax[49],%rax[50],%rax[51],%rax[52],%rax[53],%rax[54],%rax[55],
     %rax[56],%rax[57],%rax[58],%rax[59],%rax[60],%rax[61],%rax[62],%rax[63],
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit];
(* and    $0xffff0000,%eax                         #! PC = 0x555555582cc7 *)
mov %rax
    [0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     %rax[16],%rax[17],%rax[18],%rax[19],%rax[20],%rax[21],%rax[22],%rax[23],
     %rax[24],%rax[25],%rax[26],%rax[27],%rax[28],%rax[29],%rax[30],%rax[31],
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit];
(* xor    %rcx,%rax                                #! PC = 0x555555582ccc *)
adds %dc %rax %rcx %rax;
(* cmp    $0x4,%esi                                #! PC = 0x555555582ccf *)
(* cmp 0x4, esi *)
nop;
(* #je     0x555555582d48 <radix_conversions+584>  #! PC = 0x555555582cd2 *)
#je     0x555555582d48 <radix_conversions+584>  #! 0x555555582cd2 = 0x555555582cd2;
(* mov    %rax,%rcx                                #! PC = 0x555555582cd4 *)
mov %rcx %rax;
(* shr    $0x8,%rcx                                #! PC = 0x555555582cd7 *)
mov %rcx
    [%rcx[8],%rcx[9],%rcx[10],%rcx[11],%rcx[12],%rcx[13],%rcx[14],%rcx[15],
     %rcx[16],%rcx[17],%rcx[18],%rcx[19],%rcx[20],%rcx[21],%rcx[22],%rcx[23],
     %rcx[24],%rcx[25],%rcx[26],%rcx[27],%rcx[28],%rcx[29],%rcx[30],%rcx[31],
     %rcx[32],%rcx[33],%rcx[34],%rcx[35],%rcx[36],%rcx[37],%rcx[38],%rcx[39],
     %rcx[40],%rcx[41],%rcx[42],%rcx[43],%rcx[44],%rcx[45],%rcx[46],%rcx[47],
     %rcx[48],%rcx[49],%rcx[50],%rcx[51],%rcx[52],%rcx[53],%rcx[54],%rcx[55],
     %rcx[56],%rcx[57],%rcx[58],%rcx[59],%rcx[60],%rcx[61],%rcx[62],%rcx[63],
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit];
(* and    %r14,%rcx                                #! PC = 0x555555582cdb *)
mov %rcx
    [0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     %rcx[16],%rcx[17],%rcx[18],%rcx[19],%rcx[20],%rcx[21],%rcx[22],%rcx[23],
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     %rcx[48],%rcx[49],%rcx[50],%rcx[51],%rcx[52],%rcx[53],%rcx[54],%rcx[55],
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit];
(* xor    %rax,%rcx                                #! PC = 0x555555582cde *)
adds %dc %rcx %rax %rcx;
(* mov    %rcx,%rax                                #! PC = 0x555555582ce1 *)
mov %rax %rcx;
(* shr    $0x8,%rax                                #! PC = 0x555555582ce4 *)
mov %rax
    [%rax[8],%rax[9],%rax[10],%rax[11],%rax[12],%rax[13],%rax[14],%rax[15],
     %rax[16],%rax[17],%rax[18],%rax[19],%rax[20],%rax[21],%rax[22],%rax[23],
     %rax[24],%rax[25],%rax[26],%rax[27],%rax[28],%rax[29],%rax[30],%rax[31],
     %rax[32],%rax[33],%rax[34],%rax[35],%rax[36],%rax[37],%rax[38],%rax[39],
     %rax[40],%rax[41],%rax[42],%rax[43],%rax[44],%rax[45],%rax[46],%rax[47],
     %rax[48],%rax[49],%rax[50],%rax[51],%rax[52],%rax[53],%rax[54],%rax[55],
     %rax[56],%rax[57],%rax[58],%rax[59],%rax[60],%rax[61],%rax[62],%rax[63],
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit];
(* and    %r13,%rax                                #! PC = 0x555555582ce8 *)
mov %rax
    [0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     %rax[8],%rax[9],%rax[10],%rax[11],%rax[12],%rax[13],%rax[14],%rax[15],
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     %rax[40],%rax[41],%rax[42],%rax[43],%rax[44],%rax[45],%rax[46],%rax[47],
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit];
(* xor    %rcx,%rax                                #! PC = 0x555555582ceb *)
adds %dc %rax %rcx %rax;
(* cmp    $0x3,%esi                                #! PC = 0x555555582cee *)
(* cmp 0x3, esi *)
nop;
(* #je     0x555555582d48 <radix_conversions+584>  #! PC = 0x555555582cf1 *)
#je     0x555555582d48 <radix_conversions+584>  #! 0x555555582cf1 = 0x555555582cf1;
(* mov    %rax,(%rdx)                              #! EA = L0x7ffffff50cb8; PC = 0x555555582d48 *)
mov %L0x7ffffff50cb8 %rax;
(* add    $0x8,%rdx                                #! PC = 0x555555582d4b *)
(* add $0x8, rdx *)
nop;
(* cmp    %rdx,%r12                                #! PC = 0x555555582d4f *)
(* cmp rdx, r12 *)
nop;
(* #jne    0x555555582cb0 <radix_conversions+432>  #! PC = 0x555555582d52 *)
#jne    0x555555582cb0 <radix_conversions+432>  #! 0x555555582d52 = 0x555555582d52;
(* mov    (%rdx),%rax                              #! EA = L0x7ffffff50cc0; Value = 0xae5d8f7ad6dc6ac0; PC = 0x555555582cb0 *)
mov %rax %L0x7ffffff50cc0;
(* mov    %rax,%rcx                                #! PC = 0x555555582cb3 *)
mov %rcx %rax;
(* shr    $0x10,%rcx                               #! PC = 0x555555582cb6 *)
mov %rcx
    [%rcx[16],%rcx[17],%rcx[18],%rcx[19],%rcx[20],%rcx[21],%rcx[22],%rcx[23],
     %rcx[24],%rcx[25],%rcx[26],%rcx[27],%rcx[28],%rcx[29],%rcx[30],%rcx[31],
     %rcx[32],%rcx[33],%rcx[34],%rcx[35],%rcx[36],%rcx[37],%rcx[38],%rcx[39],
     %rcx[40],%rcx[41],%rcx[42],%rcx[43],%rcx[44],%rcx[45],%rcx[46],%rcx[47],
     %rcx[48],%rcx[49],%rcx[50],%rcx[51],%rcx[52],%rcx[53],%rcx[54],%rcx[55],
     %rcx[56],%rcx[57],%rcx[58],%rcx[59],%rcx[60],%rcx[61],%rcx[62],%rcx[63],
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit];
(* and    %rbx,%rcx                                #! PC = 0x555555582cba *)
mov %rcx
    [0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     %rcx[32],%rcx[33],%rcx[34],%rcx[35],%rcx[36],%rcx[37],%rcx[38],%rcx[39],
     %rcx[40],%rcx[41],%rcx[42],%rcx[43],%rcx[44],%rcx[45],%rcx[46],%rcx[47],
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit];
(* xor    %rax,%rcx                                #! PC = 0x555555582cbd *)
adds %dc %rcx %rax %rcx;
(* mov    %rcx,%rax                                #! PC = 0x555555582cc0 *)
mov %rax %rcx;
(* shr    $0x10,%rax                               #! PC = 0x555555582cc3 *)
mov %rax
    [%rax[16],%rax[17],%rax[18],%rax[19],%rax[20],%rax[21],%rax[22],%rax[23],
     %rax[24],%rax[25],%rax[26],%rax[27],%rax[28],%rax[29],%rax[30],%rax[31],
     %rax[32],%rax[33],%rax[34],%rax[35],%rax[36],%rax[37],%rax[38],%rax[39],
     %rax[40],%rax[41],%rax[42],%rax[43],%rax[44],%rax[45],%rax[46],%rax[47],
     %rax[48],%rax[49],%rax[50],%rax[51],%rax[52],%rax[53],%rax[54],%rax[55],
     %rax[56],%rax[57],%rax[58],%rax[59],%rax[60],%rax[61],%rax[62],%rax[63],
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit];
(* and    $0xffff0000,%eax                         #! PC = 0x555555582cc7 *)
mov %rax
    [0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     %rax[16],%rax[17],%rax[18],%rax[19],%rax[20],%rax[21],%rax[22],%rax[23],
     %rax[24],%rax[25],%rax[26],%rax[27],%rax[28],%rax[29],%rax[30],%rax[31],
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit];
(* xor    %rcx,%rax                                #! PC = 0x555555582ccc *)
adds %dc %rax %rcx %rax;
(* cmp    $0x4,%esi                                #! PC = 0x555555582ccf *)
(* cmp 0x4, esi *)
nop;
(* #je     0x555555582d48 <radix_conversions+584>  #! PC = 0x555555582cd2 *)
#je     0x555555582d48 <radix_conversions+584>  #! 0x555555582cd2 = 0x555555582cd2;
(* mov    %rax,%rcx                                #! PC = 0x555555582cd4 *)
mov %rcx %rax;
(* shr    $0x8,%rcx                                #! PC = 0x555555582cd7 *)
mov %rcx
    [%rcx[8],%rcx[9],%rcx[10],%rcx[11],%rcx[12],%rcx[13],%rcx[14],%rcx[15],
     %rcx[16],%rcx[17],%rcx[18],%rcx[19],%rcx[20],%rcx[21],%rcx[22],%rcx[23],
     %rcx[24],%rcx[25],%rcx[26],%rcx[27],%rcx[28],%rcx[29],%rcx[30],%rcx[31],
     %rcx[32],%rcx[33],%rcx[34],%rcx[35],%rcx[36],%rcx[37],%rcx[38],%rcx[39],
     %rcx[40],%rcx[41],%rcx[42],%rcx[43],%rcx[44],%rcx[45],%rcx[46],%rcx[47],
     %rcx[48],%rcx[49],%rcx[50],%rcx[51],%rcx[52],%rcx[53],%rcx[54],%rcx[55],
     %rcx[56],%rcx[57],%rcx[58],%rcx[59],%rcx[60],%rcx[61],%rcx[62],%rcx[63],
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit];
(* and    %r14,%rcx                                #! PC = 0x555555582cdb *)
mov %rcx
    [0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     %rcx[16],%rcx[17],%rcx[18],%rcx[19],%rcx[20],%rcx[21],%rcx[22],%rcx[23],
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     %rcx[48],%rcx[49],%rcx[50],%rcx[51],%rcx[52],%rcx[53],%rcx[54],%rcx[55],
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit];
(* xor    %rax,%rcx                                #! PC = 0x555555582cde *)
adds %dc %rcx %rax %rcx;
(* mov    %rcx,%rax                                #! PC = 0x555555582ce1 *)
mov %rax %rcx;
(* shr    $0x8,%rax                                #! PC = 0x555555582ce4 *)
mov %rax
    [%rax[8],%rax[9],%rax[10],%rax[11],%rax[12],%rax[13],%rax[14],%rax[15],
     %rax[16],%rax[17],%rax[18],%rax[19],%rax[20],%rax[21],%rax[22],%rax[23],
     %rax[24],%rax[25],%rax[26],%rax[27],%rax[28],%rax[29],%rax[30],%rax[31],
     %rax[32],%rax[33],%rax[34],%rax[35],%rax[36],%rax[37],%rax[38],%rax[39],
     %rax[40],%rax[41],%rax[42],%rax[43],%rax[44],%rax[45],%rax[46],%rax[47],
     %rax[48],%rax[49],%rax[50],%rax[51],%rax[52],%rax[53],%rax[54],%rax[55],
     %rax[56],%rax[57],%rax[58],%rax[59],%rax[60],%rax[61],%rax[62],%rax[63],
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit];
(* and    %r13,%rax                                #! PC = 0x555555582ce8 *)
mov %rax
    [0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     %rax[8],%rax[9],%rax[10],%rax[11],%rax[12],%rax[13],%rax[14],%rax[15],
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     %rax[40],%rax[41],%rax[42],%rax[43],%rax[44],%rax[45],%rax[46],%rax[47],
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit];
(* xor    %rcx,%rax                                #! PC = 0x555555582ceb *)
adds %dc %rax %rcx %rax;
(* cmp    $0x3,%esi                                #! PC = 0x555555582cee *)
(* cmp 0x3, esi *)
nop;
(* #je     0x555555582d48 <radix_conversions+584>  #! PC = 0x555555582cf1 *)
#je     0x555555582d48 <radix_conversions+584>  #! 0x555555582cf1 = 0x555555582cf1;
(* mov    %rax,(%rdx)                              #! EA = L0x7ffffff50cc0; PC = 0x555555582d48 *)
mov %L0x7ffffff50cc0 %rax;
(* add    $0x8,%rdx                                #! PC = 0x555555582d4b *)
(* add $0x8, rdx *)
nop;
(* cmp    %rdx,%r12                                #! PC = 0x555555582d4f *)
(* cmp rdx, r12 *)
nop;
(* #jne    0x555555582cb0 <radix_conversions+432>  #! PC = 0x555555582d52 *)
#jne    0x555555582cb0 <radix_conversions+432>  #! 0x555555582d52 = 0x555555582d52;
(* mov    (%rdx),%rax                              #! EA = L0x7ffffff50cc8; Value = 0x8ecb7be22c5dd8ac; PC = 0x555555582cb0 *)
mov %rax %L0x7ffffff50cc8;
(* mov    %rax,%rcx                                #! PC = 0x555555582cb3 *)
mov %rcx %rax;
(* shr    $0x10,%rcx                               #! PC = 0x555555582cb6 *)
mov %rcx
    [%rcx[16],%rcx[17],%rcx[18],%rcx[19],%rcx[20],%rcx[21],%rcx[22],%rcx[23],
     %rcx[24],%rcx[25],%rcx[26],%rcx[27],%rcx[28],%rcx[29],%rcx[30],%rcx[31],
     %rcx[32],%rcx[33],%rcx[34],%rcx[35],%rcx[36],%rcx[37],%rcx[38],%rcx[39],
     %rcx[40],%rcx[41],%rcx[42],%rcx[43],%rcx[44],%rcx[45],%rcx[46],%rcx[47],
     %rcx[48],%rcx[49],%rcx[50],%rcx[51],%rcx[52],%rcx[53],%rcx[54],%rcx[55],
     %rcx[56],%rcx[57],%rcx[58],%rcx[59],%rcx[60],%rcx[61],%rcx[62],%rcx[63],
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit];
(* and    %rbx,%rcx                                #! PC = 0x555555582cba *)
mov %rcx
    [0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     %rcx[32],%rcx[33],%rcx[34],%rcx[35],%rcx[36],%rcx[37],%rcx[38],%rcx[39],
     %rcx[40],%rcx[41],%rcx[42],%rcx[43],%rcx[44],%rcx[45],%rcx[46],%rcx[47],
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit];
(* xor    %rax,%rcx                                #! PC = 0x555555582cbd *)
adds %dc %rcx %rax %rcx;
(* mov    %rcx,%rax                                #! PC = 0x555555582cc0 *)
mov %rax %rcx;
(* shr    $0x10,%rax                               #! PC = 0x555555582cc3 *)
mov %rax
    [%rax[16],%rax[17],%rax[18],%rax[19],%rax[20],%rax[21],%rax[22],%rax[23],
     %rax[24],%rax[25],%rax[26],%rax[27],%rax[28],%rax[29],%rax[30],%rax[31],
     %rax[32],%rax[33],%rax[34],%rax[35],%rax[36],%rax[37],%rax[38],%rax[39],
     %rax[40],%rax[41],%rax[42],%rax[43],%rax[44],%rax[45],%rax[46],%rax[47],
     %rax[48],%rax[49],%rax[50],%rax[51],%rax[52],%rax[53],%rax[54],%rax[55],
     %rax[56],%rax[57],%rax[58],%rax[59],%rax[60],%rax[61],%rax[62],%rax[63],
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit];
(* and    $0xffff0000,%eax                         #! PC = 0x555555582cc7 *)
mov %rax
    [0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     %rax[16],%rax[17],%rax[18],%rax[19],%rax[20],%rax[21],%rax[22],%rax[23],
     %rax[24],%rax[25],%rax[26],%rax[27],%rax[28],%rax[29],%rax[30],%rax[31],
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit];
(* xor    %rcx,%rax                                #! PC = 0x555555582ccc *)
adds %dc %rax %rcx %rax;
(* cmp    $0x4,%esi                                #! PC = 0x555555582ccf *)
(* cmp 0x4, esi *)
nop;
(* #je     0x555555582d48 <radix_conversions+584>  #! PC = 0x555555582cd2 *)
#je     0x555555582d48 <radix_conversions+584>  #! 0x555555582cd2 = 0x555555582cd2;
(* mov    %rax,%rcx                                #! PC = 0x555555582cd4 *)
mov %rcx %rax;
(* shr    $0x8,%rcx                                #! PC = 0x555555582cd7 *)
mov %rcx
    [%rcx[8],%rcx[9],%rcx[10],%rcx[11],%rcx[12],%rcx[13],%rcx[14],%rcx[15],
     %rcx[16],%rcx[17],%rcx[18],%rcx[19],%rcx[20],%rcx[21],%rcx[22],%rcx[23],
     %rcx[24],%rcx[25],%rcx[26],%rcx[27],%rcx[28],%rcx[29],%rcx[30],%rcx[31],
     %rcx[32],%rcx[33],%rcx[34],%rcx[35],%rcx[36],%rcx[37],%rcx[38],%rcx[39],
     %rcx[40],%rcx[41],%rcx[42],%rcx[43],%rcx[44],%rcx[45],%rcx[46],%rcx[47],
     %rcx[48],%rcx[49],%rcx[50],%rcx[51],%rcx[52],%rcx[53],%rcx[54],%rcx[55],
     %rcx[56],%rcx[57],%rcx[58],%rcx[59],%rcx[60],%rcx[61],%rcx[62],%rcx[63],
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit];
(* and    %r14,%rcx                                #! PC = 0x555555582cdb *)
mov %rcx
    [0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     %rcx[16],%rcx[17],%rcx[18],%rcx[19],%rcx[20],%rcx[21],%rcx[22],%rcx[23],
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     %rcx[48],%rcx[49],%rcx[50],%rcx[51],%rcx[52],%rcx[53],%rcx[54],%rcx[55],
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit];
(* xor    %rax,%rcx                                #! PC = 0x555555582cde *)
adds %dc %rcx %rax %rcx;
(* mov    %rcx,%rax                                #! PC = 0x555555582ce1 *)
mov %rax %rcx;
(* shr    $0x8,%rax                                #! PC = 0x555555582ce4 *)
mov %rax
    [%rax[8],%rax[9],%rax[10],%rax[11],%rax[12],%rax[13],%rax[14],%rax[15],
     %rax[16],%rax[17],%rax[18],%rax[19],%rax[20],%rax[21],%rax[22],%rax[23],
     %rax[24],%rax[25],%rax[26],%rax[27],%rax[28],%rax[29],%rax[30],%rax[31],
     %rax[32],%rax[33],%rax[34],%rax[35],%rax[36],%rax[37],%rax[38],%rax[39],
     %rax[40],%rax[41],%rax[42],%rax[43],%rax[44],%rax[45],%rax[46],%rax[47],
     %rax[48],%rax[49],%rax[50],%rax[51],%rax[52],%rax[53],%rax[54],%rax[55],
     %rax[56],%rax[57],%rax[58],%rax[59],%rax[60],%rax[61],%rax[62],%rax[63],
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit];
(* and    %r13,%rax                                #! PC = 0x555555582ce8 *)
mov %rax
    [0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     %rax[8],%rax[9],%rax[10],%rax[11],%rax[12],%rax[13],%rax[14],%rax[15],
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     %rax[40],%rax[41],%rax[42],%rax[43],%rax[44],%rax[45],%rax[46],%rax[47],
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit];
(* xor    %rcx,%rax                                #! PC = 0x555555582ceb *)
adds %dc %rax %rcx %rax;
(* cmp    $0x3,%esi                                #! PC = 0x555555582cee *)
(* cmp 0x3, esi *)
nop;
(* #je     0x555555582d48 <radix_conversions+584>  #! PC = 0x555555582cf1 *)
#je     0x555555582d48 <radix_conversions+584>  #! 0x555555582cf1 = 0x555555582cf1;
(* mov    %rax,(%rdx)                              #! EA = L0x7ffffff50cc8; PC = 0x555555582d48 *)
mov %L0x7ffffff50cc8 %rax;
(* add    $0x8,%rdx                                #! PC = 0x555555582d4b *)
(* add $0x8, rdx *)
nop;
(* cmp    %rdx,%r12                                #! PC = 0x555555582d4f *)
(* cmp rdx, r12 *)
nop;
(* #jne    0x555555582cb0 <radix_conversions+432>  #! PC = 0x555555582d52 *)
#jne    0x555555582cb0 <radix_conversions+432>  #! 0x555555582d52 = 0x555555582d52;
(* mov    (%rdx),%rax                              #! EA = L0x7ffffff50cd0; Value = 0xa8e4757b0ca6e351; PC = 0x555555582cb0 *)
mov %rax %L0x7ffffff50cd0;
(* mov    %rax,%rcx                                #! PC = 0x555555582cb3 *)
mov %rcx %rax;
(* shr    $0x10,%rcx                               #! PC = 0x555555582cb6 *)
mov %rcx
    [%rcx[16],%rcx[17],%rcx[18],%rcx[19],%rcx[20],%rcx[21],%rcx[22],%rcx[23],
     %rcx[24],%rcx[25],%rcx[26],%rcx[27],%rcx[28],%rcx[29],%rcx[30],%rcx[31],
     %rcx[32],%rcx[33],%rcx[34],%rcx[35],%rcx[36],%rcx[37],%rcx[38],%rcx[39],
     %rcx[40],%rcx[41],%rcx[42],%rcx[43],%rcx[44],%rcx[45],%rcx[46],%rcx[47],
     %rcx[48],%rcx[49],%rcx[50],%rcx[51],%rcx[52],%rcx[53],%rcx[54],%rcx[55],
     %rcx[56],%rcx[57],%rcx[58],%rcx[59],%rcx[60],%rcx[61],%rcx[62],%rcx[63],
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit];
(* and    %rbx,%rcx                                #! PC = 0x555555582cba *)
mov %rcx
    [0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     %rcx[32],%rcx[33],%rcx[34],%rcx[35],%rcx[36],%rcx[37],%rcx[38],%rcx[39],
     %rcx[40],%rcx[41],%rcx[42],%rcx[43],%rcx[44],%rcx[45],%rcx[46],%rcx[47],
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit];
(* xor    %rax,%rcx                                #! PC = 0x555555582cbd *)
adds %dc %rcx %rax %rcx;
(* mov    %rcx,%rax                                #! PC = 0x555555582cc0 *)
mov %rax %rcx;
(* shr    $0x10,%rax                               #! PC = 0x555555582cc3 *)
mov %rax
    [%rax[16],%rax[17],%rax[18],%rax[19],%rax[20],%rax[21],%rax[22],%rax[23],
     %rax[24],%rax[25],%rax[26],%rax[27],%rax[28],%rax[29],%rax[30],%rax[31],
     %rax[32],%rax[33],%rax[34],%rax[35],%rax[36],%rax[37],%rax[38],%rax[39],
     %rax[40],%rax[41],%rax[42],%rax[43],%rax[44],%rax[45],%rax[46],%rax[47],
     %rax[48],%rax[49],%rax[50],%rax[51],%rax[52],%rax[53],%rax[54],%rax[55],
     %rax[56],%rax[57],%rax[58],%rax[59],%rax[60],%rax[61],%rax[62],%rax[63],
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit];
(* and    $0xffff0000,%eax                         #! PC = 0x555555582cc7 *)
mov %rax
    [0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     %rax[16],%rax[17],%rax[18],%rax[19],%rax[20],%rax[21],%rax[22],%rax[23],
     %rax[24],%rax[25],%rax[26],%rax[27],%rax[28],%rax[29],%rax[30],%rax[31],
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit];
(* xor    %rcx,%rax                                #! PC = 0x555555582ccc *)
adds %dc %rax %rcx %rax;
(* cmp    $0x4,%esi                                #! PC = 0x555555582ccf *)
(* cmp 0x4, esi *)
nop;
(* #je     0x555555582d48 <radix_conversions+584>  #! PC = 0x555555582cd2 *)
#je     0x555555582d48 <radix_conversions+584>  #! 0x555555582cd2 = 0x555555582cd2;
(* mov    %rax,%rcx                                #! PC = 0x555555582cd4 *)
mov %rcx %rax;
(* shr    $0x8,%rcx                                #! PC = 0x555555582cd7 *)
mov %rcx
    [%rcx[8],%rcx[9],%rcx[10],%rcx[11],%rcx[12],%rcx[13],%rcx[14],%rcx[15],
     %rcx[16],%rcx[17],%rcx[18],%rcx[19],%rcx[20],%rcx[21],%rcx[22],%rcx[23],
     %rcx[24],%rcx[25],%rcx[26],%rcx[27],%rcx[28],%rcx[29],%rcx[30],%rcx[31],
     %rcx[32],%rcx[33],%rcx[34],%rcx[35],%rcx[36],%rcx[37],%rcx[38],%rcx[39],
     %rcx[40],%rcx[41],%rcx[42],%rcx[43],%rcx[44],%rcx[45],%rcx[46],%rcx[47],
     %rcx[48],%rcx[49],%rcx[50],%rcx[51],%rcx[52],%rcx[53],%rcx[54],%rcx[55],
     %rcx[56],%rcx[57],%rcx[58],%rcx[59],%rcx[60],%rcx[61],%rcx[62],%rcx[63],
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit];
(* and    %r14,%rcx                                #! PC = 0x555555582cdb *)
mov %rcx
    [0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     %rcx[16],%rcx[17],%rcx[18],%rcx[19],%rcx[20],%rcx[21],%rcx[22],%rcx[23],
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     %rcx[48],%rcx[49],%rcx[50],%rcx[51],%rcx[52],%rcx[53],%rcx[54],%rcx[55],
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit];
(* xor    %rax,%rcx                                #! PC = 0x555555582cde *)
adds %dc %rcx %rax %rcx;
(* mov    %rcx,%rax                                #! PC = 0x555555582ce1 *)
mov %rax %rcx;
(* shr    $0x8,%rax                                #! PC = 0x555555582ce4 *)
mov %rax
    [%rax[8],%rax[9],%rax[10],%rax[11],%rax[12],%rax[13],%rax[14],%rax[15],
     %rax[16],%rax[17],%rax[18],%rax[19],%rax[20],%rax[21],%rax[22],%rax[23],
     %rax[24],%rax[25],%rax[26],%rax[27],%rax[28],%rax[29],%rax[30],%rax[31],
     %rax[32],%rax[33],%rax[34],%rax[35],%rax[36],%rax[37],%rax[38],%rax[39],
     %rax[40],%rax[41],%rax[42],%rax[43],%rax[44],%rax[45],%rax[46],%rax[47],
     %rax[48],%rax[49],%rax[50],%rax[51],%rax[52],%rax[53],%rax[54],%rax[55],
     %rax[56],%rax[57],%rax[58],%rax[59],%rax[60],%rax[61],%rax[62],%rax[63],
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit];
(* and    %r13,%rax                                #! PC = 0x555555582ce8 *)
mov %rax
    [0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     %rax[8],%rax[9],%rax[10],%rax[11],%rax[12],%rax[13],%rax[14],%rax[15],
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     %rax[40],%rax[41],%rax[42],%rax[43],%rax[44],%rax[45],%rax[46],%rax[47],
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit];
(* xor    %rcx,%rax                                #! PC = 0x555555582ceb *)
adds %dc %rax %rcx %rax;
(* cmp    $0x3,%esi                                #! PC = 0x555555582cee *)
(* cmp 0x3, esi *)
nop;
(* #je     0x555555582d48 <radix_conversions+584>  #! PC = 0x555555582cf1 *)
#je     0x555555582d48 <radix_conversions+584>  #! 0x555555582cf1 = 0x555555582cf1;
(* mov    %rax,(%rdx)                              #! EA = L0x7ffffff50cd0; PC = 0x555555582d48 *)
mov %L0x7ffffff50cd0 %rax;
(* add    $0x8,%rdx                                #! PC = 0x555555582d4b *)
(* add $0x8, rdx *)
nop;
(* cmp    %rdx,%r12                                #! PC = 0x555555582d4f *)
(* cmp rdx, r12 *)
nop;
(* #jne    0x555555582cb0 <radix_conversions+432>  #! PC = 0x555555582d52 *)
#jne    0x555555582cb0 <radix_conversions+432>  #! 0x555555582d52 = 0x555555582d52;
(* mov    (%rdx),%rax                              #! EA = L0x7ffffff50cd8; Value = 0x38998794e9b7a4b1; PC = 0x555555582cb0 *)
mov %rax %L0x7ffffff50cd8;
(* mov    %rax,%rcx                                #! PC = 0x555555582cb3 *)
mov %rcx %rax;
(* shr    $0x10,%rcx                               #! PC = 0x555555582cb6 *)
mov %rcx
    [%rcx[16],%rcx[17],%rcx[18],%rcx[19],%rcx[20],%rcx[21],%rcx[22],%rcx[23],
     %rcx[24],%rcx[25],%rcx[26],%rcx[27],%rcx[28],%rcx[29],%rcx[30],%rcx[31],
     %rcx[32],%rcx[33],%rcx[34],%rcx[35],%rcx[36],%rcx[37],%rcx[38],%rcx[39],
     %rcx[40],%rcx[41],%rcx[42],%rcx[43],%rcx[44],%rcx[45],%rcx[46],%rcx[47],
     %rcx[48],%rcx[49],%rcx[50],%rcx[51],%rcx[52],%rcx[53],%rcx[54],%rcx[55],
     %rcx[56],%rcx[57],%rcx[58],%rcx[59],%rcx[60],%rcx[61],%rcx[62],%rcx[63],
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit];
(* and    %rbx,%rcx                                #! PC = 0x555555582cba *)
mov %rcx
    [0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     %rcx[32],%rcx[33],%rcx[34],%rcx[35],%rcx[36],%rcx[37],%rcx[38],%rcx[39],
     %rcx[40],%rcx[41],%rcx[42],%rcx[43],%rcx[44],%rcx[45],%rcx[46],%rcx[47],
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit];
(* xor    %rax,%rcx                                #! PC = 0x555555582cbd *)
adds %dc %rcx %rax %rcx;
(* mov    %rcx,%rax                                #! PC = 0x555555582cc0 *)
mov %rax %rcx;
(* shr    $0x10,%rax                               #! PC = 0x555555582cc3 *)
mov %rax
    [%rax[16],%rax[17],%rax[18],%rax[19],%rax[20],%rax[21],%rax[22],%rax[23],
     %rax[24],%rax[25],%rax[26],%rax[27],%rax[28],%rax[29],%rax[30],%rax[31],
     %rax[32],%rax[33],%rax[34],%rax[35],%rax[36],%rax[37],%rax[38],%rax[39],
     %rax[40],%rax[41],%rax[42],%rax[43],%rax[44],%rax[45],%rax[46],%rax[47],
     %rax[48],%rax[49],%rax[50],%rax[51],%rax[52],%rax[53],%rax[54],%rax[55],
     %rax[56],%rax[57],%rax[58],%rax[59],%rax[60],%rax[61],%rax[62],%rax[63],
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit];
(* and    $0xffff0000,%eax                         #! PC = 0x555555582cc7 *)
mov %rax
    [0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     %rax[16],%rax[17],%rax[18],%rax[19],%rax[20],%rax[21],%rax[22],%rax[23],
     %rax[24],%rax[25],%rax[26],%rax[27],%rax[28],%rax[29],%rax[30],%rax[31],
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit];
(* xor    %rcx,%rax                                #! PC = 0x555555582ccc *)
adds %dc %rax %rcx %rax;
(* cmp    $0x4,%esi                                #! PC = 0x555555582ccf *)
(* cmp 0x4, esi *)
nop;
(* #je     0x555555582d48 <radix_conversions+584>  #! PC = 0x555555582cd2 *)
#je     0x555555582d48 <radix_conversions+584>  #! 0x555555582cd2 = 0x555555582cd2;
(* mov    %rax,%rcx                                #! PC = 0x555555582cd4 *)
mov %rcx %rax;
(* shr    $0x8,%rcx                                #! PC = 0x555555582cd7 *)
mov %rcx
    [%rcx[8],%rcx[9],%rcx[10],%rcx[11],%rcx[12],%rcx[13],%rcx[14],%rcx[15],
     %rcx[16],%rcx[17],%rcx[18],%rcx[19],%rcx[20],%rcx[21],%rcx[22],%rcx[23],
     %rcx[24],%rcx[25],%rcx[26],%rcx[27],%rcx[28],%rcx[29],%rcx[30],%rcx[31],
     %rcx[32],%rcx[33],%rcx[34],%rcx[35],%rcx[36],%rcx[37],%rcx[38],%rcx[39],
     %rcx[40],%rcx[41],%rcx[42],%rcx[43],%rcx[44],%rcx[45],%rcx[46],%rcx[47],
     %rcx[48],%rcx[49],%rcx[50],%rcx[51],%rcx[52],%rcx[53],%rcx[54],%rcx[55],
     %rcx[56],%rcx[57],%rcx[58],%rcx[59],%rcx[60],%rcx[61],%rcx[62],%rcx[63],
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit];
(* and    %r14,%rcx                                #! PC = 0x555555582cdb *)
mov %rcx
    [0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     %rcx[16],%rcx[17],%rcx[18],%rcx[19],%rcx[20],%rcx[21],%rcx[22],%rcx[23],
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     %rcx[48],%rcx[49],%rcx[50],%rcx[51],%rcx[52],%rcx[53],%rcx[54],%rcx[55],
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit];
(* xor    %rax,%rcx                                #! PC = 0x555555582cde *)
adds %dc %rcx %rax %rcx;
(* mov    %rcx,%rax                                #! PC = 0x555555582ce1 *)
mov %rax %rcx;
(* shr    $0x8,%rax                                #! PC = 0x555555582ce4 *)
mov %rax
    [%rax[8],%rax[9],%rax[10],%rax[11],%rax[12],%rax[13],%rax[14],%rax[15],
     %rax[16],%rax[17],%rax[18],%rax[19],%rax[20],%rax[21],%rax[22],%rax[23],
     %rax[24],%rax[25],%rax[26],%rax[27],%rax[28],%rax[29],%rax[30],%rax[31],
     %rax[32],%rax[33],%rax[34],%rax[35],%rax[36],%rax[37],%rax[38],%rax[39],
     %rax[40],%rax[41],%rax[42],%rax[43],%rax[44],%rax[45],%rax[46],%rax[47],
     %rax[48],%rax[49],%rax[50],%rax[51],%rax[52],%rax[53],%rax[54],%rax[55],
     %rax[56],%rax[57],%rax[58],%rax[59],%rax[60],%rax[61],%rax[62],%rax[63],
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit];
(* and    %r13,%rax                                #! PC = 0x555555582ce8 *)
mov %rax
    [0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     %rax[8],%rax[9],%rax[10],%rax[11],%rax[12],%rax[13],%rax[14],%rax[15],
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     %rax[40],%rax[41],%rax[42],%rax[43],%rax[44],%rax[45],%rax[46],%rax[47],
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit];
(* xor    %rcx,%rax                                #! PC = 0x555555582ceb *)
adds %dc %rax %rcx %rax;
(* cmp    $0x3,%esi                                #! PC = 0x555555582cee *)
(* cmp 0x3, esi *)
nop;
(* #je     0x555555582d48 <radix_conversions+584>  #! PC = 0x555555582cf1 *)
#je     0x555555582d48 <radix_conversions+584>  #! 0x555555582cf1 = 0x555555582cf1;
(* mov    %rax,(%rdx)                              #! EA = L0x7ffffff50cd8; PC = 0x555555582d48 *)
mov %L0x7ffffff50cd8 %rax;
(* add    $0x8,%rdx                                #! PC = 0x555555582d4b *)
(* add $0x8, rdx *)
nop;
(* cmp    %rdx,%r12                                #! PC = 0x555555582d4f *)
(* cmp rdx, r12 *)
nop;
(* #jne    0x555555582cb0 <radix_conversions+432>  #! PC = 0x555555582d52 *)
#jne    0x555555582cb0 <radix_conversions+432>  #! 0x555555582d52 = 0x555555582d52;
(* mov    (%rdx),%rax                              #! EA = L0x7ffffff50ce0; Value = 0x0110179cdaf6630b; PC = 0x555555582cb0 *)
mov %rax %L0x7ffffff50ce0;
(* mov    %rax,%rcx                                #! PC = 0x555555582cb3 *)
mov %rcx %rax;
(* shr    $0x10,%rcx                               #! PC = 0x555555582cb6 *)
mov %rcx
    [%rcx[16],%rcx[17],%rcx[18],%rcx[19],%rcx[20],%rcx[21],%rcx[22],%rcx[23],
     %rcx[24],%rcx[25],%rcx[26],%rcx[27],%rcx[28],%rcx[29],%rcx[30],%rcx[31],
     %rcx[32],%rcx[33],%rcx[34],%rcx[35],%rcx[36],%rcx[37],%rcx[38],%rcx[39],
     %rcx[40],%rcx[41],%rcx[42],%rcx[43],%rcx[44],%rcx[45],%rcx[46],%rcx[47],
     %rcx[48],%rcx[49],%rcx[50],%rcx[51],%rcx[52],%rcx[53],%rcx[54],%rcx[55],
     %rcx[56],%rcx[57],%rcx[58],%rcx[59],%rcx[60],%rcx[61],%rcx[62],%rcx[63],
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit];
(* and    %rbx,%rcx                                #! PC = 0x555555582cba *)
mov %rcx
    [0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     %rcx[32],%rcx[33],%rcx[34],%rcx[35],%rcx[36],%rcx[37],%rcx[38],%rcx[39],
     %rcx[40],%rcx[41],%rcx[42],%rcx[43],%rcx[44],%rcx[45],%rcx[46],%rcx[47],
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit];
(* xor    %rax,%rcx                                #! PC = 0x555555582cbd *)
adds %dc %rcx %rax %rcx;
(* mov    %rcx,%rax                                #! PC = 0x555555582cc0 *)
mov %rax %rcx;
(* shr    $0x10,%rax                               #! PC = 0x555555582cc3 *)
mov %rax
    [%rax[16],%rax[17],%rax[18],%rax[19],%rax[20],%rax[21],%rax[22],%rax[23],
     %rax[24],%rax[25],%rax[26],%rax[27],%rax[28],%rax[29],%rax[30],%rax[31],
     %rax[32],%rax[33],%rax[34],%rax[35],%rax[36],%rax[37],%rax[38],%rax[39],
     %rax[40],%rax[41],%rax[42],%rax[43],%rax[44],%rax[45],%rax[46],%rax[47],
     %rax[48],%rax[49],%rax[50],%rax[51],%rax[52],%rax[53],%rax[54],%rax[55],
     %rax[56],%rax[57],%rax[58],%rax[59],%rax[60],%rax[61],%rax[62],%rax[63],
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit];
(* and    $0xffff0000,%eax                         #! PC = 0x555555582cc7 *)
mov %rax
    [0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     %rax[16],%rax[17],%rax[18],%rax[19],%rax[20],%rax[21],%rax[22],%rax[23],
     %rax[24],%rax[25],%rax[26],%rax[27],%rax[28],%rax[29],%rax[30],%rax[31],
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit];
(* xor    %rcx,%rax                                #! PC = 0x555555582ccc *)
adds %dc %rax %rcx %rax;
(* cmp    $0x4,%esi                                #! PC = 0x555555582ccf *)
(* cmp 0x4, esi *)
nop;
(* #je     0x555555582d48 <radix_conversions+584>  #! PC = 0x555555582cd2 *)
#je     0x555555582d48 <radix_conversions+584>  #! 0x555555582cd2 = 0x555555582cd2;
(* mov    %rax,%rcx                                #! PC = 0x555555582cd4 *)
mov %rcx %rax;
(* shr    $0x8,%rcx                                #! PC = 0x555555582cd7 *)
mov %rcx
    [%rcx[8],%rcx[9],%rcx[10],%rcx[11],%rcx[12],%rcx[13],%rcx[14],%rcx[15],
     %rcx[16],%rcx[17],%rcx[18],%rcx[19],%rcx[20],%rcx[21],%rcx[22],%rcx[23],
     %rcx[24],%rcx[25],%rcx[26],%rcx[27],%rcx[28],%rcx[29],%rcx[30],%rcx[31],
     %rcx[32],%rcx[33],%rcx[34],%rcx[35],%rcx[36],%rcx[37],%rcx[38],%rcx[39],
     %rcx[40],%rcx[41],%rcx[42],%rcx[43],%rcx[44],%rcx[45],%rcx[46],%rcx[47],
     %rcx[48],%rcx[49],%rcx[50],%rcx[51],%rcx[52],%rcx[53],%rcx[54],%rcx[55],
     %rcx[56],%rcx[57],%rcx[58],%rcx[59],%rcx[60],%rcx[61],%rcx[62],%rcx[63],
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit];
(* and    %r14,%rcx                                #! PC = 0x555555582cdb *)
mov %rcx
    [0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     %rcx[16],%rcx[17],%rcx[18],%rcx[19],%rcx[20],%rcx[21],%rcx[22],%rcx[23],
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     %rcx[48],%rcx[49],%rcx[50],%rcx[51],%rcx[52],%rcx[53],%rcx[54],%rcx[55],
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit];
(* xor    %rax,%rcx                                #! PC = 0x555555582cde *)
adds %dc %rcx %rax %rcx;
(* mov    %rcx,%rax                                #! PC = 0x555555582ce1 *)
mov %rax %rcx;
(* shr    $0x8,%rax                                #! PC = 0x555555582ce4 *)
mov %rax
    [%rax[8],%rax[9],%rax[10],%rax[11],%rax[12],%rax[13],%rax[14],%rax[15],
     %rax[16],%rax[17],%rax[18],%rax[19],%rax[20],%rax[21],%rax[22],%rax[23],
     %rax[24],%rax[25],%rax[26],%rax[27],%rax[28],%rax[29],%rax[30],%rax[31],
     %rax[32],%rax[33],%rax[34],%rax[35],%rax[36],%rax[37],%rax[38],%rax[39],
     %rax[40],%rax[41],%rax[42],%rax[43],%rax[44],%rax[45],%rax[46],%rax[47],
     %rax[48],%rax[49],%rax[50],%rax[51],%rax[52],%rax[53],%rax[54],%rax[55],
     %rax[56],%rax[57],%rax[58],%rax[59],%rax[60],%rax[61],%rax[62],%rax[63],
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit];
(* and    %r13,%rax                                #! PC = 0x555555582ce8 *)
mov %rax
    [0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     %rax[8],%rax[9],%rax[10],%rax[11],%rax[12],%rax[13],%rax[14],%rax[15],
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     %rax[40],%rax[41],%rax[42],%rax[43],%rax[44],%rax[45],%rax[46],%rax[47],
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit];
(* xor    %rcx,%rax                                #! PC = 0x555555582ceb *)
adds %dc %rax %rcx %rax;
(* cmp    $0x3,%esi                                #! PC = 0x555555582cee *)
(* cmp 0x3, esi *)
nop;
(* #je     0x555555582d48 <radix_conversions+584>  #! PC = 0x555555582cf1 *)
#je     0x555555582d48 <radix_conversions+584>  #! 0x555555582cf1 = 0x555555582cf1;
(* mov    %rax,(%rdx)                              #! EA = L0x7ffffff50ce0; PC = 0x555555582d48 *)
mov %L0x7ffffff50ce0 %rax;
(* add    $0x8,%rdx                                #! PC = 0x555555582d4b *)
(* add $0x8, rdx *)
nop;
(* cmp    %rdx,%r12                                #! PC = 0x555555582d4f *)
(* cmp rdx, r12 *)
nop;
(* #jne    0x555555582cb0 <radix_conversions+432>  #! PC = 0x555555582d52 *)
#jne    0x555555582cb0 <radix_conversions+432>  #! 0x555555582d52 = 0x555555582d52;
(* mov    (%rdx),%rax                              #! EA = L0x7ffffff50ce8; Value = 0x192dd6a2d08e1f26; PC = 0x555555582cb0 *)
mov %rax %L0x7ffffff50ce8;
(* mov    %rax,%rcx                                #! PC = 0x555555582cb3 *)
mov %rcx %rax;
(* shr    $0x10,%rcx                               #! PC = 0x555555582cb6 *)
mov %rcx
    [%rcx[16],%rcx[17],%rcx[18],%rcx[19],%rcx[20],%rcx[21],%rcx[22],%rcx[23],
     %rcx[24],%rcx[25],%rcx[26],%rcx[27],%rcx[28],%rcx[29],%rcx[30],%rcx[31],
     %rcx[32],%rcx[33],%rcx[34],%rcx[35],%rcx[36],%rcx[37],%rcx[38],%rcx[39],
     %rcx[40],%rcx[41],%rcx[42],%rcx[43],%rcx[44],%rcx[45],%rcx[46],%rcx[47],
     %rcx[48],%rcx[49],%rcx[50],%rcx[51],%rcx[52],%rcx[53],%rcx[54],%rcx[55],
     %rcx[56],%rcx[57],%rcx[58],%rcx[59],%rcx[60],%rcx[61],%rcx[62],%rcx[63],
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit];
(* and    %rbx,%rcx                                #! PC = 0x555555582cba *)
mov %rcx
    [0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     %rcx[32],%rcx[33],%rcx[34],%rcx[35],%rcx[36],%rcx[37],%rcx[38],%rcx[39],
     %rcx[40],%rcx[41],%rcx[42],%rcx[43],%rcx[44],%rcx[45],%rcx[46],%rcx[47],
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit];
(* xor    %rax,%rcx                                #! PC = 0x555555582cbd *)
adds %dc %rcx %rax %rcx;
(* mov    %rcx,%rax                                #! PC = 0x555555582cc0 *)
mov %rax %rcx;
(* shr    $0x10,%rax                               #! PC = 0x555555582cc3 *)
mov %rax
    [%rax[16],%rax[17],%rax[18],%rax[19],%rax[20],%rax[21],%rax[22],%rax[23],
     %rax[24],%rax[25],%rax[26],%rax[27],%rax[28],%rax[29],%rax[30],%rax[31],
     %rax[32],%rax[33],%rax[34],%rax[35],%rax[36],%rax[37],%rax[38],%rax[39],
     %rax[40],%rax[41],%rax[42],%rax[43],%rax[44],%rax[45],%rax[46],%rax[47],
     %rax[48],%rax[49],%rax[50],%rax[51],%rax[52],%rax[53],%rax[54],%rax[55],
     %rax[56],%rax[57],%rax[58],%rax[59],%rax[60],%rax[61],%rax[62],%rax[63],
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit];
(* and    $0xffff0000,%eax                         #! PC = 0x555555582cc7 *)
mov %rax
    [0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     %rax[16],%rax[17],%rax[18],%rax[19],%rax[20],%rax[21],%rax[22],%rax[23],
     %rax[24],%rax[25],%rax[26],%rax[27],%rax[28],%rax[29],%rax[30],%rax[31],
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit];
(* xor    %rcx,%rax                                #! PC = 0x555555582ccc *)
adds %dc %rax %rcx %rax;
(* cmp    $0x4,%esi                                #! PC = 0x555555582ccf *)
(* cmp 0x4, esi *)
nop;
(* #je     0x555555582d48 <radix_conversions+584>  #! PC = 0x555555582cd2 *)
#je     0x555555582d48 <radix_conversions+584>  #! 0x555555582cd2 = 0x555555582cd2;
(* mov    %rax,%rcx                                #! PC = 0x555555582cd4 *)
mov %rcx %rax;
(* shr    $0x8,%rcx                                #! PC = 0x555555582cd7 *)
mov %rcx
    [%rcx[8],%rcx[9],%rcx[10],%rcx[11],%rcx[12],%rcx[13],%rcx[14],%rcx[15],
     %rcx[16],%rcx[17],%rcx[18],%rcx[19],%rcx[20],%rcx[21],%rcx[22],%rcx[23],
     %rcx[24],%rcx[25],%rcx[26],%rcx[27],%rcx[28],%rcx[29],%rcx[30],%rcx[31],
     %rcx[32],%rcx[33],%rcx[34],%rcx[35],%rcx[36],%rcx[37],%rcx[38],%rcx[39],
     %rcx[40],%rcx[41],%rcx[42],%rcx[43],%rcx[44],%rcx[45],%rcx[46],%rcx[47],
     %rcx[48],%rcx[49],%rcx[50],%rcx[51],%rcx[52],%rcx[53],%rcx[54],%rcx[55],
     %rcx[56],%rcx[57],%rcx[58],%rcx[59],%rcx[60],%rcx[61],%rcx[62],%rcx[63],
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit];
(* and    %r14,%rcx                                #! PC = 0x555555582cdb *)
mov %rcx
    [0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     %rcx[16],%rcx[17],%rcx[18],%rcx[19],%rcx[20],%rcx[21],%rcx[22],%rcx[23],
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     %rcx[48],%rcx[49],%rcx[50],%rcx[51],%rcx[52],%rcx[53],%rcx[54],%rcx[55],
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit];
(* xor    %rax,%rcx                                #! PC = 0x555555582cde *)
adds %dc %rcx %rax %rcx;
(* mov    %rcx,%rax                                #! PC = 0x555555582ce1 *)
mov %rax %rcx;
(* shr    $0x8,%rax                                #! PC = 0x555555582ce4 *)
mov %rax
    [%rax[8],%rax[9],%rax[10],%rax[11],%rax[12],%rax[13],%rax[14],%rax[15],
     %rax[16],%rax[17],%rax[18],%rax[19],%rax[20],%rax[21],%rax[22],%rax[23],
     %rax[24],%rax[25],%rax[26],%rax[27],%rax[28],%rax[29],%rax[30],%rax[31],
     %rax[32],%rax[33],%rax[34],%rax[35],%rax[36],%rax[37],%rax[38],%rax[39],
     %rax[40],%rax[41],%rax[42],%rax[43],%rax[44],%rax[45],%rax[46],%rax[47],
     %rax[48],%rax[49],%rax[50],%rax[51],%rax[52],%rax[53],%rax[54],%rax[55],
     %rax[56],%rax[57],%rax[58],%rax[59],%rax[60],%rax[61],%rax[62],%rax[63],
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit];
(* and    %r13,%rax                                #! PC = 0x555555582ce8 *)
mov %rax
    [0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     %rax[8],%rax[9],%rax[10],%rax[11],%rax[12],%rax[13],%rax[14],%rax[15],
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     %rax[40],%rax[41],%rax[42],%rax[43],%rax[44],%rax[45],%rax[46],%rax[47],
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit];
(* xor    %rcx,%rax                                #! PC = 0x555555582ceb *)
adds %dc %rax %rcx %rax;
(* cmp    $0x3,%esi                                #! PC = 0x555555582cee *)
(* cmp 0x3, esi *)
nop;
(* #je     0x555555582d48 <radix_conversions+584>  #! PC = 0x555555582cf1 *)
#je     0x555555582d48 <radix_conversions+584>  #! 0x555555582cf1 = 0x555555582cf1;
(* mov    %rax,(%rdx)                              #! EA = L0x7ffffff50ce8; PC = 0x555555582d48 *)
mov %L0x7ffffff50ce8 %rax;
(* add    $0x8,%rdx                                #! PC = 0x555555582d4b *)
(* add $0x8, rdx *)
nop;
(* cmp    %rdx,%r12                                #! PC = 0x555555582d4f *)
(* cmp rdx, r12 *)
nop;
(* #jne    0x555555582cb0 <radix_conversions+432>  #! PC = 0x555555582d52 *)
#jne    0x555555582cb0 <radix_conversions+432>  #! 0x555555582d52 = 0x555555582d52;
(* mov    (%rdx),%rax                              #! EA = L0x7ffffff50cf0; Value = 0xcac1b63c17dfa807; PC = 0x555555582cb0 *)
mov %rax %L0x7ffffff50cf0;
(* mov    %rax,%rcx                                #! PC = 0x555555582cb3 *)
mov %rcx %rax;
(* shr    $0x10,%rcx                               #! PC = 0x555555582cb6 *)
mov %rcx
    [%rcx[16],%rcx[17],%rcx[18],%rcx[19],%rcx[20],%rcx[21],%rcx[22],%rcx[23],
     %rcx[24],%rcx[25],%rcx[26],%rcx[27],%rcx[28],%rcx[29],%rcx[30],%rcx[31],
     %rcx[32],%rcx[33],%rcx[34],%rcx[35],%rcx[36],%rcx[37],%rcx[38],%rcx[39],
     %rcx[40],%rcx[41],%rcx[42],%rcx[43],%rcx[44],%rcx[45],%rcx[46],%rcx[47],
     %rcx[48],%rcx[49],%rcx[50],%rcx[51],%rcx[52],%rcx[53],%rcx[54],%rcx[55],
     %rcx[56],%rcx[57],%rcx[58],%rcx[59],%rcx[60],%rcx[61],%rcx[62],%rcx[63],
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit];
(* and    %rbx,%rcx                                #! PC = 0x555555582cba *)
mov %rcx
    [0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     %rcx[32],%rcx[33],%rcx[34],%rcx[35],%rcx[36],%rcx[37],%rcx[38],%rcx[39],
     %rcx[40],%rcx[41],%rcx[42],%rcx[43],%rcx[44],%rcx[45],%rcx[46],%rcx[47],
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit];
(* xor    %rax,%rcx                                #! PC = 0x555555582cbd *)
adds %dc %rcx %rax %rcx;
(* mov    %rcx,%rax                                #! PC = 0x555555582cc0 *)
mov %rax %rcx;
(* shr    $0x10,%rax                               #! PC = 0x555555582cc3 *)
mov %rax
    [%rax[16],%rax[17],%rax[18],%rax[19],%rax[20],%rax[21],%rax[22],%rax[23],
     %rax[24],%rax[25],%rax[26],%rax[27],%rax[28],%rax[29],%rax[30],%rax[31],
     %rax[32],%rax[33],%rax[34],%rax[35],%rax[36],%rax[37],%rax[38],%rax[39],
     %rax[40],%rax[41],%rax[42],%rax[43],%rax[44],%rax[45],%rax[46],%rax[47],
     %rax[48],%rax[49],%rax[50],%rax[51],%rax[52],%rax[53],%rax[54],%rax[55],
     %rax[56],%rax[57],%rax[58],%rax[59],%rax[60],%rax[61],%rax[62],%rax[63],
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit];
(* and    $0xffff0000,%eax                         #! PC = 0x555555582cc7 *)
mov %rax
    [0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     %rax[16],%rax[17],%rax[18],%rax[19],%rax[20],%rax[21],%rax[22],%rax[23],
     %rax[24],%rax[25],%rax[26],%rax[27],%rax[28],%rax[29],%rax[30],%rax[31],
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit];
(* xor    %rcx,%rax                                #! PC = 0x555555582ccc *)
adds %dc %rax %rcx %rax;
(* cmp    $0x4,%esi                                #! PC = 0x555555582ccf *)
(* cmp 0x4, esi *)
nop;
(* #je     0x555555582d48 <radix_conversions+584>  #! PC = 0x555555582cd2 *)
#je     0x555555582d48 <radix_conversions+584>  #! 0x555555582cd2 = 0x555555582cd2;
(* mov    %rax,%rcx                                #! PC = 0x555555582cd4 *)
mov %rcx %rax;
(* shr    $0x8,%rcx                                #! PC = 0x555555582cd7 *)
mov %rcx
    [%rcx[8],%rcx[9],%rcx[10],%rcx[11],%rcx[12],%rcx[13],%rcx[14],%rcx[15],
     %rcx[16],%rcx[17],%rcx[18],%rcx[19],%rcx[20],%rcx[21],%rcx[22],%rcx[23],
     %rcx[24],%rcx[25],%rcx[26],%rcx[27],%rcx[28],%rcx[29],%rcx[30],%rcx[31],
     %rcx[32],%rcx[33],%rcx[34],%rcx[35],%rcx[36],%rcx[37],%rcx[38],%rcx[39],
     %rcx[40],%rcx[41],%rcx[42],%rcx[43],%rcx[44],%rcx[45],%rcx[46],%rcx[47],
     %rcx[48],%rcx[49],%rcx[50],%rcx[51],%rcx[52],%rcx[53],%rcx[54],%rcx[55],
     %rcx[56],%rcx[57],%rcx[58],%rcx[59],%rcx[60],%rcx[61],%rcx[62],%rcx[63],
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit];
(* and    %r14,%rcx                                #! PC = 0x555555582cdb *)
mov %rcx
    [0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     %rcx[16],%rcx[17],%rcx[18],%rcx[19],%rcx[20],%rcx[21],%rcx[22],%rcx[23],
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     %rcx[48],%rcx[49],%rcx[50],%rcx[51],%rcx[52],%rcx[53],%rcx[54],%rcx[55],
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit];
(* xor    %rax,%rcx                                #! PC = 0x555555582cde *)
adds %dc %rcx %rax %rcx;
(* mov    %rcx,%rax                                #! PC = 0x555555582ce1 *)
mov %rax %rcx;
(* shr    $0x8,%rax                                #! PC = 0x555555582ce4 *)
mov %rax
    [%rax[8],%rax[9],%rax[10],%rax[11],%rax[12],%rax[13],%rax[14],%rax[15],
     %rax[16],%rax[17],%rax[18],%rax[19],%rax[20],%rax[21],%rax[22],%rax[23],
     %rax[24],%rax[25],%rax[26],%rax[27],%rax[28],%rax[29],%rax[30],%rax[31],
     %rax[32],%rax[33],%rax[34],%rax[35],%rax[36],%rax[37],%rax[38],%rax[39],
     %rax[40],%rax[41],%rax[42],%rax[43],%rax[44],%rax[45],%rax[46],%rax[47],
     %rax[48],%rax[49],%rax[50],%rax[51],%rax[52],%rax[53],%rax[54],%rax[55],
     %rax[56],%rax[57],%rax[58],%rax[59],%rax[60],%rax[61],%rax[62],%rax[63],
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit];
(* and    %r13,%rax                                #! PC = 0x555555582ce8 *)
mov %rax
    [0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     %rax[8],%rax[9],%rax[10],%rax[11],%rax[12],%rax[13],%rax[14],%rax[15],
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     %rax[40],%rax[41],%rax[42],%rax[43],%rax[44],%rax[45],%rax[46],%rax[47],
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit];
(* xor    %rcx,%rax                                #! PC = 0x555555582ceb *)
adds %dc %rax %rcx %rax;
(* cmp    $0x3,%esi                                #! PC = 0x555555582cee *)
(* cmp 0x3, esi *)
nop;
(* #je     0x555555582d48 <radix_conversions+584>  #! PC = 0x555555582cf1 *)
#je     0x555555582d48 <radix_conversions+584>  #! 0x555555582cf1 = 0x555555582cf1;
(* mov    %rax,(%rdx)                              #! EA = L0x7ffffff50cf0; PC = 0x555555582d48 *)
mov %L0x7ffffff50cf0 %rax;
(* add    $0x8,%rdx                                #! PC = 0x555555582d4b *)
(* add $0x8, rdx *)
nop;
(* cmp    %rdx,%r12                                #! PC = 0x555555582d4f *)
(* cmp rdx, r12 *)
nop;
(* #jne    0x555555582cb0 <radix_conversions+432>  #! PC = 0x555555582d52 *)
#jne    0x555555582cb0 <radix_conversions+432>  #! 0x555555582d52 = 0x555555582d52;
(* mov    (%rdx),%rax                              #! EA = L0x7ffffff50cf8; Value = 0x0ce531e2eac2eb48; PC = 0x555555582cb0 *)
mov %rax %L0x7ffffff50cf8;
(* mov    %rax,%rcx                                #! PC = 0x555555582cb3 *)
mov %rcx %rax;
(* shr    $0x10,%rcx                               #! PC = 0x555555582cb6 *)
mov %rcx
    [%rcx[16],%rcx[17],%rcx[18],%rcx[19],%rcx[20],%rcx[21],%rcx[22],%rcx[23],
     %rcx[24],%rcx[25],%rcx[26],%rcx[27],%rcx[28],%rcx[29],%rcx[30],%rcx[31],
     %rcx[32],%rcx[33],%rcx[34],%rcx[35],%rcx[36],%rcx[37],%rcx[38],%rcx[39],
     %rcx[40],%rcx[41],%rcx[42],%rcx[43],%rcx[44],%rcx[45],%rcx[46],%rcx[47],
     %rcx[48],%rcx[49],%rcx[50],%rcx[51],%rcx[52],%rcx[53],%rcx[54],%rcx[55],
     %rcx[56],%rcx[57],%rcx[58],%rcx[59],%rcx[60],%rcx[61],%rcx[62],%rcx[63],
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit];
(* and    %rbx,%rcx                                #! PC = 0x555555582cba *)
mov %rcx
    [0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     %rcx[32],%rcx[33],%rcx[34],%rcx[35],%rcx[36],%rcx[37],%rcx[38],%rcx[39],
     %rcx[40],%rcx[41],%rcx[42],%rcx[43],%rcx[44],%rcx[45],%rcx[46],%rcx[47],
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit];
(* xor    %rax,%rcx                                #! PC = 0x555555582cbd *)
adds %dc %rcx %rax %rcx;
(* mov    %rcx,%rax                                #! PC = 0x555555582cc0 *)
mov %rax %rcx;
(* shr    $0x10,%rax                               #! PC = 0x555555582cc3 *)
mov %rax
    [%rax[16],%rax[17],%rax[18],%rax[19],%rax[20],%rax[21],%rax[22],%rax[23],
     %rax[24],%rax[25],%rax[26],%rax[27],%rax[28],%rax[29],%rax[30],%rax[31],
     %rax[32],%rax[33],%rax[34],%rax[35],%rax[36],%rax[37],%rax[38],%rax[39],
     %rax[40],%rax[41],%rax[42],%rax[43],%rax[44],%rax[45],%rax[46],%rax[47],
     %rax[48],%rax[49],%rax[50],%rax[51],%rax[52],%rax[53],%rax[54],%rax[55],
     %rax[56],%rax[57],%rax[58],%rax[59],%rax[60],%rax[61],%rax[62],%rax[63],
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit];
(* and    $0xffff0000,%eax                         #! PC = 0x555555582cc7 *)
mov %rax
    [0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     %rax[16],%rax[17],%rax[18],%rax[19],%rax[20],%rax[21],%rax[22],%rax[23],
     %rax[24],%rax[25],%rax[26],%rax[27],%rax[28],%rax[29],%rax[30],%rax[31],
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit];
(* xor    %rcx,%rax                                #! PC = 0x555555582ccc *)
adds %dc %rax %rcx %rax;
(* cmp    $0x4,%esi                                #! PC = 0x555555582ccf *)
(* cmp 0x4, esi *)
nop;
(* #je     0x555555582d48 <radix_conversions+584>  #! PC = 0x555555582cd2 *)
#je     0x555555582d48 <radix_conversions+584>  #! 0x555555582cd2 = 0x555555582cd2;
(* mov    %rax,%rcx                                #! PC = 0x555555582cd4 *)
mov %rcx %rax;
(* shr    $0x8,%rcx                                #! PC = 0x555555582cd7 *)
mov %rcx
    [%rcx[8],%rcx[9],%rcx[10],%rcx[11],%rcx[12],%rcx[13],%rcx[14],%rcx[15],
     %rcx[16],%rcx[17],%rcx[18],%rcx[19],%rcx[20],%rcx[21],%rcx[22],%rcx[23],
     %rcx[24],%rcx[25],%rcx[26],%rcx[27],%rcx[28],%rcx[29],%rcx[30],%rcx[31],
     %rcx[32],%rcx[33],%rcx[34],%rcx[35],%rcx[36],%rcx[37],%rcx[38],%rcx[39],
     %rcx[40],%rcx[41],%rcx[42],%rcx[43],%rcx[44],%rcx[45],%rcx[46],%rcx[47],
     %rcx[48],%rcx[49],%rcx[50],%rcx[51],%rcx[52],%rcx[53],%rcx[54],%rcx[55],
     %rcx[56],%rcx[57],%rcx[58],%rcx[59],%rcx[60],%rcx[61],%rcx[62],%rcx[63],
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit];
(* and    %r14,%rcx                                #! PC = 0x555555582cdb *)
mov %rcx
    [0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     %rcx[16],%rcx[17],%rcx[18],%rcx[19],%rcx[20],%rcx[21],%rcx[22],%rcx[23],
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     %rcx[48],%rcx[49],%rcx[50],%rcx[51],%rcx[52],%rcx[53],%rcx[54],%rcx[55],
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit];
(* xor    %rax,%rcx                                #! PC = 0x555555582cde *)
adds %dc %rcx %rax %rcx;
(* mov    %rcx,%rax                                #! PC = 0x555555582ce1 *)
mov %rax %rcx;
(* shr    $0x8,%rax                                #! PC = 0x555555582ce4 *)
mov %rax
    [%rax[8],%rax[9],%rax[10],%rax[11],%rax[12],%rax[13],%rax[14],%rax[15],
     %rax[16],%rax[17],%rax[18],%rax[19],%rax[20],%rax[21],%rax[22],%rax[23],
     %rax[24],%rax[25],%rax[26],%rax[27],%rax[28],%rax[29],%rax[30],%rax[31],
     %rax[32],%rax[33],%rax[34],%rax[35],%rax[36],%rax[37],%rax[38],%rax[39],
     %rax[40],%rax[41],%rax[42],%rax[43],%rax[44],%rax[45],%rax[46],%rax[47],
     %rax[48],%rax[49],%rax[50],%rax[51],%rax[52],%rax[53],%rax[54],%rax[55],
     %rax[56],%rax[57],%rax[58],%rax[59],%rax[60],%rax[61],%rax[62],%rax[63],
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit];
(* and    %r13,%rax                                #! PC = 0x555555582ce8 *)
mov %rax
    [0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     %rax[8],%rax[9],%rax[10],%rax[11],%rax[12],%rax[13],%rax[14],%rax[15],
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     %rax[40],%rax[41],%rax[42],%rax[43],%rax[44],%rax[45],%rax[46],%rax[47],
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit];
(* xor    %rcx,%rax                                #! PC = 0x555555582ceb *)
adds %dc %rax %rcx %rax;
(* cmp    $0x3,%esi                                #! PC = 0x555555582cee *)
(* cmp 0x3, esi *)
nop;
(* #je     0x555555582d48 <radix_conversions+584>  #! PC = 0x555555582cf1 *)
#je     0x555555582d48 <radix_conversions+584>  #! 0x555555582cf1 = 0x555555582cf1;
(* mov    %rax,(%rdx)                              #! EA = L0x7ffffff50cf8; PC = 0x555555582d48 *)
mov %L0x7ffffff50cf8 %rax;
(* add    $0x8,%rdx                                #! PC = 0x555555582d4b *)
(* add $0x8, rdx *)
nop;
(* cmp    %rdx,%r12                                #! PC = 0x555555582d4f *)
(* cmp rdx, r12 *)
nop;
(* #jne    0x555555582cb0 <radix_conversions+432>  #! PC = 0x555555582d52 *)
#jne    0x555555582cb0 <radix_conversions+432>  #! 0x555555582d52 = 0x555555582d52;



(****************
  NOTE: end of 4th radix conversion. obtain 16 degree-4 polynomials
 ****************)

ghost X3@uint64,F30@uint16,F31@uint16,F32@uint16,F33@uint16,F34@uint16,F35@uint16,F36@uint16,F37@uint16,
      F38@uint16,F39@uint16,F3a@uint16,F3b@uint16,F3c@uint16,F3d@uint16,F3e@uint16,F3f@uint16:
X3 = Y2**2 + Y2 /\
F30 =
poly z [%L0x7ffffff50ca0[0],%L0x7ffffff50ca8[0],%L0x7ffffff50cb0[0],
        %L0x7ffffff50cb8[0],%L0x7ffffff50cc0[0],%L0x7ffffff50cc8[0],
        %L0x7ffffff50cd0[0],%L0x7ffffff50cd8[0],%L0x7ffffff50ce0[0],
        %L0x7ffffff50ce8[0],%L0x7ffffff50cf0[0],%L0x7ffffff50cf8[0]]*X3**0+
poly z [%L0x7ffffff50ca0[16],%L0x7ffffff50ca8[16],%L0x7ffffff50cb0[16],
        %L0x7ffffff50cb8[16],%L0x7ffffff50cc0[16],%L0x7ffffff50cc8[16],
        %L0x7ffffff50cd0[16],%L0x7ffffff50cd8[16],%L0x7ffffff50ce0[16],
        %L0x7ffffff50ce8[16],%L0x7ffffff50cf0[16],%L0x7ffffff50cf8[16]]*X3**1+
poly z [%L0x7ffffff50ca0[32],%L0x7ffffff50ca8[32],%L0x7ffffff50cb0[32],
        %L0x7ffffff50cb8[32],%L0x7ffffff50cc0[32],%L0x7ffffff50cc8[32],
        %L0x7ffffff50cd0[32],%L0x7ffffff50cd8[32],%L0x7ffffff50ce0[32],
        %L0x7ffffff50ce8[32],%L0x7ffffff50cf0[32],%L0x7ffffff50cf8[32]]*X3**2+
poly z [%L0x7ffffff50ca0[48],%L0x7ffffff50ca8[48],%L0x7ffffff50cb0[48],
        %L0x7ffffff50cb8[48],%L0x7ffffff50cc0[48],%L0x7ffffff50cc8[48],
        %L0x7ffffff50cd0[48],%L0x7ffffff50cd8[48],%L0x7ffffff50ce0[48],
        %L0x7ffffff50ce8[48],%L0x7ffffff50cf0[48],%L0x7ffffff50cf8[48]]*X3**3
 /\
F31 =
poly z [%L0x7ffffff50ca0[1],%L0x7ffffff50ca8[1],%L0x7ffffff50cb0[1],
        %L0x7ffffff50cb8[1],%L0x7ffffff50cc0[1],%L0x7ffffff50cc8[1],
        %L0x7ffffff50cd0[1],%L0x7ffffff50cd8[1],%L0x7ffffff50ce0[1],
        %L0x7ffffff50ce8[1],%L0x7ffffff50cf0[1],%L0x7ffffff50cf8[1]]*X3**0+
poly z [%L0x7ffffff50ca0[17],%L0x7ffffff50ca8[17],%L0x7ffffff50cb0[17],
        %L0x7ffffff50cb8[17],%L0x7ffffff50cc0[17],%L0x7ffffff50cc8[17],
        %L0x7ffffff50cd0[17],%L0x7ffffff50cd8[17],%L0x7ffffff50ce0[17],
        %L0x7ffffff50ce8[17],%L0x7ffffff50cf0[17],%L0x7ffffff50cf8[17]]*X3**1+
poly z [%L0x7ffffff50ca0[33],%L0x7ffffff50ca8[33],%L0x7ffffff50cb0[33],
        %L0x7ffffff50cb8[33],%L0x7ffffff50cc0[33],%L0x7ffffff50cc8[33],
        %L0x7ffffff50cd0[33],%L0x7ffffff50cd8[33],%L0x7ffffff50ce0[33],
        %L0x7ffffff50ce8[33],%L0x7ffffff50cf0[33],%L0x7ffffff50cf8[33]]*X3**2+
poly z [%L0x7ffffff50ca0[49],%L0x7ffffff50ca8[49],%L0x7ffffff50cb0[49],
        %L0x7ffffff50cb8[49],%L0x7ffffff50cc0[49],%L0x7ffffff50cc8[49],
        %L0x7ffffff50cd0[49],%L0x7ffffff50cd8[49],%L0x7ffffff50ce0[49],
        %L0x7ffffff50ce8[49],%L0x7ffffff50cf0[49],%L0x7ffffff50cf8[49]]*X3**3
 /\
F32 =
poly z [%L0x7ffffff50ca0[2],%L0x7ffffff50ca8[2],%L0x7ffffff50cb0[2],
        %L0x7ffffff50cb8[2],%L0x7ffffff50cc0[2],%L0x7ffffff50cc8[2],
        %L0x7ffffff50cd0[2],%L0x7ffffff50cd8[2],%L0x7ffffff50ce0[2],
        %L0x7ffffff50ce8[2],%L0x7ffffff50cf0[2],%L0x7ffffff50cf8[2]]*X3**0+
poly z [%L0x7ffffff50ca0[18],%L0x7ffffff50ca8[18],%L0x7ffffff50cb0[18],
        %L0x7ffffff50cb8[18],%L0x7ffffff50cc0[18],%L0x7ffffff50cc8[18],
        %L0x7ffffff50cd0[18],%L0x7ffffff50cd8[18],%L0x7ffffff50ce0[18],
        %L0x7ffffff50ce8[18],%L0x7ffffff50cf0[18],%L0x7ffffff50cf8[18]]*X3**1+
poly z [%L0x7ffffff50ca0[34],%L0x7ffffff50ca8[34],%L0x7ffffff50cb0[34],
        %L0x7ffffff50cb8[34],%L0x7ffffff50cc0[34],%L0x7ffffff50cc8[34],
        %L0x7ffffff50cd0[34],%L0x7ffffff50cd8[34],%L0x7ffffff50ce0[34],
        %L0x7ffffff50ce8[34],%L0x7ffffff50cf0[34],%L0x7ffffff50cf8[34]]*X3**2+
poly z [%L0x7ffffff50ca0[50],%L0x7ffffff50ca8[50],%L0x7ffffff50cb0[50],
        %L0x7ffffff50cb8[50],%L0x7ffffff50cc0[50],%L0x7ffffff50cc8[50],
        %L0x7ffffff50cd0[50],%L0x7ffffff50cd8[50],%L0x7ffffff50ce0[50],
        %L0x7ffffff50ce8[50],%L0x7ffffff50cf0[50],%L0x7ffffff50cf8[50]]*X3**3
 /\
F33 =
poly z [%L0x7ffffff50ca0[3],%L0x7ffffff50ca8[3],%L0x7ffffff50cb0[3],
        %L0x7ffffff50cb8[3],%L0x7ffffff50cc0[3],%L0x7ffffff50cc8[3],
        %L0x7ffffff50cd0[3],%L0x7ffffff50cd8[3],%L0x7ffffff50ce0[3],
        %L0x7ffffff50ce8[3],%L0x7ffffff50cf0[3],%L0x7ffffff50cf8[3]]*X3**0+
poly z [%L0x7ffffff50ca0[19],%L0x7ffffff50ca8[19],%L0x7ffffff50cb0[19],
        %L0x7ffffff50cb8[19],%L0x7ffffff50cc0[19],%L0x7ffffff50cc8[19],
        %L0x7ffffff50cd0[19],%L0x7ffffff50cd8[19],%L0x7ffffff50ce0[19],
        %L0x7ffffff50ce8[19],%L0x7ffffff50cf0[19],%L0x7ffffff50cf8[19]]*X3**1+
poly z [%L0x7ffffff50ca0[35],%L0x7ffffff50ca8[35],%L0x7ffffff50cb0[35],
        %L0x7ffffff50cb8[35],%L0x7ffffff50cc0[35],%L0x7ffffff50cc8[35],
        %L0x7ffffff50cd0[35],%L0x7ffffff50cd8[35],%L0x7ffffff50ce0[35],
        %L0x7ffffff50ce8[35],%L0x7ffffff50cf0[35],%L0x7ffffff50cf8[35]]*X3**2+
poly z [%L0x7ffffff50ca0[51],%L0x7ffffff50ca8[51],%L0x7ffffff50cb0[51],
        %L0x7ffffff50cb8[51],%L0x7ffffff50cc0[51],%L0x7ffffff50cc8[51],
        %L0x7ffffff50cd0[51],%L0x7ffffff50cd8[51],%L0x7ffffff50ce0[51],
        %L0x7ffffff50ce8[51],%L0x7ffffff50cf0[51],%L0x7ffffff50cf8[51]]*X3**3
 /\
F34 =
poly z [%L0x7ffffff50ca0[4],%L0x7ffffff50ca8[4],%L0x7ffffff50cb0[4],
        %L0x7ffffff50cb8[4],%L0x7ffffff50cc0[4],%L0x7ffffff50cc8[4],
        %L0x7ffffff50cd0[4],%L0x7ffffff50cd8[4],%L0x7ffffff50ce0[4],
        %L0x7ffffff50ce8[4],%L0x7ffffff50cf0[4],%L0x7ffffff50cf8[4]]*X3**0+
poly z [%L0x7ffffff50ca0[20],%L0x7ffffff50ca8[20],%L0x7ffffff50cb0[20],
        %L0x7ffffff50cb8[20],%L0x7ffffff50cc0[20],%L0x7ffffff50cc8[20],
        %L0x7ffffff50cd0[20],%L0x7ffffff50cd8[20],%L0x7ffffff50ce0[20],
        %L0x7ffffff50ce8[20],%L0x7ffffff50cf0[20],%L0x7ffffff50cf8[20]]*X3**1+
poly z [%L0x7ffffff50ca0[36],%L0x7ffffff50ca8[36],%L0x7ffffff50cb0[36],
        %L0x7ffffff50cb8[36],%L0x7ffffff50cc0[36],%L0x7ffffff50cc8[36],
        %L0x7ffffff50cd0[36],%L0x7ffffff50cd8[36],%L0x7ffffff50ce0[36],
        %L0x7ffffff50ce8[36],%L0x7ffffff50cf0[36],%L0x7ffffff50cf8[36]]*X3**2+
poly z [%L0x7ffffff50ca0[52],%L0x7ffffff50ca8[52],%L0x7ffffff50cb0[52],
        %L0x7ffffff50cb8[52],%L0x7ffffff50cc0[52],%L0x7ffffff50cc8[52],
        %L0x7ffffff50cd0[52],%L0x7ffffff50cd8[52],%L0x7ffffff50ce0[52],
        %L0x7ffffff50ce8[52],%L0x7ffffff50cf0[52],%L0x7ffffff50cf8[52]]*X3**3
 /\
F35 =
poly z [%L0x7ffffff50ca0[5],%L0x7ffffff50ca8[5],%L0x7ffffff50cb0[5],
        %L0x7ffffff50cb8[5],%L0x7ffffff50cc0[5],%L0x7ffffff50cc8[5],
        %L0x7ffffff50cd0[5],%L0x7ffffff50cd8[5],%L0x7ffffff50ce0[5],
        %L0x7ffffff50ce8[5],%L0x7ffffff50cf0[5],%L0x7ffffff50cf8[5]]*X3**0+
poly z [%L0x7ffffff50ca0[21],%L0x7ffffff50ca8[21],%L0x7ffffff50cb0[21],
        %L0x7ffffff50cb8[21],%L0x7ffffff50cc0[21],%L0x7ffffff50cc8[21],
        %L0x7ffffff50cd0[21],%L0x7ffffff50cd8[21],%L0x7ffffff50ce0[21],
        %L0x7ffffff50ce8[21],%L0x7ffffff50cf0[21],%L0x7ffffff50cf8[21]]*X3**1+
poly z [%L0x7ffffff50ca0[37],%L0x7ffffff50ca8[37],%L0x7ffffff50cb0[37],
        %L0x7ffffff50cb8[37],%L0x7ffffff50cc0[37],%L0x7ffffff50cc8[37],
        %L0x7ffffff50cd0[37],%L0x7ffffff50cd8[37],%L0x7ffffff50ce0[37],
        %L0x7ffffff50ce8[37],%L0x7ffffff50cf0[37],%L0x7ffffff50cf8[37]]*X3**2+
poly z [%L0x7ffffff50ca0[53],%L0x7ffffff50ca8[53],%L0x7ffffff50cb0[53],
        %L0x7ffffff50cb8[53],%L0x7ffffff50cc0[53],%L0x7ffffff50cc8[53],
        %L0x7ffffff50cd0[53],%L0x7ffffff50cd8[53],%L0x7ffffff50ce0[53],
        %L0x7ffffff50ce8[53],%L0x7ffffff50cf0[53],%L0x7ffffff50cf8[53]]*X3**3
 /\
F36 =
poly z [%L0x7ffffff50ca0[6],%L0x7ffffff50ca8[6],%L0x7ffffff50cb0[6],
        %L0x7ffffff50cb8[6],%L0x7ffffff50cc0[6],%L0x7ffffff50cc8[6],
        %L0x7ffffff50cd0[6],%L0x7ffffff50cd8[6],%L0x7ffffff50ce0[6],
        %L0x7ffffff50ce8[6],%L0x7ffffff50cf0[6],%L0x7ffffff50cf8[6]]*X3**0+
poly z [%L0x7ffffff50ca0[22],%L0x7ffffff50ca8[22],%L0x7ffffff50cb0[22],
        %L0x7ffffff50cb8[22],%L0x7ffffff50cc0[22],%L0x7ffffff50cc8[22],
        %L0x7ffffff50cd0[22],%L0x7ffffff50cd8[22],%L0x7ffffff50ce0[22],
        %L0x7ffffff50ce8[22],%L0x7ffffff50cf0[22],%L0x7ffffff50cf8[22]]*X3**1+
poly z [%L0x7ffffff50ca0[38],%L0x7ffffff50ca8[38],%L0x7ffffff50cb0[38],
        %L0x7ffffff50cb8[38],%L0x7ffffff50cc0[38],%L0x7ffffff50cc8[38],
        %L0x7ffffff50cd0[38],%L0x7ffffff50cd8[38],%L0x7ffffff50ce0[38],
        %L0x7ffffff50ce8[38],%L0x7ffffff50cf0[38],%L0x7ffffff50cf8[38]]*X3**2+
poly z [%L0x7ffffff50ca0[54],%L0x7ffffff50ca8[54],%L0x7ffffff50cb0[54],
        %L0x7ffffff50cb8[54],%L0x7ffffff50cc0[54],%L0x7ffffff50cc8[54],
        %L0x7ffffff50cd0[54],%L0x7ffffff50cd8[54],%L0x7ffffff50ce0[54],
        %L0x7ffffff50ce8[54],%L0x7ffffff50cf0[54],%L0x7ffffff50cf8[54]]*X3**3
 /\
F37 =
poly z [%L0x7ffffff50ca0[7],%L0x7ffffff50ca8[7],%L0x7ffffff50cb0[7],
        %L0x7ffffff50cb8[7],%L0x7ffffff50cc0[7],%L0x7ffffff50cc8[7],
        %L0x7ffffff50cd0[7],%L0x7ffffff50cd8[7],%L0x7ffffff50ce0[7],
        %L0x7ffffff50ce8[7],%L0x7ffffff50cf0[7],%L0x7ffffff50cf8[7]]*X3**0+
poly z [%L0x7ffffff50ca0[23],%L0x7ffffff50ca8[23],%L0x7ffffff50cb0[23],
        %L0x7ffffff50cb8[23],%L0x7ffffff50cc0[23],%L0x7ffffff50cc8[23],
        %L0x7ffffff50cd0[23],%L0x7ffffff50cd8[23],%L0x7ffffff50ce0[23],
        %L0x7ffffff50ce8[23],%L0x7ffffff50cf0[23],%L0x7ffffff50cf8[23]]*X3**1+
poly z [%L0x7ffffff50ca0[39],%L0x7ffffff50ca8[39],%L0x7ffffff50cb0[39],
        %L0x7ffffff50cb8[39],%L0x7ffffff50cc0[39],%L0x7ffffff50cc8[39],
        %L0x7ffffff50cd0[39],%L0x7ffffff50cd8[39],%L0x7ffffff50ce0[39],
        %L0x7ffffff50ce8[39],%L0x7ffffff50cf0[39],%L0x7ffffff50cf8[39]]*X3**2+
poly z [%L0x7ffffff50ca0[55],%L0x7ffffff50ca8[55],%L0x7ffffff50cb0[55],
        %L0x7ffffff50cb8[55],%L0x7ffffff50cc0[55],%L0x7ffffff50cc8[55],
        %L0x7ffffff50cd0[55],%L0x7ffffff50cd8[55],%L0x7ffffff50ce0[55],
        %L0x7ffffff50ce8[55],%L0x7ffffff50cf0[55],%L0x7ffffff50cf8[55]]*X3**3
 /\
F38 =
poly z [%L0x7ffffff50ca0[8],%L0x7ffffff50ca8[8],%L0x7ffffff50cb0[8],
        %L0x7ffffff50cb8[8],%L0x7ffffff50cc0[8],%L0x7ffffff50cc8[8],
        %L0x7ffffff50cd0[8],%L0x7ffffff50cd8[8],%L0x7ffffff50ce0[8],
        %L0x7ffffff50ce8[8],%L0x7ffffff50cf0[8],%L0x7ffffff50cf8[8]]*X3**0+
poly z [%L0x7ffffff50ca0[24],%L0x7ffffff50ca8[24],%L0x7ffffff50cb0[24],
        %L0x7ffffff50cb8[24],%L0x7ffffff50cc0[24],%L0x7ffffff50cc8[24],
        %L0x7ffffff50cd0[24],%L0x7ffffff50cd8[24],%L0x7ffffff50ce0[24],
        %L0x7ffffff50ce8[24],%L0x7ffffff50cf0[24],%L0x7ffffff50cf8[24]]*X3**1+
poly z [%L0x7ffffff50ca0[40],%L0x7ffffff50ca8[40],%L0x7ffffff50cb0[40],
        %L0x7ffffff50cb8[40],%L0x7ffffff50cc0[40],%L0x7ffffff50cc8[40],
        %L0x7ffffff50cd0[40],%L0x7ffffff50cd8[40],%L0x7ffffff50ce0[40],
        %L0x7ffffff50ce8[40],%L0x7ffffff50cf0[40],%L0x7ffffff50cf8[40]]*X3**2+
poly z [%L0x7ffffff50ca0[56],%L0x7ffffff50ca8[56],%L0x7ffffff50cb0[56],
        %L0x7ffffff50cb8[56],%L0x7ffffff50cc0[56],%L0x7ffffff50cc8[56],
        %L0x7ffffff50cd0[56],%L0x7ffffff50cd8[56],%L0x7ffffff50ce0[56],
        %L0x7ffffff50ce8[56],%L0x7ffffff50cf0[56],%L0x7ffffff50cf8[56]]*X3**3
 /\
F39 =
poly z [%L0x7ffffff50ca0[9],%L0x7ffffff50ca8[9],%L0x7ffffff50cb0[9],
        %L0x7ffffff50cb8[9],%L0x7ffffff50cc0[9],%L0x7ffffff50cc8[9],
        %L0x7ffffff50cd0[9],%L0x7ffffff50cd8[9],%L0x7ffffff50ce0[9],
        %L0x7ffffff50ce8[9],%L0x7ffffff50cf0[9],%L0x7ffffff50cf8[9]]*X3**0+
poly z [%L0x7ffffff50ca0[25],%L0x7ffffff50ca8[25],%L0x7ffffff50cb0[25],
        %L0x7ffffff50cb8[25],%L0x7ffffff50cc0[25],%L0x7ffffff50cc8[25],
        %L0x7ffffff50cd0[25],%L0x7ffffff50cd8[25],%L0x7ffffff50ce0[25],
        %L0x7ffffff50ce8[25],%L0x7ffffff50cf0[25],%L0x7ffffff50cf8[25]]*X3**1+
poly z [%L0x7ffffff50ca0[41],%L0x7ffffff50ca8[41],%L0x7ffffff50cb0[41],
        %L0x7ffffff50cb8[41],%L0x7ffffff50cc0[41],%L0x7ffffff50cc8[41],
        %L0x7ffffff50cd0[41],%L0x7ffffff50cd8[41],%L0x7ffffff50ce0[41],
        %L0x7ffffff50ce8[41],%L0x7ffffff50cf0[41],%L0x7ffffff50cf8[41]]*X3**2+
poly z [%L0x7ffffff50ca0[57],%L0x7ffffff50ca8[57],%L0x7ffffff50cb0[57],
        %L0x7ffffff50cb8[57],%L0x7ffffff50cc0[57],%L0x7ffffff50cc8[57],
        %L0x7ffffff50cd0[57],%L0x7ffffff50cd8[57],%L0x7ffffff50ce0[57],
        %L0x7ffffff50ce8[57],%L0x7ffffff50cf0[57],%L0x7ffffff50cf8[57]]*X3**3
 /\
F3a =
poly z [%L0x7ffffff50ca0[10],%L0x7ffffff50ca8[10],%L0x7ffffff50cb0[10],
        %L0x7ffffff50cb8[10],%L0x7ffffff50cc0[10],%L0x7ffffff50cc8[10],
        %L0x7ffffff50cd0[10],%L0x7ffffff50cd8[10],%L0x7ffffff50ce0[10],
        %L0x7ffffff50ce8[10],%L0x7ffffff50cf0[10],%L0x7ffffff50cf8[10]]*X3**0+
poly z [%L0x7ffffff50ca0[26],%L0x7ffffff50ca8[26],%L0x7ffffff50cb0[26],
        %L0x7ffffff50cb8[26],%L0x7ffffff50cc0[26],%L0x7ffffff50cc8[26],
        %L0x7ffffff50cd0[26],%L0x7ffffff50cd8[26],%L0x7ffffff50ce0[26],
        %L0x7ffffff50ce8[26],%L0x7ffffff50cf0[26],%L0x7ffffff50cf8[26]]*X3**1+
poly z [%L0x7ffffff50ca0[42],%L0x7ffffff50ca8[42],%L0x7ffffff50cb0[42],
        %L0x7ffffff50cb8[42],%L0x7ffffff50cc0[42],%L0x7ffffff50cc8[42],
        %L0x7ffffff50cd0[42],%L0x7ffffff50cd8[42],%L0x7ffffff50ce0[42],
        %L0x7ffffff50ce8[42],%L0x7ffffff50cf0[42],%L0x7ffffff50cf8[42]]*X3**2+
poly z [%L0x7ffffff50ca0[58],%L0x7ffffff50ca8[58],%L0x7ffffff50cb0[58],
        %L0x7ffffff50cb8[58],%L0x7ffffff50cc0[58],%L0x7ffffff50cc8[58],
        %L0x7ffffff50cd0[58],%L0x7ffffff50cd8[58],%L0x7ffffff50ce0[58],
        %L0x7ffffff50ce8[58],%L0x7ffffff50cf0[58],%L0x7ffffff50cf8[58]]*X3**3
 /\
F3b =
poly z [%L0x7ffffff50ca0[11],%L0x7ffffff50ca8[11],%L0x7ffffff50cb0[11],
        %L0x7ffffff50cb8[11],%L0x7ffffff50cc0[11],%L0x7ffffff50cc8[11],
        %L0x7ffffff50cd0[11],%L0x7ffffff50cd8[11],%L0x7ffffff50ce0[11],
        %L0x7ffffff50ce8[11],%L0x7ffffff50cf0[11],%L0x7ffffff50cf8[11]]*X3**0+
poly z [%L0x7ffffff50ca0[27],%L0x7ffffff50ca8[27],%L0x7ffffff50cb0[27],
        %L0x7ffffff50cb8[27],%L0x7ffffff50cc0[27],%L0x7ffffff50cc8[27],
        %L0x7ffffff50cd0[27],%L0x7ffffff50cd8[27],%L0x7ffffff50ce0[27],
        %L0x7ffffff50ce8[27],%L0x7ffffff50cf0[27],%L0x7ffffff50cf8[27]]*X3**1+
poly z [%L0x7ffffff50ca0[43],%L0x7ffffff50ca8[43],%L0x7ffffff50cb0[43],
        %L0x7ffffff50cb8[43],%L0x7ffffff50cc0[43],%L0x7ffffff50cc8[43],
        %L0x7ffffff50cd0[43],%L0x7ffffff50cd8[43],%L0x7ffffff50ce0[43],
        %L0x7ffffff50ce8[43],%L0x7ffffff50cf0[43],%L0x7ffffff50cf8[43]]*X3**2+
poly z [%L0x7ffffff50ca0[59],%L0x7ffffff50ca8[59],%L0x7ffffff50cb0[59],
        %L0x7ffffff50cb8[59],%L0x7ffffff50cc0[59],%L0x7ffffff50cc8[59],
        %L0x7ffffff50cd0[59],%L0x7ffffff50cd8[59],%L0x7ffffff50ce0[59],
        %L0x7ffffff50ce8[59],%L0x7ffffff50cf0[59],%L0x7ffffff50cf8[59]]*X3**3
 /\
F3c =
poly z [%L0x7ffffff50ca0[12],%L0x7ffffff50ca8[12],%L0x7ffffff50cb0[12],
        %L0x7ffffff50cb8[12],%L0x7ffffff50cc0[12],%L0x7ffffff50cc8[12],
        %L0x7ffffff50cd0[12],%L0x7ffffff50cd8[12],%L0x7ffffff50ce0[12],
        %L0x7ffffff50ce8[12],%L0x7ffffff50cf0[12],%L0x7ffffff50cf8[12]]*X3**0+
poly z [%L0x7ffffff50ca0[28],%L0x7ffffff50ca8[28],%L0x7ffffff50cb0[28],
        %L0x7ffffff50cb8[28],%L0x7ffffff50cc0[28],%L0x7ffffff50cc8[28],
        %L0x7ffffff50cd0[28],%L0x7ffffff50cd8[28],%L0x7ffffff50ce0[28],
        %L0x7ffffff50ce8[28],%L0x7ffffff50cf0[28],%L0x7ffffff50cf8[28]]*X3**1+
poly z [%L0x7ffffff50ca0[44],%L0x7ffffff50ca8[44],%L0x7ffffff50cb0[44],
        %L0x7ffffff50cb8[44],%L0x7ffffff50cc0[44],%L0x7ffffff50cc8[44],
        %L0x7ffffff50cd0[44],%L0x7ffffff50cd8[44],%L0x7ffffff50ce0[44],
        %L0x7ffffff50ce8[44],%L0x7ffffff50cf0[44],%L0x7ffffff50cf8[44]]*X3**2+
poly z [%L0x7ffffff50ca0[60],%L0x7ffffff50ca8[60],%L0x7ffffff50cb0[60],
        %L0x7ffffff50cb8[60],%L0x7ffffff50cc0[60],%L0x7ffffff50cc8[60],
        %L0x7ffffff50cd0[60],%L0x7ffffff50cd8[60],%L0x7ffffff50ce0[60],
        %L0x7ffffff50ce8[60],%L0x7ffffff50cf0[60],%L0x7ffffff50cf8[60]]*X3**3
 /\
F3d =
poly z [%L0x7ffffff50ca0[13],%L0x7ffffff50ca8[13],%L0x7ffffff50cb0[13],
        %L0x7ffffff50cb8[13],%L0x7ffffff50cc0[13],%L0x7ffffff50cc8[13],
        %L0x7ffffff50cd0[13],%L0x7ffffff50cd8[13],%L0x7ffffff50ce0[13],
        %L0x7ffffff50ce8[13],%L0x7ffffff50cf0[13],%L0x7ffffff50cf8[13]]*X3**0+
poly z [%L0x7ffffff50ca0[29],%L0x7ffffff50ca8[29],%L0x7ffffff50cb0[29],
        %L0x7ffffff50cb8[29],%L0x7ffffff50cc0[29],%L0x7ffffff50cc8[29],
        %L0x7ffffff50cd0[29],%L0x7ffffff50cd8[29],%L0x7ffffff50ce0[29],
        %L0x7ffffff50ce8[29],%L0x7ffffff50cf0[29],%L0x7ffffff50cf8[29]]*X3**1+
poly z [%L0x7ffffff50ca0[45],%L0x7ffffff50ca8[45],%L0x7ffffff50cb0[45],
        %L0x7ffffff50cb8[45],%L0x7ffffff50cc0[45],%L0x7ffffff50cc8[45],
        %L0x7ffffff50cd0[45],%L0x7ffffff50cd8[45],%L0x7ffffff50ce0[45],
        %L0x7ffffff50ce8[45],%L0x7ffffff50cf0[45],%L0x7ffffff50cf8[45]]*X3**2+
poly z [%L0x7ffffff50ca0[61],%L0x7ffffff50ca8[61],%L0x7ffffff50cb0[61],
        %L0x7ffffff50cb8[61],%L0x7ffffff50cc0[61],%L0x7ffffff50cc8[61],
        %L0x7ffffff50cd0[61],%L0x7ffffff50cd8[61],%L0x7ffffff50ce0[61],
        %L0x7ffffff50ce8[61],%L0x7ffffff50cf0[61],%L0x7ffffff50cf8[61]]*X3**3
 /\
F3e =
poly z [%L0x7ffffff50ca0[14],%L0x7ffffff50ca8[14],%L0x7ffffff50cb0[14],
        %L0x7ffffff50cb8[14],%L0x7ffffff50cc0[14],%L0x7ffffff50cc8[14],
        %L0x7ffffff50cd0[14],%L0x7ffffff50cd8[14],%L0x7ffffff50ce0[14],
        %L0x7ffffff50ce8[14],%L0x7ffffff50cf0[14],%L0x7ffffff50cf8[14]]*X3**0+
poly z [%L0x7ffffff50ca0[30],%L0x7ffffff50ca8[30],%L0x7ffffff50cb0[30],
        %L0x7ffffff50cb8[30],%L0x7ffffff50cc0[30],%L0x7ffffff50cc8[30],
        %L0x7ffffff50cd0[30],%L0x7ffffff50cd8[30],%L0x7ffffff50ce0[30],
        %L0x7ffffff50ce8[30],%L0x7ffffff50cf0[30],%L0x7ffffff50cf8[30]]*X3**1+
poly z [%L0x7ffffff50ca0[46],%L0x7ffffff50ca8[46],%L0x7ffffff50cb0[46],
        %L0x7ffffff50cb8[46],%L0x7ffffff50cc0[46],%L0x7ffffff50cc8[46],
        %L0x7ffffff50cd0[46],%L0x7ffffff50cd8[46],%L0x7ffffff50ce0[46],
        %L0x7ffffff50ce8[46],%L0x7ffffff50cf0[46],%L0x7ffffff50cf8[46]]*X3**2+
poly z [%L0x7ffffff50ca0[62],%L0x7ffffff50ca8[62],%L0x7ffffff50cb0[62],
        %L0x7ffffff50cb8[62],%L0x7ffffff50cc0[62],%L0x7ffffff50cc8[62],
        %L0x7ffffff50cd0[62],%L0x7ffffff50cd8[62],%L0x7ffffff50ce0[62],
        %L0x7ffffff50ce8[62],%L0x7ffffff50cf0[62],%L0x7ffffff50cf8[62]]*X3**3
 /\
F3f =
poly z [%L0x7ffffff50ca0[15],%L0x7ffffff50ca8[15],%L0x7ffffff50cb0[15],
        %L0x7ffffff50cb8[15],%L0x7ffffff50cc0[15],%L0x7ffffff50cc8[15],
        %L0x7ffffff50cd0[15],%L0x7ffffff50cd8[15],%L0x7ffffff50ce0[15],
        %L0x7ffffff50ce8[15],%L0x7ffffff50cf0[15],%L0x7ffffff50cf8[15]]*X3**0+
poly z [%L0x7ffffff50ca0[31],%L0x7ffffff50ca8[31],%L0x7ffffff50cb0[31],
        %L0x7ffffff50cb8[31],%L0x7ffffff50cc0[31],%L0x7ffffff50cc8[31],
        %L0x7ffffff50cd0[31],%L0x7ffffff50cd8[31],%L0x7ffffff50ce0[31],
        %L0x7ffffff50ce8[31],%L0x7ffffff50cf0[31],%L0x7ffffff50cf8[31]]*X3**1+
poly z [%L0x7ffffff50ca0[47],%L0x7ffffff50ca8[47],%L0x7ffffff50cb0[47],
        %L0x7ffffff50cb8[47],%L0x7ffffff50cc0[47],%L0x7ffffff50cc8[47],
        %L0x7ffffff50cd0[47],%L0x7ffffff50cd8[47],%L0x7ffffff50ce0[47],
        %L0x7ffffff50ce8[47],%L0x7ffffff50cf0[47],%L0x7ffffff50cf8[47]]*X3**2+
poly z [%L0x7ffffff50ca0[63],%L0x7ffffff50ca8[63],%L0x7ffffff50cb0[63],
        %L0x7ffffff50cb8[63],%L0x7ffffff50cc0[63],%L0x7ffffff50cc8[63],
        %L0x7ffffff50cd0[63],%L0x7ffffff50cd8[63],%L0x7ffffff50ce0[63],
        %L0x7ffffff50ce8[63],%L0x7ffffff50cf0[63],%L0x7ffffff50cf8[63]]*X3**3
&& true;

(* 6 *)
cut eqmod G20 (F30+Y2*F38) [2, z**12+z**3+1] /\
    eqmod G21 (F31+Y2*F39) [2, z**12+z**3+1] /\
    eqmod G22 (F32+Y2*F3a) [2, z**12+z**3+1] /\
    eqmod G23 (F33+Y2*F3b) [2, z**12+z**3+1] /\
    eqmod G24 (F34+Y2*F3c) [2, z**12+z**3+1] /\
    eqmod G25 (F35+Y2*F3d) [2, z**12+z**3+1] /\
    eqmod G26 (F36+Y2*F3e) [2, z**12+z**3+1] /\
    eqmod G27 (F37+Y2*F3f) [2, z**12+z**3+1] /\
F30 =
poly z [%L0x7ffffff50ca0[0],%L0x7ffffff50ca8[0],%L0x7ffffff50cb0[0],
        %L0x7ffffff50cb8[0],%L0x7ffffff50cc0[0],%L0x7ffffff50cc8[0],
        %L0x7ffffff50cd0[0],%L0x7ffffff50cd8[0],%L0x7ffffff50ce0[0],
        %L0x7ffffff50ce8[0],%L0x7ffffff50cf0[0],%L0x7ffffff50cf8[0]]*X3**0+
poly z [%L0x7ffffff50ca0[16],%L0x7ffffff50ca8[16],%L0x7ffffff50cb0[16],
        %L0x7ffffff50cb8[16],%L0x7ffffff50cc0[16],%L0x7ffffff50cc8[16],
        %L0x7ffffff50cd0[16],%L0x7ffffff50cd8[16],%L0x7ffffff50ce0[16],
        %L0x7ffffff50ce8[16],%L0x7ffffff50cf0[16],%L0x7ffffff50cf8[16]]*X3**1+
poly z [%L0x7ffffff50ca0[32],%L0x7ffffff50ca8[32],%L0x7ffffff50cb0[32],
        %L0x7ffffff50cb8[32],%L0x7ffffff50cc0[32],%L0x7ffffff50cc8[32],
        %L0x7ffffff50cd0[32],%L0x7ffffff50cd8[32],%L0x7ffffff50ce0[32],
        %L0x7ffffff50ce8[32],%L0x7ffffff50cf0[32],%L0x7ffffff50cf8[32]]*X3**2+
poly z [%L0x7ffffff50ca0[48],%L0x7ffffff50ca8[48],%L0x7ffffff50cb0[48],
        %L0x7ffffff50cb8[48],%L0x7ffffff50cc0[48],%L0x7ffffff50cc8[48],
        %L0x7ffffff50cd0[48],%L0x7ffffff50cd8[48],%L0x7ffffff50ce0[48],
        %L0x7ffffff50ce8[48],%L0x7ffffff50cf0[48],%L0x7ffffff50cf8[48]]*X3**3
 /\
F31 =
poly z [%L0x7ffffff50ca0[1],%L0x7ffffff50ca8[1],%L0x7ffffff50cb0[1],
        %L0x7ffffff50cb8[1],%L0x7ffffff50cc0[1],%L0x7ffffff50cc8[1],
        %L0x7ffffff50cd0[1],%L0x7ffffff50cd8[1],%L0x7ffffff50ce0[1],
        %L0x7ffffff50ce8[1],%L0x7ffffff50cf0[1],%L0x7ffffff50cf8[1]]*X3**0+
poly z [%L0x7ffffff50ca0[17],%L0x7ffffff50ca8[17],%L0x7ffffff50cb0[17],
        %L0x7ffffff50cb8[17],%L0x7ffffff50cc0[17],%L0x7ffffff50cc8[17],
        %L0x7ffffff50cd0[17],%L0x7ffffff50cd8[17],%L0x7ffffff50ce0[17],
        %L0x7ffffff50ce8[17],%L0x7ffffff50cf0[17],%L0x7ffffff50cf8[17]]*X3**1+
poly z [%L0x7ffffff50ca0[33],%L0x7ffffff50ca8[33],%L0x7ffffff50cb0[33],
        %L0x7ffffff50cb8[33],%L0x7ffffff50cc0[33],%L0x7ffffff50cc8[33],
        %L0x7ffffff50cd0[33],%L0x7ffffff50cd8[33],%L0x7ffffff50ce0[33],
        %L0x7ffffff50ce8[33],%L0x7ffffff50cf0[33],%L0x7ffffff50cf8[33]]*X3**2+
poly z [%L0x7ffffff50ca0[49],%L0x7ffffff50ca8[49],%L0x7ffffff50cb0[49],
        %L0x7ffffff50cb8[49],%L0x7ffffff50cc0[49],%L0x7ffffff50cc8[49],
        %L0x7ffffff50cd0[49],%L0x7ffffff50cd8[49],%L0x7ffffff50ce0[49],
        %L0x7ffffff50ce8[49],%L0x7ffffff50cf0[49],%L0x7ffffff50cf8[49]]*X3**3
 /\
F32 =
poly z [%L0x7ffffff50ca0[2],%L0x7ffffff50ca8[2],%L0x7ffffff50cb0[2],
        %L0x7ffffff50cb8[2],%L0x7ffffff50cc0[2],%L0x7ffffff50cc8[2],
        %L0x7ffffff50cd0[2],%L0x7ffffff50cd8[2],%L0x7ffffff50ce0[2],
        %L0x7ffffff50ce8[2],%L0x7ffffff50cf0[2],%L0x7ffffff50cf8[2]]*X3**0+
poly z [%L0x7ffffff50ca0[18],%L0x7ffffff50ca8[18],%L0x7ffffff50cb0[18],
        %L0x7ffffff50cb8[18],%L0x7ffffff50cc0[18],%L0x7ffffff50cc8[18],
        %L0x7ffffff50cd0[18],%L0x7ffffff50cd8[18],%L0x7ffffff50ce0[18],
        %L0x7ffffff50ce8[18],%L0x7ffffff50cf0[18],%L0x7ffffff50cf8[18]]*X3**1+
poly z [%L0x7ffffff50ca0[34],%L0x7ffffff50ca8[34],%L0x7ffffff50cb0[34],
        %L0x7ffffff50cb8[34],%L0x7ffffff50cc0[34],%L0x7ffffff50cc8[34],
        %L0x7ffffff50cd0[34],%L0x7ffffff50cd8[34],%L0x7ffffff50ce0[34],
        %L0x7ffffff50ce8[34],%L0x7ffffff50cf0[34],%L0x7ffffff50cf8[34]]*X3**2+
poly z [%L0x7ffffff50ca0[50],%L0x7ffffff50ca8[50],%L0x7ffffff50cb0[50],
        %L0x7ffffff50cb8[50],%L0x7ffffff50cc0[50],%L0x7ffffff50cc8[50],
        %L0x7ffffff50cd0[50],%L0x7ffffff50cd8[50],%L0x7ffffff50ce0[50],
        %L0x7ffffff50ce8[50],%L0x7ffffff50cf0[50],%L0x7ffffff50cf8[50]]*X3**3
 /\
F33 =
poly z [%L0x7ffffff50ca0[3],%L0x7ffffff50ca8[3],%L0x7ffffff50cb0[3],
        %L0x7ffffff50cb8[3],%L0x7ffffff50cc0[3],%L0x7ffffff50cc8[3],
        %L0x7ffffff50cd0[3],%L0x7ffffff50cd8[3],%L0x7ffffff50ce0[3],
        %L0x7ffffff50ce8[3],%L0x7ffffff50cf0[3],%L0x7ffffff50cf8[3]]*X3**0+
poly z [%L0x7ffffff50ca0[19],%L0x7ffffff50ca8[19],%L0x7ffffff50cb0[19],
        %L0x7ffffff50cb8[19],%L0x7ffffff50cc0[19],%L0x7ffffff50cc8[19],
        %L0x7ffffff50cd0[19],%L0x7ffffff50cd8[19],%L0x7ffffff50ce0[19],
        %L0x7ffffff50ce8[19],%L0x7ffffff50cf0[19],%L0x7ffffff50cf8[19]]*X3**1+
poly z [%L0x7ffffff50ca0[35],%L0x7ffffff50ca8[35],%L0x7ffffff50cb0[35],
        %L0x7ffffff50cb8[35],%L0x7ffffff50cc0[35],%L0x7ffffff50cc8[35],
        %L0x7ffffff50cd0[35],%L0x7ffffff50cd8[35],%L0x7ffffff50ce0[35],
        %L0x7ffffff50ce8[35],%L0x7ffffff50cf0[35],%L0x7ffffff50cf8[35]]*X3**2+
poly z [%L0x7ffffff50ca0[51],%L0x7ffffff50ca8[51],%L0x7ffffff50cb0[51],
        %L0x7ffffff50cb8[51],%L0x7ffffff50cc0[51],%L0x7ffffff50cc8[51],
        %L0x7ffffff50cd0[51],%L0x7ffffff50cd8[51],%L0x7ffffff50ce0[51],
        %L0x7ffffff50ce8[51],%L0x7ffffff50cf0[51],%L0x7ffffff50cf8[51]]*X3**3
 /\
F34 =
poly z [%L0x7ffffff50ca0[4],%L0x7ffffff50ca8[4],%L0x7ffffff50cb0[4],
        %L0x7ffffff50cb8[4],%L0x7ffffff50cc0[4],%L0x7ffffff50cc8[4],
        %L0x7ffffff50cd0[4],%L0x7ffffff50cd8[4],%L0x7ffffff50ce0[4],
        %L0x7ffffff50ce8[4],%L0x7ffffff50cf0[4],%L0x7ffffff50cf8[4]]*X3**0+
poly z [%L0x7ffffff50ca0[20],%L0x7ffffff50ca8[20],%L0x7ffffff50cb0[20],
        %L0x7ffffff50cb8[20],%L0x7ffffff50cc0[20],%L0x7ffffff50cc8[20],
        %L0x7ffffff50cd0[20],%L0x7ffffff50cd8[20],%L0x7ffffff50ce0[20],
        %L0x7ffffff50ce8[20],%L0x7ffffff50cf0[20],%L0x7ffffff50cf8[20]]*X3**1+
poly z [%L0x7ffffff50ca0[36],%L0x7ffffff50ca8[36],%L0x7ffffff50cb0[36],
        %L0x7ffffff50cb8[36],%L0x7ffffff50cc0[36],%L0x7ffffff50cc8[36],
        %L0x7ffffff50cd0[36],%L0x7ffffff50cd8[36],%L0x7ffffff50ce0[36],
        %L0x7ffffff50ce8[36],%L0x7ffffff50cf0[36],%L0x7ffffff50cf8[36]]*X3**2+
poly z [%L0x7ffffff50ca0[52],%L0x7ffffff50ca8[52],%L0x7ffffff50cb0[52],
        %L0x7ffffff50cb8[52],%L0x7ffffff50cc0[52],%L0x7ffffff50cc8[52],
        %L0x7ffffff50cd0[52],%L0x7ffffff50cd8[52],%L0x7ffffff50ce0[52],
        %L0x7ffffff50ce8[52],%L0x7ffffff50cf0[52],%L0x7ffffff50cf8[52]]*X3**3
 /\
F35 =
poly z [%L0x7ffffff50ca0[5],%L0x7ffffff50ca8[5],%L0x7ffffff50cb0[5],
        %L0x7ffffff50cb8[5],%L0x7ffffff50cc0[5],%L0x7ffffff50cc8[5],
        %L0x7ffffff50cd0[5],%L0x7ffffff50cd8[5],%L0x7ffffff50ce0[5],
        %L0x7ffffff50ce8[5],%L0x7ffffff50cf0[5],%L0x7ffffff50cf8[5]]*X3**0+
poly z [%L0x7ffffff50ca0[21],%L0x7ffffff50ca8[21],%L0x7ffffff50cb0[21],
        %L0x7ffffff50cb8[21],%L0x7ffffff50cc0[21],%L0x7ffffff50cc8[21],
        %L0x7ffffff50cd0[21],%L0x7ffffff50cd8[21],%L0x7ffffff50ce0[21],
        %L0x7ffffff50ce8[21],%L0x7ffffff50cf0[21],%L0x7ffffff50cf8[21]]*X3**1+
poly z [%L0x7ffffff50ca0[37],%L0x7ffffff50ca8[37],%L0x7ffffff50cb0[37],
        %L0x7ffffff50cb8[37],%L0x7ffffff50cc0[37],%L0x7ffffff50cc8[37],
        %L0x7ffffff50cd0[37],%L0x7ffffff50cd8[37],%L0x7ffffff50ce0[37],
        %L0x7ffffff50ce8[37],%L0x7ffffff50cf0[37],%L0x7ffffff50cf8[37]]*X3**2+
poly z [%L0x7ffffff50ca0[53],%L0x7ffffff50ca8[53],%L0x7ffffff50cb0[53],
        %L0x7ffffff50cb8[53],%L0x7ffffff50cc0[53],%L0x7ffffff50cc8[53],
        %L0x7ffffff50cd0[53],%L0x7ffffff50cd8[53],%L0x7ffffff50ce0[53],
        %L0x7ffffff50ce8[53],%L0x7ffffff50cf0[53],%L0x7ffffff50cf8[53]]*X3**3
 /\
F36 =
poly z [%L0x7ffffff50ca0[6],%L0x7ffffff50ca8[6],%L0x7ffffff50cb0[6],
        %L0x7ffffff50cb8[6],%L0x7ffffff50cc0[6],%L0x7ffffff50cc8[6],
        %L0x7ffffff50cd0[6],%L0x7ffffff50cd8[6],%L0x7ffffff50ce0[6],
        %L0x7ffffff50ce8[6],%L0x7ffffff50cf0[6],%L0x7ffffff50cf8[6]]*X3**0+
poly z [%L0x7ffffff50ca0[22],%L0x7ffffff50ca8[22],%L0x7ffffff50cb0[22],
        %L0x7ffffff50cb8[22],%L0x7ffffff50cc0[22],%L0x7ffffff50cc8[22],
        %L0x7ffffff50cd0[22],%L0x7ffffff50cd8[22],%L0x7ffffff50ce0[22],
        %L0x7ffffff50ce8[22],%L0x7ffffff50cf0[22],%L0x7ffffff50cf8[22]]*X3**1+
poly z [%L0x7ffffff50ca0[38],%L0x7ffffff50ca8[38],%L0x7ffffff50cb0[38],
        %L0x7ffffff50cb8[38],%L0x7ffffff50cc0[38],%L0x7ffffff50cc8[38],
        %L0x7ffffff50cd0[38],%L0x7ffffff50cd8[38],%L0x7ffffff50ce0[38],
        %L0x7ffffff50ce8[38],%L0x7ffffff50cf0[38],%L0x7ffffff50cf8[38]]*X3**2+
poly z [%L0x7ffffff50ca0[54],%L0x7ffffff50ca8[54],%L0x7ffffff50cb0[54],
        %L0x7ffffff50cb8[54],%L0x7ffffff50cc0[54],%L0x7ffffff50cc8[54],
        %L0x7ffffff50cd0[54],%L0x7ffffff50cd8[54],%L0x7ffffff50ce0[54],
        %L0x7ffffff50ce8[54],%L0x7ffffff50cf0[54],%L0x7ffffff50cf8[54]]*X3**3
 /\
F37 =
poly z [%L0x7ffffff50ca0[7],%L0x7ffffff50ca8[7],%L0x7ffffff50cb0[7],
        %L0x7ffffff50cb8[7],%L0x7ffffff50cc0[7],%L0x7ffffff50cc8[7],
        %L0x7ffffff50cd0[7],%L0x7ffffff50cd8[7],%L0x7ffffff50ce0[7],
        %L0x7ffffff50ce8[7],%L0x7ffffff50cf0[7],%L0x7ffffff50cf8[7]]*X3**0+
poly z [%L0x7ffffff50ca0[23],%L0x7ffffff50ca8[23],%L0x7ffffff50cb0[23],
        %L0x7ffffff50cb8[23],%L0x7ffffff50cc0[23],%L0x7ffffff50cc8[23],
        %L0x7ffffff50cd0[23],%L0x7ffffff50cd8[23],%L0x7ffffff50ce0[23],
        %L0x7ffffff50ce8[23],%L0x7ffffff50cf0[23],%L0x7ffffff50cf8[23]]*X3**1+
poly z [%L0x7ffffff50ca0[39],%L0x7ffffff50ca8[39],%L0x7ffffff50cb0[39],
        %L0x7ffffff50cb8[39],%L0x7ffffff50cc0[39],%L0x7ffffff50cc8[39],
        %L0x7ffffff50cd0[39],%L0x7ffffff50cd8[39],%L0x7ffffff50ce0[39],
        %L0x7ffffff50ce8[39],%L0x7ffffff50cf0[39],%L0x7ffffff50cf8[39]]*X3**2+
poly z [%L0x7ffffff50ca0[55],%L0x7ffffff50ca8[55],%L0x7ffffff50cb0[55],
        %L0x7ffffff50cb8[55],%L0x7ffffff50cc0[55],%L0x7ffffff50cc8[55],
        %L0x7ffffff50cd0[55],%L0x7ffffff50cd8[55],%L0x7ffffff50ce0[55],
        %L0x7ffffff50ce8[55],%L0x7ffffff50cf0[55],%L0x7ffffff50cf8[55]]*X3**3
 /\
F38 =
poly z [%L0x7ffffff50ca0[8],%L0x7ffffff50ca8[8],%L0x7ffffff50cb0[8],
        %L0x7ffffff50cb8[8],%L0x7ffffff50cc0[8],%L0x7ffffff50cc8[8],
        %L0x7ffffff50cd0[8],%L0x7ffffff50cd8[8],%L0x7ffffff50ce0[8],
        %L0x7ffffff50ce8[8],%L0x7ffffff50cf0[8],%L0x7ffffff50cf8[8]]*X3**0+
poly z [%L0x7ffffff50ca0[24],%L0x7ffffff50ca8[24],%L0x7ffffff50cb0[24],
        %L0x7ffffff50cb8[24],%L0x7ffffff50cc0[24],%L0x7ffffff50cc8[24],
        %L0x7ffffff50cd0[24],%L0x7ffffff50cd8[24],%L0x7ffffff50ce0[24],
        %L0x7ffffff50ce8[24],%L0x7ffffff50cf0[24],%L0x7ffffff50cf8[24]]*X3**1+
poly z [%L0x7ffffff50ca0[40],%L0x7ffffff50ca8[40],%L0x7ffffff50cb0[40],
        %L0x7ffffff50cb8[40],%L0x7ffffff50cc0[40],%L0x7ffffff50cc8[40],
        %L0x7ffffff50cd0[40],%L0x7ffffff50cd8[40],%L0x7ffffff50ce0[40],
        %L0x7ffffff50ce8[40],%L0x7ffffff50cf0[40],%L0x7ffffff50cf8[40]]*X3**2+
poly z [%L0x7ffffff50ca0[56],%L0x7ffffff50ca8[56],%L0x7ffffff50cb0[56],
        %L0x7ffffff50cb8[56],%L0x7ffffff50cc0[56],%L0x7ffffff50cc8[56],
        %L0x7ffffff50cd0[56],%L0x7ffffff50cd8[56],%L0x7ffffff50ce0[56],
        %L0x7ffffff50ce8[56],%L0x7ffffff50cf0[56],%L0x7ffffff50cf8[56]]*X3**3
 /\
F39 =
poly z [%L0x7ffffff50ca0[9],%L0x7ffffff50ca8[9],%L0x7ffffff50cb0[9],
        %L0x7ffffff50cb8[9],%L0x7ffffff50cc0[9],%L0x7ffffff50cc8[9],
        %L0x7ffffff50cd0[9],%L0x7ffffff50cd8[9],%L0x7ffffff50ce0[9],
        %L0x7ffffff50ce8[9],%L0x7ffffff50cf0[9],%L0x7ffffff50cf8[9]]*X3**0+
poly z [%L0x7ffffff50ca0[25],%L0x7ffffff50ca8[25],%L0x7ffffff50cb0[25],
        %L0x7ffffff50cb8[25],%L0x7ffffff50cc0[25],%L0x7ffffff50cc8[25],
        %L0x7ffffff50cd0[25],%L0x7ffffff50cd8[25],%L0x7ffffff50ce0[25],
        %L0x7ffffff50ce8[25],%L0x7ffffff50cf0[25],%L0x7ffffff50cf8[25]]*X3**1+
poly z [%L0x7ffffff50ca0[41],%L0x7ffffff50ca8[41],%L0x7ffffff50cb0[41],
        %L0x7ffffff50cb8[41],%L0x7ffffff50cc0[41],%L0x7ffffff50cc8[41],
        %L0x7ffffff50cd0[41],%L0x7ffffff50cd8[41],%L0x7ffffff50ce0[41],
        %L0x7ffffff50ce8[41],%L0x7ffffff50cf0[41],%L0x7ffffff50cf8[41]]*X3**2+
poly z [%L0x7ffffff50ca0[57],%L0x7ffffff50ca8[57],%L0x7ffffff50cb0[57],
        %L0x7ffffff50cb8[57],%L0x7ffffff50cc0[57],%L0x7ffffff50cc8[57],
        %L0x7ffffff50cd0[57],%L0x7ffffff50cd8[57],%L0x7ffffff50ce0[57],
        %L0x7ffffff50ce8[57],%L0x7ffffff50cf0[57],%L0x7ffffff50cf8[57]]*X3**3
 /\
F3a =
poly z [%L0x7ffffff50ca0[10],%L0x7ffffff50ca8[10],%L0x7ffffff50cb0[10],
        %L0x7ffffff50cb8[10],%L0x7ffffff50cc0[10],%L0x7ffffff50cc8[10],
        %L0x7ffffff50cd0[10],%L0x7ffffff50cd8[10],%L0x7ffffff50ce0[10],
        %L0x7ffffff50ce8[10],%L0x7ffffff50cf0[10],%L0x7ffffff50cf8[10]]*X3**0+
poly z [%L0x7ffffff50ca0[26],%L0x7ffffff50ca8[26],%L0x7ffffff50cb0[26],
        %L0x7ffffff50cb8[26],%L0x7ffffff50cc0[26],%L0x7ffffff50cc8[26],
        %L0x7ffffff50cd0[26],%L0x7ffffff50cd8[26],%L0x7ffffff50ce0[26],
        %L0x7ffffff50ce8[26],%L0x7ffffff50cf0[26],%L0x7ffffff50cf8[26]]*X3**1+
poly z [%L0x7ffffff50ca0[42],%L0x7ffffff50ca8[42],%L0x7ffffff50cb0[42],
        %L0x7ffffff50cb8[42],%L0x7ffffff50cc0[42],%L0x7ffffff50cc8[42],
        %L0x7ffffff50cd0[42],%L0x7ffffff50cd8[42],%L0x7ffffff50ce0[42],
        %L0x7ffffff50ce8[42],%L0x7ffffff50cf0[42],%L0x7ffffff50cf8[42]]*X3**2+
poly z [%L0x7ffffff50ca0[58],%L0x7ffffff50ca8[58],%L0x7ffffff50cb0[58],
        %L0x7ffffff50cb8[58],%L0x7ffffff50cc0[58],%L0x7ffffff50cc8[58],
        %L0x7ffffff50cd0[58],%L0x7ffffff50cd8[58],%L0x7ffffff50ce0[58],
        %L0x7ffffff50ce8[58],%L0x7ffffff50cf0[58],%L0x7ffffff50cf8[58]]*X3**3
 /\
F3b =
poly z [%L0x7ffffff50ca0[11],%L0x7ffffff50ca8[11],%L0x7ffffff50cb0[11],
        %L0x7ffffff50cb8[11],%L0x7ffffff50cc0[11],%L0x7ffffff50cc8[11],
        %L0x7ffffff50cd0[11],%L0x7ffffff50cd8[11],%L0x7ffffff50ce0[11],
        %L0x7ffffff50ce8[11],%L0x7ffffff50cf0[11],%L0x7ffffff50cf8[11]]*X3**0+
poly z [%L0x7ffffff50ca0[27],%L0x7ffffff50ca8[27],%L0x7ffffff50cb0[27],
        %L0x7ffffff50cb8[27],%L0x7ffffff50cc0[27],%L0x7ffffff50cc8[27],
        %L0x7ffffff50cd0[27],%L0x7ffffff50cd8[27],%L0x7ffffff50ce0[27],
        %L0x7ffffff50ce8[27],%L0x7ffffff50cf0[27],%L0x7ffffff50cf8[27]]*X3**1+
poly z [%L0x7ffffff50ca0[43],%L0x7ffffff50ca8[43],%L0x7ffffff50cb0[43],
        %L0x7ffffff50cb8[43],%L0x7ffffff50cc0[43],%L0x7ffffff50cc8[43],
        %L0x7ffffff50cd0[43],%L0x7ffffff50cd8[43],%L0x7ffffff50ce0[43],
        %L0x7ffffff50ce8[43],%L0x7ffffff50cf0[43],%L0x7ffffff50cf8[43]]*X3**2+
poly z [%L0x7ffffff50ca0[59],%L0x7ffffff50ca8[59],%L0x7ffffff50cb0[59],
        %L0x7ffffff50cb8[59],%L0x7ffffff50cc0[59],%L0x7ffffff50cc8[59],
        %L0x7ffffff50cd0[59],%L0x7ffffff50cd8[59],%L0x7ffffff50ce0[59],
        %L0x7ffffff50ce8[59],%L0x7ffffff50cf0[59],%L0x7ffffff50cf8[59]]*X3**3
 /\
F3c =
poly z [%L0x7ffffff50ca0[12],%L0x7ffffff50ca8[12],%L0x7ffffff50cb0[12],
        %L0x7ffffff50cb8[12],%L0x7ffffff50cc0[12],%L0x7ffffff50cc8[12],
        %L0x7ffffff50cd0[12],%L0x7ffffff50cd8[12],%L0x7ffffff50ce0[12],
        %L0x7ffffff50ce8[12],%L0x7ffffff50cf0[12],%L0x7ffffff50cf8[12]]*X3**0+
poly z [%L0x7ffffff50ca0[28],%L0x7ffffff50ca8[28],%L0x7ffffff50cb0[28],
        %L0x7ffffff50cb8[28],%L0x7ffffff50cc0[28],%L0x7ffffff50cc8[28],
        %L0x7ffffff50cd0[28],%L0x7ffffff50cd8[28],%L0x7ffffff50ce0[28],
        %L0x7ffffff50ce8[28],%L0x7ffffff50cf0[28],%L0x7ffffff50cf8[28]]*X3**1+
poly z [%L0x7ffffff50ca0[44],%L0x7ffffff50ca8[44],%L0x7ffffff50cb0[44],
        %L0x7ffffff50cb8[44],%L0x7ffffff50cc0[44],%L0x7ffffff50cc8[44],
        %L0x7ffffff50cd0[44],%L0x7ffffff50cd8[44],%L0x7ffffff50ce0[44],
        %L0x7ffffff50ce8[44],%L0x7ffffff50cf0[44],%L0x7ffffff50cf8[44]]*X3**2+
poly z [%L0x7ffffff50ca0[60],%L0x7ffffff50ca8[60],%L0x7ffffff50cb0[60],
        %L0x7ffffff50cb8[60],%L0x7ffffff50cc0[60],%L0x7ffffff50cc8[60],
        %L0x7ffffff50cd0[60],%L0x7ffffff50cd8[60],%L0x7ffffff50ce0[60],
        %L0x7ffffff50ce8[60],%L0x7ffffff50cf0[60],%L0x7ffffff50cf8[60]]*X3**3
 /\
F3d =
poly z [%L0x7ffffff50ca0[13],%L0x7ffffff50ca8[13],%L0x7ffffff50cb0[13],
        %L0x7ffffff50cb8[13],%L0x7ffffff50cc0[13],%L0x7ffffff50cc8[13],
        %L0x7ffffff50cd0[13],%L0x7ffffff50cd8[13],%L0x7ffffff50ce0[13],
        %L0x7ffffff50ce8[13],%L0x7ffffff50cf0[13],%L0x7ffffff50cf8[13]]*X3**0+
poly z [%L0x7ffffff50ca0[29],%L0x7ffffff50ca8[29],%L0x7ffffff50cb0[29],
        %L0x7ffffff50cb8[29],%L0x7ffffff50cc0[29],%L0x7ffffff50cc8[29],
        %L0x7ffffff50cd0[29],%L0x7ffffff50cd8[29],%L0x7ffffff50ce0[29],
        %L0x7ffffff50ce8[29],%L0x7ffffff50cf0[29],%L0x7ffffff50cf8[29]]*X3**1+
poly z [%L0x7ffffff50ca0[45],%L0x7ffffff50ca8[45],%L0x7ffffff50cb0[45],
        %L0x7ffffff50cb8[45],%L0x7ffffff50cc0[45],%L0x7ffffff50cc8[45],
        %L0x7ffffff50cd0[45],%L0x7ffffff50cd8[45],%L0x7ffffff50ce0[45],
        %L0x7ffffff50ce8[45],%L0x7ffffff50cf0[45],%L0x7ffffff50cf8[45]]*X3**2+
poly z [%L0x7ffffff50ca0[61],%L0x7ffffff50ca8[61],%L0x7ffffff50cb0[61],
        %L0x7ffffff50cb8[61],%L0x7ffffff50cc0[61],%L0x7ffffff50cc8[61],
        %L0x7ffffff50cd0[61],%L0x7ffffff50cd8[61],%L0x7ffffff50ce0[61],
        %L0x7ffffff50ce8[61],%L0x7ffffff50cf0[61],%L0x7ffffff50cf8[61]]*X3**3
 /\
F3e =
poly z [%L0x7ffffff50ca0[14],%L0x7ffffff50ca8[14],%L0x7ffffff50cb0[14],
        %L0x7ffffff50cb8[14],%L0x7ffffff50cc0[14],%L0x7ffffff50cc8[14],
        %L0x7ffffff50cd0[14],%L0x7ffffff50cd8[14],%L0x7ffffff50ce0[14],
        %L0x7ffffff50ce8[14],%L0x7ffffff50cf0[14],%L0x7ffffff50cf8[14]]*X3**0+
poly z [%L0x7ffffff50ca0[30],%L0x7ffffff50ca8[30],%L0x7ffffff50cb0[30],
        %L0x7ffffff50cb8[30],%L0x7ffffff50cc0[30],%L0x7ffffff50cc8[30],
        %L0x7ffffff50cd0[30],%L0x7ffffff50cd8[30],%L0x7ffffff50ce0[30],
        %L0x7ffffff50ce8[30],%L0x7ffffff50cf0[30],%L0x7ffffff50cf8[30]]*X3**1+
poly z [%L0x7ffffff50ca0[46],%L0x7ffffff50ca8[46],%L0x7ffffff50cb0[46],
        %L0x7ffffff50cb8[46],%L0x7ffffff50cc0[46],%L0x7ffffff50cc8[46],
        %L0x7ffffff50cd0[46],%L0x7ffffff50cd8[46],%L0x7ffffff50ce0[46],
        %L0x7ffffff50ce8[46],%L0x7ffffff50cf0[46],%L0x7ffffff50cf8[46]]*X3**2+
poly z [%L0x7ffffff50ca0[62],%L0x7ffffff50ca8[62],%L0x7ffffff50cb0[62],
        %L0x7ffffff50cb8[62],%L0x7ffffff50cc0[62],%L0x7ffffff50cc8[62],
        %L0x7ffffff50cd0[62],%L0x7ffffff50cd8[62],%L0x7ffffff50ce0[62],
        %L0x7ffffff50ce8[62],%L0x7ffffff50cf0[62],%L0x7ffffff50cf8[62]]*X3**3
 /\
F3f =
poly z [%L0x7ffffff50ca0[15],%L0x7ffffff50ca8[15],%L0x7ffffff50cb0[15],
        %L0x7ffffff50cb8[15],%L0x7ffffff50cc0[15],%L0x7ffffff50cc8[15],
        %L0x7ffffff50cd0[15],%L0x7ffffff50cd8[15],%L0x7ffffff50ce0[15],
        %L0x7ffffff50ce8[15],%L0x7ffffff50cf0[15],%L0x7ffffff50cf8[15]]*X3**0+
poly z [%L0x7ffffff50ca0[31],%L0x7ffffff50ca8[31],%L0x7ffffff50cb0[31],
        %L0x7ffffff50cb8[31],%L0x7ffffff50cc0[31],%L0x7ffffff50cc8[31],
        %L0x7ffffff50cd0[31],%L0x7ffffff50cd8[31],%L0x7ffffff50ce0[31],
        %L0x7ffffff50ce8[31],%L0x7ffffff50cf0[31],%L0x7ffffff50cf8[31]]*X3**1+
poly z [%L0x7ffffff50ca0[47],%L0x7ffffff50ca8[47],%L0x7ffffff50cb0[47],
        %L0x7ffffff50cb8[47],%L0x7ffffff50cc0[47],%L0x7ffffff50cc8[47],
        %L0x7ffffff50cd0[47],%L0x7ffffff50cd8[47],%L0x7ffffff50ce0[47],
        %L0x7ffffff50ce8[47],%L0x7ffffff50cf0[47],%L0x7ffffff50cf8[47]]*X3**2+
poly z [%L0x7ffffff50ca0[63],%L0x7ffffff50ca8[63],%L0x7ffffff50cb0[63],
        %L0x7ffffff50cb8[63],%L0x7ffffff50cc0[63],%L0x7ffffff50cc8[63],
        %L0x7ffffff50cd0[63],%L0x7ffffff50cd8[63],%L0x7ffffff50ce0[63],
        %L0x7ffffff50ce8[63],%L0x7ffffff50cf0[63],%L0x7ffffff50cf8[63]]*X3**3
 && true;



(* mov    0x10(%rsp),%rcx                          #! EA = L0x7ffffff50990; Value = 0x0000000000000003; PC = 0x555555582d58 *)
mov %rcx %L0x7ffffff50990;
(* mov    0x8(%rsp),%rax                           #! EA = L0x7ffffff50988; Value = 0x00007ffffff509a0; PC = 0x555555582d5d *)
mov %rax %L0x7ffffff50988;
(* mov    0x18(%rsp),%rdi                          #! EA = L0x7ffffff50998; Value = 0x00007ffffff50ca0; PC = 0x555555582d62 *)
mov %rdi %L0x7ffffff50998;
(* lea    (%rcx,%rcx,2),%rdx                       #! PC = 0x555555582d67 *)
(* lea \(rcx,rcx,2), rdx *)
nop;
(* shl    $0x5,%rdx                                #! PC = 0x555555582d6b *)
(* shl $0x5, rdx *)
nop;
(* mov    %rdi,%rsi                                #! PC = 0x555555582d6f *)
mov %rsi %rdi;
(* add    %rax,%rdx                                #! PC = 0x555555582d72 *)
(* add rax, rdx *)
nop;
(* #call   0x55555557c600 <_PQCLEAN_MCELIECE348864_AVX2_vec_mul_asm>#! PC = 0x555555582d75 *)
#call   0x55555557c600 <_PQCLEAN_MCELIECE348864_AVX2_vec_mul_asm>#! 0x555555582d75 = 0x555555582d75;
(* #! -> SP = 0x7ffffff50978 *)
#! 0x7ffffff50978 = 0x7ffffff50978;
(* mov    %rsp,%r11                                #! PC = 0x55555557c600 *)
(* mov rsp, r11 *)
nop;
(* and    $0x1f,%r11                               #! PC = 0x55555557c603 *)
(* and $0x1f, r11 *)
nop;
(* add    $0x2a0,%r11                              #! PC = 0x55555557c607 *)
(* add 0x2a0, r11 *)
nop;
(* sub    %r11,%rsp                                #! PC = 0x55555557c60e *)
(* sub r11, rsp *)
nop;
(* mov    %r11,0x260(%rsp)                         #! EA = L0x7ffffff50920; PC = 0x55555557c611 *)
mov %L0x7ffffff50920 %r11;
(* mov    %r12,0x268(%rsp)                         #! EA = L0x7ffffff50928; PC = 0x55555557c619 *)
mov %L0x7ffffff50928 %r12;
(* mov    %r13,0x270(%rsp)                         #! EA = L0x7ffffff50930; PC = 0x55555557c621 *)
mov %L0x7ffffff50930 %r13;
(* mov    %r14,0x278(%rsp)                         #! EA = L0x7ffffff50938; PC = 0x55555557c629 *)
mov %L0x7ffffff50938 %r14;
(* mov    %r15,0x280(%rsp)                         #! EA = L0x7ffffff50940; PC = 0x55555557c631 *)
mov %L0x7ffffff50940 %r15;
(* mov    %rbx,0x288(%rsp)                         #! EA = L0x7ffffff50948; PC = 0x55555557c639 *)
mov %L0x7ffffff50948 %rbx;
(* lea    (%rsp),%rcx                              #! PC = 0x55555557c641 *)
(* lea (rsp), rcx *)
nop;

mov %ina0 %L0x7ffffff50ca0; mov %ina1 %L0x7ffffff50ca8;
mov %ina2 %L0x7ffffff50cb0; mov %ina3 %L0x7ffffff50cb8;
mov %ina4 %L0x7ffffff50cc0; mov %ina5 %L0x7ffffff50cc8;
mov %ina6 %L0x7ffffff50cd0; mov %ina7 %L0x7ffffff50cd8;
mov %ina8 %L0x7ffffff50ce0; mov %ina9 %L0x7ffffff50ce8;
mov %inaa %L0x7ffffff50cf0; mov %inab %L0x7ffffff50cf8;

mov %inb0 %L0x7ffffff50ac0; mov %inb1 %L0x7ffffff50ac8;
mov %inb2 %L0x7ffffff50ad0; mov %inb3 %L0x7ffffff50ad8;
mov %inb4 %L0x7ffffff50ae0; mov %inb5 %L0x7ffffff50ae8;
mov %inb6 %L0x7ffffff50af0; mov %inb7 %L0x7ffffff50af8;
mov %inb8 %L0x7ffffff50b00; mov %inb9 %L0x7ffffff50b08;
mov %inba %L0x7ffffff50b10; mov %inbb %L0x7ffffff50b18;

call vec_mul_asm (z,
%ina0,%ina1,%ina2,%ina3,%ina4,%ina5,%ina6,%ina7,%ina8,%ina9,%inaa,%inab,
%inb0,%inb1,%inb2,%inb3,%inb4,%inb5,%inb6,%inb7,%inb8,%inb9,%inba,%inbb
(*
%L0x7ffffff50ca0,%L0x7ffffff50ca8,%L0x7ffffff50cb0,%L0x7ffffff50cb8,
%L0x7ffffff50cc0,%L0x7ffffff50cc8,%L0x7ffffff50cd0,%L0x7ffffff50cd8,
%L0x7ffffff50ce0,%L0x7ffffff50ce8,%L0x7ffffff50cf0,%L0x7ffffff50cf8,
%L0x7ffffff50ac0,%L0x7ffffff50ac8,%L0x7ffffff50ad0,%L0x7ffffff50ad8,
%L0x7ffffff50ae0,%L0x7ffffff50ae8,%L0x7ffffff50af0,%L0x7ffffff50af8,
%L0x7ffffff50b00,%L0x7ffffff50b08,%L0x7ffffff50b10,%L0x7ffffff50b18
*)
,
%L0x7ffffff50ca0,%L0x7ffffff50ca8,%L0x7ffffff50cb0,%L0x7ffffff50cb8,
%L0x7ffffff50cc0,%L0x7ffffff50cc8,%L0x7ffffff50cd0,%L0x7ffffff50cd8,
%L0x7ffffff50ce0,%L0x7ffffff50ce8,%L0x7ffffff50cf0,%L0x7ffffff50cf8);

(* mov    0x260(%rsp),%r11                         #! EA = L0x7ffffff50920; Value = 0x00000000000002b8; PC = 0x55555557c97c *)
mov %r11 %L0x7ffffff50920;
(* mov    0x268(%rsp),%r12                         #! EA = L0x7ffffff50928; Value = 0x00007ffffff50d00; PC = 0x55555557c984 *)
mov %r12 %L0x7ffffff50928;
(* mov    0x270(%rsp),%r13                         #! EA = L0x7ffffff50930; Value = 0x0000ff000000ff00; PC = 0x55555557c98c *)
mov %r13 %L0x7ffffff50930;
(* mov    0x278(%rsp),%r14                         #! EA = L0x7ffffff50938; Value = 0x00ff000000ff0000; PC = 0x55555557c994 *)
mov %r14 %L0x7ffffff50938;
(* mov    0x280(%rsp),%r15                         #! EA = L0x7ffffff50940; Value = 0x4444444444444444; PC = 0x55555557c99c *)
mov %r15 %L0x7ffffff50940;
(* mov    0x288(%rsp),%rbx                         #! EA = L0x7ffffff50948; Value = 0x0000ffff00000000; PC = 0x55555557c9a4 *)
mov %rbx %L0x7ffffff50948;
(* add    %r11,%rsp                                #! PC = 0x55555557c9ac *)
(* add r11, rsp *)
nop;
(* #! <- SP = 0x7ffffff50978 *)
#! 0x7ffffff50978 = 0x7ffffff50978;
(* #ret                                            #! PC = 0x55555557c9af *)
#ret                                            #! 0x55555557c9af = 0x55555557c9af;


(**************** twists ****************)



ghost Y3@uint16,G30@uint16,G31@uint16,G32@uint16,G33@uint16,G34@uint16,G35@uint16,G36@uint16,G37@uint16,G38@uint16,G39@uint16,G3a@uint16,G3b@uint16,G3c@uint16,G3d@uint16,G3e@uint16,G3f@uint16:
      (z**7+z**4+z)*Y3 = X3 /\
G30 = poly z [%L0x7ffffff50ca0[0],%L0x7ffffff50ca8[0],%L0x7ffffff50cb0[0],
              %L0x7ffffff50cb8[0],%L0x7ffffff50cc0[0],%L0x7ffffff50cc8[0],
              %L0x7ffffff50cd0[0],%L0x7ffffff50cd8[0],%L0x7ffffff50ce0[0],
              %L0x7ffffff50ce8[0],%L0x7ffffff50cf0[0],%L0x7ffffff50cf8[0]]*Y3**0+
      poly z [%L0x7ffffff50ca0[16],%L0x7ffffff50ca8[16],%L0x7ffffff50cb0[16],
              %L0x7ffffff50cb8[16],%L0x7ffffff50cc0[16],%L0x7ffffff50cc8[16],
              %L0x7ffffff50cd0[16],%L0x7ffffff50cd8[16],%L0x7ffffff50ce0[16],
              %L0x7ffffff50ce8[16],%L0x7ffffff50cf0[16],%L0x7ffffff50cf8[16]]*Y3**1+
      poly z [%L0x7ffffff50ca0[32],%L0x7ffffff50ca8[32],%L0x7ffffff50cb0[32],
              %L0x7ffffff50cb8[32],%L0x7ffffff50cc0[32],%L0x7ffffff50cc8[32],
              %L0x7ffffff50cd0[32],%L0x7ffffff50cd8[32],%L0x7ffffff50ce0[32],
              %L0x7ffffff50ce8[32],%L0x7ffffff50cf0[32],%L0x7ffffff50cf8[32]]*Y3**2+
      poly z [%L0x7ffffff50ca0[48],%L0x7ffffff50ca8[48],%L0x7ffffff50cb0[48],
              %L0x7ffffff50cb8[48],%L0x7ffffff50cc0[48],%L0x7ffffff50cc8[48],
              %L0x7ffffff50cd0[48],%L0x7ffffff50cd8[48],%L0x7ffffff50ce0[48],
              %L0x7ffffff50ce8[48],%L0x7ffffff50cf0[48],%L0x7ffffff50cf8[48]]*Y3**3 /\
G31 = poly z [%L0x7ffffff50ca0[1],%L0x7ffffff50ca8[1],%L0x7ffffff50cb0[1],
              %L0x7ffffff50cb8[1],%L0x7ffffff50cc0[1],%L0x7ffffff50cc8[1],
              %L0x7ffffff50cd0[1],%L0x7ffffff50cd8[1],%L0x7ffffff50ce0[1],
              %L0x7ffffff50ce8[1],%L0x7ffffff50cf0[1],%L0x7ffffff50cf8[1]]*Y3**0+
      poly z [%L0x7ffffff50ca0[17],%L0x7ffffff50ca8[17],%L0x7ffffff50cb0[17],
              %L0x7ffffff50cb8[17],%L0x7ffffff50cc0[17],%L0x7ffffff50cc8[17],
              %L0x7ffffff50cd0[17],%L0x7ffffff50cd8[17],%L0x7ffffff50ce0[17],
              %L0x7ffffff50ce8[17],%L0x7ffffff50cf0[17],%L0x7ffffff50cf8[17]]*Y3**1+
      poly z [%L0x7ffffff50ca0[33],%L0x7ffffff50ca8[33],%L0x7ffffff50cb0[33],
              %L0x7ffffff50cb8[33],%L0x7ffffff50cc0[33],%L0x7ffffff50cc8[33],
              %L0x7ffffff50cd0[33],%L0x7ffffff50cd8[33],%L0x7ffffff50ce0[33],
              %L0x7ffffff50ce8[33],%L0x7ffffff50cf0[33],%L0x7ffffff50cf8[33]]*Y3**2+
      poly z [%L0x7ffffff50ca0[49],%L0x7ffffff50ca8[49],%L0x7ffffff50cb0[49],
              %L0x7ffffff50cb8[49],%L0x7ffffff50cc0[49],%L0x7ffffff50cc8[49],
              %L0x7ffffff50cd0[49],%L0x7ffffff50cd8[49],%L0x7ffffff50ce0[49],
              %L0x7ffffff50ce8[49],%L0x7ffffff50cf0[49],%L0x7ffffff50cf8[49]]*Y3**3 /\
G32 = poly z [%L0x7ffffff50ca0[2],%L0x7ffffff50ca8[2],%L0x7ffffff50cb0[2],
              %L0x7ffffff50cb8[2],%L0x7ffffff50cc0[2],%L0x7ffffff50cc8[2],
              %L0x7ffffff50cd0[2],%L0x7ffffff50cd8[2],%L0x7ffffff50ce0[2],
              %L0x7ffffff50ce8[2],%L0x7ffffff50cf0[2],%L0x7ffffff50cf8[2]]*Y3**0+
      poly z [%L0x7ffffff50ca0[18],%L0x7ffffff50ca8[18],%L0x7ffffff50cb0[18],
              %L0x7ffffff50cb8[18],%L0x7ffffff50cc0[18],%L0x7ffffff50cc8[18],
              %L0x7ffffff50cd0[18],%L0x7ffffff50cd8[18],%L0x7ffffff50ce0[18],
              %L0x7ffffff50ce8[18],%L0x7ffffff50cf0[18],%L0x7ffffff50cf8[18]]*Y3**1+
      poly z [%L0x7ffffff50ca0[34],%L0x7ffffff50ca8[34],%L0x7ffffff50cb0[34],
              %L0x7ffffff50cb8[34],%L0x7ffffff50cc0[34],%L0x7ffffff50cc8[34],
              %L0x7ffffff50cd0[34],%L0x7ffffff50cd8[34],%L0x7ffffff50ce0[34],
              %L0x7ffffff50ce8[34],%L0x7ffffff50cf0[34],%L0x7ffffff50cf8[34]]*Y3**2+
      poly z [%L0x7ffffff50ca0[50],%L0x7ffffff50ca8[50],%L0x7ffffff50cb0[50],
              %L0x7ffffff50cb8[50],%L0x7ffffff50cc0[50],%L0x7ffffff50cc8[50],
              %L0x7ffffff50cd0[50],%L0x7ffffff50cd8[50],%L0x7ffffff50ce0[50],
              %L0x7ffffff50ce8[50],%L0x7ffffff50cf0[50],%L0x7ffffff50cf8[50]]*Y3**3 /\
G33 = poly z [%L0x7ffffff50ca0[3],%L0x7ffffff50ca8[3],%L0x7ffffff50cb0[3],
              %L0x7ffffff50cb8[3],%L0x7ffffff50cc0[3],%L0x7ffffff50cc8[3],
              %L0x7ffffff50cd0[3],%L0x7ffffff50cd8[3],%L0x7ffffff50ce0[3],
              %L0x7ffffff50ce8[3],%L0x7ffffff50cf0[3],%L0x7ffffff50cf8[3]]*Y3**0+
      poly z [%L0x7ffffff50ca0[19],%L0x7ffffff50ca8[19],%L0x7ffffff50cb0[19],
              %L0x7ffffff50cb8[19],%L0x7ffffff50cc0[19],%L0x7ffffff50cc8[19],
              %L0x7ffffff50cd0[19],%L0x7ffffff50cd8[19],%L0x7ffffff50ce0[19],
              %L0x7ffffff50ce8[19],%L0x7ffffff50cf0[19],%L0x7ffffff50cf8[19]]*Y3**1+
      poly z [%L0x7ffffff50ca0[35],%L0x7ffffff50ca8[35],%L0x7ffffff50cb0[35],
              %L0x7ffffff50cb8[35],%L0x7ffffff50cc0[35],%L0x7ffffff50cc8[35],
              %L0x7ffffff50cd0[35],%L0x7ffffff50cd8[35],%L0x7ffffff50ce0[35],
              %L0x7ffffff50ce8[35],%L0x7ffffff50cf0[35],%L0x7ffffff50cf8[35]]*Y3**2+
      poly z [%L0x7ffffff50ca0[51],%L0x7ffffff50ca8[51],%L0x7ffffff50cb0[51],
              %L0x7ffffff50cb8[51],%L0x7ffffff50cc0[51],%L0x7ffffff50cc8[51],
              %L0x7ffffff50cd0[51],%L0x7ffffff50cd8[51],%L0x7ffffff50ce0[51],
              %L0x7ffffff50ce8[51],%L0x7ffffff50cf0[51],%L0x7ffffff50cf8[51]]*Y3**3 /\
G34 = poly z [%L0x7ffffff50ca0[4],%L0x7ffffff50ca8[4],%L0x7ffffff50cb0[4],
              %L0x7ffffff50cb8[4],%L0x7ffffff50cc0[4],%L0x7ffffff50cc8[4],
              %L0x7ffffff50cd0[4],%L0x7ffffff50cd8[4],%L0x7ffffff50ce0[4],
              %L0x7ffffff50ce8[4],%L0x7ffffff50cf0[4],%L0x7ffffff50cf8[4]]*Y3**0+
      poly z [%L0x7ffffff50ca0[20],%L0x7ffffff50ca8[20],%L0x7ffffff50cb0[20],
              %L0x7ffffff50cb8[20],%L0x7ffffff50cc0[20],%L0x7ffffff50cc8[20],
              %L0x7ffffff50cd0[20],%L0x7ffffff50cd8[20],%L0x7ffffff50ce0[20],
              %L0x7ffffff50ce8[20],%L0x7ffffff50cf0[20],%L0x7ffffff50cf8[20]]*Y3**1+
      poly z [%L0x7ffffff50ca0[36],%L0x7ffffff50ca8[36],%L0x7ffffff50cb0[36],
              %L0x7ffffff50cb8[36],%L0x7ffffff50cc0[36],%L0x7ffffff50cc8[36],
              %L0x7ffffff50cd0[36],%L0x7ffffff50cd8[36],%L0x7ffffff50ce0[36],
              %L0x7ffffff50ce8[36],%L0x7ffffff50cf0[36],%L0x7ffffff50cf8[36]]*Y3**2+
      poly z [%L0x7ffffff50ca0[52],%L0x7ffffff50ca8[52],%L0x7ffffff50cb0[52],
              %L0x7ffffff50cb8[52],%L0x7ffffff50cc0[52],%L0x7ffffff50cc8[52],
              %L0x7ffffff50cd0[52],%L0x7ffffff50cd8[52],%L0x7ffffff50ce0[52],
              %L0x7ffffff50ce8[52],%L0x7ffffff50cf0[52],%L0x7ffffff50cf8[52]]*Y3**3 /\
G35 = poly z [%L0x7ffffff50ca0[5],%L0x7ffffff50ca8[5],%L0x7ffffff50cb0[5],
              %L0x7ffffff50cb8[5],%L0x7ffffff50cc0[5],%L0x7ffffff50cc8[5],
              %L0x7ffffff50cd0[5],%L0x7ffffff50cd8[5],%L0x7ffffff50ce0[5],
              %L0x7ffffff50ce8[5],%L0x7ffffff50cf0[5],%L0x7ffffff50cf8[5]]*Y3**0+
      poly z [%L0x7ffffff50ca0[21],%L0x7ffffff50ca8[21],%L0x7ffffff50cb0[21],
              %L0x7ffffff50cb8[21],%L0x7ffffff50cc0[21],%L0x7ffffff50cc8[21],
              %L0x7ffffff50cd0[21],%L0x7ffffff50cd8[21],%L0x7ffffff50ce0[21],
              %L0x7ffffff50ce8[21],%L0x7ffffff50cf0[21],%L0x7ffffff50cf8[21]]*Y3**1+
      poly z [%L0x7ffffff50ca0[37],%L0x7ffffff50ca8[37],%L0x7ffffff50cb0[37],
              %L0x7ffffff50cb8[37],%L0x7ffffff50cc0[37],%L0x7ffffff50cc8[37],
              %L0x7ffffff50cd0[37],%L0x7ffffff50cd8[37],%L0x7ffffff50ce0[37],
              %L0x7ffffff50ce8[37],%L0x7ffffff50cf0[37],%L0x7ffffff50cf8[37]]*Y3**2+
      poly z [%L0x7ffffff50ca0[53],%L0x7ffffff50ca8[53],%L0x7ffffff50cb0[53],
              %L0x7ffffff50cb8[53],%L0x7ffffff50cc0[53],%L0x7ffffff50cc8[53],
              %L0x7ffffff50cd0[53],%L0x7ffffff50cd8[53],%L0x7ffffff50ce0[53],
              %L0x7ffffff50ce8[53],%L0x7ffffff50cf0[53],%L0x7ffffff50cf8[53]]*Y3**3 /\
G36 = poly z [%L0x7ffffff50ca0[6],%L0x7ffffff50ca8[6],%L0x7ffffff50cb0[6],
              %L0x7ffffff50cb8[6],%L0x7ffffff50cc0[6],%L0x7ffffff50cc8[6],
              %L0x7ffffff50cd0[6],%L0x7ffffff50cd8[6],%L0x7ffffff50ce0[6],
              %L0x7ffffff50ce8[6],%L0x7ffffff50cf0[6],%L0x7ffffff50cf8[6]]*Y3**0+
      poly z [%L0x7ffffff50ca0[22],%L0x7ffffff50ca8[22],%L0x7ffffff50cb0[22],
              %L0x7ffffff50cb8[22],%L0x7ffffff50cc0[22],%L0x7ffffff50cc8[22],
              %L0x7ffffff50cd0[22],%L0x7ffffff50cd8[22],%L0x7ffffff50ce0[22],
              %L0x7ffffff50ce8[22],%L0x7ffffff50cf0[22],%L0x7ffffff50cf8[22]]*Y3**1+
      poly z [%L0x7ffffff50ca0[38],%L0x7ffffff50ca8[38],%L0x7ffffff50cb0[38],
              %L0x7ffffff50cb8[38],%L0x7ffffff50cc0[38],%L0x7ffffff50cc8[38],
              %L0x7ffffff50cd0[38],%L0x7ffffff50cd8[38],%L0x7ffffff50ce0[38],
              %L0x7ffffff50ce8[38],%L0x7ffffff50cf0[38],%L0x7ffffff50cf8[38]]*Y3**2+
      poly z [%L0x7ffffff50ca0[54],%L0x7ffffff50ca8[54],%L0x7ffffff50cb0[54],
              %L0x7ffffff50cb8[54],%L0x7ffffff50cc0[54],%L0x7ffffff50cc8[54],
              %L0x7ffffff50cd0[54],%L0x7ffffff50cd8[54],%L0x7ffffff50ce0[54],
              %L0x7ffffff50ce8[54],%L0x7ffffff50cf0[54],%L0x7ffffff50cf8[54]]*Y3**3 /\
G37 = poly z [%L0x7ffffff50ca0[7],%L0x7ffffff50ca8[7],%L0x7ffffff50cb0[7],
              %L0x7ffffff50cb8[7],%L0x7ffffff50cc0[7],%L0x7ffffff50cc8[7],
              %L0x7ffffff50cd0[7],%L0x7ffffff50cd8[7],%L0x7ffffff50ce0[7],
              %L0x7ffffff50ce8[7],%L0x7ffffff50cf0[7],%L0x7ffffff50cf8[7]]*Y3**0+
      poly z [%L0x7ffffff50ca0[23],%L0x7ffffff50ca8[23],%L0x7ffffff50cb0[23],
              %L0x7ffffff50cb8[23],%L0x7ffffff50cc0[23],%L0x7ffffff50cc8[23],
              %L0x7ffffff50cd0[23],%L0x7ffffff50cd8[23],%L0x7ffffff50ce0[23],
              %L0x7ffffff50ce8[23],%L0x7ffffff50cf0[23],%L0x7ffffff50cf8[23]]*Y3**1+
      poly z [%L0x7ffffff50ca0[39],%L0x7ffffff50ca8[39],%L0x7ffffff50cb0[39],
              %L0x7ffffff50cb8[39],%L0x7ffffff50cc0[39],%L0x7ffffff50cc8[39],
              %L0x7ffffff50cd0[39],%L0x7ffffff50cd8[39],%L0x7ffffff50ce0[39],
              %L0x7ffffff50ce8[39],%L0x7ffffff50cf0[39],%L0x7ffffff50cf8[39]]*Y3**2+
      poly z [%L0x7ffffff50ca0[55],%L0x7ffffff50ca8[55],%L0x7ffffff50cb0[55],
              %L0x7ffffff50cb8[55],%L0x7ffffff50cc0[55],%L0x7ffffff50cc8[55],
              %L0x7ffffff50cd0[55],%L0x7ffffff50cd8[55],%L0x7ffffff50ce0[55],
              %L0x7ffffff50ce8[55],%L0x7ffffff50cf0[55],%L0x7ffffff50cf8[55]]*Y3**3 /\
G38 = poly z [%L0x7ffffff50ca0[8],%L0x7ffffff50ca8[8],%L0x7ffffff50cb0[8],
              %L0x7ffffff50cb8[8],%L0x7ffffff50cc0[8],%L0x7ffffff50cc8[8],
              %L0x7ffffff50cd0[8],%L0x7ffffff50cd8[8],%L0x7ffffff50ce0[8],
              %L0x7ffffff50ce8[8],%L0x7ffffff50cf0[8],%L0x7ffffff50cf8[8]]*Y3**0+
      poly z [%L0x7ffffff50ca0[24],%L0x7ffffff50ca8[24],%L0x7ffffff50cb0[24],
              %L0x7ffffff50cb8[24],%L0x7ffffff50cc0[24],%L0x7ffffff50cc8[24],
              %L0x7ffffff50cd0[24],%L0x7ffffff50cd8[24],%L0x7ffffff50ce0[24],
              %L0x7ffffff50ce8[24],%L0x7ffffff50cf0[24],%L0x7ffffff50cf8[24]]*Y3**1+
      poly z [%L0x7ffffff50ca0[40],%L0x7ffffff50ca8[40],%L0x7ffffff50cb0[40],
              %L0x7ffffff50cb8[40],%L0x7ffffff50cc0[40],%L0x7ffffff50cc8[40],
              %L0x7ffffff50cd0[40],%L0x7ffffff50cd8[40],%L0x7ffffff50ce0[40],
              %L0x7ffffff50ce8[40],%L0x7ffffff50cf0[40],%L0x7ffffff50cf8[40]]*Y3**2+
      poly z [%L0x7ffffff50ca0[56],%L0x7ffffff50ca8[56],%L0x7ffffff50cb0[56],
              %L0x7ffffff50cb8[56],%L0x7ffffff50cc0[56],%L0x7ffffff50cc8[56],
              %L0x7ffffff50cd0[56],%L0x7ffffff50cd8[56],%L0x7ffffff50ce0[56],
              %L0x7ffffff50ce8[56],%L0x7ffffff50cf0[56],%L0x7ffffff50cf8[56]]*Y3**3 /\
G39 = poly z [%L0x7ffffff50ca0[9],%L0x7ffffff50ca8[9],%L0x7ffffff50cb0[9],
              %L0x7ffffff50cb8[9],%L0x7ffffff50cc0[9],%L0x7ffffff50cc8[9],
              %L0x7ffffff50cd0[9],%L0x7ffffff50cd8[9],%L0x7ffffff50ce0[9],
              %L0x7ffffff50ce8[9],%L0x7ffffff50cf0[9],%L0x7ffffff50cf8[9]]*Y3**0+
      poly z [%L0x7ffffff50ca0[25],%L0x7ffffff50ca8[25],%L0x7ffffff50cb0[25],
              %L0x7ffffff50cb8[25],%L0x7ffffff50cc0[25],%L0x7ffffff50cc8[25],
              %L0x7ffffff50cd0[25],%L0x7ffffff50cd8[25],%L0x7ffffff50ce0[25],
              %L0x7ffffff50ce8[25],%L0x7ffffff50cf0[25],%L0x7ffffff50cf8[25]]*Y3**1+
      poly z [%L0x7ffffff50ca0[41],%L0x7ffffff50ca8[41],%L0x7ffffff50cb0[41],
              %L0x7ffffff50cb8[41],%L0x7ffffff50cc0[41],%L0x7ffffff50cc8[41],
              %L0x7ffffff50cd0[41],%L0x7ffffff50cd8[41],%L0x7ffffff50ce0[41],
              %L0x7ffffff50ce8[41],%L0x7ffffff50cf0[41],%L0x7ffffff50cf8[41]]*Y3**2+
      poly z [%L0x7ffffff50ca0[57],%L0x7ffffff50ca8[57],%L0x7ffffff50cb0[57],
              %L0x7ffffff50cb8[57],%L0x7ffffff50cc0[57],%L0x7ffffff50cc8[57],
              %L0x7ffffff50cd0[57],%L0x7ffffff50cd8[57],%L0x7ffffff50ce0[57],
              %L0x7ffffff50ce8[57],%L0x7ffffff50cf0[57],%L0x7ffffff50cf8[57]]*Y3**3 /\
G3a = poly z [%L0x7ffffff50ca0[10],%L0x7ffffff50ca8[10],%L0x7ffffff50cb0[10],
              %L0x7ffffff50cb8[10],%L0x7ffffff50cc0[10],%L0x7ffffff50cc8[10],
              %L0x7ffffff50cd0[10],%L0x7ffffff50cd8[10],%L0x7ffffff50ce0[10],
              %L0x7ffffff50ce8[10],%L0x7ffffff50cf0[10],%L0x7ffffff50cf8[10]]*Y3**0+
      poly z [%L0x7ffffff50ca0[26],%L0x7ffffff50ca8[26],%L0x7ffffff50cb0[26],
              %L0x7ffffff50cb8[26],%L0x7ffffff50cc0[26],%L0x7ffffff50cc8[26],
              %L0x7ffffff50cd0[26],%L0x7ffffff50cd8[26],%L0x7ffffff50ce0[26],
              %L0x7ffffff50ce8[26],%L0x7ffffff50cf0[26],%L0x7ffffff50cf8[26]]*Y3**1+
      poly z [%L0x7ffffff50ca0[42],%L0x7ffffff50ca8[42],%L0x7ffffff50cb0[42],
              %L0x7ffffff50cb8[42],%L0x7ffffff50cc0[42],%L0x7ffffff50cc8[42],
              %L0x7ffffff50cd0[42],%L0x7ffffff50cd8[42],%L0x7ffffff50ce0[42],
              %L0x7ffffff50ce8[42],%L0x7ffffff50cf0[42],%L0x7ffffff50cf8[42]]*Y3**2+
      poly z [%L0x7ffffff50ca0[58],%L0x7ffffff50ca8[58],%L0x7ffffff50cb0[58],
              %L0x7ffffff50cb8[58],%L0x7ffffff50cc0[58],%L0x7ffffff50cc8[58],
              %L0x7ffffff50cd0[58],%L0x7ffffff50cd8[58],%L0x7ffffff50ce0[58],
              %L0x7ffffff50ce8[58],%L0x7ffffff50cf0[58],%L0x7ffffff50cf8[58]]*Y3**3 /\
G3b = poly z [%L0x7ffffff50ca0[11],%L0x7ffffff50ca8[11],%L0x7ffffff50cb0[11],
              %L0x7ffffff50cb8[11],%L0x7ffffff50cc0[11],%L0x7ffffff50cc8[11],
              %L0x7ffffff50cd0[11],%L0x7ffffff50cd8[11],%L0x7ffffff50ce0[11],
              %L0x7ffffff50ce8[11],%L0x7ffffff50cf0[11],%L0x7ffffff50cf8[11]]*Y3**0+
      poly z [%L0x7ffffff50ca0[27],%L0x7ffffff50ca8[27],%L0x7ffffff50cb0[27],
              %L0x7ffffff50cb8[27],%L0x7ffffff50cc0[27],%L0x7ffffff50cc8[27],
              %L0x7ffffff50cd0[27],%L0x7ffffff50cd8[27],%L0x7ffffff50ce0[27],
              %L0x7ffffff50ce8[27],%L0x7ffffff50cf0[27],%L0x7ffffff50cf8[27]]*Y3**1+
      poly z [%L0x7ffffff50ca0[43],%L0x7ffffff50ca8[43],%L0x7ffffff50cb0[43],
              %L0x7ffffff50cb8[43],%L0x7ffffff50cc0[43],%L0x7ffffff50cc8[43],
              %L0x7ffffff50cd0[43],%L0x7ffffff50cd8[43],%L0x7ffffff50ce0[43],
              %L0x7ffffff50ce8[43],%L0x7ffffff50cf0[43],%L0x7ffffff50cf8[43]]*Y3**2+
      poly z [%L0x7ffffff50ca0[59],%L0x7ffffff50ca8[59],%L0x7ffffff50cb0[59],
              %L0x7ffffff50cb8[59],%L0x7ffffff50cc0[59],%L0x7ffffff50cc8[59],
              %L0x7ffffff50cd0[59],%L0x7ffffff50cd8[59],%L0x7ffffff50ce0[59],
              %L0x7ffffff50ce8[59],%L0x7ffffff50cf0[59],%L0x7ffffff50cf8[59]]*Y3**3 /\
G3c = poly z [%L0x7ffffff50ca0[12],%L0x7ffffff50ca8[12],%L0x7ffffff50cb0[12],
              %L0x7ffffff50cb8[12],%L0x7ffffff50cc0[12],%L0x7ffffff50cc8[12],
              %L0x7ffffff50cd0[12],%L0x7ffffff50cd8[12],%L0x7ffffff50ce0[12],
              %L0x7ffffff50ce8[12],%L0x7ffffff50cf0[12],%L0x7ffffff50cf8[12]]*Y3**0+
      poly z [%L0x7ffffff50ca0[28],%L0x7ffffff50ca8[28],%L0x7ffffff50cb0[28],
              %L0x7ffffff50cb8[28],%L0x7ffffff50cc0[28],%L0x7ffffff50cc8[28],
              %L0x7ffffff50cd0[28],%L0x7ffffff50cd8[28],%L0x7ffffff50ce0[28],
              %L0x7ffffff50ce8[28],%L0x7ffffff50cf0[28],%L0x7ffffff50cf8[28]]*Y3**1+
      poly z [%L0x7ffffff50ca0[44],%L0x7ffffff50ca8[44],%L0x7ffffff50cb0[44],
              %L0x7ffffff50cb8[44],%L0x7ffffff50cc0[44],%L0x7ffffff50cc8[44],
              %L0x7ffffff50cd0[44],%L0x7ffffff50cd8[44],%L0x7ffffff50ce0[44],
              %L0x7ffffff50ce8[44],%L0x7ffffff50cf0[44],%L0x7ffffff50cf8[44]]*Y3**2+
      poly z [%L0x7ffffff50ca0[60],%L0x7ffffff50ca8[60],%L0x7ffffff50cb0[60],
              %L0x7ffffff50cb8[60],%L0x7ffffff50cc0[60],%L0x7ffffff50cc8[60],
              %L0x7ffffff50cd0[60],%L0x7ffffff50cd8[60],%L0x7ffffff50ce0[60],
              %L0x7ffffff50ce8[60],%L0x7ffffff50cf0[60],%L0x7ffffff50cf8[60]]*Y3**3 /\
G3d = poly z [%L0x7ffffff50ca0[13],%L0x7ffffff50ca8[13],%L0x7ffffff50cb0[13],
              %L0x7ffffff50cb8[13],%L0x7ffffff50cc0[13],%L0x7ffffff50cc8[13],
              %L0x7ffffff50cd0[13],%L0x7ffffff50cd8[13],%L0x7ffffff50ce0[13],
              %L0x7ffffff50ce8[13],%L0x7ffffff50cf0[13],%L0x7ffffff50cf8[13]]*Y3**0+
      poly z [%L0x7ffffff50ca0[29],%L0x7ffffff50ca8[29],%L0x7ffffff50cb0[29],
              %L0x7ffffff50cb8[29],%L0x7ffffff50cc0[29],%L0x7ffffff50cc8[29],
              %L0x7ffffff50cd0[29],%L0x7ffffff50cd8[29],%L0x7ffffff50ce0[29],
              %L0x7ffffff50ce8[29],%L0x7ffffff50cf0[29],%L0x7ffffff50cf8[29]]*Y3**1+
      poly z [%L0x7ffffff50ca0[45],%L0x7ffffff50ca8[45],%L0x7ffffff50cb0[45],
              %L0x7ffffff50cb8[45],%L0x7ffffff50cc0[45],%L0x7ffffff50cc8[45],
              %L0x7ffffff50cd0[45],%L0x7ffffff50cd8[45],%L0x7ffffff50ce0[45],
              %L0x7ffffff50ce8[45],%L0x7ffffff50cf0[45],%L0x7ffffff50cf8[45]]*Y3**2+
      poly z [%L0x7ffffff50ca0[61],%L0x7ffffff50ca8[61],%L0x7ffffff50cb0[61],
              %L0x7ffffff50cb8[61],%L0x7ffffff50cc0[61],%L0x7ffffff50cc8[61],
              %L0x7ffffff50cd0[61],%L0x7ffffff50cd8[61],%L0x7ffffff50ce0[61],
              %L0x7ffffff50ce8[61],%L0x7ffffff50cf0[61],%L0x7ffffff50cf8[61]]*Y3**3 /\
G3e = poly z [%L0x7ffffff50ca0[14],%L0x7ffffff50ca8[14],%L0x7ffffff50cb0[14],
              %L0x7ffffff50cb8[14],%L0x7ffffff50cc0[14],%L0x7ffffff50cc8[14],
              %L0x7ffffff50cd0[14],%L0x7ffffff50cd8[14],%L0x7ffffff50ce0[14],
              %L0x7ffffff50ce8[14],%L0x7ffffff50cf0[14],%L0x7ffffff50cf8[14]]*Y3**0+
      poly z [%L0x7ffffff50ca0[30],%L0x7ffffff50ca8[30],%L0x7ffffff50cb0[30],
              %L0x7ffffff50cb8[30],%L0x7ffffff50cc0[30],%L0x7ffffff50cc8[30],
              %L0x7ffffff50cd0[30],%L0x7ffffff50cd8[30],%L0x7ffffff50ce0[30],
              %L0x7ffffff50ce8[30],%L0x7ffffff50cf0[30],%L0x7ffffff50cf8[30]]*Y3**1+
      poly z [%L0x7ffffff50ca0[46],%L0x7ffffff50ca8[46],%L0x7ffffff50cb0[46],
              %L0x7ffffff50cb8[46],%L0x7ffffff50cc0[46],%L0x7ffffff50cc8[46],
              %L0x7ffffff50cd0[46],%L0x7ffffff50cd8[46],%L0x7ffffff50ce0[46],
              %L0x7ffffff50ce8[46],%L0x7ffffff50cf0[46],%L0x7ffffff50cf8[46]]*Y3**2+
      poly z [%L0x7ffffff50ca0[62],%L0x7ffffff50ca8[62],%L0x7ffffff50cb0[62],
              %L0x7ffffff50cb8[62],%L0x7ffffff50cc0[62],%L0x7ffffff50cc8[62],
              %L0x7ffffff50cd0[62],%L0x7ffffff50cd8[62],%L0x7ffffff50ce0[62],
              %L0x7ffffff50ce8[62],%L0x7ffffff50cf0[62],%L0x7ffffff50cf8[62]]*Y3**3 /\
G3f = poly z [%L0x7ffffff50ca0[15],%L0x7ffffff50ca8[15],%L0x7ffffff50cb0[15],
              %L0x7ffffff50cb8[15],%L0x7ffffff50cc0[15],%L0x7ffffff50cc8[15],
              %L0x7ffffff50cd0[15],%L0x7ffffff50cd8[15],%L0x7ffffff50ce0[15],
              %L0x7ffffff50ce8[15],%L0x7ffffff50cf0[15],%L0x7ffffff50cf8[15]]*Y3**0+
      poly z [%L0x7ffffff50ca0[31],%L0x7ffffff50ca8[31],%L0x7ffffff50cb0[31],
              %L0x7ffffff50cb8[31],%L0x7ffffff50cc0[31],%L0x7ffffff50cc8[31],
              %L0x7ffffff50cd0[31],%L0x7ffffff50cd8[31],%L0x7ffffff50ce0[31],
              %L0x7ffffff50ce8[31],%L0x7ffffff50cf0[31],%L0x7ffffff50cf8[31]]*Y3**1+
      poly z [%L0x7ffffff50ca0[47],%L0x7ffffff50ca8[47],%L0x7ffffff50cb0[47],
              %L0x7ffffff50cb8[47],%L0x7ffffff50cc0[47],%L0x7ffffff50cc8[47],
              %L0x7ffffff50cd0[47],%L0x7ffffff50cd8[47],%L0x7ffffff50ce0[47],
              %L0x7ffffff50ce8[47],%L0x7ffffff50cf0[47],%L0x7ffffff50cf8[47]]*Y3**2+
      poly z [%L0x7ffffff50ca0[63],%L0x7ffffff50ca8[63],%L0x7ffffff50cb0[63],
              %L0x7ffffff50cb8[63],%L0x7ffffff50cc0[63],%L0x7ffffff50cc8[63],
              %L0x7ffffff50cd0[63],%L0x7ffffff50cd8[63],%L0x7ffffff50ce0[63],
              %L0x7ffffff50ce8[63],%L0x7ffffff50cf0[63],%L0x7ffffff50cf8[63]]*Y3**3 
   && true;

(* 7 *)
cut eqmod F30 G30 [2, z**12+z**3+1] /\ eqmod F31 G31 [2, z**12+z**3+1] /\
    eqmod F32 G32 [2, z**12+z**3+1] /\ eqmod F33 G33 [2, z**12+z**3+1] /\
    eqmod F34 G34 [2, z**12+z**3+1] /\ eqmod F35 G35 [2, z**12+z**3+1] /\
    eqmod F36 G36 [2, z**12+z**3+1] /\ eqmod F37 G37 [2, z**12+z**3+1] /\
    eqmod F38 G38 [2, z**12+z**3+1] /\ eqmod F39 G39 [2, z**12+z**3+1] /\
    eqmod F3a G3a [2, z**12+z**3+1] /\ eqmod F3b G3b [2, z**12+z**3+1] /\
    eqmod F3c G3c [2, z**12+z**3+1] /\ eqmod F3d G3d [2, z**12+z**3+1] /\
    eqmod F3e G3e [2, z**12+z**3+1] /\ eqmod F3f G3f [2, z**12+z**3+1] /\
G30 = poly z [%L0x7ffffff50ca0[0],%L0x7ffffff50ca8[0],%L0x7ffffff50cb0[0],
              %L0x7ffffff50cb8[0],%L0x7ffffff50cc0[0],%L0x7ffffff50cc8[0],
              %L0x7ffffff50cd0[0],%L0x7ffffff50cd8[0],%L0x7ffffff50ce0[0],
              %L0x7ffffff50ce8[0],%L0x7ffffff50cf0[0],%L0x7ffffff50cf8[0]]*Y3**0+
      poly z [%L0x7ffffff50ca0[16],%L0x7ffffff50ca8[16],%L0x7ffffff50cb0[16],
              %L0x7ffffff50cb8[16],%L0x7ffffff50cc0[16],%L0x7ffffff50cc8[16],
              %L0x7ffffff50cd0[16],%L0x7ffffff50cd8[16],%L0x7ffffff50ce0[16],
              %L0x7ffffff50ce8[16],%L0x7ffffff50cf0[16],%L0x7ffffff50cf8[16]]*Y3**1+
      poly z [%L0x7ffffff50ca0[32],%L0x7ffffff50ca8[32],%L0x7ffffff50cb0[32],
              %L0x7ffffff50cb8[32],%L0x7ffffff50cc0[32],%L0x7ffffff50cc8[32],
              %L0x7ffffff50cd0[32],%L0x7ffffff50cd8[32],%L0x7ffffff50ce0[32],
              %L0x7ffffff50ce8[32],%L0x7ffffff50cf0[32],%L0x7ffffff50cf8[32]]*Y3**2+
      poly z [%L0x7ffffff50ca0[48],%L0x7ffffff50ca8[48],%L0x7ffffff50cb0[48],
              %L0x7ffffff50cb8[48],%L0x7ffffff50cc0[48],%L0x7ffffff50cc8[48],
              %L0x7ffffff50cd0[48],%L0x7ffffff50cd8[48],%L0x7ffffff50ce0[48],
              %L0x7ffffff50ce8[48],%L0x7ffffff50cf0[48],%L0x7ffffff50cf8[48]]*Y3**3 /\
G31 = poly z [%L0x7ffffff50ca0[1],%L0x7ffffff50ca8[1],%L0x7ffffff50cb0[1],
              %L0x7ffffff50cb8[1],%L0x7ffffff50cc0[1],%L0x7ffffff50cc8[1],
              %L0x7ffffff50cd0[1],%L0x7ffffff50cd8[1],%L0x7ffffff50ce0[1],
              %L0x7ffffff50ce8[1],%L0x7ffffff50cf0[1],%L0x7ffffff50cf8[1]]*Y3**0+
      poly z [%L0x7ffffff50ca0[17],%L0x7ffffff50ca8[17],%L0x7ffffff50cb0[17],
              %L0x7ffffff50cb8[17],%L0x7ffffff50cc0[17],%L0x7ffffff50cc8[17],
              %L0x7ffffff50cd0[17],%L0x7ffffff50cd8[17],%L0x7ffffff50ce0[17],
              %L0x7ffffff50ce8[17],%L0x7ffffff50cf0[17],%L0x7ffffff50cf8[17]]*Y3**1+
      poly z [%L0x7ffffff50ca0[33],%L0x7ffffff50ca8[33],%L0x7ffffff50cb0[33],
              %L0x7ffffff50cb8[33],%L0x7ffffff50cc0[33],%L0x7ffffff50cc8[33],
              %L0x7ffffff50cd0[33],%L0x7ffffff50cd8[33],%L0x7ffffff50ce0[33],
              %L0x7ffffff50ce8[33],%L0x7ffffff50cf0[33],%L0x7ffffff50cf8[33]]*Y3**2+
      poly z [%L0x7ffffff50ca0[49],%L0x7ffffff50ca8[49],%L0x7ffffff50cb0[49],
              %L0x7ffffff50cb8[49],%L0x7ffffff50cc0[49],%L0x7ffffff50cc8[49],
              %L0x7ffffff50cd0[49],%L0x7ffffff50cd8[49],%L0x7ffffff50ce0[49],
              %L0x7ffffff50ce8[49],%L0x7ffffff50cf0[49],%L0x7ffffff50cf8[49]]*Y3**3 /\
G32 = poly z [%L0x7ffffff50ca0[2],%L0x7ffffff50ca8[2],%L0x7ffffff50cb0[2],
              %L0x7ffffff50cb8[2],%L0x7ffffff50cc0[2],%L0x7ffffff50cc8[2],
              %L0x7ffffff50cd0[2],%L0x7ffffff50cd8[2],%L0x7ffffff50ce0[2],
              %L0x7ffffff50ce8[2],%L0x7ffffff50cf0[2],%L0x7ffffff50cf8[2]]*Y3**0+
      poly z [%L0x7ffffff50ca0[18],%L0x7ffffff50ca8[18],%L0x7ffffff50cb0[18],
              %L0x7ffffff50cb8[18],%L0x7ffffff50cc0[18],%L0x7ffffff50cc8[18],
              %L0x7ffffff50cd0[18],%L0x7ffffff50cd8[18],%L0x7ffffff50ce0[18],
              %L0x7ffffff50ce8[18],%L0x7ffffff50cf0[18],%L0x7ffffff50cf8[18]]*Y3**1+
      poly z [%L0x7ffffff50ca0[34],%L0x7ffffff50ca8[34],%L0x7ffffff50cb0[34],
              %L0x7ffffff50cb8[34],%L0x7ffffff50cc0[34],%L0x7ffffff50cc8[34],
              %L0x7ffffff50cd0[34],%L0x7ffffff50cd8[34],%L0x7ffffff50ce0[34],
              %L0x7ffffff50ce8[34],%L0x7ffffff50cf0[34],%L0x7ffffff50cf8[34]]*Y3**2+
      poly z [%L0x7ffffff50ca0[50],%L0x7ffffff50ca8[50],%L0x7ffffff50cb0[50],
              %L0x7ffffff50cb8[50],%L0x7ffffff50cc0[50],%L0x7ffffff50cc8[50],
              %L0x7ffffff50cd0[50],%L0x7ffffff50cd8[50],%L0x7ffffff50ce0[50],
              %L0x7ffffff50ce8[50],%L0x7ffffff50cf0[50],%L0x7ffffff50cf8[50]]*Y3**3 /\
G33 = poly z [%L0x7ffffff50ca0[3],%L0x7ffffff50ca8[3],%L0x7ffffff50cb0[3],
              %L0x7ffffff50cb8[3],%L0x7ffffff50cc0[3],%L0x7ffffff50cc8[3],
              %L0x7ffffff50cd0[3],%L0x7ffffff50cd8[3],%L0x7ffffff50ce0[3],
              %L0x7ffffff50ce8[3],%L0x7ffffff50cf0[3],%L0x7ffffff50cf8[3]]*Y3**0+
      poly z [%L0x7ffffff50ca0[19],%L0x7ffffff50ca8[19],%L0x7ffffff50cb0[19],
              %L0x7ffffff50cb8[19],%L0x7ffffff50cc0[19],%L0x7ffffff50cc8[19],
              %L0x7ffffff50cd0[19],%L0x7ffffff50cd8[19],%L0x7ffffff50ce0[19],
              %L0x7ffffff50ce8[19],%L0x7ffffff50cf0[19],%L0x7ffffff50cf8[19]]*Y3**1+
      poly z [%L0x7ffffff50ca0[35],%L0x7ffffff50ca8[35],%L0x7ffffff50cb0[35],
              %L0x7ffffff50cb8[35],%L0x7ffffff50cc0[35],%L0x7ffffff50cc8[35],
              %L0x7ffffff50cd0[35],%L0x7ffffff50cd8[35],%L0x7ffffff50ce0[35],
              %L0x7ffffff50ce8[35],%L0x7ffffff50cf0[35],%L0x7ffffff50cf8[35]]*Y3**2+
      poly z [%L0x7ffffff50ca0[51],%L0x7ffffff50ca8[51],%L0x7ffffff50cb0[51],
              %L0x7ffffff50cb8[51],%L0x7ffffff50cc0[51],%L0x7ffffff50cc8[51],
              %L0x7ffffff50cd0[51],%L0x7ffffff50cd8[51],%L0x7ffffff50ce0[51],
              %L0x7ffffff50ce8[51],%L0x7ffffff50cf0[51],%L0x7ffffff50cf8[51]]*Y3**3 /\
G34 = poly z [%L0x7ffffff50ca0[4],%L0x7ffffff50ca8[4],%L0x7ffffff50cb0[4],
              %L0x7ffffff50cb8[4],%L0x7ffffff50cc0[4],%L0x7ffffff50cc8[4],
              %L0x7ffffff50cd0[4],%L0x7ffffff50cd8[4],%L0x7ffffff50ce0[4],
              %L0x7ffffff50ce8[4],%L0x7ffffff50cf0[4],%L0x7ffffff50cf8[4]]*Y3**0+
      poly z [%L0x7ffffff50ca0[20],%L0x7ffffff50ca8[20],%L0x7ffffff50cb0[20],
              %L0x7ffffff50cb8[20],%L0x7ffffff50cc0[20],%L0x7ffffff50cc8[20],
              %L0x7ffffff50cd0[20],%L0x7ffffff50cd8[20],%L0x7ffffff50ce0[20],
              %L0x7ffffff50ce8[20],%L0x7ffffff50cf0[20],%L0x7ffffff50cf8[20]]*Y3**1+
      poly z [%L0x7ffffff50ca0[36],%L0x7ffffff50ca8[36],%L0x7ffffff50cb0[36],
              %L0x7ffffff50cb8[36],%L0x7ffffff50cc0[36],%L0x7ffffff50cc8[36],
              %L0x7ffffff50cd0[36],%L0x7ffffff50cd8[36],%L0x7ffffff50ce0[36],
              %L0x7ffffff50ce8[36],%L0x7ffffff50cf0[36],%L0x7ffffff50cf8[36]]*Y3**2+
      poly z [%L0x7ffffff50ca0[52],%L0x7ffffff50ca8[52],%L0x7ffffff50cb0[52],
              %L0x7ffffff50cb8[52],%L0x7ffffff50cc0[52],%L0x7ffffff50cc8[52],
              %L0x7ffffff50cd0[52],%L0x7ffffff50cd8[52],%L0x7ffffff50ce0[52],
              %L0x7ffffff50ce8[52],%L0x7ffffff50cf0[52],%L0x7ffffff50cf8[52]]*Y3**3 /\
G35 = poly z [%L0x7ffffff50ca0[5],%L0x7ffffff50ca8[5],%L0x7ffffff50cb0[5],
              %L0x7ffffff50cb8[5],%L0x7ffffff50cc0[5],%L0x7ffffff50cc8[5],
              %L0x7ffffff50cd0[5],%L0x7ffffff50cd8[5],%L0x7ffffff50ce0[5],
              %L0x7ffffff50ce8[5],%L0x7ffffff50cf0[5],%L0x7ffffff50cf8[5]]*Y3**0+
      poly z [%L0x7ffffff50ca0[21],%L0x7ffffff50ca8[21],%L0x7ffffff50cb0[21],
              %L0x7ffffff50cb8[21],%L0x7ffffff50cc0[21],%L0x7ffffff50cc8[21],
              %L0x7ffffff50cd0[21],%L0x7ffffff50cd8[21],%L0x7ffffff50ce0[21],
              %L0x7ffffff50ce8[21],%L0x7ffffff50cf0[21],%L0x7ffffff50cf8[21]]*Y3**1+
      poly z [%L0x7ffffff50ca0[37],%L0x7ffffff50ca8[37],%L0x7ffffff50cb0[37],
              %L0x7ffffff50cb8[37],%L0x7ffffff50cc0[37],%L0x7ffffff50cc8[37],
              %L0x7ffffff50cd0[37],%L0x7ffffff50cd8[37],%L0x7ffffff50ce0[37],
              %L0x7ffffff50ce8[37],%L0x7ffffff50cf0[37],%L0x7ffffff50cf8[37]]*Y3**2+
      poly z [%L0x7ffffff50ca0[53],%L0x7ffffff50ca8[53],%L0x7ffffff50cb0[53],
              %L0x7ffffff50cb8[53],%L0x7ffffff50cc0[53],%L0x7ffffff50cc8[53],
              %L0x7ffffff50cd0[53],%L0x7ffffff50cd8[53],%L0x7ffffff50ce0[53],
              %L0x7ffffff50ce8[53],%L0x7ffffff50cf0[53],%L0x7ffffff50cf8[53]]*Y3**3 /\
G36 = poly z [%L0x7ffffff50ca0[6],%L0x7ffffff50ca8[6],%L0x7ffffff50cb0[6],
              %L0x7ffffff50cb8[6],%L0x7ffffff50cc0[6],%L0x7ffffff50cc8[6],
              %L0x7ffffff50cd0[6],%L0x7ffffff50cd8[6],%L0x7ffffff50ce0[6],
              %L0x7ffffff50ce8[6],%L0x7ffffff50cf0[6],%L0x7ffffff50cf8[6]]*Y3**0+
      poly z [%L0x7ffffff50ca0[22],%L0x7ffffff50ca8[22],%L0x7ffffff50cb0[22],
              %L0x7ffffff50cb8[22],%L0x7ffffff50cc0[22],%L0x7ffffff50cc8[22],
              %L0x7ffffff50cd0[22],%L0x7ffffff50cd8[22],%L0x7ffffff50ce0[22],
              %L0x7ffffff50ce8[22],%L0x7ffffff50cf0[22],%L0x7ffffff50cf8[22]]*Y3**1+
      poly z [%L0x7ffffff50ca0[38],%L0x7ffffff50ca8[38],%L0x7ffffff50cb0[38],
              %L0x7ffffff50cb8[38],%L0x7ffffff50cc0[38],%L0x7ffffff50cc8[38],
              %L0x7ffffff50cd0[38],%L0x7ffffff50cd8[38],%L0x7ffffff50ce0[38],
              %L0x7ffffff50ce8[38],%L0x7ffffff50cf0[38],%L0x7ffffff50cf8[38]]*Y3**2+
      poly z [%L0x7ffffff50ca0[54],%L0x7ffffff50ca8[54],%L0x7ffffff50cb0[54],
              %L0x7ffffff50cb8[54],%L0x7ffffff50cc0[54],%L0x7ffffff50cc8[54],
              %L0x7ffffff50cd0[54],%L0x7ffffff50cd8[54],%L0x7ffffff50ce0[54],
              %L0x7ffffff50ce8[54],%L0x7ffffff50cf0[54],%L0x7ffffff50cf8[54]]*Y3**3 /\
G37 = poly z [%L0x7ffffff50ca0[7],%L0x7ffffff50ca8[7],%L0x7ffffff50cb0[7],
              %L0x7ffffff50cb8[7],%L0x7ffffff50cc0[7],%L0x7ffffff50cc8[7],
              %L0x7ffffff50cd0[7],%L0x7ffffff50cd8[7],%L0x7ffffff50ce0[7],
              %L0x7ffffff50ce8[7],%L0x7ffffff50cf0[7],%L0x7ffffff50cf8[7]]*Y3**0+
      poly z [%L0x7ffffff50ca0[23],%L0x7ffffff50ca8[23],%L0x7ffffff50cb0[23],
              %L0x7ffffff50cb8[23],%L0x7ffffff50cc0[23],%L0x7ffffff50cc8[23],
              %L0x7ffffff50cd0[23],%L0x7ffffff50cd8[23],%L0x7ffffff50ce0[23],
              %L0x7ffffff50ce8[23],%L0x7ffffff50cf0[23],%L0x7ffffff50cf8[23]]*Y3**1+
      poly z [%L0x7ffffff50ca0[39],%L0x7ffffff50ca8[39],%L0x7ffffff50cb0[39],
              %L0x7ffffff50cb8[39],%L0x7ffffff50cc0[39],%L0x7ffffff50cc8[39],
              %L0x7ffffff50cd0[39],%L0x7ffffff50cd8[39],%L0x7ffffff50ce0[39],
              %L0x7ffffff50ce8[39],%L0x7ffffff50cf0[39],%L0x7ffffff50cf8[39]]*Y3**2+
      poly z [%L0x7ffffff50ca0[55],%L0x7ffffff50ca8[55],%L0x7ffffff50cb0[55],
              %L0x7ffffff50cb8[55],%L0x7ffffff50cc0[55],%L0x7ffffff50cc8[55],
              %L0x7ffffff50cd0[55],%L0x7ffffff50cd8[55],%L0x7ffffff50ce0[55],
              %L0x7ffffff50ce8[55],%L0x7ffffff50cf0[55],%L0x7ffffff50cf8[55]]*Y3**3 /\
G38 = poly z [%L0x7ffffff50ca0[8],%L0x7ffffff50ca8[8],%L0x7ffffff50cb0[8],
              %L0x7ffffff50cb8[8],%L0x7ffffff50cc0[8],%L0x7ffffff50cc8[8],
              %L0x7ffffff50cd0[8],%L0x7ffffff50cd8[8],%L0x7ffffff50ce0[8],
              %L0x7ffffff50ce8[8],%L0x7ffffff50cf0[8],%L0x7ffffff50cf8[8]]*Y3**0+
      poly z [%L0x7ffffff50ca0[24],%L0x7ffffff50ca8[24],%L0x7ffffff50cb0[24],
              %L0x7ffffff50cb8[24],%L0x7ffffff50cc0[24],%L0x7ffffff50cc8[24],
              %L0x7ffffff50cd0[24],%L0x7ffffff50cd8[24],%L0x7ffffff50ce0[24],
              %L0x7ffffff50ce8[24],%L0x7ffffff50cf0[24],%L0x7ffffff50cf8[24]]*Y3**1+
      poly z [%L0x7ffffff50ca0[40],%L0x7ffffff50ca8[40],%L0x7ffffff50cb0[40],
              %L0x7ffffff50cb8[40],%L0x7ffffff50cc0[40],%L0x7ffffff50cc8[40],
              %L0x7ffffff50cd0[40],%L0x7ffffff50cd8[40],%L0x7ffffff50ce0[40],
              %L0x7ffffff50ce8[40],%L0x7ffffff50cf0[40],%L0x7ffffff50cf8[40]]*Y3**2+
      poly z [%L0x7ffffff50ca0[56],%L0x7ffffff50ca8[56],%L0x7ffffff50cb0[56],
              %L0x7ffffff50cb8[56],%L0x7ffffff50cc0[56],%L0x7ffffff50cc8[56],
              %L0x7ffffff50cd0[56],%L0x7ffffff50cd8[56],%L0x7ffffff50ce0[56],
              %L0x7ffffff50ce8[56],%L0x7ffffff50cf0[56],%L0x7ffffff50cf8[56]]*Y3**3 /\
G39 = poly z [%L0x7ffffff50ca0[9],%L0x7ffffff50ca8[9],%L0x7ffffff50cb0[9],
              %L0x7ffffff50cb8[9],%L0x7ffffff50cc0[9],%L0x7ffffff50cc8[9],
              %L0x7ffffff50cd0[9],%L0x7ffffff50cd8[9],%L0x7ffffff50ce0[9],
              %L0x7ffffff50ce8[9],%L0x7ffffff50cf0[9],%L0x7ffffff50cf8[9]]*Y3**0+
      poly z [%L0x7ffffff50ca0[25],%L0x7ffffff50ca8[25],%L0x7ffffff50cb0[25],
              %L0x7ffffff50cb8[25],%L0x7ffffff50cc0[25],%L0x7ffffff50cc8[25],
              %L0x7ffffff50cd0[25],%L0x7ffffff50cd8[25],%L0x7ffffff50ce0[25],
              %L0x7ffffff50ce8[25],%L0x7ffffff50cf0[25],%L0x7ffffff50cf8[25]]*Y3**1+
      poly z [%L0x7ffffff50ca0[41],%L0x7ffffff50ca8[41],%L0x7ffffff50cb0[41],
              %L0x7ffffff50cb8[41],%L0x7ffffff50cc0[41],%L0x7ffffff50cc8[41],
              %L0x7ffffff50cd0[41],%L0x7ffffff50cd8[41],%L0x7ffffff50ce0[41],
              %L0x7ffffff50ce8[41],%L0x7ffffff50cf0[41],%L0x7ffffff50cf8[41]]*Y3**2+
      poly z [%L0x7ffffff50ca0[57],%L0x7ffffff50ca8[57],%L0x7ffffff50cb0[57],
              %L0x7ffffff50cb8[57],%L0x7ffffff50cc0[57],%L0x7ffffff50cc8[57],
              %L0x7ffffff50cd0[57],%L0x7ffffff50cd8[57],%L0x7ffffff50ce0[57],
              %L0x7ffffff50ce8[57],%L0x7ffffff50cf0[57],%L0x7ffffff50cf8[57]]*Y3**3 /\
G3a = poly z [%L0x7ffffff50ca0[10],%L0x7ffffff50ca8[10],%L0x7ffffff50cb0[10],
              %L0x7ffffff50cb8[10],%L0x7ffffff50cc0[10],%L0x7ffffff50cc8[10],
              %L0x7ffffff50cd0[10],%L0x7ffffff50cd8[10],%L0x7ffffff50ce0[10],
              %L0x7ffffff50ce8[10],%L0x7ffffff50cf0[10],%L0x7ffffff50cf8[10]]*Y3**0+
      poly z [%L0x7ffffff50ca0[26],%L0x7ffffff50ca8[26],%L0x7ffffff50cb0[26],
              %L0x7ffffff50cb8[26],%L0x7ffffff50cc0[26],%L0x7ffffff50cc8[26],
              %L0x7ffffff50cd0[26],%L0x7ffffff50cd8[26],%L0x7ffffff50ce0[26],
              %L0x7ffffff50ce8[26],%L0x7ffffff50cf0[26],%L0x7ffffff50cf8[26]]*Y3**1+
      poly z [%L0x7ffffff50ca0[42],%L0x7ffffff50ca8[42],%L0x7ffffff50cb0[42],
              %L0x7ffffff50cb8[42],%L0x7ffffff50cc0[42],%L0x7ffffff50cc8[42],
              %L0x7ffffff50cd0[42],%L0x7ffffff50cd8[42],%L0x7ffffff50ce0[42],
              %L0x7ffffff50ce8[42],%L0x7ffffff50cf0[42],%L0x7ffffff50cf8[42]]*Y3**2+
      poly z [%L0x7ffffff50ca0[58],%L0x7ffffff50ca8[58],%L0x7ffffff50cb0[58],
              %L0x7ffffff50cb8[58],%L0x7ffffff50cc0[58],%L0x7ffffff50cc8[58],
              %L0x7ffffff50cd0[58],%L0x7ffffff50cd8[58],%L0x7ffffff50ce0[58],
              %L0x7ffffff50ce8[58],%L0x7ffffff50cf0[58],%L0x7ffffff50cf8[58]]*Y3**3 /\
G3b = poly z [%L0x7ffffff50ca0[11],%L0x7ffffff50ca8[11],%L0x7ffffff50cb0[11],
              %L0x7ffffff50cb8[11],%L0x7ffffff50cc0[11],%L0x7ffffff50cc8[11],
              %L0x7ffffff50cd0[11],%L0x7ffffff50cd8[11],%L0x7ffffff50ce0[11],
              %L0x7ffffff50ce8[11],%L0x7ffffff50cf0[11],%L0x7ffffff50cf8[11]]*Y3**0+
      poly z [%L0x7ffffff50ca0[27],%L0x7ffffff50ca8[27],%L0x7ffffff50cb0[27],
              %L0x7ffffff50cb8[27],%L0x7ffffff50cc0[27],%L0x7ffffff50cc8[27],
              %L0x7ffffff50cd0[27],%L0x7ffffff50cd8[27],%L0x7ffffff50ce0[27],
              %L0x7ffffff50ce8[27],%L0x7ffffff50cf0[27],%L0x7ffffff50cf8[27]]*Y3**1+
      poly z [%L0x7ffffff50ca0[43],%L0x7ffffff50ca8[43],%L0x7ffffff50cb0[43],
              %L0x7ffffff50cb8[43],%L0x7ffffff50cc0[43],%L0x7ffffff50cc8[43],
              %L0x7ffffff50cd0[43],%L0x7ffffff50cd8[43],%L0x7ffffff50ce0[43],
              %L0x7ffffff50ce8[43],%L0x7ffffff50cf0[43],%L0x7ffffff50cf8[43]]*Y3**2+
      poly z [%L0x7ffffff50ca0[59],%L0x7ffffff50ca8[59],%L0x7ffffff50cb0[59],
              %L0x7ffffff50cb8[59],%L0x7ffffff50cc0[59],%L0x7ffffff50cc8[59],
              %L0x7ffffff50cd0[59],%L0x7ffffff50cd8[59],%L0x7ffffff50ce0[59],
              %L0x7ffffff50ce8[59],%L0x7ffffff50cf0[59],%L0x7ffffff50cf8[59]]*Y3**3 /\
G3c = poly z [%L0x7ffffff50ca0[12],%L0x7ffffff50ca8[12],%L0x7ffffff50cb0[12],
              %L0x7ffffff50cb8[12],%L0x7ffffff50cc0[12],%L0x7ffffff50cc8[12],
              %L0x7ffffff50cd0[12],%L0x7ffffff50cd8[12],%L0x7ffffff50ce0[12],
              %L0x7ffffff50ce8[12],%L0x7ffffff50cf0[12],%L0x7ffffff50cf8[12]]*Y3**0+
      poly z [%L0x7ffffff50ca0[28],%L0x7ffffff50ca8[28],%L0x7ffffff50cb0[28],
              %L0x7ffffff50cb8[28],%L0x7ffffff50cc0[28],%L0x7ffffff50cc8[28],
              %L0x7ffffff50cd0[28],%L0x7ffffff50cd8[28],%L0x7ffffff50ce0[28],
              %L0x7ffffff50ce8[28],%L0x7ffffff50cf0[28],%L0x7ffffff50cf8[28]]*Y3**1+
      poly z [%L0x7ffffff50ca0[44],%L0x7ffffff50ca8[44],%L0x7ffffff50cb0[44],
              %L0x7ffffff50cb8[44],%L0x7ffffff50cc0[44],%L0x7ffffff50cc8[44],
              %L0x7ffffff50cd0[44],%L0x7ffffff50cd8[44],%L0x7ffffff50ce0[44],
              %L0x7ffffff50ce8[44],%L0x7ffffff50cf0[44],%L0x7ffffff50cf8[44]]*Y3**2+
      poly z [%L0x7ffffff50ca0[60],%L0x7ffffff50ca8[60],%L0x7ffffff50cb0[60],
              %L0x7ffffff50cb8[60],%L0x7ffffff50cc0[60],%L0x7ffffff50cc8[60],
              %L0x7ffffff50cd0[60],%L0x7ffffff50cd8[60],%L0x7ffffff50ce0[60],
              %L0x7ffffff50ce8[60],%L0x7ffffff50cf0[60],%L0x7ffffff50cf8[60]]*Y3**3 /\
G3d = poly z [%L0x7ffffff50ca0[13],%L0x7ffffff50ca8[13],%L0x7ffffff50cb0[13],
              %L0x7ffffff50cb8[13],%L0x7ffffff50cc0[13],%L0x7ffffff50cc8[13],
              %L0x7ffffff50cd0[13],%L0x7ffffff50cd8[13],%L0x7ffffff50ce0[13],
              %L0x7ffffff50ce8[13],%L0x7ffffff50cf0[13],%L0x7ffffff50cf8[13]]*Y3**0+
      poly z [%L0x7ffffff50ca0[29],%L0x7ffffff50ca8[29],%L0x7ffffff50cb0[29],
              %L0x7ffffff50cb8[29],%L0x7ffffff50cc0[29],%L0x7ffffff50cc8[29],
              %L0x7ffffff50cd0[29],%L0x7ffffff50cd8[29],%L0x7ffffff50ce0[29],
              %L0x7ffffff50ce8[29],%L0x7ffffff50cf0[29],%L0x7ffffff50cf8[29]]*Y3**1+
      poly z [%L0x7ffffff50ca0[45],%L0x7ffffff50ca8[45],%L0x7ffffff50cb0[45],
              %L0x7ffffff50cb8[45],%L0x7ffffff50cc0[45],%L0x7ffffff50cc8[45],
              %L0x7ffffff50cd0[45],%L0x7ffffff50cd8[45],%L0x7ffffff50ce0[45],
              %L0x7ffffff50ce8[45],%L0x7ffffff50cf0[45],%L0x7ffffff50cf8[45]]*Y3**2+
      poly z [%L0x7ffffff50ca0[61],%L0x7ffffff50ca8[61],%L0x7ffffff50cb0[61],
              %L0x7ffffff50cb8[61],%L0x7ffffff50cc0[61],%L0x7ffffff50cc8[61],
              %L0x7ffffff50cd0[61],%L0x7ffffff50cd8[61],%L0x7ffffff50ce0[61],
              %L0x7ffffff50ce8[61],%L0x7ffffff50cf0[61],%L0x7ffffff50cf8[61]]*Y3**3 /\
G3e = poly z [%L0x7ffffff50ca0[14],%L0x7ffffff50ca8[14],%L0x7ffffff50cb0[14],
              %L0x7ffffff50cb8[14],%L0x7ffffff50cc0[14],%L0x7ffffff50cc8[14],
              %L0x7ffffff50cd0[14],%L0x7ffffff50cd8[14],%L0x7ffffff50ce0[14],
              %L0x7ffffff50ce8[14],%L0x7ffffff50cf0[14],%L0x7ffffff50cf8[14]]*Y3**0+
      poly z [%L0x7ffffff50ca0[30],%L0x7ffffff50ca8[30],%L0x7ffffff50cb0[30],
              %L0x7ffffff50cb8[30],%L0x7ffffff50cc0[30],%L0x7ffffff50cc8[30],
              %L0x7ffffff50cd0[30],%L0x7ffffff50cd8[30],%L0x7ffffff50ce0[30],
              %L0x7ffffff50ce8[30],%L0x7ffffff50cf0[30],%L0x7ffffff50cf8[30]]*Y3**1+
      poly z [%L0x7ffffff50ca0[46],%L0x7ffffff50ca8[46],%L0x7ffffff50cb0[46],
              %L0x7ffffff50cb8[46],%L0x7ffffff50cc0[46],%L0x7ffffff50cc8[46],
              %L0x7ffffff50cd0[46],%L0x7ffffff50cd8[46],%L0x7ffffff50ce0[46],
              %L0x7ffffff50ce8[46],%L0x7ffffff50cf0[46],%L0x7ffffff50cf8[46]]*Y3**2+
      poly z [%L0x7ffffff50ca0[62],%L0x7ffffff50ca8[62],%L0x7ffffff50cb0[62],
              %L0x7ffffff50cb8[62],%L0x7ffffff50cc0[62],%L0x7ffffff50cc8[62],
              %L0x7ffffff50cd0[62],%L0x7ffffff50cd8[62],%L0x7ffffff50ce0[62],
              %L0x7ffffff50ce8[62],%L0x7ffffff50cf0[62],%L0x7ffffff50cf8[62]]*Y3**3 /\
G3f = poly z [%L0x7ffffff50ca0[15],%L0x7ffffff50ca8[15],%L0x7ffffff50cb0[15],
              %L0x7ffffff50cb8[15],%L0x7ffffff50cc0[15],%L0x7ffffff50cc8[15],
              %L0x7ffffff50cd0[15],%L0x7ffffff50cd8[15],%L0x7ffffff50ce0[15],
              %L0x7ffffff50ce8[15],%L0x7ffffff50cf0[15],%L0x7ffffff50cf8[15]]*Y3**0+
      poly z [%L0x7ffffff50ca0[31],%L0x7ffffff50ca8[31],%L0x7ffffff50cb0[31],
              %L0x7ffffff50cb8[31],%L0x7ffffff50cc0[31],%L0x7ffffff50cc8[31],
              %L0x7ffffff50cd0[31],%L0x7ffffff50cd8[31],%L0x7ffffff50ce0[31],
              %L0x7ffffff50ce8[31],%L0x7ffffff50cf0[31],%L0x7ffffff50cf8[31]]*Y3**1+
      poly z [%L0x7ffffff50ca0[47],%L0x7ffffff50ca8[47],%L0x7ffffff50cb0[47],
              %L0x7ffffff50cb8[47],%L0x7ffffff50cc0[47],%L0x7ffffff50cc8[47],
              %L0x7ffffff50cd0[47],%L0x7ffffff50cd8[47],%L0x7ffffff50ce0[47],
              %L0x7ffffff50ce8[47],%L0x7ffffff50cf0[47],%L0x7ffffff50cf8[47]]*Y3**2+
      poly z [%L0x7ffffff50ca0[63],%L0x7ffffff50ca8[63],%L0x7ffffff50cb0[63],
              %L0x7ffffff50cb8[63],%L0x7ffffff50cc0[63],%L0x7ffffff50cc8[63],
              %L0x7ffffff50cd0[63],%L0x7ffffff50cd8[63],%L0x7ffffff50ce0[63],
              %L0x7ffffff50ce8[63],%L0x7ffffff50cf0[63],%L0x7ffffff50cf8[63]]*Y3**3 
 && true;



(* mov    0x10(%rsp),%rcx                          #! EA = L0x7ffffff50990; Value = 0x0000000000000003; PC = 0x555555582d7a *)
mov %rcx %L0x7ffffff50990;
(* add    $0x1,%rcx                                #! PC = 0x555555582d7f *)
(* add $0x1, rcx *)
nop;
(* cmp    $0x5,%rcx                                #! PC = 0x555555582d83 *)
(* cmp 0x5, rcx *)
nop;
(* #jne    0x555555582c60 <radix_conversions+352>  #! PC = 0x555555582d87 *)
#jne    0x555555582c60 <radix_conversions+352>  #! 0x555555582d87 = 0x555555582d87;
(* mov    %rcx,0x10(%rsp)                          #! EA = L0x7ffffff50990; PC = 0x555555582c60 *)
mov %L0x7ffffff50990 %rcx;
(* mov    0x18(%rsp),%rdx                          #! EA = L0x7ffffff50998; Value = 0x00007ffffff50ca0; PC = 0x555555582c65 *)
mov %rdx %L0x7ffffff50998;
(* mov    %ecx,%esi                                #! PC = 0x555555582c6a *)
(* mov ecx, esi *)
nop;
(* movabs $0xf000f000f000f00,%r8                   #! PC = 0x555555582c6c *)
cast %r8@bit[64] [0xf000f000f000f00@uint64];
(* movabs $0xf000f000f000f0,%rdi                   #! PC = 0x555555582c76 *)
cast %rdi@bit[64] [0xf000f000f000f0@uint64];
(* movabs $0x3030303030303030,%r10                 #! PC = 0x555555582c80 *)
cast %r10@bit[64] [0x3030303030303030@uint64];
(* movabs $0xc0c0c0c0c0c0c0c,%r9                   #! PC = 0x555555582c8a *)
cast %r9@bit[64] [0xc0c0c0c0c0c0c0c@uint64];
(* movabs $0x4444444444444444,%r15                 #! PC = 0x555555582c94 *)
cast %r15@bit[64] [0x4444444444444444@uint64];
(* movabs $0x2222222222222222,%r11                 #! PC = 0x555555582c9e *)
cast %r11@bit[64] [0x2222222222222222@uint64];
(* nopl   0x0(%rax,%rax,1)                         #! EA = L0x-e375732619b055ea; PC = 0x555555582ca8 *)
(* nopl *)
nop;
(* mov    (%rdx),%rax                              #! EA = L0x7ffffff50ca0; Value = 0x1934cc2ac20994f8; PC = 0x555555582cb0 *)
mov %rax %L0x7ffffff50ca0;
(* mov    %rax,%rcx                                #! PC = 0x555555582cb3 *)
mov %rcx %rax;
(* shr    $0x10,%rcx                               #! PC = 0x555555582cb6 *)
mov %rcx
    [%rcx[16],%rcx[17],%rcx[18],%rcx[19],%rcx[20],%rcx[21],%rcx[22],%rcx[23],
     %rcx[24],%rcx[25],%rcx[26],%rcx[27],%rcx[28],%rcx[29],%rcx[30],%rcx[31],
     %rcx[32],%rcx[33],%rcx[34],%rcx[35],%rcx[36],%rcx[37],%rcx[38],%rcx[39],
     %rcx[40],%rcx[41],%rcx[42],%rcx[43],%rcx[44],%rcx[45],%rcx[46],%rcx[47],
     %rcx[48],%rcx[49],%rcx[50],%rcx[51],%rcx[52],%rcx[53],%rcx[54],%rcx[55],
     %rcx[56],%rcx[57],%rcx[58],%rcx[59],%rcx[60],%rcx[61],%rcx[62],%rcx[63],
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit];
(* and    %rbx,%rcx                                #! PC = 0x555555582cba *)
mov %rcx
    [0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     %rcx[32],%rcx[33],%rcx[34],%rcx[35],%rcx[36],%rcx[37],%rcx[38],%rcx[39],
     %rcx[40],%rcx[41],%rcx[42],%rcx[43],%rcx[44],%rcx[45],%rcx[46],%rcx[47],
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit];
(* xor    %rax,%rcx                                #! PC = 0x555555582cbd *)
adds %dc %rcx %rax %rcx;
(* mov    %rcx,%rax                                #! PC = 0x555555582cc0 *)
mov %rax %rcx;
(* shr    $0x10,%rax                               #! PC = 0x555555582cc3 *)
mov %rax
    [%rax[16],%rax[17],%rax[18],%rax[19],%rax[20],%rax[21],%rax[22],%rax[23],
     %rax[24],%rax[25],%rax[26],%rax[27],%rax[28],%rax[29],%rax[30],%rax[31],
     %rax[32],%rax[33],%rax[34],%rax[35],%rax[36],%rax[37],%rax[38],%rax[39],
     %rax[40],%rax[41],%rax[42],%rax[43],%rax[44],%rax[45],%rax[46],%rax[47],
     %rax[48],%rax[49],%rax[50],%rax[51],%rax[52],%rax[53],%rax[54],%rax[55],
     %rax[56],%rax[57],%rax[58],%rax[59],%rax[60],%rax[61],%rax[62],%rax[63],
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit];
(* and    $0xffff0000,%eax                         #! PC = 0x555555582cc7 *)
mov %rax
    [0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     %rax[16],%rax[17],%rax[18],%rax[19],%rax[20],%rax[21],%rax[22],%rax[23],
     %rax[24],%rax[25],%rax[26],%rax[27],%rax[28],%rax[29],%rax[30],%rax[31],
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit];
(* xor    %rcx,%rax                                #! PC = 0x555555582ccc *)
adds %dc %rax %rcx %rax;
(* cmp    $0x4,%esi                                #! PC = 0x555555582ccf *)
(* cmp 0x4, esi *)
nop;
(* #je     0x555555582d48 <radix_conversions+584>  #! PC = 0x555555582cd2 *)
#je     0x555555582d48 <radix_conversions+584>  #! 0x555555582cd2 = 0x555555582cd2;
(* mov    %rax,(%rdx)                              #! EA = L0x7ffffff50ca0; PC = 0x555555582d48 *)
mov %L0x7ffffff50ca0 %rax;
(* add    $0x8,%rdx                                #! PC = 0x555555582d4b *)
(* add $0x8, rdx *)
nop;
(* cmp    %rdx,%r12                                #! PC = 0x555555582d4f *)
(* cmp rdx, r12 *)
nop;
(* #jne    0x555555582cb0 <radix_conversions+432>  #! PC = 0x555555582d52 *)
#jne    0x555555582cb0 <radix_conversions+432>  #! 0x555555582d52 = 0x555555582d52;
(* mov    (%rdx),%rax                              #! EA = L0x7ffffff50ca8; Value = 0xca0bb7a5cae17190; PC = 0x555555582cb0 *)
mov %rax %L0x7ffffff50ca8;
(* mov    %rax,%rcx                                #! PC = 0x555555582cb3 *)
mov %rcx %rax;
(* shr    $0x10,%rcx                               #! PC = 0x555555582cb6 *)
mov %rcx
    [%rcx[16],%rcx[17],%rcx[18],%rcx[19],%rcx[20],%rcx[21],%rcx[22],%rcx[23],
     %rcx[24],%rcx[25],%rcx[26],%rcx[27],%rcx[28],%rcx[29],%rcx[30],%rcx[31],
     %rcx[32],%rcx[33],%rcx[34],%rcx[35],%rcx[36],%rcx[37],%rcx[38],%rcx[39],
     %rcx[40],%rcx[41],%rcx[42],%rcx[43],%rcx[44],%rcx[45],%rcx[46],%rcx[47],
     %rcx[48],%rcx[49],%rcx[50],%rcx[51],%rcx[52],%rcx[53],%rcx[54],%rcx[55],
     %rcx[56],%rcx[57],%rcx[58],%rcx[59],%rcx[60],%rcx[61],%rcx[62],%rcx[63],
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit];
(* and    %rbx,%rcx                                #! PC = 0x555555582cba *)
mov %rcx
    [0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     %rcx[32],%rcx[33],%rcx[34],%rcx[35],%rcx[36],%rcx[37],%rcx[38],%rcx[39],
     %rcx[40],%rcx[41],%rcx[42],%rcx[43],%rcx[44],%rcx[45],%rcx[46],%rcx[47],
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit];
(* xor    %rax,%rcx                                #! PC = 0x555555582cbd *)
adds %dc %rcx %rax %rcx;
(* mov    %rcx,%rax                                #! PC = 0x555555582cc0 *)
mov %rax %rcx;
(* shr    $0x10,%rax                               #! PC = 0x555555582cc3 *)
mov %rax
    [%rax[16],%rax[17],%rax[18],%rax[19],%rax[20],%rax[21],%rax[22],%rax[23],
     %rax[24],%rax[25],%rax[26],%rax[27],%rax[28],%rax[29],%rax[30],%rax[31],
     %rax[32],%rax[33],%rax[34],%rax[35],%rax[36],%rax[37],%rax[38],%rax[39],
     %rax[40],%rax[41],%rax[42],%rax[43],%rax[44],%rax[45],%rax[46],%rax[47],
     %rax[48],%rax[49],%rax[50],%rax[51],%rax[52],%rax[53],%rax[54],%rax[55],
     %rax[56],%rax[57],%rax[58],%rax[59],%rax[60],%rax[61],%rax[62],%rax[63],
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit];
(* and    $0xffff0000,%eax                         #! PC = 0x555555582cc7 *)
mov %rax
    [0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     %rax[16],%rax[17],%rax[18],%rax[19],%rax[20],%rax[21],%rax[22],%rax[23],
     %rax[24],%rax[25],%rax[26],%rax[27],%rax[28],%rax[29],%rax[30],%rax[31],
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit];
(* xor    %rcx,%rax                                #! PC = 0x555555582ccc *)
adds %dc %rax %rcx %rax;
(* cmp    $0x4,%esi                                #! PC = 0x555555582ccf *)
(* cmp 0x4, esi *)
nop;
(* #je     0x555555582d48 <radix_conversions+584>  #! PC = 0x555555582cd2 *)
#je     0x555555582d48 <radix_conversions+584>  #! 0x555555582cd2 = 0x555555582cd2;
(* mov    %rax,(%rdx)                              #! EA = L0x7ffffff50ca8; PC = 0x555555582d48 *)
mov %L0x7ffffff50ca8 %rax;
(* add    $0x8,%rdx                                #! PC = 0x555555582d4b *)
(* add $0x8, rdx *)
nop;
(* cmp    %rdx,%r12                                #! PC = 0x555555582d4f *)
(* cmp rdx, r12 *)
nop;
(* #jne    0x555555582cb0 <radix_conversions+432>  #! PC = 0x555555582d52 *)
#jne    0x555555582cb0 <radix_conversions+432>  #! 0x555555582d52 = 0x555555582d52;
(* mov    (%rdx),%rax                              #! EA = L0x7ffffff50cb0; Value = 0x0ce96a10042b1322; PC = 0x555555582cb0 *)
mov %rax %L0x7ffffff50cb0;
(* mov    %rax,%rcx                                #! PC = 0x555555582cb3 *)
mov %rcx %rax;
(* shr    $0x10,%rcx                               #! PC = 0x555555582cb6 *)
mov %rcx
    [%rcx[16],%rcx[17],%rcx[18],%rcx[19],%rcx[20],%rcx[21],%rcx[22],%rcx[23],
     %rcx[24],%rcx[25],%rcx[26],%rcx[27],%rcx[28],%rcx[29],%rcx[30],%rcx[31],
     %rcx[32],%rcx[33],%rcx[34],%rcx[35],%rcx[36],%rcx[37],%rcx[38],%rcx[39],
     %rcx[40],%rcx[41],%rcx[42],%rcx[43],%rcx[44],%rcx[45],%rcx[46],%rcx[47],
     %rcx[48],%rcx[49],%rcx[50],%rcx[51],%rcx[52],%rcx[53],%rcx[54],%rcx[55],
     %rcx[56],%rcx[57],%rcx[58],%rcx[59],%rcx[60],%rcx[61],%rcx[62],%rcx[63],
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit];
(* and    %rbx,%rcx                                #! PC = 0x555555582cba *)
mov %rcx
    [0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     %rcx[32],%rcx[33],%rcx[34],%rcx[35],%rcx[36],%rcx[37],%rcx[38],%rcx[39],
     %rcx[40],%rcx[41],%rcx[42],%rcx[43],%rcx[44],%rcx[45],%rcx[46],%rcx[47],
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit];
(* xor    %rax,%rcx                                #! PC = 0x555555582cbd *)
adds %dc %rcx %rax %rcx;
(* mov    %rcx,%rax                                #! PC = 0x555555582cc0 *)
mov %rax %rcx;
(* shr    $0x10,%rax                               #! PC = 0x555555582cc3 *)
mov %rax
    [%rax[16],%rax[17],%rax[18],%rax[19],%rax[20],%rax[21],%rax[22],%rax[23],
     %rax[24],%rax[25],%rax[26],%rax[27],%rax[28],%rax[29],%rax[30],%rax[31],
     %rax[32],%rax[33],%rax[34],%rax[35],%rax[36],%rax[37],%rax[38],%rax[39],
     %rax[40],%rax[41],%rax[42],%rax[43],%rax[44],%rax[45],%rax[46],%rax[47],
     %rax[48],%rax[49],%rax[50],%rax[51],%rax[52],%rax[53],%rax[54],%rax[55],
     %rax[56],%rax[57],%rax[58],%rax[59],%rax[60],%rax[61],%rax[62],%rax[63],
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit];
(* and    $0xffff0000,%eax                         #! PC = 0x555555582cc7 *)
mov %rax
    [0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     %rax[16],%rax[17],%rax[18],%rax[19],%rax[20],%rax[21],%rax[22],%rax[23],
     %rax[24],%rax[25],%rax[26],%rax[27],%rax[28],%rax[29],%rax[30],%rax[31],
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit];
(* xor    %rcx,%rax                                #! PC = 0x555555582ccc *)
adds %dc %rax %rcx %rax;
(* cmp    $0x4,%esi                                #! PC = 0x555555582ccf *)
(* cmp 0x4, esi *)
nop;
(* #je     0x555555582d48 <radix_conversions+584>  #! PC = 0x555555582cd2 *)
#je     0x555555582d48 <radix_conversions+584>  #! 0x555555582cd2 = 0x555555582cd2;
(* mov    %rax,(%rdx)                              #! EA = L0x7ffffff50cb0; PC = 0x555555582d48 *)
mov %L0x7ffffff50cb0 %rax;
(* add    $0x8,%rdx                                #! PC = 0x555555582d4b *)
(* add $0x8, rdx *)
nop;
(* cmp    %rdx,%r12                                #! PC = 0x555555582d4f *)
(* cmp rdx, r12 *)
nop;
(* #jne    0x555555582cb0 <radix_conversions+432>  #! PC = 0x555555582d52 *)
#jne    0x555555582cb0 <radix_conversions+432>  #! 0x555555582d52 = 0x555555582d52;
(* mov    (%rdx),%rax                              #! EA = L0x7ffffff50cb8; Value = 0x8c40a5da51cc6e05; PC = 0x555555582cb0 *)
mov %rax %L0x7ffffff50cb8;
(* mov    %rax,%rcx                                #! PC = 0x555555582cb3 *)
mov %rcx %rax;
(* shr    $0x10,%rcx                               #! PC = 0x555555582cb6 *)
mov %rcx
    [%rcx[16],%rcx[17],%rcx[18],%rcx[19],%rcx[20],%rcx[21],%rcx[22],%rcx[23],
     %rcx[24],%rcx[25],%rcx[26],%rcx[27],%rcx[28],%rcx[29],%rcx[30],%rcx[31],
     %rcx[32],%rcx[33],%rcx[34],%rcx[35],%rcx[36],%rcx[37],%rcx[38],%rcx[39],
     %rcx[40],%rcx[41],%rcx[42],%rcx[43],%rcx[44],%rcx[45],%rcx[46],%rcx[47],
     %rcx[48],%rcx[49],%rcx[50],%rcx[51],%rcx[52],%rcx[53],%rcx[54],%rcx[55],
     %rcx[56],%rcx[57],%rcx[58],%rcx[59],%rcx[60],%rcx[61],%rcx[62],%rcx[63],
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit];
(* and    %rbx,%rcx                                #! PC = 0x555555582cba *)
mov %rcx
    [0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     %rcx[32],%rcx[33],%rcx[34],%rcx[35],%rcx[36],%rcx[37],%rcx[38],%rcx[39],
     %rcx[40],%rcx[41],%rcx[42],%rcx[43],%rcx[44],%rcx[45],%rcx[46],%rcx[47],
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit];
(* xor    %rax,%rcx                                #! PC = 0x555555582cbd *)
adds %dc %rcx %rax %rcx;
(* mov    %rcx,%rax                                #! PC = 0x555555582cc0 *)
mov %rax %rcx;
(* shr    $0x10,%rax                               #! PC = 0x555555582cc3 *)
mov %rax
    [%rax[16],%rax[17],%rax[18],%rax[19],%rax[20],%rax[21],%rax[22],%rax[23],
     %rax[24],%rax[25],%rax[26],%rax[27],%rax[28],%rax[29],%rax[30],%rax[31],
     %rax[32],%rax[33],%rax[34],%rax[35],%rax[36],%rax[37],%rax[38],%rax[39],
     %rax[40],%rax[41],%rax[42],%rax[43],%rax[44],%rax[45],%rax[46],%rax[47],
     %rax[48],%rax[49],%rax[50],%rax[51],%rax[52],%rax[53],%rax[54],%rax[55],
     %rax[56],%rax[57],%rax[58],%rax[59],%rax[60],%rax[61],%rax[62],%rax[63],
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit];
(* and    $0xffff0000,%eax                         #! PC = 0x555555582cc7 *)
mov %rax
    [0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     %rax[16],%rax[17],%rax[18],%rax[19],%rax[20],%rax[21],%rax[22],%rax[23],
     %rax[24],%rax[25],%rax[26],%rax[27],%rax[28],%rax[29],%rax[30],%rax[31],
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit];
(* xor    %rcx,%rax                                #! PC = 0x555555582ccc *)
adds %dc %rax %rcx %rax;
(* cmp    $0x4,%esi                                #! PC = 0x555555582ccf *)
(* cmp 0x4, esi *)
nop;
(* #je     0x555555582d48 <radix_conversions+584>  #! PC = 0x555555582cd2 *)
#je     0x555555582d48 <radix_conversions+584>  #! 0x555555582cd2 = 0x555555582cd2;
(* mov    %rax,(%rdx)                              #! EA = L0x7ffffff50cb8; PC = 0x555555582d48 *)
mov %L0x7ffffff50cb8 %rax;
(* add    $0x8,%rdx                                #! PC = 0x555555582d4b *)
(* add $0x8, rdx *)
nop;
(* cmp    %rdx,%r12                                #! PC = 0x555555582d4f *)
(* cmp rdx, r12 *)
nop;
(* #jne    0x555555582cb0 <radix_conversions+432>  #! PC = 0x555555582d52 *)
#jne    0x555555582cb0 <radix_conversions+432>  #! 0x555555582d52 = 0x555555582d52;
(* mov    (%rdx),%rax                              #! EA = L0x7ffffff50cc0; Value = 0x8f9c642e26c666c0; PC = 0x555555582cb0 *)
mov %rax %L0x7ffffff50cc0;
(* mov    %rax,%rcx                                #! PC = 0x555555582cb3 *)
mov %rcx %rax;
(* shr    $0x10,%rcx                               #! PC = 0x555555582cb6 *)
mov %rcx
    [%rcx[16],%rcx[17],%rcx[18],%rcx[19],%rcx[20],%rcx[21],%rcx[22],%rcx[23],
     %rcx[24],%rcx[25],%rcx[26],%rcx[27],%rcx[28],%rcx[29],%rcx[30],%rcx[31],
     %rcx[32],%rcx[33],%rcx[34],%rcx[35],%rcx[36],%rcx[37],%rcx[38],%rcx[39],
     %rcx[40],%rcx[41],%rcx[42],%rcx[43],%rcx[44],%rcx[45],%rcx[46],%rcx[47],
     %rcx[48],%rcx[49],%rcx[50],%rcx[51],%rcx[52],%rcx[53],%rcx[54],%rcx[55],
     %rcx[56],%rcx[57],%rcx[58],%rcx[59],%rcx[60],%rcx[61],%rcx[62],%rcx[63],
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit];
(* and    %rbx,%rcx                                #! PC = 0x555555582cba *)
mov %rcx
    [0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     %rcx[32],%rcx[33],%rcx[34],%rcx[35],%rcx[36],%rcx[37],%rcx[38],%rcx[39],
     %rcx[40],%rcx[41],%rcx[42],%rcx[43],%rcx[44],%rcx[45],%rcx[46],%rcx[47],
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit];
(* xor    %rax,%rcx                                #! PC = 0x555555582cbd *)
adds %dc %rcx %rax %rcx;
(* mov    %rcx,%rax                                #! PC = 0x555555582cc0 *)
mov %rax %rcx;
(* shr    $0x10,%rax                               #! PC = 0x555555582cc3 *)
mov %rax
    [%rax[16],%rax[17],%rax[18],%rax[19],%rax[20],%rax[21],%rax[22],%rax[23],
     %rax[24],%rax[25],%rax[26],%rax[27],%rax[28],%rax[29],%rax[30],%rax[31],
     %rax[32],%rax[33],%rax[34],%rax[35],%rax[36],%rax[37],%rax[38],%rax[39],
     %rax[40],%rax[41],%rax[42],%rax[43],%rax[44],%rax[45],%rax[46],%rax[47],
     %rax[48],%rax[49],%rax[50],%rax[51],%rax[52],%rax[53],%rax[54],%rax[55],
     %rax[56],%rax[57],%rax[58],%rax[59],%rax[60],%rax[61],%rax[62],%rax[63],
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit];
(* and    $0xffff0000,%eax                         #! PC = 0x555555582cc7 *)
mov %rax
    [0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     %rax[16],%rax[17],%rax[18],%rax[19],%rax[20],%rax[21],%rax[22],%rax[23],
     %rax[24],%rax[25],%rax[26],%rax[27],%rax[28],%rax[29],%rax[30],%rax[31],
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit];
(* xor    %rcx,%rax                                #! PC = 0x555555582ccc *)
adds %dc %rax %rcx %rax;
(* cmp    $0x4,%esi                                #! PC = 0x555555582ccf *)
(* cmp 0x4, esi *)
nop;
(* #je     0x555555582d48 <radix_conversions+584>  #! PC = 0x555555582cd2 *)
#je     0x555555582d48 <radix_conversions+584>  #! 0x555555582cd2 = 0x555555582cd2;
(* mov    %rax,(%rdx)                              #! EA = L0x7ffffff50cc0; PC = 0x555555582d48 *)
mov %L0x7ffffff50cc0 %rax;
(* add    $0x8,%rdx                                #! PC = 0x555555582d4b *)
(* add $0x8, rdx *)
nop;
(* cmp    %rdx,%r12                                #! PC = 0x555555582d4f *)
(* cmp rdx, r12 *)
nop;
(* #jne    0x555555582cb0 <radix_conversions+432>  #! PC = 0x555555582d52 *)
#jne    0x555555582cb0 <radix_conversions+432>  #! 0x555555582d52 = 0x555555582d52;
(* mov    (%rdx),%rax                              #! EA = L0x7ffffff50cc8; Value = 0xa637e859986e75ac; PC = 0x555555582cb0 *)
mov %rax %L0x7ffffff50cc8;
(* mov    %rax,%rcx                                #! PC = 0x555555582cb3 *)
mov %rcx %rax;
(* shr    $0x10,%rcx                               #! PC = 0x555555582cb6 *)
mov %rcx
    [%rcx[16],%rcx[17],%rcx[18],%rcx[19],%rcx[20],%rcx[21],%rcx[22],%rcx[23],
     %rcx[24],%rcx[25],%rcx[26],%rcx[27],%rcx[28],%rcx[29],%rcx[30],%rcx[31],
     %rcx[32],%rcx[33],%rcx[34],%rcx[35],%rcx[36],%rcx[37],%rcx[38],%rcx[39],
     %rcx[40],%rcx[41],%rcx[42],%rcx[43],%rcx[44],%rcx[45],%rcx[46],%rcx[47],
     %rcx[48],%rcx[49],%rcx[50],%rcx[51],%rcx[52],%rcx[53],%rcx[54],%rcx[55],
     %rcx[56],%rcx[57],%rcx[58],%rcx[59],%rcx[60],%rcx[61],%rcx[62],%rcx[63],
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit];
(* and    %rbx,%rcx                                #! PC = 0x555555582cba *)
mov %rcx
    [0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     %rcx[32],%rcx[33],%rcx[34],%rcx[35],%rcx[36],%rcx[37],%rcx[38],%rcx[39],
     %rcx[40],%rcx[41],%rcx[42],%rcx[43],%rcx[44],%rcx[45],%rcx[46],%rcx[47],
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit];
(* xor    %rax,%rcx                                #! PC = 0x555555582cbd *)
adds %dc %rcx %rax %rcx;
(* mov    %rcx,%rax                                #! PC = 0x555555582cc0 *)
mov %rax %rcx;
(* shr    $0x10,%rax                               #! PC = 0x555555582cc3 *)
mov %rax
    [%rax[16],%rax[17],%rax[18],%rax[19],%rax[20],%rax[21],%rax[22],%rax[23],
     %rax[24],%rax[25],%rax[26],%rax[27],%rax[28],%rax[29],%rax[30],%rax[31],
     %rax[32],%rax[33],%rax[34],%rax[35],%rax[36],%rax[37],%rax[38],%rax[39],
     %rax[40],%rax[41],%rax[42],%rax[43],%rax[44],%rax[45],%rax[46],%rax[47],
     %rax[48],%rax[49],%rax[50],%rax[51],%rax[52],%rax[53],%rax[54],%rax[55],
     %rax[56],%rax[57],%rax[58],%rax[59],%rax[60],%rax[61],%rax[62],%rax[63],
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit];
(* and    $0xffff0000,%eax                         #! PC = 0x555555582cc7 *)
mov %rax
    [0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     %rax[16],%rax[17],%rax[18],%rax[19],%rax[20],%rax[21],%rax[22],%rax[23],
     %rax[24],%rax[25],%rax[26],%rax[27],%rax[28],%rax[29],%rax[30],%rax[31],
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit];
(* xor    %rcx,%rax                                #! PC = 0x555555582ccc *)
adds %dc %rax %rcx %rax;
(* cmp    $0x4,%esi                                #! PC = 0x555555582ccf *)
(* cmp 0x4, esi *)
nop;
(* #je     0x555555582d48 <radix_conversions+584>  #! PC = 0x555555582cd2 *)
#je     0x555555582d48 <radix_conversions+584>  #! 0x555555582cd2 = 0x555555582cd2;
(* mov    %rax,(%rdx)                              #! EA = L0x7ffffff50cc8; PC = 0x555555582d48 *)
mov %L0x7ffffff50cc8 %rax;
(* add    $0x8,%rdx                                #! PC = 0x555555582d4b *)
(* add $0x8, rdx *)
nop;
(* cmp    %rdx,%r12                                #! PC = 0x555555582d4f *)
(* cmp rdx, r12 *)
nop;
(* #jne    0x555555582cb0 <radix_conversions+432>  #! PC = 0x555555582d52 *)
#jne    0x555555582cb0 <radix_conversions+432>  #! 0x555555582d52 = 0x555555582d52;
(* mov    (%rdx),%rax                              #! EA = L0x7ffffff50cd0; Value = 0xd908fde79d7a0b51; PC = 0x555555582cb0 *)
mov %rax %L0x7ffffff50cd0;
(* mov    %rax,%rcx                                #! PC = 0x555555582cb3 *)
mov %rcx %rax;
(* shr    $0x10,%rcx                               #! PC = 0x555555582cb6 *)
mov %rcx
    [%rcx[16],%rcx[17],%rcx[18],%rcx[19],%rcx[20],%rcx[21],%rcx[22],%rcx[23],
     %rcx[24],%rcx[25],%rcx[26],%rcx[27],%rcx[28],%rcx[29],%rcx[30],%rcx[31],
     %rcx[32],%rcx[33],%rcx[34],%rcx[35],%rcx[36],%rcx[37],%rcx[38],%rcx[39],
     %rcx[40],%rcx[41],%rcx[42],%rcx[43],%rcx[44],%rcx[45],%rcx[46],%rcx[47],
     %rcx[48],%rcx[49],%rcx[50],%rcx[51],%rcx[52],%rcx[53],%rcx[54],%rcx[55],
     %rcx[56],%rcx[57],%rcx[58],%rcx[59],%rcx[60],%rcx[61],%rcx[62],%rcx[63],
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit];
(* and    %rbx,%rcx                                #! PC = 0x555555582cba *)
mov %rcx
    [0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     %rcx[32],%rcx[33],%rcx[34],%rcx[35],%rcx[36],%rcx[37],%rcx[38],%rcx[39],
     %rcx[40],%rcx[41],%rcx[42],%rcx[43],%rcx[44],%rcx[45],%rcx[46],%rcx[47],
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit];
(* xor    %rax,%rcx                                #! PC = 0x555555582cbd *)
adds %dc %rcx %rax %rcx;
(* mov    %rcx,%rax                                #! PC = 0x555555582cc0 *)
mov %rax %rcx;
(* shr    $0x10,%rax                               #! PC = 0x555555582cc3 *)
mov %rax
    [%rax[16],%rax[17],%rax[18],%rax[19],%rax[20],%rax[21],%rax[22],%rax[23],
     %rax[24],%rax[25],%rax[26],%rax[27],%rax[28],%rax[29],%rax[30],%rax[31],
     %rax[32],%rax[33],%rax[34],%rax[35],%rax[36],%rax[37],%rax[38],%rax[39],
     %rax[40],%rax[41],%rax[42],%rax[43],%rax[44],%rax[45],%rax[46],%rax[47],
     %rax[48],%rax[49],%rax[50],%rax[51],%rax[52],%rax[53],%rax[54],%rax[55],
     %rax[56],%rax[57],%rax[58],%rax[59],%rax[60],%rax[61],%rax[62],%rax[63],
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit];
(* and    $0xffff0000,%eax                         #! PC = 0x555555582cc7 *)
mov %rax
    [0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     %rax[16],%rax[17],%rax[18],%rax[19],%rax[20],%rax[21],%rax[22],%rax[23],
     %rax[24],%rax[25],%rax[26],%rax[27],%rax[28],%rax[29],%rax[30],%rax[31],
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit];
(* xor    %rcx,%rax                                #! PC = 0x555555582ccc *)
adds %dc %rax %rcx %rax;
(* cmp    $0x4,%esi                                #! PC = 0x555555582ccf *)
(* cmp 0x4, esi *)
nop;
(* #je     0x555555582d48 <radix_conversions+584>  #! PC = 0x555555582cd2 *)
#je     0x555555582d48 <radix_conversions+584>  #! 0x555555582cd2 = 0x555555582cd2;
(* mov    %rax,(%rdx)                              #! EA = L0x7ffffff50cd0; PC = 0x555555582d48 *)
mov %L0x7ffffff50cd0 %rax;
(* add    $0x8,%rdx                                #! PC = 0x555555582d4b *)
(* add $0x8, rdx *)
nop;
(* cmp    %rdx,%r12                                #! PC = 0x555555582d4f *)
(* cmp rdx, r12 *)
nop;
(* #jne    0x555555582cb0 <radix_conversions+432>  #! PC = 0x555555582d52 *)
#jne    0x555555582cb0 <radix_conversions+432>  #! 0x555555582d52 = 0x555555582d52;
(* mov    (%rdx),%rax                              #! EA = L0x7ffffff50cd8; Value = 0xaef3c2a739d848b1; PC = 0x555555582cb0 *)
mov %rax %L0x7ffffff50cd8;
(* mov    %rax,%rcx                                #! PC = 0x555555582cb3 *)
mov %rcx %rax;
(* shr    $0x10,%rcx                               #! PC = 0x555555582cb6 *)
mov %rcx
    [%rcx[16],%rcx[17],%rcx[18],%rcx[19],%rcx[20],%rcx[21],%rcx[22],%rcx[23],
     %rcx[24],%rcx[25],%rcx[26],%rcx[27],%rcx[28],%rcx[29],%rcx[30],%rcx[31],
     %rcx[32],%rcx[33],%rcx[34],%rcx[35],%rcx[36],%rcx[37],%rcx[38],%rcx[39],
     %rcx[40],%rcx[41],%rcx[42],%rcx[43],%rcx[44],%rcx[45],%rcx[46],%rcx[47],
     %rcx[48],%rcx[49],%rcx[50],%rcx[51],%rcx[52],%rcx[53],%rcx[54],%rcx[55],
     %rcx[56],%rcx[57],%rcx[58],%rcx[59],%rcx[60],%rcx[61],%rcx[62],%rcx[63],
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit];
(* and    %rbx,%rcx                                #! PC = 0x555555582cba *)
mov %rcx
    [0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     %rcx[32],%rcx[33],%rcx[34],%rcx[35],%rcx[36],%rcx[37],%rcx[38],%rcx[39],
     %rcx[40],%rcx[41],%rcx[42],%rcx[43],%rcx[44],%rcx[45],%rcx[46],%rcx[47],
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit];
(* xor    %rax,%rcx                                #! PC = 0x555555582cbd *)
adds %dc %rcx %rax %rcx;
(* mov    %rcx,%rax                                #! PC = 0x555555582cc0 *)
mov %rax %rcx;
(* shr    $0x10,%rax                               #! PC = 0x555555582cc3 *)
mov %rax
    [%rax[16],%rax[17],%rax[18],%rax[19],%rax[20],%rax[21],%rax[22],%rax[23],
     %rax[24],%rax[25],%rax[26],%rax[27],%rax[28],%rax[29],%rax[30],%rax[31],
     %rax[32],%rax[33],%rax[34],%rax[35],%rax[36],%rax[37],%rax[38],%rax[39],
     %rax[40],%rax[41],%rax[42],%rax[43],%rax[44],%rax[45],%rax[46],%rax[47],
     %rax[48],%rax[49],%rax[50],%rax[51],%rax[52],%rax[53],%rax[54],%rax[55],
     %rax[56],%rax[57],%rax[58],%rax[59],%rax[60],%rax[61],%rax[62],%rax[63],
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit];
(* and    $0xffff0000,%eax                         #! PC = 0x555555582cc7 *)
mov %rax
    [0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     %rax[16],%rax[17],%rax[18],%rax[19],%rax[20],%rax[21],%rax[22],%rax[23],
     %rax[24],%rax[25],%rax[26],%rax[27],%rax[28],%rax[29],%rax[30],%rax[31],
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit];
(* xor    %rcx,%rax                                #! PC = 0x555555582ccc *)
adds %dc %rax %rcx %rax;
(* cmp    $0x4,%esi                                #! PC = 0x555555582ccf *)
(* cmp 0x4, esi *)
nop;
(* #je     0x555555582d48 <radix_conversions+584>  #! PC = 0x555555582cd2 *)
#je     0x555555582d48 <radix_conversions+584>  #! 0x555555582cd2 = 0x555555582cd2;
(* mov    %rax,(%rdx)                              #! EA = L0x7ffffff50cd8; PC = 0x555555582d48 *)
mov %L0x7ffffff50cd8 %rax;
(* add    $0x8,%rdx                                #! PC = 0x555555582d4b *)
(* add $0x8, rdx *)
nop;
(* cmp    %rdx,%r12                                #! PC = 0x555555582d4f *)
(* cmp rdx, r12 *)
nop;
(* #jne    0x555555582cb0 <radix_conversions+432>  #! PC = 0x555555582d52 *)
#jne    0x555555582cb0 <radix_conversions+432>  #! 0x555555582d52 = 0x555555582d52;
(* mov    (%rdx),%rax                              #! EA = L0x7ffffff50ce0; Value = 0x8e45466cf327d50b; PC = 0x555555582cb0 *)
mov %rax %L0x7ffffff50ce0;
(* mov    %rax,%rcx                                #! PC = 0x555555582cb3 *)
mov %rcx %rax;
(* shr    $0x10,%rcx                               #! PC = 0x555555582cb6 *)
mov %rcx
    [%rcx[16],%rcx[17],%rcx[18],%rcx[19],%rcx[20],%rcx[21],%rcx[22],%rcx[23],
     %rcx[24],%rcx[25],%rcx[26],%rcx[27],%rcx[28],%rcx[29],%rcx[30],%rcx[31],
     %rcx[32],%rcx[33],%rcx[34],%rcx[35],%rcx[36],%rcx[37],%rcx[38],%rcx[39],
     %rcx[40],%rcx[41],%rcx[42],%rcx[43],%rcx[44],%rcx[45],%rcx[46],%rcx[47],
     %rcx[48],%rcx[49],%rcx[50],%rcx[51],%rcx[52],%rcx[53],%rcx[54],%rcx[55],
     %rcx[56],%rcx[57],%rcx[58],%rcx[59],%rcx[60],%rcx[61],%rcx[62],%rcx[63],
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit];
(* and    %rbx,%rcx                                #! PC = 0x555555582cba *)
mov %rcx
    [0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     %rcx[32],%rcx[33],%rcx[34],%rcx[35],%rcx[36],%rcx[37],%rcx[38],%rcx[39],
     %rcx[40],%rcx[41],%rcx[42],%rcx[43],%rcx[44],%rcx[45],%rcx[46],%rcx[47],
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit];
(* xor    %rax,%rcx                                #! PC = 0x555555582cbd *)
adds %dc %rcx %rax %rcx;
(* mov    %rcx,%rax                                #! PC = 0x555555582cc0 *)
mov %rax %rcx;
(* shr    $0x10,%rax                               #! PC = 0x555555582cc3 *)
mov %rax
    [%rax[16],%rax[17],%rax[18],%rax[19],%rax[20],%rax[21],%rax[22],%rax[23],
     %rax[24],%rax[25],%rax[26],%rax[27],%rax[28],%rax[29],%rax[30],%rax[31],
     %rax[32],%rax[33],%rax[34],%rax[35],%rax[36],%rax[37],%rax[38],%rax[39],
     %rax[40],%rax[41],%rax[42],%rax[43],%rax[44],%rax[45],%rax[46],%rax[47],
     %rax[48],%rax[49],%rax[50],%rax[51],%rax[52],%rax[53],%rax[54],%rax[55],
     %rax[56],%rax[57],%rax[58],%rax[59],%rax[60],%rax[61],%rax[62],%rax[63],
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit];
(* and    $0xffff0000,%eax                         #! PC = 0x555555582cc7 *)
mov %rax
    [0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     %rax[16],%rax[17],%rax[18],%rax[19],%rax[20],%rax[21],%rax[22],%rax[23],
     %rax[24],%rax[25],%rax[26],%rax[27],%rax[28],%rax[29],%rax[30],%rax[31],
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit];
(* xor    %rcx,%rax                                #! PC = 0x555555582ccc *)
adds %dc %rax %rcx %rax;
(* cmp    $0x4,%esi                                #! PC = 0x555555582ccf *)
(* cmp 0x4, esi *)
nop;
(* #je     0x555555582d48 <radix_conversions+584>  #! PC = 0x555555582cd2 *)
#je     0x555555582d48 <radix_conversions+584>  #! 0x555555582cd2 = 0x555555582cd2;
(* mov    %rax,(%rdx)                              #! EA = L0x7ffffff50ce0; PC = 0x555555582d48 *)
mov %L0x7ffffff50ce0 %rax;
(* add    $0x8,%rdx                                #! PC = 0x555555582d4b *)
(* add $0x8, rdx *)
nop;
(* cmp    %rdx,%r12                                #! PC = 0x555555582d4f *)
(* cmp rdx, r12 *)
nop;
(* #jne    0x555555582cb0 <radix_conversions+432>  #! PC = 0x555555582d52 *)
#jne    0x555555582cb0 <radix_conversions+432>  #! 0x555555582d52 = 0x555555582d52;
(* mov    (%rdx),%rax                              #! EA = L0x7ffffff50ce8; Value = 0xa84c46304a680126; PC = 0x555555582cb0 *)
mov %rax %L0x7ffffff50ce8;
(* mov    %rax,%rcx                                #! PC = 0x555555582cb3 *)
mov %rcx %rax;
(* shr    $0x10,%rcx                               #! PC = 0x555555582cb6 *)
mov %rcx
    [%rcx[16],%rcx[17],%rcx[18],%rcx[19],%rcx[20],%rcx[21],%rcx[22],%rcx[23],
     %rcx[24],%rcx[25],%rcx[26],%rcx[27],%rcx[28],%rcx[29],%rcx[30],%rcx[31],
     %rcx[32],%rcx[33],%rcx[34],%rcx[35],%rcx[36],%rcx[37],%rcx[38],%rcx[39],
     %rcx[40],%rcx[41],%rcx[42],%rcx[43],%rcx[44],%rcx[45],%rcx[46],%rcx[47],
     %rcx[48],%rcx[49],%rcx[50],%rcx[51],%rcx[52],%rcx[53],%rcx[54],%rcx[55],
     %rcx[56],%rcx[57],%rcx[58],%rcx[59],%rcx[60],%rcx[61],%rcx[62],%rcx[63],
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit];
(* and    %rbx,%rcx                                #! PC = 0x555555582cba *)
mov %rcx
    [0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     %rcx[32],%rcx[33],%rcx[34],%rcx[35],%rcx[36],%rcx[37],%rcx[38],%rcx[39],
     %rcx[40],%rcx[41],%rcx[42],%rcx[43],%rcx[44],%rcx[45],%rcx[46],%rcx[47],
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit];
(* xor    %rax,%rcx                                #! PC = 0x555555582cbd *)
adds %dc %rcx %rax %rcx;
(* mov    %rcx,%rax                                #! PC = 0x555555582cc0 *)
mov %rax %rcx;
(* shr    $0x10,%rax                               #! PC = 0x555555582cc3 *)
mov %rax
    [%rax[16],%rax[17],%rax[18],%rax[19],%rax[20],%rax[21],%rax[22],%rax[23],
     %rax[24],%rax[25],%rax[26],%rax[27],%rax[28],%rax[29],%rax[30],%rax[31],
     %rax[32],%rax[33],%rax[34],%rax[35],%rax[36],%rax[37],%rax[38],%rax[39],
     %rax[40],%rax[41],%rax[42],%rax[43],%rax[44],%rax[45],%rax[46],%rax[47],
     %rax[48],%rax[49],%rax[50],%rax[51],%rax[52],%rax[53],%rax[54],%rax[55],
     %rax[56],%rax[57],%rax[58],%rax[59],%rax[60],%rax[61],%rax[62],%rax[63],
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit];
(* and    $0xffff0000,%eax                         #! PC = 0x555555582cc7 *)
mov %rax
    [0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     %rax[16],%rax[17],%rax[18],%rax[19],%rax[20],%rax[21],%rax[22],%rax[23],
     %rax[24],%rax[25],%rax[26],%rax[27],%rax[28],%rax[29],%rax[30],%rax[31],
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit];
(* xor    %rcx,%rax                                #! PC = 0x555555582ccc *)
adds %dc %rax %rcx %rax;
(* cmp    $0x4,%esi                                #! PC = 0x555555582ccf *)
(* cmp 0x4, esi *)
nop;
(* #je     0x555555582d48 <radix_conversions+584>  #! PC = 0x555555582cd2 *)
#je     0x555555582d48 <radix_conversions+584>  #! 0x555555582cd2 = 0x555555582cd2;
(* mov    %rax,(%rdx)                              #! EA = L0x7ffffff50ce8; PC = 0x555555582d48 *)
mov %L0x7ffffff50ce8 %rax;
(* add    $0x8,%rdx                                #! PC = 0x555555582d4b *)
(* add $0x8, rdx *)
nop;
(* cmp    %rdx,%r12                                #! PC = 0x555555582d4f *)
(* cmp rdx, r12 *)
nop;
(* #jne    0x555555582cb0 <radix_conversions+432>  #! PC = 0x555555582d52 *)
#jne    0x555555582cb0 <radix_conversions+432>  #! 0x555555582d52 = 0x555555582d52;
(* mov    (%rdx),%rax                              #! EA = L0x7ffffff50cf0; Value = 0x38a1a1053dcfe107; PC = 0x555555582cb0 *)
mov %rax %L0x7ffffff50cf0;
(* mov    %rax,%rcx                                #! PC = 0x555555582cb3 *)
mov %rcx %rax;
(* shr    $0x10,%rcx                               #! PC = 0x555555582cb6 *)
mov %rcx
    [%rcx[16],%rcx[17],%rcx[18],%rcx[19],%rcx[20],%rcx[21],%rcx[22],%rcx[23],
     %rcx[24],%rcx[25],%rcx[26],%rcx[27],%rcx[28],%rcx[29],%rcx[30],%rcx[31],
     %rcx[32],%rcx[33],%rcx[34],%rcx[35],%rcx[36],%rcx[37],%rcx[38],%rcx[39],
     %rcx[40],%rcx[41],%rcx[42],%rcx[43],%rcx[44],%rcx[45],%rcx[46],%rcx[47],
     %rcx[48],%rcx[49],%rcx[50],%rcx[51],%rcx[52],%rcx[53],%rcx[54],%rcx[55],
     %rcx[56],%rcx[57],%rcx[58],%rcx[59],%rcx[60],%rcx[61],%rcx[62],%rcx[63],
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit];
(* and    %rbx,%rcx                                #! PC = 0x555555582cba *)
mov %rcx
    [0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     %rcx[32],%rcx[33],%rcx[34],%rcx[35],%rcx[36],%rcx[37],%rcx[38],%rcx[39],
     %rcx[40],%rcx[41],%rcx[42],%rcx[43],%rcx[44],%rcx[45],%rcx[46],%rcx[47],
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit];
(* xor    %rax,%rcx                                #! PC = 0x555555582cbd *)
adds %dc %rcx %rax %rcx;
(* mov    %rcx,%rax                                #! PC = 0x555555582cc0 *)
mov %rax %rcx;
(* shr    $0x10,%rax                               #! PC = 0x555555582cc3 *)
mov %rax
    [%rax[16],%rax[17],%rax[18],%rax[19],%rax[20],%rax[21],%rax[22],%rax[23],
     %rax[24],%rax[25],%rax[26],%rax[27],%rax[28],%rax[29],%rax[30],%rax[31],
     %rax[32],%rax[33],%rax[34],%rax[35],%rax[36],%rax[37],%rax[38],%rax[39],
     %rax[40],%rax[41],%rax[42],%rax[43],%rax[44],%rax[45],%rax[46],%rax[47],
     %rax[48],%rax[49],%rax[50],%rax[51],%rax[52],%rax[53],%rax[54],%rax[55],
     %rax[56],%rax[57],%rax[58],%rax[59],%rax[60],%rax[61],%rax[62],%rax[63],
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit];
(* and    $0xffff0000,%eax                         #! PC = 0x555555582cc7 *)
mov %rax
    [0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     %rax[16],%rax[17],%rax[18],%rax[19],%rax[20],%rax[21],%rax[22],%rax[23],
     %rax[24],%rax[25],%rax[26],%rax[27],%rax[28],%rax[29],%rax[30],%rax[31],
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit];
(* xor    %rcx,%rax                                #! PC = 0x555555582ccc *)
adds %dc %rax %rcx %rax;
(* cmp    $0x4,%esi                                #! PC = 0x555555582ccf *)
(* cmp 0x4, esi *)
nop;
(* #je     0x555555582d48 <radix_conversions+584>  #! PC = 0x555555582cd2 *)
#je     0x555555582d48 <radix_conversions+584>  #! 0x555555582cd2 = 0x555555582cd2;
(* mov    %rax,(%rdx)                              #! EA = L0x7ffffff50cf0; PC = 0x555555582d48 *)
mov %L0x7ffffff50cf0 %rax;
(* add    $0x8,%rdx                                #! PC = 0x555555582d4b *)
(* add $0x8, rdx *)
nop;
(* cmp    %rdx,%r12                                #! PC = 0x555555582d4f *)
(* cmp rdx, r12 *)
nop;
(* #jne    0x555555582cb0 <radix_conversions+432>  #! PC = 0x555555582d52 *)
#jne    0x555555582cb0 <radix_conversions+432>  #! 0x555555582d52 = 0x555555582d52;
(* mov    (%rdx),%rax                              #! EA = L0x7ffffff50cf8; Value = 0x011155bacaa9f948; PC = 0x555555582cb0 *)
mov %rax %L0x7ffffff50cf8;
(* mov    %rax,%rcx                                #! PC = 0x555555582cb3 *)
mov %rcx %rax;
(* shr    $0x10,%rcx                               #! PC = 0x555555582cb6 *)
mov %rcx
    [%rcx[16],%rcx[17],%rcx[18],%rcx[19],%rcx[20],%rcx[21],%rcx[22],%rcx[23],
     %rcx[24],%rcx[25],%rcx[26],%rcx[27],%rcx[28],%rcx[29],%rcx[30],%rcx[31],
     %rcx[32],%rcx[33],%rcx[34],%rcx[35],%rcx[36],%rcx[37],%rcx[38],%rcx[39],
     %rcx[40],%rcx[41],%rcx[42],%rcx[43],%rcx[44],%rcx[45],%rcx[46],%rcx[47],
     %rcx[48],%rcx[49],%rcx[50],%rcx[51],%rcx[52],%rcx[53],%rcx[54],%rcx[55],
     %rcx[56],%rcx[57],%rcx[58],%rcx[59],%rcx[60],%rcx[61],%rcx[62],%rcx[63],
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit];
(* and    %rbx,%rcx                                #! PC = 0x555555582cba *)
mov %rcx
    [0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     %rcx[32],%rcx[33],%rcx[34],%rcx[35],%rcx[36],%rcx[37],%rcx[38],%rcx[39],
     %rcx[40],%rcx[41],%rcx[42],%rcx[43],%rcx[44],%rcx[45],%rcx[46],%rcx[47],
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit];
(* xor    %rax,%rcx                                #! PC = 0x555555582cbd *)
adds %dc %rcx %rax %rcx;
(* mov    %rcx,%rax                                #! PC = 0x555555582cc0 *)
mov %rax %rcx;
(* shr    $0x10,%rax                               #! PC = 0x555555582cc3 *)
mov %rax
    [%rax[16],%rax[17],%rax[18],%rax[19],%rax[20],%rax[21],%rax[22],%rax[23],
     %rax[24],%rax[25],%rax[26],%rax[27],%rax[28],%rax[29],%rax[30],%rax[31],
     %rax[32],%rax[33],%rax[34],%rax[35],%rax[36],%rax[37],%rax[38],%rax[39],
     %rax[40],%rax[41],%rax[42],%rax[43],%rax[44],%rax[45],%rax[46],%rax[47],
     %rax[48],%rax[49],%rax[50],%rax[51],%rax[52],%rax[53],%rax[54],%rax[55],
     %rax[56],%rax[57],%rax[58],%rax[59],%rax[60],%rax[61],%rax[62],%rax[63],
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit];
(* and    $0xffff0000,%eax                         #! PC = 0x555555582cc7 *)
mov %rax
    [0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     %rax[16],%rax[17],%rax[18],%rax[19],%rax[20],%rax[21],%rax[22],%rax[23],
     %rax[24],%rax[25],%rax[26],%rax[27],%rax[28],%rax[29],%rax[30],%rax[31],
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,
     0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit];
(* xor    %rcx,%rax                                #! PC = 0x555555582ccc *)
adds %dc %rax %rcx %rax;
(* cmp    $0x4,%esi                                #! PC = 0x555555582ccf *)
(* cmp 0x4, esi *)
nop;
(* #je     0x555555582d48 <radix_conversions+584>  #! PC = 0x555555582cd2 *)
#je     0x555555582d48 <radix_conversions+584>  #! 0x555555582cd2 = 0x555555582cd2;
(* mov    %rax,(%rdx)                              #! EA = L0x7ffffff50cf8; PC = 0x555555582d48 *)
mov %L0x7ffffff50cf8 %rax;
(* add    $0x8,%rdx                                #! PC = 0x555555582d4b *)
(* add $0x8, rdx *)
nop;
(* cmp    %rdx,%r12                                #! PC = 0x555555582d4f *)
(* cmp rdx, r12 *)
nop;
(* #jne    0x555555582cb0 <radix_conversions+432>  #! PC = 0x555555582d52 *)
#jne    0x555555582cb0 <radix_conversions+432>  #! 0x555555582d52 = 0x555555582d52;



(****************
  NOTE: end of 5th radix conversion. obtain 32 degree-2 polynomials
 ****************)


ghost X4@uint64,F40@uint16,F41@uint16,F42@uint16,F43@uint16,F44@uint16,F45@uint16,F46@uint16,F47@uint16,
      F48@uint16,F49@uint16,F4a@uint16,F4b@uint16,F4c@uint16,F4d@uint16,F4e@uint16,F4f@uint16,
      F410@uint16,F411@uint16,F412@uint16,F413@uint16,F414@uint16,F415@uint16,F416@uint16,F417@uint16,
      F418@uint16,F419@uint16,F41a@uint16,F41b@uint16,F41c@uint16,F41d@uint16,F41e@uint16,F41f@uint16:
X4 = Y3**2 + Y3 /\
F40 =
poly z [%L0x7ffffff50ca0[0],%L0x7ffffff50ca8[0],%L0x7ffffff50cb0[0],
        %L0x7ffffff50cb8[0],%L0x7ffffff50cc0[0],%L0x7ffffff50cc8[0],
        %L0x7ffffff50cd0[0],%L0x7ffffff50cd8[0],%L0x7ffffff50ce0[0],
        %L0x7ffffff50ce8[0],%L0x7ffffff50cf0[0],%L0x7ffffff50cf8[0]]*X4**0+
poly z [%L0x7ffffff50ca0[32],%L0x7ffffff50ca8[32],%L0x7ffffff50cb0[32],
        %L0x7ffffff50cb8[32],%L0x7ffffff50cc0[32],%L0x7ffffff50cc8[32],
        %L0x7ffffff50cd0[32],%L0x7ffffff50cd8[32],%L0x7ffffff50ce0[32],
        %L0x7ffffff50ce8[32],%L0x7ffffff50cf0[32],%L0x7ffffff50cf8[32]]*X4**1
 /\
F41 =
poly z [%L0x7ffffff50ca0[1],%L0x7ffffff50ca8[1],%L0x7ffffff50cb0[1],
        %L0x7ffffff50cb8[1],%L0x7ffffff50cc0[1],%L0x7ffffff50cc8[1],
        %L0x7ffffff50cd0[1],%L0x7ffffff50cd8[1],%L0x7ffffff50ce0[1],
        %L0x7ffffff50ce8[1],%L0x7ffffff50cf0[1],%L0x7ffffff50cf8[1]]*X4**0+
poly z [%L0x7ffffff50ca0[33],%L0x7ffffff50ca8[33],%L0x7ffffff50cb0[33],
        %L0x7ffffff50cb8[33],%L0x7ffffff50cc0[33],%L0x7ffffff50cc8[33],
        %L0x7ffffff50cd0[33],%L0x7ffffff50cd8[33],%L0x7ffffff50ce0[33],
        %L0x7ffffff50ce8[33],%L0x7ffffff50cf0[33],%L0x7ffffff50cf8[33]]*X4**1
 /\
F42 =
poly z [%L0x7ffffff50ca0[2],%L0x7ffffff50ca8[2],%L0x7ffffff50cb0[2],
        %L0x7ffffff50cb8[2],%L0x7ffffff50cc0[2],%L0x7ffffff50cc8[2],
        %L0x7ffffff50cd0[2],%L0x7ffffff50cd8[2],%L0x7ffffff50ce0[2],
        %L0x7ffffff50ce8[2],%L0x7ffffff50cf0[2],%L0x7ffffff50cf8[2]]*X4**0+
poly z [%L0x7ffffff50ca0[34],%L0x7ffffff50ca8[34],%L0x7ffffff50cb0[34],
        %L0x7ffffff50cb8[34],%L0x7ffffff50cc0[34],%L0x7ffffff50cc8[34],
        %L0x7ffffff50cd0[34],%L0x7ffffff50cd8[34],%L0x7ffffff50ce0[34],
        %L0x7ffffff50ce8[34],%L0x7ffffff50cf0[34],%L0x7ffffff50cf8[34]]*X4**1
 /\
F43 =
poly z [%L0x7ffffff50ca0[3],%L0x7ffffff50ca8[3],%L0x7ffffff50cb0[3],
        %L0x7ffffff50cb8[3],%L0x7ffffff50cc0[3],%L0x7ffffff50cc8[3],
        %L0x7ffffff50cd0[3],%L0x7ffffff50cd8[3],%L0x7ffffff50ce0[3],
        %L0x7ffffff50ce8[3],%L0x7ffffff50cf0[3],%L0x7ffffff50cf8[3]]*X4**0+
poly z [%L0x7ffffff50ca0[35],%L0x7ffffff50ca8[35],%L0x7ffffff50cb0[35],
        %L0x7ffffff50cb8[35],%L0x7ffffff50cc0[35],%L0x7ffffff50cc8[35],
        %L0x7ffffff50cd0[35],%L0x7ffffff50cd8[35],%L0x7ffffff50ce0[35],
        %L0x7ffffff50ce8[35],%L0x7ffffff50cf0[35],%L0x7ffffff50cf8[35]]*X4**1
 /\
F44 =
poly z [%L0x7ffffff50ca0[4],%L0x7ffffff50ca8[4],%L0x7ffffff50cb0[4],
        %L0x7ffffff50cb8[4],%L0x7ffffff50cc0[4],%L0x7ffffff50cc8[4],
        %L0x7ffffff50cd0[4],%L0x7ffffff50cd8[4],%L0x7ffffff50ce0[4],
        %L0x7ffffff50ce8[4],%L0x7ffffff50cf0[4],%L0x7ffffff50cf8[4]]*X4**0+
poly z [%L0x7ffffff50ca0[36],%L0x7ffffff50ca8[36],%L0x7ffffff50cb0[36],
        %L0x7ffffff50cb8[36],%L0x7ffffff50cc0[36],%L0x7ffffff50cc8[36],
        %L0x7ffffff50cd0[36],%L0x7ffffff50cd8[36],%L0x7ffffff50ce0[36],
        %L0x7ffffff50ce8[36],%L0x7ffffff50cf0[36],%L0x7ffffff50cf8[36]]*X4**1
 /\
F45 =
poly z [%L0x7ffffff50ca0[5],%L0x7ffffff50ca8[5],%L0x7ffffff50cb0[5],
        %L0x7ffffff50cb8[5],%L0x7ffffff50cc0[5],%L0x7ffffff50cc8[5],
        %L0x7ffffff50cd0[5],%L0x7ffffff50cd8[5],%L0x7ffffff50ce0[5],
        %L0x7ffffff50ce8[5],%L0x7ffffff50cf0[5],%L0x7ffffff50cf8[5]]*X4**0+
poly z [%L0x7ffffff50ca0[37],%L0x7ffffff50ca8[37],%L0x7ffffff50cb0[37],
        %L0x7ffffff50cb8[37],%L0x7ffffff50cc0[37],%L0x7ffffff50cc8[37],
        %L0x7ffffff50cd0[37],%L0x7ffffff50cd8[37],%L0x7ffffff50ce0[37],
        %L0x7ffffff50ce8[37],%L0x7ffffff50cf0[37],%L0x7ffffff50cf8[37]]*X4**1
 /\
F46 =
poly z [%L0x7ffffff50ca0[6],%L0x7ffffff50ca8[6],%L0x7ffffff50cb0[6],
        %L0x7ffffff50cb8[6],%L0x7ffffff50cc0[6],%L0x7ffffff50cc8[6],
        %L0x7ffffff50cd0[6],%L0x7ffffff50cd8[6],%L0x7ffffff50ce0[6],
        %L0x7ffffff50ce8[6],%L0x7ffffff50cf0[6],%L0x7ffffff50cf8[6]]*X4**0+
poly z [%L0x7ffffff50ca0[38],%L0x7ffffff50ca8[38],%L0x7ffffff50cb0[38],
        %L0x7ffffff50cb8[38],%L0x7ffffff50cc0[38],%L0x7ffffff50cc8[38],
        %L0x7ffffff50cd0[38],%L0x7ffffff50cd8[38],%L0x7ffffff50ce0[38],
        %L0x7ffffff50ce8[38],%L0x7ffffff50cf0[38],%L0x7ffffff50cf8[38]]*X4**1
 /\
F47 =
poly z [%L0x7ffffff50ca0[7],%L0x7ffffff50ca8[7],%L0x7ffffff50cb0[7],
        %L0x7ffffff50cb8[7],%L0x7ffffff50cc0[7],%L0x7ffffff50cc8[7],
        %L0x7ffffff50cd0[7],%L0x7ffffff50cd8[7],%L0x7ffffff50ce0[7],
        %L0x7ffffff50ce8[7],%L0x7ffffff50cf0[7],%L0x7ffffff50cf8[7]]*X4**0+
poly z [%L0x7ffffff50ca0[39],%L0x7ffffff50ca8[39],%L0x7ffffff50cb0[39],
        %L0x7ffffff50cb8[39],%L0x7ffffff50cc0[39],%L0x7ffffff50cc8[39],
        %L0x7ffffff50cd0[39],%L0x7ffffff50cd8[39],%L0x7ffffff50ce0[39],
        %L0x7ffffff50ce8[39],%L0x7ffffff50cf0[39],%L0x7ffffff50cf8[39]]*X4**1
 /\
F48 =
poly z [%L0x7ffffff50ca0[8],%L0x7ffffff50ca8[8],%L0x7ffffff50cb0[8],
        %L0x7ffffff50cb8[8],%L0x7ffffff50cc0[8],%L0x7ffffff50cc8[8],
        %L0x7ffffff50cd0[8],%L0x7ffffff50cd8[8],%L0x7ffffff50ce0[8],
        %L0x7ffffff50ce8[8],%L0x7ffffff50cf0[8],%L0x7ffffff50cf8[8]]*X4**0+
poly z [%L0x7ffffff50ca0[40],%L0x7ffffff50ca8[40],%L0x7ffffff50cb0[40],
        %L0x7ffffff50cb8[40],%L0x7ffffff50cc0[40],%L0x7ffffff50cc8[40],
        %L0x7ffffff50cd0[40],%L0x7ffffff50cd8[40],%L0x7ffffff50ce0[40],
        %L0x7ffffff50ce8[40],%L0x7ffffff50cf0[40],%L0x7ffffff50cf8[40]]*X4**1
 /\
F49 =
poly z [%L0x7ffffff50ca0[9],%L0x7ffffff50ca8[9],%L0x7ffffff50cb0[9],
        %L0x7ffffff50cb8[9],%L0x7ffffff50cc0[9],%L0x7ffffff50cc8[9],
        %L0x7ffffff50cd0[9],%L0x7ffffff50cd8[9],%L0x7ffffff50ce0[9],
        %L0x7ffffff50ce8[9],%L0x7ffffff50cf0[9],%L0x7ffffff50cf8[9]]*X4**0+
poly z [%L0x7ffffff50ca0[41],%L0x7ffffff50ca8[41],%L0x7ffffff50cb0[41],
        %L0x7ffffff50cb8[41],%L0x7ffffff50cc0[41],%L0x7ffffff50cc8[41],
        %L0x7ffffff50cd0[41],%L0x7ffffff50cd8[41],%L0x7ffffff50ce0[41],
        %L0x7ffffff50ce8[41],%L0x7ffffff50cf0[41],%L0x7ffffff50cf8[41]]*X4**1
 /\
F4a =
poly z [%L0x7ffffff50ca0[10],%L0x7ffffff50ca8[10],%L0x7ffffff50cb0[10],
        %L0x7ffffff50cb8[10],%L0x7ffffff50cc0[10],%L0x7ffffff50cc8[10],
        %L0x7ffffff50cd0[10],%L0x7ffffff50cd8[10],%L0x7ffffff50ce0[10],
        %L0x7ffffff50ce8[10],%L0x7ffffff50cf0[10],%L0x7ffffff50cf8[10]]*X4**0+
poly z [%L0x7ffffff50ca0[42],%L0x7ffffff50ca8[42],%L0x7ffffff50cb0[42],
        %L0x7ffffff50cb8[42],%L0x7ffffff50cc0[42],%L0x7ffffff50cc8[42],
        %L0x7ffffff50cd0[42],%L0x7ffffff50cd8[42],%L0x7ffffff50ce0[42],
        %L0x7ffffff50ce8[42],%L0x7ffffff50cf0[42],%L0x7ffffff50cf8[42]]*X4**1
 /\
F4b =
poly z [%L0x7ffffff50ca0[11],%L0x7ffffff50ca8[11],%L0x7ffffff50cb0[11],
        %L0x7ffffff50cb8[11],%L0x7ffffff50cc0[11],%L0x7ffffff50cc8[11],
        %L0x7ffffff50cd0[11],%L0x7ffffff50cd8[11],%L0x7ffffff50ce0[11],
        %L0x7ffffff50ce8[11],%L0x7ffffff50cf0[11],%L0x7ffffff50cf8[11]]*X4**0+
poly z [%L0x7ffffff50ca0[43],%L0x7ffffff50ca8[43],%L0x7ffffff50cb0[43],
        %L0x7ffffff50cb8[43],%L0x7ffffff50cc0[43],%L0x7ffffff50cc8[43],
        %L0x7ffffff50cd0[43],%L0x7ffffff50cd8[43],%L0x7ffffff50ce0[43],
        %L0x7ffffff50ce8[43],%L0x7ffffff50cf0[43],%L0x7ffffff50cf8[43]]*X4**1
 /\
F4c =
poly z [%L0x7ffffff50ca0[12],%L0x7ffffff50ca8[12],%L0x7ffffff50cb0[12],
        %L0x7ffffff50cb8[12],%L0x7ffffff50cc0[12],%L0x7ffffff50cc8[12],
        %L0x7ffffff50cd0[12],%L0x7ffffff50cd8[12],%L0x7ffffff50ce0[12],
        %L0x7ffffff50ce8[12],%L0x7ffffff50cf0[12],%L0x7ffffff50cf8[12]]*X4**0+
poly z [%L0x7ffffff50ca0[44],%L0x7ffffff50ca8[44],%L0x7ffffff50cb0[44],
        %L0x7ffffff50cb8[44],%L0x7ffffff50cc0[44],%L0x7ffffff50cc8[44],
        %L0x7ffffff50cd0[44],%L0x7ffffff50cd8[44],%L0x7ffffff50ce0[44],
        %L0x7ffffff50ce8[44],%L0x7ffffff50cf0[44],%L0x7ffffff50cf8[44]]*X4**1
 /\
F4d =
poly z [%L0x7ffffff50ca0[13],%L0x7ffffff50ca8[13],%L0x7ffffff50cb0[13],
        %L0x7ffffff50cb8[13],%L0x7ffffff50cc0[13],%L0x7ffffff50cc8[13],
        %L0x7ffffff50cd0[13],%L0x7ffffff50cd8[13],%L0x7ffffff50ce0[13],
        %L0x7ffffff50ce8[13],%L0x7ffffff50cf0[13],%L0x7ffffff50cf8[13]]*X4**0+
poly z [%L0x7ffffff50ca0[45],%L0x7ffffff50ca8[45],%L0x7ffffff50cb0[45],
        %L0x7ffffff50cb8[45],%L0x7ffffff50cc0[45],%L0x7ffffff50cc8[45],
        %L0x7ffffff50cd0[45],%L0x7ffffff50cd8[45],%L0x7ffffff50ce0[45],
        %L0x7ffffff50ce8[45],%L0x7ffffff50cf0[45],%L0x7ffffff50cf8[45]]*X4**1
 /\
F4e =
poly z [%L0x7ffffff50ca0[14],%L0x7ffffff50ca8[14],%L0x7ffffff50cb0[14],
        %L0x7ffffff50cb8[14],%L0x7ffffff50cc0[14],%L0x7ffffff50cc8[14],
        %L0x7ffffff50cd0[14],%L0x7ffffff50cd8[14],%L0x7ffffff50ce0[14],
        %L0x7ffffff50ce8[14],%L0x7ffffff50cf0[14],%L0x7ffffff50cf8[14]]*X4**0+
poly z [%L0x7ffffff50ca0[46],%L0x7ffffff50ca8[46],%L0x7ffffff50cb0[46],
        %L0x7ffffff50cb8[46],%L0x7ffffff50cc0[46],%L0x7ffffff50cc8[46],
        %L0x7ffffff50cd0[46],%L0x7ffffff50cd8[46],%L0x7ffffff50ce0[46],
        %L0x7ffffff50ce8[46],%L0x7ffffff50cf0[46],%L0x7ffffff50cf8[46]]*X4**1
 /\
F4f =
poly z [%L0x7ffffff50ca0[15],%L0x7ffffff50ca8[15],%L0x7ffffff50cb0[15],
        %L0x7ffffff50cb8[15],%L0x7ffffff50cc0[15],%L0x7ffffff50cc8[15],
        %L0x7ffffff50cd0[15],%L0x7ffffff50cd8[15],%L0x7ffffff50ce0[15],
        %L0x7ffffff50ce8[15],%L0x7ffffff50cf0[15],%L0x7ffffff50cf8[15]]*X4**0+
poly z [%L0x7ffffff50ca0[47],%L0x7ffffff50ca8[47],%L0x7ffffff50cb0[47],
        %L0x7ffffff50cb8[47],%L0x7ffffff50cc0[47],%L0x7ffffff50cc8[47],
        %L0x7ffffff50cd0[47],%L0x7ffffff50cd8[47],%L0x7ffffff50ce0[47],
        %L0x7ffffff50ce8[47],%L0x7ffffff50cf0[47],%L0x7ffffff50cf8[47]]*X4**1
 /\
F410 =
poly z [%L0x7ffffff50ca0[16],%L0x7ffffff50ca8[16],%L0x7ffffff50cb0[16],
        %L0x7ffffff50cb8[16],%L0x7ffffff50cc0[16],%L0x7ffffff50cc8[16],
        %L0x7ffffff50cd0[16],%L0x7ffffff50cd8[16],%L0x7ffffff50ce0[16],
        %L0x7ffffff50ce8[16],%L0x7ffffff50cf0[16],%L0x7ffffff50cf8[16]]*X4**0+
poly z [%L0x7ffffff50ca0[48],%L0x7ffffff50ca8[48],%L0x7ffffff50cb0[48],
        %L0x7ffffff50cb8[48],%L0x7ffffff50cc0[48],%L0x7ffffff50cc8[48],
        %L0x7ffffff50cd0[48],%L0x7ffffff50cd8[48],%L0x7ffffff50ce0[48],
        %L0x7ffffff50ce8[48],%L0x7ffffff50cf0[48],%L0x7ffffff50cf8[48]]*X4**1
 /\
F411 =
poly z [%L0x7ffffff50ca0[17],%L0x7ffffff50ca8[17],%L0x7ffffff50cb0[17],
        %L0x7ffffff50cb8[17],%L0x7ffffff50cc0[17],%L0x7ffffff50cc8[17],
        %L0x7ffffff50cd0[17],%L0x7ffffff50cd8[17],%L0x7ffffff50ce0[17],
        %L0x7ffffff50ce8[17],%L0x7ffffff50cf0[17],%L0x7ffffff50cf8[17]]*X4**0+
poly z [%L0x7ffffff50ca0[49],%L0x7ffffff50ca8[49],%L0x7ffffff50cb0[49],
        %L0x7ffffff50cb8[49],%L0x7ffffff50cc0[49],%L0x7ffffff50cc8[49],
        %L0x7ffffff50cd0[49],%L0x7ffffff50cd8[49],%L0x7ffffff50ce0[49],
        %L0x7ffffff50ce8[49],%L0x7ffffff50cf0[49],%L0x7ffffff50cf8[49]]*X4**1
 /\
F412 =
poly z [%L0x7ffffff50ca0[18],%L0x7ffffff50ca8[18],%L0x7ffffff50cb0[18],
        %L0x7ffffff50cb8[18],%L0x7ffffff50cc0[18],%L0x7ffffff50cc8[18],
        %L0x7ffffff50cd0[18],%L0x7ffffff50cd8[18],%L0x7ffffff50ce0[18],
        %L0x7ffffff50ce8[18],%L0x7ffffff50cf0[18],%L0x7ffffff50cf8[18]]*X4**0+
poly z [%L0x7ffffff50ca0[50],%L0x7ffffff50ca8[50],%L0x7ffffff50cb0[50],
        %L0x7ffffff50cb8[50],%L0x7ffffff50cc0[50],%L0x7ffffff50cc8[50],
        %L0x7ffffff50cd0[50],%L0x7ffffff50cd8[50],%L0x7ffffff50ce0[50],
        %L0x7ffffff50ce8[50],%L0x7ffffff50cf0[50],%L0x7ffffff50cf8[50]]*X4**1
 /\
F413 =
poly z [%L0x7ffffff50ca0[19],%L0x7ffffff50ca8[19],%L0x7ffffff50cb0[19],
        %L0x7ffffff50cb8[19],%L0x7ffffff50cc0[19],%L0x7ffffff50cc8[19],
        %L0x7ffffff50cd0[19],%L0x7ffffff50cd8[19],%L0x7ffffff50ce0[19],
        %L0x7ffffff50ce8[19],%L0x7ffffff50cf0[19],%L0x7ffffff50cf8[19]]*X4**0+
poly z [%L0x7ffffff50ca0[51],%L0x7ffffff50ca8[51],%L0x7ffffff50cb0[51],
        %L0x7ffffff50cb8[51],%L0x7ffffff50cc0[51],%L0x7ffffff50cc8[51],
        %L0x7ffffff50cd0[51],%L0x7ffffff50cd8[51],%L0x7ffffff50ce0[51],
        %L0x7ffffff50ce8[51],%L0x7ffffff50cf0[51],%L0x7ffffff50cf8[51]]*X4**1
 /\
F414 =
poly z [%L0x7ffffff50ca0[20],%L0x7ffffff50ca8[20],%L0x7ffffff50cb0[20],
        %L0x7ffffff50cb8[20],%L0x7ffffff50cc0[20],%L0x7ffffff50cc8[20],
        %L0x7ffffff50cd0[20],%L0x7ffffff50cd8[20],%L0x7ffffff50ce0[20],
        %L0x7ffffff50ce8[20],%L0x7ffffff50cf0[20],%L0x7ffffff50cf8[20]]*X4**0+
poly z [%L0x7ffffff50ca0[52],%L0x7ffffff50ca8[52],%L0x7ffffff50cb0[52],
        %L0x7ffffff50cb8[52],%L0x7ffffff50cc0[52],%L0x7ffffff50cc8[52],
        %L0x7ffffff50cd0[52],%L0x7ffffff50cd8[52],%L0x7ffffff50ce0[52],
        %L0x7ffffff50ce8[52],%L0x7ffffff50cf0[52],%L0x7ffffff50cf8[52]]*X4**1
 /\
F415 =
poly z [%L0x7ffffff50ca0[21],%L0x7ffffff50ca8[21],%L0x7ffffff50cb0[21],
        %L0x7ffffff50cb8[21],%L0x7ffffff50cc0[21],%L0x7ffffff50cc8[21],
        %L0x7ffffff50cd0[21],%L0x7ffffff50cd8[21],%L0x7ffffff50ce0[21],
        %L0x7ffffff50ce8[21],%L0x7ffffff50cf0[21],%L0x7ffffff50cf8[21]]*X4**0+
poly z [%L0x7ffffff50ca0[53],%L0x7ffffff50ca8[53],%L0x7ffffff50cb0[53],
        %L0x7ffffff50cb8[53],%L0x7ffffff50cc0[53],%L0x7ffffff50cc8[53],
        %L0x7ffffff50cd0[53],%L0x7ffffff50cd8[53],%L0x7ffffff50ce0[53],
        %L0x7ffffff50ce8[53],%L0x7ffffff50cf0[53],%L0x7ffffff50cf8[53]]*X4**1
 /\
F416 =
poly z [%L0x7ffffff50ca0[22],%L0x7ffffff50ca8[22],%L0x7ffffff50cb0[22],
        %L0x7ffffff50cb8[22],%L0x7ffffff50cc0[22],%L0x7ffffff50cc8[22],
        %L0x7ffffff50cd0[22],%L0x7ffffff50cd8[22],%L0x7ffffff50ce0[22],
        %L0x7ffffff50ce8[22],%L0x7ffffff50cf0[22],%L0x7ffffff50cf8[22]]*X4**0+
poly z [%L0x7ffffff50ca0[54],%L0x7ffffff50ca8[54],%L0x7ffffff50cb0[54],
        %L0x7ffffff50cb8[54],%L0x7ffffff50cc0[54],%L0x7ffffff50cc8[54],
        %L0x7ffffff50cd0[54],%L0x7ffffff50cd8[54],%L0x7ffffff50ce0[54],
        %L0x7ffffff50ce8[54],%L0x7ffffff50cf0[54],%L0x7ffffff50cf8[54]]*X4**1
 /\
F417 =
poly z [%L0x7ffffff50ca0[23],%L0x7ffffff50ca8[23],%L0x7ffffff50cb0[23],
        %L0x7ffffff50cb8[23],%L0x7ffffff50cc0[23],%L0x7ffffff50cc8[23],
        %L0x7ffffff50cd0[23],%L0x7ffffff50cd8[23],%L0x7ffffff50ce0[23],
        %L0x7ffffff50ce8[23],%L0x7ffffff50cf0[23],%L0x7ffffff50cf8[23]]*X4**0+
poly z [%L0x7ffffff50ca0[55],%L0x7ffffff50ca8[55],%L0x7ffffff50cb0[55],
        %L0x7ffffff50cb8[55],%L0x7ffffff50cc0[55],%L0x7ffffff50cc8[55],
        %L0x7ffffff50cd0[55],%L0x7ffffff50cd8[55],%L0x7ffffff50ce0[55],
        %L0x7ffffff50ce8[55],%L0x7ffffff50cf0[55],%L0x7ffffff50cf8[55]]*X4**1
 /\
F418 =
poly z [%L0x7ffffff50ca0[24],%L0x7ffffff50ca8[24],%L0x7ffffff50cb0[24],
        %L0x7ffffff50cb8[24],%L0x7ffffff50cc0[24],%L0x7ffffff50cc8[24],
        %L0x7ffffff50cd0[24],%L0x7ffffff50cd8[24],%L0x7ffffff50ce0[24],
        %L0x7ffffff50ce8[24],%L0x7ffffff50cf0[24],%L0x7ffffff50cf8[24]]*X4**0+
poly z [%L0x7ffffff50ca0[56],%L0x7ffffff50ca8[56],%L0x7ffffff50cb0[56],
        %L0x7ffffff50cb8[56],%L0x7ffffff50cc0[56],%L0x7ffffff50cc8[56],
        %L0x7ffffff50cd0[56],%L0x7ffffff50cd8[56],%L0x7ffffff50ce0[56],
        %L0x7ffffff50ce8[56],%L0x7ffffff50cf0[56],%L0x7ffffff50cf8[56]]*X4**1
 /\
F419 =
poly z [%L0x7ffffff50ca0[25],%L0x7ffffff50ca8[25],%L0x7ffffff50cb0[25],
        %L0x7ffffff50cb8[25],%L0x7ffffff50cc0[25],%L0x7ffffff50cc8[25],
        %L0x7ffffff50cd0[25],%L0x7ffffff50cd8[25],%L0x7ffffff50ce0[25],
        %L0x7ffffff50ce8[25],%L0x7ffffff50cf0[25],%L0x7ffffff50cf8[25]]*X4**0+
poly z [%L0x7ffffff50ca0[57],%L0x7ffffff50ca8[57],%L0x7ffffff50cb0[57],
        %L0x7ffffff50cb8[57],%L0x7ffffff50cc0[57],%L0x7ffffff50cc8[57],
        %L0x7ffffff50cd0[57],%L0x7ffffff50cd8[57],%L0x7ffffff50ce0[57],
        %L0x7ffffff50ce8[57],%L0x7ffffff50cf0[57],%L0x7ffffff50cf8[57]]*X4**1
 /\
F41a =
poly z [%L0x7ffffff50ca0[26],%L0x7ffffff50ca8[26],%L0x7ffffff50cb0[26],
        %L0x7ffffff50cb8[26],%L0x7ffffff50cc0[26],%L0x7ffffff50cc8[26],
        %L0x7ffffff50cd0[26],%L0x7ffffff50cd8[26],%L0x7ffffff50ce0[26],
        %L0x7ffffff50ce8[26],%L0x7ffffff50cf0[26],%L0x7ffffff50cf8[26]]*X4**0+
poly z [%L0x7ffffff50ca0[58],%L0x7ffffff50ca8[58],%L0x7ffffff50cb0[58],
        %L0x7ffffff50cb8[58],%L0x7ffffff50cc0[58],%L0x7ffffff50cc8[58],
        %L0x7ffffff50cd0[58],%L0x7ffffff50cd8[58],%L0x7ffffff50ce0[58],
        %L0x7ffffff50ce8[58],%L0x7ffffff50cf0[58],%L0x7ffffff50cf8[58]]*X4**1
 /\
F41b =
poly z [%L0x7ffffff50ca0[27],%L0x7ffffff50ca8[27],%L0x7ffffff50cb0[27],
        %L0x7ffffff50cb8[27],%L0x7ffffff50cc0[27],%L0x7ffffff50cc8[27],
        %L0x7ffffff50cd0[27],%L0x7ffffff50cd8[27],%L0x7ffffff50ce0[27],
        %L0x7ffffff50ce8[27],%L0x7ffffff50cf0[27],%L0x7ffffff50cf8[27]]*X4**0+
poly z [%L0x7ffffff50ca0[59],%L0x7ffffff50ca8[59],%L0x7ffffff50cb0[59],
        %L0x7ffffff50cb8[59],%L0x7ffffff50cc0[59],%L0x7ffffff50cc8[59],
        %L0x7ffffff50cd0[59],%L0x7ffffff50cd8[59],%L0x7ffffff50ce0[59],
        %L0x7ffffff50ce8[59],%L0x7ffffff50cf0[59],%L0x7ffffff50cf8[59]]*X4**1
 /\
F41c =
poly z [%L0x7ffffff50ca0[28],%L0x7ffffff50ca8[28],%L0x7ffffff50cb0[28],
        %L0x7ffffff50cb8[28],%L0x7ffffff50cc0[28],%L0x7ffffff50cc8[28],
        %L0x7ffffff50cd0[28],%L0x7ffffff50cd8[28],%L0x7ffffff50ce0[28],
        %L0x7ffffff50ce8[28],%L0x7ffffff50cf0[28],%L0x7ffffff50cf8[28]]*X4**0+
poly z [%L0x7ffffff50ca0[60],%L0x7ffffff50ca8[60],%L0x7ffffff50cb0[60],
        %L0x7ffffff50cb8[60],%L0x7ffffff50cc0[60],%L0x7ffffff50cc8[60],
        %L0x7ffffff50cd0[60],%L0x7ffffff50cd8[60],%L0x7ffffff50ce0[60],
        %L0x7ffffff50ce8[60],%L0x7ffffff50cf0[60],%L0x7ffffff50cf8[60]]*X4**1
 /\
F41d =
poly z [%L0x7ffffff50ca0[29],%L0x7ffffff50ca8[29],%L0x7ffffff50cb0[29],
        %L0x7ffffff50cb8[29],%L0x7ffffff50cc0[29],%L0x7ffffff50cc8[29],
        %L0x7ffffff50cd0[29],%L0x7ffffff50cd8[29],%L0x7ffffff50ce0[29],
        %L0x7ffffff50ce8[29],%L0x7ffffff50cf0[29],%L0x7ffffff50cf8[29]]*X4**0+
poly z [%L0x7ffffff50ca0[61],%L0x7ffffff50ca8[61],%L0x7ffffff50cb0[61],
        %L0x7ffffff50cb8[61],%L0x7ffffff50cc0[61],%L0x7ffffff50cc8[61],
        %L0x7ffffff50cd0[61],%L0x7ffffff50cd8[61],%L0x7ffffff50ce0[61],
        %L0x7ffffff50ce8[61],%L0x7ffffff50cf0[61],%L0x7ffffff50cf8[61]]*X4**1
 /\
F41e =
poly z [%L0x7ffffff50ca0[30],%L0x7ffffff50ca8[30],%L0x7ffffff50cb0[30],
        %L0x7ffffff50cb8[30],%L0x7ffffff50cc0[30],%L0x7ffffff50cc8[30],
        %L0x7ffffff50cd0[30],%L0x7ffffff50cd8[30],%L0x7ffffff50ce0[30],
        %L0x7ffffff50ce8[30],%L0x7ffffff50cf0[30],%L0x7ffffff50cf8[30]]*X4**0+
poly z [%L0x7ffffff50ca0[62],%L0x7ffffff50ca8[62],%L0x7ffffff50cb0[62],
        %L0x7ffffff50cb8[62],%L0x7ffffff50cc0[62],%L0x7ffffff50cc8[62],
        %L0x7ffffff50cd0[62],%L0x7ffffff50cd8[62],%L0x7ffffff50ce0[62],
        %L0x7ffffff50ce8[62],%L0x7ffffff50cf0[62],%L0x7ffffff50cf8[62]]*X4**1
 /\
F41f =
poly z [%L0x7ffffff50ca0[31],%L0x7ffffff50ca8[31],%L0x7ffffff50cb0[31],
        %L0x7ffffff50cb8[31],%L0x7ffffff50cc0[31],%L0x7ffffff50cc8[31],
        %L0x7ffffff50cd0[31],%L0x7ffffff50cd8[31],%L0x7ffffff50ce0[31],
        %L0x7ffffff50ce8[31],%L0x7ffffff50cf0[31],%L0x7ffffff50cf8[31]]*X4**0+
poly z [%L0x7ffffff50ca0[63],%L0x7ffffff50ca8[63],%L0x7ffffff50cb0[63],
        %L0x7ffffff50cb8[63],%L0x7ffffff50cc0[63],%L0x7ffffff50cc8[63],
        %L0x7ffffff50cd0[63],%L0x7ffffff50cd8[63],%L0x7ffffff50ce0[63],
        %L0x7ffffff50ce8[63],%L0x7ffffff50cf0[63],%L0x7ffffff50cf8[63]]*X4**1
&& true;

(* 8 *)
cut eqmod G30 (F40+Y3*F410) [2, z**12+z**3+1] /\
    eqmod G31 (F41+Y3*F411) [2, z**12+z**3+1] /\
    eqmod G32 (F42+Y3*F412) [2, z**12+z**3+1] /\
    eqmod G33 (F43+Y3*F413) [2, z**12+z**3+1] /\
    eqmod G34 (F44+Y3*F414) [2, z**12+z**3+1] /\
    eqmod G35 (F45+Y3*F415) [2, z**12+z**3+1] /\
    eqmod G36 (F46+Y3*F416) [2, z**12+z**3+1] /\
    eqmod G37 (F47+Y3*F417) [2, z**12+z**3+1] /\
    eqmod G38 (F48+Y3*F418) [2, z**12+z**3+1] /\
    eqmod G39 (F49+Y3*F419) [2, z**12+z**3+1] /\
    eqmod G3a (F4a+Y3*F41a) [2, z**12+z**3+1] /\
    eqmod G3b (F4b+Y3*F41b) [2, z**12+z**3+1] /\
    eqmod G3c (F4c+Y3*F41c) [2, z**12+z**3+1] /\
    eqmod G3d (F4d+Y3*F41d) [2, z**12+z**3+1] /\
    eqmod G3e (F4e+Y3*F41e) [2, z**12+z**3+1] /\
    eqmod G3f (F4f+Y3*F41f) [2, z**12+z**3+1] /\
F40 =
poly z [%L0x7ffffff50ca0[0],%L0x7ffffff50ca8[0],%L0x7ffffff50cb0[0],
        %L0x7ffffff50cb8[0],%L0x7ffffff50cc0[0],%L0x7ffffff50cc8[0],
        %L0x7ffffff50cd0[0],%L0x7ffffff50cd8[0],%L0x7ffffff50ce0[0],
        %L0x7ffffff50ce8[0],%L0x7ffffff50cf0[0],%L0x7ffffff50cf8[0]]*X4**0+
poly z [%L0x7ffffff50ca0[32],%L0x7ffffff50ca8[32],%L0x7ffffff50cb0[32],
        %L0x7ffffff50cb8[32],%L0x7ffffff50cc0[32],%L0x7ffffff50cc8[32],
        %L0x7ffffff50cd0[32],%L0x7ffffff50cd8[32],%L0x7ffffff50ce0[32],
        %L0x7ffffff50ce8[32],%L0x7ffffff50cf0[32],%L0x7ffffff50cf8[32]]*X4**1
 /\
F41 =
poly z [%L0x7ffffff50ca0[1],%L0x7ffffff50ca8[1],%L0x7ffffff50cb0[1],
        %L0x7ffffff50cb8[1],%L0x7ffffff50cc0[1],%L0x7ffffff50cc8[1],
        %L0x7ffffff50cd0[1],%L0x7ffffff50cd8[1],%L0x7ffffff50ce0[1],
        %L0x7ffffff50ce8[1],%L0x7ffffff50cf0[1],%L0x7ffffff50cf8[1]]*X4**0+
poly z [%L0x7ffffff50ca0[33],%L0x7ffffff50ca8[33],%L0x7ffffff50cb0[33],
        %L0x7ffffff50cb8[33],%L0x7ffffff50cc0[33],%L0x7ffffff50cc8[33],
        %L0x7ffffff50cd0[33],%L0x7ffffff50cd8[33],%L0x7ffffff50ce0[33],
        %L0x7ffffff50ce8[33],%L0x7ffffff50cf0[33],%L0x7ffffff50cf8[33]]*X4**1
 /\
F42 =
poly z [%L0x7ffffff50ca0[2],%L0x7ffffff50ca8[2],%L0x7ffffff50cb0[2],
        %L0x7ffffff50cb8[2],%L0x7ffffff50cc0[2],%L0x7ffffff50cc8[2],
        %L0x7ffffff50cd0[2],%L0x7ffffff50cd8[2],%L0x7ffffff50ce0[2],
        %L0x7ffffff50ce8[2],%L0x7ffffff50cf0[2],%L0x7ffffff50cf8[2]]*X4**0+
poly z [%L0x7ffffff50ca0[34],%L0x7ffffff50ca8[34],%L0x7ffffff50cb0[34],
        %L0x7ffffff50cb8[34],%L0x7ffffff50cc0[34],%L0x7ffffff50cc8[34],
        %L0x7ffffff50cd0[34],%L0x7ffffff50cd8[34],%L0x7ffffff50ce0[34],
        %L0x7ffffff50ce8[34],%L0x7ffffff50cf0[34],%L0x7ffffff50cf8[34]]*X4**1
 /\
F43 =
poly z [%L0x7ffffff50ca0[3],%L0x7ffffff50ca8[3],%L0x7ffffff50cb0[3],
        %L0x7ffffff50cb8[3],%L0x7ffffff50cc0[3],%L0x7ffffff50cc8[3],
        %L0x7ffffff50cd0[3],%L0x7ffffff50cd8[3],%L0x7ffffff50ce0[3],
        %L0x7ffffff50ce8[3],%L0x7ffffff50cf0[3],%L0x7ffffff50cf8[3]]*X4**0+
poly z [%L0x7ffffff50ca0[35],%L0x7ffffff50ca8[35],%L0x7ffffff50cb0[35],
        %L0x7ffffff50cb8[35],%L0x7ffffff50cc0[35],%L0x7ffffff50cc8[35],
        %L0x7ffffff50cd0[35],%L0x7ffffff50cd8[35],%L0x7ffffff50ce0[35],
        %L0x7ffffff50ce8[35],%L0x7ffffff50cf0[35],%L0x7ffffff50cf8[35]]*X4**1
 /\
F44 =
poly z [%L0x7ffffff50ca0[4],%L0x7ffffff50ca8[4],%L0x7ffffff50cb0[4],
        %L0x7ffffff50cb8[4],%L0x7ffffff50cc0[4],%L0x7ffffff50cc8[4],
        %L0x7ffffff50cd0[4],%L0x7ffffff50cd8[4],%L0x7ffffff50ce0[4],
        %L0x7ffffff50ce8[4],%L0x7ffffff50cf0[4],%L0x7ffffff50cf8[4]]*X4**0+
poly z [%L0x7ffffff50ca0[36],%L0x7ffffff50ca8[36],%L0x7ffffff50cb0[36],
        %L0x7ffffff50cb8[36],%L0x7ffffff50cc0[36],%L0x7ffffff50cc8[36],
        %L0x7ffffff50cd0[36],%L0x7ffffff50cd8[36],%L0x7ffffff50ce0[36],
        %L0x7ffffff50ce8[36],%L0x7ffffff50cf0[36],%L0x7ffffff50cf8[36]]*X4**1
 /\
F45 =
poly z [%L0x7ffffff50ca0[5],%L0x7ffffff50ca8[5],%L0x7ffffff50cb0[5],
        %L0x7ffffff50cb8[5],%L0x7ffffff50cc0[5],%L0x7ffffff50cc8[5],
        %L0x7ffffff50cd0[5],%L0x7ffffff50cd8[5],%L0x7ffffff50ce0[5],
        %L0x7ffffff50ce8[5],%L0x7ffffff50cf0[5],%L0x7ffffff50cf8[5]]*X4**0+
poly z [%L0x7ffffff50ca0[37],%L0x7ffffff50ca8[37],%L0x7ffffff50cb0[37],
        %L0x7ffffff50cb8[37],%L0x7ffffff50cc0[37],%L0x7ffffff50cc8[37],
        %L0x7ffffff50cd0[37],%L0x7ffffff50cd8[37],%L0x7ffffff50ce0[37],
        %L0x7ffffff50ce8[37],%L0x7ffffff50cf0[37],%L0x7ffffff50cf8[37]]*X4**1
 /\
F46 =
poly z [%L0x7ffffff50ca0[6],%L0x7ffffff50ca8[6],%L0x7ffffff50cb0[6],
        %L0x7ffffff50cb8[6],%L0x7ffffff50cc0[6],%L0x7ffffff50cc8[6],
        %L0x7ffffff50cd0[6],%L0x7ffffff50cd8[6],%L0x7ffffff50ce0[6],
        %L0x7ffffff50ce8[6],%L0x7ffffff50cf0[6],%L0x7ffffff50cf8[6]]*X4**0+
poly z [%L0x7ffffff50ca0[38],%L0x7ffffff50ca8[38],%L0x7ffffff50cb0[38],
        %L0x7ffffff50cb8[38],%L0x7ffffff50cc0[38],%L0x7ffffff50cc8[38],
        %L0x7ffffff50cd0[38],%L0x7ffffff50cd8[38],%L0x7ffffff50ce0[38],
        %L0x7ffffff50ce8[38],%L0x7ffffff50cf0[38],%L0x7ffffff50cf8[38]]*X4**1
 /\
F47 =
poly z [%L0x7ffffff50ca0[7],%L0x7ffffff50ca8[7],%L0x7ffffff50cb0[7],
        %L0x7ffffff50cb8[7],%L0x7ffffff50cc0[7],%L0x7ffffff50cc8[7],
        %L0x7ffffff50cd0[7],%L0x7ffffff50cd8[7],%L0x7ffffff50ce0[7],
        %L0x7ffffff50ce8[7],%L0x7ffffff50cf0[7],%L0x7ffffff50cf8[7]]*X4**0+
poly z [%L0x7ffffff50ca0[39],%L0x7ffffff50ca8[39],%L0x7ffffff50cb0[39],
        %L0x7ffffff50cb8[39],%L0x7ffffff50cc0[39],%L0x7ffffff50cc8[39],
        %L0x7ffffff50cd0[39],%L0x7ffffff50cd8[39],%L0x7ffffff50ce0[39],
        %L0x7ffffff50ce8[39],%L0x7ffffff50cf0[39],%L0x7ffffff50cf8[39]]*X4**1
 /\
F48 =
poly z [%L0x7ffffff50ca0[8],%L0x7ffffff50ca8[8],%L0x7ffffff50cb0[8],
        %L0x7ffffff50cb8[8],%L0x7ffffff50cc0[8],%L0x7ffffff50cc8[8],
        %L0x7ffffff50cd0[8],%L0x7ffffff50cd8[8],%L0x7ffffff50ce0[8],
        %L0x7ffffff50ce8[8],%L0x7ffffff50cf0[8],%L0x7ffffff50cf8[8]]*X4**0+
poly z [%L0x7ffffff50ca0[40],%L0x7ffffff50ca8[40],%L0x7ffffff50cb0[40],
        %L0x7ffffff50cb8[40],%L0x7ffffff50cc0[40],%L0x7ffffff50cc8[40],
        %L0x7ffffff50cd0[40],%L0x7ffffff50cd8[40],%L0x7ffffff50ce0[40],
        %L0x7ffffff50ce8[40],%L0x7ffffff50cf0[40],%L0x7ffffff50cf8[40]]*X4**1
 /\
F49 =
poly z [%L0x7ffffff50ca0[9],%L0x7ffffff50ca8[9],%L0x7ffffff50cb0[9],
        %L0x7ffffff50cb8[9],%L0x7ffffff50cc0[9],%L0x7ffffff50cc8[9],
        %L0x7ffffff50cd0[9],%L0x7ffffff50cd8[9],%L0x7ffffff50ce0[9],
        %L0x7ffffff50ce8[9],%L0x7ffffff50cf0[9],%L0x7ffffff50cf8[9]]*X4**0+
poly z [%L0x7ffffff50ca0[41],%L0x7ffffff50ca8[41],%L0x7ffffff50cb0[41],
        %L0x7ffffff50cb8[41],%L0x7ffffff50cc0[41],%L0x7ffffff50cc8[41],
        %L0x7ffffff50cd0[41],%L0x7ffffff50cd8[41],%L0x7ffffff50ce0[41],
        %L0x7ffffff50ce8[41],%L0x7ffffff50cf0[41],%L0x7ffffff50cf8[41]]*X4**1
 /\
F4a =
poly z [%L0x7ffffff50ca0[10],%L0x7ffffff50ca8[10],%L0x7ffffff50cb0[10],
        %L0x7ffffff50cb8[10],%L0x7ffffff50cc0[10],%L0x7ffffff50cc8[10],
        %L0x7ffffff50cd0[10],%L0x7ffffff50cd8[10],%L0x7ffffff50ce0[10],
        %L0x7ffffff50ce8[10],%L0x7ffffff50cf0[10],%L0x7ffffff50cf8[10]]*X4**0+
poly z [%L0x7ffffff50ca0[42],%L0x7ffffff50ca8[42],%L0x7ffffff50cb0[42],
        %L0x7ffffff50cb8[42],%L0x7ffffff50cc0[42],%L0x7ffffff50cc8[42],
        %L0x7ffffff50cd0[42],%L0x7ffffff50cd8[42],%L0x7ffffff50ce0[42],
        %L0x7ffffff50ce8[42],%L0x7ffffff50cf0[42],%L0x7ffffff50cf8[42]]*X4**1
 /\
F4b =
poly z [%L0x7ffffff50ca0[11],%L0x7ffffff50ca8[11],%L0x7ffffff50cb0[11],
        %L0x7ffffff50cb8[11],%L0x7ffffff50cc0[11],%L0x7ffffff50cc8[11],
        %L0x7ffffff50cd0[11],%L0x7ffffff50cd8[11],%L0x7ffffff50ce0[11],
        %L0x7ffffff50ce8[11],%L0x7ffffff50cf0[11],%L0x7ffffff50cf8[11]]*X4**0+
poly z [%L0x7ffffff50ca0[43],%L0x7ffffff50ca8[43],%L0x7ffffff50cb0[43],
        %L0x7ffffff50cb8[43],%L0x7ffffff50cc0[43],%L0x7ffffff50cc8[43],
        %L0x7ffffff50cd0[43],%L0x7ffffff50cd8[43],%L0x7ffffff50ce0[43],
        %L0x7ffffff50ce8[43],%L0x7ffffff50cf0[43],%L0x7ffffff50cf8[43]]*X4**1
 /\
F4c =
poly z [%L0x7ffffff50ca0[12],%L0x7ffffff50ca8[12],%L0x7ffffff50cb0[12],
        %L0x7ffffff50cb8[12],%L0x7ffffff50cc0[12],%L0x7ffffff50cc8[12],
        %L0x7ffffff50cd0[12],%L0x7ffffff50cd8[12],%L0x7ffffff50ce0[12],
        %L0x7ffffff50ce8[12],%L0x7ffffff50cf0[12],%L0x7ffffff50cf8[12]]*X4**0+
poly z [%L0x7ffffff50ca0[44],%L0x7ffffff50ca8[44],%L0x7ffffff50cb0[44],
        %L0x7ffffff50cb8[44],%L0x7ffffff50cc0[44],%L0x7ffffff50cc8[44],
        %L0x7ffffff50cd0[44],%L0x7ffffff50cd8[44],%L0x7ffffff50ce0[44],
        %L0x7ffffff50ce8[44],%L0x7ffffff50cf0[44],%L0x7ffffff50cf8[44]]*X4**1
 /\
F4d =
poly z [%L0x7ffffff50ca0[13],%L0x7ffffff50ca8[13],%L0x7ffffff50cb0[13],
        %L0x7ffffff50cb8[13],%L0x7ffffff50cc0[13],%L0x7ffffff50cc8[13],
        %L0x7ffffff50cd0[13],%L0x7ffffff50cd8[13],%L0x7ffffff50ce0[13],
        %L0x7ffffff50ce8[13],%L0x7ffffff50cf0[13],%L0x7ffffff50cf8[13]]*X4**0+
poly z [%L0x7ffffff50ca0[45],%L0x7ffffff50ca8[45],%L0x7ffffff50cb0[45],
        %L0x7ffffff50cb8[45],%L0x7ffffff50cc0[45],%L0x7ffffff50cc8[45],
        %L0x7ffffff50cd0[45],%L0x7ffffff50cd8[45],%L0x7ffffff50ce0[45],
        %L0x7ffffff50ce8[45],%L0x7ffffff50cf0[45],%L0x7ffffff50cf8[45]]*X4**1
 /\
F4e =
poly z [%L0x7ffffff50ca0[14],%L0x7ffffff50ca8[14],%L0x7ffffff50cb0[14],
        %L0x7ffffff50cb8[14],%L0x7ffffff50cc0[14],%L0x7ffffff50cc8[14],
        %L0x7ffffff50cd0[14],%L0x7ffffff50cd8[14],%L0x7ffffff50ce0[14],
        %L0x7ffffff50ce8[14],%L0x7ffffff50cf0[14],%L0x7ffffff50cf8[14]]*X4**0+
poly z [%L0x7ffffff50ca0[46],%L0x7ffffff50ca8[46],%L0x7ffffff50cb0[46],
        %L0x7ffffff50cb8[46],%L0x7ffffff50cc0[46],%L0x7ffffff50cc8[46],
        %L0x7ffffff50cd0[46],%L0x7ffffff50cd8[46],%L0x7ffffff50ce0[46],
        %L0x7ffffff50ce8[46],%L0x7ffffff50cf0[46],%L0x7ffffff50cf8[46]]*X4**1
 /\
F4f =
poly z [%L0x7ffffff50ca0[15],%L0x7ffffff50ca8[15],%L0x7ffffff50cb0[15],
        %L0x7ffffff50cb8[15],%L0x7ffffff50cc0[15],%L0x7ffffff50cc8[15],
        %L0x7ffffff50cd0[15],%L0x7ffffff50cd8[15],%L0x7ffffff50ce0[15],
        %L0x7ffffff50ce8[15],%L0x7ffffff50cf0[15],%L0x7ffffff50cf8[15]]*X4**0+
poly z [%L0x7ffffff50ca0[47],%L0x7ffffff50ca8[47],%L0x7ffffff50cb0[47],
        %L0x7ffffff50cb8[47],%L0x7ffffff50cc0[47],%L0x7ffffff50cc8[47],
        %L0x7ffffff50cd0[47],%L0x7ffffff50cd8[47],%L0x7ffffff50ce0[47],
        %L0x7ffffff50ce8[47],%L0x7ffffff50cf0[47],%L0x7ffffff50cf8[47]]*X4**1
 /\
F410 =
poly z [%L0x7ffffff50ca0[16],%L0x7ffffff50ca8[16],%L0x7ffffff50cb0[16],
        %L0x7ffffff50cb8[16],%L0x7ffffff50cc0[16],%L0x7ffffff50cc8[16],
        %L0x7ffffff50cd0[16],%L0x7ffffff50cd8[16],%L0x7ffffff50ce0[16],
        %L0x7ffffff50ce8[16],%L0x7ffffff50cf0[16],%L0x7ffffff50cf8[16]]*X4**0+
poly z [%L0x7ffffff50ca0[48],%L0x7ffffff50ca8[48],%L0x7ffffff50cb0[48],
        %L0x7ffffff50cb8[48],%L0x7ffffff50cc0[48],%L0x7ffffff50cc8[48],
        %L0x7ffffff50cd0[48],%L0x7ffffff50cd8[48],%L0x7ffffff50ce0[48],
        %L0x7ffffff50ce8[48],%L0x7ffffff50cf0[48],%L0x7ffffff50cf8[48]]*X4**1
 /\
F411 =
poly z [%L0x7ffffff50ca0[17],%L0x7ffffff50ca8[17],%L0x7ffffff50cb0[17],
        %L0x7ffffff50cb8[17],%L0x7ffffff50cc0[17],%L0x7ffffff50cc8[17],
        %L0x7ffffff50cd0[17],%L0x7ffffff50cd8[17],%L0x7ffffff50ce0[17],
        %L0x7ffffff50ce8[17],%L0x7ffffff50cf0[17],%L0x7ffffff50cf8[17]]*X4**0+
poly z [%L0x7ffffff50ca0[49],%L0x7ffffff50ca8[49],%L0x7ffffff50cb0[49],
        %L0x7ffffff50cb8[49],%L0x7ffffff50cc0[49],%L0x7ffffff50cc8[49],
        %L0x7ffffff50cd0[49],%L0x7ffffff50cd8[49],%L0x7ffffff50ce0[49],
        %L0x7ffffff50ce8[49],%L0x7ffffff50cf0[49],%L0x7ffffff50cf8[49]]*X4**1
 /\
F412 =
poly z [%L0x7ffffff50ca0[18],%L0x7ffffff50ca8[18],%L0x7ffffff50cb0[18],
        %L0x7ffffff50cb8[18],%L0x7ffffff50cc0[18],%L0x7ffffff50cc8[18],
        %L0x7ffffff50cd0[18],%L0x7ffffff50cd8[18],%L0x7ffffff50ce0[18],
        %L0x7ffffff50ce8[18],%L0x7ffffff50cf0[18],%L0x7ffffff50cf8[18]]*X4**0+
poly z [%L0x7ffffff50ca0[50],%L0x7ffffff50ca8[50],%L0x7ffffff50cb0[50],
        %L0x7ffffff50cb8[50],%L0x7ffffff50cc0[50],%L0x7ffffff50cc8[50],
        %L0x7ffffff50cd0[50],%L0x7ffffff50cd8[50],%L0x7ffffff50ce0[50],
        %L0x7ffffff50ce8[50],%L0x7ffffff50cf0[50],%L0x7ffffff50cf8[50]]*X4**1
 /\
F413 =
poly z [%L0x7ffffff50ca0[19],%L0x7ffffff50ca8[19],%L0x7ffffff50cb0[19],
        %L0x7ffffff50cb8[19],%L0x7ffffff50cc0[19],%L0x7ffffff50cc8[19],
        %L0x7ffffff50cd0[19],%L0x7ffffff50cd8[19],%L0x7ffffff50ce0[19],
        %L0x7ffffff50ce8[19],%L0x7ffffff50cf0[19],%L0x7ffffff50cf8[19]]*X4**0+
poly z [%L0x7ffffff50ca0[51],%L0x7ffffff50ca8[51],%L0x7ffffff50cb0[51],
        %L0x7ffffff50cb8[51],%L0x7ffffff50cc0[51],%L0x7ffffff50cc8[51],
        %L0x7ffffff50cd0[51],%L0x7ffffff50cd8[51],%L0x7ffffff50ce0[51],
        %L0x7ffffff50ce8[51],%L0x7ffffff50cf0[51],%L0x7ffffff50cf8[51]]*X4**1
 /\
F414 =
poly z [%L0x7ffffff50ca0[20],%L0x7ffffff50ca8[20],%L0x7ffffff50cb0[20],
        %L0x7ffffff50cb8[20],%L0x7ffffff50cc0[20],%L0x7ffffff50cc8[20],
        %L0x7ffffff50cd0[20],%L0x7ffffff50cd8[20],%L0x7ffffff50ce0[20],
        %L0x7ffffff50ce8[20],%L0x7ffffff50cf0[20],%L0x7ffffff50cf8[20]]*X4**0+
poly z [%L0x7ffffff50ca0[52],%L0x7ffffff50ca8[52],%L0x7ffffff50cb0[52],
        %L0x7ffffff50cb8[52],%L0x7ffffff50cc0[52],%L0x7ffffff50cc8[52],
        %L0x7ffffff50cd0[52],%L0x7ffffff50cd8[52],%L0x7ffffff50ce0[52],
        %L0x7ffffff50ce8[52],%L0x7ffffff50cf0[52],%L0x7ffffff50cf8[52]]*X4**1
 /\
F415 =
poly z [%L0x7ffffff50ca0[21],%L0x7ffffff50ca8[21],%L0x7ffffff50cb0[21],
        %L0x7ffffff50cb8[21],%L0x7ffffff50cc0[21],%L0x7ffffff50cc8[21],
        %L0x7ffffff50cd0[21],%L0x7ffffff50cd8[21],%L0x7ffffff50ce0[21],
        %L0x7ffffff50ce8[21],%L0x7ffffff50cf0[21],%L0x7ffffff50cf8[21]]*X4**0+
poly z [%L0x7ffffff50ca0[53],%L0x7ffffff50ca8[53],%L0x7ffffff50cb0[53],
        %L0x7ffffff50cb8[53],%L0x7ffffff50cc0[53],%L0x7ffffff50cc8[53],
        %L0x7ffffff50cd0[53],%L0x7ffffff50cd8[53],%L0x7ffffff50ce0[53],
        %L0x7ffffff50ce8[53],%L0x7ffffff50cf0[53],%L0x7ffffff50cf8[53]]*X4**1
 /\
F416 =
poly z [%L0x7ffffff50ca0[22],%L0x7ffffff50ca8[22],%L0x7ffffff50cb0[22],
        %L0x7ffffff50cb8[22],%L0x7ffffff50cc0[22],%L0x7ffffff50cc8[22],
        %L0x7ffffff50cd0[22],%L0x7ffffff50cd8[22],%L0x7ffffff50ce0[22],
        %L0x7ffffff50ce8[22],%L0x7ffffff50cf0[22],%L0x7ffffff50cf8[22]]*X4**0+
poly z [%L0x7ffffff50ca0[54],%L0x7ffffff50ca8[54],%L0x7ffffff50cb0[54],
        %L0x7ffffff50cb8[54],%L0x7ffffff50cc0[54],%L0x7ffffff50cc8[54],
        %L0x7ffffff50cd0[54],%L0x7ffffff50cd8[54],%L0x7ffffff50ce0[54],
        %L0x7ffffff50ce8[54],%L0x7ffffff50cf0[54],%L0x7ffffff50cf8[54]]*X4**1
 /\
F417 =
poly z [%L0x7ffffff50ca0[23],%L0x7ffffff50ca8[23],%L0x7ffffff50cb0[23],
        %L0x7ffffff50cb8[23],%L0x7ffffff50cc0[23],%L0x7ffffff50cc8[23],
        %L0x7ffffff50cd0[23],%L0x7ffffff50cd8[23],%L0x7ffffff50ce0[23],
        %L0x7ffffff50ce8[23],%L0x7ffffff50cf0[23],%L0x7ffffff50cf8[23]]*X4**0+
poly z [%L0x7ffffff50ca0[55],%L0x7ffffff50ca8[55],%L0x7ffffff50cb0[55],
        %L0x7ffffff50cb8[55],%L0x7ffffff50cc0[55],%L0x7ffffff50cc8[55],
        %L0x7ffffff50cd0[55],%L0x7ffffff50cd8[55],%L0x7ffffff50ce0[55],
        %L0x7ffffff50ce8[55],%L0x7ffffff50cf0[55],%L0x7ffffff50cf8[55]]*X4**1
 /\
F418 =
poly z [%L0x7ffffff50ca0[24],%L0x7ffffff50ca8[24],%L0x7ffffff50cb0[24],
        %L0x7ffffff50cb8[24],%L0x7ffffff50cc0[24],%L0x7ffffff50cc8[24],
        %L0x7ffffff50cd0[24],%L0x7ffffff50cd8[24],%L0x7ffffff50ce0[24],
        %L0x7ffffff50ce8[24],%L0x7ffffff50cf0[24],%L0x7ffffff50cf8[24]]*X4**0+
poly z [%L0x7ffffff50ca0[56],%L0x7ffffff50ca8[56],%L0x7ffffff50cb0[56],
        %L0x7ffffff50cb8[56],%L0x7ffffff50cc0[56],%L0x7ffffff50cc8[56],
        %L0x7ffffff50cd0[56],%L0x7ffffff50cd8[56],%L0x7ffffff50ce0[56],
        %L0x7ffffff50ce8[56],%L0x7ffffff50cf0[56],%L0x7ffffff50cf8[56]]*X4**1
 /\
F419 =
poly z [%L0x7ffffff50ca0[25],%L0x7ffffff50ca8[25],%L0x7ffffff50cb0[25],
        %L0x7ffffff50cb8[25],%L0x7ffffff50cc0[25],%L0x7ffffff50cc8[25],
        %L0x7ffffff50cd0[25],%L0x7ffffff50cd8[25],%L0x7ffffff50ce0[25],
        %L0x7ffffff50ce8[25],%L0x7ffffff50cf0[25],%L0x7ffffff50cf8[25]]*X4**0+
poly z [%L0x7ffffff50ca0[57],%L0x7ffffff50ca8[57],%L0x7ffffff50cb0[57],
        %L0x7ffffff50cb8[57],%L0x7ffffff50cc0[57],%L0x7ffffff50cc8[57],
        %L0x7ffffff50cd0[57],%L0x7ffffff50cd8[57],%L0x7ffffff50ce0[57],
        %L0x7ffffff50ce8[57],%L0x7ffffff50cf0[57],%L0x7ffffff50cf8[57]]*X4**1
 /\
F41a =
poly z [%L0x7ffffff50ca0[26],%L0x7ffffff50ca8[26],%L0x7ffffff50cb0[26],
        %L0x7ffffff50cb8[26],%L0x7ffffff50cc0[26],%L0x7ffffff50cc8[26],
        %L0x7ffffff50cd0[26],%L0x7ffffff50cd8[26],%L0x7ffffff50ce0[26],
        %L0x7ffffff50ce8[26],%L0x7ffffff50cf0[26],%L0x7ffffff50cf8[26]]*X4**0+
poly z [%L0x7ffffff50ca0[58],%L0x7ffffff50ca8[58],%L0x7ffffff50cb0[58],
        %L0x7ffffff50cb8[58],%L0x7ffffff50cc0[58],%L0x7ffffff50cc8[58],
        %L0x7ffffff50cd0[58],%L0x7ffffff50cd8[58],%L0x7ffffff50ce0[58],
        %L0x7ffffff50ce8[58],%L0x7ffffff50cf0[58],%L0x7ffffff50cf8[58]]*X4**1
 /\
F41b =
poly z [%L0x7ffffff50ca0[27],%L0x7ffffff50ca8[27],%L0x7ffffff50cb0[27],
        %L0x7ffffff50cb8[27],%L0x7ffffff50cc0[27],%L0x7ffffff50cc8[27],
        %L0x7ffffff50cd0[27],%L0x7ffffff50cd8[27],%L0x7ffffff50ce0[27],
        %L0x7ffffff50ce8[27],%L0x7ffffff50cf0[27],%L0x7ffffff50cf8[27]]*X4**0+
poly z [%L0x7ffffff50ca0[59],%L0x7ffffff50ca8[59],%L0x7ffffff50cb0[59],
        %L0x7ffffff50cb8[59],%L0x7ffffff50cc0[59],%L0x7ffffff50cc8[59],
        %L0x7ffffff50cd0[59],%L0x7ffffff50cd8[59],%L0x7ffffff50ce0[59],
        %L0x7ffffff50ce8[59],%L0x7ffffff50cf0[59],%L0x7ffffff50cf8[59]]*X4**1
 /\
F41c =
poly z [%L0x7ffffff50ca0[28],%L0x7ffffff50ca8[28],%L0x7ffffff50cb0[28],
        %L0x7ffffff50cb8[28],%L0x7ffffff50cc0[28],%L0x7ffffff50cc8[28],
        %L0x7ffffff50cd0[28],%L0x7ffffff50cd8[28],%L0x7ffffff50ce0[28],
        %L0x7ffffff50ce8[28],%L0x7ffffff50cf0[28],%L0x7ffffff50cf8[28]]*X4**0+
poly z [%L0x7ffffff50ca0[60],%L0x7ffffff50ca8[60],%L0x7ffffff50cb0[60],
        %L0x7ffffff50cb8[60],%L0x7ffffff50cc0[60],%L0x7ffffff50cc8[60],
        %L0x7ffffff50cd0[60],%L0x7ffffff50cd8[60],%L0x7ffffff50ce0[60],
        %L0x7ffffff50ce8[60],%L0x7ffffff50cf0[60],%L0x7ffffff50cf8[60]]*X4**1
 /\
F41d =
poly z [%L0x7ffffff50ca0[29],%L0x7ffffff50ca8[29],%L0x7ffffff50cb0[29],
        %L0x7ffffff50cb8[29],%L0x7ffffff50cc0[29],%L0x7ffffff50cc8[29],
        %L0x7ffffff50cd0[29],%L0x7ffffff50cd8[29],%L0x7ffffff50ce0[29],
        %L0x7ffffff50ce8[29],%L0x7ffffff50cf0[29],%L0x7ffffff50cf8[29]]*X4**0+
poly z [%L0x7ffffff50ca0[61],%L0x7ffffff50ca8[61],%L0x7ffffff50cb0[61],
        %L0x7ffffff50cb8[61],%L0x7ffffff50cc0[61],%L0x7ffffff50cc8[61],
        %L0x7ffffff50cd0[61],%L0x7ffffff50cd8[61],%L0x7ffffff50ce0[61],
        %L0x7ffffff50ce8[61],%L0x7ffffff50cf0[61],%L0x7ffffff50cf8[61]]*X4**1
 /\
F41e =
poly z [%L0x7ffffff50ca0[30],%L0x7ffffff50ca8[30],%L0x7ffffff50cb0[30],
        %L0x7ffffff50cb8[30],%L0x7ffffff50cc0[30],%L0x7ffffff50cc8[30],
        %L0x7ffffff50cd0[30],%L0x7ffffff50cd8[30],%L0x7ffffff50ce0[30],
        %L0x7ffffff50ce8[30],%L0x7ffffff50cf0[30],%L0x7ffffff50cf8[30]]*X4**0+
poly z [%L0x7ffffff50ca0[62],%L0x7ffffff50ca8[62],%L0x7ffffff50cb0[62],
        %L0x7ffffff50cb8[62],%L0x7ffffff50cc0[62],%L0x7ffffff50cc8[62],
        %L0x7ffffff50cd0[62],%L0x7ffffff50cd8[62],%L0x7ffffff50ce0[62],
        %L0x7ffffff50ce8[62],%L0x7ffffff50cf0[62],%L0x7ffffff50cf8[62]]*X4**1
 /\
F41f =
poly z [%L0x7ffffff50ca0[31],%L0x7ffffff50ca8[31],%L0x7ffffff50cb0[31],
        %L0x7ffffff50cb8[31],%L0x7ffffff50cc0[31],%L0x7ffffff50cc8[31],
        %L0x7ffffff50cd0[31],%L0x7ffffff50cd8[31],%L0x7ffffff50ce0[31],
        %L0x7ffffff50ce8[31],%L0x7ffffff50cf0[31],%L0x7ffffff50cf8[31]]*X4**0+
poly z [%L0x7ffffff50ca0[63],%L0x7ffffff50ca8[63],%L0x7ffffff50cb0[63],
        %L0x7ffffff50cb8[63],%L0x7ffffff50cc0[63],%L0x7ffffff50cc8[63],
        %L0x7ffffff50cd0[63],%L0x7ffffff50cd8[63],%L0x7ffffff50ce0[63],
        %L0x7ffffff50ce8[63],%L0x7ffffff50cf0[63],%L0x7ffffff50cf8[63]]*X4**1
 && true;


(* mov    0x10(%rsp),%rcx                          #! EA = L0x7ffffff50990; Value = 0x0000000000000004; PC = 0x555555582d58 *)
mov %rcx %L0x7ffffff50990;
(* mov    0x8(%rsp),%rax                           #! EA = L0x7ffffff50988; Value = 0x00007ffffff509a0; PC = 0x555555582d5d *)
mov %rax %L0x7ffffff50988;
(* mov    0x18(%rsp),%rdi                          #! EA = L0x7ffffff50998; Value = 0x00007ffffff50ca0; PC = 0x555555582d62 *)
mov %rdi %L0x7ffffff50998;
(* lea    (%rcx,%rcx,2),%rdx                       #! PC = 0x555555582d67 *)
(* lea \(rcx,rcx,2), rdx *)
nop;
(* shl    $0x5,%rdx                                #! PC = 0x555555582d6b *)
(* shl $0x5, rdx *)
nop;
(* mov    %rdi,%rsi                                #! PC = 0x555555582d6f *)
mov %rsi %rdi;
(* add    %rax,%rdx                                #! PC = 0x555555582d72 *)
(* add rax, rdx *)
nop;
(* #call   0x55555557c600 <_PQCLEAN_MCELIECE348864_AVX2_vec_mul_asm>#! PC = 0x555555582d75 *)
#call   0x55555557c600 <_PQCLEAN_MCELIECE348864_AVX2_vec_mul_asm>#! 0x555555582d75 = 0x555555582d75;
(* #! -> SP = 0x7ffffff50978 *)
#! 0x7ffffff50978 = 0x7ffffff50978;
(* mov    %rsp,%r11                                #! PC = 0x55555557c600 *)
(* mov rsp, r11 *)
nop;
(* and    $0x1f,%r11                               #! PC = 0x55555557c603 *)
(* and $0x1f, r11 *)
nop;
(* add    $0x2a0,%r11                              #! PC = 0x55555557c607 *)
(* add 0x2a0, r11 *)
nop;
(* sub    %r11,%rsp                                #! PC = 0x55555557c60e *)
(* sub r11, rsp *)
nop;
(* mov    %r11,0x260(%rsp)                         #! EA = L0x7ffffff50920; PC = 0x55555557c611 *)
mov %L0x7ffffff50920 %r11;
(* mov    %r12,0x268(%rsp)                         #! EA = L0x7ffffff50928; PC = 0x55555557c619 *)
mov %L0x7ffffff50928 %r12;
(* mov    %r13,0x270(%rsp)                         #! EA = L0x7ffffff50930; PC = 0x55555557c621 *)
mov %L0x7ffffff50930 %r13;
(* mov    %r14,0x278(%rsp)                         #! EA = L0x7ffffff50938; PC = 0x55555557c629 *)
mov %L0x7ffffff50938 %r14;
(* mov    %r15,0x280(%rsp)                         #! EA = L0x7ffffff50940; PC = 0x55555557c631 *)
mov %L0x7ffffff50940 %r15;
(* mov    %rbx,0x288(%rsp)                         #! EA = L0x7ffffff50948; PC = 0x55555557c639 *)
mov %L0x7ffffff50948 %rbx;
(* lea    (%rsp),%rcx                              #! PC = 0x55555557c641 *)
(* lea (rsp), rcx *)
nop;

mov %ina0 %L0x7ffffff50ca0; mov %ina1 %L0x7ffffff50ca8;
mov %ina2 %L0x7ffffff50cb0; mov %ina3 %L0x7ffffff50cb8;
mov %ina4 %L0x7ffffff50cc0; mov %ina5 %L0x7ffffff50cc8;
mov %ina6 %L0x7ffffff50cd0; mov %ina7 %L0x7ffffff50cd8;
mov %ina8 %L0x7ffffff50ce0; mov %ina9 %L0x7ffffff50ce8;
mov %inaa %L0x7ffffff50cf0; mov %inab %L0x7ffffff50cf8;

mov %inb0 %L0x7ffffff50b20; mov %inb1 %L0x7ffffff50b28;
mov %inb2 %L0x7ffffff50b30; mov %inb3 %L0x7ffffff50b38;
mov %inb4 %L0x7ffffff50b40; mov %inb5 %L0x7ffffff50b48;
mov %inb6 %L0x7ffffff50b50; mov %inb7 %L0x7ffffff50b58;
mov %inb8 %L0x7ffffff50b60; mov %inb9 %L0x7ffffff50b68;
mov %inba %L0x7ffffff50b70; mov %inbb %L0x7ffffff50b78;

call vec_mul_asm (z,
%ina0,%ina1,%ina2,%ina3,%ina4,%ina5,%ina6,%ina7,%ina8,%ina9,%inaa,%inab,
%inb0,%inb1,%inb2,%inb3,%inb4,%inb5,%inb6,%inb7,%inb8,%inb9,%inba,%inbb
(*
%L0x7ffffff50ca0,%L0x7ffffff50ca8,%L0x7ffffff50cb0,%L0x7ffffff50cb8,
%L0x7ffffff50cc0,%L0x7ffffff50cc8,%L0x7ffffff50cd0,%L0x7ffffff50cd8,
%L0x7ffffff50ce0,%L0x7ffffff50ce8,%L0x7ffffff50cf0,%L0x7ffffff50cf8,
%L0x7ffffff50b20,%L0x7ffffff50b28,%L0x7ffffff50b30,%L0x7ffffff50b38,
%L0x7ffffff50b40,%L0x7ffffff50b48,%L0x7ffffff50b50,%L0x7ffffff50b58,
%L0x7ffffff50b60,%L0x7ffffff50b68,%L0x7ffffff50b70,%L0x7ffffff50b78
*)
,
%L0x7ffffff50ca0,%L0x7ffffff50ca8,%L0x7ffffff50cb0,%L0x7ffffff50cb8,
%L0x7ffffff50cc0,%L0x7ffffff50cc8,%L0x7ffffff50cd0,%L0x7ffffff50cd8,
%L0x7ffffff50ce0,%L0x7ffffff50ce8,%L0x7ffffff50cf0,%L0x7ffffff50cf8);


(* mov    0x260(%rsp),%r11                         #! EA = L0x7ffffff50920; Value = 0x00000000000002b8; PC = 0x55555557c97c *)
mov %r11 %L0x7ffffff50920;
(* mov    0x268(%rsp),%r12                         #! EA = L0x7ffffff50928; Value = 0x00007ffffff50d00; PC = 0x55555557c984 *)
mov %r12 %L0x7ffffff50928;
(* mov    0x270(%rsp),%r13                         #! EA = L0x7ffffff50930; Value = 0x0000ff000000ff00; PC = 0x55555557c98c *)
mov %r13 %L0x7ffffff50930;
(* mov    0x278(%rsp),%r14                         #! EA = L0x7ffffff50938; Value = 0x00ff000000ff0000; PC = 0x55555557c994 *)
mov %r14 %L0x7ffffff50938;
(* mov    0x280(%rsp),%r15                         #! EA = L0x7ffffff50940; Value = 0x4444444444444444; PC = 0x55555557c99c *)
mov %r15 %L0x7ffffff50940;
(* mov    0x288(%rsp),%rbx                         #! EA = L0x7ffffff50948; Value = 0x0000ffff00000000; PC = 0x55555557c9a4 *)
mov %rbx %L0x7ffffff50948;
(* add    %r11,%rsp                                #! PC = 0x55555557c9ac *)
(* add r11, rsp *)
nop;
(* #! <- SP = 0x7ffffff50978 *)
#! 0x7ffffff50978 = 0x7ffffff50978;
(* #ret                                            #! PC = 0x55555557c9af *)
#ret                                            #! 0x55555557c9af = 0x55555557c9af;


(**************** twists ****************)



ghost Y4@uint16,G40@uint16,G41@uint16,G42@uint16,G43@uint16,G44@uint16,G45@uint16,G46@uint16,G47@uint16,G48@uint16,G49@uint16,G4a@uint16,G4b@uint16,G4c@uint16,G4d@uint16,G4e@uint16,G4f@uint16,G410@uint16,G411@uint16,G412@uint16,G413@uint16,G414@uint16,G415@uint16,G416@uint16,G417@uint16,G418@uint16,G419@uint16,G41a@uint16,G41b@uint16,G41c@uint16,G41d@uint16,G41e@uint16,G41f@uint16:
      (z**8+z**5+z**2+z)*Y4 = X4 /\
G40 = poly z [%L0x7ffffff50ca0[0],%L0x7ffffff50ca8[0],%L0x7ffffff50cb0[0],
              %L0x7ffffff50cb8[0],%L0x7ffffff50cc0[0],%L0x7ffffff50cc8[0],
              %L0x7ffffff50cd0[0],%L0x7ffffff50cd8[0],%L0x7ffffff50ce0[0],
              %L0x7ffffff50ce8[0],%L0x7ffffff50cf0[0],%L0x7ffffff50cf8[0]]*Y4**0+
      poly z [%L0x7ffffff50ca0[32],%L0x7ffffff50ca8[32],%L0x7ffffff50cb0[32],
              %L0x7ffffff50cb8[32],%L0x7ffffff50cc0[32],%L0x7ffffff50cc8[32],
              %L0x7ffffff50cd0[32],%L0x7ffffff50cd8[32],%L0x7ffffff50ce0[32],
              %L0x7ffffff50ce8[32],%L0x7ffffff50cf0[32],%L0x7ffffff50cf8[32]]*Y4**1 /\
G41 = poly z [%L0x7ffffff50ca0[1],%L0x7ffffff50ca8[1],%L0x7ffffff50cb0[1],
              %L0x7ffffff50cb8[1],%L0x7ffffff50cc0[1],%L0x7ffffff50cc8[1],
              %L0x7ffffff50cd0[1],%L0x7ffffff50cd8[1],%L0x7ffffff50ce0[1],
              %L0x7ffffff50ce8[1],%L0x7ffffff50cf0[1],%L0x7ffffff50cf8[1]]*Y4**0+
      poly z [%L0x7ffffff50ca0[33],%L0x7ffffff50ca8[33],%L0x7ffffff50cb0[33],
              %L0x7ffffff50cb8[33],%L0x7ffffff50cc0[33],%L0x7ffffff50cc8[33],
              %L0x7ffffff50cd0[33],%L0x7ffffff50cd8[33],%L0x7ffffff50ce0[33],
              %L0x7ffffff50ce8[33],%L0x7ffffff50cf0[33],%L0x7ffffff50cf8[33]]*Y4**1 /\
G42 = poly z [%L0x7ffffff50ca0[2],%L0x7ffffff50ca8[2],%L0x7ffffff50cb0[2],
              %L0x7ffffff50cb8[2],%L0x7ffffff50cc0[2],%L0x7ffffff50cc8[2],
              %L0x7ffffff50cd0[2],%L0x7ffffff50cd8[2],%L0x7ffffff50ce0[2],
              %L0x7ffffff50ce8[2],%L0x7ffffff50cf0[2],%L0x7ffffff50cf8[2]]*Y4**0+
      poly z [%L0x7ffffff50ca0[34],%L0x7ffffff50ca8[34],%L0x7ffffff50cb0[34],
              %L0x7ffffff50cb8[34],%L0x7ffffff50cc0[34],%L0x7ffffff50cc8[34],
              %L0x7ffffff50cd0[34],%L0x7ffffff50cd8[34],%L0x7ffffff50ce0[34],
              %L0x7ffffff50ce8[34],%L0x7ffffff50cf0[34],%L0x7ffffff50cf8[34]]*Y4**1 /\
G43 = poly z [%L0x7ffffff50ca0[3],%L0x7ffffff50ca8[3],%L0x7ffffff50cb0[3],
              %L0x7ffffff50cb8[3],%L0x7ffffff50cc0[3],%L0x7ffffff50cc8[3],
              %L0x7ffffff50cd0[3],%L0x7ffffff50cd8[3],%L0x7ffffff50ce0[3],
              %L0x7ffffff50ce8[3],%L0x7ffffff50cf0[3],%L0x7ffffff50cf8[3]]*Y4**0+
      poly z [%L0x7ffffff50ca0[35],%L0x7ffffff50ca8[35],%L0x7ffffff50cb0[35],
              %L0x7ffffff50cb8[35],%L0x7ffffff50cc0[35],%L0x7ffffff50cc8[35],
              %L0x7ffffff50cd0[35],%L0x7ffffff50cd8[35],%L0x7ffffff50ce0[35],
              %L0x7ffffff50ce8[35],%L0x7ffffff50cf0[35],%L0x7ffffff50cf8[35]]*Y4**1 /\
G44 = poly z [%L0x7ffffff50ca0[4],%L0x7ffffff50ca8[4],%L0x7ffffff50cb0[4],
              %L0x7ffffff50cb8[4],%L0x7ffffff50cc0[4],%L0x7ffffff50cc8[4],
              %L0x7ffffff50cd0[4],%L0x7ffffff50cd8[4],%L0x7ffffff50ce0[4],
              %L0x7ffffff50ce8[4],%L0x7ffffff50cf0[4],%L0x7ffffff50cf8[4]]*Y4**0+
      poly z [%L0x7ffffff50ca0[36],%L0x7ffffff50ca8[36],%L0x7ffffff50cb0[36],
              %L0x7ffffff50cb8[36],%L0x7ffffff50cc0[36],%L0x7ffffff50cc8[36],
              %L0x7ffffff50cd0[36],%L0x7ffffff50cd8[36],%L0x7ffffff50ce0[36],
              %L0x7ffffff50ce8[36],%L0x7ffffff50cf0[36],%L0x7ffffff50cf8[36]]*Y4**1 /\
G45 = poly z [%L0x7ffffff50ca0[5],%L0x7ffffff50ca8[5],%L0x7ffffff50cb0[5],
              %L0x7ffffff50cb8[5],%L0x7ffffff50cc0[5],%L0x7ffffff50cc8[5],
              %L0x7ffffff50cd0[5],%L0x7ffffff50cd8[5],%L0x7ffffff50ce0[5],
              %L0x7ffffff50ce8[5],%L0x7ffffff50cf0[5],%L0x7ffffff50cf8[5]]*Y4**0+
      poly z [%L0x7ffffff50ca0[37],%L0x7ffffff50ca8[37],%L0x7ffffff50cb0[37],
              %L0x7ffffff50cb8[37],%L0x7ffffff50cc0[37],%L0x7ffffff50cc8[37],
              %L0x7ffffff50cd0[37],%L0x7ffffff50cd8[37],%L0x7ffffff50ce0[37],
              %L0x7ffffff50ce8[37],%L0x7ffffff50cf0[37],%L0x7ffffff50cf8[37]]*Y4**1 /\
G46 = poly z [%L0x7ffffff50ca0[6],%L0x7ffffff50ca8[6],%L0x7ffffff50cb0[6],
              %L0x7ffffff50cb8[6],%L0x7ffffff50cc0[6],%L0x7ffffff50cc8[6],
              %L0x7ffffff50cd0[6],%L0x7ffffff50cd8[6],%L0x7ffffff50ce0[6],
              %L0x7ffffff50ce8[6],%L0x7ffffff50cf0[6],%L0x7ffffff50cf8[6]]*Y4**0+
      poly z [%L0x7ffffff50ca0[38],%L0x7ffffff50ca8[38],%L0x7ffffff50cb0[38],
              %L0x7ffffff50cb8[38],%L0x7ffffff50cc0[38],%L0x7ffffff50cc8[38],
              %L0x7ffffff50cd0[38],%L0x7ffffff50cd8[38],%L0x7ffffff50ce0[38],
              %L0x7ffffff50ce8[38],%L0x7ffffff50cf0[38],%L0x7ffffff50cf8[38]]*Y4**1 /\
G47 = poly z [%L0x7ffffff50ca0[7],%L0x7ffffff50ca8[7],%L0x7ffffff50cb0[7],
              %L0x7ffffff50cb8[7],%L0x7ffffff50cc0[7],%L0x7ffffff50cc8[7],
              %L0x7ffffff50cd0[7],%L0x7ffffff50cd8[7],%L0x7ffffff50ce0[7],
              %L0x7ffffff50ce8[7],%L0x7ffffff50cf0[7],%L0x7ffffff50cf8[7]]*Y4**0+
      poly z [%L0x7ffffff50ca0[39],%L0x7ffffff50ca8[39],%L0x7ffffff50cb0[39],
              %L0x7ffffff50cb8[39],%L0x7ffffff50cc0[39],%L0x7ffffff50cc8[39],
              %L0x7ffffff50cd0[39],%L0x7ffffff50cd8[39],%L0x7ffffff50ce0[39],
              %L0x7ffffff50ce8[39],%L0x7ffffff50cf0[39],%L0x7ffffff50cf8[39]]*Y4**1 /\
G48 = poly z [%L0x7ffffff50ca0[8],%L0x7ffffff50ca8[8],%L0x7ffffff50cb0[8],
              %L0x7ffffff50cb8[8],%L0x7ffffff50cc0[8],%L0x7ffffff50cc8[8],
              %L0x7ffffff50cd0[8],%L0x7ffffff50cd8[8],%L0x7ffffff50ce0[8],
              %L0x7ffffff50ce8[8],%L0x7ffffff50cf0[8],%L0x7ffffff50cf8[8]]*Y4**0+
      poly z [%L0x7ffffff50ca0[40],%L0x7ffffff50ca8[40],%L0x7ffffff50cb0[40],
              %L0x7ffffff50cb8[40],%L0x7ffffff50cc0[40],%L0x7ffffff50cc8[40],
              %L0x7ffffff50cd0[40],%L0x7ffffff50cd8[40],%L0x7ffffff50ce0[40],
              %L0x7ffffff50ce8[40],%L0x7ffffff50cf0[40],%L0x7ffffff50cf8[40]]*Y4**1 /\
G49 = poly z [%L0x7ffffff50ca0[9],%L0x7ffffff50ca8[9],%L0x7ffffff50cb0[9],
              %L0x7ffffff50cb8[9],%L0x7ffffff50cc0[9],%L0x7ffffff50cc8[9],
              %L0x7ffffff50cd0[9],%L0x7ffffff50cd8[9],%L0x7ffffff50ce0[9],
              %L0x7ffffff50ce8[9],%L0x7ffffff50cf0[9],%L0x7ffffff50cf8[9]]*Y4**0+
      poly z [%L0x7ffffff50ca0[41],%L0x7ffffff50ca8[41],%L0x7ffffff50cb0[41],
              %L0x7ffffff50cb8[41],%L0x7ffffff50cc0[41],%L0x7ffffff50cc8[41],
              %L0x7ffffff50cd0[41],%L0x7ffffff50cd8[41],%L0x7ffffff50ce0[41],
              %L0x7ffffff50ce8[41],%L0x7ffffff50cf0[41],%L0x7ffffff50cf8[41]]*Y4**1 /\
G4a = poly z [%L0x7ffffff50ca0[10],%L0x7ffffff50ca8[10],%L0x7ffffff50cb0[10],
              %L0x7ffffff50cb8[10],%L0x7ffffff50cc0[10],%L0x7ffffff50cc8[10],
              %L0x7ffffff50cd0[10],%L0x7ffffff50cd8[10],%L0x7ffffff50ce0[10],
              %L0x7ffffff50ce8[10],%L0x7ffffff50cf0[10],%L0x7ffffff50cf8[10]]*Y4**0+
      poly z [%L0x7ffffff50ca0[42],%L0x7ffffff50ca8[42],%L0x7ffffff50cb0[42],
              %L0x7ffffff50cb8[42],%L0x7ffffff50cc0[42],%L0x7ffffff50cc8[42],
              %L0x7ffffff50cd0[42],%L0x7ffffff50cd8[42],%L0x7ffffff50ce0[42],
              %L0x7ffffff50ce8[42],%L0x7ffffff50cf0[42],%L0x7ffffff50cf8[42]]*Y4**1 /\
G4b = poly z [%L0x7ffffff50ca0[11],%L0x7ffffff50ca8[11],%L0x7ffffff50cb0[11],
              %L0x7ffffff50cb8[11],%L0x7ffffff50cc0[11],%L0x7ffffff50cc8[11],
              %L0x7ffffff50cd0[11],%L0x7ffffff50cd8[11],%L0x7ffffff50ce0[11],
              %L0x7ffffff50ce8[11],%L0x7ffffff50cf0[11],%L0x7ffffff50cf8[11]]*Y4**0+
      poly z [%L0x7ffffff50ca0[43],%L0x7ffffff50ca8[43],%L0x7ffffff50cb0[43],
              %L0x7ffffff50cb8[43],%L0x7ffffff50cc0[43],%L0x7ffffff50cc8[43],
              %L0x7ffffff50cd0[43],%L0x7ffffff50cd8[43],%L0x7ffffff50ce0[43],
              %L0x7ffffff50ce8[43],%L0x7ffffff50cf0[43],%L0x7ffffff50cf8[43]]*Y4**1 /\
G4c = poly z [%L0x7ffffff50ca0[12],%L0x7ffffff50ca8[12],%L0x7ffffff50cb0[12],
              %L0x7ffffff50cb8[12],%L0x7ffffff50cc0[12],%L0x7ffffff50cc8[12],
              %L0x7ffffff50cd0[12],%L0x7ffffff50cd8[12],%L0x7ffffff50ce0[12],
              %L0x7ffffff50ce8[12],%L0x7ffffff50cf0[12],%L0x7ffffff50cf8[12]]*Y4**0+
      poly z [%L0x7ffffff50ca0[44],%L0x7ffffff50ca8[44],%L0x7ffffff50cb0[44],
              %L0x7ffffff50cb8[44],%L0x7ffffff50cc0[44],%L0x7ffffff50cc8[44],
              %L0x7ffffff50cd0[44],%L0x7ffffff50cd8[44],%L0x7ffffff50ce0[44],
              %L0x7ffffff50ce8[44],%L0x7ffffff50cf0[44],%L0x7ffffff50cf8[44]]*Y4**1 /\
G4d = poly z [%L0x7ffffff50ca0[13],%L0x7ffffff50ca8[13],%L0x7ffffff50cb0[13],
              %L0x7ffffff50cb8[13],%L0x7ffffff50cc0[13],%L0x7ffffff50cc8[13],
              %L0x7ffffff50cd0[13],%L0x7ffffff50cd8[13],%L0x7ffffff50ce0[13],
              %L0x7ffffff50ce8[13],%L0x7ffffff50cf0[13],%L0x7ffffff50cf8[13]]*Y4**0+
      poly z [%L0x7ffffff50ca0[45],%L0x7ffffff50ca8[45],%L0x7ffffff50cb0[45],
              %L0x7ffffff50cb8[45],%L0x7ffffff50cc0[45],%L0x7ffffff50cc8[45],
              %L0x7ffffff50cd0[45],%L0x7ffffff50cd8[45],%L0x7ffffff50ce0[45],
              %L0x7ffffff50ce8[45],%L0x7ffffff50cf0[45],%L0x7ffffff50cf8[45]]*Y4**1 /\
G4e = poly z [%L0x7ffffff50ca0[14],%L0x7ffffff50ca8[14],%L0x7ffffff50cb0[14],
              %L0x7ffffff50cb8[14],%L0x7ffffff50cc0[14],%L0x7ffffff50cc8[14],
              %L0x7ffffff50cd0[14],%L0x7ffffff50cd8[14],%L0x7ffffff50ce0[14],
              %L0x7ffffff50ce8[14],%L0x7ffffff50cf0[14],%L0x7ffffff50cf8[14]]*Y4**0+
      poly z [%L0x7ffffff50ca0[46],%L0x7ffffff50ca8[46],%L0x7ffffff50cb0[46],
              %L0x7ffffff50cb8[46],%L0x7ffffff50cc0[46],%L0x7ffffff50cc8[46],
              %L0x7ffffff50cd0[46],%L0x7ffffff50cd8[46],%L0x7ffffff50ce0[46],
              %L0x7ffffff50ce8[46],%L0x7ffffff50cf0[46],%L0x7ffffff50cf8[46]]*Y4**1 /\
G4f = poly z [%L0x7ffffff50ca0[15],%L0x7ffffff50ca8[15],%L0x7ffffff50cb0[15],
              %L0x7ffffff50cb8[15],%L0x7ffffff50cc0[15],%L0x7ffffff50cc8[15],
              %L0x7ffffff50cd0[15],%L0x7ffffff50cd8[15],%L0x7ffffff50ce0[15],
              %L0x7ffffff50ce8[15],%L0x7ffffff50cf0[15],%L0x7ffffff50cf8[15]]*Y4**0+
      poly z [%L0x7ffffff50ca0[47],%L0x7ffffff50ca8[47],%L0x7ffffff50cb0[47],
              %L0x7ffffff50cb8[47],%L0x7ffffff50cc0[47],%L0x7ffffff50cc8[47],
              %L0x7ffffff50cd0[47],%L0x7ffffff50cd8[47],%L0x7ffffff50ce0[47],
              %L0x7ffffff50ce8[47],%L0x7ffffff50cf0[47],%L0x7ffffff50cf8[47]]*Y4**1 /\
G410 = poly z [%L0x7ffffff50ca0[16],%L0x7ffffff50ca8[16],%L0x7ffffff50cb0[16],
              %L0x7ffffff50cb8[16],%L0x7ffffff50cc0[16],%L0x7ffffff50cc8[16],
              %L0x7ffffff50cd0[16],%L0x7ffffff50cd8[16],%L0x7ffffff50ce0[16],
              %L0x7ffffff50ce8[16],%L0x7ffffff50cf0[16],%L0x7ffffff50cf8[16]]*Y4**0+
      poly z [%L0x7ffffff50ca0[48],%L0x7ffffff50ca8[48],%L0x7ffffff50cb0[48],
              %L0x7ffffff50cb8[48],%L0x7ffffff50cc0[48],%L0x7ffffff50cc8[48],
              %L0x7ffffff50cd0[48],%L0x7ffffff50cd8[48],%L0x7ffffff50ce0[48],
              %L0x7ffffff50ce8[48],%L0x7ffffff50cf0[48],%L0x7ffffff50cf8[48]]*Y4**1 /\
G411 = poly z [%L0x7ffffff50ca0[17],%L0x7ffffff50ca8[17],%L0x7ffffff50cb0[17],
              %L0x7ffffff50cb8[17],%L0x7ffffff50cc0[17],%L0x7ffffff50cc8[17],
              %L0x7ffffff50cd0[17],%L0x7ffffff50cd8[17],%L0x7ffffff50ce0[17],
              %L0x7ffffff50ce8[17],%L0x7ffffff50cf0[17],%L0x7ffffff50cf8[17]]*Y4**0+
      poly z [%L0x7ffffff50ca0[49],%L0x7ffffff50ca8[49],%L0x7ffffff50cb0[49],
              %L0x7ffffff50cb8[49],%L0x7ffffff50cc0[49],%L0x7ffffff50cc8[49],
              %L0x7ffffff50cd0[49],%L0x7ffffff50cd8[49],%L0x7ffffff50ce0[49],
              %L0x7ffffff50ce8[49],%L0x7ffffff50cf0[49],%L0x7ffffff50cf8[49]]*Y4**1 /\
G412 = poly z [%L0x7ffffff50ca0[18],%L0x7ffffff50ca8[18],%L0x7ffffff50cb0[18],
              %L0x7ffffff50cb8[18],%L0x7ffffff50cc0[18],%L0x7ffffff50cc8[18],
              %L0x7ffffff50cd0[18],%L0x7ffffff50cd8[18],%L0x7ffffff50ce0[18],
              %L0x7ffffff50ce8[18],%L0x7ffffff50cf0[18],%L0x7ffffff50cf8[18]]*Y4**0+
      poly z [%L0x7ffffff50ca0[50],%L0x7ffffff50ca8[50],%L0x7ffffff50cb0[50],
              %L0x7ffffff50cb8[50],%L0x7ffffff50cc0[50],%L0x7ffffff50cc8[50],
              %L0x7ffffff50cd0[50],%L0x7ffffff50cd8[50],%L0x7ffffff50ce0[50],
              %L0x7ffffff50ce8[50],%L0x7ffffff50cf0[50],%L0x7ffffff50cf8[50]]*Y4**1 /\
G413 = poly z [%L0x7ffffff50ca0[19],%L0x7ffffff50ca8[19],%L0x7ffffff50cb0[19],
              %L0x7ffffff50cb8[19],%L0x7ffffff50cc0[19],%L0x7ffffff50cc8[19],
              %L0x7ffffff50cd0[19],%L0x7ffffff50cd8[19],%L0x7ffffff50ce0[19],
              %L0x7ffffff50ce8[19],%L0x7ffffff50cf0[19],%L0x7ffffff50cf8[19]]*Y4**0+
      poly z [%L0x7ffffff50ca0[51],%L0x7ffffff50ca8[51],%L0x7ffffff50cb0[51],
              %L0x7ffffff50cb8[51],%L0x7ffffff50cc0[51],%L0x7ffffff50cc8[51],
              %L0x7ffffff50cd0[51],%L0x7ffffff50cd8[51],%L0x7ffffff50ce0[51],
              %L0x7ffffff50ce8[51],%L0x7ffffff50cf0[51],%L0x7ffffff50cf8[51]]*Y4**1 /\
G414 = poly z [%L0x7ffffff50ca0[20],%L0x7ffffff50ca8[20],%L0x7ffffff50cb0[20],
              %L0x7ffffff50cb8[20],%L0x7ffffff50cc0[20],%L0x7ffffff50cc8[20],
              %L0x7ffffff50cd0[20],%L0x7ffffff50cd8[20],%L0x7ffffff50ce0[20],
              %L0x7ffffff50ce8[20],%L0x7ffffff50cf0[20],%L0x7ffffff50cf8[20]]*Y4**0+
      poly z [%L0x7ffffff50ca0[52],%L0x7ffffff50ca8[52],%L0x7ffffff50cb0[52],
              %L0x7ffffff50cb8[52],%L0x7ffffff50cc0[52],%L0x7ffffff50cc8[52],
              %L0x7ffffff50cd0[52],%L0x7ffffff50cd8[52],%L0x7ffffff50ce0[52],
              %L0x7ffffff50ce8[52],%L0x7ffffff50cf0[52],%L0x7ffffff50cf8[52]]*Y4**1 /\
G415 = poly z [%L0x7ffffff50ca0[21],%L0x7ffffff50ca8[21],%L0x7ffffff50cb0[21],
              %L0x7ffffff50cb8[21],%L0x7ffffff50cc0[21],%L0x7ffffff50cc8[21],
              %L0x7ffffff50cd0[21],%L0x7ffffff50cd8[21],%L0x7ffffff50ce0[21],
              %L0x7ffffff50ce8[21],%L0x7ffffff50cf0[21],%L0x7ffffff50cf8[21]]*Y4**0+
      poly z [%L0x7ffffff50ca0[53],%L0x7ffffff50ca8[53],%L0x7ffffff50cb0[53],
              %L0x7ffffff50cb8[53],%L0x7ffffff50cc0[53],%L0x7ffffff50cc8[53],
              %L0x7ffffff50cd0[53],%L0x7ffffff50cd8[53],%L0x7ffffff50ce0[53],
              %L0x7ffffff50ce8[53],%L0x7ffffff50cf0[53],%L0x7ffffff50cf8[53]]*Y4**1 /\
G416 = poly z [%L0x7ffffff50ca0[22],%L0x7ffffff50ca8[22],%L0x7ffffff50cb0[22],
              %L0x7ffffff50cb8[22],%L0x7ffffff50cc0[22],%L0x7ffffff50cc8[22],
              %L0x7ffffff50cd0[22],%L0x7ffffff50cd8[22],%L0x7ffffff50ce0[22],
              %L0x7ffffff50ce8[22],%L0x7ffffff50cf0[22],%L0x7ffffff50cf8[22]]*Y4**0+
      poly z [%L0x7ffffff50ca0[54],%L0x7ffffff50ca8[54],%L0x7ffffff50cb0[54],
              %L0x7ffffff50cb8[54],%L0x7ffffff50cc0[54],%L0x7ffffff50cc8[54],
              %L0x7ffffff50cd0[54],%L0x7ffffff50cd8[54],%L0x7ffffff50ce0[54],
              %L0x7ffffff50ce8[54],%L0x7ffffff50cf0[54],%L0x7ffffff50cf8[54]]*Y4**1 /\
G417 = poly z [%L0x7ffffff50ca0[23],%L0x7ffffff50ca8[23],%L0x7ffffff50cb0[23],
              %L0x7ffffff50cb8[23],%L0x7ffffff50cc0[23],%L0x7ffffff50cc8[23],
              %L0x7ffffff50cd0[23],%L0x7ffffff50cd8[23],%L0x7ffffff50ce0[23],
              %L0x7ffffff50ce8[23],%L0x7ffffff50cf0[23],%L0x7ffffff50cf8[23]]*Y4**0+
      poly z [%L0x7ffffff50ca0[55],%L0x7ffffff50ca8[55],%L0x7ffffff50cb0[55],
              %L0x7ffffff50cb8[55],%L0x7ffffff50cc0[55],%L0x7ffffff50cc8[55],
              %L0x7ffffff50cd0[55],%L0x7ffffff50cd8[55],%L0x7ffffff50ce0[55],
              %L0x7ffffff50ce8[55],%L0x7ffffff50cf0[55],%L0x7ffffff50cf8[55]]*Y4**1 /\
G418 = poly z [%L0x7ffffff50ca0[24],%L0x7ffffff50ca8[24],%L0x7ffffff50cb0[24],
              %L0x7ffffff50cb8[24],%L0x7ffffff50cc0[24],%L0x7ffffff50cc8[24],
              %L0x7ffffff50cd0[24],%L0x7ffffff50cd8[24],%L0x7ffffff50ce0[24],
              %L0x7ffffff50ce8[24],%L0x7ffffff50cf0[24],%L0x7ffffff50cf8[24]]*Y4**0+
      poly z [%L0x7ffffff50ca0[56],%L0x7ffffff50ca8[56],%L0x7ffffff50cb0[56],
              %L0x7ffffff50cb8[56],%L0x7ffffff50cc0[56],%L0x7ffffff50cc8[56],
              %L0x7ffffff50cd0[56],%L0x7ffffff50cd8[56],%L0x7ffffff50ce0[56],
              %L0x7ffffff50ce8[56],%L0x7ffffff50cf0[56],%L0x7ffffff50cf8[56]]*Y4**1 /\
G419 = poly z [%L0x7ffffff50ca0[25],%L0x7ffffff50ca8[25],%L0x7ffffff50cb0[25],
              %L0x7ffffff50cb8[25],%L0x7ffffff50cc0[25],%L0x7ffffff50cc8[25],
              %L0x7ffffff50cd0[25],%L0x7ffffff50cd8[25],%L0x7ffffff50ce0[25],
              %L0x7ffffff50ce8[25],%L0x7ffffff50cf0[25],%L0x7ffffff50cf8[25]]*Y4**0+
      poly z [%L0x7ffffff50ca0[57],%L0x7ffffff50ca8[57],%L0x7ffffff50cb0[57],
              %L0x7ffffff50cb8[57],%L0x7ffffff50cc0[57],%L0x7ffffff50cc8[57],
              %L0x7ffffff50cd0[57],%L0x7ffffff50cd8[57],%L0x7ffffff50ce0[57],
              %L0x7ffffff50ce8[57],%L0x7ffffff50cf0[57],%L0x7ffffff50cf8[57]]*Y4**1 /\
G41a = poly z [%L0x7ffffff50ca0[26],%L0x7ffffff50ca8[26],%L0x7ffffff50cb0[26],
              %L0x7ffffff50cb8[26],%L0x7ffffff50cc0[26],%L0x7ffffff50cc8[26],
              %L0x7ffffff50cd0[26],%L0x7ffffff50cd8[26],%L0x7ffffff50ce0[26],
              %L0x7ffffff50ce8[26],%L0x7ffffff50cf0[26],%L0x7ffffff50cf8[26]]*Y4**0+
      poly z [%L0x7ffffff50ca0[58],%L0x7ffffff50ca8[58],%L0x7ffffff50cb0[58],
              %L0x7ffffff50cb8[58],%L0x7ffffff50cc0[58],%L0x7ffffff50cc8[58],
              %L0x7ffffff50cd0[58],%L0x7ffffff50cd8[58],%L0x7ffffff50ce0[58],
              %L0x7ffffff50ce8[58],%L0x7ffffff50cf0[58],%L0x7ffffff50cf8[58]]*Y4**1 /\
G41b = poly z [%L0x7ffffff50ca0[27],%L0x7ffffff50ca8[27],%L0x7ffffff50cb0[27],
              %L0x7ffffff50cb8[27],%L0x7ffffff50cc0[27],%L0x7ffffff50cc8[27],
              %L0x7ffffff50cd0[27],%L0x7ffffff50cd8[27],%L0x7ffffff50ce0[27],
              %L0x7ffffff50ce8[27],%L0x7ffffff50cf0[27],%L0x7ffffff50cf8[27]]*Y4**0+
      poly z [%L0x7ffffff50ca0[59],%L0x7ffffff50ca8[59],%L0x7ffffff50cb0[59],
              %L0x7ffffff50cb8[59],%L0x7ffffff50cc0[59],%L0x7ffffff50cc8[59],
              %L0x7ffffff50cd0[59],%L0x7ffffff50cd8[59],%L0x7ffffff50ce0[59],
              %L0x7ffffff50ce8[59],%L0x7ffffff50cf0[59],%L0x7ffffff50cf8[59]]*Y4**1 /\
G41c = poly z [%L0x7ffffff50ca0[28],%L0x7ffffff50ca8[28],%L0x7ffffff50cb0[28],
              %L0x7ffffff50cb8[28],%L0x7ffffff50cc0[28],%L0x7ffffff50cc8[28],
              %L0x7ffffff50cd0[28],%L0x7ffffff50cd8[28],%L0x7ffffff50ce0[28],
              %L0x7ffffff50ce8[28],%L0x7ffffff50cf0[28],%L0x7ffffff50cf8[28]]*Y4**0+
      poly z [%L0x7ffffff50ca0[60],%L0x7ffffff50ca8[60],%L0x7ffffff50cb0[60],
              %L0x7ffffff50cb8[60],%L0x7ffffff50cc0[60],%L0x7ffffff50cc8[60],
              %L0x7ffffff50cd0[60],%L0x7ffffff50cd8[60],%L0x7ffffff50ce0[60],
              %L0x7ffffff50ce8[60],%L0x7ffffff50cf0[60],%L0x7ffffff50cf8[60]]*Y4**1 /\
G41d = poly z [%L0x7ffffff50ca0[29],%L0x7ffffff50ca8[29],%L0x7ffffff50cb0[29],
              %L0x7ffffff50cb8[29],%L0x7ffffff50cc0[29],%L0x7ffffff50cc8[29],
              %L0x7ffffff50cd0[29],%L0x7ffffff50cd8[29],%L0x7ffffff50ce0[29],
              %L0x7ffffff50ce8[29],%L0x7ffffff50cf0[29],%L0x7ffffff50cf8[29]]*Y4**0+
      poly z [%L0x7ffffff50ca0[61],%L0x7ffffff50ca8[61],%L0x7ffffff50cb0[61],
              %L0x7ffffff50cb8[61],%L0x7ffffff50cc0[61],%L0x7ffffff50cc8[61],
              %L0x7ffffff50cd0[61],%L0x7ffffff50cd8[61],%L0x7ffffff50ce0[61],
              %L0x7ffffff50ce8[61],%L0x7ffffff50cf0[61],%L0x7ffffff50cf8[61]]*Y4**1 /\
G41e = poly z [%L0x7ffffff50ca0[30],%L0x7ffffff50ca8[30],%L0x7ffffff50cb0[30],
              %L0x7ffffff50cb8[30],%L0x7ffffff50cc0[30],%L0x7ffffff50cc8[30],
              %L0x7ffffff50cd0[30],%L0x7ffffff50cd8[30],%L0x7ffffff50ce0[30],
              %L0x7ffffff50ce8[30],%L0x7ffffff50cf0[30],%L0x7ffffff50cf8[30]]*Y4**0+
      poly z [%L0x7ffffff50ca0[62],%L0x7ffffff50ca8[62],%L0x7ffffff50cb0[62],
              %L0x7ffffff50cb8[62],%L0x7ffffff50cc0[62],%L0x7ffffff50cc8[62],
              %L0x7ffffff50cd0[62],%L0x7ffffff50cd8[62],%L0x7ffffff50ce0[62],
              %L0x7ffffff50ce8[62],%L0x7ffffff50cf0[62],%L0x7ffffff50cf8[62]]*Y4**1 /\
G41f = poly z [%L0x7ffffff50ca0[31],%L0x7ffffff50ca8[31],%L0x7ffffff50cb0[31],
              %L0x7ffffff50cb8[31],%L0x7ffffff50cc0[31],%L0x7ffffff50cc8[31],
              %L0x7ffffff50cd0[31],%L0x7ffffff50cd8[31],%L0x7ffffff50ce0[31],
              %L0x7ffffff50ce8[31],%L0x7ffffff50cf0[31],%L0x7ffffff50cf8[31]]*Y4**0+
      poly z [%L0x7ffffff50ca0[63],%L0x7ffffff50ca8[63],%L0x7ffffff50cb0[63],
              %L0x7ffffff50cb8[63],%L0x7ffffff50cc0[63],%L0x7ffffff50cc8[63],
              %L0x7ffffff50cd0[63],%L0x7ffffff50cd8[63],%L0x7ffffff50ce0[63],
              %L0x7ffffff50ce8[63],%L0x7ffffff50cf0[63],%L0x7ffffff50cf8[63]]*Y4**1 
   && true;

(* 9 *)
cut eqmod F40 G40 [2, z**12+z**3+1] /\ eqmod F41 G41 [2, z**12+z**3+1] /\
    eqmod F42 G42 [2, z**12+z**3+1] /\ eqmod F43 G43 [2, z**12+z**3+1] /\
    eqmod F44 G44 [2, z**12+z**3+1] /\ eqmod F45 G45 [2, z**12+z**3+1] /\
    eqmod F46 G46 [2, z**12+z**3+1] /\ eqmod F47 G47 [2, z**12+z**3+1] /\
    eqmod F48 G48 [2, z**12+z**3+1] /\ eqmod F49 G49 [2, z**12+z**3+1] /\
    eqmod F4a G4a [2, z**12+z**3+1] /\ eqmod F4b G4b [2, z**12+z**3+1] /\
    eqmod F4c G4c [2, z**12+z**3+1] /\ eqmod F4d G4d [2, z**12+z**3+1] /\
    eqmod F4e G4e [2, z**12+z**3+1] /\ eqmod F4f G4f [2, z**12+z**3+1] /\
    eqmod F410 G410 [2, z**12+z**3+1] /\ eqmod F411 G411 [2, z**12+z**3+1] /\
    eqmod F412 G412 [2, z**12+z**3+1] /\ eqmod F413 G413 [2, z**12+z**3+1] /\
    eqmod F414 G414 [2, z**12+z**3+1] /\ eqmod F415 G415 [2, z**12+z**3+1] /\
    eqmod F416 G416 [2, z**12+z**3+1] /\ eqmod F417 G417 [2, z**12+z**3+1] /\
    eqmod F418 G418 [2, z**12+z**3+1] /\ eqmod F419 G419 [2, z**12+z**3+1] /\
    eqmod F41a G41a [2, z**12+z**3+1] /\ eqmod F41b G41b [2, z**12+z**3+1] /\
    eqmod F41c G41c [2, z**12+z**3+1] /\ eqmod F41d G41d [2, z**12+z**3+1] /\
    eqmod F41e G41e [2, z**12+z**3+1] /\ eqmod F41f G41f [2, z**12+z**3+1]
 && true;



(* mov    0x10(%rsp),%rcx                          #! EA = L0x7ffffff50990; Value = 0x0000000000000004; PC = 0x555555582d7a *)
mov %rcx %L0x7ffffff50990;
(* add    $0x1,%rcx                                #! PC = 0x555555582d7f *)
(* add $0x1, rcx *)
nop;
(* cmp    $0x5,%rcx                                #! PC = 0x555555582d83 *)
(* cmp 0x5, rcx *)
nop;
(* #jne    0x555555582c60 <radix_conversions+352>  #! PC = 0x555555582d87 *)
#jne    0x555555582c60 <radix_conversions+352>  #! 0x555555582d87 = 0x555555582d87;
(* mov    0x218(%rsp),%rax                         #! EA = L0x7ffffff50b98; Value = 0x996fa54bdb2d3800; PC = 0x555555582d8d *)
mov %rax %L0x7ffffff50b98;
(* sub    %fs:0x28,%rax                            #! PC = 0x555555582d95 *)
(* sub %fs:0x28, rax *)
nop;
(* #jne    0x555555582daf <radix_conversions+687>  #! PC = 0x555555582d9e *)
#jne    0x555555582daf <radix_conversions+687>  #! 0x555555582d9e = 0x555555582d9e;
(* lea    -0x28(%rbp),%rsp                         #! PC = 0x555555582da0 *)
(* lea -0x28(rbp), rsp *)
nop;
(* pop    %rbx                                     #! EA = L0x7ffffff50ba8; Value = 0x00007ffffff50ca0; PC = 0x555555582da4 *)
(* pop rbx *)
nop;
(* pop    %r12                                     #! EA = L0x7ffffff50bb0; Value = 0x00007ffffff56280; PC = 0x555555582da5 *)
(* pop r12 *)
nop;
(* pop    %r13                                     #! EA = L0x7ffffff50bb8; Value = 0x00007ffffff54c00; PC = 0x555555582da7 *)
(* pop r13 *)
nop;
(* pop    %r14                                     #! EA = L0x7ffffff50bc0; Value = 0x00007ffffff53400; PC = 0x555555582da9 *)
(* pop r14 *)
nop;
(* pop    %r15                                     #! EA = L0x7ffffff50bc8; Value = 0x00007ffffffb4470; PC = 0x555555582dab *)
(* pop r15 *)
nop;
(* pop    %rbp                                     #! EA = L0x7ffffff50bd0; Value = 0x00007ffffff53280; PC = 0x555555582dad *)
(* pop rbp *)
nop;
(* #! <- SP = 0x7ffffff50bd8 *)
#! 0x7ffffff50bd8 = 0x7ffffff50bd8;
(* #ret                                            #! PC = 0x555555582dae *)
#ret                                            #! 0x555555582dae = 0x555555582dae;

{
eqmod F40 G40 [2, z**12+z**3+1] /\ eqmod F41 G41 [2, z**12+z**3+1] /\
eqmod F42 G42 [2, z**12+z**3+1] /\ eqmod F43 G43 [2, z**12+z**3+1] /\
eqmod F44 G44 [2, z**12+z**3+1] /\ eqmod F45 G45 [2, z**12+z**3+1] /\
eqmod F46 G46 [2, z**12+z**3+1] /\ eqmod F47 G47 [2, z**12+z**3+1] /\
eqmod F48 G48 [2, z**12+z**3+1] /\ eqmod F49 G49 [2, z**12+z**3+1] /\
eqmod F4a G4a [2, z**12+z**3+1] /\ eqmod F4b G4b [2, z**12+z**3+1] /\
eqmod F4c G4c [2, z**12+z**3+1] /\ eqmod F4d G4d [2, z**12+z**3+1] /\
eqmod F4e G4e [2, z**12+z**3+1] /\ eqmod F4f G4f [2, z**12+z**3+1] /\
eqmod F410 G410 [2, z**12+z**3+1] /\ eqmod F411 G411 [2, z**12+z**3+1] /\
eqmod F412 G412 [2, z**12+z**3+1] /\ eqmod F413 G413 [2, z**12+z**3+1] /\
eqmod F414 G414 [2, z**12+z**3+1] /\ eqmod F415 G415 [2, z**12+z**3+1] /\
eqmod F416 G416 [2, z**12+z**3+1] /\ eqmod F417 G417 [2, z**12+z**3+1] /\
eqmod F418 G418 [2, z**12+z**3+1] /\ eqmod F419 G419 [2, z**12+z**3+1] /\
eqmod F41a G41a [2, z**12+z**3+1] /\ eqmod F41b G41b [2, z**12+z**3+1] /\
eqmod F41c G41c [2, z**12+z**3+1] /\ eqmod F41d G41d [2, z**12+z**3+1] /\
eqmod F41e G41e [2, z**12+z**3+1] /\ eqmod F41f G41f [2, z**12+z**3+1] /\
G40 = poly z [%L0x7ffffff50ca0[0],%L0x7ffffff50ca8[0],%L0x7ffffff50cb0[0],
              %L0x7ffffff50cb8[0],%L0x7ffffff50cc0[0],%L0x7ffffff50cc8[0],
              %L0x7ffffff50cd0[0],%L0x7ffffff50cd8[0],%L0x7ffffff50ce0[0],
              %L0x7ffffff50ce8[0],%L0x7ffffff50cf0[0],%L0x7ffffff50cf8[0]]*Y4**0+
      poly z [%L0x7ffffff50ca0[32],%L0x7ffffff50ca8[32],%L0x7ffffff50cb0[32],
              %L0x7ffffff50cb8[32],%L0x7ffffff50cc0[32],%L0x7ffffff50cc8[32],
              %L0x7ffffff50cd0[32],%L0x7ffffff50cd8[32],%L0x7ffffff50ce0[32],
              %L0x7ffffff50ce8[32],%L0x7ffffff50cf0[32],%L0x7ffffff50cf8[32]]*Y4**1 /\
G41 = poly z [%L0x7ffffff50ca0[1],%L0x7ffffff50ca8[1],%L0x7ffffff50cb0[1],
              %L0x7ffffff50cb8[1],%L0x7ffffff50cc0[1],%L0x7ffffff50cc8[1],
              %L0x7ffffff50cd0[1],%L0x7ffffff50cd8[1],%L0x7ffffff50ce0[1],
              %L0x7ffffff50ce8[1],%L0x7ffffff50cf0[1],%L0x7ffffff50cf8[1]]*Y4**0+
      poly z [%L0x7ffffff50ca0[33],%L0x7ffffff50ca8[33],%L0x7ffffff50cb0[33],
              %L0x7ffffff50cb8[33],%L0x7ffffff50cc0[33],%L0x7ffffff50cc8[33],
              %L0x7ffffff50cd0[33],%L0x7ffffff50cd8[33],%L0x7ffffff50ce0[33],
              %L0x7ffffff50ce8[33],%L0x7ffffff50cf0[33],%L0x7ffffff50cf8[33]]*Y4**1 /\
G42 = poly z [%L0x7ffffff50ca0[2],%L0x7ffffff50ca8[2],%L0x7ffffff50cb0[2],
              %L0x7ffffff50cb8[2],%L0x7ffffff50cc0[2],%L0x7ffffff50cc8[2],
              %L0x7ffffff50cd0[2],%L0x7ffffff50cd8[2],%L0x7ffffff50ce0[2],
              %L0x7ffffff50ce8[2],%L0x7ffffff50cf0[2],%L0x7ffffff50cf8[2]]*Y4**0+
      poly z [%L0x7ffffff50ca0[34],%L0x7ffffff50ca8[34],%L0x7ffffff50cb0[34],
              %L0x7ffffff50cb8[34],%L0x7ffffff50cc0[34],%L0x7ffffff50cc8[34],
              %L0x7ffffff50cd0[34],%L0x7ffffff50cd8[34],%L0x7ffffff50ce0[34],
              %L0x7ffffff50ce8[34],%L0x7ffffff50cf0[34],%L0x7ffffff50cf8[34]]*Y4**1 /\
G43 = poly z [%L0x7ffffff50ca0[3],%L0x7ffffff50ca8[3],%L0x7ffffff50cb0[3],
              %L0x7ffffff50cb8[3],%L0x7ffffff50cc0[3],%L0x7ffffff50cc8[3],
              %L0x7ffffff50cd0[3],%L0x7ffffff50cd8[3],%L0x7ffffff50ce0[3],
              %L0x7ffffff50ce8[3],%L0x7ffffff50cf0[3],%L0x7ffffff50cf8[3]]*Y4**0+
      poly z [%L0x7ffffff50ca0[35],%L0x7ffffff50ca8[35],%L0x7ffffff50cb0[35],
              %L0x7ffffff50cb8[35],%L0x7ffffff50cc0[35],%L0x7ffffff50cc8[35],
              %L0x7ffffff50cd0[35],%L0x7ffffff50cd8[35],%L0x7ffffff50ce0[35],
              %L0x7ffffff50ce8[35],%L0x7ffffff50cf0[35],%L0x7ffffff50cf8[35]]*Y4**1 /\
G44 = poly z [%L0x7ffffff50ca0[4],%L0x7ffffff50ca8[4],%L0x7ffffff50cb0[4],
              %L0x7ffffff50cb8[4],%L0x7ffffff50cc0[4],%L0x7ffffff50cc8[4],
              %L0x7ffffff50cd0[4],%L0x7ffffff50cd8[4],%L0x7ffffff50ce0[4],
              %L0x7ffffff50ce8[4],%L0x7ffffff50cf0[4],%L0x7ffffff50cf8[4]]*Y4**0+
      poly z [%L0x7ffffff50ca0[36],%L0x7ffffff50ca8[36],%L0x7ffffff50cb0[36],
              %L0x7ffffff50cb8[36],%L0x7ffffff50cc0[36],%L0x7ffffff50cc8[36],
              %L0x7ffffff50cd0[36],%L0x7ffffff50cd8[36],%L0x7ffffff50ce0[36],
              %L0x7ffffff50ce8[36],%L0x7ffffff50cf0[36],%L0x7ffffff50cf8[36]]*Y4**1 /\
G45 = poly z [%L0x7ffffff50ca0[5],%L0x7ffffff50ca8[5],%L0x7ffffff50cb0[5],
              %L0x7ffffff50cb8[5],%L0x7ffffff50cc0[5],%L0x7ffffff50cc8[5],
              %L0x7ffffff50cd0[5],%L0x7ffffff50cd8[5],%L0x7ffffff50ce0[5],
              %L0x7ffffff50ce8[5],%L0x7ffffff50cf0[5],%L0x7ffffff50cf8[5]]*Y4**0+
      poly z [%L0x7ffffff50ca0[37],%L0x7ffffff50ca8[37],%L0x7ffffff50cb0[37],
              %L0x7ffffff50cb8[37],%L0x7ffffff50cc0[37],%L0x7ffffff50cc8[37],
              %L0x7ffffff50cd0[37],%L0x7ffffff50cd8[37],%L0x7ffffff50ce0[37],
              %L0x7ffffff50ce8[37],%L0x7ffffff50cf0[37],%L0x7ffffff50cf8[37]]*Y4**1 /\
G46 = poly z [%L0x7ffffff50ca0[6],%L0x7ffffff50ca8[6],%L0x7ffffff50cb0[6],
              %L0x7ffffff50cb8[6],%L0x7ffffff50cc0[6],%L0x7ffffff50cc8[6],
              %L0x7ffffff50cd0[6],%L0x7ffffff50cd8[6],%L0x7ffffff50ce0[6],
              %L0x7ffffff50ce8[6],%L0x7ffffff50cf0[6],%L0x7ffffff50cf8[6]]*Y4**0+
      poly z [%L0x7ffffff50ca0[38],%L0x7ffffff50ca8[38],%L0x7ffffff50cb0[38],
              %L0x7ffffff50cb8[38],%L0x7ffffff50cc0[38],%L0x7ffffff50cc8[38],
              %L0x7ffffff50cd0[38],%L0x7ffffff50cd8[38],%L0x7ffffff50ce0[38],
              %L0x7ffffff50ce8[38],%L0x7ffffff50cf0[38],%L0x7ffffff50cf8[38]]*Y4**1 /\
G47 = poly z [%L0x7ffffff50ca0[7],%L0x7ffffff50ca8[7],%L0x7ffffff50cb0[7],
              %L0x7ffffff50cb8[7],%L0x7ffffff50cc0[7],%L0x7ffffff50cc8[7],
              %L0x7ffffff50cd0[7],%L0x7ffffff50cd8[7],%L0x7ffffff50ce0[7],
              %L0x7ffffff50ce8[7],%L0x7ffffff50cf0[7],%L0x7ffffff50cf8[7]]*Y4**0+
      poly z [%L0x7ffffff50ca0[39],%L0x7ffffff50ca8[39],%L0x7ffffff50cb0[39],
              %L0x7ffffff50cb8[39],%L0x7ffffff50cc0[39],%L0x7ffffff50cc8[39],
              %L0x7ffffff50cd0[39],%L0x7ffffff50cd8[39],%L0x7ffffff50ce0[39],
              %L0x7ffffff50ce8[39],%L0x7ffffff50cf0[39],%L0x7ffffff50cf8[39]]*Y4**1 /\
G48 = poly z [%L0x7ffffff50ca0[8],%L0x7ffffff50ca8[8],%L0x7ffffff50cb0[8],
              %L0x7ffffff50cb8[8],%L0x7ffffff50cc0[8],%L0x7ffffff50cc8[8],
              %L0x7ffffff50cd0[8],%L0x7ffffff50cd8[8],%L0x7ffffff50ce0[8],
              %L0x7ffffff50ce8[8],%L0x7ffffff50cf0[8],%L0x7ffffff50cf8[8]]*Y4**0+
      poly z [%L0x7ffffff50ca0[40],%L0x7ffffff50ca8[40],%L0x7ffffff50cb0[40],
              %L0x7ffffff50cb8[40],%L0x7ffffff50cc0[40],%L0x7ffffff50cc8[40],
              %L0x7ffffff50cd0[40],%L0x7ffffff50cd8[40],%L0x7ffffff50ce0[40],
              %L0x7ffffff50ce8[40],%L0x7ffffff50cf0[40],%L0x7ffffff50cf8[40]]*Y4**1 /\
G49 = poly z [%L0x7ffffff50ca0[9],%L0x7ffffff50ca8[9],%L0x7ffffff50cb0[9],
              %L0x7ffffff50cb8[9],%L0x7ffffff50cc0[9],%L0x7ffffff50cc8[9],
              %L0x7ffffff50cd0[9],%L0x7ffffff50cd8[9],%L0x7ffffff50ce0[9],
              %L0x7ffffff50ce8[9],%L0x7ffffff50cf0[9],%L0x7ffffff50cf8[9]]*Y4**0+
      poly z [%L0x7ffffff50ca0[41],%L0x7ffffff50ca8[41],%L0x7ffffff50cb0[41],
              %L0x7ffffff50cb8[41],%L0x7ffffff50cc0[41],%L0x7ffffff50cc8[41],
              %L0x7ffffff50cd0[41],%L0x7ffffff50cd8[41],%L0x7ffffff50ce0[41],
              %L0x7ffffff50ce8[41],%L0x7ffffff50cf0[41],%L0x7ffffff50cf8[41]]*Y4**1 /\
G4a = poly z [%L0x7ffffff50ca0[10],%L0x7ffffff50ca8[10],%L0x7ffffff50cb0[10],
              %L0x7ffffff50cb8[10],%L0x7ffffff50cc0[10],%L0x7ffffff50cc8[10],
              %L0x7ffffff50cd0[10],%L0x7ffffff50cd8[10],%L0x7ffffff50ce0[10],
              %L0x7ffffff50ce8[10],%L0x7ffffff50cf0[10],%L0x7ffffff50cf8[10]]*Y4**0+
      poly z [%L0x7ffffff50ca0[42],%L0x7ffffff50ca8[42],%L0x7ffffff50cb0[42],
              %L0x7ffffff50cb8[42],%L0x7ffffff50cc0[42],%L0x7ffffff50cc8[42],
              %L0x7ffffff50cd0[42],%L0x7ffffff50cd8[42],%L0x7ffffff50ce0[42],
              %L0x7ffffff50ce8[42],%L0x7ffffff50cf0[42],%L0x7ffffff50cf8[42]]*Y4**1 /\
G4b = poly z [%L0x7ffffff50ca0[11],%L0x7ffffff50ca8[11],%L0x7ffffff50cb0[11],
              %L0x7ffffff50cb8[11],%L0x7ffffff50cc0[11],%L0x7ffffff50cc8[11],
              %L0x7ffffff50cd0[11],%L0x7ffffff50cd8[11],%L0x7ffffff50ce0[11],
              %L0x7ffffff50ce8[11],%L0x7ffffff50cf0[11],%L0x7ffffff50cf8[11]]*Y4**0+
      poly z [%L0x7ffffff50ca0[43],%L0x7ffffff50ca8[43],%L0x7ffffff50cb0[43],
              %L0x7ffffff50cb8[43],%L0x7ffffff50cc0[43],%L0x7ffffff50cc8[43],
              %L0x7ffffff50cd0[43],%L0x7ffffff50cd8[43],%L0x7ffffff50ce0[43],
              %L0x7ffffff50ce8[43],%L0x7ffffff50cf0[43],%L0x7ffffff50cf8[43]]*Y4**1 /\
G4c = poly z [%L0x7ffffff50ca0[12],%L0x7ffffff50ca8[12],%L0x7ffffff50cb0[12],
              %L0x7ffffff50cb8[12],%L0x7ffffff50cc0[12],%L0x7ffffff50cc8[12],
              %L0x7ffffff50cd0[12],%L0x7ffffff50cd8[12],%L0x7ffffff50ce0[12],
              %L0x7ffffff50ce8[12],%L0x7ffffff50cf0[12],%L0x7ffffff50cf8[12]]*Y4**0+
      poly z [%L0x7ffffff50ca0[44],%L0x7ffffff50ca8[44],%L0x7ffffff50cb0[44],
              %L0x7ffffff50cb8[44],%L0x7ffffff50cc0[44],%L0x7ffffff50cc8[44],
              %L0x7ffffff50cd0[44],%L0x7ffffff50cd8[44],%L0x7ffffff50ce0[44],
              %L0x7ffffff50ce8[44],%L0x7ffffff50cf0[44],%L0x7ffffff50cf8[44]]*Y4**1 /\
G4d = poly z [%L0x7ffffff50ca0[13],%L0x7ffffff50ca8[13],%L0x7ffffff50cb0[13],
              %L0x7ffffff50cb8[13],%L0x7ffffff50cc0[13],%L0x7ffffff50cc8[13],
              %L0x7ffffff50cd0[13],%L0x7ffffff50cd8[13],%L0x7ffffff50ce0[13],
              %L0x7ffffff50ce8[13],%L0x7ffffff50cf0[13],%L0x7ffffff50cf8[13]]*Y4**0+
      poly z [%L0x7ffffff50ca0[45],%L0x7ffffff50ca8[45],%L0x7ffffff50cb0[45],
              %L0x7ffffff50cb8[45],%L0x7ffffff50cc0[45],%L0x7ffffff50cc8[45],
              %L0x7ffffff50cd0[45],%L0x7ffffff50cd8[45],%L0x7ffffff50ce0[45],
              %L0x7ffffff50ce8[45],%L0x7ffffff50cf0[45],%L0x7ffffff50cf8[45]]*Y4**1 /\
G4e = poly z [%L0x7ffffff50ca0[14],%L0x7ffffff50ca8[14],%L0x7ffffff50cb0[14],
              %L0x7ffffff50cb8[14],%L0x7ffffff50cc0[14],%L0x7ffffff50cc8[14],
              %L0x7ffffff50cd0[14],%L0x7ffffff50cd8[14],%L0x7ffffff50ce0[14],
              %L0x7ffffff50ce8[14],%L0x7ffffff50cf0[14],%L0x7ffffff50cf8[14]]*Y4**0+
      poly z [%L0x7ffffff50ca0[46],%L0x7ffffff50ca8[46],%L0x7ffffff50cb0[46],
              %L0x7ffffff50cb8[46],%L0x7ffffff50cc0[46],%L0x7ffffff50cc8[46],
              %L0x7ffffff50cd0[46],%L0x7ffffff50cd8[46],%L0x7ffffff50ce0[46],
              %L0x7ffffff50ce8[46],%L0x7ffffff50cf0[46],%L0x7ffffff50cf8[46]]*Y4**1 /\
G4f = poly z [%L0x7ffffff50ca0[15],%L0x7ffffff50ca8[15],%L0x7ffffff50cb0[15],
              %L0x7ffffff50cb8[15],%L0x7ffffff50cc0[15],%L0x7ffffff50cc8[15],
              %L0x7ffffff50cd0[15],%L0x7ffffff50cd8[15],%L0x7ffffff50ce0[15],
              %L0x7ffffff50ce8[15],%L0x7ffffff50cf0[15],%L0x7ffffff50cf8[15]]*Y4**0+
      poly z [%L0x7ffffff50ca0[47],%L0x7ffffff50ca8[47],%L0x7ffffff50cb0[47],
              %L0x7ffffff50cb8[47],%L0x7ffffff50cc0[47],%L0x7ffffff50cc8[47],
              %L0x7ffffff50cd0[47],%L0x7ffffff50cd8[47],%L0x7ffffff50ce0[47],
              %L0x7ffffff50ce8[47],%L0x7ffffff50cf0[47],%L0x7ffffff50cf8[47]]*Y4**1 /\
G410 = poly z [%L0x7ffffff50ca0[16],%L0x7ffffff50ca8[16],%L0x7ffffff50cb0[16],
               %L0x7ffffff50cb8[16],%L0x7ffffff50cc0[16],%L0x7ffffff50cc8[16],
               %L0x7ffffff50cd0[16],%L0x7ffffff50cd8[16],%L0x7ffffff50ce0[16],
               %L0x7ffffff50ce8[16],%L0x7ffffff50cf0[16],%L0x7ffffff50cf8[16]]*Y4**0+
       poly z [%L0x7ffffff50ca0[48],%L0x7ffffff50ca8[48],%L0x7ffffff50cb0[48],
               %L0x7ffffff50cb8[48],%L0x7ffffff50cc0[48],%L0x7ffffff50cc8[48],
               %L0x7ffffff50cd0[48],%L0x7ffffff50cd8[48],%L0x7ffffff50ce0[48],
               %L0x7ffffff50ce8[48],%L0x7ffffff50cf0[48],%L0x7ffffff50cf8[48]]*Y4**1 /\
G411 = poly z [%L0x7ffffff50ca0[17],%L0x7ffffff50ca8[17],%L0x7ffffff50cb0[17],
               %L0x7ffffff50cb8[17],%L0x7ffffff50cc0[17],%L0x7ffffff50cc8[17],
               %L0x7ffffff50cd0[17],%L0x7ffffff50cd8[17],%L0x7ffffff50ce0[17],
               %L0x7ffffff50ce8[17],%L0x7ffffff50cf0[17],%L0x7ffffff50cf8[17]]*Y4**0+
       poly z [%L0x7ffffff50ca0[49],%L0x7ffffff50ca8[49],%L0x7ffffff50cb0[49],
               %L0x7ffffff50cb8[49],%L0x7ffffff50cc0[49],%L0x7ffffff50cc8[49],
               %L0x7ffffff50cd0[49],%L0x7ffffff50cd8[49],%L0x7ffffff50ce0[49],
               %L0x7ffffff50ce8[49],%L0x7ffffff50cf0[49],%L0x7ffffff50cf8[49]]*Y4**1 /\
G412 = poly z [%L0x7ffffff50ca0[18],%L0x7ffffff50ca8[18],%L0x7ffffff50cb0[18],
               %L0x7ffffff50cb8[18],%L0x7ffffff50cc0[18],%L0x7ffffff50cc8[18],
               %L0x7ffffff50cd0[18],%L0x7ffffff50cd8[18],%L0x7ffffff50ce0[18],
               %L0x7ffffff50ce8[18],%L0x7ffffff50cf0[18],%L0x7ffffff50cf8[18]]*Y4**0+
       poly z [%L0x7ffffff50ca0[50],%L0x7ffffff50ca8[50],%L0x7ffffff50cb0[50],
               %L0x7ffffff50cb8[50],%L0x7ffffff50cc0[50],%L0x7ffffff50cc8[50],
               %L0x7ffffff50cd0[50],%L0x7ffffff50cd8[50],%L0x7ffffff50ce0[50],
               %L0x7ffffff50ce8[50],%L0x7ffffff50cf0[50],%L0x7ffffff50cf8[50]]*Y4**1 /\
G413 = poly z [%L0x7ffffff50ca0[19],%L0x7ffffff50ca8[19],%L0x7ffffff50cb0[19],
               %L0x7ffffff50cb8[19],%L0x7ffffff50cc0[19],%L0x7ffffff50cc8[19],
               %L0x7ffffff50cd0[19],%L0x7ffffff50cd8[19],%L0x7ffffff50ce0[19],
               %L0x7ffffff50ce8[19],%L0x7ffffff50cf0[19],%L0x7ffffff50cf8[19]]*Y4**0+
       poly z [%L0x7ffffff50ca0[51],%L0x7ffffff50ca8[51],%L0x7ffffff50cb0[51],
               %L0x7ffffff50cb8[51],%L0x7ffffff50cc0[51],%L0x7ffffff50cc8[51],
               %L0x7ffffff50cd0[51],%L0x7ffffff50cd8[51],%L0x7ffffff50ce0[51],
               %L0x7ffffff50ce8[51],%L0x7ffffff50cf0[51],%L0x7ffffff50cf8[51]]*Y4**1 /\
G414 = poly z [%L0x7ffffff50ca0[20],%L0x7ffffff50ca8[20],%L0x7ffffff50cb0[20],
               %L0x7ffffff50cb8[20],%L0x7ffffff50cc0[20],%L0x7ffffff50cc8[20],
               %L0x7ffffff50cd0[20],%L0x7ffffff50cd8[20],%L0x7ffffff50ce0[20],
               %L0x7ffffff50ce8[20],%L0x7ffffff50cf0[20],%L0x7ffffff50cf8[20]]*Y4**0+
       poly z [%L0x7ffffff50ca0[52],%L0x7ffffff50ca8[52],%L0x7ffffff50cb0[52],
               %L0x7ffffff50cb8[52],%L0x7ffffff50cc0[52],%L0x7ffffff50cc8[52],
               %L0x7ffffff50cd0[52],%L0x7ffffff50cd8[52],%L0x7ffffff50ce0[52],
               %L0x7ffffff50ce8[52],%L0x7ffffff50cf0[52],%L0x7ffffff50cf8[52]]*Y4**1 /\
G415 = poly z [%L0x7ffffff50ca0[21],%L0x7ffffff50ca8[21],%L0x7ffffff50cb0[21],
               %L0x7ffffff50cb8[21],%L0x7ffffff50cc0[21],%L0x7ffffff50cc8[21],
               %L0x7ffffff50cd0[21],%L0x7ffffff50cd8[21],%L0x7ffffff50ce0[21],
               %L0x7ffffff50ce8[21],%L0x7ffffff50cf0[21],%L0x7ffffff50cf8[21]]*Y4**0+
       poly z [%L0x7ffffff50ca0[53],%L0x7ffffff50ca8[53],%L0x7ffffff50cb0[53],
               %L0x7ffffff50cb8[53],%L0x7ffffff50cc0[53],%L0x7ffffff50cc8[53],
               %L0x7ffffff50cd0[53],%L0x7ffffff50cd8[53],%L0x7ffffff50ce0[53],
               %L0x7ffffff50ce8[53],%L0x7ffffff50cf0[53],%L0x7ffffff50cf8[53]]*Y4**1 /\
G416 = poly z [%L0x7ffffff50ca0[22],%L0x7ffffff50ca8[22],%L0x7ffffff50cb0[22],
               %L0x7ffffff50cb8[22],%L0x7ffffff50cc0[22],%L0x7ffffff50cc8[22],
               %L0x7ffffff50cd0[22],%L0x7ffffff50cd8[22],%L0x7ffffff50ce0[22],
               %L0x7ffffff50ce8[22],%L0x7ffffff50cf0[22],%L0x7ffffff50cf8[22]]*Y4**0+
       poly z [%L0x7ffffff50ca0[54],%L0x7ffffff50ca8[54],%L0x7ffffff50cb0[54],
               %L0x7ffffff50cb8[54],%L0x7ffffff50cc0[54],%L0x7ffffff50cc8[54],
               %L0x7ffffff50cd0[54],%L0x7ffffff50cd8[54],%L0x7ffffff50ce0[54],
               %L0x7ffffff50ce8[54],%L0x7ffffff50cf0[54],%L0x7ffffff50cf8[54]]*Y4**1 /\
G417 = poly z [%L0x7ffffff50ca0[23],%L0x7ffffff50ca8[23],%L0x7ffffff50cb0[23],
                %L0x7ffffff50cb8[23],%L0x7ffffff50cc0[23],%L0x7ffffff50cc8[23],
                %L0x7ffffff50cd0[23],%L0x7ffffff50cd8[23],%L0x7ffffff50ce0[23],
                %L0x7ffffff50ce8[23],%L0x7ffffff50cf0[23],%L0x7ffffff50cf8[23]]*Y4**0+
       poly z [%L0x7ffffff50ca0[55],%L0x7ffffff50ca8[55],%L0x7ffffff50cb0[55],
               %L0x7ffffff50cb8[55],%L0x7ffffff50cc0[55],%L0x7ffffff50cc8[55],
               %L0x7ffffff50cd0[55],%L0x7ffffff50cd8[55],%L0x7ffffff50ce0[55],
               %L0x7ffffff50ce8[55],%L0x7ffffff50cf0[55],%L0x7ffffff50cf8[55]]*Y4**1 /\
G418 = poly z [%L0x7ffffff50ca0[24],%L0x7ffffff50ca8[24],%L0x7ffffff50cb0[24],
               %L0x7ffffff50cb8[24],%L0x7ffffff50cc0[24],%L0x7ffffff50cc8[24],
               %L0x7ffffff50cd0[24],%L0x7ffffff50cd8[24],%L0x7ffffff50ce0[24],
               %L0x7ffffff50ce8[24],%L0x7ffffff50cf0[24],%L0x7ffffff50cf8[24]]*Y4**0+
       poly z [%L0x7ffffff50ca0[56],%L0x7ffffff50ca8[56],%L0x7ffffff50cb0[56],
               %L0x7ffffff50cb8[56],%L0x7ffffff50cc0[56],%L0x7ffffff50cc8[56],
               %L0x7ffffff50cd0[56],%L0x7ffffff50cd8[56],%L0x7ffffff50ce0[56],
               %L0x7ffffff50ce8[56],%L0x7ffffff50cf0[56],%L0x7ffffff50cf8[56]]*Y4**1 /\
G419 = poly z [%L0x7ffffff50ca0[25],%L0x7ffffff50ca8[25],%L0x7ffffff50cb0[25],
               %L0x7ffffff50cb8[25],%L0x7ffffff50cc0[25],%L0x7ffffff50cc8[25],
               %L0x7ffffff50cd0[25],%L0x7ffffff50cd8[25],%L0x7ffffff50ce0[25],
               %L0x7ffffff50ce8[25],%L0x7ffffff50cf0[25],%L0x7ffffff50cf8[25]]*Y4**0+
       poly z [%L0x7ffffff50ca0[57],%L0x7ffffff50ca8[57],%L0x7ffffff50cb0[57],
               %L0x7ffffff50cb8[57],%L0x7ffffff50cc0[57],%L0x7ffffff50cc8[57],
               %L0x7ffffff50cd0[57],%L0x7ffffff50cd8[57],%L0x7ffffff50ce0[57],
               %L0x7ffffff50ce8[57],%L0x7ffffff50cf0[57],%L0x7ffffff50cf8[57]]*Y4**1 /\
G41a = poly z [%L0x7ffffff50ca0[26],%L0x7ffffff50ca8[26],%L0x7ffffff50cb0[26],
               %L0x7ffffff50cb8[26],%L0x7ffffff50cc0[26],%L0x7ffffff50cc8[26],
               %L0x7ffffff50cd0[26],%L0x7ffffff50cd8[26],%L0x7ffffff50ce0[26],
               %L0x7ffffff50ce8[26],%L0x7ffffff50cf0[26],%L0x7ffffff50cf8[26]]*Y4**0+
       poly z [%L0x7ffffff50ca0[58],%L0x7ffffff50ca8[58],%L0x7ffffff50cb0[58],
               %L0x7ffffff50cb8[58],%L0x7ffffff50cc0[58],%L0x7ffffff50cc8[58],
               %L0x7ffffff50cd0[58],%L0x7ffffff50cd8[58],%L0x7ffffff50ce0[58],
               %L0x7ffffff50ce8[58],%L0x7ffffff50cf0[58],%L0x7ffffff50cf8[58]]*Y4**1 /\
G41b = poly z [%L0x7ffffff50ca0[27],%L0x7ffffff50ca8[27],%L0x7ffffff50cb0[27],
               %L0x7ffffff50cb8[27],%L0x7ffffff50cc0[27],%L0x7ffffff50cc8[27],
               %L0x7ffffff50cd0[27],%L0x7ffffff50cd8[27],%L0x7ffffff50ce0[27],
               %L0x7ffffff50ce8[27],%L0x7ffffff50cf0[27],%L0x7ffffff50cf8[27]]*Y4**0+
       poly z [%L0x7ffffff50ca0[59],%L0x7ffffff50ca8[59],%L0x7ffffff50cb0[59],
               %L0x7ffffff50cb8[59],%L0x7ffffff50cc0[59],%L0x7ffffff50cc8[59],
               %L0x7ffffff50cd0[59],%L0x7ffffff50cd8[59],%L0x7ffffff50ce0[59],
               %L0x7ffffff50ce8[59],%L0x7ffffff50cf0[59],%L0x7ffffff50cf8[59]]*Y4**1 /\
G41c = poly z [%L0x7ffffff50ca0[28],%L0x7ffffff50ca8[28],%L0x7ffffff50cb0[28],
               %L0x7ffffff50cb8[28],%L0x7ffffff50cc0[28],%L0x7ffffff50cc8[28],
               %L0x7ffffff50cd0[28],%L0x7ffffff50cd8[28],%L0x7ffffff50ce0[28],
               %L0x7ffffff50ce8[28],%L0x7ffffff50cf0[28],%L0x7ffffff50cf8[28]]*Y4**0+
       poly z [%L0x7ffffff50ca0[60],%L0x7ffffff50ca8[60],%L0x7ffffff50cb0[60],
               %L0x7ffffff50cb8[60],%L0x7ffffff50cc0[60],%L0x7ffffff50cc8[60],
               %L0x7ffffff50cd0[60],%L0x7ffffff50cd8[60],%L0x7ffffff50ce0[60],
               %L0x7ffffff50ce8[60],%L0x7ffffff50cf0[60],%L0x7ffffff50cf8[60]]*Y4**1 /\
G41d = poly z [%L0x7ffffff50ca0[29],%L0x7ffffff50ca8[29],%L0x7ffffff50cb0[29],
               %L0x7ffffff50cb8[29],%L0x7ffffff50cc0[29],%L0x7ffffff50cc8[29],
               %L0x7ffffff50cd0[29],%L0x7ffffff50cd8[29],%L0x7ffffff50ce0[29],
               %L0x7ffffff50ce8[29],%L0x7ffffff50cf0[29],%L0x7ffffff50cf8[29]]*Y4**0+
       poly z [%L0x7ffffff50ca0[61],%L0x7ffffff50ca8[61],%L0x7ffffff50cb0[61],
               %L0x7ffffff50cb8[61],%L0x7ffffff50cc0[61],%L0x7ffffff50cc8[61],
               %L0x7ffffff50cd0[61],%L0x7ffffff50cd8[61],%L0x7ffffff50ce0[61],
               %L0x7ffffff50ce8[61],%L0x7ffffff50cf0[61],%L0x7ffffff50cf8[61]]*Y4**1 /\
G41e = poly z [%L0x7ffffff50ca0[30],%L0x7ffffff50ca8[30],%L0x7ffffff50cb0[30],
               %L0x7ffffff50cb8[30],%L0x7ffffff50cc0[30],%L0x7ffffff50cc8[30],
               %L0x7ffffff50cd0[30],%L0x7ffffff50cd8[30],%L0x7ffffff50ce0[30],
               %L0x7ffffff50ce8[30],%L0x7ffffff50cf0[30],%L0x7ffffff50cf8[30]]*Y4**0+
       poly z [%L0x7ffffff50ca0[62],%L0x7ffffff50ca8[62],%L0x7ffffff50cb0[62],
               %L0x7ffffff50cb8[62],%L0x7ffffff50cc0[62],%L0x7ffffff50cc8[62],
               %L0x7ffffff50cd0[62],%L0x7ffffff50cd8[62],%L0x7ffffff50ce0[62],
               %L0x7ffffff50ce8[62],%L0x7ffffff50cf0[62],%L0x7ffffff50cf8[62]]*Y4**1 /\
G41f = poly z [%L0x7ffffff50ca0[31],%L0x7ffffff50ca8[31],%L0x7ffffff50cb0[31],
               %L0x7ffffff50cb8[31],%L0x7ffffff50cc0[31],%L0x7ffffff50cc8[31],
               %L0x7ffffff50cd0[31],%L0x7ffffff50cd8[31],%L0x7ffffff50ce0[31],
               %L0x7ffffff50ce8[31],%L0x7ffffff50cf0[31],%L0x7ffffff50cf8[31]]*Y4**0+
       poly z [%L0x7ffffff50ca0[63],%L0x7ffffff50ca8[63],%L0x7ffffff50cb0[63],
               %L0x7ffffff50cb8[63],%L0x7ffffff50cc0[63],%L0x7ffffff50cc8[63],
               %L0x7ffffff50cd0[63],%L0x7ffffff50cd8[63],%L0x7ffffff50ce0[63],
               %L0x7ffffff50ce8[63],%L0x7ffffff50cf0[63],%L0x7ffffff50cf8[63]]*Y4**1
prove with [all ghosts]
&&
   true
}

