(* popper: cv_cec.exe -jobs 8 -v -ov a00,a01,a02,a03,a04,a05,a06,a07,a08,a09,a10,a11,a12,a13,a14,a15,a16,a17,a18,a19,a20,a21,a22,a23,a24#b00,b01,b02,b03,b04,b05,b06,b07,b08,b09,b10,b11,b12,b13,b14,b15,b16,b17,b18,b19,b20,b21,b22,b23,b24#c00,c01,c02,c03,c04,c05,c06,c07,c08,c09,c10,c11,c12,c13,c14,c15,c16,c17,c18,c19,c20,c21,c22,c23,c24#d00,d01,d02,d03,d04,d05,d06,d07,d08,d09,d10,d11,d12,d13,d14,d15,d16,d17,d18,d19,d20,d21,d22,d23,d24#e00,e01,e02,e03,e04,e05,e06,e07,e08,e09,e10,e11,e12,e13,e14,e15,e16,e17,e18,e19,e20,e21,e22,e23,e24#f00,f01,f02,f03,f04,f05,f06,f07,f08,f09,f10,f11,f12,f13,f14,f15,f16,f17,f18,f19,f20,f21,f22,f23,f24#g00,g01,g02,g03,g04,g05,g06,g07,g08,g09,g10,g11,g12,g13,g14,g15,g16,g17,g18,g19,g20,g21,g22,g23,g24#h00,h01,h02,h03,h04,h05,h06,h07,h08,h09,h10,h11,h12,h13,h14,h15,h16,h17,h18,h19,h20,h21,h22,h23,h24 ../KeccakP-1600-reference_KeccakP1600times8_Permute_24rounds.cl KeccakP1600times8_PermuteAll_24rounds_12_rounds_unrolled.cl
Parsing CryptoLine file:                [OK]            0.038716 seconds
Checking well-formedness:               [OK]            0.053784 seconds
Parsing CryptoLine file:                [OK]            7.242025 seconds
Checking well-formedness:               [OK]            7.251286 seconds
Equivalence of output group #0:         [OK]            610.508333 seconds
Equivalence of output group #1:         [OK]            657.818005 seconds
Equivalence of output group #2:         [OK]            671.664195 seconds
Equivalence of output group #4:         [OK]            693.999854 seconds
Equivalence of output group #5:         [OK]            676.858681 seconds
Equivalence of output group #6:         [OK]            664.523532 seconds
Equivalence of output group #3:         [OK]            727.858965 seconds
Equivalence of output group #7:         [OK]            673.418658 seconds
Final result:                           [OK]            821.182965 seconds
*)
(*
on popper, equivalence against XKCP Keccak[1600,24]x8 SSSE3, 8 threads:
Parsing CryptoLine file:		[OK]		7.363872 seconds
Checking well-formedness:		[OK]		7.371046 seconds
Parsing CryptoLine file:		[OK]		0.222719 seconds
Checking well-formedness:		[OK]		0.074024 seconds
Equivalence of output group #0:		[OK]		864.435942 seconds
Equivalence of output group #1:		[OK]		847.992529 seconds
Equivalence of output group #3:		[OK]		817.759095 seconds
Equivalence of output group #2:		[OK]		838.037058 seconds
Equivalence of output group #4:		[OK]		810.181351 seconds
Equivalence of output group #6:		[OK]		774.459356 seconds
Equivalence of output group #7:		[OK]		758.706901 seconds
Equivalence of output group #5:		[OK]		802.876869 seconds
Final result:				[OK]		914.566003 seconds
*)

proc vpternlogq64 (uint64 ymmH, uint64 ymmM, uint64 ymmL, uint8 table) =
{ true && true }
  mov h00 ymmH;
  spl h20 h00 h00 32;
  spl h10 h00 h00 16;spl h30 h20 h20 16;
  spl h08 h00 h00  8;spl h18 h10 h10  8;spl h28 h20 h20  8;spl h38 h30 h30  8;
  spl h04 h00 h00  4;spl h0c h08 h08  4;spl h14 h10 h10  4;spl h1c h18 h18  4;
  spl h24 h20 h20  4;spl h2c h28 h28  4;spl h34 h30 h30  4;spl h3c h38 h38  4;
  spl h02 h00 h00  2;spl h06 h04 h04  2;spl h0a h08 h08  2;spl h0e h0c h0c  2;
  spl h12 h10 h10  2;spl h16 h14 h14  2;spl h1a h18 h18  2;spl h1e h1c h1c  2;
  spl h22 h20 h20  2;spl h26 h24 h24  2;spl h2a h28 h28  2;spl h2e h2c h2c  2;
  spl h32 h30 h30  2;spl h36 h34 h34  2;spl h3a h38 h38  2;spl h3e h3c h3c  2;
  spl h01 h00 h00  1;spl h03 h02 h02  1;spl h05 h04 h04  1;spl h07 h06 h06  1;
  spl h09 h08 h08  1;spl h0b h0a h0a  1;spl h0d h0c h0c  1;spl h0f h0e h0e  1;
  spl h11 h10 h10  1;spl h13 h12 h12  1;spl h15 h14 h14  1;spl h17 h16 h16  1;
  spl h19 h18 h18  1;spl h1b h1a h1a  1;spl h1d h1c h1c  1;spl h1f h1e h1e  1;
  spl h21 h20 h20  1;spl h23 h22 h22  1;spl h25 h24 h24  1;spl h27 h26 h26  1;
  spl h29 h28 h28  1;spl h2b h2a h2a  1;spl h2d h2c h2c  1;spl h2f h2e h2e  1;
  spl h31 h30 h30  1;spl h33 h32 h32  1;spl h35 h34 h34  1;spl h37 h36 h36  1;
  spl h39 h38 h38  1;spl h3b h3a h3a  1;spl h3d h3c h3c  1;spl h3f h3e h3e  1;
  mov m00 ymmM;
  spl m20 m00 m00 32;
  spl m10 m00 m00 16;spl m30 m20 m20 16;
  spl m08 m00 m00  8;spl m18 m10 m10  8;spl m28 m20 m20  8;spl m38 m30 m30  8;
  spl m04 m00 m00  4;spl m0c m08 m08  4;spl m14 m10 m10  4;spl m1c m18 m18  4;
  spl m24 m20 m20  4;spl m2c m28 m28  4;spl m34 m30 m30  4;spl m3c m38 m38  4;
  spl m02 m00 m00  2;spl m06 m04 m04  2;spl m0a m08 m08  2;spl m0e m0c m0c  2;
  spl m12 m10 m10  2;spl m16 m14 m14  2;spl m1a m18 m18  2;spl m1e m1c m1c  2;
  spl m22 m20 m20  2;spl m26 m24 m24  2;spl m2a m28 m28  2;spl m2e m2c m2c  2;
  spl m32 m30 m30  2;spl m36 m34 m34  2;spl m3a m38 m38  2;spl m3e m3c m3c  2;
  spl m01 m00 m00  1;spl m03 m02 m02  1;spl m05 m04 m04  1;spl m07 m06 m06  1;
  spl m09 m08 m08  1;spl m0b m0a m0a  1;spl m0d m0c m0c  1;spl m0f m0e m0e  1;
  spl m11 m10 m10  1;spl m13 m12 m12  1;spl m15 m14 m14  1;spl m17 m16 m16  1;
  spl m19 m18 m18  1;spl m1b m1a m1a  1;spl m1d m1c m1c  1;spl m1f m1e m1e  1;
  spl m21 m20 m20  1;spl m23 m22 m22  1;spl m25 m24 m24  1;spl m27 m26 m26  1;
  spl m29 m28 m28  1;spl m2b m2a m2a  1;spl m2d m2c m2c  1;spl m2f m2e m2e  1;
  spl m31 m30 m30  1;spl m33 m32 m32  1;spl m35 m34 m34  1;spl m37 m36 m36  1;
  spl m39 m38 m38  1;spl m3b m3a m3a  1;spl m3d m3c m3c  1;spl m3f m3e m3e  1;
  mov l00 ymmL;
  spl l20 l00 l00 32;
  spl l10 l00 l00 16;spl l30 l20 l20 16;
  spl l08 l00 l00  8;spl l18 l10 l10  8;spl l28 l20 l20  8;spl l38 l30 l30  8;
  spl l04 l00 l00  4;spl l0c l08 l08  4;spl l14 l10 l10  4;spl l1c l18 l18  4;
  spl l24 l20 l20  4;spl l2c l28 l28  4;spl l34 l30 l30  4;spl l3c l38 l38  4;
  spl l02 l00 l00  2;spl l06 l04 l04  2;spl l0a l08 l08  2;spl l0e l0c l0c  2;
  spl l12 l10 l10  2;spl l16 l14 l14  2;spl l1a l18 l18  2;spl l1e l1c l1c  2;
  spl l22 l20 l20  2;spl l26 l24 l24  2;spl l2a l28 l28  2;spl l2e l2c l2c  2;
  spl l32 l30 l30  2;spl l36 l34 l34  2;spl l3a l38 l38  2;spl l3e l3c l3c  2;
  spl l01 l00 l00  1;spl l03 l02 l02  1;spl l05 l04 l04  1;spl l07 l06 l06  1;
  spl l09 l08 l08  1;spl l0b l0a l0a  1;spl l0d l0c l0c  1;spl l0f l0e l0e  1;
  spl l11 l10 l10  1;spl l13 l12 l12  1;spl l15 l14 l14  1;spl l17 l16 l16  1;
  spl l19 l18 l18  1;spl l1b l1a l1a  1;spl l1d l1c l1c  1;spl l1f l1e l1e  1;
  spl l21 l20 l20  1;spl l23 l22 l22  1;spl l25 l24 l24  1;spl l27 l26 l26  1;
  spl l29 l28 l28  1;spl l2b l2a l2a  1;spl l2d l2c l2c  1;spl l2f l2e l2e  1;
  spl l31 l30 l30  1;spl l33 l32 l32  1;spl l35 l34 l34  1;spl l37 l36 l36  1;
  spl l39 l38 l38  1;spl l3b l3a l3a  1;spl l3d l3c l3c  1;spl l3f l3e l3e  1;
  cast h00@bit h00;cast h01@bit h01;cast h02@bit h02;cast h03@bit h03;
  cast h04@bit h04;cast h05@bit h05;cast h06@bit h06;cast h07@bit h07;
  cast h08@bit h08;cast h09@bit h09;cast h0a@bit h0a;cast h0b@bit h0b;
  cast h0c@bit h0c;cast h0d@bit h0d;cast h0e@bit h0e;cast h0f@bit h0f;
  cast h10@bit h10;cast h11@bit h11;cast h12@bit h12;cast h13@bit h13;
  cast h14@bit h14;cast h15@bit h15;cast h16@bit h16;cast h17@bit h17;
  cast h18@bit h18;cast h19@bit h19;cast h1a@bit h1a;cast h1b@bit h1b;
  cast h1c@bit h1c;cast h1d@bit h1d;cast h1e@bit h1e;cast h1f@bit h1f;
  cast h20@bit h20;cast h21@bit h21;cast h22@bit h22;cast h23@bit h23;
  cast h24@bit h24;cast h25@bit h25;cast h26@bit h26;cast h27@bit h27;
  cast h28@bit h28;cast h29@bit h29;cast h2a@bit h2a;cast h2b@bit h2b;
  cast h2c@bit h2c;cast h2d@bit h2d;cast h2e@bit h2e;cast h2f@bit h2f;
  cast h30@bit h30;cast h31@bit h31;cast h32@bit h32;cast h33@bit h33;
  cast h34@bit h34;cast h35@bit h35;cast h36@bit h36;cast h37@bit h37;
  cast h38@bit h38;cast h39@bit h39;cast h3a@bit h3a;cast h3b@bit h3b;
  cast h3c@bit h3c;cast h3d@bit h3d;cast h3e@bit h3e;cast h3f@bit h3f;
  cast m00@bit m00;cast m01@bit m01;cast m02@bit m02;cast m03@bit m03;
  cast m04@bit m04;cast m05@bit m05;cast m06@bit m06;cast m07@bit m07;
  cast m08@bit m08;cast m09@bit m09;cast m0a@bit m0a;cast m0b@bit m0b;
  cast m0c@bit m0c;cast m0d@bit m0d;cast m0e@bit m0e;cast m0f@bit m0f;
  cast m10@bit m10;cast m11@bit m11;cast m12@bit m12;cast m13@bit m13;
  cast m14@bit m14;cast m15@bit m15;cast m16@bit m16;cast m17@bit m17;
  cast m18@bit m18;cast m19@bit m19;cast m1a@bit m1a;cast m1b@bit m1b;
  cast m1c@bit m1c;cast m1d@bit m1d;cast m1e@bit m1e;cast m1f@bit m1f;
  cast m20@bit m20;cast m21@bit m21;cast m22@bit m22;cast m23@bit m23;
  cast m24@bit m24;cast m25@bit m25;cast m26@bit m26;cast m27@bit m27;
  cast m28@bit m28;cast m29@bit m29;cast m2a@bit m2a;cast m2b@bit m2b;
  cast m2c@bit m2c;cast m2d@bit m2d;cast m2e@bit m2e;cast m2f@bit m2f;
  cast m30@bit m30;cast m31@bit m31;cast m32@bit m32;cast m33@bit m33;
  cast m34@bit m34;cast m35@bit m35;cast m36@bit m36;cast m37@bit m37;
  cast m38@bit m38;cast m39@bit m39;cast m3a@bit m3a;cast m3b@bit m3b;
  cast m3c@bit m3c;cast m3d@bit m3d;cast m3e@bit m3e;cast m3f@bit m3f;
  cast l00@bit l00;cast l01@bit l01;cast l02@bit l02;cast l03@bit l03;
  cast l04@bit l04;cast l05@bit l05;cast l06@bit l06;cast l07@bit l07;
  cast l08@bit l08;cast l09@bit l09;cast l0a@bit l0a;cast l0b@bit l0b;
  cast l0c@bit l0c;cast l0d@bit l0d;cast l0e@bit l0e;cast l0f@bit l0f;
  cast l10@bit l10;cast l11@bit l11;cast l12@bit l12;cast l13@bit l13;
  cast l14@bit l14;cast l15@bit l15;cast l16@bit l16;cast l17@bit l17;
  cast l18@bit l18;cast l19@bit l19;cast l1a@bit l1a;cast l1b@bit l1b;
  cast l1c@bit l1c;cast l1d@bit l1d;cast l1e@bit l1e;cast l1f@bit l1f;
  cast l20@bit l20;cast l21@bit l21;cast l22@bit l22;cast l23@bit l23;
  cast l24@bit l24;cast l25@bit l25;cast l26@bit l26;cast l27@bit l27;
  cast l28@bit l28;cast l29@bit l29;cast l2a@bit l2a;cast l2b@bit l2b;
  cast l2c@bit l2c;cast l2d@bit l2d;cast l2e@bit l2e;cast l2f@bit l2f;
  cast l30@bit l30;cast l31@bit l31;cast l32@bit l32;cast l33@bit l33;
  cast l34@bit l34;cast l35@bit l35;cast l36@bit l36;cast l37@bit l37;
  cast l38@bit l38;cast l39@bit l39;cast l3a@bit l3a;cast l3b@bit l3b;
  cast l3c@bit l3c;cast l3d@bit l3d;cast l3e@bit l3e;cast l3f@bit l3f;
  cmov maskH h00 0xf0@uint8 0x0f@uint8; cmov maskM m00 0xcc@uint8 0x33@uint8;
  cmov maskL l00 0xaa@uint8 0x55@uint8;
  and mask00@uint8 maskH maskM; and mask00@uint8 mask00 maskL;
  and o00@uint8 mask00 table; subc o00 dc o00 1@uint8;
  cmov maskH h01 0xf0@uint8 0x0f@uint8; cmov maskM m01 0xcc@uint8 0x33@uint8;
  cmov maskL l01 0xaa@uint8 0x55@uint8;
  and mask01@uint8 maskH maskM; and mask01@uint8 mask01 maskL;
  and o01@uint8 mask01 table; subc o01 dc o01 1@uint8;
  cmov maskH h02 0xf0@uint8 0x0f@uint8; cmov maskM m02 0xcc@uint8 0x33@uint8;
  cmov maskL l02 0xaa@uint8 0x55@uint8;
  and mask02@uint8 maskH maskM; and mask02@uint8 mask02 maskL;
  and o02@uint8 mask02 table; subc o02 dc o02 1@uint8;
  cmov maskH h03 0xf0@uint8 0x0f@uint8; cmov maskM m03 0xcc@uint8 0x33@uint8;
  cmov maskL l03 0xaa@uint8 0x55@uint8;
  and mask03@uint8 maskH maskM; and mask03@uint8 mask03 maskL;
  and o03@uint8 mask03 table; subc o03 dc o03 1@uint8;
  cmov maskH h04 0xf0@uint8 0x0f@uint8; cmov maskM m04 0xcc@uint8 0x33@uint8;
  cmov maskL l04 0xaa@uint8 0x55@uint8;
  and mask04@uint8 maskH maskM; and mask04@uint8 mask04 maskL;
  and o04@uint8 mask04 table; subc o04 dc o04 1@uint8;
  cmov maskH h05 0xf0@uint8 0x0f@uint8; cmov maskM m05 0xcc@uint8 0x33@uint8;
  cmov maskL l05 0xaa@uint8 0x55@uint8;
  and mask05@uint8 maskH maskM; and mask05@uint8 mask05 maskL;
  and o05@uint8 mask05 table; subc o05 dc o05 1@uint8;
  cmov maskH h06 0xf0@uint8 0x0f@uint8; cmov maskM m06 0xcc@uint8 0x33@uint8;
  cmov maskL l06 0xaa@uint8 0x55@uint8;
  and mask06@uint8 maskH maskM; and mask06@uint8 mask06 maskL;
  and o06@uint8 mask06 table; subc o06 dc o06 1@uint8;
  cmov maskH h07 0xf0@uint8 0x0f@uint8; cmov maskM m07 0xcc@uint8 0x33@uint8;
  cmov maskL l07 0xaa@uint8 0x55@uint8;
  and mask07@uint8 maskH maskM; and mask07@uint8 mask07 maskL;
  and o07@uint8 mask07 table; subc o07 dc o07 1@uint8;
  cmov maskH h08 0xf0@uint8 0x0f@uint8; cmov maskM m08 0xcc@uint8 0x33@uint8;
  cmov maskL l08 0xaa@uint8 0x55@uint8;
  and mask08@uint8 maskH maskM; and mask08@uint8 mask08 maskL;
  and o08@uint8 mask08 table; subc o08 dc o08 1@uint8;
  cmov maskH h09 0xf0@uint8 0x0f@uint8; cmov maskM m09 0xcc@uint8 0x33@uint8;
  cmov maskL l09 0xaa@uint8 0x55@uint8;
  and mask09@uint8 maskH maskM; and mask09@uint8 mask09 maskL;
  and o09@uint8 mask09 table; subc o09 dc o09 1@uint8;
  cmov maskH h0a 0xf0@uint8 0x0f@uint8; cmov maskM m0a 0xcc@uint8 0x33@uint8;
  cmov maskL l0a 0xaa@uint8 0x55@uint8;
  and mask0a@uint8 maskH maskM; and mask0a@uint8 mask0a maskL;
  and o0a@uint8 mask0a table; subc o0a dc o0a 1@uint8;
  cmov maskH h0b 0xf0@uint8 0x0f@uint8; cmov maskM m0b 0xcc@uint8 0x33@uint8;
  cmov maskL l0b 0xaa@uint8 0x55@uint8;
  and mask0b@uint8 maskH maskM; and mask0b@uint8 mask0b maskL;
  and o0b@uint8 mask0b table; subc o0b dc o0b 1@uint8;
  cmov maskH h0c 0xf0@uint8 0x0f@uint8; cmov maskM m0c 0xcc@uint8 0x33@uint8;
  cmov maskL l0c 0xaa@uint8 0x55@uint8;
  and mask0c@uint8 maskH maskM; and mask0c@uint8 mask0c maskL;
  and o0c@uint8 mask0c table; subc o0c dc o0c 1@uint8;
  cmov maskH h0d 0xf0@uint8 0x0f@uint8; cmov maskM m0d 0xcc@uint8 0x33@uint8;
  cmov maskL l0d 0xaa@uint8 0x55@uint8;
  and mask0d@uint8 maskH maskM; and mask0d@uint8 mask0d maskL;
  and o0d@uint8 mask0d table; subc o0d dc o0d 1@uint8;
  cmov maskH h0e 0xf0@uint8 0x0f@uint8; cmov maskM m0e 0xcc@uint8 0x33@uint8;
  cmov maskL l0e 0xaa@uint8 0x55@uint8;
  and mask0e@uint8 maskH maskM; and mask0e@uint8 mask0e maskL;
  and o0e@uint8 mask0e table; subc o0e dc o0e 1@uint8;
  cmov maskH h0f 0xf0@uint8 0x0f@uint8; cmov maskM m0f 0xcc@uint8 0x33@uint8;
  cmov maskL l0f 0xaa@uint8 0x55@uint8;
  and mask0f@uint8 maskH maskM; and mask0f@uint8 mask0f maskL;
  and o0f@uint8 mask0f table; subc o0f dc o0f 1@uint8;
  cmov maskH h10 0xf0@uint8 0x0f@uint8; cmov maskM m10 0xcc@uint8 0x33@uint8;
  cmov maskL l10 0xaa@uint8 0x55@uint8;
  and mask10@uint8 maskH maskM; and mask10@uint8 mask10 maskL;
  and o10@uint8 mask10 table; subc o10 dc o10 1@uint8;
  cmov maskH h11 0xf0@uint8 0x0f@uint8; cmov maskM m11 0xcc@uint8 0x33@uint8;
  cmov maskL l11 0xaa@uint8 0x55@uint8;
  and mask11@uint8 maskH maskM; and mask11@uint8 mask11 maskL;
  and o11@uint8 mask11 table; subc o11 dc o11 1@uint8;
  cmov maskH h12 0xf0@uint8 0x0f@uint8; cmov maskM m12 0xcc@uint8 0x33@uint8;
  cmov maskL l12 0xaa@uint8 0x55@uint8;
  and mask12@uint8 maskH maskM; and mask12@uint8 mask12 maskL;
  and o12@uint8 mask12 table; subc o12 dc o12 1@uint8;
  cmov maskH h13 0xf0@uint8 0x0f@uint8; cmov maskM m13 0xcc@uint8 0x33@uint8;
  cmov maskL l13 0xaa@uint8 0x55@uint8;
  and mask13@uint8 maskH maskM; and mask13@uint8 mask13 maskL;
  and o13@uint8 mask13 table; subc o13 dc o13 1@uint8;
  cmov maskH h14 0xf0@uint8 0x0f@uint8; cmov maskM m14 0xcc@uint8 0x33@uint8;
  cmov maskL l14 0xaa@uint8 0x55@uint8;
  and mask14@uint8 maskH maskM; and mask14@uint8 mask14 maskL;
  and o14@uint8 mask14 table; subc o14 dc o14 1@uint8;
  cmov maskH h15 0xf0@uint8 0x0f@uint8; cmov maskM m15 0xcc@uint8 0x33@uint8;
  cmov maskL l15 0xaa@uint8 0x55@uint8;
  and mask15@uint8 maskH maskM; and mask15@uint8 mask15 maskL;
  and o15@uint8 mask15 table; subc o15 dc o15 1@uint8;
  cmov maskH h16 0xf0@uint8 0x0f@uint8; cmov maskM m16 0xcc@uint8 0x33@uint8;
  cmov maskL l16 0xaa@uint8 0x55@uint8;
  and mask16@uint8 maskH maskM; and mask16@uint8 mask16 maskL;
  and o16@uint8 mask16 table; subc o16 dc o16 1@uint8;
  cmov maskH h17 0xf0@uint8 0x0f@uint8; cmov maskM m17 0xcc@uint8 0x33@uint8;
  cmov maskL l17 0xaa@uint8 0x55@uint8;
  and mask17@uint8 maskH maskM; and mask17@uint8 mask17 maskL;
  and o17@uint8 mask17 table; subc o17 dc o17 1@uint8;
  cmov maskH h18 0xf0@uint8 0x0f@uint8; cmov maskM m18 0xcc@uint8 0x33@uint8;
  cmov maskL l18 0xaa@uint8 0x55@uint8;
  and mask18@uint8 maskH maskM; and mask18@uint8 mask18 maskL;
  and o18@uint8 mask18 table; subc o18 dc o18 1@uint8;
  cmov maskH h19 0xf0@uint8 0x0f@uint8; cmov maskM m19 0xcc@uint8 0x33@uint8;
  cmov maskL l19 0xaa@uint8 0x55@uint8;
  and mask19@uint8 maskH maskM; and mask19@uint8 mask19 maskL;
  and o19@uint8 mask19 table; subc o19 dc o19 1@uint8;
  cmov maskH h1a 0xf0@uint8 0x0f@uint8; cmov maskM m1a 0xcc@uint8 0x33@uint8;
  cmov maskL l1a 0xaa@uint8 0x55@uint8;
  and mask1a@uint8 maskH maskM; and mask1a@uint8 mask1a maskL;
  and o1a@uint8 mask1a table; subc o1a dc o1a 1@uint8;
  cmov maskH h1b 0xf0@uint8 0x0f@uint8; cmov maskM m1b 0xcc@uint8 0x33@uint8;
  cmov maskL l1b 0xaa@uint8 0x55@uint8;
  and mask1b@uint8 maskH maskM; and mask1b@uint8 mask1b maskL;
  and o1b@uint8 mask1b table; subc o1b dc o1b 1@uint8;
  cmov maskH h1c 0xf0@uint8 0x0f@uint8; cmov maskM m1c 0xcc@uint8 0x33@uint8;
  cmov maskL l1c 0xaa@uint8 0x55@uint8;
  and mask1c@uint8 maskH maskM; and mask1c@uint8 mask1c maskL;
  and o1c@uint8 mask1c table; subc o1c dc o1c 1@uint8;
  cmov maskH h1d 0xf0@uint8 0x0f@uint8; cmov maskM m1d 0xcc@uint8 0x33@uint8;
  cmov maskL l1d 0xaa@uint8 0x55@uint8;
  and mask1d@uint8 maskH maskM; and mask1d@uint8 mask1d maskL;
  and o1d@uint8 mask1d table; subc o1d dc o1d 1@uint8;
  cmov maskH h1e 0xf0@uint8 0x0f@uint8; cmov maskM m1e 0xcc@uint8 0x33@uint8;
  cmov maskL l1e 0xaa@uint8 0x55@uint8;
  and mask1e@uint8 maskH maskM; and mask1e@uint8 mask1e maskL;
  and o1e@uint8 mask1e table; subc o1e dc o1e 1@uint8;
  cmov maskH h1f 0xf0@uint8 0x0f@uint8; cmov maskM m1f 0xcc@uint8 0x33@uint8;
  cmov maskL l1f 0xaa@uint8 0x55@uint8;
  and mask1f@uint8 maskH maskM; and mask1f@uint8 mask1f maskL;
  and o1f@uint8 mask1f table; subc o1f dc o1f 1@uint8;
  cmov maskH h20 0xf0@uint8 0x0f@uint8; cmov maskM m20 0xcc@uint8 0x33@uint8;
  cmov maskL l20 0xaa@uint8 0x55@uint8;
  and mask20@uint8 maskH maskM; and mask20@uint8 mask20 maskL;
  and o20@uint8 mask20 table; subc o20 dc o20 1@uint8;
  cmov maskH h21 0xf0@uint8 0x0f@uint8; cmov maskM m21 0xcc@uint8 0x33@uint8;
  cmov maskL l21 0xaa@uint8 0x55@uint8;
  and mask21@uint8 maskH maskM; and mask21@uint8 mask21 maskL;
  and o21@uint8 mask21 table; subc o21 dc o21 1@uint8;
  cmov maskH h22 0xf0@uint8 0x0f@uint8; cmov maskM m22 0xcc@uint8 0x33@uint8;
  cmov maskL l22 0xaa@uint8 0x55@uint8;
  and mask22@uint8 maskH maskM; and mask22@uint8 mask22 maskL;
  and o22@uint8 mask22 table; subc o22 dc o22 1@uint8;
  cmov maskH h23 0xf0@uint8 0x0f@uint8; cmov maskM m23 0xcc@uint8 0x33@uint8;
  cmov maskL l23 0xaa@uint8 0x55@uint8;
  and mask23@uint8 maskH maskM; and mask23@uint8 mask23 maskL;
  and o23@uint8 mask23 table; subc o23 dc o23 1@uint8;
  cmov maskH h24 0xf0@uint8 0x0f@uint8; cmov maskM m24 0xcc@uint8 0x33@uint8;
  cmov maskL l24 0xaa@uint8 0x55@uint8;
  and mask24@uint8 maskH maskM; and mask24@uint8 mask24 maskL;
  and o24@uint8 mask24 table; subc o24 dc o24 1@uint8;
  cmov maskH h25 0xf0@uint8 0x0f@uint8; cmov maskM m25 0xcc@uint8 0x33@uint8;
  cmov maskL l25 0xaa@uint8 0x55@uint8;
  and mask25@uint8 maskH maskM; and mask25@uint8 mask25 maskL;
  and o25@uint8 mask25 table; subc o25 dc o25 1@uint8;
  cmov maskH h26 0xf0@uint8 0x0f@uint8; cmov maskM m26 0xcc@uint8 0x33@uint8;
  cmov maskL l26 0xaa@uint8 0x55@uint8;
  and mask26@uint8 maskH maskM; and mask26@uint8 mask26 maskL;
  and o26@uint8 mask26 table; subc o26 dc o26 1@uint8;
  cmov maskH h27 0xf0@uint8 0x0f@uint8; cmov maskM m27 0xcc@uint8 0x33@uint8;
  cmov maskL l27 0xaa@uint8 0x55@uint8;
  and mask27@uint8 maskH maskM; and mask27@uint8 mask27 maskL;
  and o27@uint8 mask27 table; subc o27 dc o27 1@uint8;
  cmov maskH h28 0xf0@uint8 0x0f@uint8; cmov maskM m28 0xcc@uint8 0x33@uint8;
  cmov maskL l28 0xaa@uint8 0x55@uint8;
  and mask28@uint8 maskH maskM; and mask28@uint8 mask28 maskL;
  and o28@uint8 mask28 table; subc o28 dc o28 1@uint8;
  cmov maskH h29 0xf0@uint8 0x0f@uint8; cmov maskM m29 0xcc@uint8 0x33@uint8;
  cmov maskL l29 0xaa@uint8 0x55@uint8;
  and mask29@uint8 maskH maskM; and mask29@uint8 mask29 maskL;
  and o29@uint8 mask29 table; subc o29 dc o29 1@uint8;
  cmov maskH h2a 0xf0@uint8 0x0f@uint8; cmov maskM m2a 0xcc@uint8 0x33@uint8;
  cmov maskL l2a 0xaa@uint8 0x55@uint8;
  and mask2a@uint8 maskH maskM; and mask2a@uint8 mask2a maskL;
  and o2a@uint8 mask2a table; subc o2a dc o2a 1@uint8;
  cmov maskH h2b 0xf0@uint8 0x0f@uint8; cmov maskM m2b 0xcc@uint8 0x33@uint8;
  cmov maskL l2b 0xaa@uint8 0x55@uint8;
  and mask2b@uint8 maskH maskM; and mask2b@uint8 mask2b maskL;
  and o2b@uint8 mask2b table; subc o2b dc o2b 1@uint8;
  cmov maskH h2c 0xf0@uint8 0x0f@uint8; cmov maskM m2c 0xcc@uint8 0x33@uint8;
  cmov maskL l2c 0xaa@uint8 0x55@uint8;
  and mask2c@uint8 maskH maskM; and mask2c@uint8 mask2c maskL;
  and o2c@uint8 mask2c table; subc o2c dc o2c 1@uint8;
  cmov maskH h2d 0xf0@uint8 0x0f@uint8; cmov maskM m2d 0xcc@uint8 0x33@uint8;
  cmov maskL l2d 0xaa@uint8 0x55@uint8;
  and mask2d@uint8 maskH maskM; and mask2d@uint8 mask2d maskL;
  and o2d@uint8 mask2d table; subc o2d dc o2d 1@uint8;
  cmov maskH h2e 0xf0@uint8 0x0f@uint8; cmov maskM m2e 0xcc@uint8 0x33@uint8;
  cmov maskL l2e 0xaa@uint8 0x55@uint8;
  and mask2e@uint8 maskH maskM; and mask2e@uint8 mask2e maskL;
  and o2e@uint8 mask2e table; subc o2e dc o2e 1@uint8;
  cmov maskH h2f 0xf0@uint8 0x0f@uint8; cmov maskM m2f 0xcc@uint8 0x33@uint8;
  cmov maskL l2f 0xaa@uint8 0x55@uint8;
  and mask2f@uint8 maskH maskM; and mask2f@uint8 mask2f maskL;
  and o2f@uint8 mask2f table; subc o2f dc o2f 1@uint8;
  cmov maskH h30 0xf0@uint8 0x0f@uint8; cmov maskM m30 0xcc@uint8 0x33@uint8;
  cmov maskL l30 0xaa@uint8 0x55@uint8;
  and mask30@uint8 maskH maskM; and mask30@uint8 mask30 maskL;
  and o30@uint8 mask30 table; subc o30 dc o30 1@uint8;
  cmov maskH h31 0xf0@uint8 0x0f@uint8; cmov maskM m31 0xcc@uint8 0x33@uint8;
  cmov maskL l31 0xaa@uint8 0x55@uint8;
  and mask31@uint8 maskH maskM; and mask31@uint8 mask31 maskL;
  and o31@uint8 mask31 table; subc o31 dc o31 1@uint8;
  cmov maskH h32 0xf0@uint8 0x0f@uint8; cmov maskM m32 0xcc@uint8 0x33@uint8;
  cmov maskL l32 0xaa@uint8 0x55@uint8;
  and mask32@uint8 maskH maskM; and mask32@uint8 mask32 maskL;
  and o32@uint8 mask32 table; subc o32 dc o32 1@uint8;
  cmov maskH h33 0xf0@uint8 0x0f@uint8; cmov maskM m33 0xcc@uint8 0x33@uint8;
  cmov maskL l33 0xaa@uint8 0x55@uint8;
  and mask33@uint8 maskH maskM; and mask33@uint8 mask33 maskL;
  and o33@uint8 mask33 table; subc o33 dc o33 1@uint8;
  cmov maskH h34 0xf0@uint8 0x0f@uint8; cmov maskM m34 0xcc@uint8 0x33@uint8;
  cmov maskL l34 0xaa@uint8 0x55@uint8;
  and mask34@uint8 maskH maskM; and mask34@uint8 mask34 maskL;
  and o34@uint8 mask34 table; subc o34 dc o34 1@uint8;
  cmov maskH h35 0xf0@uint8 0x0f@uint8; cmov maskM m35 0xcc@uint8 0x33@uint8;
  cmov maskL l35 0xaa@uint8 0x55@uint8;
  and mask35@uint8 maskH maskM; and mask35@uint8 mask35 maskL;
  and o35@uint8 mask35 table; subc o35 dc o35 1@uint8;
  cmov maskH h36 0xf0@uint8 0x0f@uint8; cmov maskM m36 0xcc@uint8 0x33@uint8;
  cmov maskL l36 0xaa@uint8 0x55@uint8;
  and mask36@uint8 maskH maskM; and mask36@uint8 mask36 maskL;
  and o36@uint8 mask36 table; subc o36 dc o36 1@uint8;
  cmov maskH h37 0xf0@uint8 0x0f@uint8; cmov maskM m37 0xcc@uint8 0x33@uint8;
  cmov maskL l37 0xaa@uint8 0x55@uint8;
  and mask37@uint8 maskH maskM; and mask37@uint8 mask37 maskL;
  and o37@uint8 mask37 table; subc o37 dc o37 1@uint8;
  cmov maskH h38 0xf0@uint8 0x0f@uint8; cmov maskM m38 0xcc@uint8 0x33@uint8;
  cmov maskL l38 0xaa@uint8 0x55@uint8;
  and mask38@uint8 maskH maskM; and mask38@uint8 mask38 maskL;
  and o38@uint8 mask38 table; subc o38 dc o38 1@uint8;
  cmov maskH h39 0xf0@uint8 0x0f@uint8; cmov maskM m39 0xcc@uint8 0x33@uint8;
  cmov maskL l39 0xaa@uint8 0x55@uint8;
  and mask39@uint8 maskH maskM; and mask39@uint8 mask39 maskL;
  and o39@uint8 mask39 table; subc o39 dc o39 1@uint8;
  cmov maskH h3a 0xf0@uint8 0x0f@uint8; cmov maskM m3a 0xcc@uint8 0x33@uint8;
  cmov maskL l3a 0xaa@uint8 0x55@uint8;
  and mask3a@uint8 maskH maskM; and mask3a@uint8 mask3a maskL;
  and o3a@uint8 mask3a table; subc o3a dc o3a 1@uint8;
  cmov maskH h3b 0xf0@uint8 0x0f@uint8; cmov maskM m3b 0xcc@uint8 0x33@uint8;
  cmov maskL l3b 0xaa@uint8 0x55@uint8;
  and mask3b@uint8 maskH maskM; and mask3b@uint8 mask3b maskL;
  and o3b@uint8 mask3b table; subc o3b dc o3b 1@uint8;
  cmov maskH h3c 0xf0@uint8 0x0f@uint8; cmov maskM m3c 0xcc@uint8 0x33@uint8;
  cmov maskL l3c 0xaa@uint8 0x55@uint8;
  and mask3c@uint8 maskH maskM; and mask3c@uint8 mask3c maskL;
  and o3c@uint8 mask3c table; subc o3c dc o3c 1@uint8;
  cmov maskH h3d 0xf0@uint8 0x0f@uint8; cmov maskM m3d 0xcc@uint8 0x33@uint8;
  cmov maskL l3d 0xaa@uint8 0x55@uint8;
  and mask3d@uint8 maskH maskM; and mask3d@uint8 mask3d maskL;
  and o3d@uint8 mask3d table; subc o3d dc o3d 1@uint8;
  cmov maskH h3e 0xf0@uint8 0x0f@uint8; cmov maskM m3e 0xcc@uint8 0x33@uint8;
  cmov maskL l3e 0xaa@uint8 0x55@uint8;
  and mask3e@uint8 maskH maskM; and mask3e@uint8 mask3e maskL;
  and o3e@uint8 mask3e table; subc o3e dc o3e 1@uint8;
  cmov maskH h3f 0xf0@uint8 0x0f@uint8; cmov maskM m3f 0xcc@uint8 0x33@uint8;
  cmov maskL l3f 0xaa@uint8 0x55@uint8;
  and mask3f@uint8 maskH maskM; and mask3f@uint8 mask3f maskL;
  and o3f@uint8 mask3f table; subc o3f dc o3f 1@uint8;
  join o00 o01 o00; join o02 o03 o02; join o04 o05 o04; join o06 o07 o06;
  join o08 o09 o08; join o0a o0b o0a; join o0c o0d o0c; join o0e o0f o0e;
  join o10 o11 o10; join o12 o13 o12; join o14 o15 o14; join o16 o17 o16;
  join o18 o19 o18; join o1a o1b o1a; join o1c o1d o1c; join o1e o1f o1e;
  join o20 o21 o20; join o22 o23 o22; join o24 o25 o24; join o26 o27 o26;
  join o28 o29 o28; join o2a o2b o2a; join o2c o2d o2c; join o2e o2f o2e;
  join o30 o31 o30; join o32 o33 o32; join o34 o35 o34; join o36 o37 o36;
  join o38 o39 o38; join o3a o3b o3a; join o3c o3d o3c; join o3e o3f o3e;
  join o00 o02 o00; join o04 o06 o04; join o08 o0a o08; join o0c o0e o0c;
  join o10 o12 o10; join o14 o16 o14; join o18 o1a o18; join o1c o1e o1c;
  join o20 o22 o20; join o24 o26 o24; join o28 o2a o28; join o2c o2e o2c;
  join o30 o32 o30; join o34 o36 o34; join o38 o3a o38; join o3c o3e o3c;
  join o00 o04 o00; join o08 o0c o08; join o10 o14 o10; join o18 o1c o18;
  join o20 o24 o20; join o28 o2c o28; join o30 o34 o30; join o38 o3c o38;
  join o00 o08 o00; join o10 o18 o10; join o20 o28 o20; join o30 o38 o30;
  join o00 o10 o00; join o20 o30 o20;
  join o00 o20 o00;
  mov ymmH o00;
{ true && true }

proc main (uint64 A00, uint64 A01, uint64 A02, uint64 A03, uint64 A04,
           uint64 A05, uint64 A06, uint64 A07, uint64 A08, uint64 A09,
           uint64 A10, uint64 A11, uint64 A12, uint64 A13, uint64 A14,
           uint64 A15, uint64 A16, uint64 A17, uint64 A18, uint64 A19,
           uint64 A20, uint64 A21, uint64 A22, uint64 A23, uint64 A24,
           uint64 B00, uint64 B01, uint64 B02, uint64 B03, uint64 B04,
           uint64 B05, uint64 B06, uint64 B07, uint64 B08, uint64 B09,
           uint64 B10, uint64 B11, uint64 B12, uint64 B13, uint64 B14,
           uint64 B15, uint64 B16, uint64 B17, uint64 B18, uint64 B19,
           uint64 B20, uint64 B21, uint64 B22, uint64 B23, uint64 B24,
           uint64 C00, uint64 C01, uint64 C02, uint64 C03, uint64 C04,
           uint64 C05, uint64 C06, uint64 C07, uint64 C08, uint64 C09,
           uint64 C10, uint64 C11, uint64 C12, uint64 C13, uint64 C14,
           uint64 C15, uint64 C16, uint64 C17, uint64 C18, uint64 C19,
           uint64 C20, uint64 C21, uint64 C22, uint64 C23, uint64 C24,
           uint64 D00, uint64 D01, uint64 D02, uint64 D03, uint64 D04,
           uint64 D05, uint64 D06, uint64 D07, uint64 D08, uint64 D09,
           uint64 D10, uint64 D11, uint64 D12, uint64 D13, uint64 D14,
           uint64 D15, uint64 D16, uint64 D17, uint64 D18, uint64 D19,
           uint64 D20, uint64 D21, uint64 D22, uint64 D23, uint64 D24,
           uint64 E00, uint64 E01, uint64 E02, uint64 E03, uint64 E04,
           uint64 E05, uint64 E06, uint64 E07, uint64 E08, uint64 E09,
           uint64 E10, uint64 E11, uint64 E12, uint64 E13, uint64 E14,
           uint64 E15, uint64 E16, uint64 E17, uint64 E18, uint64 E19,
           uint64 E20, uint64 E21, uint64 E22, uint64 E23, uint64 E24,
           uint64 F00, uint64 F01, uint64 F02, uint64 F03, uint64 F04,
           uint64 F05, uint64 F06, uint64 F07, uint64 F08, uint64 F09,
           uint64 F10, uint64 F11, uint64 F12, uint64 F13, uint64 F14,
           uint64 F15, uint64 F16, uint64 F17, uint64 F18, uint64 F19,
           uint64 F20, uint64 F21, uint64 F22, uint64 F23, uint64 F24,
           uint64 G00, uint64 G01, uint64 G02, uint64 G03, uint64 G04,
           uint64 G05, uint64 G06, uint64 G07, uint64 G08, uint64 G09,
           uint64 G10, uint64 G11, uint64 G12, uint64 G13, uint64 G14,
           uint64 G15, uint64 G16, uint64 G17, uint64 G18, uint64 G19,
           uint64 G20, uint64 G21, uint64 G22, uint64 G23, uint64 G24,
           uint64 H00, uint64 H01, uint64 H02, uint64 H03, uint64 H04,
           uint64 H05, uint64 H06, uint64 H07, uint64 H08, uint64 H09,
           uint64 H10, uint64 H11, uint64 H12, uint64 H13, uint64 H14,
           uint64 H15, uint64 H16, uint64 H17, uint64 H18, uint64 H19,
           uint64 H20, uint64 H21, uint64 H22, uint64 H23, uint64 H24
) =
{
  true
  &&
  true
}

(* ===== Initialization ===== *)

mov L0x7fffffffd6c0 A00;
mov L0x7fffffffd6c8 B00;
mov L0x7fffffffd6d0 C00;
mov L0x7fffffffd6d8 D00;
mov L0x7fffffffd6e0 E00;
mov L0x7fffffffd6e8 F00;
mov L0x7fffffffd6f0 G00;
mov L0x7fffffffd6f8 H00;
mov L0x7fffffffd700 A01;
mov L0x7fffffffd708 B01;
mov L0x7fffffffd710 C01;
mov L0x7fffffffd718 D01;
mov L0x7fffffffd720 E01;
mov L0x7fffffffd728 F01;
mov L0x7fffffffd730 G01;
mov L0x7fffffffd738 H01;
mov L0x7fffffffd740 A02;
mov L0x7fffffffd748 B02;
mov L0x7fffffffd750 C02;
mov L0x7fffffffd758 D02;
mov L0x7fffffffd760 E02;
mov L0x7fffffffd768 F02;
mov L0x7fffffffd770 G02;
mov L0x7fffffffd778 H02;
mov L0x7fffffffd780 A03;
mov L0x7fffffffd788 B03;
mov L0x7fffffffd790 C03;
mov L0x7fffffffd798 D03;
mov L0x7fffffffd7a0 E03;
mov L0x7fffffffd7a8 F03;
mov L0x7fffffffd7b0 G03;
mov L0x7fffffffd7b8 H03;
mov L0x7fffffffd7c0 A04;
mov L0x7fffffffd7c8 B04;
mov L0x7fffffffd7d0 C04;
mov L0x7fffffffd7d8 D04;
mov L0x7fffffffd7e0 E04;
mov L0x7fffffffd7e8 F04;
mov L0x7fffffffd7f0 G04;
mov L0x7fffffffd7f8 H04;
mov L0x7fffffffd800 A05;
mov L0x7fffffffd808 B05;
mov L0x7fffffffd810 C05;
mov L0x7fffffffd818 D05;
mov L0x7fffffffd820 E05;
mov L0x7fffffffd828 F05;
mov L0x7fffffffd830 G05;
mov L0x7fffffffd838 H05;
mov L0x7fffffffd840 A06;
mov L0x7fffffffd848 B06;
mov L0x7fffffffd850 C06;
mov L0x7fffffffd858 D06;
mov L0x7fffffffd860 E06;
mov L0x7fffffffd868 F06;
mov L0x7fffffffd870 G06;
mov L0x7fffffffd878 H06;
mov L0x7fffffffd880 A07;
mov L0x7fffffffd888 B07;
mov L0x7fffffffd890 C07;
mov L0x7fffffffd898 D07;
mov L0x7fffffffd8a0 E07;
mov L0x7fffffffd8a8 F07;
mov L0x7fffffffd8b0 G07;
mov L0x7fffffffd8b8 H07;
mov L0x7fffffffd8c0 A08;
mov L0x7fffffffd8c8 B08;
mov L0x7fffffffd8d0 C08;
mov L0x7fffffffd8d8 D08;
mov L0x7fffffffd8e0 E08;
mov L0x7fffffffd8e8 F08;
mov L0x7fffffffd8f0 G08;
mov L0x7fffffffd8f8 H08;
mov L0x7fffffffd900 A09;
mov L0x7fffffffd908 B09;
mov L0x7fffffffd910 C09;
mov L0x7fffffffd918 D09;
mov L0x7fffffffd920 E09;
mov L0x7fffffffd928 F09;
mov L0x7fffffffd930 G09;
mov L0x7fffffffd938 H09;
mov L0x7fffffffd940 A10;
mov L0x7fffffffd948 B10;
mov L0x7fffffffd950 C10;
mov L0x7fffffffd958 D10;
mov L0x7fffffffd960 E10;
mov L0x7fffffffd968 F10;
mov L0x7fffffffd970 G10;
mov L0x7fffffffd978 H10;
mov L0x7fffffffd980 A11;
mov L0x7fffffffd988 B11;
mov L0x7fffffffd990 C11;
mov L0x7fffffffd998 D11;
mov L0x7fffffffd9a0 E11;
mov L0x7fffffffd9a8 F11;
mov L0x7fffffffd9b0 G11;
mov L0x7fffffffd9b8 H11;
mov L0x7fffffffd9c0 A12;
mov L0x7fffffffd9c8 B12;
mov L0x7fffffffd9d0 C12;
mov L0x7fffffffd9d8 D12;
mov L0x7fffffffd9e0 E12;
mov L0x7fffffffd9e8 F12;
mov L0x7fffffffd9f0 G12;
mov L0x7fffffffd9f8 H12;
mov L0x7fffffffda00 A13;
mov L0x7fffffffda08 B13;
mov L0x7fffffffda10 C13;
mov L0x7fffffffda18 D13;
mov L0x7fffffffda20 E13;
mov L0x7fffffffda28 F13;
mov L0x7fffffffda30 G13;
mov L0x7fffffffda38 H13;
mov L0x7fffffffda40 A14;
mov L0x7fffffffda48 B14;
mov L0x7fffffffda50 C14;
mov L0x7fffffffda58 D14;
mov L0x7fffffffda60 E14;
mov L0x7fffffffda68 F14;
mov L0x7fffffffda70 G14;
mov L0x7fffffffda78 H14;
mov L0x7fffffffda80 A15;
mov L0x7fffffffda88 B15;
mov L0x7fffffffda90 C15;
mov L0x7fffffffda98 D15;
mov L0x7fffffffdaa0 E15;
mov L0x7fffffffdaa8 F15;
mov L0x7fffffffdab0 G15;
mov L0x7fffffffdab8 H15;
mov L0x7fffffffdac0 A16;
mov L0x7fffffffdac8 B16;
mov L0x7fffffffdad0 C16;
mov L0x7fffffffdad8 D16;
mov L0x7fffffffdae0 E16;
mov L0x7fffffffdae8 F16;
mov L0x7fffffffdaf0 G16;
mov L0x7fffffffdaf8 H16;
mov L0x7fffffffdb00 A17;
mov L0x7fffffffdb08 B17;
mov L0x7fffffffdb10 C17;
mov L0x7fffffffdb18 D17;
mov L0x7fffffffdb20 E17;
mov L0x7fffffffdb28 F17;
mov L0x7fffffffdb30 G17;
mov L0x7fffffffdb38 H17;
mov L0x7fffffffdb40 A18;
mov L0x7fffffffdb48 B18;
mov L0x7fffffffdb50 C18;
mov L0x7fffffffdb58 D18;
mov L0x7fffffffdb60 E18;
mov L0x7fffffffdb68 F18;
mov L0x7fffffffdb70 G18;
mov L0x7fffffffdb78 H18;
mov L0x7fffffffdb80 A19;
mov L0x7fffffffdb88 B19;
mov L0x7fffffffdb90 C19;
mov L0x7fffffffdb98 D19;
mov L0x7fffffffdba0 E19;
mov L0x7fffffffdba8 F19;
mov L0x7fffffffdbb0 G19;
mov L0x7fffffffdbb8 H19;
mov L0x7fffffffdbc0 A20;
mov L0x7fffffffdbc8 B20;
mov L0x7fffffffdbd0 C20;
mov L0x7fffffffdbd8 D20;
mov L0x7fffffffdbe0 E20;
mov L0x7fffffffdbe8 F20;
mov L0x7fffffffdbf0 G20;
mov L0x7fffffffdbf8 H20;
mov L0x7fffffffdc00 A21;
mov L0x7fffffffdc08 B21;
mov L0x7fffffffdc10 C21;
mov L0x7fffffffdc18 D21;
mov L0x7fffffffdc20 E21;
mov L0x7fffffffdc28 F21;
mov L0x7fffffffdc30 G21;
mov L0x7fffffffdc38 H21;
mov L0x7fffffffdc40 A22;
mov L0x7fffffffdc48 B22;
mov L0x7fffffffdc50 C22;
mov L0x7fffffffdc58 D22;
mov L0x7fffffffdc60 E22;
mov L0x7fffffffdc68 F22;
mov L0x7fffffffdc70 G22;
mov L0x7fffffffdc78 H22;
mov L0x7fffffffdc80 A23;
mov L0x7fffffffdc88 B23;
mov L0x7fffffffdc90 C23;
mov L0x7fffffffdc98 D23;
mov L0x7fffffffdca0 E23;
mov L0x7fffffffdca8 F23;
mov L0x7fffffffdcb0 G23;
mov L0x7fffffffdcb8 H23;
mov L0x7fffffffdcc0 A24;
mov L0x7fffffffdcc8 B24;
mov L0x7fffffffdcd0 C24;
mov L0x7fffffffdcd8 D24;
mov L0x7fffffffdce0 E24;
mov L0x7fffffffdce8 F24;
mov L0x7fffffffdcf0 G24;
mov L0x7fffffffdcf8 H24;

nondet rdi@uint64;
nondet rsp@uint64;

(* ===== Program ===== *)

(* #! -> SP = 0x7fffffffd678 *)
#! 0x7fffffffd678 = 0x7fffffffd678;
(* mov    %rdi,%rax                                #! PC = 0x55555558ce25 *)
mov rax rdi;
(* movabs $0x8000000000008009,%r11                 #! PC = 0x55555558ce28 *)
mov r11 0x8000000000008009@uint64;
(* mov    %rsp,%rbp                                #! PC = 0x55555558ce32 *)
mov rbp rsp;
(* movabs $0x8000000080008081,%rcx                 #! PC = 0x55555558ce37 *)
mov rcx 0x8000000080008081@uint64;
(* mov    $0x8000000a,%r15d                        #! PC = 0x55555558ce41 *)
mov r15 0x8000000a@uint64;
(* mov    $0x80000001,%edx                         #! PC = 0x55555558ce49 *)
mov rdx 0x80000001@uint64;
(* mov    $0x2,%r14d                               #! PC = 0x55555558ce4e *)
mov r14 0x2@uint64;
(* mov    $0x808b,%r10d                            #! PC = 0x55555558ce56 *)
mov r10 0x808b@uint64;
(* mov    $0x80008009,%r13d                        #! PC = 0x55555558ce5c *)
mov r13 0x80008009@uint64;
(* movabs $0x8000000080008000,%r9                  #! PC = 0x55555558ce64 *)
mov r9 0x8000000080008000@uint64;
(* mov    $0x88,%r12d                              #! PC = 0x55555558ce6e *)
mov r12 0x88@uint64;
(* movabs $0x800000000000808a,%r8                  #! PC = 0x55555558ce75 *)
mov r8 0x800000000000808a@uint64;
(* mov    $0x8a,%ebx                               #! PC = 0x55555558ce7f *)
mov rbx 0x8a@uint64;
(* and    $0xffffffffffffffc0,%rsp                 #! PC = 0x55555558ce84 *)
and rsp@uint64 rsp 0xffffffffffffffc0@uint64;
(* sub    $0x188,%rsp                              #! PC = 0x55555558ce88 *)
subb carry rsp rsp 0x188@uint64;
(* mov    $0x1,%esi                                #! PC = 0x55555558ce8f *)
mov rsi 0x1@uint64;
(* vmovdqa64 0x40(%rdi),%zmm3                      #! EA = L0x7fffffffd700; Value = 0x0000000000000000; PC = 0x55555558ce94 *)
mov zmm3_0 L0x7fffffffd700;
mov zmm3_1 L0x7fffffffd708;
mov zmm3_2 L0x7fffffffd710;
mov zmm3_3 L0x7fffffffd718;
mov zmm3_4 L0x7fffffffd720;
mov zmm3_5 L0x7fffffffd728;
mov zmm3_6 L0x7fffffffd730;
mov zmm3_7 L0x7fffffffd738;
(* vmovdqa64 0x80(%rdi),%zmm4                      #! EA = L0x7fffffffd740; Value = 0x00005555555c0639; PC = 0x55555558ce9b *)
mov zmm4_0 L0x7fffffffd740;
mov zmm4_1 L0x7fffffffd748;
mov zmm4_2 L0x7fffffffd750;
mov zmm4_3 L0x7fffffffd758;
mov zmm4_4 L0x7fffffffd760;
mov zmm4_5 L0x7fffffffd768;
mov zmm4_6 L0x7fffffffd770;
mov zmm4_7 L0x7fffffffd778;
(* vmovdqa64 0x2c0(%rdi),%zmm5                     #! EA = L0x7fffffffd980; Value = 0xf07e0ad1f322ba59; PC = 0x55555558cea2 *)
mov zmm5_0 L0x7fffffffd980;
mov zmm5_1 L0x7fffffffd988;
mov zmm5_2 L0x7fffffffd990;
mov zmm5_3 L0x7fffffffd998;
mov zmm5_4 L0x7fffffffd9a0;
mov zmm5_5 L0x7fffffffd9a8;
mov zmm5_6 L0x7fffffffd9b0;
mov zmm5_7 L0x7fffffffd9b8;
(* vmovdqa64 (%rdi),%zmm26                         #! EA = L0x7fffffffd6c0; Value = 0x0000000000000d68; PC = 0x55555558cea9 *)
mov zmm26_0 L0x7fffffffd6c0;
mov zmm26_1 L0x7fffffffd6c8;
mov zmm26_2 L0x7fffffffd6d0;
mov zmm26_3 L0x7fffffffd6d8;
mov zmm26_4 L0x7fffffffd6e0;
mov zmm26_5 L0x7fffffffd6e8;
mov zmm26_6 L0x7fffffffd6f0;
mov zmm26_7 L0x7fffffffd6f8;
(* vmovdqa64 0xc0(%rdi),%zmm24                     #! EA = L0x7fffffffd780; Value = 0x00007fffffffdcd0; PC = 0x55555558ceaf *)
mov zmm24_0 L0x7fffffffd780;
mov zmm24_1 L0x7fffffffd788;
mov zmm24_2 L0x7fffffffd790;
mov zmm24_3 L0x7fffffffd798;
mov zmm24_4 L0x7fffffffd7a0;
mov zmm24_5 L0x7fffffffd7a8;
mov zmm24_6 L0x7fffffffd7b0;
mov zmm24_7 L0x7fffffffd7b8;
(* vmovdqa64 0x100(%rdi),%zmm30                    #! EA = L0x7fffffffd7c0; Value = 0x00007ffff7eb2580; PC = 0x55555558ceb6 *)
mov zmm30_0 L0x7fffffffd7c0;
mov zmm30_1 L0x7fffffffd7c8;
mov zmm30_2 L0x7fffffffd7d0;
mov zmm30_3 L0x7fffffffd7d8;
mov zmm30_4 L0x7fffffffd7e0;
mov zmm30_5 L0x7fffffffd7e8;
mov zmm30_6 L0x7fffffffd7f0;
mov zmm30_7 L0x7fffffffd7f8;
(* vmovdqa64 0x140(%rdi),%zmm23                    #! EA = L0x7fffffffd800; Value = 0x00010d6900000000; PC = 0x55555558cebd *)
mov zmm23_0 L0x7fffffffd800;
mov zmm23_1 L0x7fffffffd808;
mov zmm23_2 L0x7fffffffd810;
mov zmm23_3 L0x7fffffffd818;
mov zmm23_4 L0x7fffffffd820;
mov zmm23_5 L0x7fffffffd828;
mov zmm23_6 L0x7fffffffd830;
mov zmm23_7 L0x7fffffffd838;
(* vmovdqa64 0x180(%rdi),%zmm25                    #! EA = L0x7fffffffd840; Value = 0x00007ffff7cfa0d0; PC = 0x55555558cec4 *)
mov zmm25_0 L0x7fffffffd840;
mov zmm25_1 L0x7fffffffd848;
mov zmm25_2 L0x7fffffffd850;
mov zmm25_3 L0x7fffffffd858;
mov zmm25_4 L0x7fffffffd860;
mov zmm25_5 L0x7fffffffd868;
mov zmm25_6 L0x7fffffffd870;
mov zmm25_7 L0x7fffffffd878;
(* vmovdqa64 0x1c0(%rdi),%zmm31                    #! EA = L0x7fffffffd880; Value = 0x00007fffffffddb0; PC = 0x55555558cecb *)
mov zmm31_0 L0x7fffffffd880;
mov zmm31_1 L0x7fffffffd888;
mov zmm31_2 L0x7fffffffd890;
mov zmm31_3 L0x7fffffffd898;
mov zmm31_4 L0x7fffffffd8a0;
mov zmm31_5 L0x7fffffffd8a8;
mov zmm31_6 L0x7fffffffd8b0;
mov zmm31_7 L0x7fffffffd8b8;
(* vmovdqa64 0x200(%rdi),%zmm17                    #! EA = L0x7fffffffd8c0; Value = 0xccbb10d7e88dd471; PC = 0x55555558ced2 *)
mov zmm17_0 L0x7fffffffd8c0;
mov zmm17_1 L0x7fffffffd8c8;
mov zmm17_2 L0x7fffffffd8d0;
mov zmm17_3 L0x7fffffffd8d8;
mov zmm17_4 L0x7fffffffd8e0;
mov zmm17_5 L0x7fffffffd8e8;
mov zmm17_6 L0x7fffffffd8f0;
mov zmm17_7 L0x7fffffffd8f8;
(* vmovdqa64 0x240(%rdi),%zmm9                     #! EA = L0x7fffffffd900; Value = 0x2433945f551a7f68; PC = 0x55555558ced9 *)
mov zmm9_0 L0x7fffffffd900;
mov zmm9_1 L0x7fffffffd908;
mov zmm9_2 L0x7fffffffd910;
mov zmm9_3 L0x7fffffffd918;
mov zmm9_4 L0x7fffffffd920;
mov zmm9_5 L0x7fffffffd928;
mov zmm9_6 L0x7fffffffd930;
mov zmm9_7 L0x7fffffffd938;
(* vmovdqa64 0x280(%rdi),%zmm8                     #! EA = L0x7fffffffd940; Value = 0xa3054d85f63e882a; PC = 0x55555558cee0 *)
mov zmm8_0 L0x7fffffffd940;
mov zmm8_1 L0x7fffffffd948;
mov zmm8_2 L0x7fffffffd950;
mov zmm8_3 L0x7fffffffd958;
mov zmm8_4 L0x7fffffffd960;
mov zmm8_5 L0x7fffffffd968;
mov zmm8_6 L0x7fffffffd970;
mov zmm8_7 L0x7fffffffd978;
(* vmovdqa64 0x380(%rdi),%zmm22                    #! EA = L0x7fffffffda40; Value = 0xa3054d85f63e882a; PC = 0x55555558cee7 *)
mov zmm22_0 L0x7fffffffda40;
mov zmm22_1 L0x7fffffffda48;
mov zmm22_2 L0x7fffffffda50;
mov zmm22_3 L0x7fffffffda58;
mov zmm22_4 L0x7fffffffda60;
mov zmm22_5 L0x7fffffffda68;
mov zmm22_6 L0x7fffffffda70;
mov zmm22_7 L0x7fffffffda78;
(* vmovdqa64 0x400(%rdi),%zmm27                    #! EA = L0x7fffffffdac0; Value = 0xd70065c383576173; PC = 0x55555558ceee *)
mov zmm27_0 L0x7fffffffdac0;
mov zmm27_1 L0x7fffffffdac8;
mov zmm27_2 L0x7fffffffdad0;
mov zmm27_3 L0x7fffffffdad8;
mov zmm27_4 L0x7fffffffdae0;
mov zmm27_5 L0x7fffffffdae8;
mov zmm27_6 L0x7fffffffdaf0;
mov zmm27_7 L0x7fffffffdaf8;
(* vmovdqa64 0x440(%rdi),%zmm6                     #! EA = L0x7fffffffdb00; Value = 0x2433945f551a7f68; PC = 0x55555558cef5 *)
mov zmm6_0 L0x7fffffffdb00;
mov zmm6_1 L0x7fffffffdb08;
mov zmm6_2 L0x7fffffffdb10;
mov zmm6_3 L0x7fffffffdb18;
mov zmm6_4 L0x7fffffffdb20;
mov zmm6_5 L0x7fffffffdb28;
mov zmm6_6 L0x7fffffffdb30;
mov zmm6_7 L0x7fffffffdb38;
(* vmovdqa64 0x480(%rdi),%zmm7                     #! EA = L0x7fffffffdb40; Value = 0x53713b4b4dddc096; PC = 0x55555558cefc *)
mov zmm7_0 L0x7fffffffdb40;
mov zmm7_1 L0x7fffffffdb48;
mov zmm7_2 L0x7fffffffdb50;
mov zmm7_3 L0x7fffffffdb58;
mov zmm7_4 L0x7fffffffdb60;
mov zmm7_5 L0x7fffffffdb68;
mov zmm7_6 L0x7fffffffdb70;
mov zmm7_7 L0x7fffffffdb78;
(* vmovdqa64 0x4c0(%rdi),%zmm2                     #! EA = L0x7fffffffdb80; Value = 0x8fa91cee3c1ffe3f; PC = 0x55555558cf03 *)
mov zmm2_0 L0x7fffffffdb80;
mov zmm2_1 L0x7fffffffdb88;
mov zmm2_2 L0x7fffffffdb90;
mov zmm2_3 L0x7fffffffdb98;
mov zmm2_4 L0x7fffffffdba0;
mov zmm2_5 L0x7fffffffdba8;
mov zmm2_6 L0x7fffffffdbb0;
mov zmm2_7 L0x7fffffffdbb8;
(* vmovdqa64 %zmm3,0xc8(%rsp)                      #! EA = L0x7fffffffd580; PC = 0x55555558cf0a *)
mov L0x7fffffffd580 zmm3_0;
mov L0x7fffffffd588 zmm3_1;
mov L0x7fffffffd590 zmm3_2;
mov L0x7fffffffd598 zmm3_3;
mov L0x7fffffffd5a0 zmm3_4;
mov L0x7fffffffd5a8 zmm3_5;
mov L0x7fffffffd5b0 zmm3_6;
mov L0x7fffffffd5b8 zmm3_7;
(* vmovdqa64 %zmm4,0x148(%rsp)                     #! EA = L0x7fffffffd600; PC = 0x55555558cf15 *)
mov L0x7fffffffd600 zmm4_0;
mov L0x7fffffffd608 zmm4_1;
mov L0x7fffffffd610 zmm4_2;
mov L0x7fffffffd618 zmm4_3;
mov L0x7fffffffd620 zmm4_4;
mov L0x7fffffffd628 zmm4_5;
mov L0x7fffffffd630 zmm4_6;
mov L0x7fffffffd638 zmm4_7;
(* vmovdqa64 0x340(%rdi),%zmm3                     #! EA = L0x7fffffffda00; Value = 0xf5a148f96ad2c747; PC = 0x55555558cf20 *)
mov zmm3_0 L0x7fffffffda00;
mov zmm3_1 L0x7fffffffda08;
mov zmm3_2 L0x7fffffffda10;
mov zmm3_3 L0x7fffffffda18;
mov zmm3_4 L0x7fffffffda20;
mov zmm3_5 L0x7fffffffda28;
mov zmm3_6 L0x7fffffffda30;
mov zmm3_7 L0x7fffffffda38;
(* vmovdqa64 0x300(%rdi),%zmm4                     #! EA = L0x7fffffffd9c0; Value = 0xfcabf2811b7c5ca1; PC = 0x55555558cf27 *)
mov zmm4_0 L0x7fffffffd9c0;
mov zmm4_1 L0x7fffffffd9c8;
mov zmm4_2 L0x7fffffffd9d0;
mov zmm4_3 L0x7fffffffd9d8;
mov zmm4_4 L0x7fffffffd9e0;
mov zmm4_5 L0x7fffffffd9e8;
mov zmm4_6 L0x7fffffffd9f0;
mov zmm4_7 L0x7fffffffd9f8;
(* vmovdqa64 %zmm5,0x108(%rsp)                     #! EA = L0x7fffffffd5c0; PC = 0x55555558cf2e *)
mov L0x7fffffffd5c0 zmm5_0;
mov L0x7fffffffd5c8 zmm5_1;
mov L0x7fffffffd5d0 zmm5_2;
mov L0x7fffffffd5d8 zmm5_3;
mov L0x7fffffffd5e0 zmm5_4;
mov L0x7fffffffd5e8 zmm5_5;
mov L0x7fffffffd5f0 zmm5_6;
mov L0x7fffffffd5f8 zmm5_7;
(* vmovdqa64 0x3c0(%rdi),%zmm5                     #! EA = L0x7fffffffda80; Value = 0x466ad9f3f487a805; PC = 0x55555558cf39 *)
mov zmm5_0 L0x7fffffffda80;
mov zmm5_1 L0x7fffffffda88;
mov zmm5_2 L0x7fffffffda90;
mov zmm5_3 L0x7fffffffda98;
mov zmm5_4 L0x7fffffffdaa0;
mov zmm5_5 L0x7fffffffdaa8;
mov zmm5_6 L0x7fffffffdab0;
mov zmm5_7 L0x7fffffffdab8;
(* vmovdqa64 0x500(%rdi),%zmm16                    #! EA = L0x7fffffffdbc0; Value = 0xce4098d610e56c62; PC = 0x55555558cf40 *)
mov zmm16_0 L0x7fffffffdbc0;
mov zmm16_1 L0x7fffffffdbc8;
mov zmm16_2 L0x7fffffffdbd0;
mov zmm16_3 L0x7fffffffdbd8;
mov zmm16_4 L0x7fffffffdbe0;
mov zmm16_5 L0x7fffffffdbe8;
mov zmm16_6 L0x7fffffffdbf0;
mov zmm16_7 L0x7fffffffdbf8;
(* vmovdqa64 0x540(%rdi),%zmm29                    #! EA = L0x7fffffffdc00; Value = 0x00007fffffffdd30; PC = 0x55555558cf47 *)
mov zmm29_0 L0x7fffffffdc00;
mov zmm29_1 L0x7fffffffdc08;
mov zmm29_2 L0x7fffffffdc10;
mov zmm29_3 L0x7fffffffdc18;
mov zmm29_4 L0x7fffffffdc20;
mov zmm29_5 L0x7fffffffdc28;
mov zmm29_6 L0x7fffffffdc30;
mov zmm29_7 L0x7fffffffdc38;
(* vmovdqa64 0x580(%rdi),%zmm13                    #! EA = L0x7fffffffdc40; Value = 0x00007fffffffdc50; PC = 0x55555558cf4e *)
mov zmm13_0 L0x7fffffffdc40;
mov zmm13_1 L0x7fffffffdc48;
mov zmm13_2 L0x7fffffffdc50;
mov zmm13_3 L0x7fffffffdc58;
mov zmm13_4 L0x7fffffffdc60;
mov zmm13_5 L0x7fffffffdc68;
mov zmm13_6 L0x7fffffffdc70;
mov zmm13_7 L0x7fffffffdc78;
(* vmovdqa64 0x5c0(%rdi),%zmm1                     #! EA = L0x7fffffffdc80; Value = 0x3ff995b020c49ba6; PC = 0x55555558cf55 *)
mov zmm1_0 L0x7fffffffdc80;
mov zmm1_1 L0x7fffffffdc88;
mov zmm1_2 L0x7fffffffdc90;
mov zmm1_3 L0x7fffffffdc98;
mov zmm1_4 L0x7fffffffdca0;
mov zmm1_5 L0x7fffffffdca8;
mov zmm1_6 L0x7fffffffdcb0;
mov zmm1_7 L0x7fffffffdcb8;
(* vmovdqa64 0x600(%rdi),%zmm14                    #! EA = L0x7fffffffdcc0; Value = 0x00007fffffffdff8; PC = 0x55555558cf5c *)
mov zmm14_0 L0x7fffffffdcc0;
mov zmm14_1 L0x7fffffffdcc8;
mov zmm14_2 L0x7fffffffdcd0;
mov zmm14_3 L0x7fffffffdcd8;
mov zmm14_4 L0x7fffffffdce0;
mov zmm14_5 L0x7fffffffdce8;
mov zmm14_6 L0x7fffffffdcf0;
mov zmm14_7 L0x7fffffffdcf8;
(* mov    $0x8082,%edi                             #! PC = 0x55555558cf63 *)
mov rdi 0x8082@uint64;
(* vmovdqa64 0x148(%rsp),%zmm15                    #! EA = L0x7fffffffd600; Value = 0x00005555555c0639; PC = 0x55555558cf68 *)
mov zmm15_0 L0x7fffffffd600;
mov zmm15_1 L0x7fffffffd608;
mov zmm15_2 L0x7fffffffd610;
mov zmm15_3 L0x7fffffffd618;
mov zmm15_4 L0x7fffffffd620;
mov zmm15_5 L0x7fffffffd628;
mov zmm15_6 L0x7fffffffd630;
mov zmm15_7 L0x7fffffffd638;
(* vmovdqa64 %zmm26,%zmm21                         #! PC = 0x55555558cf73 *)
mov zmm21_0 zmm26_0;
mov zmm21_1 zmm26_1;
mov zmm21_2 zmm26_2;
mov zmm21_3 zmm26_3;
mov zmm21_4 zmm26_4;
mov zmm21_5 zmm26_5;
mov zmm21_6 zmm26_6;
mov zmm21_7 zmm26_7;
(* vpternlogq $0x96,%zmm4,%zmm31,%zmm15            #! PC = 0x55555558cf79 *)
mov table 0x96@uint8;
inline vpternlogq64 (zmm15_0, zmm31_0, zmm4_0, table);
inline vpternlogq64 (zmm15_1, zmm31_1, zmm4_1, table);
inline vpternlogq64 (zmm15_2, zmm31_2, zmm4_2, table);
inline vpternlogq64 (zmm15_3, zmm31_3, zmm4_3, table);
inline vpternlogq64 (zmm15_4, zmm31_4, zmm4_4, table);
inline vpternlogq64 (zmm15_5, zmm31_5, zmm4_5, table);
inline vpternlogq64 (zmm15_6, zmm31_6, zmm4_6, table);
inline vpternlogq64 (zmm15_7, zmm31_7, zmm4_7, table);
(* vmovdqa64 %zmm24,%zmm11                         #! PC = 0x55555558cf80 *)
mov zmm11_0 zmm24_0;
mov zmm11_1 zmm24_1;
mov zmm11_2 zmm24_2;
mov zmm11_3 zmm24_3;
mov zmm11_4 zmm24_4;
mov zmm11_5 zmm24_5;
mov zmm11_6 zmm24_6;
mov zmm11_7 zmm24_7;
(* vmovdqa64 %zmm30,%zmm28                         #! PC = 0x55555558cf86 *)
mov zmm28_0 zmm30_0;
mov zmm28_1 zmm30_1;
mov zmm28_2 zmm30_2;
mov zmm28_3 zmm30_3;
mov zmm28_4 zmm30_4;
mov zmm28_5 zmm30_5;
mov zmm28_6 zmm30_6;
mov zmm28_7 zmm30_7;
(* vpternlogq $0x96,%zmm13,%zmm6,%zmm15            #! PC = 0x55555558cf8c *)
mov table 0x96@uint8;
inline vpternlogq64 (zmm15_0, zmm6_0, zmm13_0, table);
inline vpternlogq64 (zmm15_1, zmm6_1, zmm13_1, table);
inline vpternlogq64 (zmm15_2, zmm6_2, zmm13_2, table);
inline vpternlogq64 (zmm15_3, zmm6_3, zmm13_3, table);
inline vpternlogq64 (zmm15_4, zmm6_4, zmm13_4, table);
inline vpternlogq64 (zmm15_5, zmm6_5, zmm13_5, table);
inline vpternlogq64 (zmm15_6, zmm6_6, zmm13_6, table);
inline vpternlogq64 (zmm15_7, zmm6_7, zmm13_7, table);
(* vpternlogq $0x96,%zmm8,%zmm23,%zmm21            #! PC = 0x55555558cf93 *)
mov table 0x96@uint8;
inline vpternlogq64 (zmm21_0, zmm23_0, zmm8_0, table);
inline vpternlogq64 (zmm21_1, zmm23_1, zmm8_1, table);
inline vpternlogq64 (zmm21_2, zmm23_2, zmm8_2, table);
inline vpternlogq64 (zmm21_3, zmm23_3, zmm8_3, table);
inline vpternlogq64 (zmm21_4, zmm23_4, zmm8_4, table);
inline vpternlogq64 (zmm21_5, zmm23_5, zmm8_5, table);
inline vpternlogq64 (zmm21_6, zmm23_6, zmm8_6, table);
inline vpternlogq64 (zmm21_7, zmm23_7, zmm8_7, table);
(* vpternlogq $0x96,%zmm3,%zmm17,%zmm11            #! PC = 0x55555558cf9a *)
mov table 0x96@uint8;
inline vpternlogq64 (zmm11_0, zmm17_0, zmm3_0, table);
inline vpternlogq64 (zmm11_1, zmm17_1, zmm3_1, table);
inline vpternlogq64 (zmm11_2, zmm17_2, zmm3_2, table);
inline vpternlogq64 (zmm11_3, zmm17_3, zmm3_3, table);
inline vpternlogq64 (zmm11_4, zmm17_4, zmm3_4, table);
inline vpternlogq64 (zmm11_5, zmm17_5, zmm3_5, table);
inline vpternlogq64 (zmm11_6, zmm17_6, zmm3_6, table);
inline vpternlogq64 (zmm11_7, zmm17_7, zmm3_7, table);
(* vpternlogq $0x96,%zmm22,%zmm9,%zmm28            #! PC = 0x55555558cfa1 *)
mov table 0x96@uint8;
inline vpternlogq64 (zmm28_0, zmm9_0, zmm22_0, table);
inline vpternlogq64 (zmm28_1, zmm9_1, zmm22_1, table);
inline vpternlogq64 (zmm28_2, zmm9_2, zmm22_2, table);
inline vpternlogq64 (zmm28_3, zmm9_3, zmm22_3, table);
inline vpternlogq64 (zmm28_4, zmm9_4, zmm22_4, table);
inline vpternlogq64 (zmm28_5, zmm9_5, zmm22_5, table);
inline vpternlogq64 (zmm28_6, zmm9_6, zmm22_6, table);
inline vpternlogq64 (zmm28_7, zmm9_7, zmm22_7, table);
(* vpternlogq $0x96,%zmm16,%zmm5,%zmm21            #! PC = 0x55555558cfa8 *)
mov table 0x96@uint8;
inline vpternlogq64 (zmm21_0, zmm5_0, zmm16_0, table);
inline vpternlogq64 (zmm21_1, zmm5_1, zmm16_1, table);
inline vpternlogq64 (zmm21_2, zmm5_2, zmm16_2, table);
inline vpternlogq64 (zmm21_3, zmm5_3, zmm16_3, table);
inline vpternlogq64 (zmm21_4, zmm5_4, zmm16_4, table);
inline vpternlogq64 (zmm21_5, zmm5_5, zmm16_5, table);
inline vpternlogq64 (zmm21_6, zmm5_6, zmm16_6, table);
inline vpternlogq64 (zmm21_7, zmm5_7, zmm16_7, table);
(* vpternlogq $0x96,%zmm1,%zmm7,%zmm11             #! PC = 0x55555558cfaf *)
mov table 0x96@uint8;
inline vpternlogq64 (zmm11_0, zmm7_0, zmm1_0, table);
inline vpternlogq64 (zmm11_1, zmm7_1, zmm1_1, table);
inline vpternlogq64 (zmm11_2, zmm7_2, zmm1_2, table);
inline vpternlogq64 (zmm11_3, zmm7_3, zmm1_3, table);
inline vpternlogq64 (zmm11_4, zmm7_4, zmm1_4, table);
inline vpternlogq64 (zmm11_5, zmm7_5, zmm1_5, table);
inline vpternlogq64 (zmm11_6, zmm7_6, zmm1_6, table);
inline vpternlogq64 (zmm11_7, zmm7_7, zmm1_7, table);
(* vpternlogq $0x96,%zmm14,%zmm2,%zmm28            #! PC = 0x55555558cfb6 *)
mov table 0x96@uint8;
inline vpternlogq64 (zmm28_0, zmm2_0, zmm14_0, table);
inline vpternlogq64 (zmm28_1, zmm2_1, zmm14_1, table);
inline vpternlogq64 (zmm28_2, zmm2_2, zmm14_2, table);
inline vpternlogq64 (zmm28_3, zmm2_3, zmm14_3, table);
inline vpternlogq64 (zmm28_4, zmm2_4, zmm14_4, table);
inline vpternlogq64 (zmm28_5, zmm2_5, zmm14_5, table);
inline vpternlogq64 (zmm28_6, zmm2_6, zmm14_6, table);
inline vpternlogq64 (zmm28_7, zmm2_7, zmm14_7, table);
(* vprolq $0x1,%zmm15,%zmm0                        #! PC = 0x55555558cfbd *)
rol zmm0_0 zmm15_0 0x1;
rol zmm0_1 zmm15_1 0x1;
rol zmm0_2 zmm15_2 0x1;
rol zmm0_3 zmm15_3 0x1;
rol zmm0_4 zmm15_4 0x1;
rol zmm0_5 zmm15_5 0x1;
rol zmm0_6 zmm15_6 0x1;
rol zmm0_7 zmm15_7 0x1;
(* vprolq $0x1,%zmm11,%zmm10                       #! PC = 0x55555558cfc4 *)
rol zmm10_0 zmm11_0 0x1;
rol zmm10_1 zmm11_1 0x1;
rol zmm10_2 zmm11_2 0x1;
rol zmm10_3 zmm11_3 0x1;
rol zmm10_4 zmm11_4 0x1;
rol zmm10_5 zmm11_5 0x1;
rol zmm10_6 zmm11_6 0x1;
rol zmm10_7 zmm11_7 0x1;
(* vprolq $0x1,%zmm28,%zmm12                       #! PC = 0x55555558cfcb *)
rol zmm12_0 zmm28_0 0x1;
rol zmm12_1 zmm28_1 0x1;
rol zmm12_2 zmm28_2 0x1;
rol zmm12_3 zmm28_3 0x1;
rol zmm12_4 zmm28_4 0x1;
rol zmm12_5 zmm28_5 0x1;
rol zmm12_6 zmm28_6 0x1;
rol zmm12_7 zmm28_7 0x1;
(* vprolq $0x1,%zmm21,%zmm19                       #! PC = 0x55555558cfd2 *)
rol zmm19_0 zmm21_0 0x1;
rol zmm19_1 zmm21_1 0x1;
rol zmm19_2 zmm21_2 0x1;
rol zmm19_3 zmm21_3 0x1;
rol zmm19_4 zmm21_4 0x1;
rol zmm19_5 zmm21_5 0x1;
rol zmm19_6 zmm21_6 0x1;
rol zmm19_7 zmm21_7 0x1;
(* vmovdqa64 0xc8(%rsp),%zmm20                     #! EA = L0x7fffffffd580; Value = 0x0000000000000000; PC = 0x55555558cfd9 *)
mov zmm20_0 L0x7fffffffd580;
mov zmm20_1 L0x7fffffffd588;
mov zmm20_2 L0x7fffffffd590;
mov zmm20_3 L0x7fffffffd598;
mov zmm20_4 L0x7fffffffd5a0;
mov zmm20_5 L0x7fffffffd5a8;
mov zmm20_6 L0x7fffffffd5b0;
mov zmm20_7 L0x7fffffffd5b8;
(* vpternlogq $0x96,0x108(%rsp),%zmm25,%zmm20      #! EA = L0x7fffffffd5c0; Value = 0xf07e0ad1f322ba59; PC = 0x55555558cfe4 *)
mov table 0x96@uint8;
inline vpternlogq64 (zmm20_0, zmm25_0, L0x7fffffffd5c0, table);
inline vpternlogq64 (zmm20_1, zmm25_1, L0x7fffffffd5c8, table);
inline vpternlogq64 (zmm20_2, zmm25_2, L0x7fffffffd5d0, table);
inline vpternlogq64 (zmm20_3, zmm25_3, L0x7fffffffd5d8, table);
inline vpternlogq64 (zmm20_4, zmm25_4, L0x7fffffffd5e0, table);
inline vpternlogq64 (zmm20_5, zmm25_5, L0x7fffffffd5e8, table);
inline vpternlogq64 (zmm20_6, zmm25_6, L0x7fffffffd5f0, table);
inline vpternlogq64 (zmm20_7, zmm25_7, L0x7fffffffd5f8, table);
(* vpternlogq $0x96,%zmm29,%zmm27,%zmm20           #! PC = 0x55555558cff0 *)
mov table 0x96@uint8;
inline vpternlogq64 (zmm20_0, zmm27_0, zmm29_0, table);
inline vpternlogq64 (zmm20_1, zmm27_1, zmm29_1, table);
inline vpternlogq64 (zmm20_2, zmm27_2, zmm29_2, table);
inline vpternlogq64 (zmm20_3, zmm27_3, zmm29_3, table);
inline vpternlogq64 (zmm20_4, zmm27_4, zmm29_4, table);
inline vpternlogq64 (zmm20_5, zmm27_5, zmm29_5, table);
inline vpternlogq64 (zmm20_6, zmm27_6, zmm29_6, table);
inline vpternlogq64 (zmm20_7, zmm27_7, zmm29_7, table);
(* vpxord %zmm21,%zmm0,%zmm0                       #! PC = 0x55555558cff7 *)
xor zmm0_0@uint64 zmm0_0 zmm21_0;
xor zmm0_1@uint64 zmm0_1 zmm21_1;
xor zmm0_2@uint64 zmm0_2 zmm21_2;
xor zmm0_3@uint64 zmm0_3 zmm21_3;
xor zmm0_4@uint64 zmm0_4 zmm21_4;
xor zmm0_5@uint64 zmm0_5 zmm21_5;
xor zmm0_6@uint64 zmm0_6 zmm21_6;
xor zmm0_7@uint64 zmm0_7 zmm21_7;
(* vprolq $0x1,%zmm20,%zmm18                       #! PC = 0x55555558cffd *)
rol zmm18_0 zmm20_0 0x1;
rol zmm18_1 zmm20_1 0x1;
rol zmm18_2 zmm20_2 0x1;
rol zmm18_3 zmm20_3 0x1;
rol zmm18_4 zmm20_4 0x1;
rol zmm18_5 zmm20_5 0x1;
rol zmm18_6 zmm20_6 0x1;
rol zmm18_7 zmm20_7 0x1;
(* vpxord %zmm11,%zmm19,%zmm19                     #! PC = 0x55555558d004 *)
xor zmm19_0@uint64 zmm19_0 zmm11_0;
xor zmm19_1@uint64 zmm19_1 zmm11_1;
xor zmm19_2@uint64 zmm19_2 zmm11_2;
xor zmm19_3@uint64 zmm19_3 zmm11_3;
xor zmm19_4@uint64 zmm19_4 zmm11_4;
xor zmm19_5@uint64 zmm19_5 zmm11_5;
xor zmm19_6@uint64 zmm19_6 zmm11_6;
xor zmm19_7@uint64 zmm19_7 zmm11_7;
(* vpxord %zmm20,%zmm10,%zmm10                     #! PC = 0x55555558d00a *)
xor zmm10_0@uint64 zmm10_0 zmm20_0;
xor zmm10_1@uint64 zmm10_1 zmm20_1;
xor zmm10_2@uint64 zmm10_2 zmm20_2;
xor zmm10_3@uint64 zmm10_3 zmm20_3;
xor zmm10_4@uint64 zmm10_4 zmm20_4;
xor zmm10_5@uint64 zmm10_5 zmm20_5;
xor zmm10_6@uint64 zmm10_6 zmm20_6;
xor zmm10_7@uint64 zmm10_7 zmm20_7;
(* vpxord %zmm15,%zmm12,%zmm12                     #! PC = 0x55555558d010 *)
xor zmm12_0@uint64 zmm12_0 zmm15_0;
xor zmm12_1@uint64 zmm12_1 zmm15_1;
xor zmm12_2@uint64 zmm12_2 zmm15_2;
xor zmm12_3@uint64 zmm12_3 zmm15_3;
xor zmm12_4@uint64 zmm12_4 zmm15_4;
xor zmm12_5@uint64 zmm12_5 zmm15_5;
xor zmm12_6@uint64 zmm12_6 zmm15_6;
xor zmm12_7@uint64 zmm12_7 zmm15_7;
(* vpxord %zmm25,%zmm0,%zmm25                      #! PC = 0x55555558d016 *)
xor zmm25_0@uint64 zmm0_0 zmm25_0;
xor zmm25_1@uint64 zmm0_1 zmm25_1;
xor zmm25_2@uint64 zmm0_2 zmm25_2;
xor zmm25_3@uint64 zmm0_3 zmm25_3;
xor zmm25_4@uint64 zmm0_4 zmm25_4;
xor zmm25_5@uint64 zmm0_5 zmm25_5;
xor zmm25_6@uint64 zmm0_6 zmm25_6;
xor zmm25_7@uint64 zmm0_7 zmm25_7;
(* vprorq $0x14,%zmm25,%zmm11                      #! PC = 0x55555558d01c *)
ror zmm11_0 zmm25_0 0x14;
ror zmm11_1 zmm25_1 0x14;
ror zmm11_2 zmm25_2 0x14;
ror zmm11_3 zmm25_3 0x14;
ror zmm11_4 zmm25_4 0x14;
ror zmm11_5 zmm25_5 0x14;
ror zmm11_6 zmm25_6 0x14;
ror zmm11_7 zmm25_7 0x14;
(* vpxord %zmm4,%zmm10,%zmm4                       #! PC = 0x55555558d023 *)
xor zmm4_0@uint64 zmm10_0 zmm4_0;
xor zmm4_1@uint64 zmm10_1 zmm4_1;
xor zmm4_2@uint64 zmm10_2 zmm4_2;
xor zmm4_3@uint64 zmm10_3 zmm4_3;
xor zmm4_4@uint64 zmm10_4 zmm4_4;
xor zmm4_5@uint64 zmm10_5 zmm4_5;
xor zmm4_6@uint64 zmm10_6 zmm4_6;
xor zmm4_7@uint64 zmm10_7 zmm4_7;
(* vpxord %zmm7,%zmm12,%zmm7                       #! PC = 0x55555558d029 *)
xor zmm7_0@uint64 zmm12_0 zmm7_0;
xor zmm7_1@uint64 zmm12_1 zmm7_1;
xor zmm7_2@uint64 zmm12_2 zmm7_2;
xor zmm7_3@uint64 zmm12_3 zmm7_3;
xor zmm7_4@uint64 zmm12_4 zmm7_4;
xor zmm7_5@uint64 zmm12_5 zmm7_5;
xor zmm7_6@uint64 zmm12_6 zmm7_6;
xor zmm7_7@uint64 zmm12_7 zmm7_7;
(* vpxord %zmm14,%zmm19,%zmm14                     #! PC = 0x55555558d02f *)
xor zmm14_0@uint64 zmm19_0 zmm14_0;
xor zmm14_1@uint64 zmm19_1 zmm14_1;
xor zmm14_2@uint64 zmm19_2 zmm14_2;
xor zmm14_3@uint64 zmm19_3 zmm14_3;
xor zmm14_4@uint64 zmm19_4 zmm14_4;
xor zmm14_5@uint64 zmm19_5 zmm14_5;
xor zmm14_6@uint64 zmm19_6 zmm14_6;
xor zmm14_7@uint64 zmm19_7 zmm14_7;
(* vprorq $0x15,%zmm4,%zmm4                        #! PC = 0x55555558d035 *)
ror zmm4_0 zmm4_0 0x15;
ror zmm4_1 zmm4_1 0x15;
ror zmm4_2 zmm4_2 0x15;
ror zmm4_3 zmm4_3 0x15;
ror zmm4_4 zmm4_4 0x15;
ror zmm4_5 zmm4_5 0x15;
ror zmm4_6 zmm4_6 0x15;
ror zmm4_7 zmm4_7 0x15;
(* vprolq $0x15,%zmm7,%zmm7                        #! PC = 0x55555558d03c *)
rol zmm7_0 zmm7_0 0x15;
rol zmm7_1 zmm7_1 0x15;
rol zmm7_2 zmm7_2 0x15;
rol zmm7_3 zmm7_3 0x15;
rol zmm7_4 zmm7_4 0x15;
rol zmm7_5 zmm7_5 0x15;
rol zmm7_6 zmm7_6 0x15;
rol zmm7_7 zmm7_7 0x15;
(* vprolq $0xe,%zmm14,%zmm14                       #! PC = 0x55555558d043 *)
rol zmm14_0 zmm14_0 0xe;
rol zmm14_1 zmm14_1 0xe;
rol zmm14_2 zmm14_2 0xe;
rol zmm14_3 zmm14_3 0xe;
rol zmm14_4 zmm14_4 0xe;
rol zmm14_5 zmm14_5 0xe;
rol zmm14_6 zmm14_6 0xe;
rol zmm14_7 zmm14_7 0xe;
(* vpxord %zmm28,%zmm18,%zmm18                     #! PC = 0x55555558d04a *)
xor zmm18_0@uint64 zmm18_0 zmm28_0;
xor zmm18_1@uint64 zmm18_1 zmm28_1;
xor zmm18_2@uint64 zmm18_2 zmm28_2;
xor zmm18_3@uint64 zmm18_3 zmm28_3;
xor zmm18_4@uint64 zmm18_4 zmm28_4;
xor zmm18_5@uint64 zmm18_5 zmm28_5;
xor zmm18_6@uint64 zmm18_6 zmm28_6;
xor zmm18_7@uint64 zmm18_7 zmm28_7;
(* vpxord %zmm26,%zmm18,%zmm26                     #! PC = 0x55555558d050 *)
xor zmm26_0@uint64 zmm18_0 zmm26_0;
xor zmm26_1@uint64 zmm18_1 zmm26_1;
xor zmm26_2@uint64 zmm18_2 zmm26_2;
xor zmm26_3@uint64 zmm18_3 zmm26_3;
xor zmm26_4@uint64 zmm18_4 zmm26_4;
xor zmm26_5@uint64 zmm18_5 zmm26_5;
xor zmm26_6@uint64 zmm18_6 zmm26_6;
xor zmm26_7@uint64 zmm18_7 zmm26_7;
(* vmovdqa64 %zmm26,%zmm25                         #! PC = 0x55555558d056 *)
mov zmm25_0 zmm26_0;
mov zmm25_1 zmm26_1;
mov zmm25_2 zmm26_2;
mov zmm25_3 zmm26_3;
mov zmm25_4 zmm26_4;
mov zmm25_5 zmm26_5;
mov zmm25_6 zmm26_6;
mov zmm25_7 zmm26_7;
(* vmovdqa64 %zmm11,%zmm28                         #! PC = 0x55555558d05c *)
mov zmm28_0 zmm11_0;
mov zmm28_1 zmm11_1;
mov zmm28_2 zmm11_2;
mov zmm28_3 zmm11_3;
mov zmm28_4 zmm11_4;
mov zmm28_5 zmm11_5;
mov zmm28_6 zmm11_6;
mov zmm28_7 zmm11_7;
(* vpternlogq $0xd2,%zmm7,%zmm4,%zmm28             #! PC = 0x55555558d062 *)
mov table 0xd2@uint8;
inline vpternlogq64 (zmm28_0, zmm4_0, zmm7_0, table);
inline vpternlogq64 (zmm28_1, zmm4_1, zmm7_1, table);
inline vpternlogq64 (zmm28_2, zmm4_2, zmm7_2, table);
inline vpternlogq64 (zmm28_3, zmm4_3, zmm7_3, table);
inline vpternlogq64 (zmm28_4, zmm4_4, zmm7_4, table);
inline vpternlogq64 (zmm28_5, zmm4_5, zmm7_5, table);
inline vpternlogq64 (zmm28_6, zmm4_6, zmm7_6, table);
inline vpternlogq64 (zmm28_7, zmm4_7, zmm7_7, table);
(* vpternlogq $0xd2,%zmm4,%zmm11,%zmm25            #! PC = 0x55555558d069 *)
mov table 0xd2@uint8;
inline vpternlogq64 (zmm25_0, zmm11_0, zmm4_0, table);
inline vpternlogq64 (zmm25_1, zmm11_1, zmm4_1, table);
inline vpternlogq64 (zmm25_2, zmm11_2, zmm4_2, table);
inline vpternlogq64 (zmm25_3, zmm11_3, zmm4_3, table);
inline vpternlogq64 (zmm25_4, zmm11_4, zmm4_4, table);
inline vpternlogq64 (zmm25_5, zmm11_5, zmm4_5, table);
inline vpternlogq64 (zmm25_6, zmm11_6, zmm4_6, table);
inline vpternlogq64 (zmm25_7, zmm11_7, zmm4_7, table);
(* vpternlogq $0xd2,%zmm14,%zmm7,%zmm4             #! PC = 0x55555558d070 *)
mov table 0xd2@uint8;
inline vpternlogq64 (zmm4_0, zmm7_0, zmm14_0, table);
inline vpternlogq64 (zmm4_1, zmm7_1, zmm14_1, table);
inline vpternlogq64 (zmm4_2, zmm7_2, zmm14_2, table);
inline vpternlogq64 (zmm4_3, zmm7_3, zmm14_3, table);
inline vpternlogq64 (zmm4_4, zmm7_4, zmm14_4, table);
inline vpternlogq64 (zmm4_5, zmm7_5, zmm14_5, table);
inline vpternlogq64 (zmm4_6, zmm7_6, zmm14_6, table);
inline vpternlogq64 (zmm4_7, zmm7_7, zmm14_7, table);
(* vpternlogq $0xd2,%zmm26,%zmm14,%zmm7            #! PC = 0x55555558d077 *)
mov table 0xd2@uint8;
inline vpternlogq64 (zmm7_0, zmm14_0, zmm26_0, table);
inline vpternlogq64 (zmm7_1, zmm14_1, zmm26_1, table);
inline vpternlogq64 (zmm7_2, zmm14_2, zmm26_2, table);
inline vpternlogq64 (zmm7_3, zmm14_3, zmm26_3, table);
inline vpternlogq64 (zmm7_4, zmm14_4, zmm26_4, table);
inline vpternlogq64 (zmm7_5, zmm14_5, zmm26_5, table);
inline vpternlogq64 (zmm7_6, zmm14_6, zmm26_6, table);
inline vpternlogq64 (zmm7_7, zmm14_7, zmm26_7, table);
(* vpternlogq $0xd2,%zmm11,%zmm26,%zmm14           #! PC = 0x55555558d07e *)
mov table 0xd2@uint8;
inline vpternlogq64 (zmm14_0, zmm26_0, zmm11_0, table);
inline vpternlogq64 (zmm14_1, zmm26_1, zmm11_1, table);
inline vpternlogq64 (zmm14_2, zmm26_2, zmm11_2, table);
inline vpternlogq64 (zmm14_3, zmm26_3, zmm11_3, table);
inline vpternlogq64 (zmm14_4, zmm26_4, zmm11_4, table);
inline vpternlogq64 (zmm14_5, zmm26_5, zmm11_5, table);
inline vpternlogq64 (zmm14_6, zmm26_6, zmm11_6, table);
inline vpternlogq64 (zmm14_7, zmm26_7, zmm11_7, table);
(* vpbroadcastq %rsi,%zmm11                        #! PC = 0x55555558d085 *)
mov zmm11_0 rsi;
mov zmm11_1 rsi;
mov zmm11_2 rsi;
mov zmm11_3 rsi;
mov zmm11_4 rsi;
mov zmm11_5 rsi;
mov zmm11_6 rsi;
mov zmm11_7 rsi;
(* vpxord %zmm11,%zmm25,%zmm25                     #! PC = 0x55555558d08b *)
xor zmm25_0@uint64 zmm25_0 zmm11_0;
xor zmm25_1@uint64 zmm25_1 zmm11_1;
xor zmm25_2@uint64 zmm25_2 zmm11_2;
xor zmm25_3@uint64 zmm25_3 zmm11_3;
xor zmm25_4@uint64 zmm25_4 zmm11_4;
xor zmm25_5@uint64 zmm25_5 zmm11_5;
xor zmm25_6@uint64 zmm25_6 zmm11_6;
xor zmm25_7@uint64 zmm25_7 zmm11_7;
(* vpxord %zmm24,%zmm12,%zmm24                     #! PC = 0x55555558d091 *)
xor zmm24_0@uint64 zmm12_0 zmm24_0;
xor zmm24_1@uint64 zmm12_1 zmm24_1;
xor zmm24_2@uint64 zmm12_2 zmm24_2;
xor zmm24_3@uint64 zmm12_3 zmm24_3;
xor zmm24_4@uint64 zmm12_4 zmm24_4;
xor zmm24_5@uint64 zmm12_5 zmm24_5;
xor zmm24_6@uint64 zmm12_6 zmm24_6;
xor zmm24_7@uint64 zmm12_7 zmm24_7;
(* vpxord 0xc8(%rsp),%zmm0,%zmm11                  #! EA = L0x7fffffffd580; Value = 0x0000000000000000; PC = 0x55555558d097 *)
xor zmm11_0@uint64 zmm0_0 L0x7fffffffd580;
xor zmm11_1@uint64 zmm0_1 L0x7fffffffd588;
xor zmm11_2@uint64 zmm0_2 L0x7fffffffd590;
xor zmm11_3@uint64 zmm0_3 L0x7fffffffd598;
xor zmm11_4@uint64 zmm0_4 L0x7fffffffd5a0;
xor zmm11_5@uint64 zmm0_5 L0x7fffffffd5a8;
xor zmm11_6@uint64 zmm0_6 L0x7fffffffd5b0;
xor zmm11_7@uint64 zmm0_7 L0x7fffffffd5b8;
(* vpxord %zmm9,%zmm19,%zmm9                       #! PC = 0x55555558d0a2 *)
xor zmm9_0@uint64 zmm19_0 zmm9_0;
xor zmm9_1@uint64 zmm19_1 zmm9_1;
xor zmm9_2@uint64 zmm19_2 zmm9_2;
xor zmm9_3@uint64 zmm19_3 zmm9_3;
xor zmm9_4@uint64 zmm19_4 zmm9_4;
xor zmm9_5@uint64 zmm19_5 zmm9_5;
xor zmm9_6@uint64 zmm19_6 zmm9_6;
xor zmm9_7@uint64 zmm19_7 zmm9_7;
(* vprolq $0x1c,%zmm24,%zmm24                      #! PC = 0x55555558d0a8 *)
rol zmm24_0 zmm24_0 0x1c;
rol zmm24_1 zmm24_1 0x1c;
rol zmm24_2 zmm24_2 0x1c;
rol zmm24_3 zmm24_3 0x1c;
rol zmm24_4 zmm24_4 0x1c;
rol zmm24_5 zmm24_5 0x1c;
rol zmm24_6 zmm24_6 0x1c;
rol zmm24_7 zmm24_7 0x1c;
(* vprolq $0x14,%zmm9,%zmm9                        #! PC = 0x55555558d0af *)
rol zmm9_0 zmm9_0 0x14;
rol zmm9_1 zmm9_1 0x14;
rol zmm9_2 zmm9_2 0x14;
rol zmm9_3 zmm9_3 0x14;
rol zmm9_4 zmm9_4 0x14;
rol zmm9_5 zmm9_5 0x14;
rol zmm9_6 zmm9_6 0x14;
rol zmm9_7 zmm9_7 0x14;
(* vpxord %zmm8,%zmm18,%zmm8                       #! PC = 0x55555558d0b6 *)
xor zmm8_0@uint64 zmm18_0 zmm8_0;
xor zmm8_1@uint64 zmm18_1 zmm8_1;
xor zmm8_2@uint64 zmm18_2 zmm8_2;
xor zmm8_3@uint64 zmm18_3 zmm8_3;
xor zmm8_4@uint64 zmm18_4 zmm8_4;
xor zmm8_5@uint64 zmm18_5 zmm8_5;
xor zmm8_6@uint64 zmm18_6 zmm8_6;
xor zmm8_7@uint64 zmm18_7 zmm8_7;
(* vpxord %zmm27,%zmm0,%zmm27                      #! PC = 0x55555558d0bc *)
xor zmm27_0@uint64 zmm0_0 zmm27_0;
xor zmm27_1@uint64 zmm0_1 zmm27_1;
xor zmm27_2@uint64 zmm0_2 zmm27_2;
xor zmm27_3@uint64 zmm0_3 zmm27_3;
xor zmm27_4@uint64 zmm0_4 zmm27_4;
xor zmm27_5@uint64 zmm0_5 zmm27_5;
xor zmm27_6@uint64 zmm0_6 zmm27_6;
xor zmm27_7@uint64 zmm0_7 zmm27_7;
(* vpxord %zmm13,%zmm10,%zmm13                     #! PC = 0x55555558d0c2 *)
xor zmm13_0@uint64 zmm10_0 zmm13_0;
xor zmm13_1@uint64 zmm10_1 zmm13_1;
xor zmm13_2@uint64 zmm10_2 zmm13_2;
xor zmm13_3@uint64 zmm10_3 zmm13_3;
xor zmm13_4@uint64 zmm10_4 zmm13_4;
xor zmm13_5@uint64 zmm10_5 zmm13_5;
xor zmm13_6@uint64 zmm10_6 zmm13_6;
xor zmm13_7@uint64 zmm10_7 zmm13_7;
(* vprolq $0x1,%zmm11,%zmm11                       #! PC = 0x55555558d0c8 *)
rol zmm11_0 zmm11_0 0x1;
rol zmm11_1 zmm11_1 0x1;
rol zmm11_2 zmm11_2 0x1;
rol zmm11_3 zmm11_3 0x1;
rol zmm11_4 zmm11_4 0x1;
rol zmm11_5 zmm11_5 0x1;
rol zmm11_6 zmm11_6 0x1;
rol zmm11_7 zmm11_7 0x1;
(* vprolq $0x3,%zmm8,%zmm8                         #! PC = 0x55555558d0cf *)
rol zmm8_0 zmm8_0 0x3;
rol zmm8_1 zmm8_1 0x3;
rol zmm8_2 zmm8_2 0x3;
rol zmm8_3 zmm8_3 0x3;
rol zmm8_4 zmm8_4 0x3;
rol zmm8_5 zmm8_5 0x3;
rol zmm8_6 zmm8_6 0x3;
rol zmm8_7 zmm8_7 0x3;
(* vprorq $0x13,%zmm27,%zmm27                      #! PC = 0x55555558d0d6 *)
ror zmm27_0 zmm27_0 0x13;
ror zmm27_1 zmm27_1 0x13;
ror zmm27_2 zmm27_2 0x13;
ror zmm27_3 zmm27_3 0x13;
ror zmm27_4 zmm27_4 0x13;
ror zmm27_5 zmm27_5 0x13;
ror zmm27_6 zmm27_6 0x13;
ror zmm27_7 zmm27_7 0x13;
(* vprorq $0x3,%zmm13,%zmm13                       #! PC = 0x55555558d0dd *)
ror zmm13_0 zmm13_0 0x3;
ror zmm13_1 zmm13_1 0x3;
ror zmm13_2 zmm13_2 0x3;
ror zmm13_3 zmm13_3 0x3;
ror zmm13_4 zmm13_4 0x3;
ror zmm13_5 zmm13_5 0x3;
ror zmm13_6 zmm13_6 0x3;
ror zmm13_7 zmm13_7 0x3;
(* vpxord %zmm31,%zmm10,%zmm31                     #! PC = 0x55555558d0e4 *)
xor zmm31_0@uint64 zmm10_0 zmm31_0;
xor zmm31_1@uint64 zmm10_1 zmm31_1;
xor zmm31_2@uint64 zmm10_2 zmm31_2;
xor zmm31_3@uint64 zmm10_3 zmm31_3;
xor zmm31_4@uint64 zmm10_4 zmm31_4;
xor zmm31_5@uint64 zmm10_5 zmm31_5;
xor zmm31_6@uint64 zmm10_6 zmm31_6;
xor zmm31_7@uint64 zmm10_7 zmm31_7;
(* vpxord %zmm3,%zmm12,%zmm3                       #! PC = 0x55555558d0ea *)
xor zmm3_0@uint64 zmm12_0 zmm3_0;
xor zmm3_1@uint64 zmm12_1 zmm3_1;
xor zmm3_2@uint64 zmm12_2 zmm3_2;
xor zmm3_3@uint64 zmm12_3 zmm3_3;
xor zmm3_4@uint64 zmm12_4 zmm3_4;
xor zmm3_5@uint64 zmm12_5 zmm3_5;
xor zmm3_6@uint64 zmm12_6 zmm3_6;
xor zmm3_7@uint64 zmm12_7 zmm3_7;
(* vprolq $0x6,%zmm31,%zmm31                       #! PC = 0x55555558d0f0 *)
rol zmm31_0 zmm31_0 0x6;
rol zmm31_1 zmm31_1 0x6;
rol zmm31_2 zmm31_2 0x6;
rol zmm31_3 zmm31_3 0x6;
rol zmm31_4 zmm31_4 0x6;
rol zmm31_5 zmm31_5 0x6;
rol zmm31_6 zmm31_6 0x6;
rol zmm31_7 zmm31_7 0x6;
(* vprolq $0x19,%zmm3,%zmm3                        #! PC = 0x55555558d0f7 *)
rol zmm3_0 zmm3_0 0x19;
rol zmm3_1 zmm3_1 0x19;
rol zmm3_2 zmm3_2 0x19;
rol zmm3_3 zmm3_3 0x19;
rol zmm3_4 zmm3_4 0x19;
rol zmm3_5 zmm3_5 0x19;
rol zmm3_6 zmm3_6 0x19;
rol zmm3_7 zmm3_7 0x19;
(* vpxord %zmm16,%zmm18,%zmm16                     #! PC = 0x55555558d0fe *)
xor zmm16_0@uint64 zmm18_0 zmm16_0;
xor zmm16_1@uint64 zmm18_1 zmm16_1;
xor zmm16_2@uint64 zmm18_2 zmm16_2;
xor zmm16_3@uint64 zmm18_3 zmm16_3;
xor zmm16_4@uint64 zmm18_4 zmm16_4;
xor zmm16_5@uint64 zmm18_5 zmm16_5;
xor zmm16_6@uint64 zmm18_6 zmm16_6;
xor zmm16_7@uint64 zmm18_7 zmm16_7;
(* vpxord %zmm2,%zmm19,%zmm2                       #! PC = 0x55555558d104 *)
xor zmm2_0@uint64 zmm19_0 zmm2_0;
xor zmm2_1@uint64 zmm19_1 zmm2_1;
xor zmm2_2@uint64 zmm19_2 zmm2_2;
xor zmm2_3@uint64 zmm19_3 zmm2_3;
xor zmm2_4@uint64 zmm19_4 zmm2_4;
xor zmm2_5@uint64 zmm19_5 zmm2_5;
xor zmm2_6@uint64 zmm19_6 zmm2_6;
xor zmm2_7@uint64 zmm19_7 zmm2_7;
(* vprolq $0x12,%zmm16,%zmm16                      #! PC = 0x55555558d10a *)
rol zmm16_0 zmm16_0 0x12;
rol zmm16_1 zmm16_1 0x12;
rol zmm16_2 zmm16_2 0x12;
rol zmm16_3 zmm16_3 0x12;
rol zmm16_4 zmm16_4 0x12;
rol zmm16_5 zmm16_5 0x12;
rol zmm16_6 zmm16_6 0x12;
rol zmm16_7 zmm16_7 0x12;
(* vprolq $0x8,%zmm2,%zmm2                         #! PC = 0x55555558d111 *)
rol zmm2_0 zmm2_0 0x8;
rol zmm2_1 zmm2_1 0x8;
rol zmm2_2 zmm2_2 0x8;
rol zmm2_3 zmm2_3 0x8;
rol zmm2_4 zmm2_4 0x8;
rol zmm2_5 zmm2_5 0x8;
rol zmm2_6 zmm2_6 0x8;
rol zmm2_7 zmm2_7 0x8;
(* vmovdqa64 %zmm24,%zmm21                         #! PC = 0x55555558d118 *)
mov zmm21_0 zmm24_0;
mov zmm21_1 zmm24_1;
mov zmm21_2 zmm24_2;
mov zmm21_3 zmm24_3;
mov zmm21_4 zmm24_4;
mov zmm21_5 zmm24_5;
mov zmm21_6 zmm24_6;
mov zmm21_7 zmm24_7;
(* vmovdqa64 %zmm9,%zmm26                          #! PC = 0x55555558d11e *)
mov zmm26_0 zmm9_0;
mov zmm26_1 zmm9_1;
mov zmm26_2 zmm9_2;
mov zmm26_3 zmm9_3;
mov zmm26_4 zmm9_4;
mov zmm26_5 zmm9_5;
mov zmm26_6 zmm9_6;
mov zmm26_7 zmm9_7;
(* vpternlogq $0xd2,%zmm8,%zmm9,%zmm21             #! PC = 0x55555558d124 *)
mov table 0xd2@uint8;
inline vpternlogq64 (zmm21_0, zmm9_0, zmm8_0, table);
inline vpternlogq64 (zmm21_1, zmm9_1, zmm8_1, table);
inline vpternlogq64 (zmm21_2, zmm9_2, zmm8_2, table);
inline vpternlogq64 (zmm21_3, zmm9_3, zmm8_3, table);
inline vpternlogq64 (zmm21_4, zmm9_4, zmm8_4, table);
inline vpternlogq64 (zmm21_5, zmm9_5, zmm8_5, table);
inline vpternlogq64 (zmm21_6, zmm9_6, zmm8_6, table);
inline vpternlogq64 (zmm21_7, zmm9_7, zmm8_7, table);
(* vpternlogq $0xd2,%zmm27,%zmm8,%zmm26            #! PC = 0x55555558d12b *)
mov table 0xd2@uint8;
inline vpternlogq64 (zmm26_0, zmm8_0, zmm27_0, table);
inline vpternlogq64 (zmm26_1, zmm8_1, zmm27_1, table);
inline vpternlogq64 (zmm26_2, zmm8_2, zmm27_2, table);
inline vpternlogq64 (zmm26_3, zmm8_3, zmm27_3, table);
inline vpternlogq64 (zmm26_4, zmm8_4, zmm27_4, table);
inline vpternlogq64 (zmm26_5, zmm8_5, zmm27_5, table);
inline vpternlogq64 (zmm26_6, zmm8_6, zmm27_6, table);
inline vpternlogq64 (zmm26_7, zmm8_7, zmm27_7, table);
(* vpternlogq $0xd2,%zmm13,%zmm27,%zmm8            #! PC = 0x55555558d132 *)
mov table 0xd2@uint8;
inline vpternlogq64 (zmm8_0, zmm27_0, zmm13_0, table);
inline vpternlogq64 (zmm8_1, zmm27_1, zmm13_1, table);
inline vpternlogq64 (zmm8_2, zmm27_2, zmm13_2, table);
inline vpternlogq64 (zmm8_3, zmm27_3, zmm13_3, table);
inline vpternlogq64 (zmm8_4, zmm27_4, zmm13_4, table);
inline vpternlogq64 (zmm8_5, zmm27_5, zmm13_5, table);
inline vpternlogq64 (zmm8_6, zmm27_6, zmm13_6, table);
inline vpternlogq64 (zmm8_7, zmm27_7, zmm13_7, table);
(* vpternlogq $0xd2,%zmm24,%zmm13,%zmm27           #! PC = 0x55555558d139 *)
mov table 0xd2@uint8;
inline vpternlogq64 (zmm27_0, zmm13_0, zmm24_0, table);
inline vpternlogq64 (zmm27_1, zmm13_1, zmm24_1, table);
inline vpternlogq64 (zmm27_2, zmm13_2, zmm24_2, table);
inline vpternlogq64 (zmm27_3, zmm13_3, zmm24_3, table);
inline vpternlogq64 (zmm27_4, zmm13_4, zmm24_4, table);
inline vpternlogq64 (zmm27_5, zmm13_5, zmm24_5, table);
inline vpternlogq64 (zmm27_6, zmm13_6, zmm24_6, table);
inline vpternlogq64 (zmm27_7, zmm13_7, zmm24_7, table);
(* vpternlogq $0xd2,%zmm9,%zmm24,%zmm13            #! PC = 0x55555558d140 *)
mov table 0xd2@uint8;
inline vpternlogq64 (zmm13_0, zmm24_0, zmm9_0, table);
inline vpternlogq64 (zmm13_1, zmm24_1, zmm9_1, table);
inline vpternlogq64 (zmm13_2, zmm24_2, zmm9_2, table);
inline vpternlogq64 (zmm13_3, zmm24_3, zmm9_3, table);
inline vpternlogq64 (zmm13_4, zmm24_4, zmm9_4, table);
inline vpternlogq64 (zmm13_5, zmm24_5, zmm9_5, table);
inline vpternlogq64 (zmm13_6, zmm24_6, zmm9_6, table);
inline vpternlogq64 (zmm13_7, zmm24_7, zmm9_7, table);
(* vmovdqa64 %zmm11,%zmm9                          #! PC = 0x55555558d147 *)
mov zmm9_0 zmm11_0;
mov zmm9_1 zmm11_1;
mov zmm9_2 zmm11_2;
mov zmm9_3 zmm11_3;
mov zmm9_4 zmm11_4;
mov zmm9_5 zmm11_5;
mov zmm9_6 zmm11_6;
mov zmm9_7 zmm11_7;
(* vpternlogq $0xd2,%zmm3,%zmm31,%zmm9             #! PC = 0x55555558d14d *)
mov table 0xd2@uint8;
inline vpternlogq64 (zmm9_0, zmm31_0, zmm3_0, table);
inline vpternlogq64 (zmm9_1, zmm31_1, zmm3_1, table);
inline vpternlogq64 (zmm9_2, zmm31_2, zmm3_2, table);
inline vpternlogq64 (zmm9_3, zmm31_3, zmm3_3, table);
inline vpternlogq64 (zmm9_4, zmm31_4, zmm3_4, table);
inline vpternlogq64 (zmm9_5, zmm31_5, zmm3_5, table);
inline vpternlogq64 (zmm9_6, zmm31_6, zmm3_6, table);
inline vpternlogq64 (zmm9_7, zmm31_7, zmm3_7, table);
(* vmovdqa64 %zmm9,%zmm15                          #! PC = 0x55555558d154 *)
mov zmm15_0 zmm9_0;
mov zmm15_1 zmm9_1;
mov zmm15_2 zmm9_2;
mov zmm15_3 zmm9_3;
mov zmm15_4 zmm9_4;
mov zmm15_5 zmm9_5;
mov zmm15_6 zmm9_6;
mov zmm15_7 zmm9_7;
(* vmovdqa64 %zmm31,%zmm9                          #! PC = 0x55555558d15a *)
mov zmm9_0 zmm31_0;
mov zmm9_1 zmm31_1;
mov zmm9_2 zmm31_2;
mov zmm9_3 zmm31_3;
mov zmm9_4 zmm31_4;
mov zmm9_5 zmm31_5;
mov zmm9_6 zmm31_6;
mov zmm9_7 zmm31_7;
(* vpternlogq $0xd2,%zmm2,%zmm3,%zmm9              #! PC = 0x55555558d160 *)
mov table 0xd2@uint8;
inline vpternlogq64 (zmm9_0, zmm3_0, zmm2_0, table);
inline vpternlogq64 (zmm9_1, zmm3_1, zmm2_1, table);
inline vpternlogq64 (zmm9_2, zmm3_2, zmm2_2, table);
inline vpternlogq64 (zmm9_3, zmm3_3, zmm2_3, table);
inline vpternlogq64 (zmm9_4, zmm3_4, zmm2_4, table);
inline vpternlogq64 (zmm9_5, zmm3_5, zmm2_5, table);
inline vpternlogq64 (zmm9_6, zmm3_6, zmm2_6, table);
inline vpternlogq64 (zmm9_7, zmm3_7, zmm2_7, table);
(* vpxord %zmm23,%zmm18,%zmm23                     #! PC = 0x55555558d167 *)
xor zmm23_0@uint64 zmm18_0 zmm23_0;
xor zmm23_1@uint64 zmm18_1 zmm23_1;
xor zmm23_2@uint64 zmm18_2 zmm23_2;
xor zmm23_3@uint64 zmm18_3 zmm23_3;
xor zmm23_4@uint64 zmm18_4 zmm23_4;
xor zmm23_5@uint64 zmm18_5 zmm23_5;
xor zmm23_6@uint64 zmm18_6 zmm23_6;
xor zmm23_7@uint64 zmm18_7 zmm23_7;
(* vpternlogq $0xd2,%zmm16,%zmm2,%zmm3             #! PC = 0x55555558d16d *)
mov table 0xd2@uint8;
inline vpternlogq64 (zmm3_0, zmm2_0, zmm16_0, table);
inline vpternlogq64 (zmm3_1, zmm2_1, zmm16_1, table);
inline vpternlogq64 (zmm3_2, zmm2_2, zmm16_2, table);
inline vpternlogq64 (zmm3_3, zmm2_3, zmm16_3, table);
inline vpternlogq64 (zmm3_4, zmm2_4, zmm16_4, table);
inline vpternlogq64 (zmm3_5, zmm2_5, zmm16_5, table);
inline vpternlogq64 (zmm3_6, zmm2_6, zmm16_6, table);
inline vpternlogq64 (zmm3_7, zmm2_7, zmm16_7, table);
(* vpxord %zmm6,%zmm10,%zmm6                       #! PC = 0x55555558d174 *)
xor zmm6_0@uint64 zmm10_0 zmm6_0;
xor zmm6_1@uint64 zmm10_1 zmm6_1;
xor zmm6_2@uint64 zmm10_2 zmm6_2;
xor zmm6_3@uint64 zmm10_3 zmm6_3;
xor zmm6_4@uint64 zmm10_4 zmm6_4;
xor zmm6_5@uint64 zmm10_5 zmm6_5;
xor zmm6_6@uint64 zmm10_6 zmm6_6;
xor zmm6_7@uint64 zmm10_7 zmm6_7;
(* vpternlogq $0xd2,%zmm11,%zmm16,%zmm2            #! PC = 0x55555558d17a *)
mov table 0xd2@uint8;
inline vpternlogq64 (zmm2_0, zmm16_0, zmm11_0, table);
inline vpternlogq64 (zmm2_1, zmm16_1, zmm11_1, table);
inline vpternlogq64 (zmm2_2, zmm16_2, zmm11_2, table);
inline vpternlogq64 (zmm2_3, zmm16_3, zmm11_3, table);
inline vpternlogq64 (zmm2_4, zmm16_4, zmm11_4, table);
inline vpternlogq64 (zmm2_5, zmm16_5, zmm11_5, table);
inline vpternlogq64 (zmm2_6, zmm16_6, zmm11_6, table);
inline vpternlogq64 (zmm2_7, zmm16_7, zmm11_7, table);
(* vpxord 0x148(%rsp),%zmm10,%zmm10                #! EA = L0x7fffffffd600; Value = 0x00005555555c0639; PC = 0x55555558d181 *)
xor zmm10_0@uint64 zmm10_0 L0x7fffffffd600;
xor zmm10_1@uint64 zmm10_1 L0x7fffffffd608;
xor zmm10_2@uint64 zmm10_2 L0x7fffffffd610;
xor zmm10_3@uint64 zmm10_3 L0x7fffffffd618;
xor zmm10_4@uint64 zmm10_4 L0x7fffffffd620;
xor zmm10_5@uint64 zmm10_5 L0x7fffffffd628;
xor zmm10_6@uint64 zmm10_6 L0x7fffffffd630;
xor zmm10_7@uint64 zmm10_7 L0x7fffffffd638;
(* vpternlogq $0xd2,%zmm31,%zmm11,%zmm16           #! PC = 0x55555558d18c *)
mov table 0xd2@uint8;
inline vpternlogq64 (zmm16_0, zmm11_0, zmm31_0, table);
inline vpternlogq64 (zmm16_1, zmm11_1, zmm31_1, table);
inline vpternlogq64 (zmm16_2, zmm11_2, zmm31_2, table);
inline vpternlogq64 (zmm16_3, zmm11_3, zmm31_3, table);
inline vpternlogq64 (zmm16_4, zmm11_4, zmm31_4, table);
inline vpternlogq64 (zmm16_5, zmm11_5, zmm31_5, table);
inline vpternlogq64 (zmm16_6, zmm11_6, zmm31_6, table);
inline vpternlogq64 (zmm16_7, zmm11_7, zmm31_7, table);
(* vpxord %zmm30,%zmm19,%zmm30                     #! PC = 0x55555558d193 *)
xor zmm30_0@uint64 zmm19_0 zmm30_0;
xor zmm30_1@uint64 zmm19_1 zmm30_1;
xor zmm30_2@uint64 zmm19_2 zmm30_2;
xor zmm30_3@uint64 zmm19_3 zmm30_3;
xor zmm30_4@uint64 zmm19_4 zmm30_4;
xor zmm30_5@uint64 zmm19_5 zmm30_5;
xor zmm30_6@uint64 zmm19_6 zmm30_6;
xor zmm30_7@uint64 zmm19_7 zmm30_7;
(* vpxord 0x108(%rsp),%zmm0,%zmm11                 #! EA = L0x7fffffffd5c0; Value = 0xf07e0ad1f322ba59; PC = 0x55555558d199 *)
xor zmm11_0@uint64 zmm0_0 L0x7fffffffd5c0;
xor zmm11_1@uint64 zmm0_1 L0x7fffffffd5c8;
xor zmm11_2@uint64 zmm0_2 L0x7fffffffd5d0;
xor zmm11_3@uint64 zmm0_3 L0x7fffffffd5d8;
xor zmm11_4@uint64 zmm0_4 L0x7fffffffd5e0;
xor zmm11_5@uint64 zmm0_5 L0x7fffffffd5e8;
xor zmm11_6@uint64 zmm0_6 L0x7fffffffd5f0;
xor zmm11_7@uint64 zmm0_7 L0x7fffffffd5f8;
(* vprorq $0x1c,%zmm23,%zmm23                      #! PC = 0x55555558d1a4 *)
ror zmm23_0 zmm23_0 0x1c;
ror zmm23_1 zmm23_1 0x1c;
ror zmm23_2 zmm23_2 0x1c;
ror zmm23_3 zmm23_3 0x1c;
ror zmm23_4 zmm23_4 0x1c;
ror zmm23_5 zmm23_5 0x1c;
ror zmm23_6 zmm23_6 0x1c;
ror zmm23_7 zmm23_7 0x1c;
(* vprolq $0x1b,%zmm30,%zmm30                      #! PC = 0x55555558d1ab *)
rol zmm30_0 zmm30_0 0x1b;
rol zmm30_1 zmm30_1 0x1b;
rol zmm30_2 zmm30_2 0x1b;
rol zmm30_3 zmm30_3 0x1b;
rol zmm30_4 zmm30_4 0x1b;
rol zmm30_5 zmm30_5 0x1b;
rol zmm30_6 zmm30_6 0x1b;
rol zmm30_7 zmm30_7 0x1b;
(* vpxord %zmm1,%zmm12,%zmm1                       #! PC = 0x55555558d1b2 *)
xor zmm1_0@uint64 zmm12_0 zmm1_0;
xor zmm1_1@uint64 zmm12_1 zmm1_1;
xor zmm1_2@uint64 zmm12_2 zmm1_2;
xor zmm1_3@uint64 zmm12_3 zmm1_3;
xor zmm1_4@uint64 zmm12_4 zmm1_4;
xor zmm1_5@uint64 zmm12_5 zmm1_5;
xor zmm1_6@uint64 zmm12_6 zmm1_6;
xor zmm1_7@uint64 zmm12_7 zmm1_7;
(* vpxord %zmm17,%zmm12,%zmm12                     #! PC = 0x55555558d1b8 *)
xor zmm12_0@uint64 zmm12_0 zmm17_0;
xor zmm12_1@uint64 zmm12_1 zmm17_1;
xor zmm12_2@uint64 zmm12_2 zmm17_2;
xor zmm12_3@uint64 zmm12_3 zmm17_3;
xor zmm12_4@uint64 zmm12_4 zmm17_4;
xor zmm12_5@uint64 zmm12_5 zmm17_5;
xor zmm12_6@uint64 zmm12_6 zmm17_6;
xor zmm12_7@uint64 zmm12_7 zmm17_7;
(* vprorq $0x2,%zmm10,%zmm10                       #! PC = 0x55555558d1be *)
ror zmm10_0 zmm10_0 0x2;
ror zmm10_1 zmm10_1 0x2;
ror zmm10_2 zmm10_2 0x2;
ror zmm10_3 zmm10_3 0x2;
ror zmm10_4 zmm10_4 0x2;
ror zmm10_5 zmm10_5 0x2;
ror zmm10_6 zmm10_6 0x2;
ror zmm10_7 zmm10_7 0x2;
(* vprorq $0x9,%zmm12,%zmm12                       #! PC = 0x55555558d1c5 *)
ror zmm12_0 zmm12_0 0x9;
ror zmm12_1 zmm12_1 0x9;
ror zmm12_2 zmm12_2 0x9;
ror zmm12_3 zmm12_3 0x9;
ror zmm12_4 zmm12_4 0x9;
ror zmm12_5 zmm12_5 0x9;
ror zmm12_6 zmm12_6 0x9;
ror zmm12_7 zmm12_7 0x9;
(* vprolq $0xa,%zmm11,%zmm11                       #! PC = 0x55555558d1cc *)
rol zmm11_0 zmm11_0 0xa;
rol zmm11_1 zmm11_1 0xa;
rol zmm11_2 zmm11_2 0xa;
rol zmm11_3 zmm11_3 0xa;
rol zmm11_4 zmm11_4 0xa;
rol zmm11_5 zmm11_5 0xa;
rol zmm11_6 zmm11_6 0xa;
rol zmm11_7 zmm11_7 0xa;
(* vprolq $0xf,%zmm6,%zmm6                         #! PC = 0x55555558d1d3 *)
rol zmm6_0 zmm6_0 0xf;
rol zmm6_1 zmm6_1 0xf;
rol zmm6_2 zmm6_2 0xf;
rol zmm6_3 zmm6_3 0xf;
rol zmm6_4 zmm6_4 0xf;
rol zmm6_5 zmm6_5 0xf;
rol zmm6_6 zmm6_6 0xf;
rol zmm6_7 zmm6_7 0xf;
(* vprorq $0x8,%zmm1,%zmm1                         #! PC = 0x55555558d1da *)
ror zmm1_0 zmm1_0 0x8;
ror zmm1_1 zmm1_1 0x8;
ror zmm1_2 zmm1_2 0x8;
ror zmm1_3 zmm1_3 0x8;
ror zmm1_4 zmm1_4 0x8;
ror zmm1_5 zmm1_5 0x8;
ror zmm1_6 zmm1_6 0x8;
ror zmm1_7 zmm1_7 0x8;
(* vpxord %zmm5,%zmm18,%zmm5                       #! PC = 0x55555558d1e1 *)
xor zmm5_0@uint64 zmm18_0 zmm5_0;
xor zmm5_1@uint64 zmm18_1 zmm5_1;
xor zmm5_2@uint64 zmm18_2 zmm5_2;
xor zmm5_3@uint64 zmm18_3 zmm5_3;
xor zmm5_4@uint64 zmm18_4 zmm5_4;
xor zmm5_5@uint64 zmm18_5 zmm5_5;
xor zmm5_6@uint64 zmm18_6 zmm5_6;
xor zmm5_7@uint64 zmm18_7 zmm5_7;
(* vpxord %zmm29,%zmm0,%zmm29                      #! PC = 0x55555558d1e7 *)
xor zmm29_0@uint64 zmm0_0 zmm29_0;
xor zmm29_1@uint64 zmm0_1 zmm29_1;
xor zmm29_2@uint64 zmm0_2 zmm29_2;
xor zmm29_3@uint64 zmm0_3 zmm29_3;
xor zmm29_4@uint64 zmm0_4 zmm29_4;
xor zmm29_5@uint64 zmm0_5 zmm29_5;
xor zmm29_6@uint64 zmm0_6 zmm29_6;
xor zmm29_7@uint64 zmm0_7 zmm29_7;
(* vpxord %zmm22,%zmm19,%zmm22                     #! PC = 0x55555558d1ed *)
xor zmm22_0@uint64 zmm19_0 zmm22_0;
xor zmm22_1@uint64 zmm19_1 zmm22_1;
xor zmm22_2@uint64 zmm19_2 zmm22_2;
xor zmm22_3@uint64 zmm19_3 zmm22_3;
xor zmm22_4@uint64 zmm19_4 zmm22_4;
xor zmm22_5@uint64 zmm19_5 zmm22_5;
xor zmm22_6@uint64 zmm19_6 zmm22_6;
xor zmm22_7@uint64 zmm19_7 zmm22_7;
(* vprorq $0x17,%zmm5,%zmm5                        #! PC = 0x55555558d1f3 *)
ror zmm5_0 zmm5_0 0x17;
ror zmm5_1 zmm5_1 0x17;
ror zmm5_2 zmm5_2 0x17;
ror zmm5_3 zmm5_3 0x17;
ror zmm5_4 zmm5_4 0x17;
ror zmm5_5 zmm5_5 0x17;
ror zmm5_6 zmm5_6 0x17;
ror zmm5_7 zmm5_7 0x17;
(* vprolq $0x2,%zmm29,%zmm29                       #! PC = 0x55555558d1fa *)
rol zmm29_0 zmm29_0 0x2;
rol zmm29_1 zmm29_1 0x2;
rol zmm29_2 zmm29_2 0x2;
rol zmm29_3 zmm29_3 0x2;
rol zmm29_4 zmm29_4 0x2;
rol zmm29_5 zmm29_5 0x2;
rol zmm29_6 zmm29_6 0x2;
rol zmm29_7 zmm29_7 0x2;
(* vprorq $0x19,%zmm22,%zmm22                      #! PC = 0x55555558d201 *)
ror zmm22_0 zmm22_0 0x19;
ror zmm22_1 zmm22_1 0x19;
ror zmm22_2 zmm22_2 0x19;
ror zmm22_3 zmm22_3 0x19;
ror zmm22_4 zmm22_4 0x19;
ror zmm22_5 zmm22_5 0x19;
ror zmm22_6 zmm22_6 0x19;
ror zmm22_7 zmm22_7 0x19;
(* vmovdqa64 %zmm30,%zmm31                         #! PC = 0x55555558d208 *)
mov zmm31_0 zmm30_0;
mov zmm31_1 zmm30_1;
mov zmm31_2 zmm30_2;
mov zmm31_3 zmm30_3;
mov zmm31_4 zmm30_4;
mov zmm31_5 zmm30_5;
mov zmm31_6 zmm30_6;
mov zmm31_7 zmm30_7;
(* vmovdqa64 %zmm23,%zmm20                         #! PC = 0x55555558d20e *)
mov zmm20_0 zmm23_0;
mov zmm20_1 zmm23_1;
mov zmm20_2 zmm23_2;
mov zmm20_3 zmm23_3;
mov zmm20_4 zmm23_4;
mov zmm20_5 zmm23_5;
mov zmm20_6 zmm23_6;
mov zmm20_7 zmm23_7;
(* vpternlogq $0xd2,%zmm11,%zmm23,%zmm31           #! PC = 0x55555558d214 *)
mov table 0xd2@uint8;
inline vpternlogq64 (zmm31_0, zmm23_0, zmm11_0, table);
inline vpternlogq64 (zmm31_1, zmm23_1, zmm11_1, table);
inline vpternlogq64 (zmm31_2, zmm23_2, zmm11_2, table);
inline vpternlogq64 (zmm31_3, zmm23_3, zmm11_3, table);
inline vpternlogq64 (zmm31_4, zmm23_4, zmm11_4, table);
inline vpternlogq64 (zmm31_5, zmm23_5, zmm11_5, table);
inline vpternlogq64 (zmm31_6, zmm23_6, zmm11_6, table);
inline vpternlogq64 (zmm31_7, zmm23_7, zmm11_7, table);
(* vpternlogq $0xd2,%zmm6,%zmm11,%zmm20            #! PC = 0x55555558d21b *)
mov table 0xd2@uint8;
inline vpternlogq64 (zmm20_0, zmm11_0, zmm6_0, table);
inline vpternlogq64 (zmm20_1, zmm11_1, zmm6_1, table);
inline vpternlogq64 (zmm20_2, zmm11_2, zmm6_2, table);
inline vpternlogq64 (zmm20_3, zmm11_3, zmm6_3, table);
inline vpternlogq64 (zmm20_4, zmm11_4, zmm6_4, table);
inline vpternlogq64 (zmm20_5, zmm11_5, zmm6_5, table);
inline vpternlogq64 (zmm20_6, zmm11_6, zmm6_6, table);
inline vpternlogq64 (zmm20_7, zmm11_7, zmm6_7, table);
(* vmovdqa64 %zmm10,%zmm19                         #! PC = 0x55555558d222 *)
mov zmm19_0 zmm10_0;
mov zmm19_1 zmm10_1;
mov zmm19_2 zmm10_2;
mov zmm19_3 zmm10_3;
mov zmm19_4 zmm10_4;
mov zmm19_5 zmm10_5;
mov zmm19_6 zmm10_6;
mov zmm19_7 zmm10_7;
(* vpternlogq $0xd2,%zmm1,%zmm6,%zmm11             #! PC = 0x55555558d228 *)
mov table 0xd2@uint8;
inline vpternlogq64 (zmm11_0, zmm6_0, zmm1_0, table);
inline vpternlogq64 (zmm11_1, zmm6_1, zmm1_1, table);
inline vpternlogq64 (zmm11_2, zmm6_2, zmm1_2, table);
inline vpternlogq64 (zmm11_3, zmm6_3, zmm1_3, table);
inline vpternlogq64 (zmm11_4, zmm6_4, zmm1_4, table);
inline vpternlogq64 (zmm11_5, zmm6_5, zmm1_5, table);
inline vpternlogq64 (zmm11_6, zmm6_6, zmm1_6, table);
inline vpternlogq64 (zmm11_7, zmm6_7, zmm1_7, table);
(* vpternlogq $0xd2,%zmm30,%zmm1,%zmm6             #! PC = 0x55555558d22f *)
mov table 0xd2@uint8;
inline vpternlogq64 (zmm6_0, zmm1_0, zmm30_0, table);
inline vpternlogq64 (zmm6_1, zmm1_1, zmm30_1, table);
inline vpternlogq64 (zmm6_2, zmm1_2, zmm30_2, table);
inline vpternlogq64 (zmm6_3, zmm1_3, zmm30_3, table);
inline vpternlogq64 (zmm6_4, zmm1_4, zmm30_4, table);
inline vpternlogq64 (zmm6_5, zmm1_5, zmm30_5, table);
inline vpternlogq64 (zmm6_6, zmm1_6, zmm30_6, table);
inline vpternlogq64 (zmm6_7, zmm1_7, zmm30_7, table);
(* vpternlogq $0xd2,%zmm23,%zmm30,%zmm1            #! PC = 0x55555558d236 *)
mov table 0xd2@uint8;
inline vpternlogq64 (zmm1_0, zmm30_0, zmm23_0, table);
inline vpternlogq64 (zmm1_1, zmm30_1, zmm23_1, table);
inline vpternlogq64 (zmm1_2, zmm30_2, zmm23_2, table);
inline vpternlogq64 (zmm1_3, zmm30_3, zmm23_3, table);
inline vpternlogq64 (zmm1_4, zmm30_4, zmm23_4, table);
inline vpternlogq64 (zmm1_5, zmm30_5, zmm23_5, table);
inline vpternlogq64 (zmm1_6, zmm30_6, zmm23_6, table);
inline vpternlogq64 (zmm1_7, zmm30_7, zmm23_7, table);
(* vmovdqa64 %zmm12,%zmm30                         #! PC = 0x55555558d23d *)
mov zmm30_0 zmm12_0;
mov zmm30_1 zmm12_1;
mov zmm30_2 zmm12_2;
mov zmm30_3 zmm12_3;
mov zmm30_4 zmm12_4;
mov zmm30_5 zmm12_5;
mov zmm30_6 zmm12_6;
mov zmm30_7 zmm12_7;
(* vpternlogq $0xd2,%zmm5,%zmm22,%zmm30            #! PC = 0x55555558d243 *)
mov table 0xd2@uint8;
inline vpternlogq64 (zmm30_0, zmm22_0, zmm5_0, table);
inline vpternlogq64 (zmm30_1, zmm22_1, zmm5_1, table);
inline vpternlogq64 (zmm30_2, zmm22_2, zmm5_2, table);
inline vpternlogq64 (zmm30_3, zmm22_3, zmm5_3, table);
inline vpternlogq64 (zmm30_4, zmm22_4, zmm5_4, table);
inline vpternlogq64 (zmm30_5, zmm22_5, zmm5_5, table);
inline vpternlogq64 (zmm30_6, zmm22_6, zmm5_6, table);
inline vpternlogq64 (zmm30_7, zmm22_7, zmm5_7, table);
(* vpternlogq $0xd2,%zmm22,%zmm12,%zmm19           #! PC = 0x55555558d24a *)
mov table 0xd2@uint8;
inline vpternlogq64 (zmm19_0, zmm12_0, zmm22_0, table);
inline vpternlogq64 (zmm19_1, zmm12_1, zmm22_1, table);
inline vpternlogq64 (zmm19_2, zmm12_2, zmm22_2, table);
inline vpternlogq64 (zmm19_3, zmm12_3, zmm22_3, table);
inline vpternlogq64 (zmm19_4, zmm12_4, zmm22_4, table);
inline vpternlogq64 (zmm19_5, zmm12_5, zmm22_5, table);
inline vpternlogq64 (zmm19_6, zmm12_6, zmm22_6, table);
inline vpternlogq64 (zmm19_7, zmm12_7, zmm22_7, table);
(* vpternlogq $0xd2,%zmm29,%zmm5,%zmm22            #! PC = 0x55555558d251 *)
mov table 0xd2@uint8;
inline vpternlogq64 (zmm22_0, zmm5_0, zmm29_0, table);
inline vpternlogq64 (zmm22_1, zmm5_1, zmm29_1, table);
inline vpternlogq64 (zmm22_2, zmm5_2, zmm29_2, table);
inline vpternlogq64 (zmm22_3, zmm5_3, zmm29_3, table);
inline vpternlogq64 (zmm22_4, zmm5_4, zmm29_4, table);
inline vpternlogq64 (zmm22_5, zmm5_5, zmm29_5, table);
inline vpternlogq64 (zmm22_6, zmm5_6, zmm29_6, table);
inline vpternlogq64 (zmm22_7, zmm5_7, zmm29_7, table);
(* vmovdqa64 %zmm22,%zmm18                         #! PC = 0x55555558d258 *)
mov zmm18_0 zmm22_0;
mov zmm18_1 zmm22_1;
mov zmm18_2 zmm22_2;
mov zmm18_3 zmm22_3;
mov zmm18_4 zmm22_4;
mov zmm18_5 zmm22_5;
mov zmm18_6 zmm22_6;
mov zmm18_7 zmm22_7;
(* vpternlogq $0x96,%zmm4,%zmm3,%zmm18             #! PC = 0x55555558d25e *)
mov table 0x96@uint8;
inline vpternlogq64 (zmm18_0, zmm3_0, zmm4_0, table);
inline vpternlogq64 (zmm18_1, zmm3_1, zmm4_1, table);
inline vpternlogq64 (zmm18_2, zmm3_2, zmm4_2, table);
inline vpternlogq64 (zmm18_3, zmm3_3, zmm4_3, table);
inline vpternlogq64 (zmm18_4, zmm3_4, zmm4_4, table);
inline vpternlogq64 (zmm18_5, zmm3_5, zmm4_5, table);
inline vpternlogq64 (zmm18_6, zmm3_6, zmm4_6, table);
inline vpternlogq64 (zmm18_7, zmm3_7, zmm4_7, table);
(* vpternlogq $0x96,%zmm8,%zmm11,%zmm18            #! PC = 0x55555558d265 *)
mov table 0x96@uint8;
inline vpternlogq64 (zmm18_0, zmm11_0, zmm8_0, table);
inline vpternlogq64 (zmm18_1, zmm11_1, zmm8_1, table);
inline vpternlogq64 (zmm18_2, zmm11_2, zmm8_2, table);
inline vpternlogq64 (zmm18_3, zmm11_3, zmm8_3, table);
inline vpternlogq64 (zmm18_4, zmm11_4, zmm8_4, table);
inline vpternlogq64 (zmm18_5, zmm11_5, zmm8_5, table);
inline vpternlogq64 (zmm18_6, zmm11_6, zmm8_6, table);
inline vpternlogq64 (zmm18_7, zmm11_7, zmm8_7, table);
(* vpternlogq $0xd2,%zmm10,%zmm29,%zmm5            #! PC = 0x55555558d26c *)
mov table 0xd2@uint8;
inline vpternlogq64 (zmm5_0, zmm29_0, zmm10_0, table);
inline vpternlogq64 (zmm5_1, zmm29_1, zmm10_1, table);
inline vpternlogq64 (zmm5_2, zmm29_2, zmm10_2, table);
inline vpternlogq64 (zmm5_3, zmm29_3, zmm10_3, table);
inline vpternlogq64 (zmm5_4, zmm29_4, zmm10_4, table);
inline vpternlogq64 (zmm5_5, zmm29_5, zmm10_5, table);
inline vpternlogq64 (zmm5_6, zmm29_6, zmm10_6, table);
inline vpternlogq64 (zmm5_7, zmm29_7, zmm10_7, table);
(* vpternlogq $0xd2,%zmm12,%zmm10,%zmm29           #! PC = 0x55555558d273 *)
mov table 0xd2@uint8;
inline vpternlogq64 (zmm29_0, zmm10_0, zmm12_0, table);
inline vpternlogq64 (zmm29_1, zmm10_1, zmm12_1, table);
inline vpternlogq64 (zmm29_2, zmm10_2, zmm12_2, table);
inline vpternlogq64 (zmm29_3, zmm10_3, zmm12_3, table);
inline vpternlogq64 (zmm29_4, zmm10_4, zmm12_4, table);
inline vpternlogq64 (zmm29_5, zmm10_5, zmm12_5, table);
inline vpternlogq64 (zmm29_6, zmm10_6, zmm12_6, table);
inline vpternlogq64 (zmm29_7, zmm10_7, zmm12_7, table);
(* vprolq $0x1,%zmm18,%zmm12                       #! PC = 0x55555558d27a *)
rol zmm12_0 zmm18_0 0x1;
rol zmm12_1 zmm18_1 0x1;
rol zmm12_2 zmm18_2 0x1;
rol zmm12_3 zmm18_3 0x1;
rol zmm12_4 zmm18_4 0x1;
rol zmm12_5 zmm18_5 0x1;
rol zmm12_6 zmm18_6 0x1;
rol zmm12_7 zmm18_7 0x1;
(* vmovdqa64 %zmm27,%zmm23                         #! PC = 0x55555558d281 *)
mov zmm23_0 zmm27_0;
mov zmm23_1 zmm27_1;
mov zmm23_2 zmm27_2;
mov zmm23_3 zmm27_3;
mov zmm23_4 zmm27_4;
mov zmm23_5 zmm27_5;
mov zmm23_6 zmm27_6;
mov zmm23_7 zmm27_7;
(* vpternlogq $0x96,%zmm2,%zmm5,%zmm23             #! PC = 0x55555558d287 *)
mov table 0x96@uint8;
inline vpternlogq64 (zmm23_0, zmm5_0, zmm2_0, table);
inline vpternlogq64 (zmm23_1, zmm5_1, zmm2_1, table);
inline vpternlogq64 (zmm23_2, zmm5_2, zmm2_2, table);
inline vpternlogq64 (zmm23_3, zmm5_3, zmm2_3, table);
inline vpternlogq64 (zmm23_4, zmm5_4, zmm2_4, table);
inline vpternlogq64 (zmm23_5, zmm5_5, zmm2_5, table);
inline vpternlogq64 (zmm23_6, zmm5_6, zmm2_6, table);
inline vpternlogq64 (zmm23_7, zmm5_7, zmm2_7, table);
(* vpternlogq $0x96,%zmm6,%zmm7,%zmm23             #! PC = 0x55555558d28e *)
mov table 0x96@uint8;
inline vpternlogq64 (zmm23_0, zmm7_0, zmm6_0, table);
inline vpternlogq64 (zmm23_1, zmm7_1, zmm6_1, table);
inline vpternlogq64 (zmm23_2, zmm7_2, zmm6_2, table);
inline vpternlogq64 (zmm23_3, zmm7_3, zmm6_3, table);
inline vpternlogq64 (zmm23_4, zmm7_4, zmm6_4, table);
inline vpternlogq64 (zmm23_5, zmm7_5, zmm6_5, table);
inline vpternlogq64 (zmm23_6, zmm7_6, zmm6_6, table);
inline vpternlogq64 (zmm23_7, zmm7_7, zmm6_7, table);
(* vmovdqa64 %zmm1,%zmm24                          #! PC = 0x55555558d295 *)
mov zmm24_0 zmm1_0;
mov zmm24_1 zmm1_1;
mov zmm24_2 zmm1_2;
mov zmm24_3 zmm1_3;
mov zmm24_4 zmm1_4;
mov zmm24_5 zmm1_5;
mov zmm24_6 zmm1_6;
mov zmm24_7 zmm1_7;
(* vpternlogq $0x96,%zmm29,%zmm13,%zmm24           #! PC = 0x55555558d29b *)
mov table 0x96@uint8;
inline vpternlogq64 (zmm24_0, zmm13_0, zmm29_0, table);
inline vpternlogq64 (zmm24_1, zmm13_1, zmm29_1, table);
inline vpternlogq64 (zmm24_2, zmm13_2, zmm29_2, table);
inline vpternlogq64 (zmm24_3, zmm13_3, zmm29_3, table);
inline vpternlogq64 (zmm24_4, zmm13_4, zmm29_4, table);
inline vpternlogq64 (zmm24_5, zmm13_5, zmm29_5, table);
inline vpternlogq64 (zmm24_6, zmm13_6, zmm29_6, table);
inline vpternlogq64 (zmm24_7, zmm13_7, zmm29_7, table);
(* vmovdqa64 %zmm12,0x148(%rsp)                    #! EA = L0x7fffffffd600; PC = 0x55555558d2a2 *)
mov L0x7fffffffd600 zmm12_0;
mov L0x7fffffffd608 zmm12_1;
mov L0x7fffffffd610 zmm12_2;
mov L0x7fffffffd618 zmm12_3;
mov L0x7fffffffd620 zmm12_4;
mov L0x7fffffffd628 zmm12_5;
mov L0x7fffffffd630 zmm12_6;
mov L0x7fffffffd638 zmm12_7;
(* vprolq $0x1,%zmm23,%zmm12                       #! PC = 0x55555558d2ad *)
rol zmm12_0 zmm23_0 0x1;
rol zmm12_1 zmm23_1 0x1;
rol zmm12_2 zmm23_2 0x1;
rol zmm12_3 zmm23_3 0x1;
rol zmm12_4 zmm23_4 0x1;
rol zmm12_5 zmm23_5 0x1;
rol zmm12_6 zmm23_6 0x1;
rol zmm12_7 zmm23_7 0x1;
(* vpternlogq $0x96,%zmm14,%zmm16,%zmm24           #! PC = 0x55555558d2b4 *)
mov table 0x96@uint8;
inline vpternlogq64 (zmm24_0, zmm16_0, zmm14_0, table);
inline vpternlogq64 (zmm24_1, zmm16_1, zmm14_1, table);
inline vpternlogq64 (zmm24_2, zmm16_2, zmm14_2, table);
inline vpternlogq64 (zmm24_3, zmm16_3, zmm14_3, table);
inline vpternlogq64 (zmm24_4, zmm16_4, zmm14_4, table);
inline vpternlogq64 (zmm24_5, zmm16_5, zmm14_5, table);
inline vpternlogq64 (zmm24_6, zmm16_6, zmm14_6, table);
inline vpternlogq64 (zmm24_7, zmm16_7, zmm14_7, table);
(* vmovdqa64 %zmm25,%zmm10                         #! PC = 0x55555558d2bb *)
mov zmm10_0 zmm25_0;
mov zmm10_1 zmm25_1;
mov zmm10_2 zmm25_2;
mov zmm10_3 zmm25_3;
mov zmm10_4 zmm25_4;
mov zmm10_5 zmm25_5;
mov zmm10_6 zmm25_6;
mov zmm10_7 zmm25_7;
(* vpternlogq $0x96,%zmm21,%zmm31,%zmm10           #! PC = 0x55555558d2c1 *)
mov table 0x96@uint8;
inline vpternlogq64 (zmm10_0, zmm31_0, zmm21_0, table);
inline vpternlogq64 (zmm10_1, zmm31_1, zmm21_1, table);
inline vpternlogq64 (zmm10_2, zmm31_2, zmm21_2, table);
inline vpternlogq64 (zmm10_3, zmm31_3, zmm21_3, table);
inline vpternlogq64 (zmm10_4, zmm31_4, zmm21_4, table);
inline vpternlogq64 (zmm10_5, zmm31_5, zmm21_5, table);
inline vpternlogq64 (zmm10_6, zmm31_6, zmm21_6, table);
inline vpternlogq64 (zmm10_7, zmm31_7, zmm21_7, table);
(* vpternlogq $0x96,%zmm15,%zmm19,%zmm10           #! PC = 0x55555558d2c8 *)
mov table 0x96@uint8;
inline vpternlogq64 (zmm10_0, zmm19_0, zmm15_0, table);
inline vpternlogq64 (zmm10_1, zmm19_1, zmm15_1, table);
inline vpternlogq64 (zmm10_2, zmm19_2, zmm15_2, table);
inline vpternlogq64 (zmm10_3, zmm19_3, zmm15_3, table);
inline vpternlogq64 (zmm10_4, zmm19_4, zmm15_4, table);
inline vpternlogq64 (zmm10_5, zmm19_5, zmm15_5, table);
inline vpternlogq64 (zmm10_6, zmm19_6, zmm15_6, table);
inline vpternlogq64 (zmm10_7, zmm19_7, zmm15_7, table);
(* vmovdqa64 %zmm9,%zmm17                          #! PC = 0x55555558d2cf *)
mov zmm17_0 zmm9_0;
mov zmm17_1 zmm9_1;
mov zmm17_2 zmm9_2;
mov zmm17_3 zmm9_3;
mov zmm17_4 zmm9_4;
mov zmm17_5 zmm9_5;
mov zmm17_6 zmm9_6;
mov zmm17_7 zmm9_7;
(* vmovdqa64 %zmm12,0x108(%rsp)                    #! EA = L0x7fffffffd5c0; PC = 0x55555558d2d5 *)
mov L0x7fffffffd5c0 zmm12_0;
mov L0x7fffffffd5c8 zmm12_1;
mov L0x7fffffffd5d0 zmm12_2;
mov L0x7fffffffd5d8 zmm12_3;
mov L0x7fffffffd5e0 zmm12_4;
mov L0x7fffffffd5e8 zmm12_5;
mov L0x7fffffffd5f0 zmm12_6;
mov L0x7fffffffd5f8 zmm12_7;
(* vprolq $0x1,%zmm24,%zmm12                       #! PC = 0x55555558d2e0 *)
rol zmm12_0 zmm24_0 0x1;
rol zmm12_1 zmm24_1 0x1;
rol zmm12_2 zmm24_2 0x1;
rol zmm12_3 zmm24_3 0x1;
rol zmm12_4 zmm24_4 0x1;
rol zmm12_5 zmm24_5 0x1;
rol zmm12_6 zmm24_6 0x1;
rol zmm12_7 zmm24_7 0x1;
(* vpternlogq $0x96,%zmm20,%zmm28,%zmm17           #! PC = 0x55555558d2e7 *)
mov table 0x96@uint8;
inline vpternlogq64 (zmm17_0, zmm28_0, zmm20_0, table);
inline vpternlogq64 (zmm17_1, zmm28_1, zmm20_1, table);
inline vpternlogq64 (zmm17_2, zmm28_2, zmm20_2, table);
inline vpternlogq64 (zmm17_3, zmm28_3, zmm20_3, table);
inline vpternlogq64 (zmm17_4, zmm28_4, zmm20_4, table);
inline vpternlogq64 (zmm17_5, zmm28_5, zmm20_5, table);
inline vpternlogq64 (zmm17_6, zmm28_6, zmm20_6, table);
inline vpternlogq64 (zmm17_7, zmm28_7, zmm20_7, table);
(* vpternlogq $0x96,%zmm30,%zmm26,%zmm17           #! PC = 0x55555558d2ee *)
mov table 0x96@uint8;
inline vpternlogq64 (zmm17_0, zmm26_0, zmm30_0, table);
inline vpternlogq64 (zmm17_1, zmm26_1, zmm30_1, table);
inline vpternlogq64 (zmm17_2, zmm26_2, zmm30_2, table);
inline vpternlogq64 (zmm17_3, zmm26_3, zmm30_3, table);
inline vpternlogq64 (zmm17_4, zmm26_4, zmm30_4, table);
inline vpternlogq64 (zmm17_5, zmm26_5, zmm30_5, table);
inline vpternlogq64 (zmm17_6, zmm26_6, zmm30_6, table);
inline vpternlogq64 (zmm17_7, zmm26_7, zmm30_7, table);
(* vprolq $0x1,%zmm17,%zmm0                        #! PC = 0x55555558d2f5 *)
rol zmm0_0 zmm17_0 0x1;
rol zmm0_1 zmm17_1 0x1;
rol zmm0_2 zmm17_2 0x1;
rol zmm0_3 zmm17_3 0x1;
rol zmm0_4 zmm17_4 0x1;
rol zmm0_5 zmm17_5 0x1;
rol zmm0_6 zmm17_6 0x1;
rol zmm0_7 zmm17_7 0x1;
(* vpxord 0x108(%rsp),%zmm17,%zmm17                #! EA = L0x7fffffffd5c0; Value = 0x247e0a72124dfe1c; PC = 0x55555558d2fc *)
xor zmm17_0@uint64 zmm17_0 L0x7fffffffd5c0;
xor zmm17_1@uint64 zmm17_1 L0x7fffffffd5c8;
xor zmm17_2@uint64 zmm17_2 L0x7fffffffd5d0;
xor zmm17_3@uint64 zmm17_3 L0x7fffffffd5d8;
xor zmm17_4@uint64 zmm17_4 L0x7fffffffd5e0;
xor zmm17_5@uint64 zmm17_5 L0x7fffffffd5e8;
xor zmm17_6@uint64 zmm17_6 L0x7fffffffd5f0;
xor zmm17_7@uint64 zmm17_7 L0x7fffffffd5f8;
(* mov    $0x8000808b,%esi                         #! PC = 0x55555558d307 *)
mov rsi 0x8000808b@uint64;
(* vmovdqa64 %zmm12,0xc8(%rsp)                     #! EA = L0x7fffffffd580; PC = 0x55555558d30c *)
mov L0x7fffffffd580 zmm12_0;
mov L0x7fffffffd588 zmm12_1;
mov L0x7fffffffd590 zmm12_2;
mov L0x7fffffffd598 zmm12_3;
mov L0x7fffffffd5a0 zmm12_4;
mov L0x7fffffffd5a8 zmm12_5;
mov L0x7fffffffd5b0 zmm12_6;
mov L0x7fffffffd5b8 zmm12_7;
(* vprolq $0x1,%zmm10,%zmm12                       #! PC = 0x55555558d317 *)
rol zmm12_0 zmm10_0 0x1;
rol zmm12_1 zmm10_1 0x1;
rol zmm12_2 zmm10_2 0x1;
rol zmm12_3 zmm10_3 0x1;
rol zmm12_4 zmm10_4 0x1;
rol zmm12_5 zmm10_5 0x1;
rol zmm12_6 zmm10_6 0x1;
rol zmm12_7 zmm10_7 0x1;
(* vpxord 0x148(%rsp),%zmm10,%zmm10                #! EA = L0x7fffffffd600; Value = 0x8b2de85488cbe5bf; PC = 0x55555558d31e *)
xor zmm10_0@uint64 zmm10_0 L0x7fffffffd600;
xor zmm10_1@uint64 zmm10_1 L0x7fffffffd608;
xor zmm10_2@uint64 zmm10_2 L0x7fffffffd610;
xor zmm10_3@uint64 zmm10_3 L0x7fffffffd618;
xor zmm10_4@uint64 zmm10_4 L0x7fffffffd620;
xor zmm10_5@uint64 zmm10_5 L0x7fffffffd628;
xor zmm10_6@uint64 zmm10_6 L0x7fffffffd630;
xor zmm10_7@uint64 zmm10_7 L0x7fffffffd638;
(* vpxord 0xc8(%rsp),%zmm18,%zmm18                 #! EA = L0x7fffffffd580; Value = 0xf70f574d9f2e0b71; PC = 0x55555558d329 *)
xor zmm18_0@uint64 zmm18_0 L0x7fffffffd580;
xor zmm18_1@uint64 zmm18_1 L0x7fffffffd588;
xor zmm18_2@uint64 zmm18_2 L0x7fffffffd590;
xor zmm18_3@uint64 zmm18_3 L0x7fffffffd598;
xor zmm18_4@uint64 zmm18_4 L0x7fffffffd5a0;
xor zmm18_5@uint64 zmm18_5 L0x7fffffffd5a8;
xor zmm18_6@uint64 zmm18_6 L0x7fffffffd5b0;
xor zmm18_7@uint64 zmm18_7 L0x7fffffffd5b8;
(* vpxord %zmm26,%zmm10,%zmm26                     #! PC = 0x55555558d334 *)
xor zmm26_0@uint64 zmm10_0 zmm26_0;
xor zmm26_1@uint64 zmm10_1 zmm26_1;
xor zmm26_2@uint64 zmm10_2 zmm26_2;
xor zmm26_3@uint64 zmm10_3 zmm26_3;
xor zmm26_4@uint64 zmm10_4 zmm26_4;
xor zmm26_5@uint64 zmm10_5 zmm26_5;
xor zmm26_6@uint64 zmm10_6 zmm26_6;
xor zmm26_7@uint64 zmm10_7 zmm26_7;
(* vprorq $0x14,%zmm26,%zmm26                      #! PC = 0x55555558d33a *)
ror zmm26_0 zmm26_0 0x14;
ror zmm26_1 zmm26_1 0x14;
ror zmm26_2 zmm26_2 0x14;
ror zmm26_3 zmm26_3 0x14;
ror zmm26_4 zmm26_4 0x14;
ror zmm26_5 zmm26_5 0x14;
ror zmm26_6 zmm26_6 0x14;
ror zmm26_7 zmm26_7 0x14;
(* vpxord %zmm3,%zmm17,%zmm3                       #! PC = 0x55555558d341 *)
xor zmm3_0@uint64 zmm17_0 zmm3_0;
xor zmm3_1@uint64 zmm17_1 zmm3_1;
xor zmm3_2@uint64 zmm17_2 zmm3_2;
xor zmm3_3@uint64 zmm17_3 zmm3_3;
xor zmm3_4@uint64 zmm17_4 zmm3_4;
xor zmm3_5@uint64 zmm17_5 zmm3_5;
xor zmm3_6@uint64 zmm17_6 zmm3_6;
xor zmm3_7@uint64 zmm17_7 zmm3_7;
(* vpxord %zmm23,%zmm12,%zmm12                     #! PC = 0x55555558d347 *)
xor zmm12_0@uint64 zmm12_0 zmm23_0;
xor zmm12_1@uint64 zmm12_1 zmm23_1;
xor zmm12_2@uint64 zmm12_2 zmm23_2;
xor zmm12_3@uint64 zmm12_3 zmm23_3;
xor zmm12_4@uint64 zmm12_4 zmm23_4;
xor zmm12_5@uint64 zmm12_5 zmm23_5;
xor zmm12_6@uint64 zmm12_6 zmm23_6;
xor zmm12_7@uint64 zmm12_7 zmm23_7;
(* vpxord %zmm6,%zmm18,%zmm6                       #! PC = 0x55555558d34d *)
xor zmm6_0@uint64 zmm18_0 zmm6_0;
xor zmm6_1@uint64 zmm18_1 zmm6_1;
xor zmm6_2@uint64 zmm18_2 zmm6_2;
xor zmm6_3@uint64 zmm18_3 zmm6_3;
xor zmm6_4@uint64 zmm18_4 zmm6_4;
xor zmm6_5@uint64 zmm18_5 zmm6_5;
xor zmm6_6@uint64 zmm18_6 zmm6_6;
xor zmm6_7@uint64 zmm18_7 zmm6_7;
(* vpxord %zmm29,%zmm12,%zmm29                     #! PC = 0x55555558d353 *)
xor zmm29_0@uint64 zmm12_0 zmm29_0;
xor zmm29_1@uint64 zmm12_1 zmm29_1;
xor zmm29_2@uint64 zmm12_2 zmm29_2;
xor zmm29_3@uint64 zmm12_3 zmm29_3;
xor zmm29_4@uint64 zmm12_4 zmm29_4;
xor zmm29_5@uint64 zmm12_5 zmm29_5;
xor zmm29_6@uint64 zmm12_6 zmm29_6;
xor zmm29_7@uint64 zmm12_7 zmm29_7;
(* vpxord %zmm24,%zmm0,%zmm0                       #! PC = 0x55555558d359 *)
xor zmm0_0@uint64 zmm0_0 zmm24_0;
xor zmm0_1@uint64 zmm0_1 zmm24_1;
xor zmm0_2@uint64 zmm0_2 zmm24_2;
xor zmm0_3@uint64 zmm0_3 zmm24_3;
xor zmm0_4@uint64 zmm0_4 zmm24_4;
xor zmm0_5@uint64 zmm0_5 zmm24_5;
xor zmm0_6@uint64 zmm0_6 zmm24_6;
xor zmm0_7@uint64 zmm0_7 zmm24_7;
(* vprorq $0x15,%zmm3,%zmm3                        #! PC = 0x55555558d35f *)
ror zmm3_0 zmm3_0 0x15;
ror zmm3_1 zmm3_1 0x15;
ror zmm3_2 zmm3_2 0x15;
ror zmm3_3 zmm3_3 0x15;
ror zmm3_4 zmm3_4 0x15;
ror zmm3_5 zmm3_5 0x15;
ror zmm3_6 zmm3_6 0x15;
ror zmm3_7 zmm3_7 0x15;
(* vprolq $0x15,%zmm6,%zmm6                        #! PC = 0x55555558d366 *)
rol zmm6_0 zmm6_0 0x15;
rol zmm6_1 zmm6_1 0x15;
rol zmm6_2 zmm6_2 0x15;
rol zmm6_3 zmm6_3 0x15;
rol zmm6_4 zmm6_4 0x15;
rol zmm6_5 zmm6_5 0x15;
rol zmm6_6 zmm6_6 0x15;
rol zmm6_7 zmm6_7 0x15;
(* vprolq $0xe,%zmm29,%zmm29                       #! PC = 0x55555558d36d *)
rol zmm29_0 zmm29_0 0xe;
rol zmm29_1 zmm29_1 0xe;
rol zmm29_2 zmm29_2 0xe;
rol zmm29_3 zmm29_3 0xe;
rol zmm29_4 zmm29_4 0xe;
rol zmm29_5 zmm29_5 0xe;
rol zmm29_6 zmm29_6 0xe;
rol zmm29_7 zmm29_7 0xe;
(* vpxord %zmm7,%zmm18,%zmm7                       #! PC = 0x55555558d374 *)
xor zmm7_0@uint64 zmm18_0 zmm7_0;
xor zmm7_1@uint64 zmm18_1 zmm7_1;
xor zmm7_2@uint64 zmm18_2 zmm7_2;
xor zmm7_3@uint64 zmm18_3 zmm7_3;
xor zmm7_4@uint64 zmm18_4 zmm7_4;
xor zmm7_5@uint64 zmm18_5 zmm7_5;
xor zmm7_6@uint64 zmm18_6 zmm7_6;
xor zmm7_7@uint64 zmm18_7 zmm7_7;
(* vpxord %zmm13,%zmm12,%zmm13                     #! PC = 0x55555558d37a *)
xor zmm13_0@uint64 zmm12_0 zmm13_0;
xor zmm13_1@uint64 zmm12_1 zmm13_1;
xor zmm13_2@uint64 zmm12_2 zmm13_2;
xor zmm13_3@uint64 zmm12_3 zmm13_3;
xor zmm13_4@uint64 zmm12_4 zmm13_4;
xor zmm13_5@uint64 zmm12_5 zmm13_5;
xor zmm13_6@uint64 zmm12_6 zmm13_6;
xor zmm13_7@uint64 zmm12_7 zmm13_7;
(* vprolq $0x1c,%zmm7,%zmm7                        #! PC = 0x55555558d380 *)
rol zmm7_0 zmm7_0 0x1c;
rol zmm7_1 zmm7_1 0x1c;
rol zmm7_2 zmm7_2 0x1c;
rol zmm7_3 zmm7_3 0x1c;
rol zmm7_4 zmm7_4 0x1c;
rol zmm7_5 zmm7_5 0x1c;
rol zmm7_6 zmm7_6 0x1c;
rol zmm7_7 zmm7_7 0x1c;
(* vprolq $0x14,%zmm13,%zmm13                      #! PC = 0x55555558d387 *)
rol zmm13_0 zmm13_0 0x14;
rol zmm13_1 zmm13_1 0x14;
rol zmm13_2 zmm13_2 0x14;
rol zmm13_3 zmm13_3 0x14;
rol zmm13_4 zmm13_4 0x14;
rol zmm13_5 zmm13_5 0x14;
rol zmm13_6 zmm13_6 0x14;
rol zmm13_7 zmm13_7 0x14;
(* vpxord %zmm15,%zmm0,%zmm15                      #! PC = 0x55555558d38e *)
xor zmm15_0@uint64 zmm0_0 zmm15_0;
xor zmm15_1@uint64 zmm0_1 zmm15_1;
xor zmm15_2@uint64 zmm0_2 zmm15_2;
xor zmm15_3@uint64 zmm0_3 zmm15_3;
xor zmm15_4@uint64 zmm0_4 zmm15_4;
xor zmm15_5@uint64 zmm0_5 zmm15_5;
xor zmm15_6@uint64 zmm0_6 zmm15_6;
xor zmm15_7@uint64 zmm0_7 zmm15_7;
(* vpxord %zmm20,%zmm10,%zmm20                     #! PC = 0x55555558d394 *)
xor zmm20_0@uint64 zmm10_0 zmm20_0;
xor zmm20_1@uint64 zmm10_1 zmm20_1;
xor zmm20_2@uint64 zmm10_2 zmm20_2;
xor zmm20_3@uint64 zmm10_3 zmm20_3;
xor zmm20_4@uint64 zmm10_4 zmm20_4;
xor zmm20_5@uint64 zmm10_5 zmm20_5;
xor zmm20_6@uint64 zmm10_6 zmm20_6;
xor zmm20_7@uint64 zmm10_7 zmm20_7;
(* vpxord %zmm22,%zmm17,%zmm22                     #! PC = 0x55555558d39a *)
xor zmm22_0@uint64 zmm17_0 zmm22_0;
xor zmm22_1@uint64 zmm17_1 zmm22_1;
xor zmm22_2@uint64 zmm17_2 zmm22_2;
xor zmm22_3@uint64 zmm17_3 zmm22_3;
xor zmm22_4@uint64 zmm17_4 zmm22_4;
xor zmm22_5@uint64 zmm17_5 zmm22_5;
xor zmm22_6@uint64 zmm17_6 zmm22_6;
xor zmm22_7@uint64 zmm17_7 zmm22_7;
(* vpxord %zmm28,%zmm10,%zmm28                     #! PC = 0x55555558d3a0 *)
xor zmm28_0@uint64 zmm10_0 zmm28_0;
xor zmm28_1@uint64 zmm10_1 zmm28_1;
xor zmm28_2@uint64 zmm10_2 zmm28_2;
xor zmm28_3@uint64 zmm10_3 zmm28_3;
xor zmm28_4@uint64 zmm10_4 zmm28_4;
xor zmm28_5@uint64 zmm10_5 zmm28_5;
xor zmm28_6@uint64 zmm10_6 zmm28_6;
xor zmm28_7@uint64 zmm10_7 zmm28_7;
(* vpxord %zmm8,%zmm17,%zmm8                       #! PC = 0x55555558d3a6 *)
xor zmm8_0@uint64 zmm17_0 zmm8_0;
xor zmm8_1@uint64 zmm17_1 zmm8_1;
xor zmm8_2@uint64 zmm17_2 zmm8_2;
xor zmm8_3@uint64 zmm17_3 zmm8_3;
xor zmm8_4@uint64 zmm17_4 zmm8_4;
xor zmm8_5@uint64 zmm17_5 zmm8_5;
xor zmm8_6@uint64 zmm17_6 zmm8_6;
xor zmm8_7@uint64 zmm17_7 zmm8_7;
(* vprolq $0x1,%zmm28,%zmm28                       #! PC = 0x55555558d3ac *)
rol zmm28_0 zmm28_0 0x1;
rol zmm28_1 zmm28_1 0x1;
rol zmm28_2 zmm28_2 0x1;
rol zmm28_3 zmm28_3 0x1;
rol zmm28_4 zmm28_4 0x1;
rol zmm28_5 zmm28_5 0x1;
rol zmm28_6 zmm28_6 0x1;
rol zmm28_7 zmm28_7 0x1;
(* vprolq $0x6,%zmm8,%zmm8                         #! PC = 0x55555558d3b3 *)
rol zmm8_0 zmm8_0 0x6;
rol zmm8_1 zmm8_1 0x6;
rol zmm8_2 zmm8_2 0x6;
rol zmm8_3 zmm8_3 0x6;
rol zmm8_4 zmm8_4 0x6;
rol zmm8_5 zmm8_5 0x6;
rol zmm8_6 zmm8_6 0x6;
rol zmm8_7 zmm8_7 0x6;
(* vprolq $0x3,%zmm15,%zmm15                       #! PC = 0x55555558d3ba *)
rol zmm15_0 zmm15_0 0x3;
rol zmm15_1 zmm15_1 0x3;
rol zmm15_2 zmm15_2 0x3;
rol zmm15_3 zmm15_3 0x3;
rol zmm15_4 zmm15_4 0x3;
rol zmm15_5 zmm15_5 0x3;
rol zmm15_6 zmm15_6 0x3;
rol zmm15_7 zmm15_7 0x3;
(* vprorq $0x13,%zmm20,%zmm20                      #! PC = 0x55555558d3c1 *)
ror zmm20_0 zmm20_0 0x13;
ror zmm20_1 zmm20_1 0x13;
ror zmm20_2 zmm20_2 0x13;
ror zmm20_3 zmm20_3 0x13;
ror zmm20_4 zmm20_4 0x13;
ror zmm20_5 zmm20_5 0x13;
ror zmm20_6 zmm20_6 0x13;
ror zmm20_7 zmm20_7 0x13;
(* vprorq $0x3,%zmm22,%zmm22                       #! PC = 0x55555558d3c8 *)
ror zmm22_0 zmm22_0 0x3;
ror zmm22_1 zmm22_1 0x3;
ror zmm22_2 zmm22_2 0x3;
ror zmm22_3 zmm22_3 0x3;
ror zmm22_4 zmm22_4 0x3;
ror zmm22_5 zmm22_5 0x3;
ror zmm22_6 zmm22_6 0x3;
ror zmm22_7 zmm22_7 0x3;
(* vpxord %zmm19,%zmm0,%zmm19                      #! PC = 0x55555558d3cf *)
xor zmm19_0@uint64 zmm0_0 zmm19_0;
xor zmm19_1@uint64 zmm0_1 zmm19_1;
xor zmm19_2@uint64 zmm0_2 zmm19_2;
xor zmm19_3@uint64 zmm0_3 zmm19_3;
xor zmm19_4@uint64 zmm0_4 zmm19_4;
xor zmm19_5@uint64 zmm0_5 zmm19_5;
xor zmm19_6@uint64 zmm0_6 zmm19_6;
xor zmm19_7@uint64 zmm0_7 zmm19_7;
(* vpxord %zmm2,%zmm18,%zmm2                       #! PC = 0x55555558d3d5 *)
xor zmm2_0@uint64 zmm18_0 zmm2_0;
xor zmm2_1@uint64 zmm18_1 zmm2_1;
xor zmm2_2@uint64 zmm18_2 zmm2_2;
xor zmm2_3@uint64 zmm18_3 zmm2_3;
xor zmm2_4@uint64 zmm18_4 zmm2_4;
xor zmm2_5@uint64 zmm18_5 zmm2_5;
xor zmm2_6@uint64 zmm18_6 zmm2_6;
xor zmm2_7@uint64 zmm18_7 zmm2_7;
(* vpxord %zmm1,%zmm12,%zmm1                       #! PC = 0x55555558d3db *)
xor zmm1_0@uint64 zmm12_0 zmm1_0;
xor zmm1_1@uint64 zmm12_1 zmm1_1;
xor zmm1_2@uint64 zmm12_2 zmm1_2;
xor zmm1_3@uint64 zmm12_3 zmm1_3;
xor zmm1_4@uint64 zmm12_4 zmm1_4;
xor zmm1_5@uint64 zmm12_5 zmm1_5;
xor zmm1_6@uint64 zmm12_6 zmm1_6;
xor zmm1_7@uint64 zmm12_7 zmm1_7;
(* vpxord %zmm21,%zmm0,%zmm21                      #! PC = 0x55555558d3e1 *)
xor zmm21_0@uint64 zmm0_0 zmm21_0;
xor zmm21_1@uint64 zmm0_1 zmm21_1;
xor zmm21_2@uint64 zmm0_2 zmm21_2;
xor zmm21_3@uint64 zmm0_3 zmm21_3;
xor zmm21_4@uint64 zmm0_4 zmm21_4;
xor zmm21_5@uint64 zmm0_5 zmm21_5;
xor zmm21_6@uint64 zmm0_6 zmm21_6;
xor zmm21_7@uint64 zmm0_7 zmm21_7;
(* vpxord %zmm14,%zmm12,%zmm14                     #! PC = 0x55555558d3e7 *)
xor zmm14_0@uint64 zmm12_0 zmm14_0;
xor zmm14_1@uint64 zmm12_1 zmm14_1;
xor zmm14_2@uint64 zmm12_2 zmm14_2;
xor zmm14_3@uint64 zmm12_3 zmm14_3;
xor zmm14_4@uint64 zmm12_4 zmm14_4;
xor zmm14_5@uint64 zmm12_5 zmm14_5;
xor zmm14_6@uint64 zmm12_6 zmm14_6;
xor zmm14_7@uint64 zmm12_7 zmm14_7;
(* vprorq $0x1c,%zmm21,%zmm21                      #! PC = 0x55555558d3ed *)
ror zmm21_0 zmm21_0 0x1c;
ror zmm21_1 zmm21_1 0x1c;
ror zmm21_2 zmm21_2 0x1c;
ror zmm21_3 zmm21_3 0x1c;
ror zmm21_4 zmm21_4 0x1c;
ror zmm21_5 zmm21_5 0x1c;
ror zmm21_6 zmm21_6 0x1c;
ror zmm21_7 zmm21_7 0x1c;
(* vprolq $0x1b,%zmm14,%zmm14                      #! PC = 0x55555558d3f4 *)
rol zmm14_0 zmm14_0 0x1b;
rol zmm14_1 zmm14_1 0x1b;
rol zmm14_2 zmm14_2 0x1b;
rol zmm14_3 zmm14_3 0x1b;
rol zmm14_4 zmm14_4 0x1b;
rol zmm14_5 zmm14_5 0x1b;
rol zmm14_6 zmm14_6 0x1b;
rol zmm14_7 zmm14_7 0x1b;
(* vprolq $0x12,%zmm19,%zmm19                      #! PC = 0x55555558d3fb *)
rol zmm19_0 zmm19_0 0x12;
rol zmm19_1 zmm19_1 0x12;
rol zmm19_2 zmm19_2 0x12;
rol zmm19_3 zmm19_3 0x12;
rol zmm19_4 zmm19_4 0x12;
rol zmm19_5 zmm19_5 0x12;
rol zmm19_6 zmm19_6 0x12;
rol zmm19_7 zmm19_7 0x12;
(* vprolq $0x19,%zmm2,%zmm2                        #! PC = 0x55555558d402 *)
rol zmm2_0 zmm2_0 0x19;
rol zmm2_1 zmm2_1 0x19;
rol zmm2_2 zmm2_2 0x19;
rol zmm2_3 zmm2_3 0x19;
rol zmm2_4 zmm2_4 0x19;
rol zmm2_5 zmm2_5 0x19;
rol zmm2_6 zmm2_6 0x19;
rol zmm2_7 zmm2_7 0x19;
(* vprolq $0x8,%zmm1,%zmm1                         #! PC = 0x55555558d409 *)
rol zmm1_0 zmm1_0 0x8;
rol zmm1_1 zmm1_1 0x8;
rol zmm1_2 zmm1_2 0x8;
rol zmm1_3 zmm1_3 0x8;
rol zmm1_4 zmm1_4 0x8;
rol zmm1_5 zmm1_5 0x8;
rol zmm1_6 zmm1_6 0x8;
rol zmm1_7 zmm1_7 0x8;
(* vpxord %zmm9,%zmm10,%zmm9                       #! PC = 0x55555558d410 *)
xor zmm9_0@uint64 zmm10_0 zmm9_0;
xor zmm9_1@uint64 zmm10_1 zmm9_1;
xor zmm9_2@uint64 zmm10_2 zmm9_2;
xor zmm9_3@uint64 zmm10_3 zmm9_3;
xor zmm9_4@uint64 zmm10_4 zmm9_4;
xor zmm9_5@uint64 zmm10_5 zmm9_5;
xor zmm9_6@uint64 zmm10_6 zmm9_6;
xor zmm9_7@uint64 zmm10_7 zmm9_7;
(* vpxord %zmm11,%zmm17,%zmm11                     #! PC = 0x55555558d416 *)
xor zmm11_0@uint64 zmm17_0 zmm11_0;
xor zmm11_1@uint64 zmm17_1 zmm11_1;
xor zmm11_2@uint64 zmm17_2 zmm11_2;
xor zmm11_3@uint64 zmm17_3 zmm11_3;
xor zmm11_4@uint64 zmm17_4 zmm11_4;
xor zmm11_5@uint64 zmm17_5 zmm11_5;
xor zmm11_6@uint64 zmm17_6 zmm11_6;
xor zmm11_7@uint64 zmm17_7 zmm11_7;
(* vpxord %zmm5,%zmm18,%zmm5                       #! PC = 0x55555558d41c *)
xor zmm5_0@uint64 zmm18_0 zmm5_0;
xor zmm5_1@uint64 zmm18_1 zmm5_1;
xor zmm5_2@uint64 zmm18_2 zmm5_2;
xor zmm5_3@uint64 zmm18_3 zmm5_3;
xor zmm5_4@uint64 zmm18_4 zmm5_4;
xor zmm5_5@uint64 zmm18_5 zmm5_5;
xor zmm5_6@uint64 zmm18_6 zmm5_6;
xor zmm5_7@uint64 zmm18_7 zmm5_7;
(* vpxord %zmm4,%zmm17,%zmm17                      #! PC = 0x55555558d422 *)
xor zmm17_0@uint64 zmm17_0 zmm4_0;
xor zmm17_1@uint64 zmm17_1 zmm4_1;
xor zmm17_2@uint64 zmm17_2 zmm4_2;
xor zmm17_3@uint64 zmm17_3 zmm4_3;
xor zmm17_4@uint64 zmm17_4 zmm4_4;
xor zmm17_5@uint64 zmm17_5 zmm4_5;
xor zmm17_6@uint64 zmm17_6 zmm4_6;
xor zmm17_7@uint64 zmm17_7 zmm4_7;
(* vpxord %zmm27,%zmm18,%zmm18                     #! PC = 0x55555558d428 *)
xor zmm18_0@uint64 zmm18_0 zmm27_0;
xor zmm18_1@uint64 zmm18_1 zmm27_1;
xor zmm18_2@uint64 zmm18_2 zmm27_2;
xor zmm18_3@uint64 zmm18_3 zmm27_3;
xor zmm18_4@uint64 zmm18_4 zmm27_4;
xor zmm18_5@uint64 zmm18_5 zmm27_5;
xor zmm18_6@uint64 zmm18_6 zmm27_6;
xor zmm18_7@uint64 zmm18_7 zmm27_7;
(* vpxord %zmm25,%zmm0,%zmm25                      #! PC = 0x55555558d42e *)
xor zmm25_0@uint64 zmm0_0 zmm25_0;
xor zmm25_1@uint64 zmm0_1 zmm25_1;
xor zmm25_2@uint64 zmm0_2 zmm25_2;
xor zmm25_3@uint64 zmm0_3 zmm25_3;
xor zmm25_4@uint64 zmm0_4 zmm25_4;
xor zmm25_5@uint64 zmm0_5 zmm25_5;
xor zmm25_6@uint64 zmm0_6 zmm25_6;
xor zmm25_7@uint64 zmm0_7 zmm25_7;
(* vprorq $0x2,%zmm17,%zmm17                       #! PC = 0x55555558d434 *)
ror zmm17_0 zmm17_0 0x2;
ror zmm17_1 zmm17_1 0x2;
ror zmm17_2 zmm17_2 0x2;
ror zmm17_3 zmm17_3 0x2;
ror zmm17_4 zmm17_4 0x2;
ror zmm17_5 zmm17_5 0x2;
ror zmm17_6 zmm17_6 0x2;
ror zmm17_7 zmm17_7 0x2;
(* vprorq $0x9,%zmm18,%zmm18                       #! PC = 0x55555558d43b *)
ror zmm18_0 zmm18_0 0x9;
ror zmm18_1 zmm18_1 0x9;
ror zmm18_2 zmm18_2 0x9;
ror zmm18_3 zmm18_3 0x9;
ror zmm18_4 zmm18_4 0x9;
ror zmm18_5 zmm18_5 0x9;
ror zmm18_6 zmm18_6 0x9;
ror zmm18_7 zmm18_7 0x9;
(* vprolq $0xa,%zmm9,%zmm9                         #! PC = 0x55555558d442 *)
rol zmm9_0 zmm9_0 0xa;
rol zmm9_1 zmm9_1 0xa;
rol zmm9_2 zmm9_2 0xa;
rol zmm9_3 zmm9_3 0xa;
rol zmm9_4 zmm9_4 0xa;
rol zmm9_5 zmm9_5 0xa;
rol zmm9_6 zmm9_6 0xa;
rol zmm9_7 zmm9_7 0xa;
(* vprolq $0xf,%zmm11,%zmm11                       #! PC = 0x55555558d449 *)
rol zmm11_0 zmm11_0 0xf;
rol zmm11_1 zmm11_1 0xf;
rol zmm11_2 zmm11_2 0xf;
rol zmm11_3 zmm11_3 0xf;
rol zmm11_4 zmm11_4 0xf;
rol zmm11_5 zmm11_5 0xf;
rol zmm11_6 zmm11_6 0xf;
rol zmm11_7 zmm11_7 0xf;
(* vprorq $0x8,%zmm5,%zmm5                         #! PC = 0x55555558d450 *)
ror zmm5_0 zmm5_0 0x8;
ror zmm5_1 zmm5_1 0x8;
ror zmm5_2 zmm5_2 0x8;
ror zmm5_3 zmm5_3 0x8;
ror zmm5_4 zmm5_4 0x8;
ror zmm5_5 zmm5_5 0x8;
ror zmm5_6 zmm5_6 0x8;
ror zmm5_7 zmm5_7 0x8;
(* vpxord %zmm31,%zmm0,%zmm0                       #! PC = 0x55555558d457 *)
xor zmm0_0@uint64 zmm0_0 zmm31_0;
xor zmm0_1@uint64 zmm0_1 zmm31_1;
xor zmm0_2@uint64 zmm0_2 zmm31_2;
xor zmm0_3@uint64 zmm0_3 zmm31_3;
xor zmm0_4@uint64 zmm0_4 zmm31_4;
xor zmm0_5@uint64 zmm0_5 zmm31_5;
xor zmm0_6@uint64 zmm0_6 zmm31_6;
xor zmm0_7@uint64 zmm0_7 zmm31_7;
(* vpxord %zmm30,%zmm10,%zmm10                     #! PC = 0x55555558d45d *)
xor zmm10_0@uint64 zmm10_0 zmm30_0;
xor zmm10_1@uint64 zmm10_1 zmm30_1;
xor zmm10_2@uint64 zmm10_2 zmm30_2;
xor zmm10_3@uint64 zmm10_3 zmm30_3;
xor zmm10_4@uint64 zmm10_4 zmm30_4;
xor zmm10_5@uint64 zmm10_5 zmm30_5;
xor zmm10_6@uint64 zmm10_6 zmm30_6;
xor zmm10_7@uint64 zmm10_7 zmm30_7;
(* vpxord %zmm16,%zmm12,%zmm12                     #! PC = 0x55555558d463 *)
xor zmm12_0@uint64 zmm12_0 zmm16_0;
xor zmm12_1@uint64 zmm12_1 zmm16_1;
xor zmm12_2@uint64 zmm12_2 zmm16_2;
xor zmm12_3@uint64 zmm12_3 zmm16_3;
xor zmm12_4@uint64 zmm12_4 zmm16_4;
xor zmm12_5@uint64 zmm12_5 zmm16_5;
xor zmm12_6@uint64 zmm12_6 zmm16_6;
xor zmm12_7@uint64 zmm12_7 zmm16_7;
(* vprorq $0x17,%zmm0,%zmm0                        #! PC = 0x55555558d469 *)
ror zmm0_0 zmm0_0 0x17;
ror zmm0_1 zmm0_1 0x17;
ror zmm0_2 zmm0_2 0x17;
ror zmm0_3 zmm0_3 0x17;
ror zmm0_4 zmm0_4 0x17;
ror zmm0_5 zmm0_5 0x17;
ror zmm0_6 zmm0_6 0x17;
ror zmm0_7 zmm0_7 0x17;
(* vprolq $0x2,%zmm10,%zmm10                       #! PC = 0x55555558d470 *)
rol zmm10_0 zmm10_0 0x2;
rol zmm10_1 zmm10_1 0x2;
rol zmm10_2 zmm10_2 0x2;
rol zmm10_3 zmm10_3 0x2;
rol zmm10_4 zmm10_4 0x2;
rol zmm10_5 zmm10_5 0x2;
rol zmm10_6 zmm10_6 0x2;
rol zmm10_7 zmm10_7 0x2;
(* vprorq $0x19,%zmm12,%zmm12                      #! PC = 0x55555558d477 *)
ror zmm12_0 zmm12_0 0x19;
ror zmm12_1 zmm12_1 0x19;
ror zmm12_2 zmm12_2 0x19;
ror zmm12_3 zmm12_3 0x19;
ror zmm12_4 zmm12_4 0x19;
ror zmm12_5 zmm12_5 0x19;
ror zmm12_6 zmm12_6 0x19;
ror zmm12_7 zmm12_7 0x19;
(* vmovdqa64 %zmm25,%zmm24                         #! PC = 0x55555558d47e *)
mov zmm24_0 zmm25_0;
mov zmm24_1 zmm25_1;
mov zmm24_2 zmm25_2;
mov zmm24_3 zmm25_3;
mov zmm24_4 zmm25_4;
mov zmm24_5 zmm25_5;
mov zmm24_6 zmm25_6;
mov zmm24_7 zmm25_7;
(* vmovdqa64 %zmm26,%zmm23                         #! PC = 0x55555558d484 *)
mov zmm23_0 zmm26_0;
mov zmm23_1 zmm26_1;
mov zmm23_2 zmm26_2;
mov zmm23_3 zmm26_3;
mov zmm23_4 zmm26_4;
mov zmm23_5 zmm26_5;
mov zmm23_6 zmm26_6;
mov zmm23_7 zmm26_7;
(* vpternlogq $0xd2,%zmm6,%zmm3,%zmm23             #! PC = 0x55555558d48a *)
mov table 0xd2@uint8;
inline vpternlogq64 (zmm23_0, zmm3_0, zmm6_0, table);
inline vpternlogq64 (zmm23_1, zmm3_1, zmm6_1, table);
inline vpternlogq64 (zmm23_2, zmm3_2, zmm6_2, table);
inline vpternlogq64 (zmm23_3, zmm3_3, zmm6_3, table);
inline vpternlogq64 (zmm23_4, zmm3_4, zmm6_4, table);
inline vpternlogq64 (zmm23_5, zmm3_5, zmm6_5, table);
inline vpternlogq64 (zmm23_6, zmm3_6, zmm6_6, table);
inline vpternlogq64 (zmm23_7, zmm3_7, zmm6_7, table);
(* vpternlogq $0xd2,%zmm3,%zmm26,%zmm24            #! PC = 0x55555558d491 *)
mov table 0xd2@uint8;
inline vpternlogq64 (zmm24_0, zmm26_0, zmm3_0, table);
inline vpternlogq64 (zmm24_1, zmm26_1, zmm3_1, table);
inline vpternlogq64 (zmm24_2, zmm26_2, zmm3_2, table);
inline vpternlogq64 (zmm24_3, zmm26_3, zmm3_3, table);
inline vpternlogq64 (zmm24_4, zmm26_4, zmm3_4, table);
inline vpternlogq64 (zmm24_5, zmm26_5, zmm3_5, table);
inline vpternlogq64 (zmm24_6, zmm26_6, zmm3_6, table);
inline vpternlogq64 (zmm24_7, zmm26_7, zmm3_7, table);
(* vpternlogq $0xd2,%zmm29,%zmm6,%zmm3             #! PC = 0x55555558d498 *)
mov table 0xd2@uint8;
inline vpternlogq64 (zmm3_0, zmm6_0, zmm29_0, table);
inline vpternlogq64 (zmm3_1, zmm6_1, zmm29_1, table);
inline vpternlogq64 (zmm3_2, zmm6_2, zmm29_2, table);
inline vpternlogq64 (zmm3_3, zmm6_3, zmm29_3, table);
inline vpternlogq64 (zmm3_4, zmm6_4, zmm29_4, table);
inline vpternlogq64 (zmm3_5, zmm6_5, zmm29_5, table);
inline vpternlogq64 (zmm3_6, zmm6_6, zmm29_6, table);
inline vpternlogq64 (zmm3_7, zmm6_7, zmm29_7, table);
(* vpternlogq $0xd2,%zmm25,%zmm29,%zmm6            #! PC = 0x55555558d49f *)
mov table 0xd2@uint8;
inline vpternlogq64 (zmm6_0, zmm29_0, zmm25_0, table);
inline vpternlogq64 (zmm6_1, zmm29_1, zmm25_1, table);
inline vpternlogq64 (zmm6_2, zmm29_2, zmm25_2, table);
inline vpternlogq64 (zmm6_3, zmm29_3, zmm25_3, table);
inline vpternlogq64 (zmm6_4, zmm29_4, zmm25_4, table);
inline vpternlogq64 (zmm6_5, zmm29_5, zmm25_5, table);
inline vpternlogq64 (zmm6_6, zmm29_6, zmm25_6, table);
inline vpternlogq64 (zmm6_7, zmm29_7, zmm25_7, table);
(* vpternlogq $0xd2,%zmm26,%zmm25,%zmm29           #! PC = 0x55555558d4a6 *)
mov table 0xd2@uint8;
inline vpternlogq64 (zmm29_0, zmm25_0, zmm26_0, table);
inline vpternlogq64 (zmm29_1, zmm25_1, zmm26_1, table);
inline vpternlogq64 (zmm29_2, zmm25_2, zmm26_2, table);
inline vpternlogq64 (zmm29_3, zmm25_3, zmm26_3, table);
inline vpternlogq64 (zmm29_4, zmm25_4, zmm26_4, table);
inline vpternlogq64 (zmm29_5, zmm25_5, zmm26_5, table);
inline vpternlogq64 (zmm29_6, zmm25_6, zmm26_6, table);
inline vpternlogq64 (zmm29_7, zmm25_7, zmm26_7, table);
(* vpbroadcastq %rdi,%zmm25                        #! PC = 0x55555558d4ad *)
mov zmm25_0 rdi;
mov zmm25_1 rdi;
mov zmm25_2 rdi;
mov zmm25_3 rdi;
mov zmm25_4 rdi;
mov zmm25_5 rdi;
mov zmm25_6 rdi;
mov zmm25_7 rdi;
(* vpxord %zmm25,%zmm24,%zmm24                     #! PC = 0x55555558d4b3 *)
xor zmm24_0@uint64 zmm24_0 zmm25_0;
xor zmm24_1@uint64 zmm24_1 zmm25_1;
xor zmm24_2@uint64 zmm24_2 zmm25_2;
xor zmm24_3@uint64 zmm24_3 zmm25_3;
xor zmm24_4@uint64 zmm24_4 zmm25_4;
xor zmm24_5@uint64 zmm24_5 zmm25_5;
xor zmm24_6@uint64 zmm24_6 zmm25_6;
xor zmm24_7@uint64 zmm24_7 zmm25_7;
(* vmovdqa64 %zmm13,%zmm26                         #! PC = 0x55555558d4b9 *)
mov zmm26_0 zmm13_0;
mov zmm26_1 zmm13_1;
mov zmm26_2 zmm13_2;
mov zmm26_3 zmm13_3;
mov zmm26_4 zmm13_4;
mov zmm26_5 zmm13_5;
mov zmm26_6 zmm13_6;
mov zmm26_7 zmm13_7;
(* vmovdqa64 %zmm7,%zmm25                          #! PC = 0x55555558d4bf *)
mov zmm25_0 zmm7_0;
mov zmm25_1 zmm7_1;
mov zmm25_2 zmm7_2;
mov zmm25_3 zmm7_3;
mov zmm25_4 zmm7_4;
mov zmm25_5 zmm7_5;
mov zmm25_6 zmm7_6;
mov zmm25_7 zmm7_7;
(* vpternlogq $0xd2,%zmm15,%zmm13,%zmm25           #! PC = 0x55555558d4c5 *)
mov table 0xd2@uint8;
inline vpternlogq64 (zmm25_0, zmm13_0, zmm15_0, table);
inline vpternlogq64 (zmm25_1, zmm13_1, zmm15_1, table);
inline vpternlogq64 (zmm25_2, zmm13_2, zmm15_2, table);
inline vpternlogq64 (zmm25_3, zmm13_3, zmm15_3, table);
inline vpternlogq64 (zmm25_4, zmm13_4, zmm15_4, table);
inline vpternlogq64 (zmm25_5, zmm13_5, zmm15_5, table);
inline vpternlogq64 (zmm25_6, zmm13_6, zmm15_6, table);
inline vpternlogq64 (zmm25_7, zmm13_7, zmm15_7, table);
(* vpternlogq $0xd2,%zmm20,%zmm15,%zmm26           #! PC = 0x55555558d4cc *)
mov table 0xd2@uint8;
inline vpternlogq64 (zmm26_0, zmm15_0, zmm20_0, table);
inline vpternlogq64 (zmm26_1, zmm15_1, zmm20_1, table);
inline vpternlogq64 (zmm26_2, zmm15_2, zmm20_2, table);
inline vpternlogq64 (zmm26_3, zmm15_3, zmm20_3, table);
inline vpternlogq64 (zmm26_4, zmm15_4, zmm20_4, table);
inline vpternlogq64 (zmm26_5, zmm15_5, zmm20_5, table);
inline vpternlogq64 (zmm26_6, zmm15_6, zmm20_6, table);
inline vpternlogq64 (zmm26_7, zmm15_7, zmm20_7, table);
(* vpternlogq $0xd2,%zmm22,%zmm20,%zmm15           #! PC = 0x55555558d4d3 *)
mov table 0xd2@uint8;
inline vpternlogq64 (zmm15_0, zmm20_0, zmm22_0, table);
inline vpternlogq64 (zmm15_1, zmm20_1, zmm22_1, table);
inline vpternlogq64 (zmm15_2, zmm20_2, zmm22_2, table);
inline vpternlogq64 (zmm15_3, zmm20_3, zmm22_3, table);
inline vpternlogq64 (zmm15_4, zmm20_4, zmm22_4, table);
inline vpternlogq64 (zmm15_5, zmm20_5, zmm22_5, table);
inline vpternlogq64 (zmm15_6, zmm20_6, zmm22_6, table);
inline vpternlogq64 (zmm15_7, zmm20_7, zmm22_7, table);
(* vpternlogq $0xd2,%zmm7,%zmm22,%zmm20            #! PC = 0x55555558d4da *)
mov table 0xd2@uint8;
inline vpternlogq64 (zmm20_0, zmm22_0, zmm7_0, table);
inline vpternlogq64 (zmm20_1, zmm22_1, zmm7_1, table);
inline vpternlogq64 (zmm20_2, zmm22_2, zmm7_2, table);
inline vpternlogq64 (zmm20_3, zmm22_3, zmm7_3, table);
inline vpternlogq64 (zmm20_4, zmm22_4, zmm7_4, table);
inline vpternlogq64 (zmm20_5, zmm22_5, zmm7_5, table);
inline vpternlogq64 (zmm20_6, zmm22_6, zmm7_6, table);
inline vpternlogq64 (zmm20_7, zmm22_7, zmm7_7, table);
(* vpternlogq $0xd2,%zmm13,%zmm7,%zmm22            #! PC = 0x55555558d4e1 *)
mov table 0xd2@uint8;
inline vpternlogq64 (zmm22_0, zmm7_0, zmm13_0, table);
inline vpternlogq64 (zmm22_1, zmm7_1, zmm13_1, table);
inline vpternlogq64 (zmm22_2, zmm7_2, zmm13_2, table);
inline vpternlogq64 (zmm22_3, zmm7_3, zmm13_3, table);
inline vpternlogq64 (zmm22_4, zmm7_4, zmm13_4, table);
inline vpternlogq64 (zmm22_5, zmm7_5, zmm13_5, table);
inline vpternlogq64 (zmm22_6, zmm7_6, zmm13_6, table);
inline vpternlogq64 (zmm22_7, zmm7_7, zmm13_7, table);
(* vmovdqa64 %zmm28,%zmm13                         #! PC = 0x55555558d4e8 *)
mov zmm13_0 zmm28_0;
mov zmm13_1 zmm28_1;
mov zmm13_2 zmm28_2;
mov zmm13_3 zmm28_3;
mov zmm13_4 zmm28_4;
mov zmm13_5 zmm28_5;
mov zmm13_6 zmm28_6;
mov zmm13_7 zmm28_7;
(* vmovdqa64 %zmm8,%zmm7                           #! PC = 0x55555558d4ee *)
mov zmm7_0 zmm8_0;
mov zmm7_1 zmm8_1;
mov zmm7_2 zmm8_2;
mov zmm7_3 zmm8_3;
mov zmm7_4 zmm8_4;
mov zmm7_5 zmm8_5;
mov zmm7_6 zmm8_6;
mov zmm7_7 zmm8_7;
(* vpternlogq $0xd2,%zmm2,%zmm8,%zmm13             #! PC = 0x55555558d4f4 *)
mov table 0xd2@uint8;
inline vpternlogq64 (zmm13_0, zmm8_0, zmm2_0, table);
inline vpternlogq64 (zmm13_1, zmm8_1, zmm2_1, table);
inline vpternlogq64 (zmm13_2, zmm8_2, zmm2_2, table);
inline vpternlogq64 (zmm13_3, zmm8_3, zmm2_3, table);
inline vpternlogq64 (zmm13_4, zmm8_4, zmm2_4, table);
inline vpternlogq64 (zmm13_5, zmm8_5, zmm2_5, table);
inline vpternlogq64 (zmm13_6, zmm8_6, zmm2_6, table);
inline vpternlogq64 (zmm13_7, zmm8_7, zmm2_7, table);
(* vpternlogq $0xd2,%zmm1,%zmm2,%zmm7              #! PC = 0x55555558d4fb *)
mov table 0xd2@uint8;
inline vpternlogq64 (zmm7_0, zmm2_0, zmm1_0, table);
inline vpternlogq64 (zmm7_1, zmm2_1, zmm1_1, table);
inline vpternlogq64 (zmm7_2, zmm2_2, zmm1_2, table);
inline vpternlogq64 (zmm7_3, zmm2_3, zmm1_3, table);
inline vpternlogq64 (zmm7_4, zmm2_4, zmm1_4, table);
inline vpternlogq64 (zmm7_5, zmm2_5, zmm1_5, table);
inline vpternlogq64 (zmm7_6, zmm2_6, zmm1_6, table);
inline vpternlogq64 (zmm7_7, zmm2_7, zmm1_7, table);
(* vpternlogq $0xd2,%zmm19,%zmm1,%zmm2             #! PC = 0x55555558d502 *)
mov table 0xd2@uint8;
inline vpternlogq64 (zmm2_0, zmm1_0, zmm19_0, table);
inline vpternlogq64 (zmm2_1, zmm1_1, zmm19_1, table);
inline vpternlogq64 (zmm2_2, zmm1_2, zmm19_2, table);
inline vpternlogq64 (zmm2_3, zmm1_3, zmm19_3, table);
inline vpternlogq64 (zmm2_4, zmm1_4, zmm19_4, table);
inline vpternlogq64 (zmm2_5, zmm1_5, zmm19_5, table);
inline vpternlogq64 (zmm2_6, zmm1_6, zmm19_6, table);
inline vpternlogq64 (zmm2_7, zmm1_7, zmm19_7, table);
(* vpternlogq $0xd2,%zmm28,%zmm19,%zmm1            #! PC = 0x55555558d509 *)
mov table 0xd2@uint8;
inline vpternlogq64 (zmm1_0, zmm19_0, zmm28_0, table);
inline vpternlogq64 (zmm1_1, zmm19_1, zmm28_1, table);
inline vpternlogq64 (zmm1_2, zmm19_2, zmm28_2, table);
inline vpternlogq64 (zmm1_3, zmm19_3, zmm28_3, table);
inline vpternlogq64 (zmm1_4, zmm19_4, zmm28_4, table);
inline vpternlogq64 (zmm1_5, zmm19_5, zmm28_5, table);
inline vpternlogq64 (zmm1_6, zmm19_6, zmm28_6, table);
inline vpternlogq64 (zmm1_7, zmm19_7, zmm28_7, table);
(* vpternlogq $0xd2,%zmm8,%zmm28,%zmm19            #! PC = 0x55555558d510 *)
mov table 0xd2@uint8;
inline vpternlogq64 (zmm19_0, zmm28_0, zmm8_0, table);
inline vpternlogq64 (zmm19_1, zmm28_1, zmm8_1, table);
inline vpternlogq64 (zmm19_2, zmm28_2, zmm8_2, table);
inline vpternlogq64 (zmm19_3, zmm28_3, zmm8_3, table);
inline vpternlogq64 (zmm19_4, zmm28_4, zmm8_4, table);
inline vpternlogq64 (zmm19_5, zmm28_5, zmm8_5, table);
inline vpternlogq64 (zmm19_6, zmm28_6, zmm8_6, table);
inline vpternlogq64 (zmm19_7, zmm28_7, zmm8_7, table);
(* vmovdqa64 %zmm14,%zmm28                         #! PC = 0x55555558d517 *)
mov zmm28_0 zmm14_0;
mov zmm28_1 zmm14_1;
mov zmm28_2 zmm14_2;
mov zmm28_3 zmm14_3;
mov zmm28_4 zmm14_4;
mov zmm28_5 zmm14_5;
mov zmm28_6 zmm14_6;
mov zmm28_7 zmm14_7;
(* vmovdqa64 %zmm21,%zmm8                          #! PC = 0x55555558d51d *)
mov zmm8_0 zmm21_0;
mov zmm8_1 zmm21_1;
mov zmm8_2 zmm21_2;
mov zmm8_3 zmm21_3;
mov zmm8_4 zmm21_4;
mov zmm8_5 zmm21_5;
mov zmm8_6 zmm21_6;
mov zmm8_7 zmm21_7;
(* vpternlogq $0xd2,%zmm9,%zmm21,%zmm28            #! PC = 0x55555558d523 *)
mov table 0xd2@uint8;
inline vpternlogq64 (zmm28_0, zmm21_0, zmm9_0, table);
inline vpternlogq64 (zmm28_1, zmm21_1, zmm9_1, table);
inline vpternlogq64 (zmm28_2, zmm21_2, zmm9_2, table);
inline vpternlogq64 (zmm28_3, zmm21_3, zmm9_3, table);
inline vpternlogq64 (zmm28_4, zmm21_4, zmm9_4, table);
inline vpternlogq64 (zmm28_5, zmm21_5, zmm9_5, table);
inline vpternlogq64 (zmm28_6, zmm21_6, zmm9_6, table);
inline vpternlogq64 (zmm28_7, zmm21_7, zmm9_7, table);
(* vpternlogq $0xd2,%zmm11,%zmm9,%zmm8             #! PC = 0x55555558d52a *)
mov table 0xd2@uint8;
inline vpternlogq64 (zmm8_0, zmm9_0, zmm11_0, table);
inline vpternlogq64 (zmm8_1, zmm9_1, zmm11_1, table);
inline vpternlogq64 (zmm8_2, zmm9_2, zmm11_2, table);
inline vpternlogq64 (zmm8_3, zmm9_3, zmm11_3, table);
inline vpternlogq64 (zmm8_4, zmm9_4, zmm11_4, table);
inline vpternlogq64 (zmm8_5, zmm9_5, zmm11_5, table);
inline vpternlogq64 (zmm8_6, zmm9_6, zmm11_6, table);
inline vpternlogq64 (zmm8_7, zmm9_7, zmm11_7, table);
(* vmovdqa64 %zmm18,%zmm31                         #! PC = 0x55555558d531 *)
mov zmm31_0 zmm18_0;
mov zmm31_1 zmm18_1;
mov zmm31_2 zmm18_2;
mov zmm31_3 zmm18_3;
mov zmm31_4 zmm18_4;
mov zmm31_5 zmm18_5;
mov zmm31_6 zmm18_6;
mov zmm31_7 zmm18_7;
(* vpternlogq $0xd2,%zmm5,%zmm11,%zmm9             #! PC = 0x55555558d537 *)
mov table 0xd2@uint8;
inline vpternlogq64 (zmm9_0, zmm11_0, zmm5_0, table);
inline vpternlogq64 (zmm9_1, zmm11_1, zmm5_1, table);
inline vpternlogq64 (zmm9_2, zmm11_2, zmm5_2, table);
inline vpternlogq64 (zmm9_3, zmm11_3, zmm5_3, table);
inline vpternlogq64 (zmm9_4, zmm11_4, zmm5_4, table);
inline vpternlogq64 (zmm9_5, zmm11_5, zmm5_5, table);
inline vpternlogq64 (zmm9_6, zmm11_6, zmm5_6, table);
inline vpternlogq64 (zmm9_7, zmm11_7, zmm5_7, table);
(* vpternlogq $0xd2,%zmm14,%zmm5,%zmm11            #! PC = 0x55555558d53e *)
mov table 0xd2@uint8;
inline vpternlogq64 (zmm11_0, zmm5_0, zmm14_0, table);
inline vpternlogq64 (zmm11_1, zmm5_1, zmm14_1, table);
inline vpternlogq64 (zmm11_2, zmm5_2, zmm14_2, table);
inline vpternlogq64 (zmm11_3, zmm5_3, zmm14_3, table);
inline vpternlogq64 (zmm11_4, zmm5_4, zmm14_4, table);
inline vpternlogq64 (zmm11_5, zmm5_5, zmm14_5, table);
inline vpternlogq64 (zmm11_6, zmm5_6, zmm14_6, table);
inline vpternlogq64 (zmm11_7, zmm5_7, zmm14_7, table);
(* vpternlogq $0xd2,%zmm21,%zmm14,%zmm5            #! PC = 0x55555558d545 *)
mov table 0xd2@uint8;
inline vpternlogq64 (zmm5_0, zmm14_0, zmm21_0, table);
inline vpternlogq64 (zmm5_1, zmm14_1, zmm21_1, table);
inline vpternlogq64 (zmm5_2, zmm14_2, zmm21_2, table);
inline vpternlogq64 (zmm5_3, zmm14_3, zmm21_3, table);
inline vpternlogq64 (zmm5_4, zmm14_4, zmm21_4, table);
inline vpternlogq64 (zmm5_5, zmm14_5, zmm21_5, table);
inline vpternlogq64 (zmm5_6, zmm14_6, zmm21_6, table);
inline vpternlogq64 (zmm5_7, zmm14_7, zmm21_7, table);
(* vmovdqa64 %zmm17,%zmm21                         #! PC = 0x55555558d54c *)
mov zmm21_0 zmm17_0;
mov zmm21_1 zmm17_1;
mov zmm21_2 zmm17_2;
mov zmm21_3 zmm17_3;
mov zmm21_4 zmm17_4;
mov zmm21_5 zmm17_5;
mov zmm21_6 zmm17_6;
mov zmm21_7 zmm17_7;
(* vpternlogq $0xd2,%zmm0,%zmm12,%zmm31            #! PC = 0x55555558d552 *)
mov table 0xd2@uint8;
inline vpternlogq64 (zmm31_0, zmm12_0, zmm0_0, table);
inline vpternlogq64 (zmm31_1, zmm12_1, zmm0_1, table);
inline vpternlogq64 (zmm31_2, zmm12_2, zmm0_2, table);
inline vpternlogq64 (zmm31_3, zmm12_3, zmm0_3, table);
inline vpternlogq64 (zmm31_4, zmm12_4, zmm0_4, table);
inline vpternlogq64 (zmm31_5, zmm12_5, zmm0_5, table);
inline vpternlogq64 (zmm31_6, zmm12_6, zmm0_6, table);
inline vpternlogq64 (zmm31_7, zmm12_7, zmm0_7, table);
(* vpternlogq $0xd2,%zmm12,%zmm18,%zmm21           #! PC = 0x55555558d559 *)
mov table 0xd2@uint8;
inline vpternlogq64 (zmm21_0, zmm18_0, zmm12_0, table);
inline vpternlogq64 (zmm21_1, zmm18_1, zmm12_1, table);
inline vpternlogq64 (zmm21_2, zmm18_2, zmm12_2, table);
inline vpternlogq64 (zmm21_3, zmm18_3, zmm12_3, table);
inline vpternlogq64 (zmm21_4, zmm18_4, zmm12_4, table);
inline vpternlogq64 (zmm21_5, zmm18_5, zmm12_5, table);
inline vpternlogq64 (zmm21_6, zmm18_6, zmm12_6, table);
inline vpternlogq64 (zmm21_7, zmm18_7, zmm12_7, table);
(* vpternlogq $0xd2,%zmm10,%zmm0,%zmm12            #! PC = 0x55555558d560 *)
mov table 0xd2@uint8;
inline vpternlogq64 (zmm12_0, zmm0_0, zmm10_0, table);
inline vpternlogq64 (zmm12_1, zmm0_1, zmm10_1, table);
inline vpternlogq64 (zmm12_2, zmm0_2, zmm10_2, table);
inline vpternlogq64 (zmm12_3, zmm0_3, zmm10_3, table);
inline vpternlogq64 (zmm12_4, zmm0_4, zmm10_4, table);
inline vpternlogq64 (zmm12_5, zmm0_5, zmm10_5, table);
inline vpternlogq64 (zmm12_6, zmm0_6, zmm10_6, table);
inline vpternlogq64 (zmm12_7, zmm0_7, zmm10_7, table);
(* vpternlogq $0xd2,%zmm17,%zmm10,%zmm0            #! PC = 0x55555558d567 *)
mov table 0xd2@uint8;
inline vpternlogq64 (zmm0_0, zmm10_0, zmm17_0, table);
inline vpternlogq64 (zmm0_1, zmm10_1, zmm17_1, table);
inline vpternlogq64 (zmm0_2, zmm10_2, zmm17_2, table);
inline vpternlogq64 (zmm0_3, zmm10_3, zmm17_3, table);
inline vpternlogq64 (zmm0_4, zmm10_4, zmm17_4, table);
inline vpternlogq64 (zmm0_5, zmm10_5, zmm17_5, table);
inline vpternlogq64 (zmm0_6, zmm10_6, zmm17_6, table);
inline vpternlogq64 (zmm0_7, zmm10_7, zmm17_7, table);
(* vpternlogq $0xd2,%zmm18,%zmm17,%zmm10           #! PC = 0x55555558d56e *)
mov table 0xd2@uint8;
inline vpternlogq64 (zmm10_0, zmm17_0, zmm18_0, table);
inline vpternlogq64 (zmm10_1, zmm17_1, zmm18_1, table);
inline vpternlogq64 (zmm10_2, zmm17_2, zmm18_2, table);
inline vpternlogq64 (zmm10_3, zmm17_3, zmm18_3, table);
inline vpternlogq64 (zmm10_4, zmm17_4, zmm18_4, table);
inline vpternlogq64 (zmm10_5, zmm17_5, zmm18_5, table);
inline vpternlogq64 (zmm10_6, zmm17_6, zmm18_6, table);
inline vpternlogq64 (zmm10_7, zmm17_7, zmm18_7, table);
(* vmovdqa64 %zmm15,%zmm18                         #! PC = 0x55555558d575 *)
mov zmm18_0 zmm15_0;
mov zmm18_1 zmm15_1;
mov zmm18_2 zmm15_2;
mov zmm18_3 zmm15_3;
mov zmm18_4 zmm15_4;
mov zmm18_5 zmm15_5;
mov zmm18_6 zmm15_6;
mov zmm18_7 zmm15_7;
(* vpternlogq $0x96,%zmm12,%zmm3,%zmm18            #! PC = 0x55555558d57b *)
mov table 0x96@uint8;
inline vpternlogq64 (zmm18_0, zmm3_0, zmm12_0, table);
inline vpternlogq64 (zmm18_1, zmm3_1, zmm12_1, table);
inline vpternlogq64 (zmm18_2, zmm3_2, zmm12_2, table);
inline vpternlogq64 (zmm18_3, zmm3_3, zmm12_3, table);
inline vpternlogq64 (zmm18_4, zmm3_4, zmm12_4, table);
inline vpternlogq64 (zmm18_5, zmm3_5, zmm12_5, table);
inline vpternlogq64 (zmm18_6, zmm3_6, zmm12_6, table);
inline vpternlogq64 (zmm18_7, zmm3_7, zmm12_7, table);
(* vpternlogq $0x96,%zmm2,%zmm9,%zmm18             #! PC = 0x55555558d582 *)
mov table 0x96@uint8;
inline vpternlogq64 (zmm18_0, zmm9_0, zmm2_0, table);
inline vpternlogq64 (zmm18_1, zmm9_1, zmm2_1, table);
inline vpternlogq64 (zmm18_2, zmm9_2, zmm2_2, table);
inline vpternlogq64 (zmm18_3, zmm9_3, zmm2_3, table);
inline vpternlogq64 (zmm18_4, zmm9_4, zmm2_4, table);
inline vpternlogq64 (zmm18_5, zmm9_5, zmm2_5, table);
inline vpternlogq64 (zmm18_6, zmm9_6, zmm2_6, table);
inline vpternlogq64 (zmm18_7, zmm9_7, zmm2_7, table);
(* vprolq $0x1,%zmm18,%zmm16                       #! PC = 0x55555558d589 *)
rol zmm16_0 zmm18_0 0x1;
rol zmm16_1 zmm18_1 0x1;
rol zmm16_2 zmm18_2 0x1;
rol zmm16_3 zmm18_3 0x1;
rol zmm16_4 zmm18_4 0x1;
rol zmm16_5 zmm18_5 0x1;
rol zmm16_6 zmm18_6 0x1;
rol zmm16_7 zmm18_7 0x1;
(* vmovdqa64 %zmm0,%zmm27                          #! PC = 0x55555558d590 *)
mov zmm27_0 zmm0_0;
mov zmm27_1 zmm0_1;
mov zmm27_2 zmm0_2;
mov zmm27_3 zmm0_3;
mov zmm27_4 zmm0_4;
mov zmm27_5 zmm0_5;
mov zmm27_6 zmm0_6;
mov zmm27_7 zmm0_7;
(* vpternlogq $0x96,%zmm1,%zmm11,%zmm27            #! PC = 0x55555558d596 *)
mov table 0x96@uint8;
inline vpternlogq64 (zmm27_0, zmm11_0, zmm1_0, table);
inline vpternlogq64 (zmm27_1, zmm11_1, zmm1_1, table);
inline vpternlogq64 (zmm27_2, zmm11_2, zmm1_2, table);
inline vpternlogq64 (zmm27_3, zmm11_3, zmm1_3, table);
inline vpternlogq64 (zmm27_4, zmm11_4, zmm1_4, table);
inline vpternlogq64 (zmm27_5, zmm11_5, zmm1_5, table);
inline vpternlogq64 (zmm27_6, zmm11_6, zmm1_6, table);
inline vpternlogq64 (zmm27_7, zmm11_7, zmm1_7, table);
(* vpternlogq $0x96,%zmm6,%zmm20,%zmm27            #! PC = 0x55555558d59d *)
mov table 0x96@uint8;
inline vpternlogq64 (zmm27_0, zmm20_0, zmm6_0, table);
inline vpternlogq64 (zmm27_1, zmm20_1, zmm6_1, table);
inline vpternlogq64 (zmm27_2, zmm20_2, zmm6_2, table);
inline vpternlogq64 (zmm27_3, zmm20_3, zmm6_3, table);
inline vpternlogq64 (zmm27_4, zmm20_4, zmm6_4, table);
inline vpternlogq64 (zmm27_5, zmm20_5, zmm6_5, table);
inline vpternlogq64 (zmm27_6, zmm20_6, zmm6_6, table);
inline vpternlogq64 (zmm27_7, zmm20_7, zmm6_7, table);
(* vmovdqa64 %zmm19,%zmm30                         #! PC = 0x55555558d5a4 *)
mov zmm30_0 zmm19_0;
mov zmm30_1 zmm19_1;
mov zmm30_2 zmm19_2;
mov zmm30_3 zmm19_3;
mov zmm30_4 zmm19_4;
mov zmm30_5 zmm19_5;
mov zmm30_6 zmm19_6;
mov zmm30_7 zmm19_7;
(* vpternlogq $0x96,%zmm29,%zmm22,%zmm30           #! PC = 0x55555558d5aa *)
mov table 0x96@uint8;
inline vpternlogq64 (zmm30_0, zmm22_0, zmm29_0, table);
inline vpternlogq64 (zmm30_1, zmm22_1, zmm29_1, table);
inline vpternlogq64 (zmm30_2, zmm22_2, zmm29_2, table);
inline vpternlogq64 (zmm30_3, zmm22_3, zmm29_3, table);
inline vpternlogq64 (zmm30_4, zmm22_4, zmm29_4, table);
inline vpternlogq64 (zmm30_5, zmm22_5, zmm29_5, table);
inline vpternlogq64 (zmm30_6, zmm22_6, zmm29_6, table);
inline vpternlogq64 (zmm30_7, zmm22_7, zmm29_7, table);
(* vmovdqa64 %zmm16,0x148(%rsp)                    #! EA = L0x7fffffffd600; PC = 0x55555558d5b1 *)
mov L0x7fffffffd600 zmm16_0;
mov L0x7fffffffd608 zmm16_1;
mov L0x7fffffffd610 zmm16_2;
mov L0x7fffffffd618 zmm16_3;
mov L0x7fffffffd620 zmm16_4;
mov L0x7fffffffd628 zmm16_5;
mov L0x7fffffffd630 zmm16_6;
mov L0x7fffffffd638 zmm16_7;
(* vprolq $0x1,%zmm27,%zmm16                       #! PC = 0x55555558d5bc *)
rol zmm16_0 zmm27_0 0x1;
rol zmm16_1 zmm27_1 0x1;
rol zmm16_2 zmm27_2 0x1;
rol zmm16_3 zmm27_3 0x1;
rol zmm16_4 zmm27_4 0x1;
rol zmm16_5 zmm27_5 0x1;
rol zmm16_6 zmm27_6 0x1;
rol zmm16_7 zmm27_7 0x1;
(* vpternlogq $0x96,%zmm5,%zmm10,%zmm30            #! PC = 0x55555558d5c3 *)
mov table 0x96@uint8;
inline vpternlogq64 (zmm30_0, zmm10_0, zmm5_0, table);
inline vpternlogq64 (zmm30_1, zmm10_1, zmm5_1, table);
inline vpternlogq64 (zmm30_2, zmm10_2, zmm5_2, table);
inline vpternlogq64 (zmm30_3, zmm10_3, zmm5_3, table);
inline vpternlogq64 (zmm30_4, zmm10_4, zmm5_4, table);
inline vpternlogq64 (zmm30_5, zmm10_5, zmm5_5, table);
inline vpternlogq64 (zmm30_6, zmm10_6, zmm5_6, table);
inline vpternlogq64 (zmm30_7, zmm10_7, zmm5_7, table);
(* vmovdqa64 %zmm24,%zmm14                         #! PC = 0x55555558d5ca *)
mov zmm14_0 zmm24_0;
mov zmm14_1 zmm24_1;
mov zmm14_2 zmm24_2;
mov zmm14_3 zmm24_3;
mov zmm14_4 zmm24_4;
mov zmm14_5 zmm24_5;
mov zmm14_6 zmm24_6;
mov zmm14_7 zmm24_7;
(* vpternlogq $0x96,%zmm28,%zmm21,%zmm14           #! PC = 0x55555558d5d0 *)
mov table 0x96@uint8;
inline vpternlogq64 (zmm14_0, zmm21_0, zmm28_0, table);
inline vpternlogq64 (zmm14_1, zmm21_1, zmm28_1, table);
inline vpternlogq64 (zmm14_2, zmm21_2, zmm28_2, table);
inline vpternlogq64 (zmm14_3, zmm21_3, zmm28_3, table);
inline vpternlogq64 (zmm14_4, zmm21_4, zmm28_4, table);
inline vpternlogq64 (zmm14_5, zmm21_5, zmm28_5, table);
inline vpternlogq64 (zmm14_6, zmm21_6, zmm28_6, table);
inline vpternlogq64 (zmm14_7, zmm21_7, zmm28_7, table);
(* vpternlogq $0x96,%zmm25,%zmm13,%zmm14           #! PC = 0x55555558d5d7 *)
mov table 0x96@uint8;
inline vpternlogq64 (zmm14_0, zmm13_0, zmm25_0, table);
inline vpternlogq64 (zmm14_1, zmm13_1, zmm25_1, table);
inline vpternlogq64 (zmm14_2, zmm13_2, zmm25_2, table);
inline vpternlogq64 (zmm14_3, zmm13_3, zmm25_3, table);
inline vpternlogq64 (zmm14_4, zmm13_4, zmm25_4, table);
inline vpternlogq64 (zmm14_5, zmm13_5, zmm25_5, table);
inline vpternlogq64 (zmm14_6, zmm13_6, zmm25_6, table);
inline vpternlogq64 (zmm14_7, zmm13_7, zmm25_7, table);
(* vmovdqa64 %zmm8,%zmm17                          #! PC = 0x55555558d5de *)
mov zmm17_0 zmm8_0;
mov zmm17_1 zmm8_1;
mov zmm17_2 zmm8_2;
mov zmm17_3 zmm8_3;
mov zmm17_4 zmm8_4;
mov zmm17_5 zmm8_5;
mov zmm17_6 zmm8_6;
mov zmm17_7 zmm8_7;
(* vmovdqa64 %zmm16,0x108(%rsp)                    #! EA = L0x7fffffffd5c0; PC = 0x55555558d5e4 *)
mov L0x7fffffffd5c0 zmm16_0;
mov L0x7fffffffd5c8 zmm16_1;
mov L0x7fffffffd5d0 zmm16_2;
mov L0x7fffffffd5d8 zmm16_3;
mov L0x7fffffffd5e0 zmm16_4;
mov L0x7fffffffd5e8 zmm16_5;
mov L0x7fffffffd5f0 zmm16_6;
mov L0x7fffffffd5f8 zmm16_7;
(* vprolq $0x1,%zmm30,%zmm16                       #! PC = 0x55555558d5ef *)
rol zmm16_0 zmm30_0 0x1;
rol zmm16_1 zmm30_1 0x1;
rol zmm16_2 zmm30_2 0x1;
rol zmm16_3 zmm30_3 0x1;
rol zmm16_4 zmm30_4 0x1;
rol zmm16_5 zmm30_5 0x1;
rol zmm16_6 zmm30_6 0x1;
rol zmm16_7 zmm30_7 0x1;
(* vpternlogq $0x96,%zmm26,%zmm7,%zmm17            #! PC = 0x55555558d5f6 *)
mov table 0x96@uint8;
inline vpternlogq64 (zmm17_0, zmm7_0, zmm26_0, table);
inline vpternlogq64 (zmm17_1, zmm7_1, zmm26_1, table);
inline vpternlogq64 (zmm17_2, zmm7_2, zmm26_2, table);
inline vpternlogq64 (zmm17_3, zmm7_3, zmm26_3, table);
inline vpternlogq64 (zmm17_4, zmm7_4, zmm26_4, table);
inline vpternlogq64 (zmm17_5, zmm7_5, zmm26_5, table);
inline vpternlogq64 (zmm17_6, zmm7_6, zmm26_6, table);
inline vpternlogq64 (zmm17_7, zmm7_7, zmm26_7, table);
(* vpternlogq $0x96,%zmm31,%zmm23,%zmm17           #! PC = 0x55555558d5fd *)
mov table 0x96@uint8;
inline vpternlogq64 (zmm17_0, zmm23_0, zmm31_0, table);
inline vpternlogq64 (zmm17_1, zmm23_1, zmm31_1, table);
inline vpternlogq64 (zmm17_2, zmm23_2, zmm31_2, table);
inline vpternlogq64 (zmm17_3, zmm23_3, zmm31_3, table);
inline vpternlogq64 (zmm17_4, zmm23_4, zmm31_4, table);
inline vpternlogq64 (zmm17_5, zmm23_5, zmm31_5, table);
inline vpternlogq64 (zmm17_6, zmm23_6, zmm31_6, table);
inline vpternlogq64 (zmm17_7, zmm23_7, zmm31_7, table);
(* vprolq $0x1,%zmm17,%zmm4                        #! PC = 0x55555558d604 *)
rol zmm4_0 zmm17_0 0x1;
rol zmm4_1 zmm17_1 0x1;
rol zmm4_2 zmm17_2 0x1;
rol zmm4_3 zmm17_3 0x1;
rol zmm4_4 zmm17_4 0x1;
rol zmm4_5 zmm17_5 0x1;
rol zmm4_6 zmm17_6 0x1;
rol zmm4_7 zmm17_7 0x1;
(* vpxord 0x108(%rsp),%zmm17,%zmm17                #! EA = L0x7fffffffd5c0; Value = 0x89b04f809ff71edf; PC = 0x55555558d60b *)
xor zmm17_0@uint64 zmm17_0 L0x7fffffffd5c0;
xor zmm17_1@uint64 zmm17_1 L0x7fffffffd5c8;
xor zmm17_2@uint64 zmm17_2 L0x7fffffffd5d0;
xor zmm17_3@uint64 zmm17_3 L0x7fffffffd5d8;
xor zmm17_4@uint64 zmm17_4 L0x7fffffffd5e0;
xor zmm17_5@uint64 zmm17_5 L0x7fffffffd5e8;
xor zmm17_6@uint64 zmm17_6 L0x7fffffffd5f0;
xor zmm17_7@uint64 zmm17_7 L0x7fffffffd5f8;
(* movabs $0x800000000000008b,%rdi                 #! PC = 0x55555558d616 *)
mov rdi 0x800000000000008b@uint64;
(* vmovdqa64 %zmm16,0xc8(%rsp)                     #! EA = L0x7fffffffd580; PC = 0x55555558d620 *)
mov L0x7fffffffd580 zmm16_0;
mov L0x7fffffffd588 zmm16_1;
mov L0x7fffffffd590 zmm16_2;
mov L0x7fffffffd598 zmm16_3;
mov L0x7fffffffd5a0 zmm16_4;
mov L0x7fffffffd5a8 zmm16_5;
mov L0x7fffffffd5b0 zmm16_6;
mov L0x7fffffffd5b8 zmm16_7;
(* vprolq $0x1,%zmm14,%zmm16                       #! PC = 0x55555558d62b *)
rol zmm16_0 zmm14_0 0x1;
rol zmm16_1 zmm14_1 0x1;
rol zmm16_2 zmm14_2 0x1;
rol zmm16_3 zmm14_3 0x1;
rol zmm16_4 zmm14_4 0x1;
rol zmm16_5 zmm14_5 0x1;
rol zmm16_6 zmm14_6 0x1;
rol zmm16_7 zmm14_7 0x1;
(* vpxord 0x148(%rsp),%zmm14,%zmm14                #! EA = L0x7fffffffd600; Value = 0x86ae082a55ae62dc; PC = 0x55555558d632 *)
xor zmm14_0@uint64 zmm14_0 L0x7fffffffd600;
xor zmm14_1@uint64 zmm14_1 L0x7fffffffd608;
xor zmm14_2@uint64 zmm14_2 L0x7fffffffd610;
xor zmm14_3@uint64 zmm14_3 L0x7fffffffd618;
xor zmm14_4@uint64 zmm14_4 L0x7fffffffd620;
xor zmm14_5@uint64 zmm14_5 L0x7fffffffd628;
xor zmm14_6@uint64 zmm14_6 L0x7fffffffd630;
xor zmm14_7@uint64 zmm14_7 L0x7fffffffd638;
(* vpxord 0xc8(%rsp),%zmm18,%zmm18                 #! EA = L0x7fffffffd580; Value = 0xf350984c6dd04bd9; PC = 0x55555558d63d *)
xor zmm18_0@uint64 zmm18_0 L0x7fffffffd580;
xor zmm18_1@uint64 zmm18_1 L0x7fffffffd588;
xor zmm18_2@uint64 zmm18_2 L0x7fffffffd590;
xor zmm18_3@uint64 zmm18_3 L0x7fffffffd598;
xor zmm18_4@uint64 zmm18_4 L0x7fffffffd5a0;
xor zmm18_5@uint64 zmm18_5 L0x7fffffffd5a8;
xor zmm18_6@uint64 zmm18_6 L0x7fffffffd5b0;
xor zmm18_7@uint64 zmm18_7 L0x7fffffffd5b8;
(* vpxord %zmm26,%zmm14,%zmm26                     #! PC = 0x55555558d648 *)
xor zmm26_0@uint64 zmm14_0 zmm26_0;
xor zmm26_1@uint64 zmm14_1 zmm26_1;
xor zmm26_2@uint64 zmm14_2 zmm26_2;
xor zmm26_3@uint64 zmm14_3 zmm26_3;
xor zmm26_4@uint64 zmm14_4 zmm26_4;
xor zmm26_5@uint64 zmm14_5 zmm26_5;
xor zmm26_6@uint64 zmm14_6 zmm26_6;
xor zmm26_7@uint64 zmm14_7 zmm26_7;
(* vprorq $0x14,%zmm26,%zmm26                      #! PC = 0x55555558d64e *)
ror zmm26_0 zmm26_0 0x14;
ror zmm26_1 zmm26_1 0x14;
ror zmm26_2 zmm26_2 0x14;
ror zmm26_3 zmm26_3 0x14;
ror zmm26_4 zmm26_4 0x14;
ror zmm26_5 zmm26_5 0x14;
ror zmm26_6 zmm26_6 0x14;
ror zmm26_7 zmm26_7 0x14;
(* vpxord %zmm2,%zmm17,%zmm2                       #! PC = 0x55555558d655 *)
xor zmm2_0@uint64 zmm17_0 zmm2_0;
xor zmm2_1@uint64 zmm17_1 zmm2_1;
xor zmm2_2@uint64 zmm17_2 zmm2_2;
xor zmm2_3@uint64 zmm17_3 zmm2_3;
xor zmm2_4@uint64 zmm17_4 zmm2_4;
xor zmm2_5@uint64 zmm17_5 zmm2_5;
xor zmm2_6@uint64 zmm17_6 zmm2_6;
xor zmm2_7@uint64 zmm17_7 zmm2_7;
(* vpxord %zmm27,%zmm16,%zmm16                     #! PC = 0x55555558d65b *)
xor zmm16_0@uint64 zmm16_0 zmm27_0;
xor zmm16_1@uint64 zmm16_1 zmm27_1;
xor zmm16_2@uint64 zmm16_2 zmm27_2;
xor zmm16_3@uint64 zmm16_3 zmm27_3;
xor zmm16_4@uint64 zmm16_4 zmm27_4;
xor zmm16_5@uint64 zmm16_5 zmm27_5;
xor zmm16_6@uint64 zmm16_6 zmm27_6;
xor zmm16_7@uint64 zmm16_7 zmm27_7;
(* vpxord %zmm11,%zmm18,%zmm11                     #! PC = 0x55555558d661 *)
xor zmm11_0@uint64 zmm18_0 zmm11_0;
xor zmm11_1@uint64 zmm18_1 zmm11_1;
xor zmm11_2@uint64 zmm18_2 zmm11_2;
xor zmm11_3@uint64 zmm18_3 zmm11_3;
xor zmm11_4@uint64 zmm18_4 zmm11_4;
xor zmm11_5@uint64 zmm18_5 zmm11_5;
xor zmm11_6@uint64 zmm18_6 zmm11_6;
xor zmm11_7@uint64 zmm18_7 zmm11_7;
(* vpxord %zmm10,%zmm16,%zmm10                     #! PC = 0x55555558d667 *)
xor zmm10_0@uint64 zmm16_0 zmm10_0;
xor zmm10_1@uint64 zmm16_1 zmm10_1;
xor zmm10_2@uint64 zmm16_2 zmm10_2;
xor zmm10_3@uint64 zmm16_3 zmm10_3;
xor zmm10_4@uint64 zmm16_4 zmm10_4;
xor zmm10_5@uint64 zmm16_5 zmm10_5;
xor zmm10_6@uint64 zmm16_6 zmm10_6;
xor zmm10_7@uint64 zmm16_7 zmm10_7;
(* vpxord %zmm30,%zmm4,%zmm4                       #! PC = 0x55555558d66d *)
xor zmm4_0@uint64 zmm4_0 zmm30_0;
xor zmm4_1@uint64 zmm4_1 zmm30_1;
xor zmm4_2@uint64 zmm4_2 zmm30_2;
xor zmm4_3@uint64 zmm4_3 zmm30_3;
xor zmm4_4@uint64 zmm4_4 zmm30_4;
xor zmm4_5@uint64 zmm4_5 zmm30_5;
xor zmm4_6@uint64 zmm4_6 zmm30_6;
xor zmm4_7@uint64 zmm4_7 zmm30_7;
(* vprorq $0x15,%zmm2,%zmm2                        #! PC = 0x55555558d673 *)
ror zmm2_0 zmm2_0 0x15;
ror zmm2_1 zmm2_1 0x15;
ror zmm2_2 zmm2_2 0x15;
ror zmm2_3 zmm2_3 0x15;
ror zmm2_4 zmm2_4 0x15;
ror zmm2_5 zmm2_5 0x15;
ror zmm2_6 zmm2_6 0x15;
ror zmm2_7 zmm2_7 0x15;
(* vprolq $0x15,%zmm11,%zmm11                      #! PC = 0x55555558d67a *)
rol zmm11_0 zmm11_0 0x15;
rol zmm11_1 zmm11_1 0x15;
rol zmm11_2 zmm11_2 0x15;
rol zmm11_3 zmm11_3 0x15;
rol zmm11_4 zmm11_4 0x15;
rol zmm11_5 zmm11_5 0x15;
rol zmm11_6 zmm11_6 0x15;
rol zmm11_7 zmm11_7 0x15;
(* vprolq $0xe,%zmm10,%zmm10                       #! PC = 0x55555558d681 *)
rol zmm10_0 zmm10_0 0xe;
rol zmm10_1 zmm10_1 0xe;
rol zmm10_2 zmm10_2 0xe;
rol zmm10_3 zmm10_3 0xe;
rol zmm10_4 zmm10_4 0xe;
rol zmm10_5 zmm10_5 0xe;
rol zmm10_6 zmm10_6 0xe;
rol zmm10_7 zmm10_7 0xe;
(* vpxord %zmm6,%zmm18,%zmm6                       #! PC = 0x55555558d688 *)
xor zmm6_0@uint64 zmm18_0 zmm6_0;
xor zmm6_1@uint64 zmm18_1 zmm6_1;
xor zmm6_2@uint64 zmm18_2 zmm6_2;
xor zmm6_3@uint64 zmm18_3 zmm6_3;
xor zmm6_4@uint64 zmm18_4 zmm6_4;
xor zmm6_5@uint64 zmm18_5 zmm6_5;
xor zmm6_6@uint64 zmm18_6 zmm6_6;
xor zmm6_7@uint64 zmm18_7 zmm6_7;
(* vpxord %zmm22,%zmm16,%zmm22                     #! PC = 0x55555558d68e *)
xor zmm22_0@uint64 zmm16_0 zmm22_0;
xor zmm22_1@uint64 zmm16_1 zmm22_1;
xor zmm22_2@uint64 zmm16_2 zmm22_2;
xor zmm22_3@uint64 zmm16_3 zmm22_3;
xor zmm22_4@uint64 zmm16_4 zmm22_4;
xor zmm22_5@uint64 zmm16_5 zmm22_5;
xor zmm22_6@uint64 zmm16_6 zmm22_6;
xor zmm22_7@uint64 zmm16_7 zmm22_7;
(* vprolq $0x1c,%zmm6,%zmm6                        #! PC = 0x55555558d694 *)
rol zmm6_0 zmm6_0 0x1c;
rol zmm6_1 zmm6_1 0x1c;
rol zmm6_2 zmm6_2 0x1c;
rol zmm6_3 zmm6_3 0x1c;
rol zmm6_4 zmm6_4 0x1c;
rol zmm6_5 zmm6_5 0x1c;
rol zmm6_6 zmm6_6 0x1c;
rol zmm6_7 zmm6_7 0x1c;
(* vprolq $0x14,%zmm22,%zmm22                      #! PC = 0x55555558d69b *)
rol zmm22_0 zmm22_0 0x14;
rol zmm22_1 zmm22_1 0x14;
rol zmm22_2 zmm22_2 0x14;
rol zmm22_3 zmm22_3 0x14;
rol zmm22_4 zmm22_4 0x14;
rol zmm22_5 zmm22_5 0x14;
rol zmm22_6 zmm22_6 0x14;
rol zmm22_7 zmm22_7 0x14;
(* vpxord %zmm13,%zmm4,%zmm13                      #! PC = 0x55555558d6a2 *)
xor zmm13_0@uint64 zmm4_0 zmm13_0;
xor zmm13_1@uint64 zmm4_1 zmm13_1;
xor zmm13_2@uint64 zmm4_2 zmm13_2;
xor zmm13_3@uint64 zmm4_3 zmm13_3;
xor zmm13_4@uint64 zmm4_4 zmm13_4;
xor zmm13_5@uint64 zmm4_5 zmm13_5;
xor zmm13_6@uint64 zmm4_6 zmm13_6;
xor zmm13_7@uint64 zmm4_7 zmm13_7;
(* vpxord %zmm8,%zmm14,%zmm8                       #! PC = 0x55555558d6a8 *)
xor zmm8_0@uint64 zmm14_0 zmm8_0;
xor zmm8_1@uint64 zmm14_1 zmm8_1;
xor zmm8_2@uint64 zmm14_2 zmm8_2;
xor zmm8_3@uint64 zmm14_3 zmm8_3;
xor zmm8_4@uint64 zmm14_4 zmm8_4;
xor zmm8_5@uint64 zmm14_5 zmm8_5;
xor zmm8_6@uint64 zmm14_6 zmm8_6;
xor zmm8_7@uint64 zmm14_7 zmm8_7;
(* vpxord %zmm12,%zmm17,%zmm12                     #! PC = 0x55555558d6ae *)
xor zmm12_0@uint64 zmm17_0 zmm12_0;
xor zmm12_1@uint64 zmm17_1 zmm12_1;
xor zmm12_2@uint64 zmm17_2 zmm12_2;
xor zmm12_3@uint64 zmm17_3 zmm12_3;
xor zmm12_4@uint64 zmm17_4 zmm12_4;
xor zmm12_5@uint64 zmm17_5 zmm12_5;
xor zmm12_6@uint64 zmm17_6 zmm12_6;
xor zmm12_7@uint64 zmm17_7 zmm12_7;
(* vpxord %zmm23,%zmm14,%zmm23                     #! PC = 0x55555558d6b4 *)
xor zmm23_0@uint64 zmm14_0 zmm23_0;
xor zmm23_1@uint64 zmm14_1 zmm23_1;
xor zmm23_2@uint64 zmm14_2 zmm23_2;
xor zmm23_3@uint64 zmm14_3 zmm23_3;
xor zmm23_4@uint64 zmm14_4 zmm23_4;
xor zmm23_5@uint64 zmm14_5 zmm23_5;
xor zmm23_6@uint64 zmm14_6 zmm23_6;
xor zmm23_7@uint64 zmm14_7 zmm23_7;
(* vpxord %zmm15,%zmm17,%zmm15                     #! PC = 0x55555558d6ba *)
xor zmm15_0@uint64 zmm17_0 zmm15_0;
xor zmm15_1@uint64 zmm17_1 zmm15_1;
xor zmm15_2@uint64 zmm17_2 zmm15_2;
xor zmm15_3@uint64 zmm17_3 zmm15_3;
xor zmm15_4@uint64 zmm17_4 zmm15_4;
xor zmm15_5@uint64 zmm17_5 zmm15_5;
xor zmm15_6@uint64 zmm17_6 zmm15_6;
xor zmm15_7@uint64 zmm17_7 zmm15_7;
(* vprolq $0x1,%zmm23,%zmm23                       #! PC = 0x55555558d6c0 *)
rol zmm23_0 zmm23_0 0x1;
rol zmm23_1 zmm23_1 0x1;
rol zmm23_2 zmm23_2 0x1;
rol zmm23_3 zmm23_3 0x1;
rol zmm23_4 zmm23_4 0x1;
rol zmm23_5 zmm23_5 0x1;
rol zmm23_6 zmm23_6 0x1;
rol zmm23_7 zmm23_7 0x1;
(* vprolq $0x6,%zmm15,%zmm15                       #! PC = 0x55555558d6c7 *)
rol zmm15_0 zmm15_0 0x6;
rol zmm15_1 zmm15_1 0x6;
rol zmm15_2 zmm15_2 0x6;
rol zmm15_3 zmm15_3 0x6;
rol zmm15_4 zmm15_4 0x6;
rol zmm15_5 zmm15_5 0x6;
rol zmm15_6 zmm15_6 0x6;
rol zmm15_7 zmm15_7 0x6;
(* vprolq $0x3,%zmm13,%zmm13                       #! PC = 0x55555558d6ce *)
rol zmm13_0 zmm13_0 0x3;
rol zmm13_1 zmm13_1 0x3;
rol zmm13_2 zmm13_2 0x3;
rol zmm13_3 zmm13_3 0x3;
rol zmm13_4 zmm13_4 0x3;
rol zmm13_5 zmm13_5 0x3;
rol zmm13_6 zmm13_6 0x3;
rol zmm13_7 zmm13_7 0x3;
(* vprorq $0x13,%zmm8,%zmm8                        #! PC = 0x55555558d6d5 *)
ror zmm8_0 zmm8_0 0x13;
ror zmm8_1 zmm8_1 0x13;
ror zmm8_2 zmm8_2 0x13;
ror zmm8_3 zmm8_3 0x13;
ror zmm8_4 zmm8_4 0x13;
ror zmm8_5 zmm8_5 0x13;
ror zmm8_6 zmm8_6 0x13;
ror zmm8_7 zmm8_7 0x13;
(* vprorq $0x3,%zmm12,%zmm12                       #! PC = 0x55555558d6dc *)
ror zmm12_0 zmm12_0 0x3;
ror zmm12_1 zmm12_1 0x3;
ror zmm12_2 zmm12_2 0x3;
ror zmm12_3 zmm12_3 0x3;
ror zmm12_4 zmm12_4 0x3;
ror zmm12_5 zmm12_5 0x3;
ror zmm12_6 zmm12_6 0x3;
ror zmm12_7 zmm12_7 0x3;
(* vpxord %zmm21,%zmm4,%zmm21                      #! PC = 0x55555558d6e3 *)
xor zmm21_0@uint64 zmm4_0 zmm21_0;
xor zmm21_1@uint64 zmm4_1 zmm21_1;
xor zmm21_2@uint64 zmm4_2 zmm21_2;
xor zmm21_3@uint64 zmm4_3 zmm21_3;
xor zmm21_4@uint64 zmm4_4 zmm21_4;
xor zmm21_5@uint64 zmm4_5 zmm21_5;
xor zmm21_6@uint64 zmm4_6 zmm21_6;
xor zmm21_7@uint64 zmm4_7 zmm21_7;
(* vpxord %zmm1,%zmm18,%zmm1                       #! PC = 0x55555558d6e9 *)
xor zmm1_0@uint64 zmm18_0 zmm1_0;
xor zmm1_1@uint64 zmm18_1 zmm1_1;
xor zmm1_2@uint64 zmm18_2 zmm1_2;
xor zmm1_3@uint64 zmm18_3 zmm1_3;
xor zmm1_4@uint64 zmm18_4 zmm1_4;
xor zmm1_5@uint64 zmm18_5 zmm1_5;
xor zmm1_6@uint64 zmm18_6 zmm1_6;
xor zmm1_7@uint64 zmm18_7 zmm1_7;
(* vpxord %zmm5,%zmm16,%zmm5                       #! PC = 0x55555558d6ef *)
xor zmm5_0@uint64 zmm16_0 zmm5_0;
xor zmm5_1@uint64 zmm16_1 zmm5_1;
xor zmm5_2@uint64 zmm16_2 zmm5_2;
xor zmm5_3@uint64 zmm16_3 zmm5_3;
xor zmm5_4@uint64 zmm16_4 zmm5_4;
xor zmm5_5@uint64 zmm16_5 zmm5_5;
xor zmm5_6@uint64 zmm16_6 zmm5_6;
xor zmm5_7@uint64 zmm16_7 zmm5_7;
(* vpxord %zmm25,%zmm4,%zmm25                      #! PC = 0x55555558d6f5 *)
xor zmm25_0@uint64 zmm4_0 zmm25_0;
xor zmm25_1@uint64 zmm4_1 zmm25_1;
xor zmm25_2@uint64 zmm4_2 zmm25_2;
xor zmm25_3@uint64 zmm4_3 zmm25_3;
xor zmm25_4@uint64 zmm4_4 zmm25_4;
xor zmm25_5@uint64 zmm4_5 zmm25_5;
xor zmm25_6@uint64 zmm4_6 zmm25_6;
xor zmm25_7@uint64 zmm4_7 zmm25_7;
(* vpxord %zmm29,%zmm16,%zmm29                     #! PC = 0x55555558d6fb *)
xor zmm29_0@uint64 zmm16_0 zmm29_0;
xor zmm29_1@uint64 zmm16_1 zmm29_1;
xor zmm29_2@uint64 zmm16_2 zmm29_2;
xor zmm29_3@uint64 zmm16_3 zmm29_3;
xor zmm29_4@uint64 zmm16_4 zmm29_4;
xor zmm29_5@uint64 zmm16_5 zmm29_5;
xor zmm29_6@uint64 zmm16_6 zmm29_6;
xor zmm29_7@uint64 zmm16_7 zmm29_7;
(* vprorq $0x1c,%zmm25,%zmm25                      #! PC = 0x55555558d701 *)
ror zmm25_0 zmm25_0 0x1c;
ror zmm25_1 zmm25_1 0x1c;
ror zmm25_2 zmm25_2 0x1c;
ror zmm25_3 zmm25_3 0x1c;
ror zmm25_4 zmm25_4 0x1c;
ror zmm25_5 zmm25_5 0x1c;
ror zmm25_6 zmm25_6 0x1c;
ror zmm25_7 zmm25_7 0x1c;
(* vprolq $0x1b,%zmm29,%zmm29                      #! PC = 0x55555558d708 *)
rol zmm29_0 zmm29_0 0x1b;
rol zmm29_1 zmm29_1 0x1b;
rol zmm29_2 zmm29_2 0x1b;
rol zmm29_3 zmm29_3 0x1b;
rol zmm29_4 zmm29_4 0x1b;
rol zmm29_5 zmm29_5 0x1b;
rol zmm29_6 zmm29_6 0x1b;
rol zmm29_7 zmm29_7 0x1b;
(* vprolq $0x12,%zmm21,%zmm21                      #! PC = 0x55555558d70f *)
rol zmm21_0 zmm21_0 0x12;
rol zmm21_1 zmm21_1 0x12;
rol zmm21_2 zmm21_2 0x12;
rol zmm21_3 zmm21_3 0x12;
rol zmm21_4 zmm21_4 0x12;
rol zmm21_5 zmm21_5 0x12;
rol zmm21_6 zmm21_6 0x12;
rol zmm21_7 zmm21_7 0x12;
(* vprolq $0x19,%zmm1,%zmm1                        #! PC = 0x55555558d716 *)
rol zmm1_0 zmm1_0 0x19;
rol zmm1_1 zmm1_1 0x19;
rol zmm1_2 zmm1_2 0x19;
rol zmm1_3 zmm1_3 0x19;
rol zmm1_4 zmm1_4 0x19;
rol zmm1_5 zmm1_5 0x19;
rol zmm1_6 zmm1_6 0x19;
rol zmm1_7 zmm1_7 0x19;
(* vprolq $0x8,%zmm5,%zmm5                         #! PC = 0x55555558d71d *)
rol zmm5_0 zmm5_0 0x8;
rol zmm5_1 zmm5_1 0x8;
rol zmm5_2 zmm5_2 0x8;
rol zmm5_3 zmm5_3 0x8;
rol zmm5_4 zmm5_4 0x8;
rol zmm5_5 zmm5_5 0x8;
rol zmm5_6 zmm5_6 0x8;
rol zmm5_7 zmm5_7 0x8;
(* vpxord %zmm7,%zmm14,%zmm7                       #! PC = 0x55555558d724 *)
xor zmm7_0@uint64 zmm14_0 zmm7_0;
xor zmm7_1@uint64 zmm14_1 zmm7_1;
xor zmm7_2@uint64 zmm14_2 zmm7_2;
xor zmm7_3@uint64 zmm14_3 zmm7_3;
xor zmm7_4@uint64 zmm14_4 zmm7_4;
xor zmm7_5@uint64 zmm14_5 zmm7_5;
xor zmm7_6@uint64 zmm14_6 zmm7_6;
xor zmm7_7@uint64 zmm14_7 zmm7_7;
(* vpxord %zmm9,%zmm17,%zmm9                       #! PC = 0x55555558d72a *)
xor zmm9_0@uint64 zmm17_0 zmm9_0;
xor zmm9_1@uint64 zmm17_1 zmm9_1;
xor zmm9_2@uint64 zmm17_2 zmm9_2;
xor zmm9_3@uint64 zmm17_3 zmm9_3;
xor zmm9_4@uint64 zmm17_4 zmm9_4;
xor zmm9_5@uint64 zmm17_5 zmm9_5;
xor zmm9_6@uint64 zmm17_6 zmm9_6;
xor zmm9_7@uint64 zmm17_7 zmm9_7;
(* vpxord %zmm0,%zmm18,%zmm0                       #! PC = 0x55555558d730 *)
xor zmm0_0@uint64 zmm18_0 zmm0_0;
xor zmm0_1@uint64 zmm18_1 zmm0_1;
xor zmm0_2@uint64 zmm18_2 zmm0_2;
xor zmm0_3@uint64 zmm18_3 zmm0_3;
xor zmm0_4@uint64 zmm18_4 zmm0_4;
xor zmm0_5@uint64 zmm18_5 zmm0_5;
xor zmm0_6@uint64 zmm18_6 zmm0_6;
xor zmm0_7@uint64 zmm18_7 zmm0_7;
(* vpxord %zmm3,%zmm17,%zmm17                      #! PC = 0x55555558d736 *)
xor zmm17_0@uint64 zmm17_0 zmm3_0;
xor zmm17_1@uint64 zmm17_1 zmm3_1;
xor zmm17_2@uint64 zmm17_2 zmm3_2;
xor zmm17_3@uint64 zmm17_3 zmm3_3;
xor zmm17_4@uint64 zmm17_4 zmm3_4;
xor zmm17_5@uint64 zmm17_5 zmm3_5;
xor zmm17_6@uint64 zmm17_6 zmm3_6;
xor zmm17_7@uint64 zmm17_7 zmm3_7;
(* vpxord %zmm20,%zmm18,%zmm18                     #! PC = 0x55555558d73c *)
xor zmm18_0@uint64 zmm18_0 zmm20_0;
xor zmm18_1@uint64 zmm18_1 zmm20_1;
xor zmm18_2@uint64 zmm18_2 zmm20_2;
xor zmm18_3@uint64 zmm18_3 zmm20_3;
xor zmm18_4@uint64 zmm18_4 zmm20_4;
xor zmm18_5@uint64 zmm18_5 zmm20_5;
xor zmm18_6@uint64 zmm18_6 zmm20_6;
xor zmm18_7@uint64 zmm18_7 zmm20_7;
(* vpxord %zmm24,%zmm4,%zmm24                      #! PC = 0x55555558d742 *)
xor zmm24_0@uint64 zmm4_0 zmm24_0;
xor zmm24_1@uint64 zmm4_1 zmm24_1;
xor zmm24_2@uint64 zmm4_2 zmm24_2;
xor zmm24_3@uint64 zmm4_3 zmm24_3;
xor zmm24_4@uint64 zmm4_4 zmm24_4;
xor zmm24_5@uint64 zmm4_5 zmm24_5;
xor zmm24_6@uint64 zmm4_6 zmm24_6;
xor zmm24_7@uint64 zmm4_7 zmm24_7;
(* vprorq $0x2,%zmm17,%zmm17                       #! PC = 0x55555558d748 *)
ror zmm17_0 zmm17_0 0x2;
ror zmm17_1 zmm17_1 0x2;
ror zmm17_2 zmm17_2 0x2;
ror zmm17_3 zmm17_3 0x2;
ror zmm17_4 zmm17_4 0x2;
ror zmm17_5 zmm17_5 0x2;
ror zmm17_6 zmm17_6 0x2;
ror zmm17_7 zmm17_7 0x2;
(* vprorq $0x9,%zmm18,%zmm18                       #! PC = 0x55555558d74f *)
ror zmm18_0 zmm18_0 0x9;
ror zmm18_1 zmm18_1 0x9;
ror zmm18_2 zmm18_2 0x9;
ror zmm18_3 zmm18_3 0x9;
ror zmm18_4 zmm18_4 0x9;
ror zmm18_5 zmm18_5 0x9;
ror zmm18_6 zmm18_6 0x9;
ror zmm18_7 zmm18_7 0x9;
(* vprolq $0xa,%zmm7,%zmm7                         #! PC = 0x55555558d756 *)
rol zmm7_0 zmm7_0 0xa;
rol zmm7_1 zmm7_1 0xa;
rol zmm7_2 zmm7_2 0xa;
rol zmm7_3 zmm7_3 0xa;
rol zmm7_4 zmm7_4 0xa;
rol zmm7_5 zmm7_5 0xa;
rol zmm7_6 zmm7_6 0xa;
rol zmm7_7 zmm7_7 0xa;
(* vprolq $0xf,%zmm9,%zmm9                         #! PC = 0x55555558d75d *)
rol zmm9_0 zmm9_0 0xf;
rol zmm9_1 zmm9_1 0xf;
rol zmm9_2 zmm9_2 0xf;
rol zmm9_3 zmm9_3 0xf;
rol zmm9_4 zmm9_4 0xf;
rol zmm9_5 zmm9_5 0xf;
rol zmm9_6 zmm9_6 0xf;
rol zmm9_7 zmm9_7 0xf;
(* vprorq $0x8,%zmm0,%zmm0                         #! PC = 0x55555558d764 *)
ror zmm0_0 zmm0_0 0x8;
ror zmm0_1 zmm0_1 0x8;
ror zmm0_2 zmm0_2 0x8;
ror zmm0_3 zmm0_3 0x8;
ror zmm0_4 zmm0_4 0x8;
ror zmm0_5 zmm0_5 0x8;
ror zmm0_6 zmm0_6 0x8;
ror zmm0_7 zmm0_7 0x8;
(* vpxord %zmm28,%zmm4,%zmm4                       #! PC = 0x55555558d76b *)
xor zmm4_0@uint64 zmm4_0 zmm28_0;
xor zmm4_1@uint64 zmm4_1 zmm28_1;
xor zmm4_2@uint64 zmm4_2 zmm28_2;
xor zmm4_3@uint64 zmm4_3 zmm28_3;
xor zmm4_4@uint64 zmm4_4 zmm28_4;
xor zmm4_5@uint64 zmm4_5 zmm28_5;
xor zmm4_6@uint64 zmm4_6 zmm28_6;
xor zmm4_7@uint64 zmm4_7 zmm28_7;
(* vpxord %zmm31,%zmm14,%zmm14                     #! PC = 0x55555558d771 *)
xor zmm14_0@uint64 zmm14_0 zmm31_0;
xor zmm14_1@uint64 zmm14_1 zmm31_1;
xor zmm14_2@uint64 zmm14_2 zmm31_2;
xor zmm14_3@uint64 zmm14_3 zmm31_3;
xor zmm14_4@uint64 zmm14_4 zmm31_4;
xor zmm14_5@uint64 zmm14_5 zmm31_5;
xor zmm14_6@uint64 zmm14_6 zmm31_6;
xor zmm14_7@uint64 zmm14_7 zmm31_7;
(* vpxord %zmm19,%zmm16,%zmm16                     #! PC = 0x55555558d777 *)
xor zmm16_0@uint64 zmm16_0 zmm19_0;
xor zmm16_1@uint64 zmm16_1 zmm19_1;
xor zmm16_2@uint64 zmm16_2 zmm19_2;
xor zmm16_3@uint64 zmm16_3 zmm19_3;
xor zmm16_4@uint64 zmm16_4 zmm19_4;
xor zmm16_5@uint64 zmm16_5 zmm19_5;
xor zmm16_6@uint64 zmm16_6 zmm19_6;
xor zmm16_7@uint64 zmm16_7 zmm19_7;
(* vprorq $0x17,%zmm4,%zmm4                        #! PC = 0x55555558d77d *)
ror zmm4_0 zmm4_0 0x17;
ror zmm4_1 zmm4_1 0x17;
ror zmm4_2 zmm4_2 0x17;
ror zmm4_3 zmm4_3 0x17;
ror zmm4_4 zmm4_4 0x17;
ror zmm4_5 zmm4_5 0x17;
ror zmm4_6 zmm4_6 0x17;
ror zmm4_7 zmm4_7 0x17;
(* vprolq $0x2,%zmm14,%zmm14                       #! PC = 0x55555558d784 *)
rol zmm14_0 zmm14_0 0x2;
rol zmm14_1 zmm14_1 0x2;
rol zmm14_2 zmm14_2 0x2;
rol zmm14_3 zmm14_3 0x2;
rol zmm14_4 zmm14_4 0x2;
rol zmm14_5 zmm14_5 0x2;
rol zmm14_6 zmm14_6 0x2;
rol zmm14_7 zmm14_7 0x2;
(* vprorq $0x19,%zmm16,%zmm16                      #! PC = 0x55555558d78b *)
ror zmm16_0 zmm16_0 0x19;
ror zmm16_1 zmm16_1 0x19;
ror zmm16_2 zmm16_2 0x19;
ror zmm16_3 zmm16_3 0x19;
ror zmm16_4 zmm16_4 0x19;
ror zmm16_5 zmm16_5 0x19;
ror zmm16_6 zmm16_6 0x19;
ror zmm16_7 zmm16_7 0x19;
(* vmovdqa64 %zmm24,%zmm30                         #! PC = 0x55555558d792 *)
mov zmm30_0 zmm24_0;
mov zmm30_1 zmm24_1;
mov zmm30_2 zmm24_2;
mov zmm30_3 zmm24_3;
mov zmm30_4 zmm24_4;
mov zmm30_5 zmm24_5;
mov zmm30_6 zmm24_6;
mov zmm30_7 zmm24_7;
(* vmovdqa64 %zmm26,%zmm27                         #! PC = 0x55555558d798 *)
mov zmm27_0 zmm26_0;
mov zmm27_1 zmm26_1;
mov zmm27_2 zmm26_2;
mov zmm27_3 zmm26_3;
mov zmm27_4 zmm26_4;
mov zmm27_5 zmm26_5;
mov zmm27_6 zmm26_6;
mov zmm27_7 zmm26_7;
(* vpternlogq $0xd2,%zmm2,%zmm26,%zmm30            #! PC = 0x55555558d79e *)
mov table 0xd2@uint8;
inline vpternlogq64 (zmm30_0, zmm26_0, zmm2_0, table);
inline vpternlogq64 (zmm30_1, zmm26_1, zmm2_1, table);
inline vpternlogq64 (zmm30_2, zmm26_2, zmm2_2, table);
inline vpternlogq64 (zmm30_3, zmm26_3, zmm2_3, table);
inline vpternlogq64 (zmm30_4, zmm26_4, zmm2_4, table);
inline vpternlogq64 (zmm30_5, zmm26_5, zmm2_5, table);
inline vpternlogq64 (zmm30_6, zmm26_6, zmm2_6, table);
inline vpternlogq64 (zmm30_7, zmm26_7, zmm2_7, table);
(* vpternlogq $0xd2,%zmm11,%zmm2,%zmm27            #! PC = 0x55555558d7a5 *)
mov table 0xd2@uint8;
inline vpternlogq64 (zmm27_0, zmm2_0, zmm11_0, table);
inline vpternlogq64 (zmm27_1, zmm2_1, zmm11_1, table);
inline vpternlogq64 (zmm27_2, zmm2_2, zmm11_2, table);
inline vpternlogq64 (zmm27_3, zmm2_3, zmm11_3, table);
inline vpternlogq64 (zmm27_4, zmm2_4, zmm11_4, table);
inline vpternlogq64 (zmm27_5, zmm2_5, zmm11_5, table);
inline vpternlogq64 (zmm27_6, zmm2_6, zmm11_6, table);
inline vpternlogq64 (zmm27_7, zmm2_7, zmm11_7, table);
(* vpternlogq $0xd2,%zmm10,%zmm11,%zmm2            #! PC = 0x55555558d7ac *)
mov table 0xd2@uint8;
inline vpternlogq64 (zmm2_0, zmm11_0, zmm10_0, table);
inline vpternlogq64 (zmm2_1, zmm11_1, zmm10_1, table);
inline vpternlogq64 (zmm2_2, zmm11_2, zmm10_2, table);
inline vpternlogq64 (zmm2_3, zmm11_3, zmm10_3, table);
inline vpternlogq64 (zmm2_4, zmm11_4, zmm10_4, table);
inline vpternlogq64 (zmm2_5, zmm11_5, zmm10_5, table);
inline vpternlogq64 (zmm2_6, zmm11_6, zmm10_6, table);
inline vpternlogq64 (zmm2_7, zmm11_7, zmm10_7, table);
(* vpternlogq $0xd2,%zmm24,%zmm10,%zmm11           #! PC = 0x55555558d7b3 *)
mov table 0xd2@uint8;
inline vpternlogq64 (zmm11_0, zmm10_0, zmm24_0, table);
inline vpternlogq64 (zmm11_1, zmm10_1, zmm24_1, table);
inline vpternlogq64 (zmm11_2, zmm10_2, zmm24_2, table);
inline vpternlogq64 (zmm11_3, zmm10_3, zmm24_3, table);
inline vpternlogq64 (zmm11_4, zmm10_4, zmm24_4, table);
inline vpternlogq64 (zmm11_5, zmm10_5, zmm24_5, table);
inline vpternlogq64 (zmm11_6, zmm10_6, zmm24_6, table);
inline vpternlogq64 (zmm11_7, zmm10_7, zmm24_7, table);
(* vpternlogq $0xd2,%zmm26,%zmm24,%zmm10           #! PC = 0x55555558d7ba *)
mov table 0xd2@uint8;
inline vpternlogq64 (zmm10_0, zmm24_0, zmm26_0, table);
inline vpternlogq64 (zmm10_1, zmm24_1, zmm26_1, table);
inline vpternlogq64 (zmm10_2, zmm24_2, zmm26_2, table);
inline vpternlogq64 (zmm10_3, zmm24_3, zmm26_3, table);
inline vpternlogq64 (zmm10_4, zmm24_4, zmm26_4, table);
inline vpternlogq64 (zmm10_5, zmm24_5, zmm26_5, table);
inline vpternlogq64 (zmm10_6, zmm24_6, zmm26_6, table);
inline vpternlogq64 (zmm10_7, zmm24_7, zmm26_7, table);
(* vpbroadcastq %r8,%zmm24                         #! PC = 0x55555558d7c1 *)
mov zmm24_0 r8;
mov zmm24_1 r8;
mov zmm24_2 r8;
mov zmm24_3 r8;
mov zmm24_4 r8;
mov zmm24_5 r8;
mov zmm24_6 r8;
mov zmm24_7 r8;
(* vpxord %zmm24,%zmm30,%zmm24                     #! PC = 0x55555558d7c7 *)
xor zmm24_0@uint64 zmm30_0 zmm24_0;
xor zmm24_1@uint64 zmm30_1 zmm24_1;
xor zmm24_2@uint64 zmm30_2 zmm24_2;
xor zmm24_3@uint64 zmm30_3 zmm24_3;
xor zmm24_4@uint64 zmm30_4 zmm24_4;
xor zmm24_5@uint64 zmm30_5 zmm24_5;
xor zmm24_6@uint64 zmm30_6 zmm24_6;
xor zmm24_7@uint64 zmm30_7 zmm24_7;
(* vmovdqa64 %zmm6,%zmm26                          #! PC = 0x55555558d7cd *)
mov zmm26_0 zmm6_0;
mov zmm26_1 zmm6_1;
mov zmm26_2 zmm6_2;
mov zmm26_3 zmm6_3;
mov zmm26_4 zmm6_4;
mov zmm26_5 zmm6_5;
mov zmm26_6 zmm6_6;
mov zmm26_7 zmm6_7;
(* vmovdqa64 %zmm22,%zmm30                         #! PC = 0x55555558d7d3 *)
mov zmm30_0 zmm22_0;
mov zmm30_1 zmm22_1;
mov zmm30_2 zmm22_2;
mov zmm30_3 zmm22_3;
mov zmm30_4 zmm22_4;
mov zmm30_5 zmm22_5;
mov zmm30_6 zmm22_6;
mov zmm30_7 zmm22_7;
(* vpternlogq $0xd2,%zmm13,%zmm22,%zmm26           #! PC = 0x55555558d7d9 *)
mov table 0xd2@uint8;
inline vpternlogq64 (zmm26_0, zmm22_0, zmm13_0, table);
inline vpternlogq64 (zmm26_1, zmm22_1, zmm13_1, table);
inline vpternlogq64 (zmm26_2, zmm22_2, zmm13_2, table);
inline vpternlogq64 (zmm26_3, zmm22_3, zmm13_3, table);
inline vpternlogq64 (zmm26_4, zmm22_4, zmm13_4, table);
inline vpternlogq64 (zmm26_5, zmm22_5, zmm13_5, table);
inline vpternlogq64 (zmm26_6, zmm22_6, zmm13_6, table);
inline vpternlogq64 (zmm26_7, zmm22_7, zmm13_7, table);
(* vpternlogq $0xd2,%zmm8,%zmm13,%zmm30            #! PC = 0x55555558d7e0 *)
mov table 0xd2@uint8;
inline vpternlogq64 (zmm30_0, zmm13_0, zmm8_0, table);
inline vpternlogq64 (zmm30_1, zmm13_1, zmm8_1, table);
inline vpternlogq64 (zmm30_2, zmm13_2, zmm8_2, table);
inline vpternlogq64 (zmm30_3, zmm13_3, zmm8_3, table);
inline vpternlogq64 (zmm30_4, zmm13_4, zmm8_4, table);
inline vpternlogq64 (zmm30_5, zmm13_5, zmm8_5, table);
inline vpternlogq64 (zmm30_6, zmm13_6, zmm8_6, table);
inline vpternlogq64 (zmm30_7, zmm13_7, zmm8_7, table);
(* vpternlogq $0xd2,%zmm12,%zmm8,%zmm13            #! PC = 0x55555558d7e7 *)
mov table 0xd2@uint8;
inline vpternlogq64 (zmm13_0, zmm8_0, zmm12_0, table);
inline vpternlogq64 (zmm13_1, zmm8_1, zmm12_1, table);
inline vpternlogq64 (zmm13_2, zmm8_2, zmm12_2, table);
inline vpternlogq64 (zmm13_3, zmm8_3, zmm12_3, table);
inline vpternlogq64 (zmm13_4, zmm8_4, zmm12_4, table);
inline vpternlogq64 (zmm13_5, zmm8_5, zmm12_5, table);
inline vpternlogq64 (zmm13_6, zmm8_6, zmm12_6, table);
inline vpternlogq64 (zmm13_7, zmm8_7, zmm12_7, table);
(* vpternlogq $0xd2,%zmm6,%zmm12,%zmm8             #! PC = 0x55555558d7ee *)
mov table 0xd2@uint8;
inline vpternlogq64 (zmm8_0, zmm12_0, zmm6_0, table);
inline vpternlogq64 (zmm8_1, zmm12_1, zmm6_1, table);
inline vpternlogq64 (zmm8_2, zmm12_2, zmm6_2, table);
inline vpternlogq64 (zmm8_3, zmm12_3, zmm6_3, table);
inline vpternlogq64 (zmm8_4, zmm12_4, zmm6_4, table);
inline vpternlogq64 (zmm8_5, zmm12_5, zmm6_5, table);
inline vpternlogq64 (zmm8_6, zmm12_6, zmm6_6, table);
inline vpternlogq64 (zmm8_7, zmm12_7, zmm6_7, table);
(* vpternlogq $0xd2,%zmm22,%zmm6,%zmm12            #! PC = 0x55555558d7f5 *)
mov table 0xd2@uint8;
inline vpternlogq64 (zmm12_0, zmm6_0, zmm22_0, table);
inline vpternlogq64 (zmm12_1, zmm6_1, zmm22_1, table);
inline vpternlogq64 (zmm12_2, zmm6_2, zmm22_2, table);
inline vpternlogq64 (zmm12_3, zmm6_3, zmm22_3, table);
inline vpternlogq64 (zmm12_4, zmm6_4, zmm22_4, table);
inline vpternlogq64 (zmm12_5, zmm6_5, zmm22_5, table);
inline vpternlogq64 (zmm12_6, zmm6_6, zmm22_6, table);
inline vpternlogq64 (zmm12_7, zmm6_7, zmm22_7, table);
(* vmovdqa64 %zmm23,%zmm22                         #! PC = 0x55555558d7fc *)
mov zmm22_0 zmm23_0;
mov zmm22_1 zmm23_1;
mov zmm22_2 zmm23_2;
mov zmm22_3 zmm23_3;
mov zmm22_4 zmm23_4;
mov zmm22_5 zmm23_5;
mov zmm22_6 zmm23_6;
mov zmm22_7 zmm23_7;
(* vmovdqa64 %zmm15,%zmm6                          #! PC = 0x55555558d802 *)
mov zmm6_0 zmm15_0;
mov zmm6_1 zmm15_1;
mov zmm6_2 zmm15_2;
mov zmm6_3 zmm15_3;
mov zmm6_4 zmm15_4;
mov zmm6_5 zmm15_5;
mov zmm6_6 zmm15_6;
mov zmm6_7 zmm15_7;
(* vpternlogq $0xd2,%zmm1,%zmm15,%zmm22            #! PC = 0x55555558d808 *)
mov table 0xd2@uint8;
inline vpternlogq64 (zmm22_0, zmm15_0, zmm1_0, table);
inline vpternlogq64 (zmm22_1, zmm15_1, zmm1_1, table);
inline vpternlogq64 (zmm22_2, zmm15_2, zmm1_2, table);
inline vpternlogq64 (zmm22_3, zmm15_3, zmm1_3, table);
inline vpternlogq64 (zmm22_4, zmm15_4, zmm1_4, table);
inline vpternlogq64 (zmm22_5, zmm15_5, zmm1_5, table);
inline vpternlogq64 (zmm22_6, zmm15_6, zmm1_6, table);
inline vpternlogq64 (zmm22_7, zmm15_7, zmm1_7, table);
(* vpternlogq $0xd2,%zmm5,%zmm1,%zmm6              #! PC = 0x55555558d80f *)
mov table 0xd2@uint8;
inline vpternlogq64 (zmm6_0, zmm1_0, zmm5_0, table);
inline vpternlogq64 (zmm6_1, zmm1_1, zmm5_1, table);
inline vpternlogq64 (zmm6_2, zmm1_2, zmm5_2, table);
inline vpternlogq64 (zmm6_3, zmm1_3, zmm5_3, table);
inline vpternlogq64 (zmm6_4, zmm1_4, zmm5_4, table);
inline vpternlogq64 (zmm6_5, zmm1_5, zmm5_5, table);
inline vpternlogq64 (zmm6_6, zmm1_6, zmm5_6, table);
inline vpternlogq64 (zmm6_7, zmm1_7, zmm5_7, table);
(* vpternlogq $0xd2,%zmm21,%zmm5,%zmm1             #! PC = 0x55555558d816 *)
mov table 0xd2@uint8;
inline vpternlogq64 (zmm1_0, zmm5_0, zmm21_0, table);
inline vpternlogq64 (zmm1_1, zmm5_1, zmm21_1, table);
inline vpternlogq64 (zmm1_2, zmm5_2, zmm21_2, table);
inline vpternlogq64 (zmm1_3, zmm5_3, zmm21_3, table);
inline vpternlogq64 (zmm1_4, zmm5_4, zmm21_4, table);
inline vpternlogq64 (zmm1_5, zmm5_5, zmm21_5, table);
inline vpternlogq64 (zmm1_6, zmm5_6, zmm21_6, table);
inline vpternlogq64 (zmm1_7, zmm5_7, zmm21_7, table);
(* vpternlogq $0xd2,%zmm23,%zmm21,%zmm5            #! PC = 0x55555558d81d *)
mov table 0xd2@uint8;
inline vpternlogq64 (zmm5_0, zmm21_0, zmm23_0, table);
inline vpternlogq64 (zmm5_1, zmm21_1, zmm23_1, table);
inline vpternlogq64 (zmm5_2, zmm21_2, zmm23_2, table);
inline vpternlogq64 (zmm5_3, zmm21_3, zmm23_3, table);
inline vpternlogq64 (zmm5_4, zmm21_4, zmm23_4, table);
inline vpternlogq64 (zmm5_5, zmm21_5, zmm23_5, table);
inline vpternlogq64 (zmm5_6, zmm21_6, zmm23_6, table);
inline vpternlogq64 (zmm5_7, zmm21_7, zmm23_7, table);
(* vpternlogq $0xd2,%zmm15,%zmm23,%zmm21           #! PC = 0x55555558d824 *)
mov table 0xd2@uint8;
inline vpternlogq64 (zmm21_0, zmm23_0, zmm15_0, table);
inline vpternlogq64 (zmm21_1, zmm23_1, zmm15_1, table);
inline vpternlogq64 (zmm21_2, zmm23_2, zmm15_2, table);
inline vpternlogq64 (zmm21_3, zmm23_3, zmm15_3, table);
inline vpternlogq64 (zmm21_4, zmm23_4, zmm15_4, table);
inline vpternlogq64 (zmm21_5, zmm23_5, zmm15_5, table);
inline vpternlogq64 (zmm21_6, zmm23_6, zmm15_6, table);
inline vpternlogq64 (zmm21_7, zmm23_7, zmm15_7, table);
(* vmovdqa64 %zmm29,%zmm23                         #! PC = 0x55555558d82b *)
mov zmm23_0 zmm29_0;
mov zmm23_1 zmm29_1;
mov zmm23_2 zmm29_2;
mov zmm23_3 zmm29_3;
mov zmm23_4 zmm29_4;
mov zmm23_5 zmm29_5;
mov zmm23_6 zmm29_6;
mov zmm23_7 zmm29_7;
(* vmovdqa64 %zmm25,%zmm15                         #! PC = 0x55555558d831 *)
mov zmm15_0 zmm25_0;
mov zmm15_1 zmm25_1;
mov zmm15_2 zmm25_2;
mov zmm15_3 zmm25_3;
mov zmm15_4 zmm25_4;
mov zmm15_5 zmm25_5;
mov zmm15_6 zmm25_6;
mov zmm15_7 zmm25_7;
(* vpternlogq $0xd2,%zmm7,%zmm25,%zmm23            #! PC = 0x55555558d837 *)
mov table 0xd2@uint8;
inline vpternlogq64 (zmm23_0, zmm25_0, zmm7_0, table);
inline vpternlogq64 (zmm23_1, zmm25_1, zmm7_1, table);
inline vpternlogq64 (zmm23_2, zmm25_2, zmm7_2, table);
inline vpternlogq64 (zmm23_3, zmm25_3, zmm7_3, table);
inline vpternlogq64 (zmm23_4, zmm25_4, zmm7_4, table);
inline vpternlogq64 (zmm23_5, zmm25_5, zmm7_5, table);
inline vpternlogq64 (zmm23_6, zmm25_6, zmm7_6, table);
inline vpternlogq64 (zmm23_7, zmm25_7, zmm7_7, table);
(* vpternlogq $0xd2,%zmm9,%zmm7,%zmm15             #! PC = 0x55555558d83e *)
mov table 0xd2@uint8;
inline vpternlogq64 (zmm15_0, zmm7_0, zmm9_0, table);
inline vpternlogq64 (zmm15_1, zmm7_1, zmm9_1, table);
inline vpternlogq64 (zmm15_2, zmm7_2, zmm9_2, table);
inline vpternlogq64 (zmm15_3, zmm7_3, zmm9_3, table);
inline vpternlogq64 (zmm15_4, zmm7_4, zmm9_4, table);
inline vpternlogq64 (zmm15_5, zmm7_5, zmm9_5, table);
inline vpternlogq64 (zmm15_6, zmm7_6, zmm9_6, table);
inline vpternlogq64 (zmm15_7, zmm7_7, zmm9_7, table);
(* vmovdqa64 %zmm18,%zmm31                         #! PC = 0x55555558d845 *)
mov zmm31_0 zmm18_0;
mov zmm31_1 zmm18_1;
mov zmm31_2 zmm18_2;
mov zmm31_3 zmm18_3;
mov zmm31_4 zmm18_4;
mov zmm31_5 zmm18_5;
mov zmm31_6 zmm18_6;
mov zmm31_7 zmm18_7;
(* vpternlogq $0xd2,%zmm0,%zmm9,%zmm7              #! PC = 0x55555558d84b *)
mov table 0xd2@uint8;
inline vpternlogq64 (zmm7_0, zmm9_0, zmm0_0, table);
inline vpternlogq64 (zmm7_1, zmm9_1, zmm0_1, table);
inline vpternlogq64 (zmm7_2, zmm9_2, zmm0_2, table);
inline vpternlogq64 (zmm7_3, zmm9_3, zmm0_3, table);
inline vpternlogq64 (zmm7_4, zmm9_4, zmm0_4, table);
inline vpternlogq64 (zmm7_5, zmm9_5, zmm0_5, table);
inline vpternlogq64 (zmm7_6, zmm9_6, zmm0_6, table);
inline vpternlogq64 (zmm7_7, zmm9_7, zmm0_7, table);
(* vpternlogq $0xd2,%zmm29,%zmm0,%zmm9             #! PC = 0x55555558d852 *)
mov table 0xd2@uint8;
inline vpternlogq64 (zmm9_0, zmm0_0, zmm29_0, table);
inline vpternlogq64 (zmm9_1, zmm0_1, zmm29_1, table);
inline vpternlogq64 (zmm9_2, zmm0_2, zmm29_2, table);
inline vpternlogq64 (zmm9_3, zmm0_3, zmm29_3, table);
inline vpternlogq64 (zmm9_4, zmm0_4, zmm29_4, table);
inline vpternlogq64 (zmm9_5, zmm0_5, zmm29_5, table);
inline vpternlogq64 (zmm9_6, zmm0_6, zmm29_6, table);
inline vpternlogq64 (zmm9_7, zmm0_7, zmm29_7, table);
(* vpternlogq $0xd2,%zmm25,%zmm29,%zmm0            #! PC = 0x55555558d859 *)
mov table 0xd2@uint8;
inline vpternlogq64 (zmm0_0, zmm29_0, zmm25_0, table);
inline vpternlogq64 (zmm0_1, zmm29_1, zmm25_1, table);
inline vpternlogq64 (zmm0_2, zmm29_2, zmm25_2, table);
inline vpternlogq64 (zmm0_3, zmm29_3, zmm25_3, table);
inline vpternlogq64 (zmm0_4, zmm29_4, zmm25_4, table);
inline vpternlogq64 (zmm0_5, zmm29_5, zmm25_5, table);
inline vpternlogq64 (zmm0_6, zmm29_6, zmm25_6, table);
inline vpternlogq64 (zmm0_7, zmm29_7, zmm25_7, table);
(* vmovdqa64 %zmm17,%zmm25                         #! PC = 0x55555558d860 *)
mov zmm25_0 zmm17_0;
mov zmm25_1 zmm17_1;
mov zmm25_2 zmm17_2;
mov zmm25_3 zmm17_3;
mov zmm25_4 zmm17_4;
mov zmm25_5 zmm17_5;
mov zmm25_6 zmm17_6;
mov zmm25_7 zmm17_7;
(* vpternlogq $0xd2,%zmm4,%zmm16,%zmm31            #! PC = 0x55555558d866 *)
mov table 0xd2@uint8;
inline vpternlogq64 (zmm31_0, zmm16_0, zmm4_0, table);
inline vpternlogq64 (zmm31_1, zmm16_1, zmm4_1, table);
inline vpternlogq64 (zmm31_2, zmm16_2, zmm4_2, table);
inline vpternlogq64 (zmm31_3, zmm16_3, zmm4_3, table);
inline vpternlogq64 (zmm31_4, zmm16_4, zmm4_4, table);
inline vpternlogq64 (zmm31_5, zmm16_5, zmm4_5, table);
inline vpternlogq64 (zmm31_6, zmm16_6, zmm4_6, table);
inline vpternlogq64 (zmm31_7, zmm16_7, zmm4_7, table);
(* vpternlogq $0xd2,%zmm16,%zmm18,%zmm25           #! PC = 0x55555558d86d *)
mov table 0xd2@uint8;
inline vpternlogq64 (zmm25_0, zmm18_0, zmm16_0, table);
inline vpternlogq64 (zmm25_1, zmm18_1, zmm16_1, table);
inline vpternlogq64 (zmm25_2, zmm18_2, zmm16_2, table);
inline vpternlogq64 (zmm25_3, zmm18_3, zmm16_3, table);
inline vpternlogq64 (zmm25_4, zmm18_4, zmm16_4, table);
inline vpternlogq64 (zmm25_5, zmm18_5, zmm16_5, table);
inline vpternlogq64 (zmm25_6, zmm18_6, zmm16_6, table);
inline vpternlogq64 (zmm25_7, zmm18_7, zmm16_7, table);
(* vmovdqa64 %zmm1,%zmm20                          #! PC = 0x55555558d874 *)
mov zmm20_0 zmm1_0;
mov zmm20_1 zmm1_1;
mov zmm20_2 zmm1_2;
mov zmm20_3 zmm1_3;
mov zmm20_4 zmm1_4;
mov zmm20_5 zmm1_5;
mov zmm20_6 zmm1_6;
mov zmm20_7 zmm1_7;
(* vpternlogq $0xd2,%zmm14,%zmm4,%zmm16            #! PC = 0x55555558d87a *)
mov table 0xd2@uint8;
inline vpternlogq64 (zmm16_0, zmm4_0, zmm14_0, table);
inline vpternlogq64 (zmm16_1, zmm4_1, zmm14_1, table);
inline vpternlogq64 (zmm16_2, zmm4_2, zmm14_2, table);
inline vpternlogq64 (zmm16_3, zmm4_3, zmm14_3, table);
inline vpternlogq64 (zmm16_4, zmm4_4, zmm14_4, table);
inline vpternlogq64 (zmm16_5, zmm4_5, zmm14_5, table);
inline vpternlogq64 (zmm16_6, zmm4_6, zmm14_6, table);
inline vpternlogq64 (zmm16_7, zmm4_7, zmm14_7, table);
(* vpternlogq $0x96,%zmm13,%zmm16,%zmm20           #! PC = 0x55555558d881 *)
mov table 0x96@uint8;
inline vpternlogq64 (zmm20_0, zmm16_0, zmm13_0, table);
inline vpternlogq64 (zmm20_1, zmm16_1, zmm13_1, table);
inline vpternlogq64 (zmm20_2, zmm16_2, zmm13_2, table);
inline vpternlogq64 (zmm20_3, zmm16_3, zmm13_3, table);
inline vpternlogq64 (zmm20_4, zmm16_4, zmm13_4, table);
inline vpternlogq64 (zmm20_5, zmm16_5, zmm13_5, table);
inline vpternlogq64 (zmm20_6, zmm16_6, zmm13_6, table);
inline vpternlogq64 (zmm20_7, zmm16_7, zmm13_7, table);
(* vpternlogq $0x96,%zmm2,%zmm7,%zmm20             #! PC = 0x55555558d888 *)
mov table 0x96@uint8;
inline vpternlogq64 (zmm20_0, zmm7_0, zmm2_0, table);
inline vpternlogq64 (zmm20_1, zmm7_1, zmm2_1, table);
inline vpternlogq64 (zmm20_2, zmm7_2, zmm2_2, table);
inline vpternlogq64 (zmm20_3, zmm7_3, zmm2_3, table);
inline vpternlogq64 (zmm20_4, zmm7_4, zmm2_4, table);
inline vpternlogq64 (zmm20_5, zmm7_5, zmm2_5, table);
inline vpternlogq64 (zmm20_6, zmm7_6, zmm2_6, table);
inline vpternlogq64 (zmm20_7, zmm7_7, zmm2_7, table);
(* vpternlogq $0xd2,%zmm17,%zmm14,%zmm4            #! PC = 0x55555558d88f *)
mov table 0xd2@uint8;
inline vpternlogq64 (zmm4_0, zmm14_0, zmm17_0, table);
inline vpternlogq64 (zmm4_1, zmm14_1, zmm17_1, table);
inline vpternlogq64 (zmm4_2, zmm14_2, zmm17_2, table);
inline vpternlogq64 (zmm4_3, zmm14_3, zmm17_3, table);
inline vpternlogq64 (zmm4_4, zmm14_4, zmm17_4, table);
inline vpternlogq64 (zmm4_5, zmm14_5, zmm17_5, table);
inline vpternlogq64 (zmm4_6, zmm14_6, zmm17_6, table);
inline vpternlogq64 (zmm4_7, zmm14_7, zmm17_7, table);
(* vpternlogq $0xd2,%zmm18,%zmm17,%zmm14           #! PC = 0x55555558d896 *)
mov table 0xd2@uint8;
inline vpternlogq64 (zmm14_0, zmm17_0, zmm18_0, table);
inline vpternlogq64 (zmm14_1, zmm17_1, zmm18_1, table);
inline vpternlogq64 (zmm14_2, zmm17_2, zmm18_2, table);
inline vpternlogq64 (zmm14_3, zmm17_3, zmm18_3, table);
inline vpternlogq64 (zmm14_4, zmm17_4, zmm18_4, table);
inline vpternlogq64 (zmm14_5, zmm17_5, zmm18_5, table);
inline vpternlogq64 (zmm14_6, zmm17_6, zmm18_6, table);
inline vpternlogq64 (zmm14_7, zmm17_7, zmm18_7, table);
(* vprolq $0x1,%zmm20,%zmm18                       #! PC = 0x55555558d89d *)
rol zmm18_0 zmm20_0 0x1;
rol zmm18_1 zmm20_1 0x1;
rol zmm18_2 zmm20_2 0x1;
rol zmm18_3 zmm20_3 0x1;
rol zmm18_4 zmm20_4 0x1;
rol zmm18_5 zmm20_5 0x1;
rol zmm18_6 zmm20_6 0x1;
rol zmm18_7 zmm20_7 0x1;
(* vmovdqa64 %zmm9,%zmm28                          #! PC = 0x55555558d8a4 *)
mov zmm28_0 zmm9_0;
mov zmm28_1 zmm9_1;
mov zmm28_2 zmm9_2;
mov zmm28_3 zmm9_3;
mov zmm28_4 zmm9_4;
mov zmm28_5 zmm9_5;
mov zmm28_6 zmm9_6;
mov zmm28_7 zmm9_7;
(* vpternlogq $0x96,%zmm5,%zmm11,%zmm28            #! PC = 0x55555558d8aa *)
mov table 0x96@uint8;
inline vpternlogq64 (zmm28_0, zmm11_0, zmm5_0, table);
inline vpternlogq64 (zmm28_1, zmm11_1, zmm5_1, table);
inline vpternlogq64 (zmm28_2, zmm11_2, zmm5_2, table);
inline vpternlogq64 (zmm28_3, zmm11_3, zmm5_3, table);
inline vpternlogq64 (zmm28_4, zmm11_4, zmm5_4, table);
inline vpternlogq64 (zmm28_5, zmm11_5, zmm5_5, table);
inline vpternlogq64 (zmm28_6, zmm11_6, zmm5_6, table);
inline vpternlogq64 (zmm28_7, zmm11_7, zmm5_7, table);
(* vpternlogq $0x96,%zmm8,%zmm4,%zmm28             #! PC = 0x55555558d8b1 *)
mov table 0x96@uint8;
inline vpternlogq64 (zmm28_0, zmm4_0, zmm8_0, table);
inline vpternlogq64 (zmm28_1, zmm4_1, zmm8_1, table);
inline vpternlogq64 (zmm28_2, zmm4_2, zmm8_2, table);
inline vpternlogq64 (zmm28_3, zmm4_3, zmm8_3, table);
inline vpternlogq64 (zmm28_4, zmm4_4, zmm8_4, table);
inline vpternlogq64 (zmm28_5, zmm4_5, zmm8_5, table);
inline vpternlogq64 (zmm28_6, zmm4_6, zmm8_6, table);
inline vpternlogq64 (zmm28_7, zmm4_7, zmm8_7, table);
(* vmovdqa64 %zmm14,%zmm29                         #! PC = 0x55555558d8b8 *)
mov zmm29_0 zmm14_0;
mov zmm29_1 zmm14_1;
mov zmm29_2 zmm14_2;
mov zmm29_3 zmm14_3;
mov zmm29_4 zmm14_4;
mov zmm29_5 zmm14_5;
mov zmm29_6 zmm14_6;
mov zmm29_7 zmm14_7;
(* vpternlogq $0x96,%zmm0,%zmm12,%zmm29            #! PC = 0x55555558d8be *)
mov table 0x96@uint8;
inline vpternlogq64 (zmm29_0, zmm12_0, zmm0_0, table);
inline vpternlogq64 (zmm29_1, zmm12_1, zmm0_1, table);
inline vpternlogq64 (zmm29_2, zmm12_2, zmm0_2, table);
inline vpternlogq64 (zmm29_3, zmm12_3, zmm0_3, table);
inline vpternlogq64 (zmm29_4, zmm12_4, zmm0_4, table);
inline vpternlogq64 (zmm29_5, zmm12_5, zmm0_5, table);
inline vpternlogq64 (zmm29_6, zmm12_6, zmm0_6, table);
inline vpternlogq64 (zmm29_7, zmm12_7, zmm0_7, table);
(* vmovdqa64 %zmm18,0x148(%rsp)                    #! EA = L0x7fffffffd600; PC = 0x55555558d8c5 *)
mov L0x7fffffffd600 zmm18_0;
mov L0x7fffffffd608 zmm18_1;
mov L0x7fffffffd610 zmm18_2;
mov L0x7fffffffd618 zmm18_3;
mov L0x7fffffffd620 zmm18_4;
mov L0x7fffffffd628 zmm18_5;
mov L0x7fffffffd630 zmm18_6;
mov L0x7fffffffd638 zmm18_7;
(* vprolq $0x1,%zmm28,%zmm18                       #! PC = 0x55555558d8d0 *)
rol zmm18_0 zmm28_0 0x1;
rol zmm18_1 zmm28_1 0x1;
rol zmm18_2 zmm28_2 0x1;
rol zmm18_3 zmm28_3 0x1;
rol zmm18_4 zmm28_4 0x1;
rol zmm18_5 zmm28_5 0x1;
rol zmm18_6 zmm28_6 0x1;
rol zmm18_7 zmm28_7 0x1;
(* vpternlogq $0x96,%zmm21,%zmm10,%zmm29           #! PC = 0x55555558d8d7 *)
mov table 0x96@uint8;
inline vpternlogq64 (zmm29_0, zmm10_0, zmm21_0, table);
inline vpternlogq64 (zmm29_1, zmm10_1, zmm21_1, table);
inline vpternlogq64 (zmm29_2, zmm10_2, zmm21_2, table);
inline vpternlogq64 (zmm29_3, zmm10_3, zmm21_3, table);
inline vpternlogq64 (zmm29_4, zmm10_4, zmm21_4, table);
inline vpternlogq64 (zmm29_5, zmm10_5, zmm21_5, table);
inline vpternlogq64 (zmm29_6, zmm10_6, zmm21_6, table);
inline vpternlogq64 (zmm29_7, zmm10_7, zmm21_7, table);
(* vmovdqa64 %zmm24,%zmm17                         #! PC = 0x55555558d8de *)
mov zmm17_0 zmm24_0;
mov zmm17_1 zmm24_1;
mov zmm17_2 zmm24_2;
mov zmm17_3 zmm24_3;
mov zmm17_4 zmm24_4;
mov zmm17_5 zmm24_5;
mov zmm17_6 zmm24_6;
mov zmm17_7 zmm24_7;
(* vpternlogq $0x96,%zmm25,%zmm22,%zmm17           #! PC = 0x55555558d8e4 *)
mov table 0x96@uint8;
inline vpternlogq64 (zmm17_0, zmm22_0, zmm25_0, table);
inline vpternlogq64 (zmm17_1, zmm22_1, zmm25_1, table);
inline vpternlogq64 (zmm17_2, zmm22_2, zmm25_2, table);
inline vpternlogq64 (zmm17_3, zmm22_3, zmm25_3, table);
inline vpternlogq64 (zmm17_4, zmm22_4, zmm25_4, table);
inline vpternlogq64 (zmm17_5, zmm22_5, zmm25_5, table);
inline vpternlogq64 (zmm17_6, zmm22_6, zmm25_6, table);
inline vpternlogq64 (zmm17_7, zmm22_7, zmm25_7, table);
(* vpternlogq $0x96,%zmm23,%zmm26,%zmm17           #! PC = 0x55555558d8eb *)
mov table 0x96@uint8;
inline vpternlogq64 (zmm17_0, zmm26_0, zmm23_0, table);
inline vpternlogq64 (zmm17_1, zmm26_1, zmm23_1, table);
inline vpternlogq64 (zmm17_2, zmm26_2, zmm23_2, table);
inline vpternlogq64 (zmm17_3, zmm26_3, zmm23_3, table);
inline vpternlogq64 (zmm17_4, zmm26_4, zmm23_4, table);
inline vpternlogq64 (zmm17_5, zmm26_5, zmm23_5, table);
inline vpternlogq64 (zmm17_6, zmm26_6, zmm23_6, table);
inline vpternlogq64 (zmm17_7, zmm26_7, zmm23_7, table);
(* vmovdqa64 %zmm30,%zmm19                         #! PC = 0x55555558d8f2 *)
mov zmm19_0 zmm30_0;
mov zmm19_1 zmm30_1;
mov zmm19_2 zmm30_2;
mov zmm19_3 zmm30_3;
mov zmm19_4 zmm30_4;
mov zmm19_5 zmm30_5;
mov zmm19_6 zmm30_6;
mov zmm19_7 zmm30_7;
(* vmovdqa64 %zmm18,0x108(%rsp)                    #! EA = L0x7fffffffd5c0; PC = 0x55555558d8f8 *)
mov L0x7fffffffd5c0 zmm18_0;
mov L0x7fffffffd5c8 zmm18_1;
mov L0x7fffffffd5d0 zmm18_2;
mov L0x7fffffffd5d8 zmm18_3;
mov L0x7fffffffd5e0 zmm18_4;
mov L0x7fffffffd5e8 zmm18_5;
mov L0x7fffffffd5f0 zmm18_6;
mov L0x7fffffffd5f8 zmm18_7;
(* vprolq $0x1,%zmm29,%zmm18                       #! PC = 0x55555558d903 *)
rol zmm18_0 zmm29_0 0x1;
rol zmm18_1 zmm29_1 0x1;
rol zmm18_2 zmm29_2 0x1;
rol zmm18_3 zmm29_3 0x1;
rol zmm18_4 zmm29_4 0x1;
rol zmm18_5 zmm29_5 0x1;
rol zmm18_6 zmm29_6 0x1;
rol zmm18_7 zmm29_7 0x1;
(* vpternlogq $0x96,%zmm27,%zmm15,%zmm19           #! PC = 0x55555558d90a *)
mov table 0x96@uint8;
inline vpternlogq64 (zmm19_0, zmm15_0, zmm27_0, table);
inline vpternlogq64 (zmm19_1, zmm15_1, zmm27_1, table);
inline vpternlogq64 (zmm19_2, zmm15_2, zmm27_2, table);
inline vpternlogq64 (zmm19_3, zmm15_3, zmm27_3, table);
inline vpternlogq64 (zmm19_4, zmm15_4, zmm27_4, table);
inline vpternlogq64 (zmm19_5, zmm15_5, zmm27_5, table);
inline vpternlogq64 (zmm19_6, zmm15_6, zmm27_6, table);
inline vpternlogq64 (zmm19_7, zmm15_7, zmm27_7, table);
(* vpternlogq $0x96,%zmm31,%zmm6,%zmm19            #! PC = 0x55555558d911 *)
mov table 0x96@uint8;
inline vpternlogq64 (zmm19_0, zmm6_0, zmm31_0, table);
inline vpternlogq64 (zmm19_1, zmm6_1, zmm31_1, table);
inline vpternlogq64 (zmm19_2, zmm6_2, zmm31_2, table);
inline vpternlogq64 (zmm19_3, zmm6_3, zmm31_3, table);
inline vpternlogq64 (zmm19_4, zmm6_4, zmm31_4, table);
inline vpternlogq64 (zmm19_5, zmm6_5, zmm31_5, table);
inline vpternlogq64 (zmm19_6, zmm6_6, zmm31_6, table);
inline vpternlogq64 (zmm19_7, zmm6_7, zmm31_7, table);
(* vprolq $0x1,%zmm19,%zmm3                        #! PC = 0x55555558d918 *)
rol zmm3_0 zmm19_0 0x1;
rol zmm3_1 zmm19_1 0x1;
rol zmm3_2 zmm19_2 0x1;
rol zmm3_3 zmm19_3 0x1;
rol zmm3_4 zmm19_4 0x1;
rol zmm3_5 zmm19_5 0x1;
rol zmm3_6 zmm19_6 0x1;
rol zmm3_7 zmm19_7 0x1;
(* vpxord 0x108(%rsp),%zmm19,%zmm19                #! EA = L0x7fffffffd5c0; Value = 0xbe2609a5ce62c710; PC = 0x55555558d91f *)
xor zmm19_0@uint64 zmm19_0 L0x7fffffffd5c0;
xor zmm19_1@uint64 zmm19_1 L0x7fffffffd5c8;
xor zmm19_2@uint64 zmm19_2 L0x7fffffffd5d0;
xor zmm19_3@uint64 zmm19_3 L0x7fffffffd5d8;
xor zmm19_4@uint64 zmm19_4 L0x7fffffffd5e0;
xor zmm19_5@uint64 zmm19_5 L0x7fffffffd5e8;
xor zmm19_6@uint64 zmm19_6 L0x7fffffffd5f0;
xor zmm19_7@uint64 zmm19_7 L0x7fffffffd5f8;
(* movabs $0x8000000000008089,%r8                  #! PC = 0x55555558d92a *)
mov r8 0x8000000000008089@uint64;
(* vmovdqa64 %zmm18,0xc8(%rsp)                     #! EA = L0x7fffffffd580; PC = 0x55555558d934 *)
mov L0x7fffffffd580 zmm18_0;
mov L0x7fffffffd588 zmm18_1;
mov L0x7fffffffd590 zmm18_2;
mov L0x7fffffffd598 zmm18_3;
mov L0x7fffffffd5a0 zmm18_4;
mov L0x7fffffffd5a8 zmm18_5;
mov L0x7fffffffd5b0 zmm18_6;
mov L0x7fffffffd5b8 zmm18_7;
(* vprolq $0x1,%zmm17,%zmm18                       #! PC = 0x55555558d93f *)
rol zmm18_0 zmm17_0 0x1;
rol zmm18_1 zmm17_1 0x1;
rol zmm18_2 zmm17_2 0x1;
rol zmm18_3 zmm17_3 0x1;
rol zmm18_4 zmm17_4 0x1;
rol zmm18_5 zmm17_5 0x1;
rol zmm18_6 zmm17_6 0x1;
rol zmm18_7 zmm17_7 0x1;
(* vpxord 0x148(%rsp),%zmm17,%zmm17                #! EA = L0x7fffffffd600; Value = 0xc95efd66f2864ad6; PC = 0x55555558d946 *)
xor zmm17_0@uint64 zmm17_0 L0x7fffffffd600;
xor zmm17_1@uint64 zmm17_1 L0x7fffffffd608;
xor zmm17_2@uint64 zmm17_2 L0x7fffffffd610;
xor zmm17_3@uint64 zmm17_3 L0x7fffffffd618;
xor zmm17_4@uint64 zmm17_4 L0x7fffffffd620;
xor zmm17_5@uint64 zmm17_5 L0x7fffffffd628;
xor zmm17_6@uint64 zmm17_6 L0x7fffffffd630;
xor zmm17_7@uint64 zmm17_7 L0x7fffffffd638;
(* vpxord 0xc8(%rsp),%zmm20,%zmm20                 #! EA = L0x7fffffffd580; Value = 0x65513fab4ba93354; PC = 0x55555558d951 *)
xor zmm20_0@uint64 zmm20_0 L0x7fffffffd580;
xor zmm20_1@uint64 zmm20_1 L0x7fffffffd588;
xor zmm20_2@uint64 zmm20_2 L0x7fffffffd590;
xor zmm20_3@uint64 zmm20_3 L0x7fffffffd598;
xor zmm20_4@uint64 zmm20_4 L0x7fffffffd5a0;
xor zmm20_5@uint64 zmm20_5 L0x7fffffffd5a8;
xor zmm20_6@uint64 zmm20_6 L0x7fffffffd5b0;
xor zmm20_7@uint64 zmm20_7 L0x7fffffffd5b8;
(* vpxord %zmm30,%zmm17,%zmm30                     #! PC = 0x55555558d95c *)
xor zmm30_0@uint64 zmm17_0 zmm30_0;
xor zmm30_1@uint64 zmm17_1 zmm30_1;
xor zmm30_2@uint64 zmm17_2 zmm30_2;
xor zmm30_3@uint64 zmm17_3 zmm30_3;
xor zmm30_4@uint64 zmm17_4 zmm30_4;
xor zmm30_5@uint64 zmm17_5 zmm30_5;
xor zmm30_6@uint64 zmm17_6 zmm30_6;
xor zmm30_7@uint64 zmm17_7 zmm30_7;
(* vprorq $0x14,%zmm30,%zmm30                      #! PC = 0x55555558d962 *)
ror zmm30_0 zmm30_0 0x14;
ror zmm30_1 zmm30_1 0x14;
ror zmm30_2 zmm30_2 0x14;
ror zmm30_3 zmm30_3 0x14;
ror zmm30_4 zmm30_4 0x14;
ror zmm30_5 zmm30_5 0x14;
ror zmm30_6 zmm30_6 0x14;
ror zmm30_7 zmm30_7 0x14;
(* vpxord %zmm1,%zmm19,%zmm1                       #! PC = 0x55555558d969 *)
xor zmm1_0@uint64 zmm19_0 zmm1_0;
xor zmm1_1@uint64 zmm19_1 zmm1_1;
xor zmm1_2@uint64 zmm19_2 zmm1_2;
xor zmm1_3@uint64 zmm19_3 zmm1_3;
xor zmm1_4@uint64 zmm19_4 zmm1_4;
xor zmm1_5@uint64 zmm19_5 zmm1_5;
xor zmm1_6@uint64 zmm19_6 zmm1_6;
xor zmm1_7@uint64 zmm19_7 zmm1_7;
(* vpxord %zmm28,%zmm18,%zmm18                     #! PC = 0x55555558d96f *)
xor zmm18_0@uint64 zmm18_0 zmm28_0;
xor zmm18_1@uint64 zmm18_1 zmm28_1;
xor zmm18_2@uint64 zmm18_2 zmm28_2;
xor zmm18_3@uint64 zmm18_3 zmm28_3;
xor zmm18_4@uint64 zmm18_4 zmm28_4;
xor zmm18_5@uint64 zmm18_5 zmm28_5;
xor zmm18_6@uint64 zmm18_6 zmm28_6;
xor zmm18_7@uint64 zmm18_7 zmm28_7;
(* vpxord %zmm9,%zmm20,%zmm9                       #! PC = 0x55555558d975 *)
xor zmm9_0@uint64 zmm20_0 zmm9_0;
xor zmm9_1@uint64 zmm20_1 zmm9_1;
xor zmm9_2@uint64 zmm20_2 zmm9_2;
xor zmm9_3@uint64 zmm20_3 zmm9_3;
xor zmm9_4@uint64 zmm20_4 zmm9_4;
xor zmm9_5@uint64 zmm20_5 zmm9_5;
xor zmm9_6@uint64 zmm20_6 zmm9_6;
xor zmm9_7@uint64 zmm20_7 zmm9_7;
(* vpxord %zmm14,%zmm18,%zmm14                     #! PC = 0x55555558d97b *)
xor zmm14_0@uint64 zmm18_0 zmm14_0;
xor zmm14_1@uint64 zmm18_1 zmm14_1;
xor zmm14_2@uint64 zmm18_2 zmm14_2;
xor zmm14_3@uint64 zmm18_3 zmm14_3;
xor zmm14_4@uint64 zmm18_4 zmm14_4;
xor zmm14_5@uint64 zmm18_5 zmm14_5;
xor zmm14_6@uint64 zmm18_6 zmm14_6;
xor zmm14_7@uint64 zmm18_7 zmm14_7;
(* vpxord %zmm29,%zmm3,%zmm3                       #! PC = 0x55555558d981 *)
xor zmm3_0@uint64 zmm3_0 zmm29_0;
xor zmm3_1@uint64 zmm3_1 zmm29_1;
xor zmm3_2@uint64 zmm3_2 zmm29_2;
xor zmm3_3@uint64 zmm3_3 zmm29_3;
xor zmm3_4@uint64 zmm3_4 zmm29_4;
xor zmm3_5@uint64 zmm3_5 zmm29_5;
xor zmm3_6@uint64 zmm3_6 zmm29_6;
xor zmm3_7@uint64 zmm3_7 zmm29_7;
(* vprorq $0x15,%zmm1,%zmm1                        #! PC = 0x55555558d987 *)
ror zmm1_0 zmm1_0 0x15;
ror zmm1_1 zmm1_1 0x15;
ror zmm1_2 zmm1_2 0x15;
ror zmm1_3 zmm1_3 0x15;
ror zmm1_4 zmm1_4 0x15;
ror zmm1_5 zmm1_5 0x15;
ror zmm1_6 zmm1_6 0x15;
ror zmm1_7 zmm1_7 0x15;
(* vprolq $0x15,%zmm9,%zmm9                        #! PC = 0x55555558d98e *)
rol zmm9_0 zmm9_0 0x15;
rol zmm9_1 zmm9_1 0x15;
rol zmm9_2 zmm9_2 0x15;
rol zmm9_3 zmm9_3 0x15;
rol zmm9_4 zmm9_4 0x15;
rol zmm9_5 zmm9_5 0x15;
rol zmm9_6 zmm9_6 0x15;
rol zmm9_7 zmm9_7 0x15;
(* vprolq $0xe,%zmm14,%zmm14                       #! PC = 0x55555558d995 *)
rol zmm14_0 zmm14_0 0xe;
rol zmm14_1 zmm14_1 0xe;
rol zmm14_2 zmm14_2 0xe;
rol zmm14_3 zmm14_3 0xe;
rol zmm14_4 zmm14_4 0xe;
rol zmm14_5 zmm14_5 0xe;
rol zmm14_6 zmm14_6 0xe;
rol zmm14_7 zmm14_7 0xe;
(* vpxord %zmm11,%zmm20,%zmm11                     #! PC = 0x55555558d99c *)
xor zmm11_0@uint64 zmm20_0 zmm11_0;
xor zmm11_1@uint64 zmm20_1 zmm11_1;
xor zmm11_2@uint64 zmm20_2 zmm11_2;
xor zmm11_3@uint64 zmm20_3 zmm11_3;
xor zmm11_4@uint64 zmm20_4 zmm11_4;
xor zmm11_5@uint64 zmm20_5 zmm11_5;
xor zmm11_6@uint64 zmm20_6 zmm11_6;
xor zmm11_7@uint64 zmm20_7 zmm11_7;
(* vpxord %zmm12,%zmm18,%zmm12                     #! PC = 0x55555558d9a2 *)
xor zmm12_0@uint64 zmm18_0 zmm12_0;
xor zmm12_1@uint64 zmm18_1 zmm12_1;
xor zmm12_2@uint64 zmm18_2 zmm12_2;
xor zmm12_3@uint64 zmm18_3 zmm12_3;
xor zmm12_4@uint64 zmm18_4 zmm12_4;
xor zmm12_5@uint64 zmm18_5 zmm12_5;
xor zmm12_6@uint64 zmm18_6 zmm12_6;
xor zmm12_7@uint64 zmm18_7 zmm12_7;
(* vprolq $0x1c,%zmm11,%zmm11                      #! PC = 0x55555558d9a8 *)
rol zmm11_0 zmm11_0 0x1c;
rol zmm11_1 zmm11_1 0x1c;
rol zmm11_2 zmm11_2 0x1c;
rol zmm11_3 zmm11_3 0x1c;
rol zmm11_4 zmm11_4 0x1c;
rol zmm11_5 zmm11_5 0x1c;
rol zmm11_6 zmm11_6 0x1c;
rol zmm11_7 zmm11_7 0x1c;
(* vprolq $0x14,%zmm12,%zmm12                      #! PC = 0x55555558d9af *)
rol zmm12_0 zmm12_0 0x14;
rol zmm12_1 zmm12_1 0x14;
rol zmm12_2 zmm12_2 0x14;
rol zmm12_3 zmm12_3 0x14;
rol zmm12_4 zmm12_4 0x14;
rol zmm12_5 zmm12_5 0x14;
rol zmm12_6 zmm12_6 0x14;
rol zmm12_7 zmm12_7 0x14;
(* vpxord %zmm22,%zmm3,%zmm22                      #! PC = 0x55555558d9b6 *)
xor zmm22_0@uint64 zmm3_0 zmm22_0;
xor zmm22_1@uint64 zmm3_1 zmm22_1;
xor zmm22_2@uint64 zmm3_2 zmm22_2;
xor zmm22_3@uint64 zmm3_3 zmm22_3;
xor zmm22_4@uint64 zmm3_4 zmm22_4;
xor zmm22_5@uint64 zmm3_5 zmm22_5;
xor zmm22_6@uint64 zmm3_6 zmm22_6;
xor zmm22_7@uint64 zmm3_7 zmm22_7;
(* vpxord %zmm15,%zmm17,%zmm15                     #! PC = 0x55555558d9bc *)
xor zmm15_0@uint64 zmm17_0 zmm15_0;
xor zmm15_1@uint64 zmm17_1 zmm15_1;
xor zmm15_2@uint64 zmm17_2 zmm15_2;
xor zmm15_3@uint64 zmm17_3 zmm15_3;
xor zmm15_4@uint64 zmm17_4 zmm15_4;
xor zmm15_5@uint64 zmm17_5 zmm15_5;
xor zmm15_6@uint64 zmm17_6 zmm15_6;
xor zmm15_7@uint64 zmm17_7 zmm15_7;
(* vpxord %zmm16,%zmm19,%zmm16                     #! PC = 0x55555558d9c2 *)
xor zmm16_0@uint64 zmm19_0 zmm16_0;
xor zmm16_1@uint64 zmm19_1 zmm16_1;
xor zmm16_2@uint64 zmm19_2 zmm16_2;
xor zmm16_3@uint64 zmm19_3 zmm16_3;
xor zmm16_4@uint64 zmm19_4 zmm16_4;
xor zmm16_5@uint64 zmm19_5 zmm16_5;
xor zmm16_6@uint64 zmm19_6 zmm16_6;
xor zmm16_7@uint64 zmm19_7 zmm16_7;
(* vpxord %zmm27,%zmm17,%zmm27                     #! PC = 0x55555558d9c8 *)
xor zmm27_0@uint64 zmm17_0 zmm27_0;
xor zmm27_1@uint64 zmm17_1 zmm27_1;
xor zmm27_2@uint64 zmm17_2 zmm27_2;
xor zmm27_3@uint64 zmm17_3 zmm27_3;
xor zmm27_4@uint64 zmm17_4 zmm27_4;
xor zmm27_5@uint64 zmm17_5 zmm27_5;
xor zmm27_6@uint64 zmm17_6 zmm27_6;
xor zmm27_7@uint64 zmm17_7 zmm27_7;
(* vpxord %zmm13,%zmm19,%zmm13                     #! PC = 0x55555558d9ce *)
xor zmm13_0@uint64 zmm19_0 zmm13_0;
xor zmm13_1@uint64 zmm19_1 zmm13_1;
xor zmm13_2@uint64 zmm19_2 zmm13_2;
xor zmm13_3@uint64 zmm19_3 zmm13_3;
xor zmm13_4@uint64 zmm19_4 zmm13_4;
xor zmm13_5@uint64 zmm19_5 zmm13_5;
xor zmm13_6@uint64 zmm19_6 zmm13_6;
xor zmm13_7@uint64 zmm19_7 zmm13_7;
(* vpxord %zmm5,%zmm20,%zmm5                       #! PC = 0x55555558d9d4 *)
xor zmm5_0@uint64 zmm20_0 zmm5_0;
xor zmm5_1@uint64 zmm20_1 zmm5_1;
xor zmm5_2@uint64 zmm20_2 zmm5_2;
xor zmm5_3@uint64 zmm20_3 zmm5_3;
xor zmm5_4@uint64 zmm20_4 zmm5_4;
xor zmm5_5@uint64 zmm20_5 zmm5_5;
xor zmm5_6@uint64 zmm20_6 zmm5_6;
xor zmm5_7@uint64 zmm20_7 zmm5_7;
(* vpxord %zmm7,%zmm19,%zmm7                       #! PC = 0x55555558d9da *)
xor zmm7_0@uint64 zmm19_0 zmm7_0;
xor zmm7_1@uint64 zmm19_1 zmm7_1;
xor zmm7_2@uint64 zmm19_2 zmm7_2;
xor zmm7_3@uint64 zmm19_3 zmm7_3;
xor zmm7_4@uint64 zmm19_4 zmm7_4;
xor zmm7_5@uint64 zmm19_5 zmm7_5;
xor zmm7_6@uint64 zmm19_6 zmm7_6;
xor zmm7_7@uint64 zmm19_7 zmm7_7;
(* vpxord %zmm4,%zmm20,%zmm4                       #! PC = 0x55555558d9e0 *)
xor zmm4_0@uint64 zmm20_0 zmm4_0;
xor zmm4_1@uint64 zmm20_1 zmm4_1;
xor zmm4_2@uint64 zmm20_2 zmm4_2;
xor zmm4_3@uint64 zmm20_3 zmm4_3;
xor zmm4_4@uint64 zmm20_4 zmm4_4;
xor zmm4_5@uint64 zmm20_5 zmm4_5;
xor zmm4_6@uint64 zmm20_6 zmm4_6;
xor zmm4_7@uint64 zmm20_7 zmm4_7;
(* vpxord %zmm2,%zmm19,%zmm19                      #! PC = 0x55555558d9e6 *)
xor zmm19_0@uint64 zmm19_0 zmm2_0;
xor zmm19_1@uint64 zmm19_1 zmm2_1;
xor zmm19_2@uint64 zmm19_2 zmm2_2;
xor zmm19_3@uint64 zmm19_3 zmm2_3;
xor zmm19_4@uint64 zmm19_4 zmm2_4;
xor zmm19_5@uint64 zmm19_5 zmm2_5;
xor zmm19_6@uint64 zmm19_6 zmm2_6;
xor zmm19_7@uint64 zmm19_7 zmm2_7;
(* vpxord %zmm8,%zmm20,%zmm20                      #! PC = 0x55555558d9ec *)
xor zmm20_0@uint64 zmm20_0 zmm8_0;
xor zmm20_1@uint64 zmm20_1 zmm8_1;
xor zmm20_2@uint64 zmm20_2 zmm8_2;
xor zmm20_3@uint64 zmm20_3 zmm8_3;
xor zmm20_4@uint64 zmm20_4 zmm8_4;
xor zmm20_5@uint64 zmm20_5 zmm8_5;
xor zmm20_6@uint64 zmm20_6 zmm8_6;
xor zmm20_7@uint64 zmm20_7 zmm8_7;
(* vpxord %zmm24,%zmm3,%zmm24                      #! PC = 0x55555558d9f2 *)
xor zmm24_0@uint64 zmm3_0 zmm24_0;
xor zmm24_1@uint64 zmm3_1 zmm24_1;
xor zmm24_2@uint64 zmm3_2 zmm24_2;
xor zmm24_3@uint64 zmm3_3 zmm24_3;
xor zmm24_4@uint64 zmm3_4 zmm24_4;
xor zmm24_5@uint64 zmm3_5 zmm24_5;
xor zmm24_6@uint64 zmm3_6 zmm24_6;
xor zmm24_7@uint64 zmm3_7 zmm24_7;
(* vprolq $0x1,%zmm27,%zmm27                       #! PC = 0x55555558d9f8 *)
rol zmm27_0 zmm27_0 0x1;
rol zmm27_1 zmm27_1 0x1;
rol zmm27_2 zmm27_2 0x1;
rol zmm27_3 zmm27_3 0x1;
rol zmm27_4 zmm27_4 0x1;
rol zmm27_5 zmm27_5 0x1;
rol zmm27_6 zmm27_6 0x1;
rol zmm27_7 zmm27_7 0x1;
(* vprolq $0x6,%zmm13,%zmm13                       #! PC = 0x55555558d9ff *)
rol zmm13_0 zmm13_0 0x6;
rol zmm13_1 zmm13_1 0x6;
rol zmm13_2 zmm13_2 0x6;
rol zmm13_3 zmm13_3 0x6;
rol zmm13_4 zmm13_4 0x6;
rol zmm13_5 zmm13_5 0x6;
rol zmm13_6 zmm13_6 0x6;
rol zmm13_7 zmm13_7 0x6;
(* vprorq $0x2,%zmm19,%zmm19                       #! PC = 0x55555558da06 *)
ror zmm19_0 zmm19_0 0x2;
ror zmm19_1 zmm19_1 0x2;
ror zmm19_2 zmm19_2 0x2;
ror zmm19_3 zmm19_3 0x2;
ror zmm19_4 zmm19_4 0x2;
ror zmm19_5 zmm19_5 0x2;
ror zmm19_6 zmm19_6 0x2;
ror zmm19_7 zmm19_7 0x2;
(* vprorq $0x9,%zmm20,%zmm20                       #! PC = 0x55555558da0d *)
ror zmm20_0 zmm20_0 0x9;
ror zmm20_1 zmm20_1 0x9;
ror zmm20_2 zmm20_2 0x9;
ror zmm20_3 zmm20_3 0x9;
ror zmm20_4 zmm20_4 0x9;
ror zmm20_5 zmm20_5 0x9;
ror zmm20_6 zmm20_6 0x9;
ror zmm20_7 zmm20_7 0x9;
(* vprolq $0x3,%zmm22,%zmm22                       #! PC = 0x55555558da14 *)
rol zmm22_0 zmm22_0 0x3;
rol zmm22_1 zmm22_1 0x3;
rol zmm22_2 zmm22_2 0x3;
rol zmm22_3 zmm22_3 0x3;
rol zmm22_4 zmm22_4 0x3;
rol zmm22_5 zmm22_5 0x3;
rol zmm22_6 zmm22_6 0x3;
rol zmm22_7 zmm22_7 0x3;
(* vprorq $0x13,%zmm15,%zmm15                      #! PC = 0x55555558da1b *)
ror zmm15_0 zmm15_0 0x13;
ror zmm15_1 zmm15_1 0x13;
ror zmm15_2 zmm15_2 0x13;
ror zmm15_3 zmm15_3 0x13;
ror zmm15_4 zmm15_4 0x13;
ror zmm15_5 zmm15_5 0x13;
ror zmm15_6 zmm15_6 0x13;
ror zmm15_7 zmm15_7 0x13;
(* vprorq $0x3,%zmm16,%zmm16                       #! PC = 0x55555558da22 *)
ror zmm16_0 zmm16_0 0x3;
ror zmm16_1 zmm16_1 0x3;
ror zmm16_2 zmm16_2 0x3;
ror zmm16_3 zmm16_3 0x3;
ror zmm16_4 zmm16_4 0x3;
ror zmm16_5 zmm16_5 0x3;
ror zmm16_6 zmm16_6 0x3;
ror zmm16_7 zmm16_7 0x3;
(* vpxord %zmm25,%zmm3,%zmm25                      #! PC = 0x55555558da29 *)
xor zmm25_0@uint64 zmm3_0 zmm25_0;
xor zmm25_1@uint64 zmm3_1 zmm25_1;
xor zmm25_2@uint64 zmm3_2 zmm25_2;
xor zmm25_3@uint64 zmm3_3 zmm25_3;
xor zmm25_4@uint64 zmm3_4 zmm25_4;
xor zmm25_5@uint64 zmm3_5 zmm25_5;
xor zmm25_6@uint64 zmm3_6 zmm25_6;
xor zmm25_7@uint64 zmm3_7 zmm25_7;
(* vpxord %zmm0,%zmm18,%zmm0                       #! PC = 0x55555558da2f *)
xor zmm0_0@uint64 zmm18_0 zmm0_0;
xor zmm0_1@uint64 zmm18_1 zmm0_1;
xor zmm0_2@uint64 zmm18_2 zmm0_2;
xor zmm0_3@uint64 zmm18_3 zmm0_3;
xor zmm0_4@uint64 zmm18_4 zmm0_4;
xor zmm0_5@uint64 zmm18_5 zmm0_5;
xor zmm0_6@uint64 zmm18_6 zmm0_6;
xor zmm0_7@uint64 zmm18_7 zmm0_7;
(* vpxord %zmm26,%zmm3,%zmm26                      #! PC = 0x55555558da35 *)
xor zmm26_0@uint64 zmm3_0 zmm26_0;
xor zmm26_1@uint64 zmm3_1 zmm26_1;
xor zmm26_2@uint64 zmm3_2 zmm26_2;
xor zmm26_3@uint64 zmm3_3 zmm26_3;
xor zmm26_4@uint64 zmm3_4 zmm26_4;
xor zmm26_5@uint64 zmm3_5 zmm26_5;
xor zmm26_6@uint64 zmm3_6 zmm26_6;
xor zmm26_7@uint64 zmm3_7 zmm26_7;
(* vpxord %zmm6,%zmm17,%zmm6                       #! PC = 0x55555558da3b *)
xor zmm6_0@uint64 zmm17_0 zmm6_0;
xor zmm6_1@uint64 zmm17_1 zmm6_1;
xor zmm6_2@uint64 zmm17_2 zmm6_2;
xor zmm6_3@uint64 zmm17_3 zmm6_3;
xor zmm6_4@uint64 zmm17_4 zmm6_4;
xor zmm6_5@uint64 zmm17_5 zmm6_5;
xor zmm6_6@uint64 zmm17_6 zmm6_6;
xor zmm6_7@uint64 zmm17_7 zmm6_7;
(* vpxord %zmm10,%zmm18,%zmm10                     #! PC = 0x55555558da41 *)
xor zmm10_0@uint64 zmm18_0 zmm10_0;
xor zmm10_1@uint64 zmm18_1 zmm10_1;
xor zmm10_2@uint64 zmm18_2 zmm10_2;
xor zmm10_3@uint64 zmm18_3 zmm10_3;
xor zmm10_4@uint64 zmm18_4 zmm10_4;
xor zmm10_5@uint64 zmm18_5 zmm10_5;
xor zmm10_6@uint64 zmm18_6 zmm10_6;
xor zmm10_7@uint64 zmm18_7 zmm10_7;
(* vpxord %zmm23,%zmm3,%zmm3                       #! PC = 0x55555558da47 *)
xor zmm3_0@uint64 zmm3_0 zmm23_0;
xor zmm3_1@uint64 zmm3_1 zmm23_1;
xor zmm3_2@uint64 zmm3_2 zmm23_2;
xor zmm3_3@uint64 zmm3_3 zmm23_3;
xor zmm3_4@uint64 zmm3_4 zmm23_4;
xor zmm3_5@uint64 zmm3_5 zmm23_5;
xor zmm3_6@uint64 zmm3_6 zmm23_6;
xor zmm3_7@uint64 zmm3_7 zmm23_7;
(* vpxord %zmm31,%zmm17,%zmm17                     #! PC = 0x55555558da4d *)
xor zmm17_0@uint64 zmm17_0 zmm31_0;
xor zmm17_1@uint64 zmm17_1 zmm31_1;
xor zmm17_2@uint64 zmm17_2 zmm31_2;
xor zmm17_3@uint64 zmm17_3 zmm31_3;
xor zmm17_4@uint64 zmm17_4 zmm31_4;
xor zmm17_5@uint64 zmm17_5 zmm31_5;
xor zmm17_6@uint64 zmm17_6 zmm31_6;
xor zmm17_7@uint64 zmm17_7 zmm31_7;
(* vpxord %zmm21,%zmm18,%zmm18                     #! PC = 0x55555558da53 *)
xor zmm18_0@uint64 zmm18_0 zmm21_0;
xor zmm18_1@uint64 zmm18_1 zmm21_1;
xor zmm18_2@uint64 zmm18_2 zmm21_2;
xor zmm18_3@uint64 zmm18_3 zmm21_3;
xor zmm18_4@uint64 zmm18_4 zmm21_4;
xor zmm18_5@uint64 zmm18_5 zmm21_5;
xor zmm18_6@uint64 zmm18_6 zmm21_6;
xor zmm18_7@uint64 zmm18_7 zmm21_7;
(* vprorq $0x1c,%zmm26,%zmm26                      #! PC = 0x55555558da59 *)
ror zmm26_0 zmm26_0 0x1c;
ror zmm26_1 zmm26_1 0x1c;
ror zmm26_2 zmm26_2 0x1c;
ror zmm26_3 zmm26_3 0x1c;
ror zmm26_4 zmm26_4 0x1c;
ror zmm26_5 zmm26_5 0x1c;
ror zmm26_6 zmm26_6 0x1c;
ror zmm26_7 zmm26_7 0x1c;
(* vprolq $0x1b,%zmm10,%zmm10                      #! PC = 0x55555558da60 *)
rol zmm10_0 zmm10_0 0x1b;
rol zmm10_1 zmm10_1 0x1b;
rol zmm10_2 zmm10_2 0x1b;
rol zmm10_3 zmm10_3 0x1b;
rol zmm10_4 zmm10_4 0x1b;
rol zmm10_5 zmm10_5 0x1b;
rol zmm10_6 zmm10_6 0x1b;
rol zmm10_7 zmm10_7 0x1b;
(* vprolq $0x12,%zmm25,%zmm25                      #! PC = 0x55555558da67 *)
rol zmm25_0 zmm25_0 0x12;
rol zmm25_1 zmm25_1 0x12;
rol zmm25_2 zmm25_2 0x12;
rol zmm25_3 zmm25_3 0x12;
rol zmm25_4 zmm25_4 0x12;
rol zmm25_5 zmm25_5 0x12;
rol zmm25_6 zmm25_6 0x12;
rol zmm25_7 zmm25_7 0x12;
(* vprolq $0x19,%zmm5,%zmm5                        #! PC = 0x55555558da6e *)
rol zmm5_0 zmm5_0 0x19;
rol zmm5_1 zmm5_1 0x19;
rol zmm5_2 zmm5_2 0x19;
rol zmm5_3 zmm5_3 0x19;
rol zmm5_4 zmm5_4 0x19;
rol zmm5_5 zmm5_5 0x19;
rol zmm5_6 zmm5_6 0x19;
rol zmm5_7 zmm5_7 0x19;
(* vprolq $0x8,%zmm0,%zmm0                         #! PC = 0x55555558da75 *)
rol zmm0_0 zmm0_0 0x8;
rol zmm0_1 zmm0_1 0x8;
rol zmm0_2 zmm0_2 0x8;
rol zmm0_3 zmm0_3 0x8;
rol zmm0_4 zmm0_4 0x8;
rol zmm0_5 zmm0_5 0x8;
rol zmm0_6 zmm0_6 0x8;
rol zmm0_7 zmm0_7 0x8;
(* vprorq $0x17,%zmm3,%zmm3                        #! PC = 0x55555558da7c *)
ror zmm3_0 zmm3_0 0x17;
ror zmm3_1 zmm3_1 0x17;
ror zmm3_2 zmm3_2 0x17;
ror zmm3_3 zmm3_3 0x17;
ror zmm3_4 zmm3_4 0x17;
ror zmm3_5 zmm3_5 0x17;
ror zmm3_6 zmm3_6 0x17;
ror zmm3_7 zmm3_7 0x17;
(* vprolq $0x2,%zmm17,%zmm17                       #! PC = 0x55555558da83 *)
rol zmm17_0 zmm17_0 0x2;
rol zmm17_1 zmm17_1 0x2;
rol zmm17_2 zmm17_2 0x2;
rol zmm17_3 zmm17_3 0x2;
rol zmm17_4 zmm17_4 0x2;
rol zmm17_5 zmm17_5 0x2;
rol zmm17_6 zmm17_6 0x2;
rol zmm17_7 zmm17_7 0x2;
(* vprorq $0x19,%zmm18,%zmm18                      #! PC = 0x55555558da8a *)
ror zmm18_0 zmm18_0 0x19;
ror zmm18_1 zmm18_1 0x19;
ror zmm18_2 zmm18_2 0x19;
ror zmm18_3 zmm18_3 0x19;
ror zmm18_4 zmm18_4 0x19;
ror zmm18_5 zmm18_5 0x19;
ror zmm18_6 zmm18_6 0x19;
ror zmm18_7 zmm18_7 0x19;
(* vprolq $0xa,%zmm6,%zmm6                         #! PC = 0x55555558da91 *)
rol zmm6_0 zmm6_0 0xa;
rol zmm6_1 zmm6_1 0xa;
rol zmm6_2 zmm6_2 0xa;
rol zmm6_3 zmm6_3 0xa;
rol zmm6_4 zmm6_4 0xa;
rol zmm6_5 zmm6_5 0xa;
rol zmm6_6 zmm6_6 0xa;
rol zmm6_7 zmm6_7 0xa;
(* vprolq $0xf,%zmm7,%zmm7                         #! PC = 0x55555558da98 *)
rol zmm7_0 zmm7_0 0xf;
rol zmm7_1 zmm7_1 0xf;
rol zmm7_2 zmm7_2 0xf;
rol zmm7_3 zmm7_3 0xf;
rol zmm7_4 zmm7_4 0xf;
rol zmm7_5 zmm7_5 0xf;
rol zmm7_6 zmm7_6 0xf;
rol zmm7_7 zmm7_7 0xf;
(* vprorq $0x8,%zmm4,%zmm4                         #! PC = 0x55555558da9f *)
ror zmm4_0 zmm4_0 0x8;
ror zmm4_1 zmm4_1 0x8;
ror zmm4_2 zmm4_2 0x8;
ror zmm4_3 zmm4_3 0x8;
ror zmm4_4 zmm4_4 0x8;
ror zmm4_5 zmm4_5 0x8;
ror zmm4_6 zmm4_6 0x8;
ror zmm4_7 zmm4_7 0x8;
(* vmovdqa64 %zmm24,%zmm29                         #! PC = 0x55555558daa6 *)
mov zmm29_0 zmm24_0;
mov zmm29_1 zmm24_1;
mov zmm29_2 zmm24_2;
mov zmm29_3 zmm24_3;
mov zmm29_4 zmm24_4;
mov zmm29_5 zmm24_5;
mov zmm29_6 zmm24_6;
mov zmm29_7 zmm24_7;
(* vmovdqa64 %zmm30,%zmm28                         #! PC = 0x55555558daac *)
mov zmm28_0 zmm30_0;
mov zmm28_1 zmm30_1;
mov zmm28_2 zmm30_2;
mov zmm28_3 zmm30_3;
mov zmm28_4 zmm30_4;
mov zmm28_5 zmm30_5;
mov zmm28_6 zmm30_6;
mov zmm28_7 zmm30_7;
(* vpternlogq $0xd2,%zmm1,%zmm30,%zmm29            #! PC = 0x55555558dab2 *)
mov table 0xd2@uint8;
inline vpternlogq64 (zmm29_0, zmm30_0, zmm1_0, table);
inline vpternlogq64 (zmm29_1, zmm30_1, zmm1_1, table);
inline vpternlogq64 (zmm29_2, zmm30_2, zmm1_2, table);
inline vpternlogq64 (zmm29_3, zmm30_3, zmm1_3, table);
inline vpternlogq64 (zmm29_4, zmm30_4, zmm1_4, table);
inline vpternlogq64 (zmm29_5, zmm30_5, zmm1_5, table);
inline vpternlogq64 (zmm29_6, zmm30_6, zmm1_6, table);
inline vpternlogq64 (zmm29_7, zmm30_7, zmm1_7, table);
(* vpternlogq $0xd2,%zmm9,%zmm1,%zmm28             #! PC = 0x55555558dab9 *)
mov table 0xd2@uint8;
inline vpternlogq64 (zmm28_0, zmm1_0, zmm9_0, table);
inline vpternlogq64 (zmm28_1, zmm1_1, zmm9_1, table);
inline vpternlogq64 (zmm28_2, zmm1_2, zmm9_2, table);
inline vpternlogq64 (zmm28_3, zmm1_3, zmm9_3, table);
inline vpternlogq64 (zmm28_4, zmm1_4, zmm9_4, table);
inline vpternlogq64 (zmm28_5, zmm1_5, zmm9_5, table);
inline vpternlogq64 (zmm28_6, zmm1_6, zmm9_6, table);
inline vpternlogq64 (zmm28_7, zmm1_7, zmm9_7, table);
(* vpternlogq $0xd2,%zmm14,%zmm9,%zmm1             #! PC = 0x55555558dac0 *)
mov table 0xd2@uint8;
inline vpternlogq64 (zmm1_0, zmm9_0, zmm14_0, table);
inline vpternlogq64 (zmm1_1, zmm9_1, zmm14_1, table);
inline vpternlogq64 (zmm1_2, zmm9_2, zmm14_2, table);
inline vpternlogq64 (zmm1_3, zmm9_3, zmm14_3, table);
inline vpternlogq64 (zmm1_4, zmm9_4, zmm14_4, table);
inline vpternlogq64 (zmm1_5, zmm9_5, zmm14_5, table);
inline vpternlogq64 (zmm1_6, zmm9_6, zmm14_6, table);
inline vpternlogq64 (zmm1_7, zmm9_7, zmm14_7, table);
(* vpternlogq $0xd2,%zmm24,%zmm14,%zmm9            #! PC = 0x55555558dac7 *)
mov table 0xd2@uint8;
inline vpternlogq64 (zmm9_0, zmm14_0, zmm24_0, table);
inline vpternlogq64 (zmm9_1, zmm14_1, zmm24_1, table);
inline vpternlogq64 (zmm9_2, zmm14_2, zmm24_2, table);
inline vpternlogq64 (zmm9_3, zmm14_3, zmm24_3, table);
inline vpternlogq64 (zmm9_4, zmm14_4, zmm24_4, table);
inline vpternlogq64 (zmm9_5, zmm14_5, zmm24_5, table);
inline vpternlogq64 (zmm9_6, zmm14_6, zmm24_6, table);
inline vpternlogq64 (zmm9_7, zmm14_7, zmm24_7, table);
(* vpternlogq $0xd2,%zmm30,%zmm24,%zmm14           #! PC = 0x55555558dace *)
mov table 0xd2@uint8;
inline vpternlogq64 (zmm14_0, zmm24_0, zmm30_0, table);
inline vpternlogq64 (zmm14_1, zmm24_1, zmm30_1, table);
inline vpternlogq64 (zmm14_2, zmm24_2, zmm30_2, table);
inline vpternlogq64 (zmm14_3, zmm24_3, zmm30_3, table);
inline vpternlogq64 (zmm14_4, zmm24_4, zmm30_4, table);
inline vpternlogq64 (zmm14_5, zmm24_5, zmm30_5, table);
inline vpternlogq64 (zmm14_6, zmm24_6, zmm30_6, table);
inline vpternlogq64 (zmm14_7, zmm24_7, zmm30_7, table);
(* vpbroadcastq %r9,%zmm24                         #! PC = 0x55555558dad5 *)
mov zmm24_0 r9;
mov zmm24_1 r9;
mov zmm24_2 r9;
mov zmm24_3 r9;
mov zmm24_4 r9;
mov zmm24_5 r9;
mov zmm24_6 r9;
mov zmm24_7 r9;
(* vpxord %zmm24,%zmm29,%zmm24                     #! PC = 0x55555558dadb *)
xor zmm24_0@uint64 zmm29_0 zmm24_0;
xor zmm24_1@uint64 zmm29_1 zmm24_1;
xor zmm24_2@uint64 zmm29_2 zmm24_2;
xor zmm24_3@uint64 zmm29_3 zmm24_3;
xor zmm24_4@uint64 zmm29_4 zmm24_4;
xor zmm24_5@uint64 zmm29_5 zmm24_5;
xor zmm24_6@uint64 zmm29_6 zmm24_6;
xor zmm24_7@uint64 zmm29_7 zmm24_7;
(* vmovdqa64 %zmm12,%zmm30                         #! PC = 0x55555558dae1 *)
mov zmm30_0 zmm12_0;
mov zmm30_1 zmm12_1;
mov zmm30_2 zmm12_2;
mov zmm30_3 zmm12_3;
mov zmm30_4 zmm12_4;
mov zmm30_5 zmm12_5;
mov zmm30_6 zmm12_6;
mov zmm30_7 zmm12_7;
(* vmovdqa64 %zmm11,%zmm29                         #! PC = 0x55555558dae7 *)
mov zmm29_0 zmm11_0;
mov zmm29_1 zmm11_1;
mov zmm29_2 zmm11_2;
mov zmm29_3 zmm11_3;
mov zmm29_4 zmm11_4;
mov zmm29_5 zmm11_5;
mov zmm29_6 zmm11_6;
mov zmm29_7 zmm11_7;
(* vpternlogq $0xd2,%zmm22,%zmm12,%zmm29           #! PC = 0x55555558daed *)
mov table 0xd2@uint8;
inline vpternlogq64 (zmm29_0, zmm12_0, zmm22_0, table);
inline vpternlogq64 (zmm29_1, zmm12_1, zmm22_1, table);
inline vpternlogq64 (zmm29_2, zmm12_2, zmm22_2, table);
inline vpternlogq64 (zmm29_3, zmm12_3, zmm22_3, table);
inline vpternlogq64 (zmm29_4, zmm12_4, zmm22_4, table);
inline vpternlogq64 (zmm29_5, zmm12_5, zmm22_5, table);
inline vpternlogq64 (zmm29_6, zmm12_6, zmm22_6, table);
inline vpternlogq64 (zmm29_7, zmm12_7, zmm22_7, table);
(* vpternlogq $0xd2,%zmm15,%zmm22,%zmm30           #! PC = 0x55555558daf4 *)
mov table 0xd2@uint8;
inline vpternlogq64 (zmm30_0, zmm22_0, zmm15_0, table);
inline vpternlogq64 (zmm30_1, zmm22_1, zmm15_1, table);
inline vpternlogq64 (zmm30_2, zmm22_2, zmm15_2, table);
inline vpternlogq64 (zmm30_3, zmm22_3, zmm15_3, table);
inline vpternlogq64 (zmm30_4, zmm22_4, zmm15_4, table);
inline vpternlogq64 (zmm30_5, zmm22_5, zmm15_5, table);
inline vpternlogq64 (zmm30_6, zmm22_6, zmm15_6, table);
inline vpternlogq64 (zmm30_7, zmm22_7, zmm15_7, table);
(* vmovdqa64 %zmm19,%zmm21                         #! PC = 0x55555558dafb *)
mov zmm21_0 zmm19_0;
mov zmm21_1 zmm19_1;
mov zmm21_2 zmm19_2;
mov zmm21_3 zmm19_3;
mov zmm21_4 zmm19_4;
mov zmm21_5 zmm19_5;
mov zmm21_6 zmm19_6;
mov zmm21_7 zmm19_7;
(* vpternlogq $0xd2,%zmm16,%zmm15,%zmm22           #! PC = 0x55555558db01 *)
mov table 0xd2@uint8;
inline vpternlogq64 (zmm22_0, zmm15_0, zmm16_0, table);
inline vpternlogq64 (zmm22_1, zmm15_1, zmm16_1, table);
inline vpternlogq64 (zmm22_2, zmm15_2, zmm16_2, table);
inline vpternlogq64 (zmm22_3, zmm15_3, zmm16_3, table);
inline vpternlogq64 (zmm22_4, zmm15_4, zmm16_4, table);
inline vpternlogq64 (zmm22_5, zmm15_5, zmm16_5, table);
inline vpternlogq64 (zmm22_6, zmm15_6, zmm16_6, table);
inline vpternlogq64 (zmm22_7, zmm15_7, zmm16_7, table);
(* vmovdqa64 %zmm20,%zmm31                         #! PC = 0x55555558db08 *)
mov zmm31_0 zmm20_0;
mov zmm31_1 zmm20_1;
mov zmm31_2 zmm20_2;
mov zmm31_3 zmm20_3;
mov zmm31_4 zmm20_4;
mov zmm31_5 zmm20_5;
mov zmm31_6 zmm20_6;
mov zmm31_7 zmm20_7;
(* vpternlogq $0xd2,%zmm11,%zmm16,%zmm15           #! PC = 0x55555558db0e *)
mov table 0xd2@uint8;
inline vpternlogq64 (zmm15_0, zmm16_0, zmm11_0, table);
inline vpternlogq64 (zmm15_1, zmm16_1, zmm11_1, table);
inline vpternlogq64 (zmm15_2, zmm16_2, zmm11_2, table);
inline vpternlogq64 (zmm15_3, zmm16_3, zmm11_3, table);
inline vpternlogq64 (zmm15_4, zmm16_4, zmm11_4, table);
inline vpternlogq64 (zmm15_5, zmm16_5, zmm11_5, table);
inline vpternlogq64 (zmm15_6, zmm16_6, zmm11_6, table);
inline vpternlogq64 (zmm15_7, zmm16_7, zmm11_7, table);
(* vpternlogq $0xd2,%zmm12,%zmm11,%zmm16           #! PC = 0x55555558db15 *)
mov table 0xd2@uint8;
inline vpternlogq64 (zmm16_0, zmm11_0, zmm12_0, table);
inline vpternlogq64 (zmm16_1, zmm11_1, zmm12_1, table);
inline vpternlogq64 (zmm16_2, zmm11_2, zmm12_2, table);
inline vpternlogq64 (zmm16_3, zmm11_3, zmm12_3, table);
inline vpternlogq64 (zmm16_4, zmm11_4, zmm12_4, table);
inline vpternlogq64 (zmm16_5, zmm11_5, zmm12_5, table);
inline vpternlogq64 (zmm16_6, zmm11_6, zmm12_6, table);
inline vpternlogq64 (zmm16_7, zmm11_7, zmm12_7, table);
(* vmovdqa64 %zmm27,%zmm12                         #! PC = 0x55555558db1c *)
mov zmm12_0 zmm27_0;
mov zmm12_1 zmm27_1;
mov zmm12_2 zmm27_2;
mov zmm12_3 zmm27_3;
mov zmm12_4 zmm27_4;
mov zmm12_5 zmm27_5;
mov zmm12_6 zmm27_6;
mov zmm12_7 zmm27_7;
(* vmovdqa64 %zmm13,%zmm11                         #! PC = 0x55555558db22 *)
mov zmm11_0 zmm13_0;
mov zmm11_1 zmm13_1;
mov zmm11_2 zmm13_2;
mov zmm11_3 zmm13_3;
mov zmm11_4 zmm13_4;
mov zmm11_5 zmm13_5;
mov zmm11_6 zmm13_6;
mov zmm11_7 zmm13_7;
(* vpternlogq $0xd2,%zmm3,%zmm18,%zmm31            #! PC = 0x55555558db28 *)
mov table 0xd2@uint8;
inline vpternlogq64 (zmm31_0, zmm18_0, zmm3_0, table);
inline vpternlogq64 (zmm31_1, zmm18_1, zmm3_1, table);
inline vpternlogq64 (zmm31_2, zmm18_2, zmm3_2, table);
inline vpternlogq64 (zmm31_3, zmm18_3, zmm3_3, table);
inline vpternlogq64 (zmm31_4, zmm18_4, zmm3_4, table);
inline vpternlogq64 (zmm31_5, zmm18_5, zmm3_5, table);
inline vpternlogq64 (zmm31_6, zmm18_6, zmm3_6, table);
inline vpternlogq64 (zmm31_7, zmm18_7, zmm3_7, table);
(* vpternlogq $0xd2,%zmm5,%zmm13,%zmm12            #! PC = 0x55555558db2f *)
mov table 0xd2@uint8;
inline vpternlogq64 (zmm12_0, zmm13_0, zmm5_0, table);
inline vpternlogq64 (zmm12_1, zmm13_1, zmm5_1, table);
inline vpternlogq64 (zmm12_2, zmm13_2, zmm5_2, table);
inline vpternlogq64 (zmm12_3, zmm13_3, zmm5_3, table);
inline vpternlogq64 (zmm12_4, zmm13_4, zmm5_4, table);
inline vpternlogq64 (zmm12_5, zmm13_5, zmm5_5, table);
inline vpternlogq64 (zmm12_6, zmm13_6, zmm5_6, table);
inline vpternlogq64 (zmm12_7, zmm13_7, zmm5_7, table);
(* vpternlogq $0xd2,%zmm0,%zmm5,%zmm11             #! PC = 0x55555558db36 *)
mov table 0xd2@uint8;
inline vpternlogq64 (zmm11_0, zmm5_0, zmm0_0, table);
inline vpternlogq64 (zmm11_1, zmm5_1, zmm0_1, table);
inline vpternlogq64 (zmm11_2, zmm5_2, zmm0_2, table);
inline vpternlogq64 (zmm11_3, zmm5_3, zmm0_3, table);
inline vpternlogq64 (zmm11_4, zmm5_4, zmm0_4, table);
inline vpternlogq64 (zmm11_5, zmm5_5, zmm0_5, table);
inline vpternlogq64 (zmm11_6, zmm5_6, zmm0_6, table);
inline vpternlogq64 (zmm11_7, zmm5_7, zmm0_7, table);
(* vpternlogq $0xd2,%zmm18,%zmm20,%zmm21           #! PC = 0x55555558db3d *)
mov table 0xd2@uint8;
inline vpternlogq64 (zmm21_0, zmm20_0, zmm18_0, table);
inline vpternlogq64 (zmm21_1, zmm20_1, zmm18_1, table);
inline vpternlogq64 (zmm21_2, zmm20_2, zmm18_2, table);
inline vpternlogq64 (zmm21_3, zmm20_3, zmm18_3, table);
inline vpternlogq64 (zmm21_4, zmm20_4, zmm18_4, table);
inline vpternlogq64 (zmm21_5, zmm20_5, zmm18_5, table);
inline vpternlogq64 (zmm21_6, zmm20_6, zmm18_6, table);
inline vpternlogq64 (zmm21_7, zmm20_7, zmm18_7, table);
(* vpternlogq $0xd2,%zmm25,%zmm0,%zmm5             #! PC = 0x55555558db44 *)
mov table 0xd2@uint8;
inline vpternlogq64 (zmm5_0, zmm0_0, zmm25_0, table);
inline vpternlogq64 (zmm5_1, zmm0_1, zmm25_1, table);
inline vpternlogq64 (zmm5_2, zmm0_2, zmm25_2, table);
inline vpternlogq64 (zmm5_3, zmm0_3, zmm25_3, table);
inline vpternlogq64 (zmm5_4, zmm0_4, zmm25_4, table);
inline vpternlogq64 (zmm5_5, zmm0_5, zmm25_5, table);
inline vpternlogq64 (zmm5_6, zmm0_6, zmm25_6, table);
inline vpternlogq64 (zmm5_7, zmm0_7, zmm25_7, table);
(* vpternlogq $0xd2,%zmm17,%zmm3,%zmm18            #! PC = 0x55555558db4b *)
mov table 0xd2@uint8;
inline vpternlogq64 (zmm18_0, zmm3_0, zmm17_0, table);
inline vpternlogq64 (zmm18_1, zmm3_1, zmm17_1, table);
inline vpternlogq64 (zmm18_2, zmm3_2, zmm17_2, table);
inline vpternlogq64 (zmm18_3, zmm3_3, zmm17_3, table);
inline vpternlogq64 (zmm18_4, zmm3_4, zmm17_4, table);
inline vpternlogq64 (zmm18_5, zmm3_5, zmm17_5, table);
inline vpternlogq64 (zmm18_6, zmm3_6, zmm17_6, table);
inline vpternlogq64 (zmm18_7, zmm3_7, zmm17_7, table);
(* vpternlogq $0xd2,%zmm27,%zmm25,%zmm0            #! PC = 0x55555558db52 *)
mov table 0xd2@uint8;
inline vpternlogq64 (zmm0_0, zmm25_0, zmm27_0, table);
inline vpternlogq64 (zmm0_1, zmm25_1, zmm27_1, table);
inline vpternlogq64 (zmm0_2, zmm25_2, zmm27_2, table);
inline vpternlogq64 (zmm0_3, zmm25_3, zmm27_3, table);
inline vpternlogq64 (zmm0_4, zmm25_4, zmm27_4, table);
inline vpternlogq64 (zmm0_5, zmm25_5, zmm27_5, table);
inline vpternlogq64 (zmm0_6, zmm25_6, zmm27_6, table);
inline vpternlogq64 (zmm0_7, zmm25_7, zmm27_7, table);
(* vpternlogq $0xd2,%zmm19,%zmm17,%zmm3            #! PC = 0x55555558db59 *)
mov table 0xd2@uint8;
inline vpternlogq64 (zmm3_0, zmm17_0, zmm19_0, table);
inline vpternlogq64 (zmm3_1, zmm17_1, zmm19_1, table);
inline vpternlogq64 (zmm3_2, zmm17_2, zmm19_2, table);
inline vpternlogq64 (zmm3_3, zmm17_3, zmm19_3, table);
inline vpternlogq64 (zmm3_4, zmm17_4, zmm19_4, table);
inline vpternlogq64 (zmm3_5, zmm17_5, zmm19_5, table);
inline vpternlogq64 (zmm3_6, zmm17_6, zmm19_6, table);
inline vpternlogq64 (zmm3_7, zmm17_7, zmm19_7, table);
(* vpternlogq $0xd2,%zmm13,%zmm27,%zmm25           #! PC = 0x55555558db60 *)
mov table 0xd2@uint8;
inline vpternlogq64 (zmm25_0, zmm27_0, zmm13_0, table);
inline vpternlogq64 (zmm25_1, zmm27_1, zmm13_1, table);
inline vpternlogq64 (zmm25_2, zmm27_2, zmm13_2, table);
inline vpternlogq64 (zmm25_3, zmm27_3, zmm13_3, table);
inline vpternlogq64 (zmm25_4, zmm27_4, zmm13_4, table);
inline vpternlogq64 (zmm25_5, zmm27_5, zmm13_5, table);
inline vpternlogq64 (zmm25_6, zmm27_6, zmm13_6, table);
inline vpternlogq64 (zmm25_7, zmm27_7, zmm13_7, table);
(* vpternlogq $0xd2,%zmm20,%zmm19,%zmm17           #! PC = 0x55555558db67 *)
mov table 0xd2@uint8;
inline vpternlogq64 (zmm17_0, zmm19_0, zmm20_0, table);
inline vpternlogq64 (zmm17_1, zmm19_1, zmm20_1, table);
inline vpternlogq64 (zmm17_2, zmm19_2, zmm20_2, table);
inline vpternlogq64 (zmm17_3, zmm19_3, zmm20_3, table);
inline vpternlogq64 (zmm17_4, zmm19_4, zmm20_4, table);
inline vpternlogq64 (zmm17_5, zmm19_5, zmm20_5, table);
inline vpternlogq64 (zmm17_6, zmm19_6, zmm20_6, table);
inline vpternlogq64 (zmm17_7, zmm19_7, zmm20_7, table);
(* vmovdqa64 %zmm10,%zmm27                         #! PC = 0x55555558db6e *)
mov zmm27_0 zmm10_0;
mov zmm27_1 zmm10_1;
mov zmm27_2 zmm10_2;
mov zmm27_3 zmm10_3;
mov zmm27_4 zmm10_4;
mov zmm27_5 zmm10_5;
mov zmm27_6 zmm10_6;
mov zmm27_7 zmm10_7;
(* vmovdqa64 %zmm26,%zmm13                         #! PC = 0x55555558db74 *)
mov zmm13_0 zmm26_0;
mov zmm13_1 zmm26_1;
mov zmm13_2 zmm26_2;
mov zmm13_3 zmm26_3;
mov zmm13_4 zmm26_4;
mov zmm13_5 zmm26_5;
mov zmm13_6 zmm26_6;
mov zmm13_7 zmm26_7;
(* vmovdqa64 %zmm1,%zmm20                          #! PC = 0x55555558db7a *)
mov zmm20_0 zmm1_0;
mov zmm20_1 zmm1_1;
mov zmm20_2 zmm1_2;
mov zmm20_3 zmm1_3;
mov zmm20_4 zmm1_4;
mov zmm20_5 zmm1_5;
mov zmm20_6 zmm1_6;
mov zmm20_7 zmm1_7;
(* vpternlogq $0xd2,%zmm6,%zmm26,%zmm27            #! PC = 0x55555558db80 *)
mov table 0xd2@uint8;
inline vpternlogq64 (zmm27_0, zmm26_0, zmm6_0, table);
inline vpternlogq64 (zmm27_1, zmm26_1, zmm6_1, table);
inline vpternlogq64 (zmm27_2, zmm26_2, zmm6_2, table);
inline vpternlogq64 (zmm27_3, zmm26_3, zmm6_3, table);
inline vpternlogq64 (zmm27_4, zmm26_4, zmm6_4, table);
inline vpternlogq64 (zmm27_5, zmm26_5, zmm6_5, table);
inline vpternlogq64 (zmm27_6, zmm26_6, zmm6_6, table);
inline vpternlogq64 (zmm27_7, zmm26_7, zmm6_7, table);
(* vpternlogq $0xd2,%zmm7,%zmm6,%zmm13             #! PC = 0x55555558db87 *)
mov table 0xd2@uint8;
inline vpternlogq64 (zmm13_0, zmm6_0, zmm7_0, table);
inline vpternlogq64 (zmm13_1, zmm6_1, zmm7_1, table);
inline vpternlogq64 (zmm13_2, zmm6_2, zmm7_2, table);
inline vpternlogq64 (zmm13_3, zmm6_3, zmm7_3, table);
inline vpternlogq64 (zmm13_4, zmm6_4, zmm7_4, table);
inline vpternlogq64 (zmm13_5, zmm6_5, zmm7_5, table);
inline vpternlogq64 (zmm13_6, zmm6_6, zmm7_6, table);
inline vpternlogq64 (zmm13_7, zmm6_7, zmm7_7, table);
(* vpternlogq $0x96,%zmm5,%zmm22,%zmm20            #! PC = 0x55555558db8e *)
mov table 0x96@uint8;
inline vpternlogq64 (zmm20_0, zmm22_0, zmm5_0, table);
inline vpternlogq64 (zmm20_1, zmm22_1, zmm5_1, table);
inline vpternlogq64 (zmm20_2, zmm22_2, zmm5_2, table);
inline vpternlogq64 (zmm20_3, zmm22_3, zmm5_3, table);
inline vpternlogq64 (zmm20_4, zmm22_4, zmm5_4, table);
inline vpternlogq64 (zmm20_5, zmm22_5, zmm5_5, table);
inline vpternlogq64 (zmm20_6, zmm22_6, zmm5_6, table);
inline vpternlogq64 (zmm20_7, zmm22_7, zmm5_7, table);
(* vpternlogq $0xd2,%zmm4,%zmm7,%zmm6              #! PC = 0x55555558db95 *)
mov table 0xd2@uint8;
inline vpternlogq64 (zmm6_0, zmm7_0, zmm4_0, table);
inline vpternlogq64 (zmm6_1, zmm7_1, zmm4_1, table);
inline vpternlogq64 (zmm6_2, zmm7_2, zmm4_2, table);
inline vpternlogq64 (zmm6_3, zmm7_3, zmm4_3, table);
inline vpternlogq64 (zmm6_4, zmm7_4, zmm4_4, table);
inline vpternlogq64 (zmm6_5, zmm7_5, zmm4_5, table);
inline vpternlogq64 (zmm6_6, zmm7_6, zmm4_6, table);
inline vpternlogq64 (zmm6_7, zmm7_7, zmm4_7, table);
(* vpternlogq $0x96,%zmm18,%zmm6,%zmm20            #! PC = 0x55555558db9c *)
mov table 0x96@uint8;
inline vpternlogq64 (zmm20_0, zmm6_0, zmm18_0, table);
inline vpternlogq64 (zmm20_1, zmm6_1, zmm18_1, table);
inline vpternlogq64 (zmm20_2, zmm6_2, zmm18_2, table);
inline vpternlogq64 (zmm20_3, zmm6_3, zmm18_3, table);
inline vpternlogq64 (zmm20_4, zmm6_4, zmm18_4, table);
inline vpternlogq64 (zmm20_5, zmm6_5, zmm18_5, table);
inline vpternlogq64 (zmm20_6, zmm6_6, zmm18_6, table);
inline vpternlogq64 (zmm20_7, zmm6_7, zmm18_7, table);
(* vpternlogq $0xd2,%zmm10,%zmm4,%zmm7             #! PC = 0x55555558dba3 *)
mov table 0xd2@uint8;
inline vpternlogq64 (zmm7_0, zmm4_0, zmm10_0, table);
inline vpternlogq64 (zmm7_1, zmm4_1, zmm10_1, table);
inline vpternlogq64 (zmm7_2, zmm4_2, zmm10_2, table);
inline vpternlogq64 (zmm7_3, zmm4_3, zmm10_3, table);
inline vpternlogq64 (zmm7_4, zmm4_4, zmm10_4, table);
inline vpternlogq64 (zmm7_5, zmm4_5, zmm10_5, table);
inline vpternlogq64 (zmm7_6, zmm4_6, zmm10_6, table);
inline vpternlogq64 (zmm7_7, zmm4_7, zmm10_7, table);
(* vpternlogq $0xd2,%zmm26,%zmm10,%zmm4            #! PC = 0x55555558dbaa *)
mov table 0xd2@uint8;
inline vpternlogq64 (zmm4_0, zmm10_0, zmm26_0, table);
inline vpternlogq64 (zmm4_1, zmm10_1, zmm26_1, table);
inline vpternlogq64 (zmm4_2, zmm10_2, zmm26_2, table);
inline vpternlogq64 (zmm4_3, zmm10_3, zmm26_3, table);
inline vpternlogq64 (zmm4_4, zmm10_4, zmm26_4, table);
inline vpternlogq64 (zmm4_5, zmm10_5, zmm26_5, table);
inline vpternlogq64 (zmm4_6, zmm10_6, zmm26_6, table);
inline vpternlogq64 (zmm4_7, zmm10_7, zmm26_7, table);
(* vprolq $0x1,%zmm20,%zmm10                       #! PC = 0x55555558dbb1 *)
rol zmm10_0 zmm20_0 0x1;
rol zmm10_1 zmm20_1 0x1;
rol zmm10_2 zmm20_2 0x1;
rol zmm10_3 zmm20_3 0x1;
rol zmm10_4 zmm20_4 0x1;
rol zmm10_5 zmm20_5 0x1;
rol zmm10_6 zmm20_6 0x1;
rol zmm10_7 zmm20_7 0x1;
(* vmovdqa64 %zmm9,%zmm23                          #! PC = 0x55555558dbb8 *)
mov zmm23_0 zmm9_0;
mov zmm23_1 zmm9_1;
mov zmm23_2 zmm9_2;
mov zmm23_3 zmm9_3;
mov zmm23_4 zmm9_4;
mov zmm23_5 zmm9_5;
mov zmm23_6 zmm9_6;
mov zmm23_7 zmm9_7;
(* vpternlogq $0x96,%zmm0,%zmm15,%zmm23            #! PC = 0x55555558dbbe *)
mov table 0x96@uint8;
inline vpternlogq64 (zmm23_0, zmm15_0, zmm0_0, table);
inline vpternlogq64 (zmm23_1, zmm15_1, zmm0_1, table);
inline vpternlogq64 (zmm23_2, zmm15_2, zmm0_2, table);
inline vpternlogq64 (zmm23_3, zmm15_3, zmm0_3, table);
inline vpternlogq64 (zmm23_4, zmm15_4, zmm0_4, table);
inline vpternlogq64 (zmm23_5, zmm15_5, zmm0_5, table);
inline vpternlogq64 (zmm23_6, zmm15_6, zmm0_6, table);
inline vpternlogq64 (zmm23_7, zmm15_7, zmm0_7, table);
(* vpternlogq $0x96,%zmm3,%zmm7,%zmm23             #! PC = 0x55555558dbc5 *)
mov table 0x96@uint8;
inline vpternlogq64 (zmm23_0, zmm7_0, zmm3_0, table);
inline vpternlogq64 (zmm23_1, zmm7_1, zmm3_1, table);
inline vpternlogq64 (zmm23_2, zmm7_2, zmm3_2, table);
inline vpternlogq64 (zmm23_3, zmm7_3, zmm3_3, table);
inline vpternlogq64 (zmm23_4, zmm7_4, zmm3_4, table);
inline vpternlogq64 (zmm23_5, zmm7_5, zmm3_5, table);
inline vpternlogq64 (zmm23_6, zmm7_6, zmm3_6, table);
inline vpternlogq64 (zmm23_7, zmm7_7, zmm3_7, table);
(* vmovdqa64 %zmm14,%zmm26                         #! PC = 0x55555558dbcc *)
mov zmm26_0 zmm14_0;
mov zmm26_1 zmm14_1;
mov zmm26_2 zmm14_2;
mov zmm26_3 zmm14_3;
mov zmm26_4 zmm14_4;
mov zmm26_5 zmm14_5;
mov zmm26_6 zmm14_6;
mov zmm26_7 zmm14_7;
(* vpternlogq $0x96,%zmm25,%zmm16,%zmm26           #! PC = 0x55555558dbd2 *)
mov table 0x96@uint8;
inline vpternlogq64 (zmm26_0, zmm16_0, zmm25_0, table);
inline vpternlogq64 (zmm26_1, zmm16_1, zmm25_1, table);
inline vpternlogq64 (zmm26_2, zmm16_2, zmm25_2, table);
inline vpternlogq64 (zmm26_3, zmm16_3, zmm25_3, table);
inline vpternlogq64 (zmm26_4, zmm16_4, zmm25_4, table);
inline vpternlogq64 (zmm26_5, zmm16_5, zmm25_5, table);
inline vpternlogq64 (zmm26_6, zmm16_6, zmm25_6, table);
inline vpternlogq64 (zmm26_7, zmm16_7, zmm25_7, table);
(* vmovdqa64 %zmm10,0x148(%rsp)                    #! EA = L0x7fffffffd600; PC = 0x55555558dbd9 *)
mov L0x7fffffffd600 zmm10_0;
mov L0x7fffffffd608 zmm10_1;
mov L0x7fffffffd610 zmm10_2;
mov L0x7fffffffd618 zmm10_3;
mov L0x7fffffffd620 zmm10_4;
mov L0x7fffffffd628 zmm10_5;
mov L0x7fffffffd630 zmm10_6;
mov L0x7fffffffd638 zmm10_7;
(* vprolq $0x1,%zmm23,%zmm10                       #! PC = 0x55555558dbe4 *)
rol zmm10_0 zmm23_0 0x1;
rol zmm10_1 zmm23_1 0x1;
rol zmm10_2 zmm23_2 0x1;
rol zmm10_3 zmm23_3 0x1;
rol zmm10_4 zmm23_4 0x1;
rol zmm10_5 zmm23_5 0x1;
rol zmm10_6 zmm23_6 0x1;
rol zmm10_7 zmm23_7 0x1;
(* vpternlogq $0x96,%zmm17,%zmm4,%zmm26            #! PC = 0x55555558dbeb *)
mov table 0x96@uint8;
inline vpternlogq64 (zmm26_0, zmm4_0, zmm17_0, table);
inline vpternlogq64 (zmm26_1, zmm4_1, zmm17_1, table);
inline vpternlogq64 (zmm26_2, zmm4_2, zmm17_2, table);
inline vpternlogq64 (zmm26_3, zmm4_3, zmm17_3, table);
inline vpternlogq64 (zmm26_4, zmm4_4, zmm17_4, table);
inline vpternlogq64 (zmm26_5, zmm4_5, zmm17_5, table);
inline vpternlogq64 (zmm26_6, zmm4_6, zmm17_6, table);
inline vpternlogq64 (zmm26_7, zmm4_7, zmm17_7, table);
(* vmovdqa64 %zmm24,%zmm8                          #! PC = 0x55555558dbf2 *)
mov zmm8_0 zmm24_0;
mov zmm8_1 zmm24_1;
mov zmm8_2 zmm24_2;
mov zmm8_3 zmm24_3;
mov zmm8_4 zmm24_4;
mov zmm8_5 zmm24_5;
mov zmm8_6 zmm24_6;
mov zmm8_7 zmm24_7;
(* vpternlogq $0x96,%zmm12,%zmm29,%zmm8            #! PC = 0x55555558dbf8 *)
mov table 0x96@uint8;
inline vpternlogq64 (zmm8_0, zmm29_0, zmm12_0, table);
inline vpternlogq64 (zmm8_1, zmm29_1, zmm12_1, table);
inline vpternlogq64 (zmm8_2, zmm29_2, zmm12_2, table);
inline vpternlogq64 (zmm8_3, zmm29_3, zmm12_3, table);
inline vpternlogq64 (zmm8_4, zmm29_4, zmm12_4, table);
inline vpternlogq64 (zmm8_5, zmm29_5, zmm12_5, table);
inline vpternlogq64 (zmm8_6, zmm29_6, zmm12_6, table);
inline vpternlogq64 (zmm8_7, zmm29_7, zmm12_7, table);
(* vpternlogq $0x96,%zmm21,%zmm27,%zmm8            #! PC = 0x55555558dbff *)
mov table 0x96@uint8;
inline vpternlogq64 (zmm8_0, zmm27_0, zmm21_0, table);
inline vpternlogq64 (zmm8_1, zmm27_1, zmm21_1, table);
inline vpternlogq64 (zmm8_2, zmm27_2, zmm21_2, table);
inline vpternlogq64 (zmm8_3, zmm27_3, zmm21_3, table);
inline vpternlogq64 (zmm8_4, zmm27_4, zmm21_4, table);
inline vpternlogq64 (zmm8_5, zmm27_5, zmm21_5, table);
inline vpternlogq64 (zmm8_6, zmm27_6, zmm21_6, table);
inline vpternlogq64 (zmm8_7, zmm27_7, zmm21_7, table);
(* vmovdqa64 %zmm28,%zmm19                         #! PC = 0x55555558dc06 *)
mov zmm19_0 zmm28_0;
mov zmm19_1 zmm28_1;
mov zmm19_2 zmm28_2;
mov zmm19_3 zmm28_3;
mov zmm19_4 zmm28_4;
mov zmm19_5 zmm28_5;
mov zmm19_6 zmm28_6;
mov zmm19_7 zmm28_7;
(* vmovdqa64 %zmm10,0x108(%rsp)                    #! EA = L0x7fffffffd5c0; PC = 0x55555558dc0c *)
mov L0x7fffffffd5c0 zmm10_0;
mov L0x7fffffffd5c8 zmm10_1;
mov L0x7fffffffd5d0 zmm10_2;
mov L0x7fffffffd5d8 zmm10_3;
mov L0x7fffffffd5e0 zmm10_4;
mov L0x7fffffffd5e8 zmm10_5;
mov L0x7fffffffd5f0 zmm10_6;
mov L0x7fffffffd5f8 zmm10_7;
(* vprolq $0x1,%zmm26,%zmm10                       #! PC = 0x55555558dc17 *)
rol zmm10_0 zmm26_0 0x1;
rol zmm10_1 zmm26_1 0x1;
rol zmm10_2 zmm26_2 0x1;
rol zmm10_3 zmm26_3 0x1;
rol zmm10_4 zmm26_4 0x1;
rol zmm10_5 zmm26_5 0x1;
rol zmm10_6 zmm26_6 0x1;
rol zmm10_7 zmm26_7 0x1;
(* vpternlogq $0x96,%zmm11,%zmm30,%zmm19           #! PC = 0x55555558dc1e *)
mov table 0x96@uint8;
inline vpternlogq64 (zmm19_0, zmm30_0, zmm11_0, table);
inline vpternlogq64 (zmm19_1, zmm30_1, zmm11_1, table);
inline vpternlogq64 (zmm19_2, zmm30_2, zmm11_2, table);
inline vpternlogq64 (zmm19_3, zmm30_3, zmm11_3, table);
inline vpternlogq64 (zmm19_4, zmm30_4, zmm11_4, table);
inline vpternlogq64 (zmm19_5, zmm30_5, zmm11_5, table);
inline vpternlogq64 (zmm19_6, zmm30_6, zmm11_6, table);
inline vpternlogq64 (zmm19_7, zmm30_7, zmm11_7, table);
(* vpternlogq $0x96,%zmm31,%zmm13,%zmm19           #! PC = 0x55555558dc25 *)
mov table 0x96@uint8;
inline vpternlogq64 (zmm19_0, zmm13_0, zmm31_0, table);
inline vpternlogq64 (zmm19_1, zmm13_1, zmm31_1, table);
inline vpternlogq64 (zmm19_2, zmm13_2, zmm31_2, table);
inline vpternlogq64 (zmm19_3, zmm13_3, zmm31_3, table);
inline vpternlogq64 (zmm19_4, zmm13_4, zmm31_4, table);
inline vpternlogq64 (zmm19_5, zmm13_5, zmm31_5, table);
inline vpternlogq64 (zmm19_6, zmm13_6, zmm31_6, table);
inline vpternlogq64 (zmm19_7, zmm13_7, zmm31_7, table);
(* vprolq $0x1,%zmm19,%zmm2                        #! PC = 0x55555558dc2c *)
rol zmm2_0 zmm19_0 0x1;
rol zmm2_1 zmm19_1 0x1;
rol zmm2_2 zmm19_2 0x1;
rol zmm2_3 zmm19_3 0x1;
rol zmm2_4 zmm19_4 0x1;
rol zmm2_5 zmm19_5 0x1;
rol zmm2_6 zmm19_6 0x1;
rol zmm2_7 zmm19_7 0x1;
(* vpxord 0x108(%rsp),%zmm19,%zmm19                #! EA = L0x7fffffffd5c0; Value = 0x04003a2a86d1e41a; PC = 0x55555558dc33 *)
xor zmm19_0@uint64 zmm19_0 L0x7fffffffd5c0;
xor zmm19_1@uint64 zmm19_1 L0x7fffffffd5c8;
xor zmm19_2@uint64 zmm19_2 L0x7fffffffd5d0;
xor zmm19_3@uint64 zmm19_3 L0x7fffffffd5d8;
xor zmm19_4@uint64 zmm19_4 L0x7fffffffd5e0;
xor zmm19_5@uint64 zmm19_5 L0x7fffffffd5e8;
xor zmm19_6@uint64 zmm19_6 L0x7fffffffd5f0;
xor zmm19_7@uint64 zmm19_7 L0x7fffffffd5f8;
(* movabs $0x8000000000008003,%r9                  #! PC = 0x55555558dc3e *)
mov r9 0x8000000000008003@uint64;
(* vmovdqa64 %zmm10,0xc8(%rsp)                     #! EA = L0x7fffffffd580; PC = 0x55555558dc48 *)
mov L0x7fffffffd580 zmm10_0;
mov L0x7fffffffd588 zmm10_1;
mov L0x7fffffffd590 zmm10_2;
mov L0x7fffffffd598 zmm10_3;
mov L0x7fffffffd5a0 zmm10_4;
mov L0x7fffffffd5a8 zmm10_5;
mov L0x7fffffffd5b0 zmm10_6;
mov L0x7fffffffd5b8 zmm10_7;
(* vprolq $0x1,%zmm8,%zmm10                        #! PC = 0x55555558dc53 *)
rol zmm10_0 zmm8_0 0x1;
rol zmm10_1 zmm8_1 0x1;
rol zmm10_2 zmm8_2 0x1;
rol zmm10_3 zmm8_3 0x1;
rol zmm10_4 zmm8_4 0x1;
rol zmm10_5 zmm8_5 0x1;
rol zmm10_6 zmm8_6 0x1;
rol zmm10_7 zmm8_7 0x1;
(* vpxord 0x148(%rsp),%zmm8,%zmm8                  #! EA = L0x7fffffffd600; Value = 0xb71ea4619b5acba4; PC = 0x55555558dc5a *)
xor zmm8_0@uint64 zmm8_0 L0x7fffffffd600;
xor zmm8_1@uint64 zmm8_1 L0x7fffffffd608;
xor zmm8_2@uint64 zmm8_2 L0x7fffffffd610;
xor zmm8_3@uint64 zmm8_3 L0x7fffffffd618;
xor zmm8_4@uint64 zmm8_4 L0x7fffffffd620;
xor zmm8_5@uint64 zmm8_5 L0x7fffffffd628;
xor zmm8_6@uint64 zmm8_6 L0x7fffffffd630;
xor zmm8_7@uint64 zmm8_7 L0x7fffffffd638;
(* vpxord 0xc8(%rsp),%zmm20,%zmm20                 #! EA = L0x7fffffffd580; Value = 0x323b64af41b6adf6; PC = 0x55555558dc65 *)
xor zmm20_0@uint64 zmm20_0 L0x7fffffffd580;
xor zmm20_1@uint64 zmm20_1 L0x7fffffffd588;
xor zmm20_2@uint64 zmm20_2 L0x7fffffffd590;
xor zmm20_3@uint64 zmm20_3 L0x7fffffffd598;
xor zmm20_4@uint64 zmm20_4 L0x7fffffffd5a0;
xor zmm20_5@uint64 zmm20_5 L0x7fffffffd5a8;
xor zmm20_6@uint64 zmm20_6 L0x7fffffffd5b0;
xor zmm20_7@uint64 zmm20_7 L0x7fffffffd5b8;
(* vpxord %zmm30,%zmm8,%zmm30                      #! PC = 0x55555558dc70 *)
xor zmm30_0@uint64 zmm8_0 zmm30_0;
xor zmm30_1@uint64 zmm8_1 zmm30_1;
xor zmm30_2@uint64 zmm8_2 zmm30_2;
xor zmm30_3@uint64 zmm8_3 zmm30_3;
xor zmm30_4@uint64 zmm8_4 zmm30_4;
xor zmm30_5@uint64 zmm8_5 zmm30_5;
xor zmm30_6@uint64 zmm8_6 zmm30_6;
xor zmm30_7@uint64 zmm8_7 zmm30_7;
(* vprorq $0x14,%zmm30,%zmm30                      #! PC = 0x55555558dc76 *)
ror zmm30_0 zmm30_0 0x14;
ror zmm30_1 zmm30_1 0x14;
ror zmm30_2 zmm30_2 0x14;
ror zmm30_3 zmm30_3 0x14;
ror zmm30_4 zmm30_4 0x14;
ror zmm30_5 zmm30_5 0x14;
ror zmm30_6 zmm30_6 0x14;
ror zmm30_7 zmm30_7 0x14;
(* vpxord %zmm5,%zmm19,%zmm5                       #! PC = 0x55555558dc7d *)
xor zmm5_0@uint64 zmm19_0 zmm5_0;
xor zmm5_1@uint64 zmm19_1 zmm5_1;
xor zmm5_2@uint64 zmm19_2 zmm5_2;
xor zmm5_3@uint64 zmm19_3 zmm5_3;
xor zmm5_4@uint64 zmm19_4 zmm5_4;
xor zmm5_5@uint64 zmm19_5 zmm5_5;
xor zmm5_6@uint64 zmm19_6 zmm5_6;
xor zmm5_7@uint64 zmm19_7 zmm5_7;
(* vpxord %zmm23,%zmm10,%zmm10                     #! PC = 0x55555558dc83 *)
xor zmm10_0@uint64 zmm10_0 zmm23_0;
xor zmm10_1@uint64 zmm10_1 zmm23_1;
xor zmm10_2@uint64 zmm10_2 zmm23_2;
xor zmm10_3@uint64 zmm10_3 zmm23_3;
xor zmm10_4@uint64 zmm10_4 zmm23_4;
xor zmm10_5@uint64 zmm10_5 zmm23_5;
xor zmm10_6@uint64 zmm10_6 zmm23_6;
xor zmm10_7@uint64 zmm10_7 zmm23_7;
(* vpxord %zmm7,%zmm20,%zmm7                       #! PC = 0x55555558dc89 *)
xor zmm7_0@uint64 zmm20_0 zmm7_0;
xor zmm7_1@uint64 zmm20_1 zmm7_1;
xor zmm7_2@uint64 zmm20_2 zmm7_2;
xor zmm7_3@uint64 zmm20_3 zmm7_3;
xor zmm7_4@uint64 zmm20_4 zmm7_4;
xor zmm7_5@uint64 zmm20_5 zmm7_5;
xor zmm7_6@uint64 zmm20_6 zmm7_6;
xor zmm7_7@uint64 zmm20_7 zmm7_7;
(* vpxord %zmm17,%zmm10,%zmm17                     #! PC = 0x55555558dc8f *)
xor zmm17_0@uint64 zmm10_0 zmm17_0;
xor zmm17_1@uint64 zmm10_1 zmm17_1;
xor zmm17_2@uint64 zmm10_2 zmm17_2;
xor zmm17_3@uint64 zmm10_3 zmm17_3;
xor zmm17_4@uint64 zmm10_4 zmm17_4;
xor zmm17_5@uint64 zmm10_5 zmm17_5;
xor zmm17_6@uint64 zmm10_6 zmm17_6;
xor zmm17_7@uint64 zmm10_7 zmm17_7;
(* vpxord %zmm26,%zmm2,%zmm2                       #! PC = 0x55555558dc95 *)
xor zmm2_0@uint64 zmm2_0 zmm26_0;
xor zmm2_1@uint64 zmm2_1 zmm26_1;
xor zmm2_2@uint64 zmm2_2 zmm26_2;
xor zmm2_3@uint64 zmm2_3 zmm26_3;
xor zmm2_4@uint64 zmm2_4 zmm26_4;
xor zmm2_5@uint64 zmm2_5 zmm26_5;
xor zmm2_6@uint64 zmm2_6 zmm26_6;
xor zmm2_7@uint64 zmm2_7 zmm26_7;
(* vprorq $0x15,%zmm5,%zmm5                        #! PC = 0x55555558dc9b *)
ror zmm5_0 zmm5_0 0x15;
ror zmm5_1 zmm5_1 0x15;
ror zmm5_2 zmm5_2 0x15;
ror zmm5_3 zmm5_3 0x15;
ror zmm5_4 zmm5_4 0x15;
ror zmm5_5 zmm5_5 0x15;
ror zmm5_6 zmm5_6 0x15;
ror zmm5_7 zmm5_7 0x15;
(* vprolq $0x15,%zmm7,%zmm7                        #! PC = 0x55555558dca2 *)
rol zmm7_0 zmm7_0 0x15;
rol zmm7_1 zmm7_1 0x15;
rol zmm7_2 zmm7_2 0x15;
rol zmm7_3 zmm7_3 0x15;
rol zmm7_4 zmm7_4 0x15;
rol zmm7_5 zmm7_5 0x15;
rol zmm7_6 zmm7_6 0x15;
rol zmm7_7 zmm7_7 0x15;
(* vprolq $0xe,%zmm17,%zmm17                       #! PC = 0x55555558dca9 *)
rol zmm17_0 zmm17_0 0xe;
rol zmm17_1 zmm17_1 0xe;
rol zmm17_2 zmm17_2 0xe;
rol zmm17_3 zmm17_3 0xe;
rol zmm17_4 zmm17_4 0xe;
rol zmm17_5 zmm17_5 0xe;
rol zmm17_6 zmm17_6 0xe;
rol zmm17_7 zmm17_7 0xe;
(* vpxord %zmm18,%zmm19,%zmm18                     #! PC = 0x55555558dcb0 *)
xor zmm18_0@uint64 zmm19_0 zmm18_0;
xor zmm18_1@uint64 zmm19_1 zmm18_1;
xor zmm18_2@uint64 zmm19_2 zmm18_2;
xor zmm18_3@uint64 zmm19_3 zmm18_3;
xor zmm18_4@uint64 zmm19_4 zmm18_4;
xor zmm18_5@uint64 zmm19_5 zmm18_5;
xor zmm18_6@uint64 zmm19_6 zmm18_6;
xor zmm18_7@uint64 zmm19_7 zmm18_7;
(* vpxord %zmm9,%zmm20,%zmm9                       #! PC = 0x55555558dcb6 *)
xor zmm9_0@uint64 zmm20_0 zmm9_0;
xor zmm9_1@uint64 zmm20_1 zmm9_1;
xor zmm9_2@uint64 zmm20_2 zmm9_2;
xor zmm9_3@uint64 zmm20_3 zmm9_3;
xor zmm9_4@uint64 zmm20_4 zmm9_4;
xor zmm9_5@uint64 zmm20_5 zmm9_5;
xor zmm9_6@uint64 zmm20_6 zmm9_6;
xor zmm9_7@uint64 zmm20_7 zmm9_7;
(* vpxord %zmm16,%zmm10,%zmm16                     #! PC = 0x55555558dcbc *)
xor zmm16_0@uint64 zmm10_0 zmm16_0;
xor zmm16_1@uint64 zmm10_1 zmm16_1;
xor zmm16_2@uint64 zmm10_2 zmm16_2;
xor zmm16_3@uint64 zmm10_3 zmm16_3;
xor zmm16_4@uint64 zmm10_4 zmm16_4;
xor zmm16_5@uint64 zmm10_5 zmm16_5;
xor zmm16_6@uint64 zmm10_6 zmm16_6;
xor zmm16_7@uint64 zmm10_7 zmm16_7;
(* vpxord %zmm22,%zmm19,%zmm22                     #! PC = 0x55555558dcc2 *)
xor zmm22_0@uint64 zmm19_0 zmm22_0;
xor zmm22_1@uint64 zmm19_1 zmm22_1;
xor zmm22_2@uint64 zmm19_2 zmm22_2;
xor zmm22_3@uint64 zmm19_3 zmm22_3;
xor zmm22_4@uint64 zmm19_4 zmm22_4;
xor zmm22_5@uint64 zmm19_5 zmm22_5;
xor zmm22_6@uint64 zmm19_6 zmm22_6;
xor zmm22_7@uint64 zmm19_7 zmm22_7;
(* vpxord %zmm0,%zmm20,%zmm0                       #! PC = 0x55555558dcc8 *)
xor zmm0_0@uint64 zmm20_0 zmm0_0;
xor zmm0_1@uint64 zmm20_1 zmm0_1;
xor zmm0_2@uint64 zmm20_2 zmm0_2;
xor zmm0_3@uint64 zmm20_3 zmm0_3;
xor zmm0_4@uint64 zmm20_4 zmm0_4;
xor zmm0_5@uint64 zmm20_5 zmm0_5;
xor zmm0_6@uint64 zmm20_6 zmm0_6;
xor zmm0_7@uint64 zmm20_7 zmm0_7;
(* vpxord %zmm6,%zmm19,%zmm6                       #! PC = 0x55555558dcce *)
xor zmm6_0@uint64 zmm19_0 zmm6_0;
xor zmm6_1@uint64 zmm19_1 zmm6_1;
xor zmm6_2@uint64 zmm19_2 zmm6_2;
xor zmm6_3@uint64 zmm19_3 zmm6_3;
xor zmm6_4@uint64 zmm19_4 zmm6_4;
xor zmm6_5@uint64 zmm19_5 zmm6_5;
xor zmm6_6@uint64 zmm19_6 zmm6_6;
xor zmm6_7@uint64 zmm19_7 zmm6_7;
(* vpxord %zmm3,%zmm20,%zmm3                       #! PC = 0x55555558dcd4 *)
xor zmm3_0@uint64 zmm20_0 zmm3_0;
xor zmm3_1@uint64 zmm20_1 zmm3_1;
xor zmm3_2@uint64 zmm20_2 zmm3_2;
xor zmm3_3@uint64 zmm20_3 zmm3_3;
xor zmm3_4@uint64 zmm20_4 zmm3_4;
xor zmm3_5@uint64 zmm20_5 zmm3_5;
xor zmm3_6@uint64 zmm20_6 zmm3_6;
xor zmm3_7@uint64 zmm20_7 zmm3_7;
(* vpxord %zmm1,%zmm19,%zmm19                      #! PC = 0x55555558dcda *)
xor zmm19_0@uint64 zmm19_0 zmm1_0;
xor zmm19_1@uint64 zmm19_1 zmm1_1;
xor zmm19_2@uint64 zmm19_2 zmm1_2;
xor zmm19_3@uint64 zmm19_3 zmm1_3;
xor zmm19_4@uint64 zmm19_4 zmm1_4;
xor zmm19_5@uint64 zmm19_5 zmm1_5;
xor zmm19_6@uint64 zmm19_6 zmm1_6;
xor zmm19_7@uint64 zmm19_7 zmm1_7;
(* vpxord %zmm15,%zmm20,%zmm20                     #! PC = 0x55555558dce0 *)
xor zmm20_0@uint64 zmm20_0 zmm15_0;
xor zmm20_1@uint64 zmm20_1 zmm15_1;
xor zmm20_2@uint64 zmm20_2 zmm15_2;
xor zmm20_3@uint64 zmm20_3 zmm15_3;
xor zmm20_4@uint64 zmm20_4 zmm15_4;
xor zmm20_5@uint64 zmm20_5 zmm15_5;
xor zmm20_6@uint64 zmm20_6 zmm15_6;
xor zmm20_7@uint64 zmm20_7 zmm15_7;
(* vpxord %zmm24,%zmm2,%zmm24                      #! PC = 0x55555558dce6 *)
xor zmm24_0@uint64 zmm2_0 zmm24_0;
xor zmm24_1@uint64 zmm2_1 zmm24_1;
xor zmm24_2@uint64 zmm2_2 zmm24_2;
xor zmm24_3@uint64 zmm2_3 zmm24_3;
xor zmm24_4@uint64 zmm2_4 zmm24_4;
xor zmm24_5@uint64 zmm2_5 zmm24_5;
xor zmm24_6@uint64 zmm2_6 zmm24_6;
xor zmm24_7@uint64 zmm2_7 zmm24_7;
(* vprolq $0x1c,%zmm9,%zmm9                        #! PC = 0x55555558dcec *)
rol zmm9_0 zmm9_0 0x1c;
rol zmm9_1 zmm9_1 0x1c;
rol zmm9_2 zmm9_2 0x1c;
rol zmm9_3 zmm9_3 0x1c;
rol zmm9_4 zmm9_4 0x1c;
rol zmm9_5 zmm9_5 0x1c;
rol zmm9_6 zmm9_6 0x1c;
rol zmm9_7 zmm9_7 0x1c;
(* vprolq $0x14,%zmm16,%zmm16                      #! PC = 0x55555558dcf3 *)
rol zmm16_0 zmm16_0 0x14;
rol zmm16_1 zmm16_1 0x14;
rol zmm16_2 zmm16_2 0x14;
rol zmm16_3 zmm16_3 0x14;
rol zmm16_4 zmm16_4 0x14;
rol zmm16_5 zmm16_5 0x14;
rol zmm16_6 zmm16_6 0x14;
rol zmm16_7 zmm16_7 0x14;
(* vprorq $0x2,%zmm19,%zmm19                       #! PC = 0x55555558dcfa *)
ror zmm19_0 zmm19_0 0x2;
ror zmm19_1 zmm19_1 0x2;
ror zmm19_2 zmm19_2 0x2;
ror zmm19_3 zmm19_3 0x2;
ror zmm19_4 zmm19_4 0x2;
ror zmm19_5 zmm19_5 0x2;
ror zmm19_6 zmm19_6 0x2;
ror zmm19_7 zmm19_7 0x2;
(* vprorq $0x9,%zmm20,%zmm20                       #! PC = 0x55555558dd01 *)
ror zmm20_0 zmm20_0 0x9;
ror zmm20_1 zmm20_1 0x9;
ror zmm20_2 zmm20_2 0x9;
ror zmm20_3 zmm20_3 0x9;
ror zmm20_4 zmm20_4 0x9;
ror zmm20_5 zmm20_5 0x9;
ror zmm20_6 zmm20_6 0x9;
ror zmm20_7 zmm20_7 0x9;
(* vpxord %zmm12,%zmm2,%zmm12                      #! PC = 0x55555558dd08 *)
xor zmm12_0@uint64 zmm2_0 zmm12_0;
xor zmm12_1@uint64 zmm2_1 zmm12_1;
xor zmm12_2@uint64 zmm2_2 zmm12_2;
xor zmm12_3@uint64 zmm2_3 zmm12_3;
xor zmm12_4@uint64 zmm2_4 zmm12_4;
xor zmm12_5@uint64 zmm2_5 zmm12_5;
xor zmm12_6@uint64 zmm2_6 zmm12_6;
xor zmm12_7@uint64 zmm2_7 zmm12_7;
(* vpxord %zmm13,%zmm8,%zmm13                      #! PC = 0x55555558dd0e *)
xor zmm13_0@uint64 zmm8_0 zmm13_0;
xor zmm13_1@uint64 zmm8_1 zmm13_1;
xor zmm13_2@uint64 zmm8_2 zmm13_2;
xor zmm13_3@uint64 zmm8_3 zmm13_3;
xor zmm13_4@uint64 zmm8_4 zmm13_4;
xor zmm13_5@uint64 zmm8_5 zmm13_5;
xor zmm13_6@uint64 zmm8_6 zmm13_6;
xor zmm13_7@uint64 zmm8_7 zmm13_7;
(* vpxord %zmm21,%zmm2,%zmm21                      #! PC = 0x55555558dd14 *)
xor zmm21_0@uint64 zmm2_0 zmm21_0;
xor zmm21_1@uint64 zmm2_1 zmm21_1;
xor zmm21_2@uint64 zmm2_2 zmm21_2;
xor zmm21_3@uint64 zmm2_3 zmm21_3;
xor zmm21_4@uint64 zmm2_4 zmm21_4;
xor zmm21_5@uint64 zmm2_5 zmm21_5;
xor zmm21_6@uint64 zmm2_6 zmm21_6;
xor zmm21_7@uint64 zmm2_7 zmm21_7;
(* vpxord %zmm28,%zmm8,%zmm28                      #! PC = 0x55555558dd1a *)
xor zmm28_0@uint64 zmm8_0 zmm28_0;
xor zmm28_1@uint64 zmm8_1 zmm28_1;
xor zmm28_2@uint64 zmm8_2 zmm28_2;
xor zmm28_3@uint64 zmm8_3 zmm28_3;
xor zmm28_4@uint64 zmm8_4 zmm28_4;
xor zmm28_5@uint64 zmm8_5 zmm28_5;
xor zmm28_6@uint64 zmm8_6 zmm28_6;
xor zmm28_7@uint64 zmm8_7 zmm28_7;
(* vpxord %zmm4,%zmm10,%zmm4                       #! PC = 0x55555558dd20 *)
xor zmm4_0@uint64 zmm10_0 zmm4_0;
xor zmm4_1@uint64 zmm10_1 zmm4_1;
xor zmm4_2@uint64 zmm10_2 zmm4_2;
xor zmm4_3@uint64 zmm10_3 zmm4_3;
xor zmm4_4@uint64 zmm10_4 zmm4_4;
xor zmm4_5@uint64 zmm10_5 zmm4_5;
xor zmm4_6@uint64 zmm10_6 zmm4_6;
xor zmm4_7@uint64 zmm10_7 zmm4_7;
(* vpxord %zmm29,%zmm2,%zmm29                      #! PC = 0x55555558dd26 *)
xor zmm29_0@uint64 zmm2_0 zmm29_0;
xor zmm29_1@uint64 zmm2_1 zmm29_1;
xor zmm29_2@uint64 zmm2_2 zmm29_2;
xor zmm29_3@uint64 zmm2_3 zmm29_3;
xor zmm29_4@uint64 zmm2_4 zmm29_4;
xor zmm29_5@uint64 zmm2_5 zmm29_5;
xor zmm29_6@uint64 zmm2_6 zmm29_6;
xor zmm29_7@uint64 zmm2_7 zmm29_7;
(* vpxord %zmm11,%zmm8,%zmm11                      #! PC = 0x55555558dd2c *)
xor zmm11_0@uint64 zmm8_0 zmm11_0;
xor zmm11_1@uint64 zmm8_1 zmm11_1;
xor zmm11_2@uint64 zmm8_2 zmm11_2;
xor zmm11_3@uint64 zmm8_3 zmm11_3;
xor zmm11_4@uint64 zmm8_4 zmm11_4;
xor zmm11_5@uint64 zmm8_5 zmm11_5;
xor zmm11_6@uint64 zmm8_6 zmm11_6;
xor zmm11_7@uint64 zmm8_7 zmm11_7;
(* vpxord %zmm14,%zmm10,%zmm14                     #! PC = 0x55555558dd32 *)
xor zmm14_0@uint64 zmm10_0 zmm14_0;
xor zmm14_1@uint64 zmm10_1 zmm14_1;
xor zmm14_2@uint64 zmm10_2 zmm14_2;
xor zmm14_3@uint64 zmm10_3 zmm14_3;
xor zmm14_4@uint64 zmm10_4 zmm14_4;
xor zmm14_5@uint64 zmm10_5 zmm14_5;
xor zmm14_6@uint64 zmm10_6 zmm14_6;
xor zmm14_7@uint64 zmm10_7 zmm14_7;
(* vpxord %zmm27,%zmm2,%zmm2                       #! PC = 0x55555558dd38 *)
xor zmm2_0@uint64 zmm2_0 zmm27_0;
xor zmm2_1@uint64 zmm2_1 zmm27_1;
xor zmm2_2@uint64 zmm2_2 zmm27_2;
xor zmm2_3@uint64 zmm2_3 zmm27_3;
xor zmm2_4@uint64 zmm2_4 zmm27_4;
xor zmm2_5@uint64 zmm2_5 zmm27_5;
xor zmm2_6@uint64 zmm2_6 zmm27_6;
xor zmm2_7@uint64 zmm2_7 zmm27_7;
(* vpxord %zmm31,%zmm8,%zmm8                       #! PC = 0x55555558dd3e *)
xor zmm8_0@uint64 zmm8_0 zmm31_0;
xor zmm8_1@uint64 zmm8_1 zmm31_1;
xor zmm8_2@uint64 zmm8_2 zmm31_2;
xor zmm8_3@uint64 zmm8_3 zmm31_3;
xor zmm8_4@uint64 zmm8_4 zmm31_4;
xor zmm8_5@uint64 zmm8_5 zmm31_5;
xor zmm8_6@uint64 zmm8_6 zmm31_6;
xor zmm8_7@uint64 zmm8_7 zmm31_7;
(* vpxord %zmm25,%zmm10,%zmm10                     #! PC = 0x55555558dd44 *)
xor zmm10_0@uint64 zmm10_0 zmm25_0;
xor zmm10_1@uint64 zmm10_1 zmm25_1;
xor zmm10_2@uint64 zmm10_2 zmm25_2;
xor zmm10_3@uint64 zmm10_3 zmm25_3;
xor zmm10_4@uint64 zmm10_4 zmm25_4;
xor zmm10_5@uint64 zmm10_5 zmm25_5;
xor zmm10_6@uint64 zmm10_6 zmm25_6;
xor zmm10_7@uint64 zmm10_7 zmm25_7;
(* vprolq $0x1,%zmm28,%zmm28                       #! PC = 0x55555558dd4a *)
rol zmm28_0 zmm28_0 0x1;
rol zmm28_1 zmm28_1 0x1;
rol zmm28_2 zmm28_2 0x1;
rol zmm28_3 zmm28_3 0x1;
rol zmm28_4 zmm28_4 0x1;
rol zmm28_5 zmm28_5 0x1;
rol zmm28_6 zmm28_6 0x1;
rol zmm28_7 zmm28_7 0x1;
(* vprolq $0x6,%zmm22,%zmm22                       #! PC = 0x55555558dd51 *)
rol zmm22_0 zmm22_0 0x6;
rol zmm22_1 zmm22_1 0x6;
rol zmm22_2 zmm22_2 0x6;
rol zmm22_3 zmm22_3 0x6;
rol zmm22_4 zmm22_4 0x6;
rol zmm22_5 zmm22_5 0x6;
rol zmm22_6 zmm22_6 0x6;
rol zmm22_7 zmm22_7 0x6;
(* vprolq $0x3,%zmm12,%zmm12                       #! PC = 0x55555558dd58 *)
rol zmm12_0 zmm12_0 0x3;
rol zmm12_1 zmm12_1 0x3;
rol zmm12_2 zmm12_2 0x3;
rol zmm12_3 zmm12_3 0x3;
rol zmm12_4 zmm12_4 0x3;
rol zmm12_5 zmm12_5 0x3;
rol zmm12_6 zmm12_6 0x3;
rol zmm12_7 zmm12_7 0x3;
(* vprorq $0x13,%zmm13,%zmm13                      #! PC = 0x55555558dd5f *)
ror zmm13_0 zmm13_0 0x13;
ror zmm13_1 zmm13_1 0x13;
ror zmm13_2 zmm13_2 0x13;
ror zmm13_3 zmm13_3 0x13;
ror zmm13_4 zmm13_4 0x13;
ror zmm13_5 zmm13_5 0x13;
ror zmm13_6 zmm13_6 0x13;
ror zmm13_7 zmm13_7 0x13;
(* vprorq $0x3,%zmm18,%zmm18                       #! PC = 0x55555558dd66 *)
ror zmm18_0 zmm18_0 0x3;
ror zmm18_1 zmm18_1 0x3;
ror zmm18_2 zmm18_2 0x3;
ror zmm18_3 zmm18_3 0x3;
ror zmm18_4 zmm18_4 0x3;
ror zmm18_5 zmm18_5 0x3;
ror zmm18_6 zmm18_6 0x3;
ror zmm18_7 zmm18_7 0x3;
(* vprorq $0x17,%zmm2,%zmm2                        #! PC = 0x55555558dd6d *)
ror zmm2_0 zmm2_0 0x17;
ror zmm2_1 zmm2_1 0x17;
ror zmm2_2 zmm2_2 0x17;
ror zmm2_3 zmm2_3 0x17;
ror zmm2_4 zmm2_4 0x17;
ror zmm2_5 zmm2_5 0x17;
ror zmm2_6 zmm2_6 0x17;
ror zmm2_7 zmm2_7 0x17;
(* vprolq $0x2,%zmm8,%zmm8                         #! PC = 0x55555558dd74 *)
rol zmm8_0 zmm8_0 0x2;
rol zmm8_1 zmm8_1 0x2;
rol zmm8_2 zmm8_2 0x2;
rol zmm8_3 zmm8_3 0x2;
rol zmm8_4 zmm8_4 0x2;
rol zmm8_5 zmm8_5 0x2;
rol zmm8_6 zmm8_6 0x2;
rol zmm8_7 zmm8_7 0x2;
(* vprorq $0x19,%zmm10,%zmm10                      #! PC = 0x55555558dd7b *)
ror zmm10_0 zmm10_0 0x19;
ror zmm10_1 zmm10_1 0x19;
ror zmm10_2 zmm10_2 0x19;
ror zmm10_3 zmm10_3 0x19;
ror zmm10_4 zmm10_4 0x19;
ror zmm10_5 zmm10_5 0x19;
ror zmm10_6 zmm10_6 0x19;
ror zmm10_7 zmm10_7 0x19;
(* vprorq $0x1c,%zmm29,%zmm29                      #! PC = 0x55555558dd82 *)
ror zmm29_0 zmm29_0 0x1c;
ror zmm29_1 zmm29_1 0x1c;
ror zmm29_2 zmm29_2 0x1c;
ror zmm29_3 zmm29_3 0x1c;
ror zmm29_4 zmm29_4 0x1c;
ror zmm29_5 zmm29_5 0x1c;
ror zmm29_6 zmm29_6 0x1c;
ror zmm29_7 zmm29_7 0x1c;
(* vprolq $0x1b,%zmm14,%zmm14                      #! PC = 0x55555558dd89 *)
rol zmm14_0 zmm14_0 0x1b;
rol zmm14_1 zmm14_1 0x1b;
rol zmm14_2 zmm14_2 0x1b;
rol zmm14_3 zmm14_3 0x1b;
rol zmm14_4 zmm14_4 0x1b;
rol zmm14_5 zmm14_5 0x1b;
rol zmm14_6 zmm14_6 0x1b;
rol zmm14_7 zmm14_7 0x1b;
(* vprolq $0x12,%zmm21,%zmm21                      #! PC = 0x55555558dd90 *)
rol zmm21_0 zmm21_0 0x12;
rol zmm21_1 zmm21_1 0x12;
rol zmm21_2 zmm21_2 0x12;
rol zmm21_3 zmm21_3 0x12;
rol zmm21_4 zmm21_4 0x12;
rol zmm21_5 zmm21_5 0x12;
rol zmm21_6 zmm21_6 0x12;
rol zmm21_7 zmm21_7 0x12;
(* vprolq $0x19,%zmm0,%zmm0                        #! PC = 0x55555558dd97 *)
rol zmm0_0 zmm0_0 0x19;
rol zmm0_1 zmm0_1 0x19;
rol zmm0_2 zmm0_2 0x19;
rol zmm0_3 zmm0_3 0x19;
rol zmm0_4 zmm0_4 0x19;
rol zmm0_5 zmm0_5 0x19;
rol zmm0_6 zmm0_6 0x19;
rol zmm0_7 zmm0_7 0x19;
(* vprolq $0x8,%zmm4,%zmm4                         #! PC = 0x55555558dd9e *)
rol zmm4_0 zmm4_0 0x8;
rol zmm4_1 zmm4_1 0x8;
rol zmm4_2 zmm4_2 0x8;
rol zmm4_3 zmm4_3 0x8;
rol zmm4_4 zmm4_4 0x8;
rol zmm4_5 zmm4_5 0x8;
rol zmm4_6 zmm4_6 0x8;
rol zmm4_7 zmm4_7 0x8;
(* vprolq $0xa,%zmm11,%zmm11                       #! PC = 0x55555558dda5 *)
rol zmm11_0 zmm11_0 0xa;
rol zmm11_1 zmm11_1 0xa;
rol zmm11_2 zmm11_2 0xa;
rol zmm11_3 zmm11_3 0xa;
rol zmm11_4 zmm11_4 0xa;
rol zmm11_5 zmm11_5 0xa;
rol zmm11_6 zmm11_6 0xa;
rol zmm11_7 zmm11_7 0xa;
(* vprolq $0xf,%zmm6,%zmm6                         #! PC = 0x55555558ddac *)
rol zmm6_0 zmm6_0 0xf;
rol zmm6_1 zmm6_1 0xf;
rol zmm6_2 zmm6_2 0xf;
rol zmm6_3 zmm6_3 0xf;
rol zmm6_4 zmm6_4 0xf;
rol zmm6_5 zmm6_5 0xf;
rol zmm6_6 zmm6_6 0xf;
rol zmm6_7 zmm6_7 0xf;
(* vprorq $0x8,%zmm3,%zmm3                         #! PC = 0x55555558ddb3 *)
ror zmm3_0 zmm3_0 0x8;
ror zmm3_1 zmm3_1 0x8;
ror zmm3_2 zmm3_2 0x8;
ror zmm3_3 zmm3_3 0x8;
ror zmm3_4 zmm3_4 0x8;
ror zmm3_5 zmm3_5 0x8;
ror zmm3_6 zmm3_6 0x8;
ror zmm3_7 zmm3_7 0x8;
(* vmovdqa64 %zmm24,%zmm26                         #! PC = 0x55555558ddba *)
mov zmm26_0 zmm24_0;
mov zmm26_1 zmm24_1;
mov zmm26_2 zmm24_2;
mov zmm26_3 zmm24_3;
mov zmm26_4 zmm24_4;
mov zmm26_5 zmm24_5;
mov zmm26_6 zmm24_6;
mov zmm26_7 zmm24_7;
(* vmovdqa64 %zmm30,%zmm23                         #! PC = 0x55555558ddc0 *)
mov zmm23_0 zmm30_0;
mov zmm23_1 zmm30_1;
mov zmm23_2 zmm30_2;
mov zmm23_3 zmm30_3;
mov zmm23_4 zmm30_4;
mov zmm23_5 zmm30_5;
mov zmm23_6 zmm30_6;
mov zmm23_7 zmm30_7;
(* vpternlogq $0xd2,%zmm5,%zmm30,%zmm26            #! PC = 0x55555558ddc6 *)
mov table 0xd2@uint8;
inline vpternlogq64 (zmm26_0, zmm30_0, zmm5_0, table);
inline vpternlogq64 (zmm26_1, zmm30_1, zmm5_1, table);
inline vpternlogq64 (zmm26_2, zmm30_2, zmm5_2, table);
inline vpternlogq64 (zmm26_3, zmm30_3, zmm5_3, table);
inline vpternlogq64 (zmm26_4, zmm30_4, zmm5_4, table);
inline vpternlogq64 (zmm26_5, zmm30_5, zmm5_5, table);
inline vpternlogq64 (zmm26_6, zmm30_6, zmm5_6, table);
inline vpternlogq64 (zmm26_7, zmm30_7, zmm5_7, table);
(* vpternlogq $0xd2,%zmm7,%zmm5,%zmm23             #! PC = 0x55555558ddcd *)
mov table 0xd2@uint8;
inline vpternlogq64 (zmm23_0, zmm5_0, zmm7_0, table);
inline vpternlogq64 (zmm23_1, zmm5_1, zmm7_1, table);
inline vpternlogq64 (zmm23_2, zmm5_2, zmm7_2, table);
inline vpternlogq64 (zmm23_3, zmm5_3, zmm7_3, table);
inline vpternlogq64 (zmm23_4, zmm5_4, zmm7_4, table);
inline vpternlogq64 (zmm23_5, zmm5_5, zmm7_5, table);
inline vpternlogq64 (zmm23_6, zmm5_6, zmm7_6, table);
inline vpternlogq64 (zmm23_7, zmm5_7, zmm7_7, table);
(* vpternlogq $0xd2,%zmm17,%zmm7,%zmm5             #! PC = 0x55555558ddd4 *)
mov table 0xd2@uint8;
inline vpternlogq64 (zmm5_0, zmm7_0, zmm17_0, table);
inline vpternlogq64 (zmm5_1, zmm7_1, zmm17_1, table);
inline vpternlogq64 (zmm5_2, zmm7_2, zmm17_2, table);
inline vpternlogq64 (zmm5_3, zmm7_3, zmm17_3, table);
inline vpternlogq64 (zmm5_4, zmm7_4, zmm17_4, table);
inline vpternlogq64 (zmm5_5, zmm7_5, zmm17_5, table);
inline vpternlogq64 (zmm5_6, zmm7_6, zmm17_6, table);
inline vpternlogq64 (zmm5_7, zmm7_7, zmm17_7, table);
(* vpternlogq $0xd2,%zmm24,%zmm17,%zmm7            #! PC = 0x55555558dddb *)
mov table 0xd2@uint8;
inline vpternlogq64 (zmm7_0, zmm17_0, zmm24_0, table);
inline vpternlogq64 (zmm7_1, zmm17_1, zmm24_1, table);
inline vpternlogq64 (zmm7_2, zmm17_2, zmm24_2, table);
inline vpternlogq64 (zmm7_3, zmm17_3, zmm24_3, table);
inline vpternlogq64 (zmm7_4, zmm17_4, zmm24_4, table);
inline vpternlogq64 (zmm7_5, zmm17_5, zmm24_5, table);
inline vpternlogq64 (zmm7_6, zmm17_6, zmm24_6, table);
inline vpternlogq64 (zmm7_7, zmm17_7, zmm24_7, table);
(* vpternlogq $0xd2,%zmm30,%zmm24,%zmm17           #! PC = 0x55555558dde2 *)
mov table 0xd2@uint8;
inline vpternlogq64 (zmm17_0, zmm24_0, zmm30_0, table);
inline vpternlogq64 (zmm17_1, zmm24_1, zmm30_1, table);
inline vpternlogq64 (zmm17_2, zmm24_2, zmm30_2, table);
inline vpternlogq64 (zmm17_3, zmm24_3, zmm30_3, table);
inline vpternlogq64 (zmm17_4, zmm24_4, zmm30_4, table);
inline vpternlogq64 (zmm17_5, zmm24_5, zmm30_5, table);
inline vpternlogq64 (zmm17_6, zmm24_6, zmm30_6, table);
inline vpternlogq64 (zmm17_7, zmm24_7, zmm30_7, table);
(* vpbroadcastq %r10,%zmm24                        #! PC = 0x55555558dde9 *)
mov zmm24_0 r10;
mov zmm24_1 r10;
mov zmm24_2 r10;
mov zmm24_3 r10;
mov zmm24_4 r10;
mov zmm24_5 r10;
mov zmm24_6 r10;
mov zmm24_7 r10;
(* vpxord %zmm24,%zmm26,%zmm24                     #! PC = 0x55555558ddef *)
xor zmm24_0@uint64 zmm26_0 zmm24_0;
xor zmm24_1@uint64 zmm26_1 zmm24_1;
xor zmm24_2@uint64 zmm26_2 zmm24_2;
xor zmm24_3@uint64 zmm26_3 zmm24_3;
xor zmm24_4@uint64 zmm26_4 zmm24_4;
xor zmm24_5@uint64 zmm26_5 zmm24_5;
xor zmm24_6@uint64 zmm26_6 zmm24_6;
xor zmm24_7@uint64 zmm26_7 zmm24_7;
(* vmovdqa64 %zmm16,%zmm30                         #! PC = 0x55555558ddf5 *)
mov zmm30_0 zmm16_0;
mov zmm30_1 zmm16_1;
mov zmm30_2 zmm16_2;
mov zmm30_3 zmm16_3;
mov zmm30_4 zmm16_4;
mov zmm30_5 zmm16_5;
mov zmm30_6 zmm16_6;
mov zmm30_7 zmm16_7;
(* vmovdqa64 %zmm9,%zmm26                          #! PC = 0x55555558ddfb *)
mov zmm26_0 zmm9_0;
mov zmm26_1 zmm9_1;
mov zmm26_2 zmm9_2;
mov zmm26_3 zmm9_3;
mov zmm26_4 zmm9_4;
mov zmm26_5 zmm9_5;
mov zmm26_6 zmm9_6;
mov zmm26_7 zmm9_7;
(* vmovdqa64 %zmm19,%zmm25                         #! PC = 0x55555558de01 *)
mov zmm25_0 zmm19_0;
mov zmm25_1 zmm19_1;
mov zmm25_2 zmm19_2;
mov zmm25_3 zmm19_3;
mov zmm25_4 zmm19_4;
mov zmm25_5 zmm19_5;
mov zmm25_6 zmm19_6;
mov zmm25_7 zmm19_7;
(* vmovdqa64 %zmm20,%zmm31                         #! PC = 0x55555558de07 *)
mov zmm31_0 zmm20_0;
mov zmm31_1 zmm20_1;
mov zmm31_2 zmm20_2;
mov zmm31_3 zmm20_3;
mov zmm31_4 zmm20_4;
mov zmm31_5 zmm20_5;
mov zmm31_6 zmm20_6;
mov zmm31_7 zmm20_7;
(* vpternlogq $0xd2,%zmm2,%zmm10,%zmm31            #! PC = 0x55555558de0d *)
mov table 0xd2@uint8;
inline vpternlogq64 (zmm31_0, zmm10_0, zmm2_0, table);
inline vpternlogq64 (zmm31_1, zmm10_1, zmm2_1, table);
inline vpternlogq64 (zmm31_2, zmm10_2, zmm2_2, table);
inline vpternlogq64 (zmm31_3, zmm10_3, zmm2_3, table);
inline vpternlogq64 (zmm31_4, zmm10_4, zmm2_4, table);
inline vpternlogq64 (zmm31_5, zmm10_5, zmm2_5, table);
inline vpternlogq64 (zmm31_6, zmm10_6, zmm2_6, table);
inline vpternlogq64 (zmm31_7, zmm10_7, zmm2_7, table);
(* vpternlogq $0xd2,%zmm12,%zmm16,%zmm26           #! PC = 0x55555558de14 *)
mov table 0xd2@uint8;
inline vpternlogq64 (zmm26_0, zmm16_0, zmm12_0, table);
inline vpternlogq64 (zmm26_1, zmm16_1, zmm12_1, table);
inline vpternlogq64 (zmm26_2, zmm16_2, zmm12_2, table);
inline vpternlogq64 (zmm26_3, zmm16_3, zmm12_3, table);
inline vpternlogq64 (zmm26_4, zmm16_4, zmm12_4, table);
inline vpternlogq64 (zmm26_5, zmm16_5, zmm12_5, table);
inline vpternlogq64 (zmm26_6, zmm16_6, zmm12_6, table);
inline vpternlogq64 (zmm26_7, zmm16_7, zmm12_7, table);
(* vpternlogq $0xd2,%zmm13,%zmm12,%zmm30           #! PC = 0x55555558de1b *)
mov table 0xd2@uint8;
inline vpternlogq64 (zmm30_0, zmm12_0, zmm13_0, table);
inline vpternlogq64 (zmm30_1, zmm12_1, zmm13_1, table);
inline vpternlogq64 (zmm30_2, zmm12_2, zmm13_2, table);
inline vpternlogq64 (zmm30_3, zmm12_3, zmm13_3, table);
inline vpternlogq64 (zmm30_4, zmm12_4, zmm13_4, table);
inline vpternlogq64 (zmm30_5, zmm12_5, zmm13_5, table);
inline vpternlogq64 (zmm30_6, zmm12_6, zmm13_6, table);
inline vpternlogq64 (zmm30_7, zmm12_7, zmm13_7, table);
(* vpternlogq $0xd2,%zmm10,%zmm20,%zmm25           #! PC = 0x55555558de22 *)
mov table 0xd2@uint8;
inline vpternlogq64 (zmm25_0, zmm20_0, zmm10_0, table);
inline vpternlogq64 (zmm25_1, zmm20_1, zmm10_1, table);
inline vpternlogq64 (zmm25_2, zmm20_2, zmm10_2, table);
inline vpternlogq64 (zmm25_3, zmm20_3, zmm10_3, table);
inline vpternlogq64 (zmm25_4, zmm20_4, zmm10_4, table);
inline vpternlogq64 (zmm25_5, zmm20_5, zmm10_5, table);
inline vpternlogq64 (zmm25_6, zmm20_6, zmm10_6, table);
inline vpternlogq64 (zmm25_7, zmm20_7, zmm10_7, table);
(* vpternlogq $0xd2,%zmm18,%zmm13,%zmm12           #! PC = 0x55555558de29 *)
mov table 0xd2@uint8;
inline vpternlogq64 (zmm12_0, zmm13_0, zmm18_0, table);
inline vpternlogq64 (zmm12_1, zmm13_1, zmm18_1, table);
inline vpternlogq64 (zmm12_2, zmm13_2, zmm18_2, table);
inline vpternlogq64 (zmm12_3, zmm13_3, zmm18_3, table);
inline vpternlogq64 (zmm12_4, zmm13_4, zmm18_4, table);
inline vpternlogq64 (zmm12_5, zmm13_5, zmm18_5, table);
inline vpternlogq64 (zmm12_6, zmm13_6, zmm18_6, table);
inline vpternlogq64 (zmm12_7, zmm13_7, zmm18_7, table);
(* vpternlogq $0xd2,%zmm8,%zmm2,%zmm10             #! PC = 0x55555558de30 *)
mov table 0xd2@uint8;
inline vpternlogq64 (zmm10_0, zmm2_0, zmm8_0, table);
inline vpternlogq64 (zmm10_1, zmm2_1, zmm8_1, table);
inline vpternlogq64 (zmm10_2, zmm2_2, zmm8_2, table);
inline vpternlogq64 (zmm10_3, zmm2_3, zmm8_3, table);
inline vpternlogq64 (zmm10_4, zmm2_4, zmm8_4, table);
inline vpternlogq64 (zmm10_5, zmm2_5, zmm8_5, table);
inline vpternlogq64 (zmm10_6, zmm2_6, zmm8_6, table);
inline vpternlogq64 (zmm10_7, zmm2_7, zmm8_7, table);
(* vpternlogq $0xd2,%zmm9,%zmm18,%zmm13            #! PC = 0x55555558de37 *)
mov table 0xd2@uint8;
inline vpternlogq64 (zmm13_0, zmm18_0, zmm9_0, table);
inline vpternlogq64 (zmm13_1, zmm18_1, zmm9_1, table);
inline vpternlogq64 (zmm13_2, zmm18_2, zmm9_2, table);
inline vpternlogq64 (zmm13_3, zmm18_3, zmm9_3, table);
inline vpternlogq64 (zmm13_4, zmm18_4, zmm9_4, table);
inline vpternlogq64 (zmm13_5, zmm18_5, zmm9_5, table);
inline vpternlogq64 (zmm13_6, zmm18_6, zmm9_6, table);
inline vpternlogq64 (zmm13_7, zmm18_7, zmm9_7, table);
(* vpternlogq $0xd2,%zmm16,%zmm9,%zmm18            #! PC = 0x55555558de3e *)
mov table 0xd2@uint8;
inline vpternlogq64 (zmm18_0, zmm9_0, zmm16_0, table);
inline vpternlogq64 (zmm18_1, zmm9_1, zmm16_1, table);
inline vpternlogq64 (zmm18_2, zmm9_2, zmm16_2, table);
inline vpternlogq64 (zmm18_3, zmm9_3, zmm16_3, table);
inline vpternlogq64 (zmm18_4, zmm9_4, zmm16_4, table);
inline vpternlogq64 (zmm18_5, zmm9_5, zmm16_5, table);
inline vpternlogq64 (zmm18_6, zmm9_6, zmm16_6, table);
inline vpternlogq64 (zmm18_7, zmm9_7, zmm16_7, table);
(* vmovdqa64 %zmm28,%zmm16                         #! PC = 0x55555558de45 *)
mov zmm16_0 zmm28_0;
mov zmm16_1 zmm28_1;
mov zmm16_2 zmm28_2;
mov zmm16_3 zmm28_3;
mov zmm16_4 zmm28_4;
mov zmm16_5 zmm28_5;
mov zmm16_6 zmm28_6;
mov zmm16_7 zmm28_7;
(* vmovdqa64 %zmm22,%zmm9                          #! PC = 0x55555558de4b *)
mov zmm9_0 zmm22_0;
mov zmm9_1 zmm22_1;
mov zmm9_2 zmm22_2;
mov zmm9_3 zmm22_3;
mov zmm9_4 zmm22_4;
mov zmm9_5 zmm22_5;
mov zmm9_6 zmm22_6;
mov zmm9_7 zmm22_7;
(* vpternlogq $0xd2,%zmm0,%zmm22,%zmm16            #! PC = 0x55555558de51 *)
mov table 0xd2@uint8;
inline vpternlogq64 (zmm16_0, zmm22_0, zmm0_0, table);
inline vpternlogq64 (zmm16_1, zmm22_1, zmm0_1, table);
inline vpternlogq64 (zmm16_2, zmm22_2, zmm0_2, table);
inline vpternlogq64 (zmm16_3, zmm22_3, zmm0_3, table);
inline vpternlogq64 (zmm16_4, zmm22_4, zmm0_4, table);
inline vpternlogq64 (zmm16_5, zmm22_5, zmm0_5, table);
inline vpternlogq64 (zmm16_6, zmm22_6, zmm0_6, table);
inline vpternlogq64 (zmm16_7, zmm22_7, zmm0_7, table);
(* vpternlogq $0xd2,%zmm4,%zmm0,%zmm9              #! PC = 0x55555558de58 *)
mov table 0xd2@uint8;
inline vpternlogq64 (zmm9_0, zmm0_0, zmm4_0, table);
inline vpternlogq64 (zmm9_1, zmm0_1, zmm4_1, table);
inline vpternlogq64 (zmm9_2, zmm0_2, zmm4_2, table);
inline vpternlogq64 (zmm9_3, zmm0_3, zmm4_3, table);
inline vpternlogq64 (zmm9_4, zmm0_4, zmm4_4, table);
inline vpternlogq64 (zmm9_5, zmm0_5, zmm4_5, table);
inline vpternlogq64 (zmm9_6, zmm0_6, zmm4_6, table);
inline vpternlogq64 (zmm9_7, zmm0_7, zmm4_7, table);
(* vpternlogq $0xd2,%zmm19,%zmm8,%zmm2             #! PC = 0x55555558de5f *)
mov table 0xd2@uint8;
inline vpternlogq64 (zmm2_0, zmm8_0, zmm19_0, table);
inline vpternlogq64 (zmm2_1, zmm8_1, zmm19_1, table);
inline vpternlogq64 (zmm2_2, zmm8_2, zmm19_2, table);
inline vpternlogq64 (zmm2_3, zmm8_3, zmm19_3, table);
inline vpternlogq64 (zmm2_4, zmm8_4, zmm19_4, table);
inline vpternlogq64 (zmm2_5, zmm8_5, zmm19_5, table);
inline vpternlogq64 (zmm2_6, zmm8_6, zmm19_6, table);
inline vpternlogq64 (zmm2_7, zmm8_7, zmm19_7, table);
(* vpternlogq $0xd2,%zmm21,%zmm4,%zmm0             #! PC = 0x55555558de66 *)
mov table 0xd2@uint8;
inline vpternlogq64 (zmm0_0, zmm4_0, zmm21_0, table);
inline vpternlogq64 (zmm0_1, zmm4_1, zmm21_1, table);
inline vpternlogq64 (zmm0_2, zmm4_2, zmm21_2, table);
inline vpternlogq64 (zmm0_3, zmm4_3, zmm21_3, table);
inline vpternlogq64 (zmm0_4, zmm4_4, zmm21_4, table);
inline vpternlogq64 (zmm0_5, zmm4_5, zmm21_5, table);
inline vpternlogq64 (zmm0_6, zmm4_6, zmm21_6, table);
inline vpternlogq64 (zmm0_7, zmm4_7, zmm21_7, table);
(* vpternlogq $0xd2,%zmm20,%zmm19,%zmm8            #! PC = 0x55555558de6d *)
mov table 0xd2@uint8;
inline vpternlogq64 (zmm8_0, zmm19_0, zmm20_0, table);
inline vpternlogq64 (zmm8_1, zmm19_1, zmm20_1, table);
inline vpternlogq64 (zmm8_2, zmm19_2, zmm20_2, table);
inline vpternlogq64 (zmm8_3, zmm19_3, zmm20_3, table);
inline vpternlogq64 (zmm8_4, zmm19_4, zmm20_4, table);
inline vpternlogq64 (zmm8_5, zmm19_5, zmm20_5, table);
inline vpternlogq64 (zmm8_6, zmm19_6, zmm20_6, table);
inline vpternlogq64 (zmm8_7, zmm19_7, zmm20_7, table);
(* vpternlogq $0xd2,%zmm28,%zmm21,%zmm4            #! PC = 0x55555558de74 *)
mov table 0xd2@uint8;
inline vpternlogq64 (zmm4_0, zmm21_0, zmm28_0, table);
inline vpternlogq64 (zmm4_1, zmm21_1, zmm28_1, table);
inline vpternlogq64 (zmm4_2, zmm21_2, zmm28_2, table);
inline vpternlogq64 (zmm4_3, zmm21_3, zmm28_3, table);
inline vpternlogq64 (zmm4_4, zmm21_4, zmm28_4, table);
inline vpternlogq64 (zmm4_5, zmm21_5, zmm28_5, table);
inline vpternlogq64 (zmm4_6, zmm21_6, zmm28_6, table);
inline vpternlogq64 (zmm4_7, zmm21_7, zmm28_7, table);
(* vmovdqa64 %zmm10,%zmm20                         #! PC = 0x55555558de7b *)
mov zmm20_0 zmm10_0;
mov zmm20_1 zmm10_1;
mov zmm20_2 zmm10_2;
mov zmm20_3 zmm10_3;
mov zmm20_4 zmm10_4;
mov zmm20_5 zmm10_5;
mov zmm20_6 zmm10_6;
mov zmm20_7 zmm10_7;
(* vpternlogq $0xd2,%zmm22,%zmm28,%zmm21           #! PC = 0x55555558de81 *)
mov table 0xd2@uint8;
inline vpternlogq64 (zmm21_0, zmm28_0, zmm22_0, table);
inline vpternlogq64 (zmm21_1, zmm28_1, zmm22_1, table);
inline vpternlogq64 (zmm21_2, zmm28_2, zmm22_2, table);
inline vpternlogq64 (zmm21_3, zmm28_3, zmm22_3, table);
inline vpternlogq64 (zmm21_4, zmm28_4, zmm22_4, table);
inline vpternlogq64 (zmm21_5, zmm28_5, zmm22_5, table);
inline vpternlogq64 (zmm21_6, zmm28_6, zmm22_6, table);
inline vpternlogq64 (zmm21_7, zmm28_7, zmm22_7, table);
(* vmovdqa64 %zmm14,%zmm28                         #! PC = 0x55555558de88 *)
mov zmm28_0 zmm14_0;
mov zmm28_1 zmm14_1;
mov zmm28_2 zmm14_2;
mov zmm28_3 zmm14_3;
mov zmm28_4 zmm14_4;
mov zmm28_5 zmm14_5;
mov zmm28_6 zmm14_6;
mov zmm28_7 zmm14_7;
(* vmovdqa64 %zmm29,%zmm22                         #! PC = 0x55555558de8e *)
mov zmm22_0 zmm29_0;
mov zmm22_1 zmm29_1;
mov zmm22_2 zmm29_2;
mov zmm22_3 zmm29_3;
mov zmm22_4 zmm29_4;
mov zmm22_5 zmm29_5;
mov zmm22_6 zmm29_6;
mov zmm22_7 zmm29_7;
(* vpternlogq $0xd2,%zmm11,%zmm29,%zmm28           #! PC = 0x55555558de94 *)
mov table 0xd2@uint8;
inline vpternlogq64 (zmm28_0, zmm29_0, zmm11_0, table);
inline vpternlogq64 (zmm28_1, zmm29_1, zmm11_1, table);
inline vpternlogq64 (zmm28_2, zmm29_2, zmm11_2, table);
inline vpternlogq64 (zmm28_3, zmm29_3, zmm11_3, table);
inline vpternlogq64 (zmm28_4, zmm29_4, zmm11_4, table);
inline vpternlogq64 (zmm28_5, zmm29_5, zmm11_5, table);
inline vpternlogq64 (zmm28_6, zmm29_6, zmm11_6, table);
inline vpternlogq64 (zmm28_7, zmm29_7, zmm11_7, table);
(* vpternlogq $0xd2,%zmm6,%zmm11,%zmm22            #! PC = 0x55555558de9b *)
mov table 0xd2@uint8;
inline vpternlogq64 (zmm22_0, zmm11_0, zmm6_0, table);
inline vpternlogq64 (zmm22_1, zmm11_1, zmm6_1, table);
inline vpternlogq64 (zmm22_2, zmm11_2, zmm6_2, table);
inline vpternlogq64 (zmm22_3, zmm11_3, zmm6_3, table);
inline vpternlogq64 (zmm22_4, zmm11_4, zmm6_4, table);
inline vpternlogq64 (zmm22_5, zmm11_5, zmm6_5, table);
inline vpternlogq64 (zmm22_6, zmm11_6, zmm6_6, table);
inline vpternlogq64 (zmm22_7, zmm11_7, zmm6_7, table);
(* vpternlogq $0x96,%zmm5,%zmm0,%zmm20             #! PC = 0x55555558dea2 *)
mov table 0x96@uint8;
inline vpternlogq64 (zmm20_0, zmm0_0, zmm5_0, table);
inline vpternlogq64 (zmm20_1, zmm0_1, zmm5_1, table);
inline vpternlogq64 (zmm20_2, zmm0_2, zmm5_2, table);
inline vpternlogq64 (zmm20_3, zmm0_3, zmm5_3, table);
inline vpternlogq64 (zmm20_4, zmm0_4, zmm5_4, table);
inline vpternlogq64 (zmm20_5, zmm0_5, zmm5_5, table);
inline vpternlogq64 (zmm20_6, zmm0_6, zmm5_6, table);
inline vpternlogq64 (zmm20_7, zmm0_7, zmm5_7, table);
(* vpternlogq $0xd2,%zmm3,%zmm6,%zmm11             #! PC = 0x55555558dea9 *)
mov table 0xd2@uint8;
inline vpternlogq64 (zmm11_0, zmm6_0, zmm3_0, table);
inline vpternlogq64 (zmm11_1, zmm6_1, zmm3_1, table);
inline vpternlogq64 (zmm11_2, zmm6_2, zmm3_2, table);
inline vpternlogq64 (zmm11_3, zmm6_3, zmm3_3, table);
inline vpternlogq64 (zmm11_4, zmm6_4, zmm3_4, table);
inline vpternlogq64 (zmm11_5, zmm6_5, zmm3_5, table);
inline vpternlogq64 (zmm11_6, zmm6_6, zmm3_6, table);
inline vpternlogq64 (zmm11_7, zmm6_7, zmm3_7, table);
(* vpternlogq $0x96,%zmm12,%zmm11,%zmm20           #! PC = 0x55555558deb0 *)
mov table 0x96@uint8;
inline vpternlogq64 (zmm20_0, zmm11_0, zmm12_0, table);
inline vpternlogq64 (zmm20_1, zmm11_1, zmm12_1, table);
inline vpternlogq64 (zmm20_2, zmm11_2, zmm12_2, table);
inline vpternlogq64 (zmm20_3, zmm11_3, zmm12_3, table);
inline vpternlogq64 (zmm20_4, zmm11_4, zmm12_4, table);
inline vpternlogq64 (zmm20_5, zmm11_5, zmm12_5, table);
inline vpternlogq64 (zmm20_6, zmm11_6, zmm12_6, table);
inline vpternlogq64 (zmm20_7, zmm11_7, zmm12_7, table);
(* vprolq $0x1,%zmm20,%zmm15                       #! PC = 0x55555558deb7 *)
rol zmm15_0 zmm20_0 0x1;
rol zmm15_1 zmm20_1 0x1;
rol zmm15_2 zmm20_2 0x1;
rol zmm15_3 zmm20_3 0x1;
rol zmm15_4 zmm20_4 0x1;
rol zmm15_5 zmm20_5 0x1;
rol zmm15_6 zmm20_6 0x1;
rol zmm15_7 zmm20_7 0x1;
(* vmovdqa64 %zmm13,%zmm27                         #! PC = 0x55555558debe *)
mov zmm27_0 zmm13_0;
mov zmm27_1 zmm13_1;
mov zmm27_2 zmm13_2;
mov zmm27_3 zmm13_3;
mov zmm27_4 zmm13_4;
mov zmm27_5 zmm13_5;
mov zmm27_6 zmm13_6;
mov zmm27_7 zmm13_7;
(* vpternlogq $0xd2,%zmm14,%zmm3,%zmm6             #! PC = 0x55555558dec4 *)
mov table 0xd2@uint8;
inline vpternlogq64 (zmm6_0, zmm3_0, zmm14_0, table);
inline vpternlogq64 (zmm6_1, zmm3_1, zmm14_1, table);
inline vpternlogq64 (zmm6_2, zmm3_2, zmm14_2, table);
inline vpternlogq64 (zmm6_3, zmm3_3, zmm14_3, table);
inline vpternlogq64 (zmm6_4, zmm3_4, zmm14_4, table);
inline vpternlogq64 (zmm6_5, zmm3_5, zmm14_5, table);
inline vpternlogq64 (zmm6_6, zmm3_6, zmm14_6, table);
inline vpternlogq64 (zmm6_7, zmm3_7, zmm14_7, table);
(* vpternlogq $0x96,%zmm4,%zmm2,%zmm27             #! PC = 0x55555558decb *)
mov table 0x96@uint8;
inline vpternlogq64 (zmm27_0, zmm2_0, zmm4_0, table);
inline vpternlogq64 (zmm27_1, zmm2_1, zmm4_1, table);
inline vpternlogq64 (zmm27_2, zmm2_2, zmm4_2, table);
inline vpternlogq64 (zmm27_3, zmm2_3, zmm4_3, table);
inline vpternlogq64 (zmm27_4, zmm2_4, zmm4_4, table);
inline vpternlogq64 (zmm27_5, zmm2_5, zmm4_5, table);
inline vpternlogq64 (zmm27_6, zmm2_6, zmm4_6, table);
inline vpternlogq64 (zmm27_7, zmm2_7, zmm4_7, table);
(* vpternlogq $0x96,%zmm6,%zmm7,%zmm27             #! PC = 0x55555558ded2 *)
mov table 0x96@uint8;
inline vpternlogq64 (zmm27_0, zmm7_0, zmm6_0, table);
inline vpternlogq64 (zmm27_1, zmm7_1, zmm6_1, table);
inline vpternlogq64 (zmm27_2, zmm7_2, zmm6_2, table);
inline vpternlogq64 (zmm27_3, zmm7_3, zmm6_3, table);
inline vpternlogq64 (zmm27_4, zmm7_4, zmm6_4, table);
inline vpternlogq64 (zmm27_5, zmm7_5, zmm6_5, table);
inline vpternlogq64 (zmm27_6, zmm7_6, zmm6_6, table);
inline vpternlogq64 (zmm27_7, zmm7_7, zmm6_7, table);
(* vpternlogq $0xd2,%zmm29,%zmm14,%zmm3            #! PC = 0x55555558ded9 *)
mov table 0xd2@uint8;
inline vpternlogq64 (zmm3_0, zmm14_0, zmm29_0, table);
inline vpternlogq64 (zmm3_1, zmm14_1, zmm29_1, table);
inline vpternlogq64 (zmm3_2, zmm14_2, zmm29_2, table);
inline vpternlogq64 (zmm3_3, zmm14_3, zmm29_3, table);
inline vpternlogq64 (zmm3_4, zmm14_4, zmm29_4, table);
inline vpternlogq64 (zmm3_5, zmm14_5, zmm29_5, table);
inline vpternlogq64 (zmm3_6, zmm14_6, zmm29_6, table);
inline vpternlogq64 (zmm3_7, zmm14_7, zmm29_7, table);
(* vmovdqa64 %zmm15,0x148(%rsp)                    #! EA = L0x7fffffffd600; PC = 0x55555558dee0 *)
mov L0x7fffffffd600 zmm15_0;
mov L0x7fffffffd608 zmm15_1;
mov L0x7fffffffd610 zmm15_2;
mov L0x7fffffffd618 zmm15_3;
mov L0x7fffffffd620 zmm15_4;
mov L0x7fffffffd628 zmm15_5;
mov L0x7fffffffd630 zmm15_6;
mov L0x7fffffffd638 zmm15_7;
(* vprolq $0x1,%zmm27,%zmm15                       #! PC = 0x55555558deeb *)
rol zmm15_0 zmm27_0 0x1;
rol zmm15_1 zmm27_1 0x1;
rol zmm15_2 zmm27_2 0x1;
rol zmm15_3 zmm27_3 0x1;
rol zmm15_4 zmm27_4 0x1;
rol zmm15_5 zmm27_5 0x1;
rol zmm15_6 zmm27_6 0x1;
rol zmm15_7 zmm27_7 0x1;
(* vmovdqa64 %zmm3,%zmm29                          #! PC = 0x55555558def2 *)
mov zmm29_0 zmm3_0;
mov zmm29_1 zmm3_1;
mov zmm29_2 zmm3_2;
mov zmm29_3 zmm3_3;
mov zmm29_4 zmm3_4;
mov zmm29_5 zmm3_5;
mov zmm29_6 zmm3_6;
mov zmm29_7 zmm3_7;
(* vpternlogq $0x96,%zmm8,%zmm18,%zmm29            #! PC = 0x55555558def8 *)
mov table 0x96@uint8;
inline vpternlogq64 (zmm29_0, zmm18_0, zmm8_0, table);
inline vpternlogq64 (zmm29_1, zmm18_1, zmm8_1, table);
inline vpternlogq64 (zmm29_2, zmm18_2, zmm8_2, table);
inline vpternlogq64 (zmm29_3, zmm18_3, zmm8_3, table);
inline vpternlogq64 (zmm29_4, zmm18_4, zmm8_4, table);
inline vpternlogq64 (zmm29_5, zmm18_5, zmm8_5, table);
inline vpternlogq64 (zmm29_6, zmm18_6, zmm8_6, table);
inline vpternlogq64 (zmm29_7, zmm18_7, zmm8_7, table);
(* vpternlogq $0x96,%zmm17,%zmm21,%zmm29           #! PC = 0x55555558deff *)
mov table 0x96@uint8;
inline vpternlogq64 (zmm29_0, zmm21_0, zmm17_0, table);
inline vpternlogq64 (zmm29_1, zmm21_1, zmm17_1, table);
inline vpternlogq64 (zmm29_2, zmm21_2, zmm17_2, table);
inline vpternlogq64 (zmm29_3, zmm21_3, zmm17_3, table);
inline vpternlogq64 (zmm29_4, zmm21_4, zmm17_4, table);
inline vpternlogq64 (zmm29_5, zmm21_5, zmm17_5, table);
inline vpternlogq64 (zmm29_6, zmm21_6, zmm17_6, table);
inline vpternlogq64 (zmm29_7, zmm21_7, zmm17_7, table);
(* vmovdqa64 %zmm24,%zmm14                         #! PC = 0x55555558df06 *)
mov zmm14_0 zmm24_0;
mov zmm14_1 zmm24_1;
mov zmm14_2 zmm24_2;
mov zmm14_3 zmm24_3;
mov zmm14_4 zmm24_4;
mov zmm14_5 zmm24_5;
mov zmm14_6 zmm24_6;
mov zmm14_7 zmm24_7;
(* vpternlogq $0x96,%zmm26,%zmm28,%zmm14           #! PC = 0x55555558df0c *)
mov table 0x96@uint8;
inline vpternlogq64 (zmm14_0, zmm28_0, zmm26_0, table);
inline vpternlogq64 (zmm14_1, zmm28_1, zmm26_1, table);
inline vpternlogq64 (zmm14_2, zmm28_2, zmm26_2, table);
inline vpternlogq64 (zmm14_3, zmm28_3, zmm26_3, table);
inline vpternlogq64 (zmm14_4, zmm28_4, zmm26_4, table);
inline vpternlogq64 (zmm14_5, zmm28_5, zmm26_5, table);
inline vpternlogq64 (zmm14_6, zmm28_6, zmm26_6, table);
inline vpternlogq64 (zmm14_7, zmm28_7, zmm26_7, table);
(* vmovdqa64 %zmm15,0x108(%rsp)                    #! EA = L0x7fffffffd5c0; PC = 0x55555558df13 *)
mov L0x7fffffffd5c0 zmm15_0;
mov L0x7fffffffd5c8 zmm15_1;
mov L0x7fffffffd5d0 zmm15_2;
mov L0x7fffffffd5d8 zmm15_3;
mov L0x7fffffffd5e0 zmm15_4;
mov L0x7fffffffd5e8 zmm15_5;
mov L0x7fffffffd5f0 zmm15_6;
mov L0x7fffffffd5f8 zmm15_7;
(* vprolq $0x1,%zmm29,%zmm15                       #! PC = 0x55555558df1e *)
rol zmm15_0 zmm29_0 0x1;
rol zmm15_1 zmm29_1 0x1;
rol zmm15_2 zmm29_2 0x1;
rol zmm15_3 zmm29_3 0x1;
rol zmm15_4 zmm29_4 0x1;
rol zmm15_5 zmm29_5 0x1;
rol zmm15_6 zmm29_6 0x1;
rol zmm15_7 zmm29_7 0x1;
(* vpternlogq $0x96,%zmm16,%zmm25,%zmm14           #! PC = 0x55555558df25 *)
mov table 0x96@uint8;
inline vpternlogq64 (zmm14_0, zmm25_0, zmm16_0, table);
inline vpternlogq64 (zmm14_1, zmm25_1, zmm16_1, table);
inline vpternlogq64 (zmm14_2, zmm25_2, zmm16_2, table);
inline vpternlogq64 (zmm14_3, zmm25_3, zmm16_3, table);
inline vpternlogq64 (zmm14_4, zmm25_4, zmm16_4, table);
inline vpternlogq64 (zmm14_5, zmm25_5, zmm16_5, table);
inline vpternlogq64 (zmm14_6, zmm25_6, zmm16_6, table);
inline vpternlogq64 (zmm14_7, zmm25_7, zmm16_7, table);
(* vmovdqa64 %zmm9,%zmm19                          #! PC = 0x55555558df2c *)
mov zmm19_0 zmm9_0;
mov zmm19_1 zmm9_1;
mov zmm19_2 zmm9_2;
mov zmm19_3 zmm9_3;
mov zmm19_4 zmm9_4;
mov zmm19_5 zmm9_5;
mov zmm19_6 zmm9_6;
mov zmm19_7 zmm9_7;
(* vpternlogq $0x96,%zmm22,%zmm23,%zmm19           #! PC = 0x55555558df32 *)
mov table 0x96@uint8;
inline vpternlogq64 (zmm19_0, zmm23_0, zmm22_0, table);
inline vpternlogq64 (zmm19_1, zmm23_1, zmm22_1, table);
inline vpternlogq64 (zmm19_2, zmm23_2, zmm22_2, table);
inline vpternlogq64 (zmm19_3, zmm23_3, zmm22_3, table);
inline vpternlogq64 (zmm19_4, zmm23_4, zmm22_4, table);
inline vpternlogq64 (zmm19_5, zmm23_5, zmm22_5, table);
inline vpternlogq64 (zmm19_6, zmm23_6, zmm22_6, table);
inline vpternlogq64 (zmm19_7, zmm23_7, zmm22_7, table);
(* vpternlogq $0x96,%zmm31,%zmm30,%zmm19           #! PC = 0x55555558df39 *)
mov table 0x96@uint8;
inline vpternlogq64 (zmm19_0, zmm30_0, zmm31_0, table);
inline vpternlogq64 (zmm19_1, zmm30_1, zmm31_1, table);
inline vpternlogq64 (zmm19_2, zmm30_2, zmm31_2, table);
inline vpternlogq64 (zmm19_3, zmm30_3, zmm31_3, table);
inline vpternlogq64 (zmm19_4, zmm30_4, zmm31_4, table);
inline vpternlogq64 (zmm19_5, zmm30_5, zmm31_5, table);
inline vpternlogq64 (zmm19_6, zmm30_6, zmm31_6, table);
inline vpternlogq64 (zmm19_7, zmm30_7, zmm31_7, table);
(* vprolq $0x1,%zmm19,%zmm1                        #! PC = 0x55555558df40 *)
rol zmm1_0 zmm19_0 0x1;
rol zmm1_1 zmm19_1 0x1;
rol zmm1_2 zmm19_2 0x1;
rol zmm1_3 zmm19_3 0x1;
rol zmm1_4 zmm19_4 0x1;
rol zmm1_5 zmm19_5 0x1;
rol zmm1_6 zmm19_6 0x1;
rol zmm1_7 zmm19_7 0x1;
(* vmovdqa64 %zmm15,0xc8(%rsp)                     #! EA = L0x7fffffffd580; PC = 0x55555558df47 *)
mov L0x7fffffffd580 zmm15_0;
mov L0x7fffffffd588 zmm15_1;
mov L0x7fffffffd590 zmm15_2;
mov L0x7fffffffd598 zmm15_3;
mov L0x7fffffffd5a0 zmm15_4;
mov L0x7fffffffd5a8 zmm15_5;
mov L0x7fffffffd5b0 zmm15_6;
mov L0x7fffffffd5b8 zmm15_7;
(* vprolq $0x1,%zmm14,%zmm15                       #! PC = 0x55555558df52 *)
rol zmm15_0 zmm14_0 0x1;
rol zmm15_1 zmm14_1 0x1;
rol zmm15_2 zmm14_2 0x1;
rol zmm15_3 zmm14_3 0x1;
rol zmm15_4 zmm14_4 0x1;
rol zmm15_5 zmm14_5 0x1;
rol zmm15_6 zmm14_6 0x1;
rol zmm15_7 zmm14_7 0x1;
(* vpxord 0x148(%rsp),%zmm14,%zmm14                #! EA = L0x7fffffffd600; Value = 0x83d849b7ef17f960; PC = 0x55555558df59 *)
xor zmm14_0@uint64 zmm14_0 L0x7fffffffd600;
xor zmm14_1@uint64 zmm14_1 L0x7fffffffd608;
xor zmm14_2@uint64 zmm14_2 L0x7fffffffd610;
xor zmm14_3@uint64 zmm14_3 L0x7fffffffd618;
xor zmm14_4@uint64 zmm14_4 L0x7fffffffd620;
xor zmm14_5@uint64 zmm14_5 L0x7fffffffd628;
xor zmm14_6@uint64 zmm14_6 L0x7fffffffd630;
xor zmm14_7@uint64 zmm14_7 L0x7fffffffd638;
(* vpxord 0x108(%rsp),%zmm19,%zmm19                #! EA = L0x7fffffffd5c0; Value = 0x72f45e80578b0891; PC = 0x55555558df64 *)
xor zmm19_0@uint64 zmm19_0 L0x7fffffffd5c0;
xor zmm19_1@uint64 zmm19_1 L0x7fffffffd5c8;
xor zmm19_2@uint64 zmm19_2 L0x7fffffffd5d0;
xor zmm19_3@uint64 zmm19_3 L0x7fffffffd5d8;
xor zmm19_4@uint64 zmm19_4 L0x7fffffffd5e0;
xor zmm19_5@uint64 zmm19_5 L0x7fffffffd5e8;
xor zmm19_6@uint64 zmm19_6 L0x7fffffffd5f0;
xor zmm19_7@uint64 zmm19_7 L0x7fffffffd5f8;
(* vpxord 0xc8(%rsp),%zmm20,%zmm20                 #! EA = L0x7fffffffd580; Value = 0xe7e7525c57941893; PC = 0x55555558df6f *)
xor zmm20_0@uint64 zmm20_0 L0x7fffffffd580;
xor zmm20_1@uint64 zmm20_1 L0x7fffffffd588;
xor zmm20_2@uint64 zmm20_2 L0x7fffffffd590;
xor zmm20_3@uint64 zmm20_3 L0x7fffffffd598;
xor zmm20_4@uint64 zmm20_4 L0x7fffffffd5a0;
xor zmm20_5@uint64 zmm20_5 L0x7fffffffd5a8;
xor zmm20_6@uint64 zmm20_6 L0x7fffffffd5b0;
xor zmm20_7@uint64 zmm20_7 L0x7fffffffd5b8;
(* vpxord %zmm30,%zmm14,%zmm30                     #! PC = 0x55555558df7a *)
xor zmm30_0@uint64 zmm14_0 zmm30_0;
xor zmm30_1@uint64 zmm14_1 zmm30_1;
xor zmm30_2@uint64 zmm14_2 zmm30_2;
xor zmm30_3@uint64 zmm14_3 zmm30_3;
xor zmm30_4@uint64 zmm14_4 zmm30_4;
xor zmm30_5@uint64 zmm14_5 zmm30_5;
xor zmm30_6@uint64 zmm14_6 zmm30_6;
xor zmm30_7@uint64 zmm14_7 zmm30_7;
(* vprorq $0x14,%zmm30,%zmm30                      #! PC = 0x55555558df80 *)
ror zmm30_0 zmm30_0 0x14;
ror zmm30_1 zmm30_1 0x14;
ror zmm30_2 zmm30_2 0x14;
ror zmm30_3 zmm30_3 0x14;
ror zmm30_4 zmm30_4 0x14;
ror zmm30_5 zmm30_5 0x14;
ror zmm30_6 zmm30_6 0x14;
ror zmm30_7 zmm30_7 0x14;
(* vpxord %zmm27,%zmm15,%zmm15                     #! PC = 0x55555558df87 *)
xor zmm15_0@uint64 zmm15_0 zmm27_0;
xor zmm15_1@uint64 zmm15_1 zmm27_1;
xor zmm15_2@uint64 zmm15_2 zmm27_2;
xor zmm15_3@uint64 zmm15_3 zmm27_3;
xor zmm15_4@uint64 zmm15_4 zmm27_4;
xor zmm15_5@uint64 zmm15_5 zmm27_5;
xor zmm15_6@uint64 zmm15_6 zmm27_6;
xor zmm15_7@uint64 zmm15_7 zmm27_7;
(* vpxord %zmm0,%zmm19,%zmm0                       #! PC = 0x55555558df8d *)
xor zmm0_0@uint64 zmm19_0 zmm0_0;
xor zmm0_1@uint64 zmm19_1 zmm0_1;
xor zmm0_2@uint64 zmm19_2 zmm0_2;
xor zmm0_3@uint64 zmm19_3 zmm0_3;
xor zmm0_4@uint64 zmm19_4 zmm0_4;
xor zmm0_5@uint64 zmm19_5 zmm0_5;
xor zmm0_6@uint64 zmm19_6 zmm0_6;
xor zmm0_7@uint64 zmm19_7 zmm0_7;
(* vpxord %zmm6,%zmm20,%zmm6                       #! PC = 0x55555558df93 *)
xor zmm6_0@uint64 zmm20_0 zmm6_0;
xor zmm6_1@uint64 zmm20_1 zmm6_1;
xor zmm6_2@uint64 zmm20_2 zmm6_2;
xor zmm6_3@uint64 zmm20_3 zmm6_3;
xor zmm6_4@uint64 zmm20_4 zmm6_4;
xor zmm6_5@uint64 zmm20_5 zmm6_5;
xor zmm6_6@uint64 zmm20_6 zmm6_6;
xor zmm6_7@uint64 zmm20_7 zmm6_7;
(* vpxord %zmm8,%zmm15,%zmm8                       #! PC = 0x55555558df99 *)
xor zmm8_0@uint64 zmm15_0 zmm8_0;
xor zmm8_1@uint64 zmm15_1 zmm8_1;
xor zmm8_2@uint64 zmm15_2 zmm8_2;
xor zmm8_3@uint64 zmm15_3 zmm8_3;
xor zmm8_4@uint64 zmm15_4 zmm8_4;
xor zmm8_5@uint64 zmm15_5 zmm8_5;
xor zmm8_6@uint64 zmm15_6 zmm8_6;
xor zmm8_7@uint64 zmm15_7 zmm8_7;
(* vpxord %zmm29,%zmm1,%zmm1                       #! PC = 0x55555558df9f *)
xor zmm1_0@uint64 zmm1_0 zmm29_0;
xor zmm1_1@uint64 zmm1_1 zmm29_1;
xor zmm1_2@uint64 zmm1_2 zmm29_2;
xor zmm1_3@uint64 zmm1_3 zmm29_3;
xor zmm1_4@uint64 zmm1_4 zmm29_4;
xor zmm1_5@uint64 zmm1_5 zmm29_5;
xor zmm1_6@uint64 zmm1_6 zmm29_6;
xor zmm1_7@uint64 zmm1_7 zmm29_7;
(* vprorq $0x15,%zmm0,%zmm0                        #! PC = 0x55555558dfa5 *)
ror zmm0_0 zmm0_0 0x15;
ror zmm0_1 zmm0_1 0x15;
ror zmm0_2 zmm0_2 0x15;
ror zmm0_3 zmm0_3 0x15;
ror zmm0_4 zmm0_4 0x15;
ror zmm0_5 zmm0_5 0x15;
ror zmm0_6 zmm0_6 0x15;
ror zmm0_7 zmm0_7 0x15;
(* vprolq $0x15,%zmm6,%zmm6                        #! PC = 0x55555558dfac *)
rol zmm6_0 zmm6_0 0x15;
rol zmm6_1 zmm6_1 0x15;
rol zmm6_2 zmm6_2 0x15;
rol zmm6_3 zmm6_3 0x15;
rol zmm6_4 zmm6_4 0x15;
rol zmm6_5 zmm6_5 0x15;
rol zmm6_6 zmm6_6 0x15;
rol zmm6_7 zmm6_7 0x15;
(* vprolq $0xe,%zmm8,%zmm8                         #! PC = 0x55555558dfb3 *)
rol zmm8_0 zmm8_0 0xe;
rol zmm8_1 zmm8_1 0xe;
rol zmm8_2 zmm8_2 0xe;
rol zmm8_3 zmm8_3 0xe;
rol zmm8_4 zmm8_4 0xe;
rol zmm8_5 zmm8_5 0xe;
rol zmm8_6 zmm8_6 0xe;
rol zmm8_7 zmm8_7 0xe;
(* vpxord %zmm7,%zmm20,%zmm7                       #! PC = 0x55555558dfba *)
xor zmm7_0@uint64 zmm20_0 zmm7_0;
xor zmm7_1@uint64 zmm20_1 zmm7_1;
xor zmm7_2@uint64 zmm20_2 zmm7_2;
xor zmm7_3@uint64 zmm20_3 zmm7_3;
xor zmm7_4@uint64 zmm20_4 zmm7_4;
xor zmm7_5@uint64 zmm20_5 zmm7_5;
xor zmm7_6@uint64 zmm20_6 zmm7_6;
xor zmm7_7@uint64 zmm20_7 zmm7_7;
(* vpxord %zmm18,%zmm15,%zmm18                     #! PC = 0x55555558dfc0 *)
xor zmm18_0@uint64 zmm15_0 zmm18_0;
xor zmm18_1@uint64 zmm15_1 zmm18_1;
xor zmm18_2@uint64 zmm15_2 zmm18_2;
xor zmm18_3@uint64 zmm15_3 zmm18_3;
xor zmm18_4@uint64 zmm15_4 zmm18_4;
xor zmm18_5@uint64 zmm15_5 zmm18_5;
xor zmm18_6@uint64 zmm15_6 zmm18_6;
xor zmm18_7@uint64 zmm15_7 zmm18_7;
(* vprolq $0x1c,%zmm7,%zmm7                        #! PC = 0x55555558dfc6 *)
rol zmm7_0 zmm7_0 0x1c;
rol zmm7_1 zmm7_1 0x1c;
rol zmm7_2 zmm7_2 0x1c;
rol zmm7_3 zmm7_3 0x1c;
rol zmm7_4 zmm7_4 0x1c;
rol zmm7_5 zmm7_5 0x1c;
rol zmm7_6 zmm7_6 0x1c;
rol zmm7_7 zmm7_7 0x1c;
(* vprolq $0x14,%zmm18,%zmm18                      #! PC = 0x55555558dfcd *)
rol zmm18_0 zmm18_0 0x14;
rol zmm18_1 zmm18_1 0x14;
rol zmm18_2 zmm18_2 0x14;
rol zmm18_3 zmm18_3 0x14;
rol zmm18_4 zmm18_4 0x14;
rol zmm18_5 zmm18_5 0x14;
rol zmm18_6 zmm18_6 0x14;
rol zmm18_7 zmm18_7 0x14;
(* vpxord %zmm16,%zmm1,%zmm16                      #! PC = 0x55555558dfd4 *)
xor zmm16_0@uint64 zmm1_0 zmm16_0;
xor zmm16_1@uint64 zmm1_1 zmm16_1;
xor zmm16_2@uint64 zmm1_2 zmm16_2;
xor zmm16_3@uint64 zmm1_3 zmm16_3;
xor zmm16_4@uint64 zmm1_4 zmm16_4;
xor zmm16_5@uint64 zmm1_5 zmm16_5;
xor zmm16_6@uint64 zmm1_6 zmm16_6;
xor zmm16_7@uint64 zmm1_7 zmm16_7;
(* vpxord %zmm22,%zmm14,%zmm22                     #! PC = 0x55555558dfda *)
xor zmm22_0@uint64 zmm14_0 zmm22_0;
xor zmm22_1@uint64 zmm14_1 zmm22_1;
xor zmm22_2@uint64 zmm14_2 zmm22_2;
xor zmm22_3@uint64 zmm14_3 zmm22_3;
xor zmm22_4@uint64 zmm14_4 zmm22_4;
xor zmm22_5@uint64 zmm14_5 zmm22_5;
xor zmm22_6@uint64 zmm14_6 zmm22_6;
xor zmm22_7@uint64 zmm14_7 zmm22_7;
(* vpxord %zmm10,%zmm19,%zmm10                     #! PC = 0x55555558dfe0 *)
xor zmm10_0@uint64 zmm19_0 zmm10_0;
xor zmm10_1@uint64 zmm19_1 zmm10_1;
xor zmm10_2@uint64 zmm19_2 zmm10_2;
xor zmm10_3@uint64 zmm19_3 zmm10_3;
xor zmm10_4@uint64 zmm19_4 zmm10_4;
xor zmm10_5@uint64 zmm19_5 zmm10_5;
xor zmm10_6@uint64 zmm19_6 zmm10_6;
xor zmm10_7@uint64 zmm19_7 zmm10_7;
(* vpxord %zmm23,%zmm14,%zmm23                     #! PC = 0x55555558dfe6 *)
xor zmm23_0@uint64 zmm14_0 zmm23_0;
xor zmm23_1@uint64 zmm14_1 zmm23_1;
xor zmm23_2@uint64 zmm14_2 zmm23_2;
xor zmm23_3@uint64 zmm14_3 zmm23_3;
xor zmm23_4@uint64 zmm14_4 zmm23_4;
xor zmm23_5@uint64 zmm14_5 zmm23_5;
xor zmm23_6@uint64 zmm14_6 zmm23_6;
xor zmm23_7@uint64 zmm14_7 zmm23_7;
(* vpxord %zmm12,%zmm19,%zmm12                     #! PC = 0x55555558dfec *)
xor zmm12_0@uint64 zmm19_0 zmm12_0;
xor zmm12_1@uint64 zmm19_1 zmm12_1;
xor zmm12_2@uint64 zmm19_2 zmm12_2;
xor zmm12_3@uint64 zmm19_3 zmm12_3;
xor zmm12_4@uint64 zmm19_4 zmm12_4;
xor zmm12_5@uint64 zmm19_5 zmm12_5;
xor zmm12_6@uint64 zmm19_6 zmm12_6;
xor zmm12_7@uint64 zmm19_7 zmm12_7;
(* vpxord %zmm4,%zmm20,%zmm4                       #! PC = 0x55555558dff2 *)
xor zmm4_0@uint64 zmm20_0 zmm4_0;
xor zmm4_1@uint64 zmm20_1 zmm4_1;
xor zmm4_2@uint64 zmm20_2 zmm4_2;
xor zmm4_3@uint64 zmm20_3 zmm4_3;
xor zmm4_4@uint64 zmm20_4 zmm4_4;
xor zmm4_5@uint64 zmm20_5 zmm4_5;
xor zmm4_6@uint64 zmm20_6 zmm4_6;
xor zmm4_7@uint64 zmm20_7 zmm4_7;
(* vpxord %zmm11,%zmm19,%zmm11                     #! PC = 0x55555558dff8 *)
xor zmm11_0@uint64 zmm19_0 zmm11_0;
xor zmm11_1@uint64 zmm19_1 zmm11_1;
xor zmm11_2@uint64 zmm19_2 zmm11_2;
xor zmm11_3@uint64 zmm19_3 zmm11_3;
xor zmm11_4@uint64 zmm19_4 zmm11_4;
xor zmm11_5@uint64 zmm19_5 zmm11_5;
xor zmm11_6@uint64 zmm19_6 zmm11_6;
xor zmm11_7@uint64 zmm19_7 zmm11_7;
(* vpxord %zmm2,%zmm20,%zmm2                       #! PC = 0x55555558dffe *)
xor zmm2_0@uint64 zmm20_0 zmm2_0;
xor zmm2_1@uint64 zmm20_1 zmm2_1;
xor zmm2_2@uint64 zmm20_2 zmm2_2;
xor zmm2_3@uint64 zmm20_3 zmm2_3;
xor zmm2_4@uint64 zmm20_4 zmm2_4;
xor zmm2_5@uint64 zmm20_5 zmm2_5;
xor zmm2_6@uint64 zmm20_6 zmm2_6;
xor zmm2_7@uint64 zmm20_7 zmm2_7;
(* vpxord %zmm5,%zmm19,%zmm19                      #! PC = 0x55555558e004 *)
xor zmm19_0@uint64 zmm19_0 zmm5_0;
xor zmm19_1@uint64 zmm19_1 zmm5_1;
xor zmm19_2@uint64 zmm19_2 zmm5_2;
xor zmm19_3@uint64 zmm19_3 zmm5_3;
xor zmm19_4@uint64 zmm19_4 zmm5_4;
xor zmm19_5@uint64 zmm19_5 zmm5_5;
xor zmm19_6@uint64 zmm19_6 zmm5_6;
xor zmm19_7@uint64 zmm19_7 zmm5_7;
(* vpxord %zmm13,%zmm20,%zmm20                     #! PC = 0x55555558e00a *)
xor zmm20_0@uint64 zmm20_0 zmm13_0;
xor zmm20_1@uint64 zmm20_1 zmm13_1;
xor zmm20_2@uint64 zmm20_2 zmm13_2;
xor zmm20_3@uint64 zmm20_3 zmm13_3;
xor zmm20_4@uint64 zmm20_4 zmm13_4;
xor zmm20_5@uint64 zmm20_5 zmm13_5;
xor zmm20_6@uint64 zmm20_6 zmm13_6;
xor zmm20_7@uint64 zmm20_7 zmm13_7;
(* vpxord %zmm24,%zmm1,%zmm24                      #! PC = 0x55555558e010 *)
xor zmm24_0@uint64 zmm1_0 zmm24_0;
xor zmm24_1@uint64 zmm1_1 zmm24_1;
xor zmm24_2@uint64 zmm1_2 zmm24_2;
xor zmm24_3@uint64 zmm1_3 zmm24_3;
xor zmm24_4@uint64 zmm1_4 zmm24_4;
xor zmm24_5@uint64 zmm1_5 zmm24_5;
xor zmm24_6@uint64 zmm1_6 zmm24_6;
xor zmm24_7@uint64 zmm1_7 zmm24_7;
(* vprolq $0x1,%zmm23,%zmm23                       #! PC = 0x55555558e016 *)
rol zmm23_0 zmm23_0 0x1;
rol zmm23_1 zmm23_1 0x1;
rol zmm23_2 zmm23_2 0x1;
rol zmm23_3 zmm23_3 0x1;
rol zmm23_4 zmm23_4 0x1;
rol zmm23_5 zmm23_5 0x1;
rol zmm23_6 zmm23_6 0x1;
rol zmm23_7 zmm23_7 0x1;
(* vprolq $0x6,%zmm12,%zmm12                       #! PC = 0x55555558e01d *)
rol zmm12_0 zmm12_0 0x6;
rol zmm12_1 zmm12_1 0x6;
rol zmm12_2 zmm12_2 0x6;
rol zmm12_3 zmm12_3 0x6;
rol zmm12_4 zmm12_4 0x6;
rol zmm12_5 zmm12_5 0x6;
rol zmm12_6 zmm12_6 0x6;
rol zmm12_7 zmm12_7 0x6;
(* vprorq $0x2,%zmm19,%zmm19                       #! PC = 0x55555558e024 *)
ror zmm19_0 zmm19_0 0x2;
ror zmm19_1 zmm19_1 0x2;
ror zmm19_2 zmm19_2 0x2;
ror zmm19_3 zmm19_3 0x2;
ror zmm19_4 zmm19_4 0x2;
ror zmm19_5 zmm19_5 0x2;
ror zmm19_6 zmm19_6 0x2;
ror zmm19_7 zmm19_7 0x2;
(* vprorq $0x9,%zmm20,%zmm20                       #! PC = 0x55555558e02b *)
ror zmm20_0 zmm20_0 0x9;
ror zmm20_1 zmm20_1 0x9;
ror zmm20_2 zmm20_2 0x9;
ror zmm20_3 zmm20_3 0x9;
ror zmm20_4 zmm20_4 0x9;
ror zmm20_5 zmm20_5 0x9;
ror zmm20_6 zmm20_6 0x9;
ror zmm20_7 zmm20_7 0x9;
(* vprolq $0x3,%zmm16,%zmm16                       #! PC = 0x55555558e032 *)
rol zmm16_0 zmm16_0 0x3;
rol zmm16_1 zmm16_1 0x3;
rol zmm16_2 zmm16_2 0x3;
rol zmm16_3 zmm16_3 0x3;
rol zmm16_4 zmm16_4 0x3;
rol zmm16_5 zmm16_5 0x3;
rol zmm16_6 zmm16_6 0x3;
rol zmm16_7 zmm16_7 0x3;
(* vprorq $0x13,%zmm22,%zmm22                      #! PC = 0x55555558e039 *)
ror zmm22_0 zmm22_0 0x13;
ror zmm22_1 zmm22_1 0x13;
ror zmm22_2 zmm22_2 0x13;
ror zmm22_3 zmm22_3 0x13;
ror zmm22_4 zmm22_4 0x13;
ror zmm22_5 zmm22_5 0x13;
ror zmm22_6 zmm22_6 0x13;
ror zmm22_7 zmm22_7 0x13;
(* vprorq $0x3,%zmm10,%zmm10                       #! PC = 0x55555558e040 *)
ror zmm10_0 zmm10_0 0x3;
ror zmm10_1 zmm10_1 0x3;
ror zmm10_2 zmm10_2 0x3;
ror zmm10_3 zmm10_3 0x3;
ror zmm10_4 zmm10_4 0x3;
ror zmm10_5 zmm10_5 0x3;
ror zmm10_6 zmm10_6 0x3;
ror zmm10_7 zmm10_7 0x3;
(* vpxord %zmm25,%zmm1,%zmm25                      #! PC = 0x55555558e047 *)
xor zmm25_0@uint64 zmm1_0 zmm25_0;
xor zmm25_1@uint64 zmm1_1 zmm25_1;
xor zmm25_2@uint64 zmm1_2 zmm25_2;
xor zmm25_3@uint64 zmm1_3 zmm25_3;
xor zmm25_4@uint64 zmm1_4 zmm25_4;
xor zmm25_5@uint64 zmm1_5 zmm25_5;
xor zmm25_6@uint64 zmm1_6 zmm25_6;
xor zmm25_7@uint64 zmm1_7 zmm25_7;
(* vpxord %zmm3,%zmm15,%zmm3                       #! PC = 0x55555558e04d *)
xor zmm3_0@uint64 zmm15_0 zmm3_0;
xor zmm3_1@uint64 zmm15_1 zmm3_1;
xor zmm3_2@uint64 zmm15_2 zmm3_2;
xor zmm3_3@uint64 zmm15_3 zmm3_3;
xor zmm3_4@uint64 zmm15_4 zmm3_4;
xor zmm3_5@uint64 zmm15_5 zmm3_5;
xor zmm3_6@uint64 zmm15_6 zmm3_6;
xor zmm3_7@uint64 zmm15_7 zmm3_7;
(* vpxord %zmm26,%zmm1,%zmm26                      #! PC = 0x55555558e053 *)
xor zmm26_0@uint64 zmm1_0 zmm26_0;
xor zmm26_1@uint64 zmm1_1 zmm26_1;
xor zmm26_2@uint64 zmm1_2 zmm26_2;
xor zmm26_3@uint64 zmm1_3 zmm26_3;
xor zmm26_4@uint64 zmm1_4 zmm26_4;
xor zmm26_5@uint64 zmm1_5 zmm26_5;
xor zmm26_6@uint64 zmm1_6 zmm26_6;
xor zmm26_7@uint64 zmm1_7 zmm26_7;
(* vpxord %zmm9,%zmm14,%zmm9                       #! PC = 0x55555558e059 *)
xor zmm9_0@uint64 zmm14_0 zmm9_0;
xor zmm9_1@uint64 zmm14_1 zmm9_1;
xor zmm9_2@uint64 zmm14_2 zmm9_2;
xor zmm9_3@uint64 zmm14_3 zmm9_3;
xor zmm9_4@uint64 zmm14_4 zmm9_4;
xor zmm9_5@uint64 zmm14_5 zmm9_5;
xor zmm9_6@uint64 zmm14_6 zmm9_6;
xor zmm9_7@uint64 zmm14_7 zmm9_7;
(* vpxord %zmm17,%zmm15,%zmm17                     #! PC = 0x55555558e05f *)
xor zmm17_0@uint64 zmm15_0 zmm17_0;
xor zmm17_1@uint64 zmm15_1 zmm17_1;
xor zmm17_2@uint64 zmm15_2 zmm17_2;
xor zmm17_3@uint64 zmm15_3 zmm17_3;
xor zmm17_4@uint64 zmm15_4 zmm17_4;
xor zmm17_5@uint64 zmm15_5 zmm17_5;
xor zmm17_6@uint64 zmm15_6 zmm17_6;
xor zmm17_7@uint64 zmm15_7 zmm17_7;
(* vpxord %zmm28,%zmm1,%zmm1                       #! PC = 0x55555558e065 *)
xor zmm1_0@uint64 zmm1_0 zmm28_0;
xor zmm1_1@uint64 zmm1_1 zmm28_1;
xor zmm1_2@uint64 zmm1_2 zmm28_2;
xor zmm1_3@uint64 zmm1_3 zmm28_3;
xor zmm1_4@uint64 zmm1_4 zmm28_4;
xor zmm1_5@uint64 zmm1_5 zmm28_5;
xor zmm1_6@uint64 zmm1_6 zmm28_6;
xor zmm1_7@uint64 zmm1_7 zmm28_7;
(* vpxord %zmm31,%zmm14,%zmm14                     #! PC = 0x55555558e06b *)
xor zmm14_0@uint64 zmm14_0 zmm31_0;
xor zmm14_1@uint64 zmm14_1 zmm31_1;
xor zmm14_2@uint64 zmm14_2 zmm31_2;
xor zmm14_3@uint64 zmm14_3 zmm31_3;
xor zmm14_4@uint64 zmm14_4 zmm31_4;
xor zmm14_5@uint64 zmm14_5 zmm31_5;
xor zmm14_6@uint64 zmm14_6 zmm31_6;
xor zmm14_7@uint64 zmm14_7 zmm31_7;
(* vpxord %zmm21,%zmm15,%zmm15                     #! PC = 0x55555558e071 *)
xor zmm15_0@uint64 zmm15_0 zmm21_0;
xor zmm15_1@uint64 zmm15_1 zmm21_1;
xor zmm15_2@uint64 zmm15_2 zmm21_2;
xor zmm15_3@uint64 zmm15_3 zmm21_3;
xor zmm15_4@uint64 zmm15_4 zmm21_4;
xor zmm15_5@uint64 zmm15_5 zmm21_5;
xor zmm15_6@uint64 zmm15_6 zmm21_6;
xor zmm15_7@uint64 zmm15_7 zmm21_7;
(* vprorq $0x1c,%zmm26,%zmm26                      #! PC = 0x55555558e077 *)
ror zmm26_0 zmm26_0 0x1c;
ror zmm26_1 zmm26_1 0x1c;
ror zmm26_2 zmm26_2 0x1c;
ror zmm26_3 zmm26_3 0x1c;
ror zmm26_4 zmm26_4 0x1c;
ror zmm26_5 zmm26_5 0x1c;
ror zmm26_6 zmm26_6 0x1c;
ror zmm26_7 zmm26_7 0x1c;
(* vprolq $0x1b,%zmm17,%zmm17                      #! PC = 0x55555558e07e *)
rol zmm17_0 zmm17_0 0x1b;
rol zmm17_1 zmm17_1 0x1b;
rol zmm17_2 zmm17_2 0x1b;
rol zmm17_3 zmm17_3 0x1b;
rol zmm17_4 zmm17_4 0x1b;
rol zmm17_5 zmm17_5 0x1b;
rol zmm17_6 zmm17_6 0x1b;
rol zmm17_7 zmm17_7 0x1b;
(* vprolq $0x12,%zmm25,%zmm25                      #! PC = 0x55555558e085 *)
rol zmm25_0 zmm25_0 0x12;
rol zmm25_1 zmm25_1 0x12;
rol zmm25_2 zmm25_2 0x12;
rol zmm25_3 zmm25_3 0x12;
rol zmm25_4 zmm25_4 0x12;
rol zmm25_5 zmm25_5 0x12;
rol zmm25_6 zmm25_6 0x12;
rol zmm25_7 zmm25_7 0x12;
(* vprolq $0x19,%zmm4,%zmm4                        #! PC = 0x55555558e08c *)
rol zmm4_0 zmm4_0 0x19;
rol zmm4_1 zmm4_1 0x19;
rol zmm4_2 zmm4_2 0x19;
rol zmm4_3 zmm4_3 0x19;
rol zmm4_4 zmm4_4 0x19;
rol zmm4_5 zmm4_5 0x19;
rol zmm4_6 zmm4_6 0x19;
rol zmm4_7 zmm4_7 0x19;
(* vprolq $0x8,%zmm3,%zmm3                         #! PC = 0x55555558e093 *)
rol zmm3_0 zmm3_0 0x8;
rol zmm3_1 zmm3_1 0x8;
rol zmm3_2 zmm3_2 0x8;
rol zmm3_3 zmm3_3 0x8;
rol zmm3_4 zmm3_4 0x8;
rol zmm3_5 zmm3_5 0x8;
rol zmm3_6 zmm3_6 0x8;
rol zmm3_7 zmm3_7 0x8;
(* vprorq $0x17,%zmm1,%zmm1                        #! PC = 0x55555558e09a *)
ror zmm1_0 zmm1_0 0x17;
ror zmm1_1 zmm1_1 0x17;
ror zmm1_2 zmm1_2 0x17;
ror zmm1_3 zmm1_3 0x17;
ror zmm1_4 zmm1_4 0x17;
ror zmm1_5 zmm1_5 0x17;
ror zmm1_6 zmm1_6 0x17;
ror zmm1_7 zmm1_7 0x17;
(* vprolq $0x2,%zmm14,%zmm14                       #! PC = 0x55555558e0a1 *)
rol zmm14_0 zmm14_0 0x2;
rol zmm14_1 zmm14_1 0x2;
rol zmm14_2 zmm14_2 0x2;
rol zmm14_3 zmm14_3 0x2;
rol zmm14_4 zmm14_4 0x2;
rol zmm14_5 zmm14_5 0x2;
rol zmm14_6 zmm14_6 0x2;
rol zmm14_7 zmm14_7 0x2;
(* vprorq $0x19,%zmm15,%zmm15                      #! PC = 0x55555558e0a8 *)
ror zmm15_0 zmm15_0 0x19;
ror zmm15_1 zmm15_1 0x19;
ror zmm15_2 zmm15_2 0x19;
ror zmm15_3 zmm15_3 0x19;
ror zmm15_4 zmm15_4 0x19;
ror zmm15_5 zmm15_5 0x19;
ror zmm15_6 zmm15_6 0x19;
ror zmm15_7 zmm15_7 0x19;
(* vprolq $0xa,%zmm9,%zmm9                         #! PC = 0x55555558e0af *)
rol zmm9_0 zmm9_0 0xa;
rol zmm9_1 zmm9_1 0xa;
rol zmm9_2 zmm9_2 0xa;
rol zmm9_3 zmm9_3 0xa;
rol zmm9_4 zmm9_4 0xa;
rol zmm9_5 zmm9_5 0xa;
rol zmm9_6 zmm9_6 0xa;
rol zmm9_7 zmm9_7 0xa;
(* vprolq $0xf,%zmm11,%zmm11                       #! PC = 0x55555558e0b6 *)
rol zmm11_0 zmm11_0 0xf;
rol zmm11_1 zmm11_1 0xf;
rol zmm11_2 zmm11_2 0xf;
rol zmm11_3 zmm11_3 0xf;
rol zmm11_4 zmm11_4 0xf;
rol zmm11_5 zmm11_5 0xf;
rol zmm11_6 zmm11_6 0xf;
rol zmm11_7 zmm11_7 0xf;
(* vprorq $0x8,%zmm2,%zmm2                         #! PC = 0x55555558e0bd *)
ror zmm2_0 zmm2_0 0x8;
ror zmm2_1 zmm2_1 0x8;
ror zmm2_2 zmm2_2 0x8;
ror zmm2_3 zmm2_3 0x8;
ror zmm2_4 zmm2_4 0x8;
ror zmm2_5 zmm2_5 0x8;
ror zmm2_6 zmm2_6 0x8;
ror zmm2_7 zmm2_7 0x8;
(* vmovdqa64 %zmm24,%zmm29                         #! PC = 0x55555558e0c4 *)
mov zmm29_0 zmm24_0;
mov zmm29_1 zmm24_1;
mov zmm29_2 zmm24_2;
mov zmm29_3 zmm24_3;
mov zmm29_4 zmm24_4;
mov zmm29_5 zmm24_5;
mov zmm29_6 zmm24_6;
mov zmm29_7 zmm24_7;
(* vmovdqa64 %zmm30,%zmm27                         #! PC = 0x55555558e0ca *)
mov zmm27_0 zmm30_0;
mov zmm27_1 zmm30_1;
mov zmm27_2 zmm30_2;
mov zmm27_3 zmm30_3;
mov zmm27_4 zmm30_4;
mov zmm27_5 zmm30_5;
mov zmm27_6 zmm30_6;
mov zmm27_7 zmm30_7;
(* vpternlogq $0xd2,%zmm0,%zmm30,%zmm29            #! PC = 0x55555558e0d0 *)
mov table 0xd2@uint8;
inline vpternlogq64 (zmm29_0, zmm30_0, zmm0_0, table);
inline vpternlogq64 (zmm29_1, zmm30_1, zmm0_1, table);
inline vpternlogq64 (zmm29_2, zmm30_2, zmm0_2, table);
inline vpternlogq64 (zmm29_3, zmm30_3, zmm0_3, table);
inline vpternlogq64 (zmm29_4, zmm30_4, zmm0_4, table);
inline vpternlogq64 (zmm29_5, zmm30_5, zmm0_5, table);
inline vpternlogq64 (zmm29_6, zmm30_6, zmm0_6, table);
inline vpternlogq64 (zmm29_7, zmm30_7, zmm0_7, table);
(* vpternlogq $0xd2,%zmm6,%zmm0,%zmm27             #! PC = 0x55555558e0d7 *)
mov table 0xd2@uint8;
inline vpternlogq64 (zmm27_0, zmm0_0, zmm6_0, table);
inline vpternlogq64 (zmm27_1, zmm0_1, zmm6_1, table);
inline vpternlogq64 (zmm27_2, zmm0_2, zmm6_2, table);
inline vpternlogq64 (zmm27_3, zmm0_3, zmm6_3, table);
inline vpternlogq64 (zmm27_4, zmm0_4, zmm6_4, table);
inline vpternlogq64 (zmm27_5, zmm0_5, zmm6_5, table);
inline vpternlogq64 (zmm27_6, zmm0_6, zmm6_6, table);
inline vpternlogq64 (zmm27_7, zmm0_7, zmm6_7, table);
(* vpternlogq $0xd2,%zmm8,%zmm6,%zmm0              #! PC = 0x55555558e0de *)
mov table 0xd2@uint8;
inline vpternlogq64 (zmm0_0, zmm6_0, zmm8_0, table);
inline vpternlogq64 (zmm0_1, zmm6_1, zmm8_1, table);
inline vpternlogq64 (zmm0_2, zmm6_2, zmm8_2, table);
inline vpternlogq64 (zmm0_3, zmm6_3, zmm8_3, table);
inline vpternlogq64 (zmm0_4, zmm6_4, zmm8_4, table);
inline vpternlogq64 (zmm0_5, zmm6_5, zmm8_5, table);
inline vpternlogq64 (zmm0_6, zmm6_6, zmm8_6, table);
inline vpternlogq64 (zmm0_7, zmm6_7, zmm8_7, table);
(* vpternlogq $0xd2,%zmm24,%zmm8,%zmm6             #! PC = 0x55555558e0e5 *)
mov table 0xd2@uint8;
inline vpternlogq64 (zmm6_0, zmm8_0, zmm24_0, table);
inline vpternlogq64 (zmm6_1, zmm8_1, zmm24_1, table);
inline vpternlogq64 (zmm6_2, zmm8_2, zmm24_2, table);
inline vpternlogq64 (zmm6_3, zmm8_3, zmm24_3, table);
inline vpternlogq64 (zmm6_4, zmm8_4, zmm24_4, table);
inline vpternlogq64 (zmm6_5, zmm8_5, zmm24_5, table);
inline vpternlogq64 (zmm6_6, zmm8_6, zmm24_6, table);
inline vpternlogq64 (zmm6_7, zmm8_7, zmm24_7, table);
(* vpternlogq $0xd2,%zmm30,%zmm24,%zmm8            #! PC = 0x55555558e0ec *)
mov table 0xd2@uint8;
inline vpternlogq64 (zmm8_0, zmm24_0, zmm30_0, table);
inline vpternlogq64 (zmm8_1, zmm24_1, zmm30_1, table);
inline vpternlogq64 (zmm8_2, zmm24_2, zmm30_2, table);
inline vpternlogq64 (zmm8_3, zmm24_3, zmm30_3, table);
inline vpternlogq64 (zmm8_4, zmm24_4, zmm30_4, table);
inline vpternlogq64 (zmm8_5, zmm24_5, zmm30_5, table);
inline vpternlogq64 (zmm8_6, zmm24_6, zmm30_6, table);
inline vpternlogq64 (zmm8_7, zmm24_7, zmm30_7, table);
(* vpbroadcastq %rdx,%zmm24                        #! PC = 0x55555558e0f3 *)
mov zmm24_0 rdx;
mov zmm24_1 rdx;
mov zmm24_2 rdx;
mov zmm24_3 rdx;
mov zmm24_4 rdx;
mov zmm24_5 rdx;
mov zmm24_6 rdx;
mov zmm24_7 rdx;
(* vpxord %zmm24,%zmm29,%zmm24                     #! PC = 0x55555558e0f9 *)
xor zmm24_0@uint64 zmm29_0 zmm24_0;
xor zmm24_1@uint64 zmm29_1 zmm24_1;
xor zmm24_2@uint64 zmm29_2 zmm24_2;
xor zmm24_3@uint64 zmm29_3 zmm24_3;
xor zmm24_4@uint64 zmm29_4 zmm24_4;
xor zmm24_5@uint64 zmm29_5 zmm24_5;
xor zmm24_6@uint64 zmm29_6 zmm24_6;
xor zmm24_7@uint64 zmm29_7 zmm24_7;
(* vmovdqa64 %zmm18,%zmm30                         #! PC = 0x55555558e0ff *)
mov zmm30_0 zmm18_0;
mov zmm30_1 zmm18_1;
mov zmm30_2 zmm18_2;
mov zmm30_3 zmm18_3;
mov zmm30_4 zmm18_4;
mov zmm30_5 zmm18_5;
mov zmm30_6 zmm18_6;
mov zmm30_7 zmm18_7;
(* vmovdqa64 %zmm7,%zmm29                          #! PC = 0x55555558e105 *)
mov zmm29_0 zmm7_0;
mov zmm29_1 zmm7_1;
mov zmm29_2 zmm7_2;
mov zmm29_3 zmm7_3;
mov zmm29_4 zmm7_4;
mov zmm29_5 zmm7_5;
mov zmm29_6 zmm7_6;
mov zmm29_7 zmm7_7;
(* vpternlogq $0xd2,%zmm16,%zmm18,%zmm29           #! PC = 0x55555558e10b *)
mov table 0xd2@uint8;
inline vpternlogq64 (zmm29_0, zmm18_0, zmm16_0, table);
inline vpternlogq64 (zmm29_1, zmm18_1, zmm16_1, table);
inline vpternlogq64 (zmm29_2, zmm18_2, zmm16_2, table);
inline vpternlogq64 (zmm29_3, zmm18_3, zmm16_3, table);
inline vpternlogq64 (zmm29_4, zmm18_4, zmm16_4, table);
inline vpternlogq64 (zmm29_5, zmm18_5, zmm16_5, table);
inline vpternlogq64 (zmm29_6, zmm18_6, zmm16_6, table);
inline vpternlogq64 (zmm29_7, zmm18_7, zmm16_7, table);
(* vpternlogq $0xd2,%zmm22,%zmm16,%zmm30           #! PC = 0x55555558e112 *)
mov table 0xd2@uint8;
inline vpternlogq64 (zmm30_0, zmm16_0, zmm22_0, table);
inline vpternlogq64 (zmm30_1, zmm16_1, zmm22_1, table);
inline vpternlogq64 (zmm30_2, zmm16_2, zmm22_2, table);
inline vpternlogq64 (zmm30_3, zmm16_3, zmm22_3, table);
inline vpternlogq64 (zmm30_4, zmm16_4, zmm22_4, table);
inline vpternlogq64 (zmm30_5, zmm16_5, zmm22_5, table);
inline vpternlogq64 (zmm30_6, zmm16_6, zmm22_6, table);
inline vpternlogq64 (zmm30_7, zmm16_7, zmm22_7, table);
(* vmovdqa64 %zmm19,%zmm21                         #! PC = 0x55555558e119 *)
mov zmm21_0 zmm19_0;
mov zmm21_1 zmm19_1;
mov zmm21_2 zmm19_2;
mov zmm21_3 zmm19_3;
mov zmm21_4 zmm19_4;
mov zmm21_5 zmm19_5;
mov zmm21_6 zmm19_6;
mov zmm21_7 zmm19_7;
(* vpternlogq $0xd2,%zmm10,%zmm22,%zmm16           #! PC = 0x55555558e11f *)
mov table 0xd2@uint8;
inline vpternlogq64 (zmm16_0, zmm22_0, zmm10_0, table);
inline vpternlogq64 (zmm16_1, zmm22_1, zmm10_1, table);
inline vpternlogq64 (zmm16_2, zmm22_2, zmm10_2, table);
inline vpternlogq64 (zmm16_3, zmm22_3, zmm10_3, table);
inline vpternlogq64 (zmm16_4, zmm22_4, zmm10_4, table);
inline vpternlogq64 (zmm16_5, zmm22_5, zmm10_5, table);
inline vpternlogq64 (zmm16_6, zmm22_6, zmm10_6, table);
inline vpternlogq64 (zmm16_7, zmm22_7, zmm10_7, table);
(* vmovdqa64 %zmm20,%zmm31                         #! PC = 0x55555558e126 *)
mov zmm31_0 zmm20_0;
mov zmm31_1 zmm20_1;
mov zmm31_2 zmm20_2;
mov zmm31_3 zmm20_3;
mov zmm31_4 zmm20_4;
mov zmm31_5 zmm20_5;
mov zmm31_6 zmm20_6;
mov zmm31_7 zmm20_7;
(* vpternlogq $0xd2,%zmm7,%zmm10,%zmm22            #! PC = 0x55555558e12c *)
mov table 0xd2@uint8;
inline vpternlogq64 (zmm22_0, zmm10_0, zmm7_0, table);
inline vpternlogq64 (zmm22_1, zmm10_1, zmm7_1, table);
inline vpternlogq64 (zmm22_2, zmm10_2, zmm7_2, table);
inline vpternlogq64 (zmm22_3, zmm10_3, zmm7_3, table);
inline vpternlogq64 (zmm22_4, zmm10_4, zmm7_4, table);
inline vpternlogq64 (zmm22_5, zmm10_5, zmm7_5, table);
inline vpternlogq64 (zmm22_6, zmm10_6, zmm7_6, table);
inline vpternlogq64 (zmm22_7, zmm10_7, zmm7_7, table);
(* vpternlogq $0xd2,%zmm18,%zmm7,%zmm10            #! PC = 0x55555558e133 *)
mov table 0xd2@uint8;
inline vpternlogq64 (zmm10_0, zmm7_0, zmm18_0, table);
inline vpternlogq64 (zmm10_1, zmm7_1, zmm18_1, table);
inline vpternlogq64 (zmm10_2, zmm7_2, zmm18_2, table);
inline vpternlogq64 (zmm10_3, zmm7_3, zmm18_3, table);
inline vpternlogq64 (zmm10_4, zmm7_4, zmm18_4, table);
inline vpternlogq64 (zmm10_5, zmm7_5, zmm18_5, table);
inline vpternlogq64 (zmm10_6, zmm7_6, zmm18_6, table);
inline vpternlogq64 (zmm10_7, zmm7_7, zmm18_7, table);
(* vmovdqa64 %zmm23,%zmm18                         #! PC = 0x55555558e13a *)
mov zmm18_0 zmm23_0;
mov zmm18_1 zmm23_1;
mov zmm18_2 zmm23_2;
mov zmm18_3 zmm23_3;
mov zmm18_4 zmm23_4;
mov zmm18_5 zmm23_5;
mov zmm18_6 zmm23_6;
mov zmm18_7 zmm23_7;
(* vmovdqa64 %zmm12,%zmm7                          #! PC = 0x55555558e140 *)
mov zmm7_0 zmm12_0;
mov zmm7_1 zmm12_1;
mov zmm7_2 zmm12_2;
mov zmm7_3 zmm12_3;
mov zmm7_4 zmm12_4;
mov zmm7_5 zmm12_5;
mov zmm7_6 zmm12_6;
mov zmm7_7 zmm12_7;
(* vpternlogq $0xd2,%zmm1,%zmm15,%zmm31            #! PC = 0x55555558e146 *)
mov table 0xd2@uint8;
inline vpternlogq64 (zmm31_0, zmm15_0, zmm1_0, table);
inline vpternlogq64 (zmm31_1, zmm15_1, zmm1_1, table);
inline vpternlogq64 (zmm31_2, zmm15_2, zmm1_2, table);
inline vpternlogq64 (zmm31_3, zmm15_3, zmm1_3, table);
inline vpternlogq64 (zmm31_4, zmm15_4, zmm1_4, table);
inline vpternlogq64 (zmm31_5, zmm15_5, zmm1_5, table);
inline vpternlogq64 (zmm31_6, zmm15_6, zmm1_6, table);
inline vpternlogq64 (zmm31_7, zmm15_7, zmm1_7, table);
(* vpternlogq $0xd2,%zmm4,%zmm12,%zmm18            #! PC = 0x55555558e14d *)
mov table 0xd2@uint8;
inline vpternlogq64 (zmm18_0, zmm12_0, zmm4_0, table);
inline vpternlogq64 (zmm18_1, zmm12_1, zmm4_1, table);
inline vpternlogq64 (zmm18_2, zmm12_2, zmm4_2, table);
inline vpternlogq64 (zmm18_3, zmm12_3, zmm4_3, table);
inline vpternlogq64 (zmm18_4, zmm12_4, zmm4_4, table);
inline vpternlogq64 (zmm18_5, zmm12_5, zmm4_5, table);
inline vpternlogq64 (zmm18_6, zmm12_6, zmm4_6, table);
inline vpternlogq64 (zmm18_7, zmm12_7, zmm4_7, table);
(* vpternlogq $0xd2,%zmm3,%zmm4,%zmm7              #! PC = 0x55555558e154 *)
mov table 0xd2@uint8;
inline vpternlogq64 (zmm7_0, zmm4_0, zmm3_0, table);
inline vpternlogq64 (zmm7_1, zmm4_1, zmm3_1, table);
inline vpternlogq64 (zmm7_2, zmm4_2, zmm3_2, table);
inline vpternlogq64 (zmm7_3, zmm4_3, zmm3_3, table);
inline vpternlogq64 (zmm7_4, zmm4_4, zmm3_4, table);
inline vpternlogq64 (zmm7_5, zmm4_5, zmm3_5, table);
inline vpternlogq64 (zmm7_6, zmm4_6, zmm3_6, table);
inline vpternlogq64 (zmm7_7, zmm4_7, zmm3_7, table);
(* vpternlogq $0xd2,%zmm15,%zmm20,%zmm21           #! PC = 0x55555558e15b *)
mov table 0xd2@uint8;
inline vpternlogq64 (zmm21_0, zmm20_0, zmm15_0, table);
inline vpternlogq64 (zmm21_1, zmm20_1, zmm15_1, table);
inline vpternlogq64 (zmm21_2, zmm20_2, zmm15_2, table);
inline vpternlogq64 (zmm21_3, zmm20_3, zmm15_3, table);
inline vpternlogq64 (zmm21_4, zmm20_4, zmm15_4, table);
inline vpternlogq64 (zmm21_5, zmm20_5, zmm15_5, table);
inline vpternlogq64 (zmm21_6, zmm20_6, zmm15_6, table);
inline vpternlogq64 (zmm21_7, zmm20_7, zmm15_7, table);
(* vpternlogq $0xd2,%zmm25,%zmm3,%zmm4             #! PC = 0x55555558e162 *)
mov table 0xd2@uint8;
inline vpternlogq64 (zmm4_0, zmm3_0, zmm25_0, table);
inline vpternlogq64 (zmm4_1, zmm3_1, zmm25_1, table);
inline vpternlogq64 (zmm4_2, zmm3_2, zmm25_2, table);
inline vpternlogq64 (zmm4_3, zmm3_3, zmm25_3, table);
inline vpternlogq64 (zmm4_4, zmm3_4, zmm25_4, table);
inline vpternlogq64 (zmm4_5, zmm3_5, zmm25_5, table);
inline vpternlogq64 (zmm4_6, zmm3_6, zmm25_6, table);
inline vpternlogq64 (zmm4_7, zmm3_7, zmm25_7, table);
(* vpternlogq $0xd2,%zmm14,%zmm1,%zmm15            #! PC = 0x55555558e169 *)
mov table 0xd2@uint8;
inline vpternlogq64 (zmm15_0, zmm1_0, zmm14_0, table);
inline vpternlogq64 (zmm15_1, zmm1_1, zmm14_1, table);
inline vpternlogq64 (zmm15_2, zmm1_2, zmm14_2, table);
inline vpternlogq64 (zmm15_3, zmm1_3, zmm14_3, table);
inline vpternlogq64 (zmm15_4, zmm1_4, zmm14_4, table);
inline vpternlogq64 (zmm15_5, zmm1_5, zmm14_5, table);
inline vpternlogq64 (zmm15_6, zmm1_6, zmm14_6, table);
inline vpternlogq64 (zmm15_7, zmm1_7, zmm14_7, table);
(* vpternlogq $0xd2,%zmm23,%zmm25,%zmm3            #! PC = 0x55555558e170 *)
mov table 0xd2@uint8;
inline vpternlogq64 (zmm3_0, zmm25_0, zmm23_0, table);
inline vpternlogq64 (zmm3_1, zmm25_1, zmm23_1, table);
inline vpternlogq64 (zmm3_2, zmm25_2, zmm23_2, table);
inline vpternlogq64 (zmm3_3, zmm25_3, zmm23_3, table);
inline vpternlogq64 (zmm3_4, zmm25_4, zmm23_4, table);
inline vpternlogq64 (zmm3_5, zmm25_5, zmm23_5, table);
inline vpternlogq64 (zmm3_6, zmm25_6, zmm23_6, table);
inline vpternlogq64 (zmm3_7, zmm25_7, zmm23_7, table);
(* vpternlogq $0xd2,%zmm19,%zmm14,%zmm1            #! PC = 0x55555558e177 *)
mov table 0xd2@uint8;
inline vpternlogq64 (zmm1_0, zmm14_0, zmm19_0, table);
inline vpternlogq64 (zmm1_1, zmm14_1, zmm19_1, table);
inline vpternlogq64 (zmm1_2, zmm14_2, zmm19_2, table);
inline vpternlogq64 (zmm1_3, zmm14_3, zmm19_3, table);
inline vpternlogq64 (zmm1_4, zmm14_4, zmm19_4, table);
inline vpternlogq64 (zmm1_5, zmm14_5, zmm19_5, table);
inline vpternlogq64 (zmm1_6, zmm14_6, zmm19_6, table);
inline vpternlogq64 (zmm1_7, zmm14_7, zmm19_7, table);
(* vpternlogq $0xd2,%zmm12,%zmm23,%zmm25           #! PC = 0x55555558e17e *)
mov table 0xd2@uint8;
inline vpternlogq64 (zmm25_0, zmm23_0, zmm12_0, table);
inline vpternlogq64 (zmm25_1, zmm23_1, zmm12_1, table);
inline vpternlogq64 (zmm25_2, zmm23_2, zmm12_2, table);
inline vpternlogq64 (zmm25_3, zmm23_3, zmm12_3, table);
inline vpternlogq64 (zmm25_4, zmm23_4, zmm12_4, table);
inline vpternlogq64 (zmm25_5, zmm23_5, zmm12_5, table);
inline vpternlogq64 (zmm25_6, zmm23_6, zmm12_6, table);
inline vpternlogq64 (zmm25_7, zmm23_7, zmm12_7, table);
(* vpternlogq $0xd2,%zmm20,%zmm19,%zmm14           #! PC = 0x55555558e185 *)
mov table 0xd2@uint8;
inline vpternlogq64 (zmm14_0, zmm19_0, zmm20_0, table);
inline vpternlogq64 (zmm14_1, zmm19_1, zmm20_1, table);
inline vpternlogq64 (zmm14_2, zmm19_2, zmm20_2, table);
inline vpternlogq64 (zmm14_3, zmm19_3, zmm20_3, table);
inline vpternlogq64 (zmm14_4, zmm19_4, zmm20_4, table);
inline vpternlogq64 (zmm14_5, zmm19_5, zmm20_5, table);
inline vpternlogq64 (zmm14_6, zmm19_6, zmm20_6, table);
inline vpternlogq64 (zmm14_7, zmm19_7, zmm20_7, table);
(* vmovdqa64 %zmm17,%zmm23                         #! PC = 0x55555558e18c *)
mov zmm23_0 zmm17_0;
mov zmm23_1 zmm17_1;
mov zmm23_2 zmm17_2;
mov zmm23_3 zmm17_3;
mov zmm23_4 zmm17_4;
mov zmm23_5 zmm17_5;
mov zmm23_6 zmm17_6;
mov zmm23_7 zmm17_7;
(* vmovdqa64 %zmm26,%zmm12                         #! PC = 0x55555558e192 *)
mov zmm12_0 zmm26_0;
mov zmm12_1 zmm26_1;
mov zmm12_2 zmm26_2;
mov zmm12_3 zmm26_3;
mov zmm12_4 zmm26_4;
mov zmm12_5 zmm26_5;
mov zmm12_6 zmm26_6;
mov zmm12_7 zmm26_7;
(* vmovdqa64 %zmm16,%zmm20                         #! PC = 0x55555558e198 *)
mov zmm20_0 zmm16_0;
mov zmm20_1 zmm16_1;
mov zmm20_2 zmm16_2;
mov zmm20_3 zmm16_3;
mov zmm20_4 zmm16_4;
mov zmm20_5 zmm16_5;
mov zmm20_6 zmm16_6;
mov zmm20_7 zmm16_7;
(* vpternlogq $0xd2,%zmm9,%zmm26,%zmm23            #! PC = 0x55555558e19e *)
mov table 0xd2@uint8;
inline vpternlogq64 (zmm23_0, zmm26_0, zmm9_0, table);
inline vpternlogq64 (zmm23_1, zmm26_1, zmm9_1, table);
inline vpternlogq64 (zmm23_2, zmm26_2, zmm9_2, table);
inline vpternlogq64 (zmm23_3, zmm26_3, zmm9_3, table);
inline vpternlogq64 (zmm23_4, zmm26_4, zmm9_4, table);
inline vpternlogq64 (zmm23_5, zmm26_5, zmm9_5, table);
inline vpternlogq64 (zmm23_6, zmm26_6, zmm9_6, table);
inline vpternlogq64 (zmm23_7, zmm26_7, zmm9_7, table);
(* vpternlogq $0xd2,%zmm11,%zmm9,%zmm12            #! PC = 0x55555558e1a5 *)
mov table 0xd2@uint8;
inline vpternlogq64 (zmm12_0, zmm9_0, zmm11_0, table);
inline vpternlogq64 (zmm12_1, zmm9_1, zmm11_1, table);
inline vpternlogq64 (zmm12_2, zmm9_2, zmm11_2, table);
inline vpternlogq64 (zmm12_3, zmm9_3, zmm11_3, table);
inline vpternlogq64 (zmm12_4, zmm9_4, zmm11_4, table);
inline vpternlogq64 (zmm12_5, zmm9_5, zmm11_5, table);
inline vpternlogq64 (zmm12_6, zmm9_6, zmm11_6, table);
inline vpternlogq64 (zmm12_7, zmm9_7, zmm11_7, table);
(* vpternlogq $0x96,%zmm15,%zmm0,%zmm20            #! PC = 0x55555558e1ac *)
mov table 0x96@uint8;
inline vpternlogq64 (zmm20_0, zmm0_0, zmm15_0, table);
inline vpternlogq64 (zmm20_1, zmm0_1, zmm15_1, table);
inline vpternlogq64 (zmm20_2, zmm0_2, zmm15_2, table);
inline vpternlogq64 (zmm20_3, zmm0_3, zmm15_3, table);
inline vpternlogq64 (zmm20_4, zmm0_4, zmm15_4, table);
inline vpternlogq64 (zmm20_5, zmm0_5, zmm15_5, table);
inline vpternlogq64 (zmm20_6, zmm0_6, zmm15_6, table);
inline vpternlogq64 (zmm20_7, zmm0_7, zmm15_7, table);
(* vpternlogq $0xd2,%zmm2,%zmm11,%zmm9             #! PC = 0x55555558e1b3 *)
mov table 0xd2@uint8;
inline vpternlogq64 (zmm9_0, zmm11_0, zmm2_0, table);
inline vpternlogq64 (zmm9_1, zmm11_1, zmm2_1, table);
inline vpternlogq64 (zmm9_2, zmm11_2, zmm2_2, table);
inline vpternlogq64 (zmm9_3, zmm11_3, zmm2_3, table);
inline vpternlogq64 (zmm9_4, zmm11_4, zmm2_4, table);
inline vpternlogq64 (zmm9_5, zmm11_5, zmm2_5, table);
inline vpternlogq64 (zmm9_6, zmm11_6, zmm2_6, table);
inline vpternlogq64 (zmm9_7, zmm11_7, zmm2_7, table);
(* vpternlogq $0x96,%zmm4,%zmm9,%zmm20             #! PC = 0x55555558e1ba *)
mov table 0x96@uint8;
inline vpternlogq64 (zmm20_0, zmm9_0, zmm4_0, table);
inline vpternlogq64 (zmm20_1, zmm9_1, zmm4_1, table);
inline vpternlogq64 (zmm20_2, zmm9_2, zmm4_2, table);
inline vpternlogq64 (zmm20_3, zmm9_3, zmm4_3, table);
inline vpternlogq64 (zmm20_4, zmm9_4, zmm4_4, table);
inline vpternlogq64 (zmm20_5, zmm9_5, zmm4_5, table);
inline vpternlogq64 (zmm20_6, zmm9_6, zmm4_6, table);
inline vpternlogq64 (zmm20_7, zmm9_7, zmm4_7, table);
(* vpternlogq $0xd2,%zmm17,%zmm2,%zmm11            #! PC = 0x55555558e1c1 *)
mov table 0xd2@uint8;
inline vpternlogq64 (zmm11_0, zmm2_0, zmm17_0, table);
inline vpternlogq64 (zmm11_1, zmm2_1, zmm17_1, table);
inline vpternlogq64 (zmm11_2, zmm2_2, zmm17_2, table);
inline vpternlogq64 (zmm11_3, zmm2_3, zmm17_3, table);
inline vpternlogq64 (zmm11_4, zmm2_4, zmm17_4, table);
inline vpternlogq64 (zmm11_5, zmm2_5, zmm17_5, table);
inline vpternlogq64 (zmm11_6, zmm2_6, zmm17_6, table);
inline vpternlogq64 (zmm11_7, zmm2_7, zmm17_7, table);
(* vpternlogq $0xd2,%zmm26,%zmm17,%zmm2            #! PC = 0x55555558e1c8 *)
mov table 0xd2@uint8;
inline vpternlogq64 (zmm2_0, zmm17_0, zmm26_0, table);
inline vpternlogq64 (zmm2_1, zmm17_1, zmm26_1, table);
inline vpternlogq64 (zmm2_2, zmm17_2, zmm26_2, table);
inline vpternlogq64 (zmm2_3, zmm17_3, zmm26_3, table);
inline vpternlogq64 (zmm2_4, zmm17_4, zmm26_4, table);
inline vpternlogq64 (zmm2_5, zmm17_5, zmm26_5, table);
inline vpternlogq64 (zmm2_6, zmm17_6, zmm26_6, table);
inline vpternlogq64 (zmm2_7, zmm17_7, zmm26_7, table);
(* vprolq $0x1,%zmm20,%zmm17                       #! PC = 0x55555558e1cf *)
rol zmm17_0 zmm20_0 0x1;
rol zmm17_1 zmm20_1 0x1;
rol zmm17_2 zmm20_2 0x1;
rol zmm17_3 zmm20_3 0x1;
rol zmm17_4 zmm20_4 0x1;
rol zmm17_5 zmm20_5 0x1;
rol zmm17_6 zmm20_6 0x1;
rol zmm17_7 zmm20_7 0x1;
(* vmovdqa64 %zmm1,%zmm26                          #! PC = 0x55555558e1d6 *)
mov zmm26_0 zmm1_0;
mov zmm26_1 zmm1_1;
mov zmm26_2 zmm1_2;
mov zmm26_3 zmm1_3;
mov zmm26_4 zmm1_4;
mov zmm26_5 zmm1_5;
mov zmm26_6 zmm1_6;
mov zmm26_7 zmm1_7;
(* vpternlogq $0x96,%zmm3,%zmm11,%zmm26            #! PC = 0x55555558e1dc *)
mov table 0x96@uint8;
inline vpternlogq64 (zmm26_0, zmm11_0, zmm3_0, table);
inline vpternlogq64 (zmm26_1, zmm11_1, zmm3_1, table);
inline vpternlogq64 (zmm26_2, zmm11_2, zmm3_2, table);
inline vpternlogq64 (zmm26_3, zmm11_3, zmm3_3, table);
inline vpternlogq64 (zmm26_4, zmm11_4, zmm3_4, table);
inline vpternlogq64 (zmm26_5, zmm11_5, zmm3_5, table);
inline vpternlogq64 (zmm26_6, zmm11_6, zmm3_6, table);
inline vpternlogq64 (zmm26_7, zmm11_7, zmm3_7, table);
(* vpternlogq $0x96,%zmm6,%zmm22,%zmm26            #! PC = 0x55555558e1e3 *)
mov table 0x96@uint8;
inline vpternlogq64 (zmm26_0, zmm22_0, zmm6_0, table);
inline vpternlogq64 (zmm26_1, zmm22_1, zmm6_1, table);
inline vpternlogq64 (zmm26_2, zmm22_2, zmm6_2, table);
inline vpternlogq64 (zmm26_3, zmm22_3, zmm6_3, table);
inline vpternlogq64 (zmm26_4, zmm22_4, zmm6_4, table);
inline vpternlogq64 (zmm26_5, zmm22_5, zmm6_5, table);
inline vpternlogq64 (zmm26_6, zmm22_6, zmm6_6, table);
inline vpternlogq64 (zmm26_7, zmm22_7, zmm6_7, table);
(* vmovdqa64 %zmm25,%zmm28                         #! PC = 0x55555558e1ea *)
mov zmm28_0 zmm25_0;
mov zmm28_1 zmm25_1;
mov zmm28_2 zmm25_2;
mov zmm28_3 zmm25_3;
mov zmm28_4 zmm25_4;
mov zmm28_5 zmm25_5;
mov zmm28_6 zmm25_6;
mov zmm28_7 zmm25_7;
(* vpternlogq $0x96,%zmm8,%zmm10,%zmm28            #! PC = 0x55555558e1f0 *)
mov table 0x96@uint8;
inline vpternlogq64 (zmm28_0, zmm10_0, zmm8_0, table);
inline vpternlogq64 (zmm28_1, zmm10_1, zmm8_1, table);
inline vpternlogq64 (zmm28_2, zmm10_2, zmm8_2, table);
inline vpternlogq64 (zmm28_3, zmm10_3, zmm8_3, table);
inline vpternlogq64 (zmm28_4, zmm10_4, zmm8_4, table);
inline vpternlogq64 (zmm28_5, zmm10_5, zmm8_5, table);
inline vpternlogq64 (zmm28_6, zmm10_6, zmm8_6, table);
inline vpternlogq64 (zmm28_7, zmm10_7, zmm8_7, table);
(* vmovdqa64 %zmm17,0x148(%rsp)                    #! EA = L0x7fffffffd600; PC = 0x55555558e1f7 *)
mov L0x7fffffffd600 zmm17_0;
mov L0x7fffffffd608 zmm17_1;
mov L0x7fffffffd610 zmm17_2;
mov L0x7fffffffd618 zmm17_3;
mov L0x7fffffffd620 zmm17_4;
mov L0x7fffffffd628 zmm17_5;
mov L0x7fffffffd630 zmm17_6;
mov L0x7fffffffd638 zmm17_7;
(* vprolq $0x1,%zmm26,%zmm17                       #! PC = 0x55555558e202 *)
rol zmm17_0 zmm26_0 0x1;
rol zmm17_1 zmm26_1 0x1;
rol zmm17_2 zmm26_2 0x1;
rol zmm17_3 zmm26_3 0x1;
rol zmm17_4 zmm26_4 0x1;
rol zmm17_5 zmm26_5 0x1;
rol zmm17_6 zmm26_6 0x1;
rol zmm17_7 zmm26_7 0x1;
(* vpternlogq $0x96,%zmm2,%zmm14,%zmm28            #! PC = 0x55555558e209 *)
mov table 0x96@uint8;
inline vpternlogq64 (zmm28_0, zmm14_0, zmm2_0, table);
inline vpternlogq64 (zmm28_1, zmm14_1, zmm2_1, table);
inline vpternlogq64 (zmm28_2, zmm14_2, zmm2_2, table);
inline vpternlogq64 (zmm28_3, zmm14_3, zmm2_3, table);
inline vpternlogq64 (zmm28_4, zmm14_4, zmm2_4, table);
inline vpternlogq64 (zmm28_5, zmm14_5, zmm2_5, table);
inline vpternlogq64 (zmm28_6, zmm14_6, zmm2_6, table);
inline vpternlogq64 (zmm28_7, zmm14_7, zmm2_7, table);
(* vmovdqa64 %zmm24,%zmm13                         #! PC = 0x55555558e210 *)
mov zmm13_0 zmm24_0;
mov zmm13_1 zmm24_1;
mov zmm13_2 zmm24_2;
mov zmm13_3 zmm24_3;
mov zmm13_4 zmm24_4;
mov zmm13_5 zmm24_5;
mov zmm13_6 zmm24_6;
mov zmm13_7 zmm24_7;
(* vpternlogq $0x96,%zmm23,%zmm21,%zmm13           #! PC = 0x55555558e216 *)
mov table 0x96@uint8;
inline vpternlogq64 (zmm13_0, zmm21_0, zmm23_0, table);
inline vpternlogq64 (zmm13_1, zmm21_1, zmm23_1, table);
inline vpternlogq64 (zmm13_2, zmm21_2, zmm23_2, table);
inline vpternlogq64 (zmm13_3, zmm21_3, zmm23_3, table);
inline vpternlogq64 (zmm13_4, zmm21_4, zmm23_4, table);
inline vpternlogq64 (zmm13_5, zmm21_5, zmm23_5, table);
inline vpternlogq64 (zmm13_6, zmm21_6, zmm23_6, table);
inline vpternlogq64 (zmm13_7, zmm21_7, zmm23_7, table);
(* vpternlogq $0x96,%zmm29,%zmm18,%zmm13           #! PC = 0x55555558e21d *)
mov table 0x96@uint8;
inline vpternlogq64 (zmm13_0, zmm18_0, zmm29_0, table);
inline vpternlogq64 (zmm13_1, zmm18_1, zmm29_1, table);
inline vpternlogq64 (zmm13_2, zmm18_2, zmm29_2, table);
inline vpternlogq64 (zmm13_3, zmm18_3, zmm29_3, table);
inline vpternlogq64 (zmm13_4, zmm18_4, zmm29_4, table);
inline vpternlogq64 (zmm13_5, zmm18_5, zmm29_5, table);
inline vpternlogq64 (zmm13_6, zmm18_6, zmm29_6, table);
inline vpternlogq64 (zmm13_7, zmm18_7, zmm29_7, table);
(* vmovdqa64 %zmm12,%zmm19                         #! PC = 0x55555558e224 *)
mov zmm19_0 zmm12_0;
mov zmm19_1 zmm12_1;
mov zmm19_2 zmm12_2;
mov zmm19_3 zmm12_3;
mov zmm19_4 zmm12_4;
mov zmm19_5 zmm12_5;
mov zmm19_6 zmm12_6;
mov zmm19_7 zmm12_7;
(* vmovdqa64 %zmm17,0x108(%rsp)                    #! EA = L0x7fffffffd5c0; PC = 0x55555558e22a *)
mov L0x7fffffffd5c0 zmm17_0;
mov L0x7fffffffd5c8 zmm17_1;
mov L0x7fffffffd5d0 zmm17_2;
mov L0x7fffffffd5d8 zmm17_3;
mov L0x7fffffffd5e0 zmm17_4;
mov L0x7fffffffd5e8 zmm17_5;
mov L0x7fffffffd5f0 zmm17_6;
mov L0x7fffffffd5f8 zmm17_7;
(* vprolq $0x1,%zmm28,%zmm17                       #! PC = 0x55555558e235 *)
rol zmm17_0 zmm28_0 0x1;
rol zmm17_1 zmm28_1 0x1;
rol zmm17_2 zmm28_2 0x1;
rol zmm17_3 zmm28_3 0x1;
rol zmm17_4 zmm28_4 0x1;
rol zmm17_5 zmm28_5 0x1;
rol zmm17_6 zmm28_6 0x1;
rol zmm17_7 zmm28_7 0x1;
(* vpternlogq $0x96,%zmm30,%zmm7,%zmm19            #! PC = 0x55555558e23c *)
mov table 0x96@uint8;
inline vpternlogq64 (zmm19_0, zmm7_0, zmm30_0, table);
inline vpternlogq64 (zmm19_1, zmm7_1, zmm30_1, table);
inline vpternlogq64 (zmm19_2, zmm7_2, zmm30_2, table);
inline vpternlogq64 (zmm19_3, zmm7_3, zmm30_3, table);
inline vpternlogq64 (zmm19_4, zmm7_4, zmm30_4, table);
inline vpternlogq64 (zmm19_5, zmm7_5, zmm30_5, table);
inline vpternlogq64 (zmm19_6, zmm7_6, zmm30_6, table);
inline vpternlogq64 (zmm19_7, zmm7_7, zmm30_7, table);
(* vpternlogq $0x96,%zmm31,%zmm27,%zmm19           #! PC = 0x55555558e243 *)
mov table 0x96@uint8;
inline vpternlogq64 (zmm19_0, zmm27_0, zmm31_0, table);
inline vpternlogq64 (zmm19_1, zmm27_1, zmm31_1, table);
inline vpternlogq64 (zmm19_2, zmm27_2, zmm31_2, table);
inline vpternlogq64 (zmm19_3, zmm27_3, zmm31_3, table);
inline vpternlogq64 (zmm19_4, zmm27_4, zmm31_4, table);
inline vpternlogq64 (zmm19_5, zmm27_5, zmm31_5, table);
inline vpternlogq64 (zmm19_6, zmm27_6, zmm31_6, table);
inline vpternlogq64 (zmm19_7, zmm27_7, zmm31_7, table);
(* vprolq $0x1,%zmm19,%zmm5                        #! PC = 0x55555558e24a *)
rol zmm5_0 zmm19_0 0x1;
rol zmm5_1 zmm19_1 0x1;
rol zmm5_2 zmm19_2 0x1;
rol zmm5_3 zmm19_3 0x1;
rol zmm5_4 zmm19_4 0x1;
rol zmm5_5 zmm19_5 0x1;
rol zmm5_6 zmm19_6 0x1;
rol zmm5_7 zmm19_7 0x1;
(* vpxord 0x108(%rsp),%zmm19,%zmm19                #! EA = L0x7fffffffd5c0; Value = 0x856fec713d19365d; PC = 0x55555558e251 *)
xor zmm19_0@uint64 zmm19_0 L0x7fffffffd5c0;
xor zmm19_1@uint64 zmm19_1 L0x7fffffffd5c8;
xor zmm19_2@uint64 zmm19_2 L0x7fffffffd5d0;
xor zmm19_3@uint64 zmm19_3 L0x7fffffffd5d8;
xor zmm19_4@uint64 zmm19_4 L0x7fffffffd5e0;
xor zmm19_5@uint64 zmm19_5 L0x7fffffffd5e8;
xor zmm19_6@uint64 zmm19_6 L0x7fffffffd5f0;
xor zmm19_7@uint64 zmm19_7 L0x7fffffffd5f8;
(* movabs $0x8000000000008002,%r10                 #! PC = 0x55555558e25c *)
mov r10 0x8000000000008002@uint64;
(* vmovdqa64 %zmm17,0xc8(%rsp)                     #! EA = L0x7fffffffd580; PC = 0x55555558e266 *)
mov L0x7fffffffd580 zmm17_0;
mov L0x7fffffffd588 zmm17_1;
mov L0x7fffffffd590 zmm17_2;
mov L0x7fffffffd598 zmm17_3;
mov L0x7fffffffd5a0 zmm17_4;
mov L0x7fffffffd5a8 zmm17_5;
mov L0x7fffffffd5b0 zmm17_6;
mov L0x7fffffffd5b8 zmm17_7;
(* vprolq $0x1,%zmm13,%zmm17                       #! PC = 0x55555558e271 *)
rol zmm17_0 zmm13_0 0x1;
rol zmm17_1 zmm13_1 0x1;
rol zmm17_2 zmm13_2 0x1;
rol zmm17_3 zmm13_3 0x1;
rol zmm17_4 zmm13_4 0x1;
rol zmm17_5 zmm13_5 0x1;
rol zmm17_6 zmm13_6 0x1;
rol zmm17_7 zmm13_7 0x1;
(* vpxord 0x148(%rsp),%zmm13,%zmm13                #! EA = L0x7fffffffd600; Value = 0x1b1e14f1c1837710; PC = 0x55555558e278 *)
xor zmm13_0@uint64 zmm13_0 L0x7fffffffd600;
xor zmm13_1@uint64 zmm13_1 L0x7fffffffd608;
xor zmm13_2@uint64 zmm13_2 L0x7fffffffd610;
xor zmm13_3@uint64 zmm13_3 L0x7fffffffd618;
xor zmm13_4@uint64 zmm13_4 L0x7fffffffd620;
xor zmm13_5@uint64 zmm13_5 L0x7fffffffd628;
xor zmm13_6@uint64 zmm13_6 L0x7fffffffd630;
xor zmm13_7@uint64 zmm13_7 L0x7fffffffd638;
(* vpxord 0xc8(%rsp),%zmm20,%zmm20                 #! EA = L0x7fffffffd580; Value = 0x3e57ba27621c0753; PC = 0x55555558e283 *)
xor zmm20_0@uint64 zmm20_0 L0x7fffffffd580;
xor zmm20_1@uint64 zmm20_1 L0x7fffffffd588;
xor zmm20_2@uint64 zmm20_2 L0x7fffffffd590;
xor zmm20_3@uint64 zmm20_3 L0x7fffffffd598;
xor zmm20_4@uint64 zmm20_4 L0x7fffffffd5a0;
xor zmm20_5@uint64 zmm20_5 L0x7fffffffd5a8;
xor zmm20_6@uint64 zmm20_6 L0x7fffffffd5b0;
xor zmm20_7@uint64 zmm20_7 L0x7fffffffd5b8;
(* vpxord %zmm30,%zmm13,%zmm30                     #! PC = 0x55555558e28e *)
xor zmm30_0@uint64 zmm13_0 zmm30_0;
xor zmm30_1@uint64 zmm13_1 zmm30_1;
xor zmm30_2@uint64 zmm13_2 zmm30_2;
xor zmm30_3@uint64 zmm13_3 zmm30_3;
xor zmm30_4@uint64 zmm13_4 zmm30_4;
xor zmm30_5@uint64 zmm13_5 zmm30_5;
xor zmm30_6@uint64 zmm13_6 zmm30_6;
xor zmm30_7@uint64 zmm13_7 zmm30_7;
(* vprorq $0x14,%zmm30,%zmm30                      #! PC = 0x55555558e294 *)
ror zmm30_0 zmm30_0 0x14;
ror zmm30_1 zmm30_1 0x14;
ror zmm30_2 zmm30_2 0x14;
ror zmm30_3 zmm30_3 0x14;
ror zmm30_4 zmm30_4 0x14;
ror zmm30_5 zmm30_5 0x14;
ror zmm30_6 zmm30_6 0x14;
ror zmm30_7 zmm30_7 0x14;
(* vpxord %zmm4,%zmm19,%zmm4                       #! PC = 0x55555558e29b *)
xor zmm4_0@uint64 zmm19_0 zmm4_0;
xor zmm4_1@uint64 zmm19_1 zmm4_1;
xor zmm4_2@uint64 zmm19_2 zmm4_2;
xor zmm4_3@uint64 zmm19_3 zmm4_3;
xor zmm4_4@uint64 zmm19_4 zmm4_4;
xor zmm4_5@uint64 zmm19_5 zmm4_5;
xor zmm4_6@uint64 zmm19_6 zmm4_6;
xor zmm4_7@uint64 zmm19_7 zmm4_7;
(* vpxord %zmm26,%zmm17,%zmm17                     #! PC = 0x55555558e2a1 *)
xor zmm17_0@uint64 zmm17_0 zmm26_0;
xor zmm17_1@uint64 zmm17_1 zmm26_1;
xor zmm17_2@uint64 zmm17_2 zmm26_2;
xor zmm17_3@uint64 zmm17_3 zmm26_3;
xor zmm17_4@uint64 zmm17_4 zmm26_4;
xor zmm17_5@uint64 zmm17_5 zmm26_5;
xor zmm17_6@uint64 zmm17_6 zmm26_6;
xor zmm17_7@uint64 zmm17_7 zmm26_7;
(* vpxord %zmm11,%zmm20,%zmm11                     #! PC = 0x55555558e2a7 *)
xor zmm11_0@uint64 zmm20_0 zmm11_0;
xor zmm11_1@uint64 zmm20_1 zmm11_1;
xor zmm11_2@uint64 zmm20_2 zmm11_2;
xor zmm11_3@uint64 zmm20_3 zmm11_3;
xor zmm11_4@uint64 zmm20_4 zmm11_4;
xor zmm11_5@uint64 zmm20_5 zmm11_5;
xor zmm11_6@uint64 zmm20_6 zmm11_6;
xor zmm11_7@uint64 zmm20_7 zmm11_7;
(* vpxord %zmm14,%zmm17,%zmm14                     #! PC = 0x55555558e2ad *)
xor zmm14_0@uint64 zmm17_0 zmm14_0;
xor zmm14_1@uint64 zmm17_1 zmm14_1;
xor zmm14_2@uint64 zmm17_2 zmm14_2;
xor zmm14_3@uint64 zmm17_3 zmm14_3;
xor zmm14_4@uint64 zmm17_4 zmm14_4;
xor zmm14_5@uint64 zmm17_5 zmm14_5;
xor zmm14_6@uint64 zmm17_6 zmm14_6;
xor zmm14_7@uint64 zmm17_7 zmm14_7;
(* vpxord %zmm28,%zmm5,%zmm5                       #! PC = 0x55555558e2b3 *)
xor zmm5_0@uint64 zmm5_0 zmm28_0;
xor zmm5_1@uint64 zmm5_1 zmm28_1;
xor zmm5_2@uint64 zmm5_2 zmm28_2;
xor zmm5_3@uint64 zmm5_3 zmm28_3;
xor zmm5_4@uint64 zmm5_4 zmm28_4;
xor zmm5_5@uint64 zmm5_5 zmm28_5;
xor zmm5_6@uint64 zmm5_6 zmm28_6;
xor zmm5_7@uint64 zmm5_7 zmm28_7;
(* vprorq $0x15,%zmm4,%zmm4                        #! PC = 0x55555558e2b9 *)
ror zmm4_0 zmm4_0 0x15;
ror zmm4_1 zmm4_1 0x15;
ror zmm4_2 zmm4_2 0x15;
ror zmm4_3 zmm4_3 0x15;
ror zmm4_4 zmm4_4 0x15;
ror zmm4_5 zmm4_5 0x15;
ror zmm4_6 zmm4_6 0x15;
ror zmm4_7 zmm4_7 0x15;
(* vprolq $0x15,%zmm11,%zmm11                      #! PC = 0x55555558e2c0 *)
rol zmm11_0 zmm11_0 0x15;
rol zmm11_1 zmm11_1 0x15;
rol zmm11_2 zmm11_2 0x15;
rol zmm11_3 zmm11_3 0x15;
rol zmm11_4 zmm11_4 0x15;
rol zmm11_5 zmm11_5 0x15;
rol zmm11_6 zmm11_6 0x15;
rol zmm11_7 zmm11_7 0x15;
(* vprolq $0xe,%zmm14,%zmm14                       #! PC = 0x55555558e2c7 *)
rol zmm14_0 zmm14_0 0xe;
rol zmm14_1 zmm14_1 0xe;
rol zmm14_2 zmm14_2 0xe;
rol zmm14_3 zmm14_3 0xe;
rol zmm14_4 zmm14_4 0xe;
rol zmm14_5 zmm14_5 0xe;
rol zmm14_6 zmm14_6 0xe;
rol zmm14_7 zmm14_7 0xe;
(* vpxord %zmm6,%zmm20,%zmm6                       #! PC = 0x55555558e2ce *)
xor zmm6_0@uint64 zmm20_0 zmm6_0;
xor zmm6_1@uint64 zmm20_1 zmm6_1;
xor zmm6_2@uint64 zmm20_2 zmm6_2;
xor zmm6_3@uint64 zmm20_3 zmm6_3;
xor zmm6_4@uint64 zmm20_4 zmm6_4;
xor zmm6_5@uint64 zmm20_5 zmm6_5;
xor zmm6_6@uint64 zmm20_6 zmm6_6;
xor zmm6_7@uint64 zmm20_7 zmm6_7;
(* vpxord %zmm10,%zmm17,%zmm10                     #! PC = 0x55555558e2d4 *)
xor zmm10_0@uint64 zmm17_0 zmm10_0;
xor zmm10_1@uint64 zmm17_1 zmm10_1;
xor zmm10_2@uint64 zmm17_2 zmm10_2;
xor zmm10_3@uint64 zmm17_3 zmm10_3;
xor zmm10_4@uint64 zmm17_4 zmm10_4;
xor zmm10_5@uint64 zmm17_5 zmm10_5;
xor zmm10_6@uint64 zmm17_6 zmm10_6;
xor zmm10_7@uint64 zmm17_7 zmm10_7;
(* vprolq $0x1c,%zmm6,%zmm6                        #! PC = 0x55555558e2da *)
rol zmm6_0 zmm6_0 0x1c;
rol zmm6_1 zmm6_1 0x1c;
rol zmm6_2 zmm6_2 0x1c;
rol zmm6_3 zmm6_3 0x1c;
rol zmm6_4 zmm6_4 0x1c;
rol zmm6_5 zmm6_5 0x1c;
rol zmm6_6 zmm6_6 0x1c;
rol zmm6_7 zmm6_7 0x1c;
(* vprolq $0x14,%zmm10,%zmm10                      #! PC = 0x55555558e2e1 *)
rol zmm10_0 zmm10_0 0x14;
rol zmm10_1 zmm10_1 0x14;
rol zmm10_2 zmm10_2 0x14;
rol zmm10_3 zmm10_3 0x14;
rol zmm10_4 zmm10_4 0x14;
rol zmm10_5 zmm10_5 0x14;
rol zmm10_6 zmm10_6 0x14;
rol zmm10_7 zmm10_7 0x14;
(* vpxord %zmm18,%zmm5,%zmm18                      #! PC = 0x55555558e2e8 *)
xor zmm18_0@uint64 zmm5_0 zmm18_0;
xor zmm18_1@uint64 zmm5_1 zmm18_1;
xor zmm18_2@uint64 zmm5_2 zmm18_2;
xor zmm18_3@uint64 zmm5_3 zmm18_3;
xor zmm18_4@uint64 zmm5_4 zmm18_4;
xor zmm18_5@uint64 zmm5_5 zmm18_5;
xor zmm18_6@uint64 zmm5_6 zmm18_6;
xor zmm18_7@uint64 zmm5_7 zmm18_7;
(* vpxord %zmm12,%zmm13,%zmm12                     #! PC = 0x55555558e2ee *)
xor zmm12_0@uint64 zmm13_0 zmm12_0;
xor zmm12_1@uint64 zmm13_1 zmm12_1;
xor zmm12_2@uint64 zmm13_2 zmm12_2;
xor zmm12_3@uint64 zmm13_3 zmm12_3;
xor zmm12_4@uint64 zmm13_4 zmm12_4;
xor zmm12_5@uint64 zmm13_5 zmm12_5;
xor zmm12_6@uint64 zmm13_6 zmm12_6;
xor zmm12_7@uint64 zmm13_7 zmm12_7;
(* vpxord %zmm15,%zmm19,%zmm15                     #! PC = 0x55555558e2f4 *)
xor zmm15_0@uint64 zmm19_0 zmm15_0;
xor zmm15_1@uint64 zmm19_1 zmm15_1;
xor zmm15_2@uint64 zmm19_2 zmm15_2;
xor zmm15_3@uint64 zmm19_3 zmm15_3;
xor zmm15_4@uint64 zmm19_4 zmm15_4;
xor zmm15_5@uint64 zmm19_5 zmm15_5;
xor zmm15_6@uint64 zmm19_6 zmm15_6;
xor zmm15_7@uint64 zmm19_7 zmm15_7;
(* vpxord %zmm27,%zmm13,%zmm27                     #! PC = 0x55555558e2fa *)
xor zmm27_0@uint64 zmm13_0 zmm27_0;
xor zmm27_1@uint64 zmm13_1 zmm27_1;
xor zmm27_2@uint64 zmm13_2 zmm27_2;
xor zmm27_3@uint64 zmm13_3 zmm27_3;
xor zmm27_4@uint64 zmm13_4 zmm27_4;
xor zmm27_5@uint64 zmm13_5 zmm27_5;
xor zmm27_6@uint64 zmm13_6 zmm27_6;
xor zmm27_7@uint64 zmm13_7 zmm27_7;
(* vpxord %zmm16,%zmm19,%zmm16                     #! PC = 0x55555558e300 *)
xor zmm16_0@uint64 zmm19_0 zmm16_0;
xor zmm16_1@uint64 zmm19_1 zmm16_1;
xor zmm16_2@uint64 zmm19_2 zmm16_2;
xor zmm16_3@uint64 zmm19_3 zmm16_3;
xor zmm16_4@uint64 zmm19_4 zmm16_4;
xor zmm16_5@uint64 zmm19_5 zmm16_5;
xor zmm16_6@uint64 zmm19_6 zmm16_6;
xor zmm16_7@uint64 zmm19_7 zmm16_7;
(* vprolq $0x1,%zmm27,%zmm27                       #! PC = 0x55555558e306 *)
rol zmm27_0 zmm27_0 0x1;
rol zmm27_1 zmm27_1 0x1;
rol zmm27_2 zmm27_2 0x1;
rol zmm27_3 zmm27_3 0x1;
rol zmm27_4 zmm27_4 0x1;
rol zmm27_5 zmm27_5 0x1;
rol zmm27_6 zmm27_6 0x1;
rol zmm27_7 zmm27_7 0x1;
(* vprolq $0x6,%zmm16,%zmm16                       #! PC = 0x55555558e30d *)
rol zmm16_0 zmm16_0 0x6;
rol zmm16_1 zmm16_1 0x6;
rol zmm16_2 zmm16_2 0x6;
rol zmm16_3 zmm16_3 0x6;
rol zmm16_4 zmm16_4 0x6;
rol zmm16_5 zmm16_5 0x6;
rol zmm16_6 zmm16_6 0x6;
rol zmm16_7 zmm16_7 0x6;
(* vprolq $0x3,%zmm18,%zmm18                       #! PC = 0x55555558e314 *)
rol zmm18_0 zmm18_0 0x3;
rol zmm18_1 zmm18_1 0x3;
rol zmm18_2 zmm18_2 0x3;
rol zmm18_3 zmm18_3 0x3;
rol zmm18_4 zmm18_4 0x3;
rol zmm18_5 zmm18_5 0x3;
rol zmm18_6 zmm18_6 0x3;
rol zmm18_7 zmm18_7 0x3;
(* vprorq $0x13,%zmm12,%zmm12                      #! PC = 0x55555558e31b *)
ror zmm12_0 zmm12_0 0x13;
ror zmm12_1 zmm12_1 0x13;
ror zmm12_2 zmm12_2 0x13;
ror zmm12_3 zmm12_3 0x13;
ror zmm12_4 zmm12_4 0x13;
ror zmm12_5 zmm12_5 0x13;
ror zmm12_6 zmm12_6 0x13;
ror zmm12_7 zmm12_7 0x13;
(* vprorq $0x3,%zmm15,%zmm15                       #! PC = 0x55555558e322 *)
ror zmm15_0 zmm15_0 0x3;
ror zmm15_1 zmm15_1 0x3;
ror zmm15_2 zmm15_2 0x3;
ror zmm15_3 zmm15_3 0x3;
ror zmm15_4 zmm15_4 0x3;
ror zmm15_5 zmm15_5 0x3;
ror zmm15_6 zmm15_6 0x3;
ror zmm15_7 zmm15_7 0x3;
(* vpxord %zmm21,%zmm5,%zmm21                      #! PC = 0x55555558e329 *)
xor zmm21_0@uint64 zmm5_0 zmm21_0;
xor zmm21_1@uint64 zmm5_1 zmm21_1;
xor zmm21_2@uint64 zmm5_2 zmm21_2;
xor zmm21_3@uint64 zmm5_3 zmm21_3;
xor zmm21_4@uint64 zmm5_4 zmm21_4;
xor zmm21_5@uint64 zmm5_5 zmm21_5;
xor zmm21_6@uint64 zmm5_6 zmm21_6;
xor zmm21_7@uint64 zmm5_7 zmm21_7;
(* vpxord %zmm3,%zmm20,%zmm3                       #! PC = 0x55555558e32f *)
xor zmm3_0@uint64 zmm20_0 zmm3_0;
xor zmm3_1@uint64 zmm20_1 zmm3_1;
xor zmm3_2@uint64 zmm20_2 zmm3_2;
xor zmm3_3@uint64 zmm20_3 zmm3_3;
xor zmm3_4@uint64 zmm20_4 zmm3_4;
xor zmm3_5@uint64 zmm20_5 zmm3_5;
xor zmm3_6@uint64 zmm20_6 zmm3_6;
xor zmm3_7@uint64 zmm20_7 zmm3_7;
(* vpxord %zmm2,%zmm17,%zmm2                       #! PC = 0x55555558e335 *)
xor zmm2_0@uint64 zmm17_0 zmm2_0;
xor zmm2_1@uint64 zmm17_1 zmm2_1;
xor zmm2_2@uint64 zmm17_2 zmm2_2;
xor zmm2_3@uint64 zmm17_3 zmm2_3;
xor zmm2_4@uint64 zmm17_4 zmm2_4;
xor zmm2_5@uint64 zmm17_5 zmm2_5;
xor zmm2_6@uint64 zmm17_6 zmm2_6;
xor zmm2_7@uint64 zmm17_7 zmm2_7;
(* vpxord %zmm29,%zmm5,%zmm29                      #! PC = 0x55555558e33b *)
xor zmm29_0@uint64 zmm5_0 zmm29_0;
xor zmm29_1@uint64 zmm5_1 zmm29_1;
xor zmm29_2@uint64 zmm5_2 zmm29_2;
xor zmm29_3@uint64 zmm5_3 zmm29_3;
xor zmm29_4@uint64 zmm5_4 zmm29_4;
xor zmm29_5@uint64 zmm5_5 zmm29_5;
xor zmm29_6@uint64 zmm5_6 zmm29_6;
xor zmm29_7@uint64 zmm5_7 zmm29_7;
(* vpxord %zmm8,%zmm17,%zmm8                       #! PC = 0x55555558e341 *)
xor zmm8_0@uint64 zmm17_0 zmm8_0;
xor zmm8_1@uint64 zmm17_1 zmm8_1;
xor zmm8_2@uint64 zmm17_2 zmm8_2;
xor zmm8_3@uint64 zmm17_3 zmm8_3;
xor zmm8_4@uint64 zmm17_4 zmm8_4;
xor zmm8_5@uint64 zmm17_5 zmm8_5;
xor zmm8_6@uint64 zmm17_6 zmm8_6;
xor zmm8_7@uint64 zmm17_7 zmm8_7;
(* vprorq $0x1c,%zmm29,%zmm29                      #! PC = 0x55555558e347 *)
ror zmm29_0 zmm29_0 0x1c;
ror zmm29_1 zmm29_1 0x1c;
ror zmm29_2 zmm29_2 0x1c;
ror zmm29_3 zmm29_3 0x1c;
ror zmm29_4 zmm29_4 0x1c;
ror zmm29_5 zmm29_5 0x1c;
ror zmm29_6 zmm29_6 0x1c;
ror zmm29_7 zmm29_7 0x1c;
(* vprolq $0x1b,%zmm8,%zmm8                        #! PC = 0x55555558e34e *)
rol zmm8_0 zmm8_0 0x1b;
rol zmm8_1 zmm8_1 0x1b;
rol zmm8_2 zmm8_2 0x1b;
rol zmm8_3 zmm8_3 0x1b;
rol zmm8_4 zmm8_4 0x1b;
rol zmm8_5 zmm8_5 0x1b;
rol zmm8_6 zmm8_6 0x1b;
rol zmm8_7 zmm8_7 0x1b;
(* vprolq $0x12,%zmm21,%zmm21                      #! PC = 0x55555558e355 *)
rol zmm21_0 zmm21_0 0x12;
rol zmm21_1 zmm21_1 0x12;
rol zmm21_2 zmm21_2 0x12;
rol zmm21_3 zmm21_3 0x12;
rol zmm21_4 zmm21_4 0x12;
rol zmm21_5 zmm21_5 0x12;
rol zmm21_6 zmm21_6 0x12;
rol zmm21_7 zmm21_7 0x12;
(* vprolq $0x19,%zmm3,%zmm3                        #! PC = 0x55555558e35c *)
rol zmm3_0 zmm3_0 0x19;
rol zmm3_1 zmm3_1 0x19;
rol zmm3_2 zmm3_2 0x19;
rol zmm3_3 zmm3_3 0x19;
rol zmm3_4 zmm3_4 0x19;
rol zmm3_5 zmm3_5 0x19;
rol zmm3_6 zmm3_6 0x19;
rol zmm3_7 zmm3_7 0x19;
(* vprolq $0x8,%zmm2,%zmm2                         #! PC = 0x55555558e363 *)
rol zmm2_0 zmm2_0 0x8;
rol zmm2_1 zmm2_1 0x8;
rol zmm2_2 zmm2_2 0x8;
rol zmm2_3 zmm2_3 0x8;
rol zmm2_4 zmm2_4 0x8;
rol zmm2_5 zmm2_5 0x8;
rol zmm2_6 zmm2_6 0x8;
rol zmm2_7 zmm2_7 0x8;
(* vpxord %zmm7,%zmm13,%zmm7                       #! PC = 0x55555558e36a *)
xor zmm7_0@uint64 zmm13_0 zmm7_0;
xor zmm7_1@uint64 zmm13_1 zmm7_1;
xor zmm7_2@uint64 zmm13_2 zmm7_2;
xor zmm7_3@uint64 zmm13_3 zmm7_3;
xor zmm7_4@uint64 zmm13_4 zmm7_4;
xor zmm7_5@uint64 zmm13_5 zmm7_5;
xor zmm7_6@uint64 zmm13_6 zmm7_6;
xor zmm7_7@uint64 zmm13_7 zmm7_7;
(* vpxord %zmm9,%zmm19,%zmm9                       #! PC = 0x55555558e370 *)
xor zmm9_0@uint64 zmm19_0 zmm9_0;
xor zmm9_1@uint64 zmm19_1 zmm9_1;
xor zmm9_2@uint64 zmm19_2 zmm9_2;
xor zmm9_3@uint64 zmm19_3 zmm9_3;
xor zmm9_4@uint64 zmm19_4 zmm9_4;
xor zmm9_5@uint64 zmm19_5 zmm9_5;
xor zmm9_6@uint64 zmm19_6 zmm9_6;
xor zmm9_7@uint64 zmm19_7 zmm9_7;
(* vpxord %zmm1,%zmm20,%zmm1                       #! PC = 0x55555558e376 *)
xor zmm1_0@uint64 zmm20_0 zmm1_0;
xor zmm1_1@uint64 zmm20_1 zmm1_1;
xor zmm1_2@uint64 zmm20_2 zmm1_2;
xor zmm1_3@uint64 zmm20_3 zmm1_3;
xor zmm1_4@uint64 zmm20_4 zmm1_4;
xor zmm1_5@uint64 zmm20_5 zmm1_5;
xor zmm1_6@uint64 zmm20_6 zmm1_6;
xor zmm1_7@uint64 zmm20_7 zmm1_7;
(* vpxord %zmm0,%zmm19,%zmm19                      #! PC = 0x55555558e37c *)
xor zmm19_0@uint64 zmm19_0 zmm0_0;
xor zmm19_1@uint64 zmm19_1 zmm0_1;
xor zmm19_2@uint64 zmm19_2 zmm0_2;
xor zmm19_3@uint64 zmm19_3 zmm0_3;
xor zmm19_4@uint64 zmm19_4 zmm0_4;
xor zmm19_5@uint64 zmm19_5 zmm0_5;
xor zmm19_6@uint64 zmm19_6 zmm0_6;
xor zmm19_7@uint64 zmm19_7 zmm0_7;
(* vpxord %zmm22,%zmm20,%zmm20                     #! PC = 0x55555558e382 *)
xor zmm20_0@uint64 zmm20_0 zmm22_0;
xor zmm20_1@uint64 zmm20_1 zmm22_1;
xor zmm20_2@uint64 zmm20_2 zmm22_2;
xor zmm20_3@uint64 zmm20_3 zmm22_3;
xor zmm20_4@uint64 zmm20_4 zmm22_4;
xor zmm20_5@uint64 zmm20_5 zmm22_5;
xor zmm20_6@uint64 zmm20_6 zmm22_6;
xor zmm20_7@uint64 zmm20_7 zmm22_7;
(* vpxord %zmm24,%zmm5,%zmm24                      #! PC = 0x55555558e388 *)
xor zmm24_0@uint64 zmm5_0 zmm24_0;
xor zmm24_1@uint64 zmm5_1 zmm24_1;
xor zmm24_2@uint64 zmm5_2 zmm24_2;
xor zmm24_3@uint64 zmm5_3 zmm24_3;
xor zmm24_4@uint64 zmm5_4 zmm24_4;
xor zmm24_5@uint64 zmm5_5 zmm24_5;
xor zmm24_6@uint64 zmm5_6 zmm24_6;
xor zmm24_7@uint64 zmm5_7 zmm24_7;
(* vprorq $0x2,%zmm19,%zmm19                       #! PC = 0x55555558e38e *)
ror zmm19_0 zmm19_0 0x2;
ror zmm19_1 zmm19_1 0x2;
ror zmm19_2 zmm19_2 0x2;
ror zmm19_3 zmm19_3 0x2;
ror zmm19_4 zmm19_4 0x2;
ror zmm19_5 zmm19_5 0x2;
ror zmm19_6 zmm19_6 0x2;
ror zmm19_7 zmm19_7 0x2;
(* vprorq $0x9,%zmm20,%zmm20                       #! PC = 0x55555558e395 *)
ror zmm20_0 zmm20_0 0x9;
ror zmm20_1 zmm20_1 0x9;
ror zmm20_2 zmm20_2 0x9;
ror zmm20_3 zmm20_3 0x9;
ror zmm20_4 zmm20_4 0x9;
ror zmm20_5 zmm20_5 0x9;
ror zmm20_6 zmm20_6 0x9;
ror zmm20_7 zmm20_7 0x9;
(* vprolq $0xa,%zmm7,%zmm7                         #! PC = 0x55555558e39c *)
rol zmm7_0 zmm7_0 0xa;
rol zmm7_1 zmm7_1 0xa;
rol zmm7_2 zmm7_2 0xa;
rol zmm7_3 zmm7_3 0xa;
rol zmm7_4 zmm7_4 0xa;
rol zmm7_5 zmm7_5 0xa;
rol zmm7_6 zmm7_6 0xa;
rol zmm7_7 zmm7_7 0xa;
(* vprolq $0xf,%zmm9,%zmm9                         #! PC = 0x55555558e3a3 *)
rol zmm9_0 zmm9_0 0xf;
rol zmm9_1 zmm9_1 0xf;
rol zmm9_2 zmm9_2 0xf;
rol zmm9_3 zmm9_3 0xf;
rol zmm9_4 zmm9_4 0xf;
rol zmm9_5 zmm9_5 0xf;
rol zmm9_6 zmm9_6 0xf;
rol zmm9_7 zmm9_7 0xf;
(* vprorq $0x8,%zmm1,%zmm1                         #! PC = 0x55555558e3aa *)
ror zmm1_0 zmm1_0 0x8;
ror zmm1_1 zmm1_1 0x8;
ror zmm1_2 zmm1_2 0x8;
ror zmm1_3 zmm1_3 0x8;
ror zmm1_4 zmm1_4 0x8;
ror zmm1_5 zmm1_5 0x8;
ror zmm1_6 zmm1_6 0x8;
ror zmm1_7 zmm1_7 0x8;
(* vpxord %zmm23,%zmm5,%zmm5                       #! PC = 0x55555558e3b1 *)
xor zmm5_0@uint64 zmm5_0 zmm23_0;
xor zmm5_1@uint64 zmm5_1 zmm23_1;
xor zmm5_2@uint64 zmm5_2 zmm23_2;
xor zmm5_3@uint64 zmm5_3 zmm23_3;
xor zmm5_4@uint64 zmm5_4 zmm23_4;
xor zmm5_5@uint64 zmm5_5 zmm23_5;
xor zmm5_6@uint64 zmm5_6 zmm23_6;
xor zmm5_7@uint64 zmm5_7 zmm23_7;
(* vpxord %zmm31,%zmm13,%zmm13                     #! PC = 0x55555558e3b7 *)
xor zmm13_0@uint64 zmm13_0 zmm31_0;
xor zmm13_1@uint64 zmm13_1 zmm31_1;
xor zmm13_2@uint64 zmm13_2 zmm31_2;
xor zmm13_3@uint64 zmm13_3 zmm31_3;
xor zmm13_4@uint64 zmm13_4 zmm31_4;
xor zmm13_5@uint64 zmm13_5 zmm31_5;
xor zmm13_6@uint64 zmm13_6 zmm31_6;
xor zmm13_7@uint64 zmm13_7 zmm31_7;
(* vpxord %zmm25,%zmm17,%zmm17                     #! PC = 0x55555558e3bd *)
xor zmm17_0@uint64 zmm17_0 zmm25_0;
xor zmm17_1@uint64 zmm17_1 zmm25_1;
xor zmm17_2@uint64 zmm17_2 zmm25_2;
xor zmm17_3@uint64 zmm17_3 zmm25_3;
xor zmm17_4@uint64 zmm17_4 zmm25_4;
xor zmm17_5@uint64 zmm17_5 zmm25_5;
xor zmm17_6@uint64 zmm17_6 zmm25_6;
xor zmm17_7@uint64 zmm17_7 zmm25_7;
(* vprorq $0x17,%zmm5,%zmm5                        #! PC = 0x55555558e3c3 *)
ror zmm5_0 zmm5_0 0x17;
ror zmm5_1 zmm5_1 0x17;
ror zmm5_2 zmm5_2 0x17;
ror zmm5_3 zmm5_3 0x17;
ror zmm5_4 zmm5_4 0x17;
ror zmm5_5 zmm5_5 0x17;
ror zmm5_6 zmm5_6 0x17;
ror zmm5_7 zmm5_7 0x17;
(* vprolq $0x2,%zmm13,%zmm13                       #! PC = 0x55555558e3ca *)
rol zmm13_0 zmm13_0 0x2;
rol zmm13_1 zmm13_1 0x2;
rol zmm13_2 zmm13_2 0x2;
rol zmm13_3 zmm13_3 0x2;
rol zmm13_4 zmm13_4 0x2;
rol zmm13_5 zmm13_5 0x2;
rol zmm13_6 zmm13_6 0x2;
rol zmm13_7 zmm13_7 0x2;
(* vprorq $0x19,%zmm17,%zmm17                      #! PC = 0x55555558e3d1 *)
ror zmm17_0 zmm17_0 0x19;
ror zmm17_1 zmm17_1 0x19;
ror zmm17_2 zmm17_2 0x19;
ror zmm17_3 zmm17_3 0x19;
ror zmm17_4 zmm17_4 0x19;
ror zmm17_5 zmm17_5 0x19;
ror zmm17_6 zmm17_6 0x19;
ror zmm17_7 zmm17_7 0x19;
(* vmovdqa64 %zmm24,%zmm28                         #! PC = 0x55555558e3d8 *)
mov zmm28_0 zmm24_0;
mov zmm28_1 zmm24_1;
mov zmm28_2 zmm24_2;
mov zmm28_3 zmm24_3;
mov zmm28_4 zmm24_4;
mov zmm28_5 zmm24_5;
mov zmm28_6 zmm24_6;
mov zmm28_7 zmm24_7;
(* vmovdqa64 %zmm30,%zmm26                         #! PC = 0x55555558e3de *)
mov zmm26_0 zmm30_0;
mov zmm26_1 zmm30_1;
mov zmm26_2 zmm30_2;
mov zmm26_3 zmm30_3;
mov zmm26_4 zmm30_4;
mov zmm26_5 zmm30_5;
mov zmm26_6 zmm30_6;
mov zmm26_7 zmm30_7;
(* vpternlogq $0xd2,%zmm4,%zmm30,%zmm28            #! PC = 0x55555558e3e4 *)
mov table 0xd2@uint8;
inline vpternlogq64 (zmm28_0, zmm30_0, zmm4_0, table);
inline vpternlogq64 (zmm28_1, zmm30_1, zmm4_1, table);
inline vpternlogq64 (zmm28_2, zmm30_2, zmm4_2, table);
inline vpternlogq64 (zmm28_3, zmm30_3, zmm4_3, table);
inline vpternlogq64 (zmm28_4, zmm30_4, zmm4_4, table);
inline vpternlogq64 (zmm28_5, zmm30_5, zmm4_5, table);
inline vpternlogq64 (zmm28_6, zmm30_6, zmm4_6, table);
inline vpternlogq64 (zmm28_7, zmm30_7, zmm4_7, table);
(* vpternlogq $0xd2,%zmm11,%zmm4,%zmm26            #! PC = 0x55555558e3eb *)
mov table 0xd2@uint8;
inline vpternlogq64 (zmm26_0, zmm4_0, zmm11_0, table);
inline vpternlogq64 (zmm26_1, zmm4_1, zmm11_1, table);
inline vpternlogq64 (zmm26_2, zmm4_2, zmm11_2, table);
inline vpternlogq64 (zmm26_3, zmm4_3, zmm11_3, table);
inline vpternlogq64 (zmm26_4, zmm4_4, zmm11_4, table);
inline vpternlogq64 (zmm26_5, zmm4_5, zmm11_5, table);
inline vpternlogq64 (zmm26_6, zmm4_6, zmm11_6, table);
inline vpternlogq64 (zmm26_7, zmm4_7, zmm11_7, table);
(* vpternlogq $0xd2,%zmm14,%zmm11,%zmm4            #! PC = 0x55555558e3f2 *)
mov table 0xd2@uint8;
inline vpternlogq64 (zmm4_0, zmm11_0, zmm14_0, table);
inline vpternlogq64 (zmm4_1, zmm11_1, zmm14_1, table);
inline vpternlogq64 (zmm4_2, zmm11_2, zmm14_2, table);
inline vpternlogq64 (zmm4_3, zmm11_3, zmm14_3, table);
inline vpternlogq64 (zmm4_4, zmm11_4, zmm14_4, table);
inline vpternlogq64 (zmm4_5, zmm11_5, zmm14_5, table);
inline vpternlogq64 (zmm4_6, zmm11_6, zmm14_6, table);
inline vpternlogq64 (zmm4_7, zmm11_7, zmm14_7, table);
(* vpternlogq $0xd2,%zmm24,%zmm14,%zmm11           #! PC = 0x55555558e3f9 *)
mov table 0xd2@uint8;
inline vpternlogq64 (zmm11_0, zmm14_0, zmm24_0, table);
inline vpternlogq64 (zmm11_1, zmm14_1, zmm24_1, table);
inline vpternlogq64 (zmm11_2, zmm14_2, zmm24_2, table);
inline vpternlogq64 (zmm11_3, zmm14_3, zmm24_3, table);
inline vpternlogq64 (zmm11_4, zmm14_4, zmm24_4, table);
inline vpternlogq64 (zmm11_5, zmm14_5, zmm24_5, table);
inline vpternlogq64 (zmm11_6, zmm14_6, zmm24_6, table);
inline vpternlogq64 (zmm11_7, zmm14_7, zmm24_7, table);
(* vpternlogq $0xd2,%zmm30,%zmm24,%zmm14           #! PC = 0x55555558e400 *)
mov table 0xd2@uint8;
inline vpternlogq64 (zmm14_0, zmm24_0, zmm30_0, table);
inline vpternlogq64 (zmm14_1, zmm24_1, zmm30_1, table);
inline vpternlogq64 (zmm14_2, zmm24_2, zmm30_2, table);
inline vpternlogq64 (zmm14_3, zmm24_3, zmm30_3, table);
inline vpternlogq64 (zmm14_4, zmm24_4, zmm30_4, table);
inline vpternlogq64 (zmm14_5, zmm24_5, zmm30_5, table);
inline vpternlogq64 (zmm14_6, zmm24_6, zmm30_6, table);
inline vpternlogq64 (zmm14_7, zmm24_7, zmm30_7, table);
(* vpbroadcastq %rcx,%zmm24                        #! PC = 0x55555558e407 *)
mov zmm24_0 rcx;
mov zmm24_1 rcx;
mov zmm24_2 rcx;
mov zmm24_3 rcx;
mov zmm24_4 rcx;
mov zmm24_5 rcx;
mov zmm24_6 rcx;
mov zmm24_7 rcx;
(* vpxord %zmm24,%zmm28,%zmm24                     #! PC = 0x55555558e40d *)
xor zmm24_0@uint64 zmm28_0 zmm24_0;
xor zmm24_1@uint64 zmm28_1 zmm24_1;
xor zmm24_2@uint64 zmm28_2 zmm24_2;
xor zmm24_3@uint64 zmm28_3 zmm24_3;
xor zmm24_4@uint64 zmm28_4 zmm24_4;
xor zmm24_5@uint64 zmm28_5 zmm24_5;
xor zmm24_6@uint64 zmm28_6 zmm24_6;
xor zmm24_7@uint64 zmm28_7 zmm24_7;
(* vmovdqa64 %zmm10,%zmm30                         #! PC = 0x55555558e413 *)
mov zmm30_0 zmm10_0;
mov zmm30_1 zmm10_1;
mov zmm30_2 zmm10_2;
mov zmm30_3 zmm10_3;
mov zmm30_4 zmm10_4;
mov zmm30_5 zmm10_5;
mov zmm30_6 zmm10_6;
mov zmm30_7 zmm10_7;
(* vmovdqa64 %zmm6,%zmm28                          #! PC = 0x55555558e419 *)
mov zmm28_0 zmm6_0;
mov zmm28_1 zmm6_1;
mov zmm28_2 zmm6_2;
mov zmm28_3 zmm6_3;
mov zmm28_4 zmm6_4;
mov zmm28_5 zmm6_5;
mov zmm28_6 zmm6_6;
mov zmm28_7 zmm6_7;
(* vpternlogq $0xd2,%zmm18,%zmm10,%zmm28           #! PC = 0x55555558e41f *)
mov table 0xd2@uint8;
inline vpternlogq64 (zmm28_0, zmm10_0, zmm18_0, table);
inline vpternlogq64 (zmm28_1, zmm10_1, zmm18_1, table);
inline vpternlogq64 (zmm28_2, zmm10_2, zmm18_2, table);
inline vpternlogq64 (zmm28_3, zmm10_3, zmm18_3, table);
inline vpternlogq64 (zmm28_4, zmm10_4, zmm18_4, table);
inline vpternlogq64 (zmm28_5, zmm10_5, zmm18_5, table);
inline vpternlogq64 (zmm28_6, zmm10_6, zmm18_6, table);
inline vpternlogq64 (zmm28_7, zmm10_7, zmm18_7, table);
(* vpternlogq $0xd2,%zmm12,%zmm18,%zmm30           #! PC = 0x55555558e426 *)
mov table 0xd2@uint8;
inline vpternlogq64 (zmm30_0, zmm18_0, zmm12_0, table);
inline vpternlogq64 (zmm30_1, zmm18_1, zmm12_1, table);
inline vpternlogq64 (zmm30_2, zmm18_2, zmm12_2, table);
inline vpternlogq64 (zmm30_3, zmm18_3, zmm12_3, table);
inline vpternlogq64 (zmm30_4, zmm18_4, zmm12_4, table);
inline vpternlogq64 (zmm30_5, zmm18_5, zmm12_5, table);
inline vpternlogq64 (zmm30_6, zmm18_6, zmm12_6, table);
inline vpternlogq64 (zmm30_7, zmm18_7, zmm12_7, table);
(* vpternlogq $0xd2,%zmm15,%zmm12,%zmm18           #! PC = 0x55555558e42d *)
mov table 0xd2@uint8;
inline vpternlogq64 (zmm18_0, zmm12_0, zmm15_0, table);
inline vpternlogq64 (zmm18_1, zmm12_1, zmm15_1, table);
inline vpternlogq64 (zmm18_2, zmm12_2, zmm15_2, table);
inline vpternlogq64 (zmm18_3, zmm12_3, zmm15_3, table);
inline vpternlogq64 (zmm18_4, zmm12_4, zmm15_4, table);
inline vpternlogq64 (zmm18_5, zmm12_5, zmm15_5, table);
inline vpternlogq64 (zmm18_6, zmm12_6, zmm15_6, table);
inline vpternlogq64 (zmm18_7, zmm12_7, zmm15_7, table);
(* vpternlogq $0xd2,%zmm6,%zmm15,%zmm12            #! PC = 0x55555558e434 *)
mov table 0xd2@uint8;
inline vpternlogq64 (zmm12_0, zmm15_0, zmm6_0, table);
inline vpternlogq64 (zmm12_1, zmm15_1, zmm6_1, table);
inline vpternlogq64 (zmm12_2, zmm15_2, zmm6_2, table);
inline vpternlogq64 (zmm12_3, zmm15_3, zmm6_3, table);
inline vpternlogq64 (zmm12_4, zmm15_4, zmm6_4, table);
inline vpternlogq64 (zmm12_5, zmm15_5, zmm6_5, table);
inline vpternlogq64 (zmm12_6, zmm15_6, zmm6_6, table);
inline vpternlogq64 (zmm12_7, zmm15_7, zmm6_7, table);
(* vpternlogq $0xd2,%zmm10,%zmm6,%zmm15            #! PC = 0x55555558e43b *)
mov table 0xd2@uint8;
inline vpternlogq64 (zmm15_0, zmm6_0, zmm10_0, table);
inline vpternlogq64 (zmm15_1, zmm6_1, zmm10_1, table);
inline vpternlogq64 (zmm15_2, zmm6_2, zmm10_2, table);
inline vpternlogq64 (zmm15_3, zmm6_3, zmm10_3, table);
inline vpternlogq64 (zmm15_4, zmm6_4, zmm10_4, table);
inline vpternlogq64 (zmm15_5, zmm6_5, zmm10_5, table);
inline vpternlogq64 (zmm15_6, zmm6_6, zmm10_6, table);
inline vpternlogq64 (zmm15_7, zmm6_7, zmm10_7, table);
(* vmovdqa64 %zmm27,%zmm10                         #! PC = 0x55555558e442 *)
mov zmm10_0 zmm27_0;
mov zmm10_1 zmm27_1;
mov zmm10_2 zmm27_2;
mov zmm10_3 zmm27_3;
mov zmm10_4 zmm27_4;
mov zmm10_5 zmm27_5;
mov zmm10_6 zmm27_6;
mov zmm10_7 zmm27_7;
(* vmovdqa64 %zmm16,%zmm6                          #! PC = 0x55555558e448 *)
mov zmm6_0 zmm16_0;
mov zmm6_1 zmm16_1;
mov zmm6_2 zmm16_2;
mov zmm6_3 zmm16_3;
mov zmm6_4 zmm16_4;
mov zmm6_5 zmm16_5;
mov zmm6_6 zmm16_6;
mov zmm6_7 zmm16_7;
(* vpternlogq $0xd2,%zmm3,%zmm16,%zmm10            #! PC = 0x55555558e44e *)
mov table 0xd2@uint8;
inline vpternlogq64 (zmm10_0, zmm16_0, zmm3_0, table);
inline vpternlogq64 (zmm10_1, zmm16_1, zmm3_1, table);
inline vpternlogq64 (zmm10_2, zmm16_2, zmm3_2, table);
inline vpternlogq64 (zmm10_3, zmm16_3, zmm3_3, table);
inline vpternlogq64 (zmm10_4, zmm16_4, zmm3_4, table);
inline vpternlogq64 (zmm10_5, zmm16_5, zmm3_5, table);
inline vpternlogq64 (zmm10_6, zmm16_6, zmm3_6, table);
inline vpternlogq64 (zmm10_7, zmm16_7, zmm3_7, table);
(* vpternlogq $0xd2,%zmm2,%zmm3,%zmm6              #! PC = 0x55555558e455 *)
mov table 0xd2@uint8;
inline vpternlogq64 (zmm6_0, zmm3_0, zmm2_0, table);
inline vpternlogq64 (zmm6_1, zmm3_1, zmm2_1, table);
inline vpternlogq64 (zmm6_2, zmm3_2, zmm2_2, table);
inline vpternlogq64 (zmm6_3, zmm3_3, zmm2_3, table);
inline vpternlogq64 (zmm6_4, zmm3_4, zmm2_4, table);
inline vpternlogq64 (zmm6_5, zmm3_5, zmm2_5, table);
inline vpternlogq64 (zmm6_6, zmm3_6, zmm2_6, table);
inline vpternlogq64 (zmm6_7, zmm3_7, zmm2_7, table);
(* vpternlogq $0xd2,%zmm21,%zmm2,%zmm3             #! PC = 0x55555558e45c *)
mov table 0xd2@uint8;
inline vpternlogq64 (zmm3_0, zmm2_0, zmm21_0, table);
inline vpternlogq64 (zmm3_1, zmm2_1, zmm21_1, table);
inline vpternlogq64 (zmm3_2, zmm2_2, zmm21_2, table);
inline vpternlogq64 (zmm3_3, zmm2_3, zmm21_3, table);
inline vpternlogq64 (zmm3_4, zmm2_4, zmm21_4, table);
inline vpternlogq64 (zmm3_5, zmm2_5, zmm21_5, table);
inline vpternlogq64 (zmm3_6, zmm2_6, zmm21_6, table);
inline vpternlogq64 (zmm3_7, zmm2_7, zmm21_7, table);
(* vpternlogq $0xd2,%zmm27,%zmm21,%zmm2            #! PC = 0x55555558e463 *)
mov table 0xd2@uint8;
inline vpternlogq64 (zmm2_0, zmm21_0, zmm27_0, table);
inline vpternlogq64 (zmm2_1, zmm21_1, zmm27_1, table);
inline vpternlogq64 (zmm2_2, zmm21_2, zmm27_2, table);
inline vpternlogq64 (zmm2_3, zmm21_3, zmm27_3, table);
inline vpternlogq64 (zmm2_4, zmm21_4, zmm27_4, table);
inline vpternlogq64 (zmm2_5, zmm21_5, zmm27_5, table);
inline vpternlogq64 (zmm2_6, zmm21_6, zmm27_6, table);
inline vpternlogq64 (zmm2_7, zmm21_7, zmm27_7, table);
(* vpternlogq $0xd2,%zmm16,%zmm27,%zmm21           #! PC = 0x55555558e46a *)
mov table 0xd2@uint8;
inline vpternlogq64 (zmm21_0, zmm27_0, zmm16_0, table);
inline vpternlogq64 (zmm21_1, zmm27_1, zmm16_1, table);
inline vpternlogq64 (zmm21_2, zmm27_2, zmm16_2, table);
inline vpternlogq64 (zmm21_3, zmm27_3, zmm16_3, table);
inline vpternlogq64 (zmm21_4, zmm27_4, zmm16_4, table);
inline vpternlogq64 (zmm21_5, zmm27_5, zmm16_5, table);
inline vpternlogq64 (zmm21_6, zmm27_6, zmm16_6, table);
inline vpternlogq64 (zmm21_7, zmm27_7, zmm16_7, table);
(* vmovdqa64 %zmm8,%zmm27                          #! PC = 0x55555558e471 *)
mov zmm27_0 zmm8_0;
mov zmm27_1 zmm8_1;
mov zmm27_2 zmm8_2;
mov zmm27_3 zmm8_3;
mov zmm27_4 zmm8_4;
mov zmm27_5 zmm8_5;
mov zmm27_6 zmm8_6;
mov zmm27_7 zmm8_7;
(* vmovdqa64 %zmm29,%zmm16                         #! PC = 0x55555558e477 *)
mov zmm16_0 zmm29_0;
mov zmm16_1 zmm29_1;
mov zmm16_2 zmm29_2;
mov zmm16_3 zmm29_3;
mov zmm16_4 zmm29_4;
mov zmm16_5 zmm29_5;
mov zmm16_6 zmm29_6;
mov zmm16_7 zmm29_7;
(* vpternlogq $0xd2,%zmm7,%zmm29,%zmm27            #! PC = 0x55555558e47d *)
mov table 0xd2@uint8;
inline vpternlogq64 (zmm27_0, zmm29_0, zmm7_0, table);
inline vpternlogq64 (zmm27_1, zmm29_1, zmm7_1, table);
inline vpternlogq64 (zmm27_2, zmm29_2, zmm7_2, table);
inline vpternlogq64 (zmm27_3, zmm29_3, zmm7_3, table);
inline vpternlogq64 (zmm27_4, zmm29_4, zmm7_4, table);
inline vpternlogq64 (zmm27_5, zmm29_5, zmm7_5, table);
inline vpternlogq64 (zmm27_6, zmm29_6, zmm7_6, table);
inline vpternlogq64 (zmm27_7, zmm29_7, zmm7_7, table);
(* vpternlogq $0xd2,%zmm9,%zmm7,%zmm16             #! PC = 0x55555558e484 *)
mov table 0xd2@uint8;
inline vpternlogq64 (zmm16_0, zmm7_0, zmm9_0, table);
inline vpternlogq64 (zmm16_1, zmm7_1, zmm9_1, table);
inline vpternlogq64 (zmm16_2, zmm7_2, zmm9_2, table);
inline vpternlogq64 (zmm16_3, zmm7_3, zmm9_3, table);
inline vpternlogq64 (zmm16_4, zmm7_4, zmm9_4, table);
inline vpternlogq64 (zmm16_5, zmm7_5, zmm9_5, table);
inline vpternlogq64 (zmm16_6, zmm7_6, zmm9_6, table);
inline vpternlogq64 (zmm16_7, zmm7_7, zmm9_7, table);
(* vmovdqa64 %zmm19,%zmm23                         #! PC = 0x55555558e48b *)
mov zmm23_0 zmm19_0;
mov zmm23_1 zmm19_1;
mov zmm23_2 zmm19_2;
mov zmm23_3 zmm19_3;
mov zmm23_4 zmm19_4;
mov zmm23_5 zmm19_5;
mov zmm23_6 zmm19_6;
mov zmm23_7 zmm19_7;
(* vpternlogq $0xd2,%zmm1,%zmm9,%zmm7              #! PC = 0x55555558e491 *)
mov table 0xd2@uint8;
inline vpternlogq64 (zmm7_0, zmm9_0, zmm1_0, table);
inline vpternlogq64 (zmm7_1, zmm9_1, zmm1_1, table);
inline vpternlogq64 (zmm7_2, zmm9_2, zmm1_2, table);
inline vpternlogq64 (zmm7_3, zmm9_3, zmm1_3, table);
inline vpternlogq64 (zmm7_4, zmm9_4, zmm1_4, table);
inline vpternlogq64 (zmm7_5, zmm9_5, zmm1_5, table);
inline vpternlogq64 (zmm7_6, zmm9_6, zmm1_6, table);
inline vpternlogq64 (zmm7_7, zmm9_7, zmm1_7, table);
(* vpternlogq $0xd2,%zmm8,%zmm1,%zmm9              #! PC = 0x55555558e498 *)
mov table 0xd2@uint8;
inline vpternlogq64 (zmm9_0, zmm1_0, zmm8_0, table);
inline vpternlogq64 (zmm9_1, zmm1_1, zmm8_1, table);
inline vpternlogq64 (zmm9_2, zmm1_2, zmm8_2, table);
inline vpternlogq64 (zmm9_3, zmm1_3, zmm8_3, table);
inline vpternlogq64 (zmm9_4, zmm1_4, zmm8_4, table);
inline vpternlogq64 (zmm9_5, zmm1_5, zmm8_5, table);
inline vpternlogq64 (zmm9_6, zmm1_6, zmm8_6, table);
inline vpternlogq64 (zmm9_7, zmm1_7, zmm8_7, table);
(* vpternlogq $0xd2,%zmm29,%zmm8,%zmm1             #! PC = 0x55555558e49f *)
mov table 0xd2@uint8;
inline vpternlogq64 (zmm1_0, zmm8_0, zmm29_0, table);
inline vpternlogq64 (zmm1_1, zmm8_1, zmm29_1, table);
inline vpternlogq64 (zmm1_2, zmm8_2, zmm29_2, table);
inline vpternlogq64 (zmm1_3, zmm8_3, zmm29_3, table);
inline vpternlogq64 (zmm1_4, zmm8_4, zmm29_4, table);
inline vpternlogq64 (zmm1_5, zmm8_5, zmm29_5, table);
inline vpternlogq64 (zmm1_6, zmm8_6, zmm29_6, table);
inline vpternlogq64 (zmm1_7, zmm8_7, zmm29_7, table);
(* vmovdqa64 %zmm20,%zmm29                         #! PC = 0x55555558e4a6 *)
mov zmm29_0 zmm20_0;
mov zmm29_1 zmm20_1;
mov zmm29_2 zmm20_2;
mov zmm29_3 zmm20_3;
mov zmm29_4 zmm20_4;
mov zmm29_5 zmm20_5;
mov zmm29_6 zmm20_6;
mov zmm29_7 zmm20_7;
(* vpternlogq $0xd2,%zmm5,%zmm17,%zmm29            #! PC = 0x55555558e4ac *)
mov table 0xd2@uint8;
inline vpternlogq64 (zmm29_0, zmm17_0, zmm5_0, table);
inline vpternlogq64 (zmm29_1, zmm17_1, zmm5_1, table);
inline vpternlogq64 (zmm29_2, zmm17_2, zmm5_2, table);
inline vpternlogq64 (zmm29_3, zmm17_3, zmm5_3, table);
inline vpternlogq64 (zmm29_4, zmm17_4, zmm5_4, table);
inline vpternlogq64 (zmm29_5, zmm17_5, zmm5_5, table);
inline vpternlogq64 (zmm29_6, zmm17_6, zmm5_6, table);
inline vpternlogq64 (zmm29_7, zmm17_7, zmm5_7, table);
(* vpternlogq $0xd2,%zmm17,%zmm20,%zmm23           #! PC = 0x55555558e4b3 *)
mov table 0xd2@uint8;
inline vpternlogq64 (zmm23_0, zmm20_0, zmm17_0, table);
inline vpternlogq64 (zmm23_1, zmm20_1, zmm17_1, table);
inline vpternlogq64 (zmm23_2, zmm20_2, zmm17_2, table);
inline vpternlogq64 (zmm23_3, zmm20_3, zmm17_3, table);
inline vpternlogq64 (zmm23_4, zmm20_4, zmm17_4, table);
inline vpternlogq64 (zmm23_5, zmm20_5, zmm17_5, table);
inline vpternlogq64 (zmm23_6, zmm20_6, zmm17_6, table);
inline vpternlogq64 (zmm23_7, zmm20_7, zmm17_7, table);
(* vmovdqa64 %zmm3,%zmm22                          #! PC = 0x55555558e4ba *)
mov zmm22_0 zmm3_0;
mov zmm22_1 zmm3_1;
mov zmm22_2 zmm3_2;
mov zmm22_3 zmm3_3;
mov zmm22_4 zmm3_4;
mov zmm22_5 zmm3_5;
mov zmm22_6 zmm3_6;
mov zmm22_7 zmm3_7;
(* vpternlogq $0xd2,%zmm13,%zmm5,%zmm17            #! PC = 0x55555558e4c0 *)
mov table 0xd2@uint8;
inline vpternlogq64 (zmm17_0, zmm5_0, zmm13_0, table);
inline vpternlogq64 (zmm17_1, zmm5_1, zmm13_1, table);
inline vpternlogq64 (zmm17_2, zmm5_2, zmm13_2, table);
inline vpternlogq64 (zmm17_3, zmm5_3, zmm13_3, table);
inline vpternlogq64 (zmm17_4, zmm5_4, zmm13_4, table);
inline vpternlogq64 (zmm17_5, zmm5_5, zmm13_5, table);
inline vpternlogq64 (zmm17_6, zmm5_6, zmm13_6, table);
inline vpternlogq64 (zmm17_7, zmm5_7, zmm13_7, table);
(* vpternlogq $0x96,%zmm18,%zmm17,%zmm22           #! PC = 0x55555558e4c7 *)
mov table 0x96@uint8;
inline vpternlogq64 (zmm22_0, zmm17_0, zmm18_0, table);
inline vpternlogq64 (zmm22_1, zmm17_1, zmm18_1, table);
inline vpternlogq64 (zmm22_2, zmm17_2, zmm18_2, table);
inline vpternlogq64 (zmm22_3, zmm17_3, zmm18_3, table);
inline vpternlogq64 (zmm22_4, zmm17_4, zmm18_4, table);
inline vpternlogq64 (zmm22_5, zmm17_5, zmm18_5, table);
inline vpternlogq64 (zmm22_6, zmm17_6, zmm18_6, table);
inline vpternlogq64 (zmm22_7, zmm17_7, zmm18_7, table);
(* vpternlogq $0x96,%zmm4,%zmm7,%zmm22             #! PC = 0x55555558e4ce *)
mov table 0x96@uint8;
inline vpternlogq64 (zmm22_0, zmm7_0, zmm4_0, table);
inline vpternlogq64 (zmm22_1, zmm7_1, zmm4_1, table);
inline vpternlogq64 (zmm22_2, zmm7_2, zmm4_2, table);
inline vpternlogq64 (zmm22_3, zmm7_3, zmm4_3, table);
inline vpternlogq64 (zmm22_4, zmm7_4, zmm4_4, table);
inline vpternlogq64 (zmm22_5, zmm7_5, zmm4_5, table);
inline vpternlogq64 (zmm22_6, zmm7_6, zmm4_6, table);
inline vpternlogq64 (zmm22_7, zmm7_7, zmm4_7, table);
(* vpternlogq $0xd2,%zmm19,%zmm13,%zmm5            #! PC = 0x55555558e4d5 *)
mov table 0xd2@uint8;
inline vpternlogq64 (zmm5_0, zmm13_0, zmm19_0, table);
inline vpternlogq64 (zmm5_1, zmm13_1, zmm19_1, table);
inline vpternlogq64 (zmm5_2, zmm13_2, zmm19_2, table);
inline vpternlogq64 (zmm5_3, zmm13_3, zmm19_3, table);
inline vpternlogq64 (zmm5_4, zmm13_4, zmm19_4, table);
inline vpternlogq64 (zmm5_5, zmm13_5, zmm19_5, table);
inline vpternlogq64 (zmm5_6, zmm13_6, zmm19_6, table);
inline vpternlogq64 (zmm5_7, zmm13_7, zmm19_7, table);
(* vpternlogq $0xd2,%zmm20,%zmm19,%zmm13           #! PC = 0x55555558e4dc *)
mov table 0xd2@uint8;
inline vpternlogq64 (zmm13_0, zmm19_0, zmm20_0, table);
inline vpternlogq64 (zmm13_1, zmm19_1, zmm20_1, table);
inline vpternlogq64 (zmm13_2, zmm19_2, zmm20_2, table);
inline vpternlogq64 (zmm13_3, zmm19_3, zmm20_3, table);
inline vpternlogq64 (zmm13_4, zmm19_4, zmm20_4, table);
inline vpternlogq64 (zmm13_5, zmm19_5, zmm20_5, table);
inline vpternlogq64 (zmm13_6, zmm19_6, zmm20_6, table);
inline vpternlogq64 (zmm13_7, zmm19_7, zmm20_7, table);
(* vprolq $0x1,%zmm22,%zmm19                       #! PC = 0x55555558e4e3 *)
rol zmm19_0 zmm22_0 0x1;
rol zmm19_1 zmm22_1 0x1;
rol zmm19_2 zmm22_2 0x1;
rol zmm19_3 zmm22_3 0x1;
rol zmm19_4 zmm22_4 0x1;
rol zmm19_5 zmm22_5 0x1;
rol zmm19_6 zmm22_6 0x1;
rol zmm19_7 zmm22_7 0x1;
(* vmovdqa64 %zmm9,%zmm25                          #! PC = 0x55555558e4ea *)
mov zmm25_0 zmm9_0;
mov zmm25_1 zmm9_1;
mov zmm25_2 zmm9_2;
mov zmm25_3 zmm9_3;
mov zmm25_4 zmm9_4;
mov zmm25_5 zmm9_5;
mov zmm25_6 zmm9_6;
mov zmm25_7 zmm9_7;
(* vpternlogq $0x96,%zmm2,%zmm11,%zmm25            #! PC = 0x55555558e4f0 *)
mov table 0x96@uint8;
inline vpternlogq64 (zmm25_0, zmm11_0, zmm2_0, table);
inline vpternlogq64 (zmm25_1, zmm11_1, zmm2_1, table);
inline vpternlogq64 (zmm25_2, zmm11_2, zmm2_2, table);
inline vpternlogq64 (zmm25_3, zmm11_3, zmm2_3, table);
inline vpternlogq64 (zmm25_4, zmm11_4, zmm2_4, table);
inline vpternlogq64 (zmm25_5, zmm11_5, zmm2_5, table);
inline vpternlogq64 (zmm25_6, zmm11_6, zmm2_6, table);
inline vpternlogq64 (zmm25_7, zmm11_7, zmm2_7, table);
(* vpternlogq $0x96,%zmm12,%zmm5,%zmm25            #! PC = 0x55555558e4f7 *)
mov table 0x96@uint8;
inline vpternlogq64 (zmm25_0, zmm5_0, zmm12_0, table);
inline vpternlogq64 (zmm25_1, zmm5_1, zmm12_1, table);
inline vpternlogq64 (zmm25_2, zmm5_2, zmm12_2, table);
inline vpternlogq64 (zmm25_3, zmm5_3, zmm12_3, table);
inline vpternlogq64 (zmm25_4, zmm5_4, zmm12_4, table);
inline vpternlogq64 (zmm25_5, zmm5_5, zmm12_5, table);
inline vpternlogq64 (zmm25_6, zmm5_6, zmm12_6, table);
inline vpternlogq64 (zmm25_7, zmm5_7, zmm12_7, table);
(* vmovdqa64 %zmm13,%zmm0                          #! PC = 0x55555558e4fe *)
mov zmm0_0 zmm13_0;
mov zmm0_1 zmm13_1;
mov zmm0_2 zmm13_2;
mov zmm0_3 zmm13_3;
mov zmm0_4 zmm13_4;
mov zmm0_5 zmm13_5;
mov zmm0_6 zmm13_6;
mov zmm0_7 zmm13_7;
(* vpternlogq $0x96,%zmm1,%zmm15,%zmm0             #! PC = 0x55555558e504 *)
mov table 0x96@uint8;
inline vpternlogq64 (zmm0_0, zmm15_0, zmm1_0, table);
inline vpternlogq64 (zmm0_1, zmm15_1, zmm1_1, table);
inline vpternlogq64 (zmm0_2, zmm15_2, zmm1_2, table);
inline vpternlogq64 (zmm0_3, zmm15_3, zmm1_3, table);
inline vpternlogq64 (zmm0_4, zmm15_4, zmm1_4, table);
inline vpternlogq64 (zmm0_5, zmm15_5, zmm1_5, table);
inline vpternlogq64 (zmm0_6, zmm15_6, zmm1_6, table);
inline vpternlogq64 (zmm0_7, zmm15_7, zmm1_7, table);
(* vmovdqa64 %zmm19,0x148(%rsp)                    #! EA = L0x7fffffffd600; PC = 0x55555558e50b *)
mov L0x7fffffffd600 zmm19_0;
mov L0x7fffffffd608 zmm19_1;
mov L0x7fffffffd610 zmm19_2;
mov L0x7fffffffd618 zmm19_3;
mov L0x7fffffffd620 zmm19_4;
mov L0x7fffffffd628 zmm19_5;
mov L0x7fffffffd630 zmm19_6;
mov L0x7fffffffd638 zmm19_7;
(* vprolq $0x1,%zmm25,%zmm19                       #! PC = 0x55555558e516 *)
rol zmm19_0 zmm25_0 0x1;
rol zmm19_1 zmm25_1 0x1;
rol zmm19_2 zmm25_2 0x1;
rol zmm19_3 zmm25_3 0x1;
rol zmm19_4 zmm25_4 0x1;
rol zmm19_5 zmm25_5 0x1;
rol zmm19_6 zmm25_6 0x1;
rol zmm19_7 zmm25_7 0x1;
(* vpternlogq $0x96,%zmm21,%zmm14,%zmm0            #! PC = 0x55555558e51d *)
mov table 0x96@uint8;
inline vpternlogq64 (zmm0_0, zmm14_0, zmm21_0, table);
inline vpternlogq64 (zmm0_1, zmm14_1, zmm21_1, table);
inline vpternlogq64 (zmm0_2, zmm14_2, zmm21_2, table);
inline vpternlogq64 (zmm0_3, zmm14_3, zmm21_3, table);
inline vpternlogq64 (zmm0_4, zmm14_4, zmm21_4, table);
inline vpternlogq64 (zmm0_5, zmm14_5, zmm21_5, table);
inline vpternlogq64 (zmm0_6, zmm14_6, zmm21_6, table);
inline vpternlogq64 (zmm0_7, zmm14_7, zmm21_7, table);
(* vmovdqa64 %zmm24,%zmm8                          #! PC = 0x55555558e524 *)
mov zmm8_0 zmm24_0;
mov zmm8_1 zmm24_1;
mov zmm8_2 zmm24_2;
mov zmm8_3 zmm24_3;
mov zmm8_4 zmm24_4;
mov zmm8_5 zmm24_5;
mov zmm8_6 zmm24_6;
mov zmm8_7 zmm24_7;
(* vpternlogq $0x96,%zmm23,%zmm10,%zmm8            #! PC = 0x55555558e52a *)
mov table 0x96@uint8;
inline vpternlogq64 (zmm8_0, zmm10_0, zmm23_0, table);
inline vpternlogq64 (zmm8_1, zmm10_1, zmm23_1, table);
inline vpternlogq64 (zmm8_2, zmm10_2, zmm23_2, table);
inline vpternlogq64 (zmm8_3, zmm10_3, zmm23_3, table);
inline vpternlogq64 (zmm8_4, zmm10_4, zmm23_4, table);
inline vpternlogq64 (zmm8_5, zmm10_5, zmm23_5, table);
inline vpternlogq64 (zmm8_6, zmm10_6, zmm23_6, table);
inline vpternlogq64 (zmm8_7, zmm10_7, zmm23_7, table);
(* vpternlogq $0x96,%zmm27,%zmm28,%zmm8            #! PC = 0x55555558e531 *)
mov table 0x96@uint8;
inline vpternlogq64 (zmm8_0, zmm28_0, zmm27_0, table);
inline vpternlogq64 (zmm8_1, zmm28_1, zmm27_1, table);
inline vpternlogq64 (zmm8_2, zmm28_2, zmm27_2, table);
inline vpternlogq64 (zmm8_3, zmm28_3, zmm27_3, table);
inline vpternlogq64 (zmm8_4, zmm28_4, zmm27_4, table);
inline vpternlogq64 (zmm8_5, zmm28_5, zmm27_5, table);
inline vpternlogq64 (zmm8_6, zmm28_6, zmm27_6, table);
inline vpternlogq64 (zmm8_7, zmm28_7, zmm27_7, table);
(* vmovdqa64 %zmm30,%zmm20                         #! PC = 0x55555558e538 *)
mov zmm20_0 zmm30_0;
mov zmm20_1 zmm30_1;
mov zmm20_2 zmm30_2;
mov zmm20_3 zmm30_3;
mov zmm20_4 zmm30_4;
mov zmm20_5 zmm30_5;
mov zmm20_6 zmm30_6;
mov zmm20_7 zmm30_7;
(* vmovdqa64 %zmm19,0x108(%rsp)                    #! EA = L0x7fffffffd5c0; PC = 0x55555558e53e *)
mov L0x7fffffffd5c0 zmm19_0;
mov L0x7fffffffd5c8 zmm19_1;
mov L0x7fffffffd5d0 zmm19_2;
mov L0x7fffffffd5d8 zmm19_3;
mov L0x7fffffffd5e0 zmm19_4;
mov L0x7fffffffd5e8 zmm19_5;
mov L0x7fffffffd5f0 zmm19_6;
mov L0x7fffffffd5f8 zmm19_7;
(* vprolq $0x1,%zmm0,%zmm19                        #! PC = 0x55555558e549 *)
rol zmm19_0 zmm0_0 0x1;
rol zmm19_1 zmm0_1 0x1;
rol zmm19_2 zmm0_2 0x1;
rol zmm19_3 zmm0_3 0x1;
rol zmm19_4 zmm0_4 0x1;
rol zmm19_5 zmm0_5 0x1;
rol zmm19_6 zmm0_6 0x1;
rol zmm19_7 zmm0_7 0x1;
(* vpternlogq $0x96,%zmm26,%zmm16,%zmm20           #! PC = 0x55555558e550 *)
mov table 0x96@uint8;
inline vpternlogq64 (zmm20_0, zmm16_0, zmm26_0, table);
inline vpternlogq64 (zmm20_1, zmm16_1, zmm26_1, table);
inline vpternlogq64 (zmm20_2, zmm16_2, zmm26_2, table);
inline vpternlogq64 (zmm20_3, zmm16_3, zmm26_3, table);
inline vpternlogq64 (zmm20_4, zmm16_4, zmm26_4, table);
inline vpternlogq64 (zmm20_5, zmm16_5, zmm26_5, table);
inline vpternlogq64 (zmm20_6, zmm16_6, zmm26_6, table);
inline vpternlogq64 (zmm20_7, zmm16_7, zmm26_7, table);
(* vpternlogq $0x96,%zmm29,%zmm6,%zmm20            #! PC = 0x55555558e557 *)
mov table 0x96@uint8;
inline vpternlogq64 (zmm20_0, zmm6_0, zmm29_0, table);
inline vpternlogq64 (zmm20_1, zmm6_1, zmm29_1, table);
inline vpternlogq64 (zmm20_2, zmm6_2, zmm29_2, table);
inline vpternlogq64 (zmm20_3, zmm6_3, zmm29_3, table);
inline vpternlogq64 (zmm20_4, zmm6_4, zmm29_4, table);
inline vpternlogq64 (zmm20_5, zmm6_5, zmm29_5, table);
inline vpternlogq64 (zmm20_6, zmm6_6, zmm29_6, table);
inline vpternlogq64 (zmm20_7, zmm6_7, zmm29_7, table);
(* vprolq $0x1,%zmm20,%zmm31                       #! PC = 0x55555558e55e *)
rol zmm31_0 zmm20_0 0x1;
rol zmm31_1 zmm20_1 0x1;
rol zmm31_2 zmm20_2 0x1;
rol zmm31_3 zmm20_3 0x1;
rol zmm31_4 zmm20_4 0x1;
rol zmm31_5 zmm20_5 0x1;
rol zmm31_6 zmm20_6 0x1;
rol zmm31_7 zmm20_7 0x1;
(* vpxord 0x108(%rsp),%zmm20,%zmm20                #! EA = L0x7fffffffd5c0; Value = 0xdff7912c0c734c1f; PC = 0x55555558e565 *)
xor zmm20_0@uint64 zmm20_0 L0x7fffffffd5c0;
xor zmm20_1@uint64 zmm20_1 L0x7fffffffd5c8;
xor zmm20_2@uint64 zmm20_2 L0x7fffffffd5d0;
xor zmm20_3@uint64 zmm20_3 L0x7fffffffd5d8;
xor zmm20_4@uint64 zmm20_4 L0x7fffffffd5e0;
xor zmm20_5@uint64 zmm20_5 L0x7fffffffd5e8;
xor zmm20_6@uint64 zmm20_6 L0x7fffffffd5f0;
xor zmm20_7@uint64 zmm20_7 L0x7fffffffd5f8;
(* movabs $0x8000000000000080,%rdx                 #! PC = 0x55555558e570 *)
mov rdx 0x8000000000000080@uint64;
(* vmovdqa64 %zmm19,0xc8(%rsp)                     #! EA = L0x7fffffffd580; PC = 0x55555558e57a *)
mov L0x7fffffffd580 zmm19_0;
mov L0x7fffffffd588 zmm19_1;
mov L0x7fffffffd590 zmm19_2;
mov L0x7fffffffd598 zmm19_3;
mov L0x7fffffffd5a0 zmm19_4;
mov L0x7fffffffd5a8 zmm19_5;
mov L0x7fffffffd5b0 zmm19_6;
mov L0x7fffffffd5b8 zmm19_7;
(* vprolq $0x1,%zmm8,%zmm19                        #! PC = 0x55555558e585 *)
rol zmm19_0 zmm8_0 0x1;
rol zmm19_1 zmm8_1 0x1;
rol zmm19_2 zmm8_2 0x1;
rol zmm19_3 zmm8_3 0x1;
rol zmm19_4 zmm8_4 0x1;
rol zmm19_5 zmm8_5 0x1;
rol zmm19_6 zmm8_6 0x1;
rol zmm19_7 zmm8_7 0x1;
(* vpxord 0x148(%rsp),%zmm8,%zmm8                  #! EA = L0x7fffffffd600; Value = 0x463db86db5305e0a; PC = 0x55555558e58c *)
xor zmm8_0@uint64 zmm8_0 L0x7fffffffd600;
xor zmm8_1@uint64 zmm8_1 L0x7fffffffd608;
xor zmm8_2@uint64 zmm8_2 L0x7fffffffd610;
xor zmm8_3@uint64 zmm8_3 L0x7fffffffd618;
xor zmm8_4@uint64 zmm8_4 L0x7fffffffd620;
xor zmm8_5@uint64 zmm8_5 L0x7fffffffd628;
xor zmm8_6@uint64 zmm8_6 L0x7fffffffd630;
xor zmm8_7@uint64 zmm8_7 L0x7fffffffd638;
(* vpxord 0xc8(%rsp),%zmm22,%zmm22                 #! EA = L0x7fffffffd580; Value = 0xa58e9a744e5e22cb; PC = 0x55555558e597 *)
xor zmm22_0@uint64 zmm22_0 L0x7fffffffd580;
xor zmm22_1@uint64 zmm22_1 L0x7fffffffd588;
xor zmm22_2@uint64 zmm22_2 L0x7fffffffd590;
xor zmm22_3@uint64 zmm22_3 L0x7fffffffd598;
xor zmm22_4@uint64 zmm22_4 L0x7fffffffd5a0;
xor zmm22_5@uint64 zmm22_5 L0x7fffffffd5a8;
xor zmm22_6@uint64 zmm22_6 L0x7fffffffd5b0;
xor zmm22_7@uint64 zmm22_7 L0x7fffffffd5b8;
(* vpxord %zmm30,%zmm8,%zmm30                      #! PC = 0x55555558e5a2 *)
xor zmm30_0@uint64 zmm8_0 zmm30_0;
xor zmm30_1@uint64 zmm8_1 zmm30_1;
xor zmm30_2@uint64 zmm8_2 zmm30_2;
xor zmm30_3@uint64 zmm8_3 zmm30_3;
xor zmm30_4@uint64 zmm8_4 zmm30_4;
xor zmm30_5@uint64 zmm8_5 zmm30_5;
xor zmm30_6@uint64 zmm8_6 zmm30_6;
xor zmm30_7@uint64 zmm8_7 zmm30_7;
(* vprorq $0x14,%zmm30,%zmm30                      #! PC = 0x55555558e5a8 *)
ror zmm30_0 zmm30_0 0x14;
ror zmm30_1 zmm30_1 0x14;
ror zmm30_2 zmm30_2 0x14;
ror zmm30_3 zmm30_3 0x14;
ror zmm30_4 zmm30_4 0x14;
ror zmm30_5 zmm30_5 0x14;
ror zmm30_6 zmm30_6 0x14;
ror zmm30_7 zmm30_7 0x14;
(* vpxord %zmm3,%zmm20,%zmm3                       #! PC = 0x55555558e5af *)
xor zmm3_0@uint64 zmm20_0 zmm3_0;
xor zmm3_1@uint64 zmm20_1 zmm3_1;
xor zmm3_2@uint64 zmm20_2 zmm3_2;
xor zmm3_3@uint64 zmm20_3 zmm3_3;
xor zmm3_4@uint64 zmm20_4 zmm3_4;
xor zmm3_5@uint64 zmm20_5 zmm3_5;
xor zmm3_6@uint64 zmm20_6 zmm3_6;
xor zmm3_7@uint64 zmm20_7 zmm3_7;
(* vpxord %zmm19,%zmm25,%zmm19                     #! PC = 0x55555558e5b5 *)
xor zmm19_0@uint64 zmm25_0 zmm19_0;
xor zmm19_1@uint64 zmm25_1 zmm19_1;
xor zmm19_2@uint64 zmm25_2 zmm19_2;
xor zmm19_3@uint64 zmm25_3 zmm19_3;
xor zmm19_4@uint64 zmm25_4 zmm19_4;
xor zmm19_5@uint64 zmm25_5 zmm19_5;
xor zmm19_6@uint64 zmm25_6 zmm19_6;
xor zmm19_7@uint64 zmm25_7 zmm19_7;
(* vpxord %zmm9,%zmm22,%zmm9                       #! PC = 0x55555558e5bb *)
xor zmm9_0@uint64 zmm22_0 zmm9_0;
xor zmm9_1@uint64 zmm22_1 zmm9_1;
xor zmm9_2@uint64 zmm22_2 zmm9_2;
xor zmm9_3@uint64 zmm22_3 zmm9_3;
xor zmm9_4@uint64 zmm22_4 zmm9_4;
xor zmm9_5@uint64 zmm22_5 zmm9_5;
xor zmm9_6@uint64 zmm22_6 zmm9_6;
xor zmm9_7@uint64 zmm22_7 zmm9_7;
(* vpxord %zmm13,%zmm19,%zmm13                     #! PC = 0x55555558e5c1 *)
xor zmm13_0@uint64 zmm19_0 zmm13_0;
xor zmm13_1@uint64 zmm19_1 zmm13_1;
xor zmm13_2@uint64 zmm19_2 zmm13_2;
xor zmm13_3@uint64 zmm19_3 zmm13_3;
xor zmm13_4@uint64 zmm19_4 zmm13_4;
xor zmm13_5@uint64 zmm19_5 zmm13_5;
xor zmm13_6@uint64 zmm19_6 zmm13_6;
xor zmm13_7@uint64 zmm19_7 zmm13_7;
(* vpxord %zmm31,%zmm0,%zmm0                       #! PC = 0x55555558e5c7 *)
xor zmm0_0@uint64 zmm0_0 zmm31_0;
xor zmm0_1@uint64 zmm0_1 zmm31_1;
xor zmm0_2@uint64 zmm0_2 zmm31_2;
xor zmm0_3@uint64 zmm0_3 zmm31_3;
xor zmm0_4@uint64 zmm0_4 zmm31_4;
xor zmm0_5@uint64 zmm0_5 zmm31_5;
xor zmm0_6@uint64 zmm0_6 zmm31_6;
xor zmm0_7@uint64 zmm0_7 zmm31_7;
(* vprorq $0x15,%zmm3,%zmm3                        #! PC = 0x55555558e5cd *)
ror zmm3_0 zmm3_0 0x15;
ror zmm3_1 zmm3_1 0x15;
ror zmm3_2 zmm3_2 0x15;
ror zmm3_3 zmm3_3 0x15;
ror zmm3_4 zmm3_4 0x15;
ror zmm3_5 zmm3_5 0x15;
ror zmm3_6 zmm3_6 0x15;
ror zmm3_7 zmm3_7 0x15;
(* vprolq $0x15,%zmm9,%zmm9                        #! PC = 0x55555558e5d4 *)
rol zmm9_0 zmm9_0 0x15;
rol zmm9_1 zmm9_1 0x15;
rol zmm9_2 zmm9_2 0x15;
rol zmm9_3 zmm9_3 0x15;
rol zmm9_4 zmm9_4 0x15;
rol zmm9_5 zmm9_5 0x15;
rol zmm9_6 zmm9_6 0x15;
rol zmm9_7 zmm9_7 0x15;
(* vprolq $0xe,%zmm13,%zmm13                       #! PC = 0x55555558e5db *)
rol zmm13_0 zmm13_0 0xe;
rol zmm13_1 zmm13_1 0xe;
rol zmm13_2 zmm13_2 0xe;
rol zmm13_3 zmm13_3 0xe;
rol zmm13_4 zmm13_4 0xe;
rol zmm13_5 zmm13_5 0xe;
rol zmm13_6 zmm13_6 0xe;
rol zmm13_7 zmm13_7 0xe;
(* vpxord %zmm11,%zmm22,%zmm11                     #! PC = 0x55555558e5e2 *)
xor zmm11_0@uint64 zmm22_0 zmm11_0;
xor zmm11_1@uint64 zmm22_1 zmm11_1;
xor zmm11_2@uint64 zmm22_2 zmm11_2;
xor zmm11_3@uint64 zmm22_3 zmm11_3;
xor zmm11_4@uint64 zmm22_4 zmm11_4;
xor zmm11_5@uint64 zmm22_5 zmm11_5;
xor zmm11_6@uint64 zmm22_6 zmm11_6;
xor zmm11_7@uint64 zmm22_7 zmm11_7;
(* vpxord %zmm15,%zmm19,%zmm15                     #! PC = 0x55555558e5e8 *)
xor zmm15_0@uint64 zmm19_0 zmm15_0;
xor zmm15_1@uint64 zmm19_1 zmm15_1;
xor zmm15_2@uint64 zmm19_2 zmm15_2;
xor zmm15_3@uint64 zmm19_3 zmm15_3;
xor zmm15_4@uint64 zmm19_4 zmm15_4;
xor zmm15_5@uint64 zmm19_5 zmm15_5;
xor zmm15_6@uint64 zmm19_6 zmm15_6;
xor zmm15_7@uint64 zmm19_7 zmm15_7;
(* vprolq $0x1c,%zmm11,%zmm11                      #! PC = 0x55555558e5ee *)
rol zmm11_0 zmm11_0 0x1c;
rol zmm11_1 zmm11_1 0x1c;
rol zmm11_2 zmm11_2 0x1c;
rol zmm11_3 zmm11_3 0x1c;
rol zmm11_4 zmm11_4 0x1c;
rol zmm11_5 zmm11_5 0x1c;
rol zmm11_6 zmm11_6 0x1c;
rol zmm11_7 zmm11_7 0x1c;
(* vprolq $0x14,%zmm15,%zmm15                      #! PC = 0x55555558e5f5 *)
rol zmm15_0 zmm15_0 0x14;
rol zmm15_1 zmm15_1 0x14;
rol zmm15_2 zmm15_2 0x14;
rol zmm15_3 zmm15_3 0x14;
rol zmm15_4 zmm15_4 0x14;
rol zmm15_5 zmm15_5 0x14;
rol zmm15_6 zmm15_6 0x14;
rol zmm15_7 zmm15_7 0x14;
(* vpxord %zmm10,%zmm0,%zmm10                      #! PC = 0x55555558e5fc *)
xor zmm10_0@uint64 zmm0_0 zmm10_0;
xor zmm10_1@uint64 zmm0_1 zmm10_1;
xor zmm10_2@uint64 zmm0_2 zmm10_2;
xor zmm10_3@uint64 zmm0_3 zmm10_3;
xor zmm10_4@uint64 zmm0_4 zmm10_4;
xor zmm10_5@uint64 zmm0_5 zmm10_5;
xor zmm10_6@uint64 zmm0_6 zmm10_6;
xor zmm10_7@uint64 zmm0_7 zmm10_7;
(* vpxord %zmm16,%zmm8,%zmm16                      #! PC = 0x55555558e602 *)
xor zmm16_0@uint64 zmm8_0 zmm16_0;
xor zmm16_1@uint64 zmm8_1 zmm16_1;
xor zmm16_2@uint64 zmm8_2 zmm16_2;
xor zmm16_3@uint64 zmm8_3 zmm16_3;
xor zmm16_4@uint64 zmm8_4 zmm16_4;
xor zmm16_5@uint64 zmm8_5 zmm16_5;
xor zmm16_6@uint64 zmm8_6 zmm16_6;
xor zmm16_7@uint64 zmm8_7 zmm16_7;
(* vpxord %zmm17,%zmm20,%zmm17                     #! PC = 0x55555558e608 *)
xor zmm17_0@uint64 zmm20_0 zmm17_0;
xor zmm17_1@uint64 zmm20_1 zmm17_1;
xor zmm17_2@uint64 zmm20_2 zmm17_2;
xor zmm17_3@uint64 zmm20_3 zmm17_3;
xor zmm17_4@uint64 zmm20_4 zmm17_4;
xor zmm17_5@uint64 zmm20_5 zmm17_5;
xor zmm17_6@uint64 zmm20_6 zmm17_6;
xor zmm17_7@uint64 zmm20_7 zmm17_7;
(* vpxord %zmm26,%zmm8,%zmm26                      #! PC = 0x55555558e60e *)
xor zmm26_0@uint64 zmm8_0 zmm26_0;
xor zmm26_1@uint64 zmm8_1 zmm26_1;
xor zmm26_2@uint64 zmm8_2 zmm26_2;
xor zmm26_3@uint64 zmm8_3 zmm26_3;
xor zmm26_4@uint64 zmm8_4 zmm26_4;
xor zmm26_5@uint64 zmm8_5 zmm26_5;
xor zmm26_6@uint64 zmm8_6 zmm26_6;
xor zmm26_7@uint64 zmm8_7 zmm26_7;
(* vpxord %zmm18,%zmm20,%zmm18                     #! PC = 0x55555558e614 *)
xor zmm18_0@uint64 zmm20_0 zmm18_0;
xor zmm18_1@uint64 zmm20_1 zmm18_1;
xor zmm18_2@uint64 zmm20_2 zmm18_2;
xor zmm18_3@uint64 zmm20_3 zmm18_3;
xor zmm18_4@uint64 zmm20_4 zmm18_4;
xor zmm18_5@uint64 zmm20_5 zmm18_5;
xor zmm18_6@uint64 zmm20_6 zmm18_6;
xor zmm18_7@uint64 zmm20_7 zmm18_7;
(* vprolq $0x1,%zmm26,%zmm26                       #! PC = 0x55555558e61a *)
rol zmm26_0 zmm26_0 0x1;
rol zmm26_1 zmm26_1 0x1;
rol zmm26_2 zmm26_2 0x1;
rol zmm26_3 zmm26_3 0x1;
rol zmm26_4 zmm26_4 0x1;
rol zmm26_5 zmm26_5 0x1;
rol zmm26_6 zmm26_6 0x1;
rol zmm26_7 zmm26_7 0x1;
(* vprolq $0x6,%zmm18,%zmm18                       #! PC = 0x55555558e621 *)
rol zmm18_0 zmm18_0 0x6;
rol zmm18_1 zmm18_1 0x6;
rol zmm18_2 zmm18_2 0x6;
rol zmm18_3 zmm18_3 0x6;
rol zmm18_4 zmm18_4 0x6;
rol zmm18_5 zmm18_5 0x6;
rol zmm18_6 zmm18_6 0x6;
rol zmm18_7 zmm18_7 0x6;
(* vprolq $0x3,%zmm10,%zmm10                       #! PC = 0x55555558e628 *)
rol zmm10_0 zmm10_0 0x3;
rol zmm10_1 zmm10_1 0x3;
rol zmm10_2 zmm10_2 0x3;
rol zmm10_3 zmm10_3 0x3;
rol zmm10_4 zmm10_4 0x3;
rol zmm10_5 zmm10_5 0x3;
rol zmm10_6 zmm10_6 0x3;
rol zmm10_7 zmm10_7 0x3;
(* vprorq $0x13,%zmm16,%zmm16                      #! PC = 0x55555558e62f *)
ror zmm16_0 zmm16_0 0x13;
ror zmm16_1 zmm16_1 0x13;
ror zmm16_2 zmm16_2 0x13;
ror zmm16_3 zmm16_3 0x13;
ror zmm16_4 zmm16_4 0x13;
ror zmm16_5 zmm16_5 0x13;
ror zmm16_6 zmm16_6 0x13;
ror zmm16_7 zmm16_7 0x13;
(* vprorq $0x3,%zmm17,%zmm17                       #! PC = 0x55555558e636 *)
ror zmm17_0 zmm17_0 0x3;
ror zmm17_1 zmm17_1 0x3;
ror zmm17_2 zmm17_2 0x3;
ror zmm17_3 zmm17_3 0x3;
ror zmm17_4 zmm17_4 0x3;
ror zmm17_5 zmm17_5 0x3;
ror zmm17_6 zmm17_6 0x3;
ror zmm17_7 zmm17_7 0x3;
(* vpxord %zmm23,%zmm0,%zmm23                      #! PC = 0x55555558e63d *)
xor zmm23_0@uint64 zmm0_0 zmm23_0;
xor zmm23_1@uint64 zmm0_1 zmm23_1;
xor zmm23_2@uint64 zmm0_2 zmm23_2;
xor zmm23_3@uint64 zmm0_3 zmm23_3;
xor zmm23_4@uint64 zmm0_4 zmm23_4;
xor zmm23_5@uint64 zmm0_5 zmm23_5;
xor zmm23_6@uint64 zmm0_6 zmm23_6;
xor zmm23_7@uint64 zmm0_7 zmm23_7;
(* vpxord %zmm2,%zmm22,%zmm2                       #! PC = 0x55555558e643 *)
xor zmm2_0@uint64 zmm22_0 zmm2_0;
xor zmm2_1@uint64 zmm22_1 zmm2_1;
xor zmm2_2@uint64 zmm22_2 zmm2_2;
xor zmm2_3@uint64 zmm22_3 zmm2_3;
xor zmm2_4@uint64 zmm22_4 zmm2_4;
xor zmm2_5@uint64 zmm22_5 zmm2_5;
xor zmm2_6@uint64 zmm22_6 zmm2_6;
xor zmm2_7@uint64 zmm22_7 zmm2_7;
(* vpxord %zmm1,%zmm19,%zmm1                       #! PC = 0x55555558e649 *)
xor zmm1_0@uint64 zmm19_0 zmm1_0;
xor zmm1_1@uint64 zmm19_1 zmm1_1;
xor zmm1_2@uint64 zmm19_2 zmm1_2;
xor zmm1_3@uint64 zmm19_3 zmm1_3;
xor zmm1_4@uint64 zmm19_4 zmm1_4;
xor zmm1_5@uint64 zmm19_5 zmm1_5;
xor zmm1_6@uint64 zmm19_6 zmm1_6;
xor zmm1_7@uint64 zmm19_7 zmm1_7;
(* vpxord %zmm28,%zmm0,%zmm28                      #! PC = 0x55555558e64f *)
xor zmm28_0@uint64 zmm0_0 zmm28_0;
xor zmm28_1@uint64 zmm0_1 zmm28_1;
xor zmm28_2@uint64 zmm0_2 zmm28_2;
xor zmm28_3@uint64 zmm0_3 zmm28_3;
xor zmm28_4@uint64 zmm0_4 zmm28_4;
xor zmm28_5@uint64 zmm0_5 zmm28_5;
xor zmm28_6@uint64 zmm0_6 zmm28_6;
xor zmm28_7@uint64 zmm0_7 zmm28_7;
(* vpxord %zmm14,%zmm19,%zmm14                     #! PC = 0x55555558e655 *)
xor zmm14_0@uint64 zmm19_0 zmm14_0;
xor zmm14_1@uint64 zmm19_1 zmm14_1;
xor zmm14_2@uint64 zmm19_2 zmm14_2;
xor zmm14_3@uint64 zmm19_3 zmm14_3;
xor zmm14_4@uint64 zmm19_4 zmm14_4;
xor zmm14_5@uint64 zmm19_5 zmm14_5;
xor zmm14_6@uint64 zmm19_6 zmm14_6;
xor zmm14_7@uint64 zmm19_7 zmm14_7;
(* vprorq $0x1c,%zmm28,%zmm28                      #! PC = 0x55555558e65b *)
ror zmm28_0 zmm28_0 0x1c;
ror zmm28_1 zmm28_1 0x1c;
ror zmm28_2 zmm28_2 0x1c;
ror zmm28_3 zmm28_3 0x1c;
ror zmm28_4 zmm28_4 0x1c;
ror zmm28_5 zmm28_5 0x1c;
ror zmm28_6 zmm28_6 0x1c;
ror zmm28_7 zmm28_7 0x1c;
(* vprolq $0x1b,%zmm14,%zmm14                      #! PC = 0x55555558e662 *)
rol zmm14_0 zmm14_0 0x1b;
rol zmm14_1 zmm14_1 0x1b;
rol zmm14_2 zmm14_2 0x1b;
rol zmm14_3 zmm14_3 0x1b;
rol zmm14_4 zmm14_4 0x1b;
rol zmm14_5 zmm14_5 0x1b;
rol zmm14_6 zmm14_6 0x1b;
rol zmm14_7 zmm14_7 0x1b;
(* vprolq $0x12,%zmm23,%zmm23                      #! PC = 0x55555558e669 *)
rol zmm23_0 zmm23_0 0x12;
rol zmm23_1 zmm23_1 0x12;
rol zmm23_2 zmm23_2 0x12;
rol zmm23_3 zmm23_3 0x12;
rol zmm23_4 zmm23_4 0x12;
rol zmm23_5 zmm23_5 0x12;
rol zmm23_6 zmm23_6 0x12;
rol zmm23_7 zmm23_7 0x12;
(* vprolq $0x19,%zmm2,%zmm2                        #! PC = 0x55555558e670 *)
rol zmm2_0 zmm2_0 0x19;
rol zmm2_1 zmm2_1 0x19;
rol zmm2_2 zmm2_2 0x19;
rol zmm2_3 zmm2_3 0x19;
rol zmm2_4 zmm2_4 0x19;
rol zmm2_5 zmm2_5 0x19;
rol zmm2_6 zmm2_6 0x19;
rol zmm2_7 zmm2_7 0x19;
(* vprolq $0x8,%zmm1,%zmm1                         #! PC = 0x55555558e677 *)
rol zmm1_0 zmm1_0 0x8;
rol zmm1_1 zmm1_1 0x8;
rol zmm1_2 zmm1_2 0x8;
rol zmm1_3 zmm1_3 0x8;
rol zmm1_4 zmm1_4 0x8;
rol zmm1_5 zmm1_5 0x8;
rol zmm1_6 zmm1_6 0x8;
rol zmm1_7 zmm1_7 0x8;
(* vpxord %zmm6,%zmm8,%zmm6                        #! PC = 0x55555558e67e *)
xor zmm6_0@uint64 zmm8_0 zmm6_0;
xor zmm6_1@uint64 zmm8_1 zmm6_1;
xor zmm6_2@uint64 zmm8_2 zmm6_2;
xor zmm6_3@uint64 zmm8_3 zmm6_3;
xor zmm6_4@uint64 zmm8_4 zmm6_4;
xor zmm6_5@uint64 zmm8_5 zmm6_5;
xor zmm6_6@uint64 zmm8_6 zmm6_6;
xor zmm6_7@uint64 zmm8_7 zmm6_7;
(* vpxord %zmm7,%zmm20,%zmm7                       #! PC = 0x55555558e684 *)
xor zmm7_0@uint64 zmm20_0 zmm7_0;
xor zmm7_1@uint64 zmm20_1 zmm7_1;
xor zmm7_2@uint64 zmm20_2 zmm7_2;
xor zmm7_3@uint64 zmm20_3 zmm7_3;
xor zmm7_4@uint64 zmm20_4 zmm7_4;
xor zmm7_5@uint64 zmm20_5 zmm7_5;
xor zmm7_6@uint64 zmm20_6 zmm7_6;
xor zmm7_7@uint64 zmm20_7 zmm7_7;
(* vpxord %zmm5,%zmm22,%zmm5                       #! PC = 0x55555558e68a *)
xor zmm5_0@uint64 zmm22_0 zmm5_0;
xor zmm5_1@uint64 zmm22_1 zmm5_1;
xor zmm5_2@uint64 zmm22_2 zmm5_2;
xor zmm5_3@uint64 zmm22_3 zmm5_3;
xor zmm5_4@uint64 zmm22_4 zmm5_4;
xor zmm5_5@uint64 zmm22_5 zmm5_5;
xor zmm5_6@uint64 zmm22_6 zmm5_6;
xor zmm5_7@uint64 zmm22_7 zmm5_7;
(* vpxord %zmm4,%zmm20,%zmm20                      #! PC = 0x55555558e690 *)
xor zmm20_0@uint64 zmm20_0 zmm4_0;
xor zmm20_1@uint64 zmm20_1 zmm4_1;
xor zmm20_2@uint64 zmm20_2 zmm4_2;
xor zmm20_3@uint64 zmm20_3 zmm4_3;
xor zmm20_4@uint64 zmm20_4 zmm4_4;
xor zmm20_5@uint64 zmm20_5 zmm4_5;
xor zmm20_6@uint64 zmm20_6 zmm4_6;
xor zmm20_7@uint64 zmm20_7 zmm4_7;
(* vpxord %zmm12,%zmm22,%zmm22                     #! PC = 0x55555558e696 *)
xor zmm22_0@uint64 zmm22_0 zmm12_0;
xor zmm22_1@uint64 zmm22_1 zmm12_1;
xor zmm22_2@uint64 zmm22_2 zmm12_2;
xor zmm22_3@uint64 zmm22_3 zmm12_3;
xor zmm22_4@uint64 zmm22_4 zmm12_4;
xor zmm22_5@uint64 zmm22_5 zmm12_5;
xor zmm22_6@uint64 zmm22_6 zmm12_6;
xor zmm22_7@uint64 zmm22_7 zmm12_7;
(* vpxord %zmm24,%zmm0,%zmm24                      #! PC = 0x55555558e69c *)
xor zmm24_0@uint64 zmm0_0 zmm24_0;
xor zmm24_1@uint64 zmm0_1 zmm24_1;
xor zmm24_2@uint64 zmm0_2 zmm24_2;
xor zmm24_3@uint64 zmm0_3 zmm24_3;
xor zmm24_4@uint64 zmm0_4 zmm24_4;
xor zmm24_5@uint64 zmm0_5 zmm24_5;
xor zmm24_6@uint64 zmm0_6 zmm24_6;
xor zmm24_7@uint64 zmm0_7 zmm24_7;
(* vprorq $0x2,%zmm20,%zmm20                       #! PC = 0x55555558e6a2 *)
ror zmm20_0 zmm20_0 0x2;
ror zmm20_1 zmm20_1 0x2;
ror zmm20_2 zmm20_2 0x2;
ror zmm20_3 zmm20_3 0x2;
ror zmm20_4 zmm20_4 0x2;
ror zmm20_5 zmm20_5 0x2;
ror zmm20_6 zmm20_6 0x2;
ror zmm20_7 zmm20_7 0x2;
(* vprorq $0x9,%zmm22,%zmm22                       #! PC = 0x55555558e6a9 *)
ror zmm22_0 zmm22_0 0x9;
ror zmm22_1 zmm22_1 0x9;
ror zmm22_2 zmm22_2 0x9;
ror zmm22_3 zmm22_3 0x9;
ror zmm22_4 zmm22_4 0x9;
ror zmm22_5 zmm22_5 0x9;
ror zmm22_6 zmm22_6 0x9;
ror zmm22_7 zmm22_7 0x9;
(* vprolq $0xa,%zmm6,%zmm6                         #! PC = 0x55555558e6b0 *)
rol zmm6_0 zmm6_0 0xa;
rol zmm6_1 zmm6_1 0xa;
rol zmm6_2 zmm6_2 0xa;
rol zmm6_3 zmm6_3 0xa;
rol zmm6_4 zmm6_4 0xa;
rol zmm6_5 zmm6_5 0xa;
rol zmm6_6 zmm6_6 0xa;
rol zmm6_7 zmm6_7 0xa;
(* vprolq $0xf,%zmm7,%zmm7                         #! PC = 0x55555558e6b7 *)
rol zmm7_0 zmm7_0 0xf;
rol zmm7_1 zmm7_1 0xf;
rol zmm7_2 zmm7_2 0xf;
rol zmm7_3 zmm7_3 0xf;
rol zmm7_4 zmm7_4 0xf;
rol zmm7_5 zmm7_5 0xf;
rol zmm7_6 zmm7_6 0xf;
rol zmm7_7 zmm7_7 0xf;
(* vprorq $0x8,%zmm5,%zmm5                         #! PC = 0x55555558e6be *)
ror zmm5_0 zmm5_0 0x8;
ror zmm5_1 zmm5_1 0x8;
ror zmm5_2 zmm5_2 0x8;
ror zmm5_3 zmm5_3 0x8;
ror zmm5_4 zmm5_4 0x8;
ror zmm5_5 zmm5_5 0x8;
ror zmm5_6 zmm5_6 0x8;
ror zmm5_7 zmm5_7 0x8;
(* vpxord %zmm27,%zmm0,%zmm0                       #! PC = 0x55555558e6c5 *)
xor zmm0_0@uint64 zmm0_0 zmm27_0;
xor zmm0_1@uint64 zmm0_1 zmm27_1;
xor zmm0_2@uint64 zmm0_2 zmm27_2;
xor zmm0_3@uint64 zmm0_3 zmm27_3;
xor zmm0_4@uint64 zmm0_4 zmm27_4;
xor zmm0_5@uint64 zmm0_5 zmm27_5;
xor zmm0_6@uint64 zmm0_6 zmm27_6;
xor zmm0_7@uint64 zmm0_7 zmm27_7;
(* vpxord %zmm29,%zmm8,%zmm8                       #! PC = 0x55555558e6cb *)
xor zmm8_0@uint64 zmm8_0 zmm29_0;
xor zmm8_1@uint64 zmm8_1 zmm29_1;
xor zmm8_2@uint64 zmm8_2 zmm29_2;
xor zmm8_3@uint64 zmm8_3 zmm29_3;
xor zmm8_4@uint64 zmm8_4 zmm29_4;
xor zmm8_5@uint64 zmm8_5 zmm29_5;
xor zmm8_6@uint64 zmm8_6 zmm29_6;
xor zmm8_7@uint64 zmm8_7 zmm29_7;
(* vpxord %zmm21,%zmm19,%zmm19                     #! PC = 0x55555558e6d1 *)
xor zmm19_0@uint64 zmm19_0 zmm21_0;
xor zmm19_1@uint64 zmm19_1 zmm21_1;
xor zmm19_2@uint64 zmm19_2 zmm21_2;
xor zmm19_3@uint64 zmm19_3 zmm21_3;
xor zmm19_4@uint64 zmm19_4 zmm21_4;
xor zmm19_5@uint64 zmm19_5 zmm21_5;
xor zmm19_6@uint64 zmm19_6 zmm21_6;
xor zmm19_7@uint64 zmm19_7 zmm21_7;
(* vprorq $0x17,%zmm0,%zmm0                        #! PC = 0x55555558e6d7 *)
ror zmm0_0 zmm0_0 0x17;
ror zmm0_1 zmm0_1 0x17;
ror zmm0_2 zmm0_2 0x17;
ror zmm0_3 zmm0_3 0x17;
ror zmm0_4 zmm0_4 0x17;
ror zmm0_5 zmm0_5 0x17;
ror zmm0_6 zmm0_6 0x17;
ror zmm0_7 zmm0_7 0x17;
(* vprolq $0x2,%zmm8,%zmm8                         #! PC = 0x55555558e6de *)
rol zmm8_0 zmm8_0 0x2;
rol zmm8_1 zmm8_1 0x2;
rol zmm8_2 zmm8_2 0x2;
rol zmm8_3 zmm8_3 0x2;
rol zmm8_4 zmm8_4 0x2;
rol zmm8_5 zmm8_5 0x2;
rol zmm8_6 zmm8_6 0x2;
rol zmm8_7 zmm8_7 0x2;
(* vprorq $0x19,%zmm19,%zmm19                      #! PC = 0x55555558e6e5 *)
ror zmm19_0 zmm19_0 0x19;
ror zmm19_1 zmm19_1 0x19;
ror zmm19_2 zmm19_2 0x19;
ror zmm19_3 zmm19_3 0x19;
ror zmm19_4 zmm19_4 0x19;
ror zmm19_5 zmm19_5 0x19;
ror zmm19_6 zmm19_6 0x19;
ror zmm19_7 zmm19_7 0x19;
(* vmovdqa64 %zmm24,%zmm31                         #! PC = 0x55555558e6ec *)
mov zmm31_0 zmm24_0;
mov zmm31_1 zmm24_1;
mov zmm31_2 zmm24_2;
mov zmm31_3 zmm24_3;
mov zmm31_4 zmm24_4;
mov zmm31_5 zmm24_5;
mov zmm31_6 zmm24_6;
mov zmm31_7 zmm24_7;
(* vmovdqa64 %zmm30,%zmm25                         #! PC = 0x55555558e6f2 *)
mov zmm25_0 zmm30_0;
mov zmm25_1 zmm30_1;
mov zmm25_2 zmm30_2;
mov zmm25_3 zmm30_3;
mov zmm25_4 zmm30_4;
mov zmm25_5 zmm30_5;
mov zmm25_6 zmm30_6;
mov zmm25_7 zmm30_7;
(* vpternlogq $0xd2,%zmm3,%zmm30,%zmm31            #! PC = 0x55555558e6f8 *)
mov table 0xd2@uint8;
inline vpternlogq64 (zmm31_0, zmm30_0, zmm3_0, table);
inline vpternlogq64 (zmm31_1, zmm30_1, zmm3_1, table);
inline vpternlogq64 (zmm31_2, zmm30_2, zmm3_2, table);
inline vpternlogq64 (zmm31_3, zmm30_3, zmm3_3, table);
inline vpternlogq64 (zmm31_4, zmm30_4, zmm3_4, table);
inline vpternlogq64 (zmm31_5, zmm30_5, zmm3_5, table);
inline vpternlogq64 (zmm31_6, zmm30_6, zmm3_6, table);
inline vpternlogq64 (zmm31_7, zmm30_7, zmm3_7, table);
(* vpternlogq $0xd2,%zmm9,%zmm3,%zmm25             #! PC = 0x55555558e6ff *)
mov table 0xd2@uint8;
inline vpternlogq64 (zmm25_0, zmm3_0, zmm9_0, table);
inline vpternlogq64 (zmm25_1, zmm3_1, zmm9_1, table);
inline vpternlogq64 (zmm25_2, zmm3_2, zmm9_2, table);
inline vpternlogq64 (zmm25_3, zmm3_3, zmm9_3, table);
inline vpternlogq64 (zmm25_4, zmm3_4, zmm9_4, table);
inline vpternlogq64 (zmm25_5, zmm3_5, zmm9_5, table);
inline vpternlogq64 (zmm25_6, zmm3_6, zmm9_6, table);
inline vpternlogq64 (zmm25_7, zmm3_7, zmm9_7, table);
(* vpternlogq $0xd2,%zmm13,%zmm9,%zmm3             #! PC = 0x55555558e706 *)
mov table 0xd2@uint8;
inline vpternlogq64 (zmm3_0, zmm9_0, zmm13_0, table);
inline vpternlogq64 (zmm3_1, zmm9_1, zmm13_1, table);
inline vpternlogq64 (zmm3_2, zmm9_2, zmm13_2, table);
inline vpternlogq64 (zmm3_3, zmm9_3, zmm13_3, table);
inline vpternlogq64 (zmm3_4, zmm9_4, zmm13_4, table);
inline vpternlogq64 (zmm3_5, zmm9_5, zmm13_5, table);
inline vpternlogq64 (zmm3_6, zmm9_6, zmm13_6, table);
inline vpternlogq64 (zmm3_7, zmm9_7, zmm13_7, table);
(* vpternlogq $0xd2,%zmm24,%zmm13,%zmm9            #! PC = 0x55555558e70d *)
mov table 0xd2@uint8;
inline vpternlogq64 (zmm9_0, zmm13_0, zmm24_0, table);
inline vpternlogq64 (zmm9_1, zmm13_1, zmm24_1, table);
inline vpternlogq64 (zmm9_2, zmm13_2, zmm24_2, table);
inline vpternlogq64 (zmm9_3, zmm13_3, zmm24_3, table);
inline vpternlogq64 (zmm9_4, zmm13_4, zmm24_4, table);
inline vpternlogq64 (zmm9_5, zmm13_5, zmm24_5, table);
inline vpternlogq64 (zmm9_6, zmm13_6, zmm24_6, table);
inline vpternlogq64 (zmm9_7, zmm13_7, zmm24_7, table);
(* vpternlogq $0xd2,%zmm30,%zmm24,%zmm13           #! PC = 0x55555558e714 *)
mov table 0xd2@uint8;
inline vpternlogq64 (zmm13_0, zmm24_0, zmm30_0, table);
inline vpternlogq64 (zmm13_1, zmm24_1, zmm30_1, table);
inline vpternlogq64 (zmm13_2, zmm24_2, zmm30_2, table);
inline vpternlogq64 (zmm13_3, zmm24_3, zmm30_3, table);
inline vpternlogq64 (zmm13_4, zmm24_4, zmm30_4, table);
inline vpternlogq64 (zmm13_5, zmm24_5, zmm30_5, table);
inline vpternlogq64 (zmm13_6, zmm24_6, zmm30_6, table);
inline vpternlogq64 (zmm13_7, zmm24_7, zmm30_7, table);
(* vpbroadcastq %r11,%zmm24                        #! PC = 0x55555558e71b *)
mov zmm24_0 r11;
mov zmm24_1 r11;
mov zmm24_2 r11;
mov zmm24_3 r11;
mov zmm24_4 r11;
mov zmm24_5 r11;
mov zmm24_6 r11;
mov zmm24_7 r11;
(* vpxord %zmm31,%zmm24,%zmm24                     #! PC = 0x55555558e721 *)
xor zmm24_0@uint64 zmm24_0 zmm31_0;
xor zmm24_1@uint64 zmm24_1 zmm31_1;
xor zmm24_2@uint64 zmm24_2 zmm31_2;
xor zmm24_3@uint64 zmm24_3 zmm31_3;
xor zmm24_4@uint64 zmm24_4 zmm31_4;
xor zmm24_5@uint64 zmm24_5 zmm31_5;
xor zmm24_6@uint64 zmm24_6 zmm31_6;
xor zmm24_7@uint64 zmm24_7 zmm31_7;
(* vmovdqa64 %zmm11,%zmm30                         #! PC = 0x55555558e727 *)
mov zmm30_0 zmm11_0;
mov zmm30_1 zmm11_1;
mov zmm30_2 zmm11_2;
mov zmm30_3 zmm11_3;
mov zmm30_4 zmm11_4;
mov zmm30_5 zmm11_5;
mov zmm30_6 zmm11_6;
mov zmm30_7 zmm11_7;
(* vmovdqa64 %zmm15,%zmm31                         #! PC = 0x55555558e72d *)
mov zmm31_0 zmm15_0;
mov zmm31_1 zmm15_1;
mov zmm31_2 zmm15_2;
mov zmm31_3 zmm15_3;
mov zmm31_4 zmm15_4;
mov zmm31_5 zmm15_5;
mov zmm31_6 zmm15_6;
mov zmm31_7 zmm15_7;
(* vpternlogq $0xd2,%zmm10,%zmm15,%zmm30           #! PC = 0x55555558e733 *)
mov table 0xd2@uint8;
inline vpternlogq64 (zmm30_0, zmm15_0, zmm10_0, table);
inline vpternlogq64 (zmm30_1, zmm15_1, zmm10_1, table);
inline vpternlogq64 (zmm30_2, zmm15_2, zmm10_2, table);
inline vpternlogq64 (zmm30_3, zmm15_3, zmm10_3, table);
inline vpternlogq64 (zmm30_4, zmm15_4, zmm10_4, table);
inline vpternlogq64 (zmm30_5, zmm15_5, zmm10_5, table);
inline vpternlogq64 (zmm30_6, zmm15_6, zmm10_6, table);
inline vpternlogq64 (zmm30_7, zmm15_7, zmm10_7, table);
(* vpternlogq $0xd2,%zmm16,%zmm10,%zmm31           #! PC = 0x55555558e73a *)
mov table 0xd2@uint8;
inline vpternlogq64 (zmm31_0, zmm10_0, zmm16_0, table);
inline vpternlogq64 (zmm31_1, zmm10_1, zmm16_1, table);
inline vpternlogq64 (zmm31_2, zmm10_2, zmm16_2, table);
inline vpternlogq64 (zmm31_3, zmm10_3, zmm16_3, table);
inline vpternlogq64 (zmm31_4, zmm10_4, zmm16_4, table);
inline vpternlogq64 (zmm31_5, zmm10_5, zmm16_5, table);
inline vpternlogq64 (zmm31_6, zmm10_6, zmm16_6, table);
inline vpternlogq64 (zmm31_7, zmm10_7, zmm16_7, table);
(* vpternlogq $0xd2,%zmm17,%zmm16,%zmm10           #! PC = 0x55555558e741 *)
mov table 0xd2@uint8;
inline vpternlogq64 (zmm10_0, zmm16_0, zmm17_0, table);
inline vpternlogq64 (zmm10_1, zmm16_1, zmm17_1, table);
inline vpternlogq64 (zmm10_2, zmm16_2, zmm17_2, table);
inline vpternlogq64 (zmm10_3, zmm16_3, zmm17_3, table);
inline vpternlogq64 (zmm10_4, zmm16_4, zmm17_4, table);
inline vpternlogq64 (zmm10_5, zmm16_5, zmm17_5, table);
inline vpternlogq64 (zmm10_6, zmm16_6, zmm17_6, table);
inline vpternlogq64 (zmm10_7, zmm16_7, zmm17_7, table);
(* vpternlogq $0xd2,%zmm11,%zmm17,%zmm16           #! PC = 0x55555558e748 *)
mov table 0xd2@uint8;
inline vpternlogq64 (zmm16_0, zmm17_0, zmm11_0, table);
inline vpternlogq64 (zmm16_1, zmm17_1, zmm11_1, table);
inline vpternlogq64 (zmm16_2, zmm17_2, zmm11_2, table);
inline vpternlogq64 (zmm16_3, zmm17_3, zmm11_3, table);
inline vpternlogq64 (zmm16_4, zmm17_4, zmm11_4, table);
inline vpternlogq64 (zmm16_5, zmm17_5, zmm11_5, table);
inline vpternlogq64 (zmm16_6, zmm17_6, zmm11_6, table);
inline vpternlogq64 (zmm16_7, zmm17_7, zmm11_7, table);
(* vpternlogq $0xd2,%zmm15,%zmm11,%zmm17           #! PC = 0x55555558e74f *)
mov table 0xd2@uint8;
inline vpternlogq64 (zmm17_0, zmm11_0, zmm15_0, table);
inline vpternlogq64 (zmm17_1, zmm11_1, zmm15_1, table);
inline vpternlogq64 (zmm17_2, zmm11_2, zmm15_2, table);
inline vpternlogq64 (zmm17_3, zmm11_3, zmm15_3, table);
inline vpternlogq64 (zmm17_4, zmm11_4, zmm15_4, table);
inline vpternlogq64 (zmm17_5, zmm11_5, zmm15_5, table);
inline vpternlogq64 (zmm17_6, zmm11_6, zmm15_6, table);
inline vpternlogq64 (zmm17_7, zmm11_7, zmm15_7, table);
(* vmovdqa64 %zmm26,%zmm15                         #! PC = 0x55555558e756 *)
mov zmm15_0 zmm26_0;
mov zmm15_1 zmm26_1;
mov zmm15_2 zmm26_2;
mov zmm15_3 zmm26_3;
mov zmm15_4 zmm26_4;
mov zmm15_5 zmm26_5;
mov zmm15_6 zmm26_6;
mov zmm15_7 zmm26_7;
(* vmovdqa64 %zmm18,%zmm11                         #! PC = 0x55555558e75c *)
mov zmm11_0 zmm18_0;
mov zmm11_1 zmm18_1;
mov zmm11_2 zmm18_2;
mov zmm11_3 zmm18_3;
mov zmm11_4 zmm18_4;
mov zmm11_5 zmm18_5;
mov zmm11_6 zmm18_6;
mov zmm11_7 zmm18_7;
(* vpternlogq $0xd2,%zmm2,%zmm18,%zmm15            #! PC = 0x55555558e762 *)
mov table 0xd2@uint8;
inline vpternlogq64 (zmm15_0, zmm18_0, zmm2_0, table);
inline vpternlogq64 (zmm15_1, zmm18_1, zmm2_1, table);
inline vpternlogq64 (zmm15_2, zmm18_2, zmm2_2, table);
inline vpternlogq64 (zmm15_3, zmm18_3, zmm2_3, table);
inline vpternlogq64 (zmm15_4, zmm18_4, zmm2_4, table);
inline vpternlogq64 (zmm15_5, zmm18_5, zmm2_5, table);
inline vpternlogq64 (zmm15_6, zmm18_6, zmm2_6, table);
inline vpternlogq64 (zmm15_7, zmm18_7, zmm2_7, table);
(* vpternlogq $0xd2,%zmm1,%zmm2,%zmm11             #! PC = 0x55555558e769 *)
mov table 0xd2@uint8;
inline vpternlogq64 (zmm11_0, zmm2_0, zmm1_0, table);
inline vpternlogq64 (zmm11_1, zmm2_1, zmm1_1, table);
inline vpternlogq64 (zmm11_2, zmm2_2, zmm1_2, table);
inline vpternlogq64 (zmm11_3, zmm2_3, zmm1_3, table);
inline vpternlogq64 (zmm11_4, zmm2_4, zmm1_4, table);
inline vpternlogq64 (zmm11_5, zmm2_5, zmm1_5, table);
inline vpternlogq64 (zmm11_6, zmm2_6, zmm1_6, table);
inline vpternlogq64 (zmm11_7, zmm2_7, zmm1_7, table);
(* vpternlogq $0xd2,%zmm23,%zmm1,%zmm2             #! PC = 0x55555558e770 *)
mov table 0xd2@uint8;
inline vpternlogq64 (zmm2_0, zmm1_0, zmm23_0, table);
inline vpternlogq64 (zmm2_1, zmm1_1, zmm23_1, table);
inline vpternlogq64 (zmm2_2, zmm1_2, zmm23_2, table);
inline vpternlogq64 (zmm2_3, zmm1_3, zmm23_3, table);
inline vpternlogq64 (zmm2_4, zmm1_4, zmm23_4, table);
inline vpternlogq64 (zmm2_5, zmm1_5, zmm23_5, table);
inline vpternlogq64 (zmm2_6, zmm1_6, zmm23_6, table);
inline vpternlogq64 (zmm2_7, zmm1_7, zmm23_7, table);
(* vpternlogq $0xd2,%zmm26,%zmm23,%zmm1            #! PC = 0x55555558e777 *)
mov table 0xd2@uint8;
inline vpternlogq64 (zmm1_0, zmm23_0, zmm26_0, table);
inline vpternlogq64 (zmm1_1, zmm23_1, zmm26_1, table);
inline vpternlogq64 (zmm1_2, zmm23_2, zmm26_2, table);
inline vpternlogq64 (zmm1_3, zmm23_3, zmm26_3, table);
inline vpternlogq64 (zmm1_4, zmm23_4, zmm26_4, table);
inline vpternlogq64 (zmm1_5, zmm23_5, zmm26_5, table);
inline vpternlogq64 (zmm1_6, zmm23_6, zmm26_6, table);
inline vpternlogq64 (zmm1_7, zmm23_7, zmm26_7, table);
(* vpternlogq $0xd2,%zmm18,%zmm26,%zmm23           #! PC = 0x55555558e77e *)
mov table 0xd2@uint8;
inline vpternlogq64 (zmm23_0, zmm26_0, zmm18_0, table);
inline vpternlogq64 (zmm23_1, zmm26_1, zmm18_1, table);
inline vpternlogq64 (zmm23_2, zmm26_2, zmm18_2, table);
inline vpternlogq64 (zmm23_3, zmm26_3, zmm18_3, table);
inline vpternlogq64 (zmm23_4, zmm26_4, zmm18_4, table);
inline vpternlogq64 (zmm23_5, zmm26_5, zmm18_5, table);
inline vpternlogq64 (zmm23_6, zmm26_6, zmm18_6, table);
inline vpternlogq64 (zmm23_7, zmm26_7, zmm18_7, table);
(* vmovdqa64 %zmm14,%zmm26                         #! PC = 0x55555558e785 *)
mov zmm26_0 zmm14_0;
mov zmm26_1 zmm14_1;
mov zmm26_2 zmm14_2;
mov zmm26_3 zmm14_3;
mov zmm26_4 zmm14_4;
mov zmm26_5 zmm14_5;
mov zmm26_6 zmm14_6;
mov zmm26_7 zmm14_7;
(* vmovdqa64 %zmm28,%zmm18                         #! PC = 0x55555558e78b *)
mov zmm18_0 zmm28_0;
mov zmm18_1 zmm28_1;
mov zmm18_2 zmm28_2;
mov zmm18_3 zmm28_3;
mov zmm18_4 zmm28_4;
mov zmm18_5 zmm28_5;
mov zmm18_6 zmm28_6;
mov zmm18_7 zmm28_7;
(* vpternlogq $0xd2,%zmm6,%zmm28,%zmm26            #! PC = 0x55555558e791 *)
mov table 0xd2@uint8;
inline vpternlogq64 (zmm26_0, zmm28_0, zmm6_0, table);
inline vpternlogq64 (zmm26_1, zmm28_1, zmm6_1, table);
inline vpternlogq64 (zmm26_2, zmm28_2, zmm6_2, table);
inline vpternlogq64 (zmm26_3, zmm28_3, zmm6_3, table);
inline vpternlogq64 (zmm26_4, zmm28_4, zmm6_4, table);
inline vpternlogq64 (zmm26_5, zmm28_5, zmm6_5, table);
inline vpternlogq64 (zmm26_6, zmm28_6, zmm6_6, table);
inline vpternlogq64 (zmm26_7, zmm28_7, zmm6_7, table);
(* vpternlogq $0xd2,%zmm7,%zmm6,%zmm18             #! PC = 0x55555558e798 *)
mov table 0xd2@uint8;
inline vpternlogq64 (zmm18_0, zmm6_0, zmm7_0, table);
inline vpternlogq64 (zmm18_1, zmm6_1, zmm7_1, table);
inline vpternlogq64 (zmm18_2, zmm6_2, zmm7_2, table);
inline vpternlogq64 (zmm18_3, zmm6_3, zmm7_3, table);
inline vpternlogq64 (zmm18_4, zmm6_4, zmm7_4, table);
inline vpternlogq64 (zmm18_5, zmm6_5, zmm7_5, table);
inline vpternlogq64 (zmm18_6, zmm6_6, zmm7_6, table);
inline vpternlogq64 (zmm18_7, zmm6_7, zmm7_7, table);
(* vmovdqa64 %zmm20,%zmm27                         #! PC = 0x55555558e79f *)
mov zmm27_0 zmm20_0;
mov zmm27_1 zmm20_1;
mov zmm27_2 zmm20_2;
mov zmm27_3 zmm20_3;
mov zmm27_4 zmm20_4;
mov zmm27_5 zmm20_5;
mov zmm27_6 zmm20_6;
mov zmm27_7 zmm20_7;
(* vpternlogq $0xd2,%zmm5,%zmm7,%zmm6              #! PC = 0x55555558e7a5 *)
mov table 0xd2@uint8;
inline vpternlogq64 (zmm6_0, zmm7_0, zmm5_0, table);
inline vpternlogq64 (zmm6_1, zmm7_1, zmm5_1, table);
inline vpternlogq64 (zmm6_2, zmm7_2, zmm5_2, table);
inline vpternlogq64 (zmm6_3, zmm7_3, zmm5_3, table);
inline vpternlogq64 (zmm6_4, zmm7_4, zmm5_4, table);
inline vpternlogq64 (zmm6_5, zmm7_5, zmm5_5, table);
inline vpternlogq64 (zmm6_6, zmm7_6, zmm5_6, table);
inline vpternlogq64 (zmm6_7, zmm7_7, zmm5_7, table);
(* vmovdqa64 %zmm3,%zmm21                          #! PC = 0x55555558e7ac *)
mov zmm21_0 zmm3_0;
mov zmm21_1 zmm3_1;
mov zmm21_2 zmm3_2;
mov zmm21_3 zmm3_3;
mov zmm21_4 zmm3_4;
mov zmm21_5 zmm3_5;
mov zmm21_6 zmm3_6;
mov zmm21_7 zmm3_7;
(* vpternlogq $0xd2,%zmm14,%zmm5,%zmm7             #! PC = 0x55555558e7b2 *)
mov table 0xd2@uint8;
inline vpternlogq64 (zmm7_0, zmm5_0, zmm14_0, table);
inline vpternlogq64 (zmm7_1, zmm5_1, zmm14_1, table);
inline vpternlogq64 (zmm7_2, zmm5_2, zmm14_2, table);
inline vpternlogq64 (zmm7_3, zmm5_3, zmm14_3, table);
inline vpternlogq64 (zmm7_4, zmm5_4, zmm14_4, table);
inline vpternlogq64 (zmm7_5, zmm5_5, zmm14_5, table);
inline vpternlogq64 (zmm7_6, zmm5_6, zmm14_6, table);
inline vpternlogq64 (zmm7_7, zmm5_7, zmm14_7, table);
(* vpternlogq $0xd2,%zmm28,%zmm14,%zmm5            #! PC = 0x55555558e7b9 *)
mov table 0xd2@uint8;
inline vpternlogq64 (zmm5_0, zmm14_0, zmm28_0, table);
inline vpternlogq64 (zmm5_1, zmm14_1, zmm28_1, table);
inline vpternlogq64 (zmm5_2, zmm14_2, zmm28_2, table);
inline vpternlogq64 (zmm5_3, zmm14_3, zmm28_3, table);
inline vpternlogq64 (zmm5_4, zmm14_4, zmm28_4, table);
inline vpternlogq64 (zmm5_5, zmm14_5, zmm28_5, table);
inline vpternlogq64 (zmm5_6, zmm14_6, zmm28_6, table);
inline vpternlogq64 (zmm5_7, zmm14_7, zmm28_7, table);
(* vmovdqa64 %zmm22,%zmm28                         #! PC = 0x55555558e7c0 *)
mov zmm28_0 zmm22_0;
mov zmm28_1 zmm22_1;
mov zmm28_2 zmm22_2;
mov zmm28_3 zmm22_3;
mov zmm28_4 zmm22_4;
mov zmm28_5 zmm22_5;
mov zmm28_6 zmm22_6;
mov zmm28_7 zmm22_7;
(* vpternlogq $0xd2,%zmm0,%zmm19,%zmm28            #! PC = 0x55555558e7c6 *)
mov table 0xd2@uint8;
inline vpternlogq64 (zmm28_0, zmm19_0, zmm0_0, table);
inline vpternlogq64 (zmm28_1, zmm19_1, zmm0_1, table);
inline vpternlogq64 (zmm28_2, zmm19_2, zmm0_2, table);
inline vpternlogq64 (zmm28_3, zmm19_3, zmm0_3, table);
inline vpternlogq64 (zmm28_4, zmm19_4, zmm0_4, table);
inline vpternlogq64 (zmm28_5, zmm19_5, zmm0_5, table);
inline vpternlogq64 (zmm28_6, zmm19_6, zmm0_6, table);
inline vpternlogq64 (zmm28_7, zmm19_7, zmm0_7, table);
(* vpternlogq $0xd2,%zmm19,%zmm22,%zmm27           #! PC = 0x55555558e7cd *)
mov table 0xd2@uint8;
inline vpternlogq64 (zmm27_0, zmm22_0, zmm19_0, table);
inline vpternlogq64 (zmm27_1, zmm22_1, zmm19_1, table);
inline vpternlogq64 (zmm27_2, zmm22_2, zmm19_2, table);
inline vpternlogq64 (zmm27_3, zmm22_3, zmm19_3, table);
inline vpternlogq64 (zmm27_4, zmm22_4, zmm19_4, table);
inline vpternlogq64 (zmm27_5, zmm22_5, zmm19_5, table);
inline vpternlogq64 (zmm27_6, zmm22_6, zmm19_6, table);
inline vpternlogq64 (zmm27_7, zmm22_7, zmm19_7, table);
(* vpternlogq $0x96,%zmm2,%zmm10,%zmm21            #! PC = 0x55555558e7d4 *)
mov table 0x96@uint8;
inline vpternlogq64 (zmm21_0, zmm10_0, zmm2_0, table);
inline vpternlogq64 (zmm21_1, zmm10_1, zmm2_1, table);
inline vpternlogq64 (zmm21_2, zmm10_2, zmm2_2, table);
inline vpternlogq64 (zmm21_3, zmm10_3, zmm2_3, table);
inline vpternlogq64 (zmm21_4, zmm10_4, zmm2_4, table);
inline vpternlogq64 (zmm21_5, zmm10_5, zmm2_5, table);
inline vpternlogq64 (zmm21_6, zmm10_6, zmm2_6, table);
inline vpternlogq64 (zmm21_7, zmm10_7, zmm2_7, table);
(* vpternlogq $0xd2,%zmm8,%zmm0,%zmm19             #! PC = 0x55555558e7db *)
mov table 0xd2@uint8;
inline vpternlogq64 (zmm19_0, zmm0_0, zmm8_0, table);
inline vpternlogq64 (zmm19_1, zmm0_1, zmm8_1, table);
inline vpternlogq64 (zmm19_2, zmm0_2, zmm8_2, table);
inline vpternlogq64 (zmm19_3, zmm0_3, zmm8_3, table);
inline vpternlogq64 (zmm19_4, zmm0_4, zmm8_4, table);
inline vpternlogq64 (zmm19_5, zmm0_5, zmm8_5, table);
inline vpternlogq64 (zmm19_6, zmm0_6, zmm8_6, table);
inline vpternlogq64 (zmm19_7, zmm0_7, zmm8_7, table);
(* vpternlogq $0x96,%zmm19,%zmm6,%zmm21            #! PC = 0x55555558e7e2 *)
mov table 0x96@uint8;
inline vpternlogq64 (zmm21_0, zmm6_0, zmm19_0, table);
inline vpternlogq64 (zmm21_1, zmm6_1, zmm19_1, table);
inline vpternlogq64 (zmm21_2, zmm6_2, zmm19_2, table);
inline vpternlogq64 (zmm21_3, zmm6_3, zmm19_3, table);
inline vpternlogq64 (zmm21_4, zmm6_4, zmm19_4, table);
inline vpternlogq64 (zmm21_5, zmm6_5, zmm19_5, table);
inline vpternlogq64 (zmm21_6, zmm6_6, zmm19_6, table);
inline vpternlogq64 (zmm21_7, zmm6_7, zmm19_7, table);
(* vprolq $0x1,%zmm21,%zmm14                       #! PC = 0x55555558e7e9 *)
rol zmm14_0 zmm21_0 0x1;
rol zmm14_1 zmm21_1 0x1;
rol zmm14_2 zmm21_2 0x1;
rol zmm14_3 zmm21_3 0x1;
rol zmm14_4 zmm21_4 0x1;
rol zmm14_5 zmm21_5 0x1;
rol zmm14_6 zmm21_6 0x1;
rol zmm14_7 zmm21_7 0x1;
(* vpternlogq $0xd2,%zmm20,%zmm8,%zmm0             #! PC = 0x55555558e7f0 *)
mov table 0xd2@uint8;
inline vpternlogq64 (zmm0_0, zmm8_0, zmm20_0, table);
inline vpternlogq64 (zmm0_1, zmm8_1, zmm20_1, table);
inline vpternlogq64 (zmm0_2, zmm8_2, zmm20_2, table);
inline vpternlogq64 (zmm0_3, zmm8_3, zmm20_3, table);
inline vpternlogq64 (zmm0_4, zmm8_4, zmm20_4, table);
inline vpternlogq64 (zmm0_5, zmm8_5, zmm20_5, table);
inline vpternlogq64 (zmm0_6, zmm8_6, zmm20_6, table);
inline vpternlogq64 (zmm0_7, zmm8_7, zmm20_7, table);
(* vpternlogq $0xd2,%zmm22,%zmm20,%zmm8            #! PC = 0x55555558e7f7 *)
mov table 0xd2@uint8;
inline vpternlogq64 (zmm8_0, zmm20_0, zmm22_0, table);
inline vpternlogq64 (zmm8_1, zmm20_1, zmm22_1, table);
inline vpternlogq64 (zmm8_2, zmm20_2, zmm22_2, table);
inline vpternlogq64 (zmm8_3, zmm20_3, zmm22_3, table);
inline vpternlogq64 (zmm8_4, zmm20_4, zmm22_4, table);
inline vpternlogq64 (zmm8_5, zmm20_5, zmm22_5, table);
inline vpternlogq64 (zmm8_6, zmm20_6, zmm22_6, table);
inline vpternlogq64 (zmm8_7, zmm20_7, zmm22_7, table);
(* vmovdqa64 %zmm9,%zmm22                          #! PC = 0x55555558e7fe *)
mov zmm22_0 zmm9_0;
mov zmm22_1 zmm9_1;
mov zmm22_2 zmm9_2;
mov zmm22_3 zmm9_3;
mov zmm22_4 zmm9_4;
mov zmm22_5 zmm9_5;
mov zmm22_6 zmm9_6;
mov zmm22_7 zmm9_7;
(* vpternlogq $0x96,%zmm1,%zmm16,%zmm22            #! PC = 0x55555558e804 *)
mov table 0x96@uint8;
inline vpternlogq64 (zmm22_0, zmm16_0, zmm1_0, table);
inline vpternlogq64 (zmm22_1, zmm16_1, zmm1_1, table);
inline vpternlogq64 (zmm22_2, zmm16_2, zmm1_2, table);
inline vpternlogq64 (zmm22_3, zmm16_3, zmm1_3, table);
inline vpternlogq64 (zmm22_4, zmm16_4, zmm1_4, table);
inline vpternlogq64 (zmm22_5, zmm16_5, zmm1_5, table);
inline vpternlogq64 (zmm22_6, zmm16_6, zmm1_6, table);
inline vpternlogq64 (zmm22_7, zmm16_7, zmm1_7, table);
(* vpternlogq $0x96,%zmm0,%zmm7,%zmm22             #! PC = 0x55555558e80b *)
mov table 0x96@uint8;
inline vpternlogq64 (zmm22_0, zmm7_0, zmm0_0, table);
inline vpternlogq64 (zmm22_1, zmm7_1, zmm0_1, table);
inline vpternlogq64 (zmm22_2, zmm7_2, zmm0_2, table);
inline vpternlogq64 (zmm22_3, zmm7_3, zmm0_3, table);
inline vpternlogq64 (zmm22_4, zmm7_4, zmm0_4, table);
inline vpternlogq64 (zmm22_5, zmm7_5, zmm0_5, table);
inline vpternlogq64 (zmm22_6, zmm7_6, zmm0_6, table);
inline vpternlogq64 (zmm22_7, zmm7_7, zmm0_7, table);
(* vmovdqa64 %zmm14,0x148(%rsp)                    #! EA = L0x7fffffffd600; PC = 0x55555558e812 *)
mov L0x7fffffffd600 zmm14_0;
mov L0x7fffffffd608 zmm14_1;
mov L0x7fffffffd610 zmm14_2;
mov L0x7fffffffd618 zmm14_3;
mov L0x7fffffffd620 zmm14_4;
mov L0x7fffffffd628 zmm14_5;
mov L0x7fffffffd630 zmm14_6;
mov L0x7fffffffd638 zmm14_7;
(* vprolq $0x1,%zmm22,%zmm14                       #! PC = 0x55555558e81d *)
rol zmm14_0 zmm22_0 0x1;
rol zmm14_1 zmm22_1 0x1;
rol zmm14_2 zmm22_2 0x1;
rol zmm14_3 zmm22_3 0x1;
rol zmm14_4 zmm22_4 0x1;
rol zmm14_5 zmm22_5 0x1;
rol zmm14_6 zmm22_6 0x1;
rol zmm14_7 zmm22_7 0x1;
(* vmovdqa64 %zmm13,%zmm4                          #! PC = 0x55555558e824 *)
mov zmm4_0 zmm13_0;
mov zmm4_1 zmm13_1;
mov zmm4_2 zmm13_2;
mov zmm4_3 zmm13_3;
mov zmm4_4 zmm13_4;
mov zmm4_5 zmm13_5;
mov zmm4_6 zmm13_6;
mov zmm4_7 zmm13_7;
(* vpternlogq $0x96,%zmm23,%zmm17,%zmm4            #! PC = 0x55555558e82a *)
mov table 0x96@uint8;
inline vpternlogq64 (zmm4_0, zmm17_0, zmm23_0, table);
inline vpternlogq64 (zmm4_1, zmm17_1, zmm23_1, table);
inline vpternlogq64 (zmm4_2, zmm17_2, zmm23_2, table);
inline vpternlogq64 (zmm4_3, zmm17_3, zmm23_3, table);
inline vpternlogq64 (zmm4_4, zmm17_4, zmm23_4, table);
inline vpternlogq64 (zmm4_5, zmm17_5, zmm23_5, table);
inline vpternlogq64 (zmm4_6, zmm17_6, zmm23_6, table);
inline vpternlogq64 (zmm4_7, zmm17_7, zmm23_7, table);
(* vpternlogq $0x96,%zmm8,%zmm5,%zmm4              #! PC = 0x55555558e831 *)
mov table 0x96@uint8;
inline vpternlogq64 (zmm4_0, zmm5_0, zmm8_0, table);
inline vpternlogq64 (zmm4_1, zmm5_1, zmm8_1, table);
inline vpternlogq64 (zmm4_2, zmm5_2, zmm8_2, table);
inline vpternlogq64 (zmm4_3, zmm5_3, zmm8_3, table);
inline vpternlogq64 (zmm4_4, zmm5_4, zmm8_4, table);
inline vpternlogq64 (zmm4_5, zmm5_5, zmm8_5, table);
inline vpternlogq64 (zmm4_6, zmm5_6, zmm8_6, table);
inline vpternlogq64 (zmm4_7, zmm5_7, zmm8_7, table);
(* vmovdqa64 %zmm24,%zmm12                         #! PC = 0x55555558e838 *)
mov zmm12_0 zmm24_0;
mov zmm12_1 zmm24_1;
mov zmm12_2 zmm24_2;
mov zmm12_3 zmm24_3;
mov zmm12_4 zmm24_4;
mov zmm12_5 zmm24_5;
mov zmm12_6 zmm24_6;
mov zmm12_7 zmm24_7;
(* vpternlogq $0x96,%zmm15,%zmm30,%zmm12           #! PC = 0x55555558e83e *)
mov table 0x96@uint8;
inline vpternlogq64 (zmm12_0, zmm30_0, zmm15_0, table);
inline vpternlogq64 (zmm12_1, zmm30_1, zmm15_1, table);
inline vpternlogq64 (zmm12_2, zmm30_2, zmm15_2, table);
inline vpternlogq64 (zmm12_3, zmm30_3, zmm15_3, table);
inline vpternlogq64 (zmm12_4, zmm30_4, zmm15_4, table);
inline vpternlogq64 (zmm12_5, zmm30_5, zmm15_5, table);
inline vpternlogq64 (zmm12_6, zmm30_6, zmm15_6, table);
inline vpternlogq64 (zmm12_7, zmm30_7, zmm15_7, table);
(* vmovdqa64 %zmm14,0x108(%rsp)                    #! EA = L0x7fffffffd5c0; PC = 0x55555558e845 *)
mov L0x7fffffffd5c0 zmm14_0;
mov L0x7fffffffd5c8 zmm14_1;
mov L0x7fffffffd5d0 zmm14_2;
mov L0x7fffffffd5d8 zmm14_3;
mov L0x7fffffffd5e0 zmm14_4;
mov L0x7fffffffd5e8 zmm14_5;
mov L0x7fffffffd5f0 zmm14_6;
mov L0x7fffffffd5f8 zmm14_7;
(* vprolq $0x1,%zmm4,%zmm14                        #! PC = 0x55555558e850 *)
rol zmm14_0 zmm4_0 0x1;
rol zmm14_1 zmm4_1 0x1;
rol zmm14_2 zmm4_2 0x1;
rol zmm14_3 zmm4_3 0x1;
rol zmm14_4 zmm4_4 0x1;
rol zmm14_5 zmm4_5 0x1;
rol zmm14_6 zmm4_6 0x1;
rol zmm14_7 zmm4_7 0x1;
(* vpternlogq $0x96,%zmm27,%zmm26,%zmm12           #! PC = 0x55555558e857 *)
mov table 0x96@uint8;
inline vpternlogq64 (zmm12_0, zmm26_0, zmm27_0, table);
inline vpternlogq64 (zmm12_1, zmm26_1, zmm27_1, table);
inline vpternlogq64 (zmm12_2, zmm26_2, zmm27_2, table);
inline vpternlogq64 (zmm12_3, zmm26_3, zmm27_3, table);
inline vpternlogq64 (zmm12_4, zmm26_4, zmm27_4, table);
inline vpternlogq64 (zmm12_5, zmm26_5, zmm27_5, table);
inline vpternlogq64 (zmm12_6, zmm26_6, zmm27_6, table);
inline vpternlogq64 (zmm12_7, zmm26_7, zmm27_7, table);
(* vmovdqa64 %zmm25,%zmm20                         #! PC = 0x55555558e85e *)
mov zmm20_0 zmm25_0;
mov zmm20_1 zmm25_1;
mov zmm20_2 zmm25_2;
mov zmm20_3 zmm25_3;
mov zmm20_4 zmm25_4;
mov zmm20_5 zmm25_5;
mov zmm20_6 zmm25_6;
mov zmm20_7 zmm25_7;
(* vpternlogq $0x96,%zmm11,%zmm31,%zmm20           #! PC = 0x55555558e864 *)
mov table 0x96@uint8;
inline vpternlogq64 (zmm20_0, zmm31_0, zmm11_0, table);
inline vpternlogq64 (zmm20_1, zmm31_1, zmm11_1, table);
inline vpternlogq64 (zmm20_2, zmm31_2, zmm11_2, table);
inline vpternlogq64 (zmm20_3, zmm31_3, zmm11_3, table);
inline vpternlogq64 (zmm20_4, zmm31_4, zmm11_4, table);
inline vpternlogq64 (zmm20_5, zmm31_5, zmm11_5, table);
inline vpternlogq64 (zmm20_6, zmm31_6, zmm11_6, table);
inline vpternlogq64 (zmm20_7, zmm31_7, zmm11_7, table);
(* vpternlogq $0x96,%zmm28,%zmm18,%zmm20           #! PC = 0x55555558e86b *)
mov table 0x96@uint8;
inline vpternlogq64 (zmm20_0, zmm18_0, zmm28_0, table);
inline vpternlogq64 (zmm20_1, zmm18_1, zmm28_1, table);
inline vpternlogq64 (zmm20_2, zmm18_2, zmm28_2, table);
inline vpternlogq64 (zmm20_3, zmm18_3, zmm28_3, table);
inline vpternlogq64 (zmm20_4, zmm18_4, zmm28_4, table);
inline vpternlogq64 (zmm20_5, zmm18_5, zmm28_5, table);
inline vpternlogq64 (zmm20_6, zmm18_6, zmm28_6, table);
inline vpternlogq64 (zmm20_7, zmm18_7, zmm28_7, table);
(* vprolq $0x1,%zmm20,%zmm29                       #! PC = 0x55555558e872 *)
rol zmm29_0 zmm20_0 0x1;
rol zmm29_1 zmm20_1 0x1;
rol zmm29_2 zmm20_2 0x1;
rol zmm29_3 zmm20_3 0x1;
rol zmm29_4 zmm20_4 0x1;
rol zmm29_5 zmm20_5 0x1;
rol zmm29_6 zmm20_6 0x1;
rol zmm29_7 zmm20_7 0x1;
(* vmovdqa64 %zmm14,0xc8(%rsp)                     #! EA = L0x7fffffffd580; PC = 0x55555558e879 *)
mov L0x7fffffffd580 zmm14_0;
mov L0x7fffffffd588 zmm14_1;
mov L0x7fffffffd590 zmm14_2;
mov L0x7fffffffd598 zmm14_3;
mov L0x7fffffffd5a0 zmm14_4;
mov L0x7fffffffd5a8 zmm14_5;
mov L0x7fffffffd5b0 zmm14_6;
mov L0x7fffffffd5b8 zmm14_7;
(* vprolq $0x1,%zmm12,%zmm14                       #! PC = 0x55555558e884 *)
rol zmm14_0 zmm12_0 0x1;
rol zmm14_1 zmm12_1 0x1;
rol zmm14_2 zmm12_2 0x1;
rol zmm14_3 zmm12_3 0x1;
rol zmm14_4 zmm12_4 0x1;
rol zmm14_5 zmm12_5 0x1;
rol zmm14_6 zmm12_6 0x1;
rol zmm14_7 zmm12_7 0x1;
(* vpxord 0x148(%rsp),%zmm12,%zmm12                #! EA = L0x7fffffffd600; Value = 0x1405403961228b32; PC = 0x55555558e88b *)
xor zmm12_0@uint64 zmm12_0 L0x7fffffffd600;
xor zmm12_1@uint64 zmm12_1 L0x7fffffffd608;
xor zmm12_2@uint64 zmm12_2 L0x7fffffffd610;
xor zmm12_3@uint64 zmm12_3 L0x7fffffffd618;
xor zmm12_4@uint64 zmm12_4 L0x7fffffffd620;
xor zmm12_5@uint64 zmm12_5 L0x7fffffffd628;
xor zmm12_6@uint64 zmm12_6 L0x7fffffffd630;
xor zmm12_7@uint64 zmm12_7 L0x7fffffffd638;
(* vpxord 0x108(%rsp),%zmm20,%zmm20                #! EA = L0x7fffffffd5c0; Value = 0x011e89d087211527; PC = 0x55555558e896 *)
xor zmm20_0@uint64 zmm20_0 L0x7fffffffd5c0;
xor zmm20_1@uint64 zmm20_1 L0x7fffffffd5c8;
xor zmm20_2@uint64 zmm20_2 L0x7fffffffd5d0;
xor zmm20_3@uint64 zmm20_3 L0x7fffffffd5d8;
xor zmm20_4@uint64 zmm20_4 L0x7fffffffd5e0;
xor zmm20_5@uint64 zmm20_5 L0x7fffffffd5e8;
xor zmm20_6@uint64 zmm20_6 L0x7fffffffd5f0;
xor zmm20_7@uint64 zmm20_7 L0x7fffffffd5f8;
(* vpxord 0xc8(%rsp),%zmm21,%zmm21                 #! EA = L0x7fffffffd580; Value = 0x380c373e1b52b9c7; PC = 0x55555558e8a1 *)
xor zmm21_0@uint64 zmm21_0 L0x7fffffffd580;
xor zmm21_1@uint64 zmm21_1 L0x7fffffffd588;
xor zmm21_2@uint64 zmm21_2 L0x7fffffffd590;
xor zmm21_3@uint64 zmm21_3 L0x7fffffffd598;
xor zmm21_4@uint64 zmm21_4 L0x7fffffffd5a0;
xor zmm21_5@uint64 zmm21_5 L0x7fffffffd5a8;
xor zmm21_6@uint64 zmm21_6 L0x7fffffffd5b0;
xor zmm21_7@uint64 zmm21_7 L0x7fffffffd5b8;
(* vpxord %zmm31,%zmm12,%zmm31                     #! PC = 0x55555558e8ac *)
xor zmm31_0@uint64 zmm12_0 zmm31_0;
xor zmm31_1@uint64 zmm12_1 zmm31_1;
xor zmm31_2@uint64 zmm12_2 zmm31_2;
xor zmm31_3@uint64 zmm12_3 zmm31_3;
xor zmm31_4@uint64 zmm12_4 zmm31_4;
xor zmm31_5@uint64 zmm12_5 zmm31_5;
xor zmm31_6@uint64 zmm12_6 zmm31_6;
xor zmm31_7@uint64 zmm12_7 zmm31_7;
(* vprorq $0x14,%zmm31,%zmm31                      #! PC = 0x55555558e8b2 *)
ror zmm31_0 zmm31_0 0x14;
ror zmm31_1 zmm31_1 0x14;
ror zmm31_2 zmm31_2 0x14;
ror zmm31_3 zmm31_3 0x14;
ror zmm31_4 zmm31_4 0x14;
ror zmm31_5 zmm31_5 0x14;
ror zmm31_6 zmm31_6 0x14;
ror zmm31_7 zmm31_7 0x14;
(* vpxord %zmm14,%zmm22,%zmm14                     #! PC = 0x55555558e8b9 *)
xor zmm14_0@uint64 zmm22_0 zmm14_0;
xor zmm14_1@uint64 zmm22_1 zmm14_1;
xor zmm14_2@uint64 zmm22_2 zmm14_2;
xor zmm14_3@uint64 zmm22_3 zmm14_3;
xor zmm14_4@uint64 zmm22_4 zmm14_4;
xor zmm14_5@uint64 zmm22_5 zmm14_5;
xor zmm14_6@uint64 zmm22_6 zmm14_6;
xor zmm14_7@uint64 zmm22_7 zmm14_7;
(* vpxord %zmm2,%zmm20,%zmm2                       #! PC = 0x55555558e8bf *)
xor zmm2_0@uint64 zmm20_0 zmm2_0;
xor zmm2_1@uint64 zmm20_1 zmm2_1;
xor zmm2_2@uint64 zmm20_2 zmm2_2;
xor zmm2_3@uint64 zmm20_3 zmm2_3;
xor zmm2_4@uint64 zmm20_4 zmm2_4;
xor zmm2_5@uint64 zmm20_5 zmm2_5;
xor zmm2_6@uint64 zmm20_6 zmm2_6;
xor zmm2_7@uint64 zmm20_7 zmm2_7;
(* vpxord %zmm7,%zmm21,%zmm7                       #! PC = 0x55555558e8c5 *)
xor zmm7_0@uint64 zmm21_0 zmm7_0;
xor zmm7_1@uint64 zmm21_1 zmm7_1;
xor zmm7_2@uint64 zmm21_2 zmm7_2;
xor zmm7_3@uint64 zmm21_3 zmm7_3;
xor zmm7_4@uint64 zmm21_4 zmm7_4;
xor zmm7_5@uint64 zmm21_5 zmm7_5;
xor zmm7_6@uint64 zmm21_6 zmm7_6;
xor zmm7_7@uint64 zmm21_7 zmm7_7;
(* vpxord %zmm8,%zmm14,%zmm8                       #! PC = 0x55555558e8cb *)
xor zmm8_0@uint64 zmm14_0 zmm8_0;
xor zmm8_1@uint64 zmm14_1 zmm8_1;
xor zmm8_2@uint64 zmm14_2 zmm8_2;
xor zmm8_3@uint64 zmm14_3 zmm8_3;
xor zmm8_4@uint64 zmm14_4 zmm8_4;
xor zmm8_5@uint64 zmm14_5 zmm8_5;
xor zmm8_6@uint64 zmm14_6 zmm8_6;
xor zmm8_7@uint64 zmm14_7 zmm8_7;
(* vpxord %zmm29,%zmm4,%zmm4                       #! PC = 0x55555558e8d1 *)
xor zmm4_0@uint64 zmm4_0 zmm29_0;
xor zmm4_1@uint64 zmm4_1 zmm29_1;
xor zmm4_2@uint64 zmm4_2 zmm29_2;
xor zmm4_3@uint64 zmm4_3 zmm29_3;
xor zmm4_4@uint64 zmm4_4 zmm29_4;
xor zmm4_5@uint64 zmm4_5 zmm29_5;
xor zmm4_6@uint64 zmm4_6 zmm29_6;
xor zmm4_7@uint64 zmm4_7 zmm29_7;
(* vprorq $0x15,%zmm2,%zmm2                        #! PC = 0x55555558e8d7 *)
ror zmm2_0 zmm2_0 0x15;
ror zmm2_1 zmm2_1 0x15;
ror zmm2_2 zmm2_2 0x15;
ror zmm2_3 zmm2_3 0x15;
ror zmm2_4 zmm2_4 0x15;
ror zmm2_5 zmm2_5 0x15;
ror zmm2_6 zmm2_6 0x15;
ror zmm2_7 zmm2_7 0x15;
(* vprolq $0x15,%zmm7,%zmm7                        #! PC = 0x55555558e8de *)
rol zmm7_0 zmm7_0 0x15;
rol zmm7_1 zmm7_1 0x15;
rol zmm7_2 zmm7_2 0x15;
rol zmm7_3 zmm7_3 0x15;
rol zmm7_4 zmm7_4 0x15;
rol zmm7_5 zmm7_5 0x15;
rol zmm7_6 zmm7_6 0x15;
rol zmm7_7 zmm7_7 0x15;
(* vprolq $0xe,%zmm8,%zmm8                         #! PC = 0x55555558e8e5 *)
rol zmm8_0 zmm8_0 0xe;
rol zmm8_1 zmm8_1 0xe;
rol zmm8_2 zmm8_2 0xe;
rol zmm8_3 zmm8_3 0xe;
rol zmm8_4 zmm8_4 0xe;
rol zmm8_5 zmm8_5 0xe;
rol zmm8_6 zmm8_6 0xe;
rol zmm8_7 zmm8_7 0xe;
(* vpxord %zmm19,%zmm20,%zmm19                     #! PC = 0x55555558e8ec *)
xor zmm19_0@uint64 zmm20_0 zmm19_0;
xor zmm19_1@uint64 zmm20_1 zmm19_1;
xor zmm19_2@uint64 zmm20_2 zmm19_2;
xor zmm19_3@uint64 zmm20_3 zmm19_3;
xor zmm19_4@uint64 zmm20_4 zmm19_4;
xor zmm19_5@uint64 zmm20_5 zmm19_5;
xor zmm19_6@uint64 zmm20_6 zmm19_6;
xor zmm19_7@uint64 zmm20_7 zmm19_7;
(* vpxord %zmm9,%zmm21,%zmm9                       #! PC = 0x55555558e8f2 *)
xor zmm9_0@uint64 zmm21_0 zmm9_0;
xor zmm9_1@uint64 zmm21_1 zmm9_1;
xor zmm9_2@uint64 zmm21_2 zmm9_2;
xor zmm9_3@uint64 zmm21_3 zmm9_3;
xor zmm9_4@uint64 zmm21_4 zmm9_4;
xor zmm9_5@uint64 zmm21_5 zmm9_5;
xor zmm9_6@uint64 zmm21_6 zmm9_6;
xor zmm9_7@uint64 zmm21_7 zmm9_7;
(* vpxord %zmm17,%zmm14,%zmm17                     #! PC = 0x55555558e8f8 *)
xor zmm17_0@uint64 zmm14_0 zmm17_0;
xor zmm17_1@uint64 zmm14_1 zmm17_1;
xor zmm17_2@uint64 zmm14_2 zmm17_2;
xor zmm17_3@uint64 zmm14_3 zmm17_3;
xor zmm17_4@uint64 zmm14_4 zmm17_4;
xor zmm17_5@uint64 zmm14_5 zmm17_5;
xor zmm17_6@uint64 zmm14_6 zmm17_6;
xor zmm17_7@uint64 zmm14_7 zmm17_7;
(* vpxord %zmm10,%zmm20,%zmm10                     #! PC = 0x55555558e8fe *)
xor zmm10_0@uint64 zmm20_0 zmm10_0;
xor zmm10_1@uint64 zmm20_1 zmm10_1;
xor zmm10_2@uint64 zmm20_2 zmm10_2;
xor zmm10_3@uint64 zmm20_3 zmm10_3;
xor zmm10_4@uint64 zmm20_4 zmm10_4;
xor zmm10_5@uint64 zmm20_5 zmm10_5;
xor zmm10_6@uint64 zmm20_6 zmm10_6;
xor zmm10_7@uint64 zmm20_7 zmm10_7;
(* vpxord %zmm1,%zmm21,%zmm1                       #! PC = 0x55555558e904 *)
xor zmm1_0@uint64 zmm21_0 zmm1_0;
xor zmm1_1@uint64 zmm21_1 zmm1_1;
xor zmm1_2@uint64 zmm21_2 zmm1_2;
xor zmm1_3@uint64 zmm21_3 zmm1_3;
xor zmm1_4@uint64 zmm21_4 zmm1_4;
xor zmm1_5@uint64 zmm21_5 zmm1_5;
xor zmm1_6@uint64 zmm21_6 zmm1_6;
xor zmm1_7@uint64 zmm21_7 zmm1_7;
(* vpxord %zmm6,%zmm20,%zmm6                       #! PC = 0x55555558e90a *)
xor zmm6_0@uint64 zmm20_0 zmm6_0;
xor zmm6_1@uint64 zmm20_1 zmm6_1;
xor zmm6_2@uint64 zmm20_2 zmm6_2;
xor zmm6_3@uint64 zmm20_3 zmm6_3;
xor zmm6_4@uint64 zmm20_4 zmm6_4;
xor zmm6_5@uint64 zmm20_5 zmm6_5;
xor zmm6_6@uint64 zmm20_6 zmm6_6;
xor zmm6_7@uint64 zmm20_7 zmm6_7;
(* vpxord %zmm0,%zmm21,%zmm0                       #! PC = 0x55555558e910 *)
xor zmm0_0@uint64 zmm21_0 zmm0_0;
xor zmm0_1@uint64 zmm21_1 zmm0_1;
xor zmm0_2@uint64 zmm21_2 zmm0_2;
xor zmm0_3@uint64 zmm21_3 zmm0_3;
xor zmm0_4@uint64 zmm21_4 zmm0_4;
xor zmm0_5@uint64 zmm21_5 zmm0_5;
xor zmm0_6@uint64 zmm21_6 zmm0_6;
xor zmm0_7@uint64 zmm21_7 zmm0_7;
(* vpxord %zmm3,%zmm20,%zmm20                      #! PC = 0x55555558e916 *)
xor zmm20_0@uint64 zmm20_0 zmm3_0;
xor zmm20_1@uint64 zmm20_1 zmm3_1;
xor zmm20_2@uint64 zmm20_2 zmm3_2;
xor zmm20_3@uint64 zmm20_3 zmm3_3;
xor zmm20_4@uint64 zmm20_4 zmm3_4;
xor zmm20_5@uint64 zmm20_5 zmm3_5;
xor zmm20_6@uint64 zmm20_6 zmm3_6;
xor zmm20_7@uint64 zmm20_7 zmm3_7;
(* vpxord %zmm16,%zmm21,%zmm21                     #! PC = 0x55555558e91c *)
xor zmm21_0@uint64 zmm21_0 zmm16_0;
xor zmm21_1@uint64 zmm21_1 zmm16_1;
xor zmm21_2@uint64 zmm21_2 zmm16_2;
xor zmm21_3@uint64 zmm21_3 zmm16_3;
xor zmm21_4@uint64 zmm21_4 zmm16_4;
xor zmm21_5@uint64 zmm21_5 zmm16_5;
xor zmm21_6@uint64 zmm21_6 zmm16_6;
xor zmm21_7@uint64 zmm21_7 zmm16_7;
(* vpxord %zmm4,%zmm24,%zmm24                      #! PC = 0x55555558e922 *)
xor zmm24_0@uint64 zmm24_0 zmm4_0;
xor zmm24_1@uint64 zmm24_1 zmm4_1;
xor zmm24_2@uint64 zmm24_2 zmm4_2;
xor zmm24_3@uint64 zmm24_3 zmm4_3;
xor zmm24_4@uint64 zmm24_4 zmm4_4;
xor zmm24_5@uint64 zmm24_5 zmm4_5;
xor zmm24_6@uint64 zmm24_6 zmm4_6;
xor zmm24_7@uint64 zmm24_7 zmm4_7;
(* vprolq $0x1c,%zmm9,%zmm9                        #! PC = 0x55555558e928 *)
rol zmm9_0 zmm9_0 0x1c;
rol zmm9_1 zmm9_1 0x1c;
rol zmm9_2 zmm9_2 0x1c;
rol zmm9_3 zmm9_3 0x1c;
rol zmm9_4 zmm9_4 0x1c;
rol zmm9_5 zmm9_5 0x1c;
rol zmm9_6 zmm9_6 0x1c;
rol zmm9_7 zmm9_7 0x1c;
(* vprolq $0x14,%zmm17,%zmm17                      #! PC = 0x55555558e92f *)
rol zmm17_0 zmm17_0 0x14;
rol zmm17_1 zmm17_1 0x14;
rol zmm17_2 zmm17_2 0x14;
rol zmm17_3 zmm17_3 0x14;
rol zmm17_4 zmm17_4 0x14;
rol zmm17_5 zmm17_5 0x14;
rol zmm17_6 zmm17_6 0x14;
rol zmm17_7 zmm17_7 0x14;
(* vprorq $0x2,%zmm20,%zmm20                       #! PC = 0x55555558e936 *)
ror zmm20_0 zmm20_0 0x2;
ror zmm20_1 zmm20_1 0x2;
ror zmm20_2 zmm20_2 0x2;
ror zmm20_3 zmm20_3 0x2;
ror zmm20_4 zmm20_4 0x2;
ror zmm20_5 zmm20_5 0x2;
ror zmm20_6 zmm20_6 0x2;
ror zmm20_7 zmm20_7 0x2;
(* vprorq $0x9,%zmm21,%zmm21                       #! PC = 0x55555558e93d *)
ror zmm21_0 zmm21_0 0x9;
ror zmm21_1 zmm21_1 0x9;
ror zmm21_2 zmm21_2 0x9;
ror zmm21_3 zmm21_3 0x9;
ror zmm21_4 zmm21_4 0x9;
ror zmm21_5 zmm21_5 0x9;
ror zmm21_6 zmm21_6 0x9;
ror zmm21_7 zmm21_7 0x9;
(* vpxord %zmm15,%zmm4,%zmm15                      #! PC = 0x55555558e944 *)
xor zmm15_0@uint64 zmm4_0 zmm15_0;
xor zmm15_1@uint64 zmm4_1 zmm15_1;
xor zmm15_2@uint64 zmm4_2 zmm15_2;
xor zmm15_3@uint64 zmm4_3 zmm15_3;
xor zmm15_4@uint64 zmm4_4 zmm15_4;
xor zmm15_5@uint64 zmm4_5 zmm15_5;
xor zmm15_6@uint64 zmm4_6 zmm15_6;
xor zmm15_7@uint64 zmm4_7 zmm15_7;
(* vpxord %zmm18,%zmm12,%zmm18                     #! PC = 0x55555558e94a *)
xor zmm18_0@uint64 zmm12_0 zmm18_0;
xor zmm18_1@uint64 zmm12_1 zmm18_1;
xor zmm18_2@uint64 zmm12_2 zmm18_2;
xor zmm18_3@uint64 zmm12_3 zmm18_3;
xor zmm18_4@uint64 zmm12_4 zmm18_4;
xor zmm18_5@uint64 zmm12_5 zmm18_5;
xor zmm18_6@uint64 zmm12_6 zmm18_6;
xor zmm18_7@uint64 zmm12_7 zmm18_7;
(* vpxord %zmm27,%zmm4,%zmm27                      #! PC = 0x55555558e950 *)
xor zmm27_0@uint64 zmm4_0 zmm27_0;
xor zmm27_1@uint64 zmm4_1 zmm27_1;
xor zmm27_2@uint64 zmm4_2 zmm27_2;
xor zmm27_3@uint64 zmm4_3 zmm27_3;
xor zmm27_4@uint64 zmm4_4 zmm27_4;
xor zmm27_5@uint64 zmm4_5 zmm27_5;
xor zmm27_6@uint64 zmm4_6 zmm27_6;
xor zmm27_7@uint64 zmm4_7 zmm27_7;
(* vpxord %zmm25,%zmm12,%zmm25                     #! PC = 0x55555558e956 *)
xor zmm25_0@uint64 zmm12_0 zmm25_0;
xor zmm25_1@uint64 zmm12_1 zmm25_1;
xor zmm25_2@uint64 zmm12_2 zmm25_2;
xor zmm25_3@uint64 zmm12_3 zmm25_3;
xor zmm25_4@uint64 zmm12_4 zmm25_4;
xor zmm25_5@uint64 zmm12_5 zmm25_5;
xor zmm25_6@uint64 zmm12_6 zmm25_6;
xor zmm25_7@uint64 zmm12_7 zmm25_7;
(* vpxord %zmm5,%zmm14,%zmm5                       #! PC = 0x55555558e95c *)
xor zmm5_0@uint64 zmm14_0 zmm5_0;
xor zmm5_1@uint64 zmm14_1 zmm5_1;
xor zmm5_2@uint64 zmm14_2 zmm5_2;
xor zmm5_3@uint64 zmm14_3 zmm5_3;
xor zmm5_4@uint64 zmm14_4 zmm5_4;
xor zmm5_5@uint64 zmm14_5 zmm5_5;
xor zmm5_6@uint64 zmm14_6 zmm5_6;
xor zmm5_7@uint64 zmm14_7 zmm5_7;
(* vpxord %zmm30,%zmm4,%zmm30                      #! PC = 0x55555558e962 *)
xor zmm30_0@uint64 zmm4_0 zmm30_0;
xor zmm30_1@uint64 zmm4_1 zmm30_1;
xor zmm30_2@uint64 zmm4_2 zmm30_2;
xor zmm30_3@uint64 zmm4_3 zmm30_3;
xor zmm30_4@uint64 zmm4_4 zmm30_4;
xor zmm30_5@uint64 zmm4_5 zmm30_5;
xor zmm30_6@uint64 zmm4_6 zmm30_6;
xor zmm30_7@uint64 zmm4_7 zmm30_7;
(* vpxord %zmm11,%zmm12,%zmm11                     #! PC = 0x55555558e968 *)
xor zmm11_0@uint64 zmm12_0 zmm11_0;
xor zmm11_1@uint64 zmm12_1 zmm11_1;
xor zmm11_2@uint64 zmm12_2 zmm11_2;
xor zmm11_3@uint64 zmm12_3 zmm11_3;
xor zmm11_4@uint64 zmm12_4 zmm11_4;
xor zmm11_5@uint64 zmm12_5 zmm11_5;
xor zmm11_6@uint64 zmm12_6 zmm11_6;
xor zmm11_7@uint64 zmm12_7 zmm11_7;
(* vpxord %zmm13,%zmm14,%zmm13                     #! PC = 0x55555558e96e *)
xor zmm13_0@uint64 zmm14_0 zmm13_0;
xor zmm13_1@uint64 zmm14_1 zmm13_1;
xor zmm13_2@uint64 zmm14_2 zmm13_2;
xor zmm13_3@uint64 zmm14_3 zmm13_3;
xor zmm13_4@uint64 zmm14_4 zmm13_4;
xor zmm13_5@uint64 zmm14_5 zmm13_5;
xor zmm13_6@uint64 zmm14_6 zmm13_6;
xor zmm13_7@uint64 zmm14_7 zmm13_7;
(* vpxord %zmm26,%zmm4,%zmm4                       #! PC = 0x55555558e974 *)
xor zmm4_0@uint64 zmm4_0 zmm26_0;
xor zmm4_1@uint64 zmm4_1 zmm26_1;
xor zmm4_2@uint64 zmm4_2 zmm26_2;
xor zmm4_3@uint64 zmm4_3 zmm26_3;
xor zmm4_4@uint64 zmm4_4 zmm26_4;
xor zmm4_5@uint64 zmm4_5 zmm26_5;
xor zmm4_6@uint64 zmm4_6 zmm26_6;
xor zmm4_7@uint64 zmm4_7 zmm26_7;
(* vpxord %zmm28,%zmm12,%zmm12                     #! PC = 0x55555558e97a *)
xor zmm12_0@uint64 zmm12_0 zmm28_0;
xor zmm12_1@uint64 zmm12_1 zmm28_1;
xor zmm12_2@uint64 zmm12_2 zmm28_2;
xor zmm12_3@uint64 zmm12_3 zmm28_3;
xor zmm12_4@uint64 zmm12_4 zmm28_4;
xor zmm12_5@uint64 zmm12_5 zmm28_5;
xor zmm12_6@uint64 zmm12_6 zmm28_6;
xor zmm12_7@uint64 zmm12_7 zmm28_7;
(* vpxord %zmm23,%zmm14,%zmm14                     #! PC = 0x55555558e980 *)
xor zmm14_0@uint64 zmm14_0 zmm23_0;
xor zmm14_1@uint64 zmm14_1 zmm23_1;
xor zmm14_2@uint64 zmm14_2 zmm23_2;
xor zmm14_3@uint64 zmm14_3 zmm23_3;
xor zmm14_4@uint64 zmm14_4 zmm23_4;
xor zmm14_5@uint64 zmm14_5 zmm23_5;
xor zmm14_6@uint64 zmm14_6 zmm23_6;
xor zmm14_7@uint64 zmm14_7 zmm23_7;
(* vprolq $0x1,%zmm25,%zmm25                       #! PC = 0x55555558e986 *)
rol zmm25_0 zmm25_0 0x1;
rol zmm25_1 zmm25_1 0x1;
rol zmm25_2 zmm25_2 0x1;
rol zmm25_3 zmm25_3 0x1;
rol zmm25_4 zmm25_4 0x1;
rol zmm25_5 zmm25_5 0x1;
rol zmm25_6 zmm25_6 0x1;
rol zmm25_7 zmm25_7 0x1;
(* vprolq $0x6,%zmm10,%zmm10                       #! PC = 0x55555558e98d *)
rol zmm10_0 zmm10_0 0x6;
rol zmm10_1 zmm10_1 0x6;
rol zmm10_2 zmm10_2 0x6;
rol zmm10_3 zmm10_3 0x6;
rol zmm10_4 zmm10_4 0x6;
rol zmm10_5 zmm10_5 0x6;
rol zmm10_6 zmm10_6 0x6;
rol zmm10_7 zmm10_7 0x6;
(* vprolq $0x3,%zmm15,%zmm15                       #! PC = 0x55555558e994 *)
rol zmm15_0 zmm15_0 0x3;
rol zmm15_1 zmm15_1 0x3;
rol zmm15_2 zmm15_2 0x3;
rol zmm15_3 zmm15_3 0x3;
rol zmm15_4 zmm15_4 0x3;
rol zmm15_5 zmm15_5 0x3;
rol zmm15_6 zmm15_6 0x3;
rol zmm15_7 zmm15_7 0x3;
(* vprorq $0x13,%zmm18,%zmm18                      #! PC = 0x55555558e99b *)
ror zmm18_0 zmm18_0 0x13;
ror zmm18_1 zmm18_1 0x13;
ror zmm18_2 zmm18_2 0x13;
ror zmm18_3 zmm18_3 0x13;
ror zmm18_4 zmm18_4 0x13;
ror zmm18_5 zmm18_5 0x13;
ror zmm18_6 zmm18_6 0x13;
ror zmm18_7 zmm18_7 0x13;
(* vprorq $0x3,%zmm19,%zmm19                       #! PC = 0x55555558e9a2 *)
ror zmm19_0 zmm19_0 0x3;
ror zmm19_1 zmm19_1 0x3;
ror zmm19_2 zmm19_2 0x3;
ror zmm19_3 zmm19_3 0x3;
ror zmm19_4 zmm19_4 0x3;
ror zmm19_5 zmm19_5 0x3;
ror zmm19_6 zmm19_6 0x3;
ror zmm19_7 zmm19_7 0x3;
(* vprorq $0x17,%zmm4,%zmm4                        #! PC = 0x55555558e9a9 *)
ror zmm4_0 zmm4_0 0x17;
ror zmm4_1 zmm4_1 0x17;
ror zmm4_2 zmm4_2 0x17;
ror zmm4_3 zmm4_3 0x17;
ror zmm4_4 zmm4_4 0x17;
ror zmm4_5 zmm4_5 0x17;
ror zmm4_6 zmm4_6 0x17;
ror zmm4_7 zmm4_7 0x17;
(* vprolq $0x2,%zmm12,%zmm12                       #! PC = 0x55555558e9b0 *)
rol zmm12_0 zmm12_0 0x2;
rol zmm12_1 zmm12_1 0x2;
rol zmm12_2 zmm12_2 0x2;
rol zmm12_3 zmm12_3 0x2;
rol zmm12_4 zmm12_4 0x2;
rol zmm12_5 zmm12_5 0x2;
rol zmm12_6 zmm12_6 0x2;
rol zmm12_7 zmm12_7 0x2;
(* vprorq $0x19,%zmm14,%zmm14                      #! PC = 0x55555558e9b7 *)
ror zmm14_0 zmm14_0 0x19;
ror zmm14_1 zmm14_1 0x19;
ror zmm14_2 zmm14_2 0x19;
ror zmm14_3 zmm14_3 0x19;
ror zmm14_4 zmm14_4 0x19;
ror zmm14_5 zmm14_5 0x19;
ror zmm14_6 zmm14_6 0x19;
ror zmm14_7 zmm14_7 0x19;
(* vprorq $0x1c,%zmm30,%zmm30                      #! PC = 0x55555558e9be *)
ror zmm30_0 zmm30_0 0x1c;
ror zmm30_1 zmm30_1 0x1c;
ror zmm30_2 zmm30_2 0x1c;
ror zmm30_3 zmm30_3 0x1c;
ror zmm30_4 zmm30_4 0x1c;
ror zmm30_5 zmm30_5 0x1c;
ror zmm30_6 zmm30_6 0x1c;
ror zmm30_7 zmm30_7 0x1c;
(* vprolq $0x1b,%zmm13,%zmm13                      #! PC = 0x55555558e9c5 *)
rol zmm13_0 zmm13_0 0x1b;
rol zmm13_1 zmm13_1 0x1b;
rol zmm13_2 zmm13_2 0x1b;
rol zmm13_3 zmm13_3 0x1b;
rol zmm13_4 zmm13_4 0x1b;
rol zmm13_5 zmm13_5 0x1b;
rol zmm13_6 zmm13_6 0x1b;
rol zmm13_7 zmm13_7 0x1b;
(* vprolq $0x12,%zmm27,%zmm27                      #! PC = 0x55555558e9cc *)
rol zmm27_0 zmm27_0 0x12;
rol zmm27_1 zmm27_1 0x12;
rol zmm27_2 zmm27_2 0x12;
rol zmm27_3 zmm27_3 0x12;
rol zmm27_4 zmm27_4 0x12;
rol zmm27_5 zmm27_5 0x12;
rol zmm27_6 zmm27_6 0x12;
rol zmm27_7 zmm27_7 0x12;
(* vprolq $0x19,%zmm1,%zmm1                        #! PC = 0x55555558e9d3 *)
rol zmm1_0 zmm1_0 0x19;
rol zmm1_1 zmm1_1 0x19;
rol zmm1_2 zmm1_2 0x19;
rol zmm1_3 zmm1_3 0x19;
rol zmm1_4 zmm1_4 0x19;
rol zmm1_5 zmm1_5 0x19;
rol zmm1_6 zmm1_6 0x19;
rol zmm1_7 zmm1_7 0x19;
(* vprolq $0x8,%zmm5,%zmm5                         #! PC = 0x55555558e9da *)
rol zmm5_0 zmm5_0 0x8;
rol zmm5_1 zmm5_1 0x8;
rol zmm5_2 zmm5_2 0x8;
rol zmm5_3 zmm5_3 0x8;
rol zmm5_4 zmm5_4 0x8;
rol zmm5_5 zmm5_5 0x8;
rol zmm5_6 zmm5_6 0x8;
rol zmm5_7 zmm5_7 0x8;
(* vprolq $0xa,%zmm11,%zmm11                       #! PC = 0x55555558e9e1 *)
rol zmm11_0 zmm11_0 0xa;
rol zmm11_1 zmm11_1 0xa;
rol zmm11_2 zmm11_2 0xa;
rol zmm11_3 zmm11_3 0xa;
rol zmm11_4 zmm11_4 0xa;
rol zmm11_5 zmm11_5 0xa;
rol zmm11_6 zmm11_6 0xa;
rol zmm11_7 zmm11_7 0xa;
(* vprolq $0xf,%zmm6,%zmm6                         #! PC = 0x55555558e9e8 *)
rol zmm6_0 zmm6_0 0xf;
rol zmm6_1 zmm6_1 0xf;
rol zmm6_2 zmm6_2 0xf;
rol zmm6_3 zmm6_3 0xf;
rol zmm6_4 zmm6_4 0xf;
rol zmm6_5 zmm6_5 0xf;
rol zmm6_6 zmm6_6 0xf;
rol zmm6_7 zmm6_7 0xf;
(* vprorq $0x8,%zmm0,%zmm0                         #! PC = 0x55555558e9ef *)
ror zmm0_0 zmm0_0 0x8;
ror zmm0_1 zmm0_1 0x8;
ror zmm0_2 zmm0_2 0x8;
ror zmm0_3 zmm0_3 0x8;
ror zmm0_4 zmm0_4 0x8;
ror zmm0_5 zmm0_5 0x8;
ror zmm0_6 zmm0_6 0x8;
ror zmm0_7 zmm0_7 0x8;
(* vmovdqa64 %zmm24,%zmm29                         #! PC = 0x55555558e9f6 *)
mov zmm29_0 zmm24_0;
mov zmm29_1 zmm24_1;
mov zmm29_2 zmm24_2;
mov zmm29_3 zmm24_3;
mov zmm29_4 zmm24_4;
mov zmm29_5 zmm24_5;
mov zmm29_6 zmm24_6;
mov zmm29_7 zmm24_7;
(* vmovdqa64 %zmm31,%zmm22                         #! PC = 0x55555558e9fc *)
mov zmm22_0 zmm31_0;
mov zmm22_1 zmm31_1;
mov zmm22_2 zmm31_2;
mov zmm22_3 zmm31_3;
mov zmm22_4 zmm31_4;
mov zmm22_5 zmm31_5;
mov zmm22_6 zmm31_6;
mov zmm22_7 zmm31_7;
(* vpternlogq $0xd2,%zmm2,%zmm31,%zmm29            #! PC = 0x55555558ea02 *)
mov table 0xd2@uint8;
inline vpternlogq64 (zmm29_0, zmm31_0, zmm2_0, table);
inline vpternlogq64 (zmm29_1, zmm31_1, zmm2_1, table);
inline vpternlogq64 (zmm29_2, zmm31_2, zmm2_2, table);
inline vpternlogq64 (zmm29_3, zmm31_3, zmm2_3, table);
inline vpternlogq64 (zmm29_4, zmm31_4, zmm2_4, table);
inline vpternlogq64 (zmm29_5, zmm31_5, zmm2_5, table);
inline vpternlogq64 (zmm29_6, zmm31_6, zmm2_6, table);
inline vpternlogq64 (zmm29_7, zmm31_7, zmm2_7, table);
(* vpternlogq $0xd2,%zmm7,%zmm2,%zmm22             #! PC = 0x55555558ea09 *)
mov table 0xd2@uint8;
inline vpternlogq64 (zmm22_0, zmm2_0, zmm7_0, table);
inline vpternlogq64 (zmm22_1, zmm2_1, zmm7_1, table);
inline vpternlogq64 (zmm22_2, zmm2_2, zmm7_2, table);
inline vpternlogq64 (zmm22_3, zmm2_3, zmm7_3, table);
inline vpternlogq64 (zmm22_4, zmm2_4, zmm7_4, table);
inline vpternlogq64 (zmm22_5, zmm2_5, zmm7_5, table);
inline vpternlogq64 (zmm22_6, zmm2_6, zmm7_6, table);
inline vpternlogq64 (zmm22_7, zmm2_7, zmm7_7, table);
(* vpternlogq $0xd2,%zmm8,%zmm7,%zmm2              #! PC = 0x55555558ea10 *)
mov table 0xd2@uint8;
inline vpternlogq64 (zmm2_0, zmm7_0, zmm8_0, table);
inline vpternlogq64 (zmm2_1, zmm7_1, zmm8_1, table);
inline vpternlogq64 (zmm2_2, zmm7_2, zmm8_2, table);
inline vpternlogq64 (zmm2_3, zmm7_3, zmm8_3, table);
inline vpternlogq64 (zmm2_4, zmm7_4, zmm8_4, table);
inline vpternlogq64 (zmm2_5, zmm7_5, zmm8_5, table);
inline vpternlogq64 (zmm2_6, zmm7_6, zmm8_6, table);
inline vpternlogq64 (zmm2_7, zmm7_7, zmm8_7, table);
(* vpternlogq $0xd2,%zmm24,%zmm8,%zmm7             #! PC = 0x55555558ea17 *)
mov table 0xd2@uint8;
inline vpternlogq64 (zmm7_0, zmm8_0, zmm24_0, table);
inline vpternlogq64 (zmm7_1, zmm8_1, zmm24_1, table);
inline vpternlogq64 (zmm7_2, zmm8_2, zmm24_2, table);
inline vpternlogq64 (zmm7_3, zmm8_3, zmm24_3, table);
inline vpternlogq64 (zmm7_4, zmm8_4, zmm24_4, table);
inline vpternlogq64 (zmm7_5, zmm8_5, zmm24_5, table);
inline vpternlogq64 (zmm7_6, zmm8_6, zmm24_6, table);
inline vpternlogq64 (zmm7_7, zmm8_7, zmm24_7, table);
(* vpternlogq $0xd2,%zmm31,%zmm24,%zmm8            #! PC = 0x55555558ea1e *)
mov table 0xd2@uint8;
inline vpternlogq64 (zmm8_0, zmm24_0, zmm31_0, table);
inline vpternlogq64 (zmm8_1, zmm24_1, zmm31_1, table);
inline vpternlogq64 (zmm8_2, zmm24_2, zmm31_2, table);
inline vpternlogq64 (zmm8_3, zmm24_3, zmm31_3, table);
inline vpternlogq64 (zmm8_4, zmm24_4, zmm31_4, table);
inline vpternlogq64 (zmm8_5, zmm24_5, zmm31_5, table);
inline vpternlogq64 (zmm8_6, zmm24_6, zmm31_6, table);
inline vpternlogq64 (zmm8_7, zmm24_7, zmm31_7, table);
(* vpbroadcastq %rbx,%zmm24                        #! PC = 0x55555558ea25 *)
mov zmm24_0 rbx;
mov zmm24_1 rbx;
mov zmm24_2 rbx;
mov zmm24_3 rbx;
mov zmm24_4 rbx;
mov zmm24_5 rbx;
mov zmm24_6 rbx;
mov zmm24_7 rbx;
(* vpxord %zmm29,%zmm24,%zmm24                     #! PC = 0x55555558ea2b *)
xor zmm24_0@uint64 zmm24_0 zmm29_0;
xor zmm24_1@uint64 zmm24_1 zmm29_1;
xor zmm24_2@uint64 zmm24_2 zmm29_2;
xor zmm24_3@uint64 zmm24_3 zmm29_3;
xor zmm24_4@uint64 zmm24_4 zmm29_4;
xor zmm24_5@uint64 zmm24_5 zmm29_5;
xor zmm24_6@uint64 zmm24_6 zmm29_6;
xor zmm24_7@uint64 zmm24_7 zmm29_7;
(* vmovdqa64 %zmm17,%zmm31                         #! PC = 0x55555558ea31 *)
mov zmm31_0 zmm17_0;
mov zmm31_1 zmm17_1;
mov zmm31_2 zmm17_2;
mov zmm31_3 zmm17_3;
mov zmm31_4 zmm17_4;
mov zmm31_5 zmm17_5;
mov zmm31_6 zmm17_6;
mov zmm31_7 zmm17_7;
(* vmovdqa64 %zmm9,%zmm29                          #! PC = 0x55555558ea37 *)
mov zmm29_0 zmm9_0;
mov zmm29_1 zmm9_1;
mov zmm29_2 zmm9_2;
mov zmm29_3 zmm9_3;
mov zmm29_4 zmm9_4;
mov zmm29_5 zmm9_5;
mov zmm29_6 zmm9_6;
mov zmm29_7 zmm9_7;
(* vmovdqa64 %zmm20,%zmm23                         #! PC = 0x55555558ea3d *)
mov zmm23_0 zmm20_0;
mov zmm23_1 zmm20_1;
mov zmm23_2 zmm20_2;
mov zmm23_3 zmm20_3;
mov zmm23_4 zmm20_4;
mov zmm23_5 zmm20_5;
mov zmm23_6 zmm20_6;
mov zmm23_7 zmm20_7;
(* vmovdqa64 %zmm21,%zmm28                         #! PC = 0x55555558ea43 *)
mov zmm28_0 zmm21_0;
mov zmm28_1 zmm21_1;
mov zmm28_2 zmm21_2;
mov zmm28_3 zmm21_3;
mov zmm28_4 zmm21_4;
mov zmm28_5 zmm21_5;
mov zmm28_6 zmm21_6;
mov zmm28_7 zmm21_7;
(* vpternlogq $0xd2,%zmm4,%zmm14,%zmm28            #! PC = 0x55555558ea49 *)
mov table 0xd2@uint8;
inline vpternlogq64 (zmm28_0, zmm14_0, zmm4_0, table);
inline vpternlogq64 (zmm28_1, zmm14_1, zmm4_1, table);
inline vpternlogq64 (zmm28_2, zmm14_2, zmm4_2, table);
inline vpternlogq64 (zmm28_3, zmm14_3, zmm4_3, table);
inline vpternlogq64 (zmm28_4, zmm14_4, zmm4_4, table);
inline vpternlogq64 (zmm28_5, zmm14_5, zmm4_5, table);
inline vpternlogq64 (zmm28_6, zmm14_6, zmm4_6, table);
inline vpternlogq64 (zmm28_7, zmm14_7, zmm4_7, table);
(* vpternlogq $0xd2,%zmm15,%zmm17,%zmm29           #! PC = 0x55555558ea50 *)
mov table 0xd2@uint8;
inline vpternlogq64 (zmm29_0, zmm17_0, zmm15_0, table);
inline vpternlogq64 (zmm29_1, zmm17_1, zmm15_1, table);
inline vpternlogq64 (zmm29_2, zmm17_2, zmm15_2, table);
inline vpternlogq64 (zmm29_3, zmm17_3, zmm15_3, table);
inline vpternlogq64 (zmm29_4, zmm17_4, zmm15_4, table);
inline vpternlogq64 (zmm29_5, zmm17_5, zmm15_5, table);
inline vpternlogq64 (zmm29_6, zmm17_6, zmm15_6, table);
inline vpternlogq64 (zmm29_7, zmm17_7, zmm15_7, table);
(* vpternlogq $0xd2,%zmm18,%zmm15,%zmm31           #! PC = 0x55555558ea57 *)
mov table 0xd2@uint8;
inline vpternlogq64 (zmm31_0, zmm15_0, zmm18_0, table);
inline vpternlogq64 (zmm31_1, zmm15_1, zmm18_1, table);
inline vpternlogq64 (zmm31_2, zmm15_2, zmm18_2, table);
inline vpternlogq64 (zmm31_3, zmm15_3, zmm18_3, table);
inline vpternlogq64 (zmm31_4, zmm15_4, zmm18_4, table);
inline vpternlogq64 (zmm31_5, zmm15_5, zmm18_5, table);
inline vpternlogq64 (zmm31_6, zmm15_6, zmm18_6, table);
inline vpternlogq64 (zmm31_7, zmm15_7, zmm18_7, table);
(* vpternlogq $0xd2,%zmm14,%zmm21,%zmm23           #! PC = 0x55555558ea5e *)
mov table 0xd2@uint8;
inline vpternlogq64 (zmm23_0, zmm21_0, zmm14_0, table);
inline vpternlogq64 (zmm23_1, zmm21_1, zmm14_1, table);
inline vpternlogq64 (zmm23_2, zmm21_2, zmm14_2, table);
inline vpternlogq64 (zmm23_3, zmm21_3, zmm14_3, table);
inline vpternlogq64 (zmm23_4, zmm21_4, zmm14_4, table);
inline vpternlogq64 (zmm23_5, zmm21_5, zmm14_5, table);
inline vpternlogq64 (zmm23_6, zmm21_6, zmm14_6, table);
inline vpternlogq64 (zmm23_7, zmm21_7, zmm14_7, table);
(* vpternlogq $0xd2,%zmm19,%zmm18,%zmm15           #! PC = 0x55555558ea65 *)
mov table 0xd2@uint8;
inline vpternlogq64 (zmm15_0, zmm18_0, zmm19_0, table);
inline vpternlogq64 (zmm15_1, zmm18_1, zmm19_1, table);
inline vpternlogq64 (zmm15_2, zmm18_2, zmm19_2, table);
inline vpternlogq64 (zmm15_3, zmm18_3, zmm19_3, table);
inline vpternlogq64 (zmm15_4, zmm18_4, zmm19_4, table);
inline vpternlogq64 (zmm15_5, zmm18_5, zmm19_5, table);
inline vpternlogq64 (zmm15_6, zmm18_6, zmm19_6, table);
inline vpternlogq64 (zmm15_7, zmm18_7, zmm19_7, table);
(* vpternlogq $0xd2,%zmm12,%zmm4,%zmm14            #! PC = 0x55555558ea6c *)
mov table 0xd2@uint8;
inline vpternlogq64 (zmm14_0, zmm4_0, zmm12_0, table);
inline vpternlogq64 (zmm14_1, zmm4_1, zmm12_1, table);
inline vpternlogq64 (zmm14_2, zmm4_2, zmm12_2, table);
inline vpternlogq64 (zmm14_3, zmm4_3, zmm12_3, table);
inline vpternlogq64 (zmm14_4, zmm4_4, zmm12_4, table);
inline vpternlogq64 (zmm14_5, zmm4_5, zmm12_5, table);
inline vpternlogq64 (zmm14_6, zmm4_6, zmm12_6, table);
inline vpternlogq64 (zmm14_7, zmm4_7, zmm12_7, table);
(* vpternlogq $0xd2,%zmm9,%zmm19,%zmm18            #! PC = 0x55555558ea73 *)
mov table 0xd2@uint8;
inline vpternlogq64 (zmm18_0, zmm19_0, zmm9_0, table);
inline vpternlogq64 (zmm18_1, zmm19_1, zmm9_1, table);
inline vpternlogq64 (zmm18_2, zmm19_2, zmm9_2, table);
inline vpternlogq64 (zmm18_3, zmm19_3, zmm9_3, table);
inline vpternlogq64 (zmm18_4, zmm19_4, zmm9_4, table);
inline vpternlogq64 (zmm18_5, zmm19_5, zmm9_5, table);
inline vpternlogq64 (zmm18_6, zmm19_6, zmm9_6, table);
inline vpternlogq64 (zmm18_7, zmm19_7, zmm9_7, table);
(* vpternlogq $0xd2,%zmm17,%zmm9,%zmm19            #! PC = 0x55555558ea7a *)
mov table 0xd2@uint8;
inline vpternlogq64 (zmm19_0, zmm9_0, zmm17_0, table);
inline vpternlogq64 (zmm19_1, zmm9_1, zmm17_1, table);
inline vpternlogq64 (zmm19_2, zmm9_2, zmm17_2, table);
inline vpternlogq64 (zmm19_3, zmm9_3, zmm17_3, table);
inline vpternlogq64 (zmm19_4, zmm9_4, zmm17_4, table);
inline vpternlogq64 (zmm19_5, zmm9_5, zmm17_5, table);
inline vpternlogq64 (zmm19_6, zmm9_6, zmm17_6, table);
inline vpternlogq64 (zmm19_7, zmm9_7, zmm17_7, table);
(* vmovdqa64 %zmm25,%zmm17                         #! PC = 0x55555558ea81 *)
mov zmm17_0 zmm25_0;
mov zmm17_1 zmm25_1;
mov zmm17_2 zmm25_2;
mov zmm17_3 zmm25_3;
mov zmm17_4 zmm25_4;
mov zmm17_5 zmm25_5;
mov zmm17_6 zmm25_6;
mov zmm17_7 zmm25_7;
(* vmovdqa64 %zmm10,%zmm9                          #! PC = 0x55555558ea87 *)
mov zmm9_0 zmm10_0;
mov zmm9_1 zmm10_1;
mov zmm9_2 zmm10_2;
mov zmm9_3 zmm10_3;
mov zmm9_4 zmm10_4;
mov zmm9_5 zmm10_5;
mov zmm9_6 zmm10_6;
mov zmm9_7 zmm10_7;
(* vpternlogq $0xd2,%zmm1,%zmm10,%zmm17            #! PC = 0x55555558ea8d *)
mov table 0xd2@uint8;
inline vpternlogq64 (zmm17_0, zmm10_0, zmm1_0, table);
inline vpternlogq64 (zmm17_1, zmm10_1, zmm1_1, table);
inline vpternlogq64 (zmm17_2, zmm10_2, zmm1_2, table);
inline vpternlogq64 (zmm17_3, zmm10_3, zmm1_3, table);
inline vpternlogq64 (zmm17_4, zmm10_4, zmm1_4, table);
inline vpternlogq64 (zmm17_5, zmm10_5, zmm1_5, table);
inline vpternlogq64 (zmm17_6, zmm10_6, zmm1_6, table);
inline vpternlogq64 (zmm17_7, zmm10_7, zmm1_7, table);
(* vpternlogq $0xd2,%zmm5,%zmm1,%zmm9              #! PC = 0x55555558ea94 *)
mov table 0xd2@uint8;
inline vpternlogq64 (zmm9_0, zmm1_0, zmm5_0, table);
inline vpternlogq64 (zmm9_1, zmm1_1, zmm5_1, table);
inline vpternlogq64 (zmm9_2, zmm1_2, zmm5_2, table);
inline vpternlogq64 (zmm9_3, zmm1_3, zmm5_3, table);
inline vpternlogq64 (zmm9_4, zmm1_4, zmm5_4, table);
inline vpternlogq64 (zmm9_5, zmm1_5, zmm5_5, table);
inline vpternlogq64 (zmm9_6, zmm1_6, zmm5_6, table);
inline vpternlogq64 (zmm9_7, zmm1_7, zmm5_7, table);
(* vpternlogq $0xd2,%zmm20,%zmm12,%zmm4            #! PC = 0x55555558ea9b *)
mov table 0xd2@uint8;
inline vpternlogq64 (zmm4_0, zmm12_0, zmm20_0, table);
inline vpternlogq64 (zmm4_1, zmm12_1, zmm20_1, table);
inline vpternlogq64 (zmm4_2, zmm12_2, zmm20_2, table);
inline vpternlogq64 (zmm4_3, zmm12_3, zmm20_3, table);
inline vpternlogq64 (zmm4_4, zmm12_4, zmm20_4, table);
inline vpternlogq64 (zmm4_5, zmm12_5, zmm20_5, table);
inline vpternlogq64 (zmm4_6, zmm12_6, zmm20_6, table);
inline vpternlogq64 (zmm4_7, zmm12_7, zmm20_7, table);
(* vpternlogq $0xd2,%zmm27,%zmm5,%zmm1             #! PC = 0x55555558eaa2 *)
mov table 0xd2@uint8;
inline vpternlogq64 (zmm1_0, zmm5_0, zmm27_0, table);
inline vpternlogq64 (zmm1_1, zmm5_1, zmm27_1, table);
inline vpternlogq64 (zmm1_2, zmm5_2, zmm27_2, table);
inline vpternlogq64 (zmm1_3, zmm5_3, zmm27_3, table);
inline vpternlogq64 (zmm1_4, zmm5_4, zmm27_4, table);
inline vpternlogq64 (zmm1_5, zmm5_5, zmm27_5, table);
inline vpternlogq64 (zmm1_6, zmm5_6, zmm27_6, table);
inline vpternlogq64 (zmm1_7, zmm5_7, zmm27_7, table);
(* vpternlogq $0xd2,%zmm21,%zmm20,%zmm12           #! PC = 0x55555558eaa9 *)
mov table 0xd2@uint8;
inline vpternlogq64 (zmm12_0, zmm20_0, zmm21_0, table);
inline vpternlogq64 (zmm12_1, zmm20_1, zmm21_1, table);
inline vpternlogq64 (zmm12_2, zmm20_2, zmm21_2, table);
inline vpternlogq64 (zmm12_3, zmm20_3, zmm21_3, table);
inline vpternlogq64 (zmm12_4, zmm20_4, zmm21_4, table);
inline vpternlogq64 (zmm12_5, zmm20_5, zmm21_5, table);
inline vpternlogq64 (zmm12_6, zmm20_6, zmm21_6, table);
inline vpternlogq64 (zmm12_7, zmm20_7, zmm21_7, table);
(* vpternlogq $0xd2,%zmm25,%zmm27,%zmm5            #! PC = 0x55555558eab0 *)
mov table 0xd2@uint8;
inline vpternlogq64 (zmm5_0, zmm27_0, zmm25_0, table);
inline vpternlogq64 (zmm5_1, zmm27_1, zmm25_1, table);
inline vpternlogq64 (zmm5_2, zmm27_2, zmm25_2, table);
inline vpternlogq64 (zmm5_3, zmm27_3, zmm25_3, table);
inline vpternlogq64 (zmm5_4, zmm27_4, zmm25_4, table);
inline vpternlogq64 (zmm5_5, zmm27_5, zmm25_5, table);
inline vpternlogq64 (zmm5_6, zmm27_6, zmm25_6, table);
inline vpternlogq64 (zmm5_7, zmm27_7, zmm25_7, table);
(* vmovdqa64 %zmm14,%zmm21                         #! PC = 0x55555558eab7 *)
mov zmm21_0 zmm14_0;
mov zmm21_1 zmm14_1;
mov zmm21_2 zmm14_2;
mov zmm21_3 zmm14_3;
mov zmm21_4 zmm14_4;
mov zmm21_5 zmm14_5;
mov zmm21_6 zmm14_6;
mov zmm21_7 zmm14_7;
(* vpternlogq $0xd2,%zmm10,%zmm25,%zmm27           #! PC = 0x55555558eabd *)
mov table 0xd2@uint8;
inline vpternlogq64 (zmm27_0, zmm25_0, zmm10_0, table);
inline vpternlogq64 (zmm27_1, zmm25_1, zmm10_1, table);
inline vpternlogq64 (zmm27_2, zmm25_2, zmm10_2, table);
inline vpternlogq64 (zmm27_3, zmm25_3, zmm10_3, table);
inline vpternlogq64 (zmm27_4, zmm25_4, zmm10_4, table);
inline vpternlogq64 (zmm27_5, zmm25_5, zmm10_5, table);
inline vpternlogq64 (zmm27_6, zmm25_6, zmm10_6, table);
inline vpternlogq64 (zmm27_7, zmm25_7, zmm10_7, table);
(* vmovdqa64 %zmm13,%zmm25                         #! PC = 0x55555558eac4 *)
mov zmm25_0 zmm13_0;
mov zmm25_1 zmm13_1;
mov zmm25_2 zmm13_2;
mov zmm25_3 zmm13_3;
mov zmm25_4 zmm13_4;
mov zmm25_5 zmm13_5;
mov zmm25_6 zmm13_6;
mov zmm25_7 zmm13_7;
(* vmovdqa64 %zmm30,%zmm10                         #! PC = 0x55555558eaca *)
mov zmm10_0 zmm30_0;
mov zmm10_1 zmm30_1;
mov zmm10_2 zmm30_2;
mov zmm10_3 zmm30_3;
mov zmm10_4 zmm30_4;
mov zmm10_5 zmm30_5;
mov zmm10_6 zmm30_6;
mov zmm10_7 zmm30_7;
(* vpternlogq $0xd2,%zmm11,%zmm30,%zmm25           #! PC = 0x55555558ead0 *)
mov table 0xd2@uint8;
inline vpternlogq64 (zmm25_0, zmm30_0, zmm11_0, table);
inline vpternlogq64 (zmm25_1, zmm30_1, zmm11_1, table);
inline vpternlogq64 (zmm25_2, zmm30_2, zmm11_2, table);
inline vpternlogq64 (zmm25_3, zmm30_3, zmm11_3, table);
inline vpternlogq64 (zmm25_4, zmm30_4, zmm11_4, table);
inline vpternlogq64 (zmm25_5, zmm30_5, zmm11_5, table);
inline vpternlogq64 (zmm25_6, zmm30_6, zmm11_6, table);
inline vpternlogq64 (zmm25_7, zmm30_7, zmm11_7, table);
(* vpternlogq $0xd2,%zmm6,%zmm11,%zmm10            #! PC = 0x55555558ead7 *)
mov table 0xd2@uint8;
inline vpternlogq64 (zmm10_0, zmm11_0, zmm6_0, table);
inline vpternlogq64 (zmm10_1, zmm11_1, zmm6_1, table);
inline vpternlogq64 (zmm10_2, zmm11_2, zmm6_2, table);
inline vpternlogq64 (zmm10_3, zmm11_3, zmm6_3, table);
inline vpternlogq64 (zmm10_4, zmm11_4, zmm6_4, table);
inline vpternlogq64 (zmm10_5, zmm11_5, zmm6_5, table);
inline vpternlogq64 (zmm10_6, zmm11_6, zmm6_6, table);
inline vpternlogq64 (zmm10_7, zmm11_7, zmm6_7, table);
(* vpternlogq $0x96,%zmm2,%zmm1,%zmm21             #! PC = 0x55555558eade *)
mov table 0x96@uint8;
inline vpternlogq64 (zmm21_0, zmm1_0, zmm2_0, table);
inline vpternlogq64 (zmm21_1, zmm1_1, zmm2_1, table);
inline vpternlogq64 (zmm21_2, zmm1_2, zmm2_2, table);
inline vpternlogq64 (zmm21_3, zmm1_3, zmm2_3, table);
inline vpternlogq64 (zmm21_4, zmm1_4, zmm2_4, table);
inline vpternlogq64 (zmm21_5, zmm1_5, zmm2_5, table);
inline vpternlogq64 (zmm21_6, zmm1_6, zmm2_6, table);
inline vpternlogq64 (zmm21_7, zmm1_7, zmm2_7, table);
(* vpternlogq $0xd2,%zmm0,%zmm6,%zmm11             #! PC = 0x55555558eae5 *)
mov table 0xd2@uint8;
inline vpternlogq64 (zmm11_0, zmm6_0, zmm0_0, table);
inline vpternlogq64 (zmm11_1, zmm6_1, zmm0_1, table);
inline vpternlogq64 (zmm11_2, zmm6_2, zmm0_2, table);
inline vpternlogq64 (zmm11_3, zmm6_3, zmm0_3, table);
inline vpternlogq64 (zmm11_4, zmm6_4, zmm0_4, table);
inline vpternlogq64 (zmm11_5, zmm6_5, zmm0_5, table);
inline vpternlogq64 (zmm11_6, zmm6_6, zmm0_6, table);
inline vpternlogq64 (zmm11_7, zmm6_7, zmm0_7, table);
(* vpternlogq $0x96,%zmm15,%zmm11,%zmm21           #! PC = 0x55555558eaec *)
mov table 0x96@uint8;
inline vpternlogq64 (zmm21_0, zmm11_0, zmm15_0, table);
inline vpternlogq64 (zmm21_1, zmm11_1, zmm15_1, table);
inline vpternlogq64 (zmm21_2, zmm11_2, zmm15_2, table);
inline vpternlogq64 (zmm21_3, zmm11_3, zmm15_3, table);
inline vpternlogq64 (zmm21_4, zmm11_4, zmm15_4, table);
inline vpternlogq64 (zmm21_5, zmm11_5, zmm15_5, table);
inline vpternlogq64 (zmm21_6, zmm11_6, zmm15_6, table);
inline vpternlogq64 (zmm21_7, zmm11_7, zmm15_7, table);
(* vpternlogq $0xd2,%zmm13,%zmm0,%zmm6             #! PC = 0x55555558eaf3 *)
mov table 0xd2@uint8;
inline vpternlogq64 (zmm6_0, zmm0_0, zmm13_0, table);
inline vpternlogq64 (zmm6_1, zmm0_1, zmm13_1, table);
inline vpternlogq64 (zmm6_2, zmm0_2, zmm13_2, table);
inline vpternlogq64 (zmm6_3, zmm0_3, zmm13_3, table);
inline vpternlogq64 (zmm6_4, zmm0_4, zmm13_4, table);
inline vpternlogq64 (zmm6_5, zmm0_5, zmm13_5, table);
inline vpternlogq64 (zmm6_6, zmm0_6, zmm13_6, table);
inline vpternlogq64 (zmm6_7, zmm0_7, zmm13_7, table);
(* vpternlogq $0xd2,%zmm30,%zmm13,%zmm0            #! PC = 0x55555558eafa *)
mov table 0xd2@uint8;
inline vpternlogq64 (zmm0_0, zmm13_0, zmm30_0, table);
inline vpternlogq64 (zmm0_1, zmm13_1, zmm30_1, table);
inline vpternlogq64 (zmm0_2, zmm13_2, zmm30_2, table);
inline vpternlogq64 (zmm0_3, zmm13_3, zmm30_3, table);
inline vpternlogq64 (zmm0_4, zmm13_4, zmm30_4, table);
inline vpternlogq64 (zmm0_5, zmm13_5, zmm30_5, table);
inline vpternlogq64 (zmm0_6, zmm13_6, zmm30_6, table);
inline vpternlogq64 (zmm0_7, zmm13_7, zmm30_7, table);
(* vprolq $0x1,%zmm21,%zmm13                       #! PC = 0x55555558eb01 *)
rol zmm13_0 zmm21_0 0x1;
rol zmm13_1 zmm21_1 0x1;
rol zmm13_2 zmm21_2 0x1;
rol zmm13_3 zmm21_3 0x1;
rol zmm13_4 zmm21_4 0x1;
rol zmm13_5 zmm21_5 0x1;
rol zmm13_6 zmm21_6 0x1;
rol zmm13_7 zmm21_7 0x1;
(* vmovdqa64 %zmm18,%zmm26                         #! PC = 0x55555558eb08 *)
mov zmm26_0 zmm18_0;
mov zmm26_1 zmm18_1;
mov zmm26_2 zmm18_2;
mov zmm26_3 zmm18_3;
mov zmm26_4 zmm18_4;
mov zmm26_5 zmm18_5;
mov zmm26_6 zmm18_6;
mov zmm26_7 zmm18_7;
(* vpternlogq $0x96,%zmm5,%zmm4,%zmm26             #! PC = 0x55555558eb0e *)
mov table 0x96@uint8;
inline vpternlogq64 (zmm26_0, zmm4_0, zmm5_0, table);
inline vpternlogq64 (zmm26_1, zmm4_1, zmm5_1, table);
inline vpternlogq64 (zmm26_2, zmm4_2, zmm5_2, table);
inline vpternlogq64 (zmm26_3, zmm4_3, zmm5_3, table);
inline vpternlogq64 (zmm26_4, zmm4_4, zmm5_4, table);
inline vpternlogq64 (zmm26_5, zmm4_5, zmm5_5, table);
inline vpternlogq64 (zmm26_6, zmm4_6, zmm5_6, table);
inline vpternlogq64 (zmm26_7, zmm4_7, zmm5_7, table);
(* vpternlogq $0x96,%zmm6,%zmm7,%zmm26             #! PC = 0x55555558eb15 *)
mov table 0x96@uint8;
inline vpternlogq64 (zmm26_0, zmm7_0, zmm6_0, table);
inline vpternlogq64 (zmm26_1, zmm7_1, zmm6_1, table);
inline vpternlogq64 (zmm26_2, zmm7_2, zmm6_2, table);
inline vpternlogq64 (zmm26_3, zmm7_3, zmm6_3, table);
inline vpternlogq64 (zmm26_4, zmm7_4, zmm6_4, table);
inline vpternlogq64 (zmm26_5, zmm7_5, zmm6_5, table);
inline vpternlogq64 (zmm26_6, zmm7_6, zmm6_6, table);
inline vpternlogq64 (zmm26_7, zmm7_7, zmm6_7, table);
(* vmovdqa64 %zmm0,%zmm3                           #! PC = 0x55555558eb1c *)
mov zmm3_0 zmm0_0;
mov zmm3_1 zmm0_1;
mov zmm3_2 zmm0_2;
mov zmm3_3 zmm0_3;
mov zmm3_4 zmm0_4;
mov zmm3_5 zmm0_5;
mov zmm3_6 zmm0_6;
mov zmm3_7 zmm0_7;
(* vpternlogq $0x96,%zmm12,%zmm19,%zmm3            #! PC = 0x55555558eb22 *)
mov table 0x96@uint8;
inline vpternlogq64 (zmm3_0, zmm19_0, zmm12_0, table);
inline vpternlogq64 (zmm3_1, zmm19_1, zmm12_1, table);
inline vpternlogq64 (zmm3_2, zmm19_2, zmm12_2, table);
inline vpternlogq64 (zmm3_3, zmm19_3, zmm12_3, table);
inline vpternlogq64 (zmm3_4, zmm19_4, zmm12_4, table);
inline vpternlogq64 (zmm3_5, zmm19_5, zmm12_5, table);
inline vpternlogq64 (zmm3_6, zmm19_6, zmm12_6, table);
inline vpternlogq64 (zmm3_7, zmm19_7, zmm12_7, table);
(* vmovdqa64 %zmm13,0x148(%rsp)                    #! EA = L0x7fffffffd600; PC = 0x55555558eb29 *)
mov L0x7fffffffd600 zmm13_0;
mov L0x7fffffffd608 zmm13_1;
mov L0x7fffffffd610 zmm13_2;
mov L0x7fffffffd618 zmm13_3;
mov L0x7fffffffd620 zmm13_4;
mov L0x7fffffffd628 zmm13_5;
mov L0x7fffffffd630 zmm13_6;
mov L0x7fffffffd638 zmm13_7;
(* vprolq $0x1,%zmm26,%zmm13                       #! PC = 0x55555558eb34 *)
rol zmm13_0 zmm26_0 0x1;
rol zmm13_1 zmm26_1 0x1;
rol zmm13_2 zmm26_2 0x1;
rol zmm13_3 zmm26_3 0x1;
rol zmm13_4 zmm26_4 0x1;
rol zmm13_5 zmm26_5 0x1;
rol zmm13_6 zmm26_6 0x1;
rol zmm13_7 zmm26_7 0x1;
(* vpternlogq $0x96,%zmm8,%zmm27,%zmm3             #! PC = 0x55555558eb3b *)
mov table 0x96@uint8;
inline vpternlogq64 (zmm3_0, zmm27_0, zmm8_0, table);
inline vpternlogq64 (zmm3_1, zmm27_1, zmm8_1, table);
inline vpternlogq64 (zmm3_2, zmm27_2, zmm8_2, table);
inline vpternlogq64 (zmm3_3, zmm27_3, zmm8_3, table);
inline vpternlogq64 (zmm3_4, zmm27_4, zmm8_4, table);
inline vpternlogq64 (zmm3_5, zmm27_5, zmm8_5, table);
inline vpternlogq64 (zmm3_6, zmm27_6, zmm8_6, table);
inline vpternlogq64 (zmm3_7, zmm27_7, zmm8_7, table);
(* vmovdqa64 %zmm24,%zmm16                         #! PC = 0x55555558eb42 *)
mov zmm16_0 zmm24_0;
mov zmm16_1 zmm24_1;
mov zmm16_2 zmm24_2;
mov zmm16_3 zmm24_3;
mov zmm16_4 zmm24_4;
mov zmm16_5 zmm24_5;
mov zmm16_6 zmm24_6;
mov zmm16_7 zmm24_7;
(* vpternlogq $0x96,%zmm29,%zmm25,%zmm16           #! PC = 0x55555558eb48 *)
mov table 0x96@uint8;
inline vpternlogq64 (zmm16_0, zmm25_0, zmm29_0, table);
inline vpternlogq64 (zmm16_1, zmm25_1, zmm29_1, table);
inline vpternlogq64 (zmm16_2, zmm25_2, zmm29_2, table);
inline vpternlogq64 (zmm16_3, zmm25_3, zmm29_3, table);
inline vpternlogq64 (zmm16_4, zmm25_4, zmm29_4, table);
inline vpternlogq64 (zmm16_5, zmm25_5, zmm29_5, table);
inline vpternlogq64 (zmm16_6, zmm25_6, zmm29_6, table);
inline vpternlogq64 (zmm16_7, zmm25_7, zmm29_7, table);
(* vpternlogq $0x96,%zmm17,%zmm23,%zmm16           #! PC = 0x55555558eb4f *)
mov table 0x96@uint8;
inline vpternlogq64 (zmm16_0, zmm23_0, zmm17_0, table);
inline vpternlogq64 (zmm16_1, zmm23_1, zmm17_1, table);
inline vpternlogq64 (zmm16_2, zmm23_2, zmm17_2, table);
inline vpternlogq64 (zmm16_3, zmm23_3, zmm17_3, table);
inline vpternlogq64 (zmm16_4, zmm23_4, zmm17_4, table);
inline vpternlogq64 (zmm16_5, zmm23_5, zmm17_5, table);
inline vpternlogq64 (zmm16_6, zmm23_6, zmm17_6, table);
inline vpternlogq64 (zmm16_7, zmm23_7, zmm17_7, table);
(* vmovdqa64 %zmm9,%zmm20                          #! PC = 0x55555558eb56 *)
mov zmm20_0 zmm9_0;
mov zmm20_1 zmm9_1;
mov zmm20_2 zmm9_2;
mov zmm20_3 zmm9_3;
mov zmm20_4 zmm9_4;
mov zmm20_5 zmm9_5;
mov zmm20_6 zmm9_6;
mov zmm20_7 zmm9_7;
(* vmovdqa64 %zmm13,0x108(%rsp)                    #! EA = L0x7fffffffd5c0; PC = 0x55555558eb5c *)
mov L0x7fffffffd5c0 zmm13_0;
mov L0x7fffffffd5c8 zmm13_1;
mov L0x7fffffffd5d0 zmm13_2;
mov L0x7fffffffd5d8 zmm13_3;
mov L0x7fffffffd5e0 zmm13_4;
mov L0x7fffffffd5e8 zmm13_5;
mov L0x7fffffffd5f0 zmm13_6;
mov L0x7fffffffd5f8 zmm13_7;
(* vprolq $0x1,%zmm3,%zmm13                        #! PC = 0x55555558eb67 *)
rol zmm13_0 zmm3_0 0x1;
rol zmm13_1 zmm3_1 0x1;
rol zmm13_2 zmm3_2 0x1;
rol zmm13_3 zmm3_3 0x1;
rol zmm13_4 zmm3_4 0x1;
rol zmm13_5 zmm3_5 0x1;
rol zmm13_6 zmm3_6 0x1;
rol zmm13_7 zmm3_7 0x1;
(* vpternlogq $0x96,%zmm10,%zmm22,%zmm20           #! PC = 0x55555558eb6e *)
mov table 0x96@uint8;
inline vpternlogq64 (zmm20_0, zmm22_0, zmm10_0, table);
inline vpternlogq64 (zmm20_1, zmm22_1, zmm10_1, table);
inline vpternlogq64 (zmm20_2, zmm22_2, zmm10_2, table);
inline vpternlogq64 (zmm20_3, zmm22_3, zmm10_3, table);
inline vpternlogq64 (zmm20_4, zmm22_4, zmm10_4, table);
inline vpternlogq64 (zmm20_5, zmm22_5, zmm10_5, table);
inline vpternlogq64 (zmm20_6, zmm22_6, zmm10_6, table);
inline vpternlogq64 (zmm20_7, zmm22_7, zmm10_7, table);
(* vpternlogq $0x96,%zmm28,%zmm31,%zmm20           #! PC = 0x55555558eb75 *)
mov table 0x96@uint8;
inline vpternlogq64 (zmm20_0, zmm31_0, zmm28_0, table);
inline vpternlogq64 (zmm20_1, zmm31_1, zmm28_1, table);
inline vpternlogq64 (zmm20_2, zmm31_2, zmm28_2, table);
inline vpternlogq64 (zmm20_3, zmm31_3, zmm28_3, table);
inline vpternlogq64 (zmm20_4, zmm31_4, zmm28_4, table);
inline vpternlogq64 (zmm20_5, zmm31_5, zmm28_5, table);
inline vpternlogq64 (zmm20_6, zmm31_6, zmm28_6, table);
inline vpternlogq64 (zmm20_7, zmm31_7, zmm28_7, table);
(* vprolq $0x1,%zmm20,%zmm30                       #! PC = 0x55555558eb7c *)
rol zmm30_0 zmm20_0 0x1;
rol zmm30_1 zmm20_1 0x1;
rol zmm30_2 zmm20_2 0x1;
rol zmm30_3 zmm20_3 0x1;
rol zmm30_4 zmm20_4 0x1;
rol zmm30_5 zmm20_5 0x1;
rol zmm30_6 zmm20_6 0x1;
rol zmm30_7 zmm20_7 0x1;
(* vpxord 0x108(%rsp),%zmm20,%zmm20                #! EA = L0x7fffffffd5c0; Value = 0x5760e4fe572f71d6; PC = 0x55555558eb83 *)
xor zmm20_0@uint64 zmm20_0 L0x7fffffffd5c0;
xor zmm20_1@uint64 zmm20_1 L0x7fffffffd5c8;
xor zmm20_2@uint64 zmm20_2 L0x7fffffffd5d0;
xor zmm20_3@uint64 zmm20_3 L0x7fffffffd5d8;
xor zmm20_4@uint64 zmm20_4 L0x7fffffffd5e0;
xor zmm20_5@uint64 zmm20_5 L0x7fffffffd5e8;
xor zmm20_6@uint64 zmm20_6 L0x7fffffffd5f0;
xor zmm20_7@uint64 zmm20_7 L0x7fffffffd5f8;
(* mov    $0x800a,%ecx                             #! PC = 0x55555558eb8e *)
mov rcx 0x800a@uint64;
(* vmovdqa64 %zmm13,0xc8(%rsp)                     #! EA = L0x7fffffffd580; PC = 0x55555558eb93 *)
mov L0x7fffffffd580 zmm13_0;
mov L0x7fffffffd588 zmm13_1;
mov L0x7fffffffd590 zmm13_2;
mov L0x7fffffffd598 zmm13_3;
mov L0x7fffffffd5a0 zmm13_4;
mov L0x7fffffffd5a8 zmm13_5;
mov L0x7fffffffd5b0 zmm13_6;
mov L0x7fffffffd5b8 zmm13_7;
(* vprolq $0x1,%zmm16,%zmm13                       #! PC = 0x55555558eb9e *)
rol zmm13_0 zmm16_0 0x1;
rol zmm13_1 zmm16_1 0x1;
rol zmm13_2 zmm16_2 0x1;
rol zmm13_3 zmm16_3 0x1;
rol zmm13_4 zmm16_4 0x1;
rol zmm13_5 zmm16_5 0x1;
rol zmm13_6 zmm16_6 0x1;
rol zmm13_7 zmm16_7 0x1;
(* vpxord 0x148(%rsp),%zmm16,%zmm16                #! EA = L0x7fffffffd600; Value = 0xf49282ca4c0554b6; PC = 0x55555558eba5 *)
xor zmm16_0@uint64 zmm16_0 L0x7fffffffd600;
xor zmm16_1@uint64 zmm16_1 L0x7fffffffd608;
xor zmm16_2@uint64 zmm16_2 L0x7fffffffd610;
xor zmm16_3@uint64 zmm16_3 L0x7fffffffd618;
xor zmm16_4@uint64 zmm16_4 L0x7fffffffd620;
xor zmm16_5@uint64 zmm16_5 L0x7fffffffd628;
xor zmm16_6@uint64 zmm16_6 L0x7fffffffd630;
xor zmm16_7@uint64 zmm16_7 L0x7fffffffd638;
(* vpxord 0xc8(%rsp),%zmm21,%zmm21                 #! EA = L0x7fffffffd580; Value = 0xfd7150caca4d52f0; PC = 0x55555558ebb0 *)
xor zmm21_0@uint64 zmm21_0 L0x7fffffffd580;
xor zmm21_1@uint64 zmm21_1 L0x7fffffffd588;
xor zmm21_2@uint64 zmm21_2 L0x7fffffffd590;
xor zmm21_3@uint64 zmm21_3 L0x7fffffffd598;
xor zmm21_4@uint64 zmm21_4 L0x7fffffffd5a0;
xor zmm21_5@uint64 zmm21_5 L0x7fffffffd5a8;
xor zmm21_6@uint64 zmm21_6 L0x7fffffffd5b0;
xor zmm21_7@uint64 zmm21_7 L0x7fffffffd5b8;
(* vpxord %zmm31,%zmm16,%zmm31                     #! PC = 0x55555558ebbb *)
xor zmm31_0@uint64 zmm16_0 zmm31_0;
xor zmm31_1@uint64 zmm16_1 zmm31_1;
xor zmm31_2@uint64 zmm16_2 zmm31_2;
xor zmm31_3@uint64 zmm16_3 zmm31_3;
xor zmm31_4@uint64 zmm16_4 zmm31_4;
xor zmm31_5@uint64 zmm16_5 zmm31_5;
xor zmm31_6@uint64 zmm16_6 zmm31_6;
xor zmm31_7@uint64 zmm16_7 zmm31_7;
(* vprorq $0x14,%zmm31,%zmm31                      #! PC = 0x55555558ebc1 *)
ror zmm31_0 zmm31_0 0x14;
ror zmm31_1 zmm31_1 0x14;
ror zmm31_2 zmm31_2 0x14;
ror zmm31_3 zmm31_3 0x14;
ror zmm31_4 zmm31_4 0x14;
ror zmm31_5 zmm31_5 0x14;
ror zmm31_6 zmm31_6 0x14;
ror zmm31_7 zmm31_7 0x14;
(* vpxord %zmm1,%zmm20,%zmm1                       #! PC = 0x55555558ebc8 *)
xor zmm1_0@uint64 zmm20_0 zmm1_0;
xor zmm1_1@uint64 zmm20_1 zmm1_1;
xor zmm1_2@uint64 zmm20_2 zmm1_2;
xor zmm1_3@uint64 zmm20_3 zmm1_3;
xor zmm1_4@uint64 zmm20_4 zmm1_4;
xor zmm1_5@uint64 zmm20_5 zmm1_5;
xor zmm1_6@uint64 zmm20_6 zmm1_6;
xor zmm1_7@uint64 zmm20_7 zmm1_7;
(* vpxord %zmm13,%zmm26,%zmm13                     #! PC = 0x55555558ebce *)
xor zmm13_0@uint64 zmm26_0 zmm13_0;
xor zmm13_1@uint64 zmm26_1 zmm13_1;
xor zmm13_2@uint64 zmm26_2 zmm13_2;
xor zmm13_3@uint64 zmm26_3 zmm13_3;
xor zmm13_4@uint64 zmm26_4 zmm13_4;
xor zmm13_5@uint64 zmm26_5 zmm13_5;
xor zmm13_6@uint64 zmm26_6 zmm13_6;
xor zmm13_7@uint64 zmm26_7 zmm13_7;
(* vpxord %zmm6,%zmm21,%zmm6                       #! PC = 0x55555558ebd4 *)
xor zmm6_0@uint64 zmm21_0 zmm6_0;
xor zmm6_1@uint64 zmm21_1 zmm6_1;
xor zmm6_2@uint64 zmm21_2 zmm6_2;
xor zmm6_3@uint64 zmm21_3 zmm6_3;
xor zmm6_4@uint64 zmm21_4 zmm6_4;
xor zmm6_5@uint64 zmm21_5 zmm6_5;
xor zmm6_6@uint64 zmm21_6 zmm6_6;
xor zmm6_7@uint64 zmm21_7 zmm6_7;
(* vpxord %zmm12,%zmm13,%zmm12                     #! PC = 0x55555558ebda *)
xor zmm12_0@uint64 zmm13_0 zmm12_0;
xor zmm12_1@uint64 zmm13_1 zmm12_1;
xor zmm12_2@uint64 zmm13_2 zmm12_2;
xor zmm12_3@uint64 zmm13_3 zmm12_3;
xor zmm12_4@uint64 zmm13_4 zmm12_4;
xor zmm12_5@uint64 zmm13_5 zmm12_5;
xor zmm12_6@uint64 zmm13_6 zmm12_6;
xor zmm12_7@uint64 zmm13_7 zmm12_7;
(* vpxord %zmm30,%zmm3,%zmm3                       #! PC = 0x55555558ebe0 *)
xor zmm3_0@uint64 zmm3_0 zmm30_0;
xor zmm3_1@uint64 zmm3_1 zmm30_1;
xor zmm3_2@uint64 zmm3_2 zmm30_2;
xor zmm3_3@uint64 zmm3_3 zmm30_3;
xor zmm3_4@uint64 zmm3_4 zmm30_4;
xor zmm3_5@uint64 zmm3_5 zmm30_5;
xor zmm3_6@uint64 zmm3_6 zmm30_6;
xor zmm3_7@uint64 zmm3_7 zmm30_7;
(* vprorq $0x15,%zmm1,%zmm1                        #! PC = 0x55555558ebe6 *)
ror zmm1_0 zmm1_0 0x15;
ror zmm1_1 zmm1_1 0x15;
ror zmm1_2 zmm1_2 0x15;
ror zmm1_3 zmm1_3 0x15;
ror zmm1_4 zmm1_4 0x15;
ror zmm1_5 zmm1_5 0x15;
ror zmm1_6 zmm1_6 0x15;
ror zmm1_7 zmm1_7 0x15;
(* vprolq $0x15,%zmm6,%zmm6                        #! PC = 0x55555558ebed *)
rol zmm6_0 zmm6_0 0x15;
rol zmm6_1 zmm6_1 0x15;
rol zmm6_2 zmm6_2 0x15;
rol zmm6_3 zmm6_3 0x15;
rol zmm6_4 zmm6_4 0x15;
rol zmm6_5 zmm6_5 0x15;
rol zmm6_6 zmm6_6 0x15;
rol zmm6_7 zmm6_7 0x15;
(* vprolq $0xe,%zmm12,%zmm12                       #! PC = 0x55555558ebf4 *)
rol zmm12_0 zmm12_0 0xe;
rol zmm12_1 zmm12_1 0xe;
rol zmm12_2 zmm12_2 0xe;
rol zmm12_3 zmm12_3 0xe;
rol zmm12_4 zmm12_4 0xe;
rol zmm12_5 zmm12_5 0xe;
rol zmm12_6 zmm12_6 0xe;
rol zmm12_7 zmm12_7 0xe;
(* vpxord %zmm7,%zmm21,%zmm7                       #! PC = 0x55555558ebfb *)
xor zmm7_0@uint64 zmm21_0 zmm7_0;
xor zmm7_1@uint64 zmm21_1 zmm7_1;
xor zmm7_2@uint64 zmm21_2 zmm7_2;
xor zmm7_3@uint64 zmm21_3 zmm7_3;
xor zmm7_4@uint64 zmm21_4 zmm7_4;
xor zmm7_5@uint64 zmm21_5 zmm7_5;
xor zmm7_6@uint64 zmm21_6 zmm7_6;
xor zmm7_7@uint64 zmm21_7 zmm7_7;
(* vpxord %zmm19,%zmm13,%zmm19                     #! PC = 0x55555558ec01 *)
xor zmm19_0@uint64 zmm13_0 zmm19_0;
xor zmm19_1@uint64 zmm13_1 zmm19_1;
xor zmm19_2@uint64 zmm13_2 zmm19_2;
xor zmm19_3@uint64 zmm13_3 zmm19_3;
xor zmm19_4@uint64 zmm13_4 zmm19_4;
xor zmm19_5@uint64 zmm13_5 zmm19_5;
xor zmm19_6@uint64 zmm13_6 zmm19_6;
xor zmm19_7@uint64 zmm13_7 zmm19_7;
(* vprolq $0x1c,%zmm7,%zmm7                        #! PC = 0x55555558ec07 *)
rol zmm7_0 zmm7_0 0x1c;
rol zmm7_1 zmm7_1 0x1c;
rol zmm7_2 zmm7_2 0x1c;
rol zmm7_3 zmm7_3 0x1c;
rol zmm7_4 zmm7_4 0x1c;
rol zmm7_5 zmm7_5 0x1c;
rol zmm7_6 zmm7_6 0x1c;
rol zmm7_7 zmm7_7 0x1c;
(* vprolq $0x14,%zmm19,%zmm19                      #! PC = 0x55555558ec0e *)
rol zmm19_0 zmm19_0 0x14;
rol zmm19_1 zmm19_1 0x14;
rol zmm19_2 zmm19_2 0x14;
rol zmm19_3 zmm19_3 0x14;
rol zmm19_4 zmm19_4 0x14;
rol zmm19_5 zmm19_5 0x14;
rol zmm19_6 zmm19_6 0x14;
rol zmm19_7 zmm19_7 0x14;
(* vpxord %zmm17,%zmm3,%zmm17                      #! PC = 0x55555558ec15 *)
xor zmm17_0@uint64 zmm3_0 zmm17_0;
xor zmm17_1@uint64 zmm3_1 zmm17_1;
xor zmm17_2@uint64 zmm3_2 zmm17_2;
xor zmm17_3@uint64 zmm3_3 zmm17_3;
xor zmm17_4@uint64 zmm3_4 zmm17_4;
xor zmm17_5@uint64 zmm3_5 zmm17_5;
xor zmm17_6@uint64 zmm3_6 zmm17_6;
xor zmm17_7@uint64 zmm3_7 zmm17_7;
(* vpxord %zmm10,%zmm16,%zmm10                     #! PC = 0x55555558ec1b *)
xor zmm10_0@uint64 zmm16_0 zmm10_0;
xor zmm10_1@uint64 zmm16_1 zmm10_1;
xor zmm10_2@uint64 zmm16_2 zmm10_2;
xor zmm10_3@uint64 zmm16_3 zmm10_3;
xor zmm10_4@uint64 zmm16_4 zmm10_4;
xor zmm10_5@uint64 zmm16_5 zmm10_5;
xor zmm10_6@uint64 zmm16_6 zmm10_6;
xor zmm10_7@uint64 zmm16_7 zmm10_7;
(* vpxord %zmm14,%zmm20,%zmm14                     #! PC = 0x55555558ec21 *)
xor zmm14_0@uint64 zmm20_0 zmm14_0;
xor zmm14_1@uint64 zmm20_1 zmm14_1;
xor zmm14_2@uint64 zmm20_2 zmm14_2;
xor zmm14_3@uint64 zmm20_3 zmm14_3;
xor zmm14_4@uint64 zmm20_4 zmm14_4;
xor zmm14_5@uint64 zmm20_5 zmm14_5;
xor zmm14_6@uint64 zmm20_6 zmm14_6;
xor zmm14_7@uint64 zmm20_7 zmm14_7;
(* vpxord %zmm22,%zmm16,%zmm22                     #! PC = 0x55555558ec27 *)
xor zmm22_0@uint64 zmm16_0 zmm22_0;
xor zmm22_1@uint64 zmm16_1 zmm22_1;
xor zmm22_2@uint64 zmm16_2 zmm22_2;
xor zmm22_3@uint64 zmm16_3 zmm22_3;
xor zmm22_4@uint64 zmm16_4 zmm22_4;
xor zmm22_5@uint64 zmm16_5 zmm22_5;
xor zmm22_6@uint64 zmm16_6 zmm22_6;
xor zmm22_7@uint64 zmm16_7 zmm22_7;
(* vpxord %zmm15,%zmm20,%zmm15                     #! PC = 0x55555558ec2d *)
xor zmm15_0@uint64 zmm20_0 zmm15_0;
xor zmm15_1@uint64 zmm20_1 zmm15_1;
xor zmm15_2@uint64 zmm20_2 zmm15_2;
xor zmm15_3@uint64 zmm20_3 zmm15_3;
xor zmm15_4@uint64 zmm20_4 zmm15_4;
xor zmm15_5@uint64 zmm20_5 zmm15_5;
xor zmm15_6@uint64 zmm20_6 zmm15_6;
xor zmm15_7@uint64 zmm20_7 zmm15_7;
(* vpxord %zmm5,%zmm21,%zmm5                       #! PC = 0x55555558ec33 *)
xor zmm5_0@uint64 zmm21_0 zmm5_0;
xor zmm5_1@uint64 zmm21_1 zmm5_1;
xor zmm5_2@uint64 zmm21_2 zmm5_2;
xor zmm5_3@uint64 zmm21_3 zmm5_3;
xor zmm5_4@uint64 zmm21_4 zmm5_4;
xor zmm5_5@uint64 zmm21_5 zmm5_5;
xor zmm5_6@uint64 zmm21_6 zmm5_6;
xor zmm5_7@uint64 zmm21_7 zmm5_7;
(* vpxord %zmm11,%zmm20,%zmm11                     #! PC = 0x55555558ec39 *)
xor zmm11_0@uint64 zmm20_0 zmm11_0;
xor zmm11_1@uint64 zmm20_1 zmm11_1;
xor zmm11_2@uint64 zmm20_2 zmm11_2;
xor zmm11_3@uint64 zmm20_3 zmm11_3;
xor zmm11_4@uint64 zmm20_4 zmm11_4;
xor zmm11_5@uint64 zmm20_5 zmm11_5;
xor zmm11_6@uint64 zmm20_6 zmm11_6;
xor zmm11_7@uint64 zmm20_7 zmm11_7;
(* vpxord %zmm4,%zmm21,%zmm4                       #! PC = 0x55555558ec3f *)
xor zmm4_0@uint64 zmm21_0 zmm4_0;
xor zmm4_1@uint64 zmm21_1 zmm4_1;
xor zmm4_2@uint64 zmm21_2 zmm4_2;
xor zmm4_3@uint64 zmm21_3 zmm4_3;
xor zmm4_4@uint64 zmm21_4 zmm4_4;
xor zmm4_5@uint64 zmm21_5 zmm4_5;
xor zmm4_6@uint64 zmm21_6 zmm4_6;
xor zmm4_7@uint64 zmm21_7 zmm4_7;
(* vpxord %zmm2,%zmm20,%zmm20                      #! PC = 0x55555558ec45 *)
xor zmm20_0@uint64 zmm20_0 zmm2_0;
xor zmm20_1@uint64 zmm20_1 zmm2_1;
xor zmm20_2@uint64 zmm20_2 zmm2_2;
xor zmm20_3@uint64 zmm20_3 zmm2_3;
xor zmm20_4@uint64 zmm20_4 zmm2_4;
xor zmm20_5@uint64 zmm20_5 zmm2_5;
xor zmm20_6@uint64 zmm20_6 zmm2_6;
xor zmm20_7@uint64 zmm20_7 zmm2_7;
(* vpxord %zmm18,%zmm21,%zmm21                     #! PC = 0x55555558ec4b *)
xor zmm21_0@uint64 zmm21_0 zmm18_0;
xor zmm21_1@uint64 zmm21_1 zmm18_1;
xor zmm21_2@uint64 zmm21_2 zmm18_2;
xor zmm21_3@uint64 zmm21_3 zmm18_3;
xor zmm21_4@uint64 zmm21_4 zmm18_4;
xor zmm21_5@uint64 zmm21_5 zmm18_5;
xor zmm21_6@uint64 zmm21_6 zmm18_6;
xor zmm21_7@uint64 zmm21_7 zmm18_7;
(* vpxord %zmm3,%zmm24,%zmm24                      #! PC = 0x55555558ec51 *)
xor zmm24_0@uint64 zmm24_0 zmm3_0;
xor zmm24_1@uint64 zmm24_1 zmm3_1;
xor zmm24_2@uint64 zmm24_2 zmm3_2;
xor zmm24_3@uint64 zmm24_3 zmm3_3;
xor zmm24_4@uint64 zmm24_4 zmm3_4;
xor zmm24_5@uint64 zmm24_5 zmm3_5;
xor zmm24_6@uint64 zmm24_6 zmm3_6;
xor zmm24_7@uint64 zmm24_7 zmm3_7;
(* vprolq $0x1,%zmm22,%zmm22                       #! PC = 0x55555558ec57 *)
rol zmm22_0 zmm22_0 0x1;
rol zmm22_1 zmm22_1 0x1;
rol zmm22_2 zmm22_2 0x1;
rol zmm22_3 zmm22_3 0x1;
rol zmm22_4 zmm22_4 0x1;
rol zmm22_5 zmm22_5 0x1;
rol zmm22_6 zmm22_6 0x1;
rol zmm22_7 zmm22_7 0x1;
(* vprolq $0x6,%zmm15,%zmm15                       #! PC = 0x55555558ec5e *)
rol zmm15_0 zmm15_0 0x6;
rol zmm15_1 zmm15_1 0x6;
rol zmm15_2 zmm15_2 0x6;
rol zmm15_3 zmm15_3 0x6;
rol zmm15_4 zmm15_4 0x6;
rol zmm15_5 zmm15_5 0x6;
rol zmm15_6 zmm15_6 0x6;
rol zmm15_7 zmm15_7 0x6;
(* vprorq $0x2,%zmm20,%zmm20                       #! PC = 0x55555558ec65 *)
ror zmm20_0 zmm20_0 0x2;
ror zmm20_1 zmm20_1 0x2;
ror zmm20_2 zmm20_2 0x2;
ror zmm20_3 zmm20_3 0x2;
ror zmm20_4 zmm20_4 0x2;
ror zmm20_5 zmm20_5 0x2;
ror zmm20_6 zmm20_6 0x2;
ror zmm20_7 zmm20_7 0x2;
(* vprorq $0x9,%zmm21,%zmm21                       #! PC = 0x55555558ec6c *)
ror zmm21_0 zmm21_0 0x9;
ror zmm21_1 zmm21_1 0x9;
ror zmm21_2 zmm21_2 0x9;
ror zmm21_3 zmm21_3 0x9;
ror zmm21_4 zmm21_4 0x9;
ror zmm21_5 zmm21_5 0x9;
ror zmm21_6 zmm21_6 0x9;
ror zmm21_7 zmm21_7 0x9;
(* vprolq $0x3,%zmm17,%zmm17                       #! PC = 0x55555558ec73 *)
rol zmm17_0 zmm17_0 0x3;
rol zmm17_1 zmm17_1 0x3;
rol zmm17_2 zmm17_2 0x3;
rol zmm17_3 zmm17_3 0x3;
rol zmm17_4 zmm17_4 0x3;
rol zmm17_5 zmm17_5 0x3;
rol zmm17_6 zmm17_6 0x3;
rol zmm17_7 zmm17_7 0x3;
(* vprorq $0x13,%zmm10,%zmm10                      #! PC = 0x55555558ec7a *)
ror zmm10_0 zmm10_0 0x13;
ror zmm10_1 zmm10_1 0x13;
ror zmm10_2 zmm10_2 0x13;
ror zmm10_3 zmm10_3 0x13;
ror zmm10_4 zmm10_4 0x13;
ror zmm10_5 zmm10_5 0x13;
ror zmm10_6 zmm10_6 0x13;
ror zmm10_7 zmm10_7 0x13;
(* vprorq $0x3,%zmm14,%zmm14                       #! PC = 0x55555558ec81 *)
ror zmm14_0 zmm14_0 0x3;
ror zmm14_1 zmm14_1 0x3;
ror zmm14_2 zmm14_2 0x3;
ror zmm14_3 zmm14_3 0x3;
ror zmm14_4 zmm14_4 0x3;
ror zmm14_5 zmm14_5 0x3;
ror zmm14_6 zmm14_6 0x3;
ror zmm14_7 zmm14_7 0x3;
(* vpxord %zmm23,%zmm3,%zmm23                      #! PC = 0x55555558ec88 *)
xor zmm23_0@uint64 zmm3_0 zmm23_0;
xor zmm23_1@uint64 zmm3_1 zmm23_1;
xor zmm23_2@uint64 zmm3_2 zmm23_2;
xor zmm23_3@uint64 zmm3_3 zmm23_3;
xor zmm23_4@uint64 zmm3_4 zmm23_4;
xor zmm23_5@uint64 zmm3_5 zmm23_5;
xor zmm23_6@uint64 zmm3_6 zmm23_6;
xor zmm23_7@uint64 zmm3_7 zmm23_7;
(* vpxord %zmm0,%zmm13,%zmm0                       #! PC = 0x55555558ec8e *)
xor zmm0_0@uint64 zmm13_0 zmm0_0;
xor zmm0_1@uint64 zmm13_1 zmm0_1;
xor zmm0_2@uint64 zmm13_2 zmm0_2;
xor zmm0_3@uint64 zmm13_3 zmm0_3;
xor zmm0_4@uint64 zmm13_4 zmm0_4;
xor zmm0_5@uint64 zmm13_5 zmm0_5;
xor zmm0_6@uint64 zmm13_6 zmm0_6;
xor zmm0_7@uint64 zmm13_7 zmm0_7;
(* vpxord %zmm29,%zmm3,%zmm29                      #! PC = 0x55555558ec94 *)
xor zmm29_0@uint64 zmm3_0 zmm29_0;
xor zmm29_1@uint64 zmm3_1 zmm29_1;
xor zmm29_2@uint64 zmm3_2 zmm29_2;
xor zmm29_3@uint64 zmm3_3 zmm29_3;
xor zmm29_4@uint64 zmm3_4 zmm29_4;
xor zmm29_5@uint64 zmm3_5 zmm29_5;
xor zmm29_6@uint64 zmm3_6 zmm29_6;
xor zmm29_7@uint64 zmm3_7 zmm29_7;
(* vpxord %zmm9,%zmm16,%zmm9                       #! PC = 0x55555558ec9a *)
xor zmm9_0@uint64 zmm16_0 zmm9_0;
xor zmm9_1@uint64 zmm16_1 zmm9_1;
xor zmm9_2@uint64 zmm16_2 zmm9_2;
xor zmm9_3@uint64 zmm16_3 zmm9_3;
xor zmm9_4@uint64 zmm16_4 zmm9_4;
xor zmm9_5@uint64 zmm16_5 zmm9_5;
xor zmm9_6@uint64 zmm16_6 zmm9_6;
xor zmm9_7@uint64 zmm16_7 zmm9_7;
(* vpxord %zmm8,%zmm13,%zmm8                       #! PC = 0x55555558eca0 *)
xor zmm8_0@uint64 zmm13_0 zmm8_0;
xor zmm8_1@uint64 zmm13_1 zmm8_1;
xor zmm8_2@uint64 zmm13_2 zmm8_2;
xor zmm8_3@uint64 zmm13_3 zmm8_3;
xor zmm8_4@uint64 zmm13_4 zmm8_4;
xor zmm8_5@uint64 zmm13_5 zmm8_5;
xor zmm8_6@uint64 zmm13_6 zmm8_6;
xor zmm8_7@uint64 zmm13_7 zmm8_7;
(* vpxord %zmm25,%zmm3,%zmm3                       #! PC = 0x55555558eca6 *)
xor zmm3_0@uint64 zmm3_0 zmm25_0;
xor zmm3_1@uint64 zmm3_1 zmm25_1;
xor zmm3_2@uint64 zmm3_2 zmm25_2;
xor zmm3_3@uint64 zmm3_3 zmm25_3;
xor zmm3_4@uint64 zmm3_4 zmm25_4;
xor zmm3_5@uint64 zmm3_5 zmm25_5;
xor zmm3_6@uint64 zmm3_6 zmm25_6;
xor zmm3_7@uint64 zmm3_7 zmm25_7;
(* vpxord %zmm28,%zmm16,%zmm16                     #! PC = 0x55555558ecac *)
xor zmm16_0@uint64 zmm16_0 zmm28_0;
xor zmm16_1@uint64 zmm16_1 zmm28_1;
xor zmm16_2@uint64 zmm16_2 zmm28_2;
xor zmm16_3@uint64 zmm16_3 zmm28_3;
xor zmm16_4@uint64 zmm16_4 zmm28_4;
xor zmm16_5@uint64 zmm16_5 zmm28_5;
xor zmm16_6@uint64 zmm16_6 zmm28_6;
xor zmm16_7@uint64 zmm16_7 zmm28_7;
(* vpxord %zmm27,%zmm13,%zmm13                     #! PC = 0x55555558ecb2 *)
xor zmm13_0@uint64 zmm13_0 zmm27_0;
xor zmm13_1@uint64 zmm13_1 zmm27_1;
xor zmm13_2@uint64 zmm13_2 zmm27_2;
xor zmm13_3@uint64 zmm13_3 zmm27_3;
xor zmm13_4@uint64 zmm13_4 zmm27_4;
xor zmm13_5@uint64 zmm13_5 zmm27_5;
xor zmm13_6@uint64 zmm13_6 zmm27_6;
xor zmm13_7@uint64 zmm13_7 zmm27_7;
(* vprorq $0x1c,%zmm29,%zmm29                      #! PC = 0x55555558ecb8 *)
ror zmm29_0 zmm29_0 0x1c;
ror zmm29_1 zmm29_1 0x1c;
ror zmm29_2 zmm29_2 0x1c;
ror zmm29_3 zmm29_3 0x1c;
ror zmm29_4 zmm29_4 0x1c;
ror zmm29_5 zmm29_5 0x1c;
ror zmm29_6 zmm29_6 0x1c;
ror zmm29_7 zmm29_7 0x1c;
(* vprolq $0x1b,%zmm8,%zmm8                        #! PC = 0x55555558ecbf *)
rol zmm8_0 zmm8_0 0x1b;
rol zmm8_1 zmm8_1 0x1b;
rol zmm8_2 zmm8_2 0x1b;
rol zmm8_3 zmm8_3 0x1b;
rol zmm8_4 zmm8_4 0x1b;
rol zmm8_5 zmm8_5 0x1b;
rol zmm8_6 zmm8_6 0x1b;
rol zmm8_7 zmm8_7 0x1b;
(* vprolq $0x12,%zmm23,%zmm23                      #! PC = 0x55555558ecc6 *)
rol zmm23_0 zmm23_0 0x12;
rol zmm23_1 zmm23_1 0x12;
rol zmm23_2 zmm23_2 0x12;
rol zmm23_3 zmm23_3 0x12;
rol zmm23_4 zmm23_4 0x12;
rol zmm23_5 zmm23_5 0x12;
rol zmm23_6 zmm23_6 0x12;
rol zmm23_7 zmm23_7 0x12;
(* vprolq $0x19,%zmm5,%zmm5                        #! PC = 0x55555558eccd *)
rol zmm5_0 zmm5_0 0x19;
rol zmm5_1 zmm5_1 0x19;
rol zmm5_2 zmm5_2 0x19;
rol zmm5_3 zmm5_3 0x19;
rol zmm5_4 zmm5_4 0x19;
rol zmm5_5 zmm5_5 0x19;
rol zmm5_6 zmm5_6 0x19;
rol zmm5_7 zmm5_7 0x19;
(* vprolq $0x8,%zmm0,%zmm0                         #! PC = 0x55555558ecd4 *)
rol zmm0_0 zmm0_0 0x8;
rol zmm0_1 zmm0_1 0x8;
rol zmm0_2 zmm0_2 0x8;
rol zmm0_3 zmm0_3 0x8;
rol zmm0_4 zmm0_4 0x8;
rol zmm0_5 zmm0_5 0x8;
rol zmm0_6 zmm0_6 0x8;
rol zmm0_7 zmm0_7 0x8;
(* vprorq $0x17,%zmm3,%zmm3                        #! PC = 0x55555558ecdb *)
ror zmm3_0 zmm3_0 0x17;
ror zmm3_1 zmm3_1 0x17;
ror zmm3_2 zmm3_2 0x17;
ror zmm3_3 zmm3_3 0x17;
ror zmm3_4 zmm3_4 0x17;
ror zmm3_5 zmm3_5 0x17;
ror zmm3_6 zmm3_6 0x17;
ror zmm3_7 zmm3_7 0x17;
(* vprolq $0x2,%zmm16,%zmm16                       #! PC = 0x55555558ece2 *)
rol zmm16_0 zmm16_0 0x2;
rol zmm16_1 zmm16_1 0x2;
rol zmm16_2 zmm16_2 0x2;
rol zmm16_3 zmm16_3 0x2;
rol zmm16_4 zmm16_4 0x2;
rol zmm16_5 zmm16_5 0x2;
rol zmm16_6 zmm16_6 0x2;
rol zmm16_7 zmm16_7 0x2;
(* vprorq $0x19,%zmm13,%zmm13                      #! PC = 0x55555558ece9 *)
ror zmm13_0 zmm13_0 0x19;
ror zmm13_1 zmm13_1 0x19;
ror zmm13_2 zmm13_2 0x19;
ror zmm13_3 zmm13_3 0x19;
ror zmm13_4 zmm13_4 0x19;
ror zmm13_5 zmm13_5 0x19;
ror zmm13_6 zmm13_6 0x19;
ror zmm13_7 zmm13_7 0x19;
(* vprolq $0xa,%zmm9,%zmm9                         #! PC = 0x55555558ecf0 *)
rol zmm9_0 zmm9_0 0xa;
rol zmm9_1 zmm9_1 0xa;
rol zmm9_2 zmm9_2 0xa;
rol zmm9_3 zmm9_3 0xa;
rol zmm9_4 zmm9_4 0xa;
rol zmm9_5 zmm9_5 0xa;
rol zmm9_6 zmm9_6 0xa;
rol zmm9_7 zmm9_7 0xa;
(* vprolq $0xf,%zmm11,%zmm11                       #! PC = 0x55555558ecf7 *)
rol zmm11_0 zmm11_0 0xf;
rol zmm11_1 zmm11_1 0xf;
rol zmm11_2 zmm11_2 0xf;
rol zmm11_3 zmm11_3 0xf;
rol zmm11_4 zmm11_4 0xf;
rol zmm11_5 zmm11_5 0xf;
rol zmm11_6 zmm11_6 0xf;
rol zmm11_7 zmm11_7 0xf;
(* vprorq $0x8,%zmm4,%zmm4                         #! PC = 0x55555558ecfe *)
ror zmm4_0 zmm4_0 0x8;
ror zmm4_1 zmm4_1 0x8;
ror zmm4_2 zmm4_2 0x8;
ror zmm4_3 zmm4_3 0x8;
ror zmm4_4 zmm4_4 0x8;
ror zmm4_5 zmm4_5 0x8;
ror zmm4_6 zmm4_6 0x8;
ror zmm4_7 zmm4_7 0x8;
(* vmovdqa64 %zmm24,%zmm30                         #! PC = 0x55555558ed05 *)
mov zmm30_0 zmm24_0;
mov zmm30_1 zmm24_1;
mov zmm30_2 zmm24_2;
mov zmm30_3 zmm24_3;
mov zmm30_4 zmm24_4;
mov zmm30_5 zmm24_5;
mov zmm30_6 zmm24_6;
mov zmm30_7 zmm24_7;
(* vmovdqa64 %zmm31,%zmm26                         #! PC = 0x55555558ed0b *)
mov zmm26_0 zmm31_0;
mov zmm26_1 zmm31_1;
mov zmm26_2 zmm31_2;
mov zmm26_3 zmm31_3;
mov zmm26_4 zmm31_4;
mov zmm26_5 zmm31_5;
mov zmm26_6 zmm31_6;
mov zmm26_7 zmm31_7;
(* vpternlogq $0xd2,%zmm1,%zmm31,%zmm30            #! PC = 0x55555558ed11 *)
mov table 0xd2@uint8;
inline vpternlogq64 (zmm30_0, zmm31_0, zmm1_0, table);
inline vpternlogq64 (zmm30_1, zmm31_1, zmm1_1, table);
inline vpternlogq64 (zmm30_2, zmm31_2, zmm1_2, table);
inline vpternlogq64 (zmm30_3, zmm31_3, zmm1_3, table);
inline vpternlogq64 (zmm30_4, zmm31_4, zmm1_4, table);
inline vpternlogq64 (zmm30_5, zmm31_5, zmm1_5, table);
inline vpternlogq64 (zmm30_6, zmm31_6, zmm1_6, table);
inline vpternlogq64 (zmm30_7, zmm31_7, zmm1_7, table);
(* vpternlogq $0xd2,%zmm6,%zmm1,%zmm26             #! PC = 0x55555558ed18 *)
mov table 0xd2@uint8;
inline vpternlogq64 (zmm26_0, zmm1_0, zmm6_0, table);
inline vpternlogq64 (zmm26_1, zmm1_1, zmm6_1, table);
inline vpternlogq64 (zmm26_2, zmm1_2, zmm6_2, table);
inline vpternlogq64 (zmm26_3, zmm1_3, zmm6_3, table);
inline vpternlogq64 (zmm26_4, zmm1_4, zmm6_4, table);
inline vpternlogq64 (zmm26_5, zmm1_5, zmm6_5, table);
inline vpternlogq64 (zmm26_6, zmm1_6, zmm6_6, table);
inline vpternlogq64 (zmm26_7, zmm1_7, zmm6_7, table);
(* vpternlogq $0xd2,%zmm12,%zmm6,%zmm1             #! PC = 0x55555558ed1f *)
mov table 0xd2@uint8;
inline vpternlogq64 (zmm1_0, zmm6_0, zmm12_0, table);
inline vpternlogq64 (zmm1_1, zmm6_1, zmm12_1, table);
inline vpternlogq64 (zmm1_2, zmm6_2, zmm12_2, table);
inline vpternlogq64 (zmm1_3, zmm6_3, zmm12_3, table);
inline vpternlogq64 (zmm1_4, zmm6_4, zmm12_4, table);
inline vpternlogq64 (zmm1_5, zmm6_5, zmm12_5, table);
inline vpternlogq64 (zmm1_6, zmm6_6, zmm12_6, table);
inline vpternlogq64 (zmm1_7, zmm6_7, zmm12_7, table);
(* vpternlogq $0xd2,%zmm24,%zmm12,%zmm6            #! PC = 0x55555558ed26 *)
mov table 0xd2@uint8;
inline vpternlogq64 (zmm6_0, zmm12_0, zmm24_0, table);
inline vpternlogq64 (zmm6_1, zmm12_1, zmm24_1, table);
inline vpternlogq64 (zmm6_2, zmm12_2, zmm24_2, table);
inline vpternlogq64 (zmm6_3, zmm12_3, zmm24_3, table);
inline vpternlogq64 (zmm6_4, zmm12_4, zmm24_4, table);
inline vpternlogq64 (zmm6_5, zmm12_5, zmm24_5, table);
inline vpternlogq64 (zmm6_6, zmm12_6, zmm24_6, table);
inline vpternlogq64 (zmm6_7, zmm12_7, zmm24_7, table);
(* vpternlogq $0xd2,%zmm31,%zmm24,%zmm12           #! PC = 0x55555558ed2d *)
mov table 0xd2@uint8;
inline vpternlogq64 (zmm12_0, zmm24_0, zmm31_0, table);
inline vpternlogq64 (zmm12_1, zmm24_1, zmm31_1, table);
inline vpternlogq64 (zmm12_2, zmm24_2, zmm31_2, table);
inline vpternlogq64 (zmm12_3, zmm24_3, zmm31_3, table);
inline vpternlogq64 (zmm12_4, zmm24_4, zmm31_4, table);
inline vpternlogq64 (zmm12_5, zmm24_5, zmm31_5, table);
inline vpternlogq64 (zmm12_6, zmm24_6, zmm31_6, table);
inline vpternlogq64 (zmm12_7, zmm24_7, zmm31_7, table);
(* vpbroadcastq %r12,%zmm24                        #! PC = 0x55555558ed34 *)
mov zmm24_0 r12;
mov zmm24_1 r12;
mov zmm24_2 r12;
mov zmm24_3 r12;
mov zmm24_4 r12;
mov zmm24_5 r12;
mov zmm24_6 r12;
mov zmm24_7 r12;
(* vpxord %zmm30,%zmm24,%zmm24                     #! PC = 0x55555558ed3a *)
xor zmm24_0@uint64 zmm24_0 zmm30_0;
xor zmm24_1@uint64 zmm24_1 zmm30_1;
xor zmm24_2@uint64 zmm24_2 zmm30_2;
xor zmm24_3@uint64 zmm24_3 zmm30_3;
xor zmm24_4@uint64 zmm24_4 zmm30_4;
xor zmm24_5@uint64 zmm24_5 zmm30_5;
xor zmm24_6@uint64 zmm24_6 zmm30_6;
xor zmm24_7@uint64 zmm24_7 zmm30_7;
(* vmovdqa64 %zmm19,%zmm31                         #! PC = 0x55555558ed40 *)
mov zmm31_0 zmm19_0;
mov zmm31_1 zmm19_1;
mov zmm31_2 zmm19_2;
mov zmm31_3 zmm19_3;
mov zmm31_4 zmm19_4;
mov zmm31_5 zmm19_5;
mov zmm31_6 zmm19_6;
mov zmm31_7 zmm19_7;
(* vmovdqa64 %zmm7,%zmm30                          #! PC = 0x55555558ed46 *)
mov zmm30_0 zmm7_0;
mov zmm30_1 zmm7_1;
mov zmm30_2 zmm7_2;
mov zmm30_3 zmm7_3;
mov zmm30_4 zmm7_4;
mov zmm30_5 zmm7_5;
mov zmm30_6 zmm7_6;
mov zmm30_7 zmm7_7;
(* vpternlogq $0xd2,%zmm17,%zmm19,%zmm30           #! PC = 0x55555558ed4c *)
mov table 0xd2@uint8;
inline vpternlogq64 (zmm30_0, zmm19_0, zmm17_0, table);
inline vpternlogq64 (zmm30_1, zmm19_1, zmm17_1, table);
inline vpternlogq64 (zmm30_2, zmm19_2, zmm17_2, table);
inline vpternlogq64 (zmm30_3, zmm19_3, zmm17_3, table);
inline vpternlogq64 (zmm30_4, zmm19_4, zmm17_4, table);
inline vpternlogq64 (zmm30_5, zmm19_5, zmm17_5, table);
inline vpternlogq64 (zmm30_6, zmm19_6, zmm17_6, table);
inline vpternlogq64 (zmm30_7, zmm19_7, zmm17_7, table);
(* vpternlogq $0xd2,%zmm10,%zmm17,%zmm31           #! PC = 0x55555558ed53 *)
mov table 0xd2@uint8;
inline vpternlogq64 (zmm31_0, zmm17_0, zmm10_0, table);
inline vpternlogq64 (zmm31_1, zmm17_1, zmm10_1, table);
inline vpternlogq64 (zmm31_2, zmm17_2, zmm10_2, table);
inline vpternlogq64 (zmm31_3, zmm17_3, zmm10_3, table);
inline vpternlogq64 (zmm31_4, zmm17_4, zmm10_4, table);
inline vpternlogq64 (zmm31_5, zmm17_5, zmm10_5, table);
inline vpternlogq64 (zmm31_6, zmm17_6, zmm10_6, table);
inline vpternlogq64 (zmm31_7, zmm17_7, zmm10_7, table);
(* vmovdqa64 %zmm20,%zmm25                         #! PC = 0x55555558ed5a *)
mov zmm25_0 zmm20_0;
mov zmm25_1 zmm20_1;
mov zmm25_2 zmm20_2;
mov zmm25_3 zmm20_3;
mov zmm25_4 zmm20_4;
mov zmm25_5 zmm20_5;
mov zmm25_6 zmm20_6;
mov zmm25_7 zmm20_7;
(* vpternlogq $0xd2,%zmm14,%zmm10,%zmm17           #! PC = 0x55555558ed60 *)
mov table 0xd2@uint8;
inline vpternlogq64 (zmm17_0, zmm10_0, zmm14_0, table);
inline vpternlogq64 (zmm17_1, zmm10_1, zmm14_1, table);
inline vpternlogq64 (zmm17_2, zmm10_2, zmm14_2, table);
inline vpternlogq64 (zmm17_3, zmm10_3, zmm14_3, table);
inline vpternlogq64 (zmm17_4, zmm10_4, zmm14_4, table);
inline vpternlogq64 (zmm17_5, zmm10_5, zmm14_5, table);
inline vpternlogq64 (zmm17_6, zmm10_6, zmm14_6, table);
inline vpternlogq64 (zmm17_7, zmm10_7, zmm14_7, table);
(* vmovdqa64 %zmm21,%zmm28                         #! PC = 0x55555558ed67 *)
mov zmm28_0 zmm21_0;
mov zmm28_1 zmm21_1;
mov zmm28_2 zmm21_2;
mov zmm28_3 zmm21_3;
mov zmm28_4 zmm21_4;
mov zmm28_5 zmm21_5;
mov zmm28_6 zmm21_6;
mov zmm28_7 zmm21_7;
(* vpternlogq $0xd2,%zmm7,%zmm14,%zmm10            #! PC = 0x55555558ed6d *)
mov table 0xd2@uint8;
inline vpternlogq64 (zmm10_0, zmm14_0, zmm7_0, table);
inline vpternlogq64 (zmm10_1, zmm14_1, zmm7_1, table);
inline vpternlogq64 (zmm10_2, zmm14_2, zmm7_2, table);
inline vpternlogq64 (zmm10_3, zmm14_3, zmm7_3, table);
inline vpternlogq64 (zmm10_4, zmm14_4, zmm7_4, table);
inline vpternlogq64 (zmm10_5, zmm14_5, zmm7_5, table);
inline vpternlogq64 (zmm10_6, zmm14_6, zmm7_6, table);
inline vpternlogq64 (zmm10_7, zmm14_7, zmm7_7, table);
(* vpternlogq $0xd2,%zmm19,%zmm7,%zmm14            #! PC = 0x55555558ed74 *)
mov table 0xd2@uint8;
inline vpternlogq64 (zmm14_0, zmm7_0, zmm19_0, table);
inline vpternlogq64 (zmm14_1, zmm7_1, zmm19_1, table);
inline vpternlogq64 (zmm14_2, zmm7_2, zmm19_2, table);
inline vpternlogq64 (zmm14_3, zmm7_3, zmm19_3, table);
inline vpternlogq64 (zmm14_4, zmm7_4, zmm19_4, table);
inline vpternlogq64 (zmm14_5, zmm7_5, zmm19_5, table);
inline vpternlogq64 (zmm14_6, zmm7_6, zmm19_6, table);
inline vpternlogq64 (zmm14_7, zmm7_7, zmm19_7, table);
(* vmovdqa64 %zmm22,%zmm7                          #! PC = 0x55555558ed7b *)
mov zmm7_0 zmm22_0;
mov zmm7_1 zmm22_1;
mov zmm7_2 zmm22_2;
mov zmm7_3 zmm22_3;
mov zmm7_4 zmm22_4;
mov zmm7_5 zmm22_5;
mov zmm7_6 zmm22_6;
mov zmm7_7 zmm22_7;
(* vmovdqa64 %zmm15,%zmm19                         #! PC = 0x55555558ed81 *)
mov zmm19_0 zmm15_0;
mov zmm19_1 zmm15_1;
mov zmm19_2 zmm15_2;
mov zmm19_3 zmm15_3;
mov zmm19_4 zmm15_4;
mov zmm19_5 zmm15_5;
mov zmm19_6 zmm15_6;
mov zmm19_7 zmm15_7;
(* vpternlogq $0xd2,%zmm3,%zmm13,%zmm28            #! PC = 0x55555558ed87 *)
mov table 0xd2@uint8;
inline vpternlogq64 (zmm28_0, zmm13_0, zmm3_0, table);
inline vpternlogq64 (zmm28_1, zmm13_1, zmm3_1, table);
inline vpternlogq64 (zmm28_2, zmm13_2, zmm3_2, table);
inline vpternlogq64 (zmm28_3, zmm13_3, zmm3_3, table);
inline vpternlogq64 (zmm28_4, zmm13_4, zmm3_4, table);
inline vpternlogq64 (zmm28_5, zmm13_5, zmm3_5, table);
inline vpternlogq64 (zmm28_6, zmm13_6, zmm3_6, table);
inline vpternlogq64 (zmm28_7, zmm13_7, zmm3_7, table);
(* vpternlogq $0xd2,%zmm5,%zmm15,%zmm7             #! PC = 0x55555558ed8e *)
mov table 0xd2@uint8;
inline vpternlogq64 (zmm7_0, zmm15_0, zmm5_0, table);
inline vpternlogq64 (zmm7_1, zmm15_1, zmm5_1, table);
inline vpternlogq64 (zmm7_2, zmm15_2, zmm5_2, table);
inline vpternlogq64 (zmm7_3, zmm15_3, zmm5_3, table);
inline vpternlogq64 (zmm7_4, zmm15_4, zmm5_4, table);
inline vpternlogq64 (zmm7_5, zmm15_5, zmm5_5, table);
inline vpternlogq64 (zmm7_6, zmm15_6, zmm5_6, table);
inline vpternlogq64 (zmm7_7, zmm15_7, zmm5_7, table);
(* vpternlogq $0xd2,%zmm0,%zmm5,%zmm19             #! PC = 0x55555558ed95 *)
mov table 0xd2@uint8;
inline vpternlogq64 (zmm19_0, zmm5_0, zmm0_0, table);
inline vpternlogq64 (zmm19_1, zmm5_1, zmm0_1, table);
inline vpternlogq64 (zmm19_2, zmm5_2, zmm0_2, table);
inline vpternlogq64 (zmm19_3, zmm5_3, zmm0_3, table);
inline vpternlogq64 (zmm19_4, zmm5_4, zmm0_4, table);
inline vpternlogq64 (zmm19_5, zmm5_5, zmm0_5, table);
inline vpternlogq64 (zmm19_6, zmm5_6, zmm0_6, table);
inline vpternlogq64 (zmm19_7, zmm5_7, zmm0_7, table);
(* vpternlogq $0xd2,%zmm13,%zmm21,%zmm25           #! PC = 0x55555558ed9c *)
mov table 0xd2@uint8;
inline vpternlogq64 (zmm25_0, zmm21_0, zmm13_0, table);
inline vpternlogq64 (zmm25_1, zmm21_1, zmm13_1, table);
inline vpternlogq64 (zmm25_2, zmm21_2, zmm13_2, table);
inline vpternlogq64 (zmm25_3, zmm21_3, zmm13_3, table);
inline vpternlogq64 (zmm25_4, zmm21_4, zmm13_4, table);
inline vpternlogq64 (zmm25_5, zmm21_5, zmm13_5, table);
inline vpternlogq64 (zmm25_6, zmm21_6, zmm13_6, table);
inline vpternlogq64 (zmm25_7, zmm21_7, zmm13_7, table);
(* vpternlogq $0xd2,%zmm23,%zmm0,%zmm5             #! PC = 0x55555558eda3 *)
mov table 0xd2@uint8;
inline vpternlogq64 (zmm5_0, zmm0_0, zmm23_0, table);
inline vpternlogq64 (zmm5_1, zmm0_1, zmm23_1, table);
inline vpternlogq64 (zmm5_2, zmm0_2, zmm23_2, table);
inline vpternlogq64 (zmm5_3, zmm0_3, zmm23_3, table);
inline vpternlogq64 (zmm5_4, zmm0_4, zmm23_4, table);
inline vpternlogq64 (zmm5_5, zmm0_5, zmm23_5, table);
inline vpternlogq64 (zmm5_6, zmm0_6, zmm23_6, table);
inline vpternlogq64 (zmm5_7, zmm0_7, zmm23_7, table);
(* vpternlogq $0xd2,%zmm16,%zmm3,%zmm13            #! PC = 0x55555558edaa *)
mov table 0xd2@uint8;
inline vpternlogq64 (zmm13_0, zmm3_0, zmm16_0, table);
inline vpternlogq64 (zmm13_1, zmm3_1, zmm16_1, table);
inline vpternlogq64 (zmm13_2, zmm3_2, zmm16_2, table);
inline vpternlogq64 (zmm13_3, zmm3_3, zmm16_3, table);
inline vpternlogq64 (zmm13_4, zmm3_4, zmm16_4, table);
inline vpternlogq64 (zmm13_5, zmm3_5, zmm16_5, table);
inline vpternlogq64 (zmm13_6, zmm3_6, zmm16_6, table);
inline vpternlogq64 (zmm13_7, zmm3_7, zmm16_7, table);
(* vpternlogq $0xd2,%zmm22,%zmm23,%zmm0            #! PC = 0x55555558edb1 *)
mov table 0xd2@uint8;
inline vpternlogq64 (zmm0_0, zmm23_0, zmm22_0, table);
inline vpternlogq64 (zmm0_1, zmm23_1, zmm22_1, table);
inline vpternlogq64 (zmm0_2, zmm23_2, zmm22_2, table);
inline vpternlogq64 (zmm0_3, zmm23_3, zmm22_3, table);
inline vpternlogq64 (zmm0_4, zmm23_4, zmm22_4, table);
inline vpternlogq64 (zmm0_5, zmm23_5, zmm22_5, table);
inline vpternlogq64 (zmm0_6, zmm23_6, zmm22_6, table);
inline vpternlogq64 (zmm0_7, zmm23_7, zmm22_7, table);
(* vpternlogq $0xd2,%zmm20,%zmm16,%zmm3            #! PC = 0x55555558edb8 *)
mov table 0xd2@uint8;
inline vpternlogq64 (zmm3_0, zmm16_0, zmm20_0, table);
inline vpternlogq64 (zmm3_1, zmm16_1, zmm20_1, table);
inline vpternlogq64 (zmm3_2, zmm16_2, zmm20_2, table);
inline vpternlogq64 (zmm3_3, zmm16_3, zmm20_3, table);
inline vpternlogq64 (zmm3_4, zmm16_4, zmm20_4, table);
inline vpternlogq64 (zmm3_5, zmm16_5, zmm20_5, table);
inline vpternlogq64 (zmm3_6, zmm16_6, zmm20_6, table);
inline vpternlogq64 (zmm3_7, zmm16_7, zmm20_7, table);
(* vpternlogq $0xd2,%zmm15,%zmm22,%zmm23           #! PC = 0x55555558edbf *)
mov table 0xd2@uint8;
inline vpternlogq64 (zmm23_0, zmm22_0, zmm15_0, table);
inline vpternlogq64 (zmm23_1, zmm22_1, zmm15_1, table);
inline vpternlogq64 (zmm23_2, zmm22_2, zmm15_2, table);
inline vpternlogq64 (zmm23_3, zmm22_3, zmm15_3, table);
inline vpternlogq64 (zmm23_4, zmm22_4, zmm15_4, table);
inline vpternlogq64 (zmm23_5, zmm22_5, zmm15_5, table);
inline vpternlogq64 (zmm23_6, zmm22_6, zmm15_6, table);
inline vpternlogq64 (zmm23_7, zmm22_7, zmm15_7, table);
(* vpternlogq $0xd2,%zmm21,%zmm20,%zmm16           #! PC = 0x55555558edc6 *)
mov table 0xd2@uint8;
inline vpternlogq64 (zmm16_0, zmm20_0, zmm21_0, table);
inline vpternlogq64 (zmm16_1, zmm20_1, zmm21_1, table);
inline vpternlogq64 (zmm16_2, zmm20_2, zmm21_2, table);
inline vpternlogq64 (zmm16_3, zmm20_3, zmm21_3, table);
inline vpternlogq64 (zmm16_4, zmm20_4, zmm21_4, table);
inline vpternlogq64 (zmm16_5, zmm20_5, zmm21_5, table);
inline vpternlogq64 (zmm16_6, zmm20_6, zmm21_6, table);
inline vpternlogq64 (zmm16_7, zmm20_7, zmm21_7, table);
(* vmovdqa64 %zmm8,%zmm22                          #! PC = 0x55555558edcd *)
mov zmm22_0 zmm8_0;
mov zmm22_1 zmm8_1;
mov zmm22_2 zmm8_2;
mov zmm22_3 zmm8_3;
mov zmm22_4 zmm8_4;
mov zmm22_5 zmm8_5;
mov zmm22_6 zmm8_6;
mov zmm22_7 zmm8_7;
(* vmovdqa64 %zmm29,%zmm15                         #! PC = 0x55555558edd3 *)
mov zmm15_0 zmm29_0;
mov zmm15_1 zmm29_1;
mov zmm15_2 zmm29_2;
mov zmm15_3 zmm29_3;
mov zmm15_4 zmm29_4;
mov zmm15_5 zmm29_5;
mov zmm15_6 zmm29_6;
mov zmm15_7 zmm29_7;
(* vmovdqa64 %zmm17,%zmm20                         #! PC = 0x55555558edd9 *)
mov zmm20_0 zmm17_0;
mov zmm20_1 zmm17_1;
mov zmm20_2 zmm17_2;
mov zmm20_3 zmm17_3;
mov zmm20_4 zmm17_4;
mov zmm20_5 zmm17_5;
mov zmm20_6 zmm17_6;
mov zmm20_7 zmm17_7;
(* vpternlogq $0xd2,%zmm9,%zmm29,%zmm22            #! PC = 0x55555558eddf *)
mov table 0xd2@uint8;
inline vpternlogq64 (zmm22_0, zmm29_0, zmm9_0, table);
inline vpternlogq64 (zmm22_1, zmm29_1, zmm9_1, table);
inline vpternlogq64 (zmm22_2, zmm29_2, zmm9_2, table);
inline vpternlogq64 (zmm22_3, zmm29_3, zmm9_3, table);
inline vpternlogq64 (zmm22_4, zmm29_4, zmm9_4, table);
inline vpternlogq64 (zmm22_5, zmm29_5, zmm9_5, table);
inline vpternlogq64 (zmm22_6, zmm29_6, zmm9_6, table);
inline vpternlogq64 (zmm22_7, zmm29_7, zmm9_7, table);
(* vpternlogq $0xd2,%zmm11,%zmm9,%zmm15            #! PC = 0x55555558ede6 *)
mov table 0xd2@uint8;
inline vpternlogq64 (zmm15_0, zmm9_0, zmm11_0, table);
inline vpternlogq64 (zmm15_1, zmm9_1, zmm11_1, table);
inline vpternlogq64 (zmm15_2, zmm9_2, zmm11_2, table);
inline vpternlogq64 (zmm15_3, zmm9_3, zmm11_3, table);
inline vpternlogq64 (zmm15_4, zmm9_4, zmm11_4, table);
inline vpternlogq64 (zmm15_5, zmm9_5, zmm11_5, table);
inline vpternlogq64 (zmm15_6, zmm9_6, zmm11_6, table);
inline vpternlogq64 (zmm15_7, zmm9_7, zmm11_7, table);
(* vpternlogq $0x96,%zmm13,%zmm1,%zmm20            #! PC = 0x55555558eded *)
mov table 0x96@uint8;
inline vpternlogq64 (zmm20_0, zmm1_0, zmm13_0, table);
inline vpternlogq64 (zmm20_1, zmm1_1, zmm13_1, table);
inline vpternlogq64 (zmm20_2, zmm1_2, zmm13_2, table);
inline vpternlogq64 (zmm20_3, zmm1_3, zmm13_3, table);
inline vpternlogq64 (zmm20_4, zmm1_4, zmm13_4, table);
inline vpternlogq64 (zmm20_5, zmm1_5, zmm13_5, table);
inline vpternlogq64 (zmm20_6, zmm1_6, zmm13_6, table);
inline vpternlogq64 (zmm20_7, zmm1_7, zmm13_7, table);
(* vpternlogq $0xd2,%zmm4,%zmm11,%zmm9             #! PC = 0x55555558edf4 *)
mov table 0xd2@uint8;
inline vpternlogq64 (zmm9_0, zmm11_0, zmm4_0, table);
inline vpternlogq64 (zmm9_1, zmm11_1, zmm4_1, table);
inline vpternlogq64 (zmm9_2, zmm11_2, zmm4_2, table);
inline vpternlogq64 (zmm9_3, zmm11_3, zmm4_3, table);
inline vpternlogq64 (zmm9_4, zmm11_4, zmm4_4, table);
inline vpternlogq64 (zmm9_5, zmm11_5, zmm4_5, table);
inline vpternlogq64 (zmm9_6, zmm11_6, zmm4_6, table);
inline vpternlogq64 (zmm9_7, zmm11_7, zmm4_7, table);
(* vpternlogq $0x96,%zmm5,%zmm9,%zmm20             #! PC = 0x55555558edfb *)
mov table 0x96@uint8;
inline vpternlogq64 (zmm20_0, zmm9_0, zmm5_0, table);
inline vpternlogq64 (zmm20_1, zmm9_1, zmm5_1, table);
inline vpternlogq64 (zmm20_2, zmm9_2, zmm5_2, table);
inline vpternlogq64 (zmm20_3, zmm9_3, zmm5_3, table);
inline vpternlogq64 (zmm20_4, zmm9_4, zmm5_4, table);
inline vpternlogq64 (zmm20_5, zmm9_5, zmm5_5, table);
inline vpternlogq64 (zmm20_6, zmm9_6, zmm5_6, table);
inline vpternlogq64 (zmm20_7, zmm9_7, zmm5_7, table);
(* vpternlogq $0xd2,%zmm8,%zmm4,%zmm11             #! PC = 0x55555558ee02 *)
mov table 0xd2@uint8;
inline vpternlogq64 (zmm11_0, zmm4_0, zmm8_0, table);
inline vpternlogq64 (zmm11_1, zmm4_1, zmm8_1, table);
inline vpternlogq64 (zmm11_2, zmm4_2, zmm8_2, table);
inline vpternlogq64 (zmm11_3, zmm4_3, zmm8_3, table);
inline vpternlogq64 (zmm11_4, zmm4_4, zmm8_4, table);
inline vpternlogq64 (zmm11_5, zmm4_5, zmm8_5, table);
inline vpternlogq64 (zmm11_6, zmm4_6, zmm8_6, table);
inline vpternlogq64 (zmm11_7, zmm4_7, zmm8_7, table);
(* vpternlogq $0xd2,%zmm29,%zmm8,%zmm4             #! PC = 0x55555558ee09 *)
mov table 0xd2@uint8;
inline vpternlogq64 (zmm4_0, zmm8_0, zmm29_0, table);
inline vpternlogq64 (zmm4_1, zmm8_1, zmm29_1, table);
inline vpternlogq64 (zmm4_2, zmm8_2, zmm29_2, table);
inline vpternlogq64 (zmm4_3, zmm8_3, zmm29_3, table);
inline vpternlogq64 (zmm4_4, zmm8_4, zmm29_4, table);
inline vpternlogq64 (zmm4_5, zmm8_5, zmm29_5, table);
inline vpternlogq64 (zmm4_6, zmm8_6, zmm29_6, table);
inline vpternlogq64 (zmm4_7, zmm8_7, zmm29_7, table);
(* vprolq $0x1,%zmm20,%zmm8                        #! PC = 0x55555558ee10 *)
rol zmm8_0 zmm20_0 0x1;
rol zmm8_1 zmm20_1 0x1;
rol zmm8_2 zmm20_2 0x1;
rol zmm8_3 zmm20_3 0x1;
rol zmm8_4 zmm20_4 0x1;
rol zmm8_5 zmm20_5 0x1;
rol zmm8_6 zmm20_6 0x1;
rol zmm8_7 zmm20_7 0x1;
(* vmovdqa64 %zmm3,%zmm27                          #! PC = 0x55555558ee17 *)
mov zmm27_0 zmm3_0;
mov zmm27_1 zmm3_1;
mov zmm27_2 zmm3_2;
mov zmm27_3 zmm3_3;
mov zmm27_4 zmm3_4;
mov zmm27_5 zmm3_5;
mov zmm27_6 zmm3_6;
mov zmm27_7 zmm3_7;
(* vpternlogq $0x96,%zmm0,%zmm11,%zmm27            #! PC = 0x55555558ee1d *)
mov table 0x96@uint8;
inline vpternlogq64 (zmm27_0, zmm11_0, zmm0_0, table);
inline vpternlogq64 (zmm27_1, zmm11_1, zmm0_1, table);
inline vpternlogq64 (zmm27_2, zmm11_2, zmm0_2, table);
inline vpternlogq64 (zmm27_3, zmm11_3, zmm0_3, table);
inline vpternlogq64 (zmm27_4, zmm11_4, zmm0_4, table);
inline vpternlogq64 (zmm27_5, zmm11_5, zmm0_5, table);
inline vpternlogq64 (zmm27_6, zmm11_6, zmm0_6, table);
inline vpternlogq64 (zmm27_7, zmm11_7, zmm0_7, table);
(* vpternlogq $0x96,%zmm6,%zmm10,%zmm27            #! PC = 0x55555558ee24 *)
mov table 0x96@uint8;
inline vpternlogq64 (zmm27_0, zmm10_0, zmm6_0, table);
inline vpternlogq64 (zmm27_1, zmm10_1, zmm6_1, table);
inline vpternlogq64 (zmm27_2, zmm10_2, zmm6_2, table);
inline vpternlogq64 (zmm27_3, zmm10_3, zmm6_3, table);
inline vpternlogq64 (zmm27_4, zmm10_4, zmm6_4, table);
inline vpternlogq64 (zmm27_5, zmm10_5, zmm6_5, table);
inline vpternlogq64 (zmm27_6, zmm10_6, zmm6_6, table);
inline vpternlogq64 (zmm27_7, zmm10_7, zmm6_7, table);
(* vmovdqa64 %zmm23,%zmm21                         #! PC = 0x55555558ee2b *)
mov zmm21_0 zmm23_0;
mov zmm21_1 zmm23_1;
mov zmm21_2 zmm23_2;
mov zmm21_3 zmm23_3;
mov zmm21_4 zmm23_4;
mov zmm21_5 zmm23_5;
mov zmm21_6 zmm23_6;
mov zmm21_7 zmm23_7;
(* vpternlogq $0x96,%zmm12,%zmm14,%zmm21           #! PC = 0x55555558ee31 *)
mov table 0x96@uint8;
inline vpternlogq64 (zmm21_0, zmm14_0, zmm12_0, table);
inline vpternlogq64 (zmm21_1, zmm14_1, zmm12_1, table);
inline vpternlogq64 (zmm21_2, zmm14_2, zmm12_2, table);
inline vpternlogq64 (zmm21_3, zmm14_3, zmm12_3, table);
inline vpternlogq64 (zmm21_4, zmm14_4, zmm12_4, table);
inline vpternlogq64 (zmm21_5, zmm14_5, zmm12_5, table);
inline vpternlogq64 (zmm21_6, zmm14_6, zmm12_6, table);
inline vpternlogq64 (zmm21_7, zmm14_7, zmm12_7, table);
(* vmovdqa64 %zmm8,0x148(%rsp)                     #! EA = L0x7fffffffd600; PC = 0x55555558ee38 *)
mov L0x7fffffffd600 zmm8_0;
mov L0x7fffffffd608 zmm8_1;
mov L0x7fffffffd610 zmm8_2;
mov L0x7fffffffd618 zmm8_3;
mov L0x7fffffffd620 zmm8_4;
mov L0x7fffffffd628 zmm8_5;
mov L0x7fffffffd630 zmm8_6;
mov L0x7fffffffd638 zmm8_7;
(* vprolq $0x1,%zmm27,%zmm8                        #! PC = 0x55555558ee43 *)
rol zmm8_0 zmm27_0 0x1;
rol zmm8_1 zmm27_1 0x1;
rol zmm8_2 zmm27_2 0x1;
rol zmm8_3 zmm27_3 0x1;
rol zmm8_4 zmm27_4 0x1;
rol zmm8_5 zmm27_5 0x1;
rol zmm8_6 zmm27_6 0x1;
rol zmm8_7 zmm27_7 0x1;
(* vpternlogq $0x96,%zmm4,%zmm16,%zmm21            #! PC = 0x55555558ee4a *)
mov table 0x96@uint8;
inline vpternlogq64 (zmm21_0, zmm16_0, zmm4_0, table);
inline vpternlogq64 (zmm21_1, zmm16_1, zmm4_1, table);
inline vpternlogq64 (zmm21_2, zmm16_2, zmm4_2, table);
inline vpternlogq64 (zmm21_3, zmm16_3, zmm4_3, table);
inline vpternlogq64 (zmm21_4, zmm16_4, zmm4_4, table);
inline vpternlogq64 (zmm21_5, zmm16_5, zmm4_5, table);
inline vpternlogq64 (zmm21_6, zmm16_6, zmm4_6, table);
inline vpternlogq64 (zmm21_7, zmm16_7, zmm4_7, table);
(* vmovdqa64 %zmm24,%zmm2                          #! PC = 0x55555558ee51 *)
mov zmm2_0 zmm24_0;
mov zmm2_1 zmm24_1;
mov zmm2_2 zmm24_2;
mov zmm2_3 zmm24_3;
mov zmm2_4 zmm24_4;
mov zmm2_5 zmm24_5;
mov zmm2_6 zmm24_6;
mov zmm2_7 zmm24_7;
(* vpternlogq $0x96,%zmm22,%zmm25,%zmm2            #! PC = 0x55555558ee57 *)
mov table 0x96@uint8;
inline vpternlogq64 (zmm2_0, zmm25_0, zmm22_0, table);
inline vpternlogq64 (zmm2_1, zmm25_1, zmm22_1, table);
inline vpternlogq64 (zmm2_2, zmm25_2, zmm22_2, table);
inline vpternlogq64 (zmm2_3, zmm25_3, zmm22_3, table);
inline vpternlogq64 (zmm2_4, zmm25_4, zmm22_4, table);
inline vpternlogq64 (zmm2_5, zmm25_5, zmm22_5, table);
inline vpternlogq64 (zmm2_6, zmm25_6, zmm22_6, table);
inline vpternlogq64 (zmm2_7, zmm25_7, zmm22_7, table);
(* vpternlogq $0x96,%zmm30,%zmm7,%zmm2             #! PC = 0x55555558ee5e *)
mov table 0x96@uint8;
inline vpternlogq64 (zmm2_0, zmm7_0, zmm30_0, table);
inline vpternlogq64 (zmm2_1, zmm7_1, zmm30_1, table);
inline vpternlogq64 (zmm2_2, zmm7_2, zmm30_2, table);
inline vpternlogq64 (zmm2_3, zmm7_3, zmm30_3, table);
inline vpternlogq64 (zmm2_4, zmm7_4, zmm30_4, table);
inline vpternlogq64 (zmm2_5, zmm7_5, zmm30_5, table);
inline vpternlogq64 (zmm2_6, zmm7_6, zmm30_6, table);
inline vpternlogq64 (zmm2_7, zmm7_7, zmm30_7, table);
(* vmovdqa64 %zmm15,%zmm18                         #! PC = 0x55555558ee65 *)
mov zmm18_0 zmm15_0;
mov zmm18_1 zmm15_1;
mov zmm18_2 zmm15_2;
mov zmm18_3 zmm15_3;
mov zmm18_4 zmm15_4;
mov zmm18_5 zmm15_5;
mov zmm18_6 zmm15_6;
mov zmm18_7 zmm15_7;
(* vmovdqa64 %zmm8,0x108(%rsp)                     #! EA = L0x7fffffffd5c0; PC = 0x55555558ee6b *)
mov L0x7fffffffd5c0 zmm8_0;
mov L0x7fffffffd5c8 zmm8_1;
mov L0x7fffffffd5d0 zmm8_2;
mov L0x7fffffffd5d8 zmm8_3;
mov L0x7fffffffd5e0 zmm8_4;
mov L0x7fffffffd5e8 zmm8_5;
mov L0x7fffffffd5f0 zmm8_6;
mov L0x7fffffffd5f8 zmm8_7;
(* vprolq $0x1,%zmm21,%zmm8                        #! PC = 0x55555558ee76 *)
rol zmm8_0 zmm21_0 0x1;
rol zmm8_1 zmm21_1 0x1;
rol zmm8_2 zmm21_2 0x1;
rol zmm8_3 zmm21_3 0x1;
rol zmm8_4 zmm21_4 0x1;
rol zmm8_5 zmm21_5 0x1;
rol zmm8_6 zmm21_6 0x1;
rol zmm8_7 zmm21_7 0x1;
(* vpternlogq $0x96,%zmm31,%zmm19,%zmm18           #! PC = 0x55555558ee7d *)
mov table 0x96@uint8;
inline vpternlogq64 (zmm18_0, zmm19_0, zmm31_0, table);
inline vpternlogq64 (zmm18_1, zmm19_1, zmm31_1, table);
inline vpternlogq64 (zmm18_2, zmm19_2, zmm31_2, table);
inline vpternlogq64 (zmm18_3, zmm19_3, zmm31_3, table);
inline vpternlogq64 (zmm18_4, zmm19_4, zmm31_4, table);
inline vpternlogq64 (zmm18_5, zmm19_5, zmm31_5, table);
inline vpternlogq64 (zmm18_6, zmm19_6, zmm31_6, table);
inline vpternlogq64 (zmm18_7, zmm19_7, zmm31_7, table);
(* vpternlogq $0x96,%zmm28,%zmm26,%zmm18           #! PC = 0x55555558ee84 *)
mov table 0x96@uint8;
inline vpternlogq64 (zmm18_0, zmm26_0, zmm28_0, table);
inline vpternlogq64 (zmm18_1, zmm26_1, zmm28_1, table);
inline vpternlogq64 (zmm18_2, zmm26_2, zmm28_2, table);
inline vpternlogq64 (zmm18_3, zmm26_3, zmm28_3, table);
inline vpternlogq64 (zmm18_4, zmm26_4, zmm28_4, table);
inline vpternlogq64 (zmm18_5, zmm26_5, zmm28_5, table);
inline vpternlogq64 (zmm18_6, zmm26_6, zmm28_6, table);
inline vpternlogq64 (zmm18_7, zmm26_7, zmm28_7, table);
(* vprolq $0x1,%zmm18,%zmm29                       #! PC = 0x55555558ee8b *)
rol zmm29_0 zmm18_0 0x1;
rol zmm29_1 zmm18_1 0x1;
rol zmm29_2 zmm18_2 0x1;
rol zmm29_3 zmm18_3 0x1;
rol zmm29_4 zmm18_4 0x1;
rol zmm29_5 zmm18_5 0x1;
rol zmm29_6 zmm18_6 0x1;
rol zmm29_7 zmm18_7 0x1;
(* vpxord 0x108(%rsp),%zmm18,%zmm18                #! EA = L0x7fffffffd5c0; Value = 0x3e0b5cb98a848002; PC = 0x55555558ee92 *)
xor zmm18_0@uint64 zmm18_0 L0x7fffffffd5c0;
xor zmm18_1@uint64 zmm18_1 L0x7fffffffd5c8;
xor zmm18_2@uint64 zmm18_2 L0x7fffffffd5d0;
xor zmm18_3@uint64 zmm18_3 L0x7fffffffd5d8;
xor zmm18_4@uint64 zmm18_4 L0x7fffffffd5e0;
xor zmm18_5@uint64 zmm18_5 L0x7fffffffd5e8;
xor zmm18_6@uint64 zmm18_6 L0x7fffffffd5f0;
xor zmm18_7@uint64 zmm18_7 L0x7fffffffd5f8;
(* movabs $0x800000008000000a,%r11                 #! PC = 0x55555558ee9d *)
mov r11 0x800000008000000a@uint64;
(* vmovdqa64 %zmm8,0xc8(%rsp)                      #! EA = L0x7fffffffd580; PC = 0x55555558eea7 *)
mov L0x7fffffffd580 zmm8_0;
mov L0x7fffffffd588 zmm8_1;
mov L0x7fffffffd590 zmm8_2;
mov L0x7fffffffd598 zmm8_3;
mov L0x7fffffffd5a0 zmm8_4;
mov L0x7fffffffd5a8 zmm8_5;
mov L0x7fffffffd5b0 zmm8_6;
mov L0x7fffffffd5b8 zmm8_7;
(* vprolq $0x1,%zmm2,%zmm8                         #! PC = 0x55555558eeb2 *)
rol zmm8_0 zmm2_0 0x1;
rol zmm8_1 zmm2_1 0x1;
rol zmm8_2 zmm2_2 0x1;
rol zmm8_3 zmm2_3 0x1;
rol zmm8_4 zmm2_4 0x1;
rol zmm8_5 zmm2_5 0x1;
rol zmm8_6 zmm2_6 0x1;
rol zmm8_7 zmm2_7 0x1;
(* vpxord 0x148(%rsp),%zmm2,%zmm2                  #! EA = L0x7fffffffd600; Value = 0x10729b6ea9efc1e1; PC = 0x55555558eeb9 *)
xor zmm2_0@uint64 zmm2_0 L0x7fffffffd600;
xor zmm2_1@uint64 zmm2_1 L0x7fffffffd608;
xor zmm2_2@uint64 zmm2_2 L0x7fffffffd610;
xor zmm2_3@uint64 zmm2_3 L0x7fffffffd618;
xor zmm2_4@uint64 zmm2_4 L0x7fffffffd620;
xor zmm2_5@uint64 zmm2_5 L0x7fffffffd628;
xor zmm2_6@uint64 zmm2_6 L0x7fffffffd630;
xor zmm2_7@uint64 zmm2_7 L0x7fffffffd638;
(* vpxord 0xc8(%rsp),%zmm20,%zmm20                 #! EA = L0x7fffffffd580; Value = 0xd815364bf6f4e805; PC = 0x55555558eec4 *)
xor zmm20_0@uint64 zmm20_0 L0x7fffffffd580;
xor zmm20_1@uint64 zmm20_1 L0x7fffffffd588;
xor zmm20_2@uint64 zmm20_2 L0x7fffffffd590;
xor zmm20_3@uint64 zmm20_3 L0x7fffffffd598;
xor zmm20_4@uint64 zmm20_4 L0x7fffffffd5a0;
xor zmm20_5@uint64 zmm20_5 L0x7fffffffd5a8;
xor zmm20_6@uint64 zmm20_6 L0x7fffffffd5b0;
xor zmm20_7@uint64 zmm20_7 L0x7fffffffd5b8;
(* vpxord %zmm31,%zmm2,%zmm31                      #! PC = 0x55555558eecf *)
xor zmm31_0@uint64 zmm2_0 zmm31_0;
xor zmm31_1@uint64 zmm2_1 zmm31_1;
xor zmm31_2@uint64 zmm2_2 zmm31_2;
xor zmm31_3@uint64 zmm2_3 zmm31_3;
xor zmm31_4@uint64 zmm2_4 zmm31_4;
xor zmm31_5@uint64 zmm2_5 zmm31_5;
xor zmm31_6@uint64 zmm2_6 zmm31_6;
xor zmm31_7@uint64 zmm2_7 zmm31_7;
(* vprorq $0x14,%zmm31,%zmm31                      #! PC = 0x55555558eed5 *)
ror zmm31_0 zmm31_0 0x14;
ror zmm31_1 zmm31_1 0x14;
ror zmm31_2 zmm31_2 0x14;
ror zmm31_3 zmm31_3 0x14;
ror zmm31_4 zmm31_4 0x14;
ror zmm31_5 zmm31_5 0x14;
ror zmm31_6 zmm31_6 0x14;
ror zmm31_7 zmm31_7 0x14;
(* vpxord %zmm5,%zmm18,%zmm5                       #! PC = 0x55555558eedc *)
xor zmm5_0@uint64 zmm18_0 zmm5_0;
xor zmm5_1@uint64 zmm18_1 zmm5_1;
xor zmm5_2@uint64 zmm18_2 zmm5_2;
xor zmm5_3@uint64 zmm18_3 zmm5_3;
xor zmm5_4@uint64 zmm18_4 zmm5_4;
xor zmm5_5@uint64 zmm18_5 zmm5_5;
xor zmm5_6@uint64 zmm18_6 zmm5_6;
xor zmm5_7@uint64 zmm18_7 zmm5_7;
(* vpxord %zmm8,%zmm27,%zmm8                       #! PC = 0x55555558eee2 *)
xor zmm8_0@uint64 zmm27_0 zmm8_0;
xor zmm8_1@uint64 zmm27_1 zmm8_1;
xor zmm8_2@uint64 zmm27_2 zmm8_2;
xor zmm8_3@uint64 zmm27_3 zmm8_3;
xor zmm8_4@uint64 zmm27_4 zmm8_4;
xor zmm8_5@uint64 zmm27_5 zmm8_5;
xor zmm8_6@uint64 zmm27_6 zmm8_6;
xor zmm8_7@uint64 zmm27_7 zmm8_7;
(* vpxord %zmm11,%zmm20,%zmm11                     #! PC = 0x55555558eee8 *)
xor zmm11_0@uint64 zmm20_0 zmm11_0;
xor zmm11_1@uint64 zmm20_1 zmm11_1;
xor zmm11_2@uint64 zmm20_2 zmm11_2;
xor zmm11_3@uint64 zmm20_3 zmm11_3;
xor zmm11_4@uint64 zmm20_4 zmm11_4;
xor zmm11_5@uint64 zmm20_5 zmm11_5;
xor zmm11_6@uint64 zmm20_6 zmm11_6;
xor zmm11_7@uint64 zmm20_7 zmm11_7;
(* vpxord %zmm16,%zmm8,%zmm16                      #! PC = 0x55555558eeee *)
xor zmm16_0@uint64 zmm8_0 zmm16_0;
xor zmm16_1@uint64 zmm8_1 zmm16_1;
xor zmm16_2@uint64 zmm8_2 zmm16_2;
xor zmm16_3@uint64 zmm8_3 zmm16_3;
xor zmm16_4@uint64 zmm8_4 zmm16_4;
xor zmm16_5@uint64 zmm8_5 zmm16_5;
xor zmm16_6@uint64 zmm8_6 zmm16_6;
xor zmm16_7@uint64 zmm8_7 zmm16_7;
(* vprorq $0x15,%zmm5,%zmm5                        #! PC = 0x55555558eef4 *)
ror zmm5_0 zmm5_0 0x15;
ror zmm5_1 zmm5_1 0x15;
ror zmm5_2 zmm5_2 0x15;
ror zmm5_3 zmm5_3 0x15;
ror zmm5_4 zmm5_4 0x15;
ror zmm5_5 zmm5_5 0x15;
ror zmm5_6 zmm5_6 0x15;
ror zmm5_7 zmm5_7 0x15;
(* vprolq $0x15,%zmm11,%zmm11                      #! PC = 0x55555558eefb *)
rol zmm11_0 zmm11_0 0x15;
rol zmm11_1 zmm11_1 0x15;
rol zmm11_2 zmm11_2 0x15;
rol zmm11_3 zmm11_3 0x15;
rol zmm11_4 zmm11_4 0x15;
rol zmm11_5 zmm11_5 0x15;
rol zmm11_6 zmm11_6 0x15;
rol zmm11_7 zmm11_7 0x15;
(* vprolq $0xe,%zmm16,%zmm16                       #! PC = 0x55555558ef02 *)
rol zmm16_0 zmm16_0 0xe;
rol zmm16_1 zmm16_1 0xe;
rol zmm16_2 zmm16_2 0xe;
rol zmm16_3 zmm16_3 0xe;
rol zmm16_4 zmm16_4 0xe;
rol zmm16_5 zmm16_5 0xe;
rol zmm16_6 zmm16_6 0xe;
rol zmm16_7 zmm16_7 0xe;
(* vpxord %zmm29,%zmm21,%zmm21                     #! PC = 0x55555558ef09 *)
xor zmm21_0@uint64 zmm21_0 zmm29_0;
xor zmm21_1@uint64 zmm21_1 zmm29_1;
xor zmm21_2@uint64 zmm21_2 zmm29_2;
xor zmm21_3@uint64 zmm21_3 zmm29_3;
xor zmm21_4@uint64 zmm21_4 zmm29_4;
xor zmm21_5@uint64 zmm21_5 zmm29_5;
xor zmm21_6@uint64 zmm21_6 zmm29_6;
xor zmm21_7@uint64 zmm21_7 zmm29_7;
(* vpxord %zmm6,%zmm20,%zmm6                       #! PC = 0x55555558ef0f *)
xor zmm6_0@uint64 zmm20_0 zmm6_0;
xor zmm6_1@uint64 zmm20_1 zmm6_1;
xor zmm6_2@uint64 zmm20_2 zmm6_2;
xor zmm6_3@uint64 zmm20_3 zmm6_3;
xor zmm6_4@uint64 zmm20_4 zmm6_4;
xor zmm6_5@uint64 zmm20_5 zmm6_5;
xor zmm6_6@uint64 zmm20_6 zmm6_6;
xor zmm6_7@uint64 zmm20_7 zmm6_7;
(* vpxord %zmm14,%zmm8,%zmm14                      #! PC = 0x55555558ef15 *)
xor zmm14_0@uint64 zmm8_0 zmm14_0;
xor zmm14_1@uint64 zmm8_1 zmm14_1;
xor zmm14_2@uint64 zmm8_2 zmm14_2;
xor zmm14_3@uint64 zmm8_3 zmm14_3;
xor zmm14_4@uint64 zmm8_4 zmm14_4;
xor zmm14_5@uint64 zmm8_5 zmm14_5;
xor zmm14_6@uint64 zmm8_6 zmm14_6;
xor zmm14_7@uint64 zmm8_7 zmm14_7;
(* vprolq $0x1c,%zmm6,%zmm6                        #! PC = 0x55555558ef1b *)
rol zmm6_0 zmm6_0 0x1c;
rol zmm6_1 zmm6_1 0x1c;
rol zmm6_2 zmm6_2 0x1c;
rol zmm6_3 zmm6_3 0x1c;
rol zmm6_4 zmm6_4 0x1c;
rol zmm6_5 zmm6_5 0x1c;
rol zmm6_6 zmm6_6 0x1c;
rol zmm6_7 zmm6_7 0x1c;
(* vprolq $0x14,%zmm14,%zmm14                      #! PC = 0x55555558ef22 *)
rol zmm14_0 zmm14_0 0x14;
rol zmm14_1 zmm14_1 0x14;
rol zmm14_2 zmm14_2 0x14;
rol zmm14_3 zmm14_3 0x14;
rol zmm14_4 zmm14_4 0x14;
rol zmm14_5 zmm14_5 0x14;
rol zmm14_6 zmm14_6 0x14;
rol zmm14_7 zmm14_7 0x14;
(* vpxord %zmm7,%zmm21,%zmm7                       #! PC = 0x55555558ef29 *)
xor zmm7_0@uint64 zmm21_0 zmm7_0;
xor zmm7_1@uint64 zmm21_1 zmm7_1;
xor zmm7_2@uint64 zmm21_2 zmm7_2;
xor zmm7_3@uint64 zmm21_3 zmm7_3;
xor zmm7_4@uint64 zmm21_4 zmm7_4;
xor zmm7_5@uint64 zmm21_5 zmm7_5;
xor zmm7_6@uint64 zmm21_6 zmm7_6;
xor zmm7_7@uint64 zmm21_7 zmm7_7;
(* vpxord %zmm15,%zmm2,%zmm15                      #! PC = 0x55555558ef2f *)
xor zmm15_0@uint64 zmm2_0 zmm15_0;
xor zmm15_1@uint64 zmm2_1 zmm15_1;
xor zmm15_2@uint64 zmm2_2 zmm15_2;
xor zmm15_3@uint64 zmm2_3 zmm15_3;
xor zmm15_4@uint64 zmm2_4 zmm15_4;
xor zmm15_5@uint64 zmm2_5 zmm15_5;
xor zmm15_6@uint64 zmm2_6 zmm15_6;
xor zmm15_7@uint64 zmm2_7 zmm15_7;
(* vpxord %zmm13,%zmm18,%zmm13                     #! PC = 0x55555558ef35 *)
xor zmm13_0@uint64 zmm18_0 zmm13_0;
xor zmm13_1@uint64 zmm18_1 zmm13_1;
xor zmm13_2@uint64 zmm18_2 zmm13_2;
xor zmm13_3@uint64 zmm18_3 zmm13_3;
xor zmm13_4@uint64 zmm18_4 zmm13_4;
xor zmm13_5@uint64 zmm18_5 zmm13_5;
xor zmm13_6@uint64 zmm18_6 zmm13_6;
xor zmm13_7@uint64 zmm18_7 zmm13_7;
(* vpxord %zmm26,%zmm2,%zmm26                      #! PC = 0x55555558ef3b *)
xor zmm26_0@uint64 zmm2_0 zmm26_0;
xor zmm26_1@uint64 zmm2_1 zmm26_1;
xor zmm26_2@uint64 zmm2_2 zmm26_2;
xor zmm26_3@uint64 zmm2_3 zmm26_3;
xor zmm26_4@uint64 zmm2_4 zmm26_4;
xor zmm26_5@uint64 zmm2_5 zmm26_5;
xor zmm26_6@uint64 zmm2_6 zmm26_6;
xor zmm26_7@uint64 zmm2_7 zmm26_7;
(* vpxord %zmm17,%zmm18,%zmm17                     #! PC = 0x55555558ef41 *)
xor zmm17_0@uint64 zmm18_0 zmm17_0;
xor zmm17_1@uint64 zmm18_1 zmm17_1;
xor zmm17_2@uint64 zmm18_2 zmm17_2;
xor zmm17_3@uint64 zmm18_3 zmm17_3;
xor zmm17_4@uint64 zmm18_4 zmm17_4;
xor zmm17_5@uint64 zmm18_5 zmm17_5;
xor zmm17_6@uint64 zmm18_6 zmm17_6;
xor zmm17_7@uint64 zmm18_7 zmm17_7;
(* vprolq $0x1,%zmm26,%zmm26                       #! PC = 0x55555558ef47 *)
rol zmm26_0 zmm26_0 0x1;
rol zmm26_1 zmm26_1 0x1;
rol zmm26_2 zmm26_2 0x1;
rol zmm26_3 zmm26_3 0x1;
rol zmm26_4 zmm26_4 0x1;
rol zmm26_5 zmm26_5 0x1;
rol zmm26_6 zmm26_6 0x1;
rol zmm26_7 zmm26_7 0x1;
(* vprolq $0x6,%zmm17,%zmm17                       #! PC = 0x55555558ef4e *)
rol zmm17_0 zmm17_0 0x6;
rol zmm17_1 zmm17_1 0x6;
rol zmm17_2 zmm17_2 0x6;
rol zmm17_3 zmm17_3 0x6;
rol zmm17_4 zmm17_4 0x6;
rol zmm17_5 zmm17_5 0x6;
rol zmm17_6 zmm17_6 0x6;
rol zmm17_7 zmm17_7 0x6;
(* vprolq $0x3,%zmm7,%zmm7                         #! PC = 0x55555558ef55 *)
rol zmm7_0 zmm7_0 0x3;
rol zmm7_1 zmm7_1 0x3;
rol zmm7_2 zmm7_2 0x3;
rol zmm7_3 zmm7_3 0x3;
rol zmm7_4 zmm7_4 0x3;
rol zmm7_5 zmm7_5 0x3;
rol zmm7_6 zmm7_6 0x3;
rol zmm7_7 zmm7_7 0x3;
(* vprorq $0x13,%zmm15,%zmm15                      #! PC = 0x55555558ef5c *)
ror zmm15_0 zmm15_0 0x13;
ror zmm15_1 zmm15_1 0x13;
ror zmm15_2 zmm15_2 0x13;
ror zmm15_3 zmm15_3 0x13;
ror zmm15_4 zmm15_4 0x13;
ror zmm15_5 zmm15_5 0x13;
ror zmm15_6 zmm15_6 0x13;
ror zmm15_7 zmm15_7 0x13;
(* vprorq $0x3,%zmm13,%zmm13                       #! PC = 0x55555558ef63 *)
ror zmm13_0 zmm13_0 0x3;
ror zmm13_1 zmm13_1 0x3;
ror zmm13_2 zmm13_2 0x3;
ror zmm13_3 zmm13_3 0x3;
ror zmm13_4 zmm13_4 0x3;
ror zmm13_5 zmm13_5 0x3;
ror zmm13_6 zmm13_6 0x3;
ror zmm13_7 zmm13_7 0x3;
(* vpxord %zmm25,%zmm21,%zmm25                     #! PC = 0x55555558ef6a *)
xor zmm25_0@uint64 zmm21_0 zmm25_0;
xor zmm25_1@uint64 zmm21_1 zmm25_1;
xor zmm25_2@uint64 zmm21_2 zmm25_2;
xor zmm25_3@uint64 zmm21_3 zmm25_3;
xor zmm25_4@uint64 zmm21_4 zmm25_4;
xor zmm25_5@uint64 zmm21_5 zmm25_5;
xor zmm25_6@uint64 zmm21_6 zmm25_6;
xor zmm25_7@uint64 zmm21_7 zmm25_7;
(* vpxord %zmm0,%zmm20,%zmm0                       #! PC = 0x55555558ef70 *)
xor zmm0_0@uint64 zmm20_0 zmm0_0;
xor zmm0_1@uint64 zmm20_1 zmm0_1;
xor zmm0_2@uint64 zmm20_2 zmm0_2;
xor zmm0_3@uint64 zmm20_3 zmm0_3;
xor zmm0_4@uint64 zmm20_4 zmm0_4;
xor zmm0_5@uint64 zmm20_5 zmm0_5;
xor zmm0_6@uint64 zmm20_6 zmm0_6;
xor zmm0_7@uint64 zmm20_7 zmm0_7;
(* vpxord %zmm4,%zmm8,%zmm4                        #! PC = 0x55555558ef76 *)
xor zmm4_0@uint64 zmm8_0 zmm4_0;
xor zmm4_1@uint64 zmm8_1 zmm4_1;
xor zmm4_2@uint64 zmm8_2 zmm4_2;
xor zmm4_3@uint64 zmm8_3 zmm4_3;
xor zmm4_4@uint64 zmm8_4 zmm4_4;
xor zmm4_5@uint64 zmm8_5 zmm4_5;
xor zmm4_6@uint64 zmm8_6 zmm4_6;
xor zmm4_7@uint64 zmm8_7 zmm4_7;
(* vpxord %zmm30,%zmm21,%zmm30                     #! PC = 0x55555558ef7c *)
xor zmm30_0@uint64 zmm21_0 zmm30_0;
xor zmm30_1@uint64 zmm21_1 zmm30_1;
xor zmm30_2@uint64 zmm21_2 zmm30_2;
xor zmm30_3@uint64 zmm21_3 zmm30_3;
xor zmm30_4@uint64 zmm21_4 zmm30_4;
xor zmm30_5@uint64 zmm21_5 zmm30_5;
xor zmm30_6@uint64 zmm21_6 zmm30_6;
xor zmm30_7@uint64 zmm21_7 zmm30_7;
(* vpxord %zmm19,%zmm2,%zmm19                      #! PC = 0x55555558ef82 *)
xor zmm19_0@uint64 zmm2_0 zmm19_0;
xor zmm19_1@uint64 zmm2_1 zmm19_1;
xor zmm19_2@uint64 zmm2_2 zmm19_2;
xor zmm19_3@uint64 zmm2_3 zmm19_3;
xor zmm19_4@uint64 zmm2_4 zmm19_4;
xor zmm19_5@uint64 zmm2_5 zmm19_5;
xor zmm19_6@uint64 zmm2_6 zmm19_6;
xor zmm19_7@uint64 zmm2_7 zmm19_7;
(* vpxord %zmm9,%zmm18,%zmm9                       #! PC = 0x55555558ef88 *)
xor zmm9_0@uint64 zmm18_0 zmm9_0;
xor zmm9_1@uint64 zmm18_1 zmm9_1;
xor zmm9_2@uint64 zmm18_2 zmm9_2;
xor zmm9_3@uint64 zmm18_3 zmm9_3;
xor zmm9_4@uint64 zmm18_4 zmm9_4;
xor zmm9_5@uint64 zmm18_5 zmm9_5;
xor zmm9_6@uint64 zmm18_6 zmm9_6;
xor zmm9_7@uint64 zmm18_7 zmm9_7;
(* vpxord %zmm3,%zmm20,%zmm3                       #! PC = 0x55555558ef8e *)
xor zmm3_0@uint64 zmm20_0 zmm3_0;
xor zmm3_1@uint64 zmm20_1 zmm3_1;
xor zmm3_2@uint64 zmm20_2 zmm3_2;
xor zmm3_3@uint64 zmm20_3 zmm3_3;
xor zmm3_4@uint64 zmm20_4 zmm3_4;
xor zmm3_5@uint64 zmm20_5 zmm3_5;
xor zmm3_6@uint64 zmm20_6 zmm3_6;
xor zmm3_7@uint64 zmm20_7 zmm3_7;
(* vpxord %zmm12,%zmm8,%zmm12                      #! PC = 0x55555558ef94 *)
xor zmm12_0@uint64 zmm8_0 zmm12_0;
xor zmm12_1@uint64 zmm8_1 zmm12_1;
xor zmm12_2@uint64 zmm8_2 zmm12_2;
xor zmm12_3@uint64 zmm8_3 zmm12_3;
xor zmm12_4@uint64 zmm8_4 zmm12_4;
xor zmm12_5@uint64 zmm8_5 zmm12_5;
xor zmm12_6@uint64 zmm8_6 zmm12_6;
xor zmm12_7@uint64 zmm8_7 zmm12_7;
(* vpxord %zmm1,%zmm18,%zmm18                      #! PC = 0x55555558ef9a *)
xor zmm18_0@uint64 zmm18_0 zmm1_0;
xor zmm18_1@uint64 zmm18_1 zmm1_1;
xor zmm18_2@uint64 zmm18_2 zmm1_2;
xor zmm18_3@uint64 zmm18_3 zmm1_3;
xor zmm18_4@uint64 zmm18_4 zmm1_4;
xor zmm18_5@uint64 zmm18_5 zmm1_5;
xor zmm18_6@uint64 zmm18_6 zmm1_6;
xor zmm18_7@uint64 zmm18_7 zmm1_7;
(* vpxord %zmm10,%zmm20,%zmm20                     #! PC = 0x55555558efa0 *)
xor zmm20_0@uint64 zmm20_0 zmm10_0;
xor zmm20_1@uint64 zmm20_1 zmm10_1;
xor zmm20_2@uint64 zmm20_2 zmm10_2;
xor zmm20_3@uint64 zmm20_3 zmm10_3;
xor zmm20_4@uint64 zmm20_4 zmm10_4;
xor zmm20_5@uint64 zmm20_5 zmm10_5;
xor zmm20_6@uint64 zmm20_6 zmm10_6;
xor zmm20_7@uint64 zmm20_7 zmm10_7;
(* vpxord %zmm21,%zmm24,%zmm24                     #! PC = 0x55555558efa6 *)
xor zmm24_0@uint64 zmm24_0 zmm21_0;
xor zmm24_1@uint64 zmm24_1 zmm21_1;
xor zmm24_2@uint64 zmm24_2 zmm21_2;
xor zmm24_3@uint64 zmm24_3 zmm21_3;
xor zmm24_4@uint64 zmm24_4 zmm21_4;
xor zmm24_5@uint64 zmm24_5 zmm21_5;
xor zmm24_6@uint64 zmm24_6 zmm21_6;
xor zmm24_7@uint64 zmm24_7 zmm21_7;
(* vprorq $0x1c,%zmm30,%zmm30                      #! PC = 0x55555558efac *)
ror zmm30_0 zmm30_0 0x1c;
ror zmm30_1 zmm30_1 0x1c;
ror zmm30_2 zmm30_2 0x1c;
ror zmm30_3 zmm30_3 0x1c;
ror zmm30_4 zmm30_4 0x1c;
ror zmm30_5 zmm30_5 0x1c;
ror zmm30_6 zmm30_6 0x1c;
ror zmm30_7 zmm30_7 0x1c;
(* vprolq $0xa,%zmm19,%zmm19                       #! PC = 0x55555558efb3 *)
rol zmm19_0 zmm19_0 0xa;
rol zmm19_1 zmm19_1 0xa;
rol zmm19_2 zmm19_2 0xa;
rol zmm19_3 zmm19_3 0xa;
rol zmm19_4 zmm19_4 0xa;
rol zmm19_5 zmm19_5 0xa;
rol zmm19_6 zmm19_6 0xa;
rol zmm19_7 zmm19_7 0xa;
(* vprolq $0x1b,%zmm12,%zmm12                      #! PC = 0x55555558efba *)
rol zmm12_0 zmm12_0 0x1b;
rol zmm12_1 zmm12_1 0x1b;
rol zmm12_2 zmm12_2 0x1b;
rol zmm12_3 zmm12_3 0x1b;
rol zmm12_4 zmm12_4 0x1b;
rol zmm12_5 zmm12_5 0x1b;
rol zmm12_6 zmm12_6 0x1b;
rol zmm12_7 zmm12_7 0x1b;
(* vprorq $0x2,%zmm18,%zmm18                       #! PC = 0x55555558efc1 *)
ror zmm18_0 zmm18_0 0x2;
ror zmm18_1 zmm18_1 0x2;
ror zmm18_2 zmm18_2 0x2;
ror zmm18_3 zmm18_3 0x2;
ror zmm18_4 zmm18_4 0x2;
ror zmm18_5 zmm18_5 0x2;
ror zmm18_6 zmm18_6 0x2;
ror zmm18_7 zmm18_7 0x2;
(* vprorq $0x9,%zmm20,%zmm20                       #! PC = 0x55555558efc8 *)
ror zmm20_0 zmm20_0 0x9;
ror zmm20_1 zmm20_1 0x9;
ror zmm20_2 zmm20_2 0x9;
ror zmm20_3 zmm20_3 0x9;
ror zmm20_4 zmm20_4 0x9;
ror zmm20_5 zmm20_5 0x9;
ror zmm20_6 zmm20_6 0x9;
ror zmm20_7 zmm20_7 0x9;
(* vprolq $0x12,%zmm25,%zmm25                      #! PC = 0x55555558efcf *)
rol zmm25_0 zmm25_0 0x12;
rol zmm25_1 zmm25_1 0x12;
rol zmm25_2 zmm25_2 0x12;
rol zmm25_3 zmm25_3 0x12;
rol zmm25_4 zmm25_4 0x12;
rol zmm25_5 zmm25_5 0x12;
rol zmm25_6 zmm25_6 0x12;
rol zmm25_7 zmm25_7 0x12;
(* vprolq $0x19,%zmm0,%zmm0                        #! PC = 0x55555558efd6 *)
rol zmm0_0 zmm0_0 0x19;
rol zmm0_1 zmm0_1 0x19;
rol zmm0_2 zmm0_2 0x19;
rol zmm0_3 zmm0_3 0x19;
rol zmm0_4 zmm0_4 0x19;
rol zmm0_5 zmm0_5 0x19;
rol zmm0_6 zmm0_6 0x19;
rol zmm0_7 zmm0_7 0x19;
(* vprolq $0x8,%zmm4,%zmm4                         #! PC = 0x55555558efdd *)
rol zmm4_0 zmm4_0 0x8;
rol zmm4_1 zmm4_1 0x8;
rol zmm4_2 zmm4_2 0x8;
rol zmm4_3 zmm4_3 0x8;
rol zmm4_4 zmm4_4 0x8;
rol zmm4_5 zmm4_5 0x8;
rol zmm4_6 zmm4_6 0x8;
rol zmm4_7 zmm4_7 0x8;
(* vpxord %zmm22,%zmm21,%zmm21                     #! PC = 0x55555558efe4 *)
xor zmm21_0@uint64 zmm21_0 zmm22_0;
xor zmm21_1@uint64 zmm21_1 zmm22_1;
xor zmm21_2@uint64 zmm21_2 zmm22_2;
xor zmm21_3@uint64 zmm21_3 zmm22_3;
xor zmm21_4@uint64 zmm21_4 zmm22_4;
xor zmm21_5@uint64 zmm21_5 zmm22_5;
xor zmm21_6@uint64 zmm21_6 zmm22_6;
xor zmm21_7@uint64 zmm21_7 zmm22_7;
(* vpxord %zmm28,%zmm2,%zmm2                       #! PC = 0x55555558efea *)
xor zmm2_0@uint64 zmm2_0 zmm28_0;
xor zmm2_1@uint64 zmm2_1 zmm28_1;
xor zmm2_2@uint64 zmm2_2 zmm28_2;
xor zmm2_3@uint64 zmm2_3 zmm28_3;
xor zmm2_4@uint64 zmm2_4 zmm28_4;
xor zmm2_5@uint64 zmm2_5 zmm28_5;
xor zmm2_6@uint64 zmm2_6 zmm28_6;
xor zmm2_7@uint64 zmm2_7 zmm28_7;
(* vpxord %zmm23,%zmm8,%zmm8                       #! PC = 0x55555558eff0 *)
xor zmm8_0@uint64 zmm8_0 zmm23_0;
xor zmm8_1@uint64 zmm8_1 zmm23_1;
xor zmm8_2@uint64 zmm8_2 zmm23_2;
xor zmm8_3@uint64 zmm8_3 zmm23_3;
xor zmm8_4@uint64 zmm8_4 zmm23_4;
xor zmm8_5@uint64 zmm8_5 zmm23_5;
xor zmm8_6@uint64 zmm8_6 zmm23_6;
xor zmm8_7@uint64 zmm8_7 zmm23_7;
(* vprolq $0xf,%zmm9,%zmm9                         #! PC = 0x55555558eff6 *)
rol zmm9_0 zmm9_0 0xf;
rol zmm9_1 zmm9_1 0xf;
rol zmm9_2 zmm9_2 0xf;
rol zmm9_3 zmm9_3 0xf;
rol zmm9_4 zmm9_4 0xf;
rol zmm9_5 zmm9_5 0xf;
rol zmm9_6 zmm9_6 0xf;
rol zmm9_7 zmm9_7 0xf;
(* vprorq $0x8,%zmm3,%zmm3                         #! PC = 0x55555558effd *)
ror zmm3_0 zmm3_0 0x8;
ror zmm3_1 zmm3_1 0x8;
ror zmm3_2 zmm3_2 0x8;
ror zmm3_3 zmm3_3 0x8;
ror zmm3_4 zmm3_4 0x8;
ror zmm3_5 zmm3_5 0x8;
ror zmm3_6 zmm3_6 0x8;
ror zmm3_7 zmm3_7 0x8;
(* vprorq $0x17,%zmm21,%zmm21                      #! PC = 0x55555558f004 *)
ror zmm21_0 zmm21_0 0x17;
ror zmm21_1 zmm21_1 0x17;
ror zmm21_2 zmm21_2 0x17;
ror zmm21_3 zmm21_3 0x17;
ror zmm21_4 zmm21_4 0x17;
ror zmm21_5 zmm21_5 0x17;
ror zmm21_6 zmm21_6 0x17;
ror zmm21_7 zmm21_7 0x17;
(* vprolq $0x2,%zmm2,%zmm2                         #! PC = 0x55555558f00b *)
rol zmm2_0 zmm2_0 0x2;
rol zmm2_1 zmm2_1 0x2;
rol zmm2_2 zmm2_2 0x2;
rol zmm2_3 zmm2_3 0x2;
rol zmm2_4 zmm2_4 0x2;
rol zmm2_5 zmm2_5 0x2;
rol zmm2_6 zmm2_6 0x2;
rol zmm2_7 zmm2_7 0x2;
(* vprorq $0x19,%zmm8,%zmm8                        #! PC = 0x55555558f012 *)
ror zmm8_0 zmm8_0 0x19;
ror zmm8_1 zmm8_1 0x19;
ror zmm8_2 zmm8_2 0x19;
ror zmm8_3 zmm8_3 0x19;
ror zmm8_4 zmm8_4 0x19;
ror zmm8_5 zmm8_5 0x19;
ror zmm8_6 zmm8_6 0x19;
ror zmm8_7 zmm8_7 0x19;
(* vmovdqa64 %zmm24,%zmm29                         #! PC = 0x55555558f019 *)
mov zmm29_0 zmm24_0;
mov zmm29_1 zmm24_1;
mov zmm29_2 zmm24_2;
mov zmm29_3 zmm24_3;
mov zmm29_4 zmm24_4;
mov zmm29_5 zmm24_5;
mov zmm29_6 zmm24_6;
mov zmm29_7 zmm24_7;
(* vmovdqa64 %zmm31,%zmm27                         #! PC = 0x55555558f01f *)
mov zmm27_0 zmm31_0;
mov zmm27_1 zmm31_1;
mov zmm27_2 zmm31_2;
mov zmm27_3 zmm31_3;
mov zmm27_4 zmm31_4;
mov zmm27_5 zmm31_5;
mov zmm27_6 zmm31_6;
mov zmm27_7 zmm31_7;
(* vpternlogq $0xd2,%zmm5,%zmm31,%zmm29            #! PC = 0x55555558f025 *)
mov table 0xd2@uint8;
inline vpternlogq64 (zmm29_0, zmm31_0, zmm5_0, table);
inline vpternlogq64 (zmm29_1, zmm31_1, zmm5_1, table);
inline vpternlogq64 (zmm29_2, zmm31_2, zmm5_2, table);
inline vpternlogq64 (zmm29_3, zmm31_3, zmm5_3, table);
inline vpternlogq64 (zmm29_4, zmm31_4, zmm5_4, table);
inline vpternlogq64 (zmm29_5, zmm31_5, zmm5_5, table);
inline vpternlogq64 (zmm29_6, zmm31_6, zmm5_6, table);
inline vpternlogq64 (zmm29_7, zmm31_7, zmm5_7, table);
(* vpternlogq $0xd2,%zmm11,%zmm5,%zmm27            #! PC = 0x55555558f02c *)
mov table 0xd2@uint8;
inline vpternlogq64 (zmm27_0, zmm5_0, zmm11_0, table);
inline vpternlogq64 (zmm27_1, zmm5_1, zmm11_1, table);
inline vpternlogq64 (zmm27_2, zmm5_2, zmm11_2, table);
inline vpternlogq64 (zmm27_3, zmm5_3, zmm11_3, table);
inline vpternlogq64 (zmm27_4, zmm5_4, zmm11_4, table);
inline vpternlogq64 (zmm27_5, zmm5_5, zmm11_5, table);
inline vpternlogq64 (zmm27_6, zmm5_6, zmm11_6, table);
inline vpternlogq64 (zmm27_7, zmm5_7, zmm11_7, table);
(* vpternlogq $0xd2,%zmm16,%zmm11,%zmm5            #! PC = 0x55555558f033 *)
mov table 0xd2@uint8;
inline vpternlogq64 (zmm5_0, zmm11_0, zmm16_0, table);
inline vpternlogq64 (zmm5_1, zmm11_1, zmm16_1, table);
inline vpternlogq64 (zmm5_2, zmm11_2, zmm16_2, table);
inline vpternlogq64 (zmm5_3, zmm11_3, zmm16_3, table);
inline vpternlogq64 (zmm5_4, zmm11_4, zmm16_4, table);
inline vpternlogq64 (zmm5_5, zmm11_5, zmm16_5, table);
inline vpternlogq64 (zmm5_6, zmm11_6, zmm16_6, table);
inline vpternlogq64 (zmm5_7, zmm11_7, zmm16_7, table);
(* vpternlogq $0xd2,%zmm24,%zmm16,%zmm11           #! PC = 0x55555558f03a *)
mov table 0xd2@uint8;
inline vpternlogq64 (zmm11_0, zmm16_0, zmm24_0, table);
inline vpternlogq64 (zmm11_1, zmm16_1, zmm24_1, table);
inline vpternlogq64 (zmm11_2, zmm16_2, zmm24_2, table);
inline vpternlogq64 (zmm11_3, zmm16_3, zmm24_3, table);
inline vpternlogq64 (zmm11_4, zmm16_4, zmm24_4, table);
inline vpternlogq64 (zmm11_5, zmm16_5, zmm24_5, table);
inline vpternlogq64 (zmm11_6, zmm16_6, zmm24_6, table);
inline vpternlogq64 (zmm11_7, zmm16_7, zmm24_7, table);
(* vpternlogq $0xd2,%zmm31,%zmm24,%zmm16           #! PC = 0x55555558f041 *)
mov table 0xd2@uint8;
inline vpternlogq64 (zmm16_0, zmm24_0, zmm31_0, table);
inline vpternlogq64 (zmm16_1, zmm24_1, zmm31_1, table);
inline vpternlogq64 (zmm16_2, zmm24_2, zmm31_2, table);
inline vpternlogq64 (zmm16_3, zmm24_3, zmm31_3, table);
inline vpternlogq64 (zmm16_4, zmm24_4, zmm31_4, table);
inline vpternlogq64 (zmm16_5, zmm24_5, zmm31_5, table);
inline vpternlogq64 (zmm16_6, zmm24_6, zmm31_6, table);
inline vpternlogq64 (zmm16_7, zmm24_7, zmm31_7, table);
(* vmovdqa64 %zmm16,%zmm24                         #! PC = 0x55555558f048 *)
mov zmm24_0 zmm16_0;
mov zmm24_1 zmm16_1;
mov zmm24_2 zmm16_2;
mov zmm24_3 zmm16_3;
mov zmm24_4 zmm16_4;
mov zmm24_5 zmm16_5;
mov zmm24_6 zmm16_6;
mov zmm24_7 zmm16_7;
(* vpbroadcastq %r13,%zmm16                        #! PC = 0x55555558f04e *)
mov zmm16_0 r13;
mov zmm16_1 r13;
mov zmm16_2 r13;
mov zmm16_3 r13;
mov zmm16_4 r13;
mov zmm16_5 r13;
mov zmm16_6 r13;
mov zmm16_7 r13;
(* vmovdqa64 %zmm5,0x88(%rsp)                      #! EA = L0x7fffffffd540; PC = 0x55555558f054 *)
mov L0x7fffffffd540 zmm5_0;
mov L0x7fffffffd548 zmm5_1;
mov L0x7fffffffd550 zmm5_2;
mov L0x7fffffffd558 zmm5_3;
mov L0x7fffffffd560 zmm5_4;
mov L0x7fffffffd568 zmm5_5;
mov L0x7fffffffd570 zmm5_6;
mov L0x7fffffffd578 zmm5_7;
(* vpxord %zmm29,%zmm16,%zmm16                     #! PC = 0x55555558f05f *)
xor zmm16_0@uint64 zmm16_0 zmm29_0;
xor zmm16_1@uint64 zmm16_1 zmm29_1;
xor zmm16_2@uint64 zmm16_2 zmm29_2;
xor zmm16_3@uint64 zmm16_3 zmm29_3;
xor zmm16_4@uint64 zmm16_4 zmm29_4;
xor zmm16_5@uint64 zmm16_5 zmm29_5;
xor zmm16_6@uint64 zmm16_6 zmm29_6;
xor zmm16_7@uint64 zmm16_7 zmm29_7;
(* vmovdqa64 %zmm6,%zmm5                           #! PC = 0x55555558f065 *)
mov zmm5_0 zmm6_0;
mov zmm5_1 zmm6_1;
mov zmm5_2 zmm6_2;
mov zmm5_3 zmm6_3;
mov zmm5_4 zmm6_4;
mov zmm5_5 zmm6_5;
mov zmm5_6 zmm6_6;
mov zmm5_7 zmm6_7;
(* vmovdqa64 %zmm14,%zmm29                         #! PC = 0x55555558f06b *)
mov zmm29_0 zmm14_0;
mov zmm29_1 zmm14_1;
mov zmm29_2 zmm14_2;
mov zmm29_3 zmm14_3;
mov zmm29_4 zmm14_4;
mov zmm29_5 zmm14_5;
mov zmm29_6 zmm14_6;
mov zmm29_7 zmm14_7;
(* vpternlogq $0xd2,%zmm7,%zmm14,%zmm5             #! PC = 0x55555558f071 *)
mov table 0xd2@uint8;
inline vpternlogq64 (zmm5_0, zmm14_0, zmm7_0, table);
inline vpternlogq64 (zmm5_1, zmm14_1, zmm7_1, table);
inline vpternlogq64 (zmm5_2, zmm14_2, zmm7_2, table);
inline vpternlogq64 (zmm5_3, zmm14_3, zmm7_3, table);
inline vpternlogq64 (zmm5_4, zmm14_4, zmm7_4, table);
inline vpternlogq64 (zmm5_5, zmm14_5, zmm7_5, table);
inline vpternlogq64 (zmm5_6, zmm14_6, zmm7_6, table);
inline vpternlogq64 (zmm5_7, zmm14_7, zmm7_7, table);
(* vpternlogq $0xd2,%zmm15,%zmm7,%zmm29            #! PC = 0x55555558f078 *)
mov table 0xd2@uint8;
inline vpternlogq64 (zmm29_0, zmm7_0, zmm15_0, table);
inline vpternlogq64 (zmm29_1, zmm7_1, zmm15_1, table);
inline vpternlogq64 (zmm29_2, zmm7_2, zmm15_2, table);
inline vpternlogq64 (zmm29_3, zmm7_3, zmm15_3, table);
inline vpternlogq64 (zmm29_4, zmm7_4, zmm15_4, table);
inline vpternlogq64 (zmm29_5, zmm7_5, zmm15_5, table);
inline vpternlogq64 (zmm29_6, zmm7_6, zmm15_6, table);
inline vpternlogq64 (zmm29_7, zmm7_7, zmm15_7, table);
(* vmovdqa64 %zmm26,%zmm31                         #! PC = 0x55555558f07f *)
mov zmm31_0 zmm26_0;
mov zmm31_1 zmm26_1;
mov zmm31_2 zmm26_2;
mov zmm31_3 zmm26_3;
mov zmm31_4 zmm26_4;
mov zmm31_5 zmm26_5;
mov zmm31_6 zmm26_6;
mov zmm31_7 zmm26_7;
(* vpternlogq $0xd2,%zmm13,%zmm15,%zmm7            #! PC = 0x55555558f085 *)
mov table 0xd2@uint8;
inline vpternlogq64 (zmm7_0, zmm15_0, zmm13_0, table);
inline vpternlogq64 (zmm7_1, zmm15_1, zmm13_1, table);
inline vpternlogq64 (zmm7_2, zmm15_2, zmm13_2, table);
inline vpternlogq64 (zmm7_3, zmm15_3, zmm13_3, table);
inline vpternlogq64 (zmm7_4, zmm15_4, zmm13_4, table);
inline vpternlogq64 (zmm7_5, zmm15_5, zmm13_5, table);
inline vpternlogq64 (zmm7_6, zmm15_6, zmm13_6, table);
inline vpternlogq64 (zmm7_7, zmm15_7, zmm13_7, table);
(* vpternlogq $0xd2,%zmm6,%zmm13,%zmm15            #! PC = 0x55555558f08c *)
mov table 0xd2@uint8;
inline vpternlogq64 (zmm15_0, zmm13_0, zmm6_0, table);
inline vpternlogq64 (zmm15_1, zmm13_1, zmm6_1, table);
inline vpternlogq64 (zmm15_2, zmm13_2, zmm6_2, table);
inline vpternlogq64 (zmm15_3, zmm13_3, zmm6_3, table);
inline vpternlogq64 (zmm15_4, zmm13_4, zmm6_4, table);
inline vpternlogq64 (zmm15_5, zmm13_5, zmm6_5, table);
inline vpternlogq64 (zmm15_6, zmm13_6, zmm6_6, table);
inline vpternlogq64 (zmm15_7, zmm13_7, zmm6_7, table);
(* vpternlogq $0xd2,%zmm14,%zmm6,%zmm13            #! PC = 0x55555558f093 *)
mov table 0xd2@uint8;
inline vpternlogq64 (zmm13_0, zmm6_0, zmm14_0, table);
inline vpternlogq64 (zmm13_1, zmm6_1, zmm14_1, table);
inline vpternlogq64 (zmm13_2, zmm6_2, zmm14_2, table);
inline vpternlogq64 (zmm13_3, zmm6_3, zmm14_3, table);
inline vpternlogq64 (zmm13_4, zmm6_4, zmm14_4, table);
inline vpternlogq64 (zmm13_5, zmm6_5, zmm14_5, table);
inline vpternlogq64 (zmm13_6, zmm6_6, zmm14_6, table);
inline vpternlogq64 (zmm13_7, zmm6_7, zmm14_7, table);
(* vmovdqa64 %zmm17,%zmm6                          #! PC = 0x55555558f09a *)
mov zmm6_0 zmm17_0;
mov zmm6_1 zmm17_1;
mov zmm6_2 zmm17_2;
mov zmm6_3 zmm17_3;
mov zmm6_4 zmm17_4;
mov zmm6_5 zmm17_5;
mov zmm6_6 zmm17_6;
mov zmm6_7 zmm17_7;
(* vpternlogq $0xd2,%zmm0,%zmm17,%zmm31            #! PC = 0x55555558f0a0 *)
mov table 0xd2@uint8;
inline vpternlogq64 (zmm31_0, zmm17_0, zmm0_0, table);
inline vpternlogq64 (zmm31_1, zmm17_1, zmm0_1, table);
inline vpternlogq64 (zmm31_2, zmm17_2, zmm0_2, table);
inline vpternlogq64 (zmm31_3, zmm17_3, zmm0_3, table);
inline vpternlogq64 (zmm31_4, zmm17_4, zmm0_4, table);
inline vpternlogq64 (zmm31_5, zmm17_5, zmm0_5, table);
inline vpternlogq64 (zmm31_6, zmm17_6, zmm0_6, table);
inline vpternlogq64 (zmm31_7, zmm17_7, zmm0_7, table);
(* vpternlogq $0xd2,%zmm4,%zmm0,%zmm6              #! PC = 0x55555558f0a7 *)
mov table 0xd2@uint8;
inline vpternlogq64 (zmm6_0, zmm0_0, zmm4_0, table);
inline vpternlogq64 (zmm6_1, zmm0_1, zmm4_1, table);
inline vpternlogq64 (zmm6_2, zmm0_2, zmm4_2, table);
inline vpternlogq64 (zmm6_3, zmm0_3, zmm4_3, table);
inline vpternlogq64 (zmm6_4, zmm0_4, zmm4_4, table);
inline vpternlogq64 (zmm6_5, zmm0_5, zmm4_5, table);
inline vpternlogq64 (zmm6_6, zmm0_6, zmm4_6, table);
inline vpternlogq64 (zmm6_7, zmm0_7, zmm4_7, table);
(* vmovdqa64 %zmm19,%zmm14                         #! PC = 0x55555558f0ae *)
mov zmm14_0 zmm19_0;
mov zmm14_1 zmm19_1;
mov zmm14_2 zmm19_2;
mov zmm14_3 zmm19_3;
mov zmm14_4 zmm19_4;
mov zmm14_5 zmm19_5;
mov zmm14_6 zmm19_6;
mov zmm14_7 zmm19_7;
(* vpternlogq $0xd2,%zmm25,%zmm4,%zmm0             #! PC = 0x55555558f0b4 *)
mov table 0xd2@uint8;
inline vpternlogq64 (zmm0_0, zmm4_0, zmm25_0, table);
inline vpternlogq64 (zmm0_1, zmm4_1, zmm25_1, table);
inline vpternlogq64 (zmm0_2, zmm4_2, zmm25_2, table);
inline vpternlogq64 (zmm0_3, zmm4_3, zmm25_3, table);
inline vpternlogq64 (zmm0_4, zmm4_4, zmm25_4, table);
inline vpternlogq64 (zmm0_5, zmm4_5, zmm25_5, table);
inline vpternlogq64 (zmm0_6, zmm4_6, zmm25_6, table);
inline vpternlogq64 (zmm0_7, zmm4_7, zmm25_7, table);
(* vmovdqa64 %zmm18,%zmm22                         #! PC = 0x55555558f0bb *)
mov zmm22_0 zmm18_0;
mov zmm22_1 zmm18_1;
mov zmm22_2 zmm18_2;
mov zmm22_3 zmm18_3;
mov zmm22_4 zmm18_4;
mov zmm22_5 zmm18_5;
mov zmm22_6 zmm18_6;
mov zmm22_7 zmm18_7;
(* vpternlogq $0xd2,%zmm26,%zmm25,%zmm4            #! PC = 0x55555558f0c1 *)
mov table 0xd2@uint8;
inline vpternlogq64 (zmm4_0, zmm25_0, zmm26_0, table);
inline vpternlogq64 (zmm4_1, zmm25_1, zmm26_1, table);
inline vpternlogq64 (zmm4_2, zmm25_2, zmm26_2, table);
inline vpternlogq64 (zmm4_3, zmm25_3, zmm26_3, table);
inline vpternlogq64 (zmm4_4, zmm25_4, zmm26_4, table);
inline vpternlogq64 (zmm4_5, zmm25_5, zmm26_5, table);
inline vpternlogq64 (zmm4_6, zmm25_6, zmm26_6, table);
inline vpternlogq64 (zmm4_7, zmm25_7, zmm26_7, table);
(* vmovdqa64 %zmm20,%zmm28                         #! PC = 0x55555558f0c8 *)
mov zmm28_0 zmm20_0;
mov zmm28_1 zmm20_1;
mov zmm28_2 zmm20_2;
mov zmm28_3 zmm20_3;
mov zmm28_4 zmm20_4;
mov zmm28_5 zmm20_5;
mov zmm28_6 zmm20_6;
mov zmm28_7 zmm20_7;
(* vpternlogq $0xd2,%zmm17,%zmm26,%zmm25           #! PC = 0x55555558f0ce *)
mov table 0xd2@uint8;
inline vpternlogq64 (zmm25_0, zmm26_0, zmm17_0, table);
inline vpternlogq64 (zmm25_1, zmm26_1, zmm17_1, table);
inline vpternlogq64 (zmm25_2, zmm26_2, zmm17_2, table);
inline vpternlogq64 (zmm25_3, zmm26_3, zmm17_3, table);
inline vpternlogq64 (zmm25_4, zmm26_4, zmm17_4, table);
inline vpternlogq64 (zmm25_5, zmm26_5, zmm17_5, table);
inline vpternlogq64 (zmm25_6, zmm26_6, zmm17_6, table);
inline vpternlogq64 (zmm25_7, zmm26_7, zmm17_7, table);
(* vmovdqa64 %zmm12,%zmm26                         #! PC = 0x55555558f0d5 *)
mov zmm26_0 zmm12_0;
mov zmm26_1 zmm12_1;
mov zmm26_2 zmm12_2;
mov zmm26_3 zmm12_3;
mov zmm26_4 zmm12_4;
mov zmm26_5 zmm12_5;
mov zmm26_6 zmm12_6;
mov zmm26_7 zmm12_7;
(* vmovdqa64 %zmm30,%zmm17                         #! PC = 0x55555558f0db *)
mov zmm17_0 zmm30_0;
mov zmm17_1 zmm30_1;
mov zmm17_2 zmm30_2;
mov zmm17_3 zmm30_3;
mov zmm17_4 zmm30_4;
mov zmm17_5 zmm30_5;
mov zmm17_6 zmm30_6;
mov zmm17_7 zmm30_7;
(* vpternlogq $0xd2,%zmm19,%zmm30,%zmm26           #! PC = 0x55555558f0e1 *)
mov table 0xd2@uint8;
inline vpternlogq64 (zmm26_0, zmm30_0, zmm19_0, table);
inline vpternlogq64 (zmm26_1, zmm30_1, zmm19_1, table);
inline vpternlogq64 (zmm26_2, zmm30_2, zmm19_2, table);
inline vpternlogq64 (zmm26_3, zmm30_3, zmm19_3, table);
inline vpternlogq64 (zmm26_4, zmm30_4, zmm19_4, table);
inline vpternlogq64 (zmm26_5, zmm30_5, zmm19_5, table);
inline vpternlogq64 (zmm26_6, zmm30_6, zmm19_6, table);
inline vpternlogq64 (zmm26_7, zmm30_7, zmm19_7, table);
(* vpternlogq $0xd2,%zmm3,%zmm9,%zmm14             #! PC = 0x55555558f0e8 *)
mov table 0xd2@uint8;
inline vpternlogq64 (zmm14_0, zmm9_0, zmm3_0, table);
inline vpternlogq64 (zmm14_1, zmm9_1, zmm3_1, table);
inline vpternlogq64 (zmm14_2, zmm9_2, zmm3_2, table);
inline vpternlogq64 (zmm14_3, zmm9_3, zmm3_3, table);
inline vpternlogq64 (zmm14_4, zmm9_4, zmm3_4, table);
inline vpternlogq64 (zmm14_5, zmm9_5, zmm3_5, table);
inline vpternlogq64 (zmm14_6, zmm9_6, zmm3_6, table);
inline vpternlogq64 (zmm14_7, zmm9_7, zmm3_7, table);
(* vpternlogq $0xd2,%zmm9,%zmm19,%zmm17            #! PC = 0x55555558f0ef *)
mov table 0xd2@uint8;
inline vpternlogq64 (zmm17_0, zmm19_0, zmm9_0, table);
inline vpternlogq64 (zmm17_1, zmm19_1, zmm9_1, table);
inline vpternlogq64 (zmm17_2, zmm19_2, zmm9_2, table);
inline vpternlogq64 (zmm17_3, zmm19_3, zmm9_3, table);
inline vpternlogq64 (zmm17_4, zmm19_4, zmm9_4, table);
inline vpternlogq64 (zmm17_5, zmm19_5, zmm9_5, table);
inline vpternlogq64 (zmm17_6, zmm19_6, zmm9_6, table);
inline vpternlogq64 (zmm17_7, zmm19_7, zmm9_7, table);
(* vpternlogq $0xd2,%zmm8,%zmm20,%zmm22            #! PC = 0x55555558f0f6 *)
mov table 0xd2@uint8;
inline vpternlogq64 (zmm22_0, zmm20_0, zmm8_0, table);
inline vpternlogq64 (zmm22_1, zmm20_1, zmm8_1, table);
inline vpternlogq64 (zmm22_2, zmm20_2, zmm8_2, table);
inline vpternlogq64 (zmm22_3, zmm20_3, zmm8_3, table);
inline vpternlogq64 (zmm22_4, zmm20_4, zmm8_4, table);
inline vpternlogq64 (zmm22_5, zmm20_5, zmm8_5, table);
inline vpternlogq64 (zmm22_6, zmm20_6, zmm8_6, table);
inline vpternlogq64 (zmm22_7, zmm20_7, zmm8_7, table);
(* vpternlogq $0xd2,%zmm12,%zmm3,%zmm9             #! PC = 0x55555558f0fd *)
mov table 0xd2@uint8;
inline vpternlogq64 (zmm9_0, zmm3_0, zmm12_0, table);
inline vpternlogq64 (zmm9_1, zmm3_1, zmm12_1, table);
inline vpternlogq64 (zmm9_2, zmm3_2, zmm12_2, table);
inline vpternlogq64 (zmm9_3, zmm3_3, zmm12_3, table);
inline vpternlogq64 (zmm9_4, zmm3_4, zmm12_4, table);
inline vpternlogq64 (zmm9_5, zmm3_5, zmm12_5, table);
inline vpternlogq64 (zmm9_6, zmm3_6, zmm12_6, table);
inline vpternlogq64 (zmm9_7, zmm3_7, zmm12_7, table);
(* vpternlogq $0xd2,%zmm21,%zmm8,%zmm28            #! PC = 0x55555558f104 *)
mov table 0xd2@uint8;
inline vpternlogq64 (zmm28_0, zmm8_0, zmm21_0, table);
inline vpternlogq64 (zmm28_1, zmm8_1, zmm21_1, table);
inline vpternlogq64 (zmm28_2, zmm8_2, zmm21_2, table);
inline vpternlogq64 (zmm28_3, zmm8_3, zmm21_3, table);
inline vpternlogq64 (zmm28_4, zmm8_4, zmm21_4, table);
inline vpternlogq64 (zmm28_5, zmm8_5, zmm21_5, table);
inline vpternlogq64 (zmm28_6, zmm8_6, zmm21_6, table);
inline vpternlogq64 (zmm28_7, zmm8_7, zmm21_7, table);
(* vmovdqa64 %zmm0,%zmm19                          #! PC = 0x55555558f10b *)
mov zmm19_0 zmm0_0;
mov zmm19_1 zmm0_1;
mov zmm19_2 zmm0_2;
mov zmm19_3 zmm0_3;
mov zmm19_4 zmm0_4;
mov zmm19_5 zmm0_5;
mov zmm19_6 zmm0_6;
mov zmm19_7 zmm0_7;
(* vpternlogq $0xd2,%zmm2,%zmm21,%zmm8             #! PC = 0x55555558f111 *)
mov table 0xd2@uint8;
inline vpternlogq64 (zmm8_0, zmm21_0, zmm2_0, table);
inline vpternlogq64 (zmm8_1, zmm21_1, zmm2_1, table);
inline vpternlogq64 (zmm8_2, zmm21_2, zmm2_2, table);
inline vpternlogq64 (zmm8_3, zmm21_3, zmm2_3, table);
inline vpternlogq64 (zmm8_4, zmm21_4, zmm2_4, table);
inline vpternlogq64 (zmm8_5, zmm21_5, zmm2_5, table);
inline vpternlogq64 (zmm8_6, zmm21_6, zmm2_6, table);
inline vpternlogq64 (zmm8_7, zmm21_7, zmm2_7, table);
(* vpternlogq $0xd2,%zmm18,%zmm2,%zmm21            #! PC = 0x55555558f118 *)
mov table 0xd2@uint8;
inline vpternlogq64 (zmm21_0, zmm2_0, zmm18_0, table);
inline vpternlogq64 (zmm21_1, zmm2_1, zmm18_1, table);
inline vpternlogq64 (zmm21_2, zmm2_2, zmm18_2, table);
inline vpternlogq64 (zmm21_3, zmm2_3, zmm18_3, table);
inline vpternlogq64 (zmm21_4, zmm2_4, zmm18_4, table);
inline vpternlogq64 (zmm21_5, zmm2_5, zmm18_5, table);
inline vpternlogq64 (zmm21_6, zmm2_6, zmm18_6, table);
inline vpternlogq64 (zmm21_7, zmm2_7, zmm18_7, table);
(* vpternlogq $0xd2,%zmm20,%zmm18,%zmm2            #! PC = 0x55555558f11f *)
mov table 0xd2@uint8;
inline vpternlogq64 (zmm2_0, zmm18_0, zmm20_0, table);
inline vpternlogq64 (zmm2_1, zmm18_1, zmm20_1, table);
inline vpternlogq64 (zmm2_2, zmm18_2, zmm20_2, table);
inline vpternlogq64 (zmm2_3, zmm18_3, zmm20_3, table);
inline vpternlogq64 (zmm2_4, zmm18_4, zmm20_4, table);
inline vpternlogq64 (zmm2_5, zmm18_5, zmm20_5, table);
inline vpternlogq64 (zmm2_6, zmm18_6, zmm20_6, table);
inline vpternlogq64 (zmm2_7, zmm18_7, zmm20_7, table);
(* vpternlogq $0xd2,%zmm30,%zmm12,%zmm3            #! PC = 0x55555558f126 *)
mov table 0xd2@uint8;
inline vpternlogq64 (zmm3_0, zmm12_0, zmm30_0, table);
inline vpternlogq64 (zmm3_1, zmm12_1, zmm30_1, table);
inline vpternlogq64 (zmm3_2, zmm12_2, zmm30_2, table);
inline vpternlogq64 (zmm3_3, zmm12_3, zmm30_3, table);
inline vpternlogq64 (zmm3_4, zmm12_4, zmm30_4, table);
inline vpternlogq64 (zmm3_5, zmm12_5, zmm30_5, table);
inline vpternlogq64 (zmm3_6, zmm12_6, zmm30_6, table);
inline vpternlogq64 (zmm3_7, zmm12_7, zmm30_7, table);
(* vpternlogq $0x96,%zmm7,%zmm8,%zmm19             #! PC = 0x55555558f12d *)
mov table 0x96@uint8;
inline vpternlogq64 (zmm19_0, zmm8_0, zmm7_0, table);
inline vpternlogq64 (zmm19_1, zmm8_1, zmm7_1, table);
inline vpternlogq64 (zmm19_2, zmm8_2, zmm7_2, table);
inline vpternlogq64 (zmm19_3, zmm8_3, zmm7_3, table);
inline vpternlogq64 (zmm19_4, zmm8_4, zmm7_4, table);
inline vpternlogq64 (zmm19_5, zmm8_5, zmm7_5, table);
inline vpternlogq64 (zmm19_6, zmm8_6, zmm7_6, table);
inline vpternlogq64 (zmm19_7, zmm8_7, zmm7_7, table);
(* vmovdqa64 %zmm16,%zmm12                         #! PC = 0x55555558f134 *)
mov zmm12_0 zmm16_0;
mov zmm12_1 zmm16_1;
mov zmm12_2 zmm16_2;
mov zmm12_3 zmm16_3;
mov zmm12_4 zmm16_4;
mov zmm12_5 zmm16_5;
mov zmm12_6 zmm16_6;
mov zmm12_7 zmm16_7;
(* vmovdqa64 %zmm9,%zmm10                          #! PC = 0x55555558f13a *)
mov zmm10_0 zmm9_0;
mov zmm10_1 zmm9_1;
mov zmm10_2 zmm9_2;
mov zmm10_3 zmm9_3;
mov zmm10_4 zmm9_4;
mov zmm10_5 zmm9_5;
mov zmm10_6 zmm9_6;
mov zmm10_7 zmm9_7;
(* vmovdqa64 %zmm2,%zmm1                           #! PC = 0x55555558f140 *)
mov zmm1_0 zmm2_0;
mov zmm1_1 zmm2_1;
mov zmm1_2 zmm2_2;
mov zmm1_3 zmm2_3;
mov zmm1_4 zmm2_4;
mov zmm1_5 zmm2_5;
mov zmm1_6 zmm2_6;
mov zmm1_7 zmm2_7;
(* vpternlogq $0x96,%zmm22,%zmm31,%zmm12           #! PC = 0x55555558f146 *)
mov table 0x96@uint8;
inline vpternlogq64 (zmm12_0, zmm31_0, zmm22_0, table);
inline vpternlogq64 (zmm12_1, zmm31_1, zmm22_1, table);
inline vpternlogq64 (zmm12_2, zmm31_2, zmm22_2, table);
inline vpternlogq64 (zmm12_3, zmm31_3, zmm22_3, table);
inline vpternlogq64 (zmm12_4, zmm31_4, zmm22_4, table);
inline vpternlogq64 (zmm12_5, zmm31_5, zmm22_5, table);
inline vpternlogq64 (zmm12_6, zmm31_6, zmm22_6, table);
inline vpternlogq64 (zmm12_7, zmm31_7, zmm22_7, table);
(* vpternlogq $0x96,0x88(%rsp),%zmm14,%zmm19       #! EA = L0x7fffffffd540; Value = 0xfb29006f5291cc1e; PC = 0x55555558f14d *)
mov table 0x96@uint8;
inline vpternlogq64 (zmm19_0, zmm14_0, L0x7fffffffd540, table);
inline vpternlogq64 (zmm19_1, zmm14_1, L0x7fffffffd548, table);
inline vpternlogq64 (zmm19_2, zmm14_2, L0x7fffffffd550, table);
inline vpternlogq64 (zmm19_3, zmm14_3, L0x7fffffffd558, table);
inline vpternlogq64 (zmm19_4, zmm14_4, L0x7fffffffd560, table);
inline vpternlogq64 (zmm19_5, zmm14_5, L0x7fffffffd568, table);
inline vpternlogq64 (zmm19_6, zmm14_6, L0x7fffffffd570, table);
inline vpternlogq64 (zmm19_7, zmm14_7, L0x7fffffffd578, table);
(* vpternlogq $0x96,%zmm4,%zmm11,%zmm10            #! PC = 0x55555558f159 *)
mov table 0x96@uint8;
inline vpternlogq64 (zmm10_0, zmm11_0, zmm4_0, table);
inline vpternlogq64 (zmm10_1, zmm11_1, zmm4_1, table);
inline vpternlogq64 (zmm10_2, zmm11_2, zmm4_2, table);
inline vpternlogq64 (zmm10_3, zmm11_3, zmm4_3, table);
inline vpternlogq64 (zmm10_4, zmm11_4, zmm4_4, table);
inline vpternlogq64 (zmm10_5, zmm11_5, zmm4_5, table);
inline vpternlogq64 (zmm10_6, zmm11_6, zmm4_6, table);
inline vpternlogq64 (zmm10_7, zmm11_7, zmm4_7, table);
(* vpternlogq $0x96,%zmm3,%zmm13,%zmm1             #! PC = 0x55555558f160 *)
mov table 0x96@uint8;
inline vpternlogq64 (zmm1_0, zmm13_0, zmm3_0, table);
inline vpternlogq64 (zmm1_1, zmm13_1, zmm3_1, table);
inline vpternlogq64 (zmm1_2, zmm13_2, zmm3_2, table);
inline vpternlogq64 (zmm1_3, zmm13_3, zmm3_3, table);
inline vpternlogq64 (zmm1_4, zmm13_4, zmm3_4, table);
inline vpternlogq64 (zmm1_5, zmm13_5, zmm3_5, table);
inline vpternlogq64 (zmm1_6, zmm13_6, zmm3_6, table);
inline vpternlogq64 (zmm1_7, zmm13_7, zmm3_7, table);
(* vpternlogq $0x96,%zmm26,%zmm5,%zmm12            #! PC = 0x55555558f167 *)
mov table 0x96@uint8;
inline vpternlogq64 (zmm12_0, zmm5_0, zmm26_0, table);
inline vpternlogq64 (zmm12_1, zmm5_1, zmm26_1, table);
inline vpternlogq64 (zmm12_2, zmm5_2, zmm26_2, table);
inline vpternlogq64 (zmm12_3, zmm5_3, zmm26_3, table);
inline vpternlogq64 (zmm12_4, zmm5_4, zmm26_4, table);
inline vpternlogq64 (zmm12_5, zmm5_5, zmm26_5, table);
inline vpternlogq64 (zmm12_6, zmm5_6, zmm26_6, table);
inline vpternlogq64 (zmm12_7, zmm5_7, zmm26_7, table);
(* vpternlogq $0x96,%zmm25,%zmm24,%zmm1            #! PC = 0x55555558f16e *)
mov table 0x96@uint8;
inline vpternlogq64 (zmm1_0, zmm24_0, zmm25_0, table);
inline vpternlogq64 (zmm1_1, zmm24_1, zmm25_1, table);
inline vpternlogq64 (zmm1_2, zmm24_2, zmm25_2, table);
inline vpternlogq64 (zmm1_3, zmm24_3, zmm25_3, table);
inline vpternlogq64 (zmm1_4, zmm24_4, zmm25_4, table);
inline vpternlogq64 (zmm1_5, zmm24_5, zmm25_5, table);
inline vpternlogq64 (zmm1_6, zmm24_6, zmm25_6, table);
inline vpternlogq64 (zmm1_7, zmm24_7, zmm25_7, table);
(* vpternlogq $0x96,%zmm15,%zmm21,%zmm10           #! PC = 0x55555558f175 *)
mov table 0x96@uint8;
inline vpternlogq64 (zmm10_0, zmm21_0, zmm15_0, table);
inline vpternlogq64 (zmm10_1, zmm21_1, zmm15_1, table);
inline vpternlogq64 (zmm10_2, zmm21_2, zmm15_2, table);
inline vpternlogq64 (zmm10_3, zmm21_3, zmm15_3, table);
inline vpternlogq64 (zmm10_4, zmm21_4, zmm15_4, table);
inline vpternlogq64 (zmm10_5, zmm21_5, zmm15_5, table);
inline vpternlogq64 (zmm10_6, zmm21_6, zmm15_6, table);
inline vpternlogq64 (zmm10_7, zmm21_7, zmm15_7, table);
(* vmovdqa64 %zmm24,0x48(%rsp)                     #! EA = L0x7fffffffd500; PC = 0x55555558f17c *)
mov L0x7fffffffd500 zmm24_0;
mov L0x7fffffffd508 zmm24_1;
mov L0x7fffffffd510 zmm24_2;
mov L0x7fffffffd518 zmm24_3;
mov L0x7fffffffd520 zmm24_4;
mov L0x7fffffffd528 zmm24_5;
mov L0x7fffffffd530 zmm24_6;
mov L0x7fffffffd538 zmm24_7;
(* vprolq $0x1,%zmm19,%zmm24                       #! PC = 0x55555558f187 *)
rol zmm24_0 zmm19_0 0x1;
rol zmm24_1 zmm19_1 0x1;
rol zmm24_2 zmm19_2 0x1;
rol zmm24_3 zmm19_3 0x1;
rol zmm24_4 zmm19_4 0x1;
rol zmm24_5 zmm19_5 0x1;
rol zmm24_6 zmm19_6 0x1;
rol zmm24_7 zmm19_7 0x1;
(* vprolq $0x1,%zmm10,%zmm23                       #! PC = 0x55555558f18e *)
rol zmm23_0 zmm10_0 0x1;
rol zmm23_1 zmm10_1 0x1;
rol zmm23_2 zmm10_2 0x1;
rol zmm23_3 zmm10_3 0x1;
rol zmm23_4 zmm10_4 0x1;
rol zmm23_5 zmm10_5 0x1;
rol zmm23_6 zmm10_6 0x1;
rol zmm23_7 zmm10_7 0x1;
(* vprolq $0x1,%zmm1,%zmm20                        #! PC = 0x55555558f195 *)
rol zmm20_0 zmm1_0 0x1;
rol zmm20_1 zmm1_1 0x1;
rol zmm20_2 zmm1_2 0x1;
rol zmm20_3 zmm1_3 0x1;
rol zmm20_4 zmm1_4 0x1;
rol zmm20_5 zmm1_5 0x1;
rol zmm20_6 zmm1_6 0x1;
rol zmm20_7 zmm1_7 0x1;
(* vmovdqa64 %zmm29,%zmm18                         #! PC = 0x55555558f19c *)
mov zmm18_0 zmm29_0;
mov zmm18_1 zmm29_1;
mov zmm18_2 zmm29_2;
mov zmm18_3 zmm29_3;
mov zmm18_4 zmm29_4;
mov zmm18_5 zmm29_5;
mov zmm18_6 zmm29_6;
mov zmm18_7 zmm29_7;
(* vmovdqa64 %zmm15,0x8(%rsp)                      #! EA = L0x7fffffffd4c0; PC = 0x55555558f1a2 *)
mov L0x7fffffffd4c0 zmm15_0;
mov L0x7fffffffd4c8 zmm15_1;
mov L0x7fffffffd4d0 zmm15_2;
mov L0x7fffffffd4d8 zmm15_3;
mov L0x7fffffffd4e0 zmm15_4;
mov L0x7fffffffd4e8 zmm15_5;
mov L0x7fffffffd4f0 zmm15_6;
mov L0x7fffffffd4f8 zmm15_7;
(* vprolq $0x1,%zmm12,%zmm15                       #! PC = 0x55555558f1ad *)
rol zmm15_0 zmm12_0 0x1;
rol zmm15_1 zmm12_1 0x1;
rol zmm15_2 zmm12_2 0x1;
rol zmm15_3 zmm12_3 0x1;
rol zmm15_4 zmm12_4 0x1;
rol zmm15_5 zmm12_5 0x1;
rol zmm15_6 zmm12_6 0x1;
rol zmm15_7 zmm12_7 0x1;
(* vpternlogq $0x96,%zmm27,%zmm17,%zmm18           #! PC = 0x55555558f1b4 *)
mov table 0x96@uint8;
inline vpternlogq64 (zmm18_0, zmm17_0, zmm27_0, table);
inline vpternlogq64 (zmm18_1, zmm17_1, zmm27_1, table);
inline vpternlogq64 (zmm18_2, zmm17_2, zmm27_2, table);
inline vpternlogq64 (zmm18_3, zmm17_3, zmm27_3, table);
inline vpternlogq64 (zmm18_4, zmm17_4, zmm27_4, table);
inline vpternlogq64 (zmm18_5, zmm17_5, zmm27_5, table);
inline vpternlogq64 (zmm18_6, zmm17_6, zmm27_6, table);
inline vpternlogq64 (zmm18_7, zmm17_7, zmm27_7, table);
(* vpternlogq $0x96,%zmm28,%zmm6,%zmm18            #! PC = 0x55555558f1bb *)
mov table 0x96@uint8;
inline vpternlogq64 (zmm18_0, zmm6_0, zmm28_0, table);
inline vpternlogq64 (zmm18_1, zmm6_1, zmm28_1, table);
inline vpternlogq64 (zmm18_2, zmm6_2, zmm28_2, table);
inline vpternlogq64 (zmm18_3, zmm6_3, zmm28_3, table);
inline vpternlogq64 (zmm18_4, zmm6_4, zmm28_4, table);
inline vpternlogq64 (zmm18_5, zmm6_5, zmm28_5, table);
inline vpternlogq64 (zmm18_6, zmm6_6, zmm28_6, table);
inline vpternlogq64 (zmm18_7, zmm6_7, zmm28_7, table);
(* vmovdqa64 %zmm25,-0x38(%rsp)                    #! EA = L0x7fffffffd480; PC = 0x55555558f1c2 *)
mov L0x7fffffffd480 zmm25_0;
mov L0x7fffffffd488 zmm25_1;
mov L0x7fffffffd490 zmm25_2;
mov L0x7fffffffd498 zmm25_3;
mov L0x7fffffffd4a0 zmm25_4;
mov L0x7fffffffd4a8 zmm25_5;
mov L0x7fffffffd4b0 zmm25_6;
mov L0x7fffffffd4b8 zmm25_7;
(* vprolq $0x1,%zmm18,%zmm25                       #! PC = 0x55555558f1cd *)
rol zmm25_0 zmm18_0 0x1;
rol zmm25_1 zmm18_1 0x1;
rol zmm25_2 zmm18_2 0x1;
rol zmm25_3 zmm18_3 0x1;
rol zmm25_4 zmm18_4 0x1;
rol zmm25_5 zmm18_5 0x1;
rol zmm25_6 zmm18_6 0x1;
rol zmm25_7 zmm18_7 0x1;
(* vpxord %zmm24,%zmm12,%zmm12                     #! PC = 0x55555558f1d4 *)
xor zmm12_0@uint64 zmm12_0 zmm24_0;
xor zmm12_1@uint64 zmm12_1 zmm24_1;
xor zmm12_2@uint64 zmm12_2 zmm24_2;
xor zmm12_3@uint64 zmm12_3 zmm24_3;
xor zmm12_4@uint64 zmm12_4 zmm24_4;
xor zmm12_5@uint64 zmm12_5 zmm24_5;
xor zmm12_6@uint64 zmm12_6 zmm24_6;
xor zmm12_7@uint64 zmm12_7 zmm24_7;
(* vpxord %zmm23,%zmm18,%zmm18                     #! PC = 0x55555558f1da *)
xor zmm18_0@uint64 zmm18_0 zmm23_0;
xor zmm18_1@uint64 zmm18_1 zmm23_1;
xor zmm18_2@uint64 zmm18_2 zmm23_2;
xor zmm18_3@uint64 zmm18_3 zmm23_3;
xor zmm18_4@uint64 zmm18_4 zmm23_4;
xor zmm18_5@uint64 zmm18_5 zmm23_5;
xor zmm18_6@uint64 zmm18_6 zmm23_6;
xor zmm18_7@uint64 zmm18_7 zmm23_7;
(* vpxord %zmm20,%zmm19,%zmm19                     #! PC = 0x55555558f1e0 *)
xor zmm19_0@uint64 zmm19_0 zmm20_0;
xor zmm19_1@uint64 zmm19_1 zmm20_1;
xor zmm19_2@uint64 zmm19_2 zmm20_2;
xor zmm19_3@uint64 zmm19_3 zmm20_3;
xor zmm19_4@uint64 zmm19_4 zmm20_4;
xor zmm19_5@uint64 zmm19_5 zmm20_5;
xor zmm19_6@uint64 zmm19_6 zmm20_6;
xor zmm19_7@uint64 zmm19_7 zmm20_7;
(* vpxord %zmm15,%zmm10,%zmm10                     #! PC = 0x55555558f1e6 *)
xor zmm10_0@uint64 zmm10_0 zmm15_0;
xor zmm10_1@uint64 zmm10_1 zmm15_1;
xor zmm10_2@uint64 zmm10_2 zmm15_2;
xor zmm10_3@uint64 zmm10_3 zmm15_3;
xor zmm10_4@uint64 zmm10_4 zmm15_4;
xor zmm10_5@uint64 zmm10_5 zmm15_5;
xor zmm10_6@uint64 zmm10_6 zmm15_6;
xor zmm10_7@uint64 zmm10_7 zmm15_7;
(* vpxord %zmm29,%zmm12,%zmm29                     #! PC = 0x55555558f1ec *)
xor zmm29_0@uint64 zmm12_0 zmm29_0;
xor zmm29_1@uint64 zmm12_1 zmm29_1;
xor zmm29_2@uint64 zmm12_2 zmm29_2;
xor zmm29_3@uint64 zmm12_3 zmm29_3;
xor zmm29_4@uint64 zmm12_4 zmm29_4;
xor zmm29_5@uint64 zmm12_5 zmm29_5;
xor zmm29_6@uint64 zmm12_6 zmm29_6;
xor zmm29_7@uint64 zmm12_7 zmm29_7;
(* vprorq $0x14,%zmm29,%zmm29                      #! PC = 0x55555558f1f2 *)
ror zmm29_0 zmm29_0 0x14;
ror zmm29_1 zmm29_1 0x14;
ror zmm29_2 zmm29_2 0x14;
ror zmm29_3 zmm29_3 0x14;
ror zmm29_4 zmm29_4 0x14;
ror zmm29_5 zmm29_5 0x14;
ror zmm29_6 zmm29_6 0x14;
ror zmm29_7 zmm29_7 0x14;
(* vpxord %zmm9,%zmm19,%zmm24                      #! PC = 0x55555558f1f9 *)
xor zmm24_0@uint64 zmm19_0 zmm9_0;
xor zmm24_1@uint64 zmm19_1 zmm9_1;
xor zmm24_2@uint64 zmm19_2 zmm9_2;
xor zmm24_3@uint64 zmm19_3 zmm9_3;
xor zmm24_4@uint64 zmm19_4 zmm9_4;
xor zmm24_5@uint64 zmm19_5 zmm9_5;
xor zmm24_6@uint64 zmm19_6 zmm9_6;
xor zmm24_7@uint64 zmm19_7 zmm9_7;
(* vpxord %zmm0,%zmm18,%zmm0                       #! PC = 0x55555558f1ff *)
xor zmm0_0@uint64 zmm18_0 zmm0_0;
xor zmm0_1@uint64 zmm18_1 zmm0_1;
xor zmm0_2@uint64 zmm18_2 zmm0_2;
xor zmm0_3@uint64 zmm18_3 zmm0_3;
xor zmm0_4@uint64 zmm18_4 zmm0_4;
xor zmm0_5@uint64 zmm18_5 zmm0_5;
xor zmm0_6@uint64 zmm18_6 zmm0_6;
xor zmm0_7@uint64 zmm18_7 zmm0_7;
(* vpxord %zmm2,%zmm10,%zmm30                      #! PC = 0x55555558f205 *)
xor zmm30_0@uint64 zmm10_0 zmm2_0;
xor zmm30_1@uint64 zmm10_1 zmm2_1;
xor zmm30_2@uint64 zmm10_2 zmm2_2;
xor zmm30_3@uint64 zmm10_3 zmm2_3;
xor zmm30_4@uint64 zmm10_4 zmm2_4;
xor zmm30_5@uint64 zmm10_5 zmm2_5;
xor zmm30_6@uint64 zmm10_6 zmm2_6;
xor zmm30_7@uint64 zmm10_7 zmm2_7;
(* vprorq $0x15,%zmm0,%zmm0                        #! PC = 0x55555558f20b *)
ror zmm0_0 zmm0_0 0x15;
ror zmm0_1 zmm0_1 0x15;
ror zmm0_2 zmm0_2 0x15;
ror zmm0_3 zmm0_3 0x15;
ror zmm0_4 zmm0_4 0x15;
ror zmm0_5 zmm0_5 0x15;
ror zmm0_6 zmm0_6 0x15;
ror zmm0_7 zmm0_7 0x15;
(* vprolq $0x15,%zmm24,%zmm24                      #! PC = 0x55555558f212 *)
rol zmm24_0 zmm24_0 0x15;
rol zmm24_1 zmm24_1 0x15;
rol zmm24_2 zmm24_2 0x15;
rol zmm24_3 zmm24_3 0x15;
rol zmm24_4 zmm24_4 0x15;
rol zmm24_5 zmm24_5 0x15;
rol zmm24_6 zmm24_6 0x15;
rol zmm24_7 zmm24_7 0x15;
(* vprolq $0xe,%zmm30,%zmm30                       #! PC = 0x55555558f219 *)
rol zmm30_0 zmm30_0 0xe;
rol zmm30_1 zmm30_1 0xe;
rol zmm30_2 zmm30_2 0xe;
rol zmm30_3 zmm30_3 0xe;
rol zmm30_4 zmm30_4 0xe;
rol zmm30_5 zmm30_5 0xe;
rol zmm30_6 zmm30_6 0xe;
rol zmm30_7 zmm30_7 0xe;
(* vpxord %zmm25,%zmm1,%zmm1                       #! PC = 0x55555558f220 *)
xor zmm1_0@uint64 zmm1_0 zmm25_0;
xor zmm1_1@uint64 zmm1_1 zmm25_1;
xor zmm1_2@uint64 zmm1_2 zmm25_2;
xor zmm1_3@uint64 zmm1_3 zmm25_3;
xor zmm1_4@uint64 zmm1_4 zmm25_4;
xor zmm1_5@uint64 zmm1_5 zmm25_5;
xor zmm1_6@uint64 zmm1_6 zmm25_6;
xor zmm1_7@uint64 zmm1_7 zmm25_7;
(* vpxord %zmm13,%zmm10,%zmm13                     #! PC = 0x55555558f226 *)
xor zmm13_0@uint64 zmm10_0 zmm13_0;
xor zmm13_1@uint64 zmm10_1 zmm13_1;
xor zmm13_2@uint64 zmm10_2 zmm13_2;
xor zmm13_3@uint64 zmm10_3 zmm13_3;
xor zmm13_4@uint64 zmm10_4 zmm13_4;
xor zmm13_5@uint64 zmm10_5 zmm13_5;
xor zmm13_6@uint64 zmm10_6 zmm13_6;
xor zmm13_7@uint64 zmm10_7 zmm13_7;
(* vprolq $0x14,%zmm13,%zmm13                      #! PC = 0x55555558f22c *)
rol zmm13_0 zmm13_0 0x14;
rol zmm13_1 zmm13_1 0x14;
rol zmm13_2 zmm13_2 0x14;
rol zmm13_3 zmm13_3 0x14;
rol zmm13_4 zmm13_4 0x14;
rol zmm13_5 zmm13_5 0x14;
rol zmm13_6 zmm13_6 0x14;
rol zmm13_7 zmm13_7 0x14;
(* vpxord %zmm31,%zmm1,%zmm31                      #! PC = 0x55555558f233 *)
xor zmm31_0@uint64 zmm1_0 zmm31_0;
xor zmm31_1@uint64 zmm1_1 zmm31_1;
xor zmm31_2@uint64 zmm1_2 zmm31_2;
xor zmm31_3@uint64 zmm1_3 zmm31_3;
xor zmm31_4@uint64 zmm1_4 zmm31_4;
xor zmm31_5@uint64 zmm1_5 zmm31_5;
xor zmm31_6@uint64 zmm1_6 zmm31_6;
xor zmm31_7@uint64 zmm1_7 zmm31_7;
(* vpxord %zmm17,%zmm12,%zmm17                     #! PC = 0x55555558f239 *)
xor zmm17_0@uint64 zmm12_0 zmm17_0;
xor zmm17_1@uint64 zmm12_1 zmm17_1;
xor zmm17_2@uint64 zmm12_2 zmm17_2;
xor zmm17_3@uint64 zmm12_3 zmm17_3;
xor zmm17_4@uint64 zmm12_4 zmm17_4;
xor zmm17_5@uint64 zmm12_5 zmm17_5;
xor zmm17_6@uint64 zmm12_6 zmm17_6;
xor zmm17_7@uint64 zmm12_7 zmm17_7;
(* vprolq $0x3,%zmm31,%zmm31                       #! PC = 0x55555558f23f *)
rol zmm31_0 zmm31_0 0x3;
rol zmm31_1 zmm31_1 0x3;
rol zmm31_2 zmm31_2 0x3;
rol zmm31_3 zmm31_3 0x3;
rol zmm31_4 zmm31_4 0x3;
rol zmm31_5 zmm31_5 0x3;
rol zmm31_6 zmm31_6 0x3;
rol zmm31_7 zmm31_7 0x3;
(* vprorq $0x13,%zmm17,%zmm17                      #! PC = 0x55555558f246 *)
ror zmm17_0 zmm17_0 0x13;
ror zmm17_1 zmm17_1 0x13;
ror zmm17_2 zmm17_2 0x13;
ror zmm17_3 zmm17_3 0x13;
ror zmm17_4 zmm17_4 0x13;
ror zmm17_5 zmm17_5 0x13;
ror zmm17_6 zmm17_6 0x13;
ror zmm17_7 zmm17_7 0x13;
(* vpxord %zmm7,%zmm18,%zmm7                       #! PC = 0x55555558f24d *)
xor zmm7_0@uint64 zmm18_0 zmm7_0;
xor zmm7_1@uint64 zmm18_1 zmm7_1;
xor zmm7_2@uint64 zmm18_2 zmm7_2;
xor zmm7_3@uint64 zmm18_3 zmm7_3;
xor zmm7_4@uint64 zmm18_4 zmm7_4;
xor zmm7_5@uint64 zmm18_5 zmm7_5;
xor zmm7_6@uint64 zmm18_6 zmm7_6;
xor zmm7_7@uint64 zmm18_7 zmm7_7;
(* vpxord %zmm1,%zmm16,%zmm16                      #! PC = 0x55555558f253 *)
xor zmm16_0@uint64 zmm16_0 zmm1_0;
xor zmm16_1@uint64 zmm16_1 zmm1_1;
xor zmm16_2@uint64 zmm16_2 zmm1_2;
xor zmm16_3@uint64 zmm16_3 zmm1_3;
xor zmm16_4@uint64 zmm16_4 zmm1_4;
xor zmm16_5@uint64 zmm16_5 zmm1_5;
xor zmm16_6@uint64 zmm16_6 zmm1_6;
xor zmm16_7@uint64 zmm16_7 zmm1_7;
(* vprolq $0x6,%zmm7,%zmm7                         #! PC = 0x55555558f259 *)
rol zmm7_0 zmm7_0 0x6;
rol zmm7_1 zmm7_1 0x6;
rol zmm7_2 zmm7_2 0x6;
rol zmm7_3 zmm7_3 0x6;
rol zmm7_4 zmm7_4 0x6;
rol zmm7_5 zmm7_5 0x6;
rol zmm7_6 zmm7_6 0x6;
rol zmm7_7 zmm7_7 0x6;
(* vpxord %zmm11,%zmm19,%zmm11                     #! PC = 0x55555558f260 *)
xor zmm11_0@uint64 zmm19_0 zmm11_0;
xor zmm11_1@uint64 zmm19_1 zmm11_1;
xor zmm11_2@uint64 zmm19_2 zmm11_2;
xor zmm11_3@uint64 zmm19_3 zmm11_3;
xor zmm11_4@uint64 zmm19_4 zmm11_4;
xor zmm11_5@uint64 zmm19_5 zmm11_5;
xor zmm11_6@uint64 zmm19_6 zmm11_6;
xor zmm11_7@uint64 zmm19_7 zmm11_7;
(* vpxord %zmm4,%zmm19,%zmm4                       #! PC = 0x55555558f266 *)
xor zmm4_0@uint64 zmm19_0 zmm4_0;
xor zmm4_1@uint64 zmm19_1 zmm4_1;
xor zmm4_2@uint64 zmm19_2 zmm4_2;
xor zmm4_3@uint64 zmm19_3 zmm4_3;
xor zmm4_4@uint64 zmm19_4 zmm4_4;
xor zmm4_5@uint64 zmm19_5 zmm4_5;
xor zmm4_6@uint64 zmm19_6 zmm4_6;
xor zmm4_7@uint64 zmm19_7 zmm4_7;
(* vpxord %zmm27,%zmm12,%zmm27                     #! PC = 0x55555558f26c *)
xor zmm27_0@uint64 zmm12_0 zmm27_0;
xor zmm27_1@uint64 zmm12_1 zmm27_1;
xor zmm27_2@uint64 zmm12_2 zmm27_2;
xor zmm27_3@uint64 zmm12_3 zmm27_3;
xor zmm27_4@uint64 zmm12_4 zmm27_4;
xor zmm27_5@uint64 zmm12_5 zmm27_5;
xor zmm27_6@uint64 zmm12_6 zmm27_6;
xor zmm27_7@uint64 zmm12_7 zmm27_7;
(* vpxord %zmm3,%zmm10,%zmm3                       #! PC = 0x55555558f272 *)
xor zmm3_0@uint64 zmm10_0 zmm3_0;
xor zmm3_1@uint64 zmm10_1 zmm3_1;
xor zmm3_2@uint64 zmm10_2 zmm3_2;
xor zmm3_3@uint64 zmm10_3 zmm3_3;
xor zmm3_4@uint64 zmm10_4 zmm3_4;
xor zmm3_5@uint64 zmm10_5 zmm3_5;
xor zmm3_6@uint64 zmm10_6 zmm3_6;
xor zmm3_7@uint64 zmm10_7 zmm3_7;
(* vprolq $0x1c,%zmm11,%zmm11                      #! PC = 0x55555558f278 *)
rol zmm11_0 zmm11_0 0x1c;
rol zmm11_1 zmm11_1 0x1c;
rol zmm11_2 zmm11_2 0x1c;
rol zmm11_3 zmm11_3 0x1c;
rol zmm11_4 zmm11_4 0x1c;
rol zmm11_5 zmm11_5 0x1c;
rol zmm11_6 zmm11_6 0x1c;
rol zmm11_7 zmm11_7 0x1c;
(* vprolq $0x1,%zmm27,%zmm27                       #! PC = 0x55555558f27f *)
rol zmm27_0 zmm27_0 0x1;
rol zmm27_1 zmm27_1 0x1;
rol zmm27_2 zmm27_2 0x1;
rol zmm27_3 zmm27_3 0x1;
rol zmm27_4 zmm27_4 0x1;
rol zmm27_5 zmm27_5 0x1;
rol zmm27_6 zmm27_6 0x1;
rol zmm27_7 zmm27_7 0x1;
(* vprolq $0x19,%zmm4,%zmm4                        #! PC = 0x55555558f286 *)
rol zmm4_0 zmm4_0 0x19;
rol zmm4_1 zmm4_1 0x19;
rol zmm4_2 zmm4_2 0x19;
rol zmm4_3 zmm4_3 0x19;
rol zmm4_4 zmm4_4 0x19;
rol zmm4_5 zmm4_5 0x19;
rol zmm4_6 zmm4_6 0x19;
rol zmm4_7 zmm4_7 0x19;
(* vprolq $0x8,%zmm3,%zmm3                         #! PC = 0x55555558f28d *)
rol zmm3_0 zmm3_0 0x8;
rol zmm3_1 zmm3_1 0x8;
rol zmm3_2 zmm3_2 0x8;
rol zmm3_3 zmm3_3 0x8;
rol zmm3_4 zmm3_4 0x8;
rol zmm3_5 zmm3_5 0x8;
rol zmm3_6 zmm3_6 0x8;
rol zmm3_7 zmm3_7 0x8;
(* vpxord %zmm8,%zmm18,%zmm9                       #! PC = 0x55555558f294 *)
xor zmm9_0@uint64 zmm18_0 zmm8_0;
xor zmm9_1@uint64 zmm18_1 zmm8_1;
xor zmm9_2@uint64 zmm18_2 zmm8_2;
xor zmm9_3@uint64 zmm18_3 zmm8_3;
xor zmm9_4@uint64 zmm18_4 zmm8_4;
xor zmm9_5@uint64 zmm18_5 zmm8_5;
xor zmm9_6@uint64 zmm18_6 zmm8_6;
xor zmm9_7@uint64 zmm18_7 zmm8_7;
(* vmovdqa64 %zmm16,%zmm2                          #! PC = 0x55555558f29a *)
mov zmm2_0 zmm16_0;
mov zmm2_1 zmm16_1;
mov zmm2_2 zmm16_2;
mov zmm2_3 zmm16_3;
mov zmm2_4 zmm16_4;
mov zmm2_5 zmm16_5;
mov zmm2_6 zmm16_6;
mov zmm2_7 zmm16_7;
(* vmovdqa64 %zmm29,%zmm20                         #! PC = 0x55555558f2a0 *)
mov zmm20_0 zmm29_0;
mov zmm20_1 zmm29_1;
mov zmm20_2 zmm29_2;
mov zmm20_3 zmm29_3;
mov zmm20_4 zmm29_4;
mov zmm20_5 zmm29_5;
mov zmm20_6 zmm29_6;
mov zmm20_7 zmm29_7;
(* vpxord %zmm22,%zmm1,%zmm22                      #! PC = 0x55555558f2a6 *)
xor zmm22_0@uint64 zmm1_0 zmm22_0;
xor zmm22_1@uint64 zmm1_1 zmm22_1;
xor zmm22_2@uint64 zmm1_2 zmm22_2;
xor zmm22_3@uint64 zmm1_3 zmm22_3;
xor zmm22_4@uint64 zmm1_4 zmm22_4;
xor zmm22_5@uint64 zmm1_5 zmm22_5;
xor zmm22_6@uint64 zmm1_6 zmm22_6;
xor zmm22_7@uint64 zmm1_7 zmm22_7;
(* vpternlogq $0xd2,%zmm0,%zmm29,%zmm2             #! PC = 0x55555558f2ac *)
mov table 0xd2@uint8;
inline vpternlogq64 (zmm2_0, zmm29_0, zmm0_0, table);
inline vpternlogq64 (zmm2_1, zmm29_1, zmm0_1, table);
inline vpternlogq64 (zmm2_2, zmm29_2, zmm0_2, table);
inline vpternlogq64 (zmm2_3, zmm29_3, zmm0_3, table);
inline vpternlogq64 (zmm2_4, zmm29_4, zmm0_4, table);
inline vpternlogq64 (zmm2_5, zmm29_5, zmm0_5, table);
inline vpternlogq64 (zmm2_6, zmm29_6, zmm0_6, table);
inline vpternlogq64 (zmm2_7, zmm29_7, zmm0_7, table);
(* vprorq $0x3,%zmm9,%zmm9                         #! PC = 0x55555558f2b3 *)
ror zmm9_0 zmm9_0 0x3;
ror zmm9_1 zmm9_1 0x3;
ror zmm9_2 zmm9_2 0x3;
ror zmm9_3 zmm9_3 0x3;
ror zmm9_4 zmm9_4 0x3;
ror zmm9_5 zmm9_5 0x3;
ror zmm9_6 zmm9_6 0x3;
ror zmm9_7 zmm9_7 0x3;
(* vprolq $0x12,%zmm22,%zmm22                      #! PC = 0x55555558f2ba *)
rol zmm22_0 zmm22_0 0x12;
rol zmm22_1 zmm22_1 0x12;
rol zmm22_2 zmm22_2 0x12;
rol zmm22_3 zmm22_3 0x12;
rol zmm22_4 zmm22_4 0x12;
rol zmm22_5 zmm22_5 0x12;
rol zmm22_6 zmm22_6 0x12;
rol zmm22_7 zmm22_7 0x12;
(* vpternlogq $0xd2,%zmm24,%zmm0,%zmm20            #! PC = 0x55555558f2c1 *)
mov table 0xd2@uint8;
inline vpternlogq64 (zmm20_0, zmm0_0, zmm24_0, table);
inline vpternlogq64 (zmm20_1, zmm0_1, zmm24_1, table);
inline vpternlogq64 (zmm20_2, zmm0_2, zmm24_2, table);
inline vpternlogq64 (zmm20_3, zmm0_3, zmm24_3, table);
inline vpternlogq64 (zmm20_4, zmm0_4, zmm24_4, table);
inline vpternlogq64 (zmm20_5, zmm0_5, zmm24_5, table);
inline vpternlogq64 (zmm20_6, zmm0_6, zmm24_6, table);
inline vpternlogq64 (zmm20_7, zmm0_7, zmm24_7, table);
(* vpternlogq $0xd2,%zmm30,%zmm24,%zmm0            #! PC = 0x55555558f2c8 *)
mov table 0xd2@uint8;
inline vpternlogq64 (zmm0_0, zmm24_0, zmm30_0, table);
inline vpternlogq64 (zmm0_1, zmm24_1, zmm30_1, table);
inline vpternlogq64 (zmm0_2, zmm24_2, zmm30_2, table);
inline vpternlogq64 (zmm0_3, zmm24_3, zmm30_3, table);
inline vpternlogq64 (zmm0_4, zmm24_4, zmm30_4, table);
inline vpternlogq64 (zmm0_5, zmm24_5, zmm30_5, table);
inline vpternlogq64 (zmm0_6, zmm24_6, zmm30_6, table);
inline vpternlogq64 (zmm0_7, zmm24_7, zmm30_7, table);
(* vmovdqa64 %zmm0,0x148(%rsp)                     #! EA = L0x7fffffffd600; PC = 0x55555558f2cf *)
mov L0x7fffffffd600 zmm0_0;
mov L0x7fffffffd608 zmm0_1;
mov L0x7fffffffd610 zmm0_2;
mov L0x7fffffffd618 zmm0_3;
mov L0x7fffffffd620 zmm0_4;
mov L0x7fffffffd628 zmm0_5;
mov L0x7fffffffd630 zmm0_6;
mov L0x7fffffffd638 zmm0_7;
(* vpbroadcastq %r15,%zmm0                         #! PC = 0x55555558f2da *)
mov zmm0_0 r15;
mov zmm0_1 r15;
mov zmm0_2 r15;
mov zmm0_3 r15;
mov zmm0_4 r15;
mov zmm0_5 r15;
mov zmm0_6 r15;
mov zmm0_7 r15;
(* vpxord %zmm2,%zmm0,%zmm15                       #! PC = 0x55555558f2e0 *)
xor zmm15_0@uint64 zmm0_0 zmm2_0;
xor zmm15_1@uint64 zmm0_1 zmm2_1;
xor zmm15_2@uint64 zmm0_2 zmm2_2;
xor zmm15_3@uint64 zmm0_3 zmm2_3;
xor zmm15_4@uint64 zmm0_4 zmm2_4;
xor zmm15_5@uint64 zmm0_5 zmm2_5;
xor zmm15_6@uint64 zmm0_6 zmm2_6;
xor zmm15_7@uint64 zmm0_7 zmm2_7;
(* vmovdqa64 %zmm13,%zmm2                          #! PC = 0x55555558f2e6 *)
mov zmm2_0 zmm13_0;
mov zmm2_1 zmm13_1;
mov zmm2_2 zmm13_2;
mov zmm2_3 zmm13_3;
mov zmm2_4 zmm13_4;
mov zmm2_5 zmm13_5;
mov zmm2_6 zmm13_6;
mov zmm2_7 zmm13_7;
(* vpternlogq $0xd2,%zmm17,%zmm31,%zmm2            #! PC = 0x55555558f2ec *)
mov table 0xd2@uint8;
inline vpternlogq64 (zmm2_0, zmm31_0, zmm17_0, table);
inline vpternlogq64 (zmm2_1, zmm31_1, zmm17_1, table);
inline vpternlogq64 (zmm2_2, zmm31_2, zmm17_2, table);
inline vpternlogq64 (zmm2_3, zmm31_3, zmm17_3, table);
inline vpternlogq64 (zmm2_4, zmm31_4, zmm17_4, table);
inline vpternlogq64 (zmm2_5, zmm31_5, zmm17_5, table);
inline vpternlogq64 (zmm2_6, zmm31_6, zmm17_6, table);
inline vpternlogq64 (zmm2_7, zmm31_7, zmm17_7, table);
(* vmovdqa64 %zmm2,%zmm25                          #! PC = 0x55555558f2f3 *)
mov zmm25_0 zmm2_0;
mov zmm25_1 zmm2_1;
mov zmm25_2 zmm2_2;
mov zmm25_3 zmm2_3;
mov zmm25_4 zmm2_4;
mov zmm25_5 zmm2_5;
mov zmm25_6 zmm2_6;
mov zmm25_7 zmm2_7;
(* vmovdqa64 %zmm7,%zmm2                           #! PC = 0x55555558f2f9 *)
mov zmm2_0 zmm7_0;
mov zmm2_1 zmm7_1;
mov zmm2_2 zmm7_2;
mov zmm2_3 zmm7_3;
mov zmm2_4 zmm7_4;
mov zmm2_5 zmm7_5;
mov zmm2_6 zmm7_6;
mov zmm2_7 zmm7_7;
(* vpternlogq $0xd2,%zmm3,%zmm4,%zmm2              #! PC = 0x55555558f2ff *)
mov table 0xd2@uint8;
inline vpternlogq64 (zmm2_0, zmm4_0, zmm3_0, table);
inline vpternlogq64 (zmm2_1, zmm4_1, zmm3_1, table);
inline vpternlogq64 (zmm2_2, zmm4_2, zmm3_2, table);
inline vpternlogq64 (zmm2_3, zmm4_3, zmm3_3, table);
inline vpternlogq64 (zmm2_4, zmm4_4, zmm3_4, table);
inline vpternlogq64 (zmm2_5, zmm4_5, zmm3_5, table);
inline vpternlogq64 (zmm2_6, zmm4_6, zmm3_6, table);
inline vpternlogq64 (zmm2_7, zmm4_7, zmm3_7, table);
(* vmovdqa64 %zmm11,%zmm23                         #! PC = 0x55555558f306 *)
mov zmm23_0 zmm11_0;
mov zmm23_1 zmm11_1;
mov zmm23_2 zmm11_2;
mov zmm23_3 zmm11_3;
mov zmm23_4 zmm11_4;
mov zmm23_5 zmm11_5;
mov zmm23_6 zmm11_6;
mov zmm23_7 zmm11_7;
(* vmovdqa64 %zmm27,%zmm8                          #! PC = 0x55555558f30c *)
mov zmm8_0 zmm27_0;
mov zmm8_1 zmm27_1;
mov zmm8_2 zmm27_2;
mov zmm8_3 zmm27_3;
mov zmm8_4 zmm27_4;
mov zmm8_5 zmm27_5;
mov zmm8_6 zmm27_6;
mov zmm8_7 zmm27_7;
(* vmovdqa64 %zmm26,-0x78(%rsp)                    #! EA = L0x7fffffffd440; PC = 0x55555558f312 *)
mov L0x7fffffffd440 zmm26_0;
mov L0x7fffffffd448 zmm26_1;
mov L0x7fffffffd450 zmm26_2;
mov L0x7fffffffd458 zmm26_3;
mov L0x7fffffffd460 zmm26_4;
mov L0x7fffffffd468 zmm26_5;
mov L0x7fffffffd470 zmm26_6;
mov L0x7fffffffd478 zmm26_7;
(* vpternlogq $0xd2,%zmm31,%zmm13,%zmm23           #! PC = 0x55555558f31d *)
mov table 0xd2@uint8;
inline vpternlogq64 (zmm23_0, zmm13_0, zmm31_0, table);
inline vpternlogq64 (zmm23_1, zmm13_1, zmm31_1, table);
inline vpternlogq64 (zmm23_2, zmm13_2, zmm31_2, table);
inline vpternlogq64 (zmm23_3, zmm13_3, zmm31_3, table);
inline vpternlogq64 (zmm23_4, zmm13_4, zmm31_4, table);
inline vpternlogq64 (zmm23_5, zmm13_5, zmm31_5, table);
inline vpternlogq64 (zmm23_6, zmm13_6, zmm31_6, table);
inline vpternlogq64 (zmm23_7, zmm13_7, zmm31_7, table);
(* vpternlogq $0xd2,%zmm4,%zmm7,%zmm8              #! PC = 0x55555558f324 *)
mov table 0xd2@uint8;
inline vpternlogq64 (zmm8_0, zmm7_0, zmm4_0, table);
inline vpternlogq64 (zmm8_1, zmm7_1, zmm4_1, table);
inline vpternlogq64 (zmm8_2, zmm7_2, zmm4_2, table);
inline vpternlogq64 (zmm8_3, zmm7_3, zmm4_3, table);
inline vpternlogq64 (zmm8_4, zmm7_4, zmm4_4, table);
inline vpternlogq64 (zmm8_5, zmm7_5, zmm4_5, table);
inline vpternlogq64 (zmm8_6, zmm7_6, zmm4_6, table);
inline vpternlogq64 (zmm8_7, zmm7_7, zmm4_7, table);
(* vpternlogq $0xd2,%zmm9,%zmm17,%zmm31            #! PC = 0x55555558f32b *)
mov table 0xd2@uint8;
inline vpternlogq64 (zmm31_0, zmm17_0, zmm9_0, table);
inline vpternlogq64 (zmm31_1, zmm17_1, zmm9_1, table);
inline vpternlogq64 (zmm31_2, zmm17_2, zmm9_2, table);
inline vpternlogq64 (zmm31_3, zmm17_3, zmm9_3, table);
inline vpternlogq64 (zmm31_4, zmm17_4, zmm9_4, table);
inline vpternlogq64 (zmm31_5, zmm17_5, zmm9_5, table);
inline vpternlogq64 (zmm31_6, zmm17_6, zmm9_6, table);
inline vpternlogq64 (zmm31_7, zmm17_7, zmm9_7, table);
(* vpternlogq $0xd2,%zmm22,%zmm3,%zmm4             #! PC = 0x55555558f332 *)
mov table 0xd2@uint8;
inline vpternlogq64 (zmm4_0, zmm3_0, zmm22_0, table);
inline vpternlogq64 (zmm4_1, zmm3_1, zmm22_1, table);
inline vpternlogq64 (zmm4_2, zmm3_2, zmm22_2, table);
inline vpternlogq64 (zmm4_3, zmm3_3, zmm22_3, table);
inline vpternlogq64 (zmm4_4, zmm3_4, zmm22_4, table);
inline vpternlogq64 (zmm4_5, zmm3_5, zmm22_5, table);
inline vpternlogq64 (zmm4_6, zmm3_6, zmm22_6, table);
inline vpternlogq64 (zmm4_7, zmm3_7, zmm22_7, table);
(* vpternlogq $0xd2,%zmm11,%zmm9,%zmm17            #! PC = 0x55555558f339 *)
mov table 0xd2@uint8;
inline vpternlogq64 (zmm17_0, zmm9_0, zmm11_0, table);
inline vpternlogq64 (zmm17_1, zmm9_1, zmm11_1, table);
inline vpternlogq64 (zmm17_2, zmm9_2, zmm11_2, table);
inline vpternlogq64 (zmm17_3, zmm9_3, zmm11_3, table);
inline vpternlogq64 (zmm17_4, zmm9_4, zmm11_4, table);
inline vpternlogq64 (zmm17_5, zmm9_5, zmm11_5, table);
inline vpternlogq64 (zmm17_6, zmm9_6, zmm11_6, table);
inline vpternlogq64 (zmm17_7, zmm9_7, zmm11_7, table);
(* vpternlogq $0xd2,%zmm27,%zmm22,%zmm3            #! PC = 0x55555558f340 *)
mov table 0xd2@uint8;
inline vpternlogq64 (zmm3_0, zmm22_0, zmm27_0, table);
inline vpternlogq64 (zmm3_1, zmm22_1, zmm27_1, table);
inline vpternlogq64 (zmm3_2, zmm22_2, zmm27_2, table);
inline vpternlogq64 (zmm3_3, zmm22_3, zmm27_3, table);
inline vpternlogq64 (zmm3_4, zmm22_4, zmm27_4, table);
inline vpternlogq64 (zmm3_5, zmm22_5, zmm27_5, table);
inline vpternlogq64 (zmm3_6, zmm22_6, zmm27_6, table);
inline vpternlogq64 (zmm3_7, zmm22_7, zmm27_7, table);
(* vpternlogq $0xd2,%zmm13,%zmm11,%zmm9            #! PC = 0x55555558f347 *)
mov table 0xd2@uint8;
inline vpternlogq64 (zmm9_0, zmm11_0, zmm13_0, table);
inline vpternlogq64 (zmm9_1, zmm11_1, zmm13_1, table);
inline vpternlogq64 (zmm9_2, zmm11_2, zmm13_2, table);
inline vpternlogq64 (zmm9_3, zmm11_3, zmm13_3, table);
inline vpternlogq64 (zmm9_4, zmm11_4, zmm13_4, table);
inline vpternlogq64 (zmm9_5, zmm11_5, zmm13_5, table);
inline vpternlogq64 (zmm9_6, zmm11_6, zmm13_6, table);
inline vpternlogq64 (zmm9_7, zmm11_7, zmm13_7, table);
(* vpternlogq $0xd2,%zmm7,%zmm27,%zmm22            #! PC = 0x55555558f34e *)
mov table 0xd2@uint8;
inline vpternlogq64 (zmm22_0, zmm27_0, zmm7_0, table);
inline vpternlogq64 (zmm22_1, zmm27_1, zmm7_1, table);
inline vpternlogq64 (zmm22_2, zmm27_2, zmm7_2, table);
inline vpternlogq64 (zmm22_3, zmm27_3, zmm7_3, table);
inline vpternlogq64 (zmm22_4, zmm27_4, zmm7_4, table);
inline vpternlogq64 (zmm22_5, zmm27_5, zmm7_5, table);
inline vpternlogq64 (zmm22_6, zmm27_6, zmm7_6, table);
inline vpternlogq64 (zmm22_7, zmm27_7, zmm7_7, table);
(* vpxord 0x48(%rsp),%zmm10,%zmm11                 #! EA = L0x7fffffffd500; Value = 0xef8ce13ae00a3d03; PC = 0x55555558f355 *)
xor zmm11_0@uint64 zmm10_0 L0x7fffffffd500;
xor zmm11_1@uint64 zmm10_1 L0x7fffffffd508;
xor zmm11_2@uint64 zmm10_2 L0x7fffffffd510;
xor zmm11_3@uint64 zmm10_3 L0x7fffffffd518;
xor zmm11_4@uint64 zmm10_4 L0x7fffffffd520;
xor zmm11_5@uint64 zmm10_5 L0x7fffffffd528;
xor zmm11_6@uint64 zmm10_6 L0x7fffffffd530;
xor zmm11_7@uint64 zmm10_7 L0x7fffffffd538;
(* vpxord %zmm14,%zmm18,%zmm7                      #! PC = 0x55555558f360 *)
xor zmm7_0@uint64 zmm18_0 zmm14_0;
xor zmm7_1@uint64 zmm18_1 zmm14_1;
xor zmm7_2@uint64 zmm18_2 zmm14_2;
xor zmm7_3@uint64 zmm18_3 zmm14_3;
xor zmm7_4@uint64 zmm18_4 zmm14_4;
xor zmm7_5@uint64 zmm18_5 zmm14_5;
xor zmm7_6@uint64 zmm18_6 zmm14_6;
xor zmm7_7@uint64 zmm18_7 zmm14_7;
(* vmovdqa64 %zmm2,0x108(%rsp)                     #! EA = L0x7fffffffd5c0; PC = 0x55555558f366 *)
mov L0x7fffffffd5c0 zmm2_0;
mov L0x7fffffffd5c8 zmm2_1;
mov L0x7fffffffd5d0 zmm2_2;
mov L0x7fffffffd5d8 zmm2_3;
mov L0x7fffffffd5e0 zmm2_4;
mov L0x7fffffffd5e8 zmm2_5;
mov L0x7fffffffd5f0 zmm2_6;
mov L0x7fffffffd5f8 zmm2_7;
(* vpxord 0x88(%rsp),%zmm18,%zmm18                 #! EA = L0x7fffffffd540; Value = 0xfb29006f5291cc1e; PC = 0x55555558f371 *)
xor zmm18_0@uint64 zmm18_0 L0x7fffffffd540;
xor zmm18_1@uint64 zmm18_1 L0x7fffffffd548;
xor zmm18_2@uint64 zmm18_2 L0x7fffffffd550;
xor zmm18_3@uint64 zmm18_3 L0x7fffffffd558;
xor zmm18_4@uint64 zmm18_4 L0x7fffffffd560;
xor zmm18_5@uint64 zmm18_5 L0x7fffffffd568;
xor zmm18_6@uint64 zmm18_6 L0x7fffffffd570;
xor zmm18_7@uint64 zmm18_7 L0x7fffffffd578;
(* vpxord %zmm21,%zmm19,%zmm2                      #! PC = 0x55555558f37c *)
xor zmm2_0@uint64 zmm19_0 zmm21_0;
xor zmm2_1@uint64 zmm19_1 zmm21_1;
xor zmm2_2@uint64 zmm19_2 zmm21_2;
xor zmm2_3@uint64 zmm19_3 zmm21_3;
xor zmm2_4@uint64 zmm19_4 zmm21_4;
xor zmm2_5@uint64 zmm19_5 zmm21_5;
xor zmm2_6@uint64 zmm19_6 zmm21_6;
xor zmm2_7@uint64 zmm19_7 zmm21_7;
(* vpxord 0x8(%rsp),%zmm19,%zmm19                  #! EA = L0x7fffffffd4c0; Value = 0xd1ebb5395876c3a9; PC = 0x55555558f382 *)
xor zmm19_0@uint64 zmm19_0 L0x7fffffffd4c0;
xor zmm19_1@uint64 zmm19_1 L0x7fffffffd4c8;
xor zmm19_2@uint64 zmm19_2 L0x7fffffffd4d0;
xor zmm19_3@uint64 zmm19_3 L0x7fffffffd4d8;
xor zmm19_4@uint64 zmm19_4 L0x7fffffffd4e0;
xor zmm19_5@uint64 zmm19_5 L0x7fffffffd4e8;
xor zmm19_6@uint64 zmm19_6 L0x7fffffffd4f0;
xor zmm19_7@uint64 zmm19_7 L0x7fffffffd4f8;
(* vpxord %zmm5,%zmm1,%zmm5                        #! PC = 0x55555558f38d *)
xor zmm5_0@uint64 zmm1_0 zmm5_0;
xor zmm5_1@uint64 zmm1_1 zmm5_1;
xor zmm5_2@uint64 zmm1_2 zmm5_2;
xor zmm5_3@uint64 zmm1_3 zmm5_3;
xor zmm5_4@uint64 zmm1_4 zmm5_4;
xor zmm5_5@uint64 zmm1_5 zmm5_5;
xor zmm5_6@uint64 zmm1_6 zmm5_6;
xor zmm5_7@uint64 zmm1_7 zmm5_7;
(* vpxord -0x38(%rsp),%zmm10,%zmm13                #! EA = L0x7fffffffd480; Value = 0x37d65f56d9663e0f; PC = 0x55555558f393 *)
xor zmm13_0@uint64 zmm10_0 L0x7fffffffd480;
xor zmm13_1@uint64 zmm10_1 L0x7fffffffd488;
xor zmm13_2@uint64 zmm10_2 L0x7fffffffd490;
xor zmm13_3@uint64 zmm10_3 L0x7fffffffd498;
xor zmm13_4@uint64 zmm10_4 L0x7fffffffd4a0;
xor zmm13_5@uint64 zmm10_5 L0x7fffffffd4a8;
xor zmm13_6@uint64 zmm10_6 L0x7fffffffd4b0;
xor zmm13_7@uint64 zmm10_7 L0x7fffffffd4b8;
(* vpxord -0x78(%rsp),%zmm1,%zmm1                  #! EA = L0x7fffffffd440; Value = 0xc953f73d1f76af55; PC = 0x55555558f39e *)
xor zmm1_0@uint64 zmm1_0 L0x7fffffffd440;
xor zmm1_1@uint64 zmm1_1 L0x7fffffffd448;
xor zmm1_2@uint64 zmm1_2 L0x7fffffffd450;
xor zmm1_3@uint64 zmm1_3 L0x7fffffffd458;
xor zmm1_4@uint64 zmm1_4 L0x7fffffffd460;
xor zmm1_5@uint64 zmm1_5 L0x7fffffffd468;
xor zmm1_6@uint64 zmm1_6 L0x7fffffffd470;
xor zmm1_7@uint64 zmm1_7 L0x7fffffffd478;
(* vprorq $0x1c,%zmm5,%zmm0                        #! PC = 0x55555558f3a9 *)
ror zmm0_0 zmm5_0 0x1c;
ror zmm0_1 zmm5_1 0x1c;
ror zmm0_2 zmm5_2 0x1c;
ror zmm0_3 zmm5_3 0x1c;
ror zmm0_4 zmm5_4 0x1c;
ror zmm0_5 zmm5_5 0x1c;
ror zmm0_6 zmm5_6 0x1c;
ror zmm0_7 zmm5_7 0x1c;
(* vprolq $0x1b,%zmm11,%zmm11                      #! PC = 0x55555558f3b0 *)
rol zmm11_0 zmm11_0 0x1b;
rol zmm11_1 zmm11_1 0x1b;
rol zmm11_2 zmm11_2 0x1b;
rol zmm11_3 zmm11_3 0x1b;
rol zmm11_4 zmm11_4 0x1b;
rol zmm11_5 zmm11_5 0x1b;
rol zmm11_6 zmm11_6 0x1b;
rol zmm11_7 zmm11_7 0x1b;
(* vprorq $0x2,%zmm18,%zmm18                       #! PC = 0x55555558f3b7 *)
ror zmm18_0 zmm18_0 0x2;
ror zmm18_1 zmm18_1 0x2;
ror zmm18_2 zmm18_2 0x2;
ror zmm18_3 zmm18_3 0x2;
ror zmm18_4 zmm18_4 0x2;
ror zmm18_5 zmm18_5 0x2;
ror zmm18_6 zmm18_6 0x2;
ror zmm18_7 zmm18_7 0x2;
(* vprorq $0x9,%zmm19,%zmm19                       #! PC = 0x55555558f3be *)
ror zmm19_0 zmm19_0 0x9;
ror zmm19_1 zmm19_1 0x9;
ror zmm19_2 zmm19_2 0x9;
ror zmm19_3 zmm19_3 0x9;
ror zmm19_4 zmm19_4 0x9;
ror zmm19_5 zmm19_5 0x9;
ror zmm19_6 zmm19_6 0x9;
ror zmm19_7 zmm19_7 0x9;
(* vpxord %zmm6,%zmm12,%zmm6                       #! PC = 0x55555558f3c5 *)
xor zmm6_0@uint64 zmm12_0 zmm6_0;
xor zmm6_1@uint64 zmm12_1 zmm6_1;
xor zmm6_2@uint64 zmm12_2 zmm6_2;
xor zmm6_3@uint64 zmm12_3 zmm6_3;
xor zmm6_4@uint64 zmm12_4 zmm6_4;
xor zmm6_5@uint64 zmm12_5 zmm6_5;
xor zmm6_6@uint64 zmm12_6 zmm6_6;
xor zmm6_7@uint64 zmm12_7 zmm6_7;
(* vpxord %zmm28,%zmm12,%zmm14                     #! PC = 0x55555558f3cb *)
xor zmm14_0@uint64 zmm12_0 zmm28_0;
xor zmm14_1@uint64 zmm12_1 zmm28_1;
xor zmm14_2@uint64 zmm12_2 zmm28_2;
xor zmm14_3@uint64 zmm12_3 zmm28_3;
xor zmm14_4@uint64 zmm12_4 zmm28_4;
xor zmm14_5@uint64 zmm12_5 zmm28_5;
xor zmm14_6@uint64 zmm12_6 zmm28_6;
xor zmm14_7@uint64 zmm12_7 zmm28_7;
(* vprolq $0xa,%zmm6,%zmm6                         #! PC = 0x55555558f3d1 *)
rol zmm6_0 zmm6_0 0xa;
rol zmm6_1 zmm6_1 0xa;
rol zmm6_2 zmm6_2 0xa;
rol zmm6_3 zmm6_3 0xa;
rol zmm6_4 zmm6_4 0xa;
rol zmm6_5 zmm6_5 0xa;
rol zmm6_6 zmm6_6 0xa;
rol zmm6_7 zmm6_7 0xa;
(* vprolq $0xf,%zmm7,%zmm7                         #! PC = 0x55555558f3d8 *)
rol zmm7_0 zmm7_0 0xf;
rol zmm7_1 zmm7_1 0xf;
rol zmm7_2 zmm7_2 0xf;
rol zmm7_3 zmm7_3 0xf;
rol zmm7_4 zmm7_4 0xf;
rol zmm7_5 zmm7_5 0xf;
rol zmm7_6 zmm7_6 0xf;
rol zmm7_7 zmm7_7 0xf;
(* vprorq $0x8,%zmm2,%zmm2                         #! PC = 0x55555558f3df *)
ror zmm2_0 zmm2_0 0x8;
ror zmm2_1 zmm2_1 0x8;
ror zmm2_2 zmm2_2 0x8;
ror zmm2_3 zmm2_3 0x8;
ror zmm2_4 zmm2_4 0x8;
ror zmm2_5 zmm2_5 0x8;
ror zmm2_6 zmm2_6 0x8;
ror zmm2_7 zmm2_7 0x8;
(* vprorq $0x17,%zmm1,%zmm1                        #! PC = 0x55555558f3e6 *)
ror zmm1_0 zmm1_0 0x17;
ror zmm1_1 zmm1_1 0x17;
ror zmm1_2 zmm1_2 0x17;
ror zmm1_3 zmm1_3 0x17;
ror zmm1_4 zmm1_4 0x17;
ror zmm1_5 zmm1_5 0x17;
ror zmm1_6 zmm1_6 0x17;
ror zmm1_7 zmm1_7 0x17;
(* vprolq $0x2,%zmm14,%zmm14                       #! PC = 0x55555558f3ed *)
rol zmm14_0 zmm14_0 0x2;
rol zmm14_1 zmm14_1 0x2;
rol zmm14_2 zmm14_2 0x2;
rol zmm14_3 zmm14_3 0x2;
rol zmm14_4 zmm14_4 0x2;
rol zmm14_5 zmm14_5 0x2;
rol zmm14_6 zmm14_6 0x2;
rol zmm14_7 zmm14_7 0x2;
(* vprorq $0x19,%zmm13,%zmm13                      #! PC = 0x55555558f3f4 *)
ror zmm13_0 zmm13_0 0x19;
ror zmm13_1 zmm13_1 0x19;
ror zmm13_2 zmm13_2 0x19;
ror zmm13_3 zmm13_3 0x19;
ror zmm13_4 zmm13_4 0x19;
ror zmm13_5 zmm13_5 0x19;
ror zmm13_6 zmm13_6 0x19;
ror zmm13_7 zmm13_7 0x19;
(* vpternlogq $0xd2,%zmm16,%zmm30,%zmm24           #! PC = 0x55555558f3fb *)
mov table 0xd2@uint8;
inline vpternlogq64 (zmm24_0, zmm30_0, zmm16_0, table);
inline vpternlogq64 (zmm24_1, zmm30_1, zmm16_1, table);
inline vpternlogq64 (zmm24_2, zmm30_2, zmm16_2, table);
inline vpternlogq64 (zmm24_3, zmm30_3, zmm16_3, table);
inline vpternlogq64 (zmm24_4, zmm30_4, zmm16_4, table);
inline vpternlogq64 (zmm24_5, zmm30_5, zmm16_5, table);
inline vpternlogq64 (zmm24_6, zmm30_6, zmm16_6, table);
inline vpternlogq64 (zmm24_7, zmm30_7, zmm16_7, table);
(* vmovdqa64 %zmm11,%zmm5                          #! PC = 0x55555558f402 *)
mov zmm5_0 zmm11_0;
mov zmm5_1 zmm11_1;
mov zmm5_2 zmm11_2;
mov zmm5_3 zmm11_3;
mov zmm5_4 zmm11_4;
mov zmm5_5 zmm11_5;
mov zmm5_6 zmm11_6;
mov zmm5_7 zmm11_7;
(* vpternlogq $0xd2,%zmm29,%zmm16,%zmm30           #! PC = 0x55555558f408 *)
mov table 0xd2@uint8;
inline vpternlogq64 (zmm30_0, zmm16_0, zmm29_0, table);
inline vpternlogq64 (zmm30_1, zmm16_1, zmm29_1, table);
inline vpternlogq64 (zmm30_2, zmm16_2, zmm29_2, table);
inline vpternlogq64 (zmm30_3, zmm16_3, zmm29_3, table);
inline vpternlogq64 (zmm30_4, zmm16_4, zmm29_4, table);
inline vpternlogq64 (zmm30_5, zmm16_5, zmm29_5, table);
inline vpternlogq64 (zmm30_6, zmm16_6, zmm29_6, table);
inline vpternlogq64 (zmm30_7, zmm16_7, zmm29_7, table);
(* vmovdqa64 %zmm0,%zmm27                          #! PC = 0x55555558f40f *)
mov zmm27_0 zmm0_0;
mov zmm27_1 zmm0_1;
mov zmm27_2 zmm0_2;
mov zmm27_3 zmm0_3;
mov zmm27_4 zmm0_4;
mov zmm27_5 zmm0_5;
mov zmm27_6 zmm0_6;
mov zmm27_7 zmm0_7;
(* vmovdqa64 %zmm18,%zmm16                         #! PC = 0x55555558f415 *)
mov zmm16_0 zmm18_0;
mov zmm16_1 zmm18_1;
mov zmm16_2 zmm18_2;
mov zmm16_3 zmm18_3;
mov zmm16_4 zmm18_4;
mov zmm16_5 zmm18_5;
mov zmm16_6 zmm18_6;
mov zmm16_7 zmm18_7;
(* vmovdqa64 %zmm19,%zmm29                         #! PC = 0x55555558f41b *)
mov zmm29_0 zmm19_0;
mov zmm29_1 zmm19_1;
mov zmm29_2 zmm19_2;
mov zmm29_3 zmm19_3;
mov zmm29_4 zmm19_4;
mov zmm29_5 zmm19_5;
mov zmm29_6 zmm19_6;
mov zmm29_7 zmm19_7;
(* vpternlogq $0xd2,%zmm7,%zmm6,%zmm27             #! PC = 0x55555558f421 *)
mov table 0xd2@uint8;
inline vpternlogq64 (zmm27_0, zmm6_0, zmm7_0, table);
inline vpternlogq64 (zmm27_1, zmm6_1, zmm7_1, table);
inline vpternlogq64 (zmm27_2, zmm6_2, zmm7_2, table);
inline vpternlogq64 (zmm27_3, zmm6_3, zmm7_3, table);
inline vpternlogq64 (zmm27_4, zmm6_4, zmm7_4, table);
inline vpternlogq64 (zmm27_5, zmm6_5, zmm7_5, table);
inline vpternlogq64 (zmm27_6, zmm6_6, zmm7_6, table);
inline vpternlogq64 (zmm27_7, zmm6_7, zmm7_7, table);
(* vpternlogq $0xd2,%zmm1,%zmm13,%zmm29            #! PC = 0x55555558f428 *)
mov table 0xd2@uint8;
inline vpternlogq64 (zmm29_0, zmm13_0, zmm1_0, table);
inline vpternlogq64 (zmm29_1, zmm13_1, zmm1_1, table);
inline vpternlogq64 (zmm29_2, zmm13_2, zmm1_2, table);
inline vpternlogq64 (zmm29_3, zmm13_3, zmm1_3, table);
inline vpternlogq64 (zmm29_4, zmm13_4, zmm1_4, table);
inline vpternlogq64 (zmm29_5, zmm13_5, zmm1_5, table);
inline vpternlogq64 (zmm29_6, zmm13_6, zmm1_6, table);
inline vpternlogq64 (zmm29_7, zmm13_7, zmm1_7, table);
(* vpternlogq $0xd2,%zmm6,%zmm0,%zmm5              #! PC = 0x55555558f42f *)
mov table 0xd2@uint8;
inline vpternlogq64 (zmm5_0, zmm0_0, zmm6_0, table);
inline vpternlogq64 (zmm5_1, zmm0_1, zmm6_1, table);
inline vpternlogq64 (zmm5_2, zmm0_2, zmm6_2, table);
inline vpternlogq64 (zmm5_3, zmm0_3, zmm6_3, table);
inline vpternlogq64 (zmm5_4, zmm0_4, zmm6_4, table);
inline vpternlogq64 (zmm5_5, zmm0_5, zmm6_5, table);
inline vpternlogq64 (zmm5_6, zmm0_6, zmm6_6, table);
inline vpternlogq64 (zmm5_7, zmm0_7, zmm6_7, table);
(* vpternlogq $0xd2,%zmm13,%zmm19,%zmm16           #! PC = 0x55555558f436 *)
mov table 0xd2@uint8;
inline vpternlogq64 (zmm16_0, zmm19_0, zmm13_0, table);
inline vpternlogq64 (zmm16_1, zmm19_1, zmm13_1, table);
inline vpternlogq64 (zmm16_2, zmm19_2, zmm13_2, table);
inline vpternlogq64 (zmm16_3, zmm19_3, zmm13_3, table);
inline vpternlogq64 (zmm16_4, zmm19_4, zmm13_4, table);
inline vpternlogq64 (zmm16_5, zmm19_5, zmm13_5, table);
inline vpternlogq64 (zmm16_6, zmm19_6, zmm13_6, table);
inline vpternlogq64 (zmm16_7, zmm19_7, zmm13_7, table);
(* vpternlogq $0xd2,%zmm2,%zmm7,%zmm6              #! PC = 0x55555558f43d *)
mov table 0xd2@uint8;
inline vpternlogq64 (zmm6_0, zmm7_0, zmm2_0, table);
inline vpternlogq64 (zmm6_1, zmm7_1, zmm2_1, table);
inline vpternlogq64 (zmm6_2, zmm7_2, zmm2_2, table);
inline vpternlogq64 (zmm6_3, zmm7_3, zmm2_3, table);
inline vpternlogq64 (zmm6_4, zmm7_4, zmm2_4, table);
inline vpternlogq64 (zmm6_5, zmm7_5, zmm2_5, table);
inline vpternlogq64 (zmm6_6, zmm7_6, zmm2_6, table);
inline vpternlogq64 (zmm6_7, zmm7_7, zmm2_7, table);
(* vpternlogq $0xd2,%zmm14,%zmm1,%zmm13            #! PC = 0x55555558f444 *)
mov table 0xd2@uint8;
inline vpternlogq64 (zmm13_0, zmm1_0, zmm14_0, table);
inline vpternlogq64 (zmm13_1, zmm1_1, zmm14_1, table);
inline vpternlogq64 (zmm13_2, zmm1_2, zmm14_2, table);
inline vpternlogq64 (zmm13_3, zmm1_3, zmm14_3, table);
inline vpternlogq64 (zmm13_4, zmm1_4, zmm14_4, table);
inline vpternlogq64 (zmm13_5, zmm1_5, zmm14_5, table);
inline vpternlogq64 (zmm13_6, zmm1_6, zmm14_6, table);
inline vpternlogq64 (zmm13_7, zmm1_7, zmm14_7, table);
(* vpternlogq $0xd2,%zmm11,%zmm2,%zmm7             #! PC = 0x55555558f44b *)
mov table 0xd2@uint8;
inline vpternlogq64 (zmm7_0, zmm2_0, zmm11_0, table);
inline vpternlogq64 (zmm7_1, zmm2_1, zmm11_1, table);
inline vpternlogq64 (zmm7_2, zmm2_2, zmm11_2, table);
inline vpternlogq64 (zmm7_3, zmm2_3, zmm11_3, table);
inline vpternlogq64 (zmm7_4, zmm2_4, zmm11_4, table);
inline vpternlogq64 (zmm7_5, zmm2_5, zmm11_5, table);
inline vpternlogq64 (zmm7_6, zmm2_6, zmm11_6, table);
inline vpternlogq64 (zmm7_7, zmm2_7, zmm11_7, table);
(* vpternlogq $0xd2,%zmm18,%zmm14,%zmm1            #! PC = 0x55555558f452 *)
mov table 0xd2@uint8;
inline vpternlogq64 (zmm1_0, zmm14_0, zmm18_0, table);
inline vpternlogq64 (zmm1_1, zmm14_1, zmm18_1, table);
inline vpternlogq64 (zmm1_2, zmm14_2, zmm18_2, table);
inline vpternlogq64 (zmm1_3, zmm14_3, zmm18_3, table);
inline vpternlogq64 (zmm1_4, zmm14_4, zmm18_4, table);
inline vpternlogq64 (zmm1_5, zmm14_5, zmm18_5, table);
inline vpternlogq64 (zmm1_6, zmm14_6, zmm18_6, table);
inline vpternlogq64 (zmm1_7, zmm14_7, zmm18_7, table);
(* vmovdqa64 %zmm20,0xc8(%rsp)                     #! EA = L0x7fffffffd580; PC = 0x55555558f459 *)
mov L0x7fffffffd580 zmm20_0;
mov L0x7fffffffd588 zmm20_1;
mov L0x7fffffffd590 zmm20_2;
mov L0x7fffffffd598 zmm20_3;
mov L0x7fffffffd5a0 zmm20_4;
mov L0x7fffffffd5a8 zmm20_5;
mov L0x7fffffffd5b0 zmm20_6;
mov L0x7fffffffd5b8 zmm20_7;
(* vmovdqa64 %zmm15,%zmm26                         #! PC = 0x55555558f464 *)
mov zmm26_0 zmm15_0;
mov zmm26_1 zmm15_1;
mov zmm26_2 zmm15_2;
mov zmm26_3 zmm15_3;
mov zmm26_4 zmm15_4;
mov zmm26_5 zmm15_5;
mov zmm26_6 zmm15_6;
mov zmm26_7 zmm15_7;
(* vpternlogq $0xd2,%zmm0,%zmm11,%zmm2             #! PC = 0x55555558f46a *)
mov table 0xd2@uint8;
inline vpternlogq64 (zmm2_0, zmm11_0, zmm0_0, table);
inline vpternlogq64 (zmm2_1, zmm11_1, zmm0_1, table);
inline vpternlogq64 (zmm2_2, zmm11_2, zmm0_2, table);
inline vpternlogq64 (zmm2_3, zmm11_3, zmm0_3, table);
inline vpternlogq64 (zmm2_4, zmm11_4, zmm0_4, table);
inline vpternlogq64 (zmm2_5, zmm11_5, zmm0_5, table);
inline vpternlogq64 (zmm2_6, zmm11_6, zmm0_6, table);
inline vpternlogq64 (zmm2_7, zmm11_7, zmm0_7, table);
(* vpternlogq $0xd2,%zmm19,%zmm18,%zmm14           #! PC = 0x55555558f471 *)
mov table 0xd2@uint8;
inline vpternlogq64 (zmm14_0, zmm18_0, zmm19_0, table);
inline vpternlogq64 (zmm14_1, zmm18_1, zmm19_1, table);
inline vpternlogq64 (zmm14_2, zmm18_2, zmm19_2, table);
inline vpternlogq64 (zmm14_3, zmm18_3, zmm19_3, table);
inline vpternlogq64 (zmm14_4, zmm18_4, zmm19_4, table);
inline vpternlogq64 (zmm14_5, zmm18_5, zmm19_5, table);
inline vpternlogq64 (zmm14_6, zmm18_6, zmm19_6, table);
inline vpternlogq64 (zmm14_7, zmm18_7, zmm19_7, table);
(* movabs $0x8000000080008081,%rbx                 #! PC = 0x55555558f478 *)
mov rbx 0x8000000080008081@uint64;
(* movabs $0x8000000000008080,%r12                 #! PC = 0x55555558f482 *)
mov r12 0x8000000000008080@uint64;
(* mov    $0x80000001,%r13d                        #! PC = 0x55555558f48c *)
mov r13 0x80000001@uint64;
(* movabs $0x8000000080008008,%r15                 #! PC = 0x55555558f492 *)
mov r15 0x8000000080008008@uint64;
(* #jne    0x55555558f580 <KeccakP1600times8_PermuteAll_24rounds+10080>#! PC = 0x55555558f4a0 *)
#jne    0x55555558f580 <KeccakP1600times8_PermuteAll_24rounds+10080>#! 0x55555558f4a0 = 0x55555558f4a0;
(* mov    $0x1,%r14d                               #! PC = 0x55555558f580 *)
mov r14 0x1@uint64;
(* #jmp    0x55555558cf68 <KeccakP1600times8_PermuteAll_24rounds+328>#! PC = 0x55555558f586 *)
#jmp    0x55555558cf68 <KeccakP1600times8_PermuteAll_24rounds+328>#! 0x55555558f586 = 0x55555558f586;
(* vmovdqa64 0x148(%rsp),%zmm15                    #! EA = L0x7fffffffd600; Value = 0x37308d3dfdfa4270; PC = 0x55555558cf68 *)
mov zmm15_0 L0x7fffffffd600;
mov zmm15_1 L0x7fffffffd608;
mov zmm15_2 L0x7fffffffd610;
mov zmm15_3 L0x7fffffffd618;
mov zmm15_4 L0x7fffffffd620;
mov zmm15_5 L0x7fffffffd628;
mov zmm15_6 L0x7fffffffd630;
mov zmm15_7 L0x7fffffffd638;
(* vmovdqa64 %zmm26,%zmm21                         #! PC = 0x55555558cf73 *)
mov zmm21_0 zmm26_0;
mov zmm21_1 zmm26_1;
mov zmm21_2 zmm26_2;
mov zmm21_3 zmm26_3;
mov zmm21_4 zmm26_4;
mov zmm21_5 zmm26_5;
mov zmm21_6 zmm26_6;
mov zmm21_7 zmm26_7;
(* vpternlogq $0x96,%zmm4,%zmm31,%zmm15            #! PC = 0x55555558cf79 *)
mov table 0x96@uint8;
inline vpternlogq64 (zmm15_0, zmm31_0, zmm4_0, table);
inline vpternlogq64 (zmm15_1, zmm31_1, zmm4_1, table);
inline vpternlogq64 (zmm15_2, zmm31_2, zmm4_2, table);
inline vpternlogq64 (zmm15_3, zmm31_3, zmm4_3, table);
inline vpternlogq64 (zmm15_4, zmm31_4, zmm4_4, table);
inline vpternlogq64 (zmm15_5, zmm31_5, zmm4_5, table);
inline vpternlogq64 (zmm15_6, zmm31_6, zmm4_6, table);
inline vpternlogq64 (zmm15_7, zmm31_7, zmm4_7, table);
(* vmovdqa64 %zmm24,%zmm11                         #! PC = 0x55555558cf80 *)
mov zmm11_0 zmm24_0;
mov zmm11_1 zmm24_1;
mov zmm11_2 zmm24_2;
mov zmm11_3 zmm24_3;
mov zmm11_4 zmm24_4;
mov zmm11_5 zmm24_5;
mov zmm11_6 zmm24_6;
mov zmm11_7 zmm24_7;
(* vmovdqa64 %zmm30,%zmm28                         #! PC = 0x55555558cf86 *)
mov zmm28_0 zmm30_0;
mov zmm28_1 zmm30_1;
mov zmm28_2 zmm30_2;
mov zmm28_3 zmm30_3;
mov zmm28_4 zmm30_4;
mov zmm28_5 zmm30_5;
mov zmm28_6 zmm30_6;
mov zmm28_7 zmm30_7;
(* vpternlogq $0x96,%zmm13,%zmm6,%zmm15            #! PC = 0x55555558cf8c *)
mov table 0x96@uint8;
inline vpternlogq64 (zmm15_0, zmm6_0, zmm13_0, table);
inline vpternlogq64 (zmm15_1, zmm6_1, zmm13_1, table);
inline vpternlogq64 (zmm15_2, zmm6_2, zmm13_2, table);
inline vpternlogq64 (zmm15_3, zmm6_3, zmm13_3, table);
inline vpternlogq64 (zmm15_4, zmm6_4, zmm13_4, table);
inline vpternlogq64 (zmm15_5, zmm6_5, zmm13_5, table);
inline vpternlogq64 (zmm15_6, zmm6_6, zmm13_6, table);
inline vpternlogq64 (zmm15_7, zmm6_7, zmm13_7, table);
(* vpternlogq $0x96,%zmm8,%zmm23,%zmm21            #! PC = 0x55555558cf93 *)
mov table 0x96@uint8;
inline vpternlogq64 (zmm21_0, zmm23_0, zmm8_0, table);
inline vpternlogq64 (zmm21_1, zmm23_1, zmm8_1, table);
inline vpternlogq64 (zmm21_2, zmm23_2, zmm8_2, table);
inline vpternlogq64 (zmm21_3, zmm23_3, zmm8_3, table);
inline vpternlogq64 (zmm21_4, zmm23_4, zmm8_4, table);
inline vpternlogq64 (zmm21_5, zmm23_5, zmm8_5, table);
inline vpternlogq64 (zmm21_6, zmm23_6, zmm8_6, table);
inline vpternlogq64 (zmm21_7, zmm23_7, zmm8_7, table);
(* vpternlogq $0x96,%zmm3,%zmm17,%zmm11            #! PC = 0x55555558cf9a *)
mov table 0x96@uint8;
inline vpternlogq64 (zmm11_0, zmm17_0, zmm3_0, table);
inline vpternlogq64 (zmm11_1, zmm17_1, zmm3_1, table);
inline vpternlogq64 (zmm11_2, zmm17_2, zmm3_2, table);
inline vpternlogq64 (zmm11_3, zmm17_3, zmm3_3, table);
inline vpternlogq64 (zmm11_4, zmm17_4, zmm3_4, table);
inline vpternlogq64 (zmm11_5, zmm17_5, zmm3_5, table);
inline vpternlogq64 (zmm11_6, zmm17_6, zmm3_6, table);
inline vpternlogq64 (zmm11_7, zmm17_7, zmm3_7, table);
(* vpternlogq $0x96,%zmm22,%zmm9,%zmm28            #! PC = 0x55555558cfa1 *)
mov table 0x96@uint8;
inline vpternlogq64 (zmm28_0, zmm9_0, zmm22_0, table);
inline vpternlogq64 (zmm28_1, zmm9_1, zmm22_1, table);
inline vpternlogq64 (zmm28_2, zmm9_2, zmm22_2, table);
inline vpternlogq64 (zmm28_3, zmm9_3, zmm22_3, table);
inline vpternlogq64 (zmm28_4, zmm9_4, zmm22_4, table);
inline vpternlogq64 (zmm28_5, zmm9_5, zmm22_5, table);
inline vpternlogq64 (zmm28_6, zmm9_6, zmm22_6, table);
inline vpternlogq64 (zmm28_7, zmm9_7, zmm22_7, table);
(* vpternlogq $0x96,%zmm16,%zmm5,%zmm21            #! PC = 0x55555558cfa8 *)
mov table 0x96@uint8;
inline vpternlogq64 (zmm21_0, zmm5_0, zmm16_0, table);
inline vpternlogq64 (zmm21_1, zmm5_1, zmm16_1, table);
inline vpternlogq64 (zmm21_2, zmm5_2, zmm16_2, table);
inline vpternlogq64 (zmm21_3, zmm5_3, zmm16_3, table);
inline vpternlogq64 (zmm21_4, zmm5_4, zmm16_4, table);
inline vpternlogq64 (zmm21_5, zmm5_5, zmm16_5, table);
inline vpternlogq64 (zmm21_6, zmm5_6, zmm16_6, table);
inline vpternlogq64 (zmm21_7, zmm5_7, zmm16_7, table);
(* vpternlogq $0x96,%zmm1,%zmm7,%zmm11             #! PC = 0x55555558cfaf *)
mov table 0x96@uint8;
inline vpternlogq64 (zmm11_0, zmm7_0, zmm1_0, table);
inline vpternlogq64 (zmm11_1, zmm7_1, zmm1_1, table);
inline vpternlogq64 (zmm11_2, zmm7_2, zmm1_2, table);
inline vpternlogq64 (zmm11_3, zmm7_3, zmm1_3, table);
inline vpternlogq64 (zmm11_4, zmm7_4, zmm1_4, table);
inline vpternlogq64 (zmm11_5, zmm7_5, zmm1_5, table);
inline vpternlogq64 (zmm11_6, zmm7_6, zmm1_6, table);
inline vpternlogq64 (zmm11_7, zmm7_7, zmm1_7, table);
(* vpternlogq $0x96,%zmm14,%zmm2,%zmm28            #! PC = 0x55555558cfb6 *)
mov table 0x96@uint8;
inline vpternlogq64 (zmm28_0, zmm2_0, zmm14_0, table);
inline vpternlogq64 (zmm28_1, zmm2_1, zmm14_1, table);
inline vpternlogq64 (zmm28_2, zmm2_2, zmm14_2, table);
inline vpternlogq64 (zmm28_3, zmm2_3, zmm14_3, table);
inline vpternlogq64 (zmm28_4, zmm2_4, zmm14_4, table);
inline vpternlogq64 (zmm28_5, zmm2_5, zmm14_5, table);
inline vpternlogq64 (zmm28_6, zmm2_6, zmm14_6, table);
inline vpternlogq64 (zmm28_7, zmm2_7, zmm14_7, table);
(* vprolq $0x1,%zmm15,%zmm0                        #! PC = 0x55555558cfbd *)
rol zmm0_0 zmm15_0 0x1;
rol zmm0_1 zmm15_1 0x1;
rol zmm0_2 zmm15_2 0x1;
rol zmm0_3 zmm15_3 0x1;
rol zmm0_4 zmm15_4 0x1;
rol zmm0_5 zmm15_5 0x1;
rol zmm0_6 zmm15_6 0x1;
rol zmm0_7 zmm15_7 0x1;
(* vprolq $0x1,%zmm11,%zmm10                       #! PC = 0x55555558cfc4 *)
rol zmm10_0 zmm11_0 0x1;
rol zmm10_1 zmm11_1 0x1;
rol zmm10_2 zmm11_2 0x1;
rol zmm10_3 zmm11_3 0x1;
rol zmm10_4 zmm11_4 0x1;
rol zmm10_5 zmm11_5 0x1;
rol zmm10_6 zmm11_6 0x1;
rol zmm10_7 zmm11_7 0x1;
(* vprolq $0x1,%zmm28,%zmm12                       #! PC = 0x55555558cfcb *)
rol zmm12_0 zmm28_0 0x1;
rol zmm12_1 zmm28_1 0x1;
rol zmm12_2 zmm28_2 0x1;
rol zmm12_3 zmm28_3 0x1;
rol zmm12_4 zmm28_4 0x1;
rol zmm12_5 zmm28_5 0x1;
rol zmm12_6 zmm28_6 0x1;
rol zmm12_7 zmm28_7 0x1;
(* vprolq $0x1,%zmm21,%zmm19                       #! PC = 0x55555558cfd2 *)
rol zmm19_0 zmm21_0 0x1;
rol zmm19_1 zmm21_1 0x1;
rol zmm19_2 zmm21_2 0x1;
rol zmm19_3 zmm21_3 0x1;
rol zmm19_4 zmm21_4 0x1;
rol zmm19_5 zmm21_5 0x1;
rol zmm19_6 zmm21_6 0x1;
rol zmm19_7 zmm21_7 0x1;
(* vmovdqa64 0xc8(%rsp),%zmm20                     #! EA = L0x7fffffffd580; Value = 0x8ca85cad4a1c31db; PC = 0x55555558cfd9 *)
mov zmm20_0 L0x7fffffffd580;
mov zmm20_1 L0x7fffffffd588;
mov zmm20_2 L0x7fffffffd590;
mov zmm20_3 L0x7fffffffd598;
mov zmm20_4 L0x7fffffffd5a0;
mov zmm20_5 L0x7fffffffd5a8;
mov zmm20_6 L0x7fffffffd5b0;
mov zmm20_7 L0x7fffffffd5b8;
(* vpternlogq $0x96,0x108(%rsp),%zmm25,%zmm20      #! EA = L0x7fffffffd5c0; Value = 0xead2faf526a47527; PC = 0x55555558cfe4 *)
mov table 0x96@uint8;
inline vpternlogq64 (zmm20_0, zmm25_0, L0x7fffffffd5c0, table);
inline vpternlogq64 (zmm20_1, zmm25_1, L0x7fffffffd5c8, table);
inline vpternlogq64 (zmm20_2, zmm25_2, L0x7fffffffd5d0, table);
inline vpternlogq64 (zmm20_3, zmm25_3, L0x7fffffffd5d8, table);
inline vpternlogq64 (zmm20_4, zmm25_4, L0x7fffffffd5e0, table);
inline vpternlogq64 (zmm20_5, zmm25_5, L0x7fffffffd5e8, table);
inline vpternlogq64 (zmm20_6, zmm25_6, L0x7fffffffd5f0, table);
inline vpternlogq64 (zmm20_7, zmm25_7, L0x7fffffffd5f8, table);
(* vpternlogq $0x96,%zmm29,%zmm27,%zmm20           #! PC = 0x55555558cff0 *)
mov table 0x96@uint8;
inline vpternlogq64 (zmm20_0, zmm27_0, zmm29_0, table);
inline vpternlogq64 (zmm20_1, zmm27_1, zmm29_1, table);
inline vpternlogq64 (zmm20_2, zmm27_2, zmm29_2, table);
inline vpternlogq64 (zmm20_3, zmm27_3, zmm29_3, table);
inline vpternlogq64 (zmm20_4, zmm27_4, zmm29_4, table);
inline vpternlogq64 (zmm20_5, zmm27_5, zmm29_5, table);
inline vpternlogq64 (zmm20_6, zmm27_6, zmm29_6, table);
inline vpternlogq64 (zmm20_7, zmm27_7, zmm29_7, table);
(* vpxord %zmm21,%zmm0,%zmm0                       #! PC = 0x55555558cff7 *)
xor zmm0_0@uint64 zmm0_0 zmm21_0;
xor zmm0_1@uint64 zmm0_1 zmm21_1;
xor zmm0_2@uint64 zmm0_2 zmm21_2;
xor zmm0_3@uint64 zmm0_3 zmm21_3;
xor zmm0_4@uint64 zmm0_4 zmm21_4;
xor zmm0_5@uint64 zmm0_5 zmm21_5;
xor zmm0_6@uint64 zmm0_6 zmm21_6;
xor zmm0_7@uint64 zmm0_7 zmm21_7;
(* vprolq $0x1,%zmm20,%zmm18                       #! PC = 0x55555558cffd *)
rol zmm18_0 zmm20_0 0x1;
rol zmm18_1 zmm20_1 0x1;
rol zmm18_2 zmm20_2 0x1;
rol zmm18_3 zmm20_3 0x1;
rol zmm18_4 zmm20_4 0x1;
rol zmm18_5 zmm20_5 0x1;
rol zmm18_6 zmm20_6 0x1;
rol zmm18_7 zmm20_7 0x1;
(* vpxord %zmm11,%zmm19,%zmm19                     #! PC = 0x55555558d004 *)
xor zmm19_0@uint64 zmm19_0 zmm11_0;
xor zmm19_1@uint64 zmm19_1 zmm11_1;
xor zmm19_2@uint64 zmm19_2 zmm11_2;
xor zmm19_3@uint64 zmm19_3 zmm11_3;
xor zmm19_4@uint64 zmm19_4 zmm11_4;
xor zmm19_5@uint64 zmm19_5 zmm11_5;
xor zmm19_6@uint64 zmm19_6 zmm11_6;
xor zmm19_7@uint64 zmm19_7 zmm11_7;
(* vpxord %zmm20,%zmm10,%zmm10                     #! PC = 0x55555558d00a *)
xor zmm10_0@uint64 zmm10_0 zmm20_0;
xor zmm10_1@uint64 zmm10_1 zmm20_1;
xor zmm10_2@uint64 zmm10_2 zmm20_2;
xor zmm10_3@uint64 zmm10_3 zmm20_3;
xor zmm10_4@uint64 zmm10_4 zmm20_4;
xor zmm10_5@uint64 zmm10_5 zmm20_5;
xor zmm10_6@uint64 zmm10_6 zmm20_6;
xor zmm10_7@uint64 zmm10_7 zmm20_7;
(* vpxord %zmm15,%zmm12,%zmm12                     #! PC = 0x55555558d010 *)
xor zmm12_0@uint64 zmm12_0 zmm15_0;
xor zmm12_1@uint64 zmm12_1 zmm15_1;
xor zmm12_2@uint64 zmm12_2 zmm15_2;
xor zmm12_3@uint64 zmm12_3 zmm15_3;
xor zmm12_4@uint64 zmm12_4 zmm15_4;
xor zmm12_5@uint64 zmm12_5 zmm15_5;
xor zmm12_6@uint64 zmm12_6 zmm15_6;
xor zmm12_7@uint64 zmm12_7 zmm15_7;
(* vpxord %zmm25,%zmm0,%zmm25                      #! PC = 0x55555558d016 *)
xor zmm25_0@uint64 zmm0_0 zmm25_0;
xor zmm25_1@uint64 zmm0_1 zmm25_1;
xor zmm25_2@uint64 zmm0_2 zmm25_2;
xor zmm25_3@uint64 zmm0_3 zmm25_3;
xor zmm25_4@uint64 zmm0_4 zmm25_4;
xor zmm25_5@uint64 zmm0_5 zmm25_5;
xor zmm25_6@uint64 zmm0_6 zmm25_6;
xor zmm25_7@uint64 zmm0_7 zmm25_7;
(* vprorq $0x14,%zmm25,%zmm11                      #! PC = 0x55555558d01c *)
ror zmm11_0 zmm25_0 0x14;
ror zmm11_1 zmm25_1 0x14;
ror zmm11_2 zmm25_2 0x14;
ror zmm11_3 zmm25_3 0x14;
ror zmm11_4 zmm25_4 0x14;
ror zmm11_5 zmm25_5 0x14;
ror zmm11_6 zmm25_6 0x14;
ror zmm11_7 zmm25_7 0x14;
(* vpxord %zmm4,%zmm10,%zmm4                       #! PC = 0x55555558d023 *)
xor zmm4_0@uint64 zmm10_0 zmm4_0;
xor zmm4_1@uint64 zmm10_1 zmm4_1;
xor zmm4_2@uint64 zmm10_2 zmm4_2;
xor zmm4_3@uint64 zmm10_3 zmm4_3;
xor zmm4_4@uint64 zmm10_4 zmm4_4;
xor zmm4_5@uint64 zmm10_5 zmm4_5;
xor zmm4_6@uint64 zmm10_6 zmm4_6;
xor zmm4_7@uint64 zmm10_7 zmm4_7;
(* vpxord %zmm7,%zmm12,%zmm7                       #! PC = 0x55555558d029 *)
xor zmm7_0@uint64 zmm12_0 zmm7_0;
xor zmm7_1@uint64 zmm12_1 zmm7_1;
xor zmm7_2@uint64 zmm12_2 zmm7_2;
xor zmm7_3@uint64 zmm12_3 zmm7_3;
xor zmm7_4@uint64 zmm12_4 zmm7_4;
xor zmm7_5@uint64 zmm12_5 zmm7_5;
xor zmm7_6@uint64 zmm12_6 zmm7_6;
xor zmm7_7@uint64 zmm12_7 zmm7_7;
(* vpxord %zmm14,%zmm19,%zmm14                     #! PC = 0x55555558d02f *)
xor zmm14_0@uint64 zmm19_0 zmm14_0;
xor zmm14_1@uint64 zmm19_1 zmm14_1;
xor zmm14_2@uint64 zmm19_2 zmm14_2;
xor zmm14_3@uint64 zmm19_3 zmm14_3;
xor zmm14_4@uint64 zmm19_4 zmm14_4;
xor zmm14_5@uint64 zmm19_5 zmm14_5;
xor zmm14_6@uint64 zmm19_6 zmm14_6;
xor zmm14_7@uint64 zmm19_7 zmm14_7;
(* vprorq $0x15,%zmm4,%zmm4                        #! PC = 0x55555558d035 *)
ror zmm4_0 zmm4_0 0x15;
ror zmm4_1 zmm4_1 0x15;
ror zmm4_2 zmm4_2 0x15;
ror zmm4_3 zmm4_3 0x15;
ror zmm4_4 zmm4_4 0x15;
ror zmm4_5 zmm4_5 0x15;
ror zmm4_6 zmm4_6 0x15;
ror zmm4_7 zmm4_7 0x15;
(* vprolq $0x15,%zmm7,%zmm7                        #! PC = 0x55555558d03c *)
rol zmm7_0 zmm7_0 0x15;
rol zmm7_1 zmm7_1 0x15;
rol zmm7_2 zmm7_2 0x15;
rol zmm7_3 zmm7_3 0x15;
rol zmm7_4 zmm7_4 0x15;
rol zmm7_5 zmm7_5 0x15;
rol zmm7_6 zmm7_6 0x15;
rol zmm7_7 zmm7_7 0x15;
(* vprolq $0xe,%zmm14,%zmm14                       #! PC = 0x55555558d043 *)
rol zmm14_0 zmm14_0 0xe;
rol zmm14_1 zmm14_1 0xe;
rol zmm14_2 zmm14_2 0xe;
rol zmm14_3 zmm14_3 0xe;
rol zmm14_4 zmm14_4 0xe;
rol zmm14_5 zmm14_5 0xe;
rol zmm14_6 zmm14_6 0xe;
rol zmm14_7 zmm14_7 0xe;
(* vpxord %zmm28,%zmm18,%zmm18                     #! PC = 0x55555558d04a *)
xor zmm18_0@uint64 zmm18_0 zmm28_0;
xor zmm18_1@uint64 zmm18_1 zmm28_1;
xor zmm18_2@uint64 zmm18_2 zmm28_2;
xor zmm18_3@uint64 zmm18_3 zmm28_3;
xor zmm18_4@uint64 zmm18_4 zmm28_4;
xor zmm18_5@uint64 zmm18_5 zmm28_5;
xor zmm18_6@uint64 zmm18_6 zmm28_6;
xor zmm18_7@uint64 zmm18_7 zmm28_7;
(* vpxord %zmm26,%zmm18,%zmm26                     #! PC = 0x55555558d050 *)
xor zmm26_0@uint64 zmm18_0 zmm26_0;
xor zmm26_1@uint64 zmm18_1 zmm26_1;
xor zmm26_2@uint64 zmm18_2 zmm26_2;
xor zmm26_3@uint64 zmm18_3 zmm26_3;
xor zmm26_4@uint64 zmm18_4 zmm26_4;
xor zmm26_5@uint64 zmm18_5 zmm26_5;
xor zmm26_6@uint64 zmm18_6 zmm26_6;
xor zmm26_7@uint64 zmm18_7 zmm26_7;
(* vmovdqa64 %zmm26,%zmm25                         #! PC = 0x55555558d056 *)
mov zmm25_0 zmm26_0;
mov zmm25_1 zmm26_1;
mov zmm25_2 zmm26_2;
mov zmm25_3 zmm26_3;
mov zmm25_4 zmm26_4;
mov zmm25_5 zmm26_5;
mov zmm25_6 zmm26_6;
mov zmm25_7 zmm26_7;
(* vmovdqa64 %zmm11,%zmm28                         #! PC = 0x55555558d05c *)
mov zmm28_0 zmm11_0;
mov zmm28_1 zmm11_1;
mov zmm28_2 zmm11_2;
mov zmm28_3 zmm11_3;
mov zmm28_4 zmm11_4;
mov zmm28_5 zmm11_5;
mov zmm28_6 zmm11_6;
mov zmm28_7 zmm11_7;
(* vpternlogq $0xd2,%zmm7,%zmm4,%zmm28             #! PC = 0x55555558d062 *)
mov table 0xd2@uint8;
inline vpternlogq64 (zmm28_0, zmm4_0, zmm7_0, table);
inline vpternlogq64 (zmm28_1, zmm4_1, zmm7_1, table);
inline vpternlogq64 (zmm28_2, zmm4_2, zmm7_2, table);
inline vpternlogq64 (zmm28_3, zmm4_3, zmm7_3, table);
inline vpternlogq64 (zmm28_4, zmm4_4, zmm7_4, table);
inline vpternlogq64 (zmm28_5, zmm4_5, zmm7_5, table);
inline vpternlogq64 (zmm28_6, zmm4_6, zmm7_6, table);
inline vpternlogq64 (zmm28_7, zmm4_7, zmm7_7, table);
(* vpternlogq $0xd2,%zmm4,%zmm11,%zmm25            #! PC = 0x55555558d069 *)
mov table 0xd2@uint8;
inline vpternlogq64 (zmm25_0, zmm11_0, zmm4_0, table);
inline vpternlogq64 (zmm25_1, zmm11_1, zmm4_1, table);
inline vpternlogq64 (zmm25_2, zmm11_2, zmm4_2, table);
inline vpternlogq64 (zmm25_3, zmm11_3, zmm4_3, table);
inline vpternlogq64 (zmm25_4, zmm11_4, zmm4_4, table);
inline vpternlogq64 (zmm25_5, zmm11_5, zmm4_5, table);
inline vpternlogq64 (zmm25_6, zmm11_6, zmm4_6, table);
inline vpternlogq64 (zmm25_7, zmm11_7, zmm4_7, table);
(* vpternlogq $0xd2,%zmm14,%zmm7,%zmm4             #! PC = 0x55555558d070 *)
mov table 0xd2@uint8;
inline vpternlogq64 (zmm4_0, zmm7_0, zmm14_0, table);
inline vpternlogq64 (zmm4_1, zmm7_1, zmm14_1, table);
inline vpternlogq64 (zmm4_2, zmm7_2, zmm14_2, table);
inline vpternlogq64 (zmm4_3, zmm7_3, zmm14_3, table);
inline vpternlogq64 (zmm4_4, zmm7_4, zmm14_4, table);
inline vpternlogq64 (zmm4_5, zmm7_5, zmm14_5, table);
inline vpternlogq64 (zmm4_6, zmm7_6, zmm14_6, table);
inline vpternlogq64 (zmm4_7, zmm7_7, zmm14_7, table);
(* vpternlogq $0xd2,%zmm26,%zmm14,%zmm7            #! PC = 0x55555558d077 *)
mov table 0xd2@uint8;
inline vpternlogq64 (zmm7_0, zmm14_0, zmm26_0, table);
inline vpternlogq64 (zmm7_1, zmm14_1, zmm26_1, table);
inline vpternlogq64 (zmm7_2, zmm14_2, zmm26_2, table);
inline vpternlogq64 (zmm7_3, zmm14_3, zmm26_3, table);
inline vpternlogq64 (zmm7_4, zmm14_4, zmm26_4, table);
inline vpternlogq64 (zmm7_5, zmm14_5, zmm26_5, table);
inline vpternlogq64 (zmm7_6, zmm14_6, zmm26_6, table);
inline vpternlogq64 (zmm7_7, zmm14_7, zmm26_7, table);
(* vpternlogq $0xd2,%zmm11,%zmm26,%zmm14           #! PC = 0x55555558d07e *)
mov table 0xd2@uint8;
inline vpternlogq64 (zmm14_0, zmm26_0, zmm11_0, table);
inline vpternlogq64 (zmm14_1, zmm26_1, zmm11_1, table);
inline vpternlogq64 (zmm14_2, zmm26_2, zmm11_2, table);
inline vpternlogq64 (zmm14_3, zmm26_3, zmm11_3, table);
inline vpternlogq64 (zmm14_4, zmm26_4, zmm11_4, table);
inline vpternlogq64 (zmm14_5, zmm26_5, zmm11_5, table);
inline vpternlogq64 (zmm14_6, zmm26_6, zmm11_6, table);
inline vpternlogq64 (zmm14_7, zmm26_7, zmm11_7, table);
(* vpbroadcastq %rsi,%zmm11                        #! PC = 0x55555558d085 *)
mov zmm11_0 rsi;
mov zmm11_1 rsi;
mov zmm11_2 rsi;
mov zmm11_3 rsi;
mov zmm11_4 rsi;
mov zmm11_5 rsi;
mov zmm11_6 rsi;
mov zmm11_7 rsi;
(* vpxord %zmm11,%zmm25,%zmm25                     #! PC = 0x55555558d08b *)
xor zmm25_0@uint64 zmm25_0 zmm11_0;
xor zmm25_1@uint64 zmm25_1 zmm11_1;
xor zmm25_2@uint64 zmm25_2 zmm11_2;
xor zmm25_3@uint64 zmm25_3 zmm11_3;
xor zmm25_4@uint64 zmm25_4 zmm11_4;
xor zmm25_5@uint64 zmm25_5 zmm11_5;
xor zmm25_6@uint64 zmm25_6 zmm11_6;
xor zmm25_7@uint64 zmm25_7 zmm11_7;
(* vpxord %zmm24,%zmm12,%zmm24                     #! PC = 0x55555558d091 *)
xor zmm24_0@uint64 zmm12_0 zmm24_0;
xor zmm24_1@uint64 zmm12_1 zmm24_1;
xor zmm24_2@uint64 zmm12_2 zmm24_2;
xor zmm24_3@uint64 zmm12_3 zmm24_3;
xor zmm24_4@uint64 zmm12_4 zmm24_4;
xor zmm24_5@uint64 zmm12_5 zmm24_5;
xor zmm24_6@uint64 zmm12_6 zmm24_6;
xor zmm24_7@uint64 zmm12_7 zmm24_7;
(* vpxord 0xc8(%rsp),%zmm0,%zmm11                  #! EA = L0x7fffffffd580; Value = 0x8ca85cad4a1c31db; PC = 0x55555558d097 *)
xor zmm11_0@uint64 zmm0_0 L0x7fffffffd580;
xor zmm11_1@uint64 zmm0_1 L0x7fffffffd588;
xor zmm11_2@uint64 zmm0_2 L0x7fffffffd590;
xor zmm11_3@uint64 zmm0_3 L0x7fffffffd598;
xor zmm11_4@uint64 zmm0_4 L0x7fffffffd5a0;
xor zmm11_5@uint64 zmm0_5 L0x7fffffffd5a8;
xor zmm11_6@uint64 zmm0_6 L0x7fffffffd5b0;
xor zmm11_7@uint64 zmm0_7 L0x7fffffffd5b8;
(* vpxord %zmm9,%zmm19,%zmm9                       #! PC = 0x55555558d0a2 *)
xor zmm9_0@uint64 zmm19_0 zmm9_0;
xor zmm9_1@uint64 zmm19_1 zmm9_1;
xor zmm9_2@uint64 zmm19_2 zmm9_2;
xor zmm9_3@uint64 zmm19_3 zmm9_3;
xor zmm9_4@uint64 zmm19_4 zmm9_4;
xor zmm9_5@uint64 zmm19_5 zmm9_5;
xor zmm9_6@uint64 zmm19_6 zmm9_6;
xor zmm9_7@uint64 zmm19_7 zmm9_7;
(* vprolq $0x1c,%zmm24,%zmm24                      #! PC = 0x55555558d0a8 *)
rol zmm24_0 zmm24_0 0x1c;
rol zmm24_1 zmm24_1 0x1c;
rol zmm24_2 zmm24_2 0x1c;
rol zmm24_3 zmm24_3 0x1c;
rol zmm24_4 zmm24_4 0x1c;
rol zmm24_5 zmm24_5 0x1c;
rol zmm24_6 zmm24_6 0x1c;
rol zmm24_7 zmm24_7 0x1c;
(* vprolq $0x14,%zmm9,%zmm9                        #! PC = 0x55555558d0af *)
rol zmm9_0 zmm9_0 0x14;
rol zmm9_1 zmm9_1 0x14;
rol zmm9_2 zmm9_2 0x14;
rol zmm9_3 zmm9_3 0x14;
rol zmm9_4 zmm9_4 0x14;
rol zmm9_5 zmm9_5 0x14;
rol zmm9_6 zmm9_6 0x14;
rol zmm9_7 zmm9_7 0x14;
(* vpxord %zmm8,%zmm18,%zmm8                       #! PC = 0x55555558d0b6 *)
xor zmm8_0@uint64 zmm18_0 zmm8_0;
xor zmm8_1@uint64 zmm18_1 zmm8_1;
xor zmm8_2@uint64 zmm18_2 zmm8_2;
xor zmm8_3@uint64 zmm18_3 zmm8_3;
xor zmm8_4@uint64 zmm18_4 zmm8_4;
xor zmm8_5@uint64 zmm18_5 zmm8_5;
xor zmm8_6@uint64 zmm18_6 zmm8_6;
xor zmm8_7@uint64 zmm18_7 zmm8_7;
(* vpxord %zmm27,%zmm0,%zmm27                      #! PC = 0x55555558d0bc *)
xor zmm27_0@uint64 zmm0_0 zmm27_0;
xor zmm27_1@uint64 zmm0_1 zmm27_1;
xor zmm27_2@uint64 zmm0_2 zmm27_2;
xor zmm27_3@uint64 zmm0_3 zmm27_3;
xor zmm27_4@uint64 zmm0_4 zmm27_4;
xor zmm27_5@uint64 zmm0_5 zmm27_5;
xor zmm27_6@uint64 zmm0_6 zmm27_6;
xor zmm27_7@uint64 zmm0_7 zmm27_7;
(* vpxord %zmm13,%zmm10,%zmm13                     #! PC = 0x55555558d0c2 *)
xor zmm13_0@uint64 zmm10_0 zmm13_0;
xor zmm13_1@uint64 zmm10_1 zmm13_1;
xor zmm13_2@uint64 zmm10_2 zmm13_2;
xor zmm13_3@uint64 zmm10_3 zmm13_3;
xor zmm13_4@uint64 zmm10_4 zmm13_4;
xor zmm13_5@uint64 zmm10_5 zmm13_5;
xor zmm13_6@uint64 zmm10_6 zmm13_6;
xor zmm13_7@uint64 zmm10_7 zmm13_7;
(* vprolq $0x1,%zmm11,%zmm11                       #! PC = 0x55555558d0c8 *)
rol zmm11_0 zmm11_0 0x1;
rol zmm11_1 zmm11_1 0x1;
rol zmm11_2 zmm11_2 0x1;
rol zmm11_3 zmm11_3 0x1;
rol zmm11_4 zmm11_4 0x1;
rol zmm11_5 zmm11_5 0x1;
rol zmm11_6 zmm11_6 0x1;
rol zmm11_7 zmm11_7 0x1;
(* vprolq $0x3,%zmm8,%zmm8                         #! PC = 0x55555558d0cf *)
rol zmm8_0 zmm8_0 0x3;
rol zmm8_1 zmm8_1 0x3;
rol zmm8_2 zmm8_2 0x3;
rol zmm8_3 zmm8_3 0x3;
rol zmm8_4 zmm8_4 0x3;
rol zmm8_5 zmm8_5 0x3;
rol zmm8_6 zmm8_6 0x3;
rol zmm8_7 zmm8_7 0x3;
(* vprorq $0x13,%zmm27,%zmm27                      #! PC = 0x55555558d0d6 *)
ror zmm27_0 zmm27_0 0x13;
ror zmm27_1 zmm27_1 0x13;
ror zmm27_2 zmm27_2 0x13;
ror zmm27_3 zmm27_3 0x13;
ror zmm27_4 zmm27_4 0x13;
ror zmm27_5 zmm27_5 0x13;
ror zmm27_6 zmm27_6 0x13;
ror zmm27_7 zmm27_7 0x13;
(* vprorq $0x3,%zmm13,%zmm13                       #! PC = 0x55555558d0dd *)
ror zmm13_0 zmm13_0 0x3;
ror zmm13_1 zmm13_1 0x3;
ror zmm13_2 zmm13_2 0x3;
ror zmm13_3 zmm13_3 0x3;
ror zmm13_4 zmm13_4 0x3;
ror zmm13_5 zmm13_5 0x3;
ror zmm13_6 zmm13_6 0x3;
ror zmm13_7 zmm13_7 0x3;
(* vpxord %zmm31,%zmm10,%zmm31                     #! PC = 0x55555558d0e4 *)
xor zmm31_0@uint64 zmm10_0 zmm31_0;
xor zmm31_1@uint64 zmm10_1 zmm31_1;
xor zmm31_2@uint64 zmm10_2 zmm31_2;
xor zmm31_3@uint64 zmm10_3 zmm31_3;
xor zmm31_4@uint64 zmm10_4 zmm31_4;
xor zmm31_5@uint64 zmm10_5 zmm31_5;
xor zmm31_6@uint64 zmm10_6 zmm31_6;
xor zmm31_7@uint64 zmm10_7 zmm31_7;
(* vpxord %zmm3,%zmm12,%zmm3                       #! PC = 0x55555558d0ea *)
xor zmm3_0@uint64 zmm12_0 zmm3_0;
xor zmm3_1@uint64 zmm12_1 zmm3_1;
xor zmm3_2@uint64 zmm12_2 zmm3_2;
xor zmm3_3@uint64 zmm12_3 zmm3_3;
xor zmm3_4@uint64 zmm12_4 zmm3_4;
xor zmm3_5@uint64 zmm12_5 zmm3_5;
xor zmm3_6@uint64 zmm12_6 zmm3_6;
xor zmm3_7@uint64 zmm12_7 zmm3_7;
(* vprolq $0x6,%zmm31,%zmm31                       #! PC = 0x55555558d0f0 *)
rol zmm31_0 zmm31_0 0x6;
rol zmm31_1 zmm31_1 0x6;
rol zmm31_2 zmm31_2 0x6;
rol zmm31_3 zmm31_3 0x6;
rol zmm31_4 zmm31_4 0x6;
rol zmm31_5 zmm31_5 0x6;
rol zmm31_6 zmm31_6 0x6;
rol zmm31_7 zmm31_7 0x6;
(* vprolq $0x19,%zmm3,%zmm3                        #! PC = 0x55555558d0f7 *)
rol zmm3_0 zmm3_0 0x19;
rol zmm3_1 zmm3_1 0x19;
rol zmm3_2 zmm3_2 0x19;
rol zmm3_3 zmm3_3 0x19;
rol zmm3_4 zmm3_4 0x19;
rol zmm3_5 zmm3_5 0x19;
rol zmm3_6 zmm3_6 0x19;
rol zmm3_7 zmm3_7 0x19;
(* vpxord %zmm16,%zmm18,%zmm16                     #! PC = 0x55555558d0fe *)
xor zmm16_0@uint64 zmm18_0 zmm16_0;
xor zmm16_1@uint64 zmm18_1 zmm16_1;
xor zmm16_2@uint64 zmm18_2 zmm16_2;
xor zmm16_3@uint64 zmm18_3 zmm16_3;
xor zmm16_4@uint64 zmm18_4 zmm16_4;
xor zmm16_5@uint64 zmm18_5 zmm16_5;
xor zmm16_6@uint64 zmm18_6 zmm16_6;
xor zmm16_7@uint64 zmm18_7 zmm16_7;
(* vpxord %zmm2,%zmm19,%zmm2                       #! PC = 0x55555558d104 *)
xor zmm2_0@uint64 zmm19_0 zmm2_0;
xor zmm2_1@uint64 zmm19_1 zmm2_1;
xor zmm2_2@uint64 zmm19_2 zmm2_2;
xor zmm2_3@uint64 zmm19_3 zmm2_3;
xor zmm2_4@uint64 zmm19_4 zmm2_4;
xor zmm2_5@uint64 zmm19_5 zmm2_5;
xor zmm2_6@uint64 zmm19_6 zmm2_6;
xor zmm2_7@uint64 zmm19_7 zmm2_7;
(* vprolq $0x12,%zmm16,%zmm16                      #! PC = 0x55555558d10a *)
rol zmm16_0 zmm16_0 0x12;
rol zmm16_1 zmm16_1 0x12;
rol zmm16_2 zmm16_2 0x12;
rol zmm16_3 zmm16_3 0x12;
rol zmm16_4 zmm16_4 0x12;
rol zmm16_5 zmm16_5 0x12;
rol zmm16_6 zmm16_6 0x12;
rol zmm16_7 zmm16_7 0x12;
(* vprolq $0x8,%zmm2,%zmm2                         #! PC = 0x55555558d111 *)
rol zmm2_0 zmm2_0 0x8;
rol zmm2_1 zmm2_1 0x8;
rol zmm2_2 zmm2_2 0x8;
rol zmm2_3 zmm2_3 0x8;
rol zmm2_4 zmm2_4 0x8;
rol zmm2_5 zmm2_5 0x8;
rol zmm2_6 zmm2_6 0x8;
rol zmm2_7 zmm2_7 0x8;
(* vmovdqa64 %zmm24,%zmm21                         #! PC = 0x55555558d118 *)
mov zmm21_0 zmm24_0;
mov zmm21_1 zmm24_1;
mov zmm21_2 zmm24_2;
mov zmm21_3 zmm24_3;
mov zmm21_4 zmm24_4;
mov zmm21_5 zmm24_5;
mov zmm21_6 zmm24_6;
mov zmm21_7 zmm24_7;
(* vmovdqa64 %zmm9,%zmm26                          #! PC = 0x55555558d11e *)
mov zmm26_0 zmm9_0;
mov zmm26_1 zmm9_1;
mov zmm26_2 zmm9_2;
mov zmm26_3 zmm9_3;
mov zmm26_4 zmm9_4;
mov zmm26_5 zmm9_5;
mov zmm26_6 zmm9_6;
mov zmm26_7 zmm9_7;
(* vpternlogq $0xd2,%zmm8,%zmm9,%zmm21             #! PC = 0x55555558d124 *)
mov table 0xd2@uint8;
inline vpternlogq64 (zmm21_0, zmm9_0, zmm8_0, table);
inline vpternlogq64 (zmm21_1, zmm9_1, zmm8_1, table);
inline vpternlogq64 (zmm21_2, zmm9_2, zmm8_2, table);
inline vpternlogq64 (zmm21_3, zmm9_3, zmm8_3, table);
inline vpternlogq64 (zmm21_4, zmm9_4, zmm8_4, table);
inline vpternlogq64 (zmm21_5, zmm9_5, zmm8_5, table);
inline vpternlogq64 (zmm21_6, zmm9_6, zmm8_6, table);
inline vpternlogq64 (zmm21_7, zmm9_7, zmm8_7, table);
(* vpternlogq $0xd2,%zmm27,%zmm8,%zmm26            #! PC = 0x55555558d12b *)
mov table 0xd2@uint8;
inline vpternlogq64 (zmm26_0, zmm8_0, zmm27_0, table);
inline vpternlogq64 (zmm26_1, zmm8_1, zmm27_1, table);
inline vpternlogq64 (zmm26_2, zmm8_2, zmm27_2, table);
inline vpternlogq64 (zmm26_3, zmm8_3, zmm27_3, table);
inline vpternlogq64 (zmm26_4, zmm8_4, zmm27_4, table);
inline vpternlogq64 (zmm26_5, zmm8_5, zmm27_5, table);
inline vpternlogq64 (zmm26_6, zmm8_6, zmm27_6, table);
inline vpternlogq64 (zmm26_7, zmm8_7, zmm27_7, table);
(* vpternlogq $0xd2,%zmm13,%zmm27,%zmm8            #! PC = 0x55555558d132 *)
mov table 0xd2@uint8;
inline vpternlogq64 (zmm8_0, zmm27_0, zmm13_0, table);
inline vpternlogq64 (zmm8_1, zmm27_1, zmm13_1, table);
inline vpternlogq64 (zmm8_2, zmm27_2, zmm13_2, table);
inline vpternlogq64 (zmm8_3, zmm27_3, zmm13_3, table);
inline vpternlogq64 (zmm8_4, zmm27_4, zmm13_4, table);
inline vpternlogq64 (zmm8_5, zmm27_5, zmm13_5, table);
inline vpternlogq64 (zmm8_6, zmm27_6, zmm13_6, table);
inline vpternlogq64 (zmm8_7, zmm27_7, zmm13_7, table);
(* vpternlogq $0xd2,%zmm24,%zmm13,%zmm27           #! PC = 0x55555558d139 *)
mov table 0xd2@uint8;
inline vpternlogq64 (zmm27_0, zmm13_0, zmm24_0, table);
inline vpternlogq64 (zmm27_1, zmm13_1, zmm24_1, table);
inline vpternlogq64 (zmm27_2, zmm13_2, zmm24_2, table);
inline vpternlogq64 (zmm27_3, zmm13_3, zmm24_3, table);
inline vpternlogq64 (zmm27_4, zmm13_4, zmm24_4, table);
inline vpternlogq64 (zmm27_5, zmm13_5, zmm24_5, table);
inline vpternlogq64 (zmm27_6, zmm13_6, zmm24_6, table);
inline vpternlogq64 (zmm27_7, zmm13_7, zmm24_7, table);
(* vpternlogq $0xd2,%zmm9,%zmm24,%zmm13            #! PC = 0x55555558d140 *)
mov table 0xd2@uint8;
inline vpternlogq64 (zmm13_0, zmm24_0, zmm9_0, table);
inline vpternlogq64 (zmm13_1, zmm24_1, zmm9_1, table);
inline vpternlogq64 (zmm13_2, zmm24_2, zmm9_2, table);
inline vpternlogq64 (zmm13_3, zmm24_3, zmm9_3, table);
inline vpternlogq64 (zmm13_4, zmm24_4, zmm9_4, table);
inline vpternlogq64 (zmm13_5, zmm24_5, zmm9_5, table);
inline vpternlogq64 (zmm13_6, zmm24_6, zmm9_6, table);
inline vpternlogq64 (zmm13_7, zmm24_7, zmm9_7, table);
(* vmovdqa64 %zmm11,%zmm9                          #! PC = 0x55555558d147 *)
mov zmm9_0 zmm11_0;
mov zmm9_1 zmm11_1;
mov zmm9_2 zmm11_2;
mov zmm9_3 zmm11_3;
mov zmm9_4 zmm11_4;
mov zmm9_5 zmm11_5;
mov zmm9_6 zmm11_6;
mov zmm9_7 zmm11_7;
(* vpternlogq $0xd2,%zmm3,%zmm31,%zmm9             #! PC = 0x55555558d14d *)
mov table 0xd2@uint8;
inline vpternlogq64 (zmm9_0, zmm31_0, zmm3_0, table);
inline vpternlogq64 (zmm9_1, zmm31_1, zmm3_1, table);
inline vpternlogq64 (zmm9_2, zmm31_2, zmm3_2, table);
inline vpternlogq64 (zmm9_3, zmm31_3, zmm3_3, table);
inline vpternlogq64 (zmm9_4, zmm31_4, zmm3_4, table);
inline vpternlogq64 (zmm9_5, zmm31_5, zmm3_5, table);
inline vpternlogq64 (zmm9_6, zmm31_6, zmm3_6, table);
inline vpternlogq64 (zmm9_7, zmm31_7, zmm3_7, table);
(* vmovdqa64 %zmm9,%zmm15                          #! PC = 0x55555558d154 *)
mov zmm15_0 zmm9_0;
mov zmm15_1 zmm9_1;
mov zmm15_2 zmm9_2;
mov zmm15_3 zmm9_3;
mov zmm15_4 zmm9_4;
mov zmm15_5 zmm9_5;
mov zmm15_6 zmm9_6;
mov zmm15_7 zmm9_7;
(* vmovdqa64 %zmm31,%zmm9                          #! PC = 0x55555558d15a *)
mov zmm9_0 zmm31_0;
mov zmm9_1 zmm31_1;
mov zmm9_2 zmm31_2;
mov zmm9_3 zmm31_3;
mov zmm9_4 zmm31_4;
mov zmm9_5 zmm31_5;
mov zmm9_6 zmm31_6;
mov zmm9_7 zmm31_7;
(* vpternlogq $0xd2,%zmm2,%zmm3,%zmm9              #! PC = 0x55555558d160 *)
mov table 0xd2@uint8;
inline vpternlogq64 (zmm9_0, zmm3_0, zmm2_0, table);
inline vpternlogq64 (zmm9_1, zmm3_1, zmm2_1, table);
inline vpternlogq64 (zmm9_2, zmm3_2, zmm2_2, table);
inline vpternlogq64 (zmm9_3, zmm3_3, zmm2_3, table);
inline vpternlogq64 (zmm9_4, zmm3_4, zmm2_4, table);
inline vpternlogq64 (zmm9_5, zmm3_5, zmm2_5, table);
inline vpternlogq64 (zmm9_6, zmm3_6, zmm2_6, table);
inline vpternlogq64 (zmm9_7, zmm3_7, zmm2_7, table);
(* vpxord %zmm23,%zmm18,%zmm23                     #! PC = 0x55555558d167 *)
xor zmm23_0@uint64 zmm18_0 zmm23_0;
xor zmm23_1@uint64 zmm18_1 zmm23_1;
xor zmm23_2@uint64 zmm18_2 zmm23_2;
xor zmm23_3@uint64 zmm18_3 zmm23_3;
xor zmm23_4@uint64 zmm18_4 zmm23_4;
xor zmm23_5@uint64 zmm18_5 zmm23_5;
xor zmm23_6@uint64 zmm18_6 zmm23_6;
xor zmm23_7@uint64 zmm18_7 zmm23_7;
(* vpternlogq $0xd2,%zmm16,%zmm2,%zmm3             #! PC = 0x55555558d16d *)
mov table 0xd2@uint8;
inline vpternlogq64 (zmm3_0, zmm2_0, zmm16_0, table);
inline vpternlogq64 (zmm3_1, zmm2_1, zmm16_1, table);
inline vpternlogq64 (zmm3_2, zmm2_2, zmm16_2, table);
inline vpternlogq64 (zmm3_3, zmm2_3, zmm16_3, table);
inline vpternlogq64 (zmm3_4, zmm2_4, zmm16_4, table);
inline vpternlogq64 (zmm3_5, zmm2_5, zmm16_5, table);
inline vpternlogq64 (zmm3_6, zmm2_6, zmm16_6, table);
inline vpternlogq64 (zmm3_7, zmm2_7, zmm16_7, table);
(* vpxord %zmm6,%zmm10,%zmm6                       #! PC = 0x55555558d174 *)
xor zmm6_0@uint64 zmm10_0 zmm6_0;
xor zmm6_1@uint64 zmm10_1 zmm6_1;
xor zmm6_2@uint64 zmm10_2 zmm6_2;
xor zmm6_3@uint64 zmm10_3 zmm6_3;
xor zmm6_4@uint64 zmm10_4 zmm6_4;
xor zmm6_5@uint64 zmm10_5 zmm6_5;
xor zmm6_6@uint64 zmm10_6 zmm6_6;
xor zmm6_7@uint64 zmm10_7 zmm6_7;
(* vpternlogq $0xd2,%zmm11,%zmm16,%zmm2            #! PC = 0x55555558d17a *)
mov table 0xd2@uint8;
inline vpternlogq64 (zmm2_0, zmm16_0, zmm11_0, table);
inline vpternlogq64 (zmm2_1, zmm16_1, zmm11_1, table);
inline vpternlogq64 (zmm2_2, zmm16_2, zmm11_2, table);
inline vpternlogq64 (zmm2_3, zmm16_3, zmm11_3, table);
inline vpternlogq64 (zmm2_4, zmm16_4, zmm11_4, table);
inline vpternlogq64 (zmm2_5, zmm16_5, zmm11_5, table);
inline vpternlogq64 (zmm2_6, zmm16_6, zmm11_6, table);
inline vpternlogq64 (zmm2_7, zmm16_7, zmm11_7, table);
(* vpxord 0x148(%rsp),%zmm10,%zmm10                #! EA = L0x7fffffffd600; Value = 0x37308d3dfdfa4270; PC = 0x55555558d181 *)
xor zmm10_0@uint64 zmm10_0 L0x7fffffffd600;
xor zmm10_1@uint64 zmm10_1 L0x7fffffffd608;
xor zmm10_2@uint64 zmm10_2 L0x7fffffffd610;
xor zmm10_3@uint64 zmm10_3 L0x7fffffffd618;
xor zmm10_4@uint64 zmm10_4 L0x7fffffffd620;
xor zmm10_5@uint64 zmm10_5 L0x7fffffffd628;
xor zmm10_6@uint64 zmm10_6 L0x7fffffffd630;
xor zmm10_7@uint64 zmm10_7 L0x7fffffffd638;
(* vpternlogq $0xd2,%zmm31,%zmm11,%zmm16           #! PC = 0x55555558d18c *)
mov table 0xd2@uint8;
inline vpternlogq64 (zmm16_0, zmm11_0, zmm31_0, table);
inline vpternlogq64 (zmm16_1, zmm11_1, zmm31_1, table);
inline vpternlogq64 (zmm16_2, zmm11_2, zmm31_2, table);
inline vpternlogq64 (zmm16_3, zmm11_3, zmm31_3, table);
inline vpternlogq64 (zmm16_4, zmm11_4, zmm31_4, table);
inline vpternlogq64 (zmm16_5, zmm11_5, zmm31_5, table);
inline vpternlogq64 (zmm16_6, zmm11_6, zmm31_6, table);
inline vpternlogq64 (zmm16_7, zmm11_7, zmm31_7, table);
(* vpxord %zmm30,%zmm19,%zmm30                     #! PC = 0x55555558d193 *)
xor zmm30_0@uint64 zmm19_0 zmm30_0;
xor zmm30_1@uint64 zmm19_1 zmm30_1;
xor zmm30_2@uint64 zmm19_2 zmm30_2;
xor zmm30_3@uint64 zmm19_3 zmm30_3;
xor zmm30_4@uint64 zmm19_4 zmm30_4;
xor zmm30_5@uint64 zmm19_5 zmm30_5;
xor zmm30_6@uint64 zmm19_6 zmm30_6;
xor zmm30_7@uint64 zmm19_7 zmm30_7;
(* vpxord 0x108(%rsp),%zmm0,%zmm11                 #! EA = L0x7fffffffd5c0; Value = 0xead2faf526a47527; PC = 0x55555558d199 *)
xor zmm11_0@uint64 zmm0_0 L0x7fffffffd5c0;
xor zmm11_1@uint64 zmm0_1 L0x7fffffffd5c8;
xor zmm11_2@uint64 zmm0_2 L0x7fffffffd5d0;
xor zmm11_3@uint64 zmm0_3 L0x7fffffffd5d8;
xor zmm11_4@uint64 zmm0_4 L0x7fffffffd5e0;
xor zmm11_5@uint64 zmm0_5 L0x7fffffffd5e8;
xor zmm11_6@uint64 zmm0_6 L0x7fffffffd5f0;
xor zmm11_7@uint64 zmm0_7 L0x7fffffffd5f8;
(* vprorq $0x1c,%zmm23,%zmm23                      #! PC = 0x55555558d1a4 *)
ror zmm23_0 zmm23_0 0x1c;
ror zmm23_1 zmm23_1 0x1c;
ror zmm23_2 zmm23_2 0x1c;
ror zmm23_3 zmm23_3 0x1c;
ror zmm23_4 zmm23_4 0x1c;
ror zmm23_5 zmm23_5 0x1c;
ror zmm23_6 zmm23_6 0x1c;
ror zmm23_7 zmm23_7 0x1c;
(* vprolq $0x1b,%zmm30,%zmm30                      #! PC = 0x55555558d1ab *)
rol zmm30_0 zmm30_0 0x1b;
rol zmm30_1 zmm30_1 0x1b;
rol zmm30_2 zmm30_2 0x1b;
rol zmm30_3 zmm30_3 0x1b;
rol zmm30_4 zmm30_4 0x1b;
rol zmm30_5 zmm30_5 0x1b;
rol zmm30_6 zmm30_6 0x1b;
rol zmm30_7 zmm30_7 0x1b;
(* vpxord %zmm1,%zmm12,%zmm1                       #! PC = 0x55555558d1b2 *)
xor zmm1_0@uint64 zmm12_0 zmm1_0;
xor zmm1_1@uint64 zmm12_1 zmm1_1;
xor zmm1_2@uint64 zmm12_2 zmm1_2;
xor zmm1_3@uint64 zmm12_3 zmm1_3;
xor zmm1_4@uint64 zmm12_4 zmm1_4;
xor zmm1_5@uint64 zmm12_5 zmm1_5;
xor zmm1_6@uint64 zmm12_6 zmm1_6;
xor zmm1_7@uint64 zmm12_7 zmm1_7;
(* vpxord %zmm17,%zmm12,%zmm12                     #! PC = 0x55555558d1b8 *)
xor zmm12_0@uint64 zmm12_0 zmm17_0;
xor zmm12_1@uint64 zmm12_1 zmm17_1;
xor zmm12_2@uint64 zmm12_2 zmm17_2;
xor zmm12_3@uint64 zmm12_3 zmm17_3;
xor zmm12_4@uint64 zmm12_4 zmm17_4;
xor zmm12_5@uint64 zmm12_5 zmm17_5;
xor zmm12_6@uint64 zmm12_6 zmm17_6;
xor zmm12_7@uint64 zmm12_7 zmm17_7;
(* vprorq $0x2,%zmm10,%zmm10                       #! PC = 0x55555558d1be *)
ror zmm10_0 zmm10_0 0x2;
ror zmm10_1 zmm10_1 0x2;
ror zmm10_2 zmm10_2 0x2;
ror zmm10_3 zmm10_3 0x2;
ror zmm10_4 zmm10_4 0x2;
ror zmm10_5 zmm10_5 0x2;
ror zmm10_6 zmm10_6 0x2;
ror zmm10_7 zmm10_7 0x2;
(* vprorq $0x9,%zmm12,%zmm12                       #! PC = 0x55555558d1c5 *)
ror zmm12_0 zmm12_0 0x9;
ror zmm12_1 zmm12_1 0x9;
ror zmm12_2 zmm12_2 0x9;
ror zmm12_3 zmm12_3 0x9;
ror zmm12_4 zmm12_4 0x9;
ror zmm12_5 zmm12_5 0x9;
ror zmm12_6 zmm12_6 0x9;
ror zmm12_7 zmm12_7 0x9;
(* vprolq $0xa,%zmm11,%zmm11                       #! PC = 0x55555558d1cc *)
rol zmm11_0 zmm11_0 0xa;
rol zmm11_1 zmm11_1 0xa;
rol zmm11_2 zmm11_2 0xa;
rol zmm11_3 zmm11_3 0xa;
rol zmm11_4 zmm11_4 0xa;
rol zmm11_5 zmm11_5 0xa;
rol zmm11_6 zmm11_6 0xa;
rol zmm11_7 zmm11_7 0xa;
(* vprolq $0xf,%zmm6,%zmm6                         #! PC = 0x55555558d1d3 *)
rol zmm6_0 zmm6_0 0xf;
rol zmm6_1 zmm6_1 0xf;
rol zmm6_2 zmm6_2 0xf;
rol zmm6_3 zmm6_3 0xf;
rol zmm6_4 zmm6_4 0xf;
rol zmm6_5 zmm6_5 0xf;
rol zmm6_6 zmm6_6 0xf;
rol zmm6_7 zmm6_7 0xf;
(* vprorq $0x8,%zmm1,%zmm1                         #! PC = 0x55555558d1da *)
ror zmm1_0 zmm1_0 0x8;
ror zmm1_1 zmm1_1 0x8;
ror zmm1_2 zmm1_2 0x8;
ror zmm1_3 zmm1_3 0x8;
ror zmm1_4 zmm1_4 0x8;
ror zmm1_5 zmm1_5 0x8;
ror zmm1_6 zmm1_6 0x8;
ror zmm1_7 zmm1_7 0x8;
(* vpxord %zmm5,%zmm18,%zmm5                       #! PC = 0x55555558d1e1 *)
xor zmm5_0@uint64 zmm18_0 zmm5_0;
xor zmm5_1@uint64 zmm18_1 zmm5_1;
xor zmm5_2@uint64 zmm18_2 zmm5_2;
xor zmm5_3@uint64 zmm18_3 zmm5_3;
xor zmm5_4@uint64 zmm18_4 zmm5_4;
xor zmm5_5@uint64 zmm18_5 zmm5_5;
xor zmm5_6@uint64 zmm18_6 zmm5_6;
xor zmm5_7@uint64 zmm18_7 zmm5_7;
(* vpxord %zmm29,%zmm0,%zmm29                      #! PC = 0x55555558d1e7 *)
xor zmm29_0@uint64 zmm0_0 zmm29_0;
xor zmm29_1@uint64 zmm0_1 zmm29_1;
xor zmm29_2@uint64 zmm0_2 zmm29_2;
xor zmm29_3@uint64 zmm0_3 zmm29_3;
xor zmm29_4@uint64 zmm0_4 zmm29_4;
xor zmm29_5@uint64 zmm0_5 zmm29_5;
xor zmm29_6@uint64 zmm0_6 zmm29_6;
xor zmm29_7@uint64 zmm0_7 zmm29_7;
(* vpxord %zmm22,%zmm19,%zmm22                     #! PC = 0x55555558d1ed *)
xor zmm22_0@uint64 zmm19_0 zmm22_0;
xor zmm22_1@uint64 zmm19_1 zmm22_1;
xor zmm22_2@uint64 zmm19_2 zmm22_2;
xor zmm22_3@uint64 zmm19_3 zmm22_3;
xor zmm22_4@uint64 zmm19_4 zmm22_4;
xor zmm22_5@uint64 zmm19_5 zmm22_5;
xor zmm22_6@uint64 zmm19_6 zmm22_6;
xor zmm22_7@uint64 zmm19_7 zmm22_7;
(* vprorq $0x17,%zmm5,%zmm5                        #! PC = 0x55555558d1f3 *)
ror zmm5_0 zmm5_0 0x17;
ror zmm5_1 zmm5_1 0x17;
ror zmm5_2 zmm5_2 0x17;
ror zmm5_3 zmm5_3 0x17;
ror zmm5_4 zmm5_4 0x17;
ror zmm5_5 zmm5_5 0x17;
ror zmm5_6 zmm5_6 0x17;
ror zmm5_7 zmm5_7 0x17;
(* vprolq $0x2,%zmm29,%zmm29                       #! PC = 0x55555558d1fa *)
rol zmm29_0 zmm29_0 0x2;
rol zmm29_1 zmm29_1 0x2;
rol zmm29_2 zmm29_2 0x2;
rol zmm29_3 zmm29_3 0x2;
rol zmm29_4 zmm29_4 0x2;
rol zmm29_5 zmm29_5 0x2;
rol zmm29_6 zmm29_6 0x2;
rol zmm29_7 zmm29_7 0x2;
(* vprorq $0x19,%zmm22,%zmm22                      #! PC = 0x55555558d201 *)
ror zmm22_0 zmm22_0 0x19;
ror zmm22_1 zmm22_1 0x19;
ror zmm22_2 zmm22_2 0x19;
ror zmm22_3 zmm22_3 0x19;
ror zmm22_4 zmm22_4 0x19;
ror zmm22_5 zmm22_5 0x19;
ror zmm22_6 zmm22_6 0x19;
ror zmm22_7 zmm22_7 0x19;
(* vmovdqa64 %zmm30,%zmm31                         #! PC = 0x55555558d208 *)
mov zmm31_0 zmm30_0;
mov zmm31_1 zmm30_1;
mov zmm31_2 zmm30_2;
mov zmm31_3 zmm30_3;
mov zmm31_4 zmm30_4;
mov zmm31_5 zmm30_5;
mov zmm31_6 zmm30_6;
mov zmm31_7 zmm30_7;
(* vmovdqa64 %zmm23,%zmm20                         #! PC = 0x55555558d20e *)
mov zmm20_0 zmm23_0;
mov zmm20_1 zmm23_1;
mov zmm20_2 zmm23_2;
mov zmm20_3 zmm23_3;
mov zmm20_4 zmm23_4;
mov zmm20_5 zmm23_5;
mov zmm20_6 zmm23_6;
mov zmm20_7 zmm23_7;
(* vpternlogq $0xd2,%zmm11,%zmm23,%zmm31           #! PC = 0x55555558d214 *)
mov table 0xd2@uint8;
inline vpternlogq64 (zmm31_0, zmm23_0, zmm11_0, table);
inline vpternlogq64 (zmm31_1, zmm23_1, zmm11_1, table);
inline vpternlogq64 (zmm31_2, zmm23_2, zmm11_2, table);
inline vpternlogq64 (zmm31_3, zmm23_3, zmm11_3, table);
inline vpternlogq64 (zmm31_4, zmm23_4, zmm11_4, table);
inline vpternlogq64 (zmm31_5, zmm23_5, zmm11_5, table);
inline vpternlogq64 (zmm31_6, zmm23_6, zmm11_6, table);
inline vpternlogq64 (zmm31_7, zmm23_7, zmm11_7, table);
(* vpternlogq $0xd2,%zmm6,%zmm11,%zmm20            #! PC = 0x55555558d21b *)
mov table 0xd2@uint8;
inline vpternlogq64 (zmm20_0, zmm11_0, zmm6_0, table);
inline vpternlogq64 (zmm20_1, zmm11_1, zmm6_1, table);
inline vpternlogq64 (zmm20_2, zmm11_2, zmm6_2, table);
inline vpternlogq64 (zmm20_3, zmm11_3, zmm6_3, table);
inline vpternlogq64 (zmm20_4, zmm11_4, zmm6_4, table);
inline vpternlogq64 (zmm20_5, zmm11_5, zmm6_5, table);
inline vpternlogq64 (zmm20_6, zmm11_6, zmm6_6, table);
inline vpternlogq64 (zmm20_7, zmm11_7, zmm6_7, table);
(* vmovdqa64 %zmm10,%zmm19                         #! PC = 0x55555558d222 *)
mov zmm19_0 zmm10_0;
mov zmm19_1 zmm10_1;
mov zmm19_2 zmm10_2;
mov zmm19_3 zmm10_3;
mov zmm19_4 zmm10_4;
mov zmm19_5 zmm10_5;
mov zmm19_6 zmm10_6;
mov zmm19_7 zmm10_7;
(* vpternlogq $0xd2,%zmm1,%zmm6,%zmm11             #! PC = 0x55555558d228 *)
mov table 0xd2@uint8;
inline vpternlogq64 (zmm11_0, zmm6_0, zmm1_0, table);
inline vpternlogq64 (zmm11_1, zmm6_1, zmm1_1, table);
inline vpternlogq64 (zmm11_2, zmm6_2, zmm1_2, table);
inline vpternlogq64 (zmm11_3, zmm6_3, zmm1_3, table);
inline vpternlogq64 (zmm11_4, zmm6_4, zmm1_4, table);
inline vpternlogq64 (zmm11_5, zmm6_5, zmm1_5, table);
inline vpternlogq64 (zmm11_6, zmm6_6, zmm1_6, table);
inline vpternlogq64 (zmm11_7, zmm6_7, zmm1_7, table);
(* vpternlogq $0xd2,%zmm30,%zmm1,%zmm6             #! PC = 0x55555558d22f *)
mov table 0xd2@uint8;
inline vpternlogq64 (zmm6_0, zmm1_0, zmm30_0, table);
inline vpternlogq64 (zmm6_1, zmm1_1, zmm30_1, table);
inline vpternlogq64 (zmm6_2, zmm1_2, zmm30_2, table);
inline vpternlogq64 (zmm6_3, zmm1_3, zmm30_3, table);
inline vpternlogq64 (zmm6_4, zmm1_4, zmm30_4, table);
inline vpternlogq64 (zmm6_5, zmm1_5, zmm30_5, table);
inline vpternlogq64 (zmm6_6, zmm1_6, zmm30_6, table);
inline vpternlogq64 (zmm6_7, zmm1_7, zmm30_7, table);
(* vpternlogq $0xd2,%zmm23,%zmm30,%zmm1            #! PC = 0x55555558d236 *)
mov table 0xd2@uint8;
inline vpternlogq64 (zmm1_0, zmm30_0, zmm23_0, table);
inline vpternlogq64 (zmm1_1, zmm30_1, zmm23_1, table);
inline vpternlogq64 (zmm1_2, zmm30_2, zmm23_2, table);
inline vpternlogq64 (zmm1_3, zmm30_3, zmm23_3, table);
inline vpternlogq64 (zmm1_4, zmm30_4, zmm23_4, table);
inline vpternlogq64 (zmm1_5, zmm30_5, zmm23_5, table);
inline vpternlogq64 (zmm1_6, zmm30_6, zmm23_6, table);
inline vpternlogq64 (zmm1_7, zmm30_7, zmm23_7, table);
(* vmovdqa64 %zmm12,%zmm30                         #! PC = 0x55555558d23d *)
mov zmm30_0 zmm12_0;
mov zmm30_1 zmm12_1;
mov zmm30_2 zmm12_2;
mov zmm30_3 zmm12_3;
mov zmm30_4 zmm12_4;
mov zmm30_5 zmm12_5;
mov zmm30_6 zmm12_6;
mov zmm30_7 zmm12_7;
(* vpternlogq $0xd2,%zmm5,%zmm22,%zmm30            #! PC = 0x55555558d243 *)
mov table 0xd2@uint8;
inline vpternlogq64 (zmm30_0, zmm22_0, zmm5_0, table);
inline vpternlogq64 (zmm30_1, zmm22_1, zmm5_1, table);
inline vpternlogq64 (zmm30_2, zmm22_2, zmm5_2, table);
inline vpternlogq64 (zmm30_3, zmm22_3, zmm5_3, table);
inline vpternlogq64 (zmm30_4, zmm22_4, zmm5_4, table);
inline vpternlogq64 (zmm30_5, zmm22_5, zmm5_5, table);
inline vpternlogq64 (zmm30_6, zmm22_6, zmm5_6, table);
inline vpternlogq64 (zmm30_7, zmm22_7, zmm5_7, table);
(* vpternlogq $0xd2,%zmm22,%zmm12,%zmm19           #! PC = 0x55555558d24a *)
mov table 0xd2@uint8;
inline vpternlogq64 (zmm19_0, zmm12_0, zmm22_0, table);
inline vpternlogq64 (zmm19_1, zmm12_1, zmm22_1, table);
inline vpternlogq64 (zmm19_2, zmm12_2, zmm22_2, table);
inline vpternlogq64 (zmm19_3, zmm12_3, zmm22_3, table);
inline vpternlogq64 (zmm19_4, zmm12_4, zmm22_4, table);
inline vpternlogq64 (zmm19_5, zmm12_5, zmm22_5, table);
inline vpternlogq64 (zmm19_6, zmm12_6, zmm22_6, table);
inline vpternlogq64 (zmm19_7, zmm12_7, zmm22_7, table);
(* vpternlogq $0xd2,%zmm29,%zmm5,%zmm22            #! PC = 0x55555558d251 *)
mov table 0xd2@uint8;
inline vpternlogq64 (zmm22_0, zmm5_0, zmm29_0, table);
inline vpternlogq64 (zmm22_1, zmm5_1, zmm29_1, table);
inline vpternlogq64 (zmm22_2, zmm5_2, zmm29_2, table);
inline vpternlogq64 (zmm22_3, zmm5_3, zmm29_3, table);
inline vpternlogq64 (zmm22_4, zmm5_4, zmm29_4, table);
inline vpternlogq64 (zmm22_5, zmm5_5, zmm29_5, table);
inline vpternlogq64 (zmm22_6, zmm5_6, zmm29_6, table);
inline vpternlogq64 (zmm22_7, zmm5_7, zmm29_7, table);
(* vmovdqa64 %zmm22,%zmm18                         #! PC = 0x55555558d258 *)
mov zmm18_0 zmm22_0;
mov zmm18_1 zmm22_1;
mov zmm18_2 zmm22_2;
mov zmm18_3 zmm22_3;
mov zmm18_4 zmm22_4;
mov zmm18_5 zmm22_5;
mov zmm18_6 zmm22_6;
mov zmm18_7 zmm22_7;
(* vpternlogq $0x96,%zmm4,%zmm3,%zmm18             #! PC = 0x55555558d25e *)
mov table 0x96@uint8;
inline vpternlogq64 (zmm18_0, zmm3_0, zmm4_0, table);
inline vpternlogq64 (zmm18_1, zmm3_1, zmm4_1, table);
inline vpternlogq64 (zmm18_2, zmm3_2, zmm4_2, table);
inline vpternlogq64 (zmm18_3, zmm3_3, zmm4_3, table);
inline vpternlogq64 (zmm18_4, zmm3_4, zmm4_4, table);
inline vpternlogq64 (zmm18_5, zmm3_5, zmm4_5, table);
inline vpternlogq64 (zmm18_6, zmm3_6, zmm4_6, table);
inline vpternlogq64 (zmm18_7, zmm3_7, zmm4_7, table);
(* vpternlogq $0x96,%zmm8,%zmm11,%zmm18            #! PC = 0x55555558d265 *)
mov table 0x96@uint8;
inline vpternlogq64 (zmm18_0, zmm11_0, zmm8_0, table);
inline vpternlogq64 (zmm18_1, zmm11_1, zmm8_1, table);
inline vpternlogq64 (zmm18_2, zmm11_2, zmm8_2, table);
inline vpternlogq64 (zmm18_3, zmm11_3, zmm8_3, table);
inline vpternlogq64 (zmm18_4, zmm11_4, zmm8_4, table);
inline vpternlogq64 (zmm18_5, zmm11_5, zmm8_5, table);
inline vpternlogq64 (zmm18_6, zmm11_6, zmm8_6, table);
inline vpternlogq64 (zmm18_7, zmm11_7, zmm8_7, table);
(* vpternlogq $0xd2,%zmm10,%zmm29,%zmm5            #! PC = 0x55555558d26c *)
mov table 0xd2@uint8;
inline vpternlogq64 (zmm5_0, zmm29_0, zmm10_0, table);
inline vpternlogq64 (zmm5_1, zmm29_1, zmm10_1, table);
inline vpternlogq64 (zmm5_2, zmm29_2, zmm10_2, table);
inline vpternlogq64 (zmm5_3, zmm29_3, zmm10_3, table);
inline vpternlogq64 (zmm5_4, zmm29_4, zmm10_4, table);
inline vpternlogq64 (zmm5_5, zmm29_5, zmm10_5, table);
inline vpternlogq64 (zmm5_6, zmm29_6, zmm10_6, table);
inline vpternlogq64 (zmm5_7, zmm29_7, zmm10_7, table);
(* vpternlogq $0xd2,%zmm12,%zmm10,%zmm29           #! PC = 0x55555558d273 *)
mov table 0xd2@uint8;
inline vpternlogq64 (zmm29_0, zmm10_0, zmm12_0, table);
inline vpternlogq64 (zmm29_1, zmm10_1, zmm12_1, table);
inline vpternlogq64 (zmm29_2, zmm10_2, zmm12_2, table);
inline vpternlogq64 (zmm29_3, zmm10_3, zmm12_3, table);
inline vpternlogq64 (zmm29_4, zmm10_4, zmm12_4, table);
inline vpternlogq64 (zmm29_5, zmm10_5, zmm12_5, table);
inline vpternlogq64 (zmm29_6, zmm10_6, zmm12_6, table);
inline vpternlogq64 (zmm29_7, zmm10_7, zmm12_7, table);
(* vprolq $0x1,%zmm18,%zmm12                       #! PC = 0x55555558d27a *)
rol zmm12_0 zmm18_0 0x1;
rol zmm12_1 zmm18_1 0x1;
rol zmm12_2 zmm18_2 0x1;
rol zmm12_3 zmm18_3 0x1;
rol zmm12_4 zmm18_4 0x1;
rol zmm12_5 zmm18_5 0x1;
rol zmm12_6 zmm18_6 0x1;
rol zmm12_7 zmm18_7 0x1;
(* vmovdqa64 %zmm27,%zmm23                         #! PC = 0x55555558d281 *)
mov zmm23_0 zmm27_0;
mov zmm23_1 zmm27_1;
mov zmm23_2 zmm27_2;
mov zmm23_3 zmm27_3;
mov zmm23_4 zmm27_4;
mov zmm23_5 zmm27_5;
mov zmm23_6 zmm27_6;
mov zmm23_7 zmm27_7;
(* vpternlogq $0x96,%zmm2,%zmm5,%zmm23             #! PC = 0x55555558d287 *)
mov table 0x96@uint8;
inline vpternlogq64 (zmm23_0, zmm5_0, zmm2_0, table);
inline vpternlogq64 (zmm23_1, zmm5_1, zmm2_1, table);
inline vpternlogq64 (zmm23_2, zmm5_2, zmm2_2, table);
inline vpternlogq64 (zmm23_3, zmm5_3, zmm2_3, table);
inline vpternlogq64 (zmm23_4, zmm5_4, zmm2_4, table);
inline vpternlogq64 (zmm23_5, zmm5_5, zmm2_5, table);
inline vpternlogq64 (zmm23_6, zmm5_6, zmm2_6, table);
inline vpternlogq64 (zmm23_7, zmm5_7, zmm2_7, table);
(* vpternlogq $0x96,%zmm6,%zmm7,%zmm23             #! PC = 0x55555558d28e *)
mov table 0x96@uint8;
inline vpternlogq64 (zmm23_0, zmm7_0, zmm6_0, table);
inline vpternlogq64 (zmm23_1, zmm7_1, zmm6_1, table);
inline vpternlogq64 (zmm23_2, zmm7_2, zmm6_2, table);
inline vpternlogq64 (zmm23_3, zmm7_3, zmm6_3, table);
inline vpternlogq64 (zmm23_4, zmm7_4, zmm6_4, table);
inline vpternlogq64 (zmm23_5, zmm7_5, zmm6_5, table);
inline vpternlogq64 (zmm23_6, zmm7_6, zmm6_6, table);
inline vpternlogq64 (zmm23_7, zmm7_7, zmm6_7, table);
(* vmovdqa64 %zmm1,%zmm24                          #! PC = 0x55555558d295 *)
mov zmm24_0 zmm1_0;
mov zmm24_1 zmm1_1;
mov zmm24_2 zmm1_2;
mov zmm24_3 zmm1_3;
mov zmm24_4 zmm1_4;
mov zmm24_5 zmm1_5;
mov zmm24_6 zmm1_6;
mov zmm24_7 zmm1_7;
(* vpternlogq $0x96,%zmm29,%zmm13,%zmm24           #! PC = 0x55555558d29b *)
mov table 0x96@uint8;
inline vpternlogq64 (zmm24_0, zmm13_0, zmm29_0, table);
inline vpternlogq64 (zmm24_1, zmm13_1, zmm29_1, table);
inline vpternlogq64 (zmm24_2, zmm13_2, zmm29_2, table);
inline vpternlogq64 (zmm24_3, zmm13_3, zmm29_3, table);
inline vpternlogq64 (zmm24_4, zmm13_4, zmm29_4, table);
inline vpternlogq64 (zmm24_5, zmm13_5, zmm29_5, table);
inline vpternlogq64 (zmm24_6, zmm13_6, zmm29_6, table);
inline vpternlogq64 (zmm24_7, zmm13_7, zmm29_7, table);
(* vmovdqa64 %zmm12,0x148(%rsp)                    #! EA = L0x7fffffffd600; PC = 0x55555558d2a2 *)
mov L0x7fffffffd600 zmm12_0;
mov L0x7fffffffd608 zmm12_1;
mov L0x7fffffffd610 zmm12_2;
mov L0x7fffffffd618 zmm12_3;
mov L0x7fffffffd620 zmm12_4;
mov L0x7fffffffd628 zmm12_5;
mov L0x7fffffffd630 zmm12_6;
mov L0x7fffffffd638 zmm12_7;
(* vprolq $0x1,%zmm23,%zmm12                       #! PC = 0x55555558d2ad *)
rol zmm12_0 zmm23_0 0x1;
rol zmm12_1 zmm23_1 0x1;
rol zmm12_2 zmm23_2 0x1;
rol zmm12_3 zmm23_3 0x1;
rol zmm12_4 zmm23_4 0x1;
rol zmm12_5 zmm23_5 0x1;
rol zmm12_6 zmm23_6 0x1;
rol zmm12_7 zmm23_7 0x1;
(* vpternlogq $0x96,%zmm14,%zmm16,%zmm24           #! PC = 0x55555558d2b4 *)
mov table 0x96@uint8;
inline vpternlogq64 (zmm24_0, zmm16_0, zmm14_0, table);
inline vpternlogq64 (zmm24_1, zmm16_1, zmm14_1, table);
inline vpternlogq64 (zmm24_2, zmm16_2, zmm14_2, table);
inline vpternlogq64 (zmm24_3, zmm16_3, zmm14_3, table);
inline vpternlogq64 (zmm24_4, zmm16_4, zmm14_4, table);
inline vpternlogq64 (zmm24_5, zmm16_5, zmm14_5, table);
inline vpternlogq64 (zmm24_6, zmm16_6, zmm14_6, table);
inline vpternlogq64 (zmm24_7, zmm16_7, zmm14_7, table);
(* vmovdqa64 %zmm25,%zmm10                         #! PC = 0x55555558d2bb *)
mov zmm10_0 zmm25_0;
mov zmm10_1 zmm25_1;
mov zmm10_2 zmm25_2;
mov zmm10_3 zmm25_3;
mov zmm10_4 zmm25_4;
mov zmm10_5 zmm25_5;
mov zmm10_6 zmm25_6;
mov zmm10_7 zmm25_7;
(* vpternlogq $0x96,%zmm21,%zmm31,%zmm10           #! PC = 0x55555558d2c1 *)
mov table 0x96@uint8;
inline vpternlogq64 (zmm10_0, zmm31_0, zmm21_0, table);
inline vpternlogq64 (zmm10_1, zmm31_1, zmm21_1, table);
inline vpternlogq64 (zmm10_2, zmm31_2, zmm21_2, table);
inline vpternlogq64 (zmm10_3, zmm31_3, zmm21_3, table);
inline vpternlogq64 (zmm10_4, zmm31_4, zmm21_4, table);
inline vpternlogq64 (zmm10_5, zmm31_5, zmm21_5, table);
inline vpternlogq64 (zmm10_6, zmm31_6, zmm21_6, table);
inline vpternlogq64 (zmm10_7, zmm31_7, zmm21_7, table);
(* vpternlogq $0x96,%zmm15,%zmm19,%zmm10           #! PC = 0x55555558d2c8 *)
mov table 0x96@uint8;
inline vpternlogq64 (zmm10_0, zmm19_0, zmm15_0, table);
inline vpternlogq64 (zmm10_1, zmm19_1, zmm15_1, table);
inline vpternlogq64 (zmm10_2, zmm19_2, zmm15_2, table);
inline vpternlogq64 (zmm10_3, zmm19_3, zmm15_3, table);
inline vpternlogq64 (zmm10_4, zmm19_4, zmm15_4, table);
inline vpternlogq64 (zmm10_5, zmm19_5, zmm15_5, table);
inline vpternlogq64 (zmm10_6, zmm19_6, zmm15_6, table);
inline vpternlogq64 (zmm10_7, zmm19_7, zmm15_7, table);
(* vmovdqa64 %zmm9,%zmm17                          #! PC = 0x55555558d2cf *)
mov zmm17_0 zmm9_0;
mov zmm17_1 zmm9_1;
mov zmm17_2 zmm9_2;
mov zmm17_3 zmm9_3;
mov zmm17_4 zmm9_4;
mov zmm17_5 zmm9_5;
mov zmm17_6 zmm9_6;
mov zmm17_7 zmm9_7;
(* vmovdqa64 %zmm12,0x108(%rsp)                    #! EA = L0x7fffffffd5c0; PC = 0x55555558d2d5 *)
mov L0x7fffffffd5c0 zmm12_0;
mov L0x7fffffffd5c8 zmm12_1;
mov L0x7fffffffd5d0 zmm12_2;
mov L0x7fffffffd5d8 zmm12_3;
mov L0x7fffffffd5e0 zmm12_4;
mov L0x7fffffffd5e8 zmm12_5;
mov L0x7fffffffd5f0 zmm12_6;
mov L0x7fffffffd5f8 zmm12_7;
(* vprolq $0x1,%zmm24,%zmm12                       #! PC = 0x55555558d2e0 *)
rol zmm12_0 zmm24_0 0x1;
rol zmm12_1 zmm24_1 0x1;
rol zmm12_2 zmm24_2 0x1;
rol zmm12_3 zmm24_3 0x1;
rol zmm12_4 zmm24_4 0x1;
rol zmm12_5 zmm24_5 0x1;
rol zmm12_6 zmm24_6 0x1;
rol zmm12_7 zmm24_7 0x1;
(* vpternlogq $0x96,%zmm20,%zmm28,%zmm17           #! PC = 0x55555558d2e7 *)
mov table 0x96@uint8;
inline vpternlogq64 (zmm17_0, zmm28_0, zmm20_0, table);
inline vpternlogq64 (zmm17_1, zmm28_1, zmm20_1, table);
inline vpternlogq64 (zmm17_2, zmm28_2, zmm20_2, table);
inline vpternlogq64 (zmm17_3, zmm28_3, zmm20_3, table);
inline vpternlogq64 (zmm17_4, zmm28_4, zmm20_4, table);
inline vpternlogq64 (zmm17_5, zmm28_5, zmm20_5, table);
inline vpternlogq64 (zmm17_6, zmm28_6, zmm20_6, table);
inline vpternlogq64 (zmm17_7, zmm28_7, zmm20_7, table);
(* vpternlogq $0x96,%zmm30,%zmm26,%zmm17           #! PC = 0x55555558d2ee *)
mov table 0x96@uint8;
inline vpternlogq64 (zmm17_0, zmm26_0, zmm30_0, table);
inline vpternlogq64 (zmm17_1, zmm26_1, zmm30_1, table);
inline vpternlogq64 (zmm17_2, zmm26_2, zmm30_2, table);
inline vpternlogq64 (zmm17_3, zmm26_3, zmm30_3, table);
inline vpternlogq64 (zmm17_4, zmm26_4, zmm30_4, table);
inline vpternlogq64 (zmm17_5, zmm26_5, zmm30_5, table);
inline vpternlogq64 (zmm17_6, zmm26_6, zmm30_6, table);
inline vpternlogq64 (zmm17_7, zmm26_7, zmm30_7, table);
(* vprolq $0x1,%zmm17,%zmm0                        #! PC = 0x55555558d2f5 *)
rol zmm0_0 zmm17_0 0x1;
rol zmm0_1 zmm17_1 0x1;
rol zmm0_2 zmm17_2 0x1;
rol zmm0_3 zmm17_3 0x1;
rol zmm0_4 zmm17_4 0x1;
rol zmm0_5 zmm17_5 0x1;
rol zmm0_6 zmm17_6 0x1;
rol zmm0_7 zmm17_7 0x1;
(* vpxord 0x108(%rsp),%zmm17,%zmm17                #! EA = L0x7fffffffd5c0; Value = 0xc86bf81d7c1c3be8; PC = 0x55555558d2fc *)
xor zmm17_0@uint64 zmm17_0 L0x7fffffffd5c0;
xor zmm17_1@uint64 zmm17_1 L0x7fffffffd5c8;
xor zmm17_2@uint64 zmm17_2 L0x7fffffffd5d0;
xor zmm17_3@uint64 zmm17_3 L0x7fffffffd5d8;
xor zmm17_4@uint64 zmm17_4 L0x7fffffffd5e0;
xor zmm17_5@uint64 zmm17_5 L0x7fffffffd5e8;
xor zmm17_6@uint64 zmm17_6 L0x7fffffffd5f0;
xor zmm17_7@uint64 zmm17_7 L0x7fffffffd5f8;
(* mov    $0x8000808b,%esi                         #! PC = 0x55555558d307 *)
mov rsi 0x8000808b@uint64;
(* vmovdqa64 %zmm12,0xc8(%rsp)                     #! EA = L0x7fffffffd580; PC = 0x55555558d30c *)
mov L0x7fffffffd580 zmm12_0;
mov L0x7fffffffd588 zmm12_1;
mov L0x7fffffffd590 zmm12_2;
mov L0x7fffffffd598 zmm12_3;
mov L0x7fffffffd5a0 zmm12_4;
mov L0x7fffffffd5a8 zmm12_5;
mov L0x7fffffffd5b0 zmm12_6;
mov L0x7fffffffd5b8 zmm12_7;
(* vprolq $0x1,%zmm10,%zmm12                       #! PC = 0x55555558d317 *)
rol zmm12_0 zmm10_0 0x1;
rol zmm12_1 zmm10_1 0x1;
rol zmm12_2 zmm10_2 0x1;
rol zmm12_3 zmm10_3 0x1;
rol zmm12_4 zmm10_4 0x1;
rol zmm12_5 zmm10_5 0x1;
rol zmm12_6 zmm10_6 0x1;
rol zmm12_7 zmm10_7 0x1;
(* vpxord 0x148(%rsp),%zmm10,%zmm10                #! EA = L0x7fffffffd600; Value = 0x62952cd5fd7e9a67; PC = 0x55555558d31e *)
xor zmm10_0@uint64 zmm10_0 L0x7fffffffd600;
xor zmm10_1@uint64 zmm10_1 L0x7fffffffd608;
xor zmm10_2@uint64 zmm10_2 L0x7fffffffd610;
xor zmm10_3@uint64 zmm10_3 L0x7fffffffd618;
xor zmm10_4@uint64 zmm10_4 L0x7fffffffd620;
xor zmm10_5@uint64 zmm10_5 L0x7fffffffd628;
xor zmm10_6@uint64 zmm10_6 L0x7fffffffd630;
xor zmm10_7@uint64 zmm10_7 L0x7fffffffd638;
(* vpxord 0xc8(%rsp),%zmm18,%zmm18                 #! EA = L0x7fffffffd580; Value = 0xa296a99d8110e161; PC = 0x55555558d329 *)
xor zmm18_0@uint64 zmm18_0 L0x7fffffffd580;
xor zmm18_1@uint64 zmm18_1 L0x7fffffffd588;
xor zmm18_2@uint64 zmm18_2 L0x7fffffffd590;
xor zmm18_3@uint64 zmm18_3 L0x7fffffffd598;
xor zmm18_4@uint64 zmm18_4 L0x7fffffffd5a0;
xor zmm18_5@uint64 zmm18_5 L0x7fffffffd5a8;
xor zmm18_6@uint64 zmm18_6 L0x7fffffffd5b0;
xor zmm18_7@uint64 zmm18_7 L0x7fffffffd5b8;
(* vpxord %zmm26,%zmm10,%zmm26                     #! PC = 0x55555558d334 *)
xor zmm26_0@uint64 zmm10_0 zmm26_0;
xor zmm26_1@uint64 zmm10_1 zmm26_1;
xor zmm26_2@uint64 zmm10_2 zmm26_2;
xor zmm26_3@uint64 zmm10_3 zmm26_3;
xor zmm26_4@uint64 zmm10_4 zmm26_4;
xor zmm26_5@uint64 zmm10_5 zmm26_5;
xor zmm26_6@uint64 zmm10_6 zmm26_6;
xor zmm26_7@uint64 zmm10_7 zmm26_7;
(* vprorq $0x14,%zmm26,%zmm26                      #! PC = 0x55555558d33a *)
ror zmm26_0 zmm26_0 0x14;
ror zmm26_1 zmm26_1 0x14;
ror zmm26_2 zmm26_2 0x14;
ror zmm26_3 zmm26_3 0x14;
ror zmm26_4 zmm26_4 0x14;
ror zmm26_5 zmm26_5 0x14;
ror zmm26_6 zmm26_6 0x14;
ror zmm26_7 zmm26_7 0x14;
(* vpxord %zmm3,%zmm17,%zmm3                       #! PC = 0x55555558d341 *)
xor zmm3_0@uint64 zmm17_0 zmm3_0;
xor zmm3_1@uint64 zmm17_1 zmm3_1;
xor zmm3_2@uint64 zmm17_2 zmm3_2;
xor zmm3_3@uint64 zmm17_3 zmm3_3;
xor zmm3_4@uint64 zmm17_4 zmm3_4;
xor zmm3_5@uint64 zmm17_5 zmm3_5;
xor zmm3_6@uint64 zmm17_6 zmm3_6;
xor zmm3_7@uint64 zmm17_7 zmm3_7;
(* vpxord %zmm23,%zmm12,%zmm12                     #! PC = 0x55555558d347 *)
xor zmm12_0@uint64 zmm12_0 zmm23_0;
xor zmm12_1@uint64 zmm12_1 zmm23_1;
xor zmm12_2@uint64 zmm12_2 zmm23_2;
xor zmm12_3@uint64 zmm12_3 zmm23_3;
xor zmm12_4@uint64 zmm12_4 zmm23_4;
xor zmm12_5@uint64 zmm12_5 zmm23_5;
xor zmm12_6@uint64 zmm12_6 zmm23_6;
xor zmm12_7@uint64 zmm12_7 zmm23_7;
(* vpxord %zmm6,%zmm18,%zmm6                       #! PC = 0x55555558d34d *)
xor zmm6_0@uint64 zmm18_0 zmm6_0;
xor zmm6_1@uint64 zmm18_1 zmm6_1;
xor zmm6_2@uint64 zmm18_2 zmm6_2;
xor zmm6_3@uint64 zmm18_3 zmm6_3;
xor zmm6_4@uint64 zmm18_4 zmm6_4;
xor zmm6_5@uint64 zmm18_5 zmm6_5;
xor zmm6_6@uint64 zmm18_6 zmm6_6;
xor zmm6_7@uint64 zmm18_7 zmm6_7;
(* vpxord %zmm29,%zmm12,%zmm29                     #! PC = 0x55555558d353 *)
xor zmm29_0@uint64 zmm12_0 zmm29_0;
xor zmm29_1@uint64 zmm12_1 zmm29_1;
xor zmm29_2@uint64 zmm12_2 zmm29_2;
xor zmm29_3@uint64 zmm12_3 zmm29_3;
xor zmm29_4@uint64 zmm12_4 zmm29_4;
xor zmm29_5@uint64 zmm12_5 zmm29_5;
xor zmm29_6@uint64 zmm12_6 zmm29_6;
xor zmm29_7@uint64 zmm12_7 zmm29_7;
(* vpxord %zmm24,%zmm0,%zmm0                       #! PC = 0x55555558d359 *)
xor zmm0_0@uint64 zmm0_0 zmm24_0;
xor zmm0_1@uint64 zmm0_1 zmm24_1;
xor zmm0_2@uint64 zmm0_2 zmm24_2;
xor zmm0_3@uint64 zmm0_3 zmm24_3;
xor zmm0_4@uint64 zmm0_4 zmm24_4;
xor zmm0_5@uint64 zmm0_5 zmm24_5;
xor zmm0_6@uint64 zmm0_6 zmm24_6;
xor zmm0_7@uint64 zmm0_7 zmm24_7;
(* vprorq $0x15,%zmm3,%zmm3                        #! PC = 0x55555558d35f *)
ror zmm3_0 zmm3_0 0x15;
ror zmm3_1 zmm3_1 0x15;
ror zmm3_2 zmm3_2 0x15;
ror zmm3_3 zmm3_3 0x15;
ror zmm3_4 zmm3_4 0x15;
ror zmm3_5 zmm3_5 0x15;
ror zmm3_6 zmm3_6 0x15;
ror zmm3_7 zmm3_7 0x15;
(* vprolq $0x15,%zmm6,%zmm6                        #! PC = 0x55555558d366 *)
rol zmm6_0 zmm6_0 0x15;
rol zmm6_1 zmm6_1 0x15;
rol zmm6_2 zmm6_2 0x15;
rol zmm6_3 zmm6_3 0x15;
rol zmm6_4 zmm6_4 0x15;
rol zmm6_5 zmm6_5 0x15;
rol zmm6_6 zmm6_6 0x15;
rol zmm6_7 zmm6_7 0x15;
(* vprolq $0xe,%zmm29,%zmm29                       #! PC = 0x55555558d36d *)
rol zmm29_0 zmm29_0 0xe;
rol zmm29_1 zmm29_1 0xe;
rol zmm29_2 zmm29_2 0xe;
rol zmm29_3 zmm29_3 0xe;
rol zmm29_4 zmm29_4 0xe;
rol zmm29_5 zmm29_5 0xe;
rol zmm29_6 zmm29_6 0xe;
rol zmm29_7 zmm29_7 0xe;
(* vpxord %zmm7,%zmm18,%zmm7                       #! PC = 0x55555558d374 *)
xor zmm7_0@uint64 zmm18_0 zmm7_0;
xor zmm7_1@uint64 zmm18_1 zmm7_1;
xor zmm7_2@uint64 zmm18_2 zmm7_2;
xor zmm7_3@uint64 zmm18_3 zmm7_3;
xor zmm7_4@uint64 zmm18_4 zmm7_4;
xor zmm7_5@uint64 zmm18_5 zmm7_5;
xor zmm7_6@uint64 zmm18_6 zmm7_6;
xor zmm7_7@uint64 zmm18_7 zmm7_7;
(* vpxord %zmm13,%zmm12,%zmm13                     #! PC = 0x55555558d37a *)
xor zmm13_0@uint64 zmm12_0 zmm13_0;
xor zmm13_1@uint64 zmm12_1 zmm13_1;
xor zmm13_2@uint64 zmm12_2 zmm13_2;
xor zmm13_3@uint64 zmm12_3 zmm13_3;
xor zmm13_4@uint64 zmm12_4 zmm13_4;
xor zmm13_5@uint64 zmm12_5 zmm13_5;
xor zmm13_6@uint64 zmm12_6 zmm13_6;
xor zmm13_7@uint64 zmm12_7 zmm13_7;
(* vprolq $0x1c,%zmm7,%zmm7                        #! PC = 0x55555558d380 *)
rol zmm7_0 zmm7_0 0x1c;
rol zmm7_1 zmm7_1 0x1c;
rol zmm7_2 zmm7_2 0x1c;
rol zmm7_3 zmm7_3 0x1c;
rol zmm7_4 zmm7_4 0x1c;
rol zmm7_5 zmm7_5 0x1c;
rol zmm7_6 zmm7_6 0x1c;
rol zmm7_7 zmm7_7 0x1c;
(* vprolq $0x14,%zmm13,%zmm13                      #! PC = 0x55555558d387 *)
rol zmm13_0 zmm13_0 0x14;
rol zmm13_1 zmm13_1 0x14;
rol zmm13_2 zmm13_2 0x14;
rol zmm13_3 zmm13_3 0x14;
rol zmm13_4 zmm13_4 0x14;
rol zmm13_5 zmm13_5 0x14;
rol zmm13_6 zmm13_6 0x14;
rol zmm13_7 zmm13_7 0x14;
(* vpxord %zmm15,%zmm0,%zmm15                      #! PC = 0x55555558d38e *)
xor zmm15_0@uint64 zmm0_0 zmm15_0;
xor zmm15_1@uint64 zmm0_1 zmm15_1;
xor zmm15_2@uint64 zmm0_2 zmm15_2;
xor zmm15_3@uint64 zmm0_3 zmm15_3;
xor zmm15_4@uint64 zmm0_4 zmm15_4;
xor zmm15_5@uint64 zmm0_5 zmm15_5;
xor zmm15_6@uint64 zmm0_6 zmm15_6;
xor zmm15_7@uint64 zmm0_7 zmm15_7;
(* vpxord %zmm20,%zmm10,%zmm20                     #! PC = 0x55555558d394 *)
xor zmm20_0@uint64 zmm10_0 zmm20_0;
xor zmm20_1@uint64 zmm10_1 zmm20_1;
xor zmm20_2@uint64 zmm10_2 zmm20_2;
xor zmm20_3@uint64 zmm10_3 zmm20_3;
xor zmm20_4@uint64 zmm10_4 zmm20_4;
xor zmm20_5@uint64 zmm10_5 zmm20_5;
xor zmm20_6@uint64 zmm10_6 zmm20_6;
xor zmm20_7@uint64 zmm10_7 zmm20_7;
(* vpxord %zmm22,%zmm17,%zmm22                     #! PC = 0x55555558d39a *)
xor zmm22_0@uint64 zmm17_0 zmm22_0;
xor zmm22_1@uint64 zmm17_1 zmm22_1;
xor zmm22_2@uint64 zmm17_2 zmm22_2;
xor zmm22_3@uint64 zmm17_3 zmm22_3;
xor zmm22_4@uint64 zmm17_4 zmm22_4;
xor zmm22_5@uint64 zmm17_5 zmm22_5;
xor zmm22_6@uint64 zmm17_6 zmm22_6;
xor zmm22_7@uint64 zmm17_7 zmm22_7;
(* vpxord %zmm28,%zmm10,%zmm28                     #! PC = 0x55555558d3a0 *)
xor zmm28_0@uint64 zmm10_0 zmm28_0;
xor zmm28_1@uint64 zmm10_1 zmm28_1;
xor zmm28_2@uint64 zmm10_2 zmm28_2;
xor zmm28_3@uint64 zmm10_3 zmm28_3;
xor zmm28_4@uint64 zmm10_4 zmm28_4;
xor zmm28_5@uint64 zmm10_5 zmm28_5;
xor zmm28_6@uint64 zmm10_6 zmm28_6;
xor zmm28_7@uint64 zmm10_7 zmm28_7;
(* vpxord %zmm8,%zmm17,%zmm8                       #! PC = 0x55555558d3a6 *)
xor zmm8_0@uint64 zmm17_0 zmm8_0;
xor zmm8_1@uint64 zmm17_1 zmm8_1;
xor zmm8_2@uint64 zmm17_2 zmm8_2;
xor zmm8_3@uint64 zmm17_3 zmm8_3;
xor zmm8_4@uint64 zmm17_4 zmm8_4;
xor zmm8_5@uint64 zmm17_5 zmm8_5;
xor zmm8_6@uint64 zmm17_6 zmm8_6;
xor zmm8_7@uint64 zmm17_7 zmm8_7;
(* vprolq $0x1,%zmm28,%zmm28                       #! PC = 0x55555558d3ac *)
rol zmm28_0 zmm28_0 0x1;
rol zmm28_1 zmm28_1 0x1;
rol zmm28_2 zmm28_2 0x1;
rol zmm28_3 zmm28_3 0x1;
rol zmm28_4 zmm28_4 0x1;
rol zmm28_5 zmm28_5 0x1;
rol zmm28_6 zmm28_6 0x1;
rol zmm28_7 zmm28_7 0x1;
(* vprolq $0x6,%zmm8,%zmm8                         #! PC = 0x55555558d3b3 *)
rol zmm8_0 zmm8_0 0x6;
rol zmm8_1 zmm8_1 0x6;
rol zmm8_2 zmm8_2 0x6;
rol zmm8_3 zmm8_3 0x6;
rol zmm8_4 zmm8_4 0x6;
rol zmm8_5 zmm8_5 0x6;
rol zmm8_6 zmm8_6 0x6;
rol zmm8_7 zmm8_7 0x6;
(* vprolq $0x3,%zmm15,%zmm15                       #! PC = 0x55555558d3ba *)
rol zmm15_0 zmm15_0 0x3;
rol zmm15_1 zmm15_1 0x3;
rol zmm15_2 zmm15_2 0x3;
rol zmm15_3 zmm15_3 0x3;
rol zmm15_4 zmm15_4 0x3;
rol zmm15_5 zmm15_5 0x3;
rol zmm15_6 zmm15_6 0x3;
rol zmm15_7 zmm15_7 0x3;
(* vprorq $0x13,%zmm20,%zmm20                      #! PC = 0x55555558d3c1 *)
ror zmm20_0 zmm20_0 0x13;
ror zmm20_1 zmm20_1 0x13;
ror zmm20_2 zmm20_2 0x13;
ror zmm20_3 zmm20_3 0x13;
ror zmm20_4 zmm20_4 0x13;
ror zmm20_5 zmm20_5 0x13;
ror zmm20_6 zmm20_6 0x13;
ror zmm20_7 zmm20_7 0x13;
(* vprorq $0x3,%zmm22,%zmm22                       #! PC = 0x55555558d3c8 *)
ror zmm22_0 zmm22_0 0x3;
ror zmm22_1 zmm22_1 0x3;
ror zmm22_2 zmm22_2 0x3;
ror zmm22_3 zmm22_3 0x3;
ror zmm22_4 zmm22_4 0x3;
ror zmm22_5 zmm22_5 0x3;
ror zmm22_6 zmm22_6 0x3;
ror zmm22_7 zmm22_7 0x3;
(* vpxord %zmm19,%zmm0,%zmm19                      #! PC = 0x55555558d3cf *)
xor zmm19_0@uint64 zmm0_0 zmm19_0;
xor zmm19_1@uint64 zmm0_1 zmm19_1;
xor zmm19_2@uint64 zmm0_2 zmm19_2;
xor zmm19_3@uint64 zmm0_3 zmm19_3;
xor zmm19_4@uint64 zmm0_4 zmm19_4;
xor zmm19_5@uint64 zmm0_5 zmm19_5;
xor zmm19_6@uint64 zmm0_6 zmm19_6;
xor zmm19_7@uint64 zmm0_7 zmm19_7;
(* vpxord %zmm2,%zmm18,%zmm2                       #! PC = 0x55555558d3d5 *)
xor zmm2_0@uint64 zmm18_0 zmm2_0;
xor zmm2_1@uint64 zmm18_1 zmm2_1;
xor zmm2_2@uint64 zmm18_2 zmm2_2;
xor zmm2_3@uint64 zmm18_3 zmm2_3;
xor zmm2_4@uint64 zmm18_4 zmm2_4;
xor zmm2_5@uint64 zmm18_5 zmm2_5;
xor zmm2_6@uint64 zmm18_6 zmm2_6;
xor zmm2_7@uint64 zmm18_7 zmm2_7;
(* vpxord %zmm1,%zmm12,%zmm1                       #! PC = 0x55555558d3db *)
xor zmm1_0@uint64 zmm12_0 zmm1_0;
xor zmm1_1@uint64 zmm12_1 zmm1_1;
xor zmm1_2@uint64 zmm12_2 zmm1_2;
xor zmm1_3@uint64 zmm12_3 zmm1_3;
xor zmm1_4@uint64 zmm12_4 zmm1_4;
xor zmm1_5@uint64 zmm12_5 zmm1_5;
xor zmm1_6@uint64 zmm12_6 zmm1_6;
xor zmm1_7@uint64 zmm12_7 zmm1_7;
(* vpxord %zmm21,%zmm0,%zmm21                      #! PC = 0x55555558d3e1 *)
xor zmm21_0@uint64 zmm0_0 zmm21_0;
xor zmm21_1@uint64 zmm0_1 zmm21_1;
xor zmm21_2@uint64 zmm0_2 zmm21_2;
xor zmm21_3@uint64 zmm0_3 zmm21_3;
xor zmm21_4@uint64 zmm0_4 zmm21_4;
xor zmm21_5@uint64 zmm0_5 zmm21_5;
xor zmm21_6@uint64 zmm0_6 zmm21_6;
xor zmm21_7@uint64 zmm0_7 zmm21_7;
(* vpxord %zmm14,%zmm12,%zmm14                     #! PC = 0x55555558d3e7 *)
xor zmm14_0@uint64 zmm12_0 zmm14_0;
xor zmm14_1@uint64 zmm12_1 zmm14_1;
xor zmm14_2@uint64 zmm12_2 zmm14_2;
xor zmm14_3@uint64 zmm12_3 zmm14_3;
xor zmm14_4@uint64 zmm12_4 zmm14_4;
xor zmm14_5@uint64 zmm12_5 zmm14_5;
xor zmm14_6@uint64 zmm12_6 zmm14_6;
xor zmm14_7@uint64 zmm12_7 zmm14_7;
(* vprorq $0x1c,%zmm21,%zmm21                      #! PC = 0x55555558d3ed *)
ror zmm21_0 zmm21_0 0x1c;
ror zmm21_1 zmm21_1 0x1c;
ror zmm21_2 zmm21_2 0x1c;
ror zmm21_3 zmm21_3 0x1c;
ror zmm21_4 zmm21_4 0x1c;
ror zmm21_5 zmm21_5 0x1c;
ror zmm21_6 zmm21_6 0x1c;
ror zmm21_7 zmm21_7 0x1c;
(* vprolq $0x1b,%zmm14,%zmm14                      #! PC = 0x55555558d3f4 *)
rol zmm14_0 zmm14_0 0x1b;
rol zmm14_1 zmm14_1 0x1b;
rol zmm14_2 zmm14_2 0x1b;
rol zmm14_3 zmm14_3 0x1b;
rol zmm14_4 zmm14_4 0x1b;
rol zmm14_5 zmm14_5 0x1b;
rol zmm14_6 zmm14_6 0x1b;
rol zmm14_7 zmm14_7 0x1b;
(* vprolq $0x12,%zmm19,%zmm19                      #! PC = 0x55555558d3fb *)
rol zmm19_0 zmm19_0 0x12;
rol zmm19_1 zmm19_1 0x12;
rol zmm19_2 zmm19_2 0x12;
rol zmm19_3 zmm19_3 0x12;
rol zmm19_4 zmm19_4 0x12;
rol zmm19_5 zmm19_5 0x12;
rol zmm19_6 zmm19_6 0x12;
rol zmm19_7 zmm19_7 0x12;
(* vprolq $0x19,%zmm2,%zmm2                        #! PC = 0x55555558d402 *)
rol zmm2_0 zmm2_0 0x19;
rol zmm2_1 zmm2_1 0x19;
rol zmm2_2 zmm2_2 0x19;
rol zmm2_3 zmm2_3 0x19;
rol zmm2_4 zmm2_4 0x19;
rol zmm2_5 zmm2_5 0x19;
rol zmm2_6 zmm2_6 0x19;
rol zmm2_7 zmm2_7 0x19;
(* vprolq $0x8,%zmm1,%zmm1                         #! PC = 0x55555558d409 *)
rol zmm1_0 zmm1_0 0x8;
rol zmm1_1 zmm1_1 0x8;
rol zmm1_2 zmm1_2 0x8;
rol zmm1_3 zmm1_3 0x8;
rol zmm1_4 zmm1_4 0x8;
rol zmm1_5 zmm1_5 0x8;
rol zmm1_6 zmm1_6 0x8;
rol zmm1_7 zmm1_7 0x8;
(* vpxord %zmm9,%zmm10,%zmm9                       #! PC = 0x55555558d410 *)
xor zmm9_0@uint64 zmm10_0 zmm9_0;
xor zmm9_1@uint64 zmm10_1 zmm9_1;
xor zmm9_2@uint64 zmm10_2 zmm9_2;
xor zmm9_3@uint64 zmm10_3 zmm9_3;
xor zmm9_4@uint64 zmm10_4 zmm9_4;
xor zmm9_5@uint64 zmm10_5 zmm9_5;
xor zmm9_6@uint64 zmm10_6 zmm9_6;
xor zmm9_7@uint64 zmm10_7 zmm9_7;
(* vpxord %zmm11,%zmm17,%zmm11                     #! PC = 0x55555558d416 *)
xor zmm11_0@uint64 zmm17_0 zmm11_0;
xor zmm11_1@uint64 zmm17_1 zmm11_1;
xor zmm11_2@uint64 zmm17_2 zmm11_2;
xor zmm11_3@uint64 zmm17_3 zmm11_3;
xor zmm11_4@uint64 zmm17_4 zmm11_4;
xor zmm11_5@uint64 zmm17_5 zmm11_5;
xor zmm11_6@uint64 zmm17_6 zmm11_6;
xor zmm11_7@uint64 zmm17_7 zmm11_7;
(* vpxord %zmm5,%zmm18,%zmm5                       #! PC = 0x55555558d41c *)
xor zmm5_0@uint64 zmm18_0 zmm5_0;
xor zmm5_1@uint64 zmm18_1 zmm5_1;
xor zmm5_2@uint64 zmm18_2 zmm5_2;
xor zmm5_3@uint64 zmm18_3 zmm5_3;
xor zmm5_4@uint64 zmm18_4 zmm5_4;
xor zmm5_5@uint64 zmm18_5 zmm5_5;
xor zmm5_6@uint64 zmm18_6 zmm5_6;
xor zmm5_7@uint64 zmm18_7 zmm5_7;
(* vpxord %zmm4,%zmm17,%zmm17                      #! PC = 0x55555558d422 *)
xor zmm17_0@uint64 zmm17_0 zmm4_0;
xor zmm17_1@uint64 zmm17_1 zmm4_1;
xor zmm17_2@uint64 zmm17_2 zmm4_2;
xor zmm17_3@uint64 zmm17_3 zmm4_3;
xor zmm17_4@uint64 zmm17_4 zmm4_4;
xor zmm17_5@uint64 zmm17_5 zmm4_5;
xor zmm17_6@uint64 zmm17_6 zmm4_6;
xor zmm17_7@uint64 zmm17_7 zmm4_7;
(* vpxord %zmm27,%zmm18,%zmm18                     #! PC = 0x55555558d428 *)
xor zmm18_0@uint64 zmm18_0 zmm27_0;
xor zmm18_1@uint64 zmm18_1 zmm27_1;
xor zmm18_2@uint64 zmm18_2 zmm27_2;
xor zmm18_3@uint64 zmm18_3 zmm27_3;
xor zmm18_4@uint64 zmm18_4 zmm27_4;
xor zmm18_5@uint64 zmm18_5 zmm27_5;
xor zmm18_6@uint64 zmm18_6 zmm27_6;
xor zmm18_7@uint64 zmm18_7 zmm27_7;
(* vpxord %zmm25,%zmm0,%zmm25                      #! PC = 0x55555558d42e *)
xor zmm25_0@uint64 zmm0_0 zmm25_0;
xor zmm25_1@uint64 zmm0_1 zmm25_1;
xor zmm25_2@uint64 zmm0_2 zmm25_2;
xor zmm25_3@uint64 zmm0_3 zmm25_3;
xor zmm25_4@uint64 zmm0_4 zmm25_4;
xor zmm25_5@uint64 zmm0_5 zmm25_5;
xor zmm25_6@uint64 zmm0_6 zmm25_6;
xor zmm25_7@uint64 zmm0_7 zmm25_7;
(* vprorq $0x2,%zmm17,%zmm17                       #! PC = 0x55555558d434 *)
ror zmm17_0 zmm17_0 0x2;
ror zmm17_1 zmm17_1 0x2;
ror zmm17_2 zmm17_2 0x2;
ror zmm17_3 zmm17_3 0x2;
ror zmm17_4 zmm17_4 0x2;
ror zmm17_5 zmm17_5 0x2;
ror zmm17_6 zmm17_6 0x2;
ror zmm17_7 zmm17_7 0x2;
(* vprorq $0x9,%zmm18,%zmm18                       #! PC = 0x55555558d43b *)
ror zmm18_0 zmm18_0 0x9;
ror zmm18_1 zmm18_1 0x9;
ror zmm18_2 zmm18_2 0x9;
ror zmm18_3 zmm18_3 0x9;
ror zmm18_4 zmm18_4 0x9;
ror zmm18_5 zmm18_5 0x9;
ror zmm18_6 zmm18_6 0x9;
ror zmm18_7 zmm18_7 0x9;
(* vprolq $0xa,%zmm9,%zmm9                         #! PC = 0x55555558d442 *)
rol zmm9_0 zmm9_0 0xa;
rol zmm9_1 zmm9_1 0xa;
rol zmm9_2 zmm9_2 0xa;
rol zmm9_3 zmm9_3 0xa;
rol zmm9_4 zmm9_4 0xa;
rol zmm9_5 zmm9_5 0xa;
rol zmm9_6 zmm9_6 0xa;
rol zmm9_7 zmm9_7 0xa;
(* vprolq $0xf,%zmm11,%zmm11                       #! PC = 0x55555558d449 *)
rol zmm11_0 zmm11_0 0xf;
rol zmm11_1 zmm11_1 0xf;
rol zmm11_2 zmm11_2 0xf;
rol zmm11_3 zmm11_3 0xf;
rol zmm11_4 zmm11_4 0xf;
rol zmm11_5 zmm11_5 0xf;
rol zmm11_6 zmm11_6 0xf;
rol zmm11_7 zmm11_7 0xf;
(* vprorq $0x8,%zmm5,%zmm5                         #! PC = 0x55555558d450 *)
ror zmm5_0 zmm5_0 0x8;
ror zmm5_1 zmm5_1 0x8;
ror zmm5_2 zmm5_2 0x8;
ror zmm5_3 zmm5_3 0x8;
ror zmm5_4 zmm5_4 0x8;
ror zmm5_5 zmm5_5 0x8;
ror zmm5_6 zmm5_6 0x8;
ror zmm5_7 zmm5_7 0x8;
(* vpxord %zmm31,%zmm0,%zmm0                       #! PC = 0x55555558d457 *)
xor zmm0_0@uint64 zmm0_0 zmm31_0;
xor zmm0_1@uint64 zmm0_1 zmm31_1;
xor zmm0_2@uint64 zmm0_2 zmm31_2;
xor zmm0_3@uint64 zmm0_3 zmm31_3;
xor zmm0_4@uint64 zmm0_4 zmm31_4;
xor zmm0_5@uint64 zmm0_5 zmm31_5;
xor zmm0_6@uint64 zmm0_6 zmm31_6;
xor zmm0_7@uint64 zmm0_7 zmm31_7;
(* vpxord %zmm30,%zmm10,%zmm10                     #! PC = 0x55555558d45d *)
xor zmm10_0@uint64 zmm10_0 zmm30_0;
xor zmm10_1@uint64 zmm10_1 zmm30_1;
xor zmm10_2@uint64 zmm10_2 zmm30_2;
xor zmm10_3@uint64 zmm10_3 zmm30_3;
xor zmm10_4@uint64 zmm10_4 zmm30_4;
xor zmm10_5@uint64 zmm10_5 zmm30_5;
xor zmm10_6@uint64 zmm10_6 zmm30_6;
xor zmm10_7@uint64 zmm10_7 zmm30_7;
(* vpxord %zmm16,%zmm12,%zmm12                     #! PC = 0x55555558d463 *)
xor zmm12_0@uint64 zmm12_0 zmm16_0;
xor zmm12_1@uint64 zmm12_1 zmm16_1;
xor zmm12_2@uint64 zmm12_2 zmm16_2;
xor zmm12_3@uint64 zmm12_3 zmm16_3;
xor zmm12_4@uint64 zmm12_4 zmm16_4;
xor zmm12_5@uint64 zmm12_5 zmm16_5;
xor zmm12_6@uint64 zmm12_6 zmm16_6;
xor zmm12_7@uint64 zmm12_7 zmm16_7;
(* vprorq $0x17,%zmm0,%zmm0                        #! PC = 0x55555558d469 *)
ror zmm0_0 zmm0_0 0x17;
ror zmm0_1 zmm0_1 0x17;
ror zmm0_2 zmm0_2 0x17;
ror zmm0_3 zmm0_3 0x17;
ror zmm0_4 zmm0_4 0x17;
ror zmm0_5 zmm0_5 0x17;
ror zmm0_6 zmm0_6 0x17;
ror zmm0_7 zmm0_7 0x17;
(* vprolq $0x2,%zmm10,%zmm10                       #! PC = 0x55555558d470 *)
rol zmm10_0 zmm10_0 0x2;
rol zmm10_1 zmm10_1 0x2;
rol zmm10_2 zmm10_2 0x2;
rol zmm10_3 zmm10_3 0x2;
rol zmm10_4 zmm10_4 0x2;
rol zmm10_5 zmm10_5 0x2;
rol zmm10_6 zmm10_6 0x2;
rol zmm10_7 zmm10_7 0x2;
(* vprorq $0x19,%zmm12,%zmm12                      #! PC = 0x55555558d477 *)
ror zmm12_0 zmm12_0 0x19;
ror zmm12_1 zmm12_1 0x19;
ror zmm12_2 zmm12_2 0x19;
ror zmm12_3 zmm12_3 0x19;
ror zmm12_4 zmm12_4 0x19;
ror zmm12_5 zmm12_5 0x19;
ror zmm12_6 zmm12_6 0x19;
ror zmm12_7 zmm12_7 0x19;
(* vmovdqa64 %zmm25,%zmm24                         #! PC = 0x55555558d47e *)
mov zmm24_0 zmm25_0;
mov zmm24_1 zmm25_1;
mov zmm24_2 zmm25_2;
mov zmm24_3 zmm25_3;
mov zmm24_4 zmm25_4;
mov zmm24_5 zmm25_5;
mov zmm24_6 zmm25_6;
mov zmm24_7 zmm25_7;
(* vmovdqa64 %zmm26,%zmm23                         #! PC = 0x55555558d484 *)
mov zmm23_0 zmm26_0;
mov zmm23_1 zmm26_1;
mov zmm23_2 zmm26_2;
mov zmm23_3 zmm26_3;
mov zmm23_4 zmm26_4;
mov zmm23_5 zmm26_5;
mov zmm23_6 zmm26_6;
mov zmm23_7 zmm26_7;
(* vpternlogq $0xd2,%zmm6,%zmm3,%zmm23             #! PC = 0x55555558d48a *)
mov table 0xd2@uint8;
inline vpternlogq64 (zmm23_0, zmm3_0, zmm6_0, table);
inline vpternlogq64 (zmm23_1, zmm3_1, zmm6_1, table);
inline vpternlogq64 (zmm23_2, zmm3_2, zmm6_2, table);
inline vpternlogq64 (zmm23_3, zmm3_3, zmm6_3, table);
inline vpternlogq64 (zmm23_4, zmm3_4, zmm6_4, table);
inline vpternlogq64 (zmm23_5, zmm3_5, zmm6_5, table);
inline vpternlogq64 (zmm23_6, zmm3_6, zmm6_6, table);
inline vpternlogq64 (zmm23_7, zmm3_7, zmm6_7, table);
(* vpternlogq $0xd2,%zmm3,%zmm26,%zmm24            #! PC = 0x55555558d491 *)
mov table 0xd2@uint8;
inline vpternlogq64 (zmm24_0, zmm26_0, zmm3_0, table);
inline vpternlogq64 (zmm24_1, zmm26_1, zmm3_1, table);
inline vpternlogq64 (zmm24_2, zmm26_2, zmm3_2, table);
inline vpternlogq64 (zmm24_3, zmm26_3, zmm3_3, table);
inline vpternlogq64 (zmm24_4, zmm26_4, zmm3_4, table);
inline vpternlogq64 (zmm24_5, zmm26_5, zmm3_5, table);
inline vpternlogq64 (zmm24_6, zmm26_6, zmm3_6, table);
inline vpternlogq64 (zmm24_7, zmm26_7, zmm3_7, table);
(* vpternlogq $0xd2,%zmm29,%zmm6,%zmm3             #! PC = 0x55555558d498 *)
mov table 0xd2@uint8;
inline vpternlogq64 (zmm3_0, zmm6_0, zmm29_0, table);
inline vpternlogq64 (zmm3_1, zmm6_1, zmm29_1, table);
inline vpternlogq64 (zmm3_2, zmm6_2, zmm29_2, table);
inline vpternlogq64 (zmm3_3, zmm6_3, zmm29_3, table);
inline vpternlogq64 (zmm3_4, zmm6_4, zmm29_4, table);
inline vpternlogq64 (zmm3_5, zmm6_5, zmm29_5, table);
inline vpternlogq64 (zmm3_6, zmm6_6, zmm29_6, table);
inline vpternlogq64 (zmm3_7, zmm6_7, zmm29_7, table);
(* vpternlogq $0xd2,%zmm25,%zmm29,%zmm6            #! PC = 0x55555558d49f *)
mov table 0xd2@uint8;
inline vpternlogq64 (zmm6_0, zmm29_0, zmm25_0, table);
inline vpternlogq64 (zmm6_1, zmm29_1, zmm25_1, table);
inline vpternlogq64 (zmm6_2, zmm29_2, zmm25_2, table);
inline vpternlogq64 (zmm6_3, zmm29_3, zmm25_3, table);
inline vpternlogq64 (zmm6_4, zmm29_4, zmm25_4, table);
inline vpternlogq64 (zmm6_5, zmm29_5, zmm25_5, table);
inline vpternlogq64 (zmm6_6, zmm29_6, zmm25_6, table);
inline vpternlogq64 (zmm6_7, zmm29_7, zmm25_7, table);
(* vpternlogq $0xd2,%zmm26,%zmm25,%zmm29           #! PC = 0x55555558d4a6 *)
mov table 0xd2@uint8;
inline vpternlogq64 (zmm29_0, zmm25_0, zmm26_0, table);
inline vpternlogq64 (zmm29_1, zmm25_1, zmm26_1, table);
inline vpternlogq64 (zmm29_2, zmm25_2, zmm26_2, table);
inline vpternlogq64 (zmm29_3, zmm25_3, zmm26_3, table);
inline vpternlogq64 (zmm29_4, zmm25_4, zmm26_4, table);
inline vpternlogq64 (zmm29_5, zmm25_5, zmm26_5, table);
inline vpternlogq64 (zmm29_6, zmm25_6, zmm26_6, table);
inline vpternlogq64 (zmm29_7, zmm25_7, zmm26_7, table);
(* vpbroadcastq %rdi,%zmm25                        #! PC = 0x55555558d4ad *)
mov zmm25_0 rdi;
mov zmm25_1 rdi;
mov zmm25_2 rdi;
mov zmm25_3 rdi;
mov zmm25_4 rdi;
mov zmm25_5 rdi;
mov zmm25_6 rdi;
mov zmm25_7 rdi;
(* vpxord %zmm25,%zmm24,%zmm24                     #! PC = 0x55555558d4b3 *)
xor zmm24_0@uint64 zmm24_0 zmm25_0;
xor zmm24_1@uint64 zmm24_1 zmm25_1;
xor zmm24_2@uint64 zmm24_2 zmm25_2;
xor zmm24_3@uint64 zmm24_3 zmm25_3;
xor zmm24_4@uint64 zmm24_4 zmm25_4;
xor zmm24_5@uint64 zmm24_5 zmm25_5;
xor zmm24_6@uint64 zmm24_6 zmm25_6;
xor zmm24_7@uint64 zmm24_7 zmm25_7;
(* vmovdqa64 %zmm13,%zmm26                         #! PC = 0x55555558d4b9 *)
mov zmm26_0 zmm13_0;
mov zmm26_1 zmm13_1;
mov zmm26_2 zmm13_2;
mov zmm26_3 zmm13_3;
mov zmm26_4 zmm13_4;
mov zmm26_5 zmm13_5;
mov zmm26_6 zmm13_6;
mov zmm26_7 zmm13_7;
(* vmovdqa64 %zmm7,%zmm25                          #! PC = 0x55555558d4bf *)
mov zmm25_0 zmm7_0;
mov zmm25_1 zmm7_1;
mov zmm25_2 zmm7_2;
mov zmm25_3 zmm7_3;
mov zmm25_4 zmm7_4;
mov zmm25_5 zmm7_5;
mov zmm25_6 zmm7_6;
mov zmm25_7 zmm7_7;
(* vpternlogq $0xd2,%zmm15,%zmm13,%zmm25           #! PC = 0x55555558d4c5 *)
mov table 0xd2@uint8;
inline vpternlogq64 (zmm25_0, zmm13_0, zmm15_0, table);
inline vpternlogq64 (zmm25_1, zmm13_1, zmm15_1, table);
inline vpternlogq64 (zmm25_2, zmm13_2, zmm15_2, table);
inline vpternlogq64 (zmm25_3, zmm13_3, zmm15_3, table);
inline vpternlogq64 (zmm25_4, zmm13_4, zmm15_4, table);
inline vpternlogq64 (zmm25_5, zmm13_5, zmm15_5, table);
inline vpternlogq64 (zmm25_6, zmm13_6, zmm15_6, table);
inline vpternlogq64 (zmm25_7, zmm13_7, zmm15_7, table);
(* vpternlogq $0xd2,%zmm20,%zmm15,%zmm26           #! PC = 0x55555558d4cc *)
mov table 0xd2@uint8;
inline vpternlogq64 (zmm26_0, zmm15_0, zmm20_0, table);
inline vpternlogq64 (zmm26_1, zmm15_1, zmm20_1, table);
inline vpternlogq64 (zmm26_2, zmm15_2, zmm20_2, table);
inline vpternlogq64 (zmm26_3, zmm15_3, zmm20_3, table);
inline vpternlogq64 (zmm26_4, zmm15_4, zmm20_4, table);
inline vpternlogq64 (zmm26_5, zmm15_5, zmm20_5, table);
inline vpternlogq64 (zmm26_6, zmm15_6, zmm20_6, table);
inline vpternlogq64 (zmm26_7, zmm15_7, zmm20_7, table);
(* vpternlogq $0xd2,%zmm22,%zmm20,%zmm15           #! PC = 0x55555558d4d3 *)
mov table 0xd2@uint8;
inline vpternlogq64 (zmm15_0, zmm20_0, zmm22_0, table);
inline vpternlogq64 (zmm15_1, zmm20_1, zmm22_1, table);
inline vpternlogq64 (zmm15_2, zmm20_2, zmm22_2, table);
inline vpternlogq64 (zmm15_3, zmm20_3, zmm22_3, table);
inline vpternlogq64 (zmm15_4, zmm20_4, zmm22_4, table);
inline vpternlogq64 (zmm15_5, zmm20_5, zmm22_5, table);
inline vpternlogq64 (zmm15_6, zmm20_6, zmm22_6, table);
inline vpternlogq64 (zmm15_7, zmm20_7, zmm22_7, table);
(* vpternlogq $0xd2,%zmm7,%zmm22,%zmm20            #! PC = 0x55555558d4da *)
mov table 0xd2@uint8;
inline vpternlogq64 (zmm20_0, zmm22_0, zmm7_0, table);
inline vpternlogq64 (zmm20_1, zmm22_1, zmm7_1, table);
inline vpternlogq64 (zmm20_2, zmm22_2, zmm7_2, table);
inline vpternlogq64 (zmm20_3, zmm22_3, zmm7_3, table);
inline vpternlogq64 (zmm20_4, zmm22_4, zmm7_4, table);
inline vpternlogq64 (zmm20_5, zmm22_5, zmm7_5, table);
inline vpternlogq64 (zmm20_6, zmm22_6, zmm7_6, table);
inline vpternlogq64 (zmm20_7, zmm22_7, zmm7_7, table);
(* vpternlogq $0xd2,%zmm13,%zmm7,%zmm22            #! PC = 0x55555558d4e1 *)
mov table 0xd2@uint8;
inline vpternlogq64 (zmm22_0, zmm7_0, zmm13_0, table);
inline vpternlogq64 (zmm22_1, zmm7_1, zmm13_1, table);
inline vpternlogq64 (zmm22_2, zmm7_2, zmm13_2, table);
inline vpternlogq64 (zmm22_3, zmm7_3, zmm13_3, table);
inline vpternlogq64 (zmm22_4, zmm7_4, zmm13_4, table);
inline vpternlogq64 (zmm22_5, zmm7_5, zmm13_5, table);
inline vpternlogq64 (zmm22_6, zmm7_6, zmm13_6, table);
inline vpternlogq64 (zmm22_7, zmm7_7, zmm13_7, table);
(* vmovdqa64 %zmm28,%zmm13                         #! PC = 0x55555558d4e8 *)
mov zmm13_0 zmm28_0;
mov zmm13_1 zmm28_1;
mov zmm13_2 zmm28_2;
mov zmm13_3 zmm28_3;
mov zmm13_4 zmm28_4;
mov zmm13_5 zmm28_5;
mov zmm13_6 zmm28_6;
mov zmm13_7 zmm28_7;
(* vmovdqa64 %zmm8,%zmm7                           #! PC = 0x55555558d4ee *)
mov zmm7_0 zmm8_0;
mov zmm7_1 zmm8_1;
mov zmm7_2 zmm8_2;
mov zmm7_3 zmm8_3;
mov zmm7_4 zmm8_4;
mov zmm7_5 zmm8_5;
mov zmm7_6 zmm8_6;
mov zmm7_7 zmm8_7;
(* vpternlogq $0xd2,%zmm2,%zmm8,%zmm13             #! PC = 0x55555558d4f4 *)
mov table 0xd2@uint8;
inline vpternlogq64 (zmm13_0, zmm8_0, zmm2_0, table);
inline vpternlogq64 (zmm13_1, zmm8_1, zmm2_1, table);
inline vpternlogq64 (zmm13_2, zmm8_2, zmm2_2, table);
inline vpternlogq64 (zmm13_3, zmm8_3, zmm2_3, table);
inline vpternlogq64 (zmm13_4, zmm8_4, zmm2_4, table);
inline vpternlogq64 (zmm13_5, zmm8_5, zmm2_5, table);
inline vpternlogq64 (zmm13_6, zmm8_6, zmm2_6, table);
inline vpternlogq64 (zmm13_7, zmm8_7, zmm2_7, table);
(* vpternlogq $0xd2,%zmm1,%zmm2,%zmm7              #! PC = 0x55555558d4fb *)
mov table 0xd2@uint8;
inline vpternlogq64 (zmm7_0, zmm2_0, zmm1_0, table);
inline vpternlogq64 (zmm7_1, zmm2_1, zmm1_1, table);
inline vpternlogq64 (zmm7_2, zmm2_2, zmm1_2, table);
inline vpternlogq64 (zmm7_3, zmm2_3, zmm1_3, table);
inline vpternlogq64 (zmm7_4, zmm2_4, zmm1_4, table);
inline vpternlogq64 (zmm7_5, zmm2_5, zmm1_5, table);
inline vpternlogq64 (zmm7_6, zmm2_6, zmm1_6, table);
inline vpternlogq64 (zmm7_7, zmm2_7, zmm1_7, table);
(* vpternlogq $0xd2,%zmm19,%zmm1,%zmm2             #! PC = 0x55555558d502 *)
mov table 0xd2@uint8;
inline vpternlogq64 (zmm2_0, zmm1_0, zmm19_0, table);
inline vpternlogq64 (zmm2_1, zmm1_1, zmm19_1, table);
inline vpternlogq64 (zmm2_2, zmm1_2, zmm19_2, table);
inline vpternlogq64 (zmm2_3, zmm1_3, zmm19_3, table);
inline vpternlogq64 (zmm2_4, zmm1_4, zmm19_4, table);
inline vpternlogq64 (zmm2_5, zmm1_5, zmm19_5, table);
inline vpternlogq64 (zmm2_6, zmm1_6, zmm19_6, table);
inline vpternlogq64 (zmm2_7, zmm1_7, zmm19_7, table);
(* vpternlogq $0xd2,%zmm28,%zmm19,%zmm1            #! PC = 0x55555558d509 *)
mov table 0xd2@uint8;
inline vpternlogq64 (zmm1_0, zmm19_0, zmm28_0, table);
inline vpternlogq64 (zmm1_1, zmm19_1, zmm28_1, table);
inline vpternlogq64 (zmm1_2, zmm19_2, zmm28_2, table);
inline vpternlogq64 (zmm1_3, zmm19_3, zmm28_3, table);
inline vpternlogq64 (zmm1_4, zmm19_4, zmm28_4, table);
inline vpternlogq64 (zmm1_5, zmm19_5, zmm28_5, table);
inline vpternlogq64 (zmm1_6, zmm19_6, zmm28_6, table);
inline vpternlogq64 (zmm1_7, zmm19_7, zmm28_7, table);
(* vpternlogq $0xd2,%zmm8,%zmm28,%zmm19            #! PC = 0x55555558d510 *)
mov table 0xd2@uint8;
inline vpternlogq64 (zmm19_0, zmm28_0, zmm8_0, table);
inline vpternlogq64 (zmm19_1, zmm28_1, zmm8_1, table);
inline vpternlogq64 (zmm19_2, zmm28_2, zmm8_2, table);
inline vpternlogq64 (zmm19_3, zmm28_3, zmm8_3, table);
inline vpternlogq64 (zmm19_4, zmm28_4, zmm8_4, table);
inline vpternlogq64 (zmm19_5, zmm28_5, zmm8_5, table);
inline vpternlogq64 (zmm19_6, zmm28_6, zmm8_6, table);
inline vpternlogq64 (zmm19_7, zmm28_7, zmm8_7, table);
(* vmovdqa64 %zmm14,%zmm28                         #! PC = 0x55555558d517 *)
mov zmm28_0 zmm14_0;
mov zmm28_1 zmm14_1;
mov zmm28_2 zmm14_2;
mov zmm28_3 zmm14_3;
mov zmm28_4 zmm14_4;
mov zmm28_5 zmm14_5;
mov zmm28_6 zmm14_6;
mov zmm28_7 zmm14_7;
(* vmovdqa64 %zmm21,%zmm8                          #! PC = 0x55555558d51d *)
mov zmm8_0 zmm21_0;
mov zmm8_1 zmm21_1;
mov zmm8_2 zmm21_2;
mov zmm8_3 zmm21_3;
mov zmm8_4 zmm21_4;
mov zmm8_5 zmm21_5;
mov zmm8_6 zmm21_6;
mov zmm8_7 zmm21_7;
(* vpternlogq $0xd2,%zmm9,%zmm21,%zmm28            #! PC = 0x55555558d523 *)
mov table 0xd2@uint8;
inline vpternlogq64 (zmm28_0, zmm21_0, zmm9_0, table);
inline vpternlogq64 (zmm28_1, zmm21_1, zmm9_1, table);
inline vpternlogq64 (zmm28_2, zmm21_2, zmm9_2, table);
inline vpternlogq64 (zmm28_3, zmm21_3, zmm9_3, table);
inline vpternlogq64 (zmm28_4, zmm21_4, zmm9_4, table);
inline vpternlogq64 (zmm28_5, zmm21_5, zmm9_5, table);
inline vpternlogq64 (zmm28_6, zmm21_6, zmm9_6, table);
inline vpternlogq64 (zmm28_7, zmm21_7, zmm9_7, table);
(* vpternlogq $0xd2,%zmm11,%zmm9,%zmm8             #! PC = 0x55555558d52a *)
mov table 0xd2@uint8;
inline vpternlogq64 (zmm8_0, zmm9_0, zmm11_0, table);
inline vpternlogq64 (zmm8_1, zmm9_1, zmm11_1, table);
inline vpternlogq64 (zmm8_2, zmm9_2, zmm11_2, table);
inline vpternlogq64 (zmm8_3, zmm9_3, zmm11_3, table);
inline vpternlogq64 (zmm8_4, zmm9_4, zmm11_4, table);
inline vpternlogq64 (zmm8_5, zmm9_5, zmm11_5, table);
inline vpternlogq64 (zmm8_6, zmm9_6, zmm11_6, table);
inline vpternlogq64 (zmm8_7, zmm9_7, zmm11_7, table);
(* vmovdqa64 %zmm18,%zmm31                         #! PC = 0x55555558d531 *)
mov zmm31_0 zmm18_0;
mov zmm31_1 zmm18_1;
mov zmm31_2 zmm18_2;
mov zmm31_3 zmm18_3;
mov zmm31_4 zmm18_4;
mov zmm31_5 zmm18_5;
mov zmm31_6 zmm18_6;
mov zmm31_7 zmm18_7;
(* vpternlogq $0xd2,%zmm5,%zmm11,%zmm9             #! PC = 0x55555558d537 *)
mov table 0xd2@uint8;
inline vpternlogq64 (zmm9_0, zmm11_0, zmm5_0, table);
inline vpternlogq64 (zmm9_1, zmm11_1, zmm5_1, table);
inline vpternlogq64 (zmm9_2, zmm11_2, zmm5_2, table);
inline vpternlogq64 (zmm9_3, zmm11_3, zmm5_3, table);
inline vpternlogq64 (zmm9_4, zmm11_4, zmm5_4, table);
inline vpternlogq64 (zmm9_5, zmm11_5, zmm5_5, table);
inline vpternlogq64 (zmm9_6, zmm11_6, zmm5_6, table);
inline vpternlogq64 (zmm9_7, zmm11_7, zmm5_7, table);
(* vpternlogq $0xd2,%zmm14,%zmm5,%zmm11            #! PC = 0x55555558d53e *)
mov table 0xd2@uint8;
inline vpternlogq64 (zmm11_0, zmm5_0, zmm14_0, table);
inline vpternlogq64 (zmm11_1, zmm5_1, zmm14_1, table);
inline vpternlogq64 (zmm11_2, zmm5_2, zmm14_2, table);
inline vpternlogq64 (zmm11_3, zmm5_3, zmm14_3, table);
inline vpternlogq64 (zmm11_4, zmm5_4, zmm14_4, table);
inline vpternlogq64 (zmm11_5, zmm5_5, zmm14_5, table);
inline vpternlogq64 (zmm11_6, zmm5_6, zmm14_6, table);
inline vpternlogq64 (zmm11_7, zmm5_7, zmm14_7, table);
(* vpternlogq $0xd2,%zmm21,%zmm14,%zmm5            #! PC = 0x55555558d545 *)
mov table 0xd2@uint8;
inline vpternlogq64 (zmm5_0, zmm14_0, zmm21_0, table);
inline vpternlogq64 (zmm5_1, zmm14_1, zmm21_1, table);
inline vpternlogq64 (zmm5_2, zmm14_2, zmm21_2, table);
inline vpternlogq64 (zmm5_3, zmm14_3, zmm21_3, table);
inline vpternlogq64 (zmm5_4, zmm14_4, zmm21_4, table);
inline vpternlogq64 (zmm5_5, zmm14_5, zmm21_5, table);
inline vpternlogq64 (zmm5_6, zmm14_6, zmm21_6, table);
inline vpternlogq64 (zmm5_7, zmm14_7, zmm21_7, table);
(* vmovdqa64 %zmm17,%zmm21                         #! PC = 0x55555558d54c *)
mov zmm21_0 zmm17_0;
mov zmm21_1 zmm17_1;
mov zmm21_2 zmm17_2;
mov zmm21_3 zmm17_3;
mov zmm21_4 zmm17_4;
mov zmm21_5 zmm17_5;
mov zmm21_6 zmm17_6;
mov zmm21_7 zmm17_7;
(* vpternlogq $0xd2,%zmm0,%zmm12,%zmm31            #! PC = 0x55555558d552 *)
mov table 0xd2@uint8;
inline vpternlogq64 (zmm31_0, zmm12_0, zmm0_0, table);
inline vpternlogq64 (zmm31_1, zmm12_1, zmm0_1, table);
inline vpternlogq64 (zmm31_2, zmm12_2, zmm0_2, table);
inline vpternlogq64 (zmm31_3, zmm12_3, zmm0_3, table);
inline vpternlogq64 (zmm31_4, zmm12_4, zmm0_4, table);
inline vpternlogq64 (zmm31_5, zmm12_5, zmm0_5, table);
inline vpternlogq64 (zmm31_6, zmm12_6, zmm0_6, table);
inline vpternlogq64 (zmm31_7, zmm12_7, zmm0_7, table);
(* vpternlogq $0xd2,%zmm12,%zmm18,%zmm21           #! PC = 0x55555558d559 *)
mov table 0xd2@uint8;
inline vpternlogq64 (zmm21_0, zmm18_0, zmm12_0, table);
inline vpternlogq64 (zmm21_1, zmm18_1, zmm12_1, table);
inline vpternlogq64 (zmm21_2, zmm18_2, zmm12_2, table);
inline vpternlogq64 (zmm21_3, zmm18_3, zmm12_3, table);
inline vpternlogq64 (zmm21_4, zmm18_4, zmm12_4, table);
inline vpternlogq64 (zmm21_5, zmm18_5, zmm12_5, table);
inline vpternlogq64 (zmm21_6, zmm18_6, zmm12_6, table);
inline vpternlogq64 (zmm21_7, zmm18_7, zmm12_7, table);
(* vpternlogq $0xd2,%zmm10,%zmm0,%zmm12            #! PC = 0x55555558d560 *)
mov table 0xd2@uint8;
inline vpternlogq64 (zmm12_0, zmm0_0, zmm10_0, table);
inline vpternlogq64 (zmm12_1, zmm0_1, zmm10_1, table);
inline vpternlogq64 (zmm12_2, zmm0_2, zmm10_2, table);
inline vpternlogq64 (zmm12_3, zmm0_3, zmm10_3, table);
inline vpternlogq64 (zmm12_4, zmm0_4, zmm10_4, table);
inline vpternlogq64 (zmm12_5, zmm0_5, zmm10_5, table);
inline vpternlogq64 (zmm12_6, zmm0_6, zmm10_6, table);
inline vpternlogq64 (zmm12_7, zmm0_7, zmm10_7, table);
(* vpternlogq $0xd2,%zmm17,%zmm10,%zmm0            #! PC = 0x55555558d567 *)
mov table 0xd2@uint8;
inline vpternlogq64 (zmm0_0, zmm10_0, zmm17_0, table);
inline vpternlogq64 (zmm0_1, zmm10_1, zmm17_1, table);
inline vpternlogq64 (zmm0_2, zmm10_2, zmm17_2, table);
inline vpternlogq64 (zmm0_3, zmm10_3, zmm17_3, table);
inline vpternlogq64 (zmm0_4, zmm10_4, zmm17_4, table);
inline vpternlogq64 (zmm0_5, zmm10_5, zmm17_5, table);
inline vpternlogq64 (zmm0_6, zmm10_6, zmm17_6, table);
inline vpternlogq64 (zmm0_7, zmm10_7, zmm17_7, table);
(* vpternlogq $0xd2,%zmm18,%zmm17,%zmm10           #! PC = 0x55555558d56e *)
mov table 0xd2@uint8;
inline vpternlogq64 (zmm10_0, zmm17_0, zmm18_0, table);
inline vpternlogq64 (zmm10_1, zmm17_1, zmm18_1, table);
inline vpternlogq64 (zmm10_2, zmm17_2, zmm18_2, table);
inline vpternlogq64 (zmm10_3, zmm17_3, zmm18_3, table);
inline vpternlogq64 (zmm10_4, zmm17_4, zmm18_4, table);
inline vpternlogq64 (zmm10_5, zmm17_5, zmm18_5, table);
inline vpternlogq64 (zmm10_6, zmm17_6, zmm18_6, table);
inline vpternlogq64 (zmm10_7, zmm17_7, zmm18_7, table);
(* vmovdqa64 %zmm15,%zmm18                         #! PC = 0x55555558d575 *)
mov zmm18_0 zmm15_0;
mov zmm18_1 zmm15_1;
mov zmm18_2 zmm15_2;
mov zmm18_3 zmm15_3;
mov zmm18_4 zmm15_4;
mov zmm18_5 zmm15_5;
mov zmm18_6 zmm15_6;
mov zmm18_7 zmm15_7;
(* vpternlogq $0x96,%zmm12,%zmm3,%zmm18            #! PC = 0x55555558d57b *)
mov table 0x96@uint8;
inline vpternlogq64 (zmm18_0, zmm3_0, zmm12_0, table);
inline vpternlogq64 (zmm18_1, zmm3_1, zmm12_1, table);
inline vpternlogq64 (zmm18_2, zmm3_2, zmm12_2, table);
inline vpternlogq64 (zmm18_3, zmm3_3, zmm12_3, table);
inline vpternlogq64 (zmm18_4, zmm3_4, zmm12_4, table);
inline vpternlogq64 (zmm18_5, zmm3_5, zmm12_5, table);
inline vpternlogq64 (zmm18_6, zmm3_6, zmm12_6, table);
inline vpternlogq64 (zmm18_7, zmm3_7, zmm12_7, table);
(* vpternlogq $0x96,%zmm2,%zmm9,%zmm18             #! PC = 0x55555558d582 *)
mov table 0x96@uint8;
inline vpternlogq64 (zmm18_0, zmm9_0, zmm2_0, table);
inline vpternlogq64 (zmm18_1, zmm9_1, zmm2_1, table);
inline vpternlogq64 (zmm18_2, zmm9_2, zmm2_2, table);
inline vpternlogq64 (zmm18_3, zmm9_3, zmm2_3, table);
inline vpternlogq64 (zmm18_4, zmm9_4, zmm2_4, table);
inline vpternlogq64 (zmm18_5, zmm9_5, zmm2_5, table);
inline vpternlogq64 (zmm18_6, zmm9_6, zmm2_6, table);
inline vpternlogq64 (zmm18_7, zmm9_7, zmm2_7, table);
(* vprolq $0x1,%zmm18,%zmm16                       #! PC = 0x55555558d589 *)
rol zmm16_0 zmm18_0 0x1;
rol zmm16_1 zmm18_1 0x1;
rol zmm16_2 zmm18_2 0x1;
rol zmm16_3 zmm18_3 0x1;
rol zmm16_4 zmm18_4 0x1;
rol zmm16_5 zmm18_5 0x1;
rol zmm16_6 zmm18_6 0x1;
rol zmm16_7 zmm18_7 0x1;
(* vmovdqa64 %zmm0,%zmm27                          #! PC = 0x55555558d590 *)
mov zmm27_0 zmm0_0;
mov zmm27_1 zmm0_1;
mov zmm27_2 zmm0_2;
mov zmm27_3 zmm0_3;
mov zmm27_4 zmm0_4;
mov zmm27_5 zmm0_5;
mov zmm27_6 zmm0_6;
mov zmm27_7 zmm0_7;
(* vpternlogq $0x96,%zmm1,%zmm11,%zmm27            #! PC = 0x55555558d596 *)
mov table 0x96@uint8;
inline vpternlogq64 (zmm27_0, zmm11_0, zmm1_0, table);
inline vpternlogq64 (zmm27_1, zmm11_1, zmm1_1, table);
inline vpternlogq64 (zmm27_2, zmm11_2, zmm1_2, table);
inline vpternlogq64 (zmm27_3, zmm11_3, zmm1_3, table);
inline vpternlogq64 (zmm27_4, zmm11_4, zmm1_4, table);
inline vpternlogq64 (zmm27_5, zmm11_5, zmm1_5, table);
inline vpternlogq64 (zmm27_6, zmm11_6, zmm1_6, table);
inline vpternlogq64 (zmm27_7, zmm11_7, zmm1_7, table);
(* vpternlogq $0x96,%zmm6,%zmm20,%zmm27            #! PC = 0x55555558d59d *)
mov table 0x96@uint8;
inline vpternlogq64 (zmm27_0, zmm20_0, zmm6_0, table);
inline vpternlogq64 (zmm27_1, zmm20_1, zmm6_1, table);
inline vpternlogq64 (zmm27_2, zmm20_2, zmm6_2, table);
inline vpternlogq64 (zmm27_3, zmm20_3, zmm6_3, table);
inline vpternlogq64 (zmm27_4, zmm20_4, zmm6_4, table);
inline vpternlogq64 (zmm27_5, zmm20_5, zmm6_5, table);
inline vpternlogq64 (zmm27_6, zmm20_6, zmm6_6, table);
inline vpternlogq64 (zmm27_7, zmm20_7, zmm6_7, table);
(* vmovdqa64 %zmm19,%zmm30                         #! PC = 0x55555558d5a4 *)
mov zmm30_0 zmm19_0;
mov zmm30_1 zmm19_1;
mov zmm30_2 zmm19_2;
mov zmm30_3 zmm19_3;
mov zmm30_4 zmm19_4;
mov zmm30_5 zmm19_5;
mov zmm30_6 zmm19_6;
mov zmm30_7 zmm19_7;
(* vpternlogq $0x96,%zmm29,%zmm22,%zmm30           #! PC = 0x55555558d5aa *)
mov table 0x96@uint8;
inline vpternlogq64 (zmm30_0, zmm22_0, zmm29_0, table);
inline vpternlogq64 (zmm30_1, zmm22_1, zmm29_1, table);
inline vpternlogq64 (zmm30_2, zmm22_2, zmm29_2, table);
inline vpternlogq64 (zmm30_3, zmm22_3, zmm29_3, table);
inline vpternlogq64 (zmm30_4, zmm22_4, zmm29_4, table);
inline vpternlogq64 (zmm30_5, zmm22_5, zmm29_5, table);
inline vpternlogq64 (zmm30_6, zmm22_6, zmm29_6, table);
inline vpternlogq64 (zmm30_7, zmm22_7, zmm29_7, table);
(* vmovdqa64 %zmm16,0x148(%rsp)                    #! EA = L0x7fffffffd600; PC = 0x55555558d5b1 *)
mov L0x7fffffffd600 zmm16_0;
mov L0x7fffffffd608 zmm16_1;
mov L0x7fffffffd610 zmm16_2;
mov L0x7fffffffd618 zmm16_3;
mov L0x7fffffffd620 zmm16_4;
mov L0x7fffffffd628 zmm16_5;
mov L0x7fffffffd630 zmm16_6;
mov L0x7fffffffd638 zmm16_7;
(* vprolq $0x1,%zmm27,%zmm16                       #! PC = 0x55555558d5bc *)
rol zmm16_0 zmm27_0 0x1;
rol zmm16_1 zmm27_1 0x1;
rol zmm16_2 zmm27_2 0x1;
rol zmm16_3 zmm27_3 0x1;
rol zmm16_4 zmm27_4 0x1;
rol zmm16_5 zmm27_5 0x1;
rol zmm16_6 zmm27_6 0x1;
rol zmm16_7 zmm27_7 0x1;
(* vpternlogq $0x96,%zmm5,%zmm10,%zmm30            #! PC = 0x55555558d5c3 *)
mov table 0x96@uint8;
inline vpternlogq64 (zmm30_0, zmm10_0, zmm5_0, table);
inline vpternlogq64 (zmm30_1, zmm10_1, zmm5_1, table);
inline vpternlogq64 (zmm30_2, zmm10_2, zmm5_2, table);
inline vpternlogq64 (zmm30_3, zmm10_3, zmm5_3, table);
inline vpternlogq64 (zmm30_4, zmm10_4, zmm5_4, table);
inline vpternlogq64 (zmm30_5, zmm10_5, zmm5_5, table);
inline vpternlogq64 (zmm30_6, zmm10_6, zmm5_6, table);
inline vpternlogq64 (zmm30_7, zmm10_7, zmm5_7, table);
(* vmovdqa64 %zmm24,%zmm14                         #! PC = 0x55555558d5ca *)
mov zmm14_0 zmm24_0;
mov zmm14_1 zmm24_1;
mov zmm14_2 zmm24_2;
mov zmm14_3 zmm24_3;
mov zmm14_4 zmm24_4;
mov zmm14_5 zmm24_5;
mov zmm14_6 zmm24_6;
mov zmm14_7 zmm24_7;
(* vpternlogq $0x96,%zmm28,%zmm21,%zmm14           #! PC = 0x55555558d5d0 *)
mov table 0x96@uint8;
inline vpternlogq64 (zmm14_0, zmm21_0, zmm28_0, table);
inline vpternlogq64 (zmm14_1, zmm21_1, zmm28_1, table);
inline vpternlogq64 (zmm14_2, zmm21_2, zmm28_2, table);
inline vpternlogq64 (zmm14_3, zmm21_3, zmm28_3, table);
inline vpternlogq64 (zmm14_4, zmm21_4, zmm28_4, table);
inline vpternlogq64 (zmm14_5, zmm21_5, zmm28_5, table);
inline vpternlogq64 (zmm14_6, zmm21_6, zmm28_6, table);
inline vpternlogq64 (zmm14_7, zmm21_7, zmm28_7, table);
(* vpternlogq $0x96,%zmm25,%zmm13,%zmm14           #! PC = 0x55555558d5d7 *)
mov table 0x96@uint8;
inline vpternlogq64 (zmm14_0, zmm13_0, zmm25_0, table);
inline vpternlogq64 (zmm14_1, zmm13_1, zmm25_1, table);
inline vpternlogq64 (zmm14_2, zmm13_2, zmm25_2, table);
inline vpternlogq64 (zmm14_3, zmm13_3, zmm25_3, table);
inline vpternlogq64 (zmm14_4, zmm13_4, zmm25_4, table);
inline vpternlogq64 (zmm14_5, zmm13_5, zmm25_5, table);
inline vpternlogq64 (zmm14_6, zmm13_6, zmm25_6, table);
inline vpternlogq64 (zmm14_7, zmm13_7, zmm25_7, table);
(* vmovdqa64 %zmm8,%zmm17                          #! PC = 0x55555558d5de *)
mov zmm17_0 zmm8_0;
mov zmm17_1 zmm8_1;
mov zmm17_2 zmm8_2;
mov zmm17_3 zmm8_3;
mov zmm17_4 zmm8_4;
mov zmm17_5 zmm8_5;
mov zmm17_6 zmm8_6;
mov zmm17_7 zmm8_7;
(* vmovdqa64 %zmm16,0x108(%rsp)                    #! EA = L0x7fffffffd5c0; PC = 0x55555558d5e4 *)
mov L0x7fffffffd5c0 zmm16_0;
mov L0x7fffffffd5c8 zmm16_1;
mov L0x7fffffffd5d0 zmm16_2;
mov L0x7fffffffd5d8 zmm16_3;
mov L0x7fffffffd5e0 zmm16_4;
mov L0x7fffffffd5e8 zmm16_5;
mov L0x7fffffffd5f0 zmm16_6;
mov L0x7fffffffd5f8 zmm16_7;
(* vprolq $0x1,%zmm30,%zmm16                       #! PC = 0x55555558d5ef *)
rol zmm16_0 zmm30_0 0x1;
rol zmm16_1 zmm30_1 0x1;
rol zmm16_2 zmm30_2 0x1;
rol zmm16_3 zmm30_3 0x1;
rol zmm16_4 zmm30_4 0x1;
rol zmm16_5 zmm30_5 0x1;
rol zmm16_6 zmm30_6 0x1;
rol zmm16_7 zmm30_7 0x1;
(* vpternlogq $0x96,%zmm26,%zmm7,%zmm17            #! PC = 0x55555558d5f6 *)
mov table 0x96@uint8;
inline vpternlogq64 (zmm17_0, zmm7_0, zmm26_0, table);
inline vpternlogq64 (zmm17_1, zmm7_1, zmm26_1, table);
inline vpternlogq64 (zmm17_2, zmm7_2, zmm26_2, table);
inline vpternlogq64 (zmm17_3, zmm7_3, zmm26_3, table);
inline vpternlogq64 (zmm17_4, zmm7_4, zmm26_4, table);
inline vpternlogq64 (zmm17_5, zmm7_5, zmm26_5, table);
inline vpternlogq64 (zmm17_6, zmm7_6, zmm26_6, table);
inline vpternlogq64 (zmm17_7, zmm7_7, zmm26_7, table);
(* vpternlogq $0x96,%zmm31,%zmm23,%zmm17           #! PC = 0x55555558d5fd *)
mov table 0x96@uint8;
inline vpternlogq64 (zmm17_0, zmm23_0, zmm31_0, table);
inline vpternlogq64 (zmm17_1, zmm23_1, zmm31_1, table);
inline vpternlogq64 (zmm17_2, zmm23_2, zmm31_2, table);
inline vpternlogq64 (zmm17_3, zmm23_3, zmm31_3, table);
inline vpternlogq64 (zmm17_4, zmm23_4, zmm31_4, table);
inline vpternlogq64 (zmm17_5, zmm23_5, zmm31_5, table);
inline vpternlogq64 (zmm17_6, zmm23_6, zmm31_6, table);
inline vpternlogq64 (zmm17_7, zmm23_7, zmm31_7, table);
(* vprolq $0x1,%zmm17,%zmm4                        #! PC = 0x55555558d604 *)
rol zmm4_0 zmm17_0 0x1;
rol zmm4_1 zmm17_1 0x1;
rol zmm4_2 zmm17_2 0x1;
rol zmm4_3 zmm17_3 0x1;
rol zmm4_4 zmm17_4 0x1;
rol zmm4_5 zmm17_5 0x1;
rol zmm4_6 zmm17_6 0x1;
rol zmm4_7 zmm17_7 0x1;
(* vpxord 0x108(%rsp),%zmm17,%zmm17                #! EA = L0x7fffffffd5c0; Value = 0xf110807c3cc09382; PC = 0x55555558d60b *)
xor zmm17_0@uint64 zmm17_0 L0x7fffffffd5c0;
xor zmm17_1@uint64 zmm17_1 L0x7fffffffd5c8;
xor zmm17_2@uint64 zmm17_2 L0x7fffffffd5d0;
xor zmm17_3@uint64 zmm17_3 L0x7fffffffd5d8;
xor zmm17_4@uint64 zmm17_4 L0x7fffffffd5e0;
xor zmm17_5@uint64 zmm17_5 L0x7fffffffd5e8;
xor zmm17_6@uint64 zmm17_6 L0x7fffffffd5f0;
xor zmm17_7@uint64 zmm17_7 L0x7fffffffd5f8;
(* movabs $0x800000000000008b,%rdi                 #! PC = 0x55555558d616 *)
mov rdi 0x800000000000008b@uint64;
(* vmovdqa64 %zmm16,0xc8(%rsp)                     #! EA = L0x7fffffffd580; PC = 0x55555558d620 *)
mov L0x7fffffffd580 zmm16_0;
mov L0x7fffffffd588 zmm16_1;
mov L0x7fffffffd590 zmm16_2;
mov L0x7fffffffd598 zmm16_3;
mov L0x7fffffffd5a0 zmm16_4;
mov L0x7fffffffd5a8 zmm16_5;
mov L0x7fffffffd5b0 zmm16_6;
mov L0x7fffffffd5b8 zmm16_7;
(* vprolq $0x1,%zmm14,%zmm16                       #! PC = 0x55555558d62b *)
rol zmm16_0 zmm14_0 0x1;
rol zmm16_1 zmm14_1 0x1;
rol zmm16_2 zmm14_2 0x1;
rol zmm16_3 zmm14_3 0x1;
rol zmm16_4 zmm14_4 0x1;
rol zmm16_5 zmm14_5 0x1;
rol zmm16_6 zmm14_6 0x1;
rol zmm16_7 zmm14_7 0x1;
(* vpxord 0x148(%rsp),%zmm14,%zmm14                #! EA = L0x7fffffffd600; Value = 0x1cb43ff9a26886e4; PC = 0x55555558d632 *)
xor zmm14_0@uint64 zmm14_0 L0x7fffffffd600;
xor zmm14_1@uint64 zmm14_1 L0x7fffffffd608;
xor zmm14_2@uint64 zmm14_2 L0x7fffffffd610;
xor zmm14_3@uint64 zmm14_3 L0x7fffffffd618;
xor zmm14_4@uint64 zmm14_4 L0x7fffffffd620;
xor zmm14_5@uint64 zmm14_5 L0x7fffffffd628;
xor zmm14_6@uint64 zmm14_6 L0x7fffffffd630;
xor zmm14_7@uint64 zmm14_7 L0x7fffffffd638;
(* vpxord 0xc8(%rsp),%zmm18,%zmm18                 #! EA = L0x7fffffffd580; Value = 0x8c500bc58de049a8; PC = 0x55555558d63d *)
xor zmm18_0@uint64 zmm18_0 L0x7fffffffd580;
xor zmm18_1@uint64 zmm18_1 L0x7fffffffd588;
xor zmm18_2@uint64 zmm18_2 L0x7fffffffd590;
xor zmm18_3@uint64 zmm18_3 L0x7fffffffd598;
xor zmm18_4@uint64 zmm18_4 L0x7fffffffd5a0;
xor zmm18_5@uint64 zmm18_5 L0x7fffffffd5a8;
xor zmm18_6@uint64 zmm18_6 L0x7fffffffd5b0;
xor zmm18_7@uint64 zmm18_7 L0x7fffffffd5b8;
(* vpxord %zmm26,%zmm14,%zmm26                     #! PC = 0x55555558d648 *)
xor zmm26_0@uint64 zmm14_0 zmm26_0;
xor zmm26_1@uint64 zmm14_1 zmm26_1;
xor zmm26_2@uint64 zmm14_2 zmm26_2;
xor zmm26_3@uint64 zmm14_3 zmm26_3;
xor zmm26_4@uint64 zmm14_4 zmm26_4;
xor zmm26_5@uint64 zmm14_5 zmm26_5;
xor zmm26_6@uint64 zmm14_6 zmm26_6;
xor zmm26_7@uint64 zmm14_7 zmm26_7;
(* vprorq $0x14,%zmm26,%zmm26                      #! PC = 0x55555558d64e *)
ror zmm26_0 zmm26_0 0x14;
ror zmm26_1 zmm26_1 0x14;
ror zmm26_2 zmm26_2 0x14;
ror zmm26_3 zmm26_3 0x14;
ror zmm26_4 zmm26_4 0x14;
ror zmm26_5 zmm26_5 0x14;
ror zmm26_6 zmm26_6 0x14;
ror zmm26_7 zmm26_7 0x14;
(* vpxord %zmm2,%zmm17,%zmm2                       #! PC = 0x55555558d655 *)
xor zmm2_0@uint64 zmm17_0 zmm2_0;
xor zmm2_1@uint64 zmm17_1 zmm2_1;
xor zmm2_2@uint64 zmm17_2 zmm2_2;
xor zmm2_3@uint64 zmm17_3 zmm2_3;
xor zmm2_4@uint64 zmm17_4 zmm2_4;
xor zmm2_5@uint64 zmm17_5 zmm2_5;
xor zmm2_6@uint64 zmm17_6 zmm2_6;
xor zmm2_7@uint64 zmm17_7 zmm2_7;
(* vpxord %zmm27,%zmm16,%zmm16                     #! PC = 0x55555558d65b *)
xor zmm16_0@uint64 zmm16_0 zmm27_0;
xor zmm16_1@uint64 zmm16_1 zmm27_1;
xor zmm16_2@uint64 zmm16_2 zmm27_2;
xor zmm16_3@uint64 zmm16_3 zmm27_3;
xor zmm16_4@uint64 zmm16_4 zmm27_4;
xor zmm16_5@uint64 zmm16_5 zmm27_5;
xor zmm16_6@uint64 zmm16_6 zmm27_6;
xor zmm16_7@uint64 zmm16_7 zmm27_7;
(* vpxord %zmm11,%zmm18,%zmm11                     #! PC = 0x55555558d661 *)
xor zmm11_0@uint64 zmm18_0 zmm11_0;
xor zmm11_1@uint64 zmm18_1 zmm11_1;
xor zmm11_2@uint64 zmm18_2 zmm11_2;
xor zmm11_3@uint64 zmm18_3 zmm11_3;
xor zmm11_4@uint64 zmm18_4 zmm11_4;
xor zmm11_5@uint64 zmm18_5 zmm11_5;
xor zmm11_6@uint64 zmm18_6 zmm11_6;
xor zmm11_7@uint64 zmm18_7 zmm11_7;
(* vpxord %zmm10,%zmm16,%zmm10                     #! PC = 0x55555558d667 *)
xor zmm10_0@uint64 zmm16_0 zmm10_0;
xor zmm10_1@uint64 zmm16_1 zmm10_1;
xor zmm10_2@uint64 zmm16_2 zmm10_2;
xor zmm10_3@uint64 zmm16_3 zmm10_3;
xor zmm10_4@uint64 zmm16_4 zmm10_4;
xor zmm10_5@uint64 zmm16_5 zmm10_5;
xor zmm10_6@uint64 zmm16_6 zmm10_6;
xor zmm10_7@uint64 zmm16_7 zmm10_7;
(* vpxord %zmm30,%zmm4,%zmm4                       #! PC = 0x55555558d66d *)
xor zmm4_0@uint64 zmm4_0 zmm30_0;
xor zmm4_1@uint64 zmm4_1 zmm30_1;
xor zmm4_2@uint64 zmm4_2 zmm30_2;
xor zmm4_3@uint64 zmm4_3 zmm30_3;
xor zmm4_4@uint64 zmm4_4 zmm30_4;
xor zmm4_5@uint64 zmm4_5 zmm30_5;
xor zmm4_6@uint64 zmm4_6 zmm30_6;
xor zmm4_7@uint64 zmm4_7 zmm30_7;
(* vprorq $0x15,%zmm2,%zmm2                        #! PC = 0x55555558d673 *)
ror zmm2_0 zmm2_0 0x15;
ror zmm2_1 zmm2_1 0x15;
ror zmm2_2 zmm2_2 0x15;
ror zmm2_3 zmm2_3 0x15;
ror zmm2_4 zmm2_4 0x15;
ror zmm2_5 zmm2_5 0x15;
ror zmm2_6 zmm2_6 0x15;
ror zmm2_7 zmm2_7 0x15;
(* vprolq $0x15,%zmm11,%zmm11                      #! PC = 0x55555558d67a *)
rol zmm11_0 zmm11_0 0x15;
rol zmm11_1 zmm11_1 0x15;
rol zmm11_2 zmm11_2 0x15;
rol zmm11_3 zmm11_3 0x15;
rol zmm11_4 zmm11_4 0x15;
rol zmm11_5 zmm11_5 0x15;
rol zmm11_6 zmm11_6 0x15;
rol zmm11_7 zmm11_7 0x15;
(* vprolq $0xe,%zmm10,%zmm10                       #! PC = 0x55555558d681 *)
rol zmm10_0 zmm10_0 0xe;
rol zmm10_1 zmm10_1 0xe;
rol zmm10_2 zmm10_2 0xe;
rol zmm10_3 zmm10_3 0xe;
rol zmm10_4 zmm10_4 0xe;
rol zmm10_5 zmm10_5 0xe;
rol zmm10_6 zmm10_6 0xe;
rol zmm10_7 zmm10_7 0xe;
(* vpxord %zmm6,%zmm18,%zmm6                       #! PC = 0x55555558d688 *)
xor zmm6_0@uint64 zmm18_0 zmm6_0;
xor zmm6_1@uint64 zmm18_1 zmm6_1;
xor zmm6_2@uint64 zmm18_2 zmm6_2;
xor zmm6_3@uint64 zmm18_3 zmm6_3;
xor zmm6_4@uint64 zmm18_4 zmm6_4;
xor zmm6_5@uint64 zmm18_5 zmm6_5;
xor zmm6_6@uint64 zmm18_6 zmm6_6;
xor zmm6_7@uint64 zmm18_7 zmm6_7;
(* vpxord %zmm22,%zmm16,%zmm22                     #! PC = 0x55555558d68e *)
xor zmm22_0@uint64 zmm16_0 zmm22_0;
xor zmm22_1@uint64 zmm16_1 zmm22_1;
xor zmm22_2@uint64 zmm16_2 zmm22_2;
xor zmm22_3@uint64 zmm16_3 zmm22_3;
xor zmm22_4@uint64 zmm16_4 zmm22_4;
xor zmm22_5@uint64 zmm16_5 zmm22_5;
xor zmm22_6@uint64 zmm16_6 zmm22_6;
xor zmm22_7@uint64 zmm16_7 zmm22_7;
(* vprolq $0x1c,%zmm6,%zmm6                        #! PC = 0x55555558d694 *)
rol zmm6_0 zmm6_0 0x1c;
rol zmm6_1 zmm6_1 0x1c;
rol zmm6_2 zmm6_2 0x1c;
rol zmm6_3 zmm6_3 0x1c;
rol zmm6_4 zmm6_4 0x1c;
rol zmm6_5 zmm6_5 0x1c;
rol zmm6_6 zmm6_6 0x1c;
rol zmm6_7 zmm6_7 0x1c;
(* vprolq $0x14,%zmm22,%zmm22                      #! PC = 0x55555558d69b *)
rol zmm22_0 zmm22_0 0x14;
rol zmm22_1 zmm22_1 0x14;
rol zmm22_2 zmm22_2 0x14;
rol zmm22_3 zmm22_3 0x14;
rol zmm22_4 zmm22_4 0x14;
rol zmm22_5 zmm22_5 0x14;
rol zmm22_6 zmm22_6 0x14;
rol zmm22_7 zmm22_7 0x14;
(* vpxord %zmm13,%zmm4,%zmm13                      #! PC = 0x55555558d6a2 *)
xor zmm13_0@uint64 zmm4_0 zmm13_0;
xor zmm13_1@uint64 zmm4_1 zmm13_1;
xor zmm13_2@uint64 zmm4_2 zmm13_2;
xor zmm13_3@uint64 zmm4_3 zmm13_3;
xor zmm13_4@uint64 zmm4_4 zmm13_4;
xor zmm13_5@uint64 zmm4_5 zmm13_5;
xor zmm13_6@uint64 zmm4_6 zmm13_6;
xor zmm13_7@uint64 zmm4_7 zmm13_7;
(* vpxord %zmm8,%zmm14,%zmm8                       #! PC = 0x55555558d6a8 *)
xor zmm8_0@uint64 zmm14_0 zmm8_0;
xor zmm8_1@uint64 zmm14_1 zmm8_1;
xor zmm8_2@uint64 zmm14_2 zmm8_2;
xor zmm8_3@uint64 zmm14_3 zmm8_3;
xor zmm8_4@uint64 zmm14_4 zmm8_4;
xor zmm8_5@uint64 zmm14_5 zmm8_5;
xor zmm8_6@uint64 zmm14_6 zmm8_6;
xor zmm8_7@uint64 zmm14_7 zmm8_7;
(* vpxord %zmm12,%zmm17,%zmm12                     #! PC = 0x55555558d6ae *)
xor zmm12_0@uint64 zmm17_0 zmm12_0;
xor zmm12_1@uint64 zmm17_1 zmm12_1;
xor zmm12_2@uint64 zmm17_2 zmm12_2;
xor zmm12_3@uint64 zmm17_3 zmm12_3;
xor zmm12_4@uint64 zmm17_4 zmm12_4;
xor zmm12_5@uint64 zmm17_5 zmm12_5;
xor zmm12_6@uint64 zmm17_6 zmm12_6;
xor zmm12_7@uint64 zmm17_7 zmm12_7;
(* vpxord %zmm23,%zmm14,%zmm23                     #! PC = 0x55555558d6b4 *)
xor zmm23_0@uint64 zmm14_0 zmm23_0;
xor zmm23_1@uint64 zmm14_1 zmm23_1;
xor zmm23_2@uint64 zmm14_2 zmm23_2;
xor zmm23_3@uint64 zmm14_3 zmm23_3;
xor zmm23_4@uint64 zmm14_4 zmm23_4;
xor zmm23_5@uint64 zmm14_5 zmm23_5;
xor zmm23_6@uint64 zmm14_6 zmm23_6;
xor zmm23_7@uint64 zmm14_7 zmm23_7;
(* vpxord %zmm15,%zmm17,%zmm15                     #! PC = 0x55555558d6ba *)
xor zmm15_0@uint64 zmm17_0 zmm15_0;
xor zmm15_1@uint64 zmm17_1 zmm15_1;
xor zmm15_2@uint64 zmm17_2 zmm15_2;
xor zmm15_3@uint64 zmm17_3 zmm15_3;
xor zmm15_4@uint64 zmm17_4 zmm15_4;
xor zmm15_5@uint64 zmm17_5 zmm15_5;
xor zmm15_6@uint64 zmm17_6 zmm15_6;
xor zmm15_7@uint64 zmm17_7 zmm15_7;
(* vprolq $0x1,%zmm23,%zmm23                       #! PC = 0x55555558d6c0 *)
rol zmm23_0 zmm23_0 0x1;
rol zmm23_1 zmm23_1 0x1;
rol zmm23_2 zmm23_2 0x1;
rol zmm23_3 zmm23_3 0x1;
rol zmm23_4 zmm23_4 0x1;
rol zmm23_5 zmm23_5 0x1;
rol zmm23_6 zmm23_6 0x1;
rol zmm23_7 zmm23_7 0x1;
(* vprolq $0x6,%zmm15,%zmm15                       #! PC = 0x55555558d6c7 *)
rol zmm15_0 zmm15_0 0x6;
rol zmm15_1 zmm15_1 0x6;
rol zmm15_2 zmm15_2 0x6;
rol zmm15_3 zmm15_3 0x6;
rol zmm15_4 zmm15_4 0x6;
rol zmm15_5 zmm15_5 0x6;
rol zmm15_6 zmm15_6 0x6;
rol zmm15_7 zmm15_7 0x6;
(* vprolq $0x3,%zmm13,%zmm13                       #! PC = 0x55555558d6ce *)
rol zmm13_0 zmm13_0 0x3;
rol zmm13_1 zmm13_1 0x3;
rol zmm13_2 zmm13_2 0x3;
rol zmm13_3 zmm13_3 0x3;
rol zmm13_4 zmm13_4 0x3;
rol zmm13_5 zmm13_5 0x3;
rol zmm13_6 zmm13_6 0x3;
rol zmm13_7 zmm13_7 0x3;
(* vprorq $0x13,%zmm8,%zmm8                        #! PC = 0x55555558d6d5 *)
ror zmm8_0 zmm8_0 0x13;
ror zmm8_1 zmm8_1 0x13;
ror zmm8_2 zmm8_2 0x13;
ror zmm8_3 zmm8_3 0x13;
ror zmm8_4 zmm8_4 0x13;
ror zmm8_5 zmm8_5 0x13;
ror zmm8_6 zmm8_6 0x13;
ror zmm8_7 zmm8_7 0x13;
(* vprorq $0x3,%zmm12,%zmm12                       #! PC = 0x55555558d6dc *)
ror zmm12_0 zmm12_0 0x3;
ror zmm12_1 zmm12_1 0x3;
ror zmm12_2 zmm12_2 0x3;
ror zmm12_3 zmm12_3 0x3;
ror zmm12_4 zmm12_4 0x3;
ror zmm12_5 zmm12_5 0x3;
ror zmm12_6 zmm12_6 0x3;
ror zmm12_7 zmm12_7 0x3;
(* vpxord %zmm21,%zmm4,%zmm21                      #! PC = 0x55555558d6e3 *)
xor zmm21_0@uint64 zmm4_0 zmm21_0;
xor zmm21_1@uint64 zmm4_1 zmm21_1;
xor zmm21_2@uint64 zmm4_2 zmm21_2;
xor zmm21_3@uint64 zmm4_3 zmm21_3;
xor zmm21_4@uint64 zmm4_4 zmm21_4;
xor zmm21_5@uint64 zmm4_5 zmm21_5;
xor zmm21_6@uint64 zmm4_6 zmm21_6;
xor zmm21_7@uint64 zmm4_7 zmm21_7;
(* vpxord %zmm1,%zmm18,%zmm1                       #! PC = 0x55555558d6e9 *)
xor zmm1_0@uint64 zmm18_0 zmm1_0;
xor zmm1_1@uint64 zmm18_1 zmm1_1;
xor zmm1_2@uint64 zmm18_2 zmm1_2;
xor zmm1_3@uint64 zmm18_3 zmm1_3;
xor zmm1_4@uint64 zmm18_4 zmm1_4;
xor zmm1_5@uint64 zmm18_5 zmm1_5;
xor zmm1_6@uint64 zmm18_6 zmm1_6;
xor zmm1_7@uint64 zmm18_7 zmm1_7;
(* vpxord %zmm5,%zmm16,%zmm5                       #! PC = 0x55555558d6ef *)
xor zmm5_0@uint64 zmm16_0 zmm5_0;
xor zmm5_1@uint64 zmm16_1 zmm5_1;
xor zmm5_2@uint64 zmm16_2 zmm5_2;
xor zmm5_3@uint64 zmm16_3 zmm5_3;
xor zmm5_4@uint64 zmm16_4 zmm5_4;
xor zmm5_5@uint64 zmm16_5 zmm5_5;
xor zmm5_6@uint64 zmm16_6 zmm5_6;
xor zmm5_7@uint64 zmm16_7 zmm5_7;
(* vpxord %zmm25,%zmm4,%zmm25                      #! PC = 0x55555558d6f5 *)
xor zmm25_0@uint64 zmm4_0 zmm25_0;
xor zmm25_1@uint64 zmm4_1 zmm25_1;
xor zmm25_2@uint64 zmm4_2 zmm25_2;
xor zmm25_3@uint64 zmm4_3 zmm25_3;
xor zmm25_4@uint64 zmm4_4 zmm25_4;
xor zmm25_5@uint64 zmm4_5 zmm25_5;
xor zmm25_6@uint64 zmm4_6 zmm25_6;
xor zmm25_7@uint64 zmm4_7 zmm25_7;
(* vpxord %zmm29,%zmm16,%zmm29                     #! PC = 0x55555558d6fb *)
xor zmm29_0@uint64 zmm16_0 zmm29_0;
xor zmm29_1@uint64 zmm16_1 zmm29_1;
xor zmm29_2@uint64 zmm16_2 zmm29_2;
xor zmm29_3@uint64 zmm16_3 zmm29_3;
xor zmm29_4@uint64 zmm16_4 zmm29_4;
xor zmm29_5@uint64 zmm16_5 zmm29_5;
xor zmm29_6@uint64 zmm16_6 zmm29_6;
xor zmm29_7@uint64 zmm16_7 zmm29_7;
(* vprorq $0x1c,%zmm25,%zmm25                      #! PC = 0x55555558d701 *)
ror zmm25_0 zmm25_0 0x1c;
ror zmm25_1 zmm25_1 0x1c;
ror zmm25_2 zmm25_2 0x1c;
ror zmm25_3 zmm25_3 0x1c;
ror zmm25_4 zmm25_4 0x1c;
ror zmm25_5 zmm25_5 0x1c;
ror zmm25_6 zmm25_6 0x1c;
ror zmm25_7 zmm25_7 0x1c;
(* vprolq $0x1b,%zmm29,%zmm29                      #! PC = 0x55555558d708 *)
rol zmm29_0 zmm29_0 0x1b;
rol zmm29_1 zmm29_1 0x1b;
rol zmm29_2 zmm29_2 0x1b;
rol zmm29_3 zmm29_3 0x1b;
rol zmm29_4 zmm29_4 0x1b;
rol zmm29_5 zmm29_5 0x1b;
rol zmm29_6 zmm29_6 0x1b;
rol zmm29_7 zmm29_7 0x1b;
(* vprolq $0x12,%zmm21,%zmm21                      #! PC = 0x55555558d70f *)
rol zmm21_0 zmm21_0 0x12;
rol zmm21_1 zmm21_1 0x12;
rol zmm21_2 zmm21_2 0x12;
rol zmm21_3 zmm21_3 0x12;
rol zmm21_4 zmm21_4 0x12;
rol zmm21_5 zmm21_5 0x12;
rol zmm21_6 zmm21_6 0x12;
rol zmm21_7 zmm21_7 0x12;
(* vprolq $0x19,%zmm1,%zmm1                        #! PC = 0x55555558d716 *)
rol zmm1_0 zmm1_0 0x19;
rol zmm1_1 zmm1_1 0x19;
rol zmm1_2 zmm1_2 0x19;
rol zmm1_3 zmm1_3 0x19;
rol zmm1_4 zmm1_4 0x19;
rol zmm1_5 zmm1_5 0x19;
rol zmm1_6 zmm1_6 0x19;
rol zmm1_7 zmm1_7 0x19;
(* vprolq $0x8,%zmm5,%zmm5                         #! PC = 0x55555558d71d *)
rol zmm5_0 zmm5_0 0x8;
rol zmm5_1 zmm5_1 0x8;
rol zmm5_2 zmm5_2 0x8;
rol zmm5_3 zmm5_3 0x8;
rol zmm5_4 zmm5_4 0x8;
rol zmm5_5 zmm5_5 0x8;
rol zmm5_6 zmm5_6 0x8;
rol zmm5_7 zmm5_7 0x8;
(* vpxord %zmm7,%zmm14,%zmm7                       #! PC = 0x55555558d724 *)
xor zmm7_0@uint64 zmm14_0 zmm7_0;
xor zmm7_1@uint64 zmm14_1 zmm7_1;
xor zmm7_2@uint64 zmm14_2 zmm7_2;
xor zmm7_3@uint64 zmm14_3 zmm7_3;
xor zmm7_4@uint64 zmm14_4 zmm7_4;
xor zmm7_5@uint64 zmm14_5 zmm7_5;
xor zmm7_6@uint64 zmm14_6 zmm7_6;
xor zmm7_7@uint64 zmm14_7 zmm7_7;
(* vpxord %zmm9,%zmm17,%zmm9                       #! PC = 0x55555558d72a *)
xor zmm9_0@uint64 zmm17_0 zmm9_0;
xor zmm9_1@uint64 zmm17_1 zmm9_1;
xor zmm9_2@uint64 zmm17_2 zmm9_2;
xor zmm9_3@uint64 zmm17_3 zmm9_3;
xor zmm9_4@uint64 zmm17_4 zmm9_4;
xor zmm9_5@uint64 zmm17_5 zmm9_5;
xor zmm9_6@uint64 zmm17_6 zmm9_6;
xor zmm9_7@uint64 zmm17_7 zmm9_7;
(* vpxord %zmm0,%zmm18,%zmm0                       #! PC = 0x55555558d730 *)
xor zmm0_0@uint64 zmm18_0 zmm0_0;
xor zmm0_1@uint64 zmm18_1 zmm0_1;
xor zmm0_2@uint64 zmm18_2 zmm0_2;
xor zmm0_3@uint64 zmm18_3 zmm0_3;
xor zmm0_4@uint64 zmm18_4 zmm0_4;
xor zmm0_5@uint64 zmm18_5 zmm0_5;
xor zmm0_6@uint64 zmm18_6 zmm0_6;
xor zmm0_7@uint64 zmm18_7 zmm0_7;
(* vpxord %zmm3,%zmm17,%zmm17                      #! PC = 0x55555558d736 *)
xor zmm17_0@uint64 zmm17_0 zmm3_0;
xor zmm17_1@uint64 zmm17_1 zmm3_1;
xor zmm17_2@uint64 zmm17_2 zmm3_2;
xor zmm17_3@uint64 zmm17_3 zmm3_3;
xor zmm17_4@uint64 zmm17_4 zmm3_4;
xor zmm17_5@uint64 zmm17_5 zmm3_5;
xor zmm17_6@uint64 zmm17_6 zmm3_6;
xor zmm17_7@uint64 zmm17_7 zmm3_7;
(* vpxord %zmm20,%zmm18,%zmm18                     #! PC = 0x55555558d73c *)
xor zmm18_0@uint64 zmm18_0 zmm20_0;
xor zmm18_1@uint64 zmm18_1 zmm20_1;
xor zmm18_2@uint64 zmm18_2 zmm20_2;
xor zmm18_3@uint64 zmm18_3 zmm20_3;
xor zmm18_4@uint64 zmm18_4 zmm20_4;
xor zmm18_5@uint64 zmm18_5 zmm20_5;
xor zmm18_6@uint64 zmm18_6 zmm20_6;
xor zmm18_7@uint64 zmm18_7 zmm20_7;
(* vpxord %zmm24,%zmm4,%zmm24                      #! PC = 0x55555558d742 *)
xor zmm24_0@uint64 zmm4_0 zmm24_0;
xor zmm24_1@uint64 zmm4_1 zmm24_1;
xor zmm24_2@uint64 zmm4_2 zmm24_2;
xor zmm24_3@uint64 zmm4_3 zmm24_3;
xor zmm24_4@uint64 zmm4_4 zmm24_4;
xor zmm24_5@uint64 zmm4_5 zmm24_5;
xor zmm24_6@uint64 zmm4_6 zmm24_6;
xor zmm24_7@uint64 zmm4_7 zmm24_7;
(* vprorq $0x2,%zmm17,%zmm17                       #! PC = 0x55555558d748 *)
ror zmm17_0 zmm17_0 0x2;
ror zmm17_1 zmm17_1 0x2;
ror zmm17_2 zmm17_2 0x2;
ror zmm17_3 zmm17_3 0x2;
ror zmm17_4 zmm17_4 0x2;
ror zmm17_5 zmm17_5 0x2;
ror zmm17_6 zmm17_6 0x2;
ror zmm17_7 zmm17_7 0x2;
(* vprorq $0x9,%zmm18,%zmm18                       #! PC = 0x55555558d74f *)
ror zmm18_0 zmm18_0 0x9;
ror zmm18_1 zmm18_1 0x9;
ror zmm18_2 zmm18_2 0x9;
ror zmm18_3 zmm18_3 0x9;
ror zmm18_4 zmm18_4 0x9;
ror zmm18_5 zmm18_5 0x9;
ror zmm18_6 zmm18_6 0x9;
ror zmm18_7 zmm18_7 0x9;
(* vprolq $0xa,%zmm7,%zmm7                         #! PC = 0x55555558d756 *)
rol zmm7_0 zmm7_0 0xa;
rol zmm7_1 zmm7_1 0xa;
rol zmm7_2 zmm7_2 0xa;
rol zmm7_3 zmm7_3 0xa;
rol zmm7_4 zmm7_4 0xa;
rol zmm7_5 zmm7_5 0xa;
rol zmm7_6 zmm7_6 0xa;
rol zmm7_7 zmm7_7 0xa;
(* vprolq $0xf,%zmm9,%zmm9                         #! PC = 0x55555558d75d *)
rol zmm9_0 zmm9_0 0xf;
rol zmm9_1 zmm9_1 0xf;
rol zmm9_2 zmm9_2 0xf;
rol zmm9_3 zmm9_3 0xf;
rol zmm9_4 zmm9_4 0xf;
rol zmm9_5 zmm9_5 0xf;
rol zmm9_6 zmm9_6 0xf;
rol zmm9_7 zmm9_7 0xf;
(* vprorq $0x8,%zmm0,%zmm0                         #! PC = 0x55555558d764 *)
ror zmm0_0 zmm0_0 0x8;
ror zmm0_1 zmm0_1 0x8;
ror zmm0_2 zmm0_2 0x8;
ror zmm0_3 zmm0_3 0x8;
ror zmm0_4 zmm0_4 0x8;
ror zmm0_5 zmm0_5 0x8;
ror zmm0_6 zmm0_6 0x8;
ror zmm0_7 zmm0_7 0x8;
(* vpxord %zmm28,%zmm4,%zmm4                       #! PC = 0x55555558d76b *)
xor zmm4_0@uint64 zmm4_0 zmm28_0;
xor zmm4_1@uint64 zmm4_1 zmm28_1;
xor zmm4_2@uint64 zmm4_2 zmm28_2;
xor zmm4_3@uint64 zmm4_3 zmm28_3;
xor zmm4_4@uint64 zmm4_4 zmm28_4;
xor zmm4_5@uint64 zmm4_5 zmm28_5;
xor zmm4_6@uint64 zmm4_6 zmm28_6;
xor zmm4_7@uint64 zmm4_7 zmm28_7;
(* vpxord %zmm31,%zmm14,%zmm14                     #! PC = 0x55555558d771 *)
xor zmm14_0@uint64 zmm14_0 zmm31_0;
xor zmm14_1@uint64 zmm14_1 zmm31_1;
xor zmm14_2@uint64 zmm14_2 zmm31_2;
xor zmm14_3@uint64 zmm14_3 zmm31_3;
xor zmm14_4@uint64 zmm14_4 zmm31_4;
xor zmm14_5@uint64 zmm14_5 zmm31_5;
xor zmm14_6@uint64 zmm14_6 zmm31_6;
xor zmm14_7@uint64 zmm14_7 zmm31_7;
(* vpxord %zmm19,%zmm16,%zmm16                     #! PC = 0x55555558d777 *)
xor zmm16_0@uint64 zmm16_0 zmm19_0;
xor zmm16_1@uint64 zmm16_1 zmm19_1;
xor zmm16_2@uint64 zmm16_2 zmm19_2;
xor zmm16_3@uint64 zmm16_3 zmm19_3;
xor zmm16_4@uint64 zmm16_4 zmm19_4;
xor zmm16_5@uint64 zmm16_5 zmm19_5;
xor zmm16_6@uint64 zmm16_6 zmm19_6;
xor zmm16_7@uint64 zmm16_7 zmm19_7;
(* vprorq $0x17,%zmm4,%zmm4                        #! PC = 0x55555558d77d *)
ror zmm4_0 zmm4_0 0x17;
ror zmm4_1 zmm4_1 0x17;
ror zmm4_2 zmm4_2 0x17;
ror zmm4_3 zmm4_3 0x17;
ror zmm4_4 zmm4_4 0x17;
ror zmm4_5 zmm4_5 0x17;
ror zmm4_6 zmm4_6 0x17;
ror zmm4_7 zmm4_7 0x17;
(* vprolq $0x2,%zmm14,%zmm14                       #! PC = 0x55555558d784 *)
rol zmm14_0 zmm14_0 0x2;
rol zmm14_1 zmm14_1 0x2;
rol zmm14_2 zmm14_2 0x2;
rol zmm14_3 zmm14_3 0x2;
rol zmm14_4 zmm14_4 0x2;
rol zmm14_5 zmm14_5 0x2;
rol zmm14_6 zmm14_6 0x2;
rol zmm14_7 zmm14_7 0x2;
(* vprorq $0x19,%zmm16,%zmm16                      #! PC = 0x55555558d78b *)
ror zmm16_0 zmm16_0 0x19;
ror zmm16_1 zmm16_1 0x19;
ror zmm16_2 zmm16_2 0x19;
ror zmm16_3 zmm16_3 0x19;
ror zmm16_4 zmm16_4 0x19;
ror zmm16_5 zmm16_5 0x19;
ror zmm16_6 zmm16_6 0x19;
ror zmm16_7 zmm16_7 0x19;
(* vmovdqa64 %zmm24,%zmm30                         #! PC = 0x55555558d792 *)
mov zmm30_0 zmm24_0;
mov zmm30_1 zmm24_1;
mov zmm30_2 zmm24_2;
mov zmm30_3 zmm24_3;
mov zmm30_4 zmm24_4;
mov zmm30_5 zmm24_5;
mov zmm30_6 zmm24_6;
mov zmm30_7 zmm24_7;
(* vmovdqa64 %zmm26,%zmm27                         #! PC = 0x55555558d798 *)
mov zmm27_0 zmm26_0;
mov zmm27_1 zmm26_1;
mov zmm27_2 zmm26_2;
mov zmm27_3 zmm26_3;
mov zmm27_4 zmm26_4;
mov zmm27_5 zmm26_5;
mov zmm27_6 zmm26_6;
mov zmm27_7 zmm26_7;
(* vpternlogq $0xd2,%zmm2,%zmm26,%zmm30            #! PC = 0x55555558d79e *)
mov table 0xd2@uint8;
inline vpternlogq64 (zmm30_0, zmm26_0, zmm2_0, table);
inline vpternlogq64 (zmm30_1, zmm26_1, zmm2_1, table);
inline vpternlogq64 (zmm30_2, zmm26_2, zmm2_2, table);
inline vpternlogq64 (zmm30_3, zmm26_3, zmm2_3, table);
inline vpternlogq64 (zmm30_4, zmm26_4, zmm2_4, table);
inline vpternlogq64 (zmm30_5, zmm26_5, zmm2_5, table);
inline vpternlogq64 (zmm30_6, zmm26_6, zmm2_6, table);
inline vpternlogq64 (zmm30_7, zmm26_7, zmm2_7, table);
(* vpternlogq $0xd2,%zmm11,%zmm2,%zmm27            #! PC = 0x55555558d7a5 *)
mov table 0xd2@uint8;
inline vpternlogq64 (zmm27_0, zmm2_0, zmm11_0, table);
inline vpternlogq64 (zmm27_1, zmm2_1, zmm11_1, table);
inline vpternlogq64 (zmm27_2, zmm2_2, zmm11_2, table);
inline vpternlogq64 (zmm27_3, zmm2_3, zmm11_3, table);
inline vpternlogq64 (zmm27_4, zmm2_4, zmm11_4, table);
inline vpternlogq64 (zmm27_5, zmm2_5, zmm11_5, table);
inline vpternlogq64 (zmm27_6, zmm2_6, zmm11_6, table);
inline vpternlogq64 (zmm27_7, zmm2_7, zmm11_7, table);
(* vpternlogq $0xd2,%zmm10,%zmm11,%zmm2            #! PC = 0x55555558d7ac *)
mov table 0xd2@uint8;
inline vpternlogq64 (zmm2_0, zmm11_0, zmm10_0, table);
inline vpternlogq64 (zmm2_1, zmm11_1, zmm10_1, table);
inline vpternlogq64 (zmm2_2, zmm11_2, zmm10_2, table);
inline vpternlogq64 (zmm2_3, zmm11_3, zmm10_3, table);
inline vpternlogq64 (zmm2_4, zmm11_4, zmm10_4, table);
inline vpternlogq64 (zmm2_5, zmm11_5, zmm10_5, table);
inline vpternlogq64 (zmm2_6, zmm11_6, zmm10_6, table);
inline vpternlogq64 (zmm2_7, zmm11_7, zmm10_7, table);
(* vpternlogq $0xd2,%zmm24,%zmm10,%zmm11           #! PC = 0x55555558d7b3 *)
mov table 0xd2@uint8;
inline vpternlogq64 (zmm11_0, zmm10_0, zmm24_0, table);
inline vpternlogq64 (zmm11_1, zmm10_1, zmm24_1, table);
inline vpternlogq64 (zmm11_2, zmm10_2, zmm24_2, table);
inline vpternlogq64 (zmm11_3, zmm10_3, zmm24_3, table);
inline vpternlogq64 (zmm11_4, zmm10_4, zmm24_4, table);
inline vpternlogq64 (zmm11_5, zmm10_5, zmm24_5, table);
inline vpternlogq64 (zmm11_6, zmm10_6, zmm24_6, table);
inline vpternlogq64 (zmm11_7, zmm10_7, zmm24_7, table);
(* vpternlogq $0xd2,%zmm26,%zmm24,%zmm10           #! PC = 0x55555558d7ba *)
mov table 0xd2@uint8;
inline vpternlogq64 (zmm10_0, zmm24_0, zmm26_0, table);
inline vpternlogq64 (zmm10_1, zmm24_1, zmm26_1, table);
inline vpternlogq64 (zmm10_2, zmm24_2, zmm26_2, table);
inline vpternlogq64 (zmm10_3, zmm24_3, zmm26_3, table);
inline vpternlogq64 (zmm10_4, zmm24_4, zmm26_4, table);
inline vpternlogq64 (zmm10_5, zmm24_5, zmm26_5, table);
inline vpternlogq64 (zmm10_6, zmm24_6, zmm26_6, table);
inline vpternlogq64 (zmm10_7, zmm24_7, zmm26_7, table);
(* vpbroadcastq %r8,%zmm24                         #! PC = 0x55555558d7c1 *)
mov zmm24_0 r8;
mov zmm24_1 r8;
mov zmm24_2 r8;
mov zmm24_3 r8;
mov zmm24_4 r8;
mov zmm24_5 r8;
mov zmm24_6 r8;
mov zmm24_7 r8;
(* vpxord %zmm24,%zmm30,%zmm24                     #! PC = 0x55555558d7c7 *)
xor zmm24_0@uint64 zmm30_0 zmm24_0;
xor zmm24_1@uint64 zmm30_1 zmm24_1;
xor zmm24_2@uint64 zmm30_2 zmm24_2;
xor zmm24_3@uint64 zmm30_3 zmm24_3;
xor zmm24_4@uint64 zmm30_4 zmm24_4;
xor zmm24_5@uint64 zmm30_5 zmm24_5;
xor zmm24_6@uint64 zmm30_6 zmm24_6;
xor zmm24_7@uint64 zmm30_7 zmm24_7;
(* vmovdqa64 %zmm6,%zmm26                          #! PC = 0x55555558d7cd *)
mov zmm26_0 zmm6_0;
mov zmm26_1 zmm6_1;
mov zmm26_2 zmm6_2;
mov zmm26_3 zmm6_3;
mov zmm26_4 zmm6_4;
mov zmm26_5 zmm6_5;
mov zmm26_6 zmm6_6;
mov zmm26_7 zmm6_7;
(* vmovdqa64 %zmm22,%zmm30                         #! PC = 0x55555558d7d3 *)
mov zmm30_0 zmm22_0;
mov zmm30_1 zmm22_1;
mov zmm30_2 zmm22_2;
mov zmm30_3 zmm22_3;
mov zmm30_4 zmm22_4;
mov zmm30_5 zmm22_5;
mov zmm30_6 zmm22_6;
mov zmm30_7 zmm22_7;
(* vpternlogq $0xd2,%zmm13,%zmm22,%zmm26           #! PC = 0x55555558d7d9 *)
mov table 0xd2@uint8;
inline vpternlogq64 (zmm26_0, zmm22_0, zmm13_0, table);
inline vpternlogq64 (zmm26_1, zmm22_1, zmm13_1, table);
inline vpternlogq64 (zmm26_2, zmm22_2, zmm13_2, table);
inline vpternlogq64 (zmm26_3, zmm22_3, zmm13_3, table);
inline vpternlogq64 (zmm26_4, zmm22_4, zmm13_4, table);
inline vpternlogq64 (zmm26_5, zmm22_5, zmm13_5, table);
inline vpternlogq64 (zmm26_6, zmm22_6, zmm13_6, table);
inline vpternlogq64 (zmm26_7, zmm22_7, zmm13_7, table);
(* vpternlogq $0xd2,%zmm8,%zmm13,%zmm30            #! PC = 0x55555558d7e0 *)
mov table 0xd2@uint8;
inline vpternlogq64 (zmm30_0, zmm13_0, zmm8_0, table);
inline vpternlogq64 (zmm30_1, zmm13_1, zmm8_1, table);
inline vpternlogq64 (zmm30_2, zmm13_2, zmm8_2, table);
inline vpternlogq64 (zmm30_3, zmm13_3, zmm8_3, table);
inline vpternlogq64 (zmm30_4, zmm13_4, zmm8_4, table);
inline vpternlogq64 (zmm30_5, zmm13_5, zmm8_5, table);
inline vpternlogq64 (zmm30_6, zmm13_6, zmm8_6, table);
inline vpternlogq64 (zmm30_7, zmm13_7, zmm8_7, table);
(* vpternlogq $0xd2,%zmm12,%zmm8,%zmm13            #! PC = 0x55555558d7e7 *)
mov table 0xd2@uint8;
inline vpternlogq64 (zmm13_0, zmm8_0, zmm12_0, table);
inline vpternlogq64 (zmm13_1, zmm8_1, zmm12_1, table);
inline vpternlogq64 (zmm13_2, zmm8_2, zmm12_2, table);
inline vpternlogq64 (zmm13_3, zmm8_3, zmm12_3, table);
inline vpternlogq64 (zmm13_4, zmm8_4, zmm12_4, table);
inline vpternlogq64 (zmm13_5, zmm8_5, zmm12_5, table);
inline vpternlogq64 (zmm13_6, zmm8_6, zmm12_6, table);
inline vpternlogq64 (zmm13_7, zmm8_7, zmm12_7, table);
(* vpternlogq $0xd2,%zmm6,%zmm12,%zmm8             #! PC = 0x55555558d7ee *)
mov table 0xd2@uint8;
inline vpternlogq64 (zmm8_0, zmm12_0, zmm6_0, table);
inline vpternlogq64 (zmm8_1, zmm12_1, zmm6_1, table);
inline vpternlogq64 (zmm8_2, zmm12_2, zmm6_2, table);
inline vpternlogq64 (zmm8_3, zmm12_3, zmm6_3, table);
inline vpternlogq64 (zmm8_4, zmm12_4, zmm6_4, table);
inline vpternlogq64 (zmm8_5, zmm12_5, zmm6_5, table);
inline vpternlogq64 (zmm8_6, zmm12_6, zmm6_6, table);
inline vpternlogq64 (zmm8_7, zmm12_7, zmm6_7, table);
(* vpternlogq $0xd2,%zmm22,%zmm6,%zmm12            #! PC = 0x55555558d7f5 *)
mov table 0xd2@uint8;
inline vpternlogq64 (zmm12_0, zmm6_0, zmm22_0, table);
inline vpternlogq64 (zmm12_1, zmm6_1, zmm22_1, table);
inline vpternlogq64 (zmm12_2, zmm6_2, zmm22_2, table);
inline vpternlogq64 (zmm12_3, zmm6_3, zmm22_3, table);
inline vpternlogq64 (zmm12_4, zmm6_4, zmm22_4, table);
inline vpternlogq64 (zmm12_5, zmm6_5, zmm22_5, table);
inline vpternlogq64 (zmm12_6, zmm6_6, zmm22_6, table);
inline vpternlogq64 (zmm12_7, zmm6_7, zmm22_7, table);
(* vmovdqa64 %zmm23,%zmm22                         #! PC = 0x55555558d7fc *)
mov zmm22_0 zmm23_0;
mov zmm22_1 zmm23_1;
mov zmm22_2 zmm23_2;
mov zmm22_3 zmm23_3;
mov zmm22_4 zmm23_4;
mov zmm22_5 zmm23_5;
mov zmm22_6 zmm23_6;
mov zmm22_7 zmm23_7;
(* vmovdqa64 %zmm15,%zmm6                          #! PC = 0x55555558d802 *)
mov zmm6_0 zmm15_0;
mov zmm6_1 zmm15_1;
mov zmm6_2 zmm15_2;
mov zmm6_3 zmm15_3;
mov zmm6_4 zmm15_4;
mov zmm6_5 zmm15_5;
mov zmm6_6 zmm15_6;
mov zmm6_7 zmm15_7;
(* vpternlogq $0xd2,%zmm1,%zmm15,%zmm22            #! PC = 0x55555558d808 *)
mov table 0xd2@uint8;
inline vpternlogq64 (zmm22_0, zmm15_0, zmm1_0, table);
inline vpternlogq64 (zmm22_1, zmm15_1, zmm1_1, table);
inline vpternlogq64 (zmm22_2, zmm15_2, zmm1_2, table);
inline vpternlogq64 (zmm22_3, zmm15_3, zmm1_3, table);
inline vpternlogq64 (zmm22_4, zmm15_4, zmm1_4, table);
inline vpternlogq64 (zmm22_5, zmm15_5, zmm1_5, table);
inline vpternlogq64 (zmm22_6, zmm15_6, zmm1_6, table);
inline vpternlogq64 (zmm22_7, zmm15_7, zmm1_7, table);
(* vpternlogq $0xd2,%zmm5,%zmm1,%zmm6              #! PC = 0x55555558d80f *)
mov table 0xd2@uint8;
inline vpternlogq64 (zmm6_0, zmm1_0, zmm5_0, table);
inline vpternlogq64 (zmm6_1, zmm1_1, zmm5_1, table);
inline vpternlogq64 (zmm6_2, zmm1_2, zmm5_2, table);
inline vpternlogq64 (zmm6_3, zmm1_3, zmm5_3, table);
inline vpternlogq64 (zmm6_4, zmm1_4, zmm5_4, table);
inline vpternlogq64 (zmm6_5, zmm1_5, zmm5_5, table);
inline vpternlogq64 (zmm6_6, zmm1_6, zmm5_6, table);
inline vpternlogq64 (zmm6_7, zmm1_7, zmm5_7, table);
(* vpternlogq $0xd2,%zmm21,%zmm5,%zmm1             #! PC = 0x55555558d816 *)
mov table 0xd2@uint8;
inline vpternlogq64 (zmm1_0, zmm5_0, zmm21_0, table);
inline vpternlogq64 (zmm1_1, zmm5_1, zmm21_1, table);
inline vpternlogq64 (zmm1_2, zmm5_2, zmm21_2, table);
inline vpternlogq64 (zmm1_3, zmm5_3, zmm21_3, table);
inline vpternlogq64 (zmm1_4, zmm5_4, zmm21_4, table);
inline vpternlogq64 (zmm1_5, zmm5_5, zmm21_5, table);
inline vpternlogq64 (zmm1_6, zmm5_6, zmm21_6, table);
inline vpternlogq64 (zmm1_7, zmm5_7, zmm21_7, table);
(* vpternlogq $0xd2,%zmm23,%zmm21,%zmm5            #! PC = 0x55555558d81d *)
mov table 0xd2@uint8;
inline vpternlogq64 (zmm5_0, zmm21_0, zmm23_0, table);
inline vpternlogq64 (zmm5_1, zmm21_1, zmm23_1, table);
inline vpternlogq64 (zmm5_2, zmm21_2, zmm23_2, table);
inline vpternlogq64 (zmm5_3, zmm21_3, zmm23_3, table);
inline vpternlogq64 (zmm5_4, zmm21_4, zmm23_4, table);
inline vpternlogq64 (zmm5_5, zmm21_5, zmm23_5, table);
inline vpternlogq64 (zmm5_6, zmm21_6, zmm23_6, table);
inline vpternlogq64 (zmm5_7, zmm21_7, zmm23_7, table);
(* vpternlogq $0xd2,%zmm15,%zmm23,%zmm21           #! PC = 0x55555558d824 *)
mov table 0xd2@uint8;
inline vpternlogq64 (zmm21_0, zmm23_0, zmm15_0, table);
inline vpternlogq64 (zmm21_1, zmm23_1, zmm15_1, table);
inline vpternlogq64 (zmm21_2, zmm23_2, zmm15_2, table);
inline vpternlogq64 (zmm21_3, zmm23_3, zmm15_3, table);
inline vpternlogq64 (zmm21_4, zmm23_4, zmm15_4, table);
inline vpternlogq64 (zmm21_5, zmm23_5, zmm15_5, table);
inline vpternlogq64 (zmm21_6, zmm23_6, zmm15_6, table);
inline vpternlogq64 (zmm21_7, zmm23_7, zmm15_7, table);
(* vmovdqa64 %zmm29,%zmm23                         #! PC = 0x55555558d82b *)
mov zmm23_0 zmm29_0;
mov zmm23_1 zmm29_1;
mov zmm23_2 zmm29_2;
mov zmm23_3 zmm29_3;
mov zmm23_4 zmm29_4;
mov zmm23_5 zmm29_5;
mov zmm23_6 zmm29_6;
mov zmm23_7 zmm29_7;
(* vmovdqa64 %zmm25,%zmm15                         #! PC = 0x55555558d831 *)
mov zmm15_0 zmm25_0;
mov zmm15_1 zmm25_1;
mov zmm15_2 zmm25_2;
mov zmm15_3 zmm25_3;
mov zmm15_4 zmm25_4;
mov zmm15_5 zmm25_5;
mov zmm15_6 zmm25_6;
mov zmm15_7 zmm25_7;
(* vpternlogq $0xd2,%zmm7,%zmm25,%zmm23            #! PC = 0x55555558d837 *)
mov table 0xd2@uint8;
inline vpternlogq64 (zmm23_0, zmm25_0, zmm7_0, table);
inline vpternlogq64 (zmm23_1, zmm25_1, zmm7_1, table);
inline vpternlogq64 (zmm23_2, zmm25_2, zmm7_2, table);
inline vpternlogq64 (zmm23_3, zmm25_3, zmm7_3, table);
inline vpternlogq64 (zmm23_4, zmm25_4, zmm7_4, table);
inline vpternlogq64 (zmm23_5, zmm25_5, zmm7_5, table);
inline vpternlogq64 (zmm23_6, zmm25_6, zmm7_6, table);
inline vpternlogq64 (zmm23_7, zmm25_7, zmm7_7, table);
(* vpternlogq $0xd2,%zmm9,%zmm7,%zmm15             #! PC = 0x55555558d83e *)
mov table 0xd2@uint8;
inline vpternlogq64 (zmm15_0, zmm7_0, zmm9_0, table);
inline vpternlogq64 (zmm15_1, zmm7_1, zmm9_1, table);
inline vpternlogq64 (zmm15_2, zmm7_2, zmm9_2, table);
inline vpternlogq64 (zmm15_3, zmm7_3, zmm9_3, table);
inline vpternlogq64 (zmm15_4, zmm7_4, zmm9_4, table);
inline vpternlogq64 (zmm15_5, zmm7_5, zmm9_5, table);
inline vpternlogq64 (zmm15_6, zmm7_6, zmm9_6, table);
inline vpternlogq64 (zmm15_7, zmm7_7, zmm9_7, table);
(* vmovdqa64 %zmm18,%zmm31                         #! PC = 0x55555558d845 *)
mov zmm31_0 zmm18_0;
mov zmm31_1 zmm18_1;
mov zmm31_2 zmm18_2;
mov zmm31_3 zmm18_3;
mov zmm31_4 zmm18_4;
mov zmm31_5 zmm18_5;
mov zmm31_6 zmm18_6;
mov zmm31_7 zmm18_7;
(* vpternlogq $0xd2,%zmm0,%zmm9,%zmm7              #! PC = 0x55555558d84b *)
mov table 0xd2@uint8;
inline vpternlogq64 (zmm7_0, zmm9_0, zmm0_0, table);
inline vpternlogq64 (zmm7_1, zmm9_1, zmm0_1, table);
inline vpternlogq64 (zmm7_2, zmm9_2, zmm0_2, table);
inline vpternlogq64 (zmm7_3, zmm9_3, zmm0_3, table);
inline vpternlogq64 (zmm7_4, zmm9_4, zmm0_4, table);
inline vpternlogq64 (zmm7_5, zmm9_5, zmm0_5, table);
inline vpternlogq64 (zmm7_6, zmm9_6, zmm0_6, table);
inline vpternlogq64 (zmm7_7, zmm9_7, zmm0_7, table);
(* vpternlogq $0xd2,%zmm29,%zmm0,%zmm9             #! PC = 0x55555558d852 *)
mov table 0xd2@uint8;
inline vpternlogq64 (zmm9_0, zmm0_0, zmm29_0, table);
inline vpternlogq64 (zmm9_1, zmm0_1, zmm29_1, table);
inline vpternlogq64 (zmm9_2, zmm0_2, zmm29_2, table);
inline vpternlogq64 (zmm9_3, zmm0_3, zmm29_3, table);
inline vpternlogq64 (zmm9_4, zmm0_4, zmm29_4, table);
inline vpternlogq64 (zmm9_5, zmm0_5, zmm29_5, table);
inline vpternlogq64 (zmm9_6, zmm0_6, zmm29_6, table);
inline vpternlogq64 (zmm9_7, zmm0_7, zmm29_7, table);
(* vpternlogq $0xd2,%zmm25,%zmm29,%zmm0            #! PC = 0x55555558d859 *)
mov table 0xd2@uint8;
inline vpternlogq64 (zmm0_0, zmm29_0, zmm25_0, table);
inline vpternlogq64 (zmm0_1, zmm29_1, zmm25_1, table);
inline vpternlogq64 (zmm0_2, zmm29_2, zmm25_2, table);
inline vpternlogq64 (zmm0_3, zmm29_3, zmm25_3, table);
inline vpternlogq64 (zmm0_4, zmm29_4, zmm25_4, table);
inline vpternlogq64 (zmm0_5, zmm29_5, zmm25_5, table);
inline vpternlogq64 (zmm0_6, zmm29_6, zmm25_6, table);
inline vpternlogq64 (zmm0_7, zmm29_7, zmm25_7, table);
(* vmovdqa64 %zmm17,%zmm25                         #! PC = 0x55555558d860 *)
mov zmm25_0 zmm17_0;
mov zmm25_1 zmm17_1;
mov zmm25_2 zmm17_2;
mov zmm25_3 zmm17_3;
mov zmm25_4 zmm17_4;
mov zmm25_5 zmm17_5;
mov zmm25_6 zmm17_6;
mov zmm25_7 zmm17_7;
(* vpternlogq $0xd2,%zmm4,%zmm16,%zmm31            #! PC = 0x55555558d866 *)
mov table 0xd2@uint8;
inline vpternlogq64 (zmm31_0, zmm16_0, zmm4_0, table);
inline vpternlogq64 (zmm31_1, zmm16_1, zmm4_1, table);
inline vpternlogq64 (zmm31_2, zmm16_2, zmm4_2, table);
inline vpternlogq64 (zmm31_3, zmm16_3, zmm4_3, table);
inline vpternlogq64 (zmm31_4, zmm16_4, zmm4_4, table);
inline vpternlogq64 (zmm31_5, zmm16_5, zmm4_5, table);
inline vpternlogq64 (zmm31_6, zmm16_6, zmm4_6, table);
inline vpternlogq64 (zmm31_7, zmm16_7, zmm4_7, table);
(* vpternlogq $0xd2,%zmm16,%zmm18,%zmm25           #! PC = 0x55555558d86d *)
mov table 0xd2@uint8;
inline vpternlogq64 (zmm25_0, zmm18_0, zmm16_0, table);
inline vpternlogq64 (zmm25_1, zmm18_1, zmm16_1, table);
inline vpternlogq64 (zmm25_2, zmm18_2, zmm16_2, table);
inline vpternlogq64 (zmm25_3, zmm18_3, zmm16_3, table);
inline vpternlogq64 (zmm25_4, zmm18_4, zmm16_4, table);
inline vpternlogq64 (zmm25_5, zmm18_5, zmm16_5, table);
inline vpternlogq64 (zmm25_6, zmm18_6, zmm16_6, table);
inline vpternlogq64 (zmm25_7, zmm18_7, zmm16_7, table);
(* vmovdqa64 %zmm1,%zmm20                          #! PC = 0x55555558d874 *)
mov zmm20_0 zmm1_0;
mov zmm20_1 zmm1_1;
mov zmm20_2 zmm1_2;
mov zmm20_3 zmm1_3;
mov zmm20_4 zmm1_4;
mov zmm20_5 zmm1_5;
mov zmm20_6 zmm1_6;
mov zmm20_7 zmm1_7;
(* vpternlogq $0xd2,%zmm14,%zmm4,%zmm16            #! PC = 0x55555558d87a *)
mov table 0xd2@uint8;
inline vpternlogq64 (zmm16_0, zmm4_0, zmm14_0, table);
inline vpternlogq64 (zmm16_1, zmm4_1, zmm14_1, table);
inline vpternlogq64 (zmm16_2, zmm4_2, zmm14_2, table);
inline vpternlogq64 (zmm16_3, zmm4_3, zmm14_3, table);
inline vpternlogq64 (zmm16_4, zmm4_4, zmm14_4, table);
inline vpternlogq64 (zmm16_5, zmm4_5, zmm14_5, table);
inline vpternlogq64 (zmm16_6, zmm4_6, zmm14_6, table);
inline vpternlogq64 (zmm16_7, zmm4_7, zmm14_7, table);
(* vpternlogq $0x96,%zmm13,%zmm16,%zmm20           #! PC = 0x55555558d881 *)
mov table 0x96@uint8;
inline vpternlogq64 (zmm20_0, zmm16_0, zmm13_0, table);
inline vpternlogq64 (zmm20_1, zmm16_1, zmm13_1, table);
inline vpternlogq64 (zmm20_2, zmm16_2, zmm13_2, table);
inline vpternlogq64 (zmm20_3, zmm16_3, zmm13_3, table);
inline vpternlogq64 (zmm20_4, zmm16_4, zmm13_4, table);
inline vpternlogq64 (zmm20_5, zmm16_5, zmm13_5, table);
inline vpternlogq64 (zmm20_6, zmm16_6, zmm13_6, table);
inline vpternlogq64 (zmm20_7, zmm16_7, zmm13_7, table);
(* vpternlogq $0x96,%zmm2,%zmm7,%zmm20             #! PC = 0x55555558d888 *)
mov table 0x96@uint8;
inline vpternlogq64 (zmm20_0, zmm7_0, zmm2_0, table);
inline vpternlogq64 (zmm20_1, zmm7_1, zmm2_1, table);
inline vpternlogq64 (zmm20_2, zmm7_2, zmm2_2, table);
inline vpternlogq64 (zmm20_3, zmm7_3, zmm2_3, table);
inline vpternlogq64 (zmm20_4, zmm7_4, zmm2_4, table);
inline vpternlogq64 (zmm20_5, zmm7_5, zmm2_5, table);
inline vpternlogq64 (zmm20_6, zmm7_6, zmm2_6, table);
inline vpternlogq64 (zmm20_7, zmm7_7, zmm2_7, table);
(* vpternlogq $0xd2,%zmm17,%zmm14,%zmm4            #! PC = 0x55555558d88f *)
mov table 0xd2@uint8;
inline vpternlogq64 (zmm4_0, zmm14_0, zmm17_0, table);
inline vpternlogq64 (zmm4_1, zmm14_1, zmm17_1, table);
inline vpternlogq64 (zmm4_2, zmm14_2, zmm17_2, table);
inline vpternlogq64 (zmm4_3, zmm14_3, zmm17_3, table);
inline vpternlogq64 (zmm4_4, zmm14_4, zmm17_4, table);
inline vpternlogq64 (zmm4_5, zmm14_5, zmm17_5, table);
inline vpternlogq64 (zmm4_6, zmm14_6, zmm17_6, table);
inline vpternlogq64 (zmm4_7, zmm14_7, zmm17_7, table);
(* vpternlogq $0xd2,%zmm18,%zmm17,%zmm14           #! PC = 0x55555558d896 *)
mov table 0xd2@uint8;
inline vpternlogq64 (zmm14_0, zmm17_0, zmm18_0, table);
inline vpternlogq64 (zmm14_1, zmm17_1, zmm18_1, table);
inline vpternlogq64 (zmm14_2, zmm17_2, zmm18_2, table);
inline vpternlogq64 (zmm14_3, zmm17_3, zmm18_3, table);
inline vpternlogq64 (zmm14_4, zmm17_4, zmm18_4, table);
inline vpternlogq64 (zmm14_5, zmm17_5, zmm18_5, table);
inline vpternlogq64 (zmm14_6, zmm17_6, zmm18_6, table);
inline vpternlogq64 (zmm14_7, zmm17_7, zmm18_7, table);
(* vprolq $0x1,%zmm20,%zmm18                       #! PC = 0x55555558d89d *)
rol zmm18_0 zmm20_0 0x1;
rol zmm18_1 zmm20_1 0x1;
rol zmm18_2 zmm20_2 0x1;
rol zmm18_3 zmm20_3 0x1;
rol zmm18_4 zmm20_4 0x1;
rol zmm18_5 zmm20_5 0x1;
rol zmm18_6 zmm20_6 0x1;
rol zmm18_7 zmm20_7 0x1;
(* vmovdqa64 %zmm9,%zmm28                          #! PC = 0x55555558d8a4 *)
mov zmm28_0 zmm9_0;
mov zmm28_1 zmm9_1;
mov zmm28_2 zmm9_2;
mov zmm28_3 zmm9_3;
mov zmm28_4 zmm9_4;
mov zmm28_5 zmm9_5;
mov zmm28_6 zmm9_6;
mov zmm28_7 zmm9_7;
(* vpternlogq $0x96,%zmm5,%zmm11,%zmm28            #! PC = 0x55555558d8aa *)
mov table 0x96@uint8;
inline vpternlogq64 (zmm28_0, zmm11_0, zmm5_0, table);
inline vpternlogq64 (zmm28_1, zmm11_1, zmm5_1, table);
inline vpternlogq64 (zmm28_2, zmm11_2, zmm5_2, table);
inline vpternlogq64 (zmm28_3, zmm11_3, zmm5_3, table);
inline vpternlogq64 (zmm28_4, zmm11_4, zmm5_4, table);
inline vpternlogq64 (zmm28_5, zmm11_5, zmm5_5, table);
inline vpternlogq64 (zmm28_6, zmm11_6, zmm5_6, table);
inline vpternlogq64 (zmm28_7, zmm11_7, zmm5_7, table);
(* vpternlogq $0x96,%zmm8,%zmm4,%zmm28             #! PC = 0x55555558d8b1 *)
mov table 0x96@uint8;
inline vpternlogq64 (zmm28_0, zmm4_0, zmm8_0, table);
inline vpternlogq64 (zmm28_1, zmm4_1, zmm8_1, table);
inline vpternlogq64 (zmm28_2, zmm4_2, zmm8_2, table);
inline vpternlogq64 (zmm28_3, zmm4_3, zmm8_3, table);
inline vpternlogq64 (zmm28_4, zmm4_4, zmm8_4, table);
inline vpternlogq64 (zmm28_5, zmm4_5, zmm8_5, table);
inline vpternlogq64 (zmm28_6, zmm4_6, zmm8_6, table);
inline vpternlogq64 (zmm28_7, zmm4_7, zmm8_7, table);
(* vmovdqa64 %zmm14,%zmm29                         #! PC = 0x55555558d8b8 *)
mov zmm29_0 zmm14_0;
mov zmm29_1 zmm14_1;
mov zmm29_2 zmm14_2;
mov zmm29_3 zmm14_3;
mov zmm29_4 zmm14_4;
mov zmm29_5 zmm14_5;
mov zmm29_6 zmm14_6;
mov zmm29_7 zmm14_7;
(* vpternlogq $0x96,%zmm0,%zmm12,%zmm29            #! PC = 0x55555558d8be *)
mov table 0x96@uint8;
inline vpternlogq64 (zmm29_0, zmm12_0, zmm0_0, table);
inline vpternlogq64 (zmm29_1, zmm12_1, zmm0_1, table);
inline vpternlogq64 (zmm29_2, zmm12_2, zmm0_2, table);
inline vpternlogq64 (zmm29_3, zmm12_3, zmm0_3, table);
inline vpternlogq64 (zmm29_4, zmm12_4, zmm0_4, table);
inline vpternlogq64 (zmm29_5, zmm12_5, zmm0_5, table);
inline vpternlogq64 (zmm29_6, zmm12_6, zmm0_6, table);
inline vpternlogq64 (zmm29_7, zmm12_7, zmm0_7, table);
(* vmovdqa64 %zmm18,0x148(%rsp)                    #! EA = L0x7fffffffd600; PC = 0x55555558d8c5 *)
mov L0x7fffffffd600 zmm18_0;
mov L0x7fffffffd608 zmm18_1;
mov L0x7fffffffd610 zmm18_2;
mov L0x7fffffffd618 zmm18_3;
mov L0x7fffffffd620 zmm18_4;
mov L0x7fffffffd628 zmm18_5;
mov L0x7fffffffd630 zmm18_6;
mov L0x7fffffffd638 zmm18_7;
(* vprolq $0x1,%zmm28,%zmm18                       #! PC = 0x55555558d8d0 *)
rol zmm18_0 zmm28_0 0x1;
rol zmm18_1 zmm28_1 0x1;
rol zmm18_2 zmm28_2 0x1;
rol zmm18_3 zmm28_3 0x1;
rol zmm18_4 zmm28_4 0x1;
rol zmm18_5 zmm28_5 0x1;
rol zmm18_6 zmm28_6 0x1;
rol zmm18_7 zmm28_7 0x1;
(* vpternlogq $0x96,%zmm21,%zmm10,%zmm29           #! PC = 0x55555558d8d7 *)
mov table 0x96@uint8;
inline vpternlogq64 (zmm29_0, zmm10_0, zmm21_0, table);
inline vpternlogq64 (zmm29_1, zmm10_1, zmm21_1, table);
inline vpternlogq64 (zmm29_2, zmm10_2, zmm21_2, table);
inline vpternlogq64 (zmm29_3, zmm10_3, zmm21_3, table);
inline vpternlogq64 (zmm29_4, zmm10_4, zmm21_4, table);
inline vpternlogq64 (zmm29_5, zmm10_5, zmm21_5, table);
inline vpternlogq64 (zmm29_6, zmm10_6, zmm21_6, table);
inline vpternlogq64 (zmm29_7, zmm10_7, zmm21_7, table);
(* vmovdqa64 %zmm24,%zmm17                         #! PC = 0x55555558d8de *)
mov zmm17_0 zmm24_0;
mov zmm17_1 zmm24_1;
mov zmm17_2 zmm24_2;
mov zmm17_3 zmm24_3;
mov zmm17_4 zmm24_4;
mov zmm17_5 zmm24_5;
mov zmm17_6 zmm24_6;
mov zmm17_7 zmm24_7;
(* vpternlogq $0x96,%zmm25,%zmm22,%zmm17           #! PC = 0x55555558d8e4 *)
mov table 0x96@uint8;
inline vpternlogq64 (zmm17_0, zmm22_0, zmm25_0, table);
inline vpternlogq64 (zmm17_1, zmm22_1, zmm25_1, table);
inline vpternlogq64 (zmm17_2, zmm22_2, zmm25_2, table);
inline vpternlogq64 (zmm17_3, zmm22_3, zmm25_3, table);
inline vpternlogq64 (zmm17_4, zmm22_4, zmm25_4, table);
inline vpternlogq64 (zmm17_5, zmm22_5, zmm25_5, table);
inline vpternlogq64 (zmm17_6, zmm22_6, zmm25_6, table);
inline vpternlogq64 (zmm17_7, zmm22_7, zmm25_7, table);
(* vpternlogq $0x96,%zmm23,%zmm26,%zmm17           #! PC = 0x55555558d8eb *)
mov table 0x96@uint8;
inline vpternlogq64 (zmm17_0, zmm26_0, zmm23_0, table);
inline vpternlogq64 (zmm17_1, zmm26_1, zmm23_1, table);
inline vpternlogq64 (zmm17_2, zmm26_2, zmm23_2, table);
inline vpternlogq64 (zmm17_3, zmm26_3, zmm23_3, table);
inline vpternlogq64 (zmm17_4, zmm26_4, zmm23_4, table);
inline vpternlogq64 (zmm17_5, zmm26_5, zmm23_5, table);
inline vpternlogq64 (zmm17_6, zmm26_6, zmm23_6, table);
inline vpternlogq64 (zmm17_7, zmm26_7, zmm23_7, table);
(* vmovdqa64 %zmm30,%zmm19                         #! PC = 0x55555558d8f2 *)
mov zmm19_0 zmm30_0;
mov zmm19_1 zmm30_1;
mov zmm19_2 zmm30_2;
mov zmm19_3 zmm30_3;
mov zmm19_4 zmm30_4;
mov zmm19_5 zmm30_5;
mov zmm19_6 zmm30_6;
mov zmm19_7 zmm30_7;
(* vmovdqa64 %zmm18,0x108(%rsp)                    #! EA = L0x7fffffffd5c0; PC = 0x55555558d8f8 *)
mov L0x7fffffffd5c0 zmm18_0;
mov L0x7fffffffd5c8 zmm18_1;
mov L0x7fffffffd5d0 zmm18_2;
mov L0x7fffffffd5d8 zmm18_3;
mov L0x7fffffffd5e0 zmm18_4;
mov L0x7fffffffd5e8 zmm18_5;
mov L0x7fffffffd5f0 zmm18_6;
mov L0x7fffffffd5f8 zmm18_7;
(* vprolq $0x1,%zmm29,%zmm18                       #! PC = 0x55555558d903 *)
rol zmm18_0 zmm29_0 0x1;
rol zmm18_1 zmm29_1 0x1;
rol zmm18_2 zmm29_2 0x1;
rol zmm18_3 zmm29_3 0x1;
rol zmm18_4 zmm29_4 0x1;
rol zmm18_5 zmm29_5 0x1;
rol zmm18_6 zmm29_6 0x1;
rol zmm18_7 zmm29_7 0x1;
(* vpternlogq $0x96,%zmm27,%zmm15,%zmm19           #! PC = 0x55555558d90a *)
mov table 0x96@uint8;
inline vpternlogq64 (zmm19_0, zmm15_0, zmm27_0, table);
inline vpternlogq64 (zmm19_1, zmm15_1, zmm27_1, table);
inline vpternlogq64 (zmm19_2, zmm15_2, zmm27_2, table);
inline vpternlogq64 (zmm19_3, zmm15_3, zmm27_3, table);
inline vpternlogq64 (zmm19_4, zmm15_4, zmm27_4, table);
inline vpternlogq64 (zmm19_5, zmm15_5, zmm27_5, table);
inline vpternlogq64 (zmm19_6, zmm15_6, zmm27_6, table);
inline vpternlogq64 (zmm19_7, zmm15_7, zmm27_7, table);
(* vpternlogq $0x96,%zmm31,%zmm6,%zmm19            #! PC = 0x55555558d911 *)
mov table 0x96@uint8;
inline vpternlogq64 (zmm19_0, zmm6_0, zmm31_0, table);
inline vpternlogq64 (zmm19_1, zmm6_1, zmm31_1, table);
inline vpternlogq64 (zmm19_2, zmm6_2, zmm31_2, table);
inline vpternlogq64 (zmm19_3, zmm6_3, zmm31_3, table);
inline vpternlogq64 (zmm19_4, zmm6_4, zmm31_4, table);
inline vpternlogq64 (zmm19_5, zmm6_5, zmm31_5, table);
inline vpternlogq64 (zmm19_6, zmm6_6, zmm31_6, table);
inline vpternlogq64 (zmm19_7, zmm6_7, zmm31_7, table);
(* vprolq $0x1,%zmm19,%zmm3                        #! PC = 0x55555558d918 *)
rol zmm3_0 zmm19_0 0x1;
rol zmm3_1 zmm19_1 0x1;
rol zmm3_2 zmm19_2 0x1;
rol zmm3_3 zmm19_3 0x1;
rol zmm3_4 zmm19_4 0x1;
rol zmm3_5 zmm19_5 0x1;
rol zmm3_6 zmm19_6 0x1;
rol zmm3_7 zmm19_7 0x1;
(* vpxord 0x108(%rsp),%zmm19,%zmm19                #! EA = L0x7fffffffd5c0; Value = 0xcb4be39800146be9; PC = 0x55555558d91f *)
xor zmm19_0@uint64 zmm19_0 L0x7fffffffd5c0;
xor zmm19_1@uint64 zmm19_1 L0x7fffffffd5c8;
xor zmm19_2@uint64 zmm19_2 L0x7fffffffd5d0;
xor zmm19_3@uint64 zmm19_3 L0x7fffffffd5d8;
xor zmm19_4@uint64 zmm19_4 L0x7fffffffd5e0;
xor zmm19_5@uint64 zmm19_5 L0x7fffffffd5e8;
xor zmm19_6@uint64 zmm19_6 L0x7fffffffd5f0;
xor zmm19_7@uint64 zmm19_7 L0x7fffffffd5f8;
(* movabs $0x8000000000008089,%r8                  #! PC = 0x55555558d92a *)
mov r8 0x8000000000008089@uint64;
(* vmovdqa64 %zmm18,0xc8(%rsp)                     #! EA = L0x7fffffffd580; PC = 0x55555558d934 *)
mov L0x7fffffffd580 zmm18_0;
mov L0x7fffffffd588 zmm18_1;
mov L0x7fffffffd590 zmm18_2;
mov L0x7fffffffd598 zmm18_3;
mov L0x7fffffffd5a0 zmm18_4;
mov L0x7fffffffd5a8 zmm18_5;
mov L0x7fffffffd5b0 zmm18_6;
mov L0x7fffffffd5b8 zmm18_7;
(* vprolq $0x1,%zmm17,%zmm18                       #! PC = 0x55555558d93f *)
rol zmm18_0 zmm17_0 0x1;
rol zmm18_1 zmm17_1 0x1;
rol zmm18_2 zmm17_2 0x1;
rol zmm18_3 zmm17_3 0x1;
rol zmm18_4 zmm17_4 0x1;
rol zmm18_5 zmm17_5 0x1;
rol zmm18_6 zmm17_6 0x1;
rol zmm18_7 zmm17_7 0x1;
(* vpxord 0x148(%rsp),%zmm17,%zmm17                #! EA = L0x7fffffffd600; Value = 0x283f157d1b60eb26; PC = 0x55555558d946 *)
xor zmm17_0@uint64 zmm17_0 L0x7fffffffd600;
xor zmm17_1@uint64 zmm17_1 L0x7fffffffd608;
xor zmm17_2@uint64 zmm17_2 L0x7fffffffd610;
xor zmm17_3@uint64 zmm17_3 L0x7fffffffd618;
xor zmm17_4@uint64 zmm17_4 L0x7fffffffd620;
xor zmm17_5@uint64 zmm17_5 L0x7fffffffd628;
xor zmm17_6@uint64 zmm17_6 L0x7fffffffd630;
xor zmm17_7@uint64 zmm17_7 L0x7fffffffd638;
(* vpxord 0xc8(%rsp),%zmm20,%zmm20                 #! EA = L0x7fffffffd580; Value = 0x7945f6744102f8f9; PC = 0x55555558d951 *)
xor zmm20_0@uint64 zmm20_0 L0x7fffffffd580;
xor zmm20_1@uint64 zmm20_1 L0x7fffffffd588;
xor zmm20_2@uint64 zmm20_2 L0x7fffffffd590;
xor zmm20_3@uint64 zmm20_3 L0x7fffffffd598;
xor zmm20_4@uint64 zmm20_4 L0x7fffffffd5a0;
xor zmm20_5@uint64 zmm20_5 L0x7fffffffd5a8;
xor zmm20_6@uint64 zmm20_6 L0x7fffffffd5b0;
xor zmm20_7@uint64 zmm20_7 L0x7fffffffd5b8;
(* vpxord %zmm30,%zmm17,%zmm30                     #! PC = 0x55555558d95c *)
xor zmm30_0@uint64 zmm17_0 zmm30_0;
xor zmm30_1@uint64 zmm17_1 zmm30_1;
xor zmm30_2@uint64 zmm17_2 zmm30_2;
xor zmm30_3@uint64 zmm17_3 zmm30_3;
xor zmm30_4@uint64 zmm17_4 zmm30_4;
xor zmm30_5@uint64 zmm17_5 zmm30_5;
xor zmm30_6@uint64 zmm17_6 zmm30_6;
xor zmm30_7@uint64 zmm17_7 zmm30_7;
(* vprorq $0x14,%zmm30,%zmm30                      #! PC = 0x55555558d962 *)
ror zmm30_0 zmm30_0 0x14;
ror zmm30_1 zmm30_1 0x14;
ror zmm30_2 zmm30_2 0x14;
ror zmm30_3 zmm30_3 0x14;
ror zmm30_4 zmm30_4 0x14;
ror zmm30_5 zmm30_5 0x14;
ror zmm30_6 zmm30_6 0x14;
ror zmm30_7 zmm30_7 0x14;
(* vpxord %zmm1,%zmm19,%zmm1                       #! PC = 0x55555558d969 *)
xor zmm1_0@uint64 zmm19_0 zmm1_0;
xor zmm1_1@uint64 zmm19_1 zmm1_1;
xor zmm1_2@uint64 zmm19_2 zmm1_2;
xor zmm1_3@uint64 zmm19_3 zmm1_3;
xor zmm1_4@uint64 zmm19_4 zmm1_4;
xor zmm1_5@uint64 zmm19_5 zmm1_5;
xor zmm1_6@uint64 zmm19_6 zmm1_6;
xor zmm1_7@uint64 zmm19_7 zmm1_7;
(* vpxord %zmm28,%zmm18,%zmm18                     #! PC = 0x55555558d96f *)
xor zmm18_0@uint64 zmm18_0 zmm28_0;
xor zmm18_1@uint64 zmm18_1 zmm28_1;
xor zmm18_2@uint64 zmm18_2 zmm28_2;
xor zmm18_3@uint64 zmm18_3 zmm28_3;
xor zmm18_4@uint64 zmm18_4 zmm28_4;
xor zmm18_5@uint64 zmm18_5 zmm28_5;
xor zmm18_6@uint64 zmm18_6 zmm28_6;
xor zmm18_7@uint64 zmm18_7 zmm28_7;
(* vpxord %zmm9,%zmm20,%zmm9                       #! PC = 0x55555558d975 *)
xor zmm9_0@uint64 zmm20_0 zmm9_0;
xor zmm9_1@uint64 zmm20_1 zmm9_1;
xor zmm9_2@uint64 zmm20_2 zmm9_2;
xor zmm9_3@uint64 zmm20_3 zmm9_3;
xor zmm9_4@uint64 zmm20_4 zmm9_4;
xor zmm9_5@uint64 zmm20_5 zmm9_5;
xor zmm9_6@uint64 zmm20_6 zmm9_6;
xor zmm9_7@uint64 zmm20_7 zmm9_7;
(* vpxord %zmm14,%zmm18,%zmm14                     #! PC = 0x55555558d97b *)
xor zmm14_0@uint64 zmm18_0 zmm14_0;
xor zmm14_1@uint64 zmm18_1 zmm14_1;
xor zmm14_2@uint64 zmm18_2 zmm14_2;
xor zmm14_3@uint64 zmm18_3 zmm14_3;
xor zmm14_4@uint64 zmm18_4 zmm14_4;
xor zmm14_5@uint64 zmm18_5 zmm14_5;
xor zmm14_6@uint64 zmm18_6 zmm14_6;
xor zmm14_7@uint64 zmm18_7 zmm14_7;
(* vpxord %zmm29,%zmm3,%zmm3                       #! PC = 0x55555558d981 *)
xor zmm3_0@uint64 zmm3_0 zmm29_0;
xor zmm3_1@uint64 zmm3_1 zmm29_1;
xor zmm3_2@uint64 zmm3_2 zmm29_2;
xor zmm3_3@uint64 zmm3_3 zmm29_3;
xor zmm3_4@uint64 zmm3_4 zmm29_4;
xor zmm3_5@uint64 zmm3_5 zmm29_5;
xor zmm3_6@uint64 zmm3_6 zmm29_6;
xor zmm3_7@uint64 zmm3_7 zmm29_7;
(* vprorq $0x15,%zmm1,%zmm1                        #! PC = 0x55555558d987 *)
ror zmm1_0 zmm1_0 0x15;
ror zmm1_1 zmm1_1 0x15;
ror zmm1_2 zmm1_2 0x15;
ror zmm1_3 zmm1_3 0x15;
ror zmm1_4 zmm1_4 0x15;
ror zmm1_5 zmm1_5 0x15;
ror zmm1_6 zmm1_6 0x15;
ror zmm1_7 zmm1_7 0x15;
(* vprolq $0x15,%zmm9,%zmm9                        #! PC = 0x55555558d98e *)
rol zmm9_0 zmm9_0 0x15;
rol zmm9_1 zmm9_1 0x15;
rol zmm9_2 zmm9_2 0x15;
rol zmm9_3 zmm9_3 0x15;
rol zmm9_4 zmm9_4 0x15;
rol zmm9_5 zmm9_5 0x15;
rol zmm9_6 zmm9_6 0x15;
rol zmm9_7 zmm9_7 0x15;
(* vprolq $0xe,%zmm14,%zmm14                       #! PC = 0x55555558d995 *)
rol zmm14_0 zmm14_0 0xe;
rol zmm14_1 zmm14_1 0xe;
rol zmm14_2 zmm14_2 0xe;
rol zmm14_3 zmm14_3 0xe;
rol zmm14_4 zmm14_4 0xe;
rol zmm14_5 zmm14_5 0xe;
rol zmm14_6 zmm14_6 0xe;
rol zmm14_7 zmm14_7 0xe;
(* vpxord %zmm11,%zmm20,%zmm11                     #! PC = 0x55555558d99c *)
xor zmm11_0@uint64 zmm20_0 zmm11_0;
xor zmm11_1@uint64 zmm20_1 zmm11_1;
xor zmm11_2@uint64 zmm20_2 zmm11_2;
xor zmm11_3@uint64 zmm20_3 zmm11_3;
xor zmm11_4@uint64 zmm20_4 zmm11_4;
xor zmm11_5@uint64 zmm20_5 zmm11_5;
xor zmm11_6@uint64 zmm20_6 zmm11_6;
xor zmm11_7@uint64 zmm20_7 zmm11_7;
(* vpxord %zmm12,%zmm18,%zmm12                     #! PC = 0x55555558d9a2 *)
xor zmm12_0@uint64 zmm18_0 zmm12_0;
xor zmm12_1@uint64 zmm18_1 zmm12_1;
xor zmm12_2@uint64 zmm18_2 zmm12_2;
xor zmm12_3@uint64 zmm18_3 zmm12_3;
xor zmm12_4@uint64 zmm18_4 zmm12_4;
xor zmm12_5@uint64 zmm18_5 zmm12_5;
xor zmm12_6@uint64 zmm18_6 zmm12_6;
xor zmm12_7@uint64 zmm18_7 zmm12_7;
(* vprolq $0x1c,%zmm11,%zmm11                      #! PC = 0x55555558d9a8 *)
rol zmm11_0 zmm11_0 0x1c;
rol zmm11_1 zmm11_1 0x1c;
rol zmm11_2 zmm11_2 0x1c;
rol zmm11_3 zmm11_3 0x1c;
rol zmm11_4 zmm11_4 0x1c;
rol zmm11_5 zmm11_5 0x1c;
rol zmm11_6 zmm11_6 0x1c;
rol zmm11_7 zmm11_7 0x1c;
(* vprolq $0x14,%zmm12,%zmm12                      #! PC = 0x55555558d9af *)
rol zmm12_0 zmm12_0 0x14;
rol zmm12_1 zmm12_1 0x14;
rol zmm12_2 zmm12_2 0x14;
rol zmm12_3 zmm12_3 0x14;
rol zmm12_4 zmm12_4 0x14;
rol zmm12_5 zmm12_5 0x14;
rol zmm12_6 zmm12_6 0x14;
rol zmm12_7 zmm12_7 0x14;
(* vpxord %zmm22,%zmm3,%zmm22                      #! PC = 0x55555558d9b6 *)
xor zmm22_0@uint64 zmm3_0 zmm22_0;
xor zmm22_1@uint64 zmm3_1 zmm22_1;
xor zmm22_2@uint64 zmm3_2 zmm22_2;
xor zmm22_3@uint64 zmm3_3 zmm22_3;
xor zmm22_4@uint64 zmm3_4 zmm22_4;
xor zmm22_5@uint64 zmm3_5 zmm22_5;
xor zmm22_6@uint64 zmm3_6 zmm22_6;
xor zmm22_7@uint64 zmm3_7 zmm22_7;
(* vpxord %zmm15,%zmm17,%zmm15                     #! PC = 0x55555558d9bc *)
xor zmm15_0@uint64 zmm17_0 zmm15_0;
xor zmm15_1@uint64 zmm17_1 zmm15_1;
xor zmm15_2@uint64 zmm17_2 zmm15_2;
xor zmm15_3@uint64 zmm17_3 zmm15_3;
xor zmm15_4@uint64 zmm17_4 zmm15_4;
xor zmm15_5@uint64 zmm17_5 zmm15_5;
xor zmm15_6@uint64 zmm17_6 zmm15_6;
xor zmm15_7@uint64 zmm17_7 zmm15_7;
(* vpxord %zmm16,%zmm19,%zmm16                     #! PC = 0x55555558d9c2 *)
xor zmm16_0@uint64 zmm19_0 zmm16_0;
xor zmm16_1@uint64 zmm19_1 zmm16_1;
xor zmm16_2@uint64 zmm19_2 zmm16_2;
xor zmm16_3@uint64 zmm19_3 zmm16_3;
xor zmm16_4@uint64 zmm19_4 zmm16_4;
xor zmm16_5@uint64 zmm19_5 zmm16_5;
xor zmm16_6@uint64 zmm19_6 zmm16_6;
xor zmm16_7@uint64 zmm19_7 zmm16_7;
(* vpxord %zmm27,%zmm17,%zmm27                     #! PC = 0x55555558d9c8 *)
xor zmm27_0@uint64 zmm17_0 zmm27_0;
xor zmm27_1@uint64 zmm17_1 zmm27_1;
xor zmm27_2@uint64 zmm17_2 zmm27_2;
xor zmm27_3@uint64 zmm17_3 zmm27_3;
xor zmm27_4@uint64 zmm17_4 zmm27_4;
xor zmm27_5@uint64 zmm17_5 zmm27_5;
xor zmm27_6@uint64 zmm17_6 zmm27_6;
xor zmm27_7@uint64 zmm17_7 zmm27_7;
(* vpxord %zmm13,%zmm19,%zmm13                     #! PC = 0x55555558d9ce *)
xor zmm13_0@uint64 zmm19_0 zmm13_0;
xor zmm13_1@uint64 zmm19_1 zmm13_1;
xor zmm13_2@uint64 zmm19_2 zmm13_2;
xor zmm13_3@uint64 zmm19_3 zmm13_3;
xor zmm13_4@uint64 zmm19_4 zmm13_4;
xor zmm13_5@uint64 zmm19_5 zmm13_5;
xor zmm13_6@uint64 zmm19_6 zmm13_6;
xor zmm13_7@uint64 zmm19_7 zmm13_7;
(* vpxord %zmm5,%zmm20,%zmm5                       #! PC = 0x55555558d9d4 *)
xor zmm5_0@uint64 zmm20_0 zmm5_0;
xor zmm5_1@uint64 zmm20_1 zmm5_1;
xor zmm5_2@uint64 zmm20_2 zmm5_2;
xor zmm5_3@uint64 zmm20_3 zmm5_3;
xor zmm5_4@uint64 zmm20_4 zmm5_4;
xor zmm5_5@uint64 zmm20_5 zmm5_5;
xor zmm5_6@uint64 zmm20_6 zmm5_6;
xor zmm5_7@uint64 zmm20_7 zmm5_7;
(* vpxord %zmm7,%zmm19,%zmm7                       #! PC = 0x55555558d9da *)
xor zmm7_0@uint64 zmm19_0 zmm7_0;
xor zmm7_1@uint64 zmm19_1 zmm7_1;
xor zmm7_2@uint64 zmm19_2 zmm7_2;
xor zmm7_3@uint64 zmm19_3 zmm7_3;
xor zmm7_4@uint64 zmm19_4 zmm7_4;
xor zmm7_5@uint64 zmm19_5 zmm7_5;
xor zmm7_6@uint64 zmm19_6 zmm7_6;
xor zmm7_7@uint64 zmm19_7 zmm7_7;
(* vpxord %zmm4,%zmm20,%zmm4                       #! PC = 0x55555558d9e0 *)
xor zmm4_0@uint64 zmm20_0 zmm4_0;
xor zmm4_1@uint64 zmm20_1 zmm4_1;
xor zmm4_2@uint64 zmm20_2 zmm4_2;
xor zmm4_3@uint64 zmm20_3 zmm4_3;
xor zmm4_4@uint64 zmm20_4 zmm4_4;
xor zmm4_5@uint64 zmm20_5 zmm4_5;
xor zmm4_6@uint64 zmm20_6 zmm4_6;
xor zmm4_7@uint64 zmm20_7 zmm4_7;
(* vpxord %zmm2,%zmm19,%zmm19                      #! PC = 0x55555558d9e6 *)
xor zmm19_0@uint64 zmm19_0 zmm2_0;
xor zmm19_1@uint64 zmm19_1 zmm2_1;
xor zmm19_2@uint64 zmm19_2 zmm2_2;
xor zmm19_3@uint64 zmm19_3 zmm2_3;
xor zmm19_4@uint64 zmm19_4 zmm2_4;
xor zmm19_5@uint64 zmm19_5 zmm2_5;
xor zmm19_6@uint64 zmm19_6 zmm2_6;
xor zmm19_7@uint64 zmm19_7 zmm2_7;
(* vpxord %zmm8,%zmm20,%zmm20                      #! PC = 0x55555558d9ec *)
xor zmm20_0@uint64 zmm20_0 zmm8_0;
xor zmm20_1@uint64 zmm20_1 zmm8_1;
xor zmm20_2@uint64 zmm20_2 zmm8_2;
xor zmm20_3@uint64 zmm20_3 zmm8_3;
xor zmm20_4@uint64 zmm20_4 zmm8_4;
xor zmm20_5@uint64 zmm20_5 zmm8_5;
xor zmm20_6@uint64 zmm20_6 zmm8_6;
xor zmm20_7@uint64 zmm20_7 zmm8_7;
(* vpxord %zmm24,%zmm3,%zmm24                      #! PC = 0x55555558d9f2 *)
xor zmm24_0@uint64 zmm3_0 zmm24_0;
xor zmm24_1@uint64 zmm3_1 zmm24_1;
xor zmm24_2@uint64 zmm3_2 zmm24_2;
xor zmm24_3@uint64 zmm3_3 zmm24_3;
xor zmm24_4@uint64 zmm3_4 zmm24_4;
xor zmm24_5@uint64 zmm3_5 zmm24_5;
xor zmm24_6@uint64 zmm3_6 zmm24_6;
xor zmm24_7@uint64 zmm3_7 zmm24_7;
(* vprolq $0x1,%zmm27,%zmm27                       #! PC = 0x55555558d9f8 *)
rol zmm27_0 zmm27_0 0x1;
rol zmm27_1 zmm27_1 0x1;
rol zmm27_2 zmm27_2 0x1;
rol zmm27_3 zmm27_3 0x1;
rol zmm27_4 zmm27_4 0x1;
rol zmm27_5 zmm27_5 0x1;
rol zmm27_6 zmm27_6 0x1;
rol zmm27_7 zmm27_7 0x1;
(* vprolq $0x6,%zmm13,%zmm13                       #! PC = 0x55555558d9ff *)
rol zmm13_0 zmm13_0 0x6;
rol zmm13_1 zmm13_1 0x6;
rol zmm13_2 zmm13_2 0x6;
rol zmm13_3 zmm13_3 0x6;
rol zmm13_4 zmm13_4 0x6;
rol zmm13_5 zmm13_5 0x6;
rol zmm13_6 zmm13_6 0x6;
rol zmm13_7 zmm13_7 0x6;
(* vprorq $0x2,%zmm19,%zmm19                       #! PC = 0x55555558da06 *)
ror zmm19_0 zmm19_0 0x2;
ror zmm19_1 zmm19_1 0x2;
ror zmm19_2 zmm19_2 0x2;
ror zmm19_3 zmm19_3 0x2;
ror zmm19_4 zmm19_4 0x2;
ror zmm19_5 zmm19_5 0x2;
ror zmm19_6 zmm19_6 0x2;
ror zmm19_7 zmm19_7 0x2;
(* vprorq $0x9,%zmm20,%zmm20                       #! PC = 0x55555558da0d *)
ror zmm20_0 zmm20_0 0x9;
ror zmm20_1 zmm20_1 0x9;
ror zmm20_2 zmm20_2 0x9;
ror zmm20_3 zmm20_3 0x9;
ror zmm20_4 zmm20_4 0x9;
ror zmm20_5 zmm20_5 0x9;
ror zmm20_6 zmm20_6 0x9;
ror zmm20_7 zmm20_7 0x9;
(* vprolq $0x3,%zmm22,%zmm22                       #! PC = 0x55555558da14 *)
rol zmm22_0 zmm22_0 0x3;
rol zmm22_1 zmm22_1 0x3;
rol zmm22_2 zmm22_2 0x3;
rol zmm22_3 zmm22_3 0x3;
rol zmm22_4 zmm22_4 0x3;
rol zmm22_5 zmm22_5 0x3;
rol zmm22_6 zmm22_6 0x3;
rol zmm22_7 zmm22_7 0x3;
(* vprorq $0x13,%zmm15,%zmm15                      #! PC = 0x55555558da1b *)
ror zmm15_0 zmm15_0 0x13;
ror zmm15_1 zmm15_1 0x13;
ror zmm15_2 zmm15_2 0x13;
ror zmm15_3 zmm15_3 0x13;
ror zmm15_4 zmm15_4 0x13;
ror zmm15_5 zmm15_5 0x13;
ror zmm15_6 zmm15_6 0x13;
ror zmm15_7 zmm15_7 0x13;
(* vprorq $0x3,%zmm16,%zmm16                       #! PC = 0x55555558da22 *)
ror zmm16_0 zmm16_0 0x3;
ror zmm16_1 zmm16_1 0x3;
ror zmm16_2 zmm16_2 0x3;
ror zmm16_3 zmm16_3 0x3;
ror zmm16_4 zmm16_4 0x3;
ror zmm16_5 zmm16_5 0x3;
ror zmm16_6 zmm16_6 0x3;
ror zmm16_7 zmm16_7 0x3;
(* vpxord %zmm25,%zmm3,%zmm25                      #! PC = 0x55555558da29 *)
xor zmm25_0@uint64 zmm3_0 zmm25_0;
xor zmm25_1@uint64 zmm3_1 zmm25_1;
xor zmm25_2@uint64 zmm3_2 zmm25_2;
xor zmm25_3@uint64 zmm3_3 zmm25_3;
xor zmm25_4@uint64 zmm3_4 zmm25_4;
xor zmm25_5@uint64 zmm3_5 zmm25_5;
xor zmm25_6@uint64 zmm3_6 zmm25_6;
xor zmm25_7@uint64 zmm3_7 zmm25_7;
(* vpxord %zmm0,%zmm18,%zmm0                       #! PC = 0x55555558da2f *)
xor zmm0_0@uint64 zmm18_0 zmm0_0;
xor zmm0_1@uint64 zmm18_1 zmm0_1;
xor zmm0_2@uint64 zmm18_2 zmm0_2;
xor zmm0_3@uint64 zmm18_3 zmm0_3;
xor zmm0_4@uint64 zmm18_4 zmm0_4;
xor zmm0_5@uint64 zmm18_5 zmm0_5;
xor zmm0_6@uint64 zmm18_6 zmm0_6;
xor zmm0_7@uint64 zmm18_7 zmm0_7;
(* vpxord %zmm26,%zmm3,%zmm26                      #! PC = 0x55555558da35 *)
xor zmm26_0@uint64 zmm3_0 zmm26_0;
xor zmm26_1@uint64 zmm3_1 zmm26_1;
xor zmm26_2@uint64 zmm3_2 zmm26_2;
xor zmm26_3@uint64 zmm3_3 zmm26_3;
xor zmm26_4@uint64 zmm3_4 zmm26_4;
xor zmm26_5@uint64 zmm3_5 zmm26_5;
xor zmm26_6@uint64 zmm3_6 zmm26_6;
xor zmm26_7@uint64 zmm3_7 zmm26_7;
(* vpxord %zmm6,%zmm17,%zmm6                       #! PC = 0x55555558da3b *)
xor zmm6_0@uint64 zmm17_0 zmm6_0;
xor zmm6_1@uint64 zmm17_1 zmm6_1;
xor zmm6_2@uint64 zmm17_2 zmm6_2;
xor zmm6_3@uint64 zmm17_3 zmm6_3;
xor zmm6_4@uint64 zmm17_4 zmm6_4;
xor zmm6_5@uint64 zmm17_5 zmm6_5;
xor zmm6_6@uint64 zmm17_6 zmm6_6;
xor zmm6_7@uint64 zmm17_7 zmm6_7;
(* vpxord %zmm10,%zmm18,%zmm10                     #! PC = 0x55555558da41 *)
xor zmm10_0@uint64 zmm18_0 zmm10_0;
xor zmm10_1@uint64 zmm18_1 zmm10_1;
xor zmm10_2@uint64 zmm18_2 zmm10_2;
xor zmm10_3@uint64 zmm18_3 zmm10_3;
xor zmm10_4@uint64 zmm18_4 zmm10_4;
xor zmm10_5@uint64 zmm18_5 zmm10_5;
xor zmm10_6@uint64 zmm18_6 zmm10_6;
xor zmm10_7@uint64 zmm18_7 zmm10_7;
(* vpxord %zmm23,%zmm3,%zmm3                       #! PC = 0x55555558da47 *)
xor zmm3_0@uint64 zmm3_0 zmm23_0;
xor zmm3_1@uint64 zmm3_1 zmm23_1;
xor zmm3_2@uint64 zmm3_2 zmm23_2;
xor zmm3_3@uint64 zmm3_3 zmm23_3;
xor zmm3_4@uint64 zmm3_4 zmm23_4;
xor zmm3_5@uint64 zmm3_5 zmm23_5;
xor zmm3_6@uint64 zmm3_6 zmm23_6;
xor zmm3_7@uint64 zmm3_7 zmm23_7;
(* vpxord %zmm31,%zmm17,%zmm17                     #! PC = 0x55555558da4d *)
xor zmm17_0@uint64 zmm17_0 zmm31_0;
xor zmm17_1@uint64 zmm17_1 zmm31_1;
xor zmm17_2@uint64 zmm17_2 zmm31_2;
xor zmm17_3@uint64 zmm17_3 zmm31_3;
xor zmm17_4@uint64 zmm17_4 zmm31_4;
xor zmm17_5@uint64 zmm17_5 zmm31_5;
xor zmm17_6@uint64 zmm17_6 zmm31_6;
xor zmm17_7@uint64 zmm17_7 zmm31_7;
(* vpxord %zmm21,%zmm18,%zmm18                     #! PC = 0x55555558da53 *)
xor zmm18_0@uint64 zmm18_0 zmm21_0;
xor zmm18_1@uint64 zmm18_1 zmm21_1;
xor zmm18_2@uint64 zmm18_2 zmm21_2;
xor zmm18_3@uint64 zmm18_3 zmm21_3;
xor zmm18_4@uint64 zmm18_4 zmm21_4;
xor zmm18_5@uint64 zmm18_5 zmm21_5;
xor zmm18_6@uint64 zmm18_6 zmm21_6;
xor zmm18_7@uint64 zmm18_7 zmm21_7;
(* vprorq $0x1c,%zmm26,%zmm26                      #! PC = 0x55555558da59 *)
ror zmm26_0 zmm26_0 0x1c;
ror zmm26_1 zmm26_1 0x1c;
ror zmm26_2 zmm26_2 0x1c;
ror zmm26_3 zmm26_3 0x1c;
ror zmm26_4 zmm26_4 0x1c;
ror zmm26_5 zmm26_5 0x1c;
ror zmm26_6 zmm26_6 0x1c;
ror zmm26_7 zmm26_7 0x1c;
(* vprolq $0x1b,%zmm10,%zmm10                      #! PC = 0x55555558da60 *)
rol zmm10_0 zmm10_0 0x1b;
rol zmm10_1 zmm10_1 0x1b;
rol zmm10_2 zmm10_2 0x1b;
rol zmm10_3 zmm10_3 0x1b;
rol zmm10_4 zmm10_4 0x1b;
rol zmm10_5 zmm10_5 0x1b;
rol zmm10_6 zmm10_6 0x1b;
rol zmm10_7 zmm10_7 0x1b;
(* vprolq $0x12,%zmm25,%zmm25                      #! PC = 0x55555558da67 *)
rol zmm25_0 zmm25_0 0x12;
rol zmm25_1 zmm25_1 0x12;
rol zmm25_2 zmm25_2 0x12;
rol zmm25_3 zmm25_3 0x12;
rol zmm25_4 zmm25_4 0x12;
rol zmm25_5 zmm25_5 0x12;
rol zmm25_6 zmm25_6 0x12;
rol zmm25_7 zmm25_7 0x12;
(* vprolq $0x19,%zmm5,%zmm5                        #! PC = 0x55555558da6e *)
rol zmm5_0 zmm5_0 0x19;
rol zmm5_1 zmm5_1 0x19;
rol zmm5_2 zmm5_2 0x19;
rol zmm5_3 zmm5_3 0x19;
rol zmm5_4 zmm5_4 0x19;
rol zmm5_5 zmm5_5 0x19;
rol zmm5_6 zmm5_6 0x19;
rol zmm5_7 zmm5_7 0x19;
(* vprolq $0x8,%zmm0,%zmm0                         #! PC = 0x55555558da75 *)
rol zmm0_0 zmm0_0 0x8;
rol zmm0_1 zmm0_1 0x8;
rol zmm0_2 zmm0_2 0x8;
rol zmm0_3 zmm0_3 0x8;
rol zmm0_4 zmm0_4 0x8;
rol zmm0_5 zmm0_5 0x8;
rol zmm0_6 zmm0_6 0x8;
rol zmm0_7 zmm0_7 0x8;
(* vprorq $0x17,%zmm3,%zmm3                        #! PC = 0x55555558da7c *)
ror zmm3_0 zmm3_0 0x17;
ror zmm3_1 zmm3_1 0x17;
ror zmm3_2 zmm3_2 0x17;
ror zmm3_3 zmm3_3 0x17;
ror zmm3_4 zmm3_4 0x17;
ror zmm3_5 zmm3_5 0x17;
ror zmm3_6 zmm3_6 0x17;
ror zmm3_7 zmm3_7 0x17;
(* vprolq $0x2,%zmm17,%zmm17                       #! PC = 0x55555558da83 *)
rol zmm17_0 zmm17_0 0x2;
rol zmm17_1 zmm17_1 0x2;
rol zmm17_2 zmm17_2 0x2;
rol zmm17_3 zmm17_3 0x2;
rol zmm17_4 zmm17_4 0x2;
rol zmm17_5 zmm17_5 0x2;
rol zmm17_6 zmm17_6 0x2;
rol zmm17_7 zmm17_7 0x2;
(* vprorq $0x19,%zmm18,%zmm18                      #! PC = 0x55555558da8a *)
ror zmm18_0 zmm18_0 0x19;
ror zmm18_1 zmm18_1 0x19;
ror zmm18_2 zmm18_2 0x19;
ror zmm18_3 zmm18_3 0x19;
ror zmm18_4 zmm18_4 0x19;
ror zmm18_5 zmm18_5 0x19;
ror zmm18_6 zmm18_6 0x19;
ror zmm18_7 zmm18_7 0x19;
(* vprolq $0xa,%zmm6,%zmm6                         #! PC = 0x55555558da91 *)
rol zmm6_0 zmm6_0 0xa;
rol zmm6_1 zmm6_1 0xa;
rol zmm6_2 zmm6_2 0xa;
rol zmm6_3 zmm6_3 0xa;
rol zmm6_4 zmm6_4 0xa;
rol zmm6_5 zmm6_5 0xa;
rol zmm6_6 zmm6_6 0xa;
rol zmm6_7 zmm6_7 0xa;
(* vprolq $0xf,%zmm7,%zmm7                         #! PC = 0x55555558da98 *)
rol zmm7_0 zmm7_0 0xf;
rol zmm7_1 zmm7_1 0xf;
rol zmm7_2 zmm7_2 0xf;
rol zmm7_3 zmm7_3 0xf;
rol zmm7_4 zmm7_4 0xf;
rol zmm7_5 zmm7_5 0xf;
rol zmm7_6 zmm7_6 0xf;
rol zmm7_7 zmm7_7 0xf;
(* vprorq $0x8,%zmm4,%zmm4                         #! PC = 0x55555558da9f *)
ror zmm4_0 zmm4_0 0x8;
ror zmm4_1 zmm4_1 0x8;
ror zmm4_2 zmm4_2 0x8;
ror zmm4_3 zmm4_3 0x8;
ror zmm4_4 zmm4_4 0x8;
ror zmm4_5 zmm4_5 0x8;
ror zmm4_6 zmm4_6 0x8;
ror zmm4_7 zmm4_7 0x8;
(* vmovdqa64 %zmm24,%zmm29                         #! PC = 0x55555558daa6 *)
mov zmm29_0 zmm24_0;
mov zmm29_1 zmm24_1;
mov zmm29_2 zmm24_2;
mov zmm29_3 zmm24_3;
mov zmm29_4 zmm24_4;
mov zmm29_5 zmm24_5;
mov zmm29_6 zmm24_6;
mov zmm29_7 zmm24_7;
(* vmovdqa64 %zmm30,%zmm28                         #! PC = 0x55555558daac *)
mov zmm28_0 zmm30_0;
mov zmm28_1 zmm30_1;
mov zmm28_2 zmm30_2;
mov zmm28_3 zmm30_3;
mov zmm28_4 zmm30_4;
mov zmm28_5 zmm30_5;
mov zmm28_6 zmm30_6;
mov zmm28_7 zmm30_7;
(* vpternlogq $0xd2,%zmm1,%zmm30,%zmm29            #! PC = 0x55555558dab2 *)
mov table 0xd2@uint8;
inline vpternlogq64 (zmm29_0, zmm30_0, zmm1_0, table);
inline vpternlogq64 (zmm29_1, zmm30_1, zmm1_1, table);
inline vpternlogq64 (zmm29_2, zmm30_2, zmm1_2, table);
inline vpternlogq64 (zmm29_3, zmm30_3, zmm1_3, table);
inline vpternlogq64 (zmm29_4, zmm30_4, zmm1_4, table);
inline vpternlogq64 (zmm29_5, zmm30_5, zmm1_5, table);
inline vpternlogq64 (zmm29_6, zmm30_6, zmm1_6, table);
inline vpternlogq64 (zmm29_7, zmm30_7, zmm1_7, table);
(* vpternlogq $0xd2,%zmm9,%zmm1,%zmm28             #! PC = 0x55555558dab9 *)
mov table 0xd2@uint8;
inline vpternlogq64 (zmm28_0, zmm1_0, zmm9_0, table);
inline vpternlogq64 (zmm28_1, zmm1_1, zmm9_1, table);
inline vpternlogq64 (zmm28_2, zmm1_2, zmm9_2, table);
inline vpternlogq64 (zmm28_3, zmm1_3, zmm9_3, table);
inline vpternlogq64 (zmm28_4, zmm1_4, zmm9_4, table);
inline vpternlogq64 (zmm28_5, zmm1_5, zmm9_5, table);
inline vpternlogq64 (zmm28_6, zmm1_6, zmm9_6, table);
inline vpternlogq64 (zmm28_7, zmm1_7, zmm9_7, table);
(* vpternlogq $0xd2,%zmm14,%zmm9,%zmm1             #! PC = 0x55555558dac0 *)
mov table 0xd2@uint8;
inline vpternlogq64 (zmm1_0, zmm9_0, zmm14_0, table);
inline vpternlogq64 (zmm1_1, zmm9_1, zmm14_1, table);
inline vpternlogq64 (zmm1_2, zmm9_2, zmm14_2, table);
inline vpternlogq64 (zmm1_3, zmm9_3, zmm14_3, table);
inline vpternlogq64 (zmm1_4, zmm9_4, zmm14_4, table);
inline vpternlogq64 (zmm1_5, zmm9_5, zmm14_5, table);
inline vpternlogq64 (zmm1_6, zmm9_6, zmm14_6, table);
inline vpternlogq64 (zmm1_7, zmm9_7, zmm14_7, table);
(* vpternlogq $0xd2,%zmm24,%zmm14,%zmm9            #! PC = 0x55555558dac7 *)
mov table 0xd2@uint8;
inline vpternlogq64 (zmm9_0, zmm14_0, zmm24_0, table);
inline vpternlogq64 (zmm9_1, zmm14_1, zmm24_1, table);
inline vpternlogq64 (zmm9_2, zmm14_2, zmm24_2, table);
inline vpternlogq64 (zmm9_3, zmm14_3, zmm24_3, table);
inline vpternlogq64 (zmm9_4, zmm14_4, zmm24_4, table);
inline vpternlogq64 (zmm9_5, zmm14_5, zmm24_5, table);
inline vpternlogq64 (zmm9_6, zmm14_6, zmm24_6, table);
inline vpternlogq64 (zmm9_7, zmm14_7, zmm24_7, table);
(* vpternlogq $0xd2,%zmm30,%zmm24,%zmm14           #! PC = 0x55555558dace *)
mov table 0xd2@uint8;
inline vpternlogq64 (zmm14_0, zmm24_0, zmm30_0, table);
inline vpternlogq64 (zmm14_1, zmm24_1, zmm30_1, table);
inline vpternlogq64 (zmm14_2, zmm24_2, zmm30_2, table);
inline vpternlogq64 (zmm14_3, zmm24_3, zmm30_3, table);
inline vpternlogq64 (zmm14_4, zmm24_4, zmm30_4, table);
inline vpternlogq64 (zmm14_5, zmm24_5, zmm30_5, table);
inline vpternlogq64 (zmm14_6, zmm24_6, zmm30_6, table);
inline vpternlogq64 (zmm14_7, zmm24_7, zmm30_7, table);
(* vpbroadcastq %r9,%zmm24                         #! PC = 0x55555558dad5 *)
mov zmm24_0 r9;
mov zmm24_1 r9;
mov zmm24_2 r9;
mov zmm24_3 r9;
mov zmm24_4 r9;
mov zmm24_5 r9;
mov zmm24_6 r9;
mov zmm24_7 r9;
(* vpxord %zmm24,%zmm29,%zmm24                     #! PC = 0x55555558dadb *)
xor zmm24_0@uint64 zmm29_0 zmm24_0;
xor zmm24_1@uint64 zmm29_1 zmm24_1;
xor zmm24_2@uint64 zmm29_2 zmm24_2;
xor zmm24_3@uint64 zmm29_3 zmm24_3;
xor zmm24_4@uint64 zmm29_4 zmm24_4;
xor zmm24_5@uint64 zmm29_5 zmm24_5;
xor zmm24_6@uint64 zmm29_6 zmm24_6;
xor zmm24_7@uint64 zmm29_7 zmm24_7;
(* vmovdqa64 %zmm12,%zmm30                         #! PC = 0x55555558dae1 *)
mov zmm30_0 zmm12_0;
mov zmm30_1 zmm12_1;
mov zmm30_2 zmm12_2;
mov zmm30_3 zmm12_3;
mov zmm30_4 zmm12_4;
mov zmm30_5 zmm12_5;
mov zmm30_6 zmm12_6;
mov zmm30_7 zmm12_7;
(* vmovdqa64 %zmm11,%zmm29                         #! PC = 0x55555558dae7 *)
mov zmm29_0 zmm11_0;
mov zmm29_1 zmm11_1;
mov zmm29_2 zmm11_2;
mov zmm29_3 zmm11_3;
mov zmm29_4 zmm11_4;
mov zmm29_5 zmm11_5;
mov zmm29_6 zmm11_6;
mov zmm29_7 zmm11_7;
(* vpternlogq $0xd2,%zmm22,%zmm12,%zmm29           #! PC = 0x55555558daed *)
mov table 0xd2@uint8;
inline vpternlogq64 (zmm29_0, zmm12_0, zmm22_0, table);
inline vpternlogq64 (zmm29_1, zmm12_1, zmm22_1, table);
inline vpternlogq64 (zmm29_2, zmm12_2, zmm22_2, table);
inline vpternlogq64 (zmm29_3, zmm12_3, zmm22_3, table);
inline vpternlogq64 (zmm29_4, zmm12_4, zmm22_4, table);
inline vpternlogq64 (zmm29_5, zmm12_5, zmm22_5, table);
inline vpternlogq64 (zmm29_6, zmm12_6, zmm22_6, table);
inline vpternlogq64 (zmm29_7, zmm12_7, zmm22_7, table);
(* vpternlogq $0xd2,%zmm15,%zmm22,%zmm30           #! PC = 0x55555558daf4 *)
mov table 0xd2@uint8;
inline vpternlogq64 (zmm30_0, zmm22_0, zmm15_0, table);
inline vpternlogq64 (zmm30_1, zmm22_1, zmm15_1, table);
inline vpternlogq64 (zmm30_2, zmm22_2, zmm15_2, table);
inline vpternlogq64 (zmm30_3, zmm22_3, zmm15_3, table);
inline vpternlogq64 (zmm30_4, zmm22_4, zmm15_4, table);
inline vpternlogq64 (zmm30_5, zmm22_5, zmm15_5, table);
inline vpternlogq64 (zmm30_6, zmm22_6, zmm15_6, table);
inline vpternlogq64 (zmm30_7, zmm22_7, zmm15_7, table);
(* vmovdqa64 %zmm19,%zmm21                         #! PC = 0x55555558dafb *)
mov zmm21_0 zmm19_0;
mov zmm21_1 zmm19_1;
mov zmm21_2 zmm19_2;
mov zmm21_3 zmm19_3;
mov zmm21_4 zmm19_4;
mov zmm21_5 zmm19_5;
mov zmm21_6 zmm19_6;
mov zmm21_7 zmm19_7;
(* vpternlogq $0xd2,%zmm16,%zmm15,%zmm22           #! PC = 0x55555558db01 *)
mov table 0xd2@uint8;
inline vpternlogq64 (zmm22_0, zmm15_0, zmm16_0, table);
inline vpternlogq64 (zmm22_1, zmm15_1, zmm16_1, table);
inline vpternlogq64 (zmm22_2, zmm15_2, zmm16_2, table);
inline vpternlogq64 (zmm22_3, zmm15_3, zmm16_3, table);
inline vpternlogq64 (zmm22_4, zmm15_4, zmm16_4, table);
inline vpternlogq64 (zmm22_5, zmm15_5, zmm16_5, table);
inline vpternlogq64 (zmm22_6, zmm15_6, zmm16_6, table);
inline vpternlogq64 (zmm22_7, zmm15_7, zmm16_7, table);
(* vmovdqa64 %zmm20,%zmm31                         #! PC = 0x55555558db08 *)
mov zmm31_0 zmm20_0;
mov zmm31_1 zmm20_1;
mov zmm31_2 zmm20_2;
mov zmm31_3 zmm20_3;
mov zmm31_4 zmm20_4;
mov zmm31_5 zmm20_5;
mov zmm31_6 zmm20_6;
mov zmm31_7 zmm20_7;
(* vpternlogq $0xd2,%zmm11,%zmm16,%zmm15           #! PC = 0x55555558db0e *)
mov table 0xd2@uint8;
inline vpternlogq64 (zmm15_0, zmm16_0, zmm11_0, table);
inline vpternlogq64 (zmm15_1, zmm16_1, zmm11_1, table);
inline vpternlogq64 (zmm15_2, zmm16_2, zmm11_2, table);
inline vpternlogq64 (zmm15_3, zmm16_3, zmm11_3, table);
inline vpternlogq64 (zmm15_4, zmm16_4, zmm11_4, table);
inline vpternlogq64 (zmm15_5, zmm16_5, zmm11_5, table);
inline vpternlogq64 (zmm15_6, zmm16_6, zmm11_6, table);
inline vpternlogq64 (zmm15_7, zmm16_7, zmm11_7, table);
(* vpternlogq $0xd2,%zmm12,%zmm11,%zmm16           #! PC = 0x55555558db15 *)
mov table 0xd2@uint8;
inline vpternlogq64 (zmm16_0, zmm11_0, zmm12_0, table);
inline vpternlogq64 (zmm16_1, zmm11_1, zmm12_1, table);
inline vpternlogq64 (zmm16_2, zmm11_2, zmm12_2, table);
inline vpternlogq64 (zmm16_3, zmm11_3, zmm12_3, table);
inline vpternlogq64 (zmm16_4, zmm11_4, zmm12_4, table);
inline vpternlogq64 (zmm16_5, zmm11_5, zmm12_5, table);
inline vpternlogq64 (zmm16_6, zmm11_6, zmm12_6, table);
inline vpternlogq64 (zmm16_7, zmm11_7, zmm12_7, table);
(* vmovdqa64 %zmm27,%zmm12                         #! PC = 0x55555558db1c *)
mov zmm12_0 zmm27_0;
mov zmm12_1 zmm27_1;
mov zmm12_2 zmm27_2;
mov zmm12_3 zmm27_3;
mov zmm12_4 zmm27_4;
mov zmm12_5 zmm27_5;
mov zmm12_6 zmm27_6;
mov zmm12_7 zmm27_7;
(* vmovdqa64 %zmm13,%zmm11                         #! PC = 0x55555558db22 *)
mov zmm11_0 zmm13_0;
mov zmm11_1 zmm13_1;
mov zmm11_2 zmm13_2;
mov zmm11_3 zmm13_3;
mov zmm11_4 zmm13_4;
mov zmm11_5 zmm13_5;
mov zmm11_6 zmm13_6;
mov zmm11_7 zmm13_7;
(* vpternlogq $0xd2,%zmm3,%zmm18,%zmm31            #! PC = 0x55555558db28 *)
mov table 0xd2@uint8;
inline vpternlogq64 (zmm31_0, zmm18_0, zmm3_0, table);
inline vpternlogq64 (zmm31_1, zmm18_1, zmm3_1, table);
inline vpternlogq64 (zmm31_2, zmm18_2, zmm3_2, table);
inline vpternlogq64 (zmm31_3, zmm18_3, zmm3_3, table);
inline vpternlogq64 (zmm31_4, zmm18_4, zmm3_4, table);
inline vpternlogq64 (zmm31_5, zmm18_5, zmm3_5, table);
inline vpternlogq64 (zmm31_6, zmm18_6, zmm3_6, table);
inline vpternlogq64 (zmm31_7, zmm18_7, zmm3_7, table);
(* vpternlogq $0xd2,%zmm5,%zmm13,%zmm12            #! PC = 0x55555558db2f *)
mov table 0xd2@uint8;
inline vpternlogq64 (zmm12_0, zmm13_0, zmm5_0, table);
inline vpternlogq64 (zmm12_1, zmm13_1, zmm5_1, table);
inline vpternlogq64 (zmm12_2, zmm13_2, zmm5_2, table);
inline vpternlogq64 (zmm12_3, zmm13_3, zmm5_3, table);
inline vpternlogq64 (zmm12_4, zmm13_4, zmm5_4, table);
inline vpternlogq64 (zmm12_5, zmm13_5, zmm5_5, table);
inline vpternlogq64 (zmm12_6, zmm13_6, zmm5_6, table);
inline vpternlogq64 (zmm12_7, zmm13_7, zmm5_7, table);
(* vpternlogq $0xd2,%zmm0,%zmm5,%zmm11             #! PC = 0x55555558db36 *)
mov table 0xd2@uint8;
inline vpternlogq64 (zmm11_0, zmm5_0, zmm0_0, table);
inline vpternlogq64 (zmm11_1, zmm5_1, zmm0_1, table);
inline vpternlogq64 (zmm11_2, zmm5_2, zmm0_2, table);
inline vpternlogq64 (zmm11_3, zmm5_3, zmm0_3, table);
inline vpternlogq64 (zmm11_4, zmm5_4, zmm0_4, table);
inline vpternlogq64 (zmm11_5, zmm5_5, zmm0_5, table);
inline vpternlogq64 (zmm11_6, zmm5_6, zmm0_6, table);
inline vpternlogq64 (zmm11_7, zmm5_7, zmm0_7, table);
(* vpternlogq $0xd2,%zmm18,%zmm20,%zmm21           #! PC = 0x55555558db3d *)
mov table 0xd2@uint8;
inline vpternlogq64 (zmm21_0, zmm20_0, zmm18_0, table);
inline vpternlogq64 (zmm21_1, zmm20_1, zmm18_1, table);
inline vpternlogq64 (zmm21_2, zmm20_2, zmm18_2, table);
inline vpternlogq64 (zmm21_3, zmm20_3, zmm18_3, table);
inline vpternlogq64 (zmm21_4, zmm20_4, zmm18_4, table);
inline vpternlogq64 (zmm21_5, zmm20_5, zmm18_5, table);
inline vpternlogq64 (zmm21_6, zmm20_6, zmm18_6, table);
inline vpternlogq64 (zmm21_7, zmm20_7, zmm18_7, table);
(* vpternlogq $0xd2,%zmm25,%zmm0,%zmm5             #! PC = 0x55555558db44 *)
mov table 0xd2@uint8;
inline vpternlogq64 (zmm5_0, zmm0_0, zmm25_0, table);
inline vpternlogq64 (zmm5_1, zmm0_1, zmm25_1, table);
inline vpternlogq64 (zmm5_2, zmm0_2, zmm25_2, table);
inline vpternlogq64 (zmm5_3, zmm0_3, zmm25_3, table);
inline vpternlogq64 (zmm5_4, zmm0_4, zmm25_4, table);
inline vpternlogq64 (zmm5_5, zmm0_5, zmm25_5, table);
inline vpternlogq64 (zmm5_6, zmm0_6, zmm25_6, table);
inline vpternlogq64 (zmm5_7, zmm0_7, zmm25_7, table);
(* vpternlogq $0xd2,%zmm17,%zmm3,%zmm18            #! PC = 0x55555558db4b *)
mov table 0xd2@uint8;
inline vpternlogq64 (zmm18_0, zmm3_0, zmm17_0, table);
inline vpternlogq64 (zmm18_1, zmm3_1, zmm17_1, table);
inline vpternlogq64 (zmm18_2, zmm3_2, zmm17_2, table);
inline vpternlogq64 (zmm18_3, zmm3_3, zmm17_3, table);
inline vpternlogq64 (zmm18_4, zmm3_4, zmm17_4, table);
inline vpternlogq64 (zmm18_5, zmm3_5, zmm17_5, table);
inline vpternlogq64 (zmm18_6, zmm3_6, zmm17_6, table);
inline vpternlogq64 (zmm18_7, zmm3_7, zmm17_7, table);
(* vpternlogq $0xd2,%zmm27,%zmm25,%zmm0            #! PC = 0x55555558db52 *)
mov table 0xd2@uint8;
inline vpternlogq64 (zmm0_0, zmm25_0, zmm27_0, table);
inline vpternlogq64 (zmm0_1, zmm25_1, zmm27_1, table);
inline vpternlogq64 (zmm0_2, zmm25_2, zmm27_2, table);
inline vpternlogq64 (zmm0_3, zmm25_3, zmm27_3, table);
inline vpternlogq64 (zmm0_4, zmm25_4, zmm27_4, table);
inline vpternlogq64 (zmm0_5, zmm25_5, zmm27_5, table);
inline vpternlogq64 (zmm0_6, zmm25_6, zmm27_6, table);
inline vpternlogq64 (zmm0_7, zmm25_7, zmm27_7, table);
(* vpternlogq $0xd2,%zmm19,%zmm17,%zmm3            #! PC = 0x55555558db59 *)
mov table 0xd2@uint8;
inline vpternlogq64 (zmm3_0, zmm17_0, zmm19_0, table);
inline vpternlogq64 (zmm3_1, zmm17_1, zmm19_1, table);
inline vpternlogq64 (zmm3_2, zmm17_2, zmm19_2, table);
inline vpternlogq64 (zmm3_3, zmm17_3, zmm19_3, table);
inline vpternlogq64 (zmm3_4, zmm17_4, zmm19_4, table);
inline vpternlogq64 (zmm3_5, zmm17_5, zmm19_5, table);
inline vpternlogq64 (zmm3_6, zmm17_6, zmm19_6, table);
inline vpternlogq64 (zmm3_7, zmm17_7, zmm19_7, table);
(* vpternlogq $0xd2,%zmm13,%zmm27,%zmm25           #! PC = 0x55555558db60 *)
mov table 0xd2@uint8;
inline vpternlogq64 (zmm25_0, zmm27_0, zmm13_0, table);
inline vpternlogq64 (zmm25_1, zmm27_1, zmm13_1, table);
inline vpternlogq64 (zmm25_2, zmm27_2, zmm13_2, table);
inline vpternlogq64 (zmm25_3, zmm27_3, zmm13_3, table);
inline vpternlogq64 (zmm25_4, zmm27_4, zmm13_4, table);
inline vpternlogq64 (zmm25_5, zmm27_5, zmm13_5, table);
inline vpternlogq64 (zmm25_6, zmm27_6, zmm13_6, table);
inline vpternlogq64 (zmm25_7, zmm27_7, zmm13_7, table);
(* vpternlogq $0xd2,%zmm20,%zmm19,%zmm17           #! PC = 0x55555558db67 *)
mov table 0xd2@uint8;
inline vpternlogq64 (zmm17_0, zmm19_0, zmm20_0, table);
inline vpternlogq64 (zmm17_1, zmm19_1, zmm20_1, table);
inline vpternlogq64 (zmm17_2, zmm19_2, zmm20_2, table);
inline vpternlogq64 (zmm17_3, zmm19_3, zmm20_3, table);
inline vpternlogq64 (zmm17_4, zmm19_4, zmm20_4, table);
inline vpternlogq64 (zmm17_5, zmm19_5, zmm20_5, table);
inline vpternlogq64 (zmm17_6, zmm19_6, zmm20_6, table);
inline vpternlogq64 (zmm17_7, zmm19_7, zmm20_7, table);
(* vmovdqa64 %zmm10,%zmm27                         #! PC = 0x55555558db6e *)
mov zmm27_0 zmm10_0;
mov zmm27_1 zmm10_1;
mov zmm27_2 zmm10_2;
mov zmm27_3 zmm10_3;
mov zmm27_4 zmm10_4;
mov zmm27_5 zmm10_5;
mov zmm27_6 zmm10_6;
mov zmm27_7 zmm10_7;
(* vmovdqa64 %zmm26,%zmm13                         #! PC = 0x55555558db74 *)
mov zmm13_0 zmm26_0;
mov zmm13_1 zmm26_1;
mov zmm13_2 zmm26_2;
mov zmm13_3 zmm26_3;
mov zmm13_4 zmm26_4;
mov zmm13_5 zmm26_5;
mov zmm13_6 zmm26_6;
mov zmm13_7 zmm26_7;
(* vmovdqa64 %zmm1,%zmm20                          #! PC = 0x55555558db7a *)
mov zmm20_0 zmm1_0;
mov zmm20_1 zmm1_1;
mov zmm20_2 zmm1_2;
mov zmm20_3 zmm1_3;
mov zmm20_4 zmm1_4;
mov zmm20_5 zmm1_5;
mov zmm20_6 zmm1_6;
mov zmm20_7 zmm1_7;
(* vpternlogq $0xd2,%zmm6,%zmm26,%zmm27            #! PC = 0x55555558db80 *)
mov table 0xd2@uint8;
inline vpternlogq64 (zmm27_0, zmm26_0, zmm6_0, table);
inline vpternlogq64 (zmm27_1, zmm26_1, zmm6_1, table);
inline vpternlogq64 (zmm27_2, zmm26_2, zmm6_2, table);
inline vpternlogq64 (zmm27_3, zmm26_3, zmm6_3, table);
inline vpternlogq64 (zmm27_4, zmm26_4, zmm6_4, table);
inline vpternlogq64 (zmm27_5, zmm26_5, zmm6_5, table);
inline vpternlogq64 (zmm27_6, zmm26_6, zmm6_6, table);
inline vpternlogq64 (zmm27_7, zmm26_7, zmm6_7, table);
(* vpternlogq $0xd2,%zmm7,%zmm6,%zmm13             #! PC = 0x55555558db87 *)
mov table 0xd2@uint8;
inline vpternlogq64 (zmm13_0, zmm6_0, zmm7_0, table);
inline vpternlogq64 (zmm13_1, zmm6_1, zmm7_1, table);
inline vpternlogq64 (zmm13_2, zmm6_2, zmm7_2, table);
inline vpternlogq64 (zmm13_3, zmm6_3, zmm7_3, table);
inline vpternlogq64 (zmm13_4, zmm6_4, zmm7_4, table);
inline vpternlogq64 (zmm13_5, zmm6_5, zmm7_5, table);
inline vpternlogq64 (zmm13_6, zmm6_6, zmm7_6, table);
inline vpternlogq64 (zmm13_7, zmm6_7, zmm7_7, table);
(* vpternlogq $0x96,%zmm5,%zmm22,%zmm20            #! PC = 0x55555558db8e *)
mov table 0x96@uint8;
inline vpternlogq64 (zmm20_0, zmm22_0, zmm5_0, table);
inline vpternlogq64 (zmm20_1, zmm22_1, zmm5_1, table);
inline vpternlogq64 (zmm20_2, zmm22_2, zmm5_2, table);
inline vpternlogq64 (zmm20_3, zmm22_3, zmm5_3, table);
inline vpternlogq64 (zmm20_4, zmm22_4, zmm5_4, table);
inline vpternlogq64 (zmm20_5, zmm22_5, zmm5_5, table);
inline vpternlogq64 (zmm20_6, zmm22_6, zmm5_6, table);
inline vpternlogq64 (zmm20_7, zmm22_7, zmm5_7, table);
(* vpternlogq $0xd2,%zmm4,%zmm7,%zmm6              #! PC = 0x55555558db95 *)
mov table 0xd2@uint8;
inline vpternlogq64 (zmm6_0, zmm7_0, zmm4_0, table);
inline vpternlogq64 (zmm6_1, zmm7_1, zmm4_1, table);
inline vpternlogq64 (zmm6_2, zmm7_2, zmm4_2, table);
inline vpternlogq64 (zmm6_3, zmm7_3, zmm4_3, table);
inline vpternlogq64 (zmm6_4, zmm7_4, zmm4_4, table);
inline vpternlogq64 (zmm6_5, zmm7_5, zmm4_5, table);
inline vpternlogq64 (zmm6_6, zmm7_6, zmm4_6, table);
inline vpternlogq64 (zmm6_7, zmm7_7, zmm4_7, table);
(* vpternlogq $0x96,%zmm18,%zmm6,%zmm20            #! PC = 0x55555558db9c *)
mov table 0x96@uint8;
inline vpternlogq64 (zmm20_0, zmm6_0, zmm18_0, table);
inline vpternlogq64 (zmm20_1, zmm6_1, zmm18_1, table);
inline vpternlogq64 (zmm20_2, zmm6_2, zmm18_2, table);
inline vpternlogq64 (zmm20_3, zmm6_3, zmm18_3, table);
inline vpternlogq64 (zmm20_4, zmm6_4, zmm18_4, table);
inline vpternlogq64 (zmm20_5, zmm6_5, zmm18_5, table);
inline vpternlogq64 (zmm20_6, zmm6_6, zmm18_6, table);
inline vpternlogq64 (zmm20_7, zmm6_7, zmm18_7, table);
(* vpternlogq $0xd2,%zmm10,%zmm4,%zmm7             #! PC = 0x55555558dba3 *)
mov table 0xd2@uint8;
inline vpternlogq64 (zmm7_0, zmm4_0, zmm10_0, table);
inline vpternlogq64 (zmm7_1, zmm4_1, zmm10_1, table);
inline vpternlogq64 (zmm7_2, zmm4_2, zmm10_2, table);
inline vpternlogq64 (zmm7_3, zmm4_3, zmm10_3, table);
inline vpternlogq64 (zmm7_4, zmm4_4, zmm10_4, table);
inline vpternlogq64 (zmm7_5, zmm4_5, zmm10_5, table);
inline vpternlogq64 (zmm7_6, zmm4_6, zmm10_6, table);
inline vpternlogq64 (zmm7_7, zmm4_7, zmm10_7, table);
(* vpternlogq $0xd2,%zmm26,%zmm10,%zmm4            #! PC = 0x55555558dbaa *)
mov table 0xd2@uint8;
inline vpternlogq64 (zmm4_0, zmm10_0, zmm26_0, table);
inline vpternlogq64 (zmm4_1, zmm10_1, zmm26_1, table);
inline vpternlogq64 (zmm4_2, zmm10_2, zmm26_2, table);
inline vpternlogq64 (zmm4_3, zmm10_3, zmm26_3, table);
inline vpternlogq64 (zmm4_4, zmm10_4, zmm26_4, table);
inline vpternlogq64 (zmm4_5, zmm10_5, zmm26_5, table);
inline vpternlogq64 (zmm4_6, zmm10_6, zmm26_6, table);
inline vpternlogq64 (zmm4_7, zmm10_7, zmm26_7, table);
(* vprolq $0x1,%zmm20,%zmm10                       #! PC = 0x55555558dbb1 *)
rol zmm10_0 zmm20_0 0x1;
rol zmm10_1 zmm20_1 0x1;
rol zmm10_2 zmm20_2 0x1;
rol zmm10_3 zmm20_3 0x1;
rol zmm10_4 zmm20_4 0x1;
rol zmm10_5 zmm20_5 0x1;
rol zmm10_6 zmm20_6 0x1;
rol zmm10_7 zmm20_7 0x1;
(* vmovdqa64 %zmm9,%zmm23                          #! PC = 0x55555558dbb8 *)
mov zmm23_0 zmm9_0;
mov zmm23_1 zmm9_1;
mov zmm23_2 zmm9_2;
mov zmm23_3 zmm9_3;
mov zmm23_4 zmm9_4;
mov zmm23_5 zmm9_5;
mov zmm23_6 zmm9_6;
mov zmm23_7 zmm9_7;
(* vpternlogq $0x96,%zmm0,%zmm15,%zmm23            #! PC = 0x55555558dbbe *)
mov table 0x96@uint8;
inline vpternlogq64 (zmm23_0, zmm15_0, zmm0_0, table);
inline vpternlogq64 (zmm23_1, zmm15_1, zmm0_1, table);
inline vpternlogq64 (zmm23_2, zmm15_2, zmm0_2, table);
inline vpternlogq64 (zmm23_3, zmm15_3, zmm0_3, table);
inline vpternlogq64 (zmm23_4, zmm15_4, zmm0_4, table);
inline vpternlogq64 (zmm23_5, zmm15_5, zmm0_5, table);
inline vpternlogq64 (zmm23_6, zmm15_6, zmm0_6, table);
inline vpternlogq64 (zmm23_7, zmm15_7, zmm0_7, table);
(* vpternlogq $0x96,%zmm3,%zmm7,%zmm23             #! PC = 0x55555558dbc5 *)
mov table 0x96@uint8;
inline vpternlogq64 (zmm23_0, zmm7_0, zmm3_0, table);
inline vpternlogq64 (zmm23_1, zmm7_1, zmm3_1, table);
inline vpternlogq64 (zmm23_2, zmm7_2, zmm3_2, table);
inline vpternlogq64 (zmm23_3, zmm7_3, zmm3_3, table);
inline vpternlogq64 (zmm23_4, zmm7_4, zmm3_4, table);
inline vpternlogq64 (zmm23_5, zmm7_5, zmm3_5, table);
inline vpternlogq64 (zmm23_6, zmm7_6, zmm3_6, table);
inline vpternlogq64 (zmm23_7, zmm7_7, zmm3_7, table);
(* vmovdqa64 %zmm14,%zmm26                         #! PC = 0x55555558dbcc *)
mov zmm26_0 zmm14_0;
mov zmm26_1 zmm14_1;
mov zmm26_2 zmm14_2;
mov zmm26_3 zmm14_3;
mov zmm26_4 zmm14_4;
mov zmm26_5 zmm14_5;
mov zmm26_6 zmm14_6;
mov zmm26_7 zmm14_7;
(* vpternlogq $0x96,%zmm25,%zmm16,%zmm26           #! PC = 0x55555558dbd2 *)
mov table 0x96@uint8;
inline vpternlogq64 (zmm26_0, zmm16_0, zmm25_0, table);
inline vpternlogq64 (zmm26_1, zmm16_1, zmm25_1, table);
inline vpternlogq64 (zmm26_2, zmm16_2, zmm25_2, table);
inline vpternlogq64 (zmm26_3, zmm16_3, zmm25_3, table);
inline vpternlogq64 (zmm26_4, zmm16_4, zmm25_4, table);
inline vpternlogq64 (zmm26_5, zmm16_5, zmm25_5, table);
inline vpternlogq64 (zmm26_6, zmm16_6, zmm25_6, table);
inline vpternlogq64 (zmm26_7, zmm16_7, zmm25_7, table);
(* vmovdqa64 %zmm10,0x148(%rsp)                    #! EA = L0x7fffffffd600; PC = 0x55555558dbd9 *)
mov L0x7fffffffd600 zmm10_0;
mov L0x7fffffffd608 zmm10_1;
mov L0x7fffffffd610 zmm10_2;
mov L0x7fffffffd618 zmm10_3;
mov L0x7fffffffd620 zmm10_4;
mov L0x7fffffffd628 zmm10_5;
mov L0x7fffffffd630 zmm10_6;
mov L0x7fffffffd638 zmm10_7;
(* vprolq $0x1,%zmm23,%zmm10                       #! PC = 0x55555558dbe4 *)
rol zmm10_0 zmm23_0 0x1;
rol zmm10_1 zmm23_1 0x1;
rol zmm10_2 zmm23_2 0x1;
rol zmm10_3 zmm23_3 0x1;
rol zmm10_4 zmm23_4 0x1;
rol zmm10_5 zmm23_5 0x1;
rol zmm10_6 zmm23_6 0x1;
rol zmm10_7 zmm23_7 0x1;
(* vpternlogq $0x96,%zmm17,%zmm4,%zmm26            #! PC = 0x55555558dbeb *)
mov table 0x96@uint8;
inline vpternlogq64 (zmm26_0, zmm4_0, zmm17_0, table);
inline vpternlogq64 (zmm26_1, zmm4_1, zmm17_1, table);
inline vpternlogq64 (zmm26_2, zmm4_2, zmm17_2, table);
inline vpternlogq64 (zmm26_3, zmm4_3, zmm17_3, table);
inline vpternlogq64 (zmm26_4, zmm4_4, zmm17_4, table);
inline vpternlogq64 (zmm26_5, zmm4_5, zmm17_5, table);
inline vpternlogq64 (zmm26_6, zmm4_6, zmm17_6, table);
inline vpternlogq64 (zmm26_7, zmm4_7, zmm17_7, table);
(* vmovdqa64 %zmm24,%zmm8                          #! PC = 0x55555558dbf2 *)
mov zmm8_0 zmm24_0;
mov zmm8_1 zmm24_1;
mov zmm8_2 zmm24_2;
mov zmm8_3 zmm24_3;
mov zmm8_4 zmm24_4;
mov zmm8_5 zmm24_5;
mov zmm8_6 zmm24_6;
mov zmm8_7 zmm24_7;
(* vpternlogq $0x96,%zmm12,%zmm29,%zmm8            #! PC = 0x55555558dbf8 *)
mov table 0x96@uint8;
inline vpternlogq64 (zmm8_0, zmm29_0, zmm12_0, table);
inline vpternlogq64 (zmm8_1, zmm29_1, zmm12_1, table);
inline vpternlogq64 (zmm8_2, zmm29_2, zmm12_2, table);
inline vpternlogq64 (zmm8_3, zmm29_3, zmm12_3, table);
inline vpternlogq64 (zmm8_4, zmm29_4, zmm12_4, table);
inline vpternlogq64 (zmm8_5, zmm29_5, zmm12_5, table);
inline vpternlogq64 (zmm8_6, zmm29_6, zmm12_6, table);
inline vpternlogq64 (zmm8_7, zmm29_7, zmm12_7, table);
(* vpternlogq $0x96,%zmm21,%zmm27,%zmm8            #! PC = 0x55555558dbff *)
mov table 0x96@uint8;
inline vpternlogq64 (zmm8_0, zmm27_0, zmm21_0, table);
inline vpternlogq64 (zmm8_1, zmm27_1, zmm21_1, table);
inline vpternlogq64 (zmm8_2, zmm27_2, zmm21_2, table);
inline vpternlogq64 (zmm8_3, zmm27_3, zmm21_3, table);
inline vpternlogq64 (zmm8_4, zmm27_4, zmm21_4, table);
inline vpternlogq64 (zmm8_5, zmm27_5, zmm21_5, table);
inline vpternlogq64 (zmm8_6, zmm27_6, zmm21_6, table);
inline vpternlogq64 (zmm8_7, zmm27_7, zmm21_7, table);
(* vmovdqa64 %zmm28,%zmm19                         #! PC = 0x55555558dc06 *)
mov zmm19_0 zmm28_0;
mov zmm19_1 zmm28_1;
mov zmm19_2 zmm28_2;
mov zmm19_3 zmm28_3;
mov zmm19_4 zmm28_4;
mov zmm19_5 zmm28_5;
mov zmm19_6 zmm28_6;
mov zmm19_7 zmm28_7;
(* vmovdqa64 %zmm10,0x108(%rsp)                    #! EA = L0x7fffffffd5c0; PC = 0x55555558dc0c *)
mov L0x7fffffffd5c0 zmm10_0;
mov L0x7fffffffd5c8 zmm10_1;
mov L0x7fffffffd5d0 zmm10_2;
mov L0x7fffffffd5d8 zmm10_3;
mov L0x7fffffffd5e0 zmm10_4;
mov L0x7fffffffd5e8 zmm10_5;
mov L0x7fffffffd5f0 zmm10_6;
mov L0x7fffffffd5f8 zmm10_7;
(* vprolq $0x1,%zmm26,%zmm10                       #! PC = 0x55555558dc17 *)
rol zmm10_0 zmm26_0 0x1;
rol zmm10_1 zmm26_1 0x1;
rol zmm10_2 zmm26_2 0x1;
rol zmm10_3 zmm26_3 0x1;
rol zmm10_4 zmm26_4 0x1;
rol zmm10_5 zmm26_5 0x1;
rol zmm10_6 zmm26_6 0x1;
rol zmm10_7 zmm26_7 0x1;
(* vpternlogq $0x96,%zmm11,%zmm30,%zmm19           #! PC = 0x55555558dc1e *)
mov table 0x96@uint8;
inline vpternlogq64 (zmm19_0, zmm30_0, zmm11_0, table);
inline vpternlogq64 (zmm19_1, zmm30_1, zmm11_1, table);
inline vpternlogq64 (zmm19_2, zmm30_2, zmm11_2, table);
inline vpternlogq64 (zmm19_3, zmm30_3, zmm11_3, table);
inline vpternlogq64 (zmm19_4, zmm30_4, zmm11_4, table);
inline vpternlogq64 (zmm19_5, zmm30_5, zmm11_5, table);
inline vpternlogq64 (zmm19_6, zmm30_6, zmm11_6, table);
inline vpternlogq64 (zmm19_7, zmm30_7, zmm11_7, table);
(* vpternlogq $0x96,%zmm31,%zmm13,%zmm19           #! PC = 0x55555558dc25 *)
mov table 0x96@uint8;
inline vpternlogq64 (zmm19_0, zmm13_0, zmm31_0, table);
inline vpternlogq64 (zmm19_1, zmm13_1, zmm31_1, table);
inline vpternlogq64 (zmm19_2, zmm13_2, zmm31_2, table);
inline vpternlogq64 (zmm19_3, zmm13_3, zmm31_3, table);
inline vpternlogq64 (zmm19_4, zmm13_4, zmm31_4, table);
inline vpternlogq64 (zmm19_5, zmm13_5, zmm31_5, table);
inline vpternlogq64 (zmm19_6, zmm13_6, zmm31_6, table);
inline vpternlogq64 (zmm19_7, zmm13_7, zmm31_7, table);
(* vprolq $0x1,%zmm19,%zmm2                        #! PC = 0x55555558dc2c *)
rol zmm2_0 zmm19_0 0x1;
rol zmm2_1 zmm19_1 0x1;
rol zmm2_2 zmm19_2 0x1;
rol zmm2_3 zmm19_3 0x1;
rol zmm2_4 zmm19_4 0x1;
rol zmm2_5 zmm19_5 0x1;
rol zmm2_6 zmm19_6 0x1;
rol zmm2_7 zmm19_7 0x1;
(* vpxord 0x108(%rsp),%zmm19,%zmm19                #! EA = L0x7fffffffd5c0; Value = 0x3d82933599132687; PC = 0x55555558dc33 *)
xor zmm19_0@uint64 zmm19_0 L0x7fffffffd5c0;
xor zmm19_1@uint64 zmm19_1 L0x7fffffffd5c8;
xor zmm19_2@uint64 zmm19_2 L0x7fffffffd5d0;
xor zmm19_3@uint64 zmm19_3 L0x7fffffffd5d8;
xor zmm19_4@uint64 zmm19_4 L0x7fffffffd5e0;
xor zmm19_5@uint64 zmm19_5 L0x7fffffffd5e8;
xor zmm19_6@uint64 zmm19_6 L0x7fffffffd5f0;
xor zmm19_7@uint64 zmm19_7 L0x7fffffffd5f8;
(* movabs $0x8000000000008003,%r9                  #! PC = 0x55555558dc3e *)
mov r9 0x8000000000008003@uint64;
(* vmovdqa64 %zmm10,0xc8(%rsp)                     #! EA = L0x7fffffffd580; PC = 0x55555558dc48 *)
mov L0x7fffffffd580 zmm10_0;
mov L0x7fffffffd588 zmm10_1;
mov L0x7fffffffd590 zmm10_2;
mov L0x7fffffffd598 zmm10_3;
mov L0x7fffffffd5a0 zmm10_4;
mov L0x7fffffffd5a8 zmm10_5;
mov L0x7fffffffd5b0 zmm10_6;
mov L0x7fffffffd5b8 zmm10_7;
(* vprolq $0x1,%zmm8,%zmm10                        #! PC = 0x55555558dc53 *)
rol zmm10_0 zmm8_0 0x1;
rol zmm10_1 zmm8_1 0x1;
rol zmm10_2 zmm8_2 0x1;
rol zmm10_3 zmm8_3 0x1;
rol zmm10_4 zmm8_4 0x1;
rol zmm10_5 zmm8_5 0x1;
rol zmm10_6 zmm8_6 0x1;
rol zmm10_7 zmm8_7 0x1;
(* vpxord 0x148(%rsp),%zmm8,%zmm8                  #! EA = L0x7fffffffd600; Value = 0x5dc4c4d42a103b82; PC = 0x55555558dc5a *)
xor zmm8_0@uint64 zmm8_0 L0x7fffffffd600;
xor zmm8_1@uint64 zmm8_1 L0x7fffffffd608;
xor zmm8_2@uint64 zmm8_2 L0x7fffffffd610;
xor zmm8_3@uint64 zmm8_3 L0x7fffffffd618;
xor zmm8_4@uint64 zmm8_4 L0x7fffffffd620;
xor zmm8_5@uint64 zmm8_5 L0x7fffffffd628;
xor zmm8_6@uint64 zmm8_6 L0x7fffffffd630;
xor zmm8_7@uint64 zmm8_7 L0x7fffffffd638;
(* vpxord 0xc8(%rsp),%zmm20,%zmm20                 #! EA = L0x7fffffffd580; Value = 0x5fb8e02292fac4e4; PC = 0x55555558dc65 *)
xor zmm20_0@uint64 zmm20_0 L0x7fffffffd580;
xor zmm20_1@uint64 zmm20_1 L0x7fffffffd588;
xor zmm20_2@uint64 zmm20_2 L0x7fffffffd590;
xor zmm20_3@uint64 zmm20_3 L0x7fffffffd598;
xor zmm20_4@uint64 zmm20_4 L0x7fffffffd5a0;
xor zmm20_5@uint64 zmm20_5 L0x7fffffffd5a8;
xor zmm20_6@uint64 zmm20_6 L0x7fffffffd5b0;
xor zmm20_7@uint64 zmm20_7 L0x7fffffffd5b8;
(* vpxord %zmm30,%zmm8,%zmm30                      #! PC = 0x55555558dc70 *)
xor zmm30_0@uint64 zmm8_0 zmm30_0;
xor zmm30_1@uint64 zmm8_1 zmm30_1;
xor zmm30_2@uint64 zmm8_2 zmm30_2;
xor zmm30_3@uint64 zmm8_3 zmm30_3;
xor zmm30_4@uint64 zmm8_4 zmm30_4;
xor zmm30_5@uint64 zmm8_5 zmm30_5;
xor zmm30_6@uint64 zmm8_6 zmm30_6;
xor zmm30_7@uint64 zmm8_7 zmm30_7;
(* vprorq $0x14,%zmm30,%zmm30                      #! PC = 0x55555558dc76 *)
ror zmm30_0 zmm30_0 0x14;
ror zmm30_1 zmm30_1 0x14;
ror zmm30_2 zmm30_2 0x14;
ror zmm30_3 zmm30_3 0x14;
ror zmm30_4 zmm30_4 0x14;
ror zmm30_5 zmm30_5 0x14;
ror zmm30_6 zmm30_6 0x14;
ror zmm30_7 zmm30_7 0x14;
(* vpxord %zmm5,%zmm19,%zmm5                       #! PC = 0x55555558dc7d *)
xor zmm5_0@uint64 zmm19_0 zmm5_0;
xor zmm5_1@uint64 zmm19_1 zmm5_1;
xor zmm5_2@uint64 zmm19_2 zmm5_2;
xor zmm5_3@uint64 zmm19_3 zmm5_3;
xor zmm5_4@uint64 zmm19_4 zmm5_4;
xor zmm5_5@uint64 zmm19_5 zmm5_5;
xor zmm5_6@uint64 zmm19_6 zmm5_6;
xor zmm5_7@uint64 zmm19_7 zmm5_7;
(* vpxord %zmm23,%zmm10,%zmm10                     #! PC = 0x55555558dc83 *)
xor zmm10_0@uint64 zmm10_0 zmm23_0;
xor zmm10_1@uint64 zmm10_1 zmm23_1;
xor zmm10_2@uint64 zmm10_2 zmm23_2;
xor zmm10_3@uint64 zmm10_3 zmm23_3;
xor zmm10_4@uint64 zmm10_4 zmm23_4;
xor zmm10_5@uint64 zmm10_5 zmm23_5;
xor zmm10_6@uint64 zmm10_6 zmm23_6;
xor zmm10_7@uint64 zmm10_7 zmm23_7;
(* vpxord %zmm7,%zmm20,%zmm7                       #! PC = 0x55555558dc89 *)
xor zmm7_0@uint64 zmm20_0 zmm7_0;
xor zmm7_1@uint64 zmm20_1 zmm7_1;
xor zmm7_2@uint64 zmm20_2 zmm7_2;
xor zmm7_3@uint64 zmm20_3 zmm7_3;
xor zmm7_4@uint64 zmm20_4 zmm7_4;
xor zmm7_5@uint64 zmm20_5 zmm7_5;
xor zmm7_6@uint64 zmm20_6 zmm7_6;
xor zmm7_7@uint64 zmm20_7 zmm7_7;
(* vpxord %zmm17,%zmm10,%zmm17                     #! PC = 0x55555558dc8f *)
xor zmm17_0@uint64 zmm10_0 zmm17_0;
xor zmm17_1@uint64 zmm10_1 zmm17_1;
xor zmm17_2@uint64 zmm10_2 zmm17_2;
xor zmm17_3@uint64 zmm10_3 zmm17_3;
xor zmm17_4@uint64 zmm10_4 zmm17_4;
xor zmm17_5@uint64 zmm10_5 zmm17_5;
xor zmm17_6@uint64 zmm10_6 zmm17_6;
xor zmm17_7@uint64 zmm10_7 zmm17_7;
(* vpxord %zmm26,%zmm2,%zmm2                       #! PC = 0x55555558dc95 *)
xor zmm2_0@uint64 zmm2_0 zmm26_0;
xor zmm2_1@uint64 zmm2_1 zmm26_1;
xor zmm2_2@uint64 zmm2_2 zmm26_2;
xor zmm2_3@uint64 zmm2_3 zmm26_3;
xor zmm2_4@uint64 zmm2_4 zmm26_4;
xor zmm2_5@uint64 zmm2_5 zmm26_5;
xor zmm2_6@uint64 zmm2_6 zmm26_6;
xor zmm2_7@uint64 zmm2_7 zmm26_7;
(* vprorq $0x15,%zmm5,%zmm5                        #! PC = 0x55555558dc9b *)
ror zmm5_0 zmm5_0 0x15;
ror zmm5_1 zmm5_1 0x15;
ror zmm5_2 zmm5_2 0x15;
ror zmm5_3 zmm5_3 0x15;
ror zmm5_4 zmm5_4 0x15;
ror zmm5_5 zmm5_5 0x15;
ror zmm5_6 zmm5_6 0x15;
ror zmm5_7 zmm5_7 0x15;
(* vprolq $0x15,%zmm7,%zmm7                        #! PC = 0x55555558dca2 *)
rol zmm7_0 zmm7_0 0x15;
rol zmm7_1 zmm7_1 0x15;
rol zmm7_2 zmm7_2 0x15;
rol zmm7_3 zmm7_3 0x15;
rol zmm7_4 zmm7_4 0x15;
rol zmm7_5 zmm7_5 0x15;
rol zmm7_6 zmm7_6 0x15;
rol zmm7_7 zmm7_7 0x15;
(* vprolq $0xe,%zmm17,%zmm17                       #! PC = 0x55555558dca9 *)
rol zmm17_0 zmm17_0 0xe;
rol zmm17_1 zmm17_1 0xe;
rol zmm17_2 zmm17_2 0xe;
rol zmm17_3 zmm17_3 0xe;
rol zmm17_4 zmm17_4 0xe;
rol zmm17_5 zmm17_5 0xe;
rol zmm17_6 zmm17_6 0xe;
rol zmm17_7 zmm17_7 0xe;
(* vpxord %zmm18,%zmm19,%zmm18                     #! PC = 0x55555558dcb0 *)
xor zmm18_0@uint64 zmm19_0 zmm18_0;
xor zmm18_1@uint64 zmm19_1 zmm18_1;
xor zmm18_2@uint64 zmm19_2 zmm18_2;
xor zmm18_3@uint64 zmm19_3 zmm18_3;
xor zmm18_4@uint64 zmm19_4 zmm18_4;
xor zmm18_5@uint64 zmm19_5 zmm18_5;
xor zmm18_6@uint64 zmm19_6 zmm18_6;
xor zmm18_7@uint64 zmm19_7 zmm18_7;
(* vpxord %zmm9,%zmm20,%zmm9                       #! PC = 0x55555558dcb6 *)
xor zmm9_0@uint64 zmm20_0 zmm9_0;
xor zmm9_1@uint64 zmm20_1 zmm9_1;
xor zmm9_2@uint64 zmm20_2 zmm9_2;
xor zmm9_3@uint64 zmm20_3 zmm9_3;
xor zmm9_4@uint64 zmm20_4 zmm9_4;
xor zmm9_5@uint64 zmm20_5 zmm9_5;
xor zmm9_6@uint64 zmm20_6 zmm9_6;
xor zmm9_7@uint64 zmm20_7 zmm9_7;
(* vpxord %zmm16,%zmm10,%zmm16                     #! PC = 0x55555558dcbc *)
xor zmm16_0@uint64 zmm10_0 zmm16_0;
xor zmm16_1@uint64 zmm10_1 zmm16_1;
xor zmm16_2@uint64 zmm10_2 zmm16_2;
xor zmm16_3@uint64 zmm10_3 zmm16_3;
xor zmm16_4@uint64 zmm10_4 zmm16_4;
xor zmm16_5@uint64 zmm10_5 zmm16_5;
xor zmm16_6@uint64 zmm10_6 zmm16_6;
xor zmm16_7@uint64 zmm10_7 zmm16_7;
(* vpxord %zmm22,%zmm19,%zmm22                     #! PC = 0x55555558dcc2 *)
xor zmm22_0@uint64 zmm19_0 zmm22_0;
xor zmm22_1@uint64 zmm19_1 zmm22_1;
xor zmm22_2@uint64 zmm19_2 zmm22_2;
xor zmm22_3@uint64 zmm19_3 zmm22_3;
xor zmm22_4@uint64 zmm19_4 zmm22_4;
xor zmm22_5@uint64 zmm19_5 zmm22_5;
xor zmm22_6@uint64 zmm19_6 zmm22_6;
xor zmm22_7@uint64 zmm19_7 zmm22_7;
(* vpxord %zmm0,%zmm20,%zmm0                       #! PC = 0x55555558dcc8 *)
xor zmm0_0@uint64 zmm20_0 zmm0_0;
xor zmm0_1@uint64 zmm20_1 zmm0_1;
xor zmm0_2@uint64 zmm20_2 zmm0_2;
xor zmm0_3@uint64 zmm20_3 zmm0_3;
xor zmm0_4@uint64 zmm20_4 zmm0_4;
xor zmm0_5@uint64 zmm20_5 zmm0_5;
xor zmm0_6@uint64 zmm20_6 zmm0_6;
xor zmm0_7@uint64 zmm20_7 zmm0_7;
(* vpxord %zmm6,%zmm19,%zmm6                       #! PC = 0x55555558dcce *)
xor zmm6_0@uint64 zmm19_0 zmm6_0;
xor zmm6_1@uint64 zmm19_1 zmm6_1;
xor zmm6_2@uint64 zmm19_2 zmm6_2;
xor zmm6_3@uint64 zmm19_3 zmm6_3;
xor zmm6_4@uint64 zmm19_4 zmm6_4;
xor zmm6_5@uint64 zmm19_5 zmm6_5;
xor zmm6_6@uint64 zmm19_6 zmm6_6;
xor zmm6_7@uint64 zmm19_7 zmm6_7;
(* vpxord %zmm3,%zmm20,%zmm3                       #! PC = 0x55555558dcd4 *)
xor zmm3_0@uint64 zmm20_0 zmm3_0;
xor zmm3_1@uint64 zmm20_1 zmm3_1;
xor zmm3_2@uint64 zmm20_2 zmm3_2;
xor zmm3_3@uint64 zmm20_3 zmm3_3;
xor zmm3_4@uint64 zmm20_4 zmm3_4;
xor zmm3_5@uint64 zmm20_5 zmm3_5;
xor zmm3_6@uint64 zmm20_6 zmm3_6;
xor zmm3_7@uint64 zmm20_7 zmm3_7;
(* vpxord %zmm1,%zmm19,%zmm19                      #! PC = 0x55555558dcda *)
xor zmm19_0@uint64 zmm19_0 zmm1_0;
xor zmm19_1@uint64 zmm19_1 zmm1_1;
xor zmm19_2@uint64 zmm19_2 zmm1_2;
xor zmm19_3@uint64 zmm19_3 zmm1_3;
xor zmm19_4@uint64 zmm19_4 zmm1_4;
xor zmm19_5@uint64 zmm19_5 zmm1_5;
xor zmm19_6@uint64 zmm19_6 zmm1_6;
xor zmm19_7@uint64 zmm19_7 zmm1_7;
(* vpxord %zmm15,%zmm20,%zmm20                     #! PC = 0x55555558dce0 *)
xor zmm20_0@uint64 zmm20_0 zmm15_0;
xor zmm20_1@uint64 zmm20_1 zmm15_1;
xor zmm20_2@uint64 zmm20_2 zmm15_2;
xor zmm20_3@uint64 zmm20_3 zmm15_3;
xor zmm20_4@uint64 zmm20_4 zmm15_4;
xor zmm20_5@uint64 zmm20_5 zmm15_5;
xor zmm20_6@uint64 zmm20_6 zmm15_6;
xor zmm20_7@uint64 zmm20_7 zmm15_7;
(* vpxord %zmm24,%zmm2,%zmm24                      #! PC = 0x55555558dce6 *)
xor zmm24_0@uint64 zmm2_0 zmm24_0;
xor zmm24_1@uint64 zmm2_1 zmm24_1;
xor zmm24_2@uint64 zmm2_2 zmm24_2;
xor zmm24_3@uint64 zmm2_3 zmm24_3;
xor zmm24_4@uint64 zmm2_4 zmm24_4;
xor zmm24_5@uint64 zmm2_5 zmm24_5;
xor zmm24_6@uint64 zmm2_6 zmm24_6;
xor zmm24_7@uint64 zmm2_7 zmm24_7;
(* vprolq $0x1c,%zmm9,%zmm9                        #! PC = 0x55555558dcec *)
rol zmm9_0 zmm9_0 0x1c;
rol zmm9_1 zmm9_1 0x1c;
rol zmm9_2 zmm9_2 0x1c;
rol zmm9_3 zmm9_3 0x1c;
rol zmm9_4 zmm9_4 0x1c;
rol zmm9_5 zmm9_5 0x1c;
rol zmm9_6 zmm9_6 0x1c;
rol zmm9_7 zmm9_7 0x1c;
(* vprolq $0x14,%zmm16,%zmm16                      #! PC = 0x55555558dcf3 *)
rol zmm16_0 zmm16_0 0x14;
rol zmm16_1 zmm16_1 0x14;
rol zmm16_2 zmm16_2 0x14;
rol zmm16_3 zmm16_3 0x14;
rol zmm16_4 zmm16_4 0x14;
rol zmm16_5 zmm16_5 0x14;
rol zmm16_6 zmm16_6 0x14;
rol zmm16_7 zmm16_7 0x14;
(* vprorq $0x2,%zmm19,%zmm19                       #! PC = 0x55555558dcfa *)
ror zmm19_0 zmm19_0 0x2;
ror zmm19_1 zmm19_1 0x2;
ror zmm19_2 zmm19_2 0x2;
ror zmm19_3 zmm19_3 0x2;
ror zmm19_4 zmm19_4 0x2;
ror zmm19_5 zmm19_5 0x2;
ror zmm19_6 zmm19_6 0x2;
ror zmm19_7 zmm19_7 0x2;
(* vprorq $0x9,%zmm20,%zmm20                       #! PC = 0x55555558dd01 *)
ror zmm20_0 zmm20_0 0x9;
ror zmm20_1 zmm20_1 0x9;
ror zmm20_2 zmm20_2 0x9;
ror zmm20_3 zmm20_3 0x9;
ror zmm20_4 zmm20_4 0x9;
ror zmm20_5 zmm20_5 0x9;
ror zmm20_6 zmm20_6 0x9;
ror zmm20_7 zmm20_7 0x9;
(* vpxord %zmm12,%zmm2,%zmm12                      #! PC = 0x55555558dd08 *)
xor zmm12_0@uint64 zmm2_0 zmm12_0;
xor zmm12_1@uint64 zmm2_1 zmm12_1;
xor zmm12_2@uint64 zmm2_2 zmm12_2;
xor zmm12_3@uint64 zmm2_3 zmm12_3;
xor zmm12_4@uint64 zmm2_4 zmm12_4;
xor zmm12_5@uint64 zmm2_5 zmm12_5;
xor zmm12_6@uint64 zmm2_6 zmm12_6;
xor zmm12_7@uint64 zmm2_7 zmm12_7;
(* vpxord %zmm13,%zmm8,%zmm13                      #! PC = 0x55555558dd0e *)
xor zmm13_0@uint64 zmm8_0 zmm13_0;
xor zmm13_1@uint64 zmm8_1 zmm13_1;
xor zmm13_2@uint64 zmm8_2 zmm13_2;
xor zmm13_3@uint64 zmm8_3 zmm13_3;
xor zmm13_4@uint64 zmm8_4 zmm13_4;
xor zmm13_5@uint64 zmm8_5 zmm13_5;
xor zmm13_6@uint64 zmm8_6 zmm13_6;
xor zmm13_7@uint64 zmm8_7 zmm13_7;
(* vpxord %zmm21,%zmm2,%zmm21                      #! PC = 0x55555558dd14 *)
xor zmm21_0@uint64 zmm2_0 zmm21_0;
xor zmm21_1@uint64 zmm2_1 zmm21_1;
xor zmm21_2@uint64 zmm2_2 zmm21_2;
xor zmm21_3@uint64 zmm2_3 zmm21_3;
xor zmm21_4@uint64 zmm2_4 zmm21_4;
xor zmm21_5@uint64 zmm2_5 zmm21_5;
xor zmm21_6@uint64 zmm2_6 zmm21_6;
xor zmm21_7@uint64 zmm2_7 zmm21_7;
(* vpxord %zmm28,%zmm8,%zmm28                      #! PC = 0x55555558dd1a *)
xor zmm28_0@uint64 zmm8_0 zmm28_0;
xor zmm28_1@uint64 zmm8_1 zmm28_1;
xor zmm28_2@uint64 zmm8_2 zmm28_2;
xor zmm28_3@uint64 zmm8_3 zmm28_3;
xor zmm28_4@uint64 zmm8_4 zmm28_4;
xor zmm28_5@uint64 zmm8_5 zmm28_5;
xor zmm28_6@uint64 zmm8_6 zmm28_6;
xor zmm28_7@uint64 zmm8_7 zmm28_7;
(* vpxord %zmm4,%zmm10,%zmm4                       #! PC = 0x55555558dd20 *)
xor zmm4_0@uint64 zmm10_0 zmm4_0;
xor zmm4_1@uint64 zmm10_1 zmm4_1;
xor zmm4_2@uint64 zmm10_2 zmm4_2;
xor zmm4_3@uint64 zmm10_3 zmm4_3;
xor zmm4_4@uint64 zmm10_4 zmm4_4;
xor zmm4_5@uint64 zmm10_5 zmm4_5;
xor zmm4_6@uint64 zmm10_6 zmm4_6;
xor zmm4_7@uint64 zmm10_7 zmm4_7;
(* vpxord %zmm29,%zmm2,%zmm29                      #! PC = 0x55555558dd26 *)
xor zmm29_0@uint64 zmm2_0 zmm29_0;
xor zmm29_1@uint64 zmm2_1 zmm29_1;
xor zmm29_2@uint64 zmm2_2 zmm29_2;
xor zmm29_3@uint64 zmm2_3 zmm29_3;
xor zmm29_4@uint64 zmm2_4 zmm29_4;
xor zmm29_5@uint64 zmm2_5 zmm29_5;
xor zmm29_6@uint64 zmm2_6 zmm29_6;
xor zmm29_7@uint64 zmm2_7 zmm29_7;
(* vpxord %zmm11,%zmm8,%zmm11                      #! PC = 0x55555558dd2c *)
xor zmm11_0@uint64 zmm8_0 zmm11_0;
xor zmm11_1@uint64 zmm8_1 zmm11_1;
xor zmm11_2@uint64 zmm8_2 zmm11_2;
xor zmm11_3@uint64 zmm8_3 zmm11_3;
xor zmm11_4@uint64 zmm8_4 zmm11_4;
xor zmm11_5@uint64 zmm8_5 zmm11_5;
xor zmm11_6@uint64 zmm8_6 zmm11_6;
xor zmm11_7@uint64 zmm8_7 zmm11_7;
(* vpxord %zmm14,%zmm10,%zmm14                     #! PC = 0x55555558dd32 *)
xor zmm14_0@uint64 zmm10_0 zmm14_0;
xor zmm14_1@uint64 zmm10_1 zmm14_1;
xor zmm14_2@uint64 zmm10_2 zmm14_2;
xor zmm14_3@uint64 zmm10_3 zmm14_3;
xor zmm14_4@uint64 zmm10_4 zmm14_4;
xor zmm14_5@uint64 zmm10_5 zmm14_5;
xor zmm14_6@uint64 zmm10_6 zmm14_6;
xor zmm14_7@uint64 zmm10_7 zmm14_7;
(* vpxord %zmm27,%zmm2,%zmm2                       #! PC = 0x55555558dd38 *)
xor zmm2_0@uint64 zmm2_0 zmm27_0;
xor zmm2_1@uint64 zmm2_1 zmm27_1;
xor zmm2_2@uint64 zmm2_2 zmm27_2;
xor zmm2_3@uint64 zmm2_3 zmm27_3;
xor zmm2_4@uint64 zmm2_4 zmm27_4;
xor zmm2_5@uint64 zmm2_5 zmm27_5;
xor zmm2_6@uint64 zmm2_6 zmm27_6;
xor zmm2_7@uint64 zmm2_7 zmm27_7;
(* vpxord %zmm31,%zmm8,%zmm8                       #! PC = 0x55555558dd3e *)
xor zmm8_0@uint64 zmm8_0 zmm31_0;
xor zmm8_1@uint64 zmm8_1 zmm31_1;
xor zmm8_2@uint64 zmm8_2 zmm31_2;
xor zmm8_3@uint64 zmm8_3 zmm31_3;
xor zmm8_4@uint64 zmm8_4 zmm31_4;
xor zmm8_5@uint64 zmm8_5 zmm31_5;
xor zmm8_6@uint64 zmm8_6 zmm31_6;
xor zmm8_7@uint64 zmm8_7 zmm31_7;
(* vpxord %zmm25,%zmm10,%zmm10                     #! PC = 0x55555558dd44 *)
xor zmm10_0@uint64 zmm10_0 zmm25_0;
xor zmm10_1@uint64 zmm10_1 zmm25_1;
xor zmm10_2@uint64 zmm10_2 zmm25_2;
xor zmm10_3@uint64 zmm10_3 zmm25_3;
xor zmm10_4@uint64 zmm10_4 zmm25_4;
xor zmm10_5@uint64 zmm10_5 zmm25_5;
xor zmm10_6@uint64 zmm10_6 zmm25_6;
xor zmm10_7@uint64 zmm10_7 zmm25_7;
(* vprolq $0x1,%zmm28,%zmm28                       #! PC = 0x55555558dd4a *)
rol zmm28_0 zmm28_0 0x1;
rol zmm28_1 zmm28_1 0x1;
rol zmm28_2 zmm28_2 0x1;
rol zmm28_3 zmm28_3 0x1;
rol zmm28_4 zmm28_4 0x1;
rol zmm28_5 zmm28_5 0x1;
rol zmm28_6 zmm28_6 0x1;
rol zmm28_7 zmm28_7 0x1;
(* vprolq $0x6,%zmm22,%zmm22                       #! PC = 0x55555558dd51 *)
rol zmm22_0 zmm22_0 0x6;
rol zmm22_1 zmm22_1 0x6;
rol zmm22_2 zmm22_2 0x6;
rol zmm22_3 zmm22_3 0x6;
rol zmm22_4 zmm22_4 0x6;
rol zmm22_5 zmm22_5 0x6;
rol zmm22_6 zmm22_6 0x6;
rol zmm22_7 zmm22_7 0x6;
(* vprolq $0x3,%zmm12,%zmm12                       #! PC = 0x55555558dd58 *)
rol zmm12_0 zmm12_0 0x3;
rol zmm12_1 zmm12_1 0x3;
rol zmm12_2 zmm12_2 0x3;
rol zmm12_3 zmm12_3 0x3;
rol zmm12_4 zmm12_4 0x3;
rol zmm12_5 zmm12_5 0x3;
rol zmm12_6 zmm12_6 0x3;
rol zmm12_7 zmm12_7 0x3;
(* vprorq $0x13,%zmm13,%zmm13                      #! PC = 0x55555558dd5f *)
ror zmm13_0 zmm13_0 0x13;
ror zmm13_1 zmm13_1 0x13;
ror zmm13_2 zmm13_2 0x13;
ror zmm13_3 zmm13_3 0x13;
ror zmm13_4 zmm13_4 0x13;
ror zmm13_5 zmm13_5 0x13;
ror zmm13_6 zmm13_6 0x13;
ror zmm13_7 zmm13_7 0x13;
(* vprorq $0x3,%zmm18,%zmm18                       #! PC = 0x55555558dd66 *)
ror zmm18_0 zmm18_0 0x3;
ror zmm18_1 zmm18_1 0x3;
ror zmm18_2 zmm18_2 0x3;
ror zmm18_3 zmm18_3 0x3;
ror zmm18_4 zmm18_4 0x3;
ror zmm18_5 zmm18_5 0x3;
ror zmm18_6 zmm18_6 0x3;
ror zmm18_7 zmm18_7 0x3;
(* vprorq $0x17,%zmm2,%zmm2                        #! PC = 0x55555558dd6d *)
ror zmm2_0 zmm2_0 0x17;
ror zmm2_1 zmm2_1 0x17;
ror zmm2_2 zmm2_2 0x17;
ror zmm2_3 zmm2_3 0x17;
ror zmm2_4 zmm2_4 0x17;
ror zmm2_5 zmm2_5 0x17;
ror zmm2_6 zmm2_6 0x17;
ror zmm2_7 zmm2_7 0x17;
(* vprolq $0x2,%zmm8,%zmm8                         #! PC = 0x55555558dd74 *)
rol zmm8_0 zmm8_0 0x2;
rol zmm8_1 zmm8_1 0x2;
rol zmm8_2 zmm8_2 0x2;
rol zmm8_3 zmm8_3 0x2;
rol zmm8_4 zmm8_4 0x2;
rol zmm8_5 zmm8_5 0x2;
rol zmm8_6 zmm8_6 0x2;
rol zmm8_7 zmm8_7 0x2;
(* vprorq $0x19,%zmm10,%zmm10                      #! PC = 0x55555558dd7b *)
ror zmm10_0 zmm10_0 0x19;
ror zmm10_1 zmm10_1 0x19;
ror zmm10_2 zmm10_2 0x19;
ror zmm10_3 zmm10_3 0x19;
ror zmm10_4 zmm10_4 0x19;
ror zmm10_5 zmm10_5 0x19;
ror zmm10_6 zmm10_6 0x19;
ror zmm10_7 zmm10_7 0x19;
(* vprorq $0x1c,%zmm29,%zmm29                      #! PC = 0x55555558dd82 *)
ror zmm29_0 zmm29_0 0x1c;
ror zmm29_1 zmm29_1 0x1c;
ror zmm29_2 zmm29_2 0x1c;
ror zmm29_3 zmm29_3 0x1c;
ror zmm29_4 zmm29_4 0x1c;
ror zmm29_5 zmm29_5 0x1c;
ror zmm29_6 zmm29_6 0x1c;
ror zmm29_7 zmm29_7 0x1c;
(* vprolq $0x1b,%zmm14,%zmm14                      #! PC = 0x55555558dd89 *)
rol zmm14_0 zmm14_0 0x1b;
rol zmm14_1 zmm14_1 0x1b;
rol zmm14_2 zmm14_2 0x1b;
rol zmm14_3 zmm14_3 0x1b;
rol zmm14_4 zmm14_4 0x1b;
rol zmm14_5 zmm14_5 0x1b;
rol zmm14_6 zmm14_6 0x1b;
rol zmm14_7 zmm14_7 0x1b;
(* vprolq $0x12,%zmm21,%zmm21                      #! PC = 0x55555558dd90 *)
rol zmm21_0 zmm21_0 0x12;
rol zmm21_1 zmm21_1 0x12;
rol zmm21_2 zmm21_2 0x12;
rol zmm21_3 zmm21_3 0x12;
rol zmm21_4 zmm21_4 0x12;
rol zmm21_5 zmm21_5 0x12;
rol zmm21_6 zmm21_6 0x12;
rol zmm21_7 zmm21_7 0x12;
(* vprolq $0x19,%zmm0,%zmm0                        #! PC = 0x55555558dd97 *)
rol zmm0_0 zmm0_0 0x19;
rol zmm0_1 zmm0_1 0x19;
rol zmm0_2 zmm0_2 0x19;
rol zmm0_3 zmm0_3 0x19;
rol zmm0_4 zmm0_4 0x19;
rol zmm0_5 zmm0_5 0x19;
rol zmm0_6 zmm0_6 0x19;
rol zmm0_7 zmm0_7 0x19;
(* vprolq $0x8,%zmm4,%zmm4                         #! PC = 0x55555558dd9e *)
rol zmm4_0 zmm4_0 0x8;
rol zmm4_1 zmm4_1 0x8;
rol zmm4_2 zmm4_2 0x8;
rol zmm4_3 zmm4_3 0x8;
rol zmm4_4 zmm4_4 0x8;
rol zmm4_5 zmm4_5 0x8;
rol zmm4_6 zmm4_6 0x8;
rol zmm4_7 zmm4_7 0x8;
(* vprolq $0xa,%zmm11,%zmm11                       #! PC = 0x55555558dda5 *)
rol zmm11_0 zmm11_0 0xa;
rol zmm11_1 zmm11_1 0xa;
rol zmm11_2 zmm11_2 0xa;
rol zmm11_3 zmm11_3 0xa;
rol zmm11_4 zmm11_4 0xa;
rol zmm11_5 zmm11_5 0xa;
rol zmm11_6 zmm11_6 0xa;
rol zmm11_7 zmm11_7 0xa;
(* vprolq $0xf,%zmm6,%zmm6                         #! PC = 0x55555558ddac *)
rol zmm6_0 zmm6_0 0xf;
rol zmm6_1 zmm6_1 0xf;
rol zmm6_2 zmm6_2 0xf;
rol zmm6_3 zmm6_3 0xf;
rol zmm6_4 zmm6_4 0xf;
rol zmm6_5 zmm6_5 0xf;
rol zmm6_6 zmm6_6 0xf;
rol zmm6_7 zmm6_7 0xf;
(* vprorq $0x8,%zmm3,%zmm3                         #! PC = 0x55555558ddb3 *)
ror zmm3_0 zmm3_0 0x8;
ror zmm3_1 zmm3_1 0x8;
ror zmm3_2 zmm3_2 0x8;
ror zmm3_3 zmm3_3 0x8;
ror zmm3_4 zmm3_4 0x8;
ror zmm3_5 zmm3_5 0x8;
ror zmm3_6 zmm3_6 0x8;
ror zmm3_7 zmm3_7 0x8;
(* vmovdqa64 %zmm24,%zmm26                         #! PC = 0x55555558ddba *)
mov zmm26_0 zmm24_0;
mov zmm26_1 zmm24_1;
mov zmm26_2 zmm24_2;
mov zmm26_3 zmm24_3;
mov zmm26_4 zmm24_4;
mov zmm26_5 zmm24_5;
mov zmm26_6 zmm24_6;
mov zmm26_7 zmm24_7;
(* vmovdqa64 %zmm30,%zmm23                         #! PC = 0x55555558ddc0 *)
mov zmm23_0 zmm30_0;
mov zmm23_1 zmm30_1;
mov zmm23_2 zmm30_2;
mov zmm23_3 zmm30_3;
mov zmm23_4 zmm30_4;
mov zmm23_5 zmm30_5;
mov zmm23_6 zmm30_6;
mov zmm23_7 zmm30_7;
(* vpternlogq $0xd2,%zmm5,%zmm30,%zmm26            #! PC = 0x55555558ddc6 *)
mov table 0xd2@uint8;
inline vpternlogq64 (zmm26_0, zmm30_0, zmm5_0, table);
inline vpternlogq64 (zmm26_1, zmm30_1, zmm5_1, table);
inline vpternlogq64 (zmm26_2, zmm30_2, zmm5_2, table);
inline vpternlogq64 (zmm26_3, zmm30_3, zmm5_3, table);
inline vpternlogq64 (zmm26_4, zmm30_4, zmm5_4, table);
inline vpternlogq64 (zmm26_5, zmm30_5, zmm5_5, table);
inline vpternlogq64 (zmm26_6, zmm30_6, zmm5_6, table);
inline vpternlogq64 (zmm26_7, zmm30_7, zmm5_7, table);
(* vpternlogq $0xd2,%zmm7,%zmm5,%zmm23             #! PC = 0x55555558ddcd *)
mov table 0xd2@uint8;
inline vpternlogq64 (zmm23_0, zmm5_0, zmm7_0, table);
inline vpternlogq64 (zmm23_1, zmm5_1, zmm7_1, table);
inline vpternlogq64 (zmm23_2, zmm5_2, zmm7_2, table);
inline vpternlogq64 (zmm23_3, zmm5_3, zmm7_3, table);
inline vpternlogq64 (zmm23_4, zmm5_4, zmm7_4, table);
inline vpternlogq64 (zmm23_5, zmm5_5, zmm7_5, table);
inline vpternlogq64 (zmm23_6, zmm5_6, zmm7_6, table);
inline vpternlogq64 (zmm23_7, zmm5_7, zmm7_7, table);
(* vpternlogq $0xd2,%zmm17,%zmm7,%zmm5             #! PC = 0x55555558ddd4 *)
mov table 0xd2@uint8;
inline vpternlogq64 (zmm5_0, zmm7_0, zmm17_0, table);
inline vpternlogq64 (zmm5_1, zmm7_1, zmm17_1, table);
inline vpternlogq64 (zmm5_2, zmm7_2, zmm17_2, table);
inline vpternlogq64 (zmm5_3, zmm7_3, zmm17_3, table);
inline vpternlogq64 (zmm5_4, zmm7_4, zmm17_4, table);
inline vpternlogq64 (zmm5_5, zmm7_5, zmm17_5, table);
inline vpternlogq64 (zmm5_6, zmm7_6, zmm17_6, table);
inline vpternlogq64 (zmm5_7, zmm7_7, zmm17_7, table);
(* vpternlogq $0xd2,%zmm24,%zmm17,%zmm7            #! PC = 0x55555558dddb *)
mov table 0xd2@uint8;
inline vpternlogq64 (zmm7_0, zmm17_0, zmm24_0, table);
inline vpternlogq64 (zmm7_1, zmm17_1, zmm24_1, table);
inline vpternlogq64 (zmm7_2, zmm17_2, zmm24_2, table);
inline vpternlogq64 (zmm7_3, zmm17_3, zmm24_3, table);
inline vpternlogq64 (zmm7_4, zmm17_4, zmm24_4, table);
inline vpternlogq64 (zmm7_5, zmm17_5, zmm24_5, table);
inline vpternlogq64 (zmm7_6, zmm17_6, zmm24_6, table);
inline vpternlogq64 (zmm7_7, zmm17_7, zmm24_7, table);
(* vpternlogq $0xd2,%zmm30,%zmm24,%zmm17           #! PC = 0x55555558dde2 *)
mov table 0xd2@uint8;
inline vpternlogq64 (zmm17_0, zmm24_0, zmm30_0, table);
inline vpternlogq64 (zmm17_1, zmm24_1, zmm30_1, table);
inline vpternlogq64 (zmm17_2, zmm24_2, zmm30_2, table);
inline vpternlogq64 (zmm17_3, zmm24_3, zmm30_3, table);
inline vpternlogq64 (zmm17_4, zmm24_4, zmm30_4, table);
inline vpternlogq64 (zmm17_5, zmm24_5, zmm30_5, table);
inline vpternlogq64 (zmm17_6, zmm24_6, zmm30_6, table);
inline vpternlogq64 (zmm17_7, zmm24_7, zmm30_7, table);
(* vpbroadcastq %r10,%zmm24                        #! PC = 0x55555558dde9 *)
mov zmm24_0 r10;
mov zmm24_1 r10;
mov zmm24_2 r10;
mov zmm24_3 r10;
mov zmm24_4 r10;
mov zmm24_5 r10;
mov zmm24_6 r10;
mov zmm24_7 r10;
(* vpxord %zmm24,%zmm26,%zmm24                     #! PC = 0x55555558ddef *)
xor zmm24_0@uint64 zmm26_0 zmm24_0;
xor zmm24_1@uint64 zmm26_1 zmm24_1;
xor zmm24_2@uint64 zmm26_2 zmm24_2;
xor zmm24_3@uint64 zmm26_3 zmm24_3;
xor zmm24_4@uint64 zmm26_4 zmm24_4;
xor zmm24_5@uint64 zmm26_5 zmm24_5;
xor zmm24_6@uint64 zmm26_6 zmm24_6;
xor zmm24_7@uint64 zmm26_7 zmm24_7;
(* vmovdqa64 %zmm16,%zmm30                         #! PC = 0x55555558ddf5 *)
mov zmm30_0 zmm16_0;
mov zmm30_1 zmm16_1;
mov zmm30_2 zmm16_2;
mov zmm30_3 zmm16_3;
mov zmm30_4 zmm16_4;
mov zmm30_5 zmm16_5;
mov zmm30_6 zmm16_6;
mov zmm30_7 zmm16_7;
(* vmovdqa64 %zmm9,%zmm26                          #! PC = 0x55555558ddfb *)
mov zmm26_0 zmm9_0;
mov zmm26_1 zmm9_1;
mov zmm26_2 zmm9_2;
mov zmm26_3 zmm9_3;
mov zmm26_4 zmm9_4;
mov zmm26_5 zmm9_5;
mov zmm26_6 zmm9_6;
mov zmm26_7 zmm9_7;
(* vmovdqa64 %zmm19,%zmm25                         #! PC = 0x55555558de01 *)
mov zmm25_0 zmm19_0;
mov zmm25_1 zmm19_1;
mov zmm25_2 zmm19_2;
mov zmm25_3 zmm19_3;
mov zmm25_4 zmm19_4;
mov zmm25_5 zmm19_5;
mov zmm25_6 zmm19_6;
mov zmm25_7 zmm19_7;
(* vmovdqa64 %zmm20,%zmm31                         #! PC = 0x55555558de07 *)
mov zmm31_0 zmm20_0;
mov zmm31_1 zmm20_1;
mov zmm31_2 zmm20_2;
mov zmm31_3 zmm20_3;
mov zmm31_4 zmm20_4;
mov zmm31_5 zmm20_5;
mov zmm31_6 zmm20_6;
mov zmm31_7 zmm20_7;
(* vpternlogq $0xd2,%zmm2,%zmm10,%zmm31            #! PC = 0x55555558de0d *)
mov table 0xd2@uint8;
inline vpternlogq64 (zmm31_0, zmm10_0, zmm2_0, table);
inline vpternlogq64 (zmm31_1, zmm10_1, zmm2_1, table);
inline vpternlogq64 (zmm31_2, zmm10_2, zmm2_2, table);
inline vpternlogq64 (zmm31_3, zmm10_3, zmm2_3, table);
inline vpternlogq64 (zmm31_4, zmm10_4, zmm2_4, table);
inline vpternlogq64 (zmm31_5, zmm10_5, zmm2_5, table);
inline vpternlogq64 (zmm31_6, zmm10_6, zmm2_6, table);
inline vpternlogq64 (zmm31_7, zmm10_7, zmm2_7, table);
(* vpternlogq $0xd2,%zmm12,%zmm16,%zmm26           #! PC = 0x55555558de14 *)
mov table 0xd2@uint8;
inline vpternlogq64 (zmm26_0, zmm16_0, zmm12_0, table);
inline vpternlogq64 (zmm26_1, zmm16_1, zmm12_1, table);
inline vpternlogq64 (zmm26_2, zmm16_2, zmm12_2, table);
inline vpternlogq64 (zmm26_3, zmm16_3, zmm12_3, table);
inline vpternlogq64 (zmm26_4, zmm16_4, zmm12_4, table);
inline vpternlogq64 (zmm26_5, zmm16_5, zmm12_5, table);
inline vpternlogq64 (zmm26_6, zmm16_6, zmm12_6, table);
inline vpternlogq64 (zmm26_7, zmm16_7, zmm12_7, table);
(* vpternlogq $0xd2,%zmm13,%zmm12,%zmm30           #! PC = 0x55555558de1b *)
mov table 0xd2@uint8;
inline vpternlogq64 (zmm30_0, zmm12_0, zmm13_0, table);
inline vpternlogq64 (zmm30_1, zmm12_1, zmm13_1, table);
inline vpternlogq64 (zmm30_2, zmm12_2, zmm13_2, table);
inline vpternlogq64 (zmm30_3, zmm12_3, zmm13_3, table);
inline vpternlogq64 (zmm30_4, zmm12_4, zmm13_4, table);
inline vpternlogq64 (zmm30_5, zmm12_5, zmm13_5, table);
inline vpternlogq64 (zmm30_6, zmm12_6, zmm13_6, table);
inline vpternlogq64 (zmm30_7, zmm12_7, zmm13_7, table);
(* vpternlogq $0xd2,%zmm10,%zmm20,%zmm25           #! PC = 0x55555558de22 *)
mov table 0xd2@uint8;
inline vpternlogq64 (zmm25_0, zmm20_0, zmm10_0, table);
inline vpternlogq64 (zmm25_1, zmm20_1, zmm10_1, table);
inline vpternlogq64 (zmm25_2, zmm20_2, zmm10_2, table);
inline vpternlogq64 (zmm25_3, zmm20_3, zmm10_3, table);
inline vpternlogq64 (zmm25_4, zmm20_4, zmm10_4, table);
inline vpternlogq64 (zmm25_5, zmm20_5, zmm10_5, table);
inline vpternlogq64 (zmm25_6, zmm20_6, zmm10_6, table);
inline vpternlogq64 (zmm25_7, zmm20_7, zmm10_7, table);
(* vpternlogq $0xd2,%zmm18,%zmm13,%zmm12           #! PC = 0x55555558de29 *)
mov table 0xd2@uint8;
inline vpternlogq64 (zmm12_0, zmm13_0, zmm18_0, table);
inline vpternlogq64 (zmm12_1, zmm13_1, zmm18_1, table);
inline vpternlogq64 (zmm12_2, zmm13_2, zmm18_2, table);
inline vpternlogq64 (zmm12_3, zmm13_3, zmm18_3, table);
inline vpternlogq64 (zmm12_4, zmm13_4, zmm18_4, table);
inline vpternlogq64 (zmm12_5, zmm13_5, zmm18_5, table);
inline vpternlogq64 (zmm12_6, zmm13_6, zmm18_6, table);
inline vpternlogq64 (zmm12_7, zmm13_7, zmm18_7, table);
(* vpternlogq $0xd2,%zmm8,%zmm2,%zmm10             #! PC = 0x55555558de30 *)
mov table 0xd2@uint8;
inline vpternlogq64 (zmm10_0, zmm2_0, zmm8_0, table);
inline vpternlogq64 (zmm10_1, zmm2_1, zmm8_1, table);
inline vpternlogq64 (zmm10_2, zmm2_2, zmm8_2, table);
inline vpternlogq64 (zmm10_3, zmm2_3, zmm8_3, table);
inline vpternlogq64 (zmm10_4, zmm2_4, zmm8_4, table);
inline vpternlogq64 (zmm10_5, zmm2_5, zmm8_5, table);
inline vpternlogq64 (zmm10_6, zmm2_6, zmm8_6, table);
inline vpternlogq64 (zmm10_7, zmm2_7, zmm8_7, table);
(* vpternlogq $0xd2,%zmm9,%zmm18,%zmm13            #! PC = 0x55555558de37 *)
mov table 0xd2@uint8;
inline vpternlogq64 (zmm13_0, zmm18_0, zmm9_0, table);
inline vpternlogq64 (zmm13_1, zmm18_1, zmm9_1, table);
inline vpternlogq64 (zmm13_2, zmm18_2, zmm9_2, table);
inline vpternlogq64 (zmm13_3, zmm18_3, zmm9_3, table);
inline vpternlogq64 (zmm13_4, zmm18_4, zmm9_4, table);
inline vpternlogq64 (zmm13_5, zmm18_5, zmm9_5, table);
inline vpternlogq64 (zmm13_6, zmm18_6, zmm9_6, table);
inline vpternlogq64 (zmm13_7, zmm18_7, zmm9_7, table);
(* vpternlogq $0xd2,%zmm16,%zmm9,%zmm18            #! PC = 0x55555558de3e *)
mov table 0xd2@uint8;
inline vpternlogq64 (zmm18_0, zmm9_0, zmm16_0, table);
inline vpternlogq64 (zmm18_1, zmm9_1, zmm16_1, table);
inline vpternlogq64 (zmm18_2, zmm9_2, zmm16_2, table);
inline vpternlogq64 (zmm18_3, zmm9_3, zmm16_3, table);
inline vpternlogq64 (zmm18_4, zmm9_4, zmm16_4, table);
inline vpternlogq64 (zmm18_5, zmm9_5, zmm16_5, table);
inline vpternlogq64 (zmm18_6, zmm9_6, zmm16_6, table);
inline vpternlogq64 (zmm18_7, zmm9_7, zmm16_7, table);
(* vmovdqa64 %zmm28,%zmm16                         #! PC = 0x55555558de45 *)
mov zmm16_0 zmm28_0;
mov zmm16_1 zmm28_1;
mov zmm16_2 zmm28_2;
mov zmm16_3 zmm28_3;
mov zmm16_4 zmm28_4;
mov zmm16_5 zmm28_5;
mov zmm16_6 zmm28_6;
mov zmm16_7 zmm28_7;
(* vmovdqa64 %zmm22,%zmm9                          #! PC = 0x55555558de4b *)
mov zmm9_0 zmm22_0;
mov zmm9_1 zmm22_1;
mov zmm9_2 zmm22_2;
mov zmm9_3 zmm22_3;
mov zmm9_4 zmm22_4;
mov zmm9_5 zmm22_5;
mov zmm9_6 zmm22_6;
mov zmm9_7 zmm22_7;
(* vpternlogq $0xd2,%zmm0,%zmm22,%zmm16            #! PC = 0x55555558de51 *)
mov table 0xd2@uint8;
inline vpternlogq64 (zmm16_0, zmm22_0, zmm0_0, table);
inline vpternlogq64 (zmm16_1, zmm22_1, zmm0_1, table);
inline vpternlogq64 (zmm16_2, zmm22_2, zmm0_2, table);
inline vpternlogq64 (zmm16_3, zmm22_3, zmm0_3, table);
inline vpternlogq64 (zmm16_4, zmm22_4, zmm0_4, table);
inline vpternlogq64 (zmm16_5, zmm22_5, zmm0_5, table);
inline vpternlogq64 (zmm16_6, zmm22_6, zmm0_6, table);
inline vpternlogq64 (zmm16_7, zmm22_7, zmm0_7, table);
(* vpternlogq $0xd2,%zmm4,%zmm0,%zmm9              #! PC = 0x55555558de58 *)
mov table 0xd2@uint8;
inline vpternlogq64 (zmm9_0, zmm0_0, zmm4_0, table);
inline vpternlogq64 (zmm9_1, zmm0_1, zmm4_1, table);
inline vpternlogq64 (zmm9_2, zmm0_2, zmm4_2, table);
inline vpternlogq64 (zmm9_3, zmm0_3, zmm4_3, table);
inline vpternlogq64 (zmm9_4, zmm0_4, zmm4_4, table);
inline vpternlogq64 (zmm9_5, zmm0_5, zmm4_5, table);
inline vpternlogq64 (zmm9_6, zmm0_6, zmm4_6, table);
inline vpternlogq64 (zmm9_7, zmm0_7, zmm4_7, table);
(* vpternlogq $0xd2,%zmm19,%zmm8,%zmm2             #! PC = 0x55555558de5f *)
mov table 0xd2@uint8;
inline vpternlogq64 (zmm2_0, zmm8_0, zmm19_0, table);
inline vpternlogq64 (zmm2_1, zmm8_1, zmm19_1, table);
inline vpternlogq64 (zmm2_2, zmm8_2, zmm19_2, table);
inline vpternlogq64 (zmm2_3, zmm8_3, zmm19_3, table);
inline vpternlogq64 (zmm2_4, zmm8_4, zmm19_4, table);
inline vpternlogq64 (zmm2_5, zmm8_5, zmm19_5, table);
inline vpternlogq64 (zmm2_6, zmm8_6, zmm19_6, table);
inline vpternlogq64 (zmm2_7, zmm8_7, zmm19_7, table);
(* vpternlogq $0xd2,%zmm21,%zmm4,%zmm0             #! PC = 0x55555558de66 *)
mov table 0xd2@uint8;
inline vpternlogq64 (zmm0_0, zmm4_0, zmm21_0, table);
inline vpternlogq64 (zmm0_1, zmm4_1, zmm21_1, table);
inline vpternlogq64 (zmm0_2, zmm4_2, zmm21_2, table);
inline vpternlogq64 (zmm0_3, zmm4_3, zmm21_3, table);
inline vpternlogq64 (zmm0_4, zmm4_4, zmm21_4, table);
inline vpternlogq64 (zmm0_5, zmm4_5, zmm21_5, table);
inline vpternlogq64 (zmm0_6, zmm4_6, zmm21_6, table);
inline vpternlogq64 (zmm0_7, zmm4_7, zmm21_7, table);
(* vpternlogq $0xd2,%zmm20,%zmm19,%zmm8            #! PC = 0x55555558de6d *)
mov table 0xd2@uint8;
inline vpternlogq64 (zmm8_0, zmm19_0, zmm20_0, table);
inline vpternlogq64 (zmm8_1, zmm19_1, zmm20_1, table);
inline vpternlogq64 (zmm8_2, zmm19_2, zmm20_2, table);
inline vpternlogq64 (zmm8_3, zmm19_3, zmm20_3, table);
inline vpternlogq64 (zmm8_4, zmm19_4, zmm20_4, table);
inline vpternlogq64 (zmm8_5, zmm19_5, zmm20_5, table);
inline vpternlogq64 (zmm8_6, zmm19_6, zmm20_6, table);
inline vpternlogq64 (zmm8_7, zmm19_7, zmm20_7, table);
(* vpternlogq $0xd2,%zmm28,%zmm21,%zmm4            #! PC = 0x55555558de74 *)
mov table 0xd2@uint8;
inline vpternlogq64 (zmm4_0, zmm21_0, zmm28_0, table);
inline vpternlogq64 (zmm4_1, zmm21_1, zmm28_1, table);
inline vpternlogq64 (zmm4_2, zmm21_2, zmm28_2, table);
inline vpternlogq64 (zmm4_3, zmm21_3, zmm28_3, table);
inline vpternlogq64 (zmm4_4, zmm21_4, zmm28_4, table);
inline vpternlogq64 (zmm4_5, zmm21_5, zmm28_5, table);
inline vpternlogq64 (zmm4_6, zmm21_6, zmm28_6, table);
inline vpternlogq64 (zmm4_7, zmm21_7, zmm28_7, table);
(* vmovdqa64 %zmm10,%zmm20                         #! PC = 0x55555558de7b *)
mov zmm20_0 zmm10_0;
mov zmm20_1 zmm10_1;
mov zmm20_2 zmm10_2;
mov zmm20_3 zmm10_3;
mov zmm20_4 zmm10_4;
mov zmm20_5 zmm10_5;
mov zmm20_6 zmm10_6;
mov zmm20_7 zmm10_7;
(* vpternlogq $0xd2,%zmm22,%zmm28,%zmm21           #! PC = 0x55555558de81 *)
mov table 0xd2@uint8;
inline vpternlogq64 (zmm21_0, zmm28_0, zmm22_0, table);
inline vpternlogq64 (zmm21_1, zmm28_1, zmm22_1, table);
inline vpternlogq64 (zmm21_2, zmm28_2, zmm22_2, table);
inline vpternlogq64 (zmm21_3, zmm28_3, zmm22_3, table);
inline vpternlogq64 (zmm21_4, zmm28_4, zmm22_4, table);
inline vpternlogq64 (zmm21_5, zmm28_5, zmm22_5, table);
inline vpternlogq64 (zmm21_6, zmm28_6, zmm22_6, table);
inline vpternlogq64 (zmm21_7, zmm28_7, zmm22_7, table);
(* vmovdqa64 %zmm14,%zmm28                         #! PC = 0x55555558de88 *)
mov zmm28_0 zmm14_0;
mov zmm28_1 zmm14_1;
mov zmm28_2 zmm14_2;
mov zmm28_3 zmm14_3;
mov zmm28_4 zmm14_4;
mov zmm28_5 zmm14_5;
mov zmm28_6 zmm14_6;
mov zmm28_7 zmm14_7;
(* vmovdqa64 %zmm29,%zmm22                         #! PC = 0x55555558de8e *)
mov zmm22_0 zmm29_0;
mov zmm22_1 zmm29_1;
mov zmm22_2 zmm29_2;
mov zmm22_3 zmm29_3;
mov zmm22_4 zmm29_4;
mov zmm22_5 zmm29_5;
mov zmm22_6 zmm29_6;
mov zmm22_7 zmm29_7;
(* vpternlogq $0xd2,%zmm11,%zmm29,%zmm28           #! PC = 0x55555558de94 *)
mov table 0xd2@uint8;
inline vpternlogq64 (zmm28_0, zmm29_0, zmm11_0, table);
inline vpternlogq64 (zmm28_1, zmm29_1, zmm11_1, table);
inline vpternlogq64 (zmm28_2, zmm29_2, zmm11_2, table);
inline vpternlogq64 (zmm28_3, zmm29_3, zmm11_3, table);
inline vpternlogq64 (zmm28_4, zmm29_4, zmm11_4, table);
inline vpternlogq64 (zmm28_5, zmm29_5, zmm11_5, table);
inline vpternlogq64 (zmm28_6, zmm29_6, zmm11_6, table);
inline vpternlogq64 (zmm28_7, zmm29_7, zmm11_7, table);
(* vpternlogq $0xd2,%zmm6,%zmm11,%zmm22            #! PC = 0x55555558de9b *)
mov table 0xd2@uint8;
inline vpternlogq64 (zmm22_0, zmm11_0, zmm6_0, table);
inline vpternlogq64 (zmm22_1, zmm11_1, zmm6_1, table);
inline vpternlogq64 (zmm22_2, zmm11_2, zmm6_2, table);
inline vpternlogq64 (zmm22_3, zmm11_3, zmm6_3, table);
inline vpternlogq64 (zmm22_4, zmm11_4, zmm6_4, table);
inline vpternlogq64 (zmm22_5, zmm11_5, zmm6_5, table);
inline vpternlogq64 (zmm22_6, zmm11_6, zmm6_6, table);
inline vpternlogq64 (zmm22_7, zmm11_7, zmm6_7, table);
(* vpternlogq $0x96,%zmm5,%zmm0,%zmm20             #! PC = 0x55555558dea2 *)
mov table 0x96@uint8;
inline vpternlogq64 (zmm20_0, zmm0_0, zmm5_0, table);
inline vpternlogq64 (zmm20_1, zmm0_1, zmm5_1, table);
inline vpternlogq64 (zmm20_2, zmm0_2, zmm5_2, table);
inline vpternlogq64 (zmm20_3, zmm0_3, zmm5_3, table);
inline vpternlogq64 (zmm20_4, zmm0_4, zmm5_4, table);
inline vpternlogq64 (zmm20_5, zmm0_5, zmm5_5, table);
inline vpternlogq64 (zmm20_6, zmm0_6, zmm5_6, table);
inline vpternlogq64 (zmm20_7, zmm0_7, zmm5_7, table);
(* vpternlogq $0xd2,%zmm3,%zmm6,%zmm11             #! PC = 0x55555558dea9 *)
mov table 0xd2@uint8;
inline vpternlogq64 (zmm11_0, zmm6_0, zmm3_0, table);
inline vpternlogq64 (zmm11_1, zmm6_1, zmm3_1, table);
inline vpternlogq64 (zmm11_2, zmm6_2, zmm3_2, table);
inline vpternlogq64 (zmm11_3, zmm6_3, zmm3_3, table);
inline vpternlogq64 (zmm11_4, zmm6_4, zmm3_4, table);
inline vpternlogq64 (zmm11_5, zmm6_5, zmm3_5, table);
inline vpternlogq64 (zmm11_6, zmm6_6, zmm3_6, table);
inline vpternlogq64 (zmm11_7, zmm6_7, zmm3_7, table);
(* vpternlogq $0x96,%zmm12,%zmm11,%zmm20           #! PC = 0x55555558deb0 *)
mov table 0x96@uint8;
inline vpternlogq64 (zmm20_0, zmm11_0, zmm12_0, table);
inline vpternlogq64 (zmm20_1, zmm11_1, zmm12_1, table);
inline vpternlogq64 (zmm20_2, zmm11_2, zmm12_2, table);
inline vpternlogq64 (zmm20_3, zmm11_3, zmm12_3, table);
inline vpternlogq64 (zmm20_4, zmm11_4, zmm12_4, table);
inline vpternlogq64 (zmm20_5, zmm11_5, zmm12_5, table);
inline vpternlogq64 (zmm20_6, zmm11_6, zmm12_6, table);
inline vpternlogq64 (zmm20_7, zmm11_7, zmm12_7, table);
(* vprolq $0x1,%zmm20,%zmm15                       #! PC = 0x55555558deb7 *)
rol zmm15_0 zmm20_0 0x1;
rol zmm15_1 zmm20_1 0x1;
rol zmm15_2 zmm20_2 0x1;
rol zmm15_3 zmm20_3 0x1;
rol zmm15_4 zmm20_4 0x1;
rol zmm15_5 zmm20_5 0x1;
rol zmm15_6 zmm20_6 0x1;
rol zmm15_7 zmm20_7 0x1;
(* vmovdqa64 %zmm13,%zmm27                         #! PC = 0x55555558debe *)
mov zmm27_0 zmm13_0;
mov zmm27_1 zmm13_1;
mov zmm27_2 zmm13_2;
mov zmm27_3 zmm13_3;
mov zmm27_4 zmm13_4;
mov zmm27_5 zmm13_5;
mov zmm27_6 zmm13_6;
mov zmm27_7 zmm13_7;
(* vpternlogq $0xd2,%zmm14,%zmm3,%zmm6             #! PC = 0x55555558dec4 *)
mov table 0xd2@uint8;
inline vpternlogq64 (zmm6_0, zmm3_0, zmm14_0, table);
inline vpternlogq64 (zmm6_1, zmm3_1, zmm14_1, table);
inline vpternlogq64 (zmm6_2, zmm3_2, zmm14_2, table);
inline vpternlogq64 (zmm6_3, zmm3_3, zmm14_3, table);
inline vpternlogq64 (zmm6_4, zmm3_4, zmm14_4, table);
inline vpternlogq64 (zmm6_5, zmm3_5, zmm14_5, table);
inline vpternlogq64 (zmm6_6, zmm3_6, zmm14_6, table);
inline vpternlogq64 (zmm6_7, zmm3_7, zmm14_7, table);
(* vpternlogq $0x96,%zmm4,%zmm2,%zmm27             #! PC = 0x55555558decb *)
mov table 0x96@uint8;
inline vpternlogq64 (zmm27_0, zmm2_0, zmm4_0, table);
inline vpternlogq64 (zmm27_1, zmm2_1, zmm4_1, table);
inline vpternlogq64 (zmm27_2, zmm2_2, zmm4_2, table);
inline vpternlogq64 (zmm27_3, zmm2_3, zmm4_3, table);
inline vpternlogq64 (zmm27_4, zmm2_4, zmm4_4, table);
inline vpternlogq64 (zmm27_5, zmm2_5, zmm4_5, table);
inline vpternlogq64 (zmm27_6, zmm2_6, zmm4_6, table);
inline vpternlogq64 (zmm27_7, zmm2_7, zmm4_7, table);
(* vpternlogq $0x96,%zmm6,%zmm7,%zmm27             #! PC = 0x55555558ded2 *)
mov table 0x96@uint8;
inline vpternlogq64 (zmm27_0, zmm7_0, zmm6_0, table);
inline vpternlogq64 (zmm27_1, zmm7_1, zmm6_1, table);
inline vpternlogq64 (zmm27_2, zmm7_2, zmm6_2, table);
inline vpternlogq64 (zmm27_3, zmm7_3, zmm6_3, table);
inline vpternlogq64 (zmm27_4, zmm7_4, zmm6_4, table);
inline vpternlogq64 (zmm27_5, zmm7_5, zmm6_5, table);
inline vpternlogq64 (zmm27_6, zmm7_6, zmm6_6, table);
inline vpternlogq64 (zmm27_7, zmm7_7, zmm6_7, table);
(* vpternlogq $0xd2,%zmm29,%zmm14,%zmm3            #! PC = 0x55555558ded9 *)
mov table 0xd2@uint8;
inline vpternlogq64 (zmm3_0, zmm14_0, zmm29_0, table);
inline vpternlogq64 (zmm3_1, zmm14_1, zmm29_1, table);
inline vpternlogq64 (zmm3_2, zmm14_2, zmm29_2, table);
inline vpternlogq64 (zmm3_3, zmm14_3, zmm29_3, table);
inline vpternlogq64 (zmm3_4, zmm14_4, zmm29_4, table);
inline vpternlogq64 (zmm3_5, zmm14_5, zmm29_5, table);
inline vpternlogq64 (zmm3_6, zmm14_6, zmm29_6, table);
inline vpternlogq64 (zmm3_7, zmm14_7, zmm29_7, table);
(* vmovdqa64 %zmm15,0x148(%rsp)                    #! EA = L0x7fffffffd600; PC = 0x55555558dee0 *)
mov L0x7fffffffd600 zmm15_0;
mov L0x7fffffffd608 zmm15_1;
mov L0x7fffffffd610 zmm15_2;
mov L0x7fffffffd618 zmm15_3;
mov L0x7fffffffd620 zmm15_4;
mov L0x7fffffffd628 zmm15_5;
mov L0x7fffffffd630 zmm15_6;
mov L0x7fffffffd638 zmm15_7;
(* vprolq $0x1,%zmm27,%zmm15                       #! PC = 0x55555558deeb *)
rol zmm15_0 zmm27_0 0x1;
rol zmm15_1 zmm27_1 0x1;
rol zmm15_2 zmm27_2 0x1;
rol zmm15_3 zmm27_3 0x1;
rol zmm15_4 zmm27_4 0x1;
rol zmm15_5 zmm27_5 0x1;
rol zmm15_6 zmm27_6 0x1;
rol zmm15_7 zmm27_7 0x1;
(* vmovdqa64 %zmm3,%zmm29                          #! PC = 0x55555558def2 *)
mov zmm29_0 zmm3_0;
mov zmm29_1 zmm3_1;
mov zmm29_2 zmm3_2;
mov zmm29_3 zmm3_3;
mov zmm29_4 zmm3_4;
mov zmm29_5 zmm3_5;
mov zmm29_6 zmm3_6;
mov zmm29_7 zmm3_7;
(* vpternlogq $0x96,%zmm8,%zmm18,%zmm29            #! PC = 0x55555558def8 *)
mov table 0x96@uint8;
inline vpternlogq64 (zmm29_0, zmm18_0, zmm8_0, table);
inline vpternlogq64 (zmm29_1, zmm18_1, zmm8_1, table);
inline vpternlogq64 (zmm29_2, zmm18_2, zmm8_2, table);
inline vpternlogq64 (zmm29_3, zmm18_3, zmm8_3, table);
inline vpternlogq64 (zmm29_4, zmm18_4, zmm8_4, table);
inline vpternlogq64 (zmm29_5, zmm18_5, zmm8_5, table);
inline vpternlogq64 (zmm29_6, zmm18_6, zmm8_6, table);
inline vpternlogq64 (zmm29_7, zmm18_7, zmm8_7, table);
(* vpternlogq $0x96,%zmm17,%zmm21,%zmm29           #! PC = 0x55555558deff *)
mov table 0x96@uint8;
inline vpternlogq64 (zmm29_0, zmm21_0, zmm17_0, table);
inline vpternlogq64 (zmm29_1, zmm21_1, zmm17_1, table);
inline vpternlogq64 (zmm29_2, zmm21_2, zmm17_2, table);
inline vpternlogq64 (zmm29_3, zmm21_3, zmm17_3, table);
inline vpternlogq64 (zmm29_4, zmm21_4, zmm17_4, table);
inline vpternlogq64 (zmm29_5, zmm21_5, zmm17_5, table);
inline vpternlogq64 (zmm29_6, zmm21_6, zmm17_6, table);
inline vpternlogq64 (zmm29_7, zmm21_7, zmm17_7, table);
(* vmovdqa64 %zmm24,%zmm14                         #! PC = 0x55555558df06 *)
mov zmm14_0 zmm24_0;
mov zmm14_1 zmm24_1;
mov zmm14_2 zmm24_2;
mov zmm14_3 zmm24_3;
mov zmm14_4 zmm24_4;
mov zmm14_5 zmm24_5;
mov zmm14_6 zmm24_6;
mov zmm14_7 zmm24_7;
(* vpternlogq $0x96,%zmm26,%zmm28,%zmm14           #! PC = 0x55555558df0c *)
mov table 0x96@uint8;
inline vpternlogq64 (zmm14_0, zmm28_0, zmm26_0, table);
inline vpternlogq64 (zmm14_1, zmm28_1, zmm26_1, table);
inline vpternlogq64 (zmm14_2, zmm28_2, zmm26_2, table);
inline vpternlogq64 (zmm14_3, zmm28_3, zmm26_3, table);
inline vpternlogq64 (zmm14_4, zmm28_4, zmm26_4, table);
inline vpternlogq64 (zmm14_5, zmm28_5, zmm26_5, table);
inline vpternlogq64 (zmm14_6, zmm28_6, zmm26_6, table);
inline vpternlogq64 (zmm14_7, zmm28_7, zmm26_7, table);
(* vmovdqa64 %zmm15,0x108(%rsp)                    #! EA = L0x7fffffffd5c0; PC = 0x55555558df13 *)
mov L0x7fffffffd5c0 zmm15_0;
mov L0x7fffffffd5c8 zmm15_1;
mov L0x7fffffffd5d0 zmm15_2;
mov L0x7fffffffd5d8 zmm15_3;
mov L0x7fffffffd5e0 zmm15_4;
mov L0x7fffffffd5e8 zmm15_5;
mov L0x7fffffffd5f0 zmm15_6;
mov L0x7fffffffd5f8 zmm15_7;
(* vprolq $0x1,%zmm29,%zmm15                       #! PC = 0x55555558df1e *)
rol zmm15_0 zmm29_0 0x1;
rol zmm15_1 zmm29_1 0x1;
rol zmm15_2 zmm29_2 0x1;
rol zmm15_3 zmm29_3 0x1;
rol zmm15_4 zmm29_4 0x1;
rol zmm15_5 zmm29_5 0x1;
rol zmm15_6 zmm29_6 0x1;
rol zmm15_7 zmm29_7 0x1;
(* vpternlogq $0x96,%zmm16,%zmm25,%zmm14           #! PC = 0x55555558df25 *)
mov table 0x96@uint8;
inline vpternlogq64 (zmm14_0, zmm25_0, zmm16_0, table);
inline vpternlogq64 (zmm14_1, zmm25_1, zmm16_1, table);
inline vpternlogq64 (zmm14_2, zmm25_2, zmm16_2, table);
inline vpternlogq64 (zmm14_3, zmm25_3, zmm16_3, table);
inline vpternlogq64 (zmm14_4, zmm25_4, zmm16_4, table);
inline vpternlogq64 (zmm14_5, zmm25_5, zmm16_5, table);
inline vpternlogq64 (zmm14_6, zmm25_6, zmm16_6, table);
inline vpternlogq64 (zmm14_7, zmm25_7, zmm16_7, table);
(* vmovdqa64 %zmm9,%zmm19                          #! PC = 0x55555558df2c *)
mov zmm19_0 zmm9_0;
mov zmm19_1 zmm9_1;
mov zmm19_2 zmm9_2;
mov zmm19_3 zmm9_3;
mov zmm19_4 zmm9_4;
mov zmm19_5 zmm9_5;
mov zmm19_6 zmm9_6;
mov zmm19_7 zmm9_7;
(* vpternlogq $0x96,%zmm22,%zmm23,%zmm19           #! PC = 0x55555558df32 *)
mov table 0x96@uint8;
inline vpternlogq64 (zmm19_0, zmm23_0, zmm22_0, table);
inline vpternlogq64 (zmm19_1, zmm23_1, zmm22_1, table);
inline vpternlogq64 (zmm19_2, zmm23_2, zmm22_2, table);
inline vpternlogq64 (zmm19_3, zmm23_3, zmm22_3, table);
inline vpternlogq64 (zmm19_4, zmm23_4, zmm22_4, table);
inline vpternlogq64 (zmm19_5, zmm23_5, zmm22_5, table);
inline vpternlogq64 (zmm19_6, zmm23_6, zmm22_6, table);
inline vpternlogq64 (zmm19_7, zmm23_7, zmm22_7, table);
(* vpternlogq $0x96,%zmm31,%zmm30,%zmm19           #! PC = 0x55555558df39 *)
mov table 0x96@uint8;
inline vpternlogq64 (zmm19_0, zmm30_0, zmm31_0, table);
inline vpternlogq64 (zmm19_1, zmm30_1, zmm31_1, table);
inline vpternlogq64 (zmm19_2, zmm30_2, zmm31_2, table);
inline vpternlogq64 (zmm19_3, zmm30_3, zmm31_3, table);
inline vpternlogq64 (zmm19_4, zmm30_4, zmm31_4, table);
inline vpternlogq64 (zmm19_5, zmm30_5, zmm31_5, table);
inline vpternlogq64 (zmm19_6, zmm30_6, zmm31_6, table);
inline vpternlogq64 (zmm19_7, zmm30_7, zmm31_7, table);
(* vprolq $0x1,%zmm19,%zmm1                        #! PC = 0x55555558df40 *)
rol zmm1_0 zmm19_0 0x1;
rol zmm1_1 zmm19_1 0x1;
rol zmm1_2 zmm19_2 0x1;
rol zmm1_3 zmm19_3 0x1;
rol zmm1_4 zmm19_4 0x1;
rol zmm1_5 zmm19_5 0x1;
rol zmm1_6 zmm19_6 0x1;
rol zmm1_7 zmm19_7 0x1;
(* vmovdqa64 %zmm15,0xc8(%rsp)                     #! EA = L0x7fffffffd580; PC = 0x55555558df47 *)
mov L0x7fffffffd580 zmm15_0;
mov L0x7fffffffd588 zmm15_1;
mov L0x7fffffffd590 zmm15_2;
mov L0x7fffffffd598 zmm15_3;
mov L0x7fffffffd5a0 zmm15_4;
mov L0x7fffffffd5a8 zmm15_5;
mov L0x7fffffffd5b0 zmm15_6;
mov L0x7fffffffd5b8 zmm15_7;
(* vprolq $0x1,%zmm14,%zmm15                       #! PC = 0x55555558df52 *)
rol zmm15_0 zmm14_0 0x1;
rol zmm15_1 zmm14_1 0x1;
rol zmm15_2 zmm14_2 0x1;
rol zmm15_3 zmm14_3 0x1;
rol zmm15_4 zmm14_4 0x1;
rol zmm15_5 zmm14_5 0x1;
rol zmm15_6 zmm14_6 0x1;
rol zmm15_7 zmm14_7 0x1;
(* vpxord 0x148(%rsp),%zmm14,%zmm14                #! EA = L0x7fffffffd600; Value = 0xce4a9483975445d9; PC = 0x55555558df59 *)
xor zmm14_0@uint64 zmm14_0 L0x7fffffffd600;
xor zmm14_1@uint64 zmm14_1 L0x7fffffffd608;
xor zmm14_2@uint64 zmm14_2 L0x7fffffffd610;
xor zmm14_3@uint64 zmm14_3 L0x7fffffffd618;
xor zmm14_4@uint64 zmm14_4 L0x7fffffffd620;
xor zmm14_5@uint64 zmm14_5 L0x7fffffffd628;
xor zmm14_6@uint64 zmm14_6 L0x7fffffffd630;
xor zmm14_7@uint64 zmm14_7 L0x7fffffffd638;
(* vpxord 0x108(%rsp),%zmm19,%zmm19                #! EA = L0x7fffffffd5c0; Value = 0xb7e9abf5dbf8cdc8; PC = 0x55555558df64 *)
xor zmm19_0@uint64 zmm19_0 L0x7fffffffd5c0;
xor zmm19_1@uint64 zmm19_1 L0x7fffffffd5c8;
xor zmm19_2@uint64 zmm19_2 L0x7fffffffd5d0;
xor zmm19_3@uint64 zmm19_3 L0x7fffffffd5d8;
xor zmm19_4@uint64 zmm19_4 L0x7fffffffd5e0;
xor zmm19_5@uint64 zmm19_5 L0x7fffffffd5e8;
xor zmm19_6@uint64 zmm19_6 L0x7fffffffd5f0;
xor zmm19_7@uint64 zmm19_7 L0x7fffffffd5f8;
(* vpxord 0xc8(%rsp),%zmm20,%zmm20                 #! EA = L0x7fffffffd580; Value = 0x1eb49e6711060f6c; PC = 0x55555558df6f *)
xor zmm20_0@uint64 zmm20_0 L0x7fffffffd580;
xor zmm20_1@uint64 zmm20_1 L0x7fffffffd588;
xor zmm20_2@uint64 zmm20_2 L0x7fffffffd590;
xor zmm20_3@uint64 zmm20_3 L0x7fffffffd598;
xor zmm20_4@uint64 zmm20_4 L0x7fffffffd5a0;
xor zmm20_5@uint64 zmm20_5 L0x7fffffffd5a8;
xor zmm20_6@uint64 zmm20_6 L0x7fffffffd5b0;
xor zmm20_7@uint64 zmm20_7 L0x7fffffffd5b8;
(* vpxord %zmm30,%zmm14,%zmm30                     #! PC = 0x55555558df7a *)
xor zmm30_0@uint64 zmm14_0 zmm30_0;
xor zmm30_1@uint64 zmm14_1 zmm30_1;
xor zmm30_2@uint64 zmm14_2 zmm30_2;
xor zmm30_3@uint64 zmm14_3 zmm30_3;
xor zmm30_4@uint64 zmm14_4 zmm30_4;
xor zmm30_5@uint64 zmm14_5 zmm30_5;
xor zmm30_6@uint64 zmm14_6 zmm30_6;
xor zmm30_7@uint64 zmm14_7 zmm30_7;
(* vprorq $0x14,%zmm30,%zmm30                      #! PC = 0x55555558df80 *)
ror zmm30_0 zmm30_0 0x14;
ror zmm30_1 zmm30_1 0x14;
ror zmm30_2 zmm30_2 0x14;
ror zmm30_3 zmm30_3 0x14;
ror zmm30_4 zmm30_4 0x14;
ror zmm30_5 zmm30_5 0x14;
ror zmm30_6 zmm30_6 0x14;
ror zmm30_7 zmm30_7 0x14;
(* vpxord %zmm27,%zmm15,%zmm15                     #! PC = 0x55555558df87 *)
xor zmm15_0@uint64 zmm15_0 zmm27_0;
xor zmm15_1@uint64 zmm15_1 zmm27_1;
xor zmm15_2@uint64 zmm15_2 zmm27_2;
xor zmm15_3@uint64 zmm15_3 zmm27_3;
xor zmm15_4@uint64 zmm15_4 zmm27_4;
xor zmm15_5@uint64 zmm15_5 zmm27_5;
xor zmm15_6@uint64 zmm15_6 zmm27_6;
xor zmm15_7@uint64 zmm15_7 zmm27_7;
(* vpxord %zmm0,%zmm19,%zmm0                       #! PC = 0x55555558df8d *)
xor zmm0_0@uint64 zmm19_0 zmm0_0;
xor zmm0_1@uint64 zmm19_1 zmm0_1;
xor zmm0_2@uint64 zmm19_2 zmm0_2;
xor zmm0_3@uint64 zmm19_3 zmm0_3;
xor zmm0_4@uint64 zmm19_4 zmm0_4;
xor zmm0_5@uint64 zmm19_5 zmm0_5;
xor zmm0_6@uint64 zmm19_6 zmm0_6;
xor zmm0_7@uint64 zmm19_7 zmm0_7;
(* vpxord %zmm6,%zmm20,%zmm6                       #! PC = 0x55555558df93 *)
xor zmm6_0@uint64 zmm20_0 zmm6_0;
xor zmm6_1@uint64 zmm20_1 zmm6_1;
xor zmm6_2@uint64 zmm20_2 zmm6_2;
xor zmm6_3@uint64 zmm20_3 zmm6_3;
xor zmm6_4@uint64 zmm20_4 zmm6_4;
xor zmm6_5@uint64 zmm20_5 zmm6_5;
xor zmm6_6@uint64 zmm20_6 zmm6_6;
xor zmm6_7@uint64 zmm20_7 zmm6_7;
(* vpxord %zmm8,%zmm15,%zmm8                       #! PC = 0x55555558df99 *)
xor zmm8_0@uint64 zmm15_0 zmm8_0;
xor zmm8_1@uint64 zmm15_1 zmm8_1;
xor zmm8_2@uint64 zmm15_2 zmm8_2;
xor zmm8_3@uint64 zmm15_3 zmm8_3;
xor zmm8_4@uint64 zmm15_4 zmm8_4;
xor zmm8_5@uint64 zmm15_5 zmm8_5;
xor zmm8_6@uint64 zmm15_6 zmm8_6;
xor zmm8_7@uint64 zmm15_7 zmm8_7;
(* vpxord %zmm29,%zmm1,%zmm1                       #! PC = 0x55555558df9f *)
xor zmm1_0@uint64 zmm1_0 zmm29_0;
xor zmm1_1@uint64 zmm1_1 zmm29_1;
xor zmm1_2@uint64 zmm1_2 zmm29_2;
xor zmm1_3@uint64 zmm1_3 zmm29_3;
xor zmm1_4@uint64 zmm1_4 zmm29_4;
xor zmm1_5@uint64 zmm1_5 zmm29_5;
xor zmm1_6@uint64 zmm1_6 zmm29_6;
xor zmm1_7@uint64 zmm1_7 zmm29_7;
(* vprorq $0x15,%zmm0,%zmm0                        #! PC = 0x55555558dfa5 *)
ror zmm0_0 zmm0_0 0x15;
ror zmm0_1 zmm0_1 0x15;
ror zmm0_2 zmm0_2 0x15;
ror zmm0_3 zmm0_3 0x15;
ror zmm0_4 zmm0_4 0x15;
ror zmm0_5 zmm0_5 0x15;
ror zmm0_6 zmm0_6 0x15;
ror zmm0_7 zmm0_7 0x15;
(* vprolq $0x15,%zmm6,%zmm6                        #! PC = 0x55555558dfac *)
rol zmm6_0 zmm6_0 0x15;
rol zmm6_1 zmm6_1 0x15;
rol zmm6_2 zmm6_2 0x15;
rol zmm6_3 zmm6_3 0x15;
rol zmm6_4 zmm6_4 0x15;
rol zmm6_5 zmm6_5 0x15;
rol zmm6_6 zmm6_6 0x15;
rol zmm6_7 zmm6_7 0x15;
(* vprolq $0xe,%zmm8,%zmm8                         #! PC = 0x55555558dfb3 *)
rol zmm8_0 zmm8_0 0xe;
rol zmm8_1 zmm8_1 0xe;
rol zmm8_2 zmm8_2 0xe;
rol zmm8_3 zmm8_3 0xe;
rol zmm8_4 zmm8_4 0xe;
rol zmm8_5 zmm8_5 0xe;
rol zmm8_6 zmm8_6 0xe;
rol zmm8_7 zmm8_7 0xe;
(* vpxord %zmm7,%zmm20,%zmm7                       #! PC = 0x55555558dfba *)
xor zmm7_0@uint64 zmm20_0 zmm7_0;
xor zmm7_1@uint64 zmm20_1 zmm7_1;
xor zmm7_2@uint64 zmm20_2 zmm7_2;
xor zmm7_3@uint64 zmm20_3 zmm7_3;
xor zmm7_4@uint64 zmm20_4 zmm7_4;
xor zmm7_5@uint64 zmm20_5 zmm7_5;
xor zmm7_6@uint64 zmm20_6 zmm7_6;
xor zmm7_7@uint64 zmm20_7 zmm7_7;
(* vpxord %zmm18,%zmm15,%zmm18                     #! PC = 0x55555558dfc0 *)
xor zmm18_0@uint64 zmm15_0 zmm18_0;
xor zmm18_1@uint64 zmm15_1 zmm18_1;
xor zmm18_2@uint64 zmm15_2 zmm18_2;
xor zmm18_3@uint64 zmm15_3 zmm18_3;
xor zmm18_4@uint64 zmm15_4 zmm18_4;
xor zmm18_5@uint64 zmm15_5 zmm18_5;
xor zmm18_6@uint64 zmm15_6 zmm18_6;
xor zmm18_7@uint64 zmm15_7 zmm18_7;
(* vprolq $0x1c,%zmm7,%zmm7                        #! PC = 0x55555558dfc6 *)
rol zmm7_0 zmm7_0 0x1c;
rol zmm7_1 zmm7_1 0x1c;
rol zmm7_2 zmm7_2 0x1c;
rol zmm7_3 zmm7_3 0x1c;
rol zmm7_4 zmm7_4 0x1c;
rol zmm7_5 zmm7_5 0x1c;
rol zmm7_6 zmm7_6 0x1c;
rol zmm7_7 zmm7_7 0x1c;
(* vprolq $0x14,%zmm18,%zmm18                      #! PC = 0x55555558dfcd *)
rol zmm18_0 zmm18_0 0x14;
rol zmm18_1 zmm18_1 0x14;
rol zmm18_2 zmm18_2 0x14;
rol zmm18_3 zmm18_3 0x14;
rol zmm18_4 zmm18_4 0x14;
rol zmm18_5 zmm18_5 0x14;
rol zmm18_6 zmm18_6 0x14;
rol zmm18_7 zmm18_7 0x14;
(* vpxord %zmm16,%zmm1,%zmm16                      #! PC = 0x55555558dfd4 *)
xor zmm16_0@uint64 zmm1_0 zmm16_0;
xor zmm16_1@uint64 zmm1_1 zmm16_1;
xor zmm16_2@uint64 zmm1_2 zmm16_2;
xor zmm16_3@uint64 zmm1_3 zmm16_3;
xor zmm16_4@uint64 zmm1_4 zmm16_4;
xor zmm16_5@uint64 zmm1_5 zmm16_5;
xor zmm16_6@uint64 zmm1_6 zmm16_6;
xor zmm16_7@uint64 zmm1_7 zmm16_7;
(* vpxord %zmm22,%zmm14,%zmm22                     #! PC = 0x55555558dfda *)
xor zmm22_0@uint64 zmm14_0 zmm22_0;
xor zmm22_1@uint64 zmm14_1 zmm22_1;
xor zmm22_2@uint64 zmm14_2 zmm22_2;
xor zmm22_3@uint64 zmm14_3 zmm22_3;
xor zmm22_4@uint64 zmm14_4 zmm22_4;
xor zmm22_5@uint64 zmm14_5 zmm22_5;
xor zmm22_6@uint64 zmm14_6 zmm22_6;
xor zmm22_7@uint64 zmm14_7 zmm22_7;
(* vpxord %zmm10,%zmm19,%zmm10                     #! PC = 0x55555558dfe0 *)
xor zmm10_0@uint64 zmm19_0 zmm10_0;
xor zmm10_1@uint64 zmm19_1 zmm10_1;
xor zmm10_2@uint64 zmm19_2 zmm10_2;
xor zmm10_3@uint64 zmm19_3 zmm10_3;
xor zmm10_4@uint64 zmm19_4 zmm10_4;
xor zmm10_5@uint64 zmm19_5 zmm10_5;
xor zmm10_6@uint64 zmm19_6 zmm10_6;
xor zmm10_7@uint64 zmm19_7 zmm10_7;
(* vpxord %zmm23,%zmm14,%zmm23                     #! PC = 0x55555558dfe6 *)
xor zmm23_0@uint64 zmm14_0 zmm23_0;
xor zmm23_1@uint64 zmm14_1 zmm23_1;
xor zmm23_2@uint64 zmm14_2 zmm23_2;
xor zmm23_3@uint64 zmm14_3 zmm23_3;
xor zmm23_4@uint64 zmm14_4 zmm23_4;
xor zmm23_5@uint64 zmm14_5 zmm23_5;
xor zmm23_6@uint64 zmm14_6 zmm23_6;
xor zmm23_7@uint64 zmm14_7 zmm23_7;
(* vpxord %zmm12,%zmm19,%zmm12                     #! PC = 0x55555558dfec *)
xor zmm12_0@uint64 zmm19_0 zmm12_0;
xor zmm12_1@uint64 zmm19_1 zmm12_1;
xor zmm12_2@uint64 zmm19_2 zmm12_2;
xor zmm12_3@uint64 zmm19_3 zmm12_3;
xor zmm12_4@uint64 zmm19_4 zmm12_4;
xor zmm12_5@uint64 zmm19_5 zmm12_5;
xor zmm12_6@uint64 zmm19_6 zmm12_6;
xor zmm12_7@uint64 zmm19_7 zmm12_7;
(* vpxord %zmm4,%zmm20,%zmm4                       #! PC = 0x55555558dff2 *)
xor zmm4_0@uint64 zmm20_0 zmm4_0;
xor zmm4_1@uint64 zmm20_1 zmm4_1;
xor zmm4_2@uint64 zmm20_2 zmm4_2;
xor zmm4_3@uint64 zmm20_3 zmm4_3;
xor zmm4_4@uint64 zmm20_4 zmm4_4;
xor zmm4_5@uint64 zmm20_5 zmm4_5;
xor zmm4_6@uint64 zmm20_6 zmm4_6;
xor zmm4_7@uint64 zmm20_7 zmm4_7;
(* vpxord %zmm11,%zmm19,%zmm11                     #! PC = 0x55555558dff8 *)
xor zmm11_0@uint64 zmm19_0 zmm11_0;
xor zmm11_1@uint64 zmm19_1 zmm11_1;
xor zmm11_2@uint64 zmm19_2 zmm11_2;
xor zmm11_3@uint64 zmm19_3 zmm11_3;
xor zmm11_4@uint64 zmm19_4 zmm11_4;
xor zmm11_5@uint64 zmm19_5 zmm11_5;
xor zmm11_6@uint64 zmm19_6 zmm11_6;
xor zmm11_7@uint64 zmm19_7 zmm11_7;
(* vpxord %zmm2,%zmm20,%zmm2                       #! PC = 0x55555558dffe *)
xor zmm2_0@uint64 zmm20_0 zmm2_0;
xor zmm2_1@uint64 zmm20_1 zmm2_1;
xor zmm2_2@uint64 zmm20_2 zmm2_2;
xor zmm2_3@uint64 zmm20_3 zmm2_3;
xor zmm2_4@uint64 zmm20_4 zmm2_4;
xor zmm2_5@uint64 zmm20_5 zmm2_5;
xor zmm2_6@uint64 zmm20_6 zmm2_6;
xor zmm2_7@uint64 zmm20_7 zmm2_7;
(* vpxord %zmm5,%zmm19,%zmm19                      #! PC = 0x55555558e004 *)
xor zmm19_0@uint64 zmm19_0 zmm5_0;
xor zmm19_1@uint64 zmm19_1 zmm5_1;
xor zmm19_2@uint64 zmm19_2 zmm5_2;
xor zmm19_3@uint64 zmm19_3 zmm5_3;
xor zmm19_4@uint64 zmm19_4 zmm5_4;
xor zmm19_5@uint64 zmm19_5 zmm5_5;
xor zmm19_6@uint64 zmm19_6 zmm5_6;
xor zmm19_7@uint64 zmm19_7 zmm5_7;
(* vpxord %zmm13,%zmm20,%zmm20                     #! PC = 0x55555558e00a *)
xor zmm20_0@uint64 zmm20_0 zmm13_0;
xor zmm20_1@uint64 zmm20_1 zmm13_1;
xor zmm20_2@uint64 zmm20_2 zmm13_2;
xor zmm20_3@uint64 zmm20_3 zmm13_3;
xor zmm20_4@uint64 zmm20_4 zmm13_4;
xor zmm20_5@uint64 zmm20_5 zmm13_5;
xor zmm20_6@uint64 zmm20_6 zmm13_6;
xor zmm20_7@uint64 zmm20_7 zmm13_7;
(* vpxord %zmm24,%zmm1,%zmm24                      #! PC = 0x55555558e010 *)
xor zmm24_0@uint64 zmm1_0 zmm24_0;
xor zmm24_1@uint64 zmm1_1 zmm24_1;
xor zmm24_2@uint64 zmm1_2 zmm24_2;
xor zmm24_3@uint64 zmm1_3 zmm24_3;
xor zmm24_4@uint64 zmm1_4 zmm24_4;
xor zmm24_5@uint64 zmm1_5 zmm24_5;
xor zmm24_6@uint64 zmm1_6 zmm24_6;
xor zmm24_7@uint64 zmm1_7 zmm24_7;
(* vprolq $0x1,%zmm23,%zmm23                       #! PC = 0x55555558e016 *)
rol zmm23_0 zmm23_0 0x1;
rol zmm23_1 zmm23_1 0x1;
rol zmm23_2 zmm23_2 0x1;
rol zmm23_3 zmm23_3 0x1;
rol zmm23_4 zmm23_4 0x1;
rol zmm23_5 zmm23_5 0x1;
rol zmm23_6 zmm23_6 0x1;
rol zmm23_7 zmm23_7 0x1;
(* vprolq $0x6,%zmm12,%zmm12                       #! PC = 0x55555558e01d *)
rol zmm12_0 zmm12_0 0x6;
rol zmm12_1 zmm12_1 0x6;
rol zmm12_2 zmm12_2 0x6;
rol zmm12_3 zmm12_3 0x6;
rol zmm12_4 zmm12_4 0x6;
rol zmm12_5 zmm12_5 0x6;
rol zmm12_6 zmm12_6 0x6;
rol zmm12_7 zmm12_7 0x6;
(* vprorq $0x2,%zmm19,%zmm19                       #! PC = 0x55555558e024 *)
ror zmm19_0 zmm19_0 0x2;
ror zmm19_1 zmm19_1 0x2;
ror zmm19_2 zmm19_2 0x2;
ror zmm19_3 zmm19_3 0x2;
ror zmm19_4 zmm19_4 0x2;
ror zmm19_5 zmm19_5 0x2;
ror zmm19_6 zmm19_6 0x2;
ror zmm19_7 zmm19_7 0x2;
(* vprorq $0x9,%zmm20,%zmm20                       #! PC = 0x55555558e02b *)
ror zmm20_0 zmm20_0 0x9;
ror zmm20_1 zmm20_1 0x9;
ror zmm20_2 zmm20_2 0x9;
ror zmm20_3 zmm20_3 0x9;
ror zmm20_4 zmm20_4 0x9;
ror zmm20_5 zmm20_5 0x9;
ror zmm20_6 zmm20_6 0x9;
ror zmm20_7 zmm20_7 0x9;
(* vprolq $0x3,%zmm16,%zmm16                       #! PC = 0x55555558e032 *)
rol zmm16_0 zmm16_0 0x3;
rol zmm16_1 zmm16_1 0x3;
rol zmm16_2 zmm16_2 0x3;
rol zmm16_3 zmm16_3 0x3;
rol zmm16_4 zmm16_4 0x3;
rol zmm16_5 zmm16_5 0x3;
rol zmm16_6 zmm16_6 0x3;
rol zmm16_7 zmm16_7 0x3;
(* vprorq $0x13,%zmm22,%zmm22                      #! PC = 0x55555558e039 *)
ror zmm22_0 zmm22_0 0x13;
ror zmm22_1 zmm22_1 0x13;
ror zmm22_2 zmm22_2 0x13;
ror zmm22_3 zmm22_3 0x13;
ror zmm22_4 zmm22_4 0x13;
ror zmm22_5 zmm22_5 0x13;
ror zmm22_6 zmm22_6 0x13;
ror zmm22_7 zmm22_7 0x13;
(* vprorq $0x3,%zmm10,%zmm10                       #! PC = 0x55555558e040 *)
ror zmm10_0 zmm10_0 0x3;
ror zmm10_1 zmm10_1 0x3;
ror zmm10_2 zmm10_2 0x3;
ror zmm10_3 zmm10_3 0x3;
ror zmm10_4 zmm10_4 0x3;
ror zmm10_5 zmm10_5 0x3;
ror zmm10_6 zmm10_6 0x3;
ror zmm10_7 zmm10_7 0x3;
(* vpxord %zmm25,%zmm1,%zmm25                      #! PC = 0x55555558e047 *)
xor zmm25_0@uint64 zmm1_0 zmm25_0;
xor zmm25_1@uint64 zmm1_1 zmm25_1;
xor zmm25_2@uint64 zmm1_2 zmm25_2;
xor zmm25_3@uint64 zmm1_3 zmm25_3;
xor zmm25_4@uint64 zmm1_4 zmm25_4;
xor zmm25_5@uint64 zmm1_5 zmm25_5;
xor zmm25_6@uint64 zmm1_6 zmm25_6;
xor zmm25_7@uint64 zmm1_7 zmm25_7;
(* vpxord %zmm3,%zmm15,%zmm3                       #! PC = 0x55555558e04d *)
xor zmm3_0@uint64 zmm15_0 zmm3_0;
xor zmm3_1@uint64 zmm15_1 zmm3_1;
xor zmm3_2@uint64 zmm15_2 zmm3_2;
xor zmm3_3@uint64 zmm15_3 zmm3_3;
xor zmm3_4@uint64 zmm15_4 zmm3_4;
xor zmm3_5@uint64 zmm15_5 zmm3_5;
xor zmm3_6@uint64 zmm15_6 zmm3_6;
xor zmm3_7@uint64 zmm15_7 zmm3_7;
(* vpxord %zmm26,%zmm1,%zmm26                      #! PC = 0x55555558e053 *)
xor zmm26_0@uint64 zmm1_0 zmm26_0;
xor zmm26_1@uint64 zmm1_1 zmm26_1;
xor zmm26_2@uint64 zmm1_2 zmm26_2;
xor zmm26_3@uint64 zmm1_3 zmm26_3;
xor zmm26_4@uint64 zmm1_4 zmm26_4;
xor zmm26_5@uint64 zmm1_5 zmm26_5;
xor zmm26_6@uint64 zmm1_6 zmm26_6;
xor zmm26_7@uint64 zmm1_7 zmm26_7;
(* vpxord %zmm9,%zmm14,%zmm9                       #! PC = 0x55555558e059 *)
xor zmm9_0@uint64 zmm14_0 zmm9_0;
xor zmm9_1@uint64 zmm14_1 zmm9_1;
xor zmm9_2@uint64 zmm14_2 zmm9_2;
xor zmm9_3@uint64 zmm14_3 zmm9_3;
xor zmm9_4@uint64 zmm14_4 zmm9_4;
xor zmm9_5@uint64 zmm14_5 zmm9_5;
xor zmm9_6@uint64 zmm14_6 zmm9_6;
xor zmm9_7@uint64 zmm14_7 zmm9_7;
(* vpxord %zmm17,%zmm15,%zmm17                     #! PC = 0x55555558e05f *)
xor zmm17_0@uint64 zmm15_0 zmm17_0;
xor zmm17_1@uint64 zmm15_1 zmm17_1;
xor zmm17_2@uint64 zmm15_2 zmm17_2;
xor zmm17_3@uint64 zmm15_3 zmm17_3;
xor zmm17_4@uint64 zmm15_4 zmm17_4;
xor zmm17_5@uint64 zmm15_5 zmm17_5;
xor zmm17_6@uint64 zmm15_6 zmm17_6;
xor zmm17_7@uint64 zmm15_7 zmm17_7;
(* vpxord %zmm28,%zmm1,%zmm1                       #! PC = 0x55555558e065 *)
xor zmm1_0@uint64 zmm1_0 zmm28_0;
xor zmm1_1@uint64 zmm1_1 zmm28_1;
xor zmm1_2@uint64 zmm1_2 zmm28_2;
xor zmm1_3@uint64 zmm1_3 zmm28_3;
xor zmm1_4@uint64 zmm1_4 zmm28_4;
xor zmm1_5@uint64 zmm1_5 zmm28_5;
xor zmm1_6@uint64 zmm1_6 zmm28_6;
xor zmm1_7@uint64 zmm1_7 zmm28_7;
(* vpxord %zmm31,%zmm14,%zmm14                     #! PC = 0x55555558e06b *)
xor zmm14_0@uint64 zmm14_0 zmm31_0;
xor zmm14_1@uint64 zmm14_1 zmm31_1;
xor zmm14_2@uint64 zmm14_2 zmm31_2;
xor zmm14_3@uint64 zmm14_3 zmm31_3;
xor zmm14_4@uint64 zmm14_4 zmm31_4;
xor zmm14_5@uint64 zmm14_5 zmm31_5;
xor zmm14_6@uint64 zmm14_6 zmm31_6;
xor zmm14_7@uint64 zmm14_7 zmm31_7;
(* vpxord %zmm21,%zmm15,%zmm15                     #! PC = 0x55555558e071 *)
xor zmm15_0@uint64 zmm15_0 zmm21_0;
xor zmm15_1@uint64 zmm15_1 zmm21_1;
xor zmm15_2@uint64 zmm15_2 zmm21_2;
xor zmm15_3@uint64 zmm15_3 zmm21_3;
xor zmm15_4@uint64 zmm15_4 zmm21_4;
xor zmm15_5@uint64 zmm15_5 zmm21_5;
xor zmm15_6@uint64 zmm15_6 zmm21_6;
xor zmm15_7@uint64 zmm15_7 zmm21_7;
(* vprorq $0x1c,%zmm26,%zmm26                      #! PC = 0x55555558e077 *)
ror zmm26_0 zmm26_0 0x1c;
ror zmm26_1 zmm26_1 0x1c;
ror zmm26_2 zmm26_2 0x1c;
ror zmm26_3 zmm26_3 0x1c;
ror zmm26_4 zmm26_4 0x1c;
ror zmm26_5 zmm26_5 0x1c;
ror zmm26_6 zmm26_6 0x1c;
ror zmm26_7 zmm26_7 0x1c;
(* vprolq $0x1b,%zmm17,%zmm17                      #! PC = 0x55555558e07e *)
rol zmm17_0 zmm17_0 0x1b;
rol zmm17_1 zmm17_1 0x1b;
rol zmm17_2 zmm17_2 0x1b;
rol zmm17_3 zmm17_3 0x1b;
rol zmm17_4 zmm17_4 0x1b;
rol zmm17_5 zmm17_5 0x1b;
rol zmm17_6 zmm17_6 0x1b;
rol zmm17_7 zmm17_7 0x1b;
(* vprolq $0x12,%zmm25,%zmm25                      #! PC = 0x55555558e085 *)
rol zmm25_0 zmm25_0 0x12;
rol zmm25_1 zmm25_1 0x12;
rol zmm25_2 zmm25_2 0x12;
rol zmm25_3 zmm25_3 0x12;
rol zmm25_4 zmm25_4 0x12;
rol zmm25_5 zmm25_5 0x12;
rol zmm25_6 zmm25_6 0x12;
rol zmm25_7 zmm25_7 0x12;
(* vprolq $0x19,%zmm4,%zmm4                        #! PC = 0x55555558e08c *)
rol zmm4_0 zmm4_0 0x19;
rol zmm4_1 zmm4_1 0x19;
rol zmm4_2 zmm4_2 0x19;
rol zmm4_3 zmm4_3 0x19;
rol zmm4_4 zmm4_4 0x19;
rol zmm4_5 zmm4_5 0x19;
rol zmm4_6 zmm4_6 0x19;
rol zmm4_7 zmm4_7 0x19;
(* vprolq $0x8,%zmm3,%zmm3                         #! PC = 0x55555558e093 *)
rol zmm3_0 zmm3_0 0x8;
rol zmm3_1 zmm3_1 0x8;
rol zmm3_2 zmm3_2 0x8;
rol zmm3_3 zmm3_3 0x8;
rol zmm3_4 zmm3_4 0x8;
rol zmm3_5 zmm3_5 0x8;
rol zmm3_6 zmm3_6 0x8;
rol zmm3_7 zmm3_7 0x8;
(* vprorq $0x17,%zmm1,%zmm1                        #! PC = 0x55555558e09a *)
ror zmm1_0 zmm1_0 0x17;
ror zmm1_1 zmm1_1 0x17;
ror zmm1_2 zmm1_2 0x17;
ror zmm1_3 zmm1_3 0x17;
ror zmm1_4 zmm1_4 0x17;
ror zmm1_5 zmm1_5 0x17;
ror zmm1_6 zmm1_6 0x17;
ror zmm1_7 zmm1_7 0x17;
(* vprolq $0x2,%zmm14,%zmm14                       #! PC = 0x55555558e0a1 *)
rol zmm14_0 zmm14_0 0x2;
rol zmm14_1 zmm14_1 0x2;
rol zmm14_2 zmm14_2 0x2;
rol zmm14_3 zmm14_3 0x2;
rol zmm14_4 zmm14_4 0x2;
rol zmm14_5 zmm14_5 0x2;
rol zmm14_6 zmm14_6 0x2;
rol zmm14_7 zmm14_7 0x2;
(* vprorq $0x19,%zmm15,%zmm15                      #! PC = 0x55555558e0a8 *)
ror zmm15_0 zmm15_0 0x19;
ror zmm15_1 zmm15_1 0x19;
ror zmm15_2 zmm15_2 0x19;
ror zmm15_3 zmm15_3 0x19;
ror zmm15_4 zmm15_4 0x19;
ror zmm15_5 zmm15_5 0x19;
ror zmm15_6 zmm15_6 0x19;
ror zmm15_7 zmm15_7 0x19;
(* vprolq $0xa,%zmm9,%zmm9                         #! PC = 0x55555558e0af *)
rol zmm9_0 zmm9_0 0xa;
rol zmm9_1 zmm9_1 0xa;
rol zmm9_2 zmm9_2 0xa;
rol zmm9_3 zmm9_3 0xa;
rol zmm9_4 zmm9_4 0xa;
rol zmm9_5 zmm9_5 0xa;
rol zmm9_6 zmm9_6 0xa;
rol zmm9_7 zmm9_7 0xa;
(* vprolq $0xf,%zmm11,%zmm11                       #! PC = 0x55555558e0b6 *)
rol zmm11_0 zmm11_0 0xf;
rol zmm11_1 zmm11_1 0xf;
rol zmm11_2 zmm11_2 0xf;
rol zmm11_3 zmm11_3 0xf;
rol zmm11_4 zmm11_4 0xf;
rol zmm11_5 zmm11_5 0xf;
rol zmm11_6 zmm11_6 0xf;
rol zmm11_7 zmm11_7 0xf;
(* vprorq $0x8,%zmm2,%zmm2                         #! PC = 0x55555558e0bd *)
ror zmm2_0 zmm2_0 0x8;
ror zmm2_1 zmm2_1 0x8;
ror zmm2_2 zmm2_2 0x8;
ror zmm2_3 zmm2_3 0x8;
ror zmm2_4 zmm2_4 0x8;
ror zmm2_5 zmm2_5 0x8;
ror zmm2_6 zmm2_6 0x8;
ror zmm2_7 zmm2_7 0x8;
(* vmovdqa64 %zmm24,%zmm29                         #! PC = 0x55555558e0c4 *)
mov zmm29_0 zmm24_0;
mov zmm29_1 zmm24_1;
mov zmm29_2 zmm24_2;
mov zmm29_3 zmm24_3;
mov zmm29_4 zmm24_4;
mov zmm29_5 zmm24_5;
mov zmm29_6 zmm24_6;
mov zmm29_7 zmm24_7;
(* vmovdqa64 %zmm30,%zmm27                         #! PC = 0x55555558e0ca *)
mov zmm27_0 zmm30_0;
mov zmm27_1 zmm30_1;
mov zmm27_2 zmm30_2;
mov zmm27_3 zmm30_3;
mov zmm27_4 zmm30_4;
mov zmm27_5 zmm30_5;
mov zmm27_6 zmm30_6;
mov zmm27_7 zmm30_7;
(* vpternlogq $0xd2,%zmm0,%zmm30,%zmm29            #! PC = 0x55555558e0d0 *)
mov table 0xd2@uint8;
inline vpternlogq64 (zmm29_0, zmm30_0, zmm0_0, table);
inline vpternlogq64 (zmm29_1, zmm30_1, zmm0_1, table);
inline vpternlogq64 (zmm29_2, zmm30_2, zmm0_2, table);
inline vpternlogq64 (zmm29_3, zmm30_3, zmm0_3, table);
inline vpternlogq64 (zmm29_4, zmm30_4, zmm0_4, table);
inline vpternlogq64 (zmm29_5, zmm30_5, zmm0_5, table);
inline vpternlogq64 (zmm29_6, zmm30_6, zmm0_6, table);
inline vpternlogq64 (zmm29_7, zmm30_7, zmm0_7, table);
(* vpternlogq $0xd2,%zmm6,%zmm0,%zmm27             #! PC = 0x55555558e0d7 *)
mov table 0xd2@uint8;
inline vpternlogq64 (zmm27_0, zmm0_0, zmm6_0, table);
inline vpternlogq64 (zmm27_1, zmm0_1, zmm6_1, table);
inline vpternlogq64 (zmm27_2, zmm0_2, zmm6_2, table);
inline vpternlogq64 (zmm27_3, zmm0_3, zmm6_3, table);
inline vpternlogq64 (zmm27_4, zmm0_4, zmm6_4, table);
inline vpternlogq64 (zmm27_5, zmm0_5, zmm6_5, table);
inline vpternlogq64 (zmm27_6, zmm0_6, zmm6_6, table);
inline vpternlogq64 (zmm27_7, zmm0_7, zmm6_7, table);
(* vpternlogq $0xd2,%zmm8,%zmm6,%zmm0              #! PC = 0x55555558e0de *)
mov table 0xd2@uint8;
inline vpternlogq64 (zmm0_0, zmm6_0, zmm8_0, table);
inline vpternlogq64 (zmm0_1, zmm6_1, zmm8_1, table);
inline vpternlogq64 (zmm0_2, zmm6_2, zmm8_2, table);
inline vpternlogq64 (zmm0_3, zmm6_3, zmm8_3, table);
inline vpternlogq64 (zmm0_4, zmm6_4, zmm8_4, table);
inline vpternlogq64 (zmm0_5, zmm6_5, zmm8_5, table);
inline vpternlogq64 (zmm0_6, zmm6_6, zmm8_6, table);
inline vpternlogq64 (zmm0_7, zmm6_7, zmm8_7, table);
(* vpternlogq $0xd2,%zmm24,%zmm8,%zmm6             #! PC = 0x55555558e0e5 *)
mov table 0xd2@uint8;
inline vpternlogq64 (zmm6_0, zmm8_0, zmm24_0, table);
inline vpternlogq64 (zmm6_1, zmm8_1, zmm24_1, table);
inline vpternlogq64 (zmm6_2, zmm8_2, zmm24_2, table);
inline vpternlogq64 (zmm6_3, zmm8_3, zmm24_3, table);
inline vpternlogq64 (zmm6_4, zmm8_4, zmm24_4, table);
inline vpternlogq64 (zmm6_5, zmm8_5, zmm24_5, table);
inline vpternlogq64 (zmm6_6, zmm8_6, zmm24_6, table);
inline vpternlogq64 (zmm6_7, zmm8_7, zmm24_7, table);
(* vpternlogq $0xd2,%zmm30,%zmm24,%zmm8            #! PC = 0x55555558e0ec *)
mov table 0xd2@uint8;
inline vpternlogq64 (zmm8_0, zmm24_0, zmm30_0, table);
inline vpternlogq64 (zmm8_1, zmm24_1, zmm30_1, table);
inline vpternlogq64 (zmm8_2, zmm24_2, zmm30_2, table);
inline vpternlogq64 (zmm8_3, zmm24_3, zmm30_3, table);
inline vpternlogq64 (zmm8_4, zmm24_4, zmm30_4, table);
inline vpternlogq64 (zmm8_5, zmm24_5, zmm30_5, table);
inline vpternlogq64 (zmm8_6, zmm24_6, zmm30_6, table);
inline vpternlogq64 (zmm8_7, zmm24_7, zmm30_7, table);
(* vpbroadcastq %rdx,%zmm24                        #! PC = 0x55555558e0f3 *)
mov zmm24_0 rdx;
mov zmm24_1 rdx;
mov zmm24_2 rdx;
mov zmm24_3 rdx;
mov zmm24_4 rdx;
mov zmm24_5 rdx;
mov zmm24_6 rdx;
mov zmm24_7 rdx;
(* vpxord %zmm24,%zmm29,%zmm24                     #! PC = 0x55555558e0f9 *)
xor zmm24_0@uint64 zmm29_0 zmm24_0;
xor zmm24_1@uint64 zmm29_1 zmm24_1;
xor zmm24_2@uint64 zmm29_2 zmm24_2;
xor zmm24_3@uint64 zmm29_3 zmm24_3;
xor zmm24_4@uint64 zmm29_4 zmm24_4;
xor zmm24_5@uint64 zmm29_5 zmm24_5;
xor zmm24_6@uint64 zmm29_6 zmm24_6;
xor zmm24_7@uint64 zmm29_7 zmm24_7;
(* vmovdqa64 %zmm18,%zmm30                         #! PC = 0x55555558e0ff *)
mov zmm30_0 zmm18_0;
mov zmm30_1 zmm18_1;
mov zmm30_2 zmm18_2;
mov zmm30_3 zmm18_3;
mov zmm30_4 zmm18_4;
mov zmm30_5 zmm18_5;
mov zmm30_6 zmm18_6;
mov zmm30_7 zmm18_7;
(* vmovdqa64 %zmm7,%zmm29                          #! PC = 0x55555558e105 *)
mov zmm29_0 zmm7_0;
mov zmm29_1 zmm7_1;
mov zmm29_2 zmm7_2;
mov zmm29_3 zmm7_3;
mov zmm29_4 zmm7_4;
mov zmm29_5 zmm7_5;
mov zmm29_6 zmm7_6;
mov zmm29_7 zmm7_7;
(* vpternlogq $0xd2,%zmm16,%zmm18,%zmm29           #! PC = 0x55555558e10b *)
mov table 0xd2@uint8;
inline vpternlogq64 (zmm29_0, zmm18_0, zmm16_0, table);
inline vpternlogq64 (zmm29_1, zmm18_1, zmm16_1, table);
inline vpternlogq64 (zmm29_2, zmm18_2, zmm16_2, table);
inline vpternlogq64 (zmm29_3, zmm18_3, zmm16_3, table);
inline vpternlogq64 (zmm29_4, zmm18_4, zmm16_4, table);
inline vpternlogq64 (zmm29_5, zmm18_5, zmm16_5, table);
inline vpternlogq64 (zmm29_6, zmm18_6, zmm16_6, table);
inline vpternlogq64 (zmm29_7, zmm18_7, zmm16_7, table);
(* vpternlogq $0xd2,%zmm22,%zmm16,%zmm30           #! PC = 0x55555558e112 *)
mov table 0xd2@uint8;
inline vpternlogq64 (zmm30_0, zmm16_0, zmm22_0, table);
inline vpternlogq64 (zmm30_1, zmm16_1, zmm22_1, table);
inline vpternlogq64 (zmm30_2, zmm16_2, zmm22_2, table);
inline vpternlogq64 (zmm30_3, zmm16_3, zmm22_3, table);
inline vpternlogq64 (zmm30_4, zmm16_4, zmm22_4, table);
inline vpternlogq64 (zmm30_5, zmm16_5, zmm22_5, table);
inline vpternlogq64 (zmm30_6, zmm16_6, zmm22_6, table);
inline vpternlogq64 (zmm30_7, zmm16_7, zmm22_7, table);
(* vmovdqa64 %zmm19,%zmm21                         #! PC = 0x55555558e119 *)
mov zmm21_0 zmm19_0;
mov zmm21_1 zmm19_1;
mov zmm21_2 zmm19_2;
mov zmm21_3 zmm19_3;
mov zmm21_4 zmm19_4;
mov zmm21_5 zmm19_5;
mov zmm21_6 zmm19_6;
mov zmm21_7 zmm19_7;
(* vpternlogq $0xd2,%zmm10,%zmm22,%zmm16           #! PC = 0x55555558e11f *)
mov table 0xd2@uint8;
inline vpternlogq64 (zmm16_0, zmm22_0, zmm10_0, table);
inline vpternlogq64 (zmm16_1, zmm22_1, zmm10_1, table);
inline vpternlogq64 (zmm16_2, zmm22_2, zmm10_2, table);
inline vpternlogq64 (zmm16_3, zmm22_3, zmm10_3, table);
inline vpternlogq64 (zmm16_4, zmm22_4, zmm10_4, table);
inline vpternlogq64 (zmm16_5, zmm22_5, zmm10_5, table);
inline vpternlogq64 (zmm16_6, zmm22_6, zmm10_6, table);
inline vpternlogq64 (zmm16_7, zmm22_7, zmm10_7, table);
(* vmovdqa64 %zmm20,%zmm31                         #! PC = 0x55555558e126 *)
mov zmm31_0 zmm20_0;
mov zmm31_1 zmm20_1;
mov zmm31_2 zmm20_2;
mov zmm31_3 zmm20_3;
mov zmm31_4 zmm20_4;
mov zmm31_5 zmm20_5;
mov zmm31_6 zmm20_6;
mov zmm31_7 zmm20_7;
(* vpternlogq $0xd2,%zmm7,%zmm10,%zmm22            #! PC = 0x55555558e12c *)
mov table 0xd2@uint8;
inline vpternlogq64 (zmm22_0, zmm10_0, zmm7_0, table);
inline vpternlogq64 (zmm22_1, zmm10_1, zmm7_1, table);
inline vpternlogq64 (zmm22_2, zmm10_2, zmm7_2, table);
inline vpternlogq64 (zmm22_3, zmm10_3, zmm7_3, table);
inline vpternlogq64 (zmm22_4, zmm10_4, zmm7_4, table);
inline vpternlogq64 (zmm22_5, zmm10_5, zmm7_5, table);
inline vpternlogq64 (zmm22_6, zmm10_6, zmm7_6, table);
inline vpternlogq64 (zmm22_7, zmm10_7, zmm7_7, table);
(* vpternlogq $0xd2,%zmm18,%zmm7,%zmm10            #! PC = 0x55555558e133 *)
mov table 0xd2@uint8;
inline vpternlogq64 (zmm10_0, zmm7_0, zmm18_0, table);
inline vpternlogq64 (zmm10_1, zmm7_1, zmm18_1, table);
inline vpternlogq64 (zmm10_2, zmm7_2, zmm18_2, table);
inline vpternlogq64 (zmm10_3, zmm7_3, zmm18_3, table);
inline vpternlogq64 (zmm10_4, zmm7_4, zmm18_4, table);
inline vpternlogq64 (zmm10_5, zmm7_5, zmm18_5, table);
inline vpternlogq64 (zmm10_6, zmm7_6, zmm18_6, table);
inline vpternlogq64 (zmm10_7, zmm7_7, zmm18_7, table);
(* vmovdqa64 %zmm23,%zmm18                         #! PC = 0x55555558e13a *)
mov zmm18_0 zmm23_0;
mov zmm18_1 zmm23_1;
mov zmm18_2 zmm23_2;
mov zmm18_3 zmm23_3;
mov zmm18_4 zmm23_4;
mov zmm18_5 zmm23_5;
mov zmm18_6 zmm23_6;
mov zmm18_7 zmm23_7;
(* vmovdqa64 %zmm12,%zmm7                          #! PC = 0x55555558e140 *)
mov zmm7_0 zmm12_0;
mov zmm7_1 zmm12_1;
mov zmm7_2 zmm12_2;
mov zmm7_3 zmm12_3;
mov zmm7_4 zmm12_4;
mov zmm7_5 zmm12_5;
mov zmm7_6 zmm12_6;
mov zmm7_7 zmm12_7;
(* vpternlogq $0xd2,%zmm1,%zmm15,%zmm31            #! PC = 0x55555558e146 *)
mov table 0xd2@uint8;
inline vpternlogq64 (zmm31_0, zmm15_0, zmm1_0, table);
inline vpternlogq64 (zmm31_1, zmm15_1, zmm1_1, table);
inline vpternlogq64 (zmm31_2, zmm15_2, zmm1_2, table);
inline vpternlogq64 (zmm31_3, zmm15_3, zmm1_3, table);
inline vpternlogq64 (zmm31_4, zmm15_4, zmm1_4, table);
inline vpternlogq64 (zmm31_5, zmm15_5, zmm1_5, table);
inline vpternlogq64 (zmm31_6, zmm15_6, zmm1_6, table);
inline vpternlogq64 (zmm31_7, zmm15_7, zmm1_7, table);
(* vpternlogq $0xd2,%zmm4,%zmm12,%zmm18            #! PC = 0x55555558e14d *)
mov table 0xd2@uint8;
inline vpternlogq64 (zmm18_0, zmm12_0, zmm4_0, table);
inline vpternlogq64 (zmm18_1, zmm12_1, zmm4_1, table);
inline vpternlogq64 (zmm18_2, zmm12_2, zmm4_2, table);
inline vpternlogq64 (zmm18_3, zmm12_3, zmm4_3, table);
inline vpternlogq64 (zmm18_4, zmm12_4, zmm4_4, table);
inline vpternlogq64 (zmm18_5, zmm12_5, zmm4_5, table);
inline vpternlogq64 (zmm18_6, zmm12_6, zmm4_6, table);
inline vpternlogq64 (zmm18_7, zmm12_7, zmm4_7, table);
(* vpternlogq $0xd2,%zmm3,%zmm4,%zmm7              #! PC = 0x55555558e154 *)
mov table 0xd2@uint8;
inline vpternlogq64 (zmm7_0, zmm4_0, zmm3_0, table);
inline vpternlogq64 (zmm7_1, zmm4_1, zmm3_1, table);
inline vpternlogq64 (zmm7_2, zmm4_2, zmm3_2, table);
inline vpternlogq64 (zmm7_3, zmm4_3, zmm3_3, table);
inline vpternlogq64 (zmm7_4, zmm4_4, zmm3_4, table);
inline vpternlogq64 (zmm7_5, zmm4_5, zmm3_5, table);
inline vpternlogq64 (zmm7_6, zmm4_6, zmm3_6, table);
inline vpternlogq64 (zmm7_7, zmm4_7, zmm3_7, table);
(* vpternlogq $0xd2,%zmm15,%zmm20,%zmm21           #! PC = 0x55555558e15b *)
mov table 0xd2@uint8;
inline vpternlogq64 (zmm21_0, zmm20_0, zmm15_0, table);
inline vpternlogq64 (zmm21_1, zmm20_1, zmm15_1, table);
inline vpternlogq64 (zmm21_2, zmm20_2, zmm15_2, table);
inline vpternlogq64 (zmm21_3, zmm20_3, zmm15_3, table);
inline vpternlogq64 (zmm21_4, zmm20_4, zmm15_4, table);
inline vpternlogq64 (zmm21_5, zmm20_5, zmm15_5, table);
inline vpternlogq64 (zmm21_6, zmm20_6, zmm15_6, table);
inline vpternlogq64 (zmm21_7, zmm20_7, zmm15_7, table);
(* vpternlogq $0xd2,%zmm25,%zmm3,%zmm4             #! PC = 0x55555558e162 *)
mov table 0xd2@uint8;
inline vpternlogq64 (zmm4_0, zmm3_0, zmm25_0, table);
inline vpternlogq64 (zmm4_1, zmm3_1, zmm25_1, table);
inline vpternlogq64 (zmm4_2, zmm3_2, zmm25_2, table);
inline vpternlogq64 (zmm4_3, zmm3_3, zmm25_3, table);
inline vpternlogq64 (zmm4_4, zmm3_4, zmm25_4, table);
inline vpternlogq64 (zmm4_5, zmm3_5, zmm25_5, table);
inline vpternlogq64 (zmm4_6, zmm3_6, zmm25_6, table);
inline vpternlogq64 (zmm4_7, zmm3_7, zmm25_7, table);
(* vpternlogq $0xd2,%zmm14,%zmm1,%zmm15            #! PC = 0x55555558e169 *)
mov table 0xd2@uint8;
inline vpternlogq64 (zmm15_0, zmm1_0, zmm14_0, table);
inline vpternlogq64 (zmm15_1, zmm1_1, zmm14_1, table);
inline vpternlogq64 (zmm15_2, zmm1_2, zmm14_2, table);
inline vpternlogq64 (zmm15_3, zmm1_3, zmm14_3, table);
inline vpternlogq64 (zmm15_4, zmm1_4, zmm14_4, table);
inline vpternlogq64 (zmm15_5, zmm1_5, zmm14_5, table);
inline vpternlogq64 (zmm15_6, zmm1_6, zmm14_6, table);
inline vpternlogq64 (zmm15_7, zmm1_7, zmm14_7, table);
(* vpternlogq $0xd2,%zmm23,%zmm25,%zmm3            #! PC = 0x55555558e170 *)
mov table 0xd2@uint8;
inline vpternlogq64 (zmm3_0, zmm25_0, zmm23_0, table);
inline vpternlogq64 (zmm3_1, zmm25_1, zmm23_1, table);
inline vpternlogq64 (zmm3_2, zmm25_2, zmm23_2, table);
inline vpternlogq64 (zmm3_3, zmm25_3, zmm23_3, table);
inline vpternlogq64 (zmm3_4, zmm25_4, zmm23_4, table);
inline vpternlogq64 (zmm3_5, zmm25_5, zmm23_5, table);
inline vpternlogq64 (zmm3_6, zmm25_6, zmm23_6, table);
inline vpternlogq64 (zmm3_7, zmm25_7, zmm23_7, table);
(* vpternlogq $0xd2,%zmm19,%zmm14,%zmm1            #! PC = 0x55555558e177 *)
mov table 0xd2@uint8;
inline vpternlogq64 (zmm1_0, zmm14_0, zmm19_0, table);
inline vpternlogq64 (zmm1_1, zmm14_1, zmm19_1, table);
inline vpternlogq64 (zmm1_2, zmm14_2, zmm19_2, table);
inline vpternlogq64 (zmm1_3, zmm14_3, zmm19_3, table);
inline vpternlogq64 (zmm1_4, zmm14_4, zmm19_4, table);
inline vpternlogq64 (zmm1_5, zmm14_5, zmm19_5, table);
inline vpternlogq64 (zmm1_6, zmm14_6, zmm19_6, table);
inline vpternlogq64 (zmm1_7, zmm14_7, zmm19_7, table);
(* vpternlogq $0xd2,%zmm12,%zmm23,%zmm25           #! PC = 0x55555558e17e *)
mov table 0xd2@uint8;
inline vpternlogq64 (zmm25_0, zmm23_0, zmm12_0, table);
inline vpternlogq64 (zmm25_1, zmm23_1, zmm12_1, table);
inline vpternlogq64 (zmm25_2, zmm23_2, zmm12_2, table);
inline vpternlogq64 (zmm25_3, zmm23_3, zmm12_3, table);
inline vpternlogq64 (zmm25_4, zmm23_4, zmm12_4, table);
inline vpternlogq64 (zmm25_5, zmm23_5, zmm12_5, table);
inline vpternlogq64 (zmm25_6, zmm23_6, zmm12_6, table);
inline vpternlogq64 (zmm25_7, zmm23_7, zmm12_7, table);
(* vpternlogq $0xd2,%zmm20,%zmm19,%zmm14           #! PC = 0x55555558e185 *)
mov table 0xd2@uint8;
inline vpternlogq64 (zmm14_0, zmm19_0, zmm20_0, table);
inline vpternlogq64 (zmm14_1, zmm19_1, zmm20_1, table);
inline vpternlogq64 (zmm14_2, zmm19_2, zmm20_2, table);
inline vpternlogq64 (zmm14_3, zmm19_3, zmm20_3, table);
inline vpternlogq64 (zmm14_4, zmm19_4, zmm20_4, table);
inline vpternlogq64 (zmm14_5, zmm19_5, zmm20_5, table);
inline vpternlogq64 (zmm14_6, zmm19_6, zmm20_6, table);
inline vpternlogq64 (zmm14_7, zmm19_7, zmm20_7, table);
(* vmovdqa64 %zmm17,%zmm23                         #! PC = 0x55555558e18c *)
mov zmm23_0 zmm17_0;
mov zmm23_1 zmm17_1;
mov zmm23_2 zmm17_2;
mov zmm23_3 zmm17_3;
mov zmm23_4 zmm17_4;
mov zmm23_5 zmm17_5;
mov zmm23_6 zmm17_6;
mov zmm23_7 zmm17_7;
(* vmovdqa64 %zmm26,%zmm12                         #! PC = 0x55555558e192 *)
mov zmm12_0 zmm26_0;
mov zmm12_1 zmm26_1;
mov zmm12_2 zmm26_2;
mov zmm12_3 zmm26_3;
mov zmm12_4 zmm26_4;
mov zmm12_5 zmm26_5;
mov zmm12_6 zmm26_6;
mov zmm12_7 zmm26_7;
(* vmovdqa64 %zmm16,%zmm20                         #! PC = 0x55555558e198 *)
mov zmm20_0 zmm16_0;
mov zmm20_1 zmm16_1;
mov zmm20_2 zmm16_2;
mov zmm20_3 zmm16_3;
mov zmm20_4 zmm16_4;
mov zmm20_5 zmm16_5;
mov zmm20_6 zmm16_6;
mov zmm20_7 zmm16_7;
(* vpternlogq $0xd2,%zmm9,%zmm26,%zmm23            #! PC = 0x55555558e19e *)
mov table 0xd2@uint8;
inline vpternlogq64 (zmm23_0, zmm26_0, zmm9_0, table);
inline vpternlogq64 (zmm23_1, zmm26_1, zmm9_1, table);
inline vpternlogq64 (zmm23_2, zmm26_2, zmm9_2, table);
inline vpternlogq64 (zmm23_3, zmm26_3, zmm9_3, table);
inline vpternlogq64 (zmm23_4, zmm26_4, zmm9_4, table);
inline vpternlogq64 (zmm23_5, zmm26_5, zmm9_5, table);
inline vpternlogq64 (zmm23_6, zmm26_6, zmm9_6, table);
inline vpternlogq64 (zmm23_7, zmm26_7, zmm9_7, table);
(* vpternlogq $0xd2,%zmm11,%zmm9,%zmm12            #! PC = 0x55555558e1a5 *)
mov table 0xd2@uint8;
inline vpternlogq64 (zmm12_0, zmm9_0, zmm11_0, table);
inline vpternlogq64 (zmm12_1, zmm9_1, zmm11_1, table);
inline vpternlogq64 (zmm12_2, zmm9_2, zmm11_2, table);
inline vpternlogq64 (zmm12_3, zmm9_3, zmm11_3, table);
inline vpternlogq64 (zmm12_4, zmm9_4, zmm11_4, table);
inline vpternlogq64 (zmm12_5, zmm9_5, zmm11_5, table);
inline vpternlogq64 (zmm12_6, zmm9_6, zmm11_6, table);
inline vpternlogq64 (zmm12_7, zmm9_7, zmm11_7, table);
(* vpternlogq $0x96,%zmm15,%zmm0,%zmm20            #! PC = 0x55555558e1ac *)
mov table 0x96@uint8;
inline vpternlogq64 (zmm20_0, zmm0_0, zmm15_0, table);
inline vpternlogq64 (zmm20_1, zmm0_1, zmm15_1, table);
inline vpternlogq64 (zmm20_2, zmm0_2, zmm15_2, table);
inline vpternlogq64 (zmm20_3, zmm0_3, zmm15_3, table);
inline vpternlogq64 (zmm20_4, zmm0_4, zmm15_4, table);
inline vpternlogq64 (zmm20_5, zmm0_5, zmm15_5, table);
inline vpternlogq64 (zmm20_6, zmm0_6, zmm15_6, table);
inline vpternlogq64 (zmm20_7, zmm0_7, zmm15_7, table);
(* vpternlogq $0xd2,%zmm2,%zmm11,%zmm9             #! PC = 0x55555558e1b3 *)
mov table 0xd2@uint8;
inline vpternlogq64 (zmm9_0, zmm11_0, zmm2_0, table);
inline vpternlogq64 (zmm9_1, zmm11_1, zmm2_1, table);
inline vpternlogq64 (zmm9_2, zmm11_2, zmm2_2, table);
inline vpternlogq64 (zmm9_3, zmm11_3, zmm2_3, table);
inline vpternlogq64 (zmm9_4, zmm11_4, zmm2_4, table);
inline vpternlogq64 (zmm9_5, zmm11_5, zmm2_5, table);
inline vpternlogq64 (zmm9_6, zmm11_6, zmm2_6, table);
inline vpternlogq64 (zmm9_7, zmm11_7, zmm2_7, table);
(* vpternlogq $0x96,%zmm4,%zmm9,%zmm20             #! PC = 0x55555558e1ba *)
mov table 0x96@uint8;
inline vpternlogq64 (zmm20_0, zmm9_0, zmm4_0, table);
inline vpternlogq64 (zmm20_1, zmm9_1, zmm4_1, table);
inline vpternlogq64 (zmm20_2, zmm9_2, zmm4_2, table);
inline vpternlogq64 (zmm20_3, zmm9_3, zmm4_3, table);
inline vpternlogq64 (zmm20_4, zmm9_4, zmm4_4, table);
inline vpternlogq64 (zmm20_5, zmm9_5, zmm4_5, table);
inline vpternlogq64 (zmm20_6, zmm9_6, zmm4_6, table);
inline vpternlogq64 (zmm20_7, zmm9_7, zmm4_7, table);
(* vpternlogq $0xd2,%zmm17,%zmm2,%zmm11            #! PC = 0x55555558e1c1 *)
mov table 0xd2@uint8;
inline vpternlogq64 (zmm11_0, zmm2_0, zmm17_0, table);
inline vpternlogq64 (zmm11_1, zmm2_1, zmm17_1, table);
inline vpternlogq64 (zmm11_2, zmm2_2, zmm17_2, table);
inline vpternlogq64 (zmm11_3, zmm2_3, zmm17_3, table);
inline vpternlogq64 (zmm11_4, zmm2_4, zmm17_4, table);
inline vpternlogq64 (zmm11_5, zmm2_5, zmm17_5, table);
inline vpternlogq64 (zmm11_6, zmm2_6, zmm17_6, table);
inline vpternlogq64 (zmm11_7, zmm2_7, zmm17_7, table);
(* vpternlogq $0xd2,%zmm26,%zmm17,%zmm2            #! PC = 0x55555558e1c8 *)
mov table 0xd2@uint8;
inline vpternlogq64 (zmm2_0, zmm17_0, zmm26_0, table);
inline vpternlogq64 (zmm2_1, zmm17_1, zmm26_1, table);
inline vpternlogq64 (zmm2_2, zmm17_2, zmm26_2, table);
inline vpternlogq64 (zmm2_3, zmm17_3, zmm26_3, table);
inline vpternlogq64 (zmm2_4, zmm17_4, zmm26_4, table);
inline vpternlogq64 (zmm2_5, zmm17_5, zmm26_5, table);
inline vpternlogq64 (zmm2_6, zmm17_6, zmm26_6, table);
inline vpternlogq64 (zmm2_7, zmm17_7, zmm26_7, table);
(* vprolq $0x1,%zmm20,%zmm17                       #! PC = 0x55555558e1cf *)
rol zmm17_0 zmm20_0 0x1;
rol zmm17_1 zmm20_1 0x1;
rol zmm17_2 zmm20_2 0x1;
rol zmm17_3 zmm20_3 0x1;
rol zmm17_4 zmm20_4 0x1;
rol zmm17_5 zmm20_5 0x1;
rol zmm17_6 zmm20_6 0x1;
rol zmm17_7 zmm20_7 0x1;
(* vmovdqa64 %zmm1,%zmm26                          #! PC = 0x55555558e1d6 *)
mov zmm26_0 zmm1_0;
mov zmm26_1 zmm1_1;
mov zmm26_2 zmm1_2;
mov zmm26_3 zmm1_3;
mov zmm26_4 zmm1_4;
mov zmm26_5 zmm1_5;
mov zmm26_6 zmm1_6;
mov zmm26_7 zmm1_7;
(* vpternlogq $0x96,%zmm3,%zmm11,%zmm26            #! PC = 0x55555558e1dc *)
mov table 0x96@uint8;
inline vpternlogq64 (zmm26_0, zmm11_0, zmm3_0, table);
inline vpternlogq64 (zmm26_1, zmm11_1, zmm3_1, table);
inline vpternlogq64 (zmm26_2, zmm11_2, zmm3_2, table);
inline vpternlogq64 (zmm26_3, zmm11_3, zmm3_3, table);
inline vpternlogq64 (zmm26_4, zmm11_4, zmm3_4, table);
inline vpternlogq64 (zmm26_5, zmm11_5, zmm3_5, table);
inline vpternlogq64 (zmm26_6, zmm11_6, zmm3_6, table);
inline vpternlogq64 (zmm26_7, zmm11_7, zmm3_7, table);
(* vpternlogq $0x96,%zmm6,%zmm22,%zmm26            #! PC = 0x55555558e1e3 *)
mov table 0x96@uint8;
inline vpternlogq64 (zmm26_0, zmm22_0, zmm6_0, table);
inline vpternlogq64 (zmm26_1, zmm22_1, zmm6_1, table);
inline vpternlogq64 (zmm26_2, zmm22_2, zmm6_2, table);
inline vpternlogq64 (zmm26_3, zmm22_3, zmm6_3, table);
inline vpternlogq64 (zmm26_4, zmm22_4, zmm6_4, table);
inline vpternlogq64 (zmm26_5, zmm22_5, zmm6_5, table);
inline vpternlogq64 (zmm26_6, zmm22_6, zmm6_6, table);
inline vpternlogq64 (zmm26_7, zmm22_7, zmm6_7, table);
(* vmovdqa64 %zmm25,%zmm28                         #! PC = 0x55555558e1ea *)
mov zmm28_0 zmm25_0;
mov zmm28_1 zmm25_1;
mov zmm28_2 zmm25_2;
mov zmm28_3 zmm25_3;
mov zmm28_4 zmm25_4;
mov zmm28_5 zmm25_5;
mov zmm28_6 zmm25_6;
mov zmm28_7 zmm25_7;
(* vpternlogq $0x96,%zmm8,%zmm10,%zmm28            #! PC = 0x55555558e1f0 *)
mov table 0x96@uint8;
inline vpternlogq64 (zmm28_0, zmm10_0, zmm8_0, table);
inline vpternlogq64 (zmm28_1, zmm10_1, zmm8_1, table);
inline vpternlogq64 (zmm28_2, zmm10_2, zmm8_2, table);
inline vpternlogq64 (zmm28_3, zmm10_3, zmm8_3, table);
inline vpternlogq64 (zmm28_4, zmm10_4, zmm8_4, table);
inline vpternlogq64 (zmm28_5, zmm10_5, zmm8_5, table);
inline vpternlogq64 (zmm28_6, zmm10_6, zmm8_6, table);
inline vpternlogq64 (zmm28_7, zmm10_7, zmm8_7, table);
(* vmovdqa64 %zmm17,0x148(%rsp)                    #! EA = L0x7fffffffd600; PC = 0x55555558e1f7 *)
mov L0x7fffffffd600 zmm17_0;
mov L0x7fffffffd608 zmm17_1;
mov L0x7fffffffd610 zmm17_2;
mov L0x7fffffffd618 zmm17_3;
mov L0x7fffffffd620 zmm17_4;
mov L0x7fffffffd628 zmm17_5;
mov L0x7fffffffd630 zmm17_6;
mov L0x7fffffffd638 zmm17_7;
(* vprolq $0x1,%zmm26,%zmm17                       #! PC = 0x55555558e202 *)
rol zmm17_0 zmm26_0 0x1;
rol zmm17_1 zmm26_1 0x1;
rol zmm17_2 zmm26_2 0x1;
rol zmm17_3 zmm26_3 0x1;
rol zmm17_4 zmm26_4 0x1;
rol zmm17_5 zmm26_5 0x1;
rol zmm17_6 zmm26_6 0x1;
rol zmm17_7 zmm26_7 0x1;
(* vpternlogq $0x96,%zmm2,%zmm14,%zmm28            #! PC = 0x55555558e209 *)
mov table 0x96@uint8;
inline vpternlogq64 (zmm28_0, zmm14_0, zmm2_0, table);
inline vpternlogq64 (zmm28_1, zmm14_1, zmm2_1, table);
inline vpternlogq64 (zmm28_2, zmm14_2, zmm2_2, table);
inline vpternlogq64 (zmm28_3, zmm14_3, zmm2_3, table);
inline vpternlogq64 (zmm28_4, zmm14_4, zmm2_4, table);
inline vpternlogq64 (zmm28_5, zmm14_5, zmm2_5, table);
inline vpternlogq64 (zmm28_6, zmm14_6, zmm2_6, table);
inline vpternlogq64 (zmm28_7, zmm14_7, zmm2_7, table);
(* vmovdqa64 %zmm24,%zmm13                         #! PC = 0x55555558e210 *)
mov zmm13_0 zmm24_0;
mov zmm13_1 zmm24_1;
mov zmm13_2 zmm24_2;
mov zmm13_3 zmm24_3;
mov zmm13_4 zmm24_4;
mov zmm13_5 zmm24_5;
mov zmm13_6 zmm24_6;
mov zmm13_7 zmm24_7;
(* vpternlogq $0x96,%zmm23,%zmm21,%zmm13           #! PC = 0x55555558e216 *)
mov table 0x96@uint8;
inline vpternlogq64 (zmm13_0, zmm21_0, zmm23_0, table);
inline vpternlogq64 (zmm13_1, zmm21_1, zmm23_1, table);
inline vpternlogq64 (zmm13_2, zmm21_2, zmm23_2, table);
inline vpternlogq64 (zmm13_3, zmm21_3, zmm23_3, table);
inline vpternlogq64 (zmm13_4, zmm21_4, zmm23_4, table);
inline vpternlogq64 (zmm13_5, zmm21_5, zmm23_5, table);
inline vpternlogq64 (zmm13_6, zmm21_6, zmm23_6, table);
inline vpternlogq64 (zmm13_7, zmm21_7, zmm23_7, table);
(* vpternlogq $0x96,%zmm29,%zmm18,%zmm13           #! PC = 0x55555558e21d *)
mov table 0x96@uint8;
inline vpternlogq64 (zmm13_0, zmm18_0, zmm29_0, table);
inline vpternlogq64 (zmm13_1, zmm18_1, zmm29_1, table);
inline vpternlogq64 (zmm13_2, zmm18_2, zmm29_2, table);
inline vpternlogq64 (zmm13_3, zmm18_3, zmm29_3, table);
inline vpternlogq64 (zmm13_4, zmm18_4, zmm29_4, table);
inline vpternlogq64 (zmm13_5, zmm18_5, zmm29_5, table);
inline vpternlogq64 (zmm13_6, zmm18_6, zmm29_6, table);
inline vpternlogq64 (zmm13_7, zmm18_7, zmm29_7, table);
(* vmovdqa64 %zmm12,%zmm19                         #! PC = 0x55555558e224 *)
mov zmm19_0 zmm12_0;
mov zmm19_1 zmm12_1;
mov zmm19_2 zmm12_2;
mov zmm19_3 zmm12_3;
mov zmm19_4 zmm12_4;
mov zmm19_5 zmm12_5;
mov zmm19_6 zmm12_6;
mov zmm19_7 zmm12_7;
(* vmovdqa64 %zmm17,0x108(%rsp)                    #! EA = L0x7fffffffd5c0; PC = 0x55555558e22a *)
mov L0x7fffffffd5c0 zmm17_0;
mov L0x7fffffffd5c8 zmm17_1;
mov L0x7fffffffd5d0 zmm17_2;
mov L0x7fffffffd5d8 zmm17_3;
mov L0x7fffffffd5e0 zmm17_4;
mov L0x7fffffffd5e8 zmm17_5;
mov L0x7fffffffd5f0 zmm17_6;
mov L0x7fffffffd5f8 zmm17_7;
(* vprolq $0x1,%zmm28,%zmm17                       #! PC = 0x55555558e235 *)
rol zmm17_0 zmm28_0 0x1;
rol zmm17_1 zmm28_1 0x1;
rol zmm17_2 zmm28_2 0x1;
rol zmm17_3 zmm28_3 0x1;
rol zmm17_4 zmm28_4 0x1;
rol zmm17_5 zmm28_5 0x1;
rol zmm17_6 zmm28_6 0x1;
rol zmm17_7 zmm28_7 0x1;
(* vpternlogq $0x96,%zmm30,%zmm7,%zmm19            #! PC = 0x55555558e23c *)
mov table 0x96@uint8;
inline vpternlogq64 (zmm19_0, zmm7_0, zmm30_0, table);
inline vpternlogq64 (zmm19_1, zmm7_1, zmm30_1, table);
inline vpternlogq64 (zmm19_2, zmm7_2, zmm30_2, table);
inline vpternlogq64 (zmm19_3, zmm7_3, zmm30_3, table);
inline vpternlogq64 (zmm19_4, zmm7_4, zmm30_4, table);
inline vpternlogq64 (zmm19_5, zmm7_5, zmm30_5, table);
inline vpternlogq64 (zmm19_6, zmm7_6, zmm30_6, table);
inline vpternlogq64 (zmm19_7, zmm7_7, zmm30_7, table);
(* vpternlogq $0x96,%zmm31,%zmm27,%zmm19           #! PC = 0x55555558e243 *)
mov table 0x96@uint8;
inline vpternlogq64 (zmm19_0, zmm27_0, zmm31_0, table);
inline vpternlogq64 (zmm19_1, zmm27_1, zmm31_1, table);
inline vpternlogq64 (zmm19_2, zmm27_2, zmm31_2, table);
inline vpternlogq64 (zmm19_3, zmm27_3, zmm31_3, table);
inline vpternlogq64 (zmm19_4, zmm27_4, zmm31_4, table);
inline vpternlogq64 (zmm19_5, zmm27_5, zmm31_5, table);
inline vpternlogq64 (zmm19_6, zmm27_6, zmm31_6, table);
inline vpternlogq64 (zmm19_7, zmm27_7, zmm31_7, table);
(* vprolq $0x1,%zmm19,%zmm5                        #! PC = 0x55555558e24a *)
rol zmm5_0 zmm19_0 0x1;
rol zmm5_1 zmm19_1 0x1;
rol zmm5_2 zmm19_2 0x1;
rol zmm5_3 zmm19_3 0x1;
rol zmm5_4 zmm19_4 0x1;
rol zmm5_5 zmm19_5 0x1;
rol zmm5_6 zmm19_6 0x1;
rol zmm5_7 zmm19_7 0x1;
(* vpxord 0x108(%rsp),%zmm19,%zmm19                #! EA = L0x7fffffffd5c0; Value = 0xfe854a4478441c09; PC = 0x55555558e251 *)
xor zmm19_0@uint64 zmm19_0 L0x7fffffffd5c0;
xor zmm19_1@uint64 zmm19_1 L0x7fffffffd5c8;
xor zmm19_2@uint64 zmm19_2 L0x7fffffffd5d0;
xor zmm19_3@uint64 zmm19_3 L0x7fffffffd5d8;
xor zmm19_4@uint64 zmm19_4 L0x7fffffffd5e0;
xor zmm19_5@uint64 zmm19_5 L0x7fffffffd5e8;
xor zmm19_6@uint64 zmm19_6 L0x7fffffffd5f0;
xor zmm19_7@uint64 zmm19_7 L0x7fffffffd5f8;
(* movabs $0x8000000000008002,%r10                 #! PC = 0x55555558e25c *)
mov r10 0x8000000000008002@uint64;
(* vmovdqa64 %zmm17,0xc8(%rsp)                     #! EA = L0x7fffffffd580; PC = 0x55555558e266 *)
mov L0x7fffffffd580 zmm17_0;
mov L0x7fffffffd588 zmm17_1;
mov L0x7fffffffd590 zmm17_2;
mov L0x7fffffffd598 zmm17_3;
mov L0x7fffffffd5a0 zmm17_4;
mov L0x7fffffffd5a8 zmm17_5;
mov L0x7fffffffd5b0 zmm17_6;
mov L0x7fffffffd5b8 zmm17_7;
(* vprolq $0x1,%zmm13,%zmm17                       #! PC = 0x55555558e271 *)
rol zmm17_0 zmm13_0 0x1;
rol zmm17_1 zmm13_1 0x1;
rol zmm17_2 zmm13_2 0x1;
rol zmm17_3 zmm13_3 0x1;
rol zmm17_4 zmm13_4 0x1;
rol zmm17_5 zmm13_5 0x1;
rol zmm17_6 zmm13_6 0x1;
rol zmm17_7 zmm13_7 0x1;
(* vpxord 0x148(%rsp),%zmm13,%zmm13                #! EA = L0x7fffffffd600; Value = 0xb635cb22d14c9ba7; PC = 0x55555558e278 *)
xor zmm13_0@uint64 zmm13_0 L0x7fffffffd600;
xor zmm13_1@uint64 zmm13_1 L0x7fffffffd608;
xor zmm13_2@uint64 zmm13_2 L0x7fffffffd610;
xor zmm13_3@uint64 zmm13_3 L0x7fffffffd618;
xor zmm13_4@uint64 zmm13_4 L0x7fffffffd620;
xor zmm13_5@uint64 zmm13_5 L0x7fffffffd628;
xor zmm13_6@uint64 zmm13_6 L0x7fffffffd630;
xor zmm13_7@uint64 zmm13_7 L0x7fffffffd638;
(* vpxord 0xc8(%rsp),%zmm20,%zmm20                 #! EA = L0x7fffffffd580; Value = 0x23e161574e05e8b3; PC = 0x55555558e283 *)
xor zmm20_0@uint64 zmm20_0 L0x7fffffffd580;
xor zmm20_1@uint64 zmm20_1 L0x7fffffffd588;
xor zmm20_2@uint64 zmm20_2 L0x7fffffffd590;
xor zmm20_3@uint64 zmm20_3 L0x7fffffffd598;
xor zmm20_4@uint64 zmm20_4 L0x7fffffffd5a0;
xor zmm20_5@uint64 zmm20_5 L0x7fffffffd5a8;
xor zmm20_6@uint64 zmm20_6 L0x7fffffffd5b0;
xor zmm20_7@uint64 zmm20_7 L0x7fffffffd5b8;
(* vpxord %zmm30,%zmm13,%zmm30                     #! PC = 0x55555558e28e *)
xor zmm30_0@uint64 zmm13_0 zmm30_0;
xor zmm30_1@uint64 zmm13_1 zmm30_1;
xor zmm30_2@uint64 zmm13_2 zmm30_2;
xor zmm30_3@uint64 zmm13_3 zmm30_3;
xor zmm30_4@uint64 zmm13_4 zmm30_4;
xor zmm30_5@uint64 zmm13_5 zmm30_5;
xor zmm30_6@uint64 zmm13_6 zmm30_6;
xor zmm30_7@uint64 zmm13_7 zmm30_7;
(* vprorq $0x14,%zmm30,%zmm30                      #! PC = 0x55555558e294 *)
ror zmm30_0 zmm30_0 0x14;
ror zmm30_1 zmm30_1 0x14;
ror zmm30_2 zmm30_2 0x14;
ror zmm30_3 zmm30_3 0x14;
ror zmm30_4 zmm30_4 0x14;
ror zmm30_5 zmm30_5 0x14;
ror zmm30_6 zmm30_6 0x14;
ror zmm30_7 zmm30_7 0x14;
(* vpxord %zmm4,%zmm19,%zmm4                       #! PC = 0x55555558e29b *)
xor zmm4_0@uint64 zmm19_0 zmm4_0;
xor zmm4_1@uint64 zmm19_1 zmm4_1;
xor zmm4_2@uint64 zmm19_2 zmm4_2;
xor zmm4_3@uint64 zmm19_3 zmm4_3;
xor zmm4_4@uint64 zmm19_4 zmm4_4;
xor zmm4_5@uint64 zmm19_5 zmm4_5;
xor zmm4_6@uint64 zmm19_6 zmm4_6;
xor zmm4_7@uint64 zmm19_7 zmm4_7;
(* vpxord %zmm26,%zmm17,%zmm17                     #! PC = 0x55555558e2a1 *)
xor zmm17_0@uint64 zmm17_0 zmm26_0;
xor zmm17_1@uint64 zmm17_1 zmm26_1;
xor zmm17_2@uint64 zmm17_2 zmm26_2;
xor zmm17_3@uint64 zmm17_3 zmm26_3;
xor zmm17_4@uint64 zmm17_4 zmm26_4;
xor zmm17_5@uint64 zmm17_5 zmm26_5;
xor zmm17_6@uint64 zmm17_6 zmm26_6;
xor zmm17_7@uint64 zmm17_7 zmm26_7;
(* vpxord %zmm11,%zmm20,%zmm11                     #! PC = 0x55555558e2a7 *)
xor zmm11_0@uint64 zmm20_0 zmm11_0;
xor zmm11_1@uint64 zmm20_1 zmm11_1;
xor zmm11_2@uint64 zmm20_2 zmm11_2;
xor zmm11_3@uint64 zmm20_3 zmm11_3;
xor zmm11_4@uint64 zmm20_4 zmm11_4;
xor zmm11_5@uint64 zmm20_5 zmm11_5;
xor zmm11_6@uint64 zmm20_6 zmm11_6;
xor zmm11_7@uint64 zmm20_7 zmm11_7;
(* vpxord %zmm14,%zmm17,%zmm14                     #! PC = 0x55555558e2ad *)
xor zmm14_0@uint64 zmm17_0 zmm14_0;
xor zmm14_1@uint64 zmm17_1 zmm14_1;
xor zmm14_2@uint64 zmm17_2 zmm14_2;
xor zmm14_3@uint64 zmm17_3 zmm14_3;
xor zmm14_4@uint64 zmm17_4 zmm14_4;
xor zmm14_5@uint64 zmm17_5 zmm14_5;
xor zmm14_6@uint64 zmm17_6 zmm14_6;
xor zmm14_7@uint64 zmm17_7 zmm14_7;
(* vpxord %zmm28,%zmm5,%zmm5                       #! PC = 0x55555558e2b3 *)
xor zmm5_0@uint64 zmm5_0 zmm28_0;
xor zmm5_1@uint64 zmm5_1 zmm28_1;
xor zmm5_2@uint64 zmm5_2 zmm28_2;
xor zmm5_3@uint64 zmm5_3 zmm28_3;
xor zmm5_4@uint64 zmm5_4 zmm28_4;
xor zmm5_5@uint64 zmm5_5 zmm28_5;
xor zmm5_6@uint64 zmm5_6 zmm28_6;
xor zmm5_7@uint64 zmm5_7 zmm28_7;
(* vprorq $0x15,%zmm4,%zmm4                        #! PC = 0x55555558e2b9 *)
ror zmm4_0 zmm4_0 0x15;
ror zmm4_1 zmm4_1 0x15;
ror zmm4_2 zmm4_2 0x15;
ror zmm4_3 zmm4_3 0x15;
ror zmm4_4 zmm4_4 0x15;
ror zmm4_5 zmm4_5 0x15;
ror zmm4_6 zmm4_6 0x15;
ror zmm4_7 zmm4_7 0x15;
(* vprolq $0x15,%zmm11,%zmm11                      #! PC = 0x55555558e2c0 *)
rol zmm11_0 zmm11_0 0x15;
rol zmm11_1 zmm11_1 0x15;
rol zmm11_2 zmm11_2 0x15;
rol zmm11_3 zmm11_3 0x15;
rol zmm11_4 zmm11_4 0x15;
rol zmm11_5 zmm11_5 0x15;
rol zmm11_6 zmm11_6 0x15;
rol zmm11_7 zmm11_7 0x15;
(* vprolq $0xe,%zmm14,%zmm14                       #! PC = 0x55555558e2c7 *)
rol zmm14_0 zmm14_0 0xe;
rol zmm14_1 zmm14_1 0xe;
rol zmm14_2 zmm14_2 0xe;
rol zmm14_3 zmm14_3 0xe;
rol zmm14_4 zmm14_4 0xe;
rol zmm14_5 zmm14_5 0xe;
rol zmm14_6 zmm14_6 0xe;
rol zmm14_7 zmm14_7 0xe;
(* vpxord %zmm6,%zmm20,%zmm6                       #! PC = 0x55555558e2ce *)
xor zmm6_0@uint64 zmm20_0 zmm6_0;
xor zmm6_1@uint64 zmm20_1 zmm6_1;
xor zmm6_2@uint64 zmm20_2 zmm6_2;
xor zmm6_3@uint64 zmm20_3 zmm6_3;
xor zmm6_4@uint64 zmm20_4 zmm6_4;
xor zmm6_5@uint64 zmm20_5 zmm6_5;
xor zmm6_6@uint64 zmm20_6 zmm6_6;
xor zmm6_7@uint64 zmm20_7 zmm6_7;
(* vpxord %zmm10,%zmm17,%zmm10                     #! PC = 0x55555558e2d4 *)
xor zmm10_0@uint64 zmm17_0 zmm10_0;
xor zmm10_1@uint64 zmm17_1 zmm10_1;
xor zmm10_2@uint64 zmm17_2 zmm10_2;
xor zmm10_3@uint64 zmm17_3 zmm10_3;
xor zmm10_4@uint64 zmm17_4 zmm10_4;
xor zmm10_5@uint64 zmm17_5 zmm10_5;
xor zmm10_6@uint64 zmm17_6 zmm10_6;
xor zmm10_7@uint64 zmm17_7 zmm10_7;
(* vprolq $0x1c,%zmm6,%zmm6                        #! PC = 0x55555558e2da *)
rol zmm6_0 zmm6_0 0x1c;
rol zmm6_1 zmm6_1 0x1c;
rol zmm6_2 zmm6_2 0x1c;
rol zmm6_3 zmm6_3 0x1c;
rol zmm6_4 zmm6_4 0x1c;
rol zmm6_5 zmm6_5 0x1c;
rol zmm6_6 zmm6_6 0x1c;
rol zmm6_7 zmm6_7 0x1c;
(* vprolq $0x14,%zmm10,%zmm10                      #! PC = 0x55555558e2e1 *)
rol zmm10_0 zmm10_0 0x14;
rol zmm10_1 zmm10_1 0x14;
rol zmm10_2 zmm10_2 0x14;
rol zmm10_3 zmm10_3 0x14;
rol zmm10_4 zmm10_4 0x14;
rol zmm10_5 zmm10_5 0x14;
rol zmm10_6 zmm10_6 0x14;
rol zmm10_7 zmm10_7 0x14;
(* vpxord %zmm18,%zmm5,%zmm18                      #! PC = 0x55555558e2e8 *)
xor zmm18_0@uint64 zmm5_0 zmm18_0;
xor zmm18_1@uint64 zmm5_1 zmm18_1;
xor zmm18_2@uint64 zmm5_2 zmm18_2;
xor zmm18_3@uint64 zmm5_3 zmm18_3;
xor zmm18_4@uint64 zmm5_4 zmm18_4;
xor zmm18_5@uint64 zmm5_5 zmm18_5;
xor zmm18_6@uint64 zmm5_6 zmm18_6;
xor zmm18_7@uint64 zmm5_7 zmm18_7;
(* vpxord %zmm12,%zmm13,%zmm12                     #! PC = 0x55555558e2ee *)
xor zmm12_0@uint64 zmm13_0 zmm12_0;
xor zmm12_1@uint64 zmm13_1 zmm12_1;
xor zmm12_2@uint64 zmm13_2 zmm12_2;
xor zmm12_3@uint64 zmm13_3 zmm12_3;
xor zmm12_4@uint64 zmm13_4 zmm12_4;
xor zmm12_5@uint64 zmm13_5 zmm12_5;
xor zmm12_6@uint64 zmm13_6 zmm12_6;
xor zmm12_7@uint64 zmm13_7 zmm12_7;
(* vpxord %zmm15,%zmm19,%zmm15                     #! PC = 0x55555558e2f4 *)
xor zmm15_0@uint64 zmm19_0 zmm15_0;
xor zmm15_1@uint64 zmm19_1 zmm15_1;
xor zmm15_2@uint64 zmm19_2 zmm15_2;
xor zmm15_3@uint64 zmm19_3 zmm15_3;
xor zmm15_4@uint64 zmm19_4 zmm15_4;
xor zmm15_5@uint64 zmm19_5 zmm15_5;
xor zmm15_6@uint64 zmm19_6 zmm15_6;
xor zmm15_7@uint64 zmm19_7 zmm15_7;
(* vpxord %zmm27,%zmm13,%zmm27                     #! PC = 0x55555558e2fa *)
xor zmm27_0@uint64 zmm13_0 zmm27_0;
xor zmm27_1@uint64 zmm13_1 zmm27_1;
xor zmm27_2@uint64 zmm13_2 zmm27_2;
xor zmm27_3@uint64 zmm13_3 zmm27_3;
xor zmm27_4@uint64 zmm13_4 zmm27_4;
xor zmm27_5@uint64 zmm13_5 zmm27_5;
xor zmm27_6@uint64 zmm13_6 zmm27_6;
xor zmm27_7@uint64 zmm13_7 zmm27_7;
(* vpxord %zmm16,%zmm19,%zmm16                     #! PC = 0x55555558e300 *)
xor zmm16_0@uint64 zmm19_0 zmm16_0;
xor zmm16_1@uint64 zmm19_1 zmm16_1;
xor zmm16_2@uint64 zmm19_2 zmm16_2;
xor zmm16_3@uint64 zmm19_3 zmm16_3;
xor zmm16_4@uint64 zmm19_4 zmm16_4;
xor zmm16_5@uint64 zmm19_5 zmm16_5;
xor zmm16_6@uint64 zmm19_6 zmm16_6;
xor zmm16_7@uint64 zmm19_7 zmm16_7;
(* vprolq $0x1,%zmm27,%zmm27                       #! PC = 0x55555558e306 *)
rol zmm27_0 zmm27_0 0x1;
rol zmm27_1 zmm27_1 0x1;
rol zmm27_2 zmm27_2 0x1;
rol zmm27_3 zmm27_3 0x1;
rol zmm27_4 zmm27_4 0x1;
rol zmm27_5 zmm27_5 0x1;
rol zmm27_6 zmm27_6 0x1;
rol zmm27_7 zmm27_7 0x1;
(* vprolq $0x6,%zmm16,%zmm16                       #! PC = 0x55555558e30d *)
rol zmm16_0 zmm16_0 0x6;
rol zmm16_1 zmm16_1 0x6;
rol zmm16_2 zmm16_2 0x6;
rol zmm16_3 zmm16_3 0x6;
rol zmm16_4 zmm16_4 0x6;
rol zmm16_5 zmm16_5 0x6;
rol zmm16_6 zmm16_6 0x6;
rol zmm16_7 zmm16_7 0x6;
(* vprolq $0x3,%zmm18,%zmm18                       #! PC = 0x55555558e314 *)
rol zmm18_0 zmm18_0 0x3;
rol zmm18_1 zmm18_1 0x3;
rol zmm18_2 zmm18_2 0x3;
rol zmm18_3 zmm18_3 0x3;
rol zmm18_4 zmm18_4 0x3;
rol zmm18_5 zmm18_5 0x3;
rol zmm18_6 zmm18_6 0x3;
rol zmm18_7 zmm18_7 0x3;
(* vprorq $0x13,%zmm12,%zmm12                      #! PC = 0x55555558e31b *)
ror zmm12_0 zmm12_0 0x13;
ror zmm12_1 zmm12_1 0x13;
ror zmm12_2 zmm12_2 0x13;
ror zmm12_3 zmm12_3 0x13;
ror zmm12_4 zmm12_4 0x13;
ror zmm12_5 zmm12_5 0x13;
ror zmm12_6 zmm12_6 0x13;
ror zmm12_7 zmm12_7 0x13;
(* vprorq $0x3,%zmm15,%zmm15                       #! PC = 0x55555558e322 *)
ror zmm15_0 zmm15_0 0x3;
ror zmm15_1 zmm15_1 0x3;
ror zmm15_2 zmm15_2 0x3;
ror zmm15_3 zmm15_3 0x3;
ror zmm15_4 zmm15_4 0x3;
ror zmm15_5 zmm15_5 0x3;
ror zmm15_6 zmm15_6 0x3;
ror zmm15_7 zmm15_7 0x3;
(* vpxord %zmm21,%zmm5,%zmm21                      #! PC = 0x55555558e329 *)
xor zmm21_0@uint64 zmm5_0 zmm21_0;
xor zmm21_1@uint64 zmm5_1 zmm21_1;
xor zmm21_2@uint64 zmm5_2 zmm21_2;
xor zmm21_3@uint64 zmm5_3 zmm21_3;
xor zmm21_4@uint64 zmm5_4 zmm21_4;
xor zmm21_5@uint64 zmm5_5 zmm21_5;
xor zmm21_6@uint64 zmm5_6 zmm21_6;
xor zmm21_7@uint64 zmm5_7 zmm21_7;
(* vpxord %zmm3,%zmm20,%zmm3                       #! PC = 0x55555558e32f *)
xor zmm3_0@uint64 zmm20_0 zmm3_0;
xor zmm3_1@uint64 zmm20_1 zmm3_1;
xor zmm3_2@uint64 zmm20_2 zmm3_2;
xor zmm3_3@uint64 zmm20_3 zmm3_3;
xor zmm3_4@uint64 zmm20_4 zmm3_4;
xor zmm3_5@uint64 zmm20_5 zmm3_5;
xor zmm3_6@uint64 zmm20_6 zmm3_6;
xor zmm3_7@uint64 zmm20_7 zmm3_7;
(* vpxord %zmm2,%zmm17,%zmm2                       #! PC = 0x55555558e335 *)
xor zmm2_0@uint64 zmm17_0 zmm2_0;
xor zmm2_1@uint64 zmm17_1 zmm2_1;
xor zmm2_2@uint64 zmm17_2 zmm2_2;
xor zmm2_3@uint64 zmm17_3 zmm2_3;
xor zmm2_4@uint64 zmm17_4 zmm2_4;
xor zmm2_5@uint64 zmm17_5 zmm2_5;
xor zmm2_6@uint64 zmm17_6 zmm2_6;
xor zmm2_7@uint64 zmm17_7 zmm2_7;
(* vpxord %zmm29,%zmm5,%zmm29                      #! PC = 0x55555558e33b *)
xor zmm29_0@uint64 zmm5_0 zmm29_0;
xor zmm29_1@uint64 zmm5_1 zmm29_1;
xor zmm29_2@uint64 zmm5_2 zmm29_2;
xor zmm29_3@uint64 zmm5_3 zmm29_3;
xor zmm29_4@uint64 zmm5_4 zmm29_4;
xor zmm29_5@uint64 zmm5_5 zmm29_5;
xor zmm29_6@uint64 zmm5_6 zmm29_6;
xor zmm29_7@uint64 zmm5_7 zmm29_7;
(* vpxord %zmm8,%zmm17,%zmm8                       #! PC = 0x55555558e341 *)
xor zmm8_0@uint64 zmm17_0 zmm8_0;
xor zmm8_1@uint64 zmm17_1 zmm8_1;
xor zmm8_2@uint64 zmm17_2 zmm8_2;
xor zmm8_3@uint64 zmm17_3 zmm8_3;
xor zmm8_4@uint64 zmm17_4 zmm8_4;
xor zmm8_5@uint64 zmm17_5 zmm8_5;
xor zmm8_6@uint64 zmm17_6 zmm8_6;
xor zmm8_7@uint64 zmm17_7 zmm8_7;
(* vprorq $0x1c,%zmm29,%zmm29                      #! PC = 0x55555558e347 *)
ror zmm29_0 zmm29_0 0x1c;
ror zmm29_1 zmm29_1 0x1c;
ror zmm29_2 zmm29_2 0x1c;
ror zmm29_3 zmm29_3 0x1c;
ror zmm29_4 zmm29_4 0x1c;
ror zmm29_5 zmm29_5 0x1c;
ror zmm29_6 zmm29_6 0x1c;
ror zmm29_7 zmm29_7 0x1c;
(* vprolq $0x1b,%zmm8,%zmm8                        #! PC = 0x55555558e34e *)
rol zmm8_0 zmm8_0 0x1b;
rol zmm8_1 zmm8_1 0x1b;
rol zmm8_2 zmm8_2 0x1b;
rol zmm8_3 zmm8_3 0x1b;
rol zmm8_4 zmm8_4 0x1b;
rol zmm8_5 zmm8_5 0x1b;
rol zmm8_6 zmm8_6 0x1b;
rol zmm8_7 zmm8_7 0x1b;
(* vprolq $0x12,%zmm21,%zmm21                      #! PC = 0x55555558e355 *)
rol zmm21_0 zmm21_0 0x12;
rol zmm21_1 zmm21_1 0x12;
rol zmm21_2 zmm21_2 0x12;
rol zmm21_3 zmm21_3 0x12;
rol zmm21_4 zmm21_4 0x12;
rol zmm21_5 zmm21_5 0x12;
rol zmm21_6 zmm21_6 0x12;
rol zmm21_7 zmm21_7 0x12;
(* vprolq $0x19,%zmm3,%zmm3                        #! PC = 0x55555558e35c *)
rol zmm3_0 zmm3_0 0x19;
rol zmm3_1 zmm3_1 0x19;
rol zmm3_2 zmm3_2 0x19;
rol zmm3_3 zmm3_3 0x19;
rol zmm3_4 zmm3_4 0x19;
rol zmm3_5 zmm3_5 0x19;
rol zmm3_6 zmm3_6 0x19;
rol zmm3_7 zmm3_7 0x19;
(* vprolq $0x8,%zmm2,%zmm2                         #! PC = 0x55555558e363 *)
rol zmm2_0 zmm2_0 0x8;
rol zmm2_1 zmm2_1 0x8;
rol zmm2_2 zmm2_2 0x8;
rol zmm2_3 zmm2_3 0x8;
rol zmm2_4 zmm2_4 0x8;
rol zmm2_5 zmm2_5 0x8;
rol zmm2_6 zmm2_6 0x8;
rol zmm2_7 zmm2_7 0x8;
(* vpxord %zmm7,%zmm13,%zmm7                       #! PC = 0x55555558e36a *)
xor zmm7_0@uint64 zmm13_0 zmm7_0;
xor zmm7_1@uint64 zmm13_1 zmm7_1;
xor zmm7_2@uint64 zmm13_2 zmm7_2;
xor zmm7_3@uint64 zmm13_3 zmm7_3;
xor zmm7_4@uint64 zmm13_4 zmm7_4;
xor zmm7_5@uint64 zmm13_5 zmm7_5;
xor zmm7_6@uint64 zmm13_6 zmm7_6;
xor zmm7_7@uint64 zmm13_7 zmm7_7;
(* vpxord %zmm9,%zmm19,%zmm9                       #! PC = 0x55555558e370 *)
xor zmm9_0@uint64 zmm19_0 zmm9_0;
xor zmm9_1@uint64 zmm19_1 zmm9_1;
xor zmm9_2@uint64 zmm19_2 zmm9_2;
xor zmm9_3@uint64 zmm19_3 zmm9_3;
xor zmm9_4@uint64 zmm19_4 zmm9_4;
xor zmm9_5@uint64 zmm19_5 zmm9_5;
xor zmm9_6@uint64 zmm19_6 zmm9_6;
xor zmm9_7@uint64 zmm19_7 zmm9_7;
(* vpxord %zmm1,%zmm20,%zmm1                       #! PC = 0x55555558e376 *)
xor zmm1_0@uint64 zmm20_0 zmm1_0;
xor zmm1_1@uint64 zmm20_1 zmm1_1;
xor zmm1_2@uint64 zmm20_2 zmm1_2;
xor zmm1_3@uint64 zmm20_3 zmm1_3;
xor zmm1_4@uint64 zmm20_4 zmm1_4;
xor zmm1_5@uint64 zmm20_5 zmm1_5;
xor zmm1_6@uint64 zmm20_6 zmm1_6;
xor zmm1_7@uint64 zmm20_7 zmm1_7;
(* vpxord %zmm0,%zmm19,%zmm19                      #! PC = 0x55555558e37c *)
xor zmm19_0@uint64 zmm19_0 zmm0_0;
xor zmm19_1@uint64 zmm19_1 zmm0_1;
xor zmm19_2@uint64 zmm19_2 zmm0_2;
xor zmm19_3@uint64 zmm19_3 zmm0_3;
xor zmm19_4@uint64 zmm19_4 zmm0_4;
xor zmm19_5@uint64 zmm19_5 zmm0_5;
xor zmm19_6@uint64 zmm19_6 zmm0_6;
xor zmm19_7@uint64 zmm19_7 zmm0_7;
(* vpxord %zmm22,%zmm20,%zmm20                     #! PC = 0x55555558e382 *)
xor zmm20_0@uint64 zmm20_0 zmm22_0;
xor zmm20_1@uint64 zmm20_1 zmm22_1;
xor zmm20_2@uint64 zmm20_2 zmm22_2;
xor zmm20_3@uint64 zmm20_3 zmm22_3;
xor zmm20_4@uint64 zmm20_4 zmm22_4;
xor zmm20_5@uint64 zmm20_5 zmm22_5;
xor zmm20_6@uint64 zmm20_6 zmm22_6;
xor zmm20_7@uint64 zmm20_7 zmm22_7;
(* vpxord %zmm24,%zmm5,%zmm24                      #! PC = 0x55555558e388 *)
xor zmm24_0@uint64 zmm5_0 zmm24_0;
xor zmm24_1@uint64 zmm5_1 zmm24_1;
xor zmm24_2@uint64 zmm5_2 zmm24_2;
xor zmm24_3@uint64 zmm5_3 zmm24_3;
xor zmm24_4@uint64 zmm5_4 zmm24_4;
xor zmm24_5@uint64 zmm5_5 zmm24_5;
xor zmm24_6@uint64 zmm5_6 zmm24_6;
xor zmm24_7@uint64 zmm5_7 zmm24_7;
(* vprorq $0x2,%zmm19,%zmm19                       #! PC = 0x55555558e38e *)
ror zmm19_0 zmm19_0 0x2;
ror zmm19_1 zmm19_1 0x2;
ror zmm19_2 zmm19_2 0x2;
ror zmm19_3 zmm19_3 0x2;
ror zmm19_4 zmm19_4 0x2;
ror zmm19_5 zmm19_5 0x2;
ror zmm19_6 zmm19_6 0x2;
ror zmm19_7 zmm19_7 0x2;
(* vprorq $0x9,%zmm20,%zmm20                       #! PC = 0x55555558e395 *)
ror zmm20_0 zmm20_0 0x9;
ror zmm20_1 zmm20_1 0x9;
ror zmm20_2 zmm20_2 0x9;
ror zmm20_3 zmm20_3 0x9;
ror zmm20_4 zmm20_4 0x9;
ror zmm20_5 zmm20_5 0x9;
ror zmm20_6 zmm20_6 0x9;
ror zmm20_7 zmm20_7 0x9;
(* vprolq $0xa,%zmm7,%zmm7                         #! PC = 0x55555558e39c *)
rol zmm7_0 zmm7_0 0xa;
rol zmm7_1 zmm7_1 0xa;
rol zmm7_2 zmm7_2 0xa;
rol zmm7_3 zmm7_3 0xa;
rol zmm7_4 zmm7_4 0xa;
rol zmm7_5 zmm7_5 0xa;
rol zmm7_6 zmm7_6 0xa;
rol zmm7_7 zmm7_7 0xa;
(* vprolq $0xf,%zmm9,%zmm9                         #! PC = 0x55555558e3a3 *)
rol zmm9_0 zmm9_0 0xf;
rol zmm9_1 zmm9_1 0xf;
rol zmm9_2 zmm9_2 0xf;
rol zmm9_3 zmm9_3 0xf;
rol zmm9_4 zmm9_4 0xf;
rol zmm9_5 zmm9_5 0xf;
rol zmm9_6 zmm9_6 0xf;
rol zmm9_7 zmm9_7 0xf;
(* vprorq $0x8,%zmm1,%zmm1                         #! PC = 0x55555558e3aa *)
ror zmm1_0 zmm1_0 0x8;
ror zmm1_1 zmm1_1 0x8;
ror zmm1_2 zmm1_2 0x8;
ror zmm1_3 zmm1_3 0x8;
ror zmm1_4 zmm1_4 0x8;
ror zmm1_5 zmm1_5 0x8;
ror zmm1_6 zmm1_6 0x8;
ror zmm1_7 zmm1_7 0x8;
(* vpxord %zmm23,%zmm5,%zmm5                       #! PC = 0x55555558e3b1 *)
xor zmm5_0@uint64 zmm5_0 zmm23_0;
xor zmm5_1@uint64 zmm5_1 zmm23_1;
xor zmm5_2@uint64 zmm5_2 zmm23_2;
xor zmm5_3@uint64 zmm5_3 zmm23_3;
xor zmm5_4@uint64 zmm5_4 zmm23_4;
xor zmm5_5@uint64 zmm5_5 zmm23_5;
xor zmm5_6@uint64 zmm5_6 zmm23_6;
xor zmm5_7@uint64 zmm5_7 zmm23_7;
(* vpxord %zmm31,%zmm13,%zmm13                     #! PC = 0x55555558e3b7 *)
xor zmm13_0@uint64 zmm13_0 zmm31_0;
xor zmm13_1@uint64 zmm13_1 zmm31_1;
xor zmm13_2@uint64 zmm13_2 zmm31_2;
xor zmm13_3@uint64 zmm13_3 zmm31_3;
xor zmm13_4@uint64 zmm13_4 zmm31_4;
xor zmm13_5@uint64 zmm13_5 zmm31_5;
xor zmm13_6@uint64 zmm13_6 zmm31_6;
xor zmm13_7@uint64 zmm13_7 zmm31_7;
(* vpxord %zmm25,%zmm17,%zmm17                     #! PC = 0x55555558e3bd *)
xor zmm17_0@uint64 zmm17_0 zmm25_0;
xor zmm17_1@uint64 zmm17_1 zmm25_1;
xor zmm17_2@uint64 zmm17_2 zmm25_2;
xor zmm17_3@uint64 zmm17_3 zmm25_3;
xor zmm17_4@uint64 zmm17_4 zmm25_4;
xor zmm17_5@uint64 zmm17_5 zmm25_5;
xor zmm17_6@uint64 zmm17_6 zmm25_6;
xor zmm17_7@uint64 zmm17_7 zmm25_7;
(* vprorq $0x17,%zmm5,%zmm5                        #! PC = 0x55555558e3c3 *)
ror zmm5_0 zmm5_0 0x17;
ror zmm5_1 zmm5_1 0x17;
ror zmm5_2 zmm5_2 0x17;
ror zmm5_3 zmm5_3 0x17;
ror zmm5_4 zmm5_4 0x17;
ror zmm5_5 zmm5_5 0x17;
ror zmm5_6 zmm5_6 0x17;
ror zmm5_7 zmm5_7 0x17;
(* vprolq $0x2,%zmm13,%zmm13                       #! PC = 0x55555558e3ca *)
rol zmm13_0 zmm13_0 0x2;
rol zmm13_1 zmm13_1 0x2;
rol zmm13_2 zmm13_2 0x2;
rol zmm13_3 zmm13_3 0x2;
rol zmm13_4 zmm13_4 0x2;
rol zmm13_5 zmm13_5 0x2;
rol zmm13_6 zmm13_6 0x2;
rol zmm13_7 zmm13_7 0x2;
(* vprorq $0x19,%zmm17,%zmm17                      #! PC = 0x55555558e3d1 *)
ror zmm17_0 zmm17_0 0x19;
ror zmm17_1 zmm17_1 0x19;
ror zmm17_2 zmm17_2 0x19;
ror zmm17_3 zmm17_3 0x19;
ror zmm17_4 zmm17_4 0x19;
ror zmm17_5 zmm17_5 0x19;
ror zmm17_6 zmm17_6 0x19;
ror zmm17_7 zmm17_7 0x19;
(* vmovdqa64 %zmm24,%zmm28                         #! PC = 0x55555558e3d8 *)
mov zmm28_0 zmm24_0;
mov zmm28_1 zmm24_1;
mov zmm28_2 zmm24_2;
mov zmm28_3 zmm24_3;
mov zmm28_4 zmm24_4;
mov zmm28_5 zmm24_5;
mov zmm28_6 zmm24_6;
mov zmm28_7 zmm24_7;
(* vmovdqa64 %zmm30,%zmm26                         #! PC = 0x55555558e3de *)
mov zmm26_0 zmm30_0;
mov zmm26_1 zmm30_1;
mov zmm26_2 zmm30_2;
mov zmm26_3 zmm30_3;
mov zmm26_4 zmm30_4;
mov zmm26_5 zmm30_5;
mov zmm26_6 zmm30_6;
mov zmm26_7 zmm30_7;
(* vpternlogq $0xd2,%zmm4,%zmm30,%zmm28            #! PC = 0x55555558e3e4 *)
mov table 0xd2@uint8;
inline vpternlogq64 (zmm28_0, zmm30_0, zmm4_0, table);
inline vpternlogq64 (zmm28_1, zmm30_1, zmm4_1, table);
inline vpternlogq64 (zmm28_2, zmm30_2, zmm4_2, table);
inline vpternlogq64 (zmm28_3, zmm30_3, zmm4_3, table);
inline vpternlogq64 (zmm28_4, zmm30_4, zmm4_4, table);
inline vpternlogq64 (zmm28_5, zmm30_5, zmm4_5, table);
inline vpternlogq64 (zmm28_6, zmm30_6, zmm4_6, table);
inline vpternlogq64 (zmm28_7, zmm30_7, zmm4_7, table);
(* vpternlogq $0xd2,%zmm11,%zmm4,%zmm26            #! PC = 0x55555558e3eb *)
mov table 0xd2@uint8;
inline vpternlogq64 (zmm26_0, zmm4_0, zmm11_0, table);
inline vpternlogq64 (zmm26_1, zmm4_1, zmm11_1, table);
inline vpternlogq64 (zmm26_2, zmm4_2, zmm11_2, table);
inline vpternlogq64 (zmm26_3, zmm4_3, zmm11_3, table);
inline vpternlogq64 (zmm26_4, zmm4_4, zmm11_4, table);
inline vpternlogq64 (zmm26_5, zmm4_5, zmm11_5, table);
inline vpternlogq64 (zmm26_6, zmm4_6, zmm11_6, table);
inline vpternlogq64 (zmm26_7, zmm4_7, zmm11_7, table);
(* vpternlogq $0xd2,%zmm14,%zmm11,%zmm4            #! PC = 0x55555558e3f2 *)
mov table 0xd2@uint8;
inline vpternlogq64 (zmm4_0, zmm11_0, zmm14_0, table);
inline vpternlogq64 (zmm4_1, zmm11_1, zmm14_1, table);
inline vpternlogq64 (zmm4_2, zmm11_2, zmm14_2, table);
inline vpternlogq64 (zmm4_3, zmm11_3, zmm14_3, table);
inline vpternlogq64 (zmm4_4, zmm11_4, zmm14_4, table);
inline vpternlogq64 (zmm4_5, zmm11_5, zmm14_5, table);
inline vpternlogq64 (zmm4_6, zmm11_6, zmm14_6, table);
inline vpternlogq64 (zmm4_7, zmm11_7, zmm14_7, table);
(* vpternlogq $0xd2,%zmm24,%zmm14,%zmm11           #! PC = 0x55555558e3f9 *)
mov table 0xd2@uint8;
inline vpternlogq64 (zmm11_0, zmm14_0, zmm24_0, table);
inline vpternlogq64 (zmm11_1, zmm14_1, zmm24_1, table);
inline vpternlogq64 (zmm11_2, zmm14_2, zmm24_2, table);
inline vpternlogq64 (zmm11_3, zmm14_3, zmm24_3, table);
inline vpternlogq64 (zmm11_4, zmm14_4, zmm24_4, table);
inline vpternlogq64 (zmm11_5, zmm14_5, zmm24_5, table);
inline vpternlogq64 (zmm11_6, zmm14_6, zmm24_6, table);
inline vpternlogq64 (zmm11_7, zmm14_7, zmm24_7, table);
(* vpternlogq $0xd2,%zmm30,%zmm24,%zmm14           #! PC = 0x55555558e400 *)
mov table 0xd2@uint8;
inline vpternlogq64 (zmm14_0, zmm24_0, zmm30_0, table);
inline vpternlogq64 (zmm14_1, zmm24_1, zmm30_1, table);
inline vpternlogq64 (zmm14_2, zmm24_2, zmm30_2, table);
inline vpternlogq64 (zmm14_3, zmm24_3, zmm30_3, table);
inline vpternlogq64 (zmm14_4, zmm24_4, zmm30_4, table);
inline vpternlogq64 (zmm14_5, zmm24_5, zmm30_5, table);
inline vpternlogq64 (zmm14_6, zmm24_6, zmm30_6, table);
inline vpternlogq64 (zmm14_7, zmm24_7, zmm30_7, table);
(* vpbroadcastq %rcx,%zmm24                        #! PC = 0x55555558e407 *)
mov zmm24_0 rcx;
mov zmm24_1 rcx;
mov zmm24_2 rcx;
mov zmm24_3 rcx;
mov zmm24_4 rcx;
mov zmm24_5 rcx;
mov zmm24_6 rcx;
mov zmm24_7 rcx;
(* vpxord %zmm24,%zmm28,%zmm24                     #! PC = 0x55555558e40d *)
xor zmm24_0@uint64 zmm28_0 zmm24_0;
xor zmm24_1@uint64 zmm28_1 zmm24_1;
xor zmm24_2@uint64 zmm28_2 zmm24_2;
xor zmm24_3@uint64 zmm28_3 zmm24_3;
xor zmm24_4@uint64 zmm28_4 zmm24_4;
xor zmm24_5@uint64 zmm28_5 zmm24_5;
xor zmm24_6@uint64 zmm28_6 zmm24_6;
xor zmm24_7@uint64 zmm28_7 zmm24_7;
(* vmovdqa64 %zmm10,%zmm30                         #! PC = 0x55555558e413 *)
mov zmm30_0 zmm10_0;
mov zmm30_1 zmm10_1;
mov zmm30_2 zmm10_2;
mov zmm30_3 zmm10_3;
mov zmm30_4 zmm10_4;
mov zmm30_5 zmm10_5;
mov zmm30_6 zmm10_6;
mov zmm30_7 zmm10_7;
(* vmovdqa64 %zmm6,%zmm28                          #! PC = 0x55555558e419 *)
mov zmm28_0 zmm6_0;
mov zmm28_1 zmm6_1;
mov zmm28_2 zmm6_2;
mov zmm28_3 zmm6_3;
mov zmm28_4 zmm6_4;
mov zmm28_5 zmm6_5;
mov zmm28_6 zmm6_6;
mov zmm28_7 zmm6_7;
(* vpternlogq $0xd2,%zmm18,%zmm10,%zmm28           #! PC = 0x55555558e41f *)
mov table 0xd2@uint8;
inline vpternlogq64 (zmm28_0, zmm10_0, zmm18_0, table);
inline vpternlogq64 (zmm28_1, zmm10_1, zmm18_1, table);
inline vpternlogq64 (zmm28_2, zmm10_2, zmm18_2, table);
inline vpternlogq64 (zmm28_3, zmm10_3, zmm18_3, table);
inline vpternlogq64 (zmm28_4, zmm10_4, zmm18_4, table);
inline vpternlogq64 (zmm28_5, zmm10_5, zmm18_5, table);
inline vpternlogq64 (zmm28_6, zmm10_6, zmm18_6, table);
inline vpternlogq64 (zmm28_7, zmm10_7, zmm18_7, table);
(* vpternlogq $0xd2,%zmm12,%zmm18,%zmm30           #! PC = 0x55555558e426 *)
mov table 0xd2@uint8;
inline vpternlogq64 (zmm30_0, zmm18_0, zmm12_0, table);
inline vpternlogq64 (zmm30_1, zmm18_1, zmm12_1, table);
inline vpternlogq64 (zmm30_2, zmm18_2, zmm12_2, table);
inline vpternlogq64 (zmm30_3, zmm18_3, zmm12_3, table);
inline vpternlogq64 (zmm30_4, zmm18_4, zmm12_4, table);
inline vpternlogq64 (zmm30_5, zmm18_5, zmm12_5, table);
inline vpternlogq64 (zmm30_6, zmm18_6, zmm12_6, table);
inline vpternlogq64 (zmm30_7, zmm18_7, zmm12_7, table);
(* vpternlogq $0xd2,%zmm15,%zmm12,%zmm18           #! PC = 0x55555558e42d *)
mov table 0xd2@uint8;
inline vpternlogq64 (zmm18_0, zmm12_0, zmm15_0, table);
inline vpternlogq64 (zmm18_1, zmm12_1, zmm15_1, table);
inline vpternlogq64 (zmm18_2, zmm12_2, zmm15_2, table);
inline vpternlogq64 (zmm18_3, zmm12_3, zmm15_3, table);
inline vpternlogq64 (zmm18_4, zmm12_4, zmm15_4, table);
inline vpternlogq64 (zmm18_5, zmm12_5, zmm15_5, table);
inline vpternlogq64 (zmm18_6, zmm12_6, zmm15_6, table);
inline vpternlogq64 (zmm18_7, zmm12_7, zmm15_7, table);
(* vpternlogq $0xd2,%zmm6,%zmm15,%zmm12            #! PC = 0x55555558e434 *)
mov table 0xd2@uint8;
inline vpternlogq64 (zmm12_0, zmm15_0, zmm6_0, table);
inline vpternlogq64 (zmm12_1, zmm15_1, zmm6_1, table);
inline vpternlogq64 (zmm12_2, zmm15_2, zmm6_2, table);
inline vpternlogq64 (zmm12_3, zmm15_3, zmm6_3, table);
inline vpternlogq64 (zmm12_4, zmm15_4, zmm6_4, table);
inline vpternlogq64 (zmm12_5, zmm15_5, zmm6_5, table);
inline vpternlogq64 (zmm12_6, zmm15_6, zmm6_6, table);
inline vpternlogq64 (zmm12_7, zmm15_7, zmm6_7, table);
(* vpternlogq $0xd2,%zmm10,%zmm6,%zmm15            #! PC = 0x55555558e43b *)
mov table 0xd2@uint8;
inline vpternlogq64 (zmm15_0, zmm6_0, zmm10_0, table);
inline vpternlogq64 (zmm15_1, zmm6_1, zmm10_1, table);
inline vpternlogq64 (zmm15_2, zmm6_2, zmm10_2, table);
inline vpternlogq64 (zmm15_3, zmm6_3, zmm10_3, table);
inline vpternlogq64 (zmm15_4, zmm6_4, zmm10_4, table);
inline vpternlogq64 (zmm15_5, zmm6_5, zmm10_5, table);
inline vpternlogq64 (zmm15_6, zmm6_6, zmm10_6, table);
inline vpternlogq64 (zmm15_7, zmm6_7, zmm10_7, table);
(* vmovdqa64 %zmm27,%zmm10                         #! PC = 0x55555558e442 *)
mov zmm10_0 zmm27_0;
mov zmm10_1 zmm27_1;
mov zmm10_2 zmm27_2;
mov zmm10_3 zmm27_3;
mov zmm10_4 zmm27_4;
mov zmm10_5 zmm27_5;
mov zmm10_6 zmm27_6;
mov zmm10_7 zmm27_7;
(* vmovdqa64 %zmm16,%zmm6                          #! PC = 0x55555558e448 *)
mov zmm6_0 zmm16_0;
mov zmm6_1 zmm16_1;
mov zmm6_2 zmm16_2;
mov zmm6_3 zmm16_3;
mov zmm6_4 zmm16_4;
mov zmm6_5 zmm16_5;
mov zmm6_6 zmm16_6;
mov zmm6_7 zmm16_7;
(* vpternlogq $0xd2,%zmm3,%zmm16,%zmm10            #! PC = 0x55555558e44e *)
mov table 0xd2@uint8;
inline vpternlogq64 (zmm10_0, zmm16_0, zmm3_0, table);
inline vpternlogq64 (zmm10_1, zmm16_1, zmm3_1, table);
inline vpternlogq64 (zmm10_2, zmm16_2, zmm3_2, table);
inline vpternlogq64 (zmm10_3, zmm16_3, zmm3_3, table);
inline vpternlogq64 (zmm10_4, zmm16_4, zmm3_4, table);
inline vpternlogq64 (zmm10_5, zmm16_5, zmm3_5, table);
inline vpternlogq64 (zmm10_6, zmm16_6, zmm3_6, table);
inline vpternlogq64 (zmm10_7, zmm16_7, zmm3_7, table);
(* vpternlogq $0xd2,%zmm2,%zmm3,%zmm6              #! PC = 0x55555558e455 *)
mov table 0xd2@uint8;
inline vpternlogq64 (zmm6_0, zmm3_0, zmm2_0, table);
inline vpternlogq64 (zmm6_1, zmm3_1, zmm2_1, table);
inline vpternlogq64 (zmm6_2, zmm3_2, zmm2_2, table);
inline vpternlogq64 (zmm6_3, zmm3_3, zmm2_3, table);
inline vpternlogq64 (zmm6_4, zmm3_4, zmm2_4, table);
inline vpternlogq64 (zmm6_5, zmm3_5, zmm2_5, table);
inline vpternlogq64 (zmm6_6, zmm3_6, zmm2_6, table);
inline vpternlogq64 (zmm6_7, zmm3_7, zmm2_7, table);
(* vpternlogq $0xd2,%zmm21,%zmm2,%zmm3             #! PC = 0x55555558e45c *)
mov table 0xd2@uint8;
inline vpternlogq64 (zmm3_0, zmm2_0, zmm21_0, table);
inline vpternlogq64 (zmm3_1, zmm2_1, zmm21_1, table);
inline vpternlogq64 (zmm3_2, zmm2_2, zmm21_2, table);
inline vpternlogq64 (zmm3_3, zmm2_3, zmm21_3, table);
inline vpternlogq64 (zmm3_4, zmm2_4, zmm21_4, table);
inline vpternlogq64 (zmm3_5, zmm2_5, zmm21_5, table);
inline vpternlogq64 (zmm3_6, zmm2_6, zmm21_6, table);
inline vpternlogq64 (zmm3_7, zmm2_7, zmm21_7, table);
(* vpternlogq $0xd2,%zmm27,%zmm21,%zmm2            #! PC = 0x55555558e463 *)
mov table 0xd2@uint8;
inline vpternlogq64 (zmm2_0, zmm21_0, zmm27_0, table);
inline vpternlogq64 (zmm2_1, zmm21_1, zmm27_1, table);
inline vpternlogq64 (zmm2_2, zmm21_2, zmm27_2, table);
inline vpternlogq64 (zmm2_3, zmm21_3, zmm27_3, table);
inline vpternlogq64 (zmm2_4, zmm21_4, zmm27_4, table);
inline vpternlogq64 (zmm2_5, zmm21_5, zmm27_5, table);
inline vpternlogq64 (zmm2_6, zmm21_6, zmm27_6, table);
inline vpternlogq64 (zmm2_7, zmm21_7, zmm27_7, table);
(* vpternlogq $0xd2,%zmm16,%zmm27,%zmm21           #! PC = 0x55555558e46a *)
mov table 0xd2@uint8;
inline vpternlogq64 (zmm21_0, zmm27_0, zmm16_0, table);
inline vpternlogq64 (zmm21_1, zmm27_1, zmm16_1, table);
inline vpternlogq64 (zmm21_2, zmm27_2, zmm16_2, table);
inline vpternlogq64 (zmm21_3, zmm27_3, zmm16_3, table);
inline vpternlogq64 (zmm21_4, zmm27_4, zmm16_4, table);
inline vpternlogq64 (zmm21_5, zmm27_5, zmm16_5, table);
inline vpternlogq64 (zmm21_6, zmm27_6, zmm16_6, table);
inline vpternlogq64 (zmm21_7, zmm27_7, zmm16_7, table);
(* vmovdqa64 %zmm8,%zmm27                          #! PC = 0x55555558e471 *)
mov zmm27_0 zmm8_0;
mov zmm27_1 zmm8_1;
mov zmm27_2 zmm8_2;
mov zmm27_3 zmm8_3;
mov zmm27_4 zmm8_4;
mov zmm27_5 zmm8_5;
mov zmm27_6 zmm8_6;
mov zmm27_7 zmm8_7;
(* vmovdqa64 %zmm29,%zmm16                         #! PC = 0x55555558e477 *)
mov zmm16_0 zmm29_0;
mov zmm16_1 zmm29_1;
mov zmm16_2 zmm29_2;
mov zmm16_3 zmm29_3;
mov zmm16_4 zmm29_4;
mov zmm16_5 zmm29_5;
mov zmm16_6 zmm29_6;
mov zmm16_7 zmm29_7;
(* vpternlogq $0xd2,%zmm7,%zmm29,%zmm27            #! PC = 0x55555558e47d *)
mov table 0xd2@uint8;
inline vpternlogq64 (zmm27_0, zmm29_0, zmm7_0, table);
inline vpternlogq64 (zmm27_1, zmm29_1, zmm7_1, table);
inline vpternlogq64 (zmm27_2, zmm29_2, zmm7_2, table);
inline vpternlogq64 (zmm27_3, zmm29_3, zmm7_3, table);
inline vpternlogq64 (zmm27_4, zmm29_4, zmm7_4, table);
inline vpternlogq64 (zmm27_5, zmm29_5, zmm7_5, table);
inline vpternlogq64 (zmm27_6, zmm29_6, zmm7_6, table);
inline vpternlogq64 (zmm27_7, zmm29_7, zmm7_7, table);
(* vpternlogq $0xd2,%zmm9,%zmm7,%zmm16             #! PC = 0x55555558e484 *)
mov table 0xd2@uint8;
inline vpternlogq64 (zmm16_0, zmm7_0, zmm9_0, table);
inline vpternlogq64 (zmm16_1, zmm7_1, zmm9_1, table);
inline vpternlogq64 (zmm16_2, zmm7_2, zmm9_2, table);
inline vpternlogq64 (zmm16_3, zmm7_3, zmm9_3, table);
inline vpternlogq64 (zmm16_4, zmm7_4, zmm9_4, table);
inline vpternlogq64 (zmm16_5, zmm7_5, zmm9_5, table);
inline vpternlogq64 (zmm16_6, zmm7_6, zmm9_6, table);
inline vpternlogq64 (zmm16_7, zmm7_7, zmm9_7, table);
(* vmovdqa64 %zmm19,%zmm23                         #! PC = 0x55555558e48b *)
mov zmm23_0 zmm19_0;
mov zmm23_1 zmm19_1;
mov zmm23_2 zmm19_2;
mov zmm23_3 zmm19_3;
mov zmm23_4 zmm19_4;
mov zmm23_5 zmm19_5;
mov zmm23_6 zmm19_6;
mov zmm23_7 zmm19_7;
(* vpternlogq $0xd2,%zmm1,%zmm9,%zmm7              #! PC = 0x55555558e491 *)
mov table 0xd2@uint8;
inline vpternlogq64 (zmm7_0, zmm9_0, zmm1_0, table);
inline vpternlogq64 (zmm7_1, zmm9_1, zmm1_1, table);
inline vpternlogq64 (zmm7_2, zmm9_2, zmm1_2, table);
inline vpternlogq64 (zmm7_3, zmm9_3, zmm1_3, table);
inline vpternlogq64 (zmm7_4, zmm9_4, zmm1_4, table);
inline vpternlogq64 (zmm7_5, zmm9_5, zmm1_5, table);
inline vpternlogq64 (zmm7_6, zmm9_6, zmm1_6, table);
inline vpternlogq64 (zmm7_7, zmm9_7, zmm1_7, table);
(* vpternlogq $0xd2,%zmm8,%zmm1,%zmm9              #! PC = 0x55555558e498 *)
mov table 0xd2@uint8;
inline vpternlogq64 (zmm9_0, zmm1_0, zmm8_0, table);
inline vpternlogq64 (zmm9_1, zmm1_1, zmm8_1, table);
inline vpternlogq64 (zmm9_2, zmm1_2, zmm8_2, table);
inline vpternlogq64 (zmm9_3, zmm1_3, zmm8_3, table);
inline vpternlogq64 (zmm9_4, zmm1_4, zmm8_4, table);
inline vpternlogq64 (zmm9_5, zmm1_5, zmm8_5, table);
inline vpternlogq64 (zmm9_6, zmm1_6, zmm8_6, table);
inline vpternlogq64 (zmm9_7, zmm1_7, zmm8_7, table);
(* vpternlogq $0xd2,%zmm29,%zmm8,%zmm1             #! PC = 0x55555558e49f *)
mov table 0xd2@uint8;
inline vpternlogq64 (zmm1_0, zmm8_0, zmm29_0, table);
inline vpternlogq64 (zmm1_1, zmm8_1, zmm29_1, table);
inline vpternlogq64 (zmm1_2, zmm8_2, zmm29_2, table);
inline vpternlogq64 (zmm1_3, zmm8_3, zmm29_3, table);
inline vpternlogq64 (zmm1_4, zmm8_4, zmm29_4, table);
inline vpternlogq64 (zmm1_5, zmm8_5, zmm29_5, table);
inline vpternlogq64 (zmm1_6, zmm8_6, zmm29_6, table);
inline vpternlogq64 (zmm1_7, zmm8_7, zmm29_7, table);
(* vmovdqa64 %zmm20,%zmm29                         #! PC = 0x55555558e4a6 *)
mov zmm29_0 zmm20_0;
mov zmm29_1 zmm20_1;
mov zmm29_2 zmm20_2;
mov zmm29_3 zmm20_3;
mov zmm29_4 zmm20_4;
mov zmm29_5 zmm20_5;
mov zmm29_6 zmm20_6;
mov zmm29_7 zmm20_7;
(* vpternlogq $0xd2,%zmm5,%zmm17,%zmm29            #! PC = 0x55555558e4ac *)
mov table 0xd2@uint8;
inline vpternlogq64 (zmm29_0, zmm17_0, zmm5_0, table);
inline vpternlogq64 (zmm29_1, zmm17_1, zmm5_1, table);
inline vpternlogq64 (zmm29_2, zmm17_2, zmm5_2, table);
inline vpternlogq64 (zmm29_3, zmm17_3, zmm5_3, table);
inline vpternlogq64 (zmm29_4, zmm17_4, zmm5_4, table);
inline vpternlogq64 (zmm29_5, zmm17_5, zmm5_5, table);
inline vpternlogq64 (zmm29_6, zmm17_6, zmm5_6, table);
inline vpternlogq64 (zmm29_7, zmm17_7, zmm5_7, table);
(* vpternlogq $0xd2,%zmm17,%zmm20,%zmm23           #! PC = 0x55555558e4b3 *)
mov table 0xd2@uint8;
inline vpternlogq64 (zmm23_0, zmm20_0, zmm17_0, table);
inline vpternlogq64 (zmm23_1, zmm20_1, zmm17_1, table);
inline vpternlogq64 (zmm23_2, zmm20_2, zmm17_2, table);
inline vpternlogq64 (zmm23_3, zmm20_3, zmm17_3, table);
inline vpternlogq64 (zmm23_4, zmm20_4, zmm17_4, table);
inline vpternlogq64 (zmm23_5, zmm20_5, zmm17_5, table);
inline vpternlogq64 (zmm23_6, zmm20_6, zmm17_6, table);
inline vpternlogq64 (zmm23_7, zmm20_7, zmm17_7, table);
(* vmovdqa64 %zmm3,%zmm22                          #! PC = 0x55555558e4ba *)
mov zmm22_0 zmm3_0;
mov zmm22_1 zmm3_1;
mov zmm22_2 zmm3_2;
mov zmm22_3 zmm3_3;
mov zmm22_4 zmm3_4;
mov zmm22_5 zmm3_5;
mov zmm22_6 zmm3_6;
mov zmm22_7 zmm3_7;
(* vpternlogq $0xd2,%zmm13,%zmm5,%zmm17            #! PC = 0x55555558e4c0 *)
mov table 0xd2@uint8;
inline vpternlogq64 (zmm17_0, zmm5_0, zmm13_0, table);
inline vpternlogq64 (zmm17_1, zmm5_1, zmm13_1, table);
inline vpternlogq64 (zmm17_2, zmm5_2, zmm13_2, table);
inline vpternlogq64 (zmm17_3, zmm5_3, zmm13_3, table);
inline vpternlogq64 (zmm17_4, zmm5_4, zmm13_4, table);
inline vpternlogq64 (zmm17_5, zmm5_5, zmm13_5, table);
inline vpternlogq64 (zmm17_6, zmm5_6, zmm13_6, table);
inline vpternlogq64 (zmm17_7, zmm5_7, zmm13_7, table);
(* vpternlogq $0x96,%zmm18,%zmm17,%zmm22           #! PC = 0x55555558e4c7 *)
mov table 0x96@uint8;
inline vpternlogq64 (zmm22_0, zmm17_0, zmm18_0, table);
inline vpternlogq64 (zmm22_1, zmm17_1, zmm18_1, table);
inline vpternlogq64 (zmm22_2, zmm17_2, zmm18_2, table);
inline vpternlogq64 (zmm22_3, zmm17_3, zmm18_3, table);
inline vpternlogq64 (zmm22_4, zmm17_4, zmm18_4, table);
inline vpternlogq64 (zmm22_5, zmm17_5, zmm18_5, table);
inline vpternlogq64 (zmm22_6, zmm17_6, zmm18_6, table);
inline vpternlogq64 (zmm22_7, zmm17_7, zmm18_7, table);
(* vpternlogq $0x96,%zmm4,%zmm7,%zmm22             #! PC = 0x55555558e4ce *)
mov table 0x96@uint8;
inline vpternlogq64 (zmm22_0, zmm7_0, zmm4_0, table);
inline vpternlogq64 (zmm22_1, zmm7_1, zmm4_1, table);
inline vpternlogq64 (zmm22_2, zmm7_2, zmm4_2, table);
inline vpternlogq64 (zmm22_3, zmm7_3, zmm4_3, table);
inline vpternlogq64 (zmm22_4, zmm7_4, zmm4_4, table);
inline vpternlogq64 (zmm22_5, zmm7_5, zmm4_5, table);
inline vpternlogq64 (zmm22_6, zmm7_6, zmm4_6, table);
inline vpternlogq64 (zmm22_7, zmm7_7, zmm4_7, table);
(* vpternlogq $0xd2,%zmm19,%zmm13,%zmm5            #! PC = 0x55555558e4d5 *)
mov table 0xd2@uint8;
inline vpternlogq64 (zmm5_0, zmm13_0, zmm19_0, table);
inline vpternlogq64 (zmm5_1, zmm13_1, zmm19_1, table);
inline vpternlogq64 (zmm5_2, zmm13_2, zmm19_2, table);
inline vpternlogq64 (zmm5_3, zmm13_3, zmm19_3, table);
inline vpternlogq64 (zmm5_4, zmm13_4, zmm19_4, table);
inline vpternlogq64 (zmm5_5, zmm13_5, zmm19_5, table);
inline vpternlogq64 (zmm5_6, zmm13_6, zmm19_6, table);
inline vpternlogq64 (zmm5_7, zmm13_7, zmm19_7, table);
(* vpternlogq $0xd2,%zmm20,%zmm19,%zmm13           #! PC = 0x55555558e4dc *)
mov table 0xd2@uint8;
inline vpternlogq64 (zmm13_0, zmm19_0, zmm20_0, table);
inline vpternlogq64 (zmm13_1, zmm19_1, zmm20_1, table);
inline vpternlogq64 (zmm13_2, zmm19_2, zmm20_2, table);
inline vpternlogq64 (zmm13_3, zmm19_3, zmm20_3, table);
inline vpternlogq64 (zmm13_4, zmm19_4, zmm20_4, table);
inline vpternlogq64 (zmm13_5, zmm19_5, zmm20_5, table);
inline vpternlogq64 (zmm13_6, zmm19_6, zmm20_6, table);
inline vpternlogq64 (zmm13_7, zmm19_7, zmm20_7, table);
(* vprolq $0x1,%zmm22,%zmm19                       #! PC = 0x55555558e4e3 *)
rol zmm19_0 zmm22_0 0x1;
rol zmm19_1 zmm22_1 0x1;
rol zmm19_2 zmm22_2 0x1;
rol zmm19_3 zmm22_3 0x1;
rol zmm19_4 zmm22_4 0x1;
rol zmm19_5 zmm22_5 0x1;
rol zmm19_6 zmm22_6 0x1;
rol zmm19_7 zmm22_7 0x1;
(* vmovdqa64 %zmm9,%zmm25                          #! PC = 0x55555558e4ea *)
mov zmm25_0 zmm9_0;
mov zmm25_1 zmm9_1;
mov zmm25_2 zmm9_2;
mov zmm25_3 zmm9_3;
mov zmm25_4 zmm9_4;
mov zmm25_5 zmm9_5;
mov zmm25_6 zmm9_6;
mov zmm25_7 zmm9_7;
(* vpternlogq $0x96,%zmm2,%zmm11,%zmm25            #! PC = 0x55555558e4f0 *)
mov table 0x96@uint8;
inline vpternlogq64 (zmm25_0, zmm11_0, zmm2_0, table);
inline vpternlogq64 (zmm25_1, zmm11_1, zmm2_1, table);
inline vpternlogq64 (zmm25_2, zmm11_2, zmm2_2, table);
inline vpternlogq64 (zmm25_3, zmm11_3, zmm2_3, table);
inline vpternlogq64 (zmm25_4, zmm11_4, zmm2_4, table);
inline vpternlogq64 (zmm25_5, zmm11_5, zmm2_5, table);
inline vpternlogq64 (zmm25_6, zmm11_6, zmm2_6, table);
inline vpternlogq64 (zmm25_7, zmm11_7, zmm2_7, table);
(* vpternlogq $0x96,%zmm12,%zmm5,%zmm25            #! PC = 0x55555558e4f7 *)
mov table 0x96@uint8;
inline vpternlogq64 (zmm25_0, zmm5_0, zmm12_0, table);
inline vpternlogq64 (zmm25_1, zmm5_1, zmm12_1, table);
inline vpternlogq64 (zmm25_2, zmm5_2, zmm12_2, table);
inline vpternlogq64 (zmm25_3, zmm5_3, zmm12_3, table);
inline vpternlogq64 (zmm25_4, zmm5_4, zmm12_4, table);
inline vpternlogq64 (zmm25_5, zmm5_5, zmm12_5, table);
inline vpternlogq64 (zmm25_6, zmm5_6, zmm12_6, table);
inline vpternlogq64 (zmm25_7, zmm5_7, zmm12_7, table);
(* vmovdqa64 %zmm13,%zmm0                          #! PC = 0x55555558e4fe *)
mov zmm0_0 zmm13_0;
mov zmm0_1 zmm13_1;
mov zmm0_2 zmm13_2;
mov zmm0_3 zmm13_3;
mov zmm0_4 zmm13_4;
mov zmm0_5 zmm13_5;
mov zmm0_6 zmm13_6;
mov zmm0_7 zmm13_7;
(* vpternlogq $0x96,%zmm1,%zmm15,%zmm0             #! PC = 0x55555558e504 *)
mov table 0x96@uint8;
inline vpternlogq64 (zmm0_0, zmm15_0, zmm1_0, table);
inline vpternlogq64 (zmm0_1, zmm15_1, zmm1_1, table);
inline vpternlogq64 (zmm0_2, zmm15_2, zmm1_2, table);
inline vpternlogq64 (zmm0_3, zmm15_3, zmm1_3, table);
inline vpternlogq64 (zmm0_4, zmm15_4, zmm1_4, table);
inline vpternlogq64 (zmm0_5, zmm15_5, zmm1_5, table);
inline vpternlogq64 (zmm0_6, zmm15_6, zmm1_6, table);
inline vpternlogq64 (zmm0_7, zmm15_7, zmm1_7, table);
(* vmovdqa64 %zmm19,0x148(%rsp)                    #! EA = L0x7fffffffd600; PC = 0x55555558e50b *)
mov L0x7fffffffd600 zmm19_0;
mov L0x7fffffffd608 zmm19_1;
mov L0x7fffffffd610 zmm19_2;
mov L0x7fffffffd618 zmm19_3;
mov L0x7fffffffd620 zmm19_4;
mov L0x7fffffffd628 zmm19_5;
mov L0x7fffffffd630 zmm19_6;
mov L0x7fffffffd638 zmm19_7;
(* vprolq $0x1,%zmm25,%zmm19                       #! PC = 0x55555558e516 *)
rol zmm19_0 zmm25_0 0x1;
rol zmm19_1 zmm25_1 0x1;
rol zmm19_2 zmm25_2 0x1;
rol zmm19_3 zmm25_3 0x1;
rol zmm19_4 zmm25_4 0x1;
rol zmm19_5 zmm25_5 0x1;
rol zmm19_6 zmm25_6 0x1;
rol zmm19_7 zmm25_7 0x1;
(* vpternlogq $0x96,%zmm21,%zmm14,%zmm0            #! PC = 0x55555558e51d *)
mov table 0x96@uint8;
inline vpternlogq64 (zmm0_0, zmm14_0, zmm21_0, table);
inline vpternlogq64 (zmm0_1, zmm14_1, zmm21_1, table);
inline vpternlogq64 (zmm0_2, zmm14_2, zmm21_2, table);
inline vpternlogq64 (zmm0_3, zmm14_3, zmm21_3, table);
inline vpternlogq64 (zmm0_4, zmm14_4, zmm21_4, table);
inline vpternlogq64 (zmm0_5, zmm14_5, zmm21_5, table);
inline vpternlogq64 (zmm0_6, zmm14_6, zmm21_6, table);
inline vpternlogq64 (zmm0_7, zmm14_7, zmm21_7, table);
(* vmovdqa64 %zmm24,%zmm8                          #! PC = 0x55555558e524 *)
mov zmm8_0 zmm24_0;
mov zmm8_1 zmm24_1;
mov zmm8_2 zmm24_2;
mov zmm8_3 zmm24_3;
mov zmm8_4 zmm24_4;
mov zmm8_5 zmm24_5;
mov zmm8_6 zmm24_6;
mov zmm8_7 zmm24_7;
(* vpternlogq $0x96,%zmm23,%zmm10,%zmm8            #! PC = 0x55555558e52a *)
mov table 0x96@uint8;
inline vpternlogq64 (zmm8_0, zmm10_0, zmm23_0, table);
inline vpternlogq64 (zmm8_1, zmm10_1, zmm23_1, table);
inline vpternlogq64 (zmm8_2, zmm10_2, zmm23_2, table);
inline vpternlogq64 (zmm8_3, zmm10_3, zmm23_3, table);
inline vpternlogq64 (zmm8_4, zmm10_4, zmm23_4, table);
inline vpternlogq64 (zmm8_5, zmm10_5, zmm23_5, table);
inline vpternlogq64 (zmm8_6, zmm10_6, zmm23_6, table);
inline vpternlogq64 (zmm8_7, zmm10_7, zmm23_7, table);
(* vpternlogq $0x96,%zmm27,%zmm28,%zmm8            #! PC = 0x55555558e531 *)
mov table 0x96@uint8;
inline vpternlogq64 (zmm8_0, zmm28_0, zmm27_0, table);
inline vpternlogq64 (zmm8_1, zmm28_1, zmm27_1, table);
inline vpternlogq64 (zmm8_2, zmm28_2, zmm27_2, table);
inline vpternlogq64 (zmm8_3, zmm28_3, zmm27_3, table);
inline vpternlogq64 (zmm8_4, zmm28_4, zmm27_4, table);
inline vpternlogq64 (zmm8_5, zmm28_5, zmm27_5, table);
inline vpternlogq64 (zmm8_6, zmm28_6, zmm27_6, table);
inline vpternlogq64 (zmm8_7, zmm28_7, zmm27_7, table);
(* vmovdqa64 %zmm30,%zmm20                         #! PC = 0x55555558e538 *)
mov zmm20_0 zmm30_0;
mov zmm20_1 zmm30_1;
mov zmm20_2 zmm30_2;
mov zmm20_3 zmm30_3;
mov zmm20_4 zmm30_4;
mov zmm20_5 zmm30_5;
mov zmm20_6 zmm30_6;
mov zmm20_7 zmm30_7;
(* vmovdqa64 %zmm19,0x108(%rsp)                    #! EA = L0x7fffffffd5c0; PC = 0x55555558e53e *)
mov L0x7fffffffd5c0 zmm19_0;
mov L0x7fffffffd5c8 zmm19_1;
mov L0x7fffffffd5d0 zmm19_2;
mov L0x7fffffffd5d8 zmm19_3;
mov L0x7fffffffd5e0 zmm19_4;
mov L0x7fffffffd5e8 zmm19_5;
mov L0x7fffffffd5f0 zmm19_6;
mov L0x7fffffffd5f8 zmm19_7;
(* vprolq $0x1,%zmm0,%zmm19                        #! PC = 0x55555558e549 *)
rol zmm19_0 zmm0_0 0x1;
rol zmm19_1 zmm0_1 0x1;
rol zmm19_2 zmm0_2 0x1;
rol zmm19_3 zmm0_3 0x1;
rol zmm19_4 zmm0_4 0x1;
rol zmm19_5 zmm0_5 0x1;
rol zmm19_6 zmm0_6 0x1;
rol zmm19_7 zmm0_7 0x1;
(* vpternlogq $0x96,%zmm26,%zmm16,%zmm20           #! PC = 0x55555558e550 *)
mov table 0x96@uint8;
inline vpternlogq64 (zmm20_0, zmm16_0, zmm26_0, table);
inline vpternlogq64 (zmm20_1, zmm16_1, zmm26_1, table);
inline vpternlogq64 (zmm20_2, zmm16_2, zmm26_2, table);
inline vpternlogq64 (zmm20_3, zmm16_3, zmm26_3, table);
inline vpternlogq64 (zmm20_4, zmm16_4, zmm26_4, table);
inline vpternlogq64 (zmm20_5, zmm16_5, zmm26_5, table);
inline vpternlogq64 (zmm20_6, zmm16_6, zmm26_6, table);
inline vpternlogq64 (zmm20_7, zmm16_7, zmm26_7, table);
(* vpternlogq $0x96,%zmm29,%zmm6,%zmm20            #! PC = 0x55555558e557 *)
mov table 0x96@uint8;
inline vpternlogq64 (zmm20_0, zmm6_0, zmm29_0, table);
inline vpternlogq64 (zmm20_1, zmm6_1, zmm29_1, table);
inline vpternlogq64 (zmm20_2, zmm6_2, zmm29_2, table);
inline vpternlogq64 (zmm20_3, zmm6_3, zmm29_3, table);
inline vpternlogq64 (zmm20_4, zmm6_4, zmm29_4, table);
inline vpternlogq64 (zmm20_5, zmm6_5, zmm29_5, table);
inline vpternlogq64 (zmm20_6, zmm6_6, zmm29_6, table);
inline vpternlogq64 (zmm20_7, zmm6_7, zmm29_7, table);
(* vprolq $0x1,%zmm20,%zmm31                       #! PC = 0x55555558e55e *)
rol zmm31_0 zmm20_0 0x1;
rol zmm31_1 zmm20_1 0x1;
rol zmm31_2 zmm20_2 0x1;
rol zmm31_3 zmm20_3 0x1;
rol zmm31_4 zmm20_4 0x1;
rol zmm31_5 zmm20_5 0x1;
rol zmm31_6 zmm20_6 0x1;
rol zmm31_7 zmm20_7 0x1;
(* vpxord 0x108(%rsp),%zmm20,%zmm20                #! EA = L0x7fffffffd5c0; Value = 0x54367609fbc1afbd; PC = 0x55555558e565 *)
xor zmm20_0@uint64 zmm20_0 L0x7fffffffd5c0;
xor zmm20_1@uint64 zmm20_1 L0x7fffffffd5c8;
xor zmm20_2@uint64 zmm20_2 L0x7fffffffd5d0;
xor zmm20_3@uint64 zmm20_3 L0x7fffffffd5d8;
xor zmm20_4@uint64 zmm20_4 L0x7fffffffd5e0;
xor zmm20_5@uint64 zmm20_5 L0x7fffffffd5e8;
xor zmm20_6@uint64 zmm20_6 L0x7fffffffd5f0;
xor zmm20_7@uint64 zmm20_7 L0x7fffffffd5f8;
(* movabs $0x8000000000000080,%rdx                 #! PC = 0x55555558e570 *)
mov rdx 0x8000000000000080@uint64;
(* vmovdqa64 %zmm19,0xc8(%rsp)                     #! EA = L0x7fffffffd580; PC = 0x55555558e57a *)
mov L0x7fffffffd580 zmm19_0;
mov L0x7fffffffd588 zmm19_1;
mov L0x7fffffffd590 zmm19_2;
mov L0x7fffffffd598 zmm19_3;
mov L0x7fffffffd5a0 zmm19_4;
mov L0x7fffffffd5a8 zmm19_5;
mov L0x7fffffffd5b0 zmm19_6;
mov L0x7fffffffd5b8 zmm19_7;
(* vprolq $0x1,%zmm8,%zmm19                        #! PC = 0x55555558e585 *)
rol zmm19_0 zmm8_0 0x1;
rol zmm19_1 zmm8_1 0x1;
rol zmm19_2 zmm8_2 0x1;
rol zmm19_3 zmm8_3 0x1;
rol zmm19_4 zmm8_4 0x1;
rol zmm19_5 zmm8_5 0x1;
rol zmm19_6 zmm8_6 0x1;
rol zmm19_7 zmm8_7 0x1;
(* vpxord 0x148(%rsp),%zmm8,%zmm8                  #! EA = L0x7fffffffd600; Value = 0xfc3684f555947ceb; PC = 0x55555558e58c *)
xor zmm8_0@uint64 zmm8_0 L0x7fffffffd600;
xor zmm8_1@uint64 zmm8_1 L0x7fffffffd608;
xor zmm8_2@uint64 zmm8_2 L0x7fffffffd610;
xor zmm8_3@uint64 zmm8_3 L0x7fffffffd618;
xor zmm8_4@uint64 zmm8_4 L0x7fffffffd620;
xor zmm8_5@uint64 zmm8_5 L0x7fffffffd628;
xor zmm8_6@uint64 zmm8_6 L0x7fffffffd630;
xor zmm8_7@uint64 zmm8_7 L0x7fffffffd638;
(* vpxord 0xc8(%rsp),%zmm22,%zmm22                 #! EA = L0x7fffffffd580; Value = 0xdd6f5a5749b57c5c; PC = 0x55555558e597 *)
xor zmm22_0@uint64 zmm22_0 L0x7fffffffd580;
xor zmm22_1@uint64 zmm22_1 L0x7fffffffd588;
xor zmm22_2@uint64 zmm22_2 L0x7fffffffd590;
xor zmm22_3@uint64 zmm22_3 L0x7fffffffd598;
xor zmm22_4@uint64 zmm22_4 L0x7fffffffd5a0;
xor zmm22_5@uint64 zmm22_5 L0x7fffffffd5a8;
xor zmm22_6@uint64 zmm22_6 L0x7fffffffd5b0;
xor zmm22_7@uint64 zmm22_7 L0x7fffffffd5b8;
(* vpxord %zmm30,%zmm8,%zmm30                      #! PC = 0x55555558e5a2 *)
xor zmm30_0@uint64 zmm8_0 zmm30_0;
xor zmm30_1@uint64 zmm8_1 zmm30_1;
xor zmm30_2@uint64 zmm8_2 zmm30_2;
xor zmm30_3@uint64 zmm8_3 zmm30_3;
xor zmm30_4@uint64 zmm8_4 zmm30_4;
xor zmm30_5@uint64 zmm8_5 zmm30_5;
xor zmm30_6@uint64 zmm8_6 zmm30_6;
xor zmm30_7@uint64 zmm8_7 zmm30_7;
(* vprorq $0x14,%zmm30,%zmm30                      #! PC = 0x55555558e5a8 *)
ror zmm30_0 zmm30_0 0x14;
ror zmm30_1 zmm30_1 0x14;
ror zmm30_2 zmm30_2 0x14;
ror zmm30_3 zmm30_3 0x14;
ror zmm30_4 zmm30_4 0x14;
ror zmm30_5 zmm30_5 0x14;
ror zmm30_6 zmm30_6 0x14;
ror zmm30_7 zmm30_7 0x14;
(* vpxord %zmm3,%zmm20,%zmm3                       #! PC = 0x55555558e5af *)
xor zmm3_0@uint64 zmm20_0 zmm3_0;
xor zmm3_1@uint64 zmm20_1 zmm3_1;
xor zmm3_2@uint64 zmm20_2 zmm3_2;
xor zmm3_3@uint64 zmm20_3 zmm3_3;
xor zmm3_4@uint64 zmm20_4 zmm3_4;
xor zmm3_5@uint64 zmm20_5 zmm3_5;
xor zmm3_6@uint64 zmm20_6 zmm3_6;
xor zmm3_7@uint64 zmm20_7 zmm3_7;
(* vpxord %zmm19,%zmm25,%zmm19                     #! PC = 0x55555558e5b5 *)
xor zmm19_0@uint64 zmm25_0 zmm19_0;
xor zmm19_1@uint64 zmm25_1 zmm19_1;
xor zmm19_2@uint64 zmm25_2 zmm19_2;
xor zmm19_3@uint64 zmm25_3 zmm19_3;
xor zmm19_4@uint64 zmm25_4 zmm19_4;
xor zmm19_5@uint64 zmm25_5 zmm19_5;
xor zmm19_6@uint64 zmm25_6 zmm19_6;
xor zmm19_7@uint64 zmm25_7 zmm19_7;
(* vpxord %zmm9,%zmm22,%zmm9                       #! PC = 0x55555558e5bb *)
xor zmm9_0@uint64 zmm22_0 zmm9_0;
xor zmm9_1@uint64 zmm22_1 zmm9_1;
xor zmm9_2@uint64 zmm22_2 zmm9_2;
xor zmm9_3@uint64 zmm22_3 zmm9_3;
xor zmm9_4@uint64 zmm22_4 zmm9_4;
xor zmm9_5@uint64 zmm22_5 zmm9_5;
xor zmm9_6@uint64 zmm22_6 zmm9_6;
xor zmm9_7@uint64 zmm22_7 zmm9_7;
(* vpxord %zmm13,%zmm19,%zmm13                     #! PC = 0x55555558e5c1 *)
xor zmm13_0@uint64 zmm19_0 zmm13_0;
xor zmm13_1@uint64 zmm19_1 zmm13_1;
xor zmm13_2@uint64 zmm19_2 zmm13_2;
xor zmm13_3@uint64 zmm19_3 zmm13_3;
xor zmm13_4@uint64 zmm19_4 zmm13_4;
xor zmm13_5@uint64 zmm19_5 zmm13_5;
xor zmm13_6@uint64 zmm19_6 zmm13_6;
xor zmm13_7@uint64 zmm19_7 zmm13_7;
(* vpxord %zmm31,%zmm0,%zmm0                       #! PC = 0x55555558e5c7 *)
xor zmm0_0@uint64 zmm0_0 zmm31_0;
xor zmm0_1@uint64 zmm0_1 zmm31_1;
xor zmm0_2@uint64 zmm0_2 zmm31_2;
xor zmm0_3@uint64 zmm0_3 zmm31_3;
xor zmm0_4@uint64 zmm0_4 zmm31_4;
xor zmm0_5@uint64 zmm0_5 zmm31_5;
xor zmm0_6@uint64 zmm0_6 zmm31_6;
xor zmm0_7@uint64 zmm0_7 zmm31_7;
(* vprorq $0x15,%zmm3,%zmm3                        #! PC = 0x55555558e5cd *)
ror zmm3_0 zmm3_0 0x15;
ror zmm3_1 zmm3_1 0x15;
ror zmm3_2 zmm3_2 0x15;
ror zmm3_3 zmm3_3 0x15;
ror zmm3_4 zmm3_4 0x15;
ror zmm3_5 zmm3_5 0x15;
ror zmm3_6 zmm3_6 0x15;
ror zmm3_7 zmm3_7 0x15;
(* vprolq $0x15,%zmm9,%zmm9                        #! PC = 0x55555558e5d4 *)
rol zmm9_0 zmm9_0 0x15;
rol zmm9_1 zmm9_1 0x15;
rol zmm9_2 zmm9_2 0x15;
rol zmm9_3 zmm9_3 0x15;
rol zmm9_4 zmm9_4 0x15;
rol zmm9_5 zmm9_5 0x15;
rol zmm9_6 zmm9_6 0x15;
rol zmm9_7 zmm9_7 0x15;
(* vprolq $0xe,%zmm13,%zmm13                       #! PC = 0x55555558e5db *)
rol zmm13_0 zmm13_0 0xe;
rol zmm13_1 zmm13_1 0xe;
rol zmm13_2 zmm13_2 0xe;
rol zmm13_3 zmm13_3 0xe;
rol zmm13_4 zmm13_4 0xe;
rol zmm13_5 zmm13_5 0xe;
rol zmm13_6 zmm13_6 0xe;
rol zmm13_7 zmm13_7 0xe;
(* vpxord %zmm11,%zmm22,%zmm11                     #! PC = 0x55555558e5e2 *)
xor zmm11_0@uint64 zmm22_0 zmm11_0;
xor zmm11_1@uint64 zmm22_1 zmm11_1;
xor zmm11_2@uint64 zmm22_2 zmm11_2;
xor zmm11_3@uint64 zmm22_3 zmm11_3;
xor zmm11_4@uint64 zmm22_4 zmm11_4;
xor zmm11_5@uint64 zmm22_5 zmm11_5;
xor zmm11_6@uint64 zmm22_6 zmm11_6;
xor zmm11_7@uint64 zmm22_7 zmm11_7;
(* vpxord %zmm15,%zmm19,%zmm15                     #! PC = 0x55555558e5e8 *)
xor zmm15_0@uint64 zmm19_0 zmm15_0;
xor zmm15_1@uint64 zmm19_1 zmm15_1;
xor zmm15_2@uint64 zmm19_2 zmm15_2;
xor zmm15_3@uint64 zmm19_3 zmm15_3;
xor zmm15_4@uint64 zmm19_4 zmm15_4;
xor zmm15_5@uint64 zmm19_5 zmm15_5;
xor zmm15_6@uint64 zmm19_6 zmm15_6;
xor zmm15_7@uint64 zmm19_7 zmm15_7;
(* vprolq $0x1c,%zmm11,%zmm11                      #! PC = 0x55555558e5ee *)
rol zmm11_0 zmm11_0 0x1c;
rol zmm11_1 zmm11_1 0x1c;
rol zmm11_2 zmm11_2 0x1c;
rol zmm11_3 zmm11_3 0x1c;
rol zmm11_4 zmm11_4 0x1c;
rol zmm11_5 zmm11_5 0x1c;
rol zmm11_6 zmm11_6 0x1c;
rol zmm11_7 zmm11_7 0x1c;
(* vprolq $0x14,%zmm15,%zmm15                      #! PC = 0x55555558e5f5 *)
rol zmm15_0 zmm15_0 0x14;
rol zmm15_1 zmm15_1 0x14;
rol zmm15_2 zmm15_2 0x14;
rol zmm15_3 zmm15_3 0x14;
rol zmm15_4 zmm15_4 0x14;
rol zmm15_5 zmm15_5 0x14;
rol zmm15_6 zmm15_6 0x14;
rol zmm15_7 zmm15_7 0x14;
(* vpxord %zmm10,%zmm0,%zmm10                      #! PC = 0x55555558e5fc *)
xor zmm10_0@uint64 zmm0_0 zmm10_0;
xor zmm10_1@uint64 zmm0_1 zmm10_1;
xor zmm10_2@uint64 zmm0_2 zmm10_2;
xor zmm10_3@uint64 zmm0_3 zmm10_3;
xor zmm10_4@uint64 zmm0_4 zmm10_4;
xor zmm10_5@uint64 zmm0_5 zmm10_5;
xor zmm10_6@uint64 zmm0_6 zmm10_6;
xor zmm10_7@uint64 zmm0_7 zmm10_7;
(* vpxord %zmm16,%zmm8,%zmm16                      #! PC = 0x55555558e602 *)
xor zmm16_0@uint64 zmm8_0 zmm16_0;
xor zmm16_1@uint64 zmm8_1 zmm16_1;
xor zmm16_2@uint64 zmm8_2 zmm16_2;
xor zmm16_3@uint64 zmm8_3 zmm16_3;
xor zmm16_4@uint64 zmm8_4 zmm16_4;
xor zmm16_5@uint64 zmm8_5 zmm16_5;
xor zmm16_6@uint64 zmm8_6 zmm16_6;
xor zmm16_7@uint64 zmm8_7 zmm16_7;
(* vpxord %zmm17,%zmm20,%zmm17                     #! PC = 0x55555558e608 *)
xor zmm17_0@uint64 zmm20_0 zmm17_0;
xor zmm17_1@uint64 zmm20_1 zmm17_1;
xor zmm17_2@uint64 zmm20_2 zmm17_2;
xor zmm17_3@uint64 zmm20_3 zmm17_3;
xor zmm17_4@uint64 zmm20_4 zmm17_4;
xor zmm17_5@uint64 zmm20_5 zmm17_5;
xor zmm17_6@uint64 zmm20_6 zmm17_6;
xor zmm17_7@uint64 zmm20_7 zmm17_7;
(* vpxord %zmm26,%zmm8,%zmm26                      #! PC = 0x55555558e60e *)
xor zmm26_0@uint64 zmm8_0 zmm26_0;
xor zmm26_1@uint64 zmm8_1 zmm26_1;
xor zmm26_2@uint64 zmm8_2 zmm26_2;
xor zmm26_3@uint64 zmm8_3 zmm26_3;
xor zmm26_4@uint64 zmm8_4 zmm26_4;
xor zmm26_5@uint64 zmm8_5 zmm26_5;
xor zmm26_6@uint64 zmm8_6 zmm26_6;
xor zmm26_7@uint64 zmm8_7 zmm26_7;
(* vpxord %zmm18,%zmm20,%zmm18                     #! PC = 0x55555558e614 *)
xor zmm18_0@uint64 zmm20_0 zmm18_0;
xor zmm18_1@uint64 zmm20_1 zmm18_1;
xor zmm18_2@uint64 zmm20_2 zmm18_2;
xor zmm18_3@uint64 zmm20_3 zmm18_3;
xor zmm18_4@uint64 zmm20_4 zmm18_4;
xor zmm18_5@uint64 zmm20_5 zmm18_5;
xor zmm18_6@uint64 zmm20_6 zmm18_6;
xor zmm18_7@uint64 zmm20_7 zmm18_7;
(* vprolq $0x1,%zmm26,%zmm26                       #! PC = 0x55555558e61a *)
rol zmm26_0 zmm26_0 0x1;
rol zmm26_1 zmm26_1 0x1;
rol zmm26_2 zmm26_2 0x1;
rol zmm26_3 zmm26_3 0x1;
rol zmm26_4 zmm26_4 0x1;
rol zmm26_5 zmm26_5 0x1;
rol zmm26_6 zmm26_6 0x1;
rol zmm26_7 zmm26_7 0x1;
(* vprolq $0x6,%zmm18,%zmm18                       #! PC = 0x55555558e621 *)
rol zmm18_0 zmm18_0 0x6;
rol zmm18_1 zmm18_1 0x6;
rol zmm18_2 zmm18_2 0x6;
rol zmm18_3 zmm18_3 0x6;
rol zmm18_4 zmm18_4 0x6;
rol zmm18_5 zmm18_5 0x6;
rol zmm18_6 zmm18_6 0x6;
rol zmm18_7 zmm18_7 0x6;
(* vprolq $0x3,%zmm10,%zmm10                       #! PC = 0x55555558e628 *)
rol zmm10_0 zmm10_0 0x3;
rol zmm10_1 zmm10_1 0x3;
rol zmm10_2 zmm10_2 0x3;
rol zmm10_3 zmm10_3 0x3;
rol zmm10_4 zmm10_4 0x3;
rol zmm10_5 zmm10_5 0x3;
rol zmm10_6 zmm10_6 0x3;
rol zmm10_7 zmm10_7 0x3;
(* vprorq $0x13,%zmm16,%zmm16                      #! PC = 0x55555558e62f *)
ror zmm16_0 zmm16_0 0x13;
ror zmm16_1 zmm16_1 0x13;
ror zmm16_2 zmm16_2 0x13;
ror zmm16_3 zmm16_3 0x13;
ror zmm16_4 zmm16_4 0x13;
ror zmm16_5 zmm16_5 0x13;
ror zmm16_6 zmm16_6 0x13;
ror zmm16_7 zmm16_7 0x13;
(* vprorq $0x3,%zmm17,%zmm17                       #! PC = 0x55555558e636 *)
ror zmm17_0 zmm17_0 0x3;
ror zmm17_1 zmm17_1 0x3;
ror zmm17_2 zmm17_2 0x3;
ror zmm17_3 zmm17_3 0x3;
ror zmm17_4 zmm17_4 0x3;
ror zmm17_5 zmm17_5 0x3;
ror zmm17_6 zmm17_6 0x3;
ror zmm17_7 zmm17_7 0x3;
(* vpxord %zmm23,%zmm0,%zmm23                      #! PC = 0x55555558e63d *)
xor zmm23_0@uint64 zmm0_0 zmm23_0;
xor zmm23_1@uint64 zmm0_1 zmm23_1;
xor zmm23_2@uint64 zmm0_2 zmm23_2;
xor zmm23_3@uint64 zmm0_3 zmm23_3;
xor zmm23_4@uint64 zmm0_4 zmm23_4;
xor zmm23_5@uint64 zmm0_5 zmm23_5;
xor zmm23_6@uint64 zmm0_6 zmm23_6;
xor zmm23_7@uint64 zmm0_7 zmm23_7;
(* vpxord %zmm2,%zmm22,%zmm2                       #! PC = 0x55555558e643 *)
xor zmm2_0@uint64 zmm22_0 zmm2_0;
xor zmm2_1@uint64 zmm22_1 zmm2_1;
xor zmm2_2@uint64 zmm22_2 zmm2_2;
xor zmm2_3@uint64 zmm22_3 zmm2_3;
xor zmm2_4@uint64 zmm22_4 zmm2_4;
xor zmm2_5@uint64 zmm22_5 zmm2_5;
xor zmm2_6@uint64 zmm22_6 zmm2_6;
xor zmm2_7@uint64 zmm22_7 zmm2_7;
(* vpxord %zmm1,%zmm19,%zmm1                       #! PC = 0x55555558e649 *)
xor zmm1_0@uint64 zmm19_0 zmm1_0;
xor zmm1_1@uint64 zmm19_1 zmm1_1;
xor zmm1_2@uint64 zmm19_2 zmm1_2;
xor zmm1_3@uint64 zmm19_3 zmm1_3;
xor zmm1_4@uint64 zmm19_4 zmm1_4;
xor zmm1_5@uint64 zmm19_5 zmm1_5;
xor zmm1_6@uint64 zmm19_6 zmm1_6;
xor zmm1_7@uint64 zmm19_7 zmm1_7;
(* vpxord %zmm28,%zmm0,%zmm28                      #! PC = 0x55555558e64f *)
xor zmm28_0@uint64 zmm0_0 zmm28_0;
xor zmm28_1@uint64 zmm0_1 zmm28_1;
xor zmm28_2@uint64 zmm0_2 zmm28_2;
xor zmm28_3@uint64 zmm0_3 zmm28_3;
xor zmm28_4@uint64 zmm0_4 zmm28_4;
xor zmm28_5@uint64 zmm0_5 zmm28_5;
xor zmm28_6@uint64 zmm0_6 zmm28_6;
xor zmm28_7@uint64 zmm0_7 zmm28_7;
(* vpxord %zmm14,%zmm19,%zmm14                     #! PC = 0x55555558e655 *)
xor zmm14_0@uint64 zmm19_0 zmm14_0;
xor zmm14_1@uint64 zmm19_1 zmm14_1;
xor zmm14_2@uint64 zmm19_2 zmm14_2;
xor zmm14_3@uint64 zmm19_3 zmm14_3;
xor zmm14_4@uint64 zmm19_4 zmm14_4;
xor zmm14_5@uint64 zmm19_5 zmm14_5;
xor zmm14_6@uint64 zmm19_6 zmm14_6;
xor zmm14_7@uint64 zmm19_7 zmm14_7;
(* vprorq $0x1c,%zmm28,%zmm28                      #! PC = 0x55555558e65b *)
ror zmm28_0 zmm28_0 0x1c;
ror zmm28_1 zmm28_1 0x1c;
ror zmm28_2 zmm28_2 0x1c;
ror zmm28_3 zmm28_3 0x1c;
ror zmm28_4 zmm28_4 0x1c;
ror zmm28_5 zmm28_5 0x1c;
ror zmm28_6 zmm28_6 0x1c;
ror zmm28_7 zmm28_7 0x1c;
(* vprolq $0x1b,%zmm14,%zmm14                      #! PC = 0x55555558e662 *)
rol zmm14_0 zmm14_0 0x1b;
rol zmm14_1 zmm14_1 0x1b;
rol zmm14_2 zmm14_2 0x1b;
rol zmm14_3 zmm14_3 0x1b;
rol zmm14_4 zmm14_4 0x1b;
rol zmm14_5 zmm14_5 0x1b;
rol zmm14_6 zmm14_6 0x1b;
rol zmm14_7 zmm14_7 0x1b;
(* vprolq $0x12,%zmm23,%zmm23                      #! PC = 0x55555558e669 *)
rol zmm23_0 zmm23_0 0x12;
rol zmm23_1 zmm23_1 0x12;
rol zmm23_2 zmm23_2 0x12;
rol zmm23_3 zmm23_3 0x12;
rol zmm23_4 zmm23_4 0x12;
rol zmm23_5 zmm23_5 0x12;
rol zmm23_6 zmm23_6 0x12;
rol zmm23_7 zmm23_7 0x12;
(* vprolq $0x19,%zmm2,%zmm2                        #! PC = 0x55555558e670 *)
rol zmm2_0 zmm2_0 0x19;
rol zmm2_1 zmm2_1 0x19;
rol zmm2_2 zmm2_2 0x19;
rol zmm2_3 zmm2_3 0x19;
rol zmm2_4 zmm2_4 0x19;
rol zmm2_5 zmm2_5 0x19;
rol zmm2_6 zmm2_6 0x19;
rol zmm2_7 zmm2_7 0x19;
(* vprolq $0x8,%zmm1,%zmm1                         #! PC = 0x55555558e677 *)
rol zmm1_0 zmm1_0 0x8;
rol zmm1_1 zmm1_1 0x8;
rol zmm1_2 zmm1_2 0x8;
rol zmm1_3 zmm1_3 0x8;
rol zmm1_4 zmm1_4 0x8;
rol zmm1_5 zmm1_5 0x8;
rol zmm1_6 zmm1_6 0x8;
rol zmm1_7 zmm1_7 0x8;
(* vpxord %zmm6,%zmm8,%zmm6                        #! PC = 0x55555558e67e *)
xor zmm6_0@uint64 zmm8_0 zmm6_0;
xor zmm6_1@uint64 zmm8_1 zmm6_1;
xor zmm6_2@uint64 zmm8_2 zmm6_2;
xor zmm6_3@uint64 zmm8_3 zmm6_3;
xor zmm6_4@uint64 zmm8_4 zmm6_4;
xor zmm6_5@uint64 zmm8_5 zmm6_5;
xor zmm6_6@uint64 zmm8_6 zmm6_6;
xor zmm6_7@uint64 zmm8_7 zmm6_7;
(* vpxord %zmm7,%zmm20,%zmm7                       #! PC = 0x55555558e684 *)
xor zmm7_0@uint64 zmm20_0 zmm7_0;
xor zmm7_1@uint64 zmm20_1 zmm7_1;
xor zmm7_2@uint64 zmm20_2 zmm7_2;
xor zmm7_3@uint64 zmm20_3 zmm7_3;
xor zmm7_4@uint64 zmm20_4 zmm7_4;
xor zmm7_5@uint64 zmm20_5 zmm7_5;
xor zmm7_6@uint64 zmm20_6 zmm7_6;
xor zmm7_7@uint64 zmm20_7 zmm7_7;
(* vpxord %zmm5,%zmm22,%zmm5                       #! PC = 0x55555558e68a *)
xor zmm5_0@uint64 zmm22_0 zmm5_0;
xor zmm5_1@uint64 zmm22_1 zmm5_1;
xor zmm5_2@uint64 zmm22_2 zmm5_2;
xor zmm5_3@uint64 zmm22_3 zmm5_3;
xor zmm5_4@uint64 zmm22_4 zmm5_4;
xor zmm5_5@uint64 zmm22_5 zmm5_5;
xor zmm5_6@uint64 zmm22_6 zmm5_6;
xor zmm5_7@uint64 zmm22_7 zmm5_7;
(* vpxord %zmm4,%zmm20,%zmm20                      #! PC = 0x55555558e690 *)
xor zmm20_0@uint64 zmm20_0 zmm4_0;
xor zmm20_1@uint64 zmm20_1 zmm4_1;
xor zmm20_2@uint64 zmm20_2 zmm4_2;
xor zmm20_3@uint64 zmm20_3 zmm4_3;
xor zmm20_4@uint64 zmm20_4 zmm4_4;
xor zmm20_5@uint64 zmm20_5 zmm4_5;
xor zmm20_6@uint64 zmm20_6 zmm4_6;
xor zmm20_7@uint64 zmm20_7 zmm4_7;
(* vpxord %zmm12,%zmm22,%zmm22                     #! PC = 0x55555558e696 *)
xor zmm22_0@uint64 zmm22_0 zmm12_0;
xor zmm22_1@uint64 zmm22_1 zmm12_1;
xor zmm22_2@uint64 zmm22_2 zmm12_2;
xor zmm22_3@uint64 zmm22_3 zmm12_3;
xor zmm22_4@uint64 zmm22_4 zmm12_4;
xor zmm22_5@uint64 zmm22_5 zmm12_5;
xor zmm22_6@uint64 zmm22_6 zmm12_6;
xor zmm22_7@uint64 zmm22_7 zmm12_7;
(* vpxord %zmm24,%zmm0,%zmm24                      #! PC = 0x55555558e69c *)
xor zmm24_0@uint64 zmm0_0 zmm24_0;
xor zmm24_1@uint64 zmm0_1 zmm24_1;
xor zmm24_2@uint64 zmm0_2 zmm24_2;
xor zmm24_3@uint64 zmm0_3 zmm24_3;
xor zmm24_4@uint64 zmm0_4 zmm24_4;
xor zmm24_5@uint64 zmm0_5 zmm24_5;
xor zmm24_6@uint64 zmm0_6 zmm24_6;
xor zmm24_7@uint64 zmm0_7 zmm24_7;
(* vprorq $0x2,%zmm20,%zmm20                       #! PC = 0x55555558e6a2 *)
ror zmm20_0 zmm20_0 0x2;
ror zmm20_1 zmm20_1 0x2;
ror zmm20_2 zmm20_2 0x2;
ror zmm20_3 zmm20_3 0x2;
ror zmm20_4 zmm20_4 0x2;
ror zmm20_5 zmm20_5 0x2;
ror zmm20_6 zmm20_6 0x2;
ror zmm20_7 zmm20_7 0x2;
(* vprorq $0x9,%zmm22,%zmm22                       #! PC = 0x55555558e6a9 *)
ror zmm22_0 zmm22_0 0x9;
ror zmm22_1 zmm22_1 0x9;
ror zmm22_2 zmm22_2 0x9;
ror zmm22_3 zmm22_3 0x9;
ror zmm22_4 zmm22_4 0x9;
ror zmm22_5 zmm22_5 0x9;
ror zmm22_6 zmm22_6 0x9;
ror zmm22_7 zmm22_7 0x9;
(* vprolq $0xa,%zmm6,%zmm6                         #! PC = 0x55555558e6b0 *)
rol zmm6_0 zmm6_0 0xa;
rol zmm6_1 zmm6_1 0xa;
rol zmm6_2 zmm6_2 0xa;
rol zmm6_3 zmm6_3 0xa;
rol zmm6_4 zmm6_4 0xa;
rol zmm6_5 zmm6_5 0xa;
rol zmm6_6 zmm6_6 0xa;
rol zmm6_7 zmm6_7 0xa;
(* vprolq $0xf,%zmm7,%zmm7                         #! PC = 0x55555558e6b7 *)
rol zmm7_0 zmm7_0 0xf;
rol zmm7_1 zmm7_1 0xf;
rol zmm7_2 zmm7_2 0xf;
rol zmm7_3 zmm7_3 0xf;
rol zmm7_4 zmm7_4 0xf;
rol zmm7_5 zmm7_5 0xf;
rol zmm7_6 zmm7_6 0xf;
rol zmm7_7 zmm7_7 0xf;
(* vprorq $0x8,%zmm5,%zmm5                         #! PC = 0x55555558e6be *)
ror zmm5_0 zmm5_0 0x8;
ror zmm5_1 zmm5_1 0x8;
ror zmm5_2 zmm5_2 0x8;
ror zmm5_3 zmm5_3 0x8;
ror zmm5_4 zmm5_4 0x8;
ror zmm5_5 zmm5_5 0x8;
ror zmm5_6 zmm5_6 0x8;
ror zmm5_7 zmm5_7 0x8;
(* vpxord %zmm27,%zmm0,%zmm0                       #! PC = 0x55555558e6c5 *)
xor zmm0_0@uint64 zmm0_0 zmm27_0;
xor zmm0_1@uint64 zmm0_1 zmm27_1;
xor zmm0_2@uint64 zmm0_2 zmm27_2;
xor zmm0_3@uint64 zmm0_3 zmm27_3;
xor zmm0_4@uint64 zmm0_4 zmm27_4;
xor zmm0_5@uint64 zmm0_5 zmm27_5;
xor zmm0_6@uint64 zmm0_6 zmm27_6;
xor zmm0_7@uint64 zmm0_7 zmm27_7;
(* vpxord %zmm29,%zmm8,%zmm8                       #! PC = 0x55555558e6cb *)
xor zmm8_0@uint64 zmm8_0 zmm29_0;
xor zmm8_1@uint64 zmm8_1 zmm29_1;
xor zmm8_2@uint64 zmm8_2 zmm29_2;
xor zmm8_3@uint64 zmm8_3 zmm29_3;
xor zmm8_4@uint64 zmm8_4 zmm29_4;
xor zmm8_5@uint64 zmm8_5 zmm29_5;
xor zmm8_6@uint64 zmm8_6 zmm29_6;
xor zmm8_7@uint64 zmm8_7 zmm29_7;
(* vpxord %zmm21,%zmm19,%zmm19                     #! PC = 0x55555558e6d1 *)
xor zmm19_0@uint64 zmm19_0 zmm21_0;
xor zmm19_1@uint64 zmm19_1 zmm21_1;
xor zmm19_2@uint64 zmm19_2 zmm21_2;
xor zmm19_3@uint64 zmm19_3 zmm21_3;
xor zmm19_4@uint64 zmm19_4 zmm21_4;
xor zmm19_5@uint64 zmm19_5 zmm21_5;
xor zmm19_6@uint64 zmm19_6 zmm21_6;
xor zmm19_7@uint64 zmm19_7 zmm21_7;
(* vprorq $0x17,%zmm0,%zmm0                        #! PC = 0x55555558e6d7 *)
ror zmm0_0 zmm0_0 0x17;
ror zmm0_1 zmm0_1 0x17;
ror zmm0_2 zmm0_2 0x17;
ror zmm0_3 zmm0_3 0x17;
ror zmm0_4 zmm0_4 0x17;
ror zmm0_5 zmm0_5 0x17;
ror zmm0_6 zmm0_6 0x17;
ror zmm0_7 zmm0_7 0x17;
(* vprolq $0x2,%zmm8,%zmm8                         #! PC = 0x55555558e6de *)
rol zmm8_0 zmm8_0 0x2;
rol zmm8_1 zmm8_1 0x2;
rol zmm8_2 zmm8_2 0x2;
rol zmm8_3 zmm8_3 0x2;
rol zmm8_4 zmm8_4 0x2;
rol zmm8_5 zmm8_5 0x2;
rol zmm8_6 zmm8_6 0x2;
rol zmm8_7 zmm8_7 0x2;
(* vprorq $0x19,%zmm19,%zmm19                      #! PC = 0x55555558e6e5 *)
ror zmm19_0 zmm19_0 0x19;
ror zmm19_1 zmm19_1 0x19;
ror zmm19_2 zmm19_2 0x19;
ror zmm19_3 zmm19_3 0x19;
ror zmm19_4 zmm19_4 0x19;
ror zmm19_5 zmm19_5 0x19;
ror zmm19_6 zmm19_6 0x19;
ror zmm19_7 zmm19_7 0x19;
(* vmovdqa64 %zmm24,%zmm31                         #! PC = 0x55555558e6ec *)
mov zmm31_0 zmm24_0;
mov zmm31_1 zmm24_1;
mov zmm31_2 zmm24_2;
mov zmm31_3 zmm24_3;
mov zmm31_4 zmm24_4;
mov zmm31_5 zmm24_5;
mov zmm31_6 zmm24_6;
mov zmm31_7 zmm24_7;
(* vmovdqa64 %zmm30,%zmm25                         #! PC = 0x55555558e6f2 *)
mov zmm25_0 zmm30_0;
mov zmm25_1 zmm30_1;
mov zmm25_2 zmm30_2;
mov zmm25_3 zmm30_3;
mov zmm25_4 zmm30_4;
mov zmm25_5 zmm30_5;
mov zmm25_6 zmm30_6;
mov zmm25_7 zmm30_7;
(* vpternlogq $0xd2,%zmm3,%zmm30,%zmm31            #! PC = 0x55555558e6f8 *)
mov table 0xd2@uint8;
inline vpternlogq64 (zmm31_0, zmm30_0, zmm3_0, table);
inline vpternlogq64 (zmm31_1, zmm30_1, zmm3_1, table);
inline vpternlogq64 (zmm31_2, zmm30_2, zmm3_2, table);
inline vpternlogq64 (zmm31_3, zmm30_3, zmm3_3, table);
inline vpternlogq64 (zmm31_4, zmm30_4, zmm3_4, table);
inline vpternlogq64 (zmm31_5, zmm30_5, zmm3_5, table);
inline vpternlogq64 (zmm31_6, zmm30_6, zmm3_6, table);
inline vpternlogq64 (zmm31_7, zmm30_7, zmm3_7, table);
(* vpternlogq $0xd2,%zmm9,%zmm3,%zmm25             #! PC = 0x55555558e6ff *)
mov table 0xd2@uint8;
inline vpternlogq64 (zmm25_0, zmm3_0, zmm9_0, table);
inline vpternlogq64 (zmm25_1, zmm3_1, zmm9_1, table);
inline vpternlogq64 (zmm25_2, zmm3_2, zmm9_2, table);
inline vpternlogq64 (zmm25_3, zmm3_3, zmm9_3, table);
inline vpternlogq64 (zmm25_4, zmm3_4, zmm9_4, table);
inline vpternlogq64 (zmm25_5, zmm3_5, zmm9_5, table);
inline vpternlogq64 (zmm25_6, zmm3_6, zmm9_6, table);
inline vpternlogq64 (zmm25_7, zmm3_7, zmm9_7, table);
(* vpternlogq $0xd2,%zmm13,%zmm9,%zmm3             #! PC = 0x55555558e706 *)
mov table 0xd2@uint8;
inline vpternlogq64 (zmm3_0, zmm9_0, zmm13_0, table);
inline vpternlogq64 (zmm3_1, zmm9_1, zmm13_1, table);
inline vpternlogq64 (zmm3_2, zmm9_2, zmm13_2, table);
inline vpternlogq64 (zmm3_3, zmm9_3, zmm13_3, table);
inline vpternlogq64 (zmm3_4, zmm9_4, zmm13_4, table);
inline vpternlogq64 (zmm3_5, zmm9_5, zmm13_5, table);
inline vpternlogq64 (zmm3_6, zmm9_6, zmm13_6, table);
inline vpternlogq64 (zmm3_7, zmm9_7, zmm13_7, table);
(* vpternlogq $0xd2,%zmm24,%zmm13,%zmm9            #! PC = 0x55555558e70d *)
mov table 0xd2@uint8;
inline vpternlogq64 (zmm9_0, zmm13_0, zmm24_0, table);
inline vpternlogq64 (zmm9_1, zmm13_1, zmm24_1, table);
inline vpternlogq64 (zmm9_2, zmm13_2, zmm24_2, table);
inline vpternlogq64 (zmm9_3, zmm13_3, zmm24_3, table);
inline vpternlogq64 (zmm9_4, zmm13_4, zmm24_4, table);
inline vpternlogq64 (zmm9_5, zmm13_5, zmm24_5, table);
inline vpternlogq64 (zmm9_6, zmm13_6, zmm24_6, table);
inline vpternlogq64 (zmm9_7, zmm13_7, zmm24_7, table);
(* vpternlogq $0xd2,%zmm30,%zmm24,%zmm13           #! PC = 0x55555558e714 *)
mov table 0xd2@uint8;
inline vpternlogq64 (zmm13_0, zmm24_0, zmm30_0, table);
inline vpternlogq64 (zmm13_1, zmm24_1, zmm30_1, table);
inline vpternlogq64 (zmm13_2, zmm24_2, zmm30_2, table);
inline vpternlogq64 (zmm13_3, zmm24_3, zmm30_3, table);
inline vpternlogq64 (zmm13_4, zmm24_4, zmm30_4, table);
inline vpternlogq64 (zmm13_5, zmm24_5, zmm30_5, table);
inline vpternlogq64 (zmm13_6, zmm24_6, zmm30_6, table);
inline vpternlogq64 (zmm13_7, zmm24_7, zmm30_7, table);
(* vpbroadcastq %r11,%zmm24                        #! PC = 0x55555558e71b *)
mov zmm24_0 r11;
mov zmm24_1 r11;
mov zmm24_2 r11;
mov zmm24_3 r11;
mov zmm24_4 r11;
mov zmm24_5 r11;
mov zmm24_6 r11;
mov zmm24_7 r11;
(* vpxord %zmm31,%zmm24,%zmm24                     #! PC = 0x55555558e721 *)
xor zmm24_0@uint64 zmm24_0 zmm31_0;
xor zmm24_1@uint64 zmm24_1 zmm31_1;
xor zmm24_2@uint64 zmm24_2 zmm31_2;
xor zmm24_3@uint64 zmm24_3 zmm31_3;
xor zmm24_4@uint64 zmm24_4 zmm31_4;
xor zmm24_5@uint64 zmm24_5 zmm31_5;
xor zmm24_6@uint64 zmm24_6 zmm31_6;
xor zmm24_7@uint64 zmm24_7 zmm31_7;
(* vmovdqa64 %zmm11,%zmm30                         #! PC = 0x55555558e727 *)
mov zmm30_0 zmm11_0;
mov zmm30_1 zmm11_1;
mov zmm30_2 zmm11_2;
mov zmm30_3 zmm11_3;
mov zmm30_4 zmm11_4;
mov zmm30_5 zmm11_5;
mov zmm30_6 zmm11_6;
mov zmm30_7 zmm11_7;
(* vmovdqa64 %zmm15,%zmm31                         #! PC = 0x55555558e72d *)
mov zmm31_0 zmm15_0;
mov zmm31_1 zmm15_1;
mov zmm31_2 zmm15_2;
mov zmm31_3 zmm15_3;
mov zmm31_4 zmm15_4;
mov zmm31_5 zmm15_5;
mov zmm31_6 zmm15_6;
mov zmm31_7 zmm15_7;
(* vpternlogq $0xd2,%zmm10,%zmm15,%zmm30           #! PC = 0x55555558e733 *)
mov table 0xd2@uint8;
inline vpternlogq64 (zmm30_0, zmm15_0, zmm10_0, table);
inline vpternlogq64 (zmm30_1, zmm15_1, zmm10_1, table);
inline vpternlogq64 (zmm30_2, zmm15_2, zmm10_2, table);
inline vpternlogq64 (zmm30_3, zmm15_3, zmm10_3, table);
inline vpternlogq64 (zmm30_4, zmm15_4, zmm10_4, table);
inline vpternlogq64 (zmm30_5, zmm15_5, zmm10_5, table);
inline vpternlogq64 (zmm30_6, zmm15_6, zmm10_6, table);
inline vpternlogq64 (zmm30_7, zmm15_7, zmm10_7, table);
(* vpternlogq $0xd2,%zmm16,%zmm10,%zmm31           #! PC = 0x55555558e73a *)
mov table 0xd2@uint8;
inline vpternlogq64 (zmm31_0, zmm10_0, zmm16_0, table);
inline vpternlogq64 (zmm31_1, zmm10_1, zmm16_1, table);
inline vpternlogq64 (zmm31_2, zmm10_2, zmm16_2, table);
inline vpternlogq64 (zmm31_3, zmm10_3, zmm16_3, table);
inline vpternlogq64 (zmm31_4, zmm10_4, zmm16_4, table);
inline vpternlogq64 (zmm31_5, zmm10_5, zmm16_5, table);
inline vpternlogq64 (zmm31_6, zmm10_6, zmm16_6, table);
inline vpternlogq64 (zmm31_7, zmm10_7, zmm16_7, table);
(* vpternlogq $0xd2,%zmm17,%zmm16,%zmm10           #! PC = 0x55555558e741 *)
mov table 0xd2@uint8;
inline vpternlogq64 (zmm10_0, zmm16_0, zmm17_0, table);
inline vpternlogq64 (zmm10_1, zmm16_1, zmm17_1, table);
inline vpternlogq64 (zmm10_2, zmm16_2, zmm17_2, table);
inline vpternlogq64 (zmm10_3, zmm16_3, zmm17_3, table);
inline vpternlogq64 (zmm10_4, zmm16_4, zmm17_4, table);
inline vpternlogq64 (zmm10_5, zmm16_5, zmm17_5, table);
inline vpternlogq64 (zmm10_6, zmm16_6, zmm17_6, table);
inline vpternlogq64 (zmm10_7, zmm16_7, zmm17_7, table);
(* vpternlogq $0xd2,%zmm11,%zmm17,%zmm16           #! PC = 0x55555558e748 *)
mov table 0xd2@uint8;
inline vpternlogq64 (zmm16_0, zmm17_0, zmm11_0, table);
inline vpternlogq64 (zmm16_1, zmm17_1, zmm11_1, table);
inline vpternlogq64 (zmm16_2, zmm17_2, zmm11_2, table);
inline vpternlogq64 (zmm16_3, zmm17_3, zmm11_3, table);
inline vpternlogq64 (zmm16_4, zmm17_4, zmm11_4, table);
inline vpternlogq64 (zmm16_5, zmm17_5, zmm11_5, table);
inline vpternlogq64 (zmm16_6, zmm17_6, zmm11_6, table);
inline vpternlogq64 (zmm16_7, zmm17_7, zmm11_7, table);
(* vpternlogq $0xd2,%zmm15,%zmm11,%zmm17           #! PC = 0x55555558e74f *)
mov table 0xd2@uint8;
inline vpternlogq64 (zmm17_0, zmm11_0, zmm15_0, table);
inline vpternlogq64 (zmm17_1, zmm11_1, zmm15_1, table);
inline vpternlogq64 (zmm17_2, zmm11_2, zmm15_2, table);
inline vpternlogq64 (zmm17_3, zmm11_3, zmm15_3, table);
inline vpternlogq64 (zmm17_4, zmm11_4, zmm15_4, table);
inline vpternlogq64 (zmm17_5, zmm11_5, zmm15_5, table);
inline vpternlogq64 (zmm17_6, zmm11_6, zmm15_6, table);
inline vpternlogq64 (zmm17_7, zmm11_7, zmm15_7, table);
(* vmovdqa64 %zmm26,%zmm15                         #! PC = 0x55555558e756 *)
mov zmm15_0 zmm26_0;
mov zmm15_1 zmm26_1;
mov zmm15_2 zmm26_2;
mov zmm15_3 zmm26_3;
mov zmm15_4 zmm26_4;
mov zmm15_5 zmm26_5;
mov zmm15_6 zmm26_6;
mov zmm15_7 zmm26_7;
(* vmovdqa64 %zmm18,%zmm11                         #! PC = 0x55555558e75c *)
mov zmm11_0 zmm18_0;
mov zmm11_1 zmm18_1;
mov zmm11_2 zmm18_2;
mov zmm11_3 zmm18_3;
mov zmm11_4 zmm18_4;
mov zmm11_5 zmm18_5;
mov zmm11_6 zmm18_6;
mov zmm11_7 zmm18_7;
(* vpternlogq $0xd2,%zmm2,%zmm18,%zmm15            #! PC = 0x55555558e762 *)
mov table 0xd2@uint8;
inline vpternlogq64 (zmm15_0, zmm18_0, zmm2_0, table);
inline vpternlogq64 (zmm15_1, zmm18_1, zmm2_1, table);
inline vpternlogq64 (zmm15_2, zmm18_2, zmm2_2, table);
inline vpternlogq64 (zmm15_3, zmm18_3, zmm2_3, table);
inline vpternlogq64 (zmm15_4, zmm18_4, zmm2_4, table);
inline vpternlogq64 (zmm15_5, zmm18_5, zmm2_5, table);
inline vpternlogq64 (zmm15_6, zmm18_6, zmm2_6, table);
inline vpternlogq64 (zmm15_7, zmm18_7, zmm2_7, table);
(* vpternlogq $0xd2,%zmm1,%zmm2,%zmm11             #! PC = 0x55555558e769 *)
mov table 0xd2@uint8;
inline vpternlogq64 (zmm11_0, zmm2_0, zmm1_0, table);
inline vpternlogq64 (zmm11_1, zmm2_1, zmm1_1, table);
inline vpternlogq64 (zmm11_2, zmm2_2, zmm1_2, table);
inline vpternlogq64 (zmm11_3, zmm2_3, zmm1_3, table);
inline vpternlogq64 (zmm11_4, zmm2_4, zmm1_4, table);
inline vpternlogq64 (zmm11_5, zmm2_5, zmm1_5, table);
inline vpternlogq64 (zmm11_6, zmm2_6, zmm1_6, table);
inline vpternlogq64 (zmm11_7, zmm2_7, zmm1_7, table);
(* vpternlogq $0xd2,%zmm23,%zmm1,%zmm2             #! PC = 0x55555558e770 *)
mov table 0xd2@uint8;
inline vpternlogq64 (zmm2_0, zmm1_0, zmm23_0, table);
inline vpternlogq64 (zmm2_1, zmm1_1, zmm23_1, table);
inline vpternlogq64 (zmm2_2, zmm1_2, zmm23_2, table);
inline vpternlogq64 (zmm2_3, zmm1_3, zmm23_3, table);
inline vpternlogq64 (zmm2_4, zmm1_4, zmm23_4, table);
inline vpternlogq64 (zmm2_5, zmm1_5, zmm23_5, table);
inline vpternlogq64 (zmm2_6, zmm1_6, zmm23_6, table);
inline vpternlogq64 (zmm2_7, zmm1_7, zmm23_7, table);
(* vpternlogq $0xd2,%zmm26,%zmm23,%zmm1            #! PC = 0x55555558e777 *)
mov table 0xd2@uint8;
inline vpternlogq64 (zmm1_0, zmm23_0, zmm26_0, table);
inline vpternlogq64 (zmm1_1, zmm23_1, zmm26_1, table);
inline vpternlogq64 (zmm1_2, zmm23_2, zmm26_2, table);
inline vpternlogq64 (zmm1_3, zmm23_3, zmm26_3, table);
inline vpternlogq64 (zmm1_4, zmm23_4, zmm26_4, table);
inline vpternlogq64 (zmm1_5, zmm23_5, zmm26_5, table);
inline vpternlogq64 (zmm1_6, zmm23_6, zmm26_6, table);
inline vpternlogq64 (zmm1_7, zmm23_7, zmm26_7, table);
(* vpternlogq $0xd2,%zmm18,%zmm26,%zmm23           #! PC = 0x55555558e77e *)
mov table 0xd2@uint8;
inline vpternlogq64 (zmm23_0, zmm26_0, zmm18_0, table);
inline vpternlogq64 (zmm23_1, zmm26_1, zmm18_1, table);
inline vpternlogq64 (zmm23_2, zmm26_2, zmm18_2, table);
inline vpternlogq64 (zmm23_3, zmm26_3, zmm18_3, table);
inline vpternlogq64 (zmm23_4, zmm26_4, zmm18_4, table);
inline vpternlogq64 (zmm23_5, zmm26_5, zmm18_5, table);
inline vpternlogq64 (zmm23_6, zmm26_6, zmm18_6, table);
inline vpternlogq64 (zmm23_7, zmm26_7, zmm18_7, table);
(* vmovdqa64 %zmm14,%zmm26                         #! PC = 0x55555558e785 *)
mov zmm26_0 zmm14_0;
mov zmm26_1 zmm14_1;
mov zmm26_2 zmm14_2;
mov zmm26_3 zmm14_3;
mov zmm26_4 zmm14_4;
mov zmm26_5 zmm14_5;
mov zmm26_6 zmm14_6;
mov zmm26_7 zmm14_7;
(* vmovdqa64 %zmm28,%zmm18                         #! PC = 0x55555558e78b *)
mov zmm18_0 zmm28_0;
mov zmm18_1 zmm28_1;
mov zmm18_2 zmm28_2;
mov zmm18_3 zmm28_3;
mov zmm18_4 zmm28_4;
mov zmm18_5 zmm28_5;
mov zmm18_6 zmm28_6;
mov zmm18_7 zmm28_7;
(* vpternlogq $0xd2,%zmm6,%zmm28,%zmm26            #! PC = 0x55555558e791 *)
mov table 0xd2@uint8;
inline vpternlogq64 (zmm26_0, zmm28_0, zmm6_0, table);
inline vpternlogq64 (zmm26_1, zmm28_1, zmm6_1, table);
inline vpternlogq64 (zmm26_2, zmm28_2, zmm6_2, table);
inline vpternlogq64 (zmm26_3, zmm28_3, zmm6_3, table);
inline vpternlogq64 (zmm26_4, zmm28_4, zmm6_4, table);
inline vpternlogq64 (zmm26_5, zmm28_5, zmm6_5, table);
inline vpternlogq64 (zmm26_6, zmm28_6, zmm6_6, table);
inline vpternlogq64 (zmm26_7, zmm28_7, zmm6_7, table);
(* vpternlogq $0xd2,%zmm7,%zmm6,%zmm18             #! PC = 0x55555558e798 *)
mov table 0xd2@uint8;
inline vpternlogq64 (zmm18_0, zmm6_0, zmm7_0, table);
inline vpternlogq64 (zmm18_1, zmm6_1, zmm7_1, table);
inline vpternlogq64 (zmm18_2, zmm6_2, zmm7_2, table);
inline vpternlogq64 (zmm18_3, zmm6_3, zmm7_3, table);
inline vpternlogq64 (zmm18_4, zmm6_4, zmm7_4, table);
inline vpternlogq64 (zmm18_5, zmm6_5, zmm7_5, table);
inline vpternlogq64 (zmm18_6, zmm6_6, zmm7_6, table);
inline vpternlogq64 (zmm18_7, zmm6_7, zmm7_7, table);
(* vmovdqa64 %zmm20,%zmm27                         #! PC = 0x55555558e79f *)
mov zmm27_0 zmm20_0;
mov zmm27_1 zmm20_1;
mov zmm27_2 zmm20_2;
mov zmm27_3 zmm20_3;
mov zmm27_4 zmm20_4;
mov zmm27_5 zmm20_5;
mov zmm27_6 zmm20_6;
mov zmm27_7 zmm20_7;
(* vpternlogq $0xd2,%zmm5,%zmm7,%zmm6              #! PC = 0x55555558e7a5 *)
mov table 0xd2@uint8;
inline vpternlogq64 (zmm6_0, zmm7_0, zmm5_0, table);
inline vpternlogq64 (zmm6_1, zmm7_1, zmm5_1, table);
inline vpternlogq64 (zmm6_2, zmm7_2, zmm5_2, table);
inline vpternlogq64 (zmm6_3, zmm7_3, zmm5_3, table);
inline vpternlogq64 (zmm6_4, zmm7_4, zmm5_4, table);
inline vpternlogq64 (zmm6_5, zmm7_5, zmm5_5, table);
inline vpternlogq64 (zmm6_6, zmm7_6, zmm5_6, table);
inline vpternlogq64 (zmm6_7, zmm7_7, zmm5_7, table);
(* vmovdqa64 %zmm3,%zmm21                          #! PC = 0x55555558e7ac *)
mov zmm21_0 zmm3_0;
mov zmm21_1 zmm3_1;
mov zmm21_2 zmm3_2;
mov zmm21_3 zmm3_3;
mov zmm21_4 zmm3_4;
mov zmm21_5 zmm3_5;
mov zmm21_6 zmm3_6;
mov zmm21_7 zmm3_7;
(* vpternlogq $0xd2,%zmm14,%zmm5,%zmm7             #! PC = 0x55555558e7b2 *)
mov table 0xd2@uint8;
inline vpternlogq64 (zmm7_0, zmm5_0, zmm14_0, table);
inline vpternlogq64 (zmm7_1, zmm5_1, zmm14_1, table);
inline vpternlogq64 (zmm7_2, zmm5_2, zmm14_2, table);
inline vpternlogq64 (zmm7_3, zmm5_3, zmm14_3, table);
inline vpternlogq64 (zmm7_4, zmm5_4, zmm14_4, table);
inline vpternlogq64 (zmm7_5, zmm5_5, zmm14_5, table);
inline vpternlogq64 (zmm7_6, zmm5_6, zmm14_6, table);
inline vpternlogq64 (zmm7_7, zmm5_7, zmm14_7, table);
(* vpternlogq $0xd2,%zmm28,%zmm14,%zmm5            #! PC = 0x55555558e7b9 *)
mov table 0xd2@uint8;
inline vpternlogq64 (zmm5_0, zmm14_0, zmm28_0, table);
inline vpternlogq64 (zmm5_1, zmm14_1, zmm28_1, table);
inline vpternlogq64 (zmm5_2, zmm14_2, zmm28_2, table);
inline vpternlogq64 (zmm5_3, zmm14_3, zmm28_3, table);
inline vpternlogq64 (zmm5_4, zmm14_4, zmm28_4, table);
inline vpternlogq64 (zmm5_5, zmm14_5, zmm28_5, table);
inline vpternlogq64 (zmm5_6, zmm14_6, zmm28_6, table);
inline vpternlogq64 (zmm5_7, zmm14_7, zmm28_7, table);
(* vmovdqa64 %zmm22,%zmm28                         #! PC = 0x55555558e7c0 *)
mov zmm28_0 zmm22_0;
mov zmm28_1 zmm22_1;
mov zmm28_2 zmm22_2;
mov zmm28_3 zmm22_3;
mov zmm28_4 zmm22_4;
mov zmm28_5 zmm22_5;
mov zmm28_6 zmm22_6;
mov zmm28_7 zmm22_7;
(* vpternlogq $0xd2,%zmm0,%zmm19,%zmm28            #! PC = 0x55555558e7c6 *)
mov table 0xd2@uint8;
inline vpternlogq64 (zmm28_0, zmm19_0, zmm0_0, table);
inline vpternlogq64 (zmm28_1, zmm19_1, zmm0_1, table);
inline vpternlogq64 (zmm28_2, zmm19_2, zmm0_2, table);
inline vpternlogq64 (zmm28_3, zmm19_3, zmm0_3, table);
inline vpternlogq64 (zmm28_4, zmm19_4, zmm0_4, table);
inline vpternlogq64 (zmm28_5, zmm19_5, zmm0_5, table);
inline vpternlogq64 (zmm28_6, zmm19_6, zmm0_6, table);
inline vpternlogq64 (zmm28_7, zmm19_7, zmm0_7, table);
(* vpternlogq $0xd2,%zmm19,%zmm22,%zmm27           #! PC = 0x55555558e7cd *)
mov table 0xd2@uint8;
inline vpternlogq64 (zmm27_0, zmm22_0, zmm19_0, table);
inline vpternlogq64 (zmm27_1, zmm22_1, zmm19_1, table);
inline vpternlogq64 (zmm27_2, zmm22_2, zmm19_2, table);
inline vpternlogq64 (zmm27_3, zmm22_3, zmm19_3, table);
inline vpternlogq64 (zmm27_4, zmm22_4, zmm19_4, table);
inline vpternlogq64 (zmm27_5, zmm22_5, zmm19_5, table);
inline vpternlogq64 (zmm27_6, zmm22_6, zmm19_6, table);
inline vpternlogq64 (zmm27_7, zmm22_7, zmm19_7, table);
(* vpternlogq $0x96,%zmm2,%zmm10,%zmm21            #! PC = 0x55555558e7d4 *)
mov table 0x96@uint8;
inline vpternlogq64 (zmm21_0, zmm10_0, zmm2_0, table);
inline vpternlogq64 (zmm21_1, zmm10_1, zmm2_1, table);
inline vpternlogq64 (zmm21_2, zmm10_2, zmm2_2, table);
inline vpternlogq64 (zmm21_3, zmm10_3, zmm2_3, table);
inline vpternlogq64 (zmm21_4, zmm10_4, zmm2_4, table);
inline vpternlogq64 (zmm21_5, zmm10_5, zmm2_5, table);
inline vpternlogq64 (zmm21_6, zmm10_6, zmm2_6, table);
inline vpternlogq64 (zmm21_7, zmm10_7, zmm2_7, table);
(* vpternlogq $0xd2,%zmm8,%zmm0,%zmm19             #! PC = 0x55555558e7db *)
mov table 0xd2@uint8;
inline vpternlogq64 (zmm19_0, zmm0_0, zmm8_0, table);
inline vpternlogq64 (zmm19_1, zmm0_1, zmm8_1, table);
inline vpternlogq64 (zmm19_2, zmm0_2, zmm8_2, table);
inline vpternlogq64 (zmm19_3, zmm0_3, zmm8_3, table);
inline vpternlogq64 (zmm19_4, zmm0_4, zmm8_4, table);
inline vpternlogq64 (zmm19_5, zmm0_5, zmm8_5, table);
inline vpternlogq64 (zmm19_6, zmm0_6, zmm8_6, table);
inline vpternlogq64 (zmm19_7, zmm0_7, zmm8_7, table);
(* vpternlogq $0x96,%zmm19,%zmm6,%zmm21            #! PC = 0x55555558e7e2 *)
mov table 0x96@uint8;
inline vpternlogq64 (zmm21_0, zmm6_0, zmm19_0, table);
inline vpternlogq64 (zmm21_1, zmm6_1, zmm19_1, table);
inline vpternlogq64 (zmm21_2, zmm6_2, zmm19_2, table);
inline vpternlogq64 (zmm21_3, zmm6_3, zmm19_3, table);
inline vpternlogq64 (zmm21_4, zmm6_4, zmm19_4, table);
inline vpternlogq64 (zmm21_5, zmm6_5, zmm19_5, table);
inline vpternlogq64 (zmm21_6, zmm6_6, zmm19_6, table);
inline vpternlogq64 (zmm21_7, zmm6_7, zmm19_7, table);
(* vprolq $0x1,%zmm21,%zmm14                       #! PC = 0x55555558e7e9 *)
rol zmm14_0 zmm21_0 0x1;
rol zmm14_1 zmm21_1 0x1;
rol zmm14_2 zmm21_2 0x1;
rol zmm14_3 zmm21_3 0x1;
rol zmm14_4 zmm21_4 0x1;
rol zmm14_5 zmm21_5 0x1;
rol zmm14_6 zmm21_6 0x1;
rol zmm14_7 zmm21_7 0x1;
(* vpternlogq $0xd2,%zmm20,%zmm8,%zmm0             #! PC = 0x55555558e7f0 *)
mov table 0xd2@uint8;
inline vpternlogq64 (zmm0_0, zmm8_0, zmm20_0, table);
inline vpternlogq64 (zmm0_1, zmm8_1, zmm20_1, table);
inline vpternlogq64 (zmm0_2, zmm8_2, zmm20_2, table);
inline vpternlogq64 (zmm0_3, zmm8_3, zmm20_3, table);
inline vpternlogq64 (zmm0_4, zmm8_4, zmm20_4, table);
inline vpternlogq64 (zmm0_5, zmm8_5, zmm20_5, table);
inline vpternlogq64 (zmm0_6, zmm8_6, zmm20_6, table);
inline vpternlogq64 (zmm0_7, zmm8_7, zmm20_7, table);
(* vpternlogq $0xd2,%zmm22,%zmm20,%zmm8            #! PC = 0x55555558e7f7 *)
mov table 0xd2@uint8;
inline vpternlogq64 (zmm8_0, zmm20_0, zmm22_0, table);
inline vpternlogq64 (zmm8_1, zmm20_1, zmm22_1, table);
inline vpternlogq64 (zmm8_2, zmm20_2, zmm22_2, table);
inline vpternlogq64 (zmm8_3, zmm20_3, zmm22_3, table);
inline vpternlogq64 (zmm8_4, zmm20_4, zmm22_4, table);
inline vpternlogq64 (zmm8_5, zmm20_5, zmm22_5, table);
inline vpternlogq64 (zmm8_6, zmm20_6, zmm22_6, table);
inline vpternlogq64 (zmm8_7, zmm20_7, zmm22_7, table);
(* vmovdqa64 %zmm9,%zmm22                          #! PC = 0x55555558e7fe *)
mov zmm22_0 zmm9_0;
mov zmm22_1 zmm9_1;
mov zmm22_2 zmm9_2;
mov zmm22_3 zmm9_3;
mov zmm22_4 zmm9_4;
mov zmm22_5 zmm9_5;
mov zmm22_6 zmm9_6;
mov zmm22_7 zmm9_7;
(* vpternlogq $0x96,%zmm1,%zmm16,%zmm22            #! PC = 0x55555558e804 *)
mov table 0x96@uint8;
inline vpternlogq64 (zmm22_0, zmm16_0, zmm1_0, table);
inline vpternlogq64 (zmm22_1, zmm16_1, zmm1_1, table);
inline vpternlogq64 (zmm22_2, zmm16_2, zmm1_2, table);
inline vpternlogq64 (zmm22_3, zmm16_3, zmm1_3, table);
inline vpternlogq64 (zmm22_4, zmm16_4, zmm1_4, table);
inline vpternlogq64 (zmm22_5, zmm16_5, zmm1_5, table);
inline vpternlogq64 (zmm22_6, zmm16_6, zmm1_6, table);
inline vpternlogq64 (zmm22_7, zmm16_7, zmm1_7, table);
(* vpternlogq $0x96,%zmm0,%zmm7,%zmm22             #! PC = 0x55555558e80b *)
mov table 0x96@uint8;
inline vpternlogq64 (zmm22_0, zmm7_0, zmm0_0, table);
inline vpternlogq64 (zmm22_1, zmm7_1, zmm0_1, table);
inline vpternlogq64 (zmm22_2, zmm7_2, zmm0_2, table);
inline vpternlogq64 (zmm22_3, zmm7_3, zmm0_3, table);
inline vpternlogq64 (zmm22_4, zmm7_4, zmm0_4, table);
inline vpternlogq64 (zmm22_5, zmm7_5, zmm0_5, table);
inline vpternlogq64 (zmm22_6, zmm7_6, zmm0_6, table);
inline vpternlogq64 (zmm22_7, zmm7_7, zmm0_7, table);
(* vmovdqa64 %zmm14,0x148(%rsp)                    #! EA = L0x7fffffffd600; PC = 0x55555558e812 *)
mov L0x7fffffffd600 zmm14_0;
mov L0x7fffffffd608 zmm14_1;
mov L0x7fffffffd610 zmm14_2;
mov L0x7fffffffd618 zmm14_3;
mov L0x7fffffffd620 zmm14_4;
mov L0x7fffffffd628 zmm14_5;
mov L0x7fffffffd630 zmm14_6;
mov L0x7fffffffd638 zmm14_7;
(* vprolq $0x1,%zmm22,%zmm14                       #! PC = 0x55555558e81d *)
rol zmm14_0 zmm22_0 0x1;
rol zmm14_1 zmm22_1 0x1;
rol zmm14_2 zmm22_2 0x1;
rol zmm14_3 zmm22_3 0x1;
rol zmm14_4 zmm22_4 0x1;
rol zmm14_5 zmm22_5 0x1;
rol zmm14_6 zmm22_6 0x1;
rol zmm14_7 zmm22_7 0x1;
(* vmovdqa64 %zmm13,%zmm4                          #! PC = 0x55555558e824 *)
mov zmm4_0 zmm13_0;
mov zmm4_1 zmm13_1;
mov zmm4_2 zmm13_2;
mov zmm4_3 zmm13_3;
mov zmm4_4 zmm13_4;
mov zmm4_5 zmm13_5;
mov zmm4_6 zmm13_6;
mov zmm4_7 zmm13_7;
(* vpternlogq $0x96,%zmm23,%zmm17,%zmm4            #! PC = 0x55555558e82a *)
mov table 0x96@uint8;
inline vpternlogq64 (zmm4_0, zmm17_0, zmm23_0, table);
inline vpternlogq64 (zmm4_1, zmm17_1, zmm23_1, table);
inline vpternlogq64 (zmm4_2, zmm17_2, zmm23_2, table);
inline vpternlogq64 (zmm4_3, zmm17_3, zmm23_3, table);
inline vpternlogq64 (zmm4_4, zmm17_4, zmm23_4, table);
inline vpternlogq64 (zmm4_5, zmm17_5, zmm23_5, table);
inline vpternlogq64 (zmm4_6, zmm17_6, zmm23_6, table);
inline vpternlogq64 (zmm4_7, zmm17_7, zmm23_7, table);
(* vpternlogq $0x96,%zmm8,%zmm5,%zmm4              #! PC = 0x55555558e831 *)
mov table 0x96@uint8;
inline vpternlogq64 (zmm4_0, zmm5_0, zmm8_0, table);
inline vpternlogq64 (zmm4_1, zmm5_1, zmm8_1, table);
inline vpternlogq64 (zmm4_2, zmm5_2, zmm8_2, table);
inline vpternlogq64 (zmm4_3, zmm5_3, zmm8_3, table);
inline vpternlogq64 (zmm4_4, zmm5_4, zmm8_4, table);
inline vpternlogq64 (zmm4_5, zmm5_5, zmm8_5, table);
inline vpternlogq64 (zmm4_6, zmm5_6, zmm8_6, table);
inline vpternlogq64 (zmm4_7, zmm5_7, zmm8_7, table);
(* vmovdqa64 %zmm24,%zmm12                         #! PC = 0x55555558e838 *)
mov zmm12_0 zmm24_0;
mov zmm12_1 zmm24_1;
mov zmm12_2 zmm24_2;
mov zmm12_3 zmm24_3;
mov zmm12_4 zmm24_4;
mov zmm12_5 zmm24_5;
mov zmm12_6 zmm24_6;
mov zmm12_7 zmm24_7;
(* vpternlogq $0x96,%zmm15,%zmm30,%zmm12           #! PC = 0x55555558e83e *)
mov table 0x96@uint8;
inline vpternlogq64 (zmm12_0, zmm30_0, zmm15_0, table);
inline vpternlogq64 (zmm12_1, zmm30_1, zmm15_1, table);
inline vpternlogq64 (zmm12_2, zmm30_2, zmm15_2, table);
inline vpternlogq64 (zmm12_3, zmm30_3, zmm15_3, table);
inline vpternlogq64 (zmm12_4, zmm30_4, zmm15_4, table);
inline vpternlogq64 (zmm12_5, zmm30_5, zmm15_5, table);
inline vpternlogq64 (zmm12_6, zmm30_6, zmm15_6, table);
inline vpternlogq64 (zmm12_7, zmm30_7, zmm15_7, table);
(* vmovdqa64 %zmm14,0x108(%rsp)                    #! EA = L0x7fffffffd5c0; PC = 0x55555558e845 *)
mov L0x7fffffffd5c0 zmm14_0;
mov L0x7fffffffd5c8 zmm14_1;
mov L0x7fffffffd5d0 zmm14_2;
mov L0x7fffffffd5d8 zmm14_3;
mov L0x7fffffffd5e0 zmm14_4;
mov L0x7fffffffd5e8 zmm14_5;
mov L0x7fffffffd5f0 zmm14_6;
mov L0x7fffffffd5f8 zmm14_7;
(* vprolq $0x1,%zmm4,%zmm14                        #! PC = 0x55555558e850 *)
rol zmm14_0 zmm4_0 0x1;
rol zmm14_1 zmm4_1 0x1;
rol zmm14_2 zmm4_2 0x1;
rol zmm14_3 zmm4_3 0x1;
rol zmm14_4 zmm4_4 0x1;
rol zmm14_5 zmm4_5 0x1;
rol zmm14_6 zmm4_6 0x1;
rol zmm14_7 zmm4_7 0x1;
(* vpternlogq $0x96,%zmm27,%zmm26,%zmm12           #! PC = 0x55555558e857 *)
mov table 0x96@uint8;
inline vpternlogq64 (zmm12_0, zmm26_0, zmm27_0, table);
inline vpternlogq64 (zmm12_1, zmm26_1, zmm27_1, table);
inline vpternlogq64 (zmm12_2, zmm26_2, zmm27_2, table);
inline vpternlogq64 (zmm12_3, zmm26_3, zmm27_3, table);
inline vpternlogq64 (zmm12_4, zmm26_4, zmm27_4, table);
inline vpternlogq64 (zmm12_5, zmm26_5, zmm27_5, table);
inline vpternlogq64 (zmm12_6, zmm26_6, zmm27_6, table);
inline vpternlogq64 (zmm12_7, zmm26_7, zmm27_7, table);
(* vmovdqa64 %zmm25,%zmm20                         #! PC = 0x55555558e85e *)
mov zmm20_0 zmm25_0;
mov zmm20_1 zmm25_1;
mov zmm20_2 zmm25_2;
mov zmm20_3 zmm25_3;
mov zmm20_4 zmm25_4;
mov zmm20_5 zmm25_5;
mov zmm20_6 zmm25_6;
mov zmm20_7 zmm25_7;
(* vpternlogq $0x96,%zmm11,%zmm31,%zmm20           #! PC = 0x55555558e864 *)
mov table 0x96@uint8;
inline vpternlogq64 (zmm20_0, zmm31_0, zmm11_0, table);
inline vpternlogq64 (zmm20_1, zmm31_1, zmm11_1, table);
inline vpternlogq64 (zmm20_2, zmm31_2, zmm11_2, table);
inline vpternlogq64 (zmm20_3, zmm31_3, zmm11_3, table);
inline vpternlogq64 (zmm20_4, zmm31_4, zmm11_4, table);
inline vpternlogq64 (zmm20_5, zmm31_5, zmm11_5, table);
inline vpternlogq64 (zmm20_6, zmm31_6, zmm11_6, table);
inline vpternlogq64 (zmm20_7, zmm31_7, zmm11_7, table);
(* vpternlogq $0x96,%zmm28,%zmm18,%zmm20           #! PC = 0x55555558e86b *)
mov table 0x96@uint8;
inline vpternlogq64 (zmm20_0, zmm18_0, zmm28_0, table);
inline vpternlogq64 (zmm20_1, zmm18_1, zmm28_1, table);
inline vpternlogq64 (zmm20_2, zmm18_2, zmm28_2, table);
inline vpternlogq64 (zmm20_3, zmm18_3, zmm28_3, table);
inline vpternlogq64 (zmm20_4, zmm18_4, zmm28_4, table);
inline vpternlogq64 (zmm20_5, zmm18_5, zmm28_5, table);
inline vpternlogq64 (zmm20_6, zmm18_6, zmm28_6, table);
inline vpternlogq64 (zmm20_7, zmm18_7, zmm28_7, table);
(* vprolq $0x1,%zmm20,%zmm29                       #! PC = 0x55555558e872 *)
rol zmm29_0 zmm20_0 0x1;
rol zmm29_1 zmm20_1 0x1;
rol zmm29_2 zmm20_2 0x1;
rol zmm29_3 zmm20_3 0x1;
rol zmm29_4 zmm20_4 0x1;
rol zmm29_5 zmm20_5 0x1;
rol zmm29_6 zmm20_6 0x1;
rol zmm29_7 zmm20_7 0x1;
(* vmovdqa64 %zmm14,0xc8(%rsp)                     #! EA = L0x7fffffffd580; PC = 0x55555558e879 *)
mov L0x7fffffffd580 zmm14_0;
mov L0x7fffffffd588 zmm14_1;
mov L0x7fffffffd590 zmm14_2;
mov L0x7fffffffd598 zmm14_3;
mov L0x7fffffffd5a0 zmm14_4;
mov L0x7fffffffd5a8 zmm14_5;
mov L0x7fffffffd5b0 zmm14_6;
mov L0x7fffffffd5b8 zmm14_7;
(* vprolq $0x1,%zmm12,%zmm14                       #! PC = 0x55555558e884 *)
rol zmm14_0 zmm12_0 0x1;
rol zmm14_1 zmm12_1 0x1;
rol zmm14_2 zmm12_2 0x1;
rol zmm14_3 zmm12_3 0x1;
rol zmm14_4 zmm12_4 0x1;
rol zmm14_5 zmm12_5 0x1;
rol zmm14_6 zmm12_6 0x1;
rol zmm14_7 zmm12_7 0x1;
(* vpxord 0x148(%rsp),%zmm12,%zmm12                #! EA = L0x7fffffffd600; Value = 0x85f0cf0089d2953b; PC = 0x55555558e88b *)
xor zmm12_0@uint64 zmm12_0 L0x7fffffffd600;
xor zmm12_1@uint64 zmm12_1 L0x7fffffffd608;
xor zmm12_2@uint64 zmm12_2 L0x7fffffffd610;
xor zmm12_3@uint64 zmm12_3 L0x7fffffffd618;
xor zmm12_4@uint64 zmm12_4 L0x7fffffffd620;
xor zmm12_5@uint64 zmm12_5 L0x7fffffffd628;
xor zmm12_6@uint64 zmm12_6 L0x7fffffffd630;
xor zmm12_7@uint64 zmm12_7 L0x7fffffffd638;
(* vpxord 0x108(%rsp),%zmm20,%zmm20                #! EA = L0x7fffffffd5c0; Value = 0xd5892b5f8b5a4b11; PC = 0x55555558e896 *)
xor zmm20_0@uint64 zmm20_0 L0x7fffffffd5c0;
xor zmm20_1@uint64 zmm20_1 L0x7fffffffd5c8;
xor zmm20_2@uint64 zmm20_2 L0x7fffffffd5d0;
xor zmm20_3@uint64 zmm20_3 L0x7fffffffd5d8;
xor zmm20_4@uint64 zmm20_4 L0x7fffffffd5e0;
xor zmm20_5@uint64 zmm20_5 L0x7fffffffd5e8;
xor zmm20_6@uint64 zmm20_6 L0x7fffffffd5f0;
xor zmm20_7@uint64 zmm20_7 L0x7fffffffd5f8;
(* vpxord 0xc8(%rsp),%zmm21,%zmm21                 #! EA = L0x7fffffffd580; Value = 0x92a19c2c7adbe26b; PC = 0x55555558e8a1 *)
xor zmm21_0@uint64 zmm21_0 L0x7fffffffd580;
xor zmm21_1@uint64 zmm21_1 L0x7fffffffd588;
xor zmm21_2@uint64 zmm21_2 L0x7fffffffd590;
xor zmm21_3@uint64 zmm21_3 L0x7fffffffd598;
xor zmm21_4@uint64 zmm21_4 L0x7fffffffd5a0;
xor zmm21_5@uint64 zmm21_5 L0x7fffffffd5a8;
xor zmm21_6@uint64 zmm21_6 L0x7fffffffd5b0;
xor zmm21_7@uint64 zmm21_7 L0x7fffffffd5b8;
(* vpxord %zmm31,%zmm12,%zmm31                     #! PC = 0x55555558e8ac *)
xor zmm31_0@uint64 zmm12_0 zmm31_0;
xor zmm31_1@uint64 zmm12_1 zmm31_1;
xor zmm31_2@uint64 zmm12_2 zmm31_2;
xor zmm31_3@uint64 zmm12_3 zmm31_3;
xor zmm31_4@uint64 zmm12_4 zmm31_4;
xor zmm31_5@uint64 zmm12_5 zmm31_5;
xor zmm31_6@uint64 zmm12_6 zmm31_6;
xor zmm31_7@uint64 zmm12_7 zmm31_7;
(* vprorq $0x14,%zmm31,%zmm31                      #! PC = 0x55555558e8b2 *)
ror zmm31_0 zmm31_0 0x14;
ror zmm31_1 zmm31_1 0x14;
ror zmm31_2 zmm31_2 0x14;
ror zmm31_3 zmm31_3 0x14;
ror zmm31_4 zmm31_4 0x14;
ror zmm31_5 zmm31_5 0x14;
ror zmm31_6 zmm31_6 0x14;
ror zmm31_7 zmm31_7 0x14;
(* vpxord %zmm14,%zmm22,%zmm14                     #! PC = 0x55555558e8b9 *)
xor zmm14_0@uint64 zmm22_0 zmm14_0;
xor zmm14_1@uint64 zmm22_1 zmm14_1;
xor zmm14_2@uint64 zmm22_2 zmm14_2;
xor zmm14_3@uint64 zmm22_3 zmm14_3;
xor zmm14_4@uint64 zmm22_4 zmm14_4;
xor zmm14_5@uint64 zmm22_5 zmm14_5;
xor zmm14_6@uint64 zmm22_6 zmm14_6;
xor zmm14_7@uint64 zmm22_7 zmm14_7;
(* vpxord %zmm2,%zmm20,%zmm2                       #! PC = 0x55555558e8bf *)
xor zmm2_0@uint64 zmm20_0 zmm2_0;
xor zmm2_1@uint64 zmm20_1 zmm2_1;
xor zmm2_2@uint64 zmm20_2 zmm2_2;
xor zmm2_3@uint64 zmm20_3 zmm2_3;
xor zmm2_4@uint64 zmm20_4 zmm2_4;
xor zmm2_5@uint64 zmm20_5 zmm2_5;
xor zmm2_6@uint64 zmm20_6 zmm2_6;
xor zmm2_7@uint64 zmm20_7 zmm2_7;
(* vpxord %zmm7,%zmm21,%zmm7                       #! PC = 0x55555558e8c5 *)
xor zmm7_0@uint64 zmm21_0 zmm7_0;
xor zmm7_1@uint64 zmm21_1 zmm7_1;
xor zmm7_2@uint64 zmm21_2 zmm7_2;
xor zmm7_3@uint64 zmm21_3 zmm7_3;
xor zmm7_4@uint64 zmm21_4 zmm7_4;
xor zmm7_5@uint64 zmm21_5 zmm7_5;
xor zmm7_6@uint64 zmm21_6 zmm7_6;
xor zmm7_7@uint64 zmm21_7 zmm7_7;
(* vpxord %zmm8,%zmm14,%zmm8                       #! PC = 0x55555558e8cb *)
xor zmm8_0@uint64 zmm14_0 zmm8_0;
xor zmm8_1@uint64 zmm14_1 zmm8_1;
xor zmm8_2@uint64 zmm14_2 zmm8_2;
xor zmm8_3@uint64 zmm14_3 zmm8_3;
xor zmm8_4@uint64 zmm14_4 zmm8_4;
xor zmm8_5@uint64 zmm14_5 zmm8_5;
xor zmm8_6@uint64 zmm14_6 zmm8_6;
xor zmm8_7@uint64 zmm14_7 zmm8_7;
(* vpxord %zmm29,%zmm4,%zmm4                       #! PC = 0x55555558e8d1 *)
xor zmm4_0@uint64 zmm4_0 zmm29_0;
xor zmm4_1@uint64 zmm4_1 zmm29_1;
xor zmm4_2@uint64 zmm4_2 zmm29_2;
xor zmm4_3@uint64 zmm4_3 zmm29_3;
xor zmm4_4@uint64 zmm4_4 zmm29_4;
xor zmm4_5@uint64 zmm4_5 zmm29_5;
xor zmm4_6@uint64 zmm4_6 zmm29_6;
xor zmm4_7@uint64 zmm4_7 zmm29_7;
(* vprorq $0x15,%zmm2,%zmm2                        #! PC = 0x55555558e8d7 *)
ror zmm2_0 zmm2_0 0x15;
ror zmm2_1 zmm2_1 0x15;
ror zmm2_2 zmm2_2 0x15;
ror zmm2_3 zmm2_3 0x15;
ror zmm2_4 zmm2_4 0x15;
ror zmm2_5 zmm2_5 0x15;
ror zmm2_6 zmm2_6 0x15;
ror zmm2_7 zmm2_7 0x15;
(* vprolq $0x15,%zmm7,%zmm7                        #! PC = 0x55555558e8de *)
rol zmm7_0 zmm7_0 0x15;
rol zmm7_1 zmm7_1 0x15;
rol zmm7_2 zmm7_2 0x15;
rol zmm7_3 zmm7_3 0x15;
rol zmm7_4 zmm7_4 0x15;
rol zmm7_5 zmm7_5 0x15;
rol zmm7_6 zmm7_6 0x15;
rol zmm7_7 zmm7_7 0x15;
(* vprolq $0xe,%zmm8,%zmm8                         #! PC = 0x55555558e8e5 *)
rol zmm8_0 zmm8_0 0xe;
rol zmm8_1 zmm8_1 0xe;
rol zmm8_2 zmm8_2 0xe;
rol zmm8_3 zmm8_3 0xe;
rol zmm8_4 zmm8_4 0xe;
rol zmm8_5 zmm8_5 0xe;
rol zmm8_6 zmm8_6 0xe;
rol zmm8_7 zmm8_7 0xe;
(* vpxord %zmm19,%zmm20,%zmm19                     #! PC = 0x55555558e8ec *)
xor zmm19_0@uint64 zmm20_0 zmm19_0;
xor zmm19_1@uint64 zmm20_1 zmm19_1;
xor zmm19_2@uint64 zmm20_2 zmm19_2;
xor zmm19_3@uint64 zmm20_3 zmm19_3;
xor zmm19_4@uint64 zmm20_4 zmm19_4;
xor zmm19_5@uint64 zmm20_5 zmm19_5;
xor zmm19_6@uint64 zmm20_6 zmm19_6;
xor zmm19_7@uint64 zmm20_7 zmm19_7;
(* vpxord %zmm9,%zmm21,%zmm9                       #! PC = 0x55555558e8f2 *)
xor zmm9_0@uint64 zmm21_0 zmm9_0;
xor zmm9_1@uint64 zmm21_1 zmm9_1;
xor zmm9_2@uint64 zmm21_2 zmm9_2;
xor zmm9_3@uint64 zmm21_3 zmm9_3;
xor zmm9_4@uint64 zmm21_4 zmm9_4;
xor zmm9_5@uint64 zmm21_5 zmm9_5;
xor zmm9_6@uint64 zmm21_6 zmm9_6;
xor zmm9_7@uint64 zmm21_7 zmm9_7;
(* vpxord %zmm17,%zmm14,%zmm17                     #! PC = 0x55555558e8f8 *)
xor zmm17_0@uint64 zmm14_0 zmm17_0;
xor zmm17_1@uint64 zmm14_1 zmm17_1;
xor zmm17_2@uint64 zmm14_2 zmm17_2;
xor zmm17_3@uint64 zmm14_3 zmm17_3;
xor zmm17_4@uint64 zmm14_4 zmm17_4;
xor zmm17_5@uint64 zmm14_5 zmm17_5;
xor zmm17_6@uint64 zmm14_6 zmm17_6;
xor zmm17_7@uint64 zmm14_7 zmm17_7;
(* vpxord %zmm10,%zmm20,%zmm10                     #! PC = 0x55555558e8fe *)
xor zmm10_0@uint64 zmm20_0 zmm10_0;
xor zmm10_1@uint64 zmm20_1 zmm10_1;
xor zmm10_2@uint64 zmm20_2 zmm10_2;
xor zmm10_3@uint64 zmm20_3 zmm10_3;
xor zmm10_4@uint64 zmm20_4 zmm10_4;
xor zmm10_5@uint64 zmm20_5 zmm10_5;
xor zmm10_6@uint64 zmm20_6 zmm10_6;
xor zmm10_7@uint64 zmm20_7 zmm10_7;
(* vpxord %zmm1,%zmm21,%zmm1                       #! PC = 0x55555558e904 *)
xor zmm1_0@uint64 zmm21_0 zmm1_0;
xor zmm1_1@uint64 zmm21_1 zmm1_1;
xor zmm1_2@uint64 zmm21_2 zmm1_2;
xor zmm1_3@uint64 zmm21_3 zmm1_3;
xor zmm1_4@uint64 zmm21_4 zmm1_4;
xor zmm1_5@uint64 zmm21_5 zmm1_5;
xor zmm1_6@uint64 zmm21_6 zmm1_6;
xor zmm1_7@uint64 zmm21_7 zmm1_7;
(* vpxord %zmm6,%zmm20,%zmm6                       #! PC = 0x55555558e90a *)
xor zmm6_0@uint64 zmm20_0 zmm6_0;
xor zmm6_1@uint64 zmm20_1 zmm6_1;
xor zmm6_2@uint64 zmm20_2 zmm6_2;
xor zmm6_3@uint64 zmm20_3 zmm6_3;
xor zmm6_4@uint64 zmm20_4 zmm6_4;
xor zmm6_5@uint64 zmm20_5 zmm6_5;
xor zmm6_6@uint64 zmm20_6 zmm6_6;
xor zmm6_7@uint64 zmm20_7 zmm6_7;
(* vpxord %zmm0,%zmm21,%zmm0                       #! PC = 0x55555558e910 *)
xor zmm0_0@uint64 zmm21_0 zmm0_0;
xor zmm0_1@uint64 zmm21_1 zmm0_1;
xor zmm0_2@uint64 zmm21_2 zmm0_2;
xor zmm0_3@uint64 zmm21_3 zmm0_3;
xor zmm0_4@uint64 zmm21_4 zmm0_4;
xor zmm0_5@uint64 zmm21_5 zmm0_5;
xor zmm0_6@uint64 zmm21_6 zmm0_6;
xor zmm0_7@uint64 zmm21_7 zmm0_7;
(* vpxord %zmm3,%zmm20,%zmm20                      #! PC = 0x55555558e916 *)
xor zmm20_0@uint64 zmm20_0 zmm3_0;
xor zmm20_1@uint64 zmm20_1 zmm3_1;
xor zmm20_2@uint64 zmm20_2 zmm3_2;
xor zmm20_3@uint64 zmm20_3 zmm3_3;
xor zmm20_4@uint64 zmm20_4 zmm3_4;
xor zmm20_5@uint64 zmm20_5 zmm3_5;
xor zmm20_6@uint64 zmm20_6 zmm3_6;
xor zmm20_7@uint64 zmm20_7 zmm3_7;
(* vpxord %zmm16,%zmm21,%zmm21                     #! PC = 0x55555558e91c *)
xor zmm21_0@uint64 zmm21_0 zmm16_0;
xor zmm21_1@uint64 zmm21_1 zmm16_1;
xor zmm21_2@uint64 zmm21_2 zmm16_2;
xor zmm21_3@uint64 zmm21_3 zmm16_3;
xor zmm21_4@uint64 zmm21_4 zmm16_4;
xor zmm21_5@uint64 zmm21_5 zmm16_5;
xor zmm21_6@uint64 zmm21_6 zmm16_6;
xor zmm21_7@uint64 zmm21_7 zmm16_7;
(* vpxord %zmm4,%zmm24,%zmm24                      #! PC = 0x55555558e922 *)
xor zmm24_0@uint64 zmm24_0 zmm4_0;
xor zmm24_1@uint64 zmm24_1 zmm4_1;
xor zmm24_2@uint64 zmm24_2 zmm4_2;
xor zmm24_3@uint64 zmm24_3 zmm4_3;
xor zmm24_4@uint64 zmm24_4 zmm4_4;
xor zmm24_5@uint64 zmm24_5 zmm4_5;
xor zmm24_6@uint64 zmm24_6 zmm4_6;
xor zmm24_7@uint64 zmm24_7 zmm4_7;
(* vprolq $0x1c,%zmm9,%zmm9                        #! PC = 0x55555558e928 *)
rol zmm9_0 zmm9_0 0x1c;
rol zmm9_1 zmm9_1 0x1c;
rol zmm9_2 zmm9_2 0x1c;
rol zmm9_3 zmm9_3 0x1c;
rol zmm9_4 zmm9_4 0x1c;
rol zmm9_5 zmm9_5 0x1c;
rol zmm9_6 zmm9_6 0x1c;
rol zmm9_7 zmm9_7 0x1c;
(* vprolq $0x14,%zmm17,%zmm17                      #! PC = 0x55555558e92f *)
rol zmm17_0 zmm17_0 0x14;
rol zmm17_1 zmm17_1 0x14;
rol zmm17_2 zmm17_2 0x14;
rol zmm17_3 zmm17_3 0x14;
rol zmm17_4 zmm17_4 0x14;
rol zmm17_5 zmm17_5 0x14;
rol zmm17_6 zmm17_6 0x14;
rol zmm17_7 zmm17_7 0x14;
(* vprorq $0x2,%zmm20,%zmm20                       #! PC = 0x55555558e936 *)
ror zmm20_0 zmm20_0 0x2;
ror zmm20_1 zmm20_1 0x2;
ror zmm20_2 zmm20_2 0x2;
ror zmm20_3 zmm20_3 0x2;
ror zmm20_4 zmm20_4 0x2;
ror zmm20_5 zmm20_5 0x2;
ror zmm20_6 zmm20_6 0x2;
ror zmm20_7 zmm20_7 0x2;
(* vprorq $0x9,%zmm21,%zmm21                       #! PC = 0x55555558e93d *)
ror zmm21_0 zmm21_0 0x9;
ror zmm21_1 zmm21_1 0x9;
ror zmm21_2 zmm21_2 0x9;
ror zmm21_3 zmm21_3 0x9;
ror zmm21_4 zmm21_4 0x9;
ror zmm21_5 zmm21_5 0x9;
ror zmm21_6 zmm21_6 0x9;
ror zmm21_7 zmm21_7 0x9;
(* vpxord %zmm15,%zmm4,%zmm15                      #! PC = 0x55555558e944 *)
xor zmm15_0@uint64 zmm4_0 zmm15_0;
xor zmm15_1@uint64 zmm4_1 zmm15_1;
xor zmm15_2@uint64 zmm4_2 zmm15_2;
xor zmm15_3@uint64 zmm4_3 zmm15_3;
xor zmm15_4@uint64 zmm4_4 zmm15_4;
xor zmm15_5@uint64 zmm4_5 zmm15_5;
xor zmm15_6@uint64 zmm4_6 zmm15_6;
xor zmm15_7@uint64 zmm4_7 zmm15_7;
(* vpxord %zmm18,%zmm12,%zmm18                     #! PC = 0x55555558e94a *)
xor zmm18_0@uint64 zmm12_0 zmm18_0;
xor zmm18_1@uint64 zmm12_1 zmm18_1;
xor zmm18_2@uint64 zmm12_2 zmm18_2;
xor zmm18_3@uint64 zmm12_3 zmm18_3;
xor zmm18_4@uint64 zmm12_4 zmm18_4;
xor zmm18_5@uint64 zmm12_5 zmm18_5;
xor zmm18_6@uint64 zmm12_6 zmm18_6;
xor zmm18_7@uint64 zmm12_7 zmm18_7;
(* vpxord %zmm27,%zmm4,%zmm27                      #! PC = 0x55555558e950 *)
xor zmm27_0@uint64 zmm4_0 zmm27_0;
xor zmm27_1@uint64 zmm4_1 zmm27_1;
xor zmm27_2@uint64 zmm4_2 zmm27_2;
xor zmm27_3@uint64 zmm4_3 zmm27_3;
xor zmm27_4@uint64 zmm4_4 zmm27_4;
xor zmm27_5@uint64 zmm4_5 zmm27_5;
xor zmm27_6@uint64 zmm4_6 zmm27_6;
xor zmm27_7@uint64 zmm4_7 zmm27_7;
(* vpxord %zmm25,%zmm12,%zmm25                     #! PC = 0x55555558e956 *)
xor zmm25_0@uint64 zmm12_0 zmm25_0;
xor zmm25_1@uint64 zmm12_1 zmm25_1;
xor zmm25_2@uint64 zmm12_2 zmm25_2;
xor zmm25_3@uint64 zmm12_3 zmm25_3;
xor zmm25_4@uint64 zmm12_4 zmm25_4;
xor zmm25_5@uint64 zmm12_5 zmm25_5;
xor zmm25_6@uint64 zmm12_6 zmm25_6;
xor zmm25_7@uint64 zmm12_7 zmm25_7;
(* vpxord %zmm5,%zmm14,%zmm5                       #! PC = 0x55555558e95c *)
xor zmm5_0@uint64 zmm14_0 zmm5_0;
xor zmm5_1@uint64 zmm14_1 zmm5_1;
xor zmm5_2@uint64 zmm14_2 zmm5_2;
xor zmm5_3@uint64 zmm14_3 zmm5_3;
xor zmm5_4@uint64 zmm14_4 zmm5_4;
xor zmm5_5@uint64 zmm14_5 zmm5_5;
xor zmm5_6@uint64 zmm14_6 zmm5_6;
xor zmm5_7@uint64 zmm14_7 zmm5_7;
(* vpxord %zmm30,%zmm4,%zmm30                      #! PC = 0x55555558e962 *)
xor zmm30_0@uint64 zmm4_0 zmm30_0;
xor zmm30_1@uint64 zmm4_1 zmm30_1;
xor zmm30_2@uint64 zmm4_2 zmm30_2;
xor zmm30_3@uint64 zmm4_3 zmm30_3;
xor zmm30_4@uint64 zmm4_4 zmm30_4;
xor zmm30_5@uint64 zmm4_5 zmm30_5;
xor zmm30_6@uint64 zmm4_6 zmm30_6;
xor zmm30_7@uint64 zmm4_7 zmm30_7;
(* vpxord %zmm11,%zmm12,%zmm11                     #! PC = 0x55555558e968 *)
xor zmm11_0@uint64 zmm12_0 zmm11_0;
xor zmm11_1@uint64 zmm12_1 zmm11_1;
xor zmm11_2@uint64 zmm12_2 zmm11_2;
xor zmm11_3@uint64 zmm12_3 zmm11_3;
xor zmm11_4@uint64 zmm12_4 zmm11_4;
xor zmm11_5@uint64 zmm12_5 zmm11_5;
xor zmm11_6@uint64 zmm12_6 zmm11_6;
xor zmm11_7@uint64 zmm12_7 zmm11_7;
(* vpxord %zmm13,%zmm14,%zmm13                     #! PC = 0x55555558e96e *)
xor zmm13_0@uint64 zmm14_0 zmm13_0;
xor zmm13_1@uint64 zmm14_1 zmm13_1;
xor zmm13_2@uint64 zmm14_2 zmm13_2;
xor zmm13_3@uint64 zmm14_3 zmm13_3;
xor zmm13_4@uint64 zmm14_4 zmm13_4;
xor zmm13_5@uint64 zmm14_5 zmm13_5;
xor zmm13_6@uint64 zmm14_6 zmm13_6;
xor zmm13_7@uint64 zmm14_7 zmm13_7;
(* vpxord %zmm26,%zmm4,%zmm4                       #! PC = 0x55555558e974 *)
xor zmm4_0@uint64 zmm4_0 zmm26_0;
xor zmm4_1@uint64 zmm4_1 zmm26_1;
xor zmm4_2@uint64 zmm4_2 zmm26_2;
xor zmm4_3@uint64 zmm4_3 zmm26_3;
xor zmm4_4@uint64 zmm4_4 zmm26_4;
xor zmm4_5@uint64 zmm4_5 zmm26_5;
xor zmm4_6@uint64 zmm4_6 zmm26_6;
xor zmm4_7@uint64 zmm4_7 zmm26_7;
(* vpxord %zmm28,%zmm12,%zmm12                     #! PC = 0x55555558e97a *)
xor zmm12_0@uint64 zmm12_0 zmm28_0;
xor zmm12_1@uint64 zmm12_1 zmm28_1;
xor zmm12_2@uint64 zmm12_2 zmm28_2;
xor zmm12_3@uint64 zmm12_3 zmm28_3;
xor zmm12_4@uint64 zmm12_4 zmm28_4;
xor zmm12_5@uint64 zmm12_5 zmm28_5;
xor zmm12_6@uint64 zmm12_6 zmm28_6;
xor zmm12_7@uint64 zmm12_7 zmm28_7;
(* vpxord %zmm23,%zmm14,%zmm14                     #! PC = 0x55555558e980 *)
xor zmm14_0@uint64 zmm14_0 zmm23_0;
xor zmm14_1@uint64 zmm14_1 zmm23_1;
xor zmm14_2@uint64 zmm14_2 zmm23_2;
xor zmm14_3@uint64 zmm14_3 zmm23_3;
xor zmm14_4@uint64 zmm14_4 zmm23_4;
xor zmm14_5@uint64 zmm14_5 zmm23_5;
xor zmm14_6@uint64 zmm14_6 zmm23_6;
xor zmm14_7@uint64 zmm14_7 zmm23_7;
(* vprolq $0x1,%zmm25,%zmm25                       #! PC = 0x55555558e986 *)
rol zmm25_0 zmm25_0 0x1;
rol zmm25_1 zmm25_1 0x1;
rol zmm25_2 zmm25_2 0x1;
rol zmm25_3 zmm25_3 0x1;
rol zmm25_4 zmm25_4 0x1;
rol zmm25_5 zmm25_5 0x1;
rol zmm25_6 zmm25_6 0x1;
rol zmm25_7 zmm25_7 0x1;
(* vprolq $0x6,%zmm10,%zmm10                       #! PC = 0x55555558e98d *)
rol zmm10_0 zmm10_0 0x6;
rol zmm10_1 zmm10_1 0x6;
rol zmm10_2 zmm10_2 0x6;
rol zmm10_3 zmm10_3 0x6;
rol zmm10_4 zmm10_4 0x6;
rol zmm10_5 zmm10_5 0x6;
rol zmm10_6 zmm10_6 0x6;
rol zmm10_7 zmm10_7 0x6;
(* vprolq $0x3,%zmm15,%zmm15                       #! PC = 0x55555558e994 *)
rol zmm15_0 zmm15_0 0x3;
rol zmm15_1 zmm15_1 0x3;
rol zmm15_2 zmm15_2 0x3;
rol zmm15_3 zmm15_3 0x3;
rol zmm15_4 zmm15_4 0x3;
rol zmm15_5 zmm15_5 0x3;
rol zmm15_6 zmm15_6 0x3;
rol zmm15_7 zmm15_7 0x3;
(* vprorq $0x13,%zmm18,%zmm18                      #! PC = 0x55555558e99b *)
ror zmm18_0 zmm18_0 0x13;
ror zmm18_1 zmm18_1 0x13;
ror zmm18_2 zmm18_2 0x13;
ror zmm18_3 zmm18_3 0x13;
ror zmm18_4 zmm18_4 0x13;
ror zmm18_5 zmm18_5 0x13;
ror zmm18_6 zmm18_6 0x13;
ror zmm18_7 zmm18_7 0x13;
(* vprorq $0x3,%zmm19,%zmm19                       #! PC = 0x55555558e9a2 *)
ror zmm19_0 zmm19_0 0x3;
ror zmm19_1 zmm19_1 0x3;
ror zmm19_2 zmm19_2 0x3;
ror zmm19_3 zmm19_3 0x3;
ror zmm19_4 zmm19_4 0x3;
ror zmm19_5 zmm19_5 0x3;
ror zmm19_6 zmm19_6 0x3;
ror zmm19_7 zmm19_7 0x3;
(* vprorq $0x17,%zmm4,%zmm4                        #! PC = 0x55555558e9a9 *)
ror zmm4_0 zmm4_0 0x17;
ror zmm4_1 zmm4_1 0x17;
ror zmm4_2 zmm4_2 0x17;
ror zmm4_3 zmm4_3 0x17;
ror zmm4_4 zmm4_4 0x17;
ror zmm4_5 zmm4_5 0x17;
ror zmm4_6 zmm4_6 0x17;
ror zmm4_7 zmm4_7 0x17;
(* vprolq $0x2,%zmm12,%zmm12                       #! PC = 0x55555558e9b0 *)
rol zmm12_0 zmm12_0 0x2;
rol zmm12_1 zmm12_1 0x2;
rol zmm12_2 zmm12_2 0x2;
rol zmm12_3 zmm12_3 0x2;
rol zmm12_4 zmm12_4 0x2;
rol zmm12_5 zmm12_5 0x2;
rol zmm12_6 zmm12_6 0x2;
rol zmm12_7 zmm12_7 0x2;
(* vprorq $0x19,%zmm14,%zmm14                      #! PC = 0x55555558e9b7 *)
ror zmm14_0 zmm14_0 0x19;
ror zmm14_1 zmm14_1 0x19;
ror zmm14_2 zmm14_2 0x19;
ror zmm14_3 zmm14_3 0x19;
ror zmm14_4 zmm14_4 0x19;
ror zmm14_5 zmm14_5 0x19;
ror zmm14_6 zmm14_6 0x19;
ror zmm14_7 zmm14_7 0x19;
(* vprorq $0x1c,%zmm30,%zmm30                      #! PC = 0x55555558e9be *)
ror zmm30_0 zmm30_0 0x1c;
ror zmm30_1 zmm30_1 0x1c;
ror zmm30_2 zmm30_2 0x1c;
ror zmm30_3 zmm30_3 0x1c;
ror zmm30_4 zmm30_4 0x1c;
ror zmm30_5 zmm30_5 0x1c;
ror zmm30_6 zmm30_6 0x1c;
ror zmm30_7 zmm30_7 0x1c;
(* vprolq $0x1b,%zmm13,%zmm13                      #! PC = 0x55555558e9c5 *)
rol zmm13_0 zmm13_0 0x1b;
rol zmm13_1 zmm13_1 0x1b;
rol zmm13_2 zmm13_2 0x1b;
rol zmm13_3 zmm13_3 0x1b;
rol zmm13_4 zmm13_4 0x1b;
rol zmm13_5 zmm13_5 0x1b;
rol zmm13_6 zmm13_6 0x1b;
rol zmm13_7 zmm13_7 0x1b;
(* vprolq $0x12,%zmm27,%zmm27                      #! PC = 0x55555558e9cc *)
rol zmm27_0 zmm27_0 0x12;
rol zmm27_1 zmm27_1 0x12;
rol zmm27_2 zmm27_2 0x12;
rol zmm27_3 zmm27_3 0x12;
rol zmm27_4 zmm27_4 0x12;
rol zmm27_5 zmm27_5 0x12;
rol zmm27_6 zmm27_6 0x12;
rol zmm27_7 zmm27_7 0x12;
(* vprolq $0x19,%zmm1,%zmm1                        #! PC = 0x55555558e9d3 *)
rol zmm1_0 zmm1_0 0x19;
rol zmm1_1 zmm1_1 0x19;
rol zmm1_2 zmm1_2 0x19;
rol zmm1_3 zmm1_3 0x19;
rol zmm1_4 zmm1_4 0x19;
rol zmm1_5 zmm1_5 0x19;
rol zmm1_6 zmm1_6 0x19;
rol zmm1_7 zmm1_7 0x19;
(* vprolq $0x8,%zmm5,%zmm5                         #! PC = 0x55555558e9da *)
rol zmm5_0 zmm5_0 0x8;
rol zmm5_1 zmm5_1 0x8;
rol zmm5_2 zmm5_2 0x8;
rol zmm5_3 zmm5_3 0x8;
rol zmm5_4 zmm5_4 0x8;
rol zmm5_5 zmm5_5 0x8;
rol zmm5_6 zmm5_6 0x8;
rol zmm5_7 zmm5_7 0x8;
(* vprolq $0xa,%zmm11,%zmm11                       #! PC = 0x55555558e9e1 *)
rol zmm11_0 zmm11_0 0xa;
rol zmm11_1 zmm11_1 0xa;
rol zmm11_2 zmm11_2 0xa;
rol zmm11_3 zmm11_3 0xa;
rol zmm11_4 zmm11_4 0xa;
rol zmm11_5 zmm11_5 0xa;
rol zmm11_6 zmm11_6 0xa;
rol zmm11_7 zmm11_7 0xa;
(* vprolq $0xf,%zmm6,%zmm6                         #! PC = 0x55555558e9e8 *)
rol zmm6_0 zmm6_0 0xf;
rol zmm6_1 zmm6_1 0xf;
rol zmm6_2 zmm6_2 0xf;
rol zmm6_3 zmm6_3 0xf;
rol zmm6_4 zmm6_4 0xf;
rol zmm6_5 zmm6_5 0xf;
rol zmm6_6 zmm6_6 0xf;
rol zmm6_7 zmm6_7 0xf;
(* vprorq $0x8,%zmm0,%zmm0                         #! PC = 0x55555558e9ef *)
ror zmm0_0 zmm0_0 0x8;
ror zmm0_1 zmm0_1 0x8;
ror zmm0_2 zmm0_2 0x8;
ror zmm0_3 zmm0_3 0x8;
ror zmm0_4 zmm0_4 0x8;
ror zmm0_5 zmm0_5 0x8;
ror zmm0_6 zmm0_6 0x8;
ror zmm0_7 zmm0_7 0x8;
(* vmovdqa64 %zmm24,%zmm29                         #! PC = 0x55555558e9f6 *)
mov zmm29_0 zmm24_0;
mov zmm29_1 zmm24_1;
mov zmm29_2 zmm24_2;
mov zmm29_3 zmm24_3;
mov zmm29_4 zmm24_4;
mov zmm29_5 zmm24_5;
mov zmm29_6 zmm24_6;
mov zmm29_7 zmm24_7;
(* vmovdqa64 %zmm31,%zmm22                         #! PC = 0x55555558e9fc *)
mov zmm22_0 zmm31_0;
mov zmm22_1 zmm31_1;
mov zmm22_2 zmm31_2;
mov zmm22_3 zmm31_3;
mov zmm22_4 zmm31_4;
mov zmm22_5 zmm31_5;
mov zmm22_6 zmm31_6;
mov zmm22_7 zmm31_7;
(* vpternlogq $0xd2,%zmm2,%zmm31,%zmm29            #! PC = 0x55555558ea02 *)
mov table 0xd2@uint8;
inline vpternlogq64 (zmm29_0, zmm31_0, zmm2_0, table);
inline vpternlogq64 (zmm29_1, zmm31_1, zmm2_1, table);
inline vpternlogq64 (zmm29_2, zmm31_2, zmm2_2, table);
inline vpternlogq64 (zmm29_3, zmm31_3, zmm2_3, table);
inline vpternlogq64 (zmm29_4, zmm31_4, zmm2_4, table);
inline vpternlogq64 (zmm29_5, zmm31_5, zmm2_5, table);
inline vpternlogq64 (zmm29_6, zmm31_6, zmm2_6, table);
inline vpternlogq64 (zmm29_7, zmm31_7, zmm2_7, table);
(* vpternlogq $0xd2,%zmm7,%zmm2,%zmm22             #! PC = 0x55555558ea09 *)
mov table 0xd2@uint8;
inline vpternlogq64 (zmm22_0, zmm2_0, zmm7_0, table);
inline vpternlogq64 (zmm22_1, zmm2_1, zmm7_1, table);
inline vpternlogq64 (zmm22_2, zmm2_2, zmm7_2, table);
inline vpternlogq64 (zmm22_3, zmm2_3, zmm7_3, table);
inline vpternlogq64 (zmm22_4, zmm2_4, zmm7_4, table);
inline vpternlogq64 (zmm22_5, zmm2_5, zmm7_5, table);
inline vpternlogq64 (zmm22_6, zmm2_6, zmm7_6, table);
inline vpternlogq64 (zmm22_7, zmm2_7, zmm7_7, table);
(* vpternlogq $0xd2,%zmm8,%zmm7,%zmm2              #! PC = 0x55555558ea10 *)
mov table 0xd2@uint8;
inline vpternlogq64 (zmm2_0, zmm7_0, zmm8_0, table);
inline vpternlogq64 (zmm2_1, zmm7_1, zmm8_1, table);
inline vpternlogq64 (zmm2_2, zmm7_2, zmm8_2, table);
inline vpternlogq64 (zmm2_3, zmm7_3, zmm8_3, table);
inline vpternlogq64 (zmm2_4, zmm7_4, zmm8_4, table);
inline vpternlogq64 (zmm2_5, zmm7_5, zmm8_5, table);
inline vpternlogq64 (zmm2_6, zmm7_6, zmm8_6, table);
inline vpternlogq64 (zmm2_7, zmm7_7, zmm8_7, table);
(* vpternlogq $0xd2,%zmm24,%zmm8,%zmm7             #! PC = 0x55555558ea17 *)
mov table 0xd2@uint8;
inline vpternlogq64 (zmm7_0, zmm8_0, zmm24_0, table);
inline vpternlogq64 (zmm7_1, zmm8_1, zmm24_1, table);
inline vpternlogq64 (zmm7_2, zmm8_2, zmm24_2, table);
inline vpternlogq64 (zmm7_3, zmm8_3, zmm24_3, table);
inline vpternlogq64 (zmm7_4, zmm8_4, zmm24_4, table);
inline vpternlogq64 (zmm7_5, zmm8_5, zmm24_5, table);
inline vpternlogq64 (zmm7_6, zmm8_6, zmm24_6, table);
inline vpternlogq64 (zmm7_7, zmm8_7, zmm24_7, table);
(* vpternlogq $0xd2,%zmm31,%zmm24,%zmm8            #! PC = 0x55555558ea1e *)
mov table 0xd2@uint8;
inline vpternlogq64 (zmm8_0, zmm24_0, zmm31_0, table);
inline vpternlogq64 (zmm8_1, zmm24_1, zmm31_1, table);
inline vpternlogq64 (zmm8_2, zmm24_2, zmm31_2, table);
inline vpternlogq64 (zmm8_3, zmm24_3, zmm31_3, table);
inline vpternlogq64 (zmm8_4, zmm24_4, zmm31_4, table);
inline vpternlogq64 (zmm8_5, zmm24_5, zmm31_5, table);
inline vpternlogq64 (zmm8_6, zmm24_6, zmm31_6, table);
inline vpternlogq64 (zmm8_7, zmm24_7, zmm31_7, table);
(* vpbroadcastq %rbx,%zmm24                        #! PC = 0x55555558ea25 *)
mov zmm24_0 rbx;
mov zmm24_1 rbx;
mov zmm24_2 rbx;
mov zmm24_3 rbx;
mov zmm24_4 rbx;
mov zmm24_5 rbx;
mov zmm24_6 rbx;
mov zmm24_7 rbx;
(* vpxord %zmm29,%zmm24,%zmm24                     #! PC = 0x55555558ea2b *)
xor zmm24_0@uint64 zmm24_0 zmm29_0;
xor zmm24_1@uint64 zmm24_1 zmm29_1;
xor zmm24_2@uint64 zmm24_2 zmm29_2;
xor zmm24_3@uint64 zmm24_3 zmm29_3;
xor zmm24_4@uint64 zmm24_4 zmm29_4;
xor zmm24_5@uint64 zmm24_5 zmm29_5;
xor zmm24_6@uint64 zmm24_6 zmm29_6;
xor zmm24_7@uint64 zmm24_7 zmm29_7;
(* vmovdqa64 %zmm17,%zmm31                         #! PC = 0x55555558ea31 *)
mov zmm31_0 zmm17_0;
mov zmm31_1 zmm17_1;
mov zmm31_2 zmm17_2;
mov zmm31_3 zmm17_3;
mov zmm31_4 zmm17_4;
mov zmm31_5 zmm17_5;
mov zmm31_6 zmm17_6;
mov zmm31_7 zmm17_7;
(* vmovdqa64 %zmm9,%zmm29                          #! PC = 0x55555558ea37 *)
mov zmm29_0 zmm9_0;
mov zmm29_1 zmm9_1;
mov zmm29_2 zmm9_2;
mov zmm29_3 zmm9_3;
mov zmm29_4 zmm9_4;
mov zmm29_5 zmm9_5;
mov zmm29_6 zmm9_6;
mov zmm29_7 zmm9_7;
(* vmovdqa64 %zmm20,%zmm23                         #! PC = 0x55555558ea3d *)
mov zmm23_0 zmm20_0;
mov zmm23_1 zmm20_1;
mov zmm23_2 zmm20_2;
mov zmm23_3 zmm20_3;
mov zmm23_4 zmm20_4;
mov zmm23_5 zmm20_5;
mov zmm23_6 zmm20_6;
mov zmm23_7 zmm20_7;
(* vmovdqa64 %zmm21,%zmm28                         #! PC = 0x55555558ea43 *)
mov zmm28_0 zmm21_0;
mov zmm28_1 zmm21_1;
mov zmm28_2 zmm21_2;
mov zmm28_3 zmm21_3;
mov zmm28_4 zmm21_4;
mov zmm28_5 zmm21_5;
mov zmm28_6 zmm21_6;
mov zmm28_7 zmm21_7;
(* vpternlogq $0xd2,%zmm4,%zmm14,%zmm28            #! PC = 0x55555558ea49 *)
mov table 0xd2@uint8;
inline vpternlogq64 (zmm28_0, zmm14_0, zmm4_0, table);
inline vpternlogq64 (zmm28_1, zmm14_1, zmm4_1, table);
inline vpternlogq64 (zmm28_2, zmm14_2, zmm4_2, table);
inline vpternlogq64 (zmm28_3, zmm14_3, zmm4_3, table);
inline vpternlogq64 (zmm28_4, zmm14_4, zmm4_4, table);
inline vpternlogq64 (zmm28_5, zmm14_5, zmm4_5, table);
inline vpternlogq64 (zmm28_6, zmm14_6, zmm4_6, table);
inline vpternlogq64 (zmm28_7, zmm14_7, zmm4_7, table);
(* vpternlogq $0xd2,%zmm15,%zmm17,%zmm29           #! PC = 0x55555558ea50 *)
mov table 0xd2@uint8;
inline vpternlogq64 (zmm29_0, zmm17_0, zmm15_0, table);
inline vpternlogq64 (zmm29_1, zmm17_1, zmm15_1, table);
inline vpternlogq64 (zmm29_2, zmm17_2, zmm15_2, table);
inline vpternlogq64 (zmm29_3, zmm17_3, zmm15_3, table);
inline vpternlogq64 (zmm29_4, zmm17_4, zmm15_4, table);
inline vpternlogq64 (zmm29_5, zmm17_5, zmm15_5, table);
inline vpternlogq64 (zmm29_6, zmm17_6, zmm15_6, table);
inline vpternlogq64 (zmm29_7, zmm17_7, zmm15_7, table);
(* vpternlogq $0xd2,%zmm18,%zmm15,%zmm31           #! PC = 0x55555558ea57 *)
mov table 0xd2@uint8;
inline vpternlogq64 (zmm31_0, zmm15_0, zmm18_0, table);
inline vpternlogq64 (zmm31_1, zmm15_1, zmm18_1, table);
inline vpternlogq64 (zmm31_2, zmm15_2, zmm18_2, table);
inline vpternlogq64 (zmm31_3, zmm15_3, zmm18_3, table);
inline vpternlogq64 (zmm31_4, zmm15_4, zmm18_4, table);
inline vpternlogq64 (zmm31_5, zmm15_5, zmm18_5, table);
inline vpternlogq64 (zmm31_6, zmm15_6, zmm18_6, table);
inline vpternlogq64 (zmm31_7, zmm15_7, zmm18_7, table);
(* vpternlogq $0xd2,%zmm14,%zmm21,%zmm23           #! PC = 0x55555558ea5e *)
mov table 0xd2@uint8;
inline vpternlogq64 (zmm23_0, zmm21_0, zmm14_0, table);
inline vpternlogq64 (zmm23_1, zmm21_1, zmm14_1, table);
inline vpternlogq64 (zmm23_2, zmm21_2, zmm14_2, table);
inline vpternlogq64 (zmm23_3, zmm21_3, zmm14_3, table);
inline vpternlogq64 (zmm23_4, zmm21_4, zmm14_4, table);
inline vpternlogq64 (zmm23_5, zmm21_5, zmm14_5, table);
inline vpternlogq64 (zmm23_6, zmm21_6, zmm14_6, table);
inline vpternlogq64 (zmm23_7, zmm21_7, zmm14_7, table);
(* vpternlogq $0xd2,%zmm19,%zmm18,%zmm15           #! PC = 0x55555558ea65 *)
mov table 0xd2@uint8;
inline vpternlogq64 (zmm15_0, zmm18_0, zmm19_0, table);
inline vpternlogq64 (zmm15_1, zmm18_1, zmm19_1, table);
inline vpternlogq64 (zmm15_2, zmm18_2, zmm19_2, table);
inline vpternlogq64 (zmm15_3, zmm18_3, zmm19_3, table);
inline vpternlogq64 (zmm15_4, zmm18_4, zmm19_4, table);
inline vpternlogq64 (zmm15_5, zmm18_5, zmm19_5, table);
inline vpternlogq64 (zmm15_6, zmm18_6, zmm19_6, table);
inline vpternlogq64 (zmm15_7, zmm18_7, zmm19_7, table);
(* vpternlogq $0xd2,%zmm12,%zmm4,%zmm14            #! PC = 0x55555558ea6c *)
mov table 0xd2@uint8;
inline vpternlogq64 (zmm14_0, zmm4_0, zmm12_0, table);
inline vpternlogq64 (zmm14_1, zmm4_1, zmm12_1, table);
inline vpternlogq64 (zmm14_2, zmm4_2, zmm12_2, table);
inline vpternlogq64 (zmm14_3, zmm4_3, zmm12_3, table);
inline vpternlogq64 (zmm14_4, zmm4_4, zmm12_4, table);
inline vpternlogq64 (zmm14_5, zmm4_5, zmm12_5, table);
inline vpternlogq64 (zmm14_6, zmm4_6, zmm12_6, table);
inline vpternlogq64 (zmm14_7, zmm4_7, zmm12_7, table);
(* vpternlogq $0xd2,%zmm9,%zmm19,%zmm18            #! PC = 0x55555558ea73 *)
mov table 0xd2@uint8;
inline vpternlogq64 (zmm18_0, zmm19_0, zmm9_0, table);
inline vpternlogq64 (zmm18_1, zmm19_1, zmm9_1, table);
inline vpternlogq64 (zmm18_2, zmm19_2, zmm9_2, table);
inline vpternlogq64 (zmm18_3, zmm19_3, zmm9_3, table);
inline vpternlogq64 (zmm18_4, zmm19_4, zmm9_4, table);
inline vpternlogq64 (zmm18_5, zmm19_5, zmm9_5, table);
inline vpternlogq64 (zmm18_6, zmm19_6, zmm9_6, table);
inline vpternlogq64 (zmm18_7, zmm19_7, zmm9_7, table);
(* vpternlogq $0xd2,%zmm17,%zmm9,%zmm19            #! PC = 0x55555558ea7a *)
mov table 0xd2@uint8;
inline vpternlogq64 (zmm19_0, zmm9_0, zmm17_0, table);
inline vpternlogq64 (zmm19_1, zmm9_1, zmm17_1, table);
inline vpternlogq64 (zmm19_2, zmm9_2, zmm17_2, table);
inline vpternlogq64 (zmm19_3, zmm9_3, zmm17_3, table);
inline vpternlogq64 (zmm19_4, zmm9_4, zmm17_4, table);
inline vpternlogq64 (zmm19_5, zmm9_5, zmm17_5, table);
inline vpternlogq64 (zmm19_6, zmm9_6, zmm17_6, table);
inline vpternlogq64 (zmm19_7, zmm9_7, zmm17_7, table);
(* vmovdqa64 %zmm25,%zmm17                         #! PC = 0x55555558ea81 *)
mov zmm17_0 zmm25_0;
mov zmm17_1 zmm25_1;
mov zmm17_2 zmm25_2;
mov zmm17_3 zmm25_3;
mov zmm17_4 zmm25_4;
mov zmm17_5 zmm25_5;
mov zmm17_6 zmm25_6;
mov zmm17_7 zmm25_7;
(* vmovdqa64 %zmm10,%zmm9                          #! PC = 0x55555558ea87 *)
mov zmm9_0 zmm10_0;
mov zmm9_1 zmm10_1;
mov zmm9_2 zmm10_2;
mov zmm9_3 zmm10_3;
mov zmm9_4 zmm10_4;
mov zmm9_5 zmm10_5;
mov zmm9_6 zmm10_6;
mov zmm9_7 zmm10_7;
(* vpternlogq $0xd2,%zmm1,%zmm10,%zmm17            #! PC = 0x55555558ea8d *)
mov table 0xd2@uint8;
inline vpternlogq64 (zmm17_0, zmm10_0, zmm1_0, table);
inline vpternlogq64 (zmm17_1, zmm10_1, zmm1_1, table);
inline vpternlogq64 (zmm17_2, zmm10_2, zmm1_2, table);
inline vpternlogq64 (zmm17_3, zmm10_3, zmm1_3, table);
inline vpternlogq64 (zmm17_4, zmm10_4, zmm1_4, table);
inline vpternlogq64 (zmm17_5, zmm10_5, zmm1_5, table);
inline vpternlogq64 (zmm17_6, zmm10_6, zmm1_6, table);
inline vpternlogq64 (zmm17_7, zmm10_7, zmm1_7, table);
(* vpternlogq $0xd2,%zmm5,%zmm1,%zmm9              #! PC = 0x55555558ea94 *)
mov table 0xd2@uint8;
inline vpternlogq64 (zmm9_0, zmm1_0, zmm5_0, table);
inline vpternlogq64 (zmm9_1, zmm1_1, zmm5_1, table);
inline vpternlogq64 (zmm9_2, zmm1_2, zmm5_2, table);
inline vpternlogq64 (zmm9_3, zmm1_3, zmm5_3, table);
inline vpternlogq64 (zmm9_4, zmm1_4, zmm5_4, table);
inline vpternlogq64 (zmm9_5, zmm1_5, zmm5_5, table);
inline vpternlogq64 (zmm9_6, zmm1_6, zmm5_6, table);
inline vpternlogq64 (zmm9_7, zmm1_7, zmm5_7, table);
(* vpternlogq $0xd2,%zmm20,%zmm12,%zmm4            #! PC = 0x55555558ea9b *)
mov table 0xd2@uint8;
inline vpternlogq64 (zmm4_0, zmm12_0, zmm20_0, table);
inline vpternlogq64 (zmm4_1, zmm12_1, zmm20_1, table);
inline vpternlogq64 (zmm4_2, zmm12_2, zmm20_2, table);
inline vpternlogq64 (zmm4_3, zmm12_3, zmm20_3, table);
inline vpternlogq64 (zmm4_4, zmm12_4, zmm20_4, table);
inline vpternlogq64 (zmm4_5, zmm12_5, zmm20_5, table);
inline vpternlogq64 (zmm4_6, zmm12_6, zmm20_6, table);
inline vpternlogq64 (zmm4_7, zmm12_7, zmm20_7, table);
(* vpternlogq $0xd2,%zmm27,%zmm5,%zmm1             #! PC = 0x55555558eaa2 *)
mov table 0xd2@uint8;
inline vpternlogq64 (zmm1_0, zmm5_0, zmm27_0, table);
inline vpternlogq64 (zmm1_1, zmm5_1, zmm27_1, table);
inline vpternlogq64 (zmm1_2, zmm5_2, zmm27_2, table);
inline vpternlogq64 (zmm1_3, zmm5_3, zmm27_3, table);
inline vpternlogq64 (zmm1_4, zmm5_4, zmm27_4, table);
inline vpternlogq64 (zmm1_5, zmm5_5, zmm27_5, table);
inline vpternlogq64 (zmm1_6, zmm5_6, zmm27_6, table);
inline vpternlogq64 (zmm1_7, zmm5_7, zmm27_7, table);
(* vpternlogq $0xd2,%zmm21,%zmm20,%zmm12           #! PC = 0x55555558eaa9 *)
mov table 0xd2@uint8;
inline vpternlogq64 (zmm12_0, zmm20_0, zmm21_0, table);
inline vpternlogq64 (zmm12_1, zmm20_1, zmm21_1, table);
inline vpternlogq64 (zmm12_2, zmm20_2, zmm21_2, table);
inline vpternlogq64 (zmm12_3, zmm20_3, zmm21_3, table);
inline vpternlogq64 (zmm12_4, zmm20_4, zmm21_4, table);
inline vpternlogq64 (zmm12_5, zmm20_5, zmm21_5, table);
inline vpternlogq64 (zmm12_6, zmm20_6, zmm21_6, table);
inline vpternlogq64 (zmm12_7, zmm20_7, zmm21_7, table);
(* vpternlogq $0xd2,%zmm25,%zmm27,%zmm5            #! PC = 0x55555558eab0 *)
mov table 0xd2@uint8;
inline vpternlogq64 (zmm5_0, zmm27_0, zmm25_0, table);
inline vpternlogq64 (zmm5_1, zmm27_1, zmm25_1, table);
inline vpternlogq64 (zmm5_2, zmm27_2, zmm25_2, table);
inline vpternlogq64 (zmm5_3, zmm27_3, zmm25_3, table);
inline vpternlogq64 (zmm5_4, zmm27_4, zmm25_4, table);
inline vpternlogq64 (zmm5_5, zmm27_5, zmm25_5, table);
inline vpternlogq64 (zmm5_6, zmm27_6, zmm25_6, table);
inline vpternlogq64 (zmm5_7, zmm27_7, zmm25_7, table);
(* vmovdqa64 %zmm14,%zmm21                         #! PC = 0x55555558eab7 *)
mov zmm21_0 zmm14_0;
mov zmm21_1 zmm14_1;
mov zmm21_2 zmm14_2;
mov zmm21_3 zmm14_3;
mov zmm21_4 zmm14_4;
mov zmm21_5 zmm14_5;
mov zmm21_6 zmm14_6;
mov zmm21_7 zmm14_7;
(* vpternlogq $0xd2,%zmm10,%zmm25,%zmm27           #! PC = 0x55555558eabd *)
mov table 0xd2@uint8;
inline vpternlogq64 (zmm27_0, zmm25_0, zmm10_0, table);
inline vpternlogq64 (zmm27_1, zmm25_1, zmm10_1, table);
inline vpternlogq64 (zmm27_2, zmm25_2, zmm10_2, table);
inline vpternlogq64 (zmm27_3, zmm25_3, zmm10_3, table);
inline vpternlogq64 (zmm27_4, zmm25_4, zmm10_4, table);
inline vpternlogq64 (zmm27_5, zmm25_5, zmm10_5, table);
inline vpternlogq64 (zmm27_6, zmm25_6, zmm10_6, table);
inline vpternlogq64 (zmm27_7, zmm25_7, zmm10_7, table);
(* vmovdqa64 %zmm13,%zmm25                         #! PC = 0x55555558eac4 *)
mov zmm25_0 zmm13_0;
mov zmm25_1 zmm13_1;
mov zmm25_2 zmm13_2;
mov zmm25_3 zmm13_3;
mov zmm25_4 zmm13_4;
mov zmm25_5 zmm13_5;
mov zmm25_6 zmm13_6;
mov zmm25_7 zmm13_7;
(* vmovdqa64 %zmm30,%zmm10                         #! PC = 0x55555558eaca *)
mov zmm10_0 zmm30_0;
mov zmm10_1 zmm30_1;
mov zmm10_2 zmm30_2;
mov zmm10_3 zmm30_3;
mov zmm10_4 zmm30_4;
mov zmm10_5 zmm30_5;
mov zmm10_6 zmm30_6;
mov zmm10_7 zmm30_7;
(* vpternlogq $0xd2,%zmm11,%zmm30,%zmm25           #! PC = 0x55555558ead0 *)
mov table 0xd2@uint8;
inline vpternlogq64 (zmm25_0, zmm30_0, zmm11_0, table);
inline vpternlogq64 (zmm25_1, zmm30_1, zmm11_1, table);
inline vpternlogq64 (zmm25_2, zmm30_2, zmm11_2, table);
inline vpternlogq64 (zmm25_3, zmm30_3, zmm11_3, table);
inline vpternlogq64 (zmm25_4, zmm30_4, zmm11_4, table);
inline vpternlogq64 (zmm25_5, zmm30_5, zmm11_5, table);
inline vpternlogq64 (zmm25_6, zmm30_6, zmm11_6, table);
inline vpternlogq64 (zmm25_7, zmm30_7, zmm11_7, table);
(* vpternlogq $0xd2,%zmm6,%zmm11,%zmm10            #! PC = 0x55555558ead7 *)
mov table 0xd2@uint8;
inline vpternlogq64 (zmm10_0, zmm11_0, zmm6_0, table);
inline vpternlogq64 (zmm10_1, zmm11_1, zmm6_1, table);
inline vpternlogq64 (zmm10_2, zmm11_2, zmm6_2, table);
inline vpternlogq64 (zmm10_3, zmm11_3, zmm6_3, table);
inline vpternlogq64 (zmm10_4, zmm11_4, zmm6_4, table);
inline vpternlogq64 (zmm10_5, zmm11_5, zmm6_5, table);
inline vpternlogq64 (zmm10_6, zmm11_6, zmm6_6, table);
inline vpternlogq64 (zmm10_7, zmm11_7, zmm6_7, table);
(* vpternlogq $0x96,%zmm2,%zmm1,%zmm21             #! PC = 0x55555558eade *)
mov table 0x96@uint8;
inline vpternlogq64 (zmm21_0, zmm1_0, zmm2_0, table);
inline vpternlogq64 (zmm21_1, zmm1_1, zmm2_1, table);
inline vpternlogq64 (zmm21_2, zmm1_2, zmm2_2, table);
inline vpternlogq64 (zmm21_3, zmm1_3, zmm2_3, table);
inline vpternlogq64 (zmm21_4, zmm1_4, zmm2_4, table);
inline vpternlogq64 (zmm21_5, zmm1_5, zmm2_5, table);
inline vpternlogq64 (zmm21_6, zmm1_6, zmm2_6, table);
inline vpternlogq64 (zmm21_7, zmm1_7, zmm2_7, table);
(* vpternlogq $0xd2,%zmm0,%zmm6,%zmm11             #! PC = 0x55555558eae5 *)
mov table 0xd2@uint8;
inline vpternlogq64 (zmm11_0, zmm6_0, zmm0_0, table);
inline vpternlogq64 (zmm11_1, zmm6_1, zmm0_1, table);
inline vpternlogq64 (zmm11_2, zmm6_2, zmm0_2, table);
inline vpternlogq64 (zmm11_3, zmm6_3, zmm0_3, table);
inline vpternlogq64 (zmm11_4, zmm6_4, zmm0_4, table);
inline vpternlogq64 (zmm11_5, zmm6_5, zmm0_5, table);
inline vpternlogq64 (zmm11_6, zmm6_6, zmm0_6, table);
inline vpternlogq64 (zmm11_7, zmm6_7, zmm0_7, table);
(* vpternlogq $0x96,%zmm15,%zmm11,%zmm21           #! PC = 0x55555558eaec *)
mov table 0x96@uint8;
inline vpternlogq64 (zmm21_0, zmm11_0, zmm15_0, table);
inline vpternlogq64 (zmm21_1, zmm11_1, zmm15_1, table);
inline vpternlogq64 (zmm21_2, zmm11_2, zmm15_2, table);
inline vpternlogq64 (zmm21_3, zmm11_3, zmm15_3, table);
inline vpternlogq64 (zmm21_4, zmm11_4, zmm15_4, table);
inline vpternlogq64 (zmm21_5, zmm11_5, zmm15_5, table);
inline vpternlogq64 (zmm21_6, zmm11_6, zmm15_6, table);
inline vpternlogq64 (zmm21_7, zmm11_7, zmm15_7, table);
(* vpternlogq $0xd2,%zmm13,%zmm0,%zmm6             #! PC = 0x55555558eaf3 *)
mov table 0xd2@uint8;
inline vpternlogq64 (zmm6_0, zmm0_0, zmm13_0, table);
inline vpternlogq64 (zmm6_1, zmm0_1, zmm13_1, table);
inline vpternlogq64 (zmm6_2, zmm0_2, zmm13_2, table);
inline vpternlogq64 (zmm6_3, zmm0_3, zmm13_3, table);
inline vpternlogq64 (zmm6_4, zmm0_4, zmm13_4, table);
inline vpternlogq64 (zmm6_5, zmm0_5, zmm13_5, table);
inline vpternlogq64 (zmm6_6, zmm0_6, zmm13_6, table);
inline vpternlogq64 (zmm6_7, zmm0_7, zmm13_7, table);
(* vpternlogq $0xd2,%zmm30,%zmm13,%zmm0            #! PC = 0x55555558eafa *)
mov table 0xd2@uint8;
inline vpternlogq64 (zmm0_0, zmm13_0, zmm30_0, table);
inline vpternlogq64 (zmm0_1, zmm13_1, zmm30_1, table);
inline vpternlogq64 (zmm0_2, zmm13_2, zmm30_2, table);
inline vpternlogq64 (zmm0_3, zmm13_3, zmm30_3, table);
inline vpternlogq64 (zmm0_4, zmm13_4, zmm30_4, table);
inline vpternlogq64 (zmm0_5, zmm13_5, zmm30_5, table);
inline vpternlogq64 (zmm0_6, zmm13_6, zmm30_6, table);
inline vpternlogq64 (zmm0_7, zmm13_7, zmm30_7, table);
(* vprolq $0x1,%zmm21,%zmm13                       #! PC = 0x55555558eb01 *)
rol zmm13_0 zmm21_0 0x1;
rol zmm13_1 zmm21_1 0x1;
rol zmm13_2 zmm21_2 0x1;
rol zmm13_3 zmm21_3 0x1;
rol zmm13_4 zmm21_4 0x1;
rol zmm13_5 zmm21_5 0x1;
rol zmm13_6 zmm21_6 0x1;
rol zmm13_7 zmm21_7 0x1;
(* vmovdqa64 %zmm18,%zmm26                         #! PC = 0x55555558eb08 *)
mov zmm26_0 zmm18_0;
mov zmm26_1 zmm18_1;
mov zmm26_2 zmm18_2;
mov zmm26_3 zmm18_3;
mov zmm26_4 zmm18_4;
mov zmm26_5 zmm18_5;
mov zmm26_6 zmm18_6;
mov zmm26_7 zmm18_7;
(* vpternlogq $0x96,%zmm5,%zmm4,%zmm26             #! PC = 0x55555558eb0e *)
mov table 0x96@uint8;
inline vpternlogq64 (zmm26_0, zmm4_0, zmm5_0, table);
inline vpternlogq64 (zmm26_1, zmm4_1, zmm5_1, table);
inline vpternlogq64 (zmm26_2, zmm4_2, zmm5_2, table);
inline vpternlogq64 (zmm26_3, zmm4_3, zmm5_3, table);
inline vpternlogq64 (zmm26_4, zmm4_4, zmm5_4, table);
inline vpternlogq64 (zmm26_5, zmm4_5, zmm5_5, table);
inline vpternlogq64 (zmm26_6, zmm4_6, zmm5_6, table);
inline vpternlogq64 (zmm26_7, zmm4_7, zmm5_7, table);
(* vpternlogq $0x96,%zmm6,%zmm7,%zmm26             #! PC = 0x55555558eb15 *)
mov table 0x96@uint8;
inline vpternlogq64 (zmm26_0, zmm7_0, zmm6_0, table);
inline vpternlogq64 (zmm26_1, zmm7_1, zmm6_1, table);
inline vpternlogq64 (zmm26_2, zmm7_2, zmm6_2, table);
inline vpternlogq64 (zmm26_3, zmm7_3, zmm6_3, table);
inline vpternlogq64 (zmm26_4, zmm7_4, zmm6_4, table);
inline vpternlogq64 (zmm26_5, zmm7_5, zmm6_5, table);
inline vpternlogq64 (zmm26_6, zmm7_6, zmm6_6, table);
inline vpternlogq64 (zmm26_7, zmm7_7, zmm6_7, table);
(* vmovdqa64 %zmm0,%zmm3                           #! PC = 0x55555558eb1c *)
mov zmm3_0 zmm0_0;
mov zmm3_1 zmm0_1;
mov zmm3_2 zmm0_2;
mov zmm3_3 zmm0_3;
mov zmm3_4 zmm0_4;
mov zmm3_5 zmm0_5;
mov zmm3_6 zmm0_6;
mov zmm3_7 zmm0_7;
(* vpternlogq $0x96,%zmm12,%zmm19,%zmm3            #! PC = 0x55555558eb22 *)
mov table 0x96@uint8;
inline vpternlogq64 (zmm3_0, zmm19_0, zmm12_0, table);
inline vpternlogq64 (zmm3_1, zmm19_1, zmm12_1, table);
inline vpternlogq64 (zmm3_2, zmm19_2, zmm12_2, table);
inline vpternlogq64 (zmm3_3, zmm19_3, zmm12_3, table);
inline vpternlogq64 (zmm3_4, zmm19_4, zmm12_4, table);
inline vpternlogq64 (zmm3_5, zmm19_5, zmm12_5, table);
inline vpternlogq64 (zmm3_6, zmm19_6, zmm12_6, table);
inline vpternlogq64 (zmm3_7, zmm19_7, zmm12_7, table);
(* vmovdqa64 %zmm13,0x148(%rsp)                    #! EA = L0x7fffffffd600; PC = 0x55555558eb29 *)
mov L0x7fffffffd600 zmm13_0;
mov L0x7fffffffd608 zmm13_1;
mov L0x7fffffffd610 zmm13_2;
mov L0x7fffffffd618 zmm13_3;
mov L0x7fffffffd620 zmm13_4;
mov L0x7fffffffd628 zmm13_5;
mov L0x7fffffffd630 zmm13_6;
mov L0x7fffffffd638 zmm13_7;
(* vprolq $0x1,%zmm26,%zmm13                       #! PC = 0x55555558eb34 *)
rol zmm13_0 zmm26_0 0x1;
rol zmm13_1 zmm26_1 0x1;
rol zmm13_2 zmm26_2 0x1;
rol zmm13_3 zmm26_3 0x1;
rol zmm13_4 zmm26_4 0x1;
rol zmm13_5 zmm26_5 0x1;
rol zmm13_6 zmm26_6 0x1;
rol zmm13_7 zmm26_7 0x1;
(* vpternlogq $0x96,%zmm8,%zmm27,%zmm3             #! PC = 0x55555558eb3b *)
mov table 0x96@uint8;
inline vpternlogq64 (zmm3_0, zmm27_0, zmm8_0, table);
inline vpternlogq64 (zmm3_1, zmm27_1, zmm8_1, table);
inline vpternlogq64 (zmm3_2, zmm27_2, zmm8_2, table);
inline vpternlogq64 (zmm3_3, zmm27_3, zmm8_3, table);
inline vpternlogq64 (zmm3_4, zmm27_4, zmm8_4, table);
inline vpternlogq64 (zmm3_5, zmm27_5, zmm8_5, table);
inline vpternlogq64 (zmm3_6, zmm27_6, zmm8_6, table);
inline vpternlogq64 (zmm3_7, zmm27_7, zmm8_7, table);
(* vmovdqa64 %zmm24,%zmm16                         #! PC = 0x55555558eb42 *)
mov zmm16_0 zmm24_0;
mov zmm16_1 zmm24_1;
mov zmm16_2 zmm24_2;
mov zmm16_3 zmm24_3;
mov zmm16_4 zmm24_4;
mov zmm16_5 zmm24_5;
mov zmm16_6 zmm24_6;
mov zmm16_7 zmm24_7;
(* vpternlogq $0x96,%zmm29,%zmm25,%zmm16           #! PC = 0x55555558eb48 *)
mov table 0x96@uint8;
inline vpternlogq64 (zmm16_0, zmm25_0, zmm29_0, table);
inline vpternlogq64 (zmm16_1, zmm25_1, zmm29_1, table);
inline vpternlogq64 (zmm16_2, zmm25_2, zmm29_2, table);
inline vpternlogq64 (zmm16_3, zmm25_3, zmm29_3, table);
inline vpternlogq64 (zmm16_4, zmm25_4, zmm29_4, table);
inline vpternlogq64 (zmm16_5, zmm25_5, zmm29_5, table);
inline vpternlogq64 (zmm16_6, zmm25_6, zmm29_6, table);
inline vpternlogq64 (zmm16_7, zmm25_7, zmm29_7, table);
(* vpternlogq $0x96,%zmm17,%zmm23,%zmm16           #! PC = 0x55555558eb4f *)
mov table 0x96@uint8;
inline vpternlogq64 (zmm16_0, zmm23_0, zmm17_0, table);
inline vpternlogq64 (zmm16_1, zmm23_1, zmm17_1, table);
inline vpternlogq64 (zmm16_2, zmm23_2, zmm17_2, table);
inline vpternlogq64 (zmm16_3, zmm23_3, zmm17_3, table);
inline vpternlogq64 (zmm16_4, zmm23_4, zmm17_4, table);
inline vpternlogq64 (zmm16_5, zmm23_5, zmm17_5, table);
inline vpternlogq64 (zmm16_6, zmm23_6, zmm17_6, table);
inline vpternlogq64 (zmm16_7, zmm23_7, zmm17_7, table);
(* vmovdqa64 %zmm9,%zmm20                          #! PC = 0x55555558eb56 *)
mov zmm20_0 zmm9_0;
mov zmm20_1 zmm9_1;
mov zmm20_2 zmm9_2;
mov zmm20_3 zmm9_3;
mov zmm20_4 zmm9_4;
mov zmm20_5 zmm9_5;
mov zmm20_6 zmm9_6;
mov zmm20_7 zmm9_7;
(* vmovdqa64 %zmm13,0x108(%rsp)                    #! EA = L0x7fffffffd5c0; PC = 0x55555558eb5c *)
mov L0x7fffffffd5c0 zmm13_0;
mov L0x7fffffffd5c8 zmm13_1;
mov L0x7fffffffd5d0 zmm13_2;
mov L0x7fffffffd5d8 zmm13_3;
mov L0x7fffffffd5e0 zmm13_4;
mov L0x7fffffffd5e8 zmm13_5;
mov L0x7fffffffd5f0 zmm13_6;
mov L0x7fffffffd5f8 zmm13_7;
(* vprolq $0x1,%zmm3,%zmm13                        #! PC = 0x55555558eb67 *)
rol zmm13_0 zmm3_0 0x1;
rol zmm13_1 zmm3_1 0x1;
rol zmm13_2 zmm3_2 0x1;
rol zmm13_3 zmm3_3 0x1;
rol zmm13_4 zmm3_4 0x1;
rol zmm13_5 zmm3_5 0x1;
rol zmm13_6 zmm3_6 0x1;
rol zmm13_7 zmm3_7 0x1;
(* vpternlogq $0x96,%zmm10,%zmm22,%zmm20           #! PC = 0x55555558eb6e *)
mov table 0x96@uint8;
inline vpternlogq64 (zmm20_0, zmm22_0, zmm10_0, table);
inline vpternlogq64 (zmm20_1, zmm22_1, zmm10_1, table);
inline vpternlogq64 (zmm20_2, zmm22_2, zmm10_2, table);
inline vpternlogq64 (zmm20_3, zmm22_3, zmm10_3, table);
inline vpternlogq64 (zmm20_4, zmm22_4, zmm10_4, table);
inline vpternlogq64 (zmm20_5, zmm22_5, zmm10_5, table);
inline vpternlogq64 (zmm20_6, zmm22_6, zmm10_6, table);
inline vpternlogq64 (zmm20_7, zmm22_7, zmm10_7, table);
(* vpternlogq $0x96,%zmm28,%zmm31,%zmm20           #! PC = 0x55555558eb75 *)
mov table 0x96@uint8;
inline vpternlogq64 (zmm20_0, zmm31_0, zmm28_0, table);
inline vpternlogq64 (zmm20_1, zmm31_1, zmm28_1, table);
inline vpternlogq64 (zmm20_2, zmm31_2, zmm28_2, table);
inline vpternlogq64 (zmm20_3, zmm31_3, zmm28_3, table);
inline vpternlogq64 (zmm20_4, zmm31_4, zmm28_4, table);
inline vpternlogq64 (zmm20_5, zmm31_5, zmm28_5, table);
inline vpternlogq64 (zmm20_6, zmm31_6, zmm28_6, table);
inline vpternlogq64 (zmm20_7, zmm31_7, zmm28_7, table);
(* vprolq $0x1,%zmm20,%zmm30                       #! PC = 0x55555558eb7c *)
rol zmm30_0 zmm20_0 0x1;
rol zmm30_1 zmm20_1 0x1;
rol zmm30_2 zmm20_2 0x1;
rol zmm30_3 zmm20_3 0x1;
rol zmm30_4 zmm20_4 0x1;
rol zmm30_5 zmm20_5 0x1;
rol zmm30_6 zmm20_6 0x1;
rol zmm30_7 zmm20_7 0x1;
(* vpxord 0x108(%rsp),%zmm20,%zmm20                #! EA = L0x7fffffffd5c0; Value = 0x06e1d57a8e10d8fa; PC = 0x55555558eb83 *)
xor zmm20_0@uint64 zmm20_0 L0x7fffffffd5c0;
xor zmm20_1@uint64 zmm20_1 L0x7fffffffd5c8;
xor zmm20_2@uint64 zmm20_2 L0x7fffffffd5d0;
xor zmm20_3@uint64 zmm20_3 L0x7fffffffd5d8;
xor zmm20_4@uint64 zmm20_4 L0x7fffffffd5e0;
xor zmm20_5@uint64 zmm20_5 L0x7fffffffd5e8;
xor zmm20_6@uint64 zmm20_6 L0x7fffffffd5f0;
xor zmm20_7@uint64 zmm20_7 L0x7fffffffd5f8;
(* mov    $0x800a,%ecx                             #! PC = 0x55555558eb8e *)
mov rcx 0x800a@uint64;
(* vmovdqa64 %zmm13,0xc8(%rsp)                     #! EA = L0x7fffffffd580; PC = 0x55555558eb93 *)
mov L0x7fffffffd580 zmm13_0;
mov L0x7fffffffd588 zmm13_1;
mov L0x7fffffffd590 zmm13_2;
mov L0x7fffffffd598 zmm13_3;
mov L0x7fffffffd5a0 zmm13_4;
mov L0x7fffffffd5a8 zmm13_5;
mov L0x7fffffffd5b0 zmm13_6;
mov L0x7fffffffd5b8 zmm13_7;
(* vprolq $0x1,%zmm16,%zmm13                       #! PC = 0x55555558eb9e *)
rol zmm13_0 zmm16_0 0x1;
rol zmm13_1 zmm16_1 0x1;
rol zmm13_2 zmm16_2 0x1;
rol zmm13_3 zmm16_3 0x1;
rol zmm13_4 zmm16_4 0x1;
rol zmm13_5 zmm16_5 0x1;
rol zmm13_6 zmm16_6 0x1;
rol zmm13_7 zmm16_7 0x1;
(* vpxord 0x148(%rsp),%zmm16,%zmm16                #! EA = L0x7fffffffd600; Value = 0x33b120a78c40ce06; PC = 0x55555558eba5 *)
xor zmm16_0@uint64 zmm16_0 L0x7fffffffd600;
xor zmm16_1@uint64 zmm16_1 L0x7fffffffd608;
xor zmm16_2@uint64 zmm16_2 L0x7fffffffd610;
xor zmm16_3@uint64 zmm16_3 L0x7fffffffd618;
xor zmm16_4@uint64 zmm16_4 L0x7fffffffd620;
xor zmm16_5@uint64 zmm16_5 L0x7fffffffd628;
xor zmm16_6@uint64 zmm16_6 L0x7fffffffd630;
xor zmm16_7@uint64 zmm16_7 L0x7fffffffd638;
(* vpxord 0xc8(%rsp),%zmm21,%zmm21                 #! EA = L0x7fffffffd580; Value = 0x291adecb14f050fd; PC = 0x55555558ebb0 *)
xor zmm21_0@uint64 zmm21_0 L0x7fffffffd580;
xor zmm21_1@uint64 zmm21_1 L0x7fffffffd588;
xor zmm21_2@uint64 zmm21_2 L0x7fffffffd590;
xor zmm21_3@uint64 zmm21_3 L0x7fffffffd598;
xor zmm21_4@uint64 zmm21_4 L0x7fffffffd5a0;
xor zmm21_5@uint64 zmm21_5 L0x7fffffffd5a8;
xor zmm21_6@uint64 zmm21_6 L0x7fffffffd5b0;
xor zmm21_7@uint64 zmm21_7 L0x7fffffffd5b8;
(* vpxord %zmm31,%zmm16,%zmm31                     #! PC = 0x55555558ebbb *)
xor zmm31_0@uint64 zmm16_0 zmm31_0;
xor zmm31_1@uint64 zmm16_1 zmm31_1;
xor zmm31_2@uint64 zmm16_2 zmm31_2;
xor zmm31_3@uint64 zmm16_3 zmm31_3;
xor zmm31_4@uint64 zmm16_4 zmm31_4;
xor zmm31_5@uint64 zmm16_5 zmm31_5;
xor zmm31_6@uint64 zmm16_6 zmm31_6;
xor zmm31_7@uint64 zmm16_7 zmm31_7;
(* vprorq $0x14,%zmm31,%zmm31                      #! PC = 0x55555558ebc1 *)
ror zmm31_0 zmm31_0 0x14;
ror zmm31_1 zmm31_1 0x14;
ror zmm31_2 zmm31_2 0x14;
ror zmm31_3 zmm31_3 0x14;
ror zmm31_4 zmm31_4 0x14;
ror zmm31_5 zmm31_5 0x14;
ror zmm31_6 zmm31_6 0x14;
ror zmm31_7 zmm31_7 0x14;
(* vpxord %zmm1,%zmm20,%zmm1                       #! PC = 0x55555558ebc8 *)
xor zmm1_0@uint64 zmm20_0 zmm1_0;
xor zmm1_1@uint64 zmm20_1 zmm1_1;
xor zmm1_2@uint64 zmm20_2 zmm1_2;
xor zmm1_3@uint64 zmm20_3 zmm1_3;
xor zmm1_4@uint64 zmm20_4 zmm1_4;
xor zmm1_5@uint64 zmm20_5 zmm1_5;
xor zmm1_6@uint64 zmm20_6 zmm1_6;
xor zmm1_7@uint64 zmm20_7 zmm1_7;
(* vpxord %zmm13,%zmm26,%zmm13                     #! PC = 0x55555558ebce *)
xor zmm13_0@uint64 zmm26_0 zmm13_0;
xor zmm13_1@uint64 zmm26_1 zmm13_1;
xor zmm13_2@uint64 zmm26_2 zmm13_2;
xor zmm13_3@uint64 zmm26_3 zmm13_3;
xor zmm13_4@uint64 zmm26_4 zmm13_4;
xor zmm13_5@uint64 zmm26_5 zmm13_5;
xor zmm13_6@uint64 zmm26_6 zmm13_6;
xor zmm13_7@uint64 zmm26_7 zmm13_7;
(* vpxord %zmm6,%zmm21,%zmm6                       #! PC = 0x55555558ebd4 *)
xor zmm6_0@uint64 zmm21_0 zmm6_0;
xor zmm6_1@uint64 zmm21_1 zmm6_1;
xor zmm6_2@uint64 zmm21_2 zmm6_2;
xor zmm6_3@uint64 zmm21_3 zmm6_3;
xor zmm6_4@uint64 zmm21_4 zmm6_4;
xor zmm6_5@uint64 zmm21_5 zmm6_5;
xor zmm6_6@uint64 zmm21_6 zmm6_6;
xor zmm6_7@uint64 zmm21_7 zmm6_7;
(* vpxord %zmm12,%zmm13,%zmm12                     #! PC = 0x55555558ebda *)
xor zmm12_0@uint64 zmm13_0 zmm12_0;
xor zmm12_1@uint64 zmm13_1 zmm12_1;
xor zmm12_2@uint64 zmm13_2 zmm12_2;
xor zmm12_3@uint64 zmm13_3 zmm12_3;
xor zmm12_4@uint64 zmm13_4 zmm12_4;
xor zmm12_5@uint64 zmm13_5 zmm12_5;
xor zmm12_6@uint64 zmm13_6 zmm12_6;
xor zmm12_7@uint64 zmm13_7 zmm12_7;
(* vpxord %zmm30,%zmm3,%zmm3                       #! PC = 0x55555558ebe0 *)
xor zmm3_0@uint64 zmm3_0 zmm30_0;
xor zmm3_1@uint64 zmm3_1 zmm30_1;
xor zmm3_2@uint64 zmm3_2 zmm30_2;
xor zmm3_3@uint64 zmm3_3 zmm30_3;
xor zmm3_4@uint64 zmm3_4 zmm30_4;
xor zmm3_5@uint64 zmm3_5 zmm30_5;
xor zmm3_6@uint64 zmm3_6 zmm30_6;
xor zmm3_7@uint64 zmm3_7 zmm30_7;
(* vprorq $0x15,%zmm1,%zmm1                        #! PC = 0x55555558ebe6 *)
ror zmm1_0 zmm1_0 0x15;
ror zmm1_1 zmm1_1 0x15;
ror zmm1_2 zmm1_2 0x15;
ror zmm1_3 zmm1_3 0x15;
ror zmm1_4 zmm1_4 0x15;
ror zmm1_5 zmm1_5 0x15;
ror zmm1_6 zmm1_6 0x15;
ror zmm1_7 zmm1_7 0x15;
(* vprolq $0x15,%zmm6,%zmm6                        #! PC = 0x55555558ebed *)
rol zmm6_0 zmm6_0 0x15;
rol zmm6_1 zmm6_1 0x15;
rol zmm6_2 zmm6_2 0x15;
rol zmm6_3 zmm6_3 0x15;
rol zmm6_4 zmm6_4 0x15;
rol zmm6_5 zmm6_5 0x15;
rol zmm6_6 zmm6_6 0x15;
rol zmm6_7 zmm6_7 0x15;
(* vprolq $0xe,%zmm12,%zmm12                       #! PC = 0x55555558ebf4 *)
rol zmm12_0 zmm12_0 0xe;
rol zmm12_1 zmm12_1 0xe;
rol zmm12_2 zmm12_2 0xe;
rol zmm12_3 zmm12_3 0xe;
rol zmm12_4 zmm12_4 0xe;
rol zmm12_5 zmm12_5 0xe;
rol zmm12_6 zmm12_6 0xe;
rol zmm12_7 zmm12_7 0xe;
(* vpxord %zmm7,%zmm21,%zmm7                       #! PC = 0x55555558ebfb *)
xor zmm7_0@uint64 zmm21_0 zmm7_0;
xor zmm7_1@uint64 zmm21_1 zmm7_1;
xor zmm7_2@uint64 zmm21_2 zmm7_2;
xor zmm7_3@uint64 zmm21_3 zmm7_3;
xor zmm7_4@uint64 zmm21_4 zmm7_4;
xor zmm7_5@uint64 zmm21_5 zmm7_5;
xor zmm7_6@uint64 zmm21_6 zmm7_6;
xor zmm7_7@uint64 zmm21_7 zmm7_7;
(* vpxord %zmm19,%zmm13,%zmm19                     #! PC = 0x55555558ec01 *)
xor zmm19_0@uint64 zmm13_0 zmm19_0;
xor zmm19_1@uint64 zmm13_1 zmm19_1;
xor zmm19_2@uint64 zmm13_2 zmm19_2;
xor zmm19_3@uint64 zmm13_3 zmm19_3;
xor zmm19_4@uint64 zmm13_4 zmm19_4;
xor zmm19_5@uint64 zmm13_5 zmm19_5;
xor zmm19_6@uint64 zmm13_6 zmm19_6;
xor zmm19_7@uint64 zmm13_7 zmm19_7;
(* vprolq $0x1c,%zmm7,%zmm7                        #! PC = 0x55555558ec07 *)
rol zmm7_0 zmm7_0 0x1c;
rol zmm7_1 zmm7_1 0x1c;
rol zmm7_2 zmm7_2 0x1c;
rol zmm7_3 zmm7_3 0x1c;
rol zmm7_4 zmm7_4 0x1c;
rol zmm7_5 zmm7_5 0x1c;
rol zmm7_6 zmm7_6 0x1c;
rol zmm7_7 zmm7_7 0x1c;
(* vprolq $0x14,%zmm19,%zmm19                      #! PC = 0x55555558ec0e *)
rol zmm19_0 zmm19_0 0x14;
rol zmm19_1 zmm19_1 0x14;
rol zmm19_2 zmm19_2 0x14;
rol zmm19_3 zmm19_3 0x14;
rol zmm19_4 zmm19_4 0x14;
rol zmm19_5 zmm19_5 0x14;
rol zmm19_6 zmm19_6 0x14;
rol zmm19_7 zmm19_7 0x14;
(* vpxord %zmm17,%zmm3,%zmm17                      #! PC = 0x55555558ec15 *)
xor zmm17_0@uint64 zmm3_0 zmm17_0;
xor zmm17_1@uint64 zmm3_1 zmm17_1;
xor zmm17_2@uint64 zmm3_2 zmm17_2;
xor zmm17_3@uint64 zmm3_3 zmm17_3;
xor zmm17_4@uint64 zmm3_4 zmm17_4;
xor zmm17_5@uint64 zmm3_5 zmm17_5;
xor zmm17_6@uint64 zmm3_6 zmm17_6;
xor zmm17_7@uint64 zmm3_7 zmm17_7;
(* vpxord %zmm10,%zmm16,%zmm10                     #! PC = 0x55555558ec1b *)
xor zmm10_0@uint64 zmm16_0 zmm10_0;
xor zmm10_1@uint64 zmm16_1 zmm10_1;
xor zmm10_2@uint64 zmm16_2 zmm10_2;
xor zmm10_3@uint64 zmm16_3 zmm10_3;
xor zmm10_4@uint64 zmm16_4 zmm10_4;
xor zmm10_5@uint64 zmm16_5 zmm10_5;
xor zmm10_6@uint64 zmm16_6 zmm10_6;
xor zmm10_7@uint64 zmm16_7 zmm10_7;
(* vpxord %zmm14,%zmm20,%zmm14                     #! PC = 0x55555558ec21 *)
xor zmm14_0@uint64 zmm20_0 zmm14_0;
xor zmm14_1@uint64 zmm20_1 zmm14_1;
xor zmm14_2@uint64 zmm20_2 zmm14_2;
xor zmm14_3@uint64 zmm20_3 zmm14_3;
xor zmm14_4@uint64 zmm20_4 zmm14_4;
xor zmm14_5@uint64 zmm20_5 zmm14_5;
xor zmm14_6@uint64 zmm20_6 zmm14_6;
xor zmm14_7@uint64 zmm20_7 zmm14_7;
(* vpxord %zmm22,%zmm16,%zmm22                     #! PC = 0x55555558ec27 *)
xor zmm22_0@uint64 zmm16_0 zmm22_0;
xor zmm22_1@uint64 zmm16_1 zmm22_1;
xor zmm22_2@uint64 zmm16_2 zmm22_2;
xor zmm22_3@uint64 zmm16_3 zmm22_3;
xor zmm22_4@uint64 zmm16_4 zmm22_4;
xor zmm22_5@uint64 zmm16_5 zmm22_5;
xor zmm22_6@uint64 zmm16_6 zmm22_6;
xor zmm22_7@uint64 zmm16_7 zmm22_7;
(* vpxord %zmm15,%zmm20,%zmm15                     #! PC = 0x55555558ec2d *)
xor zmm15_0@uint64 zmm20_0 zmm15_0;
xor zmm15_1@uint64 zmm20_1 zmm15_1;
xor zmm15_2@uint64 zmm20_2 zmm15_2;
xor zmm15_3@uint64 zmm20_3 zmm15_3;
xor zmm15_4@uint64 zmm20_4 zmm15_4;
xor zmm15_5@uint64 zmm20_5 zmm15_5;
xor zmm15_6@uint64 zmm20_6 zmm15_6;
xor zmm15_7@uint64 zmm20_7 zmm15_7;
(* vpxord %zmm5,%zmm21,%zmm5                       #! PC = 0x55555558ec33 *)
xor zmm5_0@uint64 zmm21_0 zmm5_0;
xor zmm5_1@uint64 zmm21_1 zmm5_1;
xor zmm5_2@uint64 zmm21_2 zmm5_2;
xor zmm5_3@uint64 zmm21_3 zmm5_3;
xor zmm5_4@uint64 zmm21_4 zmm5_4;
xor zmm5_5@uint64 zmm21_5 zmm5_5;
xor zmm5_6@uint64 zmm21_6 zmm5_6;
xor zmm5_7@uint64 zmm21_7 zmm5_7;
(* vpxord %zmm11,%zmm20,%zmm11                     #! PC = 0x55555558ec39 *)
xor zmm11_0@uint64 zmm20_0 zmm11_0;
xor zmm11_1@uint64 zmm20_1 zmm11_1;
xor zmm11_2@uint64 zmm20_2 zmm11_2;
xor zmm11_3@uint64 zmm20_3 zmm11_3;
xor zmm11_4@uint64 zmm20_4 zmm11_4;
xor zmm11_5@uint64 zmm20_5 zmm11_5;
xor zmm11_6@uint64 zmm20_6 zmm11_6;
xor zmm11_7@uint64 zmm20_7 zmm11_7;
(* vpxord %zmm4,%zmm21,%zmm4                       #! PC = 0x55555558ec3f *)
xor zmm4_0@uint64 zmm21_0 zmm4_0;
xor zmm4_1@uint64 zmm21_1 zmm4_1;
xor zmm4_2@uint64 zmm21_2 zmm4_2;
xor zmm4_3@uint64 zmm21_3 zmm4_3;
xor zmm4_4@uint64 zmm21_4 zmm4_4;
xor zmm4_5@uint64 zmm21_5 zmm4_5;
xor zmm4_6@uint64 zmm21_6 zmm4_6;
xor zmm4_7@uint64 zmm21_7 zmm4_7;
(* vpxord %zmm2,%zmm20,%zmm20                      #! PC = 0x55555558ec45 *)
xor zmm20_0@uint64 zmm20_0 zmm2_0;
xor zmm20_1@uint64 zmm20_1 zmm2_1;
xor zmm20_2@uint64 zmm20_2 zmm2_2;
xor zmm20_3@uint64 zmm20_3 zmm2_3;
xor zmm20_4@uint64 zmm20_4 zmm2_4;
xor zmm20_5@uint64 zmm20_5 zmm2_5;
xor zmm20_6@uint64 zmm20_6 zmm2_6;
xor zmm20_7@uint64 zmm20_7 zmm2_7;
(* vpxord %zmm18,%zmm21,%zmm21                     #! PC = 0x55555558ec4b *)
xor zmm21_0@uint64 zmm21_0 zmm18_0;
xor zmm21_1@uint64 zmm21_1 zmm18_1;
xor zmm21_2@uint64 zmm21_2 zmm18_2;
xor zmm21_3@uint64 zmm21_3 zmm18_3;
xor zmm21_4@uint64 zmm21_4 zmm18_4;
xor zmm21_5@uint64 zmm21_5 zmm18_5;
xor zmm21_6@uint64 zmm21_6 zmm18_6;
xor zmm21_7@uint64 zmm21_7 zmm18_7;
(* vpxord %zmm3,%zmm24,%zmm24                      #! PC = 0x55555558ec51 *)
xor zmm24_0@uint64 zmm24_0 zmm3_0;
xor zmm24_1@uint64 zmm24_1 zmm3_1;
xor zmm24_2@uint64 zmm24_2 zmm3_2;
xor zmm24_3@uint64 zmm24_3 zmm3_3;
xor zmm24_4@uint64 zmm24_4 zmm3_4;
xor zmm24_5@uint64 zmm24_5 zmm3_5;
xor zmm24_6@uint64 zmm24_6 zmm3_6;
xor zmm24_7@uint64 zmm24_7 zmm3_7;
(* vprolq $0x1,%zmm22,%zmm22                       #! PC = 0x55555558ec57 *)
rol zmm22_0 zmm22_0 0x1;
rol zmm22_1 zmm22_1 0x1;
rol zmm22_2 zmm22_2 0x1;
rol zmm22_3 zmm22_3 0x1;
rol zmm22_4 zmm22_4 0x1;
rol zmm22_5 zmm22_5 0x1;
rol zmm22_6 zmm22_6 0x1;
rol zmm22_7 zmm22_7 0x1;
(* vprolq $0x6,%zmm15,%zmm15                       #! PC = 0x55555558ec5e *)
rol zmm15_0 zmm15_0 0x6;
rol zmm15_1 zmm15_1 0x6;
rol zmm15_2 zmm15_2 0x6;
rol zmm15_3 zmm15_3 0x6;
rol zmm15_4 zmm15_4 0x6;
rol zmm15_5 zmm15_5 0x6;
rol zmm15_6 zmm15_6 0x6;
rol zmm15_7 zmm15_7 0x6;
(* vprorq $0x2,%zmm20,%zmm20                       #! PC = 0x55555558ec65 *)
ror zmm20_0 zmm20_0 0x2;
ror zmm20_1 zmm20_1 0x2;
ror zmm20_2 zmm20_2 0x2;
ror zmm20_3 zmm20_3 0x2;
ror zmm20_4 zmm20_4 0x2;
ror zmm20_5 zmm20_5 0x2;
ror zmm20_6 zmm20_6 0x2;
ror zmm20_7 zmm20_7 0x2;
(* vprorq $0x9,%zmm21,%zmm21                       #! PC = 0x55555558ec6c *)
ror zmm21_0 zmm21_0 0x9;
ror zmm21_1 zmm21_1 0x9;
ror zmm21_2 zmm21_2 0x9;
ror zmm21_3 zmm21_3 0x9;
ror zmm21_4 zmm21_4 0x9;
ror zmm21_5 zmm21_5 0x9;
ror zmm21_6 zmm21_6 0x9;
ror zmm21_7 zmm21_7 0x9;
(* vprolq $0x3,%zmm17,%zmm17                       #! PC = 0x55555558ec73 *)
rol zmm17_0 zmm17_0 0x3;
rol zmm17_1 zmm17_1 0x3;
rol zmm17_2 zmm17_2 0x3;
rol zmm17_3 zmm17_3 0x3;
rol zmm17_4 zmm17_4 0x3;
rol zmm17_5 zmm17_5 0x3;
rol zmm17_6 zmm17_6 0x3;
rol zmm17_7 zmm17_7 0x3;
(* vprorq $0x13,%zmm10,%zmm10                      #! PC = 0x55555558ec7a *)
ror zmm10_0 zmm10_0 0x13;
ror zmm10_1 zmm10_1 0x13;
ror zmm10_2 zmm10_2 0x13;
ror zmm10_3 zmm10_3 0x13;
ror zmm10_4 zmm10_4 0x13;
ror zmm10_5 zmm10_5 0x13;
ror zmm10_6 zmm10_6 0x13;
ror zmm10_7 zmm10_7 0x13;
(* vprorq $0x3,%zmm14,%zmm14                       #! PC = 0x55555558ec81 *)
ror zmm14_0 zmm14_0 0x3;
ror zmm14_1 zmm14_1 0x3;
ror zmm14_2 zmm14_2 0x3;
ror zmm14_3 zmm14_3 0x3;
ror zmm14_4 zmm14_4 0x3;
ror zmm14_5 zmm14_5 0x3;
ror zmm14_6 zmm14_6 0x3;
ror zmm14_7 zmm14_7 0x3;
(* vpxord %zmm23,%zmm3,%zmm23                      #! PC = 0x55555558ec88 *)
xor zmm23_0@uint64 zmm3_0 zmm23_0;
xor zmm23_1@uint64 zmm3_1 zmm23_1;
xor zmm23_2@uint64 zmm3_2 zmm23_2;
xor zmm23_3@uint64 zmm3_3 zmm23_3;
xor zmm23_4@uint64 zmm3_4 zmm23_4;
xor zmm23_5@uint64 zmm3_5 zmm23_5;
xor zmm23_6@uint64 zmm3_6 zmm23_6;
xor zmm23_7@uint64 zmm3_7 zmm23_7;
(* vpxord %zmm0,%zmm13,%zmm0                       #! PC = 0x55555558ec8e *)
xor zmm0_0@uint64 zmm13_0 zmm0_0;
xor zmm0_1@uint64 zmm13_1 zmm0_1;
xor zmm0_2@uint64 zmm13_2 zmm0_2;
xor zmm0_3@uint64 zmm13_3 zmm0_3;
xor zmm0_4@uint64 zmm13_4 zmm0_4;
xor zmm0_5@uint64 zmm13_5 zmm0_5;
xor zmm0_6@uint64 zmm13_6 zmm0_6;
xor zmm0_7@uint64 zmm13_7 zmm0_7;
(* vpxord %zmm29,%zmm3,%zmm29                      #! PC = 0x55555558ec94 *)
xor zmm29_0@uint64 zmm3_0 zmm29_0;
xor zmm29_1@uint64 zmm3_1 zmm29_1;
xor zmm29_2@uint64 zmm3_2 zmm29_2;
xor zmm29_3@uint64 zmm3_3 zmm29_3;
xor zmm29_4@uint64 zmm3_4 zmm29_4;
xor zmm29_5@uint64 zmm3_5 zmm29_5;
xor zmm29_6@uint64 zmm3_6 zmm29_6;
xor zmm29_7@uint64 zmm3_7 zmm29_7;
(* vpxord %zmm9,%zmm16,%zmm9                       #! PC = 0x55555558ec9a *)
xor zmm9_0@uint64 zmm16_0 zmm9_0;
xor zmm9_1@uint64 zmm16_1 zmm9_1;
xor zmm9_2@uint64 zmm16_2 zmm9_2;
xor zmm9_3@uint64 zmm16_3 zmm9_3;
xor zmm9_4@uint64 zmm16_4 zmm9_4;
xor zmm9_5@uint64 zmm16_5 zmm9_5;
xor zmm9_6@uint64 zmm16_6 zmm9_6;
xor zmm9_7@uint64 zmm16_7 zmm9_7;
(* vpxord %zmm8,%zmm13,%zmm8                       #! PC = 0x55555558eca0 *)
xor zmm8_0@uint64 zmm13_0 zmm8_0;
xor zmm8_1@uint64 zmm13_1 zmm8_1;
xor zmm8_2@uint64 zmm13_2 zmm8_2;
xor zmm8_3@uint64 zmm13_3 zmm8_3;
xor zmm8_4@uint64 zmm13_4 zmm8_4;
xor zmm8_5@uint64 zmm13_5 zmm8_5;
xor zmm8_6@uint64 zmm13_6 zmm8_6;
xor zmm8_7@uint64 zmm13_7 zmm8_7;
(* vpxord %zmm25,%zmm3,%zmm3                       #! PC = 0x55555558eca6 *)
xor zmm3_0@uint64 zmm3_0 zmm25_0;
xor zmm3_1@uint64 zmm3_1 zmm25_1;
xor zmm3_2@uint64 zmm3_2 zmm25_2;
xor zmm3_3@uint64 zmm3_3 zmm25_3;
xor zmm3_4@uint64 zmm3_4 zmm25_4;
xor zmm3_5@uint64 zmm3_5 zmm25_5;
xor zmm3_6@uint64 zmm3_6 zmm25_6;
xor zmm3_7@uint64 zmm3_7 zmm25_7;
(* vpxord %zmm28,%zmm16,%zmm16                     #! PC = 0x55555558ecac *)
xor zmm16_0@uint64 zmm16_0 zmm28_0;
xor zmm16_1@uint64 zmm16_1 zmm28_1;
xor zmm16_2@uint64 zmm16_2 zmm28_2;
xor zmm16_3@uint64 zmm16_3 zmm28_3;
xor zmm16_4@uint64 zmm16_4 zmm28_4;
xor zmm16_5@uint64 zmm16_5 zmm28_5;
xor zmm16_6@uint64 zmm16_6 zmm28_6;
xor zmm16_7@uint64 zmm16_7 zmm28_7;
(* vpxord %zmm27,%zmm13,%zmm13                     #! PC = 0x55555558ecb2 *)
xor zmm13_0@uint64 zmm13_0 zmm27_0;
xor zmm13_1@uint64 zmm13_1 zmm27_1;
xor zmm13_2@uint64 zmm13_2 zmm27_2;
xor zmm13_3@uint64 zmm13_3 zmm27_3;
xor zmm13_4@uint64 zmm13_4 zmm27_4;
xor zmm13_5@uint64 zmm13_5 zmm27_5;
xor zmm13_6@uint64 zmm13_6 zmm27_6;
xor zmm13_7@uint64 zmm13_7 zmm27_7;
(* vprorq $0x1c,%zmm29,%zmm29                      #! PC = 0x55555558ecb8 *)
ror zmm29_0 zmm29_0 0x1c;
ror zmm29_1 zmm29_1 0x1c;
ror zmm29_2 zmm29_2 0x1c;
ror zmm29_3 zmm29_3 0x1c;
ror zmm29_4 zmm29_4 0x1c;
ror zmm29_5 zmm29_5 0x1c;
ror zmm29_6 zmm29_6 0x1c;
ror zmm29_7 zmm29_7 0x1c;
(* vprolq $0x1b,%zmm8,%zmm8                        #! PC = 0x55555558ecbf *)
rol zmm8_0 zmm8_0 0x1b;
rol zmm8_1 zmm8_1 0x1b;
rol zmm8_2 zmm8_2 0x1b;
rol zmm8_3 zmm8_3 0x1b;
rol zmm8_4 zmm8_4 0x1b;
rol zmm8_5 zmm8_5 0x1b;
rol zmm8_6 zmm8_6 0x1b;
rol zmm8_7 zmm8_7 0x1b;
(* vprolq $0x12,%zmm23,%zmm23                      #! PC = 0x55555558ecc6 *)
rol zmm23_0 zmm23_0 0x12;
rol zmm23_1 zmm23_1 0x12;
rol zmm23_2 zmm23_2 0x12;
rol zmm23_3 zmm23_3 0x12;
rol zmm23_4 zmm23_4 0x12;
rol zmm23_5 zmm23_5 0x12;
rol zmm23_6 zmm23_6 0x12;
rol zmm23_7 zmm23_7 0x12;
(* vprolq $0x19,%zmm5,%zmm5                        #! PC = 0x55555558eccd *)
rol zmm5_0 zmm5_0 0x19;
rol zmm5_1 zmm5_1 0x19;
rol zmm5_2 zmm5_2 0x19;
rol zmm5_3 zmm5_3 0x19;
rol zmm5_4 zmm5_4 0x19;
rol zmm5_5 zmm5_5 0x19;
rol zmm5_6 zmm5_6 0x19;
rol zmm5_7 zmm5_7 0x19;
(* vprolq $0x8,%zmm0,%zmm0                         #! PC = 0x55555558ecd4 *)
rol zmm0_0 zmm0_0 0x8;
rol zmm0_1 zmm0_1 0x8;
rol zmm0_2 zmm0_2 0x8;
rol zmm0_3 zmm0_3 0x8;
rol zmm0_4 zmm0_4 0x8;
rol zmm0_5 zmm0_5 0x8;
rol zmm0_6 zmm0_6 0x8;
rol zmm0_7 zmm0_7 0x8;
(* vprorq $0x17,%zmm3,%zmm3                        #! PC = 0x55555558ecdb *)
ror zmm3_0 zmm3_0 0x17;
ror zmm3_1 zmm3_1 0x17;
ror zmm3_2 zmm3_2 0x17;
ror zmm3_3 zmm3_3 0x17;
ror zmm3_4 zmm3_4 0x17;
ror zmm3_5 zmm3_5 0x17;
ror zmm3_6 zmm3_6 0x17;
ror zmm3_7 zmm3_7 0x17;
(* vprolq $0x2,%zmm16,%zmm16                       #! PC = 0x55555558ece2 *)
rol zmm16_0 zmm16_0 0x2;
rol zmm16_1 zmm16_1 0x2;
rol zmm16_2 zmm16_2 0x2;
rol zmm16_3 zmm16_3 0x2;
rol zmm16_4 zmm16_4 0x2;
rol zmm16_5 zmm16_5 0x2;
rol zmm16_6 zmm16_6 0x2;
rol zmm16_7 zmm16_7 0x2;
(* vprorq $0x19,%zmm13,%zmm13                      #! PC = 0x55555558ece9 *)
ror zmm13_0 zmm13_0 0x19;
ror zmm13_1 zmm13_1 0x19;
ror zmm13_2 zmm13_2 0x19;
ror zmm13_3 zmm13_3 0x19;
ror zmm13_4 zmm13_4 0x19;
ror zmm13_5 zmm13_5 0x19;
ror zmm13_6 zmm13_6 0x19;
ror zmm13_7 zmm13_7 0x19;
(* vprolq $0xa,%zmm9,%zmm9                         #! PC = 0x55555558ecf0 *)
rol zmm9_0 zmm9_0 0xa;
rol zmm9_1 zmm9_1 0xa;
rol zmm9_2 zmm9_2 0xa;
rol zmm9_3 zmm9_3 0xa;
rol zmm9_4 zmm9_4 0xa;
rol zmm9_5 zmm9_5 0xa;
rol zmm9_6 zmm9_6 0xa;
rol zmm9_7 zmm9_7 0xa;
(* vprolq $0xf,%zmm11,%zmm11                       #! PC = 0x55555558ecf7 *)
rol zmm11_0 zmm11_0 0xf;
rol zmm11_1 zmm11_1 0xf;
rol zmm11_2 zmm11_2 0xf;
rol zmm11_3 zmm11_3 0xf;
rol zmm11_4 zmm11_4 0xf;
rol zmm11_5 zmm11_5 0xf;
rol zmm11_6 zmm11_6 0xf;
rol zmm11_7 zmm11_7 0xf;
(* vprorq $0x8,%zmm4,%zmm4                         #! PC = 0x55555558ecfe *)
ror zmm4_0 zmm4_0 0x8;
ror zmm4_1 zmm4_1 0x8;
ror zmm4_2 zmm4_2 0x8;
ror zmm4_3 zmm4_3 0x8;
ror zmm4_4 zmm4_4 0x8;
ror zmm4_5 zmm4_5 0x8;
ror zmm4_6 zmm4_6 0x8;
ror zmm4_7 zmm4_7 0x8;
(* vmovdqa64 %zmm24,%zmm30                         #! PC = 0x55555558ed05 *)
mov zmm30_0 zmm24_0;
mov zmm30_1 zmm24_1;
mov zmm30_2 zmm24_2;
mov zmm30_3 zmm24_3;
mov zmm30_4 zmm24_4;
mov zmm30_5 zmm24_5;
mov zmm30_6 zmm24_6;
mov zmm30_7 zmm24_7;
(* vmovdqa64 %zmm31,%zmm26                         #! PC = 0x55555558ed0b *)
mov zmm26_0 zmm31_0;
mov zmm26_1 zmm31_1;
mov zmm26_2 zmm31_2;
mov zmm26_3 zmm31_3;
mov zmm26_4 zmm31_4;
mov zmm26_5 zmm31_5;
mov zmm26_6 zmm31_6;
mov zmm26_7 zmm31_7;
(* vpternlogq $0xd2,%zmm1,%zmm31,%zmm30            #! PC = 0x55555558ed11 *)
mov table 0xd2@uint8;
inline vpternlogq64 (zmm30_0, zmm31_0, zmm1_0, table);
inline vpternlogq64 (zmm30_1, zmm31_1, zmm1_1, table);
inline vpternlogq64 (zmm30_2, zmm31_2, zmm1_2, table);
inline vpternlogq64 (zmm30_3, zmm31_3, zmm1_3, table);
inline vpternlogq64 (zmm30_4, zmm31_4, zmm1_4, table);
inline vpternlogq64 (zmm30_5, zmm31_5, zmm1_5, table);
inline vpternlogq64 (zmm30_6, zmm31_6, zmm1_6, table);
inline vpternlogq64 (zmm30_7, zmm31_7, zmm1_7, table);
(* vpternlogq $0xd2,%zmm6,%zmm1,%zmm26             #! PC = 0x55555558ed18 *)
mov table 0xd2@uint8;
inline vpternlogq64 (zmm26_0, zmm1_0, zmm6_0, table);
inline vpternlogq64 (zmm26_1, zmm1_1, zmm6_1, table);
inline vpternlogq64 (zmm26_2, zmm1_2, zmm6_2, table);
inline vpternlogq64 (zmm26_3, zmm1_3, zmm6_3, table);
inline vpternlogq64 (zmm26_4, zmm1_4, zmm6_4, table);
inline vpternlogq64 (zmm26_5, zmm1_5, zmm6_5, table);
inline vpternlogq64 (zmm26_6, zmm1_6, zmm6_6, table);
inline vpternlogq64 (zmm26_7, zmm1_7, zmm6_7, table);
(* vpternlogq $0xd2,%zmm12,%zmm6,%zmm1             #! PC = 0x55555558ed1f *)
mov table 0xd2@uint8;
inline vpternlogq64 (zmm1_0, zmm6_0, zmm12_0, table);
inline vpternlogq64 (zmm1_1, zmm6_1, zmm12_1, table);
inline vpternlogq64 (zmm1_2, zmm6_2, zmm12_2, table);
inline vpternlogq64 (zmm1_3, zmm6_3, zmm12_3, table);
inline vpternlogq64 (zmm1_4, zmm6_4, zmm12_4, table);
inline vpternlogq64 (zmm1_5, zmm6_5, zmm12_5, table);
inline vpternlogq64 (zmm1_6, zmm6_6, zmm12_6, table);
inline vpternlogq64 (zmm1_7, zmm6_7, zmm12_7, table);
(* vpternlogq $0xd2,%zmm24,%zmm12,%zmm6            #! PC = 0x55555558ed26 *)
mov table 0xd2@uint8;
inline vpternlogq64 (zmm6_0, zmm12_0, zmm24_0, table);
inline vpternlogq64 (zmm6_1, zmm12_1, zmm24_1, table);
inline vpternlogq64 (zmm6_2, zmm12_2, zmm24_2, table);
inline vpternlogq64 (zmm6_3, zmm12_3, zmm24_3, table);
inline vpternlogq64 (zmm6_4, zmm12_4, zmm24_4, table);
inline vpternlogq64 (zmm6_5, zmm12_5, zmm24_5, table);
inline vpternlogq64 (zmm6_6, zmm12_6, zmm24_6, table);
inline vpternlogq64 (zmm6_7, zmm12_7, zmm24_7, table);
(* vpternlogq $0xd2,%zmm31,%zmm24,%zmm12           #! PC = 0x55555558ed2d *)
mov table 0xd2@uint8;
inline vpternlogq64 (zmm12_0, zmm24_0, zmm31_0, table);
inline vpternlogq64 (zmm12_1, zmm24_1, zmm31_1, table);
inline vpternlogq64 (zmm12_2, zmm24_2, zmm31_2, table);
inline vpternlogq64 (zmm12_3, zmm24_3, zmm31_3, table);
inline vpternlogq64 (zmm12_4, zmm24_4, zmm31_4, table);
inline vpternlogq64 (zmm12_5, zmm24_5, zmm31_5, table);
inline vpternlogq64 (zmm12_6, zmm24_6, zmm31_6, table);
inline vpternlogq64 (zmm12_7, zmm24_7, zmm31_7, table);
(* vpbroadcastq %r12,%zmm24                        #! PC = 0x55555558ed34 *)
mov zmm24_0 r12;
mov zmm24_1 r12;
mov zmm24_2 r12;
mov zmm24_3 r12;
mov zmm24_4 r12;
mov zmm24_5 r12;
mov zmm24_6 r12;
mov zmm24_7 r12;
(* vpxord %zmm30,%zmm24,%zmm24                     #! PC = 0x55555558ed3a *)
xor zmm24_0@uint64 zmm24_0 zmm30_0;
xor zmm24_1@uint64 zmm24_1 zmm30_1;
xor zmm24_2@uint64 zmm24_2 zmm30_2;
xor zmm24_3@uint64 zmm24_3 zmm30_3;
xor zmm24_4@uint64 zmm24_4 zmm30_4;
xor zmm24_5@uint64 zmm24_5 zmm30_5;
xor zmm24_6@uint64 zmm24_6 zmm30_6;
xor zmm24_7@uint64 zmm24_7 zmm30_7;
(* vmovdqa64 %zmm19,%zmm31                         #! PC = 0x55555558ed40 *)
mov zmm31_0 zmm19_0;
mov zmm31_1 zmm19_1;
mov zmm31_2 zmm19_2;
mov zmm31_3 zmm19_3;
mov zmm31_4 zmm19_4;
mov zmm31_5 zmm19_5;
mov zmm31_6 zmm19_6;
mov zmm31_7 zmm19_7;
(* vmovdqa64 %zmm7,%zmm30                          #! PC = 0x55555558ed46 *)
mov zmm30_0 zmm7_0;
mov zmm30_1 zmm7_1;
mov zmm30_2 zmm7_2;
mov zmm30_3 zmm7_3;
mov zmm30_4 zmm7_4;
mov zmm30_5 zmm7_5;
mov zmm30_6 zmm7_6;
mov zmm30_7 zmm7_7;
(* vpternlogq $0xd2,%zmm17,%zmm19,%zmm30           #! PC = 0x55555558ed4c *)
mov table 0xd2@uint8;
inline vpternlogq64 (zmm30_0, zmm19_0, zmm17_0, table);
inline vpternlogq64 (zmm30_1, zmm19_1, zmm17_1, table);
inline vpternlogq64 (zmm30_2, zmm19_2, zmm17_2, table);
inline vpternlogq64 (zmm30_3, zmm19_3, zmm17_3, table);
inline vpternlogq64 (zmm30_4, zmm19_4, zmm17_4, table);
inline vpternlogq64 (zmm30_5, zmm19_5, zmm17_5, table);
inline vpternlogq64 (zmm30_6, zmm19_6, zmm17_6, table);
inline vpternlogq64 (zmm30_7, zmm19_7, zmm17_7, table);
(* vpternlogq $0xd2,%zmm10,%zmm17,%zmm31           #! PC = 0x55555558ed53 *)
mov table 0xd2@uint8;
inline vpternlogq64 (zmm31_0, zmm17_0, zmm10_0, table);
inline vpternlogq64 (zmm31_1, zmm17_1, zmm10_1, table);
inline vpternlogq64 (zmm31_2, zmm17_2, zmm10_2, table);
inline vpternlogq64 (zmm31_3, zmm17_3, zmm10_3, table);
inline vpternlogq64 (zmm31_4, zmm17_4, zmm10_4, table);
inline vpternlogq64 (zmm31_5, zmm17_5, zmm10_5, table);
inline vpternlogq64 (zmm31_6, zmm17_6, zmm10_6, table);
inline vpternlogq64 (zmm31_7, zmm17_7, zmm10_7, table);
(* vmovdqa64 %zmm20,%zmm25                         #! PC = 0x55555558ed5a *)
mov zmm25_0 zmm20_0;
mov zmm25_1 zmm20_1;
mov zmm25_2 zmm20_2;
mov zmm25_3 zmm20_3;
mov zmm25_4 zmm20_4;
mov zmm25_5 zmm20_5;
mov zmm25_6 zmm20_6;
mov zmm25_7 zmm20_7;
(* vpternlogq $0xd2,%zmm14,%zmm10,%zmm17           #! PC = 0x55555558ed60 *)
mov table 0xd2@uint8;
inline vpternlogq64 (zmm17_0, zmm10_0, zmm14_0, table);
inline vpternlogq64 (zmm17_1, zmm10_1, zmm14_1, table);
inline vpternlogq64 (zmm17_2, zmm10_2, zmm14_2, table);
inline vpternlogq64 (zmm17_3, zmm10_3, zmm14_3, table);
inline vpternlogq64 (zmm17_4, zmm10_4, zmm14_4, table);
inline vpternlogq64 (zmm17_5, zmm10_5, zmm14_5, table);
inline vpternlogq64 (zmm17_6, zmm10_6, zmm14_6, table);
inline vpternlogq64 (zmm17_7, zmm10_7, zmm14_7, table);
(* vmovdqa64 %zmm21,%zmm28                         #! PC = 0x55555558ed67 *)
mov zmm28_0 zmm21_0;
mov zmm28_1 zmm21_1;
mov zmm28_2 zmm21_2;
mov zmm28_3 zmm21_3;
mov zmm28_4 zmm21_4;
mov zmm28_5 zmm21_5;
mov zmm28_6 zmm21_6;
mov zmm28_7 zmm21_7;
(* vpternlogq $0xd2,%zmm7,%zmm14,%zmm10            #! PC = 0x55555558ed6d *)
mov table 0xd2@uint8;
inline vpternlogq64 (zmm10_0, zmm14_0, zmm7_0, table);
inline vpternlogq64 (zmm10_1, zmm14_1, zmm7_1, table);
inline vpternlogq64 (zmm10_2, zmm14_2, zmm7_2, table);
inline vpternlogq64 (zmm10_3, zmm14_3, zmm7_3, table);
inline vpternlogq64 (zmm10_4, zmm14_4, zmm7_4, table);
inline vpternlogq64 (zmm10_5, zmm14_5, zmm7_5, table);
inline vpternlogq64 (zmm10_6, zmm14_6, zmm7_6, table);
inline vpternlogq64 (zmm10_7, zmm14_7, zmm7_7, table);
(* vpternlogq $0xd2,%zmm19,%zmm7,%zmm14            #! PC = 0x55555558ed74 *)
mov table 0xd2@uint8;
inline vpternlogq64 (zmm14_0, zmm7_0, zmm19_0, table);
inline vpternlogq64 (zmm14_1, zmm7_1, zmm19_1, table);
inline vpternlogq64 (zmm14_2, zmm7_2, zmm19_2, table);
inline vpternlogq64 (zmm14_3, zmm7_3, zmm19_3, table);
inline vpternlogq64 (zmm14_4, zmm7_4, zmm19_4, table);
inline vpternlogq64 (zmm14_5, zmm7_5, zmm19_5, table);
inline vpternlogq64 (zmm14_6, zmm7_6, zmm19_6, table);
inline vpternlogq64 (zmm14_7, zmm7_7, zmm19_7, table);
(* vmovdqa64 %zmm22,%zmm7                          #! PC = 0x55555558ed7b *)
mov zmm7_0 zmm22_0;
mov zmm7_1 zmm22_1;
mov zmm7_2 zmm22_2;
mov zmm7_3 zmm22_3;
mov zmm7_4 zmm22_4;
mov zmm7_5 zmm22_5;
mov zmm7_6 zmm22_6;
mov zmm7_7 zmm22_7;
(* vmovdqa64 %zmm15,%zmm19                         #! PC = 0x55555558ed81 *)
mov zmm19_0 zmm15_0;
mov zmm19_1 zmm15_1;
mov zmm19_2 zmm15_2;
mov zmm19_3 zmm15_3;
mov zmm19_4 zmm15_4;
mov zmm19_5 zmm15_5;
mov zmm19_6 zmm15_6;
mov zmm19_7 zmm15_7;
(* vpternlogq $0xd2,%zmm3,%zmm13,%zmm28            #! PC = 0x55555558ed87 *)
mov table 0xd2@uint8;
inline vpternlogq64 (zmm28_0, zmm13_0, zmm3_0, table);
inline vpternlogq64 (zmm28_1, zmm13_1, zmm3_1, table);
inline vpternlogq64 (zmm28_2, zmm13_2, zmm3_2, table);
inline vpternlogq64 (zmm28_3, zmm13_3, zmm3_3, table);
inline vpternlogq64 (zmm28_4, zmm13_4, zmm3_4, table);
inline vpternlogq64 (zmm28_5, zmm13_5, zmm3_5, table);
inline vpternlogq64 (zmm28_6, zmm13_6, zmm3_6, table);
inline vpternlogq64 (zmm28_7, zmm13_7, zmm3_7, table);
(* vpternlogq $0xd2,%zmm5,%zmm15,%zmm7             #! PC = 0x55555558ed8e *)
mov table 0xd2@uint8;
inline vpternlogq64 (zmm7_0, zmm15_0, zmm5_0, table);
inline vpternlogq64 (zmm7_1, zmm15_1, zmm5_1, table);
inline vpternlogq64 (zmm7_2, zmm15_2, zmm5_2, table);
inline vpternlogq64 (zmm7_3, zmm15_3, zmm5_3, table);
inline vpternlogq64 (zmm7_4, zmm15_4, zmm5_4, table);
inline vpternlogq64 (zmm7_5, zmm15_5, zmm5_5, table);
inline vpternlogq64 (zmm7_6, zmm15_6, zmm5_6, table);
inline vpternlogq64 (zmm7_7, zmm15_7, zmm5_7, table);
(* vpternlogq $0xd2,%zmm0,%zmm5,%zmm19             #! PC = 0x55555558ed95 *)
mov table 0xd2@uint8;
inline vpternlogq64 (zmm19_0, zmm5_0, zmm0_0, table);
inline vpternlogq64 (zmm19_1, zmm5_1, zmm0_1, table);
inline vpternlogq64 (zmm19_2, zmm5_2, zmm0_2, table);
inline vpternlogq64 (zmm19_3, zmm5_3, zmm0_3, table);
inline vpternlogq64 (zmm19_4, zmm5_4, zmm0_4, table);
inline vpternlogq64 (zmm19_5, zmm5_5, zmm0_5, table);
inline vpternlogq64 (zmm19_6, zmm5_6, zmm0_6, table);
inline vpternlogq64 (zmm19_7, zmm5_7, zmm0_7, table);
(* vpternlogq $0xd2,%zmm13,%zmm21,%zmm25           #! PC = 0x55555558ed9c *)
mov table 0xd2@uint8;
inline vpternlogq64 (zmm25_0, zmm21_0, zmm13_0, table);
inline vpternlogq64 (zmm25_1, zmm21_1, zmm13_1, table);
inline vpternlogq64 (zmm25_2, zmm21_2, zmm13_2, table);
inline vpternlogq64 (zmm25_3, zmm21_3, zmm13_3, table);
inline vpternlogq64 (zmm25_4, zmm21_4, zmm13_4, table);
inline vpternlogq64 (zmm25_5, zmm21_5, zmm13_5, table);
inline vpternlogq64 (zmm25_6, zmm21_6, zmm13_6, table);
inline vpternlogq64 (zmm25_7, zmm21_7, zmm13_7, table);
(* vpternlogq $0xd2,%zmm23,%zmm0,%zmm5             #! PC = 0x55555558eda3 *)
mov table 0xd2@uint8;
inline vpternlogq64 (zmm5_0, zmm0_0, zmm23_0, table);
inline vpternlogq64 (zmm5_1, zmm0_1, zmm23_1, table);
inline vpternlogq64 (zmm5_2, zmm0_2, zmm23_2, table);
inline vpternlogq64 (zmm5_3, zmm0_3, zmm23_3, table);
inline vpternlogq64 (zmm5_4, zmm0_4, zmm23_4, table);
inline vpternlogq64 (zmm5_5, zmm0_5, zmm23_5, table);
inline vpternlogq64 (zmm5_6, zmm0_6, zmm23_6, table);
inline vpternlogq64 (zmm5_7, zmm0_7, zmm23_7, table);
(* vpternlogq $0xd2,%zmm16,%zmm3,%zmm13            #! PC = 0x55555558edaa *)
mov table 0xd2@uint8;
inline vpternlogq64 (zmm13_0, zmm3_0, zmm16_0, table);
inline vpternlogq64 (zmm13_1, zmm3_1, zmm16_1, table);
inline vpternlogq64 (zmm13_2, zmm3_2, zmm16_2, table);
inline vpternlogq64 (zmm13_3, zmm3_3, zmm16_3, table);
inline vpternlogq64 (zmm13_4, zmm3_4, zmm16_4, table);
inline vpternlogq64 (zmm13_5, zmm3_5, zmm16_5, table);
inline vpternlogq64 (zmm13_6, zmm3_6, zmm16_6, table);
inline vpternlogq64 (zmm13_7, zmm3_7, zmm16_7, table);
(* vpternlogq $0xd2,%zmm22,%zmm23,%zmm0            #! PC = 0x55555558edb1 *)
mov table 0xd2@uint8;
inline vpternlogq64 (zmm0_0, zmm23_0, zmm22_0, table);
inline vpternlogq64 (zmm0_1, zmm23_1, zmm22_1, table);
inline vpternlogq64 (zmm0_2, zmm23_2, zmm22_2, table);
inline vpternlogq64 (zmm0_3, zmm23_3, zmm22_3, table);
inline vpternlogq64 (zmm0_4, zmm23_4, zmm22_4, table);
inline vpternlogq64 (zmm0_5, zmm23_5, zmm22_5, table);
inline vpternlogq64 (zmm0_6, zmm23_6, zmm22_6, table);
inline vpternlogq64 (zmm0_7, zmm23_7, zmm22_7, table);
(* vpternlogq $0xd2,%zmm20,%zmm16,%zmm3            #! PC = 0x55555558edb8 *)
mov table 0xd2@uint8;
inline vpternlogq64 (zmm3_0, zmm16_0, zmm20_0, table);
inline vpternlogq64 (zmm3_1, zmm16_1, zmm20_1, table);
inline vpternlogq64 (zmm3_2, zmm16_2, zmm20_2, table);
inline vpternlogq64 (zmm3_3, zmm16_3, zmm20_3, table);
inline vpternlogq64 (zmm3_4, zmm16_4, zmm20_4, table);
inline vpternlogq64 (zmm3_5, zmm16_5, zmm20_5, table);
inline vpternlogq64 (zmm3_6, zmm16_6, zmm20_6, table);
inline vpternlogq64 (zmm3_7, zmm16_7, zmm20_7, table);
(* vpternlogq $0xd2,%zmm15,%zmm22,%zmm23           #! PC = 0x55555558edbf *)
mov table 0xd2@uint8;
inline vpternlogq64 (zmm23_0, zmm22_0, zmm15_0, table);
inline vpternlogq64 (zmm23_1, zmm22_1, zmm15_1, table);
inline vpternlogq64 (zmm23_2, zmm22_2, zmm15_2, table);
inline vpternlogq64 (zmm23_3, zmm22_3, zmm15_3, table);
inline vpternlogq64 (zmm23_4, zmm22_4, zmm15_4, table);
inline vpternlogq64 (zmm23_5, zmm22_5, zmm15_5, table);
inline vpternlogq64 (zmm23_6, zmm22_6, zmm15_6, table);
inline vpternlogq64 (zmm23_7, zmm22_7, zmm15_7, table);
(* vpternlogq $0xd2,%zmm21,%zmm20,%zmm16           #! PC = 0x55555558edc6 *)
mov table 0xd2@uint8;
inline vpternlogq64 (zmm16_0, zmm20_0, zmm21_0, table);
inline vpternlogq64 (zmm16_1, zmm20_1, zmm21_1, table);
inline vpternlogq64 (zmm16_2, zmm20_2, zmm21_2, table);
inline vpternlogq64 (zmm16_3, zmm20_3, zmm21_3, table);
inline vpternlogq64 (zmm16_4, zmm20_4, zmm21_4, table);
inline vpternlogq64 (zmm16_5, zmm20_5, zmm21_5, table);
inline vpternlogq64 (zmm16_6, zmm20_6, zmm21_6, table);
inline vpternlogq64 (zmm16_7, zmm20_7, zmm21_7, table);
(* vmovdqa64 %zmm8,%zmm22                          #! PC = 0x55555558edcd *)
mov zmm22_0 zmm8_0;
mov zmm22_1 zmm8_1;
mov zmm22_2 zmm8_2;
mov zmm22_3 zmm8_3;
mov zmm22_4 zmm8_4;
mov zmm22_5 zmm8_5;
mov zmm22_6 zmm8_6;
mov zmm22_7 zmm8_7;
(* vmovdqa64 %zmm29,%zmm15                         #! PC = 0x55555558edd3 *)
mov zmm15_0 zmm29_0;
mov zmm15_1 zmm29_1;
mov zmm15_2 zmm29_2;
mov zmm15_3 zmm29_3;
mov zmm15_4 zmm29_4;
mov zmm15_5 zmm29_5;
mov zmm15_6 zmm29_6;
mov zmm15_7 zmm29_7;
(* vmovdqa64 %zmm17,%zmm20                         #! PC = 0x55555558edd9 *)
mov zmm20_0 zmm17_0;
mov zmm20_1 zmm17_1;
mov zmm20_2 zmm17_2;
mov zmm20_3 zmm17_3;
mov zmm20_4 zmm17_4;
mov zmm20_5 zmm17_5;
mov zmm20_6 zmm17_6;
mov zmm20_7 zmm17_7;
(* vpternlogq $0xd2,%zmm9,%zmm29,%zmm22            #! PC = 0x55555558eddf *)
mov table 0xd2@uint8;
inline vpternlogq64 (zmm22_0, zmm29_0, zmm9_0, table);
inline vpternlogq64 (zmm22_1, zmm29_1, zmm9_1, table);
inline vpternlogq64 (zmm22_2, zmm29_2, zmm9_2, table);
inline vpternlogq64 (zmm22_3, zmm29_3, zmm9_3, table);
inline vpternlogq64 (zmm22_4, zmm29_4, zmm9_4, table);
inline vpternlogq64 (zmm22_5, zmm29_5, zmm9_5, table);
inline vpternlogq64 (zmm22_6, zmm29_6, zmm9_6, table);
inline vpternlogq64 (zmm22_7, zmm29_7, zmm9_7, table);
(* vpternlogq $0xd2,%zmm11,%zmm9,%zmm15            #! PC = 0x55555558ede6 *)
mov table 0xd2@uint8;
inline vpternlogq64 (zmm15_0, zmm9_0, zmm11_0, table);
inline vpternlogq64 (zmm15_1, zmm9_1, zmm11_1, table);
inline vpternlogq64 (zmm15_2, zmm9_2, zmm11_2, table);
inline vpternlogq64 (zmm15_3, zmm9_3, zmm11_3, table);
inline vpternlogq64 (zmm15_4, zmm9_4, zmm11_4, table);
inline vpternlogq64 (zmm15_5, zmm9_5, zmm11_5, table);
inline vpternlogq64 (zmm15_6, zmm9_6, zmm11_6, table);
inline vpternlogq64 (zmm15_7, zmm9_7, zmm11_7, table);
(* vpternlogq $0x96,%zmm13,%zmm1,%zmm20            #! PC = 0x55555558eded *)
mov table 0x96@uint8;
inline vpternlogq64 (zmm20_0, zmm1_0, zmm13_0, table);
inline vpternlogq64 (zmm20_1, zmm1_1, zmm13_1, table);
inline vpternlogq64 (zmm20_2, zmm1_2, zmm13_2, table);
inline vpternlogq64 (zmm20_3, zmm1_3, zmm13_3, table);
inline vpternlogq64 (zmm20_4, zmm1_4, zmm13_4, table);
inline vpternlogq64 (zmm20_5, zmm1_5, zmm13_5, table);
inline vpternlogq64 (zmm20_6, zmm1_6, zmm13_6, table);
inline vpternlogq64 (zmm20_7, zmm1_7, zmm13_7, table);
(* vpternlogq $0xd2,%zmm4,%zmm11,%zmm9             #! PC = 0x55555558edf4 *)
mov table 0xd2@uint8;
inline vpternlogq64 (zmm9_0, zmm11_0, zmm4_0, table);
inline vpternlogq64 (zmm9_1, zmm11_1, zmm4_1, table);
inline vpternlogq64 (zmm9_2, zmm11_2, zmm4_2, table);
inline vpternlogq64 (zmm9_3, zmm11_3, zmm4_3, table);
inline vpternlogq64 (zmm9_4, zmm11_4, zmm4_4, table);
inline vpternlogq64 (zmm9_5, zmm11_5, zmm4_5, table);
inline vpternlogq64 (zmm9_6, zmm11_6, zmm4_6, table);
inline vpternlogq64 (zmm9_7, zmm11_7, zmm4_7, table);
(* vpternlogq $0x96,%zmm5,%zmm9,%zmm20             #! PC = 0x55555558edfb *)
mov table 0x96@uint8;
inline vpternlogq64 (zmm20_0, zmm9_0, zmm5_0, table);
inline vpternlogq64 (zmm20_1, zmm9_1, zmm5_1, table);
inline vpternlogq64 (zmm20_2, zmm9_2, zmm5_2, table);
inline vpternlogq64 (zmm20_3, zmm9_3, zmm5_3, table);
inline vpternlogq64 (zmm20_4, zmm9_4, zmm5_4, table);
inline vpternlogq64 (zmm20_5, zmm9_5, zmm5_5, table);
inline vpternlogq64 (zmm20_6, zmm9_6, zmm5_6, table);
inline vpternlogq64 (zmm20_7, zmm9_7, zmm5_7, table);
(* vpternlogq $0xd2,%zmm8,%zmm4,%zmm11             #! PC = 0x55555558ee02 *)
mov table 0xd2@uint8;
inline vpternlogq64 (zmm11_0, zmm4_0, zmm8_0, table);
inline vpternlogq64 (zmm11_1, zmm4_1, zmm8_1, table);
inline vpternlogq64 (zmm11_2, zmm4_2, zmm8_2, table);
inline vpternlogq64 (zmm11_3, zmm4_3, zmm8_3, table);
inline vpternlogq64 (zmm11_4, zmm4_4, zmm8_4, table);
inline vpternlogq64 (zmm11_5, zmm4_5, zmm8_5, table);
inline vpternlogq64 (zmm11_6, zmm4_6, zmm8_6, table);
inline vpternlogq64 (zmm11_7, zmm4_7, zmm8_7, table);
(* vpternlogq $0xd2,%zmm29,%zmm8,%zmm4             #! PC = 0x55555558ee09 *)
mov table 0xd2@uint8;
inline vpternlogq64 (zmm4_0, zmm8_0, zmm29_0, table);
inline vpternlogq64 (zmm4_1, zmm8_1, zmm29_1, table);
inline vpternlogq64 (zmm4_2, zmm8_2, zmm29_2, table);
inline vpternlogq64 (zmm4_3, zmm8_3, zmm29_3, table);
inline vpternlogq64 (zmm4_4, zmm8_4, zmm29_4, table);
inline vpternlogq64 (zmm4_5, zmm8_5, zmm29_5, table);
inline vpternlogq64 (zmm4_6, zmm8_6, zmm29_6, table);
inline vpternlogq64 (zmm4_7, zmm8_7, zmm29_7, table);
(* vprolq $0x1,%zmm20,%zmm8                        #! PC = 0x55555558ee10 *)
rol zmm8_0 zmm20_0 0x1;
rol zmm8_1 zmm20_1 0x1;
rol zmm8_2 zmm20_2 0x1;
rol zmm8_3 zmm20_3 0x1;
rol zmm8_4 zmm20_4 0x1;
rol zmm8_5 zmm20_5 0x1;
rol zmm8_6 zmm20_6 0x1;
rol zmm8_7 zmm20_7 0x1;
(* vmovdqa64 %zmm3,%zmm27                          #! PC = 0x55555558ee17 *)
mov zmm27_0 zmm3_0;
mov zmm27_1 zmm3_1;
mov zmm27_2 zmm3_2;
mov zmm27_3 zmm3_3;
mov zmm27_4 zmm3_4;
mov zmm27_5 zmm3_5;
mov zmm27_6 zmm3_6;
mov zmm27_7 zmm3_7;
(* vpternlogq $0x96,%zmm0,%zmm11,%zmm27            #! PC = 0x55555558ee1d *)
mov table 0x96@uint8;
inline vpternlogq64 (zmm27_0, zmm11_0, zmm0_0, table);
inline vpternlogq64 (zmm27_1, zmm11_1, zmm0_1, table);
inline vpternlogq64 (zmm27_2, zmm11_2, zmm0_2, table);
inline vpternlogq64 (zmm27_3, zmm11_3, zmm0_3, table);
inline vpternlogq64 (zmm27_4, zmm11_4, zmm0_4, table);
inline vpternlogq64 (zmm27_5, zmm11_5, zmm0_5, table);
inline vpternlogq64 (zmm27_6, zmm11_6, zmm0_6, table);
inline vpternlogq64 (zmm27_7, zmm11_7, zmm0_7, table);
(* vpternlogq $0x96,%zmm6,%zmm10,%zmm27            #! PC = 0x55555558ee24 *)
mov table 0x96@uint8;
inline vpternlogq64 (zmm27_0, zmm10_0, zmm6_0, table);
inline vpternlogq64 (zmm27_1, zmm10_1, zmm6_1, table);
inline vpternlogq64 (zmm27_2, zmm10_2, zmm6_2, table);
inline vpternlogq64 (zmm27_3, zmm10_3, zmm6_3, table);
inline vpternlogq64 (zmm27_4, zmm10_4, zmm6_4, table);
inline vpternlogq64 (zmm27_5, zmm10_5, zmm6_5, table);
inline vpternlogq64 (zmm27_6, zmm10_6, zmm6_6, table);
inline vpternlogq64 (zmm27_7, zmm10_7, zmm6_7, table);
(* vmovdqa64 %zmm23,%zmm21                         #! PC = 0x55555558ee2b *)
mov zmm21_0 zmm23_0;
mov zmm21_1 zmm23_1;
mov zmm21_2 zmm23_2;
mov zmm21_3 zmm23_3;
mov zmm21_4 zmm23_4;
mov zmm21_5 zmm23_5;
mov zmm21_6 zmm23_6;
mov zmm21_7 zmm23_7;
(* vpternlogq $0x96,%zmm12,%zmm14,%zmm21           #! PC = 0x55555558ee31 *)
mov table 0x96@uint8;
inline vpternlogq64 (zmm21_0, zmm14_0, zmm12_0, table);
inline vpternlogq64 (zmm21_1, zmm14_1, zmm12_1, table);
inline vpternlogq64 (zmm21_2, zmm14_2, zmm12_2, table);
inline vpternlogq64 (zmm21_3, zmm14_3, zmm12_3, table);
inline vpternlogq64 (zmm21_4, zmm14_4, zmm12_4, table);
inline vpternlogq64 (zmm21_5, zmm14_5, zmm12_5, table);
inline vpternlogq64 (zmm21_6, zmm14_6, zmm12_6, table);
inline vpternlogq64 (zmm21_7, zmm14_7, zmm12_7, table);
(* vmovdqa64 %zmm8,0x148(%rsp)                     #! EA = L0x7fffffffd600; PC = 0x55555558ee38 *)
mov L0x7fffffffd600 zmm8_0;
mov L0x7fffffffd608 zmm8_1;
mov L0x7fffffffd610 zmm8_2;
mov L0x7fffffffd618 zmm8_3;
mov L0x7fffffffd620 zmm8_4;
mov L0x7fffffffd628 zmm8_5;
mov L0x7fffffffd630 zmm8_6;
mov L0x7fffffffd638 zmm8_7;
(* vprolq $0x1,%zmm27,%zmm8                        #! PC = 0x55555558ee43 *)
rol zmm8_0 zmm27_0 0x1;
rol zmm8_1 zmm27_1 0x1;
rol zmm8_2 zmm27_2 0x1;
rol zmm8_3 zmm27_3 0x1;
rol zmm8_4 zmm27_4 0x1;
rol zmm8_5 zmm27_5 0x1;
rol zmm8_6 zmm27_6 0x1;
rol zmm8_7 zmm27_7 0x1;
(* vpternlogq $0x96,%zmm4,%zmm16,%zmm21            #! PC = 0x55555558ee4a *)
mov table 0x96@uint8;
inline vpternlogq64 (zmm21_0, zmm16_0, zmm4_0, table);
inline vpternlogq64 (zmm21_1, zmm16_1, zmm4_1, table);
inline vpternlogq64 (zmm21_2, zmm16_2, zmm4_2, table);
inline vpternlogq64 (zmm21_3, zmm16_3, zmm4_3, table);
inline vpternlogq64 (zmm21_4, zmm16_4, zmm4_4, table);
inline vpternlogq64 (zmm21_5, zmm16_5, zmm4_5, table);
inline vpternlogq64 (zmm21_6, zmm16_6, zmm4_6, table);
inline vpternlogq64 (zmm21_7, zmm16_7, zmm4_7, table);
(* vmovdqa64 %zmm24,%zmm2                          #! PC = 0x55555558ee51 *)
mov zmm2_0 zmm24_0;
mov zmm2_1 zmm24_1;
mov zmm2_2 zmm24_2;
mov zmm2_3 zmm24_3;
mov zmm2_4 zmm24_4;
mov zmm2_5 zmm24_5;
mov zmm2_6 zmm24_6;
mov zmm2_7 zmm24_7;
(* vpternlogq $0x96,%zmm22,%zmm25,%zmm2            #! PC = 0x55555558ee57 *)
mov table 0x96@uint8;
inline vpternlogq64 (zmm2_0, zmm25_0, zmm22_0, table);
inline vpternlogq64 (zmm2_1, zmm25_1, zmm22_1, table);
inline vpternlogq64 (zmm2_2, zmm25_2, zmm22_2, table);
inline vpternlogq64 (zmm2_3, zmm25_3, zmm22_3, table);
inline vpternlogq64 (zmm2_4, zmm25_4, zmm22_4, table);
inline vpternlogq64 (zmm2_5, zmm25_5, zmm22_5, table);
inline vpternlogq64 (zmm2_6, zmm25_6, zmm22_6, table);
inline vpternlogq64 (zmm2_7, zmm25_7, zmm22_7, table);
(* vpternlogq $0x96,%zmm30,%zmm7,%zmm2             #! PC = 0x55555558ee5e *)
mov table 0x96@uint8;
inline vpternlogq64 (zmm2_0, zmm7_0, zmm30_0, table);
inline vpternlogq64 (zmm2_1, zmm7_1, zmm30_1, table);
inline vpternlogq64 (zmm2_2, zmm7_2, zmm30_2, table);
inline vpternlogq64 (zmm2_3, zmm7_3, zmm30_3, table);
inline vpternlogq64 (zmm2_4, zmm7_4, zmm30_4, table);
inline vpternlogq64 (zmm2_5, zmm7_5, zmm30_5, table);
inline vpternlogq64 (zmm2_6, zmm7_6, zmm30_6, table);
inline vpternlogq64 (zmm2_7, zmm7_7, zmm30_7, table);
(* vmovdqa64 %zmm15,%zmm18                         #! PC = 0x55555558ee65 *)
mov zmm18_0 zmm15_0;
mov zmm18_1 zmm15_1;
mov zmm18_2 zmm15_2;
mov zmm18_3 zmm15_3;
mov zmm18_4 zmm15_4;
mov zmm18_5 zmm15_5;
mov zmm18_6 zmm15_6;
mov zmm18_7 zmm15_7;
(* vmovdqa64 %zmm8,0x108(%rsp)                     #! EA = L0x7fffffffd5c0; PC = 0x55555558ee6b *)
mov L0x7fffffffd5c0 zmm8_0;
mov L0x7fffffffd5c8 zmm8_1;
mov L0x7fffffffd5d0 zmm8_2;
mov L0x7fffffffd5d8 zmm8_3;
mov L0x7fffffffd5e0 zmm8_4;
mov L0x7fffffffd5e8 zmm8_5;
mov L0x7fffffffd5f0 zmm8_6;
mov L0x7fffffffd5f8 zmm8_7;
(* vprolq $0x1,%zmm21,%zmm8                        #! PC = 0x55555558ee76 *)
rol zmm8_0 zmm21_0 0x1;
rol zmm8_1 zmm21_1 0x1;
rol zmm8_2 zmm21_2 0x1;
rol zmm8_3 zmm21_3 0x1;
rol zmm8_4 zmm21_4 0x1;
rol zmm8_5 zmm21_5 0x1;
rol zmm8_6 zmm21_6 0x1;
rol zmm8_7 zmm21_7 0x1;
(* vpternlogq $0x96,%zmm31,%zmm19,%zmm18           #! PC = 0x55555558ee7d *)
mov table 0x96@uint8;
inline vpternlogq64 (zmm18_0, zmm19_0, zmm31_0, table);
inline vpternlogq64 (zmm18_1, zmm19_1, zmm31_1, table);
inline vpternlogq64 (zmm18_2, zmm19_2, zmm31_2, table);
inline vpternlogq64 (zmm18_3, zmm19_3, zmm31_3, table);
inline vpternlogq64 (zmm18_4, zmm19_4, zmm31_4, table);
inline vpternlogq64 (zmm18_5, zmm19_5, zmm31_5, table);
inline vpternlogq64 (zmm18_6, zmm19_6, zmm31_6, table);
inline vpternlogq64 (zmm18_7, zmm19_7, zmm31_7, table);
(* vpternlogq $0x96,%zmm28,%zmm26,%zmm18           #! PC = 0x55555558ee84 *)
mov table 0x96@uint8;
inline vpternlogq64 (zmm18_0, zmm26_0, zmm28_0, table);
inline vpternlogq64 (zmm18_1, zmm26_1, zmm28_1, table);
inline vpternlogq64 (zmm18_2, zmm26_2, zmm28_2, table);
inline vpternlogq64 (zmm18_3, zmm26_3, zmm28_3, table);
inline vpternlogq64 (zmm18_4, zmm26_4, zmm28_4, table);
inline vpternlogq64 (zmm18_5, zmm26_5, zmm28_5, table);
inline vpternlogq64 (zmm18_6, zmm26_6, zmm28_6, table);
inline vpternlogq64 (zmm18_7, zmm26_7, zmm28_7, table);
(* vprolq $0x1,%zmm18,%zmm29                       #! PC = 0x55555558ee8b *)
rol zmm29_0 zmm18_0 0x1;
rol zmm29_1 zmm18_1 0x1;
rol zmm29_2 zmm18_2 0x1;
rol zmm29_3 zmm18_3 0x1;
rol zmm29_4 zmm18_4 0x1;
rol zmm29_5 zmm18_5 0x1;
rol zmm29_6 zmm18_6 0x1;
rol zmm29_7 zmm18_7 0x1;
(* vpxord 0x108(%rsp),%zmm18,%zmm18                #! EA = L0x7fffffffd5c0; Value = 0x626c9402226ce67b; PC = 0x55555558ee92 *)
xor zmm18_0@uint64 zmm18_0 L0x7fffffffd5c0;
xor zmm18_1@uint64 zmm18_1 L0x7fffffffd5c8;
xor zmm18_2@uint64 zmm18_2 L0x7fffffffd5d0;
xor zmm18_3@uint64 zmm18_3 L0x7fffffffd5d8;
xor zmm18_4@uint64 zmm18_4 L0x7fffffffd5e0;
xor zmm18_5@uint64 zmm18_5 L0x7fffffffd5e8;
xor zmm18_6@uint64 zmm18_6 L0x7fffffffd5f0;
xor zmm18_7@uint64 zmm18_7 L0x7fffffffd5f8;
(* movabs $0x800000008000000a,%r11                 #! PC = 0x55555558ee9d *)
mov r11 0x800000008000000a@uint64;
(* vmovdqa64 %zmm8,0xc8(%rsp)                      #! EA = L0x7fffffffd580; PC = 0x55555558eea7 *)
mov L0x7fffffffd580 zmm8_0;
mov L0x7fffffffd588 zmm8_1;
mov L0x7fffffffd590 zmm8_2;
mov L0x7fffffffd598 zmm8_3;
mov L0x7fffffffd5a0 zmm8_4;
mov L0x7fffffffd5a8 zmm8_5;
mov L0x7fffffffd5b0 zmm8_6;
mov L0x7fffffffd5b8 zmm8_7;
(* vprolq $0x1,%zmm2,%zmm8                         #! PC = 0x55555558eeb2 *)
rol zmm8_0 zmm2_0 0x1;
rol zmm8_1 zmm2_1 0x1;
rol zmm8_2 zmm2_2 0x1;
rol zmm8_3 zmm2_3 0x1;
rol zmm8_4 zmm2_4 0x1;
rol zmm8_5 zmm2_5 0x1;
rol zmm8_6 zmm2_6 0x1;
rol zmm8_7 zmm2_7 0x1;
(* vpxord 0x148(%rsp),%zmm2,%zmm2                  #! EA = L0x7fffffffd600; Value = 0xc5217ddcb3b2b04e; PC = 0x55555558eeb9 *)
xor zmm2_0@uint64 zmm2_0 L0x7fffffffd600;
xor zmm2_1@uint64 zmm2_1 L0x7fffffffd608;
xor zmm2_2@uint64 zmm2_2 L0x7fffffffd610;
xor zmm2_3@uint64 zmm2_3 L0x7fffffffd618;
xor zmm2_4@uint64 zmm2_4 L0x7fffffffd620;
xor zmm2_5@uint64 zmm2_5 L0x7fffffffd628;
xor zmm2_6@uint64 zmm2_6 L0x7fffffffd630;
xor zmm2_7@uint64 zmm2_7 L0x7fffffffd638;
(* vpxord 0xc8(%rsp),%zmm20,%zmm20                 #! EA = L0x7fffffffd580; Value = 0x9e7442bfa4e9971c; PC = 0x55555558eec4 *)
xor zmm20_0@uint64 zmm20_0 L0x7fffffffd580;
xor zmm20_1@uint64 zmm20_1 L0x7fffffffd588;
xor zmm20_2@uint64 zmm20_2 L0x7fffffffd590;
xor zmm20_3@uint64 zmm20_3 L0x7fffffffd598;
xor zmm20_4@uint64 zmm20_4 L0x7fffffffd5a0;
xor zmm20_5@uint64 zmm20_5 L0x7fffffffd5a8;
xor zmm20_6@uint64 zmm20_6 L0x7fffffffd5b0;
xor zmm20_7@uint64 zmm20_7 L0x7fffffffd5b8;
(* vpxord %zmm31,%zmm2,%zmm31                      #! PC = 0x55555558eecf *)
xor zmm31_0@uint64 zmm2_0 zmm31_0;
xor zmm31_1@uint64 zmm2_1 zmm31_1;
xor zmm31_2@uint64 zmm2_2 zmm31_2;
xor zmm31_3@uint64 zmm2_3 zmm31_3;
xor zmm31_4@uint64 zmm2_4 zmm31_4;
xor zmm31_5@uint64 zmm2_5 zmm31_5;
xor zmm31_6@uint64 zmm2_6 zmm31_6;
xor zmm31_7@uint64 zmm2_7 zmm31_7;
(* vprorq $0x14,%zmm31,%zmm31                      #! PC = 0x55555558eed5 *)
ror zmm31_0 zmm31_0 0x14;
ror zmm31_1 zmm31_1 0x14;
ror zmm31_2 zmm31_2 0x14;
ror zmm31_3 zmm31_3 0x14;
ror zmm31_4 zmm31_4 0x14;
ror zmm31_5 zmm31_5 0x14;
ror zmm31_6 zmm31_6 0x14;
ror zmm31_7 zmm31_7 0x14;
(* vpxord %zmm5,%zmm18,%zmm5                       #! PC = 0x55555558eedc *)
xor zmm5_0@uint64 zmm18_0 zmm5_0;
xor zmm5_1@uint64 zmm18_1 zmm5_1;
xor zmm5_2@uint64 zmm18_2 zmm5_2;
xor zmm5_3@uint64 zmm18_3 zmm5_3;
xor zmm5_4@uint64 zmm18_4 zmm5_4;
xor zmm5_5@uint64 zmm18_5 zmm5_5;
xor zmm5_6@uint64 zmm18_6 zmm5_6;
xor zmm5_7@uint64 zmm18_7 zmm5_7;
(* vpxord %zmm8,%zmm27,%zmm8                       #! PC = 0x55555558eee2 *)
xor zmm8_0@uint64 zmm27_0 zmm8_0;
xor zmm8_1@uint64 zmm27_1 zmm8_1;
xor zmm8_2@uint64 zmm27_2 zmm8_2;
xor zmm8_3@uint64 zmm27_3 zmm8_3;
xor zmm8_4@uint64 zmm27_4 zmm8_4;
xor zmm8_5@uint64 zmm27_5 zmm8_5;
xor zmm8_6@uint64 zmm27_6 zmm8_6;
xor zmm8_7@uint64 zmm27_7 zmm8_7;
(* vpxord %zmm11,%zmm20,%zmm11                     #! PC = 0x55555558eee8 *)
xor zmm11_0@uint64 zmm20_0 zmm11_0;
xor zmm11_1@uint64 zmm20_1 zmm11_1;
xor zmm11_2@uint64 zmm20_2 zmm11_2;
xor zmm11_3@uint64 zmm20_3 zmm11_3;
xor zmm11_4@uint64 zmm20_4 zmm11_4;
xor zmm11_5@uint64 zmm20_5 zmm11_5;
xor zmm11_6@uint64 zmm20_6 zmm11_6;
xor zmm11_7@uint64 zmm20_7 zmm11_7;
(* vpxord %zmm16,%zmm8,%zmm16                      #! PC = 0x55555558eeee *)
xor zmm16_0@uint64 zmm8_0 zmm16_0;
xor zmm16_1@uint64 zmm8_1 zmm16_1;
xor zmm16_2@uint64 zmm8_2 zmm16_2;
xor zmm16_3@uint64 zmm8_3 zmm16_3;
xor zmm16_4@uint64 zmm8_4 zmm16_4;
xor zmm16_5@uint64 zmm8_5 zmm16_5;
xor zmm16_6@uint64 zmm8_6 zmm16_6;
xor zmm16_7@uint64 zmm8_7 zmm16_7;
(* vprorq $0x15,%zmm5,%zmm5                        #! PC = 0x55555558eef4 *)
ror zmm5_0 zmm5_0 0x15;
ror zmm5_1 zmm5_1 0x15;
ror zmm5_2 zmm5_2 0x15;
ror zmm5_3 zmm5_3 0x15;
ror zmm5_4 zmm5_4 0x15;
ror zmm5_5 zmm5_5 0x15;
ror zmm5_6 zmm5_6 0x15;
ror zmm5_7 zmm5_7 0x15;
(* vprolq $0x15,%zmm11,%zmm11                      #! PC = 0x55555558eefb *)
rol zmm11_0 zmm11_0 0x15;
rol zmm11_1 zmm11_1 0x15;
rol zmm11_2 zmm11_2 0x15;
rol zmm11_3 zmm11_3 0x15;
rol zmm11_4 zmm11_4 0x15;
rol zmm11_5 zmm11_5 0x15;
rol zmm11_6 zmm11_6 0x15;
rol zmm11_7 zmm11_7 0x15;
(* vprolq $0xe,%zmm16,%zmm16                       #! PC = 0x55555558ef02 *)
rol zmm16_0 zmm16_0 0xe;
rol zmm16_1 zmm16_1 0xe;
rol zmm16_2 zmm16_2 0xe;
rol zmm16_3 zmm16_3 0xe;
rol zmm16_4 zmm16_4 0xe;
rol zmm16_5 zmm16_5 0xe;
rol zmm16_6 zmm16_6 0xe;
rol zmm16_7 zmm16_7 0xe;
(* vpxord %zmm29,%zmm21,%zmm21                     #! PC = 0x55555558ef09 *)
xor zmm21_0@uint64 zmm21_0 zmm29_0;
xor zmm21_1@uint64 zmm21_1 zmm29_1;
xor zmm21_2@uint64 zmm21_2 zmm29_2;
xor zmm21_3@uint64 zmm21_3 zmm29_3;
xor zmm21_4@uint64 zmm21_4 zmm29_4;
xor zmm21_5@uint64 zmm21_5 zmm29_5;
xor zmm21_6@uint64 zmm21_6 zmm29_6;
xor zmm21_7@uint64 zmm21_7 zmm29_7;
(* vpxord %zmm6,%zmm20,%zmm6                       #! PC = 0x55555558ef0f *)
xor zmm6_0@uint64 zmm20_0 zmm6_0;
xor zmm6_1@uint64 zmm20_1 zmm6_1;
xor zmm6_2@uint64 zmm20_2 zmm6_2;
xor zmm6_3@uint64 zmm20_3 zmm6_3;
xor zmm6_4@uint64 zmm20_4 zmm6_4;
xor zmm6_5@uint64 zmm20_5 zmm6_5;
xor zmm6_6@uint64 zmm20_6 zmm6_6;
xor zmm6_7@uint64 zmm20_7 zmm6_7;
(* vpxord %zmm14,%zmm8,%zmm14                      #! PC = 0x55555558ef15 *)
xor zmm14_0@uint64 zmm8_0 zmm14_0;
xor zmm14_1@uint64 zmm8_1 zmm14_1;
xor zmm14_2@uint64 zmm8_2 zmm14_2;
xor zmm14_3@uint64 zmm8_3 zmm14_3;
xor zmm14_4@uint64 zmm8_4 zmm14_4;
xor zmm14_5@uint64 zmm8_5 zmm14_5;
xor zmm14_6@uint64 zmm8_6 zmm14_6;
xor zmm14_7@uint64 zmm8_7 zmm14_7;
(* vprolq $0x1c,%zmm6,%zmm6                        #! PC = 0x55555558ef1b *)
rol zmm6_0 zmm6_0 0x1c;
rol zmm6_1 zmm6_1 0x1c;
rol zmm6_2 zmm6_2 0x1c;
rol zmm6_3 zmm6_3 0x1c;
rol zmm6_4 zmm6_4 0x1c;
rol zmm6_5 zmm6_5 0x1c;
rol zmm6_6 zmm6_6 0x1c;
rol zmm6_7 zmm6_7 0x1c;
(* vprolq $0x14,%zmm14,%zmm14                      #! PC = 0x55555558ef22 *)
rol zmm14_0 zmm14_0 0x14;
rol zmm14_1 zmm14_1 0x14;
rol zmm14_2 zmm14_2 0x14;
rol zmm14_3 zmm14_3 0x14;
rol zmm14_4 zmm14_4 0x14;
rol zmm14_5 zmm14_5 0x14;
rol zmm14_6 zmm14_6 0x14;
rol zmm14_7 zmm14_7 0x14;
(* vpxord %zmm7,%zmm21,%zmm7                       #! PC = 0x55555558ef29 *)
xor zmm7_0@uint64 zmm21_0 zmm7_0;
xor zmm7_1@uint64 zmm21_1 zmm7_1;
xor zmm7_2@uint64 zmm21_2 zmm7_2;
xor zmm7_3@uint64 zmm21_3 zmm7_3;
xor zmm7_4@uint64 zmm21_4 zmm7_4;
xor zmm7_5@uint64 zmm21_5 zmm7_5;
xor zmm7_6@uint64 zmm21_6 zmm7_6;
xor zmm7_7@uint64 zmm21_7 zmm7_7;
(* vpxord %zmm15,%zmm2,%zmm15                      #! PC = 0x55555558ef2f *)
xor zmm15_0@uint64 zmm2_0 zmm15_0;
xor zmm15_1@uint64 zmm2_1 zmm15_1;
xor zmm15_2@uint64 zmm2_2 zmm15_2;
xor zmm15_3@uint64 zmm2_3 zmm15_3;
xor zmm15_4@uint64 zmm2_4 zmm15_4;
xor zmm15_5@uint64 zmm2_5 zmm15_5;
xor zmm15_6@uint64 zmm2_6 zmm15_6;
xor zmm15_7@uint64 zmm2_7 zmm15_7;
(* vpxord %zmm13,%zmm18,%zmm13                     #! PC = 0x55555558ef35 *)
xor zmm13_0@uint64 zmm18_0 zmm13_0;
xor zmm13_1@uint64 zmm18_1 zmm13_1;
xor zmm13_2@uint64 zmm18_2 zmm13_2;
xor zmm13_3@uint64 zmm18_3 zmm13_3;
xor zmm13_4@uint64 zmm18_4 zmm13_4;
xor zmm13_5@uint64 zmm18_5 zmm13_5;
xor zmm13_6@uint64 zmm18_6 zmm13_6;
xor zmm13_7@uint64 zmm18_7 zmm13_7;
(* vpxord %zmm26,%zmm2,%zmm26                      #! PC = 0x55555558ef3b *)
xor zmm26_0@uint64 zmm2_0 zmm26_0;
xor zmm26_1@uint64 zmm2_1 zmm26_1;
xor zmm26_2@uint64 zmm2_2 zmm26_2;
xor zmm26_3@uint64 zmm2_3 zmm26_3;
xor zmm26_4@uint64 zmm2_4 zmm26_4;
xor zmm26_5@uint64 zmm2_5 zmm26_5;
xor zmm26_6@uint64 zmm2_6 zmm26_6;
xor zmm26_7@uint64 zmm2_7 zmm26_7;
(* vpxord %zmm17,%zmm18,%zmm17                     #! PC = 0x55555558ef41 *)
xor zmm17_0@uint64 zmm18_0 zmm17_0;
xor zmm17_1@uint64 zmm18_1 zmm17_1;
xor zmm17_2@uint64 zmm18_2 zmm17_2;
xor zmm17_3@uint64 zmm18_3 zmm17_3;
xor zmm17_4@uint64 zmm18_4 zmm17_4;
xor zmm17_5@uint64 zmm18_5 zmm17_5;
xor zmm17_6@uint64 zmm18_6 zmm17_6;
xor zmm17_7@uint64 zmm18_7 zmm17_7;
(* vprolq $0x1,%zmm26,%zmm26                       #! PC = 0x55555558ef47 *)
rol zmm26_0 zmm26_0 0x1;
rol zmm26_1 zmm26_1 0x1;
rol zmm26_2 zmm26_2 0x1;
rol zmm26_3 zmm26_3 0x1;
rol zmm26_4 zmm26_4 0x1;
rol zmm26_5 zmm26_5 0x1;
rol zmm26_6 zmm26_6 0x1;
rol zmm26_7 zmm26_7 0x1;
(* vprolq $0x6,%zmm17,%zmm17                       #! PC = 0x55555558ef4e *)
rol zmm17_0 zmm17_0 0x6;
rol zmm17_1 zmm17_1 0x6;
rol zmm17_2 zmm17_2 0x6;
rol zmm17_3 zmm17_3 0x6;
rol zmm17_4 zmm17_4 0x6;
rol zmm17_5 zmm17_5 0x6;
rol zmm17_6 zmm17_6 0x6;
rol zmm17_7 zmm17_7 0x6;
(* vprolq $0x3,%zmm7,%zmm7                         #! PC = 0x55555558ef55 *)
rol zmm7_0 zmm7_0 0x3;
rol zmm7_1 zmm7_1 0x3;
rol zmm7_2 zmm7_2 0x3;
rol zmm7_3 zmm7_3 0x3;
rol zmm7_4 zmm7_4 0x3;
rol zmm7_5 zmm7_5 0x3;
rol zmm7_6 zmm7_6 0x3;
rol zmm7_7 zmm7_7 0x3;
(* vprorq $0x13,%zmm15,%zmm15                      #! PC = 0x55555558ef5c *)
ror zmm15_0 zmm15_0 0x13;
ror zmm15_1 zmm15_1 0x13;
ror zmm15_2 zmm15_2 0x13;
ror zmm15_3 zmm15_3 0x13;
ror zmm15_4 zmm15_4 0x13;
ror zmm15_5 zmm15_5 0x13;
ror zmm15_6 zmm15_6 0x13;
ror zmm15_7 zmm15_7 0x13;
(* vprorq $0x3,%zmm13,%zmm13                       #! PC = 0x55555558ef63 *)
ror zmm13_0 zmm13_0 0x3;
ror zmm13_1 zmm13_1 0x3;
ror zmm13_2 zmm13_2 0x3;
ror zmm13_3 zmm13_3 0x3;
ror zmm13_4 zmm13_4 0x3;
ror zmm13_5 zmm13_5 0x3;
ror zmm13_6 zmm13_6 0x3;
ror zmm13_7 zmm13_7 0x3;
(* vpxord %zmm25,%zmm21,%zmm25                     #! PC = 0x55555558ef6a *)
xor zmm25_0@uint64 zmm21_0 zmm25_0;
xor zmm25_1@uint64 zmm21_1 zmm25_1;
xor zmm25_2@uint64 zmm21_2 zmm25_2;
xor zmm25_3@uint64 zmm21_3 zmm25_3;
xor zmm25_4@uint64 zmm21_4 zmm25_4;
xor zmm25_5@uint64 zmm21_5 zmm25_5;
xor zmm25_6@uint64 zmm21_6 zmm25_6;
xor zmm25_7@uint64 zmm21_7 zmm25_7;
(* vpxord %zmm0,%zmm20,%zmm0                       #! PC = 0x55555558ef70 *)
xor zmm0_0@uint64 zmm20_0 zmm0_0;
xor zmm0_1@uint64 zmm20_1 zmm0_1;
xor zmm0_2@uint64 zmm20_2 zmm0_2;
xor zmm0_3@uint64 zmm20_3 zmm0_3;
xor zmm0_4@uint64 zmm20_4 zmm0_4;
xor zmm0_5@uint64 zmm20_5 zmm0_5;
xor zmm0_6@uint64 zmm20_6 zmm0_6;
xor zmm0_7@uint64 zmm20_7 zmm0_7;
(* vpxord %zmm4,%zmm8,%zmm4                        #! PC = 0x55555558ef76 *)
xor zmm4_0@uint64 zmm8_0 zmm4_0;
xor zmm4_1@uint64 zmm8_1 zmm4_1;
xor zmm4_2@uint64 zmm8_2 zmm4_2;
xor zmm4_3@uint64 zmm8_3 zmm4_3;
xor zmm4_4@uint64 zmm8_4 zmm4_4;
xor zmm4_5@uint64 zmm8_5 zmm4_5;
xor zmm4_6@uint64 zmm8_6 zmm4_6;
xor zmm4_7@uint64 zmm8_7 zmm4_7;
(* vpxord %zmm30,%zmm21,%zmm30                     #! PC = 0x55555558ef7c *)
xor zmm30_0@uint64 zmm21_0 zmm30_0;
xor zmm30_1@uint64 zmm21_1 zmm30_1;
xor zmm30_2@uint64 zmm21_2 zmm30_2;
xor zmm30_3@uint64 zmm21_3 zmm30_3;
xor zmm30_4@uint64 zmm21_4 zmm30_4;
xor zmm30_5@uint64 zmm21_5 zmm30_5;
xor zmm30_6@uint64 zmm21_6 zmm30_6;
xor zmm30_7@uint64 zmm21_7 zmm30_7;
(* vpxord %zmm19,%zmm2,%zmm19                      #! PC = 0x55555558ef82 *)
xor zmm19_0@uint64 zmm2_0 zmm19_0;
xor zmm19_1@uint64 zmm2_1 zmm19_1;
xor zmm19_2@uint64 zmm2_2 zmm19_2;
xor zmm19_3@uint64 zmm2_3 zmm19_3;
xor zmm19_4@uint64 zmm2_4 zmm19_4;
xor zmm19_5@uint64 zmm2_5 zmm19_5;
xor zmm19_6@uint64 zmm2_6 zmm19_6;
xor zmm19_7@uint64 zmm2_7 zmm19_7;
(* vpxord %zmm9,%zmm18,%zmm9                       #! PC = 0x55555558ef88 *)
xor zmm9_0@uint64 zmm18_0 zmm9_0;
xor zmm9_1@uint64 zmm18_1 zmm9_1;
xor zmm9_2@uint64 zmm18_2 zmm9_2;
xor zmm9_3@uint64 zmm18_3 zmm9_3;
xor zmm9_4@uint64 zmm18_4 zmm9_4;
xor zmm9_5@uint64 zmm18_5 zmm9_5;
xor zmm9_6@uint64 zmm18_6 zmm9_6;
xor zmm9_7@uint64 zmm18_7 zmm9_7;
(* vpxord %zmm3,%zmm20,%zmm3                       #! PC = 0x55555558ef8e *)
xor zmm3_0@uint64 zmm20_0 zmm3_0;
xor zmm3_1@uint64 zmm20_1 zmm3_1;
xor zmm3_2@uint64 zmm20_2 zmm3_2;
xor zmm3_3@uint64 zmm20_3 zmm3_3;
xor zmm3_4@uint64 zmm20_4 zmm3_4;
xor zmm3_5@uint64 zmm20_5 zmm3_5;
xor zmm3_6@uint64 zmm20_6 zmm3_6;
xor zmm3_7@uint64 zmm20_7 zmm3_7;
(* vpxord %zmm12,%zmm8,%zmm12                      #! PC = 0x55555558ef94 *)
xor zmm12_0@uint64 zmm8_0 zmm12_0;
xor zmm12_1@uint64 zmm8_1 zmm12_1;
xor zmm12_2@uint64 zmm8_2 zmm12_2;
xor zmm12_3@uint64 zmm8_3 zmm12_3;
xor zmm12_4@uint64 zmm8_4 zmm12_4;
xor zmm12_5@uint64 zmm8_5 zmm12_5;
xor zmm12_6@uint64 zmm8_6 zmm12_6;
xor zmm12_7@uint64 zmm8_7 zmm12_7;
(* vpxord %zmm1,%zmm18,%zmm18                      #! PC = 0x55555558ef9a *)
xor zmm18_0@uint64 zmm18_0 zmm1_0;
xor zmm18_1@uint64 zmm18_1 zmm1_1;
xor zmm18_2@uint64 zmm18_2 zmm1_2;
xor zmm18_3@uint64 zmm18_3 zmm1_3;
xor zmm18_4@uint64 zmm18_4 zmm1_4;
xor zmm18_5@uint64 zmm18_5 zmm1_5;
xor zmm18_6@uint64 zmm18_6 zmm1_6;
xor zmm18_7@uint64 zmm18_7 zmm1_7;
(* vpxord %zmm10,%zmm20,%zmm20                     #! PC = 0x55555558efa0 *)
xor zmm20_0@uint64 zmm20_0 zmm10_0;
xor zmm20_1@uint64 zmm20_1 zmm10_1;
xor zmm20_2@uint64 zmm20_2 zmm10_2;
xor zmm20_3@uint64 zmm20_3 zmm10_3;
xor zmm20_4@uint64 zmm20_4 zmm10_4;
xor zmm20_5@uint64 zmm20_5 zmm10_5;
xor zmm20_6@uint64 zmm20_6 zmm10_6;
xor zmm20_7@uint64 zmm20_7 zmm10_7;
(* vpxord %zmm21,%zmm24,%zmm24                     #! PC = 0x55555558efa6 *)
xor zmm24_0@uint64 zmm24_0 zmm21_0;
xor zmm24_1@uint64 zmm24_1 zmm21_1;
xor zmm24_2@uint64 zmm24_2 zmm21_2;
xor zmm24_3@uint64 zmm24_3 zmm21_3;
xor zmm24_4@uint64 zmm24_4 zmm21_4;
xor zmm24_5@uint64 zmm24_5 zmm21_5;
xor zmm24_6@uint64 zmm24_6 zmm21_6;
xor zmm24_7@uint64 zmm24_7 zmm21_7;
(* vprorq $0x1c,%zmm30,%zmm30                      #! PC = 0x55555558efac *)
ror zmm30_0 zmm30_0 0x1c;
ror zmm30_1 zmm30_1 0x1c;
ror zmm30_2 zmm30_2 0x1c;
ror zmm30_3 zmm30_3 0x1c;
ror zmm30_4 zmm30_4 0x1c;
ror zmm30_5 zmm30_5 0x1c;
ror zmm30_6 zmm30_6 0x1c;
ror zmm30_7 zmm30_7 0x1c;
(* vprolq $0xa,%zmm19,%zmm19                       #! PC = 0x55555558efb3 *)
rol zmm19_0 zmm19_0 0xa;
rol zmm19_1 zmm19_1 0xa;
rol zmm19_2 zmm19_2 0xa;
rol zmm19_3 zmm19_3 0xa;
rol zmm19_4 zmm19_4 0xa;
rol zmm19_5 zmm19_5 0xa;
rol zmm19_6 zmm19_6 0xa;
rol zmm19_7 zmm19_7 0xa;
(* vprolq $0x1b,%zmm12,%zmm12                      #! PC = 0x55555558efba *)
rol zmm12_0 zmm12_0 0x1b;
rol zmm12_1 zmm12_1 0x1b;
rol zmm12_2 zmm12_2 0x1b;
rol zmm12_3 zmm12_3 0x1b;
rol zmm12_4 zmm12_4 0x1b;
rol zmm12_5 zmm12_5 0x1b;
rol zmm12_6 zmm12_6 0x1b;
rol zmm12_7 zmm12_7 0x1b;
(* vprorq $0x2,%zmm18,%zmm18                       #! PC = 0x55555558efc1 *)
ror zmm18_0 zmm18_0 0x2;
ror zmm18_1 zmm18_1 0x2;
ror zmm18_2 zmm18_2 0x2;
ror zmm18_3 zmm18_3 0x2;
ror zmm18_4 zmm18_4 0x2;
ror zmm18_5 zmm18_5 0x2;
ror zmm18_6 zmm18_6 0x2;
ror zmm18_7 zmm18_7 0x2;
(* vprorq $0x9,%zmm20,%zmm20                       #! PC = 0x55555558efc8 *)
ror zmm20_0 zmm20_0 0x9;
ror zmm20_1 zmm20_1 0x9;
ror zmm20_2 zmm20_2 0x9;
ror zmm20_3 zmm20_3 0x9;
ror zmm20_4 zmm20_4 0x9;
ror zmm20_5 zmm20_5 0x9;
ror zmm20_6 zmm20_6 0x9;
ror zmm20_7 zmm20_7 0x9;
(* vprolq $0x12,%zmm25,%zmm25                      #! PC = 0x55555558efcf *)
rol zmm25_0 zmm25_0 0x12;
rol zmm25_1 zmm25_1 0x12;
rol zmm25_2 zmm25_2 0x12;
rol zmm25_3 zmm25_3 0x12;
rol zmm25_4 zmm25_4 0x12;
rol zmm25_5 zmm25_5 0x12;
rol zmm25_6 zmm25_6 0x12;
rol zmm25_7 zmm25_7 0x12;
(* vprolq $0x19,%zmm0,%zmm0                        #! PC = 0x55555558efd6 *)
rol zmm0_0 zmm0_0 0x19;
rol zmm0_1 zmm0_1 0x19;
rol zmm0_2 zmm0_2 0x19;
rol zmm0_3 zmm0_3 0x19;
rol zmm0_4 zmm0_4 0x19;
rol zmm0_5 zmm0_5 0x19;
rol zmm0_6 zmm0_6 0x19;
rol zmm0_7 zmm0_7 0x19;
(* vprolq $0x8,%zmm4,%zmm4                         #! PC = 0x55555558efdd *)
rol zmm4_0 zmm4_0 0x8;
rol zmm4_1 zmm4_1 0x8;
rol zmm4_2 zmm4_2 0x8;
rol zmm4_3 zmm4_3 0x8;
rol zmm4_4 zmm4_4 0x8;
rol zmm4_5 zmm4_5 0x8;
rol zmm4_6 zmm4_6 0x8;
rol zmm4_7 zmm4_7 0x8;
(* vpxord %zmm22,%zmm21,%zmm21                     #! PC = 0x55555558efe4 *)
xor zmm21_0@uint64 zmm21_0 zmm22_0;
xor zmm21_1@uint64 zmm21_1 zmm22_1;
xor zmm21_2@uint64 zmm21_2 zmm22_2;
xor zmm21_3@uint64 zmm21_3 zmm22_3;
xor zmm21_4@uint64 zmm21_4 zmm22_4;
xor zmm21_5@uint64 zmm21_5 zmm22_5;
xor zmm21_6@uint64 zmm21_6 zmm22_6;
xor zmm21_7@uint64 zmm21_7 zmm22_7;
(* vpxord %zmm28,%zmm2,%zmm2                       #! PC = 0x55555558efea *)
xor zmm2_0@uint64 zmm2_0 zmm28_0;
xor zmm2_1@uint64 zmm2_1 zmm28_1;
xor zmm2_2@uint64 zmm2_2 zmm28_2;
xor zmm2_3@uint64 zmm2_3 zmm28_3;
xor zmm2_4@uint64 zmm2_4 zmm28_4;
xor zmm2_5@uint64 zmm2_5 zmm28_5;
xor zmm2_6@uint64 zmm2_6 zmm28_6;
xor zmm2_7@uint64 zmm2_7 zmm28_7;
(* vpxord %zmm23,%zmm8,%zmm8                       #! PC = 0x55555558eff0 *)
xor zmm8_0@uint64 zmm8_0 zmm23_0;
xor zmm8_1@uint64 zmm8_1 zmm23_1;
xor zmm8_2@uint64 zmm8_2 zmm23_2;
xor zmm8_3@uint64 zmm8_3 zmm23_3;
xor zmm8_4@uint64 zmm8_4 zmm23_4;
xor zmm8_5@uint64 zmm8_5 zmm23_5;
xor zmm8_6@uint64 zmm8_6 zmm23_6;
xor zmm8_7@uint64 zmm8_7 zmm23_7;
(* vprolq $0xf,%zmm9,%zmm9                         #! PC = 0x55555558eff6 *)
rol zmm9_0 zmm9_0 0xf;
rol zmm9_1 zmm9_1 0xf;
rol zmm9_2 zmm9_2 0xf;
rol zmm9_3 zmm9_3 0xf;
rol zmm9_4 zmm9_4 0xf;
rol zmm9_5 zmm9_5 0xf;
rol zmm9_6 zmm9_6 0xf;
rol zmm9_7 zmm9_7 0xf;
(* vprorq $0x8,%zmm3,%zmm3                         #! PC = 0x55555558effd *)
ror zmm3_0 zmm3_0 0x8;
ror zmm3_1 zmm3_1 0x8;
ror zmm3_2 zmm3_2 0x8;
ror zmm3_3 zmm3_3 0x8;
ror zmm3_4 zmm3_4 0x8;
ror zmm3_5 zmm3_5 0x8;
ror zmm3_6 zmm3_6 0x8;
ror zmm3_7 zmm3_7 0x8;
(* vprorq $0x17,%zmm21,%zmm21                      #! PC = 0x55555558f004 *)
ror zmm21_0 zmm21_0 0x17;
ror zmm21_1 zmm21_1 0x17;
ror zmm21_2 zmm21_2 0x17;
ror zmm21_3 zmm21_3 0x17;
ror zmm21_4 zmm21_4 0x17;
ror zmm21_5 zmm21_5 0x17;
ror zmm21_6 zmm21_6 0x17;
ror zmm21_7 zmm21_7 0x17;
(* vprolq $0x2,%zmm2,%zmm2                         #! PC = 0x55555558f00b *)
rol zmm2_0 zmm2_0 0x2;
rol zmm2_1 zmm2_1 0x2;
rol zmm2_2 zmm2_2 0x2;
rol zmm2_3 zmm2_3 0x2;
rol zmm2_4 zmm2_4 0x2;
rol zmm2_5 zmm2_5 0x2;
rol zmm2_6 zmm2_6 0x2;
rol zmm2_7 zmm2_7 0x2;
(* vprorq $0x19,%zmm8,%zmm8                        #! PC = 0x55555558f012 *)
ror zmm8_0 zmm8_0 0x19;
ror zmm8_1 zmm8_1 0x19;
ror zmm8_2 zmm8_2 0x19;
ror zmm8_3 zmm8_3 0x19;
ror zmm8_4 zmm8_4 0x19;
ror zmm8_5 zmm8_5 0x19;
ror zmm8_6 zmm8_6 0x19;
ror zmm8_7 zmm8_7 0x19;
(* vmovdqa64 %zmm24,%zmm29                         #! PC = 0x55555558f019 *)
mov zmm29_0 zmm24_0;
mov zmm29_1 zmm24_1;
mov zmm29_2 zmm24_2;
mov zmm29_3 zmm24_3;
mov zmm29_4 zmm24_4;
mov zmm29_5 zmm24_5;
mov zmm29_6 zmm24_6;
mov zmm29_7 zmm24_7;
(* vmovdqa64 %zmm31,%zmm27                         #! PC = 0x55555558f01f *)
mov zmm27_0 zmm31_0;
mov zmm27_1 zmm31_1;
mov zmm27_2 zmm31_2;
mov zmm27_3 zmm31_3;
mov zmm27_4 zmm31_4;
mov zmm27_5 zmm31_5;
mov zmm27_6 zmm31_6;
mov zmm27_7 zmm31_7;
(* vpternlogq $0xd2,%zmm5,%zmm31,%zmm29            #! PC = 0x55555558f025 *)
mov table 0xd2@uint8;
inline vpternlogq64 (zmm29_0, zmm31_0, zmm5_0, table);
inline vpternlogq64 (zmm29_1, zmm31_1, zmm5_1, table);
inline vpternlogq64 (zmm29_2, zmm31_2, zmm5_2, table);
inline vpternlogq64 (zmm29_3, zmm31_3, zmm5_3, table);
inline vpternlogq64 (zmm29_4, zmm31_4, zmm5_4, table);
inline vpternlogq64 (zmm29_5, zmm31_5, zmm5_5, table);
inline vpternlogq64 (zmm29_6, zmm31_6, zmm5_6, table);
inline vpternlogq64 (zmm29_7, zmm31_7, zmm5_7, table);
(* vpternlogq $0xd2,%zmm11,%zmm5,%zmm27            #! PC = 0x55555558f02c *)
mov table 0xd2@uint8;
inline vpternlogq64 (zmm27_0, zmm5_0, zmm11_0, table);
inline vpternlogq64 (zmm27_1, zmm5_1, zmm11_1, table);
inline vpternlogq64 (zmm27_2, zmm5_2, zmm11_2, table);
inline vpternlogq64 (zmm27_3, zmm5_3, zmm11_3, table);
inline vpternlogq64 (zmm27_4, zmm5_4, zmm11_4, table);
inline vpternlogq64 (zmm27_5, zmm5_5, zmm11_5, table);
inline vpternlogq64 (zmm27_6, zmm5_6, zmm11_6, table);
inline vpternlogq64 (zmm27_7, zmm5_7, zmm11_7, table);
(* vpternlogq $0xd2,%zmm16,%zmm11,%zmm5            #! PC = 0x55555558f033 *)
mov table 0xd2@uint8;
inline vpternlogq64 (zmm5_0, zmm11_0, zmm16_0, table);
inline vpternlogq64 (zmm5_1, zmm11_1, zmm16_1, table);
inline vpternlogq64 (zmm5_2, zmm11_2, zmm16_2, table);
inline vpternlogq64 (zmm5_3, zmm11_3, zmm16_3, table);
inline vpternlogq64 (zmm5_4, zmm11_4, zmm16_4, table);
inline vpternlogq64 (zmm5_5, zmm11_5, zmm16_5, table);
inline vpternlogq64 (zmm5_6, zmm11_6, zmm16_6, table);
inline vpternlogq64 (zmm5_7, zmm11_7, zmm16_7, table);
(* vpternlogq $0xd2,%zmm24,%zmm16,%zmm11           #! PC = 0x55555558f03a *)
mov table 0xd2@uint8;
inline vpternlogq64 (zmm11_0, zmm16_0, zmm24_0, table);
inline vpternlogq64 (zmm11_1, zmm16_1, zmm24_1, table);
inline vpternlogq64 (zmm11_2, zmm16_2, zmm24_2, table);
inline vpternlogq64 (zmm11_3, zmm16_3, zmm24_3, table);
inline vpternlogq64 (zmm11_4, zmm16_4, zmm24_4, table);
inline vpternlogq64 (zmm11_5, zmm16_5, zmm24_5, table);
inline vpternlogq64 (zmm11_6, zmm16_6, zmm24_6, table);
inline vpternlogq64 (zmm11_7, zmm16_7, zmm24_7, table);
(* vpternlogq $0xd2,%zmm31,%zmm24,%zmm16           #! PC = 0x55555558f041 *)
mov table 0xd2@uint8;
inline vpternlogq64 (zmm16_0, zmm24_0, zmm31_0, table);
inline vpternlogq64 (zmm16_1, zmm24_1, zmm31_1, table);
inline vpternlogq64 (zmm16_2, zmm24_2, zmm31_2, table);
inline vpternlogq64 (zmm16_3, zmm24_3, zmm31_3, table);
inline vpternlogq64 (zmm16_4, zmm24_4, zmm31_4, table);
inline vpternlogq64 (zmm16_5, zmm24_5, zmm31_5, table);
inline vpternlogq64 (zmm16_6, zmm24_6, zmm31_6, table);
inline vpternlogq64 (zmm16_7, zmm24_7, zmm31_7, table);
(* vmovdqa64 %zmm16,%zmm24                         #! PC = 0x55555558f048 *)
mov zmm24_0 zmm16_0;
mov zmm24_1 zmm16_1;
mov zmm24_2 zmm16_2;
mov zmm24_3 zmm16_3;
mov zmm24_4 zmm16_4;
mov zmm24_5 zmm16_5;
mov zmm24_6 zmm16_6;
mov zmm24_7 zmm16_7;
(* vpbroadcastq %r13,%zmm16                        #! PC = 0x55555558f04e *)
mov zmm16_0 r13;
mov zmm16_1 r13;
mov zmm16_2 r13;
mov zmm16_3 r13;
mov zmm16_4 r13;
mov zmm16_5 r13;
mov zmm16_6 r13;
mov zmm16_7 r13;
(* vmovdqa64 %zmm5,0x88(%rsp)                      #! EA = L0x7fffffffd540; PC = 0x55555558f054 *)
mov L0x7fffffffd540 zmm5_0;
mov L0x7fffffffd548 zmm5_1;
mov L0x7fffffffd550 zmm5_2;
mov L0x7fffffffd558 zmm5_3;
mov L0x7fffffffd560 zmm5_4;
mov L0x7fffffffd568 zmm5_5;
mov L0x7fffffffd570 zmm5_6;
mov L0x7fffffffd578 zmm5_7;
(* vpxord %zmm29,%zmm16,%zmm16                     #! PC = 0x55555558f05f *)
xor zmm16_0@uint64 zmm16_0 zmm29_0;
xor zmm16_1@uint64 zmm16_1 zmm29_1;
xor zmm16_2@uint64 zmm16_2 zmm29_2;
xor zmm16_3@uint64 zmm16_3 zmm29_3;
xor zmm16_4@uint64 zmm16_4 zmm29_4;
xor zmm16_5@uint64 zmm16_5 zmm29_5;
xor zmm16_6@uint64 zmm16_6 zmm29_6;
xor zmm16_7@uint64 zmm16_7 zmm29_7;
(* vmovdqa64 %zmm6,%zmm5                           #! PC = 0x55555558f065 *)
mov zmm5_0 zmm6_0;
mov zmm5_1 zmm6_1;
mov zmm5_2 zmm6_2;
mov zmm5_3 zmm6_3;
mov zmm5_4 zmm6_4;
mov zmm5_5 zmm6_5;
mov zmm5_6 zmm6_6;
mov zmm5_7 zmm6_7;
(* vmovdqa64 %zmm14,%zmm29                         #! PC = 0x55555558f06b *)
mov zmm29_0 zmm14_0;
mov zmm29_1 zmm14_1;
mov zmm29_2 zmm14_2;
mov zmm29_3 zmm14_3;
mov zmm29_4 zmm14_4;
mov zmm29_5 zmm14_5;
mov zmm29_6 zmm14_6;
mov zmm29_7 zmm14_7;
(* vpternlogq $0xd2,%zmm7,%zmm14,%zmm5             #! PC = 0x55555558f071 *)
mov table 0xd2@uint8;
inline vpternlogq64 (zmm5_0, zmm14_0, zmm7_0, table);
inline vpternlogq64 (zmm5_1, zmm14_1, zmm7_1, table);
inline vpternlogq64 (zmm5_2, zmm14_2, zmm7_2, table);
inline vpternlogq64 (zmm5_3, zmm14_3, zmm7_3, table);
inline vpternlogq64 (zmm5_4, zmm14_4, zmm7_4, table);
inline vpternlogq64 (zmm5_5, zmm14_5, zmm7_5, table);
inline vpternlogq64 (zmm5_6, zmm14_6, zmm7_6, table);
inline vpternlogq64 (zmm5_7, zmm14_7, zmm7_7, table);
(* vpternlogq $0xd2,%zmm15,%zmm7,%zmm29            #! PC = 0x55555558f078 *)
mov table 0xd2@uint8;
inline vpternlogq64 (zmm29_0, zmm7_0, zmm15_0, table);
inline vpternlogq64 (zmm29_1, zmm7_1, zmm15_1, table);
inline vpternlogq64 (zmm29_2, zmm7_2, zmm15_2, table);
inline vpternlogq64 (zmm29_3, zmm7_3, zmm15_3, table);
inline vpternlogq64 (zmm29_4, zmm7_4, zmm15_4, table);
inline vpternlogq64 (zmm29_5, zmm7_5, zmm15_5, table);
inline vpternlogq64 (zmm29_6, zmm7_6, zmm15_6, table);
inline vpternlogq64 (zmm29_7, zmm7_7, zmm15_7, table);
(* vmovdqa64 %zmm26,%zmm31                         #! PC = 0x55555558f07f *)
mov zmm31_0 zmm26_0;
mov zmm31_1 zmm26_1;
mov zmm31_2 zmm26_2;
mov zmm31_3 zmm26_3;
mov zmm31_4 zmm26_4;
mov zmm31_5 zmm26_5;
mov zmm31_6 zmm26_6;
mov zmm31_7 zmm26_7;
(* vpternlogq $0xd2,%zmm13,%zmm15,%zmm7            #! PC = 0x55555558f085 *)
mov table 0xd2@uint8;
inline vpternlogq64 (zmm7_0, zmm15_0, zmm13_0, table);
inline vpternlogq64 (zmm7_1, zmm15_1, zmm13_1, table);
inline vpternlogq64 (zmm7_2, zmm15_2, zmm13_2, table);
inline vpternlogq64 (zmm7_3, zmm15_3, zmm13_3, table);
inline vpternlogq64 (zmm7_4, zmm15_4, zmm13_4, table);
inline vpternlogq64 (zmm7_5, zmm15_5, zmm13_5, table);
inline vpternlogq64 (zmm7_6, zmm15_6, zmm13_6, table);
inline vpternlogq64 (zmm7_7, zmm15_7, zmm13_7, table);
(* vpternlogq $0xd2,%zmm6,%zmm13,%zmm15            #! PC = 0x55555558f08c *)
mov table 0xd2@uint8;
inline vpternlogq64 (zmm15_0, zmm13_0, zmm6_0, table);
inline vpternlogq64 (zmm15_1, zmm13_1, zmm6_1, table);
inline vpternlogq64 (zmm15_2, zmm13_2, zmm6_2, table);
inline vpternlogq64 (zmm15_3, zmm13_3, zmm6_3, table);
inline vpternlogq64 (zmm15_4, zmm13_4, zmm6_4, table);
inline vpternlogq64 (zmm15_5, zmm13_5, zmm6_5, table);
inline vpternlogq64 (zmm15_6, zmm13_6, zmm6_6, table);
inline vpternlogq64 (zmm15_7, zmm13_7, zmm6_7, table);
(* vpternlogq $0xd2,%zmm14,%zmm6,%zmm13            #! PC = 0x55555558f093 *)
mov table 0xd2@uint8;
inline vpternlogq64 (zmm13_0, zmm6_0, zmm14_0, table);
inline vpternlogq64 (zmm13_1, zmm6_1, zmm14_1, table);
inline vpternlogq64 (zmm13_2, zmm6_2, zmm14_2, table);
inline vpternlogq64 (zmm13_3, zmm6_3, zmm14_3, table);
inline vpternlogq64 (zmm13_4, zmm6_4, zmm14_4, table);
inline vpternlogq64 (zmm13_5, zmm6_5, zmm14_5, table);
inline vpternlogq64 (zmm13_6, zmm6_6, zmm14_6, table);
inline vpternlogq64 (zmm13_7, zmm6_7, zmm14_7, table);
(* vmovdqa64 %zmm17,%zmm6                          #! PC = 0x55555558f09a *)
mov zmm6_0 zmm17_0;
mov zmm6_1 zmm17_1;
mov zmm6_2 zmm17_2;
mov zmm6_3 zmm17_3;
mov zmm6_4 zmm17_4;
mov zmm6_5 zmm17_5;
mov zmm6_6 zmm17_6;
mov zmm6_7 zmm17_7;
(* vpternlogq $0xd2,%zmm0,%zmm17,%zmm31            #! PC = 0x55555558f0a0 *)
mov table 0xd2@uint8;
inline vpternlogq64 (zmm31_0, zmm17_0, zmm0_0, table);
inline vpternlogq64 (zmm31_1, zmm17_1, zmm0_1, table);
inline vpternlogq64 (zmm31_2, zmm17_2, zmm0_2, table);
inline vpternlogq64 (zmm31_3, zmm17_3, zmm0_3, table);
inline vpternlogq64 (zmm31_4, zmm17_4, zmm0_4, table);
inline vpternlogq64 (zmm31_5, zmm17_5, zmm0_5, table);
inline vpternlogq64 (zmm31_6, zmm17_6, zmm0_6, table);
inline vpternlogq64 (zmm31_7, zmm17_7, zmm0_7, table);
(* vpternlogq $0xd2,%zmm4,%zmm0,%zmm6              #! PC = 0x55555558f0a7 *)
mov table 0xd2@uint8;
inline vpternlogq64 (zmm6_0, zmm0_0, zmm4_0, table);
inline vpternlogq64 (zmm6_1, zmm0_1, zmm4_1, table);
inline vpternlogq64 (zmm6_2, zmm0_2, zmm4_2, table);
inline vpternlogq64 (zmm6_3, zmm0_3, zmm4_3, table);
inline vpternlogq64 (zmm6_4, zmm0_4, zmm4_4, table);
inline vpternlogq64 (zmm6_5, zmm0_5, zmm4_5, table);
inline vpternlogq64 (zmm6_6, zmm0_6, zmm4_6, table);
inline vpternlogq64 (zmm6_7, zmm0_7, zmm4_7, table);
(* vmovdqa64 %zmm19,%zmm14                         #! PC = 0x55555558f0ae *)
mov zmm14_0 zmm19_0;
mov zmm14_1 zmm19_1;
mov zmm14_2 zmm19_2;
mov zmm14_3 zmm19_3;
mov zmm14_4 zmm19_4;
mov zmm14_5 zmm19_5;
mov zmm14_6 zmm19_6;
mov zmm14_7 zmm19_7;
(* vpternlogq $0xd2,%zmm25,%zmm4,%zmm0             #! PC = 0x55555558f0b4 *)
mov table 0xd2@uint8;
inline vpternlogq64 (zmm0_0, zmm4_0, zmm25_0, table);
inline vpternlogq64 (zmm0_1, zmm4_1, zmm25_1, table);
inline vpternlogq64 (zmm0_2, zmm4_2, zmm25_2, table);
inline vpternlogq64 (zmm0_3, zmm4_3, zmm25_3, table);
inline vpternlogq64 (zmm0_4, zmm4_4, zmm25_4, table);
inline vpternlogq64 (zmm0_5, zmm4_5, zmm25_5, table);
inline vpternlogq64 (zmm0_6, zmm4_6, zmm25_6, table);
inline vpternlogq64 (zmm0_7, zmm4_7, zmm25_7, table);
(* vmovdqa64 %zmm18,%zmm22                         #! PC = 0x55555558f0bb *)
mov zmm22_0 zmm18_0;
mov zmm22_1 zmm18_1;
mov zmm22_2 zmm18_2;
mov zmm22_3 zmm18_3;
mov zmm22_4 zmm18_4;
mov zmm22_5 zmm18_5;
mov zmm22_6 zmm18_6;
mov zmm22_7 zmm18_7;
(* vpternlogq $0xd2,%zmm26,%zmm25,%zmm4            #! PC = 0x55555558f0c1 *)
mov table 0xd2@uint8;
inline vpternlogq64 (zmm4_0, zmm25_0, zmm26_0, table);
inline vpternlogq64 (zmm4_1, zmm25_1, zmm26_1, table);
inline vpternlogq64 (zmm4_2, zmm25_2, zmm26_2, table);
inline vpternlogq64 (zmm4_3, zmm25_3, zmm26_3, table);
inline vpternlogq64 (zmm4_4, zmm25_4, zmm26_4, table);
inline vpternlogq64 (zmm4_5, zmm25_5, zmm26_5, table);
inline vpternlogq64 (zmm4_6, zmm25_6, zmm26_6, table);
inline vpternlogq64 (zmm4_7, zmm25_7, zmm26_7, table);
(* vmovdqa64 %zmm20,%zmm28                         #! PC = 0x55555558f0c8 *)
mov zmm28_0 zmm20_0;
mov zmm28_1 zmm20_1;
mov zmm28_2 zmm20_2;
mov zmm28_3 zmm20_3;
mov zmm28_4 zmm20_4;
mov zmm28_5 zmm20_5;
mov zmm28_6 zmm20_6;
mov zmm28_7 zmm20_7;
(* vpternlogq $0xd2,%zmm17,%zmm26,%zmm25           #! PC = 0x55555558f0ce *)
mov table 0xd2@uint8;
inline vpternlogq64 (zmm25_0, zmm26_0, zmm17_0, table);
inline vpternlogq64 (zmm25_1, zmm26_1, zmm17_1, table);
inline vpternlogq64 (zmm25_2, zmm26_2, zmm17_2, table);
inline vpternlogq64 (zmm25_3, zmm26_3, zmm17_3, table);
inline vpternlogq64 (zmm25_4, zmm26_4, zmm17_4, table);
inline vpternlogq64 (zmm25_5, zmm26_5, zmm17_5, table);
inline vpternlogq64 (zmm25_6, zmm26_6, zmm17_6, table);
inline vpternlogq64 (zmm25_7, zmm26_7, zmm17_7, table);
(* vmovdqa64 %zmm12,%zmm26                         #! PC = 0x55555558f0d5 *)
mov zmm26_0 zmm12_0;
mov zmm26_1 zmm12_1;
mov zmm26_2 zmm12_2;
mov zmm26_3 zmm12_3;
mov zmm26_4 zmm12_4;
mov zmm26_5 zmm12_5;
mov zmm26_6 zmm12_6;
mov zmm26_7 zmm12_7;
(* vmovdqa64 %zmm30,%zmm17                         #! PC = 0x55555558f0db *)
mov zmm17_0 zmm30_0;
mov zmm17_1 zmm30_1;
mov zmm17_2 zmm30_2;
mov zmm17_3 zmm30_3;
mov zmm17_4 zmm30_4;
mov zmm17_5 zmm30_5;
mov zmm17_6 zmm30_6;
mov zmm17_7 zmm30_7;
(* vpternlogq $0xd2,%zmm19,%zmm30,%zmm26           #! PC = 0x55555558f0e1 *)
mov table 0xd2@uint8;
inline vpternlogq64 (zmm26_0, zmm30_0, zmm19_0, table);
inline vpternlogq64 (zmm26_1, zmm30_1, zmm19_1, table);
inline vpternlogq64 (zmm26_2, zmm30_2, zmm19_2, table);
inline vpternlogq64 (zmm26_3, zmm30_3, zmm19_3, table);
inline vpternlogq64 (zmm26_4, zmm30_4, zmm19_4, table);
inline vpternlogq64 (zmm26_5, zmm30_5, zmm19_5, table);
inline vpternlogq64 (zmm26_6, zmm30_6, zmm19_6, table);
inline vpternlogq64 (zmm26_7, zmm30_7, zmm19_7, table);
(* vpternlogq $0xd2,%zmm3,%zmm9,%zmm14             #! PC = 0x55555558f0e8 *)
mov table 0xd2@uint8;
inline vpternlogq64 (zmm14_0, zmm9_0, zmm3_0, table);
inline vpternlogq64 (zmm14_1, zmm9_1, zmm3_1, table);
inline vpternlogq64 (zmm14_2, zmm9_2, zmm3_2, table);
inline vpternlogq64 (zmm14_3, zmm9_3, zmm3_3, table);
inline vpternlogq64 (zmm14_4, zmm9_4, zmm3_4, table);
inline vpternlogq64 (zmm14_5, zmm9_5, zmm3_5, table);
inline vpternlogq64 (zmm14_6, zmm9_6, zmm3_6, table);
inline vpternlogq64 (zmm14_7, zmm9_7, zmm3_7, table);
(* vpternlogq $0xd2,%zmm9,%zmm19,%zmm17            #! PC = 0x55555558f0ef *)
mov table 0xd2@uint8;
inline vpternlogq64 (zmm17_0, zmm19_0, zmm9_0, table);
inline vpternlogq64 (zmm17_1, zmm19_1, zmm9_1, table);
inline vpternlogq64 (zmm17_2, zmm19_2, zmm9_2, table);
inline vpternlogq64 (zmm17_3, zmm19_3, zmm9_3, table);
inline vpternlogq64 (zmm17_4, zmm19_4, zmm9_4, table);
inline vpternlogq64 (zmm17_5, zmm19_5, zmm9_5, table);
inline vpternlogq64 (zmm17_6, zmm19_6, zmm9_6, table);
inline vpternlogq64 (zmm17_7, zmm19_7, zmm9_7, table);
(* vpternlogq $0xd2,%zmm8,%zmm20,%zmm22            #! PC = 0x55555558f0f6 *)
mov table 0xd2@uint8;
inline vpternlogq64 (zmm22_0, zmm20_0, zmm8_0, table);
inline vpternlogq64 (zmm22_1, zmm20_1, zmm8_1, table);
inline vpternlogq64 (zmm22_2, zmm20_2, zmm8_2, table);
inline vpternlogq64 (zmm22_3, zmm20_3, zmm8_3, table);
inline vpternlogq64 (zmm22_4, zmm20_4, zmm8_4, table);
inline vpternlogq64 (zmm22_5, zmm20_5, zmm8_5, table);
inline vpternlogq64 (zmm22_6, zmm20_6, zmm8_6, table);
inline vpternlogq64 (zmm22_7, zmm20_7, zmm8_7, table);
(* vpternlogq $0xd2,%zmm12,%zmm3,%zmm9             #! PC = 0x55555558f0fd *)
mov table 0xd2@uint8;
inline vpternlogq64 (zmm9_0, zmm3_0, zmm12_0, table);
inline vpternlogq64 (zmm9_1, zmm3_1, zmm12_1, table);
inline vpternlogq64 (zmm9_2, zmm3_2, zmm12_2, table);
inline vpternlogq64 (zmm9_3, zmm3_3, zmm12_3, table);
inline vpternlogq64 (zmm9_4, zmm3_4, zmm12_4, table);
inline vpternlogq64 (zmm9_5, zmm3_5, zmm12_5, table);
inline vpternlogq64 (zmm9_6, zmm3_6, zmm12_6, table);
inline vpternlogq64 (zmm9_7, zmm3_7, zmm12_7, table);
(* vpternlogq $0xd2,%zmm21,%zmm8,%zmm28            #! PC = 0x55555558f104 *)
mov table 0xd2@uint8;
inline vpternlogq64 (zmm28_0, zmm8_0, zmm21_0, table);
inline vpternlogq64 (zmm28_1, zmm8_1, zmm21_1, table);
inline vpternlogq64 (zmm28_2, zmm8_2, zmm21_2, table);
inline vpternlogq64 (zmm28_3, zmm8_3, zmm21_3, table);
inline vpternlogq64 (zmm28_4, zmm8_4, zmm21_4, table);
inline vpternlogq64 (zmm28_5, zmm8_5, zmm21_5, table);
inline vpternlogq64 (zmm28_6, zmm8_6, zmm21_6, table);
inline vpternlogq64 (zmm28_7, zmm8_7, zmm21_7, table);
(* vmovdqa64 %zmm0,%zmm19                          #! PC = 0x55555558f10b *)
mov zmm19_0 zmm0_0;
mov zmm19_1 zmm0_1;
mov zmm19_2 zmm0_2;
mov zmm19_3 zmm0_3;
mov zmm19_4 zmm0_4;
mov zmm19_5 zmm0_5;
mov zmm19_6 zmm0_6;
mov zmm19_7 zmm0_7;
(* vpternlogq $0xd2,%zmm2,%zmm21,%zmm8             #! PC = 0x55555558f111 *)
mov table 0xd2@uint8;
inline vpternlogq64 (zmm8_0, zmm21_0, zmm2_0, table);
inline vpternlogq64 (zmm8_1, zmm21_1, zmm2_1, table);
inline vpternlogq64 (zmm8_2, zmm21_2, zmm2_2, table);
inline vpternlogq64 (zmm8_3, zmm21_3, zmm2_3, table);
inline vpternlogq64 (zmm8_4, zmm21_4, zmm2_4, table);
inline vpternlogq64 (zmm8_5, zmm21_5, zmm2_5, table);
inline vpternlogq64 (zmm8_6, zmm21_6, zmm2_6, table);
inline vpternlogq64 (zmm8_7, zmm21_7, zmm2_7, table);
(* vpternlogq $0xd2,%zmm18,%zmm2,%zmm21            #! PC = 0x55555558f118 *)
mov table 0xd2@uint8;
inline vpternlogq64 (zmm21_0, zmm2_0, zmm18_0, table);
inline vpternlogq64 (zmm21_1, zmm2_1, zmm18_1, table);
inline vpternlogq64 (zmm21_2, zmm2_2, zmm18_2, table);
inline vpternlogq64 (zmm21_3, zmm2_3, zmm18_3, table);
inline vpternlogq64 (zmm21_4, zmm2_4, zmm18_4, table);
inline vpternlogq64 (zmm21_5, zmm2_5, zmm18_5, table);
inline vpternlogq64 (zmm21_6, zmm2_6, zmm18_6, table);
inline vpternlogq64 (zmm21_7, zmm2_7, zmm18_7, table);
(* vpternlogq $0xd2,%zmm20,%zmm18,%zmm2            #! PC = 0x55555558f11f *)
mov table 0xd2@uint8;
inline vpternlogq64 (zmm2_0, zmm18_0, zmm20_0, table);
inline vpternlogq64 (zmm2_1, zmm18_1, zmm20_1, table);
inline vpternlogq64 (zmm2_2, zmm18_2, zmm20_2, table);
inline vpternlogq64 (zmm2_3, zmm18_3, zmm20_3, table);
inline vpternlogq64 (zmm2_4, zmm18_4, zmm20_4, table);
inline vpternlogq64 (zmm2_5, zmm18_5, zmm20_5, table);
inline vpternlogq64 (zmm2_6, zmm18_6, zmm20_6, table);
inline vpternlogq64 (zmm2_7, zmm18_7, zmm20_7, table);
(* vpternlogq $0xd2,%zmm30,%zmm12,%zmm3            #! PC = 0x55555558f126 *)
mov table 0xd2@uint8;
inline vpternlogq64 (zmm3_0, zmm12_0, zmm30_0, table);
inline vpternlogq64 (zmm3_1, zmm12_1, zmm30_1, table);
inline vpternlogq64 (zmm3_2, zmm12_2, zmm30_2, table);
inline vpternlogq64 (zmm3_3, zmm12_3, zmm30_3, table);
inline vpternlogq64 (zmm3_4, zmm12_4, zmm30_4, table);
inline vpternlogq64 (zmm3_5, zmm12_5, zmm30_5, table);
inline vpternlogq64 (zmm3_6, zmm12_6, zmm30_6, table);
inline vpternlogq64 (zmm3_7, zmm12_7, zmm30_7, table);
(* vpternlogq $0x96,%zmm7,%zmm8,%zmm19             #! PC = 0x55555558f12d *)
mov table 0x96@uint8;
inline vpternlogq64 (zmm19_0, zmm8_0, zmm7_0, table);
inline vpternlogq64 (zmm19_1, zmm8_1, zmm7_1, table);
inline vpternlogq64 (zmm19_2, zmm8_2, zmm7_2, table);
inline vpternlogq64 (zmm19_3, zmm8_3, zmm7_3, table);
inline vpternlogq64 (zmm19_4, zmm8_4, zmm7_4, table);
inline vpternlogq64 (zmm19_5, zmm8_5, zmm7_5, table);
inline vpternlogq64 (zmm19_6, zmm8_6, zmm7_6, table);
inline vpternlogq64 (zmm19_7, zmm8_7, zmm7_7, table);
(* vmovdqa64 %zmm16,%zmm12                         #! PC = 0x55555558f134 *)
mov zmm12_0 zmm16_0;
mov zmm12_1 zmm16_1;
mov zmm12_2 zmm16_2;
mov zmm12_3 zmm16_3;
mov zmm12_4 zmm16_4;
mov zmm12_5 zmm16_5;
mov zmm12_6 zmm16_6;
mov zmm12_7 zmm16_7;
(* vmovdqa64 %zmm9,%zmm10                          #! PC = 0x55555558f13a *)
mov zmm10_0 zmm9_0;
mov zmm10_1 zmm9_1;
mov zmm10_2 zmm9_2;
mov zmm10_3 zmm9_3;
mov zmm10_4 zmm9_4;
mov zmm10_5 zmm9_5;
mov zmm10_6 zmm9_6;
mov zmm10_7 zmm9_7;
(* vmovdqa64 %zmm2,%zmm1                           #! PC = 0x55555558f140 *)
mov zmm1_0 zmm2_0;
mov zmm1_1 zmm2_1;
mov zmm1_2 zmm2_2;
mov zmm1_3 zmm2_3;
mov zmm1_4 zmm2_4;
mov zmm1_5 zmm2_5;
mov zmm1_6 zmm2_6;
mov zmm1_7 zmm2_7;
(* vpternlogq $0x96,%zmm22,%zmm31,%zmm12           #! PC = 0x55555558f146 *)
mov table 0x96@uint8;
inline vpternlogq64 (zmm12_0, zmm31_0, zmm22_0, table);
inline vpternlogq64 (zmm12_1, zmm31_1, zmm22_1, table);
inline vpternlogq64 (zmm12_2, zmm31_2, zmm22_2, table);
inline vpternlogq64 (zmm12_3, zmm31_3, zmm22_3, table);
inline vpternlogq64 (zmm12_4, zmm31_4, zmm22_4, table);
inline vpternlogq64 (zmm12_5, zmm31_5, zmm22_5, table);
inline vpternlogq64 (zmm12_6, zmm31_6, zmm22_6, table);
inline vpternlogq64 (zmm12_7, zmm31_7, zmm22_7, table);
(* vpternlogq $0x96,0x88(%rsp),%zmm14,%zmm19       #! EA = L0x7fffffffd540; Value = 0x7974c80c866b2fde; PC = 0x55555558f14d *)
mov table 0x96@uint8;
inline vpternlogq64 (zmm19_0, zmm14_0, L0x7fffffffd540, table);
inline vpternlogq64 (zmm19_1, zmm14_1, L0x7fffffffd548, table);
inline vpternlogq64 (zmm19_2, zmm14_2, L0x7fffffffd550, table);
inline vpternlogq64 (zmm19_3, zmm14_3, L0x7fffffffd558, table);
inline vpternlogq64 (zmm19_4, zmm14_4, L0x7fffffffd560, table);
inline vpternlogq64 (zmm19_5, zmm14_5, L0x7fffffffd568, table);
inline vpternlogq64 (zmm19_6, zmm14_6, L0x7fffffffd570, table);
inline vpternlogq64 (zmm19_7, zmm14_7, L0x7fffffffd578, table);
(* vpternlogq $0x96,%zmm4,%zmm11,%zmm10            #! PC = 0x55555558f159 *)
mov table 0x96@uint8;
inline vpternlogq64 (zmm10_0, zmm11_0, zmm4_0, table);
inline vpternlogq64 (zmm10_1, zmm11_1, zmm4_1, table);
inline vpternlogq64 (zmm10_2, zmm11_2, zmm4_2, table);
inline vpternlogq64 (zmm10_3, zmm11_3, zmm4_3, table);
inline vpternlogq64 (zmm10_4, zmm11_4, zmm4_4, table);
inline vpternlogq64 (zmm10_5, zmm11_5, zmm4_5, table);
inline vpternlogq64 (zmm10_6, zmm11_6, zmm4_6, table);
inline vpternlogq64 (zmm10_7, zmm11_7, zmm4_7, table);
(* vpternlogq $0x96,%zmm3,%zmm13,%zmm1             #! PC = 0x55555558f160 *)
mov table 0x96@uint8;
inline vpternlogq64 (zmm1_0, zmm13_0, zmm3_0, table);
inline vpternlogq64 (zmm1_1, zmm13_1, zmm3_1, table);
inline vpternlogq64 (zmm1_2, zmm13_2, zmm3_2, table);
inline vpternlogq64 (zmm1_3, zmm13_3, zmm3_3, table);
inline vpternlogq64 (zmm1_4, zmm13_4, zmm3_4, table);
inline vpternlogq64 (zmm1_5, zmm13_5, zmm3_5, table);
inline vpternlogq64 (zmm1_6, zmm13_6, zmm3_6, table);
inline vpternlogq64 (zmm1_7, zmm13_7, zmm3_7, table);
(* vpternlogq $0x96,%zmm26,%zmm5,%zmm12            #! PC = 0x55555558f167 *)
mov table 0x96@uint8;
inline vpternlogq64 (zmm12_0, zmm5_0, zmm26_0, table);
inline vpternlogq64 (zmm12_1, zmm5_1, zmm26_1, table);
inline vpternlogq64 (zmm12_2, zmm5_2, zmm26_2, table);
inline vpternlogq64 (zmm12_3, zmm5_3, zmm26_3, table);
inline vpternlogq64 (zmm12_4, zmm5_4, zmm26_4, table);
inline vpternlogq64 (zmm12_5, zmm5_5, zmm26_5, table);
inline vpternlogq64 (zmm12_6, zmm5_6, zmm26_6, table);
inline vpternlogq64 (zmm12_7, zmm5_7, zmm26_7, table);
(* vpternlogq $0x96,%zmm25,%zmm24,%zmm1            #! PC = 0x55555558f16e *)
mov table 0x96@uint8;
inline vpternlogq64 (zmm1_0, zmm24_0, zmm25_0, table);
inline vpternlogq64 (zmm1_1, zmm24_1, zmm25_1, table);
inline vpternlogq64 (zmm1_2, zmm24_2, zmm25_2, table);
inline vpternlogq64 (zmm1_3, zmm24_3, zmm25_3, table);
inline vpternlogq64 (zmm1_4, zmm24_4, zmm25_4, table);
inline vpternlogq64 (zmm1_5, zmm24_5, zmm25_5, table);
inline vpternlogq64 (zmm1_6, zmm24_6, zmm25_6, table);
inline vpternlogq64 (zmm1_7, zmm24_7, zmm25_7, table);
(* vpternlogq $0x96,%zmm15,%zmm21,%zmm10           #! PC = 0x55555558f175 *)
mov table 0x96@uint8;
inline vpternlogq64 (zmm10_0, zmm21_0, zmm15_0, table);
inline vpternlogq64 (zmm10_1, zmm21_1, zmm15_1, table);
inline vpternlogq64 (zmm10_2, zmm21_2, zmm15_2, table);
inline vpternlogq64 (zmm10_3, zmm21_3, zmm15_3, table);
inline vpternlogq64 (zmm10_4, zmm21_4, zmm15_4, table);
inline vpternlogq64 (zmm10_5, zmm21_5, zmm15_5, table);
inline vpternlogq64 (zmm10_6, zmm21_6, zmm15_6, table);
inline vpternlogq64 (zmm10_7, zmm21_7, zmm15_7, table);
(* vmovdqa64 %zmm24,0x48(%rsp)                     #! EA = L0x7fffffffd500; PC = 0x55555558f17c *)
mov L0x7fffffffd500 zmm24_0;
mov L0x7fffffffd508 zmm24_1;
mov L0x7fffffffd510 zmm24_2;
mov L0x7fffffffd518 zmm24_3;
mov L0x7fffffffd520 zmm24_4;
mov L0x7fffffffd528 zmm24_5;
mov L0x7fffffffd530 zmm24_6;
mov L0x7fffffffd538 zmm24_7;
(* vprolq $0x1,%zmm19,%zmm24                       #! PC = 0x55555558f187 *)
rol zmm24_0 zmm19_0 0x1;
rol zmm24_1 zmm19_1 0x1;
rol zmm24_2 zmm19_2 0x1;
rol zmm24_3 zmm19_3 0x1;
rol zmm24_4 zmm19_4 0x1;
rol zmm24_5 zmm19_5 0x1;
rol zmm24_6 zmm19_6 0x1;
rol zmm24_7 zmm19_7 0x1;
(* vprolq $0x1,%zmm10,%zmm23                       #! PC = 0x55555558f18e *)
rol zmm23_0 zmm10_0 0x1;
rol zmm23_1 zmm10_1 0x1;
rol zmm23_2 zmm10_2 0x1;
rol zmm23_3 zmm10_3 0x1;
rol zmm23_4 zmm10_4 0x1;
rol zmm23_5 zmm10_5 0x1;
rol zmm23_6 zmm10_6 0x1;
rol zmm23_7 zmm10_7 0x1;
(* vprolq $0x1,%zmm1,%zmm20                        #! PC = 0x55555558f195 *)
rol zmm20_0 zmm1_0 0x1;
rol zmm20_1 zmm1_1 0x1;
rol zmm20_2 zmm1_2 0x1;
rol zmm20_3 zmm1_3 0x1;
rol zmm20_4 zmm1_4 0x1;
rol zmm20_5 zmm1_5 0x1;
rol zmm20_6 zmm1_6 0x1;
rol zmm20_7 zmm1_7 0x1;
(* vmovdqa64 %zmm29,%zmm18                         #! PC = 0x55555558f19c *)
mov zmm18_0 zmm29_0;
mov zmm18_1 zmm29_1;
mov zmm18_2 zmm29_2;
mov zmm18_3 zmm29_3;
mov zmm18_4 zmm29_4;
mov zmm18_5 zmm29_5;
mov zmm18_6 zmm29_6;
mov zmm18_7 zmm29_7;
(* vmovdqa64 %zmm15,0x8(%rsp)                      #! EA = L0x7fffffffd4c0; PC = 0x55555558f1a2 *)
mov L0x7fffffffd4c0 zmm15_0;
mov L0x7fffffffd4c8 zmm15_1;
mov L0x7fffffffd4d0 zmm15_2;
mov L0x7fffffffd4d8 zmm15_3;
mov L0x7fffffffd4e0 zmm15_4;
mov L0x7fffffffd4e8 zmm15_5;
mov L0x7fffffffd4f0 zmm15_6;
mov L0x7fffffffd4f8 zmm15_7;
(* vprolq $0x1,%zmm12,%zmm15                       #! PC = 0x55555558f1ad *)
rol zmm15_0 zmm12_0 0x1;
rol zmm15_1 zmm12_1 0x1;
rol zmm15_2 zmm12_2 0x1;
rol zmm15_3 zmm12_3 0x1;
rol zmm15_4 zmm12_4 0x1;
rol zmm15_5 zmm12_5 0x1;
rol zmm15_6 zmm12_6 0x1;
rol zmm15_7 zmm12_7 0x1;
(* vpternlogq $0x96,%zmm27,%zmm17,%zmm18           #! PC = 0x55555558f1b4 *)
mov table 0x96@uint8;
inline vpternlogq64 (zmm18_0, zmm17_0, zmm27_0, table);
inline vpternlogq64 (zmm18_1, zmm17_1, zmm27_1, table);
inline vpternlogq64 (zmm18_2, zmm17_2, zmm27_2, table);
inline vpternlogq64 (zmm18_3, zmm17_3, zmm27_3, table);
inline vpternlogq64 (zmm18_4, zmm17_4, zmm27_4, table);
inline vpternlogq64 (zmm18_5, zmm17_5, zmm27_5, table);
inline vpternlogq64 (zmm18_6, zmm17_6, zmm27_6, table);
inline vpternlogq64 (zmm18_7, zmm17_7, zmm27_7, table);
(* vpternlogq $0x96,%zmm28,%zmm6,%zmm18            #! PC = 0x55555558f1bb *)
mov table 0x96@uint8;
inline vpternlogq64 (zmm18_0, zmm6_0, zmm28_0, table);
inline vpternlogq64 (zmm18_1, zmm6_1, zmm28_1, table);
inline vpternlogq64 (zmm18_2, zmm6_2, zmm28_2, table);
inline vpternlogq64 (zmm18_3, zmm6_3, zmm28_3, table);
inline vpternlogq64 (zmm18_4, zmm6_4, zmm28_4, table);
inline vpternlogq64 (zmm18_5, zmm6_5, zmm28_5, table);
inline vpternlogq64 (zmm18_6, zmm6_6, zmm28_6, table);
inline vpternlogq64 (zmm18_7, zmm6_7, zmm28_7, table);
(* vmovdqa64 %zmm25,-0x38(%rsp)                    #! EA = L0x7fffffffd480; PC = 0x55555558f1c2 *)
mov L0x7fffffffd480 zmm25_0;
mov L0x7fffffffd488 zmm25_1;
mov L0x7fffffffd490 zmm25_2;
mov L0x7fffffffd498 zmm25_3;
mov L0x7fffffffd4a0 zmm25_4;
mov L0x7fffffffd4a8 zmm25_5;
mov L0x7fffffffd4b0 zmm25_6;
mov L0x7fffffffd4b8 zmm25_7;
(* vprolq $0x1,%zmm18,%zmm25                       #! PC = 0x55555558f1cd *)
rol zmm25_0 zmm18_0 0x1;
rol zmm25_1 zmm18_1 0x1;
rol zmm25_2 zmm18_2 0x1;
rol zmm25_3 zmm18_3 0x1;
rol zmm25_4 zmm18_4 0x1;
rol zmm25_5 zmm18_5 0x1;
rol zmm25_6 zmm18_6 0x1;
rol zmm25_7 zmm18_7 0x1;
(* vpxord %zmm24,%zmm12,%zmm12                     #! PC = 0x55555558f1d4 *)
xor zmm12_0@uint64 zmm12_0 zmm24_0;
xor zmm12_1@uint64 zmm12_1 zmm24_1;
xor zmm12_2@uint64 zmm12_2 zmm24_2;
xor zmm12_3@uint64 zmm12_3 zmm24_3;
xor zmm12_4@uint64 zmm12_4 zmm24_4;
xor zmm12_5@uint64 zmm12_5 zmm24_5;
xor zmm12_6@uint64 zmm12_6 zmm24_6;
xor zmm12_7@uint64 zmm12_7 zmm24_7;
(* vpxord %zmm23,%zmm18,%zmm18                     #! PC = 0x55555558f1da *)
xor zmm18_0@uint64 zmm18_0 zmm23_0;
xor zmm18_1@uint64 zmm18_1 zmm23_1;
xor zmm18_2@uint64 zmm18_2 zmm23_2;
xor zmm18_3@uint64 zmm18_3 zmm23_3;
xor zmm18_4@uint64 zmm18_4 zmm23_4;
xor zmm18_5@uint64 zmm18_5 zmm23_5;
xor zmm18_6@uint64 zmm18_6 zmm23_6;
xor zmm18_7@uint64 zmm18_7 zmm23_7;
(* vpxord %zmm20,%zmm19,%zmm19                     #! PC = 0x55555558f1e0 *)
xor zmm19_0@uint64 zmm19_0 zmm20_0;
xor zmm19_1@uint64 zmm19_1 zmm20_1;
xor zmm19_2@uint64 zmm19_2 zmm20_2;
xor zmm19_3@uint64 zmm19_3 zmm20_3;
xor zmm19_4@uint64 zmm19_4 zmm20_4;
xor zmm19_5@uint64 zmm19_5 zmm20_5;
xor zmm19_6@uint64 zmm19_6 zmm20_6;
xor zmm19_7@uint64 zmm19_7 zmm20_7;
(* vpxord %zmm15,%zmm10,%zmm10                     #! PC = 0x55555558f1e6 *)
xor zmm10_0@uint64 zmm10_0 zmm15_0;
xor zmm10_1@uint64 zmm10_1 zmm15_1;
xor zmm10_2@uint64 zmm10_2 zmm15_2;
xor zmm10_3@uint64 zmm10_3 zmm15_3;
xor zmm10_4@uint64 zmm10_4 zmm15_4;
xor zmm10_5@uint64 zmm10_5 zmm15_5;
xor zmm10_6@uint64 zmm10_6 zmm15_6;
xor zmm10_7@uint64 zmm10_7 zmm15_7;
(* vpxord %zmm29,%zmm12,%zmm29                     #! PC = 0x55555558f1ec *)
xor zmm29_0@uint64 zmm12_0 zmm29_0;
xor zmm29_1@uint64 zmm12_1 zmm29_1;
xor zmm29_2@uint64 zmm12_2 zmm29_2;
xor zmm29_3@uint64 zmm12_3 zmm29_3;
xor zmm29_4@uint64 zmm12_4 zmm29_4;
xor zmm29_5@uint64 zmm12_5 zmm29_5;
xor zmm29_6@uint64 zmm12_6 zmm29_6;
xor zmm29_7@uint64 zmm12_7 zmm29_7;
(* vprorq $0x14,%zmm29,%zmm29                      #! PC = 0x55555558f1f2 *)
ror zmm29_0 zmm29_0 0x14;
ror zmm29_1 zmm29_1 0x14;
ror zmm29_2 zmm29_2 0x14;
ror zmm29_3 zmm29_3 0x14;
ror zmm29_4 zmm29_4 0x14;
ror zmm29_5 zmm29_5 0x14;
ror zmm29_6 zmm29_6 0x14;
ror zmm29_7 zmm29_7 0x14;
(* vpxord %zmm9,%zmm19,%zmm24                      #! PC = 0x55555558f1f9 *)
xor zmm24_0@uint64 zmm19_0 zmm9_0;
xor zmm24_1@uint64 zmm19_1 zmm9_1;
xor zmm24_2@uint64 zmm19_2 zmm9_2;
xor zmm24_3@uint64 zmm19_3 zmm9_3;
xor zmm24_4@uint64 zmm19_4 zmm9_4;
xor zmm24_5@uint64 zmm19_5 zmm9_5;
xor zmm24_6@uint64 zmm19_6 zmm9_6;
xor zmm24_7@uint64 zmm19_7 zmm9_7;
(* vpxord %zmm0,%zmm18,%zmm0                       #! PC = 0x55555558f1ff *)
xor zmm0_0@uint64 zmm18_0 zmm0_0;
xor zmm0_1@uint64 zmm18_1 zmm0_1;
xor zmm0_2@uint64 zmm18_2 zmm0_2;
xor zmm0_3@uint64 zmm18_3 zmm0_3;
xor zmm0_4@uint64 zmm18_4 zmm0_4;
xor zmm0_5@uint64 zmm18_5 zmm0_5;
xor zmm0_6@uint64 zmm18_6 zmm0_6;
xor zmm0_7@uint64 zmm18_7 zmm0_7;
(* vpxord %zmm2,%zmm10,%zmm30                      #! PC = 0x55555558f205 *)
xor zmm30_0@uint64 zmm10_0 zmm2_0;
xor zmm30_1@uint64 zmm10_1 zmm2_1;
xor zmm30_2@uint64 zmm10_2 zmm2_2;
xor zmm30_3@uint64 zmm10_3 zmm2_3;
xor zmm30_4@uint64 zmm10_4 zmm2_4;
xor zmm30_5@uint64 zmm10_5 zmm2_5;
xor zmm30_6@uint64 zmm10_6 zmm2_6;
xor zmm30_7@uint64 zmm10_7 zmm2_7;
(* vprorq $0x15,%zmm0,%zmm0                        #! PC = 0x55555558f20b *)
ror zmm0_0 zmm0_0 0x15;
ror zmm0_1 zmm0_1 0x15;
ror zmm0_2 zmm0_2 0x15;
ror zmm0_3 zmm0_3 0x15;
ror zmm0_4 zmm0_4 0x15;
ror zmm0_5 zmm0_5 0x15;
ror zmm0_6 zmm0_6 0x15;
ror zmm0_7 zmm0_7 0x15;
(* vprolq $0x15,%zmm24,%zmm24                      #! PC = 0x55555558f212 *)
rol zmm24_0 zmm24_0 0x15;
rol zmm24_1 zmm24_1 0x15;
rol zmm24_2 zmm24_2 0x15;
rol zmm24_3 zmm24_3 0x15;
rol zmm24_4 zmm24_4 0x15;
rol zmm24_5 zmm24_5 0x15;
rol zmm24_6 zmm24_6 0x15;
rol zmm24_7 zmm24_7 0x15;
(* vprolq $0xe,%zmm30,%zmm30                       #! PC = 0x55555558f219 *)
rol zmm30_0 zmm30_0 0xe;
rol zmm30_1 zmm30_1 0xe;
rol zmm30_2 zmm30_2 0xe;
rol zmm30_3 zmm30_3 0xe;
rol zmm30_4 zmm30_4 0xe;
rol zmm30_5 zmm30_5 0xe;
rol zmm30_6 zmm30_6 0xe;
rol zmm30_7 zmm30_7 0xe;
(* vpxord %zmm25,%zmm1,%zmm1                       #! PC = 0x55555558f220 *)
xor zmm1_0@uint64 zmm1_0 zmm25_0;
xor zmm1_1@uint64 zmm1_1 zmm25_1;
xor zmm1_2@uint64 zmm1_2 zmm25_2;
xor zmm1_3@uint64 zmm1_3 zmm25_3;
xor zmm1_4@uint64 zmm1_4 zmm25_4;
xor zmm1_5@uint64 zmm1_5 zmm25_5;
xor zmm1_6@uint64 zmm1_6 zmm25_6;
xor zmm1_7@uint64 zmm1_7 zmm25_7;
(* vpxord %zmm13,%zmm10,%zmm13                     #! PC = 0x55555558f226 *)
xor zmm13_0@uint64 zmm10_0 zmm13_0;
xor zmm13_1@uint64 zmm10_1 zmm13_1;
xor zmm13_2@uint64 zmm10_2 zmm13_2;
xor zmm13_3@uint64 zmm10_3 zmm13_3;
xor zmm13_4@uint64 zmm10_4 zmm13_4;
xor zmm13_5@uint64 zmm10_5 zmm13_5;
xor zmm13_6@uint64 zmm10_6 zmm13_6;
xor zmm13_7@uint64 zmm10_7 zmm13_7;
(* vprolq $0x14,%zmm13,%zmm13                      #! PC = 0x55555558f22c *)
rol zmm13_0 zmm13_0 0x14;
rol zmm13_1 zmm13_1 0x14;
rol zmm13_2 zmm13_2 0x14;
rol zmm13_3 zmm13_3 0x14;
rol zmm13_4 zmm13_4 0x14;
rol zmm13_5 zmm13_5 0x14;
rol zmm13_6 zmm13_6 0x14;
rol zmm13_7 zmm13_7 0x14;
(* vpxord %zmm31,%zmm1,%zmm31                      #! PC = 0x55555558f233 *)
xor zmm31_0@uint64 zmm1_0 zmm31_0;
xor zmm31_1@uint64 zmm1_1 zmm31_1;
xor zmm31_2@uint64 zmm1_2 zmm31_2;
xor zmm31_3@uint64 zmm1_3 zmm31_3;
xor zmm31_4@uint64 zmm1_4 zmm31_4;
xor zmm31_5@uint64 zmm1_5 zmm31_5;
xor zmm31_6@uint64 zmm1_6 zmm31_6;
xor zmm31_7@uint64 zmm1_7 zmm31_7;
(* vpxord %zmm17,%zmm12,%zmm17                     #! PC = 0x55555558f239 *)
xor zmm17_0@uint64 zmm12_0 zmm17_0;
xor zmm17_1@uint64 zmm12_1 zmm17_1;
xor zmm17_2@uint64 zmm12_2 zmm17_2;
xor zmm17_3@uint64 zmm12_3 zmm17_3;
xor zmm17_4@uint64 zmm12_4 zmm17_4;
xor zmm17_5@uint64 zmm12_5 zmm17_5;
xor zmm17_6@uint64 zmm12_6 zmm17_6;
xor zmm17_7@uint64 zmm12_7 zmm17_7;
(* vprolq $0x3,%zmm31,%zmm31                       #! PC = 0x55555558f23f *)
rol zmm31_0 zmm31_0 0x3;
rol zmm31_1 zmm31_1 0x3;
rol zmm31_2 zmm31_2 0x3;
rol zmm31_3 zmm31_3 0x3;
rol zmm31_4 zmm31_4 0x3;
rol zmm31_5 zmm31_5 0x3;
rol zmm31_6 zmm31_6 0x3;
rol zmm31_7 zmm31_7 0x3;
(* vprorq $0x13,%zmm17,%zmm17                      #! PC = 0x55555558f246 *)
ror zmm17_0 zmm17_0 0x13;
ror zmm17_1 zmm17_1 0x13;
ror zmm17_2 zmm17_2 0x13;
ror zmm17_3 zmm17_3 0x13;
ror zmm17_4 zmm17_4 0x13;
ror zmm17_5 zmm17_5 0x13;
ror zmm17_6 zmm17_6 0x13;
ror zmm17_7 zmm17_7 0x13;
(* vpxord %zmm7,%zmm18,%zmm7                       #! PC = 0x55555558f24d *)
xor zmm7_0@uint64 zmm18_0 zmm7_0;
xor zmm7_1@uint64 zmm18_1 zmm7_1;
xor zmm7_2@uint64 zmm18_2 zmm7_2;
xor zmm7_3@uint64 zmm18_3 zmm7_3;
xor zmm7_4@uint64 zmm18_4 zmm7_4;
xor zmm7_5@uint64 zmm18_5 zmm7_5;
xor zmm7_6@uint64 zmm18_6 zmm7_6;
xor zmm7_7@uint64 zmm18_7 zmm7_7;
(* vpxord %zmm1,%zmm16,%zmm16                      #! PC = 0x55555558f253 *)
xor zmm16_0@uint64 zmm16_0 zmm1_0;
xor zmm16_1@uint64 zmm16_1 zmm1_1;
xor zmm16_2@uint64 zmm16_2 zmm1_2;
xor zmm16_3@uint64 zmm16_3 zmm1_3;
xor zmm16_4@uint64 zmm16_4 zmm1_4;
xor zmm16_5@uint64 zmm16_5 zmm1_5;
xor zmm16_6@uint64 zmm16_6 zmm1_6;
xor zmm16_7@uint64 zmm16_7 zmm1_7;
(* vprolq $0x6,%zmm7,%zmm7                         #! PC = 0x55555558f259 *)
rol zmm7_0 zmm7_0 0x6;
rol zmm7_1 zmm7_1 0x6;
rol zmm7_2 zmm7_2 0x6;
rol zmm7_3 zmm7_3 0x6;
rol zmm7_4 zmm7_4 0x6;
rol zmm7_5 zmm7_5 0x6;
rol zmm7_6 zmm7_6 0x6;
rol zmm7_7 zmm7_7 0x6;
(* vpxord %zmm11,%zmm19,%zmm11                     #! PC = 0x55555558f260 *)
xor zmm11_0@uint64 zmm19_0 zmm11_0;
xor zmm11_1@uint64 zmm19_1 zmm11_1;
xor zmm11_2@uint64 zmm19_2 zmm11_2;
xor zmm11_3@uint64 zmm19_3 zmm11_3;
xor zmm11_4@uint64 zmm19_4 zmm11_4;
xor zmm11_5@uint64 zmm19_5 zmm11_5;
xor zmm11_6@uint64 zmm19_6 zmm11_6;
xor zmm11_7@uint64 zmm19_7 zmm11_7;
(* vpxord %zmm4,%zmm19,%zmm4                       #! PC = 0x55555558f266 *)
xor zmm4_0@uint64 zmm19_0 zmm4_0;
xor zmm4_1@uint64 zmm19_1 zmm4_1;
xor zmm4_2@uint64 zmm19_2 zmm4_2;
xor zmm4_3@uint64 zmm19_3 zmm4_3;
xor zmm4_4@uint64 zmm19_4 zmm4_4;
xor zmm4_5@uint64 zmm19_5 zmm4_5;
xor zmm4_6@uint64 zmm19_6 zmm4_6;
xor zmm4_7@uint64 zmm19_7 zmm4_7;
(* vpxord %zmm27,%zmm12,%zmm27                     #! PC = 0x55555558f26c *)
xor zmm27_0@uint64 zmm12_0 zmm27_0;
xor zmm27_1@uint64 zmm12_1 zmm27_1;
xor zmm27_2@uint64 zmm12_2 zmm27_2;
xor zmm27_3@uint64 zmm12_3 zmm27_3;
xor zmm27_4@uint64 zmm12_4 zmm27_4;
xor zmm27_5@uint64 zmm12_5 zmm27_5;
xor zmm27_6@uint64 zmm12_6 zmm27_6;
xor zmm27_7@uint64 zmm12_7 zmm27_7;
(* vpxord %zmm3,%zmm10,%zmm3                       #! PC = 0x55555558f272 *)
xor zmm3_0@uint64 zmm10_0 zmm3_0;
xor zmm3_1@uint64 zmm10_1 zmm3_1;
xor zmm3_2@uint64 zmm10_2 zmm3_2;
xor zmm3_3@uint64 zmm10_3 zmm3_3;
xor zmm3_4@uint64 zmm10_4 zmm3_4;
xor zmm3_5@uint64 zmm10_5 zmm3_5;
xor zmm3_6@uint64 zmm10_6 zmm3_6;
xor zmm3_7@uint64 zmm10_7 zmm3_7;
(* vprolq $0x1c,%zmm11,%zmm11                      #! PC = 0x55555558f278 *)
rol zmm11_0 zmm11_0 0x1c;
rol zmm11_1 zmm11_1 0x1c;
rol zmm11_2 zmm11_2 0x1c;
rol zmm11_3 zmm11_3 0x1c;
rol zmm11_4 zmm11_4 0x1c;
rol zmm11_5 zmm11_5 0x1c;
rol zmm11_6 zmm11_6 0x1c;
rol zmm11_7 zmm11_7 0x1c;
(* vprolq $0x1,%zmm27,%zmm27                       #! PC = 0x55555558f27f *)
rol zmm27_0 zmm27_0 0x1;
rol zmm27_1 zmm27_1 0x1;
rol zmm27_2 zmm27_2 0x1;
rol zmm27_3 zmm27_3 0x1;
rol zmm27_4 zmm27_4 0x1;
rol zmm27_5 zmm27_5 0x1;
rol zmm27_6 zmm27_6 0x1;
rol zmm27_7 zmm27_7 0x1;
(* vprolq $0x19,%zmm4,%zmm4                        #! PC = 0x55555558f286 *)
rol zmm4_0 zmm4_0 0x19;
rol zmm4_1 zmm4_1 0x19;
rol zmm4_2 zmm4_2 0x19;
rol zmm4_3 zmm4_3 0x19;
rol zmm4_4 zmm4_4 0x19;
rol zmm4_5 zmm4_5 0x19;
rol zmm4_6 zmm4_6 0x19;
rol zmm4_7 zmm4_7 0x19;
(* vprolq $0x8,%zmm3,%zmm3                         #! PC = 0x55555558f28d *)
rol zmm3_0 zmm3_0 0x8;
rol zmm3_1 zmm3_1 0x8;
rol zmm3_2 zmm3_2 0x8;
rol zmm3_3 zmm3_3 0x8;
rol zmm3_4 zmm3_4 0x8;
rol zmm3_5 zmm3_5 0x8;
rol zmm3_6 zmm3_6 0x8;
rol zmm3_7 zmm3_7 0x8;
(* vpxord %zmm8,%zmm18,%zmm9                       #! PC = 0x55555558f294 *)
xor zmm9_0@uint64 zmm18_0 zmm8_0;
xor zmm9_1@uint64 zmm18_1 zmm8_1;
xor zmm9_2@uint64 zmm18_2 zmm8_2;
xor zmm9_3@uint64 zmm18_3 zmm8_3;
xor zmm9_4@uint64 zmm18_4 zmm8_4;
xor zmm9_5@uint64 zmm18_5 zmm8_5;
xor zmm9_6@uint64 zmm18_6 zmm8_6;
xor zmm9_7@uint64 zmm18_7 zmm8_7;
(* vmovdqa64 %zmm16,%zmm2                          #! PC = 0x55555558f29a *)
mov zmm2_0 zmm16_0;
mov zmm2_1 zmm16_1;
mov zmm2_2 zmm16_2;
mov zmm2_3 zmm16_3;
mov zmm2_4 zmm16_4;
mov zmm2_5 zmm16_5;
mov zmm2_6 zmm16_6;
mov zmm2_7 zmm16_7;
(* vmovdqa64 %zmm29,%zmm20                         #! PC = 0x55555558f2a0 *)
mov zmm20_0 zmm29_0;
mov zmm20_1 zmm29_1;
mov zmm20_2 zmm29_2;
mov zmm20_3 zmm29_3;
mov zmm20_4 zmm29_4;
mov zmm20_5 zmm29_5;
mov zmm20_6 zmm29_6;
mov zmm20_7 zmm29_7;
(* vpxord %zmm22,%zmm1,%zmm22                      #! PC = 0x55555558f2a6 *)
xor zmm22_0@uint64 zmm1_0 zmm22_0;
xor zmm22_1@uint64 zmm1_1 zmm22_1;
xor zmm22_2@uint64 zmm1_2 zmm22_2;
xor zmm22_3@uint64 zmm1_3 zmm22_3;
xor zmm22_4@uint64 zmm1_4 zmm22_4;
xor zmm22_5@uint64 zmm1_5 zmm22_5;
xor zmm22_6@uint64 zmm1_6 zmm22_6;
xor zmm22_7@uint64 zmm1_7 zmm22_7;
(* vpternlogq $0xd2,%zmm0,%zmm29,%zmm2             #! PC = 0x55555558f2ac *)
mov table 0xd2@uint8;
inline vpternlogq64 (zmm2_0, zmm29_0, zmm0_0, table);
inline vpternlogq64 (zmm2_1, zmm29_1, zmm0_1, table);
inline vpternlogq64 (zmm2_2, zmm29_2, zmm0_2, table);
inline vpternlogq64 (zmm2_3, zmm29_3, zmm0_3, table);
inline vpternlogq64 (zmm2_4, zmm29_4, zmm0_4, table);
inline vpternlogq64 (zmm2_5, zmm29_5, zmm0_5, table);
inline vpternlogq64 (zmm2_6, zmm29_6, zmm0_6, table);
inline vpternlogq64 (zmm2_7, zmm29_7, zmm0_7, table);
(* vprorq $0x3,%zmm9,%zmm9                         #! PC = 0x55555558f2b3 *)
ror zmm9_0 zmm9_0 0x3;
ror zmm9_1 zmm9_1 0x3;
ror zmm9_2 zmm9_2 0x3;
ror zmm9_3 zmm9_3 0x3;
ror zmm9_4 zmm9_4 0x3;
ror zmm9_5 zmm9_5 0x3;
ror zmm9_6 zmm9_6 0x3;
ror zmm9_7 zmm9_7 0x3;
(* vprolq $0x12,%zmm22,%zmm22                      #! PC = 0x55555558f2ba *)
rol zmm22_0 zmm22_0 0x12;
rol zmm22_1 zmm22_1 0x12;
rol zmm22_2 zmm22_2 0x12;
rol zmm22_3 zmm22_3 0x12;
rol zmm22_4 zmm22_4 0x12;
rol zmm22_5 zmm22_5 0x12;
rol zmm22_6 zmm22_6 0x12;
rol zmm22_7 zmm22_7 0x12;
(* vpternlogq $0xd2,%zmm24,%zmm0,%zmm20            #! PC = 0x55555558f2c1 *)
mov table 0xd2@uint8;
inline vpternlogq64 (zmm20_0, zmm0_0, zmm24_0, table);
inline vpternlogq64 (zmm20_1, zmm0_1, zmm24_1, table);
inline vpternlogq64 (zmm20_2, zmm0_2, zmm24_2, table);
inline vpternlogq64 (zmm20_3, zmm0_3, zmm24_3, table);
inline vpternlogq64 (zmm20_4, zmm0_4, zmm24_4, table);
inline vpternlogq64 (zmm20_5, zmm0_5, zmm24_5, table);
inline vpternlogq64 (zmm20_6, zmm0_6, zmm24_6, table);
inline vpternlogq64 (zmm20_7, zmm0_7, zmm24_7, table);
(* vpternlogq $0xd2,%zmm30,%zmm24,%zmm0            #! PC = 0x55555558f2c8 *)
mov table 0xd2@uint8;
inline vpternlogq64 (zmm0_0, zmm24_0, zmm30_0, table);
inline vpternlogq64 (zmm0_1, zmm24_1, zmm30_1, table);
inline vpternlogq64 (zmm0_2, zmm24_2, zmm30_2, table);
inline vpternlogq64 (zmm0_3, zmm24_3, zmm30_3, table);
inline vpternlogq64 (zmm0_4, zmm24_4, zmm30_4, table);
inline vpternlogq64 (zmm0_5, zmm24_5, zmm30_5, table);
inline vpternlogq64 (zmm0_6, zmm24_6, zmm30_6, table);
inline vpternlogq64 (zmm0_7, zmm24_7, zmm30_7, table);
(* vmovdqa64 %zmm0,0x148(%rsp)                     #! EA = L0x7fffffffd600; PC = 0x55555558f2cf *)
mov L0x7fffffffd600 zmm0_0;
mov L0x7fffffffd608 zmm0_1;
mov L0x7fffffffd610 zmm0_2;
mov L0x7fffffffd618 zmm0_3;
mov L0x7fffffffd620 zmm0_4;
mov L0x7fffffffd628 zmm0_5;
mov L0x7fffffffd630 zmm0_6;
mov L0x7fffffffd638 zmm0_7;
(* vpbroadcastq %r15,%zmm0                         #! PC = 0x55555558f2da *)
mov zmm0_0 r15;
mov zmm0_1 r15;
mov zmm0_2 r15;
mov zmm0_3 r15;
mov zmm0_4 r15;
mov zmm0_5 r15;
mov zmm0_6 r15;
mov zmm0_7 r15;
(* vpxord %zmm2,%zmm0,%zmm15                       #! PC = 0x55555558f2e0 *)
xor zmm15_0@uint64 zmm0_0 zmm2_0;
xor zmm15_1@uint64 zmm0_1 zmm2_1;
xor zmm15_2@uint64 zmm0_2 zmm2_2;
xor zmm15_3@uint64 zmm0_3 zmm2_3;
xor zmm15_4@uint64 zmm0_4 zmm2_4;
xor zmm15_5@uint64 zmm0_5 zmm2_5;
xor zmm15_6@uint64 zmm0_6 zmm2_6;
xor zmm15_7@uint64 zmm0_7 zmm2_7;
(* vmovdqa64 %zmm13,%zmm2                          #! PC = 0x55555558f2e6 *)
mov zmm2_0 zmm13_0;
mov zmm2_1 zmm13_1;
mov zmm2_2 zmm13_2;
mov zmm2_3 zmm13_3;
mov zmm2_4 zmm13_4;
mov zmm2_5 zmm13_5;
mov zmm2_6 zmm13_6;
mov zmm2_7 zmm13_7;
(* vpternlogq $0xd2,%zmm17,%zmm31,%zmm2            #! PC = 0x55555558f2ec *)
mov table 0xd2@uint8;
inline vpternlogq64 (zmm2_0, zmm31_0, zmm17_0, table);
inline vpternlogq64 (zmm2_1, zmm31_1, zmm17_1, table);
inline vpternlogq64 (zmm2_2, zmm31_2, zmm17_2, table);
inline vpternlogq64 (zmm2_3, zmm31_3, zmm17_3, table);
inline vpternlogq64 (zmm2_4, zmm31_4, zmm17_4, table);
inline vpternlogq64 (zmm2_5, zmm31_5, zmm17_5, table);
inline vpternlogq64 (zmm2_6, zmm31_6, zmm17_6, table);
inline vpternlogq64 (zmm2_7, zmm31_7, zmm17_7, table);
(* vmovdqa64 %zmm2,%zmm25                          #! PC = 0x55555558f2f3 *)
mov zmm25_0 zmm2_0;
mov zmm25_1 zmm2_1;
mov zmm25_2 zmm2_2;
mov zmm25_3 zmm2_3;
mov zmm25_4 zmm2_4;
mov zmm25_5 zmm2_5;
mov zmm25_6 zmm2_6;
mov zmm25_7 zmm2_7;
(* vmovdqa64 %zmm7,%zmm2                           #! PC = 0x55555558f2f9 *)
mov zmm2_0 zmm7_0;
mov zmm2_1 zmm7_1;
mov zmm2_2 zmm7_2;
mov zmm2_3 zmm7_3;
mov zmm2_4 zmm7_4;
mov zmm2_5 zmm7_5;
mov zmm2_6 zmm7_6;
mov zmm2_7 zmm7_7;
(* vpternlogq $0xd2,%zmm3,%zmm4,%zmm2              #! PC = 0x55555558f2ff *)
mov table 0xd2@uint8;
inline vpternlogq64 (zmm2_0, zmm4_0, zmm3_0, table);
inline vpternlogq64 (zmm2_1, zmm4_1, zmm3_1, table);
inline vpternlogq64 (zmm2_2, zmm4_2, zmm3_2, table);
inline vpternlogq64 (zmm2_3, zmm4_3, zmm3_3, table);
inline vpternlogq64 (zmm2_4, zmm4_4, zmm3_4, table);
inline vpternlogq64 (zmm2_5, zmm4_5, zmm3_5, table);
inline vpternlogq64 (zmm2_6, zmm4_6, zmm3_6, table);
inline vpternlogq64 (zmm2_7, zmm4_7, zmm3_7, table);
(* vmovdqa64 %zmm11,%zmm23                         #! PC = 0x55555558f306 *)
mov zmm23_0 zmm11_0;
mov zmm23_1 zmm11_1;
mov zmm23_2 zmm11_2;
mov zmm23_3 zmm11_3;
mov zmm23_4 zmm11_4;
mov zmm23_5 zmm11_5;
mov zmm23_6 zmm11_6;
mov zmm23_7 zmm11_7;
(* vmovdqa64 %zmm27,%zmm8                          #! PC = 0x55555558f30c *)
mov zmm8_0 zmm27_0;
mov zmm8_1 zmm27_1;
mov zmm8_2 zmm27_2;
mov zmm8_3 zmm27_3;
mov zmm8_4 zmm27_4;
mov zmm8_5 zmm27_5;
mov zmm8_6 zmm27_6;
mov zmm8_7 zmm27_7;
(* vmovdqa64 %zmm26,-0x78(%rsp)                    #! EA = L0x7fffffffd440; PC = 0x55555558f312 *)
mov L0x7fffffffd440 zmm26_0;
mov L0x7fffffffd448 zmm26_1;
mov L0x7fffffffd450 zmm26_2;
mov L0x7fffffffd458 zmm26_3;
mov L0x7fffffffd460 zmm26_4;
mov L0x7fffffffd468 zmm26_5;
mov L0x7fffffffd470 zmm26_6;
mov L0x7fffffffd478 zmm26_7;
(* vpternlogq $0xd2,%zmm31,%zmm13,%zmm23           #! PC = 0x55555558f31d *)
mov table 0xd2@uint8;
inline vpternlogq64 (zmm23_0, zmm13_0, zmm31_0, table);
inline vpternlogq64 (zmm23_1, zmm13_1, zmm31_1, table);
inline vpternlogq64 (zmm23_2, zmm13_2, zmm31_2, table);
inline vpternlogq64 (zmm23_3, zmm13_3, zmm31_3, table);
inline vpternlogq64 (zmm23_4, zmm13_4, zmm31_4, table);
inline vpternlogq64 (zmm23_5, zmm13_5, zmm31_5, table);
inline vpternlogq64 (zmm23_6, zmm13_6, zmm31_6, table);
inline vpternlogq64 (zmm23_7, zmm13_7, zmm31_7, table);
(* vpternlogq $0xd2,%zmm4,%zmm7,%zmm8              #! PC = 0x55555558f324 *)
mov table 0xd2@uint8;
inline vpternlogq64 (zmm8_0, zmm7_0, zmm4_0, table);
inline vpternlogq64 (zmm8_1, zmm7_1, zmm4_1, table);
inline vpternlogq64 (zmm8_2, zmm7_2, zmm4_2, table);
inline vpternlogq64 (zmm8_3, zmm7_3, zmm4_3, table);
inline vpternlogq64 (zmm8_4, zmm7_4, zmm4_4, table);
inline vpternlogq64 (zmm8_5, zmm7_5, zmm4_5, table);
inline vpternlogq64 (zmm8_6, zmm7_6, zmm4_6, table);
inline vpternlogq64 (zmm8_7, zmm7_7, zmm4_7, table);
(* vpternlogq $0xd2,%zmm9,%zmm17,%zmm31            #! PC = 0x55555558f32b *)
mov table 0xd2@uint8;
inline vpternlogq64 (zmm31_0, zmm17_0, zmm9_0, table);
inline vpternlogq64 (zmm31_1, zmm17_1, zmm9_1, table);
inline vpternlogq64 (zmm31_2, zmm17_2, zmm9_2, table);
inline vpternlogq64 (zmm31_3, zmm17_3, zmm9_3, table);
inline vpternlogq64 (zmm31_4, zmm17_4, zmm9_4, table);
inline vpternlogq64 (zmm31_5, zmm17_5, zmm9_5, table);
inline vpternlogq64 (zmm31_6, zmm17_6, zmm9_6, table);
inline vpternlogq64 (zmm31_7, zmm17_7, zmm9_7, table);
(* vpternlogq $0xd2,%zmm22,%zmm3,%zmm4             #! PC = 0x55555558f332 *)
mov table 0xd2@uint8;
inline vpternlogq64 (zmm4_0, zmm3_0, zmm22_0, table);
inline vpternlogq64 (zmm4_1, zmm3_1, zmm22_1, table);
inline vpternlogq64 (zmm4_2, zmm3_2, zmm22_2, table);
inline vpternlogq64 (zmm4_3, zmm3_3, zmm22_3, table);
inline vpternlogq64 (zmm4_4, zmm3_4, zmm22_4, table);
inline vpternlogq64 (zmm4_5, zmm3_5, zmm22_5, table);
inline vpternlogq64 (zmm4_6, zmm3_6, zmm22_6, table);
inline vpternlogq64 (zmm4_7, zmm3_7, zmm22_7, table);
(* vpternlogq $0xd2,%zmm11,%zmm9,%zmm17            #! PC = 0x55555558f339 *)
mov table 0xd2@uint8;
inline vpternlogq64 (zmm17_0, zmm9_0, zmm11_0, table);
inline vpternlogq64 (zmm17_1, zmm9_1, zmm11_1, table);
inline vpternlogq64 (zmm17_2, zmm9_2, zmm11_2, table);
inline vpternlogq64 (zmm17_3, zmm9_3, zmm11_3, table);
inline vpternlogq64 (zmm17_4, zmm9_4, zmm11_4, table);
inline vpternlogq64 (zmm17_5, zmm9_5, zmm11_5, table);
inline vpternlogq64 (zmm17_6, zmm9_6, zmm11_6, table);
inline vpternlogq64 (zmm17_7, zmm9_7, zmm11_7, table);
(* vpternlogq $0xd2,%zmm27,%zmm22,%zmm3            #! PC = 0x55555558f340 *)
mov table 0xd2@uint8;
inline vpternlogq64 (zmm3_0, zmm22_0, zmm27_0, table);
inline vpternlogq64 (zmm3_1, zmm22_1, zmm27_1, table);
inline vpternlogq64 (zmm3_2, zmm22_2, zmm27_2, table);
inline vpternlogq64 (zmm3_3, zmm22_3, zmm27_3, table);
inline vpternlogq64 (zmm3_4, zmm22_4, zmm27_4, table);
inline vpternlogq64 (zmm3_5, zmm22_5, zmm27_5, table);
inline vpternlogq64 (zmm3_6, zmm22_6, zmm27_6, table);
inline vpternlogq64 (zmm3_7, zmm22_7, zmm27_7, table);
(* vpternlogq $0xd2,%zmm13,%zmm11,%zmm9            #! PC = 0x55555558f347 *)
mov table 0xd2@uint8;
inline vpternlogq64 (zmm9_0, zmm11_0, zmm13_0, table);
inline vpternlogq64 (zmm9_1, zmm11_1, zmm13_1, table);
inline vpternlogq64 (zmm9_2, zmm11_2, zmm13_2, table);
inline vpternlogq64 (zmm9_3, zmm11_3, zmm13_3, table);
inline vpternlogq64 (zmm9_4, zmm11_4, zmm13_4, table);
inline vpternlogq64 (zmm9_5, zmm11_5, zmm13_5, table);
inline vpternlogq64 (zmm9_6, zmm11_6, zmm13_6, table);
inline vpternlogq64 (zmm9_7, zmm11_7, zmm13_7, table);
(* vpternlogq $0xd2,%zmm7,%zmm27,%zmm22            #! PC = 0x55555558f34e *)
mov table 0xd2@uint8;
inline vpternlogq64 (zmm22_0, zmm27_0, zmm7_0, table);
inline vpternlogq64 (zmm22_1, zmm27_1, zmm7_1, table);
inline vpternlogq64 (zmm22_2, zmm27_2, zmm7_2, table);
inline vpternlogq64 (zmm22_3, zmm27_3, zmm7_3, table);
inline vpternlogq64 (zmm22_4, zmm27_4, zmm7_4, table);
inline vpternlogq64 (zmm22_5, zmm27_5, zmm7_5, table);
inline vpternlogq64 (zmm22_6, zmm27_6, zmm7_6, table);
inline vpternlogq64 (zmm22_7, zmm27_7, zmm7_7, table);
(* vpxord 0x48(%rsp),%zmm10,%zmm11                 #! EA = L0x7fffffffd500; Value = 0x34df2771ba219db1; PC = 0x55555558f355 *)
xor zmm11_0@uint64 zmm10_0 L0x7fffffffd500;
xor zmm11_1@uint64 zmm10_1 L0x7fffffffd508;
xor zmm11_2@uint64 zmm10_2 L0x7fffffffd510;
xor zmm11_3@uint64 zmm10_3 L0x7fffffffd518;
xor zmm11_4@uint64 zmm10_4 L0x7fffffffd520;
xor zmm11_5@uint64 zmm10_5 L0x7fffffffd528;
xor zmm11_6@uint64 zmm10_6 L0x7fffffffd530;
xor zmm11_7@uint64 zmm10_7 L0x7fffffffd538;
(* vpxord %zmm14,%zmm18,%zmm7                      #! PC = 0x55555558f360 *)
xor zmm7_0@uint64 zmm18_0 zmm14_0;
xor zmm7_1@uint64 zmm18_1 zmm14_1;
xor zmm7_2@uint64 zmm18_2 zmm14_2;
xor zmm7_3@uint64 zmm18_3 zmm14_3;
xor zmm7_4@uint64 zmm18_4 zmm14_4;
xor zmm7_5@uint64 zmm18_5 zmm14_5;
xor zmm7_6@uint64 zmm18_6 zmm14_6;
xor zmm7_7@uint64 zmm18_7 zmm14_7;
(* vmovdqa64 %zmm2,0x108(%rsp)                     #! EA = L0x7fffffffd5c0; PC = 0x55555558f366 *)
mov L0x7fffffffd5c0 zmm2_0;
mov L0x7fffffffd5c8 zmm2_1;
mov L0x7fffffffd5d0 zmm2_2;
mov L0x7fffffffd5d8 zmm2_3;
mov L0x7fffffffd5e0 zmm2_4;
mov L0x7fffffffd5e8 zmm2_5;
mov L0x7fffffffd5f0 zmm2_6;
mov L0x7fffffffd5f8 zmm2_7;
(* vpxord 0x88(%rsp),%zmm18,%zmm18                 #! EA = L0x7fffffffd540; Value = 0x7974c80c866b2fde; PC = 0x55555558f371 *)
xor zmm18_0@uint64 zmm18_0 L0x7fffffffd540;
xor zmm18_1@uint64 zmm18_1 L0x7fffffffd548;
xor zmm18_2@uint64 zmm18_2 L0x7fffffffd550;
xor zmm18_3@uint64 zmm18_3 L0x7fffffffd558;
xor zmm18_4@uint64 zmm18_4 L0x7fffffffd560;
xor zmm18_5@uint64 zmm18_5 L0x7fffffffd568;
xor zmm18_6@uint64 zmm18_6 L0x7fffffffd570;
xor zmm18_7@uint64 zmm18_7 L0x7fffffffd578;
(* vpxord %zmm21,%zmm19,%zmm2                      #! PC = 0x55555558f37c *)
xor zmm2_0@uint64 zmm19_0 zmm21_0;
xor zmm2_1@uint64 zmm19_1 zmm21_1;
xor zmm2_2@uint64 zmm19_2 zmm21_2;
xor zmm2_3@uint64 zmm19_3 zmm21_3;
xor zmm2_4@uint64 zmm19_4 zmm21_4;
xor zmm2_5@uint64 zmm19_5 zmm21_5;
xor zmm2_6@uint64 zmm19_6 zmm21_6;
xor zmm2_7@uint64 zmm19_7 zmm21_7;
(* vpxord 0x8(%rsp),%zmm19,%zmm19                  #! EA = L0x7fffffffd4c0; Value = 0xb51e7f59da5c87ee; PC = 0x55555558f382 *)
xor zmm19_0@uint64 zmm19_0 L0x7fffffffd4c0;
xor zmm19_1@uint64 zmm19_1 L0x7fffffffd4c8;
xor zmm19_2@uint64 zmm19_2 L0x7fffffffd4d0;
xor zmm19_3@uint64 zmm19_3 L0x7fffffffd4d8;
xor zmm19_4@uint64 zmm19_4 L0x7fffffffd4e0;
xor zmm19_5@uint64 zmm19_5 L0x7fffffffd4e8;
xor zmm19_6@uint64 zmm19_6 L0x7fffffffd4f0;
xor zmm19_7@uint64 zmm19_7 L0x7fffffffd4f8;
(* vpxord %zmm5,%zmm1,%zmm5                        #! PC = 0x55555558f38d *)
xor zmm5_0@uint64 zmm1_0 zmm5_0;
xor zmm5_1@uint64 zmm1_1 zmm5_1;
xor zmm5_2@uint64 zmm1_2 zmm5_2;
xor zmm5_3@uint64 zmm1_3 zmm5_3;
xor zmm5_4@uint64 zmm1_4 zmm5_4;
xor zmm5_5@uint64 zmm1_5 zmm5_5;
xor zmm5_6@uint64 zmm1_6 zmm5_6;
xor zmm5_7@uint64 zmm1_7 zmm5_7;
(* vpxord -0x38(%rsp),%zmm10,%zmm13                #! EA = L0x7fffffffd480; Value = 0x2d74723bbb71d307; PC = 0x55555558f393 *)
xor zmm13_0@uint64 zmm10_0 L0x7fffffffd480;
xor zmm13_1@uint64 zmm10_1 L0x7fffffffd488;
xor zmm13_2@uint64 zmm10_2 L0x7fffffffd490;
xor zmm13_3@uint64 zmm10_3 L0x7fffffffd498;
xor zmm13_4@uint64 zmm10_4 L0x7fffffffd4a0;
xor zmm13_5@uint64 zmm10_5 L0x7fffffffd4a8;
xor zmm13_6@uint64 zmm10_6 L0x7fffffffd4b0;
xor zmm13_7@uint64 zmm10_7 L0x7fffffffd4b8;
(* vpxord -0x78(%rsp),%zmm1,%zmm1                  #! EA = L0x7fffffffd440; Value = 0xcb832507780c3286; PC = 0x55555558f39e *)
xor zmm1_0@uint64 zmm1_0 L0x7fffffffd440;
xor zmm1_1@uint64 zmm1_1 L0x7fffffffd448;
xor zmm1_2@uint64 zmm1_2 L0x7fffffffd450;
xor zmm1_3@uint64 zmm1_3 L0x7fffffffd458;
xor zmm1_4@uint64 zmm1_4 L0x7fffffffd460;
xor zmm1_5@uint64 zmm1_5 L0x7fffffffd468;
xor zmm1_6@uint64 zmm1_6 L0x7fffffffd470;
xor zmm1_7@uint64 zmm1_7 L0x7fffffffd478;
(* vprorq $0x1c,%zmm5,%zmm0                        #! PC = 0x55555558f3a9 *)
ror zmm0_0 zmm5_0 0x1c;
ror zmm0_1 zmm5_1 0x1c;
ror zmm0_2 zmm5_2 0x1c;
ror zmm0_3 zmm5_3 0x1c;
ror zmm0_4 zmm5_4 0x1c;
ror zmm0_5 zmm5_5 0x1c;
ror zmm0_6 zmm5_6 0x1c;
ror zmm0_7 zmm5_7 0x1c;
(* vprolq $0x1b,%zmm11,%zmm11                      #! PC = 0x55555558f3b0 *)
rol zmm11_0 zmm11_0 0x1b;
rol zmm11_1 zmm11_1 0x1b;
rol zmm11_2 zmm11_2 0x1b;
rol zmm11_3 zmm11_3 0x1b;
rol zmm11_4 zmm11_4 0x1b;
rol zmm11_5 zmm11_5 0x1b;
rol zmm11_6 zmm11_6 0x1b;
rol zmm11_7 zmm11_7 0x1b;
(* vprorq $0x2,%zmm18,%zmm18                       #! PC = 0x55555558f3b7 *)
ror zmm18_0 zmm18_0 0x2;
ror zmm18_1 zmm18_1 0x2;
ror zmm18_2 zmm18_2 0x2;
ror zmm18_3 zmm18_3 0x2;
ror zmm18_4 zmm18_4 0x2;
ror zmm18_5 zmm18_5 0x2;
ror zmm18_6 zmm18_6 0x2;
ror zmm18_7 zmm18_7 0x2;
(* vprorq $0x9,%zmm19,%zmm19                       #! PC = 0x55555558f3be *)
ror zmm19_0 zmm19_0 0x9;
ror zmm19_1 zmm19_1 0x9;
ror zmm19_2 zmm19_2 0x9;
ror zmm19_3 zmm19_3 0x9;
ror zmm19_4 zmm19_4 0x9;
ror zmm19_5 zmm19_5 0x9;
ror zmm19_6 zmm19_6 0x9;
ror zmm19_7 zmm19_7 0x9;
(* vpxord %zmm6,%zmm12,%zmm6                       #! PC = 0x55555558f3c5 *)
xor zmm6_0@uint64 zmm12_0 zmm6_0;
xor zmm6_1@uint64 zmm12_1 zmm6_1;
xor zmm6_2@uint64 zmm12_2 zmm6_2;
xor zmm6_3@uint64 zmm12_3 zmm6_3;
xor zmm6_4@uint64 zmm12_4 zmm6_4;
xor zmm6_5@uint64 zmm12_5 zmm6_5;
xor zmm6_6@uint64 zmm12_6 zmm6_6;
xor zmm6_7@uint64 zmm12_7 zmm6_7;
(* vpxord %zmm28,%zmm12,%zmm14                     #! PC = 0x55555558f3cb *)
xor zmm14_0@uint64 zmm12_0 zmm28_0;
xor zmm14_1@uint64 zmm12_1 zmm28_1;
xor zmm14_2@uint64 zmm12_2 zmm28_2;
xor zmm14_3@uint64 zmm12_3 zmm28_3;
xor zmm14_4@uint64 zmm12_4 zmm28_4;
xor zmm14_5@uint64 zmm12_5 zmm28_5;
xor zmm14_6@uint64 zmm12_6 zmm28_6;
xor zmm14_7@uint64 zmm12_7 zmm28_7;
(* vprolq $0xa,%zmm6,%zmm6                         #! PC = 0x55555558f3d1 *)
rol zmm6_0 zmm6_0 0xa;
rol zmm6_1 zmm6_1 0xa;
rol zmm6_2 zmm6_2 0xa;
rol zmm6_3 zmm6_3 0xa;
rol zmm6_4 zmm6_4 0xa;
rol zmm6_5 zmm6_5 0xa;
rol zmm6_6 zmm6_6 0xa;
rol zmm6_7 zmm6_7 0xa;
(* vprolq $0xf,%zmm7,%zmm7                         #! PC = 0x55555558f3d8 *)
rol zmm7_0 zmm7_0 0xf;
rol zmm7_1 zmm7_1 0xf;
rol zmm7_2 zmm7_2 0xf;
rol zmm7_3 zmm7_3 0xf;
rol zmm7_4 zmm7_4 0xf;
rol zmm7_5 zmm7_5 0xf;
rol zmm7_6 zmm7_6 0xf;
rol zmm7_7 zmm7_7 0xf;
(* vprorq $0x8,%zmm2,%zmm2                         #! PC = 0x55555558f3df *)
ror zmm2_0 zmm2_0 0x8;
ror zmm2_1 zmm2_1 0x8;
ror zmm2_2 zmm2_2 0x8;
ror zmm2_3 zmm2_3 0x8;
ror zmm2_4 zmm2_4 0x8;
ror zmm2_5 zmm2_5 0x8;
ror zmm2_6 zmm2_6 0x8;
ror zmm2_7 zmm2_7 0x8;
(* vprorq $0x17,%zmm1,%zmm1                        #! PC = 0x55555558f3e6 *)
ror zmm1_0 zmm1_0 0x17;
ror zmm1_1 zmm1_1 0x17;
ror zmm1_2 zmm1_2 0x17;
ror zmm1_3 zmm1_3 0x17;
ror zmm1_4 zmm1_4 0x17;
ror zmm1_5 zmm1_5 0x17;
ror zmm1_6 zmm1_6 0x17;
ror zmm1_7 zmm1_7 0x17;
(* vprolq $0x2,%zmm14,%zmm14                       #! PC = 0x55555558f3ed *)
rol zmm14_0 zmm14_0 0x2;
rol zmm14_1 zmm14_1 0x2;
rol zmm14_2 zmm14_2 0x2;
rol zmm14_3 zmm14_3 0x2;
rol zmm14_4 zmm14_4 0x2;
rol zmm14_5 zmm14_5 0x2;
rol zmm14_6 zmm14_6 0x2;
rol zmm14_7 zmm14_7 0x2;
(* vprorq $0x19,%zmm13,%zmm13                      #! PC = 0x55555558f3f4 *)
ror zmm13_0 zmm13_0 0x19;
ror zmm13_1 zmm13_1 0x19;
ror zmm13_2 zmm13_2 0x19;
ror zmm13_3 zmm13_3 0x19;
ror zmm13_4 zmm13_4 0x19;
ror zmm13_5 zmm13_5 0x19;
ror zmm13_6 zmm13_6 0x19;
ror zmm13_7 zmm13_7 0x19;
(* vpternlogq $0xd2,%zmm16,%zmm30,%zmm24           #! PC = 0x55555558f3fb *)
mov table 0xd2@uint8;
inline vpternlogq64 (zmm24_0, zmm30_0, zmm16_0, table);
inline vpternlogq64 (zmm24_1, zmm30_1, zmm16_1, table);
inline vpternlogq64 (zmm24_2, zmm30_2, zmm16_2, table);
inline vpternlogq64 (zmm24_3, zmm30_3, zmm16_3, table);
inline vpternlogq64 (zmm24_4, zmm30_4, zmm16_4, table);
inline vpternlogq64 (zmm24_5, zmm30_5, zmm16_5, table);
inline vpternlogq64 (zmm24_6, zmm30_6, zmm16_6, table);
inline vpternlogq64 (zmm24_7, zmm30_7, zmm16_7, table);
(* vmovdqa64 %zmm11,%zmm5                          #! PC = 0x55555558f402 *)
mov zmm5_0 zmm11_0;
mov zmm5_1 zmm11_1;
mov zmm5_2 zmm11_2;
mov zmm5_3 zmm11_3;
mov zmm5_4 zmm11_4;
mov zmm5_5 zmm11_5;
mov zmm5_6 zmm11_6;
mov zmm5_7 zmm11_7;
(* vpternlogq $0xd2,%zmm29,%zmm16,%zmm30           #! PC = 0x55555558f408 *)
mov table 0xd2@uint8;
inline vpternlogq64 (zmm30_0, zmm16_0, zmm29_0, table);
inline vpternlogq64 (zmm30_1, zmm16_1, zmm29_1, table);
inline vpternlogq64 (zmm30_2, zmm16_2, zmm29_2, table);
inline vpternlogq64 (zmm30_3, zmm16_3, zmm29_3, table);
inline vpternlogq64 (zmm30_4, zmm16_4, zmm29_4, table);
inline vpternlogq64 (zmm30_5, zmm16_5, zmm29_5, table);
inline vpternlogq64 (zmm30_6, zmm16_6, zmm29_6, table);
inline vpternlogq64 (zmm30_7, zmm16_7, zmm29_7, table);
(* vmovdqa64 %zmm0,%zmm27                          #! PC = 0x55555558f40f *)
mov zmm27_0 zmm0_0;
mov zmm27_1 zmm0_1;
mov zmm27_2 zmm0_2;
mov zmm27_3 zmm0_3;
mov zmm27_4 zmm0_4;
mov zmm27_5 zmm0_5;
mov zmm27_6 zmm0_6;
mov zmm27_7 zmm0_7;
(* vmovdqa64 %zmm18,%zmm16                         #! PC = 0x55555558f415 *)
mov zmm16_0 zmm18_0;
mov zmm16_1 zmm18_1;
mov zmm16_2 zmm18_2;
mov zmm16_3 zmm18_3;
mov zmm16_4 zmm18_4;
mov zmm16_5 zmm18_5;
mov zmm16_6 zmm18_6;
mov zmm16_7 zmm18_7;
(* vmovdqa64 %zmm19,%zmm29                         #! PC = 0x55555558f41b *)
mov zmm29_0 zmm19_0;
mov zmm29_1 zmm19_1;
mov zmm29_2 zmm19_2;
mov zmm29_3 zmm19_3;
mov zmm29_4 zmm19_4;
mov zmm29_5 zmm19_5;
mov zmm29_6 zmm19_6;
mov zmm29_7 zmm19_7;
(* vpternlogq $0xd2,%zmm7,%zmm6,%zmm27             #! PC = 0x55555558f421 *)
mov table 0xd2@uint8;
inline vpternlogq64 (zmm27_0, zmm6_0, zmm7_0, table);
inline vpternlogq64 (zmm27_1, zmm6_1, zmm7_1, table);
inline vpternlogq64 (zmm27_2, zmm6_2, zmm7_2, table);
inline vpternlogq64 (zmm27_3, zmm6_3, zmm7_3, table);
inline vpternlogq64 (zmm27_4, zmm6_4, zmm7_4, table);
inline vpternlogq64 (zmm27_5, zmm6_5, zmm7_5, table);
inline vpternlogq64 (zmm27_6, zmm6_6, zmm7_6, table);
inline vpternlogq64 (zmm27_7, zmm6_7, zmm7_7, table);
(* vpternlogq $0xd2,%zmm1,%zmm13,%zmm29            #! PC = 0x55555558f428 *)
mov table 0xd2@uint8;
inline vpternlogq64 (zmm29_0, zmm13_0, zmm1_0, table);
inline vpternlogq64 (zmm29_1, zmm13_1, zmm1_1, table);
inline vpternlogq64 (zmm29_2, zmm13_2, zmm1_2, table);
inline vpternlogq64 (zmm29_3, zmm13_3, zmm1_3, table);
inline vpternlogq64 (zmm29_4, zmm13_4, zmm1_4, table);
inline vpternlogq64 (zmm29_5, zmm13_5, zmm1_5, table);
inline vpternlogq64 (zmm29_6, zmm13_6, zmm1_6, table);
inline vpternlogq64 (zmm29_7, zmm13_7, zmm1_7, table);
(* vpternlogq $0xd2,%zmm6,%zmm0,%zmm5              #! PC = 0x55555558f42f *)
mov table 0xd2@uint8;
inline vpternlogq64 (zmm5_0, zmm0_0, zmm6_0, table);
inline vpternlogq64 (zmm5_1, zmm0_1, zmm6_1, table);
inline vpternlogq64 (zmm5_2, zmm0_2, zmm6_2, table);
inline vpternlogq64 (zmm5_3, zmm0_3, zmm6_3, table);
inline vpternlogq64 (zmm5_4, zmm0_4, zmm6_4, table);
inline vpternlogq64 (zmm5_5, zmm0_5, zmm6_5, table);
inline vpternlogq64 (zmm5_6, zmm0_6, zmm6_6, table);
inline vpternlogq64 (zmm5_7, zmm0_7, zmm6_7, table);
(* vpternlogq $0xd2,%zmm13,%zmm19,%zmm16           #! PC = 0x55555558f436 *)
mov table 0xd2@uint8;
inline vpternlogq64 (zmm16_0, zmm19_0, zmm13_0, table);
inline vpternlogq64 (zmm16_1, zmm19_1, zmm13_1, table);
inline vpternlogq64 (zmm16_2, zmm19_2, zmm13_2, table);
inline vpternlogq64 (zmm16_3, zmm19_3, zmm13_3, table);
inline vpternlogq64 (zmm16_4, zmm19_4, zmm13_4, table);
inline vpternlogq64 (zmm16_5, zmm19_5, zmm13_5, table);
inline vpternlogq64 (zmm16_6, zmm19_6, zmm13_6, table);
inline vpternlogq64 (zmm16_7, zmm19_7, zmm13_7, table);
(* vpternlogq $0xd2,%zmm2,%zmm7,%zmm6              #! PC = 0x55555558f43d *)
mov table 0xd2@uint8;
inline vpternlogq64 (zmm6_0, zmm7_0, zmm2_0, table);
inline vpternlogq64 (zmm6_1, zmm7_1, zmm2_1, table);
inline vpternlogq64 (zmm6_2, zmm7_2, zmm2_2, table);
inline vpternlogq64 (zmm6_3, zmm7_3, zmm2_3, table);
inline vpternlogq64 (zmm6_4, zmm7_4, zmm2_4, table);
inline vpternlogq64 (zmm6_5, zmm7_5, zmm2_5, table);
inline vpternlogq64 (zmm6_6, zmm7_6, zmm2_6, table);
inline vpternlogq64 (zmm6_7, zmm7_7, zmm2_7, table);
(* vpternlogq $0xd2,%zmm14,%zmm1,%zmm13            #! PC = 0x55555558f444 *)
mov table 0xd2@uint8;
inline vpternlogq64 (zmm13_0, zmm1_0, zmm14_0, table);
inline vpternlogq64 (zmm13_1, zmm1_1, zmm14_1, table);
inline vpternlogq64 (zmm13_2, zmm1_2, zmm14_2, table);
inline vpternlogq64 (zmm13_3, zmm1_3, zmm14_3, table);
inline vpternlogq64 (zmm13_4, zmm1_4, zmm14_4, table);
inline vpternlogq64 (zmm13_5, zmm1_5, zmm14_5, table);
inline vpternlogq64 (zmm13_6, zmm1_6, zmm14_6, table);
inline vpternlogq64 (zmm13_7, zmm1_7, zmm14_7, table);
(* vpternlogq $0xd2,%zmm11,%zmm2,%zmm7             #! PC = 0x55555558f44b *)
mov table 0xd2@uint8;
inline vpternlogq64 (zmm7_0, zmm2_0, zmm11_0, table);
inline vpternlogq64 (zmm7_1, zmm2_1, zmm11_1, table);
inline vpternlogq64 (zmm7_2, zmm2_2, zmm11_2, table);
inline vpternlogq64 (zmm7_3, zmm2_3, zmm11_3, table);
inline vpternlogq64 (zmm7_4, zmm2_4, zmm11_4, table);
inline vpternlogq64 (zmm7_5, zmm2_5, zmm11_5, table);
inline vpternlogq64 (zmm7_6, zmm2_6, zmm11_6, table);
inline vpternlogq64 (zmm7_7, zmm2_7, zmm11_7, table);
(* vpternlogq $0xd2,%zmm18,%zmm14,%zmm1            #! PC = 0x55555558f452 *)
mov table 0xd2@uint8;
inline vpternlogq64 (zmm1_0, zmm14_0, zmm18_0, table);
inline vpternlogq64 (zmm1_1, zmm14_1, zmm18_1, table);
inline vpternlogq64 (zmm1_2, zmm14_2, zmm18_2, table);
inline vpternlogq64 (zmm1_3, zmm14_3, zmm18_3, table);
inline vpternlogq64 (zmm1_4, zmm14_4, zmm18_4, table);
inline vpternlogq64 (zmm1_5, zmm14_5, zmm18_5, table);
inline vpternlogq64 (zmm1_6, zmm14_6, zmm18_6, table);
inline vpternlogq64 (zmm1_7, zmm14_7, zmm18_7, table);
(* vmovdqa64 %zmm20,0xc8(%rsp)                     #! EA = L0x7fffffffd580; PC = 0x55555558f459 *)
mov L0x7fffffffd580 zmm20_0;
mov L0x7fffffffd588 zmm20_1;
mov L0x7fffffffd590 zmm20_2;
mov L0x7fffffffd598 zmm20_3;
mov L0x7fffffffd5a0 zmm20_4;
mov L0x7fffffffd5a8 zmm20_5;
mov L0x7fffffffd5b0 zmm20_6;
mov L0x7fffffffd5b8 zmm20_7;
(* vmovdqa64 %zmm15,%zmm26                         #! PC = 0x55555558f464 *)
mov zmm26_0 zmm15_0;
mov zmm26_1 zmm15_1;
mov zmm26_2 zmm15_2;
mov zmm26_3 zmm15_3;
mov zmm26_4 zmm15_4;
mov zmm26_5 zmm15_5;
mov zmm26_6 zmm15_6;
mov zmm26_7 zmm15_7;
(* vpternlogq $0xd2,%zmm0,%zmm11,%zmm2             #! PC = 0x55555558f46a *)
mov table 0xd2@uint8;
inline vpternlogq64 (zmm2_0, zmm11_0, zmm0_0, table);
inline vpternlogq64 (zmm2_1, zmm11_1, zmm0_1, table);
inline vpternlogq64 (zmm2_2, zmm11_2, zmm0_2, table);
inline vpternlogq64 (zmm2_3, zmm11_3, zmm0_3, table);
inline vpternlogq64 (zmm2_4, zmm11_4, zmm0_4, table);
inline vpternlogq64 (zmm2_5, zmm11_5, zmm0_5, table);
inline vpternlogq64 (zmm2_6, zmm11_6, zmm0_6, table);
inline vpternlogq64 (zmm2_7, zmm11_7, zmm0_7, table);
(* vpternlogq $0xd2,%zmm19,%zmm18,%zmm14           #! PC = 0x55555558f471 *)
mov table 0xd2@uint8;
inline vpternlogq64 (zmm14_0, zmm18_0, zmm19_0, table);
inline vpternlogq64 (zmm14_1, zmm18_1, zmm19_1, table);
inline vpternlogq64 (zmm14_2, zmm18_2, zmm19_2, table);
inline vpternlogq64 (zmm14_3, zmm18_3, zmm19_3, table);
inline vpternlogq64 (zmm14_4, zmm18_4, zmm19_4, table);
inline vpternlogq64 (zmm14_5, zmm18_5, zmm19_5, table);
inline vpternlogq64 (zmm14_6, zmm18_6, zmm19_6, table);
inline vpternlogq64 (zmm14_7, zmm18_7, zmm19_7, table);
(* movabs $0x8000000080008081,%rbx                 #! PC = 0x55555558f478 *)
mov rbx 0x8000000080008081@uint64;
(* movabs $0x8000000000008080,%r12                 #! PC = 0x55555558f482 *)
mov r12 0x8000000000008080@uint64;
(* mov    $0x80000001,%r13d                        #! PC = 0x55555558f48c *)
mov r13 0x80000001@uint64;
(* movabs $0x8000000080008008,%r15                 #! PC = 0x55555558f492 *)
mov r15 0x8000000080008008@uint64;
(* #jne    0x55555558f580 <KeccakP1600times8_PermuteAll_24rounds+10080>#! PC = 0x55555558f4a0 *)
#jne    0x55555558f580 <KeccakP1600times8_PermuteAll_24rounds+10080>#! 0x55555558f4a0 = 0x55555558f4a0;
(* vmovdqa64 0x148(%rsp),%zmm0                     #! EA = L0x7fffffffd600; Value = 0xdbed9268bfa1d876; PC = 0x55555558f4a6 *)
mov zmm0_0 L0x7fffffffd600;
mov zmm0_1 L0x7fffffffd608;
mov zmm0_2 L0x7fffffffd610;
mov zmm0_3 L0x7fffffffd618;
mov zmm0_4 L0x7fffffffd620;
mov zmm0_5 L0x7fffffffd628;
mov zmm0_6 L0x7fffffffd630;
mov zmm0_7 L0x7fffffffd638;
(* vmovdqa64 %zmm15,(%rax)                         #! EA = L0x7fffffffd6c0; PC = 0x55555558f4b1 *)
mov L0x7fffffffd6c0 zmm15_0;
mov L0x7fffffffd6c8 zmm15_1;
mov L0x7fffffffd6d0 zmm15_2;
mov L0x7fffffffd6d8 zmm15_3;
mov L0x7fffffffd6e0 zmm15_4;
mov L0x7fffffffd6e8 zmm15_5;
mov L0x7fffffffd6f0 zmm15_6;
mov L0x7fffffffd6f8 zmm15_7;
(* vmovdqa64 %zmm0,0x80(%rax)                      #! EA = L0x7fffffffd740; PC = 0x55555558f4b7 *)
mov L0x7fffffffd740 zmm0_0;
mov L0x7fffffffd748 zmm0_1;
mov L0x7fffffffd750 zmm0_2;
mov L0x7fffffffd758 zmm0_3;
mov L0x7fffffffd760 zmm0_4;
mov L0x7fffffffd768 zmm0_5;
mov L0x7fffffffd770 zmm0_6;
mov L0x7fffffffd778 zmm0_7;
(* vmovdqa64 0x108(%rsp),%zmm0                     #! EA = L0x7fffffffd5c0; Value = 0x9c1d8499f04d3347; PC = 0x55555558f4be *)
mov zmm0_0 L0x7fffffffd5c0;
mov zmm0_1 L0x7fffffffd5c8;
mov zmm0_2 L0x7fffffffd5d0;
mov zmm0_3 L0x7fffffffd5d8;
mov zmm0_4 L0x7fffffffd5e0;
mov zmm0_5 L0x7fffffffd5e8;
mov zmm0_6 L0x7fffffffd5f0;
mov zmm0_7 L0x7fffffffd5f8;
(* vmovdqa64 %zmm20,0x40(%rax)                     #! EA = L0x7fffffffd700; PC = 0x55555558f4c9 *)
mov L0x7fffffffd700 zmm20_0;
mov L0x7fffffffd708 zmm20_1;
mov L0x7fffffffd710 zmm20_2;
mov L0x7fffffffd718 zmm20_3;
mov L0x7fffffffd720 zmm20_4;
mov L0x7fffffffd728 zmm20_5;
mov L0x7fffffffd730 zmm20_6;
mov L0x7fffffffd738 zmm20_7;
(* vmovdqa64 %zmm24,0xc0(%rax)                     #! EA = L0x7fffffffd780; PC = 0x55555558f4d0 *)
mov L0x7fffffffd780 zmm24_0;
mov L0x7fffffffd788 zmm24_1;
mov L0x7fffffffd790 zmm24_2;
mov L0x7fffffffd798 zmm24_3;
mov L0x7fffffffd7a0 zmm24_4;
mov L0x7fffffffd7a8 zmm24_5;
mov L0x7fffffffd7b0 zmm24_6;
mov L0x7fffffffd7b8 zmm24_7;
(* vmovdqa64 %zmm30,0x100(%rax)                    #! EA = L0x7fffffffd7c0; PC = 0x55555558f4d7 *)
mov L0x7fffffffd7c0 zmm30_0;
mov L0x7fffffffd7c8 zmm30_1;
mov L0x7fffffffd7d0 zmm30_2;
mov L0x7fffffffd7d8 zmm30_3;
mov L0x7fffffffd7e0 zmm30_4;
mov L0x7fffffffd7e8 zmm30_5;
mov L0x7fffffffd7f0 zmm30_6;
mov L0x7fffffffd7f8 zmm30_7;
(* vmovdqa64 %zmm23,0x140(%rax)                    #! EA = L0x7fffffffd800; PC = 0x55555558f4de *)
mov L0x7fffffffd800 zmm23_0;
mov L0x7fffffffd808 zmm23_1;
mov L0x7fffffffd810 zmm23_2;
mov L0x7fffffffd818 zmm23_3;
mov L0x7fffffffd820 zmm23_4;
mov L0x7fffffffd828 zmm23_5;
mov L0x7fffffffd830 zmm23_6;
mov L0x7fffffffd838 zmm23_7;
(* vmovdqa64 %zmm25,0x180(%rax)                    #! EA = L0x7fffffffd840; PC = 0x55555558f4e5 *)
mov L0x7fffffffd840 zmm25_0;
mov L0x7fffffffd848 zmm25_1;
mov L0x7fffffffd850 zmm25_2;
mov L0x7fffffffd858 zmm25_3;
mov L0x7fffffffd860 zmm25_4;
mov L0x7fffffffd868 zmm25_5;
mov L0x7fffffffd870 zmm25_6;
mov L0x7fffffffd878 zmm25_7;
(* vmovdqa64 %zmm31,0x1c0(%rax)                    #! EA = L0x7fffffffd880; PC = 0x55555558f4ec *)
mov L0x7fffffffd880 zmm31_0;
mov L0x7fffffffd888 zmm31_1;
mov L0x7fffffffd890 zmm31_2;
mov L0x7fffffffd898 zmm31_3;
mov L0x7fffffffd8a0 zmm31_4;
mov L0x7fffffffd8a8 zmm31_5;
mov L0x7fffffffd8b0 zmm31_6;
mov L0x7fffffffd8b8 zmm31_7;
(* vmovdqa64 %zmm17,0x200(%rax)                    #! EA = L0x7fffffffd8c0; PC = 0x55555558f4f3 *)
mov L0x7fffffffd8c0 zmm17_0;
mov L0x7fffffffd8c8 zmm17_1;
mov L0x7fffffffd8d0 zmm17_2;
mov L0x7fffffffd8d8 zmm17_3;
mov L0x7fffffffd8e0 zmm17_4;
mov L0x7fffffffd8e8 zmm17_5;
mov L0x7fffffffd8f0 zmm17_6;
mov L0x7fffffffd8f8 zmm17_7;
(* vmovdqa64 %zmm9,0x240(%rax)                     #! EA = L0x7fffffffd900; PC = 0x55555558f4fa *)
mov L0x7fffffffd900 zmm9_0;
mov L0x7fffffffd908 zmm9_1;
mov L0x7fffffffd910 zmm9_2;
mov L0x7fffffffd918 zmm9_3;
mov L0x7fffffffd920 zmm9_4;
mov L0x7fffffffd928 zmm9_5;
mov L0x7fffffffd930 zmm9_6;
mov L0x7fffffffd938 zmm9_7;
(* vmovdqa64 %zmm8,0x280(%rax)                     #! EA = L0x7fffffffd940; PC = 0x55555558f501 *)
mov L0x7fffffffd940 zmm8_0;
mov L0x7fffffffd948 zmm8_1;
mov L0x7fffffffd950 zmm8_2;
mov L0x7fffffffd958 zmm8_3;
mov L0x7fffffffd960 zmm8_4;
mov L0x7fffffffd968 zmm8_5;
mov L0x7fffffffd970 zmm8_6;
mov L0x7fffffffd978 zmm8_7;
(* vmovdqa64 %zmm0,0x2c0(%rax)                     #! EA = L0x7fffffffd980; PC = 0x55555558f508 *)
mov L0x7fffffffd980 zmm0_0;
mov L0x7fffffffd988 zmm0_1;
mov L0x7fffffffd990 zmm0_2;
mov L0x7fffffffd998 zmm0_3;
mov L0x7fffffffd9a0 zmm0_4;
mov L0x7fffffffd9a8 zmm0_5;
mov L0x7fffffffd9b0 zmm0_6;
mov L0x7fffffffd9b8 zmm0_7;
(* vmovdqa64 %zmm4,0x300(%rax)                     #! EA = L0x7fffffffd9c0; PC = 0x55555558f50f *)
mov L0x7fffffffd9c0 zmm4_0;
mov L0x7fffffffd9c8 zmm4_1;
mov L0x7fffffffd9d0 zmm4_2;
mov L0x7fffffffd9d8 zmm4_3;
mov L0x7fffffffd9e0 zmm4_4;
mov L0x7fffffffd9e8 zmm4_5;
mov L0x7fffffffd9f0 zmm4_6;
mov L0x7fffffffd9f8 zmm4_7;
(* vmovdqa64 %zmm3,0x340(%rax)                     #! EA = L0x7fffffffda00; PC = 0x55555558f516 *)
mov L0x7fffffffda00 zmm3_0;
mov L0x7fffffffda08 zmm3_1;
mov L0x7fffffffda10 zmm3_2;
mov L0x7fffffffda18 zmm3_3;
mov L0x7fffffffda20 zmm3_4;
mov L0x7fffffffda28 zmm3_5;
mov L0x7fffffffda30 zmm3_6;
mov L0x7fffffffda38 zmm3_7;
(* vmovdqa64 %zmm22,0x380(%rax)                    #! EA = L0x7fffffffda40; PC = 0x55555558f51d *)
mov L0x7fffffffda40 zmm22_0;
mov L0x7fffffffda48 zmm22_1;
mov L0x7fffffffda50 zmm22_2;
mov L0x7fffffffda58 zmm22_3;
mov L0x7fffffffda60 zmm22_4;
mov L0x7fffffffda68 zmm22_5;
mov L0x7fffffffda70 zmm22_6;
mov L0x7fffffffda78 zmm22_7;
(* vmovdqa64 %zmm5,0x3c0(%rax)                     #! EA = L0x7fffffffda80; PC = 0x55555558f524 *)
mov L0x7fffffffda80 zmm5_0;
mov L0x7fffffffda88 zmm5_1;
mov L0x7fffffffda90 zmm5_2;
mov L0x7fffffffda98 zmm5_3;
mov L0x7fffffffdaa0 zmm5_4;
mov L0x7fffffffdaa8 zmm5_5;
mov L0x7fffffffdab0 zmm5_6;
mov L0x7fffffffdab8 zmm5_7;
(* vmovdqa64 %zmm27,0x400(%rax)                    #! EA = L0x7fffffffdac0; PC = 0x55555558f52b *)
mov L0x7fffffffdac0 zmm27_0;
mov L0x7fffffffdac8 zmm27_1;
mov L0x7fffffffdad0 zmm27_2;
mov L0x7fffffffdad8 zmm27_3;
mov L0x7fffffffdae0 zmm27_4;
mov L0x7fffffffdae8 zmm27_5;
mov L0x7fffffffdaf0 zmm27_6;
mov L0x7fffffffdaf8 zmm27_7;
(* vmovdqa64 %zmm6,0x440(%rax)                     #! EA = L0x7fffffffdb00; PC = 0x55555558f532 *)
mov L0x7fffffffdb00 zmm6_0;
mov L0x7fffffffdb08 zmm6_1;
mov L0x7fffffffdb10 zmm6_2;
mov L0x7fffffffdb18 zmm6_3;
mov L0x7fffffffdb20 zmm6_4;
mov L0x7fffffffdb28 zmm6_5;
mov L0x7fffffffdb30 zmm6_6;
mov L0x7fffffffdb38 zmm6_7;
(* vmovdqa64 %zmm7,0x480(%rax)                     #! EA = L0x7fffffffdb40; PC = 0x55555558f539 *)
mov L0x7fffffffdb40 zmm7_0;
mov L0x7fffffffdb48 zmm7_1;
mov L0x7fffffffdb50 zmm7_2;
mov L0x7fffffffdb58 zmm7_3;
mov L0x7fffffffdb60 zmm7_4;
mov L0x7fffffffdb68 zmm7_5;
mov L0x7fffffffdb70 zmm7_6;
mov L0x7fffffffdb78 zmm7_7;
(* vmovdqa64 %zmm2,0x4c0(%rax)                     #! EA = L0x7fffffffdb80; PC = 0x55555558f540 *)
mov L0x7fffffffdb80 zmm2_0;
mov L0x7fffffffdb88 zmm2_1;
mov L0x7fffffffdb90 zmm2_2;
mov L0x7fffffffdb98 zmm2_3;
mov L0x7fffffffdba0 zmm2_4;
mov L0x7fffffffdba8 zmm2_5;
mov L0x7fffffffdbb0 zmm2_6;
mov L0x7fffffffdbb8 zmm2_7;
(* vmovdqa64 %zmm16,0x500(%rax)                    #! EA = L0x7fffffffdbc0; PC = 0x55555558f547 *)
mov L0x7fffffffdbc0 zmm16_0;
mov L0x7fffffffdbc8 zmm16_1;
mov L0x7fffffffdbd0 zmm16_2;
mov L0x7fffffffdbd8 zmm16_3;
mov L0x7fffffffdbe0 zmm16_4;
mov L0x7fffffffdbe8 zmm16_5;
mov L0x7fffffffdbf0 zmm16_6;
mov L0x7fffffffdbf8 zmm16_7;
(* vmovdqa64 %zmm29,0x540(%rax)                    #! EA = L0x7fffffffdc00; PC = 0x55555558f54e *)
mov L0x7fffffffdc00 zmm29_0;
mov L0x7fffffffdc08 zmm29_1;
mov L0x7fffffffdc10 zmm29_2;
mov L0x7fffffffdc18 zmm29_3;
mov L0x7fffffffdc20 zmm29_4;
mov L0x7fffffffdc28 zmm29_5;
mov L0x7fffffffdc30 zmm29_6;
mov L0x7fffffffdc38 zmm29_7;
(* vmovdqa64 %zmm13,0x580(%rax)                    #! EA = L0x7fffffffdc40; PC = 0x55555558f555 *)
mov L0x7fffffffdc40 zmm13_0;
mov L0x7fffffffdc48 zmm13_1;
mov L0x7fffffffdc50 zmm13_2;
mov L0x7fffffffdc58 zmm13_3;
mov L0x7fffffffdc60 zmm13_4;
mov L0x7fffffffdc68 zmm13_5;
mov L0x7fffffffdc70 zmm13_6;
mov L0x7fffffffdc78 zmm13_7;
(* vmovdqa64 %zmm1,0x5c0(%rax)                     #! EA = L0x7fffffffdc80; PC = 0x55555558f55c *)
mov L0x7fffffffdc80 zmm1_0;
mov L0x7fffffffdc88 zmm1_1;
mov L0x7fffffffdc90 zmm1_2;
mov L0x7fffffffdc98 zmm1_3;
mov L0x7fffffffdca0 zmm1_4;
mov L0x7fffffffdca8 zmm1_5;
mov L0x7fffffffdcb0 zmm1_6;
mov L0x7fffffffdcb8 zmm1_7;
(* vmovdqa64 %zmm14,0x600(%rax)                    #! EA = L0x7fffffffdcc0; PC = 0x55555558f563 *)
mov L0x7fffffffdcc0 zmm14_0;
mov L0x7fffffffdcc8 zmm14_1;
mov L0x7fffffffdcd0 zmm14_2;
mov L0x7fffffffdcd8 zmm14_3;
mov L0x7fffffffdce0 zmm14_4;
mov L0x7fffffffdce8 zmm14_5;
mov L0x7fffffffdcf0 zmm14_6;
mov L0x7fffffffdcf8 zmm14_7;
(* vzeroupper                                      #! PC = 0x55555558f56a *)
mov zmm0_2 0@uint64;
mov zmm0_3 0@uint64;
mov zmm0_4 0@uint64;
mov zmm0_5 0@uint64;
mov zmm0_6 0@uint64;
mov zmm0_7 0@uint64;
mov zmm1_2 0@uint64;
mov zmm1_3 0@uint64;
mov zmm1_4 0@uint64;
mov zmm1_5 0@uint64;
mov zmm1_6 0@uint64;
mov zmm1_7 0@uint64;
mov zmm2_2 0@uint64;
mov zmm2_3 0@uint64;
mov zmm2_4 0@uint64;
mov zmm2_5 0@uint64;
mov zmm2_6 0@uint64;
mov zmm2_7 0@uint64;
mov zmm3_2 0@uint64;
mov zmm3_3 0@uint64;
mov zmm3_4 0@uint64;
mov zmm3_5 0@uint64;
mov zmm3_6 0@uint64;
mov zmm3_7 0@uint64;
mov zmm4_2 0@uint64;
mov zmm4_3 0@uint64;
mov zmm4_4 0@uint64;
mov zmm4_5 0@uint64;
mov zmm4_6 0@uint64;
mov zmm4_7 0@uint64;
mov zmm5_2 0@uint64;
mov zmm5_3 0@uint64;
mov zmm5_4 0@uint64;
mov zmm5_5 0@uint64;
mov zmm5_6 0@uint64;
mov zmm5_7 0@uint64;
mov zmm6_2 0@uint64;
mov zmm6_3 0@uint64;
mov zmm6_4 0@uint64;
mov zmm6_5 0@uint64;
mov zmm6_6 0@uint64;
mov zmm6_7 0@uint64;
mov zmm7_2 0@uint64;
mov zmm7_3 0@uint64;
mov zmm7_4 0@uint64;
mov zmm7_5 0@uint64;
mov zmm7_6 0@uint64;
mov zmm7_7 0@uint64;
mov zmm8_2 0@uint64;
mov zmm8_3 0@uint64;
mov zmm8_4 0@uint64;
mov zmm8_5 0@uint64;
mov zmm8_6 0@uint64;
mov zmm8_7 0@uint64;
mov zmm9_2 0@uint64;
mov zmm9_3 0@uint64;
mov zmm9_4 0@uint64;
mov zmm9_5 0@uint64;
mov zmm9_6 0@uint64;
mov zmm9_7 0@uint64;
mov zmm10_2 0@uint64;
mov zmm10_3 0@uint64;
mov zmm10_4 0@uint64;
mov zmm10_5 0@uint64;
mov zmm10_6 0@uint64;
mov zmm10_7 0@uint64;
mov zmm11_2 0@uint64;
mov zmm11_3 0@uint64;
mov zmm11_4 0@uint64;
mov zmm11_5 0@uint64;
mov zmm11_6 0@uint64;
mov zmm11_7 0@uint64;
mov zmm12_2 0@uint64;
mov zmm12_3 0@uint64;
mov zmm12_4 0@uint64;
mov zmm12_5 0@uint64;
mov zmm12_6 0@uint64;
mov zmm12_7 0@uint64;
mov zmm13_2 0@uint64;
mov zmm13_3 0@uint64;
mov zmm13_4 0@uint64;
mov zmm13_5 0@uint64;
mov zmm13_6 0@uint64;
mov zmm13_7 0@uint64;
mov zmm14_2 0@uint64;
mov zmm14_3 0@uint64;
mov zmm14_4 0@uint64;
mov zmm14_5 0@uint64;
mov zmm14_6 0@uint64;
mov zmm14_7 0@uint64;
(* #! <- SP = 0x7fffffffd678 *)
#! 0x7fffffffd678 = 0x7fffffffd678;
(* #ret                                            #! PC = 0x55555558f57b *)
#ret                                            #! 0x55555558f57b = 0x55555558f57b;

(* ===== Outputs ===== *)

mov a00 L0x7fffffffd6c0;
mov b00 L0x7fffffffd6c8;
mov c00 L0x7fffffffd6d0;
mov d00 L0x7fffffffd6d8;
mov e00 L0x7fffffffd6e0;
mov f00 L0x7fffffffd6e8;
mov g00 L0x7fffffffd6f0;
mov h00 L0x7fffffffd6f8;
mov a01 L0x7fffffffd700;
mov b01 L0x7fffffffd708;
mov c01 L0x7fffffffd710;
mov d01 L0x7fffffffd718;
mov e01 L0x7fffffffd720;
mov f01 L0x7fffffffd728;
mov g01 L0x7fffffffd730;
mov h01 L0x7fffffffd738;
mov a02 L0x7fffffffd740;
mov b02 L0x7fffffffd748;
mov c02 L0x7fffffffd750;
mov d02 L0x7fffffffd758;
mov e02 L0x7fffffffd760;
mov f02 L0x7fffffffd768;
mov g02 L0x7fffffffd770;
mov h02 L0x7fffffffd778;
mov a03 L0x7fffffffd780;
mov b03 L0x7fffffffd788;
mov c03 L0x7fffffffd790;
mov d03 L0x7fffffffd798;
mov e03 L0x7fffffffd7a0;
mov f03 L0x7fffffffd7a8;
mov g03 L0x7fffffffd7b0;
mov h03 L0x7fffffffd7b8;
mov a04 L0x7fffffffd7c0;
mov b04 L0x7fffffffd7c8;
mov c04 L0x7fffffffd7d0;
mov d04 L0x7fffffffd7d8;
mov e04 L0x7fffffffd7e0;
mov f04 L0x7fffffffd7e8;
mov g04 L0x7fffffffd7f0;
mov h04 L0x7fffffffd7f8;
mov a05 L0x7fffffffd800;
mov b05 L0x7fffffffd808;
mov c05 L0x7fffffffd810;
mov d05 L0x7fffffffd818;
mov e05 L0x7fffffffd820;
mov f05 L0x7fffffffd828;
mov g05 L0x7fffffffd830;
mov h05 L0x7fffffffd838;
mov a06 L0x7fffffffd840;
mov b06 L0x7fffffffd848;
mov c06 L0x7fffffffd850;
mov d06 L0x7fffffffd858;
mov e06 L0x7fffffffd860;
mov f06 L0x7fffffffd868;
mov g06 L0x7fffffffd870;
mov h06 L0x7fffffffd878;
mov a07 L0x7fffffffd880;
mov b07 L0x7fffffffd888;
mov c07 L0x7fffffffd890;
mov d07 L0x7fffffffd898;
mov e07 L0x7fffffffd8a0;
mov f07 L0x7fffffffd8a8;
mov g07 L0x7fffffffd8b0;
mov h07 L0x7fffffffd8b8;
mov a08 L0x7fffffffd8c0;
mov b08 L0x7fffffffd8c8;
mov c08 L0x7fffffffd8d0;
mov d08 L0x7fffffffd8d8;
mov e08 L0x7fffffffd8e0;
mov f08 L0x7fffffffd8e8;
mov g08 L0x7fffffffd8f0;
mov h08 L0x7fffffffd8f8;
mov a09 L0x7fffffffd900;
mov b09 L0x7fffffffd908;
mov c09 L0x7fffffffd910;
mov d09 L0x7fffffffd918;
mov e09 L0x7fffffffd920;
mov f09 L0x7fffffffd928;
mov g09 L0x7fffffffd930;
mov h09 L0x7fffffffd938;
mov a10 L0x7fffffffd940;
mov b10 L0x7fffffffd948;
mov c10 L0x7fffffffd950;
mov d10 L0x7fffffffd958;
mov e10 L0x7fffffffd960;
mov f10 L0x7fffffffd968;
mov g10 L0x7fffffffd970;
mov h10 L0x7fffffffd978;
mov a11 L0x7fffffffd980;
mov b11 L0x7fffffffd988;
mov c11 L0x7fffffffd990;
mov d11 L0x7fffffffd998;
mov e11 L0x7fffffffd9a0;
mov f11 L0x7fffffffd9a8;
mov g11 L0x7fffffffd9b0;
mov h11 L0x7fffffffd9b8;
mov a12 L0x7fffffffd9c0;
mov b12 L0x7fffffffd9c8;
mov c12 L0x7fffffffd9d0;
mov d12 L0x7fffffffd9d8;
mov e12 L0x7fffffffd9e0;
mov f12 L0x7fffffffd9e8;
mov g12 L0x7fffffffd9f0;
mov h12 L0x7fffffffd9f8;
mov a13 L0x7fffffffda00;
mov b13 L0x7fffffffda08;
mov c13 L0x7fffffffda10;
mov d13 L0x7fffffffda18;
mov e13 L0x7fffffffda20;
mov f13 L0x7fffffffda28;
mov g13 L0x7fffffffda30;
mov h13 L0x7fffffffda38;
mov a14 L0x7fffffffda40;
mov b14 L0x7fffffffda48;
mov c14 L0x7fffffffda50;
mov d14 L0x7fffffffda58;
mov e14 L0x7fffffffda60;
mov f14 L0x7fffffffda68;
mov g14 L0x7fffffffda70;
mov h14 L0x7fffffffda78;
mov a15 L0x7fffffffda80;
mov b15 L0x7fffffffda88;
mov c15 L0x7fffffffda90;
mov d15 L0x7fffffffda98;
mov e15 L0x7fffffffdaa0;
mov f15 L0x7fffffffdaa8;
mov g15 L0x7fffffffdab0;
mov h15 L0x7fffffffdab8;
mov a16 L0x7fffffffdac0;
mov b16 L0x7fffffffdac8;
mov c16 L0x7fffffffdad0;
mov d16 L0x7fffffffdad8;
mov e16 L0x7fffffffdae0;
mov f16 L0x7fffffffdae8;
mov g16 L0x7fffffffdaf0;
mov h16 L0x7fffffffdaf8;
mov a17 L0x7fffffffdb00;
mov b17 L0x7fffffffdb08;
mov c17 L0x7fffffffdb10;
mov d17 L0x7fffffffdb18;
mov e17 L0x7fffffffdb20;
mov f17 L0x7fffffffdb28;
mov g17 L0x7fffffffdb30;
mov h17 L0x7fffffffdb38;
mov a18 L0x7fffffffdb40;
mov b18 L0x7fffffffdb48;
mov c18 L0x7fffffffdb50;
mov d18 L0x7fffffffdb58;
mov e18 L0x7fffffffdb60;
mov f18 L0x7fffffffdb68;
mov g18 L0x7fffffffdb70;
mov h18 L0x7fffffffdb78;
mov a19 L0x7fffffffdb80;
mov b19 L0x7fffffffdb88;
mov c19 L0x7fffffffdb90;
mov d19 L0x7fffffffdb98;
mov e19 L0x7fffffffdba0;
mov f19 L0x7fffffffdba8;
mov g19 L0x7fffffffdbb0;
mov h19 L0x7fffffffdbb8;
mov a20 L0x7fffffffdbc0;
mov b20 L0x7fffffffdbc8;
mov c20 L0x7fffffffdbd0;
mov d20 L0x7fffffffdbd8;
mov e20 L0x7fffffffdbe0;
mov f20 L0x7fffffffdbe8;
mov g20 L0x7fffffffdbf0;
mov h20 L0x7fffffffdbf8;
mov a21 L0x7fffffffdc00;
mov b21 L0x7fffffffdc08;
mov c21 L0x7fffffffdc10;
mov d21 L0x7fffffffdc18;
mov e21 L0x7fffffffdc20;
mov f21 L0x7fffffffdc28;
mov g21 L0x7fffffffdc30;
mov h21 L0x7fffffffdc38;
mov a22 L0x7fffffffdc40;
mov b22 L0x7fffffffdc48;
mov c22 L0x7fffffffdc50;
mov d22 L0x7fffffffdc58;
mov e22 L0x7fffffffdc60;
mov f22 L0x7fffffffdc68;
mov g22 L0x7fffffffdc70;
mov h22 L0x7fffffffdc78;
mov a23 L0x7fffffffdc80;
mov b23 L0x7fffffffdc88;
mov c23 L0x7fffffffdc90;
mov d23 L0x7fffffffdc98;
mov e23 L0x7fffffffdca0;
mov f23 L0x7fffffffdca8;
mov g23 L0x7fffffffdcb0;
mov h23 L0x7fffffffdcb8;
mov a24 L0x7fffffffdcc0;
mov b24 L0x7fffffffdcc8;
mov c24 L0x7fffffffdcd0;
mov d24 L0x7fffffffdcd8;
mov e24 L0x7fffffffdce0;
mov f24 L0x7fffffffdce8;
mov g24 L0x7fffffffdcf0;
mov h24 L0x7fffffffdcf8;

{
  true
  &&
  true
}

