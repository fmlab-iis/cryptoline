(* frege:  -v -isafety -isafety_timeout 14400 -jobs 24 -slicing -no_carry_constraint nttmul_poly_ntt.cl
Parsing Cryptoline file:                [OK]            0.354376 seconds
Checking well-formedness:               [OK]            0.175865 seconds
Transforming to SSA form:               [OK]            0.083464 seconds
Rewriting assignments:                  [OK]            0.127678 seconds
Verifying program safety:               [OK]            1229.874981 seconds
Verifying range assertions:             [OK]            423.423196 seconds
Verifying range specification:          [OK]            1315.274511 seconds
Rewriting value-preserved casting:      [OK]            0.001344 seconds
Verifying algebraic assertions:         [OK]            0.053377 seconds
Verifying algebraic specification:      [OK]            478.410646 seconds
Verification result:                    [OK]            3447.830031 seconds
*)

(* quine: -v -isafety -jobs 24 -slicing -no_carry_constraint nttmul_poly_ntt.cl
Parsing Cryptoline file:                [OK]            0.443280 seconds
Checking well-formedness:               [OK]            0.225050 seconds
Transforming to SSA form:               [OK]            0.121536 seconds
Rewriting assignments:                  [OK]            0.233327 seconds
Verifying program safety:               [OK]            1919.372519 seconds
Verifying range assertions:             [OK]            715.952570 seconds
Verifying range specification:          [OK]            1770.936736 seconds
Rewriting value-preserved casting:      [OK]            0.002043 seconds
Verifying algebraic assertions:         [OK]            0.043738 seconds
Verifying algebraic specification:      [OK]            548.904424 seconds
Verification result:                    [OK]            4956.301762 seconds
*)

(* quine: -v -isafety -jobs 40 -slicing -no_carry_constraint nttmul_poly_ntt.cl
Parsing Cryptoline file:                [OK]            0.431461 seconds
Checking well-formedness:               [OK]            0.222828 seconds
Transforming to SSA form:               [OK]            0.104209 seconds
Rewriting assignments:                  [OK]            0.213163 seconds
Verifying program safety:               [OK]            1876.237246 seconds
Verifying range assertions:             [OK]            721.589384 seconds
Verifying range specification:          [OK]            1593.325210 seconds
Rewriting value-preserved casting:      [OK]            0.002001 seconds
Verifying algebraic assertions:         [OK]            0.049604 seconds
Verifying algebraic specification:      [OK]            536.477080 seconds
Verification result:                    [OK]            4728.714463 seconds
                      Round 1 (2688 safety conditions, timeout = 300 seconds)
*)

proc main (
bit x, bit inp_poly,
bit inp_poly00, bit inp_poly01, bit inp_poly02, bit inp_poly03,
bit inp_poly04, bit inp_poly05, bit inp_poly06, bit inp_poly07,
bit inp_poly08, bit inp_poly09, bit inp_poly10, bit inp_poly11,
bit inp_poly12, bit inp_poly13, bit inp_poly14, bit inp_poly15,
bit inp_poly16, bit inp_poly17, bit inp_poly18, bit inp_poly19,
bit inp_poly20, bit inp_poly21, bit inp_poly22, bit inp_poly23,
bit inp_poly24, bit inp_poly25, bit inp_poly26, bit inp_poly27,
bit inp_poly28, bit inp_poly29, bit inp_poly30, bit inp_poly31,
sint16 c000, sint16 c001, sint16 c002, sint16 c003, sint16 c004,
sint16 c005, sint16 c006, sint16 c007, sint16 c008, sint16 c009,
sint16 c00a, sint16 c00b, sint16 c00c, sint16 c00d, sint16 c00e,
sint16 c00f, sint16 c010, sint16 c011, sint16 c012, sint16 c013,
sint16 c014, sint16 c015, sint16 c016, sint16 c017, sint16 c018,
sint16 c019, sint16 c01a, sint16 c01b, sint16 c01c, sint16 c01d,
sint16 c01e, sint16 c01f, sint16 c020, sint16 c021, sint16 c022,
sint16 c023, sint16 c024, sint16 c025, sint16 c026, sint16 c027,
sint16 c028, sint16 c029, sint16 c02a, sint16 c02b, sint16 c02c,
sint16 c02d, sint16 c02e, sint16 c02f, sint16 c030, sint16 c031,
sint16 c032, sint16 c033, sint16 c034, sint16 c035, sint16 c036,
sint16 c037, sint16 c038, sint16 c039, sint16 c03a, sint16 c03b,
sint16 c03c, sint16 c03d, sint16 c03e, sint16 c03f, sint16 c040,
sint16 c041, sint16 c042, sint16 c043, sint16 c044, sint16 c045,
sint16 c046, sint16 c047, sint16 c048, sint16 c049, sint16 c04a,
sint16 c04b, sint16 c04c, sint16 c04d, sint16 c04e, sint16 c04f,
sint16 c050, sint16 c051, sint16 c052, sint16 c053, sint16 c054,
sint16 c055, sint16 c056, sint16 c057, sint16 c058, sint16 c059,
sint16 c05a, sint16 c05b, sint16 c05c, sint16 c05d, sint16 c05e,
sint16 c05f, sint16 c060, sint16 c061, sint16 c062, sint16 c063,
sint16 c064, sint16 c065, sint16 c066, sint16 c067, sint16 c068,
sint16 c069, sint16 c06a, sint16 c06b, sint16 c06c, sint16 c06d,
sint16 c06e, sint16 c06f, sint16 c070, sint16 c071, sint16 c072,
sint16 c073, sint16 c074, sint16 c075, sint16 c076, sint16 c077,
sint16 c078, sint16 c079, sint16 c07a, sint16 c07b, sint16 c07c,
sint16 c07d, sint16 c07e, sint16 c07f, sint16 c080, sint16 c081,
sint16 c082, sint16 c083, sint16 c084, sint16 c085, sint16 c086,
sint16 c087, sint16 c088, sint16 c089, sint16 c08a, sint16 c08b,
sint16 c08c, sint16 c08d, sint16 c08e, sint16 c08f, sint16 c090,
sint16 c091, sint16 c092, sint16 c093, sint16 c094, sint16 c095,
sint16 c096, sint16 c097, sint16 c098, sint16 c099, sint16 c09a,
sint16 c09b, sint16 c09c, sint16 c09d, sint16 c09e, sint16 c09f,
sint16 c0a0, sint16 c0a1, sint16 c0a2, sint16 c0a3, sint16 c0a4,
sint16 c0a5, sint16 c0a6, sint16 c0a7, sint16 c0a8, sint16 c0a9,
sint16 c0aa, sint16 c0ab, sint16 c0ac, sint16 c0ad, sint16 c0ae,
sint16 c0af, sint16 c0b0, sint16 c0b1, sint16 c0b2, sint16 c0b3,
sint16 c0b4, sint16 c0b5, sint16 c0b6, sint16 c0b7, sint16 c0b8,
sint16 c0b9, sint16 c0ba, sint16 c0bb, sint16 c0bc, sint16 c0bd,
sint16 c0be, sint16 c0bf, sint16 c0c0, sint16 c0c1, sint16 c0c2,
sint16 c0c3, sint16 c0c4, sint16 c0c5, sint16 c0c6, sint16 c0c7,
sint16 c0c8, sint16 c0c9, sint16 c0ca, sint16 c0cb, sint16 c0cc,
sint16 c0cd, sint16 c0ce, sint16 c0cf, sint16 c0d0, sint16 c0d1,
sint16 c0d2, sint16 c0d3, sint16 c0d4, sint16 c0d5, sint16 c0d6,
sint16 c0d7, sint16 c0d8, sint16 c0d9, sint16 c0da, sint16 c0db,
sint16 c0dc, sint16 c0dd, sint16 c0de, sint16 c0df, sint16 c0e0,
sint16 c0e1, sint16 c0e2, sint16 c0e3, sint16 c0e4, sint16 c0e5,
sint16 c0e6, sint16 c0e7, sint16 c0e8, sint16 c0e9, sint16 c0ea,
sint16 c0eb, sint16 c0ec, sint16 c0ed, sint16 c0ee, sint16 c0ef,
sint16 c0f0, sint16 c0f1, sint16 c0f2, sint16 c0f3, sint16 c0f4,
sint16 c0f5, sint16 c0f6, sint16 c0f7, sint16 c0f8, sint16 c0f9,
sint16 c0fa, sint16 c0fb, sint16 c0fc, sint16 c0fd, sint16 c0fe,
sint16 c0ff, sint16 c100, sint16 c101, sint16 c102, sint16 c103,
sint16 c104, sint16 c105, sint16 c106, sint16 c107, sint16 c108,
sint16 c109, sint16 c10a, sint16 c10b, sint16 c10c, sint16 c10d,
sint16 c10e, sint16 c10f, sint16 c110, sint16 c111, sint16 c112,
sint16 c113, sint16 c114, sint16 c115, sint16 c116, sint16 c117,
sint16 c118, sint16 c119, sint16 c11a, sint16 c11b, sint16 c11c,
sint16 c11d, sint16 c11e, sint16 c11f, sint16 c120, sint16 c121,
sint16 c122, sint16 c123, sint16 c124, sint16 c125, sint16 c126,
sint16 c127, sint16 c128, sint16 c129, sint16 c12a, sint16 c12b,
sint16 c12c, sint16 c12d, sint16 c12e, sint16 c12f, sint16 c130,
sint16 c131, sint16 c132, sint16 c133, sint16 c134, sint16 c135,
sint16 c136, sint16 c137, sint16 c138, sint16 c139, sint16 c13a,
sint16 c13b, sint16 c13c, sint16 c13d, sint16 c13e, sint16 c13f,
sint16 c140, sint16 c141, sint16 c142, sint16 c143, sint16 c144,
sint16 c145, sint16 c146, sint16 c147, sint16 c148, sint16 c149,
sint16 c14a, sint16 c14b, sint16 c14c, sint16 c14d, sint16 c14e,
sint16 c14f, sint16 c150, sint16 c151, sint16 c152, sint16 c153,
sint16 c154, sint16 c155, sint16 c156, sint16 c157, sint16 c158,
sint16 c159, sint16 c15a, sint16 c15b, sint16 c15c, sint16 c15d,
sint16 c15e, sint16 c15f, sint16 c160, sint16 c161, sint16 c162,
sint16 c163, sint16 c164, sint16 c165, sint16 c166, sint16 c167,
sint16 c168, sint16 c169, sint16 c16a, sint16 c16b, sint16 c16c,
sint16 c16d, sint16 c16e, sint16 c16f, sint16 c170, sint16 c171,
sint16 c172, sint16 c173, sint16 c174, sint16 c175, sint16 c176,
sint16 c177, sint16 c178, sint16 c179, sint16 c17a, sint16 c17b,
sint16 c17c, sint16 c17d, sint16 c17e, sint16 c17f, sint16 c180,
sint16 c181, sint16 c182, sint16 c183, sint16 c184, sint16 c185,
sint16 c186, sint16 c187, sint16 c188, sint16 c189, sint16 c18a,
sint16 c18b, sint16 c18c, sint16 c18d, sint16 c18e, sint16 c18f,
sint16 c190, sint16 c191, sint16 c192, sint16 c193, sint16 c194,
sint16 c195, sint16 c196, sint16 c197, sint16 c198, sint16 c199,
sint16 c19a, sint16 c19b, sint16 c19c, sint16 c19d, sint16 c19e,
sint16 c19f, sint16 c1a0, sint16 c1a1, sint16 c1a2, sint16 c1a3,
sint16 c1a4, sint16 c1a5, sint16 c1a6, sint16 c1a7, sint16 c1a8,
sint16 c1a9, sint16 c1aa, sint16 c1ab, sint16 c1ac, sint16 c1ad,
sint16 c1ae, sint16 c1af, sint16 c1b0, sint16 c1b1, sint16 c1b2,
sint16 c1b3, sint16 c1b4, sint16 c1b5, sint16 c1b6, sint16 c1b7,
sint16 c1b8, sint16 c1b9, sint16 c1ba, sint16 c1bb, sint16 c1bc,
sint16 c1bd, sint16 c1be, sint16 c1bf, sint16 c1c0, sint16 c1c1,
sint16 c1c2, sint16 c1c3, sint16 c1c4, sint16 c1c5, sint16 c1c6,
sint16 c1c7, sint16 c1c8, sint16 c1c9, sint16 c1ca, sint16 c1cb,
sint16 c1cc, sint16 c1cd, sint16 c1ce, sint16 c1cf, sint16 c1d0,
sint16 c1d1, sint16 c1d2, sint16 c1d3, sint16 c1d4, sint16 c1d5,
sint16 c1d6, sint16 c1d7, sint16 c1d8, sint16 c1d9, sint16 c1da,
sint16 c1db, sint16 c1dc, sint16 c1dd, sint16 c1de, sint16 c1df,
sint16 c1e0, sint16 c1e1, sint16 c1e2, sint16 c1e3, sint16 c1e4,
sint16 c1e5, sint16 c1e6, sint16 c1e7, sint16 c1e8, sint16 c1e9,
sint16 c1ea, sint16 c1eb, sint16 c1ec, sint16 c1ed, sint16 c1ee,
sint16 c1ef, sint16 c1f0, sint16 c1f1, sint16 c1f2, sint16 c1f3,
sint16 c1f4, sint16 c1f5, sint16 c1f6, sint16 c1f7, sint16 c1f8,
sint16 c1f9, sint16 c1fa, sint16 c1fb, sint16 c1fc, sint16 c1fd,
sint16 c1fe, sint16 c1ff
) =
{
and [
inp_poly00**2 = 
c000*x** 0+c001*x** 1+c002*x** 2+
c003*x** 3+c004*x** 4+c005*x** 5+
c006*x** 6+c007*x** 7+c008*x** 8+
c009*x** 9+c00a*x**10+c00b*x**11+
c00c*x**12+c00d*x**13+c00e*x**14+
c00f*x**15,
inp_poly01**2 = 
c010*x** 0+c011*x** 1+c012*x** 2+
c013*x** 3+c014*x** 4+c015*x** 5+
c016*x** 6+c017*x** 7+c018*x** 8+
c019*x** 9+c01a*x**10+c01b*x**11+
c01c*x**12+c01d*x**13+c01e*x**14+
c01f*x**15,
inp_poly02**2 = 
c020*x** 0+c021*x** 1+c022*x** 2+
c023*x** 3+c024*x** 4+c025*x** 5+
c026*x** 6+c027*x** 7+c028*x** 8+
c029*x** 9+c02a*x**10+c02b*x**11+
c02c*x**12+c02d*x**13+c02e*x**14+
c02f*x**15,
inp_poly03**2 = 
c030*x** 0+c031*x** 1+c032*x** 2+
c033*x** 3+c034*x** 4+c035*x** 5+
c036*x** 6+c037*x** 7+c038*x** 8+
c039*x** 9+c03a*x**10+c03b*x**11+
c03c*x**12+c03d*x**13+c03e*x**14+
c03f*x**15,
inp_poly04**2 = 
c040*x** 0+c041*x** 1+c042*x** 2+
c043*x** 3+c044*x** 4+c045*x** 5+
c046*x** 6+c047*x** 7+c048*x** 8+
c049*x** 9+c04a*x**10+c04b*x**11+
c04c*x**12+c04d*x**13+c04e*x**14+
c04f*x**15,
inp_poly05**2 = 
c050*x** 0+c051*x** 1+c052*x** 2+
c053*x** 3+c054*x** 4+c055*x** 5+
c056*x** 6+c057*x** 7+c058*x** 8+
c059*x** 9+c05a*x**10+c05b*x**11+
c05c*x**12+c05d*x**13+c05e*x**14+
c05f*x**15,
inp_poly06**2 = 
c060*x** 0+c061*x** 1+c062*x** 2+
c063*x** 3+c064*x** 4+c065*x** 5+
c066*x** 6+c067*x** 7+c068*x** 8+
c069*x** 9+c06a*x**10+c06b*x**11+
c06c*x**12+c06d*x**13+c06e*x**14+
c06f*x**15,
inp_poly07**2 = 
c070*x** 0+c071*x** 1+c072*x** 2+
c073*x** 3+c074*x** 4+c075*x** 5+
c076*x** 6+c077*x** 7+c078*x** 8+
c079*x** 9+c07a*x**10+c07b*x**11+
c07c*x**12+c07d*x**13+c07e*x**14+
c07f*x**15,
inp_poly08**2 = 
c080*x** 0+c081*x** 1+c082*x** 2+
c083*x** 3+c084*x** 4+c085*x** 5+
c086*x** 6+c087*x** 7+c088*x** 8+
c089*x** 9+c08a*x**10+c08b*x**11+
c08c*x**12+c08d*x**13+c08e*x**14+
c08f*x**15,
inp_poly09**2 = 
c090*x** 0+c091*x** 1+c092*x** 2+
c093*x** 3+c094*x** 4+c095*x** 5+
c096*x** 6+c097*x** 7+c098*x** 8+
c099*x** 9+c09a*x**10+c09b*x**11+
c09c*x**12+c09d*x**13+c09e*x**14+
c09f*x**15,
inp_poly10**2 = 
c0a0*x** 0+c0a1*x** 1+c0a2*x** 2+
c0a3*x** 3+c0a4*x** 4+c0a5*x** 5+
c0a6*x** 6+c0a7*x** 7+c0a8*x** 8+
c0a9*x** 9+c0aa*x**10+c0ab*x**11+
c0ac*x**12+c0ad*x**13+c0ae*x**14+
c0af*x**15,
inp_poly11**2 = 
c0b0*x** 0+c0b1*x** 1+c0b2*x** 2+
c0b3*x** 3+c0b4*x** 4+c0b5*x** 5+
c0b6*x** 6+c0b7*x** 7+c0b8*x** 8+
c0b9*x** 9+c0ba*x**10+c0bb*x**11+
c0bc*x**12+c0bd*x**13+c0be*x**14+
c0bf*x**15,
inp_poly12**2 = 
c0c0*x** 0+c0c1*x** 1+c0c2*x** 2+
c0c3*x** 3+c0c4*x** 4+c0c5*x** 5+
c0c6*x** 6+c0c7*x** 7+c0c8*x** 8+
c0c9*x** 9+c0ca*x**10+c0cb*x**11+
c0cc*x**12+c0cd*x**13+c0ce*x**14+
c0cf*x**15,
inp_poly13**2 = 
c0d0*x** 0+c0d1*x** 1+c0d2*x** 2+
c0d3*x** 3+c0d4*x** 4+c0d5*x** 5+
c0d6*x** 6+c0d7*x** 7+c0d8*x** 8+
c0d9*x** 9+c0da*x**10+c0db*x**11+
c0dc*x**12+c0dd*x**13+c0de*x**14+
c0df*x**15,
inp_poly14**2 = 
c0e0*x** 0+c0e1*x** 1+c0e2*x** 2+
c0e3*x** 3+c0e4*x** 4+c0e5*x** 5+
c0e6*x** 6+c0e7*x** 7+c0e8*x** 8+
c0e9*x** 9+c0ea*x**10+c0eb*x**11+
c0ec*x**12+c0ed*x**13+c0ee*x**14+
c0ef*x**15,
inp_poly15**2 = 
c0f0*x** 0+c0f1*x** 1+c0f2*x** 2+
c0f3*x** 3+c0f4*x** 4+c0f5*x** 5+
c0f6*x** 6+c0f7*x** 7+c0f8*x** 8+
c0f9*x** 9+c0fa*x**10+c0fb*x**11+
c0fc*x**12+c0fd*x**13+c0fe*x**14+
c0ff*x**15,
inp_poly16**2 = 
c100*x** 0+c101*x** 1+c102*x** 2+
c103*x** 3+c104*x** 4+c105*x** 5+
c106*x** 6+c107*x** 7+c108*x** 8+
c109*x** 9+c10a*x**10+c10b*x**11+
c10c*x**12+c10d*x**13+c10e*x**14+
c10f*x**15,
inp_poly17**2 = 
c110*x** 0+c111*x** 1+c112*x** 2+
c113*x** 3+c114*x** 4+c115*x** 5+
c116*x** 6+c117*x** 7+c118*x** 8+
c119*x** 9+c11a*x**10+c11b*x**11+
c11c*x**12+c11d*x**13+c11e*x**14+
c11f*x**15,
inp_poly18**2 = 
c120*x** 0+c121*x** 1+c122*x** 2+
c123*x** 3+c124*x** 4+c125*x** 5+
c126*x** 6+c127*x** 7+c128*x** 8+
c129*x** 9+c12a*x**10+c12b*x**11+
c12c*x**12+c12d*x**13+c12e*x**14+
c12f*x**15,
inp_poly19**2 = 
c130*x** 0+c131*x** 1+c132*x** 2+
c133*x** 3+c134*x** 4+c135*x** 5+
c136*x** 6+c137*x** 7+c138*x** 8+
c139*x** 9+c13a*x**10+c13b*x**11+
c13c*x**12+c13d*x**13+c13e*x**14+
c13f*x**15,
inp_poly20**2 = 
c140*x** 0+c141*x** 1+c142*x** 2+
c143*x** 3+c144*x** 4+c145*x** 5+
c146*x** 6+c147*x** 7+c148*x** 8+
c149*x** 9+c14a*x**10+c14b*x**11+
c14c*x**12+c14d*x**13+c14e*x**14+
c14f*x**15,
inp_poly21**2 = 
c150*x** 0+c151*x** 1+c152*x** 2+
c153*x** 3+c154*x** 4+c155*x** 5+
c156*x** 6+c157*x** 7+c158*x** 8+
c159*x** 9+c15a*x**10+c15b*x**11+
c15c*x**12+c15d*x**13+c15e*x**14+
c15f*x**15,
inp_poly22**2 = 
c160*x** 0+c161*x** 1+c162*x** 2+
c163*x** 3+c164*x** 4+c165*x** 5+
c166*x** 6+c167*x** 7+c168*x** 8+
c169*x** 9+c16a*x**10+c16b*x**11+
c16c*x**12+c16d*x**13+c16e*x**14+
c16f*x**15,
inp_poly23**2 = 
c170*x** 0+c171*x** 1+c172*x** 2+
c173*x** 3+c174*x** 4+c175*x** 5+
c176*x** 6+c177*x** 7+c178*x** 8+
c179*x** 9+c17a*x**10+c17b*x**11+
c17c*x**12+c17d*x**13+c17e*x**14+
c17f*x**15,
inp_poly24**2 = 
c180*x** 0+c181*x** 1+c182*x** 2+
c183*x** 3+c184*x** 4+c185*x** 5+
c186*x** 6+c187*x** 7+c188*x** 8+
c189*x** 9+c18a*x**10+c18b*x**11+
c18c*x**12+c18d*x**13+c18e*x**14+
c18f*x**15,
inp_poly25**2 = 
c190*x** 0+c191*x** 1+c192*x** 2+
c193*x** 3+c194*x** 4+c195*x** 5+
c196*x** 6+c197*x** 7+c198*x** 8+
c199*x** 9+c19a*x**10+c19b*x**11+
c19c*x**12+c19d*x**13+c19e*x**14+
c19f*x**15,
inp_poly26**2 = 
c1a0*x** 0+c1a1*x** 1+c1a2*x** 2+
c1a3*x** 3+c1a4*x** 4+c1a5*x** 5+
c1a6*x** 6+c1a7*x** 7+c1a8*x** 8+
c1a9*x** 9+c1aa*x**10+c1ab*x**11+
c1ac*x**12+c1ad*x**13+c1ae*x**14+
c1af*x**15,
inp_poly27**2 = 
c1b0*x** 0+c1b1*x** 1+c1b2*x** 2+
c1b3*x** 3+c1b4*x** 4+c1b5*x** 5+
c1b6*x** 6+c1b7*x** 7+c1b8*x** 8+
c1b9*x** 9+c1ba*x**10+c1bb*x**11+
c1bc*x**12+c1bd*x**13+c1be*x**14+
c1bf*x**15,
inp_poly28**2 = 
c1c0*x** 0+c1c1*x** 1+c1c2*x** 2+
c1c3*x** 3+c1c4*x** 4+c1c5*x** 5+
c1c6*x** 6+c1c7*x** 7+c1c8*x** 8+
c1c9*x** 9+c1ca*x**10+c1cb*x**11+
c1cc*x**12+c1cd*x**13+c1ce*x**14+
c1cf*x**15,
inp_poly29**2 = 
c1d0*x** 0+c1d1*x** 1+c1d2*x** 2+
c1d3*x** 3+c1d4*x** 4+c1d5*x** 5+
c1d6*x** 6+c1d7*x** 7+c1d8*x** 8+
c1d9*x** 9+c1da*x**10+c1db*x**11+
c1dc*x**12+c1dd*x**13+c1de*x**14+
c1df*x**15,
inp_poly30**2 = 
c1e0*x** 0+c1e1*x** 1+c1e2*x** 2+
c1e3*x** 3+c1e4*x** 4+c1e5*x** 5+
c1e6*x** 6+c1e7*x** 7+c1e8*x** 8+
c1e9*x** 9+c1ea*x**10+c1eb*x**11+
c1ec*x**12+c1ed*x**13+c1ee*x**14+
c1ef*x**15,
inp_poly31**2 = 
c1f0*x** 0+c1f1*x** 1+c1f2*x** 2+
c1f3*x** 3+c1f4*x** 4+c1f5*x** 5+
c1f6*x** 6+c1f7*x** 7+c1f8*x** 8+
c1f9*x** 9+c1fa*x**10+c1fb*x**11+
c1fc*x**12+c1fd*x**13+c1fe*x**14+
c1ff*x**15,
inp_poly**2 = 
inp_poly00**2*x**  0+inp_poly01**2*x** 16+inp_poly02**2*x** 32+inp_poly03**2*x** 48+
inp_poly04**2*x** 64+inp_poly05**2*x** 80+inp_poly06**2*x** 96+inp_poly07**2*x**112+
inp_poly08**2*x**128+inp_poly09**2*x**144+inp_poly10**2*x**160+inp_poly11**2*x**176+
inp_poly12**2*x**192+inp_poly13**2*x**208+inp_poly14**2*x**224+inp_poly15**2*x**240+
inp_poly16**2*x**256+inp_poly17**2*x**272+inp_poly18**2*x**288+inp_poly19**2*x**304+
inp_poly20**2*x**320+inp_poly21**2*x**336+inp_poly22**2*x**352+inp_poly23**2*x**368+
inp_poly24**2*x**384+inp_poly25**2*x**400+inp_poly26**2*x**416+inp_poly27**2*x**432+
inp_poly28**2*x**448+inp_poly29**2*x**464+inp_poly30**2*x**480+inp_poly31**2*x**496
] && and [
(-2048)@16<=s c000,c000<s 2048@16,(-2048)@16<=s c001,c001<s 2048@16,
(-2048)@16<=s c002,c002<s 2048@16,(-2048)@16<=s c003,c003<s 2048@16,
(-2048)@16<=s c004,c004<s 2048@16,(-2048)@16<=s c005,c005<s 2048@16,
(-2048)@16<=s c006,c006<s 2048@16,(-2048)@16<=s c007,c007<s 2048@16,
(-2048)@16<=s c008,c008<s 2048@16,(-2048)@16<=s c009,c009<s 2048@16,
(-2048)@16<=s c00a,c00a<s 2048@16,(-2048)@16<=s c00b,c00b<s 2048@16,
(-2048)@16<=s c00c,c00c<s 2048@16,(-2048)@16<=s c00d,c00d<s 2048@16,
(-2048)@16<=s c00e,c00e<s 2048@16,(-2048)@16<=s c00f,c00f<s 2048@16,
(-2048)@16<=s c010,c010<s 2048@16,(-2048)@16<=s c011,c011<s 2048@16,
(-2048)@16<=s c012,c012<s 2048@16,(-2048)@16<=s c013,c013<s 2048@16,
(-2048)@16<=s c014,c014<s 2048@16,(-2048)@16<=s c015,c015<s 2048@16,
(-2048)@16<=s c016,c016<s 2048@16,(-2048)@16<=s c017,c017<s 2048@16,
(-2048)@16<=s c018,c018<s 2048@16,(-2048)@16<=s c019,c019<s 2048@16,
(-2048)@16<=s c01a,c01a<s 2048@16,(-2048)@16<=s c01b,c01b<s 2048@16,
(-2048)@16<=s c01c,c01c<s 2048@16,(-2048)@16<=s c01d,c01d<s 2048@16,
(-2048)@16<=s c01e,c01e<s 2048@16,(-2048)@16<=s c01f,c01f<s 2048@16,
(-2048)@16<=s c020,c020<s 2048@16,(-2048)@16<=s c021,c021<s 2048@16,
(-2048)@16<=s c022,c022<s 2048@16,(-2048)@16<=s c023,c023<s 2048@16,
(-2048)@16<=s c024,c024<s 2048@16,(-2048)@16<=s c025,c025<s 2048@16,
(-2048)@16<=s c026,c026<s 2048@16,(-2048)@16<=s c027,c027<s 2048@16,
(-2048)@16<=s c028,c028<s 2048@16,(-2048)@16<=s c029,c029<s 2048@16,
(-2048)@16<=s c02a,c02a<s 2048@16,(-2048)@16<=s c02b,c02b<s 2048@16,
(-2048)@16<=s c02c,c02c<s 2048@16,(-2048)@16<=s c02d,c02d<s 2048@16,
(-2048)@16<=s c02e,c02e<s 2048@16,(-2048)@16<=s c02f,c02f<s 2048@16,
(-2048)@16<=s c030,c030<s 2048@16,(-2048)@16<=s c031,c031<s 2048@16,
(-2048)@16<=s c032,c032<s 2048@16,(-2048)@16<=s c033,c033<s 2048@16,
(-2048)@16<=s c034,c034<s 2048@16,(-2048)@16<=s c035,c035<s 2048@16,
(-2048)@16<=s c036,c036<s 2048@16,(-2048)@16<=s c037,c037<s 2048@16,
(-2048)@16<=s c038,c038<s 2048@16,(-2048)@16<=s c039,c039<s 2048@16,
(-2048)@16<=s c03a,c03a<s 2048@16,(-2048)@16<=s c03b,c03b<s 2048@16,
(-2048)@16<=s c03c,c03c<s 2048@16,(-2048)@16<=s c03d,c03d<s 2048@16,
(-2048)@16<=s c03e,c03e<s 2048@16,(-2048)@16<=s c03f,c03f<s 2048@16,
(-2048)@16<=s c040,c040<s 2048@16,(-2048)@16<=s c041,c041<s 2048@16,
(-2048)@16<=s c042,c042<s 2048@16,(-2048)@16<=s c043,c043<s 2048@16,
(-2048)@16<=s c044,c044<s 2048@16,(-2048)@16<=s c045,c045<s 2048@16,
(-2048)@16<=s c046,c046<s 2048@16,(-2048)@16<=s c047,c047<s 2048@16,
(-2048)@16<=s c048,c048<s 2048@16,(-2048)@16<=s c049,c049<s 2048@16,
(-2048)@16<=s c04a,c04a<s 2048@16,(-2048)@16<=s c04b,c04b<s 2048@16,
(-2048)@16<=s c04c,c04c<s 2048@16,(-2048)@16<=s c04d,c04d<s 2048@16,
(-2048)@16<=s c04e,c04e<s 2048@16,(-2048)@16<=s c04f,c04f<s 2048@16,
(-2048)@16<=s c050,c050<s 2048@16,(-2048)@16<=s c051,c051<s 2048@16,
(-2048)@16<=s c052,c052<s 2048@16,(-2048)@16<=s c053,c053<s 2048@16,
(-2048)@16<=s c054,c054<s 2048@16,(-2048)@16<=s c055,c055<s 2048@16,
(-2048)@16<=s c056,c056<s 2048@16,(-2048)@16<=s c057,c057<s 2048@16,
(-2048)@16<=s c058,c058<s 2048@16,(-2048)@16<=s c059,c059<s 2048@16,
(-2048)@16<=s c05a,c05a<s 2048@16,(-2048)@16<=s c05b,c05b<s 2048@16,
(-2048)@16<=s c05c,c05c<s 2048@16,(-2048)@16<=s c05d,c05d<s 2048@16,
(-2048)@16<=s c05e,c05e<s 2048@16,(-2048)@16<=s c05f,c05f<s 2048@16,
(-2048)@16<=s c060,c060<s 2048@16,(-2048)@16<=s c061,c061<s 2048@16,
(-2048)@16<=s c062,c062<s 2048@16,(-2048)@16<=s c063,c063<s 2048@16,
(-2048)@16<=s c064,c064<s 2048@16,(-2048)@16<=s c065,c065<s 2048@16,
(-2048)@16<=s c066,c066<s 2048@16,(-2048)@16<=s c067,c067<s 2048@16,
(-2048)@16<=s c068,c068<s 2048@16,(-2048)@16<=s c069,c069<s 2048@16,
(-2048)@16<=s c06a,c06a<s 2048@16,(-2048)@16<=s c06b,c06b<s 2048@16,
(-2048)@16<=s c06c,c06c<s 2048@16,(-2048)@16<=s c06d,c06d<s 2048@16,
(-2048)@16<=s c06e,c06e<s 2048@16,(-2048)@16<=s c06f,c06f<s 2048@16,
(-2048)@16<=s c070,c070<s 2048@16,(-2048)@16<=s c071,c071<s 2048@16,
(-2048)@16<=s c072,c072<s 2048@16,(-2048)@16<=s c073,c073<s 2048@16,
(-2048)@16<=s c074,c074<s 2048@16,(-2048)@16<=s c075,c075<s 2048@16,
(-2048)@16<=s c076,c076<s 2048@16,(-2048)@16<=s c077,c077<s 2048@16,
(-2048)@16<=s c078,c078<s 2048@16,(-2048)@16<=s c079,c079<s 2048@16,
(-2048)@16<=s c07a,c07a<s 2048@16,(-2048)@16<=s c07b,c07b<s 2048@16,
(-2048)@16<=s c07c,c07c<s 2048@16,(-2048)@16<=s c07d,c07d<s 2048@16,
(-2048)@16<=s c07e,c07e<s 2048@16,(-2048)@16<=s c07f,c07f<s 2048@16,
(-2048)@16<=s c080,c080<s 2048@16,(-2048)@16<=s c081,c081<s 2048@16,
(-2048)@16<=s c082,c082<s 2048@16,(-2048)@16<=s c083,c083<s 2048@16,
(-2048)@16<=s c084,c084<s 2048@16,(-2048)@16<=s c085,c085<s 2048@16,
(-2048)@16<=s c086,c086<s 2048@16,(-2048)@16<=s c087,c087<s 2048@16,
(-2048)@16<=s c088,c088<s 2048@16,(-2048)@16<=s c089,c089<s 2048@16,
(-2048)@16<=s c08a,c08a<s 2048@16,(-2048)@16<=s c08b,c08b<s 2048@16,
(-2048)@16<=s c08c,c08c<s 2048@16,(-2048)@16<=s c08d,c08d<s 2048@16,
(-2048)@16<=s c08e,c08e<s 2048@16,(-2048)@16<=s c08f,c08f<s 2048@16,
(-2048)@16<=s c090,c090<s 2048@16,(-2048)@16<=s c091,c091<s 2048@16,
(-2048)@16<=s c092,c092<s 2048@16,(-2048)@16<=s c093,c093<s 2048@16,
(-2048)@16<=s c094,c094<s 2048@16,(-2048)@16<=s c095,c095<s 2048@16,
(-2048)@16<=s c096,c096<s 2048@16,(-2048)@16<=s c097,c097<s 2048@16,
(-2048)@16<=s c098,c098<s 2048@16,(-2048)@16<=s c099,c099<s 2048@16,
(-2048)@16<=s c09a,c09a<s 2048@16,(-2048)@16<=s c09b,c09b<s 2048@16,
(-2048)@16<=s c09c,c09c<s 2048@16,(-2048)@16<=s c09d,c09d<s 2048@16,
(-2048)@16<=s c09e,c09e<s 2048@16,(-2048)@16<=s c09f,c09f<s 2048@16,
(-2048)@16<=s c0a0,c0a0<s 2048@16,(-2048)@16<=s c0a1,c0a1<s 2048@16,
(-2048)@16<=s c0a2,c0a2<s 2048@16,(-2048)@16<=s c0a3,c0a3<s 2048@16,
(-2048)@16<=s c0a4,c0a4<s 2048@16,(-2048)@16<=s c0a5,c0a5<s 2048@16,
(-2048)@16<=s c0a6,c0a6<s 2048@16,(-2048)@16<=s c0a7,c0a7<s 2048@16,
(-2048)@16<=s c0a8,c0a8<s 2048@16,(-2048)@16<=s c0a9,c0a9<s 2048@16,
(-2048)@16<=s c0aa,c0aa<s 2048@16,(-2048)@16<=s c0ab,c0ab<s 2048@16,
(-2048)@16<=s c0ac,c0ac<s 2048@16,(-2048)@16<=s c0ad,c0ad<s 2048@16,
(-2048)@16<=s c0ae,c0ae<s 2048@16,(-2048)@16<=s c0af,c0af<s 2048@16,
(-2048)@16<=s c0b0,c0b0<s 2048@16,(-2048)@16<=s c0b1,c0b1<s 2048@16,
(-2048)@16<=s c0b2,c0b2<s 2048@16,(-2048)@16<=s c0b3,c0b3<s 2048@16,
(-2048)@16<=s c0b4,c0b4<s 2048@16,(-2048)@16<=s c0b5,c0b5<s 2048@16,
(-2048)@16<=s c0b6,c0b6<s 2048@16,(-2048)@16<=s c0b7,c0b7<s 2048@16,
(-2048)@16<=s c0b8,c0b8<s 2048@16,(-2048)@16<=s c0b9,c0b9<s 2048@16,
(-2048)@16<=s c0ba,c0ba<s 2048@16,(-2048)@16<=s c0bb,c0bb<s 2048@16,
(-2048)@16<=s c0bc,c0bc<s 2048@16,(-2048)@16<=s c0bd,c0bd<s 2048@16,
(-2048)@16<=s c0be,c0be<s 2048@16,(-2048)@16<=s c0bf,c0bf<s 2048@16,
(-2048)@16<=s c0c0,c0c0<s 2048@16,(-2048)@16<=s c0c1,c0c1<s 2048@16,
(-2048)@16<=s c0c2,c0c2<s 2048@16,(-2048)@16<=s c0c3,c0c3<s 2048@16,
(-2048)@16<=s c0c4,c0c4<s 2048@16,(-2048)@16<=s c0c5,c0c5<s 2048@16,
(-2048)@16<=s c0c6,c0c6<s 2048@16,(-2048)@16<=s c0c7,c0c7<s 2048@16,
(-2048)@16<=s c0c8,c0c8<s 2048@16,(-2048)@16<=s c0c9,c0c9<s 2048@16,
(-2048)@16<=s c0ca,c0ca<s 2048@16,(-2048)@16<=s c0cb,c0cb<s 2048@16,
(-2048)@16<=s c0cc,c0cc<s 2048@16,(-2048)@16<=s c0cd,c0cd<s 2048@16,
(-2048)@16<=s c0ce,c0ce<s 2048@16,(-2048)@16<=s c0cf,c0cf<s 2048@16,
(-2048)@16<=s c0d0,c0d0<s 2048@16,(-2048)@16<=s c0d1,c0d1<s 2048@16,
(-2048)@16<=s c0d2,c0d2<s 2048@16,(-2048)@16<=s c0d3,c0d3<s 2048@16,
(-2048)@16<=s c0d4,c0d4<s 2048@16,(-2048)@16<=s c0d5,c0d5<s 2048@16,
(-2048)@16<=s c0d6,c0d6<s 2048@16,(-2048)@16<=s c0d7,c0d7<s 2048@16,
(-2048)@16<=s c0d8,c0d8<s 2048@16,(-2048)@16<=s c0d9,c0d9<s 2048@16,
(-2048)@16<=s c0da,c0da<s 2048@16,(-2048)@16<=s c0db,c0db<s 2048@16,
(-2048)@16<=s c0dc,c0dc<s 2048@16,(-2048)@16<=s c0dd,c0dd<s 2048@16,
(-2048)@16<=s c0de,c0de<s 2048@16,(-2048)@16<=s c0df,c0df<s 2048@16,
(-2048)@16<=s c0e0,c0e0<s 2048@16,(-2048)@16<=s c0e1,c0e1<s 2048@16,
(-2048)@16<=s c0e2,c0e2<s 2048@16,(-2048)@16<=s c0e3,c0e3<s 2048@16,
(-2048)@16<=s c0e4,c0e4<s 2048@16,(-2048)@16<=s c0e5,c0e5<s 2048@16,
(-2048)@16<=s c0e6,c0e6<s 2048@16,(-2048)@16<=s c0e7,c0e7<s 2048@16,
(-2048)@16<=s c0e8,c0e8<s 2048@16,(-2048)@16<=s c0e9,c0e9<s 2048@16,
(-2048)@16<=s c0ea,c0ea<s 2048@16,(-2048)@16<=s c0eb,c0eb<s 2048@16,
(-2048)@16<=s c0ec,c0ec<s 2048@16,(-2048)@16<=s c0ed,c0ed<s 2048@16,
(-2048)@16<=s c0ee,c0ee<s 2048@16,(-2048)@16<=s c0ef,c0ef<s 2048@16,
(-2048)@16<=s c0f0,c0f0<s 2048@16,(-2048)@16<=s c0f1,c0f1<s 2048@16,
(-2048)@16<=s c0f2,c0f2<s 2048@16,(-2048)@16<=s c0f3,c0f3<s 2048@16,
(-2048)@16<=s c0f4,c0f4<s 2048@16,(-2048)@16<=s c0f5,c0f5<s 2048@16,
(-2048)@16<=s c0f6,c0f6<s 2048@16,(-2048)@16<=s c0f7,c0f7<s 2048@16,
(-2048)@16<=s c0f8,c0f8<s 2048@16,(-2048)@16<=s c0f9,c0f9<s 2048@16,
(-2048)@16<=s c0fa,c0fa<s 2048@16,(-2048)@16<=s c0fb,c0fb<s 2048@16,
(-2048)@16<=s c0fc,c0fc<s 2048@16,(-2048)@16<=s c0fd,c0fd<s 2048@16,
(-2048)@16<=s c0fe,c0fe<s 2048@16,(-2048)@16<=s c0ff,c0ff<s 2048@16,
(-2048)@16<=s c100,c100<s 2048@16,(-2048)@16<=s c101,c101<s 2048@16,
(-2048)@16<=s c102,c102<s 2048@16,(-2048)@16<=s c103,c103<s 2048@16,
(-2048)@16<=s c104,c104<s 2048@16,(-2048)@16<=s c105,c105<s 2048@16,
(-2048)@16<=s c106,c106<s 2048@16,(-2048)@16<=s c107,c107<s 2048@16,
(-2048)@16<=s c108,c108<s 2048@16,(-2048)@16<=s c109,c109<s 2048@16,
(-2048)@16<=s c10a,c10a<s 2048@16,(-2048)@16<=s c10b,c10b<s 2048@16,
(-2048)@16<=s c10c,c10c<s 2048@16,(-2048)@16<=s c10d,c10d<s 2048@16,
(-2048)@16<=s c10e,c10e<s 2048@16,(-2048)@16<=s c10f,c10f<s 2048@16,
(-2048)@16<=s c110,c110<s 2048@16,(-2048)@16<=s c111,c111<s 2048@16,
(-2048)@16<=s c112,c112<s 2048@16,(-2048)@16<=s c113,c113<s 2048@16,
(-2048)@16<=s c114,c114<s 2048@16,(-2048)@16<=s c115,c115<s 2048@16,
(-2048)@16<=s c116,c116<s 2048@16,(-2048)@16<=s c117,c117<s 2048@16,
(-2048)@16<=s c118,c118<s 2048@16,(-2048)@16<=s c119,c119<s 2048@16,
(-2048)@16<=s c11a,c11a<s 2048@16,(-2048)@16<=s c11b,c11b<s 2048@16,
(-2048)@16<=s c11c,c11c<s 2048@16,(-2048)@16<=s c11d,c11d<s 2048@16,
(-2048)@16<=s c11e,c11e<s 2048@16,(-2048)@16<=s c11f,c11f<s 2048@16,
(-2048)@16<=s c120,c120<s 2048@16,(-2048)@16<=s c121,c121<s 2048@16,
(-2048)@16<=s c122,c122<s 2048@16,(-2048)@16<=s c123,c123<s 2048@16,
(-2048)@16<=s c124,c124<s 2048@16,(-2048)@16<=s c125,c125<s 2048@16,
(-2048)@16<=s c126,c126<s 2048@16,(-2048)@16<=s c127,c127<s 2048@16,
(-2048)@16<=s c128,c128<s 2048@16,(-2048)@16<=s c129,c129<s 2048@16,
(-2048)@16<=s c12a,c12a<s 2048@16,(-2048)@16<=s c12b,c12b<s 2048@16,
(-2048)@16<=s c12c,c12c<s 2048@16,(-2048)@16<=s c12d,c12d<s 2048@16,
(-2048)@16<=s c12e,c12e<s 2048@16,(-2048)@16<=s c12f,c12f<s 2048@16,
(-2048)@16<=s c130,c130<s 2048@16,(-2048)@16<=s c131,c131<s 2048@16,
(-2048)@16<=s c132,c132<s 2048@16,(-2048)@16<=s c133,c133<s 2048@16,
(-2048)@16<=s c134,c134<s 2048@16,(-2048)@16<=s c135,c135<s 2048@16,
(-2048)@16<=s c136,c136<s 2048@16,(-2048)@16<=s c137,c137<s 2048@16,
(-2048)@16<=s c138,c138<s 2048@16,(-2048)@16<=s c139,c139<s 2048@16,
(-2048)@16<=s c13a,c13a<s 2048@16,(-2048)@16<=s c13b,c13b<s 2048@16,
(-2048)@16<=s c13c,c13c<s 2048@16,(-2048)@16<=s c13d,c13d<s 2048@16,
(-2048)@16<=s c13e,c13e<s 2048@16,(-2048)@16<=s c13f,c13f<s 2048@16,
(-2048)@16<=s c140,c140<s 2048@16,(-2048)@16<=s c141,c141<s 2048@16,
(-2048)@16<=s c142,c142<s 2048@16,(-2048)@16<=s c143,c143<s 2048@16,
(-2048)@16<=s c144,c144<s 2048@16,(-2048)@16<=s c145,c145<s 2048@16,
(-2048)@16<=s c146,c146<s 2048@16,(-2048)@16<=s c147,c147<s 2048@16,
(-2048)@16<=s c148,c148<s 2048@16,(-2048)@16<=s c149,c149<s 2048@16,
(-2048)@16<=s c14a,c14a<s 2048@16,(-2048)@16<=s c14b,c14b<s 2048@16,
(-2048)@16<=s c14c,c14c<s 2048@16,(-2048)@16<=s c14d,c14d<s 2048@16,
(-2048)@16<=s c14e,c14e<s 2048@16,(-2048)@16<=s c14f,c14f<s 2048@16,
(-2048)@16<=s c150,c150<s 2048@16,(-2048)@16<=s c151,c151<s 2048@16,
(-2048)@16<=s c152,c152<s 2048@16,(-2048)@16<=s c153,c153<s 2048@16,
(-2048)@16<=s c154,c154<s 2048@16,(-2048)@16<=s c155,c155<s 2048@16,
(-2048)@16<=s c156,c156<s 2048@16,(-2048)@16<=s c157,c157<s 2048@16,
(-2048)@16<=s c158,c158<s 2048@16,(-2048)@16<=s c159,c159<s 2048@16,
(-2048)@16<=s c15a,c15a<s 2048@16,(-2048)@16<=s c15b,c15b<s 2048@16,
(-2048)@16<=s c15c,c15c<s 2048@16,(-2048)@16<=s c15d,c15d<s 2048@16,
(-2048)@16<=s c15e,c15e<s 2048@16,(-2048)@16<=s c15f,c15f<s 2048@16,
(-2048)@16<=s c160,c160<s 2048@16,(-2048)@16<=s c161,c161<s 2048@16,
(-2048)@16<=s c162,c162<s 2048@16,(-2048)@16<=s c163,c163<s 2048@16,
(-2048)@16<=s c164,c164<s 2048@16,(-2048)@16<=s c165,c165<s 2048@16,
(-2048)@16<=s c166,c166<s 2048@16,(-2048)@16<=s c167,c167<s 2048@16,
(-2048)@16<=s c168,c168<s 2048@16,(-2048)@16<=s c169,c169<s 2048@16,
(-2048)@16<=s c16a,c16a<s 2048@16,(-2048)@16<=s c16b,c16b<s 2048@16,
(-2048)@16<=s c16c,c16c<s 2048@16,(-2048)@16<=s c16d,c16d<s 2048@16,
(-2048)@16<=s c16e,c16e<s 2048@16,(-2048)@16<=s c16f,c16f<s 2048@16,
(-2048)@16<=s c170,c170<s 2048@16,(-2048)@16<=s c171,c171<s 2048@16,
(-2048)@16<=s c172,c172<s 2048@16,(-2048)@16<=s c173,c173<s 2048@16,
(-2048)@16<=s c174,c174<s 2048@16,(-2048)@16<=s c175,c175<s 2048@16,
(-2048)@16<=s c176,c176<s 2048@16,(-2048)@16<=s c177,c177<s 2048@16,
(-2048)@16<=s c178,c178<s 2048@16,(-2048)@16<=s c179,c179<s 2048@16,
(-2048)@16<=s c17a,c17a<s 2048@16,(-2048)@16<=s c17b,c17b<s 2048@16,
(-2048)@16<=s c17c,c17c<s 2048@16,(-2048)@16<=s c17d,c17d<s 2048@16,
(-2048)@16<=s c17e,c17e<s 2048@16,(-2048)@16<=s c17f,c17f<s 2048@16,
(-2048)@16<=s c180,c180<s 2048@16,(-2048)@16<=s c181,c181<s 2048@16,
(-2048)@16<=s c182,c182<s 2048@16,(-2048)@16<=s c183,c183<s 2048@16,
(-2048)@16<=s c184,c184<s 2048@16,(-2048)@16<=s c185,c185<s 2048@16,
(-2048)@16<=s c186,c186<s 2048@16,(-2048)@16<=s c187,c187<s 2048@16,
(-2048)@16<=s c188,c188<s 2048@16,(-2048)@16<=s c189,c189<s 2048@16,
(-2048)@16<=s c18a,c18a<s 2048@16,(-2048)@16<=s c18b,c18b<s 2048@16,
(-2048)@16<=s c18c,c18c<s 2048@16,(-2048)@16<=s c18d,c18d<s 2048@16,
(-2048)@16<=s c18e,c18e<s 2048@16,(-2048)@16<=s c18f,c18f<s 2048@16,
(-2048)@16<=s c190,c190<s 2048@16,(-2048)@16<=s c191,c191<s 2048@16,
(-2048)@16<=s c192,c192<s 2048@16,(-2048)@16<=s c193,c193<s 2048@16,
(-2048)@16<=s c194,c194<s 2048@16,(-2048)@16<=s c195,c195<s 2048@16,
(-2048)@16<=s c196,c196<s 2048@16,(-2048)@16<=s c197,c197<s 2048@16,
(-2048)@16<=s c198,c198<s 2048@16,(-2048)@16<=s c199,c199<s 2048@16,
(-2048)@16<=s c19a,c19a<s 2048@16,(-2048)@16<=s c19b,c19b<s 2048@16,
(-2048)@16<=s c19c,c19c<s 2048@16,(-2048)@16<=s c19d,c19d<s 2048@16,
(-2048)@16<=s c19e,c19e<s 2048@16,(-2048)@16<=s c19f,c19f<s 2048@16,
(-2048)@16<=s c1a0,c1a0<s 2048@16,(-2048)@16<=s c1a1,c1a1<s 2048@16,
(-2048)@16<=s c1a2,c1a2<s 2048@16,(-2048)@16<=s c1a3,c1a3<s 2048@16,
(-2048)@16<=s c1a4,c1a4<s 2048@16,(-2048)@16<=s c1a5,c1a5<s 2048@16,
(-2048)@16<=s c1a6,c1a6<s 2048@16,(-2048)@16<=s c1a7,c1a7<s 2048@16,
(-2048)@16<=s c1a8,c1a8<s 2048@16,(-2048)@16<=s c1a9,c1a9<s 2048@16,
(-2048)@16<=s c1aa,c1aa<s 2048@16,(-2048)@16<=s c1ab,c1ab<s 2048@16,
(-2048)@16<=s c1ac,c1ac<s 2048@16,(-2048)@16<=s c1ad,c1ad<s 2048@16,
(-2048)@16<=s c1ae,c1ae<s 2048@16,(-2048)@16<=s c1af,c1af<s 2048@16,
(-2048)@16<=s c1b0,c1b0<s 2048@16,(-2048)@16<=s c1b1,c1b1<s 2048@16,
(-2048)@16<=s c1b2,c1b2<s 2048@16,(-2048)@16<=s c1b3,c1b3<s 2048@16,
(-2048)@16<=s c1b4,c1b4<s 2048@16,(-2048)@16<=s c1b5,c1b5<s 2048@16,
(-2048)@16<=s c1b6,c1b6<s 2048@16,(-2048)@16<=s c1b7,c1b7<s 2048@16,
(-2048)@16<=s c1b8,c1b8<s 2048@16,(-2048)@16<=s c1b9,c1b9<s 2048@16,
(-2048)@16<=s c1ba,c1ba<s 2048@16,(-2048)@16<=s c1bb,c1bb<s 2048@16,
(-2048)@16<=s c1bc,c1bc<s 2048@16,(-2048)@16<=s c1bd,c1bd<s 2048@16,
(-2048)@16<=s c1be,c1be<s 2048@16,(-2048)@16<=s c1bf,c1bf<s 2048@16,
(-2048)@16<=s c1c0,c1c0<s 2048@16,(-2048)@16<=s c1c1,c1c1<s 2048@16,
(-2048)@16<=s c1c2,c1c2<s 2048@16,(-2048)@16<=s c1c3,c1c3<s 2048@16,
(-2048)@16<=s c1c4,c1c4<s 2048@16,(-2048)@16<=s c1c5,c1c5<s 2048@16,
(-2048)@16<=s c1c6,c1c6<s 2048@16,(-2048)@16<=s c1c7,c1c7<s 2048@16,
(-2048)@16<=s c1c8,c1c8<s 2048@16,(-2048)@16<=s c1c9,c1c9<s 2048@16,
(-2048)@16<=s c1ca,c1ca<s 2048@16,(-2048)@16<=s c1cb,c1cb<s 2048@16,
(-2048)@16<=s c1cc,c1cc<s 2048@16,(-2048)@16<=s c1cd,c1cd<s 2048@16,
(-2048)@16<=s c1ce,c1ce<s 2048@16,(-2048)@16<=s c1cf,c1cf<s 2048@16,
(-2048)@16<=s c1d0,c1d0<s 2048@16,(-2048)@16<=s c1d1,c1d1<s 2048@16,
(-2048)@16<=s c1d2,c1d2<s 2048@16,(-2048)@16<=s c1d3,c1d3<s 2048@16,
(-2048)@16<=s c1d4,c1d4<s 2048@16,(-2048)@16<=s c1d5,c1d5<s 2048@16,
(-2048)@16<=s c1d6,c1d6<s 2048@16,(-2048)@16<=s c1d7,c1d7<s 2048@16,
(-2048)@16<=s c1d8,c1d8<s 2048@16,(-2048)@16<=s c1d9,c1d9<s 2048@16,
(-2048)@16<=s c1da,c1da<s 2048@16,(-2048)@16<=s c1db,c1db<s 2048@16,
(-2048)@16<=s c1dc,c1dc<s 2048@16,(-2048)@16<=s c1dd,c1dd<s 2048@16,
(-2048)@16<=s c1de,c1de<s 2048@16,(-2048)@16<=s c1df,c1df<s 2048@16,
(-2048)@16<=s c1e0,c1e0<s 2048@16,(-2048)@16<=s c1e1,c1e1<s 2048@16,
(-2048)@16<=s c1e2,c1e2<s 2048@16,(-2048)@16<=s c1e3,c1e3<s 2048@16,
(-2048)@16<=s c1e4,c1e4<s 2048@16,(-2048)@16<=s c1e5,c1e5<s 2048@16,
(-2048)@16<=s c1e6,c1e6<s 2048@16,(-2048)@16<=s c1e7,c1e7<s 2048@16,
(-2048)@16<=s c1e8,c1e8<s 2048@16,(-2048)@16<=s c1e9,c1e9<s 2048@16,
(-2048)@16<=s c1ea,c1ea<s 2048@16,(-2048)@16<=s c1eb,c1eb<s 2048@16,
(-2048)@16<=s c1ec,c1ec<s 2048@16,(-2048)@16<=s c1ed,c1ed<s 2048@16,
(-2048)@16<=s c1ee,c1ee<s 2048@16,(-2048)@16<=s c1ef,c1ef<s 2048@16,
(-2048)@16<=s c1f0,c1f0<s 2048@16,(-2048)@16<=s c1f1,c1f1<s 2048@16,
(-2048)@16<=s c1f2,c1f2<s 2048@16,(-2048)@16<=s c1f3,c1f3<s 2048@16,
(-2048)@16<=s c1f4,c1f4<s 2048@16,(-2048)@16<=s c1f5,c1f5<s 2048@16,
(-2048)@16<=s c1f6,c1f6<s 2048@16,(-2048)@16<=s c1f7,c1f7<s 2048@16,
(-2048)@16<=s c1f8,c1f8<s 2048@16,(-2048)@16<=s c1f9,c1f9<s 2048@16,
(-2048)@16<=s c1fa,c1fa<s 2048@16,(-2048)@16<=s c1fb,c1fb<s 2048@16,
(-2048)@16<=s c1fc,c1fc<s 2048@16,0@16 = c1fd,0@16 = c1fe,0@16 = c1ff
]
}

(**************** CUT   0,  0 *****************)

ecut true;



(**************** initialization *****************)

mov L0x7fffffffcae0 c000; mov L0x7fffffffcae2 c001; mov L0x7fffffffcae4 c002;
mov L0x7fffffffcae6 c003; mov L0x7fffffffcae8 c004; mov L0x7fffffffcaea c005;
mov L0x7fffffffcaec c006; mov L0x7fffffffcaee c007; mov L0x7fffffffcaf0 c008;
mov L0x7fffffffcaf2 c009; mov L0x7fffffffcaf4 c00a; mov L0x7fffffffcaf6 c00b;
mov L0x7fffffffcaf8 c00c; mov L0x7fffffffcafa c00d; mov L0x7fffffffcafc c00e;
mov L0x7fffffffcafe c00f; mov L0x7fffffffcb00 c010; mov L0x7fffffffcb02 c011;
mov L0x7fffffffcb04 c012; mov L0x7fffffffcb06 c013; mov L0x7fffffffcb08 c014;
mov L0x7fffffffcb0a c015; mov L0x7fffffffcb0c c016; mov L0x7fffffffcb0e c017;
mov L0x7fffffffcb10 c018; mov L0x7fffffffcb12 c019; mov L0x7fffffffcb14 c01a;
mov L0x7fffffffcb16 c01b; mov L0x7fffffffcb18 c01c; mov L0x7fffffffcb1a c01d;
mov L0x7fffffffcb1c c01e; mov L0x7fffffffcb1e c01f; mov L0x7fffffffcb20 c020;
mov L0x7fffffffcb22 c021; mov L0x7fffffffcb24 c022; mov L0x7fffffffcb26 c023;
mov L0x7fffffffcb28 c024; mov L0x7fffffffcb2a c025; mov L0x7fffffffcb2c c026;
mov L0x7fffffffcb2e c027; mov L0x7fffffffcb30 c028; mov L0x7fffffffcb32 c029;
mov L0x7fffffffcb34 c02a; mov L0x7fffffffcb36 c02b; mov L0x7fffffffcb38 c02c;
mov L0x7fffffffcb3a c02d; mov L0x7fffffffcb3c c02e; mov L0x7fffffffcb3e c02f;
mov L0x7fffffffcb40 c030; mov L0x7fffffffcb42 c031; mov L0x7fffffffcb44 c032;
mov L0x7fffffffcb46 c033; mov L0x7fffffffcb48 c034; mov L0x7fffffffcb4a c035;
mov L0x7fffffffcb4c c036; mov L0x7fffffffcb4e c037; mov L0x7fffffffcb50 c038;
mov L0x7fffffffcb52 c039; mov L0x7fffffffcb54 c03a; mov L0x7fffffffcb56 c03b;
mov L0x7fffffffcb58 c03c; mov L0x7fffffffcb5a c03d; mov L0x7fffffffcb5c c03e;
mov L0x7fffffffcb5e c03f; mov L0x7fffffffcb60 c040; mov L0x7fffffffcb62 c041;
mov L0x7fffffffcb64 c042; mov L0x7fffffffcb66 c043; mov L0x7fffffffcb68 c044;
mov L0x7fffffffcb6a c045; mov L0x7fffffffcb6c c046; mov L0x7fffffffcb6e c047;
mov L0x7fffffffcb70 c048; mov L0x7fffffffcb72 c049; mov L0x7fffffffcb74 c04a;
mov L0x7fffffffcb76 c04b; mov L0x7fffffffcb78 c04c; mov L0x7fffffffcb7a c04d;
mov L0x7fffffffcb7c c04e; mov L0x7fffffffcb7e c04f; mov L0x7fffffffcb80 c050;
mov L0x7fffffffcb82 c051; mov L0x7fffffffcb84 c052; mov L0x7fffffffcb86 c053;
mov L0x7fffffffcb88 c054; mov L0x7fffffffcb8a c055; mov L0x7fffffffcb8c c056;
mov L0x7fffffffcb8e c057; mov L0x7fffffffcb90 c058; mov L0x7fffffffcb92 c059;
mov L0x7fffffffcb94 c05a; mov L0x7fffffffcb96 c05b; mov L0x7fffffffcb98 c05c;
mov L0x7fffffffcb9a c05d; mov L0x7fffffffcb9c c05e; mov L0x7fffffffcb9e c05f;
mov L0x7fffffffcba0 c060; mov L0x7fffffffcba2 c061; mov L0x7fffffffcba4 c062;
mov L0x7fffffffcba6 c063; mov L0x7fffffffcba8 c064; mov L0x7fffffffcbaa c065;
mov L0x7fffffffcbac c066; mov L0x7fffffffcbae c067; mov L0x7fffffffcbb0 c068;
mov L0x7fffffffcbb2 c069; mov L0x7fffffffcbb4 c06a; mov L0x7fffffffcbb6 c06b;
mov L0x7fffffffcbb8 c06c; mov L0x7fffffffcbba c06d; mov L0x7fffffffcbbc c06e;
mov L0x7fffffffcbbe c06f; mov L0x7fffffffcbc0 c070; mov L0x7fffffffcbc2 c071;
mov L0x7fffffffcbc4 c072; mov L0x7fffffffcbc6 c073; mov L0x7fffffffcbc8 c074;
mov L0x7fffffffcbca c075; mov L0x7fffffffcbcc c076; mov L0x7fffffffcbce c077;
mov L0x7fffffffcbd0 c078; mov L0x7fffffffcbd2 c079; mov L0x7fffffffcbd4 c07a;
mov L0x7fffffffcbd6 c07b; mov L0x7fffffffcbd8 c07c; mov L0x7fffffffcbda c07d;
mov L0x7fffffffcbdc c07e; mov L0x7fffffffcbde c07f; mov L0x7fffffffcbe0 c080;
mov L0x7fffffffcbe2 c081; mov L0x7fffffffcbe4 c082; mov L0x7fffffffcbe6 c083;
mov L0x7fffffffcbe8 c084; mov L0x7fffffffcbea c085; mov L0x7fffffffcbec c086;
mov L0x7fffffffcbee c087; mov L0x7fffffffcbf0 c088; mov L0x7fffffffcbf2 c089;
mov L0x7fffffffcbf4 c08a; mov L0x7fffffffcbf6 c08b; mov L0x7fffffffcbf8 c08c;
mov L0x7fffffffcbfa c08d; mov L0x7fffffffcbfc c08e; mov L0x7fffffffcbfe c08f;
mov L0x7fffffffcc00 c090; mov L0x7fffffffcc02 c091; mov L0x7fffffffcc04 c092;
mov L0x7fffffffcc06 c093; mov L0x7fffffffcc08 c094; mov L0x7fffffffcc0a c095;
mov L0x7fffffffcc0c c096; mov L0x7fffffffcc0e c097; mov L0x7fffffffcc10 c098;
mov L0x7fffffffcc12 c099; mov L0x7fffffffcc14 c09a; mov L0x7fffffffcc16 c09b;
mov L0x7fffffffcc18 c09c; mov L0x7fffffffcc1a c09d; mov L0x7fffffffcc1c c09e;
mov L0x7fffffffcc1e c09f; mov L0x7fffffffcc20 c0a0; mov L0x7fffffffcc22 c0a1;
mov L0x7fffffffcc24 c0a2; mov L0x7fffffffcc26 c0a3; mov L0x7fffffffcc28 c0a4;
mov L0x7fffffffcc2a c0a5; mov L0x7fffffffcc2c c0a6; mov L0x7fffffffcc2e c0a7;
mov L0x7fffffffcc30 c0a8; mov L0x7fffffffcc32 c0a9; mov L0x7fffffffcc34 c0aa;
mov L0x7fffffffcc36 c0ab; mov L0x7fffffffcc38 c0ac; mov L0x7fffffffcc3a c0ad;
mov L0x7fffffffcc3c c0ae; mov L0x7fffffffcc3e c0af; mov L0x7fffffffcc40 c0b0;
mov L0x7fffffffcc42 c0b1; mov L0x7fffffffcc44 c0b2; mov L0x7fffffffcc46 c0b3;
mov L0x7fffffffcc48 c0b4; mov L0x7fffffffcc4a c0b5; mov L0x7fffffffcc4c c0b6;
mov L0x7fffffffcc4e c0b7; mov L0x7fffffffcc50 c0b8; mov L0x7fffffffcc52 c0b9;
mov L0x7fffffffcc54 c0ba; mov L0x7fffffffcc56 c0bb; mov L0x7fffffffcc58 c0bc;
mov L0x7fffffffcc5a c0bd; mov L0x7fffffffcc5c c0be; mov L0x7fffffffcc5e c0bf;
mov L0x7fffffffcc60 c0c0; mov L0x7fffffffcc62 c0c1; mov L0x7fffffffcc64 c0c2;
mov L0x7fffffffcc66 c0c3; mov L0x7fffffffcc68 c0c4; mov L0x7fffffffcc6a c0c5;
mov L0x7fffffffcc6c c0c6; mov L0x7fffffffcc6e c0c7; mov L0x7fffffffcc70 c0c8;
mov L0x7fffffffcc72 c0c9; mov L0x7fffffffcc74 c0ca; mov L0x7fffffffcc76 c0cb;
mov L0x7fffffffcc78 c0cc; mov L0x7fffffffcc7a c0cd; mov L0x7fffffffcc7c c0ce;
mov L0x7fffffffcc7e c0cf; mov L0x7fffffffcc80 c0d0; mov L0x7fffffffcc82 c0d1;
mov L0x7fffffffcc84 c0d2; mov L0x7fffffffcc86 c0d3; mov L0x7fffffffcc88 c0d4;
mov L0x7fffffffcc8a c0d5; mov L0x7fffffffcc8c c0d6; mov L0x7fffffffcc8e c0d7;
mov L0x7fffffffcc90 c0d8; mov L0x7fffffffcc92 c0d9; mov L0x7fffffffcc94 c0da;
mov L0x7fffffffcc96 c0db; mov L0x7fffffffcc98 c0dc; mov L0x7fffffffcc9a c0dd;
mov L0x7fffffffcc9c c0de; mov L0x7fffffffcc9e c0df; mov L0x7fffffffcca0 c0e0;
mov L0x7fffffffcca2 c0e1; mov L0x7fffffffcca4 c0e2; mov L0x7fffffffcca6 c0e3;
mov L0x7fffffffcca8 c0e4; mov L0x7fffffffccaa c0e5; mov L0x7fffffffccac c0e6;
mov L0x7fffffffccae c0e7; mov L0x7fffffffccb0 c0e8; mov L0x7fffffffccb2 c0e9;
mov L0x7fffffffccb4 c0ea; mov L0x7fffffffccb6 c0eb; mov L0x7fffffffccb8 c0ec;
mov L0x7fffffffccba c0ed; mov L0x7fffffffccbc c0ee; mov L0x7fffffffccbe c0ef;
mov L0x7fffffffccc0 c0f0; mov L0x7fffffffccc2 c0f1; mov L0x7fffffffccc4 c0f2;
mov L0x7fffffffccc6 c0f3; mov L0x7fffffffccc8 c0f4; mov L0x7fffffffccca c0f5;
mov L0x7fffffffcccc c0f6; mov L0x7fffffffccce c0f7; mov L0x7fffffffccd0 c0f8;
mov L0x7fffffffccd2 c0f9; mov L0x7fffffffccd4 c0fa; mov L0x7fffffffccd6 c0fb;
mov L0x7fffffffccd8 c0fc; mov L0x7fffffffccda c0fd; mov L0x7fffffffccdc c0fe;
mov L0x7fffffffccde c0ff; mov L0x7fffffffcce0 c100; mov L0x7fffffffcce2 c101;
mov L0x7fffffffcce4 c102; mov L0x7fffffffcce6 c103; mov L0x7fffffffcce8 c104;
mov L0x7fffffffccea c105; mov L0x7fffffffccec c106; mov L0x7fffffffccee c107;
mov L0x7fffffffccf0 c108; mov L0x7fffffffccf2 c109; mov L0x7fffffffccf4 c10a;
mov L0x7fffffffccf6 c10b; mov L0x7fffffffccf8 c10c; mov L0x7fffffffccfa c10d;
mov L0x7fffffffccfc c10e; mov L0x7fffffffccfe c10f; mov L0x7fffffffcd00 c110;
mov L0x7fffffffcd02 c111; mov L0x7fffffffcd04 c112; mov L0x7fffffffcd06 c113;
mov L0x7fffffffcd08 c114; mov L0x7fffffffcd0a c115; mov L0x7fffffffcd0c c116;
mov L0x7fffffffcd0e c117; mov L0x7fffffffcd10 c118; mov L0x7fffffffcd12 c119;
mov L0x7fffffffcd14 c11a; mov L0x7fffffffcd16 c11b; mov L0x7fffffffcd18 c11c;
mov L0x7fffffffcd1a c11d; mov L0x7fffffffcd1c c11e; mov L0x7fffffffcd1e c11f;
mov L0x7fffffffcd20 c120; mov L0x7fffffffcd22 c121; mov L0x7fffffffcd24 c122;
mov L0x7fffffffcd26 c123; mov L0x7fffffffcd28 c124; mov L0x7fffffffcd2a c125;
mov L0x7fffffffcd2c c126; mov L0x7fffffffcd2e c127; mov L0x7fffffffcd30 c128;
mov L0x7fffffffcd32 c129; mov L0x7fffffffcd34 c12a; mov L0x7fffffffcd36 c12b;
mov L0x7fffffffcd38 c12c; mov L0x7fffffffcd3a c12d; mov L0x7fffffffcd3c c12e;
mov L0x7fffffffcd3e c12f; mov L0x7fffffffcd40 c130; mov L0x7fffffffcd42 c131;
mov L0x7fffffffcd44 c132; mov L0x7fffffffcd46 c133; mov L0x7fffffffcd48 c134;
mov L0x7fffffffcd4a c135; mov L0x7fffffffcd4c c136; mov L0x7fffffffcd4e c137;
mov L0x7fffffffcd50 c138; mov L0x7fffffffcd52 c139; mov L0x7fffffffcd54 c13a;
mov L0x7fffffffcd56 c13b; mov L0x7fffffffcd58 c13c; mov L0x7fffffffcd5a c13d;
mov L0x7fffffffcd5c c13e; mov L0x7fffffffcd5e c13f; mov L0x7fffffffcd60 c140;
mov L0x7fffffffcd62 c141; mov L0x7fffffffcd64 c142; mov L0x7fffffffcd66 c143;
mov L0x7fffffffcd68 c144; mov L0x7fffffffcd6a c145; mov L0x7fffffffcd6c c146;
mov L0x7fffffffcd6e c147; mov L0x7fffffffcd70 c148; mov L0x7fffffffcd72 c149;
mov L0x7fffffffcd74 c14a; mov L0x7fffffffcd76 c14b; mov L0x7fffffffcd78 c14c;
mov L0x7fffffffcd7a c14d; mov L0x7fffffffcd7c c14e; mov L0x7fffffffcd7e c14f;
mov L0x7fffffffcd80 c150; mov L0x7fffffffcd82 c151; mov L0x7fffffffcd84 c152;
mov L0x7fffffffcd86 c153; mov L0x7fffffffcd88 c154; mov L0x7fffffffcd8a c155;
mov L0x7fffffffcd8c c156; mov L0x7fffffffcd8e c157; mov L0x7fffffffcd90 c158;
mov L0x7fffffffcd92 c159; mov L0x7fffffffcd94 c15a; mov L0x7fffffffcd96 c15b;
mov L0x7fffffffcd98 c15c; mov L0x7fffffffcd9a c15d; mov L0x7fffffffcd9c c15e;
mov L0x7fffffffcd9e c15f; mov L0x7fffffffcda0 c160; mov L0x7fffffffcda2 c161;
mov L0x7fffffffcda4 c162; mov L0x7fffffffcda6 c163; mov L0x7fffffffcda8 c164;
mov L0x7fffffffcdaa c165; mov L0x7fffffffcdac c166; mov L0x7fffffffcdae c167;
mov L0x7fffffffcdb0 c168; mov L0x7fffffffcdb2 c169; mov L0x7fffffffcdb4 c16a;
mov L0x7fffffffcdb6 c16b; mov L0x7fffffffcdb8 c16c; mov L0x7fffffffcdba c16d;
mov L0x7fffffffcdbc c16e; mov L0x7fffffffcdbe c16f; mov L0x7fffffffcdc0 c170;
mov L0x7fffffffcdc2 c171; mov L0x7fffffffcdc4 c172; mov L0x7fffffffcdc6 c173;
mov L0x7fffffffcdc8 c174; mov L0x7fffffffcdca c175; mov L0x7fffffffcdcc c176;
mov L0x7fffffffcdce c177; mov L0x7fffffffcdd0 c178; mov L0x7fffffffcdd2 c179;
mov L0x7fffffffcdd4 c17a; mov L0x7fffffffcdd6 c17b; mov L0x7fffffffcdd8 c17c;
mov L0x7fffffffcdda c17d; mov L0x7fffffffcddc c17e; mov L0x7fffffffcdde c17f;
mov L0x7fffffffcde0 c180; mov L0x7fffffffcde2 c181; mov L0x7fffffffcde4 c182;
mov L0x7fffffffcde6 c183; mov L0x7fffffffcde8 c184; mov L0x7fffffffcdea c185;
mov L0x7fffffffcdec c186; mov L0x7fffffffcdee c187; mov L0x7fffffffcdf0 c188;
mov L0x7fffffffcdf2 c189; mov L0x7fffffffcdf4 c18a; mov L0x7fffffffcdf6 c18b;
mov L0x7fffffffcdf8 c18c; mov L0x7fffffffcdfa c18d; mov L0x7fffffffcdfc c18e;
mov L0x7fffffffcdfe c18f; mov L0x7fffffffce00 c190; mov L0x7fffffffce02 c191;
mov L0x7fffffffce04 c192; mov L0x7fffffffce06 c193; mov L0x7fffffffce08 c194;
mov L0x7fffffffce0a c195; mov L0x7fffffffce0c c196; mov L0x7fffffffce0e c197;
mov L0x7fffffffce10 c198; mov L0x7fffffffce12 c199; mov L0x7fffffffce14 c19a;
mov L0x7fffffffce16 c19b; mov L0x7fffffffce18 c19c; mov L0x7fffffffce1a c19d;
mov L0x7fffffffce1c c19e; mov L0x7fffffffce1e c19f; mov L0x7fffffffce20 c1a0;
mov L0x7fffffffce22 c1a1; mov L0x7fffffffce24 c1a2; mov L0x7fffffffce26 c1a3;
mov L0x7fffffffce28 c1a4; mov L0x7fffffffce2a c1a5; mov L0x7fffffffce2c c1a6;
mov L0x7fffffffce2e c1a7; mov L0x7fffffffce30 c1a8; mov L0x7fffffffce32 c1a9;
mov L0x7fffffffce34 c1aa; mov L0x7fffffffce36 c1ab; mov L0x7fffffffce38 c1ac;
mov L0x7fffffffce3a c1ad; mov L0x7fffffffce3c c1ae; mov L0x7fffffffce3e c1af;
mov L0x7fffffffce40 c1b0; mov L0x7fffffffce42 c1b1; mov L0x7fffffffce44 c1b2;
mov L0x7fffffffce46 c1b3; mov L0x7fffffffce48 c1b4; mov L0x7fffffffce4a c1b5;
mov L0x7fffffffce4c c1b6; mov L0x7fffffffce4e c1b7; mov L0x7fffffffce50 c1b8;
mov L0x7fffffffce52 c1b9; mov L0x7fffffffce54 c1ba; mov L0x7fffffffce56 c1bb;
mov L0x7fffffffce58 c1bc; mov L0x7fffffffce5a c1bd; mov L0x7fffffffce5c c1be;
mov L0x7fffffffce5e c1bf; mov L0x7fffffffce60 c1c0; mov L0x7fffffffce62 c1c1;
mov L0x7fffffffce64 c1c2; mov L0x7fffffffce66 c1c3; mov L0x7fffffffce68 c1c4;
mov L0x7fffffffce6a c1c5; mov L0x7fffffffce6c c1c6; mov L0x7fffffffce6e c1c7;
mov L0x7fffffffce70 c1c8; mov L0x7fffffffce72 c1c9; mov L0x7fffffffce74 c1ca;
mov L0x7fffffffce76 c1cb; mov L0x7fffffffce78 c1cc; mov L0x7fffffffce7a c1cd;
mov L0x7fffffffce7c c1ce; mov L0x7fffffffce7e c1cf; mov L0x7fffffffce80 c1d0;
mov L0x7fffffffce82 c1d1; mov L0x7fffffffce84 c1d2; mov L0x7fffffffce86 c1d3;
mov L0x7fffffffce88 c1d4; mov L0x7fffffffce8a c1d5; mov L0x7fffffffce8c c1d6;
mov L0x7fffffffce8e c1d7; mov L0x7fffffffce90 c1d8; mov L0x7fffffffce92 c1d9;
mov L0x7fffffffce94 c1da; mov L0x7fffffffce96 c1db; mov L0x7fffffffce98 c1dc;
mov L0x7fffffffce9a c1dd; mov L0x7fffffffce9c c1de; mov L0x7fffffffce9e c1df;
mov L0x7fffffffcea0 c1e0; mov L0x7fffffffcea2 c1e1; mov L0x7fffffffcea4 c1e2;
mov L0x7fffffffcea6 c1e3; mov L0x7fffffffcea8 c1e4; mov L0x7fffffffceaa c1e5;
mov L0x7fffffffceac c1e6; mov L0x7fffffffceae c1e7; mov L0x7fffffffceb0 c1e8;
mov L0x7fffffffceb2 c1e9; mov L0x7fffffffceb4 c1ea; mov L0x7fffffffceb6 c1eb;
mov L0x7fffffffceb8 c1ec; mov L0x7fffffffceba c1ed; mov L0x7fffffffcebc c1ee;
mov L0x7fffffffcebe c1ef; mov L0x7fffffffcec0 c1f0; mov L0x7fffffffcec2 c1f1;
mov L0x7fffffffcec4 c1f2; mov L0x7fffffffcec6 c1f3; mov L0x7fffffffcec8 c1f4;
mov L0x7fffffffceca c1f5; mov L0x7fffffffcecc c1f6; mov L0x7fffffffcece c1f7;
mov L0x7fffffffced0 c1f8; mov L0x7fffffffced2 c1f9; mov L0x7fffffffced4 c1fa;
mov L0x7fffffffced6 c1fb; mov L0x7fffffffced8 c1fc; mov L0x7fffffffceda c1fd;
mov L0x7fffffffcedc c1fe; mov L0x7fffffffcede c1ff; 


(**************** constants *****************)

mov L0x555555561120 ( 10753)@sint16; mov L0x555555561122 ( 10753)@sint16;
mov L0x555555561124 ( 10753)@sint16; mov L0x555555561126 ( 10753)@sint16;
mov L0x555555561128 ( 10753)@sint16; mov L0x55555556112a ( 10753)@sint16;
mov L0x55555556112c ( 10753)@sint16; mov L0x55555556112e ( 10753)@sint16;
mov L0x555555561130 ( 10753)@sint16; mov L0x555555561132 ( 10753)@sint16;
mov L0x555555561134 ( 10753)@sint16; mov L0x555555561136 ( 10753)@sint16;
mov L0x555555561138 ( 10753)@sint16; mov L0x55555556113a ( 10753)@sint16;
mov L0x55555556113c ( 10753)@sint16; mov L0x55555556113e ( 10753)@sint16;
mov L0x555555561140 (-10751)@sint16; mov L0x555555561142 (-10751)@sint16;
mov L0x555555561144 (-10751)@sint16; mov L0x555555561146 (-10751)@sint16;
mov L0x555555561148 (-10751)@sint16; mov L0x55555556114a (-10751)@sint16;
mov L0x55555556114c (-10751)@sint16; mov L0x55555556114e (-10751)@sint16;
mov L0x555555561150 (-10751)@sint16; mov L0x555555561152 (-10751)@sint16;
mov L0x555555561154 (-10751)@sint16; mov L0x555555561156 (-10751)@sint16;
mov L0x555555561158 (-10751)@sint16; mov L0x55555556115a (-10751)@sint16;
mov L0x55555556115c (-10751)@sint16; mov L0x55555556115e (-10751)@sint16;
mov L0x555555561160 ( 12482)@sint16; mov L0x555555561162 ( 12482)@sint16;
mov L0x555555561164 ( 12482)@sint16; mov L0x555555561166 ( 12482)@sint16;
mov L0x555555561168 ( 12482)@sint16; mov L0x55555556116a ( 12482)@sint16;
mov L0x55555556116c ( 12482)@sint16; mov L0x55555556116e ( 12482)@sint16;
mov L0x555555561170 ( 12482)@sint16; mov L0x555555561172 ( 12482)@sint16;
mov L0x555555561174 ( 12482)@sint16; mov L0x555555561176 ( 12482)@sint16;
mov L0x555555561178 ( 12482)@sint16; mov L0x55555556117a ( 12482)@sint16;
mov L0x55555556117c ( 12482)@sint16; mov L0x55555556117e ( 12482)@sint16;
mov L0x555555561180 (    16)@sint16; mov L0x555555561182 (    16)@sint16;
mov L0x555555561184 (    16)@sint16; mov L0x555555561186 (    16)@sint16;
mov L0x555555561188 (    16)@sint16; mov L0x55555556118a (    16)@sint16;
mov L0x55555556118c (    16)@sint16; mov L0x55555556118e (    16)@sint16;
mov L0x555555561190 (    16)@sint16; mov L0x555555561192 (    16)@sint16;
mov L0x555555561194 (    16)@sint16; mov L0x555555561196 (    16)@sint16;
mov L0x555555561198 (    16)@sint16; mov L0x55555556119a (    16)@sint16;
mov L0x55555556119c (    16)@sint16; mov L0x55555556119e (    16)@sint16;
mov L0x5555555611a0 (    -6)@sint16; mov L0x5555555611a2 (    -6)@sint16;
mov L0x5555555611a4 (    -6)@sint16; mov L0x5555555611a6 (    -6)@sint16;
mov L0x5555555611a8 (    -6)@sint16; mov L0x5555555611aa (    -6)@sint16;
mov L0x5555555611ac (    -6)@sint16; mov L0x5555555611ae (    -6)@sint16;
mov L0x5555555611b0 (    -6)@sint16; mov L0x5555555611b2 (    -6)@sint16;
mov L0x5555555611b4 (    -6)@sint16; mov L0x5555555611b6 (    -6)@sint16;
mov L0x5555555611b8 (    -6)@sint16; mov L0x5555555611ba (    -6)@sint16;
mov L0x5555555611bc (    -6)@sint16; mov L0x5555555611be (    -6)@sint16;
mov L0x5555555611c0 (  1018)@sint16; mov L0x5555555611c2 (  1018)@sint16;
mov L0x5555555611c4 (  1018)@sint16; mov L0x5555555611c6 (  1018)@sint16;
mov L0x5555555611c8 (  1018)@sint16; mov L0x5555555611ca (  1018)@sint16;
mov L0x5555555611cc (  1018)@sint16; mov L0x5555555611ce (  1018)@sint16;
mov L0x5555555611d0 (  1018)@sint16; mov L0x5555555611d2 (  1018)@sint16;
mov L0x5555555611d4 (  1018)@sint16; mov L0x5555555611d6 (  1018)@sint16;
mov L0x5555555611d8 (  1018)@sint16; mov L0x5555555611da (  1018)@sint16;
mov L0x5555555611dc (  1018)@sint16; mov L0x5555555611de (  1018)@sint16;
mov L0x5555555611e0 (  -780)@sint16; mov L0x5555555611e2 (  -780)@sint16;
mov L0x5555555611e4 (  -780)@sint16; mov L0x5555555611e6 (  -780)@sint16;
mov L0x5555555611e8 (  -780)@sint16; mov L0x5555555611ea (  -780)@sint16;
mov L0x5555555611ec (  -780)@sint16; mov L0x5555555611ee (  -780)@sint16;
mov L0x5555555611f0 (  -780)@sint16; mov L0x5555555611f2 (  -780)@sint16;
mov L0x5555555611f4 (  -780)@sint16; mov L0x5555555611f6 (  -780)@sint16;
mov L0x5555555611f8 (  -780)@sint16; mov L0x5555555611fa (  -780)@sint16;
mov L0x5555555611fc (  -780)@sint16; mov L0x5555555611fe (  -780)@sint16;
mov L0x555555561200 (  1268)@sint16; mov L0x555555561202 (  1268)@sint16;
mov L0x555555561204 (  1268)@sint16; mov L0x555555561206 (  1268)@sint16;
mov L0x555555561208 (  1268)@sint16; mov L0x55555556120a (  1268)@sint16;
mov L0x55555556120c (  1268)@sint16; mov L0x55555556120e (  1268)@sint16;
mov L0x555555561210 (  1268)@sint16; mov L0x555555561212 (  1268)@sint16;
mov L0x555555561214 (  1268)@sint16; mov L0x555555561216 (  1268)@sint16;
mov L0x555555561218 (  1268)@sint16; mov L0x55555556121a (  1268)@sint16;
mov L0x55555556121c (  1268)@sint16; mov L0x55555556121e (  1268)@sint16;
mov L0x555555561220 (    -6)@sint16; mov L0x555555561222 ( 27359)@sint16;
mov L0x555555561224 ( -1956)@sint16; mov L0x555555561226 (   408)@sint16;
mov L0x555555561228 ( 10093)@sint16; mov L0x55555556122a (-21094)@sint16;
mov L0x55555556122c ( 28517)@sint16; mov L0x55555556122e (-20856)@sint16;
mov L0x555555561230 ( -7033)@sint16; mov L0x555555561232 (-16090)@sint16;
mov L0x555555561234 (-29449)@sint16; mov L0x555555561236 ( 12476)@sint16;
mov L0x555555561238 (-18345)@sint16; mov L0x55555556123a (-28224)@sint16;
mov L0x55555556123c (  9508)@sint16; mov L0x55555556123e (-16072)@sint16;
mov L0x555555561240 ( 17675)@sint16; mov L0x555555561242 ( 23056)@sint16;
mov L0x555555561244 (-28103)@sint16; mov L0x555555561246 ( -4547)@sint16;
mov L0x555555561248 ( 25543)@sint16; mov L0x55555556124a ( 26518)@sint16;
mov L0x55555556124c (  7228)@sint16; mov L0x55555556124e ( -7429)@sint16;
mov L0x555555561250 ( 14731)@sint16; mov L0x555555561252 (  -829)@sint16;
mov L0x555555561254 ( 10001)@sint16; mov L0x555555561256 ( -3925)@sint16;
mov L0x555555561258 (-14847)@sint16; mov L0x55555556125a ( -3639)@sint16;
mov L0x55555556125c ( 18363)@sint16; mov L0x55555556125e ( 11683)@sint16;
mov L0x555555561260 (  4589)@sint16; mov L0x555555561262 (-23007)@sint16;
mov L0x555555561264 ( 31369)@sint16; mov L0x555555561266 ( 20198)@sint16;
mov L0x555555561268 (  2316)@sint16; mov L0x55555556126a ( 23812)@sint16;
mov L0x55555556126c ( 22532)@sint16; mov L0x55555556126e (-24098)@sint16;
mov L0x555555561270 (-12378)@sint16; mov L0x555555561272 ( -8441)@sint16;
mov L0x555555561274 ( 24269)@sint16; mov L0x555555561276 (-22623)@sint16;
mov L0x555555561278 (-14341)@sint16; mov L0x55555556127a ( 19326)@sint16;
mov L0x55555556127c (-15864)@sint16; mov L0x55555556127e (-22209)@sint16;
mov L0x555555561280 ( -5126)@sint16; mov L0x555555561282 (  5766)@sint16;
mov L0x555555561284 ( -6924)@sint16; mov L0x555555561286 ( 15736)@sint16;
mov L0x555555561288 (-31656)@sint16; mov L0x55555556128a ( 20490)@sint16;
mov L0x55555556128c ( -3407)@sint16; mov L0x55555556128e ( 23781)@sint16;
mov L0x555555561290 (-16724)@sint16; mov L0x555555561292 (-31217)@sint16;
mov L0x555555561294 (  5619)@sint16; mov L0x555555561296 (  6381)@sint16;
mov L0x555555561298 (-27152)@sint16; mov L0x55555556129a (-12707)@sint16;
mov L0x55555556129c (   573)@sint16; mov L0x55555556129e (-15840)@sint16;
mov L0x5555555612a0 (  -609)@sint16; mov L0x5555555612a2 (-16614)@sint16;
mov L0x5555555612a4 (   969)@sint16; mov L0x5555555612a6 (-24702)@sint16;
mov L0x5555555612a8 ( 26238)@sint16; mov L0x5555555612aa (-12214)@sint16;
mov L0x5555555612ac (-31887)@sint16; mov L0x5555555612ae ( 11555)@sint16;
mov L0x5555555612b0 ( 17571)@sint16; mov L0x5555555612b2 ( 29407)@sint16;
mov L0x5555555612b4 (  4175)@sint16; mov L0x5555555612b6 (  2395)@sint16;
mov L0x5555555612b8 (   512)@sint16; mov L0x5555555612ba ( -4394)@sint16;
mov L0x5555555612bc (-32271)@sint16; mov L0x5555555612be ( 31235)@sint16;
mov L0x5555555612c0 ( -2017)@sint16; mov L0x5555555612c2 ( 11854)@sint16;
mov L0x5555555612c4 (  7795)@sint16; mov L0x5555555612c6 (  4090)@sint16;
mov L0x5555555612c8 ( -1627)@sint16; mov L0x5555555612ca ( 30351)@sint16;
mov L0x5555555612cc (  1932)@sint16; mov L0x5555555612ce (-22044)@sint16;
mov L0x5555555612d0 ( 31290)@sint16; mov L0x5555555612d2 (-17352)@sint16;
mov L0x5555555612d4 ( 17096)@sint16; mov L0x5555555612d6 (   719)@sint16;
mov L0x5555555612d8 ( 22666)@sint16; mov L0x5555555612da ( 29364)@sint16;
mov L0x5555555612dc (  1316)@sint16; mov L0x5555555612de (-11300)@sint16;
mov L0x5555555612e0 (   177)@sint16; mov L0x5555555612e2 ( -6978)@sint16;
mov L0x5555555612e4 ( -8801)@sint16; mov L0x5555555612e6 (-11842)@sint16;
mov L0x5555555612e8 (-30546)@sint16; mov L0x5555555612ea ( 21892)@sint16;
mov L0x5555555612ec ( 24976)@sint16; mov L0x5555555612ee ( 14999)@sint16;
mov L0x5555555612f0 (  7356)@sint16; mov L0x5555555612f2 (  7856)@sint16;
mov L0x5555555612f4 (  2066)@sint16; mov L0x5555555612f6 ( 31418)@sint16;
mov L0x5555555612f8 (  7716)@sint16; mov L0x5555555612fa ( 32076)@sint16;
mov L0x5555555612fc (-13579)@sint16; mov L0x5555555612fe (  7326)@sint16;
mov L0x555555561300 ( 11726)@sint16; mov L0x555555561302 (-13268)@sint16;
mov L0x555555561304 ( 28541)@sint16; mov L0x555555561306 (   780)@sint16;
mov L0x555555561308 (-19844)@sint16; mov L0x55555556130a ( 17412)@sint16;
mov L0x55555556130c (-13012)@sint16; mov L0x55555556130e ( 18845)@sint16;
mov L0x555555561310 ( 31558)@sint16; mov L0x555555561312 ( 24037)@sint16;
mov L0x555555561314 (-27895)@sint16; mov L0x555555561316 (-17248)@sint16;
mov L0x555555561318 (-28200)@sint16; mov L0x55555556131a (-25555)@sint16;
mov L0x55555556131c ( -8246)@sint16; mov L0x55555556131e (-11141)@sint16;
mov L0x555555561320 (   -61)@sint16; mov L0x555555561322 ( 11446)@sint16;
mov L0x555555561324 (-19564)@sint16; mov L0x555555561326 (  4083)@sint16;
mov L0x555555561328 (-30144)@sint16; mov L0x55555556132a (-14329)@sint16;
mov L0x55555556132c ( 23026)@sint16; mov L0x55555556132e (-11952)@sint16;
mov L0x555555561330 ( -4797)@sint16; mov L0x555555561332 (-29827)@sint16;
mov L0x555555561334 (-32351)@sint16; mov L0x555555561336 ( -6314)@sint16;
mov L0x555555561338 ( 13158)@sint16; mov L0x55555556133a (-20100)@sint16;
mov L0x55555556133c ( 29541)@sint16; mov L0x55555556133e (-29644)@sint16;
mov L0x555555561340 (-19863)@sint16; mov L0x555555561342 (-31583)@sint16;
mov L0x555555561344 (-18881)@sint16; mov L0x555555561346 ( 20070)@sint16;
mov L0x555555561348 ( -6716)@sint16; mov L0x55555556134a (  3035)@sint16;
mov L0x55555556134c (  6747)@sint16; mov L0x55555556134e ( -8758)@sint16;
mov L0x555555561350 ( 16236)@sint16; mov L0x555555561352 ( -8289)@sint16;
mov L0x555555561354 (-31058)@sint16; mov L0x555555561356 ( 26286)@sint16;
mov L0x555555561358 (-17394)@sint16; mov L0x55555556135a ( 29151)@sint16;
mov L0x55555556135c (-12976)@sint16; mov L0x55555556135e (-14237)@sint16;
mov L0x555555561360 (-19643)@sint16; mov L0x555555561362 ( 32070)@sint16;
mov L0x555555561364 (-13987)@sint16; mov L0x555555561366 (  5369)@sint16;
mov L0x555555561368 ( 23160)@sint16; mov L0x55555556136a (-24025)@sint16;
mov L0x55555556136c ( 28712)@sint16; mov L0x55555556136e ( 21161)@sint16;
mov L0x555555561370 (  7289)@sint16; mov L0x555555561372 (-18875)@sint16;
mov L0x555555561374 (-19454)@sint16; mov L0x555555561376 (-29626)@sint16;
mov L0x555555561378 (-12336)@sint16; mov L0x55555556137a ( -3346)@sint16;
mov L0x55555556137c (-27572)@sint16; mov L0x55555556137e (-25482)@sint16;
mov L0x555555561380 ( 14280)@sint16; mov L0x555555561382 ( -7880)@sint16;
mov L0x555555561384 ( -3699)@sint16; mov L0x555555561386 ( 26292)@sint16;
mov L0x555555561388 ( 11123)@sint16; mov L0x55555556138a (  8295)@sint16;
mov L0x55555556138c ( 31467)@sint16; mov L0x55555556138e (-24330)@sint16;
mov L0x555555561390 ( 29370)@sint16; mov L0x555555561392 ( 15511)@sint16;
mov L0x555555561394 ( -9343)@sint16; mov L0x555555561396 ( -1725)@sint16;
mov L0x555555561398 ( -9374)@sint16; mov L0x55555556139a (  3998)@sint16;
mov L0x55555556139c (  5729)@sint16; mov L0x55555556139e (-27329)@sint16;
mov L0x5555555613a0 ( -6095)@sint16; mov L0x5555555613a2 ( 30467)@sint16;
mov L0x5555555613a4 (  9691)@sint16; mov L0x5555555613a6 ( 15127)@sint16;
mov L0x5555555613a8 (   232)@sint16; mov L0x5555555613aa (  8935)@sint16;
mov L0x5555555613ac (  8807)@sint16; mov L0x5555555613ae (-15517)@sint16;
mov L0x5555555613b0 (-20899)@sint16; mov L0x5555555613b2 ( 31924)@sint16;
mov L0x5555555613b4 (-23788)@sint16; mov L0x5555555613b6 ( 23952)@sint16;
mov L0x5555555613b8 (  5120)@sint16; mov L0x5555555613ba ( 21593)@sint16;
mov L0x5555555613bc (  4967)@sint16; mov L0x5555555613be (-15328)@sint16;
mov L0x5555555613c0 (-20173)@sint16; mov L0x5555555613c2 (-12531)@sint16;
mov L0x5555555613c4 ( 12415)@sint16; mov L0x5555555613c6 (-24641)@sint16;
mov L0x5555555613c8 (-16273)@sint16; mov L0x5555555613ca (-24165)@sint16;
mov L0x5555555613cc ( 19320)@sint16; mov L0x5555555613ce (-23836)@sint16;
mov L0x5555555613d0 (-14780)@sint16; mov L0x5555555613d2 ( 23093)@sint16;
mov L0x5555555613d4 (-25652)@sint16; mov L0x5555555613d6 (  7192)@sint16;
mov L0x5555555613d8 ( 30053)@sint16; mov L0x5555555613da ( 31497)@sint16;
mov L0x5555555613dc ( 13164)@sint16; mov L0x5555555613de ( 18077)@sint16;
mov L0x5555555613e0 (  1767)@sint16; mov L0x5555555613e2 ( -4248)@sint16;
mov L0x5555555613e4 (-22471)@sint16; mov L0x5555555613e6 ( 12653)@sint16;
mov L0x5555555613e8 ( 22215)@sint16; mov L0x5555555613ea ( 22313)@sint16;
mov L0x5555555613ec (-12384)@sint16; mov L0x5555555613ee ( 18918)@sint16;
mov L0x5555555613f0 (  8027)@sint16; mov L0x5555555613f2 ( 13024)@sint16;
mov L0x5555555613f4 ( 20661)@sint16; mov L0x5555555613f6 (-13500)@sint16;
mov L0x5555555613f8 ( 11623)@sint16; mov L0x5555555613fa ( -6917)@sint16;
mov L0x5555555613fc ( -4717)@sint16; mov L0x5555555613fe (  7722)@sint16;
mov L0x555555561400 (-13811)@sint16; mov L0x555555561402 ( -1609)@sint16;
mov L0x555555561404 ( 23269)@sint16; mov L0x555555561406 (  7801)@sint16;
mov L0x555555561408 ( -1834)@sint16; mov L0x55555556140a (-22483)@sint16;
mov L0x55555556140c (   951)@sint16; mov L0x55555556140e ( -8161)@sint16;
mov L0x555555561410 (-12098)@sint16; mov L0x555555561412 (-21770)@sint16;
mov L0x555555561414 (-16809)@sint16; mov L0x555555561416 ( 24129)@sint16;
mov L0x555555561418 (-19856)@sint16; mov L0x55555556141a (  6594)@sint16;
mov L0x55555556141c (-16925)@sint16; mov L0x55555556141e ( 19661)@sint16;
mov L0x555555561420 (  1018)@sint16; mov L0x555555561422 (   223)@sint16;
mov L0x555555561424 (  4188)@sint16; mov L0x555555561426 ( -3688)@sint16;
mov L0x555555561428 (  2413)@sint16; mov L0x55555556142a ( -3686)@sint16;
mov L0x55555556142c (   357)@sint16; mov L0x55555556142e (  -376)@sint16;
mov L0x555555561430 (  2695)@sint16; mov L0x555555561432 (  -730)@sint16;
mov L0x555555561434 (  4855)@sint16; mov L0x555555561436 (  2236)@sint16;
mov L0x555555561438 (  -425)@sint16; mov L0x55555556143a (  4544)@sint16;
mov L0x55555556143c (  3364)@sint16; mov L0x55555556143e ( -3784)@sint16;
mov L0x555555561440 (  4875)@sint16; mov L0x555555561442 ( -1520)@sint16;
mov L0x555555561444 ( -5063)@sint16; mov L0x555555561446 ( -4035)@sint16;
mov L0x555555561448 (  2503)@sint16; mov L0x55555556144a (   918)@sint16;
mov L0x55555556144c ( -3012)@sint16; mov L0x55555556144e (  4347)@sint16;
mov L0x555555561450 (  1931)@sint16; mov L0x555555561452 ( -1341)@sint16;
mov L0x555555561454 ( -3823)@sint16; mov L0x555555561456 (  -341)@sint16;
mov L0x555555561458 ( -4095)@sint16; mov L0x55555556145a ( -5175)@sint16;
mov L0x55555556145c ( -2629)@sint16; mov L0x55555556145e ( -5213)@sint16;
mov L0x555555561460 ( -3091)@sint16; mov L0x555555561462 (  4129)@sint16;
mov L0x555555561464 ( -2935)@sint16; mov L0x555555561466 (  2790)@sint16;
mov L0x555555561468 (   268)@sint16; mov L0x55555556146a (  1284)@sint16;
mov L0x55555556146c (     4)@sint16; mov L0x55555556146e (  3550)@sint16;
mov L0x555555561470 (  2982)@sint16; mov L0x555555561472 (  1287)@sint16;
mov L0x555555561474 (   205)@sint16; mov L0x555555561476 (  4513)@sint16;
mov L0x555555561478 ( -2565)@sint16; mov L0x55555556147a ( -2178)@sint16;
mov L0x55555556147c (  4616)@sint16; mov L0x55555556147e (  -193)@sint16;
mov L0x555555561480 ( -4102)@sint16; mov L0x555555561482 (  4742)@sint16;
mov L0x555555561484 ( -4876)@sint16; mov L0x555555561486 ( -4744)@sint16;
mov L0x555555561488 ( -2984)@sint16; mov L0x55555556148a ( -3062)@sint16;
mov L0x55555556148c (  -847)@sint16; mov L0x55555556148e ( -4379)@sint16;
mov L0x555555561490 ( -2388)@sint16; mov L0x555555561492 ( -1009)@sint16;
mov L0x555555561494 ( -3085)@sint16; mov L0x555555561496 ( -1299)@sint16;
mov L0x555555561498 ( -2576)@sint16; mov L0x55555556149a (  4189)@sint16;
mov L0x55555556149c (  1085)@sint16; mov L0x55555556149e (   544)@sint16;
mov L0x5555555614a0 (  5023)@sint16; mov L0x5555555614a2 (   794)@sint16;
mov L0x5555555614a4 (  -567)@sint16; mov L0x5555555614a6 ( -3198)@sint16;
mov L0x5555555614a8 (  4734)@sint16; mov L0x5555555614aa ( -2998)@sint16;
mov L0x5555555614ac (  3441)@sint16; mov L0x5555555614ae ( -5341)@sint16;
mov L0x5555555614b0 (   675)@sint16; mov L0x5555555614b2 (  2271)@sint16;
mov L0x5555555614b4 (  1615)@sint16; mov L0x5555555614b6 ( -2213)@sint16;
mov L0x5555555614b8 (   512)@sint16; mov L0x5555555614ba (  2774)@sint16;
mov L0x5555555614bc (  3057)@sint16; mov L0x5555555614be ( -2045)@sint16;
mov L0x5555555614c0 (  3615)@sint16; mov L0x5555555614c2 ( -1458)@sint16;
mov L0x5555555614c4 (  -909)@sint16; mov L0x5555555614c6 (  5114)@sint16;
mov L0x5555555614c8 (  2981)@sint16; mov L0x5555555614ca ( -4977)@sint16;
mov L0x5555555614cc (  -116)@sint16; mov L0x5555555614ce (  4580)@sint16;
mov L0x5555555614d0 (  -454)@sint16; mov L0x5555555614d2 ( -5064)@sint16;
mov L0x5555555614d4 (  4808)@sint16; mov L0x5555555614d6 ( -1841)@sint16;
mov L0x5555555614d8 (  -886)@sint16; mov L0x5555555614da ( -1356)@sint16;
mov L0x5555555614dc ( -4828)@sint16; mov L0x5555555614de ( -5156)@sint16;
mov L0x5555555614e0 (  2737)@sint16; mov L0x5555555614e2 (  4286)@sint16;
mov L0x5555555614e4 ( -3169)@sint16; mov L0x5555555614e6 (  -578)@sint16;
mov L0x5555555614e8 (  5294)@sint16; mov L0x5555555614ea (  -636)@sint16;
mov L0x5555555614ec (   400)@sint16; mov L0x5555555614ee (   151)@sint16;
mov L0x5555555614f0 ( -2884)@sint16; mov L0x5555555614f2 (  -336)@sint16;
mov L0x5555555614f4 ( -1006)@sint16; mov L0x5555555614f6 (  -326)@sint16;
mov L0x5555555614f8 (  1572)@sint16; mov L0x5555555614fa ( -2740)@sint16;
mov L0x5555555614fc (  -779)@sint16; mov L0x5555555614fe (  2206)@sint16;
mov L0x555555561500 ( -1586)@sint16; mov L0x555555561502 (  1068)@sint16;
mov L0x555555561504 ( -3715)@sint16; mov L0x555555561506 ( -1268)@sint16;
mov L0x555555561508 (  2684)@sint16; mov L0x55555556150a ( -5116)@sint16;
mov L0x55555556150c (  1324)@sint16; mov L0x55555556150e (  2973)@sint16;
mov L0x555555561510 ( -2234)@sint16; mov L0x555555561512 ( -4123)@sint16;
mov L0x555555561514 (  3337)@sint16; mov L0x555555561516 (  -864)@sint16;
mov L0x555555561518 (   472)@sint16; mov L0x55555556151a (  -467)@sint16;
mov L0x55555556151c (   970)@sint16; mov L0x55555556151e (   635)@sint16;
mov L0x555555561520 (  -573)@sint16; mov L0x555555561522 (  2230)@sint16;
mov L0x555555561524 ( -1132)@sint16; mov L0x555555561526 ( -4621)@sint16;
mov L0x555555561528 (  2624)@sint16; mov L0x55555556152a ( -4601)@sint16;
mov L0x55555556152c (  3570)@sint16; mov L0x55555556152e ( -3760)@sint16;
mov L0x555555561530 ( -5309)@sint16; mov L0x555555561532 (  3453)@sint16;
mov L0x555555561534 ( -5215)@sint16; mov L0x555555561536 (   854)@sint16;
mov L0x555555561538 ( -4250)@sint16; mov L0x55555556153a (  2428)@sint16;
mov L0x55555556153c (  1381)@sint16; mov L0x55555556153e (  5172)@sint16;
mov L0x555555561540 ( -5015)@sint16; mov L0x555555561542 ( -4447)@sint16;
mov L0x555555561544 (  3135)@sint16; mov L0x555555561546 (  2662)@sint16;
mov L0x555555561548 (  3524)@sint16; mov L0x55555556154a ( -1573)@sint16;
mov L0x55555556154c (  2139)@sint16; mov L0x55555556154e (   458)@sint16;
mov L0x555555561550 ( -2196)@sint16; mov L0x555555561552 ( -2657)@sint16;
mov L0x555555561554 (  4782)@sint16; mov L0x555555561556 ( -3410)@sint16;
mov L0x555555561558 (  2062)@sint16; mov L0x55555556155a (  2015)@sint16;
mov L0x55555556155c ( -4784)@sint16; mov L0x55555556155e (  1635)@sint16;
mov L0x555555561560 (  1349)@sint16; mov L0x555555561562 ( -1722)@sint16;
mov L0x555555561564 (  2909)@sint16; mov L0x555555561566 ( -4359)@sint16;
mov L0x555555561568 (  2680)@sint16; mov L0x55555556156a (  2087)@sint16;
mov L0x55555556156c (    40)@sint16; mov L0x55555556156e (  3241)@sint16;
mov L0x555555561570 ( -2439)@sint16; mov L0x555555561572 (  2117)@sint16;
mov L0x555555561574 (  2050)@sint16; mov L0x555555561576 (  2118)@sint16;
mov L0x555555561578 ( -4144)@sint16; mov L0x55555556157a (  -274)@sint16;
mov L0x55555556157c (  3148)@sint16; mov L0x55555556157e ( -1930)@sint16;
mov L0x555555561580 (  1992)@sint16; mov L0x555555561582 (  4408)@sint16;
mov L0x555555561584 (  5005)@sint16; mov L0x555555561586 ( -4428)@sint16;
mov L0x555555561588 (  2419)@sint16; mov L0x55555556158a (  1639)@sint16;
mov L0x55555556158c (  2283)@sint16; mov L0x55555556158e (  -778)@sint16;
mov L0x555555561590 ( -2374)@sint16; mov L0x555555561592 (   663)@sint16;
mov L0x555555561594 (  1409)@sint16; mov L0x555555561596 ( -2237)@sint16;
mov L0x555555561598 ( -4254)@sint16; mov L0x55555556159a ( -1122)@sint16;
mov L0x55555556159c (    97)@sint16; mov L0x55555556159e ( -5313)@sint16;
mov L0x5555555615a0 ( -3535)@sint16; mov L0x5555555615a2 ( -2813)@sint16;
mov L0x5555555615a4 (  5083)@sint16; mov L0x5555555615a6 (   279)@sint16;
mov L0x5555555615a8 (  4328)@sint16; mov L0x5555555615aa (  2279)@sint16;
mov L0x5555555615ac (  2151)@sint16; mov L0x5555555615ae (   355)@sint16;
mov L0x5555555615b0 ( -4003)@sint16; mov L0x5555555615b2 (  1204)@sint16;
mov L0x5555555615b4 ( -5356)@sint16; mov L0x5555555615b6 (  -624)@sint16;
mov L0x5555555615b8 (  5120)@sint16; mov L0x5555555615ba ( -4519)@sint16;
mov L0x5555555615bc ( -1689)@sint16; mov L0x5555555615be (  1056)@sint16;
mov L0x5555555615c0 (  3891)@sint16; mov L0x5555555615c2 ( -3827)@sint16;
mov L0x5555555615c4 (  1663)@sint16; mov L0x5555555615c6 ( -2625)@sint16;
mov L0x5555555615c8 ( -2449)@sint16; mov L0x5555555615ca (  3995)@sint16;
mov L0x5555555615cc ( -1160)@sint16; mov L0x5555555615ce (  2788)@sint16;
mov L0x5555555615d0 ( -4540)@sint16; mov L0x5555555615d2 (  3125)@sint16;
mov L0x5555555615d4 (  5068)@sint16; mov L0x5555555615d6 (  3096)@sint16;
mov L0x5555555615d8 (  1893)@sint16; mov L0x5555555615da ( -2807)@sint16;
mov L0x5555555615dc ( -5268)@sint16; mov L0x5555555615de (  2205)@sint16;
mov L0x5555555615e0 ( -4889)@sint16; mov L0x5555555615e2 (  -152)@sint16;
mov L0x5555555615e4 (   569)@sint16; mov L0x5555555615e6 (  4973)@sint16;
mov L0x5555555615e8 (  -825)@sint16; mov L0x5555555615ea (  4393)@sint16;
mov L0x5555555615ec (  4000)@sint16; mov L0x5555555615ee (  1510)@sint16;
mov L0x5555555615f0 (  3419)@sint16; mov L0x5555555615f2 ( -3360)@sint16;
mov L0x5555555615f4 (   693)@sint16; mov L0x5555555615f6 ( -3260)@sint16;
mov L0x5555555615f8 (  4967)@sint16; mov L0x5555555615fa (  4859)@sint16;
mov L0x5555555615fc (  2963)@sint16; mov L0x5555555615fe (   554)@sint16;
mov L0x555555561600 ( -5107)@sint16; mov L0x555555561602 (   -73)@sint16;
mov L0x555555561604 ( -4891)@sint16; mov L0x555555561606 ( -1927)@sint16;
mov L0x555555561608 (  5334)@sint16; mov L0x55555556160a (  2605)@sint16;
mov L0x55555556160c (  2487)@sint16; mov L0x55555556160e ( -2529)@sint16;
mov L0x555555561610 (  -834)@sint16; mov L0x555555561612 (  1782)@sint16;
mov L0x555555561614 (  1111)@sint16; mov L0x555555561616 (  2113)@sint16;
mov L0x555555561618 (  4720)@sint16; mov L0x55555556161a ( -4670)@sint16;
mov L0x55555556161c ( -1053)@sint16; mov L0x55555556161e ( -4403)@sint16;
mov L0x555555561620 (    -6)@sint16; mov L0x555555561622 (-27359)@sint16;
mov L0x555555561624 (  -408)@sint16; mov L0x555555561626 (  1956)@sint16;
mov L0x555555561628 ( 20856)@sint16; mov L0x55555556162a (-28517)@sint16;
mov L0x55555556162c ( 21094)@sint16; mov L0x55555556162e (-10093)@sint16;
mov L0x555555561630 (  1018)@sint16; mov L0x555555561632 (  -223)@sint16;
mov L0x555555561634 (  3688)@sint16; mov L0x555555561636 ( -4188)@sint16;
mov L0x555555561638 (   376)@sint16; mov L0x55555556163a (  -357)@sint16;
mov L0x55555556163c (  3686)@sint16; mov L0x55555556163e ( -2413)@sint16;



(**************** indices *****************)

mov L0x5555555610a0 (0x0f0e)@sint16; mov L0x5555555610a2 (0x0d0c)@sint16;
mov L0x5555555610a4 (0x0b0a)@sint16; mov L0x5555555610a6 (0x0908)@sint16;
mov L0x5555555610a8 (0x0706)@sint16; mov L0x5555555610aa (0x0504)@sint16;
mov L0x5555555610ac (0x0302)@sint16; mov L0x5555555610ae (0x0100)@sint16;
mov L0x5555555610b0 (0x0f0e)@sint16; mov L0x5555555610b2 (0x0d0c)@sint16;
mov L0x5555555610b4 (0x0b0a)@sint16; mov L0x5555555610b6 (0x0908)@sint16;
mov L0x5555555610b8 (0x0706)@sint16; mov L0x5555555610ba (0x0504)@sint16;
mov L0x5555555610bc (0x0302)@sint16; mov L0x5555555610be (0x0100)@sint16;
mov L0x5555555610c0 (0x0007)@sint16; mov L0x5555555610c2 (0x0000)@sint16;
mov L0x5555555610c4 (0x0006)@sint16; mov L0x5555555610c6 (0x0000)@sint16;
mov L0x5555555610c8 (0x0005)@sint16; mov L0x5555555610ca (0x0000)@sint16;
mov L0x5555555610cc (0x0004)@sint16; mov L0x5555555610ce (0x0000)@sint16;
mov L0x5555555610d0 (0x0003)@sint16; mov L0x5555555610d2 (0x0000)@sint16;
mov L0x5555555610d4 (0x0002)@sint16; mov L0x5555555610d6 (0x0000)@sint16;
mov L0x5555555610d8 (0x0001)@sint16; mov L0x5555555610da (0x0000)@sint16;
mov L0x5555555610dc (0x0000)@sint16; mov L0x5555555610de (0x0000)@sint16;
mov L0x5555555610e0 (0x0100)@sint16; mov L0x5555555610e2 (0x0504)@sint16;
mov L0x5555555610e4 (0x0908)@sint16; mov L0x5555555610e6 (0x0d0c)@sint16;
mov L0x5555555610e8 (0x0302)@sint16; mov L0x5555555610ea (0x0706)@sint16;
mov L0x5555555610ec (0x0b0a)@sint16; mov L0x5555555610ee (0x0f0e)@sint16;
mov L0x5555555610f0 (0x0100)@sint16; mov L0x5555555610f2 (0x0504)@sint16;
mov L0x5555555610f4 (0x0908)@sint16; mov L0x5555555610f6 (0x0d0c)@sint16;
mov L0x5555555610f8 (0x0302)@sint16; mov L0x5555555610fa (0x0706)@sint16;
mov L0x5555555610fc (0x0b0a)@sint16; mov L0x5555555610fe (0x0f0e)@sint16;
mov L0x555555561100 (0x0100)@sint16; mov L0x555555561102 (0x0908)@sint16;
mov L0x555555561104 (0x0302)@sint16; mov L0x555555561106 (0x0b0a)@sint16;
mov L0x555555561108 (0x0504)@sint16; mov L0x55555556110a (0x0d0c)@sint16;
mov L0x55555556110c (0x0706)@sint16; mov L0x55555556110e (0x0f0e)@sint16;
mov L0x555555561110 (0x0100)@sint16; mov L0x555555561112 (0x0908)@sint16;
mov L0x555555561114 (0x0302)@sint16; mov L0x555555561116 (0x0b0a)@sint16;
mov L0x555555561118 (0x0504)@sint16; mov L0x55555556111a (0x0d0c)@sint16;
mov L0x55555556111c (0x0706)@sint16; mov L0x55555556111e (0x0f0e)@sint16;


(* #! -> SP = 0x7fffffffca98 *)
#! 0x7fffffffca98 = 0x7fffffffca98;
(* vmovdqa (%rdx),%ymm0                            #! EA = L0x555555561120; Value = 0x2a012a012a012a01; PC = 0x555555556c2f *)
mov ymm0_0 L0x555555561120;
mov ymm0_1 L0x555555561122;
mov ymm0_2 L0x555555561124;
mov ymm0_3 L0x555555561126;
mov ymm0_4 L0x555555561128;
mov ymm0_5 L0x55555556112a;
mov ymm0_6 L0x55555556112c;
mov ymm0_7 L0x55555556112e;
mov ymm0_8 L0x555555561130;
mov ymm0_9 L0x555555561132;
mov ymm0_a L0x555555561134;
mov ymm0_b L0x555555561136;
mov ymm0_c L0x555555561138;
mov ymm0_d L0x55555556113a;
mov ymm0_e L0x55555556113c;
mov ymm0_f L0x55555556113e;
(* vmovdqa 0x80(%rdx),%ymm14                       #! EA = L0x5555555611a0; Value = 0xfffafffafffafffa; PC = 0x555555556c33 *)
mov ymm14_0 L0x5555555611a0;
mov ymm14_1 L0x5555555611a2;
mov ymm14_2 L0x5555555611a4;
mov ymm14_3 L0x5555555611a6;
mov ymm14_4 L0x5555555611a8;
mov ymm14_5 L0x5555555611aa;
mov ymm14_6 L0x5555555611ac;
mov ymm14_7 L0x5555555611ae;
mov ymm14_8 L0x5555555611b0;
mov ymm14_9 L0x5555555611b2;
mov ymm14_a L0x5555555611b4;
mov ymm14_b L0x5555555611b6;
mov ymm14_c L0x5555555611b8;
mov ymm14_d L0x5555555611ba;
mov ymm14_e L0x5555555611bc;
mov ymm14_f L0x5555555611be;
(* vmovdqa 0xa0(%rdx),%ymm15                       #! EA = L0x5555555611c0; Value = 0x03fa03fa03fa03fa; PC = 0x555555556c3b *)
mov ymm15_0 L0x5555555611c0;
mov ymm15_1 L0x5555555611c2;
mov ymm15_2 L0x5555555611c4;
mov ymm15_3 L0x5555555611c6;
mov ymm15_4 L0x5555555611c8;
mov ymm15_5 L0x5555555611ca;
mov ymm15_6 L0x5555555611cc;
mov ymm15_7 L0x5555555611ce;
mov ymm15_8 L0x5555555611d0;
mov ymm15_9 L0x5555555611d2;
mov ymm15_a L0x5555555611d4;
mov ymm15_b L0x5555555611d6;
mov ymm15_c L0x5555555611d8;
mov ymm15_d L0x5555555611da;
mov ymm15_e L0x5555555611dc;
mov ymm15_f L0x5555555611de;
(* vpbroadcastw 0x102(%rdx),%ymm1                  #! EA = L0x555555561222; Value = 0x276d0198f85c6adf; PC = 0x555555556c43 *)
mov ymm1_0 L0x555555561222;
mov ymm1_1 L0x555555561222;
mov ymm1_2 L0x555555561222;
mov ymm1_3 L0x555555561222;
mov ymm1_4 L0x555555561222;
mov ymm1_5 L0x555555561222;
mov ymm1_6 L0x555555561222;
mov ymm1_7 L0x555555561222;
mov ymm1_8 L0x555555561222;
mov ymm1_9 L0x555555561222;
mov ymm1_a L0x555555561222;
mov ymm1_b L0x555555561222;
mov ymm1_c L0x555555561222;
mov ymm1_d L0x555555561222;
mov ymm1_e L0x555555561222;
mov ymm1_f L0x555555561222;
(* vpbroadcastw 0x302(%rdx),%ymm2                  #! EA = L0x555555561422; Value = 0x096df198105c00df; PC = 0x555555556c4c *)
mov ymm2_0 L0x555555561422;
mov ymm2_1 L0x555555561422;
mov ymm2_2 L0x555555561422;
mov ymm2_3 L0x555555561422;
mov ymm2_4 L0x555555561422;
mov ymm2_5 L0x555555561422;
mov ymm2_6 L0x555555561422;
mov ymm2_7 L0x555555561422;
mov ymm2_8 L0x555555561422;
mov ymm2_9 L0x555555561422;
mov ymm2_a L0x555555561422;
mov ymm2_b L0x555555561422;
mov ymm2_c L0x555555561422;
mov ymm2_d L0x555555561422;
mov ymm2_e L0x555555561422;
mov ymm2_f L0x555555561422;
(* vmovdqa 0x200(%rsi),%ymm6                       #! EA = L0x7fffffffcce0; Value = 0x0000000000000000; PC = 0x555555556c55 *)
mov ymm6_0 L0x7fffffffcce0;
mov ymm6_1 L0x7fffffffcce2;
mov ymm6_2 L0x7fffffffcce4;
mov ymm6_3 L0x7fffffffcce6;
mov ymm6_4 L0x7fffffffcce8;
mov ymm6_5 L0x7fffffffccea;
mov ymm6_6 L0x7fffffffccec;
mov ymm6_7 L0x7fffffffccee;
mov ymm6_8 L0x7fffffffccf0;
mov ymm6_9 L0x7fffffffccf2;
mov ymm6_a L0x7fffffffccf4;
mov ymm6_b L0x7fffffffccf6;
mov ymm6_c L0x7fffffffccf8;
mov ymm6_d L0x7fffffffccfa;
mov ymm6_e L0x7fffffffccfc;
mov ymm6_f L0x7fffffffccfe;
(* vmovdqa 0x300(%rsi),%ymm7                       #! EA = L0x7fffffffcde0; Value = 0x0000000000000000; PC = 0x555555556c5d *)
mov ymm7_0 L0x7fffffffcde0;
mov ymm7_1 L0x7fffffffcde2;
mov ymm7_2 L0x7fffffffcde4;
mov ymm7_3 L0x7fffffffcde6;
mov ymm7_4 L0x7fffffffcde8;
mov ymm7_5 L0x7fffffffcdea;
mov ymm7_6 L0x7fffffffcdec;
mov ymm7_7 L0x7fffffffcdee;
mov ymm7_8 L0x7fffffffcdf0;
mov ymm7_9 L0x7fffffffcdf2;
mov ymm7_a L0x7fffffffcdf4;
mov ymm7_b L0x7fffffffcdf6;
mov ymm7_c L0x7fffffffcdf8;
mov ymm7_d L0x7fffffffcdfa;
mov ymm7_e L0x7fffffffcdfc;
mov ymm7_f L0x7fffffffcdfe;
(* vpmullw %ymm1,%ymm6,%ymm3                       #! PC = 0x555555556c65 *)
smull mulHymm6_0 mulL_0 ymm1_0 ymm6_0;
smull mulHymm6_1 mulL_1 ymm1_1 ymm6_1;
smull mulHymm6_2 mulL_2 ymm1_2 ymm6_2;
smull mulHymm6_3 mulL_3 ymm1_3 ymm6_3;
smull mulHymm6_4 mulL_4 ymm1_4 ymm6_4;
smull mulHymm6_5 mulL_5 ymm1_5 ymm6_5;
smull mulHymm6_6 mulL_6 ymm1_6 ymm6_6;
smull mulHymm6_7 mulL_7 ymm1_7 ymm6_7;
smull mulHymm6_8 mulL_8 ymm1_8 ymm6_8;
smull mulHymm6_9 mulL_9 ymm1_9 ymm6_9;
smull mulHymm6_a mulL_a ymm1_a ymm6_a;
smull mulHymm6_b mulL_b ymm1_b ymm6_b;
smull mulHymm6_c mulL_c ymm1_c ymm6_c;
smull mulHymm6_d mulL_d ymm1_d ymm6_d;
smull mulHymm6_e mulL_e ymm1_e ymm6_e;
smull mulHymm6_f mulL_f ymm1_f ymm6_f;
cast ymm3_0@sint16 mulL_0;
cast ymm3_1@sint16 mulL_1;
cast ymm3_2@sint16 mulL_2;
cast ymm3_3@sint16 mulL_3;
cast ymm3_4@sint16 mulL_4;
cast ymm3_5@sint16 mulL_5;
cast ymm3_6@sint16 mulL_6;
cast ymm3_7@sint16 mulL_7;
cast ymm3_8@sint16 mulL_8;
cast ymm3_9@sint16 mulL_9;
cast ymm3_a@sint16 mulL_a;
cast ymm3_b@sint16 mulL_b;
cast ymm3_c@sint16 mulL_c;
cast ymm3_d@sint16 mulL_d;
cast ymm3_e@sint16 mulL_e;
cast ymm3_f@sint16 mulL_f;
(* vpmulhw %ymm2,%ymm6,%ymm10                      #! PC = 0x555555556c69 *)
smull mulH_0 mulLymm6_0 ymm6_0 ymm2_0;
smull mulH_1 mulLymm6_1 ymm6_1 ymm2_1;
smull mulH_2 mulLymm6_2 ymm6_2 ymm2_2;
smull mulH_3 mulLymm6_3 ymm6_3 ymm2_3;
smull mulH_4 mulLymm6_4 ymm6_4 ymm2_4;
smull mulH_5 mulLymm6_5 ymm6_5 ymm2_5;
smull mulH_6 mulLymm6_6 ymm6_6 ymm2_6;
smull mulH_7 mulLymm6_7 ymm6_7 ymm2_7;
smull mulH_8 mulLymm6_8 ymm6_8 ymm2_8;
smull mulH_9 mulLymm6_9 ymm6_9 ymm2_9;
smull mulH_a mulLymm6_a ymm6_a ymm2_a;
smull mulH_b mulLymm6_b ymm6_b ymm2_b;
smull mulH_c mulLymm6_c ymm6_c ymm2_c;
smull mulH_d mulLymm6_d ymm6_d ymm2_d;
smull mulH_e mulLymm6_e ymm6_e ymm2_e;
smull mulH_f mulLymm6_f ymm6_f ymm2_f;
mov ymm10_0 mulH_0;
mov ymm10_1 mulH_1;
mov ymm10_2 mulH_2;
mov ymm10_3 mulH_3;
mov ymm10_4 mulH_4;
mov ymm10_5 mulH_5;
mov ymm10_6 mulH_6;
mov ymm10_7 mulH_7;
mov ymm10_8 mulH_8;
mov ymm10_9 mulH_9;
mov ymm10_a mulH_a;
mov ymm10_b mulH_b;
mov ymm10_c mulH_c;
mov ymm10_d mulH_d;
mov ymm10_e mulH_e;
mov ymm10_f mulH_f;
(* vpmulhw %ymm0,%ymm3,%ymm3                       #! PC = 0x555555556c6d *)
smull mulH_0 red_0 ymm3_0 ymm0_0;
assert true && red_0 = mulLymm6_0;
assume red_0 = mulLymm6_0 && true;
smull mulH_1 red_1 ymm3_1 ymm0_1;
assert true && red_1 = mulLymm6_1;
assume red_1 = mulLymm6_1 && true;
smull mulH_2 red_2 ymm3_2 ymm0_2;
assert true && red_2 = mulLymm6_2;
assume red_2 = mulLymm6_2 && true;
smull mulH_3 red_3 ymm3_3 ymm0_3;
assert true && red_3 = mulLymm6_3;
assume red_3 = mulLymm6_3 && true;
smull mulH_4 red_4 ymm3_4 ymm0_4;
assert true && red_4 = mulLymm6_4;
assume red_4 = mulLymm6_4 && true;
smull mulH_5 red_5 ymm3_5 ymm0_5;
assert true && red_5 = mulLymm6_5;
assume red_5 = mulLymm6_5 && true;
smull mulH_6 red_6 ymm3_6 ymm0_6;
assert true && red_6 = mulLymm6_6;
assume red_6 = mulLymm6_6 && true;
smull mulH_7 red_7 ymm3_7 ymm0_7;
assert true && red_7 = mulLymm6_7;
assume red_7 = mulLymm6_7 && true;
smull mulH_8 red_8 ymm3_8 ymm0_8;
assert true && red_8 = mulLymm6_8;
assume red_8 = mulLymm6_8 && true;
smull mulH_9 red_9 ymm3_9 ymm0_9;
assert true && red_9 = mulLymm6_9;
assume red_9 = mulLymm6_9 && true;
smull mulH_a red_a ymm3_a ymm0_a;
assert true && red_a = mulLymm6_a;
assume red_a = mulLymm6_a && true;
smull mulH_b red_b ymm3_b ymm0_b;
assert true && red_b = mulLymm6_b;
assume red_b = mulLymm6_b && true;
smull mulH_c red_c ymm3_c ymm0_c;
assert true && red_c = mulLymm6_c;
assume red_c = mulLymm6_c && true;
smull mulH_d red_d ymm3_d ymm0_d;
assert true && red_d = mulLymm6_d;
assume red_d = mulLymm6_d && true;
smull mulH_e red_e ymm3_e ymm0_e;
assert true && red_e = mulLymm6_e;
assume red_e = mulLymm6_e && true;
smull mulH_f red_f ymm3_f ymm0_f;
assert true && red_f = mulLymm6_f;
assume red_f = mulLymm6_f && true;
mov ymm3_0 mulH_0;
mov ymm3_1 mulH_1;
mov ymm3_2 mulH_2;
mov ymm3_3 mulH_3;
mov ymm3_4 mulH_4;
mov ymm3_5 mulH_5;
mov ymm3_6 mulH_6;
mov ymm3_7 mulH_7;
mov ymm3_8 mulH_8;
mov ymm3_9 mulH_9;
mov ymm3_a mulH_a;
mov ymm3_b mulH_b;
mov ymm3_c mulH_c;
mov ymm3_d mulH_d;
mov ymm3_e mulH_e;
mov ymm3_f mulH_f;
(* vpsubw %ymm3,%ymm10,%ymm10                      #! PC = 0x555555556c71 *)
sub ymm10_0 ymm10_0 ymm3_0;
sub ymm10_1 ymm10_1 ymm3_1;
sub ymm10_2 ymm10_2 ymm3_2;
sub ymm10_3 ymm10_3 ymm3_3;
sub ymm10_4 ymm10_4 ymm3_4;
sub ymm10_5 ymm10_5 ymm3_5;
sub ymm10_6 ymm10_6 ymm3_6;
sub ymm10_7 ymm10_7 ymm3_7;
sub ymm10_8 ymm10_8 ymm3_8;
sub ymm10_9 ymm10_9 ymm3_9;
sub ymm10_a ymm10_a ymm3_a;
sub ymm10_b ymm10_b ymm3_b;
sub ymm10_c ymm10_c ymm3_c;
sub ymm10_d ymm10_d ymm3_d;
sub ymm10_e ymm10_e ymm3_e;
sub ymm10_f ymm10_f ymm3_f;
(* vpmullw %ymm1,%ymm7,%ymm3                       #! PC = 0x555555556c75 *)
smull mulHymm7_0 mulL_0 ymm1_0 ymm7_0;
smull mulHymm7_1 mulL_1 ymm1_1 ymm7_1;
smull mulHymm7_2 mulL_2 ymm1_2 ymm7_2;
smull mulHymm7_3 mulL_3 ymm1_3 ymm7_3;
smull mulHymm7_4 mulL_4 ymm1_4 ymm7_4;
smull mulHymm7_5 mulL_5 ymm1_5 ymm7_5;
smull mulHymm7_6 mulL_6 ymm1_6 ymm7_6;
smull mulHymm7_7 mulL_7 ymm1_7 ymm7_7;
smull mulHymm7_8 mulL_8 ymm1_8 ymm7_8;
smull mulHymm7_9 mulL_9 ymm1_9 ymm7_9;
smull mulHymm7_a mulL_a ymm1_a ymm7_a;
smull mulHymm7_b mulL_b ymm1_b ymm7_b;
smull mulHymm7_c mulL_c ymm1_c ymm7_c;
smull mulHymm7_d mulL_d ymm1_d ymm7_d;
smull mulHymm7_e mulL_e ymm1_e ymm7_e;
smull mulHymm7_f mulL_f ymm1_f ymm7_f;
cast ymm3_0@sint16 mulL_0;
cast ymm3_1@sint16 mulL_1;
cast ymm3_2@sint16 mulL_2;
cast ymm3_3@sint16 mulL_3;
cast ymm3_4@sint16 mulL_4;
cast ymm3_5@sint16 mulL_5;
cast ymm3_6@sint16 mulL_6;
cast ymm3_7@sint16 mulL_7;
cast ymm3_8@sint16 mulL_8;
cast ymm3_9@sint16 mulL_9;
cast ymm3_a@sint16 mulL_a;
cast ymm3_b@sint16 mulL_b;
cast ymm3_c@sint16 mulL_c;
cast ymm3_d@sint16 mulL_d;
cast ymm3_e@sint16 mulL_e;
cast ymm3_f@sint16 mulL_f;
(* vpmulhw %ymm2,%ymm7,%ymm11                      #! PC = 0x555555556c79 *)
smull mulH_0 mulLymm7_0 ymm7_0 ymm2_0;
smull mulH_1 mulLymm7_1 ymm7_1 ymm2_1;
smull mulH_2 mulLymm7_2 ymm7_2 ymm2_2;
smull mulH_3 mulLymm7_3 ymm7_3 ymm2_3;
smull mulH_4 mulLymm7_4 ymm7_4 ymm2_4;
smull mulH_5 mulLymm7_5 ymm7_5 ymm2_5;
smull mulH_6 mulLymm7_6 ymm7_6 ymm2_6;
smull mulH_7 mulLymm7_7 ymm7_7 ymm2_7;
smull mulH_8 mulLymm7_8 ymm7_8 ymm2_8;
smull mulH_9 mulLymm7_9 ymm7_9 ymm2_9;
smull mulH_a mulLymm7_a ymm7_a ymm2_a;
smull mulH_b mulLymm7_b ymm7_b ymm2_b;
smull mulH_c mulLymm7_c ymm7_c ymm2_c;
smull mulH_d mulLymm7_d ymm7_d ymm2_d;
smull mulH_e mulLymm7_e ymm7_e ymm2_e;
smull mulH_f mulLymm7_f ymm7_f ymm2_f;
mov ymm11_0 mulH_0;
mov ymm11_1 mulH_1;
mov ymm11_2 mulH_2;
mov ymm11_3 mulH_3;
mov ymm11_4 mulH_4;
mov ymm11_5 mulH_5;
mov ymm11_6 mulH_6;
mov ymm11_7 mulH_7;
mov ymm11_8 mulH_8;
mov ymm11_9 mulH_9;
mov ymm11_a mulH_a;
mov ymm11_b mulH_b;
mov ymm11_c mulH_c;
mov ymm11_d mulH_d;
mov ymm11_e mulH_e;
mov ymm11_f mulH_f;
(* vpmulhw %ymm0,%ymm3,%ymm3                       #! PC = 0x555555556c7d *)
smull mulH_0 red_0 ymm3_0 ymm0_0;
assert true && red_0 = mulLymm7_0;
assume red_0 = mulLymm7_0 && true;
smull mulH_1 red_1 ymm3_1 ymm0_1;
assert true && red_1 = mulLymm7_1;
assume red_1 = mulLymm7_1 && true;
smull mulH_2 red_2 ymm3_2 ymm0_2;
assert true && red_2 = mulLymm7_2;
assume red_2 = mulLymm7_2 && true;
smull mulH_3 red_3 ymm3_3 ymm0_3;
assert true && red_3 = mulLymm7_3;
assume red_3 = mulLymm7_3 && true;
smull mulH_4 red_4 ymm3_4 ymm0_4;
assert true && red_4 = mulLymm7_4;
assume red_4 = mulLymm7_4 && true;
smull mulH_5 red_5 ymm3_5 ymm0_5;
assert true && red_5 = mulLymm7_5;
assume red_5 = mulLymm7_5 && true;
smull mulH_6 red_6 ymm3_6 ymm0_6;
assert true && red_6 = mulLymm7_6;
assume red_6 = mulLymm7_6 && true;
smull mulH_7 red_7 ymm3_7 ymm0_7;
assert true && red_7 = mulLymm7_7;
assume red_7 = mulLymm7_7 && true;
smull mulH_8 red_8 ymm3_8 ymm0_8;
assert true && red_8 = mulLymm7_8;
assume red_8 = mulLymm7_8 && true;
smull mulH_9 red_9 ymm3_9 ymm0_9;
assert true && red_9 = mulLymm7_9;
assume red_9 = mulLymm7_9 && true;
smull mulH_a red_a ymm3_a ymm0_a;
assert true && red_a = mulLymm7_a;
assume red_a = mulLymm7_a && true;
smull mulH_b red_b ymm3_b ymm0_b;
assert true && red_b = mulLymm7_b;
assume red_b = mulLymm7_b && true;
smull mulH_c red_c ymm3_c ymm0_c;
assert true && red_c = mulLymm7_c;
assume red_c = mulLymm7_c && true;
smull mulH_d red_d ymm3_d ymm0_d;
assert true && red_d = mulLymm7_d;
assume red_d = mulLymm7_d && true;
smull mulH_e red_e ymm3_e ymm0_e;
assert true && red_e = mulLymm7_e;
assume red_e = mulLymm7_e && true;
smull mulH_f red_f ymm3_f ymm0_f;
assert true && red_f = mulLymm7_f;
assume red_f = mulLymm7_f && true;
mov ymm3_0 mulH_0;
mov ymm3_1 mulH_1;
mov ymm3_2 mulH_2;
mov ymm3_3 mulH_3;
mov ymm3_4 mulH_4;
mov ymm3_5 mulH_5;
mov ymm3_6 mulH_6;
mov ymm3_7 mulH_7;
mov ymm3_8 mulH_8;
mov ymm3_9 mulH_9;
mov ymm3_a mulH_a;
mov ymm3_b mulH_b;
mov ymm3_c mulH_c;
mov ymm3_d mulH_d;
mov ymm3_e mulH_e;
mov ymm3_f mulH_f;
(* vpsubw %ymm3,%ymm11,%ymm11                      #! PC = 0x555555556c81 *)
sub ymm11_0 ymm11_0 ymm3_0;
sub ymm11_1 ymm11_1 ymm3_1;
sub ymm11_2 ymm11_2 ymm3_2;
sub ymm11_3 ymm11_3 ymm3_3;
sub ymm11_4 ymm11_4 ymm3_4;
sub ymm11_5 ymm11_5 ymm3_5;
sub ymm11_6 ymm11_6 ymm3_6;
sub ymm11_7 ymm11_7 ymm3_7;
sub ymm11_8 ymm11_8 ymm3_8;
sub ymm11_9 ymm11_9 ymm3_9;
sub ymm11_a ymm11_a ymm3_a;
sub ymm11_b ymm11_b ymm3_b;
sub ymm11_c ymm11_c ymm3_c;
sub ymm11_d ymm11_d ymm3_d;
sub ymm11_e ymm11_e ymm3_e;
sub ymm11_f ymm11_f ymm3_f;
(* vmovdqa (%rsi),%ymm4                            #! EA = L0x7fffffffcae0; Value = 0x0000000100000000; PC = 0x555555556c85 *)
mov ymm4_0 L0x7fffffffcae0;
mov ymm4_1 L0x7fffffffcae2;
mov ymm4_2 L0x7fffffffcae4;
mov ymm4_3 L0x7fffffffcae6;
mov ymm4_4 L0x7fffffffcae8;
mov ymm4_5 L0x7fffffffcaea;
mov ymm4_6 L0x7fffffffcaec;
mov ymm4_7 L0x7fffffffcaee;
mov ymm4_8 L0x7fffffffcaf0;
mov ymm4_9 L0x7fffffffcaf2;
mov ymm4_a L0x7fffffffcaf4;
mov ymm4_b L0x7fffffffcaf6;
mov ymm4_c L0x7fffffffcaf8;
mov ymm4_d L0x7fffffffcafa;
mov ymm4_e L0x7fffffffcafc;
mov ymm4_f L0x7fffffffcafe;
(* vmovdqa 0x100(%rsi),%ymm5                       #! EA = L0x7fffffffcbe0; Value = 0x0000000000000000; PC = 0x555555556c89 *)
mov ymm5_0 L0x7fffffffcbe0;
mov ymm5_1 L0x7fffffffcbe2;
mov ymm5_2 L0x7fffffffcbe4;
mov ymm5_3 L0x7fffffffcbe6;
mov ymm5_4 L0x7fffffffcbe8;
mov ymm5_5 L0x7fffffffcbea;
mov ymm5_6 L0x7fffffffcbec;
mov ymm5_7 L0x7fffffffcbee;
mov ymm5_8 L0x7fffffffcbf0;
mov ymm5_9 L0x7fffffffcbf2;
mov ymm5_a L0x7fffffffcbf4;
mov ymm5_b L0x7fffffffcbf6;
mov ymm5_c L0x7fffffffcbf8;
mov ymm5_d L0x7fffffffcbfa;
mov ymm5_e L0x7fffffffcbfc;
mov ymm5_f L0x7fffffffcbfe;
(* vpaddw %ymm10,%ymm4,%ymm8                       #! PC = 0x555555556c91 *)
add ymm8_0 ymm4_0 ymm10_0;
add ymm8_1 ymm4_1 ymm10_1;
add ymm8_2 ymm4_2 ymm10_2;
add ymm8_3 ymm4_3 ymm10_3;
add ymm8_4 ymm4_4 ymm10_4;
add ymm8_5 ymm4_5 ymm10_5;
add ymm8_6 ymm4_6 ymm10_6;
add ymm8_7 ymm4_7 ymm10_7;
add ymm8_8 ymm4_8 ymm10_8;
add ymm8_9 ymm4_9 ymm10_9;
add ymm8_a ymm4_a ymm10_a;
add ymm8_b ymm4_b ymm10_b;
add ymm8_c ymm4_c ymm10_c;
add ymm8_d ymm4_d ymm10_d;
add ymm8_e ymm4_e ymm10_e;
add ymm8_f ymm4_f ymm10_f;
(* vpsubw %ymm10,%ymm4,%ymm10                      #! PC = 0x555555556c96 *)
sub ymm10_0 ymm4_0 ymm10_0;
sub ymm10_1 ymm4_1 ymm10_1;
sub ymm10_2 ymm4_2 ymm10_2;
sub ymm10_3 ymm4_3 ymm10_3;
sub ymm10_4 ymm4_4 ymm10_4;
sub ymm10_5 ymm4_5 ymm10_5;
sub ymm10_6 ymm4_6 ymm10_6;
sub ymm10_7 ymm4_7 ymm10_7;
sub ymm10_8 ymm4_8 ymm10_8;
sub ymm10_9 ymm4_9 ymm10_9;
sub ymm10_a ymm4_a ymm10_a;
sub ymm10_b ymm4_b ymm10_b;
sub ymm10_c ymm4_c ymm10_c;
sub ymm10_d ymm4_d ymm10_d;
sub ymm10_e ymm4_e ymm10_e;
sub ymm10_f ymm4_f ymm10_f;
(* vpaddw %ymm11,%ymm5,%ymm9                       #! PC = 0x555555556c9b *)
add ymm9_0 ymm5_0 ymm11_0;
add ymm9_1 ymm5_1 ymm11_1;
add ymm9_2 ymm5_2 ymm11_2;
add ymm9_3 ymm5_3 ymm11_3;
add ymm9_4 ymm5_4 ymm11_4;
add ymm9_5 ymm5_5 ymm11_5;
add ymm9_6 ymm5_6 ymm11_6;
add ymm9_7 ymm5_7 ymm11_7;
add ymm9_8 ymm5_8 ymm11_8;
add ymm9_9 ymm5_9 ymm11_9;
add ymm9_a ymm5_a ymm11_a;
add ymm9_b ymm5_b ymm11_b;
add ymm9_c ymm5_c ymm11_c;
add ymm9_d ymm5_d ymm11_d;
add ymm9_e ymm5_e ymm11_e;
add ymm9_f ymm5_f ymm11_f;
(* vpsubw %ymm11,%ymm5,%ymm11                      #! PC = 0x555555556ca0 *)
sub ymm11_0 ymm5_0 ymm11_0;
sub ymm11_1 ymm5_1 ymm11_1;
sub ymm11_2 ymm5_2 ymm11_2;
sub ymm11_3 ymm5_3 ymm11_3;
sub ymm11_4 ymm5_4 ymm11_4;
sub ymm11_5 ymm5_5 ymm11_5;
sub ymm11_6 ymm5_6 ymm11_6;
sub ymm11_7 ymm5_7 ymm11_7;
sub ymm11_8 ymm5_8 ymm11_8;
sub ymm11_9 ymm5_9 ymm11_9;
sub ymm11_a ymm5_a ymm11_a;
sub ymm11_b ymm5_b ymm11_b;
sub ymm11_c ymm5_c ymm11_c;
sub ymm11_d ymm5_d ymm11_d;
sub ymm11_e ymm5_e ymm11_e;
sub ymm11_f ymm5_f ymm11_f;
(* vpaddw %ymm6,%ymm4,%ymm3                        #! PC = 0x555555556ca5 *)
add ymm3_0 ymm4_0 ymm6_0;
add ymm3_1 ymm4_1 ymm6_1;
add ymm3_2 ymm4_2 ymm6_2;
add ymm3_3 ymm4_3 ymm6_3;
add ymm3_4 ymm4_4 ymm6_4;
add ymm3_5 ymm4_5 ymm6_5;
add ymm3_6 ymm4_6 ymm6_6;
add ymm3_7 ymm4_7 ymm6_7;
add ymm3_8 ymm4_8 ymm6_8;
add ymm3_9 ymm4_9 ymm6_9;
add ymm3_a ymm4_a ymm6_a;
add ymm3_b ymm4_b ymm6_b;
add ymm3_c ymm4_c ymm6_c;
add ymm3_d ymm4_d ymm6_d;
add ymm3_e ymm4_e ymm6_e;
add ymm3_f ymm4_f ymm6_f;
(* vpsubw %ymm6,%ymm4,%ymm6                        #! PC = 0x555555556ca9 *)
sub ymm6_0 ymm4_0 ymm6_0;
sub ymm6_1 ymm4_1 ymm6_1;
sub ymm6_2 ymm4_2 ymm6_2;
sub ymm6_3 ymm4_3 ymm6_3;
sub ymm6_4 ymm4_4 ymm6_4;
sub ymm6_5 ymm4_5 ymm6_5;
sub ymm6_6 ymm4_6 ymm6_6;
sub ymm6_7 ymm4_7 ymm6_7;
sub ymm6_8 ymm4_8 ymm6_8;
sub ymm6_9 ymm4_9 ymm6_9;
sub ymm6_a ymm4_a ymm6_a;
sub ymm6_b ymm4_b ymm6_b;
sub ymm6_c ymm4_c ymm6_c;
sub ymm6_d ymm4_d ymm6_d;
sub ymm6_e ymm4_e ymm6_e;
sub ymm6_f ymm4_f ymm6_f;
(* vpaddw %ymm7,%ymm5,%ymm4                        #! PC = 0x555555556cad *)
add ymm4_0 ymm5_0 ymm7_0;
add ymm4_1 ymm5_1 ymm7_1;
add ymm4_2 ymm5_2 ymm7_2;
add ymm4_3 ymm5_3 ymm7_3;
add ymm4_4 ymm5_4 ymm7_4;
add ymm4_5 ymm5_5 ymm7_5;
add ymm4_6 ymm5_6 ymm7_6;
add ymm4_7 ymm5_7 ymm7_7;
add ymm4_8 ymm5_8 ymm7_8;
add ymm4_9 ymm5_9 ymm7_9;
add ymm4_a ymm5_a ymm7_a;
add ymm4_b ymm5_b ymm7_b;
add ymm4_c ymm5_c ymm7_c;
add ymm4_d ymm5_d ymm7_d;
add ymm4_e ymm5_e ymm7_e;
add ymm4_f ymm5_f ymm7_f;
(* vpsubw %ymm7,%ymm5,%ymm7                        #! PC = 0x555555556cb1 *)
sub ymm7_0 ymm5_0 ymm7_0;
sub ymm7_1 ymm5_1 ymm7_1;
sub ymm7_2 ymm5_2 ymm7_2;
sub ymm7_3 ymm5_3 ymm7_3;
sub ymm7_4 ymm5_4 ymm7_4;
sub ymm7_5 ymm5_5 ymm7_5;
sub ymm7_6 ymm5_6 ymm7_6;
sub ymm7_7 ymm5_7 ymm7_7;
sub ymm7_8 ymm5_8 ymm7_8;
sub ymm7_9 ymm5_9 ymm7_9;
sub ymm7_a ymm5_a ymm7_a;
sub ymm7_b ymm5_b ymm7_b;
sub ymm7_c ymm5_c ymm7_c;
sub ymm7_d ymm5_d ymm7_d;
sub ymm7_e ymm5_e ymm7_e;
sub ymm7_f ymm5_f ymm7_f;
(* vpmullw %ymm1,%ymm7,%ymm5                       #! PC = 0x555555556cb5 *)
smull mulHymm7_0 mulL_0 ymm1_0 ymm7_0;
smull mulHymm7_1 mulL_1 ymm1_1 ymm7_1;
smull mulHymm7_2 mulL_2 ymm1_2 ymm7_2;
smull mulHymm7_3 mulL_3 ymm1_3 ymm7_3;
smull mulHymm7_4 mulL_4 ymm1_4 ymm7_4;
smull mulHymm7_5 mulL_5 ymm1_5 ymm7_5;
smull mulHymm7_6 mulL_6 ymm1_6 ymm7_6;
smull mulHymm7_7 mulL_7 ymm1_7 ymm7_7;
smull mulHymm7_8 mulL_8 ymm1_8 ymm7_8;
smull mulHymm7_9 mulL_9 ymm1_9 ymm7_9;
smull mulHymm7_a mulL_a ymm1_a ymm7_a;
smull mulHymm7_b mulL_b ymm1_b ymm7_b;
smull mulHymm7_c mulL_c ymm1_c ymm7_c;
smull mulHymm7_d mulL_d ymm1_d ymm7_d;
smull mulHymm7_e mulL_e ymm1_e ymm7_e;
smull mulHymm7_f mulL_f ymm1_f ymm7_f;
cast ymm5_0@sint16 mulL_0;
cast ymm5_1@sint16 mulL_1;
cast ymm5_2@sint16 mulL_2;
cast ymm5_3@sint16 mulL_3;
cast ymm5_4@sint16 mulL_4;
cast ymm5_5@sint16 mulL_5;
cast ymm5_6@sint16 mulL_6;
cast ymm5_7@sint16 mulL_7;
cast ymm5_8@sint16 mulL_8;
cast ymm5_9@sint16 mulL_9;
cast ymm5_a@sint16 mulL_a;
cast ymm5_b@sint16 mulL_b;
cast ymm5_c@sint16 mulL_c;
cast ymm5_d@sint16 mulL_d;
cast ymm5_e@sint16 mulL_e;
cast ymm5_f@sint16 mulL_f;
(* vpmulhw %ymm2,%ymm7,%ymm7                       #! PC = 0x555555556cb9 *)
smull mulH_0 mulLymm7_0 ymm7_0 ymm2_0;
smull mulH_1 mulLymm7_1 ymm7_1 ymm2_1;
smull mulH_2 mulLymm7_2 ymm7_2 ymm2_2;
smull mulH_3 mulLymm7_3 ymm7_3 ymm2_3;
smull mulH_4 mulLymm7_4 ymm7_4 ymm2_4;
smull mulH_5 mulLymm7_5 ymm7_5 ymm2_5;
smull mulH_6 mulLymm7_6 ymm7_6 ymm2_6;
smull mulH_7 mulLymm7_7 ymm7_7 ymm2_7;
smull mulH_8 mulLymm7_8 ymm7_8 ymm2_8;
smull mulH_9 mulLymm7_9 ymm7_9 ymm2_9;
smull mulH_a mulLymm7_a ymm7_a ymm2_a;
smull mulH_b mulLymm7_b ymm7_b ymm2_b;
smull mulH_c mulLymm7_c ymm7_c ymm2_c;
smull mulH_d mulLymm7_d ymm7_d ymm2_d;
smull mulH_e mulLymm7_e ymm7_e ymm2_e;
smull mulH_f mulLymm7_f ymm7_f ymm2_f;
mov ymm7_0 mulH_0;
mov ymm7_1 mulH_1;
mov ymm7_2 mulH_2;
mov ymm7_3 mulH_3;
mov ymm7_4 mulH_4;
mov ymm7_5 mulH_5;
mov ymm7_6 mulH_6;
mov ymm7_7 mulH_7;
mov ymm7_8 mulH_8;
mov ymm7_9 mulH_9;
mov ymm7_a mulH_a;
mov ymm7_b mulH_b;
mov ymm7_c mulH_c;
mov ymm7_d mulH_d;
mov ymm7_e mulH_e;
mov ymm7_f mulH_f;
(* vpmulhw %ymm0,%ymm5,%ymm5                       #! PC = 0x555555556cbd *)
smull mulH_0 red_0 ymm5_0 ymm0_0;
assert true && red_0 = mulLymm7_0;
assume red_0 = mulLymm7_0 && true;
smull mulH_1 red_1 ymm5_1 ymm0_1;
assert true && red_1 = mulLymm7_1;
assume red_1 = mulLymm7_1 && true;
smull mulH_2 red_2 ymm5_2 ymm0_2;
assert true && red_2 = mulLymm7_2;
assume red_2 = mulLymm7_2 && true;
smull mulH_3 red_3 ymm5_3 ymm0_3;
assert true && red_3 = mulLymm7_3;
assume red_3 = mulLymm7_3 && true;
smull mulH_4 red_4 ymm5_4 ymm0_4;
assert true && red_4 = mulLymm7_4;
assume red_4 = mulLymm7_4 && true;
smull mulH_5 red_5 ymm5_5 ymm0_5;
assert true && red_5 = mulLymm7_5;
assume red_5 = mulLymm7_5 && true;
smull mulH_6 red_6 ymm5_6 ymm0_6;
assert true && red_6 = mulLymm7_6;
assume red_6 = mulLymm7_6 && true;
smull mulH_7 red_7 ymm5_7 ymm0_7;
assert true && red_7 = mulLymm7_7;
assume red_7 = mulLymm7_7 && true;
smull mulH_8 red_8 ymm5_8 ymm0_8;
assert true && red_8 = mulLymm7_8;
assume red_8 = mulLymm7_8 && true;
smull mulH_9 red_9 ymm5_9 ymm0_9;
assert true && red_9 = mulLymm7_9;
assume red_9 = mulLymm7_9 && true;
smull mulH_a red_a ymm5_a ymm0_a;
assert true && red_a = mulLymm7_a;
assume red_a = mulLymm7_a && true;
smull mulH_b red_b ymm5_b ymm0_b;
assert true && red_b = mulLymm7_b;
assume red_b = mulLymm7_b && true;
smull mulH_c red_c ymm5_c ymm0_c;
assert true && red_c = mulLymm7_c;
assume red_c = mulLymm7_c && true;
smull mulH_d red_d ymm5_d ymm0_d;
assert true && red_d = mulLymm7_d;
assume red_d = mulLymm7_d && true;
smull mulH_e red_e ymm5_e ymm0_e;
assert true && red_e = mulLymm7_e;
assume red_e = mulLymm7_e && true;
smull mulH_f red_f ymm5_f ymm0_f;
assert true && red_f = mulLymm7_f;
assume red_f = mulLymm7_f && true;
mov ymm5_0 mulH_0;
mov ymm5_1 mulH_1;
mov ymm5_2 mulH_2;
mov ymm5_3 mulH_3;
mov ymm5_4 mulH_4;
mov ymm5_5 mulH_5;
mov ymm5_6 mulH_6;
mov ymm5_7 mulH_7;
mov ymm5_8 mulH_8;
mov ymm5_9 mulH_9;
mov ymm5_a mulH_a;
mov ymm5_b mulH_b;
mov ymm5_c mulH_c;
mov ymm5_d mulH_d;
mov ymm5_e mulH_e;
mov ymm5_f mulH_f;
(* vpsubw %ymm5,%ymm7,%ymm7                        #! PC = 0x555555556cc1 *)
sub ymm7_0 ymm7_0 ymm5_0;
sub ymm7_1 ymm7_1 ymm5_1;
sub ymm7_2 ymm7_2 ymm5_2;
sub ymm7_3 ymm7_3 ymm5_3;
sub ymm7_4 ymm7_4 ymm5_4;
sub ymm7_5 ymm7_5 ymm5_5;
sub ymm7_6 ymm7_6 ymm5_6;
sub ymm7_7 ymm7_7 ymm5_7;
sub ymm7_8 ymm7_8 ymm5_8;
sub ymm7_9 ymm7_9 ymm5_9;
sub ymm7_a ymm7_a ymm5_a;
sub ymm7_b ymm7_b ymm5_b;
sub ymm7_c ymm7_c ymm5_c;
sub ymm7_d ymm7_d ymm5_d;
sub ymm7_e ymm7_e ymm5_e;
sub ymm7_f ymm7_f ymm5_f;
(* vpbroadcastw 0x104(%rdx),%ymm1                  #! EA = L0x555555561224; Value = 0xad9a276d0198f85c; PC = 0x555555556cc5 *)
mov ymm1_0 L0x555555561224;
mov ymm1_1 L0x555555561224;
mov ymm1_2 L0x555555561224;
mov ymm1_3 L0x555555561224;
mov ymm1_4 L0x555555561224;
mov ymm1_5 L0x555555561224;
mov ymm1_6 L0x555555561224;
mov ymm1_7 L0x555555561224;
mov ymm1_8 L0x555555561224;
mov ymm1_9 L0x555555561224;
mov ymm1_a L0x555555561224;
mov ymm1_b L0x555555561224;
mov ymm1_c L0x555555561224;
mov ymm1_d L0x555555561224;
mov ymm1_e L0x555555561224;
mov ymm1_f L0x555555561224;
(* vpbroadcastw 0x304(%rdx),%ymm2                  #! EA = L0x555555561424; Value = 0xf19a096df198105c; PC = 0x555555556cce *)
mov ymm2_0 L0x555555561424;
mov ymm2_1 L0x555555561424;
mov ymm2_2 L0x555555561424;
mov ymm2_3 L0x555555561424;
mov ymm2_4 L0x555555561424;
mov ymm2_5 L0x555555561424;
mov ymm2_6 L0x555555561424;
mov ymm2_7 L0x555555561424;
mov ymm2_8 L0x555555561424;
mov ymm2_9 L0x555555561424;
mov ymm2_a L0x555555561424;
mov ymm2_b L0x555555561424;
mov ymm2_c L0x555555561424;
mov ymm2_d L0x555555561424;
mov ymm2_e L0x555555561424;
mov ymm2_f L0x555555561424;
(* vpmullw %ymm1,%ymm9,%ymm5                       #! PC = 0x555555556cd7 *)
smull mulHymm9_0 mulL_0 ymm1_0 ymm9_0;
smull mulHymm9_1 mulL_1 ymm1_1 ymm9_1;
smull mulHymm9_2 mulL_2 ymm1_2 ymm9_2;
smull mulHymm9_3 mulL_3 ymm1_3 ymm9_3;
smull mulHymm9_4 mulL_4 ymm1_4 ymm9_4;
smull mulHymm9_5 mulL_5 ymm1_5 ymm9_5;
smull mulHymm9_6 mulL_6 ymm1_6 ymm9_6;
smull mulHymm9_7 mulL_7 ymm1_7 ymm9_7;
smull mulHymm9_8 mulL_8 ymm1_8 ymm9_8;
smull mulHymm9_9 mulL_9 ymm1_9 ymm9_9;
smull mulHymm9_a mulL_a ymm1_a ymm9_a;
smull mulHymm9_b mulL_b ymm1_b ymm9_b;
smull mulHymm9_c mulL_c ymm1_c ymm9_c;
smull mulHymm9_d mulL_d ymm1_d ymm9_d;
smull mulHymm9_e mulL_e ymm1_e ymm9_e;
smull mulHymm9_f mulL_f ymm1_f ymm9_f;
cast ymm5_0@sint16 mulL_0;
cast ymm5_1@sint16 mulL_1;
cast ymm5_2@sint16 mulL_2;
cast ymm5_3@sint16 mulL_3;
cast ymm5_4@sint16 mulL_4;
cast ymm5_5@sint16 mulL_5;
cast ymm5_6@sint16 mulL_6;
cast ymm5_7@sint16 mulL_7;
cast ymm5_8@sint16 mulL_8;
cast ymm5_9@sint16 mulL_9;
cast ymm5_a@sint16 mulL_a;
cast ymm5_b@sint16 mulL_b;
cast ymm5_c@sint16 mulL_c;
cast ymm5_d@sint16 mulL_d;
cast ymm5_e@sint16 mulL_e;
cast ymm5_f@sint16 mulL_f;
(* vpmulhw %ymm2,%ymm9,%ymm9                       #! PC = 0x555555556cdb *)
smull mulH_0 mulLymm9_0 ymm9_0 ymm2_0;
smull mulH_1 mulLymm9_1 ymm9_1 ymm2_1;
smull mulH_2 mulLymm9_2 ymm9_2 ymm2_2;
smull mulH_3 mulLymm9_3 ymm9_3 ymm2_3;
smull mulH_4 mulLymm9_4 ymm9_4 ymm2_4;
smull mulH_5 mulLymm9_5 ymm9_5 ymm2_5;
smull mulH_6 mulLymm9_6 ymm9_6 ymm2_6;
smull mulH_7 mulLymm9_7 ymm9_7 ymm2_7;
smull mulH_8 mulLymm9_8 ymm9_8 ymm2_8;
smull mulH_9 mulLymm9_9 ymm9_9 ymm2_9;
smull mulH_a mulLymm9_a ymm9_a ymm2_a;
smull mulH_b mulLymm9_b ymm9_b ymm2_b;
smull mulH_c mulLymm9_c ymm9_c ymm2_c;
smull mulH_d mulLymm9_d ymm9_d ymm2_d;
smull mulH_e mulLymm9_e ymm9_e ymm2_e;
smull mulH_f mulLymm9_f ymm9_f ymm2_f;
mov ymm9_0 mulH_0;
mov ymm9_1 mulH_1;
mov ymm9_2 mulH_2;
mov ymm9_3 mulH_3;
mov ymm9_4 mulH_4;
mov ymm9_5 mulH_5;
mov ymm9_6 mulH_6;
mov ymm9_7 mulH_7;
mov ymm9_8 mulH_8;
mov ymm9_9 mulH_9;
mov ymm9_a mulH_a;
mov ymm9_b mulH_b;
mov ymm9_c mulH_c;
mov ymm9_d mulH_d;
mov ymm9_e mulH_e;
mov ymm9_f mulH_f;
(* vpmulhw %ymm0,%ymm5,%ymm5                       #! PC = 0x555555556cdf *)
smull mulH_0 red_0 ymm5_0 ymm0_0;
assert true && red_0 = mulLymm9_0;
assume red_0 = mulLymm9_0 && true;
smull mulH_1 red_1 ymm5_1 ymm0_1;
assert true && red_1 = mulLymm9_1;
assume red_1 = mulLymm9_1 && true;
smull mulH_2 red_2 ymm5_2 ymm0_2;
assert true && red_2 = mulLymm9_2;
assume red_2 = mulLymm9_2 && true;
smull mulH_3 red_3 ymm5_3 ymm0_3;
assert true && red_3 = mulLymm9_3;
assume red_3 = mulLymm9_3 && true;
smull mulH_4 red_4 ymm5_4 ymm0_4;
assert true && red_4 = mulLymm9_4;
assume red_4 = mulLymm9_4 && true;
smull mulH_5 red_5 ymm5_5 ymm0_5;
assert true && red_5 = mulLymm9_5;
assume red_5 = mulLymm9_5 && true;
smull mulH_6 red_6 ymm5_6 ymm0_6;
assert true && red_6 = mulLymm9_6;
assume red_6 = mulLymm9_6 && true;
smull mulH_7 red_7 ymm5_7 ymm0_7;
assert true && red_7 = mulLymm9_7;
assume red_7 = mulLymm9_7 && true;
smull mulH_8 red_8 ymm5_8 ymm0_8;
assert true && red_8 = mulLymm9_8;
assume red_8 = mulLymm9_8 && true;
smull mulH_9 red_9 ymm5_9 ymm0_9;
assert true && red_9 = mulLymm9_9;
assume red_9 = mulLymm9_9 && true;
smull mulH_a red_a ymm5_a ymm0_a;
assert true && red_a = mulLymm9_a;
assume red_a = mulLymm9_a && true;
smull mulH_b red_b ymm5_b ymm0_b;
assert true && red_b = mulLymm9_b;
assume red_b = mulLymm9_b && true;
smull mulH_c red_c ymm5_c ymm0_c;
assert true && red_c = mulLymm9_c;
assume red_c = mulLymm9_c && true;
smull mulH_d red_d ymm5_d ymm0_d;
assert true && red_d = mulLymm9_d;
assume red_d = mulLymm9_d && true;
smull mulH_e red_e ymm5_e ymm0_e;
assert true && red_e = mulLymm9_e;
assume red_e = mulLymm9_e && true;
smull mulH_f red_f ymm5_f ymm0_f;
assert true && red_f = mulLymm9_f;
assume red_f = mulLymm9_f && true;
mov ymm5_0 mulH_0;
mov ymm5_1 mulH_1;
mov ymm5_2 mulH_2;
mov ymm5_3 mulH_3;
mov ymm5_4 mulH_4;
mov ymm5_5 mulH_5;
mov ymm5_6 mulH_6;
mov ymm5_7 mulH_7;
mov ymm5_8 mulH_8;
mov ymm5_9 mulH_9;
mov ymm5_a mulH_a;
mov ymm5_b mulH_b;
mov ymm5_c mulH_c;
mov ymm5_d mulH_d;
mov ymm5_e mulH_e;
mov ymm5_f mulH_f;
(* vpsubw %ymm5,%ymm9,%ymm9                        #! PC = 0x555555556ce3 *)
sub ymm9_0 ymm9_0 ymm5_0;
sub ymm9_1 ymm9_1 ymm5_1;
sub ymm9_2 ymm9_2 ymm5_2;
sub ymm9_3 ymm9_3 ymm5_3;
sub ymm9_4 ymm9_4 ymm5_4;
sub ymm9_5 ymm9_5 ymm5_5;
sub ymm9_6 ymm9_6 ymm5_6;
sub ymm9_7 ymm9_7 ymm5_7;
sub ymm9_8 ymm9_8 ymm5_8;
sub ymm9_9 ymm9_9 ymm5_9;
sub ymm9_a ymm9_a ymm5_a;
sub ymm9_b ymm9_b ymm5_b;
sub ymm9_c ymm9_c ymm5_c;
sub ymm9_d ymm9_d ymm5_d;
sub ymm9_e ymm9_e ymm5_e;
sub ymm9_f ymm9_f ymm5_f;
(* vpbroadcastw 0x106(%rdx),%ymm1                  #! EA = L0x555555561226; Value = 0x6f65ad9a276d0198; PC = 0x555555556ce7 *)
mov ymm1_0 L0x555555561226;
mov ymm1_1 L0x555555561226;
mov ymm1_2 L0x555555561226;
mov ymm1_3 L0x555555561226;
mov ymm1_4 L0x555555561226;
mov ymm1_5 L0x555555561226;
mov ymm1_6 L0x555555561226;
mov ymm1_7 L0x555555561226;
mov ymm1_8 L0x555555561226;
mov ymm1_9 L0x555555561226;
mov ymm1_a L0x555555561226;
mov ymm1_b L0x555555561226;
mov ymm1_c L0x555555561226;
mov ymm1_d L0x555555561226;
mov ymm1_e L0x555555561226;
mov ymm1_f L0x555555561226;
(* vpbroadcastw 0x306(%rdx),%ymm2                  #! EA = L0x555555561426; Value = 0x0165f19a096df198; PC = 0x555555556cf0 *)
mov ymm2_0 L0x555555561426;
mov ymm2_1 L0x555555561426;
mov ymm2_2 L0x555555561426;
mov ymm2_3 L0x555555561426;
mov ymm2_4 L0x555555561426;
mov ymm2_5 L0x555555561426;
mov ymm2_6 L0x555555561426;
mov ymm2_7 L0x555555561426;
mov ymm2_8 L0x555555561426;
mov ymm2_9 L0x555555561426;
mov ymm2_a L0x555555561426;
mov ymm2_b L0x555555561426;
mov ymm2_c L0x555555561426;
mov ymm2_d L0x555555561426;
mov ymm2_e L0x555555561426;
mov ymm2_f L0x555555561426;
(* vpmullw %ymm1,%ymm11,%ymm5                      #! PC = 0x555555556cf9 *)
smull mulHymm11_0 mulL_0 ymm1_0 ymm11_0;
smull mulHymm11_1 mulL_1 ymm1_1 ymm11_1;
smull mulHymm11_2 mulL_2 ymm1_2 ymm11_2;
smull mulHymm11_3 mulL_3 ymm1_3 ymm11_3;
smull mulHymm11_4 mulL_4 ymm1_4 ymm11_4;
smull mulHymm11_5 mulL_5 ymm1_5 ymm11_5;
smull mulHymm11_6 mulL_6 ymm1_6 ymm11_6;
smull mulHymm11_7 mulL_7 ymm1_7 ymm11_7;
smull mulHymm11_8 mulL_8 ymm1_8 ymm11_8;
smull mulHymm11_9 mulL_9 ymm1_9 ymm11_9;
smull mulHymm11_a mulL_a ymm1_a ymm11_a;
smull mulHymm11_b mulL_b ymm1_b ymm11_b;
smull mulHymm11_c mulL_c ymm1_c ymm11_c;
smull mulHymm11_d mulL_d ymm1_d ymm11_d;
smull mulHymm11_e mulL_e ymm1_e ymm11_e;
smull mulHymm11_f mulL_f ymm1_f ymm11_f;
cast ymm5_0@sint16 mulL_0;
cast ymm5_1@sint16 mulL_1;
cast ymm5_2@sint16 mulL_2;
cast ymm5_3@sint16 mulL_3;
cast ymm5_4@sint16 mulL_4;
cast ymm5_5@sint16 mulL_5;
cast ymm5_6@sint16 mulL_6;
cast ymm5_7@sint16 mulL_7;
cast ymm5_8@sint16 mulL_8;
cast ymm5_9@sint16 mulL_9;
cast ymm5_a@sint16 mulL_a;
cast ymm5_b@sint16 mulL_b;
cast ymm5_c@sint16 mulL_c;
cast ymm5_d@sint16 mulL_d;
cast ymm5_e@sint16 mulL_e;
cast ymm5_f@sint16 mulL_f;
(* vpmulhw %ymm2,%ymm11,%ymm11                     #! PC = 0x555555556cfd *)
smull mulH_0 mulLymm11_0 ymm11_0 ymm2_0;
smull mulH_1 mulLymm11_1 ymm11_1 ymm2_1;
smull mulH_2 mulLymm11_2 ymm11_2 ymm2_2;
smull mulH_3 mulLymm11_3 ymm11_3 ymm2_3;
smull mulH_4 mulLymm11_4 ymm11_4 ymm2_4;
smull mulH_5 mulLymm11_5 ymm11_5 ymm2_5;
smull mulH_6 mulLymm11_6 ymm11_6 ymm2_6;
smull mulH_7 mulLymm11_7 ymm11_7 ymm2_7;
smull mulH_8 mulLymm11_8 ymm11_8 ymm2_8;
smull mulH_9 mulLymm11_9 ymm11_9 ymm2_9;
smull mulH_a mulLymm11_a ymm11_a ymm2_a;
smull mulH_b mulLymm11_b ymm11_b ymm2_b;
smull mulH_c mulLymm11_c ymm11_c ymm2_c;
smull mulH_d mulLymm11_d ymm11_d ymm2_d;
smull mulH_e mulLymm11_e ymm11_e ymm2_e;
smull mulH_f mulLymm11_f ymm11_f ymm2_f;
mov ymm11_0 mulH_0;
mov ymm11_1 mulH_1;
mov ymm11_2 mulH_2;
mov ymm11_3 mulH_3;
mov ymm11_4 mulH_4;
mov ymm11_5 mulH_5;
mov ymm11_6 mulH_6;
mov ymm11_7 mulH_7;
mov ymm11_8 mulH_8;
mov ymm11_9 mulH_9;
mov ymm11_a mulH_a;
mov ymm11_b mulH_b;
mov ymm11_c mulH_c;
mov ymm11_d mulH_d;
mov ymm11_e mulH_e;
mov ymm11_f mulH_f;
(* vpmulhw %ymm0,%ymm5,%ymm5                       #! PC = 0x555555556d01 *)
smull mulH_0 red_0 ymm5_0 ymm0_0;
assert true && red_0 = mulLymm11_0;
assume red_0 = mulLymm11_0 && true;
smull mulH_1 red_1 ymm5_1 ymm0_1;
assert true && red_1 = mulLymm11_1;
assume red_1 = mulLymm11_1 && true;
smull mulH_2 red_2 ymm5_2 ymm0_2;
assert true && red_2 = mulLymm11_2;
assume red_2 = mulLymm11_2 && true;
smull mulH_3 red_3 ymm5_3 ymm0_3;
assert true && red_3 = mulLymm11_3;
assume red_3 = mulLymm11_3 && true;
smull mulH_4 red_4 ymm5_4 ymm0_4;
assert true && red_4 = mulLymm11_4;
assume red_4 = mulLymm11_4 && true;
smull mulH_5 red_5 ymm5_5 ymm0_5;
assert true && red_5 = mulLymm11_5;
assume red_5 = mulLymm11_5 && true;
smull mulH_6 red_6 ymm5_6 ymm0_6;
assert true && red_6 = mulLymm11_6;
assume red_6 = mulLymm11_6 && true;
smull mulH_7 red_7 ymm5_7 ymm0_7;
assert true && red_7 = mulLymm11_7;
assume red_7 = mulLymm11_7 && true;
smull mulH_8 red_8 ymm5_8 ymm0_8;
assert true && red_8 = mulLymm11_8;
assume red_8 = mulLymm11_8 && true;
smull mulH_9 red_9 ymm5_9 ymm0_9;
assert true && red_9 = mulLymm11_9;
assume red_9 = mulLymm11_9 && true;
smull mulH_a red_a ymm5_a ymm0_a;
assert true && red_a = mulLymm11_a;
assume red_a = mulLymm11_a && true;
smull mulH_b red_b ymm5_b ymm0_b;
assert true && red_b = mulLymm11_b;
assume red_b = mulLymm11_b && true;
smull mulH_c red_c ymm5_c ymm0_c;
assert true && red_c = mulLymm11_c;
assume red_c = mulLymm11_c && true;
smull mulH_d red_d ymm5_d ymm0_d;
assert true && red_d = mulLymm11_d;
assume red_d = mulLymm11_d && true;
smull mulH_e red_e ymm5_e ymm0_e;
assert true && red_e = mulLymm11_e;
assume red_e = mulLymm11_e && true;
smull mulH_f red_f ymm5_f ymm0_f;
assert true && red_f = mulLymm11_f;
assume red_f = mulLymm11_f && true;
mov ymm5_0 mulH_0;
mov ymm5_1 mulH_1;
mov ymm5_2 mulH_2;
mov ymm5_3 mulH_3;
mov ymm5_4 mulH_4;
mov ymm5_5 mulH_5;
mov ymm5_6 mulH_6;
mov ymm5_7 mulH_7;
mov ymm5_8 mulH_8;
mov ymm5_9 mulH_9;
mov ymm5_a mulH_a;
mov ymm5_b mulH_b;
mov ymm5_c mulH_c;
mov ymm5_d mulH_d;
mov ymm5_e mulH_e;
mov ymm5_f mulH_f;
(* vpsubw %ymm5,%ymm11,%ymm11                      #! PC = 0x555555556d05 *)
sub ymm11_0 ymm11_0 ymm5_0;
sub ymm11_1 ymm11_1 ymm5_1;
sub ymm11_2 ymm11_2 ymm5_2;
sub ymm11_3 ymm11_3 ymm5_3;
sub ymm11_4 ymm11_4 ymm5_4;
sub ymm11_5 ymm11_5 ymm5_5;
sub ymm11_6 ymm11_6 ymm5_6;
sub ymm11_7 ymm11_7 ymm5_7;
sub ymm11_8 ymm11_8 ymm5_8;
sub ymm11_9 ymm11_9 ymm5_9;
sub ymm11_a ymm11_a ymm5_a;
sub ymm11_b ymm11_b ymm5_b;
sub ymm11_c ymm11_c ymm5_c;
sub ymm11_d ymm11_d ymm5_d;
sub ymm11_e ymm11_e ymm5_e;
sub ymm11_f ymm11_f ymm5_f;
(* vpaddw %ymm4,%ymm3,%ymm5                        #! PC = 0x555555556d09 *)
add ymm5_0 ymm3_0 ymm4_0;
add ymm5_1 ymm3_1 ymm4_1;
add ymm5_2 ymm3_2 ymm4_2;
add ymm5_3 ymm3_3 ymm4_3;
add ymm5_4 ymm3_4 ymm4_4;
add ymm5_5 ymm3_5 ymm4_5;
add ymm5_6 ymm3_6 ymm4_6;
add ymm5_7 ymm3_7 ymm4_7;
add ymm5_8 ymm3_8 ymm4_8;
add ymm5_9 ymm3_9 ymm4_9;
add ymm5_a ymm3_a ymm4_a;
add ymm5_b ymm3_b ymm4_b;
add ymm5_c ymm3_c ymm4_c;
add ymm5_d ymm3_d ymm4_d;
add ymm5_e ymm3_e ymm4_e;
add ymm5_f ymm3_f ymm4_f;
(* vpsubw %ymm4,%ymm3,%ymm4                        #! PC = 0x555555556d0d *)
sub ymm4_0 ymm3_0 ymm4_0;
sub ymm4_1 ymm3_1 ymm4_1;
sub ymm4_2 ymm3_2 ymm4_2;
sub ymm4_3 ymm3_3 ymm4_3;
sub ymm4_4 ymm3_4 ymm4_4;
sub ymm4_5 ymm3_5 ymm4_5;
sub ymm4_6 ymm3_6 ymm4_6;
sub ymm4_7 ymm3_7 ymm4_7;
sub ymm4_8 ymm3_8 ymm4_8;
sub ymm4_9 ymm3_9 ymm4_9;
sub ymm4_a ymm3_a ymm4_a;
sub ymm4_b ymm3_b ymm4_b;
sub ymm4_c ymm3_c ymm4_c;
sub ymm4_d ymm3_d ymm4_d;
sub ymm4_e ymm3_e ymm4_e;
sub ymm4_f ymm3_f ymm4_f;
(* vpaddw %ymm7,%ymm6,%ymm3                        #! PC = 0x555555556d11 *)
add ymm3_0 ymm6_0 ymm7_0;
add ymm3_1 ymm6_1 ymm7_1;
add ymm3_2 ymm6_2 ymm7_2;
add ymm3_3 ymm6_3 ymm7_3;
add ymm3_4 ymm6_4 ymm7_4;
add ymm3_5 ymm6_5 ymm7_5;
add ymm3_6 ymm6_6 ymm7_6;
add ymm3_7 ymm6_7 ymm7_7;
add ymm3_8 ymm6_8 ymm7_8;
add ymm3_9 ymm6_9 ymm7_9;
add ymm3_a ymm6_a ymm7_a;
add ymm3_b ymm6_b ymm7_b;
add ymm3_c ymm6_c ymm7_c;
add ymm3_d ymm6_d ymm7_d;
add ymm3_e ymm6_e ymm7_e;
add ymm3_f ymm6_f ymm7_f;
(* vpsubw %ymm7,%ymm6,%ymm7                        #! PC = 0x555555556d15 *)
sub ymm7_0 ymm6_0 ymm7_0;
sub ymm7_1 ymm6_1 ymm7_1;
sub ymm7_2 ymm6_2 ymm7_2;
sub ymm7_3 ymm6_3 ymm7_3;
sub ymm7_4 ymm6_4 ymm7_4;
sub ymm7_5 ymm6_5 ymm7_5;
sub ymm7_6 ymm6_6 ymm7_6;
sub ymm7_7 ymm6_7 ymm7_7;
sub ymm7_8 ymm6_8 ymm7_8;
sub ymm7_9 ymm6_9 ymm7_9;
sub ymm7_a ymm6_a ymm7_a;
sub ymm7_b ymm6_b ymm7_b;
sub ymm7_c ymm6_c ymm7_c;
sub ymm7_d ymm6_d ymm7_d;
sub ymm7_e ymm6_e ymm7_e;
sub ymm7_f ymm6_f ymm7_f;
(* vpaddw %ymm9,%ymm8,%ymm6                        #! PC = 0x555555556d19 *)
add ymm6_0 ymm8_0 ymm9_0;
add ymm6_1 ymm8_1 ymm9_1;
add ymm6_2 ymm8_2 ymm9_2;
add ymm6_3 ymm8_3 ymm9_3;
add ymm6_4 ymm8_4 ymm9_4;
add ymm6_5 ymm8_5 ymm9_5;
add ymm6_6 ymm8_6 ymm9_6;
add ymm6_7 ymm8_7 ymm9_7;
add ymm6_8 ymm8_8 ymm9_8;
add ymm6_9 ymm8_9 ymm9_9;
add ymm6_a ymm8_a ymm9_a;
add ymm6_b ymm8_b ymm9_b;
add ymm6_c ymm8_c ymm9_c;
add ymm6_d ymm8_d ymm9_d;
add ymm6_e ymm8_e ymm9_e;
add ymm6_f ymm8_f ymm9_f;
(* vpsubw %ymm9,%ymm8,%ymm9                        #! PC = 0x555555556d1e *)
sub ymm9_0 ymm8_0 ymm9_0;
sub ymm9_1 ymm8_1 ymm9_1;
sub ymm9_2 ymm8_2 ymm9_2;
sub ymm9_3 ymm8_3 ymm9_3;
sub ymm9_4 ymm8_4 ymm9_4;
sub ymm9_5 ymm8_5 ymm9_5;
sub ymm9_6 ymm8_6 ymm9_6;
sub ymm9_7 ymm8_7 ymm9_7;
sub ymm9_8 ymm8_8 ymm9_8;
sub ymm9_9 ymm8_9 ymm9_9;
sub ymm9_a ymm8_a ymm9_a;
sub ymm9_b ymm8_b ymm9_b;
sub ymm9_c ymm8_c ymm9_c;
sub ymm9_d ymm8_d ymm9_d;
sub ymm9_e ymm8_e ymm9_e;
sub ymm9_f ymm8_f ymm9_f;
(* vpaddw %ymm11,%ymm10,%ymm8                      #! PC = 0x555555556d23 *)
add ymm8_0 ymm10_0 ymm11_0;
add ymm8_1 ymm10_1 ymm11_1;
add ymm8_2 ymm10_2 ymm11_2;
add ymm8_3 ymm10_3 ymm11_3;
add ymm8_4 ymm10_4 ymm11_4;
add ymm8_5 ymm10_5 ymm11_5;
add ymm8_6 ymm10_6 ymm11_6;
add ymm8_7 ymm10_7 ymm11_7;
add ymm8_8 ymm10_8 ymm11_8;
add ymm8_9 ymm10_9 ymm11_9;
add ymm8_a ymm10_a ymm11_a;
add ymm8_b ymm10_b ymm11_b;
add ymm8_c ymm10_c ymm11_c;
add ymm8_d ymm10_d ymm11_d;
add ymm8_e ymm10_e ymm11_e;
add ymm8_f ymm10_f ymm11_f;
(* vpsubw %ymm11,%ymm10,%ymm11                     #! PC = 0x555555556d28 *)
sub ymm11_0 ymm10_0 ymm11_0;
sub ymm11_1 ymm10_1 ymm11_1;
sub ymm11_2 ymm10_2 ymm11_2;
sub ymm11_3 ymm10_3 ymm11_3;
sub ymm11_4 ymm10_4 ymm11_4;
sub ymm11_5 ymm10_5 ymm11_5;
sub ymm11_6 ymm10_6 ymm11_6;
sub ymm11_7 ymm10_7 ymm11_7;
sub ymm11_8 ymm10_8 ymm11_8;
sub ymm11_9 ymm10_9 ymm11_9;
sub ymm11_a ymm10_a ymm11_a;
sub ymm11_b ymm10_b ymm11_b;
sub ymm11_c ymm10_c ymm11_c;
sub ymm11_d ymm10_d ymm11_d;
sub ymm11_e ymm10_e ymm11_e;
sub ymm11_f ymm10_f ymm11_f;
(* vmovdqa %ymm5,(%rdi)                            #! EA = L0x7fffffffd2e0; PC = 0x555555556d2d *)
mov L0x7fffffffd2e0 ymm5_0;
mov L0x7fffffffd2e2 ymm5_1;
mov L0x7fffffffd2e4 ymm5_2;
mov L0x7fffffffd2e6 ymm5_3;
mov L0x7fffffffd2e8 ymm5_4;
mov L0x7fffffffd2ea ymm5_5;
mov L0x7fffffffd2ec ymm5_6;
mov L0x7fffffffd2ee ymm5_7;
mov L0x7fffffffd2f0 ymm5_8;
mov L0x7fffffffd2f2 ymm5_9;
mov L0x7fffffffd2f4 ymm5_a;
mov L0x7fffffffd2f6 ymm5_b;
mov L0x7fffffffd2f8 ymm5_c;
mov L0x7fffffffd2fa ymm5_d;
mov L0x7fffffffd2fc ymm5_e;
mov L0x7fffffffd2fe ymm5_f;
(* vmovdqa %ymm4,0x100(%rdi)                       #! EA = L0x7fffffffd3e0; PC = 0x555555556d31 *)
mov L0x7fffffffd3e0 ymm4_0;
mov L0x7fffffffd3e2 ymm4_1;
mov L0x7fffffffd3e4 ymm4_2;
mov L0x7fffffffd3e6 ymm4_3;
mov L0x7fffffffd3e8 ymm4_4;
mov L0x7fffffffd3ea ymm4_5;
mov L0x7fffffffd3ec ymm4_6;
mov L0x7fffffffd3ee ymm4_7;
mov L0x7fffffffd3f0 ymm4_8;
mov L0x7fffffffd3f2 ymm4_9;
mov L0x7fffffffd3f4 ymm4_a;
mov L0x7fffffffd3f6 ymm4_b;
mov L0x7fffffffd3f8 ymm4_c;
mov L0x7fffffffd3fa ymm4_d;
mov L0x7fffffffd3fc ymm4_e;
mov L0x7fffffffd3fe ymm4_f;
(* vmovdqa %ymm3,0x200(%rdi)                       #! EA = L0x7fffffffd4e0; PC = 0x555555556d39 *)
mov L0x7fffffffd4e0 ymm3_0;
mov L0x7fffffffd4e2 ymm3_1;
mov L0x7fffffffd4e4 ymm3_2;
mov L0x7fffffffd4e6 ymm3_3;
mov L0x7fffffffd4e8 ymm3_4;
mov L0x7fffffffd4ea ymm3_5;
mov L0x7fffffffd4ec ymm3_6;
mov L0x7fffffffd4ee ymm3_7;
mov L0x7fffffffd4f0 ymm3_8;
mov L0x7fffffffd4f2 ymm3_9;
mov L0x7fffffffd4f4 ymm3_a;
mov L0x7fffffffd4f6 ymm3_b;
mov L0x7fffffffd4f8 ymm3_c;
mov L0x7fffffffd4fa ymm3_d;
mov L0x7fffffffd4fc ymm3_e;
mov L0x7fffffffd4fe ymm3_f;
(* vmovdqa %ymm7,0x300(%rdi)                       #! EA = L0x7fffffffd5e0; PC = 0x555555556d41 *)
mov L0x7fffffffd5e0 ymm7_0;
mov L0x7fffffffd5e2 ymm7_1;
mov L0x7fffffffd5e4 ymm7_2;
mov L0x7fffffffd5e6 ymm7_3;
mov L0x7fffffffd5e8 ymm7_4;
mov L0x7fffffffd5ea ymm7_5;
mov L0x7fffffffd5ec ymm7_6;
mov L0x7fffffffd5ee ymm7_7;
mov L0x7fffffffd5f0 ymm7_8;
mov L0x7fffffffd5f2 ymm7_9;
mov L0x7fffffffd5f4 ymm7_a;
mov L0x7fffffffd5f6 ymm7_b;
mov L0x7fffffffd5f8 ymm7_c;
mov L0x7fffffffd5fa ymm7_d;
mov L0x7fffffffd5fc ymm7_e;
mov L0x7fffffffd5fe ymm7_f;
(* vmovdqa %ymm6,0x400(%rdi)                       #! EA = L0x7fffffffd6e0; PC = 0x555555556d49 *)
mov L0x7fffffffd6e0 ymm6_0;
mov L0x7fffffffd6e2 ymm6_1;
mov L0x7fffffffd6e4 ymm6_2;
mov L0x7fffffffd6e6 ymm6_3;
mov L0x7fffffffd6e8 ymm6_4;
mov L0x7fffffffd6ea ymm6_5;
mov L0x7fffffffd6ec ymm6_6;
mov L0x7fffffffd6ee ymm6_7;
mov L0x7fffffffd6f0 ymm6_8;
mov L0x7fffffffd6f2 ymm6_9;
mov L0x7fffffffd6f4 ymm6_a;
mov L0x7fffffffd6f6 ymm6_b;
mov L0x7fffffffd6f8 ymm6_c;
mov L0x7fffffffd6fa ymm6_d;
mov L0x7fffffffd6fc ymm6_e;
mov L0x7fffffffd6fe ymm6_f;
(* vmovdqa %ymm9,0x500(%rdi)                       #! EA = L0x7fffffffd7e0; PC = 0x555555556d51 *)
mov L0x7fffffffd7e0 ymm9_0;
mov L0x7fffffffd7e2 ymm9_1;
mov L0x7fffffffd7e4 ymm9_2;
mov L0x7fffffffd7e6 ymm9_3;
mov L0x7fffffffd7e8 ymm9_4;
mov L0x7fffffffd7ea ymm9_5;
mov L0x7fffffffd7ec ymm9_6;
mov L0x7fffffffd7ee ymm9_7;
mov L0x7fffffffd7f0 ymm9_8;
mov L0x7fffffffd7f2 ymm9_9;
mov L0x7fffffffd7f4 ymm9_a;
mov L0x7fffffffd7f6 ymm9_b;
mov L0x7fffffffd7f8 ymm9_c;
mov L0x7fffffffd7fa ymm9_d;
mov L0x7fffffffd7fc ymm9_e;
mov L0x7fffffffd7fe ymm9_f;
(* vmovdqa %ymm8,0x600(%rdi)                       #! EA = L0x7fffffffd8e0; PC = 0x555555556d59 *)
mov L0x7fffffffd8e0 ymm8_0;
mov L0x7fffffffd8e2 ymm8_1;
mov L0x7fffffffd8e4 ymm8_2;
mov L0x7fffffffd8e6 ymm8_3;
mov L0x7fffffffd8e8 ymm8_4;
mov L0x7fffffffd8ea ymm8_5;
mov L0x7fffffffd8ec ymm8_6;
mov L0x7fffffffd8ee ymm8_7;
mov L0x7fffffffd8f0 ymm8_8;
mov L0x7fffffffd8f2 ymm8_9;
mov L0x7fffffffd8f4 ymm8_a;
mov L0x7fffffffd8f6 ymm8_b;
mov L0x7fffffffd8f8 ymm8_c;
mov L0x7fffffffd8fa ymm8_d;
mov L0x7fffffffd8fc ymm8_e;
mov L0x7fffffffd8fe ymm8_f;
(* vmovdqa %ymm11,0x700(%rdi)                      #! EA = L0x7fffffffd9e0; PC = 0x555555556d61 *)
mov L0x7fffffffd9e0 ymm11_0;
mov L0x7fffffffd9e2 ymm11_1;
mov L0x7fffffffd9e4 ymm11_2;
mov L0x7fffffffd9e6 ymm11_3;
mov L0x7fffffffd9e8 ymm11_4;
mov L0x7fffffffd9ea ymm11_5;
mov L0x7fffffffd9ec ymm11_6;
mov L0x7fffffffd9ee ymm11_7;
mov L0x7fffffffd9f0 ymm11_8;
mov L0x7fffffffd9f2 ymm11_9;
mov L0x7fffffffd9f4 ymm11_a;
mov L0x7fffffffd9f6 ymm11_b;
mov L0x7fffffffd9f8 ymm11_c;
mov L0x7fffffffd9fa ymm11_d;
mov L0x7fffffffd9fc ymm11_e;
mov L0x7fffffffd9fe ymm11_f;


(**************** LEVELS 0-2, 0 *****************)


(**************** CUT   1,  0 *****************)

ecut 
  and [
eqmod (c000*x**  0+c001*x**  1+c002*x**  2+c003*x**  3+
       c004*x**  4+c005*x**  5+c006*x**  6+c007*x**  7+
       c008*x**  8+c009*x**  9+c00a*x** 10+c00b*x** 11+
       c00c*x** 12+c00d*x** 13+c00e*x** 14+c00f*x** 15+
       c080*x**128+c081*x**129+c082*x**130+c083*x**131+
       c084*x**132+c085*x**133+c086*x**134+c087*x**135+
       c088*x**136+c089*x**137+c08a*x**138+c08b*x**139+
       c08c*x**140+c08d*x**141+c08e*x**142+c08f*x**143+
       c100*x**256+c101*x**257+c102*x**258+c103*x**259+
       c104*x**260+c105*x**261+c106*x**262+c107*x**263+
       c108*x**264+c109*x**265+c10a*x**266+c10b*x**267+
       c10c*x**268+c10d*x**269+c10e*x**270+c10f*x**271+
       c180*x**384+c181*x**385+c182*x**386+c183*x**387+
       c184*x**388+c185*x**389+c186*x**390+c187*x**391+
       c188*x**392+c189*x**393+c18a*x**394+c18b*x**395+
       c18c*x**396+c18d*x**397+c18e*x**398+c18f*x**399)
      (L0x7fffffffd2e0*x** 0+L0x7fffffffd2e2*x** 1+L0x7fffffffd2e4*x** 2+
       L0x7fffffffd2e6*x** 3+L0x7fffffffd2e8*x** 4+L0x7fffffffd2ea*x** 5+
       L0x7fffffffd2ec*x** 6+L0x7fffffffd2ee*x** 7+L0x7fffffffd2f0*x** 8+
       L0x7fffffffd2f2*x** 9+L0x7fffffffd2f4*x**10+L0x7fffffffd2f6*x**11+
       L0x7fffffffd2f8*x**12+L0x7fffffffd2fa*x**13+L0x7fffffffd2fc*x**14+
       L0x7fffffffd2fe*x**15)
      [10753, x**128 - 1],
eqmod (c000*x**  0+c001*x**  1+c002*x**  2+c003*x**  3+
       c004*x**  4+c005*x**  5+c006*x**  6+c007*x**  7+
       c008*x**  8+c009*x**  9+c00a*x** 10+c00b*x** 11+
       c00c*x** 12+c00d*x** 13+c00e*x** 14+c00f*x** 15+
       c080*x**128+c081*x**129+c082*x**130+c083*x**131+
       c084*x**132+c085*x**133+c086*x**134+c087*x**135+
       c088*x**136+c089*x**137+c08a*x**138+c08b*x**139+
       c08c*x**140+c08d*x**141+c08e*x**142+c08f*x**143+
       c100*x**256+c101*x**257+c102*x**258+c103*x**259+
       c104*x**260+c105*x**261+c106*x**262+c107*x**263+
       c108*x**264+c109*x**265+c10a*x**266+c10b*x**267+
       c10c*x**268+c10d*x**269+c10e*x**270+c10f*x**271+
       c180*x**384+c181*x**385+c182*x**386+c183*x**387+
       c184*x**388+c185*x**389+c186*x**390+c187*x**391+
       c188*x**392+c189*x**393+c18a*x**394+c18b*x**395+
       c18c*x**396+c18d*x**397+c18e*x**398+c18f*x**399)
      (L0x7fffffffd3e0*x** 0+L0x7fffffffd3e2*x** 1+L0x7fffffffd3e4*x** 2+
       L0x7fffffffd3e6*x** 3+L0x7fffffffd3e8*x** 4+L0x7fffffffd3ea*x** 5+
       L0x7fffffffd3ec*x** 6+L0x7fffffffd3ee*x** 7+L0x7fffffffd3f0*x** 8+
       L0x7fffffffd3f2*x** 9+L0x7fffffffd3f4*x**10+L0x7fffffffd3f6*x**11+
       L0x7fffffffd3f8*x**12+L0x7fffffffd3fa*x**13+L0x7fffffffd3fc*x**14+
       L0x7fffffffd3fe*x**15)
      [10753, x**128 - 10752],
eqmod (c000*x**  0+c001*x**  1+c002*x**  2+c003*x**  3+
       c004*x**  4+c005*x**  5+c006*x**  6+c007*x**  7+
       c008*x**  8+c009*x**  9+c00a*x** 10+c00b*x** 11+
       c00c*x** 12+c00d*x** 13+c00e*x** 14+c00f*x** 15+
       c080*x**128+c081*x**129+c082*x**130+c083*x**131+
       c084*x**132+c085*x**133+c086*x**134+c087*x**135+
       c088*x**136+c089*x**137+c08a*x**138+c08b*x**139+
       c08c*x**140+c08d*x**141+c08e*x**142+c08f*x**143+
       c100*x**256+c101*x**257+c102*x**258+c103*x**259+
       c104*x**260+c105*x**261+c106*x**262+c107*x**263+
       c108*x**264+c109*x**265+c10a*x**266+c10b*x**267+
       c10c*x**268+c10d*x**269+c10e*x**270+c10f*x**271+
       c180*x**384+c181*x**385+c182*x**386+c183*x**387+
       c184*x**388+c185*x**389+c186*x**390+c187*x**391+
       c188*x**392+c189*x**393+c18a*x**394+c18b*x**395+
       c18c*x**396+c18d*x**397+c18e*x**398+c18f*x**399)
      (L0x7fffffffd4e0*x** 0+L0x7fffffffd4e2*x** 1+L0x7fffffffd4e4*x** 2+
       L0x7fffffffd4e6*x** 3+L0x7fffffffd4e8*x** 4+L0x7fffffffd4ea*x** 5+
       L0x7fffffffd4ec*x** 6+L0x7fffffffd4ee*x** 7+L0x7fffffffd4f0*x** 8+
       L0x7fffffffd4f2*x** 9+L0x7fffffffd4f4*x**10+L0x7fffffffd4f6*x**11+
       L0x7fffffffd4f8*x**12+L0x7fffffffd4fa*x**13+L0x7fffffffd4fc*x**14+
       L0x7fffffffd4fe*x**15)
      [10753, x**128 - 6264],
eqmod (c000*x**  0+c001*x**  1+c002*x**  2+c003*x**  3+
       c004*x**  4+c005*x**  5+c006*x**  6+c007*x**  7+
       c008*x**  8+c009*x**  9+c00a*x** 10+c00b*x** 11+
       c00c*x** 12+c00d*x** 13+c00e*x** 14+c00f*x** 15+
       c080*x**128+c081*x**129+c082*x**130+c083*x**131+
       c084*x**132+c085*x**133+c086*x**134+c087*x**135+
       c088*x**136+c089*x**137+c08a*x**138+c08b*x**139+
       c08c*x**140+c08d*x**141+c08e*x**142+c08f*x**143+
       c100*x**256+c101*x**257+c102*x**258+c103*x**259+
       c104*x**260+c105*x**261+c106*x**262+c107*x**263+
       c108*x**264+c109*x**265+c10a*x**266+c10b*x**267+
       c10c*x**268+c10d*x**269+c10e*x**270+c10f*x**271+
       c180*x**384+c181*x**385+c182*x**386+c183*x**387+
       c184*x**388+c185*x**389+c186*x**390+c187*x**391+
       c188*x**392+c189*x**393+c18a*x**394+c18b*x**395+
       c18c*x**396+c18d*x**397+c18e*x**398+c18f*x**399)
      (L0x7fffffffd5e0*x** 0+L0x7fffffffd5e2*x** 1+L0x7fffffffd5e4*x** 2+
       L0x7fffffffd5e6*x** 3+L0x7fffffffd5e8*x** 4+L0x7fffffffd5ea*x** 5+
       L0x7fffffffd5ec*x** 6+L0x7fffffffd5ee*x** 7+L0x7fffffffd5f0*x** 8+
       L0x7fffffffd5f2*x** 9+L0x7fffffffd5f4*x**10+L0x7fffffffd5f6*x**11+
       L0x7fffffffd5f8*x**12+L0x7fffffffd5fa*x**13+L0x7fffffffd5fc*x**14+
       L0x7fffffffd5fe*x**15)
      [10753, x**128 - 4489],
eqmod (c000*x**  0+c001*x**  1+c002*x**  2+c003*x**  3+
       c004*x**  4+c005*x**  5+c006*x**  6+c007*x**  7+
       c008*x**  8+c009*x**  9+c00a*x** 10+c00b*x** 11+
       c00c*x** 12+c00d*x** 13+c00e*x** 14+c00f*x** 15+
       c080*x**128+c081*x**129+c082*x**130+c083*x**131+
       c084*x**132+c085*x**133+c086*x**134+c087*x**135+
       c088*x**136+c089*x**137+c08a*x**138+c08b*x**139+
       c08c*x**140+c08d*x**141+c08e*x**142+c08f*x**143+
       c100*x**256+c101*x**257+c102*x**258+c103*x**259+
       c104*x**260+c105*x**261+c106*x**262+c107*x**263+
       c108*x**264+c109*x**265+c10a*x**266+c10b*x**267+
       c10c*x**268+c10d*x**269+c10e*x**270+c10f*x**271+
       c180*x**384+c181*x**385+c182*x**386+c183*x**387+
       c184*x**388+c185*x**389+c186*x**390+c187*x**391+
       c188*x**392+c189*x**393+c18a*x**394+c18b*x**395+
       c18c*x**396+c18d*x**397+c18e*x**398+c18f*x**399)
      (L0x7fffffffd6e0*x** 0+L0x7fffffffd6e2*x** 1+L0x7fffffffd6e4*x** 2+
       L0x7fffffffd6e6*x** 3+L0x7fffffffd6e8*x** 4+L0x7fffffffd6ea*x** 5+
       L0x7fffffffd6ec*x** 6+L0x7fffffffd6ee*x** 7+L0x7fffffffd6f0*x** 8+
       L0x7fffffffd6f2*x** 9+L0x7fffffffd6f4*x**10+L0x7fffffffd6f6*x**11+
       L0x7fffffffd6f8*x**12+L0x7fffffffd6fa*x**13+L0x7fffffffd6fc*x**14+
       L0x7fffffffd6fe*x**15)
      [10753, x**128 - 321],
eqmod (c000*x**  0+c001*x**  1+c002*x**  2+c003*x**  3+
       c004*x**  4+c005*x**  5+c006*x**  6+c007*x**  7+
       c008*x**  8+c009*x**  9+c00a*x** 10+c00b*x** 11+
       c00c*x** 12+c00d*x** 13+c00e*x** 14+c00f*x** 15+
       c080*x**128+c081*x**129+c082*x**130+c083*x**131+
       c084*x**132+c085*x**133+c086*x**134+c087*x**135+
       c088*x**136+c089*x**137+c08a*x**138+c08b*x**139+
       c08c*x**140+c08d*x**141+c08e*x**142+c08f*x**143+
       c100*x**256+c101*x**257+c102*x**258+c103*x**259+
       c104*x**260+c105*x**261+c106*x**262+c107*x**263+
       c108*x**264+c109*x**265+c10a*x**266+c10b*x**267+
       c10c*x**268+c10d*x**269+c10e*x**270+c10f*x**271+
       c180*x**384+c181*x**385+c182*x**386+c183*x**387+
       c184*x**388+c185*x**389+c186*x**390+c187*x**391+
       c188*x**392+c189*x**393+c18a*x**394+c18b*x**395+
       c18c*x**396+c18d*x**397+c18e*x**398+c18f*x**399)
      (L0x7fffffffd7e0*x** 0+L0x7fffffffd7e2*x** 1+L0x7fffffffd7e4*x** 2+
       L0x7fffffffd7e6*x** 3+L0x7fffffffd7e8*x** 4+L0x7fffffffd7ea*x** 5+
       L0x7fffffffd7ec*x** 6+L0x7fffffffd7ee*x** 7+L0x7fffffffd7f0*x** 8+
       L0x7fffffffd7f2*x** 9+L0x7fffffffd7f4*x**10+L0x7fffffffd7f6*x**11+
       L0x7fffffffd7f8*x**12+L0x7fffffffd7fa*x**13+L0x7fffffffd7fc*x**14+
       L0x7fffffffd7fe*x**15)
      [10753, x**128 - 10432],
eqmod (c000*x**  0+c001*x**  1+c002*x**  2+c003*x**  3+
       c004*x**  4+c005*x**  5+c006*x**  6+c007*x**  7+
       c008*x**  8+c009*x**  9+c00a*x** 10+c00b*x** 11+
       c00c*x** 12+c00d*x** 13+c00e*x** 14+c00f*x** 15+
       c080*x**128+c081*x**129+c082*x**130+c083*x**131+
       c084*x**132+c085*x**133+c086*x**134+c087*x**135+
       c088*x**136+c089*x**137+c08a*x**138+c08b*x**139+
       c08c*x**140+c08d*x**141+c08e*x**142+c08f*x**143+
       c100*x**256+c101*x**257+c102*x**258+c103*x**259+
       c104*x**260+c105*x**261+c106*x**262+c107*x**263+
       c108*x**264+c109*x**265+c10a*x**266+c10b*x**267+
       c10c*x**268+c10d*x**269+c10e*x**270+c10f*x**271+
       c180*x**384+c181*x**385+c182*x**386+c183*x**387+
       c184*x**388+c185*x**389+c186*x**390+c187*x**391+
       c188*x**392+c189*x**393+c18a*x**394+c18b*x**395+
       c18c*x**396+c18d*x**397+c18e*x**398+c18f*x**399)
      (L0x7fffffffd8e0*x** 0+L0x7fffffffd8e2*x** 1+L0x7fffffffd8e4*x** 2+
       L0x7fffffffd8e6*x** 3+L0x7fffffffd8e8*x** 4+L0x7fffffffd8ea*x** 5+
       L0x7fffffffd8ec*x** 6+L0x7fffffffd8ee*x** 7+L0x7fffffffd8f0*x** 8+
       L0x7fffffffd8f2*x** 9+L0x7fffffffd8f4*x**10+L0x7fffffffd8f6*x**11+
       L0x7fffffffd8f8*x**12+L0x7fffffffd8fa*x**13+L0x7fffffffd8fc*x**14+
       L0x7fffffffd8fe*x**15)
      [10753, x**128 - 10686],
eqmod (c000*x**  0+c001*x**  1+c002*x**  2+c003*x**  3+
       c004*x**  4+c005*x**  5+c006*x**  6+c007*x**  7+
       c008*x**  8+c009*x**  9+c00a*x** 10+c00b*x** 11+
       c00c*x** 12+c00d*x** 13+c00e*x** 14+c00f*x** 15+
       c080*x**128+c081*x**129+c082*x**130+c083*x**131+
       c084*x**132+c085*x**133+c086*x**134+c087*x**135+
       c088*x**136+c089*x**137+c08a*x**138+c08b*x**139+
       c08c*x**140+c08d*x**141+c08e*x**142+c08f*x**143+
       c100*x**256+c101*x**257+c102*x**258+c103*x**259+
       c104*x**260+c105*x**261+c106*x**262+c107*x**263+
       c108*x**264+c109*x**265+c10a*x**266+c10b*x**267+
       c10c*x**268+c10d*x**269+c10e*x**270+c10f*x**271+
       c180*x**384+c181*x**385+c182*x**386+c183*x**387+
       c184*x**388+c185*x**389+c186*x**390+c187*x**391+
       c188*x**392+c189*x**393+c18a*x**394+c18b*x**395+
       c18c*x**396+c18d*x**397+c18e*x**398+c18f*x**399)
      (L0x7fffffffd9e0*x** 0+L0x7fffffffd9e2*x** 1+L0x7fffffffd9e4*x** 2+
       L0x7fffffffd9e6*x** 3+L0x7fffffffd9e8*x** 4+L0x7fffffffd9ea*x** 5+
       L0x7fffffffd9ec*x** 6+L0x7fffffffd9ee*x** 7+L0x7fffffffd9f0*x** 8+
       L0x7fffffffd9f2*x** 9+L0x7fffffffd9f4*x**10+L0x7fffffffd9f6*x**11+
       L0x7fffffffd9f8*x**12+L0x7fffffffd9fa*x**13+L0x7fffffffd9fc*x**14+
       L0x7fffffffd9fe*x**15)
      [10753, x**128 - 67]
  ];



(* === split the CUT into 8 slices === *)

(**************** CUT   2,  0 *****************)

ecut true;

(**************** CUT   3,  0 *****************)

ecut 
  and [
eqmod (c000*x**  0+c001*x**  1+c002*x**  2+c003*x**  3+
       c004*x**  4+c005*x**  5+c006*x**  6+c007*x**  7+
       c008*x**  8+c009*x**  9+c00a*x** 10+c00b*x** 11+
       c00c*x** 12+c00d*x** 13+c00e*x** 14+c00f*x** 15+
       c080*x**128+c081*x**129+c082*x**130+c083*x**131+
       c084*x**132+c085*x**133+c086*x**134+c087*x**135+
       c088*x**136+c089*x**137+c08a*x**138+c08b*x**139+
       c08c*x**140+c08d*x**141+c08e*x**142+c08f*x**143+
       c100*x**256+c101*x**257+c102*x**258+c103*x**259+
       c104*x**260+c105*x**261+c106*x**262+c107*x**263+
       c108*x**264+c109*x**265+c10a*x**266+c10b*x**267+
       c10c*x**268+c10d*x**269+c10e*x**270+c10f*x**271+
       c180*x**384+c181*x**385+c182*x**386+c183*x**387+
       c184*x**388+c185*x**389+c186*x**390+c187*x**391+
       c188*x**392+c189*x**393+c18a*x**394+c18b*x**395+
       c18c*x**396+c18d*x**397+c18e*x**398+c18f*x**399)
      (L0x7fffffffd2e0*x** 0+L0x7fffffffd2e2*x** 1+L0x7fffffffd2e4*x** 2+
       L0x7fffffffd2e6*x** 3+L0x7fffffffd2e8*x** 4+L0x7fffffffd2ea*x** 5+
       L0x7fffffffd2ec*x** 6+L0x7fffffffd2ee*x** 7+L0x7fffffffd2f0*x** 8+
       L0x7fffffffd2f2*x** 9+L0x7fffffffd2f4*x**10+L0x7fffffffd2f6*x**11+
       L0x7fffffffd2f8*x**12+L0x7fffffffd2fa*x**13+L0x7fffffffd2fc*x**14+
       L0x7fffffffd2fe*x**15)
      [10753, x**128 - 1]
  ] prove with [cuts [1]];


(**************** CUT   4,  0 *****************)

ecut true;

(**************** CUT   5,  0 *****************)

ecut 
  and [
eqmod (c000*x**  0+c001*x**  1+c002*x**  2+c003*x**  3+
       c004*x**  4+c005*x**  5+c006*x**  6+c007*x**  7+
       c008*x**  8+c009*x**  9+c00a*x** 10+c00b*x** 11+
       c00c*x** 12+c00d*x** 13+c00e*x** 14+c00f*x** 15+
       c080*x**128+c081*x**129+c082*x**130+c083*x**131+
       c084*x**132+c085*x**133+c086*x**134+c087*x**135+
       c088*x**136+c089*x**137+c08a*x**138+c08b*x**139+
       c08c*x**140+c08d*x**141+c08e*x**142+c08f*x**143+
       c100*x**256+c101*x**257+c102*x**258+c103*x**259+
       c104*x**260+c105*x**261+c106*x**262+c107*x**263+
       c108*x**264+c109*x**265+c10a*x**266+c10b*x**267+
       c10c*x**268+c10d*x**269+c10e*x**270+c10f*x**271+
       c180*x**384+c181*x**385+c182*x**386+c183*x**387+
       c184*x**388+c185*x**389+c186*x**390+c187*x**391+
       c188*x**392+c189*x**393+c18a*x**394+c18b*x**395+
       c18c*x**396+c18d*x**397+c18e*x**398+c18f*x**399)
      (L0x7fffffffd3e0*x** 0+L0x7fffffffd3e2*x** 1+L0x7fffffffd3e4*x** 2+
       L0x7fffffffd3e6*x** 3+L0x7fffffffd3e8*x** 4+L0x7fffffffd3ea*x** 5+
       L0x7fffffffd3ec*x** 6+L0x7fffffffd3ee*x** 7+L0x7fffffffd3f0*x** 8+
       L0x7fffffffd3f2*x** 9+L0x7fffffffd3f4*x**10+L0x7fffffffd3f6*x**11+
       L0x7fffffffd3f8*x**12+L0x7fffffffd3fa*x**13+L0x7fffffffd3fc*x**14+
       L0x7fffffffd3fe*x**15)
      [10753, x**128 - 10752]
  ] prove with [cuts [1]];


(**************** CUT   6,  0 *****************)

ecut true;

(**************** CUT   7,  0 *****************)

ecut 
  and [
eqmod (c000*x**  0+c001*x**  1+c002*x**  2+c003*x**  3+
       c004*x**  4+c005*x**  5+c006*x**  6+c007*x**  7+
       c008*x**  8+c009*x**  9+c00a*x** 10+c00b*x** 11+
       c00c*x** 12+c00d*x** 13+c00e*x** 14+c00f*x** 15+
       c080*x**128+c081*x**129+c082*x**130+c083*x**131+
       c084*x**132+c085*x**133+c086*x**134+c087*x**135+
       c088*x**136+c089*x**137+c08a*x**138+c08b*x**139+
       c08c*x**140+c08d*x**141+c08e*x**142+c08f*x**143+
       c100*x**256+c101*x**257+c102*x**258+c103*x**259+
       c104*x**260+c105*x**261+c106*x**262+c107*x**263+
       c108*x**264+c109*x**265+c10a*x**266+c10b*x**267+
       c10c*x**268+c10d*x**269+c10e*x**270+c10f*x**271+
       c180*x**384+c181*x**385+c182*x**386+c183*x**387+
       c184*x**388+c185*x**389+c186*x**390+c187*x**391+
       c188*x**392+c189*x**393+c18a*x**394+c18b*x**395+
       c18c*x**396+c18d*x**397+c18e*x**398+c18f*x**399)
      (L0x7fffffffd4e0*x** 0+L0x7fffffffd4e2*x** 1+L0x7fffffffd4e4*x** 2+
       L0x7fffffffd4e6*x** 3+L0x7fffffffd4e8*x** 4+L0x7fffffffd4ea*x** 5+
       L0x7fffffffd4ec*x** 6+L0x7fffffffd4ee*x** 7+L0x7fffffffd4f0*x** 8+
       L0x7fffffffd4f2*x** 9+L0x7fffffffd4f4*x**10+L0x7fffffffd4f6*x**11+
       L0x7fffffffd4f8*x**12+L0x7fffffffd4fa*x**13+L0x7fffffffd4fc*x**14+
       L0x7fffffffd4fe*x**15)
      [10753, x**128 - 6264]
  ] prove with [cuts [1]];


(**************** CUT   8,  0 *****************)

ecut true;

(**************** CUT   9,  0 *****************)

ecut 
  and [
eqmod (c000*x**  0+c001*x**  1+c002*x**  2+c003*x**  3+
       c004*x**  4+c005*x**  5+c006*x**  6+c007*x**  7+
       c008*x**  8+c009*x**  9+c00a*x** 10+c00b*x** 11+
       c00c*x** 12+c00d*x** 13+c00e*x** 14+c00f*x** 15+
       c080*x**128+c081*x**129+c082*x**130+c083*x**131+
       c084*x**132+c085*x**133+c086*x**134+c087*x**135+
       c088*x**136+c089*x**137+c08a*x**138+c08b*x**139+
       c08c*x**140+c08d*x**141+c08e*x**142+c08f*x**143+
       c100*x**256+c101*x**257+c102*x**258+c103*x**259+
       c104*x**260+c105*x**261+c106*x**262+c107*x**263+
       c108*x**264+c109*x**265+c10a*x**266+c10b*x**267+
       c10c*x**268+c10d*x**269+c10e*x**270+c10f*x**271+
       c180*x**384+c181*x**385+c182*x**386+c183*x**387+
       c184*x**388+c185*x**389+c186*x**390+c187*x**391+
       c188*x**392+c189*x**393+c18a*x**394+c18b*x**395+
       c18c*x**396+c18d*x**397+c18e*x**398+c18f*x**399)
      (L0x7fffffffd5e0*x** 0+L0x7fffffffd5e2*x** 1+L0x7fffffffd5e4*x** 2+
       L0x7fffffffd5e6*x** 3+L0x7fffffffd5e8*x** 4+L0x7fffffffd5ea*x** 5+
       L0x7fffffffd5ec*x** 6+L0x7fffffffd5ee*x** 7+L0x7fffffffd5f0*x** 8+
       L0x7fffffffd5f2*x** 9+L0x7fffffffd5f4*x**10+L0x7fffffffd5f6*x**11+
       L0x7fffffffd5f8*x**12+L0x7fffffffd5fa*x**13+L0x7fffffffd5fc*x**14+
       L0x7fffffffd5fe*x**15)
      [10753, x**128 - 4489]
  ] prove with [cuts [1]];


(**************** CUT  10,  0 *****************)

ecut true;

(**************** CUT  11,  0 *****************)

ecut 
  and [
eqmod (c000*x**  0+c001*x**  1+c002*x**  2+c003*x**  3+
       c004*x**  4+c005*x**  5+c006*x**  6+c007*x**  7+
       c008*x**  8+c009*x**  9+c00a*x** 10+c00b*x** 11+
       c00c*x** 12+c00d*x** 13+c00e*x** 14+c00f*x** 15+
       c080*x**128+c081*x**129+c082*x**130+c083*x**131+
       c084*x**132+c085*x**133+c086*x**134+c087*x**135+
       c088*x**136+c089*x**137+c08a*x**138+c08b*x**139+
       c08c*x**140+c08d*x**141+c08e*x**142+c08f*x**143+
       c100*x**256+c101*x**257+c102*x**258+c103*x**259+
       c104*x**260+c105*x**261+c106*x**262+c107*x**263+
       c108*x**264+c109*x**265+c10a*x**266+c10b*x**267+
       c10c*x**268+c10d*x**269+c10e*x**270+c10f*x**271+
       c180*x**384+c181*x**385+c182*x**386+c183*x**387+
       c184*x**388+c185*x**389+c186*x**390+c187*x**391+
       c188*x**392+c189*x**393+c18a*x**394+c18b*x**395+
       c18c*x**396+c18d*x**397+c18e*x**398+c18f*x**399)
      (L0x7fffffffd6e0*x** 0+L0x7fffffffd6e2*x** 1+L0x7fffffffd6e4*x** 2+
       L0x7fffffffd6e6*x** 3+L0x7fffffffd6e8*x** 4+L0x7fffffffd6ea*x** 5+
       L0x7fffffffd6ec*x** 6+L0x7fffffffd6ee*x** 7+L0x7fffffffd6f0*x** 8+
       L0x7fffffffd6f2*x** 9+L0x7fffffffd6f4*x**10+L0x7fffffffd6f6*x**11+
       L0x7fffffffd6f8*x**12+L0x7fffffffd6fa*x**13+L0x7fffffffd6fc*x**14+
       L0x7fffffffd6fe*x**15)
      [10753, x**128 - 321]
  ] prove with [cuts [1]];


(**************** CUT  12,  0 *****************)

ecut true;

(**************** CUT  13,  0 *****************)

ecut 
  and [
eqmod (c000*x**  0+c001*x**  1+c002*x**  2+c003*x**  3+
       c004*x**  4+c005*x**  5+c006*x**  6+c007*x**  7+
       c008*x**  8+c009*x**  9+c00a*x** 10+c00b*x** 11+
       c00c*x** 12+c00d*x** 13+c00e*x** 14+c00f*x** 15+
       c080*x**128+c081*x**129+c082*x**130+c083*x**131+
       c084*x**132+c085*x**133+c086*x**134+c087*x**135+
       c088*x**136+c089*x**137+c08a*x**138+c08b*x**139+
       c08c*x**140+c08d*x**141+c08e*x**142+c08f*x**143+
       c100*x**256+c101*x**257+c102*x**258+c103*x**259+
       c104*x**260+c105*x**261+c106*x**262+c107*x**263+
       c108*x**264+c109*x**265+c10a*x**266+c10b*x**267+
       c10c*x**268+c10d*x**269+c10e*x**270+c10f*x**271+
       c180*x**384+c181*x**385+c182*x**386+c183*x**387+
       c184*x**388+c185*x**389+c186*x**390+c187*x**391+
       c188*x**392+c189*x**393+c18a*x**394+c18b*x**395+
       c18c*x**396+c18d*x**397+c18e*x**398+c18f*x**399)
      (L0x7fffffffd7e0*x** 0+L0x7fffffffd7e2*x** 1+L0x7fffffffd7e4*x** 2+
       L0x7fffffffd7e6*x** 3+L0x7fffffffd7e8*x** 4+L0x7fffffffd7ea*x** 5+
       L0x7fffffffd7ec*x** 6+L0x7fffffffd7ee*x** 7+L0x7fffffffd7f0*x** 8+
       L0x7fffffffd7f2*x** 9+L0x7fffffffd7f4*x**10+L0x7fffffffd7f6*x**11+
       L0x7fffffffd7f8*x**12+L0x7fffffffd7fa*x**13+L0x7fffffffd7fc*x**14+
       L0x7fffffffd7fe*x**15)
      [10753, x**128 - 10432]
  ] prove with [cuts [1]];


(**************** CUT  14,  0 *****************)

ecut true;

(**************** CUT  15,  0 *****************)

ecut 
  and [
eqmod (c000*x**  0+c001*x**  1+c002*x**  2+c003*x**  3+
       c004*x**  4+c005*x**  5+c006*x**  6+c007*x**  7+
       c008*x**  8+c009*x**  9+c00a*x** 10+c00b*x** 11+
       c00c*x** 12+c00d*x** 13+c00e*x** 14+c00f*x** 15+
       c080*x**128+c081*x**129+c082*x**130+c083*x**131+
       c084*x**132+c085*x**133+c086*x**134+c087*x**135+
       c088*x**136+c089*x**137+c08a*x**138+c08b*x**139+
       c08c*x**140+c08d*x**141+c08e*x**142+c08f*x**143+
       c100*x**256+c101*x**257+c102*x**258+c103*x**259+
       c104*x**260+c105*x**261+c106*x**262+c107*x**263+
       c108*x**264+c109*x**265+c10a*x**266+c10b*x**267+
       c10c*x**268+c10d*x**269+c10e*x**270+c10f*x**271+
       c180*x**384+c181*x**385+c182*x**386+c183*x**387+
       c184*x**388+c185*x**389+c186*x**390+c187*x**391+
       c188*x**392+c189*x**393+c18a*x**394+c18b*x**395+
       c18c*x**396+c18d*x**397+c18e*x**398+c18f*x**399)
      (L0x7fffffffd8e0*x** 0+L0x7fffffffd8e2*x** 1+L0x7fffffffd8e4*x** 2+
       L0x7fffffffd8e6*x** 3+L0x7fffffffd8e8*x** 4+L0x7fffffffd8ea*x** 5+
       L0x7fffffffd8ec*x** 6+L0x7fffffffd8ee*x** 7+L0x7fffffffd8f0*x** 8+
       L0x7fffffffd8f2*x** 9+L0x7fffffffd8f4*x**10+L0x7fffffffd8f6*x**11+
       L0x7fffffffd8f8*x**12+L0x7fffffffd8fa*x**13+L0x7fffffffd8fc*x**14+
       L0x7fffffffd8fe*x**15)
      [10753, x**128 - 10686]
  ] prove with [cuts [1]];


(**************** CUT  16,  0 *****************)

ecut true;

(**************** CUT  17,  0 *****************)

ecut 
  and [
eqmod (c000*x**  0+c001*x**  1+c002*x**  2+c003*x**  3+
       c004*x**  4+c005*x**  5+c006*x**  6+c007*x**  7+
       c008*x**  8+c009*x**  9+c00a*x** 10+c00b*x** 11+
       c00c*x** 12+c00d*x** 13+c00e*x** 14+c00f*x** 15+
       c080*x**128+c081*x**129+c082*x**130+c083*x**131+
       c084*x**132+c085*x**133+c086*x**134+c087*x**135+
       c088*x**136+c089*x**137+c08a*x**138+c08b*x**139+
       c08c*x**140+c08d*x**141+c08e*x**142+c08f*x**143+
       c100*x**256+c101*x**257+c102*x**258+c103*x**259+
       c104*x**260+c105*x**261+c106*x**262+c107*x**263+
       c108*x**264+c109*x**265+c10a*x**266+c10b*x**267+
       c10c*x**268+c10d*x**269+c10e*x**270+c10f*x**271+
       c180*x**384+c181*x**385+c182*x**386+c183*x**387+
       c184*x**388+c185*x**389+c186*x**390+c187*x**391+
       c188*x**392+c189*x**393+c18a*x**394+c18b*x**395+
       c18c*x**396+c18d*x**397+c18e*x**398+c18f*x**399)
      (L0x7fffffffd9e0*x** 0+L0x7fffffffd9e2*x** 1+L0x7fffffffd9e4*x** 2+
       L0x7fffffffd9e6*x** 3+L0x7fffffffd9e8*x** 4+L0x7fffffffd9ea*x** 5+
       L0x7fffffffd9ec*x** 6+L0x7fffffffd9ee*x** 7+L0x7fffffffd9f0*x** 8+
       L0x7fffffffd9f2*x** 9+L0x7fffffffd9f4*x**10+L0x7fffffffd9f6*x**11+
       L0x7fffffffd9f8*x**12+L0x7fffffffd9fa*x**13+L0x7fffffffd9fc*x**14+
       L0x7fffffffd9fe*x**15)
      [10753, x**128 - 67]
  ] prove with [cuts [1]];



(* === be ready for next level and offset === *)

(**************** CUT  18,  0 *****************)

ecut true;



(* vpbroadcastw 0x102(%rdx),%ymm1                  #! EA = L0x555555561222; Value = 0x276d0198f85c6adf; PC = 0x555555556d69 *)
mov ymm1_0 L0x555555561222;
mov ymm1_1 L0x555555561222;
mov ymm1_2 L0x555555561222;
mov ymm1_3 L0x555555561222;
mov ymm1_4 L0x555555561222;
mov ymm1_5 L0x555555561222;
mov ymm1_6 L0x555555561222;
mov ymm1_7 L0x555555561222;
mov ymm1_8 L0x555555561222;
mov ymm1_9 L0x555555561222;
mov ymm1_a L0x555555561222;
mov ymm1_b L0x555555561222;
mov ymm1_c L0x555555561222;
mov ymm1_d L0x555555561222;
mov ymm1_e L0x555555561222;
mov ymm1_f L0x555555561222;
(* vpbroadcastw 0x302(%rdx),%ymm2                  #! EA = L0x555555561422; Value = 0x096df198105c00df; PC = 0x555555556d72 *)
mov ymm2_0 L0x555555561422;
mov ymm2_1 L0x555555561422;
mov ymm2_2 L0x555555561422;
mov ymm2_3 L0x555555561422;
mov ymm2_4 L0x555555561422;
mov ymm2_5 L0x555555561422;
mov ymm2_6 L0x555555561422;
mov ymm2_7 L0x555555561422;
mov ymm2_8 L0x555555561422;
mov ymm2_9 L0x555555561422;
mov ymm2_a L0x555555561422;
mov ymm2_b L0x555555561422;
mov ymm2_c L0x555555561422;
mov ymm2_d L0x555555561422;
mov ymm2_e L0x555555561422;
mov ymm2_f L0x555555561422;
(* vmovdqa 0x220(%rsi),%ymm6                       #! EA = L0x7fffffffcd00; Value = 0x0000000000000000; PC = 0x555555556d7b *)
mov ymm6_0 L0x7fffffffcd00;
mov ymm6_1 L0x7fffffffcd02;
mov ymm6_2 L0x7fffffffcd04;
mov ymm6_3 L0x7fffffffcd06;
mov ymm6_4 L0x7fffffffcd08;
mov ymm6_5 L0x7fffffffcd0a;
mov ymm6_6 L0x7fffffffcd0c;
mov ymm6_7 L0x7fffffffcd0e;
mov ymm6_8 L0x7fffffffcd10;
mov ymm6_9 L0x7fffffffcd12;
mov ymm6_a L0x7fffffffcd14;
mov ymm6_b L0x7fffffffcd16;
mov ymm6_c L0x7fffffffcd18;
mov ymm6_d L0x7fffffffcd1a;
mov ymm6_e L0x7fffffffcd1c;
mov ymm6_f L0x7fffffffcd1e;
(* vmovdqa 0x320(%rsi),%ymm7                       #! EA = L0x7fffffffce00; Value = 0x0000000000000000; PC = 0x555555556d83 *)
mov ymm7_0 L0x7fffffffce00;
mov ymm7_1 L0x7fffffffce02;
mov ymm7_2 L0x7fffffffce04;
mov ymm7_3 L0x7fffffffce06;
mov ymm7_4 L0x7fffffffce08;
mov ymm7_5 L0x7fffffffce0a;
mov ymm7_6 L0x7fffffffce0c;
mov ymm7_7 L0x7fffffffce0e;
mov ymm7_8 L0x7fffffffce10;
mov ymm7_9 L0x7fffffffce12;
mov ymm7_a L0x7fffffffce14;
mov ymm7_b L0x7fffffffce16;
mov ymm7_c L0x7fffffffce18;
mov ymm7_d L0x7fffffffce1a;
mov ymm7_e L0x7fffffffce1c;
mov ymm7_f L0x7fffffffce1e;
(* vpmullw %ymm1,%ymm6,%ymm3                       #! PC = 0x555555556d8b *)
smull mulHymm6_0 mulL_0 ymm1_0 ymm6_0;
smull mulHymm6_1 mulL_1 ymm1_1 ymm6_1;
smull mulHymm6_2 mulL_2 ymm1_2 ymm6_2;
smull mulHymm6_3 mulL_3 ymm1_3 ymm6_3;
smull mulHymm6_4 mulL_4 ymm1_4 ymm6_4;
smull mulHymm6_5 mulL_5 ymm1_5 ymm6_5;
smull mulHymm6_6 mulL_6 ymm1_6 ymm6_6;
smull mulHymm6_7 mulL_7 ymm1_7 ymm6_7;
smull mulHymm6_8 mulL_8 ymm1_8 ymm6_8;
smull mulHymm6_9 mulL_9 ymm1_9 ymm6_9;
smull mulHymm6_a mulL_a ymm1_a ymm6_a;
smull mulHymm6_b mulL_b ymm1_b ymm6_b;
smull mulHymm6_c mulL_c ymm1_c ymm6_c;
smull mulHymm6_d mulL_d ymm1_d ymm6_d;
smull mulHymm6_e mulL_e ymm1_e ymm6_e;
smull mulHymm6_f mulL_f ymm1_f ymm6_f;
cast ymm3_0@sint16 mulL_0;
cast ymm3_1@sint16 mulL_1;
cast ymm3_2@sint16 mulL_2;
cast ymm3_3@sint16 mulL_3;
cast ymm3_4@sint16 mulL_4;
cast ymm3_5@sint16 mulL_5;
cast ymm3_6@sint16 mulL_6;
cast ymm3_7@sint16 mulL_7;
cast ymm3_8@sint16 mulL_8;
cast ymm3_9@sint16 mulL_9;
cast ymm3_a@sint16 mulL_a;
cast ymm3_b@sint16 mulL_b;
cast ymm3_c@sint16 mulL_c;
cast ymm3_d@sint16 mulL_d;
cast ymm3_e@sint16 mulL_e;
cast ymm3_f@sint16 mulL_f;
(* vpmulhw %ymm2,%ymm6,%ymm10                      #! PC = 0x555555556d8f *)
smull mulH_0 mulLymm6_0 ymm6_0 ymm2_0;
smull mulH_1 mulLymm6_1 ymm6_1 ymm2_1;
smull mulH_2 mulLymm6_2 ymm6_2 ymm2_2;
smull mulH_3 mulLymm6_3 ymm6_3 ymm2_3;
smull mulH_4 mulLymm6_4 ymm6_4 ymm2_4;
smull mulH_5 mulLymm6_5 ymm6_5 ymm2_5;
smull mulH_6 mulLymm6_6 ymm6_6 ymm2_6;
smull mulH_7 mulLymm6_7 ymm6_7 ymm2_7;
smull mulH_8 mulLymm6_8 ymm6_8 ymm2_8;
smull mulH_9 mulLymm6_9 ymm6_9 ymm2_9;
smull mulH_a mulLymm6_a ymm6_a ymm2_a;
smull mulH_b mulLymm6_b ymm6_b ymm2_b;
smull mulH_c mulLymm6_c ymm6_c ymm2_c;
smull mulH_d mulLymm6_d ymm6_d ymm2_d;
smull mulH_e mulLymm6_e ymm6_e ymm2_e;
smull mulH_f mulLymm6_f ymm6_f ymm2_f;
mov ymm10_0 mulH_0;
mov ymm10_1 mulH_1;
mov ymm10_2 mulH_2;
mov ymm10_3 mulH_3;
mov ymm10_4 mulH_4;
mov ymm10_5 mulH_5;
mov ymm10_6 mulH_6;
mov ymm10_7 mulH_7;
mov ymm10_8 mulH_8;
mov ymm10_9 mulH_9;
mov ymm10_a mulH_a;
mov ymm10_b mulH_b;
mov ymm10_c mulH_c;
mov ymm10_d mulH_d;
mov ymm10_e mulH_e;
mov ymm10_f mulH_f;
(* vpmulhw %ymm0,%ymm3,%ymm3                       #! PC = 0x555555556d93 *)
smull mulH_0 red_0 ymm3_0 ymm0_0;
assert true && red_0 = mulLymm6_0;
assume red_0 = mulLymm6_0 && true;
smull mulH_1 red_1 ymm3_1 ymm0_1;
assert true && red_1 = mulLymm6_1;
assume red_1 = mulLymm6_1 && true;
smull mulH_2 red_2 ymm3_2 ymm0_2;
assert true && red_2 = mulLymm6_2;
assume red_2 = mulLymm6_2 && true;
smull mulH_3 red_3 ymm3_3 ymm0_3;
assert true && red_3 = mulLymm6_3;
assume red_3 = mulLymm6_3 && true;
smull mulH_4 red_4 ymm3_4 ymm0_4;
assert true && red_4 = mulLymm6_4;
assume red_4 = mulLymm6_4 && true;
smull mulH_5 red_5 ymm3_5 ymm0_5;
assert true && red_5 = mulLymm6_5;
assume red_5 = mulLymm6_5 && true;
smull mulH_6 red_6 ymm3_6 ymm0_6;
assert true && red_6 = mulLymm6_6;
assume red_6 = mulLymm6_6 && true;
smull mulH_7 red_7 ymm3_7 ymm0_7;
assert true && red_7 = mulLymm6_7;
assume red_7 = mulLymm6_7 && true;
smull mulH_8 red_8 ymm3_8 ymm0_8;
assert true && red_8 = mulLymm6_8;
assume red_8 = mulLymm6_8 && true;
smull mulH_9 red_9 ymm3_9 ymm0_9;
assert true && red_9 = mulLymm6_9;
assume red_9 = mulLymm6_9 && true;
smull mulH_a red_a ymm3_a ymm0_a;
assert true && red_a = mulLymm6_a;
assume red_a = mulLymm6_a && true;
smull mulH_b red_b ymm3_b ymm0_b;
assert true && red_b = mulLymm6_b;
assume red_b = mulLymm6_b && true;
smull mulH_c red_c ymm3_c ymm0_c;
assert true && red_c = mulLymm6_c;
assume red_c = mulLymm6_c && true;
smull mulH_d red_d ymm3_d ymm0_d;
assert true && red_d = mulLymm6_d;
assume red_d = mulLymm6_d && true;
smull mulH_e red_e ymm3_e ymm0_e;
assert true && red_e = mulLymm6_e;
assume red_e = mulLymm6_e && true;
smull mulH_f red_f ymm3_f ymm0_f;
assert true && red_f = mulLymm6_f;
assume red_f = mulLymm6_f && true;
mov ymm3_0 mulH_0;
mov ymm3_1 mulH_1;
mov ymm3_2 mulH_2;
mov ymm3_3 mulH_3;
mov ymm3_4 mulH_4;
mov ymm3_5 mulH_5;
mov ymm3_6 mulH_6;
mov ymm3_7 mulH_7;
mov ymm3_8 mulH_8;
mov ymm3_9 mulH_9;
mov ymm3_a mulH_a;
mov ymm3_b mulH_b;
mov ymm3_c mulH_c;
mov ymm3_d mulH_d;
mov ymm3_e mulH_e;
mov ymm3_f mulH_f;
(* vpsubw %ymm3,%ymm10,%ymm10                      #! PC = 0x555555556d97 *)
sub ymm10_0 ymm10_0 ymm3_0;
sub ymm10_1 ymm10_1 ymm3_1;
sub ymm10_2 ymm10_2 ymm3_2;
sub ymm10_3 ymm10_3 ymm3_3;
sub ymm10_4 ymm10_4 ymm3_4;
sub ymm10_5 ymm10_5 ymm3_5;
sub ymm10_6 ymm10_6 ymm3_6;
sub ymm10_7 ymm10_7 ymm3_7;
sub ymm10_8 ymm10_8 ymm3_8;
sub ymm10_9 ymm10_9 ymm3_9;
sub ymm10_a ymm10_a ymm3_a;
sub ymm10_b ymm10_b ymm3_b;
sub ymm10_c ymm10_c ymm3_c;
sub ymm10_d ymm10_d ymm3_d;
sub ymm10_e ymm10_e ymm3_e;
sub ymm10_f ymm10_f ymm3_f;
(* vpmullw %ymm1,%ymm7,%ymm3                       #! PC = 0x555555556d9b *)
smull mulHymm7_0 mulL_0 ymm1_0 ymm7_0;
smull mulHymm7_1 mulL_1 ymm1_1 ymm7_1;
smull mulHymm7_2 mulL_2 ymm1_2 ymm7_2;
smull mulHymm7_3 mulL_3 ymm1_3 ymm7_3;
smull mulHymm7_4 mulL_4 ymm1_4 ymm7_4;
smull mulHymm7_5 mulL_5 ymm1_5 ymm7_5;
smull mulHymm7_6 mulL_6 ymm1_6 ymm7_6;
smull mulHymm7_7 mulL_7 ymm1_7 ymm7_7;
smull mulHymm7_8 mulL_8 ymm1_8 ymm7_8;
smull mulHymm7_9 mulL_9 ymm1_9 ymm7_9;
smull mulHymm7_a mulL_a ymm1_a ymm7_a;
smull mulHymm7_b mulL_b ymm1_b ymm7_b;
smull mulHymm7_c mulL_c ymm1_c ymm7_c;
smull mulHymm7_d mulL_d ymm1_d ymm7_d;
smull mulHymm7_e mulL_e ymm1_e ymm7_e;
smull mulHymm7_f mulL_f ymm1_f ymm7_f;
cast ymm3_0@sint16 mulL_0;
cast ymm3_1@sint16 mulL_1;
cast ymm3_2@sint16 mulL_2;
cast ymm3_3@sint16 mulL_3;
cast ymm3_4@sint16 mulL_4;
cast ymm3_5@sint16 mulL_5;
cast ymm3_6@sint16 mulL_6;
cast ymm3_7@sint16 mulL_7;
cast ymm3_8@sint16 mulL_8;
cast ymm3_9@sint16 mulL_9;
cast ymm3_a@sint16 mulL_a;
cast ymm3_b@sint16 mulL_b;
cast ymm3_c@sint16 mulL_c;
cast ymm3_d@sint16 mulL_d;
cast ymm3_e@sint16 mulL_e;
cast ymm3_f@sint16 mulL_f;
(* vpmulhw %ymm2,%ymm7,%ymm11                      #! PC = 0x555555556d9f *)
smull mulH_0 mulLymm7_0 ymm7_0 ymm2_0;
smull mulH_1 mulLymm7_1 ymm7_1 ymm2_1;
smull mulH_2 mulLymm7_2 ymm7_2 ymm2_2;
smull mulH_3 mulLymm7_3 ymm7_3 ymm2_3;
smull mulH_4 mulLymm7_4 ymm7_4 ymm2_4;
smull mulH_5 mulLymm7_5 ymm7_5 ymm2_5;
smull mulH_6 mulLymm7_6 ymm7_6 ymm2_6;
smull mulH_7 mulLymm7_7 ymm7_7 ymm2_7;
smull mulH_8 mulLymm7_8 ymm7_8 ymm2_8;
smull mulH_9 mulLymm7_9 ymm7_9 ymm2_9;
smull mulH_a mulLymm7_a ymm7_a ymm2_a;
smull mulH_b mulLymm7_b ymm7_b ymm2_b;
smull mulH_c mulLymm7_c ymm7_c ymm2_c;
smull mulH_d mulLymm7_d ymm7_d ymm2_d;
smull mulH_e mulLymm7_e ymm7_e ymm2_e;
smull mulH_f mulLymm7_f ymm7_f ymm2_f;
mov ymm11_0 mulH_0;
mov ymm11_1 mulH_1;
mov ymm11_2 mulH_2;
mov ymm11_3 mulH_3;
mov ymm11_4 mulH_4;
mov ymm11_5 mulH_5;
mov ymm11_6 mulH_6;
mov ymm11_7 mulH_7;
mov ymm11_8 mulH_8;
mov ymm11_9 mulH_9;
mov ymm11_a mulH_a;
mov ymm11_b mulH_b;
mov ymm11_c mulH_c;
mov ymm11_d mulH_d;
mov ymm11_e mulH_e;
mov ymm11_f mulH_f;
(* vpmulhw %ymm0,%ymm3,%ymm3                       #! PC = 0x555555556da3 *)
smull mulH_0 red_0 ymm3_0 ymm0_0;
assert true && red_0 = mulLymm7_0;
assume red_0 = mulLymm7_0 && true;
smull mulH_1 red_1 ymm3_1 ymm0_1;
assert true && red_1 = mulLymm7_1;
assume red_1 = mulLymm7_1 && true;
smull mulH_2 red_2 ymm3_2 ymm0_2;
assert true && red_2 = mulLymm7_2;
assume red_2 = mulLymm7_2 && true;
smull mulH_3 red_3 ymm3_3 ymm0_3;
assert true && red_3 = mulLymm7_3;
assume red_3 = mulLymm7_3 && true;
smull mulH_4 red_4 ymm3_4 ymm0_4;
assert true && red_4 = mulLymm7_4;
assume red_4 = mulLymm7_4 && true;
smull mulH_5 red_5 ymm3_5 ymm0_5;
assert true && red_5 = mulLymm7_5;
assume red_5 = mulLymm7_5 && true;
smull mulH_6 red_6 ymm3_6 ymm0_6;
assert true && red_6 = mulLymm7_6;
assume red_6 = mulLymm7_6 && true;
smull mulH_7 red_7 ymm3_7 ymm0_7;
assert true && red_7 = mulLymm7_7;
assume red_7 = mulLymm7_7 && true;
smull mulH_8 red_8 ymm3_8 ymm0_8;
assert true && red_8 = mulLymm7_8;
assume red_8 = mulLymm7_8 && true;
smull mulH_9 red_9 ymm3_9 ymm0_9;
assert true && red_9 = mulLymm7_9;
assume red_9 = mulLymm7_9 && true;
smull mulH_a red_a ymm3_a ymm0_a;
assert true && red_a = mulLymm7_a;
assume red_a = mulLymm7_a && true;
smull mulH_b red_b ymm3_b ymm0_b;
assert true && red_b = mulLymm7_b;
assume red_b = mulLymm7_b && true;
smull mulH_c red_c ymm3_c ymm0_c;
assert true && red_c = mulLymm7_c;
assume red_c = mulLymm7_c && true;
smull mulH_d red_d ymm3_d ymm0_d;
assert true && red_d = mulLymm7_d;
assume red_d = mulLymm7_d && true;
smull mulH_e red_e ymm3_e ymm0_e;
assert true && red_e = mulLymm7_e;
assume red_e = mulLymm7_e && true;
smull mulH_f red_f ymm3_f ymm0_f;
assert true && red_f = mulLymm7_f;
assume red_f = mulLymm7_f && true;
mov ymm3_0 mulH_0;
mov ymm3_1 mulH_1;
mov ymm3_2 mulH_2;
mov ymm3_3 mulH_3;
mov ymm3_4 mulH_4;
mov ymm3_5 mulH_5;
mov ymm3_6 mulH_6;
mov ymm3_7 mulH_7;
mov ymm3_8 mulH_8;
mov ymm3_9 mulH_9;
mov ymm3_a mulH_a;
mov ymm3_b mulH_b;
mov ymm3_c mulH_c;
mov ymm3_d mulH_d;
mov ymm3_e mulH_e;
mov ymm3_f mulH_f;
(* vpsubw %ymm3,%ymm11,%ymm11                      #! PC = 0x555555556da7 *)
sub ymm11_0 ymm11_0 ymm3_0;
sub ymm11_1 ymm11_1 ymm3_1;
sub ymm11_2 ymm11_2 ymm3_2;
sub ymm11_3 ymm11_3 ymm3_3;
sub ymm11_4 ymm11_4 ymm3_4;
sub ymm11_5 ymm11_5 ymm3_5;
sub ymm11_6 ymm11_6 ymm3_6;
sub ymm11_7 ymm11_7 ymm3_7;
sub ymm11_8 ymm11_8 ymm3_8;
sub ymm11_9 ymm11_9 ymm3_9;
sub ymm11_a ymm11_a ymm3_a;
sub ymm11_b ymm11_b ymm3_b;
sub ymm11_c ymm11_c ymm3_c;
sub ymm11_d ymm11_d ymm3_d;
sub ymm11_e ymm11_e ymm3_e;
sub ymm11_f ymm11_f ymm3_f;
(* vmovdqa 0x20(%rsi),%ymm4                        #! EA = L0x7fffffffcb00; Value = 0x0000000000000000; PC = 0x555555556dab *)
mov ymm4_0 L0x7fffffffcb00;
mov ymm4_1 L0x7fffffffcb02;
mov ymm4_2 L0x7fffffffcb04;
mov ymm4_3 L0x7fffffffcb06;
mov ymm4_4 L0x7fffffffcb08;
mov ymm4_5 L0x7fffffffcb0a;
mov ymm4_6 L0x7fffffffcb0c;
mov ymm4_7 L0x7fffffffcb0e;
mov ymm4_8 L0x7fffffffcb10;
mov ymm4_9 L0x7fffffffcb12;
mov ymm4_a L0x7fffffffcb14;
mov ymm4_b L0x7fffffffcb16;
mov ymm4_c L0x7fffffffcb18;
mov ymm4_d L0x7fffffffcb1a;
mov ymm4_e L0x7fffffffcb1c;
mov ymm4_f L0x7fffffffcb1e;
(* vmovdqa 0x120(%rsi),%ymm5                       #! EA = L0x7fffffffcc00; Value = 0x0000000000000000; PC = 0x555555556db0 *)
mov ymm5_0 L0x7fffffffcc00;
mov ymm5_1 L0x7fffffffcc02;
mov ymm5_2 L0x7fffffffcc04;
mov ymm5_3 L0x7fffffffcc06;
mov ymm5_4 L0x7fffffffcc08;
mov ymm5_5 L0x7fffffffcc0a;
mov ymm5_6 L0x7fffffffcc0c;
mov ymm5_7 L0x7fffffffcc0e;
mov ymm5_8 L0x7fffffffcc10;
mov ymm5_9 L0x7fffffffcc12;
mov ymm5_a L0x7fffffffcc14;
mov ymm5_b L0x7fffffffcc16;
mov ymm5_c L0x7fffffffcc18;
mov ymm5_d L0x7fffffffcc1a;
mov ymm5_e L0x7fffffffcc1c;
mov ymm5_f L0x7fffffffcc1e;
(* vpaddw %ymm10,%ymm4,%ymm8                       #! PC = 0x555555556db8 *)
add ymm8_0 ymm4_0 ymm10_0;
add ymm8_1 ymm4_1 ymm10_1;
add ymm8_2 ymm4_2 ymm10_2;
add ymm8_3 ymm4_3 ymm10_3;
add ymm8_4 ymm4_4 ymm10_4;
add ymm8_5 ymm4_5 ymm10_5;
add ymm8_6 ymm4_6 ymm10_6;
add ymm8_7 ymm4_7 ymm10_7;
add ymm8_8 ymm4_8 ymm10_8;
add ymm8_9 ymm4_9 ymm10_9;
add ymm8_a ymm4_a ymm10_a;
add ymm8_b ymm4_b ymm10_b;
add ymm8_c ymm4_c ymm10_c;
add ymm8_d ymm4_d ymm10_d;
add ymm8_e ymm4_e ymm10_e;
add ymm8_f ymm4_f ymm10_f;
(* vpsubw %ymm10,%ymm4,%ymm10                      #! PC = 0x555555556dbd *)
sub ymm10_0 ymm4_0 ymm10_0;
sub ymm10_1 ymm4_1 ymm10_1;
sub ymm10_2 ymm4_2 ymm10_2;
sub ymm10_3 ymm4_3 ymm10_3;
sub ymm10_4 ymm4_4 ymm10_4;
sub ymm10_5 ymm4_5 ymm10_5;
sub ymm10_6 ymm4_6 ymm10_6;
sub ymm10_7 ymm4_7 ymm10_7;
sub ymm10_8 ymm4_8 ymm10_8;
sub ymm10_9 ymm4_9 ymm10_9;
sub ymm10_a ymm4_a ymm10_a;
sub ymm10_b ymm4_b ymm10_b;
sub ymm10_c ymm4_c ymm10_c;
sub ymm10_d ymm4_d ymm10_d;
sub ymm10_e ymm4_e ymm10_e;
sub ymm10_f ymm4_f ymm10_f;
(* vpaddw %ymm11,%ymm5,%ymm9                       #! PC = 0x555555556dc2 *)
add ymm9_0 ymm5_0 ymm11_0;
add ymm9_1 ymm5_1 ymm11_1;
add ymm9_2 ymm5_2 ymm11_2;
add ymm9_3 ymm5_3 ymm11_3;
add ymm9_4 ymm5_4 ymm11_4;
add ymm9_5 ymm5_5 ymm11_5;
add ymm9_6 ymm5_6 ymm11_6;
add ymm9_7 ymm5_7 ymm11_7;
add ymm9_8 ymm5_8 ymm11_8;
add ymm9_9 ymm5_9 ymm11_9;
add ymm9_a ymm5_a ymm11_a;
add ymm9_b ymm5_b ymm11_b;
add ymm9_c ymm5_c ymm11_c;
add ymm9_d ymm5_d ymm11_d;
add ymm9_e ymm5_e ymm11_e;
add ymm9_f ymm5_f ymm11_f;
(* vpsubw %ymm11,%ymm5,%ymm11                      #! PC = 0x555555556dc7 *)
sub ymm11_0 ymm5_0 ymm11_0;
sub ymm11_1 ymm5_1 ymm11_1;
sub ymm11_2 ymm5_2 ymm11_2;
sub ymm11_3 ymm5_3 ymm11_3;
sub ymm11_4 ymm5_4 ymm11_4;
sub ymm11_5 ymm5_5 ymm11_5;
sub ymm11_6 ymm5_6 ymm11_6;
sub ymm11_7 ymm5_7 ymm11_7;
sub ymm11_8 ymm5_8 ymm11_8;
sub ymm11_9 ymm5_9 ymm11_9;
sub ymm11_a ymm5_a ymm11_a;
sub ymm11_b ymm5_b ymm11_b;
sub ymm11_c ymm5_c ymm11_c;
sub ymm11_d ymm5_d ymm11_d;
sub ymm11_e ymm5_e ymm11_e;
sub ymm11_f ymm5_f ymm11_f;
(* vpaddw %ymm6,%ymm4,%ymm3                        #! PC = 0x555555556dcc *)
add ymm3_0 ymm4_0 ymm6_0;
add ymm3_1 ymm4_1 ymm6_1;
add ymm3_2 ymm4_2 ymm6_2;
add ymm3_3 ymm4_3 ymm6_3;
add ymm3_4 ymm4_4 ymm6_4;
add ymm3_5 ymm4_5 ymm6_5;
add ymm3_6 ymm4_6 ymm6_6;
add ymm3_7 ymm4_7 ymm6_7;
add ymm3_8 ymm4_8 ymm6_8;
add ymm3_9 ymm4_9 ymm6_9;
add ymm3_a ymm4_a ymm6_a;
add ymm3_b ymm4_b ymm6_b;
add ymm3_c ymm4_c ymm6_c;
add ymm3_d ymm4_d ymm6_d;
add ymm3_e ymm4_e ymm6_e;
add ymm3_f ymm4_f ymm6_f;
(* vpsubw %ymm6,%ymm4,%ymm6                        #! PC = 0x555555556dd0 *)
sub ymm6_0 ymm4_0 ymm6_0;
sub ymm6_1 ymm4_1 ymm6_1;
sub ymm6_2 ymm4_2 ymm6_2;
sub ymm6_3 ymm4_3 ymm6_3;
sub ymm6_4 ymm4_4 ymm6_4;
sub ymm6_5 ymm4_5 ymm6_5;
sub ymm6_6 ymm4_6 ymm6_6;
sub ymm6_7 ymm4_7 ymm6_7;
sub ymm6_8 ymm4_8 ymm6_8;
sub ymm6_9 ymm4_9 ymm6_9;
sub ymm6_a ymm4_a ymm6_a;
sub ymm6_b ymm4_b ymm6_b;
sub ymm6_c ymm4_c ymm6_c;
sub ymm6_d ymm4_d ymm6_d;
sub ymm6_e ymm4_e ymm6_e;
sub ymm6_f ymm4_f ymm6_f;
(* vpaddw %ymm7,%ymm5,%ymm4                        #! PC = 0x555555556dd4 *)
add ymm4_0 ymm5_0 ymm7_0;
add ymm4_1 ymm5_1 ymm7_1;
add ymm4_2 ymm5_2 ymm7_2;
add ymm4_3 ymm5_3 ymm7_3;
add ymm4_4 ymm5_4 ymm7_4;
add ymm4_5 ymm5_5 ymm7_5;
add ymm4_6 ymm5_6 ymm7_6;
add ymm4_7 ymm5_7 ymm7_7;
add ymm4_8 ymm5_8 ymm7_8;
add ymm4_9 ymm5_9 ymm7_9;
add ymm4_a ymm5_a ymm7_a;
add ymm4_b ymm5_b ymm7_b;
add ymm4_c ymm5_c ymm7_c;
add ymm4_d ymm5_d ymm7_d;
add ymm4_e ymm5_e ymm7_e;
add ymm4_f ymm5_f ymm7_f;
(* vpsubw %ymm7,%ymm5,%ymm7                        #! PC = 0x555555556dd8 *)
sub ymm7_0 ymm5_0 ymm7_0;
sub ymm7_1 ymm5_1 ymm7_1;
sub ymm7_2 ymm5_2 ymm7_2;
sub ymm7_3 ymm5_3 ymm7_3;
sub ymm7_4 ymm5_4 ymm7_4;
sub ymm7_5 ymm5_5 ymm7_5;
sub ymm7_6 ymm5_6 ymm7_6;
sub ymm7_7 ymm5_7 ymm7_7;
sub ymm7_8 ymm5_8 ymm7_8;
sub ymm7_9 ymm5_9 ymm7_9;
sub ymm7_a ymm5_a ymm7_a;
sub ymm7_b ymm5_b ymm7_b;
sub ymm7_c ymm5_c ymm7_c;
sub ymm7_d ymm5_d ymm7_d;
sub ymm7_e ymm5_e ymm7_e;
sub ymm7_f ymm5_f ymm7_f;
(* vpmullw %ymm1,%ymm7,%ymm5                       #! PC = 0x555555556ddc *)
smull mulHymm7_0 mulL_0 ymm1_0 ymm7_0;
smull mulHymm7_1 mulL_1 ymm1_1 ymm7_1;
smull mulHymm7_2 mulL_2 ymm1_2 ymm7_2;
smull mulHymm7_3 mulL_3 ymm1_3 ymm7_3;
smull mulHymm7_4 mulL_4 ymm1_4 ymm7_4;
smull mulHymm7_5 mulL_5 ymm1_5 ymm7_5;
smull mulHymm7_6 mulL_6 ymm1_6 ymm7_6;
smull mulHymm7_7 mulL_7 ymm1_7 ymm7_7;
smull mulHymm7_8 mulL_8 ymm1_8 ymm7_8;
smull mulHymm7_9 mulL_9 ymm1_9 ymm7_9;
smull mulHymm7_a mulL_a ymm1_a ymm7_a;
smull mulHymm7_b mulL_b ymm1_b ymm7_b;
smull mulHymm7_c mulL_c ymm1_c ymm7_c;
smull mulHymm7_d mulL_d ymm1_d ymm7_d;
smull mulHymm7_e mulL_e ymm1_e ymm7_e;
smull mulHymm7_f mulL_f ymm1_f ymm7_f;
cast ymm5_0@sint16 mulL_0;
cast ymm5_1@sint16 mulL_1;
cast ymm5_2@sint16 mulL_2;
cast ymm5_3@sint16 mulL_3;
cast ymm5_4@sint16 mulL_4;
cast ymm5_5@sint16 mulL_5;
cast ymm5_6@sint16 mulL_6;
cast ymm5_7@sint16 mulL_7;
cast ymm5_8@sint16 mulL_8;
cast ymm5_9@sint16 mulL_9;
cast ymm5_a@sint16 mulL_a;
cast ymm5_b@sint16 mulL_b;
cast ymm5_c@sint16 mulL_c;
cast ymm5_d@sint16 mulL_d;
cast ymm5_e@sint16 mulL_e;
cast ymm5_f@sint16 mulL_f;
(* vpmulhw %ymm2,%ymm7,%ymm7                       #! PC = 0x555555556de0 *)
smull mulH_0 mulLymm7_0 ymm7_0 ymm2_0;
smull mulH_1 mulLymm7_1 ymm7_1 ymm2_1;
smull mulH_2 mulLymm7_2 ymm7_2 ymm2_2;
smull mulH_3 mulLymm7_3 ymm7_3 ymm2_3;
smull mulH_4 mulLymm7_4 ymm7_4 ymm2_4;
smull mulH_5 mulLymm7_5 ymm7_5 ymm2_5;
smull mulH_6 mulLymm7_6 ymm7_6 ymm2_6;
smull mulH_7 mulLymm7_7 ymm7_7 ymm2_7;
smull mulH_8 mulLymm7_8 ymm7_8 ymm2_8;
smull mulH_9 mulLymm7_9 ymm7_9 ymm2_9;
smull mulH_a mulLymm7_a ymm7_a ymm2_a;
smull mulH_b mulLymm7_b ymm7_b ymm2_b;
smull mulH_c mulLymm7_c ymm7_c ymm2_c;
smull mulH_d mulLymm7_d ymm7_d ymm2_d;
smull mulH_e mulLymm7_e ymm7_e ymm2_e;
smull mulH_f mulLymm7_f ymm7_f ymm2_f;
mov ymm7_0 mulH_0;
mov ymm7_1 mulH_1;
mov ymm7_2 mulH_2;
mov ymm7_3 mulH_3;
mov ymm7_4 mulH_4;
mov ymm7_5 mulH_5;
mov ymm7_6 mulH_6;
mov ymm7_7 mulH_7;
mov ymm7_8 mulH_8;
mov ymm7_9 mulH_9;
mov ymm7_a mulH_a;
mov ymm7_b mulH_b;
mov ymm7_c mulH_c;
mov ymm7_d mulH_d;
mov ymm7_e mulH_e;
mov ymm7_f mulH_f;
(* vpmulhw %ymm0,%ymm5,%ymm5                       #! PC = 0x555555556de4 *)
smull mulH_0 red_0 ymm5_0 ymm0_0;
assert true && red_0 = mulLymm7_0;
assume red_0 = mulLymm7_0 && true;
smull mulH_1 red_1 ymm5_1 ymm0_1;
assert true && red_1 = mulLymm7_1;
assume red_1 = mulLymm7_1 && true;
smull mulH_2 red_2 ymm5_2 ymm0_2;
assert true && red_2 = mulLymm7_2;
assume red_2 = mulLymm7_2 && true;
smull mulH_3 red_3 ymm5_3 ymm0_3;
assert true && red_3 = mulLymm7_3;
assume red_3 = mulLymm7_3 && true;
smull mulH_4 red_4 ymm5_4 ymm0_4;
assert true && red_4 = mulLymm7_4;
assume red_4 = mulLymm7_4 && true;
smull mulH_5 red_5 ymm5_5 ymm0_5;
assert true && red_5 = mulLymm7_5;
assume red_5 = mulLymm7_5 && true;
smull mulH_6 red_6 ymm5_6 ymm0_6;
assert true && red_6 = mulLymm7_6;
assume red_6 = mulLymm7_6 && true;
smull mulH_7 red_7 ymm5_7 ymm0_7;
assert true && red_7 = mulLymm7_7;
assume red_7 = mulLymm7_7 && true;
smull mulH_8 red_8 ymm5_8 ymm0_8;
assert true && red_8 = mulLymm7_8;
assume red_8 = mulLymm7_8 && true;
smull mulH_9 red_9 ymm5_9 ymm0_9;
assert true && red_9 = mulLymm7_9;
assume red_9 = mulLymm7_9 && true;
smull mulH_a red_a ymm5_a ymm0_a;
assert true && red_a = mulLymm7_a;
assume red_a = mulLymm7_a && true;
smull mulH_b red_b ymm5_b ymm0_b;
assert true && red_b = mulLymm7_b;
assume red_b = mulLymm7_b && true;
smull mulH_c red_c ymm5_c ymm0_c;
assert true && red_c = mulLymm7_c;
assume red_c = mulLymm7_c && true;
smull mulH_d red_d ymm5_d ymm0_d;
assert true && red_d = mulLymm7_d;
assume red_d = mulLymm7_d && true;
smull mulH_e red_e ymm5_e ymm0_e;
assert true && red_e = mulLymm7_e;
assume red_e = mulLymm7_e && true;
smull mulH_f red_f ymm5_f ymm0_f;
assert true && red_f = mulLymm7_f;
assume red_f = mulLymm7_f && true;
mov ymm5_0 mulH_0;
mov ymm5_1 mulH_1;
mov ymm5_2 mulH_2;
mov ymm5_3 mulH_3;
mov ymm5_4 mulH_4;
mov ymm5_5 mulH_5;
mov ymm5_6 mulH_6;
mov ymm5_7 mulH_7;
mov ymm5_8 mulH_8;
mov ymm5_9 mulH_9;
mov ymm5_a mulH_a;
mov ymm5_b mulH_b;
mov ymm5_c mulH_c;
mov ymm5_d mulH_d;
mov ymm5_e mulH_e;
mov ymm5_f mulH_f;
(* vpsubw %ymm5,%ymm7,%ymm7                        #! PC = 0x555555556de8 *)
sub ymm7_0 ymm7_0 ymm5_0;
sub ymm7_1 ymm7_1 ymm5_1;
sub ymm7_2 ymm7_2 ymm5_2;
sub ymm7_3 ymm7_3 ymm5_3;
sub ymm7_4 ymm7_4 ymm5_4;
sub ymm7_5 ymm7_5 ymm5_5;
sub ymm7_6 ymm7_6 ymm5_6;
sub ymm7_7 ymm7_7 ymm5_7;
sub ymm7_8 ymm7_8 ymm5_8;
sub ymm7_9 ymm7_9 ymm5_9;
sub ymm7_a ymm7_a ymm5_a;
sub ymm7_b ymm7_b ymm5_b;
sub ymm7_c ymm7_c ymm5_c;
sub ymm7_d ymm7_d ymm5_d;
sub ymm7_e ymm7_e ymm5_e;
sub ymm7_f ymm7_f ymm5_f;
(* vpbroadcastw 0x104(%rdx),%ymm1                  #! EA = L0x555555561224; Value = 0xad9a276d0198f85c; PC = 0x555555556dec *)
mov ymm1_0 L0x555555561224;
mov ymm1_1 L0x555555561224;
mov ymm1_2 L0x555555561224;
mov ymm1_3 L0x555555561224;
mov ymm1_4 L0x555555561224;
mov ymm1_5 L0x555555561224;
mov ymm1_6 L0x555555561224;
mov ymm1_7 L0x555555561224;
mov ymm1_8 L0x555555561224;
mov ymm1_9 L0x555555561224;
mov ymm1_a L0x555555561224;
mov ymm1_b L0x555555561224;
mov ymm1_c L0x555555561224;
mov ymm1_d L0x555555561224;
mov ymm1_e L0x555555561224;
mov ymm1_f L0x555555561224;
(* vpbroadcastw 0x304(%rdx),%ymm2                  #! EA = L0x555555561424; Value = 0xf19a096df198105c; PC = 0x555555556df5 *)
mov ymm2_0 L0x555555561424;
mov ymm2_1 L0x555555561424;
mov ymm2_2 L0x555555561424;
mov ymm2_3 L0x555555561424;
mov ymm2_4 L0x555555561424;
mov ymm2_5 L0x555555561424;
mov ymm2_6 L0x555555561424;
mov ymm2_7 L0x555555561424;
mov ymm2_8 L0x555555561424;
mov ymm2_9 L0x555555561424;
mov ymm2_a L0x555555561424;
mov ymm2_b L0x555555561424;
mov ymm2_c L0x555555561424;
mov ymm2_d L0x555555561424;
mov ymm2_e L0x555555561424;
mov ymm2_f L0x555555561424;
(* vpmullw %ymm1,%ymm9,%ymm5                       #! PC = 0x555555556dfe *)
smull mulHymm9_0 mulL_0 ymm1_0 ymm9_0;
smull mulHymm9_1 mulL_1 ymm1_1 ymm9_1;
smull mulHymm9_2 mulL_2 ymm1_2 ymm9_2;
smull mulHymm9_3 mulL_3 ymm1_3 ymm9_3;
smull mulHymm9_4 mulL_4 ymm1_4 ymm9_4;
smull mulHymm9_5 mulL_5 ymm1_5 ymm9_5;
smull mulHymm9_6 mulL_6 ymm1_6 ymm9_6;
smull mulHymm9_7 mulL_7 ymm1_7 ymm9_7;
smull mulHymm9_8 mulL_8 ymm1_8 ymm9_8;
smull mulHymm9_9 mulL_9 ymm1_9 ymm9_9;
smull mulHymm9_a mulL_a ymm1_a ymm9_a;
smull mulHymm9_b mulL_b ymm1_b ymm9_b;
smull mulHymm9_c mulL_c ymm1_c ymm9_c;
smull mulHymm9_d mulL_d ymm1_d ymm9_d;
smull mulHymm9_e mulL_e ymm1_e ymm9_e;
smull mulHymm9_f mulL_f ymm1_f ymm9_f;
cast ymm5_0@sint16 mulL_0;
cast ymm5_1@sint16 mulL_1;
cast ymm5_2@sint16 mulL_2;
cast ymm5_3@sint16 mulL_3;
cast ymm5_4@sint16 mulL_4;
cast ymm5_5@sint16 mulL_5;
cast ymm5_6@sint16 mulL_6;
cast ymm5_7@sint16 mulL_7;
cast ymm5_8@sint16 mulL_8;
cast ymm5_9@sint16 mulL_9;
cast ymm5_a@sint16 mulL_a;
cast ymm5_b@sint16 mulL_b;
cast ymm5_c@sint16 mulL_c;
cast ymm5_d@sint16 mulL_d;
cast ymm5_e@sint16 mulL_e;
cast ymm5_f@sint16 mulL_f;
(* vpmulhw %ymm2,%ymm9,%ymm9                       #! PC = 0x555555556e02 *)
smull mulH_0 mulLymm9_0 ymm9_0 ymm2_0;
smull mulH_1 mulLymm9_1 ymm9_1 ymm2_1;
smull mulH_2 mulLymm9_2 ymm9_2 ymm2_2;
smull mulH_3 mulLymm9_3 ymm9_3 ymm2_3;
smull mulH_4 mulLymm9_4 ymm9_4 ymm2_4;
smull mulH_5 mulLymm9_5 ymm9_5 ymm2_5;
smull mulH_6 mulLymm9_6 ymm9_6 ymm2_6;
smull mulH_7 mulLymm9_7 ymm9_7 ymm2_7;
smull mulH_8 mulLymm9_8 ymm9_8 ymm2_8;
smull mulH_9 mulLymm9_9 ymm9_9 ymm2_9;
smull mulH_a mulLymm9_a ymm9_a ymm2_a;
smull mulH_b mulLymm9_b ymm9_b ymm2_b;
smull mulH_c mulLymm9_c ymm9_c ymm2_c;
smull mulH_d mulLymm9_d ymm9_d ymm2_d;
smull mulH_e mulLymm9_e ymm9_e ymm2_e;
smull mulH_f mulLymm9_f ymm9_f ymm2_f;
mov ymm9_0 mulH_0;
mov ymm9_1 mulH_1;
mov ymm9_2 mulH_2;
mov ymm9_3 mulH_3;
mov ymm9_4 mulH_4;
mov ymm9_5 mulH_5;
mov ymm9_6 mulH_6;
mov ymm9_7 mulH_7;
mov ymm9_8 mulH_8;
mov ymm9_9 mulH_9;
mov ymm9_a mulH_a;
mov ymm9_b mulH_b;
mov ymm9_c mulH_c;
mov ymm9_d mulH_d;
mov ymm9_e mulH_e;
mov ymm9_f mulH_f;
(* vpmulhw %ymm0,%ymm5,%ymm5                       #! PC = 0x555555556e06 *)
smull mulH_0 red_0 ymm5_0 ymm0_0;
assert true && red_0 = mulLymm9_0;
assume red_0 = mulLymm9_0 && true;
smull mulH_1 red_1 ymm5_1 ymm0_1;
assert true && red_1 = mulLymm9_1;
assume red_1 = mulLymm9_1 && true;
smull mulH_2 red_2 ymm5_2 ymm0_2;
assert true && red_2 = mulLymm9_2;
assume red_2 = mulLymm9_2 && true;
smull mulH_3 red_3 ymm5_3 ymm0_3;
assert true && red_3 = mulLymm9_3;
assume red_3 = mulLymm9_3 && true;
smull mulH_4 red_4 ymm5_4 ymm0_4;
assert true && red_4 = mulLymm9_4;
assume red_4 = mulLymm9_4 && true;
smull mulH_5 red_5 ymm5_5 ymm0_5;
assert true && red_5 = mulLymm9_5;
assume red_5 = mulLymm9_5 && true;
smull mulH_6 red_6 ymm5_6 ymm0_6;
assert true && red_6 = mulLymm9_6;
assume red_6 = mulLymm9_6 && true;
smull mulH_7 red_7 ymm5_7 ymm0_7;
assert true && red_7 = mulLymm9_7;
assume red_7 = mulLymm9_7 && true;
smull mulH_8 red_8 ymm5_8 ymm0_8;
assert true && red_8 = mulLymm9_8;
assume red_8 = mulLymm9_8 && true;
smull mulH_9 red_9 ymm5_9 ymm0_9;
assert true && red_9 = mulLymm9_9;
assume red_9 = mulLymm9_9 && true;
smull mulH_a red_a ymm5_a ymm0_a;
assert true && red_a = mulLymm9_a;
assume red_a = mulLymm9_a && true;
smull mulH_b red_b ymm5_b ymm0_b;
assert true && red_b = mulLymm9_b;
assume red_b = mulLymm9_b && true;
smull mulH_c red_c ymm5_c ymm0_c;
assert true && red_c = mulLymm9_c;
assume red_c = mulLymm9_c && true;
smull mulH_d red_d ymm5_d ymm0_d;
assert true && red_d = mulLymm9_d;
assume red_d = mulLymm9_d && true;
smull mulH_e red_e ymm5_e ymm0_e;
assert true && red_e = mulLymm9_e;
assume red_e = mulLymm9_e && true;
smull mulH_f red_f ymm5_f ymm0_f;
assert true && red_f = mulLymm9_f;
assume red_f = mulLymm9_f && true;
mov ymm5_0 mulH_0;
mov ymm5_1 mulH_1;
mov ymm5_2 mulH_2;
mov ymm5_3 mulH_3;
mov ymm5_4 mulH_4;
mov ymm5_5 mulH_5;
mov ymm5_6 mulH_6;
mov ymm5_7 mulH_7;
mov ymm5_8 mulH_8;
mov ymm5_9 mulH_9;
mov ymm5_a mulH_a;
mov ymm5_b mulH_b;
mov ymm5_c mulH_c;
mov ymm5_d mulH_d;
mov ymm5_e mulH_e;
mov ymm5_f mulH_f;
(* vpsubw %ymm5,%ymm9,%ymm9                        #! PC = 0x555555556e0a *)
sub ymm9_0 ymm9_0 ymm5_0;
sub ymm9_1 ymm9_1 ymm5_1;
sub ymm9_2 ymm9_2 ymm5_2;
sub ymm9_3 ymm9_3 ymm5_3;
sub ymm9_4 ymm9_4 ymm5_4;
sub ymm9_5 ymm9_5 ymm5_5;
sub ymm9_6 ymm9_6 ymm5_6;
sub ymm9_7 ymm9_7 ymm5_7;
sub ymm9_8 ymm9_8 ymm5_8;
sub ymm9_9 ymm9_9 ymm5_9;
sub ymm9_a ymm9_a ymm5_a;
sub ymm9_b ymm9_b ymm5_b;
sub ymm9_c ymm9_c ymm5_c;
sub ymm9_d ymm9_d ymm5_d;
sub ymm9_e ymm9_e ymm5_e;
sub ymm9_f ymm9_f ymm5_f;
(* vpbroadcastw 0x106(%rdx),%ymm1                  #! EA = L0x555555561226; Value = 0x6f65ad9a276d0198; PC = 0x555555556e0e *)
mov ymm1_0 L0x555555561226;
mov ymm1_1 L0x555555561226;
mov ymm1_2 L0x555555561226;
mov ymm1_3 L0x555555561226;
mov ymm1_4 L0x555555561226;
mov ymm1_5 L0x555555561226;
mov ymm1_6 L0x555555561226;
mov ymm1_7 L0x555555561226;
mov ymm1_8 L0x555555561226;
mov ymm1_9 L0x555555561226;
mov ymm1_a L0x555555561226;
mov ymm1_b L0x555555561226;
mov ymm1_c L0x555555561226;
mov ymm1_d L0x555555561226;
mov ymm1_e L0x555555561226;
mov ymm1_f L0x555555561226;
(* vpbroadcastw 0x306(%rdx),%ymm2                  #! EA = L0x555555561426; Value = 0x0165f19a096df198; PC = 0x555555556e17 *)
mov ymm2_0 L0x555555561426;
mov ymm2_1 L0x555555561426;
mov ymm2_2 L0x555555561426;
mov ymm2_3 L0x555555561426;
mov ymm2_4 L0x555555561426;
mov ymm2_5 L0x555555561426;
mov ymm2_6 L0x555555561426;
mov ymm2_7 L0x555555561426;
mov ymm2_8 L0x555555561426;
mov ymm2_9 L0x555555561426;
mov ymm2_a L0x555555561426;
mov ymm2_b L0x555555561426;
mov ymm2_c L0x555555561426;
mov ymm2_d L0x555555561426;
mov ymm2_e L0x555555561426;
mov ymm2_f L0x555555561426;
(* vpmullw %ymm1,%ymm11,%ymm5                      #! PC = 0x555555556e20 *)
smull mulHymm11_0 mulL_0 ymm1_0 ymm11_0;
smull mulHymm11_1 mulL_1 ymm1_1 ymm11_1;
smull mulHymm11_2 mulL_2 ymm1_2 ymm11_2;
smull mulHymm11_3 mulL_3 ymm1_3 ymm11_3;
smull mulHymm11_4 mulL_4 ymm1_4 ymm11_4;
smull mulHymm11_5 mulL_5 ymm1_5 ymm11_5;
smull mulHymm11_6 mulL_6 ymm1_6 ymm11_6;
smull mulHymm11_7 mulL_7 ymm1_7 ymm11_7;
smull mulHymm11_8 mulL_8 ymm1_8 ymm11_8;
smull mulHymm11_9 mulL_9 ymm1_9 ymm11_9;
smull mulHymm11_a mulL_a ymm1_a ymm11_a;
smull mulHymm11_b mulL_b ymm1_b ymm11_b;
smull mulHymm11_c mulL_c ymm1_c ymm11_c;
smull mulHymm11_d mulL_d ymm1_d ymm11_d;
smull mulHymm11_e mulL_e ymm1_e ymm11_e;
smull mulHymm11_f mulL_f ymm1_f ymm11_f;
cast ymm5_0@sint16 mulL_0;
cast ymm5_1@sint16 mulL_1;
cast ymm5_2@sint16 mulL_2;
cast ymm5_3@sint16 mulL_3;
cast ymm5_4@sint16 mulL_4;
cast ymm5_5@sint16 mulL_5;
cast ymm5_6@sint16 mulL_6;
cast ymm5_7@sint16 mulL_7;
cast ymm5_8@sint16 mulL_8;
cast ymm5_9@sint16 mulL_9;
cast ymm5_a@sint16 mulL_a;
cast ymm5_b@sint16 mulL_b;
cast ymm5_c@sint16 mulL_c;
cast ymm5_d@sint16 mulL_d;
cast ymm5_e@sint16 mulL_e;
cast ymm5_f@sint16 mulL_f;
(* vpmulhw %ymm2,%ymm11,%ymm11                     #! PC = 0x555555556e24 *)
smull mulH_0 mulLymm11_0 ymm11_0 ymm2_0;
smull mulH_1 mulLymm11_1 ymm11_1 ymm2_1;
smull mulH_2 mulLymm11_2 ymm11_2 ymm2_2;
smull mulH_3 mulLymm11_3 ymm11_3 ymm2_3;
smull mulH_4 mulLymm11_4 ymm11_4 ymm2_4;
smull mulH_5 mulLymm11_5 ymm11_5 ymm2_5;
smull mulH_6 mulLymm11_6 ymm11_6 ymm2_6;
smull mulH_7 mulLymm11_7 ymm11_7 ymm2_7;
smull mulH_8 mulLymm11_8 ymm11_8 ymm2_8;
smull mulH_9 mulLymm11_9 ymm11_9 ymm2_9;
smull mulH_a mulLymm11_a ymm11_a ymm2_a;
smull mulH_b mulLymm11_b ymm11_b ymm2_b;
smull mulH_c mulLymm11_c ymm11_c ymm2_c;
smull mulH_d mulLymm11_d ymm11_d ymm2_d;
smull mulH_e mulLymm11_e ymm11_e ymm2_e;
smull mulH_f mulLymm11_f ymm11_f ymm2_f;
mov ymm11_0 mulH_0;
mov ymm11_1 mulH_1;
mov ymm11_2 mulH_2;
mov ymm11_3 mulH_3;
mov ymm11_4 mulH_4;
mov ymm11_5 mulH_5;
mov ymm11_6 mulH_6;
mov ymm11_7 mulH_7;
mov ymm11_8 mulH_8;
mov ymm11_9 mulH_9;
mov ymm11_a mulH_a;
mov ymm11_b mulH_b;
mov ymm11_c mulH_c;
mov ymm11_d mulH_d;
mov ymm11_e mulH_e;
mov ymm11_f mulH_f;
(* vpmulhw %ymm0,%ymm5,%ymm5                       #! PC = 0x555555556e28 *)
smull mulH_0 red_0 ymm5_0 ymm0_0;
assert true && red_0 = mulLymm11_0;
assume red_0 = mulLymm11_0 && true;
smull mulH_1 red_1 ymm5_1 ymm0_1;
assert true && red_1 = mulLymm11_1;
assume red_1 = mulLymm11_1 && true;
smull mulH_2 red_2 ymm5_2 ymm0_2;
assert true && red_2 = mulLymm11_2;
assume red_2 = mulLymm11_2 && true;
smull mulH_3 red_3 ymm5_3 ymm0_3;
assert true && red_3 = mulLymm11_3;
assume red_3 = mulLymm11_3 && true;
smull mulH_4 red_4 ymm5_4 ymm0_4;
assert true && red_4 = mulLymm11_4;
assume red_4 = mulLymm11_4 && true;
smull mulH_5 red_5 ymm5_5 ymm0_5;
assert true && red_5 = mulLymm11_5;
assume red_5 = mulLymm11_5 && true;
smull mulH_6 red_6 ymm5_6 ymm0_6;
assert true && red_6 = mulLymm11_6;
assume red_6 = mulLymm11_6 && true;
smull mulH_7 red_7 ymm5_7 ymm0_7;
assert true && red_7 = mulLymm11_7;
assume red_7 = mulLymm11_7 && true;
smull mulH_8 red_8 ymm5_8 ymm0_8;
assert true && red_8 = mulLymm11_8;
assume red_8 = mulLymm11_8 && true;
smull mulH_9 red_9 ymm5_9 ymm0_9;
assert true && red_9 = mulLymm11_9;
assume red_9 = mulLymm11_9 && true;
smull mulH_a red_a ymm5_a ymm0_a;
assert true && red_a = mulLymm11_a;
assume red_a = mulLymm11_a && true;
smull mulH_b red_b ymm5_b ymm0_b;
assert true && red_b = mulLymm11_b;
assume red_b = mulLymm11_b && true;
smull mulH_c red_c ymm5_c ymm0_c;
assert true && red_c = mulLymm11_c;
assume red_c = mulLymm11_c && true;
smull mulH_d red_d ymm5_d ymm0_d;
assert true && red_d = mulLymm11_d;
assume red_d = mulLymm11_d && true;
smull mulH_e red_e ymm5_e ymm0_e;
assert true && red_e = mulLymm11_e;
assume red_e = mulLymm11_e && true;
smull mulH_f red_f ymm5_f ymm0_f;
assert true && red_f = mulLymm11_f;
assume red_f = mulLymm11_f && true;
mov ymm5_0 mulH_0;
mov ymm5_1 mulH_1;
mov ymm5_2 mulH_2;
mov ymm5_3 mulH_3;
mov ymm5_4 mulH_4;
mov ymm5_5 mulH_5;
mov ymm5_6 mulH_6;
mov ymm5_7 mulH_7;
mov ymm5_8 mulH_8;
mov ymm5_9 mulH_9;
mov ymm5_a mulH_a;
mov ymm5_b mulH_b;
mov ymm5_c mulH_c;
mov ymm5_d mulH_d;
mov ymm5_e mulH_e;
mov ymm5_f mulH_f;
(* vpsubw %ymm5,%ymm11,%ymm11                      #! PC = 0x555555556e2c *)
sub ymm11_0 ymm11_0 ymm5_0;
sub ymm11_1 ymm11_1 ymm5_1;
sub ymm11_2 ymm11_2 ymm5_2;
sub ymm11_3 ymm11_3 ymm5_3;
sub ymm11_4 ymm11_4 ymm5_4;
sub ymm11_5 ymm11_5 ymm5_5;
sub ymm11_6 ymm11_6 ymm5_6;
sub ymm11_7 ymm11_7 ymm5_7;
sub ymm11_8 ymm11_8 ymm5_8;
sub ymm11_9 ymm11_9 ymm5_9;
sub ymm11_a ymm11_a ymm5_a;
sub ymm11_b ymm11_b ymm5_b;
sub ymm11_c ymm11_c ymm5_c;
sub ymm11_d ymm11_d ymm5_d;
sub ymm11_e ymm11_e ymm5_e;
sub ymm11_f ymm11_f ymm5_f;
(* vpaddw %ymm4,%ymm3,%ymm5                        #! PC = 0x555555556e30 *)
add ymm5_0 ymm3_0 ymm4_0;
add ymm5_1 ymm3_1 ymm4_1;
add ymm5_2 ymm3_2 ymm4_2;
add ymm5_3 ymm3_3 ymm4_3;
add ymm5_4 ymm3_4 ymm4_4;
add ymm5_5 ymm3_5 ymm4_5;
add ymm5_6 ymm3_6 ymm4_6;
add ymm5_7 ymm3_7 ymm4_7;
add ymm5_8 ymm3_8 ymm4_8;
add ymm5_9 ymm3_9 ymm4_9;
add ymm5_a ymm3_a ymm4_a;
add ymm5_b ymm3_b ymm4_b;
add ymm5_c ymm3_c ymm4_c;
add ymm5_d ymm3_d ymm4_d;
add ymm5_e ymm3_e ymm4_e;
add ymm5_f ymm3_f ymm4_f;
(* vpsubw %ymm4,%ymm3,%ymm4                        #! PC = 0x555555556e34 *)
sub ymm4_0 ymm3_0 ymm4_0;
sub ymm4_1 ymm3_1 ymm4_1;
sub ymm4_2 ymm3_2 ymm4_2;
sub ymm4_3 ymm3_3 ymm4_3;
sub ymm4_4 ymm3_4 ymm4_4;
sub ymm4_5 ymm3_5 ymm4_5;
sub ymm4_6 ymm3_6 ymm4_6;
sub ymm4_7 ymm3_7 ymm4_7;
sub ymm4_8 ymm3_8 ymm4_8;
sub ymm4_9 ymm3_9 ymm4_9;
sub ymm4_a ymm3_a ymm4_a;
sub ymm4_b ymm3_b ymm4_b;
sub ymm4_c ymm3_c ymm4_c;
sub ymm4_d ymm3_d ymm4_d;
sub ymm4_e ymm3_e ymm4_e;
sub ymm4_f ymm3_f ymm4_f;
(* vpaddw %ymm7,%ymm6,%ymm3                        #! PC = 0x555555556e38 *)
add ymm3_0 ymm6_0 ymm7_0;
add ymm3_1 ymm6_1 ymm7_1;
add ymm3_2 ymm6_2 ymm7_2;
add ymm3_3 ymm6_3 ymm7_3;
add ymm3_4 ymm6_4 ymm7_4;
add ymm3_5 ymm6_5 ymm7_5;
add ymm3_6 ymm6_6 ymm7_6;
add ymm3_7 ymm6_7 ymm7_7;
add ymm3_8 ymm6_8 ymm7_8;
add ymm3_9 ymm6_9 ymm7_9;
add ymm3_a ymm6_a ymm7_a;
add ymm3_b ymm6_b ymm7_b;
add ymm3_c ymm6_c ymm7_c;
add ymm3_d ymm6_d ymm7_d;
add ymm3_e ymm6_e ymm7_e;
add ymm3_f ymm6_f ymm7_f;
(* vpsubw %ymm7,%ymm6,%ymm7                        #! PC = 0x555555556e3c *)
sub ymm7_0 ymm6_0 ymm7_0;
sub ymm7_1 ymm6_1 ymm7_1;
sub ymm7_2 ymm6_2 ymm7_2;
sub ymm7_3 ymm6_3 ymm7_3;
sub ymm7_4 ymm6_4 ymm7_4;
sub ymm7_5 ymm6_5 ymm7_5;
sub ymm7_6 ymm6_6 ymm7_6;
sub ymm7_7 ymm6_7 ymm7_7;
sub ymm7_8 ymm6_8 ymm7_8;
sub ymm7_9 ymm6_9 ymm7_9;
sub ymm7_a ymm6_a ymm7_a;
sub ymm7_b ymm6_b ymm7_b;
sub ymm7_c ymm6_c ymm7_c;
sub ymm7_d ymm6_d ymm7_d;
sub ymm7_e ymm6_e ymm7_e;
sub ymm7_f ymm6_f ymm7_f;
(* vpaddw %ymm9,%ymm8,%ymm6                        #! PC = 0x555555556e40 *)
add ymm6_0 ymm8_0 ymm9_0;
add ymm6_1 ymm8_1 ymm9_1;
add ymm6_2 ymm8_2 ymm9_2;
add ymm6_3 ymm8_3 ymm9_3;
add ymm6_4 ymm8_4 ymm9_4;
add ymm6_5 ymm8_5 ymm9_5;
add ymm6_6 ymm8_6 ymm9_6;
add ymm6_7 ymm8_7 ymm9_7;
add ymm6_8 ymm8_8 ymm9_8;
add ymm6_9 ymm8_9 ymm9_9;
add ymm6_a ymm8_a ymm9_a;
add ymm6_b ymm8_b ymm9_b;
add ymm6_c ymm8_c ymm9_c;
add ymm6_d ymm8_d ymm9_d;
add ymm6_e ymm8_e ymm9_e;
add ymm6_f ymm8_f ymm9_f;
(* vpsubw %ymm9,%ymm8,%ymm9                        #! PC = 0x555555556e45 *)
sub ymm9_0 ymm8_0 ymm9_0;
sub ymm9_1 ymm8_1 ymm9_1;
sub ymm9_2 ymm8_2 ymm9_2;
sub ymm9_3 ymm8_3 ymm9_3;
sub ymm9_4 ymm8_4 ymm9_4;
sub ymm9_5 ymm8_5 ymm9_5;
sub ymm9_6 ymm8_6 ymm9_6;
sub ymm9_7 ymm8_7 ymm9_7;
sub ymm9_8 ymm8_8 ymm9_8;
sub ymm9_9 ymm8_9 ymm9_9;
sub ymm9_a ymm8_a ymm9_a;
sub ymm9_b ymm8_b ymm9_b;
sub ymm9_c ymm8_c ymm9_c;
sub ymm9_d ymm8_d ymm9_d;
sub ymm9_e ymm8_e ymm9_e;
sub ymm9_f ymm8_f ymm9_f;
(* vpaddw %ymm11,%ymm10,%ymm8                      #! PC = 0x555555556e4a *)
add ymm8_0 ymm10_0 ymm11_0;
add ymm8_1 ymm10_1 ymm11_1;
add ymm8_2 ymm10_2 ymm11_2;
add ymm8_3 ymm10_3 ymm11_3;
add ymm8_4 ymm10_4 ymm11_4;
add ymm8_5 ymm10_5 ymm11_5;
add ymm8_6 ymm10_6 ymm11_6;
add ymm8_7 ymm10_7 ymm11_7;
add ymm8_8 ymm10_8 ymm11_8;
add ymm8_9 ymm10_9 ymm11_9;
add ymm8_a ymm10_a ymm11_a;
add ymm8_b ymm10_b ymm11_b;
add ymm8_c ymm10_c ymm11_c;
add ymm8_d ymm10_d ymm11_d;
add ymm8_e ymm10_e ymm11_e;
add ymm8_f ymm10_f ymm11_f;
(* vpsubw %ymm11,%ymm10,%ymm11                     #! PC = 0x555555556e4f *)
sub ymm11_0 ymm10_0 ymm11_0;
sub ymm11_1 ymm10_1 ymm11_1;
sub ymm11_2 ymm10_2 ymm11_2;
sub ymm11_3 ymm10_3 ymm11_3;
sub ymm11_4 ymm10_4 ymm11_4;
sub ymm11_5 ymm10_5 ymm11_5;
sub ymm11_6 ymm10_6 ymm11_6;
sub ymm11_7 ymm10_7 ymm11_7;
sub ymm11_8 ymm10_8 ymm11_8;
sub ymm11_9 ymm10_9 ymm11_9;
sub ymm11_a ymm10_a ymm11_a;
sub ymm11_b ymm10_b ymm11_b;
sub ymm11_c ymm10_c ymm11_c;
sub ymm11_d ymm10_d ymm11_d;
sub ymm11_e ymm10_e ymm11_e;
sub ymm11_f ymm10_f ymm11_f;
(* vmovdqa %ymm5,0x20(%rdi)                        #! EA = L0x7fffffffd300; PC = 0x555555556e54 *)
mov L0x7fffffffd300 ymm5_0;
mov L0x7fffffffd302 ymm5_1;
mov L0x7fffffffd304 ymm5_2;
mov L0x7fffffffd306 ymm5_3;
mov L0x7fffffffd308 ymm5_4;
mov L0x7fffffffd30a ymm5_5;
mov L0x7fffffffd30c ymm5_6;
mov L0x7fffffffd30e ymm5_7;
mov L0x7fffffffd310 ymm5_8;
mov L0x7fffffffd312 ymm5_9;
mov L0x7fffffffd314 ymm5_a;
mov L0x7fffffffd316 ymm5_b;
mov L0x7fffffffd318 ymm5_c;
mov L0x7fffffffd31a ymm5_d;
mov L0x7fffffffd31c ymm5_e;
mov L0x7fffffffd31e ymm5_f;
(* vmovdqa %ymm4,0x120(%rdi)                       #! EA = L0x7fffffffd400; PC = 0x555555556e59 *)
mov L0x7fffffffd400 ymm4_0;
mov L0x7fffffffd402 ymm4_1;
mov L0x7fffffffd404 ymm4_2;
mov L0x7fffffffd406 ymm4_3;
mov L0x7fffffffd408 ymm4_4;
mov L0x7fffffffd40a ymm4_5;
mov L0x7fffffffd40c ymm4_6;
mov L0x7fffffffd40e ymm4_7;
mov L0x7fffffffd410 ymm4_8;
mov L0x7fffffffd412 ymm4_9;
mov L0x7fffffffd414 ymm4_a;
mov L0x7fffffffd416 ymm4_b;
mov L0x7fffffffd418 ymm4_c;
mov L0x7fffffffd41a ymm4_d;
mov L0x7fffffffd41c ymm4_e;
mov L0x7fffffffd41e ymm4_f;
(* vmovdqa %ymm3,0x220(%rdi)                       #! EA = L0x7fffffffd500; PC = 0x555555556e61 *)
mov L0x7fffffffd500 ymm3_0;
mov L0x7fffffffd502 ymm3_1;
mov L0x7fffffffd504 ymm3_2;
mov L0x7fffffffd506 ymm3_3;
mov L0x7fffffffd508 ymm3_4;
mov L0x7fffffffd50a ymm3_5;
mov L0x7fffffffd50c ymm3_6;
mov L0x7fffffffd50e ymm3_7;
mov L0x7fffffffd510 ymm3_8;
mov L0x7fffffffd512 ymm3_9;
mov L0x7fffffffd514 ymm3_a;
mov L0x7fffffffd516 ymm3_b;
mov L0x7fffffffd518 ymm3_c;
mov L0x7fffffffd51a ymm3_d;
mov L0x7fffffffd51c ymm3_e;
mov L0x7fffffffd51e ymm3_f;
(* vmovdqa %ymm7,0x320(%rdi)                       #! EA = L0x7fffffffd600; PC = 0x555555556e69 *)
mov L0x7fffffffd600 ymm7_0;
mov L0x7fffffffd602 ymm7_1;
mov L0x7fffffffd604 ymm7_2;
mov L0x7fffffffd606 ymm7_3;
mov L0x7fffffffd608 ymm7_4;
mov L0x7fffffffd60a ymm7_5;
mov L0x7fffffffd60c ymm7_6;
mov L0x7fffffffd60e ymm7_7;
mov L0x7fffffffd610 ymm7_8;
mov L0x7fffffffd612 ymm7_9;
mov L0x7fffffffd614 ymm7_a;
mov L0x7fffffffd616 ymm7_b;
mov L0x7fffffffd618 ymm7_c;
mov L0x7fffffffd61a ymm7_d;
mov L0x7fffffffd61c ymm7_e;
mov L0x7fffffffd61e ymm7_f;
(* vmovdqa %ymm6,0x420(%rdi)                       #! EA = L0x7fffffffd700; PC = 0x555555556e71 *)
mov L0x7fffffffd700 ymm6_0;
mov L0x7fffffffd702 ymm6_1;
mov L0x7fffffffd704 ymm6_2;
mov L0x7fffffffd706 ymm6_3;
mov L0x7fffffffd708 ymm6_4;
mov L0x7fffffffd70a ymm6_5;
mov L0x7fffffffd70c ymm6_6;
mov L0x7fffffffd70e ymm6_7;
mov L0x7fffffffd710 ymm6_8;
mov L0x7fffffffd712 ymm6_9;
mov L0x7fffffffd714 ymm6_a;
mov L0x7fffffffd716 ymm6_b;
mov L0x7fffffffd718 ymm6_c;
mov L0x7fffffffd71a ymm6_d;
mov L0x7fffffffd71c ymm6_e;
mov L0x7fffffffd71e ymm6_f;
(* vmovdqa %ymm9,0x520(%rdi)                       #! EA = L0x7fffffffd800; PC = 0x555555556e79 *)
mov L0x7fffffffd800 ymm9_0;
mov L0x7fffffffd802 ymm9_1;
mov L0x7fffffffd804 ymm9_2;
mov L0x7fffffffd806 ymm9_3;
mov L0x7fffffffd808 ymm9_4;
mov L0x7fffffffd80a ymm9_5;
mov L0x7fffffffd80c ymm9_6;
mov L0x7fffffffd80e ymm9_7;
mov L0x7fffffffd810 ymm9_8;
mov L0x7fffffffd812 ymm9_9;
mov L0x7fffffffd814 ymm9_a;
mov L0x7fffffffd816 ymm9_b;
mov L0x7fffffffd818 ymm9_c;
mov L0x7fffffffd81a ymm9_d;
mov L0x7fffffffd81c ymm9_e;
mov L0x7fffffffd81e ymm9_f;
(* vmovdqa %ymm8,0x620(%rdi)                       #! EA = L0x7fffffffd900; PC = 0x555555556e81 *)
mov L0x7fffffffd900 ymm8_0;
mov L0x7fffffffd902 ymm8_1;
mov L0x7fffffffd904 ymm8_2;
mov L0x7fffffffd906 ymm8_3;
mov L0x7fffffffd908 ymm8_4;
mov L0x7fffffffd90a ymm8_5;
mov L0x7fffffffd90c ymm8_6;
mov L0x7fffffffd90e ymm8_7;
mov L0x7fffffffd910 ymm8_8;
mov L0x7fffffffd912 ymm8_9;
mov L0x7fffffffd914 ymm8_a;
mov L0x7fffffffd916 ymm8_b;
mov L0x7fffffffd918 ymm8_c;
mov L0x7fffffffd91a ymm8_d;
mov L0x7fffffffd91c ymm8_e;
mov L0x7fffffffd91e ymm8_f;
(* vmovdqa %ymm11,0x720(%rdi)                      #! EA = L0x7fffffffda00; PC = 0x555555556e89 *)
mov L0x7fffffffda00 ymm11_0;
mov L0x7fffffffda02 ymm11_1;
mov L0x7fffffffda04 ymm11_2;
mov L0x7fffffffda06 ymm11_3;
mov L0x7fffffffda08 ymm11_4;
mov L0x7fffffffda0a ymm11_5;
mov L0x7fffffffda0c ymm11_6;
mov L0x7fffffffda0e ymm11_7;
mov L0x7fffffffda10 ymm11_8;
mov L0x7fffffffda12 ymm11_9;
mov L0x7fffffffda14 ymm11_a;
mov L0x7fffffffda16 ymm11_b;
mov L0x7fffffffda18 ymm11_c;
mov L0x7fffffffda1a ymm11_d;
mov L0x7fffffffda1c ymm11_e;
mov L0x7fffffffda1e ymm11_f;


(**************** LEVELS 0-2, 1 *****************)


(**************** CUT  19,  0 *****************)

ecut 
  and [
eqmod (c010*x** 16+c011*x** 17+c012*x** 18+c013*x** 19+
       c014*x** 20+c015*x** 21+c016*x** 22+c017*x** 23+
       c018*x** 24+c019*x** 25+c01a*x** 26+c01b*x** 27+
       c01c*x** 28+c01d*x** 29+c01e*x** 30+c01f*x** 31+
       c090*x**144+c091*x**145+c092*x**146+c093*x**147+
       c094*x**148+c095*x**149+c096*x**150+c097*x**151+
       c098*x**152+c099*x**153+c09a*x**154+c09b*x**155+
       c09c*x**156+c09d*x**157+c09e*x**158+c09f*x**159+
       c110*x**272+c111*x**273+c112*x**274+c113*x**275+
       c114*x**276+c115*x**277+c116*x**278+c117*x**279+
       c118*x**280+c119*x**281+c11a*x**282+c11b*x**283+
       c11c*x**284+c11d*x**285+c11e*x**286+c11f*x**287+
       c190*x**400+c191*x**401+c192*x**402+c193*x**403+
       c194*x**404+c195*x**405+c196*x**406+c197*x**407+
       c198*x**408+c199*x**409+c19a*x**410+c19b*x**411+
       c19c*x**412+c19d*x**413+c19e*x**414+c19f*x**415)
      (L0x7fffffffd300*x**16+L0x7fffffffd302*x**17+L0x7fffffffd304*x**18+
       L0x7fffffffd306*x**19+L0x7fffffffd308*x**20+L0x7fffffffd30a*x**21+
       L0x7fffffffd30c*x**22+L0x7fffffffd30e*x**23+L0x7fffffffd310*x**24+
       L0x7fffffffd312*x**25+L0x7fffffffd314*x**26+L0x7fffffffd316*x**27+
       L0x7fffffffd318*x**28+L0x7fffffffd31a*x**29+L0x7fffffffd31c*x**30+
       L0x7fffffffd31e*x**31)
      [10753, x**128 - 1],
eqmod (c010*x** 16+c011*x** 17+c012*x** 18+c013*x** 19+
       c014*x** 20+c015*x** 21+c016*x** 22+c017*x** 23+
       c018*x** 24+c019*x** 25+c01a*x** 26+c01b*x** 27+
       c01c*x** 28+c01d*x** 29+c01e*x** 30+c01f*x** 31+
       c090*x**144+c091*x**145+c092*x**146+c093*x**147+
       c094*x**148+c095*x**149+c096*x**150+c097*x**151+
       c098*x**152+c099*x**153+c09a*x**154+c09b*x**155+
       c09c*x**156+c09d*x**157+c09e*x**158+c09f*x**159+
       c110*x**272+c111*x**273+c112*x**274+c113*x**275+
       c114*x**276+c115*x**277+c116*x**278+c117*x**279+
       c118*x**280+c119*x**281+c11a*x**282+c11b*x**283+
       c11c*x**284+c11d*x**285+c11e*x**286+c11f*x**287+
       c190*x**400+c191*x**401+c192*x**402+c193*x**403+
       c194*x**404+c195*x**405+c196*x**406+c197*x**407+
       c198*x**408+c199*x**409+c19a*x**410+c19b*x**411+
       c19c*x**412+c19d*x**413+c19e*x**414+c19f*x**415)
      (L0x7fffffffd400*x**16+L0x7fffffffd402*x**17+L0x7fffffffd404*x**18+
       L0x7fffffffd406*x**19+L0x7fffffffd408*x**20+L0x7fffffffd40a*x**21+
       L0x7fffffffd40c*x**22+L0x7fffffffd40e*x**23+L0x7fffffffd410*x**24+
       L0x7fffffffd412*x**25+L0x7fffffffd414*x**26+L0x7fffffffd416*x**27+
       L0x7fffffffd418*x**28+L0x7fffffffd41a*x**29+L0x7fffffffd41c*x**30+
       L0x7fffffffd41e*x**31)
      [10753, x**128 - 10752],
eqmod (c010*x** 16+c011*x** 17+c012*x** 18+c013*x** 19+
       c014*x** 20+c015*x** 21+c016*x** 22+c017*x** 23+
       c018*x** 24+c019*x** 25+c01a*x** 26+c01b*x** 27+
       c01c*x** 28+c01d*x** 29+c01e*x** 30+c01f*x** 31+
       c090*x**144+c091*x**145+c092*x**146+c093*x**147+
       c094*x**148+c095*x**149+c096*x**150+c097*x**151+
       c098*x**152+c099*x**153+c09a*x**154+c09b*x**155+
       c09c*x**156+c09d*x**157+c09e*x**158+c09f*x**159+
       c110*x**272+c111*x**273+c112*x**274+c113*x**275+
       c114*x**276+c115*x**277+c116*x**278+c117*x**279+
       c118*x**280+c119*x**281+c11a*x**282+c11b*x**283+
       c11c*x**284+c11d*x**285+c11e*x**286+c11f*x**287+
       c190*x**400+c191*x**401+c192*x**402+c193*x**403+
       c194*x**404+c195*x**405+c196*x**406+c197*x**407+
       c198*x**408+c199*x**409+c19a*x**410+c19b*x**411+
       c19c*x**412+c19d*x**413+c19e*x**414+c19f*x**415)
      (L0x7fffffffd500*x**16+L0x7fffffffd502*x**17+L0x7fffffffd504*x**18+
       L0x7fffffffd506*x**19+L0x7fffffffd508*x**20+L0x7fffffffd50a*x**21+
       L0x7fffffffd50c*x**22+L0x7fffffffd50e*x**23+L0x7fffffffd510*x**24+
       L0x7fffffffd512*x**25+L0x7fffffffd514*x**26+L0x7fffffffd516*x**27+
       L0x7fffffffd518*x**28+L0x7fffffffd51a*x**29+L0x7fffffffd51c*x**30+
       L0x7fffffffd51e*x**31)
      [10753, x**128 - 6264],
eqmod (c010*x** 16+c011*x** 17+c012*x** 18+c013*x** 19+
       c014*x** 20+c015*x** 21+c016*x** 22+c017*x** 23+
       c018*x** 24+c019*x** 25+c01a*x** 26+c01b*x** 27+
       c01c*x** 28+c01d*x** 29+c01e*x** 30+c01f*x** 31+
       c090*x**144+c091*x**145+c092*x**146+c093*x**147+
       c094*x**148+c095*x**149+c096*x**150+c097*x**151+
       c098*x**152+c099*x**153+c09a*x**154+c09b*x**155+
       c09c*x**156+c09d*x**157+c09e*x**158+c09f*x**159+
       c110*x**272+c111*x**273+c112*x**274+c113*x**275+
       c114*x**276+c115*x**277+c116*x**278+c117*x**279+
       c118*x**280+c119*x**281+c11a*x**282+c11b*x**283+
       c11c*x**284+c11d*x**285+c11e*x**286+c11f*x**287+
       c190*x**400+c191*x**401+c192*x**402+c193*x**403+
       c194*x**404+c195*x**405+c196*x**406+c197*x**407+
       c198*x**408+c199*x**409+c19a*x**410+c19b*x**411+
       c19c*x**412+c19d*x**413+c19e*x**414+c19f*x**415)
      (L0x7fffffffd600*x**16+L0x7fffffffd602*x**17+L0x7fffffffd604*x**18+
       L0x7fffffffd606*x**19+L0x7fffffffd608*x**20+L0x7fffffffd60a*x**21+
       L0x7fffffffd60c*x**22+L0x7fffffffd60e*x**23+L0x7fffffffd610*x**24+
       L0x7fffffffd612*x**25+L0x7fffffffd614*x**26+L0x7fffffffd616*x**27+
       L0x7fffffffd618*x**28+L0x7fffffffd61a*x**29+L0x7fffffffd61c*x**30+
       L0x7fffffffd61e*x**31)
      [10753, x**128 - 4489],
eqmod (c010*x** 16+c011*x** 17+c012*x** 18+c013*x** 19+
       c014*x** 20+c015*x** 21+c016*x** 22+c017*x** 23+
       c018*x** 24+c019*x** 25+c01a*x** 26+c01b*x** 27+
       c01c*x** 28+c01d*x** 29+c01e*x** 30+c01f*x** 31+
       c090*x**144+c091*x**145+c092*x**146+c093*x**147+
       c094*x**148+c095*x**149+c096*x**150+c097*x**151+
       c098*x**152+c099*x**153+c09a*x**154+c09b*x**155+
       c09c*x**156+c09d*x**157+c09e*x**158+c09f*x**159+
       c110*x**272+c111*x**273+c112*x**274+c113*x**275+
       c114*x**276+c115*x**277+c116*x**278+c117*x**279+
       c118*x**280+c119*x**281+c11a*x**282+c11b*x**283+
       c11c*x**284+c11d*x**285+c11e*x**286+c11f*x**287+
       c190*x**400+c191*x**401+c192*x**402+c193*x**403+
       c194*x**404+c195*x**405+c196*x**406+c197*x**407+
       c198*x**408+c199*x**409+c19a*x**410+c19b*x**411+
       c19c*x**412+c19d*x**413+c19e*x**414+c19f*x**415)
      (L0x7fffffffd700*x**16+L0x7fffffffd702*x**17+L0x7fffffffd704*x**18+
       L0x7fffffffd706*x**19+L0x7fffffffd708*x**20+L0x7fffffffd70a*x**21+
       L0x7fffffffd70c*x**22+L0x7fffffffd70e*x**23+L0x7fffffffd710*x**24+
       L0x7fffffffd712*x**25+L0x7fffffffd714*x**26+L0x7fffffffd716*x**27+
       L0x7fffffffd718*x**28+L0x7fffffffd71a*x**29+L0x7fffffffd71c*x**30+
       L0x7fffffffd71e*x**31)
      [10753, x**128 - 321],
eqmod (c010*x** 16+c011*x** 17+c012*x** 18+c013*x** 19+
       c014*x** 20+c015*x** 21+c016*x** 22+c017*x** 23+
       c018*x** 24+c019*x** 25+c01a*x** 26+c01b*x** 27+
       c01c*x** 28+c01d*x** 29+c01e*x** 30+c01f*x** 31+
       c090*x**144+c091*x**145+c092*x**146+c093*x**147+
       c094*x**148+c095*x**149+c096*x**150+c097*x**151+
       c098*x**152+c099*x**153+c09a*x**154+c09b*x**155+
       c09c*x**156+c09d*x**157+c09e*x**158+c09f*x**159+
       c110*x**272+c111*x**273+c112*x**274+c113*x**275+
       c114*x**276+c115*x**277+c116*x**278+c117*x**279+
       c118*x**280+c119*x**281+c11a*x**282+c11b*x**283+
       c11c*x**284+c11d*x**285+c11e*x**286+c11f*x**287+
       c190*x**400+c191*x**401+c192*x**402+c193*x**403+
       c194*x**404+c195*x**405+c196*x**406+c197*x**407+
       c198*x**408+c199*x**409+c19a*x**410+c19b*x**411+
       c19c*x**412+c19d*x**413+c19e*x**414+c19f*x**415)
      (L0x7fffffffd800*x**16+L0x7fffffffd802*x**17+L0x7fffffffd804*x**18+
       L0x7fffffffd806*x**19+L0x7fffffffd808*x**20+L0x7fffffffd80a*x**21+
       L0x7fffffffd80c*x**22+L0x7fffffffd80e*x**23+L0x7fffffffd810*x**24+
       L0x7fffffffd812*x**25+L0x7fffffffd814*x**26+L0x7fffffffd816*x**27+
       L0x7fffffffd818*x**28+L0x7fffffffd81a*x**29+L0x7fffffffd81c*x**30+
       L0x7fffffffd81e*x**31)
      [10753, x**128 - 10432],
eqmod (c010*x** 16+c011*x** 17+c012*x** 18+c013*x** 19+
       c014*x** 20+c015*x** 21+c016*x** 22+c017*x** 23+
       c018*x** 24+c019*x** 25+c01a*x** 26+c01b*x** 27+
       c01c*x** 28+c01d*x** 29+c01e*x** 30+c01f*x** 31+
       c090*x**144+c091*x**145+c092*x**146+c093*x**147+
       c094*x**148+c095*x**149+c096*x**150+c097*x**151+
       c098*x**152+c099*x**153+c09a*x**154+c09b*x**155+
       c09c*x**156+c09d*x**157+c09e*x**158+c09f*x**159+
       c110*x**272+c111*x**273+c112*x**274+c113*x**275+
       c114*x**276+c115*x**277+c116*x**278+c117*x**279+
       c118*x**280+c119*x**281+c11a*x**282+c11b*x**283+
       c11c*x**284+c11d*x**285+c11e*x**286+c11f*x**287+
       c190*x**400+c191*x**401+c192*x**402+c193*x**403+
       c194*x**404+c195*x**405+c196*x**406+c197*x**407+
       c198*x**408+c199*x**409+c19a*x**410+c19b*x**411+
       c19c*x**412+c19d*x**413+c19e*x**414+c19f*x**415)
      (L0x7fffffffd900*x**16+L0x7fffffffd902*x**17+L0x7fffffffd904*x**18+
       L0x7fffffffd906*x**19+L0x7fffffffd908*x**20+L0x7fffffffd90a*x**21+
       L0x7fffffffd90c*x**22+L0x7fffffffd90e*x**23+L0x7fffffffd910*x**24+
       L0x7fffffffd912*x**25+L0x7fffffffd914*x**26+L0x7fffffffd916*x**27+
       L0x7fffffffd918*x**28+L0x7fffffffd91a*x**29+L0x7fffffffd91c*x**30+
       L0x7fffffffd91e*x**31)
      [10753, x**128 - 10686],
eqmod (c010*x** 16+c011*x** 17+c012*x** 18+c013*x** 19+
       c014*x** 20+c015*x** 21+c016*x** 22+c017*x** 23+
       c018*x** 24+c019*x** 25+c01a*x** 26+c01b*x** 27+
       c01c*x** 28+c01d*x** 29+c01e*x** 30+c01f*x** 31+
       c090*x**144+c091*x**145+c092*x**146+c093*x**147+
       c094*x**148+c095*x**149+c096*x**150+c097*x**151+
       c098*x**152+c099*x**153+c09a*x**154+c09b*x**155+
       c09c*x**156+c09d*x**157+c09e*x**158+c09f*x**159+
       c110*x**272+c111*x**273+c112*x**274+c113*x**275+
       c114*x**276+c115*x**277+c116*x**278+c117*x**279+
       c118*x**280+c119*x**281+c11a*x**282+c11b*x**283+
       c11c*x**284+c11d*x**285+c11e*x**286+c11f*x**287+
       c190*x**400+c191*x**401+c192*x**402+c193*x**403+
       c194*x**404+c195*x**405+c196*x**406+c197*x**407+
       c198*x**408+c199*x**409+c19a*x**410+c19b*x**411+
       c19c*x**412+c19d*x**413+c19e*x**414+c19f*x**415)
      (L0x7fffffffda00*x**16+L0x7fffffffda02*x**17+L0x7fffffffda04*x**18+
       L0x7fffffffda06*x**19+L0x7fffffffda08*x**20+L0x7fffffffda0a*x**21+
       L0x7fffffffda0c*x**22+L0x7fffffffda0e*x**23+L0x7fffffffda10*x**24+
       L0x7fffffffda12*x**25+L0x7fffffffda14*x**26+L0x7fffffffda16*x**27+
       L0x7fffffffda18*x**28+L0x7fffffffda1a*x**29+L0x7fffffffda1c*x**30+
       L0x7fffffffda1e*x**31)
      [10753, x**128 - 67]
  ];



(* === split the CUT into 8 slices === *)

(**************** CUT  20,  0 *****************)

ecut true;

(**************** CUT  21,  0 *****************)

ecut 
  and [
eqmod (c010*x** 16+c011*x** 17+c012*x** 18+c013*x** 19+
       c014*x** 20+c015*x** 21+c016*x** 22+c017*x** 23+
       c018*x** 24+c019*x** 25+c01a*x** 26+c01b*x** 27+
       c01c*x** 28+c01d*x** 29+c01e*x** 30+c01f*x** 31+
       c090*x**144+c091*x**145+c092*x**146+c093*x**147+
       c094*x**148+c095*x**149+c096*x**150+c097*x**151+
       c098*x**152+c099*x**153+c09a*x**154+c09b*x**155+
       c09c*x**156+c09d*x**157+c09e*x**158+c09f*x**159+
       c110*x**272+c111*x**273+c112*x**274+c113*x**275+
       c114*x**276+c115*x**277+c116*x**278+c117*x**279+
       c118*x**280+c119*x**281+c11a*x**282+c11b*x**283+
       c11c*x**284+c11d*x**285+c11e*x**286+c11f*x**287+
       c190*x**400+c191*x**401+c192*x**402+c193*x**403+
       c194*x**404+c195*x**405+c196*x**406+c197*x**407+
       c198*x**408+c199*x**409+c19a*x**410+c19b*x**411+
       c19c*x**412+c19d*x**413+c19e*x**414+c19f*x**415)
      (L0x7fffffffd300*x**16+L0x7fffffffd302*x**17+L0x7fffffffd304*x**18+
       L0x7fffffffd306*x**19+L0x7fffffffd308*x**20+L0x7fffffffd30a*x**21+
       L0x7fffffffd30c*x**22+L0x7fffffffd30e*x**23+L0x7fffffffd310*x**24+
       L0x7fffffffd312*x**25+L0x7fffffffd314*x**26+L0x7fffffffd316*x**27+
       L0x7fffffffd318*x**28+L0x7fffffffd31a*x**29+L0x7fffffffd31c*x**30+
       L0x7fffffffd31e*x**31)
      [10753, x**128 - 1]
  ] prove with [cuts [19]];


(**************** CUT  22,  0 *****************)

ecut true;

(**************** CUT  23,  0 *****************)

ecut 
  and [
eqmod (c010*x** 16+c011*x** 17+c012*x** 18+c013*x** 19+
       c014*x** 20+c015*x** 21+c016*x** 22+c017*x** 23+
       c018*x** 24+c019*x** 25+c01a*x** 26+c01b*x** 27+
       c01c*x** 28+c01d*x** 29+c01e*x** 30+c01f*x** 31+
       c090*x**144+c091*x**145+c092*x**146+c093*x**147+
       c094*x**148+c095*x**149+c096*x**150+c097*x**151+
       c098*x**152+c099*x**153+c09a*x**154+c09b*x**155+
       c09c*x**156+c09d*x**157+c09e*x**158+c09f*x**159+
       c110*x**272+c111*x**273+c112*x**274+c113*x**275+
       c114*x**276+c115*x**277+c116*x**278+c117*x**279+
       c118*x**280+c119*x**281+c11a*x**282+c11b*x**283+
       c11c*x**284+c11d*x**285+c11e*x**286+c11f*x**287+
       c190*x**400+c191*x**401+c192*x**402+c193*x**403+
       c194*x**404+c195*x**405+c196*x**406+c197*x**407+
       c198*x**408+c199*x**409+c19a*x**410+c19b*x**411+
       c19c*x**412+c19d*x**413+c19e*x**414+c19f*x**415)
      (L0x7fffffffd400*x**16+L0x7fffffffd402*x**17+L0x7fffffffd404*x**18+
       L0x7fffffffd406*x**19+L0x7fffffffd408*x**20+L0x7fffffffd40a*x**21+
       L0x7fffffffd40c*x**22+L0x7fffffffd40e*x**23+L0x7fffffffd410*x**24+
       L0x7fffffffd412*x**25+L0x7fffffffd414*x**26+L0x7fffffffd416*x**27+
       L0x7fffffffd418*x**28+L0x7fffffffd41a*x**29+L0x7fffffffd41c*x**30+
       L0x7fffffffd41e*x**31)
      [10753, x**128 - 10752]
  ] prove with [cuts [19]];


(**************** CUT  24,  0 *****************)

ecut true;

(**************** CUT  25,  0 *****************)

ecut 
  and [
eqmod (c010*x** 16+c011*x** 17+c012*x** 18+c013*x** 19+
       c014*x** 20+c015*x** 21+c016*x** 22+c017*x** 23+
       c018*x** 24+c019*x** 25+c01a*x** 26+c01b*x** 27+
       c01c*x** 28+c01d*x** 29+c01e*x** 30+c01f*x** 31+
       c090*x**144+c091*x**145+c092*x**146+c093*x**147+
       c094*x**148+c095*x**149+c096*x**150+c097*x**151+
       c098*x**152+c099*x**153+c09a*x**154+c09b*x**155+
       c09c*x**156+c09d*x**157+c09e*x**158+c09f*x**159+
       c110*x**272+c111*x**273+c112*x**274+c113*x**275+
       c114*x**276+c115*x**277+c116*x**278+c117*x**279+
       c118*x**280+c119*x**281+c11a*x**282+c11b*x**283+
       c11c*x**284+c11d*x**285+c11e*x**286+c11f*x**287+
       c190*x**400+c191*x**401+c192*x**402+c193*x**403+
       c194*x**404+c195*x**405+c196*x**406+c197*x**407+
       c198*x**408+c199*x**409+c19a*x**410+c19b*x**411+
       c19c*x**412+c19d*x**413+c19e*x**414+c19f*x**415)
      (L0x7fffffffd500*x**16+L0x7fffffffd502*x**17+L0x7fffffffd504*x**18+
       L0x7fffffffd506*x**19+L0x7fffffffd508*x**20+L0x7fffffffd50a*x**21+
       L0x7fffffffd50c*x**22+L0x7fffffffd50e*x**23+L0x7fffffffd510*x**24+
       L0x7fffffffd512*x**25+L0x7fffffffd514*x**26+L0x7fffffffd516*x**27+
       L0x7fffffffd518*x**28+L0x7fffffffd51a*x**29+L0x7fffffffd51c*x**30+
       L0x7fffffffd51e*x**31)
      [10753, x**128 - 6264]
  ] prove with [cuts [19]];


(**************** CUT  26,  0 *****************)

ecut true;

(**************** CUT  27,  0 *****************)

ecut 
  and [
eqmod (c010*x** 16+c011*x** 17+c012*x** 18+c013*x** 19+
       c014*x** 20+c015*x** 21+c016*x** 22+c017*x** 23+
       c018*x** 24+c019*x** 25+c01a*x** 26+c01b*x** 27+
       c01c*x** 28+c01d*x** 29+c01e*x** 30+c01f*x** 31+
       c090*x**144+c091*x**145+c092*x**146+c093*x**147+
       c094*x**148+c095*x**149+c096*x**150+c097*x**151+
       c098*x**152+c099*x**153+c09a*x**154+c09b*x**155+
       c09c*x**156+c09d*x**157+c09e*x**158+c09f*x**159+
       c110*x**272+c111*x**273+c112*x**274+c113*x**275+
       c114*x**276+c115*x**277+c116*x**278+c117*x**279+
       c118*x**280+c119*x**281+c11a*x**282+c11b*x**283+
       c11c*x**284+c11d*x**285+c11e*x**286+c11f*x**287+
       c190*x**400+c191*x**401+c192*x**402+c193*x**403+
       c194*x**404+c195*x**405+c196*x**406+c197*x**407+
       c198*x**408+c199*x**409+c19a*x**410+c19b*x**411+
       c19c*x**412+c19d*x**413+c19e*x**414+c19f*x**415)
      (L0x7fffffffd600*x**16+L0x7fffffffd602*x**17+L0x7fffffffd604*x**18+
       L0x7fffffffd606*x**19+L0x7fffffffd608*x**20+L0x7fffffffd60a*x**21+
       L0x7fffffffd60c*x**22+L0x7fffffffd60e*x**23+L0x7fffffffd610*x**24+
       L0x7fffffffd612*x**25+L0x7fffffffd614*x**26+L0x7fffffffd616*x**27+
       L0x7fffffffd618*x**28+L0x7fffffffd61a*x**29+L0x7fffffffd61c*x**30+
       L0x7fffffffd61e*x**31)
      [10753, x**128 - 4489]
  ] prove with [cuts [19]];


(**************** CUT  28,  0 *****************)

ecut true;

(**************** CUT  29,  0 *****************)

ecut 
  and [
eqmod (c010*x** 16+c011*x** 17+c012*x** 18+c013*x** 19+
       c014*x** 20+c015*x** 21+c016*x** 22+c017*x** 23+
       c018*x** 24+c019*x** 25+c01a*x** 26+c01b*x** 27+
       c01c*x** 28+c01d*x** 29+c01e*x** 30+c01f*x** 31+
       c090*x**144+c091*x**145+c092*x**146+c093*x**147+
       c094*x**148+c095*x**149+c096*x**150+c097*x**151+
       c098*x**152+c099*x**153+c09a*x**154+c09b*x**155+
       c09c*x**156+c09d*x**157+c09e*x**158+c09f*x**159+
       c110*x**272+c111*x**273+c112*x**274+c113*x**275+
       c114*x**276+c115*x**277+c116*x**278+c117*x**279+
       c118*x**280+c119*x**281+c11a*x**282+c11b*x**283+
       c11c*x**284+c11d*x**285+c11e*x**286+c11f*x**287+
       c190*x**400+c191*x**401+c192*x**402+c193*x**403+
       c194*x**404+c195*x**405+c196*x**406+c197*x**407+
       c198*x**408+c199*x**409+c19a*x**410+c19b*x**411+
       c19c*x**412+c19d*x**413+c19e*x**414+c19f*x**415)
      (L0x7fffffffd700*x**16+L0x7fffffffd702*x**17+L0x7fffffffd704*x**18+
       L0x7fffffffd706*x**19+L0x7fffffffd708*x**20+L0x7fffffffd70a*x**21+
       L0x7fffffffd70c*x**22+L0x7fffffffd70e*x**23+L0x7fffffffd710*x**24+
       L0x7fffffffd712*x**25+L0x7fffffffd714*x**26+L0x7fffffffd716*x**27+
       L0x7fffffffd718*x**28+L0x7fffffffd71a*x**29+L0x7fffffffd71c*x**30+
       L0x7fffffffd71e*x**31)
      [10753, x**128 - 321]
  ] prove with [cuts [19]];


(**************** CUT  30,  0 *****************)

ecut true;

(**************** CUT  31,  0 *****************)

ecut 
  and [
eqmod (c010*x** 16+c011*x** 17+c012*x** 18+c013*x** 19+
       c014*x** 20+c015*x** 21+c016*x** 22+c017*x** 23+
       c018*x** 24+c019*x** 25+c01a*x** 26+c01b*x** 27+
       c01c*x** 28+c01d*x** 29+c01e*x** 30+c01f*x** 31+
       c090*x**144+c091*x**145+c092*x**146+c093*x**147+
       c094*x**148+c095*x**149+c096*x**150+c097*x**151+
       c098*x**152+c099*x**153+c09a*x**154+c09b*x**155+
       c09c*x**156+c09d*x**157+c09e*x**158+c09f*x**159+
       c110*x**272+c111*x**273+c112*x**274+c113*x**275+
       c114*x**276+c115*x**277+c116*x**278+c117*x**279+
       c118*x**280+c119*x**281+c11a*x**282+c11b*x**283+
       c11c*x**284+c11d*x**285+c11e*x**286+c11f*x**287+
       c190*x**400+c191*x**401+c192*x**402+c193*x**403+
       c194*x**404+c195*x**405+c196*x**406+c197*x**407+
       c198*x**408+c199*x**409+c19a*x**410+c19b*x**411+
       c19c*x**412+c19d*x**413+c19e*x**414+c19f*x**415)
      (L0x7fffffffd800*x**16+L0x7fffffffd802*x**17+L0x7fffffffd804*x**18+
       L0x7fffffffd806*x**19+L0x7fffffffd808*x**20+L0x7fffffffd80a*x**21+
       L0x7fffffffd80c*x**22+L0x7fffffffd80e*x**23+L0x7fffffffd810*x**24+
       L0x7fffffffd812*x**25+L0x7fffffffd814*x**26+L0x7fffffffd816*x**27+
       L0x7fffffffd818*x**28+L0x7fffffffd81a*x**29+L0x7fffffffd81c*x**30+
       L0x7fffffffd81e*x**31)
      [10753, x**128 - 10432]
  ] prove with [cuts [19]];


(**************** CUT  32,  0 *****************)

ecut true;

(**************** CUT  33,  0 *****************)

ecut 
  and [
eqmod (c010*x** 16+c011*x** 17+c012*x** 18+c013*x** 19+
       c014*x** 20+c015*x** 21+c016*x** 22+c017*x** 23+
       c018*x** 24+c019*x** 25+c01a*x** 26+c01b*x** 27+
       c01c*x** 28+c01d*x** 29+c01e*x** 30+c01f*x** 31+
       c090*x**144+c091*x**145+c092*x**146+c093*x**147+
       c094*x**148+c095*x**149+c096*x**150+c097*x**151+
       c098*x**152+c099*x**153+c09a*x**154+c09b*x**155+
       c09c*x**156+c09d*x**157+c09e*x**158+c09f*x**159+
       c110*x**272+c111*x**273+c112*x**274+c113*x**275+
       c114*x**276+c115*x**277+c116*x**278+c117*x**279+
       c118*x**280+c119*x**281+c11a*x**282+c11b*x**283+
       c11c*x**284+c11d*x**285+c11e*x**286+c11f*x**287+
       c190*x**400+c191*x**401+c192*x**402+c193*x**403+
       c194*x**404+c195*x**405+c196*x**406+c197*x**407+
       c198*x**408+c199*x**409+c19a*x**410+c19b*x**411+
       c19c*x**412+c19d*x**413+c19e*x**414+c19f*x**415)
      (L0x7fffffffd900*x**16+L0x7fffffffd902*x**17+L0x7fffffffd904*x**18+
       L0x7fffffffd906*x**19+L0x7fffffffd908*x**20+L0x7fffffffd90a*x**21+
       L0x7fffffffd90c*x**22+L0x7fffffffd90e*x**23+L0x7fffffffd910*x**24+
       L0x7fffffffd912*x**25+L0x7fffffffd914*x**26+L0x7fffffffd916*x**27+
       L0x7fffffffd918*x**28+L0x7fffffffd91a*x**29+L0x7fffffffd91c*x**30+
       L0x7fffffffd91e*x**31)
      [10753, x**128 - 10686]
  ] prove with [cuts [19]];


(**************** CUT  34,  0 *****************)

ecut true;

(**************** CUT  35,  0 *****************)

ecut 
  and [
eqmod (c010*x** 16+c011*x** 17+c012*x** 18+c013*x** 19+
       c014*x** 20+c015*x** 21+c016*x** 22+c017*x** 23+
       c018*x** 24+c019*x** 25+c01a*x** 26+c01b*x** 27+
       c01c*x** 28+c01d*x** 29+c01e*x** 30+c01f*x** 31+
       c090*x**144+c091*x**145+c092*x**146+c093*x**147+
       c094*x**148+c095*x**149+c096*x**150+c097*x**151+
       c098*x**152+c099*x**153+c09a*x**154+c09b*x**155+
       c09c*x**156+c09d*x**157+c09e*x**158+c09f*x**159+
       c110*x**272+c111*x**273+c112*x**274+c113*x**275+
       c114*x**276+c115*x**277+c116*x**278+c117*x**279+
       c118*x**280+c119*x**281+c11a*x**282+c11b*x**283+
       c11c*x**284+c11d*x**285+c11e*x**286+c11f*x**287+
       c190*x**400+c191*x**401+c192*x**402+c193*x**403+
       c194*x**404+c195*x**405+c196*x**406+c197*x**407+
       c198*x**408+c199*x**409+c19a*x**410+c19b*x**411+
       c19c*x**412+c19d*x**413+c19e*x**414+c19f*x**415)
      (L0x7fffffffda00*x**16+L0x7fffffffda02*x**17+L0x7fffffffda04*x**18+
       L0x7fffffffda06*x**19+L0x7fffffffda08*x**20+L0x7fffffffda0a*x**21+
       L0x7fffffffda0c*x**22+L0x7fffffffda0e*x**23+L0x7fffffffda10*x**24+
       L0x7fffffffda12*x**25+L0x7fffffffda14*x**26+L0x7fffffffda16*x**27+
       L0x7fffffffda18*x**28+L0x7fffffffda1a*x**29+L0x7fffffffda1c*x**30+
       L0x7fffffffda1e*x**31)
      [10753, x**128 - 67]
  ] prove with [cuts [19]];



(* === be ready for next level and offset === *)

(**************** CUT  36,  0 *****************)

ecut true;



(* vpbroadcastw 0x102(%rdx),%ymm1                  #! EA = L0x555555561222; Value = 0x276d0198f85c6adf; PC = 0x555555556e91 *)
mov ymm1_0 L0x555555561222;
mov ymm1_1 L0x555555561222;
mov ymm1_2 L0x555555561222;
mov ymm1_3 L0x555555561222;
mov ymm1_4 L0x555555561222;
mov ymm1_5 L0x555555561222;
mov ymm1_6 L0x555555561222;
mov ymm1_7 L0x555555561222;
mov ymm1_8 L0x555555561222;
mov ymm1_9 L0x555555561222;
mov ymm1_a L0x555555561222;
mov ymm1_b L0x555555561222;
mov ymm1_c L0x555555561222;
mov ymm1_d L0x555555561222;
mov ymm1_e L0x555555561222;
mov ymm1_f L0x555555561222;
(* vpbroadcastw 0x302(%rdx),%ymm2                  #! EA = L0x555555561422; Value = 0x096df198105c00df; PC = 0x555555556e9a *)
mov ymm2_0 L0x555555561422;
mov ymm2_1 L0x555555561422;
mov ymm2_2 L0x555555561422;
mov ymm2_3 L0x555555561422;
mov ymm2_4 L0x555555561422;
mov ymm2_5 L0x555555561422;
mov ymm2_6 L0x555555561422;
mov ymm2_7 L0x555555561422;
mov ymm2_8 L0x555555561422;
mov ymm2_9 L0x555555561422;
mov ymm2_a L0x555555561422;
mov ymm2_b L0x555555561422;
mov ymm2_c L0x555555561422;
mov ymm2_d L0x555555561422;
mov ymm2_e L0x555555561422;
mov ymm2_f L0x555555561422;
(* vmovdqa 0x240(%rsi),%ymm6                       #! EA = L0x7fffffffcd20; Value = 0x0000000000000000; PC = 0x555555556ea3 *)
mov ymm6_0 L0x7fffffffcd20;
mov ymm6_1 L0x7fffffffcd22;
mov ymm6_2 L0x7fffffffcd24;
mov ymm6_3 L0x7fffffffcd26;
mov ymm6_4 L0x7fffffffcd28;
mov ymm6_5 L0x7fffffffcd2a;
mov ymm6_6 L0x7fffffffcd2c;
mov ymm6_7 L0x7fffffffcd2e;
mov ymm6_8 L0x7fffffffcd30;
mov ymm6_9 L0x7fffffffcd32;
mov ymm6_a L0x7fffffffcd34;
mov ymm6_b L0x7fffffffcd36;
mov ymm6_c L0x7fffffffcd38;
mov ymm6_d L0x7fffffffcd3a;
mov ymm6_e L0x7fffffffcd3c;
mov ymm6_f L0x7fffffffcd3e;
(* vmovdqa 0x340(%rsi),%ymm7                       #! EA = L0x7fffffffce20; Value = 0x0000000000000000; PC = 0x555555556eab *)
mov ymm7_0 L0x7fffffffce20;
mov ymm7_1 L0x7fffffffce22;
mov ymm7_2 L0x7fffffffce24;
mov ymm7_3 L0x7fffffffce26;
mov ymm7_4 L0x7fffffffce28;
mov ymm7_5 L0x7fffffffce2a;
mov ymm7_6 L0x7fffffffce2c;
mov ymm7_7 L0x7fffffffce2e;
mov ymm7_8 L0x7fffffffce30;
mov ymm7_9 L0x7fffffffce32;
mov ymm7_a L0x7fffffffce34;
mov ymm7_b L0x7fffffffce36;
mov ymm7_c L0x7fffffffce38;
mov ymm7_d L0x7fffffffce3a;
mov ymm7_e L0x7fffffffce3c;
mov ymm7_f L0x7fffffffce3e;
(* vpmullw %ymm1,%ymm6,%ymm3                       #! PC = 0x555555556eb3 *)
smull mulHymm6_0 mulL_0 ymm1_0 ymm6_0;
smull mulHymm6_1 mulL_1 ymm1_1 ymm6_1;
smull mulHymm6_2 mulL_2 ymm1_2 ymm6_2;
smull mulHymm6_3 mulL_3 ymm1_3 ymm6_3;
smull mulHymm6_4 mulL_4 ymm1_4 ymm6_4;
smull mulHymm6_5 mulL_5 ymm1_5 ymm6_5;
smull mulHymm6_6 mulL_6 ymm1_6 ymm6_6;
smull mulHymm6_7 mulL_7 ymm1_7 ymm6_7;
smull mulHymm6_8 mulL_8 ymm1_8 ymm6_8;
smull mulHymm6_9 mulL_9 ymm1_9 ymm6_9;
smull mulHymm6_a mulL_a ymm1_a ymm6_a;
smull mulHymm6_b mulL_b ymm1_b ymm6_b;
smull mulHymm6_c mulL_c ymm1_c ymm6_c;
smull mulHymm6_d mulL_d ymm1_d ymm6_d;
smull mulHymm6_e mulL_e ymm1_e ymm6_e;
smull mulHymm6_f mulL_f ymm1_f ymm6_f;
cast ymm3_0@sint16 mulL_0;
cast ymm3_1@sint16 mulL_1;
cast ymm3_2@sint16 mulL_2;
cast ymm3_3@sint16 mulL_3;
cast ymm3_4@sint16 mulL_4;
cast ymm3_5@sint16 mulL_5;
cast ymm3_6@sint16 mulL_6;
cast ymm3_7@sint16 mulL_7;
cast ymm3_8@sint16 mulL_8;
cast ymm3_9@sint16 mulL_9;
cast ymm3_a@sint16 mulL_a;
cast ymm3_b@sint16 mulL_b;
cast ymm3_c@sint16 mulL_c;
cast ymm3_d@sint16 mulL_d;
cast ymm3_e@sint16 mulL_e;
cast ymm3_f@sint16 mulL_f;
(* vpmulhw %ymm2,%ymm6,%ymm10                      #! PC = 0x555555556eb7 *)
smull mulH_0 mulLymm6_0 ymm6_0 ymm2_0;
smull mulH_1 mulLymm6_1 ymm6_1 ymm2_1;
smull mulH_2 mulLymm6_2 ymm6_2 ymm2_2;
smull mulH_3 mulLymm6_3 ymm6_3 ymm2_3;
smull mulH_4 mulLymm6_4 ymm6_4 ymm2_4;
smull mulH_5 mulLymm6_5 ymm6_5 ymm2_5;
smull mulH_6 mulLymm6_6 ymm6_6 ymm2_6;
smull mulH_7 mulLymm6_7 ymm6_7 ymm2_7;
smull mulH_8 mulLymm6_8 ymm6_8 ymm2_8;
smull mulH_9 mulLymm6_9 ymm6_9 ymm2_9;
smull mulH_a mulLymm6_a ymm6_a ymm2_a;
smull mulH_b mulLymm6_b ymm6_b ymm2_b;
smull mulH_c mulLymm6_c ymm6_c ymm2_c;
smull mulH_d mulLymm6_d ymm6_d ymm2_d;
smull mulH_e mulLymm6_e ymm6_e ymm2_e;
smull mulH_f mulLymm6_f ymm6_f ymm2_f;
mov ymm10_0 mulH_0;
mov ymm10_1 mulH_1;
mov ymm10_2 mulH_2;
mov ymm10_3 mulH_3;
mov ymm10_4 mulH_4;
mov ymm10_5 mulH_5;
mov ymm10_6 mulH_6;
mov ymm10_7 mulH_7;
mov ymm10_8 mulH_8;
mov ymm10_9 mulH_9;
mov ymm10_a mulH_a;
mov ymm10_b mulH_b;
mov ymm10_c mulH_c;
mov ymm10_d mulH_d;
mov ymm10_e mulH_e;
mov ymm10_f mulH_f;
(* vpmulhw %ymm0,%ymm3,%ymm3                       #! PC = 0x555555556ebb *)
smull mulH_0 red_0 ymm3_0 ymm0_0;
assert true && red_0 = mulLymm6_0;
assume red_0 = mulLymm6_0 && true;
smull mulH_1 red_1 ymm3_1 ymm0_1;
assert true && red_1 = mulLymm6_1;
assume red_1 = mulLymm6_1 && true;
smull mulH_2 red_2 ymm3_2 ymm0_2;
assert true && red_2 = mulLymm6_2;
assume red_2 = mulLymm6_2 && true;
smull mulH_3 red_3 ymm3_3 ymm0_3;
assert true && red_3 = mulLymm6_3;
assume red_3 = mulLymm6_3 && true;
smull mulH_4 red_4 ymm3_4 ymm0_4;
assert true && red_4 = mulLymm6_4;
assume red_4 = mulLymm6_4 && true;
smull mulH_5 red_5 ymm3_5 ymm0_5;
assert true && red_5 = mulLymm6_5;
assume red_5 = mulLymm6_5 && true;
smull mulH_6 red_6 ymm3_6 ymm0_6;
assert true && red_6 = mulLymm6_6;
assume red_6 = mulLymm6_6 && true;
smull mulH_7 red_7 ymm3_7 ymm0_7;
assert true && red_7 = mulLymm6_7;
assume red_7 = mulLymm6_7 && true;
smull mulH_8 red_8 ymm3_8 ymm0_8;
assert true && red_8 = mulLymm6_8;
assume red_8 = mulLymm6_8 && true;
smull mulH_9 red_9 ymm3_9 ymm0_9;
assert true && red_9 = mulLymm6_9;
assume red_9 = mulLymm6_9 && true;
smull mulH_a red_a ymm3_a ymm0_a;
assert true && red_a = mulLymm6_a;
assume red_a = mulLymm6_a && true;
smull mulH_b red_b ymm3_b ymm0_b;
assert true && red_b = mulLymm6_b;
assume red_b = mulLymm6_b && true;
smull mulH_c red_c ymm3_c ymm0_c;
assert true && red_c = mulLymm6_c;
assume red_c = mulLymm6_c && true;
smull mulH_d red_d ymm3_d ymm0_d;
assert true && red_d = mulLymm6_d;
assume red_d = mulLymm6_d && true;
smull mulH_e red_e ymm3_e ymm0_e;
assert true && red_e = mulLymm6_e;
assume red_e = mulLymm6_e && true;
smull mulH_f red_f ymm3_f ymm0_f;
assert true && red_f = mulLymm6_f;
assume red_f = mulLymm6_f && true;
mov ymm3_0 mulH_0;
mov ymm3_1 mulH_1;
mov ymm3_2 mulH_2;
mov ymm3_3 mulH_3;
mov ymm3_4 mulH_4;
mov ymm3_5 mulH_5;
mov ymm3_6 mulH_6;
mov ymm3_7 mulH_7;
mov ymm3_8 mulH_8;
mov ymm3_9 mulH_9;
mov ymm3_a mulH_a;
mov ymm3_b mulH_b;
mov ymm3_c mulH_c;
mov ymm3_d mulH_d;
mov ymm3_e mulH_e;
mov ymm3_f mulH_f;
(* vpsubw %ymm3,%ymm10,%ymm10                      #! PC = 0x555555556ebf *)
sub ymm10_0 ymm10_0 ymm3_0;
sub ymm10_1 ymm10_1 ymm3_1;
sub ymm10_2 ymm10_2 ymm3_2;
sub ymm10_3 ymm10_3 ymm3_3;
sub ymm10_4 ymm10_4 ymm3_4;
sub ymm10_5 ymm10_5 ymm3_5;
sub ymm10_6 ymm10_6 ymm3_6;
sub ymm10_7 ymm10_7 ymm3_7;
sub ymm10_8 ymm10_8 ymm3_8;
sub ymm10_9 ymm10_9 ymm3_9;
sub ymm10_a ymm10_a ymm3_a;
sub ymm10_b ymm10_b ymm3_b;
sub ymm10_c ymm10_c ymm3_c;
sub ymm10_d ymm10_d ymm3_d;
sub ymm10_e ymm10_e ymm3_e;
sub ymm10_f ymm10_f ymm3_f;
(* vpmullw %ymm1,%ymm7,%ymm3                       #! PC = 0x555555556ec3 *)
smull mulHymm7_0 mulL_0 ymm1_0 ymm7_0;
smull mulHymm7_1 mulL_1 ymm1_1 ymm7_1;
smull mulHymm7_2 mulL_2 ymm1_2 ymm7_2;
smull mulHymm7_3 mulL_3 ymm1_3 ymm7_3;
smull mulHymm7_4 mulL_4 ymm1_4 ymm7_4;
smull mulHymm7_5 mulL_5 ymm1_5 ymm7_5;
smull mulHymm7_6 mulL_6 ymm1_6 ymm7_6;
smull mulHymm7_7 mulL_7 ymm1_7 ymm7_7;
smull mulHymm7_8 mulL_8 ymm1_8 ymm7_8;
smull mulHymm7_9 mulL_9 ymm1_9 ymm7_9;
smull mulHymm7_a mulL_a ymm1_a ymm7_a;
smull mulHymm7_b mulL_b ymm1_b ymm7_b;
smull mulHymm7_c mulL_c ymm1_c ymm7_c;
smull mulHymm7_d mulL_d ymm1_d ymm7_d;
smull mulHymm7_e mulL_e ymm1_e ymm7_e;
smull mulHymm7_f mulL_f ymm1_f ymm7_f;
cast ymm3_0@sint16 mulL_0;
cast ymm3_1@sint16 mulL_1;
cast ymm3_2@sint16 mulL_2;
cast ymm3_3@sint16 mulL_3;
cast ymm3_4@sint16 mulL_4;
cast ymm3_5@sint16 mulL_5;
cast ymm3_6@sint16 mulL_6;
cast ymm3_7@sint16 mulL_7;
cast ymm3_8@sint16 mulL_8;
cast ymm3_9@sint16 mulL_9;
cast ymm3_a@sint16 mulL_a;
cast ymm3_b@sint16 mulL_b;
cast ymm3_c@sint16 mulL_c;
cast ymm3_d@sint16 mulL_d;
cast ymm3_e@sint16 mulL_e;
cast ymm3_f@sint16 mulL_f;
(* vpmulhw %ymm2,%ymm7,%ymm11                      #! PC = 0x555555556ec7 *)
smull mulH_0 mulLymm7_0 ymm7_0 ymm2_0;
smull mulH_1 mulLymm7_1 ymm7_1 ymm2_1;
smull mulH_2 mulLymm7_2 ymm7_2 ymm2_2;
smull mulH_3 mulLymm7_3 ymm7_3 ymm2_3;
smull mulH_4 mulLymm7_4 ymm7_4 ymm2_4;
smull mulH_5 mulLymm7_5 ymm7_5 ymm2_5;
smull mulH_6 mulLymm7_6 ymm7_6 ymm2_6;
smull mulH_7 mulLymm7_7 ymm7_7 ymm2_7;
smull mulH_8 mulLymm7_8 ymm7_8 ymm2_8;
smull mulH_9 mulLymm7_9 ymm7_9 ymm2_9;
smull mulH_a mulLymm7_a ymm7_a ymm2_a;
smull mulH_b mulLymm7_b ymm7_b ymm2_b;
smull mulH_c mulLymm7_c ymm7_c ymm2_c;
smull mulH_d mulLymm7_d ymm7_d ymm2_d;
smull mulH_e mulLymm7_e ymm7_e ymm2_e;
smull mulH_f mulLymm7_f ymm7_f ymm2_f;
mov ymm11_0 mulH_0;
mov ymm11_1 mulH_1;
mov ymm11_2 mulH_2;
mov ymm11_3 mulH_3;
mov ymm11_4 mulH_4;
mov ymm11_5 mulH_5;
mov ymm11_6 mulH_6;
mov ymm11_7 mulH_7;
mov ymm11_8 mulH_8;
mov ymm11_9 mulH_9;
mov ymm11_a mulH_a;
mov ymm11_b mulH_b;
mov ymm11_c mulH_c;
mov ymm11_d mulH_d;
mov ymm11_e mulH_e;
mov ymm11_f mulH_f;
(* vpmulhw %ymm0,%ymm3,%ymm3                       #! PC = 0x555555556ecb *)
smull mulH_0 red_0 ymm3_0 ymm0_0;
assert true && red_0 = mulLymm7_0;
assume red_0 = mulLymm7_0 && true;
smull mulH_1 red_1 ymm3_1 ymm0_1;
assert true && red_1 = mulLymm7_1;
assume red_1 = mulLymm7_1 && true;
smull mulH_2 red_2 ymm3_2 ymm0_2;
assert true && red_2 = mulLymm7_2;
assume red_2 = mulLymm7_2 && true;
smull mulH_3 red_3 ymm3_3 ymm0_3;
assert true && red_3 = mulLymm7_3;
assume red_3 = mulLymm7_3 && true;
smull mulH_4 red_4 ymm3_4 ymm0_4;
assert true && red_4 = mulLymm7_4;
assume red_4 = mulLymm7_4 && true;
smull mulH_5 red_5 ymm3_5 ymm0_5;
assert true && red_5 = mulLymm7_5;
assume red_5 = mulLymm7_5 && true;
smull mulH_6 red_6 ymm3_6 ymm0_6;
assert true && red_6 = mulLymm7_6;
assume red_6 = mulLymm7_6 && true;
smull mulH_7 red_7 ymm3_7 ymm0_7;
assert true && red_7 = mulLymm7_7;
assume red_7 = mulLymm7_7 && true;
smull mulH_8 red_8 ymm3_8 ymm0_8;
assert true && red_8 = mulLymm7_8;
assume red_8 = mulLymm7_8 && true;
smull mulH_9 red_9 ymm3_9 ymm0_9;
assert true && red_9 = mulLymm7_9;
assume red_9 = mulLymm7_9 && true;
smull mulH_a red_a ymm3_a ymm0_a;
assert true && red_a = mulLymm7_a;
assume red_a = mulLymm7_a && true;
smull mulH_b red_b ymm3_b ymm0_b;
assert true && red_b = mulLymm7_b;
assume red_b = mulLymm7_b && true;
smull mulH_c red_c ymm3_c ymm0_c;
assert true && red_c = mulLymm7_c;
assume red_c = mulLymm7_c && true;
smull mulH_d red_d ymm3_d ymm0_d;
assert true && red_d = mulLymm7_d;
assume red_d = mulLymm7_d && true;
smull mulH_e red_e ymm3_e ymm0_e;
assert true && red_e = mulLymm7_e;
assume red_e = mulLymm7_e && true;
smull mulH_f red_f ymm3_f ymm0_f;
assert true && red_f = mulLymm7_f;
assume red_f = mulLymm7_f && true;
mov ymm3_0 mulH_0;
mov ymm3_1 mulH_1;
mov ymm3_2 mulH_2;
mov ymm3_3 mulH_3;
mov ymm3_4 mulH_4;
mov ymm3_5 mulH_5;
mov ymm3_6 mulH_6;
mov ymm3_7 mulH_7;
mov ymm3_8 mulH_8;
mov ymm3_9 mulH_9;
mov ymm3_a mulH_a;
mov ymm3_b mulH_b;
mov ymm3_c mulH_c;
mov ymm3_d mulH_d;
mov ymm3_e mulH_e;
mov ymm3_f mulH_f;
(* vpsubw %ymm3,%ymm11,%ymm11                      #! PC = 0x555555556ecf *)
sub ymm11_0 ymm11_0 ymm3_0;
sub ymm11_1 ymm11_1 ymm3_1;
sub ymm11_2 ymm11_2 ymm3_2;
sub ymm11_3 ymm11_3 ymm3_3;
sub ymm11_4 ymm11_4 ymm3_4;
sub ymm11_5 ymm11_5 ymm3_5;
sub ymm11_6 ymm11_6 ymm3_6;
sub ymm11_7 ymm11_7 ymm3_7;
sub ymm11_8 ymm11_8 ymm3_8;
sub ymm11_9 ymm11_9 ymm3_9;
sub ymm11_a ymm11_a ymm3_a;
sub ymm11_b ymm11_b ymm3_b;
sub ymm11_c ymm11_c ymm3_c;
sub ymm11_d ymm11_d ymm3_d;
sub ymm11_e ymm11_e ymm3_e;
sub ymm11_f ymm11_f ymm3_f;
(* vmovdqa 0x40(%rsi),%ymm4                        #! EA = L0x7fffffffcb20; Value = 0x0000000000000000; PC = 0x555555556ed3 *)
mov ymm4_0 L0x7fffffffcb20;
mov ymm4_1 L0x7fffffffcb22;
mov ymm4_2 L0x7fffffffcb24;
mov ymm4_3 L0x7fffffffcb26;
mov ymm4_4 L0x7fffffffcb28;
mov ymm4_5 L0x7fffffffcb2a;
mov ymm4_6 L0x7fffffffcb2c;
mov ymm4_7 L0x7fffffffcb2e;
mov ymm4_8 L0x7fffffffcb30;
mov ymm4_9 L0x7fffffffcb32;
mov ymm4_a L0x7fffffffcb34;
mov ymm4_b L0x7fffffffcb36;
mov ymm4_c L0x7fffffffcb38;
mov ymm4_d L0x7fffffffcb3a;
mov ymm4_e L0x7fffffffcb3c;
mov ymm4_f L0x7fffffffcb3e;
(* vmovdqa 0x140(%rsi),%ymm5                       #! EA = L0x7fffffffcc20; Value = 0x0000000000000000; PC = 0x555555556ed8 *)
mov ymm5_0 L0x7fffffffcc20;
mov ymm5_1 L0x7fffffffcc22;
mov ymm5_2 L0x7fffffffcc24;
mov ymm5_3 L0x7fffffffcc26;
mov ymm5_4 L0x7fffffffcc28;
mov ymm5_5 L0x7fffffffcc2a;
mov ymm5_6 L0x7fffffffcc2c;
mov ymm5_7 L0x7fffffffcc2e;
mov ymm5_8 L0x7fffffffcc30;
mov ymm5_9 L0x7fffffffcc32;
mov ymm5_a L0x7fffffffcc34;
mov ymm5_b L0x7fffffffcc36;
mov ymm5_c L0x7fffffffcc38;
mov ymm5_d L0x7fffffffcc3a;
mov ymm5_e L0x7fffffffcc3c;
mov ymm5_f L0x7fffffffcc3e;
(* vpaddw %ymm10,%ymm4,%ymm8                       #! PC = 0x555555556ee0 *)
add ymm8_0 ymm4_0 ymm10_0;
add ymm8_1 ymm4_1 ymm10_1;
add ymm8_2 ymm4_2 ymm10_2;
add ymm8_3 ymm4_3 ymm10_3;
add ymm8_4 ymm4_4 ymm10_4;
add ymm8_5 ymm4_5 ymm10_5;
add ymm8_6 ymm4_6 ymm10_6;
add ymm8_7 ymm4_7 ymm10_7;
add ymm8_8 ymm4_8 ymm10_8;
add ymm8_9 ymm4_9 ymm10_9;
add ymm8_a ymm4_a ymm10_a;
add ymm8_b ymm4_b ymm10_b;
add ymm8_c ymm4_c ymm10_c;
add ymm8_d ymm4_d ymm10_d;
add ymm8_e ymm4_e ymm10_e;
add ymm8_f ymm4_f ymm10_f;
(* vpsubw %ymm10,%ymm4,%ymm10                      #! PC = 0x555555556ee5 *)
sub ymm10_0 ymm4_0 ymm10_0;
sub ymm10_1 ymm4_1 ymm10_1;
sub ymm10_2 ymm4_2 ymm10_2;
sub ymm10_3 ymm4_3 ymm10_3;
sub ymm10_4 ymm4_4 ymm10_4;
sub ymm10_5 ymm4_5 ymm10_5;
sub ymm10_6 ymm4_6 ymm10_6;
sub ymm10_7 ymm4_7 ymm10_7;
sub ymm10_8 ymm4_8 ymm10_8;
sub ymm10_9 ymm4_9 ymm10_9;
sub ymm10_a ymm4_a ymm10_a;
sub ymm10_b ymm4_b ymm10_b;
sub ymm10_c ymm4_c ymm10_c;
sub ymm10_d ymm4_d ymm10_d;
sub ymm10_e ymm4_e ymm10_e;
sub ymm10_f ymm4_f ymm10_f;
(* vpaddw %ymm11,%ymm5,%ymm9                       #! PC = 0x555555556eea *)
add ymm9_0 ymm5_0 ymm11_0;
add ymm9_1 ymm5_1 ymm11_1;
add ymm9_2 ymm5_2 ymm11_2;
add ymm9_3 ymm5_3 ymm11_3;
add ymm9_4 ymm5_4 ymm11_4;
add ymm9_5 ymm5_5 ymm11_5;
add ymm9_6 ymm5_6 ymm11_6;
add ymm9_7 ymm5_7 ymm11_7;
add ymm9_8 ymm5_8 ymm11_8;
add ymm9_9 ymm5_9 ymm11_9;
add ymm9_a ymm5_a ymm11_a;
add ymm9_b ymm5_b ymm11_b;
add ymm9_c ymm5_c ymm11_c;
add ymm9_d ymm5_d ymm11_d;
add ymm9_e ymm5_e ymm11_e;
add ymm9_f ymm5_f ymm11_f;
(* vpsubw %ymm11,%ymm5,%ymm11                      #! PC = 0x555555556eef *)
sub ymm11_0 ymm5_0 ymm11_0;
sub ymm11_1 ymm5_1 ymm11_1;
sub ymm11_2 ymm5_2 ymm11_2;
sub ymm11_3 ymm5_3 ymm11_3;
sub ymm11_4 ymm5_4 ymm11_4;
sub ymm11_5 ymm5_5 ymm11_5;
sub ymm11_6 ymm5_6 ymm11_6;
sub ymm11_7 ymm5_7 ymm11_7;
sub ymm11_8 ymm5_8 ymm11_8;
sub ymm11_9 ymm5_9 ymm11_9;
sub ymm11_a ymm5_a ymm11_a;
sub ymm11_b ymm5_b ymm11_b;
sub ymm11_c ymm5_c ymm11_c;
sub ymm11_d ymm5_d ymm11_d;
sub ymm11_e ymm5_e ymm11_e;
sub ymm11_f ymm5_f ymm11_f;
(* vpaddw %ymm6,%ymm4,%ymm3                        #! PC = 0x555555556ef4 *)
add ymm3_0 ymm4_0 ymm6_0;
add ymm3_1 ymm4_1 ymm6_1;
add ymm3_2 ymm4_2 ymm6_2;
add ymm3_3 ymm4_3 ymm6_3;
add ymm3_4 ymm4_4 ymm6_4;
add ymm3_5 ymm4_5 ymm6_5;
add ymm3_6 ymm4_6 ymm6_6;
add ymm3_7 ymm4_7 ymm6_7;
add ymm3_8 ymm4_8 ymm6_8;
add ymm3_9 ymm4_9 ymm6_9;
add ymm3_a ymm4_a ymm6_a;
add ymm3_b ymm4_b ymm6_b;
add ymm3_c ymm4_c ymm6_c;
add ymm3_d ymm4_d ymm6_d;
add ymm3_e ymm4_e ymm6_e;
add ymm3_f ymm4_f ymm6_f;
(* vpsubw %ymm6,%ymm4,%ymm6                        #! PC = 0x555555556ef8 *)
sub ymm6_0 ymm4_0 ymm6_0;
sub ymm6_1 ymm4_1 ymm6_1;
sub ymm6_2 ymm4_2 ymm6_2;
sub ymm6_3 ymm4_3 ymm6_3;
sub ymm6_4 ymm4_4 ymm6_4;
sub ymm6_5 ymm4_5 ymm6_5;
sub ymm6_6 ymm4_6 ymm6_6;
sub ymm6_7 ymm4_7 ymm6_7;
sub ymm6_8 ymm4_8 ymm6_8;
sub ymm6_9 ymm4_9 ymm6_9;
sub ymm6_a ymm4_a ymm6_a;
sub ymm6_b ymm4_b ymm6_b;
sub ymm6_c ymm4_c ymm6_c;
sub ymm6_d ymm4_d ymm6_d;
sub ymm6_e ymm4_e ymm6_e;
sub ymm6_f ymm4_f ymm6_f;
(* vpaddw %ymm7,%ymm5,%ymm4                        #! PC = 0x555555556efc *)
add ymm4_0 ymm5_0 ymm7_0;
add ymm4_1 ymm5_1 ymm7_1;
add ymm4_2 ymm5_2 ymm7_2;
add ymm4_3 ymm5_3 ymm7_3;
add ymm4_4 ymm5_4 ymm7_4;
add ymm4_5 ymm5_5 ymm7_5;
add ymm4_6 ymm5_6 ymm7_6;
add ymm4_7 ymm5_7 ymm7_7;
add ymm4_8 ymm5_8 ymm7_8;
add ymm4_9 ymm5_9 ymm7_9;
add ymm4_a ymm5_a ymm7_a;
add ymm4_b ymm5_b ymm7_b;
add ymm4_c ymm5_c ymm7_c;
add ymm4_d ymm5_d ymm7_d;
add ymm4_e ymm5_e ymm7_e;
add ymm4_f ymm5_f ymm7_f;
(* vpsubw %ymm7,%ymm5,%ymm7                        #! PC = 0x555555556f00 *)
sub ymm7_0 ymm5_0 ymm7_0;
sub ymm7_1 ymm5_1 ymm7_1;
sub ymm7_2 ymm5_2 ymm7_2;
sub ymm7_3 ymm5_3 ymm7_3;
sub ymm7_4 ymm5_4 ymm7_4;
sub ymm7_5 ymm5_5 ymm7_5;
sub ymm7_6 ymm5_6 ymm7_6;
sub ymm7_7 ymm5_7 ymm7_7;
sub ymm7_8 ymm5_8 ymm7_8;
sub ymm7_9 ymm5_9 ymm7_9;
sub ymm7_a ymm5_a ymm7_a;
sub ymm7_b ymm5_b ymm7_b;
sub ymm7_c ymm5_c ymm7_c;
sub ymm7_d ymm5_d ymm7_d;
sub ymm7_e ymm5_e ymm7_e;
sub ymm7_f ymm5_f ymm7_f;
(* vpmullw %ymm1,%ymm7,%ymm5                       #! PC = 0x555555556f04 *)
smull mulHymm7_0 mulL_0 ymm1_0 ymm7_0;
smull mulHymm7_1 mulL_1 ymm1_1 ymm7_1;
smull mulHymm7_2 mulL_2 ymm1_2 ymm7_2;
smull mulHymm7_3 mulL_3 ymm1_3 ymm7_3;
smull mulHymm7_4 mulL_4 ymm1_4 ymm7_4;
smull mulHymm7_5 mulL_5 ymm1_5 ymm7_5;
smull mulHymm7_6 mulL_6 ymm1_6 ymm7_6;
smull mulHymm7_7 mulL_7 ymm1_7 ymm7_7;
smull mulHymm7_8 mulL_8 ymm1_8 ymm7_8;
smull mulHymm7_9 mulL_9 ymm1_9 ymm7_9;
smull mulHymm7_a mulL_a ymm1_a ymm7_a;
smull mulHymm7_b mulL_b ymm1_b ymm7_b;
smull mulHymm7_c mulL_c ymm1_c ymm7_c;
smull mulHymm7_d mulL_d ymm1_d ymm7_d;
smull mulHymm7_e mulL_e ymm1_e ymm7_e;
smull mulHymm7_f mulL_f ymm1_f ymm7_f;
cast ymm5_0@sint16 mulL_0;
cast ymm5_1@sint16 mulL_1;
cast ymm5_2@sint16 mulL_2;
cast ymm5_3@sint16 mulL_3;
cast ymm5_4@sint16 mulL_4;
cast ymm5_5@sint16 mulL_5;
cast ymm5_6@sint16 mulL_6;
cast ymm5_7@sint16 mulL_7;
cast ymm5_8@sint16 mulL_8;
cast ymm5_9@sint16 mulL_9;
cast ymm5_a@sint16 mulL_a;
cast ymm5_b@sint16 mulL_b;
cast ymm5_c@sint16 mulL_c;
cast ymm5_d@sint16 mulL_d;
cast ymm5_e@sint16 mulL_e;
cast ymm5_f@sint16 mulL_f;
(* vpmulhw %ymm2,%ymm7,%ymm7                       #! PC = 0x555555556f08 *)
smull mulH_0 mulLymm7_0 ymm7_0 ymm2_0;
smull mulH_1 mulLymm7_1 ymm7_1 ymm2_1;
smull mulH_2 mulLymm7_2 ymm7_2 ymm2_2;
smull mulH_3 mulLymm7_3 ymm7_3 ymm2_3;
smull mulH_4 mulLymm7_4 ymm7_4 ymm2_4;
smull mulH_5 mulLymm7_5 ymm7_5 ymm2_5;
smull mulH_6 mulLymm7_6 ymm7_6 ymm2_6;
smull mulH_7 mulLymm7_7 ymm7_7 ymm2_7;
smull mulH_8 mulLymm7_8 ymm7_8 ymm2_8;
smull mulH_9 mulLymm7_9 ymm7_9 ymm2_9;
smull mulH_a mulLymm7_a ymm7_a ymm2_a;
smull mulH_b mulLymm7_b ymm7_b ymm2_b;
smull mulH_c mulLymm7_c ymm7_c ymm2_c;
smull mulH_d mulLymm7_d ymm7_d ymm2_d;
smull mulH_e mulLymm7_e ymm7_e ymm2_e;
smull mulH_f mulLymm7_f ymm7_f ymm2_f;
mov ymm7_0 mulH_0;
mov ymm7_1 mulH_1;
mov ymm7_2 mulH_2;
mov ymm7_3 mulH_3;
mov ymm7_4 mulH_4;
mov ymm7_5 mulH_5;
mov ymm7_6 mulH_6;
mov ymm7_7 mulH_7;
mov ymm7_8 mulH_8;
mov ymm7_9 mulH_9;
mov ymm7_a mulH_a;
mov ymm7_b mulH_b;
mov ymm7_c mulH_c;
mov ymm7_d mulH_d;
mov ymm7_e mulH_e;
mov ymm7_f mulH_f;
(* vpmulhw %ymm0,%ymm5,%ymm5                       #! PC = 0x555555556f0c *)
smull mulH_0 red_0 ymm5_0 ymm0_0;
assert true && red_0 = mulLymm7_0;
assume red_0 = mulLymm7_0 && true;
smull mulH_1 red_1 ymm5_1 ymm0_1;
assert true && red_1 = mulLymm7_1;
assume red_1 = mulLymm7_1 && true;
smull mulH_2 red_2 ymm5_2 ymm0_2;
assert true && red_2 = mulLymm7_2;
assume red_2 = mulLymm7_2 && true;
smull mulH_3 red_3 ymm5_3 ymm0_3;
assert true && red_3 = mulLymm7_3;
assume red_3 = mulLymm7_3 && true;
smull mulH_4 red_4 ymm5_4 ymm0_4;
assert true && red_4 = mulLymm7_4;
assume red_4 = mulLymm7_4 && true;
smull mulH_5 red_5 ymm5_5 ymm0_5;
assert true && red_5 = mulLymm7_5;
assume red_5 = mulLymm7_5 && true;
smull mulH_6 red_6 ymm5_6 ymm0_6;
assert true && red_6 = mulLymm7_6;
assume red_6 = mulLymm7_6 && true;
smull mulH_7 red_7 ymm5_7 ymm0_7;
assert true && red_7 = mulLymm7_7;
assume red_7 = mulLymm7_7 && true;
smull mulH_8 red_8 ymm5_8 ymm0_8;
assert true && red_8 = mulLymm7_8;
assume red_8 = mulLymm7_8 && true;
smull mulH_9 red_9 ymm5_9 ymm0_9;
assert true && red_9 = mulLymm7_9;
assume red_9 = mulLymm7_9 && true;
smull mulH_a red_a ymm5_a ymm0_a;
assert true && red_a = mulLymm7_a;
assume red_a = mulLymm7_a && true;
smull mulH_b red_b ymm5_b ymm0_b;
assert true && red_b = mulLymm7_b;
assume red_b = mulLymm7_b && true;
smull mulH_c red_c ymm5_c ymm0_c;
assert true && red_c = mulLymm7_c;
assume red_c = mulLymm7_c && true;
smull mulH_d red_d ymm5_d ymm0_d;
assert true && red_d = mulLymm7_d;
assume red_d = mulLymm7_d && true;
smull mulH_e red_e ymm5_e ymm0_e;
assert true && red_e = mulLymm7_e;
assume red_e = mulLymm7_e && true;
smull mulH_f red_f ymm5_f ymm0_f;
assert true && red_f = mulLymm7_f;
assume red_f = mulLymm7_f && true;
mov ymm5_0 mulH_0;
mov ymm5_1 mulH_1;
mov ymm5_2 mulH_2;
mov ymm5_3 mulH_3;
mov ymm5_4 mulH_4;
mov ymm5_5 mulH_5;
mov ymm5_6 mulH_6;
mov ymm5_7 mulH_7;
mov ymm5_8 mulH_8;
mov ymm5_9 mulH_9;
mov ymm5_a mulH_a;
mov ymm5_b mulH_b;
mov ymm5_c mulH_c;
mov ymm5_d mulH_d;
mov ymm5_e mulH_e;
mov ymm5_f mulH_f;
(* vpsubw %ymm5,%ymm7,%ymm7                        #! PC = 0x555555556f10 *)
sub ymm7_0 ymm7_0 ymm5_0;
sub ymm7_1 ymm7_1 ymm5_1;
sub ymm7_2 ymm7_2 ymm5_2;
sub ymm7_3 ymm7_3 ymm5_3;
sub ymm7_4 ymm7_4 ymm5_4;
sub ymm7_5 ymm7_5 ymm5_5;
sub ymm7_6 ymm7_6 ymm5_6;
sub ymm7_7 ymm7_7 ymm5_7;
sub ymm7_8 ymm7_8 ymm5_8;
sub ymm7_9 ymm7_9 ymm5_9;
sub ymm7_a ymm7_a ymm5_a;
sub ymm7_b ymm7_b ymm5_b;
sub ymm7_c ymm7_c ymm5_c;
sub ymm7_d ymm7_d ymm5_d;
sub ymm7_e ymm7_e ymm5_e;
sub ymm7_f ymm7_f ymm5_f;
(* vpbroadcastw 0x104(%rdx),%ymm1                  #! EA = L0x555555561224; Value = 0xad9a276d0198f85c; PC = 0x555555556f14 *)
mov ymm1_0 L0x555555561224;
mov ymm1_1 L0x555555561224;
mov ymm1_2 L0x555555561224;
mov ymm1_3 L0x555555561224;
mov ymm1_4 L0x555555561224;
mov ymm1_5 L0x555555561224;
mov ymm1_6 L0x555555561224;
mov ymm1_7 L0x555555561224;
mov ymm1_8 L0x555555561224;
mov ymm1_9 L0x555555561224;
mov ymm1_a L0x555555561224;
mov ymm1_b L0x555555561224;
mov ymm1_c L0x555555561224;
mov ymm1_d L0x555555561224;
mov ymm1_e L0x555555561224;
mov ymm1_f L0x555555561224;
(* vpbroadcastw 0x304(%rdx),%ymm2                  #! EA = L0x555555561424; Value = 0xf19a096df198105c; PC = 0x555555556f1d *)
mov ymm2_0 L0x555555561424;
mov ymm2_1 L0x555555561424;
mov ymm2_2 L0x555555561424;
mov ymm2_3 L0x555555561424;
mov ymm2_4 L0x555555561424;
mov ymm2_5 L0x555555561424;
mov ymm2_6 L0x555555561424;
mov ymm2_7 L0x555555561424;
mov ymm2_8 L0x555555561424;
mov ymm2_9 L0x555555561424;
mov ymm2_a L0x555555561424;
mov ymm2_b L0x555555561424;
mov ymm2_c L0x555555561424;
mov ymm2_d L0x555555561424;
mov ymm2_e L0x555555561424;
mov ymm2_f L0x555555561424;
(* vpmullw %ymm1,%ymm9,%ymm5                       #! PC = 0x555555556f26 *)
smull mulHymm9_0 mulL_0 ymm1_0 ymm9_0;
smull mulHymm9_1 mulL_1 ymm1_1 ymm9_1;
smull mulHymm9_2 mulL_2 ymm1_2 ymm9_2;
smull mulHymm9_3 mulL_3 ymm1_3 ymm9_3;
smull mulHymm9_4 mulL_4 ymm1_4 ymm9_4;
smull mulHymm9_5 mulL_5 ymm1_5 ymm9_5;
smull mulHymm9_6 mulL_6 ymm1_6 ymm9_6;
smull mulHymm9_7 mulL_7 ymm1_7 ymm9_7;
smull mulHymm9_8 mulL_8 ymm1_8 ymm9_8;
smull mulHymm9_9 mulL_9 ymm1_9 ymm9_9;
smull mulHymm9_a mulL_a ymm1_a ymm9_a;
smull mulHymm9_b mulL_b ymm1_b ymm9_b;
smull mulHymm9_c mulL_c ymm1_c ymm9_c;
smull mulHymm9_d mulL_d ymm1_d ymm9_d;
smull mulHymm9_e mulL_e ymm1_e ymm9_e;
smull mulHymm9_f mulL_f ymm1_f ymm9_f;
cast ymm5_0@sint16 mulL_0;
cast ymm5_1@sint16 mulL_1;
cast ymm5_2@sint16 mulL_2;
cast ymm5_3@sint16 mulL_3;
cast ymm5_4@sint16 mulL_4;
cast ymm5_5@sint16 mulL_5;
cast ymm5_6@sint16 mulL_6;
cast ymm5_7@sint16 mulL_7;
cast ymm5_8@sint16 mulL_8;
cast ymm5_9@sint16 mulL_9;
cast ymm5_a@sint16 mulL_a;
cast ymm5_b@sint16 mulL_b;
cast ymm5_c@sint16 mulL_c;
cast ymm5_d@sint16 mulL_d;
cast ymm5_e@sint16 mulL_e;
cast ymm5_f@sint16 mulL_f;
(* vpmulhw %ymm2,%ymm9,%ymm9                       #! PC = 0x555555556f2a *)
smull mulH_0 mulLymm9_0 ymm9_0 ymm2_0;
smull mulH_1 mulLymm9_1 ymm9_1 ymm2_1;
smull mulH_2 mulLymm9_2 ymm9_2 ymm2_2;
smull mulH_3 mulLymm9_3 ymm9_3 ymm2_3;
smull mulH_4 mulLymm9_4 ymm9_4 ymm2_4;
smull mulH_5 mulLymm9_5 ymm9_5 ymm2_5;
smull mulH_6 mulLymm9_6 ymm9_6 ymm2_6;
smull mulH_7 mulLymm9_7 ymm9_7 ymm2_7;
smull mulH_8 mulLymm9_8 ymm9_8 ymm2_8;
smull mulH_9 mulLymm9_9 ymm9_9 ymm2_9;
smull mulH_a mulLymm9_a ymm9_a ymm2_a;
smull mulH_b mulLymm9_b ymm9_b ymm2_b;
smull mulH_c mulLymm9_c ymm9_c ymm2_c;
smull mulH_d mulLymm9_d ymm9_d ymm2_d;
smull mulH_e mulLymm9_e ymm9_e ymm2_e;
smull mulH_f mulLymm9_f ymm9_f ymm2_f;
mov ymm9_0 mulH_0;
mov ymm9_1 mulH_1;
mov ymm9_2 mulH_2;
mov ymm9_3 mulH_3;
mov ymm9_4 mulH_4;
mov ymm9_5 mulH_5;
mov ymm9_6 mulH_6;
mov ymm9_7 mulH_7;
mov ymm9_8 mulH_8;
mov ymm9_9 mulH_9;
mov ymm9_a mulH_a;
mov ymm9_b mulH_b;
mov ymm9_c mulH_c;
mov ymm9_d mulH_d;
mov ymm9_e mulH_e;
mov ymm9_f mulH_f;
(* vpmulhw %ymm0,%ymm5,%ymm5                       #! PC = 0x555555556f2e *)
smull mulH_0 red_0 ymm5_0 ymm0_0;
assert true && red_0 = mulLymm9_0;
assume red_0 = mulLymm9_0 && true;
smull mulH_1 red_1 ymm5_1 ymm0_1;
assert true && red_1 = mulLymm9_1;
assume red_1 = mulLymm9_1 && true;
smull mulH_2 red_2 ymm5_2 ymm0_2;
assert true && red_2 = mulLymm9_2;
assume red_2 = mulLymm9_2 && true;
smull mulH_3 red_3 ymm5_3 ymm0_3;
assert true && red_3 = mulLymm9_3;
assume red_3 = mulLymm9_3 && true;
smull mulH_4 red_4 ymm5_4 ymm0_4;
assert true && red_4 = mulLymm9_4;
assume red_4 = mulLymm9_4 && true;
smull mulH_5 red_5 ymm5_5 ymm0_5;
assert true && red_5 = mulLymm9_5;
assume red_5 = mulLymm9_5 && true;
smull mulH_6 red_6 ymm5_6 ymm0_6;
assert true && red_6 = mulLymm9_6;
assume red_6 = mulLymm9_6 && true;
smull mulH_7 red_7 ymm5_7 ymm0_7;
assert true && red_7 = mulLymm9_7;
assume red_7 = mulLymm9_7 && true;
smull mulH_8 red_8 ymm5_8 ymm0_8;
assert true && red_8 = mulLymm9_8;
assume red_8 = mulLymm9_8 && true;
smull mulH_9 red_9 ymm5_9 ymm0_9;
assert true && red_9 = mulLymm9_9;
assume red_9 = mulLymm9_9 && true;
smull mulH_a red_a ymm5_a ymm0_a;
assert true && red_a = mulLymm9_a;
assume red_a = mulLymm9_a && true;
smull mulH_b red_b ymm5_b ymm0_b;
assert true && red_b = mulLymm9_b;
assume red_b = mulLymm9_b && true;
smull mulH_c red_c ymm5_c ymm0_c;
assert true && red_c = mulLymm9_c;
assume red_c = mulLymm9_c && true;
smull mulH_d red_d ymm5_d ymm0_d;
assert true && red_d = mulLymm9_d;
assume red_d = mulLymm9_d && true;
smull mulH_e red_e ymm5_e ymm0_e;
assert true && red_e = mulLymm9_e;
assume red_e = mulLymm9_e && true;
smull mulH_f red_f ymm5_f ymm0_f;
assert true && red_f = mulLymm9_f;
assume red_f = mulLymm9_f && true;
mov ymm5_0 mulH_0;
mov ymm5_1 mulH_1;
mov ymm5_2 mulH_2;
mov ymm5_3 mulH_3;
mov ymm5_4 mulH_4;
mov ymm5_5 mulH_5;
mov ymm5_6 mulH_6;
mov ymm5_7 mulH_7;
mov ymm5_8 mulH_8;
mov ymm5_9 mulH_9;
mov ymm5_a mulH_a;
mov ymm5_b mulH_b;
mov ymm5_c mulH_c;
mov ymm5_d mulH_d;
mov ymm5_e mulH_e;
mov ymm5_f mulH_f;
(* vpsubw %ymm5,%ymm9,%ymm9                        #! PC = 0x555555556f32 *)
sub ymm9_0 ymm9_0 ymm5_0;
sub ymm9_1 ymm9_1 ymm5_1;
sub ymm9_2 ymm9_2 ymm5_2;
sub ymm9_3 ymm9_3 ymm5_3;
sub ymm9_4 ymm9_4 ymm5_4;
sub ymm9_5 ymm9_5 ymm5_5;
sub ymm9_6 ymm9_6 ymm5_6;
sub ymm9_7 ymm9_7 ymm5_7;
sub ymm9_8 ymm9_8 ymm5_8;
sub ymm9_9 ymm9_9 ymm5_9;
sub ymm9_a ymm9_a ymm5_a;
sub ymm9_b ymm9_b ymm5_b;
sub ymm9_c ymm9_c ymm5_c;
sub ymm9_d ymm9_d ymm5_d;
sub ymm9_e ymm9_e ymm5_e;
sub ymm9_f ymm9_f ymm5_f;
(* vpbroadcastw 0x106(%rdx),%ymm1                  #! EA = L0x555555561226; Value = 0x6f65ad9a276d0198; PC = 0x555555556f36 *)
mov ymm1_0 L0x555555561226;
mov ymm1_1 L0x555555561226;
mov ymm1_2 L0x555555561226;
mov ymm1_3 L0x555555561226;
mov ymm1_4 L0x555555561226;
mov ymm1_5 L0x555555561226;
mov ymm1_6 L0x555555561226;
mov ymm1_7 L0x555555561226;
mov ymm1_8 L0x555555561226;
mov ymm1_9 L0x555555561226;
mov ymm1_a L0x555555561226;
mov ymm1_b L0x555555561226;
mov ymm1_c L0x555555561226;
mov ymm1_d L0x555555561226;
mov ymm1_e L0x555555561226;
mov ymm1_f L0x555555561226;
(* vpbroadcastw 0x306(%rdx),%ymm2                  #! EA = L0x555555561426; Value = 0x0165f19a096df198; PC = 0x555555556f3f *)
mov ymm2_0 L0x555555561426;
mov ymm2_1 L0x555555561426;
mov ymm2_2 L0x555555561426;
mov ymm2_3 L0x555555561426;
mov ymm2_4 L0x555555561426;
mov ymm2_5 L0x555555561426;
mov ymm2_6 L0x555555561426;
mov ymm2_7 L0x555555561426;
mov ymm2_8 L0x555555561426;
mov ymm2_9 L0x555555561426;
mov ymm2_a L0x555555561426;
mov ymm2_b L0x555555561426;
mov ymm2_c L0x555555561426;
mov ymm2_d L0x555555561426;
mov ymm2_e L0x555555561426;
mov ymm2_f L0x555555561426;
(* vpmullw %ymm1,%ymm11,%ymm5                      #! PC = 0x555555556f48 *)
smull mulHymm11_0 mulL_0 ymm1_0 ymm11_0;
smull mulHymm11_1 mulL_1 ymm1_1 ymm11_1;
smull mulHymm11_2 mulL_2 ymm1_2 ymm11_2;
smull mulHymm11_3 mulL_3 ymm1_3 ymm11_3;
smull mulHymm11_4 mulL_4 ymm1_4 ymm11_4;
smull mulHymm11_5 mulL_5 ymm1_5 ymm11_5;
smull mulHymm11_6 mulL_6 ymm1_6 ymm11_6;
smull mulHymm11_7 mulL_7 ymm1_7 ymm11_7;
smull mulHymm11_8 mulL_8 ymm1_8 ymm11_8;
smull mulHymm11_9 mulL_9 ymm1_9 ymm11_9;
smull mulHymm11_a mulL_a ymm1_a ymm11_a;
smull mulHymm11_b mulL_b ymm1_b ymm11_b;
smull mulHymm11_c mulL_c ymm1_c ymm11_c;
smull mulHymm11_d mulL_d ymm1_d ymm11_d;
smull mulHymm11_e mulL_e ymm1_e ymm11_e;
smull mulHymm11_f mulL_f ymm1_f ymm11_f;
cast ymm5_0@sint16 mulL_0;
cast ymm5_1@sint16 mulL_1;
cast ymm5_2@sint16 mulL_2;
cast ymm5_3@sint16 mulL_3;
cast ymm5_4@sint16 mulL_4;
cast ymm5_5@sint16 mulL_5;
cast ymm5_6@sint16 mulL_6;
cast ymm5_7@sint16 mulL_7;
cast ymm5_8@sint16 mulL_8;
cast ymm5_9@sint16 mulL_9;
cast ymm5_a@sint16 mulL_a;
cast ymm5_b@sint16 mulL_b;
cast ymm5_c@sint16 mulL_c;
cast ymm5_d@sint16 mulL_d;
cast ymm5_e@sint16 mulL_e;
cast ymm5_f@sint16 mulL_f;
(* vpmulhw %ymm2,%ymm11,%ymm11                     #! PC = 0x555555556f4c *)
smull mulH_0 mulLymm11_0 ymm11_0 ymm2_0;
smull mulH_1 mulLymm11_1 ymm11_1 ymm2_1;
smull mulH_2 mulLymm11_2 ymm11_2 ymm2_2;
smull mulH_3 mulLymm11_3 ymm11_3 ymm2_3;
smull mulH_4 mulLymm11_4 ymm11_4 ymm2_4;
smull mulH_5 mulLymm11_5 ymm11_5 ymm2_5;
smull mulH_6 mulLymm11_6 ymm11_6 ymm2_6;
smull mulH_7 mulLymm11_7 ymm11_7 ymm2_7;
smull mulH_8 mulLymm11_8 ymm11_8 ymm2_8;
smull mulH_9 mulLymm11_9 ymm11_9 ymm2_9;
smull mulH_a mulLymm11_a ymm11_a ymm2_a;
smull mulH_b mulLymm11_b ymm11_b ymm2_b;
smull mulH_c mulLymm11_c ymm11_c ymm2_c;
smull mulH_d mulLymm11_d ymm11_d ymm2_d;
smull mulH_e mulLymm11_e ymm11_e ymm2_e;
smull mulH_f mulLymm11_f ymm11_f ymm2_f;
mov ymm11_0 mulH_0;
mov ymm11_1 mulH_1;
mov ymm11_2 mulH_2;
mov ymm11_3 mulH_3;
mov ymm11_4 mulH_4;
mov ymm11_5 mulH_5;
mov ymm11_6 mulH_6;
mov ymm11_7 mulH_7;
mov ymm11_8 mulH_8;
mov ymm11_9 mulH_9;
mov ymm11_a mulH_a;
mov ymm11_b mulH_b;
mov ymm11_c mulH_c;
mov ymm11_d mulH_d;
mov ymm11_e mulH_e;
mov ymm11_f mulH_f;
(* vpmulhw %ymm0,%ymm5,%ymm5                       #! PC = 0x555555556f50 *)
smull mulH_0 red_0 ymm5_0 ymm0_0;
assert true && red_0 = mulLymm11_0;
assume red_0 = mulLymm11_0 && true;
smull mulH_1 red_1 ymm5_1 ymm0_1;
assert true && red_1 = mulLymm11_1;
assume red_1 = mulLymm11_1 && true;
smull mulH_2 red_2 ymm5_2 ymm0_2;
assert true && red_2 = mulLymm11_2;
assume red_2 = mulLymm11_2 && true;
smull mulH_3 red_3 ymm5_3 ymm0_3;
assert true && red_3 = mulLymm11_3;
assume red_3 = mulLymm11_3 && true;
smull mulH_4 red_4 ymm5_4 ymm0_4;
assert true && red_4 = mulLymm11_4;
assume red_4 = mulLymm11_4 && true;
smull mulH_5 red_5 ymm5_5 ymm0_5;
assert true && red_5 = mulLymm11_5;
assume red_5 = mulLymm11_5 && true;
smull mulH_6 red_6 ymm5_6 ymm0_6;
assert true && red_6 = mulLymm11_6;
assume red_6 = mulLymm11_6 && true;
smull mulH_7 red_7 ymm5_7 ymm0_7;
assert true && red_7 = mulLymm11_7;
assume red_7 = mulLymm11_7 && true;
smull mulH_8 red_8 ymm5_8 ymm0_8;
assert true && red_8 = mulLymm11_8;
assume red_8 = mulLymm11_8 && true;
smull mulH_9 red_9 ymm5_9 ymm0_9;
assert true && red_9 = mulLymm11_9;
assume red_9 = mulLymm11_9 && true;
smull mulH_a red_a ymm5_a ymm0_a;
assert true && red_a = mulLymm11_a;
assume red_a = mulLymm11_a && true;
smull mulH_b red_b ymm5_b ymm0_b;
assert true && red_b = mulLymm11_b;
assume red_b = mulLymm11_b && true;
smull mulH_c red_c ymm5_c ymm0_c;
assert true && red_c = mulLymm11_c;
assume red_c = mulLymm11_c && true;
smull mulH_d red_d ymm5_d ymm0_d;
assert true && red_d = mulLymm11_d;
assume red_d = mulLymm11_d && true;
smull mulH_e red_e ymm5_e ymm0_e;
assert true && red_e = mulLymm11_e;
assume red_e = mulLymm11_e && true;
smull mulH_f red_f ymm5_f ymm0_f;
assert true && red_f = mulLymm11_f;
assume red_f = mulLymm11_f && true;
mov ymm5_0 mulH_0;
mov ymm5_1 mulH_1;
mov ymm5_2 mulH_2;
mov ymm5_3 mulH_3;
mov ymm5_4 mulH_4;
mov ymm5_5 mulH_5;
mov ymm5_6 mulH_6;
mov ymm5_7 mulH_7;
mov ymm5_8 mulH_8;
mov ymm5_9 mulH_9;
mov ymm5_a mulH_a;
mov ymm5_b mulH_b;
mov ymm5_c mulH_c;
mov ymm5_d mulH_d;
mov ymm5_e mulH_e;
mov ymm5_f mulH_f;
(* vpsubw %ymm5,%ymm11,%ymm11                      #! PC = 0x555555556f54 *)
sub ymm11_0 ymm11_0 ymm5_0;
sub ymm11_1 ymm11_1 ymm5_1;
sub ymm11_2 ymm11_2 ymm5_2;
sub ymm11_3 ymm11_3 ymm5_3;
sub ymm11_4 ymm11_4 ymm5_4;
sub ymm11_5 ymm11_5 ymm5_5;
sub ymm11_6 ymm11_6 ymm5_6;
sub ymm11_7 ymm11_7 ymm5_7;
sub ymm11_8 ymm11_8 ymm5_8;
sub ymm11_9 ymm11_9 ymm5_9;
sub ymm11_a ymm11_a ymm5_a;
sub ymm11_b ymm11_b ymm5_b;
sub ymm11_c ymm11_c ymm5_c;
sub ymm11_d ymm11_d ymm5_d;
sub ymm11_e ymm11_e ymm5_e;
sub ymm11_f ymm11_f ymm5_f;
(* vpaddw %ymm4,%ymm3,%ymm5                        #! PC = 0x555555556f58 *)
add ymm5_0 ymm3_0 ymm4_0;
add ymm5_1 ymm3_1 ymm4_1;
add ymm5_2 ymm3_2 ymm4_2;
add ymm5_3 ymm3_3 ymm4_3;
add ymm5_4 ymm3_4 ymm4_4;
add ymm5_5 ymm3_5 ymm4_5;
add ymm5_6 ymm3_6 ymm4_6;
add ymm5_7 ymm3_7 ymm4_7;
add ymm5_8 ymm3_8 ymm4_8;
add ymm5_9 ymm3_9 ymm4_9;
add ymm5_a ymm3_a ymm4_a;
add ymm5_b ymm3_b ymm4_b;
add ymm5_c ymm3_c ymm4_c;
add ymm5_d ymm3_d ymm4_d;
add ymm5_e ymm3_e ymm4_e;
add ymm5_f ymm3_f ymm4_f;
(* vpsubw %ymm4,%ymm3,%ymm4                        #! PC = 0x555555556f5c *)
sub ymm4_0 ymm3_0 ymm4_0;
sub ymm4_1 ymm3_1 ymm4_1;
sub ymm4_2 ymm3_2 ymm4_2;
sub ymm4_3 ymm3_3 ymm4_3;
sub ymm4_4 ymm3_4 ymm4_4;
sub ymm4_5 ymm3_5 ymm4_5;
sub ymm4_6 ymm3_6 ymm4_6;
sub ymm4_7 ymm3_7 ymm4_7;
sub ymm4_8 ymm3_8 ymm4_8;
sub ymm4_9 ymm3_9 ymm4_9;
sub ymm4_a ymm3_a ymm4_a;
sub ymm4_b ymm3_b ymm4_b;
sub ymm4_c ymm3_c ymm4_c;
sub ymm4_d ymm3_d ymm4_d;
sub ymm4_e ymm3_e ymm4_e;
sub ymm4_f ymm3_f ymm4_f;
(* vpaddw %ymm7,%ymm6,%ymm3                        #! PC = 0x555555556f60 *)
add ymm3_0 ymm6_0 ymm7_0;
add ymm3_1 ymm6_1 ymm7_1;
add ymm3_2 ymm6_2 ymm7_2;
add ymm3_3 ymm6_3 ymm7_3;
add ymm3_4 ymm6_4 ymm7_4;
add ymm3_5 ymm6_5 ymm7_5;
add ymm3_6 ymm6_6 ymm7_6;
add ymm3_7 ymm6_7 ymm7_7;
add ymm3_8 ymm6_8 ymm7_8;
add ymm3_9 ymm6_9 ymm7_9;
add ymm3_a ymm6_a ymm7_a;
add ymm3_b ymm6_b ymm7_b;
add ymm3_c ymm6_c ymm7_c;
add ymm3_d ymm6_d ymm7_d;
add ymm3_e ymm6_e ymm7_e;
add ymm3_f ymm6_f ymm7_f;
(* vpsubw %ymm7,%ymm6,%ymm7                        #! PC = 0x555555556f64 *)
sub ymm7_0 ymm6_0 ymm7_0;
sub ymm7_1 ymm6_1 ymm7_1;
sub ymm7_2 ymm6_2 ymm7_2;
sub ymm7_3 ymm6_3 ymm7_3;
sub ymm7_4 ymm6_4 ymm7_4;
sub ymm7_5 ymm6_5 ymm7_5;
sub ymm7_6 ymm6_6 ymm7_6;
sub ymm7_7 ymm6_7 ymm7_7;
sub ymm7_8 ymm6_8 ymm7_8;
sub ymm7_9 ymm6_9 ymm7_9;
sub ymm7_a ymm6_a ymm7_a;
sub ymm7_b ymm6_b ymm7_b;
sub ymm7_c ymm6_c ymm7_c;
sub ymm7_d ymm6_d ymm7_d;
sub ymm7_e ymm6_e ymm7_e;
sub ymm7_f ymm6_f ymm7_f;
(* vpaddw %ymm9,%ymm8,%ymm6                        #! PC = 0x555555556f68 *)
add ymm6_0 ymm8_0 ymm9_0;
add ymm6_1 ymm8_1 ymm9_1;
add ymm6_2 ymm8_2 ymm9_2;
add ymm6_3 ymm8_3 ymm9_3;
add ymm6_4 ymm8_4 ymm9_4;
add ymm6_5 ymm8_5 ymm9_5;
add ymm6_6 ymm8_6 ymm9_6;
add ymm6_7 ymm8_7 ymm9_7;
add ymm6_8 ymm8_8 ymm9_8;
add ymm6_9 ymm8_9 ymm9_9;
add ymm6_a ymm8_a ymm9_a;
add ymm6_b ymm8_b ymm9_b;
add ymm6_c ymm8_c ymm9_c;
add ymm6_d ymm8_d ymm9_d;
add ymm6_e ymm8_e ymm9_e;
add ymm6_f ymm8_f ymm9_f;
(* vpsubw %ymm9,%ymm8,%ymm9                        #! PC = 0x555555556f6d *)
sub ymm9_0 ymm8_0 ymm9_0;
sub ymm9_1 ymm8_1 ymm9_1;
sub ymm9_2 ymm8_2 ymm9_2;
sub ymm9_3 ymm8_3 ymm9_3;
sub ymm9_4 ymm8_4 ymm9_4;
sub ymm9_5 ymm8_5 ymm9_5;
sub ymm9_6 ymm8_6 ymm9_6;
sub ymm9_7 ymm8_7 ymm9_7;
sub ymm9_8 ymm8_8 ymm9_8;
sub ymm9_9 ymm8_9 ymm9_9;
sub ymm9_a ymm8_a ymm9_a;
sub ymm9_b ymm8_b ymm9_b;
sub ymm9_c ymm8_c ymm9_c;
sub ymm9_d ymm8_d ymm9_d;
sub ymm9_e ymm8_e ymm9_e;
sub ymm9_f ymm8_f ymm9_f;
(* vpaddw %ymm11,%ymm10,%ymm8                      #! PC = 0x555555556f72 *)
add ymm8_0 ymm10_0 ymm11_0;
add ymm8_1 ymm10_1 ymm11_1;
add ymm8_2 ymm10_2 ymm11_2;
add ymm8_3 ymm10_3 ymm11_3;
add ymm8_4 ymm10_4 ymm11_4;
add ymm8_5 ymm10_5 ymm11_5;
add ymm8_6 ymm10_6 ymm11_6;
add ymm8_7 ymm10_7 ymm11_7;
add ymm8_8 ymm10_8 ymm11_8;
add ymm8_9 ymm10_9 ymm11_9;
add ymm8_a ymm10_a ymm11_a;
add ymm8_b ymm10_b ymm11_b;
add ymm8_c ymm10_c ymm11_c;
add ymm8_d ymm10_d ymm11_d;
add ymm8_e ymm10_e ymm11_e;
add ymm8_f ymm10_f ymm11_f;
(* vpsubw %ymm11,%ymm10,%ymm11                     #! PC = 0x555555556f77 *)
sub ymm11_0 ymm10_0 ymm11_0;
sub ymm11_1 ymm10_1 ymm11_1;
sub ymm11_2 ymm10_2 ymm11_2;
sub ymm11_3 ymm10_3 ymm11_3;
sub ymm11_4 ymm10_4 ymm11_4;
sub ymm11_5 ymm10_5 ymm11_5;
sub ymm11_6 ymm10_6 ymm11_6;
sub ymm11_7 ymm10_7 ymm11_7;
sub ymm11_8 ymm10_8 ymm11_8;
sub ymm11_9 ymm10_9 ymm11_9;
sub ymm11_a ymm10_a ymm11_a;
sub ymm11_b ymm10_b ymm11_b;
sub ymm11_c ymm10_c ymm11_c;
sub ymm11_d ymm10_d ymm11_d;
sub ymm11_e ymm10_e ymm11_e;
sub ymm11_f ymm10_f ymm11_f;
(* vmovdqa %ymm5,0x40(%rdi)                        #! EA = L0x7fffffffd320; PC = 0x555555556f7c *)
mov L0x7fffffffd320 ymm5_0;
mov L0x7fffffffd322 ymm5_1;
mov L0x7fffffffd324 ymm5_2;
mov L0x7fffffffd326 ymm5_3;
mov L0x7fffffffd328 ymm5_4;
mov L0x7fffffffd32a ymm5_5;
mov L0x7fffffffd32c ymm5_6;
mov L0x7fffffffd32e ymm5_7;
mov L0x7fffffffd330 ymm5_8;
mov L0x7fffffffd332 ymm5_9;
mov L0x7fffffffd334 ymm5_a;
mov L0x7fffffffd336 ymm5_b;
mov L0x7fffffffd338 ymm5_c;
mov L0x7fffffffd33a ymm5_d;
mov L0x7fffffffd33c ymm5_e;
mov L0x7fffffffd33e ymm5_f;
(* vmovdqa %ymm4,0x140(%rdi)                       #! EA = L0x7fffffffd420; PC = 0x555555556f81 *)
mov L0x7fffffffd420 ymm4_0;
mov L0x7fffffffd422 ymm4_1;
mov L0x7fffffffd424 ymm4_2;
mov L0x7fffffffd426 ymm4_3;
mov L0x7fffffffd428 ymm4_4;
mov L0x7fffffffd42a ymm4_5;
mov L0x7fffffffd42c ymm4_6;
mov L0x7fffffffd42e ymm4_7;
mov L0x7fffffffd430 ymm4_8;
mov L0x7fffffffd432 ymm4_9;
mov L0x7fffffffd434 ymm4_a;
mov L0x7fffffffd436 ymm4_b;
mov L0x7fffffffd438 ymm4_c;
mov L0x7fffffffd43a ymm4_d;
mov L0x7fffffffd43c ymm4_e;
mov L0x7fffffffd43e ymm4_f;
(* vmovdqa %ymm3,0x240(%rdi)                       #! EA = L0x7fffffffd520; PC = 0x555555556f89 *)
mov L0x7fffffffd520 ymm3_0;
mov L0x7fffffffd522 ymm3_1;
mov L0x7fffffffd524 ymm3_2;
mov L0x7fffffffd526 ymm3_3;
mov L0x7fffffffd528 ymm3_4;
mov L0x7fffffffd52a ymm3_5;
mov L0x7fffffffd52c ymm3_6;
mov L0x7fffffffd52e ymm3_7;
mov L0x7fffffffd530 ymm3_8;
mov L0x7fffffffd532 ymm3_9;
mov L0x7fffffffd534 ymm3_a;
mov L0x7fffffffd536 ymm3_b;
mov L0x7fffffffd538 ymm3_c;
mov L0x7fffffffd53a ymm3_d;
mov L0x7fffffffd53c ymm3_e;
mov L0x7fffffffd53e ymm3_f;
(* vmovdqa %ymm7,0x340(%rdi)                       #! EA = L0x7fffffffd620; PC = 0x555555556f91 *)
mov L0x7fffffffd620 ymm7_0;
mov L0x7fffffffd622 ymm7_1;
mov L0x7fffffffd624 ymm7_2;
mov L0x7fffffffd626 ymm7_3;
mov L0x7fffffffd628 ymm7_4;
mov L0x7fffffffd62a ymm7_5;
mov L0x7fffffffd62c ymm7_6;
mov L0x7fffffffd62e ymm7_7;
mov L0x7fffffffd630 ymm7_8;
mov L0x7fffffffd632 ymm7_9;
mov L0x7fffffffd634 ymm7_a;
mov L0x7fffffffd636 ymm7_b;
mov L0x7fffffffd638 ymm7_c;
mov L0x7fffffffd63a ymm7_d;
mov L0x7fffffffd63c ymm7_e;
mov L0x7fffffffd63e ymm7_f;
(* vmovdqa %ymm6,0x440(%rdi)                       #! EA = L0x7fffffffd720; PC = 0x555555556f99 *)
mov L0x7fffffffd720 ymm6_0;
mov L0x7fffffffd722 ymm6_1;
mov L0x7fffffffd724 ymm6_2;
mov L0x7fffffffd726 ymm6_3;
mov L0x7fffffffd728 ymm6_4;
mov L0x7fffffffd72a ymm6_5;
mov L0x7fffffffd72c ymm6_6;
mov L0x7fffffffd72e ymm6_7;
mov L0x7fffffffd730 ymm6_8;
mov L0x7fffffffd732 ymm6_9;
mov L0x7fffffffd734 ymm6_a;
mov L0x7fffffffd736 ymm6_b;
mov L0x7fffffffd738 ymm6_c;
mov L0x7fffffffd73a ymm6_d;
mov L0x7fffffffd73c ymm6_e;
mov L0x7fffffffd73e ymm6_f;
(* vmovdqa %ymm9,0x540(%rdi)                       #! EA = L0x7fffffffd820; PC = 0x555555556fa1 *)
mov L0x7fffffffd820 ymm9_0;
mov L0x7fffffffd822 ymm9_1;
mov L0x7fffffffd824 ymm9_2;
mov L0x7fffffffd826 ymm9_3;
mov L0x7fffffffd828 ymm9_4;
mov L0x7fffffffd82a ymm9_5;
mov L0x7fffffffd82c ymm9_6;
mov L0x7fffffffd82e ymm9_7;
mov L0x7fffffffd830 ymm9_8;
mov L0x7fffffffd832 ymm9_9;
mov L0x7fffffffd834 ymm9_a;
mov L0x7fffffffd836 ymm9_b;
mov L0x7fffffffd838 ymm9_c;
mov L0x7fffffffd83a ymm9_d;
mov L0x7fffffffd83c ymm9_e;
mov L0x7fffffffd83e ymm9_f;
(* vmovdqa %ymm8,0x640(%rdi)                       #! EA = L0x7fffffffd920; PC = 0x555555556fa9 *)
mov L0x7fffffffd920 ymm8_0;
mov L0x7fffffffd922 ymm8_1;
mov L0x7fffffffd924 ymm8_2;
mov L0x7fffffffd926 ymm8_3;
mov L0x7fffffffd928 ymm8_4;
mov L0x7fffffffd92a ymm8_5;
mov L0x7fffffffd92c ymm8_6;
mov L0x7fffffffd92e ymm8_7;
mov L0x7fffffffd930 ymm8_8;
mov L0x7fffffffd932 ymm8_9;
mov L0x7fffffffd934 ymm8_a;
mov L0x7fffffffd936 ymm8_b;
mov L0x7fffffffd938 ymm8_c;
mov L0x7fffffffd93a ymm8_d;
mov L0x7fffffffd93c ymm8_e;
mov L0x7fffffffd93e ymm8_f;
(* vmovdqa %ymm11,0x740(%rdi)                      #! EA = L0x7fffffffda20; PC = 0x555555556fb1 *)
mov L0x7fffffffda20 ymm11_0;
mov L0x7fffffffda22 ymm11_1;
mov L0x7fffffffda24 ymm11_2;
mov L0x7fffffffda26 ymm11_3;
mov L0x7fffffffda28 ymm11_4;
mov L0x7fffffffda2a ymm11_5;
mov L0x7fffffffda2c ymm11_6;
mov L0x7fffffffda2e ymm11_7;
mov L0x7fffffffda30 ymm11_8;
mov L0x7fffffffda32 ymm11_9;
mov L0x7fffffffda34 ymm11_a;
mov L0x7fffffffda36 ymm11_b;
mov L0x7fffffffda38 ymm11_c;
mov L0x7fffffffda3a ymm11_d;
mov L0x7fffffffda3c ymm11_e;
mov L0x7fffffffda3e ymm11_f;


(**************** LEVELS 0-2, 2 *****************)


(**************** CUT  37,  0 *****************)

ecut 
  and [
eqmod (c020*x** 32+c021*x** 33+c022*x** 34+c023*x** 35+
       c024*x** 36+c025*x** 37+c026*x** 38+c027*x** 39+
       c028*x** 40+c029*x** 41+c02a*x** 42+c02b*x** 43+
       c02c*x** 44+c02d*x** 45+c02e*x** 46+c02f*x** 47+
       c0a0*x**160+c0a1*x**161+c0a2*x**162+c0a3*x**163+
       c0a4*x**164+c0a5*x**165+c0a6*x**166+c0a7*x**167+
       c0a8*x**168+c0a9*x**169+c0aa*x**170+c0ab*x**171+
       c0ac*x**172+c0ad*x**173+c0ae*x**174+c0af*x**175+
       c120*x**288+c121*x**289+c122*x**290+c123*x**291+
       c124*x**292+c125*x**293+c126*x**294+c127*x**295+
       c128*x**296+c129*x**297+c12a*x**298+c12b*x**299+
       c12c*x**300+c12d*x**301+c12e*x**302+c12f*x**303+
       c1a0*x**416+c1a1*x**417+c1a2*x**418+c1a3*x**419+
       c1a4*x**420+c1a5*x**421+c1a6*x**422+c1a7*x**423+
       c1a8*x**424+c1a9*x**425+c1aa*x**426+c1ab*x**427+
       c1ac*x**428+c1ad*x**429+c1ae*x**430+c1af*x**431)
      (L0x7fffffffd320*x**32+L0x7fffffffd322*x**33+L0x7fffffffd324*x**34+
       L0x7fffffffd326*x**35+L0x7fffffffd328*x**36+L0x7fffffffd32a*x**37+
       L0x7fffffffd32c*x**38+L0x7fffffffd32e*x**39+L0x7fffffffd330*x**40+
       L0x7fffffffd332*x**41+L0x7fffffffd334*x**42+L0x7fffffffd336*x**43+
       L0x7fffffffd338*x**44+L0x7fffffffd33a*x**45+L0x7fffffffd33c*x**46+
       L0x7fffffffd33e*x**47)
      [10753, x**128 - 1],
eqmod (c020*x** 32+c021*x** 33+c022*x** 34+c023*x** 35+
       c024*x** 36+c025*x** 37+c026*x** 38+c027*x** 39+
       c028*x** 40+c029*x** 41+c02a*x** 42+c02b*x** 43+
       c02c*x** 44+c02d*x** 45+c02e*x** 46+c02f*x** 47+
       c0a0*x**160+c0a1*x**161+c0a2*x**162+c0a3*x**163+
       c0a4*x**164+c0a5*x**165+c0a6*x**166+c0a7*x**167+
       c0a8*x**168+c0a9*x**169+c0aa*x**170+c0ab*x**171+
       c0ac*x**172+c0ad*x**173+c0ae*x**174+c0af*x**175+
       c120*x**288+c121*x**289+c122*x**290+c123*x**291+
       c124*x**292+c125*x**293+c126*x**294+c127*x**295+
       c128*x**296+c129*x**297+c12a*x**298+c12b*x**299+
       c12c*x**300+c12d*x**301+c12e*x**302+c12f*x**303+
       c1a0*x**416+c1a1*x**417+c1a2*x**418+c1a3*x**419+
       c1a4*x**420+c1a5*x**421+c1a6*x**422+c1a7*x**423+
       c1a8*x**424+c1a9*x**425+c1aa*x**426+c1ab*x**427+
       c1ac*x**428+c1ad*x**429+c1ae*x**430+c1af*x**431)
      (L0x7fffffffd420*x**32+L0x7fffffffd422*x**33+L0x7fffffffd424*x**34+
       L0x7fffffffd426*x**35+L0x7fffffffd428*x**36+L0x7fffffffd42a*x**37+
       L0x7fffffffd42c*x**38+L0x7fffffffd42e*x**39+L0x7fffffffd430*x**40+
       L0x7fffffffd432*x**41+L0x7fffffffd434*x**42+L0x7fffffffd436*x**43+
       L0x7fffffffd438*x**44+L0x7fffffffd43a*x**45+L0x7fffffffd43c*x**46+
       L0x7fffffffd43e*x**47)
      [10753, x**128 - 10752],
eqmod (c020*x** 32+c021*x** 33+c022*x** 34+c023*x** 35+
       c024*x** 36+c025*x** 37+c026*x** 38+c027*x** 39+
       c028*x** 40+c029*x** 41+c02a*x** 42+c02b*x** 43+
       c02c*x** 44+c02d*x** 45+c02e*x** 46+c02f*x** 47+
       c0a0*x**160+c0a1*x**161+c0a2*x**162+c0a3*x**163+
       c0a4*x**164+c0a5*x**165+c0a6*x**166+c0a7*x**167+
       c0a8*x**168+c0a9*x**169+c0aa*x**170+c0ab*x**171+
       c0ac*x**172+c0ad*x**173+c0ae*x**174+c0af*x**175+
       c120*x**288+c121*x**289+c122*x**290+c123*x**291+
       c124*x**292+c125*x**293+c126*x**294+c127*x**295+
       c128*x**296+c129*x**297+c12a*x**298+c12b*x**299+
       c12c*x**300+c12d*x**301+c12e*x**302+c12f*x**303+
       c1a0*x**416+c1a1*x**417+c1a2*x**418+c1a3*x**419+
       c1a4*x**420+c1a5*x**421+c1a6*x**422+c1a7*x**423+
       c1a8*x**424+c1a9*x**425+c1aa*x**426+c1ab*x**427+
       c1ac*x**428+c1ad*x**429+c1ae*x**430+c1af*x**431)
      (L0x7fffffffd520*x**32+L0x7fffffffd522*x**33+L0x7fffffffd524*x**34+
       L0x7fffffffd526*x**35+L0x7fffffffd528*x**36+L0x7fffffffd52a*x**37+
       L0x7fffffffd52c*x**38+L0x7fffffffd52e*x**39+L0x7fffffffd530*x**40+
       L0x7fffffffd532*x**41+L0x7fffffffd534*x**42+L0x7fffffffd536*x**43+
       L0x7fffffffd538*x**44+L0x7fffffffd53a*x**45+L0x7fffffffd53c*x**46+
       L0x7fffffffd53e*x**47)
      [10753, x**128 - 6264],
eqmod (c020*x** 32+c021*x** 33+c022*x** 34+c023*x** 35+
       c024*x** 36+c025*x** 37+c026*x** 38+c027*x** 39+
       c028*x** 40+c029*x** 41+c02a*x** 42+c02b*x** 43+
       c02c*x** 44+c02d*x** 45+c02e*x** 46+c02f*x** 47+
       c0a0*x**160+c0a1*x**161+c0a2*x**162+c0a3*x**163+
       c0a4*x**164+c0a5*x**165+c0a6*x**166+c0a7*x**167+
       c0a8*x**168+c0a9*x**169+c0aa*x**170+c0ab*x**171+
       c0ac*x**172+c0ad*x**173+c0ae*x**174+c0af*x**175+
       c120*x**288+c121*x**289+c122*x**290+c123*x**291+
       c124*x**292+c125*x**293+c126*x**294+c127*x**295+
       c128*x**296+c129*x**297+c12a*x**298+c12b*x**299+
       c12c*x**300+c12d*x**301+c12e*x**302+c12f*x**303+
       c1a0*x**416+c1a1*x**417+c1a2*x**418+c1a3*x**419+
       c1a4*x**420+c1a5*x**421+c1a6*x**422+c1a7*x**423+
       c1a8*x**424+c1a9*x**425+c1aa*x**426+c1ab*x**427+
       c1ac*x**428+c1ad*x**429+c1ae*x**430+c1af*x**431)
      (L0x7fffffffd620*x**32+L0x7fffffffd622*x**33+L0x7fffffffd624*x**34+
       L0x7fffffffd626*x**35+L0x7fffffffd628*x**36+L0x7fffffffd62a*x**37+
       L0x7fffffffd62c*x**38+L0x7fffffffd62e*x**39+L0x7fffffffd630*x**40+
       L0x7fffffffd632*x**41+L0x7fffffffd634*x**42+L0x7fffffffd636*x**43+
       L0x7fffffffd638*x**44+L0x7fffffffd63a*x**45+L0x7fffffffd63c*x**46+
       L0x7fffffffd63e*x**47)
      [10753, x**128 - 4489],
eqmod (c020*x** 32+c021*x** 33+c022*x** 34+c023*x** 35+
       c024*x** 36+c025*x** 37+c026*x** 38+c027*x** 39+
       c028*x** 40+c029*x** 41+c02a*x** 42+c02b*x** 43+
       c02c*x** 44+c02d*x** 45+c02e*x** 46+c02f*x** 47+
       c0a0*x**160+c0a1*x**161+c0a2*x**162+c0a3*x**163+
       c0a4*x**164+c0a5*x**165+c0a6*x**166+c0a7*x**167+
       c0a8*x**168+c0a9*x**169+c0aa*x**170+c0ab*x**171+
       c0ac*x**172+c0ad*x**173+c0ae*x**174+c0af*x**175+
       c120*x**288+c121*x**289+c122*x**290+c123*x**291+
       c124*x**292+c125*x**293+c126*x**294+c127*x**295+
       c128*x**296+c129*x**297+c12a*x**298+c12b*x**299+
       c12c*x**300+c12d*x**301+c12e*x**302+c12f*x**303+
       c1a0*x**416+c1a1*x**417+c1a2*x**418+c1a3*x**419+
       c1a4*x**420+c1a5*x**421+c1a6*x**422+c1a7*x**423+
       c1a8*x**424+c1a9*x**425+c1aa*x**426+c1ab*x**427+
       c1ac*x**428+c1ad*x**429+c1ae*x**430+c1af*x**431)
      (L0x7fffffffd720*x**32+L0x7fffffffd722*x**33+L0x7fffffffd724*x**34+
       L0x7fffffffd726*x**35+L0x7fffffffd728*x**36+L0x7fffffffd72a*x**37+
       L0x7fffffffd72c*x**38+L0x7fffffffd72e*x**39+L0x7fffffffd730*x**40+
       L0x7fffffffd732*x**41+L0x7fffffffd734*x**42+L0x7fffffffd736*x**43+
       L0x7fffffffd738*x**44+L0x7fffffffd73a*x**45+L0x7fffffffd73c*x**46+
       L0x7fffffffd73e*x**47)
      [10753, x**128 - 321],
eqmod (c020*x** 32+c021*x** 33+c022*x** 34+c023*x** 35+
       c024*x** 36+c025*x** 37+c026*x** 38+c027*x** 39+
       c028*x** 40+c029*x** 41+c02a*x** 42+c02b*x** 43+
       c02c*x** 44+c02d*x** 45+c02e*x** 46+c02f*x** 47+
       c0a0*x**160+c0a1*x**161+c0a2*x**162+c0a3*x**163+
       c0a4*x**164+c0a5*x**165+c0a6*x**166+c0a7*x**167+
       c0a8*x**168+c0a9*x**169+c0aa*x**170+c0ab*x**171+
       c0ac*x**172+c0ad*x**173+c0ae*x**174+c0af*x**175+
       c120*x**288+c121*x**289+c122*x**290+c123*x**291+
       c124*x**292+c125*x**293+c126*x**294+c127*x**295+
       c128*x**296+c129*x**297+c12a*x**298+c12b*x**299+
       c12c*x**300+c12d*x**301+c12e*x**302+c12f*x**303+
       c1a0*x**416+c1a1*x**417+c1a2*x**418+c1a3*x**419+
       c1a4*x**420+c1a5*x**421+c1a6*x**422+c1a7*x**423+
       c1a8*x**424+c1a9*x**425+c1aa*x**426+c1ab*x**427+
       c1ac*x**428+c1ad*x**429+c1ae*x**430+c1af*x**431)
      (L0x7fffffffd820*x**32+L0x7fffffffd822*x**33+L0x7fffffffd824*x**34+
       L0x7fffffffd826*x**35+L0x7fffffffd828*x**36+L0x7fffffffd82a*x**37+
       L0x7fffffffd82c*x**38+L0x7fffffffd82e*x**39+L0x7fffffffd830*x**40+
       L0x7fffffffd832*x**41+L0x7fffffffd834*x**42+L0x7fffffffd836*x**43+
       L0x7fffffffd838*x**44+L0x7fffffffd83a*x**45+L0x7fffffffd83c*x**46+
       L0x7fffffffd83e*x**47)
      [10753, x**128 - 10432],
eqmod (c020*x** 32+c021*x** 33+c022*x** 34+c023*x** 35+
       c024*x** 36+c025*x** 37+c026*x** 38+c027*x** 39+
       c028*x** 40+c029*x** 41+c02a*x** 42+c02b*x** 43+
       c02c*x** 44+c02d*x** 45+c02e*x** 46+c02f*x** 47+
       c0a0*x**160+c0a1*x**161+c0a2*x**162+c0a3*x**163+
       c0a4*x**164+c0a5*x**165+c0a6*x**166+c0a7*x**167+
       c0a8*x**168+c0a9*x**169+c0aa*x**170+c0ab*x**171+
       c0ac*x**172+c0ad*x**173+c0ae*x**174+c0af*x**175+
       c120*x**288+c121*x**289+c122*x**290+c123*x**291+
       c124*x**292+c125*x**293+c126*x**294+c127*x**295+
       c128*x**296+c129*x**297+c12a*x**298+c12b*x**299+
       c12c*x**300+c12d*x**301+c12e*x**302+c12f*x**303+
       c1a0*x**416+c1a1*x**417+c1a2*x**418+c1a3*x**419+
       c1a4*x**420+c1a5*x**421+c1a6*x**422+c1a7*x**423+
       c1a8*x**424+c1a9*x**425+c1aa*x**426+c1ab*x**427+
       c1ac*x**428+c1ad*x**429+c1ae*x**430+c1af*x**431)
      (L0x7fffffffd920*x**32+L0x7fffffffd922*x**33+L0x7fffffffd924*x**34+
       L0x7fffffffd926*x**35+L0x7fffffffd928*x**36+L0x7fffffffd92a*x**37+
       L0x7fffffffd92c*x**38+L0x7fffffffd92e*x**39+L0x7fffffffd930*x**40+
       L0x7fffffffd932*x**41+L0x7fffffffd934*x**42+L0x7fffffffd936*x**43+
       L0x7fffffffd938*x**44+L0x7fffffffd93a*x**45+L0x7fffffffd93c*x**46+
       L0x7fffffffd93e*x**47)
      [10753, x**128 - 10686],
eqmod (c020*x** 32+c021*x** 33+c022*x** 34+c023*x** 35+
       c024*x** 36+c025*x** 37+c026*x** 38+c027*x** 39+
       c028*x** 40+c029*x** 41+c02a*x** 42+c02b*x** 43+
       c02c*x** 44+c02d*x** 45+c02e*x** 46+c02f*x** 47+
       c0a0*x**160+c0a1*x**161+c0a2*x**162+c0a3*x**163+
       c0a4*x**164+c0a5*x**165+c0a6*x**166+c0a7*x**167+
       c0a8*x**168+c0a9*x**169+c0aa*x**170+c0ab*x**171+
       c0ac*x**172+c0ad*x**173+c0ae*x**174+c0af*x**175+
       c120*x**288+c121*x**289+c122*x**290+c123*x**291+
       c124*x**292+c125*x**293+c126*x**294+c127*x**295+
       c128*x**296+c129*x**297+c12a*x**298+c12b*x**299+
       c12c*x**300+c12d*x**301+c12e*x**302+c12f*x**303+
       c1a0*x**416+c1a1*x**417+c1a2*x**418+c1a3*x**419+
       c1a4*x**420+c1a5*x**421+c1a6*x**422+c1a7*x**423+
       c1a8*x**424+c1a9*x**425+c1aa*x**426+c1ab*x**427+
       c1ac*x**428+c1ad*x**429+c1ae*x**430+c1af*x**431)
      (L0x7fffffffda20*x**32+L0x7fffffffda22*x**33+L0x7fffffffda24*x**34+
       L0x7fffffffda26*x**35+L0x7fffffffda28*x**36+L0x7fffffffda2a*x**37+
       L0x7fffffffda2c*x**38+L0x7fffffffda2e*x**39+L0x7fffffffda30*x**40+
       L0x7fffffffda32*x**41+L0x7fffffffda34*x**42+L0x7fffffffda36*x**43+
       L0x7fffffffda38*x**44+L0x7fffffffda3a*x**45+L0x7fffffffda3c*x**46+
       L0x7fffffffda3e*x**47)
      [10753, x**128 - 67]
  ];


(* === split the CUT into 8 slices === *)

(**************** CUT  38,  0 *****************)

ecut true;

(**************** CUT  39,  0 *****************)

ecut 
  and [
eqmod (c020*x** 32+c021*x** 33+c022*x** 34+c023*x** 35+
       c024*x** 36+c025*x** 37+c026*x** 38+c027*x** 39+
       c028*x** 40+c029*x** 41+c02a*x** 42+c02b*x** 43+
       c02c*x** 44+c02d*x** 45+c02e*x** 46+c02f*x** 47+
       c0a0*x**160+c0a1*x**161+c0a2*x**162+c0a3*x**163+
       c0a4*x**164+c0a5*x**165+c0a6*x**166+c0a7*x**167+
       c0a8*x**168+c0a9*x**169+c0aa*x**170+c0ab*x**171+
       c0ac*x**172+c0ad*x**173+c0ae*x**174+c0af*x**175+
       c120*x**288+c121*x**289+c122*x**290+c123*x**291+
       c124*x**292+c125*x**293+c126*x**294+c127*x**295+
       c128*x**296+c129*x**297+c12a*x**298+c12b*x**299+
       c12c*x**300+c12d*x**301+c12e*x**302+c12f*x**303+
       c1a0*x**416+c1a1*x**417+c1a2*x**418+c1a3*x**419+
       c1a4*x**420+c1a5*x**421+c1a6*x**422+c1a7*x**423+
       c1a8*x**424+c1a9*x**425+c1aa*x**426+c1ab*x**427+
       c1ac*x**428+c1ad*x**429+c1ae*x**430+c1af*x**431)
      (L0x7fffffffd320*x**32+L0x7fffffffd322*x**33+L0x7fffffffd324*x**34+
       L0x7fffffffd326*x**35+L0x7fffffffd328*x**36+L0x7fffffffd32a*x**37+
       L0x7fffffffd32c*x**38+L0x7fffffffd32e*x**39+L0x7fffffffd330*x**40+
       L0x7fffffffd332*x**41+L0x7fffffffd334*x**42+L0x7fffffffd336*x**43+
       L0x7fffffffd338*x**44+L0x7fffffffd33a*x**45+L0x7fffffffd33c*x**46+
       L0x7fffffffd33e*x**47)
      [10753, x**128 - 1]
  ] prove with [cuts [37]];


(**************** CUT  40,  0 *****************)

ecut true;

(**************** CUT  41,  0 *****************)

ecut 
  and [
eqmod (c020*x** 32+c021*x** 33+c022*x** 34+c023*x** 35+
       c024*x** 36+c025*x** 37+c026*x** 38+c027*x** 39+
       c028*x** 40+c029*x** 41+c02a*x** 42+c02b*x** 43+
       c02c*x** 44+c02d*x** 45+c02e*x** 46+c02f*x** 47+
       c0a0*x**160+c0a1*x**161+c0a2*x**162+c0a3*x**163+
       c0a4*x**164+c0a5*x**165+c0a6*x**166+c0a7*x**167+
       c0a8*x**168+c0a9*x**169+c0aa*x**170+c0ab*x**171+
       c0ac*x**172+c0ad*x**173+c0ae*x**174+c0af*x**175+
       c120*x**288+c121*x**289+c122*x**290+c123*x**291+
       c124*x**292+c125*x**293+c126*x**294+c127*x**295+
       c128*x**296+c129*x**297+c12a*x**298+c12b*x**299+
       c12c*x**300+c12d*x**301+c12e*x**302+c12f*x**303+
       c1a0*x**416+c1a1*x**417+c1a2*x**418+c1a3*x**419+
       c1a4*x**420+c1a5*x**421+c1a6*x**422+c1a7*x**423+
       c1a8*x**424+c1a9*x**425+c1aa*x**426+c1ab*x**427+
       c1ac*x**428+c1ad*x**429+c1ae*x**430+c1af*x**431)
      (L0x7fffffffd420*x**32+L0x7fffffffd422*x**33+L0x7fffffffd424*x**34+
       L0x7fffffffd426*x**35+L0x7fffffffd428*x**36+L0x7fffffffd42a*x**37+
       L0x7fffffffd42c*x**38+L0x7fffffffd42e*x**39+L0x7fffffffd430*x**40+
       L0x7fffffffd432*x**41+L0x7fffffffd434*x**42+L0x7fffffffd436*x**43+
       L0x7fffffffd438*x**44+L0x7fffffffd43a*x**45+L0x7fffffffd43c*x**46+
       L0x7fffffffd43e*x**47)
      [10753, x**128 - 10752]
  ] prove with [cuts [37]];


(**************** CUT  42,  0 *****************)

ecut true;

(**************** CUT  43,  0 *****************)

ecut 
  and [
eqmod (c020*x** 32+c021*x** 33+c022*x** 34+c023*x** 35+
       c024*x** 36+c025*x** 37+c026*x** 38+c027*x** 39+
       c028*x** 40+c029*x** 41+c02a*x** 42+c02b*x** 43+
       c02c*x** 44+c02d*x** 45+c02e*x** 46+c02f*x** 47+
       c0a0*x**160+c0a1*x**161+c0a2*x**162+c0a3*x**163+
       c0a4*x**164+c0a5*x**165+c0a6*x**166+c0a7*x**167+
       c0a8*x**168+c0a9*x**169+c0aa*x**170+c0ab*x**171+
       c0ac*x**172+c0ad*x**173+c0ae*x**174+c0af*x**175+
       c120*x**288+c121*x**289+c122*x**290+c123*x**291+
       c124*x**292+c125*x**293+c126*x**294+c127*x**295+
       c128*x**296+c129*x**297+c12a*x**298+c12b*x**299+
       c12c*x**300+c12d*x**301+c12e*x**302+c12f*x**303+
       c1a0*x**416+c1a1*x**417+c1a2*x**418+c1a3*x**419+
       c1a4*x**420+c1a5*x**421+c1a6*x**422+c1a7*x**423+
       c1a8*x**424+c1a9*x**425+c1aa*x**426+c1ab*x**427+
       c1ac*x**428+c1ad*x**429+c1ae*x**430+c1af*x**431)
      (L0x7fffffffd520*x**32+L0x7fffffffd522*x**33+L0x7fffffffd524*x**34+
       L0x7fffffffd526*x**35+L0x7fffffffd528*x**36+L0x7fffffffd52a*x**37+
       L0x7fffffffd52c*x**38+L0x7fffffffd52e*x**39+L0x7fffffffd530*x**40+
       L0x7fffffffd532*x**41+L0x7fffffffd534*x**42+L0x7fffffffd536*x**43+
       L0x7fffffffd538*x**44+L0x7fffffffd53a*x**45+L0x7fffffffd53c*x**46+
       L0x7fffffffd53e*x**47)
      [10753, x**128 - 6264]
  ] prove with [cuts [37]];


(**************** CUT  44,  0 *****************)

ecut true;

(**************** CUT  45,  0 *****************)

ecut 
  and [
eqmod (c020*x** 32+c021*x** 33+c022*x** 34+c023*x** 35+
       c024*x** 36+c025*x** 37+c026*x** 38+c027*x** 39+
       c028*x** 40+c029*x** 41+c02a*x** 42+c02b*x** 43+
       c02c*x** 44+c02d*x** 45+c02e*x** 46+c02f*x** 47+
       c0a0*x**160+c0a1*x**161+c0a2*x**162+c0a3*x**163+
       c0a4*x**164+c0a5*x**165+c0a6*x**166+c0a7*x**167+
       c0a8*x**168+c0a9*x**169+c0aa*x**170+c0ab*x**171+
       c0ac*x**172+c0ad*x**173+c0ae*x**174+c0af*x**175+
       c120*x**288+c121*x**289+c122*x**290+c123*x**291+
       c124*x**292+c125*x**293+c126*x**294+c127*x**295+
       c128*x**296+c129*x**297+c12a*x**298+c12b*x**299+
       c12c*x**300+c12d*x**301+c12e*x**302+c12f*x**303+
       c1a0*x**416+c1a1*x**417+c1a2*x**418+c1a3*x**419+
       c1a4*x**420+c1a5*x**421+c1a6*x**422+c1a7*x**423+
       c1a8*x**424+c1a9*x**425+c1aa*x**426+c1ab*x**427+
       c1ac*x**428+c1ad*x**429+c1ae*x**430+c1af*x**431)
      (L0x7fffffffd620*x**32+L0x7fffffffd622*x**33+L0x7fffffffd624*x**34+
       L0x7fffffffd626*x**35+L0x7fffffffd628*x**36+L0x7fffffffd62a*x**37+
       L0x7fffffffd62c*x**38+L0x7fffffffd62e*x**39+L0x7fffffffd630*x**40+
       L0x7fffffffd632*x**41+L0x7fffffffd634*x**42+L0x7fffffffd636*x**43+
       L0x7fffffffd638*x**44+L0x7fffffffd63a*x**45+L0x7fffffffd63c*x**46+
       L0x7fffffffd63e*x**47)
      [10753, x**128 - 4489]
  ] prove with [cuts [37]];


(**************** CUT  46,  0 *****************)

ecut true;

(**************** CUT  47,  0 *****************)

ecut 
  and [
eqmod (c020*x** 32+c021*x** 33+c022*x** 34+c023*x** 35+
       c024*x** 36+c025*x** 37+c026*x** 38+c027*x** 39+
       c028*x** 40+c029*x** 41+c02a*x** 42+c02b*x** 43+
       c02c*x** 44+c02d*x** 45+c02e*x** 46+c02f*x** 47+
       c0a0*x**160+c0a1*x**161+c0a2*x**162+c0a3*x**163+
       c0a4*x**164+c0a5*x**165+c0a6*x**166+c0a7*x**167+
       c0a8*x**168+c0a9*x**169+c0aa*x**170+c0ab*x**171+
       c0ac*x**172+c0ad*x**173+c0ae*x**174+c0af*x**175+
       c120*x**288+c121*x**289+c122*x**290+c123*x**291+
       c124*x**292+c125*x**293+c126*x**294+c127*x**295+
       c128*x**296+c129*x**297+c12a*x**298+c12b*x**299+
       c12c*x**300+c12d*x**301+c12e*x**302+c12f*x**303+
       c1a0*x**416+c1a1*x**417+c1a2*x**418+c1a3*x**419+
       c1a4*x**420+c1a5*x**421+c1a6*x**422+c1a7*x**423+
       c1a8*x**424+c1a9*x**425+c1aa*x**426+c1ab*x**427+
       c1ac*x**428+c1ad*x**429+c1ae*x**430+c1af*x**431)
      (L0x7fffffffd720*x**32+L0x7fffffffd722*x**33+L0x7fffffffd724*x**34+
       L0x7fffffffd726*x**35+L0x7fffffffd728*x**36+L0x7fffffffd72a*x**37+
       L0x7fffffffd72c*x**38+L0x7fffffffd72e*x**39+L0x7fffffffd730*x**40+
       L0x7fffffffd732*x**41+L0x7fffffffd734*x**42+L0x7fffffffd736*x**43+
       L0x7fffffffd738*x**44+L0x7fffffffd73a*x**45+L0x7fffffffd73c*x**46+
       L0x7fffffffd73e*x**47)
      [10753, x**128 - 321]
  ] prove with [cuts [37]];


(**************** CUT  48,  0 *****************)

ecut true;

(**************** CUT  49,  0 *****************)

ecut 
  and [
eqmod (c020*x** 32+c021*x** 33+c022*x** 34+c023*x** 35+
       c024*x** 36+c025*x** 37+c026*x** 38+c027*x** 39+
       c028*x** 40+c029*x** 41+c02a*x** 42+c02b*x** 43+
       c02c*x** 44+c02d*x** 45+c02e*x** 46+c02f*x** 47+
       c0a0*x**160+c0a1*x**161+c0a2*x**162+c0a3*x**163+
       c0a4*x**164+c0a5*x**165+c0a6*x**166+c0a7*x**167+
       c0a8*x**168+c0a9*x**169+c0aa*x**170+c0ab*x**171+
       c0ac*x**172+c0ad*x**173+c0ae*x**174+c0af*x**175+
       c120*x**288+c121*x**289+c122*x**290+c123*x**291+
       c124*x**292+c125*x**293+c126*x**294+c127*x**295+
       c128*x**296+c129*x**297+c12a*x**298+c12b*x**299+
       c12c*x**300+c12d*x**301+c12e*x**302+c12f*x**303+
       c1a0*x**416+c1a1*x**417+c1a2*x**418+c1a3*x**419+
       c1a4*x**420+c1a5*x**421+c1a6*x**422+c1a7*x**423+
       c1a8*x**424+c1a9*x**425+c1aa*x**426+c1ab*x**427+
       c1ac*x**428+c1ad*x**429+c1ae*x**430+c1af*x**431)
      (L0x7fffffffd820*x**32+L0x7fffffffd822*x**33+L0x7fffffffd824*x**34+
       L0x7fffffffd826*x**35+L0x7fffffffd828*x**36+L0x7fffffffd82a*x**37+
       L0x7fffffffd82c*x**38+L0x7fffffffd82e*x**39+L0x7fffffffd830*x**40+
       L0x7fffffffd832*x**41+L0x7fffffffd834*x**42+L0x7fffffffd836*x**43+
       L0x7fffffffd838*x**44+L0x7fffffffd83a*x**45+L0x7fffffffd83c*x**46+
       L0x7fffffffd83e*x**47)
      [10753, x**128 - 10432]
  ] prove with [cuts [37]];


(**************** CUT  50,  0 *****************)

ecut true;

(**************** CUT  51,  0 *****************)

ecut 
  and [
eqmod (c020*x** 32+c021*x** 33+c022*x** 34+c023*x** 35+
       c024*x** 36+c025*x** 37+c026*x** 38+c027*x** 39+
       c028*x** 40+c029*x** 41+c02a*x** 42+c02b*x** 43+
       c02c*x** 44+c02d*x** 45+c02e*x** 46+c02f*x** 47+
       c0a0*x**160+c0a1*x**161+c0a2*x**162+c0a3*x**163+
       c0a4*x**164+c0a5*x**165+c0a6*x**166+c0a7*x**167+
       c0a8*x**168+c0a9*x**169+c0aa*x**170+c0ab*x**171+
       c0ac*x**172+c0ad*x**173+c0ae*x**174+c0af*x**175+
       c120*x**288+c121*x**289+c122*x**290+c123*x**291+
       c124*x**292+c125*x**293+c126*x**294+c127*x**295+
       c128*x**296+c129*x**297+c12a*x**298+c12b*x**299+
       c12c*x**300+c12d*x**301+c12e*x**302+c12f*x**303+
       c1a0*x**416+c1a1*x**417+c1a2*x**418+c1a3*x**419+
       c1a4*x**420+c1a5*x**421+c1a6*x**422+c1a7*x**423+
       c1a8*x**424+c1a9*x**425+c1aa*x**426+c1ab*x**427+
       c1ac*x**428+c1ad*x**429+c1ae*x**430+c1af*x**431)
      (L0x7fffffffd920*x**32+L0x7fffffffd922*x**33+L0x7fffffffd924*x**34+
       L0x7fffffffd926*x**35+L0x7fffffffd928*x**36+L0x7fffffffd92a*x**37+
       L0x7fffffffd92c*x**38+L0x7fffffffd92e*x**39+L0x7fffffffd930*x**40+
       L0x7fffffffd932*x**41+L0x7fffffffd934*x**42+L0x7fffffffd936*x**43+
       L0x7fffffffd938*x**44+L0x7fffffffd93a*x**45+L0x7fffffffd93c*x**46+
       L0x7fffffffd93e*x**47)
      [10753, x**128 - 10686]
  ] prove with [cuts [37]];


(**************** CUT  52,  0 *****************)

ecut true;

(**************** CUT  53,  0 *****************)

ecut 
  and [
eqmod (c020*x** 32+c021*x** 33+c022*x** 34+c023*x** 35+
       c024*x** 36+c025*x** 37+c026*x** 38+c027*x** 39+
       c028*x** 40+c029*x** 41+c02a*x** 42+c02b*x** 43+
       c02c*x** 44+c02d*x** 45+c02e*x** 46+c02f*x** 47+
       c0a0*x**160+c0a1*x**161+c0a2*x**162+c0a3*x**163+
       c0a4*x**164+c0a5*x**165+c0a6*x**166+c0a7*x**167+
       c0a8*x**168+c0a9*x**169+c0aa*x**170+c0ab*x**171+
       c0ac*x**172+c0ad*x**173+c0ae*x**174+c0af*x**175+
       c120*x**288+c121*x**289+c122*x**290+c123*x**291+
       c124*x**292+c125*x**293+c126*x**294+c127*x**295+
       c128*x**296+c129*x**297+c12a*x**298+c12b*x**299+
       c12c*x**300+c12d*x**301+c12e*x**302+c12f*x**303+
       c1a0*x**416+c1a1*x**417+c1a2*x**418+c1a3*x**419+
       c1a4*x**420+c1a5*x**421+c1a6*x**422+c1a7*x**423+
       c1a8*x**424+c1a9*x**425+c1aa*x**426+c1ab*x**427+
       c1ac*x**428+c1ad*x**429+c1ae*x**430+c1af*x**431)
      (L0x7fffffffda20*x**32+L0x7fffffffda22*x**33+L0x7fffffffda24*x**34+
       L0x7fffffffda26*x**35+L0x7fffffffda28*x**36+L0x7fffffffda2a*x**37+
       L0x7fffffffda2c*x**38+L0x7fffffffda2e*x**39+L0x7fffffffda30*x**40+
       L0x7fffffffda32*x**41+L0x7fffffffda34*x**42+L0x7fffffffda36*x**43+
       L0x7fffffffda38*x**44+L0x7fffffffda3a*x**45+L0x7fffffffda3c*x**46+
       L0x7fffffffda3e*x**47)
      [10753, x**128 - 67]
  ] prove with [cuts [37]];



(* === be ready for next level and offset === *)

(**************** CUT  54,  0 *****************)

ecut true;



(* vpbroadcastw 0x102(%rdx),%ymm1                  #! EA = L0x555555561222; Value = 0x276d0198f85c6adf; PC = 0x555555556fb9 *)
mov ymm1_0 L0x555555561222;
mov ymm1_1 L0x555555561222;
mov ymm1_2 L0x555555561222;
mov ymm1_3 L0x555555561222;
mov ymm1_4 L0x555555561222;
mov ymm1_5 L0x555555561222;
mov ymm1_6 L0x555555561222;
mov ymm1_7 L0x555555561222;
mov ymm1_8 L0x555555561222;
mov ymm1_9 L0x555555561222;
mov ymm1_a L0x555555561222;
mov ymm1_b L0x555555561222;
mov ymm1_c L0x555555561222;
mov ymm1_d L0x555555561222;
mov ymm1_e L0x555555561222;
mov ymm1_f L0x555555561222;
(* vpbroadcastw 0x302(%rdx),%ymm2                  #! EA = L0x555555561422; Value = 0x096df198105c00df; PC = 0x555555556fc2 *)
mov ymm2_0 L0x555555561422;
mov ymm2_1 L0x555555561422;
mov ymm2_2 L0x555555561422;
mov ymm2_3 L0x555555561422;
mov ymm2_4 L0x555555561422;
mov ymm2_5 L0x555555561422;
mov ymm2_6 L0x555555561422;
mov ymm2_7 L0x555555561422;
mov ymm2_8 L0x555555561422;
mov ymm2_9 L0x555555561422;
mov ymm2_a L0x555555561422;
mov ymm2_b L0x555555561422;
mov ymm2_c L0x555555561422;
mov ymm2_d L0x555555561422;
mov ymm2_e L0x555555561422;
mov ymm2_f L0x555555561422;
(* vmovdqa 0x260(%rsi),%ymm6                       #! EA = L0x7fffffffcd40; Value = 0x0000000000000000; PC = 0x555555556fcb *)
mov ymm6_0 L0x7fffffffcd40;
mov ymm6_1 L0x7fffffffcd42;
mov ymm6_2 L0x7fffffffcd44;
mov ymm6_3 L0x7fffffffcd46;
mov ymm6_4 L0x7fffffffcd48;
mov ymm6_5 L0x7fffffffcd4a;
mov ymm6_6 L0x7fffffffcd4c;
mov ymm6_7 L0x7fffffffcd4e;
mov ymm6_8 L0x7fffffffcd50;
mov ymm6_9 L0x7fffffffcd52;
mov ymm6_a L0x7fffffffcd54;
mov ymm6_b L0x7fffffffcd56;
mov ymm6_c L0x7fffffffcd58;
mov ymm6_d L0x7fffffffcd5a;
mov ymm6_e L0x7fffffffcd5c;
mov ymm6_f L0x7fffffffcd5e;
(* vmovdqa 0x360(%rsi),%ymm7                       #! EA = L0x7fffffffce40; Value = 0x0000000000000000; PC = 0x555555556fd3 *)
mov ymm7_0 L0x7fffffffce40;
mov ymm7_1 L0x7fffffffce42;
mov ymm7_2 L0x7fffffffce44;
mov ymm7_3 L0x7fffffffce46;
mov ymm7_4 L0x7fffffffce48;
mov ymm7_5 L0x7fffffffce4a;
mov ymm7_6 L0x7fffffffce4c;
mov ymm7_7 L0x7fffffffce4e;
mov ymm7_8 L0x7fffffffce50;
mov ymm7_9 L0x7fffffffce52;
mov ymm7_a L0x7fffffffce54;
mov ymm7_b L0x7fffffffce56;
mov ymm7_c L0x7fffffffce58;
mov ymm7_d L0x7fffffffce5a;
mov ymm7_e L0x7fffffffce5c;
mov ymm7_f L0x7fffffffce5e;
(* vpmullw %ymm1,%ymm6,%ymm3                       #! PC = 0x555555556fdb *)
smull mulHymm6_0 mulL_0 ymm1_0 ymm6_0;
smull mulHymm6_1 mulL_1 ymm1_1 ymm6_1;
smull mulHymm6_2 mulL_2 ymm1_2 ymm6_2;
smull mulHymm6_3 mulL_3 ymm1_3 ymm6_3;
smull mulHymm6_4 mulL_4 ymm1_4 ymm6_4;
smull mulHymm6_5 mulL_5 ymm1_5 ymm6_5;
smull mulHymm6_6 mulL_6 ymm1_6 ymm6_6;
smull mulHymm6_7 mulL_7 ymm1_7 ymm6_7;
smull mulHymm6_8 mulL_8 ymm1_8 ymm6_8;
smull mulHymm6_9 mulL_9 ymm1_9 ymm6_9;
smull mulHymm6_a mulL_a ymm1_a ymm6_a;
smull mulHymm6_b mulL_b ymm1_b ymm6_b;
smull mulHymm6_c mulL_c ymm1_c ymm6_c;
smull mulHymm6_d mulL_d ymm1_d ymm6_d;
smull mulHymm6_e mulL_e ymm1_e ymm6_e;
smull mulHymm6_f mulL_f ymm1_f ymm6_f;
cast ymm3_0@sint16 mulL_0;
cast ymm3_1@sint16 mulL_1;
cast ymm3_2@sint16 mulL_2;
cast ymm3_3@sint16 mulL_3;
cast ymm3_4@sint16 mulL_4;
cast ymm3_5@sint16 mulL_5;
cast ymm3_6@sint16 mulL_6;
cast ymm3_7@sint16 mulL_7;
cast ymm3_8@sint16 mulL_8;
cast ymm3_9@sint16 mulL_9;
cast ymm3_a@sint16 mulL_a;
cast ymm3_b@sint16 mulL_b;
cast ymm3_c@sint16 mulL_c;
cast ymm3_d@sint16 mulL_d;
cast ymm3_e@sint16 mulL_e;
cast ymm3_f@sint16 mulL_f;
(* vpmulhw %ymm2,%ymm6,%ymm10                      #! PC = 0x555555556fdf *)
smull mulH_0 mulLymm6_0 ymm6_0 ymm2_0;
smull mulH_1 mulLymm6_1 ymm6_1 ymm2_1;
smull mulH_2 mulLymm6_2 ymm6_2 ymm2_2;
smull mulH_3 mulLymm6_3 ymm6_3 ymm2_3;
smull mulH_4 mulLymm6_4 ymm6_4 ymm2_4;
smull mulH_5 mulLymm6_5 ymm6_5 ymm2_5;
smull mulH_6 mulLymm6_6 ymm6_6 ymm2_6;
smull mulH_7 mulLymm6_7 ymm6_7 ymm2_7;
smull mulH_8 mulLymm6_8 ymm6_8 ymm2_8;
smull mulH_9 mulLymm6_9 ymm6_9 ymm2_9;
smull mulH_a mulLymm6_a ymm6_a ymm2_a;
smull mulH_b mulLymm6_b ymm6_b ymm2_b;
smull mulH_c mulLymm6_c ymm6_c ymm2_c;
smull mulH_d mulLymm6_d ymm6_d ymm2_d;
smull mulH_e mulLymm6_e ymm6_e ymm2_e;
smull mulH_f mulLymm6_f ymm6_f ymm2_f;
mov ymm10_0 mulH_0;
mov ymm10_1 mulH_1;
mov ymm10_2 mulH_2;
mov ymm10_3 mulH_3;
mov ymm10_4 mulH_4;
mov ymm10_5 mulH_5;
mov ymm10_6 mulH_6;
mov ymm10_7 mulH_7;
mov ymm10_8 mulH_8;
mov ymm10_9 mulH_9;
mov ymm10_a mulH_a;
mov ymm10_b mulH_b;
mov ymm10_c mulH_c;
mov ymm10_d mulH_d;
mov ymm10_e mulH_e;
mov ymm10_f mulH_f;
(* vpmulhw %ymm0,%ymm3,%ymm3                       #! PC = 0x555555556fe3 *)
smull mulH_0 red_0 ymm3_0 ymm0_0;
assert true && red_0 = mulLymm6_0;
assume red_0 = mulLymm6_0 && true;
smull mulH_1 red_1 ymm3_1 ymm0_1;
assert true && red_1 = mulLymm6_1;
assume red_1 = mulLymm6_1 && true;
smull mulH_2 red_2 ymm3_2 ymm0_2;
assert true && red_2 = mulLymm6_2;
assume red_2 = mulLymm6_2 && true;
smull mulH_3 red_3 ymm3_3 ymm0_3;
assert true && red_3 = mulLymm6_3;
assume red_3 = mulLymm6_3 && true;
smull mulH_4 red_4 ymm3_4 ymm0_4;
assert true && red_4 = mulLymm6_4;
assume red_4 = mulLymm6_4 && true;
smull mulH_5 red_5 ymm3_5 ymm0_5;
assert true && red_5 = mulLymm6_5;
assume red_5 = mulLymm6_5 && true;
smull mulH_6 red_6 ymm3_6 ymm0_6;
assert true && red_6 = mulLymm6_6;
assume red_6 = mulLymm6_6 && true;
smull mulH_7 red_7 ymm3_7 ymm0_7;
assert true && red_7 = mulLymm6_7;
assume red_7 = mulLymm6_7 && true;
smull mulH_8 red_8 ymm3_8 ymm0_8;
assert true && red_8 = mulLymm6_8;
assume red_8 = mulLymm6_8 && true;
smull mulH_9 red_9 ymm3_9 ymm0_9;
assert true && red_9 = mulLymm6_9;
assume red_9 = mulLymm6_9 && true;
smull mulH_a red_a ymm3_a ymm0_a;
assert true && red_a = mulLymm6_a;
assume red_a = mulLymm6_a && true;
smull mulH_b red_b ymm3_b ymm0_b;
assert true && red_b = mulLymm6_b;
assume red_b = mulLymm6_b && true;
smull mulH_c red_c ymm3_c ymm0_c;
assert true && red_c = mulLymm6_c;
assume red_c = mulLymm6_c && true;
smull mulH_d red_d ymm3_d ymm0_d;
assert true && red_d = mulLymm6_d;
assume red_d = mulLymm6_d && true;
smull mulH_e red_e ymm3_e ymm0_e;
assert true && red_e = mulLymm6_e;
assume red_e = mulLymm6_e && true;
smull mulH_f red_f ymm3_f ymm0_f;
assert true && red_f = mulLymm6_f;
assume red_f = mulLymm6_f && true;
mov ymm3_0 mulH_0;
mov ymm3_1 mulH_1;
mov ymm3_2 mulH_2;
mov ymm3_3 mulH_3;
mov ymm3_4 mulH_4;
mov ymm3_5 mulH_5;
mov ymm3_6 mulH_6;
mov ymm3_7 mulH_7;
mov ymm3_8 mulH_8;
mov ymm3_9 mulH_9;
mov ymm3_a mulH_a;
mov ymm3_b mulH_b;
mov ymm3_c mulH_c;
mov ymm3_d mulH_d;
mov ymm3_e mulH_e;
mov ymm3_f mulH_f;
(* vpsubw %ymm3,%ymm10,%ymm10                      #! PC = 0x555555556fe7 *)
sub ymm10_0 ymm10_0 ymm3_0;
sub ymm10_1 ymm10_1 ymm3_1;
sub ymm10_2 ymm10_2 ymm3_2;
sub ymm10_3 ymm10_3 ymm3_3;
sub ymm10_4 ymm10_4 ymm3_4;
sub ymm10_5 ymm10_5 ymm3_5;
sub ymm10_6 ymm10_6 ymm3_6;
sub ymm10_7 ymm10_7 ymm3_7;
sub ymm10_8 ymm10_8 ymm3_8;
sub ymm10_9 ymm10_9 ymm3_9;
sub ymm10_a ymm10_a ymm3_a;
sub ymm10_b ymm10_b ymm3_b;
sub ymm10_c ymm10_c ymm3_c;
sub ymm10_d ymm10_d ymm3_d;
sub ymm10_e ymm10_e ymm3_e;
sub ymm10_f ymm10_f ymm3_f;
(* vpmullw %ymm1,%ymm7,%ymm3                       #! PC = 0x555555556feb *)
smull mulHymm7_0 mulL_0 ymm1_0 ymm7_0;
smull mulHymm7_1 mulL_1 ymm1_1 ymm7_1;
smull mulHymm7_2 mulL_2 ymm1_2 ymm7_2;
smull mulHymm7_3 mulL_3 ymm1_3 ymm7_3;
smull mulHymm7_4 mulL_4 ymm1_4 ymm7_4;
smull mulHymm7_5 mulL_5 ymm1_5 ymm7_5;
smull mulHymm7_6 mulL_6 ymm1_6 ymm7_6;
smull mulHymm7_7 mulL_7 ymm1_7 ymm7_7;
smull mulHymm7_8 mulL_8 ymm1_8 ymm7_8;
smull mulHymm7_9 mulL_9 ymm1_9 ymm7_9;
smull mulHymm7_a mulL_a ymm1_a ymm7_a;
smull mulHymm7_b mulL_b ymm1_b ymm7_b;
smull mulHymm7_c mulL_c ymm1_c ymm7_c;
smull mulHymm7_d mulL_d ymm1_d ymm7_d;
smull mulHymm7_e mulL_e ymm1_e ymm7_e;
smull mulHymm7_f mulL_f ymm1_f ymm7_f;
cast ymm3_0@sint16 mulL_0;
cast ymm3_1@sint16 mulL_1;
cast ymm3_2@sint16 mulL_2;
cast ymm3_3@sint16 mulL_3;
cast ymm3_4@sint16 mulL_4;
cast ymm3_5@sint16 mulL_5;
cast ymm3_6@sint16 mulL_6;
cast ymm3_7@sint16 mulL_7;
cast ymm3_8@sint16 mulL_8;
cast ymm3_9@sint16 mulL_9;
cast ymm3_a@sint16 mulL_a;
cast ymm3_b@sint16 mulL_b;
cast ymm3_c@sint16 mulL_c;
cast ymm3_d@sint16 mulL_d;
cast ymm3_e@sint16 mulL_e;
cast ymm3_f@sint16 mulL_f;
(* vpmulhw %ymm2,%ymm7,%ymm11                      #! PC = 0x555555556fef *)
smull mulH_0 mulLymm7_0 ymm7_0 ymm2_0;
smull mulH_1 mulLymm7_1 ymm7_1 ymm2_1;
smull mulH_2 mulLymm7_2 ymm7_2 ymm2_2;
smull mulH_3 mulLymm7_3 ymm7_3 ymm2_3;
smull mulH_4 mulLymm7_4 ymm7_4 ymm2_4;
smull mulH_5 mulLymm7_5 ymm7_5 ymm2_5;
smull mulH_6 mulLymm7_6 ymm7_6 ymm2_6;
smull mulH_7 mulLymm7_7 ymm7_7 ymm2_7;
smull mulH_8 mulLymm7_8 ymm7_8 ymm2_8;
smull mulH_9 mulLymm7_9 ymm7_9 ymm2_9;
smull mulH_a mulLymm7_a ymm7_a ymm2_a;
smull mulH_b mulLymm7_b ymm7_b ymm2_b;
smull mulH_c mulLymm7_c ymm7_c ymm2_c;
smull mulH_d mulLymm7_d ymm7_d ymm2_d;
smull mulH_e mulLymm7_e ymm7_e ymm2_e;
smull mulH_f mulLymm7_f ymm7_f ymm2_f;
mov ymm11_0 mulH_0;
mov ymm11_1 mulH_1;
mov ymm11_2 mulH_2;
mov ymm11_3 mulH_3;
mov ymm11_4 mulH_4;
mov ymm11_5 mulH_5;
mov ymm11_6 mulH_6;
mov ymm11_7 mulH_7;
mov ymm11_8 mulH_8;
mov ymm11_9 mulH_9;
mov ymm11_a mulH_a;
mov ymm11_b mulH_b;
mov ymm11_c mulH_c;
mov ymm11_d mulH_d;
mov ymm11_e mulH_e;
mov ymm11_f mulH_f;
(* vpmulhw %ymm0,%ymm3,%ymm3                       #! PC = 0x555555556ff3 *)
smull mulH_0 red_0 ymm3_0 ymm0_0;
assert true && red_0 = mulLymm7_0;
assume red_0 = mulLymm7_0 && true;
smull mulH_1 red_1 ymm3_1 ymm0_1;
assert true && red_1 = mulLymm7_1;
assume red_1 = mulLymm7_1 && true;
smull mulH_2 red_2 ymm3_2 ymm0_2;
assert true && red_2 = mulLymm7_2;
assume red_2 = mulLymm7_2 && true;
smull mulH_3 red_3 ymm3_3 ymm0_3;
assert true && red_3 = mulLymm7_3;
assume red_3 = mulLymm7_3 && true;
smull mulH_4 red_4 ymm3_4 ymm0_4;
assert true && red_4 = mulLymm7_4;
assume red_4 = mulLymm7_4 && true;
smull mulH_5 red_5 ymm3_5 ymm0_5;
assert true && red_5 = mulLymm7_5;
assume red_5 = mulLymm7_5 && true;
smull mulH_6 red_6 ymm3_6 ymm0_6;
assert true && red_6 = mulLymm7_6;
assume red_6 = mulLymm7_6 && true;
smull mulH_7 red_7 ymm3_7 ymm0_7;
assert true && red_7 = mulLymm7_7;
assume red_7 = mulLymm7_7 && true;
smull mulH_8 red_8 ymm3_8 ymm0_8;
assert true && red_8 = mulLymm7_8;
assume red_8 = mulLymm7_8 && true;
smull mulH_9 red_9 ymm3_9 ymm0_9;
assert true && red_9 = mulLymm7_9;
assume red_9 = mulLymm7_9 && true;
smull mulH_a red_a ymm3_a ymm0_a;
assert true && red_a = mulLymm7_a;
assume red_a = mulLymm7_a && true;
smull mulH_b red_b ymm3_b ymm0_b;
assert true && red_b = mulLymm7_b;
assume red_b = mulLymm7_b && true;
smull mulH_c red_c ymm3_c ymm0_c;
assert true && red_c = mulLymm7_c;
assume red_c = mulLymm7_c && true;
smull mulH_d red_d ymm3_d ymm0_d;
assert true && red_d = mulLymm7_d;
assume red_d = mulLymm7_d && true;
smull mulH_e red_e ymm3_e ymm0_e;
assert true && red_e = mulLymm7_e;
assume red_e = mulLymm7_e && true;
smull mulH_f red_f ymm3_f ymm0_f;
assert true && red_f = mulLymm7_f;
assume red_f = mulLymm7_f && true;
mov ymm3_0 mulH_0;
mov ymm3_1 mulH_1;
mov ymm3_2 mulH_2;
mov ymm3_3 mulH_3;
mov ymm3_4 mulH_4;
mov ymm3_5 mulH_5;
mov ymm3_6 mulH_6;
mov ymm3_7 mulH_7;
mov ymm3_8 mulH_8;
mov ymm3_9 mulH_9;
mov ymm3_a mulH_a;
mov ymm3_b mulH_b;
mov ymm3_c mulH_c;
mov ymm3_d mulH_d;
mov ymm3_e mulH_e;
mov ymm3_f mulH_f;
(* vpsubw %ymm3,%ymm11,%ymm11                      #! PC = 0x555555556ff7 *)
sub ymm11_0 ymm11_0 ymm3_0;
sub ymm11_1 ymm11_1 ymm3_1;
sub ymm11_2 ymm11_2 ymm3_2;
sub ymm11_3 ymm11_3 ymm3_3;
sub ymm11_4 ymm11_4 ymm3_4;
sub ymm11_5 ymm11_5 ymm3_5;
sub ymm11_6 ymm11_6 ymm3_6;
sub ymm11_7 ymm11_7 ymm3_7;
sub ymm11_8 ymm11_8 ymm3_8;
sub ymm11_9 ymm11_9 ymm3_9;
sub ymm11_a ymm11_a ymm3_a;
sub ymm11_b ymm11_b ymm3_b;
sub ymm11_c ymm11_c ymm3_c;
sub ymm11_d ymm11_d ymm3_d;
sub ymm11_e ymm11_e ymm3_e;
sub ymm11_f ymm11_f ymm3_f;
(* vmovdqa 0x60(%rsi),%ymm4                        #! EA = L0x7fffffffcb40; Value = 0x0000000000000000; PC = 0x555555556ffb *)
mov ymm4_0 L0x7fffffffcb40;
mov ymm4_1 L0x7fffffffcb42;
mov ymm4_2 L0x7fffffffcb44;
mov ymm4_3 L0x7fffffffcb46;
mov ymm4_4 L0x7fffffffcb48;
mov ymm4_5 L0x7fffffffcb4a;
mov ymm4_6 L0x7fffffffcb4c;
mov ymm4_7 L0x7fffffffcb4e;
mov ymm4_8 L0x7fffffffcb50;
mov ymm4_9 L0x7fffffffcb52;
mov ymm4_a L0x7fffffffcb54;
mov ymm4_b L0x7fffffffcb56;
mov ymm4_c L0x7fffffffcb58;
mov ymm4_d L0x7fffffffcb5a;
mov ymm4_e L0x7fffffffcb5c;
mov ymm4_f L0x7fffffffcb5e;
(* vmovdqa 0x160(%rsi),%ymm5                       #! EA = L0x7fffffffcc40; Value = 0x0000000000000000; PC = 0x555555557000 *)
mov ymm5_0 L0x7fffffffcc40;
mov ymm5_1 L0x7fffffffcc42;
mov ymm5_2 L0x7fffffffcc44;
mov ymm5_3 L0x7fffffffcc46;
mov ymm5_4 L0x7fffffffcc48;
mov ymm5_5 L0x7fffffffcc4a;
mov ymm5_6 L0x7fffffffcc4c;
mov ymm5_7 L0x7fffffffcc4e;
mov ymm5_8 L0x7fffffffcc50;
mov ymm5_9 L0x7fffffffcc52;
mov ymm5_a L0x7fffffffcc54;
mov ymm5_b L0x7fffffffcc56;
mov ymm5_c L0x7fffffffcc58;
mov ymm5_d L0x7fffffffcc5a;
mov ymm5_e L0x7fffffffcc5c;
mov ymm5_f L0x7fffffffcc5e;
(* vpaddw %ymm10,%ymm4,%ymm8                       #! PC = 0x555555557008 *)
add ymm8_0 ymm4_0 ymm10_0;
add ymm8_1 ymm4_1 ymm10_1;
add ymm8_2 ymm4_2 ymm10_2;
add ymm8_3 ymm4_3 ymm10_3;
add ymm8_4 ymm4_4 ymm10_4;
add ymm8_5 ymm4_5 ymm10_5;
add ymm8_6 ymm4_6 ymm10_6;
add ymm8_7 ymm4_7 ymm10_7;
add ymm8_8 ymm4_8 ymm10_8;
add ymm8_9 ymm4_9 ymm10_9;
add ymm8_a ymm4_a ymm10_a;
add ymm8_b ymm4_b ymm10_b;
add ymm8_c ymm4_c ymm10_c;
add ymm8_d ymm4_d ymm10_d;
add ymm8_e ymm4_e ymm10_e;
add ymm8_f ymm4_f ymm10_f;
(* vpsubw %ymm10,%ymm4,%ymm10                      #! PC = 0x55555555700d *)
sub ymm10_0 ymm4_0 ymm10_0;
sub ymm10_1 ymm4_1 ymm10_1;
sub ymm10_2 ymm4_2 ymm10_2;
sub ymm10_3 ymm4_3 ymm10_3;
sub ymm10_4 ymm4_4 ymm10_4;
sub ymm10_5 ymm4_5 ymm10_5;
sub ymm10_6 ymm4_6 ymm10_6;
sub ymm10_7 ymm4_7 ymm10_7;
sub ymm10_8 ymm4_8 ymm10_8;
sub ymm10_9 ymm4_9 ymm10_9;
sub ymm10_a ymm4_a ymm10_a;
sub ymm10_b ymm4_b ymm10_b;
sub ymm10_c ymm4_c ymm10_c;
sub ymm10_d ymm4_d ymm10_d;
sub ymm10_e ymm4_e ymm10_e;
sub ymm10_f ymm4_f ymm10_f;
(* vpaddw %ymm11,%ymm5,%ymm9                       #! PC = 0x555555557012 *)
add ymm9_0 ymm5_0 ymm11_0;
add ymm9_1 ymm5_1 ymm11_1;
add ymm9_2 ymm5_2 ymm11_2;
add ymm9_3 ymm5_3 ymm11_3;
add ymm9_4 ymm5_4 ymm11_4;
add ymm9_5 ymm5_5 ymm11_5;
add ymm9_6 ymm5_6 ymm11_6;
add ymm9_7 ymm5_7 ymm11_7;
add ymm9_8 ymm5_8 ymm11_8;
add ymm9_9 ymm5_9 ymm11_9;
add ymm9_a ymm5_a ymm11_a;
add ymm9_b ymm5_b ymm11_b;
add ymm9_c ymm5_c ymm11_c;
add ymm9_d ymm5_d ymm11_d;
add ymm9_e ymm5_e ymm11_e;
add ymm9_f ymm5_f ymm11_f;
(* vpsubw %ymm11,%ymm5,%ymm11                      #! PC = 0x555555557017 *)
sub ymm11_0 ymm5_0 ymm11_0;
sub ymm11_1 ymm5_1 ymm11_1;
sub ymm11_2 ymm5_2 ymm11_2;
sub ymm11_3 ymm5_3 ymm11_3;
sub ymm11_4 ymm5_4 ymm11_4;
sub ymm11_5 ymm5_5 ymm11_5;
sub ymm11_6 ymm5_6 ymm11_6;
sub ymm11_7 ymm5_7 ymm11_7;
sub ymm11_8 ymm5_8 ymm11_8;
sub ymm11_9 ymm5_9 ymm11_9;
sub ymm11_a ymm5_a ymm11_a;
sub ymm11_b ymm5_b ymm11_b;
sub ymm11_c ymm5_c ymm11_c;
sub ymm11_d ymm5_d ymm11_d;
sub ymm11_e ymm5_e ymm11_e;
sub ymm11_f ymm5_f ymm11_f;
(* vpaddw %ymm6,%ymm4,%ymm3                        #! PC = 0x55555555701c *)
add ymm3_0 ymm4_0 ymm6_0;
add ymm3_1 ymm4_1 ymm6_1;
add ymm3_2 ymm4_2 ymm6_2;
add ymm3_3 ymm4_3 ymm6_3;
add ymm3_4 ymm4_4 ymm6_4;
add ymm3_5 ymm4_5 ymm6_5;
add ymm3_6 ymm4_6 ymm6_6;
add ymm3_7 ymm4_7 ymm6_7;
add ymm3_8 ymm4_8 ymm6_8;
add ymm3_9 ymm4_9 ymm6_9;
add ymm3_a ymm4_a ymm6_a;
add ymm3_b ymm4_b ymm6_b;
add ymm3_c ymm4_c ymm6_c;
add ymm3_d ymm4_d ymm6_d;
add ymm3_e ymm4_e ymm6_e;
add ymm3_f ymm4_f ymm6_f;
(* vpsubw %ymm6,%ymm4,%ymm6                        #! PC = 0x555555557020 *)
sub ymm6_0 ymm4_0 ymm6_0;
sub ymm6_1 ymm4_1 ymm6_1;
sub ymm6_2 ymm4_2 ymm6_2;
sub ymm6_3 ymm4_3 ymm6_3;
sub ymm6_4 ymm4_4 ymm6_4;
sub ymm6_5 ymm4_5 ymm6_5;
sub ymm6_6 ymm4_6 ymm6_6;
sub ymm6_7 ymm4_7 ymm6_7;
sub ymm6_8 ymm4_8 ymm6_8;
sub ymm6_9 ymm4_9 ymm6_9;
sub ymm6_a ymm4_a ymm6_a;
sub ymm6_b ymm4_b ymm6_b;
sub ymm6_c ymm4_c ymm6_c;
sub ymm6_d ymm4_d ymm6_d;
sub ymm6_e ymm4_e ymm6_e;
sub ymm6_f ymm4_f ymm6_f;
(* vpaddw %ymm7,%ymm5,%ymm4                        #! PC = 0x555555557024 *)
add ymm4_0 ymm5_0 ymm7_0;
add ymm4_1 ymm5_1 ymm7_1;
add ymm4_2 ymm5_2 ymm7_2;
add ymm4_3 ymm5_3 ymm7_3;
add ymm4_4 ymm5_4 ymm7_4;
add ymm4_5 ymm5_5 ymm7_5;
add ymm4_6 ymm5_6 ymm7_6;
add ymm4_7 ymm5_7 ymm7_7;
add ymm4_8 ymm5_8 ymm7_8;
add ymm4_9 ymm5_9 ymm7_9;
add ymm4_a ymm5_a ymm7_a;
add ymm4_b ymm5_b ymm7_b;
add ymm4_c ymm5_c ymm7_c;
add ymm4_d ymm5_d ymm7_d;
add ymm4_e ymm5_e ymm7_e;
add ymm4_f ymm5_f ymm7_f;
(* vpsubw %ymm7,%ymm5,%ymm7                        #! PC = 0x555555557028 *)
sub ymm7_0 ymm5_0 ymm7_0;
sub ymm7_1 ymm5_1 ymm7_1;
sub ymm7_2 ymm5_2 ymm7_2;
sub ymm7_3 ymm5_3 ymm7_3;
sub ymm7_4 ymm5_4 ymm7_4;
sub ymm7_5 ymm5_5 ymm7_5;
sub ymm7_6 ymm5_6 ymm7_6;
sub ymm7_7 ymm5_7 ymm7_7;
sub ymm7_8 ymm5_8 ymm7_8;
sub ymm7_9 ymm5_9 ymm7_9;
sub ymm7_a ymm5_a ymm7_a;
sub ymm7_b ymm5_b ymm7_b;
sub ymm7_c ymm5_c ymm7_c;
sub ymm7_d ymm5_d ymm7_d;
sub ymm7_e ymm5_e ymm7_e;
sub ymm7_f ymm5_f ymm7_f;
(* vpmullw %ymm1,%ymm7,%ymm5                       #! PC = 0x55555555702c *)
smull mulHymm7_0 mulL_0 ymm1_0 ymm7_0;
smull mulHymm7_1 mulL_1 ymm1_1 ymm7_1;
smull mulHymm7_2 mulL_2 ymm1_2 ymm7_2;
smull mulHymm7_3 mulL_3 ymm1_3 ymm7_3;
smull mulHymm7_4 mulL_4 ymm1_4 ymm7_4;
smull mulHymm7_5 mulL_5 ymm1_5 ymm7_5;
smull mulHymm7_6 mulL_6 ymm1_6 ymm7_6;
smull mulHymm7_7 mulL_7 ymm1_7 ymm7_7;
smull mulHymm7_8 mulL_8 ymm1_8 ymm7_8;
smull mulHymm7_9 mulL_9 ymm1_9 ymm7_9;
smull mulHymm7_a mulL_a ymm1_a ymm7_a;
smull mulHymm7_b mulL_b ymm1_b ymm7_b;
smull mulHymm7_c mulL_c ymm1_c ymm7_c;
smull mulHymm7_d mulL_d ymm1_d ymm7_d;
smull mulHymm7_e mulL_e ymm1_e ymm7_e;
smull mulHymm7_f mulL_f ymm1_f ymm7_f;
cast ymm5_0@sint16 mulL_0;
cast ymm5_1@sint16 mulL_1;
cast ymm5_2@sint16 mulL_2;
cast ymm5_3@sint16 mulL_3;
cast ymm5_4@sint16 mulL_4;
cast ymm5_5@sint16 mulL_5;
cast ymm5_6@sint16 mulL_6;
cast ymm5_7@sint16 mulL_7;
cast ymm5_8@sint16 mulL_8;
cast ymm5_9@sint16 mulL_9;
cast ymm5_a@sint16 mulL_a;
cast ymm5_b@sint16 mulL_b;
cast ymm5_c@sint16 mulL_c;
cast ymm5_d@sint16 mulL_d;
cast ymm5_e@sint16 mulL_e;
cast ymm5_f@sint16 mulL_f;
(* vpmulhw %ymm2,%ymm7,%ymm7                       #! PC = 0x555555557030 *)
smull mulH_0 mulLymm7_0 ymm7_0 ymm2_0;
smull mulH_1 mulLymm7_1 ymm7_1 ymm2_1;
smull mulH_2 mulLymm7_2 ymm7_2 ymm2_2;
smull mulH_3 mulLymm7_3 ymm7_3 ymm2_3;
smull mulH_4 mulLymm7_4 ymm7_4 ymm2_4;
smull mulH_5 mulLymm7_5 ymm7_5 ymm2_5;
smull mulH_6 mulLymm7_6 ymm7_6 ymm2_6;
smull mulH_7 mulLymm7_7 ymm7_7 ymm2_7;
smull mulH_8 mulLymm7_8 ymm7_8 ymm2_8;
smull mulH_9 mulLymm7_9 ymm7_9 ymm2_9;
smull mulH_a mulLymm7_a ymm7_a ymm2_a;
smull mulH_b mulLymm7_b ymm7_b ymm2_b;
smull mulH_c mulLymm7_c ymm7_c ymm2_c;
smull mulH_d mulLymm7_d ymm7_d ymm2_d;
smull mulH_e mulLymm7_e ymm7_e ymm2_e;
smull mulH_f mulLymm7_f ymm7_f ymm2_f;
mov ymm7_0 mulH_0;
mov ymm7_1 mulH_1;
mov ymm7_2 mulH_2;
mov ymm7_3 mulH_3;
mov ymm7_4 mulH_4;
mov ymm7_5 mulH_5;
mov ymm7_6 mulH_6;
mov ymm7_7 mulH_7;
mov ymm7_8 mulH_8;
mov ymm7_9 mulH_9;
mov ymm7_a mulH_a;
mov ymm7_b mulH_b;
mov ymm7_c mulH_c;
mov ymm7_d mulH_d;
mov ymm7_e mulH_e;
mov ymm7_f mulH_f;
(* vpmulhw %ymm0,%ymm5,%ymm5                       #! PC = 0x555555557034 *)
smull mulH_0 red_0 ymm5_0 ymm0_0;
assert true && red_0 = mulLymm7_0;
assume red_0 = mulLymm7_0 && true;
smull mulH_1 red_1 ymm5_1 ymm0_1;
assert true && red_1 = mulLymm7_1;
assume red_1 = mulLymm7_1 && true;
smull mulH_2 red_2 ymm5_2 ymm0_2;
assert true && red_2 = mulLymm7_2;
assume red_2 = mulLymm7_2 && true;
smull mulH_3 red_3 ymm5_3 ymm0_3;
assert true && red_3 = mulLymm7_3;
assume red_3 = mulLymm7_3 && true;
smull mulH_4 red_4 ymm5_4 ymm0_4;
assert true && red_4 = mulLymm7_4;
assume red_4 = mulLymm7_4 && true;
smull mulH_5 red_5 ymm5_5 ymm0_5;
assert true && red_5 = mulLymm7_5;
assume red_5 = mulLymm7_5 && true;
smull mulH_6 red_6 ymm5_6 ymm0_6;
assert true && red_6 = mulLymm7_6;
assume red_6 = mulLymm7_6 && true;
smull mulH_7 red_7 ymm5_7 ymm0_7;
assert true && red_7 = mulLymm7_7;
assume red_7 = mulLymm7_7 && true;
smull mulH_8 red_8 ymm5_8 ymm0_8;
assert true && red_8 = mulLymm7_8;
assume red_8 = mulLymm7_8 && true;
smull mulH_9 red_9 ymm5_9 ymm0_9;
assert true && red_9 = mulLymm7_9;
assume red_9 = mulLymm7_9 && true;
smull mulH_a red_a ymm5_a ymm0_a;
assert true && red_a = mulLymm7_a;
assume red_a = mulLymm7_a && true;
smull mulH_b red_b ymm5_b ymm0_b;
assert true && red_b = mulLymm7_b;
assume red_b = mulLymm7_b && true;
smull mulH_c red_c ymm5_c ymm0_c;
assert true && red_c = mulLymm7_c;
assume red_c = mulLymm7_c && true;
smull mulH_d red_d ymm5_d ymm0_d;
assert true && red_d = mulLymm7_d;
assume red_d = mulLymm7_d && true;
smull mulH_e red_e ymm5_e ymm0_e;
assert true && red_e = mulLymm7_e;
assume red_e = mulLymm7_e && true;
smull mulH_f red_f ymm5_f ymm0_f;
assert true && red_f = mulLymm7_f;
assume red_f = mulLymm7_f && true;
mov ymm5_0 mulH_0;
mov ymm5_1 mulH_1;
mov ymm5_2 mulH_2;
mov ymm5_3 mulH_3;
mov ymm5_4 mulH_4;
mov ymm5_5 mulH_5;
mov ymm5_6 mulH_6;
mov ymm5_7 mulH_7;
mov ymm5_8 mulH_8;
mov ymm5_9 mulH_9;
mov ymm5_a mulH_a;
mov ymm5_b mulH_b;
mov ymm5_c mulH_c;
mov ymm5_d mulH_d;
mov ymm5_e mulH_e;
mov ymm5_f mulH_f;
(* vpsubw %ymm5,%ymm7,%ymm7                        #! PC = 0x555555557038 *)
sub ymm7_0 ymm7_0 ymm5_0;
sub ymm7_1 ymm7_1 ymm5_1;
sub ymm7_2 ymm7_2 ymm5_2;
sub ymm7_3 ymm7_3 ymm5_3;
sub ymm7_4 ymm7_4 ymm5_4;
sub ymm7_5 ymm7_5 ymm5_5;
sub ymm7_6 ymm7_6 ymm5_6;
sub ymm7_7 ymm7_7 ymm5_7;
sub ymm7_8 ymm7_8 ymm5_8;
sub ymm7_9 ymm7_9 ymm5_9;
sub ymm7_a ymm7_a ymm5_a;
sub ymm7_b ymm7_b ymm5_b;
sub ymm7_c ymm7_c ymm5_c;
sub ymm7_d ymm7_d ymm5_d;
sub ymm7_e ymm7_e ymm5_e;
sub ymm7_f ymm7_f ymm5_f;
(* vpbroadcastw 0x104(%rdx),%ymm1                  #! EA = L0x555555561224; Value = 0xad9a276d0198f85c; PC = 0x55555555703c *)
mov ymm1_0 L0x555555561224;
mov ymm1_1 L0x555555561224;
mov ymm1_2 L0x555555561224;
mov ymm1_3 L0x555555561224;
mov ymm1_4 L0x555555561224;
mov ymm1_5 L0x555555561224;
mov ymm1_6 L0x555555561224;
mov ymm1_7 L0x555555561224;
mov ymm1_8 L0x555555561224;
mov ymm1_9 L0x555555561224;
mov ymm1_a L0x555555561224;
mov ymm1_b L0x555555561224;
mov ymm1_c L0x555555561224;
mov ymm1_d L0x555555561224;
mov ymm1_e L0x555555561224;
mov ymm1_f L0x555555561224;
(* vpbroadcastw 0x304(%rdx),%ymm2                  #! EA = L0x555555561424; Value = 0xf19a096df198105c; PC = 0x555555557045 *)
mov ymm2_0 L0x555555561424;
mov ymm2_1 L0x555555561424;
mov ymm2_2 L0x555555561424;
mov ymm2_3 L0x555555561424;
mov ymm2_4 L0x555555561424;
mov ymm2_5 L0x555555561424;
mov ymm2_6 L0x555555561424;
mov ymm2_7 L0x555555561424;
mov ymm2_8 L0x555555561424;
mov ymm2_9 L0x555555561424;
mov ymm2_a L0x555555561424;
mov ymm2_b L0x555555561424;
mov ymm2_c L0x555555561424;
mov ymm2_d L0x555555561424;
mov ymm2_e L0x555555561424;
mov ymm2_f L0x555555561424;
(* vpmullw %ymm1,%ymm9,%ymm5                       #! PC = 0x55555555704e *)
smull mulHymm9_0 mulL_0 ymm1_0 ymm9_0;
smull mulHymm9_1 mulL_1 ymm1_1 ymm9_1;
smull mulHymm9_2 mulL_2 ymm1_2 ymm9_2;
smull mulHymm9_3 mulL_3 ymm1_3 ymm9_3;
smull mulHymm9_4 mulL_4 ymm1_4 ymm9_4;
smull mulHymm9_5 mulL_5 ymm1_5 ymm9_5;
smull mulHymm9_6 mulL_6 ymm1_6 ymm9_6;
smull mulHymm9_7 mulL_7 ymm1_7 ymm9_7;
smull mulHymm9_8 mulL_8 ymm1_8 ymm9_8;
smull mulHymm9_9 mulL_9 ymm1_9 ymm9_9;
smull mulHymm9_a mulL_a ymm1_a ymm9_a;
smull mulHymm9_b mulL_b ymm1_b ymm9_b;
smull mulHymm9_c mulL_c ymm1_c ymm9_c;
smull mulHymm9_d mulL_d ymm1_d ymm9_d;
smull mulHymm9_e mulL_e ymm1_e ymm9_e;
smull mulHymm9_f mulL_f ymm1_f ymm9_f;
cast ymm5_0@sint16 mulL_0;
cast ymm5_1@sint16 mulL_1;
cast ymm5_2@sint16 mulL_2;
cast ymm5_3@sint16 mulL_3;
cast ymm5_4@sint16 mulL_4;
cast ymm5_5@sint16 mulL_5;
cast ymm5_6@sint16 mulL_6;
cast ymm5_7@sint16 mulL_7;
cast ymm5_8@sint16 mulL_8;
cast ymm5_9@sint16 mulL_9;
cast ymm5_a@sint16 mulL_a;
cast ymm5_b@sint16 mulL_b;
cast ymm5_c@sint16 mulL_c;
cast ymm5_d@sint16 mulL_d;
cast ymm5_e@sint16 mulL_e;
cast ymm5_f@sint16 mulL_f;
(* vpmulhw %ymm2,%ymm9,%ymm9                       #! PC = 0x555555557052 *)
smull mulH_0 mulLymm9_0 ymm9_0 ymm2_0;
smull mulH_1 mulLymm9_1 ymm9_1 ymm2_1;
smull mulH_2 mulLymm9_2 ymm9_2 ymm2_2;
smull mulH_3 mulLymm9_3 ymm9_3 ymm2_3;
smull mulH_4 mulLymm9_4 ymm9_4 ymm2_4;
smull mulH_5 mulLymm9_5 ymm9_5 ymm2_5;
smull mulH_6 mulLymm9_6 ymm9_6 ymm2_6;
smull mulH_7 mulLymm9_7 ymm9_7 ymm2_7;
smull mulH_8 mulLymm9_8 ymm9_8 ymm2_8;
smull mulH_9 mulLymm9_9 ymm9_9 ymm2_9;
smull mulH_a mulLymm9_a ymm9_a ymm2_a;
smull mulH_b mulLymm9_b ymm9_b ymm2_b;
smull mulH_c mulLymm9_c ymm9_c ymm2_c;
smull mulH_d mulLymm9_d ymm9_d ymm2_d;
smull mulH_e mulLymm9_e ymm9_e ymm2_e;
smull mulH_f mulLymm9_f ymm9_f ymm2_f;
mov ymm9_0 mulH_0;
mov ymm9_1 mulH_1;
mov ymm9_2 mulH_2;
mov ymm9_3 mulH_3;
mov ymm9_4 mulH_4;
mov ymm9_5 mulH_5;
mov ymm9_6 mulH_6;
mov ymm9_7 mulH_7;
mov ymm9_8 mulH_8;
mov ymm9_9 mulH_9;
mov ymm9_a mulH_a;
mov ymm9_b mulH_b;
mov ymm9_c mulH_c;
mov ymm9_d mulH_d;
mov ymm9_e mulH_e;
mov ymm9_f mulH_f;
(* vpmulhw %ymm0,%ymm5,%ymm5                       #! PC = 0x555555557056 *)
smull mulH_0 red_0 ymm5_0 ymm0_0;
assert true && red_0 = mulLymm9_0;
assume red_0 = mulLymm9_0 && true;
smull mulH_1 red_1 ymm5_1 ymm0_1;
assert true && red_1 = mulLymm9_1;
assume red_1 = mulLymm9_1 && true;
smull mulH_2 red_2 ymm5_2 ymm0_2;
assert true && red_2 = mulLymm9_2;
assume red_2 = mulLymm9_2 && true;
smull mulH_3 red_3 ymm5_3 ymm0_3;
assert true && red_3 = mulLymm9_3;
assume red_3 = mulLymm9_3 && true;
smull mulH_4 red_4 ymm5_4 ymm0_4;
assert true && red_4 = mulLymm9_4;
assume red_4 = mulLymm9_4 && true;
smull mulH_5 red_5 ymm5_5 ymm0_5;
assert true && red_5 = mulLymm9_5;
assume red_5 = mulLymm9_5 && true;
smull mulH_6 red_6 ymm5_6 ymm0_6;
assert true && red_6 = mulLymm9_6;
assume red_6 = mulLymm9_6 && true;
smull mulH_7 red_7 ymm5_7 ymm0_7;
assert true && red_7 = mulLymm9_7;
assume red_7 = mulLymm9_7 && true;
smull mulH_8 red_8 ymm5_8 ymm0_8;
assert true && red_8 = mulLymm9_8;
assume red_8 = mulLymm9_8 && true;
smull mulH_9 red_9 ymm5_9 ymm0_9;
assert true && red_9 = mulLymm9_9;
assume red_9 = mulLymm9_9 && true;
smull mulH_a red_a ymm5_a ymm0_a;
assert true && red_a = mulLymm9_a;
assume red_a = mulLymm9_a && true;
smull mulH_b red_b ymm5_b ymm0_b;
assert true && red_b = mulLymm9_b;
assume red_b = mulLymm9_b && true;
smull mulH_c red_c ymm5_c ymm0_c;
assert true && red_c = mulLymm9_c;
assume red_c = mulLymm9_c && true;
smull mulH_d red_d ymm5_d ymm0_d;
assert true && red_d = mulLymm9_d;
assume red_d = mulLymm9_d && true;
smull mulH_e red_e ymm5_e ymm0_e;
assert true && red_e = mulLymm9_e;
assume red_e = mulLymm9_e && true;
smull mulH_f red_f ymm5_f ymm0_f;
assert true && red_f = mulLymm9_f;
assume red_f = mulLymm9_f && true;
mov ymm5_0 mulH_0;
mov ymm5_1 mulH_1;
mov ymm5_2 mulH_2;
mov ymm5_3 mulH_3;
mov ymm5_4 mulH_4;
mov ymm5_5 mulH_5;
mov ymm5_6 mulH_6;
mov ymm5_7 mulH_7;
mov ymm5_8 mulH_8;
mov ymm5_9 mulH_9;
mov ymm5_a mulH_a;
mov ymm5_b mulH_b;
mov ymm5_c mulH_c;
mov ymm5_d mulH_d;
mov ymm5_e mulH_e;
mov ymm5_f mulH_f;
(* vpsubw %ymm5,%ymm9,%ymm9                        #! PC = 0x55555555705a *)
sub ymm9_0 ymm9_0 ymm5_0;
sub ymm9_1 ymm9_1 ymm5_1;
sub ymm9_2 ymm9_2 ymm5_2;
sub ymm9_3 ymm9_3 ymm5_3;
sub ymm9_4 ymm9_4 ymm5_4;
sub ymm9_5 ymm9_5 ymm5_5;
sub ymm9_6 ymm9_6 ymm5_6;
sub ymm9_7 ymm9_7 ymm5_7;
sub ymm9_8 ymm9_8 ymm5_8;
sub ymm9_9 ymm9_9 ymm5_9;
sub ymm9_a ymm9_a ymm5_a;
sub ymm9_b ymm9_b ymm5_b;
sub ymm9_c ymm9_c ymm5_c;
sub ymm9_d ymm9_d ymm5_d;
sub ymm9_e ymm9_e ymm5_e;
sub ymm9_f ymm9_f ymm5_f;
(* vpbroadcastw 0x106(%rdx),%ymm1                  #! EA = L0x555555561226; Value = 0x6f65ad9a276d0198; PC = 0x55555555705e *)
mov ymm1_0 L0x555555561226;
mov ymm1_1 L0x555555561226;
mov ymm1_2 L0x555555561226;
mov ymm1_3 L0x555555561226;
mov ymm1_4 L0x555555561226;
mov ymm1_5 L0x555555561226;
mov ymm1_6 L0x555555561226;
mov ymm1_7 L0x555555561226;
mov ymm1_8 L0x555555561226;
mov ymm1_9 L0x555555561226;
mov ymm1_a L0x555555561226;
mov ymm1_b L0x555555561226;
mov ymm1_c L0x555555561226;
mov ymm1_d L0x555555561226;
mov ymm1_e L0x555555561226;
mov ymm1_f L0x555555561226;
(* vpbroadcastw 0x306(%rdx),%ymm2                  #! EA = L0x555555561426; Value = 0x0165f19a096df198; PC = 0x555555557067 *)
mov ymm2_0 L0x555555561426;
mov ymm2_1 L0x555555561426;
mov ymm2_2 L0x555555561426;
mov ymm2_3 L0x555555561426;
mov ymm2_4 L0x555555561426;
mov ymm2_5 L0x555555561426;
mov ymm2_6 L0x555555561426;
mov ymm2_7 L0x555555561426;
mov ymm2_8 L0x555555561426;
mov ymm2_9 L0x555555561426;
mov ymm2_a L0x555555561426;
mov ymm2_b L0x555555561426;
mov ymm2_c L0x555555561426;
mov ymm2_d L0x555555561426;
mov ymm2_e L0x555555561426;
mov ymm2_f L0x555555561426;
(* vpmullw %ymm1,%ymm11,%ymm5                      #! PC = 0x555555557070 *)
smull mulHymm11_0 mulL_0 ymm1_0 ymm11_0;
smull mulHymm11_1 mulL_1 ymm1_1 ymm11_1;
smull mulHymm11_2 mulL_2 ymm1_2 ymm11_2;
smull mulHymm11_3 mulL_3 ymm1_3 ymm11_3;
smull mulHymm11_4 mulL_4 ymm1_4 ymm11_4;
smull mulHymm11_5 mulL_5 ymm1_5 ymm11_5;
smull mulHymm11_6 mulL_6 ymm1_6 ymm11_6;
smull mulHymm11_7 mulL_7 ymm1_7 ymm11_7;
smull mulHymm11_8 mulL_8 ymm1_8 ymm11_8;
smull mulHymm11_9 mulL_9 ymm1_9 ymm11_9;
smull mulHymm11_a mulL_a ymm1_a ymm11_a;
smull mulHymm11_b mulL_b ymm1_b ymm11_b;
smull mulHymm11_c mulL_c ymm1_c ymm11_c;
smull mulHymm11_d mulL_d ymm1_d ymm11_d;
smull mulHymm11_e mulL_e ymm1_e ymm11_e;
smull mulHymm11_f mulL_f ymm1_f ymm11_f;
cast ymm5_0@sint16 mulL_0;
cast ymm5_1@sint16 mulL_1;
cast ymm5_2@sint16 mulL_2;
cast ymm5_3@sint16 mulL_3;
cast ymm5_4@sint16 mulL_4;
cast ymm5_5@sint16 mulL_5;
cast ymm5_6@sint16 mulL_6;
cast ymm5_7@sint16 mulL_7;
cast ymm5_8@sint16 mulL_8;
cast ymm5_9@sint16 mulL_9;
cast ymm5_a@sint16 mulL_a;
cast ymm5_b@sint16 mulL_b;
cast ymm5_c@sint16 mulL_c;
cast ymm5_d@sint16 mulL_d;
cast ymm5_e@sint16 mulL_e;
cast ymm5_f@sint16 mulL_f;
(* vpmulhw %ymm2,%ymm11,%ymm11                     #! PC = 0x555555557074 *)
smull mulH_0 mulLymm11_0 ymm11_0 ymm2_0;
smull mulH_1 mulLymm11_1 ymm11_1 ymm2_1;
smull mulH_2 mulLymm11_2 ymm11_2 ymm2_2;
smull mulH_3 mulLymm11_3 ymm11_3 ymm2_3;
smull mulH_4 mulLymm11_4 ymm11_4 ymm2_4;
smull mulH_5 mulLymm11_5 ymm11_5 ymm2_5;
smull mulH_6 mulLymm11_6 ymm11_6 ymm2_6;
smull mulH_7 mulLymm11_7 ymm11_7 ymm2_7;
smull mulH_8 mulLymm11_8 ymm11_8 ymm2_8;
smull mulH_9 mulLymm11_9 ymm11_9 ymm2_9;
smull mulH_a mulLymm11_a ymm11_a ymm2_a;
smull mulH_b mulLymm11_b ymm11_b ymm2_b;
smull mulH_c mulLymm11_c ymm11_c ymm2_c;
smull mulH_d mulLymm11_d ymm11_d ymm2_d;
smull mulH_e mulLymm11_e ymm11_e ymm2_e;
smull mulH_f mulLymm11_f ymm11_f ymm2_f;
mov ymm11_0 mulH_0;
mov ymm11_1 mulH_1;
mov ymm11_2 mulH_2;
mov ymm11_3 mulH_3;
mov ymm11_4 mulH_4;
mov ymm11_5 mulH_5;
mov ymm11_6 mulH_6;
mov ymm11_7 mulH_7;
mov ymm11_8 mulH_8;
mov ymm11_9 mulH_9;
mov ymm11_a mulH_a;
mov ymm11_b mulH_b;
mov ymm11_c mulH_c;
mov ymm11_d mulH_d;
mov ymm11_e mulH_e;
mov ymm11_f mulH_f;
(* vpmulhw %ymm0,%ymm5,%ymm5                       #! PC = 0x555555557078 *)
smull mulH_0 red_0 ymm5_0 ymm0_0;
assert true && red_0 = mulLymm11_0;
assume red_0 = mulLymm11_0 && true;
smull mulH_1 red_1 ymm5_1 ymm0_1;
assert true && red_1 = mulLymm11_1;
assume red_1 = mulLymm11_1 && true;
smull mulH_2 red_2 ymm5_2 ymm0_2;
assert true && red_2 = mulLymm11_2;
assume red_2 = mulLymm11_2 && true;
smull mulH_3 red_3 ymm5_3 ymm0_3;
assert true && red_3 = mulLymm11_3;
assume red_3 = mulLymm11_3 && true;
smull mulH_4 red_4 ymm5_4 ymm0_4;
assert true && red_4 = mulLymm11_4;
assume red_4 = mulLymm11_4 && true;
smull mulH_5 red_5 ymm5_5 ymm0_5;
assert true && red_5 = mulLymm11_5;
assume red_5 = mulLymm11_5 && true;
smull mulH_6 red_6 ymm5_6 ymm0_6;
assert true && red_6 = mulLymm11_6;
assume red_6 = mulLymm11_6 && true;
smull mulH_7 red_7 ymm5_7 ymm0_7;
assert true && red_7 = mulLymm11_7;
assume red_7 = mulLymm11_7 && true;
smull mulH_8 red_8 ymm5_8 ymm0_8;
assert true && red_8 = mulLymm11_8;
assume red_8 = mulLymm11_8 && true;
smull mulH_9 red_9 ymm5_9 ymm0_9;
assert true && red_9 = mulLymm11_9;
assume red_9 = mulLymm11_9 && true;
smull mulH_a red_a ymm5_a ymm0_a;
assert true && red_a = mulLymm11_a;
assume red_a = mulLymm11_a && true;
smull mulH_b red_b ymm5_b ymm0_b;
assert true && red_b = mulLymm11_b;
assume red_b = mulLymm11_b && true;
smull mulH_c red_c ymm5_c ymm0_c;
assert true && red_c = mulLymm11_c;
assume red_c = mulLymm11_c && true;
smull mulH_d red_d ymm5_d ymm0_d;
assert true && red_d = mulLymm11_d;
assume red_d = mulLymm11_d && true;
smull mulH_e red_e ymm5_e ymm0_e;
assert true && red_e = mulLymm11_e;
assume red_e = mulLymm11_e && true;
smull mulH_f red_f ymm5_f ymm0_f;
assert true && red_f = mulLymm11_f;
assume red_f = mulLymm11_f && true;
mov ymm5_0 mulH_0;
mov ymm5_1 mulH_1;
mov ymm5_2 mulH_2;
mov ymm5_3 mulH_3;
mov ymm5_4 mulH_4;
mov ymm5_5 mulH_5;
mov ymm5_6 mulH_6;
mov ymm5_7 mulH_7;
mov ymm5_8 mulH_8;
mov ymm5_9 mulH_9;
mov ymm5_a mulH_a;
mov ymm5_b mulH_b;
mov ymm5_c mulH_c;
mov ymm5_d mulH_d;
mov ymm5_e mulH_e;
mov ymm5_f mulH_f;
(* vpsubw %ymm5,%ymm11,%ymm11                      #! PC = 0x55555555707c *)
sub ymm11_0 ymm11_0 ymm5_0;
sub ymm11_1 ymm11_1 ymm5_1;
sub ymm11_2 ymm11_2 ymm5_2;
sub ymm11_3 ymm11_3 ymm5_3;
sub ymm11_4 ymm11_4 ymm5_4;
sub ymm11_5 ymm11_5 ymm5_5;
sub ymm11_6 ymm11_6 ymm5_6;
sub ymm11_7 ymm11_7 ymm5_7;
sub ymm11_8 ymm11_8 ymm5_8;
sub ymm11_9 ymm11_9 ymm5_9;
sub ymm11_a ymm11_a ymm5_a;
sub ymm11_b ymm11_b ymm5_b;
sub ymm11_c ymm11_c ymm5_c;
sub ymm11_d ymm11_d ymm5_d;
sub ymm11_e ymm11_e ymm5_e;
sub ymm11_f ymm11_f ymm5_f;
(* vpaddw %ymm4,%ymm3,%ymm5                        #! PC = 0x555555557080 *)
add ymm5_0 ymm3_0 ymm4_0;
add ymm5_1 ymm3_1 ymm4_1;
add ymm5_2 ymm3_2 ymm4_2;
add ymm5_3 ymm3_3 ymm4_3;
add ymm5_4 ymm3_4 ymm4_4;
add ymm5_5 ymm3_5 ymm4_5;
add ymm5_6 ymm3_6 ymm4_6;
add ymm5_7 ymm3_7 ymm4_7;
add ymm5_8 ymm3_8 ymm4_8;
add ymm5_9 ymm3_9 ymm4_9;
add ymm5_a ymm3_a ymm4_a;
add ymm5_b ymm3_b ymm4_b;
add ymm5_c ymm3_c ymm4_c;
add ymm5_d ymm3_d ymm4_d;
add ymm5_e ymm3_e ymm4_e;
add ymm5_f ymm3_f ymm4_f;
(* vpsubw %ymm4,%ymm3,%ymm4                        #! PC = 0x555555557084 *)
sub ymm4_0 ymm3_0 ymm4_0;
sub ymm4_1 ymm3_1 ymm4_1;
sub ymm4_2 ymm3_2 ymm4_2;
sub ymm4_3 ymm3_3 ymm4_3;
sub ymm4_4 ymm3_4 ymm4_4;
sub ymm4_5 ymm3_5 ymm4_5;
sub ymm4_6 ymm3_6 ymm4_6;
sub ymm4_7 ymm3_7 ymm4_7;
sub ymm4_8 ymm3_8 ymm4_8;
sub ymm4_9 ymm3_9 ymm4_9;
sub ymm4_a ymm3_a ymm4_a;
sub ymm4_b ymm3_b ymm4_b;
sub ymm4_c ymm3_c ymm4_c;
sub ymm4_d ymm3_d ymm4_d;
sub ymm4_e ymm3_e ymm4_e;
sub ymm4_f ymm3_f ymm4_f;
(* vpaddw %ymm7,%ymm6,%ymm3                        #! PC = 0x555555557088 *)
add ymm3_0 ymm6_0 ymm7_0;
add ymm3_1 ymm6_1 ymm7_1;
add ymm3_2 ymm6_2 ymm7_2;
add ymm3_3 ymm6_3 ymm7_3;
add ymm3_4 ymm6_4 ymm7_4;
add ymm3_5 ymm6_5 ymm7_5;
add ymm3_6 ymm6_6 ymm7_6;
add ymm3_7 ymm6_7 ymm7_7;
add ymm3_8 ymm6_8 ymm7_8;
add ymm3_9 ymm6_9 ymm7_9;
add ymm3_a ymm6_a ymm7_a;
add ymm3_b ymm6_b ymm7_b;
add ymm3_c ymm6_c ymm7_c;
add ymm3_d ymm6_d ymm7_d;
add ymm3_e ymm6_e ymm7_e;
add ymm3_f ymm6_f ymm7_f;
(* vpsubw %ymm7,%ymm6,%ymm7                        #! PC = 0x55555555708c *)
sub ymm7_0 ymm6_0 ymm7_0;
sub ymm7_1 ymm6_1 ymm7_1;
sub ymm7_2 ymm6_2 ymm7_2;
sub ymm7_3 ymm6_3 ymm7_3;
sub ymm7_4 ymm6_4 ymm7_4;
sub ymm7_5 ymm6_5 ymm7_5;
sub ymm7_6 ymm6_6 ymm7_6;
sub ymm7_7 ymm6_7 ymm7_7;
sub ymm7_8 ymm6_8 ymm7_8;
sub ymm7_9 ymm6_9 ymm7_9;
sub ymm7_a ymm6_a ymm7_a;
sub ymm7_b ymm6_b ymm7_b;
sub ymm7_c ymm6_c ymm7_c;
sub ymm7_d ymm6_d ymm7_d;
sub ymm7_e ymm6_e ymm7_e;
sub ymm7_f ymm6_f ymm7_f;
(* vpaddw %ymm9,%ymm8,%ymm6                        #! PC = 0x555555557090 *)
add ymm6_0 ymm8_0 ymm9_0;
add ymm6_1 ymm8_1 ymm9_1;
add ymm6_2 ymm8_2 ymm9_2;
add ymm6_3 ymm8_3 ymm9_3;
add ymm6_4 ymm8_4 ymm9_4;
add ymm6_5 ymm8_5 ymm9_5;
add ymm6_6 ymm8_6 ymm9_6;
add ymm6_7 ymm8_7 ymm9_7;
add ymm6_8 ymm8_8 ymm9_8;
add ymm6_9 ymm8_9 ymm9_9;
add ymm6_a ymm8_a ymm9_a;
add ymm6_b ymm8_b ymm9_b;
add ymm6_c ymm8_c ymm9_c;
add ymm6_d ymm8_d ymm9_d;
add ymm6_e ymm8_e ymm9_e;
add ymm6_f ymm8_f ymm9_f;
(* vpsubw %ymm9,%ymm8,%ymm9                        #! PC = 0x555555557095 *)
sub ymm9_0 ymm8_0 ymm9_0;
sub ymm9_1 ymm8_1 ymm9_1;
sub ymm9_2 ymm8_2 ymm9_2;
sub ymm9_3 ymm8_3 ymm9_3;
sub ymm9_4 ymm8_4 ymm9_4;
sub ymm9_5 ymm8_5 ymm9_5;
sub ymm9_6 ymm8_6 ymm9_6;
sub ymm9_7 ymm8_7 ymm9_7;
sub ymm9_8 ymm8_8 ymm9_8;
sub ymm9_9 ymm8_9 ymm9_9;
sub ymm9_a ymm8_a ymm9_a;
sub ymm9_b ymm8_b ymm9_b;
sub ymm9_c ymm8_c ymm9_c;
sub ymm9_d ymm8_d ymm9_d;
sub ymm9_e ymm8_e ymm9_e;
sub ymm9_f ymm8_f ymm9_f;
(* vpaddw %ymm11,%ymm10,%ymm8                      #! PC = 0x55555555709a *)
add ymm8_0 ymm10_0 ymm11_0;
add ymm8_1 ymm10_1 ymm11_1;
add ymm8_2 ymm10_2 ymm11_2;
add ymm8_3 ymm10_3 ymm11_3;
add ymm8_4 ymm10_4 ymm11_4;
add ymm8_5 ymm10_5 ymm11_5;
add ymm8_6 ymm10_6 ymm11_6;
add ymm8_7 ymm10_7 ymm11_7;
add ymm8_8 ymm10_8 ymm11_8;
add ymm8_9 ymm10_9 ymm11_9;
add ymm8_a ymm10_a ymm11_a;
add ymm8_b ymm10_b ymm11_b;
add ymm8_c ymm10_c ymm11_c;
add ymm8_d ymm10_d ymm11_d;
add ymm8_e ymm10_e ymm11_e;
add ymm8_f ymm10_f ymm11_f;
(* vpsubw %ymm11,%ymm10,%ymm11                     #! PC = 0x55555555709f *)
sub ymm11_0 ymm10_0 ymm11_0;
sub ymm11_1 ymm10_1 ymm11_1;
sub ymm11_2 ymm10_2 ymm11_2;
sub ymm11_3 ymm10_3 ymm11_3;
sub ymm11_4 ymm10_4 ymm11_4;
sub ymm11_5 ymm10_5 ymm11_5;
sub ymm11_6 ymm10_6 ymm11_6;
sub ymm11_7 ymm10_7 ymm11_7;
sub ymm11_8 ymm10_8 ymm11_8;
sub ymm11_9 ymm10_9 ymm11_9;
sub ymm11_a ymm10_a ymm11_a;
sub ymm11_b ymm10_b ymm11_b;
sub ymm11_c ymm10_c ymm11_c;
sub ymm11_d ymm10_d ymm11_d;
sub ymm11_e ymm10_e ymm11_e;
sub ymm11_f ymm10_f ymm11_f;
(* vmovdqa %ymm5,0x60(%rdi)                        #! EA = L0x7fffffffd340; PC = 0x5555555570a4 *)
mov L0x7fffffffd340 ymm5_0;
mov L0x7fffffffd342 ymm5_1;
mov L0x7fffffffd344 ymm5_2;
mov L0x7fffffffd346 ymm5_3;
mov L0x7fffffffd348 ymm5_4;
mov L0x7fffffffd34a ymm5_5;
mov L0x7fffffffd34c ymm5_6;
mov L0x7fffffffd34e ymm5_7;
mov L0x7fffffffd350 ymm5_8;
mov L0x7fffffffd352 ymm5_9;
mov L0x7fffffffd354 ymm5_a;
mov L0x7fffffffd356 ymm5_b;
mov L0x7fffffffd358 ymm5_c;
mov L0x7fffffffd35a ymm5_d;
mov L0x7fffffffd35c ymm5_e;
mov L0x7fffffffd35e ymm5_f;
(* vmovdqa %ymm4,0x160(%rdi)                       #! EA = L0x7fffffffd440; PC = 0x5555555570a9 *)
mov L0x7fffffffd440 ymm4_0;
mov L0x7fffffffd442 ymm4_1;
mov L0x7fffffffd444 ymm4_2;
mov L0x7fffffffd446 ymm4_3;
mov L0x7fffffffd448 ymm4_4;
mov L0x7fffffffd44a ymm4_5;
mov L0x7fffffffd44c ymm4_6;
mov L0x7fffffffd44e ymm4_7;
mov L0x7fffffffd450 ymm4_8;
mov L0x7fffffffd452 ymm4_9;
mov L0x7fffffffd454 ymm4_a;
mov L0x7fffffffd456 ymm4_b;
mov L0x7fffffffd458 ymm4_c;
mov L0x7fffffffd45a ymm4_d;
mov L0x7fffffffd45c ymm4_e;
mov L0x7fffffffd45e ymm4_f;
(* vmovdqa %ymm3,0x260(%rdi)                       #! EA = L0x7fffffffd540; PC = 0x5555555570b1 *)
mov L0x7fffffffd540 ymm3_0;
mov L0x7fffffffd542 ymm3_1;
mov L0x7fffffffd544 ymm3_2;
mov L0x7fffffffd546 ymm3_3;
mov L0x7fffffffd548 ymm3_4;
mov L0x7fffffffd54a ymm3_5;
mov L0x7fffffffd54c ymm3_6;
mov L0x7fffffffd54e ymm3_7;
mov L0x7fffffffd550 ymm3_8;
mov L0x7fffffffd552 ymm3_9;
mov L0x7fffffffd554 ymm3_a;
mov L0x7fffffffd556 ymm3_b;
mov L0x7fffffffd558 ymm3_c;
mov L0x7fffffffd55a ymm3_d;
mov L0x7fffffffd55c ymm3_e;
mov L0x7fffffffd55e ymm3_f;
(* vmovdqa %ymm7,0x360(%rdi)                       #! EA = L0x7fffffffd640; PC = 0x5555555570b9 *)
mov L0x7fffffffd640 ymm7_0;
mov L0x7fffffffd642 ymm7_1;
mov L0x7fffffffd644 ymm7_2;
mov L0x7fffffffd646 ymm7_3;
mov L0x7fffffffd648 ymm7_4;
mov L0x7fffffffd64a ymm7_5;
mov L0x7fffffffd64c ymm7_6;
mov L0x7fffffffd64e ymm7_7;
mov L0x7fffffffd650 ymm7_8;
mov L0x7fffffffd652 ymm7_9;
mov L0x7fffffffd654 ymm7_a;
mov L0x7fffffffd656 ymm7_b;
mov L0x7fffffffd658 ymm7_c;
mov L0x7fffffffd65a ymm7_d;
mov L0x7fffffffd65c ymm7_e;
mov L0x7fffffffd65e ymm7_f;
(* vmovdqa %ymm6,0x460(%rdi)                       #! EA = L0x7fffffffd740; PC = 0x5555555570c1 *)
mov L0x7fffffffd740 ymm6_0;
mov L0x7fffffffd742 ymm6_1;
mov L0x7fffffffd744 ymm6_2;
mov L0x7fffffffd746 ymm6_3;
mov L0x7fffffffd748 ymm6_4;
mov L0x7fffffffd74a ymm6_5;
mov L0x7fffffffd74c ymm6_6;
mov L0x7fffffffd74e ymm6_7;
mov L0x7fffffffd750 ymm6_8;
mov L0x7fffffffd752 ymm6_9;
mov L0x7fffffffd754 ymm6_a;
mov L0x7fffffffd756 ymm6_b;
mov L0x7fffffffd758 ymm6_c;
mov L0x7fffffffd75a ymm6_d;
mov L0x7fffffffd75c ymm6_e;
mov L0x7fffffffd75e ymm6_f;
(* vmovdqa %ymm9,0x560(%rdi)                       #! EA = L0x7fffffffd840; PC = 0x5555555570c9 *)
mov L0x7fffffffd840 ymm9_0;
mov L0x7fffffffd842 ymm9_1;
mov L0x7fffffffd844 ymm9_2;
mov L0x7fffffffd846 ymm9_3;
mov L0x7fffffffd848 ymm9_4;
mov L0x7fffffffd84a ymm9_5;
mov L0x7fffffffd84c ymm9_6;
mov L0x7fffffffd84e ymm9_7;
mov L0x7fffffffd850 ymm9_8;
mov L0x7fffffffd852 ymm9_9;
mov L0x7fffffffd854 ymm9_a;
mov L0x7fffffffd856 ymm9_b;
mov L0x7fffffffd858 ymm9_c;
mov L0x7fffffffd85a ymm9_d;
mov L0x7fffffffd85c ymm9_e;
mov L0x7fffffffd85e ymm9_f;
(* vmovdqa %ymm8,0x660(%rdi)                       #! EA = L0x7fffffffd940; PC = 0x5555555570d1 *)
mov L0x7fffffffd940 ymm8_0;
mov L0x7fffffffd942 ymm8_1;
mov L0x7fffffffd944 ymm8_2;
mov L0x7fffffffd946 ymm8_3;
mov L0x7fffffffd948 ymm8_4;
mov L0x7fffffffd94a ymm8_5;
mov L0x7fffffffd94c ymm8_6;
mov L0x7fffffffd94e ymm8_7;
mov L0x7fffffffd950 ymm8_8;
mov L0x7fffffffd952 ymm8_9;
mov L0x7fffffffd954 ymm8_a;
mov L0x7fffffffd956 ymm8_b;
mov L0x7fffffffd958 ymm8_c;
mov L0x7fffffffd95a ymm8_d;
mov L0x7fffffffd95c ymm8_e;
mov L0x7fffffffd95e ymm8_f;
(* vmovdqa %ymm11,0x760(%rdi)                      #! EA = L0x7fffffffda40; PC = 0x5555555570d9 *)
mov L0x7fffffffda40 ymm11_0;
mov L0x7fffffffda42 ymm11_1;
mov L0x7fffffffda44 ymm11_2;
mov L0x7fffffffda46 ymm11_3;
mov L0x7fffffffda48 ymm11_4;
mov L0x7fffffffda4a ymm11_5;
mov L0x7fffffffda4c ymm11_6;
mov L0x7fffffffda4e ymm11_7;
mov L0x7fffffffda50 ymm11_8;
mov L0x7fffffffda52 ymm11_9;
mov L0x7fffffffda54 ymm11_a;
mov L0x7fffffffda56 ymm11_b;
mov L0x7fffffffda58 ymm11_c;
mov L0x7fffffffda5a ymm11_d;
mov L0x7fffffffda5c ymm11_e;
mov L0x7fffffffda5e ymm11_f;


(**************** LEVELS 0-2, 3 *****************)


(**************** CUT  55,  0 *****************)

ecut 
  and [
eqmod (c030*x** 48+c031*x** 49+c032*x** 50+c033*x** 51+
       c034*x** 52+c035*x** 53+c036*x** 54+c037*x** 55+
       c038*x** 56+c039*x** 57+c03a*x** 58+c03b*x** 59+
       c03c*x** 60+c03d*x** 61+c03e*x** 62+c03f*x** 63+
       c0b0*x**176+c0b1*x**177+c0b2*x**178+c0b3*x**179+
       c0b4*x**180+c0b5*x**181+c0b6*x**182+c0b7*x**183+
       c0b8*x**184+c0b9*x**185+c0ba*x**186+c0bb*x**187+
       c0bc*x**188+c0bd*x**189+c0be*x**190+c0bf*x**191+
       c130*x**304+c131*x**305+c132*x**306+c133*x**307+
       c134*x**308+c135*x**309+c136*x**310+c137*x**311+
       c138*x**312+c139*x**313+c13a*x**314+c13b*x**315+
       c13c*x**316+c13d*x**317+c13e*x**318+c13f*x**319+
       c1b0*x**432+c1b1*x**433+c1b2*x**434+c1b3*x**435+
       c1b4*x**436+c1b5*x**437+c1b6*x**438+c1b7*x**439+
       c1b8*x**440+c1b9*x**441+c1ba*x**442+c1bb*x**443+
       c1bc*x**444+c1bd*x**445+c1be*x**446+c1bf*x**447)
      (L0x7fffffffd340*x**48+L0x7fffffffd342*x**49+L0x7fffffffd344*x**50+
       L0x7fffffffd346*x**51+L0x7fffffffd348*x**52+L0x7fffffffd34a*x**53+
       L0x7fffffffd34c*x**54+L0x7fffffffd34e*x**55+L0x7fffffffd350*x**56+
       L0x7fffffffd352*x**57+L0x7fffffffd354*x**58+L0x7fffffffd356*x**59+
       L0x7fffffffd358*x**60+L0x7fffffffd35a*x**61+L0x7fffffffd35c*x**62+
       L0x7fffffffd35e*x**63)
      [10753, x**128 - 1],
eqmod (c030*x** 48+c031*x** 49+c032*x** 50+c033*x** 51+
       c034*x** 52+c035*x** 53+c036*x** 54+c037*x** 55+
       c038*x** 56+c039*x** 57+c03a*x** 58+c03b*x** 59+
       c03c*x** 60+c03d*x** 61+c03e*x** 62+c03f*x** 63+
       c0b0*x**176+c0b1*x**177+c0b2*x**178+c0b3*x**179+
       c0b4*x**180+c0b5*x**181+c0b6*x**182+c0b7*x**183+
       c0b8*x**184+c0b9*x**185+c0ba*x**186+c0bb*x**187+
       c0bc*x**188+c0bd*x**189+c0be*x**190+c0bf*x**191+
       c130*x**304+c131*x**305+c132*x**306+c133*x**307+
       c134*x**308+c135*x**309+c136*x**310+c137*x**311+
       c138*x**312+c139*x**313+c13a*x**314+c13b*x**315+
       c13c*x**316+c13d*x**317+c13e*x**318+c13f*x**319+
       c1b0*x**432+c1b1*x**433+c1b2*x**434+c1b3*x**435+
       c1b4*x**436+c1b5*x**437+c1b6*x**438+c1b7*x**439+
       c1b8*x**440+c1b9*x**441+c1ba*x**442+c1bb*x**443+
       c1bc*x**444+c1bd*x**445+c1be*x**446+c1bf*x**447)
      (L0x7fffffffd440*x**48+L0x7fffffffd442*x**49+L0x7fffffffd444*x**50+
       L0x7fffffffd446*x**51+L0x7fffffffd448*x**52+L0x7fffffffd44a*x**53+
       L0x7fffffffd44c*x**54+L0x7fffffffd44e*x**55+L0x7fffffffd450*x**56+
       L0x7fffffffd452*x**57+L0x7fffffffd454*x**58+L0x7fffffffd456*x**59+
       L0x7fffffffd458*x**60+L0x7fffffffd45a*x**61+L0x7fffffffd45c*x**62+
       L0x7fffffffd45e*x**63)
      [10753, x**128 - 10752],
eqmod (c030*x** 48+c031*x** 49+c032*x** 50+c033*x** 51+
       c034*x** 52+c035*x** 53+c036*x** 54+c037*x** 55+
       c038*x** 56+c039*x** 57+c03a*x** 58+c03b*x** 59+
       c03c*x** 60+c03d*x** 61+c03e*x** 62+c03f*x** 63+
       c0b0*x**176+c0b1*x**177+c0b2*x**178+c0b3*x**179+
       c0b4*x**180+c0b5*x**181+c0b6*x**182+c0b7*x**183+
       c0b8*x**184+c0b9*x**185+c0ba*x**186+c0bb*x**187+
       c0bc*x**188+c0bd*x**189+c0be*x**190+c0bf*x**191+
       c130*x**304+c131*x**305+c132*x**306+c133*x**307+
       c134*x**308+c135*x**309+c136*x**310+c137*x**311+
       c138*x**312+c139*x**313+c13a*x**314+c13b*x**315+
       c13c*x**316+c13d*x**317+c13e*x**318+c13f*x**319+
       c1b0*x**432+c1b1*x**433+c1b2*x**434+c1b3*x**435+
       c1b4*x**436+c1b5*x**437+c1b6*x**438+c1b7*x**439+
       c1b8*x**440+c1b9*x**441+c1ba*x**442+c1bb*x**443+
       c1bc*x**444+c1bd*x**445+c1be*x**446+c1bf*x**447)
      (L0x7fffffffd540*x**48+L0x7fffffffd542*x**49+L0x7fffffffd544*x**50+
       L0x7fffffffd546*x**51+L0x7fffffffd548*x**52+L0x7fffffffd54a*x**53+
       L0x7fffffffd54c*x**54+L0x7fffffffd54e*x**55+L0x7fffffffd550*x**56+
       L0x7fffffffd552*x**57+L0x7fffffffd554*x**58+L0x7fffffffd556*x**59+
       L0x7fffffffd558*x**60+L0x7fffffffd55a*x**61+L0x7fffffffd55c*x**62+
       L0x7fffffffd55e*x**63)
      [10753, x**128 - 6264],
eqmod (c030*x** 48+c031*x** 49+c032*x** 50+c033*x** 51+
       c034*x** 52+c035*x** 53+c036*x** 54+c037*x** 55+
       c038*x** 56+c039*x** 57+c03a*x** 58+c03b*x** 59+
       c03c*x** 60+c03d*x** 61+c03e*x** 62+c03f*x** 63+
       c0b0*x**176+c0b1*x**177+c0b2*x**178+c0b3*x**179+
       c0b4*x**180+c0b5*x**181+c0b6*x**182+c0b7*x**183+
       c0b8*x**184+c0b9*x**185+c0ba*x**186+c0bb*x**187+
       c0bc*x**188+c0bd*x**189+c0be*x**190+c0bf*x**191+
       c130*x**304+c131*x**305+c132*x**306+c133*x**307+
       c134*x**308+c135*x**309+c136*x**310+c137*x**311+
       c138*x**312+c139*x**313+c13a*x**314+c13b*x**315+
       c13c*x**316+c13d*x**317+c13e*x**318+c13f*x**319+
       c1b0*x**432+c1b1*x**433+c1b2*x**434+c1b3*x**435+
       c1b4*x**436+c1b5*x**437+c1b6*x**438+c1b7*x**439+
       c1b8*x**440+c1b9*x**441+c1ba*x**442+c1bb*x**443+
       c1bc*x**444+c1bd*x**445+c1be*x**446+c1bf*x**447)
      (L0x7fffffffd640*x**48+L0x7fffffffd642*x**49+L0x7fffffffd644*x**50+
       L0x7fffffffd646*x**51+L0x7fffffffd648*x**52+L0x7fffffffd64a*x**53+
       L0x7fffffffd64c*x**54+L0x7fffffffd64e*x**55+L0x7fffffffd650*x**56+
       L0x7fffffffd652*x**57+L0x7fffffffd654*x**58+L0x7fffffffd656*x**59+
       L0x7fffffffd658*x**60+L0x7fffffffd65a*x**61+L0x7fffffffd65c*x**62+
       L0x7fffffffd65e*x**63)
      [10753, x**128 - 4489],
eqmod (c030*x** 48+c031*x** 49+c032*x** 50+c033*x** 51+
       c034*x** 52+c035*x** 53+c036*x** 54+c037*x** 55+
       c038*x** 56+c039*x** 57+c03a*x** 58+c03b*x** 59+
       c03c*x** 60+c03d*x** 61+c03e*x** 62+c03f*x** 63+
       c0b0*x**176+c0b1*x**177+c0b2*x**178+c0b3*x**179+
       c0b4*x**180+c0b5*x**181+c0b6*x**182+c0b7*x**183+
       c0b8*x**184+c0b9*x**185+c0ba*x**186+c0bb*x**187+
       c0bc*x**188+c0bd*x**189+c0be*x**190+c0bf*x**191+
       c130*x**304+c131*x**305+c132*x**306+c133*x**307+
       c134*x**308+c135*x**309+c136*x**310+c137*x**311+
       c138*x**312+c139*x**313+c13a*x**314+c13b*x**315+
       c13c*x**316+c13d*x**317+c13e*x**318+c13f*x**319+
       c1b0*x**432+c1b1*x**433+c1b2*x**434+c1b3*x**435+
       c1b4*x**436+c1b5*x**437+c1b6*x**438+c1b7*x**439+
       c1b8*x**440+c1b9*x**441+c1ba*x**442+c1bb*x**443+
       c1bc*x**444+c1bd*x**445+c1be*x**446+c1bf*x**447)
      (L0x7fffffffd740*x**48+L0x7fffffffd742*x**49+L0x7fffffffd744*x**50+
       L0x7fffffffd746*x**51+L0x7fffffffd748*x**52+L0x7fffffffd74a*x**53+
       L0x7fffffffd74c*x**54+L0x7fffffffd74e*x**55+L0x7fffffffd750*x**56+
       L0x7fffffffd752*x**57+L0x7fffffffd754*x**58+L0x7fffffffd756*x**59+
       L0x7fffffffd758*x**60+L0x7fffffffd75a*x**61+L0x7fffffffd75c*x**62+
       L0x7fffffffd75e*x**63)
      [10753, x**128 - 321],
eqmod (c030*x** 48+c031*x** 49+c032*x** 50+c033*x** 51+
       c034*x** 52+c035*x** 53+c036*x** 54+c037*x** 55+
       c038*x** 56+c039*x** 57+c03a*x** 58+c03b*x** 59+
       c03c*x** 60+c03d*x** 61+c03e*x** 62+c03f*x** 63+
       c0b0*x**176+c0b1*x**177+c0b2*x**178+c0b3*x**179+
       c0b4*x**180+c0b5*x**181+c0b6*x**182+c0b7*x**183+
       c0b8*x**184+c0b9*x**185+c0ba*x**186+c0bb*x**187+
       c0bc*x**188+c0bd*x**189+c0be*x**190+c0bf*x**191+
       c130*x**304+c131*x**305+c132*x**306+c133*x**307+
       c134*x**308+c135*x**309+c136*x**310+c137*x**311+
       c138*x**312+c139*x**313+c13a*x**314+c13b*x**315+
       c13c*x**316+c13d*x**317+c13e*x**318+c13f*x**319+
       c1b0*x**432+c1b1*x**433+c1b2*x**434+c1b3*x**435+
       c1b4*x**436+c1b5*x**437+c1b6*x**438+c1b7*x**439+
       c1b8*x**440+c1b9*x**441+c1ba*x**442+c1bb*x**443+
       c1bc*x**444+c1bd*x**445+c1be*x**446+c1bf*x**447)
      (L0x7fffffffd840*x**48+L0x7fffffffd842*x**49+L0x7fffffffd844*x**50+
       L0x7fffffffd846*x**51+L0x7fffffffd848*x**52+L0x7fffffffd84a*x**53+
       L0x7fffffffd84c*x**54+L0x7fffffffd84e*x**55+L0x7fffffffd850*x**56+
       L0x7fffffffd852*x**57+L0x7fffffffd854*x**58+L0x7fffffffd856*x**59+
       L0x7fffffffd858*x**60+L0x7fffffffd85a*x**61+L0x7fffffffd85c*x**62+
       L0x7fffffffd85e*x**63)
      [10753, x**128 - 10432],
eqmod (c030*x** 48+c031*x** 49+c032*x** 50+c033*x** 51+
       c034*x** 52+c035*x** 53+c036*x** 54+c037*x** 55+
       c038*x** 56+c039*x** 57+c03a*x** 58+c03b*x** 59+
       c03c*x** 60+c03d*x** 61+c03e*x** 62+c03f*x** 63+
       c0b0*x**176+c0b1*x**177+c0b2*x**178+c0b3*x**179+
       c0b4*x**180+c0b5*x**181+c0b6*x**182+c0b7*x**183+
       c0b8*x**184+c0b9*x**185+c0ba*x**186+c0bb*x**187+
       c0bc*x**188+c0bd*x**189+c0be*x**190+c0bf*x**191+
       c130*x**304+c131*x**305+c132*x**306+c133*x**307+
       c134*x**308+c135*x**309+c136*x**310+c137*x**311+
       c138*x**312+c139*x**313+c13a*x**314+c13b*x**315+
       c13c*x**316+c13d*x**317+c13e*x**318+c13f*x**319+
       c1b0*x**432+c1b1*x**433+c1b2*x**434+c1b3*x**435+
       c1b4*x**436+c1b5*x**437+c1b6*x**438+c1b7*x**439+
       c1b8*x**440+c1b9*x**441+c1ba*x**442+c1bb*x**443+
       c1bc*x**444+c1bd*x**445+c1be*x**446+c1bf*x**447)
      (L0x7fffffffd940*x**48+L0x7fffffffd942*x**49+L0x7fffffffd944*x**50+
       L0x7fffffffd946*x**51+L0x7fffffffd948*x**52+L0x7fffffffd94a*x**53+
       L0x7fffffffd94c*x**54+L0x7fffffffd94e*x**55+L0x7fffffffd950*x**56+
       L0x7fffffffd952*x**57+L0x7fffffffd954*x**58+L0x7fffffffd956*x**59+
       L0x7fffffffd958*x**60+L0x7fffffffd95a*x**61+L0x7fffffffd95c*x**62+
       L0x7fffffffd95e*x**63)
      [10753, x**128 - 10686],
eqmod (c030*x** 48+c031*x** 49+c032*x** 50+c033*x** 51+
       c034*x** 52+c035*x** 53+c036*x** 54+c037*x** 55+
       c038*x** 56+c039*x** 57+c03a*x** 58+c03b*x** 59+
       c03c*x** 60+c03d*x** 61+c03e*x** 62+c03f*x** 63+
       c0b0*x**176+c0b1*x**177+c0b2*x**178+c0b3*x**179+
       c0b4*x**180+c0b5*x**181+c0b6*x**182+c0b7*x**183+
       c0b8*x**184+c0b9*x**185+c0ba*x**186+c0bb*x**187+
       c0bc*x**188+c0bd*x**189+c0be*x**190+c0bf*x**191+
       c130*x**304+c131*x**305+c132*x**306+c133*x**307+
       c134*x**308+c135*x**309+c136*x**310+c137*x**311+
       c138*x**312+c139*x**313+c13a*x**314+c13b*x**315+
       c13c*x**316+c13d*x**317+c13e*x**318+c13f*x**319+
       c1b0*x**432+c1b1*x**433+c1b2*x**434+c1b3*x**435+
       c1b4*x**436+c1b5*x**437+c1b6*x**438+c1b7*x**439+
       c1b8*x**440+c1b9*x**441+c1ba*x**442+c1bb*x**443+
       c1bc*x**444+c1bd*x**445+c1be*x**446+c1bf*x**447)
      (L0x7fffffffda40*x**48+L0x7fffffffda42*x**49+L0x7fffffffda44*x**50+
       L0x7fffffffda46*x**51+L0x7fffffffda48*x**52+L0x7fffffffda4a*x**53+
       L0x7fffffffda4c*x**54+L0x7fffffffda4e*x**55+L0x7fffffffda50*x**56+
       L0x7fffffffda52*x**57+L0x7fffffffda54*x**58+L0x7fffffffda56*x**59+
       L0x7fffffffda58*x**60+L0x7fffffffda5a*x**61+L0x7fffffffda5c*x**62+
       L0x7fffffffda5e*x**63)
      [10753, x**128 - 67]
  ];


(* === split the CUT into 8 slices === *)

(**************** CUT  56,  0 *****************)

ecut true;

(**************** CUT  57,  0 *****************)

ecut 
  and [
eqmod (c030*x** 48+c031*x** 49+c032*x** 50+c033*x** 51+
       c034*x** 52+c035*x** 53+c036*x** 54+c037*x** 55+
       c038*x** 56+c039*x** 57+c03a*x** 58+c03b*x** 59+
       c03c*x** 60+c03d*x** 61+c03e*x** 62+c03f*x** 63+
       c0b0*x**176+c0b1*x**177+c0b2*x**178+c0b3*x**179+
       c0b4*x**180+c0b5*x**181+c0b6*x**182+c0b7*x**183+
       c0b8*x**184+c0b9*x**185+c0ba*x**186+c0bb*x**187+
       c0bc*x**188+c0bd*x**189+c0be*x**190+c0bf*x**191+
       c130*x**304+c131*x**305+c132*x**306+c133*x**307+
       c134*x**308+c135*x**309+c136*x**310+c137*x**311+
       c138*x**312+c139*x**313+c13a*x**314+c13b*x**315+
       c13c*x**316+c13d*x**317+c13e*x**318+c13f*x**319+
       c1b0*x**432+c1b1*x**433+c1b2*x**434+c1b3*x**435+
       c1b4*x**436+c1b5*x**437+c1b6*x**438+c1b7*x**439+
       c1b8*x**440+c1b9*x**441+c1ba*x**442+c1bb*x**443+
       c1bc*x**444+c1bd*x**445+c1be*x**446+c1bf*x**447)
      (L0x7fffffffd340*x**48+L0x7fffffffd342*x**49+L0x7fffffffd344*x**50+
       L0x7fffffffd346*x**51+L0x7fffffffd348*x**52+L0x7fffffffd34a*x**53+
       L0x7fffffffd34c*x**54+L0x7fffffffd34e*x**55+L0x7fffffffd350*x**56+
       L0x7fffffffd352*x**57+L0x7fffffffd354*x**58+L0x7fffffffd356*x**59+
       L0x7fffffffd358*x**60+L0x7fffffffd35a*x**61+L0x7fffffffd35c*x**62+
       L0x7fffffffd35e*x**63)
      [10753, x**128 - 1]
  ] prove with [cuts [55]];


(**************** CUT  58,  0 *****************)

ecut true;

(**************** CUT  59,  0 *****************)

ecut 
  and [
eqmod (c030*x** 48+c031*x** 49+c032*x** 50+c033*x** 51+
       c034*x** 52+c035*x** 53+c036*x** 54+c037*x** 55+
       c038*x** 56+c039*x** 57+c03a*x** 58+c03b*x** 59+
       c03c*x** 60+c03d*x** 61+c03e*x** 62+c03f*x** 63+
       c0b0*x**176+c0b1*x**177+c0b2*x**178+c0b3*x**179+
       c0b4*x**180+c0b5*x**181+c0b6*x**182+c0b7*x**183+
       c0b8*x**184+c0b9*x**185+c0ba*x**186+c0bb*x**187+
       c0bc*x**188+c0bd*x**189+c0be*x**190+c0bf*x**191+
       c130*x**304+c131*x**305+c132*x**306+c133*x**307+
       c134*x**308+c135*x**309+c136*x**310+c137*x**311+
       c138*x**312+c139*x**313+c13a*x**314+c13b*x**315+
       c13c*x**316+c13d*x**317+c13e*x**318+c13f*x**319+
       c1b0*x**432+c1b1*x**433+c1b2*x**434+c1b3*x**435+
       c1b4*x**436+c1b5*x**437+c1b6*x**438+c1b7*x**439+
       c1b8*x**440+c1b9*x**441+c1ba*x**442+c1bb*x**443+
       c1bc*x**444+c1bd*x**445+c1be*x**446+c1bf*x**447)
      (L0x7fffffffd440*x**48+L0x7fffffffd442*x**49+L0x7fffffffd444*x**50+
       L0x7fffffffd446*x**51+L0x7fffffffd448*x**52+L0x7fffffffd44a*x**53+
       L0x7fffffffd44c*x**54+L0x7fffffffd44e*x**55+L0x7fffffffd450*x**56+
       L0x7fffffffd452*x**57+L0x7fffffffd454*x**58+L0x7fffffffd456*x**59+
       L0x7fffffffd458*x**60+L0x7fffffffd45a*x**61+L0x7fffffffd45c*x**62+
       L0x7fffffffd45e*x**63)
      [10753, x**128 - 10752]
  ] prove with [cuts [55]];


(**************** CUT  60,  0 *****************)

ecut true;

(**************** CUT  61,  0 *****************)

ecut 
  and [
eqmod (c030*x** 48+c031*x** 49+c032*x** 50+c033*x** 51+
       c034*x** 52+c035*x** 53+c036*x** 54+c037*x** 55+
       c038*x** 56+c039*x** 57+c03a*x** 58+c03b*x** 59+
       c03c*x** 60+c03d*x** 61+c03e*x** 62+c03f*x** 63+
       c0b0*x**176+c0b1*x**177+c0b2*x**178+c0b3*x**179+
       c0b4*x**180+c0b5*x**181+c0b6*x**182+c0b7*x**183+
       c0b8*x**184+c0b9*x**185+c0ba*x**186+c0bb*x**187+
       c0bc*x**188+c0bd*x**189+c0be*x**190+c0bf*x**191+
       c130*x**304+c131*x**305+c132*x**306+c133*x**307+
       c134*x**308+c135*x**309+c136*x**310+c137*x**311+
       c138*x**312+c139*x**313+c13a*x**314+c13b*x**315+
       c13c*x**316+c13d*x**317+c13e*x**318+c13f*x**319+
       c1b0*x**432+c1b1*x**433+c1b2*x**434+c1b3*x**435+
       c1b4*x**436+c1b5*x**437+c1b6*x**438+c1b7*x**439+
       c1b8*x**440+c1b9*x**441+c1ba*x**442+c1bb*x**443+
       c1bc*x**444+c1bd*x**445+c1be*x**446+c1bf*x**447)
      (L0x7fffffffd540*x**48+L0x7fffffffd542*x**49+L0x7fffffffd544*x**50+
       L0x7fffffffd546*x**51+L0x7fffffffd548*x**52+L0x7fffffffd54a*x**53+
       L0x7fffffffd54c*x**54+L0x7fffffffd54e*x**55+L0x7fffffffd550*x**56+
       L0x7fffffffd552*x**57+L0x7fffffffd554*x**58+L0x7fffffffd556*x**59+
       L0x7fffffffd558*x**60+L0x7fffffffd55a*x**61+L0x7fffffffd55c*x**62+
       L0x7fffffffd55e*x**63)
      [10753, x**128 - 6264]
  ] prove with [cuts [55]];


(**************** CUT  62,  0 *****************)

ecut true;

(**************** CUT  63,  0 *****************)

ecut 
  and [
eqmod (c030*x** 48+c031*x** 49+c032*x** 50+c033*x** 51+
       c034*x** 52+c035*x** 53+c036*x** 54+c037*x** 55+
       c038*x** 56+c039*x** 57+c03a*x** 58+c03b*x** 59+
       c03c*x** 60+c03d*x** 61+c03e*x** 62+c03f*x** 63+
       c0b0*x**176+c0b1*x**177+c0b2*x**178+c0b3*x**179+
       c0b4*x**180+c0b5*x**181+c0b6*x**182+c0b7*x**183+
       c0b8*x**184+c0b9*x**185+c0ba*x**186+c0bb*x**187+
       c0bc*x**188+c0bd*x**189+c0be*x**190+c0bf*x**191+
       c130*x**304+c131*x**305+c132*x**306+c133*x**307+
       c134*x**308+c135*x**309+c136*x**310+c137*x**311+
       c138*x**312+c139*x**313+c13a*x**314+c13b*x**315+
       c13c*x**316+c13d*x**317+c13e*x**318+c13f*x**319+
       c1b0*x**432+c1b1*x**433+c1b2*x**434+c1b3*x**435+
       c1b4*x**436+c1b5*x**437+c1b6*x**438+c1b7*x**439+
       c1b8*x**440+c1b9*x**441+c1ba*x**442+c1bb*x**443+
       c1bc*x**444+c1bd*x**445+c1be*x**446+c1bf*x**447)
      (L0x7fffffffd640*x**48+L0x7fffffffd642*x**49+L0x7fffffffd644*x**50+
       L0x7fffffffd646*x**51+L0x7fffffffd648*x**52+L0x7fffffffd64a*x**53+
       L0x7fffffffd64c*x**54+L0x7fffffffd64e*x**55+L0x7fffffffd650*x**56+
       L0x7fffffffd652*x**57+L0x7fffffffd654*x**58+L0x7fffffffd656*x**59+
       L0x7fffffffd658*x**60+L0x7fffffffd65a*x**61+L0x7fffffffd65c*x**62+
       L0x7fffffffd65e*x**63)
      [10753, x**128 - 4489]
  ] prove with [cuts [55]];


(**************** CUT  64,  0 *****************)

ecut true;

(**************** CUT  65,  0 *****************)

ecut 
  and [
eqmod (c030*x** 48+c031*x** 49+c032*x** 50+c033*x** 51+
       c034*x** 52+c035*x** 53+c036*x** 54+c037*x** 55+
       c038*x** 56+c039*x** 57+c03a*x** 58+c03b*x** 59+
       c03c*x** 60+c03d*x** 61+c03e*x** 62+c03f*x** 63+
       c0b0*x**176+c0b1*x**177+c0b2*x**178+c0b3*x**179+
       c0b4*x**180+c0b5*x**181+c0b6*x**182+c0b7*x**183+
       c0b8*x**184+c0b9*x**185+c0ba*x**186+c0bb*x**187+
       c0bc*x**188+c0bd*x**189+c0be*x**190+c0bf*x**191+
       c130*x**304+c131*x**305+c132*x**306+c133*x**307+
       c134*x**308+c135*x**309+c136*x**310+c137*x**311+
       c138*x**312+c139*x**313+c13a*x**314+c13b*x**315+
       c13c*x**316+c13d*x**317+c13e*x**318+c13f*x**319+
       c1b0*x**432+c1b1*x**433+c1b2*x**434+c1b3*x**435+
       c1b4*x**436+c1b5*x**437+c1b6*x**438+c1b7*x**439+
       c1b8*x**440+c1b9*x**441+c1ba*x**442+c1bb*x**443+
       c1bc*x**444+c1bd*x**445+c1be*x**446+c1bf*x**447)
      (L0x7fffffffd740*x**48+L0x7fffffffd742*x**49+L0x7fffffffd744*x**50+
       L0x7fffffffd746*x**51+L0x7fffffffd748*x**52+L0x7fffffffd74a*x**53+
       L0x7fffffffd74c*x**54+L0x7fffffffd74e*x**55+L0x7fffffffd750*x**56+
       L0x7fffffffd752*x**57+L0x7fffffffd754*x**58+L0x7fffffffd756*x**59+
       L0x7fffffffd758*x**60+L0x7fffffffd75a*x**61+L0x7fffffffd75c*x**62+
       L0x7fffffffd75e*x**63)
      [10753, x**128 - 321]
  ] prove with [cuts [55]];


(**************** CUT  66,  0 *****************)

ecut true;

(**************** CUT  67,  0 *****************)

ecut 
  and [
eqmod (c030*x** 48+c031*x** 49+c032*x** 50+c033*x** 51+
       c034*x** 52+c035*x** 53+c036*x** 54+c037*x** 55+
       c038*x** 56+c039*x** 57+c03a*x** 58+c03b*x** 59+
       c03c*x** 60+c03d*x** 61+c03e*x** 62+c03f*x** 63+
       c0b0*x**176+c0b1*x**177+c0b2*x**178+c0b3*x**179+
       c0b4*x**180+c0b5*x**181+c0b6*x**182+c0b7*x**183+
       c0b8*x**184+c0b9*x**185+c0ba*x**186+c0bb*x**187+
       c0bc*x**188+c0bd*x**189+c0be*x**190+c0bf*x**191+
       c130*x**304+c131*x**305+c132*x**306+c133*x**307+
       c134*x**308+c135*x**309+c136*x**310+c137*x**311+
       c138*x**312+c139*x**313+c13a*x**314+c13b*x**315+
       c13c*x**316+c13d*x**317+c13e*x**318+c13f*x**319+
       c1b0*x**432+c1b1*x**433+c1b2*x**434+c1b3*x**435+
       c1b4*x**436+c1b5*x**437+c1b6*x**438+c1b7*x**439+
       c1b8*x**440+c1b9*x**441+c1ba*x**442+c1bb*x**443+
       c1bc*x**444+c1bd*x**445+c1be*x**446+c1bf*x**447)
      (L0x7fffffffd840*x**48+L0x7fffffffd842*x**49+L0x7fffffffd844*x**50+
       L0x7fffffffd846*x**51+L0x7fffffffd848*x**52+L0x7fffffffd84a*x**53+
       L0x7fffffffd84c*x**54+L0x7fffffffd84e*x**55+L0x7fffffffd850*x**56+
       L0x7fffffffd852*x**57+L0x7fffffffd854*x**58+L0x7fffffffd856*x**59+
       L0x7fffffffd858*x**60+L0x7fffffffd85a*x**61+L0x7fffffffd85c*x**62+
       L0x7fffffffd85e*x**63)
      [10753, x**128 - 10432]
  ] prove with [cuts [55]];


(**************** CUT  68,  0 *****************)

ecut true;

(**************** CUT  69,  0 *****************)

ecut 
  and [
eqmod (c030*x** 48+c031*x** 49+c032*x** 50+c033*x** 51+
       c034*x** 52+c035*x** 53+c036*x** 54+c037*x** 55+
       c038*x** 56+c039*x** 57+c03a*x** 58+c03b*x** 59+
       c03c*x** 60+c03d*x** 61+c03e*x** 62+c03f*x** 63+
       c0b0*x**176+c0b1*x**177+c0b2*x**178+c0b3*x**179+
       c0b4*x**180+c0b5*x**181+c0b6*x**182+c0b7*x**183+
       c0b8*x**184+c0b9*x**185+c0ba*x**186+c0bb*x**187+
       c0bc*x**188+c0bd*x**189+c0be*x**190+c0bf*x**191+
       c130*x**304+c131*x**305+c132*x**306+c133*x**307+
       c134*x**308+c135*x**309+c136*x**310+c137*x**311+
       c138*x**312+c139*x**313+c13a*x**314+c13b*x**315+
       c13c*x**316+c13d*x**317+c13e*x**318+c13f*x**319+
       c1b0*x**432+c1b1*x**433+c1b2*x**434+c1b3*x**435+
       c1b4*x**436+c1b5*x**437+c1b6*x**438+c1b7*x**439+
       c1b8*x**440+c1b9*x**441+c1ba*x**442+c1bb*x**443+
       c1bc*x**444+c1bd*x**445+c1be*x**446+c1bf*x**447)
      (L0x7fffffffd940*x**48+L0x7fffffffd942*x**49+L0x7fffffffd944*x**50+
       L0x7fffffffd946*x**51+L0x7fffffffd948*x**52+L0x7fffffffd94a*x**53+
       L0x7fffffffd94c*x**54+L0x7fffffffd94e*x**55+L0x7fffffffd950*x**56+
       L0x7fffffffd952*x**57+L0x7fffffffd954*x**58+L0x7fffffffd956*x**59+
       L0x7fffffffd958*x**60+L0x7fffffffd95a*x**61+L0x7fffffffd95c*x**62+
       L0x7fffffffd95e*x**63)
      [10753, x**128 - 10686]
  ] prove with [cuts [55]];


(**************** CUT  70,  0 *****************)

ecut true;

(**************** CUT  71,  0 *****************)

ecut 
  and [
eqmod (c030*x** 48+c031*x** 49+c032*x** 50+c033*x** 51+
       c034*x** 52+c035*x** 53+c036*x** 54+c037*x** 55+
       c038*x** 56+c039*x** 57+c03a*x** 58+c03b*x** 59+
       c03c*x** 60+c03d*x** 61+c03e*x** 62+c03f*x** 63+
       c0b0*x**176+c0b1*x**177+c0b2*x**178+c0b3*x**179+
       c0b4*x**180+c0b5*x**181+c0b6*x**182+c0b7*x**183+
       c0b8*x**184+c0b9*x**185+c0ba*x**186+c0bb*x**187+
       c0bc*x**188+c0bd*x**189+c0be*x**190+c0bf*x**191+
       c130*x**304+c131*x**305+c132*x**306+c133*x**307+
       c134*x**308+c135*x**309+c136*x**310+c137*x**311+
       c138*x**312+c139*x**313+c13a*x**314+c13b*x**315+
       c13c*x**316+c13d*x**317+c13e*x**318+c13f*x**319+
       c1b0*x**432+c1b1*x**433+c1b2*x**434+c1b3*x**435+
       c1b4*x**436+c1b5*x**437+c1b6*x**438+c1b7*x**439+
       c1b8*x**440+c1b9*x**441+c1ba*x**442+c1bb*x**443+
       c1bc*x**444+c1bd*x**445+c1be*x**446+c1bf*x**447)
      (L0x7fffffffda40*x**48+L0x7fffffffda42*x**49+L0x7fffffffda44*x**50+
       L0x7fffffffda46*x**51+L0x7fffffffda48*x**52+L0x7fffffffda4a*x**53+
       L0x7fffffffda4c*x**54+L0x7fffffffda4e*x**55+L0x7fffffffda50*x**56+
       L0x7fffffffda52*x**57+L0x7fffffffda54*x**58+L0x7fffffffda56*x**59+
       L0x7fffffffda58*x**60+L0x7fffffffda5a*x**61+L0x7fffffffda5c*x**62+
       L0x7fffffffda5e*x**63)
      [10753, x**128 - 67]
  ] prove with [cuts [55]];



(* === be ready for next level and offset === *)

(**************** CUT  72,  0 *****************)

ecut true;



(* vpbroadcastw 0x102(%rdx),%ymm1                  #! EA = L0x555555561222; Value = 0x276d0198f85c6adf; PC = 0x5555555570e1 *)
mov ymm1_0 L0x555555561222;
mov ymm1_1 L0x555555561222;
mov ymm1_2 L0x555555561222;
mov ymm1_3 L0x555555561222;
mov ymm1_4 L0x555555561222;
mov ymm1_5 L0x555555561222;
mov ymm1_6 L0x555555561222;
mov ymm1_7 L0x555555561222;
mov ymm1_8 L0x555555561222;
mov ymm1_9 L0x555555561222;
mov ymm1_a L0x555555561222;
mov ymm1_b L0x555555561222;
mov ymm1_c L0x555555561222;
mov ymm1_d L0x555555561222;
mov ymm1_e L0x555555561222;
mov ymm1_f L0x555555561222;
(* vpbroadcastw 0x302(%rdx),%ymm2                  #! EA = L0x555555561422; Value = 0x096df198105c00df; PC = 0x5555555570ea *)
mov ymm2_0 L0x555555561422;
mov ymm2_1 L0x555555561422;
mov ymm2_2 L0x555555561422;
mov ymm2_3 L0x555555561422;
mov ymm2_4 L0x555555561422;
mov ymm2_5 L0x555555561422;
mov ymm2_6 L0x555555561422;
mov ymm2_7 L0x555555561422;
mov ymm2_8 L0x555555561422;
mov ymm2_9 L0x555555561422;
mov ymm2_a L0x555555561422;
mov ymm2_b L0x555555561422;
mov ymm2_c L0x555555561422;
mov ymm2_d L0x555555561422;
mov ymm2_e L0x555555561422;
mov ymm2_f L0x555555561422;
(* vmovdqa 0x280(%rsi),%ymm6                       #! EA = L0x7fffffffcd60; Value = 0x0000000000000000; PC = 0x5555555570f3 *)
mov ymm6_0 L0x7fffffffcd60;
mov ymm6_1 L0x7fffffffcd62;
mov ymm6_2 L0x7fffffffcd64;
mov ymm6_3 L0x7fffffffcd66;
mov ymm6_4 L0x7fffffffcd68;
mov ymm6_5 L0x7fffffffcd6a;
mov ymm6_6 L0x7fffffffcd6c;
mov ymm6_7 L0x7fffffffcd6e;
mov ymm6_8 L0x7fffffffcd70;
mov ymm6_9 L0x7fffffffcd72;
mov ymm6_a L0x7fffffffcd74;
mov ymm6_b L0x7fffffffcd76;
mov ymm6_c L0x7fffffffcd78;
mov ymm6_d L0x7fffffffcd7a;
mov ymm6_e L0x7fffffffcd7c;
mov ymm6_f L0x7fffffffcd7e;
(* vmovdqa 0x380(%rsi),%ymm7                       #! EA = L0x7fffffffce60; Value = 0x0000000000000000; PC = 0x5555555570fb *)
mov ymm7_0 L0x7fffffffce60;
mov ymm7_1 L0x7fffffffce62;
mov ymm7_2 L0x7fffffffce64;
mov ymm7_3 L0x7fffffffce66;
mov ymm7_4 L0x7fffffffce68;
mov ymm7_5 L0x7fffffffce6a;
mov ymm7_6 L0x7fffffffce6c;
mov ymm7_7 L0x7fffffffce6e;
mov ymm7_8 L0x7fffffffce70;
mov ymm7_9 L0x7fffffffce72;
mov ymm7_a L0x7fffffffce74;
mov ymm7_b L0x7fffffffce76;
mov ymm7_c L0x7fffffffce78;
mov ymm7_d L0x7fffffffce7a;
mov ymm7_e L0x7fffffffce7c;
mov ymm7_f L0x7fffffffce7e;
(* vpmullw %ymm1,%ymm6,%ymm3                       #! PC = 0x555555557103 *)
smull mulHymm6_0 mulL_0 ymm1_0 ymm6_0;
smull mulHymm6_1 mulL_1 ymm1_1 ymm6_1;
smull mulHymm6_2 mulL_2 ymm1_2 ymm6_2;
smull mulHymm6_3 mulL_3 ymm1_3 ymm6_3;
smull mulHymm6_4 mulL_4 ymm1_4 ymm6_4;
smull mulHymm6_5 mulL_5 ymm1_5 ymm6_5;
smull mulHymm6_6 mulL_6 ymm1_6 ymm6_6;
smull mulHymm6_7 mulL_7 ymm1_7 ymm6_7;
smull mulHymm6_8 mulL_8 ymm1_8 ymm6_8;
smull mulHymm6_9 mulL_9 ymm1_9 ymm6_9;
smull mulHymm6_a mulL_a ymm1_a ymm6_a;
smull mulHymm6_b mulL_b ymm1_b ymm6_b;
smull mulHymm6_c mulL_c ymm1_c ymm6_c;
smull mulHymm6_d mulL_d ymm1_d ymm6_d;
smull mulHymm6_e mulL_e ymm1_e ymm6_e;
smull mulHymm6_f mulL_f ymm1_f ymm6_f;
cast ymm3_0@sint16 mulL_0;
cast ymm3_1@sint16 mulL_1;
cast ymm3_2@sint16 mulL_2;
cast ymm3_3@sint16 mulL_3;
cast ymm3_4@sint16 mulL_4;
cast ymm3_5@sint16 mulL_5;
cast ymm3_6@sint16 mulL_6;
cast ymm3_7@sint16 mulL_7;
cast ymm3_8@sint16 mulL_8;
cast ymm3_9@sint16 mulL_9;
cast ymm3_a@sint16 mulL_a;
cast ymm3_b@sint16 mulL_b;
cast ymm3_c@sint16 mulL_c;
cast ymm3_d@sint16 mulL_d;
cast ymm3_e@sint16 mulL_e;
cast ymm3_f@sint16 mulL_f;
(* vpmulhw %ymm2,%ymm6,%ymm10                      #! PC = 0x555555557107 *)
smull mulH_0 mulLymm6_0 ymm6_0 ymm2_0;
smull mulH_1 mulLymm6_1 ymm6_1 ymm2_1;
smull mulH_2 mulLymm6_2 ymm6_2 ymm2_2;
smull mulH_3 mulLymm6_3 ymm6_3 ymm2_3;
smull mulH_4 mulLymm6_4 ymm6_4 ymm2_4;
smull mulH_5 mulLymm6_5 ymm6_5 ymm2_5;
smull mulH_6 mulLymm6_6 ymm6_6 ymm2_6;
smull mulH_7 mulLymm6_7 ymm6_7 ymm2_7;
smull mulH_8 mulLymm6_8 ymm6_8 ymm2_8;
smull mulH_9 mulLymm6_9 ymm6_9 ymm2_9;
smull mulH_a mulLymm6_a ymm6_a ymm2_a;
smull mulH_b mulLymm6_b ymm6_b ymm2_b;
smull mulH_c mulLymm6_c ymm6_c ymm2_c;
smull mulH_d mulLymm6_d ymm6_d ymm2_d;
smull mulH_e mulLymm6_e ymm6_e ymm2_e;
smull mulH_f mulLymm6_f ymm6_f ymm2_f;
mov ymm10_0 mulH_0;
mov ymm10_1 mulH_1;
mov ymm10_2 mulH_2;
mov ymm10_3 mulH_3;
mov ymm10_4 mulH_4;
mov ymm10_5 mulH_5;
mov ymm10_6 mulH_6;
mov ymm10_7 mulH_7;
mov ymm10_8 mulH_8;
mov ymm10_9 mulH_9;
mov ymm10_a mulH_a;
mov ymm10_b mulH_b;
mov ymm10_c mulH_c;
mov ymm10_d mulH_d;
mov ymm10_e mulH_e;
mov ymm10_f mulH_f;
(* vpmulhw %ymm0,%ymm3,%ymm3                       #! PC = 0x55555555710b *)
smull mulH_0 red_0 ymm3_0 ymm0_0;
assert true && red_0 = mulLymm6_0;
assume red_0 = mulLymm6_0 && true;
smull mulH_1 red_1 ymm3_1 ymm0_1;
assert true && red_1 = mulLymm6_1;
assume red_1 = mulLymm6_1 && true;
smull mulH_2 red_2 ymm3_2 ymm0_2;
assert true && red_2 = mulLymm6_2;
assume red_2 = mulLymm6_2 && true;
smull mulH_3 red_3 ymm3_3 ymm0_3;
assert true && red_3 = mulLymm6_3;
assume red_3 = mulLymm6_3 && true;
smull mulH_4 red_4 ymm3_4 ymm0_4;
assert true && red_4 = mulLymm6_4;
assume red_4 = mulLymm6_4 && true;
smull mulH_5 red_5 ymm3_5 ymm0_5;
assert true && red_5 = mulLymm6_5;
assume red_5 = mulLymm6_5 && true;
smull mulH_6 red_6 ymm3_6 ymm0_6;
assert true && red_6 = mulLymm6_6;
assume red_6 = mulLymm6_6 && true;
smull mulH_7 red_7 ymm3_7 ymm0_7;
assert true && red_7 = mulLymm6_7;
assume red_7 = mulLymm6_7 && true;
smull mulH_8 red_8 ymm3_8 ymm0_8;
assert true && red_8 = mulLymm6_8;
assume red_8 = mulLymm6_8 && true;
smull mulH_9 red_9 ymm3_9 ymm0_9;
assert true && red_9 = mulLymm6_9;
assume red_9 = mulLymm6_9 && true;
smull mulH_a red_a ymm3_a ymm0_a;
assert true && red_a = mulLymm6_a;
assume red_a = mulLymm6_a && true;
smull mulH_b red_b ymm3_b ymm0_b;
assert true && red_b = mulLymm6_b;
assume red_b = mulLymm6_b && true;
smull mulH_c red_c ymm3_c ymm0_c;
assert true && red_c = mulLymm6_c;
assume red_c = mulLymm6_c && true;
smull mulH_d red_d ymm3_d ymm0_d;
assert true && red_d = mulLymm6_d;
assume red_d = mulLymm6_d && true;
smull mulH_e red_e ymm3_e ymm0_e;
assert true && red_e = mulLymm6_e;
assume red_e = mulLymm6_e && true;
smull mulH_f red_f ymm3_f ymm0_f;
assert true && red_f = mulLymm6_f;
assume red_f = mulLymm6_f && true;
mov ymm3_0 mulH_0;
mov ymm3_1 mulH_1;
mov ymm3_2 mulH_2;
mov ymm3_3 mulH_3;
mov ymm3_4 mulH_4;
mov ymm3_5 mulH_5;
mov ymm3_6 mulH_6;
mov ymm3_7 mulH_7;
mov ymm3_8 mulH_8;
mov ymm3_9 mulH_9;
mov ymm3_a mulH_a;
mov ymm3_b mulH_b;
mov ymm3_c mulH_c;
mov ymm3_d mulH_d;
mov ymm3_e mulH_e;
mov ymm3_f mulH_f;
(* vpsubw %ymm3,%ymm10,%ymm10                      #! PC = 0x55555555710f *)
sub ymm10_0 ymm10_0 ymm3_0;
sub ymm10_1 ymm10_1 ymm3_1;
sub ymm10_2 ymm10_2 ymm3_2;
sub ymm10_3 ymm10_3 ymm3_3;
sub ymm10_4 ymm10_4 ymm3_4;
sub ymm10_5 ymm10_5 ymm3_5;
sub ymm10_6 ymm10_6 ymm3_6;
sub ymm10_7 ymm10_7 ymm3_7;
sub ymm10_8 ymm10_8 ymm3_8;
sub ymm10_9 ymm10_9 ymm3_9;
sub ymm10_a ymm10_a ymm3_a;
sub ymm10_b ymm10_b ymm3_b;
sub ymm10_c ymm10_c ymm3_c;
sub ymm10_d ymm10_d ymm3_d;
sub ymm10_e ymm10_e ymm3_e;
sub ymm10_f ymm10_f ymm3_f;
(* vpmullw %ymm1,%ymm7,%ymm3                       #! PC = 0x555555557113 *)
smull mulHymm7_0 mulL_0 ymm1_0 ymm7_0;
smull mulHymm7_1 mulL_1 ymm1_1 ymm7_1;
smull mulHymm7_2 mulL_2 ymm1_2 ymm7_2;
smull mulHymm7_3 mulL_3 ymm1_3 ymm7_3;
smull mulHymm7_4 mulL_4 ymm1_4 ymm7_4;
smull mulHymm7_5 mulL_5 ymm1_5 ymm7_5;
smull mulHymm7_6 mulL_6 ymm1_6 ymm7_6;
smull mulHymm7_7 mulL_7 ymm1_7 ymm7_7;
smull mulHymm7_8 mulL_8 ymm1_8 ymm7_8;
smull mulHymm7_9 mulL_9 ymm1_9 ymm7_9;
smull mulHymm7_a mulL_a ymm1_a ymm7_a;
smull mulHymm7_b mulL_b ymm1_b ymm7_b;
smull mulHymm7_c mulL_c ymm1_c ymm7_c;
smull mulHymm7_d mulL_d ymm1_d ymm7_d;
smull mulHymm7_e mulL_e ymm1_e ymm7_e;
smull mulHymm7_f mulL_f ymm1_f ymm7_f;
cast ymm3_0@sint16 mulL_0;
cast ymm3_1@sint16 mulL_1;
cast ymm3_2@sint16 mulL_2;
cast ymm3_3@sint16 mulL_3;
cast ymm3_4@sint16 mulL_4;
cast ymm3_5@sint16 mulL_5;
cast ymm3_6@sint16 mulL_6;
cast ymm3_7@sint16 mulL_7;
cast ymm3_8@sint16 mulL_8;
cast ymm3_9@sint16 mulL_9;
cast ymm3_a@sint16 mulL_a;
cast ymm3_b@sint16 mulL_b;
cast ymm3_c@sint16 mulL_c;
cast ymm3_d@sint16 mulL_d;
cast ymm3_e@sint16 mulL_e;
cast ymm3_f@sint16 mulL_f;
(* vpmulhw %ymm2,%ymm7,%ymm11                      #! PC = 0x555555557117 *)
smull mulH_0 mulLymm7_0 ymm7_0 ymm2_0;
smull mulH_1 mulLymm7_1 ymm7_1 ymm2_1;
smull mulH_2 mulLymm7_2 ymm7_2 ymm2_2;
smull mulH_3 mulLymm7_3 ymm7_3 ymm2_3;
smull mulH_4 mulLymm7_4 ymm7_4 ymm2_4;
smull mulH_5 mulLymm7_5 ymm7_5 ymm2_5;
smull mulH_6 mulLymm7_6 ymm7_6 ymm2_6;
smull mulH_7 mulLymm7_7 ymm7_7 ymm2_7;
smull mulH_8 mulLymm7_8 ymm7_8 ymm2_8;
smull mulH_9 mulLymm7_9 ymm7_9 ymm2_9;
smull mulH_a mulLymm7_a ymm7_a ymm2_a;
smull mulH_b mulLymm7_b ymm7_b ymm2_b;
smull mulH_c mulLymm7_c ymm7_c ymm2_c;
smull mulH_d mulLymm7_d ymm7_d ymm2_d;
smull mulH_e mulLymm7_e ymm7_e ymm2_e;
smull mulH_f mulLymm7_f ymm7_f ymm2_f;
mov ymm11_0 mulH_0;
mov ymm11_1 mulH_1;
mov ymm11_2 mulH_2;
mov ymm11_3 mulH_3;
mov ymm11_4 mulH_4;
mov ymm11_5 mulH_5;
mov ymm11_6 mulH_6;
mov ymm11_7 mulH_7;
mov ymm11_8 mulH_8;
mov ymm11_9 mulH_9;
mov ymm11_a mulH_a;
mov ymm11_b mulH_b;
mov ymm11_c mulH_c;
mov ymm11_d mulH_d;
mov ymm11_e mulH_e;
mov ymm11_f mulH_f;
(* vpmulhw %ymm0,%ymm3,%ymm3                       #! PC = 0x55555555711b *)
smull mulH_0 red_0 ymm3_0 ymm0_0;
assert true && red_0 = mulLymm7_0;
assume red_0 = mulLymm7_0 && true;
smull mulH_1 red_1 ymm3_1 ymm0_1;
assert true && red_1 = mulLymm7_1;
assume red_1 = mulLymm7_1 && true;
smull mulH_2 red_2 ymm3_2 ymm0_2;
assert true && red_2 = mulLymm7_2;
assume red_2 = mulLymm7_2 && true;
smull mulH_3 red_3 ymm3_3 ymm0_3;
assert true && red_3 = mulLymm7_3;
assume red_3 = mulLymm7_3 && true;
smull mulH_4 red_4 ymm3_4 ymm0_4;
assert true && red_4 = mulLymm7_4;
assume red_4 = mulLymm7_4 && true;
smull mulH_5 red_5 ymm3_5 ymm0_5;
assert true && red_5 = mulLymm7_5;
assume red_5 = mulLymm7_5 && true;
smull mulH_6 red_6 ymm3_6 ymm0_6;
assert true && red_6 = mulLymm7_6;
assume red_6 = mulLymm7_6 && true;
smull mulH_7 red_7 ymm3_7 ymm0_7;
assert true && red_7 = mulLymm7_7;
assume red_7 = mulLymm7_7 && true;
smull mulH_8 red_8 ymm3_8 ymm0_8;
assert true && red_8 = mulLymm7_8;
assume red_8 = mulLymm7_8 && true;
smull mulH_9 red_9 ymm3_9 ymm0_9;
assert true && red_9 = mulLymm7_9;
assume red_9 = mulLymm7_9 && true;
smull mulH_a red_a ymm3_a ymm0_a;
assert true && red_a = mulLymm7_a;
assume red_a = mulLymm7_a && true;
smull mulH_b red_b ymm3_b ymm0_b;
assert true && red_b = mulLymm7_b;
assume red_b = mulLymm7_b && true;
smull mulH_c red_c ymm3_c ymm0_c;
assert true && red_c = mulLymm7_c;
assume red_c = mulLymm7_c && true;
smull mulH_d red_d ymm3_d ymm0_d;
assert true && red_d = mulLymm7_d;
assume red_d = mulLymm7_d && true;
smull mulH_e red_e ymm3_e ymm0_e;
assert true && red_e = mulLymm7_e;
assume red_e = mulLymm7_e && true;
smull mulH_f red_f ymm3_f ymm0_f;
assert true && red_f = mulLymm7_f;
assume red_f = mulLymm7_f && true;
mov ymm3_0 mulH_0;
mov ymm3_1 mulH_1;
mov ymm3_2 mulH_2;
mov ymm3_3 mulH_3;
mov ymm3_4 mulH_4;
mov ymm3_5 mulH_5;
mov ymm3_6 mulH_6;
mov ymm3_7 mulH_7;
mov ymm3_8 mulH_8;
mov ymm3_9 mulH_9;
mov ymm3_a mulH_a;
mov ymm3_b mulH_b;
mov ymm3_c mulH_c;
mov ymm3_d mulH_d;
mov ymm3_e mulH_e;
mov ymm3_f mulH_f;
(* vpsubw %ymm3,%ymm11,%ymm11                      #! PC = 0x55555555711f *)
sub ymm11_0 ymm11_0 ymm3_0;
sub ymm11_1 ymm11_1 ymm3_1;
sub ymm11_2 ymm11_2 ymm3_2;
sub ymm11_3 ymm11_3 ymm3_3;
sub ymm11_4 ymm11_4 ymm3_4;
sub ymm11_5 ymm11_5 ymm3_5;
sub ymm11_6 ymm11_6 ymm3_6;
sub ymm11_7 ymm11_7 ymm3_7;
sub ymm11_8 ymm11_8 ymm3_8;
sub ymm11_9 ymm11_9 ymm3_9;
sub ymm11_a ymm11_a ymm3_a;
sub ymm11_b ymm11_b ymm3_b;
sub ymm11_c ymm11_c ymm3_c;
sub ymm11_d ymm11_d ymm3_d;
sub ymm11_e ymm11_e ymm3_e;
sub ymm11_f ymm11_f ymm3_f;
(* vmovdqa 0x80(%rsi),%ymm4                        #! EA = L0x7fffffffcb60; Value = 0x0000000000000000; PC = 0x555555557123 *)
mov ymm4_0 L0x7fffffffcb60;
mov ymm4_1 L0x7fffffffcb62;
mov ymm4_2 L0x7fffffffcb64;
mov ymm4_3 L0x7fffffffcb66;
mov ymm4_4 L0x7fffffffcb68;
mov ymm4_5 L0x7fffffffcb6a;
mov ymm4_6 L0x7fffffffcb6c;
mov ymm4_7 L0x7fffffffcb6e;
mov ymm4_8 L0x7fffffffcb70;
mov ymm4_9 L0x7fffffffcb72;
mov ymm4_a L0x7fffffffcb74;
mov ymm4_b L0x7fffffffcb76;
mov ymm4_c L0x7fffffffcb78;
mov ymm4_d L0x7fffffffcb7a;
mov ymm4_e L0x7fffffffcb7c;
mov ymm4_f L0x7fffffffcb7e;
(* vmovdqa 0x180(%rsi),%ymm5                       #! EA = L0x7fffffffcc60; Value = 0x0000000000000000; PC = 0x55555555712b *)
mov ymm5_0 L0x7fffffffcc60;
mov ymm5_1 L0x7fffffffcc62;
mov ymm5_2 L0x7fffffffcc64;
mov ymm5_3 L0x7fffffffcc66;
mov ymm5_4 L0x7fffffffcc68;
mov ymm5_5 L0x7fffffffcc6a;
mov ymm5_6 L0x7fffffffcc6c;
mov ymm5_7 L0x7fffffffcc6e;
mov ymm5_8 L0x7fffffffcc70;
mov ymm5_9 L0x7fffffffcc72;
mov ymm5_a L0x7fffffffcc74;
mov ymm5_b L0x7fffffffcc76;
mov ymm5_c L0x7fffffffcc78;
mov ymm5_d L0x7fffffffcc7a;
mov ymm5_e L0x7fffffffcc7c;
mov ymm5_f L0x7fffffffcc7e;
(* vpaddw %ymm10,%ymm4,%ymm8                       #! PC = 0x555555557133 *)
add ymm8_0 ymm4_0 ymm10_0;
add ymm8_1 ymm4_1 ymm10_1;
add ymm8_2 ymm4_2 ymm10_2;
add ymm8_3 ymm4_3 ymm10_3;
add ymm8_4 ymm4_4 ymm10_4;
add ymm8_5 ymm4_5 ymm10_5;
add ymm8_6 ymm4_6 ymm10_6;
add ymm8_7 ymm4_7 ymm10_7;
add ymm8_8 ymm4_8 ymm10_8;
add ymm8_9 ymm4_9 ymm10_9;
add ymm8_a ymm4_a ymm10_a;
add ymm8_b ymm4_b ymm10_b;
add ymm8_c ymm4_c ymm10_c;
add ymm8_d ymm4_d ymm10_d;
add ymm8_e ymm4_e ymm10_e;
add ymm8_f ymm4_f ymm10_f;
(* vpsubw %ymm10,%ymm4,%ymm10                      #! PC = 0x555555557138 *)
sub ymm10_0 ymm4_0 ymm10_0;
sub ymm10_1 ymm4_1 ymm10_1;
sub ymm10_2 ymm4_2 ymm10_2;
sub ymm10_3 ymm4_3 ymm10_3;
sub ymm10_4 ymm4_4 ymm10_4;
sub ymm10_5 ymm4_5 ymm10_5;
sub ymm10_6 ymm4_6 ymm10_6;
sub ymm10_7 ymm4_7 ymm10_7;
sub ymm10_8 ymm4_8 ymm10_8;
sub ymm10_9 ymm4_9 ymm10_9;
sub ymm10_a ymm4_a ymm10_a;
sub ymm10_b ymm4_b ymm10_b;
sub ymm10_c ymm4_c ymm10_c;
sub ymm10_d ymm4_d ymm10_d;
sub ymm10_e ymm4_e ymm10_e;
sub ymm10_f ymm4_f ymm10_f;
(* vpaddw %ymm11,%ymm5,%ymm9                       #! PC = 0x55555555713d *)
add ymm9_0 ymm5_0 ymm11_0;
add ymm9_1 ymm5_1 ymm11_1;
add ymm9_2 ymm5_2 ymm11_2;
add ymm9_3 ymm5_3 ymm11_3;
add ymm9_4 ymm5_4 ymm11_4;
add ymm9_5 ymm5_5 ymm11_5;
add ymm9_6 ymm5_6 ymm11_6;
add ymm9_7 ymm5_7 ymm11_7;
add ymm9_8 ymm5_8 ymm11_8;
add ymm9_9 ymm5_9 ymm11_9;
add ymm9_a ymm5_a ymm11_a;
add ymm9_b ymm5_b ymm11_b;
add ymm9_c ymm5_c ymm11_c;
add ymm9_d ymm5_d ymm11_d;
add ymm9_e ymm5_e ymm11_e;
add ymm9_f ymm5_f ymm11_f;
(* vpsubw %ymm11,%ymm5,%ymm11                      #! PC = 0x555555557142 *)
sub ymm11_0 ymm5_0 ymm11_0;
sub ymm11_1 ymm5_1 ymm11_1;
sub ymm11_2 ymm5_2 ymm11_2;
sub ymm11_3 ymm5_3 ymm11_3;
sub ymm11_4 ymm5_4 ymm11_4;
sub ymm11_5 ymm5_5 ymm11_5;
sub ymm11_6 ymm5_6 ymm11_6;
sub ymm11_7 ymm5_7 ymm11_7;
sub ymm11_8 ymm5_8 ymm11_8;
sub ymm11_9 ymm5_9 ymm11_9;
sub ymm11_a ymm5_a ymm11_a;
sub ymm11_b ymm5_b ymm11_b;
sub ymm11_c ymm5_c ymm11_c;
sub ymm11_d ymm5_d ymm11_d;
sub ymm11_e ymm5_e ymm11_e;
sub ymm11_f ymm5_f ymm11_f;
(* vpaddw %ymm6,%ymm4,%ymm3                        #! PC = 0x555555557147 *)
add ymm3_0 ymm4_0 ymm6_0;
add ymm3_1 ymm4_1 ymm6_1;
add ymm3_2 ymm4_2 ymm6_2;
add ymm3_3 ymm4_3 ymm6_3;
add ymm3_4 ymm4_4 ymm6_4;
add ymm3_5 ymm4_5 ymm6_5;
add ymm3_6 ymm4_6 ymm6_6;
add ymm3_7 ymm4_7 ymm6_7;
add ymm3_8 ymm4_8 ymm6_8;
add ymm3_9 ymm4_9 ymm6_9;
add ymm3_a ymm4_a ymm6_a;
add ymm3_b ymm4_b ymm6_b;
add ymm3_c ymm4_c ymm6_c;
add ymm3_d ymm4_d ymm6_d;
add ymm3_e ymm4_e ymm6_e;
add ymm3_f ymm4_f ymm6_f;
(* vpsubw %ymm6,%ymm4,%ymm6                        #! PC = 0x55555555714b *)
sub ymm6_0 ymm4_0 ymm6_0;
sub ymm6_1 ymm4_1 ymm6_1;
sub ymm6_2 ymm4_2 ymm6_2;
sub ymm6_3 ymm4_3 ymm6_3;
sub ymm6_4 ymm4_4 ymm6_4;
sub ymm6_5 ymm4_5 ymm6_5;
sub ymm6_6 ymm4_6 ymm6_6;
sub ymm6_7 ymm4_7 ymm6_7;
sub ymm6_8 ymm4_8 ymm6_8;
sub ymm6_9 ymm4_9 ymm6_9;
sub ymm6_a ymm4_a ymm6_a;
sub ymm6_b ymm4_b ymm6_b;
sub ymm6_c ymm4_c ymm6_c;
sub ymm6_d ymm4_d ymm6_d;
sub ymm6_e ymm4_e ymm6_e;
sub ymm6_f ymm4_f ymm6_f;
(* vpaddw %ymm7,%ymm5,%ymm4                        #! PC = 0x55555555714f *)
add ymm4_0 ymm5_0 ymm7_0;
add ymm4_1 ymm5_1 ymm7_1;
add ymm4_2 ymm5_2 ymm7_2;
add ymm4_3 ymm5_3 ymm7_3;
add ymm4_4 ymm5_4 ymm7_4;
add ymm4_5 ymm5_5 ymm7_5;
add ymm4_6 ymm5_6 ymm7_6;
add ymm4_7 ymm5_7 ymm7_7;
add ymm4_8 ymm5_8 ymm7_8;
add ymm4_9 ymm5_9 ymm7_9;
add ymm4_a ymm5_a ymm7_a;
add ymm4_b ymm5_b ymm7_b;
add ymm4_c ymm5_c ymm7_c;
add ymm4_d ymm5_d ymm7_d;
add ymm4_e ymm5_e ymm7_e;
add ymm4_f ymm5_f ymm7_f;
(* vpsubw %ymm7,%ymm5,%ymm7                        #! PC = 0x555555557153 *)
sub ymm7_0 ymm5_0 ymm7_0;
sub ymm7_1 ymm5_1 ymm7_1;
sub ymm7_2 ymm5_2 ymm7_2;
sub ymm7_3 ymm5_3 ymm7_3;
sub ymm7_4 ymm5_4 ymm7_4;
sub ymm7_5 ymm5_5 ymm7_5;
sub ymm7_6 ymm5_6 ymm7_6;
sub ymm7_7 ymm5_7 ymm7_7;
sub ymm7_8 ymm5_8 ymm7_8;
sub ymm7_9 ymm5_9 ymm7_9;
sub ymm7_a ymm5_a ymm7_a;
sub ymm7_b ymm5_b ymm7_b;
sub ymm7_c ymm5_c ymm7_c;
sub ymm7_d ymm5_d ymm7_d;
sub ymm7_e ymm5_e ymm7_e;
sub ymm7_f ymm5_f ymm7_f;
(* vpmullw %ymm1,%ymm7,%ymm5                       #! PC = 0x555555557157 *)
smull mulHymm7_0 mulL_0 ymm1_0 ymm7_0;
smull mulHymm7_1 mulL_1 ymm1_1 ymm7_1;
smull mulHymm7_2 mulL_2 ymm1_2 ymm7_2;
smull mulHymm7_3 mulL_3 ymm1_3 ymm7_3;
smull mulHymm7_4 mulL_4 ymm1_4 ymm7_4;
smull mulHymm7_5 mulL_5 ymm1_5 ymm7_5;
smull mulHymm7_6 mulL_6 ymm1_6 ymm7_6;
smull mulHymm7_7 mulL_7 ymm1_7 ymm7_7;
smull mulHymm7_8 mulL_8 ymm1_8 ymm7_8;
smull mulHymm7_9 mulL_9 ymm1_9 ymm7_9;
smull mulHymm7_a mulL_a ymm1_a ymm7_a;
smull mulHymm7_b mulL_b ymm1_b ymm7_b;
smull mulHymm7_c mulL_c ymm1_c ymm7_c;
smull mulHymm7_d mulL_d ymm1_d ymm7_d;
smull mulHymm7_e mulL_e ymm1_e ymm7_e;
smull mulHymm7_f mulL_f ymm1_f ymm7_f;
cast ymm5_0@sint16 mulL_0;
cast ymm5_1@sint16 mulL_1;
cast ymm5_2@sint16 mulL_2;
cast ymm5_3@sint16 mulL_3;
cast ymm5_4@sint16 mulL_4;
cast ymm5_5@sint16 mulL_5;
cast ymm5_6@sint16 mulL_6;
cast ymm5_7@sint16 mulL_7;
cast ymm5_8@sint16 mulL_8;
cast ymm5_9@sint16 mulL_9;
cast ymm5_a@sint16 mulL_a;
cast ymm5_b@sint16 mulL_b;
cast ymm5_c@sint16 mulL_c;
cast ymm5_d@sint16 mulL_d;
cast ymm5_e@sint16 mulL_e;
cast ymm5_f@sint16 mulL_f;
(* vpmulhw %ymm2,%ymm7,%ymm7                       #! PC = 0x55555555715b *)
smull mulH_0 mulLymm7_0 ymm7_0 ymm2_0;
smull mulH_1 mulLymm7_1 ymm7_1 ymm2_1;
smull mulH_2 mulLymm7_2 ymm7_2 ymm2_2;
smull mulH_3 mulLymm7_3 ymm7_3 ymm2_3;
smull mulH_4 mulLymm7_4 ymm7_4 ymm2_4;
smull mulH_5 mulLymm7_5 ymm7_5 ymm2_5;
smull mulH_6 mulLymm7_6 ymm7_6 ymm2_6;
smull mulH_7 mulLymm7_7 ymm7_7 ymm2_7;
smull mulH_8 mulLymm7_8 ymm7_8 ymm2_8;
smull mulH_9 mulLymm7_9 ymm7_9 ymm2_9;
smull mulH_a mulLymm7_a ymm7_a ymm2_a;
smull mulH_b mulLymm7_b ymm7_b ymm2_b;
smull mulH_c mulLymm7_c ymm7_c ymm2_c;
smull mulH_d mulLymm7_d ymm7_d ymm2_d;
smull mulH_e mulLymm7_e ymm7_e ymm2_e;
smull mulH_f mulLymm7_f ymm7_f ymm2_f;
mov ymm7_0 mulH_0;
mov ymm7_1 mulH_1;
mov ymm7_2 mulH_2;
mov ymm7_3 mulH_3;
mov ymm7_4 mulH_4;
mov ymm7_5 mulH_5;
mov ymm7_6 mulH_6;
mov ymm7_7 mulH_7;
mov ymm7_8 mulH_8;
mov ymm7_9 mulH_9;
mov ymm7_a mulH_a;
mov ymm7_b mulH_b;
mov ymm7_c mulH_c;
mov ymm7_d mulH_d;
mov ymm7_e mulH_e;
mov ymm7_f mulH_f;
(* vpmulhw %ymm0,%ymm5,%ymm5                       #! PC = 0x55555555715f *)
smull mulH_0 red_0 ymm5_0 ymm0_0;
assert true && red_0 = mulLymm7_0;
assume red_0 = mulLymm7_0 && true;
smull mulH_1 red_1 ymm5_1 ymm0_1;
assert true && red_1 = mulLymm7_1;
assume red_1 = mulLymm7_1 && true;
smull mulH_2 red_2 ymm5_2 ymm0_2;
assert true && red_2 = mulLymm7_2;
assume red_2 = mulLymm7_2 && true;
smull mulH_3 red_3 ymm5_3 ymm0_3;
assert true && red_3 = mulLymm7_3;
assume red_3 = mulLymm7_3 && true;
smull mulH_4 red_4 ymm5_4 ymm0_4;
assert true && red_4 = mulLymm7_4;
assume red_4 = mulLymm7_4 && true;
smull mulH_5 red_5 ymm5_5 ymm0_5;
assert true && red_5 = mulLymm7_5;
assume red_5 = mulLymm7_5 && true;
smull mulH_6 red_6 ymm5_6 ymm0_6;
assert true && red_6 = mulLymm7_6;
assume red_6 = mulLymm7_6 && true;
smull mulH_7 red_7 ymm5_7 ymm0_7;
assert true && red_7 = mulLymm7_7;
assume red_7 = mulLymm7_7 && true;
smull mulH_8 red_8 ymm5_8 ymm0_8;
assert true && red_8 = mulLymm7_8;
assume red_8 = mulLymm7_8 && true;
smull mulH_9 red_9 ymm5_9 ymm0_9;
assert true && red_9 = mulLymm7_9;
assume red_9 = mulLymm7_9 && true;
smull mulH_a red_a ymm5_a ymm0_a;
assert true && red_a = mulLymm7_a;
assume red_a = mulLymm7_a && true;
smull mulH_b red_b ymm5_b ymm0_b;
assert true && red_b = mulLymm7_b;
assume red_b = mulLymm7_b && true;
smull mulH_c red_c ymm5_c ymm0_c;
assert true && red_c = mulLymm7_c;
assume red_c = mulLymm7_c && true;
smull mulH_d red_d ymm5_d ymm0_d;
assert true && red_d = mulLymm7_d;
assume red_d = mulLymm7_d && true;
smull mulH_e red_e ymm5_e ymm0_e;
assert true && red_e = mulLymm7_e;
assume red_e = mulLymm7_e && true;
smull mulH_f red_f ymm5_f ymm0_f;
assert true && red_f = mulLymm7_f;
assume red_f = mulLymm7_f && true;
mov ymm5_0 mulH_0;
mov ymm5_1 mulH_1;
mov ymm5_2 mulH_2;
mov ymm5_3 mulH_3;
mov ymm5_4 mulH_4;
mov ymm5_5 mulH_5;
mov ymm5_6 mulH_6;
mov ymm5_7 mulH_7;
mov ymm5_8 mulH_8;
mov ymm5_9 mulH_9;
mov ymm5_a mulH_a;
mov ymm5_b mulH_b;
mov ymm5_c mulH_c;
mov ymm5_d mulH_d;
mov ymm5_e mulH_e;
mov ymm5_f mulH_f;
(* vpsubw %ymm5,%ymm7,%ymm7                        #! PC = 0x555555557163 *)
sub ymm7_0 ymm7_0 ymm5_0;
sub ymm7_1 ymm7_1 ymm5_1;
sub ymm7_2 ymm7_2 ymm5_2;
sub ymm7_3 ymm7_3 ymm5_3;
sub ymm7_4 ymm7_4 ymm5_4;
sub ymm7_5 ymm7_5 ymm5_5;
sub ymm7_6 ymm7_6 ymm5_6;
sub ymm7_7 ymm7_7 ymm5_7;
sub ymm7_8 ymm7_8 ymm5_8;
sub ymm7_9 ymm7_9 ymm5_9;
sub ymm7_a ymm7_a ymm5_a;
sub ymm7_b ymm7_b ymm5_b;
sub ymm7_c ymm7_c ymm5_c;
sub ymm7_d ymm7_d ymm5_d;
sub ymm7_e ymm7_e ymm5_e;
sub ymm7_f ymm7_f ymm5_f;
(* vpbroadcastw 0x104(%rdx),%ymm1                  #! EA = L0x555555561224; Value = 0xad9a276d0198f85c; PC = 0x555555557167 *)
mov ymm1_0 L0x555555561224;
mov ymm1_1 L0x555555561224;
mov ymm1_2 L0x555555561224;
mov ymm1_3 L0x555555561224;
mov ymm1_4 L0x555555561224;
mov ymm1_5 L0x555555561224;
mov ymm1_6 L0x555555561224;
mov ymm1_7 L0x555555561224;
mov ymm1_8 L0x555555561224;
mov ymm1_9 L0x555555561224;
mov ymm1_a L0x555555561224;
mov ymm1_b L0x555555561224;
mov ymm1_c L0x555555561224;
mov ymm1_d L0x555555561224;
mov ymm1_e L0x555555561224;
mov ymm1_f L0x555555561224;
(* vpbroadcastw 0x304(%rdx),%ymm2                  #! EA = L0x555555561424; Value = 0xf19a096df198105c; PC = 0x555555557170 *)
mov ymm2_0 L0x555555561424;
mov ymm2_1 L0x555555561424;
mov ymm2_2 L0x555555561424;
mov ymm2_3 L0x555555561424;
mov ymm2_4 L0x555555561424;
mov ymm2_5 L0x555555561424;
mov ymm2_6 L0x555555561424;
mov ymm2_7 L0x555555561424;
mov ymm2_8 L0x555555561424;
mov ymm2_9 L0x555555561424;
mov ymm2_a L0x555555561424;
mov ymm2_b L0x555555561424;
mov ymm2_c L0x555555561424;
mov ymm2_d L0x555555561424;
mov ymm2_e L0x555555561424;
mov ymm2_f L0x555555561424;
(* vpmullw %ymm1,%ymm9,%ymm5                       #! PC = 0x555555557179 *)
smull mulHymm9_0 mulL_0 ymm1_0 ymm9_0;
smull mulHymm9_1 mulL_1 ymm1_1 ymm9_1;
smull mulHymm9_2 mulL_2 ymm1_2 ymm9_2;
smull mulHymm9_3 mulL_3 ymm1_3 ymm9_3;
smull mulHymm9_4 mulL_4 ymm1_4 ymm9_4;
smull mulHymm9_5 mulL_5 ymm1_5 ymm9_5;
smull mulHymm9_6 mulL_6 ymm1_6 ymm9_6;
smull mulHymm9_7 mulL_7 ymm1_7 ymm9_7;
smull mulHymm9_8 mulL_8 ymm1_8 ymm9_8;
smull mulHymm9_9 mulL_9 ymm1_9 ymm9_9;
smull mulHymm9_a mulL_a ymm1_a ymm9_a;
smull mulHymm9_b mulL_b ymm1_b ymm9_b;
smull mulHymm9_c mulL_c ymm1_c ymm9_c;
smull mulHymm9_d mulL_d ymm1_d ymm9_d;
smull mulHymm9_e mulL_e ymm1_e ymm9_e;
smull mulHymm9_f mulL_f ymm1_f ymm9_f;
cast ymm5_0@sint16 mulL_0;
cast ymm5_1@sint16 mulL_1;
cast ymm5_2@sint16 mulL_2;
cast ymm5_3@sint16 mulL_3;
cast ymm5_4@sint16 mulL_4;
cast ymm5_5@sint16 mulL_5;
cast ymm5_6@sint16 mulL_6;
cast ymm5_7@sint16 mulL_7;
cast ymm5_8@sint16 mulL_8;
cast ymm5_9@sint16 mulL_9;
cast ymm5_a@sint16 mulL_a;
cast ymm5_b@sint16 mulL_b;
cast ymm5_c@sint16 mulL_c;
cast ymm5_d@sint16 mulL_d;
cast ymm5_e@sint16 mulL_e;
cast ymm5_f@sint16 mulL_f;
(* vpmulhw %ymm2,%ymm9,%ymm9                       #! PC = 0x55555555717d *)
smull mulH_0 mulLymm9_0 ymm9_0 ymm2_0;
smull mulH_1 mulLymm9_1 ymm9_1 ymm2_1;
smull mulH_2 mulLymm9_2 ymm9_2 ymm2_2;
smull mulH_3 mulLymm9_3 ymm9_3 ymm2_3;
smull mulH_4 mulLymm9_4 ymm9_4 ymm2_4;
smull mulH_5 mulLymm9_5 ymm9_5 ymm2_5;
smull mulH_6 mulLymm9_6 ymm9_6 ymm2_6;
smull mulH_7 mulLymm9_7 ymm9_7 ymm2_7;
smull mulH_8 mulLymm9_8 ymm9_8 ymm2_8;
smull mulH_9 mulLymm9_9 ymm9_9 ymm2_9;
smull mulH_a mulLymm9_a ymm9_a ymm2_a;
smull mulH_b mulLymm9_b ymm9_b ymm2_b;
smull mulH_c mulLymm9_c ymm9_c ymm2_c;
smull mulH_d mulLymm9_d ymm9_d ymm2_d;
smull mulH_e mulLymm9_e ymm9_e ymm2_e;
smull mulH_f mulLymm9_f ymm9_f ymm2_f;
mov ymm9_0 mulH_0;
mov ymm9_1 mulH_1;
mov ymm9_2 mulH_2;
mov ymm9_3 mulH_3;
mov ymm9_4 mulH_4;
mov ymm9_5 mulH_5;
mov ymm9_6 mulH_6;
mov ymm9_7 mulH_7;
mov ymm9_8 mulH_8;
mov ymm9_9 mulH_9;
mov ymm9_a mulH_a;
mov ymm9_b mulH_b;
mov ymm9_c mulH_c;
mov ymm9_d mulH_d;
mov ymm9_e mulH_e;
mov ymm9_f mulH_f;
(* vpmulhw %ymm0,%ymm5,%ymm5                       #! PC = 0x555555557181 *)
smull mulH_0 red_0 ymm5_0 ymm0_0;
assert true && red_0 = mulLymm9_0;
assume red_0 = mulLymm9_0 && true;
smull mulH_1 red_1 ymm5_1 ymm0_1;
assert true && red_1 = mulLymm9_1;
assume red_1 = mulLymm9_1 && true;
smull mulH_2 red_2 ymm5_2 ymm0_2;
assert true && red_2 = mulLymm9_2;
assume red_2 = mulLymm9_2 && true;
smull mulH_3 red_3 ymm5_3 ymm0_3;
assert true && red_3 = mulLymm9_3;
assume red_3 = mulLymm9_3 && true;
smull mulH_4 red_4 ymm5_4 ymm0_4;
assert true && red_4 = mulLymm9_4;
assume red_4 = mulLymm9_4 && true;
smull mulH_5 red_5 ymm5_5 ymm0_5;
assert true && red_5 = mulLymm9_5;
assume red_5 = mulLymm9_5 && true;
smull mulH_6 red_6 ymm5_6 ymm0_6;
assert true && red_6 = mulLymm9_6;
assume red_6 = mulLymm9_6 && true;
smull mulH_7 red_7 ymm5_7 ymm0_7;
assert true && red_7 = mulLymm9_7;
assume red_7 = mulLymm9_7 && true;
smull mulH_8 red_8 ymm5_8 ymm0_8;
assert true && red_8 = mulLymm9_8;
assume red_8 = mulLymm9_8 && true;
smull mulH_9 red_9 ymm5_9 ymm0_9;
assert true && red_9 = mulLymm9_9;
assume red_9 = mulLymm9_9 && true;
smull mulH_a red_a ymm5_a ymm0_a;
assert true && red_a = mulLymm9_a;
assume red_a = mulLymm9_a && true;
smull mulH_b red_b ymm5_b ymm0_b;
assert true && red_b = mulLymm9_b;
assume red_b = mulLymm9_b && true;
smull mulH_c red_c ymm5_c ymm0_c;
assert true && red_c = mulLymm9_c;
assume red_c = mulLymm9_c && true;
smull mulH_d red_d ymm5_d ymm0_d;
assert true && red_d = mulLymm9_d;
assume red_d = mulLymm9_d && true;
smull mulH_e red_e ymm5_e ymm0_e;
assert true && red_e = mulLymm9_e;
assume red_e = mulLymm9_e && true;
smull mulH_f red_f ymm5_f ymm0_f;
assert true && red_f = mulLymm9_f;
assume red_f = mulLymm9_f && true;
mov ymm5_0 mulH_0;
mov ymm5_1 mulH_1;
mov ymm5_2 mulH_2;
mov ymm5_3 mulH_3;
mov ymm5_4 mulH_4;
mov ymm5_5 mulH_5;
mov ymm5_6 mulH_6;
mov ymm5_7 mulH_7;
mov ymm5_8 mulH_8;
mov ymm5_9 mulH_9;
mov ymm5_a mulH_a;
mov ymm5_b mulH_b;
mov ymm5_c mulH_c;
mov ymm5_d mulH_d;
mov ymm5_e mulH_e;
mov ymm5_f mulH_f;
(* vpsubw %ymm5,%ymm9,%ymm9                        #! PC = 0x555555557185 *)
sub ymm9_0 ymm9_0 ymm5_0;
sub ymm9_1 ymm9_1 ymm5_1;
sub ymm9_2 ymm9_2 ymm5_2;
sub ymm9_3 ymm9_3 ymm5_3;
sub ymm9_4 ymm9_4 ymm5_4;
sub ymm9_5 ymm9_5 ymm5_5;
sub ymm9_6 ymm9_6 ymm5_6;
sub ymm9_7 ymm9_7 ymm5_7;
sub ymm9_8 ymm9_8 ymm5_8;
sub ymm9_9 ymm9_9 ymm5_9;
sub ymm9_a ymm9_a ymm5_a;
sub ymm9_b ymm9_b ymm5_b;
sub ymm9_c ymm9_c ymm5_c;
sub ymm9_d ymm9_d ymm5_d;
sub ymm9_e ymm9_e ymm5_e;
sub ymm9_f ymm9_f ymm5_f;
(* vpbroadcastw 0x106(%rdx),%ymm1                  #! EA = L0x555555561226; Value = 0x6f65ad9a276d0198; PC = 0x555555557189 *)
mov ymm1_0 L0x555555561226;
mov ymm1_1 L0x555555561226;
mov ymm1_2 L0x555555561226;
mov ymm1_3 L0x555555561226;
mov ymm1_4 L0x555555561226;
mov ymm1_5 L0x555555561226;
mov ymm1_6 L0x555555561226;
mov ymm1_7 L0x555555561226;
mov ymm1_8 L0x555555561226;
mov ymm1_9 L0x555555561226;
mov ymm1_a L0x555555561226;
mov ymm1_b L0x555555561226;
mov ymm1_c L0x555555561226;
mov ymm1_d L0x555555561226;
mov ymm1_e L0x555555561226;
mov ymm1_f L0x555555561226;
(* vpbroadcastw 0x306(%rdx),%ymm2                  #! EA = L0x555555561426; Value = 0x0165f19a096df198; PC = 0x555555557192 *)
mov ymm2_0 L0x555555561426;
mov ymm2_1 L0x555555561426;
mov ymm2_2 L0x555555561426;
mov ymm2_3 L0x555555561426;
mov ymm2_4 L0x555555561426;
mov ymm2_5 L0x555555561426;
mov ymm2_6 L0x555555561426;
mov ymm2_7 L0x555555561426;
mov ymm2_8 L0x555555561426;
mov ymm2_9 L0x555555561426;
mov ymm2_a L0x555555561426;
mov ymm2_b L0x555555561426;
mov ymm2_c L0x555555561426;
mov ymm2_d L0x555555561426;
mov ymm2_e L0x555555561426;
mov ymm2_f L0x555555561426;
(* vpmullw %ymm1,%ymm11,%ymm5                      #! PC = 0x55555555719b *)
smull mulHymm11_0 mulL_0 ymm1_0 ymm11_0;
smull mulHymm11_1 mulL_1 ymm1_1 ymm11_1;
smull mulHymm11_2 mulL_2 ymm1_2 ymm11_2;
smull mulHymm11_3 mulL_3 ymm1_3 ymm11_3;
smull mulHymm11_4 mulL_4 ymm1_4 ymm11_4;
smull mulHymm11_5 mulL_5 ymm1_5 ymm11_5;
smull mulHymm11_6 mulL_6 ymm1_6 ymm11_6;
smull mulHymm11_7 mulL_7 ymm1_7 ymm11_7;
smull mulHymm11_8 mulL_8 ymm1_8 ymm11_8;
smull mulHymm11_9 mulL_9 ymm1_9 ymm11_9;
smull mulHymm11_a mulL_a ymm1_a ymm11_a;
smull mulHymm11_b mulL_b ymm1_b ymm11_b;
smull mulHymm11_c mulL_c ymm1_c ymm11_c;
smull mulHymm11_d mulL_d ymm1_d ymm11_d;
smull mulHymm11_e mulL_e ymm1_e ymm11_e;
smull mulHymm11_f mulL_f ymm1_f ymm11_f;
cast ymm5_0@sint16 mulL_0;
cast ymm5_1@sint16 mulL_1;
cast ymm5_2@sint16 mulL_2;
cast ymm5_3@sint16 mulL_3;
cast ymm5_4@sint16 mulL_4;
cast ymm5_5@sint16 mulL_5;
cast ymm5_6@sint16 mulL_6;
cast ymm5_7@sint16 mulL_7;
cast ymm5_8@sint16 mulL_8;
cast ymm5_9@sint16 mulL_9;
cast ymm5_a@sint16 mulL_a;
cast ymm5_b@sint16 mulL_b;
cast ymm5_c@sint16 mulL_c;
cast ymm5_d@sint16 mulL_d;
cast ymm5_e@sint16 mulL_e;
cast ymm5_f@sint16 mulL_f;
(* vpmulhw %ymm2,%ymm11,%ymm11                     #! PC = 0x55555555719f *)
smull mulH_0 mulLymm11_0 ymm11_0 ymm2_0;
smull mulH_1 mulLymm11_1 ymm11_1 ymm2_1;
smull mulH_2 mulLymm11_2 ymm11_2 ymm2_2;
smull mulH_3 mulLymm11_3 ymm11_3 ymm2_3;
smull mulH_4 mulLymm11_4 ymm11_4 ymm2_4;
smull mulH_5 mulLymm11_5 ymm11_5 ymm2_5;
smull mulH_6 mulLymm11_6 ymm11_6 ymm2_6;
smull mulH_7 mulLymm11_7 ymm11_7 ymm2_7;
smull mulH_8 mulLymm11_8 ymm11_8 ymm2_8;
smull mulH_9 mulLymm11_9 ymm11_9 ymm2_9;
smull mulH_a mulLymm11_a ymm11_a ymm2_a;
smull mulH_b mulLymm11_b ymm11_b ymm2_b;
smull mulH_c mulLymm11_c ymm11_c ymm2_c;
smull mulH_d mulLymm11_d ymm11_d ymm2_d;
smull mulH_e mulLymm11_e ymm11_e ymm2_e;
smull mulH_f mulLymm11_f ymm11_f ymm2_f;
mov ymm11_0 mulH_0;
mov ymm11_1 mulH_1;
mov ymm11_2 mulH_2;
mov ymm11_3 mulH_3;
mov ymm11_4 mulH_4;
mov ymm11_5 mulH_5;
mov ymm11_6 mulH_6;
mov ymm11_7 mulH_7;
mov ymm11_8 mulH_8;
mov ymm11_9 mulH_9;
mov ymm11_a mulH_a;
mov ymm11_b mulH_b;
mov ymm11_c mulH_c;
mov ymm11_d mulH_d;
mov ymm11_e mulH_e;
mov ymm11_f mulH_f;
(* vpmulhw %ymm0,%ymm5,%ymm5                       #! PC = 0x5555555571a3 *)
smull mulH_0 red_0 ymm5_0 ymm0_0;
assert true && red_0 = mulLymm11_0;
assume red_0 = mulLymm11_0 && true;
smull mulH_1 red_1 ymm5_1 ymm0_1;
assert true && red_1 = mulLymm11_1;
assume red_1 = mulLymm11_1 && true;
smull mulH_2 red_2 ymm5_2 ymm0_2;
assert true && red_2 = mulLymm11_2;
assume red_2 = mulLymm11_2 && true;
smull mulH_3 red_3 ymm5_3 ymm0_3;
assert true && red_3 = mulLymm11_3;
assume red_3 = mulLymm11_3 && true;
smull mulH_4 red_4 ymm5_4 ymm0_4;
assert true && red_4 = mulLymm11_4;
assume red_4 = mulLymm11_4 && true;
smull mulH_5 red_5 ymm5_5 ymm0_5;
assert true && red_5 = mulLymm11_5;
assume red_5 = mulLymm11_5 && true;
smull mulH_6 red_6 ymm5_6 ymm0_6;
assert true && red_6 = mulLymm11_6;
assume red_6 = mulLymm11_6 && true;
smull mulH_7 red_7 ymm5_7 ymm0_7;
assert true && red_7 = mulLymm11_7;
assume red_7 = mulLymm11_7 && true;
smull mulH_8 red_8 ymm5_8 ymm0_8;
assert true && red_8 = mulLymm11_8;
assume red_8 = mulLymm11_8 && true;
smull mulH_9 red_9 ymm5_9 ymm0_9;
assert true && red_9 = mulLymm11_9;
assume red_9 = mulLymm11_9 && true;
smull mulH_a red_a ymm5_a ymm0_a;
assert true && red_a = mulLymm11_a;
assume red_a = mulLymm11_a && true;
smull mulH_b red_b ymm5_b ymm0_b;
assert true && red_b = mulLymm11_b;
assume red_b = mulLymm11_b && true;
smull mulH_c red_c ymm5_c ymm0_c;
assert true && red_c = mulLymm11_c;
assume red_c = mulLymm11_c && true;
smull mulH_d red_d ymm5_d ymm0_d;
assert true && red_d = mulLymm11_d;
assume red_d = mulLymm11_d && true;
smull mulH_e red_e ymm5_e ymm0_e;
assert true && red_e = mulLymm11_e;
assume red_e = mulLymm11_e && true;
smull mulH_f red_f ymm5_f ymm0_f;
assert true && red_f = mulLymm11_f;
assume red_f = mulLymm11_f && true;
mov ymm5_0 mulH_0;
mov ymm5_1 mulH_1;
mov ymm5_2 mulH_2;
mov ymm5_3 mulH_3;
mov ymm5_4 mulH_4;
mov ymm5_5 mulH_5;
mov ymm5_6 mulH_6;
mov ymm5_7 mulH_7;
mov ymm5_8 mulH_8;
mov ymm5_9 mulH_9;
mov ymm5_a mulH_a;
mov ymm5_b mulH_b;
mov ymm5_c mulH_c;
mov ymm5_d mulH_d;
mov ymm5_e mulH_e;
mov ymm5_f mulH_f;
(* vpsubw %ymm5,%ymm11,%ymm11                      #! PC = 0x5555555571a7 *)
sub ymm11_0 ymm11_0 ymm5_0;
sub ymm11_1 ymm11_1 ymm5_1;
sub ymm11_2 ymm11_2 ymm5_2;
sub ymm11_3 ymm11_3 ymm5_3;
sub ymm11_4 ymm11_4 ymm5_4;
sub ymm11_5 ymm11_5 ymm5_5;
sub ymm11_6 ymm11_6 ymm5_6;
sub ymm11_7 ymm11_7 ymm5_7;
sub ymm11_8 ymm11_8 ymm5_8;
sub ymm11_9 ymm11_9 ymm5_9;
sub ymm11_a ymm11_a ymm5_a;
sub ymm11_b ymm11_b ymm5_b;
sub ymm11_c ymm11_c ymm5_c;
sub ymm11_d ymm11_d ymm5_d;
sub ymm11_e ymm11_e ymm5_e;
sub ymm11_f ymm11_f ymm5_f;
(* vpaddw %ymm4,%ymm3,%ymm5                        #! PC = 0x5555555571ab *)
add ymm5_0 ymm3_0 ymm4_0;
add ymm5_1 ymm3_1 ymm4_1;
add ymm5_2 ymm3_2 ymm4_2;
add ymm5_3 ymm3_3 ymm4_3;
add ymm5_4 ymm3_4 ymm4_4;
add ymm5_5 ymm3_5 ymm4_5;
add ymm5_6 ymm3_6 ymm4_6;
add ymm5_7 ymm3_7 ymm4_7;
add ymm5_8 ymm3_8 ymm4_8;
add ymm5_9 ymm3_9 ymm4_9;
add ymm5_a ymm3_a ymm4_a;
add ymm5_b ymm3_b ymm4_b;
add ymm5_c ymm3_c ymm4_c;
add ymm5_d ymm3_d ymm4_d;
add ymm5_e ymm3_e ymm4_e;
add ymm5_f ymm3_f ymm4_f;
(* vpsubw %ymm4,%ymm3,%ymm4                        #! PC = 0x5555555571af *)
sub ymm4_0 ymm3_0 ymm4_0;
sub ymm4_1 ymm3_1 ymm4_1;
sub ymm4_2 ymm3_2 ymm4_2;
sub ymm4_3 ymm3_3 ymm4_3;
sub ymm4_4 ymm3_4 ymm4_4;
sub ymm4_5 ymm3_5 ymm4_5;
sub ymm4_6 ymm3_6 ymm4_6;
sub ymm4_7 ymm3_7 ymm4_7;
sub ymm4_8 ymm3_8 ymm4_8;
sub ymm4_9 ymm3_9 ymm4_9;
sub ymm4_a ymm3_a ymm4_a;
sub ymm4_b ymm3_b ymm4_b;
sub ymm4_c ymm3_c ymm4_c;
sub ymm4_d ymm3_d ymm4_d;
sub ymm4_e ymm3_e ymm4_e;
sub ymm4_f ymm3_f ymm4_f;
(* vpaddw %ymm7,%ymm6,%ymm3                        #! PC = 0x5555555571b3 *)
add ymm3_0 ymm6_0 ymm7_0;
add ymm3_1 ymm6_1 ymm7_1;
add ymm3_2 ymm6_2 ymm7_2;
add ymm3_3 ymm6_3 ymm7_3;
add ymm3_4 ymm6_4 ymm7_4;
add ymm3_5 ymm6_5 ymm7_5;
add ymm3_6 ymm6_6 ymm7_6;
add ymm3_7 ymm6_7 ymm7_7;
add ymm3_8 ymm6_8 ymm7_8;
add ymm3_9 ymm6_9 ymm7_9;
add ymm3_a ymm6_a ymm7_a;
add ymm3_b ymm6_b ymm7_b;
add ymm3_c ymm6_c ymm7_c;
add ymm3_d ymm6_d ymm7_d;
add ymm3_e ymm6_e ymm7_e;
add ymm3_f ymm6_f ymm7_f;
(* vpsubw %ymm7,%ymm6,%ymm7                        #! PC = 0x5555555571b7 *)
sub ymm7_0 ymm6_0 ymm7_0;
sub ymm7_1 ymm6_1 ymm7_1;
sub ymm7_2 ymm6_2 ymm7_2;
sub ymm7_3 ymm6_3 ymm7_3;
sub ymm7_4 ymm6_4 ymm7_4;
sub ymm7_5 ymm6_5 ymm7_5;
sub ymm7_6 ymm6_6 ymm7_6;
sub ymm7_7 ymm6_7 ymm7_7;
sub ymm7_8 ymm6_8 ymm7_8;
sub ymm7_9 ymm6_9 ymm7_9;
sub ymm7_a ymm6_a ymm7_a;
sub ymm7_b ymm6_b ymm7_b;
sub ymm7_c ymm6_c ymm7_c;
sub ymm7_d ymm6_d ymm7_d;
sub ymm7_e ymm6_e ymm7_e;
sub ymm7_f ymm6_f ymm7_f;
(* vpaddw %ymm9,%ymm8,%ymm6                        #! PC = 0x5555555571bb *)
add ymm6_0 ymm8_0 ymm9_0;
add ymm6_1 ymm8_1 ymm9_1;
add ymm6_2 ymm8_2 ymm9_2;
add ymm6_3 ymm8_3 ymm9_3;
add ymm6_4 ymm8_4 ymm9_4;
add ymm6_5 ymm8_5 ymm9_5;
add ymm6_6 ymm8_6 ymm9_6;
add ymm6_7 ymm8_7 ymm9_7;
add ymm6_8 ymm8_8 ymm9_8;
add ymm6_9 ymm8_9 ymm9_9;
add ymm6_a ymm8_a ymm9_a;
add ymm6_b ymm8_b ymm9_b;
add ymm6_c ymm8_c ymm9_c;
add ymm6_d ymm8_d ymm9_d;
add ymm6_e ymm8_e ymm9_e;
add ymm6_f ymm8_f ymm9_f;
(* vpsubw %ymm9,%ymm8,%ymm9                        #! PC = 0x5555555571c0 *)
sub ymm9_0 ymm8_0 ymm9_0;
sub ymm9_1 ymm8_1 ymm9_1;
sub ymm9_2 ymm8_2 ymm9_2;
sub ymm9_3 ymm8_3 ymm9_3;
sub ymm9_4 ymm8_4 ymm9_4;
sub ymm9_5 ymm8_5 ymm9_5;
sub ymm9_6 ymm8_6 ymm9_6;
sub ymm9_7 ymm8_7 ymm9_7;
sub ymm9_8 ymm8_8 ymm9_8;
sub ymm9_9 ymm8_9 ymm9_9;
sub ymm9_a ymm8_a ymm9_a;
sub ymm9_b ymm8_b ymm9_b;
sub ymm9_c ymm8_c ymm9_c;
sub ymm9_d ymm8_d ymm9_d;
sub ymm9_e ymm8_e ymm9_e;
sub ymm9_f ymm8_f ymm9_f;
(* vpaddw %ymm11,%ymm10,%ymm8                      #! PC = 0x5555555571c5 *)
add ymm8_0 ymm10_0 ymm11_0;
add ymm8_1 ymm10_1 ymm11_1;
add ymm8_2 ymm10_2 ymm11_2;
add ymm8_3 ymm10_3 ymm11_3;
add ymm8_4 ymm10_4 ymm11_4;
add ymm8_5 ymm10_5 ymm11_5;
add ymm8_6 ymm10_6 ymm11_6;
add ymm8_7 ymm10_7 ymm11_7;
add ymm8_8 ymm10_8 ymm11_8;
add ymm8_9 ymm10_9 ymm11_9;
add ymm8_a ymm10_a ymm11_a;
add ymm8_b ymm10_b ymm11_b;
add ymm8_c ymm10_c ymm11_c;
add ymm8_d ymm10_d ymm11_d;
add ymm8_e ymm10_e ymm11_e;
add ymm8_f ymm10_f ymm11_f;
(* vpsubw %ymm11,%ymm10,%ymm11                     #! PC = 0x5555555571ca *)
sub ymm11_0 ymm10_0 ymm11_0;
sub ymm11_1 ymm10_1 ymm11_1;
sub ymm11_2 ymm10_2 ymm11_2;
sub ymm11_3 ymm10_3 ymm11_3;
sub ymm11_4 ymm10_4 ymm11_4;
sub ymm11_5 ymm10_5 ymm11_5;
sub ymm11_6 ymm10_6 ymm11_6;
sub ymm11_7 ymm10_7 ymm11_7;
sub ymm11_8 ymm10_8 ymm11_8;
sub ymm11_9 ymm10_9 ymm11_9;
sub ymm11_a ymm10_a ymm11_a;
sub ymm11_b ymm10_b ymm11_b;
sub ymm11_c ymm10_c ymm11_c;
sub ymm11_d ymm10_d ymm11_d;
sub ymm11_e ymm10_e ymm11_e;
sub ymm11_f ymm10_f ymm11_f;
(* vmovdqa %ymm5,0x80(%rdi)                        #! EA = L0x7fffffffd360; PC = 0x5555555571cf *)
mov L0x7fffffffd360 ymm5_0;
mov L0x7fffffffd362 ymm5_1;
mov L0x7fffffffd364 ymm5_2;
mov L0x7fffffffd366 ymm5_3;
mov L0x7fffffffd368 ymm5_4;
mov L0x7fffffffd36a ymm5_5;
mov L0x7fffffffd36c ymm5_6;
mov L0x7fffffffd36e ymm5_7;
mov L0x7fffffffd370 ymm5_8;
mov L0x7fffffffd372 ymm5_9;
mov L0x7fffffffd374 ymm5_a;
mov L0x7fffffffd376 ymm5_b;
mov L0x7fffffffd378 ymm5_c;
mov L0x7fffffffd37a ymm5_d;
mov L0x7fffffffd37c ymm5_e;
mov L0x7fffffffd37e ymm5_f;
(* vmovdqa %ymm4,0x180(%rdi)                       #! EA = L0x7fffffffd460; PC = 0x5555555571d7 *)
mov L0x7fffffffd460 ymm4_0;
mov L0x7fffffffd462 ymm4_1;
mov L0x7fffffffd464 ymm4_2;
mov L0x7fffffffd466 ymm4_3;
mov L0x7fffffffd468 ymm4_4;
mov L0x7fffffffd46a ymm4_5;
mov L0x7fffffffd46c ymm4_6;
mov L0x7fffffffd46e ymm4_7;
mov L0x7fffffffd470 ymm4_8;
mov L0x7fffffffd472 ymm4_9;
mov L0x7fffffffd474 ymm4_a;
mov L0x7fffffffd476 ymm4_b;
mov L0x7fffffffd478 ymm4_c;
mov L0x7fffffffd47a ymm4_d;
mov L0x7fffffffd47c ymm4_e;
mov L0x7fffffffd47e ymm4_f;
(* vmovdqa %ymm3,0x280(%rdi)                       #! EA = L0x7fffffffd560; PC = 0x5555555571df *)
mov L0x7fffffffd560 ymm3_0;
mov L0x7fffffffd562 ymm3_1;
mov L0x7fffffffd564 ymm3_2;
mov L0x7fffffffd566 ymm3_3;
mov L0x7fffffffd568 ymm3_4;
mov L0x7fffffffd56a ymm3_5;
mov L0x7fffffffd56c ymm3_6;
mov L0x7fffffffd56e ymm3_7;
mov L0x7fffffffd570 ymm3_8;
mov L0x7fffffffd572 ymm3_9;
mov L0x7fffffffd574 ymm3_a;
mov L0x7fffffffd576 ymm3_b;
mov L0x7fffffffd578 ymm3_c;
mov L0x7fffffffd57a ymm3_d;
mov L0x7fffffffd57c ymm3_e;
mov L0x7fffffffd57e ymm3_f;
(* vmovdqa %ymm7,0x380(%rdi)                       #! EA = L0x7fffffffd660; PC = 0x5555555571e7 *)
mov L0x7fffffffd660 ymm7_0;
mov L0x7fffffffd662 ymm7_1;
mov L0x7fffffffd664 ymm7_2;
mov L0x7fffffffd666 ymm7_3;
mov L0x7fffffffd668 ymm7_4;
mov L0x7fffffffd66a ymm7_5;
mov L0x7fffffffd66c ymm7_6;
mov L0x7fffffffd66e ymm7_7;
mov L0x7fffffffd670 ymm7_8;
mov L0x7fffffffd672 ymm7_9;
mov L0x7fffffffd674 ymm7_a;
mov L0x7fffffffd676 ymm7_b;
mov L0x7fffffffd678 ymm7_c;
mov L0x7fffffffd67a ymm7_d;
mov L0x7fffffffd67c ymm7_e;
mov L0x7fffffffd67e ymm7_f;
(* vmovdqa %ymm6,0x480(%rdi)                       #! EA = L0x7fffffffd760; PC = 0x5555555571ef *)
mov L0x7fffffffd760 ymm6_0;
mov L0x7fffffffd762 ymm6_1;
mov L0x7fffffffd764 ymm6_2;
mov L0x7fffffffd766 ymm6_3;
mov L0x7fffffffd768 ymm6_4;
mov L0x7fffffffd76a ymm6_5;
mov L0x7fffffffd76c ymm6_6;
mov L0x7fffffffd76e ymm6_7;
mov L0x7fffffffd770 ymm6_8;
mov L0x7fffffffd772 ymm6_9;
mov L0x7fffffffd774 ymm6_a;
mov L0x7fffffffd776 ymm6_b;
mov L0x7fffffffd778 ymm6_c;
mov L0x7fffffffd77a ymm6_d;
mov L0x7fffffffd77c ymm6_e;
mov L0x7fffffffd77e ymm6_f;
(* vmovdqa %ymm9,0x580(%rdi)                       #! EA = L0x7fffffffd860; PC = 0x5555555571f7 *)
mov L0x7fffffffd860 ymm9_0;
mov L0x7fffffffd862 ymm9_1;
mov L0x7fffffffd864 ymm9_2;
mov L0x7fffffffd866 ymm9_3;
mov L0x7fffffffd868 ymm9_4;
mov L0x7fffffffd86a ymm9_5;
mov L0x7fffffffd86c ymm9_6;
mov L0x7fffffffd86e ymm9_7;
mov L0x7fffffffd870 ymm9_8;
mov L0x7fffffffd872 ymm9_9;
mov L0x7fffffffd874 ymm9_a;
mov L0x7fffffffd876 ymm9_b;
mov L0x7fffffffd878 ymm9_c;
mov L0x7fffffffd87a ymm9_d;
mov L0x7fffffffd87c ymm9_e;
mov L0x7fffffffd87e ymm9_f;
(* vmovdqa %ymm8,0x680(%rdi)                       #! EA = L0x7fffffffd960; PC = 0x5555555571ff *)
mov L0x7fffffffd960 ymm8_0;
mov L0x7fffffffd962 ymm8_1;
mov L0x7fffffffd964 ymm8_2;
mov L0x7fffffffd966 ymm8_3;
mov L0x7fffffffd968 ymm8_4;
mov L0x7fffffffd96a ymm8_5;
mov L0x7fffffffd96c ymm8_6;
mov L0x7fffffffd96e ymm8_7;
mov L0x7fffffffd970 ymm8_8;
mov L0x7fffffffd972 ymm8_9;
mov L0x7fffffffd974 ymm8_a;
mov L0x7fffffffd976 ymm8_b;
mov L0x7fffffffd978 ymm8_c;
mov L0x7fffffffd97a ymm8_d;
mov L0x7fffffffd97c ymm8_e;
mov L0x7fffffffd97e ymm8_f;
(* vmovdqa %ymm11,0x780(%rdi)                      #! EA = L0x7fffffffda60; PC = 0x555555557207 *)
mov L0x7fffffffda60 ymm11_0;
mov L0x7fffffffda62 ymm11_1;
mov L0x7fffffffda64 ymm11_2;
mov L0x7fffffffda66 ymm11_3;
mov L0x7fffffffda68 ymm11_4;
mov L0x7fffffffda6a ymm11_5;
mov L0x7fffffffda6c ymm11_6;
mov L0x7fffffffda6e ymm11_7;
mov L0x7fffffffda70 ymm11_8;
mov L0x7fffffffda72 ymm11_9;
mov L0x7fffffffda74 ymm11_a;
mov L0x7fffffffda76 ymm11_b;
mov L0x7fffffffda78 ymm11_c;
mov L0x7fffffffda7a ymm11_d;
mov L0x7fffffffda7c ymm11_e;
mov L0x7fffffffda7e ymm11_f;


(**************** LEVELS 0-2, 4 *****************)


(**************** CUT  73,  0 *****************)

ecut 
  and [
eqmod (c040*x** 64+c041*x** 65+c042*x** 66+c043*x** 67+
       c044*x** 68+c045*x** 69+c046*x** 70+c047*x** 71+
       c048*x** 72+c049*x** 73+c04a*x** 74+c04b*x** 75+
       c04c*x** 76+c04d*x** 77+c04e*x** 78+c04f*x** 79+
       c0c0*x**192+c0c1*x**193+c0c2*x**194+c0c3*x**195+
       c0c4*x**196+c0c5*x**197+c0c6*x**198+c0c7*x**199+
       c0c8*x**200+c0c9*x**201+c0ca*x**202+c0cb*x**203+
       c0cc*x**204+c0cd*x**205+c0ce*x**206+c0cf*x**207+
       c140*x**320+c141*x**321+c142*x**322+c143*x**323+
       c144*x**324+c145*x**325+c146*x**326+c147*x**327+
       c148*x**328+c149*x**329+c14a*x**330+c14b*x**331+
       c14c*x**332+c14d*x**333+c14e*x**334+c14f*x**335+
       c1c0*x**448+c1c1*x**449+c1c2*x**450+c1c3*x**451+
       c1c4*x**452+c1c5*x**453+c1c6*x**454+c1c7*x**455+
       c1c8*x**456+c1c9*x**457+c1ca*x**458+c1cb*x**459+
       c1cc*x**460+c1cd*x**461+c1ce*x**462+c1cf*x**463)
      (L0x7fffffffd360*x**64+L0x7fffffffd362*x**65+L0x7fffffffd364*x**66+
       L0x7fffffffd366*x**67+L0x7fffffffd368*x**68+L0x7fffffffd36a*x**69+
       L0x7fffffffd36c*x**70+L0x7fffffffd36e*x**71+L0x7fffffffd370*x**72+
       L0x7fffffffd372*x**73+L0x7fffffffd374*x**74+L0x7fffffffd376*x**75+
       L0x7fffffffd378*x**76+L0x7fffffffd37a*x**77+L0x7fffffffd37c*x**78+
       L0x7fffffffd37e*x**79)
      [10753, x**128 - 1],
eqmod (c040*x** 64+c041*x** 65+c042*x** 66+c043*x** 67+
       c044*x** 68+c045*x** 69+c046*x** 70+c047*x** 71+
       c048*x** 72+c049*x** 73+c04a*x** 74+c04b*x** 75+
       c04c*x** 76+c04d*x** 77+c04e*x** 78+c04f*x** 79+
       c0c0*x**192+c0c1*x**193+c0c2*x**194+c0c3*x**195+
       c0c4*x**196+c0c5*x**197+c0c6*x**198+c0c7*x**199+
       c0c8*x**200+c0c9*x**201+c0ca*x**202+c0cb*x**203+
       c0cc*x**204+c0cd*x**205+c0ce*x**206+c0cf*x**207+
       c140*x**320+c141*x**321+c142*x**322+c143*x**323+
       c144*x**324+c145*x**325+c146*x**326+c147*x**327+
       c148*x**328+c149*x**329+c14a*x**330+c14b*x**331+
       c14c*x**332+c14d*x**333+c14e*x**334+c14f*x**335+
       c1c0*x**448+c1c1*x**449+c1c2*x**450+c1c3*x**451+
       c1c4*x**452+c1c5*x**453+c1c6*x**454+c1c7*x**455+
       c1c8*x**456+c1c9*x**457+c1ca*x**458+c1cb*x**459+
       c1cc*x**460+c1cd*x**461+c1ce*x**462+c1cf*x**463)
      (L0x7fffffffd460*x**64+L0x7fffffffd462*x**65+L0x7fffffffd464*x**66+
       L0x7fffffffd466*x**67+L0x7fffffffd468*x**68+L0x7fffffffd46a*x**69+
       L0x7fffffffd46c*x**70+L0x7fffffffd46e*x**71+L0x7fffffffd470*x**72+
       L0x7fffffffd472*x**73+L0x7fffffffd474*x**74+L0x7fffffffd476*x**75+
       L0x7fffffffd478*x**76+L0x7fffffffd47a*x**77+L0x7fffffffd47c*x**78+
       L0x7fffffffd47e*x**79)
      [10753, x**128 - 10752],
eqmod (c040*x** 64+c041*x** 65+c042*x** 66+c043*x** 67+
       c044*x** 68+c045*x** 69+c046*x** 70+c047*x** 71+
       c048*x** 72+c049*x** 73+c04a*x** 74+c04b*x** 75+
       c04c*x** 76+c04d*x** 77+c04e*x** 78+c04f*x** 79+
       c0c0*x**192+c0c1*x**193+c0c2*x**194+c0c3*x**195+
       c0c4*x**196+c0c5*x**197+c0c6*x**198+c0c7*x**199+
       c0c8*x**200+c0c9*x**201+c0ca*x**202+c0cb*x**203+
       c0cc*x**204+c0cd*x**205+c0ce*x**206+c0cf*x**207+
       c140*x**320+c141*x**321+c142*x**322+c143*x**323+
       c144*x**324+c145*x**325+c146*x**326+c147*x**327+
       c148*x**328+c149*x**329+c14a*x**330+c14b*x**331+
       c14c*x**332+c14d*x**333+c14e*x**334+c14f*x**335+
       c1c0*x**448+c1c1*x**449+c1c2*x**450+c1c3*x**451+
       c1c4*x**452+c1c5*x**453+c1c6*x**454+c1c7*x**455+
       c1c8*x**456+c1c9*x**457+c1ca*x**458+c1cb*x**459+
       c1cc*x**460+c1cd*x**461+c1ce*x**462+c1cf*x**463)
      (L0x7fffffffd560*x**64+L0x7fffffffd562*x**65+L0x7fffffffd564*x**66+
       L0x7fffffffd566*x**67+L0x7fffffffd568*x**68+L0x7fffffffd56a*x**69+
       L0x7fffffffd56c*x**70+L0x7fffffffd56e*x**71+L0x7fffffffd570*x**72+
       L0x7fffffffd572*x**73+L0x7fffffffd574*x**74+L0x7fffffffd576*x**75+
       L0x7fffffffd578*x**76+L0x7fffffffd57a*x**77+L0x7fffffffd57c*x**78+
       L0x7fffffffd57e*x**79)
      [10753, x**128 - 6264],
eqmod (c040*x** 64+c041*x** 65+c042*x** 66+c043*x** 67+
       c044*x** 68+c045*x** 69+c046*x** 70+c047*x** 71+
       c048*x** 72+c049*x** 73+c04a*x** 74+c04b*x** 75+
       c04c*x** 76+c04d*x** 77+c04e*x** 78+c04f*x** 79+
       c0c0*x**192+c0c1*x**193+c0c2*x**194+c0c3*x**195+
       c0c4*x**196+c0c5*x**197+c0c6*x**198+c0c7*x**199+
       c0c8*x**200+c0c9*x**201+c0ca*x**202+c0cb*x**203+
       c0cc*x**204+c0cd*x**205+c0ce*x**206+c0cf*x**207+
       c140*x**320+c141*x**321+c142*x**322+c143*x**323+
       c144*x**324+c145*x**325+c146*x**326+c147*x**327+
       c148*x**328+c149*x**329+c14a*x**330+c14b*x**331+
       c14c*x**332+c14d*x**333+c14e*x**334+c14f*x**335+
       c1c0*x**448+c1c1*x**449+c1c2*x**450+c1c3*x**451+
       c1c4*x**452+c1c5*x**453+c1c6*x**454+c1c7*x**455+
       c1c8*x**456+c1c9*x**457+c1ca*x**458+c1cb*x**459+
       c1cc*x**460+c1cd*x**461+c1ce*x**462+c1cf*x**463)
      (L0x7fffffffd660*x**64+L0x7fffffffd662*x**65+L0x7fffffffd664*x**66+
       L0x7fffffffd666*x**67+L0x7fffffffd668*x**68+L0x7fffffffd66a*x**69+
       L0x7fffffffd66c*x**70+L0x7fffffffd66e*x**71+L0x7fffffffd670*x**72+
       L0x7fffffffd672*x**73+L0x7fffffffd674*x**74+L0x7fffffffd676*x**75+
       L0x7fffffffd678*x**76+L0x7fffffffd67a*x**77+L0x7fffffffd67c*x**78+
       L0x7fffffffd67e*x**79)
      [10753, x**128 - 4489],
eqmod (c040*x** 64+c041*x** 65+c042*x** 66+c043*x** 67+
       c044*x** 68+c045*x** 69+c046*x** 70+c047*x** 71+
       c048*x** 72+c049*x** 73+c04a*x** 74+c04b*x** 75+
       c04c*x** 76+c04d*x** 77+c04e*x** 78+c04f*x** 79+
       c0c0*x**192+c0c1*x**193+c0c2*x**194+c0c3*x**195+
       c0c4*x**196+c0c5*x**197+c0c6*x**198+c0c7*x**199+
       c0c8*x**200+c0c9*x**201+c0ca*x**202+c0cb*x**203+
       c0cc*x**204+c0cd*x**205+c0ce*x**206+c0cf*x**207+
       c140*x**320+c141*x**321+c142*x**322+c143*x**323+
       c144*x**324+c145*x**325+c146*x**326+c147*x**327+
       c148*x**328+c149*x**329+c14a*x**330+c14b*x**331+
       c14c*x**332+c14d*x**333+c14e*x**334+c14f*x**335+
       c1c0*x**448+c1c1*x**449+c1c2*x**450+c1c3*x**451+
       c1c4*x**452+c1c5*x**453+c1c6*x**454+c1c7*x**455+
       c1c8*x**456+c1c9*x**457+c1ca*x**458+c1cb*x**459+
       c1cc*x**460+c1cd*x**461+c1ce*x**462+c1cf*x**463)
      (L0x7fffffffd760*x**64+L0x7fffffffd762*x**65+L0x7fffffffd764*x**66+
       L0x7fffffffd766*x**67+L0x7fffffffd768*x**68+L0x7fffffffd76a*x**69+
       L0x7fffffffd76c*x**70+L0x7fffffffd76e*x**71+L0x7fffffffd770*x**72+
       L0x7fffffffd772*x**73+L0x7fffffffd774*x**74+L0x7fffffffd776*x**75+
       L0x7fffffffd778*x**76+L0x7fffffffd77a*x**77+L0x7fffffffd77c*x**78+
       L0x7fffffffd77e*x**79)
      [10753, x**128 - 321],
eqmod (c040*x** 64+c041*x** 65+c042*x** 66+c043*x** 67+
       c044*x** 68+c045*x** 69+c046*x** 70+c047*x** 71+
       c048*x** 72+c049*x** 73+c04a*x** 74+c04b*x** 75+
       c04c*x** 76+c04d*x** 77+c04e*x** 78+c04f*x** 79+
       c0c0*x**192+c0c1*x**193+c0c2*x**194+c0c3*x**195+
       c0c4*x**196+c0c5*x**197+c0c6*x**198+c0c7*x**199+
       c0c8*x**200+c0c9*x**201+c0ca*x**202+c0cb*x**203+
       c0cc*x**204+c0cd*x**205+c0ce*x**206+c0cf*x**207+
       c140*x**320+c141*x**321+c142*x**322+c143*x**323+
       c144*x**324+c145*x**325+c146*x**326+c147*x**327+
       c148*x**328+c149*x**329+c14a*x**330+c14b*x**331+
       c14c*x**332+c14d*x**333+c14e*x**334+c14f*x**335+
       c1c0*x**448+c1c1*x**449+c1c2*x**450+c1c3*x**451+
       c1c4*x**452+c1c5*x**453+c1c6*x**454+c1c7*x**455+
       c1c8*x**456+c1c9*x**457+c1ca*x**458+c1cb*x**459+
       c1cc*x**460+c1cd*x**461+c1ce*x**462+c1cf*x**463)
      (L0x7fffffffd860*x**64+L0x7fffffffd862*x**65+L0x7fffffffd864*x**66+
       L0x7fffffffd866*x**67+L0x7fffffffd868*x**68+L0x7fffffffd86a*x**69+
       L0x7fffffffd86c*x**70+L0x7fffffffd86e*x**71+L0x7fffffffd870*x**72+
       L0x7fffffffd872*x**73+L0x7fffffffd874*x**74+L0x7fffffffd876*x**75+
       L0x7fffffffd878*x**76+L0x7fffffffd87a*x**77+L0x7fffffffd87c*x**78+
       L0x7fffffffd87e*x**79)
      [10753, x**128 - 10432],
eqmod (c040*x** 64+c041*x** 65+c042*x** 66+c043*x** 67+
       c044*x** 68+c045*x** 69+c046*x** 70+c047*x** 71+
       c048*x** 72+c049*x** 73+c04a*x** 74+c04b*x** 75+
       c04c*x** 76+c04d*x** 77+c04e*x** 78+c04f*x** 79+
       c0c0*x**192+c0c1*x**193+c0c2*x**194+c0c3*x**195+
       c0c4*x**196+c0c5*x**197+c0c6*x**198+c0c7*x**199+
       c0c8*x**200+c0c9*x**201+c0ca*x**202+c0cb*x**203+
       c0cc*x**204+c0cd*x**205+c0ce*x**206+c0cf*x**207+
       c140*x**320+c141*x**321+c142*x**322+c143*x**323+
       c144*x**324+c145*x**325+c146*x**326+c147*x**327+
       c148*x**328+c149*x**329+c14a*x**330+c14b*x**331+
       c14c*x**332+c14d*x**333+c14e*x**334+c14f*x**335+
       c1c0*x**448+c1c1*x**449+c1c2*x**450+c1c3*x**451+
       c1c4*x**452+c1c5*x**453+c1c6*x**454+c1c7*x**455+
       c1c8*x**456+c1c9*x**457+c1ca*x**458+c1cb*x**459+
       c1cc*x**460+c1cd*x**461+c1ce*x**462+c1cf*x**463)
      (L0x7fffffffd960*x**64+L0x7fffffffd962*x**65+L0x7fffffffd964*x**66+
       L0x7fffffffd966*x**67+L0x7fffffffd968*x**68+L0x7fffffffd96a*x**69+
       L0x7fffffffd96c*x**70+L0x7fffffffd96e*x**71+L0x7fffffffd970*x**72+
       L0x7fffffffd972*x**73+L0x7fffffffd974*x**74+L0x7fffffffd976*x**75+
       L0x7fffffffd978*x**76+L0x7fffffffd97a*x**77+L0x7fffffffd97c*x**78+
       L0x7fffffffd97e*x**79)
      [10753, x**128 - 10686],
eqmod (c040*x** 64+c041*x** 65+c042*x** 66+c043*x** 67+
       c044*x** 68+c045*x** 69+c046*x** 70+c047*x** 71+
       c048*x** 72+c049*x** 73+c04a*x** 74+c04b*x** 75+
       c04c*x** 76+c04d*x** 77+c04e*x** 78+c04f*x** 79+
       c0c0*x**192+c0c1*x**193+c0c2*x**194+c0c3*x**195+
       c0c4*x**196+c0c5*x**197+c0c6*x**198+c0c7*x**199+
       c0c8*x**200+c0c9*x**201+c0ca*x**202+c0cb*x**203+
       c0cc*x**204+c0cd*x**205+c0ce*x**206+c0cf*x**207+
       c140*x**320+c141*x**321+c142*x**322+c143*x**323+
       c144*x**324+c145*x**325+c146*x**326+c147*x**327+
       c148*x**328+c149*x**329+c14a*x**330+c14b*x**331+
       c14c*x**332+c14d*x**333+c14e*x**334+c14f*x**335+
       c1c0*x**448+c1c1*x**449+c1c2*x**450+c1c3*x**451+
       c1c4*x**452+c1c5*x**453+c1c6*x**454+c1c7*x**455+
       c1c8*x**456+c1c9*x**457+c1ca*x**458+c1cb*x**459+
       c1cc*x**460+c1cd*x**461+c1ce*x**462+c1cf*x**463)
      (L0x7fffffffda60*x**64+L0x7fffffffda62*x**65+L0x7fffffffda64*x**66+
       L0x7fffffffda66*x**67+L0x7fffffffda68*x**68+L0x7fffffffda6a*x**69+
       L0x7fffffffda6c*x**70+L0x7fffffffda6e*x**71+L0x7fffffffda70*x**72+
       L0x7fffffffda72*x**73+L0x7fffffffda74*x**74+L0x7fffffffda76*x**75+
       L0x7fffffffda78*x**76+L0x7fffffffda7a*x**77+L0x7fffffffda7c*x**78+
       L0x7fffffffda7e*x**79)
      [10753, x**128 - 67]
  ];


(* === split the CUT into 8 slices === *)

(**************** CUT  74,  0 *****************)

ecut true;

(**************** CUT  75,  0 *****************)

ecut 
  and [
eqmod (c040*x** 64+c041*x** 65+c042*x** 66+c043*x** 67+
       c044*x** 68+c045*x** 69+c046*x** 70+c047*x** 71+
       c048*x** 72+c049*x** 73+c04a*x** 74+c04b*x** 75+
       c04c*x** 76+c04d*x** 77+c04e*x** 78+c04f*x** 79+
       c0c0*x**192+c0c1*x**193+c0c2*x**194+c0c3*x**195+
       c0c4*x**196+c0c5*x**197+c0c6*x**198+c0c7*x**199+
       c0c8*x**200+c0c9*x**201+c0ca*x**202+c0cb*x**203+
       c0cc*x**204+c0cd*x**205+c0ce*x**206+c0cf*x**207+
       c140*x**320+c141*x**321+c142*x**322+c143*x**323+
       c144*x**324+c145*x**325+c146*x**326+c147*x**327+
       c148*x**328+c149*x**329+c14a*x**330+c14b*x**331+
       c14c*x**332+c14d*x**333+c14e*x**334+c14f*x**335+
       c1c0*x**448+c1c1*x**449+c1c2*x**450+c1c3*x**451+
       c1c4*x**452+c1c5*x**453+c1c6*x**454+c1c7*x**455+
       c1c8*x**456+c1c9*x**457+c1ca*x**458+c1cb*x**459+
       c1cc*x**460+c1cd*x**461+c1ce*x**462+c1cf*x**463)
      (L0x7fffffffd360*x**64+L0x7fffffffd362*x**65+L0x7fffffffd364*x**66+
       L0x7fffffffd366*x**67+L0x7fffffffd368*x**68+L0x7fffffffd36a*x**69+
       L0x7fffffffd36c*x**70+L0x7fffffffd36e*x**71+L0x7fffffffd370*x**72+
       L0x7fffffffd372*x**73+L0x7fffffffd374*x**74+L0x7fffffffd376*x**75+
       L0x7fffffffd378*x**76+L0x7fffffffd37a*x**77+L0x7fffffffd37c*x**78+
       L0x7fffffffd37e*x**79)
      [10753, x**128 - 1]
  ] prove with [cuts [73]];


(**************** CUT  76,  0 *****************)

ecut true;

(**************** CUT  77,  0 *****************)

ecut 
  and [
eqmod (c040*x** 64+c041*x** 65+c042*x** 66+c043*x** 67+
       c044*x** 68+c045*x** 69+c046*x** 70+c047*x** 71+
       c048*x** 72+c049*x** 73+c04a*x** 74+c04b*x** 75+
       c04c*x** 76+c04d*x** 77+c04e*x** 78+c04f*x** 79+
       c0c0*x**192+c0c1*x**193+c0c2*x**194+c0c3*x**195+
       c0c4*x**196+c0c5*x**197+c0c6*x**198+c0c7*x**199+
       c0c8*x**200+c0c9*x**201+c0ca*x**202+c0cb*x**203+
       c0cc*x**204+c0cd*x**205+c0ce*x**206+c0cf*x**207+
       c140*x**320+c141*x**321+c142*x**322+c143*x**323+
       c144*x**324+c145*x**325+c146*x**326+c147*x**327+
       c148*x**328+c149*x**329+c14a*x**330+c14b*x**331+
       c14c*x**332+c14d*x**333+c14e*x**334+c14f*x**335+
       c1c0*x**448+c1c1*x**449+c1c2*x**450+c1c3*x**451+
       c1c4*x**452+c1c5*x**453+c1c6*x**454+c1c7*x**455+
       c1c8*x**456+c1c9*x**457+c1ca*x**458+c1cb*x**459+
       c1cc*x**460+c1cd*x**461+c1ce*x**462+c1cf*x**463)
      (L0x7fffffffd460*x**64+L0x7fffffffd462*x**65+L0x7fffffffd464*x**66+
       L0x7fffffffd466*x**67+L0x7fffffffd468*x**68+L0x7fffffffd46a*x**69+
       L0x7fffffffd46c*x**70+L0x7fffffffd46e*x**71+L0x7fffffffd470*x**72+
       L0x7fffffffd472*x**73+L0x7fffffffd474*x**74+L0x7fffffffd476*x**75+
       L0x7fffffffd478*x**76+L0x7fffffffd47a*x**77+L0x7fffffffd47c*x**78+
       L0x7fffffffd47e*x**79)
      [10753, x**128 - 10752]
  ] prove with [cuts [73]];


(**************** CUT  78,  0 *****************)

ecut true;

(**************** CUT  79,  0 *****************)

ecut 
  and [
eqmod (c040*x** 64+c041*x** 65+c042*x** 66+c043*x** 67+
       c044*x** 68+c045*x** 69+c046*x** 70+c047*x** 71+
       c048*x** 72+c049*x** 73+c04a*x** 74+c04b*x** 75+
       c04c*x** 76+c04d*x** 77+c04e*x** 78+c04f*x** 79+
       c0c0*x**192+c0c1*x**193+c0c2*x**194+c0c3*x**195+
       c0c4*x**196+c0c5*x**197+c0c6*x**198+c0c7*x**199+
       c0c8*x**200+c0c9*x**201+c0ca*x**202+c0cb*x**203+
       c0cc*x**204+c0cd*x**205+c0ce*x**206+c0cf*x**207+
       c140*x**320+c141*x**321+c142*x**322+c143*x**323+
       c144*x**324+c145*x**325+c146*x**326+c147*x**327+
       c148*x**328+c149*x**329+c14a*x**330+c14b*x**331+
       c14c*x**332+c14d*x**333+c14e*x**334+c14f*x**335+
       c1c0*x**448+c1c1*x**449+c1c2*x**450+c1c3*x**451+
       c1c4*x**452+c1c5*x**453+c1c6*x**454+c1c7*x**455+
       c1c8*x**456+c1c9*x**457+c1ca*x**458+c1cb*x**459+
       c1cc*x**460+c1cd*x**461+c1ce*x**462+c1cf*x**463)
      (L0x7fffffffd560*x**64+L0x7fffffffd562*x**65+L0x7fffffffd564*x**66+
       L0x7fffffffd566*x**67+L0x7fffffffd568*x**68+L0x7fffffffd56a*x**69+
       L0x7fffffffd56c*x**70+L0x7fffffffd56e*x**71+L0x7fffffffd570*x**72+
       L0x7fffffffd572*x**73+L0x7fffffffd574*x**74+L0x7fffffffd576*x**75+
       L0x7fffffffd578*x**76+L0x7fffffffd57a*x**77+L0x7fffffffd57c*x**78+
       L0x7fffffffd57e*x**79)
      [10753, x**128 - 6264]
  ] prove with [cuts [73]];


(**************** CUT  80,  0 *****************)

ecut true;

(**************** CUT  81,  0 *****************)

ecut 
  and [
eqmod (c040*x** 64+c041*x** 65+c042*x** 66+c043*x** 67+
       c044*x** 68+c045*x** 69+c046*x** 70+c047*x** 71+
       c048*x** 72+c049*x** 73+c04a*x** 74+c04b*x** 75+
       c04c*x** 76+c04d*x** 77+c04e*x** 78+c04f*x** 79+
       c0c0*x**192+c0c1*x**193+c0c2*x**194+c0c3*x**195+
       c0c4*x**196+c0c5*x**197+c0c6*x**198+c0c7*x**199+
       c0c8*x**200+c0c9*x**201+c0ca*x**202+c0cb*x**203+
       c0cc*x**204+c0cd*x**205+c0ce*x**206+c0cf*x**207+
       c140*x**320+c141*x**321+c142*x**322+c143*x**323+
       c144*x**324+c145*x**325+c146*x**326+c147*x**327+
       c148*x**328+c149*x**329+c14a*x**330+c14b*x**331+
       c14c*x**332+c14d*x**333+c14e*x**334+c14f*x**335+
       c1c0*x**448+c1c1*x**449+c1c2*x**450+c1c3*x**451+
       c1c4*x**452+c1c5*x**453+c1c6*x**454+c1c7*x**455+
       c1c8*x**456+c1c9*x**457+c1ca*x**458+c1cb*x**459+
       c1cc*x**460+c1cd*x**461+c1ce*x**462+c1cf*x**463)
      (L0x7fffffffd660*x**64+L0x7fffffffd662*x**65+L0x7fffffffd664*x**66+
       L0x7fffffffd666*x**67+L0x7fffffffd668*x**68+L0x7fffffffd66a*x**69+
       L0x7fffffffd66c*x**70+L0x7fffffffd66e*x**71+L0x7fffffffd670*x**72+
       L0x7fffffffd672*x**73+L0x7fffffffd674*x**74+L0x7fffffffd676*x**75+
       L0x7fffffffd678*x**76+L0x7fffffffd67a*x**77+L0x7fffffffd67c*x**78+
       L0x7fffffffd67e*x**79)
      [10753, x**128 - 4489]
  ] prove with [cuts [73]];


(**************** CUT  82,  0 *****************)

ecut true;

(**************** CUT  83,  0 *****************)

ecut 
  and [
eqmod (c040*x** 64+c041*x** 65+c042*x** 66+c043*x** 67+
       c044*x** 68+c045*x** 69+c046*x** 70+c047*x** 71+
       c048*x** 72+c049*x** 73+c04a*x** 74+c04b*x** 75+
       c04c*x** 76+c04d*x** 77+c04e*x** 78+c04f*x** 79+
       c0c0*x**192+c0c1*x**193+c0c2*x**194+c0c3*x**195+
       c0c4*x**196+c0c5*x**197+c0c6*x**198+c0c7*x**199+
       c0c8*x**200+c0c9*x**201+c0ca*x**202+c0cb*x**203+
       c0cc*x**204+c0cd*x**205+c0ce*x**206+c0cf*x**207+
       c140*x**320+c141*x**321+c142*x**322+c143*x**323+
       c144*x**324+c145*x**325+c146*x**326+c147*x**327+
       c148*x**328+c149*x**329+c14a*x**330+c14b*x**331+
       c14c*x**332+c14d*x**333+c14e*x**334+c14f*x**335+
       c1c0*x**448+c1c1*x**449+c1c2*x**450+c1c3*x**451+
       c1c4*x**452+c1c5*x**453+c1c6*x**454+c1c7*x**455+
       c1c8*x**456+c1c9*x**457+c1ca*x**458+c1cb*x**459+
       c1cc*x**460+c1cd*x**461+c1ce*x**462+c1cf*x**463)
      (L0x7fffffffd760*x**64+L0x7fffffffd762*x**65+L0x7fffffffd764*x**66+
       L0x7fffffffd766*x**67+L0x7fffffffd768*x**68+L0x7fffffffd76a*x**69+
       L0x7fffffffd76c*x**70+L0x7fffffffd76e*x**71+L0x7fffffffd770*x**72+
       L0x7fffffffd772*x**73+L0x7fffffffd774*x**74+L0x7fffffffd776*x**75+
       L0x7fffffffd778*x**76+L0x7fffffffd77a*x**77+L0x7fffffffd77c*x**78+
       L0x7fffffffd77e*x**79)
      [10753, x**128 - 321]
  ] prove with [cuts [73]];


(**************** CUT  84,  0 *****************)

ecut true;

(**************** CUT  85,  0 *****************)

ecut 
  and [
eqmod (c040*x** 64+c041*x** 65+c042*x** 66+c043*x** 67+
       c044*x** 68+c045*x** 69+c046*x** 70+c047*x** 71+
       c048*x** 72+c049*x** 73+c04a*x** 74+c04b*x** 75+
       c04c*x** 76+c04d*x** 77+c04e*x** 78+c04f*x** 79+
       c0c0*x**192+c0c1*x**193+c0c2*x**194+c0c3*x**195+
       c0c4*x**196+c0c5*x**197+c0c6*x**198+c0c7*x**199+
       c0c8*x**200+c0c9*x**201+c0ca*x**202+c0cb*x**203+
       c0cc*x**204+c0cd*x**205+c0ce*x**206+c0cf*x**207+
       c140*x**320+c141*x**321+c142*x**322+c143*x**323+
       c144*x**324+c145*x**325+c146*x**326+c147*x**327+
       c148*x**328+c149*x**329+c14a*x**330+c14b*x**331+
       c14c*x**332+c14d*x**333+c14e*x**334+c14f*x**335+
       c1c0*x**448+c1c1*x**449+c1c2*x**450+c1c3*x**451+
       c1c4*x**452+c1c5*x**453+c1c6*x**454+c1c7*x**455+
       c1c8*x**456+c1c9*x**457+c1ca*x**458+c1cb*x**459+
       c1cc*x**460+c1cd*x**461+c1ce*x**462+c1cf*x**463)
      (L0x7fffffffd860*x**64+L0x7fffffffd862*x**65+L0x7fffffffd864*x**66+
       L0x7fffffffd866*x**67+L0x7fffffffd868*x**68+L0x7fffffffd86a*x**69+
       L0x7fffffffd86c*x**70+L0x7fffffffd86e*x**71+L0x7fffffffd870*x**72+
       L0x7fffffffd872*x**73+L0x7fffffffd874*x**74+L0x7fffffffd876*x**75+
       L0x7fffffffd878*x**76+L0x7fffffffd87a*x**77+L0x7fffffffd87c*x**78+
       L0x7fffffffd87e*x**79)
      [10753, x**128 - 10432]
  ] prove with [cuts [73]];


(**************** CUT  86,  0 *****************)

ecut true;

(**************** CUT  87,  0 *****************)

ecut 
  and [
eqmod (c040*x** 64+c041*x** 65+c042*x** 66+c043*x** 67+
       c044*x** 68+c045*x** 69+c046*x** 70+c047*x** 71+
       c048*x** 72+c049*x** 73+c04a*x** 74+c04b*x** 75+
       c04c*x** 76+c04d*x** 77+c04e*x** 78+c04f*x** 79+
       c0c0*x**192+c0c1*x**193+c0c2*x**194+c0c3*x**195+
       c0c4*x**196+c0c5*x**197+c0c6*x**198+c0c7*x**199+
       c0c8*x**200+c0c9*x**201+c0ca*x**202+c0cb*x**203+
       c0cc*x**204+c0cd*x**205+c0ce*x**206+c0cf*x**207+
       c140*x**320+c141*x**321+c142*x**322+c143*x**323+
       c144*x**324+c145*x**325+c146*x**326+c147*x**327+
       c148*x**328+c149*x**329+c14a*x**330+c14b*x**331+
       c14c*x**332+c14d*x**333+c14e*x**334+c14f*x**335+
       c1c0*x**448+c1c1*x**449+c1c2*x**450+c1c3*x**451+
       c1c4*x**452+c1c5*x**453+c1c6*x**454+c1c7*x**455+
       c1c8*x**456+c1c9*x**457+c1ca*x**458+c1cb*x**459+
       c1cc*x**460+c1cd*x**461+c1ce*x**462+c1cf*x**463)
      (L0x7fffffffd960*x**64+L0x7fffffffd962*x**65+L0x7fffffffd964*x**66+
       L0x7fffffffd966*x**67+L0x7fffffffd968*x**68+L0x7fffffffd96a*x**69+
       L0x7fffffffd96c*x**70+L0x7fffffffd96e*x**71+L0x7fffffffd970*x**72+
       L0x7fffffffd972*x**73+L0x7fffffffd974*x**74+L0x7fffffffd976*x**75+
       L0x7fffffffd978*x**76+L0x7fffffffd97a*x**77+L0x7fffffffd97c*x**78+
       L0x7fffffffd97e*x**79)
      [10753, x**128 - 10686]
  ] prove with [cuts [73]];


(**************** CUT  88,  0 *****************)

ecut true;

(**************** CUT  89,  0 *****************)

ecut 
  and [
eqmod (c040*x** 64+c041*x** 65+c042*x** 66+c043*x** 67+
       c044*x** 68+c045*x** 69+c046*x** 70+c047*x** 71+
       c048*x** 72+c049*x** 73+c04a*x** 74+c04b*x** 75+
       c04c*x** 76+c04d*x** 77+c04e*x** 78+c04f*x** 79+
       c0c0*x**192+c0c1*x**193+c0c2*x**194+c0c3*x**195+
       c0c4*x**196+c0c5*x**197+c0c6*x**198+c0c7*x**199+
       c0c8*x**200+c0c9*x**201+c0ca*x**202+c0cb*x**203+
       c0cc*x**204+c0cd*x**205+c0ce*x**206+c0cf*x**207+
       c140*x**320+c141*x**321+c142*x**322+c143*x**323+
       c144*x**324+c145*x**325+c146*x**326+c147*x**327+
       c148*x**328+c149*x**329+c14a*x**330+c14b*x**331+
       c14c*x**332+c14d*x**333+c14e*x**334+c14f*x**335+
       c1c0*x**448+c1c1*x**449+c1c2*x**450+c1c3*x**451+
       c1c4*x**452+c1c5*x**453+c1c6*x**454+c1c7*x**455+
       c1c8*x**456+c1c9*x**457+c1ca*x**458+c1cb*x**459+
       c1cc*x**460+c1cd*x**461+c1ce*x**462+c1cf*x**463)
      (L0x7fffffffda60*x**64+L0x7fffffffda62*x**65+L0x7fffffffda64*x**66+
       L0x7fffffffda66*x**67+L0x7fffffffda68*x**68+L0x7fffffffda6a*x**69+
       L0x7fffffffda6c*x**70+L0x7fffffffda6e*x**71+L0x7fffffffda70*x**72+
       L0x7fffffffda72*x**73+L0x7fffffffda74*x**74+L0x7fffffffda76*x**75+
       L0x7fffffffda78*x**76+L0x7fffffffda7a*x**77+L0x7fffffffda7c*x**78+
       L0x7fffffffda7e*x**79)
      [10753, x**128 - 67]
  ] prove with [cuts [73]];



(* === be ready for next level and offset === *)

(**************** CUT  90,  0 *****************)

ecut true;



(* vpbroadcastw 0x102(%rdx),%ymm1                  #! EA = L0x555555561222; Value = 0x276d0198f85c6adf; PC = 0x55555555720f *)
mov ymm1_0 L0x555555561222;
mov ymm1_1 L0x555555561222;
mov ymm1_2 L0x555555561222;
mov ymm1_3 L0x555555561222;
mov ymm1_4 L0x555555561222;
mov ymm1_5 L0x555555561222;
mov ymm1_6 L0x555555561222;
mov ymm1_7 L0x555555561222;
mov ymm1_8 L0x555555561222;
mov ymm1_9 L0x555555561222;
mov ymm1_a L0x555555561222;
mov ymm1_b L0x555555561222;
mov ymm1_c L0x555555561222;
mov ymm1_d L0x555555561222;
mov ymm1_e L0x555555561222;
mov ymm1_f L0x555555561222;
(* vpbroadcastw 0x302(%rdx),%ymm2                  #! EA = L0x555555561422; Value = 0x096df198105c00df; PC = 0x555555557218 *)
mov ymm2_0 L0x555555561422;
mov ymm2_1 L0x555555561422;
mov ymm2_2 L0x555555561422;
mov ymm2_3 L0x555555561422;
mov ymm2_4 L0x555555561422;
mov ymm2_5 L0x555555561422;
mov ymm2_6 L0x555555561422;
mov ymm2_7 L0x555555561422;
mov ymm2_8 L0x555555561422;
mov ymm2_9 L0x555555561422;
mov ymm2_a L0x555555561422;
mov ymm2_b L0x555555561422;
mov ymm2_c L0x555555561422;
mov ymm2_d L0x555555561422;
mov ymm2_e L0x555555561422;
mov ymm2_f L0x555555561422;
(* vmovdqa 0x2a0(%rsi),%ymm6                       #! EA = L0x7fffffffcd80; Value = 0x0000000000000000; PC = 0x555555557221 *)
mov ymm6_0 L0x7fffffffcd80;
mov ymm6_1 L0x7fffffffcd82;
mov ymm6_2 L0x7fffffffcd84;
mov ymm6_3 L0x7fffffffcd86;
mov ymm6_4 L0x7fffffffcd88;
mov ymm6_5 L0x7fffffffcd8a;
mov ymm6_6 L0x7fffffffcd8c;
mov ymm6_7 L0x7fffffffcd8e;
mov ymm6_8 L0x7fffffffcd90;
mov ymm6_9 L0x7fffffffcd92;
mov ymm6_a L0x7fffffffcd94;
mov ymm6_b L0x7fffffffcd96;
mov ymm6_c L0x7fffffffcd98;
mov ymm6_d L0x7fffffffcd9a;
mov ymm6_e L0x7fffffffcd9c;
mov ymm6_f L0x7fffffffcd9e;
(* vmovdqa 0x3a0(%rsi),%ymm7                       #! EA = L0x7fffffffce80; Value = 0x0000000000000000; PC = 0x555555557229 *)
mov ymm7_0 L0x7fffffffce80;
mov ymm7_1 L0x7fffffffce82;
mov ymm7_2 L0x7fffffffce84;
mov ymm7_3 L0x7fffffffce86;
mov ymm7_4 L0x7fffffffce88;
mov ymm7_5 L0x7fffffffce8a;
mov ymm7_6 L0x7fffffffce8c;
mov ymm7_7 L0x7fffffffce8e;
mov ymm7_8 L0x7fffffffce90;
mov ymm7_9 L0x7fffffffce92;
mov ymm7_a L0x7fffffffce94;
mov ymm7_b L0x7fffffffce96;
mov ymm7_c L0x7fffffffce98;
mov ymm7_d L0x7fffffffce9a;
mov ymm7_e L0x7fffffffce9c;
mov ymm7_f L0x7fffffffce9e;
(* vpmullw %ymm1,%ymm6,%ymm3                       #! PC = 0x555555557231 *)
smull mulHymm6_0 mulL_0 ymm1_0 ymm6_0;
smull mulHymm6_1 mulL_1 ymm1_1 ymm6_1;
smull mulHymm6_2 mulL_2 ymm1_2 ymm6_2;
smull mulHymm6_3 mulL_3 ymm1_3 ymm6_3;
smull mulHymm6_4 mulL_4 ymm1_4 ymm6_4;
smull mulHymm6_5 mulL_5 ymm1_5 ymm6_5;
smull mulHymm6_6 mulL_6 ymm1_6 ymm6_6;
smull mulHymm6_7 mulL_7 ymm1_7 ymm6_7;
smull mulHymm6_8 mulL_8 ymm1_8 ymm6_8;
smull mulHymm6_9 mulL_9 ymm1_9 ymm6_9;
smull mulHymm6_a mulL_a ymm1_a ymm6_a;
smull mulHymm6_b mulL_b ymm1_b ymm6_b;
smull mulHymm6_c mulL_c ymm1_c ymm6_c;
smull mulHymm6_d mulL_d ymm1_d ymm6_d;
smull mulHymm6_e mulL_e ymm1_e ymm6_e;
smull mulHymm6_f mulL_f ymm1_f ymm6_f;
cast ymm3_0@sint16 mulL_0;
cast ymm3_1@sint16 mulL_1;
cast ymm3_2@sint16 mulL_2;
cast ymm3_3@sint16 mulL_3;
cast ymm3_4@sint16 mulL_4;
cast ymm3_5@sint16 mulL_5;
cast ymm3_6@sint16 mulL_6;
cast ymm3_7@sint16 mulL_7;
cast ymm3_8@sint16 mulL_8;
cast ymm3_9@sint16 mulL_9;
cast ymm3_a@sint16 mulL_a;
cast ymm3_b@sint16 mulL_b;
cast ymm3_c@sint16 mulL_c;
cast ymm3_d@sint16 mulL_d;
cast ymm3_e@sint16 mulL_e;
cast ymm3_f@sint16 mulL_f;
(* vpmulhw %ymm2,%ymm6,%ymm10                      #! PC = 0x555555557235 *)
smull mulH_0 mulLymm6_0 ymm6_0 ymm2_0;
smull mulH_1 mulLymm6_1 ymm6_1 ymm2_1;
smull mulH_2 mulLymm6_2 ymm6_2 ymm2_2;
smull mulH_3 mulLymm6_3 ymm6_3 ymm2_3;
smull mulH_4 mulLymm6_4 ymm6_4 ymm2_4;
smull mulH_5 mulLymm6_5 ymm6_5 ymm2_5;
smull mulH_6 mulLymm6_6 ymm6_6 ymm2_6;
smull mulH_7 mulLymm6_7 ymm6_7 ymm2_7;
smull mulH_8 mulLymm6_8 ymm6_8 ymm2_8;
smull mulH_9 mulLymm6_9 ymm6_9 ymm2_9;
smull mulH_a mulLymm6_a ymm6_a ymm2_a;
smull mulH_b mulLymm6_b ymm6_b ymm2_b;
smull mulH_c mulLymm6_c ymm6_c ymm2_c;
smull mulH_d mulLymm6_d ymm6_d ymm2_d;
smull mulH_e mulLymm6_e ymm6_e ymm2_e;
smull mulH_f mulLymm6_f ymm6_f ymm2_f;
mov ymm10_0 mulH_0;
mov ymm10_1 mulH_1;
mov ymm10_2 mulH_2;
mov ymm10_3 mulH_3;
mov ymm10_4 mulH_4;
mov ymm10_5 mulH_5;
mov ymm10_6 mulH_6;
mov ymm10_7 mulH_7;
mov ymm10_8 mulH_8;
mov ymm10_9 mulH_9;
mov ymm10_a mulH_a;
mov ymm10_b mulH_b;
mov ymm10_c mulH_c;
mov ymm10_d mulH_d;
mov ymm10_e mulH_e;
mov ymm10_f mulH_f;
(* vpmulhw %ymm0,%ymm3,%ymm3                       #! PC = 0x555555557239 *)
smull mulH_0 red_0 ymm3_0 ymm0_0;
assert true && red_0 = mulLymm6_0;
assume red_0 = mulLymm6_0 && true;
smull mulH_1 red_1 ymm3_1 ymm0_1;
assert true && red_1 = mulLymm6_1;
assume red_1 = mulLymm6_1 && true;
smull mulH_2 red_2 ymm3_2 ymm0_2;
assert true && red_2 = mulLymm6_2;
assume red_2 = mulLymm6_2 && true;
smull mulH_3 red_3 ymm3_3 ymm0_3;
assert true && red_3 = mulLymm6_3;
assume red_3 = mulLymm6_3 && true;
smull mulH_4 red_4 ymm3_4 ymm0_4;
assert true && red_4 = mulLymm6_4;
assume red_4 = mulLymm6_4 && true;
smull mulH_5 red_5 ymm3_5 ymm0_5;
assert true && red_5 = mulLymm6_5;
assume red_5 = mulLymm6_5 && true;
smull mulH_6 red_6 ymm3_6 ymm0_6;
assert true && red_6 = mulLymm6_6;
assume red_6 = mulLymm6_6 && true;
smull mulH_7 red_7 ymm3_7 ymm0_7;
assert true && red_7 = mulLymm6_7;
assume red_7 = mulLymm6_7 && true;
smull mulH_8 red_8 ymm3_8 ymm0_8;
assert true && red_8 = mulLymm6_8;
assume red_8 = mulLymm6_8 && true;
smull mulH_9 red_9 ymm3_9 ymm0_9;
assert true && red_9 = mulLymm6_9;
assume red_9 = mulLymm6_9 && true;
smull mulH_a red_a ymm3_a ymm0_a;
assert true && red_a = mulLymm6_a;
assume red_a = mulLymm6_a && true;
smull mulH_b red_b ymm3_b ymm0_b;
assert true && red_b = mulLymm6_b;
assume red_b = mulLymm6_b && true;
smull mulH_c red_c ymm3_c ymm0_c;
assert true && red_c = mulLymm6_c;
assume red_c = mulLymm6_c && true;
smull mulH_d red_d ymm3_d ymm0_d;
assert true && red_d = mulLymm6_d;
assume red_d = mulLymm6_d && true;
smull mulH_e red_e ymm3_e ymm0_e;
assert true && red_e = mulLymm6_e;
assume red_e = mulLymm6_e && true;
smull mulH_f red_f ymm3_f ymm0_f;
assert true && red_f = mulLymm6_f;
assume red_f = mulLymm6_f && true;
mov ymm3_0 mulH_0;
mov ymm3_1 mulH_1;
mov ymm3_2 mulH_2;
mov ymm3_3 mulH_3;
mov ymm3_4 mulH_4;
mov ymm3_5 mulH_5;
mov ymm3_6 mulH_6;
mov ymm3_7 mulH_7;
mov ymm3_8 mulH_8;
mov ymm3_9 mulH_9;
mov ymm3_a mulH_a;
mov ymm3_b mulH_b;
mov ymm3_c mulH_c;
mov ymm3_d mulH_d;
mov ymm3_e mulH_e;
mov ymm3_f mulH_f;
(* vpsubw %ymm3,%ymm10,%ymm10                      #! PC = 0x55555555723d *)
sub ymm10_0 ymm10_0 ymm3_0;
sub ymm10_1 ymm10_1 ymm3_1;
sub ymm10_2 ymm10_2 ymm3_2;
sub ymm10_3 ymm10_3 ymm3_3;
sub ymm10_4 ymm10_4 ymm3_4;
sub ymm10_5 ymm10_5 ymm3_5;
sub ymm10_6 ymm10_6 ymm3_6;
sub ymm10_7 ymm10_7 ymm3_7;
sub ymm10_8 ymm10_8 ymm3_8;
sub ymm10_9 ymm10_9 ymm3_9;
sub ymm10_a ymm10_a ymm3_a;
sub ymm10_b ymm10_b ymm3_b;
sub ymm10_c ymm10_c ymm3_c;
sub ymm10_d ymm10_d ymm3_d;
sub ymm10_e ymm10_e ymm3_e;
sub ymm10_f ymm10_f ymm3_f;
(* vpmullw %ymm1,%ymm7,%ymm3                       #! PC = 0x555555557241 *)
smull mulHymm7_0 mulL_0 ymm1_0 ymm7_0;
smull mulHymm7_1 mulL_1 ymm1_1 ymm7_1;
smull mulHymm7_2 mulL_2 ymm1_2 ymm7_2;
smull mulHymm7_3 mulL_3 ymm1_3 ymm7_3;
smull mulHymm7_4 mulL_4 ymm1_4 ymm7_4;
smull mulHymm7_5 mulL_5 ymm1_5 ymm7_5;
smull mulHymm7_6 mulL_6 ymm1_6 ymm7_6;
smull mulHymm7_7 mulL_7 ymm1_7 ymm7_7;
smull mulHymm7_8 mulL_8 ymm1_8 ymm7_8;
smull mulHymm7_9 mulL_9 ymm1_9 ymm7_9;
smull mulHymm7_a mulL_a ymm1_a ymm7_a;
smull mulHymm7_b mulL_b ymm1_b ymm7_b;
smull mulHymm7_c mulL_c ymm1_c ymm7_c;
smull mulHymm7_d mulL_d ymm1_d ymm7_d;
smull mulHymm7_e mulL_e ymm1_e ymm7_e;
smull mulHymm7_f mulL_f ymm1_f ymm7_f;
cast ymm3_0@sint16 mulL_0;
cast ymm3_1@sint16 mulL_1;
cast ymm3_2@sint16 mulL_2;
cast ymm3_3@sint16 mulL_3;
cast ymm3_4@sint16 mulL_4;
cast ymm3_5@sint16 mulL_5;
cast ymm3_6@sint16 mulL_6;
cast ymm3_7@sint16 mulL_7;
cast ymm3_8@sint16 mulL_8;
cast ymm3_9@sint16 mulL_9;
cast ymm3_a@sint16 mulL_a;
cast ymm3_b@sint16 mulL_b;
cast ymm3_c@sint16 mulL_c;
cast ymm3_d@sint16 mulL_d;
cast ymm3_e@sint16 mulL_e;
cast ymm3_f@sint16 mulL_f;
(* vpmulhw %ymm2,%ymm7,%ymm11                      #! PC = 0x555555557245 *)
smull mulH_0 mulLymm7_0 ymm7_0 ymm2_0;
smull mulH_1 mulLymm7_1 ymm7_1 ymm2_1;
smull mulH_2 mulLymm7_2 ymm7_2 ymm2_2;
smull mulH_3 mulLymm7_3 ymm7_3 ymm2_3;
smull mulH_4 mulLymm7_4 ymm7_4 ymm2_4;
smull mulH_5 mulLymm7_5 ymm7_5 ymm2_5;
smull mulH_6 mulLymm7_6 ymm7_6 ymm2_6;
smull mulH_7 mulLymm7_7 ymm7_7 ymm2_7;
smull mulH_8 mulLymm7_8 ymm7_8 ymm2_8;
smull mulH_9 mulLymm7_9 ymm7_9 ymm2_9;
smull mulH_a mulLymm7_a ymm7_a ymm2_a;
smull mulH_b mulLymm7_b ymm7_b ymm2_b;
smull mulH_c mulLymm7_c ymm7_c ymm2_c;
smull mulH_d mulLymm7_d ymm7_d ymm2_d;
smull mulH_e mulLymm7_e ymm7_e ymm2_e;
smull mulH_f mulLymm7_f ymm7_f ymm2_f;
mov ymm11_0 mulH_0;
mov ymm11_1 mulH_1;
mov ymm11_2 mulH_2;
mov ymm11_3 mulH_3;
mov ymm11_4 mulH_4;
mov ymm11_5 mulH_5;
mov ymm11_6 mulH_6;
mov ymm11_7 mulH_7;
mov ymm11_8 mulH_8;
mov ymm11_9 mulH_9;
mov ymm11_a mulH_a;
mov ymm11_b mulH_b;
mov ymm11_c mulH_c;
mov ymm11_d mulH_d;
mov ymm11_e mulH_e;
mov ymm11_f mulH_f;
(* vpmulhw %ymm0,%ymm3,%ymm3                       #! PC = 0x555555557249 *)
smull mulH_0 red_0 ymm3_0 ymm0_0;
assert true && red_0 = mulLymm7_0;
assume red_0 = mulLymm7_0 && true;
smull mulH_1 red_1 ymm3_1 ymm0_1;
assert true && red_1 = mulLymm7_1;
assume red_1 = mulLymm7_1 && true;
smull mulH_2 red_2 ymm3_2 ymm0_2;
assert true && red_2 = mulLymm7_2;
assume red_2 = mulLymm7_2 && true;
smull mulH_3 red_3 ymm3_3 ymm0_3;
assert true && red_3 = mulLymm7_3;
assume red_3 = mulLymm7_3 && true;
smull mulH_4 red_4 ymm3_4 ymm0_4;
assert true && red_4 = mulLymm7_4;
assume red_4 = mulLymm7_4 && true;
smull mulH_5 red_5 ymm3_5 ymm0_5;
assert true && red_5 = mulLymm7_5;
assume red_5 = mulLymm7_5 && true;
smull mulH_6 red_6 ymm3_6 ymm0_6;
assert true && red_6 = mulLymm7_6;
assume red_6 = mulLymm7_6 && true;
smull mulH_7 red_7 ymm3_7 ymm0_7;
assert true && red_7 = mulLymm7_7;
assume red_7 = mulLymm7_7 && true;
smull mulH_8 red_8 ymm3_8 ymm0_8;
assert true && red_8 = mulLymm7_8;
assume red_8 = mulLymm7_8 && true;
smull mulH_9 red_9 ymm3_9 ymm0_9;
assert true && red_9 = mulLymm7_9;
assume red_9 = mulLymm7_9 && true;
smull mulH_a red_a ymm3_a ymm0_a;
assert true && red_a = mulLymm7_a;
assume red_a = mulLymm7_a && true;
smull mulH_b red_b ymm3_b ymm0_b;
assert true && red_b = mulLymm7_b;
assume red_b = mulLymm7_b && true;
smull mulH_c red_c ymm3_c ymm0_c;
assert true && red_c = mulLymm7_c;
assume red_c = mulLymm7_c && true;
smull mulH_d red_d ymm3_d ymm0_d;
assert true && red_d = mulLymm7_d;
assume red_d = mulLymm7_d && true;
smull mulH_e red_e ymm3_e ymm0_e;
assert true && red_e = mulLymm7_e;
assume red_e = mulLymm7_e && true;
smull mulH_f red_f ymm3_f ymm0_f;
assert true && red_f = mulLymm7_f;
assume red_f = mulLymm7_f && true;
mov ymm3_0 mulH_0;
mov ymm3_1 mulH_1;
mov ymm3_2 mulH_2;
mov ymm3_3 mulH_3;
mov ymm3_4 mulH_4;
mov ymm3_5 mulH_5;
mov ymm3_6 mulH_6;
mov ymm3_7 mulH_7;
mov ymm3_8 mulH_8;
mov ymm3_9 mulH_9;
mov ymm3_a mulH_a;
mov ymm3_b mulH_b;
mov ymm3_c mulH_c;
mov ymm3_d mulH_d;
mov ymm3_e mulH_e;
mov ymm3_f mulH_f;
(* vpsubw %ymm3,%ymm11,%ymm11                      #! PC = 0x55555555724d *)
sub ymm11_0 ymm11_0 ymm3_0;
sub ymm11_1 ymm11_1 ymm3_1;
sub ymm11_2 ymm11_2 ymm3_2;
sub ymm11_3 ymm11_3 ymm3_3;
sub ymm11_4 ymm11_4 ymm3_4;
sub ymm11_5 ymm11_5 ymm3_5;
sub ymm11_6 ymm11_6 ymm3_6;
sub ymm11_7 ymm11_7 ymm3_7;
sub ymm11_8 ymm11_8 ymm3_8;
sub ymm11_9 ymm11_9 ymm3_9;
sub ymm11_a ymm11_a ymm3_a;
sub ymm11_b ymm11_b ymm3_b;
sub ymm11_c ymm11_c ymm3_c;
sub ymm11_d ymm11_d ymm3_d;
sub ymm11_e ymm11_e ymm3_e;
sub ymm11_f ymm11_f ymm3_f;
(* vmovdqa 0xa0(%rsi),%ymm4                        #! EA = L0x7fffffffcb80; Value = 0x0000000000000000; PC = 0x555555557251 *)
mov ymm4_0 L0x7fffffffcb80;
mov ymm4_1 L0x7fffffffcb82;
mov ymm4_2 L0x7fffffffcb84;
mov ymm4_3 L0x7fffffffcb86;
mov ymm4_4 L0x7fffffffcb88;
mov ymm4_5 L0x7fffffffcb8a;
mov ymm4_6 L0x7fffffffcb8c;
mov ymm4_7 L0x7fffffffcb8e;
mov ymm4_8 L0x7fffffffcb90;
mov ymm4_9 L0x7fffffffcb92;
mov ymm4_a L0x7fffffffcb94;
mov ymm4_b L0x7fffffffcb96;
mov ymm4_c L0x7fffffffcb98;
mov ymm4_d L0x7fffffffcb9a;
mov ymm4_e L0x7fffffffcb9c;
mov ymm4_f L0x7fffffffcb9e;
(* vmovdqa 0x1a0(%rsi),%ymm5                       #! EA = L0x7fffffffcc80; Value = 0x0000000000000000; PC = 0x555555557259 *)
mov ymm5_0 L0x7fffffffcc80;
mov ymm5_1 L0x7fffffffcc82;
mov ymm5_2 L0x7fffffffcc84;
mov ymm5_3 L0x7fffffffcc86;
mov ymm5_4 L0x7fffffffcc88;
mov ymm5_5 L0x7fffffffcc8a;
mov ymm5_6 L0x7fffffffcc8c;
mov ymm5_7 L0x7fffffffcc8e;
mov ymm5_8 L0x7fffffffcc90;
mov ymm5_9 L0x7fffffffcc92;
mov ymm5_a L0x7fffffffcc94;
mov ymm5_b L0x7fffffffcc96;
mov ymm5_c L0x7fffffffcc98;
mov ymm5_d L0x7fffffffcc9a;
mov ymm5_e L0x7fffffffcc9c;
mov ymm5_f L0x7fffffffcc9e;
(* vpaddw %ymm10,%ymm4,%ymm8                       #! PC = 0x555555557261 *)
add ymm8_0 ymm4_0 ymm10_0;
add ymm8_1 ymm4_1 ymm10_1;
add ymm8_2 ymm4_2 ymm10_2;
add ymm8_3 ymm4_3 ymm10_3;
add ymm8_4 ymm4_4 ymm10_4;
add ymm8_5 ymm4_5 ymm10_5;
add ymm8_6 ymm4_6 ymm10_6;
add ymm8_7 ymm4_7 ymm10_7;
add ymm8_8 ymm4_8 ymm10_8;
add ymm8_9 ymm4_9 ymm10_9;
add ymm8_a ymm4_a ymm10_a;
add ymm8_b ymm4_b ymm10_b;
add ymm8_c ymm4_c ymm10_c;
add ymm8_d ymm4_d ymm10_d;
add ymm8_e ymm4_e ymm10_e;
add ymm8_f ymm4_f ymm10_f;
(* vpsubw %ymm10,%ymm4,%ymm10                      #! PC = 0x555555557266 *)
sub ymm10_0 ymm4_0 ymm10_0;
sub ymm10_1 ymm4_1 ymm10_1;
sub ymm10_2 ymm4_2 ymm10_2;
sub ymm10_3 ymm4_3 ymm10_3;
sub ymm10_4 ymm4_4 ymm10_4;
sub ymm10_5 ymm4_5 ymm10_5;
sub ymm10_6 ymm4_6 ymm10_6;
sub ymm10_7 ymm4_7 ymm10_7;
sub ymm10_8 ymm4_8 ymm10_8;
sub ymm10_9 ymm4_9 ymm10_9;
sub ymm10_a ymm4_a ymm10_a;
sub ymm10_b ymm4_b ymm10_b;
sub ymm10_c ymm4_c ymm10_c;
sub ymm10_d ymm4_d ymm10_d;
sub ymm10_e ymm4_e ymm10_e;
sub ymm10_f ymm4_f ymm10_f;
(* vpaddw %ymm11,%ymm5,%ymm9                       #! PC = 0x55555555726b *)
add ymm9_0 ymm5_0 ymm11_0;
add ymm9_1 ymm5_1 ymm11_1;
add ymm9_2 ymm5_2 ymm11_2;
add ymm9_3 ymm5_3 ymm11_3;
add ymm9_4 ymm5_4 ymm11_4;
add ymm9_5 ymm5_5 ymm11_5;
add ymm9_6 ymm5_6 ymm11_6;
add ymm9_7 ymm5_7 ymm11_7;
add ymm9_8 ymm5_8 ymm11_8;
add ymm9_9 ymm5_9 ymm11_9;
add ymm9_a ymm5_a ymm11_a;
add ymm9_b ymm5_b ymm11_b;
add ymm9_c ymm5_c ymm11_c;
add ymm9_d ymm5_d ymm11_d;
add ymm9_e ymm5_e ymm11_e;
add ymm9_f ymm5_f ymm11_f;
(* vpsubw %ymm11,%ymm5,%ymm11                      #! PC = 0x555555557270 *)
sub ymm11_0 ymm5_0 ymm11_0;
sub ymm11_1 ymm5_1 ymm11_1;
sub ymm11_2 ymm5_2 ymm11_2;
sub ymm11_3 ymm5_3 ymm11_3;
sub ymm11_4 ymm5_4 ymm11_4;
sub ymm11_5 ymm5_5 ymm11_5;
sub ymm11_6 ymm5_6 ymm11_6;
sub ymm11_7 ymm5_7 ymm11_7;
sub ymm11_8 ymm5_8 ymm11_8;
sub ymm11_9 ymm5_9 ymm11_9;
sub ymm11_a ymm5_a ymm11_a;
sub ymm11_b ymm5_b ymm11_b;
sub ymm11_c ymm5_c ymm11_c;
sub ymm11_d ymm5_d ymm11_d;
sub ymm11_e ymm5_e ymm11_e;
sub ymm11_f ymm5_f ymm11_f;
(* vpaddw %ymm6,%ymm4,%ymm3                        #! PC = 0x555555557275 *)
add ymm3_0 ymm4_0 ymm6_0;
add ymm3_1 ymm4_1 ymm6_1;
add ymm3_2 ymm4_2 ymm6_2;
add ymm3_3 ymm4_3 ymm6_3;
add ymm3_4 ymm4_4 ymm6_4;
add ymm3_5 ymm4_5 ymm6_5;
add ymm3_6 ymm4_6 ymm6_6;
add ymm3_7 ymm4_7 ymm6_7;
add ymm3_8 ymm4_8 ymm6_8;
add ymm3_9 ymm4_9 ymm6_9;
add ymm3_a ymm4_a ymm6_a;
add ymm3_b ymm4_b ymm6_b;
add ymm3_c ymm4_c ymm6_c;
add ymm3_d ymm4_d ymm6_d;
add ymm3_e ymm4_e ymm6_e;
add ymm3_f ymm4_f ymm6_f;
(* vpsubw %ymm6,%ymm4,%ymm6                        #! PC = 0x555555557279 *)
sub ymm6_0 ymm4_0 ymm6_0;
sub ymm6_1 ymm4_1 ymm6_1;
sub ymm6_2 ymm4_2 ymm6_2;
sub ymm6_3 ymm4_3 ymm6_3;
sub ymm6_4 ymm4_4 ymm6_4;
sub ymm6_5 ymm4_5 ymm6_5;
sub ymm6_6 ymm4_6 ymm6_6;
sub ymm6_7 ymm4_7 ymm6_7;
sub ymm6_8 ymm4_8 ymm6_8;
sub ymm6_9 ymm4_9 ymm6_9;
sub ymm6_a ymm4_a ymm6_a;
sub ymm6_b ymm4_b ymm6_b;
sub ymm6_c ymm4_c ymm6_c;
sub ymm6_d ymm4_d ymm6_d;
sub ymm6_e ymm4_e ymm6_e;
sub ymm6_f ymm4_f ymm6_f;
(* vpaddw %ymm7,%ymm5,%ymm4                        #! PC = 0x55555555727d *)
add ymm4_0 ymm5_0 ymm7_0;
add ymm4_1 ymm5_1 ymm7_1;
add ymm4_2 ymm5_2 ymm7_2;
add ymm4_3 ymm5_3 ymm7_3;
add ymm4_4 ymm5_4 ymm7_4;
add ymm4_5 ymm5_5 ymm7_5;
add ymm4_6 ymm5_6 ymm7_6;
add ymm4_7 ymm5_7 ymm7_7;
add ymm4_8 ymm5_8 ymm7_8;
add ymm4_9 ymm5_9 ymm7_9;
add ymm4_a ymm5_a ymm7_a;
add ymm4_b ymm5_b ymm7_b;
add ymm4_c ymm5_c ymm7_c;
add ymm4_d ymm5_d ymm7_d;
add ymm4_e ymm5_e ymm7_e;
add ymm4_f ymm5_f ymm7_f;
(* vpsubw %ymm7,%ymm5,%ymm7                        #! PC = 0x555555557281 *)
sub ymm7_0 ymm5_0 ymm7_0;
sub ymm7_1 ymm5_1 ymm7_1;
sub ymm7_2 ymm5_2 ymm7_2;
sub ymm7_3 ymm5_3 ymm7_3;
sub ymm7_4 ymm5_4 ymm7_4;
sub ymm7_5 ymm5_5 ymm7_5;
sub ymm7_6 ymm5_6 ymm7_6;
sub ymm7_7 ymm5_7 ymm7_7;
sub ymm7_8 ymm5_8 ymm7_8;
sub ymm7_9 ymm5_9 ymm7_9;
sub ymm7_a ymm5_a ymm7_a;
sub ymm7_b ymm5_b ymm7_b;
sub ymm7_c ymm5_c ymm7_c;
sub ymm7_d ymm5_d ymm7_d;
sub ymm7_e ymm5_e ymm7_e;
sub ymm7_f ymm5_f ymm7_f;
(* vpmullw %ymm1,%ymm7,%ymm5                       #! PC = 0x555555557285 *)
smull mulHymm7_0 mulL_0 ymm1_0 ymm7_0;
smull mulHymm7_1 mulL_1 ymm1_1 ymm7_1;
smull mulHymm7_2 mulL_2 ymm1_2 ymm7_2;
smull mulHymm7_3 mulL_3 ymm1_3 ymm7_3;
smull mulHymm7_4 mulL_4 ymm1_4 ymm7_4;
smull mulHymm7_5 mulL_5 ymm1_5 ymm7_5;
smull mulHymm7_6 mulL_6 ymm1_6 ymm7_6;
smull mulHymm7_7 mulL_7 ymm1_7 ymm7_7;
smull mulHymm7_8 mulL_8 ymm1_8 ymm7_8;
smull mulHymm7_9 mulL_9 ymm1_9 ymm7_9;
smull mulHymm7_a mulL_a ymm1_a ymm7_a;
smull mulHymm7_b mulL_b ymm1_b ymm7_b;
smull mulHymm7_c mulL_c ymm1_c ymm7_c;
smull mulHymm7_d mulL_d ymm1_d ymm7_d;
smull mulHymm7_e mulL_e ymm1_e ymm7_e;
smull mulHymm7_f mulL_f ymm1_f ymm7_f;
cast ymm5_0@sint16 mulL_0;
cast ymm5_1@sint16 mulL_1;
cast ymm5_2@sint16 mulL_2;
cast ymm5_3@sint16 mulL_3;
cast ymm5_4@sint16 mulL_4;
cast ymm5_5@sint16 mulL_5;
cast ymm5_6@sint16 mulL_6;
cast ymm5_7@sint16 mulL_7;
cast ymm5_8@sint16 mulL_8;
cast ymm5_9@sint16 mulL_9;
cast ymm5_a@sint16 mulL_a;
cast ymm5_b@sint16 mulL_b;
cast ymm5_c@sint16 mulL_c;
cast ymm5_d@sint16 mulL_d;
cast ymm5_e@sint16 mulL_e;
cast ymm5_f@sint16 mulL_f;
(* vpmulhw %ymm2,%ymm7,%ymm7                       #! PC = 0x555555557289 *)
smull mulH_0 mulLymm7_0 ymm7_0 ymm2_0;
smull mulH_1 mulLymm7_1 ymm7_1 ymm2_1;
smull mulH_2 mulLymm7_2 ymm7_2 ymm2_2;
smull mulH_3 mulLymm7_3 ymm7_3 ymm2_3;
smull mulH_4 mulLymm7_4 ymm7_4 ymm2_4;
smull mulH_5 mulLymm7_5 ymm7_5 ymm2_5;
smull mulH_6 mulLymm7_6 ymm7_6 ymm2_6;
smull mulH_7 mulLymm7_7 ymm7_7 ymm2_7;
smull mulH_8 mulLymm7_8 ymm7_8 ymm2_8;
smull mulH_9 mulLymm7_9 ymm7_9 ymm2_9;
smull mulH_a mulLymm7_a ymm7_a ymm2_a;
smull mulH_b mulLymm7_b ymm7_b ymm2_b;
smull mulH_c mulLymm7_c ymm7_c ymm2_c;
smull mulH_d mulLymm7_d ymm7_d ymm2_d;
smull mulH_e mulLymm7_e ymm7_e ymm2_e;
smull mulH_f mulLymm7_f ymm7_f ymm2_f;
mov ymm7_0 mulH_0;
mov ymm7_1 mulH_1;
mov ymm7_2 mulH_2;
mov ymm7_3 mulH_3;
mov ymm7_4 mulH_4;
mov ymm7_5 mulH_5;
mov ymm7_6 mulH_6;
mov ymm7_7 mulH_7;
mov ymm7_8 mulH_8;
mov ymm7_9 mulH_9;
mov ymm7_a mulH_a;
mov ymm7_b mulH_b;
mov ymm7_c mulH_c;
mov ymm7_d mulH_d;
mov ymm7_e mulH_e;
mov ymm7_f mulH_f;
(* vpmulhw %ymm0,%ymm5,%ymm5                       #! PC = 0x55555555728d *)
smull mulH_0 red_0 ymm5_0 ymm0_0;
assert true && red_0 = mulLymm7_0;
assume red_0 = mulLymm7_0 && true;
smull mulH_1 red_1 ymm5_1 ymm0_1;
assert true && red_1 = mulLymm7_1;
assume red_1 = mulLymm7_1 && true;
smull mulH_2 red_2 ymm5_2 ymm0_2;
assert true && red_2 = mulLymm7_2;
assume red_2 = mulLymm7_2 && true;
smull mulH_3 red_3 ymm5_3 ymm0_3;
assert true && red_3 = mulLymm7_3;
assume red_3 = mulLymm7_3 && true;
smull mulH_4 red_4 ymm5_4 ymm0_4;
assert true && red_4 = mulLymm7_4;
assume red_4 = mulLymm7_4 && true;
smull mulH_5 red_5 ymm5_5 ymm0_5;
assert true && red_5 = mulLymm7_5;
assume red_5 = mulLymm7_5 && true;
smull mulH_6 red_6 ymm5_6 ymm0_6;
assert true && red_6 = mulLymm7_6;
assume red_6 = mulLymm7_6 && true;
smull mulH_7 red_7 ymm5_7 ymm0_7;
assert true && red_7 = mulLymm7_7;
assume red_7 = mulLymm7_7 && true;
smull mulH_8 red_8 ymm5_8 ymm0_8;
assert true && red_8 = mulLymm7_8;
assume red_8 = mulLymm7_8 && true;
smull mulH_9 red_9 ymm5_9 ymm0_9;
assert true && red_9 = mulLymm7_9;
assume red_9 = mulLymm7_9 && true;
smull mulH_a red_a ymm5_a ymm0_a;
assert true && red_a = mulLymm7_a;
assume red_a = mulLymm7_a && true;
smull mulH_b red_b ymm5_b ymm0_b;
assert true && red_b = mulLymm7_b;
assume red_b = mulLymm7_b && true;
smull mulH_c red_c ymm5_c ymm0_c;
assert true && red_c = mulLymm7_c;
assume red_c = mulLymm7_c && true;
smull mulH_d red_d ymm5_d ymm0_d;
assert true && red_d = mulLymm7_d;
assume red_d = mulLymm7_d && true;
smull mulH_e red_e ymm5_e ymm0_e;
assert true && red_e = mulLymm7_e;
assume red_e = mulLymm7_e && true;
smull mulH_f red_f ymm5_f ymm0_f;
assert true && red_f = mulLymm7_f;
assume red_f = mulLymm7_f && true;
mov ymm5_0 mulH_0;
mov ymm5_1 mulH_1;
mov ymm5_2 mulH_2;
mov ymm5_3 mulH_3;
mov ymm5_4 mulH_4;
mov ymm5_5 mulH_5;
mov ymm5_6 mulH_6;
mov ymm5_7 mulH_7;
mov ymm5_8 mulH_8;
mov ymm5_9 mulH_9;
mov ymm5_a mulH_a;
mov ymm5_b mulH_b;
mov ymm5_c mulH_c;
mov ymm5_d mulH_d;
mov ymm5_e mulH_e;
mov ymm5_f mulH_f;
(* vpsubw %ymm5,%ymm7,%ymm7                        #! PC = 0x555555557291 *)
sub ymm7_0 ymm7_0 ymm5_0;
sub ymm7_1 ymm7_1 ymm5_1;
sub ymm7_2 ymm7_2 ymm5_2;
sub ymm7_3 ymm7_3 ymm5_3;
sub ymm7_4 ymm7_4 ymm5_4;
sub ymm7_5 ymm7_5 ymm5_5;
sub ymm7_6 ymm7_6 ymm5_6;
sub ymm7_7 ymm7_7 ymm5_7;
sub ymm7_8 ymm7_8 ymm5_8;
sub ymm7_9 ymm7_9 ymm5_9;
sub ymm7_a ymm7_a ymm5_a;
sub ymm7_b ymm7_b ymm5_b;
sub ymm7_c ymm7_c ymm5_c;
sub ymm7_d ymm7_d ymm5_d;
sub ymm7_e ymm7_e ymm5_e;
sub ymm7_f ymm7_f ymm5_f;
(* vpbroadcastw 0x104(%rdx),%ymm1                  #! EA = L0x555555561224; Value = 0xad9a276d0198f85c; PC = 0x555555557295 *)
mov ymm1_0 L0x555555561224;
mov ymm1_1 L0x555555561224;
mov ymm1_2 L0x555555561224;
mov ymm1_3 L0x555555561224;
mov ymm1_4 L0x555555561224;
mov ymm1_5 L0x555555561224;
mov ymm1_6 L0x555555561224;
mov ymm1_7 L0x555555561224;
mov ymm1_8 L0x555555561224;
mov ymm1_9 L0x555555561224;
mov ymm1_a L0x555555561224;
mov ymm1_b L0x555555561224;
mov ymm1_c L0x555555561224;
mov ymm1_d L0x555555561224;
mov ymm1_e L0x555555561224;
mov ymm1_f L0x555555561224;
(* vpbroadcastw 0x304(%rdx),%ymm2                  #! EA = L0x555555561424; Value = 0xf19a096df198105c; PC = 0x55555555729e *)
mov ymm2_0 L0x555555561424;
mov ymm2_1 L0x555555561424;
mov ymm2_2 L0x555555561424;
mov ymm2_3 L0x555555561424;
mov ymm2_4 L0x555555561424;
mov ymm2_5 L0x555555561424;
mov ymm2_6 L0x555555561424;
mov ymm2_7 L0x555555561424;
mov ymm2_8 L0x555555561424;
mov ymm2_9 L0x555555561424;
mov ymm2_a L0x555555561424;
mov ymm2_b L0x555555561424;
mov ymm2_c L0x555555561424;
mov ymm2_d L0x555555561424;
mov ymm2_e L0x555555561424;
mov ymm2_f L0x555555561424;
(* vpmullw %ymm1,%ymm9,%ymm5                       #! PC = 0x5555555572a7 *)
smull mulHymm9_0 mulL_0 ymm1_0 ymm9_0;
smull mulHymm9_1 mulL_1 ymm1_1 ymm9_1;
smull mulHymm9_2 mulL_2 ymm1_2 ymm9_2;
smull mulHymm9_3 mulL_3 ymm1_3 ymm9_3;
smull mulHymm9_4 mulL_4 ymm1_4 ymm9_4;
smull mulHymm9_5 mulL_5 ymm1_5 ymm9_5;
smull mulHymm9_6 mulL_6 ymm1_6 ymm9_6;
smull mulHymm9_7 mulL_7 ymm1_7 ymm9_7;
smull mulHymm9_8 mulL_8 ymm1_8 ymm9_8;
smull mulHymm9_9 mulL_9 ymm1_9 ymm9_9;
smull mulHymm9_a mulL_a ymm1_a ymm9_a;
smull mulHymm9_b mulL_b ymm1_b ymm9_b;
smull mulHymm9_c mulL_c ymm1_c ymm9_c;
smull mulHymm9_d mulL_d ymm1_d ymm9_d;
smull mulHymm9_e mulL_e ymm1_e ymm9_e;
smull mulHymm9_f mulL_f ymm1_f ymm9_f;
cast ymm5_0@sint16 mulL_0;
cast ymm5_1@sint16 mulL_1;
cast ymm5_2@sint16 mulL_2;
cast ymm5_3@sint16 mulL_3;
cast ymm5_4@sint16 mulL_4;
cast ymm5_5@sint16 mulL_5;
cast ymm5_6@sint16 mulL_6;
cast ymm5_7@sint16 mulL_7;
cast ymm5_8@sint16 mulL_8;
cast ymm5_9@sint16 mulL_9;
cast ymm5_a@sint16 mulL_a;
cast ymm5_b@sint16 mulL_b;
cast ymm5_c@sint16 mulL_c;
cast ymm5_d@sint16 mulL_d;
cast ymm5_e@sint16 mulL_e;
cast ymm5_f@sint16 mulL_f;
(* vpmulhw %ymm2,%ymm9,%ymm9                       #! PC = 0x5555555572ab *)
smull mulH_0 mulLymm9_0 ymm9_0 ymm2_0;
smull mulH_1 mulLymm9_1 ymm9_1 ymm2_1;
smull mulH_2 mulLymm9_2 ymm9_2 ymm2_2;
smull mulH_3 mulLymm9_3 ymm9_3 ymm2_3;
smull mulH_4 mulLymm9_4 ymm9_4 ymm2_4;
smull mulH_5 mulLymm9_5 ymm9_5 ymm2_5;
smull mulH_6 mulLymm9_6 ymm9_6 ymm2_6;
smull mulH_7 mulLymm9_7 ymm9_7 ymm2_7;
smull mulH_8 mulLymm9_8 ymm9_8 ymm2_8;
smull mulH_9 mulLymm9_9 ymm9_9 ymm2_9;
smull mulH_a mulLymm9_a ymm9_a ymm2_a;
smull mulH_b mulLymm9_b ymm9_b ymm2_b;
smull mulH_c mulLymm9_c ymm9_c ymm2_c;
smull mulH_d mulLymm9_d ymm9_d ymm2_d;
smull mulH_e mulLymm9_e ymm9_e ymm2_e;
smull mulH_f mulLymm9_f ymm9_f ymm2_f;
mov ymm9_0 mulH_0;
mov ymm9_1 mulH_1;
mov ymm9_2 mulH_2;
mov ymm9_3 mulH_3;
mov ymm9_4 mulH_4;
mov ymm9_5 mulH_5;
mov ymm9_6 mulH_6;
mov ymm9_7 mulH_7;
mov ymm9_8 mulH_8;
mov ymm9_9 mulH_9;
mov ymm9_a mulH_a;
mov ymm9_b mulH_b;
mov ymm9_c mulH_c;
mov ymm9_d mulH_d;
mov ymm9_e mulH_e;
mov ymm9_f mulH_f;
(* vpmulhw %ymm0,%ymm5,%ymm5                       #! PC = 0x5555555572af *)
smull mulH_0 red_0 ymm5_0 ymm0_0;
assert true && red_0 = mulLymm9_0;
assume red_0 = mulLymm9_0 && true;
smull mulH_1 red_1 ymm5_1 ymm0_1;
assert true && red_1 = mulLymm9_1;
assume red_1 = mulLymm9_1 && true;
smull mulH_2 red_2 ymm5_2 ymm0_2;
assert true && red_2 = mulLymm9_2;
assume red_2 = mulLymm9_2 && true;
smull mulH_3 red_3 ymm5_3 ymm0_3;
assert true && red_3 = mulLymm9_3;
assume red_3 = mulLymm9_3 && true;
smull mulH_4 red_4 ymm5_4 ymm0_4;
assert true && red_4 = mulLymm9_4;
assume red_4 = mulLymm9_4 && true;
smull mulH_5 red_5 ymm5_5 ymm0_5;
assert true && red_5 = mulLymm9_5;
assume red_5 = mulLymm9_5 && true;
smull mulH_6 red_6 ymm5_6 ymm0_6;
assert true && red_6 = mulLymm9_6;
assume red_6 = mulLymm9_6 && true;
smull mulH_7 red_7 ymm5_7 ymm0_7;
assert true && red_7 = mulLymm9_7;
assume red_7 = mulLymm9_7 && true;
smull mulH_8 red_8 ymm5_8 ymm0_8;
assert true && red_8 = mulLymm9_8;
assume red_8 = mulLymm9_8 && true;
smull mulH_9 red_9 ymm5_9 ymm0_9;
assert true && red_9 = mulLymm9_9;
assume red_9 = mulLymm9_9 && true;
smull mulH_a red_a ymm5_a ymm0_a;
assert true && red_a = mulLymm9_a;
assume red_a = mulLymm9_a && true;
smull mulH_b red_b ymm5_b ymm0_b;
assert true && red_b = mulLymm9_b;
assume red_b = mulLymm9_b && true;
smull mulH_c red_c ymm5_c ymm0_c;
assert true && red_c = mulLymm9_c;
assume red_c = mulLymm9_c && true;
smull mulH_d red_d ymm5_d ymm0_d;
assert true && red_d = mulLymm9_d;
assume red_d = mulLymm9_d && true;
smull mulH_e red_e ymm5_e ymm0_e;
assert true && red_e = mulLymm9_e;
assume red_e = mulLymm9_e && true;
smull mulH_f red_f ymm5_f ymm0_f;
assert true && red_f = mulLymm9_f;
assume red_f = mulLymm9_f && true;
mov ymm5_0 mulH_0;
mov ymm5_1 mulH_1;
mov ymm5_2 mulH_2;
mov ymm5_3 mulH_3;
mov ymm5_4 mulH_4;
mov ymm5_5 mulH_5;
mov ymm5_6 mulH_6;
mov ymm5_7 mulH_7;
mov ymm5_8 mulH_8;
mov ymm5_9 mulH_9;
mov ymm5_a mulH_a;
mov ymm5_b mulH_b;
mov ymm5_c mulH_c;
mov ymm5_d mulH_d;
mov ymm5_e mulH_e;
mov ymm5_f mulH_f;
(* vpsubw %ymm5,%ymm9,%ymm9                        #! PC = 0x5555555572b3 *)
sub ymm9_0 ymm9_0 ymm5_0;
sub ymm9_1 ymm9_1 ymm5_1;
sub ymm9_2 ymm9_2 ymm5_2;
sub ymm9_3 ymm9_3 ymm5_3;
sub ymm9_4 ymm9_4 ymm5_4;
sub ymm9_5 ymm9_5 ymm5_5;
sub ymm9_6 ymm9_6 ymm5_6;
sub ymm9_7 ymm9_7 ymm5_7;
sub ymm9_8 ymm9_8 ymm5_8;
sub ymm9_9 ymm9_9 ymm5_9;
sub ymm9_a ymm9_a ymm5_a;
sub ymm9_b ymm9_b ymm5_b;
sub ymm9_c ymm9_c ymm5_c;
sub ymm9_d ymm9_d ymm5_d;
sub ymm9_e ymm9_e ymm5_e;
sub ymm9_f ymm9_f ymm5_f;
(* vpbroadcastw 0x106(%rdx),%ymm1                  #! EA = L0x555555561226; Value = 0x6f65ad9a276d0198; PC = 0x5555555572b7 *)
mov ymm1_0 L0x555555561226;
mov ymm1_1 L0x555555561226;
mov ymm1_2 L0x555555561226;
mov ymm1_3 L0x555555561226;
mov ymm1_4 L0x555555561226;
mov ymm1_5 L0x555555561226;
mov ymm1_6 L0x555555561226;
mov ymm1_7 L0x555555561226;
mov ymm1_8 L0x555555561226;
mov ymm1_9 L0x555555561226;
mov ymm1_a L0x555555561226;
mov ymm1_b L0x555555561226;
mov ymm1_c L0x555555561226;
mov ymm1_d L0x555555561226;
mov ymm1_e L0x555555561226;
mov ymm1_f L0x555555561226;
(* vpbroadcastw 0x306(%rdx),%ymm2                  #! EA = L0x555555561426; Value = 0x0165f19a096df198; PC = 0x5555555572c0 *)
mov ymm2_0 L0x555555561426;
mov ymm2_1 L0x555555561426;
mov ymm2_2 L0x555555561426;
mov ymm2_3 L0x555555561426;
mov ymm2_4 L0x555555561426;
mov ymm2_5 L0x555555561426;
mov ymm2_6 L0x555555561426;
mov ymm2_7 L0x555555561426;
mov ymm2_8 L0x555555561426;
mov ymm2_9 L0x555555561426;
mov ymm2_a L0x555555561426;
mov ymm2_b L0x555555561426;
mov ymm2_c L0x555555561426;
mov ymm2_d L0x555555561426;
mov ymm2_e L0x555555561426;
mov ymm2_f L0x555555561426;
(* vpmullw %ymm1,%ymm11,%ymm5                      #! PC = 0x5555555572c9 *)
smull mulHymm11_0 mulL_0 ymm1_0 ymm11_0;
smull mulHymm11_1 mulL_1 ymm1_1 ymm11_1;
smull mulHymm11_2 mulL_2 ymm1_2 ymm11_2;
smull mulHymm11_3 mulL_3 ymm1_3 ymm11_3;
smull mulHymm11_4 mulL_4 ymm1_4 ymm11_4;
smull mulHymm11_5 mulL_5 ymm1_5 ymm11_5;
smull mulHymm11_6 mulL_6 ymm1_6 ymm11_6;
smull mulHymm11_7 mulL_7 ymm1_7 ymm11_7;
smull mulHymm11_8 mulL_8 ymm1_8 ymm11_8;
smull mulHymm11_9 mulL_9 ymm1_9 ymm11_9;
smull mulHymm11_a mulL_a ymm1_a ymm11_a;
smull mulHymm11_b mulL_b ymm1_b ymm11_b;
smull mulHymm11_c mulL_c ymm1_c ymm11_c;
smull mulHymm11_d mulL_d ymm1_d ymm11_d;
smull mulHymm11_e mulL_e ymm1_e ymm11_e;
smull mulHymm11_f mulL_f ymm1_f ymm11_f;
cast ymm5_0@sint16 mulL_0;
cast ymm5_1@sint16 mulL_1;
cast ymm5_2@sint16 mulL_2;
cast ymm5_3@sint16 mulL_3;
cast ymm5_4@sint16 mulL_4;
cast ymm5_5@sint16 mulL_5;
cast ymm5_6@sint16 mulL_6;
cast ymm5_7@sint16 mulL_7;
cast ymm5_8@sint16 mulL_8;
cast ymm5_9@sint16 mulL_9;
cast ymm5_a@sint16 mulL_a;
cast ymm5_b@sint16 mulL_b;
cast ymm5_c@sint16 mulL_c;
cast ymm5_d@sint16 mulL_d;
cast ymm5_e@sint16 mulL_e;
cast ymm5_f@sint16 mulL_f;
(* vpmulhw %ymm2,%ymm11,%ymm11                     #! PC = 0x5555555572cd *)
smull mulH_0 mulLymm11_0 ymm11_0 ymm2_0;
smull mulH_1 mulLymm11_1 ymm11_1 ymm2_1;
smull mulH_2 mulLymm11_2 ymm11_2 ymm2_2;
smull mulH_3 mulLymm11_3 ymm11_3 ymm2_3;
smull mulH_4 mulLymm11_4 ymm11_4 ymm2_4;
smull mulH_5 mulLymm11_5 ymm11_5 ymm2_5;
smull mulH_6 mulLymm11_6 ymm11_6 ymm2_6;
smull mulH_7 mulLymm11_7 ymm11_7 ymm2_7;
smull mulH_8 mulLymm11_8 ymm11_8 ymm2_8;
smull mulH_9 mulLymm11_9 ymm11_9 ymm2_9;
smull mulH_a mulLymm11_a ymm11_a ymm2_a;
smull mulH_b mulLymm11_b ymm11_b ymm2_b;
smull mulH_c mulLymm11_c ymm11_c ymm2_c;
smull mulH_d mulLymm11_d ymm11_d ymm2_d;
smull mulH_e mulLymm11_e ymm11_e ymm2_e;
smull mulH_f mulLymm11_f ymm11_f ymm2_f;
mov ymm11_0 mulH_0;
mov ymm11_1 mulH_1;
mov ymm11_2 mulH_2;
mov ymm11_3 mulH_3;
mov ymm11_4 mulH_4;
mov ymm11_5 mulH_5;
mov ymm11_6 mulH_6;
mov ymm11_7 mulH_7;
mov ymm11_8 mulH_8;
mov ymm11_9 mulH_9;
mov ymm11_a mulH_a;
mov ymm11_b mulH_b;
mov ymm11_c mulH_c;
mov ymm11_d mulH_d;
mov ymm11_e mulH_e;
mov ymm11_f mulH_f;
(* vpmulhw %ymm0,%ymm5,%ymm5                       #! PC = 0x5555555572d1 *)
smull mulH_0 red_0 ymm5_0 ymm0_0;
assert true && red_0 = mulLymm11_0;
assume red_0 = mulLymm11_0 && true;
smull mulH_1 red_1 ymm5_1 ymm0_1;
assert true && red_1 = mulLymm11_1;
assume red_1 = mulLymm11_1 && true;
smull mulH_2 red_2 ymm5_2 ymm0_2;
assert true && red_2 = mulLymm11_2;
assume red_2 = mulLymm11_2 && true;
smull mulH_3 red_3 ymm5_3 ymm0_3;
assert true && red_3 = mulLymm11_3;
assume red_3 = mulLymm11_3 && true;
smull mulH_4 red_4 ymm5_4 ymm0_4;
assert true && red_4 = mulLymm11_4;
assume red_4 = mulLymm11_4 && true;
smull mulH_5 red_5 ymm5_5 ymm0_5;
assert true && red_5 = mulLymm11_5;
assume red_5 = mulLymm11_5 && true;
smull mulH_6 red_6 ymm5_6 ymm0_6;
assert true && red_6 = mulLymm11_6;
assume red_6 = mulLymm11_6 && true;
smull mulH_7 red_7 ymm5_7 ymm0_7;
assert true && red_7 = mulLymm11_7;
assume red_7 = mulLymm11_7 && true;
smull mulH_8 red_8 ymm5_8 ymm0_8;
assert true && red_8 = mulLymm11_8;
assume red_8 = mulLymm11_8 && true;
smull mulH_9 red_9 ymm5_9 ymm0_9;
assert true && red_9 = mulLymm11_9;
assume red_9 = mulLymm11_9 && true;
smull mulH_a red_a ymm5_a ymm0_a;
assert true && red_a = mulLymm11_a;
assume red_a = mulLymm11_a && true;
smull mulH_b red_b ymm5_b ymm0_b;
assert true && red_b = mulLymm11_b;
assume red_b = mulLymm11_b && true;
smull mulH_c red_c ymm5_c ymm0_c;
assert true && red_c = mulLymm11_c;
assume red_c = mulLymm11_c && true;
smull mulH_d red_d ymm5_d ymm0_d;
assert true && red_d = mulLymm11_d;
assume red_d = mulLymm11_d && true;
smull mulH_e red_e ymm5_e ymm0_e;
assert true && red_e = mulLymm11_e;
assume red_e = mulLymm11_e && true;
smull mulH_f red_f ymm5_f ymm0_f;
assert true && red_f = mulLymm11_f;
assume red_f = mulLymm11_f && true;
mov ymm5_0 mulH_0;
mov ymm5_1 mulH_1;
mov ymm5_2 mulH_2;
mov ymm5_3 mulH_3;
mov ymm5_4 mulH_4;
mov ymm5_5 mulH_5;
mov ymm5_6 mulH_6;
mov ymm5_7 mulH_7;
mov ymm5_8 mulH_8;
mov ymm5_9 mulH_9;
mov ymm5_a mulH_a;
mov ymm5_b mulH_b;
mov ymm5_c mulH_c;
mov ymm5_d mulH_d;
mov ymm5_e mulH_e;
mov ymm5_f mulH_f;
(* vpsubw %ymm5,%ymm11,%ymm11                      #! PC = 0x5555555572d5 *)
sub ymm11_0 ymm11_0 ymm5_0;
sub ymm11_1 ymm11_1 ymm5_1;
sub ymm11_2 ymm11_2 ymm5_2;
sub ymm11_3 ymm11_3 ymm5_3;
sub ymm11_4 ymm11_4 ymm5_4;
sub ymm11_5 ymm11_5 ymm5_5;
sub ymm11_6 ymm11_6 ymm5_6;
sub ymm11_7 ymm11_7 ymm5_7;
sub ymm11_8 ymm11_8 ymm5_8;
sub ymm11_9 ymm11_9 ymm5_9;
sub ymm11_a ymm11_a ymm5_a;
sub ymm11_b ymm11_b ymm5_b;
sub ymm11_c ymm11_c ymm5_c;
sub ymm11_d ymm11_d ymm5_d;
sub ymm11_e ymm11_e ymm5_e;
sub ymm11_f ymm11_f ymm5_f;
(* vpaddw %ymm4,%ymm3,%ymm5                        #! PC = 0x5555555572d9 *)
add ymm5_0 ymm3_0 ymm4_0;
add ymm5_1 ymm3_1 ymm4_1;
add ymm5_2 ymm3_2 ymm4_2;
add ymm5_3 ymm3_3 ymm4_3;
add ymm5_4 ymm3_4 ymm4_4;
add ymm5_5 ymm3_5 ymm4_5;
add ymm5_6 ymm3_6 ymm4_6;
add ymm5_7 ymm3_7 ymm4_7;
add ymm5_8 ymm3_8 ymm4_8;
add ymm5_9 ymm3_9 ymm4_9;
add ymm5_a ymm3_a ymm4_a;
add ymm5_b ymm3_b ymm4_b;
add ymm5_c ymm3_c ymm4_c;
add ymm5_d ymm3_d ymm4_d;
add ymm5_e ymm3_e ymm4_e;
add ymm5_f ymm3_f ymm4_f;
(* vpsubw %ymm4,%ymm3,%ymm4                        #! PC = 0x5555555572dd *)
sub ymm4_0 ymm3_0 ymm4_0;
sub ymm4_1 ymm3_1 ymm4_1;
sub ymm4_2 ymm3_2 ymm4_2;
sub ymm4_3 ymm3_3 ymm4_3;
sub ymm4_4 ymm3_4 ymm4_4;
sub ymm4_5 ymm3_5 ymm4_5;
sub ymm4_6 ymm3_6 ymm4_6;
sub ymm4_7 ymm3_7 ymm4_7;
sub ymm4_8 ymm3_8 ymm4_8;
sub ymm4_9 ymm3_9 ymm4_9;
sub ymm4_a ymm3_a ymm4_a;
sub ymm4_b ymm3_b ymm4_b;
sub ymm4_c ymm3_c ymm4_c;
sub ymm4_d ymm3_d ymm4_d;
sub ymm4_e ymm3_e ymm4_e;
sub ymm4_f ymm3_f ymm4_f;
(* vpaddw %ymm7,%ymm6,%ymm3                        #! PC = 0x5555555572e1 *)
add ymm3_0 ymm6_0 ymm7_0;
add ymm3_1 ymm6_1 ymm7_1;
add ymm3_2 ymm6_2 ymm7_2;
add ymm3_3 ymm6_3 ymm7_3;
add ymm3_4 ymm6_4 ymm7_4;
add ymm3_5 ymm6_5 ymm7_5;
add ymm3_6 ymm6_6 ymm7_6;
add ymm3_7 ymm6_7 ymm7_7;
add ymm3_8 ymm6_8 ymm7_8;
add ymm3_9 ymm6_9 ymm7_9;
add ymm3_a ymm6_a ymm7_a;
add ymm3_b ymm6_b ymm7_b;
add ymm3_c ymm6_c ymm7_c;
add ymm3_d ymm6_d ymm7_d;
add ymm3_e ymm6_e ymm7_e;
add ymm3_f ymm6_f ymm7_f;
(* vpsubw %ymm7,%ymm6,%ymm7                        #! PC = 0x5555555572e5 *)
sub ymm7_0 ymm6_0 ymm7_0;
sub ymm7_1 ymm6_1 ymm7_1;
sub ymm7_2 ymm6_2 ymm7_2;
sub ymm7_3 ymm6_3 ymm7_3;
sub ymm7_4 ymm6_4 ymm7_4;
sub ymm7_5 ymm6_5 ymm7_5;
sub ymm7_6 ymm6_6 ymm7_6;
sub ymm7_7 ymm6_7 ymm7_7;
sub ymm7_8 ymm6_8 ymm7_8;
sub ymm7_9 ymm6_9 ymm7_9;
sub ymm7_a ymm6_a ymm7_a;
sub ymm7_b ymm6_b ymm7_b;
sub ymm7_c ymm6_c ymm7_c;
sub ymm7_d ymm6_d ymm7_d;
sub ymm7_e ymm6_e ymm7_e;
sub ymm7_f ymm6_f ymm7_f;
(* vpaddw %ymm9,%ymm8,%ymm6                        #! PC = 0x5555555572e9 *)
add ymm6_0 ymm8_0 ymm9_0;
add ymm6_1 ymm8_1 ymm9_1;
add ymm6_2 ymm8_2 ymm9_2;
add ymm6_3 ymm8_3 ymm9_3;
add ymm6_4 ymm8_4 ymm9_4;
add ymm6_5 ymm8_5 ymm9_5;
add ymm6_6 ymm8_6 ymm9_6;
add ymm6_7 ymm8_7 ymm9_7;
add ymm6_8 ymm8_8 ymm9_8;
add ymm6_9 ymm8_9 ymm9_9;
add ymm6_a ymm8_a ymm9_a;
add ymm6_b ymm8_b ymm9_b;
add ymm6_c ymm8_c ymm9_c;
add ymm6_d ymm8_d ymm9_d;
add ymm6_e ymm8_e ymm9_e;
add ymm6_f ymm8_f ymm9_f;
(* vpsubw %ymm9,%ymm8,%ymm9                        #! PC = 0x5555555572ee *)
sub ymm9_0 ymm8_0 ymm9_0;
sub ymm9_1 ymm8_1 ymm9_1;
sub ymm9_2 ymm8_2 ymm9_2;
sub ymm9_3 ymm8_3 ymm9_3;
sub ymm9_4 ymm8_4 ymm9_4;
sub ymm9_5 ymm8_5 ymm9_5;
sub ymm9_6 ymm8_6 ymm9_6;
sub ymm9_7 ymm8_7 ymm9_7;
sub ymm9_8 ymm8_8 ymm9_8;
sub ymm9_9 ymm8_9 ymm9_9;
sub ymm9_a ymm8_a ymm9_a;
sub ymm9_b ymm8_b ymm9_b;
sub ymm9_c ymm8_c ymm9_c;
sub ymm9_d ymm8_d ymm9_d;
sub ymm9_e ymm8_e ymm9_e;
sub ymm9_f ymm8_f ymm9_f;
(* vpaddw %ymm11,%ymm10,%ymm8                      #! PC = 0x5555555572f3 *)
add ymm8_0 ymm10_0 ymm11_0;
add ymm8_1 ymm10_1 ymm11_1;
add ymm8_2 ymm10_2 ymm11_2;
add ymm8_3 ymm10_3 ymm11_3;
add ymm8_4 ymm10_4 ymm11_4;
add ymm8_5 ymm10_5 ymm11_5;
add ymm8_6 ymm10_6 ymm11_6;
add ymm8_7 ymm10_7 ymm11_7;
add ymm8_8 ymm10_8 ymm11_8;
add ymm8_9 ymm10_9 ymm11_9;
add ymm8_a ymm10_a ymm11_a;
add ymm8_b ymm10_b ymm11_b;
add ymm8_c ymm10_c ymm11_c;
add ymm8_d ymm10_d ymm11_d;
add ymm8_e ymm10_e ymm11_e;
add ymm8_f ymm10_f ymm11_f;
(* vpsubw %ymm11,%ymm10,%ymm11                     #! PC = 0x5555555572f8 *)
sub ymm11_0 ymm10_0 ymm11_0;
sub ymm11_1 ymm10_1 ymm11_1;
sub ymm11_2 ymm10_2 ymm11_2;
sub ymm11_3 ymm10_3 ymm11_3;
sub ymm11_4 ymm10_4 ymm11_4;
sub ymm11_5 ymm10_5 ymm11_5;
sub ymm11_6 ymm10_6 ymm11_6;
sub ymm11_7 ymm10_7 ymm11_7;
sub ymm11_8 ymm10_8 ymm11_8;
sub ymm11_9 ymm10_9 ymm11_9;
sub ymm11_a ymm10_a ymm11_a;
sub ymm11_b ymm10_b ymm11_b;
sub ymm11_c ymm10_c ymm11_c;
sub ymm11_d ymm10_d ymm11_d;
sub ymm11_e ymm10_e ymm11_e;
sub ymm11_f ymm10_f ymm11_f;
(* vmovdqa %ymm5,0xa0(%rdi)                        #! EA = L0x7fffffffd380; PC = 0x5555555572fd *)
mov L0x7fffffffd380 ymm5_0;
mov L0x7fffffffd382 ymm5_1;
mov L0x7fffffffd384 ymm5_2;
mov L0x7fffffffd386 ymm5_3;
mov L0x7fffffffd388 ymm5_4;
mov L0x7fffffffd38a ymm5_5;
mov L0x7fffffffd38c ymm5_6;
mov L0x7fffffffd38e ymm5_7;
mov L0x7fffffffd390 ymm5_8;
mov L0x7fffffffd392 ymm5_9;
mov L0x7fffffffd394 ymm5_a;
mov L0x7fffffffd396 ymm5_b;
mov L0x7fffffffd398 ymm5_c;
mov L0x7fffffffd39a ymm5_d;
mov L0x7fffffffd39c ymm5_e;
mov L0x7fffffffd39e ymm5_f;
(* vmovdqa %ymm4,0x1a0(%rdi)                       #! EA = L0x7fffffffd480; PC = 0x555555557305 *)
mov L0x7fffffffd480 ymm4_0;
mov L0x7fffffffd482 ymm4_1;
mov L0x7fffffffd484 ymm4_2;
mov L0x7fffffffd486 ymm4_3;
mov L0x7fffffffd488 ymm4_4;
mov L0x7fffffffd48a ymm4_5;
mov L0x7fffffffd48c ymm4_6;
mov L0x7fffffffd48e ymm4_7;
mov L0x7fffffffd490 ymm4_8;
mov L0x7fffffffd492 ymm4_9;
mov L0x7fffffffd494 ymm4_a;
mov L0x7fffffffd496 ymm4_b;
mov L0x7fffffffd498 ymm4_c;
mov L0x7fffffffd49a ymm4_d;
mov L0x7fffffffd49c ymm4_e;
mov L0x7fffffffd49e ymm4_f;
(* vmovdqa %ymm3,0x2a0(%rdi)                       #! EA = L0x7fffffffd580; PC = 0x55555555730d *)
mov L0x7fffffffd580 ymm3_0;
mov L0x7fffffffd582 ymm3_1;
mov L0x7fffffffd584 ymm3_2;
mov L0x7fffffffd586 ymm3_3;
mov L0x7fffffffd588 ymm3_4;
mov L0x7fffffffd58a ymm3_5;
mov L0x7fffffffd58c ymm3_6;
mov L0x7fffffffd58e ymm3_7;
mov L0x7fffffffd590 ymm3_8;
mov L0x7fffffffd592 ymm3_9;
mov L0x7fffffffd594 ymm3_a;
mov L0x7fffffffd596 ymm3_b;
mov L0x7fffffffd598 ymm3_c;
mov L0x7fffffffd59a ymm3_d;
mov L0x7fffffffd59c ymm3_e;
mov L0x7fffffffd59e ymm3_f;
(* vmovdqa %ymm7,0x3a0(%rdi)                       #! EA = L0x7fffffffd680; PC = 0x555555557315 *)
mov L0x7fffffffd680 ymm7_0;
mov L0x7fffffffd682 ymm7_1;
mov L0x7fffffffd684 ymm7_2;
mov L0x7fffffffd686 ymm7_3;
mov L0x7fffffffd688 ymm7_4;
mov L0x7fffffffd68a ymm7_5;
mov L0x7fffffffd68c ymm7_6;
mov L0x7fffffffd68e ymm7_7;
mov L0x7fffffffd690 ymm7_8;
mov L0x7fffffffd692 ymm7_9;
mov L0x7fffffffd694 ymm7_a;
mov L0x7fffffffd696 ymm7_b;
mov L0x7fffffffd698 ymm7_c;
mov L0x7fffffffd69a ymm7_d;
mov L0x7fffffffd69c ymm7_e;
mov L0x7fffffffd69e ymm7_f;
(* vmovdqa %ymm6,0x4a0(%rdi)                       #! EA = L0x7fffffffd780; PC = 0x55555555731d *)
mov L0x7fffffffd780 ymm6_0;
mov L0x7fffffffd782 ymm6_1;
mov L0x7fffffffd784 ymm6_2;
mov L0x7fffffffd786 ymm6_3;
mov L0x7fffffffd788 ymm6_4;
mov L0x7fffffffd78a ymm6_5;
mov L0x7fffffffd78c ymm6_6;
mov L0x7fffffffd78e ymm6_7;
mov L0x7fffffffd790 ymm6_8;
mov L0x7fffffffd792 ymm6_9;
mov L0x7fffffffd794 ymm6_a;
mov L0x7fffffffd796 ymm6_b;
mov L0x7fffffffd798 ymm6_c;
mov L0x7fffffffd79a ymm6_d;
mov L0x7fffffffd79c ymm6_e;
mov L0x7fffffffd79e ymm6_f;
(* vmovdqa %ymm9,0x5a0(%rdi)                       #! EA = L0x7fffffffd880; PC = 0x555555557325 *)
mov L0x7fffffffd880 ymm9_0;
mov L0x7fffffffd882 ymm9_1;
mov L0x7fffffffd884 ymm9_2;
mov L0x7fffffffd886 ymm9_3;
mov L0x7fffffffd888 ymm9_4;
mov L0x7fffffffd88a ymm9_5;
mov L0x7fffffffd88c ymm9_6;
mov L0x7fffffffd88e ymm9_7;
mov L0x7fffffffd890 ymm9_8;
mov L0x7fffffffd892 ymm9_9;
mov L0x7fffffffd894 ymm9_a;
mov L0x7fffffffd896 ymm9_b;
mov L0x7fffffffd898 ymm9_c;
mov L0x7fffffffd89a ymm9_d;
mov L0x7fffffffd89c ymm9_e;
mov L0x7fffffffd89e ymm9_f;
(* vmovdqa %ymm8,0x6a0(%rdi)                       #! EA = L0x7fffffffd980; PC = 0x55555555732d *)
mov L0x7fffffffd980 ymm8_0;
mov L0x7fffffffd982 ymm8_1;
mov L0x7fffffffd984 ymm8_2;
mov L0x7fffffffd986 ymm8_3;
mov L0x7fffffffd988 ymm8_4;
mov L0x7fffffffd98a ymm8_5;
mov L0x7fffffffd98c ymm8_6;
mov L0x7fffffffd98e ymm8_7;
mov L0x7fffffffd990 ymm8_8;
mov L0x7fffffffd992 ymm8_9;
mov L0x7fffffffd994 ymm8_a;
mov L0x7fffffffd996 ymm8_b;
mov L0x7fffffffd998 ymm8_c;
mov L0x7fffffffd99a ymm8_d;
mov L0x7fffffffd99c ymm8_e;
mov L0x7fffffffd99e ymm8_f;
(* vmovdqa %ymm11,0x7a0(%rdi)                      #! EA = L0x7fffffffda80; PC = 0x555555557335 *)
mov L0x7fffffffda80 ymm11_0;
mov L0x7fffffffda82 ymm11_1;
mov L0x7fffffffda84 ymm11_2;
mov L0x7fffffffda86 ymm11_3;
mov L0x7fffffffda88 ymm11_4;
mov L0x7fffffffda8a ymm11_5;
mov L0x7fffffffda8c ymm11_6;
mov L0x7fffffffda8e ymm11_7;
mov L0x7fffffffda90 ymm11_8;
mov L0x7fffffffda92 ymm11_9;
mov L0x7fffffffda94 ymm11_a;
mov L0x7fffffffda96 ymm11_b;
mov L0x7fffffffda98 ymm11_c;
mov L0x7fffffffda9a ymm11_d;
mov L0x7fffffffda9c ymm11_e;
mov L0x7fffffffda9e ymm11_f;


(**************** LEVELS 0-2, 5 *****************)


(**************** CUT  91,  0 *****************)

ecut 
  and [
eqmod (c050*x** 80+c051*x** 81+c052*x** 82+c053*x** 83+
       c054*x** 84+c055*x** 85+c056*x** 86+c057*x** 87+
       c058*x** 88+c059*x** 89+c05a*x** 90+c05b*x** 91+
       c05c*x** 92+c05d*x** 93+c05e*x** 94+c05f*x** 95+
       c0d0*x**208+c0d1*x**209+c0d2*x**210+c0d3*x**211+
       c0d4*x**212+c0d5*x**213+c0d6*x**214+c0d7*x**215+
       c0d8*x**216+c0d9*x**217+c0da*x**218+c0db*x**219+
       c0dc*x**220+c0dd*x**221+c0de*x**222+c0df*x**223+
       c150*x**336+c151*x**337+c152*x**338+c153*x**339+
       c154*x**340+c155*x**341+c156*x**342+c157*x**343+
       c158*x**344+c159*x**345+c15a*x**346+c15b*x**347+
       c15c*x**348+c15d*x**349+c15e*x**350+c15f*x**351+
       c1d0*x**464+c1d1*x**465+c1d2*x**466+c1d3*x**467+
       c1d4*x**468+c1d5*x**469+c1d6*x**470+c1d7*x**471+
       c1d8*x**472+c1d9*x**473+c1da*x**474+c1db*x**475+
       c1dc*x**476+c1dd*x**477+c1de*x**478+c1df*x**479)
      (L0x7fffffffd380*x**80+L0x7fffffffd382*x**81+L0x7fffffffd384*x**82+
       L0x7fffffffd386*x**83+L0x7fffffffd388*x**84+L0x7fffffffd38a*x**85+
       L0x7fffffffd38c*x**86+L0x7fffffffd38e*x**87+L0x7fffffffd390*x**88+
       L0x7fffffffd392*x**89+L0x7fffffffd394*x**90+L0x7fffffffd396*x**91+
       L0x7fffffffd398*x**92+L0x7fffffffd39a*x**93+L0x7fffffffd39c*x**94+
       L0x7fffffffd39e*x**95)
      [10753, x**128 - 1],
eqmod (c050*x** 80+c051*x** 81+c052*x** 82+c053*x** 83+
       c054*x** 84+c055*x** 85+c056*x** 86+c057*x** 87+
       c058*x** 88+c059*x** 89+c05a*x** 90+c05b*x** 91+
       c05c*x** 92+c05d*x** 93+c05e*x** 94+c05f*x** 95+
       c0d0*x**208+c0d1*x**209+c0d2*x**210+c0d3*x**211+
       c0d4*x**212+c0d5*x**213+c0d6*x**214+c0d7*x**215+
       c0d8*x**216+c0d9*x**217+c0da*x**218+c0db*x**219+
       c0dc*x**220+c0dd*x**221+c0de*x**222+c0df*x**223+
       c150*x**336+c151*x**337+c152*x**338+c153*x**339+
       c154*x**340+c155*x**341+c156*x**342+c157*x**343+
       c158*x**344+c159*x**345+c15a*x**346+c15b*x**347+
       c15c*x**348+c15d*x**349+c15e*x**350+c15f*x**351+
       c1d0*x**464+c1d1*x**465+c1d2*x**466+c1d3*x**467+
       c1d4*x**468+c1d5*x**469+c1d6*x**470+c1d7*x**471+
       c1d8*x**472+c1d9*x**473+c1da*x**474+c1db*x**475+
       c1dc*x**476+c1dd*x**477+c1de*x**478+c1df*x**479)
      (L0x7fffffffd480*x**80+L0x7fffffffd482*x**81+L0x7fffffffd484*x**82+
       L0x7fffffffd486*x**83+L0x7fffffffd488*x**84+L0x7fffffffd48a*x**85+
       L0x7fffffffd48c*x**86+L0x7fffffffd48e*x**87+L0x7fffffffd490*x**88+
       L0x7fffffffd492*x**89+L0x7fffffffd494*x**90+L0x7fffffffd496*x**91+
       L0x7fffffffd498*x**92+L0x7fffffffd49a*x**93+L0x7fffffffd49c*x**94+
       L0x7fffffffd49e*x**95)
      [10753, x**128 - 10752],
eqmod (c050*x** 80+c051*x** 81+c052*x** 82+c053*x** 83+
       c054*x** 84+c055*x** 85+c056*x** 86+c057*x** 87+
       c058*x** 88+c059*x** 89+c05a*x** 90+c05b*x** 91+
       c05c*x** 92+c05d*x** 93+c05e*x** 94+c05f*x** 95+
       c0d0*x**208+c0d1*x**209+c0d2*x**210+c0d3*x**211+
       c0d4*x**212+c0d5*x**213+c0d6*x**214+c0d7*x**215+
       c0d8*x**216+c0d9*x**217+c0da*x**218+c0db*x**219+
       c0dc*x**220+c0dd*x**221+c0de*x**222+c0df*x**223+
       c150*x**336+c151*x**337+c152*x**338+c153*x**339+
       c154*x**340+c155*x**341+c156*x**342+c157*x**343+
       c158*x**344+c159*x**345+c15a*x**346+c15b*x**347+
       c15c*x**348+c15d*x**349+c15e*x**350+c15f*x**351+
       c1d0*x**464+c1d1*x**465+c1d2*x**466+c1d3*x**467+
       c1d4*x**468+c1d5*x**469+c1d6*x**470+c1d7*x**471+
       c1d8*x**472+c1d9*x**473+c1da*x**474+c1db*x**475+
       c1dc*x**476+c1dd*x**477+c1de*x**478+c1df*x**479)
      (L0x7fffffffd580*x**80+L0x7fffffffd582*x**81+L0x7fffffffd584*x**82+
       L0x7fffffffd586*x**83+L0x7fffffffd588*x**84+L0x7fffffffd58a*x**85+
       L0x7fffffffd58c*x**86+L0x7fffffffd58e*x**87+L0x7fffffffd590*x**88+
       L0x7fffffffd592*x**89+L0x7fffffffd594*x**90+L0x7fffffffd596*x**91+
       L0x7fffffffd598*x**92+L0x7fffffffd59a*x**93+L0x7fffffffd59c*x**94+
       L0x7fffffffd59e*x**95)
      [10753, x**128 - 6264],
eqmod (c050*x** 80+c051*x** 81+c052*x** 82+c053*x** 83+
       c054*x** 84+c055*x** 85+c056*x** 86+c057*x** 87+
       c058*x** 88+c059*x** 89+c05a*x** 90+c05b*x** 91+
       c05c*x** 92+c05d*x** 93+c05e*x** 94+c05f*x** 95+
       c0d0*x**208+c0d1*x**209+c0d2*x**210+c0d3*x**211+
       c0d4*x**212+c0d5*x**213+c0d6*x**214+c0d7*x**215+
       c0d8*x**216+c0d9*x**217+c0da*x**218+c0db*x**219+
       c0dc*x**220+c0dd*x**221+c0de*x**222+c0df*x**223+
       c150*x**336+c151*x**337+c152*x**338+c153*x**339+
       c154*x**340+c155*x**341+c156*x**342+c157*x**343+
       c158*x**344+c159*x**345+c15a*x**346+c15b*x**347+
       c15c*x**348+c15d*x**349+c15e*x**350+c15f*x**351+
       c1d0*x**464+c1d1*x**465+c1d2*x**466+c1d3*x**467+
       c1d4*x**468+c1d5*x**469+c1d6*x**470+c1d7*x**471+
       c1d8*x**472+c1d9*x**473+c1da*x**474+c1db*x**475+
       c1dc*x**476+c1dd*x**477+c1de*x**478+c1df*x**479)
      (L0x7fffffffd680*x**80+L0x7fffffffd682*x**81+L0x7fffffffd684*x**82+
       L0x7fffffffd686*x**83+L0x7fffffffd688*x**84+L0x7fffffffd68a*x**85+
       L0x7fffffffd68c*x**86+L0x7fffffffd68e*x**87+L0x7fffffffd690*x**88+
       L0x7fffffffd692*x**89+L0x7fffffffd694*x**90+L0x7fffffffd696*x**91+
       L0x7fffffffd698*x**92+L0x7fffffffd69a*x**93+L0x7fffffffd69c*x**94+
       L0x7fffffffd69e*x**95)
      [10753, x**128 - 4489],
eqmod (c050*x** 80+c051*x** 81+c052*x** 82+c053*x** 83+
       c054*x** 84+c055*x** 85+c056*x** 86+c057*x** 87+
       c058*x** 88+c059*x** 89+c05a*x** 90+c05b*x** 91+
       c05c*x** 92+c05d*x** 93+c05e*x** 94+c05f*x** 95+
       c0d0*x**208+c0d1*x**209+c0d2*x**210+c0d3*x**211+
       c0d4*x**212+c0d5*x**213+c0d6*x**214+c0d7*x**215+
       c0d8*x**216+c0d9*x**217+c0da*x**218+c0db*x**219+
       c0dc*x**220+c0dd*x**221+c0de*x**222+c0df*x**223+
       c150*x**336+c151*x**337+c152*x**338+c153*x**339+
       c154*x**340+c155*x**341+c156*x**342+c157*x**343+
       c158*x**344+c159*x**345+c15a*x**346+c15b*x**347+
       c15c*x**348+c15d*x**349+c15e*x**350+c15f*x**351+
       c1d0*x**464+c1d1*x**465+c1d2*x**466+c1d3*x**467+
       c1d4*x**468+c1d5*x**469+c1d6*x**470+c1d7*x**471+
       c1d8*x**472+c1d9*x**473+c1da*x**474+c1db*x**475+
       c1dc*x**476+c1dd*x**477+c1de*x**478+c1df*x**479)
      (L0x7fffffffd780*x**80+L0x7fffffffd782*x**81+L0x7fffffffd784*x**82+
       L0x7fffffffd786*x**83+L0x7fffffffd788*x**84+L0x7fffffffd78a*x**85+
       L0x7fffffffd78c*x**86+L0x7fffffffd78e*x**87+L0x7fffffffd790*x**88+
       L0x7fffffffd792*x**89+L0x7fffffffd794*x**90+L0x7fffffffd796*x**91+
       L0x7fffffffd798*x**92+L0x7fffffffd79a*x**93+L0x7fffffffd79c*x**94+
       L0x7fffffffd79e*x**95)
      [10753, x**128 - 321],
eqmod (c050*x** 80+c051*x** 81+c052*x** 82+c053*x** 83+
       c054*x** 84+c055*x** 85+c056*x** 86+c057*x** 87+
       c058*x** 88+c059*x** 89+c05a*x** 90+c05b*x** 91+
       c05c*x** 92+c05d*x** 93+c05e*x** 94+c05f*x** 95+
       c0d0*x**208+c0d1*x**209+c0d2*x**210+c0d3*x**211+
       c0d4*x**212+c0d5*x**213+c0d6*x**214+c0d7*x**215+
       c0d8*x**216+c0d9*x**217+c0da*x**218+c0db*x**219+
       c0dc*x**220+c0dd*x**221+c0de*x**222+c0df*x**223+
       c150*x**336+c151*x**337+c152*x**338+c153*x**339+
       c154*x**340+c155*x**341+c156*x**342+c157*x**343+
       c158*x**344+c159*x**345+c15a*x**346+c15b*x**347+
       c15c*x**348+c15d*x**349+c15e*x**350+c15f*x**351+
       c1d0*x**464+c1d1*x**465+c1d2*x**466+c1d3*x**467+
       c1d4*x**468+c1d5*x**469+c1d6*x**470+c1d7*x**471+
       c1d8*x**472+c1d9*x**473+c1da*x**474+c1db*x**475+
       c1dc*x**476+c1dd*x**477+c1de*x**478+c1df*x**479)
      (L0x7fffffffd880*x**80+L0x7fffffffd882*x**81+L0x7fffffffd884*x**82+
       L0x7fffffffd886*x**83+L0x7fffffffd888*x**84+L0x7fffffffd88a*x**85+
       L0x7fffffffd88c*x**86+L0x7fffffffd88e*x**87+L0x7fffffffd890*x**88+
       L0x7fffffffd892*x**89+L0x7fffffffd894*x**90+L0x7fffffffd896*x**91+
       L0x7fffffffd898*x**92+L0x7fffffffd89a*x**93+L0x7fffffffd89c*x**94+
       L0x7fffffffd89e*x**95)
      [10753, x**128 - 10432],
eqmod (c050*x** 80+c051*x** 81+c052*x** 82+c053*x** 83+
       c054*x** 84+c055*x** 85+c056*x** 86+c057*x** 87+
       c058*x** 88+c059*x** 89+c05a*x** 90+c05b*x** 91+
       c05c*x** 92+c05d*x** 93+c05e*x** 94+c05f*x** 95+
       c0d0*x**208+c0d1*x**209+c0d2*x**210+c0d3*x**211+
       c0d4*x**212+c0d5*x**213+c0d6*x**214+c0d7*x**215+
       c0d8*x**216+c0d9*x**217+c0da*x**218+c0db*x**219+
       c0dc*x**220+c0dd*x**221+c0de*x**222+c0df*x**223+
       c150*x**336+c151*x**337+c152*x**338+c153*x**339+
       c154*x**340+c155*x**341+c156*x**342+c157*x**343+
       c158*x**344+c159*x**345+c15a*x**346+c15b*x**347+
       c15c*x**348+c15d*x**349+c15e*x**350+c15f*x**351+
       c1d0*x**464+c1d1*x**465+c1d2*x**466+c1d3*x**467+
       c1d4*x**468+c1d5*x**469+c1d6*x**470+c1d7*x**471+
       c1d8*x**472+c1d9*x**473+c1da*x**474+c1db*x**475+
       c1dc*x**476+c1dd*x**477+c1de*x**478+c1df*x**479)
      (L0x7fffffffd980*x**80+L0x7fffffffd982*x**81+L0x7fffffffd984*x**82+
       L0x7fffffffd986*x**83+L0x7fffffffd988*x**84+L0x7fffffffd98a*x**85+
       L0x7fffffffd98c*x**86+L0x7fffffffd98e*x**87+L0x7fffffffd990*x**88+
       L0x7fffffffd992*x**89+L0x7fffffffd994*x**90+L0x7fffffffd996*x**91+
       L0x7fffffffd998*x**92+L0x7fffffffd99a*x**93+L0x7fffffffd99c*x**94+
       L0x7fffffffd99e*x**95)
      [10753, x**128 - 10686],
eqmod (c050*x** 80+c051*x** 81+c052*x** 82+c053*x** 83+
       c054*x** 84+c055*x** 85+c056*x** 86+c057*x** 87+
       c058*x** 88+c059*x** 89+c05a*x** 90+c05b*x** 91+
       c05c*x** 92+c05d*x** 93+c05e*x** 94+c05f*x** 95+
       c0d0*x**208+c0d1*x**209+c0d2*x**210+c0d3*x**211+
       c0d4*x**212+c0d5*x**213+c0d6*x**214+c0d7*x**215+
       c0d8*x**216+c0d9*x**217+c0da*x**218+c0db*x**219+
       c0dc*x**220+c0dd*x**221+c0de*x**222+c0df*x**223+
       c150*x**336+c151*x**337+c152*x**338+c153*x**339+
       c154*x**340+c155*x**341+c156*x**342+c157*x**343+
       c158*x**344+c159*x**345+c15a*x**346+c15b*x**347+
       c15c*x**348+c15d*x**349+c15e*x**350+c15f*x**351+
       c1d0*x**464+c1d1*x**465+c1d2*x**466+c1d3*x**467+
       c1d4*x**468+c1d5*x**469+c1d6*x**470+c1d7*x**471+
       c1d8*x**472+c1d9*x**473+c1da*x**474+c1db*x**475+
       c1dc*x**476+c1dd*x**477+c1de*x**478+c1df*x**479)
      (L0x7fffffffda80*x**80+L0x7fffffffda82*x**81+L0x7fffffffda84*x**82+
       L0x7fffffffda86*x**83+L0x7fffffffda88*x**84+L0x7fffffffda8a*x**85+
       L0x7fffffffda8c*x**86+L0x7fffffffda8e*x**87+L0x7fffffffda90*x**88+
       L0x7fffffffda92*x**89+L0x7fffffffda94*x**90+L0x7fffffffda96*x**91+
       L0x7fffffffda98*x**92+L0x7fffffffda9a*x**93+L0x7fffffffda9c*x**94+
       L0x7fffffffda9e*x**95)
      [10753, x**128 - 67]
  ];


(* === split the CUT into 8 slices === *)

(**************** CUT  92,  0 *****************)

ecut true;

(**************** CUT  93,  0 *****************)

ecut 
  and [
eqmod (c050*x** 80+c051*x** 81+c052*x** 82+c053*x** 83+
       c054*x** 84+c055*x** 85+c056*x** 86+c057*x** 87+
       c058*x** 88+c059*x** 89+c05a*x** 90+c05b*x** 91+
       c05c*x** 92+c05d*x** 93+c05e*x** 94+c05f*x** 95+
       c0d0*x**208+c0d1*x**209+c0d2*x**210+c0d3*x**211+
       c0d4*x**212+c0d5*x**213+c0d6*x**214+c0d7*x**215+
       c0d8*x**216+c0d9*x**217+c0da*x**218+c0db*x**219+
       c0dc*x**220+c0dd*x**221+c0de*x**222+c0df*x**223+
       c150*x**336+c151*x**337+c152*x**338+c153*x**339+
       c154*x**340+c155*x**341+c156*x**342+c157*x**343+
       c158*x**344+c159*x**345+c15a*x**346+c15b*x**347+
       c15c*x**348+c15d*x**349+c15e*x**350+c15f*x**351+
       c1d0*x**464+c1d1*x**465+c1d2*x**466+c1d3*x**467+
       c1d4*x**468+c1d5*x**469+c1d6*x**470+c1d7*x**471+
       c1d8*x**472+c1d9*x**473+c1da*x**474+c1db*x**475+
       c1dc*x**476+c1dd*x**477+c1de*x**478+c1df*x**479)
      (L0x7fffffffd380*x**80+L0x7fffffffd382*x**81+L0x7fffffffd384*x**82+
       L0x7fffffffd386*x**83+L0x7fffffffd388*x**84+L0x7fffffffd38a*x**85+
       L0x7fffffffd38c*x**86+L0x7fffffffd38e*x**87+L0x7fffffffd390*x**88+
       L0x7fffffffd392*x**89+L0x7fffffffd394*x**90+L0x7fffffffd396*x**91+
       L0x7fffffffd398*x**92+L0x7fffffffd39a*x**93+L0x7fffffffd39c*x**94+
       L0x7fffffffd39e*x**95)
      [10753, x**128 - 1]
  ] prove with [cuts [91]];


(**************** CUT  94,  0 *****************)

ecut true;

(**************** CUT  95,  0 *****************)

ecut 
  and [
eqmod (c050*x** 80+c051*x** 81+c052*x** 82+c053*x** 83+
       c054*x** 84+c055*x** 85+c056*x** 86+c057*x** 87+
       c058*x** 88+c059*x** 89+c05a*x** 90+c05b*x** 91+
       c05c*x** 92+c05d*x** 93+c05e*x** 94+c05f*x** 95+
       c0d0*x**208+c0d1*x**209+c0d2*x**210+c0d3*x**211+
       c0d4*x**212+c0d5*x**213+c0d6*x**214+c0d7*x**215+
       c0d8*x**216+c0d9*x**217+c0da*x**218+c0db*x**219+
       c0dc*x**220+c0dd*x**221+c0de*x**222+c0df*x**223+
       c150*x**336+c151*x**337+c152*x**338+c153*x**339+
       c154*x**340+c155*x**341+c156*x**342+c157*x**343+
       c158*x**344+c159*x**345+c15a*x**346+c15b*x**347+
       c15c*x**348+c15d*x**349+c15e*x**350+c15f*x**351+
       c1d0*x**464+c1d1*x**465+c1d2*x**466+c1d3*x**467+
       c1d4*x**468+c1d5*x**469+c1d6*x**470+c1d7*x**471+
       c1d8*x**472+c1d9*x**473+c1da*x**474+c1db*x**475+
       c1dc*x**476+c1dd*x**477+c1de*x**478+c1df*x**479)
      (L0x7fffffffd480*x**80+L0x7fffffffd482*x**81+L0x7fffffffd484*x**82+
       L0x7fffffffd486*x**83+L0x7fffffffd488*x**84+L0x7fffffffd48a*x**85+
       L0x7fffffffd48c*x**86+L0x7fffffffd48e*x**87+L0x7fffffffd490*x**88+
       L0x7fffffffd492*x**89+L0x7fffffffd494*x**90+L0x7fffffffd496*x**91+
       L0x7fffffffd498*x**92+L0x7fffffffd49a*x**93+L0x7fffffffd49c*x**94+
       L0x7fffffffd49e*x**95)
      [10753, x**128 - 10752]
  ] prove with [cuts [91]];


(**************** CUT  96,  0 *****************)

ecut true;

(**************** CUT  97,  0 *****************)

ecut 
  and [
eqmod (c050*x** 80+c051*x** 81+c052*x** 82+c053*x** 83+
       c054*x** 84+c055*x** 85+c056*x** 86+c057*x** 87+
       c058*x** 88+c059*x** 89+c05a*x** 90+c05b*x** 91+
       c05c*x** 92+c05d*x** 93+c05e*x** 94+c05f*x** 95+
       c0d0*x**208+c0d1*x**209+c0d2*x**210+c0d3*x**211+
       c0d4*x**212+c0d5*x**213+c0d6*x**214+c0d7*x**215+
       c0d8*x**216+c0d9*x**217+c0da*x**218+c0db*x**219+
       c0dc*x**220+c0dd*x**221+c0de*x**222+c0df*x**223+
       c150*x**336+c151*x**337+c152*x**338+c153*x**339+
       c154*x**340+c155*x**341+c156*x**342+c157*x**343+
       c158*x**344+c159*x**345+c15a*x**346+c15b*x**347+
       c15c*x**348+c15d*x**349+c15e*x**350+c15f*x**351+
       c1d0*x**464+c1d1*x**465+c1d2*x**466+c1d3*x**467+
       c1d4*x**468+c1d5*x**469+c1d6*x**470+c1d7*x**471+
       c1d8*x**472+c1d9*x**473+c1da*x**474+c1db*x**475+
       c1dc*x**476+c1dd*x**477+c1de*x**478+c1df*x**479)
      (L0x7fffffffd580*x**80+L0x7fffffffd582*x**81+L0x7fffffffd584*x**82+
       L0x7fffffffd586*x**83+L0x7fffffffd588*x**84+L0x7fffffffd58a*x**85+
       L0x7fffffffd58c*x**86+L0x7fffffffd58e*x**87+L0x7fffffffd590*x**88+
       L0x7fffffffd592*x**89+L0x7fffffffd594*x**90+L0x7fffffffd596*x**91+
       L0x7fffffffd598*x**92+L0x7fffffffd59a*x**93+L0x7fffffffd59c*x**94+
       L0x7fffffffd59e*x**95)
      [10753, x**128 - 6264]
  ] prove with [cuts [91]];


(**************** CUT  98,  0 *****************)

ecut true;

(**************** CUT  99,  0 *****************)

ecut 
  and [
eqmod (c050*x** 80+c051*x** 81+c052*x** 82+c053*x** 83+
       c054*x** 84+c055*x** 85+c056*x** 86+c057*x** 87+
       c058*x** 88+c059*x** 89+c05a*x** 90+c05b*x** 91+
       c05c*x** 92+c05d*x** 93+c05e*x** 94+c05f*x** 95+
       c0d0*x**208+c0d1*x**209+c0d2*x**210+c0d3*x**211+
       c0d4*x**212+c0d5*x**213+c0d6*x**214+c0d7*x**215+
       c0d8*x**216+c0d9*x**217+c0da*x**218+c0db*x**219+
       c0dc*x**220+c0dd*x**221+c0de*x**222+c0df*x**223+
       c150*x**336+c151*x**337+c152*x**338+c153*x**339+
       c154*x**340+c155*x**341+c156*x**342+c157*x**343+
       c158*x**344+c159*x**345+c15a*x**346+c15b*x**347+
       c15c*x**348+c15d*x**349+c15e*x**350+c15f*x**351+
       c1d0*x**464+c1d1*x**465+c1d2*x**466+c1d3*x**467+
       c1d4*x**468+c1d5*x**469+c1d6*x**470+c1d7*x**471+
       c1d8*x**472+c1d9*x**473+c1da*x**474+c1db*x**475+
       c1dc*x**476+c1dd*x**477+c1de*x**478+c1df*x**479)
      (L0x7fffffffd680*x**80+L0x7fffffffd682*x**81+L0x7fffffffd684*x**82+
       L0x7fffffffd686*x**83+L0x7fffffffd688*x**84+L0x7fffffffd68a*x**85+
       L0x7fffffffd68c*x**86+L0x7fffffffd68e*x**87+L0x7fffffffd690*x**88+
       L0x7fffffffd692*x**89+L0x7fffffffd694*x**90+L0x7fffffffd696*x**91+
       L0x7fffffffd698*x**92+L0x7fffffffd69a*x**93+L0x7fffffffd69c*x**94+
       L0x7fffffffd69e*x**95)
      [10753, x**128 - 4489]
  ] prove with [cuts [91]];


(**************** CUT 100,  0 *****************)

ecut true;

(**************** CUT 101,  0 *****************)

ecut 
  and [
eqmod (c050*x** 80+c051*x** 81+c052*x** 82+c053*x** 83+
       c054*x** 84+c055*x** 85+c056*x** 86+c057*x** 87+
       c058*x** 88+c059*x** 89+c05a*x** 90+c05b*x** 91+
       c05c*x** 92+c05d*x** 93+c05e*x** 94+c05f*x** 95+
       c0d0*x**208+c0d1*x**209+c0d2*x**210+c0d3*x**211+
       c0d4*x**212+c0d5*x**213+c0d6*x**214+c0d7*x**215+
       c0d8*x**216+c0d9*x**217+c0da*x**218+c0db*x**219+
       c0dc*x**220+c0dd*x**221+c0de*x**222+c0df*x**223+
       c150*x**336+c151*x**337+c152*x**338+c153*x**339+
       c154*x**340+c155*x**341+c156*x**342+c157*x**343+
       c158*x**344+c159*x**345+c15a*x**346+c15b*x**347+
       c15c*x**348+c15d*x**349+c15e*x**350+c15f*x**351+
       c1d0*x**464+c1d1*x**465+c1d2*x**466+c1d3*x**467+
       c1d4*x**468+c1d5*x**469+c1d6*x**470+c1d7*x**471+
       c1d8*x**472+c1d9*x**473+c1da*x**474+c1db*x**475+
       c1dc*x**476+c1dd*x**477+c1de*x**478+c1df*x**479)
      (L0x7fffffffd780*x**80+L0x7fffffffd782*x**81+L0x7fffffffd784*x**82+
       L0x7fffffffd786*x**83+L0x7fffffffd788*x**84+L0x7fffffffd78a*x**85+
       L0x7fffffffd78c*x**86+L0x7fffffffd78e*x**87+L0x7fffffffd790*x**88+
       L0x7fffffffd792*x**89+L0x7fffffffd794*x**90+L0x7fffffffd796*x**91+
       L0x7fffffffd798*x**92+L0x7fffffffd79a*x**93+L0x7fffffffd79c*x**94+
       L0x7fffffffd79e*x**95)
      [10753, x**128 - 321]
  ] prove with [cuts [91]];


(**************** CUT 102,  0 *****************)

ecut true;

(**************** CUT 103,  0 *****************)

ecut 
  and [
eqmod (c050*x** 80+c051*x** 81+c052*x** 82+c053*x** 83+
       c054*x** 84+c055*x** 85+c056*x** 86+c057*x** 87+
       c058*x** 88+c059*x** 89+c05a*x** 90+c05b*x** 91+
       c05c*x** 92+c05d*x** 93+c05e*x** 94+c05f*x** 95+
       c0d0*x**208+c0d1*x**209+c0d2*x**210+c0d3*x**211+
       c0d4*x**212+c0d5*x**213+c0d6*x**214+c0d7*x**215+
       c0d8*x**216+c0d9*x**217+c0da*x**218+c0db*x**219+
       c0dc*x**220+c0dd*x**221+c0de*x**222+c0df*x**223+
       c150*x**336+c151*x**337+c152*x**338+c153*x**339+
       c154*x**340+c155*x**341+c156*x**342+c157*x**343+
       c158*x**344+c159*x**345+c15a*x**346+c15b*x**347+
       c15c*x**348+c15d*x**349+c15e*x**350+c15f*x**351+
       c1d0*x**464+c1d1*x**465+c1d2*x**466+c1d3*x**467+
       c1d4*x**468+c1d5*x**469+c1d6*x**470+c1d7*x**471+
       c1d8*x**472+c1d9*x**473+c1da*x**474+c1db*x**475+
       c1dc*x**476+c1dd*x**477+c1de*x**478+c1df*x**479)
      (L0x7fffffffd880*x**80+L0x7fffffffd882*x**81+L0x7fffffffd884*x**82+
       L0x7fffffffd886*x**83+L0x7fffffffd888*x**84+L0x7fffffffd88a*x**85+
       L0x7fffffffd88c*x**86+L0x7fffffffd88e*x**87+L0x7fffffffd890*x**88+
       L0x7fffffffd892*x**89+L0x7fffffffd894*x**90+L0x7fffffffd896*x**91+
       L0x7fffffffd898*x**92+L0x7fffffffd89a*x**93+L0x7fffffffd89c*x**94+
       L0x7fffffffd89e*x**95)
      [10753, x**128 - 10432]
  ] prove with [cuts [91]];


(**************** CUT 104,  0 *****************)

ecut true;

(**************** CUT 105,  0 *****************)

ecut 
  and [
eqmod (c050*x** 80+c051*x** 81+c052*x** 82+c053*x** 83+
       c054*x** 84+c055*x** 85+c056*x** 86+c057*x** 87+
       c058*x** 88+c059*x** 89+c05a*x** 90+c05b*x** 91+
       c05c*x** 92+c05d*x** 93+c05e*x** 94+c05f*x** 95+
       c0d0*x**208+c0d1*x**209+c0d2*x**210+c0d3*x**211+
       c0d4*x**212+c0d5*x**213+c0d6*x**214+c0d7*x**215+
       c0d8*x**216+c0d9*x**217+c0da*x**218+c0db*x**219+
       c0dc*x**220+c0dd*x**221+c0de*x**222+c0df*x**223+
       c150*x**336+c151*x**337+c152*x**338+c153*x**339+
       c154*x**340+c155*x**341+c156*x**342+c157*x**343+
       c158*x**344+c159*x**345+c15a*x**346+c15b*x**347+
       c15c*x**348+c15d*x**349+c15e*x**350+c15f*x**351+
       c1d0*x**464+c1d1*x**465+c1d2*x**466+c1d3*x**467+
       c1d4*x**468+c1d5*x**469+c1d6*x**470+c1d7*x**471+
       c1d8*x**472+c1d9*x**473+c1da*x**474+c1db*x**475+
       c1dc*x**476+c1dd*x**477+c1de*x**478+c1df*x**479)
      (L0x7fffffffd980*x**80+L0x7fffffffd982*x**81+L0x7fffffffd984*x**82+
       L0x7fffffffd986*x**83+L0x7fffffffd988*x**84+L0x7fffffffd98a*x**85+
       L0x7fffffffd98c*x**86+L0x7fffffffd98e*x**87+L0x7fffffffd990*x**88+
       L0x7fffffffd992*x**89+L0x7fffffffd994*x**90+L0x7fffffffd996*x**91+
       L0x7fffffffd998*x**92+L0x7fffffffd99a*x**93+L0x7fffffffd99c*x**94+
       L0x7fffffffd99e*x**95)
      [10753, x**128 - 10686]
  ] prove with [cuts [91]];


(**************** CUT 106,  0 *****************)

ecut true;

(**************** CUT 107,  0 *****************)

ecut 
  and [
eqmod (c050*x** 80+c051*x** 81+c052*x** 82+c053*x** 83+
       c054*x** 84+c055*x** 85+c056*x** 86+c057*x** 87+
       c058*x** 88+c059*x** 89+c05a*x** 90+c05b*x** 91+
       c05c*x** 92+c05d*x** 93+c05e*x** 94+c05f*x** 95+
       c0d0*x**208+c0d1*x**209+c0d2*x**210+c0d3*x**211+
       c0d4*x**212+c0d5*x**213+c0d6*x**214+c0d7*x**215+
       c0d8*x**216+c0d9*x**217+c0da*x**218+c0db*x**219+
       c0dc*x**220+c0dd*x**221+c0de*x**222+c0df*x**223+
       c150*x**336+c151*x**337+c152*x**338+c153*x**339+
       c154*x**340+c155*x**341+c156*x**342+c157*x**343+
       c158*x**344+c159*x**345+c15a*x**346+c15b*x**347+
       c15c*x**348+c15d*x**349+c15e*x**350+c15f*x**351+
       c1d0*x**464+c1d1*x**465+c1d2*x**466+c1d3*x**467+
       c1d4*x**468+c1d5*x**469+c1d6*x**470+c1d7*x**471+
       c1d8*x**472+c1d9*x**473+c1da*x**474+c1db*x**475+
       c1dc*x**476+c1dd*x**477+c1de*x**478+c1df*x**479)
      (L0x7fffffffda80*x**80+L0x7fffffffda82*x**81+L0x7fffffffda84*x**82+
       L0x7fffffffda86*x**83+L0x7fffffffda88*x**84+L0x7fffffffda8a*x**85+
       L0x7fffffffda8c*x**86+L0x7fffffffda8e*x**87+L0x7fffffffda90*x**88+
       L0x7fffffffda92*x**89+L0x7fffffffda94*x**90+L0x7fffffffda96*x**91+
       L0x7fffffffda98*x**92+L0x7fffffffda9a*x**93+L0x7fffffffda9c*x**94+
       L0x7fffffffda9e*x**95)
      [10753, x**128 - 67]
  ] prove with [cuts [91]];



(* === be ready for next level and offset === *)

(**************** CUT 108,  0 *****************)

ecut true;



(* vpbroadcastw 0x102(%rdx),%ymm1                  #! EA = L0x555555561222; Value = 0x276d0198f85c6adf; PC = 0x55555555733d *)
mov ymm1_0 L0x555555561222;
mov ymm1_1 L0x555555561222;
mov ymm1_2 L0x555555561222;
mov ymm1_3 L0x555555561222;
mov ymm1_4 L0x555555561222;
mov ymm1_5 L0x555555561222;
mov ymm1_6 L0x555555561222;
mov ymm1_7 L0x555555561222;
mov ymm1_8 L0x555555561222;
mov ymm1_9 L0x555555561222;
mov ymm1_a L0x555555561222;
mov ymm1_b L0x555555561222;
mov ymm1_c L0x555555561222;
mov ymm1_d L0x555555561222;
mov ymm1_e L0x555555561222;
mov ymm1_f L0x555555561222;
(* vpbroadcastw 0x302(%rdx),%ymm2                  #! EA = L0x555555561422; Value = 0x096df198105c00df; PC = 0x555555557346 *)
mov ymm2_0 L0x555555561422;
mov ymm2_1 L0x555555561422;
mov ymm2_2 L0x555555561422;
mov ymm2_3 L0x555555561422;
mov ymm2_4 L0x555555561422;
mov ymm2_5 L0x555555561422;
mov ymm2_6 L0x555555561422;
mov ymm2_7 L0x555555561422;
mov ymm2_8 L0x555555561422;
mov ymm2_9 L0x555555561422;
mov ymm2_a L0x555555561422;
mov ymm2_b L0x555555561422;
mov ymm2_c L0x555555561422;
mov ymm2_d L0x555555561422;
mov ymm2_e L0x555555561422;
mov ymm2_f L0x555555561422;
(* vmovdqa 0x2c0(%rsi),%ymm6                       #! EA = L0x7fffffffcda0; Value = 0x0000000000000000; PC = 0x55555555734f *)
mov ymm6_0 L0x7fffffffcda0;
mov ymm6_1 L0x7fffffffcda2;
mov ymm6_2 L0x7fffffffcda4;
mov ymm6_3 L0x7fffffffcda6;
mov ymm6_4 L0x7fffffffcda8;
mov ymm6_5 L0x7fffffffcdaa;
mov ymm6_6 L0x7fffffffcdac;
mov ymm6_7 L0x7fffffffcdae;
mov ymm6_8 L0x7fffffffcdb0;
mov ymm6_9 L0x7fffffffcdb2;
mov ymm6_a L0x7fffffffcdb4;
mov ymm6_b L0x7fffffffcdb6;
mov ymm6_c L0x7fffffffcdb8;
mov ymm6_d L0x7fffffffcdba;
mov ymm6_e L0x7fffffffcdbc;
mov ymm6_f L0x7fffffffcdbe;
(* vmovdqa 0x3c0(%rsi),%ymm7                       #! EA = L0x7fffffffcea0; Value = 0x0000000000000000; PC = 0x555555557357 *)
mov ymm7_0 L0x7fffffffcea0;
mov ymm7_1 L0x7fffffffcea2;
mov ymm7_2 L0x7fffffffcea4;
mov ymm7_3 L0x7fffffffcea6;
mov ymm7_4 L0x7fffffffcea8;
mov ymm7_5 L0x7fffffffceaa;
mov ymm7_6 L0x7fffffffceac;
mov ymm7_7 L0x7fffffffceae;
mov ymm7_8 L0x7fffffffceb0;
mov ymm7_9 L0x7fffffffceb2;
mov ymm7_a L0x7fffffffceb4;
mov ymm7_b L0x7fffffffceb6;
mov ymm7_c L0x7fffffffceb8;
mov ymm7_d L0x7fffffffceba;
mov ymm7_e L0x7fffffffcebc;
mov ymm7_f L0x7fffffffcebe;
(* vpmullw %ymm1,%ymm6,%ymm3                       #! PC = 0x55555555735f *)
smull mulHymm6_0 mulL_0 ymm1_0 ymm6_0;
smull mulHymm6_1 mulL_1 ymm1_1 ymm6_1;
smull mulHymm6_2 mulL_2 ymm1_2 ymm6_2;
smull mulHymm6_3 mulL_3 ymm1_3 ymm6_3;
smull mulHymm6_4 mulL_4 ymm1_4 ymm6_4;
smull mulHymm6_5 mulL_5 ymm1_5 ymm6_5;
smull mulHymm6_6 mulL_6 ymm1_6 ymm6_6;
smull mulHymm6_7 mulL_7 ymm1_7 ymm6_7;
smull mulHymm6_8 mulL_8 ymm1_8 ymm6_8;
smull mulHymm6_9 mulL_9 ymm1_9 ymm6_9;
smull mulHymm6_a mulL_a ymm1_a ymm6_a;
smull mulHymm6_b mulL_b ymm1_b ymm6_b;
smull mulHymm6_c mulL_c ymm1_c ymm6_c;
smull mulHymm6_d mulL_d ymm1_d ymm6_d;
smull mulHymm6_e mulL_e ymm1_e ymm6_e;
smull mulHymm6_f mulL_f ymm1_f ymm6_f;
cast ymm3_0@sint16 mulL_0;
cast ymm3_1@sint16 mulL_1;
cast ymm3_2@sint16 mulL_2;
cast ymm3_3@sint16 mulL_3;
cast ymm3_4@sint16 mulL_4;
cast ymm3_5@sint16 mulL_5;
cast ymm3_6@sint16 mulL_6;
cast ymm3_7@sint16 mulL_7;
cast ymm3_8@sint16 mulL_8;
cast ymm3_9@sint16 mulL_9;
cast ymm3_a@sint16 mulL_a;
cast ymm3_b@sint16 mulL_b;
cast ymm3_c@sint16 mulL_c;
cast ymm3_d@sint16 mulL_d;
cast ymm3_e@sint16 mulL_e;
cast ymm3_f@sint16 mulL_f;
(* vpmulhw %ymm2,%ymm6,%ymm10                      #! PC = 0x555555557363 *)
smull mulH_0 mulLymm6_0 ymm6_0 ymm2_0;
smull mulH_1 mulLymm6_1 ymm6_1 ymm2_1;
smull mulH_2 mulLymm6_2 ymm6_2 ymm2_2;
smull mulH_3 mulLymm6_3 ymm6_3 ymm2_3;
smull mulH_4 mulLymm6_4 ymm6_4 ymm2_4;
smull mulH_5 mulLymm6_5 ymm6_5 ymm2_5;
smull mulH_6 mulLymm6_6 ymm6_6 ymm2_6;
smull mulH_7 mulLymm6_7 ymm6_7 ymm2_7;
smull mulH_8 mulLymm6_8 ymm6_8 ymm2_8;
smull mulH_9 mulLymm6_9 ymm6_9 ymm2_9;
smull mulH_a mulLymm6_a ymm6_a ymm2_a;
smull mulH_b mulLymm6_b ymm6_b ymm2_b;
smull mulH_c mulLymm6_c ymm6_c ymm2_c;
smull mulH_d mulLymm6_d ymm6_d ymm2_d;
smull mulH_e mulLymm6_e ymm6_e ymm2_e;
smull mulH_f mulLymm6_f ymm6_f ymm2_f;
mov ymm10_0 mulH_0;
mov ymm10_1 mulH_1;
mov ymm10_2 mulH_2;
mov ymm10_3 mulH_3;
mov ymm10_4 mulH_4;
mov ymm10_5 mulH_5;
mov ymm10_6 mulH_6;
mov ymm10_7 mulH_7;
mov ymm10_8 mulH_8;
mov ymm10_9 mulH_9;
mov ymm10_a mulH_a;
mov ymm10_b mulH_b;
mov ymm10_c mulH_c;
mov ymm10_d mulH_d;
mov ymm10_e mulH_e;
mov ymm10_f mulH_f;
(* vpmulhw %ymm0,%ymm3,%ymm3                       #! PC = 0x555555557367 *)
smull mulH_0 red_0 ymm3_0 ymm0_0;
assert true && red_0 = mulLymm6_0;
assume red_0 = mulLymm6_0 && true;
smull mulH_1 red_1 ymm3_1 ymm0_1;
assert true && red_1 = mulLymm6_1;
assume red_1 = mulLymm6_1 && true;
smull mulH_2 red_2 ymm3_2 ymm0_2;
assert true && red_2 = mulLymm6_2;
assume red_2 = mulLymm6_2 && true;
smull mulH_3 red_3 ymm3_3 ymm0_3;
assert true && red_3 = mulLymm6_3;
assume red_3 = mulLymm6_3 && true;
smull mulH_4 red_4 ymm3_4 ymm0_4;
assert true && red_4 = mulLymm6_4;
assume red_4 = mulLymm6_4 && true;
smull mulH_5 red_5 ymm3_5 ymm0_5;
assert true && red_5 = mulLymm6_5;
assume red_5 = mulLymm6_5 && true;
smull mulH_6 red_6 ymm3_6 ymm0_6;
assert true && red_6 = mulLymm6_6;
assume red_6 = mulLymm6_6 && true;
smull mulH_7 red_7 ymm3_7 ymm0_7;
assert true && red_7 = mulLymm6_7;
assume red_7 = mulLymm6_7 && true;
smull mulH_8 red_8 ymm3_8 ymm0_8;
assert true && red_8 = mulLymm6_8;
assume red_8 = mulLymm6_8 && true;
smull mulH_9 red_9 ymm3_9 ymm0_9;
assert true && red_9 = mulLymm6_9;
assume red_9 = mulLymm6_9 && true;
smull mulH_a red_a ymm3_a ymm0_a;
assert true && red_a = mulLymm6_a;
assume red_a = mulLymm6_a && true;
smull mulH_b red_b ymm3_b ymm0_b;
assert true && red_b = mulLymm6_b;
assume red_b = mulLymm6_b && true;
smull mulH_c red_c ymm3_c ymm0_c;
assert true && red_c = mulLymm6_c;
assume red_c = mulLymm6_c && true;
smull mulH_d red_d ymm3_d ymm0_d;
assert true && red_d = mulLymm6_d;
assume red_d = mulLymm6_d && true;
smull mulH_e red_e ymm3_e ymm0_e;
assert true && red_e = mulLymm6_e;
assume red_e = mulLymm6_e && true;
smull mulH_f red_f ymm3_f ymm0_f;
assert true && red_f = mulLymm6_f;
assume red_f = mulLymm6_f && true;
mov ymm3_0 mulH_0;
mov ymm3_1 mulH_1;
mov ymm3_2 mulH_2;
mov ymm3_3 mulH_3;
mov ymm3_4 mulH_4;
mov ymm3_5 mulH_5;
mov ymm3_6 mulH_6;
mov ymm3_7 mulH_7;
mov ymm3_8 mulH_8;
mov ymm3_9 mulH_9;
mov ymm3_a mulH_a;
mov ymm3_b mulH_b;
mov ymm3_c mulH_c;
mov ymm3_d mulH_d;
mov ymm3_e mulH_e;
mov ymm3_f mulH_f;
(* vpsubw %ymm3,%ymm10,%ymm10                      #! PC = 0x55555555736b *)
sub ymm10_0 ymm10_0 ymm3_0;
sub ymm10_1 ymm10_1 ymm3_1;
sub ymm10_2 ymm10_2 ymm3_2;
sub ymm10_3 ymm10_3 ymm3_3;
sub ymm10_4 ymm10_4 ymm3_4;
sub ymm10_5 ymm10_5 ymm3_5;
sub ymm10_6 ymm10_6 ymm3_6;
sub ymm10_7 ymm10_7 ymm3_7;
sub ymm10_8 ymm10_8 ymm3_8;
sub ymm10_9 ymm10_9 ymm3_9;
sub ymm10_a ymm10_a ymm3_a;
sub ymm10_b ymm10_b ymm3_b;
sub ymm10_c ymm10_c ymm3_c;
sub ymm10_d ymm10_d ymm3_d;
sub ymm10_e ymm10_e ymm3_e;
sub ymm10_f ymm10_f ymm3_f;
(* vpmullw %ymm1,%ymm7,%ymm3                       #! PC = 0x55555555736f *)
smull mulHymm7_0 mulL_0 ymm1_0 ymm7_0;
smull mulHymm7_1 mulL_1 ymm1_1 ymm7_1;
smull mulHymm7_2 mulL_2 ymm1_2 ymm7_2;
smull mulHymm7_3 mulL_3 ymm1_3 ymm7_3;
smull mulHymm7_4 mulL_4 ymm1_4 ymm7_4;
smull mulHymm7_5 mulL_5 ymm1_5 ymm7_5;
smull mulHymm7_6 mulL_6 ymm1_6 ymm7_6;
smull mulHymm7_7 mulL_7 ymm1_7 ymm7_7;
smull mulHymm7_8 mulL_8 ymm1_8 ymm7_8;
smull mulHymm7_9 mulL_9 ymm1_9 ymm7_9;
smull mulHymm7_a mulL_a ymm1_a ymm7_a;
smull mulHymm7_b mulL_b ymm1_b ymm7_b;
smull mulHymm7_c mulL_c ymm1_c ymm7_c;
smull mulHymm7_d mulL_d ymm1_d ymm7_d;
smull mulHymm7_e mulL_e ymm1_e ymm7_e;
smull mulHymm7_f mulL_f ymm1_f ymm7_f;
cast ymm3_0@sint16 mulL_0;
cast ymm3_1@sint16 mulL_1;
cast ymm3_2@sint16 mulL_2;
cast ymm3_3@sint16 mulL_3;
cast ymm3_4@sint16 mulL_4;
cast ymm3_5@sint16 mulL_5;
cast ymm3_6@sint16 mulL_6;
cast ymm3_7@sint16 mulL_7;
cast ymm3_8@sint16 mulL_8;
cast ymm3_9@sint16 mulL_9;
cast ymm3_a@sint16 mulL_a;
cast ymm3_b@sint16 mulL_b;
cast ymm3_c@sint16 mulL_c;
cast ymm3_d@sint16 mulL_d;
cast ymm3_e@sint16 mulL_e;
cast ymm3_f@sint16 mulL_f;
(* vpmulhw %ymm2,%ymm7,%ymm11                      #! PC = 0x555555557373 *)
smull mulH_0 mulLymm7_0 ymm7_0 ymm2_0;
smull mulH_1 mulLymm7_1 ymm7_1 ymm2_1;
smull mulH_2 mulLymm7_2 ymm7_2 ymm2_2;
smull mulH_3 mulLymm7_3 ymm7_3 ymm2_3;
smull mulH_4 mulLymm7_4 ymm7_4 ymm2_4;
smull mulH_5 mulLymm7_5 ymm7_5 ymm2_5;
smull mulH_6 mulLymm7_6 ymm7_6 ymm2_6;
smull mulH_7 mulLymm7_7 ymm7_7 ymm2_7;
smull mulH_8 mulLymm7_8 ymm7_8 ymm2_8;
smull mulH_9 mulLymm7_9 ymm7_9 ymm2_9;
smull mulH_a mulLymm7_a ymm7_a ymm2_a;
smull mulH_b mulLymm7_b ymm7_b ymm2_b;
smull mulH_c mulLymm7_c ymm7_c ymm2_c;
smull mulH_d mulLymm7_d ymm7_d ymm2_d;
smull mulH_e mulLymm7_e ymm7_e ymm2_e;
smull mulH_f mulLymm7_f ymm7_f ymm2_f;
mov ymm11_0 mulH_0;
mov ymm11_1 mulH_1;
mov ymm11_2 mulH_2;
mov ymm11_3 mulH_3;
mov ymm11_4 mulH_4;
mov ymm11_5 mulH_5;
mov ymm11_6 mulH_6;
mov ymm11_7 mulH_7;
mov ymm11_8 mulH_8;
mov ymm11_9 mulH_9;
mov ymm11_a mulH_a;
mov ymm11_b mulH_b;
mov ymm11_c mulH_c;
mov ymm11_d mulH_d;
mov ymm11_e mulH_e;
mov ymm11_f mulH_f;
(* vpmulhw %ymm0,%ymm3,%ymm3                       #! PC = 0x555555557377 *)
smull mulH_0 red_0 ymm3_0 ymm0_0;
assert true && red_0 = mulLymm7_0;
assume red_0 = mulLymm7_0 && true;
smull mulH_1 red_1 ymm3_1 ymm0_1;
assert true && red_1 = mulLymm7_1;
assume red_1 = mulLymm7_1 && true;
smull mulH_2 red_2 ymm3_2 ymm0_2;
assert true && red_2 = mulLymm7_2;
assume red_2 = mulLymm7_2 && true;
smull mulH_3 red_3 ymm3_3 ymm0_3;
assert true && red_3 = mulLymm7_3;
assume red_3 = mulLymm7_3 && true;
smull mulH_4 red_4 ymm3_4 ymm0_4;
assert true && red_4 = mulLymm7_4;
assume red_4 = mulLymm7_4 && true;
smull mulH_5 red_5 ymm3_5 ymm0_5;
assert true && red_5 = mulLymm7_5;
assume red_5 = mulLymm7_5 && true;
smull mulH_6 red_6 ymm3_6 ymm0_6;
assert true && red_6 = mulLymm7_6;
assume red_6 = mulLymm7_6 && true;
smull mulH_7 red_7 ymm3_7 ymm0_7;
assert true && red_7 = mulLymm7_7;
assume red_7 = mulLymm7_7 && true;
smull mulH_8 red_8 ymm3_8 ymm0_8;
assert true && red_8 = mulLymm7_8;
assume red_8 = mulLymm7_8 && true;
smull mulH_9 red_9 ymm3_9 ymm0_9;
assert true && red_9 = mulLymm7_9;
assume red_9 = mulLymm7_9 && true;
smull mulH_a red_a ymm3_a ymm0_a;
assert true && red_a = mulLymm7_a;
assume red_a = mulLymm7_a && true;
smull mulH_b red_b ymm3_b ymm0_b;
assert true && red_b = mulLymm7_b;
assume red_b = mulLymm7_b && true;
smull mulH_c red_c ymm3_c ymm0_c;
assert true && red_c = mulLymm7_c;
assume red_c = mulLymm7_c && true;
smull mulH_d red_d ymm3_d ymm0_d;
assert true && red_d = mulLymm7_d;
assume red_d = mulLymm7_d && true;
smull mulH_e red_e ymm3_e ymm0_e;
assert true && red_e = mulLymm7_e;
assume red_e = mulLymm7_e && true;
smull mulH_f red_f ymm3_f ymm0_f;
assert true && red_f = mulLymm7_f;
assume red_f = mulLymm7_f && true;
mov ymm3_0 mulH_0;
mov ymm3_1 mulH_1;
mov ymm3_2 mulH_2;
mov ymm3_3 mulH_3;
mov ymm3_4 mulH_4;
mov ymm3_5 mulH_5;
mov ymm3_6 mulH_6;
mov ymm3_7 mulH_7;
mov ymm3_8 mulH_8;
mov ymm3_9 mulH_9;
mov ymm3_a mulH_a;
mov ymm3_b mulH_b;
mov ymm3_c mulH_c;
mov ymm3_d mulH_d;
mov ymm3_e mulH_e;
mov ymm3_f mulH_f;
(* vpsubw %ymm3,%ymm11,%ymm11                      #! PC = 0x55555555737b *)
sub ymm11_0 ymm11_0 ymm3_0;
sub ymm11_1 ymm11_1 ymm3_1;
sub ymm11_2 ymm11_2 ymm3_2;
sub ymm11_3 ymm11_3 ymm3_3;
sub ymm11_4 ymm11_4 ymm3_4;
sub ymm11_5 ymm11_5 ymm3_5;
sub ymm11_6 ymm11_6 ymm3_6;
sub ymm11_7 ymm11_7 ymm3_7;
sub ymm11_8 ymm11_8 ymm3_8;
sub ymm11_9 ymm11_9 ymm3_9;
sub ymm11_a ymm11_a ymm3_a;
sub ymm11_b ymm11_b ymm3_b;
sub ymm11_c ymm11_c ymm3_c;
sub ymm11_d ymm11_d ymm3_d;
sub ymm11_e ymm11_e ymm3_e;
sub ymm11_f ymm11_f ymm3_f;
(* vmovdqa 0xc0(%rsi),%ymm4                        #! EA = L0x7fffffffcba0; Value = 0x0000000000000000; PC = 0x55555555737f *)
mov ymm4_0 L0x7fffffffcba0;
mov ymm4_1 L0x7fffffffcba2;
mov ymm4_2 L0x7fffffffcba4;
mov ymm4_3 L0x7fffffffcba6;
mov ymm4_4 L0x7fffffffcba8;
mov ymm4_5 L0x7fffffffcbaa;
mov ymm4_6 L0x7fffffffcbac;
mov ymm4_7 L0x7fffffffcbae;
mov ymm4_8 L0x7fffffffcbb0;
mov ymm4_9 L0x7fffffffcbb2;
mov ymm4_a L0x7fffffffcbb4;
mov ymm4_b L0x7fffffffcbb6;
mov ymm4_c L0x7fffffffcbb8;
mov ymm4_d L0x7fffffffcbba;
mov ymm4_e L0x7fffffffcbbc;
mov ymm4_f L0x7fffffffcbbe;
(* vmovdqa 0x1c0(%rsi),%ymm5                       #! EA = L0x7fffffffcca0; Value = 0x0000000000000000; PC = 0x555555557387 *)
mov ymm5_0 L0x7fffffffcca0;
mov ymm5_1 L0x7fffffffcca2;
mov ymm5_2 L0x7fffffffcca4;
mov ymm5_3 L0x7fffffffcca6;
mov ymm5_4 L0x7fffffffcca8;
mov ymm5_5 L0x7fffffffccaa;
mov ymm5_6 L0x7fffffffccac;
mov ymm5_7 L0x7fffffffccae;
mov ymm5_8 L0x7fffffffccb0;
mov ymm5_9 L0x7fffffffccb2;
mov ymm5_a L0x7fffffffccb4;
mov ymm5_b L0x7fffffffccb6;
mov ymm5_c L0x7fffffffccb8;
mov ymm5_d L0x7fffffffccba;
mov ymm5_e L0x7fffffffccbc;
mov ymm5_f L0x7fffffffccbe;
(* vpaddw %ymm10,%ymm4,%ymm8                       #! PC = 0x55555555738f *)
add ymm8_0 ymm4_0 ymm10_0;
add ymm8_1 ymm4_1 ymm10_1;
add ymm8_2 ymm4_2 ymm10_2;
add ymm8_3 ymm4_3 ymm10_3;
add ymm8_4 ymm4_4 ymm10_4;
add ymm8_5 ymm4_5 ymm10_5;
add ymm8_6 ymm4_6 ymm10_6;
add ymm8_7 ymm4_7 ymm10_7;
add ymm8_8 ymm4_8 ymm10_8;
add ymm8_9 ymm4_9 ymm10_9;
add ymm8_a ymm4_a ymm10_a;
add ymm8_b ymm4_b ymm10_b;
add ymm8_c ymm4_c ymm10_c;
add ymm8_d ymm4_d ymm10_d;
add ymm8_e ymm4_e ymm10_e;
add ymm8_f ymm4_f ymm10_f;
(* vpsubw %ymm10,%ymm4,%ymm10                      #! PC = 0x555555557394 *)
sub ymm10_0 ymm4_0 ymm10_0;
sub ymm10_1 ymm4_1 ymm10_1;
sub ymm10_2 ymm4_2 ymm10_2;
sub ymm10_3 ymm4_3 ymm10_3;
sub ymm10_4 ymm4_4 ymm10_4;
sub ymm10_5 ymm4_5 ymm10_5;
sub ymm10_6 ymm4_6 ymm10_6;
sub ymm10_7 ymm4_7 ymm10_7;
sub ymm10_8 ymm4_8 ymm10_8;
sub ymm10_9 ymm4_9 ymm10_9;
sub ymm10_a ymm4_a ymm10_a;
sub ymm10_b ymm4_b ymm10_b;
sub ymm10_c ymm4_c ymm10_c;
sub ymm10_d ymm4_d ymm10_d;
sub ymm10_e ymm4_e ymm10_e;
sub ymm10_f ymm4_f ymm10_f;
(* vpaddw %ymm11,%ymm5,%ymm9                       #! PC = 0x555555557399 *)
add ymm9_0 ymm5_0 ymm11_0;
add ymm9_1 ymm5_1 ymm11_1;
add ymm9_2 ymm5_2 ymm11_2;
add ymm9_3 ymm5_3 ymm11_3;
add ymm9_4 ymm5_4 ymm11_4;
add ymm9_5 ymm5_5 ymm11_5;
add ymm9_6 ymm5_6 ymm11_6;
add ymm9_7 ymm5_7 ymm11_7;
add ymm9_8 ymm5_8 ymm11_8;
add ymm9_9 ymm5_9 ymm11_9;
add ymm9_a ymm5_a ymm11_a;
add ymm9_b ymm5_b ymm11_b;
add ymm9_c ymm5_c ymm11_c;
add ymm9_d ymm5_d ymm11_d;
add ymm9_e ymm5_e ymm11_e;
add ymm9_f ymm5_f ymm11_f;
(* vpsubw %ymm11,%ymm5,%ymm11                      #! PC = 0x55555555739e *)
sub ymm11_0 ymm5_0 ymm11_0;
sub ymm11_1 ymm5_1 ymm11_1;
sub ymm11_2 ymm5_2 ymm11_2;
sub ymm11_3 ymm5_3 ymm11_3;
sub ymm11_4 ymm5_4 ymm11_4;
sub ymm11_5 ymm5_5 ymm11_5;
sub ymm11_6 ymm5_6 ymm11_6;
sub ymm11_7 ymm5_7 ymm11_7;
sub ymm11_8 ymm5_8 ymm11_8;
sub ymm11_9 ymm5_9 ymm11_9;
sub ymm11_a ymm5_a ymm11_a;
sub ymm11_b ymm5_b ymm11_b;
sub ymm11_c ymm5_c ymm11_c;
sub ymm11_d ymm5_d ymm11_d;
sub ymm11_e ymm5_e ymm11_e;
sub ymm11_f ymm5_f ymm11_f;
(* vpaddw %ymm6,%ymm4,%ymm3                        #! PC = 0x5555555573a3 *)
add ymm3_0 ymm4_0 ymm6_0;
add ymm3_1 ymm4_1 ymm6_1;
add ymm3_2 ymm4_2 ymm6_2;
add ymm3_3 ymm4_3 ymm6_3;
add ymm3_4 ymm4_4 ymm6_4;
add ymm3_5 ymm4_5 ymm6_5;
add ymm3_6 ymm4_6 ymm6_6;
add ymm3_7 ymm4_7 ymm6_7;
add ymm3_8 ymm4_8 ymm6_8;
add ymm3_9 ymm4_9 ymm6_9;
add ymm3_a ymm4_a ymm6_a;
add ymm3_b ymm4_b ymm6_b;
add ymm3_c ymm4_c ymm6_c;
add ymm3_d ymm4_d ymm6_d;
add ymm3_e ymm4_e ymm6_e;
add ymm3_f ymm4_f ymm6_f;
(* vpsubw %ymm6,%ymm4,%ymm6                        #! PC = 0x5555555573a7 *)
sub ymm6_0 ymm4_0 ymm6_0;
sub ymm6_1 ymm4_1 ymm6_1;
sub ymm6_2 ymm4_2 ymm6_2;
sub ymm6_3 ymm4_3 ymm6_3;
sub ymm6_4 ymm4_4 ymm6_4;
sub ymm6_5 ymm4_5 ymm6_5;
sub ymm6_6 ymm4_6 ymm6_6;
sub ymm6_7 ymm4_7 ymm6_7;
sub ymm6_8 ymm4_8 ymm6_8;
sub ymm6_9 ymm4_9 ymm6_9;
sub ymm6_a ymm4_a ymm6_a;
sub ymm6_b ymm4_b ymm6_b;
sub ymm6_c ymm4_c ymm6_c;
sub ymm6_d ymm4_d ymm6_d;
sub ymm6_e ymm4_e ymm6_e;
sub ymm6_f ymm4_f ymm6_f;
(* vpaddw %ymm7,%ymm5,%ymm4                        #! PC = 0x5555555573ab *)
add ymm4_0 ymm5_0 ymm7_0;
add ymm4_1 ymm5_1 ymm7_1;
add ymm4_2 ymm5_2 ymm7_2;
add ymm4_3 ymm5_3 ymm7_3;
add ymm4_4 ymm5_4 ymm7_4;
add ymm4_5 ymm5_5 ymm7_5;
add ymm4_6 ymm5_6 ymm7_6;
add ymm4_7 ymm5_7 ymm7_7;
add ymm4_8 ymm5_8 ymm7_8;
add ymm4_9 ymm5_9 ymm7_9;
add ymm4_a ymm5_a ymm7_a;
add ymm4_b ymm5_b ymm7_b;
add ymm4_c ymm5_c ymm7_c;
add ymm4_d ymm5_d ymm7_d;
add ymm4_e ymm5_e ymm7_e;
add ymm4_f ymm5_f ymm7_f;
(* vpsubw %ymm7,%ymm5,%ymm7                        #! PC = 0x5555555573af *)
sub ymm7_0 ymm5_0 ymm7_0;
sub ymm7_1 ymm5_1 ymm7_1;
sub ymm7_2 ymm5_2 ymm7_2;
sub ymm7_3 ymm5_3 ymm7_3;
sub ymm7_4 ymm5_4 ymm7_4;
sub ymm7_5 ymm5_5 ymm7_5;
sub ymm7_6 ymm5_6 ymm7_6;
sub ymm7_7 ymm5_7 ymm7_7;
sub ymm7_8 ymm5_8 ymm7_8;
sub ymm7_9 ymm5_9 ymm7_9;
sub ymm7_a ymm5_a ymm7_a;
sub ymm7_b ymm5_b ymm7_b;
sub ymm7_c ymm5_c ymm7_c;
sub ymm7_d ymm5_d ymm7_d;
sub ymm7_e ymm5_e ymm7_e;
sub ymm7_f ymm5_f ymm7_f;
(* vpmullw %ymm1,%ymm7,%ymm5                       #! PC = 0x5555555573b3 *)
smull mulHymm7_0 mulL_0 ymm1_0 ymm7_0;
smull mulHymm7_1 mulL_1 ymm1_1 ymm7_1;
smull mulHymm7_2 mulL_2 ymm1_2 ymm7_2;
smull mulHymm7_3 mulL_3 ymm1_3 ymm7_3;
smull mulHymm7_4 mulL_4 ymm1_4 ymm7_4;
smull mulHymm7_5 mulL_5 ymm1_5 ymm7_5;
smull mulHymm7_6 mulL_6 ymm1_6 ymm7_6;
smull mulHymm7_7 mulL_7 ymm1_7 ymm7_7;
smull mulHymm7_8 mulL_8 ymm1_8 ymm7_8;
smull mulHymm7_9 mulL_9 ymm1_9 ymm7_9;
smull mulHymm7_a mulL_a ymm1_a ymm7_a;
smull mulHymm7_b mulL_b ymm1_b ymm7_b;
smull mulHymm7_c mulL_c ymm1_c ymm7_c;
smull mulHymm7_d mulL_d ymm1_d ymm7_d;
smull mulHymm7_e mulL_e ymm1_e ymm7_e;
smull mulHymm7_f mulL_f ymm1_f ymm7_f;
cast ymm5_0@sint16 mulL_0;
cast ymm5_1@sint16 mulL_1;
cast ymm5_2@sint16 mulL_2;
cast ymm5_3@sint16 mulL_3;
cast ymm5_4@sint16 mulL_4;
cast ymm5_5@sint16 mulL_5;
cast ymm5_6@sint16 mulL_6;
cast ymm5_7@sint16 mulL_7;
cast ymm5_8@sint16 mulL_8;
cast ymm5_9@sint16 mulL_9;
cast ymm5_a@sint16 mulL_a;
cast ymm5_b@sint16 mulL_b;
cast ymm5_c@sint16 mulL_c;
cast ymm5_d@sint16 mulL_d;
cast ymm5_e@sint16 mulL_e;
cast ymm5_f@sint16 mulL_f;
(* vpmulhw %ymm2,%ymm7,%ymm7                       #! PC = 0x5555555573b7 *)
smull mulH_0 mulLymm7_0 ymm7_0 ymm2_0;
smull mulH_1 mulLymm7_1 ymm7_1 ymm2_1;
smull mulH_2 mulLymm7_2 ymm7_2 ymm2_2;
smull mulH_3 mulLymm7_3 ymm7_3 ymm2_3;
smull mulH_4 mulLymm7_4 ymm7_4 ymm2_4;
smull mulH_5 mulLymm7_5 ymm7_5 ymm2_5;
smull mulH_6 mulLymm7_6 ymm7_6 ymm2_6;
smull mulH_7 mulLymm7_7 ymm7_7 ymm2_7;
smull mulH_8 mulLymm7_8 ymm7_8 ymm2_8;
smull mulH_9 mulLymm7_9 ymm7_9 ymm2_9;
smull mulH_a mulLymm7_a ymm7_a ymm2_a;
smull mulH_b mulLymm7_b ymm7_b ymm2_b;
smull mulH_c mulLymm7_c ymm7_c ymm2_c;
smull mulH_d mulLymm7_d ymm7_d ymm2_d;
smull mulH_e mulLymm7_e ymm7_e ymm2_e;
smull mulH_f mulLymm7_f ymm7_f ymm2_f;
mov ymm7_0 mulH_0;
mov ymm7_1 mulH_1;
mov ymm7_2 mulH_2;
mov ymm7_3 mulH_3;
mov ymm7_4 mulH_4;
mov ymm7_5 mulH_5;
mov ymm7_6 mulH_6;
mov ymm7_7 mulH_7;
mov ymm7_8 mulH_8;
mov ymm7_9 mulH_9;
mov ymm7_a mulH_a;
mov ymm7_b mulH_b;
mov ymm7_c mulH_c;
mov ymm7_d mulH_d;
mov ymm7_e mulH_e;
mov ymm7_f mulH_f;
(* vpmulhw %ymm0,%ymm5,%ymm5                       #! PC = 0x5555555573bb *)
smull mulH_0 red_0 ymm5_0 ymm0_0;
assert true && red_0 = mulLymm7_0;
assume red_0 = mulLymm7_0 && true;
smull mulH_1 red_1 ymm5_1 ymm0_1;
assert true && red_1 = mulLymm7_1;
assume red_1 = mulLymm7_1 && true;
smull mulH_2 red_2 ymm5_2 ymm0_2;
assert true && red_2 = mulLymm7_2;
assume red_2 = mulLymm7_2 && true;
smull mulH_3 red_3 ymm5_3 ymm0_3;
assert true && red_3 = mulLymm7_3;
assume red_3 = mulLymm7_3 && true;
smull mulH_4 red_4 ymm5_4 ymm0_4;
assert true && red_4 = mulLymm7_4;
assume red_4 = mulLymm7_4 && true;
smull mulH_5 red_5 ymm5_5 ymm0_5;
assert true && red_5 = mulLymm7_5;
assume red_5 = mulLymm7_5 && true;
smull mulH_6 red_6 ymm5_6 ymm0_6;
assert true && red_6 = mulLymm7_6;
assume red_6 = mulLymm7_6 && true;
smull mulH_7 red_7 ymm5_7 ymm0_7;
assert true && red_7 = mulLymm7_7;
assume red_7 = mulLymm7_7 && true;
smull mulH_8 red_8 ymm5_8 ymm0_8;
assert true && red_8 = mulLymm7_8;
assume red_8 = mulLymm7_8 && true;
smull mulH_9 red_9 ymm5_9 ymm0_9;
assert true && red_9 = mulLymm7_9;
assume red_9 = mulLymm7_9 && true;
smull mulH_a red_a ymm5_a ymm0_a;
assert true && red_a = mulLymm7_a;
assume red_a = mulLymm7_a && true;
smull mulH_b red_b ymm5_b ymm0_b;
assert true && red_b = mulLymm7_b;
assume red_b = mulLymm7_b && true;
smull mulH_c red_c ymm5_c ymm0_c;
assert true && red_c = mulLymm7_c;
assume red_c = mulLymm7_c && true;
smull mulH_d red_d ymm5_d ymm0_d;
assert true && red_d = mulLymm7_d;
assume red_d = mulLymm7_d && true;
smull mulH_e red_e ymm5_e ymm0_e;
assert true && red_e = mulLymm7_e;
assume red_e = mulLymm7_e && true;
smull mulH_f red_f ymm5_f ymm0_f;
assert true && red_f = mulLymm7_f;
assume red_f = mulLymm7_f && true;
mov ymm5_0 mulH_0;
mov ymm5_1 mulH_1;
mov ymm5_2 mulH_2;
mov ymm5_3 mulH_3;
mov ymm5_4 mulH_4;
mov ymm5_5 mulH_5;
mov ymm5_6 mulH_6;
mov ymm5_7 mulH_7;
mov ymm5_8 mulH_8;
mov ymm5_9 mulH_9;
mov ymm5_a mulH_a;
mov ymm5_b mulH_b;
mov ymm5_c mulH_c;
mov ymm5_d mulH_d;
mov ymm5_e mulH_e;
mov ymm5_f mulH_f;
(* vpsubw %ymm5,%ymm7,%ymm7                        #! PC = 0x5555555573bf *)
sub ymm7_0 ymm7_0 ymm5_0;
sub ymm7_1 ymm7_1 ymm5_1;
sub ymm7_2 ymm7_2 ymm5_2;
sub ymm7_3 ymm7_3 ymm5_3;
sub ymm7_4 ymm7_4 ymm5_4;
sub ymm7_5 ymm7_5 ymm5_5;
sub ymm7_6 ymm7_6 ymm5_6;
sub ymm7_7 ymm7_7 ymm5_7;
sub ymm7_8 ymm7_8 ymm5_8;
sub ymm7_9 ymm7_9 ymm5_9;
sub ymm7_a ymm7_a ymm5_a;
sub ymm7_b ymm7_b ymm5_b;
sub ymm7_c ymm7_c ymm5_c;
sub ymm7_d ymm7_d ymm5_d;
sub ymm7_e ymm7_e ymm5_e;
sub ymm7_f ymm7_f ymm5_f;
(* vpbroadcastw 0x104(%rdx),%ymm1                  #! EA = L0x555555561224; Value = 0xad9a276d0198f85c; PC = 0x5555555573c3 *)
mov ymm1_0 L0x555555561224;
mov ymm1_1 L0x555555561224;
mov ymm1_2 L0x555555561224;
mov ymm1_3 L0x555555561224;
mov ymm1_4 L0x555555561224;
mov ymm1_5 L0x555555561224;
mov ymm1_6 L0x555555561224;
mov ymm1_7 L0x555555561224;
mov ymm1_8 L0x555555561224;
mov ymm1_9 L0x555555561224;
mov ymm1_a L0x555555561224;
mov ymm1_b L0x555555561224;
mov ymm1_c L0x555555561224;
mov ymm1_d L0x555555561224;
mov ymm1_e L0x555555561224;
mov ymm1_f L0x555555561224;
(* vpbroadcastw 0x304(%rdx),%ymm2                  #! EA = L0x555555561424; Value = 0xf19a096df198105c; PC = 0x5555555573cc *)
mov ymm2_0 L0x555555561424;
mov ymm2_1 L0x555555561424;
mov ymm2_2 L0x555555561424;
mov ymm2_3 L0x555555561424;
mov ymm2_4 L0x555555561424;
mov ymm2_5 L0x555555561424;
mov ymm2_6 L0x555555561424;
mov ymm2_7 L0x555555561424;
mov ymm2_8 L0x555555561424;
mov ymm2_9 L0x555555561424;
mov ymm2_a L0x555555561424;
mov ymm2_b L0x555555561424;
mov ymm2_c L0x555555561424;
mov ymm2_d L0x555555561424;
mov ymm2_e L0x555555561424;
mov ymm2_f L0x555555561424;
(* vpmullw %ymm1,%ymm9,%ymm5                       #! PC = 0x5555555573d5 *)
smull mulHymm9_0 mulL_0 ymm1_0 ymm9_0;
smull mulHymm9_1 mulL_1 ymm1_1 ymm9_1;
smull mulHymm9_2 mulL_2 ymm1_2 ymm9_2;
smull mulHymm9_3 mulL_3 ymm1_3 ymm9_3;
smull mulHymm9_4 mulL_4 ymm1_4 ymm9_4;
smull mulHymm9_5 mulL_5 ymm1_5 ymm9_5;
smull mulHymm9_6 mulL_6 ymm1_6 ymm9_6;
smull mulHymm9_7 mulL_7 ymm1_7 ymm9_7;
smull mulHymm9_8 mulL_8 ymm1_8 ymm9_8;
smull mulHymm9_9 mulL_9 ymm1_9 ymm9_9;
smull mulHymm9_a mulL_a ymm1_a ymm9_a;
smull mulHymm9_b mulL_b ymm1_b ymm9_b;
smull mulHymm9_c mulL_c ymm1_c ymm9_c;
smull mulHymm9_d mulL_d ymm1_d ymm9_d;
smull mulHymm9_e mulL_e ymm1_e ymm9_e;
smull mulHymm9_f mulL_f ymm1_f ymm9_f;
cast ymm5_0@sint16 mulL_0;
cast ymm5_1@sint16 mulL_1;
cast ymm5_2@sint16 mulL_2;
cast ymm5_3@sint16 mulL_3;
cast ymm5_4@sint16 mulL_4;
cast ymm5_5@sint16 mulL_5;
cast ymm5_6@sint16 mulL_6;
cast ymm5_7@sint16 mulL_7;
cast ymm5_8@sint16 mulL_8;
cast ymm5_9@sint16 mulL_9;
cast ymm5_a@sint16 mulL_a;
cast ymm5_b@sint16 mulL_b;
cast ymm5_c@sint16 mulL_c;
cast ymm5_d@sint16 mulL_d;
cast ymm5_e@sint16 mulL_e;
cast ymm5_f@sint16 mulL_f;
(* vpmulhw %ymm2,%ymm9,%ymm9                       #! PC = 0x5555555573d9 *)
smull mulH_0 mulLymm9_0 ymm9_0 ymm2_0;
smull mulH_1 mulLymm9_1 ymm9_1 ymm2_1;
smull mulH_2 mulLymm9_2 ymm9_2 ymm2_2;
smull mulH_3 mulLymm9_3 ymm9_3 ymm2_3;
smull mulH_4 mulLymm9_4 ymm9_4 ymm2_4;
smull mulH_5 mulLymm9_5 ymm9_5 ymm2_5;
smull mulH_6 mulLymm9_6 ymm9_6 ymm2_6;
smull mulH_7 mulLymm9_7 ymm9_7 ymm2_7;
smull mulH_8 mulLymm9_8 ymm9_8 ymm2_8;
smull mulH_9 mulLymm9_9 ymm9_9 ymm2_9;
smull mulH_a mulLymm9_a ymm9_a ymm2_a;
smull mulH_b mulLymm9_b ymm9_b ymm2_b;
smull mulH_c mulLymm9_c ymm9_c ymm2_c;
smull mulH_d mulLymm9_d ymm9_d ymm2_d;
smull mulH_e mulLymm9_e ymm9_e ymm2_e;
smull mulH_f mulLymm9_f ymm9_f ymm2_f;
mov ymm9_0 mulH_0;
mov ymm9_1 mulH_1;
mov ymm9_2 mulH_2;
mov ymm9_3 mulH_3;
mov ymm9_4 mulH_4;
mov ymm9_5 mulH_5;
mov ymm9_6 mulH_6;
mov ymm9_7 mulH_7;
mov ymm9_8 mulH_8;
mov ymm9_9 mulH_9;
mov ymm9_a mulH_a;
mov ymm9_b mulH_b;
mov ymm9_c mulH_c;
mov ymm9_d mulH_d;
mov ymm9_e mulH_e;
mov ymm9_f mulH_f;
(* vpmulhw %ymm0,%ymm5,%ymm5                       #! PC = 0x5555555573dd *)
smull mulH_0 red_0 ymm5_0 ymm0_0;
assert true && red_0 = mulLymm9_0;
assume red_0 = mulLymm9_0 && true;
smull mulH_1 red_1 ymm5_1 ymm0_1;
assert true && red_1 = mulLymm9_1;
assume red_1 = mulLymm9_1 && true;
smull mulH_2 red_2 ymm5_2 ymm0_2;
assert true && red_2 = mulLymm9_2;
assume red_2 = mulLymm9_2 && true;
smull mulH_3 red_3 ymm5_3 ymm0_3;
assert true && red_3 = mulLymm9_3;
assume red_3 = mulLymm9_3 && true;
smull mulH_4 red_4 ymm5_4 ymm0_4;
assert true && red_4 = mulLymm9_4;
assume red_4 = mulLymm9_4 && true;
smull mulH_5 red_5 ymm5_5 ymm0_5;
assert true && red_5 = mulLymm9_5;
assume red_5 = mulLymm9_5 && true;
smull mulH_6 red_6 ymm5_6 ymm0_6;
assert true && red_6 = mulLymm9_6;
assume red_6 = mulLymm9_6 && true;
smull mulH_7 red_7 ymm5_7 ymm0_7;
assert true && red_7 = mulLymm9_7;
assume red_7 = mulLymm9_7 && true;
smull mulH_8 red_8 ymm5_8 ymm0_8;
assert true && red_8 = mulLymm9_8;
assume red_8 = mulLymm9_8 && true;
smull mulH_9 red_9 ymm5_9 ymm0_9;
assert true && red_9 = mulLymm9_9;
assume red_9 = mulLymm9_9 && true;
smull mulH_a red_a ymm5_a ymm0_a;
assert true && red_a = mulLymm9_a;
assume red_a = mulLymm9_a && true;
smull mulH_b red_b ymm5_b ymm0_b;
assert true && red_b = mulLymm9_b;
assume red_b = mulLymm9_b && true;
smull mulH_c red_c ymm5_c ymm0_c;
assert true && red_c = mulLymm9_c;
assume red_c = mulLymm9_c && true;
smull mulH_d red_d ymm5_d ymm0_d;
assert true && red_d = mulLymm9_d;
assume red_d = mulLymm9_d && true;
smull mulH_e red_e ymm5_e ymm0_e;
assert true && red_e = mulLymm9_e;
assume red_e = mulLymm9_e && true;
smull mulH_f red_f ymm5_f ymm0_f;
assert true && red_f = mulLymm9_f;
assume red_f = mulLymm9_f && true;
mov ymm5_0 mulH_0;
mov ymm5_1 mulH_1;
mov ymm5_2 mulH_2;
mov ymm5_3 mulH_3;
mov ymm5_4 mulH_4;
mov ymm5_5 mulH_5;
mov ymm5_6 mulH_6;
mov ymm5_7 mulH_7;
mov ymm5_8 mulH_8;
mov ymm5_9 mulH_9;
mov ymm5_a mulH_a;
mov ymm5_b mulH_b;
mov ymm5_c mulH_c;
mov ymm5_d mulH_d;
mov ymm5_e mulH_e;
mov ymm5_f mulH_f;
(* vpsubw %ymm5,%ymm9,%ymm9                        #! PC = 0x5555555573e1 *)
sub ymm9_0 ymm9_0 ymm5_0;
sub ymm9_1 ymm9_1 ymm5_1;
sub ymm9_2 ymm9_2 ymm5_2;
sub ymm9_3 ymm9_3 ymm5_3;
sub ymm9_4 ymm9_4 ymm5_4;
sub ymm9_5 ymm9_5 ymm5_5;
sub ymm9_6 ymm9_6 ymm5_6;
sub ymm9_7 ymm9_7 ymm5_7;
sub ymm9_8 ymm9_8 ymm5_8;
sub ymm9_9 ymm9_9 ymm5_9;
sub ymm9_a ymm9_a ymm5_a;
sub ymm9_b ymm9_b ymm5_b;
sub ymm9_c ymm9_c ymm5_c;
sub ymm9_d ymm9_d ymm5_d;
sub ymm9_e ymm9_e ymm5_e;
sub ymm9_f ymm9_f ymm5_f;
(* vpbroadcastw 0x106(%rdx),%ymm1                  #! EA = L0x555555561226; Value = 0x6f65ad9a276d0198; PC = 0x5555555573e5 *)
mov ymm1_0 L0x555555561226;
mov ymm1_1 L0x555555561226;
mov ymm1_2 L0x555555561226;
mov ymm1_3 L0x555555561226;
mov ymm1_4 L0x555555561226;
mov ymm1_5 L0x555555561226;
mov ymm1_6 L0x555555561226;
mov ymm1_7 L0x555555561226;
mov ymm1_8 L0x555555561226;
mov ymm1_9 L0x555555561226;
mov ymm1_a L0x555555561226;
mov ymm1_b L0x555555561226;
mov ymm1_c L0x555555561226;
mov ymm1_d L0x555555561226;
mov ymm1_e L0x555555561226;
mov ymm1_f L0x555555561226;
(* vpbroadcastw 0x306(%rdx),%ymm2                  #! EA = L0x555555561426; Value = 0x0165f19a096df198; PC = 0x5555555573ee *)
mov ymm2_0 L0x555555561426;
mov ymm2_1 L0x555555561426;
mov ymm2_2 L0x555555561426;
mov ymm2_3 L0x555555561426;
mov ymm2_4 L0x555555561426;
mov ymm2_5 L0x555555561426;
mov ymm2_6 L0x555555561426;
mov ymm2_7 L0x555555561426;
mov ymm2_8 L0x555555561426;
mov ymm2_9 L0x555555561426;
mov ymm2_a L0x555555561426;
mov ymm2_b L0x555555561426;
mov ymm2_c L0x555555561426;
mov ymm2_d L0x555555561426;
mov ymm2_e L0x555555561426;
mov ymm2_f L0x555555561426;
(* vpmullw %ymm1,%ymm11,%ymm5                      #! PC = 0x5555555573f7 *)
smull mulHymm11_0 mulL_0 ymm1_0 ymm11_0;
smull mulHymm11_1 mulL_1 ymm1_1 ymm11_1;
smull mulHymm11_2 mulL_2 ymm1_2 ymm11_2;
smull mulHymm11_3 mulL_3 ymm1_3 ymm11_3;
smull mulHymm11_4 mulL_4 ymm1_4 ymm11_4;
smull mulHymm11_5 mulL_5 ymm1_5 ymm11_5;
smull mulHymm11_6 mulL_6 ymm1_6 ymm11_6;
smull mulHymm11_7 mulL_7 ymm1_7 ymm11_7;
smull mulHymm11_8 mulL_8 ymm1_8 ymm11_8;
smull mulHymm11_9 mulL_9 ymm1_9 ymm11_9;
smull mulHymm11_a mulL_a ymm1_a ymm11_a;
smull mulHymm11_b mulL_b ymm1_b ymm11_b;
smull mulHymm11_c mulL_c ymm1_c ymm11_c;
smull mulHymm11_d mulL_d ymm1_d ymm11_d;
smull mulHymm11_e mulL_e ymm1_e ymm11_e;
smull mulHymm11_f mulL_f ymm1_f ymm11_f;
cast ymm5_0@sint16 mulL_0;
cast ymm5_1@sint16 mulL_1;
cast ymm5_2@sint16 mulL_2;
cast ymm5_3@sint16 mulL_3;
cast ymm5_4@sint16 mulL_4;
cast ymm5_5@sint16 mulL_5;
cast ymm5_6@sint16 mulL_6;
cast ymm5_7@sint16 mulL_7;
cast ymm5_8@sint16 mulL_8;
cast ymm5_9@sint16 mulL_9;
cast ymm5_a@sint16 mulL_a;
cast ymm5_b@sint16 mulL_b;
cast ymm5_c@sint16 mulL_c;
cast ymm5_d@sint16 mulL_d;
cast ymm5_e@sint16 mulL_e;
cast ymm5_f@sint16 mulL_f;
(* vpmulhw %ymm2,%ymm11,%ymm11                     #! PC = 0x5555555573fb *)
smull mulH_0 mulLymm11_0 ymm11_0 ymm2_0;
smull mulH_1 mulLymm11_1 ymm11_1 ymm2_1;
smull mulH_2 mulLymm11_2 ymm11_2 ymm2_2;
smull mulH_3 mulLymm11_3 ymm11_3 ymm2_3;
smull mulH_4 mulLymm11_4 ymm11_4 ymm2_4;
smull mulH_5 mulLymm11_5 ymm11_5 ymm2_5;
smull mulH_6 mulLymm11_6 ymm11_6 ymm2_6;
smull mulH_7 mulLymm11_7 ymm11_7 ymm2_7;
smull mulH_8 mulLymm11_8 ymm11_8 ymm2_8;
smull mulH_9 mulLymm11_9 ymm11_9 ymm2_9;
smull mulH_a mulLymm11_a ymm11_a ymm2_a;
smull mulH_b mulLymm11_b ymm11_b ymm2_b;
smull mulH_c mulLymm11_c ymm11_c ymm2_c;
smull mulH_d mulLymm11_d ymm11_d ymm2_d;
smull mulH_e mulLymm11_e ymm11_e ymm2_e;
smull mulH_f mulLymm11_f ymm11_f ymm2_f;
mov ymm11_0 mulH_0;
mov ymm11_1 mulH_1;
mov ymm11_2 mulH_2;
mov ymm11_3 mulH_3;
mov ymm11_4 mulH_4;
mov ymm11_5 mulH_5;
mov ymm11_6 mulH_6;
mov ymm11_7 mulH_7;
mov ymm11_8 mulH_8;
mov ymm11_9 mulH_9;
mov ymm11_a mulH_a;
mov ymm11_b mulH_b;
mov ymm11_c mulH_c;
mov ymm11_d mulH_d;
mov ymm11_e mulH_e;
mov ymm11_f mulH_f;
(* vpmulhw %ymm0,%ymm5,%ymm5                       #! PC = 0x5555555573ff *)
smull mulH_0 red_0 ymm5_0 ymm0_0;
assert true && red_0 = mulLymm11_0;
assume red_0 = mulLymm11_0 && true;
smull mulH_1 red_1 ymm5_1 ymm0_1;
assert true && red_1 = mulLymm11_1;
assume red_1 = mulLymm11_1 && true;
smull mulH_2 red_2 ymm5_2 ymm0_2;
assert true && red_2 = mulLymm11_2;
assume red_2 = mulLymm11_2 && true;
smull mulH_3 red_3 ymm5_3 ymm0_3;
assert true && red_3 = mulLymm11_3;
assume red_3 = mulLymm11_3 && true;
smull mulH_4 red_4 ymm5_4 ymm0_4;
assert true && red_4 = mulLymm11_4;
assume red_4 = mulLymm11_4 && true;
smull mulH_5 red_5 ymm5_5 ymm0_5;
assert true && red_5 = mulLymm11_5;
assume red_5 = mulLymm11_5 && true;
smull mulH_6 red_6 ymm5_6 ymm0_6;
assert true && red_6 = mulLymm11_6;
assume red_6 = mulLymm11_6 && true;
smull mulH_7 red_7 ymm5_7 ymm0_7;
assert true && red_7 = mulLymm11_7;
assume red_7 = mulLymm11_7 && true;
smull mulH_8 red_8 ymm5_8 ymm0_8;
assert true && red_8 = mulLymm11_8;
assume red_8 = mulLymm11_8 && true;
smull mulH_9 red_9 ymm5_9 ymm0_9;
assert true && red_9 = mulLymm11_9;
assume red_9 = mulLymm11_9 && true;
smull mulH_a red_a ymm5_a ymm0_a;
assert true && red_a = mulLymm11_a;
assume red_a = mulLymm11_a && true;
smull mulH_b red_b ymm5_b ymm0_b;
assert true && red_b = mulLymm11_b;
assume red_b = mulLymm11_b && true;
smull mulH_c red_c ymm5_c ymm0_c;
assert true && red_c = mulLymm11_c;
assume red_c = mulLymm11_c && true;
smull mulH_d red_d ymm5_d ymm0_d;
assert true && red_d = mulLymm11_d;
assume red_d = mulLymm11_d && true;
smull mulH_e red_e ymm5_e ymm0_e;
assert true && red_e = mulLymm11_e;
assume red_e = mulLymm11_e && true;
smull mulH_f red_f ymm5_f ymm0_f;
assert true && red_f = mulLymm11_f;
assume red_f = mulLymm11_f && true;
mov ymm5_0 mulH_0;
mov ymm5_1 mulH_1;
mov ymm5_2 mulH_2;
mov ymm5_3 mulH_3;
mov ymm5_4 mulH_4;
mov ymm5_5 mulH_5;
mov ymm5_6 mulH_6;
mov ymm5_7 mulH_7;
mov ymm5_8 mulH_8;
mov ymm5_9 mulH_9;
mov ymm5_a mulH_a;
mov ymm5_b mulH_b;
mov ymm5_c mulH_c;
mov ymm5_d mulH_d;
mov ymm5_e mulH_e;
mov ymm5_f mulH_f;
(* vpsubw %ymm5,%ymm11,%ymm11                      #! PC = 0x555555557403 *)
sub ymm11_0 ymm11_0 ymm5_0;
sub ymm11_1 ymm11_1 ymm5_1;
sub ymm11_2 ymm11_2 ymm5_2;
sub ymm11_3 ymm11_3 ymm5_3;
sub ymm11_4 ymm11_4 ymm5_4;
sub ymm11_5 ymm11_5 ymm5_5;
sub ymm11_6 ymm11_6 ymm5_6;
sub ymm11_7 ymm11_7 ymm5_7;
sub ymm11_8 ymm11_8 ymm5_8;
sub ymm11_9 ymm11_9 ymm5_9;
sub ymm11_a ymm11_a ymm5_a;
sub ymm11_b ymm11_b ymm5_b;
sub ymm11_c ymm11_c ymm5_c;
sub ymm11_d ymm11_d ymm5_d;
sub ymm11_e ymm11_e ymm5_e;
sub ymm11_f ymm11_f ymm5_f;
(* vpaddw %ymm4,%ymm3,%ymm5                        #! PC = 0x555555557407 *)
add ymm5_0 ymm3_0 ymm4_0;
add ymm5_1 ymm3_1 ymm4_1;
add ymm5_2 ymm3_2 ymm4_2;
add ymm5_3 ymm3_3 ymm4_3;
add ymm5_4 ymm3_4 ymm4_4;
add ymm5_5 ymm3_5 ymm4_5;
add ymm5_6 ymm3_6 ymm4_6;
add ymm5_7 ymm3_7 ymm4_7;
add ymm5_8 ymm3_8 ymm4_8;
add ymm5_9 ymm3_9 ymm4_9;
add ymm5_a ymm3_a ymm4_a;
add ymm5_b ymm3_b ymm4_b;
add ymm5_c ymm3_c ymm4_c;
add ymm5_d ymm3_d ymm4_d;
add ymm5_e ymm3_e ymm4_e;
add ymm5_f ymm3_f ymm4_f;
(* vpsubw %ymm4,%ymm3,%ymm4                        #! PC = 0x55555555740b *)
sub ymm4_0 ymm3_0 ymm4_0;
sub ymm4_1 ymm3_1 ymm4_1;
sub ymm4_2 ymm3_2 ymm4_2;
sub ymm4_3 ymm3_3 ymm4_3;
sub ymm4_4 ymm3_4 ymm4_4;
sub ymm4_5 ymm3_5 ymm4_5;
sub ymm4_6 ymm3_6 ymm4_6;
sub ymm4_7 ymm3_7 ymm4_7;
sub ymm4_8 ymm3_8 ymm4_8;
sub ymm4_9 ymm3_9 ymm4_9;
sub ymm4_a ymm3_a ymm4_a;
sub ymm4_b ymm3_b ymm4_b;
sub ymm4_c ymm3_c ymm4_c;
sub ymm4_d ymm3_d ymm4_d;
sub ymm4_e ymm3_e ymm4_e;
sub ymm4_f ymm3_f ymm4_f;
(* vpaddw %ymm7,%ymm6,%ymm3                        #! PC = 0x55555555740f *)
add ymm3_0 ymm6_0 ymm7_0;
add ymm3_1 ymm6_1 ymm7_1;
add ymm3_2 ymm6_2 ymm7_2;
add ymm3_3 ymm6_3 ymm7_3;
add ymm3_4 ymm6_4 ymm7_4;
add ymm3_5 ymm6_5 ymm7_5;
add ymm3_6 ymm6_6 ymm7_6;
add ymm3_7 ymm6_7 ymm7_7;
add ymm3_8 ymm6_8 ymm7_8;
add ymm3_9 ymm6_9 ymm7_9;
add ymm3_a ymm6_a ymm7_a;
add ymm3_b ymm6_b ymm7_b;
add ymm3_c ymm6_c ymm7_c;
add ymm3_d ymm6_d ymm7_d;
add ymm3_e ymm6_e ymm7_e;
add ymm3_f ymm6_f ymm7_f;
(* vpsubw %ymm7,%ymm6,%ymm7                        #! PC = 0x555555557413 *)
sub ymm7_0 ymm6_0 ymm7_0;
sub ymm7_1 ymm6_1 ymm7_1;
sub ymm7_2 ymm6_2 ymm7_2;
sub ymm7_3 ymm6_3 ymm7_3;
sub ymm7_4 ymm6_4 ymm7_4;
sub ymm7_5 ymm6_5 ymm7_5;
sub ymm7_6 ymm6_6 ymm7_6;
sub ymm7_7 ymm6_7 ymm7_7;
sub ymm7_8 ymm6_8 ymm7_8;
sub ymm7_9 ymm6_9 ymm7_9;
sub ymm7_a ymm6_a ymm7_a;
sub ymm7_b ymm6_b ymm7_b;
sub ymm7_c ymm6_c ymm7_c;
sub ymm7_d ymm6_d ymm7_d;
sub ymm7_e ymm6_e ymm7_e;
sub ymm7_f ymm6_f ymm7_f;
(* vpaddw %ymm9,%ymm8,%ymm6                        #! PC = 0x555555557417 *)
add ymm6_0 ymm8_0 ymm9_0;
add ymm6_1 ymm8_1 ymm9_1;
add ymm6_2 ymm8_2 ymm9_2;
add ymm6_3 ymm8_3 ymm9_3;
add ymm6_4 ymm8_4 ymm9_4;
add ymm6_5 ymm8_5 ymm9_5;
add ymm6_6 ymm8_6 ymm9_6;
add ymm6_7 ymm8_7 ymm9_7;
add ymm6_8 ymm8_8 ymm9_8;
add ymm6_9 ymm8_9 ymm9_9;
add ymm6_a ymm8_a ymm9_a;
add ymm6_b ymm8_b ymm9_b;
add ymm6_c ymm8_c ymm9_c;
add ymm6_d ymm8_d ymm9_d;
add ymm6_e ymm8_e ymm9_e;
add ymm6_f ymm8_f ymm9_f;
(* vpsubw %ymm9,%ymm8,%ymm9                        #! PC = 0x55555555741c *)
sub ymm9_0 ymm8_0 ymm9_0;
sub ymm9_1 ymm8_1 ymm9_1;
sub ymm9_2 ymm8_2 ymm9_2;
sub ymm9_3 ymm8_3 ymm9_3;
sub ymm9_4 ymm8_4 ymm9_4;
sub ymm9_5 ymm8_5 ymm9_5;
sub ymm9_6 ymm8_6 ymm9_6;
sub ymm9_7 ymm8_7 ymm9_7;
sub ymm9_8 ymm8_8 ymm9_8;
sub ymm9_9 ymm8_9 ymm9_9;
sub ymm9_a ymm8_a ymm9_a;
sub ymm9_b ymm8_b ymm9_b;
sub ymm9_c ymm8_c ymm9_c;
sub ymm9_d ymm8_d ymm9_d;
sub ymm9_e ymm8_e ymm9_e;
sub ymm9_f ymm8_f ymm9_f;
(* vpaddw %ymm11,%ymm10,%ymm8                      #! PC = 0x555555557421 *)
add ymm8_0 ymm10_0 ymm11_0;
add ymm8_1 ymm10_1 ymm11_1;
add ymm8_2 ymm10_2 ymm11_2;
add ymm8_3 ymm10_3 ymm11_3;
add ymm8_4 ymm10_4 ymm11_4;
add ymm8_5 ymm10_5 ymm11_5;
add ymm8_6 ymm10_6 ymm11_6;
add ymm8_7 ymm10_7 ymm11_7;
add ymm8_8 ymm10_8 ymm11_8;
add ymm8_9 ymm10_9 ymm11_9;
add ymm8_a ymm10_a ymm11_a;
add ymm8_b ymm10_b ymm11_b;
add ymm8_c ymm10_c ymm11_c;
add ymm8_d ymm10_d ymm11_d;
add ymm8_e ymm10_e ymm11_e;
add ymm8_f ymm10_f ymm11_f;
(* vpsubw %ymm11,%ymm10,%ymm11                     #! PC = 0x555555557426 *)
sub ymm11_0 ymm10_0 ymm11_0;
sub ymm11_1 ymm10_1 ymm11_1;
sub ymm11_2 ymm10_2 ymm11_2;
sub ymm11_3 ymm10_3 ymm11_3;
sub ymm11_4 ymm10_4 ymm11_4;
sub ymm11_5 ymm10_5 ymm11_5;
sub ymm11_6 ymm10_6 ymm11_6;
sub ymm11_7 ymm10_7 ymm11_7;
sub ymm11_8 ymm10_8 ymm11_8;
sub ymm11_9 ymm10_9 ymm11_9;
sub ymm11_a ymm10_a ymm11_a;
sub ymm11_b ymm10_b ymm11_b;
sub ymm11_c ymm10_c ymm11_c;
sub ymm11_d ymm10_d ymm11_d;
sub ymm11_e ymm10_e ymm11_e;
sub ymm11_f ymm10_f ymm11_f;
(* vmovdqa %ymm5,0xc0(%rdi)                        #! EA = L0x7fffffffd3a0; PC = 0x55555555742b *)
mov L0x7fffffffd3a0 ymm5_0;
mov L0x7fffffffd3a2 ymm5_1;
mov L0x7fffffffd3a4 ymm5_2;
mov L0x7fffffffd3a6 ymm5_3;
mov L0x7fffffffd3a8 ymm5_4;
mov L0x7fffffffd3aa ymm5_5;
mov L0x7fffffffd3ac ymm5_6;
mov L0x7fffffffd3ae ymm5_7;
mov L0x7fffffffd3b0 ymm5_8;
mov L0x7fffffffd3b2 ymm5_9;
mov L0x7fffffffd3b4 ymm5_a;
mov L0x7fffffffd3b6 ymm5_b;
mov L0x7fffffffd3b8 ymm5_c;
mov L0x7fffffffd3ba ymm5_d;
mov L0x7fffffffd3bc ymm5_e;
mov L0x7fffffffd3be ymm5_f;
(* vmovdqa %ymm4,0x1c0(%rdi)                       #! EA = L0x7fffffffd4a0; PC = 0x555555557433 *)
mov L0x7fffffffd4a0 ymm4_0;
mov L0x7fffffffd4a2 ymm4_1;
mov L0x7fffffffd4a4 ymm4_2;
mov L0x7fffffffd4a6 ymm4_3;
mov L0x7fffffffd4a8 ymm4_4;
mov L0x7fffffffd4aa ymm4_5;
mov L0x7fffffffd4ac ymm4_6;
mov L0x7fffffffd4ae ymm4_7;
mov L0x7fffffffd4b0 ymm4_8;
mov L0x7fffffffd4b2 ymm4_9;
mov L0x7fffffffd4b4 ymm4_a;
mov L0x7fffffffd4b6 ymm4_b;
mov L0x7fffffffd4b8 ymm4_c;
mov L0x7fffffffd4ba ymm4_d;
mov L0x7fffffffd4bc ymm4_e;
mov L0x7fffffffd4be ymm4_f;
(* vmovdqa %ymm3,0x2c0(%rdi)                       #! EA = L0x7fffffffd5a0; PC = 0x55555555743b *)
mov L0x7fffffffd5a0 ymm3_0;
mov L0x7fffffffd5a2 ymm3_1;
mov L0x7fffffffd5a4 ymm3_2;
mov L0x7fffffffd5a6 ymm3_3;
mov L0x7fffffffd5a8 ymm3_4;
mov L0x7fffffffd5aa ymm3_5;
mov L0x7fffffffd5ac ymm3_6;
mov L0x7fffffffd5ae ymm3_7;
mov L0x7fffffffd5b0 ymm3_8;
mov L0x7fffffffd5b2 ymm3_9;
mov L0x7fffffffd5b4 ymm3_a;
mov L0x7fffffffd5b6 ymm3_b;
mov L0x7fffffffd5b8 ymm3_c;
mov L0x7fffffffd5ba ymm3_d;
mov L0x7fffffffd5bc ymm3_e;
mov L0x7fffffffd5be ymm3_f;
(* vmovdqa %ymm7,0x3c0(%rdi)                       #! EA = L0x7fffffffd6a0; PC = 0x555555557443 *)
mov L0x7fffffffd6a0 ymm7_0;
mov L0x7fffffffd6a2 ymm7_1;
mov L0x7fffffffd6a4 ymm7_2;
mov L0x7fffffffd6a6 ymm7_3;
mov L0x7fffffffd6a8 ymm7_4;
mov L0x7fffffffd6aa ymm7_5;
mov L0x7fffffffd6ac ymm7_6;
mov L0x7fffffffd6ae ymm7_7;
mov L0x7fffffffd6b0 ymm7_8;
mov L0x7fffffffd6b2 ymm7_9;
mov L0x7fffffffd6b4 ymm7_a;
mov L0x7fffffffd6b6 ymm7_b;
mov L0x7fffffffd6b8 ymm7_c;
mov L0x7fffffffd6ba ymm7_d;
mov L0x7fffffffd6bc ymm7_e;
mov L0x7fffffffd6be ymm7_f;
(* vmovdqa %ymm6,0x4c0(%rdi)                       #! EA = L0x7fffffffd7a0; PC = 0x55555555744b *)
mov L0x7fffffffd7a0 ymm6_0;
mov L0x7fffffffd7a2 ymm6_1;
mov L0x7fffffffd7a4 ymm6_2;
mov L0x7fffffffd7a6 ymm6_3;
mov L0x7fffffffd7a8 ymm6_4;
mov L0x7fffffffd7aa ymm6_5;
mov L0x7fffffffd7ac ymm6_6;
mov L0x7fffffffd7ae ymm6_7;
mov L0x7fffffffd7b0 ymm6_8;
mov L0x7fffffffd7b2 ymm6_9;
mov L0x7fffffffd7b4 ymm6_a;
mov L0x7fffffffd7b6 ymm6_b;
mov L0x7fffffffd7b8 ymm6_c;
mov L0x7fffffffd7ba ymm6_d;
mov L0x7fffffffd7bc ymm6_e;
mov L0x7fffffffd7be ymm6_f;
(* vmovdqa %ymm9,0x5c0(%rdi)                       #! EA = L0x7fffffffd8a0; PC = 0x555555557453 *)
mov L0x7fffffffd8a0 ymm9_0;
mov L0x7fffffffd8a2 ymm9_1;
mov L0x7fffffffd8a4 ymm9_2;
mov L0x7fffffffd8a6 ymm9_3;
mov L0x7fffffffd8a8 ymm9_4;
mov L0x7fffffffd8aa ymm9_5;
mov L0x7fffffffd8ac ymm9_6;
mov L0x7fffffffd8ae ymm9_7;
mov L0x7fffffffd8b0 ymm9_8;
mov L0x7fffffffd8b2 ymm9_9;
mov L0x7fffffffd8b4 ymm9_a;
mov L0x7fffffffd8b6 ymm9_b;
mov L0x7fffffffd8b8 ymm9_c;
mov L0x7fffffffd8ba ymm9_d;
mov L0x7fffffffd8bc ymm9_e;
mov L0x7fffffffd8be ymm9_f;
(* vmovdqa %ymm8,0x6c0(%rdi)                       #! EA = L0x7fffffffd9a0; PC = 0x55555555745b *)
mov L0x7fffffffd9a0 ymm8_0;
mov L0x7fffffffd9a2 ymm8_1;
mov L0x7fffffffd9a4 ymm8_2;
mov L0x7fffffffd9a6 ymm8_3;
mov L0x7fffffffd9a8 ymm8_4;
mov L0x7fffffffd9aa ymm8_5;
mov L0x7fffffffd9ac ymm8_6;
mov L0x7fffffffd9ae ymm8_7;
mov L0x7fffffffd9b0 ymm8_8;
mov L0x7fffffffd9b2 ymm8_9;
mov L0x7fffffffd9b4 ymm8_a;
mov L0x7fffffffd9b6 ymm8_b;
mov L0x7fffffffd9b8 ymm8_c;
mov L0x7fffffffd9ba ymm8_d;
mov L0x7fffffffd9bc ymm8_e;
mov L0x7fffffffd9be ymm8_f;
(* vmovdqa %ymm11,0x7c0(%rdi)                      #! EA = L0x7fffffffdaa0; PC = 0x555555557463 *)
mov L0x7fffffffdaa0 ymm11_0;
mov L0x7fffffffdaa2 ymm11_1;
mov L0x7fffffffdaa4 ymm11_2;
mov L0x7fffffffdaa6 ymm11_3;
mov L0x7fffffffdaa8 ymm11_4;
mov L0x7fffffffdaaa ymm11_5;
mov L0x7fffffffdaac ymm11_6;
mov L0x7fffffffdaae ymm11_7;
mov L0x7fffffffdab0 ymm11_8;
mov L0x7fffffffdab2 ymm11_9;
mov L0x7fffffffdab4 ymm11_a;
mov L0x7fffffffdab6 ymm11_b;
mov L0x7fffffffdab8 ymm11_c;
mov L0x7fffffffdaba ymm11_d;
mov L0x7fffffffdabc ymm11_e;
mov L0x7fffffffdabe ymm11_f;


(**************** LEVELS 0-2, 6 *****************)


(**************** CUT 109,  0 *****************)

ecut 
  and [
eqmod (c060*x** 96+c061*x** 97+c062*x** 98+c063*x** 99+
       c064*x**100+c065*x**101+c066*x**102+c067*x**103+
       c068*x**104+c069*x**105+c06a*x**106+c06b*x**107+
       c06c*x**108+c06d*x**109+c06e*x**110+c06f*x**111+
       c0e0*x**224+c0e1*x**225+c0e2*x**226+c0e3*x**227+
       c0e4*x**228+c0e5*x**229+c0e6*x**230+c0e7*x**231+
       c0e8*x**232+c0e9*x**233+c0ea*x**234+c0eb*x**235+
       c0ec*x**236+c0ed*x**237+c0ee*x**238+c0ef*x**239+
       c160*x**352+c161*x**353+c162*x**354+c163*x**355+
       c164*x**356+c165*x**357+c166*x**358+c167*x**359+
       c168*x**360+c169*x**361+c16a*x**362+c16b*x**363+
       c16c*x**364+c16d*x**365+c16e*x**366+c16f*x**367+
       c1e0*x**480+c1e1*x**481+c1e2*x**482+c1e3*x**483+
       c1e4*x**484+c1e5*x**485+c1e6*x**486+c1e7*x**487+
       c1e8*x**488+c1e9*x**489+c1ea*x**490+c1eb*x**491+
       c1ec*x**492+c1ed*x**493+c1ee*x**494+c1ef*x**495)
      (L0x7fffffffd3a0*x**96+L0x7fffffffd3a2*x**97+L0x7fffffffd3a4*x**98+
       L0x7fffffffd3a6*x**99+L0x7fffffffd3a8*x**100+L0x7fffffffd3aa*x**101+
       L0x7fffffffd3ac*x**102+L0x7fffffffd3ae*x**103+L0x7fffffffd3b0*x**104+
       L0x7fffffffd3b2*x**105+L0x7fffffffd3b4*x**106+L0x7fffffffd3b6*x**107+
       L0x7fffffffd3b8*x**108+L0x7fffffffd3ba*x**109+L0x7fffffffd3bc*x**110+
       L0x7fffffffd3be*x**111)
      [10753, x**128 - 1],
eqmod (c060*x** 96+c061*x** 97+c062*x** 98+c063*x** 99+
       c064*x**100+c065*x**101+c066*x**102+c067*x**103+
       c068*x**104+c069*x**105+c06a*x**106+c06b*x**107+
       c06c*x**108+c06d*x**109+c06e*x**110+c06f*x**111+
       c0e0*x**224+c0e1*x**225+c0e2*x**226+c0e3*x**227+
       c0e4*x**228+c0e5*x**229+c0e6*x**230+c0e7*x**231+
       c0e8*x**232+c0e9*x**233+c0ea*x**234+c0eb*x**235+
       c0ec*x**236+c0ed*x**237+c0ee*x**238+c0ef*x**239+
       c160*x**352+c161*x**353+c162*x**354+c163*x**355+
       c164*x**356+c165*x**357+c166*x**358+c167*x**359+
       c168*x**360+c169*x**361+c16a*x**362+c16b*x**363+
       c16c*x**364+c16d*x**365+c16e*x**366+c16f*x**367+
       c1e0*x**480+c1e1*x**481+c1e2*x**482+c1e3*x**483+
       c1e4*x**484+c1e5*x**485+c1e6*x**486+c1e7*x**487+
       c1e8*x**488+c1e9*x**489+c1ea*x**490+c1eb*x**491+
       c1ec*x**492+c1ed*x**493+c1ee*x**494+c1ef*x**495)
      (L0x7fffffffd4a0*x**96+L0x7fffffffd4a2*x**97+L0x7fffffffd4a4*x**98+
       L0x7fffffffd4a6*x**99+L0x7fffffffd4a8*x**100+L0x7fffffffd4aa*x**101+
       L0x7fffffffd4ac*x**102+L0x7fffffffd4ae*x**103+L0x7fffffffd4b0*x**104+
       L0x7fffffffd4b2*x**105+L0x7fffffffd4b4*x**106+L0x7fffffffd4b6*x**107+
       L0x7fffffffd4b8*x**108+L0x7fffffffd4ba*x**109+L0x7fffffffd4bc*x**110+
       L0x7fffffffd4be*x**111)
      [10753, x**128 - 10752],
eqmod (c060*x** 96+c061*x** 97+c062*x** 98+c063*x** 99+
       c064*x**100+c065*x**101+c066*x**102+c067*x**103+
       c068*x**104+c069*x**105+c06a*x**106+c06b*x**107+
       c06c*x**108+c06d*x**109+c06e*x**110+c06f*x**111+
       c0e0*x**224+c0e1*x**225+c0e2*x**226+c0e3*x**227+
       c0e4*x**228+c0e5*x**229+c0e6*x**230+c0e7*x**231+
       c0e8*x**232+c0e9*x**233+c0ea*x**234+c0eb*x**235+
       c0ec*x**236+c0ed*x**237+c0ee*x**238+c0ef*x**239+
       c160*x**352+c161*x**353+c162*x**354+c163*x**355+
       c164*x**356+c165*x**357+c166*x**358+c167*x**359+
       c168*x**360+c169*x**361+c16a*x**362+c16b*x**363+
       c16c*x**364+c16d*x**365+c16e*x**366+c16f*x**367+
       c1e0*x**480+c1e1*x**481+c1e2*x**482+c1e3*x**483+
       c1e4*x**484+c1e5*x**485+c1e6*x**486+c1e7*x**487+
       c1e8*x**488+c1e9*x**489+c1ea*x**490+c1eb*x**491+
       c1ec*x**492+c1ed*x**493+c1ee*x**494+c1ef*x**495)
      (L0x7fffffffd5a0*x**96+L0x7fffffffd5a2*x**97+L0x7fffffffd5a4*x**98+
       L0x7fffffffd5a6*x**99+L0x7fffffffd5a8*x**100+L0x7fffffffd5aa*x**101+
       L0x7fffffffd5ac*x**102+L0x7fffffffd5ae*x**103+L0x7fffffffd5b0*x**104+
       L0x7fffffffd5b2*x**105+L0x7fffffffd5b4*x**106+L0x7fffffffd5b6*x**107+
       L0x7fffffffd5b8*x**108+L0x7fffffffd5ba*x**109+L0x7fffffffd5bc*x**110+
       L0x7fffffffd5be*x**111)
      [10753, x**128 - 6264],
eqmod (c060*x** 96+c061*x** 97+c062*x** 98+c063*x** 99+
       c064*x**100+c065*x**101+c066*x**102+c067*x**103+
       c068*x**104+c069*x**105+c06a*x**106+c06b*x**107+
       c06c*x**108+c06d*x**109+c06e*x**110+c06f*x**111+
       c0e0*x**224+c0e1*x**225+c0e2*x**226+c0e3*x**227+
       c0e4*x**228+c0e5*x**229+c0e6*x**230+c0e7*x**231+
       c0e8*x**232+c0e9*x**233+c0ea*x**234+c0eb*x**235+
       c0ec*x**236+c0ed*x**237+c0ee*x**238+c0ef*x**239+
       c160*x**352+c161*x**353+c162*x**354+c163*x**355+
       c164*x**356+c165*x**357+c166*x**358+c167*x**359+
       c168*x**360+c169*x**361+c16a*x**362+c16b*x**363+
       c16c*x**364+c16d*x**365+c16e*x**366+c16f*x**367+
       c1e0*x**480+c1e1*x**481+c1e2*x**482+c1e3*x**483+
       c1e4*x**484+c1e5*x**485+c1e6*x**486+c1e7*x**487+
       c1e8*x**488+c1e9*x**489+c1ea*x**490+c1eb*x**491+
       c1ec*x**492+c1ed*x**493+c1ee*x**494+c1ef*x**495)
      (L0x7fffffffd6a0*x**96+L0x7fffffffd6a2*x**97+L0x7fffffffd6a4*x**98+
       L0x7fffffffd6a6*x**99+L0x7fffffffd6a8*x**100+L0x7fffffffd6aa*x**101+
       L0x7fffffffd6ac*x**102+L0x7fffffffd6ae*x**103+L0x7fffffffd6b0*x**104+
       L0x7fffffffd6b2*x**105+L0x7fffffffd6b4*x**106+L0x7fffffffd6b6*x**107+
       L0x7fffffffd6b8*x**108+L0x7fffffffd6ba*x**109+L0x7fffffffd6bc*x**110+
       L0x7fffffffd6be*x**111)
      [10753, x**128 - 4489],
eqmod (c060*x** 96+c061*x** 97+c062*x** 98+c063*x** 99+
       c064*x**100+c065*x**101+c066*x**102+c067*x**103+
       c068*x**104+c069*x**105+c06a*x**106+c06b*x**107+
       c06c*x**108+c06d*x**109+c06e*x**110+c06f*x**111+
       c0e0*x**224+c0e1*x**225+c0e2*x**226+c0e3*x**227+
       c0e4*x**228+c0e5*x**229+c0e6*x**230+c0e7*x**231+
       c0e8*x**232+c0e9*x**233+c0ea*x**234+c0eb*x**235+
       c0ec*x**236+c0ed*x**237+c0ee*x**238+c0ef*x**239+
       c160*x**352+c161*x**353+c162*x**354+c163*x**355+
       c164*x**356+c165*x**357+c166*x**358+c167*x**359+
       c168*x**360+c169*x**361+c16a*x**362+c16b*x**363+
       c16c*x**364+c16d*x**365+c16e*x**366+c16f*x**367+
       c1e0*x**480+c1e1*x**481+c1e2*x**482+c1e3*x**483+
       c1e4*x**484+c1e5*x**485+c1e6*x**486+c1e7*x**487+
       c1e8*x**488+c1e9*x**489+c1ea*x**490+c1eb*x**491+
       c1ec*x**492+c1ed*x**493+c1ee*x**494+c1ef*x**495)
      (L0x7fffffffd7a0*x**96+L0x7fffffffd7a2*x**97+L0x7fffffffd7a4*x**98+
       L0x7fffffffd7a6*x**99+L0x7fffffffd7a8*x**100+L0x7fffffffd7aa*x**101+
       L0x7fffffffd7ac*x**102+L0x7fffffffd7ae*x**103+L0x7fffffffd7b0*x**104+
       L0x7fffffffd7b2*x**105+L0x7fffffffd7b4*x**106+L0x7fffffffd7b6*x**107+
       L0x7fffffffd7b8*x**108+L0x7fffffffd7ba*x**109+L0x7fffffffd7bc*x**110+
       L0x7fffffffd7be*x**111)
      [10753, x**128 - 321],
eqmod (c060*x** 96+c061*x** 97+c062*x** 98+c063*x** 99+
       c064*x**100+c065*x**101+c066*x**102+c067*x**103+
       c068*x**104+c069*x**105+c06a*x**106+c06b*x**107+
       c06c*x**108+c06d*x**109+c06e*x**110+c06f*x**111+
       c0e0*x**224+c0e1*x**225+c0e2*x**226+c0e3*x**227+
       c0e4*x**228+c0e5*x**229+c0e6*x**230+c0e7*x**231+
       c0e8*x**232+c0e9*x**233+c0ea*x**234+c0eb*x**235+
       c0ec*x**236+c0ed*x**237+c0ee*x**238+c0ef*x**239+
       c160*x**352+c161*x**353+c162*x**354+c163*x**355+
       c164*x**356+c165*x**357+c166*x**358+c167*x**359+
       c168*x**360+c169*x**361+c16a*x**362+c16b*x**363+
       c16c*x**364+c16d*x**365+c16e*x**366+c16f*x**367+
       c1e0*x**480+c1e1*x**481+c1e2*x**482+c1e3*x**483+
       c1e4*x**484+c1e5*x**485+c1e6*x**486+c1e7*x**487+
       c1e8*x**488+c1e9*x**489+c1ea*x**490+c1eb*x**491+
       c1ec*x**492+c1ed*x**493+c1ee*x**494+c1ef*x**495)
      (L0x7fffffffd8a0*x**96+L0x7fffffffd8a2*x**97+L0x7fffffffd8a4*x**98+
       L0x7fffffffd8a6*x**99+L0x7fffffffd8a8*x**100+L0x7fffffffd8aa*x**101+
       L0x7fffffffd8ac*x**102+L0x7fffffffd8ae*x**103+L0x7fffffffd8b0*x**104+
       L0x7fffffffd8b2*x**105+L0x7fffffffd8b4*x**106+L0x7fffffffd8b6*x**107+
       L0x7fffffffd8b8*x**108+L0x7fffffffd8ba*x**109+L0x7fffffffd8bc*x**110+
       L0x7fffffffd8be*x**111)
      [10753, x**128 - 10432],
eqmod (c060*x** 96+c061*x** 97+c062*x** 98+c063*x** 99+
       c064*x**100+c065*x**101+c066*x**102+c067*x**103+
       c068*x**104+c069*x**105+c06a*x**106+c06b*x**107+
       c06c*x**108+c06d*x**109+c06e*x**110+c06f*x**111+
       c0e0*x**224+c0e1*x**225+c0e2*x**226+c0e3*x**227+
       c0e4*x**228+c0e5*x**229+c0e6*x**230+c0e7*x**231+
       c0e8*x**232+c0e9*x**233+c0ea*x**234+c0eb*x**235+
       c0ec*x**236+c0ed*x**237+c0ee*x**238+c0ef*x**239+
       c160*x**352+c161*x**353+c162*x**354+c163*x**355+
       c164*x**356+c165*x**357+c166*x**358+c167*x**359+
       c168*x**360+c169*x**361+c16a*x**362+c16b*x**363+
       c16c*x**364+c16d*x**365+c16e*x**366+c16f*x**367+
       c1e0*x**480+c1e1*x**481+c1e2*x**482+c1e3*x**483+
       c1e4*x**484+c1e5*x**485+c1e6*x**486+c1e7*x**487+
       c1e8*x**488+c1e9*x**489+c1ea*x**490+c1eb*x**491+
       c1ec*x**492+c1ed*x**493+c1ee*x**494+c1ef*x**495)
      (L0x7fffffffd9a0*x**96+L0x7fffffffd9a2*x**97+L0x7fffffffd9a4*x**98+
       L0x7fffffffd9a6*x**99+L0x7fffffffd9a8*x**100+L0x7fffffffd9aa*x**101+
       L0x7fffffffd9ac*x**102+L0x7fffffffd9ae*x**103+L0x7fffffffd9b0*x**104+
       L0x7fffffffd9b2*x**105+L0x7fffffffd9b4*x**106+L0x7fffffffd9b6*x**107+
       L0x7fffffffd9b8*x**108+L0x7fffffffd9ba*x**109+L0x7fffffffd9bc*x**110+
       L0x7fffffffd9be*x**111)
      [10753, x**128 - 10686],
eqmod (c060*x** 96+c061*x** 97+c062*x** 98+c063*x** 99+
       c064*x**100+c065*x**101+c066*x**102+c067*x**103+
       c068*x**104+c069*x**105+c06a*x**106+c06b*x**107+
       c06c*x**108+c06d*x**109+c06e*x**110+c06f*x**111+
       c0e0*x**224+c0e1*x**225+c0e2*x**226+c0e3*x**227+
       c0e4*x**228+c0e5*x**229+c0e6*x**230+c0e7*x**231+
       c0e8*x**232+c0e9*x**233+c0ea*x**234+c0eb*x**235+
       c0ec*x**236+c0ed*x**237+c0ee*x**238+c0ef*x**239+
       c160*x**352+c161*x**353+c162*x**354+c163*x**355+
       c164*x**356+c165*x**357+c166*x**358+c167*x**359+
       c168*x**360+c169*x**361+c16a*x**362+c16b*x**363+
       c16c*x**364+c16d*x**365+c16e*x**366+c16f*x**367+
       c1e0*x**480+c1e1*x**481+c1e2*x**482+c1e3*x**483+
       c1e4*x**484+c1e5*x**485+c1e6*x**486+c1e7*x**487+
       c1e8*x**488+c1e9*x**489+c1ea*x**490+c1eb*x**491+
       c1ec*x**492+c1ed*x**493+c1ee*x**494+c1ef*x**495)
      (L0x7fffffffdaa0*x**96+L0x7fffffffdaa2*x**97+L0x7fffffffdaa4*x**98+
       L0x7fffffffdaa6*x**99+L0x7fffffffdaa8*x**100+L0x7fffffffdaaa*x**101+
       L0x7fffffffdaac*x**102+L0x7fffffffdaae*x**103+L0x7fffffffdab0*x**104+
       L0x7fffffffdab2*x**105+L0x7fffffffdab4*x**106+L0x7fffffffdab6*x**107+
       L0x7fffffffdab8*x**108+L0x7fffffffdaba*x**109+L0x7fffffffdabc*x**110+
       L0x7fffffffdabe*x**111)
      [10753, x**128 - 67]
  ];


(* === split the CUT into 8 slices === *)

(**************** CUT 110,  0 *****************)

ecut true;

(**************** CUT 111,  0 *****************)

ecut 
  and [
eqmod (c060*x** 96+c061*x** 97+c062*x** 98+c063*x** 99+
       c064*x**100+c065*x**101+c066*x**102+c067*x**103+
       c068*x**104+c069*x**105+c06a*x**106+c06b*x**107+
       c06c*x**108+c06d*x**109+c06e*x**110+c06f*x**111+
       c0e0*x**224+c0e1*x**225+c0e2*x**226+c0e3*x**227+
       c0e4*x**228+c0e5*x**229+c0e6*x**230+c0e7*x**231+
       c0e8*x**232+c0e9*x**233+c0ea*x**234+c0eb*x**235+
       c0ec*x**236+c0ed*x**237+c0ee*x**238+c0ef*x**239+
       c160*x**352+c161*x**353+c162*x**354+c163*x**355+
       c164*x**356+c165*x**357+c166*x**358+c167*x**359+
       c168*x**360+c169*x**361+c16a*x**362+c16b*x**363+
       c16c*x**364+c16d*x**365+c16e*x**366+c16f*x**367+
       c1e0*x**480+c1e1*x**481+c1e2*x**482+c1e3*x**483+
       c1e4*x**484+c1e5*x**485+c1e6*x**486+c1e7*x**487+
       c1e8*x**488+c1e9*x**489+c1ea*x**490+c1eb*x**491+
       c1ec*x**492+c1ed*x**493+c1ee*x**494+c1ef*x**495)
      (L0x7fffffffd3a0*x**96+L0x7fffffffd3a2*x**97+L0x7fffffffd3a4*x**98+
       L0x7fffffffd3a6*x**99+L0x7fffffffd3a8*x**100+L0x7fffffffd3aa*x**101+
       L0x7fffffffd3ac*x**102+L0x7fffffffd3ae*x**103+L0x7fffffffd3b0*x**104+
       L0x7fffffffd3b2*x**105+L0x7fffffffd3b4*x**106+L0x7fffffffd3b6*x**107+
       L0x7fffffffd3b8*x**108+L0x7fffffffd3ba*x**109+L0x7fffffffd3bc*x**110+
       L0x7fffffffd3be*x**111)
      [10753, x**128 - 1]
  ] prove with [cuts [109]];


(**************** CUT 112,  0 *****************)

ecut true;

(**************** CUT 113,  0 *****************)

ecut 
  and [
eqmod (c060*x** 96+c061*x** 97+c062*x** 98+c063*x** 99+
       c064*x**100+c065*x**101+c066*x**102+c067*x**103+
       c068*x**104+c069*x**105+c06a*x**106+c06b*x**107+
       c06c*x**108+c06d*x**109+c06e*x**110+c06f*x**111+
       c0e0*x**224+c0e1*x**225+c0e2*x**226+c0e3*x**227+
       c0e4*x**228+c0e5*x**229+c0e6*x**230+c0e7*x**231+
       c0e8*x**232+c0e9*x**233+c0ea*x**234+c0eb*x**235+
       c0ec*x**236+c0ed*x**237+c0ee*x**238+c0ef*x**239+
       c160*x**352+c161*x**353+c162*x**354+c163*x**355+
       c164*x**356+c165*x**357+c166*x**358+c167*x**359+
       c168*x**360+c169*x**361+c16a*x**362+c16b*x**363+
       c16c*x**364+c16d*x**365+c16e*x**366+c16f*x**367+
       c1e0*x**480+c1e1*x**481+c1e2*x**482+c1e3*x**483+
       c1e4*x**484+c1e5*x**485+c1e6*x**486+c1e7*x**487+
       c1e8*x**488+c1e9*x**489+c1ea*x**490+c1eb*x**491+
       c1ec*x**492+c1ed*x**493+c1ee*x**494+c1ef*x**495)
      (L0x7fffffffd4a0*x**96+L0x7fffffffd4a2*x**97+L0x7fffffffd4a4*x**98+
       L0x7fffffffd4a6*x**99+L0x7fffffffd4a8*x**100+L0x7fffffffd4aa*x**101+
       L0x7fffffffd4ac*x**102+L0x7fffffffd4ae*x**103+L0x7fffffffd4b0*x**104+
       L0x7fffffffd4b2*x**105+L0x7fffffffd4b4*x**106+L0x7fffffffd4b6*x**107+
       L0x7fffffffd4b8*x**108+L0x7fffffffd4ba*x**109+L0x7fffffffd4bc*x**110+
       L0x7fffffffd4be*x**111)
      [10753, x**128 - 10752]
  ] prove with [cuts [109]];


(**************** CUT 114,  0 *****************)

ecut true;

(**************** CUT 115,  0 *****************)

ecut 
  and [
eqmod (c060*x** 96+c061*x** 97+c062*x** 98+c063*x** 99+
       c064*x**100+c065*x**101+c066*x**102+c067*x**103+
       c068*x**104+c069*x**105+c06a*x**106+c06b*x**107+
       c06c*x**108+c06d*x**109+c06e*x**110+c06f*x**111+
       c0e0*x**224+c0e1*x**225+c0e2*x**226+c0e3*x**227+
       c0e4*x**228+c0e5*x**229+c0e6*x**230+c0e7*x**231+
       c0e8*x**232+c0e9*x**233+c0ea*x**234+c0eb*x**235+
       c0ec*x**236+c0ed*x**237+c0ee*x**238+c0ef*x**239+
       c160*x**352+c161*x**353+c162*x**354+c163*x**355+
       c164*x**356+c165*x**357+c166*x**358+c167*x**359+
       c168*x**360+c169*x**361+c16a*x**362+c16b*x**363+
       c16c*x**364+c16d*x**365+c16e*x**366+c16f*x**367+
       c1e0*x**480+c1e1*x**481+c1e2*x**482+c1e3*x**483+
       c1e4*x**484+c1e5*x**485+c1e6*x**486+c1e7*x**487+
       c1e8*x**488+c1e9*x**489+c1ea*x**490+c1eb*x**491+
       c1ec*x**492+c1ed*x**493+c1ee*x**494+c1ef*x**495)
      (L0x7fffffffd5a0*x**96+L0x7fffffffd5a2*x**97+L0x7fffffffd5a4*x**98+
       L0x7fffffffd5a6*x**99+L0x7fffffffd5a8*x**100+L0x7fffffffd5aa*x**101+
       L0x7fffffffd5ac*x**102+L0x7fffffffd5ae*x**103+L0x7fffffffd5b0*x**104+
       L0x7fffffffd5b2*x**105+L0x7fffffffd5b4*x**106+L0x7fffffffd5b6*x**107+
       L0x7fffffffd5b8*x**108+L0x7fffffffd5ba*x**109+L0x7fffffffd5bc*x**110+
       L0x7fffffffd5be*x**111)
      [10753, x**128 - 6264]
  ] prove with [cuts [109]];


(**************** CUT 116,  0 *****************)

ecut true;

(**************** CUT 117,  0 *****************)

ecut 
  and [
eqmod (c060*x** 96+c061*x** 97+c062*x** 98+c063*x** 99+
       c064*x**100+c065*x**101+c066*x**102+c067*x**103+
       c068*x**104+c069*x**105+c06a*x**106+c06b*x**107+
       c06c*x**108+c06d*x**109+c06e*x**110+c06f*x**111+
       c0e0*x**224+c0e1*x**225+c0e2*x**226+c0e3*x**227+
       c0e4*x**228+c0e5*x**229+c0e6*x**230+c0e7*x**231+
       c0e8*x**232+c0e9*x**233+c0ea*x**234+c0eb*x**235+
       c0ec*x**236+c0ed*x**237+c0ee*x**238+c0ef*x**239+
       c160*x**352+c161*x**353+c162*x**354+c163*x**355+
       c164*x**356+c165*x**357+c166*x**358+c167*x**359+
       c168*x**360+c169*x**361+c16a*x**362+c16b*x**363+
       c16c*x**364+c16d*x**365+c16e*x**366+c16f*x**367+
       c1e0*x**480+c1e1*x**481+c1e2*x**482+c1e3*x**483+
       c1e4*x**484+c1e5*x**485+c1e6*x**486+c1e7*x**487+
       c1e8*x**488+c1e9*x**489+c1ea*x**490+c1eb*x**491+
       c1ec*x**492+c1ed*x**493+c1ee*x**494+c1ef*x**495)
      (L0x7fffffffd6a0*x**96+L0x7fffffffd6a2*x**97+L0x7fffffffd6a4*x**98+
       L0x7fffffffd6a6*x**99+L0x7fffffffd6a8*x**100+L0x7fffffffd6aa*x**101+
       L0x7fffffffd6ac*x**102+L0x7fffffffd6ae*x**103+L0x7fffffffd6b0*x**104+
       L0x7fffffffd6b2*x**105+L0x7fffffffd6b4*x**106+L0x7fffffffd6b6*x**107+
       L0x7fffffffd6b8*x**108+L0x7fffffffd6ba*x**109+L0x7fffffffd6bc*x**110+
       L0x7fffffffd6be*x**111)
      [10753, x**128 - 4489]
  ] prove with [cuts [109]];


(**************** CUT 118,  0 *****************)

ecut true;

(**************** CUT 119,  0 *****************)

ecut 
  and [
eqmod (c060*x** 96+c061*x** 97+c062*x** 98+c063*x** 99+
       c064*x**100+c065*x**101+c066*x**102+c067*x**103+
       c068*x**104+c069*x**105+c06a*x**106+c06b*x**107+
       c06c*x**108+c06d*x**109+c06e*x**110+c06f*x**111+
       c0e0*x**224+c0e1*x**225+c0e2*x**226+c0e3*x**227+
       c0e4*x**228+c0e5*x**229+c0e6*x**230+c0e7*x**231+
       c0e8*x**232+c0e9*x**233+c0ea*x**234+c0eb*x**235+
       c0ec*x**236+c0ed*x**237+c0ee*x**238+c0ef*x**239+
       c160*x**352+c161*x**353+c162*x**354+c163*x**355+
       c164*x**356+c165*x**357+c166*x**358+c167*x**359+
       c168*x**360+c169*x**361+c16a*x**362+c16b*x**363+
       c16c*x**364+c16d*x**365+c16e*x**366+c16f*x**367+
       c1e0*x**480+c1e1*x**481+c1e2*x**482+c1e3*x**483+
       c1e4*x**484+c1e5*x**485+c1e6*x**486+c1e7*x**487+
       c1e8*x**488+c1e9*x**489+c1ea*x**490+c1eb*x**491+
       c1ec*x**492+c1ed*x**493+c1ee*x**494+c1ef*x**495)
      (L0x7fffffffd7a0*x**96+L0x7fffffffd7a2*x**97+L0x7fffffffd7a4*x**98+
       L0x7fffffffd7a6*x**99+L0x7fffffffd7a8*x**100+L0x7fffffffd7aa*x**101+
       L0x7fffffffd7ac*x**102+L0x7fffffffd7ae*x**103+L0x7fffffffd7b0*x**104+
       L0x7fffffffd7b2*x**105+L0x7fffffffd7b4*x**106+L0x7fffffffd7b6*x**107+
       L0x7fffffffd7b8*x**108+L0x7fffffffd7ba*x**109+L0x7fffffffd7bc*x**110+
       L0x7fffffffd7be*x**111)
      [10753, x**128 - 321]
  ] prove with [cuts [109]];


(**************** CUT 120,  0 *****************)

ecut true;

(**************** CUT 121,  0 *****************)

ecut 
  and [
eqmod (c060*x** 96+c061*x** 97+c062*x** 98+c063*x** 99+
       c064*x**100+c065*x**101+c066*x**102+c067*x**103+
       c068*x**104+c069*x**105+c06a*x**106+c06b*x**107+
       c06c*x**108+c06d*x**109+c06e*x**110+c06f*x**111+
       c0e0*x**224+c0e1*x**225+c0e2*x**226+c0e3*x**227+
       c0e4*x**228+c0e5*x**229+c0e6*x**230+c0e7*x**231+
       c0e8*x**232+c0e9*x**233+c0ea*x**234+c0eb*x**235+
       c0ec*x**236+c0ed*x**237+c0ee*x**238+c0ef*x**239+
       c160*x**352+c161*x**353+c162*x**354+c163*x**355+
       c164*x**356+c165*x**357+c166*x**358+c167*x**359+
       c168*x**360+c169*x**361+c16a*x**362+c16b*x**363+
       c16c*x**364+c16d*x**365+c16e*x**366+c16f*x**367+
       c1e0*x**480+c1e1*x**481+c1e2*x**482+c1e3*x**483+
       c1e4*x**484+c1e5*x**485+c1e6*x**486+c1e7*x**487+
       c1e8*x**488+c1e9*x**489+c1ea*x**490+c1eb*x**491+
       c1ec*x**492+c1ed*x**493+c1ee*x**494+c1ef*x**495)
      (L0x7fffffffd8a0*x**96+L0x7fffffffd8a2*x**97+L0x7fffffffd8a4*x**98+
       L0x7fffffffd8a6*x**99+L0x7fffffffd8a8*x**100+L0x7fffffffd8aa*x**101+
       L0x7fffffffd8ac*x**102+L0x7fffffffd8ae*x**103+L0x7fffffffd8b0*x**104+
       L0x7fffffffd8b2*x**105+L0x7fffffffd8b4*x**106+L0x7fffffffd8b6*x**107+
       L0x7fffffffd8b8*x**108+L0x7fffffffd8ba*x**109+L0x7fffffffd8bc*x**110+
       L0x7fffffffd8be*x**111)
      [10753, x**128 - 10432]
  ] prove with [cuts [109]];


(**************** CUT 122,  0 *****************)

ecut true;

(**************** CUT 123,  0 *****************)

ecut 
  and [
eqmod (c060*x** 96+c061*x** 97+c062*x** 98+c063*x** 99+
       c064*x**100+c065*x**101+c066*x**102+c067*x**103+
       c068*x**104+c069*x**105+c06a*x**106+c06b*x**107+
       c06c*x**108+c06d*x**109+c06e*x**110+c06f*x**111+
       c0e0*x**224+c0e1*x**225+c0e2*x**226+c0e3*x**227+
       c0e4*x**228+c0e5*x**229+c0e6*x**230+c0e7*x**231+
       c0e8*x**232+c0e9*x**233+c0ea*x**234+c0eb*x**235+
       c0ec*x**236+c0ed*x**237+c0ee*x**238+c0ef*x**239+
       c160*x**352+c161*x**353+c162*x**354+c163*x**355+
       c164*x**356+c165*x**357+c166*x**358+c167*x**359+
       c168*x**360+c169*x**361+c16a*x**362+c16b*x**363+
       c16c*x**364+c16d*x**365+c16e*x**366+c16f*x**367+
       c1e0*x**480+c1e1*x**481+c1e2*x**482+c1e3*x**483+
       c1e4*x**484+c1e5*x**485+c1e6*x**486+c1e7*x**487+
       c1e8*x**488+c1e9*x**489+c1ea*x**490+c1eb*x**491+
       c1ec*x**492+c1ed*x**493+c1ee*x**494+c1ef*x**495)
      (L0x7fffffffd9a0*x**96+L0x7fffffffd9a2*x**97+L0x7fffffffd9a4*x**98+
       L0x7fffffffd9a6*x**99+L0x7fffffffd9a8*x**100+L0x7fffffffd9aa*x**101+
       L0x7fffffffd9ac*x**102+L0x7fffffffd9ae*x**103+L0x7fffffffd9b0*x**104+
       L0x7fffffffd9b2*x**105+L0x7fffffffd9b4*x**106+L0x7fffffffd9b6*x**107+
       L0x7fffffffd9b8*x**108+L0x7fffffffd9ba*x**109+L0x7fffffffd9bc*x**110+
       L0x7fffffffd9be*x**111)
      [10753, x**128 - 10686]
  ] prove with [cuts [109]];


(**************** CUT 124,  0 *****************)

ecut true;

(**************** CUT 125,  0 *****************)

ecut 
  and [
eqmod (c060*x** 96+c061*x** 97+c062*x** 98+c063*x** 99+
       c064*x**100+c065*x**101+c066*x**102+c067*x**103+
       c068*x**104+c069*x**105+c06a*x**106+c06b*x**107+
       c06c*x**108+c06d*x**109+c06e*x**110+c06f*x**111+
       c0e0*x**224+c0e1*x**225+c0e2*x**226+c0e3*x**227+
       c0e4*x**228+c0e5*x**229+c0e6*x**230+c0e7*x**231+
       c0e8*x**232+c0e9*x**233+c0ea*x**234+c0eb*x**235+
       c0ec*x**236+c0ed*x**237+c0ee*x**238+c0ef*x**239+
       c160*x**352+c161*x**353+c162*x**354+c163*x**355+
       c164*x**356+c165*x**357+c166*x**358+c167*x**359+
       c168*x**360+c169*x**361+c16a*x**362+c16b*x**363+
       c16c*x**364+c16d*x**365+c16e*x**366+c16f*x**367+
       c1e0*x**480+c1e1*x**481+c1e2*x**482+c1e3*x**483+
       c1e4*x**484+c1e5*x**485+c1e6*x**486+c1e7*x**487+
       c1e8*x**488+c1e9*x**489+c1ea*x**490+c1eb*x**491+
       c1ec*x**492+c1ed*x**493+c1ee*x**494+c1ef*x**495)
      (L0x7fffffffdaa0*x**96+L0x7fffffffdaa2*x**97+L0x7fffffffdaa4*x**98+
       L0x7fffffffdaa6*x**99+L0x7fffffffdaa8*x**100+L0x7fffffffdaaa*x**101+
       L0x7fffffffdaac*x**102+L0x7fffffffdaae*x**103+L0x7fffffffdab0*x**104+
       L0x7fffffffdab2*x**105+L0x7fffffffdab4*x**106+L0x7fffffffdab6*x**107+
       L0x7fffffffdab8*x**108+L0x7fffffffdaba*x**109+L0x7fffffffdabc*x**110+
       L0x7fffffffdabe*x**111)
      [10753, x**128 - 67]
  ] prove with [cuts [109]];



(* === be ready for next level and offset === *)

(**************** CUT 126,  0 *****************)

ecut true;



(* vpbroadcastw 0x102(%rdx),%ymm1                  #! EA = L0x555555561222; Value = 0x276d0198f85c6adf; PC = 0x55555555746b *)
mov ymm1_0 L0x555555561222;
mov ymm1_1 L0x555555561222;
mov ymm1_2 L0x555555561222;
mov ymm1_3 L0x555555561222;
mov ymm1_4 L0x555555561222;
mov ymm1_5 L0x555555561222;
mov ymm1_6 L0x555555561222;
mov ymm1_7 L0x555555561222;
mov ymm1_8 L0x555555561222;
mov ymm1_9 L0x555555561222;
mov ymm1_a L0x555555561222;
mov ymm1_b L0x555555561222;
mov ymm1_c L0x555555561222;
mov ymm1_d L0x555555561222;
mov ymm1_e L0x555555561222;
mov ymm1_f L0x555555561222;
(* vpbroadcastw 0x302(%rdx),%ymm2                  #! EA = L0x555555561422; Value = 0x096df198105c00df; PC = 0x555555557474 *)
mov ymm2_0 L0x555555561422;
mov ymm2_1 L0x555555561422;
mov ymm2_2 L0x555555561422;
mov ymm2_3 L0x555555561422;
mov ymm2_4 L0x555555561422;
mov ymm2_5 L0x555555561422;
mov ymm2_6 L0x555555561422;
mov ymm2_7 L0x555555561422;
mov ymm2_8 L0x555555561422;
mov ymm2_9 L0x555555561422;
mov ymm2_a L0x555555561422;
mov ymm2_b L0x555555561422;
mov ymm2_c L0x555555561422;
mov ymm2_d L0x555555561422;
mov ymm2_e L0x555555561422;
mov ymm2_f L0x555555561422;
(* vmovdqa 0x2e0(%rsi),%ymm6                       #! EA = L0x7fffffffcdc0; Value = 0x0000000000000000; PC = 0x55555555747d *)
mov ymm6_0 L0x7fffffffcdc0;
mov ymm6_1 L0x7fffffffcdc2;
mov ymm6_2 L0x7fffffffcdc4;
mov ymm6_3 L0x7fffffffcdc6;
mov ymm6_4 L0x7fffffffcdc8;
mov ymm6_5 L0x7fffffffcdca;
mov ymm6_6 L0x7fffffffcdcc;
mov ymm6_7 L0x7fffffffcdce;
mov ymm6_8 L0x7fffffffcdd0;
mov ymm6_9 L0x7fffffffcdd2;
mov ymm6_a L0x7fffffffcdd4;
mov ymm6_b L0x7fffffffcdd6;
mov ymm6_c L0x7fffffffcdd8;
mov ymm6_d L0x7fffffffcdda;
mov ymm6_e L0x7fffffffcddc;
mov ymm6_f L0x7fffffffcdde;
(* vmovdqa 0x3e0(%rsi),%ymm7                       #! EA = L0x7fffffffcec0; Value = 0x0000000000000000; PC = 0x555555557485 *)
mov ymm7_0 L0x7fffffffcec0;
mov ymm7_1 L0x7fffffffcec2;
mov ymm7_2 L0x7fffffffcec4;
mov ymm7_3 L0x7fffffffcec6;
mov ymm7_4 L0x7fffffffcec8;
mov ymm7_5 L0x7fffffffceca;
mov ymm7_6 L0x7fffffffcecc;
mov ymm7_7 L0x7fffffffcece;
mov ymm7_8 L0x7fffffffced0;
mov ymm7_9 L0x7fffffffced2;
mov ymm7_a L0x7fffffffced4;
mov ymm7_b L0x7fffffffced6;
mov ymm7_c L0x7fffffffced8;
mov ymm7_d L0x7fffffffceda;
mov ymm7_e L0x7fffffffcedc;
mov ymm7_f L0x7fffffffcede;
(* vpmullw %ymm1,%ymm6,%ymm3                       #! PC = 0x55555555748d *)
smull mulHymm6_0 mulL_0 ymm1_0 ymm6_0;
smull mulHymm6_1 mulL_1 ymm1_1 ymm6_1;
smull mulHymm6_2 mulL_2 ymm1_2 ymm6_2;
smull mulHymm6_3 mulL_3 ymm1_3 ymm6_3;
smull mulHymm6_4 mulL_4 ymm1_4 ymm6_4;
smull mulHymm6_5 mulL_5 ymm1_5 ymm6_5;
smull mulHymm6_6 mulL_6 ymm1_6 ymm6_6;
smull mulHymm6_7 mulL_7 ymm1_7 ymm6_7;
smull mulHymm6_8 mulL_8 ymm1_8 ymm6_8;
smull mulHymm6_9 mulL_9 ymm1_9 ymm6_9;
smull mulHymm6_a mulL_a ymm1_a ymm6_a;
smull mulHymm6_b mulL_b ymm1_b ymm6_b;
smull mulHymm6_c mulL_c ymm1_c ymm6_c;
smull mulHymm6_d mulL_d ymm1_d ymm6_d;
smull mulHymm6_e mulL_e ymm1_e ymm6_e;
smull mulHymm6_f mulL_f ymm1_f ymm6_f;
cast ymm3_0@sint16 mulL_0;
cast ymm3_1@sint16 mulL_1;
cast ymm3_2@sint16 mulL_2;
cast ymm3_3@sint16 mulL_3;
cast ymm3_4@sint16 mulL_4;
cast ymm3_5@sint16 mulL_5;
cast ymm3_6@sint16 mulL_6;
cast ymm3_7@sint16 mulL_7;
cast ymm3_8@sint16 mulL_8;
cast ymm3_9@sint16 mulL_9;
cast ymm3_a@sint16 mulL_a;
cast ymm3_b@sint16 mulL_b;
cast ymm3_c@sint16 mulL_c;
cast ymm3_d@sint16 mulL_d;
cast ymm3_e@sint16 mulL_e;
cast ymm3_f@sint16 mulL_f;
(* vpmulhw %ymm2,%ymm6,%ymm10                      #! PC = 0x555555557491 *)
smull mulH_0 mulLymm6_0 ymm6_0 ymm2_0;
smull mulH_1 mulLymm6_1 ymm6_1 ymm2_1;
smull mulH_2 mulLymm6_2 ymm6_2 ymm2_2;
smull mulH_3 mulLymm6_3 ymm6_3 ymm2_3;
smull mulH_4 mulLymm6_4 ymm6_4 ymm2_4;
smull mulH_5 mulLymm6_5 ymm6_5 ymm2_5;
smull mulH_6 mulLymm6_6 ymm6_6 ymm2_6;
smull mulH_7 mulLymm6_7 ymm6_7 ymm2_7;
smull mulH_8 mulLymm6_8 ymm6_8 ymm2_8;
smull mulH_9 mulLymm6_9 ymm6_9 ymm2_9;
smull mulH_a mulLymm6_a ymm6_a ymm2_a;
smull mulH_b mulLymm6_b ymm6_b ymm2_b;
smull mulH_c mulLymm6_c ymm6_c ymm2_c;
smull mulH_d mulLymm6_d ymm6_d ymm2_d;
smull mulH_e mulLymm6_e ymm6_e ymm2_e;
smull mulH_f mulLymm6_f ymm6_f ymm2_f;
mov ymm10_0 mulH_0;
mov ymm10_1 mulH_1;
mov ymm10_2 mulH_2;
mov ymm10_3 mulH_3;
mov ymm10_4 mulH_4;
mov ymm10_5 mulH_5;
mov ymm10_6 mulH_6;
mov ymm10_7 mulH_7;
mov ymm10_8 mulH_8;
mov ymm10_9 mulH_9;
mov ymm10_a mulH_a;
mov ymm10_b mulH_b;
mov ymm10_c mulH_c;
mov ymm10_d mulH_d;
mov ymm10_e mulH_e;
mov ymm10_f mulH_f;
(* vpmulhw %ymm0,%ymm3,%ymm3                       #! PC = 0x555555557495 *)
smull mulH_0 red_0 ymm3_0 ymm0_0;
assert true && red_0 = mulLymm6_0;
assume red_0 = mulLymm6_0 && true;
smull mulH_1 red_1 ymm3_1 ymm0_1;
assert true && red_1 = mulLymm6_1;
assume red_1 = mulLymm6_1 && true;
smull mulH_2 red_2 ymm3_2 ymm0_2;
assert true && red_2 = mulLymm6_2;
assume red_2 = mulLymm6_2 && true;
smull mulH_3 red_3 ymm3_3 ymm0_3;
assert true && red_3 = mulLymm6_3;
assume red_3 = mulLymm6_3 && true;
smull mulH_4 red_4 ymm3_4 ymm0_4;
assert true && red_4 = mulLymm6_4;
assume red_4 = mulLymm6_4 && true;
smull mulH_5 red_5 ymm3_5 ymm0_5;
assert true && red_5 = mulLymm6_5;
assume red_5 = mulLymm6_5 && true;
smull mulH_6 red_6 ymm3_6 ymm0_6;
assert true && red_6 = mulLymm6_6;
assume red_6 = mulLymm6_6 && true;
smull mulH_7 red_7 ymm3_7 ymm0_7;
assert true && red_7 = mulLymm6_7;
assume red_7 = mulLymm6_7 && true;
smull mulH_8 red_8 ymm3_8 ymm0_8;
assert true && red_8 = mulLymm6_8;
assume red_8 = mulLymm6_8 && true;
smull mulH_9 red_9 ymm3_9 ymm0_9;
assert true && red_9 = mulLymm6_9;
assume red_9 = mulLymm6_9 && true;
smull mulH_a red_a ymm3_a ymm0_a;
assert true && red_a = mulLymm6_a;
assume red_a = mulLymm6_a && true;
smull mulH_b red_b ymm3_b ymm0_b;
assert true && red_b = mulLymm6_b;
assume red_b = mulLymm6_b && true;
smull mulH_c red_c ymm3_c ymm0_c;
assert true && red_c = mulLymm6_c;
assume red_c = mulLymm6_c && true;
smull mulH_d red_d ymm3_d ymm0_d;
assert true && red_d = mulLymm6_d;
assume red_d = mulLymm6_d && true;
smull mulH_e red_e ymm3_e ymm0_e;
assert true && red_e = mulLymm6_e;
assume red_e = mulLymm6_e && true;
smull mulH_f red_f ymm3_f ymm0_f;
assert true && red_f = mulLymm6_f;
assume red_f = mulLymm6_f && true;
mov ymm3_0 mulH_0;
mov ymm3_1 mulH_1;
mov ymm3_2 mulH_2;
mov ymm3_3 mulH_3;
mov ymm3_4 mulH_4;
mov ymm3_5 mulH_5;
mov ymm3_6 mulH_6;
mov ymm3_7 mulH_7;
mov ymm3_8 mulH_8;
mov ymm3_9 mulH_9;
mov ymm3_a mulH_a;
mov ymm3_b mulH_b;
mov ymm3_c mulH_c;
mov ymm3_d mulH_d;
mov ymm3_e mulH_e;
mov ymm3_f mulH_f;
(* vpsubw %ymm3,%ymm10,%ymm10                      #! PC = 0x555555557499 *)
sub ymm10_0 ymm10_0 ymm3_0;
sub ymm10_1 ymm10_1 ymm3_1;
sub ymm10_2 ymm10_2 ymm3_2;
sub ymm10_3 ymm10_3 ymm3_3;
sub ymm10_4 ymm10_4 ymm3_4;
sub ymm10_5 ymm10_5 ymm3_5;
sub ymm10_6 ymm10_6 ymm3_6;
sub ymm10_7 ymm10_7 ymm3_7;
sub ymm10_8 ymm10_8 ymm3_8;
sub ymm10_9 ymm10_9 ymm3_9;
sub ymm10_a ymm10_a ymm3_a;
sub ymm10_b ymm10_b ymm3_b;
sub ymm10_c ymm10_c ymm3_c;
sub ymm10_d ymm10_d ymm3_d;
sub ymm10_e ymm10_e ymm3_e;
sub ymm10_f ymm10_f ymm3_f;
(* vpmullw %ymm1,%ymm7,%ymm3                       #! PC = 0x55555555749d *)
smull mulHymm7_0 mulL_0 ymm1_0 ymm7_0;
smull mulHymm7_1 mulL_1 ymm1_1 ymm7_1;
smull mulHymm7_2 mulL_2 ymm1_2 ymm7_2;
smull mulHymm7_3 mulL_3 ymm1_3 ymm7_3;
smull mulHymm7_4 mulL_4 ymm1_4 ymm7_4;
smull mulHymm7_5 mulL_5 ymm1_5 ymm7_5;
smull mulHymm7_6 mulL_6 ymm1_6 ymm7_6;
smull mulHymm7_7 mulL_7 ymm1_7 ymm7_7;
smull mulHymm7_8 mulL_8 ymm1_8 ymm7_8;
smull mulHymm7_9 mulL_9 ymm1_9 ymm7_9;
smull mulHymm7_a mulL_a ymm1_a ymm7_a;
smull mulHymm7_b mulL_b ymm1_b ymm7_b;
smull mulHymm7_c mulL_c ymm1_c ymm7_c;
smull mulHymm7_d mulL_d ymm1_d ymm7_d;
smull mulHymm7_e mulL_e ymm1_e ymm7_e;
smull mulHymm7_f mulL_f ymm1_f ymm7_f;
cast ymm3_0@sint16 mulL_0;
cast ymm3_1@sint16 mulL_1;
cast ymm3_2@sint16 mulL_2;
cast ymm3_3@sint16 mulL_3;
cast ymm3_4@sint16 mulL_4;
cast ymm3_5@sint16 mulL_5;
cast ymm3_6@sint16 mulL_6;
cast ymm3_7@sint16 mulL_7;
cast ymm3_8@sint16 mulL_8;
cast ymm3_9@sint16 mulL_9;
cast ymm3_a@sint16 mulL_a;
cast ymm3_b@sint16 mulL_b;
cast ymm3_c@sint16 mulL_c;
cast ymm3_d@sint16 mulL_d;
cast ymm3_e@sint16 mulL_e;
cast ymm3_f@sint16 mulL_f;
(* vpmulhw %ymm2,%ymm7,%ymm11                      #! PC = 0x5555555574a1 *)
smull mulH_0 mulLymm7_0 ymm7_0 ymm2_0;
smull mulH_1 mulLymm7_1 ymm7_1 ymm2_1;
smull mulH_2 mulLymm7_2 ymm7_2 ymm2_2;
smull mulH_3 mulLymm7_3 ymm7_3 ymm2_3;
smull mulH_4 mulLymm7_4 ymm7_4 ymm2_4;
smull mulH_5 mulLymm7_5 ymm7_5 ymm2_5;
smull mulH_6 mulLymm7_6 ymm7_6 ymm2_6;
smull mulH_7 mulLymm7_7 ymm7_7 ymm2_7;
smull mulH_8 mulLymm7_8 ymm7_8 ymm2_8;
smull mulH_9 mulLymm7_9 ymm7_9 ymm2_9;
smull mulH_a mulLymm7_a ymm7_a ymm2_a;
smull mulH_b mulLymm7_b ymm7_b ymm2_b;
smull mulH_c mulLymm7_c ymm7_c ymm2_c;
smull mulH_d mulLymm7_d ymm7_d ymm2_d;
smull mulH_e mulLymm7_e ymm7_e ymm2_e;
smull mulH_f mulLymm7_f ymm7_f ymm2_f;
mov ymm11_0 mulH_0;
mov ymm11_1 mulH_1;
mov ymm11_2 mulH_2;
mov ymm11_3 mulH_3;
mov ymm11_4 mulH_4;
mov ymm11_5 mulH_5;
mov ymm11_6 mulH_6;
mov ymm11_7 mulH_7;
mov ymm11_8 mulH_8;
mov ymm11_9 mulH_9;
mov ymm11_a mulH_a;
mov ymm11_b mulH_b;
mov ymm11_c mulH_c;
mov ymm11_d mulH_d;
mov ymm11_e mulH_e;
mov ymm11_f mulH_f;
(* vpmulhw %ymm0,%ymm3,%ymm3                       #! PC = 0x5555555574a5 *)
smull mulH_0 red_0 ymm3_0 ymm0_0;
assert true && red_0 = mulLymm7_0;
assume red_0 = mulLymm7_0 && true;
smull mulH_1 red_1 ymm3_1 ymm0_1;
assert true && red_1 = mulLymm7_1;
assume red_1 = mulLymm7_1 && true;
smull mulH_2 red_2 ymm3_2 ymm0_2;
assert true && red_2 = mulLymm7_2;
assume red_2 = mulLymm7_2 && true;
smull mulH_3 red_3 ymm3_3 ymm0_3;
assert true && red_3 = mulLymm7_3;
assume red_3 = mulLymm7_3 && true;
smull mulH_4 red_4 ymm3_4 ymm0_4;
assert true && red_4 = mulLymm7_4;
assume red_4 = mulLymm7_4 && true;
smull mulH_5 red_5 ymm3_5 ymm0_5;
assert true && red_5 = mulLymm7_5;
assume red_5 = mulLymm7_5 && true;
smull mulH_6 red_6 ymm3_6 ymm0_6;
assert true && red_6 = mulLymm7_6;
assume red_6 = mulLymm7_6 && true;
smull mulH_7 red_7 ymm3_7 ymm0_7;
assert true && red_7 = mulLymm7_7;
assume red_7 = mulLymm7_7 && true;
smull mulH_8 red_8 ymm3_8 ymm0_8;
assert true && red_8 = mulLymm7_8;
assume red_8 = mulLymm7_8 && true;
smull mulH_9 red_9 ymm3_9 ymm0_9;
assert true && red_9 = mulLymm7_9;
assume red_9 = mulLymm7_9 && true;
smull mulH_a red_a ymm3_a ymm0_a;
assert true && red_a = mulLymm7_a;
assume red_a = mulLymm7_a && true;
smull mulH_b red_b ymm3_b ymm0_b;
assert true && red_b = mulLymm7_b;
assume red_b = mulLymm7_b && true;
smull mulH_c red_c ymm3_c ymm0_c;
assert true && red_c = mulLymm7_c;
assume red_c = mulLymm7_c && true;
smull mulH_d red_d ymm3_d ymm0_d;
assert true && red_d = mulLymm7_d;
assume red_d = mulLymm7_d && true;
smull mulH_e red_e ymm3_e ymm0_e;
assert true && red_e = mulLymm7_e;
assume red_e = mulLymm7_e && true;
smull mulH_f red_f ymm3_f ymm0_f;
assert true && red_f = mulLymm7_f;
assume red_f = mulLymm7_f && true;
mov ymm3_0 mulH_0;
mov ymm3_1 mulH_1;
mov ymm3_2 mulH_2;
mov ymm3_3 mulH_3;
mov ymm3_4 mulH_4;
mov ymm3_5 mulH_5;
mov ymm3_6 mulH_6;
mov ymm3_7 mulH_7;
mov ymm3_8 mulH_8;
mov ymm3_9 mulH_9;
mov ymm3_a mulH_a;
mov ymm3_b mulH_b;
mov ymm3_c mulH_c;
mov ymm3_d mulH_d;
mov ymm3_e mulH_e;
mov ymm3_f mulH_f;
(* vpsubw %ymm3,%ymm11,%ymm11                      #! PC = 0x5555555574a9 *)
sub ymm11_0 ymm11_0 ymm3_0;
sub ymm11_1 ymm11_1 ymm3_1;
sub ymm11_2 ymm11_2 ymm3_2;
sub ymm11_3 ymm11_3 ymm3_3;
sub ymm11_4 ymm11_4 ymm3_4;
sub ymm11_5 ymm11_5 ymm3_5;
sub ymm11_6 ymm11_6 ymm3_6;
sub ymm11_7 ymm11_7 ymm3_7;
sub ymm11_8 ymm11_8 ymm3_8;
sub ymm11_9 ymm11_9 ymm3_9;
sub ymm11_a ymm11_a ymm3_a;
sub ymm11_b ymm11_b ymm3_b;
sub ymm11_c ymm11_c ymm3_c;
sub ymm11_d ymm11_d ymm3_d;
sub ymm11_e ymm11_e ymm3_e;
sub ymm11_f ymm11_f ymm3_f;
(* vmovdqa 0xe0(%rsi),%ymm4                        #! EA = L0x7fffffffcbc0; Value = 0x0000000000000000; PC = 0x5555555574ad *)
mov ymm4_0 L0x7fffffffcbc0;
mov ymm4_1 L0x7fffffffcbc2;
mov ymm4_2 L0x7fffffffcbc4;
mov ymm4_3 L0x7fffffffcbc6;
mov ymm4_4 L0x7fffffffcbc8;
mov ymm4_5 L0x7fffffffcbca;
mov ymm4_6 L0x7fffffffcbcc;
mov ymm4_7 L0x7fffffffcbce;
mov ymm4_8 L0x7fffffffcbd0;
mov ymm4_9 L0x7fffffffcbd2;
mov ymm4_a L0x7fffffffcbd4;
mov ymm4_b L0x7fffffffcbd6;
mov ymm4_c L0x7fffffffcbd8;
mov ymm4_d L0x7fffffffcbda;
mov ymm4_e L0x7fffffffcbdc;
mov ymm4_f L0x7fffffffcbde;
(* vmovdqa 0x1e0(%rsi),%ymm5                       #! EA = L0x7fffffffccc0; Value = 0x0000000000000000; PC = 0x5555555574b5 *)
mov ymm5_0 L0x7fffffffccc0;
mov ymm5_1 L0x7fffffffccc2;
mov ymm5_2 L0x7fffffffccc4;
mov ymm5_3 L0x7fffffffccc6;
mov ymm5_4 L0x7fffffffccc8;
mov ymm5_5 L0x7fffffffccca;
mov ymm5_6 L0x7fffffffcccc;
mov ymm5_7 L0x7fffffffccce;
mov ymm5_8 L0x7fffffffccd0;
mov ymm5_9 L0x7fffffffccd2;
mov ymm5_a L0x7fffffffccd4;
mov ymm5_b L0x7fffffffccd6;
mov ymm5_c L0x7fffffffccd8;
mov ymm5_d L0x7fffffffccda;
mov ymm5_e L0x7fffffffccdc;
mov ymm5_f L0x7fffffffccde;
(* vpaddw %ymm10,%ymm4,%ymm8                       #! PC = 0x5555555574bd *)
add ymm8_0 ymm4_0 ymm10_0;
add ymm8_1 ymm4_1 ymm10_1;
add ymm8_2 ymm4_2 ymm10_2;
add ymm8_3 ymm4_3 ymm10_3;
add ymm8_4 ymm4_4 ymm10_4;
add ymm8_5 ymm4_5 ymm10_5;
add ymm8_6 ymm4_6 ymm10_6;
add ymm8_7 ymm4_7 ymm10_7;
add ymm8_8 ymm4_8 ymm10_8;
add ymm8_9 ymm4_9 ymm10_9;
add ymm8_a ymm4_a ymm10_a;
add ymm8_b ymm4_b ymm10_b;
add ymm8_c ymm4_c ymm10_c;
add ymm8_d ymm4_d ymm10_d;
add ymm8_e ymm4_e ymm10_e;
add ymm8_f ymm4_f ymm10_f;
(* vpsubw %ymm10,%ymm4,%ymm10                      #! PC = 0x5555555574c2 *)
sub ymm10_0 ymm4_0 ymm10_0;
sub ymm10_1 ymm4_1 ymm10_1;
sub ymm10_2 ymm4_2 ymm10_2;
sub ymm10_3 ymm4_3 ymm10_3;
sub ymm10_4 ymm4_4 ymm10_4;
sub ymm10_5 ymm4_5 ymm10_5;
sub ymm10_6 ymm4_6 ymm10_6;
sub ymm10_7 ymm4_7 ymm10_7;
sub ymm10_8 ymm4_8 ymm10_8;
sub ymm10_9 ymm4_9 ymm10_9;
sub ymm10_a ymm4_a ymm10_a;
sub ymm10_b ymm4_b ymm10_b;
sub ymm10_c ymm4_c ymm10_c;
sub ymm10_d ymm4_d ymm10_d;
sub ymm10_e ymm4_e ymm10_e;
sub ymm10_f ymm4_f ymm10_f;
(* vpaddw %ymm11,%ymm5,%ymm9                       #! PC = 0x5555555574c7 *)
add ymm9_0 ymm5_0 ymm11_0;
add ymm9_1 ymm5_1 ymm11_1;
add ymm9_2 ymm5_2 ymm11_2;
add ymm9_3 ymm5_3 ymm11_3;
add ymm9_4 ymm5_4 ymm11_4;
add ymm9_5 ymm5_5 ymm11_5;
add ymm9_6 ymm5_6 ymm11_6;
add ymm9_7 ymm5_7 ymm11_7;
add ymm9_8 ymm5_8 ymm11_8;
add ymm9_9 ymm5_9 ymm11_9;
add ymm9_a ymm5_a ymm11_a;
add ymm9_b ymm5_b ymm11_b;
add ymm9_c ymm5_c ymm11_c;
add ymm9_d ymm5_d ymm11_d;
add ymm9_e ymm5_e ymm11_e;
add ymm9_f ymm5_f ymm11_f;
(* vpsubw %ymm11,%ymm5,%ymm11                      #! PC = 0x5555555574cc *)
sub ymm11_0 ymm5_0 ymm11_0;
sub ymm11_1 ymm5_1 ymm11_1;
sub ymm11_2 ymm5_2 ymm11_2;
sub ymm11_3 ymm5_3 ymm11_3;
sub ymm11_4 ymm5_4 ymm11_4;
sub ymm11_5 ymm5_5 ymm11_5;
sub ymm11_6 ymm5_6 ymm11_6;
sub ymm11_7 ymm5_7 ymm11_7;
sub ymm11_8 ymm5_8 ymm11_8;
sub ymm11_9 ymm5_9 ymm11_9;
sub ymm11_a ymm5_a ymm11_a;
sub ymm11_b ymm5_b ymm11_b;
sub ymm11_c ymm5_c ymm11_c;
sub ymm11_d ymm5_d ymm11_d;
sub ymm11_e ymm5_e ymm11_e;
sub ymm11_f ymm5_f ymm11_f;
(* vpaddw %ymm6,%ymm4,%ymm3                        #! PC = 0x5555555574d1 *)
add ymm3_0 ymm4_0 ymm6_0;
add ymm3_1 ymm4_1 ymm6_1;
add ymm3_2 ymm4_2 ymm6_2;
add ymm3_3 ymm4_3 ymm6_3;
add ymm3_4 ymm4_4 ymm6_4;
add ymm3_5 ymm4_5 ymm6_5;
add ymm3_6 ymm4_6 ymm6_6;
add ymm3_7 ymm4_7 ymm6_7;
add ymm3_8 ymm4_8 ymm6_8;
add ymm3_9 ymm4_9 ymm6_9;
add ymm3_a ymm4_a ymm6_a;
add ymm3_b ymm4_b ymm6_b;
add ymm3_c ymm4_c ymm6_c;
add ymm3_d ymm4_d ymm6_d;
add ymm3_e ymm4_e ymm6_e;
add ymm3_f ymm4_f ymm6_f;
(* vpsubw %ymm6,%ymm4,%ymm6                        #! PC = 0x5555555574d5 *)
sub ymm6_0 ymm4_0 ymm6_0;
sub ymm6_1 ymm4_1 ymm6_1;
sub ymm6_2 ymm4_2 ymm6_2;
sub ymm6_3 ymm4_3 ymm6_3;
sub ymm6_4 ymm4_4 ymm6_4;
sub ymm6_5 ymm4_5 ymm6_5;
sub ymm6_6 ymm4_6 ymm6_6;
sub ymm6_7 ymm4_7 ymm6_7;
sub ymm6_8 ymm4_8 ymm6_8;
sub ymm6_9 ymm4_9 ymm6_9;
sub ymm6_a ymm4_a ymm6_a;
sub ymm6_b ymm4_b ymm6_b;
sub ymm6_c ymm4_c ymm6_c;
sub ymm6_d ymm4_d ymm6_d;
sub ymm6_e ymm4_e ymm6_e;
sub ymm6_f ymm4_f ymm6_f;
(* vpaddw %ymm7,%ymm5,%ymm4                        #! PC = 0x5555555574d9 *)
add ymm4_0 ymm5_0 ymm7_0;
add ymm4_1 ymm5_1 ymm7_1;
add ymm4_2 ymm5_2 ymm7_2;
add ymm4_3 ymm5_3 ymm7_3;
add ymm4_4 ymm5_4 ymm7_4;
add ymm4_5 ymm5_5 ymm7_5;
add ymm4_6 ymm5_6 ymm7_6;
add ymm4_7 ymm5_7 ymm7_7;
add ymm4_8 ymm5_8 ymm7_8;
add ymm4_9 ymm5_9 ymm7_9;
add ymm4_a ymm5_a ymm7_a;
add ymm4_b ymm5_b ymm7_b;
add ymm4_c ymm5_c ymm7_c;
add ymm4_d ymm5_d ymm7_d;
add ymm4_e ymm5_e ymm7_e;
add ymm4_f ymm5_f ymm7_f;
(* vpsubw %ymm7,%ymm5,%ymm7                        #! PC = 0x5555555574dd *)
sub ymm7_0 ymm5_0 ymm7_0;
sub ymm7_1 ymm5_1 ymm7_1;
sub ymm7_2 ymm5_2 ymm7_2;
sub ymm7_3 ymm5_3 ymm7_3;
sub ymm7_4 ymm5_4 ymm7_4;
sub ymm7_5 ymm5_5 ymm7_5;
sub ymm7_6 ymm5_6 ymm7_6;
sub ymm7_7 ymm5_7 ymm7_7;
sub ymm7_8 ymm5_8 ymm7_8;
sub ymm7_9 ymm5_9 ymm7_9;
sub ymm7_a ymm5_a ymm7_a;
sub ymm7_b ymm5_b ymm7_b;
sub ymm7_c ymm5_c ymm7_c;
sub ymm7_d ymm5_d ymm7_d;
sub ymm7_e ymm5_e ymm7_e;
sub ymm7_f ymm5_f ymm7_f;
(* vpmullw %ymm1,%ymm7,%ymm5                       #! PC = 0x5555555574e1 *)
smull mulHymm7_0 mulL_0 ymm1_0 ymm7_0;
smull mulHymm7_1 mulL_1 ymm1_1 ymm7_1;
smull mulHymm7_2 mulL_2 ymm1_2 ymm7_2;
smull mulHymm7_3 mulL_3 ymm1_3 ymm7_3;
smull mulHymm7_4 mulL_4 ymm1_4 ymm7_4;
smull mulHymm7_5 mulL_5 ymm1_5 ymm7_5;
smull mulHymm7_6 mulL_6 ymm1_6 ymm7_6;
smull mulHymm7_7 mulL_7 ymm1_7 ymm7_7;
smull mulHymm7_8 mulL_8 ymm1_8 ymm7_8;
smull mulHymm7_9 mulL_9 ymm1_9 ymm7_9;
smull mulHymm7_a mulL_a ymm1_a ymm7_a;
smull mulHymm7_b mulL_b ymm1_b ymm7_b;
smull mulHymm7_c mulL_c ymm1_c ymm7_c;
smull mulHymm7_d mulL_d ymm1_d ymm7_d;
smull mulHymm7_e mulL_e ymm1_e ymm7_e;
smull mulHymm7_f mulL_f ymm1_f ymm7_f;
cast ymm5_0@sint16 mulL_0;
cast ymm5_1@sint16 mulL_1;
cast ymm5_2@sint16 mulL_2;
cast ymm5_3@sint16 mulL_3;
cast ymm5_4@sint16 mulL_4;
cast ymm5_5@sint16 mulL_5;
cast ymm5_6@sint16 mulL_6;
cast ymm5_7@sint16 mulL_7;
cast ymm5_8@sint16 mulL_8;
cast ymm5_9@sint16 mulL_9;
cast ymm5_a@sint16 mulL_a;
cast ymm5_b@sint16 mulL_b;
cast ymm5_c@sint16 mulL_c;
cast ymm5_d@sint16 mulL_d;
cast ymm5_e@sint16 mulL_e;
cast ymm5_f@sint16 mulL_f;
(* vpmulhw %ymm2,%ymm7,%ymm7                       #! PC = 0x5555555574e5 *)
smull mulH_0 mulLymm7_0 ymm7_0 ymm2_0;
smull mulH_1 mulLymm7_1 ymm7_1 ymm2_1;
smull mulH_2 mulLymm7_2 ymm7_2 ymm2_2;
smull mulH_3 mulLymm7_3 ymm7_3 ymm2_3;
smull mulH_4 mulLymm7_4 ymm7_4 ymm2_4;
smull mulH_5 mulLymm7_5 ymm7_5 ymm2_5;
smull mulH_6 mulLymm7_6 ymm7_6 ymm2_6;
smull mulH_7 mulLymm7_7 ymm7_7 ymm2_7;
smull mulH_8 mulLymm7_8 ymm7_8 ymm2_8;
smull mulH_9 mulLymm7_9 ymm7_9 ymm2_9;
smull mulH_a mulLymm7_a ymm7_a ymm2_a;
smull mulH_b mulLymm7_b ymm7_b ymm2_b;
smull mulH_c mulLymm7_c ymm7_c ymm2_c;
smull mulH_d mulLymm7_d ymm7_d ymm2_d;
smull mulH_e mulLymm7_e ymm7_e ymm2_e;
smull mulH_f mulLymm7_f ymm7_f ymm2_f;
mov ymm7_0 mulH_0;
mov ymm7_1 mulH_1;
mov ymm7_2 mulH_2;
mov ymm7_3 mulH_3;
mov ymm7_4 mulH_4;
mov ymm7_5 mulH_5;
mov ymm7_6 mulH_6;
mov ymm7_7 mulH_7;
mov ymm7_8 mulH_8;
mov ymm7_9 mulH_9;
mov ymm7_a mulH_a;
mov ymm7_b mulH_b;
mov ymm7_c mulH_c;
mov ymm7_d mulH_d;
mov ymm7_e mulH_e;
mov ymm7_f mulH_f;
(* vpmulhw %ymm0,%ymm5,%ymm5                       #! PC = 0x5555555574e9 *)
smull mulH_0 red_0 ymm5_0 ymm0_0;
assert true && red_0 = mulLymm7_0;
assume red_0 = mulLymm7_0 && true;
smull mulH_1 red_1 ymm5_1 ymm0_1;
assert true && red_1 = mulLymm7_1;
assume red_1 = mulLymm7_1 && true;
smull mulH_2 red_2 ymm5_2 ymm0_2;
assert true && red_2 = mulLymm7_2;
assume red_2 = mulLymm7_2 && true;
smull mulH_3 red_3 ymm5_3 ymm0_3;
assert true && red_3 = mulLymm7_3;
assume red_3 = mulLymm7_3 && true;
smull mulH_4 red_4 ymm5_4 ymm0_4;
assert true && red_4 = mulLymm7_4;
assume red_4 = mulLymm7_4 && true;
smull mulH_5 red_5 ymm5_5 ymm0_5;
assert true && red_5 = mulLymm7_5;
assume red_5 = mulLymm7_5 && true;
smull mulH_6 red_6 ymm5_6 ymm0_6;
assert true && red_6 = mulLymm7_6;
assume red_6 = mulLymm7_6 && true;
smull mulH_7 red_7 ymm5_7 ymm0_7;
assert true && red_7 = mulLymm7_7;
assume red_7 = mulLymm7_7 && true;
smull mulH_8 red_8 ymm5_8 ymm0_8;
assert true && red_8 = mulLymm7_8;
assume red_8 = mulLymm7_8 && true;
smull mulH_9 red_9 ymm5_9 ymm0_9;
assert true && red_9 = mulLymm7_9;
assume red_9 = mulLymm7_9 && true;
smull mulH_a red_a ymm5_a ymm0_a;
assert true && red_a = mulLymm7_a;
assume red_a = mulLymm7_a && true;
smull mulH_b red_b ymm5_b ymm0_b;
assert true && red_b = mulLymm7_b;
assume red_b = mulLymm7_b && true;
smull mulH_c red_c ymm5_c ymm0_c;
assert true && red_c = mulLymm7_c;
assume red_c = mulLymm7_c && true;
smull mulH_d red_d ymm5_d ymm0_d;
assert true && red_d = mulLymm7_d;
assume red_d = mulLymm7_d && true;
smull mulH_e red_e ymm5_e ymm0_e;
assert true && red_e = mulLymm7_e;
assume red_e = mulLymm7_e && true;
smull mulH_f red_f ymm5_f ymm0_f;
assert true && red_f = mulLymm7_f;
assume red_f = mulLymm7_f && true;
mov ymm5_0 mulH_0;
mov ymm5_1 mulH_1;
mov ymm5_2 mulH_2;
mov ymm5_3 mulH_3;
mov ymm5_4 mulH_4;
mov ymm5_5 mulH_5;
mov ymm5_6 mulH_6;
mov ymm5_7 mulH_7;
mov ymm5_8 mulH_8;
mov ymm5_9 mulH_9;
mov ymm5_a mulH_a;
mov ymm5_b mulH_b;
mov ymm5_c mulH_c;
mov ymm5_d mulH_d;
mov ymm5_e mulH_e;
mov ymm5_f mulH_f;
(* vpsubw %ymm5,%ymm7,%ymm7                        #! PC = 0x5555555574ed *)
sub ymm7_0 ymm7_0 ymm5_0;
sub ymm7_1 ymm7_1 ymm5_1;
sub ymm7_2 ymm7_2 ymm5_2;
sub ymm7_3 ymm7_3 ymm5_3;
sub ymm7_4 ymm7_4 ymm5_4;
sub ymm7_5 ymm7_5 ymm5_5;
sub ymm7_6 ymm7_6 ymm5_6;
sub ymm7_7 ymm7_7 ymm5_7;
sub ymm7_8 ymm7_8 ymm5_8;
sub ymm7_9 ymm7_9 ymm5_9;
sub ymm7_a ymm7_a ymm5_a;
sub ymm7_b ymm7_b ymm5_b;
sub ymm7_c ymm7_c ymm5_c;
sub ymm7_d ymm7_d ymm5_d;
sub ymm7_e ymm7_e ymm5_e;
sub ymm7_f ymm7_f ymm5_f;
(* vpbroadcastw 0x104(%rdx),%ymm1                  #! EA = L0x555555561224; Value = 0xad9a276d0198f85c; PC = 0x5555555574f1 *)
mov ymm1_0 L0x555555561224;
mov ymm1_1 L0x555555561224;
mov ymm1_2 L0x555555561224;
mov ymm1_3 L0x555555561224;
mov ymm1_4 L0x555555561224;
mov ymm1_5 L0x555555561224;
mov ymm1_6 L0x555555561224;
mov ymm1_7 L0x555555561224;
mov ymm1_8 L0x555555561224;
mov ymm1_9 L0x555555561224;
mov ymm1_a L0x555555561224;
mov ymm1_b L0x555555561224;
mov ymm1_c L0x555555561224;
mov ymm1_d L0x555555561224;
mov ymm1_e L0x555555561224;
mov ymm1_f L0x555555561224;
(* vpbroadcastw 0x304(%rdx),%ymm2                  #! EA = L0x555555561424; Value = 0xf19a096df198105c; PC = 0x5555555574fa *)
mov ymm2_0 L0x555555561424;
mov ymm2_1 L0x555555561424;
mov ymm2_2 L0x555555561424;
mov ymm2_3 L0x555555561424;
mov ymm2_4 L0x555555561424;
mov ymm2_5 L0x555555561424;
mov ymm2_6 L0x555555561424;
mov ymm2_7 L0x555555561424;
mov ymm2_8 L0x555555561424;
mov ymm2_9 L0x555555561424;
mov ymm2_a L0x555555561424;
mov ymm2_b L0x555555561424;
mov ymm2_c L0x555555561424;
mov ymm2_d L0x555555561424;
mov ymm2_e L0x555555561424;
mov ymm2_f L0x555555561424;
(* vpmullw %ymm1,%ymm9,%ymm5                       #! PC = 0x555555557503 *)
smull mulHymm9_0 mulL_0 ymm1_0 ymm9_0;
smull mulHymm9_1 mulL_1 ymm1_1 ymm9_1;
smull mulHymm9_2 mulL_2 ymm1_2 ymm9_2;
smull mulHymm9_3 mulL_3 ymm1_3 ymm9_3;
smull mulHymm9_4 mulL_4 ymm1_4 ymm9_4;
smull mulHymm9_5 mulL_5 ymm1_5 ymm9_5;
smull mulHymm9_6 mulL_6 ymm1_6 ymm9_6;
smull mulHymm9_7 mulL_7 ymm1_7 ymm9_7;
smull mulHymm9_8 mulL_8 ymm1_8 ymm9_8;
smull mulHymm9_9 mulL_9 ymm1_9 ymm9_9;
smull mulHymm9_a mulL_a ymm1_a ymm9_a;
smull mulHymm9_b mulL_b ymm1_b ymm9_b;
smull mulHymm9_c mulL_c ymm1_c ymm9_c;
smull mulHymm9_d mulL_d ymm1_d ymm9_d;
smull mulHymm9_e mulL_e ymm1_e ymm9_e;
smull mulHymm9_f mulL_f ymm1_f ymm9_f;
cast ymm5_0@sint16 mulL_0;
cast ymm5_1@sint16 mulL_1;
cast ymm5_2@sint16 mulL_2;
cast ymm5_3@sint16 mulL_3;
cast ymm5_4@sint16 mulL_4;
cast ymm5_5@sint16 mulL_5;
cast ymm5_6@sint16 mulL_6;
cast ymm5_7@sint16 mulL_7;
cast ymm5_8@sint16 mulL_8;
cast ymm5_9@sint16 mulL_9;
cast ymm5_a@sint16 mulL_a;
cast ymm5_b@sint16 mulL_b;
cast ymm5_c@sint16 mulL_c;
cast ymm5_d@sint16 mulL_d;
cast ymm5_e@sint16 mulL_e;
cast ymm5_f@sint16 mulL_f;
(* vpmulhw %ymm2,%ymm9,%ymm9                       #! PC = 0x555555557507 *)
smull mulH_0 mulLymm9_0 ymm9_0 ymm2_0;
smull mulH_1 mulLymm9_1 ymm9_1 ymm2_1;
smull mulH_2 mulLymm9_2 ymm9_2 ymm2_2;
smull mulH_3 mulLymm9_3 ymm9_3 ymm2_3;
smull mulH_4 mulLymm9_4 ymm9_4 ymm2_4;
smull mulH_5 mulLymm9_5 ymm9_5 ymm2_5;
smull mulH_6 mulLymm9_6 ymm9_6 ymm2_6;
smull mulH_7 mulLymm9_7 ymm9_7 ymm2_7;
smull mulH_8 mulLymm9_8 ymm9_8 ymm2_8;
smull mulH_9 mulLymm9_9 ymm9_9 ymm2_9;
smull mulH_a mulLymm9_a ymm9_a ymm2_a;
smull mulH_b mulLymm9_b ymm9_b ymm2_b;
smull mulH_c mulLymm9_c ymm9_c ymm2_c;
smull mulH_d mulLymm9_d ymm9_d ymm2_d;
smull mulH_e mulLymm9_e ymm9_e ymm2_e;
smull mulH_f mulLymm9_f ymm9_f ymm2_f;
mov ymm9_0 mulH_0;
mov ymm9_1 mulH_1;
mov ymm9_2 mulH_2;
mov ymm9_3 mulH_3;
mov ymm9_4 mulH_4;
mov ymm9_5 mulH_5;
mov ymm9_6 mulH_6;
mov ymm9_7 mulH_7;
mov ymm9_8 mulH_8;
mov ymm9_9 mulH_9;
mov ymm9_a mulH_a;
mov ymm9_b mulH_b;
mov ymm9_c mulH_c;
mov ymm9_d mulH_d;
mov ymm9_e mulH_e;
mov ymm9_f mulH_f;
(* vpmulhw %ymm0,%ymm5,%ymm5                       #! PC = 0x55555555750b *)
smull mulH_0 red_0 ymm5_0 ymm0_0;
assert true && red_0 = mulLymm9_0;
assume red_0 = mulLymm9_0 && true;
smull mulH_1 red_1 ymm5_1 ymm0_1;
assert true && red_1 = mulLymm9_1;
assume red_1 = mulLymm9_1 && true;
smull mulH_2 red_2 ymm5_2 ymm0_2;
assert true && red_2 = mulLymm9_2;
assume red_2 = mulLymm9_2 && true;
smull mulH_3 red_3 ymm5_3 ymm0_3;
assert true && red_3 = mulLymm9_3;
assume red_3 = mulLymm9_3 && true;
smull mulH_4 red_4 ymm5_4 ymm0_4;
assert true && red_4 = mulLymm9_4;
assume red_4 = mulLymm9_4 && true;
smull mulH_5 red_5 ymm5_5 ymm0_5;
assert true && red_5 = mulLymm9_5;
assume red_5 = mulLymm9_5 && true;
smull mulH_6 red_6 ymm5_6 ymm0_6;
assert true && red_6 = mulLymm9_6;
assume red_6 = mulLymm9_6 && true;
smull mulH_7 red_7 ymm5_7 ymm0_7;
assert true && red_7 = mulLymm9_7;
assume red_7 = mulLymm9_7 && true;
smull mulH_8 red_8 ymm5_8 ymm0_8;
assert true && red_8 = mulLymm9_8;
assume red_8 = mulLymm9_8 && true;
smull mulH_9 red_9 ymm5_9 ymm0_9;
assert true && red_9 = mulLymm9_9;
assume red_9 = mulLymm9_9 && true;
smull mulH_a red_a ymm5_a ymm0_a;
assert true && red_a = mulLymm9_a;
assume red_a = mulLymm9_a && true;
smull mulH_b red_b ymm5_b ymm0_b;
assert true && red_b = mulLymm9_b;
assume red_b = mulLymm9_b && true;
smull mulH_c red_c ymm5_c ymm0_c;
assert true && red_c = mulLymm9_c;
assume red_c = mulLymm9_c && true;
smull mulH_d red_d ymm5_d ymm0_d;
assert true && red_d = mulLymm9_d;
assume red_d = mulLymm9_d && true;
smull mulH_e red_e ymm5_e ymm0_e;
assert true && red_e = mulLymm9_e;
assume red_e = mulLymm9_e && true;
smull mulH_f red_f ymm5_f ymm0_f;
assert true && red_f = mulLymm9_f;
assume red_f = mulLymm9_f && true;
mov ymm5_0 mulH_0;
mov ymm5_1 mulH_1;
mov ymm5_2 mulH_2;
mov ymm5_3 mulH_3;
mov ymm5_4 mulH_4;
mov ymm5_5 mulH_5;
mov ymm5_6 mulH_6;
mov ymm5_7 mulH_7;
mov ymm5_8 mulH_8;
mov ymm5_9 mulH_9;
mov ymm5_a mulH_a;
mov ymm5_b mulH_b;
mov ymm5_c mulH_c;
mov ymm5_d mulH_d;
mov ymm5_e mulH_e;
mov ymm5_f mulH_f;
(* vpsubw %ymm5,%ymm9,%ymm9                        #! PC = 0x55555555750f *)
sub ymm9_0 ymm9_0 ymm5_0;
sub ymm9_1 ymm9_1 ymm5_1;
sub ymm9_2 ymm9_2 ymm5_2;
sub ymm9_3 ymm9_3 ymm5_3;
sub ymm9_4 ymm9_4 ymm5_4;
sub ymm9_5 ymm9_5 ymm5_5;
sub ymm9_6 ymm9_6 ymm5_6;
sub ymm9_7 ymm9_7 ymm5_7;
sub ymm9_8 ymm9_8 ymm5_8;
sub ymm9_9 ymm9_9 ymm5_9;
sub ymm9_a ymm9_a ymm5_a;
sub ymm9_b ymm9_b ymm5_b;
sub ymm9_c ymm9_c ymm5_c;
sub ymm9_d ymm9_d ymm5_d;
sub ymm9_e ymm9_e ymm5_e;
sub ymm9_f ymm9_f ymm5_f;
(* vpbroadcastw 0x106(%rdx),%ymm1                  #! EA = L0x555555561226; Value = 0x6f65ad9a276d0198; PC = 0x555555557513 *)
mov ymm1_0 L0x555555561226;
mov ymm1_1 L0x555555561226;
mov ymm1_2 L0x555555561226;
mov ymm1_3 L0x555555561226;
mov ymm1_4 L0x555555561226;
mov ymm1_5 L0x555555561226;
mov ymm1_6 L0x555555561226;
mov ymm1_7 L0x555555561226;
mov ymm1_8 L0x555555561226;
mov ymm1_9 L0x555555561226;
mov ymm1_a L0x555555561226;
mov ymm1_b L0x555555561226;
mov ymm1_c L0x555555561226;
mov ymm1_d L0x555555561226;
mov ymm1_e L0x555555561226;
mov ymm1_f L0x555555561226;
(* vpbroadcastw 0x306(%rdx),%ymm2                  #! EA = L0x555555561426; Value = 0x0165f19a096df198; PC = 0x55555555751c *)
mov ymm2_0 L0x555555561426;
mov ymm2_1 L0x555555561426;
mov ymm2_2 L0x555555561426;
mov ymm2_3 L0x555555561426;
mov ymm2_4 L0x555555561426;
mov ymm2_5 L0x555555561426;
mov ymm2_6 L0x555555561426;
mov ymm2_7 L0x555555561426;
mov ymm2_8 L0x555555561426;
mov ymm2_9 L0x555555561426;
mov ymm2_a L0x555555561426;
mov ymm2_b L0x555555561426;
mov ymm2_c L0x555555561426;
mov ymm2_d L0x555555561426;
mov ymm2_e L0x555555561426;
mov ymm2_f L0x555555561426;
(* vpmullw %ymm1,%ymm11,%ymm5                      #! PC = 0x555555557525 *)
smull mulHymm11_0 mulL_0 ymm1_0 ymm11_0;
smull mulHymm11_1 mulL_1 ymm1_1 ymm11_1;
smull mulHymm11_2 mulL_2 ymm1_2 ymm11_2;
smull mulHymm11_3 mulL_3 ymm1_3 ymm11_3;
smull mulHymm11_4 mulL_4 ymm1_4 ymm11_4;
smull mulHymm11_5 mulL_5 ymm1_5 ymm11_5;
smull mulHymm11_6 mulL_6 ymm1_6 ymm11_6;
smull mulHymm11_7 mulL_7 ymm1_7 ymm11_7;
smull mulHymm11_8 mulL_8 ymm1_8 ymm11_8;
smull mulHymm11_9 mulL_9 ymm1_9 ymm11_9;
smull mulHymm11_a mulL_a ymm1_a ymm11_a;
smull mulHymm11_b mulL_b ymm1_b ymm11_b;
smull mulHymm11_c mulL_c ymm1_c ymm11_c;
smull mulHymm11_d mulL_d ymm1_d ymm11_d;
smull mulHymm11_e mulL_e ymm1_e ymm11_e;
smull mulHymm11_f mulL_f ymm1_f ymm11_f;
cast ymm5_0@sint16 mulL_0;
cast ymm5_1@sint16 mulL_1;
cast ymm5_2@sint16 mulL_2;
cast ymm5_3@sint16 mulL_3;
cast ymm5_4@sint16 mulL_4;
cast ymm5_5@sint16 mulL_5;
cast ymm5_6@sint16 mulL_6;
cast ymm5_7@sint16 mulL_7;
cast ymm5_8@sint16 mulL_8;
cast ymm5_9@sint16 mulL_9;
cast ymm5_a@sint16 mulL_a;
cast ymm5_b@sint16 mulL_b;
cast ymm5_c@sint16 mulL_c;
cast ymm5_d@sint16 mulL_d;
cast ymm5_e@sint16 mulL_e;
cast ymm5_f@sint16 mulL_f;
(* vpmulhw %ymm2,%ymm11,%ymm11                     #! PC = 0x555555557529 *)
smull mulH_0 mulLymm11_0 ymm11_0 ymm2_0;
smull mulH_1 mulLymm11_1 ymm11_1 ymm2_1;
smull mulH_2 mulLymm11_2 ymm11_2 ymm2_2;
smull mulH_3 mulLymm11_3 ymm11_3 ymm2_3;
smull mulH_4 mulLymm11_4 ymm11_4 ymm2_4;
smull mulH_5 mulLymm11_5 ymm11_5 ymm2_5;
smull mulH_6 mulLymm11_6 ymm11_6 ymm2_6;
smull mulH_7 mulLymm11_7 ymm11_7 ymm2_7;
smull mulH_8 mulLymm11_8 ymm11_8 ymm2_8;
smull mulH_9 mulLymm11_9 ymm11_9 ymm2_9;
smull mulH_a mulLymm11_a ymm11_a ymm2_a;
smull mulH_b mulLymm11_b ymm11_b ymm2_b;
smull mulH_c mulLymm11_c ymm11_c ymm2_c;
smull mulH_d mulLymm11_d ymm11_d ymm2_d;
smull mulH_e mulLymm11_e ymm11_e ymm2_e;
smull mulH_f mulLymm11_f ymm11_f ymm2_f;
mov ymm11_0 mulH_0;
mov ymm11_1 mulH_1;
mov ymm11_2 mulH_2;
mov ymm11_3 mulH_3;
mov ymm11_4 mulH_4;
mov ymm11_5 mulH_5;
mov ymm11_6 mulH_6;
mov ymm11_7 mulH_7;
mov ymm11_8 mulH_8;
mov ymm11_9 mulH_9;
mov ymm11_a mulH_a;
mov ymm11_b mulH_b;
mov ymm11_c mulH_c;
mov ymm11_d mulH_d;
mov ymm11_e mulH_e;
mov ymm11_f mulH_f;
(* vpmulhw %ymm0,%ymm5,%ymm5                       #! PC = 0x55555555752d *)
smull mulH_0 red_0 ymm5_0 ymm0_0;
assert true && red_0 = mulLymm11_0;
assume red_0 = mulLymm11_0 && true;
smull mulH_1 red_1 ymm5_1 ymm0_1;
assert true && red_1 = mulLymm11_1;
assume red_1 = mulLymm11_1 && true;
smull mulH_2 red_2 ymm5_2 ymm0_2;
assert true && red_2 = mulLymm11_2;
assume red_2 = mulLymm11_2 && true;
smull mulH_3 red_3 ymm5_3 ymm0_3;
assert true && red_3 = mulLymm11_3;
assume red_3 = mulLymm11_3 && true;
smull mulH_4 red_4 ymm5_4 ymm0_4;
assert true && red_4 = mulLymm11_4;
assume red_4 = mulLymm11_4 && true;
smull mulH_5 red_5 ymm5_5 ymm0_5;
assert true && red_5 = mulLymm11_5;
assume red_5 = mulLymm11_5 && true;
smull mulH_6 red_6 ymm5_6 ymm0_6;
assert true && red_6 = mulLymm11_6;
assume red_6 = mulLymm11_6 && true;
smull mulH_7 red_7 ymm5_7 ymm0_7;
assert true && red_7 = mulLymm11_7;
assume red_7 = mulLymm11_7 && true;
smull mulH_8 red_8 ymm5_8 ymm0_8;
assert true && red_8 = mulLymm11_8;
assume red_8 = mulLymm11_8 && true;
smull mulH_9 red_9 ymm5_9 ymm0_9;
assert true && red_9 = mulLymm11_9;
assume red_9 = mulLymm11_9 && true;
smull mulH_a red_a ymm5_a ymm0_a;
assert true && red_a = mulLymm11_a;
assume red_a = mulLymm11_a && true;
smull mulH_b red_b ymm5_b ymm0_b;
assert true && red_b = mulLymm11_b;
assume red_b = mulLymm11_b && true;
smull mulH_c red_c ymm5_c ymm0_c;
assert true && red_c = mulLymm11_c;
assume red_c = mulLymm11_c && true;
smull mulH_d red_d ymm5_d ymm0_d;
assert true && red_d = mulLymm11_d;
assume red_d = mulLymm11_d && true;
smull mulH_e red_e ymm5_e ymm0_e;
assert true && red_e = mulLymm11_e;
assume red_e = mulLymm11_e && true;
smull mulH_f red_f ymm5_f ymm0_f;
assert true && red_f = mulLymm11_f;
assume red_f = mulLymm11_f && true;
mov ymm5_0 mulH_0;
mov ymm5_1 mulH_1;
mov ymm5_2 mulH_2;
mov ymm5_3 mulH_3;
mov ymm5_4 mulH_4;
mov ymm5_5 mulH_5;
mov ymm5_6 mulH_6;
mov ymm5_7 mulH_7;
mov ymm5_8 mulH_8;
mov ymm5_9 mulH_9;
mov ymm5_a mulH_a;
mov ymm5_b mulH_b;
mov ymm5_c mulH_c;
mov ymm5_d mulH_d;
mov ymm5_e mulH_e;
mov ymm5_f mulH_f;
(* vpsubw %ymm5,%ymm11,%ymm11                      #! PC = 0x555555557531 *)
sub ymm11_0 ymm11_0 ymm5_0;
sub ymm11_1 ymm11_1 ymm5_1;
sub ymm11_2 ymm11_2 ymm5_2;
sub ymm11_3 ymm11_3 ymm5_3;
sub ymm11_4 ymm11_4 ymm5_4;
sub ymm11_5 ymm11_5 ymm5_5;
sub ymm11_6 ymm11_6 ymm5_6;
sub ymm11_7 ymm11_7 ymm5_7;
sub ymm11_8 ymm11_8 ymm5_8;
sub ymm11_9 ymm11_9 ymm5_9;
sub ymm11_a ymm11_a ymm5_a;
sub ymm11_b ymm11_b ymm5_b;
sub ymm11_c ymm11_c ymm5_c;
sub ymm11_d ymm11_d ymm5_d;
sub ymm11_e ymm11_e ymm5_e;
sub ymm11_f ymm11_f ymm5_f;
(* vpaddw %ymm4,%ymm3,%ymm5                        #! PC = 0x555555557535 *)
add ymm5_0 ymm3_0 ymm4_0;
add ymm5_1 ymm3_1 ymm4_1;
add ymm5_2 ymm3_2 ymm4_2;
add ymm5_3 ymm3_3 ymm4_3;
add ymm5_4 ymm3_4 ymm4_4;
add ymm5_5 ymm3_5 ymm4_5;
add ymm5_6 ymm3_6 ymm4_6;
add ymm5_7 ymm3_7 ymm4_7;
add ymm5_8 ymm3_8 ymm4_8;
add ymm5_9 ymm3_9 ymm4_9;
add ymm5_a ymm3_a ymm4_a;
add ymm5_b ymm3_b ymm4_b;
add ymm5_c ymm3_c ymm4_c;
add ymm5_d ymm3_d ymm4_d;
add ymm5_e ymm3_e ymm4_e;
add ymm5_f ymm3_f ymm4_f;
(* vpsubw %ymm4,%ymm3,%ymm4                        #! PC = 0x555555557539 *)
sub ymm4_0 ymm3_0 ymm4_0;
sub ymm4_1 ymm3_1 ymm4_1;
sub ymm4_2 ymm3_2 ymm4_2;
sub ymm4_3 ymm3_3 ymm4_3;
sub ymm4_4 ymm3_4 ymm4_4;
sub ymm4_5 ymm3_5 ymm4_5;
sub ymm4_6 ymm3_6 ymm4_6;
sub ymm4_7 ymm3_7 ymm4_7;
sub ymm4_8 ymm3_8 ymm4_8;
sub ymm4_9 ymm3_9 ymm4_9;
sub ymm4_a ymm3_a ymm4_a;
sub ymm4_b ymm3_b ymm4_b;
sub ymm4_c ymm3_c ymm4_c;
sub ymm4_d ymm3_d ymm4_d;
sub ymm4_e ymm3_e ymm4_e;
sub ymm4_f ymm3_f ymm4_f;
(* vpaddw %ymm7,%ymm6,%ymm3                        #! PC = 0x55555555753d *)
add ymm3_0 ymm6_0 ymm7_0;
add ymm3_1 ymm6_1 ymm7_1;
add ymm3_2 ymm6_2 ymm7_2;
add ymm3_3 ymm6_3 ymm7_3;
add ymm3_4 ymm6_4 ymm7_4;
add ymm3_5 ymm6_5 ymm7_5;
add ymm3_6 ymm6_6 ymm7_6;
add ymm3_7 ymm6_7 ymm7_7;
add ymm3_8 ymm6_8 ymm7_8;
add ymm3_9 ymm6_9 ymm7_9;
add ymm3_a ymm6_a ymm7_a;
add ymm3_b ymm6_b ymm7_b;
add ymm3_c ymm6_c ymm7_c;
add ymm3_d ymm6_d ymm7_d;
add ymm3_e ymm6_e ymm7_e;
add ymm3_f ymm6_f ymm7_f;
(* vpsubw %ymm7,%ymm6,%ymm7                        #! PC = 0x555555557541 *)
sub ymm7_0 ymm6_0 ymm7_0;
sub ymm7_1 ymm6_1 ymm7_1;
sub ymm7_2 ymm6_2 ymm7_2;
sub ymm7_3 ymm6_3 ymm7_3;
sub ymm7_4 ymm6_4 ymm7_4;
sub ymm7_5 ymm6_5 ymm7_5;
sub ymm7_6 ymm6_6 ymm7_6;
sub ymm7_7 ymm6_7 ymm7_7;
sub ymm7_8 ymm6_8 ymm7_8;
sub ymm7_9 ymm6_9 ymm7_9;
sub ymm7_a ymm6_a ymm7_a;
sub ymm7_b ymm6_b ymm7_b;
sub ymm7_c ymm6_c ymm7_c;
sub ymm7_d ymm6_d ymm7_d;
sub ymm7_e ymm6_e ymm7_e;
sub ymm7_f ymm6_f ymm7_f;
(* vpaddw %ymm9,%ymm8,%ymm6                        #! PC = 0x555555557545 *)
add ymm6_0 ymm8_0 ymm9_0;
add ymm6_1 ymm8_1 ymm9_1;
add ymm6_2 ymm8_2 ymm9_2;
add ymm6_3 ymm8_3 ymm9_3;
add ymm6_4 ymm8_4 ymm9_4;
add ymm6_5 ymm8_5 ymm9_5;
add ymm6_6 ymm8_6 ymm9_6;
add ymm6_7 ymm8_7 ymm9_7;
add ymm6_8 ymm8_8 ymm9_8;
add ymm6_9 ymm8_9 ymm9_9;
add ymm6_a ymm8_a ymm9_a;
add ymm6_b ymm8_b ymm9_b;
add ymm6_c ymm8_c ymm9_c;
add ymm6_d ymm8_d ymm9_d;
add ymm6_e ymm8_e ymm9_e;
add ymm6_f ymm8_f ymm9_f;
(* vpsubw %ymm9,%ymm8,%ymm9                        #! PC = 0x55555555754a *)
sub ymm9_0 ymm8_0 ymm9_0;
sub ymm9_1 ymm8_1 ymm9_1;
sub ymm9_2 ymm8_2 ymm9_2;
sub ymm9_3 ymm8_3 ymm9_3;
sub ymm9_4 ymm8_4 ymm9_4;
sub ymm9_5 ymm8_5 ymm9_5;
sub ymm9_6 ymm8_6 ymm9_6;
sub ymm9_7 ymm8_7 ymm9_7;
sub ymm9_8 ymm8_8 ymm9_8;
sub ymm9_9 ymm8_9 ymm9_9;
sub ymm9_a ymm8_a ymm9_a;
sub ymm9_b ymm8_b ymm9_b;
sub ymm9_c ymm8_c ymm9_c;
sub ymm9_d ymm8_d ymm9_d;
sub ymm9_e ymm8_e ymm9_e;
sub ymm9_f ymm8_f ymm9_f;
(* vpaddw %ymm11,%ymm10,%ymm8                      #! PC = 0x55555555754f *)
add ymm8_0 ymm10_0 ymm11_0;
add ymm8_1 ymm10_1 ymm11_1;
add ymm8_2 ymm10_2 ymm11_2;
add ymm8_3 ymm10_3 ymm11_3;
add ymm8_4 ymm10_4 ymm11_4;
add ymm8_5 ymm10_5 ymm11_5;
add ymm8_6 ymm10_6 ymm11_6;
add ymm8_7 ymm10_7 ymm11_7;
add ymm8_8 ymm10_8 ymm11_8;
add ymm8_9 ymm10_9 ymm11_9;
add ymm8_a ymm10_a ymm11_a;
add ymm8_b ymm10_b ymm11_b;
add ymm8_c ymm10_c ymm11_c;
add ymm8_d ymm10_d ymm11_d;
add ymm8_e ymm10_e ymm11_e;
add ymm8_f ymm10_f ymm11_f;
(* vpsubw %ymm11,%ymm10,%ymm11                     #! PC = 0x555555557554 *)
sub ymm11_0 ymm10_0 ymm11_0;
sub ymm11_1 ymm10_1 ymm11_1;
sub ymm11_2 ymm10_2 ymm11_2;
sub ymm11_3 ymm10_3 ymm11_3;
sub ymm11_4 ymm10_4 ymm11_4;
sub ymm11_5 ymm10_5 ymm11_5;
sub ymm11_6 ymm10_6 ymm11_6;
sub ymm11_7 ymm10_7 ymm11_7;
sub ymm11_8 ymm10_8 ymm11_8;
sub ymm11_9 ymm10_9 ymm11_9;
sub ymm11_a ymm10_a ymm11_a;
sub ymm11_b ymm10_b ymm11_b;
sub ymm11_c ymm10_c ymm11_c;
sub ymm11_d ymm10_d ymm11_d;
sub ymm11_e ymm10_e ymm11_e;
sub ymm11_f ymm10_f ymm11_f;
(* vmovdqa %ymm5,0xe0(%rdi)                        #! EA = L0x7fffffffd3c0; PC = 0x555555557559 *)
mov L0x7fffffffd3c0 ymm5_0;
mov L0x7fffffffd3c2 ymm5_1;
mov L0x7fffffffd3c4 ymm5_2;
mov L0x7fffffffd3c6 ymm5_3;
mov L0x7fffffffd3c8 ymm5_4;
mov L0x7fffffffd3ca ymm5_5;
mov L0x7fffffffd3cc ymm5_6;
mov L0x7fffffffd3ce ymm5_7;
mov L0x7fffffffd3d0 ymm5_8;
mov L0x7fffffffd3d2 ymm5_9;
mov L0x7fffffffd3d4 ymm5_a;
mov L0x7fffffffd3d6 ymm5_b;
mov L0x7fffffffd3d8 ymm5_c;
mov L0x7fffffffd3da ymm5_d;
mov L0x7fffffffd3dc ymm5_e;
mov L0x7fffffffd3de ymm5_f;
(* vmovdqa %ymm4,0x1e0(%rdi)                       #! EA = L0x7fffffffd4c0; PC = 0x555555557561 *)
mov L0x7fffffffd4c0 ymm4_0;
mov L0x7fffffffd4c2 ymm4_1;
mov L0x7fffffffd4c4 ymm4_2;
mov L0x7fffffffd4c6 ymm4_3;
mov L0x7fffffffd4c8 ymm4_4;
mov L0x7fffffffd4ca ymm4_5;
mov L0x7fffffffd4cc ymm4_6;
mov L0x7fffffffd4ce ymm4_7;
mov L0x7fffffffd4d0 ymm4_8;
mov L0x7fffffffd4d2 ymm4_9;
mov L0x7fffffffd4d4 ymm4_a;
mov L0x7fffffffd4d6 ymm4_b;
mov L0x7fffffffd4d8 ymm4_c;
mov L0x7fffffffd4da ymm4_d;
mov L0x7fffffffd4dc ymm4_e;
mov L0x7fffffffd4de ymm4_f;
(* vmovdqa %ymm3,0x2e0(%rdi)                       #! EA = L0x7fffffffd5c0; PC = 0x555555557569 *)
mov L0x7fffffffd5c0 ymm3_0;
mov L0x7fffffffd5c2 ymm3_1;
mov L0x7fffffffd5c4 ymm3_2;
mov L0x7fffffffd5c6 ymm3_3;
mov L0x7fffffffd5c8 ymm3_4;
mov L0x7fffffffd5ca ymm3_5;
mov L0x7fffffffd5cc ymm3_6;
mov L0x7fffffffd5ce ymm3_7;
mov L0x7fffffffd5d0 ymm3_8;
mov L0x7fffffffd5d2 ymm3_9;
mov L0x7fffffffd5d4 ymm3_a;
mov L0x7fffffffd5d6 ymm3_b;
mov L0x7fffffffd5d8 ymm3_c;
mov L0x7fffffffd5da ymm3_d;
mov L0x7fffffffd5dc ymm3_e;
mov L0x7fffffffd5de ymm3_f;
(* vmovdqa %ymm7,0x3e0(%rdi)                       #! EA = L0x7fffffffd6c0; PC = 0x555555557571 *)
mov L0x7fffffffd6c0 ymm7_0;
mov L0x7fffffffd6c2 ymm7_1;
mov L0x7fffffffd6c4 ymm7_2;
mov L0x7fffffffd6c6 ymm7_3;
mov L0x7fffffffd6c8 ymm7_4;
mov L0x7fffffffd6ca ymm7_5;
mov L0x7fffffffd6cc ymm7_6;
mov L0x7fffffffd6ce ymm7_7;
mov L0x7fffffffd6d0 ymm7_8;
mov L0x7fffffffd6d2 ymm7_9;
mov L0x7fffffffd6d4 ymm7_a;
mov L0x7fffffffd6d6 ymm7_b;
mov L0x7fffffffd6d8 ymm7_c;
mov L0x7fffffffd6da ymm7_d;
mov L0x7fffffffd6dc ymm7_e;
mov L0x7fffffffd6de ymm7_f;
(* vmovdqa %ymm6,0x4e0(%rdi)                       #! EA = L0x7fffffffd7c0; PC = 0x555555557579 *)
mov L0x7fffffffd7c0 ymm6_0;
mov L0x7fffffffd7c2 ymm6_1;
mov L0x7fffffffd7c4 ymm6_2;
mov L0x7fffffffd7c6 ymm6_3;
mov L0x7fffffffd7c8 ymm6_4;
mov L0x7fffffffd7ca ymm6_5;
mov L0x7fffffffd7cc ymm6_6;
mov L0x7fffffffd7ce ymm6_7;
mov L0x7fffffffd7d0 ymm6_8;
mov L0x7fffffffd7d2 ymm6_9;
mov L0x7fffffffd7d4 ymm6_a;
mov L0x7fffffffd7d6 ymm6_b;
mov L0x7fffffffd7d8 ymm6_c;
mov L0x7fffffffd7da ymm6_d;
mov L0x7fffffffd7dc ymm6_e;
mov L0x7fffffffd7de ymm6_f;
(* vmovdqa %ymm9,0x5e0(%rdi)                       #! EA = L0x7fffffffd8c0; PC = 0x555555557581 *)
mov L0x7fffffffd8c0 ymm9_0;
mov L0x7fffffffd8c2 ymm9_1;
mov L0x7fffffffd8c4 ymm9_2;
mov L0x7fffffffd8c6 ymm9_3;
mov L0x7fffffffd8c8 ymm9_4;
mov L0x7fffffffd8ca ymm9_5;
mov L0x7fffffffd8cc ymm9_6;
mov L0x7fffffffd8ce ymm9_7;
mov L0x7fffffffd8d0 ymm9_8;
mov L0x7fffffffd8d2 ymm9_9;
mov L0x7fffffffd8d4 ymm9_a;
mov L0x7fffffffd8d6 ymm9_b;
mov L0x7fffffffd8d8 ymm9_c;
mov L0x7fffffffd8da ymm9_d;
mov L0x7fffffffd8dc ymm9_e;
mov L0x7fffffffd8de ymm9_f;
(* vmovdqa %ymm8,0x6e0(%rdi)                       #! EA = L0x7fffffffd9c0; PC = 0x555555557589 *)
mov L0x7fffffffd9c0 ymm8_0;
mov L0x7fffffffd9c2 ymm8_1;
mov L0x7fffffffd9c4 ymm8_2;
mov L0x7fffffffd9c6 ymm8_3;
mov L0x7fffffffd9c8 ymm8_4;
mov L0x7fffffffd9ca ymm8_5;
mov L0x7fffffffd9cc ymm8_6;
mov L0x7fffffffd9ce ymm8_7;
mov L0x7fffffffd9d0 ymm8_8;
mov L0x7fffffffd9d2 ymm8_9;
mov L0x7fffffffd9d4 ymm8_a;
mov L0x7fffffffd9d6 ymm8_b;
mov L0x7fffffffd9d8 ymm8_c;
mov L0x7fffffffd9da ymm8_d;
mov L0x7fffffffd9dc ymm8_e;
mov L0x7fffffffd9de ymm8_f;
(* vmovdqa %ymm11,0x7e0(%rdi)                      #! EA = L0x7fffffffdac0; PC = 0x555555557591 *)
mov L0x7fffffffdac0 ymm11_0;
mov L0x7fffffffdac2 ymm11_1;
mov L0x7fffffffdac4 ymm11_2;
mov L0x7fffffffdac6 ymm11_3;
mov L0x7fffffffdac8 ymm11_4;
mov L0x7fffffffdaca ymm11_5;
mov L0x7fffffffdacc ymm11_6;
mov L0x7fffffffdace ymm11_7;
mov L0x7fffffffdad0 ymm11_8;
mov L0x7fffffffdad2 ymm11_9;
mov L0x7fffffffdad4 ymm11_a;
mov L0x7fffffffdad6 ymm11_b;
mov L0x7fffffffdad8 ymm11_c;
mov L0x7fffffffdada ymm11_d;
mov L0x7fffffffdadc ymm11_e;
mov L0x7fffffffdade ymm11_f;


(**************** LEVELS 0-2, 7 *****************)


(**************** CUT 127,  0 *****************)

cut 
  and [
eqmod (c070*x**112+c071*x**113+c072*x**114+c073*x**115+
       c074*x**116+c075*x**117+c076*x**118+c077*x**119+
       c078*x**120+c079*x**121+c07a*x**122+c07b*x**123+
       c07c*x**124+c07d*x**125+c07e*x**126+c07f*x**127+
       c0f0*x**240+c0f1*x**241+c0f2*x**242+c0f3*x**243+
       c0f4*x**244+c0f5*x**245+c0f6*x**246+c0f7*x**247+
       c0f8*x**248+c0f9*x**249+c0fa*x**250+c0fb*x**251+
       c0fc*x**252+c0fd*x**253+c0fe*x**254+c0ff*x**255+
       c170*x**368+c171*x**369+c172*x**370+c173*x**371+
       c174*x**372+c175*x**373+c176*x**374+c177*x**375+
       c178*x**376+c179*x**377+c17a*x**378+c17b*x**379+
       c17c*x**380+c17d*x**381+c17e*x**382+c17f*x**383+
       c1f0*x**496+c1f1*x**497+c1f2*x**498+c1f3*x**499+
       c1f4*x**500+c1f5*x**501+c1f6*x**502+c1f7*x**503+
       c1f8*x**504+c1f9*x**505+c1fa*x**506+c1fb*x**507+
       c1fc*x**508+c1fd*x**509+c1fe*x**510+c1ff*x**511)
      (L0x7fffffffd3c0*x**112+L0x7fffffffd3c2*x**113+L0x7fffffffd3c4*x**114+
       L0x7fffffffd3c6*x**115+L0x7fffffffd3c8*x**116+L0x7fffffffd3ca*x**117+
       L0x7fffffffd3cc*x**118+L0x7fffffffd3ce*x**119+L0x7fffffffd3d0*x**120+
       L0x7fffffffd3d2*x**121+L0x7fffffffd3d4*x**122+L0x7fffffffd3d6*x**123+
       L0x7fffffffd3d8*x**124+L0x7fffffffd3da*x**125+L0x7fffffffd3dc*x**126+
       L0x7fffffffd3de*x**127)
      [10753, x**128 - 1],
eqmod (c070*x**112+c071*x**113+c072*x**114+c073*x**115+
       c074*x**116+c075*x**117+c076*x**118+c077*x**119+
       c078*x**120+c079*x**121+c07a*x**122+c07b*x**123+
       c07c*x**124+c07d*x**125+c07e*x**126+c07f*x**127+
       c0f0*x**240+c0f1*x**241+c0f2*x**242+c0f3*x**243+
       c0f4*x**244+c0f5*x**245+c0f6*x**246+c0f7*x**247+
       c0f8*x**248+c0f9*x**249+c0fa*x**250+c0fb*x**251+
       c0fc*x**252+c0fd*x**253+c0fe*x**254+c0ff*x**255+
       c170*x**368+c171*x**369+c172*x**370+c173*x**371+
       c174*x**372+c175*x**373+c176*x**374+c177*x**375+
       c178*x**376+c179*x**377+c17a*x**378+c17b*x**379+
       c17c*x**380+c17d*x**381+c17e*x**382+c17f*x**383+
       c1f0*x**496+c1f1*x**497+c1f2*x**498+c1f3*x**499+
       c1f4*x**500+c1f5*x**501+c1f6*x**502+c1f7*x**503+
       c1f8*x**504+c1f9*x**505+c1fa*x**506+c1fb*x**507+
       c1fc*x**508+c1fd*x**509+c1fe*x**510+c1ff*x**511)
      (L0x7fffffffd4c0*x**112+L0x7fffffffd4c2*x**113+L0x7fffffffd4c4*x**114+
       L0x7fffffffd4c6*x**115+L0x7fffffffd4c8*x**116+L0x7fffffffd4ca*x**117+
       L0x7fffffffd4cc*x**118+L0x7fffffffd4ce*x**119+L0x7fffffffd4d0*x**120+
       L0x7fffffffd4d2*x**121+L0x7fffffffd4d4*x**122+L0x7fffffffd4d6*x**123+
       L0x7fffffffd4d8*x**124+L0x7fffffffd4da*x**125+L0x7fffffffd4dc*x**126+
       L0x7fffffffd4de*x**127)
      [10753, x**128 - 10752],
eqmod (c070*x**112+c071*x**113+c072*x**114+c073*x**115+
       c074*x**116+c075*x**117+c076*x**118+c077*x**119+
       c078*x**120+c079*x**121+c07a*x**122+c07b*x**123+
       c07c*x**124+c07d*x**125+c07e*x**126+c07f*x**127+
       c0f0*x**240+c0f1*x**241+c0f2*x**242+c0f3*x**243+
       c0f4*x**244+c0f5*x**245+c0f6*x**246+c0f7*x**247+
       c0f8*x**248+c0f9*x**249+c0fa*x**250+c0fb*x**251+
       c0fc*x**252+c0fd*x**253+c0fe*x**254+c0ff*x**255+
       c170*x**368+c171*x**369+c172*x**370+c173*x**371+
       c174*x**372+c175*x**373+c176*x**374+c177*x**375+
       c178*x**376+c179*x**377+c17a*x**378+c17b*x**379+
       c17c*x**380+c17d*x**381+c17e*x**382+c17f*x**383+
       c1f0*x**496+c1f1*x**497+c1f2*x**498+c1f3*x**499+
       c1f4*x**500+c1f5*x**501+c1f6*x**502+c1f7*x**503+
       c1f8*x**504+c1f9*x**505+c1fa*x**506+c1fb*x**507+
       c1fc*x**508+c1fd*x**509+c1fe*x**510+c1ff*x**511)
      (L0x7fffffffd5c0*x**112+L0x7fffffffd5c2*x**113+L0x7fffffffd5c4*x**114+
       L0x7fffffffd5c6*x**115+L0x7fffffffd5c8*x**116+L0x7fffffffd5ca*x**117+
       L0x7fffffffd5cc*x**118+L0x7fffffffd5ce*x**119+L0x7fffffffd5d0*x**120+
       L0x7fffffffd5d2*x**121+L0x7fffffffd5d4*x**122+L0x7fffffffd5d6*x**123+
       L0x7fffffffd5d8*x**124+L0x7fffffffd5da*x**125+L0x7fffffffd5dc*x**126+
       L0x7fffffffd5de*x**127)
      [10753, x**128 - 6264],
eqmod (c070*x**112+c071*x**113+c072*x**114+c073*x**115+
       c074*x**116+c075*x**117+c076*x**118+c077*x**119+
       c078*x**120+c079*x**121+c07a*x**122+c07b*x**123+
       c07c*x**124+c07d*x**125+c07e*x**126+c07f*x**127+
       c0f0*x**240+c0f1*x**241+c0f2*x**242+c0f3*x**243+
       c0f4*x**244+c0f5*x**245+c0f6*x**246+c0f7*x**247+
       c0f8*x**248+c0f9*x**249+c0fa*x**250+c0fb*x**251+
       c0fc*x**252+c0fd*x**253+c0fe*x**254+c0ff*x**255+
       c170*x**368+c171*x**369+c172*x**370+c173*x**371+
       c174*x**372+c175*x**373+c176*x**374+c177*x**375+
       c178*x**376+c179*x**377+c17a*x**378+c17b*x**379+
       c17c*x**380+c17d*x**381+c17e*x**382+c17f*x**383+
       c1f0*x**496+c1f1*x**497+c1f2*x**498+c1f3*x**499+
       c1f4*x**500+c1f5*x**501+c1f6*x**502+c1f7*x**503+
       c1f8*x**504+c1f9*x**505+c1fa*x**506+c1fb*x**507+
       c1fc*x**508+c1fd*x**509+c1fe*x**510+c1ff*x**511)
      (L0x7fffffffd6c0*x**112+L0x7fffffffd6c2*x**113+L0x7fffffffd6c4*x**114+
       L0x7fffffffd6c6*x**115+L0x7fffffffd6c8*x**116+L0x7fffffffd6ca*x**117+
       L0x7fffffffd6cc*x**118+L0x7fffffffd6ce*x**119+L0x7fffffffd6d0*x**120+
       L0x7fffffffd6d2*x**121+L0x7fffffffd6d4*x**122+L0x7fffffffd6d6*x**123+
       L0x7fffffffd6d8*x**124+L0x7fffffffd6da*x**125+L0x7fffffffd6dc*x**126+
       L0x7fffffffd6de*x**127)
      [10753, x**128 - 4489],
eqmod (c070*x**112+c071*x**113+c072*x**114+c073*x**115+
       c074*x**116+c075*x**117+c076*x**118+c077*x**119+
       c078*x**120+c079*x**121+c07a*x**122+c07b*x**123+
       c07c*x**124+c07d*x**125+c07e*x**126+c07f*x**127+
       c0f0*x**240+c0f1*x**241+c0f2*x**242+c0f3*x**243+
       c0f4*x**244+c0f5*x**245+c0f6*x**246+c0f7*x**247+
       c0f8*x**248+c0f9*x**249+c0fa*x**250+c0fb*x**251+
       c0fc*x**252+c0fd*x**253+c0fe*x**254+c0ff*x**255+
       c170*x**368+c171*x**369+c172*x**370+c173*x**371+
       c174*x**372+c175*x**373+c176*x**374+c177*x**375+
       c178*x**376+c179*x**377+c17a*x**378+c17b*x**379+
       c17c*x**380+c17d*x**381+c17e*x**382+c17f*x**383+
       c1f0*x**496+c1f1*x**497+c1f2*x**498+c1f3*x**499+
       c1f4*x**500+c1f5*x**501+c1f6*x**502+c1f7*x**503+
       c1f8*x**504+c1f9*x**505+c1fa*x**506+c1fb*x**507+
       c1fc*x**508+c1fd*x**509+c1fe*x**510+c1ff*x**511)
      (L0x7fffffffd7c0*x**112+L0x7fffffffd7c2*x**113+L0x7fffffffd7c4*x**114+
       L0x7fffffffd7c6*x**115+L0x7fffffffd7c8*x**116+L0x7fffffffd7ca*x**117+
       L0x7fffffffd7cc*x**118+L0x7fffffffd7ce*x**119+L0x7fffffffd7d0*x**120+
       L0x7fffffffd7d2*x**121+L0x7fffffffd7d4*x**122+L0x7fffffffd7d6*x**123+
       L0x7fffffffd7d8*x**124+L0x7fffffffd7da*x**125+L0x7fffffffd7dc*x**126+
       L0x7fffffffd7de*x**127)
      [10753, x**128 - 321],
eqmod (c070*x**112+c071*x**113+c072*x**114+c073*x**115+
       c074*x**116+c075*x**117+c076*x**118+c077*x**119+
       c078*x**120+c079*x**121+c07a*x**122+c07b*x**123+
       c07c*x**124+c07d*x**125+c07e*x**126+c07f*x**127+
       c0f0*x**240+c0f1*x**241+c0f2*x**242+c0f3*x**243+
       c0f4*x**244+c0f5*x**245+c0f6*x**246+c0f7*x**247+
       c0f8*x**248+c0f9*x**249+c0fa*x**250+c0fb*x**251+
       c0fc*x**252+c0fd*x**253+c0fe*x**254+c0ff*x**255+
       c170*x**368+c171*x**369+c172*x**370+c173*x**371+
       c174*x**372+c175*x**373+c176*x**374+c177*x**375+
       c178*x**376+c179*x**377+c17a*x**378+c17b*x**379+
       c17c*x**380+c17d*x**381+c17e*x**382+c17f*x**383+
       c1f0*x**496+c1f1*x**497+c1f2*x**498+c1f3*x**499+
       c1f4*x**500+c1f5*x**501+c1f6*x**502+c1f7*x**503+
       c1f8*x**504+c1f9*x**505+c1fa*x**506+c1fb*x**507+
       c1fc*x**508+c1fd*x**509+c1fe*x**510+c1ff*x**511)
      (L0x7fffffffd8c0*x**112+L0x7fffffffd8c2*x**113+L0x7fffffffd8c4*x**114+
       L0x7fffffffd8c6*x**115+L0x7fffffffd8c8*x**116+L0x7fffffffd8ca*x**117+
       L0x7fffffffd8cc*x**118+L0x7fffffffd8ce*x**119+L0x7fffffffd8d0*x**120+
       L0x7fffffffd8d2*x**121+L0x7fffffffd8d4*x**122+L0x7fffffffd8d6*x**123+
       L0x7fffffffd8d8*x**124+L0x7fffffffd8da*x**125+L0x7fffffffd8dc*x**126+
       L0x7fffffffd8de*x**127)
      [10753, x**128 - 10432],
eqmod (c070*x**112+c071*x**113+c072*x**114+c073*x**115+
       c074*x**116+c075*x**117+c076*x**118+c077*x**119+
       c078*x**120+c079*x**121+c07a*x**122+c07b*x**123+
       c07c*x**124+c07d*x**125+c07e*x**126+c07f*x**127+
       c0f0*x**240+c0f1*x**241+c0f2*x**242+c0f3*x**243+
       c0f4*x**244+c0f5*x**245+c0f6*x**246+c0f7*x**247+
       c0f8*x**248+c0f9*x**249+c0fa*x**250+c0fb*x**251+
       c0fc*x**252+c0fd*x**253+c0fe*x**254+c0ff*x**255+
       c170*x**368+c171*x**369+c172*x**370+c173*x**371+
       c174*x**372+c175*x**373+c176*x**374+c177*x**375+
       c178*x**376+c179*x**377+c17a*x**378+c17b*x**379+
       c17c*x**380+c17d*x**381+c17e*x**382+c17f*x**383+
       c1f0*x**496+c1f1*x**497+c1f2*x**498+c1f3*x**499+
       c1f4*x**500+c1f5*x**501+c1f6*x**502+c1f7*x**503+
       c1f8*x**504+c1f9*x**505+c1fa*x**506+c1fb*x**507+
       c1fc*x**508+c1fd*x**509+c1fe*x**510+c1ff*x**511)
      (L0x7fffffffd9c0*x**112+L0x7fffffffd9c2*x**113+L0x7fffffffd9c4*x**114+
       L0x7fffffffd9c6*x**115+L0x7fffffffd9c8*x**116+L0x7fffffffd9ca*x**117+
       L0x7fffffffd9cc*x**118+L0x7fffffffd9ce*x**119+L0x7fffffffd9d0*x**120+
       L0x7fffffffd9d2*x**121+L0x7fffffffd9d4*x**122+L0x7fffffffd9d6*x**123+
       L0x7fffffffd9d8*x**124+L0x7fffffffd9da*x**125+L0x7fffffffd9dc*x**126+
       L0x7fffffffd9de*x**127)
      [10753, x**128 - 10686],
eqmod (c070*x**112+c071*x**113+c072*x**114+c073*x**115+
       c074*x**116+c075*x**117+c076*x**118+c077*x**119+
       c078*x**120+c079*x**121+c07a*x**122+c07b*x**123+
       c07c*x**124+c07d*x**125+c07e*x**126+c07f*x**127+
       c0f0*x**240+c0f1*x**241+c0f2*x**242+c0f3*x**243+
       c0f4*x**244+c0f5*x**245+c0f6*x**246+c0f7*x**247+
       c0f8*x**248+c0f9*x**249+c0fa*x**250+c0fb*x**251+
       c0fc*x**252+c0fd*x**253+c0fe*x**254+c0ff*x**255+
       c170*x**368+c171*x**369+c172*x**370+c173*x**371+
       c174*x**372+c175*x**373+c176*x**374+c177*x**375+
       c178*x**376+c179*x**377+c17a*x**378+c17b*x**379+
       c17c*x**380+c17d*x**381+c17e*x**382+c17f*x**383+
       c1f0*x**496+c1f1*x**497+c1f2*x**498+c1f3*x**499+
       c1f4*x**500+c1f5*x**501+c1f6*x**502+c1f7*x**503+
       c1f8*x**504+c1f9*x**505+c1fa*x**506+c1fb*x**507+
       c1fc*x**508+c1fd*x**509+c1fe*x**510+c1ff*x**511)
      (L0x7fffffffdac0*x**112+L0x7fffffffdac2*x**113+L0x7fffffffdac4*x**114+
       L0x7fffffffdac6*x**115+L0x7fffffffdac8*x**116+L0x7fffffffdaca*x**117+
       L0x7fffffffdacc*x**118+L0x7fffffffdace*x**119+L0x7fffffffdad0*x**120+
       L0x7fffffffdad2*x**121+L0x7fffffffdad4*x**122+L0x7fffffffdad6*x**123+
       L0x7fffffffdad8*x**124+L0x7fffffffdada*x**125+L0x7fffffffdadc*x**126+
       L0x7fffffffdade*x**127)
      [10753, x**128 - 67]
] && and [
( -8192)@16<=s L0x7fffffffd2e0,L0x7fffffffd2e0<s  8192@16,
( -8192)@16<=s L0x7fffffffd2e2,L0x7fffffffd2e2<s  8192@16,
( -8192)@16<=s L0x7fffffffd2e4,L0x7fffffffd2e4<s  8192@16,
( -8192)@16<=s L0x7fffffffd2e6,L0x7fffffffd2e6<s  8192@16,
( -8192)@16<=s L0x7fffffffd2e8,L0x7fffffffd2e8<s  8192@16,
( -8192)@16<=s L0x7fffffffd2ea,L0x7fffffffd2ea<s  8192@16,
( -8192)@16<=s L0x7fffffffd2ec,L0x7fffffffd2ec<s  8192@16,
( -8192)@16<=s L0x7fffffffd2ee,L0x7fffffffd2ee<s  8192@16,
( -8192)@16<=s L0x7fffffffd2f0,L0x7fffffffd2f0<s  8192@16,
( -8192)@16<=s L0x7fffffffd2f2,L0x7fffffffd2f2<s  8192@16,
( -8192)@16<=s L0x7fffffffd2f4,L0x7fffffffd2f4<s  8192@16,
( -8192)@16<=s L0x7fffffffd2f6,L0x7fffffffd2f6<s  8192@16,
( -8192)@16<=s L0x7fffffffd2f8,L0x7fffffffd2f8<s  8192@16,
( -8192)@16<=s L0x7fffffffd2fa,L0x7fffffffd2fa<s  8192@16,
( -8192)@16<=s L0x7fffffffd2fc,L0x7fffffffd2fc<s  8192@16,
( -8192)@16<=s L0x7fffffffd2fe,L0x7fffffffd2fe<s  8192@16,
( -8192)@16<=s L0x7fffffffd300,L0x7fffffffd300<s  8192@16,
( -8192)@16<=s L0x7fffffffd302,L0x7fffffffd302<s  8192@16,
( -8192)@16<=s L0x7fffffffd304,L0x7fffffffd304<s  8192@16,
( -8192)@16<=s L0x7fffffffd306,L0x7fffffffd306<s  8192@16,
( -8192)@16<=s L0x7fffffffd308,L0x7fffffffd308<s  8192@16,
( -8192)@16<=s L0x7fffffffd30a,L0x7fffffffd30a<s  8192@16,
( -8192)@16<=s L0x7fffffffd30c,L0x7fffffffd30c<s  8192@16,
( -8192)@16<=s L0x7fffffffd30e,L0x7fffffffd30e<s  8192@16,
( -8192)@16<=s L0x7fffffffd310,L0x7fffffffd310<s  8192@16,
( -8192)@16<=s L0x7fffffffd312,L0x7fffffffd312<s  8192@16,
( -8192)@16<=s L0x7fffffffd314,L0x7fffffffd314<s  8192@16,
( -8192)@16<=s L0x7fffffffd316,L0x7fffffffd316<s  8192@16,
( -8192)@16<=s L0x7fffffffd318,L0x7fffffffd318<s  8192@16,
( -8192)@16<=s L0x7fffffffd31a,L0x7fffffffd31a<s  8192@16,
( -8192)@16<=s L0x7fffffffd31c,L0x7fffffffd31c<s  8192@16,
( -8192)@16<=s L0x7fffffffd31e,L0x7fffffffd31e<s  8192@16,
( -8192)@16<=s L0x7fffffffd320,L0x7fffffffd320<s  8192@16,
( -8192)@16<=s L0x7fffffffd322,L0x7fffffffd322<s  8192@16,
( -8192)@16<=s L0x7fffffffd324,L0x7fffffffd324<s  8192@16,
( -8192)@16<=s L0x7fffffffd326,L0x7fffffffd326<s  8192@16,
( -8192)@16<=s L0x7fffffffd328,L0x7fffffffd328<s  8192@16,
( -8192)@16<=s L0x7fffffffd32a,L0x7fffffffd32a<s  8192@16,
( -8192)@16<=s L0x7fffffffd32c,L0x7fffffffd32c<s  8192@16,
( -8192)@16<=s L0x7fffffffd32e,L0x7fffffffd32e<s  8192@16,
( -8192)@16<=s L0x7fffffffd330,L0x7fffffffd330<s  8192@16,
( -8192)@16<=s L0x7fffffffd332,L0x7fffffffd332<s  8192@16,
( -8192)@16<=s L0x7fffffffd334,L0x7fffffffd334<s  8192@16,
( -8192)@16<=s L0x7fffffffd336,L0x7fffffffd336<s  8192@16,
( -8192)@16<=s L0x7fffffffd338,L0x7fffffffd338<s  8192@16,
( -8192)@16<=s L0x7fffffffd33a,L0x7fffffffd33a<s  8192@16,
( -8192)@16<=s L0x7fffffffd33c,L0x7fffffffd33c<s  8192@16,
( -8192)@16<=s L0x7fffffffd33e,L0x7fffffffd33e<s  8192@16,
( -8192)@16<=s L0x7fffffffd340,L0x7fffffffd340<s  8192@16,
( -8192)@16<=s L0x7fffffffd342,L0x7fffffffd342<s  8192@16,
( -8192)@16<=s L0x7fffffffd344,L0x7fffffffd344<s  8192@16,
( -8192)@16<=s L0x7fffffffd346,L0x7fffffffd346<s  8192@16,
( -8192)@16<=s L0x7fffffffd348,L0x7fffffffd348<s  8192@16,
( -8192)@16<=s L0x7fffffffd34a,L0x7fffffffd34a<s  8192@16,
( -8192)@16<=s L0x7fffffffd34c,L0x7fffffffd34c<s  8192@16,
( -8192)@16<=s L0x7fffffffd34e,L0x7fffffffd34e<s  8192@16,
( -8192)@16<=s L0x7fffffffd350,L0x7fffffffd350<s  8192@16,
( -8192)@16<=s L0x7fffffffd352,L0x7fffffffd352<s  8192@16,
( -8192)@16<=s L0x7fffffffd354,L0x7fffffffd354<s  8192@16,
( -8192)@16<=s L0x7fffffffd356,L0x7fffffffd356<s  8192@16,
( -8192)@16<=s L0x7fffffffd358,L0x7fffffffd358<s  8192@16,
( -8192)@16<=s L0x7fffffffd35a,L0x7fffffffd35a<s  8192@16,
( -8192)@16<=s L0x7fffffffd35c,L0x7fffffffd35c<s  8192@16,
( -8192)@16<=s L0x7fffffffd35e,L0x7fffffffd35e<s  8192@16,
( -8192)@16<=s L0x7fffffffd360,L0x7fffffffd360<s  8192@16,
( -8192)@16<=s L0x7fffffffd362,L0x7fffffffd362<s  8192@16,
( -8192)@16<=s L0x7fffffffd364,L0x7fffffffd364<s  8192@16,
( -8192)@16<=s L0x7fffffffd366,L0x7fffffffd366<s  8192@16,
( -8192)@16<=s L0x7fffffffd368,L0x7fffffffd368<s  8192@16,
( -8192)@16<=s L0x7fffffffd36a,L0x7fffffffd36a<s  8192@16,
( -8192)@16<=s L0x7fffffffd36c,L0x7fffffffd36c<s  8192@16,
( -8192)@16<=s L0x7fffffffd36e,L0x7fffffffd36e<s  8192@16,
( -8192)@16<=s L0x7fffffffd370,L0x7fffffffd370<s  8192@16,
( -8192)@16<=s L0x7fffffffd372,L0x7fffffffd372<s  8192@16,
( -8192)@16<=s L0x7fffffffd374,L0x7fffffffd374<s  8192@16,
( -8192)@16<=s L0x7fffffffd376,L0x7fffffffd376<s  8192@16,
( -8192)@16<=s L0x7fffffffd378,L0x7fffffffd378<s  8192@16,
( -8192)@16<=s L0x7fffffffd37a,L0x7fffffffd37a<s  8192@16,
( -8192)@16<=s L0x7fffffffd37c,L0x7fffffffd37c<s  8192@16,
( -8192)@16<=s L0x7fffffffd37e,L0x7fffffffd37e<s  8192@16,
( -8192)@16<=s L0x7fffffffd380,L0x7fffffffd380<s  8192@16,
( -8192)@16<=s L0x7fffffffd382,L0x7fffffffd382<s  8192@16,
( -8192)@16<=s L0x7fffffffd384,L0x7fffffffd384<s  8192@16,
( -8192)@16<=s L0x7fffffffd386,L0x7fffffffd386<s  8192@16,
( -8192)@16<=s L0x7fffffffd388,L0x7fffffffd388<s  8192@16,
( -8192)@16<=s L0x7fffffffd38a,L0x7fffffffd38a<s  8192@16,
( -8192)@16<=s L0x7fffffffd38c,L0x7fffffffd38c<s  8192@16,
( -8192)@16<=s L0x7fffffffd38e,L0x7fffffffd38e<s  8192@16,
( -8192)@16<=s L0x7fffffffd390,L0x7fffffffd390<s  8192@16,
( -8192)@16<=s L0x7fffffffd392,L0x7fffffffd392<s  8192@16,
( -8192)@16<=s L0x7fffffffd394,L0x7fffffffd394<s  8192@16,
( -8192)@16<=s L0x7fffffffd396,L0x7fffffffd396<s  8192@16,
( -8192)@16<=s L0x7fffffffd398,L0x7fffffffd398<s  8192@16,
( -8192)@16<=s L0x7fffffffd39a,L0x7fffffffd39a<s  8192@16,
( -8192)@16<=s L0x7fffffffd39c,L0x7fffffffd39c<s  8192@16,
( -8192)@16<=s L0x7fffffffd39e,L0x7fffffffd39e<s  8192@16,
( -8192)@16<=s L0x7fffffffd3a0,L0x7fffffffd3a0<s  8192@16,
( -8192)@16<=s L0x7fffffffd3a2,L0x7fffffffd3a2<s  8192@16,
( -8192)@16<=s L0x7fffffffd3a4,L0x7fffffffd3a4<s  8192@16,
( -8192)@16<=s L0x7fffffffd3a6,L0x7fffffffd3a6<s  8192@16,
( -8192)@16<=s L0x7fffffffd3a8,L0x7fffffffd3a8<s  8192@16,
( -8192)@16<=s L0x7fffffffd3aa,L0x7fffffffd3aa<s  8192@16,
( -8192)@16<=s L0x7fffffffd3ac,L0x7fffffffd3ac<s  8192@16,
( -8192)@16<=s L0x7fffffffd3ae,L0x7fffffffd3ae<s  8192@16,
( -8192)@16<=s L0x7fffffffd3b0,L0x7fffffffd3b0<s  8192@16,
( -8192)@16<=s L0x7fffffffd3b2,L0x7fffffffd3b2<s  8192@16,
( -8192)@16<=s L0x7fffffffd3b4,L0x7fffffffd3b4<s  8192@16,
( -8192)@16<=s L0x7fffffffd3b6,L0x7fffffffd3b6<s  8192@16,
( -8192)@16<=s L0x7fffffffd3b8,L0x7fffffffd3b8<s  8192@16,
( -8192)@16<=s L0x7fffffffd3ba,L0x7fffffffd3ba<s  8192@16,
( -8192)@16<=s L0x7fffffffd3bc,L0x7fffffffd3bc<s  8192@16,
( -8192)@16<=s L0x7fffffffd3be,L0x7fffffffd3be<s  8192@16,
( -8192)@16<=s L0x7fffffffd3c0,L0x7fffffffd3c0<s  8192@16,
( -8192)@16<=s L0x7fffffffd3c2,L0x7fffffffd3c2<s  8192@16,
( -8192)@16<=s L0x7fffffffd3c4,L0x7fffffffd3c4<s  8192@16,
( -8192)@16<=s L0x7fffffffd3c6,L0x7fffffffd3c6<s  8192@16,
( -8192)@16<=s L0x7fffffffd3c8,L0x7fffffffd3c8<s  8192@16,
( -8192)@16<=s L0x7fffffffd3ca,L0x7fffffffd3ca<s  8192@16,
( -8192)@16<=s L0x7fffffffd3cc,L0x7fffffffd3cc<s  8192@16,
( -8192)@16<=s L0x7fffffffd3ce,L0x7fffffffd3ce<s  8192@16,
( -8192)@16<=s L0x7fffffffd3d0,L0x7fffffffd3d0<s  8192@16,
( -8192)@16<=s L0x7fffffffd3d2,L0x7fffffffd3d2<s  8192@16,
( -8192)@16<=s L0x7fffffffd3d4,L0x7fffffffd3d4<s  8192@16,
( -8192)@16<=s L0x7fffffffd3d6,L0x7fffffffd3d6<s  8192@16,
( -8192)@16<=s L0x7fffffffd3d8,L0x7fffffffd3d8<s  8192@16,
( -6144)@16<=s L0x7fffffffd3da,L0x7fffffffd3da<s  6144@16,
( -6144)@16<=s L0x7fffffffd3dc,L0x7fffffffd3dc<s  6144@16,
( -6144)@16<=s L0x7fffffffd3de,L0x7fffffffd3de<s  6144@16
,
( -8192)@16<=s L0x7fffffffd3e0,L0x7fffffffd3e0<s  8192@16,
( -8192)@16<=s L0x7fffffffd3e2,L0x7fffffffd3e2<s  8192@16,
( -8192)@16<=s L0x7fffffffd3e4,L0x7fffffffd3e4<s  8192@16,
( -8192)@16<=s L0x7fffffffd3e6,L0x7fffffffd3e6<s  8192@16,
( -8192)@16<=s L0x7fffffffd3e8,L0x7fffffffd3e8<s  8192@16,
( -8192)@16<=s L0x7fffffffd3ea,L0x7fffffffd3ea<s  8192@16,
( -8192)@16<=s L0x7fffffffd3ec,L0x7fffffffd3ec<s  8192@16,
( -8192)@16<=s L0x7fffffffd3ee,L0x7fffffffd3ee<s  8192@16,
( -8192)@16<=s L0x7fffffffd3f0,L0x7fffffffd3f0<s  8192@16,
( -8192)@16<=s L0x7fffffffd3f2,L0x7fffffffd3f2<s  8192@16,
( -8192)@16<=s L0x7fffffffd3f4,L0x7fffffffd3f4<s  8192@16,
( -8192)@16<=s L0x7fffffffd3f6,L0x7fffffffd3f6<s  8192@16,
( -8192)@16<=s L0x7fffffffd3f8,L0x7fffffffd3f8<s  8192@16,
( -8192)@16<=s L0x7fffffffd3fa,L0x7fffffffd3fa<s  8192@16,
( -8192)@16<=s L0x7fffffffd3fc,L0x7fffffffd3fc<s  8192@16,
( -8192)@16<=s L0x7fffffffd3fe,L0x7fffffffd3fe<s  8192@16,
( -8192)@16<=s L0x7fffffffd400,L0x7fffffffd400<s  8192@16,
( -8192)@16<=s L0x7fffffffd402,L0x7fffffffd402<s  8192@16,
( -8192)@16<=s L0x7fffffffd404,L0x7fffffffd404<s  8192@16,
( -8192)@16<=s L0x7fffffffd406,L0x7fffffffd406<s  8192@16,
( -8192)@16<=s L0x7fffffffd408,L0x7fffffffd408<s  8192@16,
( -8192)@16<=s L0x7fffffffd40a,L0x7fffffffd40a<s  8192@16,
( -8192)@16<=s L0x7fffffffd40c,L0x7fffffffd40c<s  8192@16,
( -8192)@16<=s L0x7fffffffd40e,L0x7fffffffd40e<s  8192@16,
( -8192)@16<=s L0x7fffffffd410,L0x7fffffffd410<s  8192@16,
( -8192)@16<=s L0x7fffffffd412,L0x7fffffffd412<s  8192@16,
( -8192)@16<=s L0x7fffffffd414,L0x7fffffffd414<s  8192@16,
( -8192)@16<=s L0x7fffffffd416,L0x7fffffffd416<s  8192@16,
( -8192)@16<=s L0x7fffffffd418,L0x7fffffffd418<s  8192@16,
( -8192)@16<=s L0x7fffffffd41a,L0x7fffffffd41a<s  8192@16,
( -8192)@16<=s L0x7fffffffd41c,L0x7fffffffd41c<s  8192@16,
( -8192)@16<=s L0x7fffffffd41e,L0x7fffffffd41e<s  8192@16,
( -8192)@16<=s L0x7fffffffd420,L0x7fffffffd420<s  8192@16,
( -8192)@16<=s L0x7fffffffd422,L0x7fffffffd422<s  8192@16,
( -8192)@16<=s L0x7fffffffd424,L0x7fffffffd424<s  8192@16,
( -8192)@16<=s L0x7fffffffd426,L0x7fffffffd426<s  8192@16,
( -8192)@16<=s L0x7fffffffd428,L0x7fffffffd428<s  8192@16,
( -8192)@16<=s L0x7fffffffd42a,L0x7fffffffd42a<s  8192@16,
( -8192)@16<=s L0x7fffffffd42c,L0x7fffffffd42c<s  8192@16,
( -8192)@16<=s L0x7fffffffd42e,L0x7fffffffd42e<s  8192@16,
( -8192)@16<=s L0x7fffffffd430,L0x7fffffffd430<s  8192@16,
( -8192)@16<=s L0x7fffffffd432,L0x7fffffffd432<s  8192@16,
( -8192)@16<=s L0x7fffffffd434,L0x7fffffffd434<s  8192@16,
( -8192)@16<=s L0x7fffffffd436,L0x7fffffffd436<s  8192@16,
( -8192)@16<=s L0x7fffffffd438,L0x7fffffffd438<s  8192@16,
( -8192)@16<=s L0x7fffffffd43a,L0x7fffffffd43a<s  8192@16,
( -8192)@16<=s L0x7fffffffd43c,L0x7fffffffd43c<s  8192@16,
( -8192)@16<=s L0x7fffffffd43e,L0x7fffffffd43e<s  8192@16,
( -8192)@16<=s L0x7fffffffd440,L0x7fffffffd440<s  8192@16,
( -8192)@16<=s L0x7fffffffd442,L0x7fffffffd442<s  8192@16,
( -8192)@16<=s L0x7fffffffd444,L0x7fffffffd444<s  8192@16,
( -8192)@16<=s L0x7fffffffd446,L0x7fffffffd446<s  8192@16,
( -8192)@16<=s L0x7fffffffd448,L0x7fffffffd448<s  8192@16,
( -8192)@16<=s L0x7fffffffd44a,L0x7fffffffd44a<s  8192@16,
( -8192)@16<=s L0x7fffffffd44c,L0x7fffffffd44c<s  8192@16,
( -8192)@16<=s L0x7fffffffd44e,L0x7fffffffd44e<s  8192@16,
( -8192)@16<=s L0x7fffffffd450,L0x7fffffffd450<s  8192@16,
( -8192)@16<=s L0x7fffffffd452,L0x7fffffffd452<s  8192@16,
( -8192)@16<=s L0x7fffffffd454,L0x7fffffffd454<s  8192@16,
( -8192)@16<=s L0x7fffffffd456,L0x7fffffffd456<s  8192@16,
( -8192)@16<=s L0x7fffffffd458,L0x7fffffffd458<s  8192@16,
( -8192)@16<=s L0x7fffffffd45a,L0x7fffffffd45a<s  8192@16,
( -8192)@16<=s L0x7fffffffd45c,L0x7fffffffd45c<s  8192@16,
( -8192)@16<=s L0x7fffffffd45e,L0x7fffffffd45e<s  8192@16,
( -8192)@16<=s L0x7fffffffd460,L0x7fffffffd460<s  8192@16,
( -8192)@16<=s L0x7fffffffd462,L0x7fffffffd462<s  8192@16,
( -8192)@16<=s L0x7fffffffd464,L0x7fffffffd464<s  8192@16,
( -8192)@16<=s L0x7fffffffd466,L0x7fffffffd466<s  8192@16,
( -8192)@16<=s L0x7fffffffd468,L0x7fffffffd468<s  8192@16,
( -8192)@16<=s L0x7fffffffd46a,L0x7fffffffd46a<s  8192@16,
( -8192)@16<=s L0x7fffffffd46c,L0x7fffffffd46c<s  8192@16,
( -8192)@16<=s L0x7fffffffd46e,L0x7fffffffd46e<s  8192@16,
( -8192)@16<=s L0x7fffffffd470,L0x7fffffffd470<s  8192@16,
( -8192)@16<=s L0x7fffffffd472,L0x7fffffffd472<s  8192@16,
( -8192)@16<=s L0x7fffffffd474,L0x7fffffffd474<s  8192@16,
( -8192)@16<=s L0x7fffffffd476,L0x7fffffffd476<s  8192@16,
( -8192)@16<=s L0x7fffffffd478,L0x7fffffffd478<s  8192@16,
( -8192)@16<=s L0x7fffffffd47a,L0x7fffffffd47a<s  8192@16,
( -8192)@16<=s L0x7fffffffd47c,L0x7fffffffd47c<s  8192@16,
( -8192)@16<=s L0x7fffffffd47e,L0x7fffffffd47e<s  8192@16,
( -8192)@16<=s L0x7fffffffd480,L0x7fffffffd480<s  8192@16,
( -8192)@16<=s L0x7fffffffd482,L0x7fffffffd482<s  8192@16,
( -8192)@16<=s L0x7fffffffd484,L0x7fffffffd484<s  8192@16,
( -8192)@16<=s L0x7fffffffd486,L0x7fffffffd486<s  8192@16,
( -8192)@16<=s L0x7fffffffd488,L0x7fffffffd488<s  8192@16,
( -8192)@16<=s L0x7fffffffd48a,L0x7fffffffd48a<s  8192@16,
( -8192)@16<=s L0x7fffffffd48c,L0x7fffffffd48c<s  8192@16,
( -8192)@16<=s L0x7fffffffd48e,L0x7fffffffd48e<s  8192@16,
( -8192)@16<=s L0x7fffffffd490,L0x7fffffffd490<s  8192@16,
( -8192)@16<=s L0x7fffffffd492,L0x7fffffffd492<s  8192@16,
( -8192)@16<=s L0x7fffffffd494,L0x7fffffffd494<s  8192@16,
( -8192)@16<=s L0x7fffffffd496,L0x7fffffffd496<s  8192@16,
( -8192)@16<=s L0x7fffffffd498,L0x7fffffffd498<s  8192@16,
( -8192)@16<=s L0x7fffffffd49a,L0x7fffffffd49a<s  8192@16,
( -8192)@16<=s L0x7fffffffd49c,L0x7fffffffd49c<s  8192@16,
( -8192)@16<=s L0x7fffffffd49e,L0x7fffffffd49e<s  8192@16,
( -8192)@16<=s L0x7fffffffd4a0,L0x7fffffffd4a0<s  8192@16,
( -8192)@16<=s L0x7fffffffd4a2,L0x7fffffffd4a2<s  8192@16,
( -8192)@16<=s L0x7fffffffd4a4,L0x7fffffffd4a4<s  8192@16,
( -8192)@16<=s L0x7fffffffd4a6,L0x7fffffffd4a6<s  8192@16,
( -8192)@16<=s L0x7fffffffd4a8,L0x7fffffffd4a8<s  8192@16,
( -8192)@16<=s L0x7fffffffd4aa,L0x7fffffffd4aa<s  8192@16,
( -8192)@16<=s L0x7fffffffd4ac,L0x7fffffffd4ac<s  8192@16,
( -8192)@16<=s L0x7fffffffd4ae,L0x7fffffffd4ae<s  8192@16,
( -8192)@16<=s L0x7fffffffd4b0,L0x7fffffffd4b0<s  8192@16,
( -8192)@16<=s L0x7fffffffd4b2,L0x7fffffffd4b2<s  8192@16,
( -8192)@16<=s L0x7fffffffd4b4,L0x7fffffffd4b4<s  8192@16,
( -8192)@16<=s L0x7fffffffd4b6,L0x7fffffffd4b6<s  8192@16,
( -8192)@16<=s L0x7fffffffd4b8,L0x7fffffffd4b8<s  8192@16,
( -8192)@16<=s L0x7fffffffd4ba,L0x7fffffffd4ba<s  8192@16,
( -8192)@16<=s L0x7fffffffd4bc,L0x7fffffffd4bc<s  8192@16,
( -8192)@16<=s L0x7fffffffd4be,L0x7fffffffd4be<s  8192@16,
( -8192)@16<=s L0x7fffffffd4c0,L0x7fffffffd4c0<s  8192@16,
( -8192)@16<=s L0x7fffffffd4c2,L0x7fffffffd4c2<s  8192@16,
( -8192)@16<=s L0x7fffffffd4c4,L0x7fffffffd4c4<s  8192@16,
( -8192)@16<=s L0x7fffffffd4c6,L0x7fffffffd4c6<s  8192@16,
( -8192)@16<=s L0x7fffffffd4c8,L0x7fffffffd4c8<s  8192@16,
( -8192)@16<=s L0x7fffffffd4ca,L0x7fffffffd4ca<s  8192@16,
( -8192)@16<=s L0x7fffffffd4cc,L0x7fffffffd4cc<s  8192@16,
( -8192)@16<=s L0x7fffffffd4ce,L0x7fffffffd4ce<s  8192@16,
( -8192)@16<=s L0x7fffffffd4d0,L0x7fffffffd4d0<s  8192@16,
( -8192)@16<=s L0x7fffffffd4d2,L0x7fffffffd4d2<s  8192@16,
( -8192)@16<=s L0x7fffffffd4d4,L0x7fffffffd4d4<s  8192@16,
( -8192)@16<=s L0x7fffffffd4d6,L0x7fffffffd4d6<s  8192@16,
( -8192)@16<=s L0x7fffffffd4d8,L0x7fffffffd4d8<s  8192@16,
( -6144)@16<=s L0x7fffffffd4da,L0x7fffffffd4da<s  6144@16,
( -6144)@16<=s L0x7fffffffd4dc,L0x7fffffffd4dc<s  6144@16,
( -6144)@16<=s L0x7fffffffd4de,L0x7fffffffd4de<s  6144@16
,
( -9479)@16<=s L0x7fffffffd4e0,L0x7fffffffd4e0<s  9479@16,
( -9479)@16<=s L0x7fffffffd4e2,L0x7fffffffd4e2<s  9479@16,
( -9479)@16<=s L0x7fffffffd4e4,L0x7fffffffd4e4<s  9479@16,
( -9479)@16<=s L0x7fffffffd4e6,L0x7fffffffd4e6<s  9479@16,
( -9479)@16<=s L0x7fffffffd4e8,L0x7fffffffd4e8<s  9479@16,
( -9479)@16<=s L0x7fffffffd4ea,L0x7fffffffd4ea<s  9479@16,
( -9479)@16<=s L0x7fffffffd4ec,L0x7fffffffd4ec<s  9479@16,
( -9479)@16<=s L0x7fffffffd4ee,L0x7fffffffd4ee<s  9479@16,
( -9479)@16<=s L0x7fffffffd4f0,L0x7fffffffd4f0<s  9479@16,
( -9479)@16<=s L0x7fffffffd4f2,L0x7fffffffd4f2<s  9479@16,
( -9479)@16<=s L0x7fffffffd4f4,L0x7fffffffd4f4<s  9479@16,
( -9479)@16<=s L0x7fffffffd4f6,L0x7fffffffd4f6<s  9479@16,
( -9479)@16<=s L0x7fffffffd4f8,L0x7fffffffd4f8<s  9479@16,
( -9479)@16<=s L0x7fffffffd4fa,L0x7fffffffd4fa<s  9479@16,
( -9479)@16<=s L0x7fffffffd4fc,L0x7fffffffd4fc<s  9479@16,
( -9479)@16<=s L0x7fffffffd4fe,L0x7fffffffd4fe<s  9479@16,
( -9479)@16<=s L0x7fffffffd500,L0x7fffffffd500<s  9479@16,
( -9479)@16<=s L0x7fffffffd502,L0x7fffffffd502<s  9479@16,
( -9479)@16<=s L0x7fffffffd504,L0x7fffffffd504<s  9479@16,
( -9479)@16<=s L0x7fffffffd506,L0x7fffffffd506<s  9479@16,
( -9479)@16<=s L0x7fffffffd508,L0x7fffffffd508<s  9479@16,
( -9479)@16<=s L0x7fffffffd50a,L0x7fffffffd50a<s  9479@16,
( -9479)@16<=s L0x7fffffffd50c,L0x7fffffffd50c<s  9479@16,
( -9479)@16<=s L0x7fffffffd50e,L0x7fffffffd50e<s  9479@16,
( -9479)@16<=s L0x7fffffffd510,L0x7fffffffd510<s  9479@16,
( -9479)@16<=s L0x7fffffffd512,L0x7fffffffd512<s  9479@16,
( -9479)@16<=s L0x7fffffffd514,L0x7fffffffd514<s  9479@16,
( -9479)@16<=s L0x7fffffffd516,L0x7fffffffd516<s  9479@16,
( -9479)@16<=s L0x7fffffffd518,L0x7fffffffd518<s  9479@16,
( -9479)@16<=s L0x7fffffffd51a,L0x7fffffffd51a<s  9479@16,
( -9479)@16<=s L0x7fffffffd51c,L0x7fffffffd51c<s  9479@16,
( -9479)@16<=s L0x7fffffffd51e,L0x7fffffffd51e<s  9479@16,
( -9479)@16<=s L0x7fffffffd520,L0x7fffffffd520<s  9479@16,
( -9479)@16<=s L0x7fffffffd522,L0x7fffffffd522<s  9479@16,
( -9479)@16<=s L0x7fffffffd524,L0x7fffffffd524<s  9479@16,
( -9479)@16<=s L0x7fffffffd526,L0x7fffffffd526<s  9479@16,
( -9479)@16<=s L0x7fffffffd528,L0x7fffffffd528<s  9479@16,
( -9479)@16<=s L0x7fffffffd52a,L0x7fffffffd52a<s  9479@16,
( -9479)@16<=s L0x7fffffffd52c,L0x7fffffffd52c<s  9479@16,
( -9479)@16<=s L0x7fffffffd52e,L0x7fffffffd52e<s  9479@16,
( -9479)@16<=s L0x7fffffffd530,L0x7fffffffd530<s  9479@16,
( -9479)@16<=s L0x7fffffffd532,L0x7fffffffd532<s  9479@16,
( -9479)@16<=s L0x7fffffffd534,L0x7fffffffd534<s  9479@16,
( -9479)@16<=s L0x7fffffffd536,L0x7fffffffd536<s  9479@16,
( -9479)@16<=s L0x7fffffffd538,L0x7fffffffd538<s  9479@16,
( -9479)@16<=s L0x7fffffffd53a,L0x7fffffffd53a<s  9479@16,
( -9479)@16<=s L0x7fffffffd53c,L0x7fffffffd53c<s  9479@16,
( -9479)@16<=s L0x7fffffffd53e,L0x7fffffffd53e<s  9479@16,
( -9479)@16<=s L0x7fffffffd540,L0x7fffffffd540<s  9479@16,
( -9479)@16<=s L0x7fffffffd542,L0x7fffffffd542<s  9479@16,
( -9479)@16<=s L0x7fffffffd544,L0x7fffffffd544<s  9479@16,
( -9479)@16<=s L0x7fffffffd546,L0x7fffffffd546<s  9479@16,
( -9479)@16<=s L0x7fffffffd548,L0x7fffffffd548<s  9479@16,
( -9479)@16<=s L0x7fffffffd54a,L0x7fffffffd54a<s  9479@16,
( -9479)@16<=s L0x7fffffffd54c,L0x7fffffffd54c<s  9479@16,
( -9479)@16<=s L0x7fffffffd54e,L0x7fffffffd54e<s  9479@16,
( -9479)@16<=s L0x7fffffffd550,L0x7fffffffd550<s  9479@16,
( -9479)@16<=s L0x7fffffffd552,L0x7fffffffd552<s  9479@16,
( -9479)@16<=s L0x7fffffffd554,L0x7fffffffd554<s  9479@16,
( -9479)@16<=s L0x7fffffffd556,L0x7fffffffd556<s  9479@16,
( -9479)@16<=s L0x7fffffffd558,L0x7fffffffd558<s  9479@16,
( -9479)@16<=s L0x7fffffffd55a,L0x7fffffffd55a<s  9479@16,
( -9479)@16<=s L0x7fffffffd55c,L0x7fffffffd55c<s  9479@16,
( -9479)@16<=s L0x7fffffffd55e,L0x7fffffffd55e<s  9479@16,
( -9479)@16<=s L0x7fffffffd560,L0x7fffffffd560<s  9479@16,
( -9479)@16<=s L0x7fffffffd562,L0x7fffffffd562<s  9479@16,
( -9479)@16<=s L0x7fffffffd564,L0x7fffffffd564<s  9479@16,
( -9479)@16<=s L0x7fffffffd566,L0x7fffffffd566<s  9479@16,
( -9479)@16<=s L0x7fffffffd568,L0x7fffffffd568<s  9479@16,
( -9479)@16<=s L0x7fffffffd56a,L0x7fffffffd56a<s  9479@16,
( -9479)@16<=s L0x7fffffffd56c,L0x7fffffffd56c<s  9479@16,
( -9479)@16<=s L0x7fffffffd56e,L0x7fffffffd56e<s  9479@16,
( -9479)@16<=s L0x7fffffffd570,L0x7fffffffd570<s  9479@16,
( -9479)@16<=s L0x7fffffffd572,L0x7fffffffd572<s  9479@16,
( -9479)@16<=s L0x7fffffffd574,L0x7fffffffd574<s  9479@16,
( -9479)@16<=s L0x7fffffffd576,L0x7fffffffd576<s  9479@16,
( -9479)@16<=s L0x7fffffffd578,L0x7fffffffd578<s  9479@16,
( -9479)@16<=s L0x7fffffffd57a,L0x7fffffffd57a<s  9479@16,
( -9479)@16<=s L0x7fffffffd57c,L0x7fffffffd57c<s  9479@16,
( -9479)@16<=s L0x7fffffffd57e,L0x7fffffffd57e<s  9479@16,
( -9479)@16<=s L0x7fffffffd580,L0x7fffffffd580<s  9479@16,
( -9479)@16<=s L0x7fffffffd582,L0x7fffffffd582<s  9479@16,
( -9479)@16<=s L0x7fffffffd584,L0x7fffffffd584<s  9479@16,
( -9479)@16<=s L0x7fffffffd586,L0x7fffffffd586<s  9479@16,
( -9479)@16<=s L0x7fffffffd588,L0x7fffffffd588<s  9479@16,
( -9479)@16<=s L0x7fffffffd58a,L0x7fffffffd58a<s  9479@16,
( -9479)@16<=s L0x7fffffffd58c,L0x7fffffffd58c<s  9479@16,
( -9479)@16<=s L0x7fffffffd58e,L0x7fffffffd58e<s  9479@16,
( -9479)@16<=s L0x7fffffffd590,L0x7fffffffd590<s  9479@16,
( -9479)@16<=s L0x7fffffffd592,L0x7fffffffd592<s  9479@16,
( -9479)@16<=s L0x7fffffffd594,L0x7fffffffd594<s  9479@16,
( -9479)@16<=s L0x7fffffffd596,L0x7fffffffd596<s  9479@16,
( -9479)@16<=s L0x7fffffffd598,L0x7fffffffd598<s  9479@16,
( -9479)@16<=s L0x7fffffffd59a,L0x7fffffffd59a<s  9479@16,
( -9479)@16<=s L0x7fffffffd59c,L0x7fffffffd59c<s  9479@16,
( -9479)@16<=s L0x7fffffffd59e,L0x7fffffffd59e<s  9479@16,
( -9479)@16<=s L0x7fffffffd5a0,L0x7fffffffd5a0<s  9479@16,
( -9479)@16<=s L0x7fffffffd5a2,L0x7fffffffd5a2<s  9479@16,
( -9479)@16<=s L0x7fffffffd5a4,L0x7fffffffd5a4<s  9479@16,
( -9479)@16<=s L0x7fffffffd5a6,L0x7fffffffd5a6<s  9479@16,
( -9479)@16<=s L0x7fffffffd5a8,L0x7fffffffd5a8<s  9479@16,
( -9479)@16<=s L0x7fffffffd5aa,L0x7fffffffd5aa<s  9479@16,
( -9479)@16<=s L0x7fffffffd5ac,L0x7fffffffd5ac<s  9479@16,
( -9479)@16<=s L0x7fffffffd5ae,L0x7fffffffd5ae<s  9479@16,
( -9479)@16<=s L0x7fffffffd5b0,L0x7fffffffd5b0<s  9479@16,
( -9479)@16<=s L0x7fffffffd5b2,L0x7fffffffd5b2<s  9479@16,
( -9479)@16<=s L0x7fffffffd5b4,L0x7fffffffd5b4<s  9479@16,
( -9479)@16<=s L0x7fffffffd5b6,L0x7fffffffd5b6<s  9479@16,
( -9479)@16<=s L0x7fffffffd5b8,L0x7fffffffd5b8<s  9479@16,
( -9479)@16<=s L0x7fffffffd5ba,L0x7fffffffd5ba<s  9479@16,
( -9479)@16<=s L0x7fffffffd5bc,L0x7fffffffd5bc<s  9479@16,
( -9479)@16<=s L0x7fffffffd5be,L0x7fffffffd5be<s  9479@16,
( -9479)@16<=s L0x7fffffffd5c0,L0x7fffffffd5c0<s  9479@16,
( -9479)@16<=s L0x7fffffffd5c2,L0x7fffffffd5c2<s  9479@16,
( -9479)@16<=s L0x7fffffffd5c4,L0x7fffffffd5c4<s  9479@16,
( -9479)@16<=s L0x7fffffffd5c6,L0x7fffffffd5c6<s  9479@16,
( -9479)@16<=s L0x7fffffffd5c8,L0x7fffffffd5c8<s  9479@16,
( -9479)@16<=s L0x7fffffffd5ca,L0x7fffffffd5ca<s  9479@16,
( -9479)@16<=s L0x7fffffffd5cc,L0x7fffffffd5cc<s  9479@16,
( -9479)@16<=s L0x7fffffffd5ce,L0x7fffffffd5ce<s  9479@16,
( -9479)@16<=s L0x7fffffffd5d0,L0x7fffffffd5d0<s  9479@16,
( -9479)@16<=s L0x7fffffffd5d2,L0x7fffffffd5d2<s  9479@16,
( -9479)@16<=s L0x7fffffffd5d4,L0x7fffffffd5d4<s  9479@16,
( -9479)@16<=s L0x7fffffffd5d6,L0x7fffffffd5d6<s  9479@16,
( -9479)@16<=s L0x7fffffffd5d8,L0x7fffffffd5d8<s  9479@16,
( -9474)@16<=s L0x7fffffffd5da,L0x7fffffffd5da<s  9474@16,
( -9474)@16<=s L0x7fffffffd5dc,L0x7fffffffd5dc<s  9474@16,
( -9474)@16<=s L0x7fffffffd5de,L0x7fffffffd5de<s  9474@16
,
( -9479)@16<=s L0x7fffffffd5e0,L0x7fffffffd5e0<s  9479@16,
( -9479)@16<=s L0x7fffffffd5e2,L0x7fffffffd5e2<s  9479@16,
( -9479)@16<=s L0x7fffffffd5e4,L0x7fffffffd5e4<s  9479@16,
( -9479)@16<=s L0x7fffffffd5e6,L0x7fffffffd5e6<s  9479@16,
( -9479)@16<=s L0x7fffffffd5e8,L0x7fffffffd5e8<s  9479@16,
( -9479)@16<=s L0x7fffffffd5ea,L0x7fffffffd5ea<s  9479@16,
( -9479)@16<=s L0x7fffffffd5ec,L0x7fffffffd5ec<s  9479@16,
( -9479)@16<=s L0x7fffffffd5ee,L0x7fffffffd5ee<s  9479@16,
( -9479)@16<=s L0x7fffffffd5f0,L0x7fffffffd5f0<s  9479@16,
( -9479)@16<=s L0x7fffffffd5f2,L0x7fffffffd5f2<s  9479@16,
( -9479)@16<=s L0x7fffffffd5f4,L0x7fffffffd5f4<s  9479@16,
( -9479)@16<=s L0x7fffffffd5f6,L0x7fffffffd5f6<s  9479@16,
( -9479)@16<=s L0x7fffffffd5f8,L0x7fffffffd5f8<s  9479@16,
( -9479)@16<=s L0x7fffffffd5fa,L0x7fffffffd5fa<s  9479@16,
( -9479)@16<=s L0x7fffffffd5fc,L0x7fffffffd5fc<s  9479@16,
( -9479)@16<=s L0x7fffffffd5fe,L0x7fffffffd5fe<s  9479@16,
( -9479)@16<=s L0x7fffffffd600,L0x7fffffffd600<s  9479@16,
( -9479)@16<=s L0x7fffffffd602,L0x7fffffffd602<s  9479@16,
( -9479)@16<=s L0x7fffffffd604,L0x7fffffffd604<s  9479@16,
( -9479)@16<=s L0x7fffffffd606,L0x7fffffffd606<s  9479@16,
( -9479)@16<=s L0x7fffffffd608,L0x7fffffffd608<s  9479@16,
( -9479)@16<=s L0x7fffffffd60a,L0x7fffffffd60a<s  9479@16,
( -9479)@16<=s L0x7fffffffd60c,L0x7fffffffd60c<s  9479@16,
( -9479)@16<=s L0x7fffffffd60e,L0x7fffffffd60e<s  9479@16,
( -9479)@16<=s L0x7fffffffd610,L0x7fffffffd610<s  9479@16,
( -9479)@16<=s L0x7fffffffd612,L0x7fffffffd612<s  9479@16,
( -9479)@16<=s L0x7fffffffd614,L0x7fffffffd614<s  9479@16,
( -9479)@16<=s L0x7fffffffd616,L0x7fffffffd616<s  9479@16,
( -9479)@16<=s L0x7fffffffd618,L0x7fffffffd618<s  9479@16,
( -9479)@16<=s L0x7fffffffd61a,L0x7fffffffd61a<s  9479@16,
( -9479)@16<=s L0x7fffffffd61c,L0x7fffffffd61c<s  9479@16,
( -9479)@16<=s L0x7fffffffd61e,L0x7fffffffd61e<s  9479@16,
( -9479)@16<=s L0x7fffffffd620,L0x7fffffffd620<s  9479@16,
( -9479)@16<=s L0x7fffffffd622,L0x7fffffffd622<s  9479@16,
( -9479)@16<=s L0x7fffffffd624,L0x7fffffffd624<s  9479@16,
( -9479)@16<=s L0x7fffffffd626,L0x7fffffffd626<s  9479@16,
( -9479)@16<=s L0x7fffffffd628,L0x7fffffffd628<s  9479@16,
( -9479)@16<=s L0x7fffffffd62a,L0x7fffffffd62a<s  9479@16,
( -9479)@16<=s L0x7fffffffd62c,L0x7fffffffd62c<s  9479@16,
( -9479)@16<=s L0x7fffffffd62e,L0x7fffffffd62e<s  9479@16,
( -9479)@16<=s L0x7fffffffd630,L0x7fffffffd630<s  9479@16,
( -9479)@16<=s L0x7fffffffd632,L0x7fffffffd632<s  9479@16,
( -9479)@16<=s L0x7fffffffd634,L0x7fffffffd634<s  9479@16,
( -9479)@16<=s L0x7fffffffd636,L0x7fffffffd636<s  9479@16,
( -9479)@16<=s L0x7fffffffd638,L0x7fffffffd638<s  9479@16,
( -9479)@16<=s L0x7fffffffd63a,L0x7fffffffd63a<s  9479@16,
( -9479)@16<=s L0x7fffffffd63c,L0x7fffffffd63c<s  9479@16,
( -9479)@16<=s L0x7fffffffd63e,L0x7fffffffd63e<s  9479@16,
( -9479)@16<=s L0x7fffffffd640,L0x7fffffffd640<s  9479@16,
( -9479)@16<=s L0x7fffffffd642,L0x7fffffffd642<s  9479@16,
( -9479)@16<=s L0x7fffffffd644,L0x7fffffffd644<s  9479@16,
( -9479)@16<=s L0x7fffffffd646,L0x7fffffffd646<s  9479@16,
( -9479)@16<=s L0x7fffffffd648,L0x7fffffffd648<s  9479@16,
( -9479)@16<=s L0x7fffffffd64a,L0x7fffffffd64a<s  9479@16,
( -9479)@16<=s L0x7fffffffd64c,L0x7fffffffd64c<s  9479@16,
( -9479)@16<=s L0x7fffffffd64e,L0x7fffffffd64e<s  9479@16,
( -9479)@16<=s L0x7fffffffd650,L0x7fffffffd650<s  9479@16,
( -9479)@16<=s L0x7fffffffd652,L0x7fffffffd652<s  9479@16,
( -9479)@16<=s L0x7fffffffd654,L0x7fffffffd654<s  9479@16,
( -9479)@16<=s L0x7fffffffd656,L0x7fffffffd656<s  9479@16,
( -9479)@16<=s L0x7fffffffd658,L0x7fffffffd658<s  9479@16,
( -9479)@16<=s L0x7fffffffd65a,L0x7fffffffd65a<s  9479@16,
( -9479)@16<=s L0x7fffffffd65c,L0x7fffffffd65c<s  9479@16,
( -9479)@16<=s L0x7fffffffd65e,L0x7fffffffd65e<s  9479@16,
( -9479)@16<=s L0x7fffffffd660,L0x7fffffffd660<s  9479@16,
( -9479)@16<=s L0x7fffffffd662,L0x7fffffffd662<s  9479@16,
( -9479)@16<=s L0x7fffffffd664,L0x7fffffffd664<s  9479@16,
( -9479)@16<=s L0x7fffffffd666,L0x7fffffffd666<s  9479@16,
( -9479)@16<=s L0x7fffffffd668,L0x7fffffffd668<s  9479@16,
( -9479)@16<=s L0x7fffffffd66a,L0x7fffffffd66a<s  9479@16,
( -9479)@16<=s L0x7fffffffd66c,L0x7fffffffd66c<s  9479@16,
( -9479)@16<=s L0x7fffffffd66e,L0x7fffffffd66e<s  9479@16,
( -9479)@16<=s L0x7fffffffd670,L0x7fffffffd670<s  9479@16,
( -9479)@16<=s L0x7fffffffd672,L0x7fffffffd672<s  9479@16,
( -9479)@16<=s L0x7fffffffd674,L0x7fffffffd674<s  9479@16,
( -9479)@16<=s L0x7fffffffd676,L0x7fffffffd676<s  9479@16,
( -9479)@16<=s L0x7fffffffd678,L0x7fffffffd678<s  9479@16,
( -9479)@16<=s L0x7fffffffd67a,L0x7fffffffd67a<s  9479@16,
( -9479)@16<=s L0x7fffffffd67c,L0x7fffffffd67c<s  9479@16,
( -9479)@16<=s L0x7fffffffd67e,L0x7fffffffd67e<s  9479@16,
( -9479)@16<=s L0x7fffffffd680,L0x7fffffffd680<s  9479@16,
( -9479)@16<=s L0x7fffffffd682,L0x7fffffffd682<s  9479@16,
( -9479)@16<=s L0x7fffffffd684,L0x7fffffffd684<s  9479@16,
( -9479)@16<=s L0x7fffffffd686,L0x7fffffffd686<s  9479@16,
( -9479)@16<=s L0x7fffffffd688,L0x7fffffffd688<s  9479@16,
( -9479)@16<=s L0x7fffffffd68a,L0x7fffffffd68a<s  9479@16,
( -9479)@16<=s L0x7fffffffd68c,L0x7fffffffd68c<s  9479@16,
( -9479)@16<=s L0x7fffffffd68e,L0x7fffffffd68e<s  9479@16,
( -9479)@16<=s L0x7fffffffd690,L0x7fffffffd690<s  9479@16,
( -9479)@16<=s L0x7fffffffd692,L0x7fffffffd692<s  9479@16,
( -9479)@16<=s L0x7fffffffd694,L0x7fffffffd694<s  9479@16,
( -9479)@16<=s L0x7fffffffd696,L0x7fffffffd696<s  9479@16,
( -9479)@16<=s L0x7fffffffd698,L0x7fffffffd698<s  9479@16,
( -9479)@16<=s L0x7fffffffd69a,L0x7fffffffd69a<s  9479@16,
( -9479)@16<=s L0x7fffffffd69c,L0x7fffffffd69c<s  9479@16,
( -9479)@16<=s L0x7fffffffd69e,L0x7fffffffd69e<s  9479@16,
( -9479)@16<=s L0x7fffffffd6a0,L0x7fffffffd6a0<s  9479@16,
( -9479)@16<=s L0x7fffffffd6a2,L0x7fffffffd6a2<s  9479@16,
( -9479)@16<=s L0x7fffffffd6a4,L0x7fffffffd6a4<s  9479@16,
( -9479)@16<=s L0x7fffffffd6a6,L0x7fffffffd6a6<s  9479@16,
( -9479)@16<=s L0x7fffffffd6a8,L0x7fffffffd6a8<s  9479@16,
( -9479)@16<=s L0x7fffffffd6aa,L0x7fffffffd6aa<s  9479@16,
( -9479)@16<=s L0x7fffffffd6ac,L0x7fffffffd6ac<s  9479@16,
( -9479)@16<=s L0x7fffffffd6ae,L0x7fffffffd6ae<s  9479@16,
( -9479)@16<=s L0x7fffffffd6b0,L0x7fffffffd6b0<s  9479@16,
( -9479)@16<=s L0x7fffffffd6b2,L0x7fffffffd6b2<s  9479@16,
( -9479)@16<=s L0x7fffffffd6b4,L0x7fffffffd6b4<s  9479@16,
( -9479)@16<=s L0x7fffffffd6b6,L0x7fffffffd6b6<s  9479@16,
( -9479)@16<=s L0x7fffffffd6b8,L0x7fffffffd6b8<s  9479@16,
( -9479)@16<=s L0x7fffffffd6ba,L0x7fffffffd6ba<s  9479@16,
( -9479)@16<=s L0x7fffffffd6bc,L0x7fffffffd6bc<s  9479@16,
( -9479)@16<=s L0x7fffffffd6be,L0x7fffffffd6be<s  9479@16,
( -9479)@16<=s L0x7fffffffd6c0,L0x7fffffffd6c0<s  9479@16,
( -9479)@16<=s L0x7fffffffd6c2,L0x7fffffffd6c2<s  9479@16,
( -9479)@16<=s L0x7fffffffd6c4,L0x7fffffffd6c4<s  9479@16,
( -9479)@16<=s L0x7fffffffd6c6,L0x7fffffffd6c6<s  9479@16,
( -9479)@16<=s L0x7fffffffd6c8,L0x7fffffffd6c8<s  9479@16,
( -9479)@16<=s L0x7fffffffd6ca,L0x7fffffffd6ca<s  9479@16,
( -9479)@16<=s L0x7fffffffd6cc,L0x7fffffffd6cc<s  9479@16,
( -9479)@16<=s L0x7fffffffd6ce,L0x7fffffffd6ce<s  9479@16,
( -9479)@16<=s L0x7fffffffd6d0,L0x7fffffffd6d0<s  9479@16,
( -9479)@16<=s L0x7fffffffd6d2,L0x7fffffffd6d2<s  9479@16,
( -9479)@16<=s L0x7fffffffd6d4,L0x7fffffffd6d4<s  9479@16,
( -9479)@16<=s L0x7fffffffd6d6,L0x7fffffffd6d6<s  9479@16,
( -9479)@16<=s L0x7fffffffd6d8,L0x7fffffffd6d8<s  9479@16,
( -9474)@16<=s L0x7fffffffd6da,L0x7fffffffd6da<s  9474@16,
( -9474)@16<=s L0x7fffffffd6dc,L0x7fffffffd6dc<s  9474@16,
( -9474)@16<=s L0x7fffffffd6de,L0x7fffffffd6de<s  9474@16
,
(-13154)@16<=s L0x7fffffffd6e0,L0x7fffffffd6e0<s 13154@16,
(-13154)@16<=s L0x7fffffffd6e2,L0x7fffffffd6e2<s 13154@16,
(-13154)@16<=s L0x7fffffffd6e4,L0x7fffffffd6e4<s 13154@16,
(-13154)@16<=s L0x7fffffffd6e6,L0x7fffffffd6e6<s 13154@16,
(-13154)@16<=s L0x7fffffffd6e8,L0x7fffffffd6e8<s 13154@16,
(-13154)@16<=s L0x7fffffffd6ea,L0x7fffffffd6ea<s 13154@16,
(-13154)@16<=s L0x7fffffffd6ec,L0x7fffffffd6ec<s 13154@16,
(-13154)@16<=s L0x7fffffffd6ee,L0x7fffffffd6ee<s 13154@16,
(-13154)@16<=s L0x7fffffffd6f0,L0x7fffffffd6f0<s 13154@16,
(-13154)@16<=s L0x7fffffffd6f2,L0x7fffffffd6f2<s 13154@16,
(-13154)@16<=s L0x7fffffffd6f4,L0x7fffffffd6f4<s 13154@16,
(-13154)@16<=s L0x7fffffffd6f6,L0x7fffffffd6f6<s 13154@16,
(-13154)@16<=s L0x7fffffffd6f8,L0x7fffffffd6f8<s 13154@16,
(-13154)@16<=s L0x7fffffffd6fa,L0x7fffffffd6fa<s 13154@16,
(-13154)@16<=s L0x7fffffffd6fc,L0x7fffffffd6fc<s 13154@16,
(-13154)@16<=s L0x7fffffffd6fe,L0x7fffffffd6fe<s 13154@16,
(-13154)@16<=s L0x7fffffffd700,L0x7fffffffd700<s 13154@16,
(-13154)@16<=s L0x7fffffffd702,L0x7fffffffd702<s 13154@16,
(-13154)@16<=s L0x7fffffffd704,L0x7fffffffd704<s 13154@16,
(-13154)@16<=s L0x7fffffffd706,L0x7fffffffd706<s 13154@16,
(-13154)@16<=s L0x7fffffffd708,L0x7fffffffd708<s 13154@16,
(-13154)@16<=s L0x7fffffffd70a,L0x7fffffffd70a<s 13154@16,
(-13154)@16<=s L0x7fffffffd70c,L0x7fffffffd70c<s 13154@16,
(-13154)@16<=s L0x7fffffffd70e,L0x7fffffffd70e<s 13154@16,
(-13154)@16<=s L0x7fffffffd710,L0x7fffffffd710<s 13154@16,
(-13154)@16<=s L0x7fffffffd712,L0x7fffffffd712<s 13154@16,
(-13154)@16<=s L0x7fffffffd714,L0x7fffffffd714<s 13154@16,
(-13154)@16<=s L0x7fffffffd716,L0x7fffffffd716<s 13154@16,
(-13154)@16<=s L0x7fffffffd718,L0x7fffffffd718<s 13154@16,
(-13154)@16<=s L0x7fffffffd71a,L0x7fffffffd71a<s 13154@16,
(-13154)@16<=s L0x7fffffffd71c,L0x7fffffffd71c<s 13154@16,
(-13154)@16<=s L0x7fffffffd71e,L0x7fffffffd71e<s 13154@16,
(-13154)@16<=s L0x7fffffffd720,L0x7fffffffd720<s 13154@16,
(-13154)@16<=s L0x7fffffffd722,L0x7fffffffd722<s 13154@16,
(-13154)@16<=s L0x7fffffffd724,L0x7fffffffd724<s 13154@16,
(-13154)@16<=s L0x7fffffffd726,L0x7fffffffd726<s 13154@16,
(-13154)@16<=s L0x7fffffffd728,L0x7fffffffd728<s 13154@16,
(-13154)@16<=s L0x7fffffffd72a,L0x7fffffffd72a<s 13154@16,
(-13154)@16<=s L0x7fffffffd72c,L0x7fffffffd72c<s 13154@16,
(-13154)@16<=s L0x7fffffffd72e,L0x7fffffffd72e<s 13154@16,
(-13154)@16<=s L0x7fffffffd730,L0x7fffffffd730<s 13154@16,
(-13154)@16<=s L0x7fffffffd732,L0x7fffffffd732<s 13154@16,
(-13154)@16<=s L0x7fffffffd734,L0x7fffffffd734<s 13154@16,
(-13154)@16<=s L0x7fffffffd736,L0x7fffffffd736<s 13154@16,
(-13154)@16<=s L0x7fffffffd738,L0x7fffffffd738<s 13154@16,
(-13154)@16<=s L0x7fffffffd73a,L0x7fffffffd73a<s 13154@16,
(-13154)@16<=s L0x7fffffffd73c,L0x7fffffffd73c<s 13154@16,
(-13154)@16<=s L0x7fffffffd73e,L0x7fffffffd73e<s 13154@16,
(-13154)@16<=s L0x7fffffffd740,L0x7fffffffd740<s 13154@16,
(-13154)@16<=s L0x7fffffffd742,L0x7fffffffd742<s 13154@16,
(-13154)@16<=s L0x7fffffffd744,L0x7fffffffd744<s 13154@16,
(-13154)@16<=s L0x7fffffffd746,L0x7fffffffd746<s 13154@16,
(-13154)@16<=s L0x7fffffffd748,L0x7fffffffd748<s 13154@16,
(-13154)@16<=s L0x7fffffffd74a,L0x7fffffffd74a<s 13154@16,
(-13154)@16<=s L0x7fffffffd74c,L0x7fffffffd74c<s 13154@16,
(-13154)@16<=s L0x7fffffffd74e,L0x7fffffffd74e<s 13154@16,
(-13154)@16<=s L0x7fffffffd750,L0x7fffffffd750<s 13154@16,
(-13154)@16<=s L0x7fffffffd752,L0x7fffffffd752<s 13154@16,
(-13154)@16<=s L0x7fffffffd754,L0x7fffffffd754<s 13154@16,
(-13154)@16<=s L0x7fffffffd756,L0x7fffffffd756<s 13154@16,
(-13154)@16<=s L0x7fffffffd758,L0x7fffffffd758<s 13154@16,
(-13154)@16<=s L0x7fffffffd75a,L0x7fffffffd75a<s 13154@16,
(-13154)@16<=s L0x7fffffffd75c,L0x7fffffffd75c<s 13154@16,
(-13154)@16<=s L0x7fffffffd75e,L0x7fffffffd75e<s 13154@16,
(-13154)@16<=s L0x7fffffffd760,L0x7fffffffd760<s 13154@16,
(-13154)@16<=s L0x7fffffffd762,L0x7fffffffd762<s 13154@16,
(-13154)@16<=s L0x7fffffffd764,L0x7fffffffd764<s 13154@16,
(-13154)@16<=s L0x7fffffffd766,L0x7fffffffd766<s 13154@16,
(-13154)@16<=s L0x7fffffffd768,L0x7fffffffd768<s 13154@16,
(-13154)@16<=s L0x7fffffffd76a,L0x7fffffffd76a<s 13154@16,
(-13154)@16<=s L0x7fffffffd76c,L0x7fffffffd76c<s 13154@16,
(-13154)@16<=s L0x7fffffffd76e,L0x7fffffffd76e<s 13154@16,
(-13154)@16<=s L0x7fffffffd770,L0x7fffffffd770<s 13154@16,
(-13154)@16<=s L0x7fffffffd772,L0x7fffffffd772<s 13154@16,
(-13154)@16<=s L0x7fffffffd774,L0x7fffffffd774<s 13154@16,
(-13154)@16<=s L0x7fffffffd776,L0x7fffffffd776<s 13154@16,
(-13154)@16<=s L0x7fffffffd778,L0x7fffffffd778<s 13154@16,
(-13154)@16<=s L0x7fffffffd77a,L0x7fffffffd77a<s 13154@16,
(-13154)@16<=s L0x7fffffffd77c,L0x7fffffffd77c<s 13154@16,
(-13154)@16<=s L0x7fffffffd77e,L0x7fffffffd77e<s 13154@16,
(-13154)@16<=s L0x7fffffffd780,L0x7fffffffd780<s 13154@16,
(-13154)@16<=s L0x7fffffffd782,L0x7fffffffd782<s 13154@16,
(-13154)@16<=s L0x7fffffffd784,L0x7fffffffd784<s 13154@16,
(-13154)@16<=s L0x7fffffffd786,L0x7fffffffd786<s 13154@16,
(-13154)@16<=s L0x7fffffffd788,L0x7fffffffd788<s 13154@16,
(-13154)@16<=s L0x7fffffffd78a,L0x7fffffffd78a<s 13154@16,
(-13154)@16<=s L0x7fffffffd78c,L0x7fffffffd78c<s 13154@16,
(-13154)@16<=s L0x7fffffffd78e,L0x7fffffffd78e<s 13154@16,
(-13154)@16<=s L0x7fffffffd790,L0x7fffffffd790<s 13154@16,
(-13154)@16<=s L0x7fffffffd792,L0x7fffffffd792<s 13154@16,
(-13154)@16<=s L0x7fffffffd794,L0x7fffffffd794<s 13154@16,
(-13154)@16<=s L0x7fffffffd796,L0x7fffffffd796<s 13154@16,
(-13154)@16<=s L0x7fffffffd798,L0x7fffffffd798<s 13154@16,
(-13154)@16<=s L0x7fffffffd79a,L0x7fffffffd79a<s 13154@16,
(-13154)@16<=s L0x7fffffffd79c,L0x7fffffffd79c<s 13154@16,
(-13154)@16<=s L0x7fffffffd79e,L0x7fffffffd79e<s 13154@16,
(-13154)@16<=s L0x7fffffffd7a0,L0x7fffffffd7a0<s 13154@16,
(-13154)@16<=s L0x7fffffffd7a2,L0x7fffffffd7a2<s 13154@16,
(-13154)@16<=s L0x7fffffffd7a4,L0x7fffffffd7a4<s 13154@16,
(-13154)@16<=s L0x7fffffffd7a6,L0x7fffffffd7a6<s 13154@16,
(-13154)@16<=s L0x7fffffffd7a8,L0x7fffffffd7a8<s 13154@16,
(-13154)@16<=s L0x7fffffffd7aa,L0x7fffffffd7aa<s 13154@16,
(-13154)@16<=s L0x7fffffffd7ac,L0x7fffffffd7ac<s 13154@16,
(-13154)@16<=s L0x7fffffffd7ae,L0x7fffffffd7ae<s 13154@16,
(-13154)@16<=s L0x7fffffffd7b0,L0x7fffffffd7b0<s 13154@16,
(-13154)@16<=s L0x7fffffffd7b2,L0x7fffffffd7b2<s 13154@16,
(-13154)@16<=s L0x7fffffffd7b4,L0x7fffffffd7b4<s 13154@16,
(-13154)@16<=s L0x7fffffffd7b6,L0x7fffffffd7b6<s 13154@16,
(-13154)@16<=s L0x7fffffffd7b8,L0x7fffffffd7b8<s 13154@16,
(-13154)@16<=s L0x7fffffffd7ba,L0x7fffffffd7ba<s 13154@16,
(-13154)@16<=s L0x7fffffffd7bc,L0x7fffffffd7bc<s 13154@16,
(-13154)@16<=s L0x7fffffffd7be,L0x7fffffffd7be<s 13154@16,
(-13154)@16<=s L0x7fffffffd7c0,L0x7fffffffd7c0<s 13154@16,
(-13154)@16<=s L0x7fffffffd7c2,L0x7fffffffd7c2<s 13154@16,
(-13154)@16<=s L0x7fffffffd7c4,L0x7fffffffd7c4<s 13154@16,
(-13154)@16<=s L0x7fffffffd7c6,L0x7fffffffd7c6<s 13154@16,
(-13154)@16<=s L0x7fffffffd7c8,L0x7fffffffd7c8<s 13154@16,
(-13154)@16<=s L0x7fffffffd7ca,L0x7fffffffd7ca<s 13154@16,
(-13154)@16<=s L0x7fffffffd7cc,L0x7fffffffd7cc<s 13154@16,
(-13154)@16<=s L0x7fffffffd7ce,L0x7fffffffd7ce<s 13154@16,
(-13154)@16<=s L0x7fffffffd7d0,L0x7fffffffd7d0<s 13154@16,
(-13154)@16<=s L0x7fffffffd7d2,L0x7fffffffd7d2<s 13154@16,
(-13154)@16<=s L0x7fffffffd7d4,L0x7fffffffd7d4<s 13154@16,
(-13154)@16<=s L0x7fffffffd7d6,L0x7fffffffd7d6<s 13154@16,
(-13154)@16<=s L0x7fffffffd7d8,L0x7fffffffd7d8<s 13154@16,
(-12913)@16<=s L0x7fffffffd7da,L0x7fffffffd7da<s 12913@16,
(-12913)@16<=s L0x7fffffffd7dc,L0x7fffffffd7dc<s 12913@16,
(-12913)@16<=s L0x7fffffffd7de,L0x7fffffffd7de<s 12913@16
,
(-13154)@16<=s L0x7fffffffd7e0,L0x7fffffffd7e0<s 13154@16,
(-13154)@16<=s L0x7fffffffd7e2,L0x7fffffffd7e2<s 13154@16,
(-13154)@16<=s L0x7fffffffd7e4,L0x7fffffffd7e4<s 13154@16,
(-13154)@16<=s L0x7fffffffd7e6,L0x7fffffffd7e6<s 13154@16,
(-13154)@16<=s L0x7fffffffd7e8,L0x7fffffffd7e8<s 13154@16,
(-13154)@16<=s L0x7fffffffd7ea,L0x7fffffffd7ea<s 13154@16,
(-13154)@16<=s L0x7fffffffd7ec,L0x7fffffffd7ec<s 13154@16,
(-13154)@16<=s L0x7fffffffd7ee,L0x7fffffffd7ee<s 13154@16,
(-13154)@16<=s L0x7fffffffd7f0,L0x7fffffffd7f0<s 13154@16,
(-13154)@16<=s L0x7fffffffd7f2,L0x7fffffffd7f2<s 13154@16,
(-13154)@16<=s L0x7fffffffd7f4,L0x7fffffffd7f4<s 13154@16,
(-13154)@16<=s L0x7fffffffd7f6,L0x7fffffffd7f6<s 13154@16,
(-13154)@16<=s L0x7fffffffd7f8,L0x7fffffffd7f8<s 13154@16,
(-13154)@16<=s L0x7fffffffd7fa,L0x7fffffffd7fa<s 13154@16,
(-13154)@16<=s L0x7fffffffd7fc,L0x7fffffffd7fc<s 13154@16,
(-13154)@16<=s L0x7fffffffd7fe,L0x7fffffffd7fe<s 13154@16,
(-13154)@16<=s L0x7fffffffd800,L0x7fffffffd800<s 13154@16,
(-13154)@16<=s L0x7fffffffd802,L0x7fffffffd802<s 13154@16,
(-13154)@16<=s L0x7fffffffd804,L0x7fffffffd804<s 13154@16,
(-13154)@16<=s L0x7fffffffd806,L0x7fffffffd806<s 13154@16,
(-13154)@16<=s L0x7fffffffd808,L0x7fffffffd808<s 13154@16,
(-13154)@16<=s L0x7fffffffd80a,L0x7fffffffd80a<s 13154@16,
(-13154)@16<=s L0x7fffffffd80c,L0x7fffffffd80c<s 13154@16,
(-13154)@16<=s L0x7fffffffd80e,L0x7fffffffd80e<s 13154@16,
(-13154)@16<=s L0x7fffffffd810,L0x7fffffffd810<s 13154@16,
(-13154)@16<=s L0x7fffffffd812,L0x7fffffffd812<s 13154@16,
(-13154)@16<=s L0x7fffffffd814,L0x7fffffffd814<s 13154@16,
(-13154)@16<=s L0x7fffffffd816,L0x7fffffffd816<s 13154@16,
(-13154)@16<=s L0x7fffffffd818,L0x7fffffffd818<s 13154@16,
(-13154)@16<=s L0x7fffffffd81a,L0x7fffffffd81a<s 13154@16,
(-13154)@16<=s L0x7fffffffd81c,L0x7fffffffd81c<s 13154@16,
(-13154)@16<=s L0x7fffffffd81e,L0x7fffffffd81e<s 13154@16,
(-13154)@16<=s L0x7fffffffd820,L0x7fffffffd820<s 13154@16,
(-13154)@16<=s L0x7fffffffd822,L0x7fffffffd822<s 13154@16,
(-13154)@16<=s L0x7fffffffd824,L0x7fffffffd824<s 13154@16,
(-13154)@16<=s L0x7fffffffd826,L0x7fffffffd826<s 13154@16,
(-13154)@16<=s L0x7fffffffd828,L0x7fffffffd828<s 13154@16,
(-13154)@16<=s L0x7fffffffd82a,L0x7fffffffd82a<s 13154@16,
(-13154)@16<=s L0x7fffffffd82c,L0x7fffffffd82c<s 13154@16,
(-13154)@16<=s L0x7fffffffd82e,L0x7fffffffd82e<s 13154@16,
(-13154)@16<=s L0x7fffffffd830,L0x7fffffffd830<s 13154@16,
(-13154)@16<=s L0x7fffffffd832,L0x7fffffffd832<s 13154@16,
(-13154)@16<=s L0x7fffffffd834,L0x7fffffffd834<s 13154@16,
(-13154)@16<=s L0x7fffffffd836,L0x7fffffffd836<s 13154@16,
(-13154)@16<=s L0x7fffffffd838,L0x7fffffffd838<s 13154@16,
(-13154)@16<=s L0x7fffffffd83a,L0x7fffffffd83a<s 13154@16,
(-13154)@16<=s L0x7fffffffd83c,L0x7fffffffd83c<s 13154@16,
(-13154)@16<=s L0x7fffffffd83e,L0x7fffffffd83e<s 13154@16,
(-13154)@16<=s L0x7fffffffd840,L0x7fffffffd840<s 13154@16,
(-13154)@16<=s L0x7fffffffd842,L0x7fffffffd842<s 13154@16,
(-13154)@16<=s L0x7fffffffd844,L0x7fffffffd844<s 13154@16,
(-13154)@16<=s L0x7fffffffd846,L0x7fffffffd846<s 13154@16,
(-13154)@16<=s L0x7fffffffd848,L0x7fffffffd848<s 13154@16,
(-13154)@16<=s L0x7fffffffd84a,L0x7fffffffd84a<s 13154@16,
(-13154)@16<=s L0x7fffffffd84c,L0x7fffffffd84c<s 13154@16,
(-13154)@16<=s L0x7fffffffd84e,L0x7fffffffd84e<s 13154@16,
(-13154)@16<=s L0x7fffffffd850,L0x7fffffffd850<s 13154@16,
(-13154)@16<=s L0x7fffffffd852,L0x7fffffffd852<s 13154@16,
(-13154)@16<=s L0x7fffffffd854,L0x7fffffffd854<s 13154@16,
(-13154)@16<=s L0x7fffffffd856,L0x7fffffffd856<s 13154@16,
(-13154)@16<=s L0x7fffffffd858,L0x7fffffffd858<s 13154@16,
(-13154)@16<=s L0x7fffffffd85a,L0x7fffffffd85a<s 13154@16,
(-13154)@16<=s L0x7fffffffd85c,L0x7fffffffd85c<s 13154@16,
(-13154)@16<=s L0x7fffffffd85e,L0x7fffffffd85e<s 13154@16,
(-13154)@16<=s L0x7fffffffd860,L0x7fffffffd860<s 13154@16,
(-13154)@16<=s L0x7fffffffd862,L0x7fffffffd862<s 13154@16,
(-13154)@16<=s L0x7fffffffd864,L0x7fffffffd864<s 13154@16,
(-13154)@16<=s L0x7fffffffd866,L0x7fffffffd866<s 13154@16,
(-13154)@16<=s L0x7fffffffd868,L0x7fffffffd868<s 13154@16,
(-13154)@16<=s L0x7fffffffd86a,L0x7fffffffd86a<s 13154@16,
(-13154)@16<=s L0x7fffffffd86c,L0x7fffffffd86c<s 13154@16,
(-13154)@16<=s L0x7fffffffd86e,L0x7fffffffd86e<s 13154@16,
(-13154)@16<=s L0x7fffffffd870,L0x7fffffffd870<s 13154@16,
(-13154)@16<=s L0x7fffffffd872,L0x7fffffffd872<s 13154@16,
(-13154)@16<=s L0x7fffffffd874,L0x7fffffffd874<s 13154@16,
(-13154)@16<=s L0x7fffffffd876,L0x7fffffffd876<s 13154@16,
(-13154)@16<=s L0x7fffffffd878,L0x7fffffffd878<s 13154@16,
(-13154)@16<=s L0x7fffffffd87a,L0x7fffffffd87a<s 13154@16,
(-13154)@16<=s L0x7fffffffd87c,L0x7fffffffd87c<s 13154@16,
(-13154)@16<=s L0x7fffffffd87e,L0x7fffffffd87e<s 13154@16,
(-13154)@16<=s L0x7fffffffd880,L0x7fffffffd880<s 13154@16,
(-13154)@16<=s L0x7fffffffd882,L0x7fffffffd882<s 13154@16,
(-13154)@16<=s L0x7fffffffd884,L0x7fffffffd884<s 13154@16,
(-13154)@16<=s L0x7fffffffd886,L0x7fffffffd886<s 13154@16,
(-13154)@16<=s L0x7fffffffd888,L0x7fffffffd888<s 13154@16,
(-13154)@16<=s L0x7fffffffd88a,L0x7fffffffd88a<s 13154@16,
(-13154)@16<=s L0x7fffffffd88c,L0x7fffffffd88c<s 13154@16,
(-13154)@16<=s L0x7fffffffd88e,L0x7fffffffd88e<s 13154@16,
(-13154)@16<=s L0x7fffffffd890,L0x7fffffffd890<s 13154@16,
(-13154)@16<=s L0x7fffffffd892,L0x7fffffffd892<s 13154@16,
(-13154)@16<=s L0x7fffffffd894,L0x7fffffffd894<s 13154@16,
(-13154)@16<=s L0x7fffffffd896,L0x7fffffffd896<s 13154@16,
(-13154)@16<=s L0x7fffffffd898,L0x7fffffffd898<s 13154@16,
(-13154)@16<=s L0x7fffffffd89a,L0x7fffffffd89a<s 13154@16,
(-13154)@16<=s L0x7fffffffd89c,L0x7fffffffd89c<s 13154@16,
(-13154)@16<=s L0x7fffffffd89e,L0x7fffffffd89e<s 13154@16,
(-13154)@16<=s L0x7fffffffd8a0,L0x7fffffffd8a0<s 13154@16,
(-13154)@16<=s L0x7fffffffd8a2,L0x7fffffffd8a2<s 13154@16,
(-13154)@16<=s L0x7fffffffd8a4,L0x7fffffffd8a4<s 13154@16,
(-13154)@16<=s L0x7fffffffd8a6,L0x7fffffffd8a6<s 13154@16,
(-13154)@16<=s L0x7fffffffd8a8,L0x7fffffffd8a8<s 13154@16,
(-13154)@16<=s L0x7fffffffd8aa,L0x7fffffffd8aa<s 13154@16,
(-13154)@16<=s L0x7fffffffd8ac,L0x7fffffffd8ac<s 13154@16,
(-13154)@16<=s L0x7fffffffd8ae,L0x7fffffffd8ae<s 13154@16,
(-13154)@16<=s L0x7fffffffd8b0,L0x7fffffffd8b0<s 13154@16,
(-13154)@16<=s L0x7fffffffd8b2,L0x7fffffffd8b2<s 13154@16,
(-13154)@16<=s L0x7fffffffd8b4,L0x7fffffffd8b4<s 13154@16,
(-13154)@16<=s L0x7fffffffd8b6,L0x7fffffffd8b6<s 13154@16,
(-13154)@16<=s L0x7fffffffd8b8,L0x7fffffffd8b8<s 13154@16,
(-13154)@16<=s L0x7fffffffd8ba,L0x7fffffffd8ba<s 13154@16,
(-13154)@16<=s L0x7fffffffd8bc,L0x7fffffffd8bc<s 13154@16,
(-13154)@16<=s L0x7fffffffd8be,L0x7fffffffd8be<s 13154@16,
(-13154)@16<=s L0x7fffffffd8c0,L0x7fffffffd8c0<s 13154@16,
(-13154)@16<=s L0x7fffffffd8c2,L0x7fffffffd8c2<s 13154@16,
(-13154)@16<=s L0x7fffffffd8c4,L0x7fffffffd8c4<s 13154@16,
(-13154)@16<=s L0x7fffffffd8c6,L0x7fffffffd8c6<s 13154@16,
(-13154)@16<=s L0x7fffffffd8c8,L0x7fffffffd8c8<s 13154@16,
(-13154)@16<=s L0x7fffffffd8ca,L0x7fffffffd8ca<s 13154@16,
(-13154)@16<=s L0x7fffffffd8cc,L0x7fffffffd8cc<s 13154@16,
(-13154)@16<=s L0x7fffffffd8ce,L0x7fffffffd8ce<s 13154@16,
(-13154)@16<=s L0x7fffffffd8d0,L0x7fffffffd8d0<s 13154@16,
(-13154)@16<=s L0x7fffffffd8d2,L0x7fffffffd8d2<s 13154@16,
(-13154)@16<=s L0x7fffffffd8d4,L0x7fffffffd8d4<s 13154@16,
(-13154)@16<=s L0x7fffffffd8d6,L0x7fffffffd8d6<s 13154@16,
(-13154)@16<=s L0x7fffffffd8d8,L0x7fffffffd8d8<s 13154@16,
(-12913)@16<=s L0x7fffffffd8da,L0x7fffffffd8da<s 12913@16,
(-12913)@16<=s L0x7fffffffd8dc,L0x7fffffffd8dc<s 12913@16,
(-12913)@16<=s L0x7fffffffd8de,L0x7fffffffd8de<s 12913@16
,
(-13177)@16<=s L0x7fffffffd8e0,L0x7fffffffd8e0<s 13177@16,
(-13177)@16<=s L0x7fffffffd8e2,L0x7fffffffd8e2<s 13177@16,
(-13177)@16<=s L0x7fffffffd8e4,L0x7fffffffd8e4<s 13177@16,
(-13177)@16<=s L0x7fffffffd8e6,L0x7fffffffd8e6<s 13177@16,
(-13177)@16<=s L0x7fffffffd8e8,L0x7fffffffd8e8<s 13177@16,
(-13177)@16<=s L0x7fffffffd8ea,L0x7fffffffd8ea<s 13177@16,
(-13177)@16<=s L0x7fffffffd8ec,L0x7fffffffd8ec<s 13177@16,
(-13177)@16<=s L0x7fffffffd8ee,L0x7fffffffd8ee<s 13177@16,
(-13177)@16<=s L0x7fffffffd8f0,L0x7fffffffd8f0<s 13177@16,
(-13177)@16<=s L0x7fffffffd8f2,L0x7fffffffd8f2<s 13177@16,
(-13177)@16<=s L0x7fffffffd8f4,L0x7fffffffd8f4<s 13177@16,
(-13177)@16<=s L0x7fffffffd8f6,L0x7fffffffd8f6<s 13177@16,
(-13177)@16<=s L0x7fffffffd8f8,L0x7fffffffd8f8<s 13177@16,
(-13177)@16<=s L0x7fffffffd8fa,L0x7fffffffd8fa<s 13177@16,
(-13177)@16<=s L0x7fffffffd8fc,L0x7fffffffd8fc<s 13177@16,
(-13177)@16<=s L0x7fffffffd8fe,L0x7fffffffd8fe<s 13177@16,
(-13177)@16<=s L0x7fffffffd900,L0x7fffffffd900<s 13177@16,
(-13177)@16<=s L0x7fffffffd902,L0x7fffffffd902<s 13177@16,
(-13177)@16<=s L0x7fffffffd904,L0x7fffffffd904<s 13177@16,
(-13177)@16<=s L0x7fffffffd906,L0x7fffffffd906<s 13177@16,
(-13177)@16<=s L0x7fffffffd908,L0x7fffffffd908<s 13177@16,
(-13177)@16<=s L0x7fffffffd90a,L0x7fffffffd90a<s 13177@16,
(-13177)@16<=s L0x7fffffffd90c,L0x7fffffffd90c<s 13177@16,
(-13177)@16<=s L0x7fffffffd90e,L0x7fffffffd90e<s 13177@16,
(-13177)@16<=s L0x7fffffffd910,L0x7fffffffd910<s 13177@16,
(-13177)@16<=s L0x7fffffffd912,L0x7fffffffd912<s 13177@16,
(-13177)@16<=s L0x7fffffffd914,L0x7fffffffd914<s 13177@16,
(-13177)@16<=s L0x7fffffffd916,L0x7fffffffd916<s 13177@16,
(-13177)@16<=s L0x7fffffffd918,L0x7fffffffd918<s 13177@16,
(-13177)@16<=s L0x7fffffffd91a,L0x7fffffffd91a<s 13177@16,
(-13177)@16<=s L0x7fffffffd91c,L0x7fffffffd91c<s 13177@16,
(-13177)@16<=s L0x7fffffffd91e,L0x7fffffffd91e<s 13177@16,
(-13177)@16<=s L0x7fffffffd920,L0x7fffffffd920<s 13177@16,
(-13177)@16<=s L0x7fffffffd922,L0x7fffffffd922<s 13177@16,
(-13177)@16<=s L0x7fffffffd924,L0x7fffffffd924<s 13177@16,
(-13177)@16<=s L0x7fffffffd926,L0x7fffffffd926<s 13177@16,
(-13177)@16<=s L0x7fffffffd928,L0x7fffffffd928<s 13177@16,
(-13177)@16<=s L0x7fffffffd92a,L0x7fffffffd92a<s 13177@16,
(-13177)@16<=s L0x7fffffffd92c,L0x7fffffffd92c<s 13177@16,
(-13177)@16<=s L0x7fffffffd92e,L0x7fffffffd92e<s 13177@16,
(-13177)@16<=s L0x7fffffffd930,L0x7fffffffd930<s 13177@16,
(-13177)@16<=s L0x7fffffffd932,L0x7fffffffd932<s 13177@16,
(-13177)@16<=s L0x7fffffffd934,L0x7fffffffd934<s 13177@16,
(-13177)@16<=s L0x7fffffffd936,L0x7fffffffd936<s 13177@16,
(-13177)@16<=s L0x7fffffffd938,L0x7fffffffd938<s 13177@16,
(-13177)@16<=s L0x7fffffffd93a,L0x7fffffffd93a<s 13177@16,
(-13177)@16<=s L0x7fffffffd93c,L0x7fffffffd93c<s 13177@16,
(-13177)@16<=s L0x7fffffffd93e,L0x7fffffffd93e<s 13177@16,
(-13177)@16<=s L0x7fffffffd940,L0x7fffffffd940<s 13177@16,
(-13177)@16<=s L0x7fffffffd942,L0x7fffffffd942<s 13177@16,
(-13177)@16<=s L0x7fffffffd944,L0x7fffffffd944<s 13177@16,
(-13177)@16<=s L0x7fffffffd946,L0x7fffffffd946<s 13177@16,
(-13177)@16<=s L0x7fffffffd948,L0x7fffffffd948<s 13177@16,
(-13177)@16<=s L0x7fffffffd94a,L0x7fffffffd94a<s 13177@16,
(-13177)@16<=s L0x7fffffffd94c,L0x7fffffffd94c<s 13177@16,
(-13177)@16<=s L0x7fffffffd94e,L0x7fffffffd94e<s 13177@16,
(-13177)@16<=s L0x7fffffffd950,L0x7fffffffd950<s 13177@16,
(-13177)@16<=s L0x7fffffffd952,L0x7fffffffd952<s 13177@16,
(-13177)@16<=s L0x7fffffffd954,L0x7fffffffd954<s 13177@16,
(-13177)@16<=s L0x7fffffffd956,L0x7fffffffd956<s 13177@16,
(-13177)@16<=s L0x7fffffffd958,L0x7fffffffd958<s 13177@16,
(-13177)@16<=s L0x7fffffffd95a,L0x7fffffffd95a<s 13177@16,
(-13177)@16<=s L0x7fffffffd95c,L0x7fffffffd95c<s 13177@16,
(-13177)@16<=s L0x7fffffffd95e,L0x7fffffffd95e<s 13177@16,
(-13177)@16<=s L0x7fffffffd960,L0x7fffffffd960<s 13177@16,
(-13177)@16<=s L0x7fffffffd962,L0x7fffffffd962<s 13177@16,
(-13177)@16<=s L0x7fffffffd964,L0x7fffffffd964<s 13177@16,
(-13177)@16<=s L0x7fffffffd966,L0x7fffffffd966<s 13177@16,
(-13177)@16<=s L0x7fffffffd968,L0x7fffffffd968<s 13177@16,
(-13177)@16<=s L0x7fffffffd96a,L0x7fffffffd96a<s 13177@16,
(-13177)@16<=s L0x7fffffffd96c,L0x7fffffffd96c<s 13177@16,
(-13177)@16<=s L0x7fffffffd96e,L0x7fffffffd96e<s 13177@16,
(-13177)@16<=s L0x7fffffffd970,L0x7fffffffd970<s 13177@16,
(-13177)@16<=s L0x7fffffffd972,L0x7fffffffd972<s 13177@16,
(-13177)@16<=s L0x7fffffffd974,L0x7fffffffd974<s 13177@16,
(-13177)@16<=s L0x7fffffffd976,L0x7fffffffd976<s 13177@16,
(-13177)@16<=s L0x7fffffffd978,L0x7fffffffd978<s 13177@16,
(-13177)@16<=s L0x7fffffffd97a,L0x7fffffffd97a<s 13177@16,
(-13177)@16<=s L0x7fffffffd97c,L0x7fffffffd97c<s 13177@16,
(-13177)@16<=s L0x7fffffffd97e,L0x7fffffffd97e<s 13177@16,
(-13177)@16<=s L0x7fffffffd980,L0x7fffffffd980<s 13177@16,
(-13177)@16<=s L0x7fffffffd982,L0x7fffffffd982<s 13177@16,
(-13177)@16<=s L0x7fffffffd984,L0x7fffffffd984<s 13177@16,
(-13177)@16<=s L0x7fffffffd986,L0x7fffffffd986<s 13177@16,
(-13177)@16<=s L0x7fffffffd988,L0x7fffffffd988<s 13177@16,
(-13177)@16<=s L0x7fffffffd98a,L0x7fffffffd98a<s 13177@16,
(-13177)@16<=s L0x7fffffffd98c,L0x7fffffffd98c<s 13177@16,
(-13177)@16<=s L0x7fffffffd98e,L0x7fffffffd98e<s 13177@16,
(-13177)@16<=s L0x7fffffffd990,L0x7fffffffd990<s 13177@16,
(-13177)@16<=s L0x7fffffffd992,L0x7fffffffd992<s 13177@16,
(-13177)@16<=s L0x7fffffffd994,L0x7fffffffd994<s 13177@16,
(-13177)@16<=s L0x7fffffffd996,L0x7fffffffd996<s 13177@16,
(-13177)@16<=s L0x7fffffffd998,L0x7fffffffd998<s 13177@16,
(-13177)@16<=s L0x7fffffffd99a,L0x7fffffffd99a<s 13177@16,
(-13177)@16<=s L0x7fffffffd99c,L0x7fffffffd99c<s 13177@16,
(-13177)@16<=s L0x7fffffffd99e,L0x7fffffffd99e<s 13177@16,
(-13177)@16<=s L0x7fffffffd9a0,L0x7fffffffd9a0<s 13177@16,
(-13177)@16<=s L0x7fffffffd9a2,L0x7fffffffd9a2<s 13177@16,
(-13177)@16<=s L0x7fffffffd9a4,L0x7fffffffd9a4<s 13177@16,
(-13177)@16<=s L0x7fffffffd9a6,L0x7fffffffd9a6<s 13177@16,
(-13177)@16<=s L0x7fffffffd9a8,L0x7fffffffd9a8<s 13177@16,
(-13177)@16<=s L0x7fffffffd9aa,L0x7fffffffd9aa<s 13177@16,
(-13177)@16<=s L0x7fffffffd9ac,L0x7fffffffd9ac<s 13177@16,
(-13177)@16<=s L0x7fffffffd9ae,L0x7fffffffd9ae<s 13177@16,
(-13177)@16<=s L0x7fffffffd9b0,L0x7fffffffd9b0<s 13177@16,
(-13177)@16<=s L0x7fffffffd9b2,L0x7fffffffd9b2<s 13177@16,
(-13177)@16<=s L0x7fffffffd9b4,L0x7fffffffd9b4<s 13177@16,
(-13177)@16<=s L0x7fffffffd9b6,L0x7fffffffd9b6<s 13177@16,
(-13177)@16<=s L0x7fffffffd9b8,L0x7fffffffd9b8<s 13177@16,
(-13177)@16<=s L0x7fffffffd9ba,L0x7fffffffd9ba<s 13177@16,
(-13177)@16<=s L0x7fffffffd9bc,L0x7fffffffd9bc<s 13177@16,
(-13177)@16<=s L0x7fffffffd9be,L0x7fffffffd9be<s 13177@16,
(-13177)@16<=s L0x7fffffffd9c0,L0x7fffffffd9c0<s 13177@16,
(-13177)@16<=s L0x7fffffffd9c2,L0x7fffffffd9c2<s 13177@16,
(-13177)@16<=s L0x7fffffffd9c4,L0x7fffffffd9c4<s 13177@16,
(-13177)@16<=s L0x7fffffffd9c6,L0x7fffffffd9c6<s 13177@16,
(-13177)@16<=s L0x7fffffffd9c8,L0x7fffffffd9c8<s 13177@16,
(-13177)@16<=s L0x7fffffffd9ca,L0x7fffffffd9ca<s 13177@16,
(-13177)@16<=s L0x7fffffffd9cc,L0x7fffffffd9cc<s 13177@16,
(-13177)@16<=s L0x7fffffffd9ce,L0x7fffffffd9ce<s 13177@16,
(-13177)@16<=s L0x7fffffffd9d0,L0x7fffffffd9d0<s 13177@16,
(-13177)@16<=s L0x7fffffffd9d2,L0x7fffffffd9d2<s 13177@16,
(-13177)@16<=s L0x7fffffffd9d4,L0x7fffffffd9d4<s 13177@16,
(-13177)@16<=s L0x7fffffffd9d6,L0x7fffffffd9d6<s 13177@16,
(-13177)@16<=s L0x7fffffffd9d8,L0x7fffffffd9d8<s 13177@16,
(-12892)@16<=s L0x7fffffffd9da,L0x7fffffffd9da<s 12892@16,
(-12892)@16<=s L0x7fffffffd9dc,L0x7fffffffd9dc<s 12892@16,
(-12892)@16<=s L0x7fffffffd9de,L0x7fffffffd9de<s 12892@16
,
(-13177)@16<=s L0x7fffffffd9e0,L0x7fffffffd9e0<s 13177@16,
(-13177)@16<=s L0x7fffffffd9e2,L0x7fffffffd9e2<s 13177@16,
(-13177)@16<=s L0x7fffffffd9e4,L0x7fffffffd9e4<s 13177@16,
(-13177)@16<=s L0x7fffffffd9e6,L0x7fffffffd9e6<s 13177@16,
(-13177)@16<=s L0x7fffffffd9e8,L0x7fffffffd9e8<s 13177@16,
(-13177)@16<=s L0x7fffffffd9ea,L0x7fffffffd9ea<s 13177@16,
(-13177)@16<=s L0x7fffffffd9ec,L0x7fffffffd9ec<s 13177@16,
(-13177)@16<=s L0x7fffffffd9ee,L0x7fffffffd9ee<s 13177@16,
(-13177)@16<=s L0x7fffffffd9f0,L0x7fffffffd9f0<s 13177@16,
(-13177)@16<=s L0x7fffffffd9f2,L0x7fffffffd9f2<s 13177@16,
(-13177)@16<=s L0x7fffffffd9f4,L0x7fffffffd9f4<s 13177@16,
(-13177)@16<=s L0x7fffffffd9f6,L0x7fffffffd9f6<s 13177@16,
(-13177)@16<=s L0x7fffffffd9f8,L0x7fffffffd9f8<s 13177@16,
(-13177)@16<=s L0x7fffffffd9fa,L0x7fffffffd9fa<s 13177@16,
(-13177)@16<=s L0x7fffffffd9fc,L0x7fffffffd9fc<s 13177@16,
(-13177)@16<=s L0x7fffffffd9fe,L0x7fffffffd9fe<s 13177@16,
(-13177)@16<=s L0x7fffffffda00,L0x7fffffffda00<s 13177@16,
(-13177)@16<=s L0x7fffffffda02,L0x7fffffffda02<s 13177@16,
(-13177)@16<=s L0x7fffffffda04,L0x7fffffffda04<s 13177@16,
(-13177)@16<=s L0x7fffffffda06,L0x7fffffffda06<s 13177@16,
(-13177)@16<=s L0x7fffffffda08,L0x7fffffffda08<s 13177@16,
(-13177)@16<=s L0x7fffffffda0a,L0x7fffffffda0a<s 13177@16,
(-13177)@16<=s L0x7fffffffda0c,L0x7fffffffda0c<s 13177@16,
(-13177)@16<=s L0x7fffffffda0e,L0x7fffffffda0e<s 13177@16,
(-13177)@16<=s L0x7fffffffda10,L0x7fffffffda10<s 13177@16,
(-13177)@16<=s L0x7fffffffda12,L0x7fffffffda12<s 13177@16,
(-13177)@16<=s L0x7fffffffda14,L0x7fffffffda14<s 13177@16,
(-13177)@16<=s L0x7fffffffda16,L0x7fffffffda16<s 13177@16,
(-13177)@16<=s L0x7fffffffda18,L0x7fffffffda18<s 13177@16,
(-13177)@16<=s L0x7fffffffda1a,L0x7fffffffda1a<s 13177@16,
(-13177)@16<=s L0x7fffffffda1c,L0x7fffffffda1c<s 13177@16,
(-13177)@16<=s L0x7fffffffda1e,L0x7fffffffda1e<s 13177@16,
(-13177)@16<=s L0x7fffffffda20,L0x7fffffffda20<s 13177@16,
(-13177)@16<=s L0x7fffffffda22,L0x7fffffffda22<s 13177@16,
(-13177)@16<=s L0x7fffffffda24,L0x7fffffffda24<s 13177@16,
(-13177)@16<=s L0x7fffffffda26,L0x7fffffffda26<s 13177@16,
(-13177)@16<=s L0x7fffffffda28,L0x7fffffffda28<s 13177@16,
(-13177)@16<=s L0x7fffffffda2a,L0x7fffffffda2a<s 13177@16,
(-13177)@16<=s L0x7fffffffda2c,L0x7fffffffda2c<s 13177@16,
(-13177)@16<=s L0x7fffffffda2e,L0x7fffffffda2e<s 13177@16,
(-13177)@16<=s L0x7fffffffda30,L0x7fffffffda30<s 13177@16,
(-13177)@16<=s L0x7fffffffda32,L0x7fffffffda32<s 13177@16,
(-13177)@16<=s L0x7fffffffda34,L0x7fffffffda34<s 13177@16,
(-13177)@16<=s L0x7fffffffda36,L0x7fffffffda36<s 13177@16,
(-13177)@16<=s L0x7fffffffda38,L0x7fffffffda38<s 13177@16,
(-13177)@16<=s L0x7fffffffda3a,L0x7fffffffda3a<s 13177@16,
(-13177)@16<=s L0x7fffffffda3c,L0x7fffffffda3c<s 13177@16,
(-13177)@16<=s L0x7fffffffda3e,L0x7fffffffda3e<s 13177@16,
(-13177)@16<=s L0x7fffffffda40,L0x7fffffffda40<s 13177@16,
(-13177)@16<=s L0x7fffffffda42,L0x7fffffffda42<s 13177@16,
(-13177)@16<=s L0x7fffffffda44,L0x7fffffffda44<s 13177@16,
(-13177)@16<=s L0x7fffffffda46,L0x7fffffffda46<s 13177@16,
(-13177)@16<=s L0x7fffffffda48,L0x7fffffffda48<s 13177@16,
(-13177)@16<=s L0x7fffffffda4a,L0x7fffffffda4a<s 13177@16,
(-13177)@16<=s L0x7fffffffda4c,L0x7fffffffda4c<s 13177@16,
(-13177)@16<=s L0x7fffffffda4e,L0x7fffffffda4e<s 13177@16,
(-13177)@16<=s L0x7fffffffda50,L0x7fffffffda50<s 13177@16,
(-13177)@16<=s L0x7fffffffda52,L0x7fffffffda52<s 13177@16,
(-13177)@16<=s L0x7fffffffda54,L0x7fffffffda54<s 13177@16,
(-13177)@16<=s L0x7fffffffda56,L0x7fffffffda56<s 13177@16,
(-13177)@16<=s L0x7fffffffda58,L0x7fffffffda58<s 13177@16,
(-13177)@16<=s L0x7fffffffda5a,L0x7fffffffda5a<s 13177@16,
(-13177)@16<=s L0x7fffffffda5c,L0x7fffffffda5c<s 13177@16,
(-13177)@16<=s L0x7fffffffda5e,L0x7fffffffda5e<s 13177@16,
(-13177)@16<=s L0x7fffffffda60,L0x7fffffffda60<s 13177@16,
(-13177)@16<=s L0x7fffffffda62,L0x7fffffffda62<s 13177@16,
(-13177)@16<=s L0x7fffffffda64,L0x7fffffffda64<s 13177@16,
(-13177)@16<=s L0x7fffffffda66,L0x7fffffffda66<s 13177@16,
(-13177)@16<=s L0x7fffffffda68,L0x7fffffffda68<s 13177@16,
(-13177)@16<=s L0x7fffffffda6a,L0x7fffffffda6a<s 13177@16,
(-13177)@16<=s L0x7fffffffda6c,L0x7fffffffda6c<s 13177@16,
(-13177)@16<=s L0x7fffffffda6e,L0x7fffffffda6e<s 13177@16,
(-13177)@16<=s L0x7fffffffda70,L0x7fffffffda70<s 13177@16,
(-13177)@16<=s L0x7fffffffda72,L0x7fffffffda72<s 13177@16,
(-13177)@16<=s L0x7fffffffda74,L0x7fffffffda74<s 13177@16,
(-13177)@16<=s L0x7fffffffda76,L0x7fffffffda76<s 13177@16,
(-13177)@16<=s L0x7fffffffda78,L0x7fffffffda78<s 13177@16,
(-13177)@16<=s L0x7fffffffda7a,L0x7fffffffda7a<s 13177@16,
(-13177)@16<=s L0x7fffffffda7c,L0x7fffffffda7c<s 13177@16,
(-13177)@16<=s L0x7fffffffda7e,L0x7fffffffda7e<s 13177@16,
(-13177)@16<=s L0x7fffffffda80,L0x7fffffffda80<s 13177@16,
(-13177)@16<=s L0x7fffffffda82,L0x7fffffffda82<s 13177@16,
(-13177)@16<=s L0x7fffffffda84,L0x7fffffffda84<s 13177@16,
(-13177)@16<=s L0x7fffffffda86,L0x7fffffffda86<s 13177@16,
(-13177)@16<=s L0x7fffffffda88,L0x7fffffffda88<s 13177@16,
(-13177)@16<=s L0x7fffffffda8a,L0x7fffffffda8a<s 13177@16,
(-13177)@16<=s L0x7fffffffda8c,L0x7fffffffda8c<s 13177@16,
(-13177)@16<=s L0x7fffffffda8e,L0x7fffffffda8e<s 13177@16,
(-13177)@16<=s L0x7fffffffda90,L0x7fffffffda90<s 13177@16,
(-13177)@16<=s L0x7fffffffda92,L0x7fffffffda92<s 13177@16,
(-13177)@16<=s L0x7fffffffda94,L0x7fffffffda94<s 13177@16,
(-13177)@16<=s L0x7fffffffda96,L0x7fffffffda96<s 13177@16,
(-13177)@16<=s L0x7fffffffda98,L0x7fffffffda98<s 13177@16,
(-13177)@16<=s L0x7fffffffda9a,L0x7fffffffda9a<s 13177@16,
(-13177)@16<=s L0x7fffffffda9c,L0x7fffffffda9c<s 13177@16,
(-13177)@16<=s L0x7fffffffda9e,L0x7fffffffda9e<s 13177@16,
(-13177)@16<=s L0x7fffffffdaa0,L0x7fffffffdaa0<s 13177@16,
(-13177)@16<=s L0x7fffffffdaa2,L0x7fffffffdaa2<s 13177@16,
(-13177)@16<=s L0x7fffffffdaa4,L0x7fffffffdaa4<s 13177@16,
(-13177)@16<=s L0x7fffffffdaa6,L0x7fffffffdaa6<s 13177@16,
(-13177)@16<=s L0x7fffffffdaa8,L0x7fffffffdaa8<s 13177@16,
(-13177)@16<=s L0x7fffffffdaaa,L0x7fffffffdaaa<s 13177@16,
(-13177)@16<=s L0x7fffffffdaac,L0x7fffffffdaac<s 13177@16,
(-13177)@16<=s L0x7fffffffdaae,L0x7fffffffdaae<s 13177@16,
(-13177)@16<=s L0x7fffffffdab0,L0x7fffffffdab0<s 13177@16,
(-13177)@16<=s L0x7fffffffdab2,L0x7fffffffdab2<s 13177@16,
(-13177)@16<=s L0x7fffffffdab4,L0x7fffffffdab4<s 13177@16,
(-13177)@16<=s L0x7fffffffdab6,L0x7fffffffdab6<s 13177@16,
(-13177)@16<=s L0x7fffffffdab8,L0x7fffffffdab8<s 13177@16,
(-13177)@16<=s L0x7fffffffdaba,L0x7fffffffdaba<s 13177@16,
(-13177)@16<=s L0x7fffffffdabc,L0x7fffffffdabc<s 13177@16,
(-13177)@16<=s L0x7fffffffdabe,L0x7fffffffdabe<s 13177@16,
(-13177)@16<=s L0x7fffffffdac0,L0x7fffffffdac0<s 13177@16,
(-13177)@16<=s L0x7fffffffdac2,L0x7fffffffdac2<s 13177@16,
(-13177)@16<=s L0x7fffffffdac4,L0x7fffffffdac4<s 13177@16,
(-13177)@16<=s L0x7fffffffdac6,L0x7fffffffdac6<s 13177@16,
(-13177)@16<=s L0x7fffffffdac8,L0x7fffffffdac8<s 13177@16,
(-13177)@16<=s L0x7fffffffdaca,L0x7fffffffdaca<s 13177@16,
(-13177)@16<=s L0x7fffffffdacc,L0x7fffffffdacc<s 13177@16,
(-13177)@16<=s L0x7fffffffdace,L0x7fffffffdace<s 13177@16,
(-13177)@16<=s L0x7fffffffdad0,L0x7fffffffdad0<s 13177@16,
(-13177)@16<=s L0x7fffffffdad2,L0x7fffffffdad2<s 13177@16,
(-13177)@16<=s L0x7fffffffdad4,L0x7fffffffdad4<s 13177@16,
(-13177)@16<=s L0x7fffffffdad6,L0x7fffffffdad6<s 13177@16,
(-13177)@16<=s L0x7fffffffdad8,L0x7fffffffdad8<s 13177@16,
(-12892)@16<=s L0x7fffffffdada,L0x7fffffffdada<s 12892@16,
(-12892)@16<=s L0x7fffffffdadc,L0x7fffffffdadc<s 12892@16,
(-12892)@16<=s L0x7fffffffdade,L0x7fffffffdade<s 12892@16

] prove with [ precondition ];


(* === split the CUT into 8 slices === *)

(**************** CUT 128,  1 *****************)

ecut true;

(**************** CUT 129,  1 *****************)

ecut 
  and [
eqmod (c070*x**112+c071*x**113+c072*x**114+c073*x**115+
       c074*x**116+c075*x**117+c076*x**118+c077*x**119+
       c078*x**120+c079*x**121+c07a*x**122+c07b*x**123+
       c07c*x**124+c07d*x**125+c07e*x**126+c07f*x**127+
       c0f0*x**240+c0f1*x**241+c0f2*x**242+c0f3*x**243+
       c0f4*x**244+c0f5*x**245+c0f6*x**246+c0f7*x**247+
       c0f8*x**248+c0f9*x**249+c0fa*x**250+c0fb*x**251+
       c0fc*x**252+c0fd*x**253+c0fe*x**254+c0ff*x**255+
       c170*x**368+c171*x**369+c172*x**370+c173*x**371+
       c174*x**372+c175*x**373+c176*x**374+c177*x**375+
       c178*x**376+c179*x**377+c17a*x**378+c17b*x**379+
       c17c*x**380+c17d*x**381+c17e*x**382+c17f*x**383+
       c1f0*x**496+c1f1*x**497+c1f2*x**498+c1f3*x**499+
       c1f4*x**500+c1f5*x**501+c1f6*x**502+c1f7*x**503+
       c1f8*x**504+c1f9*x**505+c1fa*x**506+c1fb*x**507+
       c1fc*x**508+c1fd*x**509+c1fe*x**510+c1ff*x**511)
      (L0x7fffffffd3c0*x**112+L0x7fffffffd3c2*x**113+L0x7fffffffd3c4*x**114+
       L0x7fffffffd3c6*x**115+L0x7fffffffd3c8*x**116+L0x7fffffffd3ca*x**117+
       L0x7fffffffd3cc*x**118+L0x7fffffffd3ce*x**119+L0x7fffffffd3d0*x**120+
       L0x7fffffffd3d2*x**121+L0x7fffffffd3d4*x**122+L0x7fffffffd3d6*x**123+
       L0x7fffffffd3d8*x**124+L0x7fffffffd3da*x**125+L0x7fffffffd3dc*x**126+
       L0x7fffffffd3de*x**127)
      [10753, x**128 - 1]
  ] prove with [cuts [127]];


(**************** CUT 130,  1 *****************)

ecut true;

(**************** CUT 131,  1 *****************)

ecut 
  and [
eqmod (c070*x**112+c071*x**113+c072*x**114+c073*x**115+
       c074*x**116+c075*x**117+c076*x**118+c077*x**119+
       c078*x**120+c079*x**121+c07a*x**122+c07b*x**123+
       c07c*x**124+c07d*x**125+c07e*x**126+c07f*x**127+
       c0f0*x**240+c0f1*x**241+c0f2*x**242+c0f3*x**243+
       c0f4*x**244+c0f5*x**245+c0f6*x**246+c0f7*x**247+
       c0f8*x**248+c0f9*x**249+c0fa*x**250+c0fb*x**251+
       c0fc*x**252+c0fd*x**253+c0fe*x**254+c0ff*x**255+
       c170*x**368+c171*x**369+c172*x**370+c173*x**371+
       c174*x**372+c175*x**373+c176*x**374+c177*x**375+
       c178*x**376+c179*x**377+c17a*x**378+c17b*x**379+
       c17c*x**380+c17d*x**381+c17e*x**382+c17f*x**383+
       c1f0*x**496+c1f1*x**497+c1f2*x**498+c1f3*x**499+
       c1f4*x**500+c1f5*x**501+c1f6*x**502+c1f7*x**503+
       c1f8*x**504+c1f9*x**505+c1fa*x**506+c1fb*x**507+
       c1fc*x**508+c1fd*x**509+c1fe*x**510+c1ff*x**511)
      (L0x7fffffffd4c0*x**112+L0x7fffffffd4c2*x**113+L0x7fffffffd4c4*x**114+
       L0x7fffffffd4c6*x**115+L0x7fffffffd4c8*x**116+L0x7fffffffd4ca*x**117+
       L0x7fffffffd4cc*x**118+L0x7fffffffd4ce*x**119+L0x7fffffffd4d0*x**120+
       L0x7fffffffd4d2*x**121+L0x7fffffffd4d4*x**122+L0x7fffffffd4d6*x**123+
       L0x7fffffffd4d8*x**124+L0x7fffffffd4da*x**125+L0x7fffffffd4dc*x**126+
       L0x7fffffffd4de*x**127)
      [10753, x**128 - 10752]
  ] prove with [cuts [127]];


(**************** CUT 132,  1 *****************)

ecut true;

(**************** CUT 133,  1 *****************)

ecut 
  and [
eqmod (c070*x**112+c071*x**113+c072*x**114+c073*x**115+
       c074*x**116+c075*x**117+c076*x**118+c077*x**119+
       c078*x**120+c079*x**121+c07a*x**122+c07b*x**123+
       c07c*x**124+c07d*x**125+c07e*x**126+c07f*x**127+
       c0f0*x**240+c0f1*x**241+c0f2*x**242+c0f3*x**243+
       c0f4*x**244+c0f5*x**245+c0f6*x**246+c0f7*x**247+
       c0f8*x**248+c0f9*x**249+c0fa*x**250+c0fb*x**251+
       c0fc*x**252+c0fd*x**253+c0fe*x**254+c0ff*x**255+
       c170*x**368+c171*x**369+c172*x**370+c173*x**371+
       c174*x**372+c175*x**373+c176*x**374+c177*x**375+
       c178*x**376+c179*x**377+c17a*x**378+c17b*x**379+
       c17c*x**380+c17d*x**381+c17e*x**382+c17f*x**383+
       c1f0*x**496+c1f1*x**497+c1f2*x**498+c1f3*x**499+
       c1f4*x**500+c1f5*x**501+c1f6*x**502+c1f7*x**503+
       c1f8*x**504+c1f9*x**505+c1fa*x**506+c1fb*x**507+
       c1fc*x**508+c1fd*x**509+c1fe*x**510+c1ff*x**511)
      (L0x7fffffffd5c0*x**112+L0x7fffffffd5c2*x**113+L0x7fffffffd5c4*x**114+
       L0x7fffffffd5c6*x**115+L0x7fffffffd5c8*x**116+L0x7fffffffd5ca*x**117+
       L0x7fffffffd5cc*x**118+L0x7fffffffd5ce*x**119+L0x7fffffffd5d0*x**120+
       L0x7fffffffd5d2*x**121+L0x7fffffffd5d4*x**122+L0x7fffffffd5d6*x**123+
       L0x7fffffffd5d8*x**124+L0x7fffffffd5da*x**125+L0x7fffffffd5dc*x**126+
       L0x7fffffffd5de*x**127)
      [10753, x**128 - 6264]
  ] prove with [cuts [127]];


(**************** CUT 134,  1 *****************)

ecut true;

(**************** CUT 135,  1 *****************)

ecut 
  and [
eqmod (c070*x**112+c071*x**113+c072*x**114+c073*x**115+
       c074*x**116+c075*x**117+c076*x**118+c077*x**119+
       c078*x**120+c079*x**121+c07a*x**122+c07b*x**123+
       c07c*x**124+c07d*x**125+c07e*x**126+c07f*x**127+
       c0f0*x**240+c0f1*x**241+c0f2*x**242+c0f3*x**243+
       c0f4*x**244+c0f5*x**245+c0f6*x**246+c0f7*x**247+
       c0f8*x**248+c0f9*x**249+c0fa*x**250+c0fb*x**251+
       c0fc*x**252+c0fd*x**253+c0fe*x**254+c0ff*x**255+
       c170*x**368+c171*x**369+c172*x**370+c173*x**371+
       c174*x**372+c175*x**373+c176*x**374+c177*x**375+
       c178*x**376+c179*x**377+c17a*x**378+c17b*x**379+
       c17c*x**380+c17d*x**381+c17e*x**382+c17f*x**383+
       c1f0*x**496+c1f1*x**497+c1f2*x**498+c1f3*x**499+
       c1f4*x**500+c1f5*x**501+c1f6*x**502+c1f7*x**503+
       c1f8*x**504+c1f9*x**505+c1fa*x**506+c1fb*x**507+
       c1fc*x**508+c1fd*x**509+c1fe*x**510+c1ff*x**511)
      (L0x7fffffffd6c0*x**112+L0x7fffffffd6c2*x**113+L0x7fffffffd6c4*x**114+
       L0x7fffffffd6c6*x**115+L0x7fffffffd6c8*x**116+L0x7fffffffd6ca*x**117+
       L0x7fffffffd6cc*x**118+L0x7fffffffd6ce*x**119+L0x7fffffffd6d0*x**120+
       L0x7fffffffd6d2*x**121+L0x7fffffffd6d4*x**122+L0x7fffffffd6d6*x**123+
       L0x7fffffffd6d8*x**124+L0x7fffffffd6da*x**125+L0x7fffffffd6dc*x**126+
       L0x7fffffffd6de*x**127)
      [10753, x**128 - 4489]
  ] prove with [cuts [127]];


(**************** CUT 136,  1 *****************)

ecut true;

(**************** CUT 137,  1 *****************)

ecut 
  and [
eqmod (c070*x**112+c071*x**113+c072*x**114+c073*x**115+
       c074*x**116+c075*x**117+c076*x**118+c077*x**119+
       c078*x**120+c079*x**121+c07a*x**122+c07b*x**123+
       c07c*x**124+c07d*x**125+c07e*x**126+c07f*x**127+
       c0f0*x**240+c0f1*x**241+c0f2*x**242+c0f3*x**243+
       c0f4*x**244+c0f5*x**245+c0f6*x**246+c0f7*x**247+
       c0f8*x**248+c0f9*x**249+c0fa*x**250+c0fb*x**251+
       c0fc*x**252+c0fd*x**253+c0fe*x**254+c0ff*x**255+
       c170*x**368+c171*x**369+c172*x**370+c173*x**371+
       c174*x**372+c175*x**373+c176*x**374+c177*x**375+
       c178*x**376+c179*x**377+c17a*x**378+c17b*x**379+
       c17c*x**380+c17d*x**381+c17e*x**382+c17f*x**383+
       c1f0*x**496+c1f1*x**497+c1f2*x**498+c1f3*x**499+
       c1f4*x**500+c1f5*x**501+c1f6*x**502+c1f7*x**503+
       c1f8*x**504+c1f9*x**505+c1fa*x**506+c1fb*x**507+
       c1fc*x**508+c1fd*x**509+c1fe*x**510+c1ff*x**511)
      (L0x7fffffffd7c0*x**112+L0x7fffffffd7c2*x**113+L0x7fffffffd7c4*x**114+
       L0x7fffffffd7c6*x**115+L0x7fffffffd7c8*x**116+L0x7fffffffd7ca*x**117+
       L0x7fffffffd7cc*x**118+L0x7fffffffd7ce*x**119+L0x7fffffffd7d0*x**120+
       L0x7fffffffd7d2*x**121+L0x7fffffffd7d4*x**122+L0x7fffffffd7d6*x**123+
       L0x7fffffffd7d8*x**124+L0x7fffffffd7da*x**125+L0x7fffffffd7dc*x**126+
       L0x7fffffffd7de*x**127)
      [10753, x**128 - 321]
  ] prove with [cuts [127]];


(**************** CUT 138,  1 *****************)

ecut true;

(**************** CUT 139,  1 *****************)

ecut 
  and [
eqmod (c070*x**112+c071*x**113+c072*x**114+c073*x**115+
       c074*x**116+c075*x**117+c076*x**118+c077*x**119+
       c078*x**120+c079*x**121+c07a*x**122+c07b*x**123+
       c07c*x**124+c07d*x**125+c07e*x**126+c07f*x**127+
       c0f0*x**240+c0f1*x**241+c0f2*x**242+c0f3*x**243+
       c0f4*x**244+c0f5*x**245+c0f6*x**246+c0f7*x**247+
       c0f8*x**248+c0f9*x**249+c0fa*x**250+c0fb*x**251+
       c0fc*x**252+c0fd*x**253+c0fe*x**254+c0ff*x**255+
       c170*x**368+c171*x**369+c172*x**370+c173*x**371+
       c174*x**372+c175*x**373+c176*x**374+c177*x**375+
       c178*x**376+c179*x**377+c17a*x**378+c17b*x**379+
       c17c*x**380+c17d*x**381+c17e*x**382+c17f*x**383+
       c1f0*x**496+c1f1*x**497+c1f2*x**498+c1f3*x**499+
       c1f4*x**500+c1f5*x**501+c1f6*x**502+c1f7*x**503+
       c1f8*x**504+c1f9*x**505+c1fa*x**506+c1fb*x**507+
       c1fc*x**508+c1fd*x**509+c1fe*x**510+c1ff*x**511)
      (L0x7fffffffd8c0*x**112+L0x7fffffffd8c2*x**113+L0x7fffffffd8c4*x**114+
       L0x7fffffffd8c6*x**115+L0x7fffffffd8c8*x**116+L0x7fffffffd8ca*x**117+
       L0x7fffffffd8cc*x**118+L0x7fffffffd8ce*x**119+L0x7fffffffd8d0*x**120+
       L0x7fffffffd8d2*x**121+L0x7fffffffd8d4*x**122+L0x7fffffffd8d6*x**123+
       L0x7fffffffd8d8*x**124+L0x7fffffffd8da*x**125+L0x7fffffffd8dc*x**126+
       L0x7fffffffd8de*x**127)
      [10753, x**128 - 10432]
  ] prove with [cuts [127]];


(**************** CUT 140,  1 *****************)

ecut true;

(**************** CUT 141,  1 *****************)

ecut 
  and [
eqmod (c070*x**112+c071*x**113+c072*x**114+c073*x**115+
       c074*x**116+c075*x**117+c076*x**118+c077*x**119+
       c078*x**120+c079*x**121+c07a*x**122+c07b*x**123+
       c07c*x**124+c07d*x**125+c07e*x**126+c07f*x**127+
       c0f0*x**240+c0f1*x**241+c0f2*x**242+c0f3*x**243+
       c0f4*x**244+c0f5*x**245+c0f6*x**246+c0f7*x**247+
       c0f8*x**248+c0f9*x**249+c0fa*x**250+c0fb*x**251+
       c0fc*x**252+c0fd*x**253+c0fe*x**254+c0ff*x**255+
       c170*x**368+c171*x**369+c172*x**370+c173*x**371+
       c174*x**372+c175*x**373+c176*x**374+c177*x**375+
       c178*x**376+c179*x**377+c17a*x**378+c17b*x**379+
       c17c*x**380+c17d*x**381+c17e*x**382+c17f*x**383+
       c1f0*x**496+c1f1*x**497+c1f2*x**498+c1f3*x**499+
       c1f4*x**500+c1f5*x**501+c1f6*x**502+c1f7*x**503+
       c1f8*x**504+c1f9*x**505+c1fa*x**506+c1fb*x**507+
       c1fc*x**508+c1fd*x**509+c1fe*x**510+c1ff*x**511)
      (L0x7fffffffd9c0*x**112+L0x7fffffffd9c2*x**113+L0x7fffffffd9c4*x**114+
       L0x7fffffffd9c6*x**115+L0x7fffffffd9c8*x**116+L0x7fffffffd9ca*x**117+
       L0x7fffffffd9cc*x**118+L0x7fffffffd9ce*x**119+L0x7fffffffd9d0*x**120+
       L0x7fffffffd9d2*x**121+L0x7fffffffd9d4*x**122+L0x7fffffffd9d6*x**123+
       L0x7fffffffd9d8*x**124+L0x7fffffffd9da*x**125+L0x7fffffffd9dc*x**126+
       L0x7fffffffd9de*x**127)
      [10753, x**128 - 10686]
  ] prove with [cuts [127]];


(**************** CUT 142,  1 *****************)

ecut true;

(**************** CUT 143,  1 *****************)

ecut 
  and [
eqmod (c070*x**112+c071*x**113+c072*x**114+c073*x**115+
       c074*x**116+c075*x**117+c076*x**118+c077*x**119+
       c078*x**120+c079*x**121+c07a*x**122+c07b*x**123+
       c07c*x**124+c07d*x**125+c07e*x**126+c07f*x**127+
       c0f0*x**240+c0f1*x**241+c0f2*x**242+c0f3*x**243+
       c0f4*x**244+c0f5*x**245+c0f6*x**246+c0f7*x**247+
       c0f8*x**248+c0f9*x**249+c0fa*x**250+c0fb*x**251+
       c0fc*x**252+c0fd*x**253+c0fe*x**254+c0ff*x**255+
       c170*x**368+c171*x**369+c172*x**370+c173*x**371+
       c174*x**372+c175*x**373+c176*x**374+c177*x**375+
       c178*x**376+c179*x**377+c17a*x**378+c17b*x**379+
       c17c*x**380+c17d*x**381+c17e*x**382+c17f*x**383+
       c1f0*x**496+c1f1*x**497+c1f2*x**498+c1f3*x**499+
       c1f4*x**500+c1f5*x**501+c1f6*x**502+c1f7*x**503+
       c1f8*x**504+c1f9*x**505+c1fa*x**506+c1fb*x**507+
       c1fc*x**508+c1fd*x**509+c1fe*x**510+c1ff*x**511)
      (L0x7fffffffdac0*x**112+L0x7fffffffdac2*x**113+L0x7fffffffdac4*x**114+
       L0x7fffffffdac6*x**115+L0x7fffffffdac8*x**116+L0x7fffffffdaca*x**117+
       L0x7fffffffdacc*x**118+L0x7fffffffdace*x**119+L0x7fffffffdad0*x**120+
       L0x7fffffffdad2*x**121+L0x7fffffffdad4*x**122+L0x7fffffffdad6*x**123+
       L0x7fffffffdad8*x**124+L0x7fffffffdada*x**125+L0x7fffffffdadc*x**126+
       L0x7fffffffdade*x**127)
      [10753, x**128 - 67]
  ] prove with [cuts [127]];



(* === be ready for next level and offset === *)

(**************** CUT 144,  1 *****************)

cut 
true && and [
( -8192)@16<=s L0x7fffffffd2e0,L0x7fffffffd2e0<s  8192@16,
( -8192)@16<=s L0x7fffffffd2e2,L0x7fffffffd2e2<s  8192@16,
( -8192)@16<=s L0x7fffffffd2e4,L0x7fffffffd2e4<s  8192@16,
( -8192)@16<=s L0x7fffffffd2e6,L0x7fffffffd2e6<s  8192@16,
( -8192)@16<=s L0x7fffffffd2e8,L0x7fffffffd2e8<s  8192@16,
( -8192)@16<=s L0x7fffffffd2ea,L0x7fffffffd2ea<s  8192@16,
( -8192)@16<=s L0x7fffffffd2ec,L0x7fffffffd2ec<s  8192@16,
( -8192)@16<=s L0x7fffffffd2ee,L0x7fffffffd2ee<s  8192@16,
( -8192)@16<=s L0x7fffffffd2f0,L0x7fffffffd2f0<s  8192@16,
( -8192)@16<=s L0x7fffffffd2f2,L0x7fffffffd2f2<s  8192@16,
( -8192)@16<=s L0x7fffffffd2f4,L0x7fffffffd2f4<s  8192@16,
( -8192)@16<=s L0x7fffffffd2f6,L0x7fffffffd2f6<s  8192@16,
( -8192)@16<=s L0x7fffffffd2f8,L0x7fffffffd2f8<s  8192@16,
( -8192)@16<=s L0x7fffffffd2fa,L0x7fffffffd2fa<s  8192@16,
( -8192)@16<=s L0x7fffffffd2fc,L0x7fffffffd2fc<s  8192@16,
( -8192)@16<=s L0x7fffffffd2fe,L0x7fffffffd2fe<s  8192@16,
( -8192)@16<=s L0x7fffffffd300,L0x7fffffffd300<s  8192@16,
( -8192)@16<=s L0x7fffffffd302,L0x7fffffffd302<s  8192@16,
( -8192)@16<=s L0x7fffffffd304,L0x7fffffffd304<s  8192@16,
( -8192)@16<=s L0x7fffffffd306,L0x7fffffffd306<s  8192@16,
( -8192)@16<=s L0x7fffffffd308,L0x7fffffffd308<s  8192@16,
( -8192)@16<=s L0x7fffffffd30a,L0x7fffffffd30a<s  8192@16,
( -8192)@16<=s L0x7fffffffd30c,L0x7fffffffd30c<s  8192@16,
( -8192)@16<=s L0x7fffffffd30e,L0x7fffffffd30e<s  8192@16,
( -8192)@16<=s L0x7fffffffd310,L0x7fffffffd310<s  8192@16,
( -8192)@16<=s L0x7fffffffd312,L0x7fffffffd312<s  8192@16,
( -8192)@16<=s L0x7fffffffd314,L0x7fffffffd314<s  8192@16,
( -8192)@16<=s L0x7fffffffd316,L0x7fffffffd316<s  8192@16,
( -8192)@16<=s L0x7fffffffd318,L0x7fffffffd318<s  8192@16,
( -8192)@16<=s L0x7fffffffd31a,L0x7fffffffd31a<s  8192@16,
( -8192)@16<=s L0x7fffffffd31c,L0x7fffffffd31c<s  8192@16,
( -8192)@16<=s L0x7fffffffd31e,L0x7fffffffd31e<s  8192@16,
( -8192)@16<=s L0x7fffffffd320,L0x7fffffffd320<s  8192@16,
( -8192)@16<=s L0x7fffffffd322,L0x7fffffffd322<s  8192@16,
( -8192)@16<=s L0x7fffffffd324,L0x7fffffffd324<s  8192@16,
( -8192)@16<=s L0x7fffffffd326,L0x7fffffffd326<s  8192@16,
( -8192)@16<=s L0x7fffffffd328,L0x7fffffffd328<s  8192@16,
( -8192)@16<=s L0x7fffffffd32a,L0x7fffffffd32a<s  8192@16,
( -8192)@16<=s L0x7fffffffd32c,L0x7fffffffd32c<s  8192@16,
( -8192)@16<=s L0x7fffffffd32e,L0x7fffffffd32e<s  8192@16,
( -8192)@16<=s L0x7fffffffd330,L0x7fffffffd330<s  8192@16,
( -8192)@16<=s L0x7fffffffd332,L0x7fffffffd332<s  8192@16,
( -8192)@16<=s L0x7fffffffd334,L0x7fffffffd334<s  8192@16,
( -8192)@16<=s L0x7fffffffd336,L0x7fffffffd336<s  8192@16,
( -8192)@16<=s L0x7fffffffd338,L0x7fffffffd338<s  8192@16,
( -8192)@16<=s L0x7fffffffd33a,L0x7fffffffd33a<s  8192@16,
( -8192)@16<=s L0x7fffffffd33c,L0x7fffffffd33c<s  8192@16,
( -8192)@16<=s L0x7fffffffd33e,L0x7fffffffd33e<s  8192@16,
( -8192)@16<=s L0x7fffffffd340,L0x7fffffffd340<s  8192@16,
( -8192)@16<=s L0x7fffffffd342,L0x7fffffffd342<s  8192@16,
( -8192)@16<=s L0x7fffffffd344,L0x7fffffffd344<s  8192@16,
( -8192)@16<=s L0x7fffffffd346,L0x7fffffffd346<s  8192@16,
( -8192)@16<=s L0x7fffffffd348,L0x7fffffffd348<s  8192@16,
( -8192)@16<=s L0x7fffffffd34a,L0x7fffffffd34a<s  8192@16,
( -8192)@16<=s L0x7fffffffd34c,L0x7fffffffd34c<s  8192@16,
( -8192)@16<=s L0x7fffffffd34e,L0x7fffffffd34e<s  8192@16,
( -8192)@16<=s L0x7fffffffd350,L0x7fffffffd350<s  8192@16,
( -8192)@16<=s L0x7fffffffd352,L0x7fffffffd352<s  8192@16,
( -8192)@16<=s L0x7fffffffd354,L0x7fffffffd354<s  8192@16,
( -8192)@16<=s L0x7fffffffd356,L0x7fffffffd356<s  8192@16,
( -8192)@16<=s L0x7fffffffd358,L0x7fffffffd358<s  8192@16,
( -8192)@16<=s L0x7fffffffd35a,L0x7fffffffd35a<s  8192@16,
( -8192)@16<=s L0x7fffffffd35c,L0x7fffffffd35c<s  8192@16,
( -8192)@16<=s L0x7fffffffd35e,L0x7fffffffd35e<s  8192@16,
( -8192)@16<=s L0x7fffffffd360,L0x7fffffffd360<s  8192@16,
( -8192)@16<=s L0x7fffffffd362,L0x7fffffffd362<s  8192@16,
( -8192)@16<=s L0x7fffffffd364,L0x7fffffffd364<s  8192@16,
( -8192)@16<=s L0x7fffffffd366,L0x7fffffffd366<s  8192@16,
( -8192)@16<=s L0x7fffffffd368,L0x7fffffffd368<s  8192@16,
( -8192)@16<=s L0x7fffffffd36a,L0x7fffffffd36a<s  8192@16,
( -8192)@16<=s L0x7fffffffd36c,L0x7fffffffd36c<s  8192@16,
( -8192)@16<=s L0x7fffffffd36e,L0x7fffffffd36e<s  8192@16,
( -8192)@16<=s L0x7fffffffd370,L0x7fffffffd370<s  8192@16,
( -8192)@16<=s L0x7fffffffd372,L0x7fffffffd372<s  8192@16,
( -8192)@16<=s L0x7fffffffd374,L0x7fffffffd374<s  8192@16,
( -8192)@16<=s L0x7fffffffd376,L0x7fffffffd376<s  8192@16,
( -8192)@16<=s L0x7fffffffd378,L0x7fffffffd378<s  8192@16,
( -8192)@16<=s L0x7fffffffd37a,L0x7fffffffd37a<s  8192@16,
( -8192)@16<=s L0x7fffffffd37c,L0x7fffffffd37c<s  8192@16,
( -8192)@16<=s L0x7fffffffd37e,L0x7fffffffd37e<s  8192@16,
( -8192)@16<=s L0x7fffffffd380,L0x7fffffffd380<s  8192@16,
( -8192)@16<=s L0x7fffffffd382,L0x7fffffffd382<s  8192@16,
( -8192)@16<=s L0x7fffffffd384,L0x7fffffffd384<s  8192@16,
( -8192)@16<=s L0x7fffffffd386,L0x7fffffffd386<s  8192@16,
( -8192)@16<=s L0x7fffffffd388,L0x7fffffffd388<s  8192@16,
( -8192)@16<=s L0x7fffffffd38a,L0x7fffffffd38a<s  8192@16,
( -8192)@16<=s L0x7fffffffd38c,L0x7fffffffd38c<s  8192@16,
( -8192)@16<=s L0x7fffffffd38e,L0x7fffffffd38e<s  8192@16,
( -8192)@16<=s L0x7fffffffd390,L0x7fffffffd390<s  8192@16,
( -8192)@16<=s L0x7fffffffd392,L0x7fffffffd392<s  8192@16,
( -8192)@16<=s L0x7fffffffd394,L0x7fffffffd394<s  8192@16,
( -8192)@16<=s L0x7fffffffd396,L0x7fffffffd396<s  8192@16,
( -8192)@16<=s L0x7fffffffd398,L0x7fffffffd398<s  8192@16,
( -8192)@16<=s L0x7fffffffd39a,L0x7fffffffd39a<s  8192@16,
( -8192)@16<=s L0x7fffffffd39c,L0x7fffffffd39c<s  8192@16,
( -8192)@16<=s L0x7fffffffd39e,L0x7fffffffd39e<s  8192@16,
( -8192)@16<=s L0x7fffffffd3a0,L0x7fffffffd3a0<s  8192@16,
( -8192)@16<=s L0x7fffffffd3a2,L0x7fffffffd3a2<s  8192@16,
( -8192)@16<=s L0x7fffffffd3a4,L0x7fffffffd3a4<s  8192@16,
( -8192)@16<=s L0x7fffffffd3a6,L0x7fffffffd3a6<s  8192@16,
( -8192)@16<=s L0x7fffffffd3a8,L0x7fffffffd3a8<s  8192@16,
( -8192)@16<=s L0x7fffffffd3aa,L0x7fffffffd3aa<s  8192@16,
( -8192)@16<=s L0x7fffffffd3ac,L0x7fffffffd3ac<s  8192@16,
( -8192)@16<=s L0x7fffffffd3ae,L0x7fffffffd3ae<s  8192@16,
( -8192)@16<=s L0x7fffffffd3b0,L0x7fffffffd3b0<s  8192@16,
( -8192)@16<=s L0x7fffffffd3b2,L0x7fffffffd3b2<s  8192@16,
( -8192)@16<=s L0x7fffffffd3b4,L0x7fffffffd3b4<s  8192@16,
( -8192)@16<=s L0x7fffffffd3b6,L0x7fffffffd3b6<s  8192@16,
( -8192)@16<=s L0x7fffffffd3b8,L0x7fffffffd3b8<s  8192@16,
( -8192)@16<=s L0x7fffffffd3ba,L0x7fffffffd3ba<s  8192@16,
( -8192)@16<=s L0x7fffffffd3bc,L0x7fffffffd3bc<s  8192@16,
( -8192)@16<=s L0x7fffffffd3be,L0x7fffffffd3be<s  8192@16,
( -8192)@16<=s L0x7fffffffd3c0,L0x7fffffffd3c0<s  8192@16,
( -8192)@16<=s L0x7fffffffd3c2,L0x7fffffffd3c2<s  8192@16,
( -8192)@16<=s L0x7fffffffd3c4,L0x7fffffffd3c4<s  8192@16,
( -8192)@16<=s L0x7fffffffd3c6,L0x7fffffffd3c6<s  8192@16,
( -8192)@16<=s L0x7fffffffd3c8,L0x7fffffffd3c8<s  8192@16,
( -8192)@16<=s L0x7fffffffd3ca,L0x7fffffffd3ca<s  8192@16,
( -8192)@16<=s L0x7fffffffd3cc,L0x7fffffffd3cc<s  8192@16,
( -8192)@16<=s L0x7fffffffd3ce,L0x7fffffffd3ce<s  8192@16,
( -8192)@16<=s L0x7fffffffd3d0,L0x7fffffffd3d0<s  8192@16,
( -8192)@16<=s L0x7fffffffd3d2,L0x7fffffffd3d2<s  8192@16,
( -8192)@16<=s L0x7fffffffd3d4,L0x7fffffffd3d4<s  8192@16,
( -8192)@16<=s L0x7fffffffd3d6,L0x7fffffffd3d6<s  8192@16,
( -8192)@16<=s L0x7fffffffd3d8,L0x7fffffffd3d8<s  8192@16,
( -6144)@16<=s L0x7fffffffd3da,L0x7fffffffd3da<s  6144@16,
( -6144)@16<=s L0x7fffffffd3dc,L0x7fffffffd3dc<s  6144@16,
( -6144)@16<=s L0x7fffffffd3de,L0x7fffffffd3de<s  6144@16
] prove with [ cuts [ 0 ] ];



(* vmovdqa (%rdi),%ymm4                            #! EA = L0x7fffffffd2e0; Value = 0x0000000100000000; PC = 0x555555557599 *)
mov ymm4_0 L0x7fffffffd2e0;
mov ymm4_1 L0x7fffffffd2e2;
mov ymm4_2 L0x7fffffffd2e4;
mov ymm4_3 L0x7fffffffd2e6;
mov ymm4_4 L0x7fffffffd2e8;
mov ymm4_5 L0x7fffffffd2ea;
mov ymm4_6 L0x7fffffffd2ec;
mov ymm4_7 L0x7fffffffd2ee;
mov ymm4_8 L0x7fffffffd2f0;
mov ymm4_9 L0x7fffffffd2f2;
mov ymm4_a L0x7fffffffd2f4;
mov ymm4_b L0x7fffffffd2f6;
mov ymm4_c L0x7fffffffd2f8;
mov ymm4_d L0x7fffffffd2fa;
mov ymm4_e L0x7fffffffd2fc;
mov ymm4_f L0x7fffffffd2fe;
(* vmovdqa 0x20(%rdi),%ymm5                        #! EA = L0x7fffffffd300; Value = 0x0000000000000000; PC = 0x55555555759d *)
mov ymm5_0 L0x7fffffffd300;
mov ymm5_1 L0x7fffffffd302;
mov ymm5_2 L0x7fffffffd304;
mov ymm5_3 L0x7fffffffd306;
mov ymm5_4 L0x7fffffffd308;
mov ymm5_5 L0x7fffffffd30a;
mov ymm5_6 L0x7fffffffd30c;
mov ymm5_7 L0x7fffffffd30e;
mov ymm5_8 L0x7fffffffd310;
mov ymm5_9 L0x7fffffffd312;
mov ymm5_a L0x7fffffffd314;
mov ymm5_b L0x7fffffffd316;
mov ymm5_c L0x7fffffffd318;
mov ymm5_d L0x7fffffffd31a;
mov ymm5_e L0x7fffffffd31c;
mov ymm5_f L0x7fffffffd31e;
(* vmovdqa 0x40(%rdi),%ymm6                        #! EA = L0x7fffffffd320; Value = 0x0000000000000000; PC = 0x5555555575a2 *)
mov ymm6_0 L0x7fffffffd320;
mov ymm6_1 L0x7fffffffd322;
mov ymm6_2 L0x7fffffffd324;
mov ymm6_3 L0x7fffffffd326;
mov ymm6_4 L0x7fffffffd328;
mov ymm6_5 L0x7fffffffd32a;
mov ymm6_6 L0x7fffffffd32c;
mov ymm6_7 L0x7fffffffd32e;
mov ymm6_8 L0x7fffffffd330;
mov ymm6_9 L0x7fffffffd332;
mov ymm6_a L0x7fffffffd334;
mov ymm6_b L0x7fffffffd336;
mov ymm6_c L0x7fffffffd338;
mov ymm6_d L0x7fffffffd33a;
mov ymm6_e L0x7fffffffd33c;
mov ymm6_f L0x7fffffffd33e;
(* vmovdqa 0x60(%rdi),%ymm7                        #! EA = L0x7fffffffd340; Value = 0x0000000000000000; PC = 0x5555555575a7 *)
mov ymm7_0 L0x7fffffffd340;
mov ymm7_1 L0x7fffffffd342;
mov ymm7_2 L0x7fffffffd344;
mov ymm7_3 L0x7fffffffd346;
mov ymm7_4 L0x7fffffffd348;
mov ymm7_5 L0x7fffffffd34a;
mov ymm7_6 L0x7fffffffd34c;
mov ymm7_7 L0x7fffffffd34e;
mov ymm7_8 L0x7fffffffd350;
mov ymm7_9 L0x7fffffffd352;
mov ymm7_a L0x7fffffffd354;
mov ymm7_b L0x7fffffffd356;
mov ymm7_c L0x7fffffffd358;
mov ymm7_d L0x7fffffffd35a;
mov ymm7_e L0x7fffffffd35c;
mov ymm7_f L0x7fffffffd35e;
(* vmovdqa 0x80(%rdi),%ymm8                        #! EA = L0x7fffffffd360; Value = 0x0000000000000000; PC = 0x5555555575ac *)
mov ymm8_0 L0x7fffffffd360;
mov ymm8_1 L0x7fffffffd362;
mov ymm8_2 L0x7fffffffd364;
mov ymm8_3 L0x7fffffffd366;
mov ymm8_4 L0x7fffffffd368;
mov ymm8_5 L0x7fffffffd36a;
mov ymm8_6 L0x7fffffffd36c;
mov ymm8_7 L0x7fffffffd36e;
mov ymm8_8 L0x7fffffffd370;
mov ymm8_9 L0x7fffffffd372;
mov ymm8_a L0x7fffffffd374;
mov ymm8_b L0x7fffffffd376;
mov ymm8_c L0x7fffffffd378;
mov ymm8_d L0x7fffffffd37a;
mov ymm8_e L0x7fffffffd37c;
mov ymm8_f L0x7fffffffd37e;
(* vmovdqa 0xa0(%rdi),%ymm9                        #! EA = L0x7fffffffd380; Value = 0x0000000000000000; PC = 0x5555555575b4 *)
mov ymm9_0 L0x7fffffffd380;
mov ymm9_1 L0x7fffffffd382;
mov ymm9_2 L0x7fffffffd384;
mov ymm9_3 L0x7fffffffd386;
mov ymm9_4 L0x7fffffffd388;
mov ymm9_5 L0x7fffffffd38a;
mov ymm9_6 L0x7fffffffd38c;
mov ymm9_7 L0x7fffffffd38e;
mov ymm9_8 L0x7fffffffd390;
mov ymm9_9 L0x7fffffffd392;
mov ymm9_a L0x7fffffffd394;
mov ymm9_b L0x7fffffffd396;
mov ymm9_c L0x7fffffffd398;
mov ymm9_d L0x7fffffffd39a;
mov ymm9_e L0x7fffffffd39c;
mov ymm9_f L0x7fffffffd39e;
(* vmovdqa 0xc0(%rdi),%ymm10                       #! EA = L0x7fffffffd3a0; Value = 0x0000000000000000; PC = 0x5555555575bc *)
mov ymm10_0 L0x7fffffffd3a0;
mov ymm10_1 L0x7fffffffd3a2;
mov ymm10_2 L0x7fffffffd3a4;
mov ymm10_3 L0x7fffffffd3a6;
mov ymm10_4 L0x7fffffffd3a8;
mov ymm10_5 L0x7fffffffd3aa;
mov ymm10_6 L0x7fffffffd3ac;
mov ymm10_7 L0x7fffffffd3ae;
mov ymm10_8 L0x7fffffffd3b0;
mov ymm10_9 L0x7fffffffd3b2;
mov ymm10_a L0x7fffffffd3b4;
mov ymm10_b L0x7fffffffd3b6;
mov ymm10_c L0x7fffffffd3b8;
mov ymm10_d L0x7fffffffd3ba;
mov ymm10_e L0x7fffffffd3bc;
mov ymm10_f L0x7fffffffd3be;
(* vmovdqa 0xe0(%rdi),%ymm11                       #! EA = L0x7fffffffd3c0; Value = 0x0000000000000000; PC = 0x5555555575c4 *)
mov ymm11_0 L0x7fffffffd3c0;
mov ymm11_1 L0x7fffffffd3c2;
mov ymm11_2 L0x7fffffffd3c4;
mov ymm11_3 L0x7fffffffd3c6;
mov ymm11_4 L0x7fffffffd3c8;
mov ymm11_5 L0x7fffffffd3ca;
mov ymm11_6 L0x7fffffffd3cc;
mov ymm11_7 L0x7fffffffd3ce;
mov ymm11_8 L0x7fffffffd3d0;
mov ymm11_9 L0x7fffffffd3d2;
mov ymm11_a L0x7fffffffd3d4;
mov ymm11_b L0x7fffffffd3d6;
mov ymm11_c L0x7fffffffd3d8;
mov ymm11_d L0x7fffffffd3da;
mov ymm11_e L0x7fffffffd3dc;
mov ymm11_f L0x7fffffffd3de;
(* vpaddw %ymm8,%ymm4,%ymm3                        #! PC = 0x5555555575cc *)
add ymm3_0 ymm4_0 ymm8_0;
add ymm3_1 ymm4_1 ymm8_1;
add ymm3_2 ymm4_2 ymm8_2;
add ymm3_3 ymm4_3 ymm8_3;
add ymm3_4 ymm4_4 ymm8_4;
add ymm3_5 ymm4_5 ymm8_5;
add ymm3_6 ymm4_6 ymm8_6;
add ymm3_7 ymm4_7 ymm8_7;
add ymm3_8 ymm4_8 ymm8_8;
add ymm3_9 ymm4_9 ymm8_9;
add ymm3_a ymm4_a ymm8_a;
add ymm3_b ymm4_b ymm8_b;
add ymm3_c ymm4_c ymm8_c;
add ymm3_d ymm4_d ymm8_d;
add ymm3_e ymm4_e ymm8_e;
add ymm3_f ymm4_f ymm8_f;
(* vpsubw %ymm8,%ymm4,%ymm8                        #! PC = 0x5555555575d1 *)
sub ymm8_0 ymm4_0 ymm8_0;
sub ymm8_1 ymm4_1 ymm8_1;
sub ymm8_2 ymm4_2 ymm8_2;
sub ymm8_3 ymm4_3 ymm8_3;
sub ymm8_4 ymm4_4 ymm8_4;
sub ymm8_5 ymm4_5 ymm8_5;
sub ymm8_6 ymm4_6 ymm8_6;
sub ymm8_7 ymm4_7 ymm8_7;
sub ymm8_8 ymm4_8 ymm8_8;
sub ymm8_9 ymm4_9 ymm8_9;
sub ymm8_a ymm4_a ymm8_a;
sub ymm8_b ymm4_b ymm8_b;
sub ymm8_c ymm4_c ymm8_c;
sub ymm8_d ymm4_d ymm8_d;
sub ymm8_e ymm4_e ymm8_e;
sub ymm8_f ymm4_f ymm8_f;
(* vpaddw %ymm9,%ymm5,%ymm4                        #! PC = 0x5555555575d6 *)
add ymm4_0 ymm5_0 ymm9_0;
add ymm4_1 ymm5_1 ymm9_1;
add ymm4_2 ymm5_2 ymm9_2;
add ymm4_3 ymm5_3 ymm9_3;
add ymm4_4 ymm5_4 ymm9_4;
add ymm4_5 ymm5_5 ymm9_5;
add ymm4_6 ymm5_6 ymm9_6;
add ymm4_7 ymm5_7 ymm9_7;
add ymm4_8 ymm5_8 ymm9_8;
add ymm4_9 ymm5_9 ymm9_9;
add ymm4_a ymm5_a ymm9_a;
add ymm4_b ymm5_b ymm9_b;
add ymm4_c ymm5_c ymm9_c;
add ymm4_d ymm5_d ymm9_d;
add ymm4_e ymm5_e ymm9_e;
add ymm4_f ymm5_f ymm9_f;
(* vpsubw %ymm9,%ymm5,%ymm9                        #! PC = 0x5555555575db *)
sub ymm9_0 ymm5_0 ymm9_0;
sub ymm9_1 ymm5_1 ymm9_1;
sub ymm9_2 ymm5_2 ymm9_2;
sub ymm9_3 ymm5_3 ymm9_3;
sub ymm9_4 ymm5_4 ymm9_4;
sub ymm9_5 ymm5_5 ymm9_5;
sub ymm9_6 ymm5_6 ymm9_6;
sub ymm9_7 ymm5_7 ymm9_7;
sub ymm9_8 ymm5_8 ymm9_8;
sub ymm9_9 ymm5_9 ymm9_9;
sub ymm9_a ymm5_a ymm9_a;
sub ymm9_b ymm5_b ymm9_b;
sub ymm9_c ymm5_c ymm9_c;
sub ymm9_d ymm5_d ymm9_d;
sub ymm9_e ymm5_e ymm9_e;
sub ymm9_f ymm5_f ymm9_f;
(* vpaddw %ymm10,%ymm6,%ymm5                       #! PC = 0x5555555575e0 *)
add ymm5_0 ymm6_0 ymm10_0;
add ymm5_1 ymm6_1 ymm10_1;
add ymm5_2 ymm6_2 ymm10_2;
add ymm5_3 ymm6_3 ymm10_3;
add ymm5_4 ymm6_4 ymm10_4;
add ymm5_5 ymm6_5 ymm10_5;
add ymm5_6 ymm6_6 ymm10_6;
add ymm5_7 ymm6_7 ymm10_7;
add ymm5_8 ymm6_8 ymm10_8;
add ymm5_9 ymm6_9 ymm10_9;
add ymm5_a ymm6_a ymm10_a;
add ymm5_b ymm6_b ymm10_b;
add ymm5_c ymm6_c ymm10_c;
add ymm5_d ymm6_d ymm10_d;
add ymm5_e ymm6_e ymm10_e;
add ymm5_f ymm6_f ymm10_f;
(* vpsubw %ymm10,%ymm6,%ymm10                      #! PC = 0x5555555575e5 *)
sub ymm10_0 ymm6_0 ymm10_0;
sub ymm10_1 ymm6_1 ymm10_1;
sub ymm10_2 ymm6_2 ymm10_2;
sub ymm10_3 ymm6_3 ymm10_3;
sub ymm10_4 ymm6_4 ymm10_4;
sub ymm10_5 ymm6_5 ymm10_5;
sub ymm10_6 ymm6_6 ymm10_6;
sub ymm10_7 ymm6_7 ymm10_7;
sub ymm10_8 ymm6_8 ymm10_8;
sub ymm10_9 ymm6_9 ymm10_9;
sub ymm10_a ymm6_a ymm10_a;
sub ymm10_b ymm6_b ymm10_b;
sub ymm10_c ymm6_c ymm10_c;
sub ymm10_d ymm6_d ymm10_d;
sub ymm10_e ymm6_e ymm10_e;
sub ymm10_f ymm6_f ymm10_f;
(* vpaddw %ymm11,%ymm7,%ymm6                       #! PC = 0x5555555575ea *)
add ymm6_0 ymm7_0 ymm11_0;
add ymm6_1 ymm7_1 ymm11_1;
add ymm6_2 ymm7_2 ymm11_2;
add ymm6_3 ymm7_3 ymm11_3;
add ymm6_4 ymm7_4 ymm11_4;
add ymm6_5 ymm7_5 ymm11_5;
add ymm6_6 ymm7_6 ymm11_6;
add ymm6_7 ymm7_7 ymm11_7;
add ymm6_8 ymm7_8 ymm11_8;
add ymm6_9 ymm7_9 ymm11_9;
add ymm6_a ymm7_a ymm11_a;
add ymm6_b ymm7_b ymm11_b;
add ymm6_c ymm7_c ymm11_c;
add ymm6_d ymm7_d ymm11_d;
add ymm6_e ymm7_e ymm11_e;
add ymm6_f ymm7_f ymm11_f;
(* vpsubw %ymm11,%ymm7,%ymm11                      #! PC = 0x5555555575ef *)
sub ymm11_0 ymm7_0 ymm11_0;
sub ymm11_1 ymm7_1 ymm11_1;
sub ymm11_2 ymm7_2 ymm11_2;
sub ymm11_3 ymm7_3 ymm11_3;
sub ymm11_4 ymm7_4 ymm11_4;
sub ymm11_5 ymm7_5 ymm11_5;
sub ymm11_6 ymm7_6 ymm11_6;
sub ymm11_7 ymm7_7 ymm11_7;
sub ymm11_8 ymm7_8 ymm11_8;
sub ymm11_9 ymm7_9 ymm11_9;
sub ymm11_a ymm7_a ymm11_a;
sub ymm11_b ymm7_b ymm11_b;
sub ymm11_c ymm7_c ymm11_c;
sub ymm11_d ymm7_d ymm11_d;
sub ymm11_e ymm7_e ymm11_e;
sub ymm11_f ymm7_f ymm11_f;
(* vpbroadcastw 0x102(%rdx),%ymm1                  #! EA = L0x555555561222; Value = 0x276d0198f85c6adf; PC = 0x5555555575f4 *)
mov ymm1_0 L0x555555561222;
mov ymm1_1 L0x555555561222;
mov ymm1_2 L0x555555561222;
mov ymm1_3 L0x555555561222;
mov ymm1_4 L0x555555561222;
mov ymm1_5 L0x555555561222;
mov ymm1_6 L0x555555561222;
mov ymm1_7 L0x555555561222;
mov ymm1_8 L0x555555561222;
mov ymm1_9 L0x555555561222;
mov ymm1_a L0x555555561222;
mov ymm1_b L0x555555561222;
mov ymm1_c L0x555555561222;
mov ymm1_d L0x555555561222;
mov ymm1_e L0x555555561222;
mov ymm1_f L0x555555561222;
(* vpbroadcastw 0x302(%rdx),%ymm2                  #! EA = L0x555555561422; Value = 0x096df198105c00df; PC = 0x5555555575fd *)
mov ymm2_0 L0x555555561422;
mov ymm2_1 L0x555555561422;
mov ymm2_2 L0x555555561422;
mov ymm2_3 L0x555555561422;
mov ymm2_4 L0x555555561422;
mov ymm2_5 L0x555555561422;
mov ymm2_6 L0x555555561422;
mov ymm2_7 L0x555555561422;
mov ymm2_8 L0x555555561422;
mov ymm2_9 L0x555555561422;
mov ymm2_a L0x555555561422;
mov ymm2_b L0x555555561422;
mov ymm2_c L0x555555561422;
mov ymm2_d L0x555555561422;
mov ymm2_e L0x555555561422;
mov ymm2_f L0x555555561422;
(* vpmullw %ymm1,%ymm10,%ymm7                      #! PC = 0x555555557606 *)
smull mulHymm10_0 mulL_0 ymm1_0 ymm10_0;
smull mulHymm10_1 mulL_1 ymm1_1 ymm10_1;
smull mulHymm10_2 mulL_2 ymm1_2 ymm10_2;
smull mulHymm10_3 mulL_3 ymm1_3 ymm10_3;
smull mulHymm10_4 mulL_4 ymm1_4 ymm10_4;
smull mulHymm10_5 mulL_5 ymm1_5 ymm10_5;
smull mulHymm10_6 mulL_6 ymm1_6 ymm10_6;
smull mulHymm10_7 mulL_7 ymm1_7 ymm10_7;
smull mulHymm10_8 mulL_8 ymm1_8 ymm10_8;
smull mulHymm10_9 mulL_9 ymm1_9 ymm10_9;
smull mulHymm10_a mulL_a ymm1_a ymm10_a;
smull mulHymm10_b mulL_b ymm1_b ymm10_b;
smull mulHymm10_c mulL_c ymm1_c ymm10_c;
smull mulHymm10_d mulL_d ymm1_d ymm10_d;
smull mulHymm10_e mulL_e ymm1_e ymm10_e;
smull mulHymm10_f mulL_f ymm1_f ymm10_f;
cast ymm7_0@sint16 mulL_0;
cast ymm7_1@sint16 mulL_1;
cast ymm7_2@sint16 mulL_2;
cast ymm7_3@sint16 mulL_3;
cast ymm7_4@sint16 mulL_4;
cast ymm7_5@sint16 mulL_5;
cast ymm7_6@sint16 mulL_6;
cast ymm7_7@sint16 mulL_7;
cast ymm7_8@sint16 mulL_8;
cast ymm7_9@sint16 mulL_9;
cast ymm7_a@sint16 mulL_a;
cast ymm7_b@sint16 mulL_b;
cast ymm7_c@sint16 mulL_c;
cast ymm7_d@sint16 mulL_d;
cast ymm7_e@sint16 mulL_e;
cast ymm7_f@sint16 mulL_f;
(* vpmulhw %ymm2,%ymm10,%ymm10                     #! PC = 0x55555555760a *)
smull mulH_0 mulLymm10_0 ymm10_0 ymm2_0;
smull mulH_1 mulLymm10_1 ymm10_1 ymm2_1;
smull mulH_2 mulLymm10_2 ymm10_2 ymm2_2;
smull mulH_3 mulLymm10_3 ymm10_3 ymm2_3;
smull mulH_4 mulLymm10_4 ymm10_4 ymm2_4;
smull mulH_5 mulLymm10_5 ymm10_5 ymm2_5;
smull mulH_6 mulLymm10_6 ymm10_6 ymm2_6;
smull mulH_7 mulLymm10_7 ymm10_7 ymm2_7;
smull mulH_8 mulLymm10_8 ymm10_8 ymm2_8;
smull mulH_9 mulLymm10_9 ymm10_9 ymm2_9;
smull mulH_a mulLymm10_a ymm10_a ymm2_a;
smull mulH_b mulLymm10_b ymm10_b ymm2_b;
smull mulH_c mulLymm10_c ymm10_c ymm2_c;
smull mulH_d mulLymm10_d ymm10_d ymm2_d;
smull mulH_e mulLymm10_e ymm10_e ymm2_e;
smull mulH_f mulLymm10_f ymm10_f ymm2_f;
mov ymm10_0 mulH_0;
mov ymm10_1 mulH_1;
mov ymm10_2 mulH_2;
mov ymm10_3 mulH_3;
mov ymm10_4 mulH_4;
mov ymm10_5 mulH_5;
mov ymm10_6 mulH_6;
mov ymm10_7 mulH_7;
mov ymm10_8 mulH_8;
mov ymm10_9 mulH_9;
mov ymm10_a mulH_a;
mov ymm10_b mulH_b;
mov ymm10_c mulH_c;
mov ymm10_d mulH_d;
mov ymm10_e mulH_e;
mov ymm10_f mulH_f;
(* vpmulhw %ymm0,%ymm7,%ymm7                       #! PC = 0x55555555760e *)
smull mulH_0 red_0 ymm7_0 ymm0_0;
assert true && red_0 = mulLymm10_0;
assume red_0 = mulLymm10_0 && true;
smull mulH_1 red_1 ymm7_1 ymm0_1;
assert true && red_1 = mulLymm10_1;
assume red_1 = mulLymm10_1 && true;
smull mulH_2 red_2 ymm7_2 ymm0_2;
assert true && red_2 = mulLymm10_2;
assume red_2 = mulLymm10_2 && true;
smull mulH_3 red_3 ymm7_3 ymm0_3;
assert true && red_3 = mulLymm10_3;
assume red_3 = mulLymm10_3 && true;
smull mulH_4 red_4 ymm7_4 ymm0_4;
assert true && red_4 = mulLymm10_4;
assume red_4 = mulLymm10_4 && true;
smull mulH_5 red_5 ymm7_5 ymm0_5;
assert true && red_5 = mulLymm10_5;
assume red_5 = mulLymm10_5 && true;
smull mulH_6 red_6 ymm7_6 ymm0_6;
assert true && red_6 = mulLymm10_6;
assume red_6 = mulLymm10_6 && true;
smull mulH_7 red_7 ymm7_7 ymm0_7;
assert true && red_7 = mulLymm10_7;
assume red_7 = mulLymm10_7 && true;
smull mulH_8 red_8 ymm7_8 ymm0_8;
assert true && red_8 = mulLymm10_8;
assume red_8 = mulLymm10_8 && true;
smull mulH_9 red_9 ymm7_9 ymm0_9;
assert true && red_9 = mulLymm10_9;
assume red_9 = mulLymm10_9 && true;
smull mulH_a red_a ymm7_a ymm0_a;
assert true && red_a = mulLymm10_a;
assume red_a = mulLymm10_a && true;
smull mulH_b red_b ymm7_b ymm0_b;
assert true && red_b = mulLymm10_b;
assume red_b = mulLymm10_b && true;
smull mulH_c red_c ymm7_c ymm0_c;
assert true && red_c = mulLymm10_c;
assume red_c = mulLymm10_c && true;
smull mulH_d red_d ymm7_d ymm0_d;
assert true && red_d = mulLymm10_d;
assume red_d = mulLymm10_d && true;
smull mulH_e red_e ymm7_e ymm0_e;
assert true && red_e = mulLymm10_e;
assume red_e = mulLymm10_e && true;
smull mulH_f red_f ymm7_f ymm0_f;
assert true && red_f = mulLymm10_f;
assume red_f = mulLymm10_f && true;
mov ymm7_0 mulH_0;
mov ymm7_1 mulH_1;
mov ymm7_2 mulH_2;
mov ymm7_3 mulH_3;
mov ymm7_4 mulH_4;
mov ymm7_5 mulH_5;
mov ymm7_6 mulH_6;
mov ymm7_7 mulH_7;
mov ymm7_8 mulH_8;
mov ymm7_9 mulH_9;
mov ymm7_a mulH_a;
mov ymm7_b mulH_b;
mov ymm7_c mulH_c;
mov ymm7_d mulH_d;
mov ymm7_e mulH_e;
mov ymm7_f mulH_f;
(* vpsubw %ymm7,%ymm10,%ymm10                      #! PC = 0x555555557612 *)
sub ymm10_0 ymm10_0 ymm7_0;
sub ymm10_1 ymm10_1 ymm7_1;
sub ymm10_2 ymm10_2 ymm7_2;
sub ymm10_3 ymm10_3 ymm7_3;
sub ymm10_4 ymm10_4 ymm7_4;
sub ymm10_5 ymm10_5 ymm7_5;
sub ymm10_6 ymm10_6 ymm7_6;
sub ymm10_7 ymm10_7 ymm7_7;
sub ymm10_8 ymm10_8 ymm7_8;
sub ymm10_9 ymm10_9 ymm7_9;
sub ymm10_a ymm10_a ymm7_a;
sub ymm10_b ymm10_b ymm7_b;
sub ymm10_c ymm10_c ymm7_c;
sub ymm10_d ymm10_d ymm7_d;
sub ymm10_e ymm10_e ymm7_e;
sub ymm10_f ymm10_f ymm7_f;
(* vpmullw %ymm1,%ymm11,%ymm7                      #! PC = 0x555555557616 *)
smull mulHymm11_0 mulL_0 ymm1_0 ymm11_0;
smull mulHymm11_1 mulL_1 ymm1_1 ymm11_1;
smull mulHymm11_2 mulL_2 ymm1_2 ymm11_2;
smull mulHymm11_3 mulL_3 ymm1_3 ymm11_3;
smull mulHymm11_4 mulL_4 ymm1_4 ymm11_4;
smull mulHymm11_5 mulL_5 ymm1_5 ymm11_5;
smull mulHymm11_6 mulL_6 ymm1_6 ymm11_6;
smull mulHymm11_7 mulL_7 ymm1_7 ymm11_7;
smull mulHymm11_8 mulL_8 ymm1_8 ymm11_8;
smull mulHymm11_9 mulL_9 ymm1_9 ymm11_9;
smull mulHymm11_a mulL_a ymm1_a ymm11_a;
smull mulHymm11_b mulL_b ymm1_b ymm11_b;
smull mulHymm11_c mulL_c ymm1_c ymm11_c;
smull mulHymm11_d mulL_d ymm1_d ymm11_d;
smull mulHymm11_e mulL_e ymm1_e ymm11_e;
smull mulHymm11_f mulL_f ymm1_f ymm11_f;
cast ymm7_0@sint16 mulL_0;
cast ymm7_1@sint16 mulL_1;
cast ymm7_2@sint16 mulL_2;
cast ymm7_3@sint16 mulL_3;
cast ymm7_4@sint16 mulL_4;
cast ymm7_5@sint16 mulL_5;
cast ymm7_6@sint16 mulL_6;
cast ymm7_7@sint16 mulL_7;
cast ymm7_8@sint16 mulL_8;
cast ymm7_9@sint16 mulL_9;
cast ymm7_a@sint16 mulL_a;
cast ymm7_b@sint16 mulL_b;
cast ymm7_c@sint16 mulL_c;
cast ymm7_d@sint16 mulL_d;
cast ymm7_e@sint16 mulL_e;
cast ymm7_f@sint16 mulL_f;
(* vpmulhw %ymm2,%ymm11,%ymm11                     #! PC = 0x55555555761a *)
smull mulH_0 mulLymm11_0 ymm11_0 ymm2_0;
smull mulH_1 mulLymm11_1 ymm11_1 ymm2_1;
smull mulH_2 mulLymm11_2 ymm11_2 ymm2_2;
smull mulH_3 mulLymm11_3 ymm11_3 ymm2_3;
smull mulH_4 mulLymm11_4 ymm11_4 ymm2_4;
smull mulH_5 mulLymm11_5 ymm11_5 ymm2_5;
smull mulH_6 mulLymm11_6 ymm11_6 ymm2_6;
smull mulH_7 mulLymm11_7 ymm11_7 ymm2_7;
smull mulH_8 mulLymm11_8 ymm11_8 ymm2_8;
smull mulH_9 mulLymm11_9 ymm11_9 ymm2_9;
smull mulH_a mulLymm11_a ymm11_a ymm2_a;
smull mulH_b mulLymm11_b ymm11_b ymm2_b;
smull mulH_c mulLymm11_c ymm11_c ymm2_c;
smull mulH_d mulLymm11_d ymm11_d ymm2_d;
smull mulH_e mulLymm11_e ymm11_e ymm2_e;
smull mulH_f mulLymm11_f ymm11_f ymm2_f;
mov ymm11_0 mulH_0;
mov ymm11_1 mulH_1;
mov ymm11_2 mulH_2;
mov ymm11_3 mulH_3;
mov ymm11_4 mulH_4;
mov ymm11_5 mulH_5;
mov ymm11_6 mulH_6;
mov ymm11_7 mulH_7;
mov ymm11_8 mulH_8;
mov ymm11_9 mulH_9;
mov ymm11_a mulH_a;
mov ymm11_b mulH_b;
mov ymm11_c mulH_c;
mov ymm11_d mulH_d;
mov ymm11_e mulH_e;
mov ymm11_f mulH_f;
(* vpmulhw %ymm0,%ymm7,%ymm7                       #! PC = 0x55555555761e *)
smull mulH_0 red_0 ymm7_0 ymm0_0;
assert true && red_0 = mulLymm11_0;
assume red_0 = mulLymm11_0 && true;
smull mulH_1 red_1 ymm7_1 ymm0_1;
assert true && red_1 = mulLymm11_1;
assume red_1 = mulLymm11_1 && true;
smull mulH_2 red_2 ymm7_2 ymm0_2;
assert true && red_2 = mulLymm11_2;
assume red_2 = mulLymm11_2 && true;
smull mulH_3 red_3 ymm7_3 ymm0_3;
assert true && red_3 = mulLymm11_3;
assume red_3 = mulLymm11_3 && true;
smull mulH_4 red_4 ymm7_4 ymm0_4;
assert true && red_4 = mulLymm11_4;
assume red_4 = mulLymm11_4 && true;
smull mulH_5 red_5 ymm7_5 ymm0_5;
assert true && red_5 = mulLymm11_5;
assume red_5 = mulLymm11_5 && true;
smull mulH_6 red_6 ymm7_6 ymm0_6;
assert true && red_6 = mulLymm11_6;
assume red_6 = mulLymm11_6 && true;
smull mulH_7 red_7 ymm7_7 ymm0_7;
assert true && red_7 = mulLymm11_7;
assume red_7 = mulLymm11_7 && true;
smull mulH_8 red_8 ymm7_8 ymm0_8;
assert true && red_8 = mulLymm11_8;
assume red_8 = mulLymm11_8 && true;
smull mulH_9 red_9 ymm7_9 ymm0_9;
assert true && red_9 = mulLymm11_9;
assume red_9 = mulLymm11_9 && true;
smull mulH_a red_a ymm7_a ymm0_a;
assert true && red_a = mulLymm11_a;
assume red_a = mulLymm11_a && true;
smull mulH_b red_b ymm7_b ymm0_b;
assert true && red_b = mulLymm11_b;
assume red_b = mulLymm11_b && true;
smull mulH_c red_c ymm7_c ymm0_c;
assert true && red_c = mulLymm11_c;
assume red_c = mulLymm11_c && true;
smull mulH_d red_d ymm7_d ymm0_d;
assert true && red_d = mulLymm11_d;
assume red_d = mulLymm11_d && true;
smull mulH_e red_e ymm7_e ymm0_e;
assert true && red_e = mulLymm11_e;
assume red_e = mulLymm11_e && true;
smull mulH_f red_f ymm7_f ymm0_f;
assert true && red_f = mulLymm11_f;
assume red_f = mulLymm11_f && true;
mov ymm7_0 mulH_0;
mov ymm7_1 mulH_1;
mov ymm7_2 mulH_2;
mov ymm7_3 mulH_3;
mov ymm7_4 mulH_4;
mov ymm7_5 mulH_5;
mov ymm7_6 mulH_6;
mov ymm7_7 mulH_7;
mov ymm7_8 mulH_8;
mov ymm7_9 mulH_9;
mov ymm7_a mulH_a;
mov ymm7_b mulH_b;
mov ymm7_c mulH_c;
mov ymm7_d mulH_d;
mov ymm7_e mulH_e;
mov ymm7_f mulH_f;
(* vpsubw %ymm7,%ymm11,%ymm11                      #! PC = 0x555555557622 *)
sub ymm11_0 ymm11_0 ymm7_0;
sub ymm11_1 ymm11_1 ymm7_1;
sub ymm11_2 ymm11_2 ymm7_2;
sub ymm11_3 ymm11_3 ymm7_3;
sub ymm11_4 ymm11_4 ymm7_4;
sub ymm11_5 ymm11_5 ymm7_5;
sub ymm11_6 ymm11_6 ymm7_6;
sub ymm11_7 ymm11_7 ymm7_7;
sub ymm11_8 ymm11_8 ymm7_8;
sub ymm11_9 ymm11_9 ymm7_9;
sub ymm11_a ymm11_a ymm7_a;
sub ymm11_b ymm11_b ymm7_b;
sub ymm11_c ymm11_c ymm7_c;
sub ymm11_d ymm11_d ymm7_d;
sub ymm11_e ymm11_e ymm7_e;
sub ymm11_f ymm11_f ymm7_f;
(* vpaddw %ymm5,%ymm3,%ymm7                        #! PC = 0x555555557626 *)
add ymm7_0 ymm3_0 ymm5_0;
add ymm7_1 ymm3_1 ymm5_1;
add ymm7_2 ymm3_2 ymm5_2;
add ymm7_3 ymm3_3 ymm5_3;
add ymm7_4 ymm3_4 ymm5_4;
add ymm7_5 ymm3_5 ymm5_5;
add ymm7_6 ymm3_6 ymm5_6;
add ymm7_7 ymm3_7 ymm5_7;
add ymm7_8 ymm3_8 ymm5_8;
add ymm7_9 ymm3_9 ymm5_9;
add ymm7_a ymm3_a ymm5_a;
add ymm7_b ymm3_b ymm5_b;
add ymm7_c ymm3_c ymm5_c;
add ymm7_d ymm3_d ymm5_d;
add ymm7_e ymm3_e ymm5_e;
add ymm7_f ymm3_f ymm5_f;
(* vpsubw %ymm5,%ymm3,%ymm5                        #! PC = 0x55555555762a *)
sub ymm5_0 ymm3_0 ymm5_0;
sub ymm5_1 ymm3_1 ymm5_1;
sub ymm5_2 ymm3_2 ymm5_2;
sub ymm5_3 ymm3_3 ymm5_3;
sub ymm5_4 ymm3_4 ymm5_4;
sub ymm5_5 ymm3_5 ymm5_5;
sub ymm5_6 ymm3_6 ymm5_6;
sub ymm5_7 ymm3_7 ymm5_7;
sub ymm5_8 ymm3_8 ymm5_8;
sub ymm5_9 ymm3_9 ymm5_9;
sub ymm5_a ymm3_a ymm5_a;
sub ymm5_b ymm3_b ymm5_b;
sub ymm5_c ymm3_c ymm5_c;
sub ymm5_d ymm3_d ymm5_d;
sub ymm5_e ymm3_e ymm5_e;
sub ymm5_f ymm3_f ymm5_f;
(* vpaddw %ymm6,%ymm4,%ymm3                        #! PC = 0x55555555762e *)
add ymm3_0 ymm4_0 ymm6_0;
add ymm3_1 ymm4_1 ymm6_1;
add ymm3_2 ymm4_2 ymm6_2;
add ymm3_3 ymm4_3 ymm6_3;
add ymm3_4 ymm4_4 ymm6_4;
add ymm3_5 ymm4_5 ymm6_5;
add ymm3_6 ymm4_6 ymm6_6;
add ymm3_7 ymm4_7 ymm6_7;
add ymm3_8 ymm4_8 ymm6_8;
add ymm3_9 ymm4_9 ymm6_9;
add ymm3_a ymm4_a ymm6_a;
add ymm3_b ymm4_b ymm6_b;
add ymm3_c ymm4_c ymm6_c;
add ymm3_d ymm4_d ymm6_d;
add ymm3_e ymm4_e ymm6_e;
add ymm3_f ymm4_f ymm6_f;
(* vpsubw %ymm6,%ymm4,%ymm6                        #! PC = 0x555555557632 *)
sub ymm6_0 ymm4_0 ymm6_0;
sub ymm6_1 ymm4_1 ymm6_1;
sub ymm6_2 ymm4_2 ymm6_2;
sub ymm6_3 ymm4_3 ymm6_3;
sub ymm6_4 ymm4_4 ymm6_4;
sub ymm6_5 ymm4_5 ymm6_5;
sub ymm6_6 ymm4_6 ymm6_6;
sub ymm6_7 ymm4_7 ymm6_7;
sub ymm6_8 ymm4_8 ymm6_8;
sub ymm6_9 ymm4_9 ymm6_9;
sub ymm6_a ymm4_a ymm6_a;
sub ymm6_b ymm4_b ymm6_b;
sub ymm6_c ymm4_c ymm6_c;
sub ymm6_d ymm4_d ymm6_d;
sub ymm6_e ymm4_e ymm6_e;
sub ymm6_f ymm4_f ymm6_f;
(* vpaddw %ymm10,%ymm8,%ymm4                       #! PC = 0x555555557636 *)
add ymm4_0 ymm8_0 ymm10_0;
add ymm4_1 ymm8_1 ymm10_1;
add ymm4_2 ymm8_2 ymm10_2;
add ymm4_3 ymm8_3 ymm10_3;
add ymm4_4 ymm8_4 ymm10_4;
add ymm4_5 ymm8_5 ymm10_5;
add ymm4_6 ymm8_6 ymm10_6;
add ymm4_7 ymm8_7 ymm10_7;
add ymm4_8 ymm8_8 ymm10_8;
add ymm4_9 ymm8_9 ymm10_9;
add ymm4_a ymm8_a ymm10_a;
add ymm4_b ymm8_b ymm10_b;
add ymm4_c ymm8_c ymm10_c;
add ymm4_d ymm8_d ymm10_d;
add ymm4_e ymm8_e ymm10_e;
add ymm4_f ymm8_f ymm10_f;
(* vpsubw %ymm10,%ymm8,%ymm10                      #! PC = 0x55555555763b *)
sub ymm10_0 ymm8_0 ymm10_0;
sub ymm10_1 ymm8_1 ymm10_1;
sub ymm10_2 ymm8_2 ymm10_2;
sub ymm10_3 ymm8_3 ymm10_3;
sub ymm10_4 ymm8_4 ymm10_4;
sub ymm10_5 ymm8_5 ymm10_5;
sub ymm10_6 ymm8_6 ymm10_6;
sub ymm10_7 ymm8_7 ymm10_7;
sub ymm10_8 ymm8_8 ymm10_8;
sub ymm10_9 ymm8_9 ymm10_9;
sub ymm10_a ymm8_a ymm10_a;
sub ymm10_b ymm8_b ymm10_b;
sub ymm10_c ymm8_c ymm10_c;
sub ymm10_d ymm8_d ymm10_d;
sub ymm10_e ymm8_e ymm10_e;
sub ymm10_f ymm8_f ymm10_f;
(* vpaddw %ymm11,%ymm9,%ymm8                       #! PC = 0x555555557640 *)
add ymm8_0 ymm9_0 ymm11_0;
add ymm8_1 ymm9_1 ymm11_1;
add ymm8_2 ymm9_2 ymm11_2;
add ymm8_3 ymm9_3 ymm11_3;
add ymm8_4 ymm9_4 ymm11_4;
add ymm8_5 ymm9_5 ymm11_5;
add ymm8_6 ymm9_6 ymm11_6;
add ymm8_7 ymm9_7 ymm11_7;
add ymm8_8 ymm9_8 ymm11_8;
add ymm8_9 ymm9_9 ymm11_9;
add ymm8_a ymm9_a ymm11_a;
add ymm8_b ymm9_b ymm11_b;
add ymm8_c ymm9_c ymm11_c;
add ymm8_d ymm9_d ymm11_d;
add ymm8_e ymm9_e ymm11_e;
add ymm8_f ymm9_f ymm11_f;
(* vpsubw %ymm11,%ymm9,%ymm11                      #! PC = 0x555555557645 *)
sub ymm11_0 ymm9_0 ymm11_0;
sub ymm11_1 ymm9_1 ymm11_1;
sub ymm11_2 ymm9_2 ymm11_2;
sub ymm11_3 ymm9_3 ymm11_3;
sub ymm11_4 ymm9_4 ymm11_4;
sub ymm11_5 ymm9_5 ymm11_5;
sub ymm11_6 ymm9_6 ymm11_6;
sub ymm11_7 ymm9_7 ymm11_7;
sub ymm11_8 ymm9_8 ymm11_8;
sub ymm11_9 ymm9_9 ymm11_9;
sub ymm11_a ymm9_a ymm11_a;
sub ymm11_b ymm9_b ymm11_b;
sub ymm11_c ymm9_c ymm11_c;
sub ymm11_d ymm9_d ymm11_d;
sub ymm11_e ymm9_e ymm11_e;
sub ymm11_f ymm9_f ymm11_f;
(* vpmullw %ymm14,%ymm3,%ymm9                      #! PC = 0x55555555764a *)
smull mulHymm3_0 mulL_0 ymm14_0 ymm3_0;
smull mulHymm3_1 mulL_1 ymm14_1 ymm3_1;
smull mulHymm3_2 mulL_2 ymm14_2 ymm3_2;
smull mulHymm3_3 mulL_3 ymm14_3 ymm3_3;
smull mulHymm3_4 mulL_4 ymm14_4 ymm3_4;
smull mulHymm3_5 mulL_5 ymm14_5 ymm3_5;
smull mulHymm3_6 mulL_6 ymm14_6 ymm3_6;
smull mulHymm3_7 mulL_7 ymm14_7 ymm3_7;
smull mulHymm3_8 mulL_8 ymm14_8 ymm3_8;
smull mulHymm3_9 mulL_9 ymm14_9 ymm3_9;
smull mulHymm3_a mulL_a ymm14_a ymm3_a;
smull mulHymm3_b mulL_b ymm14_b ymm3_b;
smull mulHymm3_c mulL_c ymm14_c ymm3_c;
smull mulHymm3_d mulL_d ymm14_d ymm3_d;
smull mulHymm3_e mulL_e ymm14_e ymm3_e;
smull mulHymm3_f mulL_f ymm14_f ymm3_f;
cast ymm9_0@sint16 mulL_0;
cast ymm9_1@sint16 mulL_1;
cast ymm9_2@sint16 mulL_2;
cast ymm9_3@sint16 mulL_3;
cast ymm9_4@sint16 mulL_4;
cast ymm9_5@sint16 mulL_5;
cast ymm9_6@sint16 mulL_6;
cast ymm9_7@sint16 mulL_7;
cast ymm9_8@sint16 mulL_8;
cast ymm9_9@sint16 mulL_9;
cast ymm9_a@sint16 mulL_a;
cast ymm9_b@sint16 mulL_b;
cast ymm9_c@sint16 mulL_c;
cast ymm9_d@sint16 mulL_d;
cast ymm9_e@sint16 mulL_e;
cast ymm9_f@sint16 mulL_f;
(* vpmulhw %ymm15,%ymm3,%ymm3                      #! PC = 0x55555555764f *)
smull mulH_0 mulLymm3_0 ymm3_0 ymm15_0;
smull mulH_1 mulLymm3_1 ymm3_1 ymm15_1;
smull mulH_2 mulLymm3_2 ymm3_2 ymm15_2;
smull mulH_3 mulLymm3_3 ymm3_3 ymm15_3;
smull mulH_4 mulLymm3_4 ymm3_4 ymm15_4;
smull mulH_5 mulLymm3_5 ymm3_5 ymm15_5;
smull mulH_6 mulLymm3_6 ymm3_6 ymm15_6;
smull mulH_7 mulLymm3_7 ymm3_7 ymm15_7;
smull mulH_8 mulLymm3_8 ymm3_8 ymm15_8;
smull mulH_9 mulLymm3_9 ymm3_9 ymm15_9;
smull mulH_a mulLymm3_a ymm3_a ymm15_a;
smull mulH_b mulLymm3_b ymm3_b ymm15_b;
smull mulH_c mulLymm3_c ymm3_c ymm15_c;
smull mulH_d mulLymm3_d ymm3_d ymm15_d;
smull mulH_e mulLymm3_e ymm3_e ymm15_e;
smull mulH_f mulLymm3_f ymm3_f ymm15_f;
mov ymm3_0 mulH_0;
mov ymm3_1 mulH_1;
mov ymm3_2 mulH_2;
mov ymm3_3 mulH_3;
mov ymm3_4 mulH_4;
mov ymm3_5 mulH_5;
mov ymm3_6 mulH_6;
mov ymm3_7 mulH_7;
mov ymm3_8 mulH_8;
mov ymm3_9 mulH_9;
mov ymm3_a mulH_a;
mov ymm3_b mulH_b;
mov ymm3_c mulH_c;
mov ymm3_d mulH_d;
mov ymm3_e mulH_e;
mov ymm3_f mulH_f;
(* vpmulhw %ymm0,%ymm9,%ymm9                       #! PC = 0x555555557654 *)
smull mulH_0 red_0 ymm9_0 ymm0_0;
assert true && red_0 = mulLymm3_0;
assume red_0 = mulLymm3_0 && true;
smull mulH_1 red_1 ymm9_1 ymm0_1;
assert true && red_1 = mulLymm3_1;
assume red_1 = mulLymm3_1 && true;
smull mulH_2 red_2 ymm9_2 ymm0_2;
assert true && red_2 = mulLymm3_2;
assume red_2 = mulLymm3_2 && true;
smull mulH_3 red_3 ymm9_3 ymm0_3;
assert true && red_3 = mulLymm3_3;
assume red_3 = mulLymm3_3 && true;
smull mulH_4 red_4 ymm9_4 ymm0_4;
assert true && red_4 = mulLymm3_4;
assume red_4 = mulLymm3_4 && true;
smull mulH_5 red_5 ymm9_5 ymm0_5;
assert true && red_5 = mulLymm3_5;
assume red_5 = mulLymm3_5 && true;
smull mulH_6 red_6 ymm9_6 ymm0_6;
assert true && red_6 = mulLymm3_6;
assume red_6 = mulLymm3_6 && true;
smull mulH_7 red_7 ymm9_7 ymm0_7;
assert true && red_7 = mulLymm3_7;
assume red_7 = mulLymm3_7 && true;
smull mulH_8 red_8 ymm9_8 ymm0_8;
assert true && red_8 = mulLymm3_8;
assume red_8 = mulLymm3_8 && true;
smull mulH_9 red_9 ymm9_9 ymm0_9;
assert true && red_9 = mulLymm3_9;
assume red_9 = mulLymm3_9 && true;
smull mulH_a red_a ymm9_a ymm0_a;
assert true && red_a = mulLymm3_a;
assume red_a = mulLymm3_a && true;
smull mulH_b red_b ymm9_b ymm0_b;
assert true && red_b = mulLymm3_b;
assume red_b = mulLymm3_b && true;
smull mulH_c red_c ymm9_c ymm0_c;
assert true && red_c = mulLymm3_c;
assume red_c = mulLymm3_c && true;
smull mulH_d red_d ymm9_d ymm0_d;
assert true && red_d = mulLymm3_d;
assume red_d = mulLymm3_d && true;
smull mulH_e red_e ymm9_e ymm0_e;
assert true && red_e = mulLymm3_e;
assume red_e = mulLymm3_e && true;
smull mulH_f red_f ymm9_f ymm0_f;
assert true && red_f = mulLymm3_f;
assume red_f = mulLymm3_f && true;
mov ymm9_0 mulH_0;
mov ymm9_1 mulH_1;
mov ymm9_2 mulH_2;
mov ymm9_3 mulH_3;
mov ymm9_4 mulH_4;
mov ymm9_5 mulH_5;
mov ymm9_6 mulH_6;
mov ymm9_7 mulH_7;
mov ymm9_8 mulH_8;
mov ymm9_9 mulH_9;
mov ymm9_a mulH_a;
mov ymm9_b mulH_b;
mov ymm9_c mulH_c;
mov ymm9_d mulH_d;
mov ymm9_e mulH_e;
mov ymm9_f mulH_f;
(* vpsubw %ymm9,%ymm3,%ymm3                        #! PC = 0x555555557658 *)
sub ymm3_0 ymm3_0 ymm9_0;
sub ymm3_1 ymm3_1 ymm9_1;
sub ymm3_2 ymm3_2 ymm9_2;
sub ymm3_3 ymm3_3 ymm9_3;
sub ymm3_4 ymm3_4 ymm9_4;
sub ymm3_5 ymm3_5 ymm9_5;
sub ymm3_6 ymm3_6 ymm9_6;
sub ymm3_7 ymm3_7 ymm9_7;
sub ymm3_8 ymm3_8 ymm9_8;
sub ymm3_9 ymm3_9 ymm9_9;
sub ymm3_a ymm3_a ymm9_a;
sub ymm3_b ymm3_b ymm9_b;
sub ymm3_c ymm3_c ymm9_c;
sub ymm3_d ymm3_d ymm9_d;
sub ymm3_e ymm3_e ymm9_e;
sub ymm3_f ymm3_f ymm9_f;
(* vpbroadcastw 0x102(%rdx),%ymm1                  #! EA = L0x555555561222; Value = 0x276d0198f85c6adf; PC = 0x55555555765d *)
mov ymm1_0 L0x555555561222;
mov ymm1_1 L0x555555561222;
mov ymm1_2 L0x555555561222;
mov ymm1_3 L0x555555561222;
mov ymm1_4 L0x555555561222;
mov ymm1_5 L0x555555561222;
mov ymm1_6 L0x555555561222;
mov ymm1_7 L0x555555561222;
mov ymm1_8 L0x555555561222;
mov ymm1_9 L0x555555561222;
mov ymm1_a L0x555555561222;
mov ymm1_b L0x555555561222;
mov ymm1_c L0x555555561222;
mov ymm1_d L0x555555561222;
mov ymm1_e L0x555555561222;
mov ymm1_f L0x555555561222;
(* vpbroadcastw 0x302(%rdx),%ymm2                  #! EA = L0x555555561422; Value = 0x096df198105c00df; PC = 0x555555557666 *)
mov ymm2_0 L0x555555561422;
mov ymm2_1 L0x555555561422;
mov ymm2_2 L0x555555561422;
mov ymm2_3 L0x555555561422;
mov ymm2_4 L0x555555561422;
mov ymm2_5 L0x555555561422;
mov ymm2_6 L0x555555561422;
mov ymm2_7 L0x555555561422;
mov ymm2_8 L0x555555561422;
mov ymm2_9 L0x555555561422;
mov ymm2_a L0x555555561422;
mov ymm2_b L0x555555561422;
mov ymm2_c L0x555555561422;
mov ymm2_d L0x555555561422;
mov ymm2_e L0x555555561422;
mov ymm2_f L0x555555561422;
(* vpmullw %ymm1,%ymm6,%ymm9                       #! PC = 0x55555555766f *)
smull mulHymm6_0 mulL_0 ymm1_0 ymm6_0;
smull mulHymm6_1 mulL_1 ymm1_1 ymm6_1;
smull mulHymm6_2 mulL_2 ymm1_2 ymm6_2;
smull mulHymm6_3 mulL_3 ymm1_3 ymm6_3;
smull mulHymm6_4 mulL_4 ymm1_4 ymm6_4;
smull mulHymm6_5 mulL_5 ymm1_5 ymm6_5;
smull mulHymm6_6 mulL_6 ymm1_6 ymm6_6;
smull mulHymm6_7 mulL_7 ymm1_7 ymm6_7;
smull mulHymm6_8 mulL_8 ymm1_8 ymm6_8;
smull mulHymm6_9 mulL_9 ymm1_9 ymm6_9;
smull mulHymm6_a mulL_a ymm1_a ymm6_a;
smull mulHymm6_b mulL_b ymm1_b ymm6_b;
smull mulHymm6_c mulL_c ymm1_c ymm6_c;
smull mulHymm6_d mulL_d ymm1_d ymm6_d;
smull mulHymm6_e mulL_e ymm1_e ymm6_e;
smull mulHymm6_f mulL_f ymm1_f ymm6_f;
cast ymm9_0@sint16 mulL_0;
cast ymm9_1@sint16 mulL_1;
cast ymm9_2@sint16 mulL_2;
cast ymm9_3@sint16 mulL_3;
cast ymm9_4@sint16 mulL_4;
cast ymm9_5@sint16 mulL_5;
cast ymm9_6@sint16 mulL_6;
cast ymm9_7@sint16 mulL_7;
cast ymm9_8@sint16 mulL_8;
cast ymm9_9@sint16 mulL_9;
cast ymm9_a@sint16 mulL_a;
cast ymm9_b@sint16 mulL_b;
cast ymm9_c@sint16 mulL_c;
cast ymm9_d@sint16 mulL_d;
cast ymm9_e@sint16 mulL_e;
cast ymm9_f@sint16 mulL_f;
(* vpmulhw %ymm2,%ymm6,%ymm6                       #! PC = 0x555555557673 *)
smull mulH_0 mulLymm6_0 ymm6_0 ymm2_0;
smull mulH_1 mulLymm6_1 ymm6_1 ymm2_1;
smull mulH_2 mulLymm6_2 ymm6_2 ymm2_2;
smull mulH_3 mulLymm6_3 ymm6_3 ymm2_3;
smull mulH_4 mulLymm6_4 ymm6_4 ymm2_4;
smull mulH_5 mulLymm6_5 ymm6_5 ymm2_5;
smull mulH_6 mulLymm6_6 ymm6_6 ymm2_6;
smull mulH_7 mulLymm6_7 ymm6_7 ymm2_7;
smull mulH_8 mulLymm6_8 ymm6_8 ymm2_8;
smull mulH_9 mulLymm6_9 ymm6_9 ymm2_9;
smull mulH_a mulLymm6_a ymm6_a ymm2_a;
smull mulH_b mulLymm6_b ymm6_b ymm2_b;
smull mulH_c mulLymm6_c ymm6_c ymm2_c;
smull mulH_d mulLymm6_d ymm6_d ymm2_d;
smull mulH_e mulLymm6_e ymm6_e ymm2_e;
smull mulH_f mulLymm6_f ymm6_f ymm2_f;
mov ymm6_0 mulH_0;
mov ymm6_1 mulH_1;
mov ymm6_2 mulH_2;
mov ymm6_3 mulH_3;
mov ymm6_4 mulH_4;
mov ymm6_5 mulH_5;
mov ymm6_6 mulH_6;
mov ymm6_7 mulH_7;
mov ymm6_8 mulH_8;
mov ymm6_9 mulH_9;
mov ymm6_a mulH_a;
mov ymm6_b mulH_b;
mov ymm6_c mulH_c;
mov ymm6_d mulH_d;
mov ymm6_e mulH_e;
mov ymm6_f mulH_f;
(* vpmulhw %ymm0,%ymm9,%ymm9                       #! PC = 0x555555557677 *)
smull mulH_0 red_0 ymm9_0 ymm0_0;
assert true && red_0 = mulLymm6_0;
assume red_0 = mulLymm6_0 && true;
smull mulH_1 red_1 ymm9_1 ymm0_1;
assert true && red_1 = mulLymm6_1;
assume red_1 = mulLymm6_1 && true;
smull mulH_2 red_2 ymm9_2 ymm0_2;
assert true && red_2 = mulLymm6_2;
assume red_2 = mulLymm6_2 && true;
smull mulH_3 red_3 ymm9_3 ymm0_3;
assert true && red_3 = mulLymm6_3;
assume red_3 = mulLymm6_3 && true;
smull mulH_4 red_4 ymm9_4 ymm0_4;
assert true && red_4 = mulLymm6_4;
assume red_4 = mulLymm6_4 && true;
smull mulH_5 red_5 ymm9_5 ymm0_5;
assert true && red_5 = mulLymm6_5;
assume red_5 = mulLymm6_5 && true;
smull mulH_6 red_6 ymm9_6 ymm0_6;
assert true && red_6 = mulLymm6_6;
assume red_6 = mulLymm6_6 && true;
smull mulH_7 red_7 ymm9_7 ymm0_7;
assert true && red_7 = mulLymm6_7;
assume red_7 = mulLymm6_7 && true;
smull mulH_8 red_8 ymm9_8 ymm0_8;
assert true && red_8 = mulLymm6_8;
assume red_8 = mulLymm6_8 && true;
smull mulH_9 red_9 ymm9_9 ymm0_9;
assert true && red_9 = mulLymm6_9;
assume red_9 = mulLymm6_9 && true;
smull mulH_a red_a ymm9_a ymm0_a;
assert true && red_a = mulLymm6_a;
assume red_a = mulLymm6_a && true;
smull mulH_b red_b ymm9_b ymm0_b;
assert true && red_b = mulLymm6_b;
assume red_b = mulLymm6_b && true;
smull mulH_c red_c ymm9_c ymm0_c;
assert true && red_c = mulLymm6_c;
assume red_c = mulLymm6_c && true;
smull mulH_d red_d ymm9_d ymm0_d;
assert true && red_d = mulLymm6_d;
assume red_d = mulLymm6_d && true;
smull mulH_e red_e ymm9_e ymm0_e;
assert true && red_e = mulLymm6_e;
assume red_e = mulLymm6_e && true;
smull mulH_f red_f ymm9_f ymm0_f;
assert true && red_f = mulLymm6_f;
assume red_f = mulLymm6_f && true;
mov ymm9_0 mulH_0;
mov ymm9_1 mulH_1;
mov ymm9_2 mulH_2;
mov ymm9_3 mulH_3;
mov ymm9_4 mulH_4;
mov ymm9_5 mulH_5;
mov ymm9_6 mulH_6;
mov ymm9_7 mulH_7;
mov ymm9_8 mulH_8;
mov ymm9_9 mulH_9;
mov ymm9_a mulH_a;
mov ymm9_b mulH_b;
mov ymm9_c mulH_c;
mov ymm9_d mulH_d;
mov ymm9_e mulH_e;
mov ymm9_f mulH_f;
(* vpsubw %ymm9,%ymm6,%ymm6                        #! PC = 0x55555555767b *)
sub ymm6_0 ymm6_0 ymm9_0;
sub ymm6_1 ymm6_1 ymm9_1;
sub ymm6_2 ymm6_2 ymm9_2;
sub ymm6_3 ymm6_3 ymm9_3;
sub ymm6_4 ymm6_4 ymm9_4;
sub ymm6_5 ymm6_5 ymm9_5;
sub ymm6_6 ymm6_6 ymm9_6;
sub ymm6_7 ymm6_7 ymm9_7;
sub ymm6_8 ymm6_8 ymm9_8;
sub ymm6_9 ymm6_9 ymm9_9;
sub ymm6_a ymm6_a ymm9_a;
sub ymm6_b ymm6_b ymm9_b;
sub ymm6_c ymm6_c ymm9_c;
sub ymm6_d ymm6_d ymm9_d;
sub ymm6_e ymm6_e ymm9_e;
sub ymm6_f ymm6_f ymm9_f;
(* vpbroadcastw 0x104(%rdx),%ymm1                  #! EA = L0x555555561224; Value = 0xad9a276d0198f85c; PC = 0x555555557680 *)
mov ymm1_0 L0x555555561224;
mov ymm1_1 L0x555555561224;
mov ymm1_2 L0x555555561224;
mov ymm1_3 L0x555555561224;
mov ymm1_4 L0x555555561224;
mov ymm1_5 L0x555555561224;
mov ymm1_6 L0x555555561224;
mov ymm1_7 L0x555555561224;
mov ymm1_8 L0x555555561224;
mov ymm1_9 L0x555555561224;
mov ymm1_a L0x555555561224;
mov ymm1_b L0x555555561224;
mov ymm1_c L0x555555561224;
mov ymm1_d L0x555555561224;
mov ymm1_e L0x555555561224;
mov ymm1_f L0x555555561224;
(* vpbroadcastw 0x304(%rdx),%ymm2                  #! EA = L0x555555561424; Value = 0xf19a096df198105c; PC = 0x555555557689 *)
mov ymm2_0 L0x555555561424;
mov ymm2_1 L0x555555561424;
mov ymm2_2 L0x555555561424;
mov ymm2_3 L0x555555561424;
mov ymm2_4 L0x555555561424;
mov ymm2_5 L0x555555561424;
mov ymm2_6 L0x555555561424;
mov ymm2_7 L0x555555561424;
mov ymm2_8 L0x555555561424;
mov ymm2_9 L0x555555561424;
mov ymm2_a L0x555555561424;
mov ymm2_b L0x555555561424;
mov ymm2_c L0x555555561424;
mov ymm2_d L0x555555561424;
mov ymm2_e L0x555555561424;
mov ymm2_f L0x555555561424;
(* vpmullw %ymm1,%ymm8,%ymm9                       #! PC = 0x555555557692 *)
smull mulHymm8_0 mulL_0 ymm1_0 ymm8_0;
smull mulHymm8_1 mulL_1 ymm1_1 ymm8_1;
smull mulHymm8_2 mulL_2 ymm1_2 ymm8_2;
smull mulHymm8_3 mulL_3 ymm1_3 ymm8_3;
smull mulHymm8_4 mulL_4 ymm1_4 ymm8_4;
smull mulHymm8_5 mulL_5 ymm1_5 ymm8_5;
smull mulHymm8_6 mulL_6 ymm1_6 ymm8_6;
smull mulHymm8_7 mulL_7 ymm1_7 ymm8_7;
smull mulHymm8_8 mulL_8 ymm1_8 ymm8_8;
smull mulHymm8_9 mulL_9 ymm1_9 ymm8_9;
smull mulHymm8_a mulL_a ymm1_a ymm8_a;
smull mulHymm8_b mulL_b ymm1_b ymm8_b;
smull mulHymm8_c mulL_c ymm1_c ymm8_c;
smull mulHymm8_d mulL_d ymm1_d ymm8_d;
smull mulHymm8_e mulL_e ymm1_e ymm8_e;
smull mulHymm8_f mulL_f ymm1_f ymm8_f;
cast ymm9_0@sint16 mulL_0;
cast ymm9_1@sint16 mulL_1;
cast ymm9_2@sint16 mulL_2;
cast ymm9_3@sint16 mulL_3;
cast ymm9_4@sint16 mulL_4;
cast ymm9_5@sint16 mulL_5;
cast ymm9_6@sint16 mulL_6;
cast ymm9_7@sint16 mulL_7;
cast ymm9_8@sint16 mulL_8;
cast ymm9_9@sint16 mulL_9;
cast ymm9_a@sint16 mulL_a;
cast ymm9_b@sint16 mulL_b;
cast ymm9_c@sint16 mulL_c;
cast ymm9_d@sint16 mulL_d;
cast ymm9_e@sint16 mulL_e;
cast ymm9_f@sint16 mulL_f;
(* vpmulhw %ymm2,%ymm8,%ymm8                       #! PC = 0x555555557696 *)
smull mulH_0 mulLymm8_0 ymm8_0 ymm2_0;
smull mulH_1 mulLymm8_1 ymm8_1 ymm2_1;
smull mulH_2 mulLymm8_2 ymm8_2 ymm2_2;
smull mulH_3 mulLymm8_3 ymm8_3 ymm2_3;
smull mulH_4 mulLymm8_4 ymm8_4 ymm2_4;
smull mulH_5 mulLymm8_5 ymm8_5 ymm2_5;
smull mulH_6 mulLymm8_6 ymm8_6 ymm2_6;
smull mulH_7 mulLymm8_7 ymm8_7 ymm2_7;
smull mulH_8 mulLymm8_8 ymm8_8 ymm2_8;
smull mulH_9 mulLymm8_9 ymm8_9 ymm2_9;
smull mulH_a mulLymm8_a ymm8_a ymm2_a;
smull mulH_b mulLymm8_b ymm8_b ymm2_b;
smull mulH_c mulLymm8_c ymm8_c ymm2_c;
smull mulH_d mulLymm8_d ymm8_d ymm2_d;
smull mulH_e mulLymm8_e ymm8_e ymm2_e;
smull mulH_f mulLymm8_f ymm8_f ymm2_f;
mov ymm8_0 mulH_0;
mov ymm8_1 mulH_1;
mov ymm8_2 mulH_2;
mov ymm8_3 mulH_3;
mov ymm8_4 mulH_4;
mov ymm8_5 mulH_5;
mov ymm8_6 mulH_6;
mov ymm8_7 mulH_7;
mov ymm8_8 mulH_8;
mov ymm8_9 mulH_9;
mov ymm8_a mulH_a;
mov ymm8_b mulH_b;
mov ymm8_c mulH_c;
mov ymm8_d mulH_d;
mov ymm8_e mulH_e;
mov ymm8_f mulH_f;
(* vpmulhw %ymm0,%ymm9,%ymm9                       #! PC = 0x55555555769a *)
smull mulH_0 red_0 ymm9_0 ymm0_0;
assert true && red_0 = mulLymm8_0;
assume red_0 = mulLymm8_0 && true;
smull mulH_1 red_1 ymm9_1 ymm0_1;
assert true && red_1 = mulLymm8_1;
assume red_1 = mulLymm8_1 && true;
smull mulH_2 red_2 ymm9_2 ymm0_2;
assert true && red_2 = mulLymm8_2;
assume red_2 = mulLymm8_2 && true;
smull mulH_3 red_3 ymm9_3 ymm0_3;
assert true && red_3 = mulLymm8_3;
assume red_3 = mulLymm8_3 && true;
smull mulH_4 red_4 ymm9_4 ymm0_4;
assert true && red_4 = mulLymm8_4;
assume red_4 = mulLymm8_4 && true;
smull mulH_5 red_5 ymm9_5 ymm0_5;
assert true && red_5 = mulLymm8_5;
assume red_5 = mulLymm8_5 && true;
smull mulH_6 red_6 ymm9_6 ymm0_6;
assert true && red_6 = mulLymm8_6;
assume red_6 = mulLymm8_6 && true;
smull mulH_7 red_7 ymm9_7 ymm0_7;
assert true && red_7 = mulLymm8_7;
assume red_7 = mulLymm8_7 && true;
smull mulH_8 red_8 ymm9_8 ymm0_8;
assert true && red_8 = mulLymm8_8;
assume red_8 = mulLymm8_8 && true;
smull mulH_9 red_9 ymm9_9 ymm0_9;
assert true && red_9 = mulLymm8_9;
assume red_9 = mulLymm8_9 && true;
smull mulH_a red_a ymm9_a ymm0_a;
assert true && red_a = mulLymm8_a;
assume red_a = mulLymm8_a && true;
smull mulH_b red_b ymm9_b ymm0_b;
assert true && red_b = mulLymm8_b;
assume red_b = mulLymm8_b && true;
smull mulH_c red_c ymm9_c ymm0_c;
assert true && red_c = mulLymm8_c;
assume red_c = mulLymm8_c && true;
smull mulH_d red_d ymm9_d ymm0_d;
assert true && red_d = mulLymm8_d;
assume red_d = mulLymm8_d && true;
smull mulH_e red_e ymm9_e ymm0_e;
assert true && red_e = mulLymm8_e;
assume red_e = mulLymm8_e && true;
smull mulH_f red_f ymm9_f ymm0_f;
assert true && red_f = mulLymm8_f;
assume red_f = mulLymm8_f && true;
mov ymm9_0 mulH_0;
mov ymm9_1 mulH_1;
mov ymm9_2 mulH_2;
mov ymm9_3 mulH_3;
mov ymm9_4 mulH_4;
mov ymm9_5 mulH_5;
mov ymm9_6 mulH_6;
mov ymm9_7 mulH_7;
mov ymm9_8 mulH_8;
mov ymm9_9 mulH_9;
mov ymm9_a mulH_a;
mov ymm9_b mulH_b;
mov ymm9_c mulH_c;
mov ymm9_d mulH_d;
mov ymm9_e mulH_e;
mov ymm9_f mulH_f;
(* vpsubw %ymm9,%ymm8,%ymm8                        #! PC = 0x55555555769e *)
sub ymm8_0 ymm8_0 ymm9_0;
sub ymm8_1 ymm8_1 ymm9_1;
sub ymm8_2 ymm8_2 ymm9_2;
sub ymm8_3 ymm8_3 ymm9_3;
sub ymm8_4 ymm8_4 ymm9_4;
sub ymm8_5 ymm8_5 ymm9_5;
sub ymm8_6 ymm8_6 ymm9_6;
sub ymm8_7 ymm8_7 ymm9_7;
sub ymm8_8 ymm8_8 ymm9_8;
sub ymm8_9 ymm8_9 ymm9_9;
sub ymm8_a ymm8_a ymm9_a;
sub ymm8_b ymm8_b ymm9_b;
sub ymm8_c ymm8_c ymm9_c;
sub ymm8_d ymm8_d ymm9_d;
sub ymm8_e ymm8_e ymm9_e;
sub ymm8_f ymm8_f ymm9_f;
(* vpbroadcastw 0x106(%rdx),%ymm1                  #! EA = L0x555555561226; Value = 0x6f65ad9a276d0198; PC = 0x5555555576a3 *)
mov ymm1_0 L0x555555561226;
mov ymm1_1 L0x555555561226;
mov ymm1_2 L0x555555561226;
mov ymm1_3 L0x555555561226;
mov ymm1_4 L0x555555561226;
mov ymm1_5 L0x555555561226;
mov ymm1_6 L0x555555561226;
mov ymm1_7 L0x555555561226;
mov ymm1_8 L0x555555561226;
mov ymm1_9 L0x555555561226;
mov ymm1_a L0x555555561226;
mov ymm1_b L0x555555561226;
mov ymm1_c L0x555555561226;
mov ymm1_d L0x555555561226;
mov ymm1_e L0x555555561226;
mov ymm1_f L0x555555561226;
(* vpbroadcastw 0x306(%rdx),%ymm2                  #! EA = L0x555555561426; Value = 0x0165f19a096df198; PC = 0x5555555576ac *)
mov ymm2_0 L0x555555561426;
mov ymm2_1 L0x555555561426;
mov ymm2_2 L0x555555561426;
mov ymm2_3 L0x555555561426;
mov ymm2_4 L0x555555561426;
mov ymm2_5 L0x555555561426;
mov ymm2_6 L0x555555561426;
mov ymm2_7 L0x555555561426;
mov ymm2_8 L0x555555561426;
mov ymm2_9 L0x555555561426;
mov ymm2_a L0x555555561426;
mov ymm2_b L0x555555561426;
mov ymm2_c L0x555555561426;
mov ymm2_d L0x555555561426;
mov ymm2_e L0x555555561426;
mov ymm2_f L0x555555561426;
(* vpmullw %ymm1,%ymm11,%ymm9                      #! PC = 0x5555555576b5 *)
smull mulHymm11_0 mulL_0 ymm1_0 ymm11_0;
smull mulHymm11_1 mulL_1 ymm1_1 ymm11_1;
smull mulHymm11_2 mulL_2 ymm1_2 ymm11_2;
smull mulHymm11_3 mulL_3 ymm1_3 ymm11_3;
smull mulHymm11_4 mulL_4 ymm1_4 ymm11_4;
smull mulHymm11_5 mulL_5 ymm1_5 ymm11_5;
smull mulHymm11_6 mulL_6 ymm1_6 ymm11_6;
smull mulHymm11_7 mulL_7 ymm1_7 ymm11_7;
smull mulHymm11_8 mulL_8 ymm1_8 ymm11_8;
smull mulHymm11_9 mulL_9 ymm1_9 ymm11_9;
smull mulHymm11_a mulL_a ymm1_a ymm11_a;
smull mulHymm11_b mulL_b ymm1_b ymm11_b;
smull mulHymm11_c mulL_c ymm1_c ymm11_c;
smull mulHymm11_d mulL_d ymm1_d ymm11_d;
smull mulHymm11_e mulL_e ymm1_e ymm11_e;
smull mulHymm11_f mulL_f ymm1_f ymm11_f;
cast ymm9_0@sint16 mulL_0;
cast ymm9_1@sint16 mulL_1;
cast ymm9_2@sint16 mulL_2;
cast ymm9_3@sint16 mulL_3;
cast ymm9_4@sint16 mulL_4;
cast ymm9_5@sint16 mulL_5;
cast ymm9_6@sint16 mulL_6;
cast ymm9_7@sint16 mulL_7;
cast ymm9_8@sint16 mulL_8;
cast ymm9_9@sint16 mulL_9;
cast ymm9_a@sint16 mulL_a;
cast ymm9_b@sint16 mulL_b;
cast ymm9_c@sint16 mulL_c;
cast ymm9_d@sint16 mulL_d;
cast ymm9_e@sint16 mulL_e;
cast ymm9_f@sint16 mulL_f;
(* vpmulhw %ymm2,%ymm11,%ymm11                     #! PC = 0x5555555576b9 *)
smull mulH_0 mulLymm11_0 ymm11_0 ymm2_0;
smull mulH_1 mulLymm11_1 ymm11_1 ymm2_1;
smull mulH_2 mulLymm11_2 ymm11_2 ymm2_2;
smull mulH_3 mulLymm11_3 ymm11_3 ymm2_3;
smull mulH_4 mulLymm11_4 ymm11_4 ymm2_4;
smull mulH_5 mulLymm11_5 ymm11_5 ymm2_5;
smull mulH_6 mulLymm11_6 ymm11_6 ymm2_6;
smull mulH_7 mulLymm11_7 ymm11_7 ymm2_7;
smull mulH_8 mulLymm11_8 ymm11_8 ymm2_8;
smull mulH_9 mulLymm11_9 ymm11_9 ymm2_9;
smull mulH_a mulLymm11_a ymm11_a ymm2_a;
smull mulH_b mulLymm11_b ymm11_b ymm2_b;
smull mulH_c mulLymm11_c ymm11_c ymm2_c;
smull mulH_d mulLymm11_d ymm11_d ymm2_d;
smull mulH_e mulLymm11_e ymm11_e ymm2_e;
smull mulH_f mulLymm11_f ymm11_f ymm2_f;
mov ymm11_0 mulH_0;
mov ymm11_1 mulH_1;
mov ymm11_2 mulH_2;
mov ymm11_3 mulH_3;
mov ymm11_4 mulH_4;
mov ymm11_5 mulH_5;
mov ymm11_6 mulH_6;
mov ymm11_7 mulH_7;
mov ymm11_8 mulH_8;
mov ymm11_9 mulH_9;
mov ymm11_a mulH_a;
mov ymm11_b mulH_b;
mov ymm11_c mulH_c;
mov ymm11_d mulH_d;
mov ymm11_e mulH_e;
mov ymm11_f mulH_f;
(* vpmulhw %ymm0,%ymm9,%ymm9                       #! PC = 0x5555555576bd *)
smull mulH_0 red_0 ymm9_0 ymm0_0;
assert true && red_0 = mulLymm11_0;
assume red_0 = mulLymm11_0 && true;
smull mulH_1 red_1 ymm9_1 ymm0_1;
assert true && red_1 = mulLymm11_1;
assume red_1 = mulLymm11_1 && true;
smull mulH_2 red_2 ymm9_2 ymm0_2;
assert true && red_2 = mulLymm11_2;
assume red_2 = mulLymm11_2 && true;
smull mulH_3 red_3 ymm9_3 ymm0_3;
assert true && red_3 = mulLymm11_3;
assume red_3 = mulLymm11_3 && true;
smull mulH_4 red_4 ymm9_4 ymm0_4;
assert true && red_4 = mulLymm11_4;
assume red_4 = mulLymm11_4 && true;
smull mulH_5 red_5 ymm9_5 ymm0_5;
assert true && red_5 = mulLymm11_5;
assume red_5 = mulLymm11_5 && true;
smull mulH_6 red_6 ymm9_6 ymm0_6;
assert true && red_6 = mulLymm11_6;
assume red_6 = mulLymm11_6 && true;
smull mulH_7 red_7 ymm9_7 ymm0_7;
assert true && red_7 = mulLymm11_7;
assume red_7 = mulLymm11_7 && true;
smull mulH_8 red_8 ymm9_8 ymm0_8;
assert true && red_8 = mulLymm11_8;
assume red_8 = mulLymm11_8 && true;
smull mulH_9 red_9 ymm9_9 ymm0_9;
assert true && red_9 = mulLymm11_9;
assume red_9 = mulLymm11_9 && true;
smull mulH_a red_a ymm9_a ymm0_a;
assert true && red_a = mulLymm11_a;
assume red_a = mulLymm11_a && true;
smull mulH_b red_b ymm9_b ymm0_b;
assert true && red_b = mulLymm11_b;
assume red_b = mulLymm11_b && true;
smull mulH_c red_c ymm9_c ymm0_c;
assert true && red_c = mulLymm11_c;
assume red_c = mulLymm11_c && true;
smull mulH_d red_d ymm9_d ymm0_d;
assert true && red_d = mulLymm11_d;
assume red_d = mulLymm11_d && true;
smull mulH_e red_e ymm9_e ymm0_e;
assert true && red_e = mulLymm11_e;
assume red_e = mulLymm11_e && true;
smull mulH_f red_f ymm9_f ymm0_f;
assert true && red_f = mulLymm11_f;
assume red_f = mulLymm11_f && true;
mov ymm9_0 mulH_0;
mov ymm9_1 mulH_1;
mov ymm9_2 mulH_2;
mov ymm9_3 mulH_3;
mov ymm9_4 mulH_4;
mov ymm9_5 mulH_5;
mov ymm9_6 mulH_6;
mov ymm9_7 mulH_7;
mov ymm9_8 mulH_8;
mov ymm9_9 mulH_9;
mov ymm9_a mulH_a;
mov ymm9_b mulH_b;
mov ymm9_c mulH_c;
mov ymm9_d mulH_d;
mov ymm9_e mulH_e;
mov ymm9_f mulH_f;
(* vpsubw %ymm9,%ymm11,%ymm11                      #! PC = 0x5555555576c1 *)
sub ymm11_0 ymm11_0 ymm9_0;
sub ymm11_1 ymm11_1 ymm9_1;
sub ymm11_2 ymm11_2 ymm9_2;
sub ymm11_3 ymm11_3 ymm9_3;
sub ymm11_4 ymm11_4 ymm9_4;
sub ymm11_5 ymm11_5 ymm9_5;
sub ymm11_6 ymm11_6 ymm9_6;
sub ymm11_7 ymm11_7 ymm9_7;
sub ymm11_8 ymm11_8 ymm9_8;
sub ymm11_9 ymm11_9 ymm9_9;
sub ymm11_a ymm11_a ymm9_a;
sub ymm11_b ymm11_b ymm9_b;
sub ymm11_c ymm11_c ymm9_c;
sub ymm11_d ymm11_d ymm9_d;
sub ymm11_e ymm11_e ymm9_e;
sub ymm11_f ymm11_f ymm9_f;
(* vpmullw %ymm14,%ymm7,%ymm9                      #! PC = 0x5555555576c6 *)
smull mulHymm7_0 mulL_0 ymm14_0 ymm7_0;
smull mulHymm7_1 mulL_1 ymm14_1 ymm7_1;
smull mulHymm7_2 mulL_2 ymm14_2 ymm7_2;
smull mulHymm7_3 mulL_3 ymm14_3 ymm7_3;
smull mulHymm7_4 mulL_4 ymm14_4 ymm7_4;
smull mulHymm7_5 mulL_5 ymm14_5 ymm7_5;
smull mulHymm7_6 mulL_6 ymm14_6 ymm7_6;
smull mulHymm7_7 mulL_7 ymm14_7 ymm7_7;
smull mulHymm7_8 mulL_8 ymm14_8 ymm7_8;
smull mulHymm7_9 mulL_9 ymm14_9 ymm7_9;
smull mulHymm7_a mulL_a ymm14_a ymm7_a;
smull mulHymm7_b mulL_b ymm14_b ymm7_b;
smull mulHymm7_c mulL_c ymm14_c ymm7_c;
smull mulHymm7_d mulL_d ymm14_d ymm7_d;
smull mulHymm7_e mulL_e ymm14_e ymm7_e;
smull mulHymm7_f mulL_f ymm14_f ymm7_f;
cast ymm9_0@sint16 mulL_0;
cast ymm9_1@sint16 mulL_1;
cast ymm9_2@sint16 mulL_2;
cast ymm9_3@sint16 mulL_3;
cast ymm9_4@sint16 mulL_4;
cast ymm9_5@sint16 mulL_5;
cast ymm9_6@sint16 mulL_6;
cast ymm9_7@sint16 mulL_7;
cast ymm9_8@sint16 mulL_8;
cast ymm9_9@sint16 mulL_9;
cast ymm9_a@sint16 mulL_a;
cast ymm9_b@sint16 mulL_b;
cast ymm9_c@sint16 mulL_c;
cast ymm9_d@sint16 mulL_d;
cast ymm9_e@sint16 mulL_e;
cast ymm9_f@sint16 mulL_f;
(* vpmulhw %ymm15,%ymm7,%ymm7                      #! PC = 0x5555555576cb *)
smull mulH_0 mulLymm7_0 ymm7_0 ymm15_0;
smull mulH_1 mulLymm7_1 ymm7_1 ymm15_1;
smull mulH_2 mulLymm7_2 ymm7_2 ymm15_2;
smull mulH_3 mulLymm7_3 ymm7_3 ymm15_3;
smull mulH_4 mulLymm7_4 ymm7_4 ymm15_4;
smull mulH_5 mulLymm7_5 ymm7_5 ymm15_5;
smull mulH_6 mulLymm7_6 ymm7_6 ymm15_6;
smull mulH_7 mulLymm7_7 ymm7_7 ymm15_7;
smull mulH_8 mulLymm7_8 ymm7_8 ymm15_8;
smull mulH_9 mulLymm7_9 ymm7_9 ymm15_9;
smull mulH_a mulLymm7_a ymm7_a ymm15_a;
smull mulH_b mulLymm7_b ymm7_b ymm15_b;
smull mulH_c mulLymm7_c ymm7_c ymm15_c;
smull mulH_d mulLymm7_d ymm7_d ymm15_d;
smull mulH_e mulLymm7_e ymm7_e ymm15_e;
smull mulH_f mulLymm7_f ymm7_f ymm15_f;
mov ymm7_0 mulH_0;
mov ymm7_1 mulH_1;
mov ymm7_2 mulH_2;
mov ymm7_3 mulH_3;
mov ymm7_4 mulH_4;
mov ymm7_5 mulH_5;
mov ymm7_6 mulH_6;
mov ymm7_7 mulH_7;
mov ymm7_8 mulH_8;
mov ymm7_9 mulH_9;
mov ymm7_a mulH_a;
mov ymm7_b mulH_b;
mov ymm7_c mulH_c;
mov ymm7_d mulH_d;
mov ymm7_e mulH_e;
mov ymm7_f mulH_f;
(* vpmulhw %ymm0,%ymm9,%ymm9                       #! PC = 0x5555555576d0 *)
smull mulH_0 red_0 ymm9_0 ymm0_0;
assert true && red_0 = mulLymm7_0;
assume red_0 = mulLymm7_0 && true;
smull mulH_1 red_1 ymm9_1 ymm0_1;
assert true && red_1 = mulLymm7_1;
assume red_1 = mulLymm7_1 && true;
smull mulH_2 red_2 ymm9_2 ymm0_2;
assert true && red_2 = mulLymm7_2;
assume red_2 = mulLymm7_2 && true;
smull mulH_3 red_3 ymm9_3 ymm0_3;
assert true && red_3 = mulLymm7_3;
assume red_3 = mulLymm7_3 && true;
smull mulH_4 red_4 ymm9_4 ymm0_4;
assert true && red_4 = mulLymm7_4;
assume red_4 = mulLymm7_4 && true;
smull mulH_5 red_5 ymm9_5 ymm0_5;
assert true && red_5 = mulLymm7_5;
assume red_5 = mulLymm7_5 && true;
smull mulH_6 red_6 ymm9_6 ymm0_6;
assert true && red_6 = mulLymm7_6;
assume red_6 = mulLymm7_6 && true;
smull mulH_7 red_7 ymm9_7 ymm0_7;
assert true && red_7 = mulLymm7_7;
assume red_7 = mulLymm7_7 && true;
smull mulH_8 red_8 ymm9_8 ymm0_8;
assert true && red_8 = mulLymm7_8;
assume red_8 = mulLymm7_8 && true;
smull mulH_9 red_9 ymm9_9 ymm0_9;
assert true && red_9 = mulLymm7_9;
assume red_9 = mulLymm7_9 && true;
smull mulH_a red_a ymm9_a ymm0_a;
assert true && red_a = mulLymm7_a;
assume red_a = mulLymm7_a && true;
smull mulH_b red_b ymm9_b ymm0_b;
assert true && red_b = mulLymm7_b;
assume red_b = mulLymm7_b && true;
smull mulH_c red_c ymm9_c ymm0_c;
assert true && red_c = mulLymm7_c;
assume red_c = mulLymm7_c && true;
smull mulH_d red_d ymm9_d ymm0_d;
assert true && red_d = mulLymm7_d;
assume red_d = mulLymm7_d && true;
smull mulH_e red_e ymm9_e ymm0_e;
assert true && red_e = mulLymm7_e;
assume red_e = mulLymm7_e && true;
smull mulH_f red_f ymm9_f ymm0_f;
assert true && red_f = mulLymm7_f;
assume red_f = mulLymm7_f && true;
mov ymm9_0 mulH_0;
mov ymm9_1 mulH_1;
mov ymm9_2 mulH_2;
mov ymm9_3 mulH_3;
mov ymm9_4 mulH_4;
mov ymm9_5 mulH_5;
mov ymm9_6 mulH_6;
mov ymm9_7 mulH_7;
mov ymm9_8 mulH_8;
mov ymm9_9 mulH_9;
mov ymm9_a mulH_a;
mov ymm9_b mulH_b;
mov ymm9_c mulH_c;
mov ymm9_d mulH_d;
mov ymm9_e mulH_e;
mov ymm9_f mulH_f;
(* vpsubw %ymm9,%ymm7,%ymm7                        #! PC = 0x5555555576d4 *)
sub ymm7_0 ymm7_0 ymm9_0;
sub ymm7_1 ymm7_1 ymm9_1;
sub ymm7_2 ymm7_2 ymm9_2;
sub ymm7_3 ymm7_3 ymm9_3;
sub ymm7_4 ymm7_4 ymm9_4;
sub ymm7_5 ymm7_5 ymm9_5;
sub ymm7_6 ymm7_6 ymm9_6;
sub ymm7_7 ymm7_7 ymm9_7;
sub ymm7_8 ymm7_8 ymm9_8;
sub ymm7_9 ymm7_9 ymm9_9;
sub ymm7_a ymm7_a ymm9_a;
sub ymm7_b ymm7_b ymm9_b;
sub ymm7_c ymm7_c ymm9_c;
sub ymm7_d ymm7_d ymm9_d;
sub ymm7_e ymm7_e ymm9_e;
sub ymm7_f ymm7_f ymm9_f;
(* vpmullw %ymm14,%ymm5,%ymm9                      #! PC = 0x5555555576d9 *)
smull mulHymm5_0 mulL_0 ymm14_0 ymm5_0;
smull mulHymm5_1 mulL_1 ymm14_1 ymm5_1;
smull mulHymm5_2 mulL_2 ymm14_2 ymm5_2;
smull mulHymm5_3 mulL_3 ymm14_3 ymm5_3;
smull mulHymm5_4 mulL_4 ymm14_4 ymm5_4;
smull mulHymm5_5 mulL_5 ymm14_5 ymm5_5;
smull mulHymm5_6 mulL_6 ymm14_6 ymm5_6;
smull mulHymm5_7 mulL_7 ymm14_7 ymm5_7;
smull mulHymm5_8 mulL_8 ymm14_8 ymm5_8;
smull mulHymm5_9 mulL_9 ymm14_9 ymm5_9;
smull mulHymm5_a mulL_a ymm14_a ymm5_a;
smull mulHymm5_b mulL_b ymm14_b ymm5_b;
smull mulHymm5_c mulL_c ymm14_c ymm5_c;
smull mulHymm5_d mulL_d ymm14_d ymm5_d;
smull mulHymm5_e mulL_e ymm14_e ymm5_e;
smull mulHymm5_f mulL_f ymm14_f ymm5_f;
cast ymm9_0@sint16 mulL_0;
cast ymm9_1@sint16 mulL_1;
cast ymm9_2@sint16 mulL_2;
cast ymm9_3@sint16 mulL_3;
cast ymm9_4@sint16 mulL_4;
cast ymm9_5@sint16 mulL_5;
cast ymm9_6@sint16 mulL_6;
cast ymm9_7@sint16 mulL_7;
cast ymm9_8@sint16 mulL_8;
cast ymm9_9@sint16 mulL_9;
cast ymm9_a@sint16 mulL_a;
cast ymm9_b@sint16 mulL_b;
cast ymm9_c@sint16 mulL_c;
cast ymm9_d@sint16 mulL_d;
cast ymm9_e@sint16 mulL_e;
cast ymm9_f@sint16 mulL_f;
(* vpmulhw %ymm15,%ymm5,%ymm5                      #! PC = 0x5555555576de *)
smull mulH_0 mulLymm5_0 ymm5_0 ymm15_0;
smull mulH_1 mulLymm5_1 ymm5_1 ymm15_1;
smull mulH_2 mulLymm5_2 ymm5_2 ymm15_2;
smull mulH_3 mulLymm5_3 ymm5_3 ymm15_3;
smull mulH_4 mulLymm5_4 ymm5_4 ymm15_4;
smull mulH_5 mulLymm5_5 ymm5_5 ymm15_5;
smull mulH_6 mulLymm5_6 ymm5_6 ymm15_6;
smull mulH_7 mulLymm5_7 ymm5_7 ymm15_7;
smull mulH_8 mulLymm5_8 ymm5_8 ymm15_8;
smull mulH_9 mulLymm5_9 ymm5_9 ymm15_9;
smull mulH_a mulLymm5_a ymm5_a ymm15_a;
smull mulH_b mulLymm5_b ymm5_b ymm15_b;
smull mulH_c mulLymm5_c ymm5_c ymm15_c;
smull mulH_d mulLymm5_d ymm5_d ymm15_d;
smull mulH_e mulLymm5_e ymm5_e ymm15_e;
smull mulH_f mulLymm5_f ymm5_f ymm15_f;
mov ymm5_0 mulH_0;
mov ymm5_1 mulH_1;
mov ymm5_2 mulH_2;
mov ymm5_3 mulH_3;
mov ymm5_4 mulH_4;
mov ymm5_5 mulH_5;
mov ymm5_6 mulH_6;
mov ymm5_7 mulH_7;
mov ymm5_8 mulH_8;
mov ymm5_9 mulH_9;
mov ymm5_a mulH_a;
mov ymm5_b mulH_b;
mov ymm5_c mulH_c;
mov ymm5_d mulH_d;
mov ymm5_e mulH_e;
mov ymm5_f mulH_f;
(* vpmulhw %ymm0,%ymm9,%ymm9                       #! PC = 0x5555555576e3 *)
smull mulH_0 red_0 ymm9_0 ymm0_0;
assert true && red_0 = mulLymm5_0;
assume red_0 = mulLymm5_0 && true;
smull mulH_1 red_1 ymm9_1 ymm0_1;
assert true && red_1 = mulLymm5_1;
assume red_1 = mulLymm5_1 && true;
smull mulH_2 red_2 ymm9_2 ymm0_2;
assert true && red_2 = mulLymm5_2;
assume red_2 = mulLymm5_2 && true;
smull mulH_3 red_3 ymm9_3 ymm0_3;
assert true && red_3 = mulLymm5_3;
assume red_3 = mulLymm5_3 && true;
smull mulH_4 red_4 ymm9_4 ymm0_4;
assert true && red_4 = mulLymm5_4;
assume red_4 = mulLymm5_4 && true;
smull mulH_5 red_5 ymm9_5 ymm0_5;
assert true && red_5 = mulLymm5_5;
assume red_5 = mulLymm5_5 && true;
smull mulH_6 red_6 ymm9_6 ymm0_6;
assert true && red_6 = mulLymm5_6;
assume red_6 = mulLymm5_6 && true;
smull mulH_7 red_7 ymm9_7 ymm0_7;
assert true && red_7 = mulLymm5_7;
assume red_7 = mulLymm5_7 && true;
smull mulH_8 red_8 ymm9_8 ymm0_8;
assert true && red_8 = mulLymm5_8;
assume red_8 = mulLymm5_8 && true;
smull mulH_9 red_9 ymm9_9 ymm0_9;
assert true && red_9 = mulLymm5_9;
assume red_9 = mulLymm5_9 && true;
smull mulH_a red_a ymm9_a ymm0_a;
assert true && red_a = mulLymm5_a;
assume red_a = mulLymm5_a && true;
smull mulH_b red_b ymm9_b ymm0_b;
assert true && red_b = mulLymm5_b;
assume red_b = mulLymm5_b && true;
smull mulH_c red_c ymm9_c ymm0_c;
assert true && red_c = mulLymm5_c;
assume red_c = mulLymm5_c && true;
smull mulH_d red_d ymm9_d ymm0_d;
assert true && red_d = mulLymm5_d;
assume red_d = mulLymm5_d && true;
smull mulH_e red_e ymm9_e ymm0_e;
assert true && red_e = mulLymm5_e;
assume red_e = mulLymm5_e && true;
smull mulH_f red_f ymm9_f ymm0_f;
assert true && red_f = mulLymm5_f;
assume red_f = mulLymm5_f && true;
mov ymm9_0 mulH_0;
mov ymm9_1 mulH_1;
mov ymm9_2 mulH_2;
mov ymm9_3 mulH_3;
mov ymm9_4 mulH_4;
mov ymm9_5 mulH_5;
mov ymm9_6 mulH_6;
mov ymm9_7 mulH_7;
mov ymm9_8 mulH_8;
mov ymm9_9 mulH_9;
mov ymm9_a mulH_a;
mov ymm9_b mulH_b;
mov ymm9_c mulH_c;
mov ymm9_d mulH_d;
mov ymm9_e mulH_e;
mov ymm9_f mulH_f;
(* vpsubw %ymm9,%ymm5,%ymm5                        #! PC = 0x5555555576e7 *)
sub ymm5_0 ymm5_0 ymm9_0;
sub ymm5_1 ymm5_1 ymm9_1;
sub ymm5_2 ymm5_2 ymm9_2;
sub ymm5_3 ymm5_3 ymm9_3;
sub ymm5_4 ymm5_4 ymm9_4;
sub ymm5_5 ymm5_5 ymm9_5;
sub ymm5_6 ymm5_6 ymm9_6;
sub ymm5_7 ymm5_7 ymm9_7;
sub ymm5_8 ymm5_8 ymm9_8;
sub ymm5_9 ymm5_9 ymm9_9;
sub ymm5_a ymm5_a ymm9_a;
sub ymm5_b ymm5_b ymm9_b;
sub ymm5_c ymm5_c ymm9_c;
sub ymm5_d ymm5_d ymm9_d;
sub ymm5_e ymm5_e ymm9_e;
sub ymm5_f ymm5_f ymm9_f;
(* vpaddw %ymm3,%ymm7,%ymm9                        #! PC = 0x5555555576ec *)
add ymm9_0 ymm7_0 ymm3_0;
add ymm9_1 ymm7_1 ymm3_1;
add ymm9_2 ymm7_2 ymm3_2;
add ymm9_3 ymm7_3 ymm3_3;
add ymm9_4 ymm7_4 ymm3_4;
add ymm9_5 ymm7_5 ymm3_5;
add ymm9_6 ymm7_6 ymm3_6;
add ymm9_7 ymm7_7 ymm3_7;
add ymm9_8 ymm7_8 ymm3_8;
add ymm9_9 ymm7_9 ymm3_9;
add ymm9_a ymm7_a ymm3_a;
add ymm9_b ymm7_b ymm3_b;
add ymm9_c ymm7_c ymm3_c;
add ymm9_d ymm7_d ymm3_d;
add ymm9_e ymm7_e ymm3_e;
add ymm9_f ymm7_f ymm3_f;
(* vpsubw %ymm3,%ymm7,%ymm3                        #! PC = 0x5555555576f0 *)
sub ymm3_0 ymm7_0 ymm3_0;
sub ymm3_1 ymm7_1 ymm3_1;
sub ymm3_2 ymm7_2 ymm3_2;
sub ymm3_3 ymm7_3 ymm3_3;
sub ymm3_4 ymm7_4 ymm3_4;
sub ymm3_5 ymm7_5 ymm3_5;
sub ymm3_6 ymm7_6 ymm3_6;
sub ymm3_7 ymm7_7 ymm3_7;
sub ymm3_8 ymm7_8 ymm3_8;
sub ymm3_9 ymm7_9 ymm3_9;
sub ymm3_a ymm7_a ymm3_a;
sub ymm3_b ymm7_b ymm3_b;
sub ymm3_c ymm7_c ymm3_c;
sub ymm3_d ymm7_d ymm3_d;
sub ymm3_e ymm7_e ymm3_e;
sub ymm3_f ymm7_f ymm3_f;
(* vpaddw %ymm6,%ymm5,%ymm7                        #! PC = 0x5555555576f4 *)
add ymm7_0 ymm5_0 ymm6_0;
add ymm7_1 ymm5_1 ymm6_1;
add ymm7_2 ymm5_2 ymm6_2;
add ymm7_3 ymm5_3 ymm6_3;
add ymm7_4 ymm5_4 ymm6_4;
add ymm7_5 ymm5_5 ymm6_5;
add ymm7_6 ymm5_6 ymm6_6;
add ymm7_7 ymm5_7 ymm6_7;
add ymm7_8 ymm5_8 ymm6_8;
add ymm7_9 ymm5_9 ymm6_9;
add ymm7_a ymm5_a ymm6_a;
add ymm7_b ymm5_b ymm6_b;
add ymm7_c ymm5_c ymm6_c;
add ymm7_d ymm5_d ymm6_d;
add ymm7_e ymm5_e ymm6_e;
add ymm7_f ymm5_f ymm6_f;
(* vpsubw %ymm6,%ymm5,%ymm6                        #! PC = 0x5555555576f8 *)
sub ymm6_0 ymm5_0 ymm6_0;
sub ymm6_1 ymm5_1 ymm6_1;
sub ymm6_2 ymm5_2 ymm6_2;
sub ymm6_3 ymm5_3 ymm6_3;
sub ymm6_4 ymm5_4 ymm6_4;
sub ymm6_5 ymm5_5 ymm6_5;
sub ymm6_6 ymm5_6 ymm6_6;
sub ymm6_7 ymm5_7 ymm6_7;
sub ymm6_8 ymm5_8 ymm6_8;
sub ymm6_9 ymm5_9 ymm6_9;
sub ymm6_a ymm5_a ymm6_a;
sub ymm6_b ymm5_b ymm6_b;
sub ymm6_c ymm5_c ymm6_c;
sub ymm6_d ymm5_d ymm6_d;
sub ymm6_e ymm5_e ymm6_e;
sub ymm6_f ymm5_f ymm6_f;
(* vpaddw %ymm8,%ymm4,%ymm5                        #! PC = 0x5555555576fc *)
add ymm5_0 ymm4_0 ymm8_0;
add ymm5_1 ymm4_1 ymm8_1;
add ymm5_2 ymm4_2 ymm8_2;
add ymm5_3 ymm4_3 ymm8_3;
add ymm5_4 ymm4_4 ymm8_4;
add ymm5_5 ymm4_5 ymm8_5;
add ymm5_6 ymm4_6 ymm8_6;
add ymm5_7 ymm4_7 ymm8_7;
add ymm5_8 ymm4_8 ymm8_8;
add ymm5_9 ymm4_9 ymm8_9;
add ymm5_a ymm4_a ymm8_a;
add ymm5_b ymm4_b ymm8_b;
add ymm5_c ymm4_c ymm8_c;
add ymm5_d ymm4_d ymm8_d;
add ymm5_e ymm4_e ymm8_e;
add ymm5_f ymm4_f ymm8_f;
(* vpsubw %ymm8,%ymm4,%ymm8                        #! PC = 0x555555557701 *)
sub ymm8_0 ymm4_0 ymm8_0;
sub ymm8_1 ymm4_1 ymm8_1;
sub ymm8_2 ymm4_2 ymm8_2;
sub ymm8_3 ymm4_3 ymm8_3;
sub ymm8_4 ymm4_4 ymm8_4;
sub ymm8_5 ymm4_5 ymm8_5;
sub ymm8_6 ymm4_6 ymm8_6;
sub ymm8_7 ymm4_7 ymm8_7;
sub ymm8_8 ymm4_8 ymm8_8;
sub ymm8_9 ymm4_9 ymm8_9;
sub ymm8_a ymm4_a ymm8_a;
sub ymm8_b ymm4_b ymm8_b;
sub ymm8_c ymm4_c ymm8_c;
sub ymm8_d ymm4_d ymm8_d;
sub ymm8_e ymm4_e ymm8_e;
sub ymm8_f ymm4_f ymm8_f;
(* vpaddw %ymm11,%ymm10,%ymm4                      #! PC = 0x555555557706 *)
add ymm4_0 ymm10_0 ymm11_0;
add ymm4_1 ymm10_1 ymm11_1;
add ymm4_2 ymm10_2 ymm11_2;
add ymm4_3 ymm10_3 ymm11_3;
add ymm4_4 ymm10_4 ymm11_4;
add ymm4_5 ymm10_5 ymm11_5;
add ymm4_6 ymm10_6 ymm11_6;
add ymm4_7 ymm10_7 ymm11_7;
add ymm4_8 ymm10_8 ymm11_8;
add ymm4_9 ymm10_9 ymm11_9;
add ymm4_a ymm10_a ymm11_a;
add ymm4_b ymm10_b ymm11_b;
add ymm4_c ymm10_c ymm11_c;
add ymm4_d ymm10_d ymm11_d;
add ymm4_e ymm10_e ymm11_e;
add ymm4_f ymm10_f ymm11_f;
(* vpsubw %ymm11,%ymm10,%ymm11                     #! PC = 0x55555555770b *)
sub ymm11_0 ymm10_0 ymm11_0;
sub ymm11_1 ymm10_1 ymm11_1;
sub ymm11_2 ymm10_2 ymm11_2;
sub ymm11_3 ymm10_3 ymm11_3;
sub ymm11_4 ymm10_4 ymm11_4;
sub ymm11_5 ymm10_5 ymm11_5;
sub ymm11_6 ymm10_6 ymm11_6;
sub ymm11_7 ymm10_7 ymm11_7;
sub ymm11_8 ymm10_8 ymm11_8;
sub ymm11_9 ymm10_9 ymm11_9;
sub ymm11_a ymm10_a ymm11_a;
sub ymm11_b ymm10_b ymm11_b;
sub ymm11_c ymm10_c ymm11_c;
sub ymm11_d ymm10_d ymm11_d;
sub ymm11_e ymm10_e ymm11_e;
sub ymm11_f ymm10_f ymm11_f;



(**************** LEVELS 3-5, 0 *****************)


(**************** CUT 145,  2 *****************)

rcut 
  and [
(-11600)@16<=s ymm9_0,ymm9_0<=s 11600@16,(-11600)@16<=s ymm9_1,ymm9_1<=s 11600@16,
(-11600)@16<=s ymm9_2,ymm9_2<=s 11600@16,(-11600)@16<=s ymm9_3,ymm9_3<=s 11600@16,
(-11600)@16<=s ymm9_4,ymm9_4<=s 11600@16,(-11600)@16<=s ymm9_5,ymm9_5<=s 11600@16,
(-11600)@16<=s ymm9_6,ymm9_6<=s 11600@16,(-11600)@16<=s ymm9_7,ymm9_7<=s 11600@16,
(-11600)@16<=s ymm9_8,ymm9_8<=s 11600@16,(-11600)@16<=s ymm9_9,ymm9_9<=s 11600@16,
(-11600)@16<=s ymm9_a,ymm9_a<=s 11600@16,(-11600)@16<=s ymm9_b,ymm9_b<=s 11600@16,
(-11600)@16<=s ymm9_c,ymm9_c<=s 11600@16,(-11600)@16<=s ymm9_d,ymm9_d<=s 11600@16,
(-11600)@16<=s ymm9_e,ymm9_e<=s 11600@16,(-11600)@16<=s ymm9_f,ymm9_f<=s 11600@16,
(-11600)@16<=s ymm3_0,ymm3_0<=s 11600@16,(-11600)@16<=s ymm3_1,ymm3_1<=s 11600@16,
(-11600)@16<=s ymm3_2,ymm3_2<=s 11600@16,(-11600)@16<=s ymm3_3,ymm3_3<=s 11600@16,
(-11600)@16<=s ymm3_4,ymm3_4<=s 11600@16,(-11600)@16<=s ymm3_5,ymm3_5<=s 11600@16,
(-11600)@16<=s ymm3_6,ymm3_6<=s 11600@16,(-11600)@16<=s ymm3_7,ymm3_7<=s 11600@16,
(-11600)@16<=s ymm3_8,ymm3_8<=s 11600@16,(-11600)@16<=s ymm3_9,ymm3_9<=s 11600@16,
(-11600)@16<=s ymm3_a,ymm3_a<=s 11600@16,(-11600)@16<=s ymm3_b,ymm3_b<=s 11600@16,
(-11600)@16<=s ymm3_c,ymm3_c<=s 11600@16,(-11600)@16<=s ymm3_d,ymm3_d<=s 11600@16,
(-11600)@16<=s ymm3_e,ymm3_e<=s 11600@16,(-11600)@16<=s ymm3_f,ymm3_f<=s 11600@16,
(-11283)@16<=s ymm7_0,ymm7_0<=s 11283@16,(-11283)@16<=s ymm7_1,ymm7_1<=s 11283@16,
(-11283)@16<=s ymm7_2,ymm7_2<=s 11283@16,(-11283)@16<=s ymm7_3,ymm7_3<=s 11283@16,
(-11283)@16<=s ymm7_4,ymm7_4<=s 11283@16,(-11283)@16<=s ymm7_5,ymm7_5<=s 11283@16,
(-11283)@16<=s ymm7_6,ymm7_6<=s 11283@16,(-11283)@16<=s ymm7_7,ymm7_7<=s 11283@16,
(-11283)@16<=s ymm7_8,ymm7_8<=s 11283@16,(-11283)@16<=s ymm7_9,ymm7_9<=s 11283@16,
(-11283)@16<=s ymm7_a,ymm7_a<=s 11283@16,(-11283)@16<=s ymm7_b,ymm7_b<=s 11283@16,
(-11283)@16<=s ymm7_c,ymm7_c<=s 11283@16,(-11273)@16<=s ymm7_d,ymm7_d<=s 11273@16,
(-11273)@16<=s ymm7_e,ymm7_e<=s 11273@16,(-11273)@16<=s ymm7_f,ymm7_f<=s 11273@16,
(-11283)@16<=s ymm6_0,ymm6_0<=s 11283@16,(-11283)@16<=s ymm6_1,ymm6_1<=s 11283@16,
(-11283)@16<=s ymm6_2,ymm6_2<=s 11283@16,(-11283)@16<=s ymm6_3,ymm6_3<=s 11283@16,
(-11283)@16<=s ymm6_4,ymm6_4<=s 11283@16,(-11283)@16<=s ymm6_5,ymm6_5<=s 11283@16,
(-11283)@16<=s ymm6_6,ymm6_6<=s 11283@16,(-11283)@16<=s ymm6_7,ymm6_7<=s 11283@16,
(-11283)@16<=s ymm6_8,ymm6_8<=s 11283@16,(-11283)@16<=s ymm6_9,ymm6_9<=s 11283@16,
(-11283)@16<=s ymm6_a,ymm6_a<=s 11283@16,(-11283)@16<=s ymm6_b,ymm6_b<=s 11283@16,
(-11283)@16<=s ymm6_c,ymm6_c<=s 11283@16,(-11273)@16<=s ymm6_d,ymm6_d<=s 11273@16,
(-11273)@16<=s ymm6_e,ymm6_e<=s 11273@16,(-11273)@16<=s ymm6_f,ymm6_f<=s 11273@16,
(-28553)@16<=s ymm5_0,ymm5_0<=s 28553@16,(-28553)@16<=s ymm5_1,ymm5_1<=s 28553@16,
(-28553)@16<=s ymm5_2,ymm5_2<=s 28553@16,(-28553)@16<=s ymm5_3,ymm5_3<=s 28553@16,
(-28553)@16<=s ymm5_4,ymm5_4<=s 28553@16,(-28553)@16<=s ymm5_5,ymm5_5<=s 28553@16,
(-28553)@16<=s ymm5_6,ymm5_6<=s 28553@16,(-28553)@16<=s ymm5_7,ymm5_7<=s 28553@16,
(-28553)@16<=s ymm5_8,ymm5_8<=s 28553@16,(-28553)@16<=s ymm5_9,ymm5_9<=s 28553@16,
(-28553)@16<=s ymm5_a,ymm5_a<=s 28553@16,(-28553)@16<=s ymm5_b,ymm5_b<=s 28553@16,
(-28553)@16<=s ymm5_c,ymm5_c<=s 28553@16,(-28553)@16<=s ymm5_d,ymm5_d<=s 28553@16,
(-28553)@16<=s ymm5_e,ymm5_e<=s 28553@16,(-28553)@16<=s ymm5_f,ymm5_f<=s 28553@16,
(-28553)@16<=s ymm8_0,ymm8_0<=s 28553@16,(-28553)@16<=s ymm8_1,ymm8_1<=s 28553@16,
(-28553)@16<=s ymm8_2,ymm8_2<=s 28553@16,(-28553)@16<=s ymm8_3,ymm8_3<=s 28553@16,
(-28553)@16<=s ymm8_4,ymm8_4<=s 28553@16,(-28553)@16<=s ymm8_5,ymm8_5<=s 28553@16,
(-28553)@16<=s ymm8_6,ymm8_6<=s 28553@16,(-28553)@16<=s ymm8_7,ymm8_7<=s 28553@16,
(-28553)@16<=s ymm8_8,ymm8_8<=s 28553@16,(-28553)@16<=s ymm8_9,ymm8_9<=s 28553@16,
(-28553)@16<=s ymm8_a,ymm8_a<=s 28553@16,(-28553)@16<=s ymm8_b,ymm8_b<=s 28553@16,
(-28553)@16<=s ymm8_c,ymm8_c<=s 28553@16,(-28553)@16<=s ymm8_d,ymm8_d<=s 28553@16,
(-28553)@16<=s ymm8_e,ymm8_e<=s 28553@16,(-28553)@16<=s ymm8_f,ymm8_f<=s 28553@16,
(-28408)@16<=s ymm4_0,ymm4_0<=s 28408@16,(-28408)@16<=s ymm4_1,ymm4_1<=s 28408@16,
(-28408)@16<=s ymm4_2,ymm4_2<=s 28408@16,(-28408)@16<=s ymm4_3,ymm4_3<=s 28408@16,
(-28408)@16<=s ymm4_4,ymm4_4<=s 28408@16,(-28408)@16<=s ymm4_5,ymm4_5<=s 28408@16,
(-28408)@16<=s ymm4_6,ymm4_6<=s 28408@16,(-28408)@16<=s ymm4_7,ymm4_7<=s 28408@16,
(-28408)@16<=s ymm4_8,ymm4_8<=s 28408@16,(-28408)@16<=s ymm4_9,ymm4_9<=s 28408@16,
(-28408)@16<=s ymm4_a,ymm4_a<=s 28408@16,(-28408)@16<=s ymm4_b,ymm4_b<=s 28408@16,
(-28408)@16<=s ymm4_c,ymm4_c<=s 28408@16,(-28408)@16<=s ymm4_d,ymm4_d<=s 28408@16,
(-28408)@16<=s ymm4_e,ymm4_e<=s 28408@16,(-28408)@16<=s ymm4_f,ymm4_f<=s 28408@16,
(-28408)@16<=s ymm11_0,ymm11_0<=s 28408@16,(-28408)@16<=s ymm11_1,ymm11_1<=s 28408@16,
(-28408)@16<=s ymm11_2,ymm11_2<=s 28408@16,(-28408)@16<=s ymm11_3,ymm11_3<=s 28408@16,
(-28408)@16<=s ymm11_4,ymm11_4<=s 28408@16,(-28408)@16<=s ymm11_5,ymm11_5<=s 28408@16,
(-28408)@16<=s ymm11_6,ymm11_6<=s 28408@16,(-28408)@16<=s ymm11_7,ymm11_7<=s 28408@16,
(-28408)@16<=s ymm11_8,ymm11_8<=s 28408@16,(-28408)@16<=s ymm11_9,ymm11_9<=s 28408@16,
(-28408)@16<=s ymm11_a,ymm11_a<=s 28408@16,(-28408)@16<=s ymm11_b,ymm11_b<=s 28408@16,
(-28408)@16<=s ymm11_c,ymm11_c<=s 28408@16,(-28408)@16<=s ymm11_d,ymm11_d<=s 28408@16,
(-28408)@16<=s ymm11_e,ymm11_e<=s 28408@16,(-28408)@16<=s ymm11_f,ymm11_f<=s 28408@16
] prove with [ all ghosts, cuts [ 0 ] ];



(* vmovdqa 0x99c8(%rip),%ymm1        # 0x5555555610e0 <nttmul_idxdata+64>#! EA = L0x5555555610e0; Value = 0x0d0c090805040100; PC = 0x555555557710 *)
mov ymm1_0 L0x5555555610e0;
mov ymm1_1 L0x5555555610e2;
mov ymm1_2 L0x5555555610e4;
mov ymm1_3 L0x5555555610e6;
mov ymm1_4 L0x5555555610e8;
mov ymm1_5 L0x5555555610ea;
mov ymm1_6 L0x5555555610ec;
mov ymm1_7 L0x5555555610ee;
mov ymm1_8 L0x5555555610f0;
mov ymm1_9 L0x5555555610f2;
mov ymm1_a L0x5555555610f4;
mov ymm1_b L0x5555555610f6;
mov ymm1_c L0x5555555610f8;
mov ymm1_d L0x5555555610fa;
mov ymm1_e L0x5555555610fc;
mov ymm1_f L0x5555555610fe;
(* vpshufb %ymm1,%ymm9,%ymm9                       #! PC = 0x555555557718 *)
assert true && ymm1_0 = 0x0100@16;
mov shuf_0 ymm9_0;
assert true && ymm1_1 = 0x0504@16;
mov shuf_1 ymm9_2;
assert true && ymm1_2 = 0x0908@16;
mov shuf_2 ymm9_4;
assert true && ymm1_3 = 0x0d0c@16;
mov shuf_3 ymm9_6;
assert true && ymm1_4 = 0x0302@16;
mov shuf_4 ymm9_1;
assert true && ymm1_5 = 0x0706@16;
mov shuf_5 ymm9_3;
assert true && ymm1_6 = 0x0b0a@16;
mov shuf_6 ymm9_5;
assert true && ymm1_7 = 0x0f0e@16;
mov shuf_7 ymm9_7;
assert true && ymm1_8 = 0x0100@16;
mov shuf_8 ymm9_8;
assert true && ymm1_9 = 0x0504@16;
mov shuf_9 ymm9_a;
assert true && ymm1_a = 0x0908@16;
mov shuf_a ymm9_c;
assert true && ymm1_b = 0x0d0c@16;
mov shuf_b ymm9_e;
assert true && ymm1_c = 0x0302@16;
mov shuf_c ymm9_9;
assert true && ymm1_d = 0x0706@16;
mov shuf_d ymm9_b;
assert true && ymm1_e = 0x0b0a@16;
mov shuf_e ymm9_d;
assert true && ymm1_f = 0x0f0e@16;
mov shuf_f ymm9_f;
mov ymm9_0 shuf_0;
mov ymm9_1 shuf_1;
mov ymm9_2 shuf_2;
mov ymm9_3 shuf_3;
mov ymm9_4 shuf_4;
mov ymm9_5 shuf_5;
mov ymm9_6 shuf_6;
mov ymm9_7 shuf_7;
mov ymm9_8 shuf_8;
mov ymm9_9 shuf_9;
mov ymm9_a shuf_a;
mov ymm9_b shuf_b;
mov ymm9_c shuf_c;
mov ymm9_d shuf_d;
mov ymm9_e shuf_e;
mov ymm9_f shuf_f;
(* vpermq $0xd8,%ymm9,%ymm9                        #! PC = 0x55555555771d *)
mov permq_0 ymm9_0;
mov permq_1 ymm9_1;
mov permq_2 ymm9_2;
mov permq_3 ymm9_3;
mov permq_4 ymm9_8;
mov permq_5 ymm9_9;
mov permq_6 ymm9_a;
mov permq_7 ymm9_b;
mov permq_8 ymm9_4;
mov permq_9 ymm9_5;
mov permq_a ymm9_6;
mov permq_b ymm9_7;
mov permq_c ymm9_c;
mov permq_d ymm9_d;
mov permq_e ymm9_e;
mov permq_f ymm9_f;
mov ymm9_0 permq_0;
mov ymm9_1 permq_1;
mov ymm9_2 permq_2;
mov ymm9_3 permq_3;
mov ymm9_4 permq_4;
mov ymm9_5 permq_5;
mov ymm9_6 permq_6;
mov ymm9_7 permq_7;
mov ymm9_8 permq_8;
mov ymm9_9 permq_9;
mov ymm9_a permq_a;
mov ymm9_b permq_b;
mov ymm9_c permq_c;
mov ymm9_d permq_d;
mov ymm9_e permq_e;
mov ymm9_f permq_f;
(* vpshufb %ymm1,%ymm3,%ymm3                       #! PC = 0x555555557723 *)
assert true && ymm1_0 = 0x0100@16;
mov shuf_0 ymm3_0;
assert true && ymm1_1 = 0x0504@16;
mov shuf_1 ymm3_2;
assert true && ymm1_2 = 0x0908@16;
mov shuf_2 ymm3_4;
assert true && ymm1_3 = 0x0d0c@16;
mov shuf_3 ymm3_6;
assert true && ymm1_4 = 0x0302@16;
mov shuf_4 ymm3_1;
assert true && ymm1_5 = 0x0706@16;
mov shuf_5 ymm3_3;
assert true && ymm1_6 = 0x0b0a@16;
mov shuf_6 ymm3_5;
assert true && ymm1_7 = 0x0f0e@16;
mov shuf_7 ymm3_7;
assert true && ymm1_8 = 0x0100@16;
mov shuf_8 ymm3_8;
assert true && ymm1_9 = 0x0504@16;
mov shuf_9 ymm3_a;
assert true && ymm1_a = 0x0908@16;
mov shuf_a ymm3_c;
assert true && ymm1_b = 0x0d0c@16;
mov shuf_b ymm3_e;
assert true && ymm1_c = 0x0302@16;
mov shuf_c ymm3_9;
assert true && ymm1_d = 0x0706@16;
mov shuf_d ymm3_b;
assert true && ymm1_e = 0x0b0a@16;
mov shuf_e ymm3_d;
assert true && ymm1_f = 0x0f0e@16;
mov shuf_f ymm3_f;
mov ymm3_0 shuf_0;
mov ymm3_1 shuf_1;
mov ymm3_2 shuf_2;
mov ymm3_3 shuf_3;
mov ymm3_4 shuf_4;
mov ymm3_5 shuf_5;
mov ymm3_6 shuf_6;
mov ymm3_7 shuf_7;
mov ymm3_8 shuf_8;
mov ymm3_9 shuf_9;
mov ymm3_a shuf_a;
mov ymm3_b shuf_b;
mov ymm3_c shuf_c;
mov ymm3_d shuf_d;
mov ymm3_e shuf_e;
mov ymm3_f shuf_f;
(* vpermq $0xd8,%ymm3,%ymm3                        #! PC = 0x555555557728 *)
mov permq_0 ymm3_0;
mov permq_1 ymm3_1;
mov permq_2 ymm3_2;
mov permq_3 ymm3_3;
mov permq_4 ymm3_8;
mov permq_5 ymm3_9;
mov permq_6 ymm3_a;
mov permq_7 ymm3_b;
mov permq_8 ymm3_4;
mov permq_9 ymm3_5;
mov permq_a ymm3_6;
mov permq_b ymm3_7;
mov permq_c ymm3_c;
mov permq_d ymm3_d;
mov permq_e ymm3_e;
mov permq_f ymm3_f;
mov ymm3_0 permq_0;
mov ymm3_1 permq_1;
mov ymm3_2 permq_2;
mov ymm3_3 permq_3;
mov ymm3_4 permq_4;
mov ymm3_5 permq_5;
mov ymm3_6 permq_6;
mov ymm3_7 permq_7;
mov ymm3_8 permq_8;
mov ymm3_9 permq_9;
mov ymm3_a permq_a;
mov ymm3_b permq_b;
mov ymm3_c permq_c;
mov ymm3_d permq_d;
mov ymm3_e permq_e;
mov ymm3_f permq_f;
(* vpshufb %ymm1,%ymm7,%ymm7                       #! PC = 0x55555555772e *)
assert true && ymm1_0 = 0x0100@16;
mov shuf_0 ymm7_0;
assert true && ymm1_1 = 0x0504@16;
mov shuf_1 ymm7_2;
assert true && ymm1_2 = 0x0908@16;
mov shuf_2 ymm7_4;
assert true && ymm1_3 = 0x0d0c@16;
mov shuf_3 ymm7_6;
assert true && ymm1_4 = 0x0302@16;
mov shuf_4 ymm7_1;
assert true && ymm1_5 = 0x0706@16;
mov shuf_5 ymm7_3;
assert true && ymm1_6 = 0x0b0a@16;
mov shuf_6 ymm7_5;
assert true && ymm1_7 = 0x0f0e@16;
mov shuf_7 ymm7_7;
assert true && ymm1_8 = 0x0100@16;
mov shuf_8 ymm7_8;
assert true && ymm1_9 = 0x0504@16;
mov shuf_9 ymm7_a;
assert true && ymm1_a = 0x0908@16;
mov shuf_a ymm7_c;
assert true && ymm1_b = 0x0d0c@16;
mov shuf_b ymm7_e;
assert true && ymm1_c = 0x0302@16;
mov shuf_c ymm7_9;
assert true && ymm1_d = 0x0706@16;
mov shuf_d ymm7_b;
assert true && ymm1_e = 0x0b0a@16;
mov shuf_e ymm7_d;
assert true && ymm1_f = 0x0f0e@16;
mov shuf_f ymm7_f;
mov ymm7_0 shuf_0;
mov ymm7_1 shuf_1;
mov ymm7_2 shuf_2;
mov ymm7_3 shuf_3;
mov ymm7_4 shuf_4;
mov ymm7_5 shuf_5;
mov ymm7_6 shuf_6;
mov ymm7_7 shuf_7;
mov ymm7_8 shuf_8;
mov ymm7_9 shuf_9;
mov ymm7_a shuf_a;
mov ymm7_b shuf_b;
mov ymm7_c shuf_c;
mov ymm7_d shuf_d;
mov ymm7_e shuf_e;
mov ymm7_f shuf_f;
(* vpermq $0xd8,%ymm7,%ymm7                        #! PC = 0x555555557733 *)
mov permq_0 ymm7_0;
mov permq_1 ymm7_1;
mov permq_2 ymm7_2;
mov permq_3 ymm7_3;
mov permq_4 ymm7_8;
mov permq_5 ymm7_9;
mov permq_6 ymm7_a;
mov permq_7 ymm7_b;
mov permq_8 ymm7_4;
mov permq_9 ymm7_5;
mov permq_a ymm7_6;
mov permq_b ymm7_7;
mov permq_c ymm7_c;
mov permq_d ymm7_d;
mov permq_e ymm7_e;
mov permq_f ymm7_f;
mov ymm7_0 permq_0;
mov ymm7_1 permq_1;
mov ymm7_2 permq_2;
mov ymm7_3 permq_3;
mov ymm7_4 permq_4;
mov ymm7_5 permq_5;
mov ymm7_6 permq_6;
mov ymm7_7 permq_7;
mov ymm7_8 permq_8;
mov ymm7_9 permq_9;
mov ymm7_a permq_a;
mov ymm7_b permq_b;
mov ymm7_c permq_c;
mov ymm7_d permq_d;
mov ymm7_e permq_e;
mov ymm7_f permq_f;
(* vpshufb %ymm1,%ymm6,%ymm6                       #! PC = 0x555555557739 *)
assert true && ymm1_0 = 0x0100@16;
mov shuf_0 ymm6_0;
assert true && ymm1_1 = 0x0504@16;
mov shuf_1 ymm6_2;
assert true && ymm1_2 = 0x0908@16;
mov shuf_2 ymm6_4;
assert true && ymm1_3 = 0x0d0c@16;
mov shuf_3 ymm6_6;
assert true && ymm1_4 = 0x0302@16;
mov shuf_4 ymm6_1;
assert true && ymm1_5 = 0x0706@16;
mov shuf_5 ymm6_3;
assert true && ymm1_6 = 0x0b0a@16;
mov shuf_6 ymm6_5;
assert true && ymm1_7 = 0x0f0e@16;
mov shuf_7 ymm6_7;
assert true && ymm1_8 = 0x0100@16;
mov shuf_8 ymm6_8;
assert true && ymm1_9 = 0x0504@16;
mov shuf_9 ymm6_a;
assert true && ymm1_a = 0x0908@16;
mov shuf_a ymm6_c;
assert true && ymm1_b = 0x0d0c@16;
mov shuf_b ymm6_e;
assert true && ymm1_c = 0x0302@16;
mov shuf_c ymm6_9;
assert true && ymm1_d = 0x0706@16;
mov shuf_d ymm6_b;
assert true && ymm1_e = 0x0b0a@16;
mov shuf_e ymm6_d;
assert true && ymm1_f = 0x0f0e@16;
mov shuf_f ymm6_f;
mov ymm6_0 shuf_0;
mov ymm6_1 shuf_1;
mov ymm6_2 shuf_2;
mov ymm6_3 shuf_3;
mov ymm6_4 shuf_4;
mov ymm6_5 shuf_5;
mov ymm6_6 shuf_6;
mov ymm6_7 shuf_7;
mov ymm6_8 shuf_8;
mov ymm6_9 shuf_9;
mov ymm6_a shuf_a;
mov ymm6_b shuf_b;
mov ymm6_c shuf_c;
mov ymm6_d shuf_d;
mov ymm6_e shuf_e;
mov ymm6_f shuf_f;
(* vpermq $0xd8,%ymm6,%ymm6                        #! PC = 0x55555555773e *)
mov permq_0 ymm6_0;
mov permq_1 ymm6_1;
mov permq_2 ymm6_2;
mov permq_3 ymm6_3;
mov permq_4 ymm6_8;
mov permq_5 ymm6_9;
mov permq_6 ymm6_a;
mov permq_7 ymm6_b;
mov permq_8 ymm6_4;
mov permq_9 ymm6_5;
mov permq_a ymm6_6;
mov permq_b ymm6_7;
mov permq_c ymm6_c;
mov permq_d ymm6_d;
mov permq_e ymm6_e;
mov permq_f ymm6_f;
mov ymm6_0 permq_0;
mov ymm6_1 permq_1;
mov ymm6_2 permq_2;
mov ymm6_3 permq_3;
mov ymm6_4 permq_4;
mov ymm6_5 permq_5;
mov ymm6_6 permq_6;
mov ymm6_7 permq_7;
mov ymm6_8 permq_8;
mov ymm6_9 permq_9;
mov ymm6_a permq_a;
mov ymm6_b permq_b;
mov ymm6_c permq_c;
mov ymm6_d permq_d;
mov ymm6_e permq_e;
mov ymm6_f permq_f;
(* vpshufb %ymm1,%ymm5,%ymm5                       #! PC = 0x555555557744 *)
assert true && ymm1_0 = 0x0100@16;
mov shuf_0 ymm5_0;
assert true && ymm1_1 = 0x0504@16;
mov shuf_1 ymm5_2;
assert true && ymm1_2 = 0x0908@16;
mov shuf_2 ymm5_4;
assert true && ymm1_3 = 0x0d0c@16;
mov shuf_3 ymm5_6;
assert true && ymm1_4 = 0x0302@16;
mov shuf_4 ymm5_1;
assert true && ymm1_5 = 0x0706@16;
mov shuf_5 ymm5_3;
assert true && ymm1_6 = 0x0b0a@16;
mov shuf_6 ymm5_5;
assert true && ymm1_7 = 0x0f0e@16;
mov shuf_7 ymm5_7;
assert true && ymm1_8 = 0x0100@16;
mov shuf_8 ymm5_8;
assert true && ymm1_9 = 0x0504@16;
mov shuf_9 ymm5_a;
assert true && ymm1_a = 0x0908@16;
mov shuf_a ymm5_c;
assert true && ymm1_b = 0x0d0c@16;
mov shuf_b ymm5_e;
assert true && ymm1_c = 0x0302@16;
mov shuf_c ymm5_9;
assert true && ymm1_d = 0x0706@16;
mov shuf_d ymm5_b;
assert true && ymm1_e = 0x0b0a@16;
mov shuf_e ymm5_d;
assert true && ymm1_f = 0x0f0e@16;
mov shuf_f ymm5_f;
mov ymm5_0 shuf_0;
mov ymm5_1 shuf_1;
mov ymm5_2 shuf_2;
mov ymm5_3 shuf_3;
mov ymm5_4 shuf_4;
mov ymm5_5 shuf_5;
mov ymm5_6 shuf_6;
mov ymm5_7 shuf_7;
mov ymm5_8 shuf_8;
mov ymm5_9 shuf_9;
mov ymm5_a shuf_a;
mov ymm5_b shuf_b;
mov ymm5_c shuf_c;
mov ymm5_d shuf_d;
mov ymm5_e shuf_e;
mov ymm5_f shuf_f;
(* vpermq $0xd8,%ymm5,%ymm5                        #! PC = 0x555555557749 *)
mov permq_0 ymm5_0;
mov permq_1 ymm5_1;
mov permq_2 ymm5_2;
mov permq_3 ymm5_3;
mov permq_4 ymm5_8;
mov permq_5 ymm5_9;
mov permq_6 ymm5_a;
mov permq_7 ymm5_b;
mov permq_8 ymm5_4;
mov permq_9 ymm5_5;
mov permq_a ymm5_6;
mov permq_b ymm5_7;
mov permq_c ymm5_c;
mov permq_d ymm5_d;
mov permq_e ymm5_e;
mov permq_f ymm5_f;
mov ymm5_0 permq_0;
mov ymm5_1 permq_1;
mov ymm5_2 permq_2;
mov ymm5_3 permq_3;
mov ymm5_4 permq_4;
mov ymm5_5 permq_5;
mov ymm5_6 permq_6;
mov ymm5_7 permq_7;
mov ymm5_8 permq_8;
mov ymm5_9 permq_9;
mov ymm5_a permq_a;
mov ymm5_b permq_b;
mov ymm5_c permq_c;
mov ymm5_d permq_d;
mov ymm5_e permq_e;
mov ymm5_f permq_f;
(* vpshufb %ymm1,%ymm8,%ymm8                       #! PC = 0x55555555774f *)
assert true && ymm1_0 = 0x0100@16;
mov shuf_0 ymm8_0;
assert true && ymm1_1 = 0x0504@16;
mov shuf_1 ymm8_2;
assert true && ymm1_2 = 0x0908@16;
mov shuf_2 ymm8_4;
assert true && ymm1_3 = 0x0d0c@16;
mov shuf_3 ymm8_6;
assert true && ymm1_4 = 0x0302@16;
mov shuf_4 ymm8_1;
assert true && ymm1_5 = 0x0706@16;
mov shuf_5 ymm8_3;
assert true && ymm1_6 = 0x0b0a@16;
mov shuf_6 ymm8_5;
assert true && ymm1_7 = 0x0f0e@16;
mov shuf_7 ymm8_7;
assert true && ymm1_8 = 0x0100@16;
mov shuf_8 ymm8_8;
assert true && ymm1_9 = 0x0504@16;
mov shuf_9 ymm8_a;
assert true && ymm1_a = 0x0908@16;
mov shuf_a ymm8_c;
assert true && ymm1_b = 0x0d0c@16;
mov shuf_b ymm8_e;
assert true && ymm1_c = 0x0302@16;
mov shuf_c ymm8_9;
assert true && ymm1_d = 0x0706@16;
mov shuf_d ymm8_b;
assert true && ymm1_e = 0x0b0a@16;
mov shuf_e ymm8_d;
assert true && ymm1_f = 0x0f0e@16;
mov shuf_f ymm8_f;
mov ymm8_0 shuf_0;
mov ymm8_1 shuf_1;
mov ymm8_2 shuf_2;
mov ymm8_3 shuf_3;
mov ymm8_4 shuf_4;
mov ymm8_5 shuf_5;
mov ymm8_6 shuf_6;
mov ymm8_7 shuf_7;
mov ymm8_8 shuf_8;
mov ymm8_9 shuf_9;
mov ymm8_a shuf_a;
mov ymm8_b shuf_b;
mov ymm8_c shuf_c;
mov ymm8_d shuf_d;
mov ymm8_e shuf_e;
mov ymm8_f shuf_f;
(* vpermq $0xd8,%ymm8,%ymm8                        #! PC = 0x555555557754 *)
mov permq_0 ymm8_0;
mov permq_1 ymm8_1;
mov permq_2 ymm8_2;
mov permq_3 ymm8_3;
mov permq_4 ymm8_8;
mov permq_5 ymm8_9;
mov permq_6 ymm8_a;
mov permq_7 ymm8_b;
mov permq_8 ymm8_4;
mov permq_9 ymm8_5;
mov permq_a ymm8_6;
mov permq_b ymm8_7;
mov permq_c ymm8_c;
mov permq_d ymm8_d;
mov permq_e ymm8_e;
mov permq_f ymm8_f;
mov ymm8_0 permq_0;
mov ymm8_1 permq_1;
mov ymm8_2 permq_2;
mov ymm8_3 permq_3;
mov ymm8_4 permq_4;
mov ymm8_5 permq_5;
mov ymm8_6 permq_6;
mov ymm8_7 permq_7;
mov ymm8_8 permq_8;
mov ymm8_9 permq_9;
mov ymm8_a permq_a;
mov ymm8_b permq_b;
mov ymm8_c permq_c;
mov ymm8_d permq_d;
mov ymm8_e permq_e;
mov ymm8_f permq_f;
(* vpshufb %ymm1,%ymm4,%ymm4                       #! PC = 0x55555555775a *)
assert true && ymm1_0 = 0x0100@16;
mov shuf_0 ymm4_0;
assert true && ymm1_1 = 0x0504@16;
mov shuf_1 ymm4_2;
assert true && ymm1_2 = 0x0908@16;
mov shuf_2 ymm4_4;
assert true && ymm1_3 = 0x0d0c@16;
mov shuf_3 ymm4_6;
assert true && ymm1_4 = 0x0302@16;
mov shuf_4 ymm4_1;
assert true && ymm1_5 = 0x0706@16;
mov shuf_5 ymm4_3;
assert true && ymm1_6 = 0x0b0a@16;
mov shuf_6 ymm4_5;
assert true && ymm1_7 = 0x0f0e@16;
mov shuf_7 ymm4_7;
assert true && ymm1_8 = 0x0100@16;
mov shuf_8 ymm4_8;
assert true && ymm1_9 = 0x0504@16;
mov shuf_9 ymm4_a;
assert true && ymm1_a = 0x0908@16;
mov shuf_a ymm4_c;
assert true && ymm1_b = 0x0d0c@16;
mov shuf_b ymm4_e;
assert true && ymm1_c = 0x0302@16;
mov shuf_c ymm4_9;
assert true && ymm1_d = 0x0706@16;
mov shuf_d ymm4_b;
assert true && ymm1_e = 0x0b0a@16;
mov shuf_e ymm4_d;
assert true && ymm1_f = 0x0f0e@16;
mov shuf_f ymm4_f;
mov ymm4_0 shuf_0;
mov ymm4_1 shuf_1;
mov ymm4_2 shuf_2;
mov ymm4_3 shuf_3;
mov ymm4_4 shuf_4;
mov ymm4_5 shuf_5;
mov ymm4_6 shuf_6;
mov ymm4_7 shuf_7;
mov ymm4_8 shuf_8;
mov ymm4_9 shuf_9;
mov ymm4_a shuf_a;
mov ymm4_b shuf_b;
mov ymm4_c shuf_c;
mov ymm4_d shuf_d;
mov ymm4_e shuf_e;
mov ymm4_f shuf_f;
(* vpermq $0xd8,%ymm4,%ymm4                        #! PC = 0x55555555775f *)
mov permq_0 ymm4_0;
mov permq_1 ymm4_1;
mov permq_2 ymm4_2;
mov permq_3 ymm4_3;
mov permq_4 ymm4_8;
mov permq_5 ymm4_9;
mov permq_6 ymm4_a;
mov permq_7 ymm4_b;
mov permq_8 ymm4_4;
mov permq_9 ymm4_5;
mov permq_a ymm4_6;
mov permq_b ymm4_7;
mov permq_c ymm4_c;
mov permq_d ymm4_d;
mov permq_e ymm4_e;
mov permq_f ymm4_f;
mov ymm4_0 permq_0;
mov ymm4_1 permq_1;
mov ymm4_2 permq_2;
mov ymm4_3 permq_3;
mov ymm4_4 permq_4;
mov ymm4_5 permq_5;
mov ymm4_6 permq_6;
mov ymm4_7 permq_7;
mov ymm4_8 permq_8;
mov ymm4_9 permq_9;
mov ymm4_a permq_a;
mov ymm4_b permq_b;
mov ymm4_c permq_c;
mov ymm4_d permq_d;
mov ymm4_e permq_e;
mov ymm4_f permq_f;
(* vpshufb %ymm1,%ymm11,%ymm11                     #! PC = 0x555555557765 *)
assert true && ymm1_0 = 0x0100@16;
mov shuf_0 ymm11_0;
assert true && ymm1_1 = 0x0504@16;
mov shuf_1 ymm11_2;
assert true && ymm1_2 = 0x0908@16;
mov shuf_2 ymm11_4;
assert true && ymm1_3 = 0x0d0c@16;
mov shuf_3 ymm11_6;
assert true && ymm1_4 = 0x0302@16;
mov shuf_4 ymm11_1;
assert true && ymm1_5 = 0x0706@16;
mov shuf_5 ymm11_3;
assert true && ymm1_6 = 0x0b0a@16;
mov shuf_6 ymm11_5;
assert true && ymm1_7 = 0x0f0e@16;
mov shuf_7 ymm11_7;
assert true && ymm1_8 = 0x0100@16;
mov shuf_8 ymm11_8;
assert true && ymm1_9 = 0x0504@16;
mov shuf_9 ymm11_a;
assert true && ymm1_a = 0x0908@16;
mov shuf_a ymm11_c;
assert true && ymm1_b = 0x0d0c@16;
mov shuf_b ymm11_e;
assert true && ymm1_c = 0x0302@16;
mov shuf_c ymm11_9;
assert true && ymm1_d = 0x0706@16;
mov shuf_d ymm11_b;
assert true && ymm1_e = 0x0b0a@16;
mov shuf_e ymm11_d;
assert true && ymm1_f = 0x0f0e@16;
mov shuf_f ymm11_f;
mov ymm11_0 shuf_0;
mov ymm11_1 shuf_1;
mov ymm11_2 shuf_2;
mov ymm11_3 shuf_3;
mov ymm11_4 shuf_4;
mov ymm11_5 shuf_5;
mov ymm11_6 shuf_6;
mov ymm11_7 shuf_7;
mov ymm11_8 shuf_8;
mov ymm11_9 shuf_9;
mov ymm11_a shuf_a;
mov ymm11_b shuf_b;
mov ymm11_c shuf_c;
mov ymm11_d shuf_d;
mov ymm11_e shuf_e;
mov ymm11_f shuf_f;
(* vpermq $0xd8,%ymm11,%ymm11                      #! PC = 0x55555555776a *)
mov permq_0 ymm11_0;
mov permq_1 ymm11_1;
mov permq_2 ymm11_2;
mov permq_3 ymm11_3;
mov permq_4 ymm11_8;
mov permq_5 ymm11_9;
mov permq_6 ymm11_a;
mov permq_7 ymm11_b;
mov permq_8 ymm11_4;
mov permq_9 ymm11_5;
mov permq_a ymm11_6;
mov permq_b ymm11_7;
mov permq_c ymm11_c;
mov permq_d ymm11_d;
mov permq_e ymm11_e;
mov permq_f ymm11_f;
mov ymm11_0 permq_0;
mov ymm11_1 permq_1;
mov ymm11_2 permq_2;
mov ymm11_3 permq_3;
mov ymm11_4 permq_4;
mov ymm11_5 permq_5;
mov ymm11_6 permq_6;
mov ymm11_7 permq_7;
mov ymm11_8 permq_8;
mov ymm11_9 permq_9;
mov ymm11_a permq_a;
mov ymm11_b permq_b;
mov ymm11_c permq_c;
mov ymm11_d permq_d;
mov ymm11_e permq_e;
mov ymm11_f permq_f;
(* vpunpcklwd %ymm3,%ymm9,%ymm10                   #! PC = 0x555555557770 *)
mov lwd_0 ymm9_0;
mov lwd_1 ymm3_0;
mov lwd_2 ymm9_1;
mov lwd_3 ymm3_1;
mov lwd_4 ymm9_2;
mov lwd_5 ymm3_2;
mov lwd_6 ymm9_3;
mov lwd_7 ymm3_3;
mov lwd_8 ymm9_8;
mov lwd_9 ymm3_8;
mov lwd_a ymm9_9;
mov lwd_b ymm3_9;
mov lwd_c ymm9_a;
mov lwd_d ymm3_a;
mov lwd_e ymm9_b;
mov lwd_f ymm3_b;
mov ymm10_0 lwd_0;
mov ymm10_1 lwd_1;
mov ymm10_2 lwd_2;
mov ymm10_3 lwd_3;
mov ymm10_4 lwd_4;
mov ymm10_5 lwd_5;
mov ymm10_6 lwd_6;
mov ymm10_7 lwd_7;
mov ymm10_8 lwd_8;
mov ymm10_9 lwd_9;
mov ymm10_a lwd_a;
mov ymm10_b lwd_b;
mov ymm10_c lwd_c;
mov ymm10_d lwd_d;
mov ymm10_e lwd_e;
mov ymm10_f lwd_f;
(* vpunpckhwd %ymm3,%ymm9,%ymm3                    #! PC = 0x555555557774 *)
mov hwd_0 ymm9_4;
mov hwd_1 ymm3_4;
mov hwd_2 ymm9_5;
mov hwd_3 ymm3_5;
mov hwd_4 ymm9_6;
mov hwd_5 ymm3_6;
mov hwd_6 ymm9_7;
mov hwd_7 ymm3_7;
mov hwd_8 ymm9_c;
mov hwd_9 ymm3_c;
mov hwd_a ymm9_d;
mov hwd_b ymm3_d;
mov hwd_c ymm9_e;
mov hwd_d ymm3_e;
mov hwd_e ymm9_f;
mov hwd_f ymm3_f;
mov ymm3_0 hwd_0;
mov ymm3_1 hwd_1;
mov ymm3_2 hwd_2;
mov ymm3_3 hwd_3;
mov ymm3_4 hwd_4;
mov ymm3_5 hwd_5;
mov ymm3_6 hwd_6;
mov ymm3_7 hwd_7;
mov ymm3_8 hwd_8;
mov ymm3_9 hwd_9;
mov ymm3_a hwd_a;
mov ymm3_b hwd_b;
mov ymm3_c hwd_c;
mov ymm3_d hwd_d;
mov ymm3_e hwd_e;
mov ymm3_f hwd_f;
(* vpunpcklwd %ymm6,%ymm7,%ymm9                    #! PC = 0x555555557778 *)
mov lwd_0 ymm7_0;
mov lwd_1 ymm6_0;
mov lwd_2 ymm7_1;
mov lwd_3 ymm6_1;
mov lwd_4 ymm7_2;
mov lwd_5 ymm6_2;
mov lwd_6 ymm7_3;
mov lwd_7 ymm6_3;
mov lwd_8 ymm7_8;
mov lwd_9 ymm6_8;
mov lwd_a ymm7_9;
mov lwd_b ymm6_9;
mov lwd_c ymm7_a;
mov lwd_d ymm6_a;
mov lwd_e ymm7_b;
mov lwd_f ymm6_b;
mov ymm9_0 lwd_0;
mov ymm9_1 lwd_1;
mov ymm9_2 lwd_2;
mov ymm9_3 lwd_3;
mov ymm9_4 lwd_4;
mov ymm9_5 lwd_5;
mov ymm9_6 lwd_6;
mov ymm9_7 lwd_7;
mov ymm9_8 lwd_8;
mov ymm9_9 lwd_9;
mov ymm9_a lwd_a;
mov ymm9_b lwd_b;
mov ymm9_c lwd_c;
mov ymm9_d lwd_d;
mov ymm9_e lwd_e;
mov ymm9_f lwd_f;
(* vpunpckhwd %ymm6,%ymm7,%ymm6                    #! PC = 0x55555555777c *)
mov hwd_0 ymm7_4;
mov hwd_1 ymm6_4;
mov hwd_2 ymm7_5;
mov hwd_3 ymm6_5;
mov hwd_4 ymm7_6;
mov hwd_5 ymm6_6;
mov hwd_6 ymm7_7;
mov hwd_7 ymm6_7;
mov hwd_8 ymm7_c;
mov hwd_9 ymm6_c;
mov hwd_a ymm7_d;
mov hwd_b ymm6_d;
mov hwd_c ymm7_e;
mov hwd_d ymm6_e;
mov hwd_e ymm7_f;
mov hwd_f ymm6_f;
mov ymm6_0 hwd_0;
mov ymm6_1 hwd_1;
mov ymm6_2 hwd_2;
mov ymm6_3 hwd_3;
mov ymm6_4 hwd_4;
mov ymm6_5 hwd_5;
mov ymm6_6 hwd_6;
mov ymm6_7 hwd_7;
mov ymm6_8 hwd_8;
mov ymm6_9 hwd_9;
mov ymm6_a hwd_a;
mov ymm6_b hwd_b;
mov ymm6_c hwd_c;
mov ymm6_d hwd_d;
mov ymm6_e hwd_e;
mov ymm6_f hwd_f;
(* vpunpcklwd %ymm8,%ymm5,%ymm7                    #! PC = 0x555555557780 *)
mov lwd_0 ymm5_0;
mov lwd_1 ymm8_0;
mov lwd_2 ymm5_1;
mov lwd_3 ymm8_1;
mov lwd_4 ymm5_2;
mov lwd_5 ymm8_2;
mov lwd_6 ymm5_3;
mov lwd_7 ymm8_3;
mov lwd_8 ymm5_8;
mov lwd_9 ymm8_8;
mov lwd_a ymm5_9;
mov lwd_b ymm8_9;
mov lwd_c ymm5_a;
mov lwd_d ymm8_a;
mov lwd_e ymm5_b;
mov lwd_f ymm8_b;
mov ymm7_0 lwd_0;
mov ymm7_1 lwd_1;
mov ymm7_2 lwd_2;
mov ymm7_3 lwd_3;
mov ymm7_4 lwd_4;
mov ymm7_5 lwd_5;
mov ymm7_6 lwd_6;
mov ymm7_7 lwd_7;
mov ymm7_8 lwd_8;
mov ymm7_9 lwd_9;
mov ymm7_a lwd_a;
mov ymm7_b lwd_b;
mov ymm7_c lwd_c;
mov ymm7_d lwd_d;
mov ymm7_e lwd_e;
mov ymm7_f lwd_f;
(* vpunpckhwd %ymm8,%ymm5,%ymm8                    #! PC = 0x555555557785 *)
mov hwd_0 ymm5_4;
mov hwd_1 ymm8_4;
mov hwd_2 ymm5_5;
mov hwd_3 ymm8_5;
mov hwd_4 ymm5_6;
mov hwd_5 ymm8_6;
mov hwd_6 ymm5_7;
mov hwd_7 ymm8_7;
mov hwd_8 ymm5_c;
mov hwd_9 ymm8_c;
mov hwd_a ymm5_d;
mov hwd_b ymm8_d;
mov hwd_c ymm5_e;
mov hwd_d ymm8_e;
mov hwd_e ymm5_f;
mov hwd_f ymm8_f;
mov ymm8_0 hwd_0;
mov ymm8_1 hwd_1;
mov ymm8_2 hwd_2;
mov ymm8_3 hwd_3;
mov ymm8_4 hwd_4;
mov ymm8_5 hwd_5;
mov ymm8_6 hwd_6;
mov ymm8_7 hwd_7;
mov ymm8_8 hwd_8;
mov ymm8_9 hwd_9;
mov ymm8_a hwd_a;
mov ymm8_b hwd_b;
mov ymm8_c hwd_c;
mov ymm8_d hwd_d;
mov ymm8_e hwd_e;
mov ymm8_f hwd_f;
(* vpunpcklwd %ymm11,%ymm4,%ymm5                   #! PC = 0x55555555778a *)
mov lwd_0 ymm4_0;
mov lwd_1 ymm11_0;
mov lwd_2 ymm4_1;
mov lwd_3 ymm11_1;
mov lwd_4 ymm4_2;
mov lwd_5 ymm11_2;
mov lwd_6 ymm4_3;
mov lwd_7 ymm11_3;
mov lwd_8 ymm4_8;
mov lwd_9 ymm11_8;
mov lwd_a ymm4_9;
mov lwd_b ymm11_9;
mov lwd_c ymm4_a;
mov lwd_d ymm11_a;
mov lwd_e ymm4_b;
mov lwd_f ymm11_b;
mov ymm5_0 lwd_0;
mov ymm5_1 lwd_1;
mov ymm5_2 lwd_2;
mov ymm5_3 lwd_3;
mov ymm5_4 lwd_4;
mov ymm5_5 lwd_5;
mov ymm5_6 lwd_6;
mov ymm5_7 lwd_7;
mov ymm5_8 lwd_8;
mov ymm5_9 lwd_9;
mov ymm5_a lwd_a;
mov ymm5_b lwd_b;
mov ymm5_c lwd_c;
mov ymm5_d lwd_d;
mov ymm5_e lwd_e;
mov ymm5_f lwd_f;
(* vpunpckhwd %ymm11,%ymm4,%ymm11                  #! PC = 0x55555555778f *)
mov hwd_0 ymm4_4;
mov hwd_1 ymm11_4;
mov hwd_2 ymm4_5;
mov hwd_3 ymm11_5;
mov hwd_4 ymm4_6;
mov hwd_5 ymm11_6;
mov hwd_6 ymm4_7;
mov hwd_7 ymm11_7;
mov hwd_8 ymm4_c;
mov hwd_9 ymm11_c;
mov hwd_a ymm4_d;
mov hwd_b ymm11_d;
mov hwd_c ymm4_e;
mov hwd_d ymm11_e;
mov hwd_e ymm4_f;
mov hwd_f ymm11_f;
mov ymm11_0 hwd_0;
mov ymm11_1 hwd_1;
mov ymm11_2 hwd_2;
mov ymm11_3 hwd_3;
mov ymm11_4 hwd_4;
mov ymm11_5 hwd_5;
mov ymm11_6 hwd_6;
mov ymm11_7 hwd_7;
mov ymm11_8 hwd_8;
mov ymm11_9 hwd_9;
mov ymm11_a hwd_a;
mov ymm11_b hwd_b;
mov ymm11_c hwd_c;
mov ymm11_d hwd_d;
mov ymm11_e hwd_e;
mov ymm11_f hwd_f;
(* vpbroadcastd 0x100(%rdx),%ymm1                  #! EA = L0x555555561220; Value = 0x0198f85c6adffffa; PC = 0x555555557794 *)
mov ymm1_0 L0x555555561220;
mov ymm1_1 L0x555555561222;
mov ymm1_2 L0x555555561220;
mov ymm1_3 L0x555555561222;
mov ymm1_4 L0x555555561220;
mov ymm1_5 L0x555555561222;
mov ymm1_6 L0x555555561220;
mov ymm1_7 L0x555555561222;
mov ymm1_8 L0x555555561220;
mov ymm1_9 L0x555555561222;
mov ymm1_a L0x555555561220;
mov ymm1_b L0x555555561222;
mov ymm1_c L0x555555561220;
mov ymm1_d L0x555555561222;
mov ymm1_e L0x555555561220;
mov ymm1_f L0x555555561222;
(* vpbroadcastd 0x300(%rdx),%ymm2                  #! EA = L0x555555561420; Value = 0xf198105c00df03fa; PC = 0x55555555779d *)
mov ymm2_0 L0x555555561420;
mov ymm2_1 L0x555555561422;
mov ymm2_2 L0x555555561420;
mov ymm2_3 L0x555555561422;
mov ymm2_4 L0x555555561420;
mov ymm2_5 L0x555555561422;
mov ymm2_6 L0x555555561420;
mov ymm2_7 L0x555555561422;
mov ymm2_8 L0x555555561420;
mov ymm2_9 L0x555555561422;
mov ymm2_a L0x555555561420;
mov ymm2_b L0x555555561422;
mov ymm2_c L0x555555561420;
mov ymm2_d L0x555555561422;
mov ymm2_e L0x555555561420;
mov ymm2_f L0x555555561422;
(* vpmullw %ymm1,%ymm3,%ymm4                       #! PC = 0x5555555577a6 *)
smull mulHymm3_0 mulL_0 ymm1_0 ymm3_0;
smull mulHymm3_1 mulL_1 ymm1_1 ymm3_1;
smull mulHymm3_2 mulL_2 ymm1_2 ymm3_2;
smull mulHymm3_3 mulL_3 ymm1_3 ymm3_3;
smull mulHymm3_4 mulL_4 ymm1_4 ymm3_4;
smull mulHymm3_5 mulL_5 ymm1_5 ymm3_5;
smull mulHymm3_6 mulL_6 ymm1_6 ymm3_6;
smull mulHymm3_7 mulL_7 ymm1_7 ymm3_7;
smull mulHymm3_8 mulL_8 ymm1_8 ymm3_8;
smull mulHymm3_9 mulL_9 ymm1_9 ymm3_9;
smull mulHymm3_a mulL_a ymm1_a ymm3_a;
smull mulHymm3_b mulL_b ymm1_b ymm3_b;
smull mulHymm3_c mulL_c ymm1_c ymm3_c;
smull mulHymm3_d mulL_d ymm1_d ymm3_d;
smull mulHymm3_e mulL_e ymm1_e ymm3_e;
smull mulHymm3_f mulL_f ymm1_f ymm3_f;
cast ymm4_0@sint16 mulL_0;
cast ymm4_1@sint16 mulL_1;
cast ymm4_2@sint16 mulL_2;
cast ymm4_3@sint16 mulL_3;
cast ymm4_4@sint16 mulL_4;
cast ymm4_5@sint16 mulL_5;
cast ymm4_6@sint16 mulL_6;
cast ymm4_7@sint16 mulL_7;
cast ymm4_8@sint16 mulL_8;
cast ymm4_9@sint16 mulL_9;
cast ymm4_a@sint16 mulL_a;
cast ymm4_b@sint16 mulL_b;
cast ymm4_c@sint16 mulL_c;
cast ymm4_d@sint16 mulL_d;
cast ymm4_e@sint16 mulL_e;
cast ymm4_f@sint16 mulL_f;
(* vpmulhw %ymm2,%ymm3,%ymm3                       #! PC = 0x5555555577aa *)
smull mulH_0 mulLymm3_0 ymm3_0 ymm2_0;
smull mulH_1 mulLymm3_1 ymm3_1 ymm2_1;
smull mulH_2 mulLymm3_2 ymm3_2 ymm2_2;
smull mulH_3 mulLymm3_3 ymm3_3 ymm2_3;
smull mulH_4 mulLymm3_4 ymm3_4 ymm2_4;
smull mulH_5 mulLymm3_5 ymm3_5 ymm2_5;
smull mulH_6 mulLymm3_6 ymm3_6 ymm2_6;
smull mulH_7 mulLymm3_7 ymm3_7 ymm2_7;
smull mulH_8 mulLymm3_8 ymm3_8 ymm2_8;
smull mulH_9 mulLymm3_9 ymm3_9 ymm2_9;
smull mulH_a mulLymm3_a ymm3_a ymm2_a;
smull mulH_b mulLymm3_b ymm3_b ymm2_b;
smull mulH_c mulLymm3_c ymm3_c ymm2_c;
smull mulH_d mulLymm3_d ymm3_d ymm2_d;
smull mulH_e mulLymm3_e ymm3_e ymm2_e;
smull mulH_f mulLymm3_f ymm3_f ymm2_f;
mov ymm3_0 mulH_0;
mov ymm3_1 mulH_1;
mov ymm3_2 mulH_2;
mov ymm3_3 mulH_3;
mov ymm3_4 mulH_4;
mov ymm3_5 mulH_5;
mov ymm3_6 mulH_6;
mov ymm3_7 mulH_7;
mov ymm3_8 mulH_8;
mov ymm3_9 mulH_9;
mov ymm3_a mulH_a;
mov ymm3_b mulH_b;
mov ymm3_c mulH_c;
mov ymm3_d mulH_d;
mov ymm3_e mulH_e;
mov ymm3_f mulH_f;
(* vpmulhw %ymm0,%ymm4,%ymm4                       #! PC = 0x5555555577ae *)
smull mulH_0 red_0 ymm4_0 ymm0_0;
assert true && red_0 = mulLymm3_0;
assume red_0 = mulLymm3_0 && true;
smull mulH_1 red_1 ymm4_1 ymm0_1;
assert true && red_1 = mulLymm3_1;
assume red_1 = mulLymm3_1 && true;
smull mulH_2 red_2 ymm4_2 ymm0_2;
assert true && red_2 = mulLymm3_2;
assume red_2 = mulLymm3_2 && true;
smull mulH_3 red_3 ymm4_3 ymm0_3;
assert true && red_3 = mulLymm3_3;
assume red_3 = mulLymm3_3 && true;
smull mulH_4 red_4 ymm4_4 ymm0_4;
assert true && red_4 = mulLymm3_4;
assume red_4 = mulLymm3_4 && true;
smull mulH_5 red_5 ymm4_5 ymm0_5;
assert true && red_5 = mulLymm3_5;
assume red_5 = mulLymm3_5 && true;
smull mulH_6 red_6 ymm4_6 ymm0_6;
assert true && red_6 = mulLymm3_6;
assume red_6 = mulLymm3_6 && true;
smull mulH_7 red_7 ymm4_7 ymm0_7;
assert true && red_7 = mulLymm3_7;
assume red_7 = mulLymm3_7 && true;
smull mulH_8 red_8 ymm4_8 ymm0_8;
assert true && red_8 = mulLymm3_8;
assume red_8 = mulLymm3_8 && true;
smull mulH_9 red_9 ymm4_9 ymm0_9;
assert true && red_9 = mulLymm3_9;
assume red_9 = mulLymm3_9 && true;
smull mulH_a red_a ymm4_a ymm0_a;
assert true && red_a = mulLymm3_a;
assume red_a = mulLymm3_a && true;
smull mulH_b red_b ymm4_b ymm0_b;
assert true && red_b = mulLymm3_b;
assume red_b = mulLymm3_b && true;
smull mulH_c red_c ymm4_c ymm0_c;
assert true && red_c = mulLymm3_c;
assume red_c = mulLymm3_c && true;
smull mulH_d red_d ymm4_d ymm0_d;
assert true && red_d = mulLymm3_d;
assume red_d = mulLymm3_d && true;
smull mulH_e red_e ymm4_e ymm0_e;
assert true && red_e = mulLymm3_e;
assume red_e = mulLymm3_e && true;
smull mulH_f red_f ymm4_f ymm0_f;
assert true && red_f = mulLymm3_f;
assume red_f = mulLymm3_f && true;
mov ymm4_0 mulH_0;
mov ymm4_1 mulH_1;
mov ymm4_2 mulH_2;
mov ymm4_3 mulH_3;
mov ymm4_4 mulH_4;
mov ymm4_5 mulH_5;
mov ymm4_6 mulH_6;
mov ymm4_7 mulH_7;
mov ymm4_8 mulH_8;
mov ymm4_9 mulH_9;
mov ymm4_a mulH_a;
mov ymm4_b mulH_b;
mov ymm4_c mulH_c;
mov ymm4_d mulH_d;
mov ymm4_e mulH_e;
mov ymm4_f mulH_f;
(* vpsubw %ymm4,%ymm3,%ymm3                        #! PC = 0x5555555577b2 *)
sub ymm3_0 ymm3_0 ymm4_0;
sub ymm3_1 ymm3_1 ymm4_1;
sub ymm3_2 ymm3_2 ymm4_2;
sub ymm3_3 ymm3_3 ymm4_3;
sub ymm3_4 ymm3_4 ymm4_4;
sub ymm3_5 ymm3_5 ymm4_5;
sub ymm3_6 ymm3_6 ymm4_6;
sub ymm3_7 ymm3_7 ymm4_7;
sub ymm3_8 ymm3_8 ymm4_8;
sub ymm3_9 ymm3_9 ymm4_9;
sub ymm3_a ymm3_a ymm4_a;
sub ymm3_b ymm3_b ymm4_b;
sub ymm3_c ymm3_c ymm4_c;
sub ymm3_d ymm3_d ymm4_d;
sub ymm3_e ymm3_e ymm4_e;
sub ymm3_f ymm3_f ymm4_f;
(* vpbroadcastd 0x104(%rdx),%ymm1                  #! EA = L0x555555561224; Value = 0xad9a276d0198f85c; PC = 0x5555555577b6 *)
mov ymm1_0 L0x555555561224;
mov ymm1_1 L0x555555561226;
mov ymm1_2 L0x555555561224;
mov ymm1_3 L0x555555561226;
mov ymm1_4 L0x555555561224;
mov ymm1_5 L0x555555561226;
mov ymm1_6 L0x555555561224;
mov ymm1_7 L0x555555561226;
mov ymm1_8 L0x555555561224;
mov ymm1_9 L0x555555561226;
mov ymm1_a L0x555555561224;
mov ymm1_b L0x555555561226;
mov ymm1_c L0x555555561224;
mov ymm1_d L0x555555561226;
mov ymm1_e L0x555555561224;
mov ymm1_f L0x555555561226;
(* vpbroadcastd 0x304(%rdx),%ymm2                  #! EA = L0x555555561424; Value = 0xf19a096df198105c; PC = 0x5555555577bf *)
mov ymm2_0 L0x555555561424;
mov ymm2_1 L0x555555561426;
mov ymm2_2 L0x555555561424;
mov ymm2_3 L0x555555561426;
mov ymm2_4 L0x555555561424;
mov ymm2_5 L0x555555561426;
mov ymm2_6 L0x555555561424;
mov ymm2_7 L0x555555561426;
mov ymm2_8 L0x555555561424;
mov ymm2_9 L0x555555561426;
mov ymm2_a L0x555555561424;
mov ymm2_b L0x555555561426;
mov ymm2_c L0x555555561424;
mov ymm2_d L0x555555561426;
mov ymm2_e L0x555555561424;
mov ymm2_f L0x555555561426;
(* vpmullw %ymm1,%ymm6,%ymm4                       #! PC = 0x5555555577c8 *)
smull mulHymm6_0 mulL_0 ymm1_0 ymm6_0;
smull mulHymm6_1 mulL_1 ymm1_1 ymm6_1;
smull mulHymm6_2 mulL_2 ymm1_2 ymm6_2;
smull mulHymm6_3 mulL_3 ymm1_3 ymm6_3;
smull mulHymm6_4 mulL_4 ymm1_4 ymm6_4;
smull mulHymm6_5 mulL_5 ymm1_5 ymm6_5;
smull mulHymm6_6 mulL_6 ymm1_6 ymm6_6;
smull mulHymm6_7 mulL_7 ymm1_7 ymm6_7;
smull mulHymm6_8 mulL_8 ymm1_8 ymm6_8;
smull mulHymm6_9 mulL_9 ymm1_9 ymm6_9;
smull mulHymm6_a mulL_a ymm1_a ymm6_a;
smull mulHymm6_b mulL_b ymm1_b ymm6_b;
smull mulHymm6_c mulL_c ymm1_c ymm6_c;
smull mulHymm6_d mulL_d ymm1_d ymm6_d;
smull mulHymm6_e mulL_e ymm1_e ymm6_e;
smull mulHymm6_f mulL_f ymm1_f ymm6_f;
cast ymm4_0@sint16 mulL_0;
cast ymm4_1@sint16 mulL_1;
cast ymm4_2@sint16 mulL_2;
cast ymm4_3@sint16 mulL_3;
cast ymm4_4@sint16 mulL_4;
cast ymm4_5@sint16 mulL_5;
cast ymm4_6@sint16 mulL_6;
cast ymm4_7@sint16 mulL_7;
cast ymm4_8@sint16 mulL_8;
cast ymm4_9@sint16 mulL_9;
cast ymm4_a@sint16 mulL_a;
cast ymm4_b@sint16 mulL_b;
cast ymm4_c@sint16 mulL_c;
cast ymm4_d@sint16 mulL_d;
cast ymm4_e@sint16 mulL_e;
cast ymm4_f@sint16 mulL_f;
(* vpmulhw %ymm2,%ymm6,%ymm6                       #! PC = 0x5555555577cc *)
smull mulH_0 mulLymm6_0 ymm6_0 ymm2_0;
smull mulH_1 mulLymm6_1 ymm6_1 ymm2_1;
smull mulH_2 mulLymm6_2 ymm6_2 ymm2_2;
smull mulH_3 mulLymm6_3 ymm6_3 ymm2_3;
smull mulH_4 mulLymm6_4 ymm6_4 ymm2_4;
smull mulH_5 mulLymm6_5 ymm6_5 ymm2_5;
smull mulH_6 mulLymm6_6 ymm6_6 ymm2_6;
smull mulH_7 mulLymm6_7 ymm6_7 ymm2_7;
smull mulH_8 mulLymm6_8 ymm6_8 ymm2_8;
smull mulH_9 mulLymm6_9 ymm6_9 ymm2_9;
smull mulH_a mulLymm6_a ymm6_a ymm2_a;
smull mulH_b mulLymm6_b ymm6_b ymm2_b;
smull mulH_c mulLymm6_c ymm6_c ymm2_c;
smull mulH_d mulLymm6_d ymm6_d ymm2_d;
smull mulH_e mulLymm6_e ymm6_e ymm2_e;
smull mulH_f mulLymm6_f ymm6_f ymm2_f;
mov ymm6_0 mulH_0;
mov ymm6_1 mulH_1;
mov ymm6_2 mulH_2;
mov ymm6_3 mulH_3;
mov ymm6_4 mulH_4;
mov ymm6_5 mulH_5;
mov ymm6_6 mulH_6;
mov ymm6_7 mulH_7;
mov ymm6_8 mulH_8;
mov ymm6_9 mulH_9;
mov ymm6_a mulH_a;
mov ymm6_b mulH_b;
mov ymm6_c mulH_c;
mov ymm6_d mulH_d;
mov ymm6_e mulH_e;
mov ymm6_f mulH_f;
(* vpmulhw %ymm0,%ymm4,%ymm4                       #! PC = 0x5555555577d0 *)
smull mulH_0 red_0 ymm4_0 ymm0_0;
assert true && red_0 = mulLymm6_0;
assume red_0 = mulLymm6_0 && true;
smull mulH_1 red_1 ymm4_1 ymm0_1;
assert true && red_1 = mulLymm6_1;
assume red_1 = mulLymm6_1 && true;
smull mulH_2 red_2 ymm4_2 ymm0_2;
assert true && red_2 = mulLymm6_2;
assume red_2 = mulLymm6_2 && true;
smull mulH_3 red_3 ymm4_3 ymm0_3;
assert true && red_3 = mulLymm6_3;
assume red_3 = mulLymm6_3 && true;
smull mulH_4 red_4 ymm4_4 ymm0_4;
assert true && red_4 = mulLymm6_4;
assume red_4 = mulLymm6_4 && true;
smull mulH_5 red_5 ymm4_5 ymm0_5;
assert true && red_5 = mulLymm6_5;
assume red_5 = mulLymm6_5 && true;
smull mulH_6 red_6 ymm4_6 ymm0_6;
assert true && red_6 = mulLymm6_6;
assume red_6 = mulLymm6_6 && true;
smull mulH_7 red_7 ymm4_7 ymm0_7;
assert true && red_7 = mulLymm6_7;
assume red_7 = mulLymm6_7 && true;
smull mulH_8 red_8 ymm4_8 ymm0_8;
assert true && red_8 = mulLymm6_8;
assume red_8 = mulLymm6_8 && true;
smull mulH_9 red_9 ymm4_9 ymm0_9;
assert true && red_9 = mulLymm6_9;
assume red_9 = mulLymm6_9 && true;
smull mulH_a red_a ymm4_a ymm0_a;
assert true && red_a = mulLymm6_a;
assume red_a = mulLymm6_a && true;
smull mulH_b red_b ymm4_b ymm0_b;
assert true && red_b = mulLymm6_b;
assume red_b = mulLymm6_b && true;
smull mulH_c red_c ymm4_c ymm0_c;
assert true && red_c = mulLymm6_c;
assume red_c = mulLymm6_c && true;
smull mulH_d red_d ymm4_d ymm0_d;
assert true && red_d = mulLymm6_d;
assume red_d = mulLymm6_d && true;
smull mulH_e red_e ymm4_e ymm0_e;
assert true && red_e = mulLymm6_e;
assume red_e = mulLymm6_e && true;
smull mulH_f red_f ymm4_f ymm0_f;
assert true && red_f = mulLymm6_f;
assume red_f = mulLymm6_f && true;
mov ymm4_0 mulH_0;
mov ymm4_1 mulH_1;
mov ymm4_2 mulH_2;
mov ymm4_3 mulH_3;
mov ymm4_4 mulH_4;
mov ymm4_5 mulH_5;
mov ymm4_6 mulH_6;
mov ymm4_7 mulH_7;
mov ymm4_8 mulH_8;
mov ymm4_9 mulH_9;
mov ymm4_a mulH_a;
mov ymm4_b mulH_b;
mov ymm4_c mulH_c;
mov ymm4_d mulH_d;
mov ymm4_e mulH_e;
mov ymm4_f mulH_f;
(* vpsubw %ymm4,%ymm6,%ymm6                        #! PC = 0x5555555577d4 *)
sub ymm6_0 ymm6_0 ymm4_0;
sub ymm6_1 ymm6_1 ymm4_1;
sub ymm6_2 ymm6_2 ymm4_2;
sub ymm6_3 ymm6_3 ymm4_3;
sub ymm6_4 ymm6_4 ymm4_4;
sub ymm6_5 ymm6_5 ymm4_5;
sub ymm6_6 ymm6_6 ymm4_6;
sub ymm6_7 ymm6_7 ymm4_7;
sub ymm6_8 ymm6_8 ymm4_8;
sub ymm6_9 ymm6_9 ymm4_9;
sub ymm6_a ymm6_a ymm4_a;
sub ymm6_b ymm6_b ymm4_b;
sub ymm6_c ymm6_c ymm4_c;
sub ymm6_d ymm6_d ymm4_d;
sub ymm6_e ymm6_e ymm4_e;
sub ymm6_f ymm6_f ymm4_f;
(* vpbroadcastd 0x108(%rdx),%ymm1                  #! EA = L0x555555561228; Value = 0xae886f65ad9a276d; PC = 0x5555555577d8 *)
mov ymm1_0 L0x555555561228;
mov ymm1_1 L0x55555556122a;
mov ymm1_2 L0x555555561228;
mov ymm1_3 L0x55555556122a;
mov ymm1_4 L0x555555561228;
mov ymm1_5 L0x55555556122a;
mov ymm1_6 L0x555555561228;
mov ymm1_7 L0x55555556122a;
mov ymm1_8 L0x555555561228;
mov ymm1_9 L0x55555556122a;
mov ymm1_a L0x555555561228;
mov ymm1_b L0x55555556122a;
mov ymm1_c L0x555555561228;
mov ymm1_d L0x55555556122a;
mov ymm1_e L0x555555561228;
mov ymm1_f L0x55555556122a;
(* vpbroadcastd 0x308(%rdx),%ymm2                  #! EA = L0x555555561428; Value = 0xfe880165f19a096d; PC = 0x5555555577e1 *)
mov ymm2_0 L0x555555561428;
mov ymm2_1 L0x55555556142a;
mov ymm2_2 L0x555555561428;
mov ymm2_3 L0x55555556142a;
mov ymm2_4 L0x555555561428;
mov ymm2_5 L0x55555556142a;
mov ymm2_6 L0x555555561428;
mov ymm2_7 L0x55555556142a;
mov ymm2_8 L0x555555561428;
mov ymm2_9 L0x55555556142a;
mov ymm2_a L0x555555561428;
mov ymm2_b L0x55555556142a;
mov ymm2_c L0x555555561428;
mov ymm2_d L0x55555556142a;
mov ymm2_e L0x555555561428;
mov ymm2_f L0x55555556142a;
(* vpmullw %ymm1,%ymm8,%ymm4                       #! PC = 0x5555555577ea *)
smull mulHymm8_0 mulL_0 ymm1_0 ymm8_0;
smull mulHymm8_1 mulL_1 ymm1_1 ymm8_1;
smull mulHymm8_2 mulL_2 ymm1_2 ymm8_2;
smull mulHymm8_3 mulL_3 ymm1_3 ymm8_3;
smull mulHymm8_4 mulL_4 ymm1_4 ymm8_4;
smull mulHymm8_5 mulL_5 ymm1_5 ymm8_5;
smull mulHymm8_6 mulL_6 ymm1_6 ymm8_6;
smull mulHymm8_7 mulL_7 ymm1_7 ymm8_7;
smull mulHymm8_8 mulL_8 ymm1_8 ymm8_8;
smull mulHymm8_9 mulL_9 ymm1_9 ymm8_9;
smull mulHymm8_a mulL_a ymm1_a ymm8_a;
smull mulHymm8_b mulL_b ymm1_b ymm8_b;
smull mulHymm8_c mulL_c ymm1_c ymm8_c;
smull mulHymm8_d mulL_d ymm1_d ymm8_d;
smull mulHymm8_e mulL_e ymm1_e ymm8_e;
smull mulHymm8_f mulL_f ymm1_f ymm8_f;
cast ymm4_0@sint16 mulL_0;
cast ymm4_1@sint16 mulL_1;
cast ymm4_2@sint16 mulL_2;
cast ymm4_3@sint16 mulL_3;
cast ymm4_4@sint16 mulL_4;
cast ymm4_5@sint16 mulL_5;
cast ymm4_6@sint16 mulL_6;
cast ymm4_7@sint16 mulL_7;
cast ymm4_8@sint16 mulL_8;
cast ymm4_9@sint16 mulL_9;
cast ymm4_a@sint16 mulL_a;
cast ymm4_b@sint16 mulL_b;
cast ymm4_c@sint16 mulL_c;
cast ymm4_d@sint16 mulL_d;
cast ymm4_e@sint16 mulL_e;
cast ymm4_f@sint16 mulL_f;
(* vpmulhw %ymm2,%ymm8,%ymm8                       #! PC = 0x5555555577ee *)
smull mulH_0 mulLymm8_0 ymm8_0 ymm2_0;
smull mulH_1 mulLymm8_1 ymm8_1 ymm2_1;
smull mulH_2 mulLymm8_2 ymm8_2 ymm2_2;
smull mulH_3 mulLymm8_3 ymm8_3 ymm2_3;
smull mulH_4 mulLymm8_4 ymm8_4 ymm2_4;
smull mulH_5 mulLymm8_5 ymm8_5 ymm2_5;
smull mulH_6 mulLymm8_6 ymm8_6 ymm2_6;
smull mulH_7 mulLymm8_7 ymm8_7 ymm2_7;
smull mulH_8 mulLymm8_8 ymm8_8 ymm2_8;
smull mulH_9 mulLymm8_9 ymm8_9 ymm2_9;
smull mulH_a mulLymm8_a ymm8_a ymm2_a;
smull mulH_b mulLymm8_b ymm8_b ymm2_b;
smull mulH_c mulLymm8_c ymm8_c ymm2_c;
smull mulH_d mulLymm8_d ymm8_d ymm2_d;
smull mulH_e mulLymm8_e ymm8_e ymm2_e;
smull mulH_f mulLymm8_f ymm8_f ymm2_f;
mov ymm8_0 mulH_0;
mov ymm8_1 mulH_1;
mov ymm8_2 mulH_2;
mov ymm8_3 mulH_3;
mov ymm8_4 mulH_4;
mov ymm8_5 mulH_5;
mov ymm8_6 mulH_6;
mov ymm8_7 mulH_7;
mov ymm8_8 mulH_8;
mov ymm8_9 mulH_9;
mov ymm8_a mulH_a;
mov ymm8_b mulH_b;
mov ymm8_c mulH_c;
mov ymm8_d mulH_d;
mov ymm8_e mulH_e;
mov ymm8_f mulH_f;
(* vpmulhw %ymm0,%ymm4,%ymm4                       #! PC = 0x5555555577f2 *)
smull mulH_0 red_0 ymm4_0 ymm0_0;
assert true && red_0 = mulLymm8_0;
assume red_0 = mulLymm8_0 && true;
smull mulH_1 red_1 ymm4_1 ymm0_1;
assert true && red_1 = mulLymm8_1;
assume red_1 = mulLymm8_1 && true;
smull mulH_2 red_2 ymm4_2 ymm0_2;
assert true && red_2 = mulLymm8_2;
assume red_2 = mulLymm8_2 && true;
smull mulH_3 red_3 ymm4_3 ymm0_3;
assert true && red_3 = mulLymm8_3;
assume red_3 = mulLymm8_3 && true;
smull mulH_4 red_4 ymm4_4 ymm0_4;
assert true && red_4 = mulLymm8_4;
assume red_4 = mulLymm8_4 && true;
smull mulH_5 red_5 ymm4_5 ymm0_5;
assert true && red_5 = mulLymm8_5;
assume red_5 = mulLymm8_5 && true;
smull mulH_6 red_6 ymm4_6 ymm0_6;
assert true && red_6 = mulLymm8_6;
assume red_6 = mulLymm8_6 && true;
smull mulH_7 red_7 ymm4_7 ymm0_7;
assert true && red_7 = mulLymm8_7;
assume red_7 = mulLymm8_7 && true;
smull mulH_8 red_8 ymm4_8 ymm0_8;
assert true && red_8 = mulLymm8_8;
assume red_8 = mulLymm8_8 && true;
smull mulH_9 red_9 ymm4_9 ymm0_9;
assert true && red_9 = mulLymm8_9;
assume red_9 = mulLymm8_9 && true;
smull mulH_a red_a ymm4_a ymm0_a;
assert true && red_a = mulLymm8_a;
assume red_a = mulLymm8_a && true;
smull mulH_b red_b ymm4_b ymm0_b;
assert true && red_b = mulLymm8_b;
assume red_b = mulLymm8_b && true;
smull mulH_c red_c ymm4_c ymm0_c;
assert true && red_c = mulLymm8_c;
assume red_c = mulLymm8_c && true;
smull mulH_d red_d ymm4_d ymm0_d;
assert true && red_d = mulLymm8_d;
assume red_d = mulLymm8_d && true;
smull mulH_e red_e ymm4_e ymm0_e;
assert true && red_e = mulLymm8_e;
assume red_e = mulLymm8_e && true;
smull mulH_f red_f ymm4_f ymm0_f;
assert true && red_f = mulLymm8_f;
assume red_f = mulLymm8_f && true;
mov ymm4_0 mulH_0;
mov ymm4_1 mulH_1;
mov ymm4_2 mulH_2;
mov ymm4_3 mulH_3;
mov ymm4_4 mulH_4;
mov ymm4_5 mulH_5;
mov ymm4_6 mulH_6;
mov ymm4_7 mulH_7;
mov ymm4_8 mulH_8;
mov ymm4_9 mulH_9;
mov ymm4_a mulH_a;
mov ymm4_b mulH_b;
mov ymm4_c mulH_c;
mov ymm4_d mulH_d;
mov ymm4_e mulH_e;
mov ymm4_f mulH_f;
(* vpsubw %ymm4,%ymm8,%ymm8                        #! PC = 0x5555555577f6 *)
sub ymm8_0 ymm8_0 ymm4_0;
sub ymm8_1 ymm8_1 ymm4_1;
sub ymm8_2 ymm8_2 ymm4_2;
sub ymm8_3 ymm8_3 ymm4_3;
sub ymm8_4 ymm8_4 ymm4_4;
sub ymm8_5 ymm8_5 ymm4_5;
sub ymm8_6 ymm8_6 ymm4_6;
sub ymm8_7 ymm8_7 ymm4_7;
sub ymm8_8 ymm8_8 ymm4_8;
sub ymm8_9 ymm8_9 ymm4_9;
sub ymm8_a ymm8_a ymm4_a;
sub ymm8_b ymm8_b ymm4_b;
sub ymm8_c ymm8_c ymm4_c;
sub ymm8_d ymm8_d ymm4_d;
sub ymm8_e ymm8_e ymm4_e;
sub ymm8_f ymm8_f ymm4_f;
(* vpbroadcastd 0x10c(%rdx),%ymm1                  #! EA = L0x55555556122c; Value = 0xc126e487ae886f65; PC = 0x5555555577fa *)
mov ymm1_0 L0x55555556122c;
mov ymm1_1 L0x55555556122e;
mov ymm1_2 L0x55555556122c;
mov ymm1_3 L0x55555556122e;
mov ymm1_4 L0x55555556122c;
mov ymm1_5 L0x55555556122e;
mov ymm1_6 L0x55555556122c;
mov ymm1_7 L0x55555556122e;
mov ymm1_8 L0x55555556122c;
mov ymm1_9 L0x55555556122e;
mov ymm1_a L0x55555556122c;
mov ymm1_b L0x55555556122e;
mov ymm1_c L0x55555556122c;
mov ymm1_d L0x55555556122e;
mov ymm1_e L0x55555556122c;
mov ymm1_f L0x55555556122e;
(* vpbroadcastd 0x30c(%rdx),%ymm2                  #! EA = L0x55555556142c; Value = 0xfd260a87fe880165; PC = 0x555555557803 *)
mov ymm2_0 L0x55555556142c;
mov ymm2_1 L0x55555556142e;
mov ymm2_2 L0x55555556142c;
mov ymm2_3 L0x55555556142e;
mov ymm2_4 L0x55555556142c;
mov ymm2_5 L0x55555556142e;
mov ymm2_6 L0x55555556142c;
mov ymm2_7 L0x55555556142e;
mov ymm2_8 L0x55555556142c;
mov ymm2_9 L0x55555556142e;
mov ymm2_a L0x55555556142c;
mov ymm2_b L0x55555556142e;
mov ymm2_c L0x55555556142c;
mov ymm2_d L0x55555556142e;
mov ymm2_e L0x55555556142c;
mov ymm2_f L0x55555556142e;
(* vpmullw %ymm1,%ymm11,%ymm4                      #! PC = 0x55555555780c *)
smull mulHymm11_0 mulL_0 ymm1_0 ymm11_0;
smull mulHymm11_1 mulL_1 ymm1_1 ymm11_1;
smull mulHymm11_2 mulL_2 ymm1_2 ymm11_2;
smull mulHymm11_3 mulL_3 ymm1_3 ymm11_3;
smull mulHymm11_4 mulL_4 ymm1_4 ymm11_4;
smull mulHymm11_5 mulL_5 ymm1_5 ymm11_5;
smull mulHymm11_6 mulL_6 ymm1_6 ymm11_6;
smull mulHymm11_7 mulL_7 ymm1_7 ymm11_7;
smull mulHymm11_8 mulL_8 ymm1_8 ymm11_8;
smull mulHymm11_9 mulL_9 ymm1_9 ymm11_9;
smull mulHymm11_a mulL_a ymm1_a ymm11_a;
smull mulHymm11_b mulL_b ymm1_b ymm11_b;
smull mulHymm11_c mulL_c ymm1_c ymm11_c;
smull mulHymm11_d mulL_d ymm1_d ymm11_d;
smull mulHymm11_e mulL_e ymm1_e ymm11_e;
smull mulHymm11_f mulL_f ymm1_f ymm11_f;
cast ymm4_0@sint16 mulL_0;
cast ymm4_1@sint16 mulL_1;
cast ymm4_2@sint16 mulL_2;
cast ymm4_3@sint16 mulL_3;
cast ymm4_4@sint16 mulL_4;
cast ymm4_5@sint16 mulL_5;
cast ymm4_6@sint16 mulL_6;
cast ymm4_7@sint16 mulL_7;
cast ymm4_8@sint16 mulL_8;
cast ymm4_9@sint16 mulL_9;
cast ymm4_a@sint16 mulL_a;
cast ymm4_b@sint16 mulL_b;
cast ymm4_c@sint16 mulL_c;
cast ymm4_d@sint16 mulL_d;
cast ymm4_e@sint16 mulL_e;
cast ymm4_f@sint16 mulL_f;
(* vpmulhw %ymm2,%ymm11,%ymm11                     #! PC = 0x555555557810 *)
smull mulH_0 mulLymm11_0 ymm11_0 ymm2_0;
smull mulH_1 mulLymm11_1 ymm11_1 ymm2_1;
smull mulH_2 mulLymm11_2 ymm11_2 ymm2_2;
smull mulH_3 mulLymm11_3 ymm11_3 ymm2_3;
smull mulH_4 mulLymm11_4 ymm11_4 ymm2_4;
smull mulH_5 mulLymm11_5 ymm11_5 ymm2_5;
smull mulH_6 mulLymm11_6 ymm11_6 ymm2_6;
smull mulH_7 mulLymm11_7 ymm11_7 ymm2_7;
smull mulH_8 mulLymm11_8 ymm11_8 ymm2_8;
smull mulH_9 mulLymm11_9 ymm11_9 ymm2_9;
smull mulH_a mulLymm11_a ymm11_a ymm2_a;
smull mulH_b mulLymm11_b ymm11_b ymm2_b;
smull mulH_c mulLymm11_c ymm11_c ymm2_c;
smull mulH_d mulLymm11_d ymm11_d ymm2_d;
smull mulH_e mulLymm11_e ymm11_e ymm2_e;
smull mulH_f mulLymm11_f ymm11_f ymm2_f;
mov ymm11_0 mulH_0;
mov ymm11_1 mulH_1;
mov ymm11_2 mulH_2;
mov ymm11_3 mulH_3;
mov ymm11_4 mulH_4;
mov ymm11_5 mulH_5;
mov ymm11_6 mulH_6;
mov ymm11_7 mulH_7;
mov ymm11_8 mulH_8;
mov ymm11_9 mulH_9;
mov ymm11_a mulH_a;
mov ymm11_b mulH_b;
mov ymm11_c mulH_c;
mov ymm11_d mulH_d;
mov ymm11_e mulH_e;
mov ymm11_f mulH_f;
(* vpmulhw %ymm0,%ymm4,%ymm4                       #! PC = 0x555555557814 *)
smull mulH_0 red_0 ymm4_0 ymm0_0;
assert true && red_0 = mulLymm11_0;
assume red_0 = mulLymm11_0 && true;
smull mulH_1 red_1 ymm4_1 ymm0_1;
assert true && red_1 = mulLymm11_1;
assume red_1 = mulLymm11_1 && true;
smull mulH_2 red_2 ymm4_2 ymm0_2;
assert true && red_2 = mulLymm11_2;
assume red_2 = mulLymm11_2 && true;
smull mulH_3 red_3 ymm4_3 ymm0_3;
assert true && red_3 = mulLymm11_3;
assume red_3 = mulLymm11_3 && true;
smull mulH_4 red_4 ymm4_4 ymm0_4;
assert true && red_4 = mulLymm11_4;
assume red_4 = mulLymm11_4 && true;
smull mulH_5 red_5 ymm4_5 ymm0_5;
assert true && red_5 = mulLymm11_5;
assume red_5 = mulLymm11_5 && true;
smull mulH_6 red_6 ymm4_6 ymm0_6;
assert true && red_6 = mulLymm11_6;
assume red_6 = mulLymm11_6 && true;
smull mulH_7 red_7 ymm4_7 ymm0_7;
assert true && red_7 = mulLymm11_7;
assume red_7 = mulLymm11_7 && true;
smull mulH_8 red_8 ymm4_8 ymm0_8;
assert true && red_8 = mulLymm11_8;
assume red_8 = mulLymm11_8 && true;
smull mulH_9 red_9 ymm4_9 ymm0_9;
assert true && red_9 = mulLymm11_9;
assume red_9 = mulLymm11_9 && true;
smull mulH_a red_a ymm4_a ymm0_a;
assert true && red_a = mulLymm11_a;
assume red_a = mulLymm11_a && true;
smull mulH_b red_b ymm4_b ymm0_b;
assert true && red_b = mulLymm11_b;
assume red_b = mulLymm11_b && true;
smull mulH_c red_c ymm4_c ymm0_c;
assert true && red_c = mulLymm11_c;
assume red_c = mulLymm11_c && true;
smull mulH_d red_d ymm4_d ymm0_d;
assert true && red_d = mulLymm11_d;
assume red_d = mulLymm11_d && true;
smull mulH_e red_e ymm4_e ymm0_e;
assert true && red_e = mulLymm11_e;
assume red_e = mulLymm11_e && true;
smull mulH_f red_f ymm4_f ymm0_f;
assert true && red_f = mulLymm11_f;
assume red_f = mulLymm11_f && true;
mov ymm4_0 mulH_0;
mov ymm4_1 mulH_1;
mov ymm4_2 mulH_2;
mov ymm4_3 mulH_3;
mov ymm4_4 mulH_4;
mov ymm4_5 mulH_5;
mov ymm4_6 mulH_6;
mov ymm4_7 mulH_7;
mov ymm4_8 mulH_8;
mov ymm4_9 mulH_9;
mov ymm4_a mulH_a;
mov ymm4_b mulH_b;
mov ymm4_c mulH_c;
mov ymm4_d mulH_d;
mov ymm4_e mulH_e;
mov ymm4_f mulH_f;
(* vpsubw %ymm4,%ymm11,%ymm11                      #! PC = 0x555555557818 *)
sub ymm11_0 ymm11_0 ymm4_0;
sub ymm11_1 ymm11_1 ymm4_1;
sub ymm11_2 ymm11_2 ymm4_2;
sub ymm11_3 ymm11_3 ymm4_3;
sub ymm11_4 ymm11_4 ymm4_4;
sub ymm11_5 ymm11_5 ymm4_5;
sub ymm11_6 ymm11_6 ymm4_6;
sub ymm11_7 ymm11_7 ymm4_7;
sub ymm11_8 ymm11_8 ymm4_8;
sub ymm11_9 ymm11_9 ymm4_9;
sub ymm11_a ymm11_a ymm4_a;
sub ymm11_b ymm11_b ymm4_b;
sub ymm11_c ymm11_c ymm4_c;
sub ymm11_d ymm11_d ymm4_d;
sub ymm11_e ymm11_e ymm4_e;
sub ymm11_f ymm11_f ymm4_f;
(* vpmullw %ymm14,%ymm7,%ymm4                      #! PC = 0x55555555781c *)
smull mulHymm7_0 mulL_0 ymm14_0 ymm7_0;
smull mulHymm7_1 mulL_1 ymm14_1 ymm7_1;
smull mulHymm7_2 mulL_2 ymm14_2 ymm7_2;
smull mulHymm7_3 mulL_3 ymm14_3 ymm7_3;
smull mulHymm7_4 mulL_4 ymm14_4 ymm7_4;
smull mulHymm7_5 mulL_5 ymm14_5 ymm7_5;
smull mulHymm7_6 mulL_6 ymm14_6 ymm7_6;
smull mulHymm7_7 mulL_7 ymm14_7 ymm7_7;
smull mulHymm7_8 mulL_8 ymm14_8 ymm7_8;
smull mulHymm7_9 mulL_9 ymm14_9 ymm7_9;
smull mulHymm7_a mulL_a ymm14_a ymm7_a;
smull mulHymm7_b mulL_b ymm14_b ymm7_b;
smull mulHymm7_c mulL_c ymm14_c ymm7_c;
smull mulHymm7_d mulL_d ymm14_d ymm7_d;
smull mulHymm7_e mulL_e ymm14_e ymm7_e;
smull mulHymm7_f mulL_f ymm14_f ymm7_f;
cast ymm4_0@sint16 mulL_0;
cast ymm4_1@sint16 mulL_1;
cast ymm4_2@sint16 mulL_2;
cast ymm4_3@sint16 mulL_3;
cast ymm4_4@sint16 mulL_4;
cast ymm4_5@sint16 mulL_5;
cast ymm4_6@sint16 mulL_6;
cast ymm4_7@sint16 mulL_7;
cast ymm4_8@sint16 mulL_8;
cast ymm4_9@sint16 mulL_9;
cast ymm4_a@sint16 mulL_a;
cast ymm4_b@sint16 mulL_b;
cast ymm4_c@sint16 mulL_c;
cast ymm4_d@sint16 mulL_d;
cast ymm4_e@sint16 mulL_e;
cast ymm4_f@sint16 mulL_f;
(* vpmulhw %ymm15,%ymm7,%ymm7                      #! PC = 0x555555557821 *)
smull mulH_0 mulLymm7_0 ymm7_0 ymm15_0;
smull mulH_1 mulLymm7_1 ymm7_1 ymm15_1;
smull mulH_2 mulLymm7_2 ymm7_2 ymm15_2;
smull mulH_3 mulLymm7_3 ymm7_3 ymm15_3;
smull mulH_4 mulLymm7_4 ymm7_4 ymm15_4;
smull mulH_5 mulLymm7_5 ymm7_5 ymm15_5;
smull mulH_6 mulLymm7_6 ymm7_6 ymm15_6;
smull mulH_7 mulLymm7_7 ymm7_7 ymm15_7;
smull mulH_8 mulLymm7_8 ymm7_8 ymm15_8;
smull mulH_9 mulLymm7_9 ymm7_9 ymm15_9;
smull mulH_a mulLymm7_a ymm7_a ymm15_a;
smull mulH_b mulLymm7_b ymm7_b ymm15_b;
smull mulH_c mulLymm7_c ymm7_c ymm15_c;
smull mulH_d mulLymm7_d ymm7_d ymm15_d;
smull mulH_e mulLymm7_e ymm7_e ymm15_e;
smull mulH_f mulLymm7_f ymm7_f ymm15_f;
mov ymm7_0 mulH_0;
mov ymm7_1 mulH_1;
mov ymm7_2 mulH_2;
mov ymm7_3 mulH_3;
mov ymm7_4 mulH_4;
mov ymm7_5 mulH_5;
mov ymm7_6 mulH_6;
mov ymm7_7 mulH_7;
mov ymm7_8 mulH_8;
mov ymm7_9 mulH_9;
mov ymm7_a mulH_a;
mov ymm7_b mulH_b;
mov ymm7_c mulH_c;
mov ymm7_d mulH_d;
mov ymm7_e mulH_e;
mov ymm7_f mulH_f;
(* vpmulhw %ymm0,%ymm4,%ymm4                       #! PC = 0x555555557826 *)
smull mulH_0 red_0 ymm4_0 ymm0_0;
assert true && red_0 = mulLymm7_0;
assume red_0 = mulLymm7_0 && true;
smull mulH_1 red_1 ymm4_1 ymm0_1;
assert true && red_1 = mulLymm7_1;
assume red_1 = mulLymm7_1 && true;
smull mulH_2 red_2 ymm4_2 ymm0_2;
assert true && red_2 = mulLymm7_2;
assume red_2 = mulLymm7_2 && true;
smull mulH_3 red_3 ymm4_3 ymm0_3;
assert true && red_3 = mulLymm7_3;
assume red_3 = mulLymm7_3 && true;
smull mulH_4 red_4 ymm4_4 ymm0_4;
assert true && red_4 = mulLymm7_4;
assume red_4 = mulLymm7_4 && true;
smull mulH_5 red_5 ymm4_5 ymm0_5;
assert true && red_5 = mulLymm7_5;
assume red_5 = mulLymm7_5 && true;
smull mulH_6 red_6 ymm4_6 ymm0_6;
assert true && red_6 = mulLymm7_6;
assume red_6 = mulLymm7_6 && true;
smull mulH_7 red_7 ymm4_7 ymm0_7;
assert true && red_7 = mulLymm7_7;
assume red_7 = mulLymm7_7 && true;
smull mulH_8 red_8 ymm4_8 ymm0_8;
assert true && red_8 = mulLymm7_8;
assume red_8 = mulLymm7_8 && true;
smull mulH_9 red_9 ymm4_9 ymm0_9;
assert true && red_9 = mulLymm7_9;
assume red_9 = mulLymm7_9 && true;
smull mulH_a red_a ymm4_a ymm0_a;
assert true && red_a = mulLymm7_a;
assume red_a = mulLymm7_a && true;
smull mulH_b red_b ymm4_b ymm0_b;
assert true && red_b = mulLymm7_b;
assume red_b = mulLymm7_b && true;
smull mulH_c red_c ymm4_c ymm0_c;
assert true && red_c = mulLymm7_c;
assume red_c = mulLymm7_c && true;
smull mulH_d red_d ymm4_d ymm0_d;
assert true && red_d = mulLymm7_d;
assume red_d = mulLymm7_d && true;
smull mulH_e red_e ymm4_e ymm0_e;
assert true && red_e = mulLymm7_e;
assume red_e = mulLymm7_e && true;
smull mulH_f red_f ymm4_f ymm0_f;
assert true && red_f = mulLymm7_f;
assume red_f = mulLymm7_f && true;
mov ymm4_0 mulH_0;
mov ymm4_1 mulH_1;
mov ymm4_2 mulH_2;
mov ymm4_3 mulH_3;
mov ymm4_4 mulH_4;
mov ymm4_5 mulH_5;
mov ymm4_6 mulH_6;
mov ymm4_7 mulH_7;
mov ymm4_8 mulH_8;
mov ymm4_9 mulH_9;
mov ymm4_a mulH_a;
mov ymm4_b mulH_b;
mov ymm4_c mulH_c;
mov ymm4_d mulH_d;
mov ymm4_e mulH_e;
mov ymm4_f mulH_f;
(* vpsubw %ymm4,%ymm7,%ymm7                        #! PC = 0x55555555782a *)
sub ymm7_0 ymm7_0 ymm4_0;
sub ymm7_1 ymm7_1 ymm4_1;
sub ymm7_2 ymm7_2 ymm4_2;
sub ymm7_3 ymm7_3 ymm4_3;
sub ymm7_4 ymm7_4 ymm4_4;
sub ymm7_5 ymm7_5 ymm4_5;
sub ymm7_6 ymm7_6 ymm4_6;
sub ymm7_7 ymm7_7 ymm4_7;
sub ymm7_8 ymm7_8 ymm4_8;
sub ymm7_9 ymm7_9 ymm4_9;
sub ymm7_a ymm7_a ymm4_a;
sub ymm7_b ymm7_b ymm4_b;
sub ymm7_c ymm7_c ymm4_c;
sub ymm7_d ymm7_d ymm4_d;
sub ymm7_e ymm7_e ymm4_e;
sub ymm7_f ymm7_f ymm4_f;
(* vpmullw %ymm14,%ymm5,%ymm4                      #! PC = 0x55555555782e *)
smull mulHymm5_0 mulL_0 ymm14_0 ymm5_0;
smull mulHymm5_1 mulL_1 ymm14_1 ymm5_1;
smull mulHymm5_2 mulL_2 ymm14_2 ymm5_2;
smull mulHymm5_3 mulL_3 ymm14_3 ymm5_3;
smull mulHymm5_4 mulL_4 ymm14_4 ymm5_4;
smull mulHymm5_5 mulL_5 ymm14_5 ymm5_5;
smull mulHymm5_6 mulL_6 ymm14_6 ymm5_6;
smull mulHymm5_7 mulL_7 ymm14_7 ymm5_7;
smull mulHymm5_8 mulL_8 ymm14_8 ymm5_8;
smull mulHymm5_9 mulL_9 ymm14_9 ymm5_9;
smull mulHymm5_a mulL_a ymm14_a ymm5_a;
smull mulHymm5_b mulL_b ymm14_b ymm5_b;
smull mulHymm5_c mulL_c ymm14_c ymm5_c;
smull mulHymm5_d mulL_d ymm14_d ymm5_d;
smull mulHymm5_e mulL_e ymm14_e ymm5_e;
smull mulHymm5_f mulL_f ymm14_f ymm5_f;
cast ymm4_0@sint16 mulL_0;
cast ymm4_1@sint16 mulL_1;
cast ymm4_2@sint16 mulL_2;
cast ymm4_3@sint16 mulL_3;
cast ymm4_4@sint16 mulL_4;
cast ymm4_5@sint16 mulL_5;
cast ymm4_6@sint16 mulL_6;
cast ymm4_7@sint16 mulL_7;
cast ymm4_8@sint16 mulL_8;
cast ymm4_9@sint16 mulL_9;
cast ymm4_a@sint16 mulL_a;
cast ymm4_b@sint16 mulL_b;
cast ymm4_c@sint16 mulL_c;
cast ymm4_d@sint16 mulL_d;
cast ymm4_e@sint16 mulL_e;
cast ymm4_f@sint16 mulL_f;
(* vpmulhw %ymm15,%ymm5,%ymm5                      #! PC = 0x555555557833 *)
smull mulH_0 mulLymm5_0 ymm5_0 ymm15_0;
smull mulH_1 mulLymm5_1 ymm5_1 ymm15_1;
smull mulH_2 mulLymm5_2 ymm5_2 ymm15_2;
smull mulH_3 mulLymm5_3 ymm5_3 ymm15_3;
smull mulH_4 mulLymm5_4 ymm5_4 ymm15_4;
smull mulH_5 mulLymm5_5 ymm5_5 ymm15_5;
smull mulH_6 mulLymm5_6 ymm5_6 ymm15_6;
smull mulH_7 mulLymm5_7 ymm5_7 ymm15_7;
smull mulH_8 mulLymm5_8 ymm5_8 ymm15_8;
smull mulH_9 mulLymm5_9 ymm5_9 ymm15_9;
smull mulH_a mulLymm5_a ymm5_a ymm15_a;
smull mulH_b mulLymm5_b ymm5_b ymm15_b;
smull mulH_c mulLymm5_c ymm5_c ymm15_c;
smull mulH_d mulLymm5_d ymm5_d ymm15_d;
smull mulH_e mulLymm5_e ymm5_e ymm15_e;
smull mulH_f mulLymm5_f ymm5_f ymm15_f;
mov ymm5_0 mulH_0;
mov ymm5_1 mulH_1;
mov ymm5_2 mulH_2;
mov ymm5_3 mulH_3;
mov ymm5_4 mulH_4;
mov ymm5_5 mulH_5;
mov ymm5_6 mulH_6;
mov ymm5_7 mulH_7;
mov ymm5_8 mulH_8;
mov ymm5_9 mulH_9;
mov ymm5_a mulH_a;
mov ymm5_b mulH_b;
mov ymm5_c mulH_c;
mov ymm5_d mulH_d;
mov ymm5_e mulH_e;
mov ymm5_f mulH_f;
(* vpmulhw %ymm0,%ymm4,%ymm4                       #! PC = 0x555555557838 *)
smull mulH_0 red_0 ymm4_0 ymm0_0;
assert true && red_0 = mulLymm5_0;
assume red_0 = mulLymm5_0 && true;
smull mulH_1 red_1 ymm4_1 ymm0_1;
assert true && red_1 = mulLymm5_1;
assume red_1 = mulLymm5_1 && true;
smull mulH_2 red_2 ymm4_2 ymm0_2;
assert true && red_2 = mulLymm5_2;
assume red_2 = mulLymm5_2 && true;
smull mulH_3 red_3 ymm4_3 ymm0_3;
assert true && red_3 = mulLymm5_3;
assume red_3 = mulLymm5_3 && true;
smull mulH_4 red_4 ymm4_4 ymm0_4;
assert true && red_4 = mulLymm5_4;
assume red_4 = mulLymm5_4 && true;
smull mulH_5 red_5 ymm4_5 ymm0_5;
assert true && red_5 = mulLymm5_5;
assume red_5 = mulLymm5_5 && true;
smull mulH_6 red_6 ymm4_6 ymm0_6;
assert true && red_6 = mulLymm5_6;
assume red_6 = mulLymm5_6 && true;
smull mulH_7 red_7 ymm4_7 ymm0_7;
assert true && red_7 = mulLymm5_7;
assume red_7 = mulLymm5_7 && true;
smull mulH_8 red_8 ymm4_8 ymm0_8;
assert true && red_8 = mulLymm5_8;
assume red_8 = mulLymm5_8 && true;
smull mulH_9 red_9 ymm4_9 ymm0_9;
assert true && red_9 = mulLymm5_9;
assume red_9 = mulLymm5_9 && true;
smull mulH_a red_a ymm4_a ymm0_a;
assert true && red_a = mulLymm5_a;
assume red_a = mulLymm5_a && true;
smull mulH_b red_b ymm4_b ymm0_b;
assert true && red_b = mulLymm5_b;
assume red_b = mulLymm5_b && true;
smull mulH_c red_c ymm4_c ymm0_c;
assert true && red_c = mulLymm5_c;
assume red_c = mulLymm5_c && true;
smull mulH_d red_d ymm4_d ymm0_d;
assert true && red_d = mulLymm5_d;
assume red_d = mulLymm5_d && true;
smull mulH_e red_e ymm4_e ymm0_e;
assert true && red_e = mulLymm5_e;
assume red_e = mulLymm5_e && true;
smull mulH_f red_f ymm4_f ymm0_f;
assert true && red_f = mulLymm5_f;
assume red_f = mulLymm5_f && true;
mov ymm4_0 mulH_0;
mov ymm4_1 mulH_1;
mov ymm4_2 mulH_2;
mov ymm4_3 mulH_3;
mov ymm4_4 mulH_4;
mov ymm4_5 mulH_5;
mov ymm4_6 mulH_6;
mov ymm4_7 mulH_7;
mov ymm4_8 mulH_8;
mov ymm4_9 mulH_9;
mov ymm4_a mulH_a;
mov ymm4_b mulH_b;
mov ymm4_c mulH_c;
mov ymm4_d mulH_d;
mov ymm4_e mulH_e;
mov ymm4_f mulH_f;
(* vpsubw %ymm4,%ymm5,%ymm5                        #! PC = 0x55555555783c *)
sub ymm5_0 ymm5_0 ymm4_0;
sub ymm5_1 ymm5_1 ymm4_1;
sub ymm5_2 ymm5_2 ymm4_2;
sub ymm5_3 ymm5_3 ymm4_3;
sub ymm5_4 ymm5_4 ymm4_4;
sub ymm5_5 ymm5_5 ymm4_5;
sub ymm5_6 ymm5_6 ymm4_6;
sub ymm5_7 ymm5_7 ymm4_7;
sub ymm5_8 ymm5_8 ymm4_8;
sub ymm5_9 ymm5_9 ymm4_9;
sub ymm5_a ymm5_a ymm4_a;
sub ymm5_b ymm5_b ymm4_b;
sub ymm5_c ymm5_c ymm4_c;
sub ymm5_d ymm5_d ymm4_d;
sub ymm5_e ymm5_e ymm4_e;
sub ymm5_f ymm5_f ymm4_f;
(* vpaddw %ymm3,%ymm10,%ymm4                       #! PC = 0x555555557840 *)
add ymm4_0 ymm10_0 ymm3_0;
add ymm4_1 ymm10_1 ymm3_1;
add ymm4_2 ymm10_2 ymm3_2;
add ymm4_3 ymm10_3 ymm3_3;
add ymm4_4 ymm10_4 ymm3_4;
add ymm4_5 ymm10_5 ymm3_5;
add ymm4_6 ymm10_6 ymm3_6;
add ymm4_7 ymm10_7 ymm3_7;
add ymm4_8 ymm10_8 ymm3_8;
add ymm4_9 ymm10_9 ymm3_9;
add ymm4_a ymm10_a ymm3_a;
add ymm4_b ymm10_b ymm3_b;
add ymm4_c ymm10_c ymm3_c;
add ymm4_d ymm10_d ymm3_d;
add ymm4_e ymm10_e ymm3_e;
add ymm4_f ymm10_f ymm3_f;
(* vpsubw %ymm3,%ymm10,%ymm3                       #! PC = 0x555555557844 *)
sub ymm3_0 ymm10_0 ymm3_0;
sub ymm3_1 ymm10_1 ymm3_1;
sub ymm3_2 ymm10_2 ymm3_2;
sub ymm3_3 ymm10_3 ymm3_3;
sub ymm3_4 ymm10_4 ymm3_4;
sub ymm3_5 ymm10_5 ymm3_5;
sub ymm3_6 ymm10_6 ymm3_6;
sub ymm3_7 ymm10_7 ymm3_7;
sub ymm3_8 ymm10_8 ymm3_8;
sub ymm3_9 ymm10_9 ymm3_9;
sub ymm3_a ymm10_a ymm3_a;
sub ymm3_b ymm10_b ymm3_b;
sub ymm3_c ymm10_c ymm3_c;
sub ymm3_d ymm10_d ymm3_d;
sub ymm3_e ymm10_e ymm3_e;
sub ymm3_f ymm10_f ymm3_f;
(* vpaddw %ymm6,%ymm9,%ymm10                       #! PC = 0x555555557848 *)
add ymm10_0 ymm9_0 ymm6_0;
add ymm10_1 ymm9_1 ymm6_1;
add ymm10_2 ymm9_2 ymm6_2;
add ymm10_3 ymm9_3 ymm6_3;
add ymm10_4 ymm9_4 ymm6_4;
add ymm10_5 ymm9_5 ymm6_5;
add ymm10_6 ymm9_6 ymm6_6;
add ymm10_7 ymm9_7 ymm6_7;
add ymm10_8 ymm9_8 ymm6_8;
add ymm10_9 ymm9_9 ymm6_9;
add ymm10_a ymm9_a ymm6_a;
add ymm10_b ymm9_b ymm6_b;
add ymm10_c ymm9_c ymm6_c;
add ymm10_d ymm9_d ymm6_d;
add ymm10_e ymm9_e ymm6_e;
add ymm10_f ymm9_f ymm6_f;
(* vpsubw %ymm6,%ymm9,%ymm6                        #! PC = 0x55555555784c *)
sub ymm6_0 ymm9_0 ymm6_0;
sub ymm6_1 ymm9_1 ymm6_1;
sub ymm6_2 ymm9_2 ymm6_2;
sub ymm6_3 ymm9_3 ymm6_3;
sub ymm6_4 ymm9_4 ymm6_4;
sub ymm6_5 ymm9_5 ymm6_5;
sub ymm6_6 ymm9_6 ymm6_6;
sub ymm6_7 ymm9_7 ymm6_7;
sub ymm6_8 ymm9_8 ymm6_8;
sub ymm6_9 ymm9_9 ymm6_9;
sub ymm6_a ymm9_a ymm6_a;
sub ymm6_b ymm9_b ymm6_b;
sub ymm6_c ymm9_c ymm6_c;
sub ymm6_d ymm9_d ymm6_d;
sub ymm6_e ymm9_e ymm6_e;
sub ymm6_f ymm9_f ymm6_f;
(* vpaddw %ymm8,%ymm7,%ymm9                        #! PC = 0x555555557850 *)
add ymm9_0 ymm7_0 ymm8_0;
add ymm9_1 ymm7_1 ymm8_1;
add ymm9_2 ymm7_2 ymm8_2;
add ymm9_3 ymm7_3 ymm8_3;
add ymm9_4 ymm7_4 ymm8_4;
add ymm9_5 ymm7_5 ymm8_5;
add ymm9_6 ymm7_6 ymm8_6;
add ymm9_7 ymm7_7 ymm8_7;
add ymm9_8 ymm7_8 ymm8_8;
add ymm9_9 ymm7_9 ymm8_9;
add ymm9_a ymm7_a ymm8_a;
add ymm9_b ymm7_b ymm8_b;
add ymm9_c ymm7_c ymm8_c;
add ymm9_d ymm7_d ymm8_d;
add ymm9_e ymm7_e ymm8_e;
add ymm9_f ymm7_f ymm8_f;
(* vpsubw %ymm8,%ymm7,%ymm8                        #! PC = 0x555555557855 *)
sub ymm8_0 ymm7_0 ymm8_0;
sub ymm8_1 ymm7_1 ymm8_1;
sub ymm8_2 ymm7_2 ymm8_2;
sub ymm8_3 ymm7_3 ymm8_3;
sub ymm8_4 ymm7_4 ymm8_4;
sub ymm8_5 ymm7_5 ymm8_5;
sub ymm8_6 ymm7_6 ymm8_6;
sub ymm8_7 ymm7_7 ymm8_7;
sub ymm8_8 ymm7_8 ymm8_8;
sub ymm8_9 ymm7_9 ymm8_9;
sub ymm8_a ymm7_a ymm8_a;
sub ymm8_b ymm7_b ymm8_b;
sub ymm8_c ymm7_c ymm8_c;
sub ymm8_d ymm7_d ymm8_d;
sub ymm8_e ymm7_e ymm8_e;
sub ymm8_f ymm7_f ymm8_f;
(* vpaddw %ymm11,%ymm5,%ymm7                       #! PC = 0x55555555785a *)
add ymm7_0 ymm5_0 ymm11_0;
add ymm7_1 ymm5_1 ymm11_1;
add ymm7_2 ymm5_2 ymm11_2;
add ymm7_3 ymm5_3 ymm11_3;
add ymm7_4 ymm5_4 ymm11_4;
add ymm7_5 ymm5_5 ymm11_5;
add ymm7_6 ymm5_6 ymm11_6;
add ymm7_7 ymm5_7 ymm11_7;
add ymm7_8 ymm5_8 ymm11_8;
add ymm7_9 ymm5_9 ymm11_9;
add ymm7_a ymm5_a ymm11_a;
add ymm7_b ymm5_b ymm11_b;
add ymm7_c ymm5_c ymm11_c;
add ymm7_d ymm5_d ymm11_d;
add ymm7_e ymm5_e ymm11_e;
add ymm7_f ymm5_f ymm11_f;
(* vpsubw %ymm11,%ymm5,%ymm11                      #! PC = 0x55555555785f *)
sub ymm11_0 ymm5_0 ymm11_0;
sub ymm11_1 ymm5_1 ymm11_1;
sub ymm11_2 ymm5_2 ymm11_2;
sub ymm11_3 ymm5_3 ymm11_3;
sub ymm11_4 ymm5_4 ymm11_4;
sub ymm11_5 ymm5_5 ymm11_5;
sub ymm11_6 ymm5_6 ymm11_6;
sub ymm11_7 ymm5_7 ymm11_7;
sub ymm11_8 ymm5_8 ymm11_8;
sub ymm11_9 ymm5_9 ymm11_9;
sub ymm11_a ymm5_a ymm11_a;
sub ymm11_b ymm5_b ymm11_b;
sub ymm11_c ymm5_c ymm11_c;
sub ymm11_d ymm5_d ymm11_d;
sub ymm11_e ymm5_e ymm11_e;
sub ymm11_f ymm5_f ymm11_f;
(* vpunpcklwd %ymm3,%ymm4,%ymm5                    #! PC = 0x555555557864 *)
mov lwd_0 ymm4_0;
mov lwd_1 ymm3_0;
mov lwd_2 ymm4_1;
mov lwd_3 ymm3_1;
mov lwd_4 ymm4_2;
mov lwd_5 ymm3_2;
mov lwd_6 ymm4_3;
mov lwd_7 ymm3_3;
mov lwd_8 ymm4_8;
mov lwd_9 ymm3_8;
mov lwd_a ymm4_9;
mov lwd_b ymm3_9;
mov lwd_c ymm4_a;
mov lwd_d ymm3_a;
mov lwd_e ymm4_b;
mov lwd_f ymm3_b;
mov ymm5_0 lwd_0;
mov ymm5_1 lwd_1;
mov ymm5_2 lwd_2;
mov ymm5_3 lwd_3;
mov ymm5_4 lwd_4;
mov ymm5_5 lwd_5;
mov ymm5_6 lwd_6;
mov ymm5_7 lwd_7;
mov ymm5_8 lwd_8;
mov ymm5_9 lwd_9;
mov ymm5_a lwd_a;
mov ymm5_b lwd_b;
mov ymm5_c lwd_c;
mov ymm5_d lwd_d;
mov ymm5_e lwd_e;
mov ymm5_f lwd_f;
(* vpunpckhwd %ymm3,%ymm4,%ymm3                    #! PC = 0x555555557868 *)
mov hwd_0 ymm4_4;
mov hwd_1 ymm3_4;
mov hwd_2 ymm4_5;
mov hwd_3 ymm3_5;
mov hwd_4 ymm4_6;
mov hwd_5 ymm3_6;
mov hwd_6 ymm4_7;
mov hwd_7 ymm3_7;
mov hwd_8 ymm4_c;
mov hwd_9 ymm3_c;
mov hwd_a ymm4_d;
mov hwd_b ymm3_d;
mov hwd_c ymm4_e;
mov hwd_d ymm3_e;
mov hwd_e ymm4_f;
mov hwd_f ymm3_f;
mov ymm3_0 hwd_0;
mov ymm3_1 hwd_1;
mov ymm3_2 hwd_2;
mov ymm3_3 hwd_3;
mov ymm3_4 hwd_4;
mov ymm3_5 hwd_5;
mov ymm3_6 hwd_6;
mov ymm3_7 hwd_7;
mov ymm3_8 hwd_8;
mov ymm3_9 hwd_9;
mov ymm3_a hwd_a;
mov ymm3_b hwd_b;
mov ymm3_c hwd_c;
mov ymm3_d hwd_d;
mov ymm3_e hwd_e;
mov ymm3_f hwd_f;
(* vpunpcklwd %ymm6,%ymm10,%ymm4                   #! PC = 0x55555555786c *)
mov lwd_0 ymm10_0;
mov lwd_1 ymm6_0;
mov lwd_2 ymm10_1;
mov lwd_3 ymm6_1;
mov lwd_4 ymm10_2;
mov lwd_5 ymm6_2;
mov lwd_6 ymm10_3;
mov lwd_7 ymm6_3;
mov lwd_8 ymm10_8;
mov lwd_9 ymm6_8;
mov lwd_a ymm10_9;
mov lwd_b ymm6_9;
mov lwd_c ymm10_a;
mov lwd_d ymm6_a;
mov lwd_e ymm10_b;
mov lwd_f ymm6_b;
mov ymm4_0 lwd_0;
mov ymm4_1 lwd_1;
mov ymm4_2 lwd_2;
mov ymm4_3 lwd_3;
mov ymm4_4 lwd_4;
mov ymm4_5 lwd_5;
mov ymm4_6 lwd_6;
mov ymm4_7 lwd_7;
mov ymm4_8 lwd_8;
mov ymm4_9 lwd_9;
mov ymm4_a lwd_a;
mov ymm4_b lwd_b;
mov ymm4_c lwd_c;
mov ymm4_d lwd_d;
mov ymm4_e lwd_e;
mov ymm4_f lwd_f;
(* vpunpckhwd %ymm6,%ymm10,%ymm6                   #! PC = 0x555555557870 *)
mov hwd_0 ymm10_4;
mov hwd_1 ymm6_4;
mov hwd_2 ymm10_5;
mov hwd_3 ymm6_5;
mov hwd_4 ymm10_6;
mov hwd_5 ymm6_6;
mov hwd_6 ymm10_7;
mov hwd_7 ymm6_7;
mov hwd_8 ymm10_c;
mov hwd_9 ymm6_c;
mov hwd_a ymm10_d;
mov hwd_b ymm6_d;
mov hwd_c ymm10_e;
mov hwd_d ymm6_e;
mov hwd_e ymm10_f;
mov hwd_f ymm6_f;
mov ymm6_0 hwd_0;
mov ymm6_1 hwd_1;
mov ymm6_2 hwd_2;
mov ymm6_3 hwd_3;
mov ymm6_4 hwd_4;
mov ymm6_5 hwd_5;
mov ymm6_6 hwd_6;
mov ymm6_7 hwd_7;
mov ymm6_8 hwd_8;
mov ymm6_9 hwd_9;
mov ymm6_a hwd_a;
mov ymm6_b hwd_b;
mov ymm6_c hwd_c;
mov ymm6_d hwd_d;
mov ymm6_e hwd_e;
mov ymm6_f hwd_f;
(* vpunpcklwd %ymm8,%ymm9,%ymm10                   #! PC = 0x555555557874 *)
mov lwd_0 ymm9_0;
mov lwd_1 ymm8_0;
mov lwd_2 ymm9_1;
mov lwd_3 ymm8_1;
mov lwd_4 ymm9_2;
mov lwd_5 ymm8_2;
mov lwd_6 ymm9_3;
mov lwd_7 ymm8_3;
mov lwd_8 ymm9_8;
mov lwd_9 ymm8_8;
mov lwd_a ymm9_9;
mov lwd_b ymm8_9;
mov lwd_c ymm9_a;
mov lwd_d ymm8_a;
mov lwd_e ymm9_b;
mov lwd_f ymm8_b;
mov ymm10_0 lwd_0;
mov ymm10_1 lwd_1;
mov ymm10_2 lwd_2;
mov ymm10_3 lwd_3;
mov ymm10_4 lwd_4;
mov ymm10_5 lwd_5;
mov ymm10_6 lwd_6;
mov ymm10_7 lwd_7;
mov ymm10_8 lwd_8;
mov ymm10_9 lwd_9;
mov ymm10_a lwd_a;
mov ymm10_b lwd_b;
mov ymm10_c lwd_c;
mov ymm10_d lwd_d;
mov ymm10_e lwd_e;
mov ymm10_f lwd_f;
(* vpunpckhwd %ymm8,%ymm9,%ymm8                    #! PC = 0x555555557879 *)
mov hwd_0 ymm9_4;
mov hwd_1 ymm8_4;
mov hwd_2 ymm9_5;
mov hwd_3 ymm8_5;
mov hwd_4 ymm9_6;
mov hwd_5 ymm8_6;
mov hwd_6 ymm9_7;
mov hwd_7 ymm8_7;
mov hwd_8 ymm9_c;
mov hwd_9 ymm8_c;
mov hwd_a ymm9_d;
mov hwd_b ymm8_d;
mov hwd_c ymm9_e;
mov hwd_d ymm8_e;
mov hwd_e ymm9_f;
mov hwd_f ymm8_f;
mov ymm8_0 hwd_0;
mov ymm8_1 hwd_1;
mov ymm8_2 hwd_2;
mov ymm8_3 hwd_3;
mov ymm8_4 hwd_4;
mov ymm8_5 hwd_5;
mov ymm8_6 hwd_6;
mov ymm8_7 hwd_7;
mov ymm8_8 hwd_8;
mov ymm8_9 hwd_9;
mov ymm8_a hwd_a;
mov ymm8_b hwd_b;
mov ymm8_c hwd_c;
mov ymm8_d hwd_d;
mov ymm8_e hwd_e;
mov ymm8_f hwd_f;
(* vpunpcklwd %ymm11,%ymm7,%ymm9                   #! PC = 0x55555555787e *)
mov lwd_0 ymm7_0;
mov lwd_1 ymm11_0;
mov lwd_2 ymm7_1;
mov lwd_3 ymm11_1;
mov lwd_4 ymm7_2;
mov lwd_5 ymm11_2;
mov lwd_6 ymm7_3;
mov lwd_7 ymm11_3;
mov lwd_8 ymm7_8;
mov lwd_9 ymm11_8;
mov lwd_a ymm7_9;
mov lwd_b ymm11_9;
mov lwd_c ymm7_a;
mov lwd_d ymm11_a;
mov lwd_e ymm7_b;
mov lwd_f ymm11_b;
mov ymm9_0 lwd_0;
mov ymm9_1 lwd_1;
mov ymm9_2 lwd_2;
mov ymm9_3 lwd_3;
mov ymm9_4 lwd_4;
mov ymm9_5 lwd_5;
mov ymm9_6 lwd_6;
mov ymm9_7 lwd_7;
mov ymm9_8 lwd_8;
mov ymm9_9 lwd_9;
mov ymm9_a lwd_a;
mov ymm9_b lwd_b;
mov ymm9_c lwd_c;
mov ymm9_d lwd_d;
mov ymm9_e lwd_e;
mov ymm9_f lwd_f;
(* vpunpckhwd %ymm11,%ymm7,%ymm11                  #! PC = 0x555555557883 *)
mov hwd_0 ymm7_4;
mov hwd_1 ymm11_4;
mov hwd_2 ymm7_5;
mov hwd_3 ymm11_5;
mov hwd_4 ymm7_6;
mov hwd_5 ymm11_6;
mov hwd_6 ymm7_7;
mov hwd_7 ymm11_7;
mov hwd_8 ymm7_c;
mov hwd_9 ymm11_c;
mov hwd_a ymm7_d;
mov hwd_b ymm11_d;
mov hwd_c ymm7_e;
mov hwd_d ymm11_e;
mov hwd_e ymm7_f;
mov hwd_f ymm11_f;
mov ymm11_0 hwd_0;
mov ymm11_1 hwd_1;
mov ymm11_2 hwd_2;
mov ymm11_3 hwd_3;
mov ymm11_4 hwd_4;
mov ymm11_5 hwd_5;
mov ymm11_6 hwd_6;
mov ymm11_7 hwd_7;
mov ymm11_8 hwd_8;
mov ymm11_9 hwd_9;
mov ymm11_a hwd_a;
mov ymm11_b hwd_b;
mov ymm11_c hwd_c;
mov ymm11_d hwd_d;
mov ymm11_e hwd_e;
mov ymm11_f hwd_f;
(* vpbroadcastq 0x100(%rdx),%ymm1                  #! EA = L0x555555561220; Value = 0x0198f85c6adffffa; PC = 0x555555557888 *)
mov ymm1_0 L0x555555561220;
mov ymm1_1 L0x555555561222;
mov ymm1_2 L0x555555561224;
mov ymm1_3 L0x555555561226;
mov ymm1_4 L0x555555561220;
mov ymm1_5 L0x555555561222;
mov ymm1_6 L0x555555561224;
mov ymm1_7 L0x555555561226;
mov ymm1_8 L0x555555561220;
mov ymm1_9 L0x555555561222;
mov ymm1_a L0x555555561224;
mov ymm1_b L0x555555561226;
mov ymm1_c L0x555555561220;
mov ymm1_d L0x555555561222;
mov ymm1_e L0x555555561224;
mov ymm1_f L0x555555561226;
(* vpbroadcastq 0x300(%rdx),%ymm2                  #! EA = L0x555555561420; Value = 0xf198105c00df03fa; PC = 0x555555557891 *)
mov ymm2_0 L0x555555561420;
mov ymm2_1 L0x555555561422;
mov ymm2_2 L0x555555561424;
mov ymm2_3 L0x555555561426;
mov ymm2_4 L0x555555561420;
mov ymm2_5 L0x555555561422;
mov ymm2_6 L0x555555561424;
mov ymm2_7 L0x555555561426;
mov ymm2_8 L0x555555561420;
mov ymm2_9 L0x555555561422;
mov ymm2_a L0x555555561424;
mov ymm2_b L0x555555561426;
mov ymm2_c L0x555555561420;
mov ymm2_d L0x555555561422;
mov ymm2_e L0x555555561424;
mov ymm2_f L0x555555561426;
(* vpmullw %ymm1,%ymm3,%ymm7                       #! PC = 0x55555555789a *)
smull mulHymm3_0 mulL_0 ymm1_0 ymm3_0;
smull mulHymm3_1 mulL_1 ymm1_1 ymm3_1;
smull mulHymm3_2 mulL_2 ymm1_2 ymm3_2;
smull mulHymm3_3 mulL_3 ymm1_3 ymm3_3;
smull mulHymm3_4 mulL_4 ymm1_4 ymm3_4;
smull mulHymm3_5 mulL_5 ymm1_5 ymm3_5;
smull mulHymm3_6 mulL_6 ymm1_6 ymm3_6;
smull mulHymm3_7 mulL_7 ymm1_7 ymm3_7;
smull mulHymm3_8 mulL_8 ymm1_8 ymm3_8;
smull mulHymm3_9 mulL_9 ymm1_9 ymm3_9;
smull mulHymm3_a mulL_a ymm1_a ymm3_a;
smull mulHymm3_b mulL_b ymm1_b ymm3_b;
smull mulHymm3_c mulL_c ymm1_c ymm3_c;
smull mulHymm3_d mulL_d ymm1_d ymm3_d;
smull mulHymm3_e mulL_e ymm1_e ymm3_e;
smull mulHymm3_f mulL_f ymm1_f ymm3_f;
cast ymm7_0@sint16 mulL_0;
cast ymm7_1@sint16 mulL_1;
cast ymm7_2@sint16 mulL_2;
cast ymm7_3@sint16 mulL_3;
cast ymm7_4@sint16 mulL_4;
cast ymm7_5@sint16 mulL_5;
cast ymm7_6@sint16 mulL_6;
cast ymm7_7@sint16 mulL_7;
cast ymm7_8@sint16 mulL_8;
cast ymm7_9@sint16 mulL_9;
cast ymm7_a@sint16 mulL_a;
cast ymm7_b@sint16 mulL_b;
cast ymm7_c@sint16 mulL_c;
cast ymm7_d@sint16 mulL_d;
cast ymm7_e@sint16 mulL_e;
cast ymm7_f@sint16 mulL_f;
(* vpmulhw %ymm2,%ymm3,%ymm3                       #! PC = 0x55555555789e *)
smull mulH_0 mulLymm3_0 ymm3_0 ymm2_0;
smull mulH_1 mulLymm3_1 ymm3_1 ymm2_1;
smull mulH_2 mulLymm3_2 ymm3_2 ymm2_2;
smull mulH_3 mulLymm3_3 ymm3_3 ymm2_3;
smull mulH_4 mulLymm3_4 ymm3_4 ymm2_4;
smull mulH_5 mulLymm3_5 ymm3_5 ymm2_5;
smull mulH_6 mulLymm3_6 ymm3_6 ymm2_6;
smull mulH_7 mulLymm3_7 ymm3_7 ymm2_7;
smull mulH_8 mulLymm3_8 ymm3_8 ymm2_8;
smull mulH_9 mulLymm3_9 ymm3_9 ymm2_9;
smull mulH_a mulLymm3_a ymm3_a ymm2_a;
smull mulH_b mulLymm3_b ymm3_b ymm2_b;
smull mulH_c mulLymm3_c ymm3_c ymm2_c;
smull mulH_d mulLymm3_d ymm3_d ymm2_d;
smull mulH_e mulLymm3_e ymm3_e ymm2_e;
smull mulH_f mulLymm3_f ymm3_f ymm2_f;
mov ymm3_0 mulH_0;
mov ymm3_1 mulH_1;
mov ymm3_2 mulH_2;
mov ymm3_3 mulH_3;
mov ymm3_4 mulH_4;
mov ymm3_5 mulH_5;
mov ymm3_6 mulH_6;
mov ymm3_7 mulH_7;
mov ymm3_8 mulH_8;
mov ymm3_9 mulH_9;
mov ymm3_a mulH_a;
mov ymm3_b mulH_b;
mov ymm3_c mulH_c;
mov ymm3_d mulH_d;
mov ymm3_e mulH_e;
mov ymm3_f mulH_f;
(* vpmulhw %ymm0,%ymm7,%ymm7                       #! PC = 0x5555555578a2 *)
smull mulH_0 red_0 ymm7_0 ymm0_0;
assert true && red_0 = mulLymm3_0;
assume red_0 = mulLymm3_0 && true;
smull mulH_1 red_1 ymm7_1 ymm0_1;
assert true && red_1 = mulLymm3_1;
assume red_1 = mulLymm3_1 && true;
smull mulH_2 red_2 ymm7_2 ymm0_2;
assert true && red_2 = mulLymm3_2;
assume red_2 = mulLymm3_2 && true;
smull mulH_3 red_3 ymm7_3 ymm0_3;
assert true && red_3 = mulLymm3_3;
assume red_3 = mulLymm3_3 && true;
smull mulH_4 red_4 ymm7_4 ymm0_4;
assert true && red_4 = mulLymm3_4;
assume red_4 = mulLymm3_4 && true;
smull mulH_5 red_5 ymm7_5 ymm0_5;
assert true && red_5 = mulLymm3_5;
assume red_5 = mulLymm3_5 && true;
smull mulH_6 red_6 ymm7_6 ymm0_6;
assert true && red_6 = mulLymm3_6;
assume red_6 = mulLymm3_6 && true;
smull mulH_7 red_7 ymm7_7 ymm0_7;
assert true && red_7 = mulLymm3_7;
assume red_7 = mulLymm3_7 && true;
smull mulH_8 red_8 ymm7_8 ymm0_8;
assert true && red_8 = mulLymm3_8;
assume red_8 = mulLymm3_8 && true;
smull mulH_9 red_9 ymm7_9 ymm0_9;
assert true && red_9 = mulLymm3_9;
assume red_9 = mulLymm3_9 && true;
smull mulH_a red_a ymm7_a ymm0_a;
assert true && red_a = mulLymm3_a;
assume red_a = mulLymm3_a && true;
smull mulH_b red_b ymm7_b ymm0_b;
assert true && red_b = mulLymm3_b;
assume red_b = mulLymm3_b && true;
smull mulH_c red_c ymm7_c ymm0_c;
assert true && red_c = mulLymm3_c;
assume red_c = mulLymm3_c && true;
smull mulH_d red_d ymm7_d ymm0_d;
assert true && red_d = mulLymm3_d;
assume red_d = mulLymm3_d && true;
smull mulH_e red_e ymm7_e ymm0_e;
assert true && red_e = mulLymm3_e;
assume red_e = mulLymm3_e && true;
smull mulH_f red_f ymm7_f ymm0_f;
assert true && red_f = mulLymm3_f;
assume red_f = mulLymm3_f && true;
mov ymm7_0 mulH_0;
mov ymm7_1 mulH_1;
mov ymm7_2 mulH_2;
mov ymm7_3 mulH_3;
mov ymm7_4 mulH_4;
mov ymm7_5 mulH_5;
mov ymm7_6 mulH_6;
mov ymm7_7 mulH_7;
mov ymm7_8 mulH_8;
mov ymm7_9 mulH_9;
mov ymm7_a mulH_a;
mov ymm7_b mulH_b;
mov ymm7_c mulH_c;
mov ymm7_d mulH_d;
mov ymm7_e mulH_e;
mov ymm7_f mulH_f;
(* vpsubw %ymm7,%ymm3,%ymm3                        #! PC = 0x5555555578a6 *)
sub ymm3_0 ymm3_0 ymm7_0;
sub ymm3_1 ymm3_1 ymm7_1;
sub ymm3_2 ymm3_2 ymm7_2;
sub ymm3_3 ymm3_3 ymm7_3;
sub ymm3_4 ymm3_4 ymm7_4;
sub ymm3_5 ymm3_5 ymm7_5;
sub ymm3_6 ymm3_6 ymm7_6;
sub ymm3_7 ymm3_7 ymm7_7;
sub ymm3_8 ymm3_8 ymm7_8;
sub ymm3_9 ymm3_9 ymm7_9;
sub ymm3_a ymm3_a ymm7_a;
sub ymm3_b ymm3_b ymm7_b;
sub ymm3_c ymm3_c ymm7_c;
sub ymm3_d ymm3_d ymm7_d;
sub ymm3_e ymm3_e ymm7_e;
sub ymm3_f ymm3_f ymm7_f;
(* vpbroadcastq 0x108(%rdx),%ymm1                  #! EA = L0x555555561228; Value = 0xae886f65ad9a276d; PC = 0x5555555578aa *)
mov ymm1_0 L0x555555561228;
mov ymm1_1 L0x55555556122a;
mov ymm1_2 L0x55555556122c;
mov ymm1_3 L0x55555556122e;
mov ymm1_4 L0x555555561228;
mov ymm1_5 L0x55555556122a;
mov ymm1_6 L0x55555556122c;
mov ymm1_7 L0x55555556122e;
mov ymm1_8 L0x555555561228;
mov ymm1_9 L0x55555556122a;
mov ymm1_a L0x55555556122c;
mov ymm1_b L0x55555556122e;
mov ymm1_c L0x555555561228;
mov ymm1_d L0x55555556122a;
mov ymm1_e L0x55555556122c;
mov ymm1_f L0x55555556122e;
(* vpbroadcastq 0x308(%rdx),%ymm2                  #! EA = L0x555555561428; Value = 0xfe880165f19a096d; PC = 0x5555555578b3 *)
mov ymm2_0 L0x555555561428;
mov ymm2_1 L0x55555556142a;
mov ymm2_2 L0x55555556142c;
mov ymm2_3 L0x55555556142e;
mov ymm2_4 L0x555555561428;
mov ymm2_5 L0x55555556142a;
mov ymm2_6 L0x55555556142c;
mov ymm2_7 L0x55555556142e;
mov ymm2_8 L0x555555561428;
mov ymm2_9 L0x55555556142a;
mov ymm2_a L0x55555556142c;
mov ymm2_b L0x55555556142e;
mov ymm2_c L0x555555561428;
mov ymm2_d L0x55555556142a;
mov ymm2_e L0x55555556142c;
mov ymm2_f L0x55555556142e;
(* vpmullw %ymm1,%ymm6,%ymm7                       #! PC = 0x5555555578bc *)
smull mulHymm6_0 mulL_0 ymm1_0 ymm6_0;
smull mulHymm6_1 mulL_1 ymm1_1 ymm6_1;
smull mulHymm6_2 mulL_2 ymm1_2 ymm6_2;
smull mulHymm6_3 mulL_3 ymm1_3 ymm6_3;
smull mulHymm6_4 mulL_4 ymm1_4 ymm6_4;
smull mulHymm6_5 mulL_5 ymm1_5 ymm6_5;
smull mulHymm6_6 mulL_6 ymm1_6 ymm6_6;
smull mulHymm6_7 mulL_7 ymm1_7 ymm6_7;
smull mulHymm6_8 mulL_8 ymm1_8 ymm6_8;
smull mulHymm6_9 mulL_9 ymm1_9 ymm6_9;
smull mulHymm6_a mulL_a ymm1_a ymm6_a;
smull mulHymm6_b mulL_b ymm1_b ymm6_b;
smull mulHymm6_c mulL_c ymm1_c ymm6_c;
smull mulHymm6_d mulL_d ymm1_d ymm6_d;
smull mulHymm6_e mulL_e ymm1_e ymm6_e;
smull mulHymm6_f mulL_f ymm1_f ymm6_f;
cast ymm7_0@sint16 mulL_0;
cast ymm7_1@sint16 mulL_1;
cast ymm7_2@sint16 mulL_2;
cast ymm7_3@sint16 mulL_3;
cast ymm7_4@sint16 mulL_4;
cast ymm7_5@sint16 mulL_5;
cast ymm7_6@sint16 mulL_6;
cast ymm7_7@sint16 mulL_7;
cast ymm7_8@sint16 mulL_8;
cast ymm7_9@sint16 mulL_9;
cast ymm7_a@sint16 mulL_a;
cast ymm7_b@sint16 mulL_b;
cast ymm7_c@sint16 mulL_c;
cast ymm7_d@sint16 mulL_d;
cast ymm7_e@sint16 mulL_e;
cast ymm7_f@sint16 mulL_f;
(* vpmulhw %ymm2,%ymm6,%ymm6                       #! PC = 0x5555555578c0 *)
smull mulH_0 mulLymm6_0 ymm6_0 ymm2_0;
smull mulH_1 mulLymm6_1 ymm6_1 ymm2_1;
smull mulH_2 mulLymm6_2 ymm6_2 ymm2_2;
smull mulH_3 mulLymm6_3 ymm6_3 ymm2_3;
smull mulH_4 mulLymm6_4 ymm6_4 ymm2_4;
smull mulH_5 mulLymm6_5 ymm6_5 ymm2_5;
smull mulH_6 mulLymm6_6 ymm6_6 ymm2_6;
smull mulH_7 mulLymm6_7 ymm6_7 ymm2_7;
smull mulH_8 mulLymm6_8 ymm6_8 ymm2_8;
smull mulH_9 mulLymm6_9 ymm6_9 ymm2_9;
smull mulH_a mulLymm6_a ymm6_a ymm2_a;
smull mulH_b mulLymm6_b ymm6_b ymm2_b;
smull mulH_c mulLymm6_c ymm6_c ymm2_c;
smull mulH_d mulLymm6_d ymm6_d ymm2_d;
smull mulH_e mulLymm6_e ymm6_e ymm2_e;
smull mulH_f mulLymm6_f ymm6_f ymm2_f;
mov ymm6_0 mulH_0;
mov ymm6_1 mulH_1;
mov ymm6_2 mulH_2;
mov ymm6_3 mulH_3;
mov ymm6_4 mulH_4;
mov ymm6_5 mulH_5;
mov ymm6_6 mulH_6;
mov ymm6_7 mulH_7;
mov ymm6_8 mulH_8;
mov ymm6_9 mulH_9;
mov ymm6_a mulH_a;
mov ymm6_b mulH_b;
mov ymm6_c mulH_c;
mov ymm6_d mulH_d;
mov ymm6_e mulH_e;
mov ymm6_f mulH_f;
(* vpmulhw %ymm0,%ymm7,%ymm7                       #! PC = 0x5555555578c4 *)
smull mulH_0 red_0 ymm7_0 ymm0_0;
assert true && red_0 = mulLymm6_0;
assume red_0 = mulLymm6_0 && true;
smull mulH_1 red_1 ymm7_1 ymm0_1;
assert true && red_1 = mulLymm6_1;
assume red_1 = mulLymm6_1 && true;
smull mulH_2 red_2 ymm7_2 ymm0_2;
assert true && red_2 = mulLymm6_2;
assume red_2 = mulLymm6_2 && true;
smull mulH_3 red_3 ymm7_3 ymm0_3;
assert true && red_3 = mulLymm6_3;
assume red_3 = mulLymm6_3 && true;
smull mulH_4 red_4 ymm7_4 ymm0_4;
assert true && red_4 = mulLymm6_4;
assume red_4 = mulLymm6_4 && true;
smull mulH_5 red_5 ymm7_5 ymm0_5;
assert true && red_5 = mulLymm6_5;
assume red_5 = mulLymm6_5 && true;
smull mulH_6 red_6 ymm7_6 ymm0_6;
assert true && red_6 = mulLymm6_6;
assume red_6 = mulLymm6_6 && true;
smull mulH_7 red_7 ymm7_7 ymm0_7;
assert true && red_7 = mulLymm6_7;
assume red_7 = mulLymm6_7 && true;
smull mulH_8 red_8 ymm7_8 ymm0_8;
assert true && red_8 = mulLymm6_8;
assume red_8 = mulLymm6_8 && true;
smull mulH_9 red_9 ymm7_9 ymm0_9;
assert true && red_9 = mulLymm6_9;
assume red_9 = mulLymm6_9 && true;
smull mulH_a red_a ymm7_a ymm0_a;
assert true && red_a = mulLymm6_a;
assume red_a = mulLymm6_a && true;
smull mulH_b red_b ymm7_b ymm0_b;
assert true && red_b = mulLymm6_b;
assume red_b = mulLymm6_b && true;
smull mulH_c red_c ymm7_c ymm0_c;
assert true && red_c = mulLymm6_c;
assume red_c = mulLymm6_c && true;
smull mulH_d red_d ymm7_d ymm0_d;
assert true && red_d = mulLymm6_d;
assume red_d = mulLymm6_d && true;
smull mulH_e red_e ymm7_e ymm0_e;
assert true && red_e = mulLymm6_e;
assume red_e = mulLymm6_e && true;
smull mulH_f red_f ymm7_f ymm0_f;
assert true && red_f = mulLymm6_f;
assume red_f = mulLymm6_f && true;
mov ymm7_0 mulH_0;
mov ymm7_1 mulH_1;
mov ymm7_2 mulH_2;
mov ymm7_3 mulH_3;
mov ymm7_4 mulH_4;
mov ymm7_5 mulH_5;
mov ymm7_6 mulH_6;
mov ymm7_7 mulH_7;
mov ymm7_8 mulH_8;
mov ymm7_9 mulH_9;
mov ymm7_a mulH_a;
mov ymm7_b mulH_b;
mov ymm7_c mulH_c;
mov ymm7_d mulH_d;
mov ymm7_e mulH_e;
mov ymm7_f mulH_f;
(* vpsubw %ymm7,%ymm6,%ymm6                        #! PC = 0x5555555578c8 *)
sub ymm6_0 ymm6_0 ymm7_0;
sub ymm6_1 ymm6_1 ymm7_1;
sub ymm6_2 ymm6_2 ymm7_2;
sub ymm6_3 ymm6_3 ymm7_3;
sub ymm6_4 ymm6_4 ymm7_4;
sub ymm6_5 ymm6_5 ymm7_5;
sub ymm6_6 ymm6_6 ymm7_6;
sub ymm6_7 ymm6_7 ymm7_7;
sub ymm6_8 ymm6_8 ymm7_8;
sub ymm6_9 ymm6_9 ymm7_9;
sub ymm6_a ymm6_a ymm7_a;
sub ymm6_b ymm6_b ymm7_b;
sub ymm6_c ymm6_c ymm7_c;
sub ymm6_d ymm6_d ymm7_d;
sub ymm6_e ymm6_e ymm7_e;
sub ymm6_f ymm6_f ymm7_f;
(* vpbroadcastq 0x110(%rdx),%ymm1                  #! EA = L0x555555561230; Value = 0x30bc8cf7c126e487; PC = 0x5555555578cc *)
mov ymm1_0 L0x555555561230;
mov ymm1_1 L0x555555561232;
mov ymm1_2 L0x555555561234;
mov ymm1_3 L0x555555561236;
mov ymm1_4 L0x555555561230;
mov ymm1_5 L0x555555561232;
mov ymm1_6 L0x555555561234;
mov ymm1_7 L0x555555561236;
mov ymm1_8 L0x555555561230;
mov ymm1_9 L0x555555561232;
mov ymm1_a L0x555555561234;
mov ymm1_b L0x555555561236;
mov ymm1_c L0x555555561230;
mov ymm1_d L0x555555561232;
mov ymm1_e L0x555555561234;
mov ymm1_f L0x555555561236;
(* vpbroadcastq 0x310(%rdx),%ymm2                  #! EA = L0x555555561430; Value = 0x08bc12f7fd260a87; PC = 0x5555555578d5 *)
mov ymm2_0 L0x555555561430;
mov ymm2_1 L0x555555561432;
mov ymm2_2 L0x555555561434;
mov ymm2_3 L0x555555561436;
mov ymm2_4 L0x555555561430;
mov ymm2_5 L0x555555561432;
mov ymm2_6 L0x555555561434;
mov ymm2_7 L0x555555561436;
mov ymm2_8 L0x555555561430;
mov ymm2_9 L0x555555561432;
mov ymm2_a L0x555555561434;
mov ymm2_b L0x555555561436;
mov ymm2_c L0x555555561430;
mov ymm2_d L0x555555561432;
mov ymm2_e L0x555555561434;
mov ymm2_f L0x555555561436;
(* vpmullw %ymm1,%ymm8,%ymm7                       #! PC = 0x5555555578de *)
smull mulHymm8_0 mulL_0 ymm1_0 ymm8_0;
smull mulHymm8_1 mulL_1 ymm1_1 ymm8_1;
smull mulHymm8_2 mulL_2 ymm1_2 ymm8_2;
smull mulHymm8_3 mulL_3 ymm1_3 ymm8_3;
smull mulHymm8_4 mulL_4 ymm1_4 ymm8_4;
smull mulHymm8_5 mulL_5 ymm1_5 ymm8_5;
smull mulHymm8_6 mulL_6 ymm1_6 ymm8_6;
smull mulHymm8_7 mulL_7 ymm1_7 ymm8_7;
smull mulHymm8_8 mulL_8 ymm1_8 ymm8_8;
smull mulHymm8_9 mulL_9 ymm1_9 ymm8_9;
smull mulHymm8_a mulL_a ymm1_a ymm8_a;
smull mulHymm8_b mulL_b ymm1_b ymm8_b;
smull mulHymm8_c mulL_c ymm1_c ymm8_c;
smull mulHymm8_d mulL_d ymm1_d ymm8_d;
smull mulHymm8_e mulL_e ymm1_e ymm8_e;
smull mulHymm8_f mulL_f ymm1_f ymm8_f;
cast ymm7_0@sint16 mulL_0;
cast ymm7_1@sint16 mulL_1;
cast ymm7_2@sint16 mulL_2;
cast ymm7_3@sint16 mulL_3;
cast ymm7_4@sint16 mulL_4;
cast ymm7_5@sint16 mulL_5;
cast ymm7_6@sint16 mulL_6;
cast ymm7_7@sint16 mulL_7;
cast ymm7_8@sint16 mulL_8;
cast ymm7_9@sint16 mulL_9;
cast ymm7_a@sint16 mulL_a;
cast ymm7_b@sint16 mulL_b;
cast ymm7_c@sint16 mulL_c;
cast ymm7_d@sint16 mulL_d;
cast ymm7_e@sint16 mulL_e;
cast ymm7_f@sint16 mulL_f;
(* vpmulhw %ymm2,%ymm8,%ymm8                       #! PC = 0x5555555578e2 *)
smull mulH_0 mulLymm8_0 ymm8_0 ymm2_0;
smull mulH_1 mulLymm8_1 ymm8_1 ymm2_1;
smull mulH_2 mulLymm8_2 ymm8_2 ymm2_2;
smull mulH_3 mulLymm8_3 ymm8_3 ymm2_3;
smull mulH_4 mulLymm8_4 ymm8_4 ymm2_4;
smull mulH_5 mulLymm8_5 ymm8_5 ymm2_5;
smull mulH_6 mulLymm8_6 ymm8_6 ymm2_6;
smull mulH_7 mulLymm8_7 ymm8_7 ymm2_7;
smull mulH_8 mulLymm8_8 ymm8_8 ymm2_8;
smull mulH_9 mulLymm8_9 ymm8_9 ymm2_9;
smull mulH_a mulLymm8_a ymm8_a ymm2_a;
smull mulH_b mulLymm8_b ymm8_b ymm2_b;
smull mulH_c mulLymm8_c ymm8_c ymm2_c;
smull mulH_d mulLymm8_d ymm8_d ymm2_d;
smull mulH_e mulLymm8_e ymm8_e ymm2_e;
smull mulH_f mulLymm8_f ymm8_f ymm2_f;
mov ymm8_0 mulH_0;
mov ymm8_1 mulH_1;
mov ymm8_2 mulH_2;
mov ymm8_3 mulH_3;
mov ymm8_4 mulH_4;
mov ymm8_5 mulH_5;
mov ymm8_6 mulH_6;
mov ymm8_7 mulH_7;
mov ymm8_8 mulH_8;
mov ymm8_9 mulH_9;
mov ymm8_a mulH_a;
mov ymm8_b mulH_b;
mov ymm8_c mulH_c;
mov ymm8_d mulH_d;
mov ymm8_e mulH_e;
mov ymm8_f mulH_f;
(* vpmulhw %ymm0,%ymm7,%ymm7                       #! PC = 0x5555555578e6 *)
smull mulH_0 red_0 ymm7_0 ymm0_0;
assert true && red_0 = mulLymm8_0;
assume red_0 = mulLymm8_0 && true;
smull mulH_1 red_1 ymm7_1 ymm0_1;
assert true && red_1 = mulLymm8_1;
assume red_1 = mulLymm8_1 && true;
smull mulH_2 red_2 ymm7_2 ymm0_2;
assert true && red_2 = mulLymm8_2;
assume red_2 = mulLymm8_2 && true;
smull mulH_3 red_3 ymm7_3 ymm0_3;
assert true && red_3 = mulLymm8_3;
assume red_3 = mulLymm8_3 && true;
smull mulH_4 red_4 ymm7_4 ymm0_4;
assert true && red_4 = mulLymm8_4;
assume red_4 = mulLymm8_4 && true;
smull mulH_5 red_5 ymm7_5 ymm0_5;
assert true && red_5 = mulLymm8_5;
assume red_5 = mulLymm8_5 && true;
smull mulH_6 red_6 ymm7_6 ymm0_6;
assert true && red_6 = mulLymm8_6;
assume red_6 = mulLymm8_6 && true;
smull mulH_7 red_7 ymm7_7 ymm0_7;
assert true && red_7 = mulLymm8_7;
assume red_7 = mulLymm8_7 && true;
smull mulH_8 red_8 ymm7_8 ymm0_8;
assert true && red_8 = mulLymm8_8;
assume red_8 = mulLymm8_8 && true;
smull mulH_9 red_9 ymm7_9 ymm0_9;
assert true && red_9 = mulLymm8_9;
assume red_9 = mulLymm8_9 && true;
smull mulH_a red_a ymm7_a ymm0_a;
assert true && red_a = mulLymm8_a;
assume red_a = mulLymm8_a && true;
smull mulH_b red_b ymm7_b ymm0_b;
assert true && red_b = mulLymm8_b;
assume red_b = mulLymm8_b && true;
smull mulH_c red_c ymm7_c ymm0_c;
assert true && red_c = mulLymm8_c;
assume red_c = mulLymm8_c && true;
smull mulH_d red_d ymm7_d ymm0_d;
assert true && red_d = mulLymm8_d;
assume red_d = mulLymm8_d && true;
smull mulH_e red_e ymm7_e ymm0_e;
assert true && red_e = mulLymm8_e;
assume red_e = mulLymm8_e && true;
smull mulH_f red_f ymm7_f ymm0_f;
assert true && red_f = mulLymm8_f;
assume red_f = mulLymm8_f && true;
mov ymm7_0 mulH_0;
mov ymm7_1 mulH_1;
mov ymm7_2 mulH_2;
mov ymm7_3 mulH_3;
mov ymm7_4 mulH_4;
mov ymm7_5 mulH_5;
mov ymm7_6 mulH_6;
mov ymm7_7 mulH_7;
mov ymm7_8 mulH_8;
mov ymm7_9 mulH_9;
mov ymm7_a mulH_a;
mov ymm7_b mulH_b;
mov ymm7_c mulH_c;
mov ymm7_d mulH_d;
mov ymm7_e mulH_e;
mov ymm7_f mulH_f;
(* vpsubw %ymm7,%ymm8,%ymm8                        #! PC = 0x5555555578ea *)
sub ymm8_0 ymm8_0 ymm7_0;
sub ymm8_1 ymm8_1 ymm7_1;
sub ymm8_2 ymm8_2 ymm7_2;
sub ymm8_3 ymm8_3 ymm7_3;
sub ymm8_4 ymm8_4 ymm7_4;
sub ymm8_5 ymm8_5 ymm7_5;
sub ymm8_6 ymm8_6 ymm7_6;
sub ymm8_7 ymm8_7 ymm7_7;
sub ymm8_8 ymm8_8 ymm7_8;
sub ymm8_9 ymm8_9 ymm7_9;
sub ymm8_a ymm8_a ymm7_a;
sub ymm8_b ymm8_b ymm7_b;
sub ymm8_c ymm8_c ymm7_c;
sub ymm8_d ymm8_d ymm7_d;
sub ymm8_e ymm8_e ymm7_e;
sub ymm8_f ymm8_f ymm7_f;
(* vpbroadcastq 0x118(%rdx),%ymm1                  #! EA = L0x555555561238; Value = 0xc138252491c0b857; PC = 0x5555555578ee *)
mov ymm1_0 L0x555555561238;
mov ymm1_1 L0x55555556123a;
mov ymm1_2 L0x55555556123c;
mov ymm1_3 L0x55555556123e;
mov ymm1_4 L0x555555561238;
mov ymm1_5 L0x55555556123a;
mov ymm1_6 L0x55555556123c;
mov ymm1_7 L0x55555556123e;
mov ymm1_8 L0x555555561238;
mov ymm1_9 L0x55555556123a;
mov ymm1_a L0x55555556123c;
mov ymm1_b L0x55555556123e;
mov ymm1_c L0x555555561238;
mov ymm1_d L0x55555556123a;
mov ymm1_e L0x55555556123c;
mov ymm1_f L0x55555556123e;
(* vpbroadcastq 0x318(%rdx),%ymm2                  #! EA = L0x555555561438; Value = 0xf1380d2411c0fe57; PC = 0x5555555578f7 *)
mov ymm2_0 L0x555555561438;
mov ymm2_1 L0x55555556143a;
mov ymm2_2 L0x55555556143c;
mov ymm2_3 L0x55555556143e;
mov ymm2_4 L0x555555561438;
mov ymm2_5 L0x55555556143a;
mov ymm2_6 L0x55555556143c;
mov ymm2_7 L0x55555556143e;
mov ymm2_8 L0x555555561438;
mov ymm2_9 L0x55555556143a;
mov ymm2_a L0x55555556143c;
mov ymm2_b L0x55555556143e;
mov ymm2_c L0x555555561438;
mov ymm2_d L0x55555556143a;
mov ymm2_e L0x55555556143c;
mov ymm2_f L0x55555556143e;
(* vpmullw %ymm1,%ymm11,%ymm7                      #! PC = 0x555555557900 *)
smull mulHymm11_0 mulL_0 ymm1_0 ymm11_0;
smull mulHymm11_1 mulL_1 ymm1_1 ymm11_1;
smull mulHymm11_2 mulL_2 ymm1_2 ymm11_2;
smull mulHymm11_3 mulL_3 ymm1_3 ymm11_3;
smull mulHymm11_4 mulL_4 ymm1_4 ymm11_4;
smull mulHymm11_5 mulL_5 ymm1_5 ymm11_5;
smull mulHymm11_6 mulL_6 ymm1_6 ymm11_6;
smull mulHymm11_7 mulL_7 ymm1_7 ymm11_7;
smull mulHymm11_8 mulL_8 ymm1_8 ymm11_8;
smull mulHymm11_9 mulL_9 ymm1_9 ymm11_9;
smull mulHymm11_a mulL_a ymm1_a ymm11_a;
smull mulHymm11_b mulL_b ymm1_b ymm11_b;
smull mulHymm11_c mulL_c ymm1_c ymm11_c;
smull mulHymm11_d mulL_d ymm1_d ymm11_d;
smull mulHymm11_e mulL_e ymm1_e ymm11_e;
smull mulHymm11_f mulL_f ymm1_f ymm11_f;
cast ymm7_0@sint16 mulL_0;
cast ymm7_1@sint16 mulL_1;
cast ymm7_2@sint16 mulL_2;
cast ymm7_3@sint16 mulL_3;
cast ymm7_4@sint16 mulL_4;
cast ymm7_5@sint16 mulL_5;
cast ymm7_6@sint16 mulL_6;
cast ymm7_7@sint16 mulL_7;
cast ymm7_8@sint16 mulL_8;
cast ymm7_9@sint16 mulL_9;
cast ymm7_a@sint16 mulL_a;
cast ymm7_b@sint16 mulL_b;
cast ymm7_c@sint16 mulL_c;
cast ymm7_d@sint16 mulL_d;
cast ymm7_e@sint16 mulL_e;
cast ymm7_f@sint16 mulL_f;
(* vpmulhw %ymm2,%ymm11,%ymm11                     #! PC = 0x555555557904 *)
smull mulH_0 mulLymm11_0 ymm11_0 ymm2_0;
smull mulH_1 mulLymm11_1 ymm11_1 ymm2_1;
smull mulH_2 mulLymm11_2 ymm11_2 ymm2_2;
smull mulH_3 mulLymm11_3 ymm11_3 ymm2_3;
smull mulH_4 mulLymm11_4 ymm11_4 ymm2_4;
smull mulH_5 mulLymm11_5 ymm11_5 ymm2_5;
smull mulH_6 mulLymm11_6 ymm11_6 ymm2_6;
smull mulH_7 mulLymm11_7 ymm11_7 ymm2_7;
smull mulH_8 mulLymm11_8 ymm11_8 ymm2_8;
smull mulH_9 mulLymm11_9 ymm11_9 ymm2_9;
smull mulH_a mulLymm11_a ymm11_a ymm2_a;
smull mulH_b mulLymm11_b ymm11_b ymm2_b;
smull mulH_c mulLymm11_c ymm11_c ymm2_c;
smull mulH_d mulLymm11_d ymm11_d ymm2_d;
smull mulH_e mulLymm11_e ymm11_e ymm2_e;
smull mulH_f mulLymm11_f ymm11_f ymm2_f;
mov ymm11_0 mulH_0;
mov ymm11_1 mulH_1;
mov ymm11_2 mulH_2;
mov ymm11_3 mulH_3;
mov ymm11_4 mulH_4;
mov ymm11_5 mulH_5;
mov ymm11_6 mulH_6;
mov ymm11_7 mulH_7;
mov ymm11_8 mulH_8;
mov ymm11_9 mulH_9;
mov ymm11_a mulH_a;
mov ymm11_b mulH_b;
mov ymm11_c mulH_c;
mov ymm11_d mulH_d;
mov ymm11_e mulH_e;
mov ymm11_f mulH_f;
(* vpmulhw %ymm0,%ymm7,%ymm7                       #! PC = 0x555555557908 *)
smull mulH_0 red_0 ymm7_0 ymm0_0;
assert true && red_0 = mulLymm11_0;
assume red_0 = mulLymm11_0 && true;
smull mulH_1 red_1 ymm7_1 ymm0_1;
assert true && red_1 = mulLymm11_1;
assume red_1 = mulLymm11_1 && true;
smull mulH_2 red_2 ymm7_2 ymm0_2;
assert true && red_2 = mulLymm11_2;
assume red_2 = mulLymm11_2 && true;
smull mulH_3 red_3 ymm7_3 ymm0_3;
assert true && red_3 = mulLymm11_3;
assume red_3 = mulLymm11_3 && true;
smull mulH_4 red_4 ymm7_4 ymm0_4;
assert true && red_4 = mulLymm11_4;
assume red_4 = mulLymm11_4 && true;
smull mulH_5 red_5 ymm7_5 ymm0_5;
assert true && red_5 = mulLymm11_5;
assume red_5 = mulLymm11_5 && true;
smull mulH_6 red_6 ymm7_6 ymm0_6;
assert true && red_6 = mulLymm11_6;
assume red_6 = mulLymm11_6 && true;
smull mulH_7 red_7 ymm7_7 ymm0_7;
assert true && red_7 = mulLymm11_7;
assume red_7 = mulLymm11_7 && true;
smull mulH_8 red_8 ymm7_8 ymm0_8;
assert true && red_8 = mulLymm11_8;
assume red_8 = mulLymm11_8 && true;
smull mulH_9 red_9 ymm7_9 ymm0_9;
assert true && red_9 = mulLymm11_9;
assume red_9 = mulLymm11_9 && true;
smull mulH_a red_a ymm7_a ymm0_a;
assert true && red_a = mulLymm11_a;
assume red_a = mulLymm11_a && true;
smull mulH_b red_b ymm7_b ymm0_b;
assert true && red_b = mulLymm11_b;
assume red_b = mulLymm11_b && true;
smull mulH_c red_c ymm7_c ymm0_c;
assert true && red_c = mulLymm11_c;
assume red_c = mulLymm11_c && true;
smull mulH_d red_d ymm7_d ymm0_d;
assert true && red_d = mulLymm11_d;
assume red_d = mulLymm11_d && true;
smull mulH_e red_e ymm7_e ymm0_e;
assert true && red_e = mulLymm11_e;
assume red_e = mulLymm11_e && true;
smull mulH_f red_f ymm7_f ymm0_f;
assert true && red_f = mulLymm11_f;
assume red_f = mulLymm11_f && true;
mov ymm7_0 mulH_0;
mov ymm7_1 mulH_1;
mov ymm7_2 mulH_2;
mov ymm7_3 mulH_3;
mov ymm7_4 mulH_4;
mov ymm7_5 mulH_5;
mov ymm7_6 mulH_6;
mov ymm7_7 mulH_7;
mov ymm7_8 mulH_8;
mov ymm7_9 mulH_9;
mov ymm7_a mulH_a;
mov ymm7_b mulH_b;
mov ymm7_c mulH_c;
mov ymm7_d mulH_d;
mov ymm7_e mulH_e;
mov ymm7_f mulH_f;
(* vpsubw %ymm7,%ymm11,%ymm11                      #! PC = 0x55555555790c *)
sub ymm11_0 ymm11_0 ymm7_0;
sub ymm11_1 ymm11_1 ymm7_1;
sub ymm11_2 ymm11_2 ymm7_2;
sub ymm11_3 ymm11_3 ymm7_3;
sub ymm11_4 ymm11_4 ymm7_4;
sub ymm11_5 ymm11_5 ymm7_5;
sub ymm11_6 ymm11_6 ymm7_6;
sub ymm11_7 ymm11_7 ymm7_7;
sub ymm11_8 ymm11_8 ymm7_8;
sub ymm11_9 ymm11_9 ymm7_9;
sub ymm11_a ymm11_a ymm7_a;
sub ymm11_b ymm11_b ymm7_b;
sub ymm11_c ymm11_c ymm7_c;
sub ymm11_d ymm11_d ymm7_d;
sub ymm11_e ymm11_e ymm7_e;
sub ymm11_f ymm11_f ymm7_f;
(* vpaddw %ymm3,%ymm5,%ymm7                        #! PC = 0x555555557910 *)
add ymm7_0 ymm5_0 ymm3_0;
add ymm7_1 ymm5_1 ymm3_1;
add ymm7_2 ymm5_2 ymm3_2;
add ymm7_3 ymm5_3 ymm3_3;
add ymm7_4 ymm5_4 ymm3_4;
add ymm7_5 ymm5_5 ymm3_5;
add ymm7_6 ymm5_6 ymm3_6;
add ymm7_7 ymm5_7 ymm3_7;
add ymm7_8 ymm5_8 ymm3_8;
add ymm7_9 ymm5_9 ymm3_9;
add ymm7_a ymm5_a ymm3_a;
add ymm7_b ymm5_b ymm3_b;
add ymm7_c ymm5_c ymm3_c;
add ymm7_d ymm5_d ymm3_d;
add ymm7_e ymm5_e ymm3_e;
add ymm7_f ymm5_f ymm3_f;
(* vpsubw %ymm3,%ymm5,%ymm3                        #! PC = 0x555555557914 *)
sub ymm3_0 ymm5_0 ymm3_0;
sub ymm3_1 ymm5_1 ymm3_1;
sub ymm3_2 ymm5_2 ymm3_2;
sub ymm3_3 ymm5_3 ymm3_3;
sub ymm3_4 ymm5_4 ymm3_4;
sub ymm3_5 ymm5_5 ymm3_5;
sub ymm3_6 ymm5_6 ymm3_6;
sub ymm3_7 ymm5_7 ymm3_7;
sub ymm3_8 ymm5_8 ymm3_8;
sub ymm3_9 ymm5_9 ymm3_9;
sub ymm3_a ymm5_a ymm3_a;
sub ymm3_b ymm5_b ymm3_b;
sub ymm3_c ymm5_c ymm3_c;
sub ymm3_d ymm5_d ymm3_d;
sub ymm3_e ymm5_e ymm3_e;
sub ymm3_f ymm5_f ymm3_f;
(* vpaddw %ymm6,%ymm4,%ymm5                        #! PC = 0x555555557918 *)
add ymm5_0 ymm4_0 ymm6_0;
add ymm5_1 ymm4_1 ymm6_1;
add ymm5_2 ymm4_2 ymm6_2;
add ymm5_3 ymm4_3 ymm6_3;
add ymm5_4 ymm4_4 ymm6_4;
add ymm5_5 ymm4_5 ymm6_5;
add ymm5_6 ymm4_6 ymm6_6;
add ymm5_7 ymm4_7 ymm6_7;
add ymm5_8 ymm4_8 ymm6_8;
add ymm5_9 ymm4_9 ymm6_9;
add ymm5_a ymm4_a ymm6_a;
add ymm5_b ymm4_b ymm6_b;
add ymm5_c ymm4_c ymm6_c;
add ymm5_d ymm4_d ymm6_d;
add ymm5_e ymm4_e ymm6_e;
add ymm5_f ymm4_f ymm6_f;
(* vpsubw %ymm6,%ymm4,%ymm6                        #! PC = 0x55555555791c *)
sub ymm6_0 ymm4_0 ymm6_0;
sub ymm6_1 ymm4_1 ymm6_1;
sub ymm6_2 ymm4_2 ymm6_2;
sub ymm6_3 ymm4_3 ymm6_3;
sub ymm6_4 ymm4_4 ymm6_4;
sub ymm6_5 ymm4_5 ymm6_5;
sub ymm6_6 ymm4_6 ymm6_6;
sub ymm6_7 ymm4_7 ymm6_7;
sub ymm6_8 ymm4_8 ymm6_8;
sub ymm6_9 ymm4_9 ymm6_9;
sub ymm6_a ymm4_a ymm6_a;
sub ymm6_b ymm4_b ymm6_b;
sub ymm6_c ymm4_c ymm6_c;
sub ymm6_d ymm4_d ymm6_d;
sub ymm6_e ymm4_e ymm6_e;
sub ymm6_f ymm4_f ymm6_f;
(* vpaddw %ymm8,%ymm10,%ymm4                       #! PC = 0x555555557920 *)
add ymm4_0 ymm10_0 ymm8_0;
add ymm4_1 ymm10_1 ymm8_1;
add ymm4_2 ymm10_2 ymm8_2;
add ymm4_3 ymm10_3 ymm8_3;
add ymm4_4 ymm10_4 ymm8_4;
add ymm4_5 ymm10_5 ymm8_5;
add ymm4_6 ymm10_6 ymm8_6;
add ymm4_7 ymm10_7 ymm8_7;
add ymm4_8 ymm10_8 ymm8_8;
add ymm4_9 ymm10_9 ymm8_9;
add ymm4_a ymm10_a ymm8_a;
add ymm4_b ymm10_b ymm8_b;
add ymm4_c ymm10_c ymm8_c;
add ymm4_d ymm10_d ymm8_d;
add ymm4_e ymm10_e ymm8_e;
add ymm4_f ymm10_f ymm8_f;
(* vpsubw %ymm8,%ymm10,%ymm8                       #! PC = 0x555555557925 *)
sub ymm8_0 ymm10_0 ymm8_0;
sub ymm8_1 ymm10_1 ymm8_1;
sub ymm8_2 ymm10_2 ymm8_2;
sub ymm8_3 ymm10_3 ymm8_3;
sub ymm8_4 ymm10_4 ymm8_4;
sub ymm8_5 ymm10_5 ymm8_5;
sub ymm8_6 ymm10_6 ymm8_6;
sub ymm8_7 ymm10_7 ymm8_7;
sub ymm8_8 ymm10_8 ymm8_8;
sub ymm8_9 ymm10_9 ymm8_9;
sub ymm8_a ymm10_a ymm8_a;
sub ymm8_b ymm10_b ymm8_b;
sub ymm8_c ymm10_c ymm8_c;
sub ymm8_d ymm10_d ymm8_d;
sub ymm8_e ymm10_e ymm8_e;
sub ymm8_f ymm10_f ymm8_f;
(* vpaddw %ymm11,%ymm9,%ymm10                      #! PC = 0x55555555792a *)
add ymm10_0 ymm9_0 ymm11_0;
add ymm10_1 ymm9_1 ymm11_1;
add ymm10_2 ymm9_2 ymm11_2;
add ymm10_3 ymm9_3 ymm11_3;
add ymm10_4 ymm9_4 ymm11_4;
add ymm10_5 ymm9_5 ymm11_5;
add ymm10_6 ymm9_6 ymm11_6;
add ymm10_7 ymm9_7 ymm11_7;
add ymm10_8 ymm9_8 ymm11_8;
add ymm10_9 ymm9_9 ymm11_9;
add ymm10_a ymm9_a ymm11_a;
add ymm10_b ymm9_b ymm11_b;
add ymm10_c ymm9_c ymm11_c;
add ymm10_d ymm9_d ymm11_d;
add ymm10_e ymm9_e ymm11_e;
add ymm10_f ymm9_f ymm11_f;
(* vpsubw %ymm11,%ymm9,%ymm11                      #! PC = 0x55555555792f *)
sub ymm11_0 ymm9_0 ymm11_0;
sub ymm11_1 ymm9_1 ymm11_1;
sub ymm11_2 ymm9_2 ymm11_2;
sub ymm11_3 ymm9_3 ymm11_3;
sub ymm11_4 ymm9_4 ymm11_4;
sub ymm11_5 ymm9_5 ymm11_5;
sub ymm11_6 ymm9_6 ymm11_6;
sub ymm11_7 ymm9_7 ymm11_7;
sub ymm11_8 ymm9_8 ymm11_8;
sub ymm11_9 ymm9_9 ymm11_9;
sub ymm11_a ymm9_a ymm11_a;
sub ymm11_b ymm9_b ymm11_b;
sub ymm11_c ymm9_c ymm11_c;
sub ymm11_d ymm9_d ymm11_d;
sub ymm11_e ymm9_e ymm11_e;
sub ymm11_f ymm9_f ymm11_f;
(* vpunpcklwd %ymm3,%ymm7,%ymm9                    #! PC = 0x555555557934 *)
mov lwd_0 ymm7_0;
mov lwd_1 ymm3_0;
mov lwd_2 ymm7_1;
mov lwd_3 ymm3_1;
mov lwd_4 ymm7_2;
mov lwd_5 ymm3_2;
mov lwd_6 ymm7_3;
mov lwd_7 ymm3_3;
mov lwd_8 ymm7_8;
mov lwd_9 ymm3_8;
mov lwd_a ymm7_9;
mov lwd_b ymm3_9;
mov lwd_c ymm7_a;
mov lwd_d ymm3_a;
mov lwd_e ymm7_b;
mov lwd_f ymm3_b;
mov ymm9_0 lwd_0;
mov ymm9_1 lwd_1;
mov ymm9_2 lwd_2;
mov ymm9_3 lwd_3;
mov ymm9_4 lwd_4;
mov ymm9_5 lwd_5;
mov ymm9_6 lwd_6;
mov ymm9_7 lwd_7;
mov ymm9_8 lwd_8;
mov ymm9_9 lwd_9;
mov ymm9_a lwd_a;
mov ymm9_b lwd_b;
mov ymm9_c lwd_c;
mov ymm9_d lwd_d;
mov ymm9_e lwd_e;
mov ymm9_f lwd_f;
(* vpunpckhwd %ymm3,%ymm7,%ymm3                    #! PC = 0x555555557938 *)
mov hwd_0 ymm7_4;
mov hwd_1 ymm3_4;
mov hwd_2 ymm7_5;
mov hwd_3 ymm3_5;
mov hwd_4 ymm7_6;
mov hwd_5 ymm3_6;
mov hwd_6 ymm7_7;
mov hwd_7 ymm3_7;
mov hwd_8 ymm7_c;
mov hwd_9 ymm3_c;
mov hwd_a ymm7_d;
mov hwd_b ymm3_d;
mov hwd_c ymm7_e;
mov hwd_d ymm3_e;
mov hwd_e ymm7_f;
mov hwd_f ymm3_f;
mov ymm3_0 hwd_0;
mov ymm3_1 hwd_1;
mov ymm3_2 hwd_2;
mov ymm3_3 hwd_3;
mov ymm3_4 hwd_4;
mov ymm3_5 hwd_5;
mov ymm3_6 hwd_6;
mov ymm3_7 hwd_7;
mov ymm3_8 hwd_8;
mov ymm3_9 hwd_9;
mov ymm3_a hwd_a;
mov ymm3_b hwd_b;
mov ymm3_c hwd_c;
mov ymm3_d hwd_d;
mov ymm3_e hwd_e;
mov ymm3_f hwd_f;
(* vpunpcklwd %ymm6,%ymm5,%ymm7                    #! PC = 0x55555555793c *)
mov lwd_0 ymm5_0;
mov lwd_1 ymm6_0;
mov lwd_2 ymm5_1;
mov lwd_3 ymm6_1;
mov lwd_4 ymm5_2;
mov lwd_5 ymm6_2;
mov lwd_6 ymm5_3;
mov lwd_7 ymm6_3;
mov lwd_8 ymm5_8;
mov lwd_9 ymm6_8;
mov lwd_a ymm5_9;
mov lwd_b ymm6_9;
mov lwd_c ymm5_a;
mov lwd_d ymm6_a;
mov lwd_e ymm5_b;
mov lwd_f ymm6_b;
mov ymm7_0 lwd_0;
mov ymm7_1 lwd_1;
mov ymm7_2 lwd_2;
mov ymm7_3 lwd_3;
mov ymm7_4 lwd_4;
mov ymm7_5 lwd_5;
mov ymm7_6 lwd_6;
mov ymm7_7 lwd_7;
mov ymm7_8 lwd_8;
mov ymm7_9 lwd_9;
mov ymm7_a lwd_a;
mov ymm7_b lwd_b;
mov ymm7_c lwd_c;
mov ymm7_d lwd_d;
mov ymm7_e lwd_e;
mov ymm7_f lwd_f;
(* vpunpckhwd %ymm6,%ymm5,%ymm6                    #! PC = 0x555555557940 *)
mov hwd_0 ymm5_4;
mov hwd_1 ymm6_4;
mov hwd_2 ymm5_5;
mov hwd_3 ymm6_5;
mov hwd_4 ymm5_6;
mov hwd_5 ymm6_6;
mov hwd_6 ymm5_7;
mov hwd_7 ymm6_7;
mov hwd_8 ymm5_c;
mov hwd_9 ymm6_c;
mov hwd_a ymm5_d;
mov hwd_b ymm6_d;
mov hwd_c ymm5_e;
mov hwd_d ymm6_e;
mov hwd_e ymm5_f;
mov hwd_f ymm6_f;
mov ymm6_0 hwd_0;
mov ymm6_1 hwd_1;
mov ymm6_2 hwd_2;
mov ymm6_3 hwd_3;
mov ymm6_4 hwd_4;
mov ymm6_5 hwd_5;
mov ymm6_6 hwd_6;
mov ymm6_7 hwd_7;
mov ymm6_8 hwd_8;
mov ymm6_9 hwd_9;
mov ymm6_a hwd_a;
mov ymm6_b hwd_b;
mov ymm6_c hwd_c;
mov ymm6_d hwd_d;
mov ymm6_e hwd_e;
mov ymm6_f hwd_f;
(* vpunpcklwd %ymm8,%ymm4,%ymm5                    #! PC = 0x555555557944 *)
mov lwd_0 ymm4_0;
mov lwd_1 ymm8_0;
mov lwd_2 ymm4_1;
mov lwd_3 ymm8_1;
mov lwd_4 ymm4_2;
mov lwd_5 ymm8_2;
mov lwd_6 ymm4_3;
mov lwd_7 ymm8_3;
mov lwd_8 ymm4_8;
mov lwd_9 ymm8_8;
mov lwd_a ymm4_9;
mov lwd_b ymm8_9;
mov lwd_c ymm4_a;
mov lwd_d ymm8_a;
mov lwd_e ymm4_b;
mov lwd_f ymm8_b;
mov ymm5_0 lwd_0;
mov ymm5_1 lwd_1;
mov ymm5_2 lwd_2;
mov ymm5_3 lwd_3;
mov ymm5_4 lwd_4;
mov ymm5_5 lwd_5;
mov ymm5_6 lwd_6;
mov ymm5_7 lwd_7;
mov ymm5_8 lwd_8;
mov ymm5_9 lwd_9;
mov ymm5_a lwd_a;
mov ymm5_b lwd_b;
mov ymm5_c lwd_c;
mov ymm5_d lwd_d;
mov ymm5_e lwd_e;
mov ymm5_f lwd_f;
(* vpunpckhwd %ymm8,%ymm4,%ymm8                    #! PC = 0x555555557949 *)
mov hwd_0 ymm4_4;
mov hwd_1 ymm8_4;
mov hwd_2 ymm4_5;
mov hwd_3 ymm8_5;
mov hwd_4 ymm4_6;
mov hwd_5 ymm8_6;
mov hwd_6 ymm4_7;
mov hwd_7 ymm8_7;
mov hwd_8 ymm4_c;
mov hwd_9 ymm8_c;
mov hwd_a ymm4_d;
mov hwd_b ymm8_d;
mov hwd_c ymm4_e;
mov hwd_d ymm8_e;
mov hwd_e ymm4_f;
mov hwd_f ymm8_f;
mov ymm8_0 hwd_0;
mov ymm8_1 hwd_1;
mov ymm8_2 hwd_2;
mov ymm8_3 hwd_3;
mov ymm8_4 hwd_4;
mov ymm8_5 hwd_5;
mov ymm8_6 hwd_6;
mov ymm8_7 hwd_7;
mov ymm8_8 hwd_8;
mov ymm8_9 hwd_9;
mov ymm8_a hwd_a;
mov ymm8_b hwd_b;
mov ymm8_c hwd_c;
mov ymm8_d hwd_d;
mov ymm8_e hwd_e;
mov ymm8_f hwd_f;
(* vpunpcklwd %ymm11,%ymm10,%ymm4                  #! PC = 0x55555555794e *)
mov lwd_0 ymm10_0;
mov lwd_1 ymm11_0;
mov lwd_2 ymm10_1;
mov lwd_3 ymm11_1;
mov lwd_4 ymm10_2;
mov lwd_5 ymm11_2;
mov lwd_6 ymm10_3;
mov lwd_7 ymm11_3;
mov lwd_8 ymm10_8;
mov lwd_9 ymm11_8;
mov lwd_a ymm10_9;
mov lwd_b ymm11_9;
mov lwd_c ymm10_a;
mov lwd_d ymm11_a;
mov lwd_e ymm10_b;
mov lwd_f ymm11_b;
mov ymm4_0 lwd_0;
mov ymm4_1 lwd_1;
mov ymm4_2 lwd_2;
mov ymm4_3 lwd_3;
mov ymm4_4 lwd_4;
mov ymm4_5 lwd_5;
mov ymm4_6 lwd_6;
mov ymm4_7 lwd_7;
mov ymm4_8 lwd_8;
mov ymm4_9 lwd_9;
mov ymm4_a lwd_a;
mov ymm4_b lwd_b;
mov ymm4_c lwd_c;
mov ymm4_d lwd_d;
mov ymm4_e lwd_e;
mov ymm4_f lwd_f;
(* vpunpckhwd %ymm11,%ymm10,%ymm11                 #! PC = 0x555555557953 *)
mov hwd_0 ymm10_4;
mov hwd_1 ymm11_4;
mov hwd_2 ymm10_5;
mov hwd_3 ymm11_5;
mov hwd_4 ymm10_6;
mov hwd_5 ymm11_6;
mov hwd_6 ymm10_7;
mov hwd_7 ymm11_7;
mov hwd_8 ymm10_c;
mov hwd_9 ymm11_c;
mov hwd_a ymm10_d;
mov hwd_b ymm11_d;
mov hwd_c ymm10_e;
mov hwd_d ymm11_e;
mov hwd_e ymm10_f;
mov hwd_f ymm11_f;
mov ymm11_0 hwd_0;
mov ymm11_1 hwd_1;
mov ymm11_2 hwd_2;
mov ymm11_3 hwd_3;
mov ymm11_4 hwd_4;
mov ymm11_5 hwd_5;
mov ymm11_6 hwd_6;
mov ymm11_7 hwd_7;
mov ymm11_8 hwd_8;
mov ymm11_9 hwd_9;
mov ymm11_a hwd_a;
mov ymm11_b hwd_b;
mov ymm11_c hwd_c;
mov ymm11_d hwd_d;
mov ymm11_e hwd_e;
mov ymm11_f hwd_f;
(* vbroadcasti128 0x100(%rdx),%ymm1                #! EA = L0x555555561220; Value = 0x0198f85c6adffffa; PC = 0x555555557958 *)
mov ymm1_0 L0x555555561220;
mov ymm1_1 L0x555555561222;
mov ymm1_2 L0x555555561224;
mov ymm1_3 L0x555555561226;
mov ymm1_4 L0x555555561228;
mov ymm1_5 L0x55555556122a;
mov ymm1_6 L0x55555556122c;
mov ymm1_7 L0x55555556122e;
mov ymm1_8 L0x555555561220;
mov ymm1_9 L0x555555561222;
mov ymm1_a L0x555555561224;
mov ymm1_b L0x555555561226;
mov ymm1_c L0x555555561228;
mov ymm1_d L0x55555556122a;
mov ymm1_e L0x55555556122c;
mov ymm1_f L0x55555556122e;
(* vbroadcasti128 0x300(%rdx),%ymm2                #! EA = L0x555555561420; Value = 0xf198105c00df03fa; PC = 0x555555557961 *)
mov ymm2_0 L0x555555561420;
mov ymm2_1 L0x555555561422;
mov ymm2_2 L0x555555561424;
mov ymm2_3 L0x555555561426;
mov ymm2_4 L0x555555561428;
mov ymm2_5 L0x55555556142a;
mov ymm2_6 L0x55555556142c;
mov ymm2_7 L0x55555556142e;
mov ymm2_8 L0x555555561420;
mov ymm2_9 L0x555555561422;
mov ymm2_a L0x555555561424;
mov ymm2_b L0x555555561426;
mov ymm2_c L0x555555561428;
mov ymm2_d L0x55555556142a;
mov ymm2_e L0x55555556142c;
mov ymm2_f L0x55555556142e;
(* vpmullw %ymm1,%ymm3,%ymm10                      #! PC = 0x55555555796a *)
smull mulHymm3_0 mulL_0 ymm1_0 ymm3_0;
smull mulHymm3_1 mulL_1 ymm1_1 ymm3_1;
smull mulHymm3_2 mulL_2 ymm1_2 ymm3_2;
smull mulHymm3_3 mulL_3 ymm1_3 ymm3_3;
smull mulHymm3_4 mulL_4 ymm1_4 ymm3_4;
smull mulHymm3_5 mulL_5 ymm1_5 ymm3_5;
smull mulHymm3_6 mulL_6 ymm1_6 ymm3_6;
smull mulHymm3_7 mulL_7 ymm1_7 ymm3_7;
smull mulHymm3_8 mulL_8 ymm1_8 ymm3_8;
smull mulHymm3_9 mulL_9 ymm1_9 ymm3_9;
smull mulHymm3_a mulL_a ymm1_a ymm3_a;
smull mulHymm3_b mulL_b ymm1_b ymm3_b;
smull mulHymm3_c mulL_c ymm1_c ymm3_c;
smull mulHymm3_d mulL_d ymm1_d ymm3_d;
smull mulHymm3_e mulL_e ymm1_e ymm3_e;
smull mulHymm3_f mulL_f ymm1_f ymm3_f;
cast ymm10_0@sint16 mulL_0;
cast ymm10_1@sint16 mulL_1;
cast ymm10_2@sint16 mulL_2;
cast ymm10_3@sint16 mulL_3;
cast ymm10_4@sint16 mulL_4;
cast ymm10_5@sint16 mulL_5;
cast ymm10_6@sint16 mulL_6;
cast ymm10_7@sint16 mulL_7;
cast ymm10_8@sint16 mulL_8;
cast ymm10_9@sint16 mulL_9;
cast ymm10_a@sint16 mulL_a;
cast ymm10_b@sint16 mulL_b;
cast ymm10_c@sint16 mulL_c;
cast ymm10_d@sint16 mulL_d;
cast ymm10_e@sint16 mulL_e;
cast ymm10_f@sint16 mulL_f;
(* vpmulhw %ymm2,%ymm3,%ymm3                       #! PC = 0x55555555796e *)
smull mulH_0 mulLymm3_0 ymm3_0 ymm2_0;
smull mulH_1 mulLymm3_1 ymm3_1 ymm2_1;
smull mulH_2 mulLymm3_2 ymm3_2 ymm2_2;
smull mulH_3 mulLymm3_3 ymm3_3 ymm2_3;
smull mulH_4 mulLymm3_4 ymm3_4 ymm2_4;
smull mulH_5 mulLymm3_5 ymm3_5 ymm2_5;
smull mulH_6 mulLymm3_6 ymm3_6 ymm2_6;
smull mulH_7 mulLymm3_7 ymm3_7 ymm2_7;
smull mulH_8 mulLymm3_8 ymm3_8 ymm2_8;
smull mulH_9 mulLymm3_9 ymm3_9 ymm2_9;
smull mulH_a mulLymm3_a ymm3_a ymm2_a;
smull mulH_b mulLymm3_b ymm3_b ymm2_b;
smull mulH_c mulLymm3_c ymm3_c ymm2_c;
smull mulH_d mulLymm3_d ymm3_d ymm2_d;
smull mulH_e mulLymm3_e ymm3_e ymm2_e;
smull mulH_f mulLymm3_f ymm3_f ymm2_f;
mov ymm3_0 mulH_0;
mov ymm3_1 mulH_1;
mov ymm3_2 mulH_2;
mov ymm3_3 mulH_3;
mov ymm3_4 mulH_4;
mov ymm3_5 mulH_5;
mov ymm3_6 mulH_6;
mov ymm3_7 mulH_7;
mov ymm3_8 mulH_8;
mov ymm3_9 mulH_9;
mov ymm3_a mulH_a;
mov ymm3_b mulH_b;
mov ymm3_c mulH_c;
mov ymm3_d mulH_d;
mov ymm3_e mulH_e;
mov ymm3_f mulH_f;
(* vpmulhw %ymm0,%ymm10,%ymm10                     #! PC = 0x555555557972 *)
smull mulH_0 red_0 ymm10_0 ymm0_0;
assert true && red_0 = mulLymm3_0;
assume red_0 = mulLymm3_0 && true;
smull mulH_1 red_1 ymm10_1 ymm0_1;
assert true && red_1 = mulLymm3_1;
assume red_1 = mulLymm3_1 && true;
smull mulH_2 red_2 ymm10_2 ymm0_2;
assert true && red_2 = mulLymm3_2;
assume red_2 = mulLymm3_2 && true;
smull mulH_3 red_3 ymm10_3 ymm0_3;
assert true && red_3 = mulLymm3_3;
assume red_3 = mulLymm3_3 && true;
smull mulH_4 red_4 ymm10_4 ymm0_4;
assert true && red_4 = mulLymm3_4;
assume red_4 = mulLymm3_4 && true;
smull mulH_5 red_5 ymm10_5 ymm0_5;
assert true && red_5 = mulLymm3_5;
assume red_5 = mulLymm3_5 && true;
smull mulH_6 red_6 ymm10_6 ymm0_6;
assert true && red_6 = mulLymm3_6;
assume red_6 = mulLymm3_6 && true;
smull mulH_7 red_7 ymm10_7 ymm0_7;
assert true && red_7 = mulLymm3_7;
assume red_7 = mulLymm3_7 && true;
smull mulH_8 red_8 ymm10_8 ymm0_8;
assert true && red_8 = mulLymm3_8;
assume red_8 = mulLymm3_8 && true;
smull mulH_9 red_9 ymm10_9 ymm0_9;
assert true && red_9 = mulLymm3_9;
assume red_9 = mulLymm3_9 && true;
smull mulH_a red_a ymm10_a ymm0_a;
assert true && red_a = mulLymm3_a;
assume red_a = mulLymm3_a && true;
smull mulH_b red_b ymm10_b ymm0_b;
assert true && red_b = mulLymm3_b;
assume red_b = mulLymm3_b && true;
smull mulH_c red_c ymm10_c ymm0_c;
assert true && red_c = mulLymm3_c;
assume red_c = mulLymm3_c && true;
smull mulH_d red_d ymm10_d ymm0_d;
assert true && red_d = mulLymm3_d;
assume red_d = mulLymm3_d && true;
smull mulH_e red_e ymm10_e ymm0_e;
assert true && red_e = mulLymm3_e;
assume red_e = mulLymm3_e && true;
smull mulH_f red_f ymm10_f ymm0_f;
assert true && red_f = mulLymm3_f;
assume red_f = mulLymm3_f && true;
mov ymm10_0 mulH_0;
mov ymm10_1 mulH_1;
mov ymm10_2 mulH_2;
mov ymm10_3 mulH_3;
mov ymm10_4 mulH_4;
mov ymm10_5 mulH_5;
mov ymm10_6 mulH_6;
mov ymm10_7 mulH_7;
mov ymm10_8 mulH_8;
mov ymm10_9 mulH_9;
mov ymm10_a mulH_a;
mov ymm10_b mulH_b;
mov ymm10_c mulH_c;
mov ymm10_d mulH_d;
mov ymm10_e mulH_e;
mov ymm10_f mulH_f;
(* vpsubw %ymm10,%ymm3,%ymm3                       #! PC = 0x555555557976 *)
sub ymm3_0 ymm3_0 ymm10_0;
sub ymm3_1 ymm3_1 ymm10_1;
sub ymm3_2 ymm3_2 ymm10_2;
sub ymm3_3 ymm3_3 ymm10_3;
sub ymm3_4 ymm3_4 ymm10_4;
sub ymm3_5 ymm3_5 ymm10_5;
sub ymm3_6 ymm3_6 ymm10_6;
sub ymm3_7 ymm3_7 ymm10_7;
sub ymm3_8 ymm3_8 ymm10_8;
sub ymm3_9 ymm3_9 ymm10_9;
sub ymm3_a ymm3_a ymm10_a;
sub ymm3_b ymm3_b ymm10_b;
sub ymm3_c ymm3_c ymm10_c;
sub ymm3_d ymm3_d ymm10_d;
sub ymm3_e ymm3_e ymm10_e;
sub ymm3_f ymm3_f ymm10_f;
(* vbroadcasti128 0x110(%rdx),%ymm1                #! EA = L0x555555561230; Value = 0x30bc8cf7c126e487; PC = 0x55555555797b *)
mov ymm1_0 L0x555555561230;
mov ymm1_1 L0x555555561232;
mov ymm1_2 L0x555555561234;
mov ymm1_3 L0x555555561236;
mov ymm1_4 L0x555555561238;
mov ymm1_5 L0x55555556123a;
mov ymm1_6 L0x55555556123c;
mov ymm1_7 L0x55555556123e;
mov ymm1_8 L0x555555561230;
mov ymm1_9 L0x555555561232;
mov ymm1_a L0x555555561234;
mov ymm1_b L0x555555561236;
mov ymm1_c L0x555555561238;
mov ymm1_d L0x55555556123a;
mov ymm1_e L0x55555556123c;
mov ymm1_f L0x55555556123e;
(* vbroadcasti128 0x310(%rdx),%ymm2                #! EA = L0x555555561430; Value = 0x08bc12f7fd260a87; PC = 0x555555557984 *)
mov ymm2_0 L0x555555561430;
mov ymm2_1 L0x555555561432;
mov ymm2_2 L0x555555561434;
mov ymm2_3 L0x555555561436;
mov ymm2_4 L0x555555561438;
mov ymm2_5 L0x55555556143a;
mov ymm2_6 L0x55555556143c;
mov ymm2_7 L0x55555556143e;
mov ymm2_8 L0x555555561430;
mov ymm2_9 L0x555555561432;
mov ymm2_a L0x555555561434;
mov ymm2_b L0x555555561436;
mov ymm2_c L0x555555561438;
mov ymm2_d L0x55555556143a;
mov ymm2_e L0x55555556143c;
mov ymm2_f L0x55555556143e;
(* vpmullw %ymm1,%ymm6,%ymm10                      #! PC = 0x55555555798d *)
smull mulHymm6_0 mulL_0 ymm1_0 ymm6_0;
smull mulHymm6_1 mulL_1 ymm1_1 ymm6_1;
smull mulHymm6_2 mulL_2 ymm1_2 ymm6_2;
smull mulHymm6_3 mulL_3 ymm1_3 ymm6_3;
smull mulHymm6_4 mulL_4 ymm1_4 ymm6_4;
smull mulHymm6_5 mulL_5 ymm1_5 ymm6_5;
smull mulHymm6_6 mulL_6 ymm1_6 ymm6_6;
smull mulHymm6_7 mulL_7 ymm1_7 ymm6_7;
smull mulHymm6_8 mulL_8 ymm1_8 ymm6_8;
smull mulHymm6_9 mulL_9 ymm1_9 ymm6_9;
smull mulHymm6_a mulL_a ymm1_a ymm6_a;
smull mulHymm6_b mulL_b ymm1_b ymm6_b;
smull mulHymm6_c mulL_c ymm1_c ymm6_c;
smull mulHymm6_d mulL_d ymm1_d ymm6_d;
smull mulHymm6_e mulL_e ymm1_e ymm6_e;
smull mulHymm6_f mulL_f ymm1_f ymm6_f;
cast ymm10_0@sint16 mulL_0;
cast ymm10_1@sint16 mulL_1;
cast ymm10_2@sint16 mulL_2;
cast ymm10_3@sint16 mulL_3;
cast ymm10_4@sint16 mulL_4;
cast ymm10_5@sint16 mulL_5;
cast ymm10_6@sint16 mulL_6;
cast ymm10_7@sint16 mulL_7;
cast ymm10_8@sint16 mulL_8;
cast ymm10_9@sint16 mulL_9;
cast ymm10_a@sint16 mulL_a;
cast ymm10_b@sint16 mulL_b;
cast ymm10_c@sint16 mulL_c;
cast ymm10_d@sint16 mulL_d;
cast ymm10_e@sint16 mulL_e;
cast ymm10_f@sint16 mulL_f;
(* vpmulhw %ymm2,%ymm6,%ymm6                       #! PC = 0x555555557991 *)
smull mulH_0 mulLymm6_0 ymm6_0 ymm2_0;
smull mulH_1 mulLymm6_1 ymm6_1 ymm2_1;
smull mulH_2 mulLymm6_2 ymm6_2 ymm2_2;
smull mulH_3 mulLymm6_3 ymm6_3 ymm2_3;
smull mulH_4 mulLymm6_4 ymm6_4 ymm2_4;
smull mulH_5 mulLymm6_5 ymm6_5 ymm2_5;
smull mulH_6 mulLymm6_6 ymm6_6 ymm2_6;
smull mulH_7 mulLymm6_7 ymm6_7 ymm2_7;
smull mulH_8 mulLymm6_8 ymm6_8 ymm2_8;
smull mulH_9 mulLymm6_9 ymm6_9 ymm2_9;
smull mulH_a mulLymm6_a ymm6_a ymm2_a;
smull mulH_b mulLymm6_b ymm6_b ymm2_b;
smull mulH_c mulLymm6_c ymm6_c ymm2_c;
smull mulH_d mulLymm6_d ymm6_d ymm2_d;
smull mulH_e mulLymm6_e ymm6_e ymm2_e;
smull mulH_f mulLymm6_f ymm6_f ymm2_f;
mov ymm6_0 mulH_0;
mov ymm6_1 mulH_1;
mov ymm6_2 mulH_2;
mov ymm6_3 mulH_3;
mov ymm6_4 mulH_4;
mov ymm6_5 mulH_5;
mov ymm6_6 mulH_6;
mov ymm6_7 mulH_7;
mov ymm6_8 mulH_8;
mov ymm6_9 mulH_9;
mov ymm6_a mulH_a;
mov ymm6_b mulH_b;
mov ymm6_c mulH_c;
mov ymm6_d mulH_d;
mov ymm6_e mulH_e;
mov ymm6_f mulH_f;
(* vpmulhw %ymm0,%ymm10,%ymm10                     #! PC = 0x555555557995 *)
smull mulH_0 red_0 ymm10_0 ymm0_0;
assert true && red_0 = mulLymm6_0;
assume red_0 = mulLymm6_0 && true;
smull mulH_1 red_1 ymm10_1 ymm0_1;
assert true && red_1 = mulLymm6_1;
assume red_1 = mulLymm6_1 && true;
smull mulH_2 red_2 ymm10_2 ymm0_2;
assert true && red_2 = mulLymm6_2;
assume red_2 = mulLymm6_2 && true;
smull mulH_3 red_3 ymm10_3 ymm0_3;
assert true && red_3 = mulLymm6_3;
assume red_3 = mulLymm6_3 && true;
smull mulH_4 red_4 ymm10_4 ymm0_4;
assert true && red_4 = mulLymm6_4;
assume red_4 = mulLymm6_4 && true;
smull mulH_5 red_5 ymm10_5 ymm0_5;
assert true && red_5 = mulLymm6_5;
assume red_5 = mulLymm6_5 && true;
smull mulH_6 red_6 ymm10_6 ymm0_6;
assert true && red_6 = mulLymm6_6;
assume red_6 = mulLymm6_6 && true;
smull mulH_7 red_7 ymm10_7 ymm0_7;
assert true && red_7 = mulLymm6_7;
assume red_7 = mulLymm6_7 && true;
smull mulH_8 red_8 ymm10_8 ymm0_8;
assert true && red_8 = mulLymm6_8;
assume red_8 = mulLymm6_8 && true;
smull mulH_9 red_9 ymm10_9 ymm0_9;
assert true && red_9 = mulLymm6_9;
assume red_9 = mulLymm6_9 && true;
smull mulH_a red_a ymm10_a ymm0_a;
assert true && red_a = mulLymm6_a;
assume red_a = mulLymm6_a && true;
smull mulH_b red_b ymm10_b ymm0_b;
assert true && red_b = mulLymm6_b;
assume red_b = mulLymm6_b && true;
smull mulH_c red_c ymm10_c ymm0_c;
assert true && red_c = mulLymm6_c;
assume red_c = mulLymm6_c && true;
smull mulH_d red_d ymm10_d ymm0_d;
assert true && red_d = mulLymm6_d;
assume red_d = mulLymm6_d && true;
smull mulH_e red_e ymm10_e ymm0_e;
assert true && red_e = mulLymm6_e;
assume red_e = mulLymm6_e && true;
smull mulH_f red_f ymm10_f ymm0_f;
assert true && red_f = mulLymm6_f;
assume red_f = mulLymm6_f && true;
mov ymm10_0 mulH_0;
mov ymm10_1 mulH_1;
mov ymm10_2 mulH_2;
mov ymm10_3 mulH_3;
mov ymm10_4 mulH_4;
mov ymm10_5 mulH_5;
mov ymm10_6 mulH_6;
mov ymm10_7 mulH_7;
mov ymm10_8 mulH_8;
mov ymm10_9 mulH_9;
mov ymm10_a mulH_a;
mov ymm10_b mulH_b;
mov ymm10_c mulH_c;
mov ymm10_d mulH_d;
mov ymm10_e mulH_e;
mov ymm10_f mulH_f;
(* vpsubw %ymm10,%ymm6,%ymm6                       #! PC = 0x555555557999 *)
sub ymm6_0 ymm6_0 ymm10_0;
sub ymm6_1 ymm6_1 ymm10_1;
sub ymm6_2 ymm6_2 ymm10_2;
sub ymm6_3 ymm6_3 ymm10_3;
sub ymm6_4 ymm6_4 ymm10_4;
sub ymm6_5 ymm6_5 ymm10_5;
sub ymm6_6 ymm6_6 ymm10_6;
sub ymm6_7 ymm6_7 ymm10_7;
sub ymm6_8 ymm6_8 ymm10_8;
sub ymm6_9 ymm6_9 ymm10_9;
sub ymm6_a ymm6_a ymm10_a;
sub ymm6_b ymm6_b ymm10_b;
sub ymm6_c ymm6_c ymm10_c;
sub ymm6_d ymm6_d ymm10_d;
sub ymm6_e ymm6_e ymm10_e;
sub ymm6_f ymm6_f ymm10_f;
(* vbroadcasti128 0x120(%rdx),%ymm1                #! EA = L0x555555561240; Value = 0xee3d92395a10450b; PC = 0x55555555799e *)
mov ymm1_0 L0x555555561240;
mov ymm1_1 L0x555555561242;
mov ymm1_2 L0x555555561244;
mov ymm1_3 L0x555555561246;
mov ymm1_4 L0x555555561248;
mov ymm1_5 L0x55555556124a;
mov ymm1_6 L0x55555556124c;
mov ymm1_7 L0x55555556124e;
mov ymm1_8 L0x555555561240;
mov ymm1_9 L0x555555561242;
mov ymm1_a L0x555555561244;
mov ymm1_b L0x555555561246;
mov ymm1_c L0x555555561248;
mov ymm1_d L0x55555556124a;
mov ymm1_e L0x55555556124c;
mov ymm1_f L0x55555556124e;
(* vbroadcasti128 0x320(%rdx),%ymm2                #! EA = L0x555555561440; Value = 0xf03dec39fa10130b; PC = 0x5555555579a7 *)
mov ymm2_0 L0x555555561440;
mov ymm2_1 L0x555555561442;
mov ymm2_2 L0x555555561444;
mov ymm2_3 L0x555555561446;
mov ymm2_4 L0x555555561448;
mov ymm2_5 L0x55555556144a;
mov ymm2_6 L0x55555556144c;
mov ymm2_7 L0x55555556144e;
mov ymm2_8 L0x555555561440;
mov ymm2_9 L0x555555561442;
mov ymm2_a L0x555555561444;
mov ymm2_b L0x555555561446;
mov ymm2_c L0x555555561448;
mov ymm2_d L0x55555556144a;
mov ymm2_e L0x55555556144c;
mov ymm2_f L0x55555556144e;
(* vpmullw %ymm1,%ymm8,%ymm10                      #! PC = 0x5555555579b0 *)
smull mulHymm8_0 mulL_0 ymm1_0 ymm8_0;
smull mulHymm8_1 mulL_1 ymm1_1 ymm8_1;
smull mulHymm8_2 mulL_2 ymm1_2 ymm8_2;
smull mulHymm8_3 mulL_3 ymm1_3 ymm8_3;
smull mulHymm8_4 mulL_4 ymm1_4 ymm8_4;
smull mulHymm8_5 mulL_5 ymm1_5 ymm8_5;
smull mulHymm8_6 mulL_6 ymm1_6 ymm8_6;
smull mulHymm8_7 mulL_7 ymm1_7 ymm8_7;
smull mulHymm8_8 mulL_8 ymm1_8 ymm8_8;
smull mulHymm8_9 mulL_9 ymm1_9 ymm8_9;
smull mulHymm8_a mulL_a ymm1_a ymm8_a;
smull mulHymm8_b mulL_b ymm1_b ymm8_b;
smull mulHymm8_c mulL_c ymm1_c ymm8_c;
smull mulHymm8_d mulL_d ymm1_d ymm8_d;
smull mulHymm8_e mulL_e ymm1_e ymm8_e;
smull mulHymm8_f mulL_f ymm1_f ymm8_f;
cast ymm10_0@sint16 mulL_0;
cast ymm10_1@sint16 mulL_1;
cast ymm10_2@sint16 mulL_2;
cast ymm10_3@sint16 mulL_3;
cast ymm10_4@sint16 mulL_4;
cast ymm10_5@sint16 mulL_5;
cast ymm10_6@sint16 mulL_6;
cast ymm10_7@sint16 mulL_7;
cast ymm10_8@sint16 mulL_8;
cast ymm10_9@sint16 mulL_9;
cast ymm10_a@sint16 mulL_a;
cast ymm10_b@sint16 mulL_b;
cast ymm10_c@sint16 mulL_c;
cast ymm10_d@sint16 mulL_d;
cast ymm10_e@sint16 mulL_e;
cast ymm10_f@sint16 mulL_f;
(* vpmulhw %ymm2,%ymm8,%ymm8                       #! PC = 0x5555555579b4 *)
smull mulH_0 mulLymm8_0 ymm8_0 ymm2_0;
smull mulH_1 mulLymm8_1 ymm8_1 ymm2_1;
smull mulH_2 mulLymm8_2 ymm8_2 ymm2_2;
smull mulH_3 mulLymm8_3 ymm8_3 ymm2_3;
smull mulH_4 mulLymm8_4 ymm8_4 ymm2_4;
smull mulH_5 mulLymm8_5 ymm8_5 ymm2_5;
smull mulH_6 mulLymm8_6 ymm8_6 ymm2_6;
smull mulH_7 mulLymm8_7 ymm8_7 ymm2_7;
smull mulH_8 mulLymm8_8 ymm8_8 ymm2_8;
smull mulH_9 mulLymm8_9 ymm8_9 ymm2_9;
smull mulH_a mulLymm8_a ymm8_a ymm2_a;
smull mulH_b mulLymm8_b ymm8_b ymm2_b;
smull mulH_c mulLymm8_c ymm8_c ymm2_c;
smull mulH_d mulLymm8_d ymm8_d ymm2_d;
smull mulH_e mulLymm8_e ymm8_e ymm2_e;
smull mulH_f mulLymm8_f ymm8_f ymm2_f;
mov ymm8_0 mulH_0;
mov ymm8_1 mulH_1;
mov ymm8_2 mulH_2;
mov ymm8_3 mulH_3;
mov ymm8_4 mulH_4;
mov ymm8_5 mulH_5;
mov ymm8_6 mulH_6;
mov ymm8_7 mulH_7;
mov ymm8_8 mulH_8;
mov ymm8_9 mulH_9;
mov ymm8_a mulH_a;
mov ymm8_b mulH_b;
mov ymm8_c mulH_c;
mov ymm8_d mulH_d;
mov ymm8_e mulH_e;
mov ymm8_f mulH_f;
(* vpmulhw %ymm0,%ymm10,%ymm10                     #! PC = 0x5555555579b8 *)
smull mulH_0 red_0 ymm10_0 ymm0_0;
assert true && red_0 = mulLymm8_0;
assume red_0 = mulLymm8_0 && true;
smull mulH_1 red_1 ymm10_1 ymm0_1;
assert true && red_1 = mulLymm8_1;
assume red_1 = mulLymm8_1 && true;
smull mulH_2 red_2 ymm10_2 ymm0_2;
assert true && red_2 = mulLymm8_2;
assume red_2 = mulLymm8_2 && true;
smull mulH_3 red_3 ymm10_3 ymm0_3;
assert true && red_3 = mulLymm8_3;
assume red_3 = mulLymm8_3 && true;
smull mulH_4 red_4 ymm10_4 ymm0_4;
assert true && red_4 = mulLymm8_4;
assume red_4 = mulLymm8_4 && true;
smull mulH_5 red_5 ymm10_5 ymm0_5;
assert true && red_5 = mulLymm8_5;
assume red_5 = mulLymm8_5 && true;
smull mulH_6 red_6 ymm10_6 ymm0_6;
assert true && red_6 = mulLymm8_6;
assume red_6 = mulLymm8_6 && true;
smull mulH_7 red_7 ymm10_7 ymm0_7;
assert true && red_7 = mulLymm8_7;
assume red_7 = mulLymm8_7 && true;
smull mulH_8 red_8 ymm10_8 ymm0_8;
assert true && red_8 = mulLymm8_8;
assume red_8 = mulLymm8_8 && true;
smull mulH_9 red_9 ymm10_9 ymm0_9;
assert true && red_9 = mulLymm8_9;
assume red_9 = mulLymm8_9 && true;
smull mulH_a red_a ymm10_a ymm0_a;
assert true && red_a = mulLymm8_a;
assume red_a = mulLymm8_a && true;
smull mulH_b red_b ymm10_b ymm0_b;
assert true && red_b = mulLymm8_b;
assume red_b = mulLymm8_b && true;
smull mulH_c red_c ymm10_c ymm0_c;
assert true && red_c = mulLymm8_c;
assume red_c = mulLymm8_c && true;
smull mulH_d red_d ymm10_d ymm0_d;
assert true && red_d = mulLymm8_d;
assume red_d = mulLymm8_d && true;
smull mulH_e red_e ymm10_e ymm0_e;
assert true && red_e = mulLymm8_e;
assume red_e = mulLymm8_e && true;
smull mulH_f red_f ymm10_f ymm0_f;
assert true && red_f = mulLymm8_f;
assume red_f = mulLymm8_f && true;
mov ymm10_0 mulH_0;
mov ymm10_1 mulH_1;
mov ymm10_2 mulH_2;
mov ymm10_3 mulH_3;
mov ymm10_4 mulH_4;
mov ymm10_5 mulH_5;
mov ymm10_6 mulH_6;
mov ymm10_7 mulH_7;
mov ymm10_8 mulH_8;
mov ymm10_9 mulH_9;
mov ymm10_a mulH_a;
mov ymm10_b mulH_b;
mov ymm10_c mulH_c;
mov ymm10_d mulH_d;
mov ymm10_e mulH_e;
mov ymm10_f mulH_f;
(* vpsubw %ymm10,%ymm8,%ymm8                       #! PC = 0x5555555579bc *)
sub ymm8_0 ymm8_0 ymm10_0;
sub ymm8_1 ymm8_1 ymm10_1;
sub ymm8_2 ymm8_2 ymm10_2;
sub ymm8_3 ymm8_3 ymm10_3;
sub ymm8_4 ymm8_4 ymm10_4;
sub ymm8_5 ymm8_5 ymm10_5;
sub ymm8_6 ymm8_6 ymm10_6;
sub ymm8_7 ymm8_7 ymm10_7;
sub ymm8_8 ymm8_8 ymm10_8;
sub ymm8_9 ymm8_9 ymm10_9;
sub ymm8_a ymm8_a ymm10_a;
sub ymm8_b ymm8_b ymm10_b;
sub ymm8_c ymm8_c ymm10_c;
sub ymm8_d ymm8_d ymm10_d;
sub ymm8_e ymm8_e ymm10_e;
sub ymm8_f ymm8_f ymm10_f;
(* vbroadcasti128 0x130(%rdx),%ymm1                #! EA = L0x555555561250; Value = 0xf0ab2711fcc3398b; PC = 0x5555555579c1 *)
mov ymm1_0 L0x555555561250;
mov ymm1_1 L0x555555561252;
mov ymm1_2 L0x555555561254;
mov ymm1_3 L0x555555561256;
mov ymm1_4 L0x555555561258;
mov ymm1_5 L0x55555556125a;
mov ymm1_6 L0x55555556125c;
mov ymm1_7 L0x55555556125e;
mov ymm1_8 L0x555555561250;
mov ymm1_9 L0x555555561252;
mov ymm1_a L0x555555561254;
mov ymm1_b L0x555555561256;
mov ymm1_c L0x555555561258;
mov ymm1_d L0x55555556125a;
mov ymm1_e L0x55555556125c;
mov ymm1_f L0x55555556125e;
(* vbroadcasti128 0x330(%rdx),%ymm2                #! EA = L0x555555561450; Value = 0xfeabf111fac3078b; PC = 0x5555555579ca *)
mov ymm2_0 L0x555555561450;
mov ymm2_1 L0x555555561452;
mov ymm2_2 L0x555555561454;
mov ymm2_3 L0x555555561456;
mov ymm2_4 L0x555555561458;
mov ymm2_5 L0x55555556145a;
mov ymm2_6 L0x55555556145c;
mov ymm2_7 L0x55555556145e;
mov ymm2_8 L0x555555561450;
mov ymm2_9 L0x555555561452;
mov ymm2_a L0x555555561454;
mov ymm2_b L0x555555561456;
mov ymm2_c L0x555555561458;
mov ymm2_d L0x55555556145a;
mov ymm2_e L0x55555556145c;
mov ymm2_f L0x55555556145e;
(* vpmullw %ymm1,%ymm11,%ymm10                     #! PC = 0x5555555579d3 *)
smull mulHymm11_0 mulL_0 ymm1_0 ymm11_0;
smull mulHymm11_1 mulL_1 ymm1_1 ymm11_1;
smull mulHymm11_2 mulL_2 ymm1_2 ymm11_2;
smull mulHymm11_3 mulL_3 ymm1_3 ymm11_3;
smull mulHymm11_4 mulL_4 ymm1_4 ymm11_4;
smull mulHymm11_5 mulL_5 ymm1_5 ymm11_5;
smull mulHymm11_6 mulL_6 ymm1_6 ymm11_6;
smull mulHymm11_7 mulL_7 ymm1_7 ymm11_7;
smull mulHymm11_8 mulL_8 ymm1_8 ymm11_8;
smull mulHymm11_9 mulL_9 ymm1_9 ymm11_9;
smull mulHymm11_a mulL_a ymm1_a ymm11_a;
smull mulHymm11_b mulL_b ymm1_b ymm11_b;
smull mulHymm11_c mulL_c ymm1_c ymm11_c;
smull mulHymm11_d mulL_d ymm1_d ymm11_d;
smull mulHymm11_e mulL_e ymm1_e ymm11_e;
smull mulHymm11_f mulL_f ymm1_f ymm11_f;
cast ymm10_0@sint16 mulL_0;
cast ymm10_1@sint16 mulL_1;
cast ymm10_2@sint16 mulL_2;
cast ymm10_3@sint16 mulL_3;
cast ymm10_4@sint16 mulL_4;
cast ymm10_5@sint16 mulL_5;
cast ymm10_6@sint16 mulL_6;
cast ymm10_7@sint16 mulL_7;
cast ymm10_8@sint16 mulL_8;
cast ymm10_9@sint16 mulL_9;
cast ymm10_a@sint16 mulL_a;
cast ymm10_b@sint16 mulL_b;
cast ymm10_c@sint16 mulL_c;
cast ymm10_d@sint16 mulL_d;
cast ymm10_e@sint16 mulL_e;
cast ymm10_f@sint16 mulL_f;
(* vpmulhw %ymm2,%ymm11,%ymm11                     #! PC = 0x5555555579d7 *)
smull mulH_0 mulLymm11_0 ymm11_0 ymm2_0;
smull mulH_1 mulLymm11_1 ymm11_1 ymm2_1;
smull mulH_2 mulLymm11_2 ymm11_2 ymm2_2;
smull mulH_3 mulLymm11_3 ymm11_3 ymm2_3;
smull mulH_4 mulLymm11_4 ymm11_4 ymm2_4;
smull mulH_5 mulLymm11_5 ymm11_5 ymm2_5;
smull mulH_6 mulLymm11_6 ymm11_6 ymm2_6;
smull mulH_7 mulLymm11_7 ymm11_7 ymm2_7;
smull mulH_8 mulLymm11_8 ymm11_8 ymm2_8;
smull mulH_9 mulLymm11_9 ymm11_9 ymm2_9;
smull mulH_a mulLymm11_a ymm11_a ymm2_a;
smull mulH_b mulLymm11_b ymm11_b ymm2_b;
smull mulH_c mulLymm11_c ymm11_c ymm2_c;
smull mulH_d mulLymm11_d ymm11_d ymm2_d;
smull mulH_e mulLymm11_e ymm11_e ymm2_e;
smull mulH_f mulLymm11_f ymm11_f ymm2_f;
mov ymm11_0 mulH_0;
mov ymm11_1 mulH_1;
mov ymm11_2 mulH_2;
mov ymm11_3 mulH_3;
mov ymm11_4 mulH_4;
mov ymm11_5 mulH_5;
mov ymm11_6 mulH_6;
mov ymm11_7 mulH_7;
mov ymm11_8 mulH_8;
mov ymm11_9 mulH_9;
mov ymm11_a mulH_a;
mov ymm11_b mulH_b;
mov ymm11_c mulH_c;
mov ymm11_d mulH_d;
mov ymm11_e mulH_e;
mov ymm11_f mulH_f;
(* vpmulhw %ymm0,%ymm10,%ymm10                     #! PC = 0x5555555579db *)
smull mulH_0 red_0 ymm10_0 ymm0_0;
assert true && red_0 = mulLymm11_0;
assume red_0 = mulLymm11_0 && true;
smull mulH_1 red_1 ymm10_1 ymm0_1;
assert true && red_1 = mulLymm11_1;
assume red_1 = mulLymm11_1 && true;
smull mulH_2 red_2 ymm10_2 ymm0_2;
assert true && red_2 = mulLymm11_2;
assume red_2 = mulLymm11_2 && true;
smull mulH_3 red_3 ymm10_3 ymm0_3;
assert true && red_3 = mulLymm11_3;
assume red_3 = mulLymm11_3 && true;
smull mulH_4 red_4 ymm10_4 ymm0_4;
assert true && red_4 = mulLymm11_4;
assume red_4 = mulLymm11_4 && true;
smull mulH_5 red_5 ymm10_5 ymm0_5;
assert true && red_5 = mulLymm11_5;
assume red_5 = mulLymm11_5 && true;
smull mulH_6 red_6 ymm10_6 ymm0_6;
assert true && red_6 = mulLymm11_6;
assume red_6 = mulLymm11_6 && true;
smull mulH_7 red_7 ymm10_7 ymm0_7;
assert true && red_7 = mulLymm11_7;
assume red_7 = mulLymm11_7 && true;
smull mulH_8 red_8 ymm10_8 ymm0_8;
assert true && red_8 = mulLymm11_8;
assume red_8 = mulLymm11_8 && true;
smull mulH_9 red_9 ymm10_9 ymm0_9;
assert true && red_9 = mulLymm11_9;
assume red_9 = mulLymm11_9 && true;
smull mulH_a red_a ymm10_a ymm0_a;
assert true && red_a = mulLymm11_a;
assume red_a = mulLymm11_a && true;
smull mulH_b red_b ymm10_b ymm0_b;
assert true && red_b = mulLymm11_b;
assume red_b = mulLymm11_b && true;
smull mulH_c red_c ymm10_c ymm0_c;
assert true && red_c = mulLymm11_c;
assume red_c = mulLymm11_c && true;
smull mulH_d red_d ymm10_d ymm0_d;
assert true && red_d = mulLymm11_d;
assume red_d = mulLymm11_d && true;
smull mulH_e red_e ymm10_e ymm0_e;
assert true && red_e = mulLymm11_e;
assume red_e = mulLymm11_e && true;
smull mulH_f red_f ymm10_f ymm0_f;
assert true && red_f = mulLymm11_f;
assume red_f = mulLymm11_f && true;
mov ymm10_0 mulH_0;
mov ymm10_1 mulH_1;
mov ymm10_2 mulH_2;
mov ymm10_3 mulH_3;
mov ymm10_4 mulH_4;
mov ymm10_5 mulH_5;
mov ymm10_6 mulH_6;
mov ymm10_7 mulH_7;
mov ymm10_8 mulH_8;
mov ymm10_9 mulH_9;
mov ymm10_a mulH_a;
mov ymm10_b mulH_b;
mov ymm10_c mulH_c;
mov ymm10_d mulH_d;
mov ymm10_e mulH_e;
mov ymm10_f mulH_f;
(* vpsubw %ymm10,%ymm11,%ymm11                     #! PC = 0x5555555579df *)
sub ymm11_0 ymm11_0 ymm10_0;
sub ymm11_1 ymm11_1 ymm10_1;
sub ymm11_2 ymm11_2 ymm10_2;
sub ymm11_3 ymm11_3 ymm10_3;
sub ymm11_4 ymm11_4 ymm10_4;
sub ymm11_5 ymm11_5 ymm10_5;
sub ymm11_6 ymm11_6 ymm10_6;
sub ymm11_7 ymm11_7 ymm10_7;
sub ymm11_8 ymm11_8 ymm10_8;
sub ymm11_9 ymm11_9 ymm10_9;
sub ymm11_a ymm11_a ymm10_a;
sub ymm11_b ymm11_b ymm10_b;
sub ymm11_c ymm11_c ymm10_c;
sub ymm11_d ymm11_d ymm10_d;
sub ymm11_e ymm11_e ymm10_e;
sub ymm11_f ymm11_f ymm10_f;
(* vpaddw %ymm3,%ymm9,%ymm10                       #! PC = 0x5555555579e4 *)
add ymm10_0 ymm9_0 ymm3_0;
add ymm10_1 ymm9_1 ymm3_1;
add ymm10_2 ymm9_2 ymm3_2;
add ymm10_3 ymm9_3 ymm3_3;
add ymm10_4 ymm9_4 ymm3_4;
add ymm10_5 ymm9_5 ymm3_5;
add ymm10_6 ymm9_6 ymm3_6;
add ymm10_7 ymm9_7 ymm3_7;
add ymm10_8 ymm9_8 ymm3_8;
add ymm10_9 ymm9_9 ymm3_9;
add ymm10_a ymm9_a ymm3_a;
add ymm10_b ymm9_b ymm3_b;
add ymm10_c ymm9_c ymm3_c;
add ymm10_d ymm9_d ymm3_d;
add ymm10_e ymm9_e ymm3_e;
add ymm10_f ymm9_f ymm3_f;
(* vpsubw %ymm3,%ymm9,%ymm3                        #! PC = 0x5555555579e8 *)
sub ymm3_0 ymm9_0 ymm3_0;
sub ymm3_1 ymm9_1 ymm3_1;
sub ymm3_2 ymm9_2 ymm3_2;
sub ymm3_3 ymm9_3 ymm3_3;
sub ymm3_4 ymm9_4 ymm3_4;
sub ymm3_5 ymm9_5 ymm3_5;
sub ymm3_6 ymm9_6 ymm3_6;
sub ymm3_7 ymm9_7 ymm3_7;
sub ymm3_8 ymm9_8 ymm3_8;
sub ymm3_9 ymm9_9 ymm3_9;
sub ymm3_a ymm9_a ymm3_a;
sub ymm3_b ymm9_b ymm3_b;
sub ymm3_c ymm9_c ymm3_c;
sub ymm3_d ymm9_d ymm3_d;
sub ymm3_e ymm9_e ymm3_e;
sub ymm3_f ymm9_f ymm3_f;
(* vpaddw %ymm6,%ymm7,%ymm9                        #! PC = 0x5555555579ec *)
add ymm9_0 ymm7_0 ymm6_0;
add ymm9_1 ymm7_1 ymm6_1;
add ymm9_2 ymm7_2 ymm6_2;
add ymm9_3 ymm7_3 ymm6_3;
add ymm9_4 ymm7_4 ymm6_4;
add ymm9_5 ymm7_5 ymm6_5;
add ymm9_6 ymm7_6 ymm6_6;
add ymm9_7 ymm7_7 ymm6_7;
add ymm9_8 ymm7_8 ymm6_8;
add ymm9_9 ymm7_9 ymm6_9;
add ymm9_a ymm7_a ymm6_a;
add ymm9_b ymm7_b ymm6_b;
add ymm9_c ymm7_c ymm6_c;
add ymm9_d ymm7_d ymm6_d;
add ymm9_e ymm7_e ymm6_e;
add ymm9_f ymm7_f ymm6_f;
(* vpsubw %ymm6,%ymm7,%ymm6                        #! PC = 0x5555555579f0 *)
sub ymm6_0 ymm7_0 ymm6_0;
sub ymm6_1 ymm7_1 ymm6_1;
sub ymm6_2 ymm7_2 ymm6_2;
sub ymm6_3 ymm7_3 ymm6_3;
sub ymm6_4 ymm7_4 ymm6_4;
sub ymm6_5 ymm7_5 ymm6_5;
sub ymm6_6 ymm7_6 ymm6_6;
sub ymm6_7 ymm7_7 ymm6_7;
sub ymm6_8 ymm7_8 ymm6_8;
sub ymm6_9 ymm7_9 ymm6_9;
sub ymm6_a ymm7_a ymm6_a;
sub ymm6_b ymm7_b ymm6_b;
sub ymm6_c ymm7_c ymm6_c;
sub ymm6_d ymm7_d ymm6_d;
sub ymm6_e ymm7_e ymm6_e;
sub ymm6_f ymm7_f ymm6_f;
(* vpaddw %ymm8,%ymm5,%ymm7                        #! PC = 0x5555555579f4 *)
add ymm7_0 ymm5_0 ymm8_0;
add ymm7_1 ymm5_1 ymm8_1;
add ymm7_2 ymm5_2 ymm8_2;
add ymm7_3 ymm5_3 ymm8_3;
add ymm7_4 ymm5_4 ymm8_4;
add ymm7_5 ymm5_5 ymm8_5;
add ymm7_6 ymm5_6 ymm8_6;
add ymm7_7 ymm5_7 ymm8_7;
add ymm7_8 ymm5_8 ymm8_8;
add ymm7_9 ymm5_9 ymm8_9;
add ymm7_a ymm5_a ymm8_a;
add ymm7_b ymm5_b ymm8_b;
add ymm7_c ymm5_c ymm8_c;
add ymm7_d ymm5_d ymm8_d;
add ymm7_e ymm5_e ymm8_e;
add ymm7_f ymm5_f ymm8_f;
(* vpsubw %ymm8,%ymm5,%ymm8                        #! PC = 0x5555555579f9 *)
sub ymm8_0 ymm5_0 ymm8_0;
sub ymm8_1 ymm5_1 ymm8_1;
sub ymm8_2 ymm5_2 ymm8_2;
sub ymm8_3 ymm5_3 ymm8_3;
sub ymm8_4 ymm5_4 ymm8_4;
sub ymm8_5 ymm5_5 ymm8_5;
sub ymm8_6 ymm5_6 ymm8_6;
sub ymm8_7 ymm5_7 ymm8_7;
sub ymm8_8 ymm5_8 ymm8_8;
sub ymm8_9 ymm5_9 ymm8_9;
sub ymm8_a ymm5_a ymm8_a;
sub ymm8_b ymm5_b ymm8_b;
sub ymm8_c ymm5_c ymm8_c;
sub ymm8_d ymm5_d ymm8_d;
sub ymm8_e ymm5_e ymm8_e;
sub ymm8_f ymm5_f ymm8_f;
(* vpaddw %ymm11,%ymm4,%ymm5                       #! PC = 0x5555555579fe *)
add ymm5_0 ymm4_0 ymm11_0;
add ymm5_1 ymm4_1 ymm11_1;
add ymm5_2 ymm4_2 ymm11_2;
add ymm5_3 ymm4_3 ymm11_3;
add ymm5_4 ymm4_4 ymm11_4;
add ymm5_5 ymm4_5 ymm11_5;
add ymm5_6 ymm4_6 ymm11_6;
add ymm5_7 ymm4_7 ymm11_7;
add ymm5_8 ymm4_8 ymm11_8;
add ymm5_9 ymm4_9 ymm11_9;
add ymm5_a ymm4_a ymm11_a;
add ymm5_b ymm4_b ymm11_b;
add ymm5_c ymm4_c ymm11_c;
add ymm5_d ymm4_d ymm11_d;
add ymm5_e ymm4_e ymm11_e;
add ymm5_f ymm4_f ymm11_f;
(* vpsubw %ymm11,%ymm4,%ymm11                      #! PC = 0x555555557a03 *)
sub ymm11_0 ymm4_0 ymm11_0;
sub ymm11_1 ymm4_1 ymm11_1;
sub ymm11_2 ymm4_2 ymm11_2;
sub ymm11_3 ymm4_3 ymm11_3;
sub ymm11_4 ymm4_4 ymm11_4;
sub ymm11_5 ymm4_5 ymm11_5;
sub ymm11_6 ymm4_6 ymm11_6;
sub ymm11_7 ymm4_7 ymm11_7;
sub ymm11_8 ymm4_8 ymm11_8;
sub ymm11_9 ymm4_9 ymm11_9;
sub ymm11_a ymm4_a ymm11_a;
sub ymm11_b ymm4_b ymm11_b;
sub ymm11_c ymm4_c ymm11_c;
sub ymm11_d ymm4_d ymm11_d;
sub ymm11_e ymm4_e ymm11_e;
sub ymm11_f ymm4_f ymm11_f;
(* vmovdqa %ymm10,(%rdi)                           #! EA = L0x7fffffffd2e0; PC = 0x555555557a08 *)
mov L0x7fffffffd2e0 ymm10_0;
mov L0x7fffffffd2e2 ymm10_1;
mov L0x7fffffffd2e4 ymm10_2;
mov L0x7fffffffd2e6 ymm10_3;
mov L0x7fffffffd2e8 ymm10_4;
mov L0x7fffffffd2ea ymm10_5;
mov L0x7fffffffd2ec ymm10_6;
mov L0x7fffffffd2ee ymm10_7;
mov L0x7fffffffd2f0 ymm10_8;
mov L0x7fffffffd2f2 ymm10_9;
mov L0x7fffffffd2f4 ymm10_a;
mov L0x7fffffffd2f6 ymm10_b;
mov L0x7fffffffd2f8 ymm10_c;
mov L0x7fffffffd2fa ymm10_d;
mov L0x7fffffffd2fc ymm10_e;
mov L0x7fffffffd2fe ymm10_f;
(* vmovdqa %ymm3,0x20(%rdi)                        #! EA = L0x7fffffffd300; PC = 0x555555557a0c *)
mov L0x7fffffffd300 ymm3_0;
mov L0x7fffffffd302 ymm3_1;
mov L0x7fffffffd304 ymm3_2;
mov L0x7fffffffd306 ymm3_3;
mov L0x7fffffffd308 ymm3_4;
mov L0x7fffffffd30a ymm3_5;
mov L0x7fffffffd30c ymm3_6;
mov L0x7fffffffd30e ymm3_7;
mov L0x7fffffffd310 ymm3_8;
mov L0x7fffffffd312 ymm3_9;
mov L0x7fffffffd314 ymm3_a;
mov L0x7fffffffd316 ymm3_b;
mov L0x7fffffffd318 ymm3_c;
mov L0x7fffffffd31a ymm3_d;
mov L0x7fffffffd31c ymm3_e;
mov L0x7fffffffd31e ymm3_f;
(* vmovdqa %ymm9,0x40(%rdi)                        #! EA = L0x7fffffffd320; PC = 0x555555557a11 *)
mov L0x7fffffffd320 ymm9_0;
mov L0x7fffffffd322 ymm9_1;
mov L0x7fffffffd324 ymm9_2;
mov L0x7fffffffd326 ymm9_3;
mov L0x7fffffffd328 ymm9_4;
mov L0x7fffffffd32a ymm9_5;
mov L0x7fffffffd32c ymm9_6;
mov L0x7fffffffd32e ymm9_7;
mov L0x7fffffffd330 ymm9_8;
mov L0x7fffffffd332 ymm9_9;
mov L0x7fffffffd334 ymm9_a;
mov L0x7fffffffd336 ymm9_b;
mov L0x7fffffffd338 ymm9_c;
mov L0x7fffffffd33a ymm9_d;
mov L0x7fffffffd33c ymm9_e;
mov L0x7fffffffd33e ymm9_f;
(* vmovdqa %ymm6,0x60(%rdi)                        #! EA = L0x7fffffffd340; PC = 0x555555557a16 *)
mov L0x7fffffffd340 ymm6_0;
mov L0x7fffffffd342 ymm6_1;
mov L0x7fffffffd344 ymm6_2;
mov L0x7fffffffd346 ymm6_3;
mov L0x7fffffffd348 ymm6_4;
mov L0x7fffffffd34a ymm6_5;
mov L0x7fffffffd34c ymm6_6;
mov L0x7fffffffd34e ymm6_7;
mov L0x7fffffffd350 ymm6_8;
mov L0x7fffffffd352 ymm6_9;
mov L0x7fffffffd354 ymm6_a;
mov L0x7fffffffd356 ymm6_b;
mov L0x7fffffffd358 ymm6_c;
mov L0x7fffffffd35a ymm6_d;
mov L0x7fffffffd35c ymm6_e;
mov L0x7fffffffd35e ymm6_f;
(* vmovdqa %ymm7,0x80(%rdi)                        #! EA = L0x7fffffffd360; PC = 0x555555557a1b *)
mov L0x7fffffffd360 ymm7_0;
mov L0x7fffffffd362 ymm7_1;
mov L0x7fffffffd364 ymm7_2;
mov L0x7fffffffd366 ymm7_3;
mov L0x7fffffffd368 ymm7_4;
mov L0x7fffffffd36a ymm7_5;
mov L0x7fffffffd36c ymm7_6;
mov L0x7fffffffd36e ymm7_7;
mov L0x7fffffffd370 ymm7_8;
mov L0x7fffffffd372 ymm7_9;
mov L0x7fffffffd374 ymm7_a;
mov L0x7fffffffd376 ymm7_b;
mov L0x7fffffffd378 ymm7_c;
mov L0x7fffffffd37a ymm7_d;
mov L0x7fffffffd37c ymm7_e;
mov L0x7fffffffd37e ymm7_f;
(* vmovdqa %ymm8,0xa0(%rdi)                        #! EA = L0x7fffffffd380; PC = 0x555555557a23 *)
mov L0x7fffffffd380 ymm8_0;
mov L0x7fffffffd382 ymm8_1;
mov L0x7fffffffd384 ymm8_2;
mov L0x7fffffffd386 ymm8_3;
mov L0x7fffffffd388 ymm8_4;
mov L0x7fffffffd38a ymm8_5;
mov L0x7fffffffd38c ymm8_6;
mov L0x7fffffffd38e ymm8_7;
mov L0x7fffffffd390 ymm8_8;
mov L0x7fffffffd392 ymm8_9;
mov L0x7fffffffd394 ymm8_a;
mov L0x7fffffffd396 ymm8_b;
mov L0x7fffffffd398 ymm8_c;
mov L0x7fffffffd39a ymm8_d;
mov L0x7fffffffd39c ymm8_e;
mov L0x7fffffffd39e ymm8_f;
(* vmovdqa %ymm5,0xc0(%rdi)                        #! EA = L0x7fffffffd3a0; PC = 0x555555557a2b *)
mov L0x7fffffffd3a0 ymm5_0;
mov L0x7fffffffd3a2 ymm5_1;
mov L0x7fffffffd3a4 ymm5_2;
mov L0x7fffffffd3a6 ymm5_3;
mov L0x7fffffffd3a8 ymm5_4;
mov L0x7fffffffd3aa ymm5_5;
mov L0x7fffffffd3ac ymm5_6;
mov L0x7fffffffd3ae ymm5_7;
mov L0x7fffffffd3b0 ymm5_8;
mov L0x7fffffffd3b2 ymm5_9;
mov L0x7fffffffd3b4 ymm5_a;
mov L0x7fffffffd3b6 ymm5_b;
mov L0x7fffffffd3b8 ymm5_c;
mov L0x7fffffffd3ba ymm5_d;
mov L0x7fffffffd3bc ymm5_e;
mov L0x7fffffffd3be ymm5_f;
(* vmovdqa %ymm11,0xe0(%rdi)                       #! EA = L0x7fffffffd3c0; PC = 0x555555557a33 *)
mov L0x7fffffffd3c0 ymm11_0;
mov L0x7fffffffd3c2 ymm11_1;
mov L0x7fffffffd3c4 ymm11_2;
mov L0x7fffffffd3c6 ymm11_3;
mov L0x7fffffffd3c8 ymm11_4;
mov L0x7fffffffd3ca ymm11_5;
mov L0x7fffffffd3cc ymm11_6;
mov L0x7fffffffd3ce ymm11_7;
mov L0x7fffffffd3d0 ymm11_8;
mov L0x7fffffffd3d2 ymm11_9;
mov L0x7fffffffd3d4 ymm11_a;
mov L0x7fffffffd3d6 ymm11_b;
mov L0x7fffffffd3d8 ymm11_c;
mov L0x7fffffffd3da ymm11_d;
mov L0x7fffffffd3dc ymm11_e;
mov L0x7fffffffd3de ymm11_f;


(**************** LEVELS 3-8, 0 *****************)


(**************** CUT 145,  3 *****************)

cut 
  and [
eqmod (inp_poly**2) (L0x7fffffffd2e0*x** 0+L0x7fffffffd2f0*x** 1)
      [10753, x**2 - 1],
eqmod (inp_poly**2) (L0x7fffffffd300*x** 0+L0x7fffffffd310*x** 1)
      [10753, x**2 - 10752],
eqmod (inp_poly**2) (L0x7fffffffd2e2*x** 0+L0x7fffffffd2f2*x** 1)
      [10753, x**2 - 6264],
eqmod (inp_poly**2) (L0x7fffffffd302*x** 0+L0x7fffffffd312*x** 1)
      [10753, x**2 - 4489],
eqmod (inp_poly**2) (L0x7fffffffd2e4*x** 0+L0x7fffffffd2f4*x** 1)
      [10753, x**2 - 321],
eqmod (inp_poly**2) (L0x7fffffffd304*x** 0+L0x7fffffffd314*x** 1)
      [10753, x**2 - 10432],
eqmod (inp_poly**2) (L0x7fffffffd2e6*x** 0+L0x7fffffffd2f6*x** 1)
      [10753, x**2 - 10686],
eqmod (inp_poly**2) (L0x7fffffffd306*x** 0+L0x7fffffffd316*x** 1)
      [10753, x**2 - 67],
eqmod (inp_poly**2) (L0x7fffffffd2e8*x** 0+L0x7fffffffd2f8*x** 1)
      [10753, x**2 - 9097],
eqmod (inp_poly**2) (L0x7fffffffd308*x** 0+L0x7fffffffd318*x** 1)
      [10753, x**2 - 1656],
eqmod (inp_poly**2) (L0x7fffffffd2ea*x** 0+L0x7fffffffd2fa*x** 1)
      [10753, x**2 - 3461],
eqmod (inp_poly**2) (L0x7fffffffd30a*x** 0+L0x7fffffffd31a*x** 1)
      [10753, x**2 - 7292],
eqmod (inp_poly**2) (L0x7fffffffd2ec*x** 0+L0x7fffffffd2fc*x** 1)
      [10753, x**2 - 6074],
eqmod (inp_poly**2) (L0x7fffffffd30c*x** 0+L0x7fffffffd31c*x** 1)
      [10753, x**2 - 4679],
eqmod (inp_poly**2) (L0x7fffffffd2ee*x** 0+L0x7fffffffd2fe*x** 1)
      [10753, x**2 - 3422],
eqmod (inp_poly**2) (L0x7fffffffd30e*x** 0+L0x7fffffffd31e*x** 1)
      [10753, x**2 - 7331],
eqmod (inp_poly**2) (L0x7fffffffd320*x** 0+L0x7fffffffd330*x** 1)
      [10753, x**2 - 1154],
eqmod (inp_poly**2) (L0x7fffffffd340*x** 0+L0x7fffffffd350*x** 1)
      [10753, x**2 - 9599],
eqmod (inp_poly**2) (L0x7fffffffd322*x** 0+L0x7fffffffd332*x** 1)
      [10753, x**2 - 2640],
eqmod (inp_poly**2) (L0x7fffffffd342*x** 0+L0x7fffffffd352*x** 1)
      [10753, x**2 - 8113],
eqmod (inp_poly**2) (L0x7fffffffd324*x** 0+L0x7fffffffd334*x** 1)
      [10753, x**2 - 4832],
eqmod (inp_poly**2) (L0x7fffffffd344*x** 0+L0x7fffffffd354*x** 1)
      [10753, x**2 - 5921],
eqmod (inp_poly**2) (L0x7fffffffd326*x** 0+L0x7fffffffd336*x** 1)
      [10753, x**2 - 8706],
eqmod (inp_poly**2) (L0x7fffffffd346*x** 0+L0x7fffffffd356*x** 1)
      [10753, x**2 - 2047],
eqmod (inp_poly**2) (L0x7fffffffd328*x** 0+L0x7fffffffd338*x** 1)
      [10753, x**2 - 3010],
eqmod (inp_poly**2) (L0x7fffffffd348*x** 0+L0x7fffffffd358*x** 1)
      [10753, x**2 - 7743],
eqmod (inp_poly**2) (L0x7fffffffd32a*x** 0+L0x7fffffffd33a*x** 1)
      [10753, x**2 - 4631],
eqmod (inp_poly**2) (L0x7fffffffd34a*x** 0+L0x7fffffffd35a*x** 1)
      [10753, x**2 - 6122],
eqmod (inp_poly**2) (L0x7fffffffd32c*x** 0+L0x7fffffffd33c*x** 1)
      [10753, x**2 - 9193],
eqmod (inp_poly**2) (L0x7fffffffd34c*x** 0+L0x7fffffffd35c*x** 1)
      [10753, x**2 - 1560],
eqmod (inp_poly**2) (L0x7fffffffd32e*x** 0+L0x7fffffffd33e*x** 1)
      [10753, x**2 - 2637],
eqmod (inp_poly**2) (L0x7fffffffd34e*x** 0+L0x7fffffffd35e*x** 1)
      [10753, x**2 - 8116],
eqmod (inp_poly**2) (L0x7fffffffd360*x** 0+L0x7fffffffd370*x** 1)
      [10753, x**2 - 7853],
eqmod (inp_poly**2) (L0x7fffffffd380*x** 0+L0x7fffffffd390*x** 1)
      [10753, x**2 - 2900],
eqmod (inp_poly**2) (L0x7fffffffd362*x** 0+L0x7fffffffd372*x** 1)
      [10753, x**2 - 6970],
eqmod (inp_poly**2) (L0x7fffffffd382*x** 0+L0x7fffffffd392*x** 1)
      [10753, x**2 - 3783],
eqmod (inp_poly**2) (L0x7fffffffd364*x** 0+L0x7fffffffd374*x** 1)
      [10753, x**2 - 4611],
eqmod (inp_poly**2) (L0x7fffffffd384*x** 0+L0x7fffffffd394*x** 1)
      [10753, x**2 - 6142],
eqmod (inp_poly**2) (L0x7fffffffd366*x** 0+L0x7fffffffd376*x** 1)
      [10753, x**2 - 746],
eqmod (inp_poly**2) (L0x7fffffffd386*x** 0+L0x7fffffffd396*x** 1)
      [10753, x**2 - 10007],
eqmod (inp_poly**2) (L0x7fffffffd368*x** 0+L0x7fffffffd378*x** 1)
      [10753, x**2 - 6562],
eqmod (inp_poly**2) (L0x7fffffffd388*x** 0+L0x7fffffffd398*x** 1)
      [10753, x**2 - 4191],
eqmod (inp_poly**2) (L0x7fffffffd36a*x** 0+L0x7fffffffd37a*x** 1)
      [10753, x**2 - 6402],
eqmod (inp_poly**2) (L0x7fffffffd38a*x** 0+L0x7fffffffd39a*x** 1)
      [10753, x**2 - 4351],
eqmod (inp_poly**2) (L0x7fffffffd36c*x** 0+L0x7fffffffd37c*x** 1)
      [10753, x**2 - 9567],
eqmod (inp_poly**2) (L0x7fffffffd38c*x** 0+L0x7fffffffd39c*x** 1)
      [10753, x**2 - 1186],
eqmod (inp_poly**2) (L0x7fffffffd36e*x** 0+L0x7fffffffd37e*x** 1)
      [10753, x**2 - 1219],
eqmod (inp_poly**2) (L0x7fffffffd38e*x** 0+L0x7fffffffd39e*x** 1)
      [10753, x**2 - 9534],
eqmod (inp_poly**2) (L0x7fffffffd3a0*x** 0+L0x7fffffffd3b0*x** 1)
      [10753, x**2 - 8336],
eqmod (inp_poly**2) (L0x7fffffffd3c0*x** 0+L0x7fffffffd3d0*x** 1)
      [10753, x**2 - 2417],
eqmod (inp_poly**2) (L0x7fffffffd3a2*x** 0+L0x7fffffffd3b2*x** 1)
      [10753, x**2 - 136],
eqmod (inp_poly**2) (L0x7fffffffd3c2*x** 0+L0x7fffffffd3d2*x** 1)
      [10753, x**2 - 10617],
eqmod (inp_poly**2) (L0x7fffffffd3a4*x** 0+L0x7fffffffd3b4*x** 1)
      [10753, x**2 - 9112],
eqmod (inp_poly**2) (L0x7fffffffd3c4*x** 0+L0x7fffffffd3d4*x** 1)
      [10753, x**2 - 1641],
eqmod (inp_poly**2) (L0x7fffffffd3a6*x** 0+L0x7fffffffd3b6*x** 1)
      [10753, x**2 - 644],
eqmod (inp_poly**2) (L0x7fffffffd3c6*x** 0+L0x7fffffffd3d6*x** 1)
      [10753, x**2 - 10109],
eqmod (inp_poly**2) (L0x7fffffffd3a8*x** 0+L0x7fffffffd3b8*x** 1)
      [10753, x**2 - 2436],
eqmod (inp_poly**2) (L0x7fffffffd3c8*x** 0+L0x7fffffffd3d8*x** 1)
      [10753, x**2 - 8317],
eqmod (inp_poly**2) (L0x7fffffffd3aa*x** 0+L0x7fffffffd3ba*x** 1)
      [10753, x**2 - 597],
eqmod (inp_poly**2) (L0x7fffffffd3ca*x** 0+L0x7fffffffd3da*x** 1)
      [10753, x**2 - 10156],
eqmod (inp_poly**2) (L0x7fffffffd3ac*x** 0+L0x7fffffffd3bc*x** 1)
      [10753, x**2 - 7740],
eqmod (inp_poly**2) (L0x7fffffffd3cc*x** 0+L0x7fffffffd3dc*x** 1)
      [10753, x**2 - 3013],
eqmod (inp_poly**2) (L0x7fffffffd3ae*x** 0+L0x7fffffffd3be*x** 1)
      [10753, x**2 - 8836],
eqmod (inp_poly**2) (L0x7fffffffd3ce*x** 0+L0x7fffffffd3de*x** 1)
      [10753, x**2 - 1917]
  ] prove with [ precondition, cuts [ 3, 21, 39, 57, 75, 93, 111, 129] ] && and [
(-28323)@16<=s L0x7fffffffd2e0,L0x7fffffffd2e0<=s 28323@16,
(-28323)@16<=s L0x7fffffffd2f0,L0x7fffffffd2f0<=s 28323@16,
(-28323)@16<=s L0x7fffffffd300,L0x7fffffffd300<=s 28323@16,
(-28323)@16<=s L0x7fffffffd310,L0x7fffffffd310<=s 28323@16,
(-28139)@16<=s L0x7fffffffd2e2,L0x7fffffffd2e2<=s 28139@16,
(-28139)@16<=s L0x7fffffffd2f2,L0x7fffffffd2f2<=s 28139@16,
(-28139)@16<=s L0x7fffffffd302,L0x7fffffffd302<=s 28139@16,
(-28139)@16<=s L0x7fffffffd312,L0x7fffffffd312<=s 28139@16,
(-29243)@16<=s L0x7fffffffd2e4,L0x7fffffffd2e4<=s 29243@16,
(-29243)@16<=s L0x7fffffffd2f4,L0x7fffffffd2f4<=s 29243@16,
(-29243)@16<=s L0x7fffffffd304,L0x7fffffffd304<=s 29243@16,
(-29243)@16<=s L0x7fffffffd314,L0x7fffffffd314<=s 29243@16,
(-29090)@16<=s L0x7fffffffd2e6,L0x7fffffffd2e6<=s 29090@16,
(-29090)@16<=s L0x7fffffffd2f6,L0x7fffffffd2f6<=s 29090@16,
(-29090)@16<=s L0x7fffffffd306,L0x7fffffffd306<=s 29090@16,
(-29090)@16<=s L0x7fffffffd316,L0x7fffffffd316<=s 29090@16,
(-29576)@16<=s L0x7fffffffd2e8,L0x7fffffffd2e8<=s 29576@16,
(-29576)@16<=s L0x7fffffffd2f8,L0x7fffffffd2f8<=s 29576@16,
(-29576)@16<=s L0x7fffffffd308,L0x7fffffffd308<=s 29576@16,
(-29576)@16<=s L0x7fffffffd318,L0x7fffffffd318<=s 29576@16,
(-30023)@16<=s L0x7fffffffd2ea,L0x7fffffffd2ea<=s 30023@16,
(-30023)@16<=s L0x7fffffffd2fa,L0x7fffffffd2fa<=s 30023@16,
(-30023)@16<=s L0x7fffffffd30a,L0x7fffffffd30a<=s 30023@16,
(-30023)@16<=s L0x7fffffffd31a,L0x7fffffffd31a<=s 30023@16,
(-28819)@16<=s L0x7fffffffd2ec,L0x7fffffffd2ec<=s 28819@16,
(-28819)@16<=s L0x7fffffffd2fc,L0x7fffffffd2fc<=s 28819@16,
(-28819)@16<=s L0x7fffffffd30c,L0x7fffffffd30c<=s 28819@16,
(-28819)@16<=s L0x7fffffffd31c,L0x7fffffffd31c<=s 28819@16,
(-28825)@16<=s L0x7fffffffd2ee,L0x7fffffffd2ee<=s 28825@16,
(-28825)@16<=s L0x7fffffffd2fe,L0x7fffffffd2fe<=s 28825@16,
(-28825)@16<=s L0x7fffffffd30e,L0x7fffffffd30e<=s 28825@16,
(-28825)@16<=s L0x7fffffffd31e,L0x7fffffffd31e<=s 28825@16,
(-29557)@16<=s L0x7fffffffd320,L0x7fffffffd320<=s 29557@16,
(-29557)@16<=s L0x7fffffffd330,L0x7fffffffd330<=s 29557@16,
(-29557)@16<=s L0x7fffffffd340,L0x7fffffffd340<=s 29557@16,
(-29557)@16<=s L0x7fffffffd350,L0x7fffffffd350<=s 29557@16,
(-28853)@16<=s L0x7fffffffd322,L0x7fffffffd322<=s 28853@16,
(-28853)@16<=s L0x7fffffffd332,L0x7fffffffd332<=s 28853@16,
(-28853)@16<=s L0x7fffffffd342,L0x7fffffffd342<=s 28853@16,
(-28853)@16<=s L0x7fffffffd352,L0x7fffffffd352<=s 28853@16,
(-30636)@16<=s L0x7fffffffd324,L0x7fffffffd324<=s 30636@16,
(-30636)@16<=s L0x7fffffffd334,L0x7fffffffd334<=s 30636@16,
(-30636)@16<=s L0x7fffffffd344,L0x7fffffffd344<=s 30636@16,
(-30636)@16<=s L0x7fffffffd354,L0x7fffffffd354<=s 30636@16,
(-29728)@16<=s L0x7fffffffd326,L0x7fffffffd326<=s 29728@16,
(-29728)@16<=s L0x7fffffffd336,L0x7fffffffd336<=s 29728@16,
(-29728)@16<=s L0x7fffffffd346,L0x7fffffffd346<=s 29728@16,
(-29728)@16<=s L0x7fffffffd356,L0x7fffffffd356<=s 29728@16,
(-28214)@16<=s L0x7fffffffd328,L0x7fffffffd328<=s 28214@16,
(-28214)@16<=s L0x7fffffffd338,L0x7fffffffd338<=s 28214@16,
(-28214)@16<=s L0x7fffffffd348,L0x7fffffffd348<=s 28214@16,
(-28214)@16<=s L0x7fffffffd358,L0x7fffffffd358<=s 28214@16,
(-29618)@16<=s L0x7fffffffd32a,L0x7fffffffd32a<=s 29618@16,
(-29618)@16<=s L0x7fffffffd33a,L0x7fffffffd33a<=s 29618@16,
(-29618)@16<=s L0x7fffffffd34a,L0x7fffffffd34a<=s 29618@16,
(-29618)@16<=s L0x7fffffffd35a,L0x7fffffffd35a<=s 29618@16,
(-29205)@16<=s L0x7fffffffd32c,L0x7fffffffd32c<=s 29205@16,
(-29205)@16<=s L0x7fffffffd33c,L0x7fffffffd33c<=s 29205@16,
(-29205)@16<=s L0x7fffffffd34c,L0x7fffffffd34c<=s 29205@16,
(-29205)@16<=s L0x7fffffffd35c,L0x7fffffffd35c<=s 29205@16,
(-29399)@16<=s L0x7fffffffd32e,L0x7fffffffd32e<=s 29399@16,
(-29399)@16<=s L0x7fffffffd33e,L0x7fffffffd33e<=s 29399@16,
(-29399)@16<=s L0x7fffffffd34e,L0x7fffffffd34e<=s 29399@16,
(-29399)@16<=s L0x7fffffffd35e,L0x7fffffffd35e<=s 29399@16,
(-24765)@16<=s L0x7fffffffd360,L0x7fffffffd360<=s 24765@16,
(-24765)@16<=s L0x7fffffffd370,L0x7fffffffd370<=s 24765@16,
(-24765)@16<=s L0x7fffffffd380,L0x7fffffffd380<=s 24765@16,
(-24765)@16<=s L0x7fffffffd390,L0x7fffffffd390<=s 24765@16,
(-23847)@16<=s L0x7fffffffd362,L0x7fffffffd362<=s 23847@16,
(-23847)@16<=s L0x7fffffffd372,L0x7fffffffd372<=s 23847@16,
(-23847)@16<=s L0x7fffffffd382,L0x7fffffffd382<=s 23847@16,
(-23847)@16<=s L0x7fffffffd392,L0x7fffffffd392<=s 23847@16,
(-24454)@16<=s L0x7fffffffd364,L0x7fffffffd364<=s 24454@16,
(-24454)@16<=s L0x7fffffffd374,L0x7fffffffd374<=s 24454@16,
(-24454)@16<=s L0x7fffffffd384,L0x7fffffffd384<=s 24454@16,
(-24454)@16<=s L0x7fffffffd394,L0x7fffffffd394<=s 24454@16,
(-24176)@16<=s L0x7fffffffd366,L0x7fffffffd366<=s 24176@16,
(-24176)@16<=s L0x7fffffffd376,L0x7fffffffd376<=s 24176@16,
(-24176)@16<=s L0x7fffffffd386,L0x7fffffffd386<=s 24176@16,
(-24176)@16<=s L0x7fffffffd396,L0x7fffffffd396<=s 24176@16,
(-25150)@16<=s L0x7fffffffd368,L0x7fffffffd368<=s 25150@16,
(-25150)@16<=s L0x7fffffffd378,L0x7fffffffd378<=s 25150@16,
(-25150)@16<=s L0x7fffffffd388,L0x7fffffffd388<=s 25150@16,
(-25150)@16<=s L0x7fffffffd398,L0x7fffffffd398<=s 25150@16,
(-24695)@16<=s L0x7fffffffd36a,L0x7fffffffd36a<=s 24695@16,
(-24695)@16<=s L0x7fffffffd37a,L0x7fffffffd37a<=s 24695@16,
(-24695)@16<=s L0x7fffffffd38a,L0x7fffffffd38a<=s 24695@16,
(-24695)@16<=s L0x7fffffffd39a,L0x7fffffffd39a<=s 24695@16,
(-24780)@16<=s L0x7fffffffd36c,L0x7fffffffd36c<=s 24780@16,
(-24780)@16<=s L0x7fffffffd37c,L0x7fffffffd37c<=s 24780@16,
(-24780)@16<=s L0x7fffffffd38c,L0x7fffffffd38c<=s 24780@16,
(-24780)@16<=s L0x7fffffffd39c,L0x7fffffffd39c<=s 24780@16,
(-25148)@16<=s L0x7fffffffd36e,L0x7fffffffd36e<=s 25148@16,
(-25148)@16<=s L0x7fffffffd37e,L0x7fffffffd37e<=s 25148@16,
(-25148)@16<=s L0x7fffffffd38e,L0x7fffffffd38e<=s 25148@16,
(-25148)@16<=s L0x7fffffffd39e,L0x7fffffffd39e<=s 25148@16,
(-22605)@16<=s L0x7fffffffd3a0,L0x7fffffffd3a0<=s 22605@16,
(-22605)@16<=s L0x7fffffffd3b0,L0x7fffffffd3b0<=s 22605@16,
(-22605)@16<=s L0x7fffffffd3c0,L0x7fffffffd3c0<=s 22605@16,
(-22605)@16<=s L0x7fffffffd3d0,L0x7fffffffd3d0<=s 22605@16,
(-22477)@16<=s L0x7fffffffd3a2,L0x7fffffffd3a2<=s 22477@16,
(-22477)@16<=s L0x7fffffffd3b2,L0x7fffffffd3b2<=s 22477@16,
(-22477)@16<=s L0x7fffffffd3c2,L0x7fffffffd3c2<=s 22477@16,
(-22477)@16<=s L0x7fffffffd3d2,L0x7fffffffd3d2<=s 22477@16,
(-23828)@16<=s L0x7fffffffd3a4,L0x7fffffffd3a4<=s 23828@16,
(-23828)@16<=s L0x7fffffffd3b4,L0x7fffffffd3b4<=s 23828@16,
(-23828)@16<=s L0x7fffffffd3c4,L0x7fffffffd3c4<=s 23828@16,
(-23828)@16<=s L0x7fffffffd3d4,L0x7fffffffd3d4<=s 23828@16,
(-22907)@16<=s L0x7fffffffd3a6,L0x7fffffffd3a6<=s 22907@16,
(-22907)@16<=s L0x7fffffffd3b6,L0x7fffffffd3b6<=s 22907@16,
(-22907)@16<=s L0x7fffffffd3c6,L0x7fffffffd3c6<=s 22907@16,
(-22907)@16<=s L0x7fffffffd3d6,L0x7fffffffd3d6<=s 22907@16,
(-23672)@16<=s L0x7fffffffd3a8,L0x7fffffffd3a8<=s 23672@16,
(-23672)@16<=s L0x7fffffffd3b8,L0x7fffffffd3b8<=s 23672@16,
(-23672)@16<=s L0x7fffffffd3c8,L0x7fffffffd3c8<=s 23672@16,
(-23672)@16<=s L0x7fffffffd3d8,L0x7fffffffd3d8<=s 23672@16,
(-23955)@16<=s L0x7fffffffd3aa,L0x7fffffffd3aa<=s 23955@16,
(-23955)@16<=s L0x7fffffffd3ba,L0x7fffffffd3ba<=s 23955@16,
(-23955)@16<=s L0x7fffffffd3ca,L0x7fffffffd3ca<=s 23955@16,
(-23955)@16<=s L0x7fffffffd3da,L0x7fffffffd3da<=s 23955@16,
(-23383)@16<=s L0x7fffffffd3ac,L0x7fffffffd3ac<=s 23383@16,
(-23383)@16<=s L0x7fffffffd3bc,L0x7fffffffd3bc<=s 23383@16,
(-23383)@16<=s L0x7fffffffd3cc,L0x7fffffffd3cc<=s 23383@16,
(-23383)@16<=s L0x7fffffffd3dc,L0x7fffffffd3dc<=s 23383@16,
(-24060)@16<=s L0x7fffffffd3ae,L0x7fffffffd3ae<=s 24060@16,
(-24060)@16<=s L0x7fffffffd3be,L0x7fffffffd3be<=s 24060@16,
(-24060)@16<=s L0x7fffffffd3ce,L0x7fffffffd3ce<=s 24060@16,
(-24060)@16<=s L0x7fffffffd3de,L0x7fffffffd3de<=s 24060@16
];


(* === be ready for next level and offset === *)

(**************** CUT 146,  4 *****************)

cut 
true && and [
( -8192)@16<=s L0x7fffffffd3e0,L0x7fffffffd3e0<s  8192@16,
( -8192)@16<=s L0x7fffffffd3e2,L0x7fffffffd3e2<s  8192@16,
( -8192)@16<=s L0x7fffffffd3e4,L0x7fffffffd3e4<s  8192@16,
( -8192)@16<=s L0x7fffffffd3e6,L0x7fffffffd3e6<s  8192@16,
( -8192)@16<=s L0x7fffffffd3e8,L0x7fffffffd3e8<s  8192@16,
( -8192)@16<=s L0x7fffffffd3ea,L0x7fffffffd3ea<s  8192@16,
( -8192)@16<=s L0x7fffffffd3ec,L0x7fffffffd3ec<s  8192@16,
( -8192)@16<=s L0x7fffffffd3ee,L0x7fffffffd3ee<s  8192@16,
( -8192)@16<=s L0x7fffffffd3f0,L0x7fffffffd3f0<s  8192@16,
( -8192)@16<=s L0x7fffffffd3f2,L0x7fffffffd3f2<s  8192@16,
( -8192)@16<=s L0x7fffffffd3f4,L0x7fffffffd3f4<s  8192@16,
( -8192)@16<=s L0x7fffffffd3f6,L0x7fffffffd3f6<s  8192@16,
( -8192)@16<=s L0x7fffffffd3f8,L0x7fffffffd3f8<s  8192@16,
( -8192)@16<=s L0x7fffffffd3fa,L0x7fffffffd3fa<s  8192@16,
( -8192)@16<=s L0x7fffffffd3fc,L0x7fffffffd3fc<s  8192@16,
( -8192)@16<=s L0x7fffffffd3fe,L0x7fffffffd3fe<s  8192@16,
( -8192)@16<=s L0x7fffffffd400,L0x7fffffffd400<s  8192@16,
( -8192)@16<=s L0x7fffffffd402,L0x7fffffffd402<s  8192@16,
( -8192)@16<=s L0x7fffffffd404,L0x7fffffffd404<s  8192@16,
( -8192)@16<=s L0x7fffffffd406,L0x7fffffffd406<s  8192@16,
( -8192)@16<=s L0x7fffffffd408,L0x7fffffffd408<s  8192@16,
( -8192)@16<=s L0x7fffffffd40a,L0x7fffffffd40a<s  8192@16,
( -8192)@16<=s L0x7fffffffd40c,L0x7fffffffd40c<s  8192@16,
( -8192)@16<=s L0x7fffffffd40e,L0x7fffffffd40e<s  8192@16,
( -8192)@16<=s L0x7fffffffd410,L0x7fffffffd410<s  8192@16,
( -8192)@16<=s L0x7fffffffd412,L0x7fffffffd412<s  8192@16,
( -8192)@16<=s L0x7fffffffd414,L0x7fffffffd414<s  8192@16,
( -8192)@16<=s L0x7fffffffd416,L0x7fffffffd416<s  8192@16,
( -8192)@16<=s L0x7fffffffd418,L0x7fffffffd418<s  8192@16,
( -8192)@16<=s L0x7fffffffd41a,L0x7fffffffd41a<s  8192@16,
( -8192)@16<=s L0x7fffffffd41c,L0x7fffffffd41c<s  8192@16,
( -8192)@16<=s L0x7fffffffd41e,L0x7fffffffd41e<s  8192@16,
( -8192)@16<=s L0x7fffffffd420,L0x7fffffffd420<s  8192@16,
( -8192)@16<=s L0x7fffffffd422,L0x7fffffffd422<s  8192@16,
( -8192)@16<=s L0x7fffffffd424,L0x7fffffffd424<s  8192@16,
( -8192)@16<=s L0x7fffffffd426,L0x7fffffffd426<s  8192@16,
( -8192)@16<=s L0x7fffffffd428,L0x7fffffffd428<s  8192@16,
( -8192)@16<=s L0x7fffffffd42a,L0x7fffffffd42a<s  8192@16,
( -8192)@16<=s L0x7fffffffd42c,L0x7fffffffd42c<s  8192@16,
( -8192)@16<=s L0x7fffffffd42e,L0x7fffffffd42e<s  8192@16,
( -8192)@16<=s L0x7fffffffd430,L0x7fffffffd430<s  8192@16,
( -8192)@16<=s L0x7fffffffd432,L0x7fffffffd432<s  8192@16,
( -8192)@16<=s L0x7fffffffd434,L0x7fffffffd434<s  8192@16,
( -8192)@16<=s L0x7fffffffd436,L0x7fffffffd436<s  8192@16,
( -8192)@16<=s L0x7fffffffd438,L0x7fffffffd438<s  8192@16,
( -8192)@16<=s L0x7fffffffd43a,L0x7fffffffd43a<s  8192@16,
( -8192)@16<=s L0x7fffffffd43c,L0x7fffffffd43c<s  8192@16,
( -8192)@16<=s L0x7fffffffd43e,L0x7fffffffd43e<s  8192@16,
( -8192)@16<=s L0x7fffffffd440,L0x7fffffffd440<s  8192@16,
( -8192)@16<=s L0x7fffffffd442,L0x7fffffffd442<s  8192@16,
( -8192)@16<=s L0x7fffffffd444,L0x7fffffffd444<s  8192@16,
( -8192)@16<=s L0x7fffffffd446,L0x7fffffffd446<s  8192@16,
( -8192)@16<=s L0x7fffffffd448,L0x7fffffffd448<s  8192@16,
( -8192)@16<=s L0x7fffffffd44a,L0x7fffffffd44a<s  8192@16,
( -8192)@16<=s L0x7fffffffd44c,L0x7fffffffd44c<s  8192@16,
( -8192)@16<=s L0x7fffffffd44e,L0x7fffffffd44e<s  8192@16,
( -8192)@16<=s L0x7fffffffd450,L0x7fffffffd450<s  8192@16,
( -8192)@16<=s L0x7fffffffd452,L0x7fffffffd452<s  8192@16,
( -8192)@16<=s L0x7fffffffd454,L0x7fffffffd454<s  8192@16,
( -8192)@16<=s L0x7fffffffd456,L0x7fffffffd456<s  8192@16,
( -8192)@16<=s L0x7fffffffd458,L0x7fffffffd458<s  8192@16,
( -8192)@16<=s L0x7fffffffd45a,L0x7fffffffd45a<s  8192@16,
( -8192)@16<=s L0x7fffffffd45c,L0x7fffffffd45c<s  8192@16,
( -8192)@16<=s L0x7fffffffd45e,L0x7fffffffd45e<s  8192@16,
( -8192)@16<=s L0x7fffffffd460,L0x7fffffffd460<s  8192@16,
( -8192)@16<=s L0x7fffffffd462,L0x7fffffffd462<s  8192@16,
( -8192)@16<=s L0x7fffffffd464,L0x7fffffffd464<s  8192@16,
( -8192)@16<=s L0x7fffffffd466,L0x7fffffffd466<s  8192@16,
( -8192)@16<=s L0x7fffffffd468,L0x7fffffffd468<s  8192@16,
( -8192)@16<=s L0x7fffffffd46a,L0x7fffffffd46a<s  8192@16,
( -8192)@16<=s L0x7fffffffd46c,L0x7fffffffd46c<s  8192@16,
( -8192)@16<=s L0x7fffffffd46e,L0x7fffffffd46e<s  8192@16,
( -8192)@16<=s L0x7fffffffd470,L0x7fffffffd470<s  8192@16,
( -8192)@16<=s L0x7fffffffd472,L0x7fffffffd472<s  8192@16,
( -8192)@16<=s L0x7fffffffd474,L0x7fffffffd474<s  8192@16,
( -8192)@16<=s L0x7fffffffd476,L0x7fffffffd476<s  8192@16,
( -8192)@16<=s L0x7fffffffd478,L0x7fffffffd478<s  8192@16,
( -8192)@16<=s L0x7fffffffd47a,L0x7fffffffd47a<s  8192@16,
( -8192)@16<=s L0x7fffffffd47c,L0x7fffffffd47c<s  8192@16,
( -8192)@16<=s L0x7fffffffd47e,L0x7fffffffd47e<s  8192@16,
( -8192)@16<=s L0x7fffffffd480,L0x7fffffffd480<s  8192@16,
( -8192)@16<=s L0x7fffffffd482,L0x7fffffffd482<s  8192@16,
( -8192)@16<=s L0x7fffffffd484,L0x7fffffffd484<s  8192@16,
( -8192)@16<=s L0x7fffffffd486,L0x7fffffffd486<s  8192@16,
( -8192)@16<=s L0x7fffffffd488,L0x7fffffffd488<s  8192@16,
( -8192)@16<=s L0x7fffffffd48a,L0x7fffffffd48a<s  8192@16,
( -8192)@16<=s L0x7fffffffd48c,L0x7fffffffd48c<s  8192@16,
( -8192)@16<=s L0x7fffffffd48e,L0x7fffffffd48e<s  8192@16,
( -8192)@16<=s L0x7fffffffd490,L0x7fffffffd490<s  8192@16,
( -8192)@16<=s L0x7fffffffd492,L0x7fffffffd492<s  8192@16,
( -8192)@16<=s L0x7fffffffd494,L0x7fffffffd494<s  8192@16,
( -8192)@16<=s L0x7fffffffd496,L0x7fffffffd496<s  8192@16,
( -8192)@16<=s L0x7fffffffd498,L0x7fffffffd498<s  8192@16,
( -8192)@16<=s L0x7fffffffd49a,L0x7fffffffd49a<s  8192@16,
( -8192)@16<=s L0x7fffffffd49c,L0x7fffffffd49c<s  8192@16,
( -8192)@16<=s L0x7fffffffd49e,L0x7fffffffd49e<s  8192@16,
( -8192)@16<=s L0x7fffffffd4a0,L0x7fffffffd4a0<s  8192@16,
( -8192)@16<=s L0x7fffffffd4a2,L0x7fffffffd4a2<s  8192@16,
( -8192)@16<=s L0x7fffffffd4a4,L0x7fffffffd4a4<s  8192@16,
( -8192)@16<=s L0x7fffffffd4a6,L0x7fffffffd4a6<s  8192@16,
( -8192)@16<=s L0x7fffffffd4a8,L0x7fffffffd4a8<s  8192@16,
( -8192)@16<=s L0x7fffffffd4aa,L0x7fffffffd4aa<s  8192@16,
( -8192)@16<=s L0x7fffffffd4ac,L0x7fffffffd4ac<s  8192@16,
( -8192)@16<=s L0x7fffffffd4ae,L0x7fffffffd4ae<s  8192@16,
( -8192)@16<=s L0x7fffffffd4b0,L0x7fffffffd4b0<s  8192@16,
( -8192)@16<=s L0x7fffffffd4b2,L0x7fffffffd4b2<s  8192@16,
( -8192)@16<=s L0x7fffffffd4b4,L0x7fffffffd4b4<s  8192@16,
( -8192)@16<=s L0x7fffffffd4b6,L0x7fffffffd4b6<s  8192@16,
( -8192)@16<=s L0x7fffffffd4b8,L0x7fffffffd4b8<s  8192@16,
( -8192)@16<=s L0x7fffffffd4ba,L0x7fffffffd4ba<s  8192@16,
( -8192)@16<=s L0x7fffffffd4bc,L0x7fffffffd4bc<s  8192@16,
( -8192)@16<=s L0x7fffffffd4be,L0x7fffffffd4be<s  8192@16,
( -8192)@16<=s L0x7fffffffd4c0,L0x7fffffffd4c0<s  8192@16,
( -8192)@16<=s L0x7fffffffd4c2,L0x7fffffffd4c2<s  8192@16,
( -8192)@16<=s L0x7fffffffd4c4,L0x7fffffffd4c4<s  8192@16,
( -8192)@16<=s L0x7fffffffd4c6,L0x7fffffffd4c6<s  8192@16,
( -8192)@16<=s L0x7fffffffd4c8,L0x7fffffffd4c8<s  8192@16,
( -8192)@16<=s L0x7fffffffd4ca,L0x7fffffffd4ca<s  8192@16,
( -8192)@16<=s L0x7fffffffd4cc,L0x7fffffffd4cc<s  8192@16,
( -8192)@16<=s L0x7fffffffd4ce,L0x7fffffffd4ce<s  8192@16,
( -8192)@16<=s L0x7fffffffd4d0,L0x7fffffffd4d0<s  8192@16,
( -8192)@16<=s L0x7fffffffd4d2,L0x7fffffffd4d2<s  8192@16,
( -8192)@16<=s L0x7fffffffd4d4,L0x7fffffffd4d4<s  8192@16,
( -8192)@16<=s L0x7fffffffd4d6,L0x7fffffffd4d6<s  8192@16,
( -8192)@16<=s L0x7fffffffd4d8,L0x7fffffffd4d8<s  8192@16,
( -6144)@16<=s L0x7fffffffd4da,L0x7fffffffd4da<s  6144@16,
( -6144)@16<=s L0x7fffffffd4dc,L0x7fffffffd4dc<s  6144@16,
( -6144)@16<=s L0x7fffffffd4de,L0x7fffffffd4de<s  6144@16
] prove with [ cuts [ 0 ] ];



(* vmovdqa 0x100(%rdi),%ymm4                       #! EA = L0x7fffffffd3e0; Value = 0x0000000100000000; PC = 0x555555557a3b *)
mov ymm4_0 L0x7fffffffd3e0;
mov ymm4_1 L0x7fffffffd3e2;
mov ymm4_2 L0x7fffffffd3e4;
mov ymm4_3 L0x7fffffffd3e6;
mov ymm4_4 L0x7fffffffd3e8;
mov ymm4_5 L0x7fffffffd3ea;
mov ymm4_6 L0x7fffffffd3ec;
mov ymm4_7 L0x7fffffffd3ee;
mov ymm4_8 L0x7fffffffd3f0;
mov ymm4_9 L0x7fffffffd3f2;
mov ymm4_a L0x7fffffffd3f4;
mov ymm4_b L0x7fffffffd3f6;
mov ymm4_c L0x7fffffffd3f8;
mov ymm4_d L0x7fffffffd3fa;
mov ymm4_e L0x7fffffffd3fc;
mov ymm4_f L0x7fffffffd3fe;
(* vmovdqa 0x120(%rdi),%ymm5                       #! EA = L0x7fffffffd400; Value = 0x0000000000000000; PC = 0x555555557a43 *)
mov ymm5_0 L0x7fffffffd400;
mov ymm5_1 L0x7fffffffd402;
mov ymm5_2 L0x7fffffffd404;
mov ymm5_3 L0x7fffffffd406;
mov ymm5_4 L0x7fffffffd408;
mov ymm5_5 L0x7fffffffd40a;
mov ymm5_6 L0x7fffffffd40c;
mov ymm5_7 L0x7fffffffd40e;
mov ymm5_8 L0x7fffffffd410;
mov ymm5_9 L0x7fffffffd412;
mov ymm5_a L0x7fffffffd414;
mov ymm5_b L0x7fffffffd416;
mov ymm5_c L0x7fffffffd418;
mov ymm5_d L0x7fffffffd41a;
mov ymm5_e L0x7fffffffd41c;
mov ymm5_f L0x7fffffffd41e;
(* vmovdqa 0x140(%rdi),%ymm6                       #! EA = L0x7fffffffd420; Value = 0x0000000000000000; PC = 0x555555557a4b *)
mov ymm6_0 L0x7fffffffd420;
mov ymm6_1 L0x7fffffffd422;
mov ymm6_2 L0x7fffffffd424;
mov ymm6_3 L0x7fffffffd426;
mov ymm6_4 L0x7fffffffd428;
mov ymm6_5 L0x7fffffffd42a;
mov ymm6_6 L0x7fffffffd42c;
mov ymm6_7 L0x7fffffffd42e;
mov ymm6_8 L0x7fffffffd430;
mov ymm6_9 L0x7fffffffd432;
mov ymm6_a L0x7fffffffd434;
mov ymm6_b L0x7fffffffd436;
mov ymm6_c L0x7fffffffd438;
mov ymm6_d L0x7fffffffd43a;
mov ymm6_e L0x7fffffffd43c;
mov ymm6_f L0x7fffffffd43e;
(* vmovdqa 0x160(%rdi),%ymm7                       #! EA = L0x7fffffffd440; Value = 0x0000000000000000; PC = 0x555555557a53 *)
mov ymm7_0 L0x7fffffffd440;
mov ymm7_1 L0x7fffffffd442;
mov ymm7_2 L0x7fffffffd444;
mov ymm7_3 L0x7fffffffd446;
mov ymm7_4 L0x7fffffffd448;
mov ymm7_5 L0x7fffffffd44a;
mov ymm7_6 L0x7fffffffd44c;
mov ymm7_7 L0x7fffffffd44e;
mov ymm7_8 L0x7fffffffd450;
mov ymm7_9 L0x7fffffffd452;
mov ymm7_a L0x7fffffffd454;
mov ymm7_b L0x7fffffffd456;
mov ymm7_c L0x7fffffffd458;
mov ymm7_d L0x7fffffffd45a;
mov ymm7_e L0x7fffffffd45c;
mov ymm7_f L0x7fffffffd45e;
(* vmovdqa 0x180(%rdi),%ymm8                       #! EA = L0x7fffffffd460; Value = 0x0000000000000000; PC = 0x555555557a5b *)
mov ymm8_0 L0x7fffffffd460;
mov ymm8_1 L0x7fffffffd462;
mov ymm8_2 L0x7fffffffd464;
mov ymm8_3 L0x7fffffffd466;
mov ymm8_4 L0x7fffffffd468;
mov ymm8_5 L0x7fffffffd46a;
mov ymm8_6 L0x7fffffffd46c;
mov ymm8_7 L0x7fffffffd46e;
mov ymm8_8 L0x7fffffffd470;
mov ymm8_9 L0x7fffffffd472;
mov ymm8_a L0x7fffffffd474;
mov ymm8_b L0x7fffffffd476;
mov ymm8_c L0x7fffffffd478;
mov ymm8_d L0x7fffffffd47a;
mov ymm8_e L0x7fffffffd47c;
mov ymm8_f L0x7fffffffd47e;
(* vmovdqa 0x1a0(%rdi),%ymm9                       #! EA = L0x7fffffffd480; Value = 0x0000000000000000; PC = 0x555555557a63 *)
mov ymm9_0 L0x7fffffffd480;
mov ymm9_1 L0x7fffffffd482;
mov ymm9_2 L0x7fffffffd484;
mov ymm9_3 L0x7fffffffd486;
mov ymm9_4 L0x7fffffffd488;
mov ymm9_5 L0x7fffffffd48a;
mov ymm9_6 L0x7fffffffd48c;
mov ymm9_7 L0x7fffffffd48e;
mov ymm9_8 L0x7fffffffd490;
mov ymm9_9 L0x7fffffffd492;
mov ymm9_a L0x7fffffffd494;
mov ymm9_b L0x7fffffffd496;
mov ymm9_c L0x7fffffffd498;
mov ymm9_d L0x7fffffffd49a;
mov ymm9_e L0x7fffffffd49c;
mov ymm9_f L0x7fffffffd49e;
(* vmovdqa 0x1c0(%rdi),%ymm10                      #! EA = L0x7fffffffd4a0; Value = 0x0000000000000000; PC = 0x555555557a6b *)
mov ymm10_0 L0x7fffffffd4a0;
mov ymm10_1 L0x7fffffffd4a2;
mov ymm10_2 L0x7fffffffd4a4;
mov ymm10_3 L0x7fffffffd4a6;
mov ymm10_4 L0x7fffffffd4a8;
mov ymm10_5 L0x7fffffffd4aa;
mov ymm10_6 L0x7fffffffd4ac;
mov ymm10_7 L0x7fffffffd4ae;
mov ymm10_8 L0x7fffffffd4b0;
mov ymm10_9 L0x7fffffffd4b2;
mov ymm10_a L0x7fffffffd4b4;
mov ymm10_b L0x7fffffffd4b6;
mov ymm10_c L0x7fffffffd4b8;
mov ymm10_d L0x7fffffffd4ba;
mov ymm10_e L0x7fffffffd4bc;
mov ymm10_f L0x7fffffffd4be;
(* vmovdqa 0x1e0(%rdi),%ymm11                      #! EA = L0x7fffffffd4c0; Value = 0x0000000000000000; PC = 0x555555557a73 *)
mov ymm11_0 L0x7fffffffd4c0;
mov ymm11_1 L0x7fffffffd4c2;
mov ymm11_2 L0x7fffffffd4c4;
mov ymm11_3 L0x7fffffffd4c6;
mov ymm11_4 L0x7fffffffd4c8;
mov ymm11_5 L0x7fffffffd4ca;
mov ymm11_6 L0x7fffffffd4cc;
mov ymm11_7 L0x7fffffffd4ce;
mov ymm11_8 L0x7fffffffd4d0;
mov ymm11_9 L0x7fffffffd4d2;
mov ymm11_a L0x7fffffffd4d4;
mov ymm11_b L0x7fffffffd4d6;
mov ymm11_c L0x7fffffffd4d8;
mov ymm11_d L0x7fffffffd4da;
mov ymm11_e L0x7fffffffd4dc;
mov ymm11_f L0x7fffffffd4de;
(* vpbroadcastw 0x102(%rdx),%ymm1                  #! EA = L0x555555561222; Value = 0x276d0198f85c6adf; PC = 0x555555557a7b *)
mov ymm1_0 L0x555555561222;
mov ymm1_1 L0x555555561222;
mov ymm1_2 L0x555555561222;
mov ymm1_3 L0x555555561222;
mov ymm1_4 L0x555555561222;
mov ymm1_5 L0x555555561222;
mov ymm1_6 L0x555555561222;
mov ymm1_7 L0x555555561222;
mov ymm1_8 L0x555555561222;
mov ymm1_9 L0x555555561222;
mov ymm1_a L0x555555561222;
mov ymm1_b L0x555555561222;
mov ymm1_c L0x555555561222;
mov ymm1_d L0x555555561222;
mov ymm1_e L0x555555561222;
mov ymm1_f L0x555555561222;
(* vpbroadcastw 0x302(%rdx),%ymm2                  #! EA = L0x555555561422; Value = 0x096df198105c00df; PC = 0x555555557a84 *)
mov ymm2_0 L0x555555561422;
mov ymm2_1 L0x555555561422;
mov ymm2_2 L0x555555561422;
mov ymm2_3 L0x555555561422;
mov ymm2_4 L0x555555561422;
mov ymm2_5 L0x555555561422;
mov ymm2_6 L0x555555561422;
mov ymm2_7 L0x555555561422;
mov ymm2_8 L0x555555561422;
mov ymm2_9 L0x555555561422;
mov ymm2_a L0x555555561422;
mov ymm2_b L0x555555561422;
mov ymm2_c L0x555555561422;
mov ymm2_d L0x555555561422;
mov ymm2_e L0x555555561422;
mov ymm2_f L0x555555561422;
(* vpmullw %ymm1,%ymm8,%ymm3                       #! PC = 0x555555557a8d *)
smull mulHymm8_0 mulL_0 ymm1_0 ymm8_0;
smull mulHymm8_1 mulL_1 ymm1_1 ymm8_1;
smull mulHymm8_2 mulL_2 ymm1_2 ymm8_2;
smull mulHymm8_3 mulL_3 ymm1_3 ymm8_3;
smull mulHymm8_4 mulL_4 ymm1_4 ymm8_4;
smull mulHymm8_5 mulL_5 ymm1_5 ymm8_5;
smull mulHymm8_6 mulL_6 ymm1_6 ymm8_6;
smull mulHymm8_7 mulL_7 ymm1_7 ymm8_7;
smull mulHymm8_8 mulL_8 ymm1_8 ymm8_8;
smull mulHymm8_9 mulL_9 ymm1_9 ymm8_9;
smull mulHymm8_a mulL_a ymm1_a ymm8_a;
smull mulHymm8_b mulL_b ymm1_b ymm8_b;
smull mulHymm8_c mulL_c ymm1_c ymm8_c;
smull mulHymm8_d mulL_d ymm1_d ymm8_d;
smull mulHymm8_e mulL_e ymm1_e ymm8_e;
smull mulHymm8_f mulL_f ymm1_f ymm8_f;
cast ymm3_0@sint16 mulL_0;
cast ymm3_1@sint16 mulL_1;
cast ymm3_2@sint16 mulL_2;
cast ymm3_3@sint16 mulL_3;
cast ymm3_4@sint16 mulL_4;
cast ymm3_5@sint16 mulL_5;
cast ymm3_6@sint16 mulL_6;
cast ymm3_7@sint16 mulL_7;
cast ymm3_8@sint16 mulL_8;
cast ymm3_9@sint16 mulL_9;
cast ymm3_a@sint16 mulL_a;
cast ymm3_b@sint16 mulL_b;
cast ymm3_c@sint16 mulL_c;
cast ymm3_d@sint16 mulL_d;
cast ymm3_e@sint16 mulL_e;
cast ymm3_f@sint16 mulL_f;
(* vpmulhw %ymm2,%ymm8,%ymm8                       #! PC = 0x555555557a91 *)
smull mulH_0 mulLymm8_0 ymm8_0 ymm2_0;
smull mulH_1 mulLymm8_1 ymm8_1 ymm2_1;
smull mulH_2 mulLymm8_2 ymm8_2 ymm2_2;
smull mulH_3 mulLymm8_3 ymm8_3 ymm2_3;
smull mulH_4 mulLymm8_4 ymm8_4 ymm2_4;
smull mulH_5 mulLymm8_5 ymm8_5 ymm2_5;
smull mulH_6 mulLymm8_6 ymm8_6 ymm2_6;
smull mulH_7 mulLymm8_7 ymm8_7 ymm2_7;
smull mulH_8 mulLymm8_8 ymm8_8 ymm2_8;
smull mulH_9 mulLymm8_9 ymm8_9 ymm2_9;
smull mulH_a mulLymm8_a ymm8_a ymm2_a;
smull mulH_b mulLymm8_b ymm8_b ymm2_b;
smull mulH_c mulLymm8_c ymm8_c ymm2_c;
smull mulH_d mulLymm8_d ymm8_d ymm2_d;
smull mulH_e mulLymm8_e ymm8_e ymm2_e;
smull mulH_f mulLymm8_f ymm8_f ymm2_f;
mov ymm8_0 mulH_0;
mov ymm8_1 mulH_1;
mov ymm8_2 mulH_2;
mov ymm8_3 mulH_3;
mov ymm8_4 mulH_4;
mov ymm8_5 mulH_5;
mov ymm8_6 mulH_6;
mov ymm8_7 mulH_7;
mov ymm8_8 mulH_8;
mov ymm8_9 mulH_9;
mov ymm8_a mulH_a;
mov ymm8_b mulH_b;
mov ymm8_c mulH_c;
mov ymm8_d mulH_d;
mov ymm8_e mulH_e;
mov ymm8_f mulH_f;
(* vpmulhw %ymm0,%ymm3,%ymm3                       #! PC = 0x555555557a95 *)
smull mulH_0 red_0 ymm3_0 ymm0_0;
assert true && red_0 = mulLymm8_0;
assume red_0 = mulLymm8_0 && true;
smull mulH_1 red_1 ymm3_1 ymm0_1;
assert true && red_1 = mulLymm8_1;
assume red_1 = mulLymm8_1 && true;
smull mulH_2 red_2 ymm3_2 ymm0_2;
assert true && red_2 = mulLymm8_2;
assume red_2 = mulLymm8_2 && true;
smull mulH_3 red_3 ymm3_3 ymm0_3;
assert true && red_3 = mulLymm8_3;
assume red_3 = mulLymm8_3 && true;
smull mulH_4 red_4 ymm3_4 ymm0_4;
assert true && red_4 = mulLymm8_4;
assume red_4 = mulLymm8_4 && true;
smull mulH_5 red_5 ymm3_5 ymm0_5;
assert true && red_5 = mulLymm8_5;
assume red_5 = mulLymm8_5 && true;
smull mulH_6 red_6 ymm3_6 ymm0_6;
assert true && red_6 = mulLymm8_6;
assume red_6 = mulLymm8_6 && true;
smull mulH_7 red_7 ymm3_7 ymm0_7;
assert true && red_7 = mulLymm8_7;
assume red_7 = mulLymm8_7 && true;
smull mulH_8 red_8 ymm3_8 ymm0_8;
assert true && red_8 = mulLymm8_8;
assume red_8 = mulLymm8_8 && true;
smull mulH_9 red_9 ymm3_9 ymm0_9;
assert true && red_9 = mulLymm8_9;
assume red_9 = mulLymm8_9 && true;
smull mulH_a red_a ymm3_a ymm0_a;
assert true && red_a = mulLymm8_a;
assume red_a = mulLymm8_a && true;
smull mulH_b red_b ymm3_b ymm0_b;
assert true && red_b = mulLymm8_b;
assume red_b = mulLymm8_b && true;
smull mulH_c red_c ymm3_c ymm0_c;
assert true && red_c = mulLymm8_c;
assume red_c = mulLymm8_c && true;
smull mulH_d red_d ymm3_d ymm0_d;
assert true && red_d = mulLymm8_d;
assume red_d = mulLymm8_d && true;
smull mulH_e red_e ymm3_e ymm0_e;
assert true && red_e = mulLymm8_e;
assume red_e = mulLymm8_e && true;
smull mulH_f red_f ymm3_f ymm0_f;
assert true && red_f = mulLymm8_f;
assume red_f = mulLymm8_f && true;
mov ymm3_0 mulH_0;
mov ymm3_1 mulH_1;
mov ymm3_2 mulH_2;
mov ymm3_3 mulH_3;
mov ymm3_4 mulH_4;
mov ymm3_5 mulH_5;
mov ymm3_6 mulH_6;
mov ymm3_7 mulH_7;
mov ymm3_8 mulH_8;
mov ymm3_9 mulH_9;
mov ymm3_a mulH_a;
mov ymm3_b mulH_b;
mov ymm3_c mulH_c;
mov ymm3_d mulH_d;
mov ymm3_e mulH_e;
mov ymm3_f mulH_f;
(* vpsubw %ymm3,%ymm8,%ymm8                        #! PC = 0x555555557a99 *)
sub ymm8_0 ymm8_0 ymm3_0;
sub ymm8_1 ymm8_1 ymm3_1;
sub ymm8_2 ymm8_2 ymm3_2;
sub ymm8_3 ymm8_3 ymm3_3;
sub ymm8_4 ymm8_4 ymm3_4;
sub ymm8_5 ymm8_5 ymm3_5;
sub ymm8_6 ymm8_6 ymm3_6;
sub ymm8_7 ymm8_7 ymm3_7;
sub ymm8_8 ymm8_8 ymm3_8;
sub ymm8_9 ymm8_9 ymm3_9;
sub ymm8_a ymm8_a ymm3_a;
sub ymm8_b ymm8_b ymm3_b;
sub ymm8_c ymm8_c ymm3_c;
sub ymm8_d ymm8_d ymm3_d;
sub ymm8_e ymm8_e ymm3_e;
sub ymm8_f ymm8_f ymm3_f;
(* vpmullw %ymm1,%ymm9,%ymm3                       #! PC = 0x555555557a9d *)
smull mulHymm9_0 mulL_0 ymm1_0 ymm9_0;
smull mulHymm9_1 mulL_1 ymm1_1 ymm9_1;
smull mulHymm9_2 mulL_2 ymm1_2 ymm9_2;
smull mulHymm9_3 mulL_3 ymm1_3 ymm9_3;
smull mulHymm9_4 mulL_4 ymm1_4 ymm9_4;
smull mulHymm9_5 mulL_5 ymm1_5 ymm9_5;
smull mulHymm9_6 mulL_6 ymm1_6 ymm9_6;
smull mulHymm9_7 mulL_7 ymm1_7 ymm9_7;
smull mulHymm9_8 mulL_8 ymm1_8 ymm9_8;
smull mulHymm9_9 mulL_9 ymm1_9 ymm9_9;
smull mulHymm9_a mulL_a ymm1_a ymm9_a;
smull mulHymm9_b mulL_b ymm1_b ymm9_b;
smull mulHymm9_c mulL_c ymm1_c ymm9_c;
smull mulHymm9_d mulL_d ymm1_d ymm9_d;
smull mulHymm9_e mulL_e ymm1_e ymm9_e;
smull mulHymm9_f mulL_f ymm1_f ymm9_f;
cast ymm3_0@sint16 mulL_0;
cast ymm3_1@sint16 mulL_1;
cast ymm3_2@sint16 mulL_2;
cast ymm3_3@sint16 mulL_3;
cast ymm3_4@sint16 mulL_4;
cast ymm3_5@sint16 mulL_5;
cast ymm3_6@sint16 mulL_6;
cast ymm3_7@sint16 mulL_7;
cast ymm3_8@sint16 mulL_8;
cast ymm3_9@sint16 mulL_9;
cast ymm3_a@sint16 mulL_a;
cast ymm3_b@sint16 mulL_b;
cast ymm3_c@sint16 mulL_c;
cast ymm3_d@sint16 mulL_d;
cast ymm3_e@sint16 mulL_e;
cast ymm3_f@sint16 mulL_f;
(* vpmulhw %ymm2,%ymm9,%ymm9                       #! PC = 0x555555557aa1 *)
smull mulH_0 mulLymm9_0 ymm9_0 ymm2_0;
smull mulH_1 mulLymm9_1 ymm9_1 ymm2_1;
smull mulH_2 mulLymm9_2 ymm9_2 ymm2_2;
smull mulH_3 mulLymm9_3 ymm9_3 ymm2_3;
smull mulH_4 mulLymm9_4 ymm9_4 ymm2_4;
smull mulH_5 mulLymm9_5 ymm9_5 ymm2_5;
smull mulH_6 mulLymm9_6 ymm9_6 ymm2_6;
smull mulH_7 mulLymm9_7 ymm9_7 ymm2_7;
smull mulH_8 mulLymm9_8 ymm9_8 ymm2_8;
smull mulH_9 mulLymm9_9 ymm9_9 ymm2_9;
smull mulH_a mulLymm9_a ymm9_a ymm2_a;
smull mulH_b mulLymm9_b ymm9_b ymm2_b;
smull mulH_c mulLymm9_c ymm9_c ymm2_c;
smull mulH_d mulLymm9_d ymm9_d ymm2_d;
smull mulH_e mulLymm9_e ymm9_e ymm2_e;
smull mulH_f mulLymm9_f ymm9_f ymm2_f;
mov ymm9_0 mulH_0;
mov ymm9_1 mulH_1;
mov ymm9_2 mulH_2;
mov ymm9_3 mulH_3;
mov ymm9_4 mulH_4;
mov ymm9_5 mulH_5;
mov ymm9_6 mulH_6;
mov ymm9_7 mulH_7;
mov ymm9_8 mulH_8;
mov ymm9_9 mulH_9;
mov ymm9_a mulH_a;
mov ymm9_b mulH_b;
mov ymm9_c mulH_c;
mov ymm9_d mulH_d;
mov ymm9_e mulH_e;
mov ymm9_f mulH_f;
(* vpmulhw %ymm0,%ymm3,%ymm3                       #! PC = 0x555555557aa5 *)
smull mulH_0 red_0 ymm3_0 ymm0_0;
assert true && red_0 = mulLymm9_0;
assume red_0 = mulLymm9_0 && true;
smull mulH_1 red_1 ymm3_1 ymm0_1;
assert true && red_1 = mulLymm9_1;
assume red_1 = mulLymm9_1 && true;
smull mulH_2 red_2 ymm3_2 ymm0_2;
assert true && red_2 = mulLymm9_2;
assume red_2 = mulLymm9_2 && true;
smull mulH_3 red_3 ymm3_3 ymm0_3;
assert true && red_3 = mulLymm9_3;
assume red_3 = mulLymm9_3 && true;
smull mulH_4 red_4 ymm3_4 ymm0_4;
assert true && red_4 = mulLymm9_4;
assume red_4 = mulLymm9_4 && true;
smull mulH_5 red_5 ymm3_5 ymm0_5;
assert true && red_5 = mulLymm9_5;
assume red_5 = mulLymm9_5 && true;
smull mulH_6 red_6 ymm3_6 ymm0_6;
assert true && red_6 = mulLymm9_6;
assume red_6 = mulLymm9_6 && true;
smull mulH_7 red_7 ymm3_7 ymm0_7;
assert true && red_7 = mulLymm9_7;
assume red_7 = mulLymm9_7 && true;
smull mulH_8 red_8 ymm3_8 ymm0_8;
assert true && red_8 = mulLymm9_8;
assume red_8 = mulLymm9_8 && true;
smull mulH_9 red_9 ymm3_9 ymm0_9;
assert true && red_9 = mulLymm9_9;
assume red_9 = mulLymm9_9 && true;
smull mulH_a red_a ymm3_a ymm0_a;
assert true && red_a = mulLymm9_a;
assume red_a = mulLymm9_a && true;
smull mulH_b red_b ymm3_b ymm0_b;
assert true && red_b = mulLymm9_b;
assume red_b = mulLymm9_b && true;
smull mulH_c red_c ymm3_c ymm0_c;
assert true && red_c = mulLymm9_c;
assume red_c = mulLymm9_c && true;
smull mulH_d red_d ymm3_d ymm0_d;
assert true && red_d = mulLymm9_d;
assume red_d = mulLymm9_d && true;
smull mulH_e red_e ymm3_e ymm0_e;
assert true && red_e = mulLymm9_e;
assume red_e = mulLymm9_e && true;
smull mulH_f red_f ymm3_f ymm0_f;
assert true && red_f = mulLymm9_f;
assume red_f = mulLymm9_f && true;
mov ymm3_0 mulH_0;
mov ymm3_1 mulH_1;
mov ymm3_2 mulH_2;
mov ymm3_3 mulH_3;
mov ymm3_4 mulH_4;
mov ymm3_5 mulH_5;
mov ymm3_6 mulH_6;
mov ymm3_7 mulH_7;
mov ymm3_8 mulH_8;
mov ymm3_9 mulH_9;
mov ymm3_a mulH_a;
mov ymm3_b mulH_b;
mov ymm3_c mulH_c;
mov ymm3_d mulH_d;
mov ymm3_e mulH_e;
mov ymm3_f mulH_f;
(* vpsubw %ymm3,%ymm9,%ymm9                        #! PC = 0x555555557aa9 *)
sub ymm9_0 ymm9_0 ymm3_0;
sub ymm9_1 ymm9_1 ymm3_1;
sub ymm9_2 ymm9_2 ymm3_2;
sub ymm9_3 ymm9_3 ymm3_3;
sub ymm9_4 ymm9_4 ymm3_4;
sub ymm9_5 ymm9_5 ymm3_5;
sub ymm9_6 ymm9_6 ymm3_6;
sub ymm9_7 ymm9_7 ymm3_7;
sub ymm9_8 ymm9_8 ymm3_8;
sub ymm9_9 ymm9_9 ymm3_9;
sub ymm9_a ymm9_a ymm3_a;
sub ymm9_b ymm9_b ymm3_b;
sub ymm9_c ymm9_c ymm3_c;
sub ymm9_d ymm9_d ymm3_d;
sub ymm9_e ymm9_e ymm3_e;
sub ymm9_f ymm9_f ymm3_f;
(* vpmullw %ymm1,%ymm10,%ymm3                      #! PC = 0x555555557aad *)
smull mulHymm10_0 mulL_0 ymm1_0 ymm10_0;
smull mulHymm10_1 mulL_1 ymm1_1 ymm10_1;
smull mulHymm10_2 mulL_2 ymm1_2 ymm10_2;
smull mulHymm10_3 mulL_3 ymm1_3 ymm10_3;
smull mulHymm10_4 mulL_4 ymm1_4 ymm10_4;
smull mulHymm10_5 mulL_5 ymm1_5 ymm10_5;
smull mulHymm10_6 mulL_6 ymm1_6 ymm10_6;
smull mulHymm10_7 mulL_7 ymm1_7 ymm10_7;
smull mulHymm10_8 mulL_8 ymm1_8 ymm10_8;
smull mulHymm10_9 mulL_9 ymm1_9 ymm10_9;
smull mulHymm10_a mulL_a ymm1_a ymm10_a;
smull mulHymm10_b mulL_b ymm1_b ymm10_b;
smull mulHymm10_c mulL_c ymm1_c ymm10_c;
smull mulHymm10_d mulL_d ymm1_d ymm10_d;
smull mulHymm10_e mulL_e ymm1_e ymm10_e;
smull mulHymm10_f mulL_f ymm1_f ymm10_f;
cast ymm3_0@sint16 mulL_0;
cast ymm3_1@sint16 mulL_1;
cast ymm3_2@sint16 mulL_2;
cast ymm3_3@sint16 mulL_3;
cast ymm3_4@sint16 mulL_4;
cast ymm3_5@sint16 mulL_5;
cast ymm3_6@sint16 mulL_6;
cast ymm3_7@sint16 mulL_7;
cast ymm3_8@sint16 mulL_8;
cast ymm3_9@sint16 mulL_9;
cast ymm3_a@sint16 mulL_a;
cast ymm3_b@sint16 mulL_b;
cast ymm3_c@sint16 mulL_c;
cast ymm3_d@sint16 mulL_d;
cast ymm3_e@sint16 mulL_e;
cast ymm3_f@sint16 mulL_f;
(* vpmulhw %ymm2,%ymm10,%ymm10                     #! PC = 0x555555557ab1 *)
smull mulH_0 mulLymm10_0 ymm10_0 ymm2_0;
smull mulH_1 mulLymm10_1 ymm10_1 ymm2_1;
smull mulH_2 mulLymm10_2 ymm10_2 ymm2_2;
smull mulH_3 mulLymm10_3 ymm10_3 ymm2_3;
smull mulH_4 mulLymm10_4 ymm10_4 ymm2_4;
smull mulH_5 mulLymm10_5 ymm10_5 ymm2_5;
smull mulH_6 mulLymm10_6 ymm10_6 ymm2_6;
smull mulH_7 mulLymm10_7 ymm10_7 ymm2_7;
smull mulH_8 mulLymm10_8 ymm10_8 ymm2_8;
smull mulH_9 mulLymm10_9 ymm10_9 ymm2_9;
smull mulH_a mulLymm10_a ymm10_a ymm2_a;
smull mulH_b mulLymm10_b ymm10_b ymm2_b;
smull mulH_c mulLymm10_c ymm10_c ymm2_c;
smull mulH_d mulLymm10_d ymm10_d ymm2_d;
smull mulH_e mulLymm10_e ymm10_e ymm2_e;
smull mulH_f mulLymm10_f ymm10_f ymm2_f;
mov ymm10_0 mulH_0;
mov ymm10_1 mulH_1;
mov ymm10_2 mulH_2;
mov ymm10_3 mulH_3;
mov ymm10_4 mulH_4;
mov ymm10_5 mulH_5;
mov ymm10_6 mulH_6;
mov ymm10_7 mulH_7;
mov ymm10_8 mulH_8;
mov ymm10_9 mulH_9;
mov ymm10_a mulH_a;
mov ymm10_b mulH_b;
mov ymm10_c mulH_c;
mov ymm10_d mulH_d;
mov ymm10_e mulH_e;
mov ymm10_f mulH_f;
(* vpmulhw %ymm0,%ymm3,%ymm3                       #! PC = 0x555555557ab5 *)
smull mulH_0 red_0 ymm3_0 ymm0_0;
assert true && red_0 = mulLymm10_0;
assume red_0 = mulLymm10_0 && true;
smull mulH_1 red_1 ymm3_1 ymm0_1;
assert true && red_1 = mulLymm10_1;
assume red_1 = mulLymm10_1 && true;
smull mulH_2 red_2 ymm3_2 ymm0_2;
assert true && red_2 = mulLymm10_2;
assume red_2 = mulLymm10_2 && true;
smull mulH_3 red_3 ymm3_3 ymm0_3;
assert true && red_3 = mulLymm10_3;
assume red_3 = mulLymm10_3 && true;
smull mulH_4 red_4 ymm3_4 ymm0_4;
assert true && red_4 = mulLymm10_4;
assume red_4 = mulLymm10_4 && true;
smull mulH_5 red_5 ymm3_5 ymm0_5;
assert true && red_5 = mulLymm10_5;
assume red_5 = mulLymm10_5 && true;
smull mulH_6 red_6 ymm3_6 ymm0_6;
assert true && red_6 = mulLymm10_6;
assume red_6 = mulLymm10_6 && true;
smull mulH_7 red_7 ymm3_7 ymm0_7;
assert true && red_7 = mulLymm10_7;
assume red_7 = mulLymm10_7 && true;
smull mulH_8 red_8 ymm3_8 ymm0_8;
assert true && red_8 = mulLymm10_8;
assume red_8 = mulLymm10_8 && true;
smull mulH_9 red_9 ymm3_9 ymm0_9;
assert true && red_9 = mulLymm10_9;
assume red_9 = mulLymm10_9 && true;
smull mulH_a red_a ymm3_a ymm0_a;
assert true && red_a = mulLymm10_a;
assume red_a = mulLymm10_a && true;
smull mulH_b red_b ymm3_b ymm0_b;
assert true && red_b = mulLymm10_b;
assume red_b = mulLymm10_b && true;
smull mulH_c red_c ymm3_c ymm0_c;
assert true && red_c = mulLymm10_c;
assume red_c = mulLymm10_c && true;
smull mulH_d red_d ymm3_d ymm0_d;
assert true && red_d = mulLymm10_d;
assume red_d = mulLymm10_d && true;
smull mulH_e red_e ymm3_e ymm0_e;
assert true && red_e = mulLymm10_e;
assume red_e = mulLymm10_e && true;
smull mulH_f red_f ymm3_f ymm0_f;
assert true && red_f = mulLymm10_f;
assume red_f = mulLymm10_f && true;
mov ymm3_0 mulH_0;
mov ymm3_1 mulH_1;
mov ymm3_2 mulH_2;
mov ymm3_3 mulH_3;
mov ymm3_4 mulH_4;
mov ymm3_5 mulH_5;
mov ymm3_6 mulH_6;
mov ymm3_7 mulH_7;
mov ymm3_8 mulH_8;
mov ymm3_9 mulH_9;
mov ymm3_a mulH_a;
mov ymm3_b mulH_b;
mov ymm3_c mulH_c;
mov ymm3_d mulH_d;
mov ymm3_e mulH_e;
mov ymm3_f mulH_f;
(* vpsubw %ymm3,%ymm10,%ymm10                      #! PC = 0x555555557ab9 *)
sub ymm10_0 ymm10_0 ymm3_0;
sub ymm10_1 ymm10_1 ymm3_1;
sub ymm10_2 ymm10_2 ymm3_2;
sub ymm10_3 ymm10_3 ymm3_3;
sub ymm10_4 ymm10_4 ymm3_4;
sub ymm10_5 ymm10_5 ymm3_5;
sub ymm10_6 ymm10_6 ymm3_6;
sub ymm10_7 ymm10_7 ymm3_7;
sub ymm10_8 ymm10_8 ymm3_8;
sub ymm10_9 ymm10_9 ymm3_9;
sub ymm10_a ymm10_a ymm3_a;
sub ymm10_b ymm10_b ymm3_b;
sub ymm10_c ymm10_c ymm3_c;
sub ymm10_d ymm10_d ymm3_d;
sub ymm10_e ymm10_e ymm3_e;
sub ymm10_f ymm10_f ymm3_f;
(* vpmullw %ymm1,%ymm11,%ymm3                      #! PC = 0x555555557abd *)
smull mulHymm11_0 mulL_0 ymm1_0 ymm11_0;
smull mulHymm11_1 mulL_1 ymm1_1 ymm11_1;
smull mulHymm11_2 mulL_2 ymm1_2 ymm11_2;
smull mulHymm11_3 mulL_3 ymm1_3 ymm11_3;
smull mulHymm11_4 mulL_4 ymm1_4 ymm11_4;
smull mulHymm11_5 mulL_5 ymm1_5 ymm11_5;
smull mulHymm11_6 mulL_6 ymm1_6 ymm11_6;
smull mulHymm11_7 mulL_7 ymm1_7 ymm11_7;
smull mulHymm11_8 mulL_8 ymm1_8 ymm11_8;
smull mulHymm11_9 mulL_9 ymm1_9 ymm11_9;
smull mulHymm11_a mulL_a ymm1_a ymm11_a;
smull mulHymm11_b mulL_b ymm1_b ymm11_b;
smull mulHymm11_c mulL_c ymm1_c ymm11_c;
smull mulHymm11_d mulL_d ymm1_d ymm11_d;
smull mulHymm11_e mulL_e ymm1_e ymm11_e;
smull mulHymm11_f mulL_f ymm1_f ymm11_f;
cast ymm3_0@sint16 mulL_0;
cast ymm3_1@sint16 mulL_1;
cast ymm3_2@sint16 mulL_2;
cast ymm3_3@sint16 mulL_3;
cast ymm3_4@sint16 mulL_4;
cast ymm3_5@sint16 mulL_5;
cast ymm3_6@sint16 mulL_6;
cast ymm3_7@sint16 mulL_7;
cast ymm3_8@sint16 mulL_8;
cast ymm3_9@sint16 mulL_9;
cast ymm3_a@sint16 mulL_a;
cast ymm3_b@sint16 mulL_b;
cast ymm3_c@sint16 mulL_c;
cast ymm3_d@sint16 mulL_d;
cast ymm3_e@sint16 mulL_e;
cast ymm3_f@sint16 mulL_f;
(* vpmulhw %ymm2,%ymm11,%ymm11                     #! PC = 0x555555557ac1 *)
smull mulH_0 mulLymm11_0 ymm11_0 ymm2_0;
smull mulH_1 mulLymm11_1 ymm11_1 ymm2_1;
smull mulH_2 mulLymm11_2 ymm11_2 ymm2_2;
smull mulH_3 mulLymm11_3 ymm11_3 ymm2_3;
smull mulH_4 mulLymm11_4 ymm11_4 ymm2_4;
smull mulH_5 mulLymm11_5 ymm11_5 ymm2_5;
smull mulH_6 mulLymm11_6 ymm11_6 ymm2_6;
smull mulH_7 mulLymm11_7 ymm11_7 ymm2_7;
smull mulH_8 mulLymm11_8 ymm11_8 ymm2_8;
smull mulH_9 mulLymm11_9 ymm11_9 ymm2_9;
smull mulH_a mulLymm11_a ymm11_a ymm2_a;
smull mulH_b mulLymm11_b ymm11_b ymm2_b;
smull mulH_c mulLymm11_c ymm11_c ymm2_c;
smull mulH_d mulLymm11_d ymm11_d ymm2_d;
smull mulH_e mulLymm11_e ymm11_e ymm2_e;
smull mulH_f mulLymm11_f ymm11_f ymm2_f;
mov ymm11_0 mulH_0;
mov ymm11_1 mulH_1;
mov ymm11_2 mulH_2;
mov ymm11_3 mulH_3;
mov ymm11_4 mulH_4;
mov ymm11_5 mulH_5;
mov ymm11_6 mulH_6;
mov ymm11_7 mulH_7;
mov ymm11_8 mulH_8;
mov ymm11_9 mulH_9;
mov ymm11_a mulH_a;
mov ymm11_b mulH_b;
mov ymm11_c mulH_c;
mov ymm11_d mulH_d;
mov ymm11_e mulH_e;
mov ymm11_f mulH_f;
(* vpmulhw %ymm0,%ymm3,%ymm3                       #! PC = 0x555555557ac5 *)
smull mulH_0 red_0 ymm3_0 ymm0_0;
assert true && red_0 = mulLymm11_0;
assume red_0 = mulLymm11_0 && true;
smull mulH_1 red_1 ymm3_1 ymm0_1;
assert true && red_1 = mulLymm11_1;
assume red_1 = mulLymm11_1 && true;
smull mulH_2 red_2 ymm3_2 ymm0_2;
assert true && red_2 = mulLymm11_2;
assume red_2 = mulLymm11_2 && true;
smull mulH_3 red_3 ymm3_3 ymm0_3;
assert true && red_3 = mulLymm11_3;
assume red_3 = mulLymm11_3 && true;
smull mulH_4 red_4 ymm3_4 ymm0_4;
assert true && red_4 = mulLymm11_4;
assume red_4 = mulLymm11_4 && true;
smull mulH_5 red_5 ymm3_5 ymm0_5;
assert true && red_5 = mulLymm11_5;
assume red_5 = mulLymm11_5 && true;
smull mulH_6 red_6 ymm3_6 ymm0_6;
assert true && red_6 = mulLymm11_6;
assume red_6 = mulLymm11_6 && true;
smull mulH_7 red_7 ymm3_7 ymm0_7;
assert true && red_7 = mulLymm11_7;
assume red_7 = mulLymm11_7 && true;
smull mulH_8 red_8 ymm3_8 ymm0_8;
assert true && red_8 = mulLymm11_8;
assume red_8 = mulLymm11_8 && true;
smull mulH_9 red_9 ymm3_9 ymm0_9;
assert true && red_9 = mulLymm11_9;
assume red_9 = mulLymm11_9 && true;
smull mulH_a red_a ymm3_a ymm0_a;
assert true && red_a = mulLymm11_a;
assume red_a = mulLymm11_a && true;
smull mulH_b red_b ymm3_b ymm0_b;
assert true && red_b = mulLymm11_b;
assume red_b = mulLymm11_b && true;
smull mulH_c red_c ymm3_c ymm0_c;
assert true && red_c = mulLymm11_c;
assume red_c = mulLymm11_c && true;
smull mulH_d red_d ymm3_d ymm0_d;
assert true && red_d = mulLymm11_d;
assume red_d = mulLymm11_d && true;
smull mulH_e red_e ymm3_e ymm0_e;
assert true && red_e = mulLymm11_e;
assume red_e = mulLymm11_e && true;
smull mulH_f red_f ymm3_f ymm0_f;
assert true && red_f = mulLymm11_f;
assume red_f = mulLymm11_f && true;
mov ymm3_0 mulH_0;
mov ymm3_1 mulH_1;
mov ymm3_2 mulH_2;
mov ymm3_3 mulH_3;
mov ymm3_4 mulH_4;
mov ymm3_5 mulH_5;
mov ymm3_6 mulH_6;
mov ymm3_7 mulH_7;
mov ymm3_8 mulH_8;
mov ymm3_9 mulH_9;
mov ymm3_a mulH_a;
mov ymm3_b mulH_b;
mov ymm3_c mulH_c;
mov ymm3_d mulH_d;
mov ymm3_e mulH_e;
mov ymm3_f mulH_f;
(* vpsubw %ymm3,%ymm11,%ymm11                      #! PC = 0x555555557ac9 *)
sub ymm11_0 ymm11_0 ymm3_0;
sub ymm11_1 ymm11_1 ymm3_1;
sub ymm11_2 ymm11_2 ymm3_2;
sub ymm11_3 ymm11_3 ymm3_3;
sub ymm11_4 ymm11_4 ymm3_4;
sub ymm11_5 ymm11_5 ymm3_5;
sub ymm11_6 ymm11_6 ymm3_6;
sub ymm11_7 ymm11_7 ymm3_7;
sub ymm11_8 ymm11_8 ymm3_8;
sub ymm11_9 ymm11_9 ymm3_9;
sub ymm11_a ymm11_a ymm3_a;
sub ymm11_b ymm11_b ymm3_b;
sub ymm11_c ymm11_c ymm3_c;
sub ymm11_d ymm11_d ymm3_d;
sub ymm11_e ymm11_e ymm3_e;
sub ymm11_f ymm11_f ymm3_f;
(* vpaddw %ymm8,%ymm4,%ymm3                        #! PC = 0x555555557acd *)
add ymm3_0 ymm4_0 ymm8_0;
add ymm3_1 ymm4_1 ymm8_1;
add ymm3_2 ymm4_2 ymm8_2;
add ymm3_3 ymm4_3 ymm8_3;
add ymm3_4 ymm4_4 ymm8_4;
add ymm3_5 ymm4_5 ymm8_5;
add ymm3_6 ymm4_6 ymm8_6;
add ymm3_7 ymm4_7 ymm8_7;
add ymm3_8 ymm4_8 ymm8_8;
add ymm3_9 ymm4_9 ymm8_9;
add ymm3_a ymm4_a ymm8_a;
add ymm3_b ymm4_b ymm8_b;
add ymm3_c ymm4_c ymm8_c;
add ymm3_d ymm4_d ymm8_d;
add ymm3_e ymm4_e ymm8_e;
add ymm3_f ymm4_f ymm8_f;
(* vpsubw %ymm8,%ymm4,%ymm8                        #! PC = 0x555555557ad2 *)
sub ymm8_0 ymm4_0 ymm8_0;
sub ymm8_1 ymm4_1 ymm8_1;
sub ymm8_2 ymm4_2 ymm8_2;
sub ymm8_3 ymm4_3 ymm8_3;
sub ymm8_4 ymm4_4 ymm8_4;
sub ymm8_5 ymm4_5 ymm8_5;
sub ymm8_6 ymm4_6 ymm8_6;
sub ymm8_7 ymm4_7 ymm8_7;
sub ymm8_8 ymm4_8 ymm8_8;
sub ymm8_9 ymm4_9 ymm8_9;
sub ymm8_a ymm4_a ymm8_a;
sub ymm8_b ymm4_b ymm8_b;
sub ymm8_c ymm4_c ymm8_c;
sub ymm8_d ymm4_d ymm8_d;
sub ymm8_e ymm4_e ymm8_e;
sub ymm8_f ymm4_f ymm8_f;
(* vpaddw %ymm9,%ymm5,%ymm4                        #! PC = 0x555555557ad7 *)
add ymm4_0 ymm5_0 ymm9_0;
add ymm4_1 ymm5_1 ymm9_1;
add ymm4_2 ymm5_2 ymm9_2;
add ymm4_3 ymm5_3 ymm9_3;
add ymm4_4 ymm5_4 ymm9_4;
add ymm4_5 ymm5_5 ymm9_5;
add ymm4_6 ymm5_6 ymm9_6;
add ymm4_7 ymm5_7 ymm9_7;
add ymm4_8 ymm5_8 ymm9_8;
add ymm4_9 ymm5_9 ymm9_9;
add ymm4_a ymm5_a ymm9_a;
add ymm4_b ymm5_b ymm9_b;
add ymm4_c ymm5_c ymm9_c;
add ymm4_d ymm5_d ymm9_d;
add ymm4_e ymm5_e ymm9_e;
add ymm4_f ymm5_f ymm9_f;
(* vpsubw %ymm9,%ymm5,%ymm9                        #! PC = 0x555555557adc *)
sub ymm9_0 ymm5_0 ymm9_0;
sub ymm9_1 ymm5_1 ymm9_1;
sub ymm9_2 ymm5_2 ymm9_2;
sub ymm9_3 ymm5_3 ymm9_3;
sub ymm9_4 ymm5_4 ymm9_4;
sub ymm9_5 ymm5_5 ymm9_5;
sub ymm9_6 ymm5_6 ymm9_6;
sub ymm9_7 ymm5_7 ymm9_7;
sub ymm9_8 ymm5_8 ymm9_8;
sub ymm9_9 ymm5_9 ymm9_9;
sub ymm9_a ymm5_a ymm9_a;
sub ymm9_b ymm5_b ymm9_b;
sub ymm9_c ymm5_c ymm9_c;
sub ymm9_d ymm5_d ymm9_d;
sub ymm9_e ymm5_e ymm9_e;
sub ymm9_f ymm5_f ymm9_f;
(* vpaddw %ymm10,%ymm6,%ymm5                       #! PC = 0x555555557ae1 *)
add ymm5_0 ymm6_0 ymm10_0;
add ymm5_1 ymm6_1 ymm10_1;
add ymm5_2 ymm6_2 ymm10_2;
add ymm5_3 ymm6_3 ymm10_3;
add ymm5_4 ymm6_4 ymm10_4;
add ymm5_5 ymm6_5 ymm10_5;
add ymm5_6 ymm6_6 ymm10_6;
add ymm5_7 ymm6_7 ymm10_7;
add ymm5_8 ymm6_8 ymm10_8;
add ymm5_9 ymm6_9 ymm10_9;
add ymm5_a ymm6_a ymm10_a;
add ymm5_b ymm6_b ymm10_b;
add ymm5_c ymm6_c ymm10_c;
add ymm5_d ymm6_d ymm10_d;
add ymm5_e ymm6_e ymm10_e;
add ymm5_f ymm6_f ymm10_f;
(* vpsubw %ymm10,%ymm6,%ymm10                      #! PC = 0x555555557ae6 *)
sub ymm10_0 ymm6_0 ymm10_0;
sub ymm10_1 ymm6_1 ymm10_1;
sub ymm10_2 ymm6_2 ymm10_2;
sub ymm10_3 ymm6_3 ymm10_3;
sub ymm10_4 ymm6_4 ymm10_4;
sub ymm10_5 ymm6_5 ymm10_5;
sub ymm10_6 ymm6_6 ymm10_6;
sub ymm10_7 ymm6_7 ymm10_7;
sub ymm10_8 ymm6_8 ymm10_8;
sub ymm10_9 ymm6_9 ymm10_9;
sub ymm10_a ymm6_a ymm10_a;
sub ymm10_b ymm6_b ymm10_b;
sub ymm10_c ymm6_c ymm10_c;
sub ymm10_d ymm6_d ymm10_d;
sub ymm10_e ymm6_e ymm10_e;
sub ymm10_f ymm6_f ymm10_f;
(* vpaddw %ymm11,%ymm7,%ymm6                       #! PC = 0x555555557aeb *)
add ymm6_0 ymm7_0 ymm11_0;
add ymm6_1 ymm7_1 ymm11_1;
add ymm6_2 ymm7_2 ymm11_2;
add ymm6_3 ymm7_3 ymm11_3;
add ymm6_4 ymm7_4 ymm11_4;
add ymm6_5 ymm7_5 ymm11_5;
add ymm6_6 ymm7_6 ymm11_6;
add ymm6_7 ymm7_7 ymm11_7;
add ymm6_8 ymm7_8 ymm11_8;
add ymm6_9 ymm7_9 ymm11_9;
add ymm6_a ymm7_a ymm11_a;
add ymm6_b ymm7_b ymm11_b;
add ymm6_c ymm7_c ymm11_c;
add ymm6_d ymm7_d ymm11_d;
add ymm6_e ymm7_e ymm11_e;
add ymm6_f ymm7_f ymm11_f;
(* vpsubw %ymm11,%ymm7,%ymm11                      #! PC = 0x555555557af0 *)
sub ymm11_0 ymm7_0 ymm11_0;
sub ymm11_1 ymm7_1 ymm11_1;
sub ymm11_2 ymm7_2 ymm11_2;
sub ymm11_3 ymm7_3 ymm11_3;
sub ymm11_4 ymm7_4 ymm11_4;
sub ymm11_5 ymm7_5 ymm11_5;
sub ymm11_6 ymm7_6 ymm11_6;
sub ymm11_7 ymm7_7 ymm11_7;
sub ymm11_8 ymm7_8 ymm11_8;
sub ymm11_9 ymm7_9 ymm11_9;
sub ymm11_a ymm7_a ymm11_a;
sub ymm11_b ymm7_b ymm11_b;
sub ymm11_c ymm7_c ymm11_c;
sub ymm11_d ymm7_d ymm11_d;
sub ymm11_e ymm7_e ymm11_e;
sub ymm11_f ymm7_f ymm11_f;
(* vpbroadcastw 0x104(%rdx),%ymm1                  #! EA = L0x555555561224; Value = 0xad9a276d0198f85c; PC = 0x555555557af5 *)
mov ymm1_0 L0x555555561224;
mov ymm1_1 L0x555555561224;
mov ymm1_2 L0x555555561224;
mov ymm1_3 L0x555555561224;
mov ymm1_4 L0x555555561224;
mov ymm1_5 L0x555555561224;
mov ymm1_6 L0x555555561224;
mov ymm1_7 L0x555555561224;
mov ymm1_8 L0x555555561224;
mov ymm1_9 L0x555555561224;
mov ymm1_a L0x555555561224;
mov ymm1_b L0x555555561224;
mov ymm1_c L0x555555561224;
mov ymm1_d L0x555555561224;
mov ymm1_e L0x555555561224;
mov ymm1_f L0x555555561224;
(* vpbroadcastw 0x304(%rdx),%ymm2                  #! EA = L0x555555561424; Value = 0xf19a096df198105c; PC = 0x555555557afe *)
mov ymm2_0 L0x555555561424;
mov ymm2_1 L0x555555561424;
mov ymm2_2 L0x555555561424;
mov ymm2_3 L0x555555561424;
mov ymm2_4 L0x555555561424;
mov ymm2_5 L0x555555561424;
mov ymm2_6 L0x555555561424;
mov ymm2_7 L0x555555561424;
mov ymm2_8 L0x555555561424;
mov ymm2_9 L0x555555561424;
mov ymm2_a L0x555555561424;
mov ymm2_b L0x555555561424;
mov ymm2_c L0x555555561424;
mov ymm2_d L0x555555561424;
mov ymm2_e L0x555555561424;
mov ymm2_f L0x555555561424;
(* vpmullw %ymm1,%ymm5,%ymm7                       #! PC = 0x555555557b07 *)
smull mulHymm5_0 mulL_0 ymm1_0 ymm5_0;
smull mulHymm5_1 mulL_1 ymm1_1 ymm5_1;
smull mulHymm5_2 mulL_2 ymm1_2 ymm5_2;
smull mulHymm5_3 mulL_3 ymm1_3 ymm5_3;
smull mulHymm5_4 mulL_4 ymm1_4 ymm5_4;
smull mulHymm5_5 mulL_5 ymm1_5 ymm5_5;
smull mulHymm5_6 mulL_6 ymm1_6 ymm5_6;
smull mulHymm5_7 mulL_7 ymm1_7 ymm5_7;
smull mulHymm5_8 mulL_8 ymm1_8 ymm5_8;
smull mulHymm5_9 mulL_9 ymm1_9 ymm5_9;
smull mulHymm5_a mulL_a ymm1_a ymm5_a;
smull mulHymm5_b mulL_b ymm1_b ymm5_b;
smull mulHymm5_c mulL_c ymm1_c ymm5_c;
smull mulHymm5_d mulL_d ymm1_d ymm5_d;
smull mulHymm5_e mulL_e ymm1_e ymm5_e;
smull mulHymm5_f mulL_f ymm1_f ymm5_f;
cast ymm7_0@sint16 mulL_0;
cast ymm7_1@sint16 mulL_1;
cast ymm7_2@sint16 mulL_2;
cast ymm7_3@sint16 mulL_3;
cast ymm7_4@sint16 mulL_4;
cast ymm7_5@sint16 mulL_5;
cast ymm7_6@sint16 mulL_6;
cast ymm7_7@sint16 mulL_7;
cast ymm7_8@sint16 mulL_8;
cast ymm7_9@sint16 mulL_9;
cast ymm7_a@sint16 mulL_a;
cast ymm7_b@sint16 mulL_b;
cast ymm7_c@sint16 mulL_c;
cast ymm7_d@sint16 mulL_d;
cast ymm7_e@sint16 mulL_e;
cast ymm7_f@sint16 mulL_f;
(* vpmulhw %ymm2,%ymm5,%ymm5                       #! PC = 0x555555557b0b *)
smull mulH_0 mulLymm5_0 ymm5_0 ymm2_0;
smull mulH_1 mulLymm5_1 ymm5_1 ymm2_1;
smull mulH_2 mulLymm5_2 ymm5_2 ymm2_2;
smull mulH_3 mulLymm5_3 ymm5_3 ymm2_3;
smull mulH_4 mulLymm5_4 ymm5_4 ymm2_4;
smull mulH_5 mulLymm5_5 ymm5_5 ymm2_5;
smull mulH_6 mulLymm5_6 ymm5_6 ymm2_6;
smull mulH_7 mulLymm5_7 ymm5_7 ymm2_7;
smull mulH_8 mulLymm5_8 ymm5_8 ymm2_8;
smull mulH_9 mulLymm5_9 ymm5_9 ymm2_9;
smull mulH_a mulLymm5_a ymm5_a ymm2_a;
smull mulH_b mulLymm5_b ymm5_b ymm2_b;
smull mulH_c mulLymm5_c ymm5_c ymm2_c;
smull mulH_d mulLymm5_d ymm5_d ymm2_d;
smull mulH_e mulLymm5_e ymm5_e ymm2_e;
smull mulH_f mulLymm5_f ymm5_f ymm2_f;
mov ymm5_0 mulH_0;
mov ymm5_1 mulH_1;
mov ymm5_2 mulH_2;
mov ymm5_3 mulH_3;
mov ymm5_4 mulH_4;
mov ymm5_5 mulH_5;
mov ymm5_6 mulH_6;
mov ymm5_7 mulH_7;
mov ymm5_8 mulH_8;
mov ymm5_9 mulH_9;
mov ymm5_a mulH_a;
mov ymm5_b mulH_b;
mov ymm5_c mulH_c;
mov ymm5_d mulH_d;
mov ymm5_e mulH_e;
mov ymm5_f mulH_f;
(* vpmulhw %ymm0,%ymm7,%ymm7                       #! PC = 0x555555557b0f *)
smull mulH_0 red_0 ymm7_0 ymm0_0;
assert true && red_0 = mulLymm5_0;
assume red_0 = mulLymm5_0 && true;
smull mulH_1 red_1 ymm7_1 ymm0_1;
assert true && red_1 = mulLymm5_1;
assume red_1 = mulLymm5_1 && true;
smull mulH_2 red_2 ymm7_2 ymm0_2;
assert true && red_2 = mulLymm5_2;
assume red_2 = mulLymm5_2 && true;
smull mulH_3 red_3 ymm7_3 ymm0_3;
assert true && red_3 = mulLymm5_3;
assume red_3 = mulLymm5_3 && true;
smull mulH_4 red_4 ymm7_4 ymm0_4;
assert true && red_4 = mulLymm5_4;
assume red_4 = mulLymm5_4 && true;
smull mulH_5 red_5 ymm7_5 ymm0_5;
assert true && red_5 = mulLymm5_5;
assume red_5 = mulLymm5_5 && true;
smull mulH_6 red_6 ymm7_6 ymm0_6;
assert true && red_6 = mulLymm5_6;
assume red_6 = mulLymm5_6 && true;
smull mulH_7 red_7 ymm7_7 ymm0_7;
assert true && red_7 = mulLymm5_7;
assume red_7 = mulLymm5_7 && true;
smull mulH_8 red_8 ymm7_8 ymm0_8;
assert true && red_8 = mulLymm5_8;
assume red_8 = mulLymm5_8 && true;
smull mulH_9 red_9 ymm7_9 ymm0_9;
assert true && red_9 = mulLymm5_9;
assume red_9 = mulLymm5_9 && true;
smull mulH_a red_a ymm7_a ymm0_a;
assert true && red_a = mulLymm5_a;
assume red_a = mulLymm5_a && true;
smull mulH_b red_b ymm7_b ymm0_b;
assert true && red_b = mulLymm5_b;
assume red_b = mulLymm5_b && true;
smull mulH_c red_c ymm7_c ymm0_c;
assert true && red_c = mulLymm5_c;
assume red_c = mulLymm5_c && true;
smull mulH_d red_d ymm7_d ymm0_d;
assert true && red_d = mulLymm5_d;
assume red_d = mulLymm5_d && true;
smull mulH_e red_e ymm7_e ymm0_e;
assert true && red_e = mulLymm5_e;
assume red_e = mulLymm5_e && true;
smull mulH_f red_f ymm7_f ymm0_f;
assert true && red_f = mulLymm5_f;
assume red_f = mulLymm5_f && true;
mov ymm7_0 mulH_0;
mov ymm7_1 mulH_1;
mov ymm7_2 mulH_2;
mov ymm7_3 mulH_3;
mov ymm7_4 mulH_4;
mov ymm7_5 mulH_5;
mov ymm7_6 mulH_6;
mov ymm7_7 mulH_7;
mov ymm7_8 mulH_8;
mov ymm7_9 mulH_9;
mov ymm7_a mulH_a;
mov ymm7_b mulH_b;
mov ymm7_c mulH_c;
mov ymm7_d mulH_d;
mov ymm7_e mulH_e;
mov ymm7_f mulH_f;
(* vpsubw %ymm7,%ymm5,%ymm5                        #! PC = 0x555555557b13 *)
sub ymm5_0 ymm5_0 ymm7_0;
sub ymm5_1 ymm5_1 ymm7_1;
sub ymm5_2 ymm5_2 ymm7_2;
sub ymm5_3 ymm5_3 ymm7_3;
sub ymm5_4 ymm5_4 ymm7_4;
sub ymm5_5 ymm5_5 ymm7_5;
sub ymm5_6 ymm5_6 ymm7_6;
sub ymm5_7 ymm5_7 ymm7_7;
sub ymm5_8 ymm5_8 ymm7_8;
sub ymm5_9 ymm5_9 ymm7_9;
sub ymm5_a ymm5_a ymm7_a;
sub ymm5_b ymm5_b ymm7_b;
sub ymm5_c ymm5_c ymm7_c;
sub ymm5_d ymm5_d ymm7_d;
sub ymm5_e ymm5_e ymm7_e;
sub ymm5_f ymm5_f ymm7_f;
(* vpmullw %ymm1,%ymm6,%ymm7                       #! PC = 0x555555557b17 *)
smull mulHymm6_0 mulL_0 ymm1_0 ymm6_0;
smull mulHymm6_1 mulL_1 ymm1_1 ymm6_1;
smull mulHymm6_2 mulL_2 ymm1_2 ymm6_2;
smull mulHymm6_3 mulL_3 ymm1_3 ymm6_3;
smull mulHymm6_4 mulL_4 ymm1_4 ymm6_4;
smull mulHymm6_5 mulL_5 ymm1_5 ymm6_5;
smull mulHymm6_6 mulL_6 ymm1_6 ymm6_6;
smull mulHymm6_7 mulL_7 ymm1_7 ymm6_7;
smull mulHymm6_8 mulL_8 ymm1_8 ymm6_8;
smull mulHymm6_9 mulL_9 ymm1_9 ymm6_9;
smull mulHymm6_a mulL_a ymm1_a ymm6_a;
smull mulHymm6_b mulL_b ymm1_b ymm6_b;
smull mulHymm6_c mulL_c ymm1_c ymm6_c;
smull mulHymm6_d mulL_d ymm1_d ymm6_d;
smull mulHymm6_e mulL_e ymm1_e ymm6_e;
smull mulHymm6_f mulL_f ymm1_f ymm6_f;
cast ymm7_0@sint16 mulL_0;
cast ymm7_1@sint16 mulL_1;
cast ymm7_2@sint16 mulL_2;
cast ymm7_3@sint16 mulL_3;
cast ymm7_4@sint16 mulL_4;
cast ymm7_5@sint16 mulL_5;
cast ymm7_6@sint16 mulL_6;
cast ymm7_7@sint16 mulL_7;
cast ymm7_8@sint16 mulL_8;
cast ymm7_9@sint16 mulL_9;
cast ymm7_a@sint16 mulL_a;
cast ymm7_b@sint16 mulL_b;
cast ymm7_c@sint16 mulL_c;
cast ymm7_d@sint16 mulL_d;
cast ymm7_e@sint16 mulL_e;
cast ymm7_f@sint16 mulL_f;
(* vpmulhw %ymm2,%ymm6,%ymm6                       #! PC = 0x555555557b1b *)
smull mulH_0 mulLymm6_0 ymm6_0 ymm2_0;
smull mulH_1 mulLymm6_1 ymm6_1 ymm2_1;
smull mulH_2 mulLymm6_2 ymm6_2 ymm2_2;
smull mulH_3 mulLymm6_3 ymm6_3 ymm2_3;
smull mulH_4 mulLymm6_4 ymm6_4 ymm2_4;
smull mulH_5 mulLymm6_5 ymm6_5 ymm2_5;
smull mulH_6 mulLymm6_6 ymm6_6 ymm2_6;
smull mulH_7 mulLymm6_7 ymm6_7 ymm2_7;
smull mulH_8 mulLymm6_8 ymm6_8 ymm2_8;
smull mulH_9 mulLymm6_9 ymm6_9 ymm2_9;
smull mulH_a mulLymm6_a ymm6_a ymm2_a;
smull mulH_b mulLymm6_b ymm6_b ymm2_b;
smull mulH_c mulLymm6_c ymm6_c ymm2_c;
smull mulH_d mulLymm6_d ymm6_d ymm2_d;
smull mulH_e mulLymm6_e ymm6_e ymm2_e;
smull mulH_f mulLymm6_f ymm6_f ymm2_f;
mov ymm6_0 mulH_0;
mov ymm6_1 mulH_1;
mov ymm6_2 mulH_2;
mov ymm6_3 mulH_3;
mov ymm6_4 mulH_4;
mov ymm6_5 mulH_5;
mov ymm6_6 mulH_6;
mov ymm6_7 mulH_7;
mov ymm6_8 mulH_8;
mov ymm6_9 mulH_9;
mov ymm6_a mulH_a;
mov ymm6_b mulH_b;
mov ymm6_c mulH_c;
mov ymm6_d mulH_d;
mov ymm6_e mulH_e;
mov ymm6_f mulH_f;
(* vpmulhw %ymm0,%ymm7,%ymm7                       #! PC = 0x555555557b1f *)
smull mulH_0 red_0 ymm7_0 ymm0_0;
assert true && red_0 = mulLymm6_0;
assume red_0 = mulLymm6_0 && true;
smull mulH_1 red_1 ymm7_1 ymm0_1;
assert true && red_1 = mulLymm6_1;
assume red_1 = mulLymm6_1 && true;
smull mulH_2 red_2 ymm7_2 ymm0_2;
assert true && red_2 = mulLymm6_2;
assume red_2 = mulLymm6_2 && true;
smull mulH_3 red_3 ymm7_3 ymm0_3;
assert true && red_3 = mulLymm6_3;
assume red_3 = mulLymm6_3 && true;
smull mulH_4 red_4 ymm7_4 ymm0_4;
assert true && red_4 = mulLymm6_4;
assume red_4 = mulLymm6_4 && true;
smull mulH_5 red_5 ymm7_5 ymm0_5;
assert true && red_5 = mulLymm6_5;
assume red_5 = mulLymm6_5 && true;
smull mulH_6 red_6 ymm7_6 ymm0_6;
assert true && red_6 = mulLymm6_6;
assume red_6 = mulLymm6_6 && true;
smull mulH_7 red_7 ymm7_7 ymm0_7;
assert true && red_7 = mulLymm6_7;
assume red_7 = mulLymm6_7 && true;
smull mulH_8 red_8 ymm7_8 ymm0_8;
assert true && red_8 = mulLymm6_8;
assume red_8 = mulLymm6_8 && true;
smull mulH_9 red_9 ymm7_9 ymm0_9;
assert true && red_9 = mulLymm6_9;
assume red_9 = mulLymm6_9 && true;
smull mulH_a red_a ymm7_a ymm0_a;
assert true && red_a = mulLymm6_a;
assume red_a = mulLymm6_a && true;
smull mulH_b red_b ymm7_b ymm0_b;
assert true && red_b = mulLymm6_b;
assume red_b = mulLymm6_b && true;
smull mulH_c red_c ymm7_c ymm0_c;
assert true && red_c = mulLymm6_c;
assume red_c = mulLymm6_c && true;
smull mulH_d red_d ymm7_d ymm0_d;
assert true && red_d = mulLymm6_d;
assume red_d = mulLymm6_d && true;
smull mulH_e red_e ymm7_e ymm0_e;
assert true && red_e = mulLymm6_e;
assume red_e = mulLymm6_e && true;
smull mulH_f red_f ymm7_f ymm0_f;
assert true && red_f = mulLymm6_f;
assume red_f = mulLymm6_f && true;
mov ymm7_0 mulH_0;
mov ymm7_1 mulH_1;
mov ymm7_2 mulH_2;
mov ymm7_3 mulH_3;
mov ymm7_4 mulH_4;
mov ymm7_5 mulH_5;
mov ymm7_6 mulH_6;
mov ymm7_7 mulH_7;
mov ymm7_8 mulH_8;
mov ymm7_9 mulH_9;
mov ymm7_a mulH_a;
mov ymm7_b mulH_b;
mov ymm7_c mulH_c;
mov ymm7_d mulH_d;
mov ymm7_e mulH_e;
mov ymm7_f mulH_f;
(* vpsubw %ymm7,%ymm6,%ymm6                        #! PC = 0x555555557b23 *)
sub ymm6_0 ymm6_0 ymm7_0;
sub ymm6_1 ymm6_1 ymm7_1;
sub ymm6_2 ymm6_2 ymm7_2;
sub ymm6_3 ymm6_3 ymm7_3;
sub ymm6_4 ymm6_4 ymm7_4;
sub ymm6_5 ymm6_5 ymm7_5;
sub ymm6_6 ymm6_6 ymm7_6;
sub ymm6_7 ymm6_7 ymm7_7;
sub ymm6_8 ymm6_8 ymm7_8;
sub ymm6_9 ymm6_9 ymm7_9;
sub ymm6_a ymm6_a ymm7_a;
sub ymm6_b ymm6_b ymm7_b;
sub ymm6_c ymm6_c ymm7_c;
sub ymm6_d ymm6_d ymm7_d;
sub ymm6_e ymm6_e ymm7_e;
sub ymm6_f ymm6_f ymm7_f;
(* vpbroadcastw 0x106(%rdx),%ymm1                  #! EA = L0x555555561226; Value = 0x6f65ad9a276d0198; PC = 0x555555557b27 *)
mov ymm1_0 L0x555555561226;
mov ymm1_1 L0x555555561226;
mov ymm1_2 L0x555555561226;
mov ymm1_3 L0x555555561226;
mov ymm1_4 L0x555555561226;
mov ymm1_5 L0x555555561226;
mov ymm1_6 L0x555555561226;
mov ymm1_7 L0x555555561226;
mov ymm1_8 L0x555555561226;
mov ymm1_9 L0x555555561226;
mov ymm1_a L0x555555561226;
mov ymm1_b L0x555555561226;
mov ymm1_c L0x555555561226;
mov ymm1_d L0x555555561226;
mov ymm1_e L0x555555561226;
mov ymm1_f L0x555555561226;
(* vpbroadcastw 0x306(%rdx),%ymm2                  #! EA = L0x555555561426; Value = 0x0165f19a096df198; PC = 0x555555557b30 *)
mov ymm2_0 L0x555555561426;
mov ymm2_1 L0x555555561426;
mov ymm2_2 L0x555555561426;
mov ymm2_3 L0x555555561426;
mov ymm2_4 L0x555555561426;
mov ymm2_5 L0x555555561426;
mov ymm2_6 L0x555555561426;
mov ymm2_7 L0x555555561426;
mov ymm2_8 L0x555555561426;
mov ymm2_9 L0x555555561426;
mov ymm2_a L0x555555561426;
mov ymm2_b L0x555555561426;
mov ymm2_c L0x555555561426;
mov ymm2_d L0x555555561426;
mov ymm2_e L0x555555561426;
mov ymm2_f L0x555555561426;
(* vpmullw %ymm1,%ymm10,%ymm7                      #! PC = 0x555555557b39 *)
smull mulHymm10_0 mulL_0 ymm1_0 ymm10_0;
smull mulHymm10_1 mulL_1 ymm1_1 ymm10_1;
smull mulHymm10_2 mulL_2 ymm1_2 ymm10_2;
smull mulHymm10_3 mulL_3 ymm1_3 ymm10_3;
smull mulHymm10_4 mulL_4 ymm1_4 ymm10_4;
smull mulHymm10_5 mulL_5 ymm1_5 ymm10_5;
smull mulHymm10_6 mulL_6 ymm1_6 ymm10_6;
smull mulHymm10_7 mulL_7 ymm1_7 ymm10_7;
smull mulHymm10_8 mulL_8 ymm1_8 ymm10_8;
smull mulHymm10_9 mulL_9 ymm1_9 ymm10_9;
smull mulHymm10_a mulL_a ymm1_a ymm10_a;
smull mulHymm10_b mulL_b ymm1_b ymm10_b;
smull mulHymm10_c mulL_c ymm1_c ymm10_c;
smull mulHymm10_d mulL_d ymm1_d ymm10_d;
smull mulHymm10_e mulL_e ymm1_e ymm10_e;
smull mulHymm10_f mulL_f ymm1_f ymm10_f;
cast ymm7_0@sint16 mulL_0;
cast ymm7_1@sint16 mulL_1;
cast ymm7_2@sint16 mulL_2;
cast ymm7_3@sint16 mulL_3;
cast ymm7_4@sint16 mulL_4;
cast ymm7_5@sint16 mulL_5;
cast ymm7_6@sint16 mulL_6;
cast ymm7_7@sint16 mulL_7;
cast ymm7_8@sint16 mulL_8;
cast ymm7_9@sint16 mulL_9;
cast ymm7_a@sint16 mulL_a;
cast ymm7_b@sint16 mulL_b;
cast ymm7_c@sint16 mulL_c;
cast ymm7_d@sint16 mulL_d;
cast ymm7_e@sint16 mulL_e;
cast ymm7_f@sint16 mulL_f;
(* vpmulhw %ymm2,%ymm10,%ymm10                     #! PC = 0x555555557b3d *)
smull mulH_0 mulLymm10_0 ymm10_0 ymm2_0;
smull mulH_1 mulLymm10_1 ymm10_1 ymm2_1;
smull mulH_2 mulLymm10_2 ymm10_2 ymm2_2;
smull mulH_3 mulLymm10_3 ymm10_3 ymm2_3;
smull mulH_4 mulLymm10_4 ymm10_4 ymm2_4;
smull mulH_5 mulLymm10_5 ymm10_5 ymm2_5;
smull mulH_6 mulLymm10_6 ymm10_6 ymm2_6;
smull mulH_7 mulLymm10_7 ymm10_7 ymm2_7;
smull mulH_8 mulLymm10_8 ymm10_8 ymm2_8;
smull mulH_9 mulLymm10_9 ymm10_9 ymm2_9;
smull mulH_a mulLymm10_a ymm10_a ymm2_a;
smull mulH_b mulLymm10_b ymm10_b ymm2_b;
smull mulH_c mulLymm10_c ymm10_c ymm2_c;
smull mulH_d mulLymm10_d ymm10_d ymm2_d;
smull mulH_e mulLymm10_e ymm10_e ymm2_e;
smull mulH_f mulLymm10_f ymm10_f ymm2_f;
mov ymm10_0 mulH_0;
mov ymm10_1 mulH_1;
mov ymm10_2 mulH_2;
mov ymm10_3 mulH_3;
mov ymm10_4 mulH_4;
mov ymm10_5 mulH_5;
mov ymm10_6 mulH_6;
mov ymm10_7 mulH_7;
mov ymm10_8 mulH_8;
mov ymm10_9 mulH_9;
mov ymm10_a mulH_a;
mov ymm10_b mulH_b;
mov ymm10_c mulH_c;
mov ymm10_d mulH_d;
mov ymm10_e mulH_e;
mov ymm10_f mulH_f;
(* vpmulhw %ymm0,%ymm7,%ymm7                       #! PC = 0x555555557b41 *)
smull mulH_0 red_0 ymm7_0 ymm0_0;
assert true && red_0 = mulLymm10_0;
assume red_0 = mulLymm10_0 && true;
smull mulH_1 red_1 ymm7_1 ymm0_1;
assert true && red_1 = mulLymm10_1;
assume red_1 = mulLymm10_1 && true;
smull mulH_2 red_2 ymm7_2 ymm0_2;
assert true && red_2 = mulLymm10_2;
assume red_2 = mulLymm10_2 && true;
smull mulH_3 red_3 ymm7_3 ymm0_3;
assert true && red_3 = mulLymm10_3;
assume red_3 = mulLymm10_3 && true;
smull mulH_4 red_4 ymm7_4 ymm0_4;
assert true && red_4 = mulLymm10_4;
assume red_4 = mulLymm10_4 && true;
smull mulH_5 red_5 ymm7_5 ymm0_5;
assert true && red_5 = mulLymm10_5;
assume red_5 = mulLymm10_5 && true;
smull mulH_6 red_6 ymm7_6 ymm0_6;
assert true && red_6 = mulLymm10_6;
assume red_6 = mulLymm10_6 && true;
smull mulH_7 red_7 ymm7_7 ymm0_7;
assert true && red_7 = mulLymm10_7;
assume red_7 = mulLymm10_7 && true;
smull mulH_8 red_8 ymm7_8 ymm0_8;
assert true && red_8 = mulLymm10_8;
assume red_8 = mulLymm10_8 && true;
smull mulH_9 red_9 ymm7_9 ymm0_9;
assert true && red_9 = mulLymm10_9;
assume red_9 = mulLymm10_9 && true;
smull mulH_a red_a ymm7_a ymm0_a;
assert true && red_a = mulLymm10_a;
assume red_a = mulLymm10_a && true;
smull mulH_b red_b ymm7_b ymm0_b;
assert true && red_b = mulLymm10_b;
assume red_b = mulLymm10_b && true;
smull mulH_c red_c ymm7_c ymm0_c;
assert true && red_c = mulLymm10_c;
assume red_c = mulLymm10_c && true;
smull mulH_d red_d ymm7_d ymm0_d;
assert true && red_d = mulLymm10_d;
assume red_d = mulLymm10_d && true;
smull mulH_e red_e ymm7_e ymm0_e;
assert true && red_e = mulLymm10_e;
assume red_e = mulLymm10_e && true;
smull mulH_f red_f ymm7_f ymm0_f;
assert true && red_f = mulLymm10_f;
assume red_f = mulLymm10_f && true;
mov ymm7_0 mulH_0;
mov ymm7_1 mulH_1;
mov ymm7_2 mulH_2;
mov ymm7_3 mulH_3;
mov ymm7_4 mulH_4;
mov ymm7_5 mulH_5;
mov ymm7_6 mulH_6;
mov ymm7_7 mulH_7;
mov ymm7_8 mulH_8;
mov ymm7_9 mulH_9;
mov ymm7_a mulH_a;
mov ymm7_b mulH_b;
mov ymm7_c mulH_c;
mov ymm7_d mulH_d;
mov ymm7_e mulH_e;
mov ymm7_f mulH_f;
(* vpsubw %ymm7,%ymm10,%ymm10                      #! PC = 0x555555557b45 *)
sub ymm10_0 ymm10_0 ymm7_0;
sub ymm10_1 ymm10_1 ymm7_1;
sub ymm10_2 ymm10_2 ymm7_2;
sub ymm10_3 ymm10_3 ymm7_3;
sub ymm10_4 ymm10_4 ymm7_4;
sub ymm10_5 ymm10_5 ymm7_5;
sub ymm10_6 ymm10_6 ymm7_6;
sub ymm10_7 ymm10_7 ymm7_7;
sub ymm10_8 ymm10_8 ymm7_8;
sub ymm10_9 ymm10_9 ymm7_9;
sub ymm10_a ymm10_a ymm7_a;
sub ymm10_b ymm10_b ymm7_b;
sub ymm10_c ymm10_c ymm7_c;
sub ymm10_d ymm10_d ymm7_d;
sub ymm10_e ymm10_e ymm7_e;
sub ymm10_f ymm10_f ymm7_f;
(* vpmullw %ymm1,%ymm11,%ymm7                      #! PC = 0x555555557b49 *)
smull mulHymm11_0 mulL_0 ymm1_0 ymm11_0;
smull mulHymm11_1 mulL_1 ymm1_1 ymm11_1;
smull mulHymm11_2 mulL_2 ymm1_2 ymm11_2;
smull mulHymm11_3 mulL_3 ymm1_3 ymm11_3;
smull mulHymm11_4 mulL_4 ymm1_4 ymm11_4;
smull mulHymm11_5 mulL_5 ymm1_5 ymm11_5;
smull mulHymm11_6 mulL_6 ymm1_6 ymm11_6;
smull mulHymm11_7 mulL_7 ymm1_7 ymm11_7;
smull mulHymm11_8 mulL_8 ymm1_8 ymm11_8;
smull mulHymm11_9 mulL_9 ymm1_9 ymm11_9;
smull mulHymm11_a mulL_a ymm1_a ymm11_a;
smull mulHymm11_b mulL_b ymm1_b ymm11_b;
smull mulHymm11_c mulL_c ymm1_c ymm11_c;
smull mulHymm11_d mulL_d ymm1_d ymm11_d;
smull mulHymm11_e mulL_e ymm1_e ymm11_e;
smull mulHymm11_f mulL_f ymm1_f ymm11_f;
cast ymm7_0@sint16 mulL_0;
cast ymm7_1@sint16 mulL_1;
cast ymm7_2@sint16 mulL_2;
cast ymm7_3@sint16 mulL_3;
cast ymm7_4@sint16 mulL_4;
cast ymm7_5@sint16 mulL_5;
cast ymm7_6@sint16 mulL_6;
cast ymm7_7@sint16 mulL_7;
cast ymm7_8@sint16 mulL_8;
cast ymm7_9@sint16 mulL_9;
cast ymm7_a@sint16 mulL_a;
cast ymm7_b@sint16 mulL_b;
cast ymm7_c@sint16 mulL_c;
cast ymm7_d@sint16 mulL_d;
cast ymm7_e@sint16 mulL_e;
cast ymm7_f@sint16 mulL_f;
(* vpmulhw %ymm2,%ymm11,%ymm11                     #! PC = 0x555555557b4d *)
smull mulH_0 mulLymm11_0 ymm11_0 ymm2_0;
smull mulH_1 mulLymm11_1 ymm11_1 ymm2_1;
smull mulH_2 mulLymm11_2 ymm11_2 ymm2_2;
smull mulH_3 mulLymm11_3 ymm11_3 ymm2_3;
smull mulH_4 mulLymm11_4 ymm11_4 ymm2_4;
smull mulH_5 mulLymm11_5 ymm11_5 ymm2_5;
smull mulH_6 mulLymm11_6 ymm11_6 ymm2_6;
smull mulH_7 mulLymm11_7 ymm11_7 ymm2_7;
smull mulH_8 mulLymm11_8 ymm11_8 ymm2_8;
smull mulH_9 mulLymm11_9 ymm11_9 ymm2_9;
smull mulH_a mulLymm11_a ymm11_a ymm2_a;
smull mulH_b mulLymm11_b ymm11_b ymm2_b;
smull mulH_c mulLymm11_c ymm11_c ymm2_c;
smull mulH_d mulLymm11_d ymm11_d ymm2_d;
smull mulH_e mulLymm11_e ymm11_e ymm2_e;
smull mulH_f mulLymm11_f ymm11_f ymm2_f;
mov ymm11_0 mulH_0;
mov ymm11_1 mulH_1;
mov ymm11_2 mulH_2;
mov ymm11_3 mulH_3;
mov ymm11_4 mulH_4;
mov ymm11_5 mulH_5;
mov ymm11_6 mulH_6;
mov ymm11_7 mulH_7;
mov ymm11_8 mulH_8;
mov ymm11_9 mulH_9;
mov ymm11_a mulH_a;
mov ymm11_b mulH_b;
mov ymm11_c mulH_c;
mov ymm11_d mulH_d;
mov ymm11_e mulH_e;
mov ymm11_f mulH_f;
(* vpmulhw %ymm0,%ymm7,%ymm7                       #! PC = 0x555555557b51 *)
smull mulH_0 red_0 ymm7_0 ymm0_0;
assert true && red_0 = mulLymm11_0;
assume red_0 = mulLymm11_0 && true;
smull mulH_1 red_1 ymm7_1 ymm0_1;
assert true && red_1 = mulLymm11_1;
assume red_1 = mulLymm11_1 && true;
smull mulH_2 red_2 ymm7_2 ymm0_2;
assert true && red_2 = mulLymm11_2;
assume red_2 = mulLymm11_2 && true;
smull mulH_3 red_3 ymm7_3 ymm0_3;
assert true && red_3 = mulLymm11_3;
assume red_3 = mulLymm11_3 && true;
smull mulH_4 red_4 ymm7_4 ymm0_4;
assert true && red_4 = mulLymm11_4;
assume red_4 = mulLymm11_4 && true;
smull mulH_5 red_5 ymm7_5 ymm0_5;
assert true && red_5 = mulLymm11_5;
assume red_5 = mulLymm11_5 && true;
smull mulH_6 red_6 ymm7_6 ymm0_6;
assert true && red_6 = mulLymm11_6;
assume red_6 = mulLymm11_6 && true;
smull mulH_7 red_7 ymm7_7 ymm0_7;
assert true && red_7 = mulLymm11_7;
assume red_7 = mulLymm11_7 && true;
smull mulH_8 red_8 ymm7_8 ymm0_8;
assert true && red_8 = mulLymm11_8;
assume red_8 = mulLymm11_8 && true;
smull mulH_9 red_9 ymm7_9 ymm0_9;
assert true && red_9 = mulLymm11_9;
assume red_9 = mulLymm11_9 && true;
smull mulH_a red_a ymm7_a ymm0_a;
assert true && red_a = mulLymm11_a;
assume red_a = mulLymm11_a && true;
smull mulH_b red_b ymm7_b ymm0_b;
assert true && red_b = mulLymm11_b;
assume red_b = mulLymm11_b && true;
smull mulH_c red_c ymm7_c ymm0_c;
assert true && red_c = mulLymm11_c;
assume red_c = mulLymm11_c && true;
smull mulH_d red_d ymm7_d ymm0_d;
assert true && red_d = mulLymm11_d;
assume red_d = mulLymm11_d && true;
smull mulH_e red_e ymm7_e ymm0_e;
assert true && red_e = mulLymm11_e;
assume red_e = mulLymm11_e && true;
smull mulH_f red_f ymm7_f ymm0_f;
assert true && red_f = mulLymm11_f;
assume red_f = mulLymm11_f && true;
mov ymm7_0 mulH_0;
mov ymm7_1 mulH_1;
mov ymm7_2 mulH_2;
mov ymm7_3 mulH_3;
mov ymm7_4 mulH_4;
mov ymm7_5 mulH_5;
mov ymm7_6 mulH_6;
mov ymm7_7 mulH_7;
mov ymm7_8 mulH_8;
mov ymm7_9 mulH_9;
mov ymm7_a mulH_a;
mov ymm7_b mulH_b;
mov ymm7_c mulH_c;
mov ymm7_d mulH_d;
mov ymm7_e mulH_e;
mov ymm7_f mulH_f;
(* vpsubw %ymm7,%ymm11,%ymm11                      #! PC = 0x555555557b55 *)
sub ymm11_0 ymm11_0 ymm7_0;
sub ymm11_1 ymm11_1 ymm7_1;
sub ymm11_2 ymm11_2 ymm7_2;
sub ymm11_3 ymm11_3 ymm7_3;
sub ymm11_4 ymm11_4 ymm7_4;
sub ymm11_5 ymm11_5 ymm7_5;
sub ymm11_6 ymm11_6 ymm7_6;
sub ymm11_7 ymm11_7 ymm7_7;
sub ymm11_8 ymm11_8 ymm7_8;
sub ymm11_9 ymm11_9 ymm7_9;
sub ymm11_a ymm11_a ymm7_a;
sub ymm11_b ymm11_b ymm7_b;
sub ymm11_c ymm11_c ymm7_c;
sub ymm11_d ymm11_d ymm7_d;
sub ymm11_e ymm11_e ymm7_e;
sub ymm11_f ymm11_f ymm7_f;
(* vpaddw %ymm5,%ymm3,%ymm7                        #! PC = 0x555555557b59 *)
add ymm7_0 ymm3_0 ymm5_0;
add ymm7_1 ymm3_1 ymm5_1;
add ymm7_2 ymm3_2 ymm5_2;
add ymm7_3 ymm3_3 ymm5_3;
add ymm7_4 ymm3_4 ymm5_4;
add ymm7_5 ymm3_5 ymm5_5;
add ymm7_6 ymm3_6 ymm5_6;
add ymm7_7 ymm3_7 ymm5_7;
add ymm7_8 ymm3_8 ymm5_8;
add ymm7_9 ymm3_9 ymm5_9;
add ymm7_a ymm3_a ymm5_a;
add ymm7_b ymm3_b ymm5_b;
add ymm7_c ymm3_c ymm5_c;
add ymm7_d ymm3_d ymm5_d;
add ymm7_e ymm3_e ymm5_e;
add ymm7_f ymm3_f ymm5_f;
(* vpsubw %ymm5,%ymm3,%ymm5                        #! PC = 0x555555557b5d *)
sub ymm5_0 ymm3_0 ymm5_0;
sub ymm5_1 ymm3_1 ymm5_1;
sub ymm5_2 ymm3_2 ymm5_2;
sub ymm5_3 ymm3_3 ymm5_3;
sub ymm5_4 ymm3_4 ymm5_4;
sub ymm5_5 ymm3_5 ymm5_5;
sub ymm5_6 ymm3_6 ymm5_6;
sub ymm5_7 ymm3_7 ymm5_7;
sub ymm5_8 ymm3_8 ymm5_8;
sub ymm5_9 ymm3_9 ymm5_9;
sub ymm5_a ymm3_a ymm5_a;
sub ymm5_b ymm3_b ymm5_b;
sub ymm5_c ymm3_c ymm5_c;
sub ymm5_d ymm3_d ymm5_d;
sub ymm5_e ymm3_e ymm5_e;
sub ymm5_f ymm3_f ymm5_f;
(* vpaddw %ymm6,%ymm4,%ymm3                        #! PC = 0x555555557b61 *)
add ymm3_0 ymm4_0 ymm6_0;
add ymm3_1 ymm4_1 ymm6_1;
add ymm3_2 ymm4_2 ymm6_2;
add ymm3_3 ymm4_3 ymm6_3;
add ymm3_4 ymm4_4 ymm6_4;
add ymm3_5 ymm4_5 ymm6_5;
add ymm3_6 ymm4_6 ymm6_6;
add ymm3_7 ymm4_7 ymm6_7;
add ymm3_8 ymm4_8 ymm6_8;
add ymm3_9 ymm4_9 ymm6_9;
add ymm3_a ymm4_a ymm6_a;
add ymm3_b ymm4_b ymm6_b;
add ymm3_c ymm4_c ymm6_c;
add ymm3_d ymm4_d ymm6_d;
add ymm3_e ymm4_e ymm6_e;
add ymm3_f ymm4_f ymm6_f;
(* vpsubw %ymm6,%ymm4,%ymm6                        #! PC = 0x555555557b65 *)
sub ymm6_0 ymm4_0 ymm6_0;
sub ymm6_1 ymm4_1 ymm6_1;
sub ymm6_2 ymm4_2 ymm6_2;
sub ymm6_3 ymm4_3 ymm6_3;
sub ymm6_4 ymm4_4 ymm6_4;
sub ymm6_5 ymm4_5 ymm6_5;
sub ymm6_6 ymm4_6 ymm6_6;
sub ymm6_7 ymm4_7 ymm6_7;
sub ymm6_8 ymm4_8 ymm6_8;
sub ymm6_9 ymm4_9 ymm6_9;
sub ymm6_a ymm4_a ymm6_a;
sub ymm6_b ymm4_b ymm6_b;
sub ymm6_c ymm4_c ymm6_c;
sub ymm6_d ymm4_d ymm6_d;
sub ymm6_e ymm4_e ymm6_e;
sub ymm6_f ymm4_f ymm6_f;
(* vpaddw %ymm10,%ymm8,%ymm4                       #! PC = 0x555555557b69 *)
add ymm4_0 ymm8_0 ymm10_0;
add ymm4_1 ymm8_1 ymm10_1;
add ymm4_2 ymm8_2 ymm10_2;
add ymm4_3 ymm8_3 ymm10_3;
add ymm4_4 ymm8_4 ymm10_4;
add ymm4_5 ymm8_5 ymm10_5;
add ymm4_6 ymm8_6 ymm10_6;
add ymm4_7 ymm8_7 ymm10_7;
add ymm4_8 ymm8_8 ymm10_8;
add ymm4_9 ymm8_9 ymm10_9;
add ymm4_a ymm8_a ymm10_a;
add ymm4_b ymm8_b ymm10_b;
add ymm4_c ymm8_c ymm10_c;
add ymm4_d ymm8_d ymm10_d;
add ymm4_e ymm8_e ymm10_e;
add ymm4_f ymm8_f ymm10_f;
(* vpsubw %ymm10,%ymm8,%ymm10                      #! PC = 0x555555557b6e *)
sub ymm10_0 ymm8_0 ymm10_0;
sub ymm10_1 ymm8_1 ymm10_1;
sub ymm10_2 ymm8_2 ymm10_2;
sub ymm10_3 ymm8_3 ymm10_3;
sub ymm10_4 ymm8_4 ymm10_4;
sub ymm10_5 ymm8_5 ymm10_5;
sub ymm10_6 ymm8_6 ymm10_6;
sub ymm10_7 ymm8_7 ymm10_7;
sub ymm10_8 ymm8_8 ymm10_8;
sub ymm10_9 ymm8_9 ymm10_9;
sub ymm10_a ymm8_a ymm10_a;
sub ymm10_b ymm8_b ymm10_b;
sub ymm10_c ymm8_c ymm10_c;
sub ymm10_d ymm8_d ymm10_d;
sub ymm10_e ymm8_e ymm10_e;
sub ymm10_f ymm8_f ymm10_f;
(* vpaddw %ymm11,%ymm9,%ymm8                       #! PC = 0x555555557b73 *)
add ymm8_0 ymm9_0 ymm11_0;
add ymm8_1 ymm9_1 ymm11_1;
add ymm8_2 ymm9_2 ymm11_2;
add ymm8_3 ymm9_3 ymm11_3;
add ymm8_4 ymm9_4 ymm11_4;
add ymm8_5 ymm9_5 ymm11_5;
add ymm8_6 ymm9_6 ymm11_6;
add ymm8_7 ymm9_7 ymm11_7;
add ymm8_8 ymm9_8 ymm11_8;
add ymm8_9 ymm9_9 ymm11_9;
add ymm8_a ymm9_a ymm11_a;
add ymm8_b ymm9_b ymm11_b;
add ymm8_c ymm9_c ymm11_c;
add ymm8_d ymm9_d ymm11_d;
add ymm8_e ymm9_e ymm11_e;
add ymm8_f ymm9_f ymm11_f;
(* vpsubw %ymm11,%ymm9,%ymm11                      #! PC = 0x555555557b78 *)
sub ymm11_0 ymm9_0 ymm11_0;
sub ymm11_1 ymm9_1 ymm11_1;
sub ymm11_2 ymm9_2 ymm11_2;
sub ymm11_3 ymm9_3 ymm11_3;
sub ymm11_4 ymm9_4 ymm11_4;
sub ymm11_5 ymm9_5 ymm11_5;
sub ymm11_6 ymm9_6 ymm11_6;
sub ymm11_7 ymm9_7 ymm11_7;
sub ymm11_8 ymm9_8 ymm11_8;
sub ymm11_9 ymm9_9 ymm11_9;
sub ymm11_a ymm9_a ymm11_a;
sub ymm11_b ymm9_b ymm11_b;
sub ymm11_c ymm9_c ymm11_c;
sub ymm11_d ymm9_d ymm11_d;
sub ymm11_e ymm9_e ymm11_e;
sub ymm11_f ymm9_f ymm11_f;
(* vpbroadcastw 0x108(%rdx),%ymm1                  #! EA = L0x555555561228; Value = 0xae886f65ad9a276d; PC = 0x555555557b7d *)
mov ymm1_0 L0x555555561228;
mov ymm1_1 L0x555555561228;
mov ymm1_2 L0x555555561228;
mov ymm1_3 L0x555555561228;
mov ymm1_4 L0x555555561228;
mov ymm1_5 L0x555555561228;
mov ymm1_6 L0x555555561228;
mov ymm1_7 L0x555555561228;
mov ymm1_8 L0x555555561228;
mov ymm1_9 L0x555555561228;
mov ymm1_a L0x555555561228;
mov ymm1_b L0x555555561228;
mov ymm1_c L0x555555561228;
mov ymm1_d L0x555555561228;
mov ymm1_e L0x555555561228;
mov ymm1_f L0x555555561228;
(* vpbroadcastw 0x308(%rdx),%ymm2                  #! EA = L0x555555561428; Value = 0xfe880165f19a096d; PC = 0x555555557b86 *)
mov ymm2_0 L0x555555561428;
mov ymm2_1 L0x555555561428;
mov ymm2_2 L0x555555561428;
mov ymm2_3 L0x555555561428;
mov ymm2_4 L0x555555561428;
mov ymm2_5 L0x555555561428;
mov ymm2_6 L0x555555561428;
mov ymm2_7 L0x555555561428;
mov ymm2_8 L0x555555561428;
mov ymm2_9 L0x555555561428;
mov ymm2_a L0x555555561428;
mov ymm2_b L0x555555561428;
mov ymm2_c L0x555555561428;
mov ymm2_d L0x555555561428;
mov ymm2_e L0x555555561428;
mov ymm2_f L0x555555561428;
(* vpmullw %ymm1,%ymm3,%ymm9                       #! PC = 0x555555557b8f *)
smull mulHymm3_0 mulL_0 ymm1_0 ymm3_0;
smull mulHymm3_1 mulL_1 ymm1_1 ymm3_1;
smull mulHymm3_2 mulL_2 ymm1_2 ymm3_2;
smull mulHymm3_3 mulL_3 ymm1_3 ymm3_3;
smull mulHymm3_4 mulL_4 ymm1_4 ymm3_4;
smull mulHymm3_5 mulL_5 ymm1_5 ymm3_5;
smull mulHymm3_6 mulL_6 ymm1_6 ymm3_6;
smull mulHymm3_7 mulL_7 ymm1_7 ymm3_7;
smull mulHymm3_8 mulL_8 ymm1_8 ymm3_8;
smull mulHymm3_9 mulL_9 ymm1_9 ymm3_9;
smull mulHymm3_a mulL_a ymm1_a ymm3_a;
smull mulHymm3_b mulL_b ymm1_b ymm3_b;
smull mulHymm3_c mulL_c ymm1_c ymm3_c;
smull mulHymm3_d mulL_d ymm1_d ymm3_d;
smull mulHymm3_e mulL_e ymm1_e ymm3_e;
smull mulHymm3_f mulL_f ymm1_f ymm3_f;
cast ymm9_0@sint16 mulL_0;
cast ymm9_1@sint16 mulL_1;
cast ymm9_2@sint16 mulL_2;
cast ymm9_3@sint16 mulL_3;
cast ymm9_4@sint16 mulL_4;
cast ymm9_5@sint16 mulL_5;
cast ymm9_6@sint16 mulL_6;
cast ymm9_7@sint16 mulL_7;
cast ymm9_8@sint16 mulL_8;
cast ymm9_9@sint16 mulL_9;
cast ymm9_a@sint16 mulL_a;
cast ymm9_b@sint16 mulL_b;
cast ymm9_c@sint16 mulL_c;
cast ymm9_d@sint16 mulL_d;
cast ymm9_e@sint16 mulL_e;
cast ymm9_f@sint16 mulL_f;
(* vpmulhw %ymm2,%ymm3,%ymm3                       #! PC = 0x555555557b93 *)
smull mulH_0 mulLymm3_0 ymm3_0 ymm2_0;
smull mulH_1 mulLymm3_1 ymm3_1 ymm2_1;
smull mulH_2 mulLymm3_2 ymm3_2 ymm2_2;
smull mulH_3 mulLymm3_3 ymm3_3 ymm2_3;
smull mulH_4 mulLymm3_4 ymm3_4 ymm2_4;
smull mulH_5 mulLymm3_5 ymm3_5 ymm2_5;
smull mulH_6 mulLymm3_6 ymm3_6 ymm2_6;
smull mulH_7 mulLymm3_7 ymm3_7 ymm2_7;
smull mulH_8 mulLymm3_8 ymm3_8 ymm2_8;
smull mulH_9 mulLymm3_9 ymm3_9 ymm2_9;
smull mulH_a mulLymm3_a ymm3_a ymm2_a;
smull mulH_b mulLymm3_b ymm3_b ymm2_b;
smull mulH_c mulLymm3_c ymm3_c ymm2_c;
smull mulH_d mulLymm3_d ymm3_d ymm2_d;
smull mulH_e mulLymm3_e ymm3_e ymm2_e;
smull mulH_f mulLymm3_f ymm3_f ymm2_f;
mov ymm3_0 mulH_0;
mov ymm3_1 mulH_1;
mov ymm3_2 mulH_2;
mov ymm3_3 mulH_3;
mov ymm3_4 mulH_4;
mov ymm3_5 mulH_5;
mov ymm3_6 mulH_6;
mov ymm3_7 mulH_7;
mov ymm3_8 mulH_8;
mov ymm3_9 mulH_9;
mov ymm3_a mulH_a;
mov ymm3_b mulH_b;
mov ymm3_c mulH_c;
mov ymm3_d mulH_d;
mov ymm3_e mulH_e;
mov ymm3_f mulH_f;
(* vpmulhw %ymm0,%ymm9,%ymm9                       #! PC = 0x555555557b97 *)
smull mulH_0 red_0 ymm9_0 ymm0_0;
assert true && red_0 = mulLymm3_0;
assume red_0 = mulLymm3_0 && true;
smull mulH_1 red_1 ymm9_1 ymm0_1;
assert true && red_1 = mulLymm3_1;
assume red_1 = mulLymm3_1 && true;
smull mulH_2 red_2 ymm9_2 ymm0_2;
assert true && red_2 = mulLymm3_2;
assume red_2 = mulLymm3_2 && true;
smull mulH_3 red_3 ymm9_3 ymm0_3;
assert true && red_3 = mulLymm3_3;
assume red_3 = mulLymm3_3 && true;
smull mulH_4 red_4 ymm9_4 ymm0_4;
assert true && red_4 = mulLymm3_4;
assume red_4 = mulLymm3_4 && true;
smull mulH_5 red_5 ymm9_5 ymm0_5;
assert true && red_5 = mulLymm3_5;
assume red_5 = mulLymm3_5 && true;
smull mulH_6 red_6 ymm9_6 ymm0_6;
assert true && red_6 = mulLymm3_6;
assume red_6 = mulLymm3_6 && true;
smull mulH_7 red_7 ymm9_7 ymm0_7;
assert true && red_7 = mulLymm3_7;
assume red_7 = mulLymm3_7 && true;
smull mulH_8 red_8 ymm9_8 ymm0_8;
assert true && red_8 = mulLymm3_8;
assume red_8 = mulLymm3_8 && true;
smull mulH_9 red_9 ymm9_9 ymm0_9;
assert true && red_9 = mulLymm3_9;
assume red_9 = mulLymm3_9 && true;
smull mulH_a red_a ymm9_a ymm0_a;
assert true && red_a = mulLymm3_a;
assume red_a = mulLymm3_a && true;
smull mulH_b red_b ymm9_b ymm0_b;
assert true && red_b = mulLymm3_b;
assume red_b = mulLymm3_b && true;
smull mulH_c red_c ymm9_c ymm0_c;
assert true && red_c = mulLymm3_c;
assume red_c = mulLymm3_c && true;
smull mulH_d red_d ymm9_d ymm0_d;
assert true && red_d = mulLymm3_d;
assume red_d = mulLymm3_d && true;
smull mulH_e red_e ymm9_e ymm0_e;
assert true && red_e = mulLymm3_e;
assume red_e = mulLymm3_e && true;
smull mulH_f red_f ymm9_f ymm0_f;
assert true && red_f = mulLymm3_f;
assume red_f = mulLymm3_f && true;
mov ymm9_0 mulH_0;
mov ymm9_1 mulH_1;
mov ymm9_2 mulH_2;
mov ymm9_3 mulH_3;
mov ymm9_4 mulH_4;
mov ymm9_5 mulH_5;
mov ymm9_6 mulH_6;
mov ymm9_7 mulH_7;
mov ymm9_8 mulH_8;
mov ymm9_9 mulH_9;
mov ymm9_a mulH_a;
mov ymm9_b mulH_b;
mov ymm9_c mulH_c;
mov ymm9_d mulH_d;
mov ymm9_e mulH_e;
mov ymm9_f mulH_f;
(* vpsubw %ymm9,%ymm3,%ymm3                        #! PC = 0x555555557b9b *)
sub ymm3_0 ymm3_0 ymm9_0;
sub ymm3_1 ymm3_1 ymm9_1;
sub ymm3_2 ymm3_2 ymm9_2;
sub ymm3_3 ymm3_3 ymm9_3;
sub ymm3_4 ymm3_4 ymm9_4;
sub ymm3_5 ymm3_5 ymm9_5;
sub ymm3_6 ymm3_6 ymm9_6;
sub ymm3_7 ymm3_7 ymm9_7;
sub ymm3_8 ymm3_8 ymm9_8;
sub ymm3_9 ymm3_9 ymm9_9;
sub ymm3_a ymm3_a ymm9_a;
sub ymm3_b ymm3_b ymm9_b;
sub ymm3_c ymm3_c ymm9_c;
sub ymm3_d ymm3_d ymm9_d;
sub ymm3_e ymm3_e ymm9_e;
sub ymm3_f ymm3_f ymm9_f;
(* vpbroadcastw 0x10a(%rdx),%ymm1                  #! EA = L0x55555556122a; Value = 0xe487ae886f65ad9a; PC = 0x555555557ba0 *)
mov ymm1_0 L0x55555556122a;
mov ymm1_1 L0x55555556122a;
mov ymm1_2 L0x55555556122a;
mov ymm1_3 L0x55555556122a;
mov ymm1_4 L0x55555556122a;
mov ymm1_5 L0x55555556122a;
mov ymm1_6 L0x55555556122a;
mov ymm1_7 L0x55555556122a;
mov ymm1_8 L0x55555556122a;
mov ymm1_9 L0x55555556122a;
mov ymm1_a L0x55555556122a;
mov ymm1_b L0x55555556122a;
mov ymm1_c L0x55555556122a;
mov ymm1_d L0x55555556122a;
mov ymm1_e L0x55555556122a;
mov ymm1_f L0x55555556122a;
(* vpbroadcastw 0x30a(%rdx),%ymm2                  #! EA = L0x55555556142a; Value = 0x0a87fe880165f19a; PC = 0x555555557ba9 *)
mov ymm2_0 L0x55555556142a;
mov ymm2_1 L0x55555556142a;
mov ymm2_2 L0x55555556142a;
mov ymm2_3 L0x55555556142a;
mov ymm2_4 L0x55555556142a;
mov ymm2_5 L0x55555556142a;
mov ymm2_6 L0x55555556142a;
mov ymm2_7 L0x55555556142a;
mov ymm2_8 L0x55555556142a;
mov ymm2_9 L0x55555556142a;
mov ymm2_a L0x55555556142a;
mov ymm2_b L0x55555556142a;
mov ymm2_c L0x55555556142a;
mov ymm2_d L0x55555556142a;
mov ymm2_e L0x55555556142a;
mov ymm2_f L0x55555556142a;
(* vpmullw %ymm1,%ymm6,%ymm9                       #! PC = 0x555555557bb2 *)
smull mulHymm6_0 mulL_0 ymm1_0 ymm6_0;
smull mulHymm6_1 mulL_1 ymm1_1 ymm6_1;
smull mulHymm6_2 mulL_2 ymm1_2 ymm6_2;
smull mulHymm6_3 mulL_3 ymm1_3 ymm6_3;
smull mulHymm6_4 mulL_4 ymm1_4 ymm6_4;
smull mulHymm6_5 mulL_5 ymm1_5 ymm6_5;
smull mulHymm6_6 mulL_6 ymm1_6 ymm6_6;
smull mulHymm6_7 mulL_7 ymm1_7 ymm6_7;
smull mulHymm6_8 mulL_8 ymm1_8 ymm6_8;
smull mulHymm6_9 mulL_9 ymm1_9 ymm6_9;
smull mulHymm6_a mulL_a ymm1_a ymm6_a;
smull mulHymm6_b mulL_b ymm1_b ymm6_b;
smull mulHymm6_c mulL_c ymm1_c ymm6_c;
smull mulHymm6_d mulL_d ymm1_d ymm6_d;
smull mulHymm6_e mulL_e ymm1_e ymm6_e;
smull mulHymm6_f mulL_f ymm1_f ymm6_f;
cast ymm9_0@sint16 mulL_0;
cast ymm9_1@sint16 mulL_1;
cast ymm9_2@sint16 mulL_2;
cast ymm9_3@sint16 mulL_3;
cast ymm9_4@sint16 mulL_4;
cast ymm9_5@sint16 mulL_5;
cast ymm9_6@sint16 mulL_6;
cast ymm9_7@sint16 mulL_7;
cast ymm9_8@sint16 mulL_8;
cast ymm9_9@sint16 mulL_9;
cast ymm9_a@sint16 mulL_a;
cast ymm9_b@sint16 mulL_b;
cast ymm9_c@sint16 mulL_c;
cast ymm9_d@sint16 mulL_d;
cast ymm9_e@sint16 mulL_e;
cast ymm9_f@sint16 mulL_f;
(* vpmulhw %ymm2,%ymm6,%ymm6                       #! PC = 0x555555557bb6 *)
smull mulH_0 mulLymm6_0 ymm6_0 ymm2_0;
smull mulH_1 mulLymm6_1 ymm6_1 ymm2_1;
smull mulH_2 mulLymm6_2 ymm6_2 ymm2_2;
smull mulH_3 mulLymm6_3 ymm6_3 ymm2_3;
smull mulH_4 mulLymm6_4 ymm6_4 ymm2_4;
smull mulH_5 mulLymm6_5 ymm6_5 ymm2_5;
smull mulH_6 mulLymm6_6 ymm6_6 ymm2_6;
smull mulH_7 mulLymm6_7 ymm6_7 ymm2_7;
smull mulH_8 mulLymm6_8 ymm6_8 ymm2_8;
smull mulH_9 mulLymm6_9 ymm6_9 ymm2_9;
smull mulH_a mulLymm6_a ymm6_a ymm2_a;
smull mulH_b mulLymm6_b ymm6_b ymm2_b;
smull mulH_c mulLymm6_c ymm6_c ymm2_c;
smull mulH_d mulLymm6_d ymm6_d ymm2_d;
smull mulH_e mulLymm6_e ymm6_e ymm2_e;
smull mulH_f mulLymm6_f ymm6_f ymm2_f;
mov ymm6_0 mulH_0;
mov ymm6_1 mulH_1;
mov ymm6_2 mulH_2;
mov ymm6_3 mulH_3;
mov ymm6_4 mulH_4;
mov ymm6_5 mulH_5;
mov ymm6_6 mulH_6;
mov ymm6_7 mulH_7;
mov ymm6_8 mulH_8;
mov ymm6_9 mulH_9;
mov ymm6_a mulH_a;
mov ymm6_b mulH_b;
mov ymm6_c mulH_c;
mov ymm6_d mulH_d;
mov ymm6_e mulH_e;
mov ymm6_f mulH_f;
(* vpmulhw %ymm0,%ymm9,%ymm9                       #! PC = 0x555555557bba *)
smull mulH_0 red_0 ymm9_0 ymm0_0;
assert true && red_0 = mulLymm6_0;
assume red_0 = mulLymm6_0 && true;
smull mulH_1 red_1 ymm9_1 ymm0_1;
assert true && red_1 = mulLymm6_1;
assume red_1 = mulLymm6_1 && true;
smull mulH_2 red_2 ymm9_2 ymm0_2;
assert true && red_2 = mulLymm6_2;
assume red_2 = mulLymm6_2 && true;
smull mulH_3 red_3 ymm9_3 ymm0_3;
assert true && red_3 = mulLymm6_3;
assume red_3 = mulLymm6_3 && true;
smull mulH_4 red_4 ymm9_4 ymm0_4;
assert true && red_4 = mulLymm6_4;
assume red_4 = mulLymm6_4 && true;
smull mulH_5 red_5 ymm9_5 ymm0_5;
assert true && red_5 = mulLymm6_5;
assume red_5 = mulLymm6_5 && true;
smull mulH_6 red_6 ymm9_6 ymm0_6;
assert true && red_6 = mulLymm6_6;
assume red_6 = mulLymm6_6 && true;
smull mulH_7 red_7 ymm9_7 ymm0_7;
assert true && red_7 = mulLymm6_7;
assume red_7 = mulLymm6_7 && true;
smull mulH_8 red_8 ymm9_8 ymm0_8;
assert true && red_8 = mulLymm6_8;
assume red_8 = mulLymm6_8 && true;
smull mulH_9 red_9 ymm9_9 ymm0_9;
assert true && red_9 = mulLymm6_9;
assume red_9 = mulLymm6_9 && true;
smull mulH_a red_a ymm9_a ymm0_a;
assert true && red_a = mulLymm6_a;
assume red_a = mulLymm6_a && true;
smull mulH_b red_b ymm9_b ymm0_b;
assert true && red_b = mulLymm6_b;
assume red_b = mulLymm6_b && true;
smull mulH_c red_c ymm9_c ymm0_c;
assert true && red_c = mulLymm6_c;
assume red_c = mulLymm6_c && true;
smull mulH_d red_d ymm9_d ymm0_d;
assert true && red_d = mulLymm6_d;
assume red_d = mulLymm6_d && true;
smull mulH_e red_e ymm9_e ymm0_e;
assert true && red_e = mulLymm6_e;
assume red_e = mulLymm6_e && true;
smull mulH_f red_f ymm9_f ymm0_f;
assert true && red_f = mulLymm6_f;
assume red_f = mulLymm6_f && true;
mov ymm9_0 mulH_0;
mov ymm9_1 mulH_1;
mov ymm9_2 mulH_2;
mov ymm9_3 mulH_3;
mov ymm9_4 mulH_4;
mov ymm9_5 mulH_5;
mov ymm9_6 mulH_6;
mov ymm9_7 mulH_7;
mov ymm9_8 mulH_8;
mov ymm9_9 mulH_9;
mov ymm9_a mulH_a;
mov ymm9_b mulH_b;
mov ymm9_c mulH_c;
mov ymm9_d mulH_d;
mov ymm9_e mulH_e;
mov ymm9_f mulH_f;
(* vpsubw %ymm9,%ymm6,%ymm6                        #! PC = 0x555555557bbe *)
sub ymm6_0 ymm6_0 ymm9_0;
sub ymm6_1 ymm6_1 ymm9_1;
sub ymm6_2 ymm6_2 ymm9_2;
sub ymm6_3 ymm6_3 ymm9_3;
sub ymm6_4 ymm6_4 ymm9_4;
sub ymm6_5 ymm6_5 ymm9_5;
sub ymm6_6 ymm6_6 ymm9_6;
sub ymm6_7 ymm6_7 ymm9_7;
sub ymm6_8 ymm6_8 ymm9_8;
sub ymm6_9 ymm6_9 ymm9_9;
sub ymm6_a ymm6_a ymm9_a;
sub ymm6_b ymm6_b ymm9_b;
sub ymm6_c ymm6_c ymm9_c;
sub ymm6_d ymm6_d ymm9_d;
sub ymm6_e ymm6_e ymm9_e;
sub ymm6_f ymm6_f ymm9_f;
(* vpbroadcastw 0x10c(%rdx),%ymm1                  #! EA = L0x55555556122c; Value = 0xc126e487ae886f65; PC = 0x555555557bc3 *)
mov ymm1_0 L0x55555556122c;
mov ymm1_1 L0x55555556122c;
mov ymm1_2 L0x55555556122c;
mov ymm1_3 L0x55555556122c;
mov ymm1_4 L0x55555556122c;
mov ymm1_5 L0x55555556122c;
mov ymm1_6 L0x55555556122c;
mov ymm1_7 L0x55555556122c;
mov ymm1_8 L0x55555556122c;
mov ymm1_9 L0x55555556122c;
mov ymm1_a L0x55555556122c;
mov ymm1_b L0x55555556122c;
mov ymm1_c L0x55555556122c;
mov ymm1_d L0x55555556122c;
mov ymm1_e L0x55555556122c;
mov ymm1_f L0x55555556122c;
(* vpbroadcastw 0x30c(%rdx),%ymm2                  #! EA = L0x55555556142c; Value = 0xfd260a87fe880165; PC = 0x555555557bcc *)
mov ymm2_0 L0x55555556142c;
mov ymm2_1 L0x55555556142c;
mov ymm2_2 L0x55555556142c;
mov ymm2_3 L0x55555556142c;
mov ymm2_4 L0x55555556142c;
mov ymm2_5 L0x55555556142c;
mov ymm2_6 L0x55555556142c;
mov ymm2_7 L0x55555556142c;
mov ymm2_8 L0x55555556142c;
mov ymm2_9 L0x55555556142c;
mov ymm2_a L0x55555556142c;
mov ymm2_b L0x55555556142c;
mov ymm2_c L0x55555556142c;
mov ymm2_d L0x55555556142c;
mov ymm2_e L0x55555556142c;
mov ymm2_f L0x55555556142c;
(* vpmullw %ymm1,%ymm8,%ymm9                       #! PC = 0x555555557bd5 *)
smull mulHymm8_0 mulL_0 ymm1_0 ymm8_0;
smull mulHymm8_1 mulL_1 ymm1_1 ymm8_1;
smull mulHymm8_2 mulL_2 ymm1_2 ymm8_2;
smull mulHymm8_3 mulL_3 ymm1_3 ymm8_3;
smull mulHymm8_4 mulL_4 ymm1_4 ymm8_4;
smull mulHymm8_5 mulL_5 ymm1_5 ymm8_5;
smull mulHymm8_6 mulL_6 ymm1_6 ymm8_6;
smull mulHymm8_7 mulL_7 ymm1_7 ymm8_7;
smull mulHymm8_8 mulL_8 ymm1_8 ymm8_8;
smull mulHymm8_9 mulL_9 ymm1_9 ymm8_9;
smull mulHymm8_a mulL_a ymm1_a ymm8_a;
smull mulHymm8_b mulL_b ymm1_b ymm8_b;
smull mulHymm8_c mulL_c ymm1_c ymm8_c;
smull mulHymm8_d mulL_d ymm1_d ymm8_d;
smull mulHymm8_e mulL_e ymm1_e ymm8_e;
smull mulHymm8_f mulL_f ymm1_f ymm8_f;
cast ymm9_0@sint16 mulL_0;
cast ymm9_1@sint16 mulL_1;
cast ymm9_2@sint16 mulL_2;
cast ymm9_3@sint16 mulL_3;
cast ymm9_4@sint16 mulL_4;
cast ymm9_5@sint16 mulL_5;
cast ymm9_6@sint16 mulL_6;
cast ymm9_7@sint16 mulL_7;
cast ymm9_8@sint16 mulL_8;
cast ymm9_9@sint16 mulL_9;
cast ymm9_a@sint16 mulL_a;
cast ymm9_b@sint16 mulL_b;
cast ymm9_c@sint16 mulL_c;
cast ymm9_d@sint16 mulL_d;
cast ymm9_e@sint16 mulL_e;
cast ymm9_f@sint16 mulL_f;
(* vpmulhw %ymm2,%ymm8,%ymm8                       #! PC = 0x555555557bd9 *)
smull mulH_0 mulLymm8_0 ymm8_0 ymm2_0;
smull mulH_1 mulLymm8_1 ymm8_1 ymm2_1;
smull mulH_2 mulLymm8_2 ymm8_2 ymm2_2;
smull mulH_3 mulLymm8_3 ymm8_3 ymm2_3;
smull mulH_4 mulLymm8_4 ymm8_4 ymm2_4;
smull mulH_5 mulLymm8_5 ymm8_5 ymm2_5;
smull mulH_6 mulLymm8_6 ymm8_6 ymm2_6;
smull mulH_7 mulLymm8_7 ymm8_7 ymm2_7;
smull mulH_8 mulLymm8_8 ymm8_8 ymm2_8;
smull mulH_9 mulLymm8_9 ymm8_9 ymm2_9;
smull mulH_a mulLymm8_a ymm8_a ymm2_a;
smull mulH_b mulLymm8_b ymm8_b ymm2_b;
smull mulH_c mulLymm8_c ymm8_c ymm2_c;
smull mulH_d mulLymm8_d ymm8_d ymm2_d;
smull mulH_e mulLymm8_e ymm8_e ymm2_e;
smull mulH_f mulLymm8_f ymm8_f ymm2_f;
mov ymm8_0 mulH_0;
mov ymm8_1 mulH_1;
mov ymm8_2 mulH_2;
mov ymm8_3 mulH_3;
mov ymm8_4 mulH_4;
mov ymm8_5 mulH_5;
mov ymm8_6 mulH_6;
mov ymm8_7 mulH_7;
mov ymm8_8 mulH_8;
mov ymm8_9 mulH_9;
mov ymm8_a mulH_a;
mov ymm8_b mulH_b;
mov ymm8_c mulH_c;
mov ymm8_d mulH_d;
mov ymm8_e mulH_e;
mov ymm8_f mulH_f;
(* vpmulhw %ymm0,%ymm9,%ymm9                       #! PC = 0x555555557bdd *)
smull mulH_0 red_0 ymm9_0 ymm0_0;
assert true && red_0 = mulLymm8_0;
assume red_0 = mulLymm8_0 && true;
smull mulH_1 red_1 ymm9_1 ymm0_1;
assert true && red_1 = mulLymm8_1;
assume red_1 = mulLymm8_1 && true;
smull mulH_2 red_2 ymm9_2 ymm0_2;
assert true && red_2 = mulLymm8_2;
assume red_2 = mulLymm8_2 && true;
smull mulH_3 red_3 ymm9_3 ymm0_3;
assert true && red_3 = mulLymm8_3;
assume red_3 = mulLymm8_3 && true;
smull mulH_4 red_4 ymm9_4 ymm0_4;
assert true && red_4 = mulLymm8_4;
assume red_4 = mulLymm8_4 && true;
smull mulH_5 red_5 ymm9_5 ymm0_5;
assert true && red_5 = mulLymm8_5;
assume red_5 = mulLymm8_5 && true;
smull mulH_6 red_6 ymm9_6 ymm0_6;
assert true && red_6 = mulLymm8_6;
assume red_6 = mulLymm8_6 && true;
smull mulH_7 red_7 ymm9_7 ymm0_7;
assert true && red_7 = mulLymm8_7;
assume red_7 = mulLymm8_7 && true;
smull mulH_8 red_8 ymm9_8 ymm0_8;
assert true && red_8 = mulLymm8_8;
assume red_8 = mulLymm8_8 && true;
smull mulH_9 red_9 ymm9_9 ymm0_9;
assert true && red_9 = mulLymm8_9;
assume red_9 = mulLymm8_9 && true;
smull mulH_a red_a ymm9_a ymm0_a;
assert true && red_a = mulLymm8_a;
assume red_a = mulLymm8_a && true;
smull mulH_b red_b ymm9_b ymm0_b;
assert true && red_b = mulLymm8_b;
assume red_b = mulLymm8_b && true;
smull mulH_c red_c ymm9_c ymm0_c;
assert true && red_c = mulLymm8_c;
assume red_c = mulLymm8_c && true;
smull mulH_d red_d ymm9_d ymm0_d;
assert true && red_d = mulLymm8_d;
assume red_d = mulLymm8_d && true;
smull mulH_e red_e ymm9_e ymm0_e;
assert true && red_e = mulLymm8_e;
assume red_e = mulLymm8_e && true;
smull mulH_f red_f ymm9_f ymm0_f;
assert true && red_f = mulLymm8_f;
assume red_f = mulLymm8_f && true;
mov ymm9_0 mulH_0;
mov ymm9_1 mulH_1;
mov ymm9_2 mulH_2;
mov ymm9_3 mulH_3;
mov ymm9_4 mulH_4;
mov ymm9_5 mulH_5;
mov ymm9_6 mulH_6;
mov ymm9_7 mulH_7;
mov ymm9_8 mulH_8;
mov ymm9_9 mulH_9;
mov ymm9_a mulH_a;
mov ymm9_b mulH_b;
mov ymm9_c mulH_c;
mov ymm9_d mulH_d;
mov ymm9_e mulH_e;
mov ymm9_f mulH_f;
(* vpsubw %ymm9,%ymm8,%ymm8                        #! PC = 0x555555557be1 *)
sub ymm8_0 ymm8_0 ymm9_0;
sub ymm8_1 ymm8_1 ymm9_1;
sub ymm8_2 ymm8_2 ymm9_2;
sub ymm8_3 ymm8_3 ymm9_3;
sub ymm8_4 ymm8_4 ymm9_4;
sub ymm8_5 ymm8_5 ymm9_5;
sub ymm8_6 ymm8_6 ymm9_6;
sub ymm8_7 ymm8_7 ymm9_7;
sub ymm8_8 ymm8_8 ymm9_8;
sub ymm8_9 ymm8_9 ymm9_9;
sub ymm8_a ymm8_a ymm9_a;
sub ymm8_b ymm8_b ymm9_b;
sub ymm8_c ymm8_c ymm9_c;
sub ymm8_d ymm8_d ymm9_d;
sub ymm8_e ymm8_e ymm9_e;
sub ymm8_f ymm8_f ymm9_f;
(* vpbroadcastw 0x10e(%rdx),%ymm1                  #! EA = L0x55555556122e; Value = 0x8cf7c126e487ae88; PC = 0x555555557be6 *)
mov ymm1_0 L0x55555556122e;
mov ymm1_1 L0x55555556122e;
mov ymm1_2 L0x55555556122e;
mov ymm1_3 L0x55555556122e;
mov ymm1_4 L0x55555556122e;
mov ymm1_5 L0x55555556122e;
mov ymm1_6 L0x55555556122e;
mov ymm1_7 L0x55555556122e;
mov ymm1_8 L0x55555556122e;
mov ymm1_9 L0x55555556122e;
mov ymm1_a L0x55555556122e;
mov ymm1_b L0x55555556122e;
mov ymm1_c L0x55555556122e;
mov ymm1_d L0x55555556122e;
mov ymm1_e L0x55555556122e;
mov ymm1_f L0x55555556122e;
(* vpbroadcastw 0x30e(%rdx),%ymm2                  #! EA = L0x55555556142e; Value = 0x12f7fd260a87fe88; PC = 0x555555557bef *)
mov ymm2_0 L0x55555556142e;
mov ymm2_1 L0x55555556142e;
mov ymm2_2 L0x55555556142e;
mov ymm2_3 L0x55555556142e;
mov ymm2_4 L0x55555556142e;
mov ymm2_5 L0x55555556142e;
mov ymm2_6 L0x55555556142e;
mov ymm2_7 L0x55555556142e;
mov ymm2_8 L0x55555556142e;
mov ymm2_9 L0x55555556142e;
mov ymm2_a L0x55555556142e;
mov ymm2_b L0x55555556142e;
mov ymm2_c L0x55555556142e;
mov ymm2_d L0x55555556142e;
mov ymm2_e L0x55555556142e;
mov ymm2_f L0x55555556142e;
(* vpmullw %ymm1,%ymm11,%ymm9                      #! PC = 0x555555557bf8 *)
smull mulHymm11_0 mulL_0 ymm1_0 ymm11_0;
smull mulHymm11_1 mulL_1 ymm1_1 ymm11_1;
smull mulHymm11_2 mulL_2 ymm1_2 ymm11_2;
smull mulHymm11_3 mulL_3 ymm1_3 ymm11_3;
smull mulHymm11_4 mulL_4 ymm1_4 ymm11_4;
smull mulHymm11_5 mulL_5 ymm1_5 ymm11_5;
smull mulHymm11_6 mulL_6 ymm1_6 ymm11_6;
smull mulHymm11_7 mulL_7 ymm1_7 ymm11_7;
smull mulHymm11_8 mulL_8 ymm1_8 ymm11_8;
smull mulHymm11_9 mulL_9 ymm1_9 ymm11_9;
smull mulHymm11_a mulL_a ymm1_a ymm11_a;
smull mulHymm11_b mulL_b ymm1_b ymm11_b;
smull mulHymm11_c mulL_c ymm1_c ymm11_c;
smull mulHymm11_d mulL_d ymm1_d ymm11_d;
smull mulHymm11_e mulL_e ymm1_e ymm11_e;
smull mulHymm11_f mulL_f ymm1_f ymm11_f;
cast ymm9_0@sint16 mulL_0;
cast ymm9_1@sint16 mulL_1;
cast ymm9_2@sint16 mulL_2;
cast ymm9_3@sint16 mulL_3;
cast ymm9_4@sint16 mulL_4;
cast ymm9_5@sint16 mulL_5;
cast ymm9_6@sint16 mulL_6;
cast ymm9_7@sint16 mulL_7;
cast ymm9_8@sint16 mulL_8;
cast ymm9_9@sint16 mulL_9;
cast ymm9_a@sint16 mulL_a;
cast ymm9_b@sint16 mulL_b;
cast ymm9_c@sint16 mulL_c;
cast ymm9_d@sint16 mulL_d;
cast ymm9_e@sint16 mulL_e;
cast ymm9_f@sint16 mulL_f;
(* vpmulhw %ymm2,%ymm11,%ymm11                     #! PC = 0x555555557bfc *)
smull mulH_0 mulLymm11_0 ymm11_0 ymm2_0;
smull mulH_1 mulLymm11_1 ymm11_1 ymm2_1;
smull mulH_2 mulLymm11_2 ymm11_2 ymm2_2;
smull mulH_3 mulLymm11_3 ymm11_3 ymm2_3;
smull mulH_4 mulLymm11_4 ymm11_4 ymm2_4;
smull mulH_5 mulLymm11_5 ymm11_5 ymm2_5;
smull mulH_6 mulLymm11_6 ymm11_6 ymm2_6;
smull mulH_7 mulLymm11_7 ymm11_7 ymm2_7;
smull mulH_8 mulLymm11_8 ymm11_8 ymm2_8;
smull mulH_9 mulLymm11_9 ymm11_9 ymm2_9;
smull mulH_a mulLymm11_a ymm11_a ymm2_a;
smull mulH_b mulLymm11_b ymm11_b ymm2_b;
smull mulH_c mulLymm11_c ymm11_c ymm2_c;
smull mulH_d mulLymm11_d ymm11_d ymm2_d;
smull mulH_e mulLymm11_e ymm11_e ymm2_e;
smull mulH_f mulLymm11_f ymm11_f ymm2_f;
mov ymm11_0 mulH_0;
mov ymm11_1 mulH_1;
mov ymm11_2 mulH_2;
mov ymm11_3 mulH_3;
mov ymm11_4 mulH_4;
mov ymm11_5 mulH_5;
mov ymm11_6 mulH_6;
mov ymm11_7 mulH_7;
mov ymm11_8 mulH_8;
mov ymm11_9 mulH_9;
mov ymm11_a mulH_a;
mov ymm11_b mulH_b;
mov ymm11_c mulH_c;
mov ymm11_d mulH_d;
mov ymm11_e mulH_e;
mov ymm11_f mulH_f;
(* vpmulhw %ymm0,%ymm9,%ymm9                       #! PC = 0x555555557c00 *)
smull mulH_0 red_0 ymm9_0 ymm0_0;
assert true && red_0 = mulLymm11_0;
assume red_0 = mulLymm11_0 && true;
smull mulH_1 red_1 ymm9_1 ymm0_1;
assert true && red_1 = mulLymm11_1;
assume red_1 = mulLymm11_1 && true;
smull mulH_2 red_2 ymm9_2 ymm0_2;
assert true && red_2 = mulLymm11_2;
assume red_2 = mulLymm11_2 && true;
smull mulH_3 red_3 ymm9_3 ymm0_3;
assert true && red_3 = mulLymm11_3;
assume red_3 = mulLymm11_3 && true;
smull mulH_4 red_4 ymm9_4 ymm0_4;
assert true && red_4 = mulLymm11_4;
assume red_4 = mulLymm11_4 && true;
smull mulH_5 red_5 ymm9_5 ymm0_5;
assert true && red_5 = mulLymm11_5;
assume red_5 = mulLymm11_5 && true;
smull mulH_6 red_6 ymm9_6 ymm0_6;
assert true && red_6 = mulLymm11_6;
assume red_6 = mulLymm11_6 && true;
smull mulH_7 red_7 ymm9_7 ymm0_7;
assert true && red_7 = mulLymm11_7;
assume red_7 = mulLymm11_7 && true;
smull mulH_8 red_8 ymm9_8 ymm0_8;
assert true && red_8 = mulLymm11_8;
assume red_8 = mulLymm11_8 && true;
smull mulH_9 red_9 ymm9_9 ymm0_9;
assert true && red_9 = mulLymm11_9;
assume red_9 = mulLymm11_9 && true;
smull mulH_a red_a ymm9_a ymm0_a;
assert true && red_a = mulLymm11_a;
assume red_a = mulLymm11_a && true;
smull mulH_b red_b ymm9_b ymm0_b;
assert true && red_b = mulLymm11_b;
assume red_b = mulLymm11_b && true;
smull mulH_c red_c ymm9_c ymm0_c;
assert true && red_c = mulLymm11_c;
assume red_c = mulLymm11_c && true;
smull mulH_d red_d ymm9_d ymm0_d;
assert true && red_d = mulLymm11_d;
assume red_d = mulLymm11_d && true;
smull mulH_e red_e ymm9_e ymm0_e;
assert true && red_e = mulLymm11_e;
assume red_e = mulLymm11_e && true;
smull mulH_f red_f ymm9_f ymm0_f;
assert true && red_f = mulLymm11_f;
assume red_f = mulLymm11_f && true;
mov ymm9_0 mulH_0;
mov ymm9_1 mulH_1;
mov ymm9_2 mulH_2;
mov ymm9_3 mulH_3;
mov ymm9_4 mulH_4;
mov ymm9_5 mulH_5;
mov ymm9_6 mulH_6;
mov ymm9_7 mulH_7;
mov ymm9_8 mulH_8;
mov ymm9_9 mulH_9;
mov ymm9_a mulH_a;
mov ymm9_b mulH_b;
mov ymm9_c mulH_c;
mov ymm9_d mulH_d;
mov ymm9_e mulH_e;
mov ymm9_f mulH_f;
(* vpsubw %ymm9,%ymm11,%ymm11                      #! PC = 0x555555557c04 *)
sub ymm11_0 ymm11_0 ymm9_0;
sub ymm11_1 ymm11_1 ymm9_1;
sub ymm11_2 ymm11_2 ymm9_2;
sub ymm11_3 ymm11_3 ymm9_3;
sub ymm11_4 ymm11_4 ymm9_4;
sub ymm11_5 ymm11_5 ymm9_5;
sub ymm11_6 ymm11_6 ymm9_6;
sub ymm11_7 ymm11_7 ymm9_7;
sub ymm11_8 ymm11_8 ymm9_8;
sub ymm11_9 ymm11_9 ymm9_9;
sub ymm11_a ymm11_a ymm9_a;
sub ymm11_b ymm11_b ymm9_b;
sub ymm11_c ymm11_c ymm9_c;
sub ymm11_d ymm11_d ymm9_d;
sub ymm11_e ymm11_e ymm9_e;
sub ymm11_f ymm11_f ymm9_f;
(* vpaddw %ymm3,%ymm7,%ymm9                        #! PC = 0x555555557c09 *)
add ymm9_0 ymm7_0 ymm3_0;
add ymm9_1 ymm7_1 ymm3_1;
add ymm9_2 ymm7_2 ymm3_2;
add ymm9_3 ymm7_3 ymm3_3;
add ymm9_4 ymm7_4 ymm3_4;
add ymm9_5 ymm7_5 ymm3_5;
add ymm9_6 ymm7_6 ymm3_6;
add ymm9_7 ymm7_7 ymm3_7;
add ymm9_8 ymm7_8 ymm3_8;
add ymm9_9 ymm7_9 ymm3_9;
add ymm9_a ymm7_a ymm3_a;
add ymm9_b ymm7_b ymm3_b;
add ymm9_c ymm7_c ymm3_c;
add ymm9_d ymm7_d ymm3_d;
add ymm9_e ymm7_e ymm3_e;
add ymm9_f ymm7_f ymm3_f;
(* vpsubw %ymm3,%ymm7,%ymm3                        #! PC = 0x555555557c0d *)
sub ymm3_0 ymm7_0 ymm3_0;
sub ymm3_1 ymm7_1 ymm3_1;
sub ymm3_2 ymm7_2 ymm3_2;
sub ymm3_3 ymm7_3 ymm3_3;
sub ymm3_4 ymm7_4 ymm3_4;
sub ymm3_5 ymm7_5 ymm3_5;
sub ymm3_6 ymm7_6 ymm3_6;
sub ymm3_7 ymm7_7 ymm3_7;
sub ymm3_8 ymm7_8 ymm3_8;
sub ymm3_9 ymm7_9 ymm3_9;
sub ymm3_a ymm7_a ymm3_a;
sub ymm3_b ymm7_b ymm3_b;
sub ymm3_c ymm7_c ymm3_c;
sub ymm3_d ymm7_d ymm3_d;
sub ymm3_e ymm7_e ymm3_e;
sub ymm3_f ymm7_f ymm3_f;
(* vpaddw %ymm6,%ymm5,%ymm7                        #! PC = 0x555555557c11 *)
add ymm7_0 ymm5_0 ymm6_0;
add ymm7_1 ymm5_1 ymm6_1;
add ymm7_2 ymm5_2 ymm6_2;
add ymm7_3 ymm5_3 ymm6_3;
add ymm7_4 ymm5_4 ymm6_4;
add ymm7_5 ymm5_5 ymm6_5;
add ymm7_6 ymm5_6 ymm6_6;
add ymm7_7 ymm5_7 ymm6_7;
add ymm7_8 ymm5_8 ymm6_8;
add ymm7_9 ymm5_9 ymm6_9;
add ymm7_a ymm5_a ymm6_a;
add ymm7_b ymm5_b ymm6_b;
add ymm7_c ymm5_c ymm6_c;
add ymm7_d ymm5_d ymm6_d;
add ymm7_e ymm5_e ymm6_e;
add ymm7_f ymm5_f ymm6_f;
(* vpsubw %ymm6,%ymm5,%ymm6                        #! PC = 0x555555557c15 *)
sub ymm6_0 ymm5_0 ymm6_0;
sub ymm6_1 ymm5_1 ymm6_1;
sub ymm6_2 ymm5_2 ymm6_2;
sub ymm6_3 ymm5_3 ymm6_3;
sub ymm6_4 ymm5_4 ymm6_4;
sub ymm6_5 ymm5_5 ymm6_5;
sub ymm6_6 ymm5_6 ymm6_6;
sub ymm6_7 ymm5_7 ymm6_7;
sub ymm6_8 ymm5_8 ymm6_8;
sub ymm6_9 ymm5_9 ymm6_9;
sub ymm6_a ymm5_a ymm6_a;
sub ymm6_b ymm5_b ymm6_b;
sub ymm6_c ymm5_c ymm6_c;
sub ymm6_d ymm5_d ymm6_d;
sub ymm6_e ymm5_e ymm6_e;
sub ymm6_f ymm5_f ymm6_f;
(* vpaddw %ymm8,%ymm4,%ymm5                        #! PC = 0x555555557c19 *)
add ymm5_0 ymm4_0 ymm8_0;
add ymm5_1 ymm4_1 ymm8_1;
add ymm5_2 ymm4_2 ymm8_2;
add ymm5_3 ymm4_3 ymm8_3;
add ymm5_4 ymm4_4 ymm8_4;
add ymm5_5 ymm4_5 ymm8_5;
add ymm5_6 ymm4_6 ymm8_6;
add ymm5_7 ymm4_7 ymm8_7;
add ymm5_8 ymm4_8 ymm8_8;
add ymm5_9 ymm4_9 ymm8_9;
add ymm5_a ymm4_a ymm8_a;
add ymm5_b ymm4_b ymm8_b;
add ymm5_c ymm4_c ymm8_c;
add ymm5_d ymm4_d ymm8_d;
add ymm5_e ymm4_e ymm8_e;
add ymm5_f ymm4_f ymm8_f;
(* vpsubw %ymm8,%ymm4,%ymm8                        #! PC = 0x555555557c1e *)
sub ymm8_0 ymm4_0 ymm8_0;
sub ymm8_1 ymm4_1 ymm8_1;
sub ymm8_2 ymm4_2 ymm8_2;
sub ymm8_3 ymm4_3 ymm8_3;
sub ymm8_4 ymm4_4 ymm8_4;
sub ymm8_5 ymm4_5 ymm8_5;
sub ymm8_6 ymm4_6 ymm8_6;
sub ymm8_7 ymm4_7 ymm8_7;
sub ymm8_8 ymm4_8 ymm8_8;
sub ymm8_9 ymm4_9 ymm8_9;
sub ymm8_a ymm4_a ymm8_a;
sub ymm8_b ymm4_b ymm8_b;
sub ymm8_c ymm4_c ymm8_c;
sub ymm8_d ymm4_d ymm8_d;
sub ymm8_e ymm4_e ymm8_e;
sub ymm8_f ymm4_f ymm8_f;
(* vpaddw %ymm11,%ymm10,%ymm4                      #! PC = 0x555555557c23 *)
add ymm4_0 ymm10_0 ymm11_0;
add ymm4_1 ymm10_1 ymm11_1;
add ymm4_2 ymm10_2 ymm11_2;
add ymm4_3 ymm10_3 ymm11_3;
add ymm4_4 ymm10_4 ymm11_4;
add ymm4_5 ymm10_5 ymm11_5;
add ymm4_6 ymm10_6 ymm11_6;
add ymm4_7 ymm10_7 ymm11_7;
add ymm4_8 ymm10_8 ymm11_8;
add ymm4_9 ymm10_9 ymm11_9;
add ymm4_a ymm10_a ymm11_a;
add ymm4_b ymm10_b ymm11_b;
add ymm4_c ymm10_c ymm11_c;
add ymm4_d ymm10_d ymm11_d;
add ymm4_e ymm10_e ymm11_e;
add ymm4_f ymm10_f ymm11_f;
(* vpsubw %ymm11,%ymm10,%ymm11                     #! PC = 0x555555557c28 *)
sub ymm11_0 ymm10_0 ymm11_0;
sub ymm11_1 ymm10_1 ymm11_1;
sub ymm11_2 ymm10_2 ymm11_2;
sub ymm11_3 ymm10_3 ymm11_3;
sub ymm11_4 ymm10_4 ymm11_4;
sub ymm11_5 ymm10_5 ymm11_5;
sub ymm11_6 ymm10_6 ymm11_6;
sub ymm11_7 ymm10_7 ymm11_7;
sub ymm11_8 ymm10_8 ymm11_8;
sub ymm11_9 ymm10_9 ymm11_9;
sub ymm11_a ymm10_a ymm11_a;
sub ymm11_b ymm10_b ymm11_b;
sub ymm11_c ymm10_c ymm11_c;
sub ymm11_d ymm10_d ymm11_d;
sub ymm11_e ymm10_e ymm11_e;
sub ymm11_f ymm10_f ymm11_f;


(**************** LEVELS 3-5, 1 *****************)


(**************** CUT 147,  5 *****************)

rcut 
  and [
(-25815)@16<=s ymm9_0,ymm9_0<=s 25815@16,(-25815)@16<=s ymm9_1,ymm9_1<=s 25815@16,
(-25815)@16<=s ymm9_2,ymm9_2<=s 25815@16,(-25815)@16<=s ymm9_3,ymm9_3<=s 25815@16,
(-25815)@16<=s ymm9_4,ymm9_4<=s 25815@16,(-25815)@16<=s ymm9_5,ymm9_5<=s 25815@16,
(-25815)@16<=s ymm9_6,ymm9_6<=s 25815@16,(-25815)@16<=s ymm9_7,ymm9_7<=s 25815@16,
(-25815)@16<=s ymm9_8,ymm9_8<=s 25815@16,(-25815)@16<=s ymm9_9,ymm9_9<=s 25815@16,
(-25815)@16<=s ymm9_a,ymm9_a<=s 25815@16,(-25815)@16<=s ymm9_b,ymm9_b<=s 25815@16,
(-25815)@16<=s ymm9_c,ymm9_c<=s 25815@16,(-25815)@16<=s ymm9_d,ymm9_d<=s 25815@16,
(-25815)@16<=s ymm9_e,ymm9_e<=s 25815@16,(-25815)@16<=s ymm9_f,ymm9_f<=s 25815@16,
(-25815)@16<=s ymm3_0,ymm3_0<=s 25815@16,(-25815)@16<=s ymm3_1,ymm3_1<=s 25815@16,
(-25815)@16<=s ymm3_2,ymm3_2<=s 25815@16,(-25815)@16<=s ymm3_3,ymm3_3<=s 25815@16,
(-25815)@16<=s ymm3_4,ymm3_4<=s 25815@16,(-25815)@16<=s ymm3_5,ymm3_5<=s 25815@16,
(-25815)@16<=s ymm3_6,ymm3_6<=s 25815@16,(-25815)@16<=s ymm3_7,ymm3_7<=s 25815@16,
(-25815)@16<=s ymm3_8,ymm3_8<=s 25815@16,(-25815)@16<=s ymm3_9,ymm3_9<=s 25815@16,
(-25815)@16<=s ymm3_a,ymm3_a<=s 25815@16,(-25815)@16<=s ymm3_b,ymm3_b<=s 25815@16,
(-25815)@16<=s ymm3_c,ymm3_c<=s 25815@16,(-25815)@16<=s ymm3_d,ymm3_d<=s 25815@16,
(-25815)@16<=s ymm3_e,ymm3_e<=s 25815@16,(-25815)@16<=s ymm3_f,ymm3_f<=s 25815@16,
(-26183)@16<=s ymm7_0,ymm7_0<=s 26183@16,(-26183)@16<=s ymm7_1,ymm7_1<=s 26183@16,
(-26183)@16<=s ymm7_2,ymm7_2<=s 26183@16,(-26183)@16<=s ymm7_3,ymm7_3<=s 26183@16,
(-26183)@16<=s ymm7_4,ymm7_4<=s 26183@16,(-26183)@16<=s ymm7_5,ymm7_5<=s 26183@16,
(-26183)@16<=s ymm7_6,ymm7_6<=s 26183@16,(-26183)@16<=s ymm7_7,ymm7_7<=s 26183@16,
(-26183)@16<=s ymm7_8,ymm7_8<=s 26183@16,(-26183)@16<=s ymm7_9,ymm7_9<=s 26183@16,
(-26183)@16<=s ymm7_a,ymm7_a<=s 26183@16,(-26183)@16<=s ymm7_b,ymm7_b<=s 26183@16,
(-26183)@16<=s ymm7_c,ymm7_c<=s 26183@16,(-26183)@16<=s ymm7_d,ymm7_d<=s 26183@16,
(-26183)@16<=s ymm7_e,ymm7_e<=s 26183@16,(-26183)@16<=s ymm7_f,ymm7_f<=s 26183@16,
(-26183)@16<=s ymm6_0,ymm6_0<=s 26183@16,(-26183)@16<=s ymm6_1,ymm6_1<=s 26183@16,
(-26183)@16<=s ymm6_2,ymm6_2<=s 26183@16,(-26183)@16<=s ymm6_3,ymm6_3<=s 26183@16,
(-26183)@16<=s ymm6_4,ymm6_4<=s 26183@16,(-26183)@16<=s ymm6_5,ymm6_5<=s 26183@16,
(-26183)@16<=s ymm6_6,ymm6_6<=s 26183@16,(-26183)@16<=s ymm6_7,ymm6_7<=s 26183@16,
(-26183)@16<=s ymm6_8,ymm6_8<=s 26183@16,(-26183)@16<=s ymm6_9,ymm6_9<=s 26183@16,
(-26183)@16<=s ymm6_a,ymm6_a<=s 26183@16,(-26183)@16<=s ymm6_b,ymm6_b<=s 26183@16,
(-26183)@16<=s ymm6_c,ymm6_c<=s 26183@16,(-26183)@16<=s ymm6_d,ymm6_d<=s 26183@16,
(-26183)@16<=s ymm6_e,ymm6_e<=s 26183@16,(-26183)@16<=s ymm6_f,ymm6_f<=s 26183@16,
(-25210)@16<=s ymm5_0,ymm5_0<=s 25210@16,(-25210)@16<=s ymm5_1,ymm5_1<=s 25210@16,
(-25210)@16<=s ymm5_2,ymm5_2<=s 25210@16,(-25210)@16<=s ymm5_3,ymm5_3<=s 25210@16,
(-25210)@16<=s ymm5_4,ymm5_4<=s 25210@16,(-25210)@16<=s ymm5_5,ymm5_5<=s 25210@16,
(-25210)@16<=s ymm5_6,ymm5_6<=s 25210@16,(-25210)@16<=s ymm5_7,ymm5_7<=s 25210@16,
(-25210)@16<=s ymm5_8,ymm5_8<=s 25210@16,(-25210)@16<=s ymm5_9,ymm5_9<=s 25210@16,
(-25210)@16<=s ymm5_a,ymm5_a<=s 25210@16,(-25210)@16<=s ymm5_b,ymm5_b<=s 25210@16,
(-25210)@16<=s ymm5_c,ymm5_c<=s 25210@16,(-25210)@16<=s ymm5_d,ymm5_d<=s 25210@16,
(-25210)@16<=s ymm5_e,ymm5_e<=s 25210@16,(-25210)@16<=s ymm5_f,ymm5_f<=s 25210@16,
(-25210)@16<=s ymm8_0,ymm8_0<=s 25210@16,(-25210)@16<=s ymm8_1,ymm8_1<=s 25210@16,
(-25210)@16<=s ymm8_2,ymm8_2<=s 25210@16,(-25210)@16<=s ymm8_3,ymm8_3<=s 25210@16,
(-25210)@16<=s ymm8_4,ymm8_4<=s 25210@16,(-25210)@16<=s ymm8_5,ymm8_5<=s 25210@16,
(-25210)@16<=s ymm8_6,ymm8_6<=s 25210@16,(-25210)@16<=s ymm8_7,ymm8_7<=s 25210@16,
(-25210)@16<=s ymm8_8,ymm8_8<=s 25210@16,(-25210)@16<=s ymm8_9,ymm8_9<=s 25210@16,
(-25210)@16<=s ymm8_a,ymm8_a<=s 25210@16,(-25210)@16<=s ymm8_b,ymm8_b<=s 25210@16,
(-25210)@16<=s ymm8_c,ymm8_c<=s 25210@16,(-25210)@16<=s ymm8_d,ymm8_d<=s 25210@16,
(-25210)@16<=s ymm8_e,ymm8_e<=s 25210@16,(-25210)@16<=s ymm8_f,ymm8_f<=s 25210@16,
(-25220)@16<=s ymm4_0,ymm4_0<=s 25220@16,(-25220)@16<=s ymm4_1,ymm4_1<=s 25220@16,
(-25220)@16<=s ymm4_2,ymm4_2<=s 25220@16,(-25220)@16<=s ymm4_3,ymm4_3<=s 25220@16,
(-25220)@16<=s ymm4_4,ymm4_4<=s 25220@16,(-25220)@16<=s ymm4_5,ymm4_5<=s 25220@16,
(-25220)@16<=s ymm4_6,ymm4_6<=s 25220@16,(-25220)@16<=s ymm4_7,ymm4_7<=s 25220@16,
(-25220)@16<=s ymm4_8,ymm4_8<=s 25220@16,(-25220)@16<=s ymm4_9,ymm4_9<=s 25220@16,
(-25220)@16<=s ymm4_a,ymm4_a<=s 25220@16,(-25220)@16<=s ymm4_b,ymm4_b<=s 25220@16,
(-25220)@16<=s ymm4_c,ymm4_c<=s 25220@16,(-25220)@16<=s ymm4_d,ymm4_d<=s 25220@16,
(-25220)@16<=s ymm4_e,ymm4_e<=s 25220@16,(-25220)@16<=s ymm4_f,ymm4_f<=s 25220@16,
(-25220)@16<=s ymm11_0,ymm11_0<=s 25220@16,(-25220)@16<=s ymm11_1,ymm11_1<=s 25220@16,
(-25220)@16<=s ymm11_2,ymm11_2<=s 25220@16,(-25220)@16<=s ymm11_3,ymm11_3<=s 25220@16,
(-25220)@16<=s ymm11_4,ymm11_4<=s 25220@16,(-25220)@16<=s ymm11_5,ymm11_5<=s 25220@16,
(-25220)@16<=s ymm11_6,ymm11_6<=s 25220@16,(-25220)@16<=s ymm11_7,ymm11_7<=s 25220@16,
(-25220)@16<=s ymm11_8,ymm11_8<=s 25220@16,(-25220)@16<=s ymm11_9,ymm11_9<=s 25220@16,
(-25220)@16<=s ymm11_a,ymm11_a<=s 25220@16,(-25220)@16<=s ymm11_b,ymm11_b<=s 25220@16,
(-25220)@16<=s ymm11_c,ymm11_c<=s 25220@16,(-25220)@16<=s ymm11_d,ymm11_d<=s 25220@16,
(-25220)@16<=s ymm11_e,ymm11_e<=s 25220@16,(-25220)@16<=s ymm11_f,ymm11_f<=s 25220@16
] prove with [ all ghosts, cuts [ 0 ] ];



(* vmovdqa 0x94ab(%rip),%ymm1        # 0x5555555610e0 <nttmul_idxdata+64>#! EA = L0x5555555610e0; Value = 0x0d0c090805040100; PC = 0x555555557c2d *)
mov ymm1_0 L0x5555555610e0;
mov ymm1_1 L0x5555555610e2;
mov ymm1_2 L0x5555555610e4;
mov ymm1_3 L0x5555555610e6;
mov ymm1_4 L0x5555555610e8;
mov ymm1_5 L0x5555555610ea;
mov ymm1_6 L0x5555555610ec;
mov ymm1_7 L0x5555555610ee;
mov ymm1_8 L0x5555555610f0;
mov ymm1_9 L0x5555555610f2;
mov ymm1_a L0x5555555610f4;
mov ymm1_b L0x5555555610f6;
mov ymm1_c L0x5555555610f8;
mov ymm1_d L0x5555555610fa;
mov ymm1_e L0x5555555610fc;
mov ymm1_f L0x5555555610fe;
(* vpshufb %ymm1,%ymm9,%ymm9                       #! PC = 0x555555557c35 *)
assert true && ymm1_0 = 0x0100@16;
mov shuf_0 ymm9_0;
assert true && ymm1_1 = 0x0504@16;
mov shuf_1 ymm9_2;
assert true && ymm1_2 = 0x0908@16;
mov shuf_2 ymm9_4;
assert true && ymm1_3 = 0x0d0c@16;
mov shuf_3 ymm9_6;
assert true && ymm1_4 = 0x0302@16;
mov shuf_4 ymm9_1;
assert true && ymm1_5 = 0x0706@16;
mov shuf_5 ymm9_3;
assert true && ymm1_6 = 0x0b0a@16;
mov shuf_6 ymm9_5;
assert true && ymm1_7 = 0x0f0e@16;
mov shuf_7 ymm9_7;
assert true && ymm1_8 = 0x0100@16;
mov shuf_8 ymm9_8;
assert true && ymm1_9 = 0x0504@16;
mov shuf_9 ymm9_a;
assert true && ymm1_a = 0x0908@16;
mov shuf_a ymm9_c;
assert true && ymm1_b = 0x0d0c@16;
mov shuf_b ymm9_e;
assert true && ymm1_c = 0x0302@16;
mov shuf_c ymm9_9;
assert true && ymm1_d = 0x0706@16;
mov shuf_d ymm9_b;
assert true && ymm1_e = 0x0b0a@16;
mov shuf_e ymm9_d;
assert true && ymm1_f = 0x0f0e@16;
mov shuf_f ymm9_f;
mov ymm9_0 shuf_0;
mov ymm9_1 shuf_1;
mov ymm9_2 shuf_2;
mov ymm9_3 shuf_3;
mov ymm9_4 shuf_4;
mov ymm9_5 shuf_5;
mov ymm9_6 shuf_6;
mov ymm9_7 shuf_7;
mov ymm9_8 shuf_8;
mov ymm9_9 shuf_9;
mov ymm9_a shuf_a;
mov ymm9_b shuf_b;
mov ymm9_c shuf_c;
mov ymm9_d shuf_d;
mov ymm9_e shuf_e;
mov ymm9_f shuf_f;
(* vpermq $0xd8,%ymm9,%ymm9                        #! PC = 0x555555557c3a *)
mov permq_0 ymm9_0;
mov permq_1 ymm9_1;
mov permq_2 ymm9_2;
mov permq_3 ymm9_3;
mov permq_4 ymm9_8;
mov permq_5 ymm9_9;
mov permq_6 ymm9_a;
mov permq_7 ymm9_b;
mov permq_8 ymm9_4;
mov permq_9 ymm9_5;
mov permq_a ymm9_6;
mov permq_b ymm9_7;
mov permq_c ymm9_c;
mov permq_d ymm9_d;
mov permq_e ymm9_e;
mov permq_f ymm9_f;
mov ymm9_0 permq_0;
mov ymm9_1 permq_1;
mov ymm9_2 permq_2;
mov ymm9_3 permq_3;
mov ymm9_4 permq_4;
mov ymm9_5 permq_5;
mov ymm9_6 permq_6;
mov ymm9_7 permq_7;
mov ymm9_8 permq_8;
mov ymm9_9 permq_9;
mov ymm9_a permq_a;
mov ymm9_b permq_b;
mov ymm9_c permq_c;
mov ymm9_d permq_d;
mov ymm9_e permq_e;
mov ymm9_f permq_f;
(* vpshufb %ymm1,%ymm3,%ymm3                       #! PC = 0x555555557c40 *)
assert true && ymm1_0 = 0x0100@16;
mov shuf_0 ymm3_0;
assert true && ymm1_1 = 0x0504@16;
mov shuf_1 ymm3_2;
assert true && ymm1_2 = 0x0908@16;
mov shuf_2 ymm3_4;
assert true && ymm1_3 = 0x0d0c@16;
mov shuf_3 ymm3_6;
assert true && ymm1_4 = 0x0302@16;
mov shuf_4 ymm3_1;
assert true && ymm1_5 = 0x0706@16;
mov shuf_5 ymm3_3;
assert true && ymm1_6 = 0x0b0a@16;
mov shuf_6 ymm3_5;
assert true && ymm1_7 = 0x0f0e@16;
mov shuf_7 ymm3_7;
assert true && ymm1_8 = 0x0100@16;
mov shuf_8 ymm3_8;
assert true && ymm1_9 = 0x0504@16;
mov shuf_9 ymm3_a;
assert true && ymm1_a = 0x0908@16;
mov shuf_a ymm3_c;
assert true && ymm1_b = 0x0d0c@16;
mov shuf_b ymm3_e;
assert true && ymm1_c = 0x0302@16;
mov shuf_c ymm3_9;
assert true && ymm1_d = 0x0706@16;
mov shuf_d ymm3_b;
assert true && ymm1_e = 0x0b0a@16;
mov shuf_e ymm3_d;
assert true && ymm1_f = 0x0f0e@16;
mov shuf_f ymm3_f;
mov ymm3_0 shuf_0;
mov ymm3_1 shuf_1;
mov ymm3_2 shuf_2;
mov ymm3_3 shuf_3;
mov ymm3_4 shuf_4;
mov ymm3_5 shuf_5;
mov ymm3_6 shuf_6;
mov ymm3_7 shuf_7;
mov ymm3_8 shuf_8;
mov ymm3_9 shuf_9;
mov ymm3_a shuf_a;
mov ymm3_b shuf_b;
mov ymm3_c shuf_c;
mov ymm3_d shuf_d;
mov ymm3_e shuf_e;
mov ymm3_f shuf_f;
(* vpermq $0xd8,%ymm3,%ymm3                        #! PC = 0x555555557c45 *)
mov permq_0 ymm3_0;
mov permq_1 ymm3_1;
mov permq_2 ymm3_2;
mov permq_3 ymm3_3;
mov permq_4 ymm3_8;
mov permq_5 ymm3_9;
mov permq_6 ymm3_a;
mov permq_7 ymm3_b;
mov permq_8 ymm3_4;
mov permq_9 ymm3_5;
mov permq_a ymm3_6;
mov permq_b ymm3_7;
mov permq_c ymm3_c;
mov permq_d ymm3_d;
mov permq_e ymm3_e;
mov permq_f ymm3_f;
mov ymm3_0 permq_0;
mov ymm3_1 permq_1;
mov ymm3_2 permq_2;
mov ymm3_3 permq_3;
mov ymm3_4 permq_4;
mov ymm3_5 permq_5;
mov ymm3_6 permq_6;
mov ymm3_7 permq_7;
mov ymm3_8 permq_8;
mov ymm3_9 permq_9;
mov ymm3_a permq_a;
mov ymm3_b permq_b;
mov ymm3_c permq_c;
mov ymm3_d permq_d;
mov ymm3_e permq_e;
mov ymm3_f permq_f;
(* vpshufb %ymm1,%ymm7,%ymm7                       #! PC = 0x555555557c4b *)
assert true && ymm1_0 = 0x0100@16;
mov shuf_0 ymm7_0;
assert true && ymm1_1 = 0x0504@16;
mov shuf_1 ymm7_2;
assert true && ymm1_2 = 0x0908@16;
mov shuf_2 ymm7_4;
assert true && ymm1_3 = 0x0d0c@16;
mov shuf_3 ymm7_6;
assert true && ymm1_4 = 0x0302@16;
mov shuf_4 ymm7_1;
assert true && ymm1_5 = 0x0706@16;
mov shuf_5 ymm7_3;
assert true && ymm1_6 = 0x0b0a@16;
mov shuf_6 ymm7_5;
assert true && ymm1_7 = 0x0f0e@16;
mov shuf_7 ymm7_7;
assert true && ymm1_8 = 0x0100@16;
mov shuf_8 ymm7_8;
assert true && ymm1_9 = 0x0504@16;
mov shuf_9 ymm7_a;
assert true && ymm1_a = 0x0908@16;
mov shuf_a ymm7_c;
assert true && ymm1_b = 0x0d0c@16;
mov shuf_b ymm7_e;
assert true && ymm1_c = 0x0302@16;
mov shuf_c ymm7_9;
assert true && ymm1_d = 0x0706@16;
mov shuf_d ymm7_b;
assert true && ymm1_e = 0x0b0a@16;
mov shuf_e ymm7_d;
assert true && ymm1_f = 0x0f0e@16;
mov shuf_f ymm7_f;
mov ymm7_0 shuf_0;
mov ymm7_1 shuf_1;
mov ymm7_2 shuf_2;
mov ymm7_3 shuf_3;
mov ymm7_4 shuf_4;
mov ymm7_5 shuf_5;
mov ymm7_6 shuf_6;
mov ymm7_7 shuf_7;
mov ymm7_8 shuf_8;
mov ymm7_9 shuf_9;
mov ymm7_a shuf_a;
mov ymm7_b shuf_b;
mov ymm7_c shuf_c;
mov ymm7_d shuf_d;
mov ymm7_e shuf_e;
mov ymm7_f shuf_f;
(* vpermq $0xd8,%ymm7,%ymm7                        #! PC = 0x555555557c50 *)
mov permq_0 ymm7_0;
mov permq_1 ymm7_1;
mov permq_2 ymm7_2;
mov permq_3 ymm7_3;
mov permq_4 ymm7_8;
mov permq_5 ymm7_9;
mov permq_6 ymm7_a;
mov permq_7 ymm7_b;
mov permq_8 ymm7_4;
mov permq_9 ymm7_5;
mov permq_a ymm7_6;
mov permq_b ymm7_7;
mov permq_c ymm7_c;
mov permq_d ymm7_d;
mov permq_e ymm7_e;
mov permq_f ymm7_f;
mov ymm7_0 permq_0;
mov ymm7_1 permq_1;
mov ymm7_2 permq_2;
mov ymm7_3 permq_3;
mov ymm7_4 permq_4;
mov ymm7_5 permq_5;
mov ymm7_6 permq_6;
mov ymm7_7 permq_7;
mov ymm7_8 permq_8;
mov ymm7_9 permq_9;
mov ymm7_a permq_a;
mov ymm7_b permq_b;
mov ymm7_c permq_c;
mov ymm7_d permq_d;
mov ymm7_e permq_e;
mov ymm7_f permq_f;
(* vpshufb %ymm1,%ymm6,%ymm6                       #! PC = 0x555555557c56 *)
assert true && ymm1_0 = 0x0100@16;
mov shuf_0 ymm6_0;
assert true && ymm1_1 = 0x0504@16;
mov shuf_1 ymm6_2;
assert true && ymm1_2 = 0x0908@16;
mov shuf_2 ymm6_4;
assert true && ymm1_3 = 0x0d0c@16;
mov shuf_3 ymm6_6;
assert true && ymm1_4 = 0x0302@16;
mov shuf_4 ymm6_1;
assert true && ymm1_5 = 0x0706@16;
mov shuf_5 ymm6_3;
assert true && ymm1_6 = 0x0b0a@16;
mov shuf_6 ymm6_5;
assert true && ymm1_7 = 0x0f0e@16;
mov shuf_7 ymm6_7;
assert true && ymm1_8 = 0x0100@16;
mov shuf_8 ymm6_8;
assert true && ymm1_9 = 0x0504@16;
mov shuf_9 ymm6_a;
assert true && ymm1_a = 0x0908@16;
mov shuf_a ymm6_c;
assert true && ymm1_b = 0x0d0c@16;
mov shuf_b ymm6_e;
assert true && ymm1_c = 0x0302@16;
mov shuf_c ymm6_9;
assert true && ymm1_d = 0x0706@16;
mov shuf_d ymm6_b;
assert true && ymm1_e = 0x0b0a@16;
mov shuf_e ymm6_d;
assert true && ymm1_f = 0x0f0e@16;
mov shuf_f ymm6_f;
mov ymm6_0 shuf_0;
mov ymm6_1 shuf_1;
mov ymm6_2 shuf_2;
mov ymm6_3 shuf_3;
mov ymm6_4 shuf_4;
mov ymm6_5 shuf_5;
mov ymm6_6 shuf_6;
mov ymm6_7 shuf_7;
mov ymm6_8 shuf_8;
mov ymm6_9 shuf_9;
mov ymm6_a shuf_a;
mov ymm6_b shuf_b;
mov ymm6_c shuf_c;
mov ymm6_d shuf_d;
mov ymm6_e shuf_e;
mov ymm6_f shuf_f;
(* vpermq $0xd8,%ymm6,%ymm6                        #! PC = 0x555555557c5b *)
mov permq_0 ymm6_0;
mov permq_1 ymm6_1;
mov permq_2 ymm6_2;
mov permq_3 ymm6_3;
mov permq_4 ymm6_8;
mov permq_5 ymm6_9;
mov permq_6 ymm6_a;
mov permq_7 ymm6_b;
mov permq_8 ymm6_4;
mov permq_9 ymm6_5;
mov permq_a ymm6_6;
mov permq_b ymm6_7;
mov permq_c ymm6_c;
mov permq_d ymm6_d;
mov permq_e ymm6_e;
mov permq_f ymm6_f;
mov ymm6_0 permq_0;
mov ymm6_1 permq_1;
mov ymm6_2 permq_2;
mov ymm6_3 permq_3;
mov ymm6_4 permq_4;
mov ymm6_5 permq_5;
mov ymm6_6 permq_6;
mov ymm6_7 permq_7;
mov ymm6_8 permq_8;
mov ymm6_9 permq_9;
mov ymm6_a permq_a;
mov ymm6_b permq_b;
mov ymm6_c permq_c;
mov ymm6_d permq_d;
mov ymm6_e permq_e;
mov ymm6_f permq_f;
(* vpshufb %ymm1,%ymm5,%ymm5                       #! PC = 0x555555557c61 *)
assert true && ymm1_0 = 0x0100@16;
mov shuf_0 ymm5_0;
assert true && ymm1_1 = 0x0504@16;
mov shuf_1 ymm5_2;
assert true && ymm1_2 = 0x0908@16;
mov shuf_2 ymm5_4;
assert true && ymm1_3 = 0x0d0c@16;
mov shuf_3 ymm5_6;
assert true && ymm1_4 = 0x0302@16;
mov shuf_4 ymm5_1;
assert true && ymm1_5 = 0x0706@16;
mov shuf_5 ymm5_3;
assert true && ymm1_6 = 0x0b0a@16;
mov shuf_6 ymm5_5;
assert true && ymm1_7 = 0x0f0e@16;
mov shuf_7 ymm5_7;
assert true && ymm1_8 = 0x0100@16;
mov shuf_8 ymm5_8;
assert true && ymm1_9 = 0x0504@16;
mov shuf_9 ymm5_a;
assert true && ymm1_a = 0x0908@16;
mov shuf_a ymm5_c;
assert true && ymm1_b = 0x0d0c@16;
mov shuf_b ymm5_e;
assert true && ymm1_c = 0x0302@16;
mov shuf_c ymm5_9;
assert true && ymm1_d = 0x0706@16;
mov shuf_d ymm5_b;
assert true && ymm1_e = 0x0b0a@16;
mov shuf_e ymm5_d;
assert true && ymm1_f = 0x0f0e@16;
mov shuf_f ymm5_f;
mov ymm5_0 shuf_0;
mov ymm5_1 shuf_1;
mov ymm5_2 shuf_2;
mov ymm5_3 shuf_3;
mov ymm5_4 shuf_4;
mov ymm5_5 shuf_5;
mov ymm5_6 shuf_6;
mov ymm5_7 shuf_7;
mov ymm5_8 shuf_8;
mov ymm5_9 shuf_9;
mov ymm5_a shuf_a;
mov ymm5_b shuf_b;
mov ymm5_c shuf_c;
mov ymm5_d shuf_d;
mov ymm5_e shuf_e;
mov ymm5_f shuf_f;
(* vpermq $0xd8,%ymm5,%ymm5                        #! PC = 0x555555557c66 *)
mov permq_0 ymm5_0;
mov permq_1 ymm5_1;
mov permq_2 ymm5_2;
mov permq_3 ymm5_3;
mov permq_4 ymm5_8;
mov permq_5 ymm5_9;
mov permq_6 ymm5_a;
mov permq_7 ymm5_b;
mov permq_8 ymm5_4;
mov permq_9 ymm5_5;
mov permq_a ymm5_6;
mov permq_b ymm5_7;
mov permq_c ymm5_c;
mov permq_d ymm5_d;
mov permq_e ymm5_e;
mov permq_f ymm5_f;
mov ymm5_0 permq_0;
mov ymm5_1 permq_1;
mov ymm5_2 permq_2;
mov ymm5_3 permq_3;
mov ymm5_4 permq_4;
mov ymm5_5 permq_5;
mov ymm5_6 permq_6;
mov ymm5_7 permq_7;
mov ymm5_8 permq_8;
mov ymm5_9 permq_9;
mov ymm5_a permq_a;
mov ymm5_b permq_b;
mov ymm5_c permq_c;
mov ymm5_d permq_d;
mov ymm5_e permq_e;
mov ymm5_f permq_f;
(* vpshufb %ymm1,%ymm8,%ymm8                       #! PC = 0x555555557c6c *)
assert true && ymm1_0 = 0x0100@16;
mov shuf_0 ymm8_0;
assert true && ymm1_1 = 0x0504@16;
mov shuf_1 ymm8_2;
assert true && ymm1_2 = 0x0908@16;
mov shuf_2 ymm8_4;
assert true && ymm1_3 = 0x0d0c@16;
mov shuf_3 ymm8_6;
assert true && ymm1_4 = 0x0302@16;
mov shuf_4 ymm8_1;
assert true && ymm1_5 = 0x0706@16;
mov shuf_5 ymm8_3;
assert true && ymm1_6 = 0x0b0a@16;
mov shuf_6 ymm8_5;
assert true && ymm1_7 = 0x0f0e@16;
mov shuf_7 ymm8_7;
assert true && ymm1_8 = 0x0100@16;
mov shuf_8 ymm8_8;
assert true && ymm1_9 = 0x0504@16;
mov shuf_9 ymm8_a;
assert true && ymm1_a = 0x0908@16;
mov shuf_a ymm8_c;
assert true && ymm1_b = 0x0d0c@16;
mov shuf_b ymm8_e;
assert true && ymm1_c = 0x0302@16;
mov shuf_c ymm8_9;
assert true && ymm1_d = 0x0706@16;
mov shuf_d ymm8_b;
assert true && ymm1_e = 0x0b0a@16;
mov shuf_e ymm8_d;
assert true && ymm1_f = 0x0f0e@16;
mov shuf_f ymm8_f;
mov ymm8_0 shuf_0;
mov ymm8_1 shuf_1;
mov ymm8_2 shuf_2;
mov ymm8_3 shuf_3;
mov ymm8_4 shuf_4;
mov ymm8_5 shuf_5;
mov ymm8_6 shuf_6;
mov ymm8_7 shuf_7;
mov ymm8_8 shuf_8;
mov ymm8_9 shuf_9;
mov ymm8_a shuf_a;
mov ymm8_b shuf_b;
mov ymm8_c shuf_c;
mov ymm8_d shuf_d;
mov ymm8_e shuf_e;
mov ymm8_f shuf_f;
(* vpermq $0xd8,%ymm8,%ymm8                        #! PC = 0x555555557c71 *)
mov permq_0 ymm8_0;
mov permq_1 ymm8_1;
mov permq_2 ymm8_2;
mov permq_3 ymm8_3;
mov permq_4 ymm8_8;
mov permq_5 ymm8_9;
mov permq_6 ymm8_a;
mov permq_7 ymm8_b;
mov permq_8 ymm8_4;
mov permq_9 ymm8_5;
mov permq_a ymm8_6;
mov permq_b ymm8_7;
mov permq_c ymm8_c;
mov permq_d ymm8_d;
mov permq_e ymm8_e;
mov permq_f ymm8_f;
mov ymm8_0 permq_0;
mov ymm8_1 permq_1;
mov ymm8_2 permq_2;
mov ymm8_3 permq_3;
mov ymm8_4 permq_4;
mov ymm8_5 permq_5;
mov ymm8_6 permq_6;
mov ymm8_7 permq_7;
mov ymm8_8 permq_8;
mov ymm8_9 permq_9;
mov ymm8_a permq_a;
mov ymm8_b permq_b;
mov ymm8_c permq_c;
mov ymm8_d permq_d;
mov ymm8_e permq_e;
mov ymm8_f permq_f;
(* vpshufb %ymm1,%ymm4,%ymm4                       #! PC = 0x555555557c77 *)
assert true && ymm1_0 = 0x0100@16;
mov shuf_0 ymm4_0;
assert true && ymm1_1 = 0x0504@16;
mov shuf_1 ymm4_2;
assert true && ymm1_2 = 0x0908@16;
mov shuf_2 ymm4_4;
assert true && ymm1_3 = 0x0d0c@16;
mov shuf_3 ymm4_6;
assert true && ymm1_4 = 0x0302@16;
mov shuf_4 ymm4_1;
assert true && ymm1_5 = 0x0706@16;
mov shuf_5 ymm4_3;
assert true && ymm1_6 = 0x0b0a@16;
mov shuf_6 ymm4_5;
assert true && ymm1_7 = 0x0f0e@16;
mov shuf_7 ymm4_7;
assert true && ymm1_8 = 0x0100@16;
mov shuf_8 ymm4_8;
assert true && ymm1_9 = 0x0504@16;
mov shuf_9 ymm4_a;
assert true && ymm1_a = 0x0908@16;
mov shuf_a ymm4_c;
assert true && ymm1_b = 0x0d0c@16;
mov shuf_b ymm4_e;
assert true && ymm1_c = 0x0302@16;
mov shuf_c ymm4_9;
assert true && ymm1_d = 0x0706@16;
mov shuf_d ymm4_b;
assert true && ymm1_e = 0x0b0a@16;
mov shuf_e ymm4_d;
assert true && ymm1_f = 0x0f0e@16;
mov shuf_f ymm4_f;
mov ymm4_0 shuf_0;
mov ymm4_1 shuf_1;
mov ymm4_2 shuf_2;
mov ymm4_3 shuf_3;
mov ymm4_4 shuf_4;
mov ymm4_5 shuf_5;
mov ymm4_6 shuf_6;
mov ymm4_7 shuf_7;
mov ymm4_8 shuf_8;
mov ymm4_9 shuf_9;
mov ymm4_a shuf_a;
mov ymm4_b shuf_b;
mov ymm4_c shuf_c;
mov ymm4_d shuf_d;
mov ymm4_e shuf_e;
mov ymm4_f shuf_f;
(* vpermq $0xd8,%ymm4,%ymm4                        #! PC = 0x555555557c7c *)
mov permq_0 ymm4_0;
mov permq_1 ymm4_1;
mov permq_2 ymm4_2;
mov permq_3 ymm4_3;
mov permq_4 ymm4_8;
mov permq_5 ymm4_9;
mov permq_6 ymm4_a;
mov permq_7 ymm4_b;
mov permq_8 ymm4_4;
mov permq_9 ymm4_5;
mov permq_a ymm4_6;
mov permq_b ymm4_7;
mov permq_c ymm4_c;
mov permq_d ymm4_d;
mov permq_e ymm4_e;
mov permq_f ymm4_f;
mov ymm4_0 permq_0;
mov ymm4_1 permq_1;
mov ymm4_2 permq_2;
mov ymm4_3 permq_3;
mov ymm4_4 permq_4;
mov ymm4_5 permq_5;
mov ymm4_6 permq_6;
mov ymm4_7 permq_7;
mov ymm4_8 permq_8;
mov ymm4_9 permq_9;
mov ymm4_a permq_a;
mov ymm4_b permq_b;
mov ymm4_c permq_c;
mov ymm4_d permq_d;
mov ymm4_e permq_e;
mov ymm4_f permq_f;
(* vpshufb %ymm1,%ymm11,%ymm11                     #! PC = 0x555555557c82 *)
assert true && ymm1_0 = 0x0100@16;
mov shuf_0 ymm11_0;
assert true && ymm1_1 = 0x0504@16;
mov shuf_1 ymm11_2;
assert true && ymm1_2 = 0x0908@16;
mov shuf_2 ymm11_4;
assert true && ymm1_3 = 0x0d0c@16;
mov shuf_3 ymm11_6;
assert true && ymm1_4 = 0x0302@16;
mov shuf_4 ymm11_1;
assert true && ymm1_5 = 0x0706@16;
mov shuf_5 ymm11_3;
assert true && ymm1_6 = 0x0b0a@16;
mov shuf_6 ymm11_5;
assert true && ymm1_7 = 0x0f0e@16;
mov shuf_7 ymm11_7;
assert true && ymm1_8 = 0x0100@16;
mov shuf_8 ymm11_8;
assert true && ymm1_9 = 0x0504@16;
mov shuf_9 ymm11_a;
assert true && ymm1_a = 0x0908@16;
mov shuf_a ymm11_c;
assert true && ymm1_b = 0x0d0c@16;
mov shuf_b ymm11_e;
assert true && ymm1_c = 0x0302@16;
mov shuf_c ymm11_9;
assert true && ymm1_d = 0x0706@16;
mov shuf_d ymm11_b;
assert true && ymm1_e = 0x0b0a@16;
mov shuf_e ymm11_d;
assert true && ymm1_f = 0x0f0e@16;
mov shuf_f ymm11_f;
mov ymm11_0 shuf_0;
mov ymm11_1 shuf_1;
mov ymm11_2 shuf_2;
mov ymm11_3 shuf_3;
mov ymm11_4 shuf_4;
mov ymm11_5 shuf_5;
mov ymm11_6 shuf_6;
mov ymm11_7 shuf_7;
mov ymm11_8 shuf_8;
mov ymm11_9 shuf_9;
mov ymm11_a shuf_a;
mov ymm11_b shuf_b;
mov ymm11_c shuf_c;
mov ymm11_d shuf_d;
mov ymm11_e shuf_e;
mov ymm11_f shuf_f;
(* vpermq $0xd8,%ymm11,%ymm11                      #! PC = 0x555555557c87 *)
mov permq_0 ymm11_0;
mov permq_1 ymm11_1;
mov permq_2 ymm11_2;
mov permq_3 ymm11_3;
mov permq_4 ymm11_8;
mov permq_5 ymm11_9;
mov permq_6 ymm11_a;
mov permq_7 ymm11_b;
mov permq_8 ymm11_4;
mov permq_9 ymm11_5;
mov permq_a ymm11_6;
mov permq_b ymm11_7;
mov permq_c ymm11_c;
mov permq_d ymm11_d;
mov permq_e ymm11_e;
mov permq_f ymm11_f;
mov ymm11_0 permq_0;
mov ymm11_1 permq_1;
mov ymm11_2 permq_2;
mov ymm11_3 permq_3;
mov ymm11_4 permq_4;
mov ymm11_5 permq_5;
mov ymm11_6 permq_6;
mov ymm11_7 permq_7;
mov ymm11_8 permq_8;
mov ymm11_9 permq_9;
mov ymm11_a permq_a;
mov ymm11_b permq_b;
mov ymm11_c permq_c;
mov ymm11_d permq_d;
mov ymm11_e permq_e;
mov ymm11_f permq_f;
(* vpunpcklwd %ymm3,%ymm9,%ymm10                   #! PC = 0x555555557c8d *)
mov lwd_0 ymm9_0;
mov lwd_1 ymm3_0;
mov lwd_2 ymm9_1;
mov lwd_3 ymm3_1;
mov lwd_4 ymm9_2;
mov lwd_5 ymm3_2;
mov lwd_6 ymm9_3;
mov lwd_7 ymm3_3;
mov lwd_8 ymm9_8;
mov lwd_9 ymm3_8;
mov lwd_a ymm9_9;
mov lwd_b ymm3_9;
mov lwd_c ymm9_a;
mov lwd_d ymm3_a;
mov lwd_e ymm9_b;
mov lwd_f ymm3_b;
mov ymm10_0 lwd_0;
mov ymm10_1 lwd_1;
mov ymm10_2 lwd_2;
mov ymm10_3 lwd_3;
mov ymm10_4 lwd_4;
mov ymm10_5 lwd_5;
mov ymm10_6 lwd_6;
mov ymm10_7 lwd_7;
mov ymm10_8 lwd_8;
mov ymm10_9 lwd_9;
mov ymm10_a lwd_a;
mov ymm10_b lwd_b;
mov ymm10_c lwd_c;
mov ymm10_d lwd_d;
mov ymm10_e lwd_e;
mov ymm10_f lwd_f;
(* vpunpckhwd %ymm3,%ymm9,%ymm3                    #! PC = 0x555555557c91 *)
mov hwd_0 ymm9_4;
mov hwd_1 ymm3_4;
mov hwd_2 ymm9_5;
mov hwd_3 ymm3_5;
mov hwd_4 ymm9_6;
mov hwd_5 ymm3_6;
mov hwd_6 ymm9_7;
mov hwd_7 ymm3_7;
mov hwd_8 ymm9_c;
mov hwd_9 ymm3_c;
mov hwd_a ymm9_d;
mov hwd_b ymm3_d;
mov hwd_c ymm9_e;
mov hwd_d ymm3_e;
mov hwd_e ymm9_f;
mov hwd_f ymm3_f;
mov ymm3_0 hwd_0;
mov ymm3_1 hwd_1;
mov ymm3_2 hwd_2;
mov ymm3_3 hwd_3;
mov ymm3_4 hwd_4;
mov ymm3_5 hwd_5;
mov ymm3_6 hwd_6;
mov ymm3_7 hwd_7;
mov ymm3_8 hwd_8;
mov ymm3_9 hwd_9;
mov ymm3_a hwd_a;
mov ymm3_b hwd_b;
mov ymm3_c hwd_c;
mov ymm3_d hwd_d;
mov ymm3_e hwd_e;
mov ymm3_f hwd_f;
(* vpunpcklwd %ymm6,%ymm7,%ymm9                    #! PC = 0x555555557c95 *)
mov lwd_0 ymm7_0;
mov lwd_1 ymm6_0;
mov lwd_2 ymm7_1;
mov lwd_3 ymm6_1;
mov lwd_4 ymm7_2;
mov lwd_5 ymm6_2;
mov lwd_6 ymm7_3;
mov lwd_7 ymm6_3;
mov lwd_8 ymm7_8;
mov lwd_9 ymm6_8;
mov lwd_a ymm7_9;
mov lwd_b ymm6_9;
mov lwd_c ymm7_a;
mov lwd_d ymm6_a;
mov lwd_e ymm7_b;
mov lwd_f ymm6_b;
mov ymm9_0 lwd_0;
mov ymm9_1 lwd_1;
mov ymm9_2 lwd_2;
mov ymm9_3 lwd_3;
mov ymm9_4 lwd_4;
mov ymm9_5 lwd_5;
mov ymm9_6 lwd_6;
mov ymm9_7 lwd_7;
mov ymm9_8 lwd_8;
mov ymm9_9 lwd_9;
mov ymm9_a lwd_a;
mov ymm9_b lwd_b;
mov ymm9_c lwd_c;
mov ymm9_d lwd_d;
mov ymm9_e lwd_e;
mov ymm9_f lwd_f;
(* vpunpckhwd %ymm6,%ymm7,%ymm6                    #! PC = 0x555555557c99 *)
mov hwd_0 ymm7_4;
mov hwd_1 ymm6_4;
mov hwd_2 ymm7_5;
mov hwd_3 ymm6_5;
mov hwd_4 ymm7_6;
mov hwd_5 ymm6_6;
mov hwd_6 ymm7_7;
mov hwd_7 ymm6_7;
mov hwd_8 ymm7_c;
mov hwd_9 ymm6_c;
mov hwd_a ymm7_d;
mov hwd_b ymm6_d;
mov hwd_c ymm7_e;
mov hwd_d ymm6_e;
mov hwd_e ymm7_f;
mov hwd_f ymm6_f;
mov ymm6_0 hwd_0;
mov ymm6_1 hwd_1;
mov ymm6_2 hwd_2;
mov ymm6_3 hwd_3;
mov ymm6_4 hwd_4;
mov ymm6_5 hwd_5;
mov ymm6_6 hwd_6;
mov ymm6_7 hwd_7;
mov ymm6_8 hwd_8;
mov ymm6_9 hwd_9;
mov ymm6_a hwd_a;
mov ymm6_b hwd_b;
mov ymm6_c hwd_c;
mov ymm6_d hwd_d;
mov ymm6_e hwd_e;
mov ymm6_f hwd_f;
(* vpunpcklwd %ymm8,%ymm5,%ymm7                    #! PC = 0x555555557c9d *)
mov lwd_0 ymm5_0;
mov lwd_1 ymm8_0;
mov lwd_2 ymm5_1;
mov lwd_3 ymm8_1;
mov lwd_4 ymm5_2;
mov lwd_5 ymm8_2;
mov lwd_6 ymm5_3;
mov lwd_7 ymm8_3;
mov lwd_8 ymm5_8;
mov lwd_9 ymm8_8;
mov lwd_a ymm5_9;
mov lwd_b ymm8_9;
mov lwd_c ymm5_a;
mov lwd_d ymm8_a;
mov lwd_e ymm5_b;
mov lwd_f ymm8_b;
mov ymm7_0 lwd_0;
mov ymm7_1 lwd_1;
mov ymm7_2 lwd_2;
mov ymm7_3 lwd_3;
mov ymm7_4 lwd_4;
mov ymm7_5 lwd_5;
mov ymm7_6 lwd_6;
mov ymm7_7 lwd_7;
mov ymm7_8 lwd_8;
mov ymm7_9 lwd_9;
mov ymm7_a lwd_a;
mov ymm7_b lwd_b;
mov ymm7_c lwd_c;
mov ymm7_d lwd_d;
mov ymm7_e lwd_e;
mov ymm7_f lwd_f;
(* vpunpckhwd %ymm8,%ymm5,%ymm8                    #! PC = 0x555555557ca2 *)
mov hwd_0 ymm5_4;
mov hwd_1 ymm8_4;
mov hwd_2 ymm5_5;
mov hwd_3 ymm8_5;
mov hwd_4 ymm5_6;
mov hwd_5 ymm8_6;
mov hwd_6 ymm5_7;
mov hwd_7 ymm8_7;
mov hwd_8 ymm5_c;
mov hwd_9 ymm8_c;
mov hwd_a ymm5_d;
mov hwd_b ymm8_d;
mov hwd_c ymm5_e;
mov hwd_d ymm8_e;
mov hwd_e ymm5_f;
mov hwd_f ymm8_f;
mov ymm8_0 hwd_0;
mov ymm8_1 hwd_1;
mov ymm8_2 hwd_2;
mov ymm8_3 hwd_3;
mov ymm8_4 hwd_4;
mov ymm8_5 hwd_5;
mov ymm8_6 hwd_6;
mov ymm8_7 hwd_7;
mov ymm8_8 hwd_8;
mov ymm8_9 hwd_9;
mov ymm8_a hwd_a;
mov ymm8_b hwd_b;
mov ymm8_c hwd_c;
mov ymm8_d hwd_d;
mov ymm8_e hwd_e;
mov ymm8_f hwd_f;
(* vpunpcklwd %ymm11,%ymm4,%ymm5                   #! PC = 0x555555557ca7 *)
mov lwd_0 ymm4_0;
mov lwd_1 ymm11_0;
mov lwd_2 ymm4_1;
mov lwd_3 ymm11_1;
mov lwd_4 ymm4_2;
mov lwd_5 ymm11_2;
mov lwd_6 ymm4_3;
mov lwd_7 ymm11_3;
mov lwd_8 ymm4_8;
mov lwd_9 ymm11_8;
mov lwd_a ymm4_9;
mov lwd_b ymm11_9;
mov lwd_c ymm4_a;
mov lwd_d ymm11_a;
mov lwd_e ymm4_b;
mov lwd_f ymm11_b;
mov ymm5_0 lwd_0;
mov ymm5_1 lwd_1;
mov ymm5_2 lwd_2;
mov ymm5_3 lwd_3;
mov ymm5_4 lwd_4;
mov ymm5_5 lwd_5;
mov ymm5_6 lwd_6;
mov ymm5_7 lwd_7;
mov ymm5_8 lwd_8;
mov ymm5_9 lwd_9;
mov ymm5_a lwd_a;
mov ymm5_b lwd_b;
mov ymm5_c lwd_c;
mov ymm5_d lwd_d;
mov ymm5_e lwd_e;
mov ymm5_f lwd_f;
(* vpunpckhwd %ymm11,%ymm4,%ymm11                  #! PC = 0x555555557cac *)
mov hwd_0 ymm4_4;
mov hwd_1 ymm11_4;
mov hwd_2 ymm4_5;
mov hwd_3 ymm11_5;
mov hwd_4 ymm4_6;
mov hwd_5 ymm11_6;
mov hwd_6 ymm4_7;
mov hwd_7 ymm11_7;
mov hwd_8 ymm4_c;
mov hwd_9 ymm11_c;
mov hwd_a ymm4_d;
mov hwd_b ymm11_d;
mov hwd_c ymm4_e;
mov hwd_d ymm11_e;
mov hwd_e ymm4_f;
mov hwd_f ymm11_f;
mov ymm11_0 hwd_0;
mov ymm11_1 hwd_1;
mov ymm11_2 hwd_2;
mov ymm11_3 hwd_3;
mov ymm11_4 hwd_4;
mov ymm11_5 hwd_5;
mov ymm11_6 hwd_6;
mov ymm11_7 hwd_7;
mov ymm11_8 hwd_8;
mov ymm11_9 hwd_9;
mov ymm11_a hwd_a;
mov ymm11_b hwd_b;
mov ymm11_c hwd_c;
mov ymm11_d hwd_d;
mov ymm11_e hwd_e;
mov ymm11_f hwd_f;
(* vpbroadcastd 0x110(%rdx),%ymm1                  #! EA = L0x555555561230; Value = 0x30bc8cf7c126e487; PC = 0x555555557cb1 *)
mov ymm1_0 L0x555555561230;
mov ymm1_1 L0x555555561232;
mov ymm1_2 L0x555555561230;
mov ymm1_3 L0x555555561232;
mov ymm1_4 L0x555555561230;
mov ymm1_5 L0x555555561232;
mov ymm1_6 L0x555555561230;
mov ymm1_7 L0x555555561232;
mov ymm1_8 L0x555555561230;
mov ymm1_9 L0x555555561232;
mov ymm1_a L0x555555561230;
mov ymm1_b L0x555555561232;
mov ymm1_c L0x555555561230;
mov ymm1_d L0x555555561232;
mov ymm1_e L0x555555561230;
mov ymm1_f L0x555555561232;
(* vpbroadcastd 0x310(%rdx),%ymm2                  #! EA = L0x555555561430; Value = 0x08bc12f7fd260a87; PC = 0x555555557cba *)
mov ymm2_0 L0x555555561430;
mov ymm2_1 L0x555555561432;
mov ymm2_2 L0x555555561430;
mov ymm2_3 L0x555555561432;
mov ymm2_4 L0x555555561430;
mov ymm2_5 L0x555555561432;
mov ymm2_6 L0x555555561430;
mov ymm2_7 L0x555555561432;
mov ymm2_8 L0x555555561430;
mov ymm2_9 L0x555555561432;
mov ymm2_a L0x555555561430;
mov ymm2_b L0x555555561432;
mov ymm2_c L0x555555561430;
mov ymm2_d L0x555555561432;
mov ymm2_e L0x555555561430;
mov ymm2_f L0x555555561432;
(* vpmullw %ymm1,%ymm3,%ymm4                       #! PC = 0x555555557cc3 *)
smull mulHymm3_0 mulL_0 ymm1_0 ymm3_0;
smull mulHymm3_1 mulL_1 ymm1_1 ymm3_1;
smull mulHymm3_2 mulL_2 ymm1_2 ymm3_2;
smull mulHymm3_3 mulL_3 ymm1_3 ymm3_3;
smull mulHymm3_4 mulL_4 ymm1_4 ymm3_4;
smull mulHymm3_5 mulL_5 ymm1_5 ymm3_5;
smull mulHymm3_6 mulL_6 ymm1_6 ymm3_6;
smull mulHymm3_7 mulL_7 ymm1_7 ymm3_7;
smull mulHymm3_8 mulL_8 ymm1_8 ymm3_8;
smull mulHymm3_9 mulL_9 ymm1_9 ymm3_9;
smull mulHymm3_a mulL_a ymm1_a ymm3_a;
smull mulHymm3_b mulL_b ymm1_b ymm3_b;
smull mulHymm3_c mulL_c ymm1_c ymm3_c;
smull mulHymm3_d mulL_d ymm1_d ymm3_d;
smull mulHymm3_e mulL_e ymm1_e ymm3_e;
smull mulHymm3_f mulL_f ymm1_f ymm3_f;
cast ymm4_0@sint16 mulL_0;
cast ymm4_1@sint16 mulL_1;
cast ymm4_2@sint16 mulL_2;
cast ymm4_3@sint16 mulL_3;
cast ymm4_4@sint16 mulL_4;
cast ymm4_5@sint16 mulL_5;
cast ymm4_6@sint16 mulL_6;
cast ymm4_7@sint16 mulL_7;
cast ymm4_8@sint16 mulL_8;
cast ymm4_9@sint16 mulL_9;
cast ymm4_a@sint16 mulL_a;
cast ymm4_b@sint16 mulL_b;
cast ymm4_c@sint16 mulL_c;
cast ymm4_d@sint16 mulL_d;
cast ymm4_e@sint16 mulL_e;
cast ymm4_f@sint16 mulL_f;
(* vpmulhw %ymm2,%ymm3,%ymm3                       #! PC = 0x555555557cc7 *)
smull mulH_0 mulLymm3_0 ymm3_0 ymm2_0;
smull mulH_1 mulLymm3_1 ymm3_1 ymm2_1;
smull mulH_2 mulLymm3_2 ymm3_2 ymm2_2;
smull mulH_3 mulLymm3_3 ymm3_3 ymm2_3;
smull mulH_4 mulLymm3_4 ymm3_4 ymm2_4;
smull mulH_5 mulLymm3_5 ymm3_5 ymm2_5;
smull mulH_6 mulLymm3_6 ymm3_6 ymm2_6;
smull mulH_7 mulLymm3_7 ymm3_7 ymm2_7;
smull mulH_8 mulLymm3_8 ymm3_8 ymm2_8;
smull mulH_9 mulLymm3_9 ymm3_9 ymm2_9;
smull mulH_a mulLymm3_a ymm3_a ymm2_a;
smull mulH_b mulLymm3_b ymm3_b ymm2_b;
smull mulH_c mulLymm3_c ymm3_c ymm2_c;
smull mulH_d mulLymm3_d ymm3_d ymm2_d;
smull mulH_e mulLymm3_e ymm3_e ymm2_e;
smull mulH_f mulLymm3_f ymm3_f ymm2_f;
mov ymm3_0 mulH_0;
mov ymm3_1 mulH_1;
mov ymm3_2 mulH_2;
mov ymm3_3 mulH_3;
mov ymm3_4 mulH_4;
mov ymm3_5 mulH_5;
mov ymm3_6 mulH_6;
mov ymm3_7 mulH_7;
mov ymm3_8 mulH_8;
mov ymm3_9 mulH_9;
mov ymm3_a mulH_a;
mov ymm3_b mulH_b;
mov ymm3_c mulH_c;
mov ymm3_d mulH_d;
mov ymm3_e mulH_e;
mov ymm3_f mulH_f;
(* vpmulhw %ymm0,%ymm4,%ymm4                       #! PC = 0x555555557ccb *)
smull mulH_0 red_0 ymm4_0 ymm0_0;
assert true && red_0 = mulLymm3_0;
assume red_0 = mulLymm3_0 && true;
smull mulH_1 red_1 ymm4_1 ymm0_1;
assert true && red_1 = mulLymm3_1;
assume red_1 = mulLymm3_1 && true;
smull mulH_2 red_2 ymm4_2 ymm0_2;
assert true && red_2 = mulLymm3_2;
assume red_2 = mulLymm3_2 && true;
smull mulH_3 red_3 ymm4_3 ymm0_3;
assert true && red_3 = mulLymm3_3;
assume red_3 = mulLymm3_3 && true;
smull mulH_4 red_4 ymm4_4 ymm0_4;
assert true && red_4 = mulLymm3_4;
assume red_4 = mulLymm3_4 && true;
smull mulH_5 red_5 ymm4_5 ymm0_5;
assert true && red_5 = mulLymm3_5;
assume red_5 = mulLymm3_5 && true;
smull mulH_6 red_6 ymm4_6 ymm0_6;
assert true && red_6 = mulLymm3_6;
assume red_6 = mulLymm3_6 && true;
smull mulH_7 red_7 ymm4_7 ymm0_7;
assert true && red_7 = mulLymm3_7;
assume red_7 = mulLymm3_7 && true;
smull mulH_8 red_8 ymm4_8 ymm0_8;
assert true && red_8 = mulLymm3_8;
assume red_8 = mulLymm3_8 && true;
smull mulH_9 red_9 ymm4_9 ymm0_9;
assert true && red_9 = mulLymm3_9;
assume red_9 = mulLymm3_9 && true;
smull mulH_a red_a ymm4_a ymm0_a;
assert true && red_a = mulLymm3_a;
assume red_a = mulLymm3_a && true;
smull mulH_b red_b ymm4_b ymm0_b;
assert true && red_b = mulLymm3_b;
assume red_b = mulLymm3_b && true;
smull mulH_c red_c ymm4_c ymm0_c;
assert true && red_c = mulLymm3_c;
assume red_c = mulLymm3_c && true;
smull mulH_d red_d ymm4_d ymm0_d;
assert true && red_d = mulLymm3_d;
assume red_d = mulLymm3_d && true;
smull mulH_e red_e ymm4_e ymm0_e;
assert true && red_e = mulLymm3_e;
assume red_e = mulLymm3_e && true;
smull mulH_f red_f ymm4_f ymm0_f;
assert true && red_f = mulLymm3_f;
assume red_f = mulLymm3_f && true;
mov ymm4_0 mulH_0;
mov ymm4_1 mulH_1;
mov ymm4_2 mulH_2;
mov ymm4_3 mulH_3;
mov ymm4_4 mulH_4;
mov ymm4_5 mulH_5;
mov ymm4_6 mulH_6;
mov ymm4_7 mulH_7;
mov ymm4_8 mulH_8;
mov ymm4_9 mulH_9;
mov ymm4_a mulH_a;
mov ymm4_b mulH_b;
mov ymm4_c mulH_c;
mov ymm4_d mulH_d;
mov ymm4_e mulH_e;
mov ymm4_f mulH_f;
(* vpsubw %ymm4,%ymm3,%ymm3                        #! PC = 0x555555557ccf *)
sub ymm3_0 ymm3_0 ymm4_0;
sub ymm3_1 ymm3_1 ymm4_1;
sub ymm3_2 ymm3_2 ymm4_2;
sub ymm3_3 ymm3_3 ymm4_3;
sub ymm3_4 ymm3_4 ymm4_4;
sub ymm3_5 ymm3_5 ymm4_5;
sub ymm3_6 ymm3_6 ymm4_6;
sub ymm3_7 ymm3_7 ymm4_7;
sub ymm3_8 ymm3_8 ymm4_8;
sub ymm3_9 ymm3_9 ymm4_9;
sub ymm3_a ymm3_a ymm4_a;
sub ymm3_b ymm3_b ymm4_b;
sub ymm3_c ymm3_c ymm4_c;
sub ymm3_d ymm3_d ymm4_d;
sub ymm3_e ymm3_e ymm4_e;
sub ymm3_f ymm3_f ymm4_f;
(* vpbroadcastd 0x114(%rdx),%ymm1                  #! EA = L0x555555561234; Value = 0x91c0b85730bc8cf7; PC = 0x555555557cd3 *)
mov ymm1_0 L0x555555561234;
mov ymm1_1 L0x555555561236;
mov ymm1_2 L0x555555561234;
mov ymm1_3 L0x555555561236;
mov ymm1_4 L0x555555561234;
mov ymm1_5 L0x555555561236;
mov ymm1_6 L0x555555561234;
mov ymm1_7 L0x555555561236;
mov ymm1_8 L0x555555561234;
mov ymm1_9 L0x555555561236;
mov ymm1_a L0x555555561234;
mov ymm1_b L0x555555561236;
mov ymm1_c L0x555555561234;
mov ymm1_d L0x555555561236;
mov ymm1_e L0x555555561234;
mov ymm1_f L0x555555561236;
(* vpbroadcastd 0x314(%rdx),%ymm2                  #! EA = L0x555555561434; Value = 0x11c0fe5708bc12f7; PC = 0x555555557cdc *)
mov ymm2_0 L0x555555561434;
mov ymm2_1 L0x555555561436;
mov ymm2_2 L0x555555561434;
mov ymm2_3 L0x555555561436;
mov ymm2_4 L0x555555561434;
mov ymm2_5 L0x555555561436;
mov ymm2_6 L0x555555561434;
mov ymm2_7 L0x555555561436;
mov ymm2_8 L0x555555561434;
mov ymm2_9 L0x555555561436;
mov ymm2_a L0x555555561434;
mov ymm2_b L0x555555561436;
mov ymm2_c L0x555555561434;
mov ymm2_d L0x555555561436;
mov ymm2_e L0x555555561434;
mov ymm2_f L0x555555561436;
(* vpmullw %ymm1,%ymm6,%ymm4                       #! PC = 0x555555557ce5 *)
smull mulHymm6_0 mulL_0 ymm1_0 ymm6_0;
smull mulHymm6_1 mulL_1 ymm1_1 ymm6_1;
smull mulHymm6_2 mulL_2 ymm1_2 ymm6_2;
smull mulHymm6_3 mulL_3 ymm1_3 ymm6_3;
smull mulHymm6_4 mulL_4 ymm1_4 ymm6_4;
smull mulHymm6_5 mulL_5 ymm1_5 ymm6_5;
smull mulHymm6_6 mulL_6 ymm1_6 ymm6_6;
smull mulHymm6_7 mulL_7 ymm1_7 ymm6_7;
smull mulHymm6_8 mulL_8 ymm1_8 ymm6_8;
smull mulHymm6_9 mulL_9 ymm1_9 ymm6_9;
smull mulHymm6_a mulL_a ymm1_a ymm6_a;
smull mulHymm6_b mulL_b ymm1_b ymm6_b;
smull mulHymm6_c mulL_c ymm1_c ymm6_c;
smull mulHymm6_d mulL_d ymm1_d ymm6_d;
smull mulHymm6_e mulL_e ymm1_e ymm6_e;
smull mulHymm6_f mulL_f ymm1_f ymm6_f;
cast ymm4_0@sint16 mulL_0;
cast ymm4_1@sint16 mulL_1;
cast ymm4_2@sint16 mulL_2;
cast ymm4_3@sint16 mulL_3;
cast ymm4_4@sint16 mulL_4;
cast ymm4_5@sint16 mulL_5;
cast ymm4_6@sint16 mulL_6;
cast ymm4_7@sint16 mulL_7;
cast ymm4_8@sint16 mulL_8;
cast ymm4_9@sint16 mulL_9;
cast ymm4_a@sint16 mulL_a;
cast ymm4_b@sint16 mulL_b;
cast ymm4_c@sint16 mulL_c;
cast ymm4_d@sint16 mulL_d;
cast ymm4_e@sint16 mulL_e;
cast ymm4_f@sint16 mulL_f;
(* vpmulhw %ymm2,%ymm6,%ymm6                       #! PC = 0x555555557ce9 *)
smull mulH_0 mulLymm6_0 ymm6_0 ymm2_0;
smull mulH_1 mulLymm6_1 ymm6_1 ymm2_1;
smull mulH_2 mulLymm6_2 ymm6_2 ymm2_2;
smull mulH_3 mulLymm6_3 ymm6_3 ymm2_3;
smull mulH_4 mulLymm6_4 ymm6_4 ymm2_4;
smull mulH_5 mulLymm6_5 ymm6_5 ymm2_5;
smull mulH_6 mulLymm6_6 ymm6_6 ymm2_6;
smull mulH_7 mulLymm6_7 ymm6_7 ymm2_7;
smull mulH_8 mulLymm6_8 ymm6_8 ymm2_8;
smull mulH_9 mulLymm6_9 ymm6_9 ymm2_9;
smull mulH_a mulLymm6_a ymm6_a ymm2_a;
smull mulH_b mulLymm6_b ymm6_b ymm2_b;
smull mulH_c mulLymm6_c ymm6_c ymm2_c;
smull mulH_d mulLymm6_d ymm6_d ymm2_d;
smull mulH_e mulLymm6_e ymm6_e ymm2_e;
smull mulH_f mulLymm6_f ymm6_f ymm2_f;
mov ymm6_0 mulH_0;
mov ymm6_1 mulH_1;
mov ymm6_2 mulH_2;
mov ymm6_3 mulH_3;
mov ymm6_4 mulH_4;
mov ymm6_5 mulH_5;
mov ymm6_6 mulH_6;
mov ymm6_7 mulH_7;
mov ymm6_8 mulH_8;
mov ymm6_9 mulH_9;
mov ymm6_a mulH_a;
mov ymm6_b mulH_b;
mov ymm6_c mulH_c;
mov ymm6_d mulH_d;
mov ymm6_e mulH_e;
mov ymm6_f mulH_f;
(* vpmulhw %ymm0,%ymm4,%ymm4                       #! PC = 0x555555557ced *)
smull mulH_0 red_0 ymm4_0 ymm0_0;
assert true && red_0 = mulLymm6_0;
assume red_0 = mulLymm6_0 && true;
smull mulH_1 red_1 ymm4_1 ymm0_1;
assert true && red_1 = mulLymm6_1;
assume red_1 = mulLymm6_1 && true;
smull mulH_2 red_2 ymm4_2 ymm0_2;
assert true && red_2 = mulLymm6_2;
assume red_2 = mulLymm6_2 && true;
smull mulH_3 red_3 ymm4_3 ymm0_3;
assert true && red_3 = mulLymm6_3;
assume red_3 = mulLymm6_3 && true;
smull mulH_4 red_4 ymm4_4 ymm0_4;
assert true && red_4 = mulLymm6_4;
assume red_4 = mulLymm6_4 && true;
smull mulH_5 red_5 ymm4_5 ymm0_5;
assert true && red_5 = mulLymm6_5;
assume red_5 = mulLymm6_5 && true;
smull mulH_6 red_6 ymm4_6 ymm0_6;
assert true && red_6 = mulLymm6_6;
assume red_6 = mulLymm6_6 && true;
smull mulH_7 red_7 ymm4_7 ymm0_7;
assert true && red_7 = mulLymm6_7;
assume red_7 = mulLymm6_7 && true;
smull mulH_8 red_8 ymm4_8 ymm0_8;
assert true && red_8 = mulLymm6_8;
assume red_8 = mulLymm6_8 && true;
smull mulH_9 red_9 ymm4_9 ymm0_9;
assert true && red_9 = mulLymm6_9;
assume red_9 = mulLymm6_9 && true;
smull mulH_a red_a ymm4_a ymm0_a;
assert true && red_a = mulLymm6_a;
assume red_a = mulLymm6_a && true;
smull mulH_b red_b ymm4_b ymm0_b;
assert true && red_b = mulLymm6_b;
assume red_b = mulLymm6_b && true;
smull mulH_c red_c ymm4_c ymm0_c;
assert true && red_c = mulLymm6_c;
assume red_c = mulLymm6_c && true;
smull mulH_d red_d ymm4_d ymm0_d;
assert true && red_d = mulLymm6_d;
assume red_d = mulLymm6_d && true;
smull mulH_e red_e ymm4_e ymm0_e;
assert true && red_e = mulLymm6_e;
assume red_e = mulLymm6_e && true;
smull mulH_f red_f ymm4_f ymm0_f;
assert true && red_f = mulLymm6_f;
assume red_f = mulLymm6_f && true;
mov ymm4_0 mulH_0;
mov ymm4_1 mulH_1;
mov ymm4_2 mulH_2;
mov ymm4_3 mulH_3;
mov ymm4_4 mulH_4;
mov ymm4_5 mulH_5;
mov ymm4_6 mulH_6;
mov ymm4_7 mulH_7;
mov ymm4_8 mulH_8;
mov ymm4_9 mulH_9;
mov ymm4_a mulH_a;
mov ymm4_b mulH_b;
mov ymm4_c mulH_c;
mov ymm4_d mulH_d;
mov ymm4_e mulH_e;
mov ymm4_f mulH_f;
(* vpsubw %ymm4,%ymm6,%ymm6                        #! PC = 0x555555557cf1 *)
sub ymm6_0 ymm6_0 ymm4_0;
sub ymm6_1 ymm6_1 ymm4_1;
sub ymm6_2 ymm6_2 ymm4_2;
sub ymm6_3 ymm6_3 ymm4_3;
sub ymm6_4 ymm6_4 ymm4_4;
sub ymm6_5 ymm6_5 ymm4_5;
sub ymm6_6 ymm6_6 ymm4_6;
sub ymm6_7 ymm6_7 ymm4_7;
sub ymm6_8 ymm6_8 ymm4_8;
sub ymm6_9 ymm6_9 ymm4_9;
sub ymm6_a ymm6_a ymm4_a;
sub ymm6_b ymm6_b ymm4_b;
sub ymm6_c ymm6_c ymm4_c;
sub ymm6_d ymm6_d ymm4_d;
sub ymm6_e ymm6_e ymm4_e;
sub ymm6_f ymm6_f ymm4_f;
(* vpbroadcastd 0x118(%rdx),%ymm1                  #! EA = L0x555555561238; Value = 0xc138252491c0b857; PC = 0x555555557cf5 *)
mov ymm1_0 L0x555555561238;
mov ymm1_1 L0x55555556123a;
mov ymm1_2 L0x555555561238;
mov ymm1_3 L0x55555556123a;
mov ymm1_4 L0x555555561238;
mov ymm1_5 L0x55555556123a;
mov ymm1_6 L0x555555561238;
mov ymm1_7 L0x55555556123a;
mov ymm1_8 L0x555555561238;
mov ymm1_9 L0x55555556123a;
mov ymm1_a L0x555555561238;
mov ymm1_b L0x55555556123a;
mov ymm1_c L0x555555561238;
mov ymm1_d L0x55555556123a;
mov ymm1_e L0x555555561238;
mov ymm1_f L0x55555556123a;
(* vpbroadcastd 0x318(%rdx),%ymm2                  #! EA = L0x555555561438; Value = 0xf1380d2411c0fe57; PC = 0x555555557cfe *)
mov ymm2_0 L0x555555561438;
mov ymm2_1 L0x55555556143a;
mov ymm2_2 L0x555555561438;
mov ymm2_3 L0x55555556143a;
mov ymm2_4 L0x555555561438;
mov ymm2_5 L0x55555556143a;
mov ymm2_6 L0x555555561438;
mov ymm2_7 L0x55555556143a;
mov ymm2_8 L0x555555561438;
mov ymm2_9 L0x55555556143a;
mov ymm2_a L0x555555561438;
mov ymm2_b L0x55555556143a;
mov ymm2_c L0x555555561438;
mov ymm2_d L0x55555556143a;
mov ymm2_e L0x555555561438;
mov ymm2_f L0x55555556143a;
(* vpmullw %ymm1,%ymm8,%ymm4                       #! PC = 0x555555557d07 *)
smull mulHymm8_0 mulL_0 ymm1_0 ymm8_0;
smull mulHymm8_1 mulL_1 ymm1_1 ymm8_1;
smull mulHymm8_2 mulL_2 ymm1_2 ymm8_2;
smull mulHymm8_3 mulL_3 ymm1_3 ymm8_3;
smull mulHymm8_4 mulL_4 ymm1_4 ymm8_4;
smull mulHymm8_5 mulL_5 ymm1_5 ymm8_5;
smull mulHymm8_6 mulL_6 ymm1_6 ymm8_6;
smull mulHymm8_7 mulL_7 ymm1_7 ymm8_7;
smull mulHymm8_8 mulL_8 ymm1_8 ymm8_8;
smull mulHymm8_9 mulL_9 ymm1_9 ymm8_9;
smull mulHymm8_a mulL_a ymm1_a ymm8_a;
smull mulHymm8_b mulL_b ymm1_b ymm8_b;
smull mulHymm8_c mulL_c ymm1_c ymm8_c;
smull mulHymm8_d mulL_d ymm1_d ymm8_d;
smull mulHymm8_e mulL_e ymm1_e ymm8_e;
smull mulHymm8_f mulL_f ymm1_f ymm8_f;
cast ymm4_0@sint16 mulL_0;
cast ymm4_1@sint16 mulL_1;
cast ymm4_2@sint16 mulL_2;
cast ymm4_3@sint16 mulL_3;
cast ymm4_4@sint16 mulL_4;
cast ymm4_5@sint16 mulL_5;
cast ymm4_6@sint16 mulL_6;
cast ymm4_7@sint16 mulL_7;
cast ymm4_8@sint16 mulL_8;
cast ymm4_9@sint16 mulL_9;
cast ymm4_a@sint16 mulL_a;
cast ymm4_b@sint16 mulL_b;
cast ymm4_c@sint16 mulL_c;
cast ymm4_d@sint16 mulL_d;
cast ymm4_e@sint16 mulL_e;
cast ymm4_f@sint16 mulL_f;
(* vpmulhw %ymm2,%ymm8,%ymm8                       #! PC = 0x555555557d0b *)
smull mulH_0 mulLymm8_0 ymm8_0 ymm2_0;
smull mulH_1 mulLymm8_1 ymm8_1 ymm2_1;
smull mulH_2 mulLymm8_2 ymm8_2 ymm2_2;
smull mulH_3 mulLymm8_3 ymm8_3 ymm2_3;
smull mulH_4 mulLymm8_4 ymm8_4 ymm2_4;
smull mulH_5 mulLymm8_5 ymm8_5 ymm2_5;
smull mulH_6 mulLymm8_6 ymm8_6 ymm2_6;
smull mulH_7 mulLymm8_7 ymm8_7 ymm2_7;
smull mulH_8 mulLymm8_8 ymm8_8 ymm2_8;
smull mulH_9 mulLymm8_9 ymm8_9 ymm2_9;
smull mulH_a mulLymm8_a ymm8_a ymm2_a;
smull mulH_b mulLymm8_b ymm8_b ymm2_b;
smull mulH_c mulLymm8_c ymm8_c ymm2_c;
smull mulH_d mulLymm8_d ymm8_d ymm2_d;
smull mulH_e mulLymm8_e ymm8_e ymm2_e;
smull mulH_f mulLymm8_f ymm8_f ymm2_f;
mov ymm8_0 mulH_0;
mov ymm8_1 mulH_1;
mov ymm8_2 mulH_2;
mov ymm8_3 mulH_3;
mov ymm8_4 mulH_4;
mov ymm8_5 mulH_5;
mov ymm8_6 mulH_6;
mov ymm8_7 mulH_7;
mov ymm8_8 mulH_8;
mov ymm8_9 mulH_9;
mov ymm8_a mulH_a;
mov ymm8_b mulH_b;
mov ymm8_c mulH_c;
mov ymm8_d mulH_d;
mov ymm8_e mulH_e;
mov ymm8_f mulH_f;
(* vpmulhw %ymm0,%ymm4,%ymm4                       #! PC = 0x555555557d0f *)
smull mulH_0 red_0 ymm4_0 ymm0_0;
assert true && red_0 = mulLymm8_0;
assume red_0 = mulLymm8_0 && true;
smull mulH_1 red_1 ymm4_1 ymm0_1;
assert true && red_1 = mulLymm8_1;
assume red_1 = mulLymm8_1 && true;
smull mulH_2 red_2 ymm4_2 ymm0_2;
assert true && red_2 = mulLymm8_2;
assume red_2 = mulLymm8_2 && true;
smull mulH_3 red_3 ymm4_3 ymm0_3;
assert true && red_3 = mulLymm8_3;
assume red_3 = mulLymm8_3 && true;
smull mulH_4 red_4 ymm4_4 ymm0_4;
assert true && red_4 = mulLymm8_4;
assume red_4 = mulLymm8_4 && true;
smull mulH_5 red_5 ymm4_5 ymm0_5;
assert true && red_5 = mulLymm8_5;
assume red_5 = mulLymm8_5 && true;
smull mulH_6 red_6 ymm4_6 ymm0_6;
assert true && red_6 = mulLymm8_6;
assume red_6 = mulLymm8_6 && true;
smull mulH_7 red_7 ymm4_7 ymm0_7;
assert true && red_7 = mulLymm8_7;
assume red_7 = mulLymm8_7 && true;
smull mulH_8 red_8 ymm4_8 ymm0_8;
assert true && red_8 = mulLymm8_8;
assume red_8 = mulLymm8_8 && true;
smull mulH_9 red_9 ymm4_9 ymm0_9;
assert true && red_9 = mulLymm8_9;
assume red_9 = mulLymm8_9 && true;
smull mulH_a red_a ymm4_a ymm0_a;
assert true && red_a = mulLymm8_a;
assume red_a = mulLymm8_a && true;
smull mulH_b red_b ymm4_b ymm0_b;
assert true && red_b = mulLymm8_b;
assume red_b = mulLymm8_b && true;
smull mulH_c red_c ymm4_c ymm0_c;
assert true && red_c = mulLymm8_c;
assume red_c = mulLymm8_c && true;
smull mulH_d red_d ymm4_d ymm0_d;
assert true && red_d = mulLymm8_d;
assume red_d = mulLymm8_d && true;
smull mulH_e red_e ymm4_e ymm0_e;
assert true && red_e = mulLymm8_e;
assume red_e = mulLymm8_e && true;
smull mulH_f red_f ymm4_f ymm0_f;
assert true && red_f = mulLymm8_f;
assume red_f = mulLymm8_f && true;
mov ymm4_0 mulH_0;
mov ymm4_1 mulH_1;
mov ymm4_2 mulH_2;
mov ymm4_3 mulH_3;
mov ymm4_4 mulH_4;
mov ymm4_5 mulH_5;
mov ymm4_6 mulH_6;
mov ymm4_7 mulH_7;
mov ymm4_8 mulH_8;
mov ymm4_9 mulH_9;
mov ymm4_a mulH_a;
mov ymm4_b mulH_b;
mov ymm4_c mulH_c;
mov ymm4_d mulH_d;
mov ymm4_e mulH_e;
mov ymm4_f mulH_f;
(* vpsubw %ymm4,%ymm8,%ymm8                        #! PC = 0x555555557d13 *)
sub ymm8_0 ymm8_0 ymm4_0;
sub ymm8_1 ymm8_1 ymm4_1;
sub ymm8_2 ymm8_2 ymm4_2;
sub ymm8_3 ymm8_3 ymm4_3;
sub ymm8_4 ymm8_4 ymm4_4;
sub ymm8_5 ymm8_5 ymm4_5;
sub ymm8_6 ymm8_6 ymm4_6;
sub ymm8_7 ymm8_7 ymm4_7;
sub ymm8_8 ymm8_8 ymm4_8;
sub ymm8_9 ymm8_9 ymm4_9;
sub ymm8_a ymm8_a ymm4_a;
sub ymm8_b ymm8_b ymm4_b;
sub ymm8_c ymm8_c ymm4_c;
sub ymm8_d ymm8_d ymm4_d;
sub ymm8_e ymm8_e ymm4_e;
sub ymm8_f ymm8_f ymm4_f;
(* vpbroadcastd 0x11c(%rdx),%ymm1                  #! EA = L0x55555556123c; Value = 0x5a10450bc1382524; PC = 0x555555557d17 *)
mov ymm1_0 L0x55555556123c;
mov ymm1_1 L0x55555556123e;
mov ymm1_2 L0x55555556123c;
mov ymm1_3 L0x55555556123e;
mov ymm1_4 L0x55555556123c;
mov ymm1_5 L0x55555556123e;
mov ymm1_6 L0x55555556123c;
mov ymm1_7 L0x55555556123e;
mov ymm1_8 L0x55555556123c;
mov ymm1_9 L0x55555556123e;
mov ymm1_a L0x55555556123c;
mov ymm1_b L0x55555556123e;
mov ymm1_c L0x55555556123c;
mov ymm1_d L0x55555556123e;
mov ymm1_e L0x55555556123c;
mov ymm1_f L0x55555556123e;
(* vpbroadcastd 0x31c(%rdx),%ymm2                  #! EA = L0x55555556143c; Value = 0xfa10130bf1380d24; PC = 0x555555557d20 *)
mov ymm2_0 L0x55555556143c;
mov ymm2_1 L0x55555556143e;
mov ymm2_2 L0x55555556143c;
mov ymm2_3 L0x55555556143e;
mov ymm2_4 L0x55555556143c;
mov ymm2_5 L0x55555556143e;
mov ymm2_6 L0x55555556143c;
mov ymm2_7 L0x55555556143e;
mov ymm2_8 L0x55555556143c;
mov ymm2_9 L0x55555556143e;
mov ymm2_a L0x55555556143c;
mov ymm2_b L0x55555556143e;
mov ymm2_c L0x55555556143c;
mov ymm2_d L0x55555556143e;
mov ymm2_e L0x55555556143c;
mov ymm2_f L0x55555556143e;
(* vpmullw %ymm1,%ymm11,%ymm4                      #! PC = 0x555555557d29 *)
smull mulHymm11_0 mulL_0 ymm1_0 ymm11_0;
smull mulHymm11_1 mulL_1 ymm1_1 ymm11_1;
smull mulHymm11_2 mulL_2 ymm1_2 ymm11_2;
smull mulHymm11_3 mulL_3 ymm1_3 ymm11_3;
smull mulHymm11_4 mulL_4 ymm1_4 ymm11_4;
smull mulHymm11_5 mulL_5 ymm1_5 ymm11_5;
smull mulHymm11_6 mulL_6 ymm1_6 ymm11_6;
smull mulHymm11_7 mulL_7 ymm1_7 ymm11_7;
smull mulHymm11_8 mulL_8 ymm1_8 ymm11_8;
smull mulHymm11_9 mulL_9 ymm1_9 ymm11_9;
smull mulHymm11_a mulL_a ymm1_a ymm11_a;
smull mulHymm11_b mulL_b ymm1_b ymm11_b;
smull mulHymm11_c mulL_c ymm1_c ymm11_c;
smull mulHymm11_d mulL_d ymm1_d ymm11_d;
smull mulHymm11_e mulL_e ymm1_e ymm11_e;
smull mulHymm11_f mulL_f ymm1_f ymm11_f;
cast ymm4_0@sint16 mulL_0;
cast ymm4_1@sint16 mulL_1;
cast ymm4_2@sint16 mulL_2;
cast ymm4_3@sint16 mulL_3;
cast ymm4_4@sint16 mulL_4;
cast ymm4_5@sint16 mulL_5;
cast ymm4_6@sint16 mulL_6;
cast ymm4_7@sint16 mulL_7;
cast ymm4_8@sint16 mulL_8;
cast ymm4_9@sint16 mulL_9;
cast ymm4_a@sint16 mulL_a;
cast ymm4_b@sint16 mulL_b;
cast ymm4_c@sint16 mulL_c;
cast ymm4_d@sint16 mulL_d;
cast ymm4_e@sint16 mulL_e;
cast ymm4_f@sint16 mulL_f;
(* vpmulhw %ymm2,%ymm11,%ymm11                     #! PC = 0x555555557d2d *)
smull mulH_0 mulLymm11_0 ymm11_0 ymm2_0;
smull mulH_1 mulLymm11_1 ymm11_1 ymm2_1;
smull mulH_2 mulLymm11_2 ymm11_2 ymm2_2;
smull mulH_3 mulLymm11_3 ymm11_3 ymm2_3;
smull mulH_4 mulLymm11_4 ymm11_4 ymm2_4;
smull mulH_5 mulLymm11_5 ymm11_5 ymm2_5;
smull mulH_6 mulLymm11_6 ymm11_6 ymm2_6;
smull mulH_7 mulLymm11_7 ymm11_7 ymm2_7;
smull mulH_8 mulLymm11_8 ymm11_8 ymm2_8;
smull mulH_9 mulLymm11_9 ymm11_9 ymm2_9;
smull mulH_a mulLymm11_a ymm11_a ymm2_a;
smull mulH_b mulLymm11_b ymm11_b ymm2_b;
smull mulH_c mulLymm11_c ymm11_c ymm2_c;
smull mulH_d mulLymm11_d ymm11_d ymm2_d;
smull mulH_e mulLymm11_e ymm11_e ymm2_e;
smull mulH_f mulLymm11_f ymm11_f ymm2_f;
mov ymm11_0 mulH_0;
mov ymm11_1 mulH_1;
mov ymm11_2 mulH_2;
mov ymm11_3 mulH_3;
mov ymm11_4 mulH_4;
mov ymm11_5 mulH_5;
mov ymm11_6 mulH_6;
mov ymm11_7 mulH_7;
mov ymm11_8 mulH_8;
mov ymm11_9 mulH_9;
mov ymm11_a mulH_a;
mov ymm11_b mulH_b;
mov ymm11_c mulH_c;
mov ymm11_d mulH_d;
mov ymm11_e mulH_e;
mov ymm11_f mulH_f;
(* vpmulhw %ymm0,%ymm4,%ymm4                       #! PC = 0x555555557d31 *)
smull mulH_0 red_0 ymm4_0 ymm0_0;
assert true && red_0 = mulLymm11_0;
assume red_0 = mulLymm11_0 && true;
smull mulH_1 red_1 ymm4_1 ymm0_1;
assert true && red_1 = mulLymm11_1;
assume red_1 = mulLymm11_1 && true;
smull mulH_2 red_2 ymm4_2 ymm0_2;
assert true && red_2 = mulLymm11_2;
assume red_2 = mulLymm11_2 && true;
smull mulH_3 red_3 ymm4_3 ymm0_3;
assert true && red_3 = mulLymm11_3;
assume red_3 = mulLymm11_3 && true;
smull mulH_4 red_4 ymm4_4 ymm0_4;
assert true && red_4 = mulLymm11_4;
assume red_4 = mulLymm11_4 && true;
smull mulH_5 red_5 ymm4_5 ymm0_5;
assert true && red_5 = mulLymm11_5;
assume red_5 = mulLymm11_5 && true;
smull mulH_6 red_6 ymm4_6 ymm0_6;
assert true && red_6 = mulLymm11_6;
assume red_6 = mulLymm11_6 && true;
smull mulH_7 red_7 ymm4_7 ymm0_7;
assert true && red_7 = mulLymm11_7;
assume red_7 = mulLymm11_7 && true;
smull mulH_8 red_8 ymm4_8 ymm0_8;
assert true && red_8 = mulLymm11_8;
assume red_8 = mulLymm11_8 && true;
smull mulH_9 red_9 ymm4_9 ymm0_9;
assert true && red_9 = mulLymm11_9;
assume red_9 = mulLymm11_9 && true;
smull mulH_a red_a ymm4_a ymm0_a;
assert true && red_a = mulLymm11_a;
assume red_a = mulLymm11_a && true;
smull mulH_b red_b ymm4_b ymm0_b;
assert true && red_b = mulLymm11_b;
assume red_b = mulLymm11_b && true;
smull mulH_c red_c ymm4_c ymm0_c;
assert true && red_c = mulLymm11_c;
assume red_c = mulLymm11_c && true;
smull mulH_d red_d ymm4_d ymm0_d;
assert true && red_d = mulLymm11_d;
assume red_d = mulLymm11_d && true;
smull mulH_e red_e ymm4_e ymm0_e;
assert true && red_e = mulLymm11_e;
assume red_e = mulLymm11_e && true;
smull mulH_f red_f ymm4_f ymm0_f;
assert true && red_f = mulLymm11_f;
assume red_f = mulLymm11_f && true;
mov ymm4_0 mulH_0;
mov ymm4_1 mulH_1;
mov ymm4_2 mulH_2;
mov ymm4_3 mulH_3;
mov ymm4_4 mulH_4;
mov ymm4_5 mulH_5;
mov ymm4_6 mulH_6;
mov ymm4_7 mulH_7;
mov ymm4_8 mulH_8;
mov ymm4_9 mulH_9;
mov ymm4_a mulH_a;
mov ymm4_b mulH_b;
mov ymm4_c mulH_c;
mov ymm4_d mulH_d;
mov ymm4_e mulH_e;
mov ymm4_f mulH_f;
(* vpsubw %ymm4,%ymm11,%ymm11                      #! PC = 0x555555557d35 *)
sub ymm11_0 ymm11_0 ymm4_0;
sub ymm11_1 ymm11_1 ymm4_1;
sub ymm11_2 ymm11_2 ymm4_2;
sub ymm11_3 ymm11_3 ymm4_3;
sub ymm11_4 ymm11_4 ymm4_4;
sub ymm11_5 ymm11_5 ymm4_5;
sub ymm11_6 ymm11_6 ymm4_6;
sub ymm11_7 ymm11_7 ymm4_7;
sub ymm11_8 ymm11_8 ymm4_8;
sub ymm11_9 ymm11_9 ymm4_9;
sub ymm11_a ymm11_a ymm4_a;
sub ymm11_b ymm11_b ymm4_b;
sub ymm11_c ymm11_c ymm4_c;
sub ymm11_d ymm11_d ymm4_d;
sub ymm11_e ymm11_e ymm4_e;
sub ymm11_f ymm11_f ymm4_f;
(* vpmullw %ymm14,%ymm10,%ymm4                     #! PC = 0x555555557d39 *)
smull mulHymm10_0 mulL_0 ymm14_0 ymm10_0;
smull mulHymm10_1 mulL_1 ymm14_1 ymm10_1;
smull mulHymm10_2 mulL_2 ymm14_2 ymm10_2;
smull mulHymm10_3 mulL_3 ymm14_3 ymm10_3;
smull mulHymm10_4 mulL_4 ymm14_4 ymm10_4;
smull mulHymm10_5 mulL_5 ymm14_5 ymm10_5;
smull mulHymm10_6 mulL_6 ymm14_6 ymm10_6;
smull mulHymm10_7 mulL_7 ymm14_7 ymm10_7;
smull mulHymm10_8 mulL_8 ymm14_8 ymm10_8;
smull mulHymm10_9 mulL_9 ymm14_9 ymm10_9;
smull mulHymm10_a mulL_a ymm14_a ymm10_a;
smull mulHymm10_b mulL_b ymm14_b ymm10_b;
smull mulHymm10_c mulL_c ymm14_c ymm10_c;
smull mulHymm10_d mulL_d ymm14_d ymm10_d;
smull mulHymm10_e mulL_e ymm14_e ymm10_e;
smull mulHymm10_f mulL_f ymm14_f ymm10_f;
cast ymm4_0@sint16 mulL_0;
cast ymm4_1@sint16 mulL_1;
cast ymm4_2@sint16 mulL_2;
cast ymm4_3@sint16 mulL_3;
cast ymm4_4@sint16 mulL_4;
cast ymm4_5@sint16 mulL_5;
cast ymm4_6@sint16 mulL_6;
cast ymm4_7@sint16 mulL_7;
cast ymm4_8@sint16 mulL_8;
cast ymm4_9@sint16 mulL_9;
cast ymm4_a@sint16 mulL_a;
cast ymm4_b@sint16 mulL_b;
cast ymm4_c@sint16 mulL_c;
cast ymm4_d@sint16 mulL_d;
cast ymm4_e@sint16 mulL_e;
cast ymm4_f@sint16 mulL_f;
(* vpmulhw %ymm15,%ymm10,%ymm10                    #! PC = 0x555555557d3e *)
smull mulH_0 mulLymm10_0 ymm10_0 ymm15_0;
smull mulH_1 mulLymm10_1 ymm10_1 ymm15_1;
smull mulH_2 mulLymm10_2 ymm10_2 ymm15_2;
smull mulH_3 mulLymm10_3 ymm10_3 ymm15_3;
smull mulH_4 mulLymm10_4 ymm10_4 ymm15_4;
smull mulH_5 mulLymm10_5 ymm10_5 ymm15_5;
smull mulH_6 mulLymm10_6 ymm10_6 ymm15_6;
smull mulH_7 mulLymm10_7 ymm10_7 ymm15_7;
smull mulH_8 mulLymm10_8 ymm10_8 ymm15_8;
smull mulH_9 mulLymm10_9 ymm10_9 ymm15_9;
smull mulH_a mulLymm10_a ymm10_a ymm15_a;
smull mulH_b mulLymm10_b ymm10_b ymm15_b;
smull mulH_c mulLymm10_c ymm10_c ymm15_c;
smull mulH_d mulLymm10_d ymm10_d ymm15_d;
smull mulH_e mulLymm10_e ymm10_e ymm15_e;
smull mulH_f mulLymm10_f ymm10_f ymm15_f;
mov ymm10_0 mulH_0;
mov ymm10_1 mulH_1;
mov ymm10_2 mulH_2;
mov ymm10_3 mulH_3;
mov ymm10_4 mulH_4;
mov ymm10_5 mulH_5;
mov ymm10_6 mulH_6;
mov ymm10_7 mulH_7;
mov ymm10_8 mulH_8;
mov ymm10_9 mulH_9;
mov ymm10_a mulH_a;
mov ymm10_b mulH_b;
mov ymm10_c mulH_c;
mov ymm10_d mulH_d;
mov ymm10_e mulH_e;
mov ymm10_f mulH_f;
(* vpmulhw %ymm0,%ymm4,%ymm4                       #! PC = 0x555555557d43 *)
smull mulH_0 red_0 ymm4_0 ymm0_0;
assert true && red_0 = mulLymm10_0;
assume red_0 = mulLymm10_0 && true;
smull mulH_1 red_1 ymm4_1 ymm0_1;
assert true && red_1 = mulLymm10_1;
assume red_1 = mulLymm10_1 && true;
smull mulH_2 red_2 ymm4_2 ymm0_2;
assert true && red_2 = mulLymm10_2;
assume red_2 = mulLymm10_2 && true;
smull mulH_3 red_3 ymm4_3 ymm0_3;
assert true && red_3 = mulLymm10_3;
assume red_3 = mulLymm10_3 && true;
smull mulH_4 red_4 ymm4_4 ymm0_4;
assert true && red_4 = mulLymm10_4;
assume red_4 = mulLymm10_4 && true;
smull mulH_5 red_5 ymm4_5 ymm0_5;
assert true && red_5 = mulLymm10_5;
assume red_5 = mulLymm10_5 && true;
smull mulH_6 red_6 ymm4_6 ymm0_6;
assert true && red_6 = mulLymm10_6;
assume red_6 = mulLymm10_6 && true;
smull mulH_7 red_7 ymm4_7 ymm0_7;
assert true && red_7 = mulLymm10_7;
assume red_7 = mulLymm10_7 && true;
smull mulH_8 red_8 ymm4_8 ymm0_8;
assert true && red_8 = mulLymm10_8;
assume red_8 = mulLymm10_8 && true;
smull mulH_9 red_9 ymm4_9 ymm0_9;
assert true && red_9 = mulLymm10_9;
assume red_9 = mulLymm10_9 && true;
smull mulH_a red_a ymm4_a ymm0_a;
assert true && red_a = mulLymm10_a;
assume red_a = mulLymm10_a && true;
smull mulH_b red_b ymm4_b ymm0_b;
assert true && red_b = mulLymm10_b;
assume red_b = mulLymm10_b && true;
smull mulH_c red_c ymm4_c ymm0_c;
assert true && red_c = mulLymm10_c;
assume red_c = mulLymm10_c && true;
smull mulH_d red_d ymm4_d ymm0_d;
assert true && red_d = mulLymm10_d;
assume red_d = mulLymm10_d && true;
smull mulH_e red_e ymm4_e ymm0_e;
assert true && red_e = mulLymm10_e;
assume red_e = mulLymm10_e && true;
smull mulH_f red_f ymm4_f ymm0_f;
assert true && red_f = mulLymm10_f;
assume red_f = mulLymm10_f && true;
mov ymm4_0 mulH_0;
mov ymm4_1 mulH_1;
mov ymm4_2 mulH_2;
mov ymm4_3 mulH_3;
mov ymm4_4 mulH_4;
mov ymm4_5 mulH_5;
mov ymm4_6 mulH_6;
mov ymm4_7 mulH_7;
mov ymm4_8 mulH_8;
mov ymm4_9 mulH_9;
mov ymm4_a mulH_a;
mov ymm4_b mulH_b;
mov ymm4_c mulH_c;
mov ymm4_d mulH_d;
mov ymm4_e mulH_e;
mov ymm4_f mulH_f;
(* vpsubw %ymm4,%ymm10,%ymm10                      #! PC = 0x555555557d47 *)
sub ymm10_0 ymm10_0 ymm4_0;
sub ymm10_1 ymm10_1 ymm4_1;
sub ymm10_2 ymm10_2 ymm4_2;
sub ymm10_3 ymm10_3 ymm4_3;
sub ymm10_4 ymm10_4 ymm4_4;
sub ymm10_5 ymm10_5 ymm4_5;
sub ymm10_6 ymm10_6 ymm4_6;
sub ymm10_7 ymm10_7 ymm4_7;
sub ymm10_8 ymm10_8 ymm4_8;
sub ymm10_9 ymm10_9 ymm4_9;
sub ymm10_a ymm10_a ymm4_a;
sub ymm10_b ymm10_b ymm4_b;
sub ymm10_c ymm10_c ymm4_c;
sub ymm10_d ymm10_d ymm4_d;
sub ymm10_e ymm10_e ymm4_e;
sub ymm10_f ymm10_f ymm4_f;
(* vpmullw %ymm14,%ymm9,%ymm4                      #! PC = 0x555555557d4b *)
smull mulHymm9_0 mulL_0 ymm14_0 ymm9_0;
smull mulHymm9_1 mulL_1 ymm14_1 ymm9_1;
smull mulHymm9_2 mulL_2 ymm14_2 ymm9_2;
smull mulHymm9_3 mulL_3 ymm14_3 ymm9_3;
smull mulHymm9_4 mulL_4 ymm14_4 ymm9_4;
smull mulHymm9_5 mulL_5 ymm14_5 ymm9_5;
smull mulHymm9_6 mulL_6 ymm14_6 ymm9_6;
smull mulHymm9_7 mulL_7 ymm14_7 ymm9_7;
smull mulHymm9_8 mulL_8 ymm14_8 ymm9_8;
smull mulHymm9_9 mulL_9 ymm14_9 ymm9_9;
smull mulHymm9_a mulL_a ymm14_a ymm9_a;
smull mulHymm9_b mulL_b ymm14_b ymm9_b;
smull mulHymm9_c mulL_c ymm14_c ymm9_c;
smull mulHymm9_d mulL_d ymm14_d ymm9_d;
smull mulHymm9_e mulL_e ymm14_e ymm9_e;
smull mulHymm9_f mulL_f ymm14_f ymm9_f;
cast ymm4_0@sint16 mulL_0;
cast ymm4_1@sint16 mulL_1;
cast ymm4_2@sint16 mulL_2;
cast ymm4_3@sint16 mulL_3;
cast ymm4_4@sint16 mulL_4;
cast ymm4_5@sint16 mulL_5;
cast ymm4_6@sint16 mulL_6;
cast ymm4_7@sint16 mulL_7;
cast ymm4_8@sint16 mulL_8;
cast ymm4_9@sint16 mulL_9;
cast ymm4_a@sint16 mulL_a;
cast ymm4_b@sint16 mulL_b;
cast ymm4_c@sint16 mulL_c;
cast ymm4_d@sint16 mulL_d;
cast ymm4_e@sint16 mulL_e;
cast ymm4_f@sint16 mulL_f;
(* vpmulhw %ymm15,%ymm9,%ymm9                      #! PC = 0x555555557d50 *)
smull mulH_0 mulLymm9_0 ymm9_0 ymm15_0;
smull mulH_1 mulLymm9_1 ymm9_1 ymm15_1;
smull mulH_2 mulLymm9_2 ymm9_2 ymm15_2;
smull mulH_3 mulLymm9_3 ymm9_3 ymm15_3;
smull mulH_4 mulLymm9_4 ymm9_4 ymm15_4;
smull mulH_5 mulLymm9_5 ymm9_5 ymm15_5;
smull mulH_6 mulLymm9_6 ymm9_6 ymm15_6;
smull mulH_7 mulLymm9_7 ymm9_7 ymm15_7;
smull mulH_8 mulLymm9_8 ymm9_8 ymm15_8;
smull mulH_9 mulLymm9_9 ymm9_9 ymm15_9;
smull mulH_a mulLymm9_a ymm9_a ymm15_a;
smull mulH_b mulLymm9_b ymm9_b ymm15_b;
smull mulH_c mulLymm9_c ymm9_c ymm15_c;
smull mulH_d mulLymm9_d ymm9_d ymm15_d;
smull mulH_e mulLymm9_e ymm9_e ymm15_e;
smull mulH_f mulLymm9_f ymm9_f ymm15_f;
mov ymm9_0 mulH_0;
mov ymm9_1 mulH_1;
mov ymm9_2 mulH_2;
mov ymm9_3 mulH_3;
mov ymm9_4 mulH_4;
mov ymm9_5 mulH_5;
mov ymm9_6 mulH_6;
mov ymm9_7 mulH_7;
mov ymm9_8 mulH_8;
mov ymm9_9 mulH_9;
mov ymm9_a mulH_a;
mov ymm9_b mulH_b;
mov ymm9_c mulH_c;
mov ymm9_d mulH_d;
mov ymm9_e mulH_e;
mov ymm9_f mulH_f;
(* vpmulhw %ymm0,%ymm4,%ymm4                       #! PC = 0x555555557d55 *)
smull mulH_0 red_0 ymm4_0 ymm0_0;
assert true && red_0 = mulLymm9_0;
assume red_0 = mulLymm9_0 && true;
smull mulH_1 red_1 ymm4_1 ymm0_1;
assert true && red_1 = mulLymm9_1;
assume red_1 = mulLymm9_1 && true;
smull mulH_2 red_2 ymm4_2 ymm0_2;
assert true && red_2 = mulLymm9_2;
assume red_2 = mulLymm9_2 && true;
smull mulH_3 red_3 ymm4_3 ymm0_3;
assert true && red_3 = mulLymm9_3;
assume red_3 = mulLymm9_3 && true;
smull mulH_4 red_4 ymm4_4 ymm0_4;
assert true && red_4 = mulLymm9_4;
assume red_4 = mulLymm9_4 && true;
smull mulH_5 red_5 ymm4_5 ymm0_5;
assert true && red_5 = mulLymm9_5;
assume red_5 = mulLymm9_5 && true;
smull mulH_6 red_6 ymm4_6 ymm0_6;
assert true && red_6 = mulLymm9_6;
assume red_6 = mulLymm9_6 && true;
smull mulH_7 red_7 ymm4_7 ymm0_7;
assert true && red_7 = mulLymm9_7;
assume red_7 = mulLymm9_7 && true;
smull mulH_8 red_8 ymm4_8 ymm0_8;
assert true && red_8 = mulLymm9_8;
assume red_8 = mulLymm9_8 && true;
smull mulH_9 red_9 ymm4_9 ymm0_9;
assert true && red_9 = mulLymm9_9;
assume red_9 = mulLymm9_9 && true;
smull mulH_a red_a ymm4_a ymm0_a;
assert true && red_a = mulLymm9_a;
assume red_a = mulLymm9_a && true;
smull mulH_b red_b ymm4_b ymm0_b;
assert true && red_b = mulLymm9_b;
assume red_b = mulLymm9_b && true;
smull mulH_c red_c ymm4_c ymm0_c;
assert true && red_c = mulLymm9_c;
assume red_c = mulLymm9_c && true;
smull mulH_d red_d ymm4_d ymm0_d;
assert true && red_d = mulLymm9_d;
assume red_d = mulLymm9_d && true;
smull mulH_e red_e ymm4_e ymm0_e;
assert true && red_e = mulLymm9_e;
assume red_e = mulLymm9_e && true;
smull mulH_f red_f ymm4_f ymm0_f;
assert true && red_f = mulLymm9_f;
assume red_f = mulLymm9_f && true;
mov ymm4_0 mulH_0;
mov ymm4_1 mulH_1;
mov ymm4_2 mulH_2;
mov ymm4_3 mulH_3;
mov ymm4_4 mulH_4;
mov ymm4_5 mulH_5;
mov ymm4_6 mulH_6;
mov ymm4_7 mulH_7;
mov ymm4_8 mulH_8;
mov ymm4_9 mulH_9;
mov ymm4_a mulH_a;
mov ymm4_b mulH_b;
mov ymm4_c mulH_c;
mov ymm4_d mulH_d;
mov ymm4_e mulH_e;
mov ymm4_f mulH_f;
(* vpsubw %ymm4,%ymm9,%ymm9                        #! PC = 0x555555557d59 *)
sub ymm9_0 ymm9_0 ymm4_0;
sub ymm9_1 ymm9_1 ymm4_1;
sub ymm9_2 ymm9_2 ymm4_2;
sub ymm9_3 ymm9_3 ymm4_3;
sub ymm9_4 ymm9_4 ymm4_4;
sub ymm9_5 ymm9_5 ymm4_5;
sub ymm9_6 ymm9_6 ymm4_6;
sub ymm9_7 ymm9_7 ymm4_7;
sub ymm9_8 ymm9_8 ymm4_8;
sub ymm9_9 ymm9_9 ymm4_9;
sub ymm9_a ymm9_a ymm4_a;
sub ymm9_b ymm9_b ymm4_b;
sub ymm9_c ymm9_c ymm4_c;
sub ymm9_d ymm9_d ymm4_d;
sub ymm9_e ymm9_e ymm4_e;
sub ymm9_f ymm9_f ymm4_f;
(* vpmullw %ymm14,%ymm7,%ymm4                      #! PC = 0x555555557d5d *)
smull mulHymm7_0 mulL_0 ymm14_0 ymm7_0;
smull mulHymm7_1 mulL_1 ymm14_1 ymm7_1;
smull mulHymm7_2 mulL_2 ymm14_2 ymm7_2;
smull mulHymm7_3 mulL_3 ymm14_3 ymm7_3;
smull mulHymm7_4 mulL_4 ymm14_4 ymm7_4;
smull mulHymm7_5 mulL_5 ymm14_5 ymm7_5;
smull mulHymm7_6 mulL_6 ymm14_6 ymm7_6;
smull mulHymm7_7 mulL_7 ymm14_7 ymm7_7;
smull mulHymm7_8 mulL_8 ymm14_8 ymm7_8;
smull mulHymm7_9 mulL_9 ymm14_9 ymm7_9;
smull mulHymm7_a mulL_a ymm14_a ymm7_a;
smull mulHymm7_b mulL_b ymm14_b ymm7_b;
smull mulHymm7_c mulL_c ymm14_c ymm7_c;
smull mulHymm7_d mulL_d ymm14_d ymm7_d;
smull mulHymm7_e mulL_e ymm14_e ymm7_e;
smull mulHymm7_f mulL_f ymm14_f ymm7_f;
cast ymm4_0@sint16 mulL_0;
cast ymm4_1@sint16 mulL_1;
cast ymm4_2@sint16 mulL_2;
cast ymm4_3@sint16 mulL_3;
cast ymm4_4@sint16 mulL_4;
cast ymm4_5@sint16 mulL_5;
cast ymm4_6@sint16 mulL_6;
cast ymm4_7@sint16 mulL_7;
cast ymm4_8@sint16 mulL_8;
cast ymm4_9@sint16 mulL_9;
cast ymm4_a@sint16 mulL_a;
cast ymm4_b@sint16 mulL_b;
cast ymm4_c@sint16 mulL_c;
cast ymm4_d@sint16 mulL_d;
cast ymm4_e@sint16 mulL_e;
cast ymm4_f@sint16 mulL_f;
(* vpmulhw %ymm15,%ymm7,%ymm7                      #! PC = 0x555555557d62 *)
smull mulH_0 mulLymm7_0 ymm7_0 ymm15_0;
smull mulH_1 mulLymm7_1 ymm7_1 ymm15_1;
smull mulH_2 mulLymm7_2 ymm7_2 ymm15_2;
smull mulH_3 mulLymm7_3 ymm7_3 ymm15_3;
smull mulH_4 mulLymm7_4 ymm7_4 ymm15_4;
smull mulH_5 mulLymm7_5 ymm7_5 ymm15_5;
smull mulH_6 mulLymm7_6 ymm7_6 ymm15_6;
smull mulH_7 mulLymm7_7 ymm7_7 ymm15_7;
smull mulH_8 mulLymm7_8 ymm7_8 ymm15_8;
smull mulH_9 mulLymm7_9 ymm7_9 ymm15_9;
smull mulH_a mulLymm7_a ymm7_a ymm15_a;
smull mulH_b mulLymm7_b ymm7_b ymm15_b;
smull mulH_c mulLymm7_c ymm7_c ymm15_c;
smull mulH_d mulLymm7_d ymm7_d ymm15_d;
smull mulH_e mulLymm7_e ymm7_e ymm15_e;
smull mulH_f mulLymm7_f ymm7_f ymm15_f;
mov ymm7_0 mulH_0;
mov ymm7_1 mulH_1;
mov ymm7_2 mulH_2;
mov ymm7_3 mulH_3;
mov ymm7_4 mulH_4;
mov ymm7_5 mulH_5;
mov ymm7_6 mulH_6;
mov ymm7_7 mulH_7;
mov ymm7_8 mulH_8;
mov ymm7_9 mulH_9;
mov ymm7_a mulH_a;
mov ymm7_b mulH_b;
mov ymm7_c mulH_c;
mov ymm7_d mulH_d;
mov ymm7_e mulH_e;
mov ymm7_f mulH_f;
(* vpmulhw %ymm0,%ymm4,%ymm4                       #! PC = 0x555555557d67 *)
smull mulH_0 red_0 ymm4_0 ymm0_0;
assert true && red_0 = mulLymm7_0;
assume red_0 = mulLymm7_0 && true;
smull mulH_1 red_1 ymm4_1 ymm0_1;
assert true && red_1 = mulLymm7_1;
assume red_1 = mulLymm7_1 && true;
smull mulH_2 red_2 ymm4_2 ymm0_2;
assert true && red_2 = mulLymm7_2;
assume red_2 = mulLymm7_2 && true;
smull mulH_3 red_3 ymm4_3 ymm0_3;
assert true && red_3 = mulLymm7_3;
assume red_3 = mulLymm7_3 && true;
smull mulH_4 red_4 ymm4_4 ymm0_4;
assert true && red_4 = mulLymm7_4;
assume red_4 = mulLymm7_4 && true;
smull mulH_5 red_5 ymm4_5 ymm0_5;
assert true && red_5 = mulLymm7_5;
assume red_5 = mulLymm7_5 && true;
smull mulH_6 red_6 ymm4_6 ymm0_6;
assert true && red_6 = mulLymm7_6;
assume red_6 = mulLymm7_6 && true;
smull mulH_7 red_7 ymm4_7 ymm0_7;
assert true && red_7 = mulLymm7_7;
assume red_7 = mulLymm7_7 && true;
smull mulH_8 red_8 ymm4_8 ymm0_8;
assert true && red_8 = mulLymm7_8;
assume red_8 = mulLymm7_8 && true;
smull mulH_9 red_9 ymm4_9 ymm0_9;
assert true && red_9 = mulLymm7_9;
assume red_9 = mulLymm7_9 && true;
smull mulH_a red_a ymm4_a ymm0_a;
assert true && red_a = mulLymm7_a;
assume red_a = mulLymm7_a && true;
smull mulH_b red_b ymm4_b ymm0_b;
assert true && red_b = mulLymm7_b;
assume red_b = mulLymm7_b && true;
smull mulH_c red_c ymm4_c ymm0_c;
assert true && red_c = mulLymm7_c;
assume red_c = mulLymm7_c && true;
smull mulH_d red_d ymm4_d ymm0_d;
assert true && red_d = mulLymm7_d;
assume red_d = mulLymm7_d && true;
smull mulH_e red_e ymm4_e ymm0_e;
assert true && red_e = mulLymm7_e;
assume red_e = mulLymm7_e && true;
smull mulH_f red_f ymm4_f ymm0_f;
assert true && red_f = mulLymm7_f;
assume red_f = mulLymm7_f && true;
mov ymm4_0 mulH_0;
mov ymm4_1 mulH_1;
mov ymm4_2 mulH_2;
mov ymm4_3 mulH_3;
mov ymm4_4 mulH_4;
mov ymm4_5 mulH_5;
mov ymm4_6 mulH_6;
mov ymm4_7 mulH_7;
mov ymm4_8 mulH_8;
mov ymm4_9 mulH_9;
mov ymm4_a mulH_a;
mov ymm4_b mulH_b;
mov ymm4_c mulH_c;
mov ymm4_d mulH_d;
mov ymm4_e mulH_e;
mov ymm4_f mulH_f;
(* vpsubw %ymm4,%ymm7,%ymm7                        #! PC = 0x555555557d6b *)
sub ymm7_0 ymm7_0 ymm4_0;
sub ymm7_1 ymm7_1 ymm4_1;
sub ymm7_2 ymm7_2 ymm4_2;
sub ymm7_3 ymm7_3 ymm4_3;
sub ymm7_4 ymm7_4 ymm4_4;
sub ymm7_5 ymm7_5 ymm4_5;
sub ymm7_6 ymm7_6 ymm4_6;
sub ymm7_7 ymm7_7 ymm4_7;
sub ymm7_8 ymm7_8 ymm4_8;
sub ymm7_9 ymm7_9 ymm4_9;
sub ymm7_a ymm7_a ymm4_a;
sub ymm7_b ymm7_b ymm4_b;
sub ymm7_c ymm7_c ymm4_c;
sub ymm7_d ymm7_d ymm4_d;
sub ymm7_e ymm7_e ymm4_e;
sub ymm7_f ymm7_f ymm4_f;
(* vpmullw %ymm14,%ymm5,%ymm4                      #! PC = 0x555555557d6f *)
smull mulHymm5_0 mulL_0 ymm14_0 ymm5_0;
smull mulHymm5_1 mulL_1 ymm14_1 ymm5_1;
smull mulHymm5_2 mulL_2 ymm14_2 ymm5_2;
smull mulHymm5_3 mulL_3 ymm14_3 ymm5_3;
smull mulHymm5_4 mulL_4 ymm14_4 ymm5_4;
smull mulHymm5_5 mulL_5 ymm14_5 ymm5_5;
smull mulHymm5_6 mulL_6 ymm14_6 ymm5_6;
smull mulHymm5_7 mulL_7 ymm14_7 ymm5_7;
smull mulHymm5_8 mulL_8 ymm14_8 ymm5_8;
smull mulHymm5_9 mulL_9 ymm14_9 ymm5_9;
smull mulHymm5_a mulL_a ymm14_a ymm5_a;
smull mulHymm5_b mulL_b ymm14_b ymm5_b;
smull mulHymm5_c mulL_c ymm14_c ymm5_c;
smull mulHymm5_d mulL_d ymm14_d ymm5_d;
smull mulHymm5_e mulL_e ymm14_e ymm5_e;
smull mulHymm5_f mulL_f ymm14_f ymm5_f;
cast ymm4_0@sint16 mulL_0;
cast ymm4_1@sint16 mulL_1;
cast ymm4_2@sint16 mulL_2;
cast ymm4_3@sint16 mulL_3;
cast ymm4_4@sint16 mulL_4;
cast ymm4_5@sint16 mulL_5;
cast ymm4_6@sint16 mulL_6;
cast ymm4_7@sint16 mulL_7;
cast ymm4_8@sint16 mulL_8;
cast ymm4_9@sint16 mulL_9;
cast ymm4_a@sint16 mulL_a;
cast ymm4_b@sint16 mulL_b;
cast ymm4_c@sint16 mulL_c;
cast ymm4_d@sint16 mulL_d;
cast ymm4_e@sint16 mulL_e;
cast ymm4_f@sint16 mulL_f;
(* vpmulhw %ymm15,%ymm5,%ymm5                      #! PC = 0x555555557d74 *)
smull mulH_0 mulLymm5_0 ymm5_0 ymm15_0;
smull mulH_1 mulLymm5_1 ymm5_1 ymm15_1;
smull mulH_2 mulLymm5_2 ymm5_2 ymm15_2;
smull mulH_3 mulLymm5_3 ymm5_3 ymm15_3;
smull mulH_4 mulLymm5_4 ymm5_4 ymm15_4;
smull mulH_5 mulLymm5_5 ymm5_5 ymm15_5;
smull mulH_6 mulLymm5_6 ymm5_6 ymm15_6;
smull mulH_7 mulLymm5_7 ymm5_7 ymm15_7;
smull mulH_8 mulLymm5_8 ymm5_8 ymm15_8;
smull mulH_9 mulLymm5_9 ymm5_9 ymm15_9;
smull mulH_a mulLymm5_a ymm5_a ymm15_a;
smull mulH_b mulLymm5_b ymm5_b ymm15_b;
smull mulH_c mulLymm5_c ymm5_c ymm15_c;
smull mulH_d mulLymm5_d ymm5_d ymm15_d;
smull mulH_e mulLymm5_e ymm5_e ymm15_e;
smull mulH_f mulLymm5_f ymm5_f ymm15_f;
mov ymm5_0 mulH_0;
mov ymm5_1 mulH_1;
mov ymm5_2 mulH_2;
mov ymm5_3 mulH_3;
mov ymm5_4 mulH_4;
mov ymm5_5 mulH_5;
mov ymm5_6 mulH_6;
mov ymm5_7 mulH_7;
mov ymm5_8 mulH_8;
mov ymm5_9 mulH_9;
mov ymm5_a mulH_a;
mov ymm5_b mulH_b;
mov ymm5_c mulH_c;
mov ymm5_d mulH_d;
mov ymm5_e mulH_e;
mov ymm5_f mulH_f;
(* vpmulhw %ymm0,%ymm4,%ymm4                       #! PC = 0x555555557d79 *)
smull mulH_0 red_0 ymm4_0 ymm0_0;
assert true && red_0 = mulLymm5_0;
assume red_0 = mulLymm5_0 && true;
smull mulH_1 red_1 ymm4_1 ymm0_1;
assert true && red_1 = mulLymm5_1;
assume red_1 = mulLymm5_1 && true;
smull mulH_2 red_2 ymm4_2 ymm0_2;
assert true && red_2 = mulLymm5_2;
assume red_2 = mulLymm5_2 && true;
smull mulH_3 red_3 ymm4_3 ymm0_3;
assert true && red_3 = mulLymm5_3;
assume red_3 = mulLymm5_3 && true;
smull mulH_4 red_4 ymm4_4 ymm0_4;
assert true && red_4 = mulLymm5_4;
assume red_4 = mulLymm5_4 && true;
smull mulH_5 red_5 ymm4_5 ymm0_5;
assert true && red_5 = mulLymm5_5;
assume red_5 = mulLymm5_5 && true;
smull mulH_6 red_6 ymm4_6 ymm0_6;
assert true && red_6 = mulLymm5_6;
assume red_6 = mulLymm5_6 && true;
smull mulH_7 red_7 ymm4_7 ymm0_7;
assert true && red_7 = mulLymm5_7;
assume red_7 = mulLymm5_7 && true;
smull mulH_8 red_8 ymm4_8 ymm0_8;
assert true && red_8 = mulLymm5_8;
assume red_8 = mulLymm5_8 && true;
smull mulH_9 red_9 ymm4_9 ymm0_9;
assert true && red_9 = mulLymm5_9;
assume red_9 = mulLymm5_9 && true;
smull mulH_a red_a ymm4_a ymm0_a;
assert true && red_a = mulLymm5_a;
assume red_a = mulLymm5_a && true;
smull mulH_b red_b ymm4_b ymm0_b;
assert true && red_b = mulLymm5_b;
assume red_b = mulLymm5_b && true;
smull mulH_c red_c ymm4_c ymm0_c;
assert true && red_c = mulLymm5_c;
assume red_c = mulLymm5_c && true;
smull mulH_d red_d ymm4_d ymm0_d;
assert true && red_d = mulLymm5_d;
assume red_d = mulLymm5_d && true;
smull mulH_e red_e ymm4_e ymm0_e;
assert true && red_e = mulLymm5_e;
assume red_e = mulLymm5_e && true;
smull mulH_f red_f ymm4_f ymm0_f;
assert true && red_f = mulLymm5_f;
assume red_f = mulLymm5_f && true;
mov ymm4_0 mulH_0;
mov ymm4_1 mulH_1;
mov ymm4_2 mulH_2;
mov ymm4_3 mulH_3;
mov ymm4_4 mulH_4;
mov ymm4_5 mulH_5;
mov ymm4_6 mulH_6;
mov ymm4_7 mulH_7;
mov ymm4_8 mulH_8;
mov ymm4_9 mulH_9;
mov ymm4_a mulH_a;
mov ymm4_b mulH_b;
mov ymm4_c mulH_c;
mov ymm4_d mulH_d;
mov ymm4_e mulH_e;
mov ymm4_f mulH_f;
(* vpsubw %ymm4,%ymm5,%ymm5                        #! PC = 0x555555557d7d *)
sub ymm5_0 ymm5_0 ymm4_0;
sub ymm5_1 ymm5_1 ymm4_1;
sub ymm5_2 ymm5_2 ymm4_2;
sub ymm5_3 ymm5_3 ymm4_3;
sub ymm5_4 ymm5_4 ymm4_4;
sub ymm5_5 ymm5_5 ymm4_5;
sub ymm5_6 ymm5_6 ymm4_6;
sub ymm5_7 ymm5_7 ymm4_7;
sub ymm5_8 ymm5_8 ymm4_8;
sub ymm5_9 ymm5_9 ymm4_9;
sub ymm5_a ymm5_a ymm4_a;
sub ymm5_b ymm5_b ymm4_b;
sub ymm5_c ymm5_c ymm4_c;
sub ymm5_d ymm5_d ymm4_d;
sub ymm5_e ymm5_e ymm4_e;
sub ymm5_f ymm5_f ymm4_f;
(* vpaddw %ymm3,%ymm10,%ymm4                       #! PC = 0x555555557d81 *)
add ymm4_0 ymm10_0 ymm3_0;
add ymm4_1 ymm10_1 ymm3_1;
add ymm4_2 ymm10_2 ymm3_2;
add ymm4_3 ymm10_3 ymm3_3;
add ymm4_4 ymm10_4 ymm3_4;
add ymm4_5 ymm10_5 ymm3_5;
add ymm4_6 ymm10_6 ymm3_6;
add ymm4_7 ymm10_7 ymm3_7;
add ymm4_8 ymm10_8 ymm3_8;
add ymm4_9 ymm10_9 ymm3_9;
add ymm4_a ymm10_a ymm3_a;
add ymm4_b ymm10_b ymm3_b;
add ymm4_c ymm10_c ymm3_c;
add ymm4_d ymm10_d ymm3_d;
add ymm4_e ymm10_e ymm3_e;
add ymm4_f ymm10_f ymm3_f;
(* vpsubw %ymm3,%ymm10,%ymm3                       #! PC = 0x555555557d85 *)
sub ymm3_0 ymm10_0 ymm3_0;
sub ymm3_1 ymm10_1 ymm3_1;
sub ymm3_2 ymm10_2 ymm3_2;
sub ymm3_3 ymm10_3 ymm3_3;
sub ymm3_4 ymm10_4 ymm3_4;
sub ymm3_5 ymm10_5 ymm3_5;
sub ymm3_6 ymm10_6 ymm3_6;
sub ymm3_7 ymm10_7 ymm3_7;
sub ymm3_8 ymm10_8 ymm3_8;
sub ymm3_9 ymm10_9 ymm3_9;
sub ymm3_a ymm10_a ymm3_a;
sub ymm3_b ymm10_b ymm3_b;
sub ymm3_c ymm10_c ymm3_c;
sub ymm3_d ymm10_d ymm3_d;
sub ymm3_e ymm10_e ymm3_e;
sub ymm3_f ymm10_f ymm3_f;
(* vpaddw %ymm6,%ymm9,%ymm10                       #! PC = 0x555555557d89 *)
add ymm10_0 ymm9_0 ymm6_0;
add ymm10_1 ymm9_1 ymm6_1;
add ymm10_2 ymm9_2 ymm6_2;
add ymm10_3 ymm9_3 ymm6_3;
add ymm10_4 ymm9_4 ymm6_4;
add ymm10_5 ymm9_5 ymm6_5;
add ymm10_6 ymm9_6 ymm6_6;
add ymm10_7 ymm9_7 ymm6_7;
add ymm10_8 ymm9_8 ymm6_8;
add ymm10_9 ymm9_9 ymm6_9;
add ymm10_a ymm9_a ymm6_a;
add ymm10_b ymm9_b ymm6_b;
add ymm10_c ymm9_c ymm6_c;
add ymm10_d ymm9_d ymm6_d;
add ymm10_e ymm9_e ymm6_e;
add ymm10_f ymm9_f ymm6_f;
(* vpsubw %ymm6,%ymm9,%ymm6                        #! PC = 0x555555557d8d *)
sub ymm6_0 ymm9_0 ymm6_0;
sub ymm6_1 ymm9_1 ymm6_1;
sub ymm6_2 ymm9_2 ymm6_2;
sub ymm6_3 ymm9_3 ymm6_3;
sub ymm6_4 ymm9_4 ymm6_4;
sub ymm6_5 ymm9_5 ymm6_5;
sub ymm6_6 ymm9_6 ymm6_6;
sub ymm6_7 ymm9_7 ymm6_7;
sub ymm6_8 ymm9_8 ymm6_8;
sub ymm6_9 ymm9_9 ymm6_9;
sub ymm6_a ymm9_a ymm6_a;
sub ymm6_b ymm9_b ymm6_b;
sub ymm6_c ymm9_c ymm6_c;
sub ymm6_d ymm9_d ymm6_d;
sub ymm6_e ymm9_e ymm6_e;
sub ymm6_f ymm9_f ymm6_f;
(* vpaddw %ymm8,%ymm7,%ymm9                        #! PC = 0x555555557d91 *)
add ymm9_0 ymm7_0 ymm8_0;
add ymm9_1 ymm7_1 ymm8_1;
add ymm9_2 ymm7_2 ymm8_2;
add ymm9_3 ymm7_3 ymm8_3;
add ymm9_4 ymm7_4 ymm8_4;
add ymm9_5 ymm7_5 ymm8_5;
add ymm9_6 ymm7_6 ymm8_6;
add ymm9_7 ymm7_7 ymm8_7;
add ymm9_8 ymm7_8 ymm8_8;
add ymm9_9 ymm7_9 ymm8_9;
add ymm9_a ymm7_a ymm8_a;
add ymm9_b ymm7_b ymm8_b;
add ymm9_c ymm7_c ymm8_c;
add ymm9_d ymm7_d ymm8_d;
add ymm9_e ymm7_e ymm8_e;
add ymm9_f ymm7_f ymm8_f;
(* vpsubw %ymm8,%ymm7,%ymm8                        #! PC = 0x555555557d96 *)
sub ymm8_0 ymm7_0 ymm8_0;
sub ymm8_1 ymm7_1 ymm8_1;
sub ymm8_2 ymm7_2 ymm8_2;
sub ymm8_3 ymm7_3 ymm8_3;
sub ymm8_4 ymm7_4 ymm8_4;
sub ymm8_5 ymm7_5 ymm8_5;
sub ymm8_6 ymm7_6 ymm8_6;
sub ymm8_7 ymm7_7 ymm8_7;
sub ymm8_8 ymm7_8 ymm8_8;
sub ymm8_9 ymm7_9 ymm8_9;
sub ymm8_a ymm7_a ymm8_a;
sub ymm8_b ymm7_b ymm8_b;
sub ymm8_c ymm7_c ymm8_c;
sub ymm8_d ymm7_d ymm8_d;
sub ymm8_e ymm7_e ymm8_e;
sub ymm8_f ymm7_f ymm8_f;
(* vpaddw %ymm11,%ymm5,%ymm7                       #! PC = 0x555555557d9b *)
add ymm7_0 ymm5_0 ymm11_0;
add ymm7_1 ymm5_1 ymm11_1;
add ymm7_2 ymm5_2 ymm11_2;
add ymm7_3 ymm5_3 ymm11_3;
add ymm7_4 ymm5_4 ymm11_4;
add ymm7_5 ymm5_5 ymm11_5;
add ymm7_6 ymm5_6 ymm11_6;
add ymm7_7 ymm5_7 ymm11_7;
add ymm7_8 ymm5_8 ymm11_8;
add ymm7_9 ymm5_9 ymm11_9;
add ymm7_a ymm5_a ymm11_a;
add ymm7_b ymm5_b ymm11_b;
add ymm7_c ymm5_c ymm11_c;
add ymm7_d ymm5_d ymm11_d;
add ymm7_e ymm5_e ymm11_e;
add ymm7_f ymm5_f ymm11_f;
(* vpsubw %ymm11,%ymm5,%ymm11                      #! PC = 0x555555557da0 *)
sub ymm11_0 ymm5_0 ymm11_0;
sub ymm11_1 ymm5_1 ymm11_1;
sub ymm11_2 ymm5_2 ymm11_2;
sub ymm11_3 ymm5_3 ymm11_3;
sub ymm11_4 ymm5_4 ymm11_4;
sub ymm11_5 ymm5_5 ymm11_5;
sub ymm11_6 ymm5_6 ymm11_6;
sub ymm11_7 ymm5_7 ymm11_7;
sub ymm11_8 ymm5_8 ymm11_8;
sub ymm11_9 ymm5_9 ymm11_9;
sub ymm11_a ymm5_a ymm11_a;
sub ymm11_b ymm5_b ymm11_b;
sub ymm11_c ymm5_c ymm11_c;
sub ymm11_d ymm5_d ymm11_d;
sub ymm11_e ymm5_e ymm11_e;
sub ymm11_f ymm5_f ymm11_f;
(* vpunpcklwd %ymm3,%ymm4,%ymm5                    #! PC = 0x555555557da5 *)
mov lwd_0 ymm4_0;
mov lwd_1 ymm3_0;
mov lwd_2 ymm4_1;
mov lwd_3 ymm3_1;
mov lwd_4 ymm4_2;
mov lwd_5 ymm3_2;
mov lwd_6 ymm4_3;
mov lwd_7 ymm3_3;
mov lwd_8 ymm4_8;
mov lwd_9 ymm3_8;
mov lwd_a ymm4_9;
mov lwd_b ymm3_9;
mov lwd_c ymm4_a;
mov lwd_d ymm3_a;
mov lwd_e ymm4_b;
mov lwd_f ymm3_b;
mov ymm5_0 lwd_0;
mov ymm5_1 lwd_1;
mov ymm5_2 lwd_2;
mov ymm5_3 lwd_3;
mov ymm5_4 lwd_4;
mov ymm5_5 lwd_5;
mov ymm5_6 lwd_6;
mov ymm5_7 lwd_7;
mov ymm5_8 lwd_8;
mov ymm5_9 lwd_9;
mov ymm5_a lwd_a;
mov ymm5_b lwd_b;
mov ymm5_c lwd_c;
mov ymm5_d lwd_d;
mov ymm5_e lwd_e;
mov ymm5_f lwd_f;
(* vpunpckhwd %ymm3,%ymm4,%ymm3                    #! PC = 0x555555557da9 *)
mov hwd_0 ymm4_4;
mov hwd_1 ymm3_4;
mov hwd_2 ymm4_5;
mov hwd_3 ymm3_5;
mov hwd_4 ymm4_6;
mov hwd_5 ymm3_6;
mov hwd_6 ymm4_7;
mov hwd_7 ymm3_7;
mov hwd_8 ymm4_c;
mov hwd_9 ymm3_c;
mov hwd_a ymm4_d;
mov hwd_b ymm3_d;
mov hwd_c ymm4_e;
mov hwd_d ymm3_e;
mov hwd_e ymm4_f;
mov hwd_f ymm3_f;
mov ymm3_0 hwd_0;
mov ymm3_1 hwd_1;
mov ymm3_2 hwd_2;
mov ymm3_3 hwd_3;
mov ymm3_4 hwd_4;
mov ymm3_5 hwd_5;
mov ymm3_6 hwd_6;
mov ymm3_7 hwd_7;
mov ymm3_8 hwd_8;
mov ymm3_9 hwd_9;
mov ymm3_a hwd_a;
mov ymm3_b hwd_b;
mov ymm3_c hwd_c;
mov ymm3_d hwd_d;
mov ymm3_e hwd_e;
mov ymm3_f hwd_f;
(* vpunpcklwd %ymm6,%ymm10,%ymm4                   #! PC = 0x555555557dad *)
mov lwd_0 ymm10_0;
mov lwd_1 ymm6_0;
mov lwd_2 ymm10_1;
mov lwd_3 ymm6_1;
mov lwd_4 ymm10_2;
mov lwd_5 ymm6_2;
mov lwd_6 ymm10_3;
mov lwd_7 ymm6_3;
mov lwd_8 ymm10_8;
mov lwd_9 ymm6_8;
mov lwd_a ymm10_9;
mov lwd_b ymm6_9;
mov lwd_c ymm10_a;
mov lwd_d ymm6_a;
mov lwd_e ymm10_b;
mov lwd_f ymm6_b;
mov ymm4_0 lwd_0;
mov ymm4_1 lwd_1;
mov ymm4_2 lwd_2;
mov ymm4_3 lwd_3;
mov ymm4_4 lwd_4;
mov ymm4_5 lwd_5;
mov ymm4_6 lwd_6;
mov ymm4_7 lwd_7;
mov ymm4_8 lwd_8;
mov ymm4_9 lwd_9;
mov ymm4_a lwd_a;
mov ymm4_b lwd_b;
mov ymm4_c lwd_c;
mov ymm4_d lwd_d;
mov ymm4_e lwd_e;
mov ymm4_f lwd_f;
(* vpunpckhwd %ymm6,%ymm10,%ymm6                   #! PC = 0x555555557db1 *)
mov hwd_0 ymm10_4;
mov hwd_1 ymm6_4;
mov hwd_2 ymm10_5;
mov hwd_3 ymm6_5;
mov hwd_4 ymm10_6;
mov hwd_5 ymm6_6;
mov hwd_6 ymm10_7;
mov hwd_7 ymm6_7;
mov hwd_8 ymm10_c;
mov hwd_9 ymm6_c;
mov hwd_a ymm10_d;
mov hwd_b ymm6_d;
mov hwd_c ymm10_e;
mov hwd_d ymm6_e;
mov hwd_e ymm10_f;
mov hwd_f ymm6_f;
mov ymm6_0 hwd_0;
mov ymm6_1 hwd_1;
mov ymm6_2 hwd_2;
mov ymm6_3 hwd_3;
mov ymm6_4 hwd_4;
mov ymm6_5 hwd_5;
mov ymm6_6 hwd_6;
mov ymm6_7 hwd_7;
mov ymm6_8 hwd_8;
mov ymm6_9 hwd_9;
mov ymm6_a hwd_a;
mov ymm6_b hwd_b;
mov ymm6_c hwd_c;
mov ymm6_d hwd_d;
mov ymm6_e hwd_e;
mov ymm6_f hwd_f;
(* vpunpcklwd %ymm8,%ymm9,%ymm10                   #! PC = 0x555555557db5 *)
mov lwd_0 ymm9_0;
mov lwd_1 ymm8_0;
mov lwd_2 ymm9_1;
mov lwd_3 ymm8_1;
mov lwd_4 ymm9_2;
mov lwd_5 ymm8_2;
mov lwd_6 ymm9_3;
mov lwd_7 ymm8_3;
mov lwd_8 ymm9_8;
mov lwd_9 ymm8_8;
mov lwd_a ymm9_9;
mov lwd_b ymm8_9;
mov lwd_c ymm9_a;
mov lwd_d ymm8_a;
mov lwd_e ymm9_b;
mov lwd_f ymm8_b;
mov ymm10_0 lwd_0;
mov ymm10_1 lwd_1;
mov ymm10_2 lwd_2;
mov ymm10_3 lwd_3;
mov ymm10_4 lwd_4;
mov ymm10_5 lwd_5;
mov ymm10_6 lwd_6;
mov ymm10_7 lwd_7;
mov ymm10_8 lwd_8;
mov ymm10_9 lwd_9;
mov ymm10_a lwd_a;
mov ymm10_b lwd_b;
mov ymm10_c lwd_c;
mov ymm10_d lwd_d;
mov ymm10_e lwd_e;
mov ymm10_f lwd_f;
(* vpunpckhwd %ymm8,%ymm9,%ymm8                    #! PC = 0x555555557dba *)
mov hwd_0 ymm9_4;
mov hwd_1 ymm8_4;
mov hwd_2 ymm9_5;
mov hwd_3 ymm8_5;
mov hwd_4 ymm9_6;
mov hwd_5 ymm8_6;
mov hwd_6 ymm9_7;
mov hwd_7 ymm8_7;
mov hwd_8 ymm9_c;
mov hwd_9 ymm8_c;
mov hwd_a ymm9_d;
mov hwd_b ymm8_d;
mov hwd_c ymm9_e;
mov hwd_d ymm8_e;
mov hwd_e ymm9_f;
mov hwd_f ymm8_f;
mov ymm8_0 hwd_0;
mov ymm8_1 hwd_1;
mov ymm8_2 hwd_2;
mov ymm8_3 hwd_3;
mov ymm8_4 hwd_4;
mov ymm8_5 hwd_5;
mov ymm8_6 hwd_6;
mov ymm8_7 hwd_7;
mov ymm8_8 hwd_8;
mov ymm8_9 hwd_9;
mov ymm8_a hwd_a;
mov ymm8_b hwd_b;
mov ymm8_c hwd_c;
mov ymm8_d hwd_d;
mov ymm8_e hwd_e;
mov ymm8_f hwd_f;
(* vpunpcklwd %ymm11,%ymm7,%ymm9                   #! PC = 0x555555557dbf *)
mov lwd_0 ymm7_0;
mov lwd_1 ymm11_0;
mov lwd_2 ymm7_1;
mov lwd_3 ymm11_1;
mov lwd_4 ymm7_2;
mov lwd_5 ymm11_2;
mov lwd_6 ymm7_3;
mov lwd_7 ymm11_3;
mov lwd_8 ymm7_8;
mov lwd_9 ymm11_8;
mov lwd_a ymm7_9;
mov lwd_b ymm11_9;
mov lwd_c ymm7_a;
mov lwd_d ymm11_a;
mov lwd_e ymm7_b;
mov lwd_f ymm11_b;
mov ymm9_0 lwd_0;
mov ymm9_1 lwd_1;
mov ymm9_2 lwd_2;
mov ymm9_3 lwd_3;
mov ymm9_4 lwd_4;
mov ymm9_5 lwd_5;
mov ymm9_6 lwd_6;
mov ymm9_7 lwd_7;
mov ymm9_8 lwd_8;
mov ymm9_9 lwd_9;
mov ymm9_a lwd_a;
mov ymm9_b lwd_b;
mov ymm9_c lwd_c;
mov ymm9_d lwd_d;
mov ymm9_e lwd_e;
mov ymm9_f lwd_f;
(* vpunpckhwd %ymm11,%ymm7,%ymm11                  #! PC = 0x555555557dc4 *)
mov hwd_0 ymm7_4;
mov hwd_1 ymm11_4;
mov hwd_2 ymm7_5;
mov hwd_3 ymm11_5;
mov hwd_4 ymm7_6;
mov hwd_5 ymm11_6;
mov hwd_6 ymm7_7;
mov hwd_7 ymm11_7;
mov hwd_8 ymm7_c;
mov hwd_9 ymm11_c;
mov hwd_a ymm7_d;
mov hwd_b ymm11_d;
mov hwd_c ymm7_e;
mov hwd_d ymm11_e;
mov hwd_e ymm7_f;
mov hwd_f ymm11_f;
mov ymm11_0 hwd_0;
mov ymm11_1 hwd_1;
mov ymm11_2 hwd_2;
mov ymm11_3 hwd_3;
mov ymm11_4 hwd_4;
mov ymm11_5 hwd_5;
mov ymm11_6 hwd_6;
mov ymm11_7 hwd_7;
mov ymm11_8 hwd_8;
mov ymm11_9 hwd_9;
mov ymm11_a hwd_a;
mov ymm11_b hwd_b;
mov ymm11_c hwd_c;
mov ymm11_d hwd_d;
mov ymm11_e hwd_e;
mov ymm11_f hwd_f;
(* vpbroadcastq 0x120(%rdx),%ymm1                  #! EA = L0x555555561240; Value = 0xee3d92395a10450b; PC = 0x555555557dc9 *)
mov ymm1_0 L0x555555561240;
mov ymm1_1 L0x555555561242;
mov ymm1_2 L0x555555561244;
mov ymm1_3 L0x555555561246;
mov ymm1_4 L0x555555561240;
mov ymm1_5 L0x555555561242;
mov ymm1_6 L0x555555561244;
mov ymm1_7 L0x555555561246;
mov ymm1_8 L0x555555561240;
mov ymm1_9 L0x555555561242;
mov ymm1_a L0x555555561244;
mov ymm1_b L0x555555561246;
mov ymm1_c L0x555555561240;
mov ymm1_d L0x555555561242;
mov ymm1_e L0x555555561244;
mov ymm1_f L0x555555561246;
(* vpbroadcastq 0x320(%rdx),%ymm2                  #! EA = L0x555555561440; Value = 0xf03dec39fa10130b; PC = 0x555555557dd2 *)
mov ymm2_0 L0x555555561440;
mov ymm2_1 L0x555555561442;
mov ymm2_2 L0x555555561444;
mov ymm2_3 L0x555555561446;
mov ymm2_4 L0x555555561440;
mov ymm2_5 L0x555555561442;
mov ymm2_6 L0x555555561444;
mov ymm2_7 L0x555555561446;
mov ymm2_8 L0x555555561440;
mov ymm2_9 L0x555555561442;
mov ymm2_a L0x555555561444;
mov ymm2_b L0x555555561446;
mov ymm2_c L0x555555561440;
mov ymm2_d L0x555555561442;
mov ymm2_e L0x555555561444;
mov ymm2_f L0x555555561446;
(* vpmullw %ymm1,%ymm3,%ymm7                       #! PC = 0x555555557ddb *)
smull mulHymm3_0 mulL_0 ymm1_0 ymm3_0;
smull mulHymm3_1 mulL_1 ymm1_1 ymm3_1;
smull mulHymm3_2 mulL_2 ymm1_2 ymm3_2;
smull mulHymm3_3 mulL_3 ymm1_3 ymm3_3;
smull mulHymm3_4 mulL_4 ymm1_4 ymm3_4;
smull mulHymm3_5 mulL_5 ymm1_5 ymm3_5;
smull mulHymm3_6 mulL_6 ymm1_6 ymm3_6;
smull mulHymm3_7 mulL_7 ymm1_7 ymm3_7;
smull mulHymm3_8 mulL_8 ymm1_8 ymm3_8;
smull mulHymm3_9 mulL_9 ymm1_9 ymm3_9;
smull mulHymm3_a mulL_a ymm1_a ymm3_a;
smull mulHymm3_b mulL_b ymm1_b ymm3_b;
smull mulHymm3_c mulL_c ymm1_c ymm3_c;
smull mulHymm3_d mulL_d ymm1_d ymm3_d;
smull mulHymm3_e mulL_e ymm1_e ymm3_e;
smull mulHymm3_f mulL_f ymm1_f ymm3_f;
cast ymm7_0@sint16 mulL_0;
cast ymm7_1@sint16 mulL_1;
cast ymm7_2@sint16 mulL_2;
cast ymm7_3@sint16 mulL_3;
cast ymm7_4@sint16 mulL_4;
cast ymm7_5@sint16 mulL_5;
cast ymm7_6@sint16 mulL_6;
cast ymm7_7@sint16 mulL_7;
cast ymm7_8@sint16 mulL_8;
cast ymm7_9@sint16 mulL_9;
cast ymm7_a@sint16 mulL_a;
cast ymm7_b@sint16 mulL_b;
cast ymm7_c@sint16 mulL_c;
cast ymm7_d@sint16 mulL_d;
cast ymm7_e@sint16 mulL_e;
cast ymm7_f@sint16 mulL_f;
(* vpmulhw %ymm2,%ymm3,%ymm3                       #! PC = 0x555555557ddf *)
smull mulH_0 mulLymm3_0 ymm3_0 ymm2_0;
smull mulH_1 mulLymm3_1 ymm3_1 ymm2_1;
smull mulH_2 mulLymm3_2 ymm3_2 ymm2_2;
smull mulH_3 mulLymm3_3 ymm3_3 ymm2_3;
smull mulH_4 mulLymm3_4 ymm3_4 ymm2_4;
smull mulH_5 mulLymm3_5 ymm3_5 ymm2_5;
smull mulH_6 mulLymm3_6 ymm3_6 ymm2_6;
smull mulH_7 mulLymm3_7 ymm3_7 ymm2_7;
smull mulH_8 mulLymm3_8 ymm3_8 ymm2_8;
smull mulH_9 mulLymm3_9 ymm3_9 ymm2_9;
smull mulH_a mulLymm3_a ymm3_a ymm2_a;
smull mulH_b mulLymm3_b ymm3_b ymm2_b;
smull mulH_c mulLymm3_c ymm3_c ymm2_c;
smull mulH_d mulLymm3_d ymm3_d ymm2_d;
smull mulH_e mulLymm3_e ymm3_e ymm2_e;
smull mulH_f mulLymm3_f ymm3_f ymm2_f;
mov ymm3_0 mulH_0;
mov ymm3_1 mulH_1;
mov ymm3_2 mulH_2;
mov ymm3_3 mulH_3;
mov ymm3_4 mulH_4;
mov ymm3_5 mulH_5;
mov ymm3_6 mulH_6;
mov ymm3_7 mulH_7;
mov ymm3_8 mulH_8;
mov ymm3_9 mulH_9;
mov ymm3_a mulH_a;
mov ymm3_b mulH_b;
mov ymm3_c mulH_c;
mov ymm3_d mulH_d;
mov ymm3_e mulH_e;
mov ymm3_f mulH_f;
(* vpmulhw %ymm0,%ymm7,%ymm7                       #! PC = 0x555555557de3 *)
smull mulH_0 red_0 ymm7_0 ymm0_0;
assert true && red_0 = mulLymm3_0;
assume red_0 = mulLymm3_0 && true;
smull mulH_1 red_1 ymm7_1 ymm0_1;
assert true && red_1 = mulLymm3_1;
assume red_1 = mulLymm3_1 && true;
smull mulH_2 red_2 ymm7_2 ymm0_2;
assert true && red_2 = mulLymm3_2;
assume red_2 = mulLymm3_2 && true;
smull mulH_3 red_3 ymm7_3 ymm0_3;
assert true && red_3 = mulLymm3_3;
assume red_3 = mulLymm3_3 && true;
smull mulH_4 red_4 ymm7_4 ymm0_4;
assert true && red_4 = mulLymm3_4;
assume red_4 = mulLymm3_4 && true;
smull mulH_5 red_5 ymm7_5 ymm0_5;
assert true && red_5 = mulLymm3_5;
assume red_5 = mulLymm3_5 && true;
smull mulH_6 red_6 ymm7_6 ymm0_6;
assert true && red_6 = mulLymm3_6;
assume red_6 = mulLymm3_6 && true;
smull mulH_7 red_7 ymm7_7 ymm0_7;
assert true && red_7 = mulLymm3_7;
assume red_7 = mulLymm3_7 && true;
smull mulH_8 red_8 ymm7_8 ymm0_8;
assert true && red_8 = mulLymm3_8;
assume red_8 = mulLymm3_8 && true;
smull mulH_9 red_9 ymm7_9 ymm0_9;
assert true && red_9 = mulLymm3_9;
assume red_9 = mulLymm3_9 && true;
smull mulH_a red_a ymm7_a ymm0_a;
assert true && red_a = mulLymm3_a;
assume red_a = mulLymm3_a && true;
smull mulH_b red_b ymm7_b ymm0_b;
assert true && red_b = mulLymm3_b;
assume red_b = mulLymm3_b && true;
smull mulH_c red_c ymm7_c ymm0_c;
assert true && red_c = mulLymm3_c;
assume red_c = mulLymm3_c && true;
smull mulH_d red_d ymm7_d ymm0_d;
assert true && red_d = mulLymm3_d;
assume red_d = mulLymm3_d && true;
smull mulH_e red_e ymm7_e ymm0_e;
assert true && red_e = mulLymm3_e;
assume red_e = mulLymm3_e && true;
smull mulH_f red_f ymm7_f ymm0_f;
assert true && red_f = mulLymm3_f;
assume red_f = mulLymm3_f && true;
mov ymm7_0 mulH_0;
mov ymm7_1 mulH_1;
mov ymm7_2 mulH_2;
mov ymm7_3 mulH_3;
mov ymm7_4 mulH_4;
mov ymm7_5 mulH_5;
mov ymm7_6 mulH_6;
mov ymm7_7 mulH_7;
mov ymm7_8 mulH_8;
mov ymm7_9 mulH_9;
mov ymm7_a mulH_a;
mov ymm7_b mulH_b;
mov ymm7_c mulH_c;
mov ymm7_d mulH_d;
mov ymm7_e mulH_e;
mov ymm7_f mulH_f;
(* vpsubw %ymm7,%ymm3,%ymm3                        #! PC = 0x555555557de7 *)
sub ymm3_0 ymm3_0 ymm7_0;
sub ymm3_1 ymm3_1 ymm7_1;
sub ymm3_2 ymm3_2 ymm7_2;
sub ymm3_3 ymm3_3 ymm7_3;
sub ymm3_4 ymm3_4 ymm7_4;
sub ymm3_5 ymm3_5 ymm7_5;
sub ymm3_6 ymm3_6 ymm7_6;
sub ymm3_7 ymm3_7 ymm7_7;
sub ymm3_8 ymm3_8 ymm7_8;
sub ymm3_9 ymm3_9 ymm7_9;
sub ymm3_a ymm3_a ymm7_a;
sub ymm3_b ymm3_b ymm7_b;
sub ymm3_c ymm3_c ymm7_c;
sub ymm3_d ymm3_d ymm7_d;
sub ymm3_e ymm3_e ymm7_e;
sub ymm3_f ymm3_f ymm7_f;
(* vpbroadcastq 0x128(%rdx),%ymm1                  #! EA = L0x555555561248; Value = 0xe2fb1c3c679663c7; PC = 0x555555557deb *)
mov ymm1_0 L0x555555561248;
mov ymm1_1 L0x55555556124a;
mov ymm1_2 L0x55555556124c;
mov ymm1_3 L0x55555556124e;
mov ymm1_4 L0x555555561248;
mov ymm1_5 L0x55555556124a;
mov ymm1_6 L0x55555556124c;
mov ymm1_7 L0x55555556124e;
mov ymm1_8 L0x555555561248;
mov ymm1_9 L0x55555556124a;
mov ymm1_a L0x55555556124c;
mov ymm1_b L0x55555556124e;
mov ymm1_c L0x555555561248;
mov ymm1_d L0x55555556124a;
mov ymm1_e L0x55555556124c;
mov ymm1_f L0x55555556124e;
(* vpbroadcastq 0x328(%rdx),%ymm2                  #! EA = L0x555555561448; Value = 0x10fbf43c039609c7; PC = 0x555555557df4 *)
mov ymm2_0 L0x555555561448;
mov ymm2_1 L0x55555556144a;
mov ymm2_2 L0x55555556144c;
mov ymm2_3 L0x55555556144e;
mov ymm2_4 L0x555555561448;
mov ymm2_5 L0x55555556144a;
mov ymm2_6 L0x55555556144c;
mov ymm2_7 L0x55555556144e;
mov ymm2_8 L0x555555561448;
mov ymm2_9 L0x55555556144a;
mov ymm2_a L0x55555556144c;
mov ymm2_b L0x55555556144e;
mov ymm2_c L0x555555561448;
mov ymm2_d L0x55555556144a;
mov ymm2_e L0x55555556144c;
mov ymm2_f L0x55555556144e;
(* vpmullw %ymm1,%ymm6,%ymm7                       #! PC = 0x555555557dfd *)
smull mulHymm6_0 mulL_0 ymm1_0 ymm6_0;
smull mulHymm6_1 mulL_1 ymm1_1 ymm6_1;
smull mulHymm6_2 mulL_2 ymm1_2 ymm6_2;
smull mulHymm6_3 mulL_3 ymm1_3 ymm6_3;
smull mulHymm6_4 mulL_4 ymm1_4 ymm6_4;
smull mulHymm6_5 mulL_5 ymm1_5 ymm6_5;
smull mulHymm6_6 mulL_6 ymm1_6 ymm6_6;
smull mulHymm6_7 mulL_7 ymm1_7 ymm6_7;
smull mulHymm6_8 mulL_8 ymm1_8 ymm6_8;
smull mulHymm6_9 mulL_9 ymm1_9 ymm6_9;
smull mulHymm6_a mulL_a ymm1_a ymm6_a;
smull mulHymm6_b mulL_b ymm1_b ymm6_b;
smull mulHymm6_c mulL_c ymm1_c ymm6_c;
smull mulHymm6_d mulL_d ymm1_d ymm6_d;
smull mulHymm6_e mulL_e ymm1_e ymm6_e;
smull mulHymm6_f mulL_f ymm1_f ymm6_f;
cast ymm7_0@sint16 mulL_0;
cast ymm7_1@sint16 mulL_1;
cast ymm7_2@sint16 mulL_2;
cast ymm7_3@sint16 mulL_3;
cast ymm7_4@sint16 mulL_4;
cast ymm7_5@sint16 mulL_5;
cast ymm7_6@sint16 mulL_6;
cast ymm7_7@sint16 mulL_7;
cast ymm7_8@sint16 mulL_8;
cast ymm7_9@sint16 mulL_9;
cast ymm7_a@sint16 mulL_a;
cast ymm7_b@sint16 mulL_b;
cast ymm7_c@sint16 mulL_c;
cast ymm7_d@sint16 mulL_d;
cast ymm7_e@sint16 mulL_e;
cast ymm7_f@sint16 mulL_f;
(* vpmulhw %ymm2,%ymm6,%ymm6                       #! PC = 0x555555557e01 *)
smull mulH_0 mulLymm6_0 ymm6_0 ymm2_0;
smull mulH_1 mulLymm6_1 ymm6_1 ymm2_1;
smull mulH_2 mulLymm6_2 ymm6_2 ymm2_2;
smull mulH_3 mulLymm6_3 ymm6_3 ymm2_3;
smull mulH_4 mulLymm6_4 ymm6_4 ymm2_4;
smull mulH_5 mulLymm6_5 ymm6_5 ymm2_5;
smull mulH_6 mulLymm6_6 ymm6_6 ymm2_6;
smull mulH_7 mulLymm6_7 ymm6_7 ymm2_7;
smull mulH_8 mulLymm6_8 ymm6_8 ymm2_8;
smull mulH_9 mulLymm6_9 ymm6_9 ymm2_9;
smull mulH_a mulLymm6_a ymm6_a ymm2_a;
smull mulH_b mulLymm6_b ymm6_b ymm2_b;
smull mulH_c mulLymm6_c ymm6_c ymm2_c;
smull mulH_d mulLymm6_d ymm6_d ymm2_d;
smull mulH_e mulLymm6_e ymm6_e ymm2_e;
smull mulH_f mulLymm6_f ymm6_f ymm2_f;
mov ymm6_0 mulH_0;
mov ymm6_1 mulH_1;
mov ymm6_2 mulH_2;
mov ymm6_3 mulH_3;
mov ymm6_4 mulH_4;
mov ymm6_5 mulH_5;
mov ymm6_6 mulH_6;
mov ymm6_7 mulH_7;
mov ymm6_8 mulH_8;
mov ymm6_9 mulH_9;
mov ymm6_a mulH_a;
mov ymm6_b mulH_b;
mov ymm6_c mulH_c;
mov ymm6_d mulH_d;
mov ymm6_e mulH_e;
mov ymm6_f mulH_f;
(* vpmulhw %ymm0,%ymm7,%ymm7                       #! PC = 0x555555557e05 *)
smull mulH_0 red_0 ymm7_0 ymm0_0;
assert true && red_0 = mulLymm6_0;
assume red_0 = mulLymm6_0 && true;
smull mulH_1 red_1 ymm7_1 ymm0_1;
assert true && red_1 = mulLymm6_1;
assume red_1 = mulLymm6_1 && true;
smull mulH_2 red_2 ymm7_2 ymm0_2;
assert true && red_2 = mulLymm6_2;
assume red_2 = mulLymm6_2 && true;
smull mulH_3 red_3 ymm7_3 ymm0_3;
assert true && red_3 = mulLymm6_3;
assume red_3 = mulLymm6_3 && true;
smull mulH_4 red_4 ymm7_4 ymm0_4;
assert true && red_4 = mulLymm6_4;
assume red_4 = mulLymm6_4 && true;
smull mulH_5 red_5 ymm7_5 ymm0_5;
assert true && red_5 = mulLymm6_5;
assume red_5 = mulLymm6_5 && true;
smull mulH_6 red_6 ymm7_6 ymm0_6;
assert true && red_6 = mulLymm6_6;
assume red_6 = mulLymm6_6 && true;
smull mulH_7 red_7 ymm7_7 ymm0_7;
assert true && red_7 = mulLymm6_7;
assume red_7 = mulLymm6_7 && true;
smull mulH_8 red_8 ymm7_8 ymm0_8;
assert true && red_8 = mulLymm6_8;
assume red_8 = mulLymm6_8 && true;
smull mulH_9 red_9 ymm7_9 ymm0_9;
assert true && red_9 = mulLymm6_9;
assume red_9 = mulLymm6_9 && true;
smull mulH_a red_a ymm7_a ymm0_a;
assert true && red_a = mulLymm6_a;
assume red_a = mulLymm6_a && true;
smull mulH_b red_b ymm7_b ymm0_b;
assert true && red_b = mulLymm6_b;
assume red_b = mulLymm6_b && true;
smull mulH_c red_c ymm7_c ymm0_c;
assert true && red_c = mulLymm6_c;
assume red_c = mulLymm6_c && true;
smull mulH_d red_d ymm7_d ymm0_d;
assert true && red_d = mulLymm6_d;
assume red_d = mulLymm6_d && true;
smull mulH_e red_e ymm7_e ymm0_e;
assert true && red_e = mulLymm6_e;
assume red_e = mulLymm6_e && true;
smull mulH_f red_f ymm7_f ymm0_f;
assert true && red_f = mulLymm6_f;
assume red_f = mulLymm6_f && true;
mov ymm7_0 mulH_0;
mov ymm7_1 mulH_1;
mov ymm7_2 mulH_2;
mov ymm7_3 mulH_3;
mov ymm7_4 mulH_4;
mov ymm7_5 mulH_5;
mov ymm7_6 mulH_6;
mov ymm7_7 mulH_7;
mov ymm7_8 mulH_8;
mov ymm7_9 mulH_9;
mov ymm7_a mulH_a;
mov ymm7_b mulH_b;
mov ymm7_c mulH_c;
mov ymm7_d mulH_d;
mov ymm7_e mulH_e;
mov ymm7_f mulH_f;
(* vpsubw %ymm7,%ymm6,%ymm6                        #! PC = 0x555555557e09 *)
sub ymm6_0 ymm6_0 ymm7_0;
sub ymm6_1 ymm6_1 ymm7_1;
sub ymm6_2 ymm6_2 ymm7_2;
sub ymm6_3 ymm6_3 ymm7_3;
sub ymm6_4 ymm6_4 ymm7_4;
sub ymm6_5 ymm6_5 ymm7_5;
sub ymm6_6 ymm6_6 ymm7_6;
sub ymm6_7 ymm6_7 ymm7_7;
sub ymm6_8 ymm6_8 ymm7_8;
sub ymm6_9 ymm6_9 ymm7_9;
sub ymm6_a ymm6_a ymm7_a;
sub ymm6_b ymm6_b ymm7_b;
sub ymm6_c ymm6_c ymm7_c;
sub ymm6_d ymm6_d ymm7_d;
sub ymm6_e ymm6_e ymm7_e;
sub ymm6_f ymm6_f ymm7_f;
(* vpbroadcastq 0x130(%rdx),%ymm1                  #! EA = L0x555555561250; Value = 0xf0ab2711fcc3398b; PC = 0x555555557e0d *)
mov ymm1_0 L0x555555561250;
mov ymm1_1 L0x555555561252;
mov ymm1_2 L0x555555561254;
mov ymm1_3 L0x555555561256;
mov ymm1_4 L0x555555561250;
mov ymm1_5 L0x555555561252;
mov ymm1_6 L0x555555561254;
mov ymm1_7 L0x555555561256;
mov ymm1_8 L0x555555561250;
mov ymm1_9 L0x555555561252;
mov ymm1_a L0x555555561254;
mov ymm1_b L0x555555561256;
mov ymm1_c L0x555555561250;
mov ymm1_d L0x555555561252;
mov ymm1_e L0x555555561254;
mov ymm1_f L0x555555561256;
(* vpbroadcastq 0x330(%rdx),%ymm2                  #! EA = L0x555555561450; Value = 0xfeabf111fac3078b; PC = 0x555555557e16 *)
mov ymm2_0 L0x555555561450;
mov ymm2_1 L0x555555561452;
mov ymm2_2 L0x555555561454;
mov ymm2_3 L0x555555561456;
mov ymm2_4 L0x555555561450;
mov ymm2_5 L0x555555561452;
mov ymm2_6 L0x555555561454;
mov ymm2_7 L0x555555561456;
mov ymm2_8 L0x555555561450;
mov ymm2_9 L0x555555561452;
mov ymm2_a L0x555555561454;
mov ymm2_b L0x555555561456;
mov ymm2_c L0x555555561450;
mov ymm2_d L0x555555561452;
mov ymm2_e L0x555555561454;
mov ymm2_f L0x555555561456;
(* vpmullw %ymm1,%ymm8,%ymm7                       #! PC = 0x555555557e1f *)
smull mulHymm8_0 mulL_0 ymm1_0 ymm8_0;
smull mulHymm8_1 mulL_1 ymm1_1 ymm8_1;
smull mulHymm8_2 mulL_2 ymm1_2 ymm8_2;
smull mulHymm8_3 mulL_3 ymm1_3 ymm8_3;
smull mulHymm8_4 mulL_4 ymm1_4 ymm8_4;
smull mulHymm8_5 mulL_5 ymm1_5 ymm8_5;
smull mulHymm8_6 mulL_6 ymm1_6 ymm8_6;
smull mulHymm8_7 mulL_7 ymm1_7 ymm8_7;
smull mulHymm8_8 mulL_8 ymm1_8 ymm8_8;
smull mulHymm8_9 mulL_9 ymm1_9 ymm8_9;
smull mulHymm8_a mulL_a ymm1_a ymm8_a;
smull mulHymm8_b mulL_b ymm1_b ymm8_b;
smull mulHymm8_c mulL_c ymm1_c ymm8_c;
smull mulHymm8_d mulL_d ymm1_d ymm8_d;
smull mulHymm8_e mulL_e ymm1_e ymm8_e;
smull mulHymm8_f mulL_f ymm1_f ymm8_f;
cast ymm7_0@sint16 mulL_0;
cast ymm7_1@sint16 mulL_1;
cast ymm7_2@sint16 mulL_2;
cast ymm7_3@sint16 mulL_3;
cast ymm7_4@sint16 mulL_4;
cast ymm7_5@sint16 mulL_5;
cast ymm7_6@sint16 mulL_6;
cast ymm7_7@sint16 mulL_7;
cast ymm7_8@sint16 mulL_8;
cast ymm7_9@sint16 mulL_9;
cast ymm7_a@sint16 mulL_a;
cast ymm7_b@sint16 mulL_b;
cast ymm7_c@sint16 mulL_c;
cast ymm7_d@sint16 mulL_d;
cast ymm7_e@sint16 mulL_e;
cast ymm7_f@sint16 mulL_f;
(* vpmulhw %ymm2,%ymm8,%ymm8                       #! PC = 0x555555557e23 *)
smull mulH_0 mulLymm8_0 ymm8_0 ymm2_0;
smull mulH_1 mulLymm8_1 ymm8_1 ymm2_1;
smull mulH_2 mulLymm8_2 ymm8_2 ymm2_2;
smull mulH_3 mulLymm8_3 ymm8_3 ymm2_3;
smull mulH_4 mulLymm8_4 ymm8_4 ymm2_4;
smull mulH_5 mulLymm8_5 ymm8_5 ymm2_5;
smull mulH_6 mulLymm8_6 ymm8_6 ymm2_6;
smull mulH_7 mulLymm8_7 ymm8_7 ymm2_7;
smull mulH_8 mulLymm8_8 ymm8_8 ymm2_8;
smull mulH_9 mulLymm8_9 ymm8_9 ymm2_9;
smull mulH_a mulLymm8_a ymm8_a ymm2_a;
smull mulH_b mulLymm8_b ymm8_b ymm2_b;
smull mulH_c mulLymm8_c ymm8_c ymm2_c;
smull mulH_d mulLymm8_d ymm8_d ymm2_d;
smull mulH_e mulLymm8_e ymm8_e ymm2_e;
smull mulH_f mulLymm8_f ymm8_f ymm2_f;
mov ymm8_0 mulH_0;
mov ymm8_1 mulH_1;
mov ymm8_2 mulH_2;
mov ymm8_3 mulH_3;
mov ymm8_4 mulH_4;
mov ymm8_5 mulH_5;
mov ymm8_6 mulH_6;
mov ymm8_7 mulH_7;
mov ymm8_8 mulH_8;
mov ymm8_9 mulH_9;
mov ymm8_a mulH_a;
mov ymm8_b mulH_b;
mov ymm8_c mulH_c;
mov ymm8_d mulH_d;
mov ymm8_e mulH_e;
mov ymm8_f mulH_f;
(* vpmulhw %ymm0,%ymm7,%ymm7                       #! PC = 0x555555557e27 *)
smull mulH_0 red_0 ymm7_0 ymm0_0;
assert true && red_0 = mulLymm8_0;
assume red_0 = mulLymm8_0 && true;
smull mulH_1 red_1 ymm7_1 ymm0_1;
assert true && red_1 = mulLymm8_1;
assume red_1 = mulLymm8_1 && true;
smull mulH_2 red_2 ymm7_2 ymm0_2;
assert true && red_2 = mulLymm8_2;
assume red_2 = mulLymm8_2 && true;
smull mulH_3 red_3 ymm7_3 ymm0_3;
assert true && red_3 = mulLymm8_3;
assume red_3 = mulLymm8_3 && true;
smull mulH_4 red_4 ymm7_4 ymm0_4;
assert true && red_4 = mulLymm8_4;
assume red_4 = mulLymm8_4 && true;
smull mulH_5 red_5 ymm7_5 ymm0_5;
assert true && red_5 = mulLymm8_5;
assume red_5 = mulLymm8_5 && true;
smull mulH_6 red_6 ymm7_6 ymm0_6;
assert true && red_6 = mulLymm8_6;
assume red_6 = mulLymm8_6 && true;
smull mulH_7 red_7 ymm7_7 ymm0_7;
assert true && red_7 = mulLymm8_7;
assume red_7 = mulLymm8_7 && true;
smull mulH_8 red_8 ymm7_8 ymm0_8;
assert true && red_8 = mulLymm8_8;
assume red_8 = mulLymm8_8 && true;
smull mulH_9 red_9 ymm7_9 ymm0_9;
assert true && red_9 = mulLymm8_9;
assume red_9 = mulLymm8_9 && true;
smull mulH_a red_a ymm7_a ymm0_a;
assert true && red_a = mulLymm8_a;
assume red_a = mulLymm8_a && true;
smull mulH_b red_b ymm7_b ymm0_b;
assert true && red_b = mulLymm8_b;
assume red_b = mulLymm8_b && true;
smull mulH_c red_c ymm7_c ymm0_c;
assert true && red_c = mulLymm8_c;
assume red_c = mulLymm8_c && true;
smull mulH_d red_d ymm7_d ymm0_d;
assert true && red_d = mulLymm8_d;
assume red_d = mulLymm8_d && true;
smull mulH_e red_e ymm7_e ymm0_e;
assert true && red_e = mulLymm8_e;
assume red_e = mulLymm8_e && true;
smull mulH_f red_f ymm7_f ymm0_f;
assert true && red_f = mulLymm8_f;
assume red_f = mulLymm8_f && true;
mov ymm7_0 mulH_0;
mov ymm7_1 mulH_1;
mov ymm7_2 mulH_2;
mov ymm7_3 mulH_3;
mov ymm7_4 mulH_4;
mov ymm7_5 mulH_5;
mov ymm7_6 mulH_6;
mov ymm7_7 mulH_7;
mov ymm7_8 mulH_8;
mov ymm7_9 mulH_9;
mov ymm7_a mulH_a;
mov ymm7_b mulH_b;
mov ymm7_c mulH_c;
mov ymm7_d mulH_d;
mov ymm7_e mulH_e;
mov ymm7_f mulH_f;
(* vpsubw %ymm7,%ymm8,%ymm8                        #! PC = 0x555555557e2b *)
sub ymm8_0 ymm8_0 ymm7_0;
sub ymm8_1 ymm8_1 ymm7_1;
sub ymm8_2 ymm8_2 ymm7_2;
sub ymm8_3 ymm8_3 ymm7_3;
sub ymm8_4 ymm8_4 ymm7_4;
sub ymm8_5 ymm8_5 ymm7_5;
sub ymm8_6 ymm8_6 ymm7_6;
sub ymm8_7 ymm8_7 ymm7_7;
sub ymm8_8 ymm8_8 ymm7_8;
sub ymm8_9 ymm8_9 ymm7_9;
sub ymm8_a ymm8_a ymm7_a;
sub ymm8_b ymm8_b ymm7_b;
sub ymm8_c ymm8_c ymm7_c;
sub ymm8_d ymm8_d ymm7_d;
sub ymm8_e ymm8_e ymm7_e;
sub ymm8_f ymm8_f ymm7_f;
(* vpbroadcastq 0x138(%rdx),%ymm1                  #! EA = L0x555555561258; Value = 0x2da347bbf1c9c601; PC = 0x555555557e2f *)
mov ymm1_0 L0x555555561258;
mov ymm1_1 L0x55555556125a;
mov ymm1_2 L0x55555556125c;
mov ymm1_3 L0x55555556125e;
mov ymm1_4 L0x555555561258;
mov ymm1_5 L0x55555556125a;
mov ymm1_6 L0x55555556125c;
mov ymm1_7 L0x55555556125e;
mov ymm1_8 L0x555555561258;
mov ymm1_9 L0x55555556125a;
mov ymm1_a L0x55555556125c;
mov ymm1_b L0x55555556125e;
mov ymm1_c L0x555555561258;
mov ymm1_d L0x55555556125a;
mov ymm1_e L0x55555556125c;
mov ymm1_f L0x55555556125e;
(* vpbroadcastq 0x338(%rdx),%ymm2                  #! EA = L0x555555561458; Value = 0xeba3f5bbebc9f001; PC = 0x555555557e38 *)
mov ymm2_0 L0x555555561458;
mov ymm2_1 L0x55555556145a;
mov ymm2_2 L0x55555556145c;
mov ymm2_3 L0x55555556145e;
mov ymm2_4 L0x555555561458;
mov ymm2_5 L0x55555556145a;
mov ymm2_6 L0x55555556145c;
mov ymm2_7 L0x55555556145e;
mov ymm2_8 L0x555555561458;
mov ymm2_9 L0x55555556145a;
mov ymm2_a L0x55555556145c;
mov ymm2_b L0x55555556145e;
mov ymm2_c L0x555555561458;
mov ymm2_d L0x55555556145a;
mov ymm2_e L0x55555556145c;
mov ymm2_f L0x55555556145e;
(* vpmullw %ymm1,%ymm11,%ymm7                      #! PC = 0x555555557e41 *)
smull mulHymm11_0 mulL_0 ymm1_0 ymm11_0;
smull mulHymm11_1 mulL_1 ymm1_1 ymm11_1;
smull mulHymm11_2 mulL_2 ymm1_2 ymm11_2;
smull mulHymm11_3 mulL_3 ymm1_3 ymm11_3;
smull mulHymm11_4 mulL_4 ymm1_4 ymm11_4;
smull mulHymm11_5 mulL_5 ymm1_5 ymm11_5;
smull mulHymm11_6 mulL_6 ymm1_6 ymm11_6;
smull mulHymm11_7 mulL_7 ymm1_7 ymm11_7;
smull mulHymm11_8 mulL_8 ymm1_8 ymm11_8;
smull mulHymm11_9 mulL_9 ymm1_9 ymm11_9;
smull mulHymm11_a mulL_a ymm1_a ymm11_a;
smull mulHymm11_b mulL_b ymm1_b ymm11_b;
smull mulHymm11_c mulL_c ymm1_c ymm11_c;
smull mulHymm11_d mulL_d ymm1_d ymm11_d;
smull mulHymm11_e mulL_e ymm1_e ymm11_e;
smull mulHymm11_f mulL_f ymm1_f ymm11_f;
cast ymm7_0@sint16 mulL_0;
cast ymm7_1@sint16 mulL_1;
cast ymm7_2@sint16 mulL_2;
cast ymm7_3@sint16 mulL_3;
cast ymm7_4@sint16 mulL_4;
cast ymm7_5@sint16 mulL_5;
cast ymm7_6@sint16 mulL_6;
cast ymm7_7@sint16 mulL_7;
cast ymm7_8@sint16 mulL_8;
cast ymm7_9@sint16 mulL_9;
cast ymm7_a@sint16 mulL_a;
cast ymm7_b@sint16 mulL_b;
cast ymm7_c@sint16 mulL_c;
cast ymm7_d@sint16 mulL_d;
cast ymm7_e@sint16 mulL_e;
cast ymm7_f@sint16 mulL_f;
(* vpmulhw %ymm2,%ymm11,%ymm11                     #! PC = 0x555555557e45 *)
smull mulH_0 mulLymm11_0 ymm11_0 ymm2_0;
smull mulH_1 mulLymm11_1 ymm11_1 ymm2_1;
smull mulH_2 mulLymm11_2 ymm11_2 ymm2_2;
smull mulH_3 mulLymm11_3 ymm11_3 ymm2_3;
smull mulH_4 mulLymm11_4 ymm11_4 ymm2_4;
smull mulH_5 mulLymm11_5 ymm11_5 ymm2_5;
smull mulH_6 mulLymm11_6 ymm11_6 ymm2_6;
smull mulH_7 mulLymm11_7 ymm11_7 ymm2_7;
smull mulH_8 mulLymm11_8 ymm11_8 ymm2_8;
smull mulH_9 mulLymm11_9 ymm11_9 ymm2_9;
smull mulH_a mulLymm11_a ymm11_a ymm2_a;
smull mulH_b mulLymm11_b ymm11_b ymm2_b;
smull mulH_c mulLymm11_c ymm11_c ymm2_c;
smull mulH_d mulLymm11_d ymm11_d ymm2_d;
smull mulH_e mulLymm11_e ymm11_e ymm2_e;
smull mulH_f mulLymm11_f ymm11_f ymm2_f;
mov ymm11_0 mulH_0;
mov ymm11_1 mulH_1;
mov ymm11_2 mulH_2;
mov ymm11_3 mulH_3;
mov ymm11_4 mulH_4;
mov ymm11_5 mulH_5;
mov ymm11_6 mulH_6;
mov ymm11_7 mulH_7;
mov ymm11_8 mulH_8;
mov ymm11_9 mulH_9;
mov ymm11_a mulH_a;
mov ymm11_b mulH_b;
mov ymm11_c mulH_c;
mov ymm11_d mulH_d;
mov ymm11_e mulH_e;
mov ymm11_f mulH_f;
(* vpmulhw %ymm0,%ymm7,%ymm7                       #! PC = 0x555555557e49 *)
smull mulH_0 red_0 ymm7_0 ymm0_0;
assert true && red_0 = mulLymm11_0;
assume red_0 = mulLymm11_0 && true;
smull mulH_1 red_1 ymm7_1 ymm0_1;
assert true && red_1 = mulLymm11_1;
assume red_1 = mulLymm11_1 && true;
smull mulH_2 red_2 ymm7_2 ymm0_2;
assert true && red_2 = mulLymm11_2;
assume red_2 = mulLymm11_2 && true;
smull mulH_3 red_3 ymm7_3 ymm0_3;
assert true && red_3 = mulLymm11_3;
assume red_3 = mulLymm11_3 && true;
smull mulH_4 red_4 ymm7_4 ymm0_4;
assert true && red_4 = mulLymm11_4;
assume red_4 = mulLymm11_4 && true;
smull mulH_5 red_5 ymm7_5 ymm0_5;
assert true && red_5 = mulLymm11_5;
assume red_5 = mulLymm11_5 && true;
smull mulH_6 red_6 ymm7_6 ymm0_6;
assert true && red_6 = mulLymm11_6;
assume red_6 = mulLymm11_6 && true;
smull mulH_7 red_7 ymm7_7 ymm0_7;
assert true && red_7 = mulLymm11_7;
assume red_7 = mulLymm11_7 && true;
smull mulH_8 red_8 ymm7_8 ymm0_8;
assert true && red_8 = mulLymm11_8;
assume red_8 = mulLymm11_8 && true;
smull mulH_9 red_9 ymm7_9 ymm0_9;
assert true && red_9 = mulLymm11_9;
assume red_9 = mulLymm11_9 && true;
smull mulH_a red_a ymm7_a ymm0_a;
assert true && red_a = mulLymm11_a;
assume red_a = mulLymm11_a && true;
smull mulH_b red_b ymm7_b ymm0_b;
assert true && red_b = mulLymm11_b;
assume red_b = mulLymm11_b && true;
smull mulH_c red_c ymm7_c ymm0_c;
assert true && red_c = mulLymm11_c;
assume red_c = mulLymm11_c && true;
smull mulH_d red_d ymm7_d ymm0_d;
assert true && red_d = mulLymm11_d;
assume red_d = mulLymm11_d && true;
smull mulH_e red_e ymm7_e ymm0_e;
assert true && red_e = mulLymm11_e;
assume red_e = mulLymm11_e && true;
smull mulH_f red_f ymm7_f ymm0_f;
assert true && red_f = mulLymm11_f;
assume red_f = mulLymm11_f && true;
mov ymm7_0 mulH_0;
mov ymm7_1 mulH_1;
mov ymm7_2 mulH_2;
mov ymm7_3 mulH_3;
mov ymm7_4 mulH_4;
mov ymm7_5 mulH_5;
mov ymm7_6 mulH_6;
mov ymm7_7 mulH_7;
mov ymm7_8 mulH_8;
mov ymm7_9 mulH_9;
mov ymm7_a mulH_a;
mov ymm7_b mulH_b;
mov ymm7_c mulH_c;
mov ymm7_d mulH_d;
mov ymm7_e mulH_e;
mov ymm7_f mulH_f;
(* vpsubw %ymm7,%ymm11,%ymm11                      #! PC = 0x555555557e4d *)
sub ymm11_0 ymm11_0 ymm7_0;
sub ymm11_1 ymm11_1 ymm7_1;
sub ymm11_2 ymm11_2 ymm7_2;
sub ymm11_3 ymm11_3 ymm7_3;
sub ymm11_4 ymm11_4 ymm7_4;
sub ymm11_5 ymm11_5 ymm7_5;
sub ymm11_6 ymm11_6 ymm7_6;
sub ymm11_7 ymm11_7 ymm7_7;
sub ymm11_8 ymm11_8 ymm7_8;
sub ymm11_9 ymm11_9 ymm7_9;
sub ymm11_a ymm11_a ymm7_a;
sub ymm11_b ymm11_b ymm7_b;
sub ymm11_c ymm11_c ymm7_c;
sub ymm11_d ymm11_d ymm7_d;
sub ymm11_e ymm11_e ymm7_e;
sub ymm11_f ymm11_f ymm7_f;
(* vpaddw %ymm3,%ymm5,%ymm7                        #! PC = 0x555555557e51 *)
add ymm7_0 ymm5_0 ymm3_0;
add ymm7_1 ymm5_1 ymm3_1;
add ymm7_2 ymm5_2 ymm3_2;
add ymm7_3 ymm5_3 ymm3_3;
add ymm7_4 ymm5_4 ymm3_4;
add ymm7_5 ymm5_5 ymm3_5;
add ymm7_6 ymm5_6 ymm3_6;
add ymm7_7 ymm5_7 ymm3_7;
add ymm7_8 ymm5_8 ymm3_8;
add ymm7_9 ymm5_9 ymm3_9;
add ymm7_a ymm5_a ymm3_a;
add ymm7_b ymm5_b ymm3_b;
add ymm7_c ymm5_c ymm3_c;
add ymm7_d ymm5_d ymm3_d;
add ymm7_e ymm5_e ymm3_e;
add ymm7_f ymm5_f ymm3_f;
(* vpsubw %ymm3,%ymm5,%ymm3                        #! PC = 0x555555557e55 *)
sub ymm3_0 ymm5_0 ymm3_0;
sub ymm3_1 ymm5_1 ymm3_1;
sub ymm3_2 ymm5_2 ymm3_2;
sub ymm3_3 ymm5_3 ymm3_3;
sub ymm3_4 ymm5_4 ymm3_4;
sub ymm3_5 ymm5_5 ymm3_5;
sub ymm3_6 ymm5_6 ymm3_6;
sub ymm3_7 ymm5_7 ymm3_7;
sub ymm3_8 ymm5_8 ymm3_8;
sub ymm3_9 ymm5_9 ymm3_9;
sub ymm3_a ymm5_a ymm3_a;
sub ymm3_b ymm5_b ymm3_b;
sub ymm3_c ymm5_c ymm3_c;
sub ymm3_d ymm5_d ymm3_d;
sub ymm3_e ymm5_e ymm3_e;
sub ymm3_f ymm5_f ymm3_f;
(* vpaddw %ymm6,%ymm4,%ymm5                        #! PC = 0x555555557e59 *)
add ymm5_0 ymm4_0 ymm6_0;
add ymm5_1 ymm4_1 ymm6_1;
add ymm5_2 ymm4_2 ymm6_2;
add ymm5_3 ymm4_3 ymm6_3;
add ymm5_4 ymm4_4 ymm6_4;
add ymm5_5 ymm4_5 ymm6_5;
add ymm5_6 ymm4_6 ymm6_6;
add ymm5_7 ymm4_7 ymm6_7;
add ymm5_8 ymm4_8 ymm6_8;
add ymm5_9 ymm4_9 ymm6_9;
add ymm5_a ymm4_a ymm6_a;
add ymm5_b ymm4_b ymm6_b;
add ymm5_c ymm4_c ymm6_c;
add ymm5_d ymm4_d ymm6_d;
add ymm5_e ymm4_e ymm6_e;
add ymm5_f ymm4_f ymm6_f;
(* vpsubw %ymm6,%ymm4,%ymm6                        #! PC = 0x555555557e5d *)
sub ymm6_0 ymm4_0 ymm6_0;
sub ymm6_1 ymm4_1 ymm6_1;
sub ymm6_2 ymm4_2 ymm6_2;
sub ymm6_3 ymm4_3 ymm6_3;
sub ymm6_4 ymm4_4 ymm6_4;
sub ymm6_5 ymm4_5 ymm6_5;
sub ymm6_6 ymm4_6 ymm6_6;
sub ymm6_7 ymm4_7 ymm6_7;
sub ymm6_8 ymm4_8 ymm6_8;
sub ymm6_9 ymm4_9 ymm6_9;
sub ymm6_a ymm4_a ymm6_a;
sub ymm6_b ymm4_b ymm6_b;
sub ymm6_c ymm4_c ymm6_c;
sub ymm6_d ymm4_d ymm6_d;
sub ymm6_e ymm4_e ymm6_e;
sub ymm6_f ymm4_f ymm6_f;
(* vpaddw %ymm8,%ymm10,%ymm4                       #! PC = 0x555555557e61 *)
add ymm4_0 ymm10_0 ymm8_0;
add ymm4_1 ymm10_1 ymm8_1;
add ymm4_2 ymm10_2 ymm8_2;
add ymm4_3 ymm10_3 ymm8_3;
add ymm4_4 ymm10_4 ymm8_4;
add ymm4_5 ymm10_5 ymm8_5;
add ymm4_6 ymm10_6 ymm8_6;
add ymm4_7 ymm10_7 ymm8_7;
add ymm4_8 ymm10_8 ymm8_8;
add ymm4_9 ymm10_9 ymm8_9;
add ymm4_a ymm10_a ymm8_a;
add ymm4_b ymm10_b ymm8_b;
add ymm4_c ymm10_c ymm8_c;
add ymm4_d ymm10_d ymm8_d;
add ymm4_e ymm10_e ymm8_e;
add ymm4_f ymm10_f ymm8_f;
(* vpsubw %ymm8,%ymm10,%ymm8                       #! PC = 0x555555557e66 *)
sub ymm8_0 ymm10_0 ymm8_0;
sub ymm8_1 ymm10_1 ymm8_1;
sub ymm8_2 ymm10_2 ymm8_2;
sub ymm8_3 ymm10_3 ymm8_3;
sub ymm8_4 ymm10_4 ymm8_4;
sub ymm8_5 ymm10_5 ymm8_5;
sub ymm8_6 ymm10_6 ymm8_6;
sub ymm8_7 ymm10_7 ymm8_7;
sub ymm8_8 ymm10_8 ymm8_8;
sub ymm8_9 ymm10_9 ymm8_9;
sub ymm8_a ymm10_a ymm8_a;
sub ymm8_b ymm10_b ymm8_b;
sub ymm8_c ymm10_c ymm8_c;
sub ymm8_d ymm10_d ymm8_d;
sub ymm8_e ymm10_e ymm8_e;
sub ymm8_f ymm10_f ymm8_f;
(* vpaddw %ymm11,%ymm9,%ymm10                      #! PC = 0x555555557e6b *)
add ymm10_0 ymm9_0 ymm11_0;
add ymm10_1 ymm9_1 ymm11_1;
add ymm10_2 ymm9_2 ymm11_2;
add ymm10_3 ymm9_3 ymm11_3;
add ymm10_4 ymm9_4 ymm11_4;
add ymm10_5 ymm9_5 ymm11_5;
add ymm10_6 ymm9_6 ymm11_6;
add ymm10_7 ymm9_7 ymm11_7;
add ymm10_8 ymm9_8 ymm11_8;
add ymm10_9 ymm9_9 ymm11_9;
add ymm10_a ymm9_a ymm11_a;
add ymm10_b ymm9_b ymm11_b;
add ymm10_c ymm9_c ymm11_c;
add ymm10_d ymm9_d ymm11_d;
add ymm10_e ymm9_e ymm11_e;
add ymm10_f ymm9_f ymm11_f;
(* vpsubw %ymm11,%ymm9,%ymm11                      #! PC = 0x555555557e70 *)
sub ymm11_0 ymm9_0 ymm11_0;
sub ymm11_1 ymm9_1 ymm11_1;
sub ymm11_2 ymm9_2 ymm11_2;
sub ymm11_3 ymm9_3 ymm11_3;
sub ymm11_4 ymm9_4 ymm11_4;
sub ymm11_5 ymm9_5 ymm11_5;
sub ymm11_6 ymm9_6 ymm11_6;
sub ymm11_7 ymm9_7 ymm11_7;
sub ymm11_8 ymm9_8 ymm11_8;
sub ymm11_9 ymm9_9 ymm11_9;
sub ymm11_a ymm9_a ymm11_a;
sub ymm11_b ymm9_b ymm11_b;
sub ymm11_c ymm9_c ymm11_c;
sub ymm11_d ymm9_d ymm11_d;
sub ymm11_e ymm9_e ymm11_e;
sub ymm11_f ymm9_f ymm11_f;
(* vpunpcklwd %ymm3,%ymm7,%ymm9                    #! PC = 0x555555557e75 *)
mov lwd_0 ymm7_0;
mov lwd_1 ymm3_0;
mov lwd_2 ymm7_1;
mov lwd_3 ymm3_1;
mov lwd_4 ymm7_2;
mov lwd_5 ymm3_2;
mov lwd_6 ymm7_3;
mov lwd_7 ymm3_3;
mov lwd_8 ymm7_8;
mov lwd_9 ymm3_8;
mov lwd_a ymm7_9;
mov lwd_b ymm3_9;
mov lwd_c ymm7_a;
mov lwd_d ymm3_a;
mov lwd_e ymm7_b;
mov lwd_f ymm3_b;
mov ymm9_0 lwd_0;
mov ymm9_1 lwd_1;
mov ymm9_2 lwd_2;
mov ymm9_3 lwd_3;
mov ymm9_4 lwd_4;
mov ymm9_5 lwd_5;
mov ymm9_6 lwd_6;
mov ymm9_7 lwd_7;
mov ymm9_8 lwd_8;
mov ymm9_9 lwd_9;
mov ymm9_a lwd_a;
mov ymm9_b lwd_b;
mov ymm9_c lwd_c;
mov ymm9_d lwd_d;
mov ymm9_e lwd_e;
mov ymm9_f lwd_f;
(* vpunpckhwd %ymm3,%ymm7,%ymm3                    #! PC = 0x555555557e79 *)
mov hwd_0 ymm7_4;
mov hwd_1 ymm3_4;
mov hwd_2 ymm7_5;
mov hwd_3 ymm3_5;
mov hwd_4 ymm7_6;
mov hwd_5 ymm3_6;
mov hwd_6 ymm7_7;
mov hwd_7 ymm3_7;
mov hwd_8 ymm7_c;
mov hwd_9 ymm3_c;
mov hwd_a ymm7_d;
mov hwd_b ymm3_d;
mov hwd_c ymm7_e;
mov hwd_d ymm3_e;
mov hwd_e ymm7_f;
mov hwd_f ymm3_f;
mov ymm3_0 hwd_0;
mov ymm3_1 hwd_1;
mov ymm3_2 hwd_2;
mov ymm3_3 hwd_3;
mov ymm3_4 hwd_4;
mov ymm3_5 hwd_5;
mov ymm3_6 hwd_6;
mov ymm3_7 hwd_7;
mov ymm3_8 hwd_8;
mov ymm3_9 hwd_9;
mov ymm3_a hwd_a;
mov ymm3_b hwd_b;
mov ymm3_c hwd_c;
mov ymm3_d hwd_d;
mov ymm3_e hwd_e;
mov ymm3_f hwd_f;
(* vpunpcklwd %ymm6,%ymm5,%ymm7                    #! PC = 0x555555557e7d *)
mov lwd_0 ymm5_0;
mov lwd_1 ymm6_0;
mov lwd_2 ymm5_1;
mov lwd_3 ymm6_1;
mov lwd_4 ymm5_2;
mov lwd_5 ymm6_2;
mov lwd_6 ymm5_3;
mov lwd_7 ymm6_3;
mov lwd_8 ymm5_8;
mov lwd_9 ymm6_8;
mov lwd_a ymm5_9;
mov lwd_b ymm6_9;
mov lwd_c ymm5_a;
mov lwd_d ymm6_a;
mov lwd_e ymm5_b;
mov lwd_f ymm6_b;
mov ymm7_0 lwd_0;
mov ymm7_1 lwd_1;
mov ymm7_2 lwd_2;
mov ymm7_3 lwd_3;
mov ymm7_4 lwd_4;
mov ymm7_5 lwd_5;
mov ymm7_6 lwd_6;
mov ymm7_7 lwd_7;
mov ymm7_8 lwd_8;
mov ymm7_9 lwd_9;
mov ymm7_a lwd_a;
mov ymm7_b lwd_b;
mov ymm7_c lwd_c;
mov ymm7_d lwd_d;
mov ymm7_e lwd_e;
mov ymm7_f lwd_f;
(* vpunpckhwd %ymm6,%ymm5,%ymm6                    #! PC = 0x555555557e81 *)
mov hwd_0 ymm5_4;
mov hwd_1 ymm6_4;
mov hwd_2 ymm5_5;
mov hwd_3 ymm6_5;
mov hwd_4 ymm5_6;
mov hwd_5 ymm6_6;
mov hwd_6 ymm5_7;
mov hwd_7 ymm6_7;
mov hwd_8 ymm5_c;
mov hwd_9 ymm6_c;
mov hwd_a ymm5_d;
mov hwd_b ymm6_d;
mov hwd_c ymm5_e;
mov hwd_d ymm6_e;
mov hwd_e ymm5_f;
mov hwd_f ymm6_f;
mov ymm6_0 hwd_0;
mov ymm6_1 hwd_1;
mov ymm6_2 hwd_2;
mov ymm6_3 hwd_3;
mov ymm6_4 hwd_4;
mov ymm6_5 hwd_5;
mov ymm6_6 hwd_6;
mov ymm6_7 hwd_7;
mov ymm6_8 hwd_8;
mov ymm6_9 hwd_9;
mov ymm6_a hwd_a;
mov ymm6_b hwd_b;
mov ymm6_c hwd_c;
mov ymm6_d hwd_d;
mov ymm6_e hwd_e;
mov ymm6_f hwd_f;
(* vpunpcklwd %ymm8,%ymm4,%ymm5                    #! PC = 0x555555557e85 *)
mov lwd_0 ymm4_0;
mov lwd_1 ymm8_0;
mov lwd_2 ymm4_1;
mov lwd_3 ymm8_1;
mov lwd_4 ymm4_2;
mov lwd_5 ymm8_2;
mov lwd_6 ymm4_3;
mov lwd_7 ymm8_3;
mov lwd_8 ymm4_8;
mov lwd_9 ymm8_8;
mov lwd_a ymm4_9;
mov lwd_b ymm8_9;
mov lwd_c ymm4_a;
mov lwd_d ymm8_a;
mov lwd_e ymm4_b;
mov lwd_f ymm8_b;
mov ymm5_0 lwd_0;
mov ymm5_1 lwd_1;
mov ymm5_2 lwd_2;
mov ymm5_3 lwd_3;
mov ymm5_4 lwd_4;
mov ymm5_5 lwd_5;
mov ymm5_6 lwd_6;
mov ymm5_7 lwd_7;
mov ymm5_8 lwd_8;
mov ymm5_9 lwd_9;
mov ymm5_a lwd_a;
mov ymm5_b lwd_b;
mov ymm5_c lwd_c;
mov ymm5_d lwd_d;
mov ymm5_e lwd_e;
mov ymm5_f lwd_f;
(* vpunpckhwd %ymm8,%ymm4,%ymm8                    #! PC = 0x555555557e8a *)
mov hwd_0 ymm4_4;
mov hwd_1 ymm8_4;
mov hwd_2 ymm4_5;
mov hwd_3 ymm8_5;
mov hwd_4 ymm4_6;
mov hwd_5 ymm8_6;
mov hwd_6 ymm4_7;
mov hwd_7 ymm8_7;
mov hwd_8 ymm4_c;
mov hwd_9 ymm8_c;
mov hwd_a ymm4_d;
mov hwd_b ymm8_d;
mov hwd_c ymm4_e;
mov hwd_d ymm8_e;
mov hwd_e ymm4_f;
mov hwd_f ymm8_f;
mov ymm8_0 hwd_0;
mov ymm8_1 hwd_1;
mov ymm8_2 hwd_2;
mov ymm8_3 hwd_3;
mov ymm8_4 hwd_4;
mov ymm8_5 hwd_5;
mov ymm8_6 hwd_6;
mov ymm8_7 hwd_7;
mov ymm8_8 hwd_8;
mov ymm8_9 hwd_9;
mov ymm8_a hwd_a;
mov ymm8_b hwd_b;
mov ymm8_c hwd_c;
mov ymm8_d hwd_d;
mov ymm8_e hwd_e;
mov ymm8_f hwd_f;
(* vpunpcklwd %ymm11,%ymm10,%ymm4                  #! PC = 0x555555557e8f *)
mov lwd_0 ymm10_0;
mov lwd_1 ymm11_0;
mov lwd_2 ymm10_1;
mov lwd_3 ymm11_1;
mov lwd_4 ymm10_2;
mov lwd_5 ymm11_2;
mov lwd_6 ymm10_3;
mov lwd_7 ymm11_3;
mov lwd_8 ymm10_8;
mov lwd_9 ymm11_8;
mov lwd_a ymm10_9;
mov lwd_b ymm11_9;
mov lwd_c ymm10_a;
mov lwd_d ymm11_a;
mov lwd_e ymm10_b;
mov lwd_f ymm11_b;
mov ymm4_0 lwd_0;
mov ymm4_1 lwd_1;
mov ymm4_2 lwd_2;
mov ymm4_3 lwd_3;
mov ymm4_4 lwd_4;
mov ymm4_5 lwd_5;
mov ymm4_6 lwd_6;
mov ymm4_7 lwd_7;
mov ymm4_8 lwd_8;
mov ymm4_9 lwd_9;
mov ymm4_a lwd_a;
mov ymm4_b lwd_b;
mov ymm4_c lwd_c;
mov ymm4_d lwd_d;
mov ymm4_e lwd_e;
mov ymm4_f lwd_f;
(* vpunpckhwd %ymm11,%ymm10,%ymm11                 #! PC = 0x555555557e94 *)
mov hwd_0 ymm10_4;
mov hwd_1 ymm11_4;
mov hwd_2 ymm10_5;
mov hwd_3 ymm11_5;
mov hwd_4 ymm10_6;
mov hwd_5 ymm11_6;
mov hwd_6 ymm10_7;
mov hwd_7 ymm11_7;
mov hwd_8 ymm10_c;
mov hwd_9 ymm11_c;
mov hwd_a ymm10_d;
mov hwd_b ymm11_d;
mov hwd_c ymm10_e;
mov hwd_d ymm11_e;
mov hwd_e ymm10_f;
mov hwd_f ymm11_f;
mov ymm11_0 hwd_0;
mov ymm11_1 hwd_1;
mov ymm11_2 hwd_2;
mov ymm11_3 hwd_3;
mov ymm11_4 hwd_4;
mov ymm11_5 hwd_5;
mov ymm11_6 hwd_6;
mov ymm11_7 hwd_7;
mov ymm11_8 hwd_8;
mov ymm11_9 hwd_9;
mov ymm11_a hwd_a;
mov ymm11_b hwd_b;
mov ymm11_c hwd_c;
mov ymm11_d hwd_d;
mov ymm11_e hwd_e;
mov ymm11_f hwd_f;
(* vbroadcasti128 0x140(%rdx),%ymm1                #! EA = L0x555555561260; Value = 0x4ee67a89a62111ed; PC = 0x555555557e99 *)
mov ymm1_0 L0x555555561260;
mov ymm1_1 L0x555555561262;
mov ymm1_2 L0x555555561264;
mov ymm1_3 L0x555555561266;
mov ymm1_4 L0x555555561268;
mov ymm1_5 L0x55555556126a;
mov ymm1_6 L0x55555556126c;
mov ymm1_7 L0x55555556126e;
mov ymm1_8 L0x555555561260;
mov ymm1_9 L0x555555561262;
mov ymm1_a L0x555555561264;
mov ymm1_b L0x555555561266;
mov ymm1_c L0x555555561268;
mov ymm1_d L0x55555556126a;
mov ymm1_e L0x55555556126c;
mov ymm1_f L0x55555556126e;
(* vbroadcasti128 0x340(%rdx),%ymm2                #! EA = L0x555555561460; Value = 0x0ae6f4891021f3ed; PC = 0x555555557ea2 *)
mov ymm2_0 L0x555555561460;
mov ymm2_1 L0x555555561462;
mov ymm2_2 L0x555555561464;
mov ymm2_3 L0x555555561466;
mov ymm2_4 L0x555555561468;
mov ymm2_5 L0x55555556146a;
mov ymm2_6 L0x55555556146c;
mov ymm2_7 L0x55555556146e;
mov ymm2_8 L0x555555561460;
mov ymm2_9 L0x555555561462;
mov ymm2_a L0x555555561464;
mov ymm2_b L0x555555561466;
mov ymm2_c L0x555555561468;
mov ymm2_d L0x55555556146a;
mov ymm2_e L0x55555556146c;
mov ymm2_f L0x55555556146e;
(* vpmullw %ymm1,%ymm3,%ymm10                      #! PC = 0x555555557eab *)
smull mulHymm3_0 mulL_0 ymm1_0 ymm3_0;
smull mulHymm3_1 mulL_1 ymm1_1 ymm3_1;
smull mulHymm3_2 mulL_2 ymm1_2 ymm3_2;
smull mulHymm3_3 mulL_3 ymm1_3 ymm3_3;
smull mulHymm3_4 mulL_4 ymm1_4 ymm3_4;
smull mulHymm3_5 mulL_5 ymm1_5 ymm3_5;
smull mulHymm3_6 mulL_6 ymm1_6 ymm3_6;
smull mulHymm3_7 mulL_7 ymm1_7 ymm3_7;
smull mulHymm3_8 mulL_8 ymm1_8 ymm3_8;
smull mulHymm3_9 mulL_9 ymm1_9 ymm3_9;
smull mulHymm3_a mulL_a ymm1_a ymm3_a;
smull mulHymm3_b mulL_b ymm1_b ymm3_b;
smull mulHymm3_c mulL_c ymm1_c ymm3_c;
smull mulHymm3_d mulL_d ymm1_d ymm3_d;
smull mulHymm3_e mulL_e ymm1_e ymm3_e;
smull mulHymm3_f mulL_f ymm1_f ymm3_f;
cast ymm10_0@sint16 mulL_0;
cast ymm10_1@sint16 mulL_1;
cast ymm10_2@sint16 mulL_2;
cast ymm10_3@sint16 mulL_3;
cast ymm10_4@sint16 mulL_4;
cast ymm10_5@sint16 mulL_5;
cast ymm10_6@sint16 mulL_6;
cast ymm10_7@sint16 mulL_7;
cast ymm10_8@sint16 mulL_8;
cast ymm10_9@sint16 mulL_9;
cast ymm10_a@sint16 mulL_a;
cast ymm10_b@sint16 mulL_b;
cast ymm10_c@sint16 mulL_c;
cast ymm10_d@sint16 mulL_d;
cast ymm10_e@sint16 mulL_e;
cast ymm10_f@sint16 mulL_f;
(* vpmulhw %ymm2,%ymm3,%ymm3                       #! PC = 0x555555557eaf *)
smull mulH_0 mulLymm3_0 ymm3_0 ymm2_0;
smull mulH_1 mulLymm3_1 ymm3_1 ymm2_1;
smull mulH_2 mulLymm3_2 ymm3_2 ymm2_2;
smull mulH_3 mulLymm3_3 ymm3_3 ymm2_3;
smull mulH_4 mulLymm3_4 ymm3_4 ymm2_4;
smull mulH_5 mulLymm3_5 ymm3_5 ymm2_5;
smull mulH_6 mulLymm3_6 ymm3_6 ymm2_6;
smull mulH_7 mulLymm3_7 ymm3_7 ymm2_7;
smull mulH_8 mulLymm3_8 ymm3_8 ymm2_8;
smull mulH_9 mulLymm3_9 ymm3_9 ymm2_9;
smull mulH_a mulLymm3_a ymm3_a ymm2_a;
smull mulH_b mulLymm3_b ymm3_b ymm2_b;
smull mulH_c mulLymm3_c ymm3_c ymm2_c;
smull mulH_d mulLymm3_d ymm3_d ymm2_d;
smull mulH_e mulLymm3_e ymm3_e ymm2_e;
smull mulH_f mulLymm3_f ymm3_f ymm2_f;
mov ymm3_0 mulH_0;
mov ymm3_1 mulH_1;
mov ymm3_2 mulH_2;
mov ymm3_3 mulH_3;
mov ymm3_4 mulH_4;
mov ymm3_5 mulH_5;
mov ymm3_6 mulH_6;
mov ymm3_7 mulH_7;
mov ymm3_8 mulH_8;
mov ymm3_9 mulH_9;
mov ymm3_a mulH_a;
mov ymm3_b mulH_b;
mov ymm3_c mulH_c;
mov ymm3_d mulH_d;
mov ymm3_e mulH_e;
mov ymm3_f mulH_f;
(* vpmulhw %ymm0,%ymm10,%ymm10                     #! PC = 0x555555557eb3 *)
smull mulH_0 red_0 ymm10_0 ymm0_0;
assert true && red_0 = mulLymm3_0;
assume red_0 = mulLymm3_0 && true;
smull mulH_1 red_1 ymm10_1 ymm0_1;
assert true && red_1 = mulLymm3_1;
assume red_1 = mulLymm3_1 && true;
smull mulH_2 red_2 ymm10_2 ymm0_2;
assert true && red_2 = mulLymm3_2;
assume red_2 = mulLymm3_2 && true;
smull mulH_3 red_3 ymm10_3 ymm0_3;
assert true && red_3 = mulLymm3_3;
assume red_3 = mulLymm3_3 && true;
smull mulH_4 red_4 ymm10_4 ymm0_4;
assert true && red_4 = mulLymm3_4;
assume red_4 = mulLymm3_4 && true;
smull mulH_5 red_5 ymm10_5 ymm0_5;
assert true && red_5 = mulLymm3_5;
assume red_5 = mulLymm3_5 && true;
smull mulH_6 red_6 ymm10_6 ymm0_6;
assert true && red_6 = mulLymm3_6;
assume red_6 = mulLymm3_6 && true;
smull mulH_7 red_7 ymm10_7 ymm0_7;
assert true && red_7 = mulLymm3_7;
assume red_7 = mulLymm3_7 && true;
smull mulH_8 red_8 ymm10_8 ymm0_8;
assert true && red_8 = mulLymm3_8;
assume red_8 = mulLymm3_8 && true;
smull mulH_9 red_9 ymm10_9 ymm0_9;
assert true && red_9 = mulLymm3_9;
assume red_9 = mulLymm3_9 && true;
smull mulH_a red_a ymm10_a ymm0_a;
assert true && red_a = mulLymm3_a;
assume red_a = mulLymm3_a && true;
smull mulH_b red_b ymm10_b ymm0_b;
assert true && red_b = mulLymm3_b;
assume red_b = mulLymm3_b && true;
smull mulH_c red_c ymm10_c ymm0_c;
assert true && red_c = mulLymm3_c;
assume red_c = mulLymm3_c && true;
smull mulH_d red_d ymm10_d ymm0_d;
assert true && red_d = mulLymm3_d;
assume red_d = mulLymm3_d && true;
smull mulH_e red_e ymm10_e ymm0_e;
assert true && red_e = mulLymm3_e;
assume red_e = mulLymm3_e && true;
smull mulH_f red_f ymm10_f ymm0_f;
assert true && red_f = mulLymm3_f;
assume red_f = mulLymm3_f && true;
mov ymm10_0 mulH_0;
mov ymm10_1 mulH_1;
mov ymm10_2 mulH_2;
mov ymm10_3 mulH_3;
mov ymm10_4 mulH_4;
mov ymm10_5 mulH_5;
mov ymm10_6 mulH_6;
mov ymm10_7 mulH_7;
mov ymm10_8 mulH_8;
mov ymm10_9 mulH_9;
mov ymm10_a mulH_a;
mov ymm10_b mulH_b;
mov ymm10_c mulH_c;
mov ymm10_d mulH_d;
mov ymm10_e mulH_e;
mov ymm10_f mulH_f;
(* vpsubw %ymm10,%ymm3,%ymm3                       #! PC = 0x555555557eb7 *)
sub ymm3_0 ymm3_0 ymm10_0;
sub ymm3_1 ymm3_1 ymm10_1;
sub ymm3_2 ymm3_2 ymm10_2;
sub ymm3_3 ymm3_3 ymm10_3;
sub ymm3_4 ymm3_4 ymm10_4;
sub ymm3_5 ymm3_5 ymm10_5;
sub ymm3_6 ymm3_6 ymm10_6;
sub ymm3_7 ymm3_7 ymm10_7;
sub ymm3_8 ymm3_8 ymm10_8;
sub ymm3_9 ymm3_9 ymm10_9;
sub ymm3_a ymm3_a ymm10_a;
sub ymm3_b ymm3_b ymm10_b;
sub ymm3_c ymm3_c ymm10_c;
sub ymm3_d ymm3_d ymm10_d;
sub ymm3_e ymm3_e ymm10_e;
sub ymm3_f ymm3_f ymm10_f;
(* vbroadcasti128 0x150(%rdx),%ymm1                #! EA = L0x555555561270; Value = 0xa7a15ecddf07cfa6; PC = 0x555555557ebc *)
mov ymm1_0 L0x555555561270;
mov ymm1_1 L0x555555561272;
mov ymm1_2 L0x555555561274;
mov ymm1_3 L0x555555561276;
mov ymm1_4 L0x555555561278;
mov ymm1_5 L0x55555556127a;
mov ymm1_6 L0x55555556127c;
mov ymm1_7 L0x55555556127e;
mov ymm1_8 L0x555555561270;
mov ymm1_9 L0x555555561272;
mov ymm1_a L0x555555561274;
mov ymm1_b L0x555555561276;
mov ymm1_c L0x555555561278;
mov ymm1_d L0x55555556127a;
mov ymm1_e L0x55555556127c;
mov ymm1_f L0x55555556127e;
(* vbroadcasti128 0x350(%rdx),%ymm2                #! EA = L0x555555561470; Value = 0x11a100cd05070ba6; PC = 0x555555557ec5 *)
mov ymm2_0 L0x555555561470;
mov ymm2_1 L0x555555561472;
mov ymm2_2 L0x555555561474;
mov ymm2_3 L0x555555561476;
mov ymm2_4 L0x555555561478;
mov ymm2_5 L0x55555556147a;
mov ymm2_6 L0x55555556147c;
mov ymm2_7 L0x55555556147e;
mov ymm2_8 L0x555555561470;
mov ymm2_9 L0x555555561472;
mov ymm2_a L0x555555561474;
mov ymm2_b L0x555555561476;
mov ymm2_c L0x555555561478;
mov ymm2_d L0x55555556147a;
mov ymm2_e L0x55555556147c;
mov ymm2_f L0x55555556147e;
(* vpmullw %ymm1,%ymm6,%ymm10                      #! PC = 0x555555557ece *)
smull mulHymm6_0 mulL_0 ymm1_0 ymm6_0;
smull mulHymm6_1 mulL_1 ymm1_1 ymm6_1;
smull mulHymm6_2 mulL_2 ymm1_2 ymm6_2;
smull mulHymm6_3 mulL_3 ymm1_3 ymm6_3;
smull mulHymm6_4 mulL_4 ymm1_4 ymm6_4;
smull mulHymm6_5 mulL_5 ymm1_5 ymm6_5;
smull mulHymm6_6 mulL_6 ymm1_6 ymm6_6;
smull mulHymm6_7 mulL_7 ymm1_7 ymm6_7;
smull mulHymm6_8 mulL_8 ymm1_8 ymm6_8;
smull mulHymm6_9 mulL_9 ymm1_9 ymm6_9;
smull mulHymm6_a mulL_a ymm1_a ymm6_a;
smull mulHymm6_b mulL_b ymm1_b ymm6_b;
smull mulHymm6_c mulL_c ymm1_c ymm6_c;
smull mulHymm6_d mulL_d ymm1_d ymm6_d;
smull mulHymm6_e mulL_e ymm1_e ymm6_e;
smull mulHymm6_f mulL_f ymm1_f ymm6_f;
cast ymm10_0@sint16 mulL_0;
cast ymm10_1@sint16 mulL_1;
cast ymm10_2@sint16 mulL_2;
cast ymm10_3@sint16 mulL_3;
cast ymm10_4@sint16 mulL_4;
cast ymm10_5@sint16 mulL_5;
cast ymm10_6@sint16 mulL_6;
cast ymm10_7@sint16 mulL_7;
cast ymm10_8@sint16 mulL_8;
cast ymm10_9@sint16 mulL_9;
cast ymm10_a@sint16 mulL_a;
cast ymm10_b@sint16 mulL_b;
cast ymm10_c@sint16 mulL_c;
cast ymm10_d@sint16 mulL_d;
cast ymm10_e@sint16 mulL_e;
cast ymm10_f@sint16 mulL_f;
(* vpmulhw %ymm2,%ymm6,%ymm6                       #! PC = 0x555555557ed2 *)
smull mulH_0 mulLymm6_0 ymm6_0 ymm2_0;
smull mulH_1 mulLymm6_1 ymm6_1 ymm2_1;
smull mulH_2 mulLymm6_2 ymm6_2 ymm2_2;
smull mulH_3 mulLymm6_3 ymm6_3 ymm2_3;
smull mulH_4 mulLymm6_4 ymm6_4 ymm2_4;
smull mulH_5 mulLymm6_5 ymm6_5 ymm2_5;
smull mulH_6 mulLymm6_6 ymm6_6 ymm2_6;
smull mulH_7 mulLymm6_7 ymm6_7 ymm2_7;
smull mulH_8 mulLymm6_8 ymm6_8 ymm2_8;
smull mulH_9 mulLymm6_9 ymm6_9 ymm2_9;
smull mulH_a mulLymm6_a ymm6_a ymm2_a;
smull mulH_b mulLymm6_b ymm6_b ymm2_b;
smull mulH_c mulLymm6_c ymm6_c ymm2_c;
smull mulH_d mulLymm6_d ymm6_d ymm2_d;
smull mulH_e mulLymm6_e ymm6_e ymm2_e;
smull mulH_f mulLymm6_f ymm6_f ymm2_f;
mov ymm6_0 mulH_0;
mov ymm6_1 mulH_1;
mov ymm6_2 mulH_2;
mov ymm6_3 mulH_3;
mov ymm6_4 mulH_4;
mov ymm6_5 mulH_5;
mov ymm6_6 mulH_6;
mov ymm6_7 mulH_7;
mov ymm6_8 mulH_8;
mov ymm6_9 mulH_9;
mov ymm6_a mulH_a;
mov ymm6_b mulH_b;
mov ymm6_c mulH_c;
mov ymm6_d mulH_d;
mov ymm6_e mulH_e;
mov ymm6_f mulH_f;
(* vpmulhw %ymm0,%ymm10,%ymm10                     #! PC = 0x555555557ed6 *)
smull mulH_0 red_0 ymm10_0 ymm0_0;
assert true && red_0 = mulLymm6_0;
assume red_0 = mulLymm6_0 && true;
smull mulH_1 red_1 ymm10_1 ymm0_1;
assert true && red_1 = mulLymm6_1;
assume red_1 = mulLymm6_1 && true;
smull mulH_2 red_2 ymm10_2 ymm0_2;
assert true && red_2 = mulLymm6_2;
assume red_2 = mulLymm6_2 && true;
smull mulH_3 red_3 ymm10_3 ymm0_3;
assert true && red_3 = mulLymm6_3;
assume red_3 = mulLymm6_3 && true;
smull mulH_4 red_4 ymm10_4 ymm0_4;
assert true && red_4 = mulLymm6_4;
assume red_4 = mulLymm6_4 && true;
smull mulH_5 red_5 ymm10_5 ymm0_5;
assert true && red_5 = mulLymm6_5;
assume red_5 = mulLymm6_5 && true;
smull mulH_6 red_6 ymm10_6 ymm0_6;
assert true && red_6 = mulLymm6_6;
assume red_6 = mulLymm6_6 && true;
smull mulH_7 red_7 ymm10_7 ymm0_7;
assert true && red_7 = mulLymm6_7;
assume red_7 = mulLymm6_7 && true;
smull mulH_8 red_8 ymm10_8 ymm0_8;
assert true && red_8 = mulLymm6_8;
assume red_8 = mulLymm6_8 && true;
smull mulH_9 red_9 ymm10_9 ymm0_9;
assert true && red_9 = mulLymm6_9;
assume red_9 = mulLymm6_9 && true;
smull mulH_a red_a ymm10_a ymm0_a;
assert true && red_a = mulLymm6_a;
assume red_a = mulLymm6_a && true;
smull mulH_b red_b ymm10_b ymm0_b;
assert true && red_b = mulLymm6_b;
assume red_b = mulLymm6_b && true;
smull mulH_c red_c ymm10_c ymm0_c;
assert true && red_c = mulLymm6_c;
assume red_c = mulLymm6_c && true;
smull mulH_d red_d ymm10_d ymm0_d;
assert true && red_d = mulLymm6_d;
assume red_d = mulLymm6_d && true;
smull mulH_e red_e ymm10_e ymm0_e;
assert true && red_e = mulLymm6_e;
assume red_e = mulLymm6_e && true;
smull mulH_f red_f ymm10_f ymm0_f;
assert true && red_f = mulLymm6_f;
assume red_f = mulLymm6_f && true;
mov ymm10_0 mulH_0;
mov ymm10_1 mulH_1;
mov ymm10_2 mulH_2;
mov ymm10_3 mulH_3;
mov ymm10_4 mulH_4;
mov ymm10_5 mulH_5;
mov ymm10_6 mulH_6;
mov ymm10_7 mulH_7;
mov ymm10_8 mulH_8;
mov ymm10_9 mulH_9;
mov ymm10_a mulH_a;
mov ymm10_b mulH_b;
mov ymm10_c mulH_c;
mov ymm10_d mulH_d;
mov ymm10_e mulH_e;
mov ymm10_f mulH_f;
(* vpsubw %ymm10,%ymm6,%ymm6                       #! PC = 0x555555557eda *)
sub ymm6_0 ymm6_0 ymm10_0;
sub ymm6_1 ymm6_1 ymm10_1;
sub ymm6_2 ymm6_2 ymm10_2;
sub ymm6_3 ymm6_3 ymm10_3;
sub ymm6_4 ymm6_4 ymm10_4;
sub ymm6_5 ymm6_5 ymm10_5;
sub ymm6_6 ymm6_6 ymm10_6;
sub ymm6_7 ymm6_7 ymm10_7;
sub ymm6_8 ymm6_8 ymm10_8;
sub ymm6_9 ymm6_9 ymm10_9;
sub ymm6_a ymm6_a ymm10_a;
sub ymm6_b ymm6_b ymm10_b;
sub ymm6_c ymm6_c ymm10_c;
sub ymm6_d ymm6_d ymm10_d;
sub ymm6_e ymm6_e ymm10_e;
sub ymm6_f ymm6_f ymm10_f;
(* vbroadcasti128 0x160(%rdx),%ymm1                #! EA = L0x555555561280; Value = 0x3d78e4f41686ebfa; PC = 0x555555557edf *)
mov ymm1_0 L0x555555561280;
mov ymm1_1 L0x555555561282;
mov ymm1_2 L0x555555561284;
mov ymm1_3 L0x555555561286;
mov ymm1_4 L0x555555561288;
mov ymm1_5 L0x55555556128a;
mov ymm1_6 L0x55555556128c;
mov ymm1_7 L0x55555556128e;
mov ymm1_8 L0x555555561280;
mov ymm1_9 L0x555555561282;
mov ymm1_a L0x555555561284;
mov ymm1_b L0x555555561286;
mov ymm1_c L0x555555561288;
mov ymm1_d L0x55555556128a;
mov ymm1_e L0x55555556128c;
mov ymm1_f L0x55555556128e;
(* vbroadcasti128 0x360(%rdx),%ymm2                #! EA = L0x555555561480; Value = 0xed78ecf41286effa; PC = 0x555555557ee8 *)
mov ymm2_0 L0x555555561480;
mov ymm2_1 L0x555555561482;
mov ymm2_2 L0x555555561484;
mov ymm2_3 L0x555555561486;
mov ymm2_4 L0x555555561488;
mov ymm2_5 L0x55555556148a;
mov ymm2_6 L0x55555556148c;
mov ymm2_7 L0x55555556148e;
mov ymm2_8 L0x555555561480;
mov ymm2_9 L0x555555561482;
mov ymm2_a L0x555555561484;
mov ymm2_b L0x555555561486;
mov ymm2_c L0x555555561488;
mov ymm2_d L0x55555556148a;
mov ymm2_e L0x55555556148c;
mov ymm2_f L0x55555556148e;
(* vpmullw %ymm1,%ymm8,%ymm10                      #! PC = 0x555555557ef1 *)
smull mulHymm8_0 mulL_0 ymm1_0 ymm8_0;
smull mulHymm8_1 mulL_1 ymm1_1 ymm8_1;
smull mulHymm8_2 mulL_2 ymm1_2 ymm8_2;
smull mulHymm8_3 mulL_3 ymm1_3 ymm8_3;
smull mulHymm8_4 mulL_4 ymm1_4 ymm8_4;
smull mulHymm8_5 mulL_5 ymm1_5 ymm8_5;
smull mulHymm8_6 mulL_6 ymm1_6 ymm8_6;
smull mulHymm8_7 mulL_7 ymm1_7 ymm8_7;
smull mulHymm8_8 mulL_8 ymm1_8 ymm8_8;
smull mulHymm8_9 mulL_9 ymm1_9 ymm8_9;
smull mulHymm8_a mulL_a ymm1_a ymm8_a;
smull mulHymm8_b mulL_b ymm1_b ymm8_b;
smull mulHymm8_c mulL_c ymm1_c ymm8_c;
smull mulHymm8_d mulL_d ymm1_d ymm8_d;
smull mulHymm8_e mulL_e ymm1_e ymm8_e;
smull mulHymm8_f mulL_f ymm1_f ymm8_f;
cast ymm10_0@sint16 mulL_0;
cast ymm10_1@sint16 mulL_1;
cast ymm10_2@sint16 mulL_2;
cast ymm10_3@sint16 mulL_3;
cast ymm10_4@sint16 mulL_4;
cast ymm10_5@sint16 mulL_5;
cast ymm10_6@sint16 mulL_6;
cast ymm10_7@sint16 mulL_7;
cast ymm10_8@sint16 mulL_8;
cast ymm10_9@sint16 mulL_9;
cast ymm10_a@sint16 mulL_a;
cast ymm10_b@sint16 mulL_b;
cast ymm10_c@sint16 mulL_c;
cast ymm10_d@sint16 mulL_d;
cast ymm10_e@sint16 mulL_e;
cast ymm10_f@sint16 mulL_f;
(* vpmulhw %ymm2,%ymm8,%ymm8                       #! PC = 0x555555557ef5 *)
smull mulH_0 mulLymm8_0 ymm8_0 ymm2_0;
smull mulH_1 mulLymm8_1 ymm8_1 ymm2_1;
smull mulH_2 mulLymm8_2 ymm8_2 ymm2_2;
smull mulH_3 mulLymm8_3 ymm8_3 ymm2_3;
smull mulH_4 mulLymm8_4 ymm8_4 ymm2_4;
smull mulH_5 mulLymm8_5 ymm8_5 ymm2_5;
smull mulH_6 mulLymm8_6 ymm8_6 ymm2_6;
smull mulH_7 mulLymm8_7 ymm8_7 ymm2_7;
smull mulH_8 mulLymm8_8 ymm8_8 ymm2_8;
smull mulH_9 mulLymm8_9 ymm8_9 ymm2_9;
smull mulH_a mulLymm8_a ymm8_a ymm2_a;
smull mulH_b mulLymm8_b ymm8_b ymm2_b;
smull mulH_c mulLymm8_c ymm8_c ymm2_c;
smull mulH_d mulLymm8_d ymm8_d ymm2_d;
smull mulH_e mulLymm8_e ymm8_e ymm2_e;
smull mulH_f mulLymm8_f ymm8_f ymm2_f;
mov ymm8_0 mulH_0;
mov ymm8_1 mulH_1;
mov ymm8_2 mulH_2;
mov ymm8_3 mulH_3;
mov ymm8_4 mulH_4;
mov ymm8_5 mulH_5;
mov ymm8_6 mulH_6;
mov ymm8_7 mulH_7;
mov ymm8_8 mulH_8;
mov ymm8_9 mulH_9;
mov ymm8_a mulH_a;
mov ymm8_b mulH_b;
mov ymm8_c mulH_c;
mov ymm8_d mulH_d;
mov ymm8_e mulH_e;
mov ymm8_f mulH_f;
(* vpmulhw %ymm0,%ymm10,%ymm10                     #! PC = 0x555555557ef9 *)
smull mulH_0 red_0 ymm10_0 ymm0_0;
assert true && red_0 = mulLymm8_0;
assume red_0 = mulLymm8_0 && true;
smull mulH_1 red_1 ymm10_1 ymm0_1;
assert true && red_1 = mulLymm8_1;
assume red_1 = mulLymm8_1 && true;
smull mulH_2 red_2 ymm10_2 ymm0_2;
assert true && red_2 = mulLymm8_2;
assume red_2 = mulLymm8_2 && true;
smull mulH_3 red_3 ymm10_3 ymm0_3;
assert true && red_3 = mulLymm8_3;
assume red_3 = mulLymm8_3 && true;
smull mulH_4 red_4 ymm10_4 ymm0_4;
assert true && red_4 = mulLymm8_4;
assume red_4 = mulLymm8_4 && true;
smull mulH_5 red_5 ymm10_5 ymm0_5;
assert true && red_5 = mulLymm8_5;
assume red_5 = mulLymm8_5 && true;
smull mulH_6 red_6 ymm10_6 ymm0_6;
assert true && red_6 = mulLymm8_6;
assume red_6 = mulLymm8_6 && true;
smull mulH_7 red_7 ymm10_7 ymm0_7;
assert true && red_7 = mulLymm8_7;
assume red_7 = mulLymm8_7 && true;
smull mulH_8 red_8 ymm10_8 ymm0_8;
assert true && red_8 = mulLymm8_8;
assume red_8 = mulLymm8_8 && true;
smull mulH_9 red_9 ymm10_9 ymm0_9;
assert true && red_9 = mulLymm8_9;
assume red_9 = mulLymm8_9 && true;
smull mulH_a red_a ymm10_a ymm0_a;
assert true && red_a = mulLymm8_a;
assume red_a = mulLymm8_a && true;
smull mulH_b red_b ymm10_b ymm0_b;
assert true && red_b = mulLymm8_b;
assume red_b = mulLymm8_b && true;
smull mulH_c red_c ymm10_c ymm0_c;
assert true && red_c = mulLymm8_c;
assume red_c = mulLymm8_c && true;
smull mulH_d red_d ymm10_d ymm0_d;
assert true && red_d = mulLymm8_d;
assume red_d = mulLymm8_d && true;
smull mulH_e red_e ymm10_e ymm0_e;
assert true && red_e = mulLymm8_e;
assume red_e = mulLymm8_e && true;
smull mulH_f red_f ymm10_f ymm0_f;
assert true && red_f = mulLymm8_f;
assume red_f = mulLymm8_f && true;
mov ymm10_0 mulH_0;
mov ymm10_1 mulH_1;
mov ymm10_2 mulH_2;
mov ymm10_3 mulH_3;
mov ymm10_4 mulH_4;
mov ymm10_5 mulH_5;
mov ymm10_6 mulH_6;
mov ymm10_7 mulH_7;
mov ymm10_8 mulH_8;
mov ymm10_9 mulH_9;
mov ymm10_a mulH_a;
mov ymm10_b mulH_b;
mov ymm10_c mulH_c;
mov ymm10_d mulH_d;
mov ymm10_e mulH_e;
mov ymm10_f mulH_f;
(* vpsubw %ymm10,%ymm8,%ymm8                       #! PC = 0x555555557efd *)
sub ymm8_0 ymm8_0 ymm10_0;
sub ymm8_1 ymm8_1 ymm10_1;
sub ymm8_2 ymm8_2 ymm10_2;
sub ymm8_3 ymm8_3 ymm10_3;
sub ymm8_4 ymm8_4 ymm10_4;
sub ymm8_5 ymm8_5 ymm10_5;
sub ymm8_6 ymm8_6 ymm10_6;
sub ymm8_7 ymm8_7 ymm10_7;
sub ymm8_8 ymm8_8 ymm10_8;
sub ymm8_9 ymm8_9 ymm10_9;
sub ymm8_a ymm8_a ymm10_a;
sub ymm8_b ymm8_b ymm10_b;
sub ymm8_c ymm8_c ymm10_c;
sub ymm8_d ymm8_d ymm10_d;
sub ymm8_e ymm8_e ymm10_e;
sub ymm8_f ymm8_f ymm10_f;
(* vbroadcasti128 0x170(%rdx),%ymm1                #! EA = L0x555555561290; Value = 0x18ed15f3860fbeac; PC = 0x555555557f02 *)
mov ymm1_0 L0x555555561290;
mov ymm1_1 L0x555555561292;
mov ymm1_2 L0x555555561294;
mov ymm1_3 L0x555555561296;
mov ymm1_4 L0x555555561298;
mov ymm1_5 L0x55555556129a;
mov ymm1_6 L0x55555556129c;
mov ymm1_7 L0x55555556129e;
mov ymm1_8 L0x555555561290;
mov ymm1_9 L0x555555561292;
mov ymm1_a L0x555555561294;
mov ymm1_b L0x555555561296;
mov ymm1_c L0x555555561298;
mov ymm1_d L0x55555556129a;
mov ymm1_e L0x55555556129c;
mov ymm1_f L0x55555556129e;
(* vbroadcasti128 0x370(%rdx),%ymm2                #! EA = L0x555555561490; Value = 0xfaedf3f3fc0ff6ac; PC = 0x555555557f0b *)
mov ymm2_0 L0x555555561490;
mov ymm2_1 L0x555555561492;
mov ymm2_2 L0x555555561494;
mov ymm2_3 L0x555555561496;
mov ymm2_4 L0x555555561498;
mov ymm2_5 L0x55555556149a;
mov ymm2_6 L0x55555556149c;
mov ymm2_7 L0x55555556149e;
mov ymm2_8 L0x555555561490;
mov ymm2_9 L0x555555561492;
mov ymm2_a L0x555555561494;
mov ymm2_b L0x555555561496;
mov ymm2_c L0x555555561498;
mov ymm2_d L0x55555556149a;
mov ymm2_e L0x55555556149c;
mov ymm2_f L0x55555556149e;
(* vpmullw %ymm1,%ymm11,%ymm10                     #! PC = 0x555555557f14 *)
smull mulHymm11_0 mulL_0 ymm1_0 ymm11_0;
smull mulHymm11_1 mulL_1 ymm1_1 ymm11_1;
smull mulHymm11_2 mulL_2 ymm1_2 ymm11_2;
smull mulHymm11_3 mulL_3 ymm1_3 ymm11_3;
smull mulHymm11_4 mulL_4 ymm1_4 ymm11_4;
smull mulHymm11_5 mulL_5 ymm1_5 ymm11_5;
smull mulHymm11_6 mulL_6 ymm1_6 ymm11_6;
smull mulHymm11_7 mulL_7 ymm1_7 ymm11_7;
smull mulHymm11_8 mulL_8 ymm1_8 ymm11_8;
smull mulHymm11_9 mulL_9 ymm1_9 ymm11_9;
smull mulHymm11_a mulL_a ymm1_a ymm11_a;
smull mulHymm11_b mulL_b ymm1_b ymm11_b;
smull mulHymm11_c mulL_c ymm1_c ymm11_c;
smull mulHymm11_d mulL_d ymm1_d ymm11_d;
smull mulHymm11_e mulL_e ymm1_e ymm11_e;
smull mulHymm11_f mulL_f ymm1_f ymm11_f;
cast ymm10_0@sint16 mulL_0;
cast ymm10_1@sint16 mulL_1;
cast ymm10_2@sint16 mulL_2;
cast ymm10_3@sint16 mulL_3;
cast ymm10_4@sint16 mulL_4;
cast ymm10_5@sint16 mulL_5;
cast ymm10_6@sint16 mulL_6;
cast ymm10_7@sint16 mulL_7;
cast ymm10_8@sint16 mulL_8;
cast ymm10_9@sint16 mulL_9;
cast ymm10_a@sint16 mulL_a;
cast ymm10_b@sint16 mulL_b;
cast ymm10_c@sint16 mulL_c;
cast ymm10_d@sint16 mulL_d;
cast ymm10_e@sint16 mulL_e;
cast ymm10_f@sint16 mulL_f;
(* vpmulhw %ymm2,%ymm11,%ymm11                     #! PC = 0x555555557f18 *)
smull mulH_0 mulLymm11_0 ymm11_0 ymm2_0;
smull mulH_1 mulLymm11_1 ymm11_1 ymm2_1;
smull mulH_2 mulLymm11_2 ymm11_2 ymm2_2;
smull mulH_3 mulLymm11_3 ymm11_3 ymm2_3;
smull mulH_4 mulLymm11_4 ymm11_4 ymm2_4;
smull mulH_5 mulLymm11_5 ymm11_5 ymm2_5;
smull mulH_6 mulLymm11_6 ymm11_6 ymm2_6;
smull mulH_7 mulLymm11_7 ymm11_7 ymm2_7;
smull mulH_8 mulLymm11_8 ymm11_8 ymm2_8;
smull mulH_9 mulLymm11_9 ymm11_9 ymm2_9;
smull mulH_a mulLymm11_a ymm11_a ymm2_a;
smull mulH_b mulLymm11_b ymm11_b ymm2_b;
smull mulH_c mulLymm11_c ymm11_c ymm2_c;
smull mulH_d mulLymm11_d ymm11_d ymm2_d;
smull mulH_e mulLymm11_e ymm11_e ymm2_e;
smull mulH_f mulLymm11_f ymm11_f ymm2_f;
mov ymm11_0 mulH_0;
mov ymm11_1 mulH_1;
mov ymm11_2 mulH_2;
mov ymm11_3 mulH_3;
mov ymm11_4 mulH_4;
mov ymm11_5 mulH_5;
mov ymm11_6 mulH_6;
mov ymm11_7 mulH_7;
mov ymm11_8 mulH_8;
mov ymm11_9 mulH_9;
mov ymm11_a mulH_a;
mov ymm11_b mulH_b;
mov ymm11_c mulH_c;
mov ymm11_d mulH_d;
mov ymm11_e mulH_e;
mov ymm11_f mulH_f;
(* vpmulhw %ymm0,%ymm10,%ymm10                     #! PC = 0x555555557f1c *)
smull mulH_0 red_0 ymm10_0 ymm0_0;
assert true && red_0 = mulLymm11_0;
assume red_0 = mulLymm11_0 && true;
smull mulH_1 red_1 ymm10_1 ymm0_1;
assert true && red_1 = mulLymm11_1;
assume red_1 = mulLymm11_1 && true;
smull mulH_2 red_2 ymm10_2 ymm0_2;
assert true && red_2 = mulLymm11_2;
assume red_2 = mulLymm11_2 && true;
smull mulH_3 red_3 ymm10_3 ymm0_3;
assert true && red_3 = mulLymm11_3;
assume red_3 = mulLymm11_3 && true;
smull mulH_4 red_4 ymm10_4 ymm0_4;
assert true && red_4 = mulLymm11_4;
assume red_4 = mulLymm11_4 && true;
smull mulH_5 red_5 ymm10_5 ymm0_5;
assert true && red_5 = mulLymm11_5;
assume red_5 = mulLymm11_5 && true;
smull mulH_6 red_6 ymm10_6 ymm0_6;
assert true && red_6 = mulLymm11_6;
assume red_6 = mulLymm11_6 && true;
smull mulH_7 red_7 ymm10_7 ymm0_7;
assert true && red_7 = mulLymm11_7;
assume red_7 = mulLymm11_7 && true;
smull mulH_8 red_8 ymm10_8 ymm0_8;
assert true && red_8 = mulLymm11_8;
assume red_8 = mulLymm11_8 && true;
smull mulH_9 red_9 ymm10_9 ymm0_9;
assert true && red_9 = mulLymm11_9;
assume red_9 = mulLymm11_9 && true;
smull mulH_a red_a ymm10_a ymm0_a;
assert true && red_a = mulLymm11_a;
assume red_a = mulLymm11_a && true;
smull mulH_b red_b ymm10_b ymm0_b;
assert true && red_b = mulLymm11_b;
assume red_b = mulLymm11_b && true;
smull mulH_c red_c ymm10_c ymm0_c;
assert true && red_c = mulLymm11_c;
assume red_c = mulLymm11_c && true;
smull mulH_d red_d ymm10_d ymm0_d;
assert true && red_d = mulLymm11_d;
assume red_d = mulLymm11_d && true;
smull mulH_e red_e ymm10_e ymm0_e;
assert true && red_e = mulLymm11_e;
assume red_e = mulLymm11_e && true;
smull mulH_f red_f ymm10_f ymm0_f;
assert true && red_f = mulLymm11_f;
assume red_f = mulLymm11_f && true;
mov ymm10_0 mulH_0;
mov ymm10_1 mulH_1;
mov ymm10_2 mulH_2;
mov ymm10_3 mulH_3;
mov ymm10_4 mulH_4;
mov ymm10_5 mulH_5;
mov ymm10_6 mulH_6;
mov ymm10_7 mulH_7;
mov ymm10_8 mulH_8;
mov ymm10_9 mulH_9;
mov ymm10_a mulH_a;
mov ymm10_b mulH_b;
mov ymm10_c mulH_c;
mov ymm10_d mulH_d;
mov ymm10_e mulH_e;
mov ymm10_f mulH_f;
(* vpsubw %ymm10,%ymm11,%ymm11                     #! PC = 0x555555557f20 *)
sub ymm11_0 ymm11_0 ymm10_0;
sub ymm11_1 ymm11_1 ymm10_1;
sub ymm11_2 ymm11_2 ymm10_2;
sub ymm11_3 ymm11_3 ymm10_3;
sub ymm11_4 ymm11_4 ymm10_4;
sub ymm11_5 ymm11_5 ymm10_5;
sub ymm11_6 ymm11_6 ymm10_6;
sub ymm11_7 ymm11_7 ymm10_7;
sub ymm11_8 ymm11_8 ymm10_8;
sub ymm11_9 ymm11_9 ymm10_9;
sub ymm11_a ymm11_a ymm10_a;
sub ymm11_b ymm11_b ymm10_b;
sub ymm11_c ymm11_c ymm10_c;
sub ymm11_d ymm11_d ymm10_d;
sub ymm11_e ymm11_e ymm10_e;
sub ymm11_f ymm11_f ymm10_f;
(* vpaddw %ymm3,%ymm9,%ymm10                       #! PC = 0x555555557f25 *)
add ymm10_0 ymm9_0 ymm3_0;
add ymm10_1 ymm9_1 ymm3_1;
add ymm10_2 ymm9_2 ymm3_2;
add ymm10_3 ymm9_3 ymm3_3;
add ymm10_4 ymm9_4 ymm3_4;
add ymm10_5 ymm9_5 ymm3_5;
add ymm10_6 ymm9_6 ymm3_6;
add ymm10_7 ymm9_7 ymm3_7;
add ymm10_8 ymm9_8 ymm3_8;
add ymm10_9 ymm9_9 ymm3_9;
add ymm10_a ymm9_a ymm3_a;
add ymm10_b ymm9_b ymm3_b;
add ymm10_c ymm9_c ymm3_c;
add ymm10_d ymm9_d ymm3_d;
add ymm10_e ymm9_e ymm3_e;
add ymm10_f ymm9_f ymm3_f;
(* vpsubw %ymm3,%ymm9,%ymm3                        #! PC = 0x555555557f29 *)
sub ymm3_0 ymm9_0 ymm3_0;
sub ymm3_1 ymm9_1 ymm3_1;
sub ymm3_2 ymm9_2 ymm3_2;
sub ymm3_3 ymm9_3 ymm3_3;
sub ymm3_4 ymm9_4 ymm3_4;
sub ymm3_5 ymm9_5 ymm3_5;
sub ymm3_6 ymm9_6 ymm3_6;
sub ymm3_7 ymm9_7 ymm3_7;
sub ymm3_8 ymm9_8 ymm3_8;
sub ymm3_9 ymm9_9 ymm3_9;
sub ymm3_a ymm9_a ymm3_a;
sub ymm3_b ymm9_b ymm3_b;
sub ymm3_c ymm9_c ymm3_c;
sub ymm3_d ymm9_d ymm3_d;
sub ymm3_e ymm9_e ymm3_e;
sub ymm3_f ymm9_f ymm3_f;
(* vpaddw %ymm6,%ymm7,%ymm9                        #! PC = 0x555555557f2d *)
add ymm9_0 ymm7_0 ymm6_0;
add ymm9_1 ymm7_1 ymm6_1;
add ymm9_2 ymm7_2 ymm6_2;
add ymm9_3 ymm7_3 ymm6_3;
add ymm9_4 ymm7_4 ymm6_4;
add ymm9_5 ymm7_5 ymm6_5;
add ymm9_6 ymm7_6 ymm6_6;
add ymm9_7 ymm7_7 ymm6_7;
add ymm9_8 ymm7_8 ymm6_8;
add ymm9_9 ymm7_9 ymm6_9;
add ymm9_a ymm7_a ymm6_a;
add ymm9_b ymm7_b ymm6_b;
add ymm9_c ymm7_c ymm6_c;
add ymm9_d ymm7_d ymm6_d;
add ymm9_e ymm7_e ymm6_e;
add ymm9_f ymm7_f ymm6_f;
(* vpsubw %ymm6,%ymm7,%ymm6                        #! PC = 0x555555557f31 *)
sub ymm6_0 ymm7_0 ymm6_0;
sub ymm6_1 ymm7_1 ymm6_1;
sub ymm6_2 ymm7_2 ymm6_2;
sub ymm6_3 ymm7_3 ymm6_3;
sub ymm6_4 ymm7_4 ymm6_4;
sub ymm6_5 ymm7_5 ymm6_5;
sub ymm6_6 ymm7_6 ymm6_6;
sub ymm6_7 ymm7_7 ymm6_7;
sub ymm6_8 ymm7_8 ymm6_8;
sub ymm6_9 ymm7_9 ymm6_9;
sub ymm6_a ymm7_a ymm6_a;
sub ymm6_b ymm7_b ymm6_b;
sub ymm6_c ymm7_c ymm6_c;
sub ymm6_d ymm7_d ymm6_d;
sub ymm6_e ymm7_e ymm6_e;
sub ymm6_f ymm7_f ymm6_f;
(* vpaddw %ymm8,%ymm5,%ymm7                        #! PC = 0x555555557f35 *)
add ymm7_0 ymm5_0 ymm8_0;
add ymm7_1 ymm5_1 ymm8_1;
add ymm7_2 ymm5_2 ymm8_2;
add ymm7_3 ymm5_3 ymm8_3;
add ymm7_4 ymm5_4 ymm8_4;
add ymm7_5 ymm5_5 ymm8_5;
add ymm7_6 ymm5_6 ymm8_6;
add ymm7_7 ymm5_7 ymm8_7;
add ymm7_8 ymm5_8 ymm8_8;
add ymm7_9 ymm5_9 ymm8_9;
add ymm7_a ymm5_a ymm8_a;
add ymm7_b ymm5_b ymm8_b;
add ymm7_c ymm5_c ymm8_c;
add ymm7_d ymm5_d ymm8_d;
add ymm7_e ymm5_e ymm8_e;
add ymm7_f ymm5_f ymm8_f;
(* vpsubw %ymm8,%ymm5,%ymm8                        #! PC = 0x555555557f3a *)
sub ymm8_0 ymm5_0 ymm8_0;
sub ymm8_1 ymm5_1 ymm8_1;
sub ymm8_2 ymm5_2 ymm8_2;
sub ymm8_3 ymm5_3 ymm8_3;
sub ymm8_4 ymm5_4 ymm8_4;
sub ymm8_5 ymm5_5 ymm8_5;
sub ymm8_6 ymm5_6 ymm8_6;
sub ymm8_7 ymm5_7 ymm8_7;
sub ymm8_8 ymm5_8 ymm8_8;
sub ymm8_9 ymm5_9 ymm8_9;
sub ymm8_a ymm5_a ymm8_a;
sub ymm8_b ymm5_b ymm8_b;
sub ymm8_c ymm5_c ymm8_c;
sub ymm8_d ymm5_d ymm8_d;
sub ymm8_e ymm5_e ymm8_e;
sub ymm8_f ymm5_f ymm8_f;
(* vpaddw %ymm11,%ymm4,%ymm5                       #! PC = 0x555555557f3f *)
add ymm5_0 ymm4_0 ymm11_0;
add ymm5_1 ymm4_1 ymm11_1;
add ymm5_2 ymm4_2 ymm11_2;
add ymm5_3 ymm4_3 ymm11_3;
add ymm5_4 ymm4_4 ymm11_4;
add ymm5_5 ymm4_5 ymm11_5;
add ymm5_6 ymm4_6 ymm11_6;
add ymm5_7 ymm4_7 ymm11_7;
add ymm5_8 ymm4_8 ymm11_8;
add ymm5_9 ymm4_9 ymm11_9;
add ymm5_a ymm4_a ymm11_a;
add ymm5_b ymm4_b ymm11_b;
add ymm5_c ymm4_c ymm11_c;
add ymm5_d ymm4_d ymm11_d;
add ymm5_e ymm4_e ymm11_e;
add ymm5_f ymm4_f ymm11_f;
(* vpsubw %ymm11,%ymm4,%ymm11                      #! PC = 0x555555557f44 *)
sub ymm11_0 ymm4_0 ymm11_0;
sub ymm11_1 ymm4_1 ymm11_1;
sub ymm11_2 ymm4_2 ymm11_2;
sub ymm11_3 ymm4_3 ymm11_3;
sub ymm11_4 ymm4_4 ymm11_4;
sub ymm11_5 ymm4_5 ymm11_5;
sub ymm11_6 ymm4_6 ymm11_6;
sub ymm11_7 ymm4_7 ymm11_7;
sub ymm11_8 ymm4_8 ymm11_8;
sub ymm11_9 ymm4_9 ymm11_9;
sub ymm11_a ymm4_a ymm11_a;
sub ymm11_b ymm4_b ymm11_b;
sub ymm11_c ymm4_c ymm11_c;
sub ymm11_d ymm4_d ymm11_d;
sub ymm11_e ymm4_e ymm11_e;
sub ymm11_f ymm4_f ymm11_f;
(* vmovdqa %ymm10,0x100(%rdi)                      #! EA = L0x7fffffffd3e0; PC = 0x555555557f49 *)
mov L0x7fffffffd3e0 ymm10_0;
mov L0x7fffffffd3e2 ymm10_1;
mov L0x7fffffffd3e4 ymm10_2;
mov L0x7fffffffd3e6 ymm10_3;
mov L0x7fffffffd3e8 ymm10_4;
mov L0x7fffffffd3ea ymm10_5;
mov L0x7fffffffd3ec ymm10_6;
mov L0x7fffffffd3ee ymm10_7;
mov L0x7fffffffd3f0 ymm10_8;
mov L0x7fffffffd3f2 ymm10_9;
mov L0x7fffffffd3f4 ymm10_a;
mov L0x7fffffffd3f6 ymm10_b;
mov L0x7fffffffd3f8 ymm10_c;
mov L0x7fffffffd3fa ymm10_d;
mov L0x7fffffffd3fc ymm10_e;
mov L0x7fffffffd3fe ymm10_f;
(* vmovdqa %ymm3,0x120(%rdi)                       #! EA = L0x7fffffffd400; PC = 0x555555557f51 *)
mov L0x7fffffffd400 ymm3_0;
mov L0x7fffffffd402 ymm3_1;
mov L0x7fffffffd404 ymm3_2;
mov L0x7fffffffd406 ymm3_3;
mov L0x7fffffffd408 ymm3_4;
mov L0x7fffffffd40a ymm3_5;
mov L0x7fffffffd40c ymm3_6;
mov L0x7fffffffd40e ymm3_7;
mov L0x7fffffffd410 ymm3_8;
mov L0x7fffffffd412 ymm3_9;
mov L0x7fffffffd414 ymm3_a;
mov L0x7fffffffd416 ymm3_b;
mov L0x7fffffffd418 ymm3_c;
mov L0x7fffffffd41a ymm3_d;
mov L0x7fffffffd41c ymm3_e;
mov L0x7fffffffd41e ymm3_f;
(* vmovdqa %ymm9,0x140(%rdi)                       #! EA = L0x7fffffffd420; PC = 0x555555557f59 *)
mov L0x7fffffffd420 ymm9_0;
mov L0x7fffffffd422 ymm9_1;
mov L0x7fffffffd424 ymm9_2;
mov L0x7fffffffd426 ymm9_3;
mov L0x7fffffffd428 ymm9_4;
mov L0x7fffffffd42a ymm9_5;
mov L0x7fffffffd42c ymm9_6;
mov L0x7fffffffd42e ymm9_7;
mov L0x7fffffffd430 ymm9_8;
mov L0x7fffffffd432 ymm9_9;
mov L0x7fffffffd434 ymm9_a;
mov L0x7fffffffd436 ymm9_b;
mov L0x7fffffffd438 ymm9_c;
mov L0x7fffffffd43a ymm9_d;
mov L0x7fffffffd43c ymm9_e;
mov L0x7fffffffd43e ymm9_f;
(* vmovdqa %ymm6,0x160(%rdi)                       #! EA = L0x7fffffffd440; PC = 0x555555557f61 *)
mov L0x7fffffffd440 ymm6_0;
mov L0x7fffffffd442 ymm6_1;
mov L0x7fffffffd444 ymm6_2;
mov L0x7fffffffd446 ymm6_3;
mov L0x7fffffffd448 ymm6_4;
mov L0x7fffffffd44a ymm6_5;
mov L0x7fffffffd44c ymm6_6;
mov L0x7fffffffd44e ymm6_7;
mov L0x7fffffffd450 ymm6_8;
mov L0x7fffffffd452 ymm6_9;
mov L0x7fffffffd454 ymm6_a;
mov L0x7fffffffd456 ymm6_b;
mov L0x7fffffffd458 ymm6_c;
mov L0x7fffffffd45a ymm6_d;
mov L0x7fffffffd45c ymm6_e;
mov L0x7fffffffd45e ymm6_f;
(* vmovdqa %ymm7,0x180(%rdi)                       #! EA = L0x7fffffffd460; PC = 0x555555557f69 *)
mov L0x7fffffffd460 ymm7_0;
mov L0x7fffffffd462 ymm7_1;
mov L0x7fffffffd464 ymm7_2;
mov L0x7fffffffd466 ymm7_3;
mov L0x7fffffffd468 ymm7_4;
mov L0x7fffffffd46a ymm7_5;
mov L0x7fffffffd46c ymm7_6;
mov L0x7fffffffd46e ymm7_7;
mov L0x7fffffffd470 ymm7_8;
mov L0x7fffffffd472 ymm7_9;
mov L0x7fffffffd474 ymm7_a;
mov L0x7fffffffd476 ymm7_b;
mov L0x7fffffffd478 ymm7_c;
mov L0x7fffffffd47a ymm7_d;
mov L0x7fffffffd47c ymm7_e;
mov L0x7fffffffd47e ymm7_f;
(* vmovdqa %ymm8,0x1a0(%rdi)                       #! EA = L0x7fffffffd480; PC = 0x555555557f71 *)
mov L0x7fffffffd480 ymm8_0;
mov L0x7fffffffd482 ymm8_1;
mov L0x7fffffffd484 ymm8_2;
mov L0x7fffffffd486 ymm8_3;
mov L0x7fffffffd488 ymm8_4;
mov L0x7fffffffd48a ymm8_5;
mov L0x7fffffffd48c ymm8_6;
mov L0x7fffffffd48e ymm8_7;
mov L0x7fffffffd490 ymm8_8;
mov L0x7fffffffd492 ymm8_9;
mov L0x7fffffffd494 ymm8_a;
mov L0x7fffffffd496 ymm8_b;
mov L0x7fffffffd498 ymm8_c;
mov L0x7fffffffd49a ymm8_d;
mov L0x7fffffffd49c ymm8_e;
mov L0x7fffffffd49e ymm8_f;
(* vmovdqa %ymm5,0x1c0(%rdi)                       #! EA = L0x7fffffffd4a0; PC = 0x555555557f79 *)
mov L0x7fffffffd4a0 ymm5_0;
mov L0x7fffffffd4a2 ymm5_1;
mov L0x7fffffffd4a4 ymm5_2;
mov L0x7fffffffd4a6 ymm5_3;
mov L0x7fffffffd4a8 ymm5_4;
mov L0x7fffffffd4aa ymm5_5;
mov L0x7fffffffd4ac ymm5_6;
mov L0x7fffffffd4ae ymm5_7;
mov L0x7fffffffd4b0 ymm5_8;
mov L0x7fffffffd4b2 ymm5_9;
mov L0x7fffffffd4b4 ymm5_a;
mov L0x7fffffffd4b6 ymm5_b;
mov L0x7fffffffd4b8 ymm5_c;
mov L0x7fffffffd4ba ymm5_d;
mov L0x7fffffffd4bc ymm5_e;
mov L0x7fffffffd4be ymm5_f;
(* vmovdqa %ymm11,0x1e0(%rdi)                      #! EA = L0x7fffffffd4c0; PC = 0x555555557f81 *)
mov L0x7fffffffd4c0 ymm11_0;
mov L0x7fffffffd4c2 ymm11_1;
mov L0x7fffffffd4c4 ymm11_2;
mov L0x7fffffffd4c6 ymm11_3;
mov L0x7fffffffd4c8 ymm11_4;
mov L0x7fffffffd4ca ymm11_5;
mov L0x7fffffffd4cc ymm11_6;
mov L0x7fffffffd4ce ymm11_7;
mov L0x7fffffffd4d0 ymm11_8;
mov L0x7fffffffd4d2 ymm11_9;
mov L0x7fffffffd4d4 ymm11_a;
mov L0x7fffffffd4d6 ymm11_b;
mov L0x7fffffffd4d8 ymm11_c;
mov L0x7fffffffd4da ymm11_d;
mov L0x7fffffffd4dc ymm11_e;
mov L0x7fffffffd4de ymm11_f;


(**************** LEVELS 3-8, 1 *****************)


(**************** CUT 147,  6 *****************)

cut 
  and [
eqmod (inp_poly**2) (L0x7fffffffd3e0*x** 0+L0x7fffffffd3f0*x** 1)
      [10753, x**2 - 10000],
eqmod (inp_poly**2) (L0x7fffffffd400*x** 0+L0x7fffffffd410*x** 1)
      [10753, x**2 - 753],
eqmod (inp_poly**2) (L0x7fffffffd3e2*x** 0+L0x7fffffffd3f2*x** 1)
      [10753, x**2 - 3775],
eqmod (inp_poly**2) (L0x7fffffffd402*x** 0+L0x7fffffffd412*x** 1)
      [10753, x**2 - 6978],
eqmod (inp_poly**2) (L0x7fffffffd3e4*x** 0+L0x7fffffffd3f4*x** 1)
      [10753, x**2 - 5606],
eqmod (inp_poly**2) (L0x7fffffffd404*x** 0+L0x7fffffffd414*x** 1)
      [10753, x**2 - 5147],
eqmod (inp_poly**2) (L0x7fffffffd3e6*x** 0+L0x7fffffffd3f6*x** 1)
      [10753, x**2 - 7439],
eqmod (inp_poly**2) (L0x7fffffffd406*x** 0+L0x7fffffffd416*x** 1)
      [10753, x**2 - 3314],
eqmod (inp_poly**2) (L0x7fffffffd3e8*x** 0+L0x7fffffffd3f8*x** 1)
      [10753, x**2 - 10373],
eqmod (inp_poly**2) (L0x7fffffffd408*x** 0+L0x7fffffffd418*x** 1)
      [10753, x**2 - 380],
eqmod (inp_poly**2) (L0x7fffffffd3ea*x** 0+L0x7fffffffd3fa*x** 1)
      [10753, x**2 - 6846],
eqmod (inp_poly**2) (L0x7fffffffd40a*x** 0+L0x7fffffffd41a*x** 1)
      [10753, x**2 - 3907],
eqmod (inp_poly**2) (L0x7fffffffd3ec*x** 0+L0x7fffffffd3fc*x** 1)
      [10753, x**2 - 7056],
eqmod (inp_poly**2) (L0x7fffffffd40c*x** 0+L0x7fffffffd41c*x** 1)
      [10753, x**2 - 3697],
eqmod (inp_poly**2) (L0x7fffffffd3ee*x** 0+L0x7fffffffd3fe*x** 1)
      [10753, x**2 - 3954],
eqmod (inp_poly**2) (L0x7fffffffd40e*x** 0+L0x7fffffffd41e*x** 1)
      [10753, x**2 - 6799],
eqmod (inp_poly**2) (L0x7fffffffd420*x** 0+L0x7fffffffd430*x** 1)
      [10753, x**2 - 2031],
eqmod (inp_poly**2) (L0x7fffffffd440*x** 0+L0x7fffffffd450*x** 1)
      [10753, x**2 - 8722],
eqmod (inp_poly**2) (L0x7fffffffd422*x** 0+L0x7fffffffd432*x** 1)
      [10753, x**2 - 1385],
eqmod (inp_poly**2) (L0x7fffffffd442*x** 0+L0x7fffffffd452*x** 1)
      [10753, x**2 - 9368],
eqmod (inp_poly**2) (L0x7fffffffd424*x** 0+L0x7fffffffd434*x** 1)
      [10753, x**2 - 6771],
eqmod (inp_poly**2) (L0x7fffffffd444*x** 0+L0x7fffffffd454*x** 1)
      [10753, x**2 - 3982],
eqmod (inp_poly**2) (L0x7fffffffd426*x** 0+L0x7fffffffd436*x** 1)
      [10753, x**2 - 3712],
eqmod (inp_poly**2) (L0x7fffffffd446*x** 0+L0x7fffffffd456*x** 1)
      [10753, x**2 - 7041],
eqmod (inp_poly**2) (L0x7fffffffd428*x** 0+L0x7fffffffd438*x** 1)
      [10753, x**2 - 2353],
eqmod (inp_poly**2) (L0x7fffffffd448*x** 0+L0x7fffffffd458*x** 1)
      [10753, x**2 - 8400],
eqmod (inp_poly**2) (L0x7fffffffd42a*x** 0+L0x7fffffffd43a*x** 1)
      [10753, x**2 - 7582],
eqmod (inp_poly**2) (L0x7fffffffd44a*x** 0+L0x7fffffffd45a*x** 1)
      [10753, x**2 - 3171],
eqmod (inp_poly**2) (L0x7fffffffd42c*x** 0+L0x7fffffffd43c*x** 1)
      [10753, x**2 - 2603],
eqmod (inp_poly**2) (L0x7fffffffd44c*x** 0+L0x7fffffffd45c*x** 1)
      [10753, x**2 - 8150],
eqmod (inp_poly**2) (L0x7fffffffd42e*x** 0+L0x7fffffffd43e*x** 1)
      [10753, x**2 - 3644],
eqmod (inp_poly**2) (L0x7fffffffd44e*x** 0+L0x7fffffffd45e*x** 1)
      [10753, x**2 - 7109],
eqmod (inp_poly**2) (L0x7fffffffd460*x** 0+L0x7fffffffd470*x** 1)
      [10753, x**2 - 841],
eqmod (inp_poly**2) (L0x7fffffffd480*x** 0+L0x7fffffffd490*x** 1)
      [10753, x**2 - 9912],
eqmod (inp_poly**2) (L0x7fffffffd462*x** 0+L0x7fffffffd472*x** 1)
      [10753, x**2 - 9807],
eqmod (inp_poly**2) (L0x7fffffffd482*x** 0+L0x7fffffffd492*x** 1)
      [10753, x**2 - 946],
eqmod (inp_poly**2) (L0x7fffffffd464*x** 0+L0x7fffffffd474*x** 1)
      [10753, x**2 - 1136],
eqmod (inp_poly**2) (L0x7fffffffd484*x** 0+L0x7fffffffd494*x** 1)
      [10753, x**2 - 9617],
eqmod (inp_poly**2) (L0x7fffffffd466*x** 0+L0x7fffffffd476*x** 1)
      [10753, x**2 - 8171],
eqmod (inp_poly**2) (L0x7fffffffd486*x** 0+L0x7fffffffd496*x** 1)
      [10753, x**2 - 2582],
eqmod (inp_poly**2) (L0x7fffffffd468*x** 0+L0x7fffffffd478*x** 1)
      [10753, x**2 - 5194],
eqmod (inp_poly**2) (L0x7fffffffd488*x** 0+L0x7fffffffd498*x** 1)
      [10753, x**2 - 5559],
eqmod (inp_poly**2) (L0x7fffffffd46a*x** 0+L0x7fffffffd47a*x** 1)
      [10753, x**2 - 7391],
eqmod (inp_poly**2) (L0x7fffffffd48a*x** 0+L0x7fffffffd49a*x** 1)
      [10753, x**2 - 3362],
eqmod (inp_poly**2) (L0x7fffffffd46c*x** 0+L0x7fffffffd47c*x** 1)
      [10753, x**2 - 559],
eqmod (inp_poly**2) (L0x7fffffffd48c*x** 0+L0x7fffffffd49c*x** 1)
      [10753, x**2 - 10194],
eqmod (inp_poly**2) (L0x7fffffffd46e*x** 0+L0x7fffffffd47e*x** 1)
      [10753, x**2 - 6851],
eqmod (inp_poly**2) (L0x7fffffffd48e*x** 0+L0x7fffffffd49e*x** 1)
      [10753, x**2 - 3902],
eqmod (inp_poly**2) (L0x7fffffffd4a0*x** 0+L0x7fffffffd4b0*x** 1)
      [10753, x**2 - 2744],
eqmod (inp_poly**2) (L0x7fffffffd4c0*x** 0+L0x7fffffffd4d0*x** 1)
      [10753, x**2 - 8009],
eqmod (inp_poly**2) (L0x7fffffffd4a2*x** 0+L0x7fffffffd4b2*x** 1)
      [10753, x**2 - 5122],
eqmod (inp_poly**2) (L0x7fffffffd4c2*x** 0+L0x7fffffffd4d2*x** 1)
      [10753, x**2 - 5631],
eqmod (inp_poly**2) (L0x7fffffffd4a4*x** 0+L0x7fffffffd4b4*x** 1)
      [10753, x**2 - 9831],
eqmod (inp_poly**2) (L0x7fffffffd4c4*x** 0+L0x7fffffffd4d4*x** 1)
      [10753, x**2 - 922],
eqmod (inp_poly**2) (L0x7fffffffd4a6*x** 0+L0x7fffffffd4b6*x** 1)
      [10753, x**2 - 9706],
eqmod (inp_poly**2) (L0x7fffffffd4c6*x** 0+L0x7fffffffd4d6*x** 1)
      [10753, x**2 - 1047],
eqmod (inp_poly**2) (L0x7fffffffd4a8*x** 0+L0x7fffffffd4b8*x** 1)
      [10753, x**2 - 4455],
eqmod (inp_poly**2) (L0x7fffffffd4c8*x** 0+L0x7fffffffd4d8*x** 1)
      [10753, x**2 - 6298],
eqmod (inp_poly**2) (L0x7fffffffd4aa*x** 0+L0x7fffffffd4ba*x** 1)
      [10753, x**2 - 2085],
eqmod (inp_poly**2) (L0x7fffffffd4ca*x** 0+L0x7fffffffd4da*x** 1)
      [10753, x**2 - 8668],
eqmod (inp_poly**2) (L0x7fffffffd4ac*x** 0+L0x7fffffffd4bc*x** 1)
      [10753, x**2 - 10659],
eqmod (inp_poly**2) (L0x7fffffffd4cc*x** 0+L0x7fffffffd4dc*x** 1)
      [10753, x**2 - 94],
eqmod (inp_poly**2) (L0x7fffffffd4ae*x** 0+L0x7fffffffd4be*x** 1)
      [10753, x**2 - 2599],
eqmod (inp_poly**2) (L0x7fffffffd4ce*x** 0+L0x7fffffffd4de*x** 1)
      [10753, x**2 - 8154]
  ] prove with [ precondition, cuts [ 5, 23, 41, 59, 77, 95, 113, 131] ] && and [
(-24528)@16<=s L0x7fffffffd3e0,L0x7fffffffd3e0<=s 24528@16,
(-24528)@16<=s L0x7fffffffd3f0,L0x7fffffffd3f0<=s 24528@16,
(-24528)@16<=s L0x7fffffffd400,L0x7fffffffd400<=s 24528@16,
(-24528)@16<=s L0x7fffffffd410,L0x7fffffffd410<=s 24528@16,
(-24801)@16<=s L0x7fffffffd3e2,L0x7fffffffd3e2<=s 24801@16,
(-24801)@16<=s L0x7fffffffd3f2,L0x7fffffffd3f2<=s 24801@16,
(-24801)@16<=s L0x7fffffffd402,L0x7fffffffd402<=s 24801@16,
(-24801)@16<=s L0x7fffffffd412,L0x7fffffffd412<=s 24801@16,
(-23858)@16<=s L0x7fffffffd3e4,L0x7fffffffd3e4<=s 23858@16,
(-23858)@16<=s L0x7fffffffd3f4,L0x7fffffffd3f4<=s 23858@16,
(-23858)@16<=s L0x7fffffffd404,L0x7fffffffd404<=s 23858@16,
(-23858)@16<=s L0x7fffffffd414,L0x7fffffffd414<=s 23858@16,
(-23824)@16<=s L0x7fffffffd3e6,L0x7fffffffd3e6<=s 23824@16,
(-23824)@16<=s L0x7fffffffd3f6,L0x7fffffffd3f6<=s 23824@16,
(-23824)@16<=s L0x7fffffffd406,L0x7fffffffd406<=s 23824@16,
(-23824)@16<=s L0x7fffffffd416,L0x7fffffffd416<=s 23824@16,
(-22916)@16<=s L0x7fffffffd3e8,L0x7fffffffd3e8<=s 22916@16,
(-22916)@16<=s L0x7fffffffd3f8,L0x7fffffffd3f8<=s 22916@16,
(-22916)@16<=s L0x7fffffffd408,L0x7fffffffd408<=s 22916@16,
(-22916)@16<=s L0x7fffffffd418,L0x7fffffffd418<=s 22916@16,
(-23187)@16<=s L0x7fffffffd3ea,L0x7fffffffd3ea<=s 23187@16,
(-23187)@16<=s L0x7fffffffd3fa,L0x7fffffffd3fa<=s 23187@16,
(-23187)@16<=s L0x7fffffffd40a,L0x7fffffffd40a<=s 23187@16,
(-23187)@16<=s L0x7fffffffd41a,L0x7fffffffd41a<=s 23187@16,
(-22710)@16<=s L0x7fffffffd3ec,L0x7fffffffd3ec<=s 22710@16,
(-22710)@16<=s L0x7fffffffd3fc,L0x7fffffffd3fc<=s 22710@16,
(-22710)@16<=s L0x7fffffffd40c,L0x7fffffffd40c<=s 22710@16,
(-22710)@16<=s L0x7fffffffd41c,L0x7fffffffd41c<=s 22710@16,
(-23632)@16<=s L0x7fffffffd3ee,L0x7fffffffd3ee<=s 23632@16,
(-23632)@16<=s L0x7fffffffd3fe,L0x7fffffffd3fe<=s 23632@16,
(-23632)@16<=s L0x7fffffffd40e,L0x7fffffffd40e<=s 23632@16,
(-23632)@16<=s L0x7fffffffd41e,L0x7fffffffd41e<=s 23632@16,
(-24981)@16<=s L0x7fffffffd420,L0x7fffffffd420<=s 24981@16,
(-24981)@16<=s L0x7fffffffd430,L0x7fffffffd430<=s 24981@16,
(-24981)@16<=s L0x7fffffffd440,L0x7fffffffd440<=s 24981@16,
(-24981)@16<=s L0x7fffffffd450,L0x7fffffffd450<=s 24981@16,
(-24482)@16<=s L0x7fffffffd422,L0x7fffffffd422<=s 24482@16,
(-24482)@16<=s L0x7fffffffd432,L0x7fffffffd432<=s 24482@16,
(-24482)@16<=s L0x7fffffffd442,L0x7fffffffd442<=s 24482@16,
(-24482)@16<=s L0x7fffffffd452,L0x7fffffffd452<=s 24482@16,
(-23885)@16<=s L0x7fffffffd424,L0x7fffffffd424<=s 23885@16,
(-23885)@16<=s L0x7fffffffd434,L0x7fffffffd434<=s 23885@16,
(-23885)@16<=s L0x7fffffffd444,L0x7fffffffd444<=s 23885@16,
(-23885)@16<=s L0x7fffffffd454,L0x7fffffffd454<=s 23885@16,
(-25070)@16<=s L0x7fffffffd426,L0x7fffffffd426<=s 25070@16,
(-25070)@16<=s L0x7fffffffd436,L0x7fffffffd436<=s 25070@16,
(-25070)@16<=s L0x7fffffffd446,L0x7fffffffd446<=s 25070@16,
(-25070)@16<=s L0x7fffffffd456,L0x7fffffffd456<=s 25070@16,
(-23787)@16<=s L0x7fffffffd428,L0x7fffffffd428<=s 23787@16,
(-23787)@16<=s L0x7fffffffd438,L0x7fffffffd438<=s 23787@16,
(-23787)@16<=s L0x7fffffffd448,L0x7fffffffd448<=s 23787@16,
(-23787)@16<=s L0x7fffffffd458,L0x7fffffffd458<=s 23787@16,
(-23686)@16<=s L0x7fffffffd42a,L0x7fffffffd42a<=s 23686@16,
(-23686)@16<=s L0x7fffffffd43a,L0x7fffffffd43a<=s 23686@16,
(-23686)@16<=s L0x7fffffffd44a,L0x7fffffffd44a<=s 23686@16,
(-23686)@16<=s L0x7fffffffd45a,L0x7fffffffd45a<=s 23686@16,
(-24621)@16<=s L0x7fffffffd42c,L0x7fffffffd42c<=s 24621@16,
(-24621)@16<=s L0x7fffffffd43c,L0x7fffffffd43c<=s 24621@16,
(-24621)@16<=s L0x7fffffffd44c,L0x7fffffffd44c<=s 24621@16,
(-24621)@16<=s L0x7fffffffd45c,L0x7fffffffd45c<=s 24621@16,
(-23415)@16<=s L0x7fffffffd42e,L0x7fffffffd42e<=s 23415@16,
(-23415)@16<=s L0x7fffffffd43e,L0x7fffffffd43e<=s 23415@16,
(-23415)@16<=s L0x7fffffffd44e,L0x7fffffffd44e<=s 23415@16,
(-23415)@16<=s L0x7fffffffd45e,L0x7fffffffd45e<=s 23415@16,
(-23255)@16<=s L0x7fffffffd460,L0x7fffffffd460<=s 23255@16,
(-23255)@16<=s L0x7fffffffd470,L0x7fffffffd470<=s 23255@16,
(-23255)@16<=s L0x7fffffffd480,L0x7fffffffd480<=s 23255@16,
(-23255)@16<=s L0x7fffffffd490,L0x7fffffffd490<=s 23255@16,
(-23413)@16<=s L0x7fffffffd462,L0x7fffffffd462<=s 23413@16,
(-23413)@16<=s L0x7fffffffd472,L0x7fffffffd472<=s 23413@16,
(-23413)@16<=s L0x7fffffffd482,L0x7fffffffd482<=s 23413@16,
(-23413)@16<=s L0x7fffffffd492,L0x7fffffffd492<=s 23413@16,
(-23347)@16<=s L0x7fffffffd464,L0x7fffffffd464<=s 23347@16,
(-23347)@16<=s L0x7fffffffd474,L0x7fffffffd474<=s 23347@16,
(-23347)@16<=s L0x7fffffffd484,L0x7fffffffd484<=s 23347@16,
(-23347)@16<=s L0x7fffffffd494,L0x7fffffffd494<=s 23347@16,
(-23334)@16<=s L0x7fffffffd466,L0x7fffffffd466<=s 23334@16,
(-23334)@16<=s L0x7fffffffd476,L0x7fffffffd476<=s 23334@16,
(-23334)@16<=s L0x7fffffffd486,L0x7fffffffd486<=s 23334@16,
(-23334)@16<=s L0x7fffffffd496,L0x7fffffffd496<=s 23334@16,
(-25056)@16<=s L0x7fffffffd468,L0x7fffffffd468<=s 25056@16,
(-25056)@16<=s L0x7fffffffd478,L0x7fffffffd478<=s 25056@16,
(-25056)@16<=s L0x7fffffffd488,L0x7fffffffd488<=s 25056@16,
(-25056)@16<=s L0x7fffffffd498,L0x7fffffffd498<=s 25056@16,
(-25090)@16<=s L0x7fffffffd46a,L0x7fffffffd46a<=s 25090@16,
(-25090)@16<=s L0x7fffffffd47a,L0x7fffffffd47a<=s 25090@16,
(-25090)@16<=s L0x7fffffffd48a,L0x7fffffffd48a<=s 25090@16,
(-25090)@16<=s L0x7fffffffd49a,L0x7fffffffd49a<=s 25090@16,
(-23789)@16<=s L0x7fffffffd46c,L0x7fffffffd46c<=s 23789@16,
(-23789)@16<=s L0x7fffffffd47c,L0x7fffffffd47c<=s 23789@16,
(-23789)@16<=s L0x7fffffffd48c,L0x7fffffffd48c<=s 23789@16,
(-23789)@16<=s L0x7fffffffd49c,L0x7fffffffd49c<=s 23789@16,
(-24760)@16<=s L0x7fffffffd46e,L0x7fffffffd46e<=s 24760@16,
(-24760)@16<=s L0x7fffffffd47e,L0x7fffffffd47e<=s 24760@16,
(-24760)@16<=s L0x7fffffffd48e,L0x7fffffffd48e<=s 24760@16,
(-24760)@16<=s L0x7fffffffd49e,L0x7fffffffd49e<=s 24760@16,
(-24451)@16<=s L0x7fffffffd4a0,L0x7fffffffd4a0<=s 24451@16,
(-24451)@16<=s L0x7fffffffd4b0,L0x7fffffffd4b0<=s 24451@16,
(-24451)@16<=s L0x7fffffffd4c0,L0x7fffffffd4c0<=s 24451@16,
(-24451)@16<=s L0x7fffffffd4d0,L0x7fffffffd4d0<=s 24451@16,
(-24047)@16<=s L0x7fffffffd4a2,L0x7fffffffd4a2<=s 24047@16,
(-24047)@16<=s L0x7fffffffd4b2,L0x7fffffffd4b2<=s 24047@16,
(-24047)@16<=s L0x7fffffffd4c2,L0x7fffffffd4c2<=s 24047@16,
(-24047)@16<=s L0x7fffffffd4d2,L0x7fffffffd4d2<=s 24047@16,
(-24776)@16<=s L0x7fffffffd4a4,L0x7fffffffd4a4<=s 24776@16,
(-24776)@16<=s L0x7fffffffd4b4,L0x7fffffffd4b4<=s 24776@16,
(-24776)@16<=s L0x7fffffffd4c4,L0x7fffffffd4c4<=s 24776@16,
(-24776)@16<=s L0x7fffffffd4d4,L0x7fffffffd4d4<=s 24776@16,
(-24292)@16<=s L0x7fffffffd4a6,L0x7fffffffd4a6<=s 24292@16,
(-24292)@16<=s L0x7fffffffd4b6,L0x7fffffffd4b6<=s 24292@16,
(-24292)@16<=s L0x7fffffffd4c6,L0x7fffffffd4c6<=s 24292@16,
(-24292)@16<=s L0x7fffffffd4d6,L0x7fffffffd4d6<=s 24292@16,
(-24368)@16<=s L0x7fffffffd4a8,L0x7fffffffd4a8<=s 24368@16,
(-24368)@16<=s L0x7fffffffd4b8,L0x7fffffffd4b8<=s 24368@16,
(-24368)@16<=s L0x7fffffffd4c8,L0x7fffffffd4c8<=s 24368@16,
(-24368)@16<=s L0x7fffffffd4d8,L0x7fffffffd4d8<=s 24368@16,
(-24801)@16<=s L0x7fffffffd4aa,L0x7fffffffd4aa<=s 24801@16,
(-24801)@16<=s L0x7fffffffd4ba,L0x7fffffffd4ba<=s 24801@16,
(-24801)@16<=s L0x7fffffffd4ca,L0x7fffffffd4ca<=s 24801@16,
(-24801)@16<=s L0x7fffffffd4da,L0x7fffffffd4da<=s 24801@16,
(-24470)@16<=s L0x7fffffffd4ac,L0x7fffffffd4ac<=s 24470@16,
(-24470)@16<=s L0x7fffffffd4bc,L0x7fffffffd4bc<=s 24470@16,
(-24470)@16<=s L0x7fffffffd4cc,L0x7fffffffd4cc<=s 24470@16,
(-24470)@16<=s L0x7fffffffd4dc,L0x7fffffffd4dc<=s 24470@16,
(-24317)@16<=s L0x7fffffffd4ae,L0x7fffffffd4ae<=s 24317@16,
(-24317)@16<=s L0x7fffffffd4be,L0x7fffffffd4be<=s 24317@16,
(-24317)@16<=s L0x7fffffffd4ce,L0x7fffffffd4ce<=s 24317@16,
(-24317)@16<=s L0x7fffffffd4de,L0x7fffffffd4de<=s 24317@16
];


(* === be ready for next level and offset === *)

(**************** CUT 148,  7 *****************)

cut 
true && and [
( -9479)@16<=s L0x7fffffffd4e0,L0x7fffffffd4e0<s  9479@16,
( -9479)@16<=s L0x7fffffffd4e2,L0x7fffffffd4e2<s  9479@16,
( -9479)@16<=s L0x7fffffffd4e4,L0x7fffffffd4e4<s  9479@16,
( -9479)@16<=s L0x7fffffffd4e6,L0x7fffffffd4e6<s  9479@16,
( -9479)@16<=s L0x7fffffffd4e8,L0x7fffffffd4e8<s  9479@16,
( -9479)@16<=s L0x7fffffffd4ea,L0x7fffffffd4ea<s  9479@16,
( -9479)@16<=s L0x7fffffffd4ec,L0x7fffffffd4ec<s  9479@16,
( -9479)@16<=s L0x7fffffffd4ee,L0x7fffffffd4ee<s  9479@16,
( -9479)@16<=s L0x7fffffffd4f0,L0x7fffffffd4f0<s  9479@16,
( -9479)@16<=s L0x7fffffffd4f2,L0x7fffffffd4f2<s  9479@16,
( -9479)@16<=s L0x7fffffffd4f4,L0x7fffffffd4f4<s  9479@16,
( -9479)@16<=s L0x7fffffffd4f6,L0x7fffffffd4f6<s  9479@16,
( -9479)@16<=s L0x7fffffffd4f8,L0x7fffffffd4f8<s  9479@16,
( -9479)@16<=s L0x7fffffffd4fa,L0x7fffffffd4fa<s  9479@16,
( -9479)@16<=s L0x7fffffffd4fc,L0x7fffffffd4fc<s  9479@16,
( -9479)@16<=s L0x7fffffffd4fe,L0x7fffffffd4fe<s  9479@16,
( -9479)@16<=s L0x7fffffffd500,L0x7fffffffd500<s  9479@16,
( -9479)@16<=s L0x7fffffffd502,L0x7fffffffd502<s  9479@16,
( -9479)@16<=s L0x7fffffffd504,L0x7fffffffd504<s  9479@16,
( -9479)@16<=s L0x7fffffffd506,L0x7fffffffd506<s  9479@16,
( -9479)@16<=s L0x7fffffffd508,L0x7fffffffd508<s  9479@16,
( -9479)@16<=s L0x7fffffffd50a,L0x7fffffffd50a<s  9479@16,
( -9479)@16<=s L0x7fffffffd50c,L0x7fffffffd50c<s  9479@16,
( -9479)@16<=s L0x7fffffffd50e,L0x7fffffffd50e<s  9479@16,
( -9479)@16<=s L0x7fffffffd510,L0x7fffffffd510<s  9479@16,
( -9479)@16<=s L0x7fffffffd512,L0x7fffffffd512<s  9479@16,
( -9479)@16<=s L0x7fffffffd514,L0x7fffffffd514<s  9479@16,
( -9479)@16<=s L0x7fffffffd516,L0x7fffffffd516<s  9479@16,
( -9479)@16<=s L0x7fffffffd518,L0x7fffffffd518<s  9479@16,
( -9479)@16<=s L0x7fffffffd51a,L0x7fffffffd51a<s  9479@16,
( -9479)@16<=s L0x7fffffffd51c,L0x7fffffffd51c<s  9479@16,
( -9479)@16<=s L0x7fffffffd51e,L0x7fffffffd51e<s  9479@16,
( -9479)@16<=s L0x7fffffffd520,L0x7fffffffd520<s  9479@16,
( -9479)@16<=s L0x7fffffffd522,L0x7fffffffd522<s  9479@16,
( -9479)@16<=s L0x7fffffffd524,L0x7fffffffd524<s  9479@16,
( -9479)@16<=s L0x7fffffffd526,L0x7fffffffd526<s  9479@16,
( -9479)@16<=s L0x7fffffffd528,L0x7fffffffd528<s  9479@16,
( -9479)@16<=s L0x7fffffffd52a,L0x7fffffffd52a<s  9479@16,
( -9479)@16<=s L0x7fffffffd52c,L0x7fffffffd52c<s  9479@16,
( -9479)@16<=s L0x7fffffffd52e,L0x7fffffffd52e<s  9479@16,
( -9479)@16<=s L0x7fffffffd530,L0x7fffffffd530<s  9479@16,
( -9479)@16<=s L0x7fffffffd532,L0x7fffffffd532<s  9479@16,
( -9479)@16<=s L0x7fffffffd534,L0x7fffffffd534<s  9479@16,
( -9479)@16<=s L0x7fffffffd536,L0x7fffffffd536<s  9479@16,
( -9479)@16<=s L0x7fffffffd538,L0x7fffffffd538<s  9479@16,
( -9479)@16<=s L0x7fffffffd53a,L0x7fffffffd53a<s  9479@16,
( -9479)@16<=s L0x7fffffffd53c,L0x7fffffffd53c<s  9479@16,
( -9479)@16<=s L0x7fffffffd53e,L0x7fffffffd53e<s  9479@16,
( -9479)@16<=s L0x7fffffffd540,L0x7fffffffd540<s  9479@16,
( -9479)@16<=s L0x7fffffffd542,L0x7fffffffd542<s  9479@16,
( -9479)@16<=s L0x7fffffffd544,L0x7fffffffd544<s  9479@16,
( -9479)@16<=s L0x7fffffffd546,L0x7fffffffd546<s  9479@16,
( -9479)@16<=s L0x7fffffffd548,L0x7fffffffd548<s  9479@16,
( -9479)@16<=s L0x7fffffffd54a,L0x7fffffffd54a<s  9479@16,
( -9479)@16<=s L0x7fffffffd54c,L0x7fffffffd54c<s  9479@16,
( -9479)@16<=s L0x7fffffffd54e,L0x7fffffffd54e<s  9479@16,
( -9479)@16<=s L0x7fffffffd550,L0x7fffffffd550<s  9479@16,
( -9479)@16<=s L0x7fffffffd552,L0x7fffffffd552<s  9479@16,
( -9479)@16<=s L0x7fffffffd554,L0x7fffffffd554<s  9479@16,
( -9479)@16<=s L0x7fffffffd556,L0x7fffffffd556<s  9479@16,
( -9479)@16<=s L0x7fffffffd558,L0x7fffffffd558<s  9479@16,
( -9479)@16<=s L0x7fffffffd55a,L0x7fffffffd55a<s  9479@16,
( -9479)@16<=s L0x7fffffffd55c,L0x7fffffffd55c<s  9479@16,
( -9479)@16<=s L0x7fffffffd55e,L0x7fffffffd55e<s  9479@16,
( -9479)@16<=s L0x7fffffffd560,L0x7fffffffd560<s  9479@16,
( -9479)@16<=s L0x7fffffffd562,L0x7fffffffd562<s  9479@16,
( -9479)@16<=s L0x7fffffffd564,L0x7fffffffd564<s  9479@16,
( -9479)@16<=s L0x7fffffffd566,L0x7fffffffd566<s  9479@16,
( -9479)@16<=s L0x7fffffffd568,L0x7fffffffd568<s  9479@16,
( -9479)@16<=s L0x7fffffffd56a,L0x7fffffffd56a<s  9479@16,
( -9479)@16<=s L0x7fffffffd56c,L0x7fffffffd56c<s  9479@16,
( -9479)@16<=s L0x7fffffffd56e,L0x7fffffffd56e<s  9479@16,
( -9479)@16<=s L0x7fffffffd570,L0x7fffffffd570<s  9479@16,
( -9479)@16<=s L0x7fffffffd572,L0x7fffffffd572<s  9479@16,
( -9479)@16<=s L0x7fffffffd574,L0x7fffffffd574<s  9479@16,
( -9479)@16<=s L0x7fffffffd576,L0x7fffffffd576<s  9479@16,
( -9479)@16<=s L0x7fffffffd578,L0x7fffffffd578<s  9479@16,
( -9479)@16<=s L0x7fffffffd57a,L0x7fffffffd57a<s  9479@16,
( -9479)@16<=s L0x7fffffffd57c,L0x7fffffffd57c<s  9479@16,
( -9479)@16<=s L0x7fffffffd57e,L0x7fffffffd57e<s  9479@16,
( -9479)@16<=s L0x7fffffffd580,L0x7fffffffd580<s  9479@16,
( -9479)@16<=s L0x7fffffffd582,L0x7fffffffd582<s  9479@16,
( -9479)@16<=s L0x7fffffffd584,L0x7fffffffd584<s  9479@16,
( -9479)@16<=s L0x7fffffffd586,L0x7fffffffd586<s  9479@16,
( -9479)@16<=s L0x7fffffffd588,L0x7fffffffd588<s  9479@16,
( -9479)@16<=s L0x7fffffffd58a,L0x7fffffffd58a<s  9479@16,
( -9479)@16<=s L0x7fffffffd58c,L0x7fffffffd58c<s  9479@16,
( -9479)@16<=s L0x7fffffffd58e,L0x7fffffffd58e<s  9479@16,
( -9479)@16<=s L0x7fffffffd590,L0x7fffffffd590<s  9479@16,
( -9479)@16<=s L0x7fffffffd592,L0x7fffffffd592<s  9479@16,
( -9479)@16<=s L0x7fffffffd594,L0x7fffffffd594<s  9479@16,
( -9479)@16<=s L0x7fffffffd596,L0x7fffffffd596<s  9479@16,
( -9479)@16<=s L0x7fffffffd598,L0x7fffffffd598<s  9479@16,
( -9479)@16<=s L0x7fffffffd59a,L0x7fffffffd59a<s  9479@16,
( -9479)@16<=s L0x7fffffffd59c,L0x7fffffffd59c<s  9479@16,
( -9479)@16<=s L0x7fffffffd59e,L0x7fffffffd59e<s  9479@16,
( -9479)@16<=s L0x7fffffffd5a0,L0x7fffffffd5a0<s  9479@16,
( -9479)@16<=s L0x7fffffffd5a2,L0x7fffffffd5a2<s  9479@16,
( -9479)@16<=s L0x7fffffffd5a4,L0x7fffffffd5a4<s  9479@16,
( -9479)@16<=s L0x7fffffffd5a6,L0x7fffffffd5a6<s  9479@16,
( -9479)@16<=s L0x7fffffffd5a8,L0x7fffffffd5a8<s  9479@16,
( -9479)@16<=s L0x7fffffffd5aa,L0x7fffffffd5aa<s  9479@16,
( -9479)@16<=s L0x7fffffffd5ac,L0x7fffffffd5ac<s  9479@16,
( -9479)@16<=s L0x7fffffffd5ae,L0x7fffffffd5ae<s  9479@16,
( -9479)@16<=s L0x7fffffffd5b0,L0x7fffffffd5b0<s  9479@16,
( -9479)@16<=s L0x7fffffffd5b2,L0x7fffffffd5b2<s  9479@16,
( -9479)@16<=s L0x7fffffffd5b4,L0x7fffffffd5b4<s  9479@16,
( -9479)@16<=s L0x7fffffffd5b6,L0x7fffffffd5b6<s  9479@16,
( -9479)@16<=s L0x7fffffffd5b8,L0x7fffffffd5b8<s  9479@16,
( -9479)@16<=s L0x7fffffffd5ba,L0x7fffffffd5ba<s  9479@16,
( -9479)@16<=s L0x7fffffffd5bc,L0x7fffffffd5bc<s  9479@16,
( -9479)@16<=s L0x7fffffffd5be,L0x7fffffffd5be<s  9479@16,
( -9479)@16<=s L0x7fffffffd5c0,L0x7fffffffd5c0<s  9479@16,
( -9479)@16<=s L0x7fffffffd5c2,L0x7fffffffd5c2<s  9479@16,
( -9479)@16<=s L0x7fffffffd5c4,L0x7fffffffd5c4<s  9479@16,
( -9479)@16<=s L0x7fffffffd5c6,L0x7fffffffd5c6<s  9479@16,
( -9479)@16<=s L0x7fffffffd5c8,L0x7fffffffd5c8<s  9479@16,
( -9479)@16<=s L0x7fffffffd5ca,L0x7fffffffd5ca<s  9479@16,
( -9479)@16<=s L0x7fffffffd5cc,L0x7fffffffd5cc<s  9479@16,
( -9479)@16<=s L0x7fffffffd5ce,L0x7fffffffd5ce<s  9479@16,
( -9479)@16<=s L0x7fffffffd5d0,L0x7fffffffd5d0<s  9479@16,
( -9479)@16<=s L0x7fffffffd5d2,L0x7fffffffd5d2<s  9479@16,
( -9479)@16<=s L0x7fffffffd5d4,L0x7fffffffd5d4<s  9479@16,
( -9479)@16<=s L0x7fffffffd5d6,L0x7fffffffd5d6<s  9479@16,
( -9479)@16<=s L0x7fffffffd5d8,L0x7fffffffd5d8<s  9479@16,
( -9474)@16<=s L0x7fffffffd5da,L0x7fffffffd5da<s  9474@16,
( -9474)@16<=s L0x7fffffffd5dc,L0x7fffffffd5dc<s  9474@16,
( -9474)@16<=s L0x7fffffffd5de,L0x7fffffffd5de<s  9474@16
] prove with [ cuts [ 0 ] ];



(* vmovdqa 0x200(%rdi),%ymm4                       #! EA = L0x7fffffffd4e0; Value = 0x0000000100000000; PC = 0x555555557f89 *)
mov ymm4_0 L0x7fffffffd4e0;
mov ymm4_1 L0x7fffffffd4e2;
mov ymm4_2 L0x7fffffffd4e4;
mov ymm4_3 L0x7fffffffd4e6;
mov ymm4_4 L0x7fffffffd4e8;
mov ymm4_5 L0x7fffffffd4ea;
mov ymm4_6 L0x7fffffffd4ec;
mov ymm4_7 L0x7fffffffd4ee;
mov ymm4_8 L0x7fffffffd4f0;
mov ymm4_9 L0x7fffffffd4f2;
mov ymm4_a L0x7fffffffd4f4;
mov ymm4_b L0x7fffffffd4f6;
mov ymm4_c L0x7fffffffd4f8;
mov ymm4_d L0x7fffffffd4fa;
mov ymm4_e L0x7fffffffd4fc;
mov ymm4_f L0x7fffffffd4fe;
(* vmovdqa 0x220(%rdi),%ymm5                       #! EA = L0x7fffffffd500; Value = 0x0000000000000000; PC = 0x555555557f91 *)
mov ymm5_0 L0x7fffffffd500;
mov ymm5_1 L0x7fffffffd502;
mov ymm5_2 L0x7fffffffd504;
mov ymm5_3 L0x7fffffffd506;
mov ymm5_4 L0x7fffffffd508;
mov ymm5_5 L0x7fffffffd50a;
mov ymm5_6 L0x7fffffffd50c;
mov ymm5_7 L0x7fffffffd50e;
mov ymm5_8 L0x7fffffffd510;
mov ymm5_9 L0x7fffffffd512;
mov ymm5_a L0x7fffffffd514;
mov ymm5_b L0x7fffffffd516;
mov ymm5_c L0x7fffffffd518;
mov ymm5_d L0x7fffffffd51a;
mov ymm5_e L0x7fffffffd51c;
mov ymm5_f L0x7fffffffd51e;
(* vmovdqa 0x240(%rdi),%ymm6                       #! EA = L0x7fffffffd520; Value = 0x0000000000000000; PC = 0x555555557f99 *)
mov ymm6_0 L0x7fffffffd520;
mov ymm6_1 L0x7fffffffd522;
mov ymm6_2 L0x7fffffffd524;
mov ymm6_3 L0x7fffffffd526;
mov ymm6_4 L0x7fffffffd528;
mov ymm6_5 L0x7fffffffd52a;
mov ymm6_6 L0x7fffffffd52c;
mov ymm6_7 L0x7fffffffd52e;
mov ymm6_8 L0x7fffffffd530;
mov ymm6_9 L0x7fffffffd532;
mov ymm6_a L0x7fffffffd534;
mov ymm6_b L0x7fffffffd536;
mov ymm6_c L0x7fffffffd538;
mov ymm6_d L0x7fffffffd53a;
mov ymm6_e L0x7fffffffd53c;
mov ymm6_f L0x7fffffffd53e;
(* vmovdqa 0x260(%rdi),%ymm7                       #! EA = L0x7fffffffd540; Value = 0x0000000000000000; PC = 0x555555557fa1 *)
mov ymm7_0 L0x7fffffffd540;
mov ymm7_1 L0x7fffffffd542;
mov ymm7_2 L0x7fffffffd544;
mov ymm7_3 L0x7fffffffd546;
mov ymm7_4 L0x7fffffffd548;
mov ymm7_5 L0x7fffffffd54a;
mov ymm7_6 L0x7fffffffd54c;
mov ymm7_7 L0x7fffffffd54e;
mov ymm7_8 L0x7fffffffd550;
mov ymm7_9 L0x7fffffffd552;
mov ymm7_a L0x7fffffffd554;
mov ymm7_b L0x7fffffffd556;
mov ymm7_c L0x7fffffffd558;
mov ymm7_d L0x7fffffffd55a;
mov ymm7_e L0x7fffffffd55c;
mov ymm7_f L0x7fffffffd55e;
(* vmovdqa 0x280(%rdi),%ymm8                       #! EA = L0x7fffffffd560; Value = 0x0000000000000000; PC = 0x555555557fa9 *)
mov ymm8_0 L0x7fffffffd560;
mov ymm8_1 L0x7fffffffd562;
mov ymm8_2 L0x7fffffffd564;
mov ymm8_3 L0x7fffffffd566;
mov ymm8_4 L0x7fffffffd568;
mov ymm8_5 L0x7fffffffd56a;
mov ymm8_6 L0x7fffffffd56c;
mov ymm8_7 L0x7fffffffd56e;
mov ymm8_8 L0x7fffffffd570;
mov ymm8_9 L0x7fffffffd572;
mov ymm8_a L0x7fffffffd574;
mov ymm8_b L0x7fffffffd576;
mov ymm8_c L0x7fffffffd578;
mov ymm8_d L0x7fffffffd57a;
mov ymm8_e L0x7fffffffd57c;
mov ymm8_f L0x7fffffffd57e;
(* vmovdqa 0x2a0(%rdi),%ymm9                       #! EA = L0x7fffffffd580; Value = 0x0000000000000000; PC = 0x555555557fb1 *)
mov ymm9_0 L0x7fffffffd580;
mov ymm9_1 L0x7fffffffd582;
mov ymm9_2 L0x7fffffffd584;
mov ymm9_3 L0x7fffffffd586;
mov ymm9_4 L0x7fffffffd588;
mov ymm9_5 L0x7fffffffd58a;
mov ymm9_6 L0x7fffffffd58c;
mov ymm9_7 L0x7fffffffd58e;
mov ymm9_8 L0x7fffffffd590;
mov ymm9_9 L0x7fffffffd592;
mov ymm9_a L0x7fffffffd594;
mov ymm9_b L0x7fffffffd596;
mov ymm9_c L0x7fffffffd598;
mov ymm9_d L0x7fffffffd59a;
mov ymm9_e L0x7fffffffd59c;
mov ymm9_f L0x7fffffffd59e;
(* vmovdqa 0x2c0(%rdi),%ymm10                      #! EA = L0x7fffffffd5a0; Value = 0x0000000000000000; PC = 0x555555557fb9 *)
mov ymm10_0 L0x7fffffffd5a0;
mov ymm10_1 L0x7fffffffd5a2;
mov ymm10_2 L0x7fffffffd5a4;
mov ymm10_3 L0x7fffffffd5a6;
mov ymm10_4 L0x7fffffffd5a8;
mov ymm10_5 L0x7fffffffd5aa;
mov ymm10_6 L0x7fffffffd5ac;
mov ymm10_7 L0x7fffffffd5ae;
mov ymm10_8 L0x7fffffffd5b0;
mov ymm10_9 L0x7fffffffd5b2;
mov ymm10_a L0x7fffffffd5b4;
mov ymm10_b L0x7fffffffd5b6;
mov ymm10_c L0x7fffffffd5b8;
mov ymm10_d L0x7fffffffd5ba;
mov ymm10_e L0x7fffffffd5bc;
mov ymm10_f L0x7fffffffd5be;
(* vmovdqa 0x2e0(%rdi),%ymm11                      #! EA = L0x7fffffffd5c0; Value = 0x0000000000000000; PC = 0x555555557fc1 *)
mov ymm11_0 L0x7fffffffd5c0;
mov ymm11_1 L0x7fffffffd5c2;
mov ymm11_2 L0x7fffffffd5c4;
mov ymm11_3 L0x7fffffffd5c6;
mov ymm11_4 L0x7fffffffd5c8;
mov ymm11_5 L0x7fffffffd5ca;
mov ymm11_6 L0x7fffffffd5cc;
mov ymm11_7 L0x7fffffffd5ce;
mov ymm11_8 L0x7fffffffd5d0;
mov ymm11_9 L0x7fffffffd5d2;
mov ymm11_a L0x7fffffffd5d4;
mov ymm11_b L0x7fffffffd5d6;
mov ymm11_c L0x7fffffffd5d8;
mov ymm11_d L0x7fffffffd5da;
mov ymm11_e L0x7fffffffd5dc;
mov ymm11_f L0x7fffffffd5de;
(* vpbroadcastw 0x104(%rdx),%ymm1                  #! EA = L0x555555561224; Value = 0xad9a276d0198f85c; PC = 0x555555557fc9 *)
mov ymm1_0 L0x555555561224;
mov ymm1_1 L0x555555561224;
mov ymm1_2 L0x555555561224;
mov ymm1_3 L0x555555561224;
mov ymm1_4 L0x555555561224;
mov ymm1_5 L0x555555561224;
mov ymm1_6 L0x555555561224;
mov ymm1_7 L0x555555561224;
mov ymm1_8 L0x555555561224;
mov ymm1_9 L0x555555561224;
mov ymm1_a L0x555555561224;
mov ymm1_b L0x555555561224;
mov ymm1_c L0x555555561224;
mov ymm1_d L0x555555561224;
mov ymm1_e L0x555555561224;
mov ymm1_f L0x555555561224;
(* vpbroadcastw 0x304(%rdx),%ymm2                  #! EA = L0x555555561424; Value = 0xf19a096df198105c; PC = 0x555555557fd2 *)
mov ymm2_0 L0x555555561424;
mov ymm2_1 L0x555555561424;
mov ymm2_2 L0x555555561424;
mov ymm2_3 L0x555555561424;
mov ymm2_4 L0x555555561424;
mov ymm2_5 L0x555555561424;
mov ymm2_6 L0x555555561424;
mov ymm2_7 L0x555555561424;
mov ymm2_8 L0x555555561424;
mov ymm2_9 L0x555555561424;
mov ymm2_a L0x555555561424;
mov ymm2_b L0x555555561424;
mov ymm2_c L0x555555561424;
mov ymm2_d L0x555555561424;
mov ymm2_e L0x555555561424;
mov ymm2_f L0x555555561424;
(* vpmullw %ymm1,%ymm8,%ymm3                       #! PC = 0x555555557fdb *)
smull mulHymm8_0 mulL_0 ymm1_0 ymm8_0;
smull mulHymm8_1 mulL_1 ymm1_1 ymm8_1;
smull mulHymm8_2 mulL_2 ymm1_2 ymm8_2;
smull mulHymm8_3 mulL_3 ymm1_3 ymm8_3;
smull mulHymm8_4 mulL_4 ymm1_4 ymm8_4;
smull mulHymm8_5 mulL_5 ymm1_5 ymm8_5;
smull mulHymm8_6 mulL_6 ymm1_6 ymm8_6;
smull mulHymm8_7 mulL_7 ymm1_7 ymm8_7;
smull mulHymm8_8 mulL_8 ymm1_8 ymm8_8;
smull mulHymm8_9 mulL_9 ymm1_9 ymm8_9;
smull mulHymm8_a mulL_a ymm1_a ymm8_a;
smull mulHymm8_b mulL_b ymm1_b ymm8_b;
smull mulHymm8_c mulL_c ymm1_c ymm8_c;
smull mulHymm8_d mulL_d ymm1_d ymm8_d;
smull mulHymm8_e mulL_e ymm1_e ymm8_e;
smull mulHymm8_f mulL_f ymm1_f ymm8_f;
cast ymm3_0@sint16 mulL_0;
cast ymm3_1@sint16 mulL_1;
cast ymm3_2@sint16 mulL_2;
cast ymm3_3@sint16 mulL_3;
cast ymm3_4@sint16 mulL_4;
cast ymm3_5@sint16 mulL_5;
cast ymm3_6@sint16 mulL_6;
cast ymm3_7@sint16 mulL_7;
cast ymm3_8@sint16 mulL_8;
cast ymm3_9@sint16 mulL_9;
cast ymm3_a@sint16 mulL_a;
cast ymm3_b@sint16 mulL_b;
cast ymm3_c@sint16 mulL_c;
cast ymm3_d@sint16 mulL_d;
cast ymm3_e@sint16 mulL_e;
cast ymm3_f@sint16 mulL_f;
(* vpmulhw %ymm2,%ymm8,%ymm8                       #! PC = 0x555555557fdf *)
smull mulH_0 mulLymm8_0 ymm8_0 ymm2_0;
smull mulH_1 mulLymm8_1 ymm8_1 ymm2_1;
smull mulH_2 mulLymm8_2 ymm8_2 ymm2_2;
smull mulH_3 mulLymm8_3 ymm8_3 ymm2_3;
smull mulH_4 mulLymm8_4 ymm8_4 ymm2_4;
smull mulH_5 mulLymm8_5 ymm8_5 ymm2_5;
smull mulH_6 mulLymm8_6 ymm8_6 ymm2_6;
smull mulH_7 mulLymm8_7 ymm8_7 ymm2_7;
smull mulH_8 mulLymm8_8 ymm8_8 ymm2_8;
smull mulH_9 mulLymm8_9 ymm8_9 ymm2_9;
smull mulH_a mulLymm8_a ymm8_a ymm2_a;
smull mulH_b mulLymm8_b ymm8_b ymm2_b;
smull mulH_c mulLymm8_c ymm8_c ymm2_c;
smull mulH_d mulLymm8_d ymm8_d ymm2_d;
smull mulH_e mulLymm8_e ymm8_e ymm2_e;
smull mulH_f mulLymm8_f ymm8_f ymm2_f;
mov ymm8_0 mulH_0;
mov ymm8_1 mulH_1;
mov ymm8_2 mulH_2;
mov ymm8_3 mulH_3;
mov ymm8_4 mulH_4;
mov ymm8_5 mulH_5;
mov ymm8_6 mulH_6;
mov ymm8_7 mulH_7;
mov ymm8_8 mulH_8;
mov ymm8_9 mulH_9;
mov ymm8_a mulH_a;
mov ymm8_b mulH_b;
mov ymm8_c mulH_c;
mov ymm8_d mulH_d;
mov ymm8_e mulH_e;
mov ymm8_f mulH_f;
(* vpmulhw %ymm0,%ymm3,%ymm3                       #! PC = 0x555555557fe3 *)
smull mulH_0 red_0 ymm3_0 ymm0_0;
assert true && red_0 = mulLymm8_0;
assume red_0 = mulLymm8_0 && true;
smull mulH_1 red_1 ymm3_1 ymm0_1;
assert true && red_1 = mulLymm8_1;
assume red_1 = mulLymm8_1 && true;
smull mulH_2 red_2 ymm3_2 ymm0_2;
assert true && red_2 = mulLymm8_2;
assume red_2 = mulLymm8_2 && true;
smull mulH_3 red_3 ymm3_3 ymm0_3;
assert true && red_3 = mulLymm8_3;
assume red_3 = mulLymm8_3 && true;
smull mulH_4 red_4 ymm3_4 ymm0_4;
assert true && red_4 = mulLymm8_4;
assume red_4 = mulLymm8_4 && true;
smull mulH_5 red_5 ymm3_5 ymm0_5;
assert true && red_5 = mulLymm8_5;
assume red_5 = mulLymm8_5 && true;
smull mulH_6 red_6 ymm3_6 ymm0_6;
assert true && red_6 = mulLymm8_6;
assume red_6 = mulLymm8_6 && true;
smull mulH_7 red_7 ymm3_7 ymm0_7;
assert true && red_7 = mulLymm8_7;
assume red_7 = mulLymm8_7 && true;
smull mulH_8 red_8 ymm3_8 ymm0_8;
assert true && red_8 = mulLymm8_8;
assume red_8 = mulLymm8_8 && true;
smull mulH_9 red_9 ymm3_9 ymm0_9;
assert true && red_9 = mulLymm8_9;
assume red_9 = mulLymm8_9 && true;
smull mulH_a red_a ymm3_a ymm0_a;
assert true && red_a = mulLymm8_a;
assume red_a = mulLymm8_a && true;
smull mulH_b red_b ymm3_b ymm0_b;
assert true && red_b = mulLymm8_b;
assume red_b = mulLymm8_b && true;
smull mulH_c red_c ymm3_c ymm0_c;
assert true && red_c = mulLymm8_c;
assume red_c = mulLymm8_c && true;
smull mulH_d red_d ymm3_d ymm0_d;
assert true && red_d = mulLymm8_d;
assume red_d = mulLymm8_d && true;
smull mulH_e red_e ymm3_e ymm0_e;
assert true && red_e = mulLymm8_e;
assume red_e = mulLymm8_e && true;
smull mulH_f red_f ymm3_f ymm0_f;
assert true && red_f = mulLymm8_f;
assume red_f = mulLymm8_f && true;
mov ymm3_0 mulH_0;
mov ymm3_1 mulH_1;
mov ymm3_2 mulH_2;
mov ymm3_3 mulH_3;
mov ymm3_4 mulH_4;
mov ymm3_5 mulH_5;
mov ymm3_6 mulH_6;
mov ymm3_7 mulH_7;
mov ymm3_8 mulH_8;
mov ymm3_9 mulH_9;
mov ymm3_a mulH_a;
mov ymm3_b mulH_b;
mov ymm3_c mulH_c;
mov ymm3_d mulH_d;
mov ymm3_e mulH_e;
mov ymm3_f mulH_f;
(* vpsubw %ymm3,%ymm8,%ymm8                        #! PC = 0x555555557fe7 *)
sub ymm8_0 ymm8_0 ymm3_0;
sub ymm8_1 ymm8_1 ymm3_1;
sub ymm8_2 ymm8_2 ymm3_2;
sub ymm8_3 ymm8_3 ymm3_3;
sub ymm8_4 ymm8_4 ymm3_4;
sub ymm8_5 ymm8_5 ymm3_5;
sub ymm8_6 ymm8_6 ymm3_6;
sub ymm8_7 ymm8_7 ymm3_7;
sub ymm8_8 ymm8_8 ymm3_8;
sub ymm8_9 ymm8_9 ymm3_9;
sub ymm8_a ymm8_a ymm3_a;
sub ymm8_b ymm8_b ymm3_b;
sub ymm8_c ymm8_c ymm3_c;
sub ymm8_d ymm8_d ymm3_d;
sub ymm8_e ymm8_e ymm3_e;
sub ymm8_f ymm8_f ymm3_f;
(* vpmullw %ymm1,%ymm9,%ymm3                       #! PC = 0x555555557feb *)
smull mulHymm9_0 mulL_0 ymm1_0 ymm9_0;
smull mulHymm9_1 mulL_1 ymm1_1 ymm9_1;
smull mulHymm9_2 mulL_2 ymm1_2 ymm9_2;
smull mulHymm9_3 mulL_3 ymm1_3 ymm9_3;
smull mulHymm9_4 mulL_4 ymm1_4 ymm9_4;
smull mulHymm9_5 mulL_5 ymm1_5 ymm9_5;
smull mulHymm9_6 mulL_6 ymm1_6 ymm9_6;
smull mulHymm9_7 mulL_7 ymm1_7 ymm9_7;
smull mulHymm9_8 mulL_8 ymm1_8 ymm9_8;
smull mulHymm9_9 mulL_9 ymm1_9 ymm9_9;
smull mulHymm9_a mulL_a ymm1_a ymm9_a;
smull mulHymm9_b mulL_b ymm1_b ymm9_b;
smull mulHymm9_c mulL_c ymm1_c ymm9_c;
smull mulHymm9_d mulL_d ymm1_d ymm9_d;
smull mulHymm9_e mulL_e ymm1_e ymm9_e;
smull mulHymm9_f mulL_f ymm1_f ymm9_f;
cast ymm3_0@sint16 mulL_0;
cast ymm3_1@sint16 mulL_1;
cast ymm3_2@sint16 mulL_2;
cast ymm3_3@sint16 mulL_3;
cast ymm3_4@sint16 mulL_4;
cast ymm3_5@sint16 mulL_5;
cast ymm3_6@sint16 mulL_6;
cast ymm3_7@sint16 mulL_7;
cast ymm3_8@sint16 mulL_8;
cast ymm3_9@sint16 mulL_9;
cast ymm3_a@sint16 mulL_a;
cast ymm3_b@sint16 mulL_b;
cast ymm3_c@sint16 mulL_c;
cast ymm3_d@sint16 mulL_d;
cast ymm3_e@sint16 mulL_e;
cast ymm3_f@sint16 mulL_f;
(* vpmulhw %ymm2,%ymm9,%ymm9                       #! PC = 0x555555557fef *)
smull mulH_0 mulLymm9_0 ymm9_0 ymm2_0;
smull mulH_1 mulLymm9_1 ymm9_1 ymm2_1;
smull mulH_2 mulLymm9_2 ymm9_2 ymm2_2;
smull mulH_3 mulLymm9_3 ymm9_3 ymm2_3;
smull mulH_4 mulLymm9_4 ymm9_4 ymm2_4;
smull mulH_5 mulLymm9_5 ymm9_5 ymm2_5;
smull mulH_6 mulLymm9_6 ymm9_6 ymm2_6;
smull mulH_7 mulLymm9_7 ymm9_7 ymm2_7;
smull mulH_8 mulLymm9_8 ymm9_8 ymm2_8;
smull mulH_9 mulLymm9_9 ymm9_9 ymm2_9;
smull mulH_a mulLymm9_a ymm9_a ymm2_a;
smull mulH_b mulLymm9_b ymm9_b ymm2_b;
smull mulH_c mulLymm9_c ymm9_c ymm2_c;
smull mulH_d mulLymm9_d ymm9_d ymm2_d;
smull mulH_e mulLymm9_e ymm9_e ymm2_e;
smull mulH_f mulLymm9_f ymm9_f ymm2_f;
mov ymm9_0 mulH_0;
mov ymm9_1 mulH_1;
mov ymm9_2 mulH_2;
mov ymm9_3 mulH_3;
mov ymm9_4 mulH_4;
mov ymm9_5 mulH_5;
mov ymm9_6 mulH_6;
mov ymm9_7 mulH_7;
mov ymm9_8 mulH_8;
mov ymm9_9 mulH_9;
mov ymm9_a mulH_a;
mov ymm9_b mulH_b;
mov ymm9_c mulH_c;
mov ymm9_d mulH_d;
mov ymm9_e mulH_e;
mov ymm9_f mulH_f;
(* vpmulhw %ymm0,%ymm3,%ymm3                       #! PC = 0x555555557ff3 *)
smull mulH_0 red_0 ymm3_0 ymm0_0;
assert true && red_0 = mulLymm9_0;
assume red_0 = mulLymm9_0 && true;
smull mulH_1 red_1 ymm3_1 ymm0_1;
assert true && red_1 = mulLymm9_1;
assume red_1 = mulLymm9_1 && true;
smull mulH_2 red_2 ymm3_2 ymm0_2;
assert true && red_2 = mulLymm9_2;
assume red_2 = mulLymm9_2 && true;
smull mulH_3 red_3 ymm3_3 ymm0_3;
assert true && red_3 = mulLymm9_3;
assume red_3 = mulLymm9_3 && true;
smull mulH_4 red_4 ymm3_4 ymm0_4;
assert true && red_4 = mulLymm9_4;
assume red_4 = mulLymm9_4 && true;
smull mulH_5 red_5 ymm3_5 ymm0_5;
assert true && red_5 = mulLymm9_5;
assume red_5 = mulLymm9_5 && true;
smull mulH_6 red_6 ymm3_6 ymm0_6;
assert true && red_6 = mulLymm9_6;
assume red_6 = mulLymm9_6 && true;
smull mulH_7 red_7 ymm3_7 ymm0_7;
assert true && red_7 = mulLymm9_7;
assume red_7 = mulLymm9_7 && true;
smull mulH_8 red_8 ymm3_8 ymm0_8;
assert true && red_8 = mulLymm9_8;
assume red_8 = mulLymm9_8 && true;
smull mulH_9 red_9 ymm3_9 ymm0_9;
assert true && red_9 = mulLymm9_9;
assume red_9 = mulLymm9_9 && true;
smull mulH_a red_a ymm3_a ymm0_a;
assert true && red_a = mulLymm9_a;
assume red_a = mulLymm9_a && true;
smull mulH_b red_b ymm3_b ymm0_b;
assert true && red_b = mulLymm9_b;
assume red_b = mulLymm9_b && true;
smull mulH_c red_c ymm3_c ymm0_c;
assert true && red_c = mulLymm9_c;
assume red_c = mulLymm9_c && true;
smull mulH_d red_d ymm3_d ymm0_d;
assert true && red_d = mulLymm9_d;
assume red_d = mulLymm9_d && true;
smull mulH_e red_e ymm3_e ymm0_e;
assert true && red_e = mulLymm9_e;
assume red_e = mulLymm9_e && true;
smull mulH_f red_f ymm3_f ymm0_f;
assert true && red_f = mulLymm9_f;
assume red_f = mulLymm9_f && true;
mov ymm3_0 mulH_0;
mov ymm3_1 mulH_1;
mov ymm3_2 mulH_2;
mov ymm3_3 mulH_3;
mov ymm3_4 mulH_4;
mov ymm3_5 mulH_5;
mov ymm3_6 mulH_6;
mov ymm3_7 mulH_7;
mov ymm3_8 mulH_8;
mov ymm3_9 mulH_9;
mov ymm3_a mulH_a;
mov ymm3_b mulH_b;
mov ymm3_c mulH_c;
mov ymm3_d mulH_d;
mov ymm3_e mulH_e;
mov ymm3_f mulH_f;
(* vpsubw %ymm3,%ymm9,%ymm9                        #! PC = 0x555555557ff7 *)
sub ymm9_0 ymm9_0 ymm3_0;
sub ymm9_1 ymm9_1 ymm3_1;
sub ymm9_2 ymm9_2 ymm3_2;
sub ymm9_3 ymm9_3 ymm3_3;
sub ymm9_4 ymm9_4 ymm3_4;
sub ymm9_5 ymm9_5 ymm3_5;
sub ymm9_6 ymm9_6 ymm3_6;
sub ymm9_7 ymm9_7 ymm3_7;
sub ymm9_8 ymm9_8 ymm3_8;
sub ymm9_9 ymm9_9 ymm3_9;
sub ymm9_a ymm9_a ymm3_a;
sub ymm9_b ymm9_b ymm3_b;
sub ymm9_c ymm9_c ymm3_c;
sub ymm9_d ymm9_d ymm3_d;
sub ymm9_e ymm9_e ymm3_e;
sub ymm9_f ymm9_f ymm3_f;
(* vpmullw %ymm1,%ymm10,%ymm3                      #! PC = 0x555555557ffb *)
smull mulHymm10_0 mulL_0 ymm1_0 ymm10_0;
smull mulHymm10_1 mulL_1 ymm1_1 ymm10_1;
smull mulHymm10_2 mulL_2 ymm1_2 ymm10_2;
smull mulHymm10_3 mulL_3 ymm1_3 ymm10_3;
smull mulHymm10_4 mulL_4 ymm1_4 ymm10_4;
smull mulHymm10_5 mulL_5 ymm1_5 ymm10_5;
smull mulHymm10_6 mulL_6 ymm1_6 ymm10_6;
smull mulHymm10_7 mulL_7 ymm1_7 ymm10_7;
smull mulHymm10_8 mulL_8 ymm1_8 ymm10_8;
smull mulHymm10_9 mulL_9 ymm1_9 ymm10_9;
smull mulHymm10_a mulL_a ymm1_a ymm10_a;
smull mulHymm10_b mulL_b ymm1_b ymm10_b;
smull mulHymm10_c mulL_c ymm1_c ymm10_c;
smull mulHymm10_d mulL_d ymm1_d ymm10_d;
smull mulHymm10_e mulL_e ymm1_e ymm10_e;
smull mulHymm10_f mulL_f ymm1_f ymm10_f;
cast ymm3_0@sint16 mulL_0;
cast ymm3_1@sint16 mulL_1;
cast ymm3_2@sint16 mulL_2;
cast ymm3_3@sint16 mulL_3;
cast ymm3_4@sint16 mulL_4;
cast ymm3_5@sint16 mulL_5;
cast ymm3_6@sint16 mulL_6;
cast ymm3_7@sint16 mulL_7;
cast ymm3_8@sint16 mulL_8;
cast ymm3_9@sint16 mulL_9;
cast ymm3_a@sint16 mulL_a;
cast ymm3_b@sint16 mulL_b;
cast ymm3_c@sint16 mulL_c;
cast ymm3_d@sint16 mulL_d;
cast ymm3_e@sint16 mulL_e;
cast ymm3_f@sint16 mulL_f;
(* vpmulhw %ymm2,%ymm10,%ymm10                     #! PC = 0x555555557fff *)
smull mulH_0 mulLymm10_0 ymm10_0 ymm2_0;
smull mulH_1 mulLymm10_1 ymm10_1 ymm2_1;
smull mulH_2 mulLymm10_2 ymm10_2 ymm2_2;
smull mulH_3 mulLymm10_3 ymm10_3 ymm2_3;
smull mulH_4 mulLymm10_4 ymm10_4 ymm2_4;
smull mulH_5 mulLymm10_5 ymm10_5 ymm2_5;
smull mulH_6 mulLymm10_6 ymm10_6 ymm2_6;
smull mulH_7 mulLymm10_7 ymm10_7 ymm2_7;
smull mulH_8 mulLymm10_8 ymm10_8 ymm2_8;
smull mulH_9 mulLymm10_9 ymm10_9 ymm2_9;
smull mulH_a mulLymm10_a ymm10_a ymm2_a;
smull mulH_b mulLymm10_b ymm10_b ymm2_b;
smull mulH_c mulLymm10_c ymm10_c ymm2_c;
smull mulH_d mulLymm10_d ymm10_d ymm2_d;
smull mulH_e mulLymm10_e ymm10_e ymm2_e;
smull mulH_f mulLymm10_f ymm10_f ymm2_f;
mov ymm10_0 mulH_0;
mov ymm10_1 mulH_1;
mov ymm10_2 mulH_2;
mov ymm10_3 mulH_3;
mov ymm10_4 mulH_4;
mov ymm10_5 mulH_5;
mov ymm10_6 mulH_6;
mov ymm10_7 mulH_7;
mov ymm10_8 mulH_8;
mov ymm10_9 mulH_9;
mov ymm10_a mulH_a;
mov ymm10_b mulH_b;
mov ymm10_c mulH_c;
mov ymm10_d mulH_d;
mov ymm10_e mulH_e;
mov ymm10_f mulH_f;
(* vpmulhw %ymm0,%ymm3,%ymm3                       #! PC = 0x555555558003 *)
smull mulH_0 red_0 ymm3_0 ymm0_0;
assert true && red_0 = mulLymm10_0;
assume red_0 = mulLymm10_0 && true;
smull mulH_1 red_1 ymm3_1 ymm0_1;
assert true && red_1 = mulLymm10_1;
assume red_1 = mulLymm10_1 && true;
smull mulH_2 red_2 ymm3_2 ymm0_2;
assert true && red_2 = mulLymm10_2;
assume red_2 = mulLymm10_2 && true;
smull mulH_3 red_3 ymm3_3 ymm0_3;
assert true && red_3 = mulLymm10_3;
assume red_3 = mulLymm10_3 && true;
smull mulH_4 red_4 ymm3_4 ymm0_4;
assert true && red_4 = mulLymm10_4;
assume red_4 = mulLymm10_4 && true;
smull mulH_5 red_5 ymm3_5 ymm0_5;
assert true && red_5 = mulLymm10_5;
assume red_5 = mulLymm10_5 && true;
smull mulH_6 red_6 ymm3_6 ymm0_6;
assert true && red_6 = mulLymm10_6;
assume red_6 = mulLymm10_6 && true;
smull mulH_7 red_7 ymm3_7 ymm0_7;
assert true && red_7 = mulLymm10_7;
assume red_7 = mulLymm10_7 && true;
smull mulH_8 red_8 ymm3_8 ymm0_8;
assert true && red_8 = mulLymm10_8;
assume red_8 = mulLymm10_8 && true;
smull mulH_9 red_9 ymm3_9 ymm0_9;
assert true && red_9 = mulLymm10_9;
assume red_9 = mulLymm10_9 && true;
smull mulH_a red_a ymm3_a ymm0_a;
assert true && red_a = mulLymm10_a;
assume red_a = mulLymm10_a && true;
smull mulH_b red_b ymm3_b ymm0_b;
assert true && red_b = mulLymm10_b;
assume red_b = mulLymm10_b && true;
smull mulH_c red_c ymm3_c ymm0_c;
assert true && red_c = mulLymm10_c;
assume red_c = mulLymm10_c && true;
smull mulH_d red_d ymm3_d ymm0_d;
assert true && red_d = mulLymm10_d;
assume red_d = mulLymm10_d && true;
smull mulH_e red_e ymm3_e ymm0_e;
assert true && red_e = mulLymm10_e;
assume red_e = mulLymm10_e && true;
smull mulH_f red_f ymm3_f ymm0_f;
assert true && red_f = mulLymm10_f;
assume red_f = mulLymm10_f && true;
mov ymm3_0 mulH_0;
mov ymm3_1 mulH_1;
mov ymm3_2 mulH_2;
mov ymm3_3 mulH_3;
mov ymm3_4 mulH_4;
mov ymm3_5 mulH_5;
mov ymm3_6 mulH_6;
mov ymm3_7 mulH_7;
mov ymm3_8 mulH_8;
mov ymm3_9 mulH_9;
mov ymm3_a mulH_a;
mov ymm3_b mulH_b;
mov ymm3_c mulH_c;
mov ymm3_d mulH_d;
mov ymm3_e mulH_e;
mov ymm3_f mulH_f;
(* vpsubw %ymm3,%ymm10,%ymm10                      #! PC = 0x555555558007 *)
sub ymm10_0 ymm10_0 ymm3_0;
sub ymm10_1 ymm10_1 ymm3_1;
sub ymm10_2 ymm10_2 ymm3_2;
sub ymm10_3 ymm10_3 ymm3_3;
sub ymm10_4 ymm10_4 ymm3_4;
sub ymm10_5 ymm10_5 ymm3_5;
sub ymm10_6 ymm10_6 ymm3_6;
sub ymm10_7 ymm10_7 ymm3_7;
sub ymm10_8 ymm10_8 ymm3_8;
sub ymm10_9 ymm10_9 ymm3_9;
sub ymm10_a ymm10_a ymm3_a;
sub ymm10_b ymm10_b ymm3_b;
sub ymm10_c ymm10_c ymm3_c;
sub ymm10_d ymm10_d ymm3_d;
sub ymm10_e ymm10_e ymm3_e;
sub ymm10_f ymm10_f ymm3_f;
(* vpmullw %ymm1,%ymm11,%ymm3                      #! PC = 0x55555555800b *)
smull mulHymm11_0 mulL_0 ymm1_0 ymm11_0;
smull mulHymm11_1 mulL_1 ymm1_1 ymm11_1;
smull mulHymm11_2 mulL_2 ymm1_2 ymm11_2;
smull mulHymm11_3 mulL_3 ymm1_3 ymm11_3;
smull mulHymm11_4 mulL_4 ymm1_4 ymm11_4;
smull mulHymm11_5 mulL_5 ymm1_5 ymm11_5;
smull mulHymm11_6 mulL_6 ymm1_6 ymm11_6;
smull mulHymm11_7 mulL_7 ymm1_7 ymm11_7;
smull mulHymm11_8 mulL_8 ymm1_8 ymm11_8;
smull mulHymm11_9 mulL_9 ymm1_9 ymm11_9;
smull mulHymm11_a mulL_a ymm1_a ymm11_a;
smull mulHymm11_b mulL_b ymm1_b ymm11_b;
smull mulHymm11_c mulL_c ymm1_c ymm11_c;
smull mulHymm11_d mulL_d ymm1_d ymm11_d;
smull mulHymm11_e mulL_e ymm1_e ymm11_e;
smull mulHymm11_f mulL_f ymm1_f ymm11_f;
cast ymm3_0@sint16 mulL_0;
cast ymm3_1@sint16 mulL_1;
cast ymm3_2@sint16 mulL_2;
cast ymm3_3@sint16 mulL_3;
cast ymm3_4@sint16 mulL_4;
cast ymm3_5@sint16 mulL_5;
cast ymm3_6@sint16 mulL_6;
cast ymm3_7@sint16 mulL_7;
cast ymm3_8@sint16 mulL_8;
cast ymm3_9@sint16 mulL_9;
cast ymm3_a@sint16 mulL_a;
cast ymm3_b@sint16 mulL_b;
cast ymm3_c@sint16 mulL_c;
cast ymm3_d@sint16 mulL_d;
cast ymm3_e@sint16 mulL_e;
cast ymm3_f@sint16 mulL_f;
(* vpmulhw %ymm2,%ymm11,%ymm11                     #! PC = 0x55555555800f *)
smull mulH_0 mulLymm11_0 ymm11_0 ymm2_0;
smull mulH_1 mulLymm11_1 ymm11_1 ymm2_1;
smull mulH_2 mulLymm11_2 ymm11_2 ymm2_2;
smull mulH_3 mulLymm11_3 ymm11_3 ymm2_3;
smull mulH_4 mulLymm11_4 ymm11_4 ymm2_4;
smull mulH_5 mulLymm11_5 ymm11_5 ymm2_5;
smull mulH_6 mulLymm11_6 ymm11_6 ymm2_6;
smull mulH_7 mulLymm11_7 ymm11_7 ymm2_7;
smull mulH_8 mulLymm11_8 ymm11_8 ymm2_8;
smull mulH_9 mulLymm11_9 ymm11_9 ymm2_9;
smull mulH_a mulLymm11_a ymm11_a ymm2_a;
smull mulH_b mulLymm11_b ymm11_b ymm2_b;
smull mulH_c mulLymm11_c ymm11_c ymm2_c;
smull mulH_d mulLymm11_d ymm11_d ymm2_d;
smull mulH_e mulLymm11_e ymm11_e ymm2_e;
smull mulH_f mulLymm11_f ymm11_f ymm2_f;
mov ymm11_0 mulH_0;
mov ymm11_1 mulH_1;
mov ymm11_2 mulH_2;
mov ymm11_3 mulH_3;
mov ymm11_4 mulH_4;
mov ymm11_5 mulH_5;
mov ymm11_6 mulH_6;
mov ymm11_7 mulH_7;
mov ymm11_8 mulH_8;
mov ymm11_9 mulH_9;
mov ymm11_a mulH_a;
mov ymm11_b mulH_b;
mov ymm11_c mulH_c;
mov ymm11_d mulH_d;
mov ymm11_e mulH_e;
mov ymm11_f mulH_f;
(* vpmulhw %ymm0,%ymm3,%ymm3                       #! PC = 0x555555558013 *)
smull mulH_0 red_0 ymm3_0 ymm0_0;
assert true && red_0 = mulLymm11_0;
assume red_0 = mulLymm11_0 && true;
smull mulH_1 red_1 ymm3_1 ymm0_1;
assert true && red_1 = mulLymm11_1;
assume red_1 = mulLymm11_1 && true;
smull mulH_2 red_2 ymm3_2 ymm0_2;
assert true && red_2 = mulLymm11_2;
assume red_2 = mulLymm11_2 && true;
smull mulH_3 red_3 ymm3_3 ymm0_3;
assert true && red_3 = mulLymm11_3;
assume red_3 = mulLymm11_3 && true;
smull mulH_4 red_4 ymm3_4 ymm0_4;
assert true && red_4 = mulLymm11_4;
assume red_4 = mulLymm11_4 && true;
smull mulH_5 red_5 ymm3_5 ymm0_5;
assert true && red_5 = mulLymm11_5;
assume red_5 = mulLymm11_5 && true;
smull mulH_6 red_6 ymm3_6 ymm0_6;
assert true && red_6 = mulLymm11_6;
assume red_6 = mulLymm11_6 && true;
smull mulH_7 red_7 ymm3_7 ymm0_7;
assert true && red_7 = mulLymm11_7;
assume red_7 = mulLymm11_7 && true;
smull mulH_8 red_8 ymm3_8 ymm0_8;
assert true && red_8 = mulLymm11_8;
assume red_8 = mulLymm11_8 && true;
smull mulH_9 red_9 ymm3_9 ymm0_9;
assert true && red_9 = mulLymm11_9;
assume red_9 = mulLymm11_9 && true;
smull mulH_a red_a ymm3_a ymm0_a;
assert true && red_a = mulLymm11_a;
assume red_a = mulLymm11_a && true;
smull mulH_b red_b ymm3_b ymm0_b;
assert true && red_b = mulLymm11_b;
assume red_b = mulLymm11_b && true;
smull mulH_c red_c ymm3_c ymm0_c;
assert true && red_c = mulLymm11_c;
assume red_c = mulLymm11_c && true;
smull mulH_d red_d ymm3_d ymm0_d;
assert true && red_d = mulLymm11_d;
assume red_d = mulLymm11_d && true;
smull mulH_e red_e ymm3_e ymm0_e;
assert true && red_e = mulLymm11_e;
assume red_e = mulLymm11_e && true;
smull mulH_f red_f ymm3_f ymm0_f;
assert true && red_f = mulLymm11_f;
assume red_f = mulLymm11_f && true;
mov ymm3_0 mulH_0;
mov ymm3_1 mulH_1;
mov ymm3_2 mulH_2;
mov ymm3_3 mulH_3;
mov ymm3_4 mulH_4;
mov ymm3_5 mulH_5;
mov ymm3_6 mulH_6;
mov ymm3_7 mulH_7;
mov ymm3_8 mulH_8;
mov ymm3_9 mulH_9;
mov ymm3_a mulH_a;
mov ymm3_b mulH_b;
mov ymm3_c mulH_c;
mov ymm3_d mulH_d;
mov ymm3_e mulH_e;
mov ymm3_f mulH_f;
(* vpsubw %ymm3,%ymm11,%ymm11                      #! PC = 0x555555558017 *)
sub ymm11_0 ymm11_0 ymm3_0;
sub ymm11_1 ymm11_1 ymm3_1;
sub ymm11_2 ymm11_2 ymm3_2;
sub ymm11_3 ymm11_3 ymm3_3;
sub ymm11_4 ymm11_4 ymm3_4;
sub ymm11_5 ymm11_5 ymm3_5;
sub ymm11_6 ymm11_6 ymm3_6;
sub ymm11_7 ymm11_7 ymm3_7;
sub ymm11_8 ymm11_8 ymm3_8;
sub ymm11_9 ymm11_9 ymm3_9;
sub ymm11_a ymm11_a ymm3_a;
sub ymm11_b ymm11_b ymm3_b;
sub ymm11_c ymm11_c ymm3_c;
sub ymm11_d ymm11_d ymm3_d;
sub ymm11_e ymm11_e ymm3_e;
sub ymm11_f ymm11_f ymm3_f;
(* vpaddw %ymm8,%ymm4,%ymm3                        #! PC = 0x55555555801b *)
add ymm3_0 ymm4_0 ymm8_0;
add ymm3_1 ymm4_1 ymm8_1;
add ymm3_2 ymm4_2 ymm8_2;
add ymm3_3 ymm4_3 ymm8_3;
add ymm3_4 ymm4_4 ymm8_4;
add ymm3_5 ymm4_5 ymm8_5;
add ymm3_6 ymm4_6 ymm8_6;
add ymm3_7 ymm4_7 ymm8_7;
add ymm3_8 ymm4_8 ymm8_8;
add ymm3_9 ymm4_9 ymm8_9;
add ymm3_a ymm4_a ymm8_a;
add ymm3_b ymm4_b ymm8_b;
add ymm3_c ymm4_c ymm8_c;
add ymm3_d ymm4_d ymm8_d;
add ymm3_e ymm4_e ymm8_e;
add ymm3_f ymm4_f ymm8_f;
(* vpsubw %ymm8,%ymm4,%ymm8                        #! PC = 0x555555558020 *)
sub ymm8_0 ymm4_0 ymm8_0;
sub ymm8_1 ymm4_1 ymm8_1;
sub ymm8_2 ymm4_2 ymm8_2;
sub ymm8_3 ymm4_3 ymm8_3;
sub ymm8_4 ymm4_4 ymm8_4;
sub ymm8_5 ymm4_5 ymm8_5;
sub ymm8_6 ymm4_6 ymm8_6;
sub ymm8_7 ymm4_7 ymm8_7;
sub ymm8_8 ymm4_8 ymm8_8;
sub ymm8_9 ymm4_9 ymm8_9;
sub ymm8_a ymm4_a ymm8_a;
sub ymm8_b ymm4_b ymm8_b;
sub ymm8_c ymm4_c ymm8_c;
sub ymm8_d ymm4_d ymm8_d;
sub ymm8_e ymm4_e ymm8_e;
sub ymm8_f ymm4_f ymm8_f;
(* vpaddw %ymm9,%ymm5,%ymm4                        #! PC = 0x555555558025 *)
add ymm4_0 ymm5_0 ymm9_0;
add ymm4_1 ymm5_1 ymm9_1;
add ymm4_2 ymm5_2 ymm9_2;
add ymm4_3 ymm5_3 ymm9_3;
add ymm4_4 ymm5_4 ymm9_4;
add ymm4_5 ymm5_5 ymm9_5;
add ymm4_6 ymm5_6 ymm9_6;
add ymm4_7 ymm5_7 ymm9_7;
add ymm4_8 ymm5_8 ymm9_8;
add ymm4_9 ymm5_9 ymm9_9;
add ymm4_a ymm5_a ymm9_a;
add ymm4_b ymm5_b ymm9_b;
add ymm4_c ymm5_c ymm9_c;
add ymm4_d ymm5_d ymm9_d;
add ymm4_e ymm5_e ymm9_e;
add ymm4_f ymm5_f ymm9_f;
(* vpsubw %ymm9,%ymm5,%ymm9                        #! PC = 0x55555555802a *)
sub ymm9_0 ymm5_0 ymm9_0;
sub ymm9_1 ymm5_1 ymm9_1;
sub ymm9_2 ymm5_2 ymm9_2;
sub ymm9_3 ymm5_3 ymm9_3;
sub ymm9_4 ymm5_4 ymm9_4;
sub ymm9_5 ymm5_5 ymm9_5;
sub ymm9_6 ymm5_6 ymm9_6;
sub ymm9_7 ymm5_7 ymm9_7;
sub ymm9_8 ymm5_8 ymm9_8;
sub ymm9_9 ymm5_9 ymm9_9;
sub ymm9_a ymm5_a ymm9_a;
sub ymm9_b ymm5_b ymm9_b;
sub ymm9_c ymm5_c ymm9_c;
sub ymm9_d ymm5_d ymm9_d;
sub ymm9_e ymm5_e ymm9_e;
sub ymm9_f ymm5_f ymm9_f;
(* vpaddw %ymm10,%ymm6,%ymm5                       #! PC = 0x55555555802f *)
add ymm5_0 ymm6_0 ymm10_0;
add ymm5_1 ymm6_1 ymm10_1;
add ymm5_2 ymm6_2 ymm10_2;
add ymm5_3 ymm6_3 ymm10_3;
add ymm5_4 ymm6_4 ymm10_4;
add ymm5_5 ymm6_5 ymm10_5;
add ymm5_6 ymm6_6 ymm10_6;
add ymm5_7 ymm6_7 ymm10_7;
add ymm5_8 ymm6_8 ymm10_8;
add ymm5_9 ymm6_9 ymm10_9;
add ymm5_a ymm6_a ymm10_a;
add ymm5_b ymm6_b ymm10_b;
add ymm5_c ymm6_c ymm10_c;
add ymm5_d ymm6_d ymm10_d;
add ymm5_e ymm6_e ymm10_e;
add ymm5_f ymm6_f ymm10_f;
(* vpsubw %ymm10,%ymm6,%ymm10                      #! PC = 0x555555558034 *)
sub ymm10_0 ymm6_0 ymm10_0;
sub ymm10_1 ymm6_1 ymm10_1;
sub ymm10_2 ymm6_2 ymm10_2;
sub ymm10_3 ymm6_3 ymm10_3;
sub ymm10_4 ymm6_4 ymm10_4;
sub ymm10_5 ymm6_5 ymm10_5;
sub ymm10_6 ymm6_6 ymm10_6;
sub ymm10_7 ymm6_7 ymm10_7;
sub ymm10_8 ymm6_8 ymm10_8;
sub ymm10_9 ymm6_9 ymm10_9;
sub ymm10_a ymm6_a ymm10_a;
sub ymm10_b ymm6_b ymm10_b;
sub ymm10_c ymm6_c ymm10_c;
sub ymm10_d ymm6_d ymm10_d;
sub ymm10_e ymm6_e ymm10_e;
sub ymm10_f ymm6_f ymm10_f;
(* vpaddw %ymm11,%ymm7,%ymm6                       #! PC = 0x555555558039 *)
add ymm6_0 ymm7_0 ymm11_0;
add ymm6_1 ymm7_1 ymm11_1;
add ymm6_2 ymm7_2 ymm11_2;
add ymm6_3 ymm7_3 ymm11_3;
add ymm6_4 ymm7_4 ymm11_4;
add ymm6_5 ymm7_5 ymm11_5;
add ymm6_6 ymm7_6 ymm11_6;
add ymm6_7 ymm7_7 ymm11_7;
add ymm6_8 ymm7_8 ymm11_8;
add ymm6_9 ymm7_9 ymm11_9;
add ymm6_a ymm7_a ymm11_a;
add ymm6_b ymm7_b ymm11_b;
add ymm6_c ymm7_c ymm11_c;
add ymm6_d ymm7_d ymm11_d;
add ymm6_e ymm7_e ymm11_e;
add ymm6_f ymm7_f ymm11_f;
(* vpsubw %ymm11,%ymm7,%ymm11                      #! PC = 0x55555555803e *)
sub ymm11_0 ymm7_0 ymm11_0;
sub ymm11_1 ymm7_1 ymm11_1;
sub ymm11_2 ymm7_2 ymm11_2;
sub ymm11_3 ymm7_3 ymm11_3;
sub ymm11_4 ymm7_4 ymm11_4;
sub ymm11_5 ymm7_5 ymm11_5;
sub ymm11_6 ymm7_6 ymm11_6;
sub ymm11_7 ymm7_7 ymm11_7;
sub ymm11_8 ymm7_8 ymm11_8;
sub ymm11_9 ymm7_9 ymm11_9;
sub ymm11_a ymm7_a ymm11_a;
sub ymm11_b ymm7_b ymm11_b;
sub ymm11_c ymm7_c ymm11_c;
sub ymm11_d ymm7_d ymm11_d;
sub ymm11_e ymm7_e ymm11_e;
sub ymm11_f ymm7_f ymm11_f;
(* vpbroadcastw 0x108(%rdx),%ymm1                  #! EA = L0x555555561228; Value = 0xae886f65ad9a276d; PC = 0x555555558043 *)
mov ymm1_0 L0x555555561228;
mov ymm1_1 L0x555555561228;
mov ymm1_2 L0x555555561228;
mov ymm1_3 L0x555555561228;
mov ymm1_4 L0x555555561228;
mov ymm1_5 L0x555555561228;
mov ymm1_6 L0x555555561228;
mov ymm1_7 L0x555555561228;
mov ymm1_8 L0x555555561228;
mov ymm1_9 L0x555555561228;
mov ymm1_a L0x555555561228;
mov ymm1_b L0x555555561228;
mov ymm1_c L0x555555561228;
mov ymm1_d L0x555555561228;
mov ymm1_e L0x555555561228;
mov ymm1_f L0x555555561228;
(* vpbroadcastw 0x308(%rdx),%ymm2                  #! EA = L0x555555561428; Value = 0xfe880165f19a096d; PC = 0x55555555804c *)
mov ymm2_0 L0x555555561428;
mov ymm2_1 L0x555555561428;
mov ymm2_2 L0x555555561428;
mov ymm2_3 L0x555555561428;
mov ymm2_4 L0x555555561428;
mov ymm2_5 L0x555555561428;
mov ymm2_6 L0x555555561428;
mov ymm2_7 L0x555555561428;
mov ymm2_8 L0x555555561428;
mov ymm2_9 L0x555555561428;
mov ymm2_a L0x555555561428;
mov ymm2_b L0x555555561428;
mov ymm2_c L0x555555561428;
mov ymm2_d L0x555555561428;
mov ymm2_e L0x555555561428;
mov ymm2_f L0x555555561428;
(* vpmullw %ymm1,%ymm5,%ymm7                       #! PC = 0x555555558055 *)
smull mulHymm5_0 mulL_0 ymm1_0 ymm5_0;
smull mulHymm5_1 mulL_1 ymm1_1 ymm5_1;
smull mulHymm5_2 mulL_2 ymm1_2 ymm5_2;
smull mulHymm5_3 mulL_3 ymm1_3 ymm5_3;
smull mulHymm5_4 mulL_4 ymm1_4 ymm5_4;
smull mulHymm5_5 mulL_5 ymm1_5 ymm5_5;
smull mulHymm5_6 mulL_6 ymm1_6 ymm5_6;
smull mulHymm5_7 mulL_7 ymm1_7 ymm5_7;
smull mulHymm5_8 mulL_8 ymm1_8 ymm5_8;
smull mulHymm5_9 mulL_9 ymm1_9 ymm5_9;
smull mulHymm5_a mulL_a ymm1_a ymm5_a;
smull mulHymm5_b mulL_b ymm1_b ymm5_b;
smull mulHymm5_c mulL_c ymm1_c ymm5_c;
smull mulHymm5_d mulL_d ymm1_d ymm5_d;
smull mulHymm5_e mulL_e ymm1_e ymm5_e;
smull mulHymm5_f mulL_f ymm1_f ymm5_f;
cast ymm7_0@sint16 mulL_0;
cast ymm7_1@sint16 mulL_1;
cast ymm7_2@sint16 mulL_2;
cast ymm7_3@sint16 mulL_3;
cast ymm7_4@sint16 mulL_4;
cast ymm7_5@sint16 mulL_5;
cast ymm7_6@sint16 mulL_6;
cast ymm7_7@sint16 mulL_7;
cast ymm7_8@sint16 mulL_8;
cast ymm7_9@sint16 mulL_9;
cast ymm7_a@sint16 mulL_a;
cast ymm7_b@sint16 mulL_b;
cast ymm7_c@sint16 mulL_c;
cast ymm7_d@sint16 mulL_d;
cast ymm7_e@sint16 mulL_e;
cast ymm7_f@sint16 mulL_f;
(* vpmulhw %ymm2,%ymm5,%ymm5                       #! PC = 0x555555558059 *)
smull mulH_0 mulLymm5_0 ymm5_0 ymm2_0;
smull mulH_1 mulLymm5_1 ymm5_1 ymm2_1;
smull mulH_2 mulLymm5_2 ymm5_2 ymm2_2;
smull mulH_3 mulLymm5_3 ymm5_3 ymm2_3;
smull mulH_4 mulLymm5_4 ymm5_4 ymm2_4;
smull mulH_5 mulLymm5_5 ymm5_5 ymm2_5;
smull mulH_6 mulLymm5_6 ymm5_6 ymm2_6;
smull mulH_7 mulLymm5_7 ymm5_7 ymm2_7;
smull mulH_8 mulLymm5_8 ymm5_8 ymm2_8;
smull mulH_9 mulLymm5_9 ymm5_9 ymm2_9;
smull mulH_a mulLymm5_a ymm5_a ymm2_a;
smull mulH_b mulLymm5_b ymm5_b ymm2_b;
smull mulH_c mulLymm5_c ymm5_c ymm2_c;
smull mulH_d mulLymm5_d ymm5_d ymm2_d;
smull mulH_e mulLymm5_e ymm5_e ymm2_e;
smull mulH_f mulLymm5_f ymm5_f ymm2_f;
mov ymm5_0 mulH_0;
mov ymm5_1 mulH_1;
mov ymm5_2 mulH_2;
mov ymm5_3 mulH_3;
mov ymm5_4 mulH_4;
mov ymm5_5 mulH_5;
mov ymm5_6 mulH_6;
mov ymm5_7 mulH_7;
mov ymm5_8 mulH_8;
mov ymm5_9 mulH_9;
mov ymm5_a mulH_a;
mov ymm5_b mulH_b;
mov ymm5_c mulH_c;
mov ymm5_d mulH_d;
mov ymm5_e mulH_e;
mov ymm5_f mulH_f;
(* vpmulhw %ymm0,%ymm7,%ymm7                       #! PC = 0x55555555805d *)
smull mulH_0 red_0 ymm7_0 ymm0_0;
assert true && red_0 = mulLymm5_0;
assume red_0 = mulLymm5_0 && true;
smull mulH_1 red_1 ymm7_1 ymm0_1;
assert true && red_1 = mulLymm5_1;
assume red_1 = mulLymm5_1 && true;
smull mulH_2 red_2 ymm7_2 ymm0_2;
assert true && red_2 = mulLymm5_2;
assume red_2 = mulLymm5_2 && true;
smull mulH_3 red_3 ymm7_3 ymm0_3;
assert true && red_3 = mulLymm5_3;
assume red_3 = mulLymm5_3 && true;
smull mulH_4 red_4 ymm7_4 ymm0_4;
assert true && red_4 = mulLymm5_4;
assume red_4 = mulLymm5_4 && true;
smull mulH_5 red_5 ymm7_5 ymm0_5;
assert true && red_5 = mulLymm5_5;
assume red_5 = mulLymm5_5 && true;
smull mulH_6 red_6 ymm7_6 ymm0_6;
assert true && red_6 = mulLymm5_6;
assume red_6 = mulLymm5_6 && true;
smull mulH_7 red_7 ymm7_7 ymm0_7;
assert true && red_7 = mulLymm5_7;
assume red_7 = mulLymm5_7 && true;
smull mulH_8 red_8 ymm7_8 ymm0_8;
assert true && red_8 = mulLymm5_8;
assume red_8 = mulLymm5_8 && true;
smull mulH_9 red_9 ymm7_9 ymm0_9;
assert true && red_9 = mulLymm5_9;
assume red_9 = mulLymm5_9 && true;
smull mulH_a red_a ymm7_a ymm0_a;
assert true && red_a = mulLymm5_a;
assume red_a = mulLymm5_a && true;
smull mulH_b red_b ymm7_b ymm0_b;
assert true && red_b = mulLymm5_b;
assume red_b = mulLymm5_b && true;
smull mulH_c red_c ymm7_c ymm0_c;
assert true && red_c = mulLymm5_c;
assume red_c = mulLymm5_c && true;
smull mulH_d red_d ymm7_d ymm0_d;
assert true && red_d = mulLymm5_d;
assume red_d = mulLymm5_d && true;
smull mulH_e red_e ymm7_e ymm0_e;
assert true && red_e = mulLymm5_e;
assume red_e = mulLymm5_e && true;
smull mulH_f red_f ymm7_f ymm0_f;
assert true && red_f = mulLymm5_f;
assume red_f = mulLymm5_f && true;
mov ymm7_0 mulH_0;
mov ymm7_1 mulH_1;
mov ymm7_2 mulH_2;
mov ymm7_3 mulH_3;
mov ymm7_4 mulH_4;
mov ymm7_5 mulH_5;
mov ymm7_6 mulH_6;
mov ymm7_7 mulH_7;
mov ymm7_8 mulH_8;
mov ymm7_9 mulH_9;
mov ymm7_a mulH_a;
mov ymm7_b mulH_b;
mov ymm7_c mulH_c;
mov ymm7_d mulH_d;
mov ymm7_e mulH_e;
mov ymm7_f mulH_f;
(* vpsubw %ymm7,%ymm5,%ymm5                        #! PC = 0x555555558061 *)
sub ymm5_0 ymm5_0 ymm7_0;
sub ymm5_1 ymm5_1 ymm7_1;
sub ymm5_2 ymm5_2 ymm7_2;
sub ymm5_3 ymm5_3 ymm7_3;
sub ymm5_4 ymm5_4 ymm7_4;
sub ymm5_5 ymm5_5 ymm7_5;
sub ymm5_6 ymm5_6 ymm7_6;
sub ymm5_7 ymm5_7 ymm7_7;
sub ymm5_8 ymm5_8 ymm7_8;
sub ymm5_9 ymm5_9 ymm7_9;
sub ymm5_a ymm5_a ymm7_a;
sub ymm5_b ymm5_b ymm7_b;
sub ymm5_c ymm5_c ymm7_c;
sub ymm5_d ymm5_d ymm7_d;
sub ymm5_e ymm5_e ymm7_e;
sub ymm5_f ymm5_f ymm7_f;
(* vpmullw %ymm1,%ymm6,%ymm7                       #! PC = 0x555555558065 *)
smull mulHymm6_0 mulL_0 ymm1_0 ymm6_0;
smull mulHymm6_1 mulL_1 ymm1_1 ymm6_1;
smull mulHymm6_2 mulL_2 ymm1_2 ymm6_2;
smull mulHymm6_3 mulL_3 ymm1_3 ymm6_3;
smull mulHymm6_4 mulL_4 ymm1_4 ymm6_4;
smull mulHymm6_5 mulL_5 ymm1_5 ymm6_5;
smull mulHymm6_6 mulL_6 ymm1_6 ymm6_6;
smull mulHymm6_7 mulL_7 ymm1_7 ymm6_7;
smull mulHymm6_8 mulL_8 ymm1_8 ymm6_8;
smull mulHymm6_9 mulL_9 ymm1_9 ymm6_9;
smull mulHymm6_a mulL_a ymm1_a ymm6_a;
smull mulHymm6_b mulL_b ymm1_b ymm6_b;
smull mulHymm6_c mulL_c ymm1_c ymm6_c;
smull mulHymm6_d mulL_d ymm1_d ymm6_d;
smull mulHymm6_e mulL_e ymm1_e ymm6_e;
smull mulHymm6_f mulL_f ymm1_f ymm6_f;
cast ymm7_0@sint16 mulL_0;
cast ymm7_1@sint16 mulL_1;
cast ymm7_2@sint16 mulL_2;
cast ymm7_3@sint16 mulL_3;
cast ymm7_4@sint16 mulL_4;
cast ymm7_5@sint16 mulL_5;
cast ymm7_6@sint16 mulL_6;
cast ymm7_7@sint16 mulL_7;
cast ymm7_8@sint16 mulL_8;
cast ymm7_9@sint16 mulL_9;
cast ymm7_a@sint16 mulL_a;
cast ymm7_b@sint16 mulL_b;
cast ymm7_c@sint16 mulL_c;
cast ymm7_d@sint16 mulL_d;
cast ymm7_e@sint16 mulL_e;
cast ymm7_f@sint16 mulL_f;
(* vpmulhw %ymm2,%ymm6,%ymm6                       #! PC = 0x555555558069 *)
smull mulH_0 mulLymm6_0 ymm6_0 ymm2_0;
smull mulH_1 mulLymm6_1 ymm6_1 ymm2_1;
smull mulH_2 mulLymm6_2 ymm6_2 ymm2_2;
smull mulH_3 mulLymm6_3 ymm6_3 ymm2_3;
smull mulH_4 mulLymm6_4 ymm6_4 ymm2_4;
smull mulH_5 mulLymm6_5 ymm6_5 ymm2_5;
smull mulH_6 mulLymm6_6 ymm6_6 ymm2_6;
smull mulH_7 mulLymm6_7 ymm6_7 ymm2_7;
smull mulH_8 mulLymm6_8 ymm6_8 ymm2_8;
smull mulH_9 mulLymm6_9 ymm6_9 ymm2_9;
smull mulH_a mulLymm6_a ymm6_a ymm2_a;
smull mulH_b mulLymm6_b ymm6_b ymm2_b;
smull mulH_c mulLymm6_c ymm6_c ymm2_c;
smull mulH_d mulLymm6_d ymm6_d ymm2_d;
smull mulH_e mulLymm6_e ymm6_e ymm2_e;
smull mulH_f mulLymm6_f ymm6_f ymm2_f;
mov ymm6_0 mulH_0;
mov ymm6_1 mulH_1;
mov ymm6_2 mulH_2;
mov ymm6_3 mulH_3;
mov ymm6_4 mulH_4;
mov ymm6_5 mulH_5;
mov ymm6_6 mulH_6;
mov ymm6_7 mulH_7;
mov ymm6_8 mulH_8;
mov ymm6_9 mulH_9;
mov ymm6_a mulH_a;
mov ymm6_b mulH_b;
mov ymm6_c mulH_c;
mov ymm6_d mulH_d;
mov ymm6_e mulH_e;
mov ymm6_f mulH_f;
(* vpmulhw %ymm0,%ymm7,%ymm7                       #! PC = 0x55555555806d *)
smull mulH_0 red_0 ymm7_0 ymm0_0;
assert true && red_0 = mulLymm6_0;
assume red_0 = mulLymm6_0 && true;
smull mulH_1 red_1 ymm7_1 ymm0_1;
assert true && red_1 = mulLymm6_1;
assume red_1 = mulLymm6_1 && true;
smull mulH_2 red_2 ymm7_2 ymm0_2;
assert true && red_2 = mulLymm6_2;
assume red_2 = mulLymm6_2 && true;
smull mulH_3 red_3 ymm7_3 ymm0_3;
assert true && red_3 = mulLymm6_3;
assume red_3 = mulLymm6_3 && true;
smull mulH_4 red_4 ymm7_4 ymm0_4;
assert true && red_4 = mulLymm6_4;
assume red_4 = mulLymm6_4 && true;
smull mulH_5 red_5 ymm7_5 ymm0_5;
assert true && red_5 = mulLymm6_5;
assume red_5 = mulLymm6_5 && true;
smull mulH_6 red_6 ymm7_6 ymm0_6;
assert true && red_6 = mulLymm6_6;
assume red_6 = mulLymm6_6 && true;
smull mulH_7 red_7 ymm7_7 ymm0_7;
assert true && red_7 = mulLymm6_7;
assume red_7 = mulLymm6_7 && true;
smull mulH_8 red_8 ymm7_8 ymm0_8;
assert true && red_8 = mulLymm6_8;
assume red_8 = mulLymm6_8 && true;
smull mulH_9 red_9 ymm7_9 ymm0_9;
assert true && red_9 = mulLymm6_9;
assume red_9 = mulLymm6_9 && true;
smull mulH_a red_a ymm7_a ymm0_a;
assert true && red_a = mulLymm6_a;
assume red_a = mulLymm6_a && true;
smull mulH_b red_b ymm7_b ymm0_b;
assert true && red_b = mulLymm6_b;
assume red_b = mulLymm6_b && true;
smull mulH_c red_c ymm7_c ymm0_c;
assert true && red_c = mulLymm6_c;
assume red_c = mulLymm6_c && true;
smull mulH_d red_d ymm7_d ymm0_d;
assert true && red_d = mulLymm6_d;
assume red_d = mulLymm6_d && true;
smull mulH_e red_e ymm7_e ymm0_e;
assert true && red_e = mulLymm6_e;
assume red_e = mulLymm6_e && true;
smull mulH_f red_f ymm7_f ymm0_f;
assert true && red_f = mulLymm6_f;
assume red_f = mulLymm6_f && true;
mov ymm7_0 mulH_0;
mov ymm7_1 mulH_1;
mov ymm7_2 mulH_2;
mov ymm7_3 mulH_3;
mov ymm7_4 mulH_4;
mov ymm7_5 mulH_5;
mov ymm7_6 mulH_6;
mov ymm7_7 mulH_7;
mov ymm7_8 mulH_8;
mov ymm7_9 mulH_9;
mov ymm7_a mulH_a;
mov ymm7_b mulH_b;
mov ymm7_c mulH_c;
mov ymm7_d mulH_d;
mov ymm7_e mulH_e;
mov ymm7_f mulH_f;
(* vpsubw %ymm7,%ymm6,%ymm6                        #! PC = 0x555555558071 *)
sub ymm6_0 ymm6_0 ymm7_0;
sub ymm6_1 ymm6_1 ymm7_1;
sub ymm6_2 ymm6_2 ymm7_2;
sub ymm6_3 ymm6_3 ymm7_3;
sub ymm6_4 ymm6_4 ymm7_4;
sub ymm6_5 ymm6_5 ymm7_5;
sub ymm6_6 ymm6_6 ymm7_6;
sub ymm6_7 ymm6_7 ymm7_7;
sub ymm6_8 ymm6_8 ymm7_8;
sub ymm6_9 ymm6_9 ymm7_9;
sub ymm6_a ymm6_a ymm7_a;
sub ymm6_b ymm6_b ymm7_b;
sub ymm6_c ymm6_c ymm7_c;
sub ymm6_d ymm6_d ymm7_d;
sub ymm6_e ymm6_e ymm7_e;
sub ymm6_f ymm6_f ymm7_f;
(* vpbroadcastw 0x10a(%rdx),%ymm1                  #! EA = L0x55555556122a; Value = 0xe487ae886f65ad9a; PC = 0x555555558075 *)
mov ymm1_0 L0x55555556122a;
mov ymm1_1 L0x55555556122a;
mov ymm1_2 L0x55555556122a;
mov ymm1_3 L0x55555556122a;
mov ymm1_4 L0x55555556122a;
mov ymm1_5 L0x55555556122a;
mov ymm1_6 L0x55555556122a;
mov ymm1_7 L0x55555556122a;
mov ymm1_8 L0x55555556122a;
mov ymm1_9 L0x55555556122a;
mov ymm1_a L0x55555556122a;
mov ymm1_b L0x55555556122a;
mov ymm1_c L0x55555556122a;
mov ymm1_d L0x55555556122a;
mov ymm1_e L0x55555556122a;
mov ymm1_f L0x55555556122a;
(* vpbroadcastw 0x30a(%rdx),%ymm2                  #! EA = L0x55555556142a; Value = 0x0a87fe880165f19a; PC = 0x55555555807e *)
mov ymm2_0 L0x55555556142a;
mov ymm2_1 L0x55555556142a;
mov ymm2_2 L0x55555556142a;
mov ymm2_3 L0x55555556142a;
mov ymm2_4 L0x55555556142a;
mov ymm2_5 L0x55555556142a;
mov ymm2_6 L0x55555556142a;
mov ymm2_7 L0x55555556142a;
mov ymm2_8 L0x55555556142a;
mov ymm2_9 L0x55555556142a;
mov ymm2_a L0x55555556142a;
mov ymm2_b L0x55555556142a;
mov ymm2_c L0x55555556142a;
mov ymm2_d L0x55555556142a;
mov ymm2_e L0x55555556142a;
mov ymm2_f L0x55555556142a;
(* vpmullw %ymm1,%ymm10,%ymm7                      #! PC = 0x555555558087 *)
smull mulHymm10_0 mulL_0 ymm1_0 ymm10_0;
smull mulHymm10_1 mulL_1 ymm1_1 ymm10_1;
smull mulHymm10_2 mulL_2 ymm1_2 ymm10_2;
smull mulHymm10_3 mulL_3 ymm1_3 ymm10_3;
smull mulHymm10_4 mulL_4 ymm1_4 ymm10_4;
smull mulHymm10_5 mulL_5 ymm1_5 ymm10_5;
smull mulHymm10_6 mulL_6 ymm1_6 ymm10_6;
smull mulHymm10_7 mulL_7 ymm1_7 ymm10_7;
smull mulHymm10_8 mulL_8 ymm1_8 ymm10_8;
smull mulHymm10_9 mulL_9 ymm1_9 ymm10_9;
smull mulHymm10_a mulL_a ymm1_a ymm10_a;
smull mulHymm10_b mulL_b ymm1_b ymm10_b;
smull mulHymm10_c mulL_c ymm1_c ymm10_c;
smull mulHymm10_d mulL_d ymm1_d ymm10_d;
smull mulHymm10_e mulL_e ymm1_e ymm10_e;
smull mulHymm10_f mulL_f ymm1_f ymm10_f;
cast ymm7_0@sint16 mulL_0;
cast ymm7_1@sint16 mulL_1;
cast ymm7_2@sint16 mulL_2;
cast ymm7_3@sint16 mulL_3;
cast ymm7_4@sint16 mulL_4;
cast ymm7_5@sint16 mulL_5;
cast ymm7_6@sint16 mulL_6;
cast ymm7_7@sint16 mulL_7;
cast ymm7_8@sint16 mulL_8;
cast ymm7_9@sint16 mulL_9;
cast ymm7_a@sint16 mulL_a;
cast ymm7_b@sint16 mulL_b;
cast ymm7_c@sint16 mulL_c;
cast ymm7_d@sint16 mulL_d;
cast ymm7_e@sint16 mulL_e;
cast ymm7_f@sint16 mulL_f;
(* vpmulhw %ymm2,%ymm10,%ymm10                     #! PC = 0x55555555808b *)
smull mulH_0 mulLymm10_0 ymm10_0 ymm2_0;
smull mulH_1 mulLymm10_1 ymm10_1 ymm2_1;
smull mulH_2 mulLymm10_2 ymm10_2 ymm2_2;
smull mulH_3 mulLymm10_3 ymm10_3 ymm2_3;
smull mulH_4 mulLymm10_4 ymm10_4 ymm2_4;
smull mulH_5 mulLymm10_5 ymm10_5 ymm2_5;
smull mulH_6 mulLymm10_6 ymm10_6 ymm2_6;
smull mulH_7 mulLymm10_7 ymm10_7 ymm2_7;
smull mulH_8 mulLymm10_8 ymm10_8 ymm2_8;
smull mulH_9 mulLymm10_9 ymm10_9 ymm2_9;
smull mulH_a mulLymm10_a ymm10_a ymm2_a;
smull mulH_b mulLymm10_b ymm10_b ymm2_b;
smull mulH_c mulLymm10_c ymm10_c ymm2_c;
smull mulH_d mulLymm10_d ymm10_d ymm2_d;
smull mulH_e mulLymm10_e ymm10_e ymm2_e;
smull mulH_f mulLymm10_f ymm10_f ymm2_f;
mov ymm10_0 mulH_0;
mov ymm10_1 mulH_1;
mov ymm10_2 mulH_2;
mov ymm10_3 mulH_3;
mov ymm10_4 mulH_4;
mov ymm10_5 mulH_5;
mov ymm10_6 mulH_6;
mov ymm10_7 mulH_7;
mov ymm10_8 mulH_8;
mov ymm10_9 mulH_9;
mov ymm10_a mulH_a;
mov ymm10_b mulH_b;
mov ymm10_c mulH_c;
mov ymm10_d mulH_d;
mov ymm10_e mulH_e;
mov ymm10_f mulH_f;
(* vpmulhw %ymm0,%ymm7,%ymm7                       #! PC = 0x55555555808f *)
smull mulH_0 red_0 ymm7_0 ymm0_0;
assert true && red_0 = mulLymm10_0;
assume red_0 = mulLymm10_0 && true;
smull mulH_1 red_1 ymm7_1 ymm0_1;
assert true && red_1 = mulLymm10_1;
assume red_1 = mulLymm10_1 && true;
smull mulH_2 red_2 ymm7_2 ymm0_2;
assert true && red_2 = mulLymm10_2;
assume red_2 = mulLymm10_2 && true;
smull mulH_3 red_3 ymm7_3 ymm0_3;
assert true && red_3 = mulLymm10_3;
assume red_3 = mulLymm10_3 && true;
smull mulH_4 red_4 ymm7_4 ymm0_4;
assert true && red_4 = mulLymm10_4;
assume red_4 = mulLymm10_4 && true;
smull mulH_5 red_5 ymm7_5 ymm0_5;
assert true && red_5 = mulLymm10_5;
assume red_5 = mulLymm10_5 && true;
smull mulH_6 red_6 ymm7_6 ymm0_6;
assert true && red_6 = mulLymm10_6;
assume red_6 = mulLymm10_6 && true;
smull mulH_7 red_7 ymm7_7 ymm0_7;
assert true && red_7 = mulLymm10_7;
assume red_7 = mulLymm10_7 && true;
smull mulH_8 red_8 ymm7_8 ymm0_8;
assert true && red_8 = mulLymm10_8;
assume red_8 = mulLymm10_8 && true;
smull mulH_9 red_9 ymm7_9 ymm0_9;
assert true && red_9 = mulLymm10_9;
assume red_9 = mulLymm10_9 && true;
smull mulH_a red_a ymm7_a ymm0_a;
assert true && red_a = mulLymm10_a;
assume red_a = mulLymm10_a && true;
smull mulH_b red_b ymm7_b ymm0_b;
assert true && red_b = mulLymm10_b;
assume red_b = mulLymm10_b && true;
smull mulH_c red_c ymm7_c ymm0_c;
assert true && red_c = mulLymm10_c;
assume red_c = mulLymm10_c && true;
smull mulH_d red_d ymm7_d ymm0_d;
assert true && red_d = mulLymm10_d;
assume red_d = mulLymm10_d && true;
smull mulH_e red_e ymm7_e ymm0_e;
assert true && red_e = mulLymm10_e;
assume red_e = mulLymm10_e && true;
smull mulH_f red_f ymm7_f ymm0_f;
assert true && red_f = mulLymm10_f;
assume red_f = mulLymm10_f && true;
mov ymm7_0 mulH_0;
mov ymm7_1 mulH_1;
mov ymm7_2 mulH_2;
mov ymm7_3 mulH_3;
mov ymm7_4 mulH_4;
mov ymm7_5 mulH_5;
mov ymm7_6 mulH_6;
mov ymm7_7 mulH_7;
mov ymm7_8 mulH_8;
mov ymm7_9 mulH_9;
mov ymm7_a mulH_a;
mov ymm7_b mulH_b;
mov ymm7_c mulH_c;
mov ymm7_d mulH_d;
mov ymm7_e mulH_e;
mov ymm7_f mulH_f;
(* vpsubw %ymm7,%ymm10,%ymm10                      #! PC = 0x555555558093 *)
sub ymm10_0 ymm10_0 ymm7_0;
sub ymm10_1 ymm10_1 ymm7_1;
sub ymm10_2 ymm10_2 ymm7_2;
sub ymm10_3 ymm10_3 ymm7_3;
sub ymm10_4 ymm10_4 ymm7_4;
sub ymm10_5 ymm10_5 ymm7_5;
sub ymm10_6 ymm10_6 ymm7_6;
sub ymm10_7 ymm10_7 ymm7_7;
sub ymm10_8 ymm10_8 ymm7_8;
sub ymm10_9 ymm10_9 ymm7_9;
sub ymm10_a ymm10_a ymm7_a;
sub ymm10_b ymm10_b ymm7_b;
sub ymm10_c ymm10_c ymm7_c;
sub ymm10_d ymm10_d ymm7_d;
sub ymm10_e ymm10_e ymm7_e;
sub ymm10_f ymm10_f ymm7_f;
(* vpmullw %ymm1,%ymm11,%ymm7                      #! PC = 0x555555558097 *)
smull mulHymm11_0 mulL_0 ymm1_0 ymm11_0;
smull mulHymm11_1 mulL_1 ymm1_1 ymm11_1;
smull mulHymm11_2 mulL_2 ymm1_2 ymm11_2;
smull mulHymm11_3 mulL_3 ymm1_3 ymm11_3;
smull mulHymm11_4 mulL_4 ymm1_4 ymm11_4;
smull mulHymm11_5 mulL_5 ymm1_5 ymm11_5;
smull mulHymm11_6 mulL_6 ymm1_6 ymm11_6;
smull mulHymm11_7 mulL_7 ymm1_7 ymm11_7;
smull mulHymm11_8 mulL_8 ymm1_8 ymm11_8;
smull mulHymm11_9 mulL_9 ymm1_9 ymm11_9;
smull mulHymm11_a mulL_a ymm1_a ymm11_a;
smull mulHymm11_b mulL_b ymm1_b ymm11_b;
smull mulHymm11_c mulL_c ymm1_c ymm11_c;
smull mulHymm11_d mulL_d ymm1_d ymm11_d;
smull mulHymm11_e mulL_e ymm1_e ymm11_e;
smull mulHymm11_f mulL_f ymm1_f ymm11_f;
cast ymm7_0@sint16 mulL_0;
cast ymm7_1@sint16 mulL_1;
cast ymm7_2@sint16 mulL_2;
cast ymm7_3@sint16 mulL_3;
cast ymm7_4@sint16 mulL_4;
cast ymm7_5@sint16 mulL_5;
cast ymm7_6@sint16 mulL_6;
cast ymm7_7@sint16 mulL_7;
cast ymm7_8@sint16 mulL_8;
cast ymm7_9@sint16 mulL_9;
cast ymm7_a@sint16 mulL_a;
cast ymm7_b@sint16 mulL_b;
cast ymm7_c@sint16 mulL_c;
cast ymm7_d@sint16 mulL_d;
cast ymm7_e@sint16 mulL_e;
cast ymm7_f@sint16 mulL_f;
(* vpmulhw %ymm2,%ymm11,%ymm11                     #! PC = 0x55555555809b *)
smull mulH_0 mulLymm11_0 ymm11_0 ymm2_0;
smull mulH_1 mulLymm11_1 ymm11_1 ymm2_1;
smull mulH_2 mulLymm11_2 ymm11_2 ymm2_2;
smull mulH_3 mulLymm11_3 ymm11_3 ymm2_3;
smull mulH_4 mulLymm11_4 ymm11_4 ymm2_4;
smull mulH_5 mulLymm11_5 ymm11_5 ymm2_5;
smull mulH_6 mulLymm11_6 ymm11_6 ymm2_6;
smull mulH_7 mulLymm11_7 ymm11_7 ymm2_7;
smull mulH_8 mulLymm11_8 ymm11_8 ymm2_8;
smull mulH_9 mulLymm11_9 ymm11_9 ymm2_9;
smull mulH_a mulLymm11_a ymm11_a ymm2_a;
smull mulH_b mulLymm11_b ymm11_b ymm2_b;
smull mulH_c mulLymm11_c ymm11_c ymm2_c;
smull mulH_d mulLymm11_d ymm11_d ymm2_d;
smull mulH_e mulLymm11_e ymm11_e ymm2_e;
smull mulH_f mulLymm11_f ymm11_f ymm2_f;
mov ymm11_0 mulH_0;
mov ymm11_1 mulH_1;
mov ymm11_2 mulH_2;
mov ymm11_3 mulH_3;
mov ymm11_4 mulH_4;
mov ymm11_5 mulH_5;
mov ymm11_6 mulH_6;
mov ymm11_7 mulH_7;
mov ymm11_8 mulH_8;
mov ymm11_9 mulH_9;
mov ymm11_a mulH_a;
mov ymm11_b mulH_b;
mov ymm11_c mulH_c;
mov ymm11_d mulH_d;
mov ymm11_e mulH_e;
mov ymm11_f mulH_f;
(* vpmulhw %ymm0,%ymm7,%ymm7                       #! PC = 0x55555555809f *)
smull mulH_0 red_0 ymm7_0 ymm0_0;
assert true && red_0 = mulLymm11_0;
assume red_0 = mulLymm11_0 && true;
smull mulH_1 red_1 ymm7_1 ymm0_1;
assert true && red_1 = mulLymm11_1;
assume red_1 = mulLymm11_1 && true;
smull mulH_2 red_2 ymm7_2 ymm0_2;
assert true && red_2 = mulLymm11_2;
assume red_2 = mulLymm11_2 && true;
smull mulH_3 red_3 ymm7_3 ymm0_3;
assert true && red_3 = mulLymm11_3;
assume red_3 = mulLymm11_3 && true;
smull mulH_4 red_4 ymm7_4 ymm0_4;
assert true && red_4 = mulLymm11_4;
assume red_4 = mulLymm11_4 && true;
smull mulH_5 red_5 ymm7_5 ymm0_5;
assert true && red_5 = mulLymm11_5;
assume red_5 = mulLymm11_5 && true;
smull mulH_6 red_6 ymm7_6 ymm0_6;
assert true && red_6 = mulLymm11_6;
assume red_6 = mulLymm11_6 && true;
smull mulH_7 red_7 ymm7_7 ymm0_7;
assert true && red_7 = mulLymm11_7;
assume red_7 = mulLymm11_7 && true;
smull mulH_8 red_8 ymm7_8 ymm0_8;
assert true && red_8 = mulLymm11_8;
assume red_8 = mulLymm11_8 && true;
smull mulH_9 red_9 ymm7_9 ymm0_9;
assert true && red_9 = mulLymm11_9;
assume red_9 = mulLymm11_9 && true;
smull mulH_a red_a ymm7_a ymm0_a;
assert true && red_a = mulLymm11_a;
assume red_a = mulLymm11_a && true;
smull mulH_b red_b ymm7_b ymm0_b;
assert true && red_b = mulLymm11_b;
assume red_b = mulLymm11_b && true;
smull mulH_c red_c ymm7_c ymm0_c;
assert true && red_c = mulLymm11_c;
assume red_c = mulLymm11_c && true;
smull mulH_d red_d ymm7_d ymm0_d;
assert true && red_d = mulLymm11_d;
assume red_d = mulLymm11_d && true;
smull mulH_e red_e ymm7_e ymm0_e;
assert true && red_e = mulLymm11_e;
assume red_e = mulLymm11_e && true;
smull mulH_f red_f ymm7_f ymm0_f;
assert true && red_f = mulLymm11_f;
assume red_f = mulLymm11_f && true;
mov ymm7_0 mulH_0;
mov ymm7_1 mulH_1;
mov ymm7_2 mulH_2;
mov ymm7_3 mulH_3;
mov ymm7_4 mulH_4;
mov ymm7_5 mulH_5;
mov ymm7_6 mulH_6;
mov ymm7_7 mulH_7;
mov ymm7_8 mulH_8;
mov ymm7_9 mulH_9;
mov ymm7_a mulH_a;
mov ymm7_b mulH_b;
mov ymm7_c mulH_c;
mov ymm7_d mulH_d;
mov ymm7_e mulH_e;
mov ymm7_f mulH_f;
(* vpsubw %ymm7,%ymm11,%ymm11                      #! PC = 0x5555555580a3 *)
sub ymm11_0 ymm11_0 ymm7_0;
sub ymm11_1 ymm11_1 ymm7_1;
sub ymm11_2 ymm11_2 ymm7_2;
sub ymm11_3 ymm11_3 ymm7_3;
sub ymm11_4 ymm11_4 ymm7_4;
sub ymm11_5 ymm11_5 ymm7_5;
sub ymm11_6 ymm11_6 ymm7_6;
sub ymm11_7 ymm11_7 ymm7_7;
sub ymm11_8 ymm11_8 ymm7_8;
sub ymm11_9 ymm11_9 ymm7_9;
sub ymm11_a ymm11_a ymm7_a;
sub ymm11_b ymm11_b ymm7_b;
sub ymm11_c ymm11_c ymm7_c;
sub ymm11_d ymm11_d ymm7_d;
sub ymm11_e ymm11_e ymm7_e;
sub ymm11_f ymm11_f ymm7_f;
(* vpaddw %ymm5,%ymm3,%ymm7                        #! PC = 0x5555555580a7 *)
add ymm7_0 ymm3_0 ymm5_0;
add ymm7_1 ymm3_1 ymm5_1;
add ymm7_2 ymm3_2 ymm5_2;
add ymm7_3 ymm3_3 ymm5_3;
add ymm7_4 ymm3_4 ymm5_4;
add ymm7_5 ymm3_5 ymm5_5;
add ymm7_6 ymm3_6 ymm5_6;
add ymm7_7 ymm3_7 ymm5_7;
add ymm7_8 ymm3_8 ymm5_8;
add ymm7_9 ymm3_9 ymm5_9;
add ymm7_a ymm3_a ymm5_a;
add ymm7_b ymm3_b ymm5_b;
add ymm7_c ymm3_c ymm5_c;
add ymm7_d ymm3_d ymm5_d;
add ymm7_e ymm3_e ymm5_e;
add ymm7_f ymm3_f ymm5_f;
(* vpsubw %ymm5,%ymm3,%ymm5                        #! PC = 0x5555555580ab *)
sub ymm5_0 ymm3_0 ymm5_0;
sub ymm5_1 ymm3_1 ymm5_1;
sub ymm5_2 ymm3_2 ymm5_2;
sub ymm5_3 ymm3_3 ymm5_3;
sub ymm5_4 ymm3_4 ymm5_4;
sub ymm5_5 ymm3_5 ymm5_5;
sub ymm5_6 ymm3_6 ymm5_6;
sub ymm5_7 ymm3_7 ymm5_7;
sub ymm5_8 ymm3_8 ymm5_8;
sub ymm5_9 ymm3_9 ymm5_9;
sub ymm5_a ymm3_a ymm5_a;
sub ymm5_b ymm3_b ymm5_b;
sub ymm5_c ymm3_c ymm5_c;
sub ymm5_d ymm3_d ymm5_d;
sub ymm5_e ymm3_e ymm5_e;
sub ymm5_f ymm3_f ymm5_f;
(* vpaddw %ymm6,%ymm4,%ymm3                        #! PC = 0x5555555580af *)
add ymm3_0 ymm4_0 ymm6_0;
add ymm3_1 ymm4_1 ymm6_1;
add ymm3_2 ymm4_2 ymm6_2;
add ymm3_3 ymm4_3 ymm6_3;
add ymm3_4 ymm4_4 ymm6_4;
add ymm3_5 ymm4_5 ymm6_5;
add ymm3_6 ymm4_6 ymm6_6;
add ymm3_7 ymm4_7 ymm6_7;
add ymm3_8 ymm4_8 ymm6_8;
add ymm3_9 ymm4_9 ymm6_9;
add ymm3_a ymm4_a ymm6_a;
add ymm3_b ymm4_b ymm6_b;
add ymm3_c ymm4_c ymm6_c;
add ymm3_d ymm4_d ymm6_d;
add ymm3_e ymm4_e ymm6_e;
add ymm3_f ymm4_f ymm6_f;
(* vpsubw %ymm6,%ymm4,%ymm6                        #! PC = 0x5555555580b3 *)
sub ymm6_0 ymm4_0 ymm6_0;
sub ymm6_1 ymm4_1 ymm6_1;
sub ymm6_2 ymm4_2 ymm6_2;
sub ymm6_3 ymm4_3 ymm6_3;
sub ymm6_4 ymm4_4 ymm6_4;
sub ymm6_5 ymm4_5 ymm6_5;
sub ymm6_6 ymm4_6 ymm6_6;
sub ymm6_7 ymm4_7 ymm6_7;
sub ymm6_8 ymm4_8 ymm6_8;
sub ymm6_9 ymm4_9 ymm6_9;
sub ymm6_a ymm4_a ymm6_a;
sub ymm6_b ymm4_b ymm6_b;
sub ymm6_c ymm4_c ymm6_c;
sub ymm6_d ymm4_d ymm6_d;
sub ymm6_e ymm4_e ymm6_e;
sub ymm6_f ymm4_f ymm6_f;
(* vpaddw %ymm10,%ymm8,%ymm4                       #! PC = 0x5555555580b7 *)
add ymm4_0 ymm8_0 ymm10_0;
add ymm4_1 ymm8_1 ymm10_1;
add ymm4_2 ymm8_2 ymm10_2;
add ymm4_3 ymm8_3 ymm10_3;
add ymm4_4 ymm8_4 ymm10_4;
add ymm4_5 ymm8_5 ymm10_5;
add ymm4_6 ymm8_6 ymm10_6;
add ymm4_7 ymm8_7 ymm10_7;
add ymm4_8 ymm8_8 ymm10_8;
add ymm4_9 ymm8_9 ymm10_9;
add ymm4_a ymm8_a ymm10_a;
add ymm4_b ymm8_b ymm10_b;
add ymm4_c ymm8_c ymm10_c;
add ymm4_d ymm8_d ymm10_d;
add ymm4_e ymm8_e ymm10_e;
add ymm4_f ymm8_f ymm10_f;
(* vpsubw %ymm10,%ymm8,%ymm10                      #! PC = 0x5555555580bc *)
sub ymm10_0 ymm8_0 ymm10_0;
sub ymm10_1 ymm8_1 ymm10_1;
sub ymm10_2 ymm8_2 ymm10_2;
sub ymm10_3 ymm8_3 ymm10_3;
sub ymm10_4 ymm8_4 ymm10_4;
sub ymm10_5 ymm8_5 ymm10_5;
sub ymm10_6 ymm8_6 ymm10_6;
sub ymm10_7 ymm8_7 ymm10_7;
sub ymm10_8 ymm8_8 ymm10_8;
sub ymm10_9 ymm8_9 ymm10_9;
sub ymm10_a ymm8_a ymm10_a;
sub ymm10_b ymm8_b ymm10_b;
sub ymm10_c ymm8_c ymm10_c;
sub ymm10_d ymm8_d ymm10_d;
sub ymm10_e ymm8_e ymm10_e;
sub ymm10_f ymm8_f ymm10_f;
(* vpaddw %ymm11,%ymm9,%ymm8                       #! PC = 0x5555555580c1 *)
add ymm8_0 ymm9_0 ymm11_0;
add ymm8_1 ymm9_1 ymm11_1;
add ymm8_2 ymm9_2 ymm11_2;
add ymm8_3 ymm9_3 ymm11_3;
add ymm8_4 ymm9_4 ymm11_4;
add ymm8_5 ymm9_5 ymm11_5;
add ymm8_6 ymm9_6 ymm11_6;
add ymm8_7 ymm9_7 ymm11_7;
add ymm8_8 ymm9_8 ymm11_8;
add ymm8_9 ymm9_9 ymm11_9;
add ymm8_a ymm9_a ymm11_a;
add ymm8_b ymm9_b ymm11_b;
add ymm8_c ymm9_c ymm11_c;
add ymm8_d ymm9_d ymm11_d;
add ymm8_e ymm9_e ymm11_e;
add ymm8_f ymm9_f ymm11_f;
(* vpsubw %ymm11,%ymm9,%ymm11                      #! PC = 0x5555555580c6 *)
sub ymm11_0 ymm9_0 ymm11_0;
sub ymm11_1 ymm9_1 ymm11_1;
sub ymm11_2 ymm9_2 ymm11_2;
sub ymm11_3 ymm9_3 ymm11_3;
sub ymm11_4 ymm9_4 ymm11_4;
sub ymm11_5 ymm9_5 ymm11_5;
sub ymm11_6 ymm9_6 ymm11_6;
sub ymm11_7 ymm9_7 ymm11_7;
sub ymm11_8 ymm9_8 ymm11_8;
sub ymm11_9 ymm9_9 ymm11_9;
sub ymm11_a ymm9_a ymm11_a;
sub ymm11_b ymm9_b ymm11_b;
sub ymm11_c ymm9_c ymm11_c;
sub ymm11_d ymm9_d ymm11_d;
sub ymm11_e ymm9_e ymm11_e;
sub ymm11_f ymm9_f ymm11_f;
(* vpbroadcastw 0x110(%rdx),%ymm1                  #! EA = L0x555555561230; Value = 0x30bc8cf7c126e487; PC = 0x5555555580cb *)
mov ymm1_0 L0x555555561230;
mov ymm1_1 L0x555555561230;
mov ymm1_2 L0x555555561230;
mov ymm1_3 L0x555555561230;
mov ymm1_4 L0x555555561230;
mov ymm1_5 L0x555555561230;
mov ymm1_6 L0x555555561230;
mov ymm1_7 L0x555555561230;
mov ymm1_8 L0x555555561230;
mov ymm1_9 L0x555555561230;
mov ymm1_a L0x555555561230;
mov ymm1_b L0x555555561230;
mov ymm1_c L0x555555561230;
mov ymm1_d L0x555555561230;
mov ymm1_e L0x555555561230;
mov ymm1_f L0x555555561230;
(* vpbroadcastw 0x310(%rdx),%ymm2                  #! EA = L0x555555561430; Value = 0x08bc12f7fd260a87; PC = 0x5555555580d4 *)
mov ymm2_0 L0x555555561430;
mov ymm2_1 L0x555555561430;
mov ymm2_2 L0x555555561430;
mov ymm2_3 L0x555555561430;
mov ymm2_4 L0x555555561430;
mov ymm2_5 L0x555555561430;
mov ymm2_6 L0x555555561430;
mov ymm2_7 L0x555555561430;
mov ymm2_8 L0x555555561430;
mov ymm2_9 L0x555555561430;
mov ymm2_a L0x555555561430;
mov ymm2_b L0x555555561430;
mov ymm2_c L0x555555561430;
mov ymm2_d L0x555555561430;
mov ymm2_e L0x555555561430;
mov ymm2_f L0x555555561430;
(* vpmullw %ymm1,%ymm3,%ymm9                       #! PC = 0x5555555580dd *)
smull mulHymm3_0 mulL_0 ymm1_0 ymm3_0;
smull mulHymm3_1 mulL_1 ymm1_1 ymm3_1;
smull mulHymm3_2 mulL_2 ymm1_2 ymm3_2;
smull mulHymm3_3 mulL_3 ymm1_3 ymm3_3;
smull mulHymm3_4 mulL_4 ymm1_4 ymm3_4;
smull mulHymm3_5 mulL_5 ymm1_5 ymm3_5;
smull mulHymm3_6 mulL_6 ymm1_6 ymm3_6;
smull mulHymm3_7 mulL_7 ymm1_7 ymm3_7;
smull mulHymm3_8 mulL_8 ymm1_8 ymm3_8;
smull mulHymm3_9 mulL_9 ymm1_9 ymm3_9;
smull mulHymm3_a mulL_a ymm1_a ymm3_a;
smull mulHymm3_b mulL_b ymm1_b ymm3_b;
smull mulHymm3_c mulL_c ymm1_c ymm3_c;
smull mulHymm3_d mulL_d ymm1_d ymm3_d;
smull mulHymm3_e mulL_e ymm1_e ymm3_e;
smull mulHymm3_f mulL_f ymm1_f ymm3_f;
cast ymm9_0@sint16 mulL_0;
cast ymm9_1@sint16 mulL_1;
cast ymm9_2@sint16 mulL_2;
cast ymm9_3@sint16 mulL_3;
cast ymm9_4@sint16 mulL_4;
cast ymm9_5@sint16 mulL_5;
cast ymm9_6@sint16 mulL_6;
cast ymm9_7@sint16 mulL_7;
cast ymm9_8@sint16 mulL_8;
cast ymm9_9@sint16 mulL_9;
cast ymm9_a@sint16 mulL_a;
cast ymm9_b@sint16 mulL_b;
cast ymm9_c@sint16 mulL_c;
cast ymm9_d@sint16 mulL_d;
cast ymm9_e@sint16 mulL_e;
cast ymm9_f@sint16 mulL_f;
(* vpmulhw %ymm2,%ymm3,%ymm3                       #! PC = 0x5555555580e1 *)
smull mulH_0 mulLymm3_0 ymm3_0 ymm2_0;
smull mulH_1 mulLymm3_1 ymm3_1 ymm2_1;
smull mulH_2 mulLymm3_2 ymm3_2 ymm2_2;
smull mulH_3 mulLymm3_3 ymm3_3 ymm2_3;
smull mulH_4 mulLymm3_4 ymm3_4 ymm2_4;
smull mulH_5 mulLymm3_5 ymm3_5 ymm2_5;
smull mulH_6 mulLymm3_6 ymm3_6 ymm2_6;
smull mulH_7 mulLymm3_7 ymm3_7 ymm2_7;
smull mulH_8 mulLymm3_8 ymm3_8 ymm2_8;
smull mulH_9 mulLymm3_9 ymm3_9 ymm2_9;
smull mulH_a mulLymm3_a ymm3_a ymm2_a;
smull mulH_b mulLymm3_b ymm3_b ymm2_b;
smull mulH_c mulLymm3_c ymm3_c ymm2_c;
smull mulH_d mulLymm3_d ymm3_d ymm2_d;
smull mulH_e mulLymm3_e ymm3_e ymm2_e;
smull mulH_f mulLymm3_f ymm3_f ymm2_f;
mov ymm3_0 mulH_0;
mov ymm3_1 mulH_1;
mov ymm3_2 mulH_2;
mov ymm3_3 mulH_3;
mov ymm3_4 mulH_4;
mov ymm3_5 mulH_5;
mov ymm3_6 mulH_6;
mov ymm3_7 mulH_7;
mov ymm3_8 mulH_8;
mov ymm3_9 mulH_9;
mov ymm3_a mulH_a;
mov ymm3_b mulH_b;
mov ymm3_c mulH_c;
mov ymm3_d mulH_d;
mov ymm3_e mulH_e;
mov ymm3_f mulH_f;
(* vpmulhw %ymm0,%ymm9,%ymm9                       #! PC = 0x5555555580e5 *)
smull mulH_0 red_0 ymm9_0 ymm0_0;
assert true && red_0 = mulLymm3_0;
assume red_0 = mulLymm3_0 && true;
smull mulH_1 red_1 ymm9_1 ymm0_1;
assert true && red_1 = mulLymm3_1;
assume red_1 = mulLymm3_1 && true;
smull mulH_2 red_2 ymm9_2 ymm0_2;
assert true && red_2 = mulLymm3_2;
assume red_2 = mulLymm3_2 && true;
smull mulH_3 red_3 ymm9_3 ymm0_3;
assert true && red_3 = mulLymm3_3;
assume red_3 = mulLymm3_3 && true;
smull mulH_4 red_4 ymm9_4 ymm0_4;
assert true && red_4 = mulLymm3_4;
assume red_4 = mulLymm3_4 && true;
smull mulH_5 red_5 ymm9_5 ymm0_5;
assert true && red_5 = mulLymm3_5;
assume red_5 = mulLymm3_5 && true;
smull mulH_6 red_6 ymm9_6 ymm0_6;
assert true && red_6 = mulLymm3_6;
assume red_6 = mulLymm3_6 && true;
smull mulH_7 red_7 ymm9_7 ymm0_7;
assert true && red_7 = mulLymm3_7;
assume red_7 = mulLymm3_7 && true;
smull mulH_8 red_8 ymm9_8 ymm0_8;
assert true && red_8 = mulLymm3_8;
assume red_8 = mulLymm3_8 && true;
smull mulH_9 red_9 ymm9_9 ymm0_9;
assert true && red_9 = mulLymm3_9;
assume red_9 = mulLymm3_9 && true;
smull mulH_a red_a ymm9_a ymm0_a;
assert true && red_a = mulLymm3_a;
assume red_a = mulLymm3_a && true;
smull mulH_b red_b ymm9_b ymm0_b;
assert true && red_b = mulLymm3_b;
assume red_b = mulLymm3_b && true;
smull mulH_c red_c ymm9_c ymm0_c;
assert true && red_c = mulLymm3_c;
assume red_c = mulLymm3_c && true;
smull mulH_d red_d ymm9_d ymm0_d;
assert true && red_d = mulLymm3_d;
assume red_d = mulLymm3_d && true;
smull mulH_e red_e ymm9_e ymm0_e;
assert true && red_e = mulLymm3_e;
assume red_e = mulLymm3_e && true;
smull mulH_f red_f ymm9_f ymm0_f;
assert true && red_f = mulLymm3_f;
assume red_f = mulLymm3_f && true;
mov ymm9_0 mulH_0;
mov ymm9_1 mulH_1;
mov ymm9_2 mulH_2;
mov ymm9_3 mulH_3;
mov ymm9_4 mulH_4;
mov ymm9_5 mulH_5;
mov ymm9_6 mulH_6;
mov ymm9_7 mulH_7;
mov ymm9_8 mulH_8;
mov ymm9_9 mulH_9;
mov ymm9_a mulH_a;
mov ymm9_b mulH_b;
mov ymm9_c mulH_c;
mov ymm9_d mulH_d;
mov ymm9_e mulH_e;
mov ymm9_f mulH_f;
(* vpsubw %ymm9,%ymm3,%ymm3                        #! PC = 0x5555555580e9 *)
sub ymm3_0 ymm3_0 ymm9_0;
sub ymm3_1 ymm3_1 ymm9_1;
sub ymm3_2 ymm3_2 ymm9_2;
sub ymm3_3 ymm3_3 ymm9_3;
sub ymm3_4 ymm3_4 ymm9_4;
sub ymm3_5 ymm3_5 ymm9_5;
sub ymm3_6 ymm3_6 ymm9_6;
sub ymm3_7 ymm3_7 ymm9_7;
sub ymm3_8 ymm3_8 ymm9_8;
sub ymm3_9 ymm3_9 ymm9_9;
sub ymm3_a ymm3_a ymm9_a;
sub ymm3_b ymm3_b ymm9_b;
sub ymm3_c ymm3_c ymm9_c;
sub ymm3_d ymm3_d ymm9_d;
sub ymm3_e ymm3_e ymm9_e;
sub ymm3_f ymm3_f ymm9_f;
(* vpbroadcastw 0x112(%rdx),%ymm1                  #! EA = L0x555555561232; Value = 0xb85730bc8cf7c126; PC = 0x5555555580ee *)
mov ymm1_0 L0x555555561232;
mov ymm1_1 L0x555555561232;
mov ymm1_2 L0x555555561232;
mov ymm1_3 L0x555555561232;
mov ymm1_4 L0x555555561232;
mov ymm1_5 L0x555555561232;
mov ymm1_6 L0x555555561232;
mov ymm1_7 L0x555555561232;
mov ymm1_8 L0x555555561232;
mov ymm1_9 L0x555555561232;
mov ymm1_a L0x555555561232;
mov ymm1_b L0x555555561232;
mov ymm1_c L0x555555561232;
mov ymm1_d L0x555555561232;
mov ymm1_e L0x555555561232;
mov ymm1_f L0x555555561232;
(* vpbroadcastw 0x312(%rdx),%ymm2                  #! EA = L0x555555561432; Value = 0xfe5708bc12f7fd26; PC = 0x5555555580f7 *)
mov ymm2_0 L0x555555561432;
mov ymm2_1 L0x555555561432;
mov ymm2_2 L0x555555561432;
mov ymm2_3 L0x555555561432;
mov ymm2_4 L0x555555561432;
mov ymm2_5 L0x555555561432;
mov ymm2_6 L0x555555561432;
mov ymm2_7 L0x555555561432;
mov ymm2_8 L0x555555561432;
mov ymm2_9 L0x555555561432;
mov ymm2_a L0x555555561432;
mov ymm2_b L0x555555561432;
mov ymm2_c L0x555555561432;
mov ymm2_d L0x555555561432;
mov ymm2_e L0x555555561432;
mov ymm2_f L0x555555561432;
(* vpmullw %ymm1,%ymm6,%ymm9                       #! PC = 0x555555558100 *)
smull mulHymm6_0 mulL_0 ymm1_0 ymm6_0;
smull mulHymm6_1 mulL_1 ymm1_1 ymm6_1;
smull mulHymm6_2 mulL_2 ymm1_2 ymm6_2;
smull mulHymm6_3 mulL_3 ymm1_3 ymm6_3;
smull mulHymm6_4 mulL_4 ymm1_4 ymm6_4;
smull mulHymm6_5 mulL_5 ymm1_5 ymm6_5;
smull mulHymm6_6 mulL_6 ymm1_6 ymm6_6;
smull mulHymm6_7 mulL_7 ymm1_7 ymm6_7;
smull mulHymm6_8 mulL_8 ymm1_8 ymm6_8;
smull mulHymm6_9 mulL_9 ymm1_9 ymm6_9;
smull mulHymm6_a mulL_a ymm1_a ymm6_a;
smull mulHymm6_b mulL_b ymm1_b ymm6_b;
smull mulHymm6_c mulL_c ymm1_c ymm6_c;
smull mulHymm6_d mulL_d ymm1_d ymm6_d;
smull mulHymm6_e mulL_e ymm1_e ymm6_e;
smull mulHymm6_f mulL_f ymm1_f ymm6_f;
cast ymm9_0@sint16 mulL_0;
cast ymm9_1@sint16 mulL_1;
cast ymm9_2@sint16 mulL_2;
cast ymm9_3@sint16 mulL_3;
cast ymm9_4@sint16 mulL_4;
cast ymm9_5@sint16 mulL_5;
cast ymm9_6@sint16 mulL_6;
cast ymm9_7@sint16 mulL_7;
cast ymm9_8@sint16 mulL_8;
cast ymm9_9@sint16 mulL_9;
cast ymm9_a@sint16 mulL_a;
cast ymm9_b@sint16 mulL_b;
cast ymm9_c@sint16 mulL_c;
cast ymm9_d@sint16 mulL_d;
cast ymm9_e@sint16 mulL_e;
cast ymm9_f@sint16 mulL_f;
(* vpmulhw %ymm2,%ymm6,%ymm6                       #! PC = 0x555555558104 *)
smull mulH_0 mulLymm6_0 ymm6_0 ymm2_0;
smull mulH_1 mulLymm6_1 ymm6_1 ymm2_1;
smull mulH_2 mulLymm6_2 ymm6_2 ymm2_2;
smull mulH_3 mulLymm6_3 ymm6_3 ymm2_3;
smull mulH_4 mulLymm6_4 ymm6_4 ymm2_4;
smull mulH_5 mulLymm6_5 ymm6_5 ymm2_5;
smull mulH_6 mulLymm6_6 ymm6_6 ymm2_6;
smull mulH_7 mulLymm6_7 ymm6_7 ymm2_7;
smull mulH_8 mulLymm6_8 ymm6_8 ymm2_8;
smull mulH_9 mulLymm6_9 ymm6_9 ymm2_9;
smull mulH_a mulLymm6_a ymm6_a ymm2_a;
smull mulH_b mulLymm6_b ymm6_b ymm2_b;
smull mulH_c mulLymm6_c ymm6_c ymm2_c;
smull mulH_d mulLymm6_d ymm6_d ymm2_d;
smull mulH_e mulLymm6_e ymm6_e ymm2_e;
smull mulH_f mulLymm6_f ymm6_f ymm2_f;
mov ymm6_0 mulH_0;
mov ymm6_1 mulH_1;
mov ymm6_2 mulH_2;
mov ymm6_3 mulH_3;
mov ymm6_4 mulH_4;
mov ymm6_5 mulH_5;
mov ymm6_6 mulH_6;
mov ymm6_7 mulH_7;
mov ymm6_8 mulH_8;
mov ymm6_9 mulH_9;
mov ymm6_a mulH_a;
mov ymm6_b mulH_b;
mov ymm6_c mulH_c;
mov ymm6_d mulH_d;
mov ymm6_e mulH_e;
mov ymm6_f mulH_f;
(* vpmulhw %ymm0,%ymm9,%ymm9                       #! PC = 0x555555558108 *)
smull mulH_0 red_0 ymm9_0 ymm0_0;
assert true && red_0 = mulLymm6_0;
assume red_0 = mulLymm6_0 && true;
smull mulH_1 red_1 ymm9_1 ymm0_1;
assert true && red_1 = mulLymm6_1;
assume red_1 = mulLymm6_1 && true;
smull mulH_2 red_2 ymm9_2 ymm0_2;
assert true && red_2 = mulLymm6_2;
assume red_2 = mulLymm6_2 && true;
smull mulH_3 red_3 ymm9_3 ymm0_3;
assert true && red_3 = mulLymm6_3;
assume red_3 = mulLymm6_3 && true;
smull mulH_4 red_4 ymm9_4 ymm0_4;
assert true && red_4 = mulLymm6_4;
assume red_4 = mulLymm6_4 && true;
smull mulH_5 red_5 ymm9_5 ymm0_5;
assert true && red_5 = mulLymm6_5;
assume red_5 = mulLymm6_5 && true;
smull mulH_6 red_6 ymm9_6 ymm0_6;
assert true && red_6 = mulLymm6_6;
assume red_6 = mulLymm6_6 && true;
smull mulH_7 red_7 ymm9_7 ymm0_7;
assert true && red_7 = mulLymm6_7;
assume red_7 = mulLymm6_7 && true;
smull mulH_8 red_8 ymm9_8 ymm0_8;
assert true && red_8 = mulLymm6_8;
assume red_8 = mulLymm6_8 && true;
smull mulH_9 red_9 ymm9_9 ymm0_9;
assert true && red_9 = mulLymm6_9;
assume red_9 = mulLymm6_9 && true;
smull mulH_a red_a ymm9_a ymm0_a;
assert true && red_a = mulLymm6_a;
assume red_a = mulLymm6_a && true;
smull mulH_b red_b ymm9_b ymm0_b;
assert true && red_b = mulLymm6_b;
assume red_b = mulLymm6_b && true;
smull mulH_c red_c ymm9_c ymm0_c;
assert true && red_c = mulLymm6_c;
assume red_c = mulLymm6_c && true;
smull mulH_d red_d ymm9_d ymm0_d;
assert true && red_d = mulLymm6_d;
assume red_d = mulLymm6_d && true;
smull mulH_e red_e ymm9_e ymm0_e;
assert true && red_e = mulLymm6_e;
assume red_e = mulLymm6_e && true;
smull mulH_f red_f ymm9_f ymm0_f;
assert true && red_f = mulLymm6_f;
assume red_f = mulLymm6_f && true;
mov ymm9_0 mulH_0;
mov ymm9_1 mulH_1;
mov ymm9_2 mulH_2;
mov ymm9_3 mulH_3;
mov ymm9_4 mulH_4;
mov ymm9_5 mulH_5;
mov ymm9_6 mulH_6;
mov ymm9_7 mulH_7;
mov ymm9_8 mulH_8;
mov ymm9_9 mulH_9;
mov ymm9_a mulH_a;
mov ymm9_b mulH_b;
mov ymm9_c mulH_c;
mov ymm9_d mulH_d;
mov ymm9_e mulH_e;
mov ymm9_f mulH_f;
(* vpsubw %ymm9,%ymm6,%ymm6                        #! PC = 0x55555555810c *)
sub ymm6_0 ymm6_0 ymm9_0;
sub ymm6_1 ymm6_1 ymm9_1;
sub ymm6_2 ymm6_2 ymm9_2;
sub ymm6_3 ymm6_3 ymm9_3;
sub ymm6_4 ymm6_4 ymm9_4;
sub ymm6_5 ymm6_5 ymm9_5;
sub ymm6_6 ymm6_6 ymm9_6;
sub ymm6_7 ymm6_7 ymm9_7;
sub ymm6_8 ymm6_8 ymm9_8;
sub ymm6_9 ymm6_9 ymm9_9;
sub ymm6_a ymm6_a ymm9_a;
sub ymm6_b ymm6_b ymm9_b;
sub ymm6_c ymm6_c ymm9_c;
sub ymm6_d ymm6_d ymm9_d;
sub ymm6_e ymm6_e ymm9_e;
sub ymm6_f ymm6_f ymm9_f;
(* vpbroadcastw 0x114(%rdx),%ymm1                  #! EA = L0x555555561234; Value = 0x91c0b85730bc8cf7; PC = 0x555555558111 *)
mov ymm1_0 L0x555555561234;
mov ymm1_1 L0x555555561234;
mov ymm1_2 L0x555555561234;
mov ymm1_3 L0x555555561234;
mov ymm1_4 L0x555555561234;
mov ymm1_5 L0x555555561234;
mov ymm1_6 L0x555555561234;
mov ymm1_7 L0x555555561234;
mov ymm1_8 L0x555555561234;
mov ymm1_9 L0x555555561234;
mov ymm1_a L0x555555561234;
mov ymm1_b L0x555555561234;
mov ymm1_c L0x555555561234;
mov ymm1_d L0x555555561234;
mov ymm1_e L0x555555561234;
mov ymm1_f L0x555555561234;
(* vpbroadcastw 0x314(%rdx),%ymm2                  #! EA = L0x555555561434; Value = 0x11c0fe5708bc12f7; PC = 0x55555555811a *)
mov ymm2_0 L0x555555561434;
mov ymm2_1 L0x555555561434;
mov ymm2_2 L0x555555561434;
mov ymm2_3 L0x555555561434;
mov ymm2_4 L0x555555561434;
mov ymm2_5 L0x555555561434;
mov ymm2_6 L0x555555561434;
mov ymm2_7 L0x555555561434;
mov ymm2_8 L0x555555561434;
mov ymm2_9 L0x555555561434;
mov ymm2_a L0x555555561434;
mov ymm2_b L0x555555561434;
mov ymm2_c L0x555555561434;
mov ymm2_d L0x555555561434;
mov ymm2_e L0x555555561434;
mov ymm2_f L0x555555561434;
(* vpmullw %ymm1,%ymm8,%ymm9                       #! PC = 0x555555558123 *)
smull mulHymm8_0 mulL_0 ymm1_0 ymm8_0;
smull mulHymm8_1 mulL_1 ymm1_1 ymm8_1;
smull mulHymm8_2 mulL_2 ymm1_2 ymm8_2;
smull mulHymm8_3 mulL_3 ymm1_3 ymm8_3;
smull mulHymm8_4 mulL_4 ymm1_4 ymm8_4;
smull mulHymm8_5 mulL_5 ymm1_5 ymm8_5;
smull mulHymm8_6 mulL_6 ymm1_6 ymm8_6;
smull mulHymm8_7 mulL_7 ymm1_7 ymm8_7;
smull mulHymm8_8 mulL_8 ymm1_8 ymm8_8;
smull mulHymm8_9 mulL_9 ymm1_9 ymm8_9;
smull mulHymm8_a mulL_a ymm1_a ymm8_a;
smull mulHymm8_b mulL_b ymm1_b ymm8_b;
smull mulHymm8_c mulL_c ymm1_c ymm8_c;
smull mulHymm8_d mulL_d ymm1_d ymm8_d;
smull mulHymm8_e mulL_e ymm1_e ymm8_e;
smull mulHymm8_f mulL_f ymm1_f ymm8_f;
cast ymm9_0@sint16 mulL_0;
cast ymm9_1@sint16 mulL_1;
cast ymm9_2@sint16 mulL_2;
cast ymm9_3@sint16 mulL_3;
cast ymm9_4@sint16 mulL_4;
cast ymm9_5@sint16 mulL_5;
cast ymm9_6@sint16 mulL_6;
cast ymm9_7@sint16 mulL_7;
cast ymm9_8@sint16 mulL_8;
cast ymm9_9@sint16 mulL_9;
cast ymm9_a@sint16 mulL_a;
cast ymm9_b@sint16 mulL_b;
cast ymm9_c@sint16 mulL_c;
cast ymm9_d@sint16 mulL_d;
cast ymm9_e@sint16 mulL_e;
cast ymm9_f@sint16 mulL_f;
(* vpmulhw %ymm2,%ymm8,%ymm8                       #! PC = 0x555555558127 *)
smull mulH_0 mulLymm8_0 ymm8_0 ymm2_0;
smull mulH_1 mulLymm8_1 ymm8_1 ymm2_1;
smull mulH_2 mulLymm8_2 ymm8_2 ymm2_2;
smull mulH_3 mulLymm8_3 ymm8_3 ymm2_3;
smull mulH_4 mulLymm8_4 ymm8_4 ymm2_4;
smull mulH_5 mulLymm8_5 ymm8_5 ymm2_5;
smull mulH_6 mulLymm8_6 ymm8_6 ymm2_6;
smull mulH_7 mulLymm8_7 ymm8_7 ymm2_7;
smull mulH_8 mulLymm8_8 ymm8_8 ymm2_8;
smull mulH_9 mulLymm8_9 ymm8_9 ymm2_9;
smull mulH_a mulLymm8_a ymm8_a ymm2_a;
smull mulH_b mulLymm8_b ymm8_b ymm2_b;
smull mulH_c mulLymm8_c ymm8_c ymm2_c;
smull mulH_d mulLymm8_d ymm8_d ymm2_d;
smull mulH_e mulLymm8_e ymm8_e ymm2_e;
smull mulH_f mulLymm8_f ymm8_f ymm2_f;
mov ymm8_0 mulH_0;
mov ymm8_1 mulH_1;
mov ymm8_2 mulH_2;
mov ymm8_3 mulH_3;
mov ymm8_4 mulH_4;
mov ymm8_5 mulH_5;
mov ymm8_6 mulH_6;
mov ymm8_7 mulH_7;
mov ymm8_8 mulH_8;
mov ymm8_9 mulH_9;
mov ymm8_a mulH_a;
mov ymm8_b mulH_b;
mov ymm8_c mulH_c;
mov ymm8_d mulH_d;
mov ymm8_e mulH_e;
mov ymm8_f mulH_f;
(* vpmulhw %ymm0,%ymm9,%ymm9                       #! PC = 0x55555555812b *)
smull mulH_0 red_0 ymm9_0 ymm0_0;
assert true && red_0 = mulLymm8_0;
assume red_0 = mulLymm8_0 && true;
smull mulH_1 red_1 ymm9_1 ymm0_1;
assert true && red_1 = mulLymm8_1;
assume red_1 = mulLymm8_1 && true;
smull mulH_2 red_2 ymm9_2 ymm0_2;
assert true && red_2 = mulLymm8_2;
assume red_2 = mulLymm8_2 && true;
smull mulH_3 red_3 ymm9_3 ymm0_3;
assert true && red_3 = mulLymm8_3;
assume red_3 = mulLymm8_3 && true;
smull mulH_4 red_4 ymm9_4 ymm0_4;
assert true && red_4 = mulLymm8_4;
assume red_4 = mulLymm8_4 && true;
smull mulH_5 red_5 ymm9_5 ymm0_5;
assert true && red_5 = mulLymm8_5;
assume red_5 = mulLymm8_5 && true;
smull mulH_6 red_6 ymm9_6 ymm0_6;
assert true && red_6 = mulLymm8_6;
assume red_6 = mulLymm8_6 && true;
smull mulH_7 red_7 ymm9_7 ymm0_7;
assert true && red_7 = mulLymm8_7;
assume red_7 = mulLymm8_7 && true;
smull mulH_8 red_8 ymm9_8 ymm0_8;
assert true && red_8 = mulLymm8_8;
assume red_8 = mulLymm8_8 && true;
smull mulH_9 red_9 ymm9_9 ymm0_9;
assert true && red_9 = mulLymm8_9;
assume red_9 = mulLymm8_9 && true;
smull mulH_a red_a ymm9_a ymm0_a;
assert true && red_a = mulLymm8_a;
assume red_a = mulLymm8_a && true;
smull mulH_b red_b ymm9_b ymm0_b;
assert true && red_b = mulLymm8_b;
assume red_b = mulLymm8_b && true;
smull mulH_c red_c ymm9_c ymm0_c;
assert true && red_c = mulLymm8_c;
assume red_c = mulLymm8_c && true;
smull mulH_d red_d ymm9_d ymm0_d;
assert true && red_d = mulLymm8_d;
assume red_d = mulLymm8_d && true;
smull mulH_e red_e ymm9_e ymm0_e;
assert true && red_e = mulLymm8_e;
assume red_e = mulLymm8_e && true;
smull mulH_f red_f ymm9_f ymm0_f;
assert true && red_f = mulLymm8_f;
assume red_f = mulLymm8_f && true;
mov ymm9_0 mulH_0;
mov ymm9_1 mulH_1;
mov ymm9_2 mulH_2;
mov ymm9_3 mulH_3;
mov ymm9_4 mulH_4;
mov ymm9_5 mulH_5;
mov ymm9_6 mulH_6;
mov ymm9_7 mulH_7;
mov ymm9_8 mulH_8;
mov ymm9_9 mulH_9;
mov ymm9_a mulH_a;
mov ymm9_b mulH_b;
mov ymm9_c mulH_c;
mov ymm9_d mulH_d;
mov ymm9_e mulH_e;
mov ymm9_f mulH_f;
(* vpsubw %ymm9,%ymm8,%ymm8                        #! PC = 0x55555555812f *)
sub ymm8_0 ymm8_0 ymm9_0;
sub ymm8_1 ymm8_1 ymm9_1;
sub ymm8_2 ymm8_2 ymm9_2;
sub ymm8_3 ymm8_3 ymm9_3;
sub ymm8_4 ymm8_4 ymm9_4;
sub ymm8_5 ymm8_5 ymm9_5;
sub ymm8_6 ymm8_6 ymm9_6;
sub ymm8_7 ymm8_7 ymm9_7;
sub ymm8_8 ymm8_8 ymm9_8;
sub ymm8_9 ymm8_9 ymm9_9;
sub ymm8_a ymm8_a ymm9_a;
sub ymm8_b ymm8_b ymm9_b;
sub ymm8_c ymm8_c ymm9_c;
sub ymm8_d ymm8_d ymm9_d;
sub ymm8_e ymm8_e ymm9_e;
sub ymm8_f ymm8_f ymm9_f;
(* vpbroadcastw 0x116(%rdx),%ymm1                  #! EA = L0x555555561236; Value = 0x252491c0b85730bc; PC = 0x555555558134 *)
mov ymm1_0 L0x555555561236;
mov ymm1_1 L0x555555561236;
mov ymm1_2 L0x555555561236;
mov ymm1_3 L0x555555561236;
mov ymm1_4 L0x555555561236;
mov ymm1_5 L0x555555561236;
mov ymm1_6 L0x555555561236;
mov ymm1_7 L0x555555561236;
mov ymm1_8 L0x555555561236;
mov ymm1_9 L0x555555561236;
mov ymm1_a L0x555555561236;
mov ymm1_b L0x555555561236;
mov ymm1_c L0x555555561236;
mov ymm1_d L0x555555561236;
mov ymm1_e L0x555555561236;
mov ymm1_f L0x555555561236;
(* vpbroadcastw 0x316(%rdx),%ymm2                  #! EA = L0x555555561436; Value = 0x0d2411c0fe5708bc; PC = 0x55555555813d *)
mov ymm2_0 L0x555555561436;
mov ymm2_1 L0x555555561436;
mov ymm2_2 L0x555555561436;
mov ymm2_3 L0x555555561436;
mov ymm2_4 L0x555555561436;
mov ymm2_5 L0x555555561436;
mov ymm2_6 L0x555555561436;
mov ymm2_7 L0x555555561436;
mov ymm2_8 L0x555555561436;
mov ymm2_9 L0x555555561436;
mov ymm2_a L0x555555561436;
mov ymm2_b L0x555555561436;
mov ymm2_c L0x555555561436;
mov ymm2_d L0x555555561436;
mov ymm2_e L0x555555561436;
mov ymm2_f L0x555555561436;
(* vpmullw %ymm1,%ymm11,%ymm9                      #! PC = 0x555555558146 *)
smull mulHymm11_0 mulL_0 ymm1_0 ymm11_0;
smull mulHymm11_1 mulL_1 ymm1_1 ymm11_1;
smull mulHymm11_2 mulL_2 ymm1_2 ymm11_2;
smull mulHymm11_3 mulL_3 ymm1_3 ymm11_3;
smull mulHymm11_4 mulL_4 ymm1_4 ymm11_4;
smull mulHymm11_5 mulL_5 ymm1_5 ymm11_5;
smull mulHymm11_6 mulL_6 ymm1_6 ymm11_6;
smull mulHymm11_7 mulL_7 ymm1_7 ymm11_7;
smull mulHymm11_8 mulL_8 ymm1_8 ymm11_8;
smull mulHymm11_9 mulL_9 ymm1_9 ymm11_9;
smull mulHymm11_a mulL_a ymm1_a ymm11_a;
smull mulHymm11_b mulL_b ymm1_b ymm11_b;
smull mulHymm11_c mulL_c ymm1_c ymm11_c;
smull mulHymm11_d mulL_d ymm1_d ymm11_d;
smull mulHymm11_e mulL_e ymm1_e ymm11_e;
smull mulHymm11_f mulL_f ymm1_f ymm11_f;
cast ymm9_0@sint16 mulL_0;
cast ymm9_1@sint16 mulL_1;
cast ymm9_2@sint16 mulL_2;
cast ymm9_3@sint16 mulL_3;
cast ymm9_4@sint16 mulL_4;
cast ymm9_5@sint16 mulL_5;
cast ymm9_6@sint16 mulL_6;
cast ymm9_7@sint16 mulL_7;
cast ymm9_8@sint16 mulL_8;
cast ymm9_9@sint16 mulL_9;
cast ymm9_a@sint16 mulL_a;
cast ymm9_b@sint16 mulL_b;
cast ymm9_c@sint16 mulL_c;
cast ymm9_d@sint16 mulL_d;
cast ymm9_e@sint16 mulL_e;
cast ymm9_f@sint16 mulL_f;
(* vpmulhw %ymm2,%ymm11,%ymm11                     #! PC = 0x55555555814a *)
smull mulH_0 mulLymm11_0 ymm11_0 ymm2_0;
smull mulH_1 mulLymm11_1 ymm11_1 ymm2_1;
smull mulH_2 mulLymm11_2 ymm11_2 ymm2_2;
smull mulH_3 mulLymm11_3 ymm11_3 ymm2_3;
smull mulH_4 mulLymm11_4 ymm11_4 ymm2_4;
smull mulH_5 mulLymm11_5 ymm11_5 ymm2_5;
smull mulH_6 mulLymm11_6 ymm11_6 ymm2_6;
smull mulH_7 mulLymm11_7 ymm11_7 ymm2_7;
smull mulH_8 mulLymm11_8 ymm11_8 ymm2_8;
smull mulH_9 mulLymm11_9 ymm11_9 ymm2_9;
smull mulH_a mulLymm11_a ymm11_a ymm2_a;
smull mulH_b mulLymm11_b ymm11_b ymm2_b;
smull mulH_c mulLymm11_c ymm11_c ymm2_c;
smull mulH_d mulLymm11_d ymm11_d ymm2_d;
smull mulH_e mulLymm11_e ymm11_e ymm2_e;
smull mulH_f mulLymm11_f ymm11_f ymm2_f;
mov ymm11_0 mulH_0;
mov ymm11_1 mulH_1;
mov ymm11_2 mulH_2;
mov ymm11_3 mulH_3;
mov ymm11_4 mulH_4;
mov ymm11_5 mulH_5;
mov ymm11_6 mulH_6;
mov ymm11_7 mulH_7;
mov ymm11_8 mulH_8;
mov ymm11_9 mulH_9;
mov ymm11_a mulH_a;
mov ymm11_b mulH_b;
mov ymm11_c mulH_c;
mov ymm11_d mulH_d;
mov ymm11_e mulH_e;
mov ymm11_f mulH_f;
(* vpmulhw %ymm0,%ymm9,%ymm9                       #! PC = 0x55555555814e *)
smull mulH_0 red_0 ymm9_0 ymm0_0;
assert true && red_0 = mulLymm11_0;
assume red_0 = mulLymm11_0 && true;
smull mulH_1 red_1 ymm9_1 ymm0_1;
assert true && red_1 = mulLymm11_1;
assume red_1 = mulLymm11_1 && true;
smull mulH_2 red_2 ymm9_2 ymm0_2;
assert true && red_2 = mulLymm11_2;
assume red_2 = mulLymm11_2 && true;
smull mulH_3 red_3 ymm9_3 ymm0_3;
assert true && red_3 = mulLymm11_3;
assume red_3 = mulLymm11_3 && true;
smull mulH_4 red_4 ymm9_4 ymm0_4;
assert true && red_4 = mulLymm11_4;
assume red_4 = mulLymm11_4 && true;
smull mulH_5 red_5 ymm9_5 ymm0_5;
assert true && red_5 = mulLymm11_5;
assume red_5 = mulLymm11_5 && true;
smull mulH_6 red_6 ymm9_6 ymm0_6;
assert true && red_6 = mulLymm11_6;
assume red_6 = mulLymm11_6 && true;
smull mulH_7 red_7 ymm9_7 ymm0_7;
assert true && red_7 = mulLymm11_7;
assume red_7 = mulLymm11_7 && true;
smull mulH_8 red_8 ymm9_8 ymm0_8;
assert true && red_8 = mulLymm11_8;
assume red_8 = mulLymm11_8 && true;
smull mulH_9 red_9 ymm9_9 ymm0_9;
assert true && red_9 = mulLymm11_9;
assume red_9 = mulLymm11_9 && true;
smull mulH_a red_a ymm9_a ymm0_a;
assert true && red_a = mulLymm11_a;
assume red_a = mulLymm11_a && true;
smull mulH_b red_b ymm9_b ymm0_b;
assert true && red_b = mulLymm11_b;
assume red_b = mulLymm11_b && true;
smull mulH_c red_c ymm9_c ymm0_c;
assert true && red_c = mulLymm11_c;
assume red_c = mulLymm11_c && true;
smull mulH_d red_d ymm9_d ymm0_d;
assert true && red_d = mulLymm11_d;
assume red_d = mulLymm11_d && true;
smull mulH_e red_e ymm9_e ymm0_e;
assert true && red_e = mulLymm11_e;
assume red_e = mulLymm11_e && true;
smull mulH_f red_f ymm9_f ymm0_f;
assert true && red_f = mulLymm11_f;
assume red_f = mulLymm11_f && true;
mov ymm9_0 mulH_0;
mov ymm9_1 mulH_1;
mov ymm9_2 mulH_2;
mov ymm9_3 mulH_3;
mov ymm9_4 mulH_4;
mov ymm9_5 mulH_5;
mov ymm9_6 mulH_6;
mov ymm9_7 mulH_7;
mov ymm9_8 mulH_8;
mov ymm9_9 mulH_9;
mov ymm9_a mulH_a;
mov ymm9_b mulH_b;
mov ymm9_c mulH_c;
mov ymm9_d mulH_d;
mov ymm9_e mulH_e;
mov ymm9_f mulH_f;
(* vpsubw %ymm9,%ymm11,%ymm11                      #! PC = 0x555555558152 *)
sub ymm11_0 ymm11_0 ymm9_0;
sub ymm11_1 ymm11_1 ymm9_1;
sub ymm11_2 ymm11_2 ymm9_2;
sub ymm11_3 ymm11_3 ymm9_3;
sub ymm11_4 ymm11_4 ymm9_4;
sub ymm11_5 ymm11_5 ymm9_5;
sub ymm11_6 ymm11_6 ymm9_6;
sub ymm11_7 ymm11_7 ymm9_7;
sub ymm11_8 ymm11_8 ymm9_8;
sub ymm11_9 ymm11_9 ymm9_9;
sub ymm11_a ymm11_a ymm9_a;
sub ymm11_b ymm11_b ymm9_b;
sub ymm11_c ymm11_c ymm9_c;
sub ymm11_d ymm11_d ymm9_d;
sub ymm11_e ymm11_e ymm9_e;
sub ymm11_f ymm11_f ymm9_f;
(* vpaddw %ymm3,%ymm7,%ymm9                        #! PC = 0x555555558157 *)
add ymm9_0 ymm7_0 ymm3_0;
add ymm9_1 ymm7_1 ymm3_1;
add ymm9_2 ymm7_2 ymm3_2;
add ymm9_3 ymm7_3 ymm3_3;
add ymm9_4 ymm7_4 ymm3_4;
add ymm9_5 ymm7_5 ymm3_5;
add ymm9_6 ymm7_6 ymm3_6;
add ymm9_7 ymm7_7 ymm3_7;
add ymm9_8 ymm7_8 ymm3_8;
add ymm9_9 ymm7_9 ymm3_9;
add ymm9_a ymm7_a ymm3_a;
add ymm9_b ymm7_b ymm3_b;
add ymm9_c ymm7_c ymm3_c;
add ymm9_d ymm7_d ymm3_d;
add ymm9_e ymm7_e ymm3_e;
add ymm9_f ymm7_f ymm3_f;
(* vpsubw %ymm3,%ymm7,%ymm3                        #! PC = 0x55555555815b *)
sub ymm3_0 ymm7_0 ymm3_0;
sub ymm3_1 ymm7_1 ymm3_1;
sub ymm3_2 ymm7_2 ymm3_2;
sub ymm3_3 ymm7_3 ymm3_3;
sub ymm3_4 ymm7_4 ymm3_4;
sub ymm3_5 ymm7_5 ymm3_5;
sub ymm3_6 ymm7_6 ymm3_6;
sub ymm3_7 ymm7_7 ymm3_7;
sub ymm3_8 ymm7_8 ymm3_8;
sub ymm3_9 ymm7_9 ymm3_9;
sub ymm3_a ymm7_a ymm3_a;
sub ymm3_b ymm7_b ymm3_b;
sub ymm3_c ymm7_c ymm3_c;
sub ymm3_d ymm7_d ymm3_d;
sub ymm3_e ymm7_e ymm3_e;
sub ymm3_f ymm7_f ymm3_f;
(* vpaddw %ymm6,%ymm5,%ymm7                        #! PC = 0x55555555815f *)
add ymm7_0 ymm5_0 ymm6_0;
add ymm7_1 ymm5_1 ymm6_1;
add ymm7_2 ymm5_2 ymm6_2;
add ymm7_3 ymm5_3 ymm6_3;
add ymm7_4 ymm5_4 ymm6_4;
add ymm7_5 ymm5_5 ymm6_5;
add ymm7_6 ymm5_6 ymm6_6;
add ymm7_7 ymm5_7 ymm6_7;
add ymm7_8 ymm5_8 ymm6_8;
add ymm7_9 ymm5_9 ymm6_9;
add ymm7_a ymm5_a ymm6_a;
add ymm7_b ymm5_b ymm6_b;
add ymm7_c ymm5_c ymm6_c;
add ymm7_d ymm5_d ymm6_d;
add ymm7_e ymm5_e ymm6_e;
add ymm7_f ymm5_f ymm6_f;
(* vpsubw %ymm6,%ymm5,%ymm6                        #! PC = 0x555555558163 *)
sub ymm6_0 ymm5_0 ymm6_0;
sub ymm6_1 ymm5_1 ymm6_1;
sub ymm6_2 ymm5_2 ymm6_2;
sub ymm6_3 ymm5_3 ymm6_3;
sub ymm6_4 ymm5_4 ymm6_4;
sub ymm6_5 ymm5_5 ymm6_5;
sub ymm6_6 ymm5_6 ymm6_6;
sub ymm6_7 ymm5_7 ymm6_7;
sub ymm6_8 ymm5_8 ymm6_8;
sub ymm6_9 ymm5_9 ymm6_9;
sub ymm6_a ymm5_a ymm6_a;
sub ymm6_b ymm5_b ymm6_b;
sub ymm6_c ymm5_c ymm6_c;
sub ymm6_d ymm5_d ymm6_d;
sub ymm6_e ymm5_e ymm6_e;
sub ymm6_f ymm5_f ymm6_f;
(* vpaddw %ymm8,%ymm4,%ymm5                        #! PC = 0x555555558167 *)
add ymm5_0 ymm4_0 ymm8_0;
add ymm5_1 ymm4_1 ymm8_1;
add ymm5_2 ymm4_2 ymm8_2;
add ymm5_3 ymm4_3 ymm8_3;
add ymm5_4 ymm4_4 ymm8_4;
add ymm5_5 ymm4_5 ymm8_5;
add ymm5_6 ymm4_6 ymm8_6;
add ymm5_7 ymm4_7 ymm8_7;
add ymm5_8 ymm4_8 ymm8_8;
add ymm5_9 ymm4_9 ymm8_9;
add ymm5_a ymm4_a ymm8_a;
add ymm5_b ymm4_b ymm8_b;
add ymm5_c ymm4_c ymm8_c;
add ymm5_d ymm4_d ymm8_d;
add ymm5_e ymm4_e ymm8_e;
add ymm5_f ymm4_f ymm8_f;
(* vpsubw %ymm8,%ymm4,%ymm8                        #! PC = 0x55555555816c *)
sub ymm8_0 ymm4_0 ymm8_0;
sub ymm8_1 ymm4_1 ymm8_1;
sub ymm8_2 ymm4_2 ymm8_2;
sub ymm8_3 ymm4_3 ymm8_3;
sub ymm8_4 ymm4_4 ymm8_4;
sub ymm8_5 ymm4_5 ymm8_5;
sub ymm8_6 ymm4_6 ymm8_6;
sub ymm8_7 ymm4_7 ymm8_7;
sub ymm8_8 ymm4_8 ymm8_8;
sub ymm8_9 ymm4_9 ymm8_9;
sub ymm8_a ymm4_a ymm8_a;
sub ymm8_b ymm4_b ymm8_b;
sub ymm8_c ymm4_c ymm8_c;
sub ymm8_d ymm4_d ymm8_d;
sub ymm8_e ymm4_e ymm8_e;
sub ymm8_f ymm4_f ymm8_f;
(* vpaddw %ymm11,%ymm10,%ymm4                      #! PC = 0x555555558171 *)
add ymm4_0 ymm10_0 ymm11_0;
add ymm4_1 ymm10_1 ymm11_1;
add ymm4_2 ymm10_2 ymm11_2;
add ymm4_3 ymm10_3 ymm11_3;
add ymm4_4 ymm10_4 ymm11_4;
add ymm4_5 ymm10_5 ymm11_5;
add ymm4_6 ymm10_6 ymm11_6;
add ymm4_7 ymm10_7 ymm11_7;
add ymm4_8 ymm10_8 ymm11_8;
add ymm4_9 ymm10_9 ymm11_9;
add ymm4_a ymm10_a ymm11_a;
add ymm4_b ymm10_b ymm11_b;
add ymm4_c ymm10_c ymm11_c;
add ymm4_d ymm10_d ymm11_d;
add ymm4_e ymm10_e ymm11_e;
add ymm4_f ymm10_f ymm11_f;
(* vpsubw %ymm11,%ymm10,%ymm11                     #! PC = 0x555555558176 *)
sub ymm11_0 ymm10_0 ymm11_0;
sub ymm11_1 ymm10_1 ymm11_1;
sub ymm11_2 ymm10_2 ymm11_2;
sub ymm11_3 ymm10_3 ymm11_3;
sub ymm11_4 ymm10_4 ymm11_4;
sub ymm11_5 ymm10_5 ymm11_5;
sub ymm11_6 ymm10_6 ymm11_6;
sub ymm11_7 ymm10_7 ymm11_7;
sub ymm11_8 ymm10_8 ymm11_8;
sub ymm11_9 ymm10_9 ymm11_9;
sub ymm11_a ymm10_a ymm11_a;
sub ymm11_b ymm10_b ymm11_b;
sub ymm11_c ymm10_c ymm11_c;
sub ymm11_d ymm10_d ymm11_d;
sub ymm11_e ymm10_e ymm11_e;
sub ymm11_f ymm10_f ymm11_f;


(**************** LEVELS 3-5, 2 *****************)


(**************** CUT 149,  8 *****************)

rcut 
  and [
(-27555)@16<=s ymm9_0,ymm9_0<=s 27555@16,(-27555)@16<=s ymm9_1,ymm9_1<=s 27555@16,
(-27555)@16<=s ymm9_2,ymm9_2<=s 27555@16,(-27555)@16<=s ymm9_3,ymm9_3<=s 27555@16,
(-27555)@16<=s ymm9_4,ymm9_4<=s 27555@16,(-27555)@16<=s ymm9_5,ymm9_5<=s 27555@16,
(-27555)@16<=s ymm9_6,ymm9_6<=s 27555@16,(-27555)@16<=s ymm9_7,ymm9_7<=s 27555@16,
(-27555)@16<=s ymm9_8,ymm9_8<=s 27555@16,(-27555)@16<=s ymm9_9,ymm9_9<=s 27555@16,
(-27555)@16<=s ymm9_a,ymm9_a<=s 27555@16,(-27555)@16<=s ymm9_b,ymm9_b<=s 27555@16,
(-27555)@16<=s ymm9_c,ymm9_c<=s 27555@16,(-27555)@16<=s ymm9_d,ymm9_d<=s 27555@16,
(-27555)@16<=s ymm9_e,ymm9_e<=s 27555@16,(-27555)@16<=s ymm9_f,ymm9_f<=s 27555@16,
(-27555)@16<=s ymm3_0,ymm3_0<=s 27555@16,(-27555)@16<=s ymm3_1,ymm3_1<=s 27555@16,
(-27555)@16<=s ymm3_2,ymm3_2<=s 27555@16,(-27555)@16<=s ymm3_3,ymm3_3<=s 27555@16,
(-27555)@16<=s ymm3_4,ymm3_4<=s 27555@16,(-27555)@16<=s ymm3_5,ymm3_5<=s 27555@16,
(-27555)@16<=s ymm3_6,ymm3_6<=s 27555@16,(-27555)@16<=s ymm3_7,ymm3_7<=s 27555@16,
(-27555)@16<=s ymm3_8,ymm3_8<=s 27555@16,(-27555)@16<=s ymm3_9,ymm3_9<=s 27555@16,
(-27555)@16<=s ymm3_a,ymm3_a<=s 27555@16,(-27555)@16<=s ymm3_b,ymm3_b<=s 27555@16,
(-27555)@16<=s ymm3_c,ymm3_c<=s 27555@16,(-27555)@16<=s ymm3_d,ymm3_d<=s 27555@16,
(-27555)@16<=s ymm3_e,ymm3_e<=s 27555@16,(-27555)@16<=s ymm3_f,ymm3_f<=s 27555@16,
(-26931)@16<=s ymm7_0,ymm7_0<=s 26931@16,(-26931)@16<=s ymm7_1,ymm7_1<=s 26931@16,
(-26931)@16<=s ymm7_2,ymm7_2<=s 26931@16,(-26931)@16<=s ymm7_3,ymm7_3<=s 26931@16,
(-26931)@16<=s ymm7_4,ymm7_4<=s 26931@16,(-26931)@16<=s ymm7_5,ymm7_5<=s 26931@16,
(-26931)@16<=s ymm7_6,ymm7_6<=s 26931@16,(-26931)@16<=s ymm7_7,ymm7_7<=s 26931@16,
(-26931)@16<=s ymm7_8,ymm7_8<=s 26931@16,(-26931)@16<=s ymm7_9,ymm7_9<=s 26931@16,
(-26931)@16<=s ymm7_a,ymm7_a<=s 26931@16,(-26931)@16<=s ymm7_b,ymm7_b<=s 26931@16,
(-26931)@16<=s ymm7_c,ymm7_c<=s 26931@16,(-26931)@16<=s ymm7_d,ymm7_d<=s 26931@16,
(-26931)@16<=s ymm7_e,ymm7_e<=s 26931@16,(-26931)@16<=s ymm7_f,ymm7_f<=s 26931@16,
(-26931)@16<=s ymm6_0,ymm6_0<=s 26931@16,(-26931)@16<=s ymm6_1,ymm6_1<=s 26931@16,
(-26931)@16<=s ymm6_2,ymm6_2<=s 26931@16,(-26931)@16<=s ymm6_3,ymm6_3<=s 26931@16,
(-26931)@16<=s ymm6_4,ymm6_4<=s 26931@16,(-26931)@16<=s ymm6_5,ymm6_5<=s 26931@16,
(-26931)@16<=s ymm6_6,ymm6_6<=s 26931@16,(-26931)@16<=s ymm6_7,ymm6_7<=s 26931@16,
(-26931)@16<=s ymm6_8,ymm6_8<=s 26931@16,(-26931)@16<=s ymm6_9,ymm6_9<=s 26931@16,
(-26931)@16<=s ymm6_a,ymm6_a<=s 26931@16,(-26931)@16<=s ymm6_b,ymm6_b<=s 26931@16,
(-26931)@16<=s ymm6_c,ymm6_c<=s 26931@16,(-26931)@16<=s ymm6_d,ymm6_d<=s 26931@16,
(-26931)@16<=s ymm6_e,ymm6_e<=s 26931@16,(-26931)@16<=s ymm6_f,ymm6_f<=s 26931@16,
(-28577)@16<=s ymm5_0,ymm5_0<=s 28577@16,(-28577)@16<=s ymm5_1,ymm5_1<=s 28577@16,
(-28577)@16<=s ymm5_2,ymm5_2<=s 28577@16,(-28577)@16<=s ymm5_3,ymm5_3<=s 28577@16,
(-28577)@16<=s ymm5_4,ymm5_4<=s 28577@16,(-28577)@16<=s ymm5_5,ymm5_5<=s 28577@16,
(-28577)@16<=s ymm5_6,ymm5_6<=s 28577@16,(-28577)@16<=s ymm5_7,ymm5_7<=s 28577@16,
(-28577)@16<=s ymm5_8,ymm5_8<=s 28577@16,(-28577)@16<=s ymm5_9,ymm5_9<=s 28577@16,
(-28577)@16<=s ymm5_a,ymm5_a<=s 28577@16,(-28577)@16<=s ymm5_b,ymm5_b<=s 28577@16,
(-28577)@16<=s ymm5_c,ymm5_c<=s 28577@16,(-28577)@16<=s ymm5_d,ymm5_d<=s 28577@16,
(-28577)@16<=s ymm5_e,ymm5_e<=s 28577@16,(-28577)@16<=s ymm5_f,ymm5_f<=s 28577@16,
(-28577)@16<=s ymm8_0,ymm8_0<=s 28577@16,(-28577)@16<=s ymm8_1,ymm8_1<=s 28577@16,
(-28577)@16<=s ymm8_2,ymm8_2<=s 28577@16,(-28577)@16<=s ymm8_3,ymm8_3<=s 28577@16,
(-28577)@16<=s ymm8_4,ymm8_4<=s 28577@16,(-28577)@16<=s ymm8_5,ymm8_5<=s 28577@16,
(-28577)@16<=s ymm8_6,ymm8_6<=s 28577@16,(-28577)@16<=s ymm8_7,ymm8_7<=s 28577@16,
(-28577)@16<=s ymm8_8,ymm8_8<=s 28577@16,(-28577)@16<=s ymm8_9,ymm8_9<=s 28577@16,
(-28577)@16<=s ymm8_a,ymm8_a<=s 28577@16,(-28577)@16<=s ymm8_b,ymm8_b<=s 28577@16,
(-28577)@16<=s ymm8_c,ymm8_c<=s 28577@16,(-28577)@16<=s ymm8_d,ymm8_d<=s 28577@16,
(-28577)@16<=s ymm8_e,ymm8_e<=s 28577@16,(-28577)@16<=s ymm8_f,ymm8_f<=s 28577@16,
(-27716)@16<=s ymm4_0,ymm4_0<=s 27716@16,(-27716)@16<=s ymm4_1,ymm4_1<=s 27716@16,
(-27716)@16<=s ymm4_2,ymm4_2<=s 27716@16,(-27716)@16<=s ymm4_3,ymm4_3<=s 27716@16,
(-27716)@16<=s ymm4_4,ymm4_4<=s 27716@16,(-27716)@16<=s ymm4_5,ymm4_5<=s 27716@16,
(-27716)@16<=s ymm4_6,ymm4_6<=s 27716@16,(-27716)@16<=s ymm4_7,ymm4_7<=s 27716@16,
(-27716)@16<=s ymm4_8,ymm4_8<=s 27716@16,(-27716)@16<=s ymm4_9,ymm4_9<=s 27716@16,
(-27716)@16<=s ymm4_a,ymm4_a<=s 27716@16,(-27716)@16<=s ymm4_b,ymm4_b<=s 27716@16,
(-27716)@16<=s ymm4_c,ymm4_c<=s 27716@16,(-27716)@16<=s ymm4_d,ymm4_d<=s 27716@16,
(-27716)@16<=s ymm4_e,ymm4_e<=s 27716@16,(-27716)@16<=s ymm4_f,ymm4_f<=s 27716@16,
(-27716)@16<=s ymm11_0,ymm11_0<=s 27716@16,(-27716)@16<=s ymm11_1,ymm11_1<=s 27716@16,
(-27716)@16<=s ymm11_2,ymm11_2<=s 27716@16,(-27716)@16<=s ymm11_3,ymm11_3<=s 27716@16,
(-27716)@16<=s ymm11_4,ymm11_4<=s 27716@16,(-27716)@16<=s ymm11_5,ymm11_5<=s 27716@16,
(-27716)@16<=s ymm11_6,ymm11_6<=s 27716@16,(-27716)@16<=s ymm11_7,ymm11_7<=s 27716@16,
(-27716)@16<=s ymm11_8,ymm11_8<=s 27716@16,(-27716)@16<=s ymm11_9,ymm11_9<=s 27716@16,
(-27716)@16<=s ymm11_a,ymm11_a<=s 27716@16,(-27716)@16<=s ymm11_b,ymm11_b<=s 27716@16,
(-27716)@16<=s ymm11_c,ymm11_c<=s 27716@16,(-27716)@16<=s ymm11_d,ymm11_d<=s 27716@16,
(-27716)@16<=s ymm11_e,ymm11_e<=s 27716@16,(-27716)@16<=s ymm11_f,ymm11_f<=s 27716@16
] prove with [ all ghosts, cuts [ 0 ] ];



(* vmovdqa 0x8f5d(%rip),%ymm1        # 0x5555555610e0 <nttmul_idxdata+64>#! EA = L0x5555555610e0; Value = 0x0d0c090805040100; PC = 0x55555555817b *)
mov ymm1_0 L0x5555555610e0;
mov ymm1_1 L0x5555555610e2;
mov ymm1_2 L0x5555555610e4;
mov ymm1_3 L0x5555555610e6;
mov ymm1_4 L0x5555555610e8;
mov ymm1_5 L0x5555555610ea;
mov ymm1_6 L0x5555555610ec;
mov ymm1_7 L0x5555555610ee;
mov ymm1_8 L0x5555555610f0;
mov ymm1_9 L0x5555555610f2;
mov ymm1_a L0x5555555610f4;
mov ymm1_b L0x5555555610f6;
mov ymm1_c L0x5555555610f8;
mov ymm1_d L0x5555555610fa;
mov ymm1_e L0x5555555610fc;
mov ymm1_f L0x5555555610fe;
(* vpshufb %ymm1,%ymm9,%ymm9                       #! PC = 0x555555558183 *)
assert true && ymm1_0 = 0x0100@16;
mov shuf_0 ymm9_0;
assert true && ymm1_1 = 0x0504@16;
mov shuf_1 ymm9_2;
assert true && ymm1_2 = 0x0908@16;
mov shuf_2 ymm9_4;
assert true && ymm1_3 = 0x0d0c@16;
mov shuf_3 ymm9_6;
assert true && ymm1_4 = 0x0302@16;
mov shuf_4 ymm9_1;
assert true && ymm1_5 = 0x0706@16;
mov shuf_5 ymm9_3;
assert true && ymm1_6 = 0x0b0a@16;
mov shuf_6 ymm9_5;
assert true && ymm1_7 = 0x0f0e@16;
mov shuf_7 ymm9_7;
assert true && ymm1_8 = 0x0100@16;
mov shuf_8 ymm9_8;
assert true && ymm1_9 = 0x0504@16;
mov shuf_9 ymm9_a;
assert true && ymm1_a = 0x0908@16;
mov shuf_a ymm9_c;
assert true && ymm1_b = 0x0d0c@16;
mov shuf_b ymm9_e;
assert true && ymm1_c = 0x0302@16;
mov shuf_c ymm9_9;
assert true && ymm1_d = 0x0706@16;
mov shuf_d ymm9_b;
assert true && ymm1_e = 0x0b0a@16;
mov shuf_e ymm9_d;
assert true && ymm1_f = 0x0f0e@16;
mov shuf_f ymm9_f;
mov ymm9_0 shuf_0;
mov ymm9_1 shuf_1;
mov ymm9_2 shuf_2;
mov ymm9_3 shuf_3;
mov ymm9_4 shuf_4;
mov ymm9_5 shuf_5;
mov ymm9_6 shuf_6;
mov ymm9_7 shuf_7;
mov ymm9_8 shuf_8;
mov ymm9_9 shuf_9;
mov ymm9_a shuf_a;
mov ymm9_b shuf_b;
mov ymm9_c shuf_c;
mov ymm9_d shuf_d;
mov ymm9_e shuf_e;
mov ymm9_f shuf_f;
(* vpermq $0xd8,%ymm9,%ymm9                        #! PC = 0x555555558188 *)
mov permq_0 ymm9_0;
mov permq_1 ymm9_1;
mov permq_2 ymm9_2;
mov permq_3 ymm9_3;
mov permq_4 ymm9_8;
mov permq_5 ymm9_9;
mov permq_6 ymm9_a;
mov permq_7 ymm9_b;
mov permq_8 ymm9_4;
mov permq_9 ymm9_5;
mov permq_a ymm9_6;
mov permq_b ymm9_7;
mov permq_c ymm9_c;
mov permq_d ymm9_d;
mov permq_e ymm9_e;
mov permq_f ymm9_f;
mov ymm9_0 permq_0;
mov ymm9_1 permq_1;
mov ymm9_2 permq_2;
mov ymm9_3 permq_3;
mov ymm9_4 permq_4;
mov ymm9_5 permq_5;
mov ymm9_6 permq_6;
mov ymm9_7 permq_7;
mov ymm9_8 permq_8;
mov ymm9_9 permq_9;
mov ymm9_a permq_a;
mov ymm9_b permq_b;
mov ymm9_c permq_c;
mov ymm9_d permq_d;
mov ymm9_e permq_e;
mov ymm9_f permq_f;
(* vpshufb %ymm1,%ymm3,%ymm3                       #! PC = 0x55555555818e *)
assert true && ymm1_0 = 0x0100@16;
mov shuf_0 ymm3_0;
assert true && ymm1_1 = 0x0504@16;
mov shuf_1 ymm3_2;
assert true && ymm1_2 = 0x0908@16;
mov shuf_2 ymm3_4;
assert true && ymm1_3 = 0x0d0c@16;
mov shuf_3 ymm3_6;
assert true && ymm1_4 = 0x0302@16;
mov shuf_4 ymm3_1;
assert true && ymm1_5 = 0x0706@16;
mov shuf_5 ymm3_3;
assert true && ymm1_6 = 0x0b0a@16;
mov shuf_6 ymm3_5;
assert true && ymm1_7 = 0x0f0e@16;
mov shuf_7 ymm3_7;
assert true && ymm1_8 = 0x0100@16;
mov shuf_8 ymm3_8;
assert true && ymm1_9 = 0x0504@16;
mov shuf_9 ymm3_a;
assert true && ymm1_a = 0x0908@16;
mov shuf_a ymm3_c;
assert true && ymm1_b = 0x0d0c@16;
mov shuf_b ymm3_e;
assert true && ymm1_c = 0x0302@16;
mov shuf_c ymm3_9;
assert true && ymm1_d = 0x0706@16;
mov shuf_d ymm3_b;
assert true && ymm1_e = 0x0b0a@16;
mov shuf_e ymm3_d;
assert true && ymm1_f = 0x0f0e@16;
mov shuf_f ymm3_f;
mov ymm3_0 shuf_0;
mov ymm3_1 shuf_1;
mov ymm3_2 shuf_2;
mov ymm3_3 shuf_3;
mov ymm3_4 shuf_4;
mov ymm3_5 shuf_5;
mov ymm3_6 shuf_6;
mov ymm3_7 shuf_7;
mov ymm3_8 shuf_8;
mov ymm3_9 shuf_9;
mov ymm3_a shuf_a;
mov ymm3_b shuf_b;
mov ymm3_c shuf_c;
mov ymm3_d shuf_d;
mov ymm3_e shuf_e;
mov ymm3_f shuf_f;
(* vpermq $0xd8,%ymm3,%ymm3                        #! PC = 0x555555558193 *)
mov permq_0 ymm3_0;
mov permq_1 ymm3_1;
mov permq_2 ymm3_2;
mov permq_3 ymm3_3;
mov permq_4 ymm3_8;
mov permq_5 ymm3_9;
mov permq_6 ymm3_a;
mov permq_7 ymm3_b;
mov permq_8 ymm3_4;
mov permq_9 ymm3_5;
mov permq_a ymm3_6;
mov permq_b ymm3_7;
mov permq_c ymm3_c;
mov permq_d ymm3_d;
mov permq_e ymm3_e;
mov permq_f ymm3_f;
mov ymm3_0 permq_0;
mov ymm3_1 permq_1;
mov ymm3_2 permq_2;
mov ymm3_3 permq_3;
mov ymm3_4 permq_4;
mov ymm3_5 permq_5;
mov ymm3_6 permq_6;
mov ymm3_7 permq_7;
mov ymm3_8 permq_8;
mov ymm3_9 permq_9;
mov ymm3_a permq_a;
mov ymm3_b permq_b;
mov ymm3_c permq_c;
mov ymm3_d permq_d;
mov ymm3_e permq_e;
mov ymm3_f permq_f;
(* vpshufb %ymm1,%ymm7,%ymm7                       #! PC = 0x555555558199 *)
assert true && ymm1_0 = 0x0100@16;
mov shuf_0 ymm7_0;
assert true && ymm1_1 = 0x0504@16;
mov shuf_1 ymm7_2;
assert true && ymm1_2 = 0x0908@16;
mov shuf_2 ymm7_4;
assert true && ymm1_3 = 0x0d0c@16;
mov shuf_3 ymm7_6;
assert true && ymm1_4 = 0x0302@16;
mov shuf_4 ymm7_1;
assert true && ymm1_5 = 0x0706@16;
mov shuf_5 ymm7_3;
assert true && ymm1_6 = 0x0b0a@16;
mov shuf_6 ymm7_5;
assert true && ymm1_7 = 0x0f0e@16;
mov shuf_7 ymm7_7;
assert true && ymm1_8 = 0x0100@16;
mov shuf_8 ymm7_8;
assert true && ymm1_9 = 0x0504@16;
mov shuf_9 ymm7_a;
assert true && ymm1_a = 0x0908@16;
mov shuf_a ymm7_c;
assert true && ymm1_b = 0x0d0c@16;
mov shuf_b ymm7_e;
assert true && ymm1_c = 0x0302@16;
mov shuf_c ymm7_9;
assert true && ymm1_d = 0x0706@16;
mov shuf_d ymm7_b;
assert true && ymm1_e = 0x0b0a@16;
mov shuf_e ymm7_d;
assert true && ymm1_f = 0x0f0e@16;
mov shuf_f ymm7_f;
mov ymm7_0 shuf_0;
mov ymm7_1 shuf_1;
mov ymm7_2 shuf_2;
mov ymm7_3 shuf_3;
mov ymm7_4 shuf_4;
mov ymm7_5 shuf_5;
mov ymm7_6 shuf_6;
mov ymm7_7 shuf_7;
mov ymm7_8 shuf_8;
mov ymm7_9 shuf_9;
mov ymm7_a shuf_a;
mov ymm7_b shuf_b;
mov ymm7_c shuf_c;
mov ymm7_d shuf_d;
mov ymm7_e shuf_e;
mov ymm7_f shuf_f;
(* vpermq $0xd8,%ymm7,%ymm7                        #! PC = 0x55555555819e *)
mov permq_0 ymm7_0;
mov permq_1 ymm7_1;
mov permq_2 ymm7_2;
mov permq_3 ymm7_3;
mov permq_4 ymm7_8;
mov permq_5 ymm7_9;
mov permq_6 ymm7_a;
mov permq_7 ymm7_b;
mov permq_8 ymm7_4;
mov permq_9 ymm7_5;
mov permq_a ymm7_6;
mov permq_b ymm7_7;
mov permq_c ymm7_c;
mov permq_d ymm7_d;
mov permq_e ymm7_e;
mov permq_f ymm7_f;
mov ymm7_0 permq_0;
mov ymm7_1 permq_1;
mov ymm7_2 permq_2;
mov ymm7_3 permq_3;
mov ymm7_4 permq_4;
mov ymm7_5 permq_5;
mov ymm7_6 permq_6;
mov ymm7_7 permq_7;
mov ymm7_8 permq_8;
mov ymm7_9 permq_9;
mov ymm7_a permq_a;
mov ymm7_b permq_b;
mov ymm7_c permq_c;
mov ymm7_d permq_d;
mov ymm7_e permq_e;
mov ymm7_f permq_f;
(* vpshufb %ymm1,%ymm6,%ymm6                       #! PC = 0x5555555581a4 *)
assert true && ymm1_0 = 0x0100@16;
mov shuf_0 ymm6_0;
assert true && ymm1_1 = 0x0504@16;
mov shuf_1 ymm6_2;
assert true && ymm1_2 = 0x0908@16;
mov shuf_2 ymm6_4;
assert true && ymm1_3 = 0x0d0c@16;
mov shuf_3 ymm6_6;
assert true && ymm1_4 = 0x0302@16;
mov shuf_4 ymm6_1;
assert true && ymm1_5 = 0x0706@16;
mov shuf_5 ymm6_3;
assert true && ymm1_6 = 0x0b0a@16;
mov shuf_6 ymm6_5;
assert true && ymm1_7 = 0x0f0e@16;
mov shuf_7 ymm6_7;
assert true && ymm1_8 = 0x0100@16;
mov shuf_8 ymm6_8;
assert true && ymm1_9 = 0x0504@16;
mov shuf_9 ymm6_a;
assert true && ymm1_a = 0x0908@16;
mov shuf_a ymm6_c;
assert true && ymm1_b = 0x0d0c@16;
mov shuf_b ymm6_e;
assert true && ymm1_c = 0x0302@16;
mov shuf_c ymm6_9;
assert true && ymm1_d = 0x0706@16;
mov shuf_d ymm6_b;
assert true && ymm1_e = 0x0b0a@16;
mov shuf_e ymm6_d;
assert true && ymm1_f = 0x0f0e@16;
mov shuf_f ymm6_f;
mov ymm6_0 shuf_0;
mov ymm6_1 shuf_1;
mov ymm6_2 shuf_2;
mov ymm6_3 shuf_3;
mov ymm6_4 shuf_4;
mov ymm6_5 shuf_5;
mov ymm6_6 shuf_6;
mov ymm6_7 shuf_7;
mov ymm6_8 shuf_8;
mov ymm6_9 shuf_9;
mov ymm6_a shuf_a;
mov ymm6_b shuf_b;
mov ymm6_c shuf_c;
mov ymm6_d shuf_d;
mov ymm6_e shuf_e;
mov ymm6_f shuf_f;
(* vpermq $0xd8,%ymm6,%ymm6                        #! PC = 0x5555555581a9 *)
mov permq_0 ymm6_0;
mov permq_1 ymm6_1;
mov permq_2 ymm6_2;
mov permq_3 ymm6_3;
mov permq_4 ymm6_8;
mov permq_5 ymm6_9;
mov permq_6 ymm6_a;
mov permq_7 ymm6_b;
mov permq_8 ymm6_4;
mov permq_9 ymm6_5;
mov permq_a ymm6_6;
mov permq_b ymm6_7;
mov permq_c ymm6_c;
mov permq_d ymm6_d;
mov permq_e ymm6_e;
mov permq_f ymm6_f;
mov ymm6_0 permq_0;
mov ymm6_1 permq_1;
mov ymm6_2 permq_2;
mov ymm6_3 permq_3;
mov ymm6_4 permq_4;
mov ymm6_5 permq_5;
mov ymm6_6 permq_6;
mov ymm6_7 permq_7;
mov ymm6_8 permq_8;
mov ymm6_9 permq_9;
mov ymm6_a permq_a;
mov ymm6_b permq_b;
mov ymm6_c permq_c;
mov ymm6_d permq_d;
mov ymm6_e permq_e;
mov ymm6_f permq_f;
(* vpshufb %ymm1,%ymm5,%ymm5                       #! PC = 0x5555555581af *)
assert true && ymm1_0 = 0x0100@16;
mov shuf_0 ymm5_0;
assert true && ymm1_1 = 0x0504@16;
mov shuf_1 ymm5_2;
assert true && ymm1_2 = 0x0908@16;
mov shuf_2 ymm5_4;
assert true && ymm1_3 = 0x0d0c@16;
mov shuf_3 ymm5_6;
assert true && ymm1_4 = 0x0302@16;
mov shuf_4 ymm5_1;
assert true && ymm1_5 = 0x0706@16;
mov shuf_5 ymm5_3;
assert true && ymm1_6 = 0x0b0a@16;
mov shuf_6 ymm5_5;
assert true && ymm1_7 = 0x0f0e@16;
mov shuf_7 ymm5_7;
assert true && ymm1_8 = 0x0100@16;
mov shuf_8 ymm5_8;
assert true && ymm1_9 = 0x0504@16;
mov shuf_9 ymm5_a;
assert true && ymm1_a = 0x0908@16;
mov shuf_a ymm5_c;
assert true && ymm1_b = 0x0d0c@16;
mov shuf_b ymm5_e;
assert true && ymm1_c = 0x0302@16;
mov shuf_c ymm5_9;
assert true && ymm1_d = 0x0706@16;
mov shuf_d ymm5_b;
assert true && ymm1_e = 0x0b0a@16;
mov shuf_e ymm5_d;
assert true && ymm1_f = 0x0f0e@16;
mov shuf_f ymm5_f;
mov ymm5_0 shuf_0;
mov ymm5_1 shuf_1;
mov ymm5_2 shuf_2;
mov ymm5_3 shuf_3;
mov ymm5_4 shuf_4;
mov ymm5_5 shuf_5;
mov ymm5_6 shuf_6;
mov ymm5_7 shuf_7;
mov ymm5_8 shuf_8;
mov ymm5_9 shuf_9;
mov ymm5_a shuf_a;
mov ymm5_b shuf_b;
mov ymm5_c shuf_c;
mov ymm5_d shuf_d;
mov ymm5_e shuf_e;
mov ymm5_f shuf_f;
(* vpermq $0xd8,%ymm5,%ymm5                        #! PC = 0x5555555581b4 *)
mov permq_0 ymm5_0;
mov permq_1 ymm5_1;
mov permq_2 ymm5_2;
mov permq_3 ymm5_3;
mov permq_4 ymm5_8;
mov permq_5 ymm5_9;
mov permq_6 ymm5_a;
mov permq_7 ymm5_b;
mov permq_8 ymm5_4;
mov permq_9 ymm5_5;
mov permq_a ymm5_6;
mov permq_b ymm5_7;
mov permq_c ymm5_c;
mov permq_d ymm5_d;
mov permq_e ymm5_e;
mov permq_f ymm5_f;
mov ymm5_0 permq_0;
mov ymm5_1 permq_1;
mov ymm5_2 permq_2;
mov ymm5_3 permq_3;
mov ymm5_4 permq_4;
mov ymm5_5 permq_5;
mov ymm5_6 permq_6;
mov ymm5_7 permq_7;
mov ymm5_8 permq_8;
mov ymm5_9 permq_9;
mov ymm5_a permq_a;
mov ymm5_b permq_b;
mov ymm5_c permq_c;
mov ymm5_d permq_d;
mov ymm5_e permq_e;
mov ymm5_f permq_f;
(* vpshufb %ymm1,%ymm8,%ymm8                       #! PC = 0x5555555581ba *)
assert true && ymm1_0 = 0x0100@16;
mov shuf_0 ymm8_0;
assert true && ymm1_1 = 0x0504@16;
mov shuf_1 ymm8_2;
assert true && ymm1_2 = 0x0908@16;
mov shuf_2 ymm8_4;
assert true && ymm1_3 = 0x0d0c@16;
mov shuf_3 ymm8_6;
assert true && ymm1_4 = 0x0302@16;
mov shuf_4 ymm8_1;
assert true && ymm1_5 = 0x0706@16;
mov shuf_5 ymm8_3;
assert true && ymm1_6 = 0x0b0a@16;
mov shuf_6 ymm8_5;
assert true && ymm1_7 = 0x0f0e@16;
mov shuf_7 ymm8_7;
assert true && ymm1_8 = 0x0100@16;
mov shuf_8 ymm8_8;
assert true && ymm1_9 = 0x0504@16;
mov shuf_9 ymm8_a;
assert true && ymm1_a = 0x0908@16;
mov shuf_a ymm8_c;
assert true && ymm1_b = 0x0d0c@16;
mov shuf_b ymm8_e;
assert true && ymm1_c = 0x0302@16;
mov shuf_c ymm8_9;
assert true && ymm1_d = 0x0706@16;
mov shuf_d ymm8_b;
assert true && ymm1_e = 0x0b0a@16;
mov shuf_e ymm8_d;
assert true && ymm1_f = 0x0f0e@16;
mov shuf_f ymm8_f;
mov ymm8_0 shuf_0;
mov ymm8_1 shuf_1;
mov ymm8_2 shuf_2;
mov ymm8_3 shuf_3;
mov ymm8_4 shuf_4;
mov ymm8_5 shuf_5;
mov ymm8_6 shuf_6;
mov ymm8_7 shuf_7;
mov ymm8_8 shuf_8;
mov ymm8_9 shuf_9;
mov ymm8_a shuf_a;
mov ymm8_b shuf_b;
mov ymm8_c shuf_c;
mov ymm8_d shuf_d;
mov ymm8_e shuf_e;
mov ymm8_f shuf_f;
(* vpermq $0xd8,%ymm8,%ymm8                        #! PC = 0x5555555581bf *)
mov permq_0 ymm8_0;
mov permq_1 ymm8_1;
mov permq_2 ymm8_2;
mov permq_3 ymm8_3;
mov permq_4 ymm8_8;
mov permq_5 ymm8_9;
mov permq_6 ymm8_a;
mov permq_7 ymm8_b;
mov permq_8 ymm8_4;
mov permq_9 ymm8_5;
mov permq_a ymm8_6;
mov permq_b ymm8_7;
mov permq_c ymm8_c;
mov permq_d ymm8_d;
mov permq_e ymm8_e;
mov permq_f ymm8_f;
mov ymm8_0 permq_0;
mov ymm8_1 permq_1;
mov ymm8_2 permq_2;
mov ymm8_3 permq_3;
mov ymm8_4 permq_4;
mov ymm8_5 permq_5;
mov ymm8_6 permq_6;
mov ymm8_7 permq_7;
mov ymm8_8 permq_8;
mov ymm8_9 permq_9;
mov ymm8_a permq_a;
mov ymm8_b permq_b;
mov ymm8_c permq_c;
mov ymm8_d permq_d;
mov ymm8_e permq_e;
mov ymm8_f permq_f;
(* vpshufb %ymm1,%ymm4,%ymm4                       #! PC = 0x5555555581c5 *)
assert true && ymm1_0 = 0x0100@16;
mov shuf_0 ymm4_0;
assert true && ymm1_1 = 0x0504@16;
mov shuf_1 ymm4_2;
assert true && ymm1_2 = 0x0908@16;
mov shuf_2 ymm4_4;
assert true && ymm1_3 = 0x0d0c@16;
mov shuf_3 ymm4_6;
assert true && ymm1_4 = 0x0302@16;
mov shuf_4 ymm4_1;
assert true && ymm1_5 = 0x0706@16;
mov shuf_5 ymm4_3;
assert true && ymm1_6 = 0x0b0a@16;
mov shuf_6 ymm4_5;
assert true && ymm1_7 = 0x0f0e@16;
mov shuf_7 ymm4_7;
assert true && ymm1_8 = 0x0100@16;
mov shuf_8 ymm4_8;
assert true && ymm1_9 = 0x0504@16;
mov shuf_9 ymm4_a;
assert true && ymm1_a = 0x0908@16;
mov shuf_a ymm4_c;
assert true && ymm1_b = 0x0d0c@16;
mov shuf_b ymm4_e;
assert true && ymm1_c = 0x0302@16;
mov shuf_c ymm4_9;
assert true && ymm1_d = 0x0706@16;
mov shuf_d ymm4_b;
assert true && ymm1_e = 0x0b0a@16;
mov shuf_e ymm4_d;
assert true && ymm1_f = 0x0f0e@16;
mov shuf_f ymm4_f;
mov ymm4_0 shuf_0;
mov ymm4_1 shuf_1;
mov ymm4_2 shuf_2;
mov ymm4_3 shuf_3;
mov ymm4_4 shuf_4;
mov ymm4_5 shuf_5;
mov ymm4_6 shuf_6;
mov ymm4_7 shuf_7;
mov ymm4_8 shuf_8;
mov ymm4_9 shuf_9;
mov ymm4_a shuf_a;
mov ymm4_b shuf_b;
mov ymm4_c shuf_c;
mov ymm4_d shuf_d;
mov ymm4_e shuf_e;
mov ymm4_f shuf_f;
(* vpermq $0xd8,%ymm4,%ymm4                        #! PC = 0x5555555581ca *)
mov permq_0 ymm4_0;
mov permq_1 ymm4_1;
mov permq_2 ymm4_2;
mov permq_3 ymm4_3;
mov permq_4 ymm4_8;
mov permq_5 ymm4_9;
mov permq_6 ymm4_a;
mov permq_7 ymm4_b;
mov permq_8 ymm4_4;
mov permq_9 ymm4_5;
mov permq_a ymm4_6;
mov permq_b ymm4_7;
mov permq_c ymm4_c;
mov permq_d ymm4_d;
mov permq_e ymm4_e;
mov permq_f ymm4_f;
mov ymm4_0 permq_0;
mov ymm4_1 permq_1;
mov ymm4_2 permq_2;
mov ymm4_3 permq_3;
mov ymm4_4 permq_4;
mov ymm4_5 permq_5;
mov ymm4_6 permq_6;
mov ymm4_7 permq_7;
mov ymm4_8 permq_8;
mov ymm4_9 permq_9;
mov ymm4_a permq_a;
mov ymm4_b permq_b;
mov ymm4_c permq_c;
mov ymm4_d permq_d;
mov ymm4_e permq_e;
mov ymm4_f permq_f;
(* vpshufb %ymm1,%ymm11,%ymm11                     #! PC = 0x5555555581d0 *)
assert true && ymm1_0 = 0x0100@16;
mov shuf_0 ymm11_0;
assert true && ymm1_1 = 0x0504@16;
mov shuf_1 ymm11_2;
assert true && ymm1_2 = 0x0908@16;
mov shuf_2 ymm11_4;
assert true && ymm1_3 = 0x0d0c@16;
mov shuf_3 ymm11_6;
assert true && ymm1_4 = 0x0302@16;
mov shuf_4 ymm11_1;
assert true && ymm1_5 = 0x0706@16;
mov shuf_5 ymm11_3;
assert true && ymm1_6 = 0x0b0a@16;
mov shuf_6 ymm11_5;
assert true && ymm1_7 = 0x0f0e@16;
mov shuf_7 ymm11_7;
assert true && ymm1_8 = 0x0100@16;
mov shuf_8 ymm11_8;
assert true && ymm1_9 = 0x0504@16;
mov shuf_9 ymm11_a;
assert true && ymm1_a = 0x0908@16;
mov shuf_a ymm11_c;
assert true && ymm1_b = 0x0d0c@16;
mov shuf_b ymm11_e;
assert true && ymm1_c = 0x0302@16;
mov shuf_c ymm11_9;
assert true && ymm1_d = 0x0706@16;
mov shuf_d ymm11_b;
assert true && ymm1_e = 0x0b0a@16;
mov shuf_e ymm11_d;
assert true && ymm1_f = 0x0f0e@16;
mov shuf_f ymm11_f;
mov ymm11_0 shuf_0;
mov ymm11_1 shuf_1;
mov ymm11_2 shuf_2;
mov ymm11_3 shuf_3;
mov ymm11_4 shuf_4;
mov ymm11_5 shuf_5;
mov ymm11_6 shuf_6;
mov ymm11_7 shuf_7;
mov ymm11_8 shuf_8;
mov ymm11_9 shuf_9;
mov ymm11_a shuf_a;
mov ymm11_b shuf_b;
mov ymm11_c shuf_c;
mov ymm11_d shuf_d;
mov ymm11_e shuf_e;
mov ymm11_f shuf_f;
(* vpermq $0xd8,%ymm11,%ymm11                      #! PC = 0x5555555581d5 *)
mov permq_0 ymm11_0;
mov permq_1 ymm11_1;
mov permq_2 ymm11_2;
mov permq_3 ymm11_3;
mov permq_4 ymm11_8;
mov permq_5 ymm11_9;
mov permq_6 ymm11_a;
mov permq_7 ymm11_b;
mov permq_8 ymm11_4;
mov permq_9 ymm11_5;
mov permq_a ymm11_6;
mov permq_b ymm11_7;
mov permq_c ymm11_c;
mov permq_d ymm11_d;
mov permq_e ymm11_e;
mov permq_f ymm11_f;
mov ymm11_0 permq_0;
mov ymm11_1 permq_1;
mov ymm11_2 permq_2;
mov ymm11_3 permq_3;
mov ymm11_4 permq_4;
mov ymm11_5 permq_5;
mov ymm11_6 permq_6;
mov ymm11_7 permq_7;
mov ymm11_8 permq_8;
mov ymm11_9 permq_9;
mov ymm11_a permq_a;
mov ymm11_b permq_b;
mov ymm11_c permq_c;
mov ymm11_d permq_d;
mov ymm11_e permq_e;
mov ymm11_f permq_f;
(* vpunpcklwd %ymm3,%ymm9,%ymm10                   #! PC = 0x5555555581db *)
mov lwd_0 ymm9_0;
mov lwd_1 ymm3_0;
mov lwd_2 ymm9_1;
mov lwd_3 ymm3_1;
mov lwd_4 ymm9_2;
mov lwd_5 ymm3_2;
mov lwd_6 ymm9_3;
mov lwd_7 ymm3_3;
mov lwd_8 ymm9_8;
mov lwd_9 ymm3_8;
mov lwd_a ymm9_9;
mov lwd_b ymm3_9;
mov lwd_c ymm9_a;
mov lwd_d ymm3_a;
mov lwd_e ymm9_b;
mov lwd_f ymm3_b;
mov ymm10_0 lwd_0;
mov ymm10_1 lwd_1;
mov ymm10_2 lwd_2;
mov ymm10_3 lwd_3;
mov ymm10_4 lwd_4;
mov ymm10_5 lwd_5;
mov ymm10_6 lwd_6;
mov ymm10_7 lwd_7;
mov ymm10_8 lwd_8;
mov ymm10_9 lwd_9;
mov ymm10_a lwd_a;
mov ymm10_b lwd_b;
mov ymm10_c lwd_c;
mov ymm10_d lwd_d;
mov ymm10_e lwd_e;
mov ymm10_f lwd_f;
(* vpunpckhwd %ymm3,%ymm9,%ymm3                    #! PC = 0x5555555581df *)
mov hwd_0 ymm9_4;
mov hwd_1 ymm3_4;
mov hwd_2 ymm9_5;
mov hwd_3 ymm3_5;
mov hwd_4 ymm9_6;
mov hwd_5 ymm3_6;
mov hwd_6 ymm9_7;
mov hwd_7 ymm3_7;
mov hwd_8 ymm9_c;
mov hwd_9 ymm3_c;
mov hwd_a ymm9_d;
mov hwd_b ymm3_d;
mov hwd_c ymm9_e;
mov hwd_d ymm3_e;
mov hwd_e ymm9_f;
mov hwd_f ymm3_f;
mov ymm3_0 hwd_0;
mov ymm3_1 hwd_1;
mov ymm3_2 hwd_2;
mov ymm3_3 hwd_3;
mov ymm3_4 hwd_4;
mov ymm3_5 hwd_5;
mov ymm3_6 hwd_6;
mov ymm3_7 hwd_7;
mov ymm3_8 hwd_8;
mov ymm3_9 hwd_9;
mov ymm3_a hwd_a;
mov ymm3_b hwd_b;
mov ymm3_c hwd_c;
mov ymm3_d hwd_d;
mov ymm3_e hwd_e;
mov ymm3_f hwd_f;
(* vpunpcklwd %ymm6,%ymm7,%ymm9                    #! PC = 0x5555555581e3 *)
mov lwd_0 ymm7_0;
mov lwd_1 ymm6_0;
mov lwd_2 ymm7_1;
mov lwd_3 ymm6_1;
mov lwd_4 ymm7_2;
mov lwd_5 ymm6_2;
mov lwd_6 ymm7_3;
mov lwd_7 ymm6_3;
mov lwd_8 ymm7_8;
mov lwd_9 ymm6_8;
mov lwd_a ymm7_9;
mov lwd_b ymm6_9;
mov lwd_c ymm7_a;
mov lwd_d ymm6_a;
mov lwd_e ymm7_b;
mov lwd_f ymm6_b;
mov ymm9_0 lwd_0;
mov ymm9_1 lwd_1;
mov ymm9_2 lwd_2;
mov ymm9_3 lwd_3;
mov ymm9_4 lwd_4;
mov ymm9_5 lwd_5;
mov ymm9_6 lwd_6;
mov ymm9_7 lwd_7;
mov ymm9_8 lwd_8;
mov ymm9_9 lwd_9;
mov ymm9_a lwd_a;
mov ymm9_b lwd_b;
mov ymm9_c lwd_c;
mov ymm9_d lwd_d;
mov ymm9_e lwd_e;
mov ymm9_f lwd_f;
(* vpunpckhwd %ymm6,%ymm7,%ymm6                    #! PC = 0x5555555581e7 *)
mov hwd_0 ymm7_4;
mov hwd_1 ymm6_4;
mov hwd_2 ymm7_5;
mov hwd_3 ymm6_5;
mov hwd_4 ymm7_6;
mov hwd_5 ymm6_6;
mov hwd_6 ymm7_7;
mov hwd_7 ymm6_7;
mov hwd_8 ymm7_c;
mov hwd_9 ymm6_c;
mov hwd_a ymm7_d;
mov hwd_b ymm6_d;
mov hwd_c ymm7_e;
mov hwd_d ymm6_e;
mov hwd_e ymm7_f;
mov hwd_f ymm6_f;
mov ymm6_0 hwd_0;
mov ymm6_1 hwd_1;
mov ymm6_2 hwd_2;
mov ymm6_3 hwd_3;
mov ymm6_4 hwd_4;
mov ymm6_5 hwd_5;
mov ymm6_6 hwd_6;
mov ymm6_7 hwd_7;
mov ymm6_8 hwd_8;
mov ymm6_9 hwd_9;
mov ymm6_a hwd_a;
mov ymm6_b hwd_b;
mov ymm6_c hwd_c;
mov ymm6_d hwd_d;
mov ymm6_e hwd_e;
mov ymm6_f hwd_f;
(* vpunpcklwd %ymm8,%ymm5,%ymm7                    #! PC = 0x5555555581eb *)
mov lwd_0 ymm5_0;
mov lwd_1 ymm8_0;
mov lwd_2 ymm5_1;
mov lwd_3 ymm8_1;
mov lwd_4 ymm5_2;
mov lwd_5 ymm8_2;
mov lwd_6 ymm5_3;
mov lwd_7 ymm8_3;
mov lwd_8 ymm5_8;
mov lwd_9 ymm8_8;
mov lwd_a ymm5_9;
mov lwd_b ymm8_9;
mov lwd_c ymm5_a;
mov lwd_d ymm8_a;
mov lwd_e ymm5_b;
mov lwd_f ymm8_b;
mov ymm7_0 lwd_0;
mov ymm7_1 lwd_1;
mov ymm7_2 lwd_2;
mov ymm7_3 lwd_3;
mov ymm7_4 lwd_4;
mov ymm7_5 lwd_5;
mov ymm7_6 lwd_6;
mov ymm7_7 lwd_7;
mov ymm7_8 lwd_8;
mov ymm7_9 lwd_9;
mov ymm7_a lwd_a;
mov ymm7_b lwd_b;
mov ymm7_c lwd_c;
mov ymm7_d lwd_d;
mov ymm7_e lwd_e;
mov ymm7_f lwd_f;
(* vpunpckhwd %ymm8,%ymm5,%ymm8                    #! PC = 0x5555555581f0 *)
mov hwd_0 ymm5_4;
mov hwd_1 ymm8_4;
mov hwd_2 ymm5_5;
mov hwd_3 ymm8_5;
mov hwd_4 ymm5_6;
mov hwd_5 ymm8_6;
mov hwd_6 ymm5_7;
mov hwd_7 ymm8_7;
mov hwd_8 ymm5_c;
mov hwd_9 ymm8_c;
mov hwd_a ymm5_d;
mov hwd_b ymm8_d;
mov hwd_c ymm5_e;
mov hwd_d ymm8_e;
mov hwd_e ymm5_f;
mov hwd_f ymm8_f;
mov ymm8_0 hwd_0;
mov ymm8_1 hwd_1;
mov ymm8_2 hwd_2;
mov ymm8_3 hwd_3;
mov ymm8_4 hwd_4;
mov ymm8_5 hwd_5;
mov ymm8_6 hwd_6;
mov ymm8_7 hwd_7;
mov ymm8_8 hwd_8;
mov ymm8_9 hwd_9;
mov ymm8_a hwd_a;
mov ymm8_b hwd_b;
mov ymm8_c hwd_c;
mov ymm8_d hwd_d;
mov ymm8_e hwd_e;
mov ymm8_f hwd_f;
(* vpunpcklwd %ymm11,%ymm4,%ymm5                   #! PC = 0x5555555581f5 *)
mov lwd_0 ymm4_0;
mov lwd_1 ymm11_0;
mov lwd_2 ymm4_1;
mov lwd_3 ymm11_1;
mov lwd_4 ymm4_2;
mov lwd_5 ymm11_2;
mov lwd_6 ymm4_3;
mov lwd_7 ymm11_3;
mov lwd_8 ymm4_8;
mov lwd_9 ymm11_8;
mov lwd_a ymm4_9;
mov lwd_b ymm11_9;
mov lwd_c ymm4_a;
mov lwd_d ymm11_a;
mov lwd_e ymm4_b;
mov lwd_f ymm11_b;
mov ymm5_0 lwd_0;
mov ymm5_1 lwd_1;
mov ymm5_2 lwd_2;
mov ymm5_3 lwd_3;
mov ymm5_4 lwd_4;
mov ymm5_5 lwd_5;
mov ymm5_6 lwd_6;
mov ymm5_7 lwd_7;
mov ymm5_8 lwd_8;
mov ymm5_9 lwd_9;
mov ymm5_a lwd_a;
mov ymm5_b lwd_b;
mov ymm5_c lwd_c;
mov ymm5_d lwd_d;
mov ymm5_e lwd_e;
mov ymm5_f lwd_f;
(* vpunpckhwd %ymm11,%ymm4,%ymm11                  #! PC = 0x5555555581fa *)
mov hwd_0 ymm4_4;
mov hwd_1 ymm11_4;
mov hwd_2 ymm4_5;
mov hwd_3 ymm11_5;
mov hwd_4 ymm4_6;
mov hwd_5 ymm11_6;
mov hwd_6 ymm4_7;
mov hwd_7 ymm11_7;
mov hwd_8 ymm4_c;
mov hwd_9 ymm11_c;
mov hwd_a ymm4_d;
mov hwd_b ymm11_d;
mov hwd_c ymm4_e;
mov hwd_d ymm11_e;
mov hwd_e ymm4_f;
mov hwd_f ymm11_f;
mov ymm11_0 hwd_0;
mov ymm11_1 hwd_1;
mov ymm11_2 hwd_2;
mov ymm11_3 hwd_3;
mov ymm11_4 hwd_4;
mov ymm11_5 hwd_5;
mov ymm11_6 hwd_6;
mov ymm11_7 hwd_7;
mov ymm11_8 hwd_8;
mov ymm11_9 hwd_9;
mov ymm11_a hwd_a;
mov ymm11_b hwd_b;
mov ymm11_c hwd_c;
mov ymm11_d hwd_d;
mov ymm11_e hwd_e;
mov ymm11_f hwd_f;
(* vpbroadcastd 0x120(%rdx),%ymm1                  #! EA = L0x555555561240; Value = 0xee3d92395a10450b; PC = 0x5555555581ff *)
mov ymm1_0 L0x555555561240;
mov ymm1_1 L0x555555561242;
mov ymm1_2 L0x555555561240;
mov ymm1_3 L0x555555561242;
mov ymm1_4 L0x555555561240;
mov ymm1_5 L0x555555561242;
mov ymm1_6 L0x555555561240;
mov ymm1_7 L0x555555561242;
mov ymm1_8 L0x555555561240;
mov ymm1_9 L0x555555561242;
mov ymm1_a L0x555555561240;
mov ymm1_b L0x555555561242;
mov ymm1_c L0x555555561240;
mov ymm1_d L0x555555561242;
mov ymm1_e L0x555555561240;
mov ymm1_f L0x555555561242;
(* vpbroadcastd 0x320(%rdx),%ymm2                  #! EA = L0x555555561440; Value = 0xf03dec39fa10130b; PC = 0x555555558208 *)
mov ymm2_0 L0x555555561440;
mov ymm2_1 L0x555555561442;
mov ymm2_2 L0x555555561440;
mov ymm2_3 L0x555555561442;
mov ymm2_4 L0x555555561440;
mov ymm2_5 L0x555555561442;
mov ymm2_6 L0x555555561440;
mov ymm2_7 L0x555555561442;
mov ymm2_8 L0x555555561440;
mov ymm2_9 L0x555555561442;
mov ymm2_a L0x555555561440;
mov ymm2_b L0x555555561442;
mov ymm2_c L0x555555561440;
mov ymm2_d L0x555555561442;
mov ymm2_e L0x555555561440;
mov ymm2_f L0x555555561442;
(* vpmullw %ymm1,%ymm3,%ymm4                       #! PC = 0x555555558211 *)
smull mulHymm3_0 mulL_0 ymm1_0 ymm3_0;
smull mulHymm3_1 mulL_1 ymm1_1 ymm3_1;
smull mulHymm3_2 mulL_2 ymm1_2 ymm3_2;
smull mulHymm3_3 mulL_3 ymm1_3 ymm3_3;
smull mulHymm3_4 mulL_4 ymm1_4 ymm3_4;
smull mulHymm3_5 mulL_5 ymm1_5 ymm3_5;
smull mulHymm3_6 mulL_6 ymm1_6 ymm3_6;
smull mulHymm3_7 mulL_7 ymm1_7 ymm3_7;
smull mulHymm3_8 mulL_8 ymm1_8 ymm3_8;
smull mulHymm3_9 mulL_9 ymm1_9 ymm3_9;
smull mulHymm3_a mulL_a ymm1_a ymm3_a;
smull mulHymm3_b mulL_b ymm1_b ymm3_b;
smull mulHymm3_c mulL_c ymm1_c ymm3_c;
smull mulHymm3_d mulL_d ymm1_d ymm3_d;
smull mulHymm3_e mulL_e ymm1_e ymm3_e;
smull mulHymm3_f mulL_f ymm1_f ymm3_f;
cast ymm4_0@sint16 mulL_0;
cast ymm4_1@sint16 mulL_1;
cast ymm4_2@sint16 mulL_2;
cast ymm4_3@sint16 mulL_3;
cast ymm4_4@sint16 mulL_4;
cast ymm4_5@sint16 mulL_5;
cast ymm4_6@sint16 mulL_6;
cast ymm4_7@sint16 mulL_7;
cast ymm4_8@sint16 mulL_8;
cast ymm4_9@sint16 mulL_9;
cast ymm4_a@sint16 mulL_a;
cast ymm4_b@sint16 mulL_b;
cast ymm4_c@sint16 mulL_c;
cast ymm4_d@sint16 mulL_d;
cast ymm4_e@sint16 mulL_e;
cast ymm4_f@sint16 mulL_f;
(* vpmulhw %ymm2,%ymm3,%ymm3                       #! PC = 0x555555558215 *)
smull mulH_0 mulLymm3_0 ymm3_0 ymm2_0;
smull mulH_1 mulLymm3_1 ymm3_1 ymm2_1;
smull mulH_2 mulLymm3_2 ymm3_2 ymm2_2;
smull mulH_3 mulLymm3_3 ymm3_3 ymm2_3;
smull mulH_4 mulLymm3_4 ymm3_4 ymm2_4;
smull mulH_5 mulLymm3_5 ymm3_5 ymm2_5;
smull mulH_6 mulLymm3_6 ymm3_6 ymm2_6;
smull mulH_7 mulLymm3_7 ymm3_7 ymm2_7;
smull mulH_8 mulLymm3_8 ymm3_8 ymm2_8;
smull mulH_9 mulLymm3_9 ymm3_9 ymm2_9;
smull mulH_a mulLymm3_a ymm3_a ymm2_a;
smull mulH_b mulLymm3_b ymm3_b ymm2_b;
smull mulH_c mulLymm3_c ymm3_c ymm2_c;
smull mulH_d mulLymm3_d ymm3_d ymm2_d;
smull mulH_e mulLymm3_e ymm3_e ymm2_e;
smull mulH_f mulLymm3_f ymm3_f ymm2_f;
mov ymm3_0 mulH_0;
mov ymm3_1 mulH_1;
mov ymm3_2 mulH_2;
mov ymm3_3 mulH_3;
mov ymm3_4 mulH_4;
mov ymm3_5 mulH_5;
mov ymm3_6 mulH_6;
mov ymm3_7 mulH_7;
mov ymm3_8 mulH_8;
mov ymm3_9 mulH_9;
mov ymm3_a mulH_a;
mov ymm3_b mulH_b;
mov ymm3_c mulH_c;
mov ymm3_d mulH_d;
mov ymm3_e mulH_e;
mov ymm3_f mulH_f;
(* vpmulhw %ymm0,%ymm4,%ymm4                       #! PC = 0x555555558219 *)
smull mulH_0 red_0 ymm4_0 ymm0_0;
assert true && red_0 = mulLymm3_0;
assume red_0 = mulLymm3_0 && true;
smull mulH_1 red_1 ymm4_1 ymm0_1;
assert true && red_1 = mulLymm3_1;
assume red_1 = mulLymm3_1 && true;
smull mulH_2 red_2 ymm4_2 ymm0_2;
assert true && red_2 = mulLymm3_2;
assume red_2 = mulLymm3_2 && true;
smull mulH_3 red_3 ymm4_3 ymm0_3;
assert true && red_3 = mulLymm3_3;
assume red_3 = mulLymm3_3 && true;
smull mulH_4 red_4 ymm4_4 ymm0_4;
assert true && red_4 = mulLymm3_4;
assume red_4 = mulLymm3_4 && true;
smull mulH_5 red_5 ymm4_5 ymm0_5;
assert true && red_5 = mulLymm3_5;
assume red_5 = mulLymm3_5 && true;
smull mulH_6 red_6 ymm4_6 ymm0_6;
assert true && red_6 = mulLymm3_6;
assume red_6 = mulLymm3_6 && true;
smull mulH_7 red_7 ymm4_7 ymm0_7;
assert true && red_7 = mulLymm3_7;
assume red_7 = mulLymm3_7 && true;
smull mulH_8 red_8 ymm4_8 ymm0_8;
assert true && red_8 = mulLymm3_8;
assume red_8 = mulLymm3_8 && true;
smull mulH_9 red_9 ymm4_9 ymm0_9;
assert true && red_9 = mulLymm3_9;
assume red_9 = mulLymm3_9 && true;
smull mulH_a red_a ymm4_a ymm0_a;
assert true && red_a = mulLymm3_a;
assume red_a = mulLymm3_a && true;
smull mulH_b red_b ymm4_b ymm0_b;
assert true && red_b = mulLymm3_b;
assume red_b = mulLymm3_b && true;
smull mulH_c red_c ymm4_c ymm0_c;
assert true && red_c = mulLymm3_c;
assume red_c = mulLymm3_c && true;
smull mulH_d red_d ymm4_d ymm0_d;
assert true && red_d = mulLymm3_d;
assume red_d = mulLymm3_d && true;
smull mulH_e red_e ymm4_e ymm0_e;
assert true && red_e = mulLymm3_e;
assume red_e = mulLymm3_e && true;
smull mulH_f red_f ymm4_f ymm0_f;
assert true && red_f = mulLymm3_f;
assume red_f = mulLymm3_f && true;
mov ymm4_0 mulH_0;
mov ymm4_1 mulH_1;
mov ymm4_2 mulH_2;
mov ymm4_3 mulH_3;
mov ymm4_4 mulH_4;
mov ymm4_5 mulH_5;
mov ymm4_6 mulH_6;
mov ymm4_7 mulH_7;
mov ymm4_8 mulH_8;
mov ymm4_9 mulH_9;
mov ymm4_a mulH_a;
mov ymm4_b mulH_b;
mov ymm4_c mulH_c;
mov ymm4_d mulH_d;
mov ymm4_e mulH_e;
mov ymm4_f mulH_f;
(* vpsubw %ymm4,%ymm3,%ymm3                        #! PC = 0x55555555821d *)
sub ymm3_0 ymm3_0 ymm4_0;
sub ymm3_1 ymm3_1 ymm4_1;
sub ymm3_2 ymm3_2 ymm4_2;
sub ymm3_3 ymm3_3 ymm4_3;
sub ymm3_4 ymm3_4 ymm4_4;
sub ymm3_5 ymm3_5 ymm4_5;
sub ymm3_6 ymm3_6 ymm4_6;
sub ymm3_7 ymm3_7 ymm4_7;
sub ymm3_8 ymm3_8 ymm4_8;
sub ymm3_9 ymm3_9 ymm4_9;
sub ymm3_a ymm3_a ymm4_a;
sub ymm3_b ymm3_b ymm4_b;
sub ymm3_c ymm3_c ymm4_c;
sub ymm3_d ymm3_d ymm4_d;
sub ymm3_e ymm3_e ymm4_e;
sub ymm3_f ymm3_f ymm4_f;
(* vpbroadcastd 0x124(%rdx),%ymm1                  #! EA = L0x555555561244; Value = 0x679663c7ee3d9239; PC = 0x555555558221 *)
mov ymm1_0 L0x555555561244;
mov ymm1_1 L0x555555561246;
mov ymm1_2 L0x555555561244;
mov ymm1_3 L0x555555561246;
mov ymm1_4 L0x555555561244;
mov ymm1_5 L0x555555561246;
mov ymm1_6 L0x555555561244;
mov ymm1_7 L0x555555561246;
mov ymm1_8 L0x555555561244;
mov ymm1_9 L0x555555561246;
mov ymm1_a L0x555555561244;
mov ymm1_b L0x555555561246;
mov ymm1_c L0x555555561244;
mov ymm1_d L0x555555561246;
mov ymm1_e L0x555555561244;
mov ymm1_f L0x555555561246;
(* vpbroadcastd 0x324(%rdx),%ymm2                  #! EA = L0x555555561444; Value = 0x039609c7f03dec39; PC = 0x55555555822a *)
mov ymm2_0 L0x555555561444;
mov ymm2_1 L0x555555561446;
mov ymm2_2 L0x555555561444;
mov ymm2_3 L0x555555561446;
mov ymm2_4 L0x555555561444;
mov ymm2_5 L0x555555561446;
mov ymm2_6 L0x555555561444;
mov ymm2_7 L0x555555561446;
mov ymm2_8 L0x555555561444;
mov ymm2_9 L0x555555561446;
mov ymm2_a L0x555555561444;
mov ymm2_b L0x555555561446;
mov ymm2_c L0x555555561444;
mov ymm2_d L0x555555561446;
mov ymm2_e L0x555555561444;
mov ymm2_f L0x555555561446;
(* vpmullw %ymm1,%ymm6,%ymm4                       #! PC = 0x555555558233 *)
smull mulHymm6_0 mulL_0 ymm1_0 ymm6_0;
smull mulHymm6_1 mulL_1 ymm1_1 ymm6_1;
smull mulHymm6_2 mulL_2 ymm1_2 ymm6_2;
smull mulHymm6_3 mulL_3 ymm1_3 ymm6_3;
smull mulHymm6_4 mulL_4 ymm1_4 ymm6_4;
smull mulHymm6_5 mulL_5 ymm1_5 ymm6_5;
smull mulHymm6_6 mulL_6 ymm1_6 ymm6_6;
smull mulHymm6_7 mulL_7 ymm1_7 ymm6_7;
smull mulHymm6_8 mulL_8 ymm1_8 ymm6_8;
smull mulHymm6_9 mulL_9 ymm1_9 ymm6_9;
smull mulHymm6_a mulL_a ymm1_a ymm6_a;
smull mulHymm6_b mulL_b ymm1_b ymm6_b;
smull mulHymm6_c mulL_c ymm1_c ymm6_c;
smull mulHymm6_d mulL_d ymm1_d ymm6_d;
smull mulHymm6_e mulL_e ymm1_e ymm6_e;
smull mulHymm6_f mulL_f ymm1_f ymm6_f;
cast ymm4_0@sint16 mulL_0;
cast ymm4_1@sint16 mulL_1;
cast ymm4_2@sint16 mulL_2;
cast ymm4_3@sint16 mulL_3;
cast ymm4_4@sint16 mulL_4;
cast ymm4_5@sint16 mulL_5;
cast ymm4_6@sint16 mulL_6;
cast ymm4_7@sint16 mulL_7;
cast ymm4_8@sint16 mulL_8;
cast ymm4_9@sint16 mulL_9;
cast ymm4_a@sint16 mulL_a;
cast ymm4_b@sint16 mulL_b;
cast ymm4_c@sint16 mulL_c;
cast ymm4_d@sint16 mulL_d;
cast ymm4_e@sint16 mulL_e;
cast ymm4_f@sint16 mulL_f;
(* vpmulhw %ymm2,%ymm6,%ymm6                       #! PC = 0x555555558237 *)
smull mulH_0 mulLymm6_0 ymm6_0 ymm2_0;
smull mulH_1 mulLymm6_1 ymm6_1 ymm2_1;
smull mulH_2 mulLymm6_2 ymm6_2 ymm2_2;
smull mulH_3 mulLymm6_3 ymm6_3 ymm2_3;
smull mulH_4 mulLymm6_4 ymm6_4 ymm2_4;
smull mulH_5 mulLymm6_5 ymm6_5 ymm2_5;
smull mulH_6 mulLymm6_6 ymm6_6 ymm2_6;
smull mulH_7 mulLymm6_7 ymm6_7 ymm2_7;
smull mulH_8 mulLymm6_8 ymm6_8 ymm2_8;
smull mulH_9 mulLymm6_9 ymm6_9 ymm2_9;
smull mulH_a mulLymm6_a ymm6_a ymm2_a;
smull mulH_b mulLymm6_b ymm6_b ymm2_b;
smull mulH_c mulLymm6_c ymm6_c ymm2_c;
smull mulH_d mulLymm6_d ymm6_d ymm2_d;
smull mulH_e mulLymm6_e ymm6_e ymm2_e;
smull mulH_f mulLymm6_f ymm6_f ymm2_f;
mov ymm6_0 mulH_0;
mov ymm6_1 mulH_1;
mov ymm6_2 mulH_2;
mov ymm6_3 mulH_3;
mov ymm6_4 mulH_4;
mov ymm6_5 mulH_5;
mov ymm6_6 mulH_6;
mov ymm6_7 mulH_7;
mov ymm6_8 mulH_8;
mov ymm6_9 mulH_9;
mov ymm6_a mulH_a;
mov ymm6_b mulH_b;
mov ymm6_c mulH_c;
mov ymm6_d mulH_d;
mov ymm6_e mulH_e;
mov ymm6_f mulH_f;
(* vpmulhw %ymm0,%ymm4,%ymm4                       #! PC = 0x55555555823b *)
smull mulH_0 red_0 ymm4_0 ymm0_0;
assert true && red_0 = mulLymm6_0;
assume red_0 = mulLymm6_0 && true;
smull mulH_1 red_1 ymm4_1 ymm0_1;
assert true && red_1 = mulLymm6_1;
assume red_1 = mulLymm6_1 && true;
smull mulH_2 red_2 ymm4_2 ymm0_2;
assert true && red_2 = mulLymm6_2;
assume red_2 = mulLymm6_2 && true;
smull mulH_3 red_3 ymm4_3 ymm0_3;
assert true && red_3 = mulLymm6_3;
assume red_3 = mulLymm6_3 && true;
smull mulH_4 red_4 ymm4_4 ymm0_4;
assert true && red_4 = mulLymm6_4;
assume red_4 = mulLymm6_4 && true;
smull mulH_5 red_5 ymm4_5 ymm0_5;
assert true && red_5 = mulLymm6_5;
assume red_5 = mulLymm6_5 && true;
smull mulH_6 red_6 ymm4_6 ymm0_6;
assert true && red_6 = mulLymm6_6;
assume red_6 = mulLymm6_6 && true;
smull mulH_7 red_7 ymm4_7 ymm0_7;
assert true && red_7 = mulLymm6_7;
assume red_7 = mulLymm6_7 && true;
smull mulH_8 red_8 ymm4_8 ymm0_8;
assert true && red_8 = mulLymm6_8;
assume red_8 = mulLymm6_8 && true;
smull mulH_9 red_9 ymm4_9 ymm0_9;
assert true && red_9 = mulLymm6_9;
assume red_9 = mulLymm6_9 && true;
smull mulH_a red_a ymm4_a ymm0_a;
assert true && red_a = mulLymm6_a;
assume red_a = mulLymm6_a && true;
smull mulH_b red_b ymm4_b ymm0_b;
assert true && red_b = mulLymm6_b;
assume red_b = mulLymm6_b && true;
smull mulH_c red_c ymm4_c ymm0_c;
assert true && red_c = mulLymm6_c;
assume red_c = mulLymm6_c && true;
smull mulH_d red_d ymm4_d ymm0_d;
assert true && red_d = mulLymm6_d;
assume red_d = mulLymm6_d && true;
smull mulH_e red_e ymm4_e ymm0_e;
assert true && red_e = mulLymm6_e;
assume red_e = mulLymm6_e && true;
smull mulH_f red_f ymm4_f ymm0_f;
assert true && red_f = mulLymm6_f;
assume red_f = mulLymm6_f && true;
mov ymm4_0 mulH_0;
mov ymm4_1 mulH_1;
mov ymm4_2 mulH_2;
mov ymm4_3 mulH_3;
mov ymm4_4 mulH_4;
mov ymm4_5 mulH_5;
mov ymm4_6 mulH_6;
mov ymm4_7 mulH_7;
mov ymm4_8 mulH_8;
mov ymm4_9 mulH_9;
mov ymm4_a mulH_a;
mov ymm4_b mulH_b;
mov ymm4_c mulH_c;
mov ymm4_d mulH_d;
mov ymm4_e mulH_e;
mov ymm4_f mulH_f;
(* vpsubw %ymm4,%ymm6,%ymm6                        #! PC = 0x55555555823f *)
sub ymm6_0 ymm6_0 ymm4_0;
sub ymm6_1 ymm6_1 ymm4_1;
sub ymm6_2 ymm6_2 ymm4_2;
sub ymm6_3 ymm6_3 ymm4_3;
sub ymm6_4 ymm6_4 ymm4_4;
sub ymm6_5 ymm6_5 ymm4_5;
sub ymm6_6 ymm6_6 ymm4_6;
sub ymm6_7 ymm6_7 ymm4_7;
sub ymm6_8 ymm6_8 ymm4_8;
sub ymm6_9 ymm6_9 ymm4_9;
sub ymm6_a ymm6_a ymm4_a;
sub ymm6_b ymm6_b ymm4_b;
sub ymm6_c ymm6_c ymm4_c;
sub ymm6_d ymm6_d ymm4_d;
sub ymm6_e ymm6_e ymm4_e;
sub ymm6_f ymm6_f ymm4_f;
(* vpbroadcastd 0x128(%rdx),%ymm1                  #! EA = L0x555555561248; Value = 0xe2fb1c3c679663c7; PC = 0x555555558243 *)
mov ymm1_0 L0x555555561248;
mov ymm1_1 L0x55555556124a;
mov ymm1_2 L0x555555561248;
mov ymm1_3 L0x55555556124a;
mov ymm1_4 L0x555555561248;
mov ymm1_5 L0x55555556124a;
mov ymm1_6 L0x555555561248;
mov ymm1_7 L0x55555556124a;
mov ymm1_8 L0x555555561248;
mov ymm1_9 L0x55555556124a;
mov ymm1_a L0x555555561248;
mov ymm1_b L0x55555556124a;
mov ymm1_c L0x555555561248;
mov ymm1_d L0x55555556124a;
mov ymm1_e L0x555555561248;
mov ymm1_f L0x55555556124a;
(* vpbroadcastd 0x328(%rdx),%ymm2                  #! EA = L0x555555561448; Value = 0x10fbf43c039609c7; PC = 0x55555555824c *)
mov ymm2_0 L0x555555561448;
mov ymm2_1 L0x55555556144a;
mov ymm2_2 L0x555555561448;
mov ymm2_3 L0x55555556144a;
mov ymm2_4 L0x555555561448;
mov ymm2_5 L0x55555556144a;
mov ymm2_6 L0x555555561448;
mov ymm2_7 L0x55555556144a;
mov ymm2_8 L0x555555561448;
mov ymm2_9 L0x55555556144a;
mov ymm2_a L0x555555561448;
mov ymm2_b L0x55555556144a;
mov ymm2_c L0x555555561448;
mov ymm2_d L0x55555556144a;
mov ymm2_e L0x555555561448;
mov ymm2_f L0x55555556144a;
(* vpmullw %ymm1,%ymm8,%ymm4                       #! PC = 0x555555558255 *)
smull mulHymm8_0 mulL_0 ymm1_0 ymm8_0;
smull mulHymm8_1 mulL_1 ymm1_1 ymm8_1;
smull mulHymm8_2 mulL_2 ymm1_2 ymm8_2;
smull mulHymm8_3 mulL_3 ymm1_3 ymm8_3;
smull mulHymm8_4 mulL_4 ymm1_4 ymm8_4;
smull mulHymm8_5 mulL_5 ymm1_5 ymm8_5;
smull mulHymm8_6 mulL_6 ymm1_6 ymm8_6;
smull mulHymm8_7 mulL_7 ymm1_7 ymm8_7;
smull mulHymm8_8 mulL_8 ymm1_8 ymm8_8;
smull mulHymm8_9 mulL_9 ymm1_9 ymm8_9;
smull mulHymm8_a mulL_a ymm1_a ymm8_a;
smull mulHymm8_b mulL_b ymm1_b ymm8_b;
smull mulHymm8_c mulL_c ymm1_c ymm8_c;
smull mulHymm8_d mulL_d ymm1_d ymm8_d;
smull mulHymm8_e mulL_e ymm1_e ymm8_e;
smull mulHymm8_f mulL_f ymm1_f ymm8_f;
cast ymm4_0@sint16 mulL_0;
cast ymm4_1@sint16 mulL_1;
cast ymm4_2@sint16 mulL_2;
cast ymm4_3@sint16 mulL_3;
cast ymm4_4@sint16 mulL_4;
cast ymm4_5@sint16 mulL_5;
cast ymm4_6@sint16 mulL_6;
cast ymm4_7@sint16 mulL_7;
cast ymm4_8@sint16 mulL_8;
cast ymm4_9@sint16 mulL_9;
cast ymm4_a@sint16 mulL_a;
cast ymm4_b@sint16 mulL_b;
cast ymm4_c@sint16 mulL_c;
cast ymm4_d@sint16 mulL_d;
cast ymm4_e@sint16 mulL_e;
cast ymm4_f@sint16 mulL_f;
(* vpmulhw %ymm2,%ymm8,%ymm8                       #! PC = 0x555555558259 *)
smull mulH_0 mulLymm8_0 ymm8_0 ymm2_0;
smull mulH_1 mulLymm8_1 ymm8_1 ymm2_1;
smull mulH_2 mulLymm8_2 ymm8_2 ymm2_2;
smull mulH_3 mulLymm8_3 ymm8_3 ymm2_3;
smull mulH_4 mulLymm8_4 ymm8_4 ymm2_4;
smull mulH_5 mulLymm8_5 ymm8_5 ymm2_5;
smull mulH_6 mulLymm8_6 ymm8_6 ymm2_6;
smull mulH_7 mulLymm8_7 ymm8_7 ymm2_7;
smull mulH_8 mulLymm8_8 ymm8_8 ymm2_8;
smull mulH_9 mulLymm8_9 ymm8_9 ymm2_9;
smull mulH_a mulLymm8_a ymm8_a ymm2_a;
smull mulH_b mulLymm8_b ymm8_b ymm2_b;
smull mulH_c mulLymm8_c ymm8_c ymm2_c;
smull mulH_d mulLymm8_d ymm8_d ymm2_d;
smull mulH_e mulLymm8_e ymm8_e ymm2_e;
smull mulH_f mulLymm8_f ymm8_f ymm2_f;
mov ymm8_0 mulH_0;
mov ymm8_1 mulH_1;
mov ymm8_2 mulH_2;
mov ymm8_3 mulH_3;
mov ymm8_4 mulH_4;
mov ymm8_5 mulH_5;
mov ymm8_6 mulH_6;
mov ymm8_7 mulH_7;
mov ymm8_8 mulH_8;
mov ymm8_9 mulH_9;
mov ymm8_a mulH_a;
mov ymm8_b mulH_b;
mov ymm8_c mulH_c;
mov ymm8_d mulH_d;
mov ymm8_e mulH_e;
mov ymm8_f mulH_f;
(* vpmulhw %ymm0,%ymm4,%ymm4                       #! PC = 0x55555555825d *)
smull mulH_0 red_0 ymm4_0 ymm0_0;
assert true && red_0 = mulLymm8_0;
assume red_0 = mulLymm8_0 && true;
smull mulH_1 red_1 ymm4_1 ymm0_1;
assert true && red_1 = mulLymm8_1;
assume red_1 = mulLymm8_1 && true;
smull mulH_2 red_2 ymm4_2 ymm0_2;
assert true && red_2 = mulLymm8_2;
assume red_2 = mulLymm8_2 && true;
smull mulH_3 red_3 ymm4_3 ymm0_3;
assert true && red_3 = mulLymm8_3;
assume red_3 = mulLymm8_3 && true;
smull mulH_4 red_4 ymm4_4 ymm0_4;
assert true && red_4 = mulLymm8_4;
assume red_4 = mulLymm8_4 && true;
smull mulH_5 red_5 ymm4_5 ymm0_5;
assert true && red_5 = mulLymm8_5;
assume red_5 = mulLymm8_5 && true;
smull mulH_6 red_6 ymm4_6 ymm0_6;
assert true && red_6 = mulLymm8_6;
assume red_6 = mulLymm8_6 && true;
smull mulH_7 red_7 ymm4_7 ymm0_7;
assert true && red_7 = mulLymm8_7;
assume red_7 = mulLymm8_7 && true;
smull mulH_8 red_8 ymm4_8 ymm0_8;
assert true && red_8 = mulLymm8_8;
assume red_8 = mulLymm8_8 && true;
smull mulH_9 red_9 ymm4_9 ymm0_9;
assert true && red_9 = mulLymm8_9;
assume red_9 = mulLymm8_9 && true;
smull mulH_a red_a ymm4_a ymm0_a;
assert true && red_a = mulLymm8_a;
assume red_a = mulLymm8_a && true;
smull mulH_b red_b ymm4_b ymm0_b;
assert true && red_b = mulLymm8_b;
assume red_b = mulLymm8_b && true;
smull mulH_c red_c ymm4_c ymm0_c;
assert true && red_c = mulLymm8_c;
assume red_c = mulLymm8_c && true;
smull mulH_d red_d ymm4_d ymm0_d;
assert true && red_d = mulLymm8_d;
assume red_d = mulLymm8_d && true;
smull mulH_e red_e ymm4_e ymm0_e;
assert true && red_e = mulLymm8_e;
assume red_e = mulLymm8_e && true;
smull mulH_f red_f ymm4_f ymm0_f;
assert true && red_f = mulLymm8_f;
assume red_f = mulLymm8_f && true;
mov ymm4_0 mulH_0;
mov ymm4_1 mulH_1;
mov ymm4_2 mulH_2;
mov ymm4_3 mulH_3;
mov ymm4_4 mulH_4;
mov ymm4_5 mulH_5;
mov ymm4_6 mulH_6;
mov ymm4_7 mulH_7;
mov ymm4_8 mulH_8;
mov ymm4_9 mulH_9;
mov ymm4_a mulH_a;
mov ymm4_b mulH_b;
mov ymm4_c mulH_c;
mov ymm4_d mulH_d;
mov ymm4_e mulH_e;
mov ymm4_f mulH_f;
(* vpsubw %ymm4,%ymm8,%ymm8                        #! PC = 0x555555558261 *)
sub ymm8_0 ymm8_0 ymm4_0;
sub ymm8_1 ymm8_1 ymm4_1;
sub ymm8_2 ymm8_2 ymm4_2;
sub ymm8_3 ymm8_3 ymm4_3;
sub ymm8_4 ymm8_4 ymm4_4;
sub ymm8_5 ymm8_5 ymm4_5;
sub ymm8_6 ymm8_6 ymm4_6;
sub ymm8_7 ymm8_7 ymm4_7;
sub ymm8_8 ymm8_8 ymm4_8;
sub ymm8_9 ymm8_9 ymm4_9;
sub ymm8_a ymm8_a ymm4_a;
sub ymm8_b ymm8_b ymm4_b;
sub ymm8_c ymm8_c ymm4_c;
sub ymm8_d ymm8_d ymm4_d;
sub ymm8_e ymm8_e ymm4_e;
sub ymm8_f ymm8_f ymm4_f;
(* vpbroadcastd 0x12c(%rdx),%ymm1                  #! EA = L0x55555556124c; Value = 0xfcc3398be2fb1c3c; PC = 0x555555558265 *)
mov ymm1_0 L0x55555556124c;
mov ymm1_1 L0x55555556124e;
mov ymm1_2 L0x55555556124c;
mov ymm1_3 L0x55555556124e;
mov ymm1_4 L0x55555556124c;
mov ymm1_5 L0x55555556124e;
mov ymm1_6 L0x55555556124c;
mov ymm1_7 L0x55555556124e;
mov ymm1_8 L0x55555556124c;
mov ymm1_9 L0x55555556124e;
mov ymm1_a L0x55555556124c;
mov ymm1_b L0x55555556124e;
mov ymm1_c L0x55555556124c;
mov ymm1_d L0x55555556124e;
mov ymm1_e L0x55555556124c;
mov ymm1_f L0x55555556124e;
(* vpbroadcastd 0x32c(%rdx),%ymm2                  #! EA = L0x55555556144c; Value = 0xfac3078b10fbf43c; PC = 0x55555555826e *)
mov ymm2_0 L0x55555556144c;
mov ymm2_1 L0x55555556144e;
mov ymm2_2 L0x55555556144c;
mov ymm2_3 L0x55555556144e;
mov ymm2_4 L0x55555556144c;
mov ymm2_5 L0x55555556144e;
mov ymm2_6 L0x55555556144c;
mov ymm2_7 L0x55555556144e;
mov ymm2_8 L0x55555556144c;
mov ymm2_9 L0x55555556144e;
mov ymm2_a L0x55555556144c;
mov ymm2_b L0x55555556144e;
mov ymm2_c L0x55555556144c;
mov ymm2_d L0x55555556144e;
mov ymm2_e L0x55555556144c;
mov ymm2_f L0x55555556144e;
(* vpmullw %ymm1,%ymm11,%ymm4                      #! PC = 0x555555558277 *)
smull mulHymm11_0 mulL_0 ymm1_0 ymm11_0;
smull mulHymm11_1 mulL_1 ymm1_1 ymm11_1;
smull mulHymm11_2 mulL_2 ymm1_2 ymm11_2;
smull mulHymm11_3 mulL_3 ymm1_3 ymm11_3;
smull mulHymm11_4 mulL_4 ymm1_4 ymm11_4;
smull mulHymm11_5 mulL_5 ymm1_5 ymm11_5;
smull mulHymm11_6 mulL_6 ymm1_6 ymm11_6;
smull mulHymm11_7 mulL_7 ymm1_7 ymm11_7;
smull mulHymm11_8 mulL_8 ymm1_8 ymm11_8;
smull mulHymm11_9 mulL_9 ymm1_9 ymm11_9;
smull mulHymm11_a mulL_a ymm1_a ymm11_a;
smull mulHymm11_b mulL_b ymm1_b ymm11_b;
smull mulHymm11_c mulL_c ymm1_c ymm11_c;
smull mulHymm11_d mulL_d ymm1_d ymm11_d;
smull mulHymm11_e mulL_e ymm1_e ymm11_e;
smull mulHymm11_f mulL_f ymm1_f ymm11_f;
cast ymm4_0@sint16 mulL_0;
cast ymm4_1@sint16 mulL_1;
cast ymm4_2@sint16 mulL_2;
cast ymm4_3@sint16 mulL_3;
cast ymm4_4@sint16 mulL_4;
cast ymm4_5@sint16 mulL_5;
cast ymm4_6@sint16 mulL_6;
cast ymm4_7@sint16 mulL_7;
cast ymm4_8@sint16 mulL_8;
cast ymm4_9@sint16 mulL_9;
cast ymm4_a@sint16 mulL_a;
cast ymm4_b@sint16 mulL_b;
cast ymm4_c@sint16 mulL_c;
cast ymm4_d@sint16 mulL_d;
cast ymm4_e@sint16 mulL_e;
cast ymm4_f@sint16 mulL_f;
(* vpmulhw %ymm2,%ymm11,%ymm11                     #! PC = 0x55555555827b *)
smull mulH_0 mulLymm11_0 ymm11_0 ymm2_0;
smull mulH_1 mulLymm11_1 ymm11_1 ymm2_1;
smull mulH_2 mulLymm11_2 ymm11_2 ymm2_2;
smull mulH_3 mulLymm11_3 ymm11_3 ymm2_3;
smull mulH_4 mulLymm11_4 ymm11_4 ymm2_4;
smull mulH_5 mulLymm11_5 ymm11_5 ymm2_5;
smull mulH_6 mulLymm11_6 ymm11_6 ymm2_6;
smull mulH_7 mulLymm11_7 ymm11_7 ymm2_7;
smull mulH_8 mulLymm11_8 ymm11_8 ymm2_8;
smull mulH_9 mulLymm11_9 ymm11_9 ymm2_9;
smull mulH_a mulLymm11_a ymm11_a ymm2_a;
smull mulH_b mulLymm11_b ymm11_b ymm2_b;
smull mulH_c mulLymm11_c ymm11_c ymm2_c;
smull mulH_d mulLymm11_d ymm11_d ymm2_d;
smull mulH_e mulLymm11_e ymm11_e ymm2_e;
smull mulH_f mulLymm11_f ymm11_f ymm2_f;
mov ymm11_0 mulH_0;
mov ymm11_1 mulH_1;
mov ymm11_2 mulH_2;
mov ymm11_3 mulH_3;
mov ymm11_4 mulH_4;
mov ymm11_5 mulH_5;
mov ymm11_6 mulH_6;
mov ymm11_7 mulH_7;
mov ymm11_8 mulH_8;
mov ymm11_9 mulH_9;
mov ymm11_a mulH_a;
mov ymm11_b mulH_b;
mov ymm11_c mulH_c;
mov ymm11_d mulH_d;
mov ymm11_e mulH_e;
mov ymm11_f mulH_f;
(* vpmulhw %ymm0,%ymm4,%ymm4                       #! PC = 0x55555555827f *)
smull mulH_0 red_0 ymm4_0 ymm0_0;
assert true && red_0 = mulLymm11_0;
assume red_0 = mulLymm11_0 && true;
smull mulH_1 red_1 ymm4_1 ymm0_1;
assert true && red_1 = mulLymm11_1;
assume red_1 = mulLymm11_1 && true;
smull mulH_2 red_2 ymm4_2 ymm0_2;
assert true && red_2 = mulLymm11_2;
assume red_2 = mulLymm11_2 && true;
smull mulH_3 red_3 ymm4_3 ymm0_3;
assert true && red_3 = mulLymm11_3;
assume red_3 = mulLymm11_3 && true;
smull mulH_4 red_4 ymm4_4 ymm0_4;
assert true && red_4 = mulLymm11_4;
assume red_4 = mulLymm11_4 && true;
smull mulH_5 red_5 ymm4_5 ymm0_5;
assert true && red_5 = mulLymm11_5;
assume red_5 = mulLymm11_5 && true;
smull mulH_6 red_6 ymm4_6 ymm0_6;
assert true && red_6 = mulLymm11_6;
assume red_6 = mulLymm11_6 && true;
smull mulH_7 red_7 ymm4_7 ymm0_7;
assert true && red_7 = mulLymm11_7;
assume red_7 = mulLymm11_7 && true;
smull mulH_8 red_8 ymm4_8 ymm0_8;
assert true && red_8 = mulLymm11_8;
assume red_8 = mulLymm11_8 && true;
smull mulH_9 red_9 ymm4_9 ymm0_9;
assert true && red_9 = mulLymm11_9;
assume red_9 = mulLymm11_9 && true;
smull mulH_a red_a ymm4_a ymm0_a;
assert true && red_a = mulLymm11_a;
assume red_a = mulLymm11_a && true;
smull mulH_b red_b ymm4_b ymm0_b;
assert true && red_b = mulLymm11_b;
assume red_b = mulLymm11_b && true;
smull mulH_c red_c ymm4_c ymm0_c;
assert true && red_c = mulLymm11_c;
assume red_c = mulLymm11_c && true;
smull mulH_d red_d ymm4_d ymm0_d;
assert true && red_d = mulLymm11_d;
assume red_d = mulLymm11_d && true;
smull mulH_e red_e ymm4_e ymm0_e;
assert true && red_e = mulLymm11_e;
assume red_e = mulLymm11_e && true;
smull mulH_f red_f ymm4_f ymm0_f;
assert true && red_f = mulLymm11_f;
assume red_f = mulLymm11_f && true;
mov ymm4_0 mulH_0;
mov ymm4_1 mulH_1;
mov ymm4_2 mulH_2;
mov ymm4_3 mulH_3;
mov ymm4_4 mulH_4;
mov ymm4_5 mulH_5;
mov ymm4_6 mulH_6;
mov ymm4_7 mulH_7;
mov ymm4_8 mulH_8;
mov ymm4_9 mulH_9;
mov ymm4_a mulH_a;
mov ymm4_b mulH_b;
mov ymm4_c mulH_c;
mov ymm4_d mulH_d;
mov ymm4_e mulH_e;
mov ymm4_f mulH_f;
(* vpsubw %ymm4,%ymm11,%ymm11                      #! PC = 0x555555558283 *)
sub ymm11_0 ymm11_0 ymm4_0;
sub ymm11_1 ymm11_1 ymm4_1;
sub ymm11_2 ymm11_2 ymm4_2;
sub ymm11_3 ymm11_3 ymm4_3;
sub ymm11_4 ymm11_4 ymm4_4;
sub ymm11_5 ymm11_5 ymm4_5;
sub ymm11_6 ymm11_6 ymm4_6;
sub ymm11_7 ymm11_7 ymm4_7;
sub ymm11_8 ymm11_8 ymm4_8;
sub ymm11_9 ymm11_9 ymm4_9;
sub ymm11_a ymm11_a ymm4_a;
sub ymm11_b ymm11_b ymm4_b;
sub ymm11_c ymm11_c ymm4_c;
sub ymm11_d ymm11_d ymm4_d;
sub ymm11_e ymm11_e ymm4_e;
sub ymm11_f ymm11_f ymm4_f;
(* vpmullw %ymm14,%ymm10,%ymm4                     #! PC = 0x555555558287 *)
smull mulHymm10_0 mulL_0 ymm14_0 ymm10_0;
smull mulHymm10_1 mulL_1 ymm14_1 ymm10_1;
smull mulHymm10_2 mulL_2 ymm14_2 ymm10_2;
smull mulHymm10_3 mulL_3 ymm14_3 ymm10_3;
smull mulHymm10_4 mulL_4 ymm14_4 ymm10_4;
smull mulHymm10_5 mulL_5 ymm14_5 ymm10_5;
smull mulHymm10_6 mulL_6 ymm14_6 ymm10_6;
smull mulHymm10_7 mulL_7 ymm14_7 ymm10_7;
smull mulHymm10_8 mulL_8 ymm14_8 ymm10_8;
smull mulHymm10_9 mulL_9 ymm14_9 ymm10_9;
smull mulHymm10_a mulL_a ymm14_a ymm10_a;
smull mulHymm10_b mulL_b ymm14_b ymm10_b;
smull mulHymm10_c mulL_c ymm14_c ymm10_c;
smull mulHymm10_d mulL_d ymm14_d ymm10_d;
smull mulHymm10_e mulL_e ymm14_e ymm10_e;
smull mulHymm10_f mulL_f ymm14_f ymm10_f;
cast ymm4_0@sint16 mulL_0;
cast ymm4_1@sint16 mulL_1;
cast ymm4_2@sint16 mulL_2;
cast ymm4_3@sint16 mulL_3;
cast ymm4_4@sint16 mulL_4;
cast ymm4_5@sint16 mulL_5;
cast ymm4_6@sint16 mulL_6;
cast ymm4_7@sint16 mulL_7;
cast ymm4_8@sint16 mulL_8;
cast ymm4_9@sint16 mulL_9;
cast ymm4_a@sint16 mulL_a;
cast ymm4_b@sint16 mulL_b;
cast ymm4_c@sint16 mulL_c;
cast ymm4_d@sint16 mulL_d;
cast ymm4_e@sint16 mulL_e;
cast ymm4_f@sint16 mulL_f;
(* vpmulhw %ymm15,%ymm10,%ymm10                    #! PC = 0x55555555828c *)
smull mulH_0 mulLymm10_0 ymm10_0 ymm15_0;
smull mulH_1 mulLymm10_1 ymm10_1 ymm15_1;
smull mulH_2 mulLymm10_2 ymm10_2 ymm15_2;
smull mulH_3 mulLymm10_3 ymm10_3 ymm15_3;
smull mulH_4 mulLymm10_4 ymm10_4 ymm15_4;
smull mulH_5 mulLymm10_5 ymm10_5 ymm15_5;
smull mulH_6 mulLymm10_6 ymm10_6 ymm15_6;
smull mulH_7 mulLymm10_7 ymm10_7 ymm15_7;
smull mulH_8 mulLymm10_8 ymm10_8 ymm15_8;
smull mulH_9 mulLymm10_9 ymm10_9 ymm15_9;
smull mulH_a mulLymm10_a ymm10_a ymm15_a;
smull mulH_b mulLymm10_b ymm10_b ymm15_b;
smull mulH_c mulLymm10_c ymm10_c ymm15_c;
smull mulH_d mulLymm10_d ymm10_d ymm15_d;
smull mulH_e mulLymm10_e ymm10_e ymm15_e;
smull mulH_f mulLymm10_f ymm10_f ymm15_f;
mov ymm10_0 mulH_0;
mov ymm10_1 mulH_1;
mov ymm10_2 mulH_2;
mov ymm10_3 mulH_3;
mov ymm10_4 mulH_4;
mov ymm10_5 mulH_5;
mov ymm10_6 mulH_6;
mov ymm10_7 mulH_7;
mov ymm10_8 mulH_8;
mov ymm10_9 mulH_9;
mov ymm10_a mulH_a;
mov ymm10_b mulH_b;
mov ymm10_c mulH_c;
mov ymm10_d mulH_d;
mov ymm10_e mulH_e;
mov ymm10_f mulH_f;
(* vpmulhw %ymm0,%ymm4,%ymm4                       #! PC = 0x555555558291 *)
smull mulH_0 red_0 ymm4_0 ymm0_0;
assert true && red_0 = mulLymm10_0;
assume red_0 = mulLymm10_0 && true;
smull mulH_1 red_1 ymm4_1 ymm0_1;
assert true && red_1 = mulLymm10_1;
assume red_1 = mulLymm10_1 && true;
smull mulH_2 red_2 ymm4_2 ymm0_2;
assert true && red_2 = mulLymm10_2;
assume red_2 = mulLymm10_2 && true;
smull mulH_3 red_3 ymm4_3 ymm0_3;
assert true && red_3 = mulLymm10_3;
assume red_3 = mulLymm10_3 && true;
smull mulH_4 red_4 ymm4_4 ymm0_4;
assert true && red_4 = mulLymm10_4;
assume red_4 = mulLymm10_4 && true;
smull mulH_5 red_5 ymm4_5 ymm0_5;
assert true && red_5 = mulLymm10_5;
assume red_5 = mulLymm10_5 && true;
smull mulH_6 red_6 ymm4_6 ymm0_6;
assert true && red_6 = mulLymm10_6;
assume red_6 = mulLymm10_6 && true;
smull mulH_7 red_7 ymm4_7 ymm0_7;
assert true && red_7 = mulLymm10_7;
assume red_7 = mulLymm10_7 && true;
smull mulH_8 red_8 ymm4_8 ymm0_8;
assert true && red_8 = mulLymm10_8;
assume red_8 = mulLymm10_8 && true;
smull mulH_9 red_9 ymm4_9 ymm0_9;
assert true && red_9 = mulLymm10_9;
assume red_9 = mulLymm10_9 && true;
smull mulH_a red_a ymm4_a ymm0_a;
assert true && red_a = mulLymm10_a;
assume red_a = mulLymm10_a && true;
smull mulH_b red_b ymm4_b ymm0_b;
assert true && red_b = mulLymm10_b;
assume red_b = mulLymm10_b && true;
smull mulH_c red_c ymm4_c ymm0_c;
assert true && red_c = mulLymm10_c;
assume red_c = mulLymm10_c && true;
smull mulH_d red_d ymm4_d ymm0_d;
assert true && red_d = mulLymm10_d;
assume red_d = mulLymm10_d && true;
smull mulH_e red_e ymm4_e ymm0_e;
assert true && red_e = mulLymm10_e;
assume red_e = mulLymm10_e && true;
smull mulH_f red_f ymm4_f ymm0_f;
assert true && red_f = mulLymm10_f;
assume red_f = mulLymm10_f && true;
mov ymm4_0 mulH_0;
mov ymm4_1 mulH_1;
mov ymm4_2 mulH_2;
mov ymm4_3 mulH_3;
mov ymm4_4 mulH_4;
mov ymm4_5 mulH_5;
mov ymm4_6 mulH_6;
mov ymm4_7 mulH_7;
mov ymm4_8 mulH_8;
mov ymm4_9 mulH_9;
mov ymm4_a mulH_a;
mov ymm4_b mulH_b;
mov ymm4_c mulH_c;
mov ymm4_d mulH_d;
mov ymm4_e mulH_e;
mov ymm4_f mulH_f;
(* vpsubw %ymm4,%ymm10,%ymm10                      #! PC = 0x555555558295 *)
sub ymm10_0 ymm10_0 ymm4_0;
sub ymm10_1 ymm10_1 ymm4_1;
sub ymm10_2 ymm10_2 ymm4_2;
sub ymm10_3 ymm10_3 ymm4_3;
sub ymm10_4 ymm10_4 ymm4_4;
sub ymm10_5 ymm10_5 ymm4_5;
sub ymm10_6 ymm10_6 ymm4_6;
sub ymm10_7 ymm10_7 ymm4_7;
sub ymm10_8 ymm10_8 ymm4_8;
sub ymm10_9 ymm10_9 ymm4_9;
sub ymm10_a ymm10_a ymm4_a;
sub ymm10_b ymm10_b ymm4_b;
sub ymm10_c ymm10_c ymm4_c;
sub ymm10_d ymm10_d ymm4_d;
sub ymm10_e ymm10_e ymm4_e;
sub ymm10_f ymm10_f ymm4_f;
(* vpmullw %ymm14,%ymm9,%ymm4                      #! PC = 0x555555558299 *)
smull mulHymm9_0 mulL_0 ymm14_0 ymm9_0;
smull mulHymm9_1 mulL_1 ymm14_1 ymm9_1;
smull mulHymm9_2 mulL_2 ymm14_2 ymm9_2;
smull mulHymm9_3 mulL_3 ymm14_3 ymm9_3;
smull mulHymm9_4 mulL_4 ymm14_4 ymm9_4;
smull mulHymm9_5 mulL_5 ymm14_5 ymm9_5;
smull mulHymm9_6 mulL_6 ymm14_6 ymm9_6;
smull mulHymm9_7 mulL_7 ymm14_7 ymm9_7;
smull mulHymm9_8 mulL_8 ymm14_8 ymm9_8;
smull mulHymm9_9 mulL_9 ymm14_9 ymm9_9;
smull mulHymm9_a mulL_a ymm14_a ymm9_a;
smull mulHymm9_b mulL_b ymm14_b ymm9_b;
smull mulHymm9_c mulL_c ymm14_c ymm9_c;
smull mulHymm9_d mulL_d ymm14_d ymm9_d;
smull mulHymm9_e mulL_e ymm14_e ymm9_e;
smull mulHymm9_f mulL_f ymm14_f ymm9_f;
cast ymm4_0@sint16 mulL_0;
cast ymm4_1@sint16 mulL_1;
cast ymm4_2@sint16 mulL_2;
cast ymm4_3@sint16 mulL_3;
cast ymm4_4@sint16 mulL_4;
cast ymm4_5@sint16 mulL_5;
cast ymm4_6@sint16 mulL_6;
cast ymm4_7@sint16 mulL_7;
cast ymm4_8@sint16 mulL_8;
cast ymm4_9@sint16 mulL_9;
cast ymm4_a@sint16 mulL_a;
cast ymm4_b@sint16 mulL_b;
cast ymm4_c@sint16 mulL_c;
cast ymm4_d@sint16 mulL_d;
cast ymm4_e@sint16 mulL_e;
cast ymm4_f@sint16 mulL_f;
(* vpmulhw %ymm15,%ymm9,%ymm9                      #! PC = 0x55555555829e *)
smull mulH_0 mulLymm9_0 ymm9_0 ymm15_0;
smull mulH_1 mulLymm9_1 ymm9_1 ymm15_1;
smull mulH_2 mulLymm9_2 ymm9_2 ymm15_2;
smull mulH_3 mulLymm9_3 ymm9_3 ymm15_3;
smull mulH_4 mulLymm9_4 ymm9_4 ymm15_4;
smull mulH_5 mulLymm9_5 ymm9_5 ymm15_5;
smull mulH_6 mulLymm9_6 ymm9_6 ymm15_6;
smull mulH_7 mulLymm9_7 ymm9_7 ymm15_7;
smull mulH_8 mulLymm9_8 ymm9_8 ymm15_8;
smull mulH_9 mulLymm9_9 ymm9_9 ymm15_9;
smull mulH_a mulLymm9_a ymm9_a ymm15_a;
smull mulH_b mulLymm9_b ymm9_b ymm15_b;
smull mulH_c mulLymm9_c ymm9_c ymm15_c;
smull mulH_d mulLymm9_d ymm9_d ymm15_d;
smull mulH_e mulLymm9_e ymm9_e ymm15_e;
smull mulH_f mulLymm9_f ymm9_f ymm15_f;
mov ymm9_0 mulH_0;
mov ymm9_1 mulH_1;
mov ymm9_2 mulH_2;
mov ymm9_3 mulH_3;
mov ymm9_4 mulH_4;
mov ymm9_5 mulH_5;
mov ymm9_6 mulH_6;
mov ymm9_7 mulH_7;
mov ymm9_8 mulH_8;
mov ymm9_9 mulH_9;
mov ymm9_a mulH_a;
mov ymm9_b mulH_b;
mov ymm9_c mulH_c;
mov ymm9_d mulH_d;
mov ymm9_e mulH_e;
mov ymm9_f mulH_f;
(* vpmulhw %ymm0,%ymm4,%ymm4                       #! PC = 0x5555555582a3 *)
smull mulH_0 red_0 ymm4_0 ymm0_0;
assert true && red_0 = mulLymm9_0;
assume red_0 = mulLymm9_0 && true;
smull mulH_1 red_1 ymm4_1 ymm0_1;
assert true && red_1 = mulLymm9_1;
assume red_1 = mulLymm9_1 && true;
smull mulH_2 red_2 ymm4_2 ymm0_2;
assert true && red_2 = mulLymm9_2;
assume red_2 = mulLymm9_2 && true;
smull mulH_3 red_3 ymm4_3 ymm0_3;
assert true && red_3 = mulLymm9_3;
assume red_3 = mulLymm9_3 && true;
smull mulH_4 red_4 ymm4_4 ymm0_4;
assert true && red_4 = mulLymm9_4;
assume red_4 = mulLymm9_4 && true;
smull mulH_5 red_5 ymm4_5 ymm0_5;
assert true && red_5 = mulLymm9_5;
assume red_5 = mulLymm9_5 && true;
smull mulH_6 red_6 ymm4_6 ymm0_6;
assert true && red_6 = mulLymm9_6;
assume red_6 = mulLymm9_6 && true;
smull mulH_7 red_7 ymm4_7 ymm0_7;
assert true && red_7 = mulLymm9_7;
assume red_7 = mulLymm9_7 && true;
smull mulH_8 red_8 ymm4_8 ymm0_8;
assert true && red_8 = mulLymm9_8;
assume red_8 = mulLymm9_8 && true;
smull mulH_9 red_9 ymm4_9 ymm0_9;
assert true && red_9 = mulLymm9_9;
assume red_9 = mulLymm9_9 && true;
smull mulH_a red_a ymm4_a ymm0_a;
assert true && red_a = mulLymm9_a;
assume red_a = mulLymm9_a && true;
smull mulH_b red_b ymm4_b ymm0_b;
assert true && red_b = mulLymm9_b;
assume red_b = mulLymm9_b && true;
smull mulH_c red_c ymm4_c ymm0_c;
assert true && red_c = mulLymm9_c;
assume red_c = mulLymm9_c && true;
smull mulH_d red_d ymm4_d ymm0_d;
assert true && red_d = mulLymm9_d;
assume red_d = mulLymm9_d && true;
smull mulH_e red_e ymm4_e ymm0_e;
assert true && red_e = mulLymm9_e;
assume red_e = mulLymm9_e && true;
smull mulH_f red_f ymm4_f ymm0_f;
assert true && red_f = mulLymm9_f;
assume red_f = mulLymm9_f && true;
mov ymm4_0 mulH_0;
mov ymm4_1 mulH_1;
mov ymm4_2 mulH_2;
mov ymm4_3 mulH_3;
mov ymm4_4 mulH_4;
mov ymm4_5 mulH_5;
mov ymm4_6 mulH_6;
mov ymm4_7 mulH_7;
mov ymm4_8 mulH_8;
mov ymm4_9 mulH_9;
mov ymm4_a mulH_a;
mov ymm4_b mulH_b;
mov ymm4_c mulH_c;
mov ymm4_d mulH_d;
mov ymm4_e mulH_e;
mov ymm4_f mulH_f;
(* vpsubw %ymm4,%ymm9,%ymm9                        #! PC = 0x5555555582a7 *)
sub ymm9_0 ymm9_0 ymm4_0;
sub ymm9_1 ymm9_1 ymm4_1;
sub ymm9_2 ymm9_2 ymm4_2;
sub ymm9_3 ymm9_3 ymm4_3;
sub ymm9_4 ymm9_4 ymm4_4;
sub ymm9_5 ymm9_5 ymm4_5;
sub ymm9_6 ymm9_6 ymm4_6;
sub ymm9_7 ymm9_7 ymm4_7;
sub ymm9_8 ymm9_8 ymm4_8;
sub ymm9_9 ymm9_9 ymm4_9;
sub ymm9_a ymm9_a ymm4_a;
sub ymm9_b ymm9_b ymm4_b;
sub ymm9_c ymm9_c ymm4_c;
sub ymm9_d ymm9_d ymm4_d;
sub ymm9_e ymm9_e ymm4_e;
sub ymm9_f ymm9_f ymm4_f;
(* vpmullw %ymm14,%ymm7,%ymm4                      #! PC = 0x5555555582ab *)
smull mulHymm7_0 mulL_0 ymm14_0 ymm7_0;
smull mulHymm7_1 mulL_1 ymm14_1 ymm7_1;
smull mulHymm7_2 mulL_2 ymm14_2 ymm7_2;
smull mulHymm7_3 mulL_3 ymm14_3 ymm7_3;
smull mulHymm7_4 mulL_4 ymm14_4 ymm7_4;
smull mulHymm7_5 mulL_5 ymm14_5 ymm7_5;
smull mulHymm7_6 mulL_6 ymm14_6 ymm7_6;
smull mulHymm7_7 mulL_7 ymm14_7 ymm7_7;
smull mulHymm7_8 mulL_8 ymm14_8 ymm7_8;
smull mulHymm7_9 mulL_9 ymm14_9 ymm7_9;
smull mulHymm7_a mulL_a ymm14_a ymm7_a;
smull mulHymm7_b mulL_b ymm14_b ymm7_b;
smull mulHymm7_c mulL_c ymm14_c ymm7_c;
smull mulHymm7_d mulL_d ymm14_d ymm7_d;
smull mulHymm7_e mulL_e ymm14_e ymm7_e;
smull mulHymm7_f mulL_f ymm14_f ymm7_f;
cast ymm4_0@sint16 mulL_0;
cast ymm4_1@sint16 mulL_1;
cast ymm4_2@sint16 mulL_2;
cast ymm4_3@sint16 mulL_3;
cast ymm4_4@sint16 mulL_4;
cast ymm4_5@sint16 mulL_5;
cast ymm4_6@sint16 mulL_6;
cast ymm4_7@sint16 mulL_7;
cast ymm4_8@sint16 mulL_8;
cast ymm4_9@sint16 mulL_9;
cast ymm4_a@sint16 mulL_a;
cast ymm4_b@sint16 mulL_b;
cast ymm4_c@sint16 mulL_c;
cast ymm4_d@sint16 mulL_d;
cast ymm4_e@sint16 mulL_e;
cast ymm4_f@sint16 mulL_f;
(* vpmulhw %ymm15,%ymm7,%ymm7                      #! PC = 0x5555555582b0 *)
smull mulH_0 mulLymm7_0 ymm7_0 ymm15_0;
smull mulH_1 mulLymm7_1 ymm7_1 ymm15_1;
smull mulH_2 mulLymm7_2 ymm7_2 ymm15_2;
smull mulH_3 mulLymm7_3 ymm7_3 ymm15_3;
smull mulH_4 mulLymm7_4 ymm7_4 ymm15_4;
smull mulH_5 mulLymm7_5 ymm7_5 ymm15_5;
smull mulH_6 mulLymm7_6 ymm7_6 ymm15_6;
smull mulH_7 mulLymm7_7 ymm7_7 ymm15_7;
smull mulH_8 mulLymm7_8 ymm7_8 ymm15_8;
smull mulH_9 mulLymm7_9 ymm7_9 ymm15_9;
smull mulH_a mulLymm7_a ymm7_a ymm15_a;
smull mulH_b mulLymm7_b ymm7_b ymm15_b;
smull mulH_c mulLymm7_c ymm7_c ymm15_c;
smull mulH_d mulLymm7_d ymm7_d ymm15_d;
smull mulH_e mulLymm7_e ymm7_e ymm15_e;
smull mulH_f mulLymm7_f ymm7_f ymm15_f;
mov ymm7_0 mulH_0;
mov ymm7_1 mulH_1;
mov ymm7_2 mulH_2;
mov ymm7_3 mulH_3;
mov ymm7_4 mulH_4;
mov ymm7_5 mulH_5;
mov ymm7_6 mulH_6;
mov ymm7_7 mulH_7;
mov ymm7_8 mulH_8;
mov ymm7_9 mulH_9;
mov ymm7_a mulH_a;
mov ymm7_b mulH_b;
mov ymm7_c mulH_c;
mov ymm7_d mulH_d;
mov ymm7_e mulH_e;
mov ymm7_f mulH_f;
(* vpmulhw %ymm0,%ymm4,%ymm4                       #! PC = 0x5555555582b5 *)
smull mulH_0 red_0 ymm4_0 ymm0_0;
assert true && red_0 = mulLymm7_0;
assume red_0 = mulLymm7_0 && true;
smull mulH_1 red_1 ymm4_1 ymm0_1;
assert true && red_1 = mulLymm7_1;
assume red_1 = mulLymm7_1 && true;
smull mulH_2 red_2 ymm4_2 ymm0_2;
assert true && red_2 = mulLymm7_2;
assume red_2 = mulLymm7_2 && true;
smull mulH_3 red_3 ymm4_3 ymm0_3;
assert true && red_3 = mulLymm7_3;
assume red_3 = mulLymm7_3 && true;
smull mulH_4 red_4 ymm4_4 ymm0_4;
assert true && red_4 = mulLymm7_4;
assume red_4 = mulLymm7_4 && true;
smull mulH_5 red_5 ymm4_5 ymm0_5;
assert true && red_5 = mulLymm7_5;
assume red_5 = mulLymm7_5 && true;
smull mulH_6 red_6 ymm4_6 ymm0_6;
assert true && red_6 = mulLymm7_6;
assume red_6 = mulLymm7_6 && true;
smull mulH_7 red_7 ymm4_7 ymm0_7;
assert true && red_7 = mulLymm7_7;
assume red_7 = mulLymm7_7 && true;
smull mulH_8 red_8 ymm4_8 ymm0_8;
assert true && red_8 = mulLymm7_8;
assume red_8 = mulLymm7_8 && true;
smull mulH_9 red_9 ymm4_9 ymm0_9;
assert true && red_9 = mulLymm7_9;
assume red_9 = mulLymm7_9 && true;
smull mulH_a red_a ymm4_a ymm0_a;
assert true && red_a = mulLymm7_a;
assume red_a = mulLymm7_a && true;
smull mulH_b red_b ymm4_b ymm0_b;
assert true && red_b = mulLymm7_b;
assume red_b = mulLymm7_b && true;
smull mulH_c red_c ymm4_c ymm0_c;
assert true && red_c = mulLymm7_c;
assume red_c = mulLymm7_c && true;
smull mulH_d red_d ymm4_d ymm0_d;
assert true && red_d = mulLymm7_d;
assume red_d = mulLymm7_d && true;
smull mulH_e red_e ymm4_e ymm0_e;
assert true && red_e = mulLymm7_e;
assume red_e = mulLymm7_e && true;
smull mulH_f red_f ymm4_f ymm0_f;
assert true && red_f = mulLymm7_f;
assume red_f = mulLymm7_f && true;
mov ymm4_0 mulH_0;
mov ymm4_1 mulH_1;
mov ymm4_2 mulH_2;
mov ymm4_3 mulH_3;
mov ymm4_4 mulH_4;
mov ymm4_5 mulH_5;
mov ymm4_6 mulH_6;
mov ymm4_7 mulH_7;
mov ymm4_8 mulH_8;
mov ymm4_9 mulH_9;
mov ymm4_a mulH_a;
mov ymm4_b mulH_b;
mov ymm4_c mulH_c;
mov ymm4_d mulH_d;
mov ymm4_e mulH_e;
mov ymm4_f mulH_f;
(* vpsubw %ymm4,%ymm7,%ymm7                        #! PC = 0x5555555582b9 *)
sub ymm7_0 ymm7_0 ymm4_0;
sub ymm7_1 ymm7_1 ymm4_1;
sub ymm7_2 ymm7_2 ymm4_2;
sub ymm7_3 ymm7_3 ymm4_3;
sub ymm7_4 ymm7_4 ymm4_4;
sub ymm7_5 ymm7_5 ymm4_5;
sub ymm7_6 ymm7_6 ymm4_6;
sub ymm7_7 ymm7_7 ymm4_7;
sub ymm7_8 ymm7_8 ymm4_8;
sub ymm7_9 ymm7_9 ymm4_9;
sub ymm7_a ymm7_a ymm4_a;
sub ymm7_b ymm7_b ymm4_b;
sub ymm7_c ymm7_c ymm4_c;
sub ymm7_d ymm7_d ymm4_d;
sub ymm7_e ymm7_e ymm4_e;
sub ymm7_f ymm7_f ymm4_f;
(* vpmullw %ymm14,%ymm5,%ymm4                      #! PC = 0x5555555582bd *)
smull mulHymm5_0 mulL_0 ymm14_0 ymm5_0;
smull mulHymm5_1 mulL_1 ymm14_1 ymm5_1;
smull mulHymm5_2 mulL_2 ymm14_2 ymm5_2;
smull mulHymm5_3 mulL_3 ymm14_3 ymm5_3;
smull mulHymm5_4 mulL_4 ymm14_4 ymm5_4;
smull mulHymm5_5 mulL_5 ymm14_5 ymm5_5;
smull mulHymm5_6 mulL_6 ymm14_6 ymm5_6;
smull mulHymm5_7 mulL_7 ymm14_7 ymm5_7;
smull mulHymm5_8 mulL_8 ymm14_8 ymm5_8;
smull mulHymm5_9 mulL_9 ymm14_9 ymm5_9;
smull mulHymm5_a mulL_a ymm14_a ymm5_a;
smull mulHymm5_b mulL_b ymm14_b ymm5_b;
smull mulHymm5_c mulL_c ymm14_c ymm5_c;
smull mulHymm5_d mulL_d ymm14_d ymm5_d;
smull mulHymm5_e mulL_e ymm14_e ymm5_e;
smull mulHymm5_f mulL_f ymm14_f ymm5_f;
cast ymm4_0@sint16 mulL_0;
cast ymm4_1@sint16 mulL_1;
cast ymm4_2@sint16 mulL_2;
cast ymm4_3@sint16 mulL_3;
cast ymm4_4@sint16 mulL_4;
cast ymm4_5@sint16 mulL_5;
cast ymm4_6@sint16 mulL_6;
cast ymm4_7@sint16 mulL_7;
cast ymm4_8@sint16 mulL_8;
cast ymm4_9@sint16 mulL_9;
cast ymm4_a@sint16 mulL_a;
cast ymm4_b@sint16 mulL_b;
cast ymm4_c@sint16 mulL_c;
cast ymm4_d@sint16 mulL_d;
cast ymm4_e@sint16 mulL_e;
cast ymm4_f@sint16 mulL_f;
(* vpmulhw %ymm15,%ymm5,%ymm5                      #! PC = 0x5555555582c2 *)
smull mulH_0 mulLymm5_0 ymm5_0 ymm15_0;
smull mulH_1 mulLymm5_1 ymm5_1 ymm15_1;
smull mulH_2 mulLymm5_2 ymm5_2 ymm15_2;
smull mulH_3 mulLymm5_3 ymm5_3 ymm15_3;
smull mulH_4 mulLymm5_4 ymm5_4 ymm15_4;
smull mulH_5 mulLymm5_5 ymm5_5 ymm15_5;
smull mulH_6 mulLymm5_6 ymm5_6 ymm15_6;
smull mulH_7 mulLymm5_7 ymm5_7 ymm15_7;
smull mulH_8 mulLymm5_8 ymm5_8 ymm15_8;
smull mulH_9 mulLymm5_9 ymm5_9 ymm15_9;
smull mulH_a mulLymm5_a ymm5_a ymm15_a;
smull mulH_b mulLymm5_b ymm5_b ymm15_b;
smull mulH_c mulLymm5_c ymm5_c ymm15_c;
smull mulH_d mulLymm5_d ymm5_d ymm15_d;
smull mulH_e mulLymm5_e ymm5_e ymm15_e;
smull mulH_f mulLymm5_f ymm5_f ymm15_f;
mov ymm5_0 mulH_0;
mov ymm5_1 mulH_1;
mov ymm5_2 mulH_2;
mov ymm5_3 mulH_3;
mov ymm5_4 mulH_4;
mov ymm5_5 mulH_5;
mov ymm5_6 mulH_6;
mov ymm5_7 mulH_7;
mov ymm5_8 mulH_8;
mov ymm5_9 mulH_9;
mov ymm5_a mulH_a;
mov ymm5_b mulH_b;
mov ymm5_c mulH_c;
mov ymm5_d mulH_d;
mov ymm5_e mulH_e;
mov ymm5_f mulH_f;
(* vpmulhw %ymm0,%ymm4,%ymm4                       #! PC = 0x5555555582c7 *)
smull mulH_0 red_0 ymm4_0 ymm0_0;
assert true && red_0 = mulLymm5_0;
assume red_0 = mulLymm5_0 && true;
smull mulH_1 red_1 ymm4_1 ymm0_1;
assert true && red_1 = mulLymm5_1;
assume red_1 = mulLymm5_1 && true;
smull mulH_2 red_2 ymm4_2 ymm0_2;
assert true && red_2 = mulLymm5_2;
assume red_2 = mulLymm5_2 && true;
smull mulH_3 red_3 ymm4_3 ymm0_3;
assert true && red_3 = mulLymm5_3;
assume red_3 = mulLymm5_3 && true;
smull mulH_4 red_4 ymm4_4 ymm0_4;
assert true && red_4 = mulLymm5_4;
assume red_4 = mulLymm5_4 && true;
smull mulH_5 red_5 ymm4_5 ymm0_5;
assert true && red_5 = mulLymm5_5;
assume red_5 = mulLymm5_5 && true;
smull mulH_6 red_6 ymm4_6 ymm0_6;
assert true && red_6 = mulLymm5_6;
assume red_6 = mulLymm5_6 && true;
smull mulH_7 red_7 ymm4_7 ymm0_7;
assert true && red_7 = mulLymm5_7;
assume red_7 = mulLymm5_7 && true;
smull mulH_8 red_8 ymm4_8 ymm0_8;
assert true && red_8 = mulLymm5_8;
assume red_8 = mulLymm5_8 && true;
smull mulH_9 red_9 ymm4_9 ymm0_9;
assert true && red_9 = mulLymm5_9;
assume red_9 = mulLymm5_9 && true;
smull mulH_a red_a ymm4_a ymm0_a;
assert true && red_a = mulLymm5_a;
assume red_a = mulLymm5_a && true;
smull mulH_b red_b ymm4_b ymm0_b;
assert true && red_b = mulLymm5_b;
assume red_b = mulLymm5_b && true;
smull mulH_c red_c ymm4_c ymm0_c;
assert true && red_c = mulLymm5_c;
assume red_c = mulLymm5_c && true;
smull mulH_d red_d ymm4_d ymm0_d;
assert true && red_d = mulLymm5_d;
assume red_d = mulLymm5_d && true;
smull mulH_e red_e ymm4_e ymm0_e;
assert true && red_e = mulLymm5_e;
assume red_e = mulLymm5_e && true;
smull mulH_f red_f ymm4_f ymm0_f;
assert true && red_f = mulLymm5_f;
assume red_f = mulLymm5_f && true;
mov ymm4_0 mulH_0;
mov ymm4_1 mulH_1;
mov ymm4_2 mulH_2;
mov ymm4_3 mulH_3;
mov ymm4_4 mulH_4;
mov ymm4_5 mulH_5;
mov ymm4_6 mulH_6;
mov ymm4_7 mulH_7;
mov ymm4_8 mulH_8;
mov ymm4_9 mulH_9;
mov ymm4_a mulH_a;
mov ymm4_b mulH_b;
mov ymm4_c mulH_c;
mov ymm4_d mulH_d;
mov ymm4_e mulH_e;
mov ymm4_f mulH_f;
(* vpsubw %ymm4,%ymm5,%ymm5                        #! PC = 0x5555555582cb *)
sub ymm5_0 ymm5_0 ymm4_0;
sub ymm5_1 ymm5_1 ymm4_1;
sub ymm5_2 ymm5_2 ymm4_2;
sub ymm5_3 ymm5_3 ymm4_3;
sub ymm5_4 ymm5_4 ymm4_4;
sub ymm5_5 ymm5_5 ymm4_5;
sub ymm5_6 ymm5_6 ymm4_6;
sub ymm5_7 ymm5_7 ymm4_7;
sub ymm5_8 ymm5_8 ymm4_8;
sub ymm5_9 ymm5_9 ymm4_9;
sub ymm5_a ymm5_a ymm4_a;
sub ymm5_b ymm5_b ymm4_b;
sub ymm5_c ymm5_c ymm4_c;
sub ymm5_d ymm5_d ymm4_d;
sub ymm5_e ymm5_e ymm4_e;
sub ymm5_f ymm5_f ymm4_f;
(* vpaddw %ymm3,%ymm10,%ymm4                       #! PC = 0x5555555582cf *)
add ymm4_0 ymm10_0 ymm3_0;
add ymm4_1 ymm10_1 ymm3_1;
add ymm4_2 ymm10_2 ymm3_2;
add ymm4_3 ymm10_3 ymm3_3;
add ymm4_4 ymm10_4 ymm3_4;
add ymm4_5 ymm10_5 ymm3_5;
add ymm4_6 ymm10_6 ymm3_6;
add ymm4_7 ymm10_7 ymm3_7;
add ymm4_8 ymm10_8 ymm3_8;
add ymm4_9 ymm10_9 ymm3_9;
add ymm4_a ymm10_a ymm3_a;
add ymm4_b ymm10_b ymm3_b;
add ymm4_c ymm10_c ymm3_c;
add ymm4_d ymm10_d ymm3_d;
add ymm4_e ymm10_e ymm3_e;
add ymm4_f ymm10_f ymm3_f;
(* vpsubw %ymm3,%ymm10,%ymm3                       #! PC = 0x5555555582d3 *)
sub ymm3_0 ymm10_0 ymm3_0;
sub ymm3_1 ymm10_1 ymm3_1;
sub ymm3_2 ymm10_2 ymm3_2;
sub ymm3_3 ymm10_3 ymm3_3;
sub ymm3_4 ymm10_4 ymm3_4;
sub ymm3_5 ymm10_5 ymm3_5;
sub ymm3_6 ymm10_6 ymm3_6;
sub ymm3_7 ymm10_7 ymm3_7;
sub ymm3_8 ymm10_8 ymm3_8;
sub ymm3_9 ymm10_9 ymm3_9;
sub ymm3_a ymm10_a ymm3_a;
sub ymm3_b ymm10_b ymm3_b;
sub ymm3_c ymm10_c ymm3_c;
sub ymm3_d ymm10_d ymm3_d;
sub ymm3_e ymm10_e ymm3_e;
sub ymm3_f ymm10_f ymm3_f;
(* vpaddw %ymm6,%ymm9,%ymm10                       #! PC = 0x5555555582d7 *)
add ymm10_0 ymm9_0 ymm6_0;
add ymm10_1 ymm9_1 ymm6_1;
add ymm10_2 ymm9_2 ymm6_2;
add ymm10_3 ymm9_3 ymm6_3;
add ymm10_4 ymm9_4 ymm6_4;
add ymm10_5 ymm9_5 ymm6_5;
add ymm10_6 ymm9_6 ymm6_6;
add ymm10_7 ymm9_7 ymm6_7;
add ymm10_8 ymm9_8 ymm6_8;
add ymm10_9 ymm9_9 ymm6_9;
add ymm10_a ymm9_a ymm6_a;
add ymm10_b ymm9_b ymm6_b;
add ymm10_c ymm9_c ymm6_c;
add ymm10_d ymm9_d ymm6_d;
add ymm10_e ymm9_e ymm6_e;
add ymm10_f ymm9_f ymm6_f;
(* vpsubw %ymm6,%ymm9,%ymm6                        #! PC = 0x5555555582db *)
sub ymm6_0 ymm9_0 ymm6_0;
sub ymm6_1 ymm9_1 ymm6_1;
sub ymm6_2 ymm9_2 ymm6_2;
sub ymm6_3 ymm9_3 ymm6_3;
sub ymm6_4 ymm9_4 ymm6_4;
sub ymm6_5 ymm9_5 ymm6_5;
sub ymm6_6 ymm9_6 ymm6_6;
sub ymm6_7 ymm9_7 ymm6_7;
sub ymm6_8 ymm9_8 ymm6_8;
sub ymm6_9 ymm9_9 ymm6_9;
sub ymm6_a ymm9_a ymm6_a;
sub ymm6_b ymm9_b ymm6_b;
sub ymm6_c ymm9_c ymm6_c;
sub ymm6_d ymm9_d ymm6_d;
sub ymm6_e ymm9_e ymm6_e;
sub ymm6_f ymm9_f ymm6_f;
(* vpaddw %ymm8,%ymm7,%ymm9                        #! PC = 0x5555555582df *)
add ymm9_0 ymm7_0 ymm8_0;
add ymm9_1 ymm7_1 ymm8_1;
add ymm9_2 ymm7_2 ymm8_2;
add ymm9_3 ymm7_3 ymm8_3;
add ymm9_4 ymm7_4 ymm8_4;
add ymm9_5 ymm7_5 ymm8_5;
add ymm9_6 ymm7_6 ymm8_6;
add ymm9_7 ymm7_7 ymm8_7;
add ymm9_8 ymm7_8 ymm8_8;
add ymm9_9 ymm7_9 ymm8_9;
add ymm9_a ymm7_a ymm8_a;
add ymm9_b ymm7_b ymm8_b;
add ymm9_c ymm7_c ymm8_c;
add ymm9_d ymm7_d ymm8_d;
add ymm9_e ymm7_e ymm8_e;
add ymm9_f ymm7_f ymm8_f;
(* vpsubw %ymm8,%ymm7,%ymm8                        #! PC = 0x5555555582e4 *)
sub ymm8_0 ymm7_0 ymm8_0;
sub ymm8_1 ymm7_1 ymm8_1;
sub ymm8_2 ymm7_2 ymm8_2;
sub ymm8_3 ymm7_3 ymm8_3;
sub ymm8_4 ymm7_4 ymm8_4;
sub ymm8_5 ymm7_5 ymm8_5;
sub ymm8_6 ymm7_6 ymm8_6;
sub ymm8_7 ymm7_7 ymm8_7;
sub ymm8_8 ymm7_8 ymm8_8;
sub ymm8_9 ymm7_9 ymm8_9;
sub ymm8_a ymm7_a ymm8_a;
sub ymm8_b ymm7_b ymm8_b;
sub ymm8_c ymm7_c ymm8_c;
sub ymm8_d ymm7_d ymm8_d;
sub ymm8_e ymm7_e ymm8_e;
sub ymm8_f ymm7_f ymm8_f;
(* vpaddw %ymm11,%ymm5,%ymm7                       #! PC = 0x5555555582e9 *)
add ymm7_0 ymm5_0 ymm11_0;
add ymm7_1 ymm5_1 ymm11_1;
add ymm7_2 ymm5_2 ymm11_2;
add ymm7_3 ymm5_3 ymm11_3;
add ymm7_4 ymm5_4 ymm11_4;
add ymm7_5 ymm5_5 ymm11_5;
add ymm7_6 ymm5_6 ymm11_6;
add ymm7_7 ymm5_7 ymm11_7;
add ymm7_8 ymm5_8 ymm11_8;
add ymm7_9 ymm5_9 ymm11_9;
add ymm7_a ymm5_a ymm11_a;
add ymm7_b ymm5_b ymm11_b;
add ymm7_c ymm5_c ymm11_c;
add ymm7_d ymm5_d ymm11_d;
add ymm7_e ymm5_e ymm11_e;
add ymm7_f ymm5_f ymm11_f;
(* vpsubw %ymm11,%ymm5,%ymm11                      #! PC = 0x5555555582ee *)
sub ymm11_0 ymm5_0 ymm11_0;
sub ymm11_1 ymm5_1 ymm11_1;
sub ymm11_2 ymm5_2 ymm11_2;
sub ymm11_3 ymm5_3 ymm11_3;
sub ymm11_4 ymm5_4 ymm11_4;
sub ymm11_5 ymm5_5 ymm11_5;
sub ymm11_6 ymm5_6 ymm11_6;
sub ymm11_7 ymm5_7 ymm11_7;
sub ymm11_8 ymm5_8 ymm11_8;
sub ymm11_9 ymm5_9 ymm11_9;
sub ymm11_a ymm5_a ymm11_a;
sub ymm11_b ymm5_b ymm11_b;
sub ymm11_c ymm5_c ymm11_c;
sub ymm11_d ymm5_d ymm11_d;
sub ymm11_e ymm5_e ymm11_e;
sub ymm11_f ymm5_f ymm11_f;
(* vpunpcklwd %ymm3,%ymm4,%ymm5                    #! PC = 0x5555555582f3 *)
mov lwd_0 ymm4_0;
mov lwd_1 ymm3_0;
mov lwd_2 ymm4_1;
mov lwd_3 ymm3_1;
mov lwd_4 ymm4_2;
mov lwd_5 ymm3_2;
mov lwd_6 ymm4_3;
mov lwd_7 ymm3_3;
mov lwd_8 ymm4_8;
mov lwd_9 ymm3_8;
mov lwd_a ymm4_9;
mov lwd_b ymm3_9;
mov lwd_c ymm4_a;
mov lwd_d ymm3_a;
mov lwd_e ymm4_b;
mov lwd_f ymm3_b;
mov ymm5_0 lwd_0;
mov ymm5_1 lwd_1;
mov ymm5_2 lwd_2;
mov ymm5_3 lwd_3;
mov ymm5_4 lwd_4;
mov ymm5_5 lwd_5;
mov ymm5_6 lwd_6;
mov ymm5_7 lwd_7;
mov ymm5_8 lwd_8;
mov ymm5_9 lwd_9;
mov ymm5_a lwd_a;
mov ymm5_b lwd_b;
mov ymm5_c lwd_c;
mov ymm5_d lwd_d;
mov ymm5_e lwd_e;
mov ymm5_f lwd_f;
(* vpunpckhwd %ymm3,%ymm4,%ymm3                    #! PC = 0x5555555582f7 *)
mov hwd_0 ymm4_4;
mov hwd_1 ymm3_4;
mov hwd_2 ymm4_5;
mov hwd_3 ymm3_5;
mov hwd_4 ymm4_6;
mov hwd_5 ymm3_6;
mov hwd_6 ymm4_7;
mov hwd_7 ymm3_7;
mov hwd_8 ymm4_c;
mov hwd_9 ymm3_c;
mov hwd_a ymm4_d;
mov hwd_b ymm3_d;
mov hwd_c ymm4_e;
mov hwd_d ymm3_e;
mov hwd_e ymm4_f;
mov hwd_f ymm3_f;
mov ymm3_0 hwd_0;
mov ymm3_1 hwd_1;
mov ymm3_2 hwd_2;
mov ymm3_3 hwd_3;
mov ymm3_4 hwd_4;
mov ymm3_5 hwd_5;
mov ymm3_6 hwd_6;
mov ymm3_7 hwd_7;
mov ymm3_8 hwd_8;
mov ymm3_9 hwd_9;
mov ymm3_a hwd_a;
mov ymm3_b hwd_b;
mov ymm3_c hwd_c;
mov ymm3_d hwd_d;
mov ymm3_e hwd_e;
mov ymm3_f hwd_f;
(* vpunpcklwd %ymm6,%ymm10,%ymm4                   #! PC = 0x5555555582fb *)
mov lwd_0 ymm10_0;
mov lwd_1 ymm6_0;
mov lwd_2 ymm10_1;
mov lwd_3 ymm6_1;
mov lwd_4 ymm10_2;
mov lwd_5 ymm6_2;
mov lwd_6 ymm10_3;
mov lwd_7 ymm6_3;
mov lwd_8 ymm10_8;
mov lwd_9 ymm6_8;
mov lwd_a ymm10_9;
mov lwd_b ymm6_9;
mov lwd_c ymm10_a;
mov lwd_d ymm6_a;
mov lwd_e ymm10_b;
mov lwd_f ymm6_b;
mov ymm4_0 lwd_0;
mov ymm4_1 lwd_1;
mov ymm4_2 lwd_2;
mov ymm4_3 lwd_3;
mov ymm4_4 lwd_4;
mov ymm4_5 lwd_5;
mov ymm4_6 lwd_6;
mov ymm4_7 lwd_7;
mov ymm4_8 lwd_8;
mov ymm4_9 lwd_9;
mov ymm4_a lwd_a;
mov ymm4_b lwd_b;
mov ymm4_c lwd_c;
mov ymm4_d lwd_d;
mov ymm4_e lwd_e;
mov ymm4_f lwd_f;
(* vpunpckhwd %ymm6,%ymm10,%ymm6                   #! PC = 0x5555555582ff *)
mov hwd_0 ymm10_4;
mov hwd_1 ymm6_4;
mov hwd_2 ymm10_5;
mov hwd_3 ymm6_5;
mov hwd_4 ymm10_6;
mov hwd_5 ymm6_6;
mov hwd_6 ymm10_7;
mov hwd_7 ymm6_7;
mov hwd_8 ymm10_c;
mov hwd_9 ymm6_c;
mov hwd_a ymm10_d;
mov hwd_b ymm6_d;
mov hwd_c ymm10_e;
mov hwd_d ymm6_e;
mov hwd_e ymm10_f;
mov hwd_f ymm6_f;
mov ymm6_0 hwd_0;
mov ymm6_1 hwd_1;
mov ymm6_2 hwd_2;
mov ymm6_3 hwd_3;
mov ymm6_4 hwd_4;
mov ymm6_5 hwd_5;
mov ymm6_6 hwd_6;
mov ymm6_7 hwd_7;
mov ymm6_8 hwd_8;
mov ymm6_9 hwd_9;
mov ymm6_a hwd_a;
mov ymm6_b hwd_b;
mov ymm6_c hwd_c;
mov ymm6_d hwd_d;
mov ymm6_e hwd_e;
mov ymm6_f hwd_f;
(* vpunpcklwd %ymm8,%ymm9,%ymm10                   #! PC = 0x555555558303 *)
mov lwd_0 ymm9_0;
mov lwd_1 ymm8_0;
mov lwd_2 ymm9_1;
mov lwd_3 ymm8_1;
mov lwd_4 ymm9_2;
mov lwd_5 ymm8_2;
mov lwd_6 ymm9_3;
mov lwd_7 ymm8_3;
mov lwd_8 ymm9_8;
mov lwd_9 ymm8_8;
mov lwd_a ymm9_9;
mov lwd_b ymm8_9;
mov lwd_c ymm9_a;
mov lwd_d ymm8_a;
mov lwd_e ymm9_b;
mov lwd_f ymm8_b;
mov ymm10_0 lwd_0;
mov ymm10_1 lwd_1;
mov ymm10_2 lwd_2;
mov ymm10_3 lwd_3;
mov ymm10_4 lwd_4;
mov ymm10_5 lwd_5;
mov ymm10_6 lwd_6;
mov ymm10_7 lwd_7;
mov ymm10_8 lwd_8;
mov ymm10_9 lwd_9;
mov ymm10_a lwd_a;
mov ymm10_b lwd_b;
mov ymm10_c lwd_c;
mov ymm10_d lwd_d;
mov ymm10_e lwd_e;
mov ymm10_f lwd_f;
(* vpunpckhwd %ymm8,%ymm9,%ymm8                    #! PC = 0x555555558308 *)
mov hwd_0 ymm9_4;
mov hwd_1 ymm8_4;
mov hwd_2 ymm9_5;
mov hwd_3 ymm8_5;
mov hwd_4 ymm9_6;
mov hwd_5 ymm8_6;
mov hwd_6 ymm9_7;
mov hwd_7 ymm8_7;
mov hwd_8 ymm9_c;
mov hwd_9 ymm8_c;
mov hwd_a ymm9_d;
mov hwd_b ymm8_d;
mov hwd_c ymm9_e;
mov hwd_d ymm8_e;
mov hwd_e ymm9_f;
mov hwd_f ymm8_f;
mov ymm8_0 hwd_0;
mov ymm8_1 hwd_1;
mov ymm8_2 hwd_2;
mov ymm8_3 hwd_3;
mov ymm8_4 hwd_4;
mov ymm8_5 hwd_5;
mov ymm8_6 hwd_6;
mov ymm8_7 hwd_7;
mov ymm8_8 hwd_8;
mov ymm8_9 hwd_9;
mov ymm8_a hwd_a;
mov ymm8_b hwd_b;
mov ymm8_c hwd_c;
mov ymm8_d hwd_d;
mov ymm8_e hwd_e;
mov ymm8_f hwd_f;
(* vpunpcklwd %ymm11,%ymm7,%ymm9                   #! PC = 0x55555555830d *)
mov lwd_0 ymm7_0;
mov lwd_1 ymm11_0;
mov lwd_2 ymm7_1;
mov lwd_3 ymm11_1;
mov lwd_4 ymm7_2;
mov lwd_5 ymm11_2;
mov lwd_6 ymm7_3;
mov lwd_7 ymm11_3;
mov lwd_8 ymm7_8;
mov lwd_9 ymm11_8;
mov lwd_a ymm7_9;
mov lwd_b ymm11_9;
mov lwd_c ymm7_a;
mov lwd_d ymm11_a;
mov lwd_e ymm7_b;
mov lwd_f ymm11_b;
mov ymm9_0 lwd_0;
mov ymm9_1 lwd_1;
mov ymm9_2 lwd_2;
mov ymm9_3 lwd_3;
mov ymm9_4 lwd_4;
mov ymm9_5 lwd_5;
mov ymm9_6 lwd_6;
mov ymm9_7 lwd_7;
mov ymm9_8 lwd_8;
mov ymm9_9 lwd_9;
mov ymm9_a lwd_a;
mov ymm9_b lwd_b;
mov ymm9_c lwd_c;
mov ymm9_d lwd_d;
mov ymm9_e lwd_e;
mov ymm9_f lwd_f;
(* vpunpckhwd %ymm11,%ymm7,%ymm11                  #! PC = 0x555555558312 *)
mov hwd_0 ymm7_4;
mov hwd_1 ymm11_4;
mov hwd_2 ymm7_5;
mov hwd_3 ymm11_5;
mov hwd_4 ymm7_6;
mov hwd_5 ymm11_6;
mov hwd_6 ymm7_7;
mov hwd_7 ymm11_7;
mov hwd_8 ymm7_c;
mov hwd_9 ymm11_c;
mov hwd_a ymm7_d;
mov hwd_b ymm11_d;
mov hwd_c ymm7_e;
mov hwd_d ymm11_e;
mov hwd_e ymm7_f;
mov hwd_f ymm11_f;
mov ymm11_0 hwd_0;
mov ymm11_1 hwd_1;
mov ymm11_2 hwd_2;
mov ymm11_3 hwd_3;
mov ymm11_4 hwd_4;
mov ymm11_5 hwd_5;
mov ymm11_6 hwd_6;
mov ymm11_7 hwd_7;
mov ymm11_8 hwd_8;
mov ymm11_9 hwd_9;
mov ymm11_a hwd_a;
mov ymm11_b hwd_b;
mov ymm11_c hwd_c;
mov ymm11_d hwd_d;
mov ymm11_e hwd_e;
mov ymm11_f hwd_f;
(* vpbroadcastq 0x140(%rdx),%ymm1                  #! EA = L0x555555561260; Value = 0x4ee67a89a62111ed; PC = 0x555555558317 *)
mov ymm1_0 L0x555555561260;
mov ymm1_1 L0x555555561262;
mov ymm1_2 L0x555555561264;
mov ymm1_3 L0x555555561266;
mov ymm1_4 L0x555555561260;
mov ymm1_5 L0x555555561262;
mov ymm1_6 L0x555555561264;
mov ymm1_7 L0x555555561266;
mov ymm1_8 L0x555555561260;
mov ymm1_9 L0x555555561262;
mov ymm1_a L0x555555561264;
mov ymm1_b L0x555555561266;
mov ymm1_c L0x555555561260;
mov ymm1_d L0x555555561262;
mov ymm1_e L0x555555561264;
mov ymm1_f L0x555555561266;
(* vpbroadcastq 0x340(%rdx),%ymm2                  #! EA = L0x555555561460; Value = 0x0ae6f4891021f3ed; PC = 0x555555558320 *)
mov ymm2_0 L0x555555561460;
mov ymm2_1 L0x555555561462;
mov ymm2_2 L0x555555561464;
mov ymm2_3 L0x555555561466;
mov ymm2_4 L0x555555561460;
mov ymm2_5 L0x555555561462;
mov ymm2_6 L0x555555561464;
mov ymm2_7 L0x555555561466;
mov ymm2_8 L0x555555561460;
mov ymm2_9 L0x555555561462;
mov ymm2_a L0x555555561464;
mov ymm2_b L0x555555561466;
mov ymm2_c L0x555555561460;
mov ymm2_d L0x555555561462;
mov ymm2_e L0x555555561464;
mov ymm2_f L0x555555561466;
(* vpmullw %ymm1,%ymm3,%ymm7                       #! PC = 0x555555558329 *)
smull mulHymm3_0 mulL_0 ymm1_0 ymm3_0;
smull mulHymm3_1 mulL_1 ymm1_1 ymm3_1;
smull mulHymm3_2 mulL_2 ymm1_2 ymm3_2;
smull mulHymm3_3 mulL_3 ymm1_3 ymm3_3;
smull mulHymm3_4 mulL_4 ymm1_4 ymm3_4;
smull mulHymm3_5 mulL_5 ymm1_5 ymm3_5;
smull mulHymm3_6 mulL_6 ymm1_6 ymm3_6;
smull mulHymm3_7 mulL_7 ymm1_7 ymm3_7;
smull mulHymm3_8 mulL_8 ymm1_8 ymm3_8;
smull mulHymm3_9 mulL_9 ymm1_9 ymm3_9;
smull mulHymm3_a mulL_a ymm1_a ymm3_a;
smull mulHymm3_b mulL_b ymm1_b ymm3_b;
smull mulHymm3_c mulL_c ymm1_c ymm3_c;
smull mulHymm3_d mulL_d ymm1_d ymm3_d;
smull mulHymm3_e mulL_e ymm1_e ymm3_e;
smull mulHymm3_f mulL_f ymm1_f ymm3_f;
cast ymm7_0@sint16 mulL_0;
cast ymm7_1@sint16 mulL_1;
cast ymm7_2@sint16 mulL_2;
cast ymm7_3@sint16 mulL_3;
cast ymm7_4@sint16 mulL_4;
cast ymm7_5@sint16 mulL_5;
cast ymm7_6@sint16 mulL_6;
cast ymm7_7@sint16 mulL_7;
cast ymm7_8@sint16 mulL_8;
cast ymm7_9@sint16 mulL_9;
cast ymm7_a@sint16 mulL_a;
cast ymm7_b@sint16 mulL_b;
cast ymm7_c@sint16 mulL_c;
cast ymm7_d@sint16 mulL_d;
cast ymm7_e@sint16 mulL_e;
cast ymm7_f@sint16 mulL_f;
(* vpmulhw %ymm2,%ymm3,%ymm3                       #! PC = 0x55555555832d *)
smull mulH_0 mulLymm3_0 ymm3_0 ymm2_0;
smull mulH_1 mulLymm3_1 ymm3_1 ymm2_1;
smull mulH_2 mulLymm3_2 ymm3_2 ymm2_2;
smull mulH_3 mulLymm3_3 ymm3_3 ymm2_3;
smull mulH_4 mulLymm3_4 ymm3_4 ymm2_4;
smull mulH_5 mulLymm3_5 ymm3_5 ymm2_5;
smull mulH_6 mulLymm3_6 ymm3_6 ymm2_6;
smull mulH_7 mulLymm3_7 ymm3_7 ymm2_7;
smull mulH_8 mulLymm3_8 ymm3_8 ymm2_8;
smull mulH_9 mulLymm3_9 ymm3_9 ymm2_9;
smull mulH_a mulLymm3_a ymm3_a ymm2_a;
smull mulH_b mulLymm3_b ymm3_b ymm2_b;
smull mulH_c mulLymm3_c ymm3_c ymm2_c;
smull mulH_d mulLymm3_d ymm3_d ymm2_d;
smull mulH_e mulLymm3_e ymm3_e ymm2_e;
smull mulH_f mulLymm3_f ymm3_f ymm2_f;
mov ymm3_0 mulH_0;
mov ymm3_1 mulH_1;
mov ymm3_2 mulH_2;
mov ymm3_3 mulH_3;
mov ymm3_4 mulH_4;
mov ymm3_5 mulH_5;
mov ymm3_6 mulH_6;
mov ymm3_7 mulH_7;
mov ymm3_8 mulH_8;
mov ymm3_9 mulH_9;
mov ymm3_a mulH_a;
mov ymm3_b mulH_b;
mov ymm3_c mulH_c;
mov ymm3_d mulH_d;
mov ymm3_e mulH_e;
mov ymm3_f mulH_f;
(* vpmulhw %ymm0,%ymm7,%ymm7                       #! PC = 0x555555558331 *)
smull mulH_0 red_0 ymm7_0 ymm0_0;
assert true && red_0 = mulLymm3_0;
assume red_0 = mulLymm3_0 && true;
smull mulH_1 red_1 ymm7_1 ymm0_1;
assert true && red_1 = mulLymm3_1;
assume red_1 = mulLymm3_1 && true;
smull mulH_2 red_2 ymm7_2 ymm0_2;
assert true && red_2 = mulLymm3_2;
assume red_2 = mulLymm3_2 && true;
smull mulH_3 red_3 ymm7_3 ymm0_3;
assert true && red_3 = mulLymm3_3;
assume red_3 = mulLymm3_3 && true;
smull mulH_4 red_4 ymm7_4 ymm0_4;
assert true && red_4 = mulLymm3_4;
assume red_4 = mulLymm3_4 && true;
smull mulH_5 red_5 ymm7_5 ymm0_5;
assert true && red_5 = mulLymm3_5;
assume red_5 = mulLymm3_5 && true;
smull mulH_6 red_6 ymm7_6 ymm0_6;
assert true && red_6 = mulLymm3_6;
assume red_6 = mulLymm3_6 && true;
smull mulH_7 red_7 ymm7_7 ymm0_7;
assert true && red_7 = mulLymm3_7;
assume red_7 = mulLymm3_7 && true;
smull mulH_8 red_8 ymm7_8 ymm0_8;
assert true && red_8 = mulLymm3_8;
assume red_8 = mulLymm3_8 && true;
smull mulH_9 red_9 ymm7_9 ymm0_9;
assert true && red_9 = mulLymm3_9;
assume red_9 = mulLymm3_9 && true;
smull mulH_a red_a ymm7_a ymm0_a;
assert true && red_a = mulLymm3_a;
assume red_a = mulLymm3_a && true;
smull mulH_b red_b ymm7_b ymm0_b;
assert true && red_b = mulLymm3_b;
assume red_b = mulLymm3_b && true;
smull mulH_c red_c ymm7_c ymm0_c;
assert true && red_c = mulLymm3_c;
assume red_c = mulLymm3_c && true;
smull mulH_d red_d ymm7_d ymm0_d;
assert true && red_d = mulLymm3_d;
assume red_d = mulLymm3_d && true;
smull mulH_e red_e ymm7_e ymm0_e;
assert true && red_e = mulLymm3_e;
assume red_e = mulLymm3_e && true;
smull mulH_f red_f ymm7_f ymm0_f;
assert true && red_f = mulLymm3_f;
assume red_f = mulLymm3_f && true;
mov ymm7_0 mulH_0;
mov ymm7_1 mulH_1;
mov ymm7_2 mulH_2;
mov ymm7_3 mulH_3;
mov ymm7_4 mulH_4;
mov ymm7_5 mulH_5;
mov ymm7_6 mulH_6;
mov ymm7_7 mulH_7;
mov ymm7_8 mulH_8;
mov ymm7_9 mulH_9;
mov ymm7_a mulH_a;
mov ymm7_b mulH_b;
mov ymm7_c mulH_c;
mov ymm7_d mulH_d;
mov ymm7_e mulH_e;
mov ymm7_f mulH_f;
(* vpsubw %ymm7,%ymm3,%ymm3                        #! PC = 0x555555558335 *)
sub ymm3_0 ymm3_0 ymm7_0;
sub ymm3_1 ymm3_1 ymm7_1;
sub ymm3_2 ymm3_2 ymm7_2;
sub ymm3_3 ymm3_3 ymm7_3;
sub ymm3_4 ymm3_4 ymm7_4;
sub ymm3_5 ymm3_5 ymm7_5;
sub ymm3_6 ymm3_6 ymm7_6;
sub ymm3_7 ymm3_7 ymm7_7;
sub ymm3_8 ymm3_8 ymm7_8;
sub ymm3_9 ymm3_9 ymm7_9;
sub ymm3_a ymm3_a ymm7_a;
sub ymm3_b ymm3_b ymm7_b;
sub ymm3_c ymm3_c ymm7_c;
sub ymm3_d ymm3_d ymm7_d;
sub ymm3_e ymm3_e ymm7_e;
sub ymm3_f ymm3_f ymm7_f;
(* vpbroadcastq 0x148(%rdx),%ymm1                  #! EA = L0x555555561268; Value = 0xa1de58045d04090c; PC = 0x555555558339 *)
mov ymm1_0 L0x555555561268;
mov ymm1_1 L0x55555556126a;
mov ymm1_2 L0x55555556126c;
mov ymm1_3 L0x55555556126e;
mov ymm1_4 L0x555555561268;
mov ymm1_5 L0x55555556126a;
mov ymm1_6 L0x55555556126c;
mov ymm1_7 L0x55555556126e;
mov ymm1_8 L0x555555561268;
mov ymm1_9 L0x55555556126a;
mov ymm1_a L0x55555556126c;
mov ymm1_b L0x55555556126e;
mov ymm1_c L0x555555561268;
mov ymm1_d L0x55555556126a;
mov ymm1_e L0x55555556126c;
mov ymm1_f L0x55555556126e;
(* vpbroadcastq 0x348(%rdx),%ymm2                  #! EA = L0x555555561468; Value = 0x0dde00040504010c; PC = 0x555555558342 *)
mov ymm2_0 L0x555555561468;
mov ymm2_1 L0x55555556146a;
mov ymm2_2 L0x55555556146c;
mov ymm2_3 L0x55555556146e;
mov ymm2_4 L0x555555561468;
mov ymm2_5 L0x55555556146a;
mov ymm2_6 L0x55555556146c;
mov ymm2_7 L0x55555556146e;
mov ymm2_8 L0x555555561468;
mov ymm2_9 L0x55555556146a;
mov ymm2_a L0x55555556146c;
mov ymm2_b L0x55555556146e;
mov ymm2_c L0x555555561468;
mov ymm2_d L0x55555556146a;
mov ymm2_e L0x55555556146c;
mov ymm2_f L0x55555556146e;
(* vpmullw %ymm1,%ymm6,%ymm7                       #! PC = 0x55555555834b *)
smull mulHymm6_0 mulL_0 ymm1_0 ymm6_0;
smull mulHymm6_1 mulL_1 ymm1_1 ymm6_1;
smull mulHymm6_2 mulL_2 ymm1_2 ymm6_2;
smull mulHymm6_3 mulL_3 ymm1_3 ymm6_3;
smull mulHymm6_4 mulL_4 ymm1_4 ymm6_4;
smull mulHymm6_5 mulL_5 ymm1_5 ymm6_5;
smull mulHymm6_6 mulL_6 ymm1_6 ymm6_6;
smull mulHymm6_7 mulL_7 ymm1_7 ymm6_7;
smull mulHymm6_8 mulL_8 ymm1_8 ymm6_8;
smull mulHymm6_9 mulL_9 ymm1_9 ymm6_9;
smull mulHymm6_a mulL_a ymm1_a ymm6_a;
smull mulHymm6_b mulL_b ymm1_b ymm6_b;
smull mulHymm6_c mulL_c ymm1_c ymm6_c;
smull mulHymm6_d mulL_d ymm1_d ymm6_d;
smull mulHymm6_e mulL_e ymm1_e ymm6_e;
smull mulHymm6_f mulL_f ymm1_f ymm6_f;
cast ymm7_0@sint16 mulL_0;
cast ymm7_1@sint16 mulL_1;
cast ymm7_2@sint16 mulL_2;
cast ymm7_3@sint16 mulL_3;
cast ymm7_4@sint16 mulL_4;
cast ymm7_5@sint16 mulL_5;
cast ymm7_6@sint16 mulL_6;
cast ymm7_7@sint16 mulL_7;
cast ymm7_8@sint16 mulL_8;
cast ymm7_9@sint16 mulL_9;
cast ymm7_a@sint16 mulL_a;
cast ymm7_b@sint16 mulL_b;
cast ymm7_c@sint16 mulL_c;
cast ymm7_d@sint16 mulL_d;
cast ymm7_e@sint16 mulL_e;
cast ymm7_f@sint16 mulL_f;
(* vpmulhw %ymm2,%ymm6,%ymm6                       #! PC = 0x55555555834f *)
smull mulH_0 mulLymm6_0 ymm6_0 ymm2_0;
smull mulH_1 mulLymm6_1 ymm6_1 ymm2_1;
smull mulH_2 mulLymm6_2 ymm6_2 ymm2_2;
smull mulH_3 mulLymm6_3 ymm6_3 ymm2_3;
smull mulH_4 mulLymm6_4 ymm6_4 ymm2_4;
smull mulH_5 mulLymm6_5 ymm6_5 ymm2_5;
smull mulH_6 mulLymm6_6 ymm6_6 ymm2_6;
smull mulH_7 mulLymm6_7 ymm6_7 ymm2_7;
smull mulH_8 mulLymm6_8 ymm6_8 ymm2_8;
smull mulH_9 mulLymm6_9 ymm6_9 ymm2_9;
smull mulH_a mulLymm6_a ymm6_a ymm2_a;
smull mulH_b mulLymm6_b ymm6_b ymm2_b;
smull mulH_c mulLymm6_c ymm6_c ymm2_c;
smull mulH_d mulLymm6_d ymm6_d ymm2_d;
smull mulH_e mulLymm6_e ymm6_e ymm2_e;
smull mulH_f mulLymm6_f ymm6_f ymm2_f;
mov ymm6_0 mulH_0;
mov ymm6_1 mulH_1;
mov ymm6_2 mulH_2;
mov ymm6_3 mulH_3;
mov ymm6_4 mulH_4;
mov ymm6_5 mulH_5;
mov ymm6_6 mulH_6;
mov ymm6_7 mulH_7;
mov ymm6_8 mulH_8;
mov ymm6_9 mulH_9;
mov ymm6_a mulH_a;
mov ymm6_b mulH_b;
mov ymm6_c mulH_c;
mov ymm6_d mulH_d;
mov ymm6_e mulH_e;
mov ymm6_f mulH_f;
(* vpmulhw %ymm0,%ymm7,%ymm7                       #! PC = 0x555555558353 *)
smull mulH_0 red_0 ymm7_0 ymm0_0;
assert true && red_0 = mulLymm6_0;
assume red_0 = mulLymm6_0 && true;
smull mulH_1 red_1 ymm7_1 ymm0_1;
assert true && red_1 = mulLymm6_1;
assume red_1 = mulLymm6_1 && true;
smull mulH_2 red_2 ymm7_2 ymm0_2;
assert true && red_2 = mulLymm6_2;
assume red_2 = mulLymm6_2 && true;
smull mulH_3 red_3 ymm7_3 ymm0_3;
assert true && red_3 = mulLymm6_3;
assume red_3 = mulLymm6_3 && true;
smull mulH_4 red_4 ymm7_4 ymm0_4;
assert true && red_4 = mulLymm6_4;
assume red_4 = mulLymm6_4 && true;
smull mulH_5 red_5 ymm7_5 ymm0_5;
assert true && red_5 = mulLymm6_5;
assume red_5 = mulLymm6_5 && true;
smull mulH_6 red_6 ymm7_6 ymm0_6;
assert true && red_6 = mulLymm6_6;
assume red_6 = mulLymm6_6 && true;
smull mulH_7 red_7 ymm7_7 ymm0_7;
assert true && red_7 = mulLymm6_7;
assume red_7 = mulLymm6_7 && true;
smull mulH_8 red_8 ymm7_8 ymm0_8;
assert true && red_8 = mulLymm6_8;
assume red_8 = mulLymm6_8 && true;
smull mulH_9 red_9 ymm7_9 ymm0_9;
assert true && red_9 = mulLymm6_9;
assume red_9 = mulLymm6_9 && true;
smull mulH_a red_a ymm7_a ymm0_a;
assert true && red_a = mulLymm6_a;
assume red_a = mulLymm6_a && true;
smull mulH_b red_b ymm7_b ymm0_b;
assert true && red_b = mulLymm6_b;
assume red_b = mulLymm6_b && true;
smull mulH_c red_c ymm7_c ymm0_c;
assert true && red_c = mulLymm6_c;
assume red_c = mulLymm6_c && true;
smull mulH_d red_d ymm7_d ymm0_d;
assert true && red_d = mulLymm6_d;
assume red_d = mulLymm6_d && true;
smull mulH_e red_e ymm7_e ymm0_e;
assert true && red_e = mulLymm6_e;
assume red_e = mulLymm6_e && true;
smull mulH_f red_f ymm7_f ymm0_f;
assert true && red_f = mulLymm6_f;
assume red_f = mulLymm6_f && true;
mov ymm7_0 mulH_0;
mov ymm7_1 mulH_1;
mov ymm7_2 mulH_2;
mov ymm7_3 mulH_3;
mov ymm7_4 mulH_4;
mov ymm7_5 mulH_5;
mov ymm7_6 mulH_6;
mov ymm7_7 mulH_7;
mov ymm7_8 mulH_8;
mov ymm7_9 mulH_9;
mov ymm7_a mulH_a;
mov ymm7_b mulH_b;
mov ymm7_c mulH_c;
mov ymm7_d mulH_d;
mov ymm7_e mulH_e;
mov ymm7_f mulH_f;
(* vpsubw %ymm7,%ymm6,%ymm6                        #! PC = 0x555555558357 *)
sub ymm6_0 ymm6_0 ymm7_0;
sub ymm6_1 ymm6_1 ymm7_1;
sub ymm6_2 ymm6_2 ymm7_2;
sub ymm6_3 ymm6_3 ymm7_3;
sub ymm6_4 ymm6_4 ymm7_4;
sub ymm6_5 ymm6_5 ymm7_5;
sub ymm6_6 ymm6_6 ymm7_6;
sub ymm6_7 ymm6_7 ymm7_7;
sub ymm6_8 ymm6_8 ymm7_8;
sub ymm6_9 ymm6_9 ymm7_9;
sub ymm6_a ymm6_a ymm7_a;
sub ymm6_b ymm6_b ymm7_b;
sub ymm6_c ymm6_c ymm7_c;
sub ymm6_d ymm6_d ymm7_d;
sub ymm6_e ymm6_e ymm7_e;
sub ymm6_f ymm6_f ymm7_f;
(* vpbroadcastq 0x150(%rdx),%ymm1                  #! EA = L0x555555561270; Value = 0xa7a15ecddf07cfa6; PC = 0x55555555835b *)
mov ymm1_0 L0x555555561270;
mov ymm1_1 L0x555555561272;
mov ymm1_2 L0x555555561274;
mov ymm1_3 L0x555555561276;
mov ymm1_4 L0x555555561270;
mov ymm1_5 L0x555555561272;
mov ymm1_6 L0x555555561274;
mov ymm1_7 L0x555555561276;
mov ymm1_8 L0x555555561270;
mov ymm1_9 L0x555555561272;
mov ymm1_a L0x555555561274;
mov ymm1_b L0x555555561276;
mov ymm1_c L0x555555561270;
mov ymm1_d L0x555555561272;
mov ymm1_e L0x555555561274;
mov ymm1_f L0x555555561276;
(* vpbroadcastq 0x350(%rdx),%ymm2                  #! EA = L0x555555561470; Value = 0x11a100cd05070ba6; PC = 0x555555558364 *)
mov ymm2_0 L0x555555561470;
mov ymm2_1 L0x555555561472;
mov ymm2_2 L0x555555561474;
mov ymm2_3 L0x555555561476;
mov ymm2_4 L0x555555561470;
mov ymm2_5 L0x555555561472;
mov ymm2_6 L0x555555561474;
mov ymm2_7 L0x555555561476;
mov ymm2_8 L0x555555561470;
mov ymm2_9 L0x555555561472;
mov ymm2_a L0x555555561474;
mov ymm2_b L0x555555561476;
mov ymm2_c L0x555555561470;
mov ymm2_d L0x555555561472;
mov ymm2_e L0x555555561474;
mov ymm2_f L0x555555561476;
(* vpmullw %ymm1,%ymm8,%ymm7                       #! PC = 0x55555555836d *)
smull mulHymm8_0 mulL_0 ymm1_0 ymm8_0;
smull mulHymm8_1 mulL_1 ymm1_1 ymm8_1;
smull mulHymm8_2 mulL_2 ymm1_2 ymm8_2;
smull mulHymm8_3 mulL_3 ymm1_3 ymm8_3;
smull mulHymm8_4 mulL_4 ymm1_4 ymm8_4;
smull mulHymm8_5 mulL_5 ymm1_5 ymm8_5;
smull mulHymm8_6 mulL_6 ymm1_6 ymm8_6;
smull mulHymm8_7 mulL_7 ymm1_7 ymm8_7;
smull mulHymm8_8 mulL_8 ymm1_8 ymm8_8;
smull mulHymm8_9 mulL_9 ymm1_9 ymm8_9;
smull mulHymm8_a mulL_a ymm1_a ymm8_a;
smull mulHymm8_b mulL_b ymm1_b ymm8_b;
smull mulHymm8_c mulL_c ymm1_c ymm8_c;
smull mulHymm8_d mulL_d ymm1_d ymm8_d;
smull mulHymm8_e mulL_e ymm1_e ymm8_e;
smull mulHymm8_f mulL_f ymm1_f ymm8_f;
cast ymm7_0@sint16 mulL_0;
cast ymm7_1@sint16 mulL_1;
cast ymm7_2@sint16 mulL_2;
cast ymm7_3@sint16 mulL_3;
cast ymm7_4@sint16 mulL_4;
cast ymm7_5@sint16 mulL_5;
cast ymm7_6@sint16 mulL_6;
cast ymm7_7@sint16 mulL_7;
cast ymm7_8@sint16 mulL_8;
cast ymm7_9@sint16 mulL_9;
cast ymm7_a@sint16 mulL_a;
cast ymm7_b@sint16 mulL_b;
cast ymm7_c@sint16 mulL_c;
cast ymm7_d@sint16 mulL_d;
cast ymm7_e@sint16 mulL_e;
cast ymm7_f@sint16 mulL_f;
(* vpmulhw %ymm2,%ymm8,%ymm8                       #! PC = 0x555555558371 *)
smull mulH_0 mulLymm8_0 ymm8_0 ymm2_0;
smull mulH_1 mulLymm8_1 ymm8_1 ymm2_1;
smull mulH_2 mulLymm8_2 ymm8_2 ymm2_2;
smull mulH_3 mulLymm8_3 ymm8_3 ymm2_3;
smull mulH_4 mulLymm8_4 ymm8_4 ymm2_4;
smull mulH_5 mulLymm8_5 ymm8_5 ymm2_5;
smull mulH_6 mulLymm8_6 ymm8_6 ymm2_6;
smull mulH_7 mulLymm8_7 ymm8_7 ymm2_7;
smull mulH_8 mulLymm8_8 ymm8_8 ymm2_8;
smull mulH_9 mulLymm8_9 ymm8_9 ymm2_9;
smull mulH_a mulLymm8_a ymm8_a ymm2_a;
smull mulH_b mulLymm8_b ymm8_b ymm2_b;
smull mulH_c mulLymm8_c ymm8_c ymm2_c;
smull mulH_d mulLymm8_d ymm8_d ymm2_d;
smull mulH_e mulLymm8_e ymm8_e ymm2_e;
smull mulH_f mulLymm8_f ymm8_f ymm2_f;
mov ymm8_0 mulH_0;
mov ymm8_1 mulH_1;
mov ymm8_2 mulH_2;
mov ymm8_3 mulH_3;
mov ymm8_4 mulH_4;
mov ymm8_5 mulH_5;
mov ymm8_6 mulH_6;
mov ymm8_7 mulH_7;
mov ymm8_8 mulH_8;
mov ymm8_9 mulH_9;
mov ymm8_a mulH_a;
mov ymm8_b mulH_b;
mov ymm8_c mulH_c;
mov ymm8_d mulH_d;
mov ymm8_e mulH_e;
mov ymm8_f mulH_f;
(* vpmulhw %ymm0,%ymm7,%ymm7                       #! PC = 0x555555558375 *)
smull mulH_0 red_0 ymm7_0 ymm0_0;
assert true && red_0 = mulLymm8_0;
assume red_0 = mulLymm8_0 && true;
smull mulH_1 red_1 ymm7_1 ymm0_1;
assert true && red_1 = mulLymm8_1;
assume red_1 = mulLymm8_1 && true;
smull mulH_2 red_2 ymm7_2 ymm0_2;
assert true && red_2 = mulLymm8_2;
assume red_2 = mulLymm8_2 && true;
smull mulH_3 red_3 ymm7_3 ymm0_3;
assert true && red_3 = mulLymm8_3;
assume red_3 = mulLymm8_3 && true;
smull mulH_4 red_4 ymm7_4 ymm0_4;
assert true && red_4 = mulLymm8_4;
assume red_4 = mulLymm8_4 && true;
smull mulH_5 red_5 ymm7_5 ymm0_5;
assert true && red_5 = mulLymm8_5;
assume red_5 = mulLymm8_5 && true;
smull mulH_6 red_6 ymm7_6 ymm0_6;
assert true && red_6 = mulLymm8_6;
assume red_6 = mulLymm8_6 && true;
smull mulH_7 red_7 ymm7_7 ymm0_7;
assert true && red_7 = mulLymm8_7;
assume red_7 = mulLymm8_7 && true;
smull mulH_8 red_8 ymm7_8 ymm0_8;
assert true && red_8 = mulLymm8_8;
assume red_8 = mulLymm8_8 && true;
smull mulH_9 red_9 ymm7_9 ymm0_9;
assert true && red_9 = mulLymm8_9;
assume red_9 = mulLymm8_9 && true;
smull mulH_a red_a ymm7_a ymm0_a;
assert true && red_a = mulLymm8_a;
assume red_a = mulLymm8_a && true;
smull mulH_b red_b ymm7_b ymm0_b;
assert true && red_b = mulLymm8_b;
assume red_b = mulLymm8_b && true;
smull mulH_c red_c ymm7_c ymm0_c;
assert true && red_c = mulLymm8_c;
assume red_c = mulLymm8_c && true;
smull mulH_d red_d ymm7_d ymm0_d;
assert true && red_d = mulLymm8_d;
assume red_d = mulLymm8_d && true;
smull mulH_e red_e ymm7_e ymm0_e;
assert true && red_e = mulLymm8_e;
assume red_e = mulLymm8_e && true;
smull mulH_f red_f ymm7_f ymm0_f;
assert true && red_f = mulLymm8_f;
assume red_f = mulLymm8_f && true;
mov ymm7_0 mulH_0;
mov ymm7_1 mulH_1;
mov ymm7_2 mulH_2;
mov ymm7_3 mulH_3;
mov ymm7_4 mulH_4;
mov ymm7_5 mulH_5;
mov ymm7_6 mulH_6;
mov ymm7_7 mulH_7;
mov ymm7_8 mulH_8;
mov ymm7_9 mulH_9;
mov ymm7_a mulH_a;
mov ymm7_b mulH_b;
mov ymm7_c mulH_c;
mov ymm7_d mulH_d;
mov ymm7_e mulH_e;
mov ymm7_f mulH_f;
(* vpsubw %ymm7,%ymm8,%ymm8                        #! PC = 0x555555558379 *)
sub ymm8_0 ymm8_0 ymm7_0;
sub ymm8_1 ymm8_1 ymm7_1;
sub ymm8_2 ymm8_2 ymm7_2;
sub ymm8_3 ymm8_3 ymm7_3;
sub ymm8_4 ymm8_4 ymm7_4;
sub ymm8_5 ymm8_5 ymm7_5;
sub ymm8_6 ymm8_6 ymm7_6;
sub ymm8_7 ymm8_7 ymm7_7;
sub ymm8_8 ymm8_8 ymm7_8;
sub ymm8_9 ymm8_9 ymm7_9;
sub ymm8_a ymm8_a ymm7_a;
sub ymm8_b ymm8_b ymm7_b;
sub ymm8_c ymm8_c ymm7_c;
sub ymm8_d ymm8_d ymm7_d;
sub ymm8_e ymm8_e ymm7_e;
sub ymm8_f ymm8_f ymm7_f;
(* vpbroadcastq 0x158(%rdx),%ymm1                  #! EA = L0x555555561278; Value = 0xa93fc2084b7ec7fb; PC = 0x55555555837d *)
mov ymm1_0 L0x555555561278;
mov ymm1_1 L0x55555556127a;
mov ymm1_2 L0x55555556127c;
mov ymm1_3 L0x55555556127e;
mov ymm1_4 L0x555555561278;
mov ymm1_5 L0x55555556127a;
mov ymm1_6 L0x55555556127c;
mov ymm1_7 L0x55555556127e;
mov ymm1_8 L0x555555561278;
mov ymm1_9 L0x55555556127a;
mov ymm1_a L0x55555556127c;
mov ymm1_b L0x55555556127e;
mov ymm1_c L0x555555561278;
mov ymm1_d L0x55555556127a;
mov ymm1_e L0x55555556127c;
mov ymm1_f L0x55555556127e;
(* vpbroadcastq 0x358(%rdx),%ymm2                  #! EA = L0x555555561478; Value = 0xff3f1208f77ef5fb; PC = 0x555555558386 *)
mov ymm2_0 L0x555555561478;
mov ymm2_1 L0x55555556147a;
mov ymm2_2 L0x55555556147c;
mov ymm2_3 L0x55555556147e;
mov ymm2_4 L0x555555561478;
mov ymm2_5 L0x55555556147a;
mov ymm2_6 L0x55555556147c;
mov ymm2_7 L0x55555556147e;
mov ymm2_8 L0x555555561478;
mov ymm2_9 L0x55555556147a;
mov ymm2_a L0x55555556147c;
mov ymm2_b L0x55555556147e;
mov ymm2_c L0x555555561478;
mov ymm2_d L0x55555556147a;
mov ymm2_e L0x55555556147c;
mov ymm2_f L0x55555556147e;
(* vpmullw %ymm1,%ymm11,%ymm7                      #! PC = 0x55555555838f *)
smull mulHymm11_0 mulL_0 ymm1_0 ymm11_0;
smull mulHymm11_1 mulL_1 ymm1_1 ymm11_1;
smull mulHymm11_2 mulL_2 ymm1_2 ymm11_2;
smull mulHymm11_3 mulL_3 ymm1_3 ymm11_3;
smull mulHymm11_4 mulL_4 ymm1_4 ymm11_4;
smull mulHymm11_5 mulL_5 ymm1_5 ymm11_5;
smull mulHymm11_6 mulL_6 ymm1_6 ymm11_6;
smull mulHymm11_7 mulL_7 ymm1_7 ymm11_7;
smull mulHymm11_8 mulL_8 ymm1_8 ymm11_8;
smull mulHymm11_9 mulL_9 ymm1_9 ymm11_9;
smull mulHymm11_a mulL_a ymm1_a ymm11_a;
smull mulHymm11_b mulL_b ymm1_b ymm11_b;
smull mulHymm11_c mulL_c ymm1_c ymm11_c;
smull mulHymm11_d mulL_d ymm1_d ymm11_d;
smull mulHymm11_e mulL_e ymm1_e ymm11_e;
smull mulHymm11_f mulL_f ymm1_f ymm11_f;
cast ymm7_0@sint16 mulL_0;
cast ymm7_1@sint16 mulL_1;
cast ymm7_2@sint16 mulL_2;
cast ymm7_3@sint16 mulL_3;
cast ymm7_4@sint16 mulL_4;
cast ymm7_5@sint16 mulL_5;
cast ymm7_6@sint16 mulL_6;
cast ymm7_7@sint16 mulL_7;
cast ymm7_8@sint16 mulL_8;
cast ymm7_9@sint16 mulL_9;
cast ymm7_a@sint16 mulL_a;
cast ymm7_b@sint16 mulL_b;
cast ymm7_c@sint16 mulL_c;
cast ymm7_d@sint16 mulL_d;
cast ymm7_e@sint16 mulL_e;
cast ymm7_f@sint16 mulL_f;
(* vpmulhw %ymm2,%ymm11,%ymm11                     #! PC = 0x555555558393 *)
smull mulH_0 mulLymm11_0 ymm11_0 ymm2_0;
smull mulH_1 mulLymm11_1 ymm11_1 ymm2_1;
smull mulH_2 mulLymm11_2 ymm11_2 ymm2_2;
smull mulH_3 mulLymm11_3 ymm11_3 ymm2_3;
smull mulH_4 mulLymm11_4 ymm11_4 ymm2_4;
smull mulH_5 mulLymm11_5 ymm11_5 ymm2_5;
smull mulH_6 mulLymm11_6 ymm11_6 ymm2_6;
smull mulH_7 mulLymm11_7 ymm11_7 ymm2_7;
smull mulH_8 mulLymm11_8 ymm11_8 ymm2_8;
smull mulH_9 mulLymm11_9 ymm11_9 ymm2_9;
smull mulH_a mulLymm11_a ymm11_a ymm2_a;
smull mulH_b mulLymm11_b ymm11_b ymm2_b;
smull mulH_c mulLymm11_c ymm11_c ymm2_c;
smull mulH_d mulLymm11_d ymm11_d ymm2_d;
smull mulH_e mulLymm11_e ymm11_e ymm2_e;
smull mulH_f mulLymm11_f ymm11_f ymm2_f;
mov ymm11_0 mulH_0;
mov ymm11_1 mulH_1;
mov ymm11_2 mulH_2;
mov ymm11_3 mulH_3;
mov ymm11_4 mulH_4;
mov ymm11_5 mulH_5;
mov ymm11_6 mulH_6;
mov ymm11_7 mulH_7;
mov ymm11_8 mulH_8;
mov ymm11_9 mulH_9;
mov ymm11_a mulH_a;
mov ymm11_b mulH_b;
mov ymm11_c mulH_c;
mov ymm11_d mulH_d;
mov ymm11_e mulH_e;
mov ymm11_f mulH_f;
(* vpmulhw %ymm0,%ymm7,%ymm7                       #! PC = 0x555555558397 *)
smull mulH_0 red_0 ymm7_0 ymm0_0;
assert true && red_0 = mulLymm11_0;
assume red_0 = mulLymm11_0 && true;
smull mulH_1 red_1 ymm7_1 ymm0_1;
assert true && red_1 = mulLymm11_1;
assume red_1 = mulLymm11_1 && true;
smull mulH_2 red_2 ymm7_2 ymm0_2;
assert true && red_2 = mulLymm11_2;
assume red_2 = mulLymm11_2 && true;
smull mulH_3 red_3 ymm7_3 ymm0_3;
assert true && red_3 = mulLymm11_3;
assume red_3 = mulLymm11_3 && true;
smull mulH_4 red_4 ymm7_4 ymm0_4;
assert true && red_4 = mulLymm11_4;
assume red_4 = mulLymm11_4 && true;
smull mulH_5 red_5 ymm7_5 ymm0_5;
assert true && red_5 = mulLymm11_5;
assume red_5 = mulLymm11_5 && true;
smull mulH_6 red_6 ymm7_6 ymm0_6;
assert true && red_6 = mulLymm11_6;
assume red_6 = mulLymm11_6 && true;
smull mulH_7 red_7 ymm7_7 ymm0_7;
assert true && red_7 = mulLymm11_7;
assume red_7 = mulLymm11_7 && true;
smull mulH_8 red_8 ymm7_8 ymm0_8;
assert true && red_8 = mulLymm11_8;
assume red_8 = mulLymm11_8 && true;
smull mulH_9 red_9 ymm7_9 ymm0_9;
assert true && red_9 = mulLymm11_9;
assume red_9 = mulLymm11_9 && true;
smull mulH_a red_a ymm7_a ymm0_a;
assert true && red_a = mulLymm11_a;
assume red_a = mulLymm11_a && true;
smull mulH_b red_b ymm7_b ymm0_b;
assert true && red_b = mulLymm11_b;
assume red_b = mulLymm11_b && true;
smull mulH_c red_c ymm7_c ymm0_c;
assert true && red_c = mulLymm11_c;
assume red_c = mulLymm11_c && true;
smull mulH_d red_d ymm7_d ymm0_d;
assert true && red_d = mulLymm11_d;
assume red_d = mulLymm11_d && true;
smull mulH_e red_e ymm7_e ymm0_e;
assert true && red_e = mulLymm11_e;
assume red_e = mulLymm11_e && true;
smull mulH_f red_f ymm7_f ymm0_f;
assert true && red_f = mulLymm11_f;
assume red_f = mulLymm11_f && true;
mov ymm7_0 mulH_0;
mov ymm7_1 mulH_1;
mov ymm7_2 mulH_2;
mov ymm7_3 mulH_3;
mov ymm7_4 mulH_4;
mov ymm7_5 mulH_5;
mov ymm7_6 mulH_6;
mov ymm7_7 mulH_7;
mov ymm7_8 mulH_8;
mov ymm7_9 mulH_9;
mov ymm7_a mulH_a;
mov ymm7_b mulH_b;
mov ymm7_c mulH_c;
mov ymm7_d mulH_d;
mov ymm7_e mulH_e;
mov ymm7_f mulH_f;
(* vpsubw %ymm7,%ymm11,%ymm11                      #! PC = 0x55555555839b *)
sub ymm11_0 ymm11_0 ymm7_0;
sub ymm11_1 ymm11_1 ymm7_1;
sub ymm11_2 ymm11_2 ymm7_2;
sub ymm11_3 ymm11_3 ymm7_3;
sub ymm11_4 ymm11_4 ymm7_4;
sub ymm11_5 ymm11_5 ymm7_5;
sub ymm11_6 ymm11_6 ymm7_6;
sub ymm11_7 ymm11_7 ymm7_7;
sub ymm11_8 ymm11_8 ymm7_8;
sub ymm11_9 ymm11_9 ymm7_9;
sub ymm11_a ymm11_a ymm7_a;
sub ymm11_b ymm11_b ymm7_b;
sub ymm11_c ymm11_c ymm7_c;
sub ymm11_d ymm11_d ymm7_d;
sub ymm11_e ymm11_e ymm7_e;
sub ymm11_f ymm11_f ymm7_f;
(* vpaddw %ymm3,%ymm5,%ymm7                        #! PC = 0x55555555839f *)
add ymm7_0 ymm5_0 ymm3_0;
add ymm7_1 ymm5_1 ymm3_1;
add ymm7_2 ymm5_2 ymm3_2;
add ymm7_3 ymm5_3 ymm3_3;
add ymm7_4 ymm5_4 ymm3_4;
add ymm7_5 ymm5_5 ymm3_5;
add ymm7_6 ymm5_6 ymm3_6;
add ymm7_7 ymm5_7 ymm3_7;
add ymm7_8 ymm5_8 ymm3_8;
add ymm7_9 ymm5_9 ymm3_9;
add ymm7_a ymm5_a ymm3_a;
add ymm7_b ymm5_b ymm3_b;
add ymm7_c ymm5_c ymm3_c;
add ymm7_d ymm5_d ymm3_d;
add ymm7_e ymm5_e ymm3_e;
add ymm7_f ymm5_f ymm3_f;
(* vpsubw %ymm3,%ymm5,%ymm3                        #! PC = 0x5555555583a3 *)
sub ymm3_0 ymm5_0 ymm3_0;
sub ymm3_1 ymm5_1 ymm3_1;
sub ymm3_2 ymm5_2 ymm3_2;
sub ymm3_3 ymm5_3 ymm3_3;
sub ymm3_4 ymm5_4 ymm3_4;
sub ymm3_5 ymm5_5 ymm3_5;
sub ymm3_6 ymm5_6 ymm3_6;
sub ymm3_7 ymm5_7 ymm3_7;
sub ymm3_8 ymm5_8 ymm3_8;
sub ymm3_9 ymm5_9 ymm3_9;
sub ymm3_a ymm5_a ymm3_a;
sub ymm3_b ymm5_b ymm3_b;
sub ymm3_c ymm5_c ymm3_c;
sub ymm3_d ymm5_d ymm3_d;
sub ymm3_e ymm5_e ymm3_e;
sub ymm3_f ymm5_f ymm3_f;
(* vpaddw %ymm6,%ymm4,%ymm5                        #! PC = 0x5555555583a7 *)
add ymm5_0 ymm4_0 ymm6_0;
add ymm5_1 ymm4_1 ymm6_1;
add ymm5_2 ymm4_2 ymm6_2;
add ymm5_3 ymm4_3 ymm6_3;
add ymm5_4 ymm4_4 ymm6_4;
add ymm5_5 ymm4_5 ymm6_5;
add ymm5_6 ymm4_6 ymm6_6;
add ymm5_7 ymm4_7 ymm6_7;
add ymm5_8 ymm4_8 ymm6_8;
add ymm5_9 ymm4_9 ymm6_9;
add ymm5_a ymm4_a ymm6_a;
add ymm5_b ymm4_b ymm6_b;
add ymm5_c ymm4_c ymm6_c;
add ymm5_d ymm4_d ymm6_d;
add ymm5_e ymm4_e ymm6_e;
add ymm5_f ymm4_f ymm6_f;
(* vpsubw %ymm6,%ymm4,%ymm6                        #! PC = 0x5555555583ab *)
sub ymm6_0 ymm4_0 ymm6_0;
sub ymm6_1 ymm4_1 ymm6_1;
sub ymm6_2 ymm4_2 ymm6_2;
sub ymm6_3 ymm4_3 ymm6_3;
sub ymm6_4 ymm4_4 ymm6_4;
sub ymm6_5 ymm4_5 ymm6_5;
sub ymm6_6 ymm4_6 ymm6_6;
sub ymm6_7 ymm4_7 ymm6_7;
sub ymm6_8 ymm4_8 ymm6_8;
sub ymm6_9 ymm4_9 ymm6_9;
sub ymm6_a ymm4_a ymm6_a;
sub ymm6_b ymm4_b ymm6_b;
sub ymm6_c ymm4_c ymm6_c;
sub ymm6_d ymm4_d ymm6_d;
sub ymm6_e ymm4_e ymm6_e;
sub ymm6_f ymm4_f ymm6_f;
(* vpaddw %ymm8,%ymm10,%ymm4                       #! PC = 0x5555555583af *)
add ymm4_0 ymm10_0 ymm8_0;
add ymm4_1 ymm10_1 ymm8_1;
add ymm4_2 ymm10_2 ymm8_2;
add ymm4_3 ymm10_3 ymm8_3;
add ymm4_4 ymm10_4 ymm8_4;
add ymm4_5 ymm10_5 ymm8_5;
add ymm4_6 ymm10_6 ymm8_6;
add ymm4_7 ymm10_7 ymm8_7;
add ymm4_8 ymm10_8 ymm8_8;
add ymm4_9 ymm10_9 ymm8_9;
add ymm4_a ymm10_a ymm8_a;
add ymm4_b ymm10_b ymm8_b;
add ymm4_c ymm10_c ymm8_c;
add ymm4_d ymm10_d ymm8_d;
add ymm4_e ymm10_e ymm8_e;
add ymm4_f ymm10_f ymm8_f;
(* vpsubw %ymm8,%ymm10,%ymm8                       #! PC = 0x5555555583b4 *)
sub ymm8_0 ymm10_0 ymm8_0;
sub ymm8_1 ymm10_1 ymm8_1;
sub ymm8_2 ymm10_2 ymm8_2;
sub ymm8_3 ymm10_3 ymm8_3;
sub ymm8_4 ymm10_4 ymm8_4;
sub ymm8_5 ymm10_5 ymm8_5;
sub ymm8_6 ymm10_6 ymm8_6;
sub ymm8_7 ymm10_7 ymm8_7;
sub ymm8_8 ymm10_8 ymm8_8;
sub ymm8_9 ymm10_9 ymm8_9;
sub ymm8_a ymm10_a ymm8_a;
sub ymm8_b ymm10_b ymm8_b;
sub ymm8_c ymm10_c ymm8_c;
sub ymm8_d ymm10_d ymm8_d;
sub ymm8_e ymm10_e ymm8_e;
sub ymm8_f ymm10_f ymm8_f;
(* vpaddw %ymm11,%ymm9,%ymm10                      #! PC = 0x5555555583b9 *)
add ymm10_0 ymm9_0 ymm11_0;
add ymm10_1 ymm9_1 ymm11_1;
add ymm10_2 ymm9_2 ymm11_2;
add ymm10_3 ymm9_3 ymm11_3;
add ymm10_4 ymm9_4 ymm11_4;
add ymm10_5 ymm9_5 ymm11_5;
add ymm10_6 ymm9_6 ymm11_6;
add ymm10_7 ymm9_7 ymm11_7;
add ymm10_8 ymm9_8 ymm11_8;
add ymm10_9 ymm9_9 ymm11_9;
add ymm10_a ymm9_a ymm11_a;
add ymm10_b ymm9_b ymm11_b;
add ymm10_c ymm9_c ymm11_c;
add ymm10_d ymm9_d ymm11_d;
add ymm10_e ymm9_e ymm11_e;
add ymm10_f ymm9_f ymm11_f;
(* vpsubw %ymm11,%ymm9,%ymm11                      #! PC = 0x5555555583be *)
sub ymm11_0 ymm9_0 ymm11_0;
sub ymm11_1 ymm9_1 ymm11_1;
sub ymm11_2 ymm9_2 ymm11_2;
sub ymm11_3 ymm9_3 ymm11_3;
sub ymm11_4 ymm9_4 ymm11_4;
sub ymm11_5 ymm9_5 ymm11_5;
sub ymm11_6 ymm9_6 ymm11_6;
sub ymm11_7 ymm9_7 ymm11_7;
sub ymm11_8 ymm9_8 ymm11_8;
sub ymm11_9 ymm9_9 ymm11_9;
sub ymm11_a ymm9_a ymm11_a;
sub ymm11_b ymm9_b ymm11_b;
sub ymm11_c ymm9_c ymm11_c;
sub ymm11_d ymm9_d ymm11_d;
sub ymm11_e ymm9_e ymm11_e;
sub ymm11_f ymm9_f ymm11_f;
(* vpunpcklwd %ymm3,%ymm7,%ymm9                    #! PC = 0x5555555583c3 *)
mov lwd_0 ymm7_0;
mov lwd_1 ymm3_0;
mov lwd_2 ymm7_1;
mov lwd_3 ymm3_1;
mov lwd_4 ymm7_2;
mov lwd_5 ymm3_2;
mov lwd_6 ymm7_3;
mov lwd_7 ymm3_3;
mov lwd_8 ymm7_8;
mov lwd_9 ymm3_8;
mov lwd_a ymm7_9;
mov lwd_b ymm3_9;
mov lwd_c ymm7_a;
mov lwd_d ymm3_a;
mov lwd_e ymm7_b;
mov lwd_f ymm3_b;
mov ymm9_0 lwd_0;
mov ymm9_1 lwd_1;
mov ymm9_2 lwd_2;
mov ymm9_3 lwd_3;
mov ymm9_4 lwd_4;
mov ymm9_5 lwd_5;
mov ymm9_6 lwd_6;
mov ymm9_7 lwd_7;
mov ymm9_8 lwd_8;
mov ymm9_9 lwd_9;
mov ymm9_a lwd_a;
mov ymm9_b lwd_b;
mov ymm9_c lwd_c;
mov ymm9_d lwd_d;
mov ymm9_e lwd_e;
mov ymm9_f lwd_f;
(* vpunpckhwd %ymm3,%ymm7,%ymm3                    #! PC = 0x5555555583c7 *)
mov hwd_0 ymm7_4;
mov hwd_1 ymm3_4;
mov hwd_2 ymm7_5;
mov hwd_3 ymm3_5;
mov hwd_4 ymm7_6;
mov hwd_5 ymm3_6;
mov hwd_6 ymm7_7;
mov hwd_7 ymm3_7;
mov hwd_8 ymm7_c;
mov hwd_9 ymm3_c;
mov hwd_a ymm7_d;
mov hwd_b ymm3_d;
mov hwd_c ymm7_e;
mov hwd_d ymm3_e;
mov hwd_e ymm7_f;
mov hwd_f ymm3_f;
mov ymm3_0 hwd_0;
mov ymm3_1 hwd_1;
mov ymm3_2 hwd_2;
mov ymm3_3 hwd_3;
mov ymm3_4 hwd_4;
mov ymm3_5 hwd_5;
mov ymm3_6 hwd_6;
mov ymm3_7 hwd_7;
mov ymm3_8 hwd_8;
mov ymm3_9 hwd_9;
mov ymm3_a hwd_a;
mov ymm3_b hwd_b;
mov ymm3_c hwd_c;
mov ymm3_d hwd_d;
mov ymm3_e hwd_e;
mov ymm3_f hwd_f;
(* vpunpcklwd %ymm6,%ymm5,%ymm7                    #! PC = 0x5555555583cb *)
mov lwd_0 ymm5_0;
mov lwd_1 ymm6_0;
mov lwd_2 ymm5_1;
mov lwd_3 ymm6_1;
mov lwd_4 ymm5_2;
mov lwd_5 ymm6_2;
mov lwd_6 ymm5_3;
mov lwd_7 ymm6_3;
mov lwd_8 ymm5_8;
mov lwd_9 ymm6_8;
mov lwd_a ymm5_9;
mov lwd_b ymm6_9;
mov lwd_c ymm5_a;
mov lwd_d ymm6_a;
mov lwd_e ymm5_b;
mov lwd_f ymm6_b;
mov ymm7_0 lwd_0;
mov ymm7_1 lwd_1;
mov ymm7_2 lwd_2;
mov ymm7_3 lwd_3;
mov ymm7_4 lwd_4;
mov ymm7_5 lwd_5;
mov ymm7_6 lwd_6;
mov ymm7_7 lwd_7;
mov ymm7_8 lwd_8;
mov ymm7_9 lwd_9;
mov ymm7_a lwd_a;
mov ymm7_b lwd_b;
mov ymm7_c lwd_c;
mov ymm7_d lwd_d;
mov ymm7_e lwd_e;
mov ymm7_f lwd_f;
(* vpunpckhwd %ymm6,%ymm5,%ymm6                    #! PC = 0x5555555583cf *)
mov hwd_0 ymm5_4;
mov hwd_1 ymm6_4;
mov hwd_2 ymm5_5;
mov hwd_3 ymm6_5;
mov hwd_4 ymm5_6;
mov hwd_5 ymm6_6;
mov hwd_6 ymm5_7;
mov hwd_7 ymm6_7;
mov hwd_8 ymm5_c;
mov hwd_9 ymm6_c;
mov hwd_a ymm5_d;
mov hwd_b ymm6_d;
mov hwd_c ymm5_e;
mov hwd_d ymm6_e;
mov hwd_e ymm5_f;
mov hwd_f ymm6_f;
mov ymm6_0 hwd_0;
mov ymm6_1 hwd_1;
mov ymm6_2 hwd_2;
mov ymm6_3 hwd_3;
mov ymm6_4 hwd_4;
mov ymm6_5 hwd_5;
mov ymm6_6 hwd_6;
mov ymm6_7 hwd_7;
mov ymm6_8 hwd_8;
mov ymm6_9 hwd_9;
mov ymm6_a hwd_a;
mov ymm6_b hwd_b;
mov ymm6_c hwd_c;
mov ymm6_d hwd_d;
mov ymm6_e hwd_e;
mov ymm6_f hwd_f;
(* vpunpcklwd %ymm8,%ymm4,%ymm5                    #! PC = 0x5555555583d3 *)
mov lwd_0 ymm4_0;
mov lwd_1 ymm8_0;
mov lwd_2 ymm4_1;
mov lwd_3 ymm8_1;
mov lwd_4 ymm4_2;
mov lwd_5 ymm8_2;
mov lwd_6 ymm4_3;
mov lwd_7 ymm8_3;
mov lwd_8 ymm4_8;
mov lwd_9 ymm8_8;
mov lwd_a ymm4_9;
mov lwd_b ymm8_9;
mov lwd_c ymm4_a;
mov lwd_d ymm8_a;
mov lwd_e ymm4_b;
mov lwd_f ymm8_b;
mov ymm5_0 lwd_0;
mov ymm5_1 lwd_1;
mov ymm5_2 lwd_2;
mov ymm5_3 lwd_3;
mov ymm5_4 lwd_4;
mov ymm5_5 lwd_5;
mov ymm5_6 lwd_6;
mov ymm5_7 lwd_7;
mov ymm5_8 lwd_8;
mov ymm5_9 lwd_9;
mov ymm5_a lwd_a;
mov ymm5_b lwd_b;
mov ymm5_c lwd_c;
mov ymm5_d lwd_d;
mov ymm5_e lwd_e;
mov ymm5_f lwd_f;
(* vpunpckhwd %ymm8,%ymm4,%ymm8                    #! PC = 0x5555555583d8 *)
mov hwd_0 ymm4_4;
mov hwd_1 ymm8_4;
mov hwd_2 ymm4_5;
mov hwd_3 ymm8_5;
mov hwd_4 ymm4_6;
mov hwd_5 ymm8_6;
mov hwd_6 ymm4_7;
mov hwd_7 ymm8_7;
mov hwd_8 ymm4_c;
mov hwd_9 ymm8_c;
mov hwd_a ymm4_d;
mov hwd_b ymm8_d;
mov hwd_c ymm4_e;
mov hwd_d ymm8_e;
mov hwd_e ymm4_f;
mov hwd_f ymm8_f;
mov ymm8_0 hwd_0;
mov ymm8_1 hwd_1;
mov ymm8_2 hwd_2;
mov ymm8_3 hwd_3;
mov ymm8_4 hwd_4;
mov ymm8_5 hwd_5;
mov ymm8_6 hwd_6;
mov ymm8_7 hwd_7;
mov ymm8_8 hwd_8;
mov ymm8_9 hwd_9;
mov ymm8_a hwd_a;
mov ymm8_b hwd_b;
mov ymm8_c hwd_c;
mov ymm8_d hwd_d;
mov ymm8_e hwd_e;
mov ymm8_f hwd_f;
(* vpunpcklwd %ymm11,%ymm10,%ymm4                  #! PC = 0x5555555583dd *)
mov lwd_0 ymm10_0;
mov lwd_1 ymm11_0;
mov lwd_2 ymm10_1;
mov lwd_3 ymm11_1;
mov lwd_4 ymm10_2;
mov lwd_5 ymm11_2;
mov lwd_6 ymm10_3;
mov lwd_7 ymm11_3;
mov lwd_8 ymm10_8;
mov lwd_9 ymm11_8;
mov lwd_a ymm10_9;
mov lwd_b ymm11_9;
mov lwd_c ymm10_a;
mov lwd_d ymm11_a;
mov lwd_e ymm10_b;
mov lwd_f ymm11_b;
mov ymm4_0 lwd_0;
mov ymm4_1 lwd_1;
mov ymm4_2 lwd_2;
mov ymm4_3 lwd_3;
mov ymm4_4 lwd_4;
mov ymm4_5 lwd_5;
mov ymm4_6 lwd_6;
mov ymm4_7 lwd_7;
mov ymm4_8 lwd_8;
mov ymm4_9 lwd_9;
mov ymm4_a lwd_a;
mov ymm4_b lwd_b;
mov ymm4_c lwd_c;
mov ymm4_d lwd_d;
mov ymm4_e lwd_e;
mov ymm4_f lwd_f;
(* vpunpckhwd %ymm11,%ymm10,%ymm11                 #! PC = 0x5555555583e2 *)
mov hwd_0 ymm10_4;
mov hwd_1 ymm11_4;
mov hwd_2 ymm10_5;
mov hwd_3 ymm11_5;
mov hwd_4 ymm10_6;
mov hwd_5 ymm11_6;
mov hwd_6 ymm10_7;
mov hwd_7 ymm11_7;
mov hwd_8 ymm10_c;
mov hwd_9 ymm11_c;
mov hwd_a ymm10_d;
mov hwd_b ymm11_d;
mov hwd_c ymm10_e;
mov hwd_d ymm11_e;
mov hwd_e ymm10_f;
mov hwd_f ymm11_f;
mov ymm11_0 hwd_0;
mov ymm11_1 hwd_1;
mov ymm11_2 hwd_2;
mov ymm11_3 hwd_3;
mov ymm11_4 hwd_4;
mov ymm11_5 hwd_5;
mov ymm11_6 hwd_6;
mov ymm11_7 hwd_7;
mov ymm11_8 hwd_8;
mov ymm11_9 hwd_9;
mov ymm11_a hwd_a;
mov ymm11_b hwd_b;
mov ymm11_c hwd_c;
mov ymm11_d hwd_d;
mov ymm11_e hwd_e;
mov ymm11_f hwd_f;
(* vbroadcasti128 0x180(%rdx),%ymm1                #! EA = L0x5555555612a0; Value = 0x9f8203c9bf1afd9f; PC = 0x5555555583e7 *)
mov ymm1_0 L0x5555555612a0;
mov ymm1_1 L0x5555555612a2;
mov ymm1_2 L0x5555555612a4;
mov ymm1_3 L0x5555555612a6;
mov ymm1_4 L0x5555555612a8;
mov ymm1_5 L0x5555555612aa;
mov ymm1_6 L0x5555555612ac;
mov ymm1_7 L0x5555555612ae;
mov ymm1_8 L0x5555555612a0;
mov ymm1_9 L0x5555555612a2;
mov ymm1_a L0x5555555612a4;
mov ymm1_b L0x5555555612a6;
mov ymm1_c L0x5555555612a8;
mov ymm1_d L0x5555555612aa;
mov ymm1_e L0x5555555612ac;
mov ymm1_f L0x5555555612ae;
(* vbroadcasti128 0x380(%rdx),%ymm2                #! EA = L0x5555555614a0; Value = 0xf382fdc9031a139f; PC = 0x5555555583f0 *)
mov ymm2_0 L0x5555555614a0;
mov ymm2_1 L0x5555555614a2;
mov ymm2_2 L0x5555555614a4;
mov ymm2_3 L0x5555555614a6;
mov ymm2_4 L0x5555555614a8;
mov ymm2_5 L0x5555555614aa;
mov ymm2_6 L0x5555555614ac;
mov ymm2_7 L0x5555555614ae;
mov ymm2_8 L0x5555555614a0;
mov ymm2_9 L0x5555555614a2;
mov ymm2_a L0x5555555614a4;
mov ymm2_b L0x5555555614a6;
mov ymm2_c L0x5555555614a8;
mov ymm2_d L0x5555555614aa;
mov ymm2_e L0x5555555614ac;
mov ymm2_f L0x5555555614ae;
(* vpmullw %ymm1,%ymm3,%ymm10                      #! PC = 0x5555555583f9 *)
smull mulHymm3_0 mulL_0 ymm1_0 ymm3_0;
smull mulHymm3_1 mulL_1 ymm1_1 ymm3_1;
smull mulHymm3_2 mulL_2 ymm1_2 ymm3_2;
smull mulHymm3_3 mulL_3 ymm1_3 ymm3_3;
smull mulHymm3_4 mulL_4 ymm1_4 ymm3_4;
smull mulHymm3_5 mulL_5 ymm1_5 ymm3_5;
smull mulHymm3_6 mulL_6 ymm1_6 ymm3_6;
smull mulHymm3_7 mulL_7 ymm1_7 ymm3_7;
smull mulHymm3_8 mulL_8 ymm1_8 ymm3_8;
smull mulHymm3_9 mulL_9 ymm1_9 ymm3_9;
smull mulHymm3_a mulL_a ymm1_a ymm3_a;
smull mulHymm3_b mulL_b ymm1_b ymm3_b;
smull mulHymm3_c mulL_c ymm1_c ymm3_c;
smull mulHymm3_d mulL_d ymm1_d ymm3_d;
smull mulHymm3_e mulL_e ymm1_e ymm3_e;
smull mulHymm3_f mulL_f ymm1_f ymm3_f;
cast ymm10_0@sint16 mulL_0;
cast ymm10_1@sint16 mulL_1;
cast ymm10_2@sint16 mulL_2;
cast ymm10_3@sint16 mulL_3;
cast ymm10_4@sint16 mulL_4;
cast ymm10_5@sint16 mulL_5;
cast ymm10_6@sint16 mulL_6;
cast ymm10_7@sint16 mulL_7;
cast ymm10_8@sint16 mulL_8;
cast ymm10_9@sint16 mulL_9;
cast ymm10_a@sint16 mulL_a;
cast ymm10_b@sint16 mulL_b;
cast ymm10_c@sint16 mulL_c;
cast ymm10_d@sint16 mulL_d;
cast ymm10_e@sint16 mulL_e;
cast ymm10_f@sint16 mulL_f;
(* vpmulhw %ymm2,%ymm3,%ymm3                       #! PC = 0x5555555583fd *)
smull mulH_0 mulLymm3_0 ymm3_0 ymm2_0;
smull mulH_1 mulLymm3_1 ymm3_1 ymm2_1;
smull mulH_2 mulLymm3_2 ymm3_2 ymm2_2;
smull mulH_3 mulLymm3_3 ymm3_3 ymm2_3;
smull mulH_4 mulLymm3_4 ymm3_4 ymm2_4;
smull mulH_5 mulLymm3_5 ymm3_5 ymm2_5;
smull mulH_6 mulLymm3_6 ymm3_6 ymm2_6;
smull mulH_7 mulLymm3_7 ymm3_7 ymm2_7;
smull mulH_8 mulLymm3_8 ymm3_8 ymm2_8;
smull mulH_9 mulLymm3_9 ymm3_9 ymm2_9;
smull mulH_a mulLymm3_a ymm3_a ymm2_a;
smull mulH_b mulLymm3_b ymm3_b ymm2_b;
smull mulH_c mulLymm3_c ymm3_c ymm2_c;
smull mulH_d mulLymm3_d ymm3_d ymm2_d;
smull mulH_e mulLymm3_e ymm3_e ymm2_e;
smull mulH_f mulLymm3_f ymm3_f ymm2_f;
mov ymm3_0 mulH_0;
mov ymm3_1 mulH_1;
mov ymm3_2 mulH_2;
mov ymm3_3 mulH_3;
mov ymm3_4 mulH_4;
mov ymm3_5 mulH_5;
mov ymm3_6 mulH_6;
mov ymm3_7 mulH_7;
mov ymm3_8 mulH_8;
mov ymm3_9 mulH_9;
mov ymm3_a mulH_a;
mov ymm3_b mulH_b;
mov ymm3_c mulH_c;
mov ymm3_d mulH_d;
mov ymm3_e mulH_e;
mov ymm3_f mulH_f;
(* vpmulhw %ymm0,%ymm10,%ymm10                     #! PC = 0x555555558401 *)
smull mulH_0 red_0 ymm10_0 ymm0_0;
assert true && red_0 = mulLymm3_0;
assume red_0 = mulLymm3_0 && true;
smull mulH_1 red_1 ymm10_1 ymm0_1;
assert true && red_1 = mulLymm3_1;
assume red_1 = mulLymm3_1 && true;
smull mulH_2 red_2 ymm10_2 ymm0_2;
assert true && red_2 = mulLymm3_2;
assume red_2 = mulLymm3_2 && true;
smull mulH_3 red_3 ymm10_3 ymm0_3;
assert true && red_3 = mulLymm3_3;
assume red_3 = mulLymm3_3 && true;
smull mulH_4 red_4 ymm10_4 ymm0_4;
assert true && red_4 = mulLymm3_4;
assume red_4 = mulLymm3_4 && true;
smull mulH_5 red_5 ymm10_5 ymm0_5;
assert true && red_5 = mulLymm3_5;
assume red_5 = mulLymm3_5 && true;
smull mulH_6 red_6 ymm10_6 ymm0_6;
assert true && red_6 = mulLymm3_6;
assume red_6 = mulLymm3_6 && true;
smull mulH_7 red_7 ymm10_7 ymm0_7;
assert true && red_7 = mulLymm3_7;
assume red_7 = mulLymm3_7 && true;
smull mulH_8 red_8 ymm10_8 ymm0_8;
assert true && red_8 = mulLymm3_8;
assume red_8 = mulLymm3_8 && true;
smull mulH_9 red_9 ymm10_9 ymm0_9;
assert true && red_9 = mulLymm3_9;
assume red_9 = mulLymm3_9 && true;
smull mulH_a red_a ymm10_a ymm0_a;
assert true && red_a = mulLymm3_a;
assume red_a = mulLymm3_a && true;
smull mulH_b red_b ymm10_b ymm0_b;
assert true && red_b = mulLymm3_b;
assume red_b = mulLymm3_b && true;
smull mulH_c red_c ymm10_c ymm0_c;
assert true && red_c = mulLymm3_c;
assume red_c = mulLymm3_c && true;
smull mulH_d red_d ymm10_d ymm0_d;
assert true && red_d = mulLymm3_d;
assume red_d = mulLymm3_d && true;
smull mulH_e red_e ymm10_e ymm0_e;
assert true && red_e = mulLymm3_e;
assume red_e = mulLymm3_e && true;
smull mulH_f red_f ymm10_f ymm0_f;
assert true && red_f = mulLymm3_f;
assume red_f = mulLymm3_f && true;
mov ymm10_0 mulH_0;
mov ymm10_1 mulH_1;
mov ymm10_2 mulH_2;
mov ymm10_3 mulH_3;
mov ymm10_4 mulH_4;
mov ymm10_5 mulH_5;
mov ymm10_6 mulH_6;
mov ymm10_7 mulH_7;
mov ymm10_8 mulH_8;
mov ymm10_9 mulH_9;
mov ymm10_a mulH_a;
mov ymm10_b mulH_b;
mov ymm10_c mulH_c;
mov ymm10_d mulH_d;
mov ymm10_e mulH_e;
mov ymm10_f mulH_f;
(* vpsubw %ymm10,%ymm3,%ymm3                       #! PC = 0x555555558405 *)
sub ymm3_0 ymm3_0 ymm10_0;
sub ymm3_1 ymm3_1 ymm10_1;
sub ymm3_2 ymm3_2 ymm10_2;
sub ymm3_3 ymm3_3 ymm10_3;
sub ymm3_4 ymm3_4 ymm10_4;
sub ymm3_5 ymm3_5 ymm10_5;
sub ymm3_6 ymm3_6 ymm10_6;
sub ymm3_7 ymm3_7 ymm10_7;
sub ymm3_8 ymm3_8 ymm10_8;
sub ymm3_9 ymm3_9 ymm10_9;
sub ymm3_a ymm3_a ymm10_a;
sub ymm3_b ymm3_b ymm10_b;
sub ymm3_c ymm3_c ymm10_c;
sub ymm3_d ymm3_d ymm10_d;
sub ymm3_e ymm3_e ymm10_e;
sub ymm3_f ymm3_f ymm10_f;
(* vbroadcasti128 0x190(%rdx),%ymm1                #! EA = L0x5555555612b0; Value = 0x095b104f72df44a3; PC = 0x55555555840a *)
mov ymm1_0 L0x5555555612b0;
mov ymm1_1 L0x5555555612b2;
mov ymm1_2 L0x5555555612b4;
mov ymm1_3 L0x5555555612b6;
mov ymm1_4 L0x5555555612b8;
mov ymm1_5 L0x5555555612ba;
mov ymm1_6 L0x5555555612bc;
mov ymm1_7 L0x5555555612be;
mov ymm1_8 L0x5555555612b0;
mov ymm1_9 L0x5555555612b2;
mov ymm1_a L0x5555555612b4;
mov ymm1_b L0x5555555612b6;
mov ymm1_c L0x5555555612b8;
mov ymm1_d L0x5555555612ba;
mov ymm1_e L0x5555555612bc;
mov ymm1_f L0x5555555612be;
(* vbroadcasti128 0x390(%rdx),%ymm2                #! EA = L0x5555555614b0; Value = 0xf75b064f08df02a3; PC = 0x555555558413 *)
mov ymm2_0 L0x5555555614b0;
mov ymm2_1 L0x5555555614b2;
mov ymm2_2 L0x5555555614b4;
mov ymm2_3 L0x5555555614b6;
mov ymm2_4 L0x5555555614b8;
mov ymm2_5 L0x5555555614ba;
mov ymm2_6 L0x5555555614bc;
mov ymm2_7 L0x5555555614be;
mov ymm2_8 L0x5555555614b0;
mov ymm2_9 L0x5555555614b2;
mov ymm2_a L0x5555555614b4;
mov ymm2_b L0x5555555614b6;
mov ymm2_c L0x5555555614b8;
mov ymm2_d L0x5555555614ba;
mov ymm2_e L0x5555555614bc;
mov ymm2_f L0x5555555614be;
(* vpmullw %ymm1,%ymm6,%ymm10                      #! PC = 0x55555555841c *)
smull mulHymm6_0 mulL_0 ymm1_0 ymm6_0;
smull mulHymm6_1 mulL_1 ymm1_1 ymm6_1;
smull mulHymm6_2 mulL_2 ymm1_2 ymm6_2;
smull mulHymm6_3 mulL_3 ymm1_3 ymm6_3;
smull mulHymm6_4 mulL_4 ymm1_4 ymm6_4;
smull mulHymm6_5 mulL_5 ymm1_5 ymm6_5;
smull mulHymm6_6 mulL_6 ymm1_6 ymm6_6;
smull mulHymm6_7 mulL_7 ymm1_7 ymm6_7;
smull mulHymm6_8 mulL_8 ymm1_8 ymm6_8;
smull mulHymm6_9 mulL_9 ymm1_9 ymm6_9;
smull mulHymm6_a mulL_a ymm1_a ymm6_a;
smull mulHymm6_b mulL_b ymm1_b ymm6_b;
smull mulHymm6_c mulL_c ymm1_c ymm6_c;
smull mulHymm6_d mulL_d ymm1_d ymm6_d;
smull mulHymm6_e mulL_e ymm1_e ymm6_e;
smull mulHymm6_f mulL_f ymm1_f ymm6_f;
cast ymm10_0@sint16 mulL_0;
cast ymm10_1@sint16 mulL_1;
cast ymm10_2@sint16 mulL_2;
cast ymm10_3@sint16 mulL_3;
cast ymm10_4@sint16 mulL_4;
cast ymm10_5@sint16 mulL_5;
cast ymm10_6@sint16 mulL_6;
cast ymm10_7@sint16 mulL_7;
cast ymm10_8@sint16 mulL_8;
cast ymm10_9@sint16 mulL_9;
cast ymm10_a@sint16 mulL_a;
cast ymm10_b@sint16 mulL_b;
cast ymm10_c@sint16 mulL_c;
cast ymm10_d@sint16 mulL_d;
cast ymm10_e@sint16 mulL_e;
cast ymm10_f@sint16 mulL_f;
(* vpmulhw %ymm2,%ymm6,%ymm6                       #! PC = 0x555555558420 *)
smull mulH_0 mulLymm6_0 ymm6_0 ymm2_0;
smull mulH_1 mulLymm6_1 ymm6_1 ymm2_1;
smull mulH_2 mulLymm6_2 ymm6_2 ymm2_2;
smull mulH_3 mulLymm6_3 ymm6_3 ymm2_3;
smull mulH_4 mulLymm6_4 ymm6_4 ymm2_4;
smull mulH_5 mulLymm6_5 ymm6_5 ymm2_5;
smull mulH_6 mulLymm6_6 ymm6_6 ymm2_6;
smull mulH_7 mulLymm6_7 ymm6_7 ymm2_7;
smull mulH_8 mulLymm6_8 ymm6_8 ymm2_8;
smull mulH_9 mulLymm6_9 ymm6_9 ymm2_9;
smull mulH_a mulLymm6_a ymm6_a ymm2_a;
smull mulH_b mulLymm6_b ymm6_b ymm2_b;
smull mulH_c mulLymm6_c ymm6_c ymm2_c;
smull mulH_d mulLymm6_d ymm6_d ymm2_d;
smull mulH_e mulLymm6_e ymm6_e ymm2_e;
smull mulH_f mulLymm6_f ymm6_f ymm2_f;
mov ymm6_0 mulH_0;
mov ymm6_1 mulH_1;
mov ymm6_2 mulH_2;
mov ymm6_3 mulH_3;
mov ymm6_4 mulH_4;
mov ymm6_5 mulH_5;
mov ymm6_6 mulH_6;
mov ymm6_7 mulH_7;
mov ymm6_8 mulH_8;
mov ymm6_9 mulH_9;
mov ymm6_a mulH_a;
mov ymm6_b mulH_b;
mov ymm6_c mulH_c;
mov ymm6_d mulH_d;
mov ymm6_e mulH_e;
mov ymm6_f mulH_f;
(* vpmulhw %ymm0,%ymm10,%ymm10                     #! PC = 0x555555558424 *)
smull mulH_0 red_0 ymm10_0 ymm0_0;
assert true && red_0 = mulLymm6_0;
assume red_0 = mulLymm6_0 && true;
smull mulH_1 red_1 ymm10_1 ymm0_1;
assert true && red_1 = mulLymm6_1;
assume red_1 = mulLymm6_1 && true;
smull mulH_2 red_2 ymm10_2 ymm0_2;
assert true && red_2 = mulLymm6_2;
assume red_2 = mulLymm6_2 && true;
smull mulH_3 red_3 ymm10_3 ymm0_3;
assert true && red_3 = mulLymm6_3;
assume red_3 = mulLymm6_3 && true;
smull mulH_4 red_4 ymm10_4 ymm0_4;
assert true && red_4 = mulLymm6_4;
assume red_4 = mulLymm6_4 && true;
smull mulH_5 red_5 ymm10_5 ymm0_5;
assert true && red_5 = mulLymm6_5;
assume red_5 = mulLymm6_5 && true;
smull mulH_6 red_6 ymm10_6 ymm0_6;
assert true && red_6 = mulLymm6_6;
assume red_6 = mulLymm6_6 && true;
smull mulH_7 red_7 ymm10_7 ymm0_7;
assert true && red_7 = mulLymm6_7;
assume red_7 = mulLymm6_7 && true;
smull mulH_8 red_8 ymm10_8 ymm0_8;
assert true && red_8 = mulLymm6_8;
assume red_8 = mulLymm6_8 && true;
smull mulH_9 red_9 ymm10_9 ymm0_9;
assert true && red_9 = mulLymm6_9;
assume red_9 = mulLymm6_9 && true;
smull mulH_a red_a ymm10_a ymm0_a;
assert true && red_a = mulLymm6_a;
assume red_a = mulLymm6_a && true;
smull mulH_b red_b ymm10_b ymm0_b;
assert true && red_b = mulLymm6_b;
assume red_b = mulLymm6_b && true;
smull mulH_c red_c ymm10_c ymm0_c;
assert true && red_c = mulLymm6_c;
assume red_c = mulLymm6_c && true;
smull mulH_d red_d ymm10_d ymm0_d;
assert true && red_d = mulLymm6_d;
assume red_d = mulLymm6_d && true;
smull mulH_e red_e ymm10_e ymm0_e;
assert true && red_e = mulLymm6_e;
assume red_e = mulLymm6_e && true;
smull mulH_f red_f ymm10_f ymm0_f;
assert true && red_f = mulLymm6_f;
assume red_f = mulLymm6_f && true;
mov ymm10_0 mulH_0;
mov ymm10_1 mulH_1;
mov ymm10_2 mulH_2;
mov ymm10_3 mulH_3;
mov ymm10_4 mulH_4;
mov ymm10_5 mulH_5;
mov ymm10_6 mulH_6;
mov ymm10_7 mulH_7;
mov ymm10_8 mulH_8;
mov ymm10_9 mulH_9;
mov ymm10_a mulH_a;
mov ymm10_b mulH_b;
mov ymm10_c mulH_c;
mov ymm10_d mulH_d;
mov ymm10_e mulH_e;
mov ymm10_f mulH_f;
(* vpsubw %ymm10,%ymm6,%ymm6                       #! PC = 0x555555558428 *)
sub ymm6_0 ymm6_0 ymm10_0;
sub ymm6_1 ymm6_1 ymm10_1;
sub ymm6_2 ymm6_2 ymm10_2;
sub ymm6_3 ymm6_3 ymm10_3;
sub ymm6_4 ymm6_4 ymm10_4;
sub ymm6_5 ymm6_5 ymm10_5;
sub ymm6_6 ymm6_6 ymm10_6;
sub ymm6_7 ymm6_7 ymm10_7;
sub ymm6_8 ymm6_8 ymm10_8;
sub ymm6_9 ymm6_9 ymm10_9;
sub ymm6_a ymm6_a ymm10_a;
sub ymm6_b ymm6_b ymm10_b;
sub ymm6_c ymm6_c ymm10_c;
sub ymm6_d ymm6_d ymm10_d;
sub ymm6_e ymm6_e ymm10_e;
sub ymm6_f ymm6_f ymm10_f;
(* vbroadcasti128 0x1a0(%rdx),%ymm1                #! EA = L0x5555555612c0; Value = 0x0ffa1e732e4ef81f; PC = 0x55555555842d *)
mov ymm1_0 L0x5555555612c0;
mov ymm1_1 L0x5555555612c2;
mov ymm1_2 L0x5555555612c4;
mov ymm1_3 L0x5555555612c6;
mov ymm1_4 L0x5555555612c8;
mov ymm1_5 L0x5555555612ca;
mov ymm1_6 L0x5555555612cc;
mov ymm1_7 L0x5555555612ce;
mov ymm1_8 L0x5555555612c0;
mov ymm1_9 L0x5555555612c2;
mov ymm1_a L0x5555555612c4;
mov ymm1_b L0x5555555612c6;
mov ymm1_c L0x5555555612c8;
mov ymm1_d L0x5555555612ca;
mov ymm1_e L0x5555555612cc;
mov ymm1_f L0x5555555612ce;
(* vbroadcasti128 0x3a0(%rdx),%ymm2                #! EA = L0x5555555614c0; Value = 0x13fafc73fa4e0e1f; PC = 0x555555558436 *)
mov ymm2_0 L0x5555555614c0;
mov ymm2_1 L0x5555555614c2;
mov ymm2_2 L0x5555555614c4;
mov ymm2_3 L0x5555555614c6;
mov ymm2_4 L0x5555555614c8;
mov ymm2_5 L0x5555555614ca;
mov ymm2_6 L0x5555555614cc;
mov ymm2_7 L0x5555555614ce;
mov ymm2_8 L0x5555555614c0;
mov ymm2_9 L0x5555555614c2;
mov ymm2_a L0x5555555614c4;
mov ymm2_b L0x5555555614c6;
mov ymm2_c L0x5555555614c8;
mov ymm2_d L0x5555555614ca;
mov ymm2_e L0x5555555614cc;
mov ymm2_f L0x5555555614ce;
(* vpmullw %ymm1,%ymm8,%ymm10                      #! PC = 0x55555555843f *)
smull mulHymm8_0 mulL_0 ymm1_0 ymm8_0;
smull mulHymm8_1 mulL_1 ymm1_1 ymm8_1;
smull mulHymm8_2 mulL_2 ymm1_2 ymm8_2;
smull mulHymm8_3 mulL_3 ymm1_3 ymm8_3;
smull mulHymm8_4 mulL_4 ymm1_4 ymm8_4;
smull mulHymm8_5 mulL_5 ymm1_5 ymm8_5;
smull mulHymm8_6 mulL_6 ymm1_6 ymm8_6;
smull mulHymm8_7 mulL_7 ymm1_7 ymm8_7;
smull mulHymm8_8 mulL_8 ymm1_8 ymm8_8;
smull mulHymm8_9 mulL_9 ymm1_9 ymm8_9;
smull mulHymm8_a mulL_a ymm1_a ymm8_a;
smull mulHymm8_b mulL_b ymm1_b ymm8_b;
smull mulHymm8_c mulL_c ymm1_c ymm8_c;
smull mulHymm8_d mulL_d ymm1_d ymm8_d;
smull mulHymm8_e mulL_e ymm1_e ymm8_e;
smull mulHymm8_f mulL_f ymm1_f ymm8_f;
cast ymm10_0@sint16 mulL_0;
cast ymm10_1@sint16 mulL_1;
cast ymm10_2@sint16 mulL_2;
cast ymm10_3@sint16 mulL_3;
cast ymm10_4@sint16 mulL_4;
cast ymm10_5@sint16 mulL_5;
cast ymm10_6@sint16 mulL_6;
cast ymm10_7@sint16 mulL_7;
cast ymm10_8@sint16 mulL_8;
cast ymm10_9@sint16 mulL_9;
cast ymm10_a@sint16 mulL_a;
cast ymm10_b@sint16 mulL_b;
cast ymm10_c@sint16 mulL_c;
cast ymm10_d@sint16 mulL_d;
cast ymm10_e@sint16 mulL_e;
cast ymm10_f@sint16 mulL_f;
(* vpmulhw %ymm2,%ymm8,%ymm8                       #! PC = 0x555555558443 *)
smull mulH_0 mulLymm8_0 ymm8_0 ymm2_0;
smull mulH_1 mulLymm8_1 ymm8_1 ymm2_1;
smull mulH_2 mulLymm8_2 ymm8_2 ymm2_2;
smull mulH_3 mulLymm8_3 ymm8_3 ymm2_3;
smull mulH_4 mulLymm8_4 ymm8_4 ymm2_4;
smull mulH_5 mulLymm8_5 ymm8_5 ymm2_5;
smull mulH_6 mulLymm8_6 ymm8_6 ymm2_6;
smull mulH_7 mulLymm8_7 ymm8_7 ymm2_7;
smull mulH_8 mulLymm8_8 ymm8_8 ymm2_8;
smull mulH_9 mulLymm8_9 ymm8_9 ymm2_9;
smull mulH_a mulLymm8_a ymm8_a ymm2_a;
smull mulH_b mulLymm8_b ymm8_b ymm2_b;
smull mulH_c mulLymm8_c ymm8_c ymm2_c;
smull mulH_d mulLymm8_d ymm8_d ymm2_d;
smull mulH_e mulLymm8_e ymm8_e ymm2_e;
smull mulH_f mulLymm8_f ymm8_f ymm2_f;
mov ymm8_0 mulH_0;
mov ymm8_1 mulH_1;
mov ymm8_2 mulH_2;
mov ymm8_3 mulH_3;
mov ymm8_4 mulH_4;
mov ymm8_5 mulH_5;
mov ymm8_6 mulH_6;
mov ymm8_7 mulH_7;
mov ymm8_8 mulH_8;
mov ymm8_9 mulH_9;
mov ymm8_a mulH_a;
mov ymm8_b mulH_b;
mov ymm8_c mulH_c;
mov ymm8_d mulH_d;
mov ymm8_e mulH_e;
mov ymm8_f mulH_f;
(* vpmulhw %ymm0,%ymm10,%ymm10                     #! PC = 0x555555558447 *)
smull mulH_0 red_0 ymm10_0 ymm0_0;
assert true && red_0 = mulLymm8_0;
assume red_0 = mulLymm8_0 && true;
smull mulH_1 red_1 ymm10_1 ymm0_1;
assert true && red_1 = mulLymm8_1;
assume red_1 = mulLymm8_1 && true;
smull mulH_2 red_2 ymm10_2 ymm0_2;
assert true && red_2 = mulLymm8_2;
assume red_2 = mulLymm8_2 && true;
smull mulH_3 red_3 ymm10_3 ymm0_3;
assert true && red_3 = mulLymm8_3;
assume red_3 = mulLymm8_3 && true;
smull mulH_4 red_4 ymm10_4 ymm0_4;
assert true && red_4 = mulLymm8_4;
assume red_4 = mulLymm8_4 && true;
smull mulH_5 red_5 ymm10_5 ymm0_5;
assert true && red_5 = mulLymm8_5;
assume red_5 = mulLymm8_5 && true;
smull mulH_6 red_6 ymm10_6 ymm0_6;
assert true && red_6 = mulLymm8_6;
assume red_6 = mulLymm8_6 && true;
smull mulH_7 red_7 ymm10_7 ymm0_7;
assert true && red_7 = mulLymm8_7;
assume red_7 = mulLymm8_7 && true;
smull mulH_8 red_8 ymm10_8 ymm0_8;
assert true && red_8 = mulLymm8_8;
assume red_8 = mulLymm8_8 && true;
smull mulH_9 red_9 ymm10_9 ymm0_9;
assert true && red_9 = mulLymm8_9;
assume red_9 = mulLymm8_9 && true;
smull mulH_a red_a ymm10_a ymm0_a;
assert true && red_a = mulLymm8_a;
assume red_a = mulLymm8_a && true;
smull mulH_b red_b ymm10_b ymm0_b;
assert true && red_b = mulLymm8_b;
assume red_b = mulLymm8_b && true;
smull mulH_c red_c ymm10_c ymm0_c;
assert true && red_c = mulLymm8_c;
assume red_c = mulLymm8_c && true;
smull mulH_d red_d ymm10_d ymm0_d;
assert true && red_d = mulLymm8_d;
assume red_d = mulLymm8_d && true;
smull mulH_e red_e ymm10_e ymm0_e;
assert true && red_e = mulLymm8_e;
assume red_e = mulLymm8_e && true;
smull mulH_f red_f ymm10_f ymm0_f;
assert true && red_f = mulLymm8_f;
assume red_f = mulLymm8_f && true;
mov ymm10_0 mulH_0;
mov ymm10_1 mulH_1;
mov ymm10_2 mulH_2;
mov ymm10_3 mulH_3;
mov ymm10_4 mulH_4;
mov ymm10_5 mulH_5;
mov ymm10_6 mulH_6;
mov ymm10_7 mulH_7;
mov ymm10_8 mulH_8;
mov ymm10_9 mulH_9;
mov ymm10_a mulH_a;
mov ymm10_b mulH_b;
mov ymm10_c mulH_c;
mov ymm10_d mulH_d;
mov ymm10_e mulH_e;
mov ymm10_f mulH_f;
(* vpsubw %ymm10,%ymm8,%ymm8                       #! PC = 0x55555555844b *)
sub ymm8_0 ymm8_0 ymm10_0;
sub ymm8_1 ymm8_1 ymm10_1;
sub ymm8_2 ymm8_2 ymm10_2;
sub ymm8_3 ymm8_3 ymm10_3;
sub ymm8_4 ymm8_4 ymm10_4;
sub ymm8_5 ymm8_5 ymm10_5;
sub ymm8_6 ymm8_6 ymm10_6;
sub ymm8_7 ymm8_7 ymm10_7;
sub ymm8_8 ymm8_8 ymm10_8;
sub ymm8_9 ymm8_9 ymm10_9;
sub ymm8_a ymm8_a ymm10_a;
sub ymm8_b ymm8_b ymm10_b;
sub ymm8_c ymm8_c ymm10_c;
sub ymm8_d ymm8_d ymm10_d;
sub ymm8_e ymm8_e ymm10_e;
sub ymm8_f ymm8_f ymm10_f;
(* vbroadcasti128 0x1b0(%rdx),%ymm1                #! EA = L0x5555555612d0; Value = 0x02cf42c8bc387a3a; PC = 0x555555558450 *)
mov ymm1_0 L0x5555555612d0;
mov ymm1_1 L0x5555555612d2;
mov ymm1_2 L0x5555555612d4;
mov ymm1_3 L0x5555555612d6;
mov ymm1_4 L0x5555555612d8;
mov ymm1_5 L0x5555555612da;
mov ymm1_6 L0x5555555612dc;
mov ymm1_7 L0x5555555612de;
mov ymm1_8 L0x5555555612d0;
mov ymm1_9 L0x5555555612d2;
mov ymm1_a L0x5555555612d4;
mov ymm1_b L0x5555555612d6;
mov ymm1_c L0x5555555612d8;
mov ymm1_d L0x5555555612da;
mov ymm1_e L0x5555555612dc;
mov ymm1_f L0x5555555612de;
(* vbroadcasti128 0x3b0(%rdx),%ymm2                #! EA = L0x5555555614d0; Value = 0xf8cf12c8ec38fe3a; PC = 0x555555558459 *)
mov ymm2_0 L0x5555555614d0;
mov ymm2_1 L0x5555555614d2;
mov ymm2_2 L0x5555555614d4;
mov ymm2_3 L0x5555555614d6;
mov ymm2_4 L0x5555555614d8;
mov ymm2_5 L0x5555555614da;
mov ymm2_6 L0x5555555614dc;
mov ymm2_7 L0x5555555614de;
mov ymm2_8 L0x5555555614d0;
mov ymm2_9 L0x5555555614d2;
mov ymm2_a L0x5555555614d4;
mov ymm2_b L0x5555555614d6;
mov ymm2_c L0x5555555614d8;
mov ymm2_d L0x5555555614da;
mov ymm2_e L0x5555555614dc;
mov ymm2_f L0x5555555614de;
(* vpmullw %ymm1,%ymm11,%ymm10                     #! PC = 0x555555558462 *)
smull mulHymm11_0 mulL_0 ymm1_0 ymm11_0;
smull mulHymm11_1 mulL_1 ymm1_1 ymm11_1;
smull mulHymm11_2 mulL_2 ymm1_2 ymm11_2;
smull mulHymm11_3 mulL_3 ymm1_3 ymm11_3;
smull mulHymm11_4 mulL_4 ymm1_4 ymm11_4;
smull mulHymm11_5 mulL_5 ymm1_5 ymm11_5;
smull mulHymm11_6 mulL_6 ymm1_6 ymm11_6;
smull mulHymm11_7 mulL_7 ymm1_7 ymm11_7;
smull mulHymm11_8 mulL_8 ymm1_8 ymm11_8;
smull mulHymm11_9 mulL_9 ymm1_9 ymm11_9;
smull mulHymm11_a mulL_a ymm1_a ymm11_a;
smull mulHymm11_b mulL_b ymm1_b ymm11_b;
smull mulHymm11_c mulL_c ymm1_c ymm11_c;
smull mulHymm11_d mulL_d ymm1_d ymm11_d;
smull mulHymm11_e mulL_e ymm1_e ymm11_e;
smull mulHymm11_f mulL_f ymm1_f ymm11_f;
cast ymm10_0@sint16 mulL_0;
cast ymm10_1@sint16 mulL_1;
cast ymm10_2@sint16 mulL_2;
cast ymm10_3@sint16 mulL_3;
cast ymm10_4@sint16 mulL_4;
cast ymm10_5@sint16 mulL_5;
cast ymm10_6@sint16 mulL_6;
cast ymm10_7@sint16 mulL_7;
cast ymm10_8@sint16 mulL_8;
cast ymm10_9@sint16 mulL_9;
cast ymm10_a@sint16 mulL_a;
cast ymm10_b@sint16 mulL_b;
cast ymm10_c@sint16 mulL_c;
cast ymm10_d@sint16 mulL_d;
cast ymm10_e@sint16 mulL_e;
cast ymm10_f@sint16 mulL_f;
(* vpmulhw %ymm2,%ymm11,%ymm11                     #! PC = 0x555555558466 *)
smull mulH_0 mulLymm11_0 ymm11_0 ymm2_0;
smull mulH_1 mulLymm11_1 ymm11_1 ymm2_1;
smull mulH_2 mulLymm11_2 ymm11_2 ymm2_2;
smull mulH_3 mulLymm11_3 ymm11_3 ymm2_3;
smull mulH_4 mulLymm11_4 ymm11_4 ymm2_4;
smull mulH_5 mulLymm11_5 ymm11_5 ymm2_5;
smull mulH_6 mulLymm11_6 ymm11_6 ymm2_6;
smull mulH_7 mulLymm11_7 ymm11_7 ymm2_7;
smull mulH_8 mulLymm11_8 ymm11_8 ymm2_8;
smull mulH_9 mulLymm11_9 ymm11_9 ymm2_9;
smull mulH_a mulLymm11_a ymm11_a ymm2_a;
smull mulH_b mulLymm11_b ymm11_b ymm2_b;
smull mulH_c mulLymm11_c ymm11_c ymm2_c;
smull mulH_d mulLymm11_d ymm11_d ymm2_d;
smull mulH_e mulLymm11_e ymm11_e ymm2_e;
smull mulH_f mulLymm11_f ymm11_f ymm2_f;
mov ymm11_0 mulH_0;
mov ymm11_1 mulH_1;
mov ymm11_2 mulH_2;
mov ymm11_3 mulH_3;
mov ymm11_4 mulH_4;
mov ymm11_5 mulH_5;
mov ymm11_6 mulH_6;
mov ymm11_7 mulH_7;
mov ymm11_8 mulH_8;
mov ymm11_9 mulH_9;
mov ymm11_a mulH_a;
mov ymm11_b mulH_b;
mov ymm11_c mulH_c;
mov ymm11_d mulH_d;
mov ymm11_e mulH_e;
mov ymm11_f mulH_f;
(* vpmulhw %ymm0,%ymm10,%ymm10                     #! PC = 0x55555555846a *)
smull mulH_0 red_0 ymm10_0 ymm0_0;
assert true && red_0 = mulLymm11_0;
assume red_0 = mulLymm11_0 && true;
smull mulH_1 red_1 ymm10_1 ymm0_1;
assert true && red_1 = mulLymm11_1;
assume red_1 = mulLymm11_1 && true;
smull mulH_2 red_2 ymm10_2 ymm0_2;
assert true && red_2 = mulLymm11_2;
assume red_2 = mulLymm11_2 && true;
smull mulH_3 red_3 ymm10_3 ymm0_3;
assert true && red_3 = mulLymm11_3;
assume red_3 = mulLymm11_3 && true;
smull mulH_4 red_4 ymm10_4 ymm0_4;
assert true && red_4 = mulLymm11_4;
assume red_4 = mulLymm11_4 && true;
smull mulH_5 red_5 ymm10_5 ymm0_5;
assert true && red_5 = mulLymm11_5;
assume red_5 = mulLymm11_5 && true;
smull mulH_6 red_6 ymm10_6 ymm0_6;
assert true && red_6 = mulLymm11_6;
assume red_6 = mulLymm11_6 && true;
smull mulH_7 red_7 ymm10_7 ymm0_7;
assert true && red_7 = mulLymm11_7;
assume red_7 = mulLymm11_7 && true;
smull mulH_8 red_8 ymm10_8 ymm0_8;
assert true && red_8 = mulLymm11_8;
assume red_8 = mulLymm11_8 && true;
smull mulH_9 red_9 ymm10_9 ymm0_9;
assert true && red_9 = mulLymm11_9;
assume red_9 = mulLymm11_9 && true;
smull mulH_a red_a ymm10_a ymm0_a;
assert true && red_a = mulLymm11_a;
assume red_a = mulLymm11_a && true;
smull mulH_b red_b ymm10_b ymm0_b;
assert true && red_b = mulLymm11_b;
assume red_b = mulLymm11_b && true;
smull mulH_c red_c ymm10_c ymm0_c;
assert true && red_c = mulLymm11_c;
assume red_c = mulLymm11_c && true;
smull mulH_d red_d ymm10_d ymm0_d;
assert true && red_d = mulLymm11_d;
assume red_d = mulLymm11_d && true;
smull mulH_e red_e ymm10_e ymm0_e;
assert true && red_e = mulLymm11_e;
assume red_e = mulLymm11_e && true;
smull mulH_f red_f ymm10_f ymm0_f;
assert true && red_f = mulLymm11_f;
assume red_f = mulLymm11_f && true;
mov ymm10_0 mulH_0;
mov ymm10_1 mulH_1;
mov ymm10_2 mulH_2;
mov ymm10_3 mulH_3;
mov ymm10_4 mulH_4;
mov ymm10_5 mulH_5;
mov ymm10_6 mulH_6;
mov ymm10_7 mulH_7;
mov ymm10_8 mulH_8;
mov ymm10_9 mulH_9;
mov ymm10_a mulH_a;
mov ymm10_b mulH_b;
mov ymm10_c mulH_c;
mov ymm10_d mulH_d;
mov ymm10_e mulH_e;
mov ymm10_f mulH_f;
(* vpsubw %ymm10,%ymm11,%ymm11                     #! PC = 0x55555555846e *)
sub ymm11_0 ymm11_0 ymm10_0;
sub ymm11_1 ymm11_1 ymm10_1;
sub ymm11_2 ymm11_2 ymm10_2;
sub ymm11_3 ymm11_3 ymm10_3;
sub ymm11_4 ymm11_4 ymm10_4;
sub ymm11_5 ymm11_5 ymm10_5;
sub ymm11_6 ymm11_6 ymm10_6;
sub ymm11_7 ymm11_7 ymm10_7;
sub ymm11_8 ymm11_8 ymm10_8;
sub ymm11_9 ymm11_9 ymm10_9;
sub ymm11_a ymm11_a ymm10_a;
sub ymm11_b ymm11_b ymm10_b;
sub ymm11_c ymm11_c ymm10_c;
sub ymm11_d ymm11_d ymm10_d;
sub ymm11_e ymm11_e ymm10_e;
sub ymm11_f ymm11_f ymm10_f;
(* vpaddw %ymm3,%ymm9,%ymm10                       #! PC = 0x555555558473 *)
add ymm10_0 ymm9_0 ymm3_0;
add ymm10_1 ymm9_1 ymm3_1;
add ymm10_2 ymm9_2 ymm3_2;
add ymm10_3 ymm9_3 ymm3_3;
add ymm10_4 ymm9_4 ymm3_4;
add ymm10_5 ymm9_5 ymm3_5;
add ymm10_6 ymm9_6 ymm3_6;
add ymm10_7 ymm9_7 ymm3_7;
add ymm10_8 ymm9_8 ymm3_8;
add ymm10_9 ymm9_9 ymm3_9;
add ymm10_a ymm9_a ymm3_a;
add ymm10_b ymm9_b ymm3_b;
add ymm10_c ymm9_c ymm3_c;
add ymm10_d ymm9_d ymm3_d;
add ymm10_e ymm9_e ymm3_e;
add ymm10_f ymm9_f ymm3_f;
(* vpsubw %ymm3,%ymm9,%ymm3                        #! PC = 0x555555558477 *)
sub ymm3_0 ymm9_0 ymm3_0;
sub ymm3_1 ymm9_1 ymm3_1;
sub ymm3_2 ymm9_2 ymm3_2;
sub ymm3_3 ymm9_3 ymm3_3;
sub ymm3_4 ymm9_4 ymm3_4;
sub ymm3_5 ymm9_5 ymm3_5;
sub ymm3_6 ymm9_6 ymm3_6;
sub ymm3_7 ymm9_7 ymm3_7;
sub ymm3_8 ymm9_8 ymm3_8;
sub ymm3_9 ymm9_9 ymm3_9;
sub ymm3_a ymm9_a ymm3_a;
sub ymm3_b ymm9_b ymm3_b;
sub ymm3_c ymm9_c ymm3_c;
sub ymm3_d ymm9_d ymm3_d;
sub ymm3_e ymm9_e ymm3_e;
sub ymm3_f ymm9_f ymm3_f;
(* vpaddw %ymm6,%ymm7,%ymm9                        #! PC = 0x55555555847b *)
add ymm9_0 ymm7_0 ymm6_0;
add ymm9_1 ymm7_1 ymm6_1;
add ymm9_2 ymm7_2 ymm6_2;
add ymm9_3 ymm7_3 ymm6_3;
add ymm9_4 ymm7_4 ymm6_4;
add ymm9_5 ymm7_5 ymm6_5;
add ymm9_6 ymm7_6 ymm6_6;
add ymm9_7 ymm7_7 ymm6_7;
add ymm9_8 ymm7_8 ymm6_8;
add ymm9_9 ymm7_9 ymm6_9;
add ymm9_a ymm7_a ymm6_a;
add ymm9_b ymm7_b ymm6_b;
add ymm9_c ymm7_c ymm6_c;
add ymm9_d ymm7_d ymm6_d;
add ymm9_e ymm7_e ymm6_e;
add ymm9_f ymm7_f ymm6_f;
(* vpsubw %ymm6,%ymm7,%ymm6                        #! PC = 0x55555555847f *)
sub ymm6_0 ymm7_0 ymm6_0;
sub ymm6_1 ymm7_1 ymm6_1;
sub ymm6_2 ymm7_2 ymm6_2;
sub ymm6_3 ymm7_3 ymm6_3;
sub ymm6_4 ymm7_4 ymm6_4;
sub ymm6_5 ymm7_5 ymm6_5;
sub ymm6_6 ymm7_6 ymm6_6;
sub ymm6_7 ymm7_7 ymm6_7;
sub ymm6_8 ymm7_8 ymm6_8;
sub ymm6_9 ymm7_9 ymm6_9;
sub ymm6_a ymm7_a ymm6_a;
sub ymm6_b ymm7_b ymm6_b;
sub ymm6_c ymm7_c ymm6_c;
sub ymm6_d ymm7_d ymm6_d;
sub ymm6_e ymm7_e ymm6_e;
sub ymm6_f ymm7_f ymm6_f;
(* vpaddw %ymm8,%ymm5,%ymm7                        #! PC = 0x555555558483 *)
add ymm7_0 ymm5_0 ymm8_0;
add ymm7_1 ymm5_1 ymm8_1;
add ymm7_2 ymm5_2 ymm8_2;
add ymm7_3 ymm5_3 ymm8_3;
add ymm7_4 ymm5_4 ymm8_4;
add ymm7_5 ymm5_5 ymm8_5;
add ymm7_6 ymm5_6 ymm8_6;
add ymm7_7 ymm5_7 ymm8_7;
add ymm7_8 ymm5_8 ymm8_8;
add ymm7_9 ymm5_9 ymm8_9;
add ymm7_a ymm5_a ymm8_a;
add ymm7_b ymm5_b ymm8_b;
add ymm7_c ymm5_c ymm8_c;
add ymm7_d ymm5_d ymm8_d;
add ymm7_e ymm5_e ymm8_e;
add ymm7_f ymm5_f ymm8_f;
(* vpsubw %ymm8,%ymm5,%ymm8                        #! PC = 0x555555558488 *)
sub ymm8_0 ymm5_0 ymm8_0;
sub ymm8_1 ymm5_1 ymm8_1;
sub ymm8_2 ymm5_2 ymm8_2;
sub ymm8_3 ymm5_3 ymm8_3;
sub ymm8_4 ymm5_4 ymm8_4;
sub ymm8_5 ymm5_5 ymm8_5;
sub ymm8_6 ymm5_6 ymm8_6;
sub ymm8_7 ymm5_7 ymm8_7;
sub ymm8_8 ymm5_8 ymm8_8;
sub ymm8_9 ymm5_9 ymm8_9;
sub ymm8_a ymm5_a ymm8_a;
sub ymm8_b ymm5_b ymm8_b;
sub ymm8_c ymm5_c ymm8_c;
sub ymm8_d ymm5_d ymm8_d;
sub ymm8_e ymm5_e ymm8_e;
sub ymm8_f ymm5_f ymm8_f;
(* vpaddw %ymm11,%ymm4,%ymm5                       #! PC = 0x55555555848d *)
add ymm5_0 ymm4_0 ymm11_0;
add ymm5_1 ymm4_1 ymm11_1;
add ymm5_2 ymm4_2 ymm11_2;
add ymm5_3 ymm4_3 ymm11_3;
add ymm5_4 ymm4_4 ymm11_4;
add ymm5_5 ymm4_5 ymm11_5;
add ymm5_6 ymm4_6 ymm11_6;
add ymm5_7 ymm4_7 ymm11_7;
add ymm5_8 ymm4_8 ymm11_8;
add ymm5_9 ymm4_9 ymm11_9;
add ymm5_a ymm4_a ymm11_a;
add ymm5_b ymm4_b ymm11_b;
add ymm5_c ymm4_c ymm11_c;
add ymm5_d ymm4_d ymm11_d;
add ymm5_e ymm4_e ymm11_e;
add ymm5_f ymm4_f ymm11_f;
(* vpsubw %ymm11,%ymm4,%ymm11                      #! PC = 0x555555558492 *)
sub ymm11_0 ymm4_0 ymm11_0;
sub ymm11_1 ymm4_1 ymm11_1;
sub ymm11_2 ymm4_2 ymm11_2;
sub ymm11_3 ymm4_3 ymm11_3;
sub ymm11_4 ymm4_4 ymm11_4;
sub ymm11_5 ymm4_5 ymm11_5;
sub ymm11_6 ymm4_6 ymm11_6;
sub ymm11_7 ymm4_7 ymm11_7;
sub ymm11_8 ymm4_8 ymm11_8;
sub ymm11_9 ymm4_9 ymm11_9;
sub ymm11_a ymm4_a ymm11_a;
sub ymm11_b ymm4_b ymm11_b;
sub ymm11_c ymm4_c ymm11_c;
sub ymm11_d ymm4_d ymm11_d;
sub ymm11_e ymm4_e ymm11_e;
sub ymm11_f ymm4_f ymm11_f;
(* vmovdqa %ymm10,0x200(%rdi)                      #! EA = L0x7fffffffd4e0; PC = 0x555555558497 *)
mov L0x7fffffffd4e0 ymm10_0;
mov L0x7fffffffd4e2 ymm10_1;
mov L0x7fffffffd4e4 ymm10_2;
mov L0x7fffffffd4e6 ymm10_3;
mov L0x7fffffffd4e8 ymm10_4;
mov L0x7fffffffd4ea ymm10_5;
mov L0x7fffffffd4ec ymm10_6;
mov L0x7fffffffd4ee ymm10_7;
mov L0x7fffffffd4f0 ymm10_8;
mov L0x7fffffffd4f2 ymm10_9;
mov L0x7fffffffd4f4 ymm10_a;
mov L0x7fffffffd4f6 ymm10_b;
mov L0x7fffffffd4f8 ymm10_c;
mov L0x7fffffffd4fa ymm10_d;
mov L0x7fffffffd4fc ymm10_e;
mov L0x7fffffffd4fe ymm10_f;
(* vmovdqa %ymm3,0x220(%rdi)                       #! EA = L0x7fffffffd500; PC = 0x55555555849f *)
mov L0x7fffffffd500 ymm3_0;
mov L0x7fffffffd502 ymm3_1;
mov L0x7fffffffd504 ymm3_2;
mov L0x7fffffffd506 ymm3_3;
mov L0x7fffffffd508 ymm3_4;
mov L0x7fffffffd50a ymm3_5;
mov L0x7fffffffd50c ymm3_6;
mov L0x7fffffffd50e ymm3_7;
mov L0x7fffffffd510 ymm3_8;
mov L0x7fffffffd512 ymm3_9;
mov L0x7fffffffd514 ymm3_a;
mov L0x7fffffffd516 ymm3_b;
mov L0x7fffffffd518 ymm3_c;
mov L0x7fffffffd51a ymm3_d;
mov L0x7fffffffd51c ymm3_e;
mov L0x7fffffffd51e ymm3_f;
(* vmovdqa %ymm9,0x240(%rdi)                       #! EA = L0x7fffffffd520; PC = 0x5555555584a7 *)
mov L0x7fffffffd520 ymm9_0;
mov L0x7fffffffd522 ymm9_1;
mov L0x7fffffffd524 ymm9_2;
mov L0x7fffffffd526 ymm9_3;
mov L0x7fffffffd528 ymm9_4;
mov L0x7fffffffd52a ymm9_5;
mov L0x7fffffffd52c ymm9_6;
mov L0x7fffffffd52e ymm9_7;
mov L0x7fffffffd530 ymm9_8;
mov L0x7fffffffd532 ymm9_9;
mov L0x7fffffffd534 ymm9_a;
mov L0x7fffffffd536 ymm9_b;
mov L0x7fffffffd538 ymm9_c;
mov L0x7fffffffd53a ymm9_d;
mov L0x7fffffffd53c ymm9_e;
mov L0x7fffffffd53e ymm9_f;
(* vmovdqa %ymm6,0x260(%rdi)                       #! EA = L0x7fffffffd540; PC = 0x5555555584af *)
mov L0x7fffffffd540 ymm6_0;
mov L0x7fffffffd542 ymm6_1;
mov L0x7fffffffd544 ymm6_2;
mov L0x7fffffffd546 ymm6_3;
mov L0x7fffffffd548 ymm6_4;
mov L0x7fffffffd54a ymm6_5;
mov L0x7fffffffd54c ymm6_6;
mov L0x7fffffffd54e ymm6_7;
mov L0x7fffffffd550 ymm6_8;
mov L0x7fffffffd552 ymm6_9;
mov L0x7fffffffd554 ymm6_a;
mov L0x7fffffffd556 ymm6_b;
mov L0x7fffffffd558 ymm6_c;
mov L0x7fffffffd55a ymm6_d;
mov L0x7fffffffd55c ymm6_e;
mov L0x7fffffffd55e ymm6_f;
(* vmovdqa %ymm7,0x280(%rdi)                       #! EA = L0x7fffffffd560; PC = 0x5555555584b7 *)
mov L0x7fffffffd560 ymm7_0;
mov L0x7fffffffd562 ymm7_1;
mov L0x7fffffffd564 ymm7_2;
mov L0x7fffffffd566 ymm7_3;
mov L0x7fffffffd568 ymm7_4;
mov L0x7fffffffd56a ymm7_5;
mov L0x7fffffffd56c ymm7_6;
mov L0x7fffffffd56e ymm7_7;
mov L0x7fffffffd570 ymm7_8;
mov L0x7fffffffd572 ymm7_9;
mov L0x7fffffffd574 ymm7_a;
mov L0x7fffffffd576 ymm7_b;
mov L0x7fffffffd578 ymm7_c;
mov L0x7fffffffd57a ymm7_d;
mov L0x7fffffffd57c ymm7_e;
mov L0x7fffffffd57e ymm7_f;
(* vmovdqa %ymm8,0x2a0(%rdi)                       #! EA = L0x7fffffffd580; PC = 0x5555555584bf *)
mov L0x7fffffffd580 ymm8_0;
mov L0x7fffffffd582 ymm8_1;
mov L0x7fffffffd584 ymm8_2;
mov L0x7fffffffd586 ymm8_3;
mov L0x7fffffffd588 ymm8_4;
mov L0x7fffffffd58a ymm8_5;
mov L0x7fffffffd58c ymm8_6;
mov L0x7fffffffd58e ymm8_7;
mov L0x7fffffffd590 ymm8_8;
mov L0x7fffffffd592 ymm8_9;
mov L0x7fffffffd594 ymm8_a;
mov L0x7fffffffd596 ymm8_b;
mov L0x7fffffffd598 ymm8_c;
mov L0x7fffffffd59a ymm8_d;
mov L0x7fffffffd59c ymm8_e;
mov L0x7fffffffd59e ymm8_f;
(* vmovdqa %ymm5,0x2c0(%rdi)                       #! EA = L0x7fffffffd5a0; PC = 0x5555555584c7 *)
mov L0x7fffffffd5a0 ymm5_0;
mov L0x7fffffffd5a2 ymm5_1;
mov L0x7fffffffd5a4 ymm5_2;
mov L0x7fffffffd5a6 ymm5_3;
mov L0x7fffffffd5a8 ymm5_4;
mov L0x7fffffffd5aa ymm5_5;
mov L0x7fffffffd5ac ymm5_6;
mov L0x7fffffffd5ae ymm5_7;
mov L0x7fffffffd5b0 ymm5_8;
mov L0x7fffffffd5b2 ymm5_9;
mov L0x7fffffffd5b4 ymm5_a;
mov L0x7fffffffd5b6 ymm5_b;
mov L0x7fffffffd5b8 ymm5_c;
mov L0x7fffffffd5ba ymm5_d;
mov L0x7fffffffd5bc ymm5_e;
mov L0x7fffffffd5be ymm5_f;
(* vmovdqa %ymm11,0x2e0(%rdi)                      #! EA = L0x7fffffffd5c0; PC = 0x5555555584cf *)
mov L0x7fffffffd5c0 ymm11_0;
mov L0x7fffffffd5c2 ymm11_1;
mov L0x7fffffffd5c4 ymm11_2;
mov L0x7fffffffd5c6 ymm11_3;
mov L0x7fffffffd5c8 ymm11_4;
mov L0x7fffffffd5ca ymm11_5;
mov L0x7fffffffd5cc ymm11_6;
mov L0x7fffffffd5ce ymm11_7;
mov L0x7fffffffd5d0 ymm11_8;
mov L0x7fffffffd5d2 ymm11_9;
mov L0x7fffffffd5d4 ymm11_a;
mov L0x7fffffffd5d6 ymm11_b;
mov L0x7fffffffd5d8 ymm11_c;
mov L0x7fffffffd5da ymm11_d;
mov L0x7fffffffd5dc ymm11_e;
mov L0x7fffffffd5de ymm11_f;


(**************** LEVELS 3-8, 2 *****************)


(**************** CUT 149,  9 *****************)

cut 
  and [
eqmod (inp_poly**2) (L0x7fffffffd4e0*x** 0+L0x7fffffffd4f0*x** 1)
      [10753, x**2 - 100],
eqmod (inp_poly**2) (L0x7fffffffd500*x** 0+L0x7fffffffd510*x** 1)
      [10753, x**2 - 10653],
eqmod (inp_poly**2) (L0x7fffffffd4e2*x** 0+L0x7fffffffd4f2*x** 1)
      [10753, x**2 - 2726],
eqmod (inp_poly**2) (L0x7fffffffd502*x** 0+L0x7fffffffd512*x** 1)
      [10753, x**2 - 8027],
eqmod (inp_poly**2) (L0x7fffffffd4e4*x** 0+L0x7fffffffd4f4*x** 1)
      [10753, x**2 - 10594],
eqmod (inp_poly**2) (L0x7fffffffd504*x** 0+L0x7fffffffd514*x** 1)
      [10753, x**2 - 159],
eqmod (inp_poly**2) (L0x7fffffffd4e6*x** 0+L0x7fffffffd4f6*x** 1)
      [10753, x**2 - 4053],
eqmod (inp_poly**2) (L0x7fffffffd506*x** 0+L0x7fffffffd516*x** 1)
      [10753, x**2 - 6700],
eqmod (inp_poly**2) (L0x7fffffffd4e8*x** 0+L0x7fffffffd4f8*x** 1)
      [10753, x**2 - 6448],
eqmod (inp_poly**2) (L0x7fffffffd508*x** 0+L0x7fffffffd518*x** 1)
      [10753, x**2 - 4305],
eqmod (inp_poly**2) (L0x7fffffffd4ea*x** 0+L0x7fffffffd4fa*x** 1)
      [10753, x**2 - 2004],
eqmod (inp_poly**2) (L0x7fffffffd50a*x** 0+L0x7fffffffd51a*x** 1)
      [10753, x**2 - 8749],
eqmod (inp_poly**2) (L0x7fffffffd4ec*x** 0+L0x7fffffffd4fc*x** 1)
      [10753, x**2 - 5232],
eqmod (inp_poly**2) (L0x7fffffffd50c*x** 0+L0x7fffffffd51c*x** 1)
      [10753, x**2 - 5521],
eqmod (inp_poly**2) (L0x7fffffffd4ee*x** 0+L0x7fffffffd4fe*x** 1)
      [10753, x**2 - 8857],
eqmod (inp_poly**2) (L0x7fffffffd50e*x** 0+L0x7fffffffd51e*x** 1)
      [10753, x**2 - 1896],
eqmod (inp_poly**2) (L0x7fffffffd520*x** 0+L0x7fffffffd530*x** 1)
      [10753, x**2 - 7870],
eqmod (inp_poly**2) (L0x7fffffffd540*x** 0+L0x7fffffffd550*x** 1)
      [10753, x**2 - 2883],
eqmod (inp_poly**2) (L0x7fffffffd522*x** 0+L0x7fffffffd532*x** 1)
      [10753, x**2 - 5928],
eqmod (inp_poly**2) (L0x7fffffffd542*x** 0+L0x7fffffffd552*x** 1)
      [10753, x**2 - 4825],
eqmod (inp_poly**2) (L0x7fffffffd524*x** 0+L0x7fffffffd534*x** 1)
      [10753, x**2 - 10068],
eqmod (inp_poly**2) (L0x7fffffffd544*x** 0+L0x7fffffffd554*x** 1)
      [10753, x**2 - 685],
eqmod (inp_poly**2) (L0x7fffffffd526*x** 0+L0x7fffffffd536*x** 1)
      [10753, x**2 - 10360],
eqmod (inp_poly**2) (L0x7fffffffd546*x** 0+L0x7fffffffd556*x** 1)
      [10753, x**2 - 393],
eqmod (inp_poly**2) (L0x7fffffffd528*x** 0+L0x7fffffffd538*x** 1)
      [10753, x**2 - 10669],
eqmod (inp_poly**2) (L0x7fffffffd548*x** 0+L0x7fffffffd558*x** 1)
      [10753, x**2 - 84],
eqmod (inp_poly**2) (L0x7fffffffd52a*x** 0+L0x7fffffffd53a*x** 1)
      [10753, x**2 - 721],
eqmod (inp_poly**2) (L0x7fffffffd54a*x** 0+L0x7fffffffd55a*x** 1)
      [10753, x**2 - 10032],
eqmod (inp_poly**2) (L0x7fffffffd52c*x** 0+L0x7fffffffd53c*x** 1)
      [10753, x**2 - 5295],
eqmod (inp_poly**2) (L0x7fffffffd54c*x** 0+L0x7fffffffd55c*x** 1)
      [10753, x**2 - 5458],
eqmod (inp_poly**2) (L0x7fffffffd52e*x** 0+L0x7fffffffd53e*x** 1)
      [10753, x**2 - 5628],
eqmod (inp_poly**2) (L0x7fffffffd54e*x** 0+L0x7fffffffd55e*x** 1)
      [10753, x**2 - 5125],
eqmod (inp_poly**2) (L0x7fffffffd560*x** 0+L0x7fffffffd570*x** 1)
      [10753, x**2 - 331],
eqmod (inp_poly**2) (L0x7fffffffd580*x** 0+L0x7fffffffd590*x** 1)
      [10753, x**2 - 10422],
eqmod (inp_poly**2) (L0x7fffffffd562*x** 0+L0x7fffffffd572*x** 1)
      [10753, x**2 - 8808],
eqmod (inp_poly**2) (L0x7fffffffd582*x** 0+L0x7fffffffd592*x** 1)
      [10753, x**2 - 1945],
eqmod (inp_poly**2) (L0x7fffffffd564*x** 0+L0x7fffffffd574*x** 1)
      [10753, x**2 - 9474],
eqmod (inp_poly**2) (L0x7fffffffd584*x** 0+L0x7fffffffd594*x** 1)
      [10753, x**2 - 1279],
eqmod (inp_poly**2) (L0x7fffffffd566*x** 0+L0x7fffffffd576*x** 1)
      [10753, x**2 - 10082],
eqmod (inp_poly**2) (L0x7fffffffd586*x** 0+L0x7fffffffd596*x** 1)
      [10753, x**2 - 671],
eqmod (inp_poly**2) (L0x7fffffffd568*x** 0+L0x7fffffffd578*x** 1)
      [10753, x**2 - 267],
eqmod (inp_poly**2) (L0x7fffffffd588*x** 0+L0x7fffffffd598*x** 1)
      [10753, x**2 - 10486],
eqmod (inp_poly**2) (L0x7fffffffd56a*x** 0+L0x7fffffffd57a*x** 1)
      [10753, x**2 - 5773],
eqmod (inp_poly**2) (L0x7fffffffd58a*x** 0+L0x7fffffffd59a*x** 1)
      [10753, x**2 - 4980],
eqmod (inp_poly**2) (L0x7fffffffd56c*x** 0+L0x7fffffffd57c*x** 1)
      [10753, x**2 - 10436],
eqmod (inp_poly**2) (L0x7fffffffd58c*x** 0+L0x7fffffffd59c*x** 1)
      [10753, x**2 - 317],
eqmod (inp_poly**2) (L0x7fffffffd56e*x** 0+L0x7fffffffd57e*x** 1)
      [10753, x**2 - 3617],
eqmod (inp_poly**2) (L0x7fffffffd58e*x** 0+L0x7fffffffd59e*x** 1)
      [10753, x**2 - 7136],
eqmod (inp_poly**2) (L0x7fffffffd5a0*x** 0+L0x7fffffffd5b0*x** 1)
      [10753, x**2 - 5619],
eqmod (inp_poly**2) (L0x7fffffffd5c0*x** 0+L0x7fffffffd5d0*x** 1)
      [10753, x**2 - 5134],
eqmod (inp_poly**2) (L0x7fffffffd5a2*x** 0+L0x7fffffffd5b2*x** 1)
      [10753, x**2 - 2847],
eqmod (inp_poly**2) (L0x7fffffffd5c2*x** 0+L0x7fffffffd5d2*x** 1)
      [10753, x**2 - 7906],
eqmod (inp_poly**2) (L0x7fffffffd5a4*x** 0+L0x7fffffffd5b4*x** 1)
      [10753, x**2 - 7948],
eqmod (inp_poly**2) (L0x7fffffffd5c4*x** 0+L0x7fffffffd5d4*x** 1)
      [10753, x**2 - 2805],
eqmod (inp_poly**2) (L0x7fffffffd5a6*x** 0+L0x7fffffffd5b6*x** 1)
      [10753, x**2 - 10635],
eqmod (inp_poly**2) (L0x7fffffffd5c6*x** 0+L0x7fffffffd5d6*x** 1)
      [10753, x**2 - 118],
eqmod (inp_poly**2) (L0x7fffffffd5a8*x** 0+L0x7fffffffd5b8*x** 1)
      [10753, x**2 - 7034],
eqmod (inp_poly**2) (L0x7fffffffd5c8*x** 0+L0x7fffffffd5d8*x** 1)
      [10753, x**2 - 3719],
eqmod (inp_poly**2) (L0x7fffffffd5aa*x** 0+L0x7fffffffd5ba*x** 1)
      [10753, x**2 - 5935],
eqmod (inp_poly**2) (L0x7fffffffd5ca*x** 0+L0x7fffffffd5da*x** 1)
      [10753, x**2 - 4818],
eqmod (inp_poly**2) (L0x7fffffffd5ac*x** 0+L0x7fffffffd5bc*x** 1)
      [10753, x**2 - 10537],
eqmod (inp_poly**2) (L0x7fffffffd5cc*x** 0+L0x7fffffffd5dc*x** 1)
      [10753, x**2 - 216],
eqmod (inp_poly**2) (L0x7fffffffd5ae*x** 0+L0x7fffffffd5be*x** 1)
      [10753, x**2 - 1854],
eqmod (inp_poly**2) (L0x7fffffffd5ce*x** 0+L0x7fffffffd5de*x** 1)
      [10753, x**2 - 8899]
  ] prove with [ precondition, cuts [ 7, 25, 43, 61, 79, 97, 115, 133] ] && and [
(-26003)@16<=s L0x7fffffffd4e0,L0x7fffffffd4e0<=s 26003@16,
(-26003)@16<=s L0x7fffffffd4f0,L0x7fffffffd4f0<=s 26003@16,
(-26003)@16<=s L0x7fffffffd500,L0x7fffffffd500<=s 26003@16,
(-26003)@16<=s L0x7fffffffd510,L0x7fffffffd510<=s 26003@16,
(-24781)@16<=s L0x7fffffffd4e2,L0x7fffffffd4e2<=s 24781@16,
(-24781)@16<=s L0x7fffffffd4f2,L0x7fffffffd4f2<=s 24781@16,
(-24781)@16<=s L0x7fffffffd502,L0x7fffffffd502<=s 24781@16,
(-24781)@16<=s L0x7fffffffd512,L0x7fffffffd512<=s 24781@16,
(-24947)@16<=s L0x7fffffffd4e4,L0x7fffffffd4e4<=s 24947@16,
(-24947)@16<=s L0x7fffffffd4f4,L0x7fffffffd4f4<=s 24947@16,
(-24947)@16<=s L0x7fffffffd504,L0x7fffffffd504<=s 24947@16,
(-24947)@16<=s L0x7fffffffd514,L0x7fffffffd514<=s 24947@16,
(-25667)@16<=s L0x7fffffffd4e6,L0x7fffffffd4e6<=s 25667@16,
(-25667)@16<=s L0x7fffffffd4f6,L0x7fffffffd4f6<=s 25667@16,
(-25667)@16<=s L0x7fffffffd506,L0x7fffffffd506<=s 25667@16,
(-25667)@16<=s L0x7fffffffd516,L0x7fffffffd516<=s 25667@16,
(-24326)@16<=s L0x7fffffffd4e8,L0x7fffffffd4e8<=s 24326@16,
(-24326)@16<=s L0x7fffffffd4f8,L0x7fffffffd4f8<=s 24326@16,
(-24326)@16<=s L0x7fffffffd508,L0x7fffffffd508<=s 24326@16,
(-24326)@16<=s L0x7fffffffd518,L0x7fffffffd518<=s 24326@16,
(-23850)@16<=s L0x7fffffffd4ea,L0x7fffffffd4ea<=s 23850@16,
(-23850)@16<=s L0x7fffffffd4fa,L0x7fffffffd4fa<=s 23850@16,
(-23850)@16<=s L0x7fffffffd50a,L0x7fffffffd50a<=s 23850@16,
(-23850)@16<=s L0x7fffffffd51a,L0x7fffffffd51a<=s 23850@16,
(-23928)@16<=s L0x7fffffffd4ec,L0x7fffffffd4ec<=s 23928@16,
(-23928)@16<=s L0x7fffffffd4fc,L0x7fffffffd4fc<=s 23928@16,
(-23928)@16<=s L0x7fffffffd50c,L0x7fffffffd50c<=s 23928@16,
(-23928)@16<=s L0x7fffffffd51c,L0x7fffffffd51c<=s 23928@16,
(-24467)@16<=s L0x7fffffffd4ee,L0x7fffffffd4ee<=s 24467@16,
(-24467)@16<=s L0x7fffffffd4fe,L0x7fffffffd4fe<=s 24467@16,
(-24467)@16<=s L0x7fffffffd50e,L0x7fffffffd50e<=s 24467@16,
(-24467)@16<=s L0x7fffffffd51e,L0x7fffffffd51e<=s 24467@16,
(-24015)@16<=s L0x7fffffffd520,L0x7fffffffd520<=s 24015@16,
(-24015)@16<=s L0x7fffffffd530,L0x7fffffffd530<=s 24015@16,
(-24015)@16<=s L0x7fffffffd540,L0x7fffffffd540<=s 24015@16,
(-24015)@16<=s L0x7fffffffd550,L0x7fffffffd550<=s 24015@16,
(-24471)@16<=s L0x7fffffffd522,L0x7fffffffd522<=s 24471@16,
(-24471)@16<=s L0x7fffffffd532,L0x7fffffffd532<=s 24471@16,
(-24471)@16<=s L0x7fffffffd542,L0x7fffffffd542<=s 24471@16,
(-24471)@16<=s L0x7fffffffd552,L0x7fffffffd552<=s 24471@16,
(-24483)@16<=s L0x7fffffffd524,L0x7fffffffd524<=s 24483@16,
(-24483)@16<=s L0x7fffffffd534,L0x7fffffffd534<=s 24483@16,
(-24483)@16<=s L0x7fffffffd544,L0x7fffffffd544<=s 24483@16,
(-24483)@16<=s L0x7fffffffd554,L0x7fffffffd554<=s 24483@16,
(-24624)@16<=s L0x7fffffffd526,L0x7fffffffd526<=s 24624@16,
(-24624)@16<=s L0x7fffffffd536,L0x7fffffffd536<=s 24624@16,
(-24624)@16<=s L0x7fffffffd546,L0x7fffffffd546<=s 24624@16,
(-24624)@16<=s L0x7fffffffd556,L0x7fffffffd556<=s 24624@16,
(-23528)@16<=s L0x7fffffffd528,L0x7fffffffd528<=s 23528@16,
(-23528)@16<=s L0x7fffffffd538,L0x7fffffffd538<=s 23528@16,
(-23528)@16<=s L0x7fffffffd548,L0x7fffffffd548<=s 23528@16,
(-23528)@16<=s L0x7fffffffd558,L0x7fffffffd558<=s 23528@16,
(-24118)@16<=s L0x7fffffffd52a,L0x7fffffffd52a<=s 24118@16,
(-24118)@16<=s L0x7fffffffd53a,L0x7fffffffd53a<=s 24118@16,
(-24118)@16<=s L0x7fffffffd54a,L0x7fffffffd54a<=s 24118@16,
(-24118)@16<=s L0x7fffffffd55a,L0x7fffffffd55a<=s 24118@16,
(-24910)@16<=s L0x7fffffffd52c,L0x7fffffffd52c<=s 24910@16,
(-24910)@16<=s L0x7fffffffd53c,L0x7fffffffd53c<=s 24910@16,
(-24910)@16<=s L0x7fffffffd54c,L0x7fffffffd54c<=s 24910@16,
(-24910)@16<=s L0x7fffffffd55c,L0x7fffffffd55c<=s 24910@16,
(-24617)@16<=s L0x7fffffffd52e,L0x7fffffffd52e<=s 24617@16,
(-24617)@16<=s L0x7fffffffd53e,L0x7fffffffd53e<=s 24617@16,
(-24617)@16<=s L0x7fffffffd54e,L0x7fffffffd54e<=s 24617@16,
(-24617)@16<=s L0x7fffffffd55e,L0x7fffffffd55e<=s 24617@16,
(-24481)@16<=s L0x7fffffffd560,L0x7fffffffd560<=s 24481@16,
(-24481)@16<=s L0x7fffffffd570,L0x7fffffffd570<=s 24481@16,
(-24481)@16<=s L0x7fffffffd580,L0x7fffffffd580<=s 24481@16,
(-24481)@16<=s L0x7fffffffd590,L0x7fffffffd590<=s 24481@16,
(-23929)@16<=s L0x7fffffffd562,L0x7fffffffd562<=s 23929@16,
(-23929)@16<=s L0x7fffffffd572,L0x7fffffffd572<=s 23929@16,
(-23929)@16<=s L0x7fffffffd582,L0x7fffffffd582<=s 23929@16,
(-23929)@16<=s L0x7fffffffd592,L0x7fffffffd592<=s 23929@16,
(-23450)@16<=s L0x7fffffffd564,L0x7fffffffd564<=s 23450@16,
(-23450)@16<=s L0x7fffffffd574,L0x7fffffffd574<=s 23450@16,
(-23450)@16<=s L0x7fffffffd584,L0x7fffffffd584<=s 23450@16,
(-23450)@16<=s L0x7fffffffd594,L0x7fffffffd594<=s 23450@16,
(-24605)@16<=s L0x7fffffffd566,L0x7fffffffd566<=s 24605@16,
(-24605)@16<=s L0x7fffffffd576,L0x7fffffffd576<=s 24605@16,
(-24605)@16<=s L0x7fffffffd586,L0x7fffffffd586<=s 24605@16,
(-24605)@16<=s L0x7fffffffd596,L0x7fffffffd596<=s 24605@16,
(-23107)@16<=s L0x7fffffffd568,L0x7fffffffd568<=s 23107@16,
(-23107)@16<=s L0x7fffffffd578,L0x7fffffffd578<=s 23107@16,
(-23107)@16<=s L0x7fffffffd588,L0x7fffffffd588<=s 23107@16,
(-23107)@16<=s L0x7fffffffd598,L0x7fffffffd598<=s 23107@16,
(-23612)@16<=s L0x7fffffffd56a,L0x7fffffffd56a<=s 23612@16,
(-23612)@16<=s L0x7fffffffd57a,L0x7fffffffd57a<=s 23612@16,
(-23612)@16<=s L0x7fffffffd58a,L0x7fffffffd58a<=s 23612@16,
(-23612)@16<=s L0x7fffffffd59a,L0x7fffffffd59a<=s 23612@16,
(-23127)@16<=s L0x7fffffffd56c,L0x7fffffffd56c<=s 23127@16,
(-23127)@16<=s L0x7fffffffd57c,L0x7fffffffd57c<=s 23127@16,
(-23127)@16<=s L0x7fffffffd58c,L0x7fffffffd58c<=s 23127@16,
(-23127)@16<=s L0x7fffffffd59c,L0x7fffffffd59c<=s 23127@16,
(-24252)@16<=s L0x7fffffffd56e,L0x7fffffffd56e<=s 24252@16,
(-24252)@16<=s L0x7fffffffd57e,L0x7fffffffd57e<=s 24252@16,
(-24252)@16<=s L0x7fffffffd58e,L0x7fffffffd58e<=s 24252@16,
(-24252)@16<=s L0x7fffffffd59e,L0x7fffffffd59e<=s 24252@16,
(-23740)@16<=s L0x7fffffffd5a0,L0x7fffffffd5a0<=s 23740@16,
(-23740)@16<=s L0x7fffffffd5b0,L0x7fffffffd5b0<=s 23740@16,
(-23740)@16<=s L0x7fffffffd5c0,L0x7fffffffd5c0<=s 23740@16,
(-23740)@16<=s L0x7fffffffd5d0,L0x7fffffffd5d0<=s 23740@16,
(-25010)@16<=s L0x7fffffffd5a2,L0x7fffffffd5a2<=s 25010@16,
(-25010)@16<=s L0x7fffffffd5b2,L0x7fffffffd5b2<=s 25010@16,
(-25010)@16<=s L0x7fffffffd5c2,L0x7fffffffd5c2<=s 25010@16,
(-25010)@16<=s L0x7fffffffd5d2,L0x7fffffffd5d2<=s 25010@16,
(-24750)@16<=s L0x7fffffffd5a4,L0x7fffffffd5a4<=s 24750@16,
(-24750)@16<=s L0x7fffffffd5b4,L0x7fffffffd5b4<=s 24750@16,
(-24750)@16<=s L0x7fffffffd5c4,L0x7fffffffd5c4<=s 24750@16,
(-24750)@16<=s L0x7fffffffd5d4,L0x7fffffffd5d4<=s 24750@16,
(-24054)@16<=s L0x7fffffffd5a6,L0x7fffffffd5a6<=s 24054@16,
(-24054)@16<=s L0x7fffffffd5b6,L0x7fffffffd5b6<=s 24054@16,
(-24054)@16<=s L0x7fffffffd5c6,L0x7fffffffd5c6<=s 24054@16,
(-24054)@16<=s L0x7fffffffd5d6,L0x7fffffffd5d6<=s 24054@16,
(-24864)@16<=s L0x7fffffffd5a8,L0x7fffffffd5a8<=s 24864@16,
(-24864)@16<=s L0x7fffffffd5b8,L0x7fffffffd5b8<=s 24864@16,
(-24864)@16<=s L0x7fffffffd5c8,L0x7fffffffd5c8<=s 24864@16,
(-24864)@16<=s L0x7fffffffd5d8,L0x7fffffffd5d8<=s 24864@16,
(-24999)@16<=s L0x7fffffffd5aa,L0x7fffffffd5aa<=s 24999@16,
(-24999)@16<=s L0x7fffffffd5ba,L0x7fffffffd5ba<=s 24999@16,
(-24999)@16<=s L0x7fffffffd5ca,L0x7fffffffd5ca<=s 24999@16,
(-24999)@16<=s L0x7fffffffd5da,L0x7fffffffd5da<=s 24999@16,
(-25106)@16<=s L0x7fffffffd5ac,L0x7fffffffd5ac<=s 25106@16,
(-25106)@16<=s L0x7fffffffd5bc,L0x7fffffffd5bc<=s 25106@16,
(-25106)@16<=s L0x7fffffffd5cc,L0x7fffffffd5cc<=s 25106@16,
(-25106)@16<=s L0x7fffffffd5dc,L0x7fffffffd5dc<=s 25106@16,
(-25188)@16<=s L0x7fffffffd5ae,L0x7fffffffd5ae<=s 25188@16,
(-25188)@16<=s L0x7fffffffd5be,L0x7fffffffd5be<=s 25188@16,
(-25188)@16<=s L0x7fffffffd5ce,L0x7fffffffd5ce<=s 25188@16,
(-25188)@16<=s L0x7fffffffd5de,L0x7fffffffd5de<=s 25188@16
];


(* === be ready for next level and offset === *)

(**************** CUT 150, 10 *****************)

cut 
true && and [
( -9479)@16<=s L0x7fffffffd5e0,L0x7fffffffd5e0<s  9479@16,
( -9479)@16<=s L0x7fffffffd5e2,L0x7fffffffd5e2<s  9479@16,
( -9479)@16<=s L0x7fffffffd5e4,L0x7fffffffd5e4<s  9479@16,
( -9479)@16<=s L0x7fffffffd5e6,L0x7fffffffd5e6<s  9479@16,
( -9479)@16<=s L0x7fffffffd5e8,L0x7fffffffd5e8<s  9479@16,
( -9479)@16<=s L0x7fffffffd5ea,L0x7fffffffd5ea<s  9479@16,
( -9479)@16<=s L0x7fffffffd5ec,L0x7fffffffd5ec<s  9479@16,
( -9479)@16<=s L0x7fffffffd5ee,L0x7fffffffd5ee<s  9479@16,
( -9479)@16<=s L0x7fffffffd5f0,L0x7fffffffd5f0<s  9479@16,
( -9479)@16<=s L0x7fffffffd5f2,L0x7fffffffd5f2<s  9479@16,
( -9479)@16<=s L0x7fffffffd5f4,L0x7fffffffd5f4<s  9479@16,
( -9479)@16<=s L0x7fffffffd5f6,L0x7fffffffd5f6<s  9479@16,
( -9479)@16<=s L0x7fffffffd5f8,L0x7fffffffd5f8<s  9479@16,
( -9479)@16<=s L0x7fffffffd5fa,L0x7fffffffd5fa<s  9479@16,
( -9479)@16<=s L0x7fffffffd5fc,L0x7fffffffd5fc<s  9479@16,
( -9479)@16<=s L0x7fffffffd5fe,L0x7fffffffd5fe<s  9479@16,
( -9479)@16<=s L0x7fffffffd600,L0x7fffffffd600<s  9479@16,
( -9479)@16<=s L0x7fffffffd602,L0x7fffffffd602<s  9479@16,
( -9479)@16<=s L0x7fffffffd604,L0x7fffffffd604<s  9479@16,
( -9479)@16<=s L0x7fffffffd606,L0x7fffffffd606<s  9479@16,
( -9479)@16<=s L0x7fffffffd608,L0x7fffffffd608<s  9479@16,
( -9479)@16<=s L0x7fffffffd60a,L0x7fffffffd60a<s  9479@16,
( -9479)@16<=s L0x7fffffffd60c,L0x7fffffffd60c<s  9479@16,
( -9479)@16<=s L0x7fffffffd60e,L0x7fffffffd60e<s  9479@16,
( -9479)@16<=s L0x7fffffffd610,L0x7fffffffd610<s  9479@16,
( -9479)@16<=s L0x7fffffffd612,L0x7fffffffd612<s  9479@16,
( -9479)@16<=s L0x7fffffffd614,L0x7fffffffd614<s  9479@16,
( -9479)@16<=s L0x7fffffffd616,L0x7fffffffd616<s  9479@16,
( -9479)@16<=s L0x7fffffffd618,L0x7fffffffd618<s  9479@16,
( -9479)@16<=s L0x7fffffffd61a,L0x7fffffffd61a<s  9479@16,
( -9479)@16<=s L0x7fffffffd61c,L0x7fffffffd61c<s  9479@16,
( -9479)@16<=s L0x7fffffffd61e,L0x7fffffffd61e<s  9479@16,
( -9479)@16<=s L0x7fffffffd620,L0x7fffffffd620<s  9479@16,
( -9479)@16<=s L0x7fffffffd622,L0x7fffffffd622<s  9479@16,
( -9479)@16<=s L0x7fffffffd624,L0x7fffffffd624<s  9479@16,
( -9479)@16<=s L0x7fffffffd626,L0x7fffffffd626<s  9479@16,
( -9479)@16<=s L0x7fffffffd628,L0x7fffffffd628<s  9479@16,
( -9479)@16<=s L0x7fffffffd62a,L0x7fffffffd62a<s  9479@16,
( -9479)@16<=s L0x7fffffffd62c,L0x7fffffffd62c<s  9479@16,
( -9479)@16<=s L0x7fffffffd62e,L0x7fffffffd62e<s  9479@16,
( -9479)@16<=s L0x7fffffffd630,L0x7fffffffd630<s  9479@16,
( -9479)@16<=s L0x7fffffffd632,L0x7fffffffd632<s  9479@16,
( -9479)@16<=s L0x7fffffffd634,L0x7fffffffd634<s  9479@16,
( -9479)@16<=s L0x7fffffffd636,L0x7fffffffd636<s  9479@16,
( -9479)@16<=s L0x7fffffffd638,L0x7fffffffd638<s  9479@16,
( -9479)@16<=s L0x7fffffffd63a,L0x7fffffffd63a<s  9479@16,
( -9479)@16<=s L0x7fffffffd63c,L0x7fffffffd63c<s  9479@16,
( -9479)@16<=s L0x7fffffffd63e,L0x7fffffffd63e<s  9479@16,
( -9479)@16<=s L0x7fffffffd640,L0x7fffffffd640<s  9479@16,
( -9479)@16<=s L0x7fffffffd642,L0x7fffffffd642<s  9479@16,
( -9479)@16<=s L0x7fffffffd644,L0x7fffffffd644<s  9479@16,
( -9479)@16<=s L0x7fffffffd646,L0x7fffffffd646<s  9479@16,
( -9479)@16<=s L0x7fffffffd648,L0x7fffffffd648<s  9479@16,
( -9479)@16<=s L0x7fffffffd64a,L0x7fffffffd64a<s  9479@16,
( -9479)@16<=s L0x7fffffffd64c,L0x7fffffffd64c<s  9479@16,
( -9479)@16<=s L0x7fffffffd64e,L0x7fffffffd64e<s  9479@16,
( -9479)@16<=s L0x7fffffffd650,L0x7fffffffd650<s  9479@16,
( -9479)@16<=s L0x7fffffffd652,L0x7fffffffd652<s  9479@16,
( -9479)@16<=s L0x7fffffffd654,L0x7fffffffd654<s  9479@16,
( -9479)@16<=s L0x7fffffffd656,L0x7fffffffd656<s  9479@16,
( -9479)@16<=s L0x7fffffffd658,L0x7fffffffd658<s  9479@16,
( -9479)@16<=s L0x7fffffffd65a,L0x7fffffffd65a<s  9479@16,
( -9479)@16<=s L0x7fffffffd65c,L0x7fffffffd65c<s  9479@16,
( -9479)@16<=s L0x7fffffffd65e,L0x7fffffffd65e<s  9479@16,
( -9479)@16<=s L0x7fffffffd660,L0x7fffffffd660<s  9479@16,
( -9479)@16<=s L0x7fffffffd662,L0x7fffffffd662<s  9479@16,
( -9479)@16<=s L0x7fffffffd664,L0x7fffffffd664<s  9479@16,
( -9479)@16<=s L0x7fffffffd666,L0x7fffffffd666<s  9479@16,
( -9479)@16<=s L0x7fffffffd668,L0x7fffffffd668<s  9479@16,
( -9479)@16<=s L0x7fffffffd66a,L0x7fffffffd66a<s  9479@16,
( -9479)@16<=s L0x7fffffffd66c,L0x7fffffffd66c<s  9479@16,
( -9479)@16<=s L0x7fffffffd66e,L0x7fffffffd66e<s  9479@16,
( -9479)@16<=s L0x7fffffffd670,L0x7fffffffd670<s  9479@16,
( -9479)@16<=s L0x7fffffffd672,L0x7fffffffd672<s  9479@16,
( -9479)@16<=s L0x7fffffffd674,L0x7fffffffd674<s  9479@16,
( -9479)@16<=s L0x7fffffffd676,L0x7fffffffd676<s  9479@16,
( -9479)@16<=s L0x7fffffffd678,L0x7fffffffd678<s  9479@16,
( -9479)@16<=s L0x7fffffffd67a,L0x7fffffffd67a<s  9479@16,
( -9479)@16<=s L0x7fffffffd67c,L0x7fffffffd67c<s  9479@16,
( -9479)@16<=s L0x7fffffffd67e,L0x7fffffffd67e<s  9479@16,
( -9479)@16<=s L0x7fffffffd680,L0x7fffffffd680<s  9479@16,
( -9479)@16<=s L0x7fffffffd682,L0x7fffffffd682<s  9479@16,
( -9479)@16<=s L0x7fffffffd684,L0x7fffffffd684<s  9479@16,
( -9479)@16<=s L0x7fffffffd686,L0x7fffffffd686<s  9479@16,
( -9479)@16<=s L0x7fffffffd688,L0x7fffffffd688<s  9479@16,
( -9479)@16<=s L0x7fffffffd68a,L0x7fffffffd68a<s  9479@16,
( -9479)@16<=s L0x7fffffffd68c,L0x7fffffffd68c<s  9479@16,
( -9479)@16<=s L0x7fffffffd68e,L0x7fffffffd68e<s  9479@16,
( -9479)@16<=s L0x7fffffffd690,L0x7fffffffd690<s  9479@16,
( -9479)@16<=s L0x7fffffffd692,L0x7fffffffd692<s  9479@16,
( -9479)@16<=s L0x7fffffffd694,L0x7fffffffd694<s  9479@16,
( -9479)@16<=s L0x7fffffffd696,L0x7fffffffd696<s  9479@16,
( -9479)@16<=s L0x7fffffffd698,L0x7fffffffd698<s  9479@16,
( -9479)@16<=s L0x7fffffffd69a,L0x7fffffffd69a<s  9479@16,
( -9479)@16<=s L0x7fffffffd69c,L0x7fffffffd69c<s  9479@16,
( -9479)@16<=s L0x7fffffffd69e,L0x7fffffffd69e<s  9479@16,
( -9479)@16<=s L0x7fffffffd6a0,L0x7fffffffd6a0<s  9479@16,
( -9479)@16<=s L0x7fffffffd6a2,L0x7fffffffd6a2<s  9479@16,
( -9479)@16<=s L0x7fffffffd6a4,L0x7fffffffd6a4<s  9479@16,
( -9479)@16<=s L0x7fffffffd6a6,L0x7fffffffd6a6<s  9479@16,
( -9479)@16<=s L0x7fffffffd6a8,L0x7fffffffd6a8<s  9479@16,
( -9479)@16<=s L0x7fffffffd6aa,L0x7fffffffd6aa<s  9479@16,
( -9479)@16<=s L0x7fffffffd6ac,L0x7fffffffd6ac<s  9479@16,
( -9479)@16<=s L0x7fffffffd6ae,L0x7fffffffd6ae<s  9479@16,
( -9479)@16<=s L0x7fffffffd6b0,L0x7fffffffd6b0<s  9479@16,
( -9479)@16<=s L0x7fffffffd6b2,L0x7fffffffd6b2<s  9479@16,
( -9479)@16<=s L0x7fffffffd6b4,L0x7fffffffd6b4<s  9479@16,
( -9479)@16<=s L0x7fffffffd6b6,L0x7fffffffd6b6<s  9479@16,
( -9479)@16<=s L0x7fffffffd6b8,L0x7fffffffd6b8<s  9479@16,
( -9479)@16<=s L0x7fffffffd6ba,L0x7fffffffd6ba<s  9479@16,
( -9479)@16<=s L0x7fffffffd6bc,L0x7fffffffd6bc<s  9479@16,
( -9479)@16<=s L0x7fffffffd6be,L0x7fffffffd6be<s  9479@16,
( -9479)@16<=s L0x7fffffffd6c0,L0x7fffffffd6c0<s  9479@16,
( -9479)@16<=s L0x7fffffffd6c2,L0x7fffffffd6c2<s  9479@16,
( -9479)@16<=s L0x7fffffffd6c4,L0x7fffffffd6c4<s  9479@16,
( -9479)@16<=s L0x7fffffffd6c6,L0x7fffffffd6c6<s  9479@16,
( -9479)@16<=s L0x7fffffffd6c8,L0x7fffffffd6c8<s  9479@16,
( -9479)@16<=s L0x7fffffffd6ca,L0x7fffffffd6ca<s  9479@16,
( -9479)@16<=s L0x7fffffffd6cc,L0x7fffffffd6cc<s  9479@16,
( -9479)@16<=s L0x7fffffffd6ce,L0x7fffffffd6ce<s  9479@16,
( -9479)@16<=s L0x7fffffffd6d0,L0x7fffffffd6d0<s  9479@16,
( -9479)@16<=s L0x7fffffffd6d2,L0x7fffffffd6d2<s  9479@16,
( -9479)@16<=s L0x7fffffffd6d4,L0x7fffffffd6d4<s  9479@16,
( -9479)@16<=s L0x7fffffffd6d6,L0x7fffffffd6d6<s  9479@16,
( -9479)@16<=s L0x7fffffffd6d8,L0x7fffffffd6d8<s  9479@16,
( -9474)@16<=s L0x7fffffffd6da,L0x7fffffffd6da<s  9474@16,
( -9474)@16<=s L0x7fffffffd6dc,L0x7fffffffd6dc<s  9474@16,
( -9474)@16<=s L0x7fffffffd6de,L0x7fffffffd6de<s  9474@16
] prove with [ cuts [ 0 ] ];



(* vmovdqa 0x300(%rdi),%ymm4                       #! EA = L0x7fffffffd5e0; Value = 0x0000000100000000; PC = 0x5555555584d7 *)
mov ymm4_0 L0x7fffffffd5e0;
mov ymm4_1 L0x7fffffffd5e2;
mov ymm4_2 L0x7fffffffd5e4;
mov ymm4_3 L0x7fffffffd5e6;
mov ymm4_4 L0x7fffffffd5e8;
mov ymm4_5 L0x7fffffffd5ea;
mov ymm4_6 L0x7fffffffd5ec;
mov ymm4_7 L0x7fffffffd5ee;
mov ymm4_8 L0x7fffffffd5f0;
mov ymm4_9 L0x7fffffffd5f2;
mov ymm4_a L0x7fffffffd5f4;
mov ymm4_b L0x7fffffffd5f6;
mov ymm4_c L0x7fffffffd5f8;
mov ymm4_d L0x7fffffffd5fa;
mov ymm4_e L0x7fffffffd5fc;
mov ymm4_f L0x7fffffffd5fe;
(* vmovdqa 0x320(%rdi),%ymm5                       #! EA = L0x7fffffffd600; Value = 0x0000000000000000; PC = 0x5555555584df *)
mov ymm5_0 L0x7fffffffd600;
mov ymm5_1 L0x7fffffffd602;
mov ymm5_2 L0x7fffffffd604;
mov ymm5_3 L0x7fffffffd606;
mov ymm5_4 L0x7fffffffd608;
mov ymm5_5 L0x7fffffffd60a;
mov ymm5_6 L0x7fffffffd60c;
mov ymm5_7 L0x7fffffffd60e;
mov ymm5_8 L0x7fffffffd610;
mov ymm5_9 L0x7fffffffd612;
mov ymm5_a L0x7fffffffd614;
mov ymm5_b L0x7fffffffd616;
mov ymm5_c L0x7fffffffd618;
mov ymm5_d L0x7fffffffd61a;
mov ymm5_e L0x7fffffffd61c;
mov ymm5_f L0x7fffffffd61e;
(* vmovdqa 0x340(%rdi),%ymm6                       #! EA = L0x7fffffffd620; Value = 0x0000000000000000; PC = 0x5555555584e7 *)
mov ymm6_0 L0x7fffffffd620;
mov ymm6_1 L0x7fffffffd622;
mov ymm6_2 L0x7fffffffd624;
mov ymm6_3 L0x7fffffffd626;
mov ymm6_4 L0x7fffffffd628;
mov ymm6_5 L0x7fffffffd62a;
mov ymm6_6 L0x7fffffffd62c;
mov ymm6_7 L0x7fffffffd62e;
mov ymm6_8 L0x7fffffffd630;
mov ymm6_9 L0x7fffffffd632;
mov ymm6_a L0x7fffffffd634;
mov ymm6_b L0x7fffffffd636;
mov ymm6_c L0x7fffffffd638;
mov ymm6_d L0x7fffffffd63a;
mov ymm6_e L0x7fffffffd63c;
mov ymm6_f L0x7fffffffd63e;
(* vmovdqa 0x360(%rdi),%ymm7                       #! EA = L0x7fffffffd640; Value = 0x0000000000000000; PC = 0x5555555584ef *)
mov ymm7_0 L0x7fffffffd640;
mov ymm7_1 L0x7fffffffd642;
mov ymm7_2 L0x7fffffffd644;
mov ymm7_3 L0x7fffffffd646;
mov ymm7_4 L0x7fffffffd648;
mov ymm7_5 L0x7fffffffd64a;
mov ymm7_6 L0x7fffffffd64c;
mov ymm7_7 L0x7fffffffd64e;
mov ymm7_8 L0x7fffffffd650;
mov ymm7_9 L0x7fffffffd652;
mov ymm7_a L0x7fffffffd654;
mov ymm7_b L0x7fffffffd656;
mov ymm7_c L0x7fffffffd658;
mov ymm7_d L0x7fffffffd65a;
mov ymm7_e L0x7fffffffd65c;
mov ymm7_f L0x7fffffffd65e;
(* vmovdqa 0x380(%rdi),%ymm8                       #! EA = L0x7fffffffd660; Value = 0x0000000000000000; PC = 0x5555555584f7 *)
mov ymm8_0 L0x7fffffffd660;
mov ymm8_1 L0x7fffffffd662;
mov ymm8_2 L0x7fffffffd664;
mov ymm8_3 L0x7fffffffd666;
mov ymm8_4 L0x7fffffffd668;
mov ymm8_5 L0x7fffffffd66a;
mov ymm8_6 L0x7fffffffd66c;
mov ymm8_7 L0x7fffffffd66e;
mov ymm8_8 L0x7fffffffd670;
mov ymm8_9 L0x7fffffffd672;
mov ymm8_a L0x7fffffffd674;
mov ymm8_b L0x7fffffffd676;
mov ymm8_c L0x7fffffffd678;
mov ymm8_d L0x7fffffffd67a;
mov ymm8_e L0x7fffffffd67c;
mov ymm8_f L0x7fffffffd67e;
(* vmovdqa 0x3a0(%rdi),%ymm9                       #! EA = L0x7fffffffd680; Value = 0x0000000000000000; PC = 0x5555555584ff *)
mov ymm9_0 L0x7fffffffd680;
mov ymm9_1 L0x7fffffffd682;
mov ymm9_2 L0x7fffffffd684;
mov ymm9_3 L0x7fffffffd686;
mov ymm9_4 L0x7fffffffd688;
mov ymm9_5 L0x7fffffffd68a;
mov ymm9_6 L0x7fffffffd68c;
mov ymm9_7 L0x7fffffffd68e;
mov ymm9_8 L0x7fffffffd690;
mov ymm9_9 L0x7fffffffd692;
mov ymm9_a L0x7fffffffd694;
mov ymm9_b L0x7fffffffd696;
mov ymm9_c L0x7fffffffd698;
mov ymm9_d L0x7fffffffd69a;
mov ymm9_e L0x7fffffffd69c;
mov ymm9_f L0x7fffffffd69e;
(* vmovdqa 0x3c0(%rdi),%ymm10                      #! EA = L0x7fffffffd6a0; Value = 0x0000000000000000; PC = 0x555555558507 *)
mov ymm10_0 L0x7fffffffd6a0;
mov ymm10_1 L0x7fffffffd6a2;
mov ymm10_2 L0x7fffffffd6a4;
mov ymm10_3 L0x7fffffffd6a6;
mov ymm10_4 L0x7fffffffd6a8;
mov ymm10_5 L0x7fffffffd6aa;
mov ymm10_6 L0x7fffffffd6ac;
mov ymm10_7 L0x7fffffffd6ae;
mov ymm10_8 L0x7fffffffd6b0;
mov ymm10_9 L0x7fffffffd6b2;
mov ymm10_a L0x7fffffffd6b4;
mov ymm10_b L0x7fffffffd6b6;
mov ymm10_c L0x7fffffffd6b8;
mov ymm10_d L0x7fffffffd6ba;
mov ymm10_e L0x7fffffffd6bc;
mov ymm10_f L0x7fffffffd6be;
(* vmovdqa 0x3e0(%rdi),%ymm11                      #! EA = L0x7fffffffd6c0; Value = 0x0000000000000000; PC = 0x55555555850f *)
mov ymm11_0 L0x7fffffffd6c0;
mov ymm11_1 L0x7fffffffd6c2;
mov ymm11_2 L0x7fffffffd6c4;
mov ymm11_3 L0x7fffffffd6c6;
mov ymm11_4 L0x7fffffffd6c8;
mov ymm11_5 L0x7fffffffd6ca;
mov ymm11_6 L0x7fffffffd6cc;
mov ymm11_7 L0x7fffffffd6ce;
mov ymm11_8 L0x7fffffffd6d0;
mov ymm11_9 L0x7fffffffd6d2;
mov ymm11_a L0x7fffffffd6d4;
mov ymm11_b L0x7fffffffd6d6;
mov ymm11_c L0x7fffffffd6d8;
mov ymm11_d L0x7fffffffd6da;
mov ymm11_e L0x7fffffffd6dc;
mov ymm11_f L0x7fffffffd6de;
(* vpbroadcastw 0x106(%rdx),%ymm1                  #! EA = L0x555555561226; Value = 0x6f65ad9a276d0198; PC = 0x555555558517 *)
mov ymm1_0 L0x555555561226;
mov ymm1_1 L0x555555561226;
mov ymm1_2 L0x555555561226;
mov ymm1_3 L0x555555561226;
mov ymm1_4 L0x555555561226;
mov ymm1_5 L0x555555561226;
mov ymm1_6 L0x555555561226;
mov ymm1_7 L0x555555561226;
mov ymm1_8 L0x555555561226;
mov ymm1_9 L0x555555561226;
mov ymm1_a L0x555555561226;
mov ymm1_b L0x555555561226;
mov ymm1_c L0x555555561226;
mov ymm1_d L0x555555561226;
mov ymm1_e L0x555555561226;
mov ymm1_f L0x555555561226;
(* vpbroadcastw 0x306(%rdx),%ymm2                  #! EA = L0x555555561426; Value = 0x0165f19a096df198; PC = 0x555555558520 *)
mov ymm2_0 L0x555555561426;
mov ymm2_1 L0x555555561426;
mov ymm2_2 L0x555555561426;
mov ymm2_3 L0x555555561426;
mov ymm2_4 L0x555555561426;
mov ymm2_5 L0x555555561426;
mov ymm2_6 L0x555555561426;
mov ymm2_7 L0x555555561426;
mov ymm2_8 L0x555555561426;
mov ymm2_9 L0x555555561426;
mov ymm2_a L0x555555561426;
mov ymm2_b L0x555555561426;
mov ymm2_c L0x555555561426;
mov ymm2_d L0x555555561426;
mov ymm2_e L0x555555561426;
mov ymm2_f L0x555555561426;
(* vpmullw %ymm1,%ymm8,%ymm3                       #! PC = 0x555555558529 *)
smull mulHymm8_0 mulL_0 ymm1_0 ymm8_0;
smull mulHymm8_1 mulL_1 ymm1_1 ymm8_1;
smull mulHymm8_2 mulL_2 ymm1_2 ymm8_2;
smull mulHymm8_3 mulL_3 ymm1_3 ymm8_3;
smull mulHymm8_4 mulL_4 ymm1_4 ymm8_4;
smull mulHymm8_5 mulL_5 ymm1_5 ymm8_5;
smull mulHymm8_6 mulL_6 ymm1_6 ymm8_6;
smull mulHymm8_7 mulL_7 ymm1_7 ymm8_7;
smull mulHymm8_8 mulL_8 ymm1_8 ymm8_8;
smull mulHymm8_9 mulL_9 ymm1_9 ymm8_9;
smull mulHymm8_a mulL_a ymm1_a ymm8_a;
smull mulHymm8_b mulL_b ymm1_b ymm8_b;
smull mulHymm8_c mulL_c ymm1_c ymm8_c;
smull mulHymm8_d mulL_d ymm1_d ymm8_d;
smull mulHymm8_e mulL_e ymm1_e ymm8_e;
smull mulHymm8_f mulL_f ymm1_f ymm8_f;
cast ymm3_0@sint16 mulL_0;
cast ymm3_1@sint16 mulL_1;
cast ymm3_2@sint16 mulL_2;
cast ymm3_3@sint16 mulL_3;
cast ymm3_4@sint16 mulL_4;
cast ymm3_5@sint16 mulL_5;
cast ymm3_6@sint16 mulL_6;
cast ymm3_7@sint16 mulL_7;
cast ymm3_8@sint16 mulL_8;
cast ymm3_9@sint16 mulL_9;
cast ymm3_a@sint16 mulL_a;
cast ymm3_b@sint16 mulL_b;
cast ymm3_c@sint16 mulL_c;
cast ymm3_d@sint16 mulL_d;
cast ymm3_e@sint16 mulL_e;
cast ymm3_f@sint16 mulL_f;
(* vpmulhw %ymm2,%ymm8,%ymm8                       #! PC = 0x55555555852d *)
smull mulH_0 mulLymm8_0 ymm8_0 ymm2_0;
smull mulH_1 mulLymm8_1 ymm8_1 ymm2_1;
smull mulH_2 mulLymm8_2 ymm8_2 ymm2_2;
smull mulH_3 mulLymm8_3 ymm8_3 ymm2_3;
smull mulH_4 mulLymm8_4 ymm8_4 ymm2_4;
smull mulH_5 mulLymm8_5 ymm8_5 ymm2_5;
smull mulH_6 mulLymm8_6 ymm8_6 ymm2_6;
smull mulH_7 mulLymm8_7 ymm8_7 ymm2_7;
smull mulH_8 mulLymm8_8 ymm8_8 ymm2_8;
smull mulH_9 mulLymm8_9 ymm8_9 ymm2_9;
smull mulH_a mulLymm8_a ymm8_a ymm2_a;
smull mulH_b mulLymm8_b ymm8_b ymm2_b;
smull mulH_c mulLymm8_c ymm8_c ymm2_c;
smull mulH_d mulLymm8_d ymm8_d ymm2_d;
smull mulH_e mulLymm8_e ymm8_e ymm2_e;
smull mulH_f mulLymm8_f ymm8_f ymm2_f;
mov ymm8_0 mulH_0;
mov ymm8_1 mulH_1;
mov ymm8_2 mulH_2;
mov ymm8_3 mulH_3;
mov ymm8_4 mulH_4;
mov ymm8_5 mulH_5;
mov ymm8_6 mulH_6;
mov ymm8_7 mulH_7;
mov ymm8_8 mulH_8;
mov ymm8_9 mulH_9;
mov ymm8_a mulH_a;
mov ymm8_b mulH_b;
mov ymm8_c mulH_c;
mov ymm8_d mulH_d;
mov ymm8_e mulH_e;
mov ymm8_f mulH_f;
(* vpmulhw %ymm0,%ymm3,%ymm3                       #! PC = 0x555555558531 *)
smull mulH_0 red_0 ymm3_0 ymm0_0;
assert true && red_0 = mulLymm8_0;
assume red_0 = mulLymm8_0 && true;
smull mulH_1 red_1 ymm3_1 ymm0_1;
assert true && red_1 = mulLymm8_1;
assume red_1 = mulLymm8_1 && true;
smull mulH_2 red_2 ymm3_2 ymm0_2;
assert true && red_2 = mulLymm8_2;
assume red_2 = mulLymm8_2 && true;
smull mulH_3 red_3 ymm3_3 ymm0_3;
assert true && red_3 = mulLymm8_3;
assume red_3 = mulLymm8_3 && true;
smull mulH_4 red_4 ymm3_4 ymm0_4;
assert true && red_4 = mulLymm8_4;
assume red_4 = mulLymm8_4 && true;
smull mulH_5 red_5 ymm3_5 ymm0_5;
assert true && red_5 = mulLymm8_5;
assume red_5 = mulLymm8_5 && true;
smull mulH_6 red_6 ymm3_6 ymm0_6;
assert true && red_6 = mulLymm8_6;
assume red_6 = mulLymm8_6 && true;
smull mulH_7 red_7 ymm3_7 ymm0_7;
assert true && red_7 = mulLymm8_7;
assume red_7 = mulLymm8_7 && true;
smull mulH_8 red_8 ymm3_8 ymm0_8;
assert true && red_8 = mulLymm8_8;
assume red_8 = mulLymm8_8 && true;
smull mulH_9 red_9 ymm3_9 ymm0_9;
assert true && red_9 = mulLymm8_9;
assume red_9 = mulLymm8_9 && true;
smull mulH_a red_a ymm3_a ymm0_a;
assert true && red_a = mulLymm8_a;
assume red_a = mulLymm8_a && true;
smull mulH_b red_b ymm3_b ymm0_b;
assert true && red_b = mulLymm8_b;
assume red_b = mulLymm8_b && true;
smull mulH_c red_c ymm3_c ymm0_c;
assert true && red_c = mulLymm8_c;
assume red_c = mulLymm8_c && true;
smull mulH_d red_d ymm3_d ymm0_d;
assert true && red_d = mulLymm8_d;
assume red_d = mulLymm8_d && true;
smull mulH_e red_e ymm3_e ymm0_e;
assert true && red_e = mulLymm8_e;
assume red_e = mulLymm8_e && true;
smull mulH_f red_f ymm3_f ymm0_f;
assert true && red_f = mulLymm8_f;
assume red_f = mulLymm8_f && true;
mov ymm3_0 mulH_0;
mov ymm3_1 mulH_1;
mov ymm3_2 mulH_2;
mov ymm3_3 mulH_3;
mov ymm3_4 mulH_4;
mov ymm3_5 mulH_5;
mov ymm3_6 mulH_6;
mov ymm3_7 mulH_7;
mov ymm3_8 mulH_8;
mov ymm3_9 mulH_9;
mov ymm3_a mulH_a;
mov ymm3_b mulH_b;
mov ymm3_c mulH_c;
mov ymm3_d mulH_d;
mov ymm3_e mulH_e;
mov ymm3_f mulH_f;
(* vpsubw %ymm3,%ymm8,%ymm8                        #! PC = 0x555555558535 *)
sub ymm8_0 ymm8_0 ymm3_0;
sub ymm8_1 ymm8_1 ymm3_1;
sub ymm8_2 ymm8_2 ymm3_2;
sub ymm8_3 ymm8_3 ymm3_3;
sub ymm8_4 ymm8_4 ymm3_4;
sub ymm8_5 ymm8_5 ymm3_5;
sub ymm8_6 ymm8_6 ymm3_6;
sub ymm8_7 ymm8_7 ymm3_7;
sub ymm8_8 ymm8_8 ymm3_8;
sub ymm8_9 ymm8_9 ymm3_9;
sub ymm8_a ymm8_a ymm3_a;
sub ymm8_b ymm8_b ymm3_b;
sub ymm8_c ymm8_c ymm3_c;
sub ymm8_d ymm8_d ymm3_d;
sub ymm8_e ymm8_e ymm3_e;
sub ymm8_f ymm8_f ymm3_f;
(* vpmullw %ymm1,%ymm9,%ymm3                       #! PC = 0x555555558539 *)
smull mulHymm9_0 mulL_0 ymm1_0 ymm9_0;
smull mulHymm9_1 mulL_1 ymm1_1 ymm9_1;
smull mulHymm9_2 mulL_2 ymm1_2 ymm9_2;
smull mulHymm9_3 mulL_3 ymm1_3 ymm9_3;
smull mulHymm9_4 mulL_4 ymm1_4 ymm9_4;
smull mulHymm9_5 mulL_5 ymm1_5 ymm9_5;
smull mulHymm9_6 mulL_6 ymm1_6 ymm9_6;
smull mulHymm9_7 mulL_7 ymm1_7 ymm9_7;
smull mulHymm9_8 mulL_8 ymm1_8 ymm9_8;
smull mulHymm9_9 mulL_9 ymm1_9 ymm9_9;
smull mulHymm9_a mulL_a ymm1_a ymm9_a;
smull mulHymm9_b mulL_b ymm1_b ymm9_b;
smull mulHymm9_c mulL_c ymm1_c ymm9_c;
smull mulHymm9_d mulL_d ymm1_d ymm9_d;
smull mulHymm9_e mulL_e ymm1_e ymm9_e;
smull mulHymm9_f mulL_f ymm1_f ymm9_f;
cast ymm3_0@sint16 mulL_0;
cast ymm3_1@sint16 mulL_1;
cast ymm3_2@sint16 mulL_2;
cast ymm3_3@sint16 mulL_3;
cast ymm3_4@sint16 mulL_4;
cast ymm3_5@sint16 mulL_5;
cast ymm3_6@sint16 mulL_6;
cast ymm3_7@sint16 mulL_7;
cast ymm3_8@sint16 mulL_8;
cast ymm3_9@sint16 mulL_9;
cast ymm3_a@sint16 mulL_a;
cast ymm3_b@sint16 mulL_b;
cast ymm3_c@sint16 mulL_c;
cast ymm3_d@sint16 mulL_d;
cast ymm3_e@sint16 mulL_e;
cast ymm3_f@sint16 mulL_f;
(* vpmulhw %ymm2,%ymm9,%ymm9                       #! PC = 0x55555555853d *)
smull mulH_0 mulLymm9_0 ymm9_0 ymm2_0;
smull mulH_1 mulLymm9_1 ymm9_1 ymm2_1;
smull mulH_2 mulLymm9_2 ymm9_2 ymm2_2;
smull mulH_3 mulLymm9_3 ymm9_3 ymm2_3;
smull mulH_4 mulLymm9_4 ymm9_4 ymm2_4;
smull mulH_5 mulLymm9_5 ymm9_5 ymm2_5;
smull mulH_6 mulLymm9_6 ymm9_6 ymm2_6;
smull mulH_7 mulLymm9_7 ymm9_7 ymm2_7;
smull mulH_8 mulLymm9_8 ymm9_8 ymm2_8;
smull mulH_9 mulLymm9_9 ymm9_9 ymm2_9;
smull mulH_a mulLymm9_a ymm9_a ymm2_a;
smull mulH_b mulLymm9_b ymm9_b ymm2_b;
smull mulH_c mulLymm9_c ymm9_c ymm2_c;
smull mulH_d mulLymm9_d ymm9_d ymm2_d;
smull mulH_e mulLymm9_e ymm9_e ymm2_e;
smull mulH_f mulLymm9_f ymm9_f ymm2_f;
mov ymm9_0 mulH_0;
mov ymm9_1 mulH_1;
mov ymm9_2 mulH_2;
mov ymm9_3 mulH_3;
mov ymm9_4 mulH_4;
mov ymm9_5 mulH_5;
mov ymm9_6 mulH_6;
mov ymm9_7 mulH_7;
mov ymm9_8 mulH_8;
mov ymm9_9 mulH_9;
mov ymm9_a mulH_a;
mov ymm9_b mulH_b;
mov ymm9_c mulH_c;
mov ymm9_d mulH_d;
mov ymm9_e mulH_e;
mov ymm9_f mulH_f;
(* vpmulhw %ymm0,%ymm3,%ymm3                       #! PC = 0x555555558541 *)
smull mulH_0 red_0 ymm3_0 ymm0_0;
assert true && red_0 = mulLymm9_0;
assume red_0 = mulLymm9_0 && true;
smull mulH_1 red_1 ymm3_1 ymm0_1;
assert true && red_1 = mulLymm9_1;
assume red_1 = mulLymm9_1 && true;
smull mulH_2 red_2 ymm3_2 ymm0_2;
assert true && red_2 = mulLymm9_2;
assume red_2 = mulLymm9_2 && true;
smull mulH_3 red_3 ymm3_3 ymm0_3;
assert true && red_3 = mulLymm9_3;
assume red_3 = mulLymm9_3 && true;
smull mulH_4 red_4 ymm3_4 ymm0_4;
assert true && red_4 = mulLymm9_4;
assume red_4 = mulLymm9_4 && true;
smull mulH_5 red_5 ymm3_5 ymm0_5;
assert true && red_5 = mulLymm9_5;
assume red_5 = mulLymm9_5 && true;
smull mulH_6 red_6 ymm3_6 ymm0_6;
assert true && red_6 = mulLymm9_6;
assume red_6 = mulLymm9_6 && true;
smull mulH_7 red_7 ymm3_7 ymm0_7;
assert true && red_7 = mulLymm9_7;
assume red_7 = mulLymm9_7 && true;
smull mulH_8 red_8 ymm3_8 ymm0_8;
assert true && red_8 = mulLymm9_8;
assume red_8 = mulLymm9_8 && true;
smull mulH_9 red_9 ymm3_9 ymm0_9;
assert true && red_9 = mulLymm9_9;
assume red_9 = mulLymm9_9 && true;
smull mulH_a red_a ymm3_a ymm0_a;
assert true && red_a = mulLymm9_a;
assume red_a = mulLymm9_a && true;
smull mulH_b red_b ymm3_b ymm0_b;
assert true && red_b = mulLymm9_b;
assume red_b = mulLymm9_b && true;
smull mulH_c red_c ymm3_c ymm0_c;
assert true && red_c = mulLymm9_c;
assume red_c = mulLymm9_c && true;
smull mulH_d red_d ymm3_d ymm0_d;
assert true && red_d = mulLymm9_d;
assume red_d = mulLymm9_d && true;
smull mulH_e red_e ymm3_e ymm0_e;
assert true && red_e = mulLymm9_e;
assume red_e = mulLymm9_e && true;
smull mulH_f red_f ymm3_f ymm0_f;
assert true && red_f = mulLymm9_f;
assume red_f = mulLymm9_f && true;
mov ymm3_0 mulH_0;
mov ymm3_1 mulH_1;
mov ymm3_2 mulH_2;
mov ymm3_3 mulH_3;
mov ymm3_4 mulH_4;
mov ymm3_5 mulH_5;
mov ymm3_6 mulH_6;
mov ymm3_7 mulH_7;
mov ymm3_8 mulH_8;
mov ymm3_9 mulH_9;
mov ymm3_a mulH_a;
mov ymm3_b mulH_b;
mov ymm3_c mulH_c;
mov ymm3_d mulH_d;
mov ymm3_e mulH_e;
mov ymm3_f mulH_f;
(* vpsubw %ymm3,%ymm9,%ymm9                        #! PC = 0x555555558545 *)
sub ymm9_0 ymm9_0 ymm3_0;
sub ymm9_1 ymm9_1 ymm3_1;
sub ymm9_2 ymm9_2 ymm3_2;
sub ymm9_3 ymm9_3 ymm3_3;
sub ymm9_4 ymm9_4 ymm3_4;
sub ymm9_5 ymm9_5 ymm3_5;
sub ymm9_6 ymm9_6 ymm3_6;
sub ymm9_7 ymm9_7 ymm3_7;
sub ymm9_8 ymm9_8 ymm3_8;
sub ymm9_9 ymm9_9 ymm3_9;
sub ymm9_a ymm9_a ymm3_a;
sub ymm9_b ymm9_b ymm3_b;
sub ymm9_c ymm9_c ymm3_c;
sub ymm9_d ymm9_d ymm3_d;
sub ymm9_e ymm9_e ymm3_e;
sub ymm9_f ymm9_f ymm3_f;
(* vpmullw %ymm1,%ymm10,%ymm3                      #! PC = 0x555555558549 *)
smull mulHymm10_0 mulL_0 ymm1_0 ymm10_0;
smull mulHymm10_1 mulL_1 ymm1_1 ymm10_1;
smull mulHymm10_2 mulL_2 ymm1_2 ymm10_2;
smull mulHymm10_3 mulL_3 ymm1_3 ymm10_3;
smull mulHymm10_4 mulL_4 ymm1_4 ymm10_4;
smull mulHymm10_5 mulL_5 ymm1_5 ymm10_5;
smull mulHymm10_6 mulL_6 ymm1_6 ymm10_6;
smull mulHymm10_7 mulL_7 ymm1_7 ymm10_7;
smull mulHymm10_8 mulL_8 ymm1_8 ymm10_8;
smull mulHymm10_9 mulL_9 ymm1_9 ymm10_9;
smull mulHymm10_a mulL_a ymm1_a ymm10_a;
smull mulHymm10_b mulL_b ymm1_b ymm10_b;
smull mulHymm10_c mulL_c ymm1_c ymm10_c;
smull mulHymm10_d mulL_d ymm1_d ymm10_d;
smull mulHymm10_e mulL_e ymm1_e ymm10_e;
smull mulHymm10_f mulL_f ymm1_f ymm10_f;
cast ymm3_0@sint16 mulL_0;
cast ymm3_1@sint16 mulL_1;
cast ymm3_2@sint16 mulL_2;
cast ymm3_3@sint16 mulL_3;
cast ymm3_4@sint16 mulL_4;
cast ymm3_5@sint16 mulL_5;
cast ymm3_6@sint16 mulL_6;
cast ymm3_7@sint16 mulL_7;
cast ymm3_8@sint16 mulL_8;
cast ymm3_9@sint16 mulL_9;
cast ymm3_a@sint16 mulL_a;
cast ymm3_b@sint16 mulL_b;
cast ymm3_c@sint16 mulL_c;
cast ymm3_d@sint16 mulL_d;
cast ymm3_e@sint16 mulL_e;
cast ymm3_f@sint16 mulL_f;
(* vpmulhw %ymm2,%ymm10,%ymm10                     #! PC = 0x55555555854d *)
smull mulH_0 mulLymm10_0 ymm10_0 ymm2_0;
smull mulH_1 mulLymm10_1 ymm10_1 ymm2_1;
smull mulH_2 mulLymm10_2 ymm10_2 ymm2_2;
smull mulH_3 mulLymm10_3 ymm10_3 ymm2_3;
smull mulH_4 mulLymm10_4 ymm10_4 ymm2_4;
smull mulH_5 mulLymm10_5 ymm10_5 ymm2_5;
smull mulH_6 mulLymm10_6 ymm10_6 ymm2_6;
smull mulH_7 mulLymm10_7 ymm10_7 ymm2_7;
smull mulH_8 mulLymm10_8 ymm10_8 ymm2_8;
smull mulH_9 mulLymm10_9 ymm10_9 ymm2_9;
smull mulH_a mulLymm10_a ymm10_a ymm2_a;
smull mulH_b mulLymm10_b ymm10_b ymm2_b;
smull mulH_c mulLymm10_c ymm10_c ymm2_c;
smull mulH_d mulLymm10_d ymm10_d ymm2_d;
smull mulH_e mulLymm10_e ymm10_e ymm2_e;
smull mulH_f mulLymm10_f ymm10_f ymm2_f;
mov ymm10_0 mulH_0;
mov ymm10_1 mulH_1;
mov ymm10_2 mulH_2;
mov ymm10_3 mulH_3;
mov ymm10_4 mulH_4;
mov ymm10_5 mulH_5;
mov ymm10_6 mulH_6;
mov ymm10_7 mulH_7;
mov ymm10_8 mulH_8;
mov ymm10_9 mulH_9;
mov ymm10_a mulH_a;
mov ymm10_b mulH_b;
mov ymm10_c mulH_c;
mov ymm10_d mulH_d;
mov ymm10_e mulH_e;
mov ymm10_f mulH_f;
(* vpmulhw %ymm0,%ymm3,%ymm3                       #! PC = 0x555555558551 *)
smull mulH_0 red_0 ymm3_0 ymm0_0;
assert true && red_0 = mulLymm10_0;
assume red_0 = mulLymm10_0 && true;
smull mulH_1 red_1 ymm3_1 ymm0_1;
assert true && red_1 = mulLymm10_1;
assume red_1 = mulLymm10_1 && true;
smull mulH_2 red_2 ymm3_2 ymm0_2;
assert true && red_2 = mulLymm10_2;
assume red_2 = mulLymm10_2 && true;
smull mulH_3 red_3 ymm3_3 ymm0_3;
assert true && red_3 = mulLymm10_3;
assume red_3 = mulLymm10_3 && true;
smull mulH_4 red_4 ymm3_4 ymm0_4;
assert true && red_4 = mulLymm10_4;
assume red_4 = mulLymm10_4 && true;
smull mulH_5 red_5 ymm3_5 ymm0_5;
assert true && red_5 = mulLymm10_5;
assume red_5 = mulLymm10_5 && true;
smull mulH_6 red_6 ymm3_6 ymm0_6;
assert true && red_6 = mulLymm10_6;
assume red_6 = mulLymm10_6 && true;
smull mulH_7 red_7 ymm3_7 ymm0_7;
assert true && red_7 = mulLymm10_7;
assume red_7 = mulLymm10_7 && true;
smull mulH_8 red_8 ymm3_8 ymm0_8;
assert true && red_8 = mulLymm10_8;
assume red_8 = mulLymm10_8 && true;
smull mulH_9 red_9 ymm3_9 ymm0_9;
assert true && red_9 = mulLymm10_9;
assume red_9 = mulLymm10_9 && true;
smull mulH_a red_a ymm3_a ymm0_a;
assert true && red_a = mulLymm10_a;
assume red_a = mulLymm10_a && true;
smull mulH_b red_b ymm3_b ymm0_b;
assert true && red_b = mulLymm10_b;
assume red_b = mulLymm10_b && true;
smull mulH_c red_c ymm3_c ymm0_c;
assert true && red_c = mulLymm10_c;
assume red_c = mulLymm10_c && true;
smull mulH_d red_d ymm3_d ymm0_d;
assert true && red_d = mulLymm10_d;
assume red_d = mulLymm10_d && true;
smull mulH_e red_e ymm3_e ymm0_e;
assert true && red_e = mulLymm10_e;
assume red_e = mulLymm10_e && true;
smull mulH_f red_f ymm3_f ymm0_f;
assert true && red_f = mulLymm10_f;
assume red_f = mulLymm10_f && true;
mov ymm3_0 mulH_0;
mov ymm3_1 mulH_1;
mov ymm3_2 mulH_2;
mov ymm3_3 mulH_3;
mov ymm3_4 mulH_4;
mov ymm3_5 mulH_5;
mov ymm3_6 mulH_6;
mov ymm3_7 mulH_7;
mov ymm3_8 mulH_8;
mov ymm3_9 mulH_9;
mov ymm3_a mulH_a;
mov ymm3_b mulH_b;
mov ymm3_c mulH_c;
mov ymm3_d mulH_d;
mov ymm3_e mulH_e;
mov ymm3_f mulH_f;
(* vpsubw %ymm3,%ymm10,%ymm10                      #! PC = 0x555555558555 *)
sub ymm10_0 ymm10_0 ymm3_0;
sub ymm10_1 ymm10_1 ymm3_1;
sub ymm10_2 ymm10_2 ymm3_2;
sub ymm10_3 ymm10_3 ymm3_3;
sub ymm10_4 ymm10_4 ymm3_4;
sub ymm10_5 ymm10_5 ymm3_5;
sub ymm10_6 ymm10_6 ymm3_6;
sub ymm10_7 ymm10_7 ymm3_7;
sub ymm10_8 ymm10_8 ymm3_8;
sub ymm10_9 ymm10_9 ymm3_9;
sub ymm10_a ymm10_a ymm3_a;
sub ymm10_b ymm10_b ymm3_b;
sub ymm10_c ymm10_c ymm3_c;
sub ymm10_d ymm10_d ymm3_d;
sub ymm10_e ymm10_e ymm3_e;
sub ymm10_f ymm10_f ymm3_f;
(* vpmullw %ymm1,%ymm11,%ymm3                      #! PC = 0x555555558559 *)
smull mulHymm11_0 mulL_0 ymm1_0 ymm11_0;
smull mulHymm11_1 mulL_1 ymm1_1 ymm11_1;
smull mulHymm11_2 mulL_2 ymm1_2 ymm11_2;
smull mulHymm11_3 mulL_3 ymm1_3 ymm11_3;
smull mulHymm11_4 mulL_4 ymm1_4 ymm11_4;
smull mulHymm11_5 mulL_5 ymm1_5 ymm11_5;
smull mulHymm11_6 mulL_6 ymm1_6 ymm11_6;
smull mulHymm11_7 mulL_7 ymm1_7 ymm11_7;
smull mulHymm11_8 mulL_8 ymm1_8 ymm11_8;
smull mulHymm11_9 mulL_9 ymm1_9 ymm11_9;
smull mulHymm11_a mulL_a ymm1_a ymm11_a;
smull mulHymm11_b mulL_b ymm1_b ymm11_b;
smull mulHymm11_c mulL_c ymm1_c ymm11_c;
smull mulHymm11_d mulL_d ymm1_d ymm11_d;
smull mulHymm11_e mulL_e ymm1_e ymm11_e;
smull mulHymm11_f mulL_f ymm1_f ymm11_f;
cast ymm3_0@sint16 mulL_0;
cast ymm3_1@sint16 mulL_1;
cast ymm3_2@sint16 mulL_2;
cast ymm3_3@sint16 mulL_3;
cast ymm3_4@sint16 mulL_4;
cast ymm3_5@sint16 mulL_5;
cast ymm3_6@sint16 mulL_6;
cast ymm3_7@sint16 mulL_7;
cast ymm3_8@sint16 mulL_8;
cast ymm3_9@sint16 mulL_9;
cast ymm3_a@sint16 mulL_a;
cast ymm3_b@sint16 mulL_b;
cast ymm3_c@sint16 mulL_c;
cast ymm3_d@sint16 mulL_d;
cast ymm3_e@sint16 mulL_e;
cast ymm3_f@sint16 mulL_f;
(* vpmulhw %ymm2,%ymm11,%ymm11                     #! PC = 0x55555555855d *)
smull mulH_0 mulLymm11_0 ymm11_0 ymm2_0;
smull mulH_1 mulLymm11_1 ymm11_1 ymm2_1;
smull mulH_2 mulLymm11_2 ymm11_2 ymm2_2;
smull mulH_3 mulLymm11_3 ymm11_3 ymm2_3;
smull mulH_4 mulLymm11_4 ymm11_4 ymm2_4;
smull mulH_5 mulLymm11_5 ymm11_5 ymm2_5;
smull mulH_6 mulLymm11_6 ymm11_6 ymm2_6;
smull mulH_7 mulLymm11_7 ymm11_7 ymm2_7;
smull mulH_8 mulLymm11_8 ymm11_8 ymm2_8;
smull mulH_9 mulLymm11_9 ymm11_9 ymm2_9;
smull mulH_a mulLymm11_a ymm11_a ymm2_a;
smull mulH_b mulLymm11_b ymm11_b ymm2_b;
smull mulH_c mulLymm11_c ymm11_c ymm2_c;
smull mulH_d mulLymm11_d ymm11_d ymm2_d;
smull mulH_e mulLymm11_e ymm11_e ymm2_e;
smull mulH_f mulLymm11_f ymm11_f ymm2_f;
mov ymm11_0 mulH_0;
mov ymm11_1 mulH_1;
mov ymm11_2 mulH_2;
mov ymm11_3 mulH_3;
mov ymm11_4 mulH_4;
mov ymm11_5 mulH_5;
mov ymm11_6 mulH_6;
mov ymm11_7 mulH_7;
mov ymm11_8 mulH_8;
mov ymm11_9 mulH_9;
mov ymm11_a mulH_a;
mov ymm11_b mulH_b;
mov ymm11_c mulH_c;
mov ymm11_d mulH_d;
mov ymm11_e mulH_e;
mov ymm11_f mulH_f;
(* vpmulhw %ymm0,%ymm3,%ymm3                       #! PC = 0x555555558561 *)
smull mulH_0 red_0 ymm3_0 ymm0_0;
assert true && red_0 = mulLymm11_0;
assume red_0 = mulLymm11_0 && true;
smull mulH_1 red_1 ymm3_1 ymm0_1;
assert true && red_1 = mulLymm11_1;
assume red_1 = mulLymm11_1 && true;
smull mulH_2 red_2 ymm3_2 ymm0_2;
assert true && red_2 = mulLymm11_2;
assume red_2 = mulLymm11_2 && true;
smull mulH_3 red_3 ymm3_3 ymm0_3;
assert true && red_3 = mulLymm11_3;
assume red_3 = mulLymm11_3 && true;
smull mulH_4 red_4 ymm3_4 ymm0_4;
assert true && red_4 = mulLymm11_4;
assume red_4 = mulLymm11_4 && true;
smull mulH_5 red_5 ymm3_5 ymm0_5;
assert true && red_5 = mulLymm11_5;
assume red_5 = mulLymm11_5 && true;
smull mulH_6 red_6 ymm3_6 ymm0_6;
assert true && red_6 = mulLymm11_6;
assume red_6 = mulLymm11_6 && true;
smull mulH_7 red_7 ymm3_7 ymm0_7;
assert true && red_7 = mulLymm11_7;
assume red_7 = mulLymm11_7 && true;
smull mulH_8 red_8 ymm3_8 ymm0_8;
assert true && red_8 = mulLymm11_8;
assume red_8 = mulLymm11_8 && true;
smull mulH_9 red_9 ymm3_9 ymm0_9;
assert true && red_9 = mulLymm11_9;
assume red_9 = mulLymm11_9 && true;
smull mulH_a red_a ymm3_a ymm0_a;
assert true && red_a = mulLymm11_a;
assume red_a = mulLymm11_a && true;
smull mulH_b red_b ymm3_b ymm0_b;
assert true && red_b = mulLymm11_b;
assume red_b = mulLymm11_b && true;
smull mulH_c red_c ymm3_c ymm0_c;
assert true && red_c = mulLymm11_c;
assume red_c = mulLymm11_c && true;
smull mulH_d red_d ymm3_d ymm0_d;
assert true && red_d = mulLymm11_d;
assume red_d = mulLymm11_d && true;
smull mulH_e red_e ymm3_e ymm0_e;
assert true && red_e = mulLymm11_e;
assume red_e = mulLymm11_e && true;
smull mulH_f red_f ymm3_f ymm0_f;
assert true && red_f = mulLymm11_f;
assume red_f = mulLymm11_f && true;
mov ymm3_0 mulH_0;
mov ymm3_1 mulH_1;
mov ymm3_2 mulH_2;
mov ymm3_3 mulH_3;
mov ymm3_4 mulH_4;
mov ymm3_5 mulH_5;
mov ymm3_6 mulH_6;
mov ymm3_7 mulH_7;
mov ymm3_8 mulH_8;
mov ymm3_9 mulH_9;
mov ymm3_a mulH_a;
mov ymm3_b mulH_b;
mov ymm3_c mulH_c;
mov ymm3_d mulH_d;
mov ymm3_e mulH_e;
mov ymm3_f mulH_f;
(* vpsubw %ymm3,%ymm11,%ymm11                      #! PC = 0x555555558565 *)
sub ymm11_0 ymm11_0 ymm3_0;
sub ymm11_1 ymm11_1 ymm3_1;
sub ymm11_2 ymm11_2 ymm3_2;
sub ymm11_3 ymm11_3 ymm3_3;
sub ymm11_4 ymm11_4 ymm3_4;
sub ymm11_5 ymm11_5 ymm3_5;
sub ymm11_6 ymm11_6 ymm3_6;
sub ymm11_7 ymm11_7 ymm3_7;
sub ymm11_8 ymm11_8 ymm3_8;
sub ymm11_9 ymm11_9 ymm3_9;
sub ymm11_a ymm11_a ymm3_a;
sub ymm11_b ymm11_b ymm3_b;
sub ymm11_c ymm11_c ymm3_c;
sub ymm11_d ymm11_d ymm3_d;
sub ymm11_e ymm11_e ymm3_e;
sub ymm11_f ymm11_f ymm3_f;
(* vpaddw %ymm8,%ymm4,%ymm3                        #! PC = 0x555555558569 *)
add ymm3_0 ymm4_0 ymm8_0;
add ymm3_1 ymm4_1 ymm8_1;
add ymm3_2 ymm4_2 ymm8_2;
add ymm3_3 ymm4_3 ymm8_3;
add ymm3_4 ymm4_4 ymm8_4;
add ymm3_5 ymm4_5 ymm8_5;
add ymm3_6 ymm4_6 ymm8_6;
add ymm3_7 ymm4_7 ymm8_7;
add ymm3_8 ymm4_8 ymm8_8;
add ymm3_9 ymm4_9 ymm8_9;
add ymm3_a ymm4_a ymm8_a;
add ymm3_b ymm4_b ymm8_b;
add ymm3_c ymm4_c ymm8_c;
add ymm3_d ymm4_d ymm8_d;
add ymm3_e ymm4_e ymm8_e;
add ymm3_f ymm4_f ymm8_f;
(* vpsubw %ymm8,%ymm4,%ymm8                        #! PC = 0x55555555856e *)
sub ymm8_0 ymm4_0 ymm8_0;
sub ymm8_1 ymm4_1 ymm8_1;
sub ymm8_2 ymm4_2 ymm8_2;
sub ymm8_3 ymm4_3 ymm8_3;
sub ymm8_4 ymm4_4 ymm8_4;
sub ymm8_5 ymm4_5 ymm8_5;
sub ymm8_6 ymm4_6 ymm8_6;
sub ymm8_7 ymm4_7 ymm8_7;
sub ymm8_8 ymm4_8 ymm8_8;
sub ymm8_9 ymm4_9 ymm8_9;
sub ymm8_a ymm4_a ymm8_a;
sub ymm8_b ymm4_b ymm8_b;
sub ymm8_c ymm4_c ymm8_c;
sub ymm8_d ymm4_d ymm8_d;
sub ymm8_e ymm4_e ymm8_e;
sub ymm8_f ymm4_f ymm8_f;
(* vpaddw %ymm9,%ymm5,%ymm4                        #! PC = 0x555555558573 *)
add ymm4_0 ymm5_0 ymm9_0;
add ymm4_1 ymm5_1 ymm9_1;
add ymm4_2 ymm5_2 ymm9_2;
add ymm4_3 ymm5_3 ymm9_3;
add ymm4_4 ymm5_4 ymm9_4;
add ymm4_5 ymm5_5 ymm9_5;
add ymm4_6 ymm5_6 ymm9_6;
add ymm4_7 ymm5_7 ymm9_7;
add ymm4_8 ymm5_8 ymm9_8;
add ymm4_9 ymm5_9 ymm9_9;
add ymm4_a ymm5_a ymm9_a;
add ymm4_b ymm5_b ymm9_b;
add ymm4_c ymm5_c ymm9_c;
add ymm4_d ymm5_d ymm9_d;
add ymm4_e ymm5_e ymm9_e;
add ymm4_f ymm5_f ymm9_f;
(* vpsubw %ymm9,%ymm5,%ymm9                        #! PC = 0x555555558578 *)
sub ymm9_0 ymm5_0 ymm9_0;
sub ymm9_1 ymm5_1 ymm9_1;
sub ymm9_2 ymm5_2 ymm9_2;
sub ymm9_3 ymm5_3 ymm9_3;
sub ymm9_4 ymm5_4 ymm9_4;
sub ymm9_5 ymm5_5 ymm9_5;
sub ymm9_6 ymm5_6 ymm9_6;
sub ymm9_7 ymm5_7 ymm9_7;
sub ymm9_8 ymm5_8 ymm9_8;
sub ymm9_9 ymm5_9 ymm9_9;
sub ymm9_a ymm5_a ymm9_a;
sub ymm9_b ymm5_b ymm9_b;
sub ymm9_c ymm5_c ymm9_c;
sub ymm9_d ymm5_d ymm9_d;
sub ymm9_e ymm5_e ymm9_e;
sub ymm9_f ymm5_f ymm9_f;
(* vpaddw %ymm10,%ymm6,%ymm5                       #! PC = 0x55555555857d *)
add ymm5_0 ymm6_0 ymm10_0;
add ymm5_1 ymm6_1 ymm10_1;
add ymm5_2 ymm6_2 ymm10_2;
add ymm5_3 ymm6_3 ymm10_3;
add ymm5_4 ymm6_4 ymm10_4;
add ymm5_5 ymm6_5 ymm10_5;
add ymm5_6 ymm6_6 ymm10_6;
add ymm5_7 ymm6_7 ymm10_7;
add ymm5_8 ymm6_8 ymm10_8;
add ymm5_9 ymm6_9 ymm10_9;
add ymm5_a ymm6_a ymm10_a;
add ymm5_b ymm6_b ymm10_b;
add ymm5_c ymm6_c ymm10_c;
add ymm5_d ymm6_d ymm10_d;
add ymm5_e ymm6_e ymm10_e;
add ymm5_f ymm6_f ymm10_f;
(* vpsubw %ymm10,%ymm6,%ymm10                      #! PC = 0x555555558582 *)
sub ymm10_0 ymm6_0 ymm10_0;
sub ymm10_1 ymm6_1 ymm10_1;
sub ymm10_2 ymm6_2 ymm10_2;
sub ymm10_3 ymm6_3 ymm10_3;
sub ymm10_4 ymm6_4 ymm10_4;
sub ymm10_5 ymm6_5 ymm10_5;
sub ymm10_6 ymm6_6 ymm10_6;
sub ymm10_7 ymm6_7 ymm10_7;
sub ymm10_8 ymm6_8 ymm10_8;
sub ymm10_9 ymm6_9 ymm10_9;
sub ymm10_a ymm6_a ymm10_a;
sub ymm10_b ymm6_b ymm10_b;
sub ymm10_c ymm6_c ymm10_c;
sub ymm10_d ymm6_d ymm10_d;
sub ymm10_e ymm6_e ymm10_e;
sub ymm10_f ymm6_f ymm10_f;
(* vpaddw %ymm11,%ymm7,%ymm6                       #! PC = 0x555555558587 *)
add ymm6_0 ymm7_0 ymm11_0;
add ymm6_1 ymm7_1 ymm11_1;
add ymm6_2 ymm7_2 ymm11_2;
add ymm6_3 ymm7_3 ymm11_3;
add ymm6_4 ymm7_4 ymm11_4;
add ymm6_5 ymm7_5 ymm11_5;
add ymm6_6 ymm7_6 ymm11_6;
add ymm6_7 ymm7_7 ymm11_7;
add ymm6_8 ymm7_8 ymm11_8;
add ymm6_9 ymm7_9 ymm11_9;
add ymm6_a ymm7_a ymm11_a;
add ymm6_b ymm7_b ymm11_b;
add ymm6_c ymm7_c ymm11_c;
add ymm6_d ymm7_d ymm11_d;
add ymm6_e ymm7_e ymm11_e;
add ymm6_f ymm7_f ymm11_f;
(* vpsubw %ymm11,%ymm7,%ymm11                      #! PC = 0x55555555858c *)
sub ymm11_0 ymm7_0 ymm11_0;
sub ymm11_1 ymm7_1 ymm11_1;
sub ymm11_2 ymm7_2 ymm11_2;
sub ymm11_3 ymm7_3 ymm11_3;
sub ymm11_4 ymm7_4 ymm11_4;
sub ymm11_5 ymm7_5 ymm11_5;
sub ymm11_6 ymm7_6 ymm11_6;
sub ymm11_7 ymm7_7 ymm11_7;
sub ymm11_8 ymm7_8 ymm11_8;
sub ymm11_9 ymm7_9 ymm11_9;
sub ymm11_a ymm7_a ymm11_a;
sub ymm11_b ymm7_b ymm11_b;
sub ymm11_c ymm7_c ymm11_c;
sub ymm11_d ymm7_d ymm11_d;
sub ymm11_e ymm7_e ymm11_e;
sub ymm11_f ymm7_f ymm11_f;
(* vpbroadcastw 0x10c(%rdx),%ymm1                  #! EA = L0x55555556122c; Value = 0xc126e487ae886f65; PC = 0x555555558591 *)
mov ymm1_0 L0x55555556122c;
mov ymm1_1 L0x55555556122c;
mov ymm1_2 L0x55555556122c;
mov ymm1_3 L0x55555556122c;
mov ymm1_4 L0x55555556122c;
mov ymm1_5 L0x55555556122c;
mov ymm1_6 L0x55555556122c;
mov ymm1_7 L0x55555556122c;
mov ymm1_8 L0x55555556122c;
mov ymm1_9 L0x55555556122c;
mov ymm1_a L0x55555556122c;
mov ymm1_b L0x55555556122c;
mov ymm1_c L0x55555556122c;
mov ymm1_d L0x55555556122c;
mov ymm1_e L0x55555556122c;
mov ymm1_f L0x55555556122c;
(* vpbroadcastw 0x30c(%rdx),%ymm2                  #! EA = L0x55555556142c; Value = 0xfd260a87fe880165; PC = 0x55555555859a *)
mov ymm2_0 L0x55555556142c;
mov ymm2_1 L0x55555556142c;
mov ymm2_2 L0x55555556142c;
mov ymm2_3 L0x55555556142c;
mov ymm2_4 L0x55555556142c;
mov ymm2_5 L0x55555556142c;
mov ymm2_6 L0x55555556142c;
mov ymm2_7 L0x55555556142c;
mov ymm2_8 L0x55555556142c;
mov ymm2_9 L0x55555556142c;
mov ymm2_a L0x55555556142c;
mov ymm2_b L0x55555556142c;
mov ymm2_c L0x55555556142c;
mov ymm2_d L0x55555556142c;
mov ymm2_e L0x55555556142c;
mov ymm2_f L0x55555556142c;
(* vpmullw %ymm1,%ymm5,%ymm7                       #! PC = 0x5555555585a3 *)
smull mulHymm5_0 mulL_0 ymm1_0 ymm5_0;
smull mulHymm5_1 mulL_1 ymm1_1 ymm5_1;
smull mulHymm5_2 mulL_2 ymm1_2 ymm5_2;
smull mulHymm5_3 mulL_3 ymm1_3 ymm5_3;
smull mulHymm5_4 mulL_4 ymm1_4 ymm5_4;
smull mulHymm5_5 mulL_5 ymm1_5 ymm5_5;
smull mulHymm5_6 mulL_6 ymm1_6 ymm5_6;
smull mulHymm5_7 mulL_7 ymm1_7 ymm5_7;
smull mulHymm5_8 mulL_8 ymm1_8 ymm5_8;
smull mulHymm5_9 mulL_9 ymm1_9 ymm5_9;
smull mulHymm5_a mulL_a ymm1_a ymm5_a;
smull mulHymm5_b mulL_b ymm1_b ymm5_b;
smull mulHymm5_c mulL_c ymm1_c ymm5_c;
smull mulHymm5_d mulL_d ymm1_d ymm5_d;
smull mulHymm5_e mulL_e ymm1_e ymm5_e;
smull mulHymm5_f mulL_f ymm1_f ymm5_f;
cast ymm7_0@sint16 mulL_0;
cast ymm7_1@sint16 mulL_1;
cast ymm7_2@sint16 mulL_2;
cast ymm7_3@sint16 mulL_3;
cast ymm7_4@sint16 mulL_4;
cast ymm7_5@sint16 mulL_5;
cast ymm7_6@sint16 mulL_6;
cast ymm7_7@sint16 mulL_7;
cast ymm7_8@sint16 mulL_8;
cast ymm7_9@sint16 mulL_9;
cast ymm7_a@sint16 mulL_a;
cast ymm7_b@sint16 mulL_b;
cast ymm7_c@sint16 mulL_c;
cast ymm7_d@sint16 mulL_d;
cast ymm7_e@sint16 mulL_e;
cast ymm7_f@sint16 mulL_f;
(* vpmulhw %ymm2,%ymm5,%ymm5                       #! PC = 0x5555555585a7 *)
smull mulH_0 mulLymm5_0 ymm5_0 ymm2_0;
smull mulH_1 mulLymm5_1 ymm5_1 ymm2_1;
smull mulH_2 mulLymm5_2 ymm5_2 ymm2_2;
smull mulH_3 mulLymm5_3 ymm5_3 ymm2_3;
smull mulH_4 mulLymm5_4 ymm5_4 ymm2_4;
smull mulH_5 mulLymm5_5 ymm5_5 ymm2_5;
smull mulH_6 mulLymm5_6 ymm5_6 ymm2_6;
smull mulH_7 mulLymm5_7 ymm5_7 ymm2_7;
smull mulH_8 mulLymm5_8 ymm5_8 ymm2_8;
smull mulH_9 mulLymm5_9 ymm5_9 ymm2_9;
smull mulH_a mulLymm5_a ymm5_a ymm2_a;
smull mulH_b mulLymm5_b ymm5_b ymm2_b;
smull mulH_c mulLymm5_c ymm5_c ymm2_c;
smull mulH_d mulLymm5_d ymm5_d ymm2_d;
smull mulH_e mulLymm5_e ymm5_e ymm2_e;
smull mulH_f mulLymm5_f ymm5_f ymm2_f;
mov ymm5_0 mulH_0;
mov ymm5_1 mulH_1;
mov ymm5_2 mulH_2;
mov ymm5_3 mulH_3;
mov ymm5_4 mulH_4;
mov ymm5_5 mulH_5;
mov ymm5_6 mulH_6;
mov ymm5_7 mulH_7;
mov ymm5_8 mulH_8;
mov ymm5_9 mulH_9;
mov ymm5_a mulH_a;
mov ymm5_b mulH_b;
mov ymm5_c mulH_c;
mov ymm5_d mulH_d;
mov ymm5_e mulH_e;
mov ymm5_f mulH_f;
(* vpmulhw %ymm0,%ymm7,%ymm7                       #! PC = 0x5555555585ab *)
smull mulH_0 red_0 ymm7_0 ymm0_0;
assert true && red_0 = mulLymm5_0;
assume red_0 = mulLymm5_0 && true;
smull mulH_1 red_1 ymm7_1 ymm0_1;
assert true && red_1 = mulLymm5_1;
assume red_1 = mulLymm5_1 && true;
smull mulH_2 red_2 ymm7_2 ymm0_2;
assert true && red_2 = mulLymm5_2;
assume red_2 = mulLymm5_2 && true;
smull mulH_3 red_3 ymm7_3 ymm0_3;
assert true && red_3 = mulLymm5_3;
assume red_3 = mulLymm5_3 && true;
smull mulH_4 red_4 ymm7_4 ymm0_4;
assert true && red_4 = mulLymm5_4;
assume red_4 = mulLymm5_4 && true;
smull mulH_5 red_5 ymm7_5 ymm0_5;
assert true && red_5 = mulLymm5_5;
assume red_5 = mulLymm5_5 && true;
smull mulH_6 red_6 ymm7_6 ymm0_6;
assert true && red_6 = mulLymm5_6;
assume red_6 = mulLymm5_6 && true;
smull mulH_7 red_7 ymm7_7 ymm0_7;
assert true && red_7 = mulLymm5_7;
assume red_7 = mulLymm5_7 && true;
smull mulH_8 red_8 ymm7_8 ymm0_8;
assert true && red_8 = mulLymm5_8;
assume red_8 = mulLymm5_8 && true;
smull mulH_9 red_9 ymm7_9 ymm0_9;
assert true && red_9 = mulLymm5_9;
assume red_9 = mulLymm5_9 && true;
smull mulH_a red_a ymm7_a ymm0_a;
assert true && red_a = mulLymm5_a;
assume red_a = mulLymm5_a && true;
smull mulH_b red_b ymm7_b ymm0_b;
assert true && red_b = mulLymm5_b;
assume red_b = mulLymm5_b && true;
smull mulH_c red_c ymm7_c ymm0_c;
assert true && red_c = mulLymm5_c;
assume red_c = mulLymm5_c && true;
smull mulH_d red_d ymm7_d ymm0_d;
assert true && red_d = mulLymm5_d;
assume red_d = mulLymm5_d && true;
smull mulH_e red_e ymm7_e ymm0_e;
assert true && red_e = mulLymm5_e;
assume red_e = mulLymm5_e && true;
smull mulH_f red_f ymm7_f ymm0_f;
assert true && red_f = mulLymm5_f;
assume red_f = mulLymm5_f && true;
mov ymm7_0 mulH_0;
mov ymm7_1 mulH_1;
mov ymm7_2 mulH_2;
mov ymm7_3 mulH_3;
mov ymm7_4 mulH_4;
mov ymm7_5 mulH_5;
mov ymm7_6 mulH_6;
mov ymm7_7 mulH_7;
mov ymm7_8 mulH_8;
mov ymm7_9 mulH_9;
mov ymm7_a mulH_a;
mov ymm7_b mulH_b;
mov ymm7_c mulH_c;
mov ymm7_d mulH_d;
mov ymm7_e mulH_e;
mov ymm7_f mulH_f;
(* vpsubw %ymm7,%ymm5,%ymm5                        #! PC = 0x5555555585af *)
sub ymm5_0 ymm5_0 ymm7_0;
sub ymm5_1 ymm5_1 ymm7_1;
sub ymm5_2 ymm5_2 ymm7_2;
sub ymm5_3 ymm5_3 ymm7_3;
sub ymm5_4 ymm5_4 ymm7_4;
sub ymm5_5 ymm5_5 ymm7_5;
sub ymm5_6 ymm5_6 ymm7_6;
sub ymm5_7 ymm5_7 ymm7_7;
sub ymm5_8 ymm5_8 ymm7_8;
sub ymm5_9 ymm5_9 ymm7_9;
sub ymm5_a ymm5_a ymm7_a;
sub ymm5_b ymm5_b ymm7_b;
sub ymm5_c ymm5_c ymm7_c;
sub ymm5_d ymm5_d ymm7_d;
sub ymm5_e ymm5_e ymm7_e;
sub ymm5_f ymm5_f ymm7_f;
(* vpmullw %ymm1,%ymm6,%ymm7                       #! PC = 0x5555555585b3 *)
smull mulHymm6_0 mulL_0 ymm1_0 ymm6_0;
smull mulHymm6_1 mulL_1 ymm1_1 ymm6_1;
smull mulHymm6_2 mulL_2 ymm1_2 ymm6_2;
smull mulHymm6_3 mulL_3 ymm1_3 ymm6_3;
smull mulHymm6_4 mulL_4 ymm1_4 ymm6_4;
smull mulHymm6_5 mulL_5 ymm1_5 ymm6_5;
smull mulHymm6_6 mulL_6 ymm1_6 ymm6_6;
smull mulHymm6_7 mulL_7 ymm1_7 ymm6_7;
smull mulHymm6_8 mulL_8 ymm1_8 ymm6_8;
smull mulHymm6_9 mulL_9 ymm1_9 ymm6_9;
smull mulHymm6_a mulL_a ymm1_a ymm6_a;
smull mulHymm6_b mulL_b ymm1_b ymm6_b;
smull mulHymm6_c mulL_c ymm1_c ymm6_c;
smull mulHymm6_d mulL_d ymm1_d ymm6_d;
smull mulHymm6_e mulL_e ymm1_e ymm6_e;
smull mulHymm6_f mulL_f ymm1_f ymm6_f;
cast ymm7_0@sint16 mulL_0;
cast ymm7_1@sint16 mulL_1;
cast ymm7_2@sint16 mulL_2;
cast ymm7_3@sint16 mulL_3;
cast ymm7_4@sint16 mulL_4;
cast ymm7_5@sint16 mulL_5;
cast ymm7_6@sint16 mulL_6;
cast ymm7_7@sint16 mulL_7;
cast ymm7_8@sint16 mulL_8;
cast ymm7_9@sint16 mulL_9;
cast ymm7_a@sint16 mulL_a;
cast ymm7_b@sint16 mulL_b;
cast ymm7_c@sint16 mulL_c;
cast ymm7_d@sint16 mulL_d;
cast ymm7_e@sint16 mulL_e;
cast ymm7_f@sint16 mulL_f;
(* vpmulhw %ymm2,%ymm6,%ymm6                       #! PC = 0x5555555585b7 *)
smull mulH_0 mulLymm6_0 ymm6_0 ymm2_0;
smull mulH_1 mulLymm6_1 ymm6_1 ymm2_1;
smull mulH_2 mulLymm6_2 ymm6_2 ymm2_2;
smull mulH_3 mulLymm6_3 ymm6_3 ymm2_3;
smull mulH_4 mulLymm6_4 ymm6_4 ymm2_4;
smull mulH_5 mulLymm6_5 ymm6_5 ymm2_5;
smull mulH_6 mulLymm6_6 ymm6_6 ymm2_6;
smull mulH_7 mulLymm6_7 ymm6_7 ymm2_7;
smull mulH_8 mulLymm6_8 ymm6_8 ymm2_8;
smull mulH_9 mulLymm6_9 ymm6_9 ymm2_9;
smull mulH_a mulLymm6_a ymm6_a ymm2_a;
smull mulH_b mulLymm6_b ymm6_b ymm2_b;
smull mulH_c mulLymm6_c ymm6_c ymm2_c;
smull mulH_d mulLymm6_d ymm6_d ymm2_d;
smull mulH_e mulLymm6_e ymm6_e ymm2_e;
smull mulH_f mulLymm6_f ymm6_f ymm2_f;
mov ymm6_0 mulH_0;
mov ymm6_1 mulH_1;
mov ymm6_2 mulH_2;
mov ymm6_3 mulH_3;
mov ymm6_4 mulH_4;
mov ymm6_5 mulH_5;
mov ymm6_6 mulH_6;
mov ymm6_7 mulH_7;
mov ymm6_8 mulH_8;
mov ymm6_9 mulH_9;
mov ymm6_a mulH_a;
mov ymm6_b mulH_b;
mov ymm6_c mulH_c;
mov ymm6_d mulH_d;
mov ymm6_e mulH_e;
mov ymm6_f mulH_f;
(* vpmulhw %ymm0,%ymm7,%ymm7                       #! PC = 0x5555555585bb *)
smull mulH_0 red_0 ymm7_0 ymm0_0;
assert true && red_0 = mulLymm6_0;
assume red_0 = mulLymm6_0 && true;
smull mulH_1 red_1 ymm7_1 ymm0_1;
assert true && red_1 = mulLymm6_1;
assume red_1 = mulLymm6_1 && true;
smull mulH_2 red_2 ymm7_2 ymm0_2;
assert true && red_2 = mulLymm6_2;
assume red_2 = mulLymm6_2 && true;
smull mulH_3 red_3 ymm7_3 ymm0_3;
assert true && red_3 = mulLymm6_3;
assume red_3 = mulLymm6_3 && true;
smull mulH_4 red_4 ymm7_4 ymm0_4;
assert true && red_4 = mulLymm6_4;
assume red_4 = mulLymm6_4 && true;
smull mulH_5 red_5 ymm7_5 ymm0_5;
assert true && red_5 = mulLymm6_5;
assume red_5 = mulLymm6_5 && true;
smull mulH_6 red_6 ymm7_6 ymm0_6;
assert true && red_6 = mulLymm6_6;
assume red_6 = mulLymm6_6 && true;
smull mulH_7 red_7 ymm7_7 ymm0_7;
assert true && red_7 = mulLymm6_7;
assume red_7 = mulLymm6_7 && true;
smull mulH_8 red_8 ymm7_8 ymm0_8;
assert true && red_8 = mulLymm6_8;
assume red_8 = mulLymm6_8 && true;
smull mulH_9 red_9 ymm7_9 ymm0_9;
assert true && red_9 = mulLymm6_9;
assume red_9 = mulLymm6_9 && true;
smull mulH_a red_a ymm7_a ymm0_a;
assert true && red_a = mulLymm6_a;
assume red_a = mulLymm6_a && true;
smull mulH_b red_b ymm7_b ymm0_b;
assert true && red_b = mulLymm6_b;
assume red_b = mulLymm6_b && true;
smull mulH_c red_c ymm7_c ymm0_c;
assert true && red_c = mulLymm6_c;
assume red_c = mulLymm6_c && true;
smull mulH_d red_d ymm7_d ymm0_d;
assert true && red_d = mulLymm6_d;
assume red_d = mulLymm6_d && true;
smull mulH_e red_e ymm7_e ymm0_e;
assert true && red_e = mulLymm6_e;
assume red_e = mulLymm6_e && true;
smull mulH_f red_f ymm7_f ymm0_f;
assert true && red_f = mulLymm6_f;
assume red_f = mulLymm6_f && true;
mov ymm7_0 mulH_0;
mov ymm7_1 mulH_1;
mov ymm7_2 mulH_2;
mov ymm7_3 mulH_3;
mov ymm7_4 mulH_4;
mov ymm7_5 mulH_5;
mov ymm7_6 mulH_6;
mov ymm7_7 mulH_7;
mov ymm7_8 mulH_8;
mov ymm7_9 mulH_9;
mov ymm7_a mulH_a;
mov ymm7_b mulH_b;
mov ymm7_c mulH_c;
mov ymm7_d mulH_d;
mov ymm7_e mulH_e;
mov ymm7_f mulH_f;
(* vpsubw %ymm7,%ymm6,%ymm6                        #! PC = 0x5555555585bf *)
sub ymm6_0 ymm6_0 ymm7_0;
sub ymm6_1 ymm6_1 ymm7_1;
sub ymm6_2 ymm6_2 ymm7_2;
sub ymm6_3 ymm6_3 ymm7_3;
sub ymm6_4 ymm6_4 ymm7_4;
sub ymm6_5 ymm6_5 ymm7_5;
sub ymm6_6 ymm6_6 ymm7_6;
sub ymm6_7 ymm6_7 ymm7_7;
sub ymm6_8 ymm6_8 ymm7_8;
sub ymm6_9 ymm6_9 ymm7_9;
sub ymm6_a ymm6_a ymm7_a;
sub ymm6_b ymm6_b ymm7_b;
sub ymm6_c ymm6_c ymm7_c;
sub ymm6_d ymm6_d ymm7_d;
sub ymm6_e ymm6_e ymm7_e;
sub ymm6_f ymm6_f ymm7_f;
(* vpbroadcastw 0x10e(%rdx),%ymm1                  #! EA = L0x55555556122e; Value = 0x8cf7c126e487ae88; PC = 0x5555555585c3 *)
mov ymm1_0 L0x55555556122e;
mov ymm1_1 L0x55555556122e;
mov ymm1_2 L0x55555556122e;
mov ymm1_3 L0x55555556122e;
mov ymm1_4 L0x55555556122e;
mov ymm1_5 L0x55555556122e;
mov ymm1_6 L0x55555556122e;
mov ymm1_7 L0x55555556122e;
mov ymm1_8 L0x55555556122e;
mov ymm1_9 L0x55555556122e;
mov ymm1_a L0x55555556122e;
mov ymm1_b L0x55555556122e;
mov ymm1_c L0x55555556122e;
mov ymm1_d L0x55555556122e;
mov ymm1_e L0x55555556122e;
mov ymm1_f L0x55555556122e;
(* vpbroadcastw 0x30e(%rdx),%ymm2                  #! EA = L0x55555556142e; Value = 0x12f7fd260a87fe88; PC = 0x5555555585cc *)
mov ymm2_0 L0x55555556142e;
mov ymm2_1 L0x55555556142e;
mov ymm2_2 L0x55555556142e;
mov ymm2_3 L0x55555556142e;
mov ymm2_4 L0x55555556142e;
mov ymm2_5 L0x55555556142e;
mov ymm2_6 L0x55555556142e;
mov ymm2_7 L0x55555556142e;
mov ymm2_8 L0x55555556142e;
mov ymm2_9 L0x55555556142e;
mov ymm2_a L0x55555556142e;
mov ymm2_b L0x55555556142e;
mov ymm2_c L0x55555556142e;
mov ymm2_d L0x55555556142e;
mov ymm2_e L0x55555556142e;
mov ymm2_f L0x55555556142e;
(* vpmullw %ymm1,%ymm10,%ymm7                      #! PC = 0x5555555585d5 *)
smull mulHymm10_0 mulL_0 ymm1_0 ymm10_0;
smull mulHymm10_1 mulL_1 ymm1_1 ymm10_1;
smull mulHymm10_2 mulL_2 ymm1_2 ymm10_2;
smull mulHymm10_3 mulL_3 ymm1_3 ymm10_3;
smull mulHymm10_4 mulL_4 ymm1_4 ymm10_4;
smull mulHymm10_5 mulL_5 ymm1_5 ymm10_5;
smull mulHymm10_6 mulL_6 ymm1_6 ymm10_6;
smull mulHymm10_7 mulL_7 ymm1_7 ymm10_7;
smull mulHymm10_8 mulL_8 ymm1_8 ymm10_8;
smull mulHymm10_9 mulL_9 ymm1_9 ymm10_9;
smull mulHymm10_a mulL_a ymm1_a ymm10_a;
smull mulHymm10_b mulL_b ymm1_b ymm10_b;
smull mulHymm10_c mulL_c ymm1_c ymm10_c;
smull mulHymm10_d mulL_d ymm1_d ymm10_d;
smull mulHymm10_e mulL_e ymm1_e ymm10_e;
smull mulHymm10_f mulL_f ymm1_f ymm10_f;
cast ymm7_0@sint16 mulL_0;
cast ymm7_1@sint16 mulL_1;
cast ymm7_2@sint16 mulL_2;
cast ymm7_3@sint16 mulL_3;
cast ymm7_4@sint16 mulL_4;
cast ymm7_5@sint16 mulL_5;
cast ymm7_6@sint16 mulL_6;
cast ymm7_7@sint16 mulL_7;
cast ymm7_8@sint16 mulL_8;
cast ymm7_9@sint16 mulL_9;
cast ymm7_a@sint16 mulL_a;
cast ymm7_b@sint16 mulL_b;
cast ymm7_c@sint16 mulL_c;
cast ymm7_d@sint16 mulL_d;
cast ymm7_e@sint16 mulL_e;
cast ymm7_f@sint16 mulL_f;
(* vpmulhw %ymm2,%ymm10,%ymm10                     #! PC = 0x5555555585d9 *)
smull mulH_0 mulLymm10_0 ymm10_0 ymm2_0;
smull mulH_1 mulLymm10_1 ymm10_1 ymm2_1;
smull mulH_2 mulLymm10_2 ymm10_2 ymm2_2;
smull mulH_3 mulLymm10_3 ymm10_3 ymm2_3;
smull mulH_4 mulLymm10_4 ymm10_4 ymm2_4;
smull mulH_5 mulLymm10_5 ymm10_5 ymm2_5;
smull mulH_6 mulLymm10_6 ymm10_6 ymm2_6;
smull mulH_7 mulLymm10_7 ymm10_7 ymm2_7;
smull mulH_8 mulLymm10_8 ymm10_8 ymm2_8;
smull mulH_9 mulLymm10_9 ymm10_9 ymm2_9;
smull mulH_a mulLymm10_a ymm10_a ymm2_a;
smull mulH_b mulLymm10_b ymm10_b ymm2_b;
smull mulH_c mulLymm10_c ymm10_c ymm2_c;
smull mulH_d mulLymm10_d ymm10_d ymm2_d;
smull mulH_e mulLymm10_e ymm10_e ymm2_e;
smull mulH_f mulLymm10_f ymm10_f ymm2_f;
mov ymm10_0 mulH_0;
mov ymm10_1 mulH_1;
mov ymm10_2 mulH_2;
mov ymm10_3 mulH_3;
mov ymm10_4 mulH_4;
mov ymm10_5 mulH_5;
mov ymm10_6 mulH_6;
mov ymm10_7 mulH_7;
mov ymm10_8 mulH_8;
mov ymm10_9 mulH_9;
mov ymm10_a mulH_a;
mov ymm10_b mulH_b;
mov ymm10_c mulH_c;
mov ymm10_d mulH_d;
mov ymm10_e mulH_e;
mov ymm10_f mulH_f;
(* vpmulhw %ymm0,%ymm7,%ymm7                       #! PC = 0x5555555585dd *)
smull mulH_0 red_0 ymm7_0 ymm0_0;
assert true && red_0 = mulLymm10_0;
assume red_0 = mulLymm10_0 && true;
smull mulH_1 red_1 ymm7_1 ymm0_1;
assert true && red_1 = mulLymm10_1;
assume red_1 = mulLymm10_1 && true;
smull mulH_2 red_2 ymm7_2 ymm0_2;
assert true && red_2 = mulLymm10_2;
assume red_2 = mulLymm10_2 && true;
smull mulH_3 red_3 ymm7_3 ymm0_3;
assert true && red_3 = mulLymm10_3;
assume red_3 = mulLymm10_3 && true;
smull mulH_4 red_4 ymm7_4 ymm0_4;
assert true && red_4 = mulLymm10_4;
assume red_4 = mulLymm10_4 && true;
smull mulH_5 red_5 ymm7_5 ymm0_5;
assert true && red_5 = mulLymm10_5;
assume red_5 = mulLymm10_5 && true;
smull mulH_6 red_6 ymm7_6 ymm0_6;
assert true && red_6 = mulLymm10_6;
assume red_6 = mulLymm10_6 && true;
smull mulH_7 red_7 ymm7_7 ymm0_7;
assert true && red_7 = mulLymm10_7;
assume red_7 = mulLymm10_7 && true;
smull mulH_8 red_8 ymm7_8 ymm0_8;
assert true && red_8 = mulLymm10_8;
assume red_8 = mulLymm10_8 && true;
smull mulH_9 red_9 ymm7_9 ymm0_9;
assert true && red_9 = mulLymm10_9;
assume red_9 = mulLymm10_9 && true;
smull mulH_a red_a ymm7_a ymm0_a;
assert true && red_a = mulLymm10_a;
assume red_a = mulLymm10_a && true;
smull mulH_b red_b ymm7_b ymm0_b;
assert true && red_b = mulLymm10_b;
assume red_b = mulLymm10_b && true;
smull mulH_c red_c ymm7_c ymm0_c;
assert true && red_c = mulLymm10_c;
assume red_c = mulLymm10_c && true;
smull mulH_d red_d ymm7_d ymm0_d;
assert true && red_d = mulLymm10_d;
assume red_d = mulLymm10_d && true;
smull mulH_e red_e ymm7_e ymm0_e;
assert true && red_e = mulLymm10_e;
assume red_e = mulLymm10_e && true;
smull mulH_f red_f ymm7_f ymm0_f;
assert true && red_f = mulLymm10_f;
assume red_f = mulLymm10_f && true;
mov ymm7_0 mulH_0;
mov ymm7_1 mulH_1;
mov ymm7_2 mulH_2;
mov ymm7_3 mulH_3;
mov ymm7_4 mulH_4;
mov ymm7_5 mulH_5;
mov ymm7_6 mulH_6;
mov ymm7_7 mulH_7;
mov ymm7_8 mulH_8;
mov ymm7_9 mulH_9;
mov ymm7_a mulH_a;
mov ymm7_b mulH_b;
mov ymm7_c mulH_c;
mov ymm7_d mulH_d;
mov ymm7_e mulH_e;
mov ymm7_f mulH_f;
(* vpsubw %ymm7,%ymm10,%ymm10                      #! PC = 0x5555555585e1 *)
sub ymm10_0 ymm10_0 ymm7_0;
sub ymm10_1 ymm10_1 ymm7_1;
sub ymm10_2 ymm10_2 ymm7_2;
sub ymm10_3 ymm10_3 ymm7_3;
sub ymm10_4 ymm10_4 ymm7_4;
sub ymm10_5 ymm10_5 ymm7_5;
sub ymm10_6 ymm10_6 ymm7_6;
sub ymm10_7 ymm10_7 ymm7_7;
sub ymm10_8 ymm10_8 ymm7_8;
sub ymm10_9 ymm10_9 ymm7_9;
sub ymm10_a ymm10_a ymm7_a;
sub ymm10_b ymm10_b ymm7_b;
sub ymm10_c ymm10_c ymm7_c;
sub ymm10_d ymm10_d ymm7_d;
sub ymm10_e ymm10_e ymm7_e;
sub ymm10_f ymm10_f ymm7_f;
(* vpmullw %ymm1,%ymm11,%ymm7                      #! PC = 0x5555555585e5 *)
smull mulHymm11_0 mulL_0 ymm1_0 ymm11_0;
smull mulHymm11_1 mulL_1 ymm1_1 ymm11_1;
smull mulHymm11_2 mulL_2 ymm1_2 ymm11_2;
smull mulHymm11_3 mulL_3 ymm1_3 ymm11_3;
smull mulHymm11_4 mulL_4 ymm1_4 ymm11_4;
smull mulHymm11_5 mulL_5 ymm1_5 ymm11_5;
smull mulHymm11_6 mulL_6 ymm1_6 ymm11_6;
smull mulHymm11_7 mulL_7 ymm1_7 ymm11_7;
smull mulHymm11_8 mulL_8 ymm1_8 ymm11_8;
smull mulHymm11_9 mulL_9 ymm1_9 ymm11_9;
smull mulHymm11_a mulL_a ymm1_a ymm11_a;
smull mulHymm11_b mulL_b ymm1_b ymm11_b;
smull mulHymm11_c mulL_c ymm1_c ymm11_c;
smull mulHymm11_d mulL_d ymm1_d ymm11_d;
smull mulHymm11_e mulL_e ymm1_e ymm11_e;
smull mulHymm11_f mulL_f ymm1_f ymm11_f;
cast ymm7_0@sint16 mulL_0;
cast ymm7_1@sint16 mulL_1;
cast ymm7_2@sint16 mulL_2;
cast ymm7_3@sint16 mulL_3;
cast ymm7_4@sint16 mulL_4;
cast ymm7_5@sint16 mulL_5;
cast ymm7_6@sint16 mulL_6;
cast ymm7_7@sint16 mulL_7;
cast ymm7_8@sint16 mulL_8;
cast ymm7_9@sint16 mulL_9;
cast ymm7_a@sint16 mulL_a;
cast ymm7_b@sint16 mulL_b;
cast ymm7_c@sint16 mulL_c;
cast ymm7_d@sint16 mulL_d;
cast ymm7_e@sint16 mulL_e;
cast ymm7_f@sint16 mulL_f;
(* vpmulhw %ymm2,%ymm11,%ymm11                     #! PC = 0x5555555585e9 *)
smull mulH_0 mulLymm11_0 ymm11_0 ymm2_0;
smull mulH_1 mulLymm11_1 ymm11_1 ymm2_1;
smull mulH_2 mulLymm11_2 ymm11_2 ymm2_2;
smull mulH_3 mulLymm11_3 ymm11_3 ymm2_3;
smull mulH_4 mulLymm11_4 ymm11_4 ymm2_4;
smull mulH_5 mulLymm11_5 ymm11_5 ymm2_5;
smull mulH_6 mulLymm11_6 ymm11_6 ymm2_6;
smull mulH_7 mulLymm11_7 ymm11_7 ymm2_7;
smull mulH_8 mulLymm11_8 ymm11_8 ymm2_8;
smull mulH_9 mulLymm11_9 ymm11_9 ymm2_9;
smull mulH_a mulLymm11_a ymm11_a ymm2_a;
smull mulH_b mulLymm11_b ymm11_b ymm2_b;
smull mulH_c mulLymm11_c ymm11_c ymm2_c;
smull mulH_d mulLymm11_d ymm11_d ymm2_d;
smull mulH_e mulLymm11_e ymm11_e ymm2_e;
smull mulH_f mulLymm11_f ymm11_f ymm2_f;
mov ymm11_0 mulH_0;
mov ymm11_1 mulH_1;
mov ymm11_2 mulH_2;
mov ymm11_3 mulH_3;
mov ymm11_4 mulH_4;
mov ymm11_5 mulH_5;
mov ymm11_6 mulH_6;
mov ymm11_7 mulH_7;
mov ymm11_8 mulH_8;
mov ymm11_9 mulH_9;
mov ymm11_a mulH_a;
mov ymm11_b mulH_b;
mov ymm11_c mulH_c;
mov ymm11_d mulH_d;
mov ymm11_e mulH_e;
mov ymm11_f mulH_f;
(* vpmulhw %ymm0,%ymm7,%ymm7                       #! PC = 0x5555555585ed *)
smull mulH_0 red_0 ymm7_0 ymm0_0;
assert true && red_0 = mulLymm11_0;
assume red_0 = mulLymm11_0 && true;
smull mulH_1 red_1 ymm7_1 ymm0_1;
assert true && red_1 = mulLymm11_1;
assume red_1 = mulLymm11_1 && true;
smull mulH_2 red_2 ymm7_2 ymm0_2;
assert true && red_2 = mulLymm11_2;
assume red_2 = mulLymm11_2 && true;
smull mulH_3 red_3 ymm7_3 ymm0_3;
assert true && red_3 = mulLymm11_3;
assume red_3 = mulLymm11_3 && true;
smull mulH_4 red_4 ymm7_4 ymm0_4;
assert true && red_4 = mulLymm11_4;
assume red_4 = mulLymm11_4 && true;
smull mulH_5 red_5 ymm7_5 ymm0_5;
assert true && red_5 = mulLymm11_5;
assume red_5 = mulLymm11_5 && true;
smull mulH_6 red_6 ymm7_6 ymm0_6;
assert true && red_6 = mulLymm11_6;
assume red_6 = mulLymm11_6 && true;
smull mulH_7 red_7 ymm7_7 ymm0_7;
assert true && red_7 = mulLymm11_7;
assume red_7 = mulLymm11_7 && true;
smull mulH_8 red_8 ymm7_8 ymm0_8;
assert true && red_8 = mulLymm11_8;
assume red_8 = mulLymm11_8 && true;
smull mulH_9 red_9 ymm7_9 ymm0_9;
assert true && red_9 = mulLymm11_9;
assume red_9 = mulLymm11_9 && true;
smull mulH_a red_a ymm7_a ymm0_a;
assert true && red_a = mulLymm11_a;
assume red_a = mulLymm11_a && true;
smull mulH_b red_b ymm7_b ymm0_b;
assert true && red_b = mulLymm11_b;
assume red_b = mulLymm11_b && true;
smull mulH_c red_c ymm7_c ymm0_c;
assert true && red_c = mulLymm11_c;
assume red_c = mulLymm11_c && true;
smull mulH_d red_d ymm7_d ymm0_d;
assert true && red_d = mulLymm11_d;
assume red_d = mulLymm11_d && true;
smull mulH_e red_e ymm7_e ymm0_e;
assert true && red_e = mulLymm11_e;
assume red_e = mulLymm11_e && true;
smull mulH_f red_f ymm7_f ymm0_f;
assert true && red_f = mulLymm11_f;
assume red_f = mulLymm11_f && true;
mov ymm7_0 mulH_0;
mov ymm7_1 mulH_1;
mov ymm7_2 mulH_2;
mov ymm7_3 mulH_3;
mov ymm7_4 mulH_4;
mov ymm7_5 mulH_5;
mov ymm7_6 mulH_6;
mov ymm7_7 mulH_7;
mov ymm7_8 mulH_8;
mov ymm7_9 mulH_9;
mov ymm7_a mulH_a;
mov ymm7_b mulH_b;
mov ymm7_c mulH_c;
mov ymm7_d mulH_d;
mov ymm7_e mulH_e;
mov ymm7_f mulH_f;
(* vpsubw %ymm7,%ymm11,%ymm11                      #! PC = 0x5555555585f1 *)
sub ymm11_0 ymm11_0 ymm7_0;
sub ymm11_1 ymm11_1 ymm7_1;
sub ymm11_2 ymm11_2 ymm7_2;
sub ymm11_3 ymm11_3 ymm7_3;
sub ymm11_4 ymm11_4 ymm7_4;
sub ymm11_5 ymm11_5 ymm7_5;
sub ymm11_6 ymm11_6 ymm7_6;
sub ymm11_7 ymm11_7 ymm7_7;
sub ymm11_8 ymm11_8 ymm7_8;
sub ymm11_9 ymm11_9 ymm7_9;
sub ymm11_a ymm11_a ymm7_a;
sub ymm11_b ymm11_b ymm7_b;
sub ymm11_c ymm11_c ymm7_c;
sub ymm11_d ymm11_d ymm7_d;
sub ymm11_e ymm11_e ymm7_e;
sub ymm11_f ymm11_f ymm7_f;
(* vpaddw %ymm5,%ymm3,%ymm7                        #! PC = 0x5555555585f5 *)
add ymm7_0 ymm3_0 ymm5_0;
add ymm7_1 ymm3_1 ymm5_1;
add ymm7_2 ymm3_2 ymm5_2;
add ymm7_3 ymm3_3 ymm5_3;
add ymm7_4 ymm3_4 ymm5_4;
add ymm7_5 ymm3_5 ymm5_5;
add ymm7_6 ymm3_6 ymm5_6;
add ymm7_7 ymm3_7 ymm5_7;
add ymm7_8 ymm3_8 ymm5_8;
add ymm7_9 ymm3_9 ymm5_9;
add ymm7_a ymm3_a ymm5_a;
add ymm7_b ymm3_b ymm5_b;
add ymm7_c ymm3_c ymm5_c;
add ymm7_d ymm3_d ymm5_d;
add ymm7_e ymm3_e ymm5_e;
add ymm7_f ymm3_f ymm5_f;
(* vpsubw %ymm5,%ymm3,%ymm5                        #! PC = 0x5555555585f9 *)
sub ymm5_0 ymm3_0 ymm5_0;
sub ymm5_1 ymm3_1 ymm5_1;
sub ymm5_2 ymm3_2 ymm5_2;
sub ymm5_3 ymm3_3 ymm5_3;
sub ymm5_4 ymm3_4 ymm5_4;
sub ymm5_5 ymm3_5 ymm5_5;
sub ymm5_6 ymm3_6 ymm5_6;
sub ymm5_7 ymm3_7 ymm5_7;
sub ymm5_8 ymm3_8 ymm5_8;
sub ymm5_9 ymm3_9 ymm5_9;
sub ymm5_a ymm3_a ymm5_a;
sub ymm5_b ymm3_b ymm5_b;
sub ymm5_c ymm3_c ymm5_c;
sub ymm5_d ymm3_d ymm5_d;
sub ymm5_e ymm3_e ymm5_e;
sub ymm5_f ymm3_f ymm5_f;
(* vpaddw %ymm6,%ymm4,%ymm3                        #! PC = 0x5555555585fd *)
add ymm3_0 ymm4_0 ymm6_0;
add ymm3_1 ymm4_1 ymm6_1;
add ymm3_2 ymm4_2 ymm6_2;
add ymm3_3 ymm4_3 ymm6_3;
add ymm3_4 ymm4_4 ymm6_4;
add ymm3_5 ymm4_5 ymm6_5;
add ymm3_6 ymm4_6 ymm6_6;
add ymm3_7 ymm4_7 ymm6_7;
add ymm3_8 ymm4_8 ymm6_8;
add ymm3_9 ymm4_9 ymm6_9;
add ymm3_a ymm4_a ymm6_a;
add ymm3_b ymm4_b ymm6_b;
add ymm3_c ymm4_c ymm6_c;
add ymm3_d ymm4_d ymm6_d;
add ymm3_e ymm4_e ymm6_e;
add ymm3_f ymm4_f ymm6_f;
(* vpsubw %ymm6,%ymm4,%ymm6                        #! PC = 0x555555558601 *)
sub ymm6_0 ymm4_0 ymm6_0;
sub ymm6_1 ymm4_1 ymm6_1;
sub ymm6_2 ymm4_2 ymm6_2;
sub ymm6_3 ymm4_3 ymm6_3;
sub ymm6_4 ymm4_4 ymm6_4;
sub ymm6_5 ymm4_5 ymm6_5;
sub ymm6_6 ymm4_6 ymm6_6;
sub ymm6_7 ymm4_7 ymm6_7;
sub ymm6_8 ymm4_8 ymm6_8;
sub ymm6_9 ymm4_9 ymm6_9;
sub ymm6_a ymm4_a ymm6_a;
sub ymm6_b ymm4_b ymm6_b;
sub ymm6_c ymm4_c ymm6_c;
sub ymm6_d ymm4_d ymm6_d;
sub ymm6_e ymm4_e ymm6_e;
sub ymm6_f ymm4_f ymm6_f;
(* vpaddw %ymm10,%ymm8,%ymm4                       #! PC = 0x555555558605 *)
add ymm4_0 ymm8_0 ymm10_0;
add ymm4_1 ymm8_1 ymm10_1;
add ymm4_2 ymm8_2 ymm10_2;
add ymm4_3 ymm8_3 ymm10_3;
add ymm4_4 ymm8_4 ymm10_4;
add ymm4_5 ymm8_5 ymm10_5;
add ymm4_6 ymm8_6 ymm10_6;
add ymm4_7 ymm8_7 ymm10_7;
add ymm4_8 ymm8_8 ymm10_8;
add ymm4_9 ymm8_9 ymm10_9;
add ymm4_a ymm8_a ymm10_a;
add ymm4_b ymm8_b ymm10_b;
add ymm4_c ymm8_c ymm10_c;
add ymm4_d ymm8_d ymm10_d;
add ymm4_e ymm8_e ymm10_e;
add ymm4_f ymm8_f ymm10_f;
(* vpsubw %ymm10,%ymm8,%ymm10                      #! PC = 0x55555555860a *)
sub ymm10_0 ymm8_0 ymm10_0;
sub ymm10_1 ymm8_1 ymm10_1;
sub ymm10_2 ymm8_2 ymm10_2;
sub ymm10_3 ymm8_3 ymm10_3;
sub ymm10_4 ymm8_4 ymm10_4;
sub ymm10_5 ymm8_5 ymm10_5;
sub ymm10_6 ymm8_6 ymm10_6;
sub ymm10_7 ymm8_7 ymm10_7;
sub ymm10_8 ymm8_8 ymm10_8;
sub ymm10_9 ymm8_9 ymm10_9;
sub ymm10_a ymm8_a ymm10_a;
sub ymm10_b ymm8_b ymm10_b;
sub ymm10_c ymm8_c ymm10_c;
sub ymm10_d ymm8_d ymm10_d;
sub ymm10_e ymm8_e ymm10_e;
sub ymm10_f ymm8_f ymm10_f;
(* vpaddw %ymm11,%ymm9,%ymm8                       #! PC = 0x55555555860f *)
add ymm8_0 ymm9_0 ymm11_0;
add ymm8_1 ymm9_1 ymm11_1;
add ymm8_2 ymm9_2 ymm11_2;
add ymm8_3 ymm9_3 ymm11_3;
add ymm8_4 ymm9_4 ymm11_4;
add ymm8_5 ymm9_5 ymm11_5;
add ymm8_6 ymm9_6 ymm11_6;
add ymm8_7 ymm9_7 ymm11_7;
add ymm8_8 ymm9_8 ymm11_8;
add ymm8_9 ymm9_9 ymm11_9;
add ymm8_a ymm9_a ymm11_a;
add ymm8_b ymm9_b ymm11_b;
add ymm8_c ymm9_c ymm11_c;
add ymm8_d ymm9_d ymm11_d;
add ymm8_e ymm9_e ymm11_e;
add ymm8_f ymm9_f ymm11_f;
(* vpsubw %ymm11,%ymm9,%ymm11                      #! PC = 0x555555558614 *)
sub ymm11_0 ymm9_0 ymm11_0;
sub ymm11_1 ymm9_1 ymm11_1;
sub ymm11_2 ymm9_2 ymm11_2;
sub ymm11_3 ymm9_3 ymm11_3;
sub ymm11_4 ymm9_4 ymm11_4;
sub ymm11_5 ymm9_5 ymm11_5;
sub ymm11_6 ymm9_6 ymm11_6;
sub ymm11_7 ymm9_7 ymm11_7;
sub ymm11_8 ymm9_8 ymm11_8;
sub ymm11_9 ymm9_9 ymm11_9;
sub ymm11_a ymm9_a ymm11_a;
sub ymm11_b ymm9_b ymm11_b;
sub ymm11_c ymm9_c ymm11_c;
sub ymm11_d ymm9_d ymm11_d;
sub ymm11_e ymm9_e ymm11_e;
sub ymm11_f ymm9_f ymm11_f;
(* vpbroadcastw 0x118(%rdx),%ymm1                  #! EA = L0x555555561238; Value = 0xc138252491c0b857; PC = 0x555555558619 *)
mov ymm1_0 L0x555555561238;
mov ymm1_1 L0x555555561238;
mov ymm1_2 L0x555555561238;
mov ymm1_3 L0x555555561238;
mov ymm1_4 L0x555555561238;
mov ymm1_5 L0x555555561238;
mov ymm1_6 L0x555555561238;
mov ymm1_7 L0x555555561238;
mov ymm1_8 L0x555555561238;
mov ymm1_9 L0x555555561238;
mov ymm1_a L0x555555561238;
mov ymm1_b L0x555555561238;
mov ymm1_c L0x555555561238;
mov ymm1_d L0x555555561238;
mov ymm1_e L0x555555561238;
mov ymm1_f L0x555555561238;
(* vpbroadcastw 0x318(%rdx),%ymm2                  #! EA = L0x555555561438; Value = 0xf1380d2411c0fe57; PC = 0x555555558622 *)
mov ymm2_0 L0x555555561438;
mov ymm2_1 L0x555555561438;
mov ymm2_2 L0x555555561438;
mov ymm2_3 L0x555555561438;
mov ymm2_4 L0x555555561438;
mov ymm2_5 L0x555555561438;
mov ymm2_6 L0x555555561438;
mov ymm2_7 L0x555555561438;
mov ymm2_8 L0x555555561438;
mov ymm2_9 L0x555555561438;
mov ymm2_a L0x555555561438;
mov ymm2_b L0x555555561438;
mov ymm2_c L0x555555561438;
mov ymm2_d L0x555555561438;
mov ymm2_e L0x555555561438;
mov ymm2_f L0x555555561438;
(* vpmullw %ymm1,%ymm3,%ymm9                       #! PC = 0x55555555862b *)
smull mulHymm3_0 mulL_0 ymm1_0 ymm3_0;
smull mulHymm3_1 mulL_1 ymm1_1 ymm3_1;
smull mulHymm3_2 mulL_2 ymm1_2 ymm3_2;
smull mulHymm3_3 mulL_3 ymm1_3 ymm3_3;
smull mulHymm3_4 mulL_4 ymm1_4 ymm3_4;
smull mulHymm3_5 mulL_5 ymm1_5 ymm3_5;
smull mulHymm3_6 mulL_6 ymm1_6 ymm3_6;
smull mulHymm3_7 mulL_7 ymm1_7 ymm3_7;
smull mulHymm3_8 mulL_8 ymm1_8 ymm3_8;
smull mulHymm3_9 mulL_9 ymm1_9 ymm3_9;
smull mulHymm3_a mulL_a ymm1_a ymm3_a;
smull mulHymm3_b mulL_b ymm1_b ymm3_b;
smull mulHymm3_c mulL_c ymm1_c ymm3_c;
smull mulHymm3_d mulL_d ymm1_d ymm3_d;
smull mulHymm3_e mulL_e ymm1_e ymm3_e;
smull mulHymm3_f mulL_f ymm1_f ymm3_f;
cast ymm9_0@sint16 mulL_0;
cast ymm9_1@sint16 mulL_1;
cast ymm9_2@sint16 mulL_2;
cast ymm9_3@sint16 mulL_3;
cast ymm9_4@sint16 mulL_4;
cast ymm9_5@sint16 mulL_5;
cast ymm9_6@sint16 mulL_6;
cast ymm9_7@sint16 mulL_7;
cast ymm9_8@sint16 mulL_8;
cast ymm9_9@sint16 mulL_9;
cast ymm9_a@sint16 mulL_a;
cast ymm9_b@sint16 mulL_b;
cast ymm9_c@sint16 mulL_c;
cast ymm9_d@sint16 mulL_d;
cast ymm9_e@sint16 mulL_e;
cast ymm9_f@sint16 mulL_f;
(* vpmulhw %ymm2,%ymm3,%ymm3                       #! PC = 0x55555555862f *)
smull mulH_0 mulLymm3_0 ymm3_0 ymm2_0;
smull mulH_1 mulLymm3_1 ymm3_1 ymm2_1;
smull mulH_2 mulLymm3_2 ymm3_2 ymm2_2;
smull mulH_3 mulLymm3_3 ymm3_3 ymm2_3;
smull mulH_4 mulLymm3_4 ymm3_4 ymm2_4;
smull mulH_5 mulLymm3_5 ymm3_5 ymm2_5;
smull mulH_6 mulLymm3_6 ymm3_6 ymm2_6;
smull mulH_7 mulLymm3_7 ymm3_7 ymm2_7;
smull mulH_8 mulLymm3_8 ymm3_8 ymm2_8;
smull mulH_9 mulLymm3_9 ymm3_9 ymm2_9;
smull mulH_a mulLymm3_a ymm3_a ymm2_a;
smull mulH_b mulLymm3_b ymm3_b ymm2_b;
smull mulH_c mulLymm3_c ymm3_c ymm2_c;
smull mulH_d mulLymm3_d ymm3_d ymm2_d;
smull mulH_e mulLymm3_e ymm3_e ymm2_e;
smull mulH_f mulLymm3_f ymm3_f ymm2_f;
mov ymm3_0 mulH_0;
mov ymm3_1 mulH_1;
mov ymm3_2 mulH_2;
mov ymm3_3 mulH_3;
mov ymm3_4 mulH_4;
mov ymm3_5 mulH_5;
mov ymm3_6 mulH_6;
mov ymm3_7 mulH_7;
mov ymm3_8 mulH_8;
mov ymm3_9 mulH_9;
mov ymm3_a mulH_a;
mov ymm3_b mulH_b;
mov ymm3_c mulH_c;
mov ymm3_d mulH_d;
mov ymm3_e mulH_e;
mov ymm3_f mulH_f;
(* vpmulhw %ymm0,%ymm9,%ymm9                       #! PC = 0x555555558633 *)
smull mulH_0 red_0 ymm9_0 ymm0_0;
assert true && red_0 = mulLymm3_0;
assume red_0 = mulLymm3_0 && true;
smull mulH_1 red_1 ymm9_1 ymm0_1;
assert true && red_1 = mulLymm3_1;
assume red_1 = mulLymm3_1 && true;
smull mulH_2 red_2 ymm9_2 ymm0_2;
assert true && red_2 = mulLymm3_2;
assume red_2 = mulLymm3_2 && true;
smull mulH_3 red_3 ymm9_3 ymm0_3;
assert true && red_3 = mulLymm3_3;
assume red_3 = mulLymm3_3 && true;
smull mulH_4 red_4 ymm9_4 ymm0_4;
assert true && red_4 = mulLymm3_4;
assume red_4 = mulLymm3_4 && true;
smull mulH_5 red_5 ymm9_5 ymm0_5;
assert true && red_5 = mulLymm3_5;
assume red_5 = mulLymm3_5 && true;
smull mulH_6 red_6 ymm9_6 ymm0_6;
assert true && red_6 = mulLymm3_6;
assume red_6 = mulLymm3_6 && true;
smull mulH_7 red_7 ymm9_7 ymm0_7;
assert true && red_7 = mulLymm3_7;
assume red_7 = mulLymm3_7 && true;
smull mulH_8 red_8 ymm9_8 ymm0_8;
assert true && red_8 = mulLymm3_8;
assume red_8 = mulLymm3_8 && true;
smull mulH_9 red_9 ymm9_9 ymm0_9;
assert true && red_9 = mulLymm3_9;
assume red_9 = mulLymm3_9 && true;
smull mulH_a red_a ymm9_a ymm0_a;
assert true && red_a = mulLymm3_a;
assume red_a = mulLymm3_a && true;
smull mulH_b red_b ymm9_b ymm0_b;
assert true && red_b = mulLymm3_b;
assume red_b = mulLymm3_b && true;
smull mulH_c red_c ymm9_c ymm0_c;
assert true && red_c = mulLymm3_c;
assume red_c = mulLymm3_c && true;
smull mulH_d red_d ymm9_d ymm0_d;
assert true && red_d = mulLymm3_d;
assume red_d = mulLymm3_d && true;
smull mulH_e red_e ymm9_e ymm0_e;
assert true && red_e = mulLymm3_e;
assume red_e = mulLymm3_e && true;
smull mulH_f red_f ymm9_f ymm0_f;
assert true && red_f = mulLymm3_f;
assume red_f = mulLymm3_f && true;
mov ymm9_0 mulH_0;
mov ymm9_1 mulH_1;
mov ymm9_2 mulH_2;
mov ymm9_3 mulH_3;
mov ymm9_4 mulH_4;
mov ymm9_5 mulH_5;
mov ymm9_6 mulH_6;
mov ymm9_7 mulH_7;
mov ymm9_8 mulH_8;
mov ymm9_9 mulH_9;
mov ymm9_a mulH_a;
mov ymm9_b mulH_b;
mov ymm9_c mulH_c;
mov ymm9_d mulH_d;
mov ymm9_e mulH_e;
mov ymm9_f mulH_f;
(* vpsubw %ymm9,%ymm3,%ymm3                        #! PC = 0x555555558637 *)
sub ymm3_0 ymm3_0 ymm9_0;
sub ymm3_1 ymm3_1 ymm9_1;
sub ymm3_2 ymm3_2 ymm9_2;
sub ymm3_3 ymm3_3 ymm9_3;
sub ymm3_4 ymm3_4 ymm9_4;
sub ymm3_5 ymm3_5 ymm9_5;
sub ymm3_6 ymm3_6 ymm9_6;
sub ymm3_7 ymm3_7 ymm9_7;
sub ymm3_8 ymm3_8 ymm9_8;
sub ymm3_9 ymm3_9 ymm9_9;
sub ymm3_a ymm3_a ymm9_a;
sub ymm3_b ymm3_b ymm9_b;
sub ymm3_c ymm3_c ymm9_c;
sub ymm3_d ymm3_d ymm9_d;
sub ymm3_e ymm3_e ymm9_e;
sub ymm3_f ymm3_f ymm9_f;
(* vpbroadcastw 0x11a(%rdx),%ymm1                  #! EA = L0x55555556123a; Value = 0x450bc138252491c0; PC = 0x55555555863c *)
mov ymm1_0 L0x55555556123a;
mov ymm1_1 L0x55555556123a;
mov ymm1_2 L0x55555556123a;
mov ymm1_3 L0x55555556123a;
mov ymm1_4 L0x55555556123a;
mov ymm1_5 L0x55555556123a;
mov ymm1_6 L0x55555556123a;
mov ymm1_7 L0x55555556123a;
mov ymm1_8 L0x55555556123a;
mov ymm1_9 L0x55555556123a;
mov ymm1_a L0x55555556123a;
mov ymm1_b L0x55555556123a;
mov ymm1_c L0x55555556123a;
mov ymm1_d L0x55555556123a;
mov ymm1_e L0x55555556123a;
mov ymm1_f L0x55555556123a;
(* vpbroadcastw 0x31a(%rdx),%ymm2                  #! EA = L0x55555556143a; Value = 0x130bf1380d2411c0; PC = 0x555555558645 *)
mov ymm2_0 L0x55555556143a;
mov ymm2_1 L0x55555556143a;
mov ymm2_2 L0x55555556143a;
mov ymm2_3 L0x55555556143a;
mov ymm2_4 L0x55555556143a;
mov ymm2_5 L0x55555556143a;
mov ymm2_6 L0x55555556143a;
mov ymm2_7 L0x55555556143a;
mov ymm2_8 L0x55555556143a;
mov ymm2_9 L0x55555556143a;
mov ymm2_a L0x55555556143a;
mov ymm2_b L0x55555556143a;
mov ymm2_c L0x55555556143a;
mov ymm2_d L0x55555556143a;
mov ymm2_e L0x55555556143a;
mov ymm2_f L0x55555556143a;
(* vpmullw %ymm1,%ymm6,%ymm9                       #! PC = 0x55555555864e *)
smull mulHymm6_0 mulL_0 ymm1_0 ymm6_0;
smull mulHymm6_1 mulL_1 ymm1_1 ymm6_1;
smull mulHymm6_2 mulL_2 ymm1_2 ymm6_2;
smull mulHymm6_3 mulL_3 ymm1_3 ymm6_3;
smull mulHymm6_4 mulL_4 ymm1_4 ymm6_4;
smull mulHymm6_5 mulL_5 ymm1_5 ymm6_5;
smull mulHymm6_6 mulL_6 ymm1_6 ymm6_6;
smull mulHymm6_7 mulL_7 ymm1_7 ymm6_7;
smull mulHymm6_8 mulL_8 ymm1_8 ymm6_8;
smull mulHymm6_9 mulL_9 ymm1_9 ymm6_9;
smull mulHymm6_a mulL_a ymm1_a ymm6_a;
smull mulHymm6_b mulL_b ymm1_b ymm6_b;
smull mulHymm6_c mulL_c ymm1_c ymm6_c;
smull mulHymm6_d mulL_d ymm1_d ymm6_d;
smull mulHymm6_e mulL_e ymm1_e ymm6_e;
smull mulHymm6_f mulL_f ymm1_f ymm6_f;
cast ymm9_0@sint16 mulL_0;
cast ymm9_1@sint16 mulL_1;
cast ymm9_2@sint16 mulL_2;
cast ymm9_3@sint16 mulL_3;
cast ymm9_4@sint16 mulL_4;
cast ymm9_5@sint16 mulL_5;
cast ymm9_6@sint16 mulL_6;
cast ymm9_7@sint16 mulL_7;
cast ymm9_8@sint16 mulL_8;
cast ymm9_9@sint16 mulL_9;
cast ymm9_a@sint16 mulL_a;
cast ymm9_b@sint16 mulL_b;
cast ymm9_c@sint16 mulL_c;
cast ymm9_d@sint16 mulL_d;
cast ymm9_e@sint16 mulL_e;
cast ymm9_f@sint16 mulL_f;
(* vpmulhw %ymm2,%ymm6,%ymm6                       #! PC = 0x555555558652 *)
smull mulH_0 mulLymm6_0 ymm6_0 ymm2_0;
smull mulH_1 mulLymm6_1 ymm6_1 ymm2_1;
smull mulH_2 mulLymm6_2 ymm6_2 ymm2_2;
smull mulH_3 mulLymm6_3 ymm6_3 ymm2_3;
smull mulH_4 mulLymm6_4 ymm6_4 ymm2_4;
smull mulH_5 mulLymm6_5 ymm6_5 ymm2_5;
smull mulH_6 mulLymm6_6 ymm6_6 ymm2_6;
smull mulH_7 mulLymm6_7 ymm6_7 ymm2_7;
smull mulH_8 mulLymm6_8 ymm6_8 ymm2_8;
smull mulH_9 mulLymm6_9 ymm6_9 ymm2_9;
smull mulH_a mulLymm6_a ymm6_a ymm2_a;
smull mulH_b mulLymm6_b ymm6_b ymm2_b;
smull mulH_c mulLymm6_c ymm6_c ymm2_c;
smull mulH_d mulLymm6_d ymm6_d ymm2_d;
smull mulH_e mulLymm6_e ymm6_e ymm2_e;
smull mulH_f mulLymm6_f ymm6_f ymm2_f;
mov ymm6_0 mulH_0;
mov ymm6_1 mulH_1;
mov ymm6_2 mulH_2;
mov ymm6_3 mulH_3;
mov ymm6_4 mulH_4;
mov ymm6_5 mulH_5;
mov ymm6_6 mulH_6;
mov ymm6_7 mulH_7;
mov ymm6_8 mulH_8;
mov ymm6_9 mulH_9;
mov ymm6_a mulH_a;
mov ymm6_b mulH_b;
mov ymm6_c mulH_c;
mov ymm6_d mulH_d;
mov ymm6_e mulH_e;
mov ymm6_f mulH_f;
(* vpmulhw %ymm0,%ymm9,%ymm9                       #! PC = 0x555555558656 *)
smull mulH_0 red_0 ymm9_0 ymm0_0;
assert true && red_0 = mulLymm6_0;
assume red_0 = mulLymm6_0 && true;
smull mulH_1 red_1 ymm9_1 ymm0_1;
assert true && red_1 = mulLymm6_1;
assume red_1 = mulLymm6_1 && true;
smull mulH_2 red_2 ymm9_2 ymm0_2;
assert true && red_2 = mulLymm6_2;
assume red_2 = mulLymm6_2 && true;
smull mulH_3 red_3 ymm9_3 ymm0_3;
assert true && red_3 = mulLymm6_3;
assume red_3 = mulLymm6_3 && true;
smull mulH_4 red_4 ymm9_4 ymm0_4;
assert true && red_4 = mulLymm6_4;
assume red_4 = mulLymm6_4 && true;
smull mulH_5 red_5 ymm9_5 ymm0_5;
assert true && red_5 = mulLymm6_5;
assume red_5 = mulLymm6_5 && true;
smull mulH_6 red_6 ymm9_6 ymm0_6;
assert true && red_6 = mulLymm6_6;
assume red_6 = mulLymm6_6 && true;
smull mulH_7 red_7 ymm9_7 ymm0_7;
assert true && red_7 = mulLymm6_7;
assume red_7 = mulLymm6_7 && true;
smull mulH_8 red_8 ymm9_8 ymm0_8;
assert true && red_8 = mulLymm6_8;
assume red_8 = mulLymm6_8 && true;
smull mulH_9 red_9 ymm9_9 ymm0_9;
assert true && red_9 = mulLymm6_9;
assume red_9 = mulLymm6_9 && true;
smull mulH_a red_a ymm9_a ymm0_a;
assert true && red_a = mulLymm6_a;
assume red_a = mulLymm6_a && true;
smull mulH_b red_b ymm9_b ymm0_b;
assert true && red_b = mulLymm6_b;
assume red_b = mulLymm6_b && true;
smull mulH_c red_c ymm9_c ymm0_c;
assert true && red_c = mulLymm6_c;
assume red_c = mulLymm6_c && true;
smull mulH_d red_d ymm9_d ymm0_d;
assert true && red_d = mulLymm6_d;
assume red_d = mulLymm6_d && true;
smull mulH_e red_e ymm9_e ymm0_e;
assert true && red_e = mulLymm6_e;
assume red_e = mulLymm6_e && true;
smull mulH_f red_f ymm9_f ymm0_f;
assert true && red_f = mulLymm6_f;
assume red_f = mulLymm6_f && true;
mov ymm9_0 mulH_0;
mov ymm9_1 mulH_1;
mov ymm9_2 mulH_2;
mov ymm9_3 mulH_3;
mov ymm9_4 mulH_4;
mov ymm9_5 mulH_5;
mov ymm9_6 mulH_6;
mov ymm9_7 mulH_7;
mov ymm9_8 mulH_8;
mov ymm9_9 mulH_9;
mov ymm9_a mulH_a;
mov ymm9_b mulH_b;
mov ymm9_c mulH_c;
mov ymm9_d mulH_d;
mov ymm9_e mulH_e;
mov ymm9_f mulH_f;
(* vpsubw %ymm9,%ymm6,%ymm6                        #! PC = 0x55555555865a *)
sub ymm6_0 ymm6_0 ymm9_0;
sub ymm6_1 ymm6_1 ymm9_1;
sub ymm6_2 ymm6_2 ymm9_2;
sub ymm6_3 ymm6_3 ymm9_3;
sub ymm6_4 ymm6_4 ymm9_4;
sub ymm6_5 ymm6_5 ymm9_5;
sub ymm6_6 ymm6_6 ymm9_6;
sub ymm6_7 ymm6_7 ymm9_7;
sub ymm6_8 ymm6_8 ymm9_8;
sub ymm6_9 ymm6_9 ymm9_9;
sub ymm6_a ymm6_a ymm9_a;
sub ymm6_b ymm6_b ymm9_b;
sub ymm6_c ymm6_c ymm9_c;
sub ymm6_d ymm6_d ymm9_d;
sub ymm6_e ymm6_e ymm9_e;
sub ymm6_f ymm6_f ymm9_f;
(* vpbroadcastw 0x11c(%rdx),%ymm1                  #! EA = L0x55555556123c; Value = 0x5a10450bc1382524; PC = 0x55555555865f *)
mov ymm1_0 L0x55555556123c;
mov ymm1_1 L0x55555556123c;
mov ymm1_2 L0x55555556123c;
mov ymm1_3 L0x55555556123c;
mov ymm1_4 L0x55555556123c;
mov ymm1_5 L0x55555556123c;
mov ymm1_6 L0x55555556123c;
mov ymm1_7 L0x55555556123c;
mov ymm1_8 L0x55555556123c;
mov ymm1_9 L0x55555556123c;
mov ymm1_a L0x55555556123c;
mov ymm1_b L0x55555556123c;
mov ymm1_c L0x55555556123c;
mov ymm1_d L0x55555556123c;
mov ymm1_e L0x55555556123c;
mov ymm1_f L0x55555556123c;
(* vpbroadcastw 0x31c(%rdx),%ymm2                  #! EA = L0x55555556143c; Value = 0xfa10130bf1380d24; PC = 0x555555558668 *)
mov ymm2_0 L0x55555556143c;
mov ymm2_1 L0x55555556143c;
mov ymm2_2 L0x55555556143c;
mov ymm2_3 L0x55555556143c;
mov ymm2_4 L0x55555556143c;
mov ymm2_5 L0x55555556143c;
mov ymm2_6 L0x55555556143c;
mov ymm2_7 L0x55555556143c;
mov ymm2_8 L0x55555556143c;
mov ymm2_9 L0x55555556143c;
mov ymm2_a L0x55555556143c;
mov ymm2_b L0x55555556143c;
mov ymm2_c L0x55555556143c;
mov ymm2_d L0x55555556143c;
mov ymm2_e L0x55555556143c;
mov ymm2_f L0x55555556143c;
(* vpmullw %ymm1,%ymm8,%ymm9                       #! PC = 0x555555558671 *)
smull mulHymm8_0 mulL_0 ymm1_0 ymm8_0;
smull mulHymm8_1 mulL_1 ymm1_1 ymm8_1;
smull mulHymm8_2 mulL_2 ymm1_2 ymm8_2;
smull mulHymm8_3 mulL_3 ymm1_3 ymm8_3;
smull mulHymm8_4 mulL_4 ymm1_4 ymm8_4;
smull mulHymm8_5 mulL_5 ymm1_5 ymm8_5;
smull mulHymm8_6 mulL_6 ymm1_6 ymm8_6;
smull mulHymm8_7 mulL_7 ymm1_7 ymm8_7;
smull mulHymm8_8 mulL_8 ymm1_8 ymm8_8;
smull mulHymm8_9 mulL_9 ymm1_9 ymm8_9;
smull mulHymm8_a mulL_a ymm1_a ymm8_a;
smull mulHymm8_b mulL_b ymm1_b ymm8_b;
smull mulHymm8_c mulL_c ymm1_c ymm8_c;
smull mulHymm8_d mulL_d ymm1_d ymm8_d;
smull mulHymm8_e mulL_e ymm1_e ymm8_e;
smull mulHymm8_f mulL_f ymm1_f ymm8_f;
cast ymm9_0@sint16 mulL_0;
cast ymm9_1@sint16 mulL_1;
cast ymm9_2@sint16 mulL_2;
cast ymm9_3@sint16 mulL_3;
cast ymm9_4@sint16 mulL_4;
cast ymm9_5@sint16 mulL_5;
cast ymm9_6@sint16 mulL_6;
cast ymm9_7@sint16 mulL_7;
cast ymm9_8@sint16 mulL_8;
cast ymm9_9@sint16 mulL_9;
cast ymm9_a@sint16 mulL_a;
cast ymm9_b@sint16 mulL_b;
cast ymm9_c@sint16 mulL_c;
cast ymm9_d@sint16 mulL_d;
cast ymm9_e@sint16 mulL_e;
cast ymm9_f@sint16 mulL_f;
(* vpmulhw %ymm2,%ymm8,%ymm8                       #! PC = 0x555555558675 *)
smull mulH_0 mulLymm8_0 ymm8_0 ymm2_0;
smull mulH_1 mulLymm8_1 ymm8_1 ymm2_1;
smull mulH_2 mulLymm8_2 ymm8_2 ymm2_2;
smull mulH_3 mulLymm8_3 ymm8_3 ymm2_3;
smull mulH_4 mulLymm8_4 ymm8_4 ymm2_4;
smull mulH_5 mulLymm8_5 ymm8_5 ymm2_5;
smull mulH_6 mulLymm8_6 ymm8_6 ymm2_6;
smull mulH_7 mulLymm8_7 ymm8_7 ymm2_7;
smull mulH_8 mulLymm8_8 ymm8_8 ymm2_8;
smull mulH_9 mulLymm8_9 ymm8_9 ymm2_9;
smull mulH_a mulLymm8_a ymm8_a ymm2_a;
smull mulH_b mulLymm8_b ymm8_b ymm2_b;
smull mulH_c mulLymm8_c ymm8_c ymm2_c;
smull mulH_d mulLymm8_d ymm8_d ymm2_d;
smull mulH_e mulLymm8_e ymm8_e ymm2_e;
smull mulH_f mulLymm8_f ymm8_f ymm2_f;
mov ymm8_0 mulH_0;
mov ymm8_1 mulH_1;
mov ymm8_2 mulH_2;
mov ymm8_3 mulH_3;
mov ymm8_4 mulH_4;
mov ymm8_5 mulH_5;
mov ymm8_6 mulH_6;
mov ymm8_7 mulH_7;
mov ymm8_8 mulH_8;
mov ymm8_9 mulH_9;
mov ymm8_a mulH_a;
mov ymm8_b mulH_b;
mov ymm8_c mulH_c;
mov ymm8_d mulH_d;
mov ymm8_e mulH_e;
mov ymm8_f mulH_f;
(* vpmulhw %ymm0,%ymm9,%ymm9                       #! PC = 0x555555558679 *)
smull mulH_0 red_0 ymm9_0 ymm0_0;
assert true && red_0 = mulLymm8_0;
assume red_0 = mulLymm8_0 && true;
smull mulH_1 red_1 ymm9_1 ymm0_1;
assert true && red_1 = mulLymm8_1;
assume red_1 = mulLymm8_1 && true;
smull mulH_2 red_2 ymm9_2 ymm0_2;
assert true && red_2 = mulLymm8_2;
assume red_2 = mulLymm8_2 && true;
smull mulH_3 red_3 ymm9_3 ymm0_3;
assert true && red_3 = mulLymm8_3;
assume red_3 = mulLymm8_3 && true;
smull mulH_4 red_4 ymm9_4 ymm0_4;
assert true && red_4 = mulLymm8_4;
assume red_4 = mulLymm8_4 && true;
smull mulH_5 red_5 ymm9_5 ymm0_5;
assert true && red_5 = mulLymm8_5;
assume red_5 = mulLymm8_5 && true;
smull mulH_6 red_6 ymm9_6 ymm0_6;
assert true && red_6 = mulLymm8_6;
assume red_6 = mulLymm8_6 && true;
smull mulH_7 red_7 ymm9_7 ymm0_7;
assert true && red_7 = mulLymm8_7;
assume red_7 = mulLymm8_7 && true;
smull mulH_8 red_8 ymm9_8 ymm0_8;
assert true && red_8 = mulLymm8_8;
assume red_8 = mulLymm8_8 && true;
smull mulH_9 red_9 ymm9_9 ymm0_9;
assert true && red_9 = mulLymm8_9;
assume red_9 = mulLymm8_9 && true;
smull mulH_a red_a ymm9_a ymm0_a;
assert true && red_a = mulLymm8_a;
assume red_a = mulLymm8_a && true;
smull mulH_b red_b ymm9_b ymm0_b;
assert true && red_b = mulLymm8_b;
assume red_b = mulLymm8_b && true;
smull mulH_c red_c ymm9_c ymm0_c;
assert true && red_c = mulLymm8_c;
assume red_c = mulLymm8_c && true;
smull mulH_d red_d ymm9_d ymm0_d;
assert true && red_d = mulLymm8_d;
assume red_d = mulLymm8_d && true;
smull mulH_e red_e ymm9_e ymm0_e;
assert true && red_e = mulLymm8_e;
assume red_e = mulLymm8_e && true;
smull mulH_f red_f ymm9_f ymm0_f;
assert true && red_f = mulLymm8_f;
assume red_f = mulLymm8_f && true;
mov ymm9_0 mulH_0;
mov ymm9_1 mulH_1;
mov ymm9_2 mulH_2;
mov ymm9_3 mulH_3;
mov ymm9_4 mulH_4;
mov ymm9_5 mulH_5;
mov ymm9_6 mulH_6;
mov ymm9_7 mulH_7;
mov ymm9_8 mulH_8;
mov ymm9_9 mulH_9;
mov ymm9_a mulH_a;
mov ymm9_b mulH_b;
mov ymm9_c mulH_c;
mov ymm9_d mulH_d;
mov ymm9_e mulH_e;
mov ymm9_f mulH_f;
(* vpsubw %ymm9,%ymm8,%ymm8                        #! PC = 0x55555555867d *)
sub ymm8_0 ymm8_0 ymm9_0;
sub ymm8_1 ymm8_1 ymm9_1;
sub ymm8_2 ymm8_2 ymm9_2;
sub ymm8_3 ymm8_3 ymm9_3;
sub ymm8_4 ymm8_4 ymm9_4;
sub ymm8_5 ymm8_5 ymm9_5;
sub ymm8_6 ymm8_6 ymm9_6;
sub ymm8_7 ymm8_7 ymm9_7;
sub ymm8_8 ymm8_8 ymm9_8;
sub ymm8_9 ymm8_9 ymm9_9;
sub ymm8_a ymm8_a ymm9_a;
sub ymm8_b ymm8_b ymm9_b;
sub ymm8_c ymm8_c ymm9_c;
sub ymm8_d ymm8_d ymm9_d;
sub ymm8_e ymm8_e ymm9_e;
sub ymm8_f ymm8_f ymm9_f;
(* vpbroadcastw 0x11e(%rdx),%ymm1                  #! EA = L0x55555556123e; Value = 0x92395a10450bc138; PC = 0x555555558682 *)
mov ymm1_0 L0x55555556123e;
mov ymm1_1 L0x55555556123e;
mov ymm1_2 L0x55555556123e;
mov ymm1_3 L0x55555556123e;
mov ymm1_4 L0x55555556123e;
mov ymm1_5 L0x55555556123e;
mov ymm1_6 L0x55555556123e;
mov ymm1_7 L0x55555556123e;
mov ymm1_8 L0x55555556123e;
mov ymm1_9 L0x55555556123e;
mov ymm1_a L0x55555556123e;
mov ymm1_b L0x55555556123e;
mov ymm1_c L0x55555556123e;
mov ymm1_d L0x55555556123e;
mov ymm1_e L0x55555556123e;
mov ymm1_f L0x55555556123e;
(* vpbroadcastw 0x31e(%rdx),%ymm2                  #! EA = L0x55555556143e; Value = 0xec39fa10130bf138; PC = 0x55555555868b *)
mov ymm2_0 L0x55555556143e;
mov ymm2_1 L0x55555556143e;
mov ymm2_2 L0x55555556143e;
mov ymm2_3 L0x55555556143e;
mov ymm2_4 L0x55555556143e;
mov ymm2_5 L0x55555556143e;
mov ymm2_6 L0x55555556143e;
mov ymm2_7 L0x55555556143e;
mov ymm2_8 L0x55555556143e;
mov ymm2_9 L0x55555556143e;
mov ymm2_a L0x55555556143e;
mov ymm2_b L0x55555556143e;
mov ymm2_c L0x55555556143e;
mov ymm2_d L0x55555556143e;
mov ymm2_e L0x55555556143e;
mov ymm2_f L0x55555556143e;
(* vpmullw %ymm1,%ymm11,%ymm9                      #! PC = 0x555555558694 *)
smull mulHymm11_0 mulL_0 ymm1_0 ymm11_0;
smull mulHymm11_1 mulL_1 ymm1_1 ymm11_1;
smull mulHymm11_2 mulL_2 ymm1_2 ymm11_2;
smull mulHymm11_3 mulL_3 ymm1_3 ymm11_3;
smull mulHymm11_4 mulL_4 ymm1_4 ymm11_4;
smull mulHymm11_5 mulL_5 ymm1_5 ymm11_5;
smull mulHymm11_6 mulL_6 ymm1_6 ymm11_6;
smull mulHymm11_7 mulL_7 ymm1_7 ymm11_7;
smull mulHymm11_8 mulL_8 ymm1_8 ymm11_8;
smull mulHymm11_9 mulL_9 ymm1_9 ymm11_9;
smull mulHymm11_a mulL_a ymm1_a ymm11_a;
smull mulHymm11_b mulL_b ymm1_b ymm11_b;
smull mulHymm11_c mulL_c ymm1_c ymm11_c;
smull mulHymm11_d mulL_d ymm1_d ymm11_d;
smull mulHymm11_e mulL_e ymm1_e ymm11_e;
smull mulHymm11_f mulL_f ymm1_f ymm11_f;
cast ymm9_0@sint16 mulL_0;
cast ymm9_1@sint16 mulL_1;
cast ymm9_2@sint16 mulL_2;
cast ymm9_3@sint16 mulL_3;
cast ymm9_4@sint16 mulL_4;
cast ymm9_5@sint16 mulL_5;
cast ymm9_6@sint16 mulL_6;
cast ymm9_7@sint16 mulL_7;
cast ymm9_8@sint16 mulL_8;
cast ymm9_9@sint16 mulL_9;
cast ymm9_a@sint16 mulL_a;
cast ymm9_b@sint16 mulL_b;
cast ymm9_c@sint16 mulL_c;
cast ymm9_d@sint16 mulL_d;
cast ymm9_e@sint16 mulL_e;
cast ymm9_f@sint16 mulL_f;
(* vpmulhw %ymm2,%ymm11,%ymm11                     #! PC = 0x555555558698 *)
smull mulH_0 mulLymm11_0 ymm11_0 ymm2_0;
smull mulH_1 mulLymm11_1 ymm11_1 ymm2_1;
smull mulH_2 mulLymm11_2 ymm11_2 ymm2_2;
smull mulH_3 mulLymm11_3 ymm11_3 ymm2_3;
smull mulH_4 mulLymm11_4 ymm11_4 ymm2_4;
smull mulH_5 mulLymm11_5 ymm11_5 ymm2_5;
smull mulH_6 mulLymm11_6 ymm11_6 ymm2_6;
smull mulH_7 mulLymm11_7 ymm11_7 ymm2_7;
smull mulH_8 mulLymm11_8 ymm11_8 ymm2_8;
smull mulH_9 mulLymm11_9 ymm11_9 ymm2_9;
smull mulH_a mulLymm11_a ymm11_a ymm2_a;
smull mulH_b mulLymm11_b ymm11_b ymm2_b;
smull mulH_c mulLymm11_c ymm11_c ymm2_c;
smull mulH_d mulLymm11_d ymm11_d ymm2_d;
smull mulH_e mulLymm11_e ymm11_e ymm2_e;
smull mulH_f mulLymm11_f ymm11_f ymm2_f;
mov ymm11_0 mulH_0;
mov ymm11_1 mulH_1;
mov ymm11_2 mulH_2;
mov ymm11_3 mulH_3;
mov ymm11_4 mulH_4;
mov ymm11_5 mulH_5;
mov ymm11_6 mulH_6;
mov ymm11_7 mulH_7;
mov ymm11_8 mulH_8;
mov ymm11_9 mulH_9;
mov ymm11_a mulH_a;
mov ymm11_b mulH_b;
mov ymm11_c mulH_c;
mov ymm11_d mulH_d;
mov ymm11_e mulH_e;
mov ymm11_f mulH_f;
(* vpmulhw %ymm0,%ymm9,%ymm9                       #! PC = 0x55555555869c *)
smull mulH_0 red_0 ymm9_0 ymm0_0;
assert true && red_0 = mulLymm11_0;
assume red_0 = mulLymm11_0 && true;
smull mulH_1 red_1 ymm9_1 ymm0_1;
assert true && red_1 = mulLymm11_1;
assume red_1 = mulLymm11_1 && true;
smull mulH_2 red_2 ymm9_2 ymm0_2;
assert true && red_2 = mulLymm11_2;
assume red_2 = mulLymm11_2 && true;
smull mulH_3 red_3 ymm9_3 ymm0_3;
assert true && red_3 = mulLymm11_3;
assume red_3 = mulLymm11_3 && true;
smull mulH_4 red_4 ymm9_4 ymm0_4;
assert true && red_4 = mulLymm11_4;
assume red_4 = mulLymm11_4 && true;
smull mulH_5 red_5 ymm9_5 ymm0_5;
assert true && red_5 = mulLymm11_5;
assume red_5 = mulLymm11_5 && true;
smull mulH_6 red_6 ymm9_6 ymm0_6;
assert true && red_6 = mulLymm11_6;
assume red_6 = mulLymm11_6 && true;
smull mulH_7 red_7 ymm9_7 ymm0_7;
assert true && red_7 = mulLymm11_7;
assume red_7 = mulLymm11_7 && true;
smull mulH_8 red_8 ymm9_8 ymm0_8;
assert true && red_8 = mulLymm11_8;
assume red_8 = mulLymm11_8 && true;
smull mulH_9 red_9 ymm9_9 ymm0_9;
assert true && red_9 = mulLymm11_9;
assume red_9 = mulLymm11_9 && true;
smull mulH_a red_a ymm9_a ymm0_a;
assert true && red_a = mulLymm11_a;
assume red_a = mulLymm11_a && true;
smull mulH_b red_b ymm9_b ymm0_b;
assert true && red_b = mulLymm11_b;
assume red_b = mulLymm11_b && true;
smull mulH_c red_c ymm9_c ymm0_c;
assert true && red_c = mulLymm11_c;
assume red_c = mulLymm11_c && true;
smull mulH_d red_d ymm9_d ymm0_d;
assert true && red_d = mulLymm11_d;
assume red_d = mulLymm11_d && true;
smull mulH_e red_e ymm9_e ymm0_e;
assert true && red_e = mulLymm11_e;
assume red_e = mulLymm11_e && true;
smull mulH_f red_f ymm9_f ymm0_f;
assert true && red_f = mulLymm11_f;
assume red_f = mulLymm11_f && true;
mov ymm9_0 mulH_0;
mov ymm9_1 mulH_1;
mov ymm9_2 mulH_2;
mov ymm9_3 mulH_3;
mov ymm9_4 mulH_4;
mov ymm9_5 mulH_5;
mov ymm9_6 mulH_6;
mov ymm9_7 mulH_7;
mov ymm9_8 mulH_8;
mov ymm9_9 mulH_9;
mov ymm9_a mulH_a;
mov ymm9_b mulH_b;
mov ymm9_c mulH_c;
mov ymm9_d mulH_d;
mov ymm9_e mulH_e;
mov ymm9_f mulH_f;
(* vpsubw %ymm9,%ymm11,%ymm11                      #! PC = 0x5555555586a0 *)
sub ymm11_0 ymm11_0 ymm9_0;
sub ymm11_1 ymm11_1 ymm9_1;
sub ymm11_2 ymm11_2 ymm9_2;
sub ymm11_3 ymm11_3 ymm9_3;
sub ymm11_4 ymm11_4 ymm9_4;
sub ymm11_5 ymm11_5 ymm9_5;
sub ymm11_6 ymm11_6 ymm9_6;
sub ymm11_7 ymm11_7 ymm9_7;
sub ymm11_8 ymm11_8 ymm9_8;
sub ymm11_9 ymm11_9 ymm9_9;
sub ymm11_a ymm11_a ymm9_a;
sub ymm11_b ymm11_b ymm9_b;
sub ymm11_c ymm11_c ymm9_c;
sub ymm11_d ymm11_d ymm9_d;
sub ymm11_e ymm11_e ymm9_e;
sub ymm11_f ymm11_f ymm9_f;
(* vpaddw %ymm3,%ymm7,%ymm9                        #! PC = 0x5555555586a5 *)
add ymm9_0 ymm7_0 ymm3_0;
add ymm9_1 ymm7_1 ymm3_1;
add ymm9_2 ymm7_2 ymm3_2;
add ymm9_3 ymm7_3 ymm3_3;
add ymm9_4 ymm7_4 ymm3_4;
add ymm9_5 ymm7_5 ymm3_5;
add ymm9_6 ymm7_6 ymm3_6;
add ymm9_7 ymm7_7 ymm3_7;
add ymm9_8 ymm7_8 ymm3_8;
add ymm9_9 ymm7_9 ymm3_9;
add ymm9_a ymm7_a ymm3_a;
add ymm9_b ymm7_b ymm3_b;
add ymm9_c ymm7_c ymm3_c;
add ymm9_d ymm7_d ymm3_d;
add ymm9_e ymm7_e ymm3_e;
add ymm9_f ymm7_f ymm3_f;
(* vpsubw %ymm3,%ymm7,%ymm3                        #! PC = 0x5555555586a9 *)
sub ymm3_0 ymm7_0 ymm3_0;
sub ymm3_1 ymm7_1 ymm3_1;
sub ymm3_2 ymm7_2 ymm3_2;
sub ymm3_3 ymm7_3 ymm3_3;
sub ymm3_4 ymm7_4 ymm3_4;
sub ymm3_5 ymm7_5 ymm3_5;
sub ymm3_6 ymm7_6 ymm3_6;
sub ymm3_7 ymm7_7 ymm3_7;
sub ymm3_8 ymm7_8 ymm3_8;
sub ymm3_9 ymm7_9 ymm3_9;
sub ymm3_a ymm7_a ymm3_a;
sub ymm3_b ymm7_b ymm3_b;
sub ymm3_c ymm7_c ymm3_c;
sub ymm3_d ymm7_d ymm3_d;
sub ymm3_e ymm7_e ymm3_e;
sub ymm3_f ymm7_f ymm3_f;
(* vpaddw %ymm6,%ymm5,%ymm7                        #! PC = 0x5555555586ad *)
add ymm7_0 ymm5_0 ymm6_0;
add ymm7_1 ymm5_1 ymm6_1;
add ymm7_2 ymm5_2 ymm6_2;
add ymm7_3 ymm5_3 ymm6_3;
add ymm7_4 ymm5_4 ymm6_4;
add ymm7_5 ymm5_5 ymm6_5;
add ymm7_6 ymm5_6 ymm6_6;
add ymm7_7 ymm5_7 ymm6_7;
add ymm7_8 ymm5_8 ymm6_8;
add ymm7_9 ymm5_9 ymm6_9;
add ymm7_a ymm5_a ymm6_a;
add ymm7_b ymm5_b ymm6_b;
add ymm7_c ymm5_c ymm6_c;
add ymm7_d ymm5_d ymm6_d;
add ymm7_e ymm5_e ymm6_e;
add ymm7_f ymm5_f ymm6_f;
(* vpsubw %ymm6,%ymm5,%ymm6                        #! PC = 0x5555555586b1 *)
sub ymm6_0 ymm5_0 ymm6_0;
sub ymm6_1 ymm5_1 ymm6_1;
sub ymm6_2 ymm5_2 ymm6_2;
sub ymm6_3 ymm5_3 ymm6_3;
sub ymm6_4 ymm5_4 ymm6_4;
sub ymm6_5 ymm5_5 ymm6_5;
sub ymm6_6 ymm5_6 ymm6_6;
sub ymm6_7 ymm5_7 ymm6_7;
sub ymm6_8 ymm5_8 ymm6_8;
sub ymm6_9 ymm5_9 ymm6_9;
sub ymm6_a ymm5_a ymm6_a;
sub ymm6_b ymm5_b ymm6_b;
sub ymm6_c ymm5_c ymm6_c;
sub ymm6_d ymm5_d ymm6_d;
sub ymm6_e ymm5_e ymm6_e;
sub ymm6_f ymm5_f ymm6_f;
(* vpaddw %ymm8,%ymm4,%ymm5                        #! PC = 0x5555555586b5 *)
add ymm5_0 ymm4_0 ymm8_0;
add ymm5_1 ymm4_1 ymm8_1;
add ymm5_2 ymm4_2 ymm8_2;
add ymm5_3 ymm4_3 ymm8_3;
add ymm5_4 ymm4_4 ymm8_4;
add ymm5_5 ymm4_5 ymm8_5;
add ymm5_6 ymm4_6 ymm8_6;
add ymm5_7 ymm4_7 ymm8_7;
add ymm5_8 ymm4_8 ymm8_8;
add ymm5_9 ymm4_9 ymm8_9;
add ymm5_a ymm4_a ymm8_a;
add ymm5_b ymm4_b ymm8_b;
add ymm5_c ymm4_c ymm8_c;
add ymm5_d ymm4_d ymm8_d;
add ymm5_e ymm4_e ymm8_e;
add ymm5_f ymm4_f ymm8_f;
(* vpsubw %ymm8,%ymm4,%ymm8                        #! PC = 0x5555555586ba *)
sub ymm8_0 ymm4_0 ymm8_0;
sub ymm8_1 ymm4_1 ymm8_1;
sub ymm8_2 ymm4_2 ymm8_2;
sub ymm8_3 ymm4_3 ymm8_3;
sub ymm8_4 ymm4_4 ymm8_4;
sub ymm8_5 ymm4_5 ymm8_5;
sub ymm8_6 ymm4_6 ymm8_6;
sub ymm8_7 ymm4_7 ymm8_7;
sub ymm8_8 ymm4_8 ymm8_8;
sub ymm8_9 ymm4_9 ymm8_9;
sub ymm8_a ymm4_a ymm8_a;
sub ymm8_b ymm4_b ymm8_b;
sub ymm8_c ymm4_c ymm8_c;
sub ymm8_d ymm4_d ymm8_d;
sub ymm8_e ymm4_e ymm8_e;
sub ymm8_f ymm4_f ymm8_f;
(* vpaddw %ymm11,%ymm10,%ymm4                      #! PC = 0x5555555586bf *)
add ymm4_0 ymm10_0 ymm11_0;
add ymm4_1 ymm10_1 ymm11_1;
add ymm4_2 ymm10_2 ymm11_2;
add ymm4_3 ymm10_3 ymm11_3;
add ymm4_4 ymm10_4 ymm11_4;
add ymm4_5 ymm10_5 ymm11_5;
add ymm4_6 ymm10_6 ymm11_6;
add ymm4_7 ymm10_7 ymm11_7;
add ymm4_8 ymm10_8 ymm11_8;
add ymm4_9 ymm10_9 ymm11_9;
add ymm4_a ymm10_a ymm11_a;
add ymm4_b ymm10_b ymm11_b;
add ymm4_c ymm10_c ymm11_c;
add ymm4_d ymm10_d ymm11_d;
add ymm4_e ymm10_e ymm11_e;
add ymm4_f ymm10_f ymm11_f;
(* vpsubw %ymm11,%ymm10,%ymm11                     #! PC = 0x5555555586c4 *)
sub ymm11_0 ymm10_0 ymm11_0;
sub ymm11_1 ymm10_1 ymm11_1;
sub ymm11_2 ymm10_2 ymm11_2;
sub ymm11_3 ymm10_3 ymm11_3;
sub ymm11_4 ymm10_4 ymm11_4;
sub ymm11_5 ymm10_5 ymm11_5;
sub ymm11_6 ymm10_6 ymm11_6;
sub ymm11_7 ymm10_7 ymm11_7;
sub ymm11_8 ymm10_8 ymm11_8;
sub ymm11_9 ymm10_9 ymm11_9;
sub ymm11_a ymm10_a ymm11_a;
sub ymm11_b ymm10_b ymm11_b;
sub ymm11_c ymm10_c ymm11_c;
sub ymm11_d ymm10_d ymm11_d;
sub ymm11_e ymm10_e ymm11_e;
sub ymm11_f ymm10_f ymm11_f;


(**************** LEVELS 3-5, 3 *****************)


(**************** CUT 151, 11 *****************)

rcut 
  and [
(-26313)@16<=s ymm9_0,ymm9_0<=s 26313@16,(-26313)@16<=s ymm9_1,ymm9_1<=s 26313@16,
(-26313)@16<=s ymm9_2,ymm9_2<=s 26313@16,(-26313)@16<=s ymm9_3,ymm9_3<=s 26313@16,
(-26313)@16<=s ymm9_4,ymm9_4<=s 26313@16,(-26313)@16<=s ymm9_5,ymm9_5<=s 26313@16,
(-26313)@16<=s ymm9_6,ymm9_6<=s 26313@16,(-26313)@16<=s ymm9_7,ymm9_7<=s 26313@16,
(-26313)@16<=s ymm9_8,ymm9_8<=s 26313@16,(-26313)@16<=s ymm9_9,ymm9_9<=s 26313@16,
(-26313)@16<=s ymm9_a,ymm9_a<=s 26313@16,(-26313)@16<=s ymm9_b,ymm9_b<=s 26313@16,
(-26313)@16<=s ymm9_c,ymm9_c<=s 26313@16,(-26313)@16<=s ymm9_d,ymm9_d<=s 26313@16,
(-26313)@16<=s ymm9_e,ymm9_e<=s 26313@16,(-26313)@16<=s ymm9_f,ymm9_f<=s 26313@16,
(-26313)@16<=s ymm3_0,ymm3_0<=s 26313@16,(-26313)@16<=s ymm3_1,ymm3_1<=s 26313@16,
(-26313)@16<=s ymm3_2,ymm3_2<=s 26313@16,(-26313)@16<=s ymm3_3,ymm3_3<=s 26313@16,
(-26313)@16<=s ymm3_4,ymm3_4<=s 26313@16,(-26313)@16<=s ymm3_5,ymm3_5<=s 26313@16,
(-26313)@16<=s ymm3_6,ymm3_6<=s 26313@16,(-26313)@16<=s ymm3_7,ymm3_7<=s 26313@16,
(-26313)@16<=s ymm3_8,ymm3_8<=s 26313@16,(-26313)@16<=s ymm3_9,ymm3_9<=s 26313@16,
(-26313)@16<=s ymm3_a,ymm3_a<=s 26313@16,(-26313)@16<=s ymm3_b,ymm3_b<=s 26313@16,
(-26313)@16<=s ymm3_c,ymm3_c<=s 26313@16,(-26313)@16<=s ymm3_d,ymm3_d<=s 26313@16,
(-26313)@16<=s ymm3_e,ymm3_e<=s 26313@16,(-26313)@16<=s ymm3_f,ymm3_f<=s 26313@16,
(-27604)@16<=s ymm7_0,ymm7_0<=s 27604@16,(-27604)@16<=s ymm7_1,ymm7_1<=s 27604@16,
(-27604)@16<=s ymm7_2,ymm7_2<=s 27604@16,(-27604)@16<=s ymm7_3,ymm7_3<=s 27604@16,
(-27604)@16<=s ymm7_4,ymm7_4<=s 27604@16,(-27604)@16<=s ymm7_5,ymm7_5<=s 27604@16,
(-27604)@16<=s ymm7_6,ymm7_6<=s 27604@16,(-27604)@16<=s ymm7_7,ymm7_7<=s 27604@16,
(-27604)@16<=s ymm7_8,ymm7_8<=s 27604@16,(-27604)@16<=s ymm7_9,ymm7_9<=s 27604@16,
(-27604)@16<=s ymm7_a,ymm7_a<=s 27604@16,(-27604)@16<=s ymm7_b,ymm7_b<=s 27604@16,
(-27604)@16<=s ymm7_c,ymm7_c<=s 27604@16,(-27604)@16<=s ymm7_d,ymm7_d<=s 27604@16,
(-27604)@16<=s ymm7_e,ymm7_e<=s 27604@16,(-27604)@16<=s ymm7_f,ymm7_f<=s 27604@16,
(-27604)@16<=s ymm6_0,ymm6_0<=s 27604@16,(-27604)@16<=s ymm6_1,ymm6_1<=s 27604@16,
(-27604)@16<=s ymm6_2,ymm6_2<=s 27604@16,(-27604)@16<=s ymm6_3,ymm6_3<=s 27604@16,
(-27604)@16<=s ymm6_4,ymm6_4<=s 27604@16,(-27604)@16<=s ymm6_5,ymm6_5<=s 27604@16,
(-27604)@16<=s ymm6_6,ymm6_6<=s 27604@16,(-27604)@16<=s ymm6_7,ymm6_7<=s 27604@16,
(-27604)@16<=s ymm6_8,ymm6_8<=s 27604@16,(-27604)@16<=s ymm6_9,ymm6_9<=s 27604@16,
(-27604)@16<=s ymm6_a,ymm6_a<=s 27604@16,(-27604)@16<=s ymm6_b,ymm6_b<=s 27604@16,
(-27604)@16<=s ymm6_c,ymm6_c<=s 27604@16,(-27604)@16<=s ymm6_d,ymm6_d<=s 27604@16,
(-27604)@16<=s ymm6_e,ymm6_e<=s 27604@16,(-27604)@16<=s ymm6_f,ymm6_f<=s 27604@16,
(-27213)@16<=s ymm5_0,ymm5_0<=s 27213@16,(-27213)@16<=s ymm5_1,ymm5_1<=s 27213@16,
(-27213)@16<=s ymm5_2,ymm5_2<=s 27213@16,(-27213)@16<=s ymm5_3,ymm5_3<=s 27213@16,
(-27213)@16<=s ymm5_4,ymm5_4<=s 27213@16,(-27213)@16<=s ymm5_5,ymm5_5<=s 27213@16,
(-27213)@16<=s ymm5_6,ymm5_6<=s 27213@16,(-27213)@16<=s ymm5_7,ymm5_7<=s 27213@16,
(-27213)@16<=s ymm5_8,ymm5_8<=s 27213@16,(-27213)@16<=s ymm5_9,ymm5_9<=s 27213@16,
(-27213)@16<=s ymm5_a,ymm5_a<=s 27213@16,(-27213)@16<=s ymm5_b,ymm5_b<=s 27213@16,
(-27213)@16<=s ymm5_c,ymm5_c<=s 27213@16,(-27213)@16<=s ymm5_d,ymm5_d<=s 27213@16,
(-27213)@16<=s ymm5_e,ymm5_e<=s 27213@16,(-27213)@16<=s ymm5_f,ymm5_f<=s 27213@16,
(-27213)@16<=s ymm8_0,ymm8_0<=s 27213@16,(-27213)@16<=s ymm8_1,ymm8_1<=s 27213@16,
(-27213)@16<=s ymm8_2,ymm8_2<=s 27213@16,(-27213)@16<=s ymm8_3,ymm8_3<=s 27213@16,
(-27213)@16<=s ymm8_4,ymm8_4<=s 27213@16,(-27213)@16<=s ymm8_5,ymm8_5<=s 27213@16,
(-27213)@16<=s ymm8_6,ymm8_6<=s 27213@16,(-27213)@16<=s ymm8_7,ymm8_7<=s 27213@16,
(-27213)@16<=s ymm8_8,ymm8_8<=s 27213@16,(-27213)@16<=s ymm8_9,ymm8_9<=s 27213@16,
(-27213)@16<=s ymm8_a,ymm8_a<=s 27213@16,(-27213)@16<=s ymm8_b,ymm8_b<=s 27213@16,
(-27213)@16<=s ymm8_c,ymm8_c<=s 27213@16,(-27213)@16<=s ymm8_d,ymm8_d<=s 27213@16,
(-27213)@16<=s ymm8_e,ymm8_e<=s 27213@16,(-27213)@16<=s ymm8_f,ymm8_f<=s 27213@16,
(-27381)@16<=s ymm4_0,ymm4_0<=s 27381@16,(-27381)@16<=s ymm4_1,ymm4_1<=s 27381@16,
(-27381)@16<=s ymm4_2,ymm4_2<=s 27381@16,(-27381)@16<=s ymm4_3,ymm4_3<=s 27381@16,
(-27381)@16<=s ymm4_4,ymm4_4<=s 27381@16,(-27381)@16<=s ymm4_5,ymm4_5<=s 27381@16,
(-27381)@16<=s ymm4_6,ymm4_6<=s 27381@16,(-27381)@16<=s ymm4_7,ymm4_7<=s 27381@16,
(-27381)@16<=s ymm4_8,ymm4_8<=s 27381@16,(-27381)@16<=s ymm4_9,ymm4_9<=s 27381@16,
(-27381)@16<=s ymm4_a,ymm4_a<=s 27381@16,(-27381)@16<=s ymm4_b,ymm4_b<=s 27381@16,
(-27381)@16<=s ymm4_c,ymm4_c<=s 27381@16,(-27381)@16<=s ymm4_d,ymm4_d<=s 27381@16,
(-27381)@16<=s ymm4_e,ymm4_e<=s 27381@16,(-27381)@16<=s ymm4_f,ymm4_f<=s 27381@16,
(-27381)@16<=s ymm11_0,ymm11_0<=s 27381@16,(-27381)@16<=s ymm11_1,ymm11_1<=s 27381@16,
(-27381)@16<=s ymm11_2,ymm11_2<=s 27381@16,(-27381)@16<=s ymm11_3,ymm11_3<=s 27381@16,
(-27381)@16<=s ymm11_4,ymm11_4<=s 27381@16,(-27381)@16<=s ymm11_5,ymm11_5<=s 27381@16,
(-27381)@16<=s ymm11_6,ymm11_6<=s 27381@16,(-27381)@16<=s ymm11_7,ymm11_7<=s 27381@16,
(-27381)@16<=s ymm11_8,ymm11_8<=s 27381@16,(-27381)@16<=s ymm11_9,ymm11_9<=s 27381@16,
(-27381)@16<=s ymm11_a,ymm11_a<=s 27381@16,(-27381)@16<=s ymm11_b,ymm11_b<=s 27381@16,
(-27381)@16<=s ymm11_c,ymm11_c<=s 27381@16,(-27381)@16<=s ymm11_d,ymm11_d<=s 27381@16,
(-27381)@16<=s ymm11_e,ymm11_e<=s 27381@16,(-27381)@16<=s ymm11_f,ymm11_f<=s 27381@16
] prove with [ all ghosts, cuts [ 0 ] ];



(* vmovdqa 0x8a0f(%rip),%ymm1        # 0x5555555610e0 <nttmul_idxdata+64>#! EA = L0x5555555610e0; Value = 0x0d0c090805040100; PC = 0x5555555586c9 *)
mov ymm1_0 L0x5555555610e0;
mov ymm1_1 L0x5555555610e2;
mov ymm1_2 L0x5555555610e4;
mov ymm1_3 L0x5555555610e6;
mov ymm1_4 L0x5555555610e8;
mov ymm1_5 L0x5555555610ea;
mov ymm1_6 L0x5555555610ec;
mov ymm1_7 L0x5555555610ee;
mov ymm1_8 L0x5555555610f0;
mov ymm1_9 L0x5555555610f2;
mov ymm1_a L0x5555555610f4;
mov ymm1_b L0x5555555610f6;
mov ymm1_c L0x5555555610f8;
mov ymm1_d L0x5555555610fa;
mov ymm1_e L0x5555555610fc;
mov ymm1_f L0x5555555610fe;
(* vpshufb %ymm1,%ymm9,%ymm9                       #! PC = 0x5555555586d1 *)
assert true && ymm1_0 = 0x0100@16;
mov shuf_0 ymm9_0;
assert true && ymm1_1 = 0x0504@16;
mov shuf_1 ymm9_2;
assert true && ymm1_2 = 0x0908@16;
mov shuf_2 ymm9_4;
assert true && ymm1_3 = 0x0d0c@16;
mov shuf_3 ymm9_6;
assert true && ymm1_4 = 0x0302@16;
mov shuf_4 ymm9_1;
assert true && ymm1_5 = 0x0706@16;
mov shuf_5 ymm9_3;
assert true && ymm1_6 = 0x0b0a@16;
mov shuf_6 ymm9_5;
assert true && ymm1_7 = 0x0f0e@16;
mov shuf_7 ymm9_7;
assert true && ymm1_8 = 0x0100@16;
mov shuf_8 ymm9_8;
assert true && ymm1_9 = 0x0504@16;
mov shuf_9 ymm9_a;
assert true && ymm1_a = 0x0908@16;
mov shuf_a ymm9_c;
assert true && ymm1_b = 0x0d0c@16;
mov shuf_b ymm9_e;
assert true && ymm1_c = 0x0302@16;
mov shuf_c ymm9_9;
assert true && ymm1_d = 0x0706@16;
mov shuf_d ymm9_b;
assert true && ymm1_e = 0x0b0a@16;
mov shuf_e ymm9_d;
assert true && ymm1_f = 0x0f0e@16;
mov shuf_f ymm9_f;
mov ymm9_0 shuf_0;
mov ymm9_1 shuf_1;
mov ymm9_2 shuf_2;
mov ymm9_3 shuf_3;
mov ymm9_4 shuf_4;
mov ymm9_5 shuf_5;
mov ymm9_6 shuf_6;
mov ymm9_7 shuf_7;
mov ymm9_8 shuf_8;
mov ymm9_9 shuf_9;
mov ymm9_a shuf_a;
mov ymm9_b shuf_b;
mov ymm9_c shuf_c;
mov ymm9_d shuf_d;
mov ymm9_e shuf_e;
mov ymm9_f shuf_f;
(* vpermq $0xd8,%ymm9,%ymm9                        #! PC = 0x5555555586d6 *)
mov permq_0 ymm9_0;
mov permq_1 ymm9_1;
mov permq_2 ymm9_2;
mov permq_3 ymm9_3;
mov permq_4 ymm9_8;
mov permq_5 ymm9_9;
mov permq_6 ymm9_a;
mov permq_7 ymm9_b;
mov permq_8 ymm9_4;
mov permq_9 ymm9_5;
mov permq_a ymm9_6;
mov permq_b ymm9_7;
mov permq_c ymm9_c;
mov permq_d ymm9_d;
mov permq_e ymm9_e;
mov permq_f ymm9_f;
mov ymm9_0 permq_0;
mov ymm9_1 permq_1;
mov ymm9_2 permq_2;
mov ymm9_3 permq_3;
mov ymm9_4 permq_4;
mov ymm9_5 permq_5;
mov ymm9_6 permq_6;
mov ymm9_7 permq_7;
mov ymm9_8 permq_8;
mov ymm9_9 permq_9;
mov ymm9_a permq_a;
mov ymm9_b permq_b;
mov ymm9_c permq_c;
mov ymm9_d permq_d;
mov ymm9_e permq_e;
mov ymm9_f permq_f;
(* vpshufb %ymm1,%ymm3,%ymm3                       #! PC = 0x5555555586dc *)
assert true && ymm1_0 = 0x0100@16;
mov shuf_0 ymm3_0;
assert true && ymm1_1 = 0x0504@16;
mov shuf_1 ymm3_2;
assert true && ymm1_2 = 0x0908@16;
mov shuf_2 ymm3_4;
assert true && ymm1_3 = 0x0d0c@16;
mov shuf_3 ymm3_6;
assert true && ymm1_4 = 0x0302@16;
mov shuf_4 ymm3_1;
assert true && ymm1_5 = 0x0706@16;
mov shuf_5 ymm3_3;
assert true && ymm1_6 = 0x0b0a@16;
mov shuf_6 ymm3_5;
assert true && ymm1_7 = 0x0f0e@16;
mov shuf_7 ymm3_7;
assert true && ymm1_8 = 0x0100@16;
mov shuf_8 ymm3_8;
assert true && ymm1_9 = 0x0504@16;
mov shuf_9 ymm3_a;
assert true && ymm1_a = 0x0908@16;
mov shuf_a ymm3_c;
assert true && ymm1_b = 0x0d0c@16;
mov shuf_b ymm3_e;
assert true && ymm1_c = 0x0302@16;
mov shuf_c ymm3_9;
assert true && ymm1_d = 0x0706@16;
mov shuf_d ymm3_b;
assert true && ymm1_e = 0x0b0a@16;
mov shuf_e ymm3_d;
assert true && ymm1_f = 0x0f0e@16;
mov shuf_f ymm3_f;
mov ymm3_0 shuf_0;
mov ymm3_1 shuf_1;
mov ymm3_2 shuf_2;
mov ymm3_3 shuf_3;
mov ymm3_4 shuf_4;
mov ymm3_5 shuf_5;
mov ymm3_6 shuf_6;
mov ymm3_7 shuf_7;
mov ymm3_8 shuf_8;
mov ymm3_9 shuf_9;
mov ymm3_a shuf_a;
mov ymm3_b shuf_b;
mov ymm3_c shuf_c;
mov ymm3_d shuf_d;
mov ymm3_e shuf_e;
mov ymm3_f shuf_f;
(* vpermq $0xd8,%ymm3,%ymm3                        #! PC = 0x5555555586e1 *)
mov permq_0 ymm3_0;
mov permq_1 ymm3_1;
mov permq_2 ymm3_2;
mov permq_3 ymm3_3;
mov permq_4 ymm3_8;
mov permq_5 ymm3_9;
mov permq_6 ymm3_a;
mov permq_7 ymm3_b;
mov permq_8 ymm3_4;
mov permq_9 ymm3_5;
mov permq_a ymm3_6;
mov permq_b ymm3_7;
mov permq_c ymm3_c;
mov permq_d ymm3_d;
mov permq_e ymm3_e;
mov permq_f ymm3_f;
mov ymm3_0 permq_0;
mov ymm3_1 permq_1;
mov ymm3_2 permq_2;
mov ymm3_3 permq_3;
mov ymm3_4 permq_4;
mov ymm3_5 permq_5;
mov ymm3_6 permq_6;
mov ymm3_7 permq_7;
mov ymm3_8 permq_8;
mov ymm3_9 permq_9;
mov ymm3_a permq_a;
mov ymm3_b permq_b;
mov ymm3_c permq_c;
mov ymm3_d permq_d;
mov ymm3_e permq_e;
mov ymm3_f permq_f;
(* vpshufb %ymm1,%ymm7,%ymm7                       #! PC = 0x5555555586e7 *)
assert true && ymm1_0 = 0x0100@16;
mov shuf_0 ymm7_0;
assert true && ymm1_1 = 0x0504@16;
mov shuf_1 ymm7_2;
assert true && ymm1_2 = 0x0908@16;
mov shuf_2 ymm7_4;
assert true && ymm1_3 = 0x0d0c@16;
mov shuf_3 ymm7_6;
assert true && ymm1_4 = 0x0302@16;
mov shuf_4 ymm7_1;
assert true && ymm1_5 = 0x0706@16;
mov shuf_5 ymm7_3;
assert true && ymm1_6 = 0x0b0a@16;
mov shuf_6 ymm7_5;
assert true && ymm1_7 = 0x0f0e@16;
mov shuf_7 ymm7_7;
assert true && ymm1_8 = 0x0100@16;
mov shuf_8 ymm7_8;
assert true && ymm1_9 = 0x0504@16;
mov shuf_9 ymm7_a;
assert true && ymm1_a = 0x0908@16;
mov shuf_a ymm7_c;
assert true && ymm1_b = 0x0d0c@16;
mov shuf_b ymm7_e;
assert true && ymm1_c = 0x0302@16;
mov shuf_c ymm7_9;
assert true && ymm1_d = 0x0706@16;
mov shuf_d ymm7_b;
assert true && ymm1_e = 0x0b0a@16;
mov shuf_e ymm7_d;
assert true && ymm1_f = 0x0f0e@16;
mov shuf_f ymm7_f;
mov ymm7_0 shuf_0;
mov ymm7_1 shuf_1;
mov ymm7_2 shuf_2;
mov ymm7_3 shuf_3;
mov ymm7_4 shuf_4;
mov ymm7_5 shuf_5;
mov ymm7_6 shuf_6;
mov ymm7_7 shuf_7;
mov ymm7_8 shuf_8;
mov ymm7_9 shuf_9;
mov ymm7_a shuf_a;
mov ymm7_b shuf_b;
mov ymm7_c shuf_c;
mov ymm7_d shuf_d;
mov ymm7_e shuf_e;
mov ymm7_f shuf_f;
(* vpermq $0xd8,%ymm7,%ymm7                        #! PC = 0x5555555586ec *)
mov permq_0 ymm7_0;
mov permq_1 ymm7_1;
mov permq_2 ymm7_2;
mov permq_3 ymm7_3;
mov permq_4 ymm7_8;
mov permq_5 ymm7_9;
mov permq_6 ymm7_a;
mov permq_7 ymm7_b;
mov permq_8 ymm7_4;
mov permq_9 ymm7_5;
mov permq_a ymm7_6;
mov permq_b ymm7_7;
mov permq_c ymm7_c;
mov permq_d ymm7_d;
mov permq_e ymm7_e;
mov permq_f ymm7_f;
mov ymm7_0 permq_0;
mov ymm7_1 permq_1;
mov ymm7_2 permq_2;
mov ymm7_3 permq_3;
mov ymm7_4 permq_4;
mov ymm7_5 permq_5;
mov ymm7_6 permq_6;
mov ymm7_7 permq_7;
mov ymm7_8 permq_8;
mov ymm7_9 permq_9;
mov ymm7_a permq_a;
mov ymm7_b permq_b;
mov ymm7_c permq_c;
mov ymm7_d permq_d;
mov ymm7_e permq_e;
mov ymm7_f permq_f;
(* vpshufb %ymm1,%ymm6,%ymm6                       #! PC = 0x5555555586f2 *)
assert true && ymm1_0 = 0x0100@16;
mov shuf_0 ymm6_0;
assert true && ymm1_1 = 0x0504@16;
mov shuf_1 ymm6_2;
assert true && ymm1_2 = 0x0908@16;
mov shuf_2 ymm6_4;
assert true && ymm1_3 = 0x0d0c@16;
mov shuf_3 ymm6_6;
assert true && ymm1_4 = 0x0302@16;
mov shuf_4 ymm6_1;
assert true && ymm1_5 = 0x0706@16;
mov shuf_5 ymm6_3;
assert true && ymm1_6 = 0x0b0a@16;
mov shuf_6 ymm6_5;
assert true && ymm1_7 = 0x0f0e@16;
mov shuf_7 ymm6_7;
assert true && ymm1_8 = 0x0100@16;
mov shuf_8 ymm6_8;
assert true && ymm1_9 = 0x0504@16;
mov shuf_9 ymm6_a;
assert true && ymm1_a = 0x0908@16;
mov shuf_a ymm6_c;
assert true && ymm1_b = 0x0d0c@16;
mov shuf_b ymm6_e;
assert true && ymm1_c = 0x0302@16;
mov shuf_c ymm6_9;
assert true && ymm1_d = 0x0706@16;
mov shuf_d ymm6_b;
assert true && ymm1_e = 0x0b0a@16;
mov shuf_e ymm6_d;
assert true && ymm1_f = 0x0f0e@16;
mov shuf_f ymm6_f;
mov ymm6_0 shuf_0;
mov ymm6_1 shuf_1;
mov ymm6_2 shuf_2;
mov ymm6_3 shuf_3;
mov ymm6_4 shuf_4;
mov ymm6_5 shuf_5;
mov ymm6_6 shuf_6;
mov ymm6_7 shuf_7;
mov ymm6_8 shuf_8;
mov ymm6_9 shuf_9;
mov ymm6_a shuf_a;
mov ymm6_b shuf_b;
mov ymm6_c shuf_c;
mov ymm6_d shuf_d;
mov ymm6_e shuf_e;
mov ymm6_f shuf_f;
(* vpermq $0xd8,%ymm6,%ymm6                        #! PC = 0x5555555586f7 *)
mov permq_0 ymm6_0;
mov permq_1 ymm6_1;
mov permq_2 ymm6_2;
mov permq_3 ymm6_3;
mov permq_4 ymm6_8;
mov permq_5 ymm6_9;
mov permq_6 ymm6_a;
mov permq_7 ymm6_b;
mov permq_8 ymm6_4;
mov permq_9 ymm6_5;
mov permq_a ymm6_6;
mov permq_b ymm6_7;
mov permq_c ymm6_c;
mov permq_d ymm6_d;
mov permq_e ymm6_e;
mov permq_f ymm6_f;
mov ymm6_0 permq_0;
mov ymm6_1 permq_1;
mov ymm6_2 permq_2;
mov ymm6_3 permq_3;
mov ymm6_4 permq_4;
mov ymm6_5 permq_5;
mov ymm6_6 permq_6;
mov ymm6_7 permq_7;
mov ymm6_8 permq_8;
mov ymm6_9 permq_9;
mov ymm6_a permq_a;
mov ymm6_b permq_b;
mov ymm6_c permq_c;
mov ymm6_d permq_d;
mov ymm6_e permq_e;
mov ymm6_f permq_f;
(* vpshufb %ymm1,%ymm5,%ymm5                       #! PC = 0x5555555586fd *)
assert true && ymm1_0 = 0x0100@16;
mov shuf_0 ymm5_0;
assert true && ymm1_1 = 0x0504@16;
mov shuf_1 ymm5_2;
assert true && ymm1_2 = 0x0908@16;
mov shuf_2 ymm5_4;
assert true && ymm1_3 = 0x0d0c@16;
mov shuf_3 ymm5_6;
assert true && ymm1_4 = 0x0302@16;
mov shuf_4 ymm5_1;
assert true && ymm1_5 = 0x0706@16;
mov shuf_5 ymm5_3;
assert true && ymm1_6 = 0x0b0a@16;
mov shuf_6 ymm5_5;
assert true && ymm1_7 = 0x0f0e@16;
mov shuf_7 ymm5_7;
assert true && ymm1_8 = 0x0100@16;
mov shuf_8 ymm5_8;
assert true && ymm1_9 = 0x0504@16;
mov shuf_9 ymm5_a;
assert true && ymm1_a = 0x0908@16;
mov shuf_a ymm5_c;
assert true && ymm1_b = 0x0d0c@16;
mov shuf_b ymm5_e;
assert true && ymm1_c = 0x0302@16;
mov shuf_c ymm5_9;
assert true && ymm1_d = 0x0706@16;
mov shuf_d ymm5_b;
assert true && ymm1_e = 0x0b0a@16;
mov shuf_e ymm5_d;
assert true && ymm1_f = 0x0f0e@16;
mov shuf_f ymm5_f;
mov ymm5_0 shuf_0;
mov ymm5_1 shuf_1;
mov ymm5_2 shuf_2;
mov ymm5_3 shuf_3;
mov ymm5_4 shuf_4;
mov ymm5_5 shuf_5;
mov ymm5_6 shuf_6;
mov ymm5_7 shuf_7;
mov ymm5_8 shuf_8;
mov ymm5_9 shuf_9;
mov ymm5_a shuf_a;
mov ymm5_b shuf_b;
mov ymm5_c shuf_c;
mov ymm5_d shuf_d;
mov ymm5_e shuf_e;
mov ymm5_f shuf_f;
(* vpermq $0xd8,%ymm5,%ymm5                        #! PC = 0x555555558702 *)
mov permq_0 ymm5_0;
mov permq_1 ymm5_1;
mov permq_2 ymm5_2;
mov permq_3 ymm5_3;
mov permq_4 ymm5_8;
mov permq_5 ymm5_9;
mov permq_6 ymm5_a;
mov permq_7 ymm5_b;
mov permq_8 ymm5_4;
mov permq_9 ymm5_5;
mov permq_a ymm5_6;
mov permq_b ymm5_7;
mov permq_c ymm5_c;
mov permq_d ymm5_d;
mov permq_e ymm5_e;
mov permq_f ymm5_f;
mov ymm5_0 permq_0;
mov ymm5_1 permq_1;
mov ymm5_2 permq_2;
mov ymm5_3 permq_3;
mov ymm5_4 permq_4;
mov ymm5_5 permq_5;
mov ymm5_6 permq_6;
mov ymm5_7 permq_7;
mov ymm5_8 permq_8;
mov ymm5_9 permq_9;
mov ymm5_a permq_a;
mov ymm5_b permq_b;
mov ymm5_c permq_c;
mov ymm5_d permq_d;
mov ymm5_e permq_e;
mov ymm5_f permq_f;
(* vpshufb %ymm1,%ymm8,%ymm8                       #! PC = 0x555555558708 *)
assert true && ymm1_0 = 0x0100@16;
mov shuf_0 ymm8_0;
assert true && ymm1_1 = 0x0504@16;
mov shuf_1 ymm8_2;
assert true && ymm1_2 = 0x0908@16;
mov shuf_2 ymm8_4;
assert true && ymm1_3 = 0x0d0c@16;
mov shuf_3 ymm8_6;
assert true && ymm1_4 = 0x0302@16;
mov shuf_4 ymm8_1;
assert true && ymm1_5 = 0x0706@16;
mov shuf_5 ymm8_3;
assert true && ymm1_6 = 0x0b0a@16;
mov shuf_6 ymm8_5;
assert true && ymm1_7 = 0x0f0e@16;
mov shuf_7 ymm8_7;
assert true && ymm1_8 = 0x0100@16;
mov shuf_8 ymm8_8;
assert true && ymm1_9 = 0x0504@16;
mov shuf_9 ymm8_a;
assert true && ymm1_a = 0x0908@16;
mov shuf_a ymm8_c;
assert true && ymm1_b = 0x0d0c@16;
mov shuf_b ymm8_e;
assert true && ymm1_c = 0x0302@16;
mov shuf_c ymm8_9;
assert true && ymm1_d = 0x0706@16;
mov shuf_d ymm8_b;
assert true && ymm1_e = 0x0b0a@16;
mov shuf_e ymm8_d;
assert true && ymm1_f = 0x0f0e@16;
mov shuf_f ymm8_f;
mov ymm8_0 shuf_0;
mov ymm8_1 shuf_1;
mov ymm8_2 shuf_2;
mov ymm8_3 shuf_3;
mov ymm8_4 shuf_4;
mov ymm8_5 shuf_5;
mov ymm8_6 shuf_6;
mov ymm8_7 shuf_7;
mov ymm8_8 shuf_8;
mov ymm8_9 shuf_9;
mov ymm8_a shuf_a;
mov ymm8_b shuf_b;
mov ymm8_c shuf_c;
mov ymm8_d shuf_d;
mov ymm8_e shuf_e;
mov ymm8_f shuf_f;
(* vpermq $0xd8,%ymm8,%ymm8                        #! PC = 0x55555555870d *)
mov permq_0 ymm8_0;
mov permq_1 ymm8_1;
mov permq_2 ymm8_2;
mov permq_3 ymm8_3;
mov permq_4 ymm8_8;
mov permq_5 ymm8_9;
mov permq_6 ymm8_a;
mov permq_7 ymm8_b;
mov permq_8 ymm8_4;
mov permq_9 ymm8_5;
mov permq_a ymm8_6;
mov permq_b ymm8_7;
mov permq_c ymm8_c;
mov permq_d ymm8_d;
mov permq_e ymm8_e;
mov permq_f ymm8_f;
mov ymm8_0 permq_0;
mov ymm8_1 permq_1;
mov ymm8_2 permq_2;
mov ymm8_3 permq_3;
mov ymm8_4 permq_4;
mov ymm8_5 permq_5;
mov ymm8_6 permq_6;
mov ymm8_7 permq_7;
mov ymm8_8 permq_8;
mov ymm8_9 permq_9;
mov ymm8_a permq_a;
mov ymm8_b permq_b;
mov ymm8_c permq_c;
mov ymm8_d permq_d;
mov ymm8_e permq_e;
mov ymm8_f permq_f;
(* vpshufb %ymm1,%ymm4,%ymm4                       #! PC = 0x555555558713 *)
assert true && ymm1_0 = 0x0100@16;
mov shuf_0 ymm4_0;
assert true && ymm1_1 = 0x0504@16;
mov shuf_1 ymm4_2;
assert true && ymm1_2 = 0x0908@16;
mov shuf_2 ymm4_4;
assert true && ymm1_3 = 0x0d0c@16;
mov shuf_3 ymm4_6;
assert true && ymm1_4 = 0x0302@16;
mov shuf_4 ymm4_1;
assert true && ymm1_5 = 0x0706@16;
mov shuf_5 ymm4_3;
assert true && ymm1_6 = 0x0b0a@16;
mov shuf_6 ymm4_5;
assert true && ymm1_7 = 0x0f0e@16;
mov shuf_7 ymm4_7;
assert true && ymm1_8 = 0x0100@16;
mov shuf_8 ymm4_8;
assert true && ymm1_9 = 0x0504@16;
mov shuf_9 ymm4_a;
assert true && ymm1_a = 0x0908@16;
mov shuf_a ymm4_c;
assert true && ymm1_b = 0x0d0c@16;
mov shuf_b ymm4_e;
assert true && ymm1_c = 0x0302@16;
mov shuf_c ymm4_9;
assert true && ymm1_d = 0x0706@16;
mov shuf_d ymm4_b;
assert true && ymm1_e = 0x0b0a@16;
mov shuf_e ymm4_d;
assert true && ymm1_f = 0x0f0e@16;
mov shuf_f ymm4_f;
mov ymm4_0 shuf_0;
mov ymm4_1 shuf_1;
mov ymm4_2 shuf_2;
mov ymm4_3 shuf_3;
mov ymm4_4 shuf_4;
mov ymm4_5 shuf_5;
mov ymm4_6 shuf_6;
mov ymm4_7 shuf_7;
mov ymm4_8 shuf_8;
mov ymm4_9 shuf_9;
mov ymm4_a shuf_a;
mov ymm4_b shuf_b;
mov ymm4_c shuf_c;
mov ymm4_d shuf_d;
mov ymm4_e shuf_e;
mov ymm4_f shuf_f;
(* vpermq $0xd8,%ymm4,%ymm4                        #! PC = 0x555555558718 *)
mov permq_0 ymm4_0;
mov permq_1 ymm4_1;
mov permq_2 ymm4_2;
mov permq_3 ymm4_3;
mov permq_4 ymm4_8;
mov permq_5 ymm4_9;
mov permq_6 ymm4_a;
mov permq_7 ymm4_b;
mov permq_8 ymm4_4;
mov permq_9 ymm4_5;
mov permq_a ymm4_6;
mov permq_b ymm4_7;
mov permq_c ymm4_c;
mov permq_d ymm4_d;
mov permq_e ymm4_e;
mov permq_f ymm4_f;
mov ymm4_0 permq_0;
mov ymm4_1 permq_1;
mov ymm4_2 permq_2;
mov ymm4_3 permq_3;
mov ymm4_4 permq_4;
mov ymm4_5 permq_5;
mov ymm4_6 permq_6;
mov ymm4_7 permq_7;
mov ymm4_8 permq_8;
mov ymm4_9 permq_9;
mov ymm4_a permq_a;
mov ymm4_b permq_b;
mov ymm4_c permq_c;
mov ymm4_d permq_d;
mov ymm4_e permq_e;
mov ymm4_f permq_f;
(* vpshufb %ymm1,%ymm11,%ymm11                     #! PC = 0x55555555871e *)
assert true && ymm1_0 = 0x0100@16;
mov shuf_0 ymm11_0;
assert true && ymm1_1 = 0x0504@16;
mov shuf_1 ymm11_2;
assert true && ymm1_2 = 0x0908@16;
mov shuf_2 ymm11_4;
assert true && ymm1_3 = 0x0d0c@16;
mov shuf_3 ymm11_6;
assert true && ymm1_4 = 0x0302@16;
mov shuf_4 ymm11_1;
assert true && ymm1_5 = 0x0706@16;
mov shuf_5 ymm11_3;
assert true && ymm1_6 = 0x0b0a@16;
mov shuf_6 ymm11_5;
assert true && ymm1_7 = 0x0f0e@16;
mov shuf_7 ymm11_7;
assert true && ymm1_8 = 0x0100@16;
mov shuf_8 ymm11_8;
assert true && ymm1_9 = 0x0504@16;
mov shuf_9 ymm11_a;
assert true && ymm1_a = 0x0908@16;
mov shuf_a ymm11_c;
assert true && ymm1_b = 0x0d0c@16;
mov shuf_b ymm11_e;
assert true && ymm1_c = 0x0302@16;
mov shuf_c ymm11_9;
assert true && ymm1_d = 0x0706@16;
mov shuf_d ymm11_b;
assert true && ymm1_e = 0x0b0a@16;
mov shuf_e ymm11_d;
assert true && ymm1_f = 0x0f0e@16;
mov shuf_f ymm11_f;
mov ymm11_0 shuf_0;
mov ymm11_1 shuf_1;
mov ymm11_2 shuf_2;
mov ymm11_3 shuf_3;
mov ymm11_4 shuf_4;
mov ymm11_5 shuf_5;
mov ymm11_6 shuf_6;
mov ymm11_7 shuf_7;
mov ymm11_8 shuf_8;
mov ymm11_9 shuf_9;
mov ymm11_a shuf_a;
mov ymm11_b shuf_b;
mov ymm11_c shuf_c;
mov ymm11_d shuf_d;
mov ymm11_e shuf_e;
mov ymm11_f shuf_f;
(* vpermq $0xd8,%ymm11,%ymm11                      #! PC = 0x555555558723 *)
mov permq_0 ymm11_0;
mov permq_1 ymm11_1;
mov permq_2 ymm11_2;
mov permq_3 ymm11_3;
mov permq_4 ymm11_8;
mov permq_5 ymm11_9;
mov permq_6 ymm11_a;
mov permq_7 ymm11_b;
mov permq_8 ymm11_4;
mov permq_9 ymm11_5;
mov permq_a ymm11_6;
mov permq_b ymm11_7;
mov permq_c ymm11_c;
mov permq_d ymm11_d;
mov permq_e ymm11_e;
mov permq_f ymm11_f;
mov ymm11_0 permq_0;
mov ymm11_1 permq_1;
mov ymm11_2 permq_2;
mov ymm11_3 permq_3;
mov ymm11_4 permq_4;
mov ymm11_5 permq_5;
mov ymm11_6 permq_6;
mov ymm11_7 permq_7;
mov ymm11_8 permq_8;
mov ymm11_9 permq_9;
mov ymm11_a permq_a;
mov ymm11_b permq_b;
mov ymm11_c permq_c;
mov ymm11_d permq_d;
mov ymm11_e permq_e;
mov ymm11_f permq_f;
(* vpunpcklwd %ymm3,%ymm9,%ymm10                   #! PC = 0x555555558729 *)
mov lwd_0 ymm9_0;
mov lwd_1 ymm3_0;
mov lwd_2 ymm9_1;
mov lwd_3 ymm3_1;
mov lwd_4 ymm9_2;
mov lwd_5 ymm3_2;
mov lwd_6 ymm9_3;
mov lwd_7 ymm3_3;
mov lwd_8 ymm9_8;
mov lwd_9 ymm3_8;
mov lwd_a ymm9_9;
mov lwd_b ymm3_9;
mov lwd_c ymm9_a;
mov lwd_d ymm3_a;
mov lwd_e ymm9_b;
mov lwd_f ymm3_b;
mov ymm10_0 lwd_0;
mov ymm10_1 lwd_1;
mov ymm10_2 lwd_2;
mov ymm10_3 lwd_3;
mov ymm10_4 lwd_4;
mov ymm10_5 lwd_5;
mov ymm10_6 lwd_6;
mov ymm10_7 lwd_7;
mov ymm10_8 lwd_8;
mov ymm10_9 lwd_9;
mov ymm10_a lwd_a;
mov ymm10_b lwd_b;
mov ymm10_c lwd_c;
mov ymm10_d lwd_d;
mov ymm10_e lwd_e;
mov ymm10_f lwd_f;
(* vpunpckhwd %ymm3,%ymm9,%ymm3                    #! PC = 0x55555555872d *)
mov hwd_0 ymm9_4;
mov hwd_1 ymm3_4;
mov hwd_2 ymm9_5;
mov hwd_3 ymm3_5;
mov hwd_4 ymm9_6;
mov hwd_5 ymm3_6;
mov hwd_6 ymm9_7;
mov hwd_7 ymm3_7;
mov hwd_8 ymm9_c;
mov hwd_9 ymm3_c;
mov hwd_a ymm9_d;
mov hwd_b ymm3_d;
mov hwd_c ymm9_e;
mov hwd_d ymm3_e;
mov hwd_e ymm9_f;
mov hwd_f ymm3_f;
mov ymm3_0 hwd_0;
mov ymm3_1 hwd_1;
mov ymm3_2 hwd_2;
mov ymm3_3 hwd_3;
mov ymm3_4 hwd_4;
mov ymm3_5 hwd_5;
mov ymm3_6 hwd_6;
mov ymm3_7 hwd_7;
mov ymm3_8 hwd_8;
mov ymm3_9 hwd_9;
mov ymm3_a hwd_a;
mov ymm3_b hwd_b;
mov ymm3_c hwd_c;
mov ymm3_d hwd_d;
mov ymm3_e hwd_e;
mov ymm3_f hwd_f;
(* vpunpcklwd %ymm6,%ymm7,%ymm9                    #! PC = 0x555555558731 *)
mov lwd_0 ymm7_0;
mov lwd_1 ymm6_0;
mov lwd_2 ymm7_1;
mov lwd_3 ymm6_1;
mov lwd_4 ymm7_2;
mov lwd_5 ymm6_2;
mov lwd_6 ymm7_3;
mov lwd_7 ymm6_3;
mov lwd_8 ymm7_8;
mov lwd_9 ymm6_8;
mov lwd_a ymm7_9;
mov lwd_b ymm6_9;
mov lwd_c ymm7_a;
mov lwd_d ymm6_a;
mov lwd_e ymm7_b;
mov lwd_f ymm6_b;
mov ymm9_0 lwd_0;
mov ymm9_1 lwd_1;
mov ymm9_2 lwd_2;
mov ymm9_3 lwd_3;
mov ymm9_4 lwd_4;
mov ymm9_5 lwd_5;
mov ymm9_6 lwd_6;
mov ymm9_7 lwd_7;
mov ymm9_8 lwd_8;
mov ymm9_9 lwd_9;
mov ymm9_a lwd_a;
mov ymm9_b lwd_b;
mov ymm9_c lwd_c;
mov ymm9_d lwd_d;
mov ymm9_e lwd_e;
mov ymm9_f lwd_f;
(* vpunpckhwd %ymm6,%ymm7,%ymm6                    #! PC = 0x555555558735 *)
mov hwd_0 ymm7_4;
mov hwd_1 ymm6_4;
mov hwd_2 ymm7_5;
mov hwd_3 ymm6_5;
mov hwd_4 ymm7_6;
mov hwd_5 ymm6_6;
mov hwd_6 ymm7_7;
mov hwd_7 ymm6_7;
mov hwd_8 ymm7_c;
mov hwd_9 ymm6_c;
mov hwd_a ymm7_d;
mov hwd_b ymm6_d;
mov hwd_c ymm7_e;
mov hwd_d ymm6_e;
mov hwd_e ymm7_f;
mov hwd_f ymm6_f;
mov ymm6_0 hwd_0;
mov ymm6_1 hwd_1;
mov ymm6_2 hwd_2;
mov ymm6_3 hwd_3;
mov ymm6_4 hwd_4;
mov ymm6_5 hwd_5;
mov ymm6_6 hwd_6;
mov ymm6_7 hwd_7;
mov ymm6_8 hwd_8;
mov ymm6_9 hwd_9;
mov ymm6_a hwd_a;
mov ymm6_b hwd_b;
mov ymm6_c hwd_c;
mov ymm6_d hwd_d;
mov ymm6_e hwd_e;
mov ymm6_f hwd_f;
(* vpunpcklwd %ymm8,%ymm5,%ymm7                    #! PC = 0x555555558739 *)
mov lwd_0 ymm5_0;
mov lwd_1 ymm8_0;
mov lwd_2 ymm5_1;
mov lwd_3 ymm8_1;
mov lwd_4 ymm5_2;
mov lwd_5 ymm8_2;
mov lwd_6 ymm5_3;
mov lwd_7 ymm8_3;
mov lwd_8 ymm5_8;
mov lwd_9 ymm8_8;
mov lwd_a ymm5_9;
mov lwd_b ymm8_9;
mov lwd_c ymm5_a;
mov lwd_d ymm8_a;
mov lwd_e ymm5_b;
mov lwd_f ymm8_b;
mov ymm7_0 lwd_0;
mov ymm7_1 lwd_1;
mov ymm7_2 lwd_2;
mov ymm7_3 lwd_3;
mov ymm7_4 lwd_4;
mov ymm7_5 lwd_5;
mov ymm7_6 lwd_6;
mov ymm7_7 lwd_7;
mov ymm7_8 lwd_8;
mov ymm7_9 lwd_9;
mov ymm7_a lwd_a;
mov ymm7_b lwd_b;
mov ymm7_c lwd_c;
mov ymm7_d lwd_d;
mov ymm7_e lwd_e;
mov ymm7_f lwd_f;
(* vpunpckhwd %ymm8,%ymm5,%ymm8                    #! PC = 0x55555555873e *)
mov hwd_0 ymm5_4;
mov hwd_1 ymm8_4;
mov hwd_2 ymm5_5;
mov hwd_3 ymm8_5;
mov hwd_4 ymm5_6;
mov hwd_5 ymm8_6;
mov hwd_6 ymm5_7;
mov hwd_7 ymm8_7;
mov hwd_8 ymm5_c;
mov hwd_9 ymm8_c;
mov hwd_a ymm5_d;
mov hwd_b ymm8_d;
mov hwd_c ymm5_e;
mov hwd_d ymm8_e;
mov hwd_e ymm5_f;
mov hwd_f ymm8_f;
mov ymm8_0 hwd_0;
mov ymm8_1 hwd_1;
mov ymm8_2 hwd_2;
mov ymm8_3 hwd_3;
mov ymm8_4 hwd_4;
mov ymm8_5 hwd_5;
mov ymm8_6 hwd_6;
mov ymm8_7 hwd_7;
mov ymm8_8 hwd_8;
mov ymm8_9 hwd_9;
mov ymm8_a hwd_a;
mov ymm8_b hwd_b;
mov ymm8_c hwd_c;
mov ymm8_d hwd_d;
mov ymm8_e hwd_e;
mov ymm8_f hwd_f;
(* vpunpcklwd %ymm11,%ymm4,%ymm5                   #! PC = 0x555555558743 *)
mov lwd_0 ymm4_0;
mov lwd_1 ymm11_0;
mov lwd_2 ymm4_1;
mov lwd_3 ymm11_1;
mov lwd_4 ymm4_2;
mov lwd_5 ymm11_2;
mov lwd_6 ymm4_3;
mov lwd_7 ymm11_3;
mov lwd_8 ymm4_8;
mov lwd_9 ymm11_8;
mov lwd_a ymm4_9;
mov lwd_b ymm11_9;
mov lwd_c ymm4_a;
mov lwd_d ymm11_a;
mov lwd_e ymm4_b;
mov lwd_f ymm11_b;
mov ymm5_0 lwd_0;
mov ymm5_1 lwd_1;
mov ymm5_2 lwd_2;
mov ymm5_3 lwd_3;
mov ymm5_4 lwd_4;
mov ymm5_5 lwd_5;
mov ymm5_6 lwd_6;
mov ymm5_7 lwd_7;
mov ymm5_8 lwd_8;
mov ymm5_9 lwd_9;
mov ymm5_a lwd_a;
mov ymm5_b lwd_b;
mov ymm5_c lwd_c;
mov ymm5_d lwd_d;
mov ymm5_e lwd_e;
mov ymm5_f lwd_f;
(* vpunpckhwd %ymm11,%ymm4,%ymm11                  #! PC = 0x555555558748 *)
mov hwd_0 ymm4_4;
mov hwd_1 ymm11_4;
mov hwd_2 ymm4_5;
mov hwd_3 ymm11_5;
mov hwd_4 ymm4_6;
mov hwd_5 ymm11_6;
mov hwd_6 ymm4_7;
mov hwd_7 ymm11_7;
mov hwd_8 ymm4_c;
mov hwd_9 ymm11_c;
mov hwd_a ymm4_d;
mov hwd_b ymm11_d;
mov hwd_c ymm4_e;
mov hwd_d ymm11_e;
mov hwd_e ymm4_f;
mov hwd_f ymm11_f;
mov ymm11_0 hwd_0;
mov ymm11_1 hwd_1;
mov ymm11_2 hwd_2;
mov ymm11_3 hwd_3;
mov ymm11_4 hwd_4;
mov ymm11_5 hwd_5;
mov ymm11_6 hwd_6;
mov ymm11_7 hwd_7;
mov ymm11_8 hwd_8;
mov ymm11_9 hwd_9;
mov ymm11_a hwd_a;
mov ymm11_b hwd_b;
mov ymm11_c hwd_c;
mov ymm11_d hwd_d;
mov ymm11_e hwd_e;
mov ymm11_f hwd_f;
(* vpbroadcastd 0x130(%rdx),%ymm1                  #! EA = L0x555555561250; Value = 0xf0ab2711fcc3398b; PC = 0x55555555874d *)
mov ymm1_0 L0x555555561250;
mov ymm1_1 L0x555555561252;
mov ymm1_2 L0x555555561250;
mov ymm1_3 L0x555555561252;
mov ymm1_4 L0x555555561250;
mov ymm1_5 L0x555555561252;
mov ymm1_6 L0x555555561250;
mov ymm1_7 L0x555555561252;
mov ymm1_8 L0x555555561250;
mov ymm1_9 L0x555555561252;
mov ymm1_a L0x555555561250;
mov ymm1_b L0x555555561252;
mov ymm1_c L0x555555561250;
mov ymm1_d L0x555555561252;
mov ymm1_e L0x555555561250;
mov ymm1_f L0x555555561252;
(* vpbroadcastd 0x330(%rdx),%ymm2                  #! EA = L0x555555561450; Value = 0xfeabf111fac3078b; PC = 0x555555558756 *)
mov ymm2_0 L0x555555561450;
mov ymm2_1 L0x555555561452;
mov ymm2_2 L0x555555561450;
mov ymm2_3 L0x555555561452;
mov ymm2_4 L0x555555561450;
mov ymm2_5 L0x555555561452;
mov ymm2_6 L0x555555561450;
mov ymm2_7 L0x555555561452;
mov ymm2_8 L0x555555561450;
mov ymm2_9 L0x555555561452;
mov ymm2_a L0x555555561450;
mov ymm2_b L0x555555561452;
mov ymm2_c L0x555555561450;
mov ymm2_d L0x555555561452;
mov ymm2_e L0x555555561450;
mov ymm2_f L0x555555561452;
(* vpmullw %ymm1,%ymm3,%ymm4                       #! PC = 0x55555555875f *)
smull mulHymm3_0 mulL_0 ymm1_0 ymm3_0;
smull mulHymm3_1 mulL_1 ymm1_1 ymm3_1;
smull mulHymm3_2 mulL_2 ymm1_2 ymm3_2;
smull mulHymm3_3 mulL_3 ymm1_3 ymm3_3;
smull mulHymm3_4 mulL_4 ymm1_4 ymm3_4;
smull mulHymm3_5 mulL_5 ymm1_5 ymm3_5;
smull mulHymm3_6 mulL_6 ymm1_6 ymm3_6;
smull mulHymm3_7 mulL_7 ymm1_7 ymm3_7;
smull mulHymm3_8 mulL_8 ymm1_8 ymm3_8;
smull mulHymm3_9 mulL_9 ymm1_9 ymm3_9;
smull mulHymm3_a mulL_a ymm1_a ymm3_a;
smull mulHymm3_b mulL_b ymm1_b ymm3_b;
smull mulHymm3_c mulL_c ymm1_c ymm3_c;
smull mulHymm3_d mulL_d ymm1_d ymm3_d;
smull mulHymm3_e mulL_e ymm1_e ymm3_e;
smull mulHymm3_f mulL_f ymm1_f ymm3_f;
cast ymm4_0@sint16 mulL_0;
cast ymm4_1@sint16 mulL_1;
cast ymm4_2@sint16 mulL_2;
cast ymm4_3@sint16 mulL_3;
cast ymm4_4@sint16 mulL_4;
cast ymm4_5@sint16 mulL_5;
cast ymm4_6@sint16 mulL_6;
cast ymm4_7@sint16 mulL_7;
cast ymm4_8@sint16 mulL_8;
cast ymm4_9@sint16 mulL_9;
cast ymm4_a@sint16 mulL_a;
cast ymm4_b@sint16 mulL_b;
cast ymm4_c@sint16 mulL_c;
cast ymm4_d@sint16 mulL_d;
cast ymm4_e@sint16 mulL_e;
cast ymm4_f@sint16 mulL_f;
(* vpmulhw %ymm2,%ymm3,%ymm3                       #! PC = 0x555555558763 *)
smull mulH_0 mulLymm3_0 ymm3_0 ymm2_0;
smull mulH_1 mulLymm3_1 ymm3_1 ymm2_1;
smull mulH_2 mulLymm3_2 ymm3_2 ymm2_2;
smull mulH_3 mulLymm3_3 ymm3_3 ymm2_3;
smull mulH_4 mulLymm3_4 ymm3_4 ymm2_4;
smull mulH_5 mulLymm3_5 ymm3_5 ymm2_5;
smull mulH_6 mulLymm3_6 ymm3_6 ymm2_6;
smull mulH_7 mulLymm3_7 ymm3_7 ymm2_7;
smull mulH_8 mulLymm3_8 ymm3_8 ymm2_8;
smull mulH_9 mulLymm3_9 ymm3_9 ymm2_9;
smull mulH_a mulLymm3_a ymm3_a ymm2_a;
smull mulH_b mulLymm3_b ymm3_b ymm2_b;
smull mulH_c mulLymm3_c ymm3_c ymm2_c;
smull mulH_d mulLymm3_d ymm3_d ymm2_d;
smull mulH_e mulLymm3_e ymm3_e ymm2_e;
smull mulH_f mulLymm3_f ymm3_f ymm2_f;
mov ymm3_0 mulH_0;
mov ymm3_1 mulH_1;
mov ymm3_2 mulH_2;
mov ymm3_3 mulH_3;
mov ymm3_4 mulH_4;
mov ymm3_5 mulH_5;
mov ymm3_6 mulH_6;
mov ymm3_7 mulH_7;
mov ymm3_8 mulH_8;
mov ymm3_9 mulH_9;
mov ymm3_a mulH_a;
mov ymm3_b mulH_b;
mov ymm3_c mulH_c;
mov ymm3_d mulH_d;
mov ymm3_e mulH_e;
mov ymm3_f mulH_f;
(* vpmulhw %ymm0,%ymm4,%ymm4                       #! PC = 0x555555558767 *)
smull mulH_0 red_0 ymm4_0 ymm0_0;
assert true && red_0 = mulLymm3_0;
assume red_0 = mulLymm3_0 && true;
smull mulH_1 red_1 ymm4_1 ymm0_1;
assert true && red_1 = mulLymm3_1;
assume red_1 = mulLymm3_1 && true;
smull mulH_2 red_2 ymm4_2 ymm0_2;
assert true && red_2 = mulLymm3_2;
assume red_2 = mulLymm3_2 && true;
smull mulH_3 red_3 ymm4_3 ymm0_3;
assert true && red_3 = mulLymm3_3;
assume red_3 = mulLymm3_3 && true;
smull mulH_4 red_4 ymm4_4 ymm0_4;
assert true && red_4 = mulLymm3_4;
assume red_4 = mulLymm3_4 && true;
smull mulH_5 red_5 ymm4_5 ymm0_5;
assert true && red_5 = mulLymm3_5;
assume red_5 = mulLymm3_5 && true;
smull mulH_6 red_6 ymm4_6 ymm0_6;
assert true && red_6 = mulLymm3_6;
assume red_6 = mulLymm3_6 && true;
smull mulH_7 red_7 ymm4_7 ymm0_7;
assert true && red_7 = mulLymm3_7;
assume red_7 = mulLymm3_7 && true;
smull mulH_8 red_8 ymm4_8 ymm0_8;
assert true && red_8 = mulLymm3_8;
assume red_8 = mulLymm3_8 && true;
smull mulH_9 red_9 ymm4_9 ymm0_9;
assert true && red_9 = mulLymm3_9;
assume red_9 = mulLymm3_9 && true;
smull mulH_a red_a ymm4_a ymm0_a;
assert true && red_a = mulLymm3_a;
assume red_a = mulLymm3_a && true;
smull mulH_b red_b ymm4_b ymm0_b;
assert true && red_b = mulLymm3_b;
assume red_b = mulLymm3_b && true;
smull mulH_c red_c ymm4_c ymm0_c;
assert true && red_c = mulLymm3_c;
assume red_c = mulLymm3_c && true;
smull mulH_d red_d ymm4_d ymm0_d;
assert true && red_d = mulLymm3_d;
assume red_d = mulLymm3_d && true;
smull mulH_e red_e ymm4_e ymm0_e;
assert true && red_e = mulLymm3_e;
assume red_e = mulLymm3_e && true;
smull mulH_f red_f ymm4_f ymm0_f;
assert true && red_f = mulLymm3_f;
assume red_f = mulLymm3_f && true;
mov ymm4_0 mulH_0;
mov ymm4_1 mulH_1;
mov ymm4_2 mulH_2;
mov ymm4_3 mulH_3;
mov ymm4_4 mulH_4;
mov ymm4_5 mulH_5;
mov ymm4_6 mulH_6;
mov ymm4_7 mulH_7;
mov ymm4_8 mulH_8;
mov ymm4_9 mulH_9;
mov ymm4_a mulH_a;
mov ymm4_b mulH_b;
mov ymm4_c mulH_c;
mov ymm4_d mulH_d;
mov ymm4_e mulH_e;
mov ymm4_f mulH_f;
(* vpsubw %ymm4,%ymm3,%ymm3                        #! PC = 0x55555555876b *)
sub ymm3_0 ymm3_0 ymm4_0;
sub ymm3_1 ymm3_1 ymm4_1;
sub ymm3_2 ymm3_2 ymm4_2;
sub ymm3_3 ymm3_3 ymm4_3;
sub ymm3_4 ymm3_4 ymm4_4;
sub ymm3_5 ymm3_5 ymm4_5;
sub ymm3_6 ymm3_6 ymm4_6;
sub ymm3_7 ymm3_7 ymm4_7;
sub ymm3_8 ymm3_8 ymm4_8;
sub ymm3_9 ymm3_9 ymm4_9;
sub ymm3_a ymm3_a ymm4_a;
sub ymm3_b ymm3_b ymm4_b;
sub ymm3_c ymm3_c ymm4_c;
sub ymm3_d ymm3_d ymm4_d;
sub ymm3_e ymm3_e ymm4_e;
sub ymm3_f ymm3_f ymm4_f;
(* vpbroadcastd 0x134(%rdx),%ymm1                  #! EA = L0x555555561254; Value = 0xf1c9c601f0ab2711; PC = 0x55555555876f *)
mov ymm1_0 L0x555555561254;
mov ymm1_1 L0x555555561256;
mov ymm1_2 L0x555555561254;
mov ymm1_3 L0x555555561256;
mov ymm1_4 L0x555555561254;
mov ymm1_5 L0x555555561256;
mov ymm1_6 L0x555555561254;
mov ymm1_7 L0x555555561256;
mov ymm1_8 L0x555555561254;
mov ymm1_9 L0x555555561256;
mov ymm1_a L0x555555561254;
mov ymm1_b L0x555555561256;
mov ymm1_c L0x555555561254;
mov ymm1_d L0x555555561256;
mov ymm1_e L0x555555561254;
mov ymm1_f L0x555555561256;
(* vpbroadcastd 0x334(%rdx),%ymm2                  #! EA = L0x555555561454; Value = 0xebc9f001feabf111; PC = 0x555555558778 *)
mov ymm2_0 L0x555555561454;
mov ymm2_1 L0x555555561456;
mov ymm2_2 L0x555555561454;
mov ymm2_3 L0x555555561456;
mov ymm2_4 L0x555555561454;
mov ymm2_5 L0x555555561456;
mov ymm2_6 L0x555555561454;
mov ymm2_7 L0x555555561456;
mov ymm2_8 L0x555555561454;
mov ymm2_9 L0x555555561456;
mov ymm2_a L0x555555561454;
mov ymm2_b L0x555555561456;
mov ymm2_c L0x555555561454;
mov ymm2_d L0x555555561456;
mov ymm2_e L0x555555561454;
mov ymm2_f L0x555555561456;
(* vpmullw %ymm1,%ymm6,%ymm4                       #! PC = 0x555555558781 *)
smull mulHymm6_0 mulL_0 ymm1_0 ymm6_0;
smull mulHymm6_1 mulL_1 ymm1_1 ymm6_1;
smull mulHymm6_2 mulL_2 ymm1_2 ymm6_2;
smull mulHymm6_3 mulL_3 ymm1_3 ymm6_3;
smull mulHymm6_4 mulL_4 ymm1_4 ymm6_4;
smull mulHymm6_5 mulL_5 ymm1_5 ymm6_5;
smull mulHymm6_6 mulL_6 ymm1_6 ymm6_6;
smull mulHymm6_7 mulL_7 ymm1_7 ymm6_7;
smull mulHymm6_8 mulL_8 ymm1_8 ymm6_8;
smull mulHymm6_9 mulL_9 ymm1_9 ymm6_9;
smull mulHymm6_a mulL_a ymm1_a ymm6_a;
smull mulHymm6_b mulL_b ymm1_b ymm6_b;
smull mulHymm6_c mulL_c ymm1_c ymm6_c;
smull mulHymm6_d mulL_d ymm1_d ymm6_d;
smull mulHymm6_e mulL_e ymm1_e ymm6_e;
smull mulHymm6_f mulL_f ymm1_f ymm6_f;
cast ymm4_0@sint16 mulL_0;
cast ymm4_1@sint16 mulL_1;
cast ymm4_2@sint16 mulL_2;
cast ymm4_3@sint16 mulL_3;
cast ymm4_4@sint16 mulL_4;
cast ymm4_5@sint16 mulL_5;
cast ymm4_6@sint16 mulL_6;
cast ymm4_7@sint16 mulL_7;
cast ymm4_8@sint16 mulL_8;
cast ymm4_9@sint16 mulL_9;
cast ymm4_a@sint16 mulL_a;
cast ymm4_b@sint16 mulL_b;
cast ymm4_c@sint16 mulL_c;
cast ymm4_d@sint16 mulL_d;
cast ymm4_e@sint16 mulL_e;
cast ymm4_f@sint16 mulL_f;
(* vpmulhw %ymm2,%ymm6,%ymm6                       #! PC = 0x555555558785 *)
smull mulH_0 mulLymm6_0 ymm6_0 ymm2_0;
smull mulH_1 mulLymm6_1 ymm6_1 ymm2_1;
smull mulH_2 mulLymm6_2 ymm6_2 ymm2_2;
smull mulH_3 mulLymm6_3 ymm6_3 ymm2_3;
smull mulH_4 mulLymm6_4 ymm6_4 ymm2_4;
smull mulH_5 mulLymm6_5 ymm6_5 ymm2_5;
smull mulH_6 mulLymm6_6 ymm6_6 ymm2_6;
smull mulH_7 mulLymm6_7 ymm6_7 ymm2_7;
smull mulH_8 mulLymm6_8 ymm6_8 ymm2_8;
smull mulH_9 mulLymm6_9 ymm6_9 ymm2_9;
smull mulH_a mulLymm6_a ymm6_a ymm2_a;
smull mulH_b mulLymm6_b ymm6_b ymm2_b;
smull mulH_c mulLymm6_c ymm6_c ymm2_c;
smull mulH_d mulLymm6_d ymm6_d ymm2_d;
smull mulH_e mulLymm6_e ymm6_e ymm2_e;
smull mulH_f mulLymm6_f ymm6_f ymm2_f;
mov ymm6_0 mulH_0;
mov ymm6_1 mulH_1;
mov ymm6_2 mulH_2;
mov ymm6_3 mulH_3;
mov ymm6_4 mulH_4;
mov ymm6_5 mulH_5;
mov ymm6_6 mulH_6;
mov ymm6_7 mulH_7;
mov ymm6_8 mulH_8;
mov ymm6_9 mulH_9;
mov ymm6_a mulH_a;
mov ymm6_b mulH_b;
mov ymm6_c mulH_c;
mov ymm6_d mulH_d;
mov ymm6_e mulH_e;
mov ymm6_f mulH_f;
(* vpmulhw %ymm0,%ymm4,%ymm4                       #! PC = 0x555555558789 *)
smull mulH_0 red_0 ymm4_0 ymm0_0;
assert true && red_0 = mulLymm6_0;
assume red_0 = mulLymm6_0 && true;
smull mulH_1 red_1 ymm4_1 ymm0_1;
assert true && red_1 = mulLymm6_1;
assume red_1 = mulLymm6_1 && true;
smull mulH_2 red_2 ymm4_2 ymm0_2;
assert true && red_2 = mulLymm6_2;
assume red_2 = mulLymm6_2 && true;
smull mulH_3 red_3 ymm4_3 ymm0_3;
assert true && red_3 = mulLymm6_3;
assume red_3 = mulLymm6_3 && true;
smull mulH_4 red_4 ymm4_4 ymm0_4;
assert true && red_4 = mulLymm6_4;
assume red_4 = mulLymm6_4 && true;
smull mulH_5 red_5 ymm4_5 ymm0_5;
assert true && red_5 = mulLymm6_5;
assume red_5 = mulLymm6_5 && true;
smull mulH_6 red_6 ymm4_6 ymm0_6;
assert true && red_6 = mulLymm6_6;
assume red_6 = mulLymm6_6 && true;
smull mulH_7 red_7 ymm4_7 ymm0_7;
assert true && red_7 = mulLymm6_7;
assume red_7 = mulLymm6_7 && true;
smull mulH_8 red_8 ymm4_8 ymm0_8;
assert true && red_8 = mulLymm6_8;
assume red_8 = mulLymm6_8 && true;
smull mulH_9 red_9 ymm4_9 ymm0_9;
assert true && red_9 = mulLymm6_9;
assume red_9 = mulLymm6_9 && true;
smull mulH_a red_a ymm4_a ymm0_a;
assert true && red_a = mulLymm6_a;
assume red_a = mulLymm6_a && true;
smull mulH_b red_b ymm4_b ymm0_b;
assert true && red_b = mulLymm6_b;
assume red_b = mulLymm6_b && true;
smull mulH_c red_c ymm4_c ymm0_c;
assert true && red_c = mulLymm6_c;
assume red_c = mulLymm6_c && true;
smull mulH_d red_d ymm4_d ymm0_d;
assert true && red_d = mulLymm6_d;
assume red_d = mulLymm6_d && true;
smull mulH_e red_e ymm4_e ymm0_e;
assert true && red_e = mulLymm6_e;
assume red_e = mulLymm6_e && true;
smull mulH_f red_f ymm4_f ymm0_f;
assert true && red_f = mulLymm6_f;
assume red_f = mulLymm6_f && true;
mov ymm4_0 mulH_0;
mov ymm4_1 mulH_1;
mov ymm4_2 mulH_2;
mov ymm4_3 mulH_3;
mov ymm4_4 mulH_4;
mov ymm4_5 mulH_5;
mov ymm4_6 mulH_6;
mov ymm4_7 mulH_7;
mov ymm4_8 mulH_8;
mov ymm4_9 mulH_9;
mov ymm4_a mulH_a;
mov ymm4_b mulH_b;
mov ymm4_c mulH_c;
mov ymm4_d mulH_d;
mov ymm4_e mulH_e;
mov ymm4_f mulH_f;
(* vpsubw %ymm4,%ymm6,%ymm6                        #! PC = 0x55555555878d *)
sub ymm6_0 ymm6_0 ymm4_0;
sub ymm6_1 ymm6_1 ymm4_1;
sub ymm6_2 ymm6_2 ymm4_2;
sub ymm6_3 ymm6_3 ymm4_3;
sub ymm6_4 ymm6_4 ymm4_4;
sub ymm6_5 ymm6_5 ymm4_5;
sub ymm6_6 ymm6_6 ymm4_6;
sub ymm6_7 ymm6_7 ymm4_7;
sub ymm6_8 ymm6_8 ymm4_8;
sub ymm6_9 ymm6_9 ymm4_9;
sub ymm6_a ymm6_a ymm4_a;
sub ymm6_b ymm6_b ymm4_b;
sub ymm6_c ymm6_c ymm4_c;
sub ymm6_d ymm6_d ymm4_d;
sub ymm6_e ymm6_e ymm4_e;
sub ymm6_f ymm6_f ymm4_f;
(* vpbroadcastd 0x138(%rdx),%ymm1                  #! EA = L0x555555561258; Value = 0x2da347bbf1c9c601; PC = 0x555555558791 *)
mov ymm1_0 L0x555555561258;
mov ymm1_1 L0x55555556125a;
mov ymm1_2 L0x555555561258;
mov ymm1_3 L0x55555556125a;
mov ymm1_4 L0x555555561258;
mov ymm1_5 L0x55555556125a;
mov ymm1_6 L0x555555561258;
mov ymm1_7 L0x55555556125a;
mov ymm1_8 L0x555555561258;
mov ymm1_9 L0x55555556125a;
mov ymm1_a L0x555555561258;
mov ymm1_b L0x55555556125a;
mov ymm1_c L0x555555561258;
mov ymm1_d L0x55555556125a;
mov ymm1_e L0x555555561258;
mov ymm1_f L0x55555556125a;
(* vpbroadcastd 0x338(%rdx),%ymm2                  #! EA = L0x555555561458; Value = 0xeba3f5bbebc9f001; PC = 0x55555555879a *)
mov ymm2_0 L0x555555561458;
mov ymm2_1 L0x55555556145a;
mov ymm2_2 L0x555555561458;
mov ymm2_3 L0x55555556145a;
mov ymm2_4 L0x555555561458;
mov ymm2_5 L0x55555556145a;
mov ymm2_6 L0x555555561458;
mov ymm2_7 L0x55555556145a;
mov ymm2_8 L0x555555561458;
mov ymm2_9 L0x55555556145a;
mov ymm2_a L0x555555561458;
mov ymm2_b L0x55555556145a;
mov ymm2_c L0x555555561458;
mov ymm2_d L0x55555556145a;
mov ymm2_e L0x555555561458;
mov ymm2_f L0x55555556145a;
(* vpmullw %ymm1,%ymm8,%ymm4                       #! PC = 0x5555555587a3 *)
smull mulHymm8_0 mulL_0 ymm1_0 ymm8_0;
smull mulHymm8_1 mulL_1 ymm1_1 ymm8_1;
smull mulHymm8_2 mulL_2 ymm1_2 ymm8_2;
smull mulHymm8_3 mulL_3 ymm1_3 ymm8_3;
smull mulHymm8_4 mulL_4 ymm1_4 ymm8_4;
smull mulHymm8_5 mulL_5 ymm1_5 ymm8_5;
smull mulHymm8_6 mulL_6 ymm1_6 ymm8_6;
smull mulHymm8_7 mulL_7 ymm1_7 ymm8_7;
smull mulHymm8_8 mulL_8 ymm1_8 ymm8_8;
smull mulHymm8_9 mulL_9 ymm1_9 ymm8_9;
smull mulHymm8_a mulL_a ymm1_a ymm8_a;
smull mulHymm8_b mulL_b ymm1_b ymm8_b;
smull mulHymm8_c mulL_c ymm1_c ymm8_c;
smull mulHymm8_d mulL_d ymm1_d ymm8_d;
smull mulHymm8_e mulL_e ymm1_e ymm8_e;
smull mulHymm8_f mulL_f ymm1_f ymm8_f;
cast ymm4_0@sint16 mulL_0;
cast ymm4_1@sint16 mulL_1;
cast ymm4_2@sint16 mulL_2;
cast ymm4_3@sint16 mulL_3;
cast ymm4_4@sint16 mulL_4;
cast ymm4_5@sint16 mulL_5;
cast ymm4_6@sint16 mulL_6;
cast ymm4_7@sint16 mulL_7;
cast ymm4_8@sint16 mulL_8;
cast ymm4_9@sint16 mulL_9;
cast ymm4_a@sint16 mulL_a;
cast ymm4_b@sint16 mulL_b;
cast ymm4_c@sint16 mulL_c;
cast ymm4_d@sint16 mulL_d;
cast ymm4_e@sint16 mulL_e;
cast ymm4_f@sint16 mulL_f;
(* vpmulhw %ymm2,%ymm8,%ymm8                       #! PC = 0x5555555587a7 *)
smull mulH_0 mulLymm8_0 ymm8_0 ymm2_0;
smull mulH_1 mulLymm8_1 ymm8_1 ymm2_1;
smull mulH_2 mulLymm8_2 ymm8_2 ymm2_2;
smull mulH_3 mulLymm8_3 ymm8_3 ymm2_3;
smull mulH_4 mulLymm8_4 ymm8_4 ymm2_4;
smull mulH_5 mulLymm8_5 ymm8_5 ymm2_5;
smull mulH_6 mulLymm8_6 ymm8_6 ymm2_6;
smull mulH_7 mulLymm8_7 ymm8_7 ymm2_7;
smull mulH_8 mulLymm8_8 ymm8_8 ymm2_8;
smull mulH_9 mulLymm8_9 ymm8_9 ymm2_9;
smull mulH_a mulLymm8_a ymm8_a ymm2_a;
smull mulH_b mulLymm8_b ymm8_b ymm2_b;
smull mulH_c mulLymm8_c ymm8_c ymm2_c;
smull mulH_d mulLymm8_d ymm8_d ymm2_d;
smull mulH_e mulLymm8_e ymm8_e ymm2_e;
smull mulH_f mulLymm8_f ymm8_f ymm2_f;
mov ymm8_0 mulH_0;
mov ymm8_1 mulH_1;
mov ymm8_2 mulH_2;
mov ymm8_3 mulH_3;
mov ymm8_4 mulH_4;
mov ymm8_5 mulH_5;
mov ymm8_6 mulH_6;
mov ymm8_7 mulH_7;
mov ymm8_8 mulH_8;
mov ymm8_9 mulH_9;
mov ymm8_a mulH_a;
mov ymm8_b mulH_b;
mov ymm8_c mulH_c;
mov ymm8_d mulH_d;
mov ymm8_e mulH_e;
mov ymm8_f mulH_f;
(* vpmulhw %ymm0,%ymm4,%ymm4                       #! PC = 0x5555555587ab *)
smull mulH_0 red_0 ymm4_0 ymm0_0;
assert true && red_0 = mulLymm8_0;
assume red_0 = mulLymm8_0 && true;
smull mulH_1 red_1 ymm4_1 ymm0_1;
assert true && red_1 = mulLymm8_1;
assume red_1 = mulLymm8_1 && true;
smull mulH_2 red_2 ymm4_2 ymm0_2;
assert true && red_2 = mulLymm8_2;
assume red_2 = mulLymm8_2 && true;
smull mulH_3 red_3 ymm4_3 ymm0_3;
assert true && red_3 = mulLymm8_3;
assume red_3 = mulLymm8_3 && true;
smull mulH_4 red_4 ymm4_4 ymm0_4;
assert true && red_4 = mulLymm8_4;
assume red_4 = mulLymm8_4 && true;
smull mulH_5 red_5 ymm4_5 ymm0_5;
assert true && red_5 = mulLymm8_5;
assume red_5 = mulLymm8_5 && true;
smull mulH_6 red_6 ymm4_6 ymm0_6;
assert true && red_6 = mulLymm8_6;
assume red_6 = mulLymm8_6 && true;
smull mulH_7 red_7 ymm4_7 ymm0_7;
assert true && red_7 = mulLymm8_7;
assume red_7 = mulLymm8_7 && true;
smull mulH_8 red_8 ymm4_8 ymm0_8;
assert true && red_8 = mulLymm8_8;
assume red_8 = mulLymm8_8 && true;
smull mulH_9 red_9 ymm4_9 ymm0_9;
assert true && red_9 = mulLymm8_9;
assume red_9 = mulLymm8_9 && true;
smull mulH_a red_a ymm4_a ymm0_a;
assert true && red_a = mulLymm8_a;
assume red_a = mulLymm8_a && true;
smull mulH_b red_b ymm4_b ymm0_b;
assert true && red_b = mulLymm8_b;
assume red_b = mulLymm8_b && true;
smull mulH_c red_c ymm4_c ymm0_c;
assert true && red_c = mulLymm8_c;
assume red_c = mulLymm8_c && true;
smull mulH_d red_d ymm4_d ymm0_d;
assert true && red_d = mulLymm8_d;
assume red_d = mulLymm8_d && true;
smull mulH_e red_e ymm4_e ymm0_e;
assert true && red_e = mulLymm8_e;
assume red_e = mulLymm8_e && true;
smull mulH_f red_f ymm4_f ymm0_f;
assert true && red_f = mulLymm8_f;
assume red_f = mulLymm8_f && true;
mov ymm4_0 mulH_0;
mov ymm4_1 mulH_1;
mov ymm4_2 mulH_2;
mov ymm4_3 mulH_3;
mov ymm4_4 mulH_4;
mov ymm4_5 mulH_5;
mov ymm4_6 mulH_6;
mov ymm4_7 mulH_7;
mov ymm4_8 mulH_8;
mov ymm4_9 mulH_9;
mov ymm4_a mulH_a;
mov ymm4_b mulH_b;
mov ymm4_c mulH_c;
mov ymm4_d mulH_d;
mov ymm4_e mulH_e;
mov ymm4_f mulH_f;
(* vpsubw %ymm4,%ymm8,%ymm8                        #! PC = 0x5555555587af *)
sub ymm8_0 ymm8_0 ymm4_0;
sub ymm8_1 ymm8_1 ymm4_1;
sub ymm8_2 ymm8_2 ymm4_2;
sub ymm8_3 ymm8_3 ymm4_3;
sub ymm8_4 ymm8_4 ymm4_4;
sub ymm8_5 ymm8_5 ymm4_5;
sub ymm8_6 ymm8_6 ymm4_6;
sub ymm8_7 ymm8_7 ymm4_7;
sub ymm8_8 ymm8_8 ymm4_8;
sub ymm8_9 ymm8_9 ymm4_9;
sub ymm8_a ymm8_a ymm4_a;
sub ymm8_b ymm8_b ymm4_b;
sub ymm8_c ymm8_c ymm4_c;
sub ymm8_d ymm8_d ymm4_d;
sub ymm8_e ymm8_e ymm4_e;
sub ymm8_f ymm8_f ymm4_f;
(* vpbroadcastd 0x13c(%rdx),%ymm1                  #! EA = L0x55555556125c; Value = 0xa62111ed2da347bb; PC = 0x5555555587b3 *)
mov ymm1_0 L0x55555556125c;
mov ymm1_1 L0x55555556125e;
mov ymm1_2 L0x55555556125c;
mov ymm1_3 L0x55555556125e;
mov ymm1_4 L0x55555556125c;
mov ymm1_5 L0x55555556125e;
mov ymm1_6 L0x55555556125c;
mov ymm1_7 L0x55555556125e;
mov ymm1_8 L0x55555556125c;
mov ymm1_9 L0x55555556125e;
mov ymm1_a L0x55555556125c;
mov ymm1_b L0x55555556125e;
mov ymm1_c L0x55555556125c;
mov ymm1_d L0x55555556125e;
mov ymm1_e L0x55555556125c;
mov ymm1_f L0x55555556125e;
(* vpbroadcastd 0x33c(%rdx),%ymm2                  #! EA = L0x55555556145c; Value = 0x1021f3edeba3f5bb; PC = 0x5555555587bc *)
mov ymm2_0 L0x55555556145c;
mov ymm2_1 L0x55555556145e;
mov ymm2_2 L0x55555556145c;
mov ymm2_3 L0x55555556145e;
mov ymm2_4 L0x55555556145c;
mov ymm2_5 L0x55555556145e;
mov ymm2_6 L0x55555556145c;
mov ymm2_7 L0x55555556145e;
mov ymm2_8 L0x55555556145c;
mov ymm2_9 L0x55555556145e;
mov ymm2_a L0x55555556145c;
mov ymm2_b L0x55555556145e;
mov ymm2_c L0x55555556145c;
mov ymm2_d L0x55555556145e;
mov ymm2_e L0x55555556145c;
mov ymm2_f L0x55555556145e;
(* vpmullw %ymm1,%ymm11,%ymm4                      #! PC = 0x5555555587c5 *)
smull mulHymm11_0 mulL_0 ymm1_0 ymm11_0;
smull mulHymm11_1 mulL_1 ymm1_1 ymm11_1;
smull mulHymm11_2 mulL_2 ymm1_2 ymm11_2;
smull mulHymm11_3 mulL_3 ymm1_3 ymm11_3;
smull mulHymm11_4 mulL_4 ymm1_4 ymm11_4;
smull mulHymm11_5 mulL_5 ymm1_5 ymm11_5;
smull mulHymm11_6 mulL_6 ymm1_6 ymm11_6;
smull mulHymm11_7 mulL_7 ymm1_7 ymm11_7;
smull mulHymm11_8 mulL_8 ymm1_8 ymm11_8;
smull mulHymm11_9 mulL_9 ymm1_9 ymm11_9;
smull mulHymm11_a mulL_a ymm1_a ymm11_a;
smull mulHymm11_b mulL_b ymm1_b ymm11_b;
smull mulHymm11_c mulL_c ymm1_c ymm11_c;
smull mulHymm11_d mulL_d ymm1_d ymm11_d;
smull mulHymm11_e mulL_e ymm1_e ymm11_e;
smull mulHymm11_f mulL_f ymm1_f ymm11_f;
cast ymm4_0@sint16 mulL_0;
cast ymm4_1@sint16 mulL_1;
cast ymm4_2@sint16 mulL_2;
cast ymm4_3@sint16 mulL_3;
cast ymm4_4@sint16 mulL_4;
cast ymm4_5@sint16 mulL_5;
cast ymm4_6@sint16 mulL_6;
cast ymm4_7@sint16 mulL_7;
cast ymm4_8@sint16 mulL_8;
cast ymm4_9@sint16 mulL_9;
cast ymm4_a@sint16 mulL_a;
cast ymm4_b@sint16 mulL_b;
cast ymm4_c@sint16 mulL_c;
cast ymm4_d@sint16 mulL_d;
cast ymm4_e@sint16 mulL_e;
cast ymm4_f@sint16 mulL_f;
(* vpmulhw %ymm2,%ymm11,%ymm11                     #! PC = 0x5555555587c9 *)
smull mulH_0 mulLymm11_0 ymm11_0 ymm2_0;
smull mulH_1 mulLymm11_1 ymm11_1 ymm2_1;
smull mulH_2 mulLymm11_2 ymm11_2 ymm2_2;
smull mulH_3 mulLymm11_3 ymm11_3 ymm2_3;
smull mulH_4 mulLymm11_4 ymm11_4 ymm2_4;
smull mulH_5 mulLymm11_5 ymm11_5 ymm2_5;
smull mulH_6 mulLymm11_6 ymm11_6 ymm2_6;
smull mulH_7 mulLymm11_7 ymm11_7 ymm2_7;
smull mulH_8 mulLymm11_8 ymm11_8 ymm2_8;
smull mulH_9 mulLymm11_9 ymm11_9 ymm2_9;
smull mulH_a mulLymm11_a ymm11_a ymm2_a;
smull mulH_b mulLymm11_b ymm11_b ymm2_b;
smull mulH_c mulLymm11_c ymm11_c ymm2_c;
smull mulH_d mulLymm11_d ymm11_d ymm2_d;
smull mulH_e mulLymm11_e ymm11_e ymm2_e;
smull mulH_f mulLymm11_f ymm11_f ymm2_f;
mov ymm11_0 mulH_0;
mov ymm11_1 mulH_1;
mov ymm11_2 mulH_2;
mov ymm11_3 mulH_3;
mov ymm11_4 mulH_4;
mov ymm11_5 mulH_5;
mov ymm11_6 mulH_6;
mov ymm11_7 mulH_7;
mov ymm11_8 mulH_8;
mov ymm11_9 mulH_9;
mov ymm11_a mulH_a;
mov ymm11_b mulH_b;
mov ymm11_c mulH_c;
mov ymm11_d mulH_d;
mov ymm11_e mulH_e;
mov ymm11_f mulH_f;
(* vpmulhw %ymm0,%ymm4,%ymm4                       #! PC = 0x5555555587cd *)
smull mulH_0 red_0 ymm4_0 ymm0_0;
assert true && red_0 = mulLymm11_0;
assume red_0 = mulLymm11_0 && true;
smull mulH_1 red_1 ymm4_1 ymm0_1;
assert true && red_1 = mulLymm11_1;
assume red_1 = mulLymm11_1 && true;
smull mulH_2 red_2 ymm4_2 ymm0_2;
assert true && red_2 = mulLymm11_2;
assume red_2 = mulLymm11_2 && true;
smull mulH_3 red_3 ymm4_3 ymm0_3;
assert true && red_3 = mulLymm11_3;
assume red_3 = mulLymm11_3 && true;
smull mulH_4 red_4 ymm4_4 ymm0_4;
assert true && red_4 = mulLymm11_4;
assume red_4 = mulLymm11_4 && true;
smull mulH_5 red_5 ymm4_5 ymm0_5;
assert true && red_5 = mulLymm11_5;
assume red_5 = mulLymm11_5 && true;
smull mulH_6 red_6 ymm4_6 ymm0_6;
assert true && red_6 = mulLymm11_6;
assume red_6 = mulLymm11_6 && true;
smull mulH_7 red_7 ymm4_7 ymm0_7;
assert true && red_7 = mulLymm11_7;
assume red_7 = mulLymm11_7 && true;
smull mulH_8 red_8 ymm4_8 ymm0_8;
assert true && red_8 = mulLymm11_8;
assume red_8 = mulLymm11_8 && true;
smull mulH_9 red_9 ymm4_9 ymm0_9;
assert true && red_9 = mulLymm11_9;
assume red_9 = mulLymm11_9 && true;
smull mulH_a red_a ymm4_a ymm0_a;
assert true && red_a = mulLymm11_a;
assume red_a = mulLymm11_a && true;
smull mulH_b red_b ymm4_b ymm0_b;
assert true && red_b = mulLymm11_b;
assume red_b = mulLymm11_b && true;
smull mulH_c red_c ymm4_c ymm0_c;
assert true && red_c = mulLymm11_c;
assume red_c = mulLymm11_c && true;
smull mulH_d red_d ymm4_d ymm0_d;
assert true && red_d = mulLymm11_d;
assume red_d = mulLymm11_d && true;
smull mulH_e red_e ymm4_e ymm0_e;
assert true && red_e = mulLymm11_e;
assume red_e = mulLymm11_e && true;
smull mulH_f red_f ymm4_f ymm0_f;
assert true && red_f = mulLymm11_f;
assume red_f = mulLymm11_f && true;
mov ymm4_0 mulH_0;
mov ymm4_1 mulH_1;
mov ymm4_2 mulH_2;
mov ymm4_3 mulH_3;
mov ymm4_4 mulH_4;
mov ymm4_5 mulH_5;
mov ymm4_6 mulH_6;
mov ymm4_7 mulH_7;
mov ymm4_8 mulH_8;
mov ymm4_9 mulH_9;
mov ymm4_a mulH_a;
mov ymm4_b mulH_b;
mov ymm4_c mulH_c;
mov ymm4_d mulH_d;
mov ymm4_e mulH_e;
mov ymm4_f mulH_f;
(* vpsubw %ymm4,%ymm11,%ymm11                      #! PC = 0x5555555587d1 *)
sub ymm11_0 ymm11_0 ymm4_0;
sub ymm11_1 ymm11_1 ymm4_1;
sub ymm11_2 ymm11_2 ymm4_2;
sub ymm11_3 ymm11_3 ymm4_3;
sub ymm11_4 ymm11_4 ymm4_4;
sub ymm11_5 ymm11_5 ymm4_5;
sub ymm11_6 ymm11_6 ymm4_6;
sub ymm11_7 ymm11_7 ymm4_7;
sub ymm11_8 ymm11_8 ymm4_8;
sub ymm11_9 ymm11_9 ymm4_9;
sub ymm11_a ymm11_a ymm4_a;
sub ymm11_b ymm11_b ymm4_b;
sub ymm11_c ymm11_c ymm4_c;
sub ymm11_d ymm11_d ymm4_d;
sub ymm11_e ymm11_e ymm4_e;
sub ymm11_f ymm11_f ymm4_f;
(* vpmullw %ymm14,%ymm10,%ymm4                     #! PC = 0x5555555587d5 *)
smull mulHymm10_0 mulL_0 ymm14_0 ymm10_0;
smull mulHymm10_1 mulL_1 ymm14_1 ymm10_1;
smull mulHymm10_2 mulL_2 ymm14_2 ymm10_2;
smull mulHymm10_3 mulL_3 ymm14_3 ymm10_3;
smull mulHymm10_4 mulL_4 ymm14_4 ymm10_4;
smull mulHymm10_5 mulL_5 ymm14_5 ymm10_5;
smull mulHymm10_6 mulL_6 ymm14_6 ymm10_6;
smull mulHymm10_7 mulL_7 ymm14_7 ymm10_7;
smull mulHymm10_8 mulL_8 ymm14_8 ymm10_8;
smull mulHymm10_9 mulL_9 ymm14_9 ymm10_9;
smull mulHymm10_a mulL_a ymm14_a ymm10_a;
smull mulHymm10_b mulL_b ymm14_b ymm10_b;
smull mulHymm10_c mulL_c ymm14_c ymm10_c;
smull mulHymm10_d mulL_d ymm14_d ymm10_d;
smull mulHymm10_e mulL_e ymm14_e ymm10_e;
smull mulHymm10_f mulL_f ymm14_f ymm10_f;
cast ymm4_0@sint16 mulL_0;
cast ymm4_1@sint16 mulL_1;
cast ymm4_2@sint16 mulL_2;
cast ymm4_3@sint16 mulL_3;
cast ymm4_4@sint16 mulL_4;
cast ymm4_5@sint16 mulL_5;
cast ymm4_6@sint16 mulL_6;
cast ymm4_7@sint16 mulL_7;
cast ymm4_8@sint16 mulL_8;
cast ymm4_9@sint16 mulL_9;
cast ymm4_a@sint16 mulL_a;
cast ymm4_b@sint16 mulL_b;
cast ymm4_c@sint16 mulL_c;
cast ymm4_d@sint16 mulL_d;
cast ymm4_e@sint16 mulL_e;
cast ymm4_f@sint16 mulL_f;
(* vpmulhw %ymm15,%ymm10,%ymm10                    #! PC = 0x5555555587da *)
smull mulH_0 mulLymm10_0 ymm10_0 ymm15_0;
smull mulH_1 mulLymm10_1 ymm10_1 ymm15_1;
smull mulH_2 mulLymm10_2 ymm10_2 ymm15_2;
smull mulH_3 mulLymm10_3 ymm10_3 ymm15_3;
smull mulH_4 mulLymm10_4 ymm10_4 ymm15_4;
smull mulH_5 mulLymm10_5 ymm10_5 ymm15_5;
smull mulH_6 mulLymm10_6 ymm10_6 ymm15_6;
smull mulH_7 mulLymm10_7 ymm10_7 ymm15_7;
smull mulH_8 mulLymm10_8 ymm10_8 ymm15_8;
smull mulH_9 mulLymm10_9 ymm10_9 ymm15_9;
smull mulH_a mulLymm10_a ymm10_a ymm15_a;
smull mulH_b mulLymm10_b ymm10_b ymm15_b;
smull mulH_c mulLymm10_c ymm10_c ymm15_c;
smull mulH_d mulLymm10_d ymm10_d ymm15_d;
smull mulH_e mulLymm10_e ymm10_e ymm15_e;
smull mulH_f mulLymm10_f ymm10_f ymm15_f;
mov ymm10_0 mulH_0;
mov ymm10_1 mulH_1;
mov ymm10_2 mulH_2;
mov ymm10_3 mulH_3;
mov ymm10_4 mulH_4;
mov ymm10_5 mulH_5;
mov ymm10_6 mulH_6;
mov ymm10_7 mulH_7;
mov ymm10_8 mulH_8;
mov ymm10_9 mulH_9;
mov ymm10_a mulH_a;
mov ymm10_b mulH_b;
mov ymm10_c mulH_c;
mov ymm10_d mulH_d;
mov ymm10_e mulH_e;
mov ymm10_f mulH_f;
(* vpmulhw %ymm0,%ymm4,%ymm4                       #! PC = 0x5555555587df *)
smull mulH_0 red_0 ymm4_0 ymm0_0;
assert true && red_0 = mulLymm10_0;
assume red_0 = mulLymm10_0 && true;
smull mulH_1 red_1 ymm4_1 ymm0_1;
assert true && red_1 = mulLymm10_1;
assume red_1 = mulLymm10_1 && true;
smull mulH_2 red_2 ymm4_2 ymm0_2;
assert true && red_2 = mulLymm10_2;
assume red_2 = mulLymm10_2 && true;
smull mulH_3 red_3 ymm4_3 ymm0_3;
assert true && red_3 = mulLymm10_3;
assume red_3 = mulLymm10_3 && true;
smull mulH_4 red_4 ymm4_4 ymm0_4;
assert true && red_4 = mulLymm10_4;
assume red_4 = mulLymm10_4 && true;
smull mulH_5 red_5 ymm4_5 ymm0_5;
assert true && red_5 = mulLymm10_5;
assume red_5 = mulLymm10_5 && true;
smull mulH_6 red_6 ymm4_6 ymm0_6;
assert true && red_6 = mulLymm10_6;
assume red_6 = mulLymm10_6 && true;
smull mulH_7 red_7 ymm4_7 ymm0_7;
assert true && red_7 = mulLymm10_7;
assume red_7 = mulLymm10_7 && true;
smull mulH_8 red_8 ymm4_8 ymm0_8;
assert true && red_8 = mulLymm10_8;
assume red_8 = mulLymm10_8 && true;
smull mulH_9 red_9 ymm4_9 ymm0_9;
assert true && red_9 = mulLymm10_9;
assume red_9 = mulLymm10_9 && true;
smull mulH_a red_a ymm4_a ymm0_a;
assert true && red_a = mulLymm10_a;
assume red_a = mulLymm10_a && true;
smull mulH_b red_b ymm4_b ymm0_b;
assert true && red_b = mulLymm10_b;
assume red_b = mulLymm10_b && true;
smull mulH_c red_c ymm4_c ymm0_c;
assert true && red_c = mulLymm10_c;
assume red_c = mulLymm10_c && true;
smull mulH_d red_d ymm4_d ymm0_d;
assert true && red_d = mulLymm10_d;
assume red_d = mulLymm10_d && true;
smull mulH_e red_e ymm4_e ymm0_e;
assert true && red_e = mulLymm10_e;
assume red_e = mulLymm10_e && true;
smull mulH_f red_f ymm4_f ymm0_f;
assert true && red_f = mulLymm10_f;
assume red_f = mulLymm10_f && true;
mov ymm4_0 mulH_0;
mov ymm4_1 mulH_1;
mov ymm4_2 mulH_2;
mov ymm4_3 mulH_3;
mov ymm4_4 mulH_4;
mov ymm4_5 mulH_5;
mov ymm4_6 mulH_6;
mov ymm4_7 mulH_7;
mov ymm4_8 mulH_8;
mov ymm4_9 mulH_9;
mov ymm4_a mulH_a;
mov ymm4_b mulH_b;
mov ymm4_c mulH_c;
mov ymm4_d mulH_d;
mov ymm4_e mulH_e;
mov ymm4_f mulH_f;
(* vpsubw %ymm4,%ymm10,%ymm10                      #! PC = 0x5555555587e3 *)
sub ymm10_0 ymm10_0 ymm4_0;
sub ymm10_1 ymm10_1 ymm4_1;
sub ymm10_2 ymm10_2 ymm4_2;
sub ymm10_3 ymm10_3 ymm4_3;
sub ymm10_4 ymm10_4 ymm4_4;
sub ymm10_5 ymm10_5 ymm4_5;
sub ymm10_6 ymm10_6 ymm4_6;
sub ymm10_7 ymm10_7 ymm4_7;
sub ymm10_8 ymm10_8 ymm4_8;
sub ymm10_9 ymm10_9 ymm4_9;
sub ymm10_a ymm10_a ymm4_a;
sub ymm10_b ymm10_b ymm4_b;
sub ymm10_c ymm10_c ymm4_c;
sub ymm10_d ymm10_d ymm4_d;
sub ymm10_e ymm10_e ymm4_e;
sub ymm10_f ymm10_f ymm4_f;
(* vpmullw %ymm14,%ymm9,%ymm4                      #! PC = 0x5555555587e7 *)
smull mulHymm9_0 mulL_0 ymm14_0 ymm9_0;
smull mulHymm9_1 mulL_1 ymm14_1 ymm9_1;
smull mulHymm9_2 mulL_2 ymm14_2 ymm9_2;
smull mulHymm9_3 mulL_3 ymm14_3 ymm9_3;
smull mulHymm9_4 mulL_4 ymm14_4 ymm9_4;
smull mulHymm9_5 mulL_5 ymm14_5 ymm9_5;
smull mulHymm9_6 mulL_6 ymm14_6 ymm9_6;
smull mulHymm9_7 mulL_7 ymm14_7 ymm9_7;
smull mulHymm9_8 mulL_8 ymm14_8 ymm9_8;
smull mulHymm9_9 mulL_9 ymm14_9 ymm9_9;
smull mulHymm9_a mulL_a ymm14_a ymm9_a;
smull mulHymm9_b mulL_b ymm14_b ymm9_b;
smull mulHymm9_c mulL_c ymm14_c ymm9_c;
smull mulHymm9_d mulL_d ymm14_d ymm9_d;
smull mulHymm9_e mulL_e ymm14_e ymm9_e;
smull mulHymm9_f mulL_f ymm14_f ymm9_f;
cast ymm4_0@sint16 mulL_0;
cast ymm4_1@sint16 mulL_1;
cast ymm4_2@sint16 mulL_2;
cast ymm4_3@sint16 mulL_3;
cast ymm4_4@sint16 mulL_4;
cast ymm4_5@sint16 mulL_5;
cast ymm4_6@sint16 mulL_6;
cast ymm4_7@sint16 mulL_7;
cast ymm4_8@sint16 mulL_8;
cast ymm4_9@sint16 mulL_9;
cast ymm4_a@sint16 mulL_a;
cast ymm4_b@sint16 mulL_b;
cast ymm4_c@sint16 mulL_c;
cast ymm4_d@sint16 mulL_d;
cast ymm4_e@sint16 mulL_e;
cast ymm4_f@sint16 mulL_f;
(* vpmulhw %ymm15,%ymm9,%ymm9                      #! PC = 0x5555555587ec *)
smull mulH_0 mulLymm9_0 ymm9_0 ymm15_0;
smull mulH_1 mulLymm9_1 ymm9_1 ymm15_1;
smull mulH_2 mulLymm9_2 ymm9_2 ymm15_2;
smull mulH_3 mulLymm9_3 ymm9_3 ymm15_3;
smull mulH_4 mulLymm9_4 ymm9_4 ymm15_4;
smull mulH_5 mulLymm9_5 ymm9_5 ymm15_5;
smull mulH_6 mulLymm9_6 ymm9_6 ymm15_6;
smull mulH_7 mulLymm9_7 ymm9_7 ymm15_7;
smull mulH_8 mulLymm9_8 ymm9_8 ymm15_8;
smull mulH_9 mulLymm9_9 ymm9_9 ymm15_9;
smull mulH_a mulLymm9_a ymm9_a ymm15_a;
smull mulH_b mulLymm9_b ymm9_b ymm15_b;
smull mulH_c mulLymm9_c ymm9_c ymm15_c;
smull mulH_d mulLymm9_d ymm9_d ymm15_d;
smull mulH_e mulLymm9_e ymm9_e ymm15_e;
smull mulH_f mulLymm9_f ymm9_f ymm15_f;
mov ymm9_0 mulH_0;
mov ymm9_1 mulH_1;
mov ymm9_2 mulH_2;
mov ymm9_3 mulH_3;
mov ymm9_4 mulH_4;
mov ymm9_5 mulH_5;
mov ymm9_6 mulH_6;
mov ymm9_7 mulH_7;
mov ymm9_8 mulH_8;
mov ymm9_9 mulH_9;
mov ymm9_a mulH_a;
mov ymm9_b mulH_b;
mov ymm9_c mulH_c;
mov ymm9_d mulH_d;
mov ymm9_e mulH_e;
mov ymm9_f mulH_f;
(* vpmulhw %ymm0,%ymm4,%ymm4                       #! PC = 0x5555555587f1 *)
smull mulH_0 red_0 ymm4_0 ymm0_0;
assert true && red_0 = mulLymm9_0;
assume red_0 = mulLymm9_0 && true;
smull mulH_1 red_1 ymm4_1 ymm0_1;
assert true && red_1 = mulLymm9_1;
assume red_1 = mulLymm9_1 && true;
smull mulH_2 red_2 ymm4_2 ymm0_2;
assert true && red_2 = mulLymm9_2;
assume red_2 = mulLymm9_2 && true;
smull mulH_3 red_3 ymm4_3 ymm0_3;
assert true && red_3 = mulLymm9_3;
assume red_3 = mulLymm9_3 && true;
smull mulH_4 red_4 ymm4_4 ymm0_4;
assert true && red_4 = mulLymm9_4;
assume red_4 = mulLymm9_4 && true;
smull mulH_5 red_5 ymm4_5 ymm0_5;
assert true && red_5 = mulLymm9_5;
assume red_5 = mulLymm9_5 && true;
smull mulH_6 red_6 ymm4_6 ymm0_6;
assert true && red_6 = mulLymm9_6;
assume red_6 = mulLymm9_6 && true;
smull mulH_7 red_7 ymm4_7 ymm0_7;
assert true && red_7 = mulLymm9_7;
assume red_7 = mulLymm9_7 && true;
smull mulH_8 red_8 ymm4_8 ymm0_8;
assert true && red_8 = mulLymm9_8;
assume red_8 = mulLymm9_8 && true;
smull mulH_9 red_9 ymm4_9 ymm0_9;
assert true && red_9 = mulLymm9_9;
assume red_9 = mulLymm9_9 && true;
smull mulH_a red_a ymm4_a ymm0_a;
assert true && red_a = mulLymm9_a;
assume red_a = mulLymm9_a && true;
smull mulH_b red_b ymm4_b ymm0_b;
assert true && red_b = mulLymm9_b;
assume red_b = mulLymm9_b && true;
smull mulH_c red_c ymm4_c ymm0_c;
assert true && red_c = mulLymm9_c;
assume red_c = mulLymm9_c && true;
smull mulH_d red_d ymm4_d ymm0_d;
assert true && red_d = mulLymm9_d;
assume red_d = mulLymm9_d && true;
smull mulH_e red_e ymm4_e ymm0_e;
assert true && red_e = mulLymm9_e;
assume red_e = mulLymm9_e && true;
smull mulH_f red_f ymm4_f ymm0_f;
assert true && red_f = mulLymm9_f;
assume red_f = mulLymm9_f && true;
mov ymm4_0 mulH_0;
mov ymm4_1 mulH_1;
mov ymm4_2 mulH_2;
mov ymm4_3 mulH_3;
mov ymm4_4 mulH_4;
mov ymm4_5 mulH_5;
mov ymm4_6 mulH_6;
mov ymm4_7 mulH_7;
mov ymm4_8 mulH_8;
mov ymm4_9 mulH_9;
mov ymm4_a mulH_a;
mov ymm4_b mulH_b;
mov ymm4_c mulH_c;
mov ymm4_d mulH_d;
mov ymm4_e mulH_e;
mov ymm4_f mulH_f;
(* vpsubw %ymm4,%ymm9,%ymm9                        #! PC = 0x5555555587f5 *)
sub ymm9_0 ymm9_0 ymm4_0;
sub ymm9_1 ymm9_1 ymm4_1;
sub ymm9_2 ymm9_2 ymm4_2;
sub ymm9_3 ymm9_3 ymm4_3;
sub ymm9_4 ymm9_4 ymm4_4;
sub ymm9_5 ymm9_5 ymm4_5;
sub ymm9_6 ymm9_6 ymm4_6;
sub ymm9_7 ymm9_7 ymm4_7;
sub ymm9_8 ymm9_8 ymm4_8;
sub ymm9_9 ymm9_9 ymm4_9;
sub ymm9_a ymm9_a ymm4_a;
sub ymm9_b ymm9_b ymm4_b;
sub ymm9_c ymm9_c ymm4_c;
sub ymm9_d ymm9_d ymm4_d;
sub ymm9_e ymm9_e ymm4_e;
sub ymm9_f ymm9_f ymm4_f;
(* vpmullw %ymm14,%ymm7,%ymm4                      #! PC = 0x5555555587f9 *)
smull mulHymm7_0 mulL_0 ymm14_0 ymm7_0;
smull mulHymm7_1 mulL_1 ymm14_1 ymm7_1;
smull mulHymm7_2 mulL_2 ymm14_2 ymm7_2;
smull mulHymm7_3 mulL_3 ymm14_3 ymm7_3;
smull mulHymm7_4 mulL_4 ymm14_4 ymm7_4;
smull mulHymm7_5 mulL_5 ymm14_5 ymm7_5;
smull mulHymm7_6 mulL_6 ymm14_6 ymm7_6;
smull mulHymm7_7 mulL_7 ymm14_7 ymm7_7;
smull mulHymm7_8 mulL_8 ymm14_8 ymm7_8;
smull mulHymm7_9 mulL_9 ymm14_9 ymm7_9;
smull mulHymm7_a mulL_a ymm14_a ymm7_a;
smull mulHymm7_b mulL_b ymm14_b ymm7_b;
smull mulHymm7_c mulL_c ymm14_c ymm7_c;
smull mulHymm7_d mulL_d ymm14_d ymm7_d;
smull mulHymm7_e mulL_e ymm14_e ymm7_e;
smull mulHymm7_f mulL_f ymm14_f ymm7_f;
cast ymm4_0@sint16 mulL_0;
cast ymm4_1@sint16 mulL_1;
cast ymm4_2@sint16 mulL_2;
cast ymm4_3@sint16 mulL_3;
cast ymm4_4@sint16 mulL_4;
cast ymm4_5@sint16 mulL_5;
cast ymm4_6@sint16 mulL_6;
cast ymm4_7@sint16 mulL_7;
cast ymm4_8@sint16 mulL_8;
cast ymm4_9@sint16 mulL_9;
cast ymm4_a@sint16 mulL_a;
cast ymm4_b@sint16 mulL_b;
cast ymm4_c@sint16 mulL_c;
cast ymm4_d@sint16 mulL_d;
cast ymm4_e@sint16 mulL_e;
cast ymm4_f@sint16 mulL_f;
(* vpmulhw %ymm15,%ymm7,%ymm7                      #! PC = 0x5555555587fe *)
smull mulH_0 mulLymm7_0 ymm7_0 ymm15_0;
smull mulH_1 mulLymm7_1 ymm7_1 ymm15_1;
smull mulH_2 mulLymm7_2 ymm7_2 ymm15_2;
smull mulH_3 mulLymm7_3 ymm7_3 ymm15_3;
smull mulH_4 mulLymm7_4 ymm7_4 ymm15_4;
smull mulH_5 mulLymm7_5 ymm7_5 ymm15_5;
smull mulH_6 mulLymm7_6 ymm7_6 ymm15_6;
smull mulH_7 mulLymm7_7 ymm7_7 ymm15_7;
smull mulH_8 mulLymm7_8 ymm7_8 ymm15_8;
smull mulH_9 mulLymm7_9 ymm7_9 ymm15_9;
smull mulH_a mulLymm7_a ymm7_a ymm15_a;
smull mulH_b mulLymm7_b ymm7_b ymm15_b;
smull mulH_c mulLymm7_c ymm7_c ymm15_c;
smull mulH_d mulLymm7_d ymm7_d ymm15_d;
smull mulH_e mulLymm7_e ymm7_e ymm15_e;
smull mulH_f mulLymm7_f ymm7_f ymm15_f;
mov ymm7_0 mulH_0;
mov ymm7_1 mulH_1;
mov ymm7_2 mulH_2;
mov ymm7_3 mulH_3;
mov ymm7_4 mulH_4;
mov ymm7_5 mulH_5;
mov ymm7_6 mulH_6;
mov ymm7_7 mulH_7;
mov ymm7_8 mulH_8;
mov ymm7_9 mulH_9;
mov ymm7_a mulH_a;
mov ymm7_b mulH_b;
mov ymm7_c mulH_c;
mov ymm7_d mulH_d;
mov ymm7_e mulH_e;
mov ymm7_f mulH_f;
(* vpmulhw %ymm0,%ymm4,%ymm4                       #! PC = 0x555555558803 *)
smull mulH_0 red_0 ymm4_0 ymm0_0;
assert true && red_0 = mulLymm7_0;
assume red_0 = mulLymm7_0 && true;
smull mulH_1 red_1 ymm4_1 ymm0_1;
assert true && red_1 = mulLymm7_1;
assume red_1 = mulLymm7_1 && true;
smull mulH_2 red_2 ymm4_2 ymm0_2;
assert true && red_2 = mulLymm7_2;
assume red_2 = mulLymm7_2 && true;
smull mulH_3 red_3 ymm4_3 ymm0_3;
assert true && red_3 = mulLymm7_3;
assume red_3 = mulLymm7_3 && true;
smull mulH_4 red_4 ymm4_4 ymm0_4;
assert true && red_4 = mulLymm7_4;
assume red_4 = mulLymm7_4 && true;
smull mulH_5 red_5 ymm4_5 ymm0_5;
assert true && red_5 = mulLymm7_5;
assume red_5 = mulLymm7_5 && true;
smull mulH_6 red_6 ymm4_6 ymm0_6;
assert true && red_6 = mulLymm7_6;
assume red_6 = mulLymm7_6 && true;
smull mulH_7 red_7 ymm4_7 ymm0_7;
assert true && red_7 = mulLymm7_7;
assume red_7 = mulLymm7_7 && true;
smull mulH_8 red_8 ymm4_8 ymm0_8;
assert true && red_8 = mulLymm7_8;
assume red_8 = mulLymm7_8 && true;
smull mulH_9 red_9 ymm4_9 ymm0_9;
assert true && red_9 = mulLymm7_9;
assume red_9 = mulLymm7_9 && true;
smull mulH_a red_a ymm4_a ymm0_a;
assert true && red_a = mulLymm7_a;
assume red_a = mulLymm7_a && true;
smull mulH_b red_b ymm4_b ymm0_b;
assert true && red_b = mulLymm7_b;
assume red_b = mulLymm7_b && true;
smull mulH_c red_c ymm4_c ymm0_c;
assert true && red_c = mulLymm7_c;
assume red_c = mulLymm7_c && true;
smull mulH_d red_d ymm4_d ymm0_d;
assert true && red_d = mulLymm7_d;
assume red_d = mulLymm7_d && true;
smull mulH_e red_e ymm4_e ymm0_e;
assert true && red_e = mulLymm7_e;
assume red_e = mulLymm7_e && true;
smull mulH_f red_f ymm4_f ymm0_f;
assert true && red_f = mulLymm7_f;
assume red_f = mulLymm7_f && true;
mov ymm4_0 mulH_0;
mov ymm4_1 mulH_1;
mov ymm4_2 mulH_2;
mov ymm4_3 mulH_3;
mov ymm4_4 mulH_4;
mov ymm4_5 mulH_5;
mov ymm4_6 mulH_6;
mov ymm4_7 mulH_7;
mov ymm4_8 mulH_8;
mov ymm4_9 mulH_9;
mov ymm4_a mulH_a;
mov ymm4_b mulH_b;
mov ymm4_c mulH_c;
mov ymm4_d mulH_d;
mov ymm4_e mulH_e;
mov ymm4_f mulH_f;
(* vpsubw %ymm4,%ymm7,%ymm7                        #! PC = 0x555555558807 *)
sub ymm7_0 ymm7_0 ymm4_0;
sub ymm7_1 ymm7_1 ymm4_1;
sub ymm7_2 ymm7_2 ymm4_2;
sub ymm7_3 ymm7_3 ymm4_3;
sub ymm7_4 ymm7_4 ymm4_4;
sub ymm7_5 ymm7_5 ymm4_5;
sub ymm7_6 ymm7_6 ymm4_6;
sub ymm7_7 ymm7_7 ymm4_7;
sub ymm7_8 ymm7_8 ymm4_8;
sub ymm7_9 ymm7_9 ymm4_9;
sub ymm7_a ymm7_a ymm4_a;
sub ymm7_b ymm7_b ymm4_b;
sub ymm7_c ymm7_c ymm4_c;
sub ymm7_d ymm7_d ymm4_d;
sub ymm7_e ymm7_e ymm4_e;
sub ymm7_f ymm7_f ymm4_f;
(* vpmullw %ymm14,%ymm5,%ymm4                      #! PC = 0x55555555880b *)
smull mulHymm5_0 mulL_0 ymm14_0 ymm5_0;
smull mulHymm5_1 mulL_1 ymm14_1 ymm5_1;
smull mulHymm5_2 mulL_2 ymm14_2 ymm5_2;
smull mulHymm5_3 mulL_3 ymm14_3 ymm5_3;
smull mulHymm5_4 mulL_4 ymm14_4 ymm5_4;
smull mulHymm5_5 mulL_5 ymm14_5 ymm5_5;
smull mulHymm5_6 mulL_6 ymm14_6 ymm5_6;
smull mulHymm5_7 mulL_7 ymm14_7 ymm5_7;
smull mulHymm5_8 mulL_8 ymm14_8 ymm5_8;
smull mulHymm5_9 mulL_9 ymm14_9 ymm5_9;
smull mulHymm5_a mulL_a ymm14_a ymm5_a;
smull mulHymm5_b mulL_b ymm14_b ymm5_b;
smull mulHymm5_c mulL_c ymm14_c ymm5_c;
smull mulHymm5_d mulL_d ymm14_d ymm5_d;
smull mulHymm5_e mulL_e ymm14_e ymm5_e;
smull mulHymm5_f mulL_f ymm14_f ymm5_f;
cast ymm4_0@sint16 mulL_0;
cast ymm4_1@sint16 mulL_1;
cast ymm4_2@sint16 mulL_2;
cast ymm4_3@sint16 mulL_3;
cast ymm4_4@sint16 mulL_4;
cast ymm4_5@sint16 mulL_5;
cast ymm4_6@sint16 mulL_6;
cast ymm4_7@sint16 mulL_7;
cast ymm4_8@sint16 mulL_8;
cast ymm4_9@sint16 mulL_9;
cast ymm4_a@sint16 mulL_a;
cast ymm4_b@sint16 mulL_b;
cast ymm4_c@sint16 mulL_c;
cast ymm4_d@sint16 mulL_d;
cast ymm4_e@sint16 mulL_e;
cast ymm4_f@sint16 mulL_f;
(* vpmulhw %ymm15,%ymm5,%ymm5                      #! PC = 0x555555558810 *)
smull mulH_0 mulLymm5_0 ymm5_0 ymm15_0;
smull mulH_1 mulLymm5_1 ymm5_1 ymm15_1;
smull mulH_2 mulLymm5_2 ymm5_2 ymm15_2;
smull mulH_3 mulLymm5_3 ymm5_3 ymm15_3;
smull mulH_4 mulLymm5_4 ymm5_4 ymm15_4;
smull mulH_5 mulLymm5_5 ymm5_5 ymm15_5;
smull mulH_6 mulLymm5_6 ymm5_6 ymm15_6;
smull mulH_7 mulLymm5_7 ymm5_7 ymm15_7;
smull mulH_8 mulLymm5_8 ymm5_8 ymm15_8;
smull mulH_9 mulLymm5_9 ymm5_9 ymm15_9;
smull mulH_a mulLymm5_a ymm5_a ymm15_a;
smull mulH_b mulLymm5_b ymm5_b ymm15_b;
smull mulH_c mulLymm5_c ymm5_c ymm15_c;
smull mulH_d mulLymm5_d ymm5_d ymm15_d;
smull mulH_e mulLymm5_e ymm5_e ymm15_e;
smull mulH_f mulLymm5_f ymm5_f ymm15_f;
mov ymm5_0 mulH_0;
mov ymm5_1 mulH_1;
mov ymm5_2 mulH_2;
mov ymm5_3 mulH_3;
mov ymm5_4 mulH_4;
mov ymm5_5 mulH_5;
mov ymm5_6 mulH_6;
mov ymm5_7 mulH_7;
mov ymm5_8 mulH_8;
mov ymm5_9 mulH_9;
mov ymm5_a mulH_a;
mov ymm5_b mulH_b;
mov ymm5_c mulH_c;
mov ymm5_d mulH_d;
mov ymm5_e mulH_e;
mov ymm5_f mulH_f;
(* vpmulhw %ymm0,%ymm4,%ymm4                       #! PC = 0x555555558815 *)
smull mulH_0 red_0 ymm4_0 ymm0_0;
assert true && red_0 = mulLymm5_0;
assume red_0 = mulLymm5_0 && true;
smull mulH_1 red_1 ymm4_1 ymm0_1;
assert true && red_1 = mulLymm5_1;
assume red_1 = mulLymm5_1 && true;
smull mulH_2 red_2 ymm4_2 ymm0_2;
assert true && red_2 = mulLymm5_2;
assume red_2 = mulLymm5_2 && true;
smull mulH_3 red_3 ymm4_3 ymm0_3;
assert true && red_3 = mulLymm5_3;
assume red_3 = mulLymm5_3 && true;
smull mulH_4 red_4 ymm4_4 ymm0_4;
assert true && red_4 = mulLymm5_4;
assume red_4 = mulLymm5_4 && true;
smull mulH_5 red_5 ymm4_5 ymm0_5;
assert true && red_5 = mulLymm5_5;
assume red_5 = mulLymm5_5 && true;
smull mulH_6 red_6 ymm4_6 ymm0_6;
assert true && red_6 = mulLymm5_6;
assume red_6 = mulLymm5_6 && true;
smull mulH_7 red_7 ymm4_7 ymm0_7;
assert true && red_7 = mulLymm5_7;
assume red_7 = mulLymm5_7 && true;
smull mulH_8 red_8 ymm4_8 ymm0_8;
assert true && red_8 = mulLymm5_8;
assume red_8 = mulLymm5_8 && true;
smull mulH_9 red_9 ymm4_9 ymm0_9;
assert true && red_9 = mulLymm5_9;
assume red_9 = mulLymm5_9 && true;
smull mulH_a red_a ymm4_a ymm0_a;
assert true && red_a = mulLymm5_a;
assume red_a = mulLymm5_a && true;
smull mulH_b red_b ymm4_b ymm0_b;
assert true && red_b = mulLymm5_b;
assume red_b = mulLymm5_b && true;
smull mulH_c red_c ymm4_c ymm0_c;
assert true && red_c = mulLymm5_c;
assume red_c = mulLymm5_c && true;
smull mulH_d red_d ymm4_d ymm0_d;
assert true && red_d = mulLymm5_d;
assume red_d = mulLymm5_d && true;
smull mulH_e red_e ymm4_e ymm0_e;
assert true && red_e = mulLymm5_e;
assume red_e = mulLymm5_e && true;
smull mulH_f red_f ymm4_f ymm0_f;
assert true && red_f = mulLymm5_f;
assume red_f = mulLymm5_f && true;
mov ymm4_0 mulH_0;
mov ymm4_1 mulH_1;
mov ymm4_2 mulH_2;
mov ymm4_3 mulH_3;
mov ymm4_4 mulH_4;
mov ymm4_5 mulH_5;
mov ymm4_6 mulH_6;
mov ymm4_7 mulH_7;
mov ymm4_8 mulH_8;
mov ymm4_9 mulH_9;
mov ymm4_a mulH_a;
mov ymm4_b mulH_b;
mov ymm4_c mulH_c;
mov ymm4_d mulH_d;
mov ymm4_e mulH_e;
mov ymm4_f mulH_f;
(* vpsubw %ymm4,%ymm5,%ymm5                        #! PC = 0x555555558819 *)
sub ymm5_0 ymm5_0 ymm4_0;
sub ymm5_1 ymm5_1 ymm4_1;
sub ymm5_2 ymm5_2 ymm4_2;
sub ymm5_3 ymm5_3 ymm4_3;
sub ymm5_4 ymm5_4 ymm4_4;
sub ymm5_5 ymm5_5 ymm4_5;
sub ymm5_6 ymm5_6 ymm4_6;
sub ymm5_7 ymm5_7 ymm4_7;
sub ymm5_8 ymm5_8 ymm4_8;
sub ymm5_9 ymm5_9 ymm4_9;
sub ymm5_a ymm5_a ymm4_a;
sub ymm5_b ymm5_b ymm4_b;
sub ymm5_c ymm5_c ymm4_c;
sub ymm5_d ymm5_d ymm4_d;
sub ymm5_e ymm5_e ymm4_e;
sub ymm5_f ymm5_f ymm4_f;
(* vpaddw %ymm3,%ymm10,%ymm4                       #! PC = 0x55555555881d *)
add ymm4_0 ymm10_0 ymm3_0;
add ymm4_1 ymm10_1 ymm3_1;
add ymm4_2 ymm10_2 ymm3_2;
add ymm4_3 ymm10_3 ymm3_3;
add ymm4_4 ymm10_4 ymm3_4;
add ymm4_5 ymm10_5 ymm3_5;
add ymm4_6 ymm10_6 ymm3_6;
add ymm4_7 ymm10_7 ymm3_7;
add ymm4_8 ymm10_8 ymm3_8;
add ymm4_9 ymm10_9 ymm3_9;
add ymm4_a ymm10_a ymm3_a;
add ymm4_b ymm10_b ymm3_b;
add ymm4_c ymm10_c ymm3_c;
add ymm4_d ymm10_d ymm3_d;
add ymm4_e ymm10_e ymm3_e;
add ymm4_f ymm10_f ymm3_f;
(* vpsubw %ymm3,%ymm10,%ymm3                       #! PC = 0x555555558821 *)
sub ymm3_0 ymm10_0 ymm3_0;
sub ymm3_1 ymm10_1 ymm3_1;
sub ymm3_2 ymm10_2 ymm3_2;
sub ymm3_3 ymm10_3 ymm3_3;
sub ymm3_4 ymm10_4 ymm3_4;
sub ymm3_5 ymm10_5 ymm3_5;
sub ymm3_6 ymm10_6 ymm3_6;
sub ymm3_7 ymm10_7 ymm3_7;
sub ymm3_8 ymm10_8 ymm3_8;
sub ymm3_9 ymm10_9 ymm3_9;
sub ymm3_a ymm10_a ymm3_a;
sub ymm3_b ymm10_b ymm3_b;
sub ymm3_c ymm10_c ymm3_c;
sub ymm3_d ymm10_d ymm3_d;
sub ymm3_e ymm10_e ymm3_e;
sub ymm3_f ymm10_f ymm3_f;
(* vpaddw %ymm6,%ymm9,%ymm10                       #! PC = 0x555555558825 *)
add ymm10_0 ymm9_0 ymm6_0;
add ymm10_1 ymm9_1 ymm6_1;
add ymm10_2 ymm9_2 ymm6_2;
add ymm10_3 ymm9_3 ymm6_3;
add ymm10_4 ymm9_4 ymm6_4;
add ymm10_5 ymm9_5 ymm6_5;
add ymm10_6 ymm9_6 ymm6_6;
add ymm10_7 ymm9_7 ymm6_7;
add ymm10_8 ymm9_8 ymm6_8;
add ymm10_9 ymm9_9 ymm6_9;
add ymm10_a ymm9_a ymm6_a;
add ymm10_b ymm9_b ymm6_b;
add ymm10_c ymm9_c ymm6_c;
add ymm10_d ymm9_d ymm6_d;
add ymm10_e ymm9_e ymm6_e;
add ymm10_f ymm9_f ymm6_f;
(* vpsubw %ymm6,%ymm9,%ymm6                        #! PC = 0x555555558829 *)
sub ymm6_0 ymm9_0 ymm6_0;
sub ymm6_1 ymm9_1 ymm6_1;
sub ymm6_2 ymm9_2 ymm6_2;
sub ymm6_3 ymm9_3 ymm6_3;
sub ymm6_4 ymm9_4 ymm6_4;
sub ymm6_5 ymm9_5 ymm6_5;
sub ymm6_6 ymm9_6 ymm6_6;
sub ymm6_7 ymm9_7 ymm6_7;
sub ymm6_8 ymm9_8 ymm6_8;
sub ymm6_9 ymm9_9 ymm6_9;
sub ymm6_a ymm9_a ymm6_a;
sub ymm6_b ymm9_b ymm6_b;
sub ymm6_c ymm9_c ymm6_c;
sub ymm6_d ymm9_d ymm6_d;
sub ymm6_e ymm9_e ymm6_e;
sub ymm6_f ymm9_f ymm6_f;
(* vpaddw %ymm8,%ymm7,%ymm9                        #! PC = 0x55555555882d *)
add ymm9_0 ymm7_0 ymm8_0;
add ymm9_1 ymm7_1 ymm8_1;
add ymm9_2 ymm7_2 ymm8_2;
add ymm9_3 ymm7_3 ymm8_3;
add ymm9_4 ymm7_4 ymm8_4;
add ymm9_5 ymm7_5 ymm8_5;
add ymm9_6 ymm7_6 ymm8_6;
add ymm9_7 ymm7_7 ymm8_7;
add ymm9_8 ymm7_8 ymm8_8;
add ymm9_9 ymm7_9 ymm8_9;
add ymm9_a ymm7_a ymm8_a;
add ymm9_b ymm7_b ymm8_b;
add ymm9_c ymm7_c ymm8_c;
add ymm9_d ymm7_d ymm8_d;
add ymm9_e ymm7_e ymm8_e;
add ymm9_f ymm7_f ymm8_f;
(* vpsubw %ymm8,%ymm7,%ymm8                        #! PC = 0x555555558832 *)
sub ymm8_0 ymm7_0 ymm8_0;
sub ymm8_1 ymm7_1 ymm8_1;
sub ymm8_2 ymm7_2 ymm8_2;
sub ymm8_3 ymm7_3 ymm8_3;
sub ymm8_4 ymm7_4 ymm8_4;
sub ymm8_5 ymm7_5 ymm8_5;
sub ymm8_6 ymm7_6 ymm8_6;
sub ymm8_7 ymm7_7 ymm8_7;
sub ymm8_8 ymm7_8 ymm8_8;
sub ymm8_9 ymm7_9 ymm8_9;
sub ymm8_a ymm7_a ymm8_a;
sub ymm8_b ymm7_b ymm8_b;
sub ymm8_c ymm7_c ymm8_c;
sub ymm8_d ymm7_d ymm8_d;
sub ymm8_e ymm7_e ymm8_e;
sub ymm8_f ymm7_f ymm8_f;
(* vpaddw %ymm11,%ymm5,%ymm7                       #! PC = 0x555555558837 *)
add ymm7_0 ymm5_0 ymm11_0;
add ymm7_1 ymm5_1 ymm11_1;
add ymm7_2 ymm5_2 ymm11_2;
add ymm7_3 ymm5_3 ymm11_3;
add ymm7_4 ymm5_4 ymm11_4;
add ymm7_5 ymm5_5 ymm11_5;
add ymm7_6 ymm5_6 ymm11_6;
add ymm7_7 ymm5_7 ymm11_7;
add ymm7_8 ymm5_8 ymm11_8;
add ymm7_9 ymm5_9 ymm11_9;
add ymm7_a ymm5_a ymm11_a;
add ymm7_b ymm5_b ymm11_b;
add ymm7_c ymm5_c ymm11_c;
add ymm7_d ymm5_d ymm11_d;
add ymm7_e ymm5_e ymm11_e;
add ymm7_f ymm5_f ymm11_f;
(* vpsubw %ymm11,%ymm5,%ymm11                      #! PC = 0x55555555883c *)
sub ymm11_0 ymm5_0 ymm11_0;
sub ymm11_1 ymm5_1 ymm11_1;
sub ymm11_2 ymm5_2 ymm11_2;
sub ymm11_3 ymm5_3 ymm11_3;
sub ymm11_4 ymm5_4 ymm11_4;
sub ymm11_5 ymm5_5 ymm11_5;
sub ymm11_6 ymm5_6 ymm11_6;
sub ymm11_7 ymm5_7 ymm11_7;
sub ymm11_8 ymm5_8 ymm11_8;
sub ymm11_9 ymm5_9 ymm11_9;
sub ymm11_a ymm5_a ymm11_a;
sub ymm11_b ymm5_b ymm11_b;
sub ymm11_c ymm5_c ymm11_c;
sub ymm11_d ymm5_d ymm11_d;
sub ymm11_e ymm5_e ymm11_e;
sub ymm11_f ymm5_f ymm11_f;
(* vpunpcklwd %ymm3,%ymm4,%ymm5                    #! PC = 0x555555558841 *)
mov lwd_0 ymm4_0;
mov lwd_1 ymm3_0;
mov lwd_2 ymm4_1;
mov lwd_3 ymm3_1;
mov lwd_4 ymm4_2;
mov lwd_5 ymm3_2;
mov lwd_6 ymm4_3;
mov lwd_7 ymm3_3;
mov lwd_8 ymm4_8;
mov lwd_9 ymm3_8;
mov lwd_a ymm4_9;
mov lwd_b ymm3_9;
mov lwd_c ymm4_a;
mov lwd_d ymm3_a;
mov lwd_e ymm4_b;
mov lwd_f ymm3_b;
mov ymm5_0 lwd_0;
mov ymm5_1 lwd_1;
mov ymm5_2 lwd_2;
mov ymm5_3 lwd_3;
mov ymm5_4 lwd_4;
mov ymm5_5 lwd_5;
mov ymm5_6 lwd_6;
mov ymm5_7 lwd_7;
mov ymm5_8 lwd_8;
mov ymm5_9 lwd_9;
mov ymm5_a lwd_a;
mov ymm5_b lwd_b;
mov ymm5_c lwd_c;
mov ymm5_d lwd_d;
mov ymm5_e lwd_e;
mov ymm5_f lwd_f;
(* vpunpckhwd %ymm3,%ymm4,%ymm3                    #! PC = 0x555555558845 *)
mov hwd_0 ymm4_4;
mov hwd_1 ymm3_4;
mov hwd_2 ymm4_5;
mov hwd_3 ymm3_5;
mov hwd_4 ymm4_6;
mov hwd_5 ymm3_6;
mov hwd_6 ymm4_7;
mov hwd_7 ymm3_7;
mov hwd_8 ymm4_c;
mov hwd_9 ymm3_c;
mov hwd_a ymm4_d;
mov hwd_b ymm3_d;
mov hwd_c ymm4_e;
mov hwd_d ymm3_e;
mov hwd_e ymm4_f;
mov hwd_f ymm3_f;
mov ymm3_0 hwd_0;
mov ymm3_1 hwd_1;
mov ymm3_2 hwd_2;
mov ymm3_3 hwd_3;
mov ymm3_4 hwd_4;
mov ymm3_5 hwd_5;
mov ymm3_6 hwd_6;
mov ymm3_7 hwd_7;
mov ymm3_8 hwd_8;
mov ymm3_9 hwd_9;
mov ymm3_a hwd_a;
mov ymm3_b hwd_b;
mov ymm3_c hwd_c;
mov ymm3_d hwd_d;
mov ymm3_e hwd_e;
mov ymm3_f hwd_f;
(* vpunpcklwd %ymm6,%ymm10,%ymm4                   #! PC = 0x555555558849 *)
mov lwd_0 ymm10_0;
mov lwd_1 ymm6_0;
mov lwd_2 ymm10_1;
mov lwd_3 ymm6_1;
mov lwd_4 ymm10_2;
mov lwd_5 ymm6_2;
mov lwd_6 ymm10_3;
mov lwd_7 ymm6_3;
mov lwd_8 ymm10_8;
mov lwd_9 ymm6_8;
mov lwd_a ymm10_9;
mov lwd_b ymm6_9;
mov lwd_c ymm10_a;
mov lwd_d ymm6_a;
mov lwd_e ymm10_b;
mov lwd_f ymm6_b;
mov ymm4_0 lwd_0;
mov ymm4_1 lwd_1;
mov ymm4_2 lwd_2;
mov ymm4_3 lwd_3;
mov ymm4_4 lwd_4;
mov ymm4_5 lwd_5;
mov ymm4_6 lwd_6;
mov ymm4_7 lwd_7;
mov ymm4_8 lwd_8;
mov ymm4_9 lwd_9;
mov ymm4_a lwd_a;
mov ymm4_b lwd_b;
mov ymm4_c lwd_c;
mov ymm4_d lwd_d;
mov ymm4_e lwd_e;
mov ymm4_f lwd_f;
(* vpunpckhwd %ymm6,%ymm10,%ymm6                   #! PC = 0x55555555884d *)
mov hwd_0 ymm10_4;
mov hwd_1 ymm6_4;
mov hwd_2 ymm10_5;
mov hwd_3 ymm6_5;
mov hwd_4 ymm10_6;
mov hwd_5 ymm6_6;
mov hwd_6 ymm10_7;
mov hwd_7 ymm6_7;
mov hwd_8 ymm10_c;
mov hwd_9 ymm6_c;
mov hwd_a ymm10_d;
mov hwd_b ymm6_d;
mov hwd_c ymm10_e;
mov hwd_d ymm6_e;
mov hwd_e ymm10_f;
mov hwd_f ymm6_f;
mov ymm6_0 hwd_0;
mov ymm6_1 hwd_1;
mov ymm6_2 hwd_2;
mov ymm6_3 hwd_3;
mov ymm6_4 hwd_4;
mov ymm6_5 hwd_5;
mov ymm6_6 hwd_6;
mov ymm6_7 hwd_7;
mov ymm6_8 hwd_8;
mov ymm6_9 hwd_9;
mov ymm6_a hwd_a;
mov ymm6_b hwd_b;
mov ymm6_c hwd_c;
mov ymm6_d hwd_d;
mov ymm6_e hwd_e;
mov ymm6_f hwd_f;
(* vpunpcklwd %ymm8,%ymm9,%ymm10                   #! PC = 0x555555558851 *)
mov lwd_0 ymm9_0;
mov lwd_1 ymm8_0;
mov lwd_2 ymm9_1;
mov lwd_3 ymm8_1;
mov lwd_4 ymm9_2;
mov lwd_5 ymm8_2;
mov lwd_6 ymm9_3;
mov lwd_7 ymm8_3;
mov lwd_8 ymm9_8;
mov lwd_9 ymm8_8;
mov lwd_a ymm9_9;
mov lwd_b ymm8_9;
mov lwd_c ymm9_a;
mov lwd_d ymm8_a;
mov lwd_e ymm9_b;
mov lwd_f ymm8_b;
mov ymm10_0 lwd_0;
mov ymm10_1 lwd_1;
mov ymm10_2 lwd_2;
mov ymm10_3 lwd_3;
mov ymm10_4 lwd_4;
mov ymm10_5 lwd_5;
mov ymm10_6 lwd_6;
mov ymm10_7 lwd_7;
mov ymm10_8 lwd_8;
mov ymm10_9 lwd_9;
mov ymm10_a lwd_a;
mov ymm10_b lwd_b;
mov ymm10_c lwd_c;
mov ymm10_d lwd_d;
mov ymm10_e lwd_e;
mov ymm10_f lwd_f;
(* vpunpckhwd %ymm8,%ymm9,%ymm8                    #! PC = 0x555555558856 *)
mov hwd_0 ymm9_4;
mov hwd_1 ymm8_4;
mov hwd_2 ymm9_5;
mov hwd_3 ymm8_5;
mov hwd_4 ymm9_6;
mov hwd_5 ymm8_6;
mov hwd_6 ymm9_7;
mov hwd_7 ymm8_7;
mov hwd_8 ymm9_c;
mov hwd_9 ymm8_c;
mov hwd_a ymm9_d;
mov hwd_b ymm8_d;
mov hwd_c ymm9_e;
mov hwd_d ymm8_e;
mov hwd_e ymm9_f;
mov hwd_f ymm8_f;
mov ymm8_0 hwd_0;
mov ymm8_1 hwd_1;
mov ymm8_2 hwd_2;
mov ymm8_3 hwd_3;
mov ymm8_4 hwd_4;
mov ymm8_5 hwd_5;
mov ymm8_6 hwd_6;
mov ymm8_7 hwd_7;
mov ymm8_8 hwd_8;
mov ymm8_9 hwd_9;
mov ymm8_a hwd_a;
mov ymm8_b hwd_b;
mov ymm8_c hwd_c;
mov ymm8_d hwd_d;
mov ymm8_e hwd_e;
mov ymm8_f hwd_f;
(* vpunpcklwd %ymm11,%ymm7,%ymm9                   #! PC = 0x55555555885b *)
mov lwd_0 ymm7_0;
mov lwd_1 ymm11_0;
mov lwd_2 ymm7_1;
mov lwd_3 ymm11_1;
mov lwd_4 ymm7_2;
mov lwd_5 ymm11_2;
mov lwd_6 ymm7_3;
mov lwd_7 ymm11_3;
mov lwd_8 ymm7_8;
mov lwd_9 ymm11_8;
mov lwd_a ymm7_9;
mov lwd_b ymm11_9;
mov lwd_c ymm7_a;
mov lwd_d ymm11_a;
mov lwd_e ymm7_b;
mov lwd_f ymm11_b;
mov ymm9_0 lwd_0;
mov ymm9_1 lwd_1;
mov ymm9_2 lwd_2;
mov ymm9_3 lwd_3;
mov ymm9_4 lwd_4;
mov ymm9_5 lwd_5;
mov ymm9_6 lwd_6;
mov ymm9_7 lwd_7;
mov ymm9_8 lwd_8;
mov ymm9_9 lwd_9;
mov ymm9_a lwd_a;
mov ymm9_b lwd_b;
mov ymm9_c lwd_c;
mov ymm9_d lwd_d;
mov ymm9_e lwd_e;
mov ymm9_f lwd_f;
(* vpunpckhwd %ymm11,%ymm7,%ymm11                  #! PC = 0x555555558860 *)
mov hwd_0 ymm7_4;
mov hwd_1 ymm11_4;
mov hwd_2 ymm7_5;
mov hwd_3 ymm11_5;
mov hwd_4 ymm7_6;
mov hwd_5 ymm11_6;
mov hwd_6 ymm7_7;
mov hwd_7 ymm11_7;
mov hwd_8 ymm7_c;
mov hwd_9 ymm11_c;
mov hwd_a ymm7_d;
mov hwd_b ymm11_d;
mov hwd_c ymm7_e;
mov hwd_d ymm11_e;
mov hwd_e ymm7_f;
mov hwd_f ymm11_f;
mov ymm11_0 hwd_0;
mov ymm11_1 hwd_1;
mov ymm11_2 hwd_2;
mov ymm11_3 hwd_3;
mov ymm11_4 hwd_4;
mov ymm11_5 hwd_5;
mov ymm11_6 hwd_6;
mov ymm11_7 hwd_7;
mov ymm11_8 hwd_8;
mov ymm11_9 hwd_9;
mov ymm11_a hwd_a;
mov ymm11_b hwd_b;
mov ymm11_c hwd_c;
mov ymm11_d hwd_d;
mov ymm11_e hwd_e;
mov ymm11_f hwd_f;
(* vpbroadcastq 0x160(%rdx),%ymm1                  #! EA = L0x555555561280; Value = 0x3d78e4f41686ebfa; PC = 0x555555558865 *)
mov ymm1_0 L0x555555561280;
mov ymm1_1 L0x555555561282;
mov ymm1_2 L0x555555561284;
mov ymm1_3 L0x555555561286;
mov ymm1_4 L0x555555561280;
mov ymm1_5 L0x555555561282;
mov ymm1_6 L0x555555561284;
mov ymm1_7 L0x555555561286;
mov ymm1_8 L0x555555561280;
mov ymm1_9 L0x555555561282;
mov ymm1_a L0x555555561284;
mov ymm1_b L0x555555561286;
mov ymm1_c L0x555555561280;
mov ymm1_d L0x555555561282;
mov ymm1_e L0x555555561284;
mov ymm1_f L0x555555561286;
(* vpbroadcastq 0x360(%rdx),%ymm2                  #! EA = L0x555555561480; Value = 0xed78ecf41286effa; PC = 0x55555555886e *)
mov ymm2_0 L0x555555561480;
mov ymm2_1 L0x555555561482;
mov ymm2_2 L0x555555561484;
mov ymm2_3 L0x555555561486;
mov ymm2_4 L0x555555561480;
mov ymm2_5 L0x555555561482;
mov ymm2_6 L0x555555561484;
mov ymm2_7 L0x555555561486;
mov ymm2_8 L0x555555561480;
mov ymm2_9 L0x555555561482;
mov ymm2_a L0x555555561484;
mov ymm2_b L0x555555561486;
mov ymm2_c L0x555555561480;
mov ymm2_d L0x555555561482;
mov ymm2_e L0x555555561484;
mov ymm2_f L0x555555561486;
(* vpmullw %ymm1,%ymm3,%ymm7                       #! PC = 0x555555558877 *)
smull mulHymm3_0 mulL_0 ymm1_0 ymm3_0;
smull mulHymm3_1 mulL_1 ymm1_1 ymm3_1;
smull mulHymm3_2 mulL_2 ymm1_2 ymm3_2;
smull mulHymm3_3 mulL_3 ymm1_3 ymm3_3;
smull mulHymm3_4 mulL_4 ymm1_4 ymm3_4;
smull mulHymm3_5 mulL_5 ymm1_5 ymm3_5;
smull mulHymm3_6 mulL_6 ymm1_6 ymm3_6;
smull mulHymm3_7 mulL_7 ymm1_7 ymm3_7;
smull mulHymm3_8 mulL_8 ymm1_8 ymm3_8;
smull mulHymm3_9 mulL_9 ymm1_9 ymm3_9;
smull mulHymm3_a mulL_a ymm1_a ymm3_a;
smull mulHymm3_b mulL_b ymm1_b ymm3_b;
smull mulHymm3_c mulL_c ymm1_c ymm3_c;
smull mulHymm3_d mulL_d ymm1_d ymm3_d;
smull mulHymm3_e mulL_e ymm1_e ymm3_e;
smull mulHymm3_f mulL_f ymm1_f ymm3_f;
cast ymm7_0@sint16 mulL_0;
cast ymm7_1@sint16 mulL_1;
cast ymm7_2@sint16 mulL_2;
cast ymm7_3@sint16 mulL_3;
cast ymm7_4@sint16 mulL_4;
cast ymm7_5@sint16 mulL_5;
cast ymm7_6@sint16 mulL_6;
cast ymm7_7@sint16 mulL_7;
cast ymm7_8@sint16 mulL_8;
cast ymm7_9@sint16 mulL_9;
cast ymm7_a@sint16 mulL_a;
cast ymm7_b@sint16 mulL_b;
cast ymm7_c@sint16 mulL_c;
cast ymm7_d@sint16 mulL_d;
cast ymm7_e@sint16 mulL_e;
cast ymm7_f@sint16 mulL_f;
(* vpmulhw %ymm2,%ymm3,%ymm3                       #! PC = 0x55555555887b *)
smull mulH_0 mulLymm3_0 ymm3_0 ymm2_0;
smull mulH_1 mulLymm3_1 ymm3_1 ymm2_1;
smull mulH_2 mulLymm3_2 ymm3_2 ymm2_2;
smull mulH_3 mulLymm3_3 ymm3_3 ymm2_3;
smull mulH_4 mulLymm3_4 ymm3_4 ymm2_4;
smull mulH_5 mulLymm3_5 ymm3_5 ymm2_5;
smull mulH_6 mulLymm3_6 ymm3_6 ymm2_6;
smull mulH_7 mulLymm3_7 ymm3_7 ymm2_7;
smull mulH_8 mulLymm3_8 ymm3_8 ymm2_8;
smull mulH_9 mulLymm3_9 ymm3_9 ymm2_9;
smull mulH_a mulLymm3_a ymm3_a ymm2_a;
smull mulH_b mulLymm3_b ymm3_b ymm2_b;
smull mulH_c mulLymm3_c ymm3_c ymm2_c;
smull mulH_d mulLymm3_d ymm3_d ymm2_d;
smull mulH_e mulLymm3_e ymm3_e ymm2_e;
smull mulH_f mulLymm3_f ymm3_f ymm2_f;
mov ymm3_0 mulH_0;
mov ymm3_1 mulH_1;
mov ymm3_2 mulH_2;
mov ymm3_3 mulH_3;
mov ymm3_4 mulH_4;
mov ymm3_5 mulH_5;
mov ymm3_6 mulH_6;
mov ymm3_7 mulH_7;
mov ymm3_8 mulH_8;
mov ymm3_9 mulH_9;
mov ymm3_a mulH_a;
mov ymm3_b mulH_b;
mov ymm3_c mulH_c;
mov ymm3_d mulH_d;
mov ymm3_e mulH_e;
mov ymm3_f mulH_f;
(* vpmulhw %ymm0,%ymm7,%ymm7                       #! PC = 0x55555555887f *)
smull mulH_0 red_0 ymm7_0 ymm0_0;
assert true && red_0 = mulLymm3_0;
assume red_0 = mulLymm3_0 && true;
smull mulH_1 red_1 ymm7_1 ymm0_1;
assert true && red_1 = mulLymm3_1;
assume red_1 = mulLymm3_1 && true;
smull mulH_2 red_2 ymm7_2 ymm0_2;
assert true && red_2 = mulLymm3_2;
assume red_2 = mulLymm3_2 && true;
smull mulH_3 red_3 ymm7_3 ymm0_3;
assert true && red_3 = mulLymm3_3;
assume red_3 = mulLymm3_3 && true;
smull mulH_4 red_4 ymm7_4 ymm0_4;
assert true && red_4 = mulLymm3_4;
assume red_4 = mulLymm3_4 && true;
smull mulH_5 red_5 ymm7_5 ymm0_5;
assert true && red_5 = mulLymm3_5;
assume red_5 = mulLymm3_5 && true;
smull mulH_6 red_6 ymm7_6 ymm0_6;
assert true && red_6 = mulLymm3_6;
assume red_6 = mulLymm3_6 && true;
smull mulH_7 red_7 ymm7_7 ymm0_7;
assert true && red_7 = mulLymm3_7;
assume red_7 = mulLymm3_7 && true;
smull mulH_8 red_8 ymm7_8 ymm0_8;
assert true && red_8 = mulLymm3_8;
assume red_8 = mulLymm3_8 && true;
smull mulH_9 red_9 ymm7_9 ymm0_9;
assert true && red_9 = mulLymm3_9;
assume red_9 = mulLymm3_9 && true;
smull mulH_a red_a ymm7_a ymm0_a;
assert true && red_a = mulLymm3_a;
assume red_a = mulLymm3_a && true;
smull mulH_b red_b ymm7_b ymm0_b;
assert true && red_b = mulLymm3_b;
assume red_b = mulLymm3_b && true;
smull mulH_c red_c ymm7_c ymm0_c;
assert true && red_c = mulLymm3_c;
assume red_c = mulLymm3_c && true;
smull mulH_d red_d ymm7_d ymm0_d;
assert true && red_d = mulLymm3_d;
assume red_d = mulLymm3_d && true;
smull mulH_e red_e ymm7_e ymm0_e;
assert true && red_e = mulLymm3_e;
assume red_e = mulLymm3_e && true;
smull mulH_f red_f ymm7_f ymm0_f;
assert true && red_f = mulLymm3_f;
assume red_f = mulLymm3_f && true;
mov ymm7_0 mulH_0;
mov ymm7_1 mulH_1;
mov ymm7_2 mulH_2;
mov ymm7_3 mulH_3;
mov ymm7_4 mulH_4;
mov ymm7_5 mulH_5;
mov ymm7_6 mulH_6;
mov ymm7_7 mulH_7;
mov ymm7_8 mulH_8;
mov ymm7_9 mulH_9;
mov ymm7_a mulH_a;
mov ymm7_b mulH_b;
mov ymm7_c mulH_c;
mov ymm7_d mulH_d;
mov ymm7_e mulH_e;
mov ymm7_f mulH_f;
(* vpsubw %ymm7,%ymm3,%ymm3                        #! PC = 0x555555558883 *)
sub ymm3_0 ymm3_0 ymm7_0;
sub ymm3_1 ymm3_1 ymm7_1;
sub ymm3_2 ymm3_2 ymm7_2;
sub ymm3_3 ymm3_3 ymm7_3;
sub ymm3_4 ymm3_4 ymm7_4;
sub ymm3_5 ymm3_5 ymm7_5;
sub ymm3_6 ymm3_6 ymm7_6;
sub ymm3_7 ymm3_7 ymm7_7;
sub ymm3_8 ymm3_8 ymm7_8;
sub ymm3_9 ymm3_9 ymm7_9;
sub ymm3_a ymm3_a ymm7_a;
sub ymm3_b ymm3_b ymm7_b;
sub ymm3_c ymm3_c ymm7_c;
sub ymm3_d ymm3_d ymm7_d;
sub ymm3_e ymm3_e ymm7_e;
sub ymm3_f ymm3_f ymm7_f;
(* vpbroadcastq 0x168(%rdx),%ymm1                  #! EA = L0x555555561288; Value = 0x5ce5f2b1500a8458; PC = 0x555555558887 *)
mov ymm1_0 L0x555555561288;
mov ymm1_1 L0x55555556128a;
mov ymm1_2 L0x55555556128c;
mov ymm1_3 L0x55555556128e;
mov ymm1_4 L0x555555561288;
mov ymm1_5 L0x55555556128a;
mov ymm1_6 L0x55555556128c;
mov ymm1_7 L0x55555556128e;
mov ymm1_8 L0x555555561288;
mov ymm1_9 L0x55555556128a;
mov ymm1_a L0x55555556128c;
mov ymm1_b L0x55555556128e;
mov ymm1_c L0x555555561288;
mov ymm1_d L0x55555556128a;
mov ymm1_e L0x55555556128c;
mov ymm1_f L0x55555556128e;
(* vpbroadcastq 0x368(%rdx),%ymm2                  #! EA = L0x555555561488; Value = 0xeee5fcb1f40af458; PC = 0x555555558890 *)
mov ymm2_0 L0x555555561488;
mov ymm2_1 L0x55555556148a;
mov ymm2_2 L0x55555556148c;
mov ymm2_3 L0x55555556148e;
mov ymm2_4 L0x555555561488;
mov ymm2_5 L0x55555556148a;
mov ymm2_6 L0x55555556148c;
mov ymm2_7 L0x55555556148e;
mov ymm2_8 L0x555555561488;
mov ymm2_9 L0x55555556148a;
mov ymm2_a L0x55555556148c;
mov ymm2_b L0x55555556148e;
mov ymm2_c L0x555555561488;
mov ymm2_d L0x55555556148a;
mov ymm2_e L0x55555556148c;
mov ymm2_f L0x55555556148e;
(* vpmullw %ymm1,%ymm6,%ymm7                       #! PC = 0x555555558899 *)
smull mulHymm6_0 mulL_0 ymm1_0 ymm6_0;
smull mulHymm6_1 mulL_1 ymm1_1 ymm6_1;
smull mulHymm6_2 mulL_2 ymm1_2 ymm6_2;
smull mulHymm6_3 mulL_3 ymm1_3 ymm6_3;
smull mulHymm6_4 mulL_4 ymm1_4 ymm6_4;
smull mulHymm6_5 mulL_5 ymm1_5 ymm6_5;
smull mulHymm6_6 mulL_6 ymm1_6 ymm6_6;
smull mulHymm6_7 mulL_7 ymm1_7 ymm6_7;
smull mulHymm6_8 mulL_8 ymm1_8 ymm6_8;
smull mulHymm6_9 mulL_9 ymm1_9 ymm6_9;
smull mulHymm6_a mulL_a ymm1_a ymm6_a;
smull mulHymm6_b mulL_b ymm1_b ymm6_b;
smull mulHymm6_c mulL_c ymm1_c ymm6_c;
smull mulHymm6_d mulL_d ymm1_d ymm6_d;
smull mulHymm6_e mulL_e ymm1_e ymm6_e;
smull mulHymm6_f mulL_f ymm1_f ymm6_f;
cast ymm7_0@sint16 mulL_0;
cast ymm7_1@sint16 mulL_1;
cast ymm7_2@sint16 mulL_2;
cast ymm7_3@sint16 mulL_3;
cast ymm7_4@sint16 mulL_4;
cast ymm7_5@sint16 mulL_5;
cast ymm7_6@sint16 mulL_6;
cast ymm7_7@sint16 mulL_7;
cast ymm7_8@sint16 mulL_8;
cast ymm7_9@sint16 mulL_9;
cast ymm7_a@sint16 mulL_a;
cast ymm7_b@sint16 mulL_b;
cast ymm7_c@sint16 mulL_c;
cast ymm7_d@sint16 mulL_d;
cast ymm7_e@sint16 mulL_e;
cast ymm7_f@sint16 mulL_f;
(* vpmulhw %ymm2,%ymm6,%ymm6                       #! PC = 0x55555555889d *)
smull mulH_0 mulLymm6_0 ymm6_0 ymm2_0;
smull mulH_1 mulLymm6_1 ymm6_1 ymm2_1;
smull mulH_2 mulLymm6_2 ymm6_2 ymm2_2;
smull mulH_3 mulLymm6_3 ymm6_3 ymm2_3;
smull mulH_4 mulLymm6_4 ymm6_4 ymm2_4;
smull mulH_5 mulLymm6_5 ymm6_5 ymm2_5;
smull mulH_6 mulLymm6_6 ymm6_6 ymm2_6;
smull mulH_7 mulLymm6_7 ymm6_7 ymm2_7;
smull mulH_8 mulLymm6_8 ymm6_8 ymm2_8;
smull mulH_9 mulLymm6_9 ymm6_9 ymm2_9;
smull mulH_a mulLymm6_a ymm6_a ymm2_a;
smull mulH_b mulLymm6_b ymm6_b ymm2_b;
smull mulH_c mulLymm6_c ymm6_c ymm2_c;
smull mulH_d mulLymm6_d ymm6_d ymm2_d;
smull mulH_e mulLymm6_e ymm6_e ymm2_e;
smull mulH_f mulLymm6_f ymm6_f ymm2_f;
mov ymm6_0 mulH_0;
mov ymm6_1 mulH_1;
mov ymm6_2 mulH_2;
mov ymm6_3 mulH_3;
mov ymm6_4 mulH_4;
mov ymm6_5 mulH_5;
mov ymm6_6 mulH_6;
mov ymm6_7 mulH_7;
mov ymm6_8 mulH_8;
mov ymm6_9 mulH_9;
mov ymm6_a mulH_a;
mov ymm6_b mulH_b;
mov ymm6_c mulH_c;
mov ymm6_d mulH_d;
mov ymm6_e mulH_e;
mov ymm6_f mulH_f;
(* vpmulhw %ymm0,%ymm7,%ymm7                       #! PC = 0x5555555588a1 *)
smull mulH_0 red_0 ymm7_0 ymm0_0;
assert true && red_0 = mulLymm6_0;
assume red_0 = mulLymm6_0 && true;
smull mulH_1 red_1 ymm7_1 ymm0_1;
assert true && red_1 = mulLymm6_1;
assume red_1 = mulLymm6_1 && true;
smull mulH_2 red_2 ymm7_2 ymm0_2;
assert true && red_2 = mulLymm6_2;
assume red_2 = mulLymm6_2 && true;
smull mulH_3 red_3 ymm7_3 ymm0_3;
assert true && red_3 = mulLymm6_3;
assume red_3 = mulLymm6_3 && true;
smull mulH_4 red_4 ymm7_4 ymm0_4;
assert true && red_4 = mulLymm6_4;
assume red_4 = mulLymm6_4 && true;
smull mulH_5 red_5 ymm7_5 ymm0_5;
assert true && red_5 = mulLymm6_5;
assume red_5 = mulLymm6_5 && true;
smull mulH_6 red_6 ymm7_6 ymm0_6;
assert true && red_6 = mulLymm6_6;
assume red_6 = mulLymm6_6 && true;
smull mulH_7 red_7 ymm7_7 ymm0_7;
assert true && red_7 = mulLymm6_7;
assume red_7 = mulLymm6_7 && true;
smull mulH_8 red_8 ymm7_8 ymm0_8;
assert true && red_8 = mulLymm6_8;
assume red_8 = mulLymm6_8 && true;
smull mulH_9 red_9 ymm7_9 ymm0_9;
assert true && red_9 = mulLymm6_9;
assume red_9 = mulLymm6_9 && true;
smull mulH_a red_a ymm7_a ymm0_a;
assert true && red_a = mulLymm6_a;
assume red_a = mulLymm6_a && true;
smull mulH_b red_b ymm7_b ymm0_b;
assert true && red_b = mulLymm6_b;
assume red_b = mulLymm6_b && true;
smull mulH_c red_c ymm7_c ymm0_c;
assert true && red_c = mulLymm6_c;
assume red_c = mulLymm6_c && true;
smull mulH_d red_d ymm7_d ymm0_d;
assert true && red_d = mulLymm6_d;
assume red_d = mulLymm6_d && true;
smull mulH_e red_e ymm7_e ymm0_e;
assert true && red_e = mulLymm6_e;
assume red_e = mulLymm6_e && true;
smull mulH_f red_f ymm7_f ymm0_f;
assert true && red_f = mulLymm6_f;
assume red_f = mulLymm6_f && true;
mov ymm7_0 mulH_0;
mov ymm7_1 mulH_1;
mov ymm7_2 mulH_2;
mov ymm7_3 mulH_3;
mov ymm7_4 mulH_4;
mov ymm7_5 mulH_5;
mov ymm7_6 mulH_6;
mov ymm7_7 mulH_7;
mov ymm7_8 mulH_8;
mov ymm7_9 mulH_9;
mov ymm7_a mulH_a;
mov ymm7_b mulH_b;
mov ymm7_c mulH_c;
mov ymm7_d mulH_d;
mov ymm7_e mulH_e;
mov ymm7_f mulH_f;
(* vpsubw %ymm7,%ymm6,%ymm6                        #! PC = 0x5555555588a5 *)
sub ymm6_0 ymm6_0 ymm7_0;
sub ymm6_1 ymm6_1 ymm7_1;
sub ymm6_2 ymm6_2 ymm7_2;
sub ymm6_3 ymm6_3 ymm7_3;
sub ymm6_4 ymm6_4 ymm7_4;
sub ymm6_5 ymm6_5 ymm7_5;
sub ymm6_6 ymm6_6 ymm7_6;
sub ymm6_7 ymm6_7 ymm7_7;
sub ymm6_8 ymm6_8 ymm7_8;
sub ymm6_9 ymm6_9 ymm7_9;
sub ymm6_a ymm6_a ymm7_a;
sub ymm6_b ymm6_b ymm7_b;
sub ymm6_c ymm6_c ymm7_c;
sub ymm6_d ymm6_d ymm7_d;
sub ymm6_e ymm6_e ymm7_e;
sub ymm6_f ymm6_f ymm7_f;
(* vpbroadcastq 0x170(%rdx),%ymm1                  #! EA = L0x555555561290; Value = 0x18ed15f3860fbeac; PC = 0x5555555588a9 *)
mov ymm1_0 L0x555555561290;
mov ymm1_1 L0x555555561292;
mov ymm1_2 L0x555555561294;
mov ymm1_3 L0x555555561296;
mov ymm1_4 L0x555555561290;
mov ymm1_5 L0x555555561292;
mov ymm1_6 L0x555555561294;
mov ymm1_7 L0x555555561296;
mov ymm1_8 L0x555555561290;
mov ymm1_9 L0x555555561292;
mov ymm1_a L0x555555561294;
mov ymm1_b L0x555555561296;
mov ymm1_c L0x555555561290;
mov ymm1_d L0x555555561292;
mov ymm1_e L0x555555561294;
mov ymm1_f L0x555555561296;
(* vpbroadcastq 0x370(%rdx),%ymm2                  #! EA = L0x555555561490; Value = 0xfaedf3f3fc0ff6ac; PC = 0x5555555588b2 *)
mov ymm2_0 L0x555555561490;
mov ymm2_1 L0x555555561492;
mov ymm2_2 L0x555555561494;
mov ymm2_3 L0x555555561496;
mov ymm2_4 L0x555555561490;
mov ymm2_5 L0x555555561492;
mov ymm2_6 L0x555555561494;
mov ymm2_7 L0x555555561496;
mov ymm2_8 L0x555555561490;
mov ymm2_9 L0x555555561492;
mov ymm2_a L0x555555561494;
mov ymm2_b L0x555555561496;
mov ymm2_c L0x555555561490;
mov ymm2_d L0x555555561492;
mov ymm2_e L0x555555561494;
mov ymm2_f L0x555555561496;
(* vpmullw %ymm1,%ymm8,%ymm7                       #! PC = 0x5555555588bb *)
smull mulHymm8_0 mulL_0 ymm1_0 ymm8_0;
smull mulHymm8_1 mulL_1 ymm1_1 ymm8_1;
smull mulHymm8_2 mulL_2 ymm1_2 ymm8_2;
smull mulHymm8_3 mulL_3 ymm1_3 ymm8_3;
smull mulHymm8_4 mulL_4 ymm1_4 ymm8_4;
smull mulHymm8_5 mulL_5 ymm1_5 ymm8_5;
smull mulHymm8_6 mulL_6 ymm1_6 ymm8_6;
smull mulHymm8_7 mulL_7 ymm1_7 ymm8_7;
smull mulHymm8_8 mulL_8 ymm1_8 ymm8_8;
smull mulHymm8_9 mulL_9 ymm1_9 ymm8_9;
smull mulHymm8_a mulL_a ymm1_a ymm8_a;
smull mulHymm8_b mulL_b ymm1_b ymm8_b;
smull mulHymm8_c mulL_c ymm1_c ymm8_c;
smull mulHymm8_d mulL_d ymm1_d ymm8_d;
smull mulHymm8_e mulL_e ymm1_e ymm8_e;
smull mulHymm8_f mulL_f ymm1_f ymm8_f;
cast ymm7_0@sint16 mulL_0;
cast ymm7_1@sint16 mulL_1;
cast ymm7_2@sint16 mulL_2;
cast ymm7_3@sint16 mulL_3;
cast ymm7_4@sint16 mulL_4;
cast ymm7_5@sint16 mulL_5;
cast ymm7_6@sint16 mulL_6;
cast ymm7_7@sint16 mulL_7;
cast ymm7_8@sint16 mulL_8;
cast ymm7_9@sint16 mulL_9;
cast ymm7_a@sint16 mulL_a;
cast ymm7_b@sint16 mulL_b;
cast ymm7_c@sint16 mulL_c;
cast ymm7_d@sint16 mulL_d;
cast ymm7_e@sint16 mulL_e;
cast ymm7_f@sint16 mulL_f;
(* vpmulhw %ymm2,%ymm8,%ymm8                       #! PC = 0x5555555588bf *)
smull mulH_0 mulLymm8_0 ymm8_0 ymm2_0;
smull mulH_1 mulLymm8_1 ymm8_1 ymm2_1;
smull mulH_2 mulLymm8_2 ymm8_2 ymm2_2;
smull mulH_3 mulLymm8_3 ymm8_3 ymm2_3;
smull mulH_4 mulLymm8_4 ymm8_4 ymm2_4;
smull mulH_5 mulLymm8_5 ymm8_5 ymm2_5;
smull mulH_6 mulLymm8_6 ymm8_6 ymm2_6;
smull mulH_7 mulLymm8_7 ymm8_7 ymm2_7;
smull mulH_8 mulLymm8_8 ymm8_8 ymm2_8;
smull mulH_9 mulLymm8_9 ymm8_9 ymm2_9;
smull mulH_a mulLymm8_a ymm8_a ymm2_a;
smull mulH_b mulLymm8_b ymm8_b ymm2_b;
smull mulH_c mulLymm8_c ymm8_c ymm2_c;
smull mulH_d mulLymm8_d ymm8_d ymm2_d;
smull mulH_e mulLymm8_e ymm8_e ymm2_e;
smull mulH_f mulLymm8_f ymm8_f ymm2_f;
mov ymm8_0 mulH_0;
mov ymm8_1 mulH_1;
mov ymm8_2 mulH_2;
mov ymm8_3 mulH_3;
mov ymm8_4 mulH_4;
mov ymm8_5 mulH_5;
mov ymm8_6 mulH_6;
mov ymm8_7 mulH_7;
mov ymm8_8 mulH_8;
mov ymm8_9 mulH_9;
mov ymm8_a mulH_a;
mov ymm8_b mulH_b;
mov ymm8_c mulH_c;
mov ymm8_d mulH_d;
mov ymm8_e mulH_e;
mov ymm8_f mulH_f;
(* vpmulhw %ymm0,%ymm7,%ymm7                       #! PC = 0x5555555588c3 *)
smull mulH_0 red_0 ymm7_0 ymm0_0;
assert true && red_0 = mulLymm8_0;
assume red_0 = mulLymm8_0 && true;
smull mulH_1 red_1 ymm7_1 ymm0_1;
assert true && red_1 = mulLymm8_1;
assume red_1 = mulLymm8_1 && true;
smull mulH_2 red_2 ymm7_2 ymm0_2;
assert true && red_2 = mulLymm8_2;
assume red_2 = mulLymm8_2 && true;
smull mulH_3 red_3 ymm7_3 ymm0_3;
assert true && red_3 = mulLymm8_3;
assume red_3 = mulLymm8_3 && true;
smull mulH_4 red_4 ymm7_4 ymm0_4;
assert true && red_4 = mulLymm8_4;
assume red_4 = mulLymm8_4 && true;
smull mulH_5 red_5 ymm7_5 ymm0_5;
assert true && red_5 = mulLymm8_5;
assume red_5 = mulLymm8_5 && true;
smull mulH_6 red_6 ymm7_6 ymm0_6;
assert true && red_6 = mulLymm8_6;
assume red_6 = mulLymm8_6 && true;
smull mulH_7 red_7 ymm7_7 ymm0_7;
assert true && red_7 = mulLymm8_7;
assume red_7 = mulLymm8_7 && true;
smull mulH_8 red_8 ymm7_8 ymm0_8;
assert true && red_8 = mulLymm8_8;
assume red_8 = mulLymm8_8 && true;
smull mulH_9 red_9 ymm7_9 ymm0_9;
assert true && red_9 = mulLymm8_9;
assume red_9 = mulLymm8_9 && true;
smull mulH_a red_a ymm7_a ymm0_a;
assert true && red_a = mulLymm8_a;
assume red_a = mulLymm8_a && true;
smull mulH_b red_b ymm7_b ymm0_b;
assert true && red_b = mulLymm8_b;
assume red_b = mulLymm8_b && true;
smull mulH_c red_c ymm7_c ymm0_c;
assert true && red_c = mulLymm8_c;
assume red_c = mulLymm8_c && true;
smull mulH_d red_d ymm7_d ymm0_d;
assert true && red_d = mulLymm8_d;
assume red_d = mulLymm8_d && true;
smull mulH_e red_e ymm7_e ymm0_e;
assert true && red_e = mulLymm8_e;
assume red_e = mulLymm8_e && true;
smull mulH_f red_f ymm7_f ymm0_f;
assert true && red_f = mulLymm8_f;
assume red_f = mulLymm8_f && true;
mov ymm7_0 mulH_0;
mov ymm7_1 mulH_1;
mov ymm7_2 mulH_2;
mov ymm7_3 mulH_3;
mov ymm7_4 mulH_4;
mov ymm7_5 mulH_5;
mov ymm7_6 mulH_6;
mov ymm7_7 mulH_7;
mov ymm7_8 mulH_8;
mov ymm7_9 mulH_9;
mov ymm7_a mulH_a;
mov ymm7_b mulH_b;
mov ymm7_c mulH_c;
mov ymm7_d mulH_d;
mov ymm7_e mulH_e;
mov ymm7_f mulH_f;
(* vpsubw %ymm7,%ymm8,%ymm8                        #! PC = 0x5555555588c7 *)
sub ymm8_0 ymm8_0 ymm7_0;
sub ymm8_1 ymm8_1 ymm7_1;
sub ymm8_2 ymm8_2 ymm7_2;
sub ymm8_3 ymm8_3 ymm7_3;
sub ymm8_4 ymm8_4 ymm7_4;
sub ymm8_5 ymm8_5 ymm7_5;
sub ymm8_6 ymm8_6 ymm7_6;
sub ymm8_7 ymm8_7 ymm7_7;
sub ymm8_8 ymm8_8 ymm7_8;
sub ymm8_9 ymm8_9 ymm7_9;
sub ymm8_a ymm8_a ymm7_a;
sub ymm8_b ymm8_b ymm7_b;
sub ymm8_c ymm8_c ymm7_c;
sub ymm8_d ymm8_d ymm7_d;
sub ymm8_e ymm8_e ymm7_e;
sub ymm8_f ymm8_f ymm7_f;
(* vpbroadcastq 0x178(%rdx),%ymm1                  #! EA = L0x555555561298; Value = 0xc220023dce5d95f0; PC = 0x5555555588cb *)
mov ymm1_0 L0x555555561298;
mov ymm1_1 L0x55555556129a;
mov ymm1_2 L0x55555556129c;
mov ymm1_3 L0x55555556129e;
mov ymm1_4 L0x555555561298;
mov ymm1_5 L0x55555556129a;
mov ymm1_6 L0x55555556129c;
mov ymm1_7 L0x55555556129e;
mov ymm1_8 L0x555555561298;
mov ymm1_9 L0x55555556129a;
mov ymm1_a L0x55555556129c;
mov ymm1_b L0x55555556129e;
mov ymm1_c L0x555555561298;
mov ymm1_d L0x55555556129a;
mov ymm1_e L0x55555556129c;
mov ymm1_f L0x55555556129e;
(* vpbroadcastq 0x378(%rdx),%ymm2                  #! EA = L0x555555561498; Value = 0x0220043d105df5f0; PC = 0x5555555588d4 *)
mov ymm2_0 L0x555555561498;
mov ymm2_1 L0x55555556149a;
mov ymm2_2 L0x55555556149c;
mov ymm2_3 L0x55555556149e;
mov ymm2_4 L0x555555561498;
mov ymm2_5 L0x55555556149a;
mov ymm2_6 L0x55555556149c;
mov ymm2_7 L0x55555556149e;
mov ymm2_8 L0x555555561498;
mov ymm2_9 L0x55555556149a;
mov ymm2_a L0x55555556149c;
mov ymm2_b L0x55555556149e;
mov ymm2_c L0x555555561498;
mov ymm2_d L0x55555556149a;
mov ymm2_e L0x55555556149c;
mov ymm2_f L0x55555556149e;
(* vpmullw %ymm1,%ymm11,%ymm7                      #! PC = 0x5555555588dd *)
smull mulHymm11_0 mulL_0 ymm1_0 ymm11_0;
smull mulHymm11_1 mulL_1 ymm1_1 ymm11_1;
smull mulHymm11_2 mulL_2 ymm1_2 ymm11_2;
smull mulHymm11_3 mulL_3 ymm1_3 ymm11_3;
smull mulHymm11_4 mulL_4 ymm1_4 ymm11_4;
smull mulHymm11_5 mulL_5 ymm1_5 ymm11_5;
smull mulHymm11_6 mulL_6 ymm1_6 ymm11_6;
smull mulHymm11_7 mulL_7 ymm1_7 ymm11_7;
smull mulHymm11_8 mulL_8 ymm1_8 ymm11_8;
smull mulHymm11_9 mulL_9 ymm1_9 ymm11_9;
smull mulHymm11_a mulL_a ymm1_a ymm11_a;
smull mulHymm11_b mulL_b ymm1_b ymm11_b;
smull mulHymm11_c mulL_c ymm1_c ymm11_c;
smull mulHymm11_d mulL_d ymm1_d ymm11_d;
smull mulHymm11_e mulL_e ymm1_e ymm11_e;
smull mulHymm11_f mulL_f ymm1_f ymm11_f;
cast ymm7_0@sint16 mulL_0;
cast ymm7_1@sint16 mulL_1;
cast ymm7_2@sint16 mulL_2;
cast ymm7_3@sint16 mulL_3;
cast ymm7_4@sint16 mulL_4;
cast ymm7_5@sint16 mulL_5;
cast ymm7_6@sint16 mulL_6;
cast ymm7_7@sint16 mulL_7;
cast ymm7_8@sint16 mulL_8;
cast ymm7_9@sint16 mulL_9;
cast ymm7_a@sint16 mulL_a;
cast ymm7_b@sint16 mulL_b;
cast ymm7_c@sint16 mulL_c;
cast ymm7_d@sint16 mulL_d;
cast ymm7_e@sint16 mulL_e;
cast ymm7_f@sint16 mulL_f;
(* vpmulhw %ymm2,%ymm11,%ymm11                     #! PC = 0x5555555588e1 *)
smull mulH_0 mulLymm11_0 ymm11_0 ymm2_0;
smull mulH_1 mulLymm11_1 ymm11_1 ymm2_1;
smull mulH_2 mulLymm11_2 ymm11_2 ymm2_2;
smull mulH_3 mulLymm11_3 ymm11_3 ymm2_3;
smull mulH_4 mulLymm11_4 ymm11_4 ymm2_4;
smull mulH_5 mulLymm11_5 ymm11_5 ymm2_5;
smull mulH_6 mulLymm11_6 ymm11_6 ymm2_6;
smull mulH_7 mulLymm11_7 ymm11_7 ymm2_7;
smull mulH_8 mulLymm11_8 ymm11_8 ymm2_8;
smull mulH_9 mulLymm11_9 ymm11_9 ymm2_9;
smull mulH_a mulLymm11_a ymm11_a ymm2_a;
smull mulH_b mulLymm11_b ymm11_b ymm2_b;
smull mulH_c mulLymm11_c ymm11_c ymm2_c;
smull mulH_d mulLymm11_d ymm11_d ymm2_d;
smull mulH_e mulLymm11_e ymm11_e ymm2_e;
smull mulH_f mulLymm11_f ymm11_f ymm2_f;
mov ymm11_0 mulH_0;
mov ymm11_1 mulH_1;
mov ymm11_2 mulH_2;
mov ymm11_3 mulH_3;
mov ymm11_4 mulH_4;
mov ymm11_5 mulH_5;
mov ymm11_6 mulH_6;
mov ymm11_7 mulH_7;
mov ymm11_8 mulH_8;
mov ymm11_9 mulH_9;
mov ymm11_a mulH_a;
mov ymm11_b mulH_b;
mov ymm11_c mulH_c;
mov ymm11_d mulH_d;
mov ymm11_e mulH_e;
mov ymm11_f mulH_f;
(* vpmulhw %ymm0,%ymm7,%ymm7                       #! PC = 0x5555555588e5 *)
smull mulH_0 red_0 ymm7_0 ymm0_0;
assert true && red_0 = mulLymm11_0;
assume red_0 = mulLymm11_0 && true;
smull mulH_1 red_1 ymm7_1 ymm0_1;
assert true && red_1 = mulLymm11_1;
assume red_1 = mulLymm11_1 && true;
smull mulH_2 red_2 ymm7_2 ymm0_2;
assert true && red_2 = mulLymm11_2;
assume red_2 = mulLymm11_2 && true;
smull mulH_3 red_3 ymm7_3 ymm0_3;
assert true && red_3 = mulLymm11_3;
assume red_3 = mulLymm11_3 && true;
smull mulH_4 red_4 ymm7_4 ymm0_4;
assert true && red_4 = mulLymm11_4;
assume red_4 = mulLymm11_4 && true;
smull mulH_5 red_5 ymm7_5 ymm0_5;
assert true && red_5 = mulLymm11_5;
assume red_5 = mulLymm11_5 && true;
smull mulH_6 red_6 ymm7_6 ymm0_6;
assert true && red_6 = mulLymm11_6;
assume red_6 = mulLymm11_6 && true;
smull mulH_7 red_7 ymm7_7 ymm0_7;
assert true && red_7 = mulLymm11_7;
assume red_7 = mulLymm11_7 && true;
smull mulH_8 red_8 ymm7_8 ymm0_8;
assert true && red_8 = mulLymm11_8;
assume red_8 = mulLymm11_8 && true;
smull mulH_9 red_9 ymm7_9 ymm0_9;
assert true && red_9 = mulLymm11_9;
assume red_9 = mulLymm11_9 && true;
smull mulH_a red_a ymm7_a ymm0_a;
assert true && red_a = mulLymm11_a;
assume red_a = mulLymm11_a && true;
smull mulH_b red_b ymm7_b ymm0_b;
assert true && red_b = mulLymm11_b;
assume red_b = mulLymm11_b && true;
smull mulH_c red_c ymm7_c ymm0_c;
assert true && red_c = mulLymm11_c;
assume red_c = mulLymm11_c && true;
smull mulH_d red_d ymm7_d ymm0_d;
assert true && red_d = mulLymm11_d;
assume red_d = mulLymm11_d && true;
smull mulH_e red_e ymm7_e ymm0_e;
assert true && red_e = mulLymm11_e;
assume red_e = mulLymm11_e && true;
smull mulH_f red_f ymm7_f ymm0_f;
assert true && red_f = mulLymm11_f;
assume red_f = mulLymm11_f && true;
mov ymm7_0 mulH_0;
mov ymm7_1 mulH_1;
mov ymm7_2 mulH_2;
mov ymm7_3 mulH_3;
mov ymm7_4 mulH_4;
mov ymm7_5 mulH_5;
mov ymm7_6 mulH_6;
mov ymm7_7 mulH_7;
mov ymm7_8 mulH_8;
mov ymm7_9 mulH_9;
mov ymm7_a mulH_a;
mov ymm7_b mulH_b;
mov ymm7_c mulH_c;
mov ymm7_d mulH_d;
mov ymm7_e mulH_e;
mov ymm7_f mulH_f;
(* vpsubw %ymm7,%ymm11,%ymm11                      #! PC = 0x5555555588e9 *)
sub ymm11_0 ymm11_0 ymm7_0;
sub ymm11_1 ymm11_1 ymm7_1;
sub ymm11_2 ymm11_2 ymm7_2;
sub ymm11_3 ymm11_3 ymm7_3;
sub ymm11_4 ymm11_4 ymm7_4;
sub ymm11_5 ymm11_5 ymm7_5;
sub ymm11_6 ymm11_6 ymm7_6;
sub ymm11_7 ymm11_7 ymm7_7;
sub ymm11_8 ymm11_8 ymm7_8;
sub ymm11_9 ymm11_9 ymm7_9;
sub ymm11_a ymm11_a ymm7_a;
sub ymm11_b ymm11_b ymm7_b;
sub ymm11_c ymm11_c ymm7_c;
sub ymm11_d ymm11_d ymm7_d;
sub ymm11_e ymm11_e ymm7_e;
sub ymm11_f ymm11_f ymm7_f;
(* vpaddw %ymm3,%ymm5,%ymm7                        #! PC = 0x5555555588ed *)
add ymm7_0 ymm5_0 ymm3_0;
add ymm7_1 ymm5_1 ymm3_1;
add ymm7_2 ymm5_2 ymm3_2;
add ymm7_3 ymm5_3 ymm3_3;
add ymm7_4 ymm5_4 ymm3_4;
add ymm7_5 ymm5_5 ymm3_5;
add ymm7_6 ymm5_6 ymm3_6;
add ymm7_7 ymm5_7 ymm3_7;
add ymm7_8 ymm5_8 ymm3_8;
add ymm7_9 ymm5_9 ymm3_9;
add ymm7_a ymm5_a ymm3_a;
add ymm7_b ymm5_b ymm3_b;
add ymm7_c ymm5_c ymm3_c;
add ymm7_d ymm5_d ymm3_d;
add ymm7_e ymm5_e ymm3_e;
add ymm7_f ymm5_f ymm3_f;
(* vpsubw %ymm3,%ymm5,%ymm3                        #! PC = 0x5555555588f1 *)
sub ymm3_0 ymm5_0 ymm3_0;
sub ymm3_1 ymm5_1 ymm3_1;
sub ymm3_2 ymm5_2 ymm3_2;
sub ymm3_3 ymm5_3 ymm3_3;
sub ymm3_4 ymm5_4 ymm3_4;
sub ymm3_5 ymm5_5 ymm3_5;
sub ymm3_6 ymm5_6 ymm3_6;
sub ymm3_7 ymm5_7 ymm3_7;
sub ymm3_8 ymm5_8 ymm3_8;
sub ymm3_9 ymm5_9 ymm3_9;
sub ymm3_a ymm5_a ymm3_a;
sub ymm3_b ymm5_b ymm3_b;
sub ymm3_c ymm5_c ymm3_c;
sub ymm3_d ymm5_d ymm3_d;
sub ymm3_e ymm5_e ymm3_e;
sub ymm3_f ymm5_f ymm3_f;
(* vpaddw %ymm6,%ymm4,%ymm5                        #! PC = 0x5555555588f5 *)
add ymm5_0 ymm4_0 ymm6_0;
add ymm5_1 ymm4_1 ymm6_1;
add ymm5_2 ymm4_2 ymm6_2;
add ymm5_3 ymm4_3 ymm6_3;
add ymm5_4 ymm4_4 ymm6_4;
add ymm5_5 ymm4_5 ymm6_5;
add ymm5_6 ymm4_6 ymm6_6;
add ymm5_7 ymm4_7 ymm6_7;
add ymm5_8 ymm4_8 ymm6_8;
add ymm5_9 ymm4_9 ymm6_9;
add ymm5_a ymm4_a ymm6_a;
add ymm5_b ymm4_b ymm6_b;
add ymm5_c ymm4_c ymm6_c;
add ymm5_d ymm4_d ymm6_d;
add ymm5_e ymm4_e ymm6_e;
add ymm5_f ymm4_f ymm6_f;
(* vpsubw %ymm6,%ymm4,%ymm6                        #! PC = 0x5555555588f9 *)
sub ymm6_0 ymm4_0 ymm6_0;
sub ymm6_1 ymm4_1 ymm6_1;
sub ymm6_2 ymm4_2 ymm6_2;
sub ymm6_3 ymm4_3 ymm6_3;
sub ymm6_4 ymm4_4 ymm6_4;
sub ymm6_5 ymm4_5 ymm6_5;
sub ymm6_6 ymm4_6 ymm6_6;
sub ymm6_7 ymm4_7 ymm6_7;
sub ymm6_8 ymm4_8 ymm6_8;
sub ymm6_9 ymm4_9 ymm6_9;
sub ymm6_a ymm4_a ymm6_a;
sub ymm6_b ymm4_b ymm6_b;
sub ymm6_c ymm4_c ymm6_c;
sub ymm6_d ymm4_d ymm6_d;
sub ymm6_e ymm4_e ymm6_e;
sub ymm6_f ymm4_f ymm6_f;
(* vpaddw %ymm8,%ymm10,%ymm4                       #! PC = 0x5555555588fd *)
add ymm4_0 ymm10_0 ymm8_0;
add ymm4_1 ymm10_1 ymm8_1;
add ymm4_2 ymm10_2 ymm8_2;
add ymm4_3 ymm10_3 ymm8_3;
add ymm4_4 ymm10_4 ymm8_4;
add ymm4_5 ymm10_5 ymm8_5;
add ymm4_6 ymm10_6 ymm8_6;
add ymm4_7 ymm10_7 ymm8_7;
add ymm4_8 ymm10_8 ymm8_8;
add ymm4_9 ymm10_9 ymm8_9;
add ymm4_a ymm10_a ymm8_a;
add ymm4_b ymm10_b ymm8_b;
add ymm4_c ymm10_c ymm8_c;
add ymm4_d ymm10_d ymm8_d;
add ymm4_e ymm10_e ymm8_e;
add ymm4_f ymm10_f ymm8_f;
(* vpsubw %ymm8,%ymm10,%ymm8                       #! PC = 0x555555558902 *)
sub ymm8_0 ymm10_0 ymm8_0;
sub ymm8_1 ymm10_1 ymm8_1;
sub ymm8_2 ymm10_2 ymm8_2;
sub ymm8_3 ymm10_3 ymm8_3;
sub ymm8_4 ymm10_4 ymm8_4;
sub ymm8_5 ymm10_5 ymm8_5;
sub ymm8_6 ymm10_6 ymm8_6;
sub ymm8_7 ymm10_7 ymm8_7;
sub ymm8_8 ymm10_8 ymm8_8;
sub ymm8_9 ymm10_9 ymm8_9;
sub ymm8_a ymm10_a ymm8_a;
sub ymm8_b ymm10_b ymm8_b;
sub ymm8_c ymm10_c ymm8_c;
sub ymm8_d ymm10_d ymm8_d;
sub ymm8_e ymm10_e ymm8_e;
sub ymm8_f ymm10_f ymm8_f;
(* vpaddw %ymm11,%ymm9,%ymm10                      #! PC = 0x555555558907 *)
add ymm10_0 ymm9_0 ymm11_0;
add ymm10_1 ymm9_1 ymm11_1;
add ymm10_2 ymm9_2 ymm11_2;
add ymm10_3 ymm9_3 ymm11_3;
add ymm10_4 ymm9_4 ymm11_4;
add ymm10_5 ymm9_5 ymm11_5;
add ymm10_6 ymm9_6 ymm11_6;
add ymm10_7 ymm9_7 ymm11_7;
add ymm10_8 ymm9_8 ymm11_8;
add ymm10_9 ymm9_9 ymm11_9;
add ymm10_a ymm9_a ymm11_a;
add ymm10_b ymm9_b ymm11_b;
add ymm10_c ymm9_c ymm11_c;
add ymm10_d ymm9_d ymm11_d;
add ymm10_e ymm9_e ymm11_e;
add ymm10_f ymm9_f ymm11_f;
(* vpsubw %ymm11,%ymm9,%ymm11                      #! PC = 0x55555555890c *)
sub ymm11_0 ymm9_0 ymm11_0;
sub ymm11_1 ymm9_1 ymm11_1;
sub ymm11_2 ymm9_2 ymm11_2;
sub ymm11_3 ymm9_3 ymm11_3;
sub ymm11_4 ymm9_4 ymm11_4;
sub ymm11_5 ymm9_5 ymm11_5;
sub ymm11_6 ymm9_6 ymm11_6;
sub ymm11_7 ymm9_7 ymm11_7;
sub ymm11_8 ymm9_8 ymm11_8;
sub ymm11_9 ymm9_9 ymm11_9;
sub ymm11_a ymm9_a ymm11_a;
sub ymm11_b ymm9_b ymm11_b;
sub ymm11_c ymm9_c ymm11_c;
sub ymm11_d ymm9_d ymm11_d;
sub ymm11_e ymm9_e ymm11_e;
sub ymm11_f ymm9_f ymm11_f;
(* vpunpcklwd %ymm3,%ymm7,%ymm9                    #! PC = 0x555555558911 *)
mov lwd_0 ymm7_0;
mov lwd_1 ymm3_0;
mov lwd_2 ymm7_1;
mov lwd_3 ymm3_1;
mov lwd_4 ymm7_2;
mov lwd_5 ymm3_2;
mov lwd_6 ymm7_3;
mov lwd_7 ymm3_3;
mov lwd_8 ymm7_8;
mov lwd_9 ymm3_8;
mov lwd_a ymm7_9;
mov lwd_b ymm3_9;
mov lwd_c ymm7_a;
mov lwd_d ymm3_a;
mov lwd_e ymm7_b;
mov lwd_f ymm3_b;
mov ymm9_0 lwd_0;
mov ymm9_1 lwd_1;
mov ymm9_2 lwd_2;
mov ymm9_3 lwd_3;
mov ymm9_4 lwd_4;
mov ymm9_5 lwd_5;
mov ymm9_6 lwd_6;
mov ymm9_7 lwd_7;
mov ymm9_8 lwd_8;
mov ymm9_9 lwd_9;
mov ymm9_a lwd_a;
mov ymm9_b lwd_b;
mov ymm9_c lwd_c;
mov ymm9_d lwd_d;
mov ymm9_e lwd_e;
mov ymm9_f lwd_f;
(* vpunpckhwd %ymm3,%ymm7,%ymm3                    #! PC = 0x555555558915 *)
mov hwd_0 ymm7_4;
mov hwd_1 ymm3_4;
mov hwd_2 ymm7_5;
mov hwd_3 ymm3_5;
mov hwd_4 ymm7_6;
mov hwd_5 ymm3_6;
mov hwd_6 ymm7_7;
mov hwd_7 ymm3_7;
mov hwd_8 ymm7_c;
mov hwd_9 ymm3_c;
mov hwd_a ymm7_d;
mov hwd_b ymm3_d;
mov hwd_c ymm7_e;
mov hwd_d ymm3_e;
mov hwd_e ymm7_f;
mov hwd_f ymm3_f;
mov ymm3_0 hwd_0;
mov ymm3_1 hwd_1;
mov ymm3_2 hwd_2;
mov ymm3_3 hwd_3;
mov ymm3_4 hwd_4;
mov ymm3_5 hwd_5;
mov ymm3_6 hwd_6;
mov ymm3_7 hwd_7;
mov ymm3_8 hwd_8;
mov ymm3_9 hwd_9;
mov ymm3_a hwd_a;
mov ymm3_b hwd_b;
mov ymm3_c hwd_c;
mov ymm3_d hwd_d;
mov ymm3_e hwd_e;
mov ymm3_f hwd_f;
(* vpunpcklwd %ymm6,%ymm5,%ymm7                    #! PC = 0x555555558919 *)
mov lwd_0 ymm5_0;
mov lwd_1 ymm6_0;
mov lwd_2 ymm5_1;
mov lwd_3 ymm6_1;
mov lwd_4 ymm5_2;
mov lwd_5 ymm6_2;
mov lwd_6 ymm5_3;
mov lwd_7 ymm6_3;
mov lwd_8 ymm5_8;
mov lwd_9 ymm6_8;
mov lwd_a ymm5_9;
mov lwd_b ymm6_9;
mov lwd_c ymm5_a;
mov lwd_d ymm6_a;
mov lwd_e ymm5_b;
mov lwd_f ymm6_b;
mov ymm7_0 lwd_0;
mov ymm7_1 lwd_1;
mov ymm7_2 lwd_2;
mov ymm7_3 lwd_3;
mov ymm7_4 lwd_4;
mov ymm7_5 lwd_5;
mov ymm7_6 lwd_6;
mov ymm7_7 lwd_7;
mov ymm7_8 lwd_8;
mov ymm7_9 lwd_9;
mov ymm7_a lwd_a;
mov ymm7_b lwd_b;
mov ymm7_c lwd_c;
mov ymm7_d lwd_d;
mov ymm7_e lwd_e;
mov ymm7_f lwd_f;
(* vpunpckhwd %ymm6,%ymm5,%ymm6                    #! PC = 0x55555555891d *)
mov hwd_0 ymm5_4;
mov hwd_1 ymm6_4;
mov hwd_2 ymm5_5;
mov hwd_3 ymm6_5;
mov hwd_4 ymm5_6;
mov hwd_5 ymm6_6;
mov hwd_6 ymm5_7;
mov hwd_7 ymm6_7;
mov hwd_8 ymm5_c;
mov hwd_9 ymm6_c;
mov hwd_a ymm5_d;
mov hwd_b ymm6_d;
mov hwd_c ymm5_e;
mov hwd_d ymm6_e;
mov hwd_e ymm5_f;
mov hwd_f ymm6_f;
mov ymm6_0 hwd_0;
mov ymm6_1 hwd_1;
mov ymm6_2 hwd_2;
mov ymm6_3 hwd_3;
mov ymm6_4 hwd_4;
mov ymm6_5 hwd_5;
mov ymm6_6 hwd_6;
mov ymm6_7 hwd_7;
mov ymm6_8 hwd_8;
mov ymm6_9 hwd_9;
mov ymm6_a hwd_a;
mov ymm6_b hwd_b;
mov ymm6_c hwd_c;
mov ymm6_d hwd_d;
mov ymm6_e hwd_e;
mov ymm6_f hwd_f;
(* vpunpcklwd %ymm8,%ymm4,%ymm5                    #! PC = 0x555555558921 *)
mov lwd_0 ymm4_0;
mov lwd_1 ymm8_0;
mov lwd_2 ymm4_1;
mov lwd_3 ymm8_1;
mov lwd_4 ymm4_2;
mov lwd_5 ymm8_2;
mov lwd_6 ymm4_3;
mov lwd_7 ymm8_3;
mov lwd_8 ymm4_8;
mov lwd_9 ymm8_8;
mov lwd_a ymm4_9;
mov lwd_b ymm8_9;
mov lwd_c ymm4_a;
mov lwd_d ymm8_a;
mov lwd_e ymm4_b;
mov lwd_f ymm8_b;
mov ymm5_0 lwd_0;
mov ymm5_1 lwd_1;
mov ymm5_2 lwd_2;
mov ymm5_3 lwd_3;
mov ymm5_4 lwd_4;
mov ymm5_5 lwd_5;
mov ymm5_6 lwd_6;
mov ymm5_7 lwd_7;
mov ymm5_8 lwd_8;
mov ymm5_9 lwd_9;
mov ymm5_a lwd_a;
mov ymm5_b lwd_b;
mov ymm5_c lwd_c;
mov ymm5_d lwd_d;
mov ymm5_e lwd_e;
mov ymm5_f lwd_f;
(* vpunpckhwd %ymm8,%ymm4,%ymm8                    #! PC = 0x555555558926 *)
mov hwd_0 ymm4_4;
mov hwd_1 ymm8_4;
mov hwd_2 ymm4_5;
mov hwd_3 ymm8_5;
mov hwd_4 ymm4_6;
mov hwd_5 ymm8_6;
mov hwd_6 ymm4_7;
mov hwd_7 ymm8_7;
mov hwd_8 ymm4_c;
mov hwd_9 ymm8_c;
mov hwd_a ymm4_d;
mov hwd_b ymm8_d;
mov hwd_c ymm4_e;
mov hwd_d ymm8_e;
mov hwd_e ymm4_f;
mov hwd_f ymm8_f;
mov ymm8_0 hwd_0;
mov ymm8_1 hwd_1;
mov ymm8_2 hwd_2;
mov ymm8_3 hwd_3;
mov ymm8_4 hwd_4;
mov ymm8_5 hwd_5;
mov ymm8_6 hwd_6;
mov ymm8_7 hwd_7;
mov ymm8_8 hwd_8;
mov ymm8_9 hwd_9;
mov ymm8_a hwd_a;
mov ymm8_b hwd_b;
mov ymm8_c hwd_c;
mov ymm8_d hwd_d;
mov ymm8_e hwd_e;
mov ymm8_f hwd_f;
(* vpunpcklwd %ymm11,%ymm10,%ymm4                  #! PC = 0x55555555892b *)
mov lwd_0 ymm10_0;
mov lwd_1 ymm11_0;
mov lwd_2 ymm10_1;
mov lwd_3 ymm11_1;
mov lwd_4 ymm10_2;
mov lwd_5 ymm11_2;
mov lwd_6 ymm10_3;
mov lwd_7 ymm11_3;
mov lwd_8 ymm10_8;
mov lwd_9 ymm11_8;
mov lwd_a ymm10_9;
mov lwd_b ymm11_9;
mov lwd_c ymm10_a;
mov lwd_d ymm11_a;
mov lwd_e ymm10_b;
mov lwd_f ymm11_b;
mov ymm4_0 lwd_0;
mov ymm4_1 lwd_1;
mov ymm4_2 lwd_2;
mov ymm4_3 lwd_3;
mov ymm4_4 lwd_4;
mov ymm4_5 lwd_5;
mov ymm4_6 lwd_6;
mov ymm4_7 lwd_7;
mov ymm4_8 lwd_8;
mov ymm4_9 lwd_9;
mov ymm4_a lwd_a;
mov ymm4_b lwd_b;
mov ymm4_c lwd_c;
mov ymm4_d lwd_d;
mov ymm4_e lwd_e;
mov ymm4_f lwd_f;
(* vpunpckhwd %ymm11,%ymm10,%ymm11                 #! PC = 0x555555558930 *)
mov hwd_0 ymm10_4;
mov hwd_1 ymm11_4;
mov hwd_2 ymm10_5;
mov hwd_3 ymm11_5;
mov hwd_4 ymm10_6;
mov hwd_5 ymm11_6;
mov hwd_6 ymm10_7;
mov hwd_7 ymm11_7;
mov hwd_8 ymm10_c;
mov hwd_9 ymm11_c;
mov hwd_a ymm10_d;
mov hwd_b ymm11_d;
mov hwd_c ymm10_e;
mov hwd_d ymm11_e;
mov hwd_e ymm10_f;
mov hwd_f ymm11_f;
mov ymm11_0 hwd_0;
mov ymm11_1 hwd_1;
mov ymm11_2 hwd_2;
mov ymm11_3 hwd_3;
mov ymm11_4 hwd_4;
mov ymm11_5 hwd_5;
mov ymm11_6 hwd_6;
mov ymm11_7 hwd_7;
mov ymm11_8 hwd_8;
mov ymm11_9 hwd_9;
mov ymm11_a hwd_a;
mov ymm11_b hwd_b;
mov ymm11_c hwd_c;
mov ymm11_d hwd_d;
mov ymm11_e hwd_e;
mov ymm11_f hwd_f;
(* vbroadcasti128 0x1c0(%rdx),%ymm1                #! EA = L0x5555555612e0; Value = 0xd1bedd9fe4be00b1; PC = 0x555555558935 *)
mov ymm1_0 L0x5555555612e0;
mov ymm1_1 L0x5555555612e2;
mov ymm1_2 L0x5555555612e4;
mov ymm1_3 L0x5555555612e6;
mov ymm1_4 L0x5555555612e8;
mov ymm1_5 L0x5555555612ea;
mov ymm1_6 L0x5555555612ec;
mov ymm1_7 L0x5555555612ee;
mov ymm1_8 L0x5555555612e0;
mov ymm1_9 L0x5555555612e2;
mov ymm1_a L0x5555555612e4;
mov ymm1_b L0x5555555612e6;
mov ymm1_c L0x5555555612e8;
mov ymm1_d L0x5555555612ea;
mov ymm1_e L0x5555555612ec;
mov ymm1_f L0x5555555612ee;
(* vbroadcasti128 0x3c0(%rdx),%ymm2                #! EA = L0x5555555614e0; Value = 0xfdbef39f10be0ab1; PC = 0x55555555893e *)
mov ymm2_0 L0x5555555614e0;
mov ymm2_1 L0x5555555614e2;
mov ymm2_2 L0x5555555614e4;
mov ymm2_3 L0x5555555614e6;
mov ymm2_4 L0x5555555614e8;
mov ymm2_5 L0x5555555614ea;
mov ymm2_6 L0x5555555614ec;
mov ymm2_7 L0x5555555614ee;
mov ymm2_8 L0x5555555614e0;
mov ymm2_9 L0x5555555614e2;
mov ymm2_a L0x5555555614e4;
mov ymm2_b L0x5555555614e6;
mov ymm2_c L0x5555555614e8;
mov ymm2_d L0x5555555614ea;
mov ymm2_e L0x5555555614ec;
mov ymm2_f L0x5555555614ee;
(* vpmullw %ymm1,%ymm3,%ymm10                      #! PC = 0x555555558947 *)
smull mulHymm3_0 mulL_0 ymm1_0 ymm3_0;
smull mulHymm3_1 mulL_1 ymm1_1 ymm3_1;
smull mulHymm3_2 mulL_2 ymm1_2 ymm3_2;
smull mulHymm3_3 mulL_3 ymm1_3 ymm3_3;
smull mulHymm3_4 mulL_4 ymm1_4 ymm3_4;
smull mulHymm3_5 mulL_5 ymm1_5 ymm3_5;
smull mulHymm3_6 mulL_6 ymm1_6 ymm3_6;
smull mulHymm3_7 mulL_7 ymm1_7 ymm3_7;
smull mulHymm3_8 mulL_8 ymm1_8 ymm3_8;
smull mulHymm3_9 mulL_9 ymm1_9 ymm3_9;
smull mulHymm3_a mulL_a ymm1_a ymm3_a;
smull mulHymm3_b mulL_b ymm1_b ymm3_b;
smull mulHymm3_c mulL_c ymm1_c ymm3_c;
smull mulHymm3_d mulL_d ymm1_d ymm3_d;
smull mulHymm3_e mulL_e ymm1_e ymm3_e;
smull mulHymm3_f mulL_f ymm1_f ymm3_f;
cast ymm10_0@sint16 mulL_0;
cast ymm10_1@sint16 mulL_1;
cast ymm10_2@sint16 mulL_2;
cast ymm10_3@sint16 mulL_3;
cast ymm10_4@sint16 mulL_4;
cast ymm10_5@sint16 mulL_5;
cast ymm10_6@sint16 mulL_6;
cast ymm10_7@sint16 mulL_7;
cast ymm10_8@sint16 mulL_8;
cast ymm10_9@sint16 mulL_9;
cast ymm10_a@sint16 mulL_a;
cast ymm10_b@sint16 mulL_b;
cast ymm10_c@sint16 mulL_c;
cast ymm10_d@sint16 mulL_d;
cast ymm10_e@sint16 mulL_e;
cast ymm10_f@sint16 mulL_f;
(* vpmulhw %ymm2,%ymm3,%ymm3                       #! PC = 0x55555555894b *)
smull mulH_0 mulLymm3_0 ymm3_0 ymm2_0;
smull mulH_1 mulLymm3_1 ymm3_1 ymm2_1;
smull mulH_2 mulLymm3_2 ymm3_2 ymm2_2;
smull mulH_3 mulLymm3_3 ymm3_3 ymm2_3;
smull mulH_4 mulLymm3_4 ymm3_4 ymm2_4;
smull mulH_5 mulLymm3_5 ymm3_5 ymm2_5;
smull mulH_6 mulLymm3_6 ymm3_6 ymm2_6;
smull mulH_7 mulLymm3_7 ymm3_7 ymm2_7;
smull mulH_8 mulLymm3_8 ymm3_8 ymm2_8;
smull mulH_9 mulLymm3_9 ymm3_9 ymm2_9;
smull mulH_a mulLymm3_a ymm3_a ymm2_a;
smull mulH_b mulLymm3_b ymm3_b ymm2_b;
smull mulH_c mulLymm3_c ymm3_c ymm2_c;
smull mulH_d mulLymm3_d ymm3_d ymm2_d;
smull mulH_e mulLymm3_e ymm3_e ymm2_e;
smull mulH_f mulLymm3_f ymm3_f ymm2_f;
mov ymm3_0 mulH_0;
mov ymm3_1 mulH_1;
mov ymm3_2 mulH_2;
mov ymm3_3 mulH_3;
mov ymm3_4 mulH_4;
mov ymm3_5 mulH_5;
mov ymm3_6 mulH_6;
mov ymm3_7 mulH_7;
mov ymm3_8 mulH_8;
mov ymm3_9 mulH_9;
mov ymm3_a mulH_a;
mov ymm3_b mulH_b;
mov ymm3_c mulH_c;
mov ymm3_d mulH_d;
mov ymm3_e mulH_e;
mov ymm3_f mulH_f;
(* vpmulhw %ymm0,%ymm10,%ymm10                     #! PC = 0x55555555894f *)
smull mulH_0 red_0 ymm10_0 ymm0_0;
assert true && red_0 = mulLymm3_0;
assume red_0 = mulLymm3_0 && true;
smull mulH_1 red_1 ymm10_1 ymm0_1;
assert true && red_1 = mulLymm3_1;
assume red_1 = mulLymm3_1 && true;
smull mulH_2 red_2 ymm10_2 ymm0_2;
assert true && red_2 = mulLymm3_2;
assume red_2 = mulLymm3_2 && true;
smull mulH_3 red_3 ymm10_3 ymm0_3;
assert true && red_3 = mulLymm3_3;
assume red_3 = mulLymm3_3 && true;
smull mulH_4 red_4 ymm10_4 ymm0_4;
assert true && red_4 = mulLymm3_4;
assume red_4 = mulLymm3_4 && true;
smull mulH_5 red_5 ymm10_5 ymm0_5;
assert true && red_5 = mulLymm3_5;
assume red_5 = mulLymm3_5 && true;
smull mulH_6 red_6 ymm10_6 ymm0_6;
assert true && red_6 = mulLymm3_6;
assume red_6 = mulLymm3_6 && true;
smull mulH_7 red_7 ymm10_7 ymm0_7;
assert true && red_7 = mulLymm3_7;
assume red_7 = mulLymm3_7 && true;
smull mulH_8 red_8 ymm10_8 ymm0_8;
assert true && red_8 = mulLymm3_8;
assume red_8 = mulLymm3_8 && true;
smull mulH_9 red_9 ymm10_9 ymm0_9;
assert true && red_9 = mulLymm3_9;
assume red_9 = mulLymm3_9 && true;
smull mulH_a red_a ymm10_a ymm0_a;
assert true && red_a = mulLymm3_a;
assume red_a = mulLymm3_a && true;
smull mulH_b red_b ymm10_b ymm0_b;
assert true && red_b = mulLymm3_b;
assume red_b = mulLymm3_b && true;
smull mulH_c red_c ymm10_c ymm0_c;
assert true && red_c = mulLymm3_c;
assume red_c = mulLymm3_c && true;
smull mulH_d red_d ymm10_d ymm0_d;
assert true && red_d = mulLymm3_d;
assume red_d = mulLymm3_d && true;
smull mulH_e red_e ymm10_e ymm0_e;
assert true && red_e = mulLymm3_e;
assume red_e = mulLymm3_e && true;
smull mulH_f red_f ymm10_f ymm0_f;
assert true && red_f = mulLymm3_f;
assume red_f = mulLymm3_f && true;
mov ymm10_0 mulH_0;
mov ymm10_1 mulH_1;
mov ymm10_2 mulH_2;
mov ymm10_3 mulH_3;
mov ymm10_4 mulH_4;
mov ymm10_5 mulH_5;
mov ymm10_6 mulH_6;
mov ymm10_7 mulH_7;
mov ymm10_8 mulH_8;
mov ymm10_9 mulH_9;
mov ymm10_a mulH_a;
mov ymm10_b mulH_b;
mov ymm10_c mulH_c;
mov ymm10_d mulH_d;
mov ymm10_e mulH_e;
mov ymm10_f mulH_f;
(* vpsubw %ymm10,%ymm3,%ymm3                       #! PC = 0x555555558953 *)
sub ymm3_0 ymm3_0 ymm10_0;
sub ymm3_1 ymm3_1 ymm10_1;
sub ymm3_2 ymm3_2 ymm10_2;
sub ymm3_3 ymm3_3 ymm10_3;
sub ymm3_4 ymm3_4 ymm10_4;
sub ymm3_5 ymm3_5 ymm10_5;
sub ymm3_6 ymm3_6 ymm10_6;
sub ymm3_7 ymm3_7 ymm10_7;
sub ymm3_8 ymm3_8 ymm10_8;
sub ymm3_9 ymm3_9 ymm10_9;
sub ymm3_a ymm3_a ymm10_a;
sub ymm3_b ymm3_b ymm10_b;
sub ymm3_c ymm3_c ymm10_c;
sub ymm3_d ymm3_d ymm10_d;
sub ymm3_e ymm3_e ymm10_e;
sub ymm3_f ymm3_f ymm10_f;
(* vbroadcasti128 0x1d0(%rdx),%ymm1                #! EA = L0x5555555612f0; Value = 0x7aba08121eb01cbc; PC = 0x555555558958 *)
mov ymm1_0 L0x5555555612f0;
mov ymm1_1 L0x5555555612f2;
mov ymm1_2 L0x5555555612f4;
mov ymm1_3 L0x5555555612f6;
mov ymm1_4 L0x5555555612f8;
mov ymm1_5 L0x5555555612fa;
mov ymm1_6 L0x5555555612fc;
mov ymm1_7 L0x5555555612fe;
mov ymm1_8 L0x5555555612f0;
mov ymm1_9 L0x5555555612f2;
mov ymm1_a L0x5555555612f4;
mov ymm1_b L0x5555555612f6;
mov ymm1_c L0x5555555612f8;
mov ymm1_d L0x5555555612fa;
mov ymm1_e L0x5555555612fc;
mov ymm1_f L0x5555555612fe;
(* vbroadcasti128 0x3d0(%rdx),%ymm2                #! EA = L0x5555555614f0; Value = 0xfebafc12feb0f4bc; PC = 0x555555558961 *)
mov ymm2_0 L0x5555555614f0;
mov ymm2_1 L0x5555555614f2;
mov ymm2_2 L0x5555555614f4;
mov ymm2_3 L0x5555555614f6;
mov ymm2_4 L0x5555555614f8;
mov ymm2_5 L0x5555555614fa;
mov ymm2_6 L0x5555555614fc;
mov ymm2_7 L0x5555555614fe;
mov ymm2_8 L0x5555555614f0;
mov ymm2_9 L0x5555555614f2;
mov ymm2_a L0x5555555614f4;
mov ymm2_b L0x5555555614f6;
mov ymm2_c L0x5555555614f8;
mov ymm2_d L0x5555555614fa;
mov ymm2_e L0x5555555614fc;
mov ymm2_f L0x5555555614fe;
(* vpmullw %ymm1,%ymm6,%ymm10                      #! PC = 0x55555555896a *)
smull mulHymm6_0 mulL_0 ymm1_0 ymm6_0;
smull mulHymm6_1 mulL_1 ymm1_1 ymm6_1;
smull mulHymm6_2 mulL_2 ymm1_2 ymm6_2;
smull mulHymm6_3 mulL_3 ymm1_3 ymm6_3;
smull mulHymm6_4 mulL_4 ymm1_4 ymm6_4;
smull mulHymm6_5 mulL_5 ymm1_5 ymm6_5;
smull mulHymm6_6 mulL_6 ymm1_6 ymm6_6;
smull mulHymm6_7 mulL_7 ymm1_7 ymm6_7;
smull mulHymm6_8 mulL_8 ymm1_8 ymm6_8;
smull mulHymm6_9 mulL_9 ymm1_9 ymm6_9;
smull mulHymm6_a mulL_a ymm1_a ymm6_a;
smull mulHymm6_b mulL_b ymm1_b ymm6_b;
smull mulHymm6_c mulL_c ymm1_c ymm6_c;
smull mulHymm6_d mulL_d ymm1_d ymm6_d;
smull mulHymm6_e mulL_e ymm1_e ymm6_e;
smull mulHymm6_f mulL_f ymm1_f ymm6_f;
cast ymm10_0@sint16 mulL_0;
cast ymm10_1@sint16 mulL_1;
cast ymm10_2@sint16 mulL_2;
cast ymm10_3@sint16 mulL_3;
cast ymm10_4@sint16 mulL_4;
cast ymm10_5@sint16 mulL_5;
cast ymm10_6@sint16 mulL_6;
cast ymm10_7@sint16 mulL_7;
cast ymm10_8@sint16 mulL_8;
cast ymm10_9@sint16 mulL_9;
cast ymm10_a@sint16 mulL_a;
cast ymm10_b@sint16 mulL_b;
cast ymm10_c@sint16 mulL_c;
cast ymm10_d@sint16 mulL_d;
cast ymm10_e@sint16 mulL_e;
cast ymm10_f@sint16 mulL_f;
(* vpmulhw %ymm2,%ymm6,%ymm6                       #! PC = 0x55555555896e *)
smull mulH_0 mulLymm6_0 ymm6_0 ymm2_0;
smull mulH_1 mulLymm6_1 ymm6_1 ymm2_1;
smull mulH_2 mulLymm6_2 ymm6_2 ymm2_2;
smull mulH_3 mulLymm6_3 ymm6_3 ymm2_3;
smull mulH_4 mulLymm6_4 ymm6_4 ymm2_4;
smull mulH_5 mulLymm6_5 ymm6_5 ymm2_5;
smull mulH_6 mulLymm6_6 ymm6_6 ymm2_6;
smull mulH_7 mulLymm6_7 ymm6_7 ymm2_7;
smull mulH_8 mulLymm6_8 ymm6_8 ymm2_8;
smull mulH_9 mulLymm6_9 ymm6_9 ymm2_9;
smull mulH_a mulLymm6_a ymm6_a ymm2_a;
smull mulH_b mulLymm6_b ymm6_b ymm2_b;
smull mulH_c mulLymm6_c ymm6_c ymm2_c;
smull mulH_d mulLymm6_d ymm6_d ymm2_d;
smull mulH_e mulLymm6_e ymm6_e ymm2_e;
smull mulH_f mulLymm6_f ymm6_f ymm2_f;
mov ymm6_0 mulH_0;
mov ymm6_1 mulH_1;
mov ymm6_2 mulH_2;
mov ymm6_3 mulH_3;
mov ymm6_4 mulH_4;
mov ymm6_5 mulH_5;
mov ymm6_6 mulH_6;
mov ymm6_7 mulH_7;
mov ymm6_8 mulH_8;
mov ymm6_9 mulH_9;
mov ymm6_a mulH_a;
mov ymm6_b mulH_b;
mov ymm6_c mulH_c;
mov ymm6_d mulH_d;
mov ymm6_e mulH_e;
mov ymm6_f mulH_f;
(* vpmulhw %ymm0,%ymm10,%ymm10                     #! PC = 0x555555558972 *)
smull mulH_0 red_0 ymm10_0 ymm0_0;
assert true && red_0 = mulLymm6_0;
assume red_0 = mulLymm6_0 && true;
smull mulH_1 red_1 ymm10_1 ymm0_1;
assert true && red_1 = mulLymm6_1;
assume red_1 = mulLymm6_1 && true;
smull mulH_2 red_2 ymm10_2 ymm0_2;
assert true && red_2 = mulLymm6_2;
assume red_2 = mulLymm6_2 && true;
smull mulH_3 red_3 ymm10_3 ymm0_3;
assert true && red_3 = mulLymm6_3;
assume red_3 = mulLymm6_3 && true;
smull mulH_4 red_4 ymm10_4 ymm0_4;
assert true && red_4 = mulLymm6_4;
assume red_4 = mulLymm6_4 && true;
smull mulH_5 red_5 ymm10_5 ymm0_5;
assert true && red_5 = mulLymm6_5;
assume red_5 = mulLymm6_5 && true;
smull mulH_6 red_6 ymm10_6 ymm0_6;
assert true && red_6 = mulLymm6_6;
assume red_6 = mulLymm6_6 && true;
smull mulH_7 red_7 ymm10_7 ymm0_7;
assert true && red_7 = mulLymm6_7;
assume red_7 = mulLymm6_7 && true;
smull mulH_8 red_8 ymm10_8 ymm0_8;
assert true && red_8 = mulLymm6_8;
assume red_8 = mulLymm6_8 && true;
smull mulH_9 red_9 ymm10_9 ymm0_9;
assert true && red_9 = mulLymm6_9;
assume red_9 = mulLymm6_9 && true;
smull mulH_a red_a ymm10_a ymm0_a;
assert true && red_a = mulLymm6_a;
assume red_a = mulLymm6_a && true;
smull mulH_b red_b ymm10_b ymm0_b;
assert true && red_b = mulLymm6_b;
assume red_b = mulLymm6_b && true;
smull mulH_c red_c ymm10_c ymm0_c;
assert true && red_c = mulLymm6_c;
assume red_c = mulLymm6_c && true;
smull mulH_d red_d ymm10_d ymm0_d;
assert true && red_d = mulLymm6_d;
assume red_d = mulLymm6_d && true;
smull mulH_e red_e ymm10_e ymm0_e;
assert true && red_e = mulLymm6_e;
assume red_e = mulLymm6_e && true;
smull mulH_f red_f ymm10_f ymm0_f;
assert true && red_f = mulLymm6_f;
assume red_f = mulLymm6_f && true;
mov ymm10_0 mulH_0;
mov ymm10_1 mulH_1;
mov ymm10_2 mulH_2;
mov ymm10_3 mulH_3;
mov ymm10_4 mulH_4;
mov ymm10_5 mulH_5;
mov ymm10_6 mulH_6;
mov ymm10_7 mulH_7;
mov ymm10_8 mulH_8;
mov ymm10_9 mulH_9;
mov ymm10_a mulH_a;
mov ymm10_b mulH_b;
mov ymm10_c mulH_c;
mov ymm10_d mulH_d;
mov ymm10_e mulH_e;
mov ymm10_f mulH_f;
(* vpsubw %ymm10,%ymm6,%ymm6                       #! PC = 0x555555558976 *)
sub ymm6_0 ymm6_0 ymm10_0;
sub ymm6_1 ymm6_1 ymm10_1;
sub ymm6_2 ymm6_2 ymm10_2;
sub ymm6_3 ymm6_3 ymm10_3;
sub ymm6_4 ymm6_4 ymm10_4;
sub ymm6_5 ymm6_5 ymm10_5;
sub ymm6_6 ymm6_6 ymm10_6;
sub ymm6_7 ymm6_7 ymm10_7;
sub ymm6_8 ymm6_8 ymm10_8;
sub ymm6_9 ymm6_9 ymm10_9;
sub ymm6_a ymm6_a ymm10_a;
sub ymm6_b ymm6_b ymm10_b;
sub ymm6_c ymm6_c ymm10_c;
sub ymm6_d ymm6_d ymm10_d;
sub ymm6_e ymm6_e ymm10_e;
sub ymm6_f ymm6_f ymm10_f;
(* vbroadcasti128 0x1e0(%rdx),%ymm1                #! EA = L0x555555561300; Value = 0x030c6f7dcc2c2dce; PC = 0x55555555897b *)
mov ymm1_0 L0x555555561300;
mov ymm1_1 L0x555555561302;
mov ymm1_2 L0x555555561304;
mov ymm1_3 L0x555555561306;
mov ymm1_4 L0x555555561308;
mov ymm1_5 L0x55555556130a;
mov ymm1_6 L0x55555556130c;
mov ymm1_7 L0x55555556130e;
mov ymm1_8 L0x555555561300;
mov ymm1_9 L0x555555561302;
mov ymm1_a L0x555555561304;
mov ymm1_b L0x555555561306;
mov ymm1_c L0x555555561308;
mov ymm1_d L0x55555556130a;
mov ymm1_e L0x55555556130c;
mov ymm1_f L0x55555556130e;
(* vbroadcasti128 0x3e0(%rdx),%ymm2                #! EA = L0x555555561500; Value = 0xfb0cf17d042cf9ce; PC = 0x555555558984 *)
mov ymm2_0 L0x555555561500;
mov ymm2_1 L0x555555561502;
mov ymm2_2 L0x555555561504;
mov ymm2_3 L0x555555561506;
mov ymm2_4 L0x555555561508;
mov ymm2_5 L0x55555556150a;
mov ymm2_6 L0x55555556150c;
mov ymm2_7 L0x55555556150e;
mov ymm2_8 L0x555555561500;
mov ymm2_9 L0x555555561502;
mov ymm2_a L0x555555561504;
mov ymm2_b L0x555555561506;
mov ymm2_c L0x555555561508;
mov ymm2_d L0x55555556150a;
mov ymm2_e L0x55555556150c;
mov ymm2_f L0x55555556150e;
(* vpmullw %ymm1,%ymm8,%ymm10                      #! PC = 0x55555555898d *)
smull mulHymm8_0 mulL_0 ymm1_0 ymm8_0;
smull mulHymm8_1 mulL_1 ymm1_1 ymm8_1;
smull mulHymm8_2 mulL_2 ymm1_2 ymm8_2;
smull mulHymm8_3 mulL_3 ymm1_3 ymm8_3;
smull mulHymm8_4 mulL_4 ymm1_4 ymm8_4;
smull mulHymm8_5 mulL_5 ymm1_5 ymm8_5;
smull mulHymm8_6 mulL_6 ymm1_6 ymm8_6;
smull mulHymm8_7 mulL_7 ymm1_7 ymm8_7;
smull mulHymm8_8 mulL_8 ymm1_8 ymm8_8;
smull mulHymm8_9 mulL_9 ymm1_9 ymm8_9;
smull mulHymm8_a mulL_a ymm1_a ymm8_a;
smull mulHymm8_b mulL_b ymm1_b ymm8_b;
smull mulHymm8_c mulL_c ymm1_c ymm8_c;
smull mulHymm8_d mulL_d ymm1_d ymm8_d;
smull mulHymm8_e mulL_e ymm1_e ymm8_e;
smull mulHymm8_f mulL_f ymm1_f ymm8_f;
cast ymm10_0@sint16 mulL_0;
cast ymm10_1@sint16 mulL_1;
cast ymm10_2@sint16 mulL_2;
cast ymm10_3@sint16 mulL_3;
cast ymm10_4@sint16 mulL_4;
cast ymm10_5@sint16 mulL_5;
cast ymm10_6@sint16 mulL_6;
cast ymm10_7@sint16 mulL_7;
cast ymm10_8@sint16 mulL_8;
cast ymm10_9@sint16 mulL_9;
cast ymm10_a@sint16 mulL_a;
cast ymm10_b@sint16 mulL_b;
cast ymm10_c@sint16 mulL_c;
cast ymm10_d@sint16 mulL_d;
cast ymm10_e@sint16 mulL_e;
cast ymm10_f@sint16 mulL_f;
(* vpmulhw %ymm2,%ymm8,%ymm8                       #! PC = 0x555555558991 *)
smull mulH_0 mulLymm8_0 ymm8_0 ymm2_0;
smull mulH_1 mulLymm8_1 ymm8_1 ymm2_1;
smull mulH_2 mulLymm8_2 ymm8_2 ymm2_2;
smull mulH_3 mulLymm8_3 ymm8_3 ymm2_3;
smull mulH_4 mulLymm8_4 ymm8_4 ymm2_4;
smull mulH_5 mulLymm8_5 ymm8_5 ymm2_5;
smull mulH_6 mulLymm8_6 ymm8_6 ymm2_6;
smull mulH_7 mulLymm8_7 ymm8_7 ymm2_7;
smull mulH_8 mulLymm8_8 ymm8_8 ymm2_8;
smull mulH_9 mulLymm8_9 ymm8_9 ymm2_9;
smull mulH_a mulLymm8_a ymm8_a ymm2_a;
smull mulH_b mulLymm8_b ymm8_b ymm2_b;
smull mulH_c mulLymm8_c ymm8_c ymm2_c;
smull mulH_d mulLymm8_d ymm8_d ymm2_d;
smull mulH_e mulLymm8_e ymm8_e ymm2_e;
smull mulH_f mulLymm8_f ymm8_f ymm2_f;
mov ymm8_0 mulH_0;
mov ymm8_1 mulH_1;
mov ymm8_2 mulH_2;
mov ymm8_3 mulH_3;
mov ymm8_4 mulH_4;
mov ymm8_5 mulH_5;
mov ymm8_6 mulH_6;
mov ymm8_7 mulH_7;
mov ymm8_8 mulH_8;
mov ymm8_9 mulH_9;
mov ymm8_a mulH_a;
mov ymm8_b mulH_b;
mov ymm8_c mulH_c;
mov ymm8_d mulH_d;
mov ymm8_e mulH_e;
mov ymm8_f mulH_f;
(* vpmulhw %ymm0,%ymm10,%ymm10                     #! PC = 0x555555558995 *)
smull mulH_0 red_0 ymm10_0 ymm0_0;
assert true && red_0 = mulLymm8_0;
assume red_0 = mulLymm8_0 && true;
smull mulH_1 red_1 ymm10_1 ymm0_1;
assert true && red_1 = mulLymm8_1;
assume red_1 = mulLymm8_1 && true;
smull mulH_2 red_2 ymm10_2 ymm0_2;
assert true && red_2 = mulLymm8_2;
assume red_2 = mulLymm8_2 && true;
smull mulH_3 red_3 ymm10_3 ymm0_3;
assert true && red_3 = mulLymm8_3;
assume red_3 = mulLymm8_3 && true;
smull mulH_4 red_4 ymm10_4 ymm0_4;
assert true && red_4 = mulLymm8_4;
assume red_4 = mulLymm8_4 && true;
smull mulH_5 red_5 ymm10_5 ymm0_5;
assert true && red_5 = mulLymm8_5;
assume red_5 = mulLymm8_5 && true;
smull mulH_6 red_6 ymm10_6 ymm0_6;
assert true && red_6 = mulLymm8_6;
assume red_6 = mulLymm8_6 && true;
smull mulH_7 red_7 ymm10_7 ymm0_7;
assert true && red_7 = mulLymm8_7;
assume red_7 = mulLymm8_7 && true;
smull mulH_8 red_8 ymm10_8 ymm0_8;
assert true && red_8 = mulLymm8_8;
assume red_8 = mulLymm8_8 && true;
smull mulH_9 red_9 ymm10_9 ymm0_9;
assert true && red_9 = mulLymm8_9;
assume red_9 = mulLymm8_9 && true;
smull mulH_a red_a ymm10_a ymm0_a;
assert true && red_a = mulLymm8_a;
assume red_a = mulLymm8_a && true;
smull mulH_b red_b ymm10_b ymm0_b;
assert true && red_b = mulLymm8_b;
assume red_b = mulLymm8_b && true;
smull mulH_c red_c ymm10_c ymm0_c;
assert true && red_c = mulLymm8_c;
assume red_c = mulLymm8_c && true;
smull mulH_d red_d ymm10_d ymm0_d;
assert true && red_d = mulLymm8_d;
assume red_d = mulLymm8_d && true;
smull mulH_e red_e ymm10_e ymm0_e;
assert true && red_e = mulLymm8_e;
assume red_e = mulLymm8_e && true;
smull mulH_f red_f ymm10_f ymm0_f;
assert true && red_f = mulLymm8_f;
assume red_f = mulLymm8_f && true;
mov ymm10_0 mulH_0;
mov ymm10_1 mulH_1;
mov ymm10_2 mulH_2;
mov ymm10_3 mulH_3;
mov ymm10_4 mulH_4;
mov ymm10_5 mulH_5;
mov ymm10_6 mulH_6;
mov ymm10_7 mulH_7;
mov ymm10_8 mulH_8;
mov ymm10_9 mulH_9;
mov ymm10_a mulH_a;
mov ymm10_b mulH_b;
mov ymm10_c mulH_c;
mov ymm10_d mulH_d;
mov ymm10_e mulH_e;
mov ymm10_f mulH_f;
(* vpsubw %ymm10,%ymm8,%ymm8                       #! PC = 0x555555558999 *)
sub ymm8_0 ymm8_0 ymm10_0;
sub ymm8_1 ymm8_1 ymm10_1;
sub ymm8_2 ymm8_2 ymm10_2;
sub ymm8_3 ymm8_3 ymm10_3;
sub ymm8_4 ymm8_4 ymm10_4;
sub ymm8_5 ymm8_5 ymm10_5;
sub ymm8_6 ymm8_6 ymm10_6;
sub ymm8_7 ymm8_7 ymm10_7;
sub ymm8_8 ymm8_8 ymm10_8;
sub ymm8_9 ymm8_9 ymm10_9;
sub ymm8_a ymm8_a ymm10_a;
sub ymm8_b ymm8_b ymm10_b;
sub ymm8_c ymm8_c ymm10_c;
sub ymm8_d ymm8_d ymm10_d;
sub ymm8_e ymm8_e ymm10_e;
sub ymm8_f ymm8_f ymm10_f;
(* vbroadcasti128 0x1f0(%rdx),%ymm1                #! EA = L0x555555561310; Value = 0xbca093095de57b46; PC = 0x55555555899e *)
mov ymm1_0 L0x555555561310;
mov ymm1_1 L0x555555561312;
mov ymm1_2 L0x555555561314;
mov ymm1_3 L0x555555561316;
mov ymm1_4 L0x555555561318;
mov ymm1_5 L0x55555556131a;
mov ymm1_6 L0x55555556131c;
mov ymm1_7 L0x55555556131e;
mov ymm1_8 L0x555555561310;
mov ymm1_9 L0x555555561312;
mov ymm1_a L0x555555561314;
mov ymm1_b L0x555555561316;
mov ymm1_c L0x555555561318;
mov ymm1_d L0x55555556131a;
mov ymm1_e L0x55555556131c;
mov ymm1_f L0x55555556131e;
(* vbroadcasti128 0x3f0(%rdx),%ymm2                #! EA = L0x555555561510; Value = 0xfca00d09efe5f746; PC = 0x5555555589a7 *)
mov ymm2_0 L0x555555561510;
mov ymm2_1 L0x555555561512;
mov ymm2_2 L0x555555561514;
mov ymm2_3 L0x555555561516;
mov ymm2_4 L0x555555561518;
mov ymm2_5 L0x55555556151a;
mov ymm2_6 L0x55555556151c;
mov ymm2_7 L0x55555556151e;
mov ymm2_8 L0x555555561510;
mov ymm2_9 L0x555555561512;
mov ymm2_a L0x555555561514;
mov ymm2_b L0x555555561516;
mov ymm2_c L0x555555561518;
mov ymm2_d L0x55555556151a;
mov ymm2_e L0x55555556151c;
mov ymm2_f L0x55555556151e;
(* vpmullw %ymm1,%ymm11,%ymm10                     #! PC = 0x5555555589b0 *)
smull mulHymm11_0 mulL_0 ymm1_0 ymm11_0;
smull mulHymm11_1 mulL_1 ymm1_1 ymm11_1;
smull mulHymm11_2 mulL_2 ymm1_2 ymm11_2;
smull mulHymm11_3 mulL_3 ymm1_3 ymm11_3;
smull mulHymm11_4 mulL_4 ymm1_4 ymm11_4;
smull mulHymm11_5 mulL_5 ymm1_5 ymm11_5;
smull mulHymm11_6 mulL_6 ymm1_6 ymm11_6;
smull mulHymm11_7 mulL_7 ymm1_7 ymm11_7;
smull mulHymm11_8 mulL_8 ymm1_8 ymm11_8;
smull mulHymm11_9 mulL_9 ymm1_9 ymm11_9;
smull mulHymm11_a mulL_a ymm1_a ymm11_a;
smull mulHymm11_b mulL_b ymm1_b ymm11_b;
smull mulHymm11_c mulL_c ymm1_c ymm11_c;
smull mulHymm11_d mulL_d ymm1_d ymm11_d;
smull mulHymm11_e mulL_e ymm1_e ymm11_e;
smull mulHymm11_f mulL_f ymm1_f ymm11_f;
cast ymm10_0@sint16 mulL_0;
cast ymm10_1@sint16 mulL_1;
cast ymm10_2@sint16 mulL_2;
cast ymm10_3@sint16 mulL_3;
cast ymm10_4@sint16 mulL_4;
cast ymm10_5@sint16 mulL_5;
cast ymm10_6@sint16 mulL_6;
cast ymm10_7@sint16 mulL_7;
cast ymm10_8@sint16 mulL_8;
cast ymm10_9@sint16 mulL_9;
cast ymm10_a@sint16 mulL_a;
cast ymm10_b@sint16 mulL_b;
cast ymm10_c@sint16 mulL_c;
cast ymm10_d@sint16 mulL_d;
cast ymm10_e@sint16 mulL_e;
cast ymm10_f@sint16 mulL_f;
(* vpmulhw %ymm2,%ymm11,%ymm11                     #! PC = 0x5555555589b4 *)
smull mulH_0 mulLymm11_0 ymm11_0 ymm2_0;
smull mulH_1 mulLymm11_1 ymm11_1 ymm2_1;
smull mulH_2 mulLymm11_2 ymm11_2 ymm2_2;
smull mulH_3 mulLymm11_3 ymm11_3 ymm2_3;
smull mulH_4 mulLymm11_4 ymm11_4 ymm2_4;
smull mulH_5 mulLymm11_5 ymm11_5 ymm2_5;
smull mulH_6 mulLymm11_6 ymm11_6 ymm2_6;
smull mulH_7 mulLymm11_7 ymm11_7 ymm2_7;
smull mulH_8 mulLymm11_8 ymm11_8 ymm2_8;
smull mulH_9 mulLymm11_9 ymm11_9 ymm2_9;
smull mulH_a mulLymm11_a ymm11_a ymm2_a;
smull mulH_b mulLymm11_b ymm11_b ymm2_b;
smull mulH_c mulLymm11_c ymm11_c ymm2_c;
smull mulH_d mulLymm11_d ymm11_d ymm2_d;
smull mulH_e mulLymm11_e ymm11_e ymm2_e;
smull mulH_f mulLymm11_f ymm11_f ymm2_f;
mov ymm11_0 mulH_0;
mov ymm11_1 mulH_1;
mov ymm11_2 mulH_2;
mov ymm11_3 mulH_3;
mov ymm11_4 mulH_4;
mov ymm11_5 mulH_5;
mov ymm11_6 mulH_6;
mov ymm11_7 mulH_7;
mov ymm11_8 mulH_8;
mov ymm11_9 mulH_9;
mov ymm11_a mulH_a;
mov ymm11_b mulH_b;
mov ymm11_c mulH_c;
mov ymm11_d mulH_d;
mov ymm11_e mulH_e;
mov ymm11_f mulH_f;
(* vpmulhw %ymm0,%ymm10,%ymm10                     #! PC = 0x5555555589b8 *)
smull mulH_0 red_0 ymm10_0 ymm0_0;
assert true && red_0 = mulLymm11_0;
assume red_0 = mulLymm11_0 && true;
smull mulH_1 red_1 ymm10_1 ymm0_1;
assert true && red_1 = mulLymm11_1;
assume red_1 = mulLymm11_1 && true;
smull mulH_2 red_2 ymm10_2 ymm0_2;
assert true && red_2 = mulLymm11_2;
assume red_2 = mulLymm11_2 && true;
smull mulH_3 red_3 ymm10_3 ymm0_3;
assert true && red_3 = mulLymm11_3;
assume red_3 = mulLymm11_3 && true;
smull mulH_4 red_4 ymm10_4 ymm0_4;
assert true && red_4 = mulLymm11_4;
assume red_4 = mulLymm11_4 && true;
smull mulH_5 red_5 ymm10_5 ymm0_5;
assert true && red_5 = mulLymm11_5;
assume red_5 = mulLymm11_5 && true;
smull mulH_6 red_6 ymm10_6 ymm0_6;
assert true && red_6 = mulLymm11_6;
assume red_6 = mulLymm11_6 && true;
smull mulH_7 red_7 ymm10_7 ymm0_7;
assert true && red_7 = mulLymm11_7;
assume red_7 = mulLymm11_7 && true;
smull mulH_8 red_8 ymm10_8 ymm0_8;
assert true && red_8 = mulLymm11_8;
assume red_8 = mulLymm11_8 && true;
smull mulH_9 red_9 ymm10_9 ymm0_9;
assert true && red_9 = mulLymm11_9;
assume red_9 = mulLymm11_9 && true;
smull mulH_a red_a ymm10_a ymm0_a;
assert true && red_a = mulLymm11_a;
assume red_a = mulLymm11_a && true;
smull mulH_b red_b ymm10_b ymm0_b;
assert true && red_b = mulLymm11_b;
assume red_b = mulLymm11_b && true;
smull mulH_c red_c ymm10_c ymm0_c;
assert true && red_c = mulLymm11_c;
assume red_c = mulLymm11_c && true;
smull mulH_d red_d ymm10_d ymm0_d;
assert true && red_d = mulLymm11_d;
assume red_d = mulLymm11_d && true;
smull mulH_e red_e ymm10_e ymm0_e;
assert true && red_e = mulLymm11_e;
assume red_e = mulLymm11_e && true;
smull mulH_f red_f ymm10_f ymm0_f;
assert true && red_f = mulLymm11_f;
assume red_f = mulLymm11_f && true;
mov ymm10_0 mulH_0;
mov ymm10_1 mulH_1;
mov ymm10_2 mulH_2;
mov ymm10_3 mulH_3;
mov ymm10_4 mulH_4;
mov ymm10_5 mulH_5;
mov ymm10_6 mulH_6;
mov ymm10_7 mulH_7;
mov ymm10_8 mulH_8;
mov ymm10_9 mulH_9;
mov ymm10_a mulH_a;
mov ymm10_b mulH_b;
mov ymm10_c mulH_c;
mov ymm10_d mulH_d;
mov ymm10_e mulH_e;
mov ymm10_f mulH_f;
(* vpsubw %ymm10,%ymm11,%ymm11                     #! PC = 0x5555555589bc *)
sub ymm11_0 ymm11_0 ymm10_0;
sub ymm11_1 ymm11_1 ymm10_1;
sub ymm11_2 ymm11_2 ymm10_2;
sub ymm11_3 ymm11_3 ymm10_3;
sub ymm11_4 ymm11_4 ymm10_4;
sub ymm11_5 ymm11_5 ymm10_5;
sub ymm11_6 ymm11_6 ymm10_6;
sub ymm11_7 ymm11_7 ymm10_7;
sub ymm11_8 ymm11_8 ymm10_8;
sub ymm11_9 ymm11_9 ymm10_9;
sub ymm11_a ymm11_a ymm10_a;
sub ymm11_b ymm11_b ymm10_b;
sub ymm11_c ymm11_c ymm10_c;
sub ymm11_d ymm11_d ymm10_d;
sub ymm11_e ymm11_e ymm10_e;
sub ymm11_f ymm11_f ymm10_f;
(* vpaddw %ymm3,%ymm9,%ymm10                       #! PC = 0x5555555589c1 *)
add ymm10_0 ymm9_0 ymm3_0;
add ymm10_1 ymm9_1 ymm3_1;
add ymm10_2 ymm9_2 ymm3_2;
add ymm10_3 ymm9_3 ymm3_3;
add ymm10_4 ymm9_4 ymm3_4;
add ymm10_5 ymm9_5 ymm3_5;
add ymm10_6 ymm9_6 ymm3_6;
add ymm10_7 ymm9_7 ymm3_7;
add ymm10_8 ymm9_8 ymm3_8;
add ymm10_9 ymm9_9 ymm3_9;
add ymm10_a ymm9_a ymm3_a;
add ymm10_b ymm9_b ymm3_b;
add ymm10_c ymm9_c ymm3_c;
add ymm10_d ymm9_d ymm3_d;
add ymm10_e ymm9_e ymm3_e;
add ymm10_f ymm9_f ymm3_f;
(* vpsubw %ymm3,%ymm9,%ymm3                        #! PC = 0x5555555589c5 *)
sub ymm3_0 ymm9_0 ymm3_0;
sub ymm3_1 ymm9_1 ymm3_1;
sub ymm3_2 ymm9_2 ymm3_2;
sub ymm3_3 ymm9_3 ymm3_3;
sub ymm3_4 ymm9_4 ymm3_4;
sub ymm3_5 ymm9_5 ymm3_5;
sub ymm3_6 ymm9_6 ymm3_6;
sub ymm3_7 ymm9_7 ymm3_7;
sub ymm3_8 ymm9_8 ymm3_8;
sub ymm3_9 ymm9_9 ymm3_9;
sub ymm3_a ymm9_a ymm3_a;
sub ymm3_b ymm9_b ymm3_b;
sub ymm3_c ymm9_c ymm3_c;
sub ymm3_d ymm9_d ymm3_d;
sub ymm3_e ymm9_e ymm3_e;
sub ymm3_f ymm9_f ymm3_f;
(* vpaddw %ymm6,%ymm7,%ymm9                        #! PC = 0x5555555589c9 *)
add ymm9_0 ymm7_0 ymm6_0;
add ymm9_1 ymm7_1 ymm6_1;
add ymm9_2 ymm7_2 ymm6_2;
add ymm9_3 ymm7_3 ymm6_3;
add ymm9_4 ymm7_4 ymm6_4;
add ymm9_5 ymm7_5 ymm6_5;
add ymm9_6 ymm7_6 ymm6_6;
add ymm9_7 ymm7_7 ymm6_7;
add ymm9_8 ymm7_8 ymm6_8;
add ymm9_9 ymm7_9 ymm6_9;
add ymm9_a ymm7_a ymm6_a;
add ymm9_b ymm7_b ymm6_b;
add ymm9_c ymm7_c ymm6_c;
add ymm9_d ymm7_d ymm6_d;
add ymm9_e ymm7_e ymm6_e;
add ymm9_f ymm7_f ymm6_f;
(* vpsubw %ymm6,%ymm7,%ymm6                        #! PC = 0x5555555589cd *)
sub ymm6_0 ymm7_0 ymm6_0;
sub ymm6_1 ymm7_1 ymm6_1;
sub ymm6_2 ymm7_2 ymm6_2;
sub ymm6_3 ymm7_3 ymm6_3;
sub ymm6_4 ymm7_4 ymm6_4;
sub ymm6_5 ymm7_5 ymm6_5;
sub ymm6_6 ymm7_6 ymm6_6;
sub ymm6_7 ymm7_7 ymm6_7;
sub ymm6_8 ymm7_8 ymm6_8;
sub ymm6_9 ymm7_9 ymm6_9;
sub ymm6_a ymm7_a ymm6_a;
sub ymm6_b ymm7_b ymm6_b;
sub ymm6_c ymm7_c ymm6_c;
sub ymm6_d ymm7_d ymm6_d;
sub ymm6_e ymm7_e ymm6_e;
sub ymm6_f ymm7_f ymm6_f;
(* vpaddw %ymm8,%ymm5,%ymm7                        #! PC = 0x5555555589d1 *)
add ymm7_0 ymm5_0 ymm8_0;
add ymm7_1 ymm5_1 ymm8_1;
add ymm7_2 ymm5_2 ymm8_2;
add ymm7_3 ymm5_3 ymm8_3;
add ymm7_4 ymm5_4 ymm8_4;
add ymm7_5 ymm5_5 ymm8_5;
add ymm7_6 ymm5_6 ymm8_6;
add ymm7_7 ymm5_7 ymm8_7;
add ymm7_8 ymm5_8 ymm8_8;
add ymm7_9 ymm5_9 ymm8_9;
add ymm7_a ymm5_a ymm8_a;
add ymm7_b ymm5_b ymm8_b;
add ymm7_c ymm5_c ymm8_c;
add ymm7_d ymm5_d ymm8_d;
add ymm7_e ymm5_e ymm8_e;
add ymm7_f ymm5_f ymm8_f;
(* vpsubw %ymm8,%ymm5,%ymm8                        #! PC = 0x5555555589d6 *)
sub ymm8_0 ymm5_0 ymm8_0;
sub ymm8_1 ymm5_1 ymm8_1;
sub ymm8_2 ymm5_2 ymm8_2;
sub ymm8_3 ymm5_3 ymm8_3;
sub ymm8_4 ymm5_4 ymm8_4;
sub ymm8_5 ymm5_5 ymm8_5;
sub ymm8_6 ymm5_6 ymm8_6;
sub ymm8_7 ymm5_7 ymm8_7;
sub ymm8_8 ymm5_8 ymm8_8;
sub ymm8_9 ymm5_9 ymm8_9;
sub ymm8_a ymm5_a ymm8_a;
sub ymm8_b ymm5_b ymm8_b;
sub ymm8_c ymm5_c ymm8_c;
sub ymm8_d ymm5_d ymm8_d;
sub ymm8_e ymm5_e ymm8_e;
sub ymm8_f ymm5_f ymm8_f;
(* vpaddw %ymm11,%ymm4,%ymm5                       #! PC = 0x5555555589db *)
add ymm5_0 ymm4_0 ymm11_0;
add ymm5_1 ymm4_1 ymm11_1;
add ymm5_2 ymm4_2 ymm11_2;
add ymm5_3 ymm4_3 ymm11_3;
add ymm5_4 ymm4_4 ymm11_4;
add ymm5_5 ymm4_5 ymm11_5;
add ymm5_6 ymm4_6 ymm11_6;
add ymm5_7 ymm4_7 ymm11_7;
add ymm5_8 ymm4_8 ymm11_8;
add ymm5_9 ymm4_9 ymm11_9;
add ymm5_a ymm4_a ymm11_a;
add ymm5_b ymm4_b ymm11_b;
add ymm5_c ymm4_c ymm11_c;
add ymm5_d ymm4_d ymm11_d;
add ymm5_e ymm4_e ymm11_e;
add ymm5_f ymm4_f ymm11_f;
(* vpsubw %ymm11,%ymm4,%ymm11                      #! PC = 0x5555555589e0 *)
sub ymm11_0 ymm4_0 ymm11_0;
sub ymm11_1 ymm4_1 ymm11_1;
sub ymm11_2 ymm4_2 ymm11_2;
sub ymm11_3 ymm4_3 ymm11_3;
sub ymm11_4 ymm4_4 ymm11_4;
sub ymm11_5 ymm4_5 ymm11_5;
sub ymm11_6 ymm4_6 ymm11_6;
sub ymm11_7 ymm4_7 ymm11_7;
sub ymm11_8 ymm4_8 ymm11_8;
sub ymm11_9 ymm4_9 ymm11_9;
sub ymm11_a ymm4_a ymm11_a;
sub ymm11_b ymm4_b ymm11_b;
sub ymm11_c ymm4_c ymm11_c;
sub ymm11_d ymm4_d ymm11_d;
sub ymm11_e ymm4_e ymm11_e;
sub ymm11_f ymm4_f ymm11_f;
(* vmovdqa %ymm10,0x300(%rdi)                      #! EA = L0x7fffffffd5e0; PC = 0x5555555589e5 *)
mov L0x7fffffffd5e0 ymm10_0;
mov L0x7fffffffd5e2 ymm10_1;
mov L0x7fffffffd5e4 ymm10_2;
mov L0x7fffffffd5e6 ymm10_3;
mov L0x7fffffffd5e8 ymm10_4;
mov L0x7fffffffd5ea ymm10_5;
mov L0x7fffffffd5ec ymm10_6;
mov L0x7fffffffd5ee ymm10_7;
mov L0x7fffffffd5f0 ymm10_8;
mov L0x7fffffffd5f2 ymm10_9;
mov L0x7fffffffd5f4 ymm10_a;
mov L0x7fffffffd5f6 ymm10_b;
mov L0x7fffffffd5f8 ymm10_c;
mov L0x7fffffffd5fa ymm10_d;
mov L0x7fffffffd5fc ymm10_e;
mov L0x7fffffffd5fe ymm10_f;
(* vmovdqa %ymm3,0x320(%rdi)                       #! EA = L0x7fffffffd600; PC = 0x5555555589ed *)
mov L0x7fffffffd600 ymm3_0;
mov L0x7fffffffd602 ymm3_1;
mov L0x7fffffffd604 ymm3_2;
mov L0x7fffffffd606 ymm3_3;
mov L0x7fffffffd608 ymm3_4;
mov L0x7fffffffd60a ymm3_5;
mov L0x7fffffffd60c ymm3_6;
mov L0x7fffffffd60e ymm3_7;
mov L0x7fffffffd610 ymm3_8;
mov L0x7fffffffd612 ymm3_9;
mov L0x7fffffffd614 ymm3_a;
mov L0x7fffffffd616 ymm3_b;
mov L0x7fffffffd618 ymm3_c;
mov L0x7fffffffd61a ymm3_d;
mov L0x7fffffffd61c ymm3_e;
mov L0x7fffffffd61e ymm3_f;
(* vmovdqa %ymm9,0x340(%rdi)                       #! EA = L0x7fffffffd620; PC = 0x5555555589f5 *)
mov L0x7fffffffd620 ymm9_0;
mov L0x7fffffffd622 ymm9_1;
mov L0x7fffffffd624 ymm9_2;
mov L0x7fffffffd626 ymm9_3;
mov L0x7fffffffd628 ymm9_4;
mov L0x7fffffffd62a ymm9_5;
mov L0x7fffffffd62c ymm9_6;
mov L0x7fffffffd62e ymm9_7;
mov L0x7fffffffd630 ymm9_8;
mov L0x7fffffffd632 ymm9_9;
mov L0x7fffffffd634 ymm9_a;
mov L0x7fffffffd636 ymm9_b;
mov L0x7fffffffd638 ymm9_c;
mov L0x7fffffffd63a ymm9_d;
mov L0x7fffffffd63c ymm9_e;
mov L0x7fffffffd63e ymm9_f;
(* vmovdqa %ymm6,0x360(%rdi)                       #! EA = L0x7fffffffd640; PC = 0x5555555589fd *)
mov L0x7fffffffd640 ymm6_0;
mov L0x7fffffffd642 ymm6_1;
mov L0x7fffffffd644 ymm6_2;
mov L0x7fffffffd646 ymm6_3;
mov L0x7fffffffd648 ymm6_4;
mov L0x7fffffffd64a ymm6_5;
mov L0x7fffffffd64c ymm6_6;
mov L0x7fffffffd64e ymm6_7;
mov L0x7fffffffd650 ymm6_8;
mov L0x7fffffffd652 ymm6_9;
mov L0x7fffffffd654 ymm6_a;
mov L0x7fffffffd656 ymm6_b;
mov L0x7fffffffd658 ymm6_c;
mov L0x7fffffffd65a ymm6_d;
mov L0x7fffffffd65c ymm6_e;
mov L0x7fffffffd65e ymm6_f;
(* vmovdqa %ymm7,0x380(%rdi)                       #! EA = L0x7fffffffd660; PC = 0x555555558a05 *)
mov L0x7fffffffd660 ymm7_0;
mov L0x7fffffffd662 ymm7_1;
mov L0x7fffffffd664 ymm7_2;
mov L0x7fffffffd666 ymm7_3;
mov L0x7fffffffd668 ymm7_4;
mov L0x7fffffffd66a ymm7_5;
mov L0x7fffffffd66c ymm7_6;
mov L0x7fffffffd66e ymm7_7;
mov L0x7fffffffd670 ymm7_8;
mov L0x7fffffffd672 ymm7_9;
mov L0x7fffffffd674 ymm7_a;
mov L0x7fffffffd676 ymm7_b;
mov L0x7fffffffd678 ymm7_c;
mov L0x7fffffffd67a ymm7_d;
mov L0x7fffffffd67c ymm7_e;
mov L0x7fffffffd67e ymm7_f;
(* vmovdqa %ymm8,0x3a0(%rdi)                       #! EA = L0x7fffffffd680; PC = 0x555555558a0d *)
mov L0x7fffffffd680 ymm8_0;
mov L0x7fffffffd682 ymm8_1;
mov L0x7fffffffd684 ymm8_2;
mov L0x7fffffffd686 ymm8_3;
mov L0x7fffffffd688 ymm8_4;
mov L0x7fffffffd68a ymm8_5;
mov L0x7fffffffd68c ymm8_6;
mov L0x7fffffffd68e ymm8_7;
mov L0x7fffffffd690 ymm8_8;
mov L0x7fffffffd692 ymm8_9;
mov L0x7fffffffd694 ymm8_a;
mov L0x7fffffffd696 ymm8_b;
mov L0x7fffffffd698 ymm8_c;
mov L0x7fffffffd69a ymm8_d;
mov L0x7fffffffd69c ymm8_e;
mov L0x7fffffffd69e ymm8_f;
(* vmovdqa %ymm5,0x3c0(%rdi)                       #! EA = L0x7fffffffd6a0; PC = 0x555555558a15 *)
mov L0x7fffffffd6a0 ymm5_0;
mov L0x7fffffffd6a2 ymm5_1;
mov L0x7fffffffd6a4 ymm5_2;
mov L0x7fffffffd6a6 ymm5_3;
mov L0x7fffffffd6a8 ymm5_4;
mov L0x7fffffffd6aa ymm5_5;
mov L0x7fffffffd6ac ymm5_6;
mov L0x7fffffffd6ae ymm5_7;
mov L0x7fffffffd6b0 ymm5_8;
mov L0x7fffffffd6b2 ymm5_9;
mov L0x7fffffffd6b4 ymm5_a;
mov L0x7fffffffd6b6 ymm5_b;
mov L0x7fffffffd6b8 ymm5_c;
mov L0x7fffffffd6ba ymm5_d;
mov L0x7fffffffd6bc ymm5_e;
mov L0x7fffffffd6be ymm5_f;
(* vmovdqa %ymm11,0x3e0(%rdi)                      #! EA = L0x7fffffffd6c0; PC = 0x555555558a1d *)
mov L0x7fffffffd6c0 ymm11_0;
mov L0x7fffffffd6c2 ymm11_1;
mov L0x7fffffffd6c4 ymm11_2;
mov L0x7fffffffd6c6 ymm11_3;
mov L0x7fffffffd6c8 ymm11_4;
mov L0x7fffffffd6ca ymm11_5;
mov L0x7fffffffd6cc ymm11_6;
mov L0x7fffffffd6ce ymm11_7;
mov L0x7fffffffd6d0 ymm11_8;
mov L0x7fffffffd6d2 ymm11_9;
mov L0x7fffffffd6d4 ymm11_a;
mov L0x7fffffffd6d6 ymm11_b;
mov L0x7fffffffd6d8 ymm11_c;
mov L0x7fffffffd6da ymm11_d;
mov L0x7fffffffd6dc ymm11_e;
mov L0x7fffffffd6de ymm11_f;


(**************** LEVELS 3-8, 3 *****************)


(**************** CUT 151, 12 *****************)

cut 
  and [
eqmod (inp_poly**2) (L0x7fffffffd5e0*x** 0+L0x7fffffffd5f0*x** 1)
      [10753, x**2 - 10724],
eqmod (inp_poly**2) (L0x7fffffffd600*x** 0+L0x7fffffffd610*x** 1)
      [10753, x**2 - 29],
eqmod (inp_poly**2) (L0x7fffffffd5e2*x** 0+L0x7fffffffd5f2*x** 1)
      [10753, x**2 - 1145],
eqmod (inp_poly**2) (L0x7fffffffd602*x** 0+L0x7fffffffd612*x** 1)
      [10753, x**2 - 9608],
eqmod (inp_poly**2) (L0x7fffffffd5e4*x** 0+L0x7fffffffd5f4*x** 1)
      [10753, x**2 - 1444],
eqmod (inp_poly**2) (L0x7fffffffd604*x** 0+L0x7fffffffd614*x** 1)
      [10753, x**2 - 9309],
eqmod (inp_poly**2) (L0x7fffffffd5e6*x** 0+L0x7fffffffd5f6*x** 1)
      [10753, x**2 - 1943],
eqmod (inp_poly**2) (L0x7fffffffd606*x** 0+L0x7fffffffd616*x** 1)
      [10753, x**2 - 8810],
eqmod (inp_poly**2) (L0x7fffffffd5e8*x** 0+L0x7fffffffd5f8*x** 1)
      [10753, x**2 - 5012],
eqmod (inp_poly**2) (L0x7fffffffd608*x** 0+L0x7fffffffd618*x** 1)
      [10753, x**2 - 5741],
eqmod (inp_poly**2) (L0x7fffffffd5ea*x** 0+L0x7fffffffd5fa*x** 1)
      [10753, x**2 - 7161],
eqmod (inp_poly**2) (L0x7fffffffd60a*x** 0+L0x7fffffffd61a*x** 1)
      [10753, x**2 - 3592],
eqmod (inp_poly**2) (L0x7fffffffd5ec*x** 0+L0x7fffffffd5fc*x** 1)
      [10753, x**2 - 6655],
eqmod (inp_poly**2) (L0x7fffffffd60c*x** 0+L0x7fffffffd61c*x** 1)
      [10753, x**2 - 4098],
eqmod (inp_poly**2) (L0x7fffffffd5ee*x** 0+L0x7fffffffd5fe*x** 1)
      [10753, x**2 - 8292],
eqmod (inp_poly**2) (L0x7fffffffd60e*x** 0+L0x7fffffffd61e*x** 1)
      [10753, x**2 - 2461],
eqmod (inp_poly**2) (L0x7fffffffd620*x** 0+L0x7fffffffd630*x** 1)
      [10753, x**2 - 9546],
eqmod (inp_poly**2) (L0x7fffffffd640*x** 0+L0x7fffffffd650*x** 1)
      [10753, x**2 - 1207],
eqmod (inp_poly**2) (L0x7fffffffd622*x** 0+L0x7fffffffd632*x** 1)
      [10753, x**2 - 9464],
eqmod (inp_poly**2) (L0x7fffffffd642*x** 0+L0x7fffffffd652*x** 1)
      [10753, x**2 - 1289],
eqmod (inp_poly**2) (L0x7fffffffd624*x** 0+L0x7fffffffd634*x** 1)
      [10753, x**2 - 10414],
eqmod (inp_poly**2) (L0x7fffffffd644*x** 0+L0x7fffffffd654*x** 1)
      [10753, x**2 - 339],
eqmod (inp_poly**2) (L0x7fffffffd626*x** 0+L0x7fffffffd636*x** 1)
      [10753, x**2 - 5598],
eqmod (inp_poly**2) (L0x7fffffffd646*x** 0+L0x7fffffffd656*x** 1)
      [10753, x**2 - 5155],
eqmod (inp_poly**2) (L0x7fffffffd628*x** 0+L0x7fffffffd638*x** 1)
      [10753, x**2 - 9487],
eqmod (inp_poly**2) (L0x7fffffffd648*x** 0+L0x7fffffffd658*x** 1)
      [10753, x**2 - 1266],
eqmod (inp_poly**2) (L0x7fffffffd62a*x** 0+L0x7fffffffd63a*x** 1)
      [10753, x**2 - 5490],
eqmod (inp_poly**2) (L0x7fffffffd64a*x** 0+L0x7fffffffd65a*x** 1)
      [10753, x**2 - 5263],
eqmod (inp_poly**2) (L0x7fffffffd62c*x** 0+L0x7fffffffd63c*x** 1)
      [10753, x**2 - 2228],
eqmod (inp_poly**2) (L0x7fffffffd64c*x** 0+L0x7fffffffd65c*x** 1)
      [10753, x**2 - 8525],
eqmod (inp_poly**2) (L0x7fffffffd62e*x** 0+L0x7fffffffd63e*x** 1)
      [10753, x**2 - 9551],
eqmod (inp_poly**2) (L0x7fffffffd64e*x** 0+L0x7fffffffd65e*x** 1)
      [10753, x**2 - 1202],
eqmod (inp_poly**2) (L0x7fffffffd660*x** 0+L0x7fffffffd670*x** 1)
      [10753, x**2 - 8829],
eqmod (inp_poly**2) (L0x7fffffffd680*x** 0+L0x7fffffffd690*x** 1)
      [10753, x**2 - 1924],
eqmod (inp_poly**2) (L0x7fffffffd662*x** 0+L0x7fffffffd672*x** 1)
      [10753, x**2 - 2177],
eqmod (inp_poly**2) (L0x7fffffffd682*x** 0+L0x7fffffffd692*x** 1)
      [10753, x**2 - 8576],
eqmod (inp_poly**2) (L0x7fffffffd664*x** 0+L0x7fffffffd674*x** 1)
      [10753, x**2 - 6070],
eqmod (inp_poly**2) (L0x7fffffffd684*x** 0+L0x7fffffffd694*x** 1)
      [10753, x**2 - 4683],
eqmod (inp_poly**2) (L0x7fffffffd666*x** 0+L0x7fffffffd676*x** 1)
      [10753, x**2 - 10625],
eqmod (inp_poly**2) (L0x7fffffffd686*x** 0+L0x7fffffffd696*x** 1)
      [10753, x**2 - 128],
eqmod (inp_poly**2) (L0x7fffffffd668*x** 0+L0x7fffffffd678*x** 1)
      [10753, x**2 - 3256],
eqmod (inp_poly**2) (L0x7fffffffd688*x** 0+L0x7fffffffd698*x** 1)
      [10753, x**2 - 7497],
eqmod (inp_poly**2) (L0x7fffffffd66a*x** 0+L0x7fffffffd67a*x** 1)
      [10753, x**2 - 7896],
eqmod (inp_poly**2) (L0x7fffffffd68a*x** 0+L0x7fffffffd69a*x** 1)
      [10753, x**2 - 2857],
eqmod (inp_poly**2) (L0x7fffffffd66c*x** 0+L0x7fffffffd67c*x** 1)
      [10753, x**2 - 2135],
eqmod (inp_poly**2) (L0x7fffffffd68c*x** 0+L0x7fffffffd69c*x** 1)
      [10753, x**2 - 8618],
eqmod (inp_poly**2) (L0x7fffffffd66e*x** 0+L0x7fffffffd67e*x** 1)
      [10753, x**2 - 7661],
eqmod (inp_poly**2) (L0x7fffffffd68e*x** 0+L0x7fffffffd69e*x** 1)
      [10753, x**2 - 3092],
eqmod (inp_poly**2) (L0x7fffffffd6a0*x** 0+L0x7fffffffd6b0*x** 1)
      [10753, x**2 - 5575],
eqmod (inp_poly**2) (L0x7fffffffd6c0*x** 0+L0x7fffffffd6d0*x** 1)
      [10753, x**2 - 5178],
eqmod (inp_poly**2) (L0x7fffffffd6a2*x** 0+L0x7fffffffd6b2*x** 1)
      [10753, x**2 - 6809],
eqmod (inp_poly**2) (L0x7fffffffd6c2*x** 0+L0x7fffffffd6d2*x** 1)
      [10753, x**2 - 3944],
eqmod (inp_poly**2) (L0x7fffffffd6a4*x** 0+L0x7fffffffd6b4*x** 1)
      [10753, x**2 - 4577],
eqmod (inp_poly**2) (L0x7fffffffd6c4*x** 0+L0x7fffffffd6d4*x** 1)
      [10753, x**2 - 6176],
eqmod (inp_poly**2) (L0x7fffffffd6a6*x** 0+L0x7fffffffd6b6*x** 1)
      [10753, x**2 - 2830],
eqmod (inp_poly**2) (L0x7fffffffd6c6*x** 0+L0x7fffffffd6d6*x** 1)
      [10753, x**2 - 7923],
eqmod (inp_poly**2) (L0x7fffffffd6a8*x** 0+L0x7fffffffd6b8*x** 1)
      [10753, x**2 - 4627],
eqmod (inp_poly**2) (L0x7fffffffd6c8*x** 0+L0x7fffffffd6d8*x** 1)
      [10753, x**2 - 6126],
eqmod (inp_poly**2) (L0x7fffffffd6aa*x** 0+L0x7fffffffd6ba*x** 1)
      [10753, x**2 - 4193],
eqmod (inp_poly**2) (L0x7fffffffd6ca*x** 0+L0x7fffffffd6da*x** 1)
      [10753, x**2 - 6560],
eqmod (inp_poly**2) (L0x7fffffffd6ac*x** 0+L0x7fffffffd6bc*x** 1)
      [10753, x**2 - 1353],
eqmod (inp_poly**2) (L0x7fffffffd6cc*x** 0+L0x7fffffffd6dc*x** 1)
      [10753, x**2 - 9400],
eqmod (inp_poly**2) (L0x7fffffffd6ae*x** 0+L0x7fffffffd6be*x** 1)
      [10753, x**2 - 1828],
eqmod (inp_poly**2) (L0x7fffffffd6ce*x** 0+L0x7fffffffd6de*x** 1)
      [10753, x**2 - 8925]
  ] prove with [ precondition, cuts [ 9, 27, 45, 63, 81, 99, 117, 135] ] && and [
(-23941)@16<=s L0x7fffffffd5e0,L0x7fffffffd5e0<=s 23941@16,
(-23941)@16<=s L0x7fffffffd5f0,L0x7fffffffd5f0<=s 23941@16,
(-23941)@16<=s L0x7fffffffd600,L0x7fffffffd600<=s 23941@16,
(-23941)@16<=s L0x7fffffffd610,L0x7fffffffd610<=s 23941@16,
(-24353)@16<=s L0x7fffffffd5e2,L0x7fffffffd5e2<=s 24353@16,
(-24353)@16<=s L0x7fffffffd5f2,L0x7fffffffd5f2<=s 24353@16,
(-24353)@16<=s L0x7fffffffd602,L0x7fffffffd602<=s 24353@16,
(-24353)@16<=s L0x7fffffffd612,L0x7fffffffd612<=s 24353@16,
(-24171)@16<=s L0x7fffffffd5e4,L0x7fffffffd5e4<=s 24171@16,
(-24171)@16<=s L0x7fffffffd5f4,L0x7fffffffd5f4<=s 24171@16,
(-24171)@16<=s L0x7fffffffd604,L0x7fffffffd604<=s 24171@16,
(-24171)@16<=s L0x7fffffffd614,L0x7fffffffd614<=s 24171@16,
(-23480)@16<=s L0x7fffffffd5e6,L0x7fffffffd5e6<=s 23480@16,
(-23480)@16<=s L0x7fffffffd5f6,L0x7fffffffd5f6<=s 23480@16,
(-23480)@16<=s L0x7fffffffd606,L0x7fffffffd606<=s 23480@16,
(-23480)@16<=s L0x7fffffffd616,L0x7fffffffd616<=s 23480@16,
(-24525)@16<=s L0x7fffffffd5e8,L0x7fffffffd5e8<=s 24525@16,
(-24525)@16<=s L0x7fffffffd5f8,L0x7fffffffd5f8<=s 24525@16,
(-24525)@16<=s L0x7fffffffd608,L0x7fffffffd608<=s 24525@16,
(-24525)@16<=s L0x7fffffffd618,L0x7fffffffd618<=s 24525@16,
(-23264)@16<=s L0x7fffffffd5ea,L0x7fffffffd5ea<=s 23264@16,
(-23264)@16<=s L0x7fffffffd5fa,L0x7fffffffd5fa<=s 23264@16,
(-23264)@16<=s L0x7fffffffd60a,L0x7fffffffd60a<=s 23264@16,
(-23264)@16<=s L0x7fffffffd61a,L0x7fffffffd61a<=s 23264@16,
(-23164)@16<=s L0x7fffffffd5ec,L0x7fffffffd5ec<=s 23164@16,
(-23164)@16<=s L0x7fffffffd5fc,L0x7fffffffd5fc<=s 23164@16,
(-23164)@16<=s L0x7fffffffd60c,L0x7fffffffd60c<=s 23164@16,
(-23164)@16<=s L0x7fffffffd61c,L0x7fffffffd61c<=s 23164@16,
(-23097)@16<=s L0x7fffffffd5ee,L0x7fffffffd5ee<=s 23097@16,
(-23097)@16<=s L0x7fffffffd5fe,L0x7fffffffd5fe<=s 23097@16,
(-23097)@16<=s L0x7fffffffd60e,L0x7fffffffd60e<=s 23097@16,
(-23097)@16<=s L0x7fffffffd61e,L0x7fffffffd61e<=s 23097@16,
(-24870)@16<=s L0x7fffffffd620,L0x7fffffffd620<=s 24870@16,
(-24870)@16<=s L0x7fffffffd630,L0x7fffffffd630<=s 24870@16,
(-24870)@16<=s L0x7fffffffd640,L0x7fffffffd640<=s 24870@16,
(-24870)@16<=s L0x7fffffffd650,L0x7fffffffd650<=s 24870@16,
(-24173)@16<=s L0x7fffffffd622,L0x7fffffffd622<=s 24173@16,
(-24173)@16<=s L0x7fffffffd632,L0x7fffffffd632<=s 24173@16,
(-24173)@16<=s L0x7fffffffd642,L0x7fffffffd642<=s 24173@16,
(-24173)@16<=s L0x7fffffffd652,L0x7fffffffd652<=s 24173@16,
(-24372)@16<=s L0x7fffffffd624,L0x7fffffffd624<=s 24372@16,
(-24372)@16<=s L0x7fffffffd634,L0x7fffffffd634<=s 24372@16,
(-24372)@16<=s L0x7fffffffd644,L0x7fffffffd644<=s 24372@16,
(-24372)@16<=s L0x7fffffffd654,L0x7fffffffd654<=s 24372@16,
(-24191)@16<=s L0x7fffffffd626,L0x7fffffffd626<=s 24191@16,
(-24191)@16<=s L0x7fffffffd636,L0x7fffffffd636<=s 24191@16,
(-24191)@16<=s L0x7fffffffd646,L0x7fffffffd646<=s 24191@16,
(-24191)@16<=s L0x7fffffffd656,L0x7fffffffd656<=s 24191@16,
(-22582)@16<=s L0x7fffffffd628,L0x7fffffffd628<=s 22582@16,
(-22582)@16<=s L0x7fffffffd638,L0x7fffffffd638<=s 22582@16,
(-22582)@16<=s L0x7fffffffd648,L0x7fffffffd648<=s 22582@16,
(-22582)@16<=s L0x7fffffffd658,L0x7fffffffd658<=s 22582@16,
(-22877)@16<=s L0x7fffffffd62a,L0x7fffffffd62a<=s 22877@16,
(-22877)@16<=s L0x7fffffffd63a,L0x7fffffffd63a<=s 22877@16,
(-22877)@16<=s L0x7fffffffd64a,L0x7fffffffd64a<=s 22877@16,
(-22877)@16<=s L0x7fffffffd65a,L0x7fffffffd65a<=s 22877@16,
(-23000)@16<=s L0x7fffffffd62c,L0x7fffffffd62c<=s 23000@16,
(-23000)@16<=s L0x7fffffffd63c,L0x7fffffffd63c<=s 23000@16,
(-23000)@16<=s L0x7fffffffd64c,L0x7fffffffd64c<=s 23000@16,
(-23000)@16<=s L0x7fffffffd65c,L0x7fffffffd65c<=s 23000@16,
(-23353)@16<=s L0x7fffffffd62e,L0x7fffffffd62e<=s 23353@16,
(-23353)@16<=s L0x7fffffffd63e,L0x7fffffffd63e<=s 23353@16,
(-23353)@16<=s L0x7fffffffd64e,L0x7fffffffd64e<=s 23353@16,
(-23353)@16<=s L0x7fffffffd65e,L0x7fffffffd65e<=s 23353@16,
(-24388)@16<=s L0x7fffffffd660,L0x7fffffffd660<=s 24388@16,
(-24388)@16<=s L0x7fffffffd670,L0x7fffffffd670<=s 24388@16,
(-24388)@16<=s L0x7fffffffd680,L0x7fffffffd680<=s 24388@16,
(-24388)@16<=s L0x7fffffffd690,L0x7fffffffd690<=s 24388@16,
(-24222)@16<=s L0x7fffffffd662,L0x7fffffffd662<=s 24222@16,
(-24222)@16<=s L0x7fffffffd672,L0x7fffffffd672<=s 24222@16,
(-24222)@16<=s L0x7fffffffd682,L0x7fffffffd682<=s 24222@16,
(-24222)@16<=s L0x7fffffffd692,L0x7fffffffd692<=s 24222@16,
(-24699)@16<=s L0x7fffffffd664,L0x7fffffffd664<=s 24699@16,
(-24699)@16<=s L0x7fffffffd674,L0x7fffffffd674<=s 24699@16,
(-24699)@16<=s L0x7fffffffd684,L0x7fffffffd684<=s 24699@16,
(-24699)@16<=s L0x7fffffffd694,L0x7fffffffd694<=s 24699@16,
(-24014)@16<=s L0x7fffffffd666,L0x7fffffffd666<=s 24014@16,
(-24014)@16<=s L0x7fffffffd676,L0x7fffffffd676<=s 24014@16,
(-24014)@16<=s L0x7fffffffd686,L0x7fffffffd686<=s 24014@16,
(-24014)@16<=s L0x7fffffffd696,L0x7fffffffd696<=s 24014@16,
(-25349)@16<=s L0x7fffffffd668,L0x7fffffffd668<=s 25349@16,
(-25349)@16<=s L0x7fffffffd678,L0x7fffffffd678<=s 25349@16,
(-25349)@16<=s L0x7fffffffd688,L0x7fffffffd688<=s 25349@16,
(-25349)@16<=s L0x7fffffffd698,L0x7fffffffd698<=s 25349@16,
(-26047)@16<=s L0x7fffffffd66a,L0x7fffffffd66a<=s 26047@16,
(-26047)@16<=s L0x7fffffffd67a,L0x7fffffffd67a<=s 26047@16,
(-26047)@16<=s L0x7fffffffd68a,L0x7fffffffd68a<=s 26047@16,
(-26047)@16<=s L0x7fffffffd69a,L0x7fffffffd69a<=s 26047@16,
(-24581)@16<=s L0x7fffffffd66c,L0x7fffffffd66c<=s 24581@16,
(-24581)@16<=s L0x7fffffffd67c,L0x7fffffffd67c<=s 24581@16,
(-24581)@16<=s L0x7fffffffd68c,L0x7fffffffd68c<=s 24581@16,
(-24581)@16<=s L0x7fffffffd69c,L0x7fffffffd69c<=s 24581@16,
(-25028)@16<=s L0x7fffffffd66e,L0x7fffffffd66e<=s 25028@16,
(-25028)@16<=s L0x7fffffffd67e,L0x7fffffffd67e<=s 25028@16,
(-25028)@16<=s L0x7fffffffd68e,L0x7fffffffd68e<=s 25028@16,
(-25028)@16<=s L0x7fffffffd69e,L0x7fffffffd69e<=s 25028@16,
(-24046)@16<=s L0x7fffffffd6a0,L0x7fffffffd6a0<=s 24046@16,
(-24046)@16<=s L0x7fffffffd6b0,L0x7fffffffd6b0<=s 24046@16,
(-24046)@16<=s L0x7fffffffd6c0,L0x7fffffffd6c0<=s 24046@16,
(-24046)@16<=s L0x7fffffffd6d0,L0x7fffffffd6d0<=s 24046@16,
(-24570)@16<=s L0x7fffffffd6a2,L0x7fffffffd6a2<=s 24570@16,
(-24570)@16<=s L0x7fffffffd6b2,L0x7fffffffd6b2<=s 24570@16,
(-24570)@16<=s L0x7fffffffd6c2,L0x7fffffffd6c2<=s 24570@16,
(-24570)@16<=s L0x7fffffffd6d2,L0x7fffffffd6d2<=s 24570@16,
(-24704)@16<=s L0x7fffffffd6a4,L0x7fffffffd6a4<=s 24704@16,
(-24704)@16<=s L0x7fffffffd6b4,L0x7fffffffd6b4<=s 24704@16,
(-24704)@16<=s L0x7fffffffd6c4,L0x7fffffffd6c4<=s 24704@16,
(-24704)@16<=s L0x7fffffffd6d4,L0x7fffffffd6d4<=s 24704@16,
(-24009)@16<=s L0x7fffffffd6a6,L0x7fffffffd6a6<=s 24009@16,
(-24009)@16<=s L0x7fffffffd6b6,L0x7fffffffd6b6<=s 24009@16,
(-24009)@16<=s L0x7fffffffd6c6,L0x7fffffffd6c6<=s 24009@16,
(-24009)@16<=s L0x7fffffffd6d6,L0x7fffffffd6d6<=s 24009@16,
(-24394)@16<=s L0x7fffffffd6a8,L0x7fffffffd6a8<=s 24394@16,
(-24394)@16<=s L0x7fffffffd6b8,L0x7fffffffd6b8<=s 24394@16,
(-24394)@16<=s L0x7fffffffd6c8,L0x7fffffffd6c8<=s 24394@16,
(-24394)@16<=s L0x7fffffffd6d8,L0x7fffffffd6d8<=s 24394@16,
(-24390)@16<=s L0x7fffffffd6aa,L0x7fffffffd6aa<=s 24390@16,
(-24390)@16<=s L0x7fffffffd6ba,L0x7fffffffd6ba<=s 24390@16,
(-24390)@16<=s L0x7fffffffd6ca,L0x7fffffffd6ca<=s 24390@16,
(-24390)@16<=s L0x7fffffffd6da,L0x7fffffffd6da<=s 24390@16,
(-24443)@16<=s L0x7fffffffd6ac,L0x7fffffffd6ac<=s 24443@16,
(-24443)@16<=s L0x7fffffffd6bc,L0x7fffffffd6bc<=s 24443@16,
(-24443)@16<=s L0x7fffffffd6cc,L0x7fffffffd6cc<=s 24443@16,
(-24443)@16<=s L0x7fffffffd6dc,L0x7fffffffd6dc<=s 24443@16,
(-24336)@16<=s L0x7fffffffd6ae,L0x7fffffffd6ae<=s 24336@16,
(-24336)@16<=s L0x7fffffffd6be,L0x7fffffffd6be<=s 24336@16,
(-24336)@16<=s L0x7fffffffd6ce,L0x7fffffffd6ce<=s 24336@16,
(-24336)@16<=s L0x7fffffffd6de,L0x7fffffffd6de<=s 24336@16
];


(* === be ready for next level and offset === *)

(**************** CUT 152, 13 *****************)

cut 
true && and [
(-13154)@16<=s L0x7fffffffd6e0,L0x7fffffffd6e0<s 13154@16,
(-13154)@16<=s L0x7fffffffd6e2,L0x7fffffffd6e2<s 13154@16,
(-13154)@16<=s L0x7fffffffd6e4,L0x7fffffffd6e4<s 13154@16,
(-13154)@16<=s L0x7fffffffd6e6,L0x7fffffffd6e6<s 13154@16,
(-13154)@16<=s L0x7fffffffd6e8,L0x7fffffffd6e8<s 13154@16,
(-13154)@16<=s L0x7fffffffd6ea,L0x7fffffffd6ea<s 13154@16,
(-13154)@16<=s L0x7fffffffd6ec,L0x7fffffffd6ec<s 13154@16,
(-13154)@16<=s L0x7fffffffd6ee,L0x7fffffffd6ee<s 13154@16,
(-13154)@16<=s L0x7fffffffd6f0,L0x7fffffffd6f0<s 13154@16,
(-13154)@16<=s L0x7fffffffd6f2,L0x7fffffffd6f2<s 13154@16,
(-13154)@16<=s L0x7fffffffd6f4,L0x7fffffffd6f4<s 13154@16,
(-13154)@16<=s L0x7fffffffd6f6,L0x7fffffffd6f6<s 13154@16,
(-13154)@16<=s L0x7fffffffd6f8,L0x7fffffffd6f8<s 13154@16,
(-13154)@16<=s L0x7fffffffd6fa,L0x7fffffffd6fa<s 13154@16,
(-13154)@16<=s L0x7fffffffd6fc,L0x7fffffffd6fc<s 13154@16,
(-13154)@16<=s L0x7fffffffd6fe,L0x7fffffffd6fe<s 13154@16,
(-13154)@16<=s L0x7fffffffd700,L0x7fffffffd700<s 13154@16,
(-13154)@16<=s L0x7fffffffd702,L0x7fffffffd702<s 13154@16,
(-13154)@16<=s L0x7fffffffd704,L0x7fffffffd704<s 13154@16,
(-13154)@16<=s L0x7fffffffd706,L0x7fffffffd706<s 13154@16,
(-13154)@16<=s L0x7fffffffd708,L0x7fffffffd708<s 13154@16,
(-13154)@16<=s L0x7fffffffd70a,L0x7fffffffd70a<s 13154@16,
(-13154)@16<=s L0x7fffffffd70c,L0x7fffffffd70c<s 13154@16,
(-13154)@16<=s L0x7fffffffd70e,L0x7fffffffd70e<s 13154@16,
(-13154)@16<=s L0x7fffffffd710,L0x7fffffffd710<s 13154@16,
(-13154)@16<=s L0x7fffffffd712,L0x7fffffffd712<s 13154@16,
(-13154)@16<=s L0x7fffffffd714,L0x7fffffffd714<s 13154@16,
(-13154)@16<=s L0x7fffffffd716,L0x7fffffffd716<s 13154@16,
(-13154)@16<=s L0x7fffffffd718,L0x7fffffffd718<s 13154@16,
(-13154)@16<=s L0x7fffffffd71a,L0x7fffffffd71a<s 13154@16,
(-13154)@16<=s L0x7fffffffd71c,L0x7fffffffd71c<s 13154@16,
(-13154)@16<=s L0x7fffffffd71e,L0x7fffffffd71e<s 13154@16,
(-13154)@16<=s L0x7fffffffd720,L0x7fffffffd720<s 13154@16,
(-13154)@16<=s L0x7fffffffd722,L0x7fffffffd722<s 13154@16,
(-13154)@16<=s L0x7fffffffd724,L0x7fffffffd724<s 13154@16,
(-13154)@16<=s L0x7fffffffd726,L0x7fffffffd726<s 13154@16,
(-13154)@16<=s L0x7fffffffd728,L0x7fffffffd728<s 13154@16,
(-13154)@16<=s L0x7fffffffd72a,L0x7fffffffd72a<s 13154@16,
(-13154)@16<=s L0x7fffffffd72c,L0x7fffffffd72c<s 13154@16,
(-13154)@16<=s L0x7fffffffd72e,L0x7fffffffd72e<s 13154@16,
(-13154)@16<=s L0x7fffffffd730,L0x7fffffffd730<s 13154@16,
(-13154)@16<=s L0x7fffffffd732,L0x7fffffffd732<s 13154@16,
(-13154)@16<=s L0x7fffffffd734,L0x7fffffffd734<s 13154@16,
(-13154)@16<=s L0x7fffffffd736,L0x7fffffffd736<s 13154@16,
(-13154)@16<=s L0x7fffffffd738,L0x7fffffffd738<s 13154@16,
(-13154)@16<=s L0x7fffffffd73a,L0x7fffffffd73a<s 13154@16,
(-13154)@16<=s L0x7fffffffd73c,L0x7fffffffd73c<s 13154@16,
(-13154)@16<=s L0x7fffffffd73e,L0x7fffffffd73e<s 13154@16,
(-13154)@16<=s L0x7fffffffd740,L0x7fffffffd740<s 13154@16,
(-13154)@16<=s L0x7fffffffd742,L0x7fffffffd742<s 13154@16,
(-13154)@16<=s L0x7fffffffd744,L0x7fffffffd744<s 13154@16,
(-13154)@16<=s L0x7fffffffd746,L0x7fffffffd746<s 13154@16,
(-13154)@16<=s L0x7fffffffd748,L0x7fffffffd748<s 13154@16,
(-13154)@16<=s L0x7fffffffd74a,L0x7fffffffd74a<s 13154@16,
(-13154)@16<=s L0x7fffffffd74c,L0x7fffffffd74c<s 13154@16,
(-13154)@16<=s L0x7fffffffd74e,L0x7fffffffd74e<s 13154@16,
(-13154)@16<=s L0x7fffffffd750,L0x7fffffffd750<s 13154@16,
(-13154)@16<=s L0x7fffffffd752,L0x7fffffffd752<s 13154@16,
(-13154)@16<=s L0x7fffffffd754,L0x7fffffffd754<s 13154@16,
(-13154)@16<=s L0x7fffffffd756,L0x7fffffffd756<s 13154@16,
(-13154)@16<=s L0x7fffffffd758,L0x7fffffffd758<s 13154@16,
(-13154)@16<=s L0x7fffffffd75a,L0x7fffffffd75a<s 13154@16,
(-13154)@16<=s L0x7fffffffd75c,L0x7fffffffd75c<s 13154@16,
(-13154)@16<=s L0x7fffffffd75e,L0x7fffffffd75e<s 13154@16,
(-13154)@16<=s L0x7fffffffd760,L0x7fffffffd760<s 13154@16,
(-13154)@16<=s L0x7fffffffd762,L0x7fffffffd762<s 13154@16,
(-13154)@16<=s L0x7fffffffd764,L0x7fffffffd764<s 13154@16,
(-13154)@16<=s L0x7fffffffd766,L0x7fffffffd766<s 13154@16,
(-13154)@16<=s L0x7fffffffd768,L0x7fffffffd768<s 13154@16,
(-13154)@16<=s L0x7fffffffd76a,L0x7fffffffd76a<s 13154@16,
(-13154)@16<=s L0x7fffffffd76c,L0x7fffffffd76c<s 13154@16,
(-13154)@16<=s L0x7fffffffd76e,L0x7fffffffd76e<s 13154@16,
(-13154)@16<=s L0x7fffffffd770,L0x7fffffffd770<s 13154@16,
(-13154)@16<=s L0x7fffffffd772,L0x7fffffffd772<s 13154@16,
(-13154)@16<=s L0x7fffffffd774,L0x7fffffffd774<s 13154@16,
(-13154)@16<=s L0x7fffffffd776,L0x7fffffffd776<s 13154@16,
(-13154)@16<=s L0x7fffffffd778,L0x7fffffffd778<s 13154@16,
(-13154)@16<=s L0x7fffffffd77a,L0x7fffffffd77a<s 13154@16,
(-13154)@16<=s L0x7fffffffd77c,L0x7fffffffd77c<s 13154@16,
(-13154)@16<=s L0x7fffffffd77e,L0x7fffffffd77e<s 13154@16,
(-13154)@16<=s L0x7fffffffd780,L0x7fffffffd780<s 13154@16,
(-13154)@16<=s L0x7fffffffd782,L0x7fffffffd782<s 13154@16,
(-13154)@16<=s L0x7fffffffd784,L0x7fffffffd784<s 13154@16,
(-13154)@16<=s L0x7fffffffd786,L0x7fffffffd786<s 13154@16,
(-13154)@16<=s L0x7fffffffd788,L0x7fffffffd788<s 13154@16,
(-13154)@16<=s L0x7fffffffd78a,L0x7fffffffd78a<s 13154@16,
(-13154)@16<=s L0x7fffffffd78c,L0x7fffffffd78c<s 13154@16,
(-13154)@16<=s L0x7fffffffd78e,L0x7fffffffd78e<s 13154@16,
(-13154)@16<=s L0x7fffffffd790,L0x7fffffffd790<s 13154@16,
(-13154)@16<=s L0x7fffffffd792,L0x7fffffffd792<s 13154@16,
(-13154)@16<=s L0x7fffffffd794,L0x7fffffffd794<s 13154@16,
(-13154)@16<=s L0x7fffffffd796,L0x7fffffffd796<s 13154@16,
(-13154)@16<=s L0x7fffffffd798,L0x7fffffffd798<s 13154@16,
(-13154)@16<=s L0x7fffffffd79a,L0x7fffffffd79a<s 13154@16,
(-13154)@16<=s L0x7fffffffd79c,L0x7fffffffd79c<s 13154@16,
(-13154)@16<=s L0x7fffffffd79e,L0x7fffffffd79e<s 13154@16,
(-13154)@16<=s L0x7fffffffd7a0,L0x7fffffffd7a0<s 13154@16,
(-13154)@16<=s L0x7fffffffd7a2,L0x7fffffffd7a2<s 13154@16,
(-13154)@16<=s L0x7fffffffd7a4,L0x7fffffffd7a4<s 13154@16,
(-13154)@16<=s L0x7fffffffd7a6,L0x7fffffffd7a6<s 13154@16,
(-13154)@16<=s L0x7fffffffd7a8,L0x7fffffffd7a8<s 13154@16,
(-13154)@16<=s L0x7fffffffd7aa,L0x7fffffffd7aa<s 13154@16,
(-13154)@16<=s L0x7fffffffd7ac,L0x7fffffffd7ac<s 13154@16,
(-13154)@16<=s L0x7fffffffd7ae,L0x7fffffffd7ae<s 13154@16,
(-13154)@16<=s L0x7fffffffd7b0,L0x7fffffffd7b0<s 13154@16,
(-13154)@16<=s L0x7fffffffd7b2,L0x7fffffffd7b2<s 13154@16,
(-13154)@16<=s L0x7fffffffd7b4,L0x7fffffffd7b4<s 13154@16,
(-13154)@16<=s L0x7fffffffd7b6,L0x7fffffffd7b6<s 13154@16,
(-13154)@16<=s L0x7fffffffd7b8,L0x7fffffffd7b8<s 13154@16,
(-13154)@16<=s L0x7fffffffd7ba,L0x7fffffffd7ba<s 13154@16,
(-13154)@16<=s L0x7fffffffd7bc,L0x7fffffffd7bc<s 13154@16,
(-13154)@16<=s L0x7fffffffd7be,L0x7fffffffd7be<s 13154@16,
(-13154)@16<=s L0x7fffffffd7c0,L0x7fffffffd7c0<s 13154@16,
(-13154)@16<=s L0x7fffffffd7c2,L0x7fffffffd7c2<s 13154@16,
(-13154)@16<=s L0x7fffffffd7c4,L0x7fffffffd7c4<s 13154@16,
(-13154)@16<=s L0x7fffffffd7c6,L0x7fffffffd7c6<s 13154@16,
(-13154)@16<=s L0x7fffffffd7c8,L0x7fffffffd7c8<s 13154@16,
(-13154)@16<=s L0x7fffffffd7ca,L0x7fffffffd7ca<s 13154@16,
(-13154)@16<=s L0x7fffffffd7cc,L0x7fffffffd7cc<s 13154@16,
(-13154)@16<=s L0x7fffffffd7ce,L0x7fffffffd7ce<s 13154@16,
(-13154)@16<=s L0x7fffffffd7d0,L0x7fffffffd7d0<s 13154@16,
(-13154)@16<=s L0x7fffffffd7d2,L0x7fffffffd7d2<s 13154@16,
(-13154)@16<=s L0x7fffffffd7d4,L0x7fffffffd7d4<s 13154@16,
(-13154)@16<=s L0x7fffffffd7d6,L0x7fffffffd7d6<s 13154@16,
(-13154)@16<=s L0x7fffffffd7d8,L0x7fffffffd7d8<s 13154@16,
(-12913)@16<=s L0x7fffffffd7da,L0x7fffffffd7da<s 12913@16,
(-12913)@16<=s L0x7fffffffd7dc,L0x7fffffffd7dc<s 12913@16,
(-12913)@16<=s L0x7fffffffd7de,L0x7fffffffd7de<s 12913@16
] prove with [ cuts [ 0 ] ];



(* vmovdqa 0x400(%rdi),%ymm4                       #! EA = L0x7fffffffd6e0; Value = 0x0000000100000000; PC = 0x555555558a25 *)
mov ymm4_0 L0x7fffffffd6e0;
mov ymm4_1 L0x7fffffffd6e2;
mov ymm4_2 L0x7fffffffd6e4;
mov ymm4_3 L0x7fffffffd6e6;
mov ymm4_4 L0x7fffffffd6e8;
mov ymm4_5 L0x7fffffffd6ea;
mov ymm4_6 L0x7fffffffd6ec;
mov ymm4_7 L0x7fffffffd6ee;
mov ymm4_8 L0x7fffffffd6f0;
mov ymm4_9 L0x7fffffffd6f2;
mov ymm4_a L0x7fffffffd6f4;
mov ymm4_b L0x7fffffffd6f6;
mov ymm4_c L0x7fffffffd6f8;
mov ymm4_d L0x7fffffffd6fa;
mov ymm4_e L0x7fffffffd6fc;
mov ymm4_f L0x7fffffffd6fe;
(* vmovdqa 0x420(%rdi),%ymm5                       #! EA = L0x7fffffffd700; Value = 0x0000000000000000; PC = 0x555555558a2d *)
mov ymm5_0 L0x7fffffffd700;
mov ymm5_1 L0x7fffffffd702;
mov ymm5_2 L0x7fffffffd704;
mov ymm5_3 L0x7fffffffd706;
mov ymm5_4 L0x7fffffffd708;
mov ymm5_5 L0x7fffffffd70a;
mov ymm5_6 L0x7fffffffd70c;
mov ymm5_7 L0x7fffffffd70e;
mov ymm5_8 L0x7fffffffd710;
mov ymm5_9 L0x7fffffffd712;
mov ymm5_a L0x7fffffffd714;
mov ymm5_b L0x7fffffffd716;
mov ymm5_c L0x7fffffffd718;
mov ymm5_d L0x7fffffffd71a;
mov ymm5_e L0x7fffffffd71c;
mov ymm5_f L0x7fffffffd71e;
(* vmovdqa 0x440(%rdi),%ymm6                       #! EA = L0x7fffffffd720; Value = 0x0000000000000000; PC = 0x555555558a35 *)
mov ymm6_0 L0x7fffffffd720;
mov ymm6_1 L0x7fffffffd722;
mov ymm6_2 L0x7fffffffd724;
mov ymm6_3 L0x7fffffffd726;
mov ymm6_4 L0x7fffffffd728;
mov ymm6_5 L0x7fffffffd72a;
mov ymm6_6 L0x7fffffffd72c;
mov ymm6_7 L0x7fffffffd72e;
mov ymm6_8 L0x7fffffffd730;
mov ymm6_9 L0x7fffffffd732;
mov ymm6_a L0x7fffffffd734;
mov ymm6_b L0x7fffffffd736;
mov ymm6_c L0x7fffffffd738;
mov ymm6_d L0x7fffffffd73a;
mov ymm6_e L0x7fffffffd73c;
mov ymm6_f L0x7fffffffd73e;
(* vmovdqa 0x460(%rdi),%ymm7                       #! EA = L0x7fffffffd740; Value = 0x0000000000000000; PC = 0x555555558a3d *)
mov ymm7_0 L0x7fffffffd740;
mov ymm7_1 L0x7fffffffd742;
mov ymm7_2 L0x7fffffffd744;
mov ymm7_3 L0x7fffffffd746;
mov ymm7_4 L0x7fffffffd748;
mov ymm7_5 L0x7fffffffd74a;
mov ymm7_6 L0x7fffffffd74c;
mov ymm7_7 L0x7fffffffd74e;
mov ymm7_8 L0x7fffffffd750;
mov ymm7_9 L0x7fffffffd752;
mov ymm7_a L0x7fffffffd754;
mov ymm7_b L0x7fffffffd756;
mov ymm7_c L0x7fffffffd758;
mov ymm7_d L0x7fffffffd75a;
mov ymm7_e L0x7fffffffd75c;
mov ymm7_f L0x7fffffffd75e;
(* vmovdqa 0x480(%rdi),%ymm8                       #! EA = L0x7fffffffd760; Value = 0x0000000000000000; PC = 0x555555558a45 *)
mov ymm8_0 L0x7fffffffd760;
mov ymm8_1 L0x7fffffffd762;
mov ymm8_2 L0x7fffffffd764;
mov ymm8_3 L0x7fffffffd766;
mov ymm8_4 L0x7fffffffd768;
mov ymm8_5 L0x7fffffffd76a;
mov ymm8_6 L0x7fffffffd76c;
mov ymm8_7 L0x7fffffffd76e;
mov ymm8_8 L0x7fffffffd770;
mov ymm8_9 L0x7fffffffd772;
mov ymm8_a L0x7fffffffd774;
mov ymm8_b L0x7fffffffd776;
mov ymm8_c L0x7fffffffd778;
mov ymm8_d L0x7fffffffd77a;
mov ymm8_e L0x7fffffffd77c;
mov ymm8_f L0x7fffffffd77e;
(* vmovdqa 0x4a0(%rdi),%ymm9                       #! EA = L0x7fffffffd780; Value = 0x0000000000000000; PC = 0x555555558a4d *)
mov ymm9_0 L0x7fffffffd780;
mov ymm9_1 L0x7fffffffd782;
mov ymm9_2 L0x7fffffffd784;
mov ymm9_3 L0x7fffffffd786;
mov ymm9_4 L0x7fffffffd788;
mov ymm9_5 L0x7fffffffd78a;
mov ymm9_6 L0x7fffffffd78c;
mov ymm9_7 L0x7fffffffd78e;
mov ymm9_8 L0x7fffffffd790;
mov ymm9_9 L0x7fffffffd792;
mov ymm9_a L0x7fffffffd794;
mov ymm9_b L0x7fffffffd796;
mov ymm9_c L0x7fffffffd798;
mov ymm9_d L0x7fffffffd79a;
mov ymm9_e L0x7fffffffd79c;
mov ymm9_f L0x7fffffffd79e;
(* vmovdqa 0x4c0(%rdi),%ymm10                      #! EA = L0x7fffffffd7a0; Value = 0x0000000000000000; PC = 0x555555558a55 *)
mov ymm10_0 L0x7fffffffd7a0;
mov ymm10_1 L0x7fffffffd7a2;
mov ymm10_2 L0x7fffffffd7a4;
mov ymm10_3 L0x7fffffffd7a6;
mov ymm10_4 L0x7fffffffd7a8;
mov ymm10_5 L0x7fffffffd7aa;
mov ymm10_6 L0x7fffffffd7ac;
mov ymm10_7 L0x7fffffffd7ae;
mov ymm10_8 L0x7fffffffd7b0;
mov ymm10_9 L0x7fffffffd7b2;
mov ymm10_a L0x7fffffffd7b4;
mov ymm10_b L0x7fffffffd7b6;
mov ymm10_c L0x7fffffffd7b8;
mov ymm10_d L0x7fffffffd7ba;
mov ymm10_e L0x7fffffffd7bc;
mov ymm10_f L0x7fffffffd7be;
(* vmovdqa 0x4e0(%rdi),%ymm11                      #! EA = L0x7fffffffd7c0; Value = 0x0000000000000000; PC = 0x555555558a5d *)
mov ymm11_0 L0x7fffffffd7c0;
mov ymm11_1 L0x7fffffffd7c2;
mov ymm11_2 L0x7fffffffd7c4;
mov ymm11_3 L0x7fffffffd7c6;
mov ymm11_4 L0x7fffffffd7c8;
mov ymm11_5 L0x7fffffffd7ca;
mov ymm11_6 L0x7fffffffd7cc;
mov ymm11_7 L0x7fffffffd7ce;
mov ymm11_8 L0x7fffffffd7d0;
mov ymm11_9 L0x7fffffffd7d2;
mov ymm11_a L0x7fffffffd7d4;
mov ymm11_b L0x7fffffffd7d6;
mov ymm11_c L0x7fffffffd7d8;
mov ymm11_d L0x7fffffffd7da;
mov ymm11_e L0x7fffffffd7dc;
mov ymm11_f L0x7fffffffd7de;
(* vpbroadcastw 0x108(%rdx),%ymm1                  #! EA = L0x555555561228; Value = 0xae886f65ad9a276d; PC = 0x555555558a65 *)
mov ymm1_0 L0x555555561228;
mov ymm1_1 L0x555555561228;
mov ymm1_2 L0x555555561228;
mov ymm1_3 L0x555555561228;
mov ymm1_4 L0x555555561228;
mov ymm1_5 L0x555555561228;
mov ymm1_6 L0x555555561228;
mov ymm1_7 L0x555555561228;
mov ymm1_8 L0x555555561228;
mov ymm1_9 L0x555555561228;
mov ymm1_a L0x555555561228;
mov ymm1_b L0x555555561228;
mov ymm1_c L0x555555561228;
mov ymm1_d L0x555555561228;
mov ymm1_e L0x555555561228;
mov ymm1_f L0x555555561228;
(* vpbroadcastw 0x308(%rdx),%ymm2                  #! EA = L0x555555561428; Value = 0xfe880165f19a096d; PC = 0x555555558a6e *)
mov ymm2_0 L0x555555561428;
mov ymm2_1 L0x555555561428;
mov ymm2_2 L0x555555561428;
mov ymm2_3 L0x555555561428;
mov ymm2_4 L0x555555561428;
mov ymm2_5 L0x555555561428;
mov ymm2_6 L0x555555561428;
mov ymm2_7 L0x555555561428;
mov ymm2_8 L0x555555561428;
mov ymm2_9 L0x555555561428;
mov ymm2_a L0x555555561428;
mov ymm2_b L0x555555561428;
mov ymm2_c L0x555555561428;
mov ymm2_d L0x555555561428;
mov ymm2_e L0x555555561428;
mov ymm2_f L0x555555561428;
(* vpmullw %ymm1,%ymm8,%ymm3                       #! PC = 0x555555558a77 *)
smull mulHymm8_0 mulL_0 ymm1_0 ymm8_0;
smull mulHymm8_1 mulL_1 ymm1_1 ymm8_1;
smull mulHymm8_2 mulL_2 ymm1_2 ymm8_2;
smull mulHymm8_3 mulL_3 ymm1_3 ymm8_3;
smull mulHymm8_4 mulL_4 ymm1_4 ymm8_4;
smull mulHymm8_5 mulL_5 ymm1_5 ymm8_5;
smull mulHymm8_6 mulL_6 ymm1_6 ymm8_6;
smull mulHymm8_7 mulL_7 ymm1_7 ymm8_7;
smull mulHymm8_8 mulL_8 ymm1_8 ymm8_8;
smull mulHymm8_9 mulL_9 ymm1_9 ymm8_9;
smull mulHymm8_a mulL_a ymm1_a ymm8_a;
smull mulHymm8_b mulL_b ymm1_b ymm8_b;
smull mulHymm8_c mulL_c ymm1_c ymm8_c;
smull mulHymm8_d mulL_d ymm1_d ymm8_d;
smull mulHymm8_e mulL_e ymm1_e ymm8_e;
smull mulHymm8_f mulL_f ymm1_f ymm8_f;
cast ymm3_0@sint16 mulL_0;
cast ymm3_1@sint16 mulL_1;
cast ymm3_2@sint16 mulL_2;
cast ymm3_3@sint16 mulL_3;
cast ymm3_4@sint16 mulL_4;
cast ymm3_5@sint16 mulL_5;
cast ymm3_6@sint16 mulL_6;
cast ymm3_7@sint16 mulL_7;
cast ymm3_8@sint16 mulL_8;
cast ymm3_9@sint16 mulL_9;
cast ymm3_a@sint16 mulL_a;
cast ymm3_b@sint16 mulL_b;
cast ymm3_c@sint16 mulL_c;
cast ymm3_d@sint16 mulL_d;
cast ymm3_e@sint16 mulL_e;
cast ymm3_f@sint16 mulL_f;
(* vpmulhw %ymm2,%ymm8,%ymm8                       #! PC = 0x555555558a7b *)
smull mulH_0 mulLymm8_0 ymm8_0 ymm2_0;
smull mulH_1 mulLymm8_1 ymm8_1 ymm2_1;
smull mulH_2 mulLymm8_2 ymm8_2 ymm2_2;
smull mulH_3 mulLymm8_3 ymm8_3 ymm2_3;
smull mulH_4 mulLymm8_4 ymm8_4 ymm2_4;
smull mulH_5 mulLymm8_5 ymm8_5 ymm2_5;
smull mulH_6 mulLymm8_6 ymm8_6 ymm2_6;
smull mulH_7 mulLymm8_7 ymm8_7 ymm2_7;
smull mulH_8 mulLymm8_8 ymm8_8 ymm2_8;
smull mulH_9 mulLymm8_9 ymm8_9 ymm2_9;
smull mulH_a mulLymm8_a ymm8_a ymm2_a;
smull mulH_b mulLymm8_b ymm8_b ymm2_b;
smull mulH_c mulLymm8_c ymm8_c ymm2_c;
smull mulH_d mulLymm8_d ymm8_d ymm2_d;
smull mulH_e mulLymm8_e ymm8_e ymm2_e;
smull mulH_f mulLymm8_f ymm8_f ymm2_f;
mov ymm8_0 mulH_0;
mov ymm8_1 mulH_1;
mov ymm8_2 mulH_2;
mov ymm8_3 mulH_3;
mov ymm8_4 mulH_4;
mov ymm8_5 mulH_5;
mov ymm8_6 mulH_6;
mov ymm8_7 mulH_7;
mov ymm8_8 mulH_8;
mov ymm8_9 mulH_9;
mov ymm8_a mulH_a;
mov ymm8_b mulH_b;
mov ymm8_c mulH_c;
mov ymm8_d mulH_d;
mov ymm8_e mulH_e;
mov ymm8_f mulH_f;
(* vpmulhw %ymm0,%ymm3,%ymm3                       #! PC = 0x555555558a7f *)
smull mulH_0 red_0 ymm3_0 ymm0_0;
assert true && red_0 = mulLymm8_0;
assume red_0 = mulLymm8_0 && true;
smull mulH_1 red_1 ymm3_1 ymm0_1;
assert true && red_1 = mulLymm8_1;
assume red_1 = mulLymm8_1 && true;
smull mulH_2 red_2 ymm3_2 ymm0_2;
assert true && red_2 = mulLymm8_2;
assume red_2 = mulLymm8_2 && true;
smull mulH_3 red_3 ymm3_3 ymm0_3;
assert true && red_3 = mulLymm8_3;
assume red_3 = mulLymm8_3 && true;
smull mulH_4 red_4 ymm3_4 ymm0_4;
assert true && red_4 = mulLymm8_4;
assume red_4 = mulLymm8_4 && true;
smull mulH_5 red_5 ymm3_5 ymm0_5;
assert true && red_5 = mulLymm8_5;
assume red_5 = mulLymm8_5 && true;
smull mulH_6 red_6 ymm3_6 ymm0_6;
assert true && red_6 = mulLymm8_6;
assume red_6 = mulLymm8_6 && true;
smull mulH_7 red_7 ymm3_7 ymm0_7;
assert true && red_7 = mulLymm8_7;
assume red_7 = mulLymm8_7 && true;
smull mulH_8 red_8 ymm3_8 ymm0_8;
assert true && red_8 = mulLymm8_8;
assume red_8 = mulLymm8_8 && true;
smull mulH_9 red_9 ymm3_9 ymm0_9;
assert true && red_9 = mulLymm8_9;
assume red_9 = mulLymm8_9 && true;
smull mulH_a red_a ymm3_a ymm0_a;
assert true && red_a = mulLymm8_a;
assume red_a = mulLymm8_a && true;
smull mulH_b red_b ymm3_b ymm0_b;
assert true && red_b = mulLymm8_b;
assume red_b = mulLymm8_b && true;
smull mulH_c red_c ymm3_c ymm0_c;
assert true && red_c = mulLymm8_c;
assume red_c = mulLymm8_c && true;
smull mulH_d red_d ymm3_d ymm0_d;
assert true && red_d = mulLymm8_d;
assume red_d = mulLymm8_d && true;
smull mulH_e red_e ymm3_e ymm0_e;
assert true && red_e = mulLymm8_e;
assume red_e = mulLymm8_e && true;
smull mulH_f red_f ymm3_f ymm0_f;
assert true && red_f = mulLymm8_f;
assume red_f = mulLymm8_f && true;
mov ymm3_0 mulH_0;
mov ymm3_1 mulH_1;
mov ymm3_2 mulH_2;
mov ymm3_3 mulH_3;
mov ymm3_4 mulH_4;
mov ymm3_5 mulH_5;
mov ymm3_6 mulH_6;
mov ymm3_7 mulH_7;
mov ymm3_8 mulH_8;
mov ymm3_9 mulH_9;
mov ymm3_a mulH_a;
mov ymm3_b mulH_b;
mov ymm3_c mulH_c;
mov ymm3_d mulH_d;
mov ymm3_e mulH_e;
mov ymm3_f mulH_f;
(* vpsubw %ymm3,%ymm8,%ymm8                        #! PC = 0x555555558a83 *)
sub ymm8_0 ymm8_0 ymm3_0;
sub ymm8_1 ymm8_1 ymm3_1;
sub ymm8_2 ymm8_2 ymm3_2;
sub ymm8_3 ymm8_3 ymm3_3;
sub ymm8_4 ymm8_4 ymm3_4;
sub ymm8_5 ymm8_5 ymm3_5;
sub ymm8_6 ymm8_6 ymm3_6;
sub ymm8_7 ymm8_7 ymm3_7;
sub ymm8_8 ymm8_8 ymm3_8;
sub ymm8_9 ymm8_9 ymm3_9;
sub ymm8_a ymm8_a ymm3_a;
sub ymm8_b ymm8_b ymm3_b;
sub ymm8_c ymm8_c ymm3_c;
sub ymm8_d ymm8_d ymm3_d;
sub ymm8_e ymm8_e ymm3_e;
sub ymm8_f ymm8_f ymm3_f;
(* vpmullw %ymm1,%ymm9,%ymm3                       #! PC = 0x555555558a87 *)
smull mulHymm9_0 mulL_0 ymm1_0 ymm9_0;
smull mulHymm9_1 mulL_1 ymm1_1 ymm9_1;
smull mulHymm9_2 mulL_2 ymm1_2 ymm9_2;
smull mulHymm9_3 mulL_3 ymm1_3 ymm9_3;
smull mulHymm9_4 mulL_4 ymm1_4 ymm9_4;
smull mulHymm9_5 mulL_5 ymm1_5 ymm9_5;
smull mulHymm9_6 mulL_6 ymm1_6 ymm9_6;
smull mulHymm9_7 mulL_7 ymm1_7 ymm9_7;
smull mulHymm9_8 mulL_8 ymm1_8 ymm9_8;
smull mulHymm9_9 mulL_9 ymm1_9 ymm9_9;
smull mulHymm9_a mulL_a ymm1_a ymm9_a;
smull mulHymm9_b mulL_b ymm1_b ymm9_b;
smull mulHymm9_c mulL_c ymm1_c ymm9_c;
smull mulHymm9_d mulL_d ymm1_d ymm9_d;
smull mulHymm9_e mulL_e ymm1_e ymm9_e;
smull mulHymm9_f mulL_f ymm1_f ymm9_f;
cast ymm3_0@sint16 mulL_0;
cast ymm3_1@sint16 mulL_1;
cast ymm3_2@sint16 mulL_2;
cast ymm3_3@sint16 mulL_3;
cast ymm3_4@sint16 mulL_4;
cast ymm3_5@sint16 mulL_5;
cast ymm3_6@sint16 mulL_6;
cast ymm3_7@sint16 mulL_7;
cast ymm3_8@sint16 mulL_8;
cast ymm3_9@sint16 mulL_9;
cast ymm3_a@sint16 mulL_a;
cast ymm3_b@sint16 mulL_b;
cast ymm3_c@sint16 mulL_c;
cast ymm3_d@sint16 mulL_d;
cast ymm3_e@sint16 mulL_e;
cast ymm3_f@sint16 mulL_f;
(* vpmulhw %ymm2,%ymm9,%ymm9                       #! PC = 0x555555558a8b *)
smull mulH_0 mulLymm9_0 ymm9_0 ymm2_0;
smull mulH_1 mulLymm9_1 ymm9_1 ymm2_1;
smull mulH_2 mulLymm9_2 ymm9_2 ymm2_2;
smull mulH_3 mulLymm9_3 ymm9_3 ymm2_3;
smull mulH_4 mulLymm9_4 ymm9_4 ymm2_4;
smull mulH_5 mulLymm9_5 ymm9_5 ymm2_5;
smull mulH_6 mulLymm9_6 ymm9_6 ymm2_6;
smull mulH_7 mulLymm9_7 ymm9_7 ymm2_7;
smull mulH_8 mulLymm9_8 ymm9_8 ymm2_8;
smull mulH_9 mulLymm9_9 ymm9_9 ymm2_9;
smull mulH_a mulLymm9_a ymm9_a ymm2_a;
smull mulH_b mulLymm9_b ymm9_b ymm2_b;
smull mulH_c mulLymm9_c ymm9_c ymm2_c;
smull mulH_d mulLymm9_d ymm9_d ymm2_d;
smull mulH_e mulLymm9_e ymm9_e ymm2_e;
smull mulH_f mulLymm9_f ymm9_f ymm2_f;
mov ymm9_0 mulH_0;
mov ymm9_1 mulH_1;
mov ymm9_2 mulH_2;
mov ymm9_3 mulH_3;
mov ymm9_4 mulH_4;
mov ymm9_5 mulH_5;
mov ymm9_6 mulH_6;
mov ymm9_7 mulH_7;
mov ymm9_8 mulH_8;
mov ymm9_9 mulH_9;
mov ymm9_a mulH_a;
mov ymm9_b mulH_b;
mov ymm9_c mulH_c;
mov ymm9_d mulH_d;
mov ymm9_e mulH_e;
mov ymm9_f mulH_f;
(* vpmulhw %ymm0,%ymm3,%ymm3                       #! PC = 0x555555558a8f *)
smull mulH_0 red_0 ymm3_0 ymm0_0;
assert true && red_0 = mulLymm9_0;
assume red_0 = mulLymm9_0 && true;
smull mulH_1 red_1 ymm3_1 ymm0_1;
assert true && red_1 = mulLymm9_1;
assume red_1 = mulLymm9_1 && true;
smull mulH_2 red_2 ymm3_2 ymm0_2;
assert true && red_2 = mulLymm9_2;
assume red_2 = mulLymm9_2 && true;
smull mulH_3 red_3 ymm3_3 ymm0_3;
assert true && red_3 = mulLymm9_3;
assume red_3 = mulLymm9_3 && true;
smull mulH_4 red_4 ymm3_4 ymm0_4;
assert true && red_4 = mulLymm9_4;
assume red_4 = mulLymm9_4 && true;
smull mulH_5 red_5 ymm3_5 ymm0_5;
assert true && red_5 = mulLymm9_5;
assume red_5 = mulLymm9_5 && true;
smull mulH_6 red_6 ymm3_6 ymm0_6;
assert true && red_6 = mulLymm9_6;
assume red_6 = mulLymm9_6 && true;
smull mulH_7 red_7 ymm3_7 ymm0_7;
assert true && red_7 = mulLymm9_7;
assume red_7 = mulLymm9_7 && true;
smull mulH_8 red_8 ymm3_8 ymm0_8;
assert true && red_8 = mulLymm9_8;
assume red_8 = mulLymm9_8 && true;
smull mulH_9 red_9 ymm3_9 ymm0_9;
assert true && red_9 = mulLymm9_9;
assume red_9 = mulLymm9_9 && true;
smull mulH_a red_a ymm3_a ymm0_a;
assert true && red_a = mulLymm9_a;
assume red_a = mulLymm9_a && true;
smull mulH_b red_b ymm3_b ymm0_b;
assert true && red_b = mulLymm9_b;
assume red_b = mulLymm9_b && true;
smull mulH_c red_c ymm3_c ymm0_c;
assert true && red_c = mulLymm9_c;
assume red_c = mulLymm9_c && true;
smull mulH_d red_d ymm3_d ymm0_d;
assert true && red_d = mulLymm9_d;
assume red_d = mulLymm9_d && true;
smull mulH_e red_e ymm3_e ymm0_e;
assert true && red_e = mulLymm9_e;
assume red_e = mulLymm9_e && true;
smull mulH_f red_f ymm3_f ymm0_f;
assert true && red_f = mulLymm9_f;
assume red_f = mulLymm9_f && true;
mov ymm3_0 mulH_0;
mov ymm3_1 mulH_1;
mov ymm3_2 mulH_2;
mov ymm3_3 mulH_3;
mov ymm3_4 mulH_4;
mov ymm3_5 mulH_5;
mov ymm3_6 mulH_6;
mov ymm3_7 mulH_7;
mov ymm3_8 mulH_8;
mov ymm3_9 mulH_9;
mov ymm3_a mulH_a;
mov ymm3_b mulH_b;
mov ymm3_c mulH_c;
mov ymm3_d mulH_d;
mov ymm3_e mulH_e;
mov ymm3_f mulH_f;
(* vpsubw %ymm3,%ymm9,%ymm9                        #! PC = 0x555555558a93 *)
sub ymm9_0 ymm9_0 ymm3_0;
sub ymm9_1 ymm9_1 ymm3_1;
sub ymm9_2 ymm9_2 ymm3_2;
sub ymm9_3 ymm9_3 ymm3_3;
sub ymm9_4 ymm9_4 ymm3_4;
sub ymm9_5 ymm9_5 ymm3_5;
sub ymm9_6 ymm9_6 ymm3_6;
sub ymm9_7 ymm9_7 ymm3_7;
sub ymm9_8 ymm9_8 ymm3_8;
sub ymm9_9 ymm9_9 ymm3_9;
sub ymm9_a ymm9_a ymm3_a;
sub ymm9_b ymm9_b ymm3_b;
sub ymm9_c ymm9_c ymm3_c;
sub ymm9_d ymm9_d ymm3_d;
sub ymm9_e ymm9_e ymm3_e;
sub ymm9_f ymm9_f ymm3_f;
(* vpmullw %ymm1,%ymm10,%ymm3                      #! PC = 0x555555558a97 *)
smull mulHymm10_0 mulL_0 ymm1_0 ymm10_0;
smull mulHymm10_1 mulL_1 ymm1_1 ymm10_1;
smull mulHymm10_2 mulL_2 ymm1_2 ymm10_2;
smull mulHymm10_3 mulL_3 ymm1_3 ymm10_3;
smull mulHymm10_4 mulL_4 ymm1_4 ymm10_4;
smull mulHymm10_5 mulL_5 ymm1_5 ymm10_5;
smull mulHymm10_6 mulL_6 ymm1_6 ymm10_6;
smull mulHymm10_7 mulL_7 ymm1_7 ymm10_7;
smull mulHymm10_8 mulL_8 ymm1_8 ymm10_8;
smull mulHymm10_9 mulL_9 ymm1_9 ymm10_9;
smull mulHymm10_a mulL_a ymm1_a ymm10_a;
smull mulHymm10_b mulL_b ymm1_b ymm10_b;
smull mulHymm10_c mulL_c ymm1_c ymm10_c;
smull mulHymm10_d mulL_d ymm1_d ymm10_d;
smull mulHymm10_e mulL_e ymm1_e ymm10_e;
smull mulHymm10_f mulL_f ymm1_f ymm10_f;
cast ymm3_0@sint16 mulL_0;
cast ymm3_1@sint16 mulL_1;
cast ymm3_2@sint16 mulL_2;
cast ymm3_3@sint16 mulL_3;
cast ymm3_4@sint16 mulL_4;
cast ymm3_5@sint16 mulL_5;
cast ymm3_6@sint16 mulL_6;
cast ymm3_7@sint16 mulL_7;
cast ymm3_8@sint16 mulL_8;
cast ymm3_9@sint16 mulL_9;
cast ymm3_a@sint16 mulL_a;
cast ymm3_b@sint16 mulL_b;
cast ymm3_c@sint16 mulL_c;
cast ymm3_d@sint16 mulL_d;
cast ymm3_e@sint16 mulL_e;
cast ymm3_f@sint16 mulL_f;
(* vpmulhw %ymm2,%ymm10,%ymm10                     #! PC = 0x555555558a9b *)
smull mulH_0 mulLymm10_0 ymm10_0 ymm2_0;
smull mulH_1 mulLymm10_1 ymm10_1 ymm2_1;
smull mulH_2 mulLymm10_2 ymm10_2 ymm2_2;
smull mulH_3 mulLymm10_3 ymm10_3 ymm2_3;
smull mulH_4 mulLymm10_4 ymm10_4 ymm2_4;
smull mulH_5 mulLymm10_5 ymm10_5 ymm2_5;
smull mulH_6 mulLymm10_6 ymm10_6 ymm2_6;
smull mulH_7 mulLymm10_7 ymm10_7 ymm2_7;
smull mulH_8 mulLymm10_8 ymm10_8 ymm2_8;
smull mulH_9 mulLymm10_9 ymm10_9 ymm2_9;
smull mulH_a mulLymm10_a ymm10_a ymm2_a;
smull mulH_b mulLymm10_b ymm10_b ymm2_b;
smull mulH_c mulLymm10_c ymm10_c ymm2_c;
smull mulH_d mulLymm10_d ymm10_d ymm2_d;
smull mulH_e mulLymm10_e ymm10_e ymm2_e;
smull mulH_f mulLymm10_f ymm10_f ymm2_f;
mov ymm10_0 mulH_0;
mov ymm10_1 mulH_1;
mov ymm10_2 mulH_2;
mov ymm10_3 mulH_3;
mov ymm10_4 mulH_4;
mov ymm10_5 mulH_5;
mov ymm10_6 mulH_6;
mov ymm10_7 mulH_7;
mov ymm10_8 mulH_8;
mov ymm10_9 mulH_9;
mov ymm10_a mulH_a;
mov ymm10_b mulH_b;
mov ymm10_c mulH_c;
mov ymm10_d mulH_d;
mov ymm10_e mulH_e;
mov ymm10_f mulH_f;
(* vpmulhw %ymm0,%ymm3,%ymm3                       #! PC = 0x555555558a9f *)
smull mulH_0 red_0 ymm3_0 ymm0_0;
assert true && red_0 = mulLymm10_0;
assume red_0 = mulLymm10_0 && true;
smull mulH_1 red_1 ymm3_1 ymm0_1;
assert true && red_1 = mulLymm10_1;
assume red_1 = mulLymm10_1 && true;
smull mulH_2 red_2 ymm3_2 ymm0_2;
assert true && red_2 = mulLymm10_2;
assume red_2 = mulLymm10_2 && true;
smull mulH_3 red_3 ymm3_3 ymm0_3;
assert true && red_3 = mulLymm10_3;
assume red_3 = mulLymm10_3 && true;
smull mulH_4 red_4 ymm3_4 ymm0_4;
assert true && red_4 = mulLymm10_4;
assume red_4 = mulLymm10_4 && true;
smull mulH_5 red_5 ymm3_5 ymm0_5;
assert true && red_5 = mulLymm10_5;
assume red_5 = mulLymm10_5 && true;
smull mulH_6 red_6 ymm3_6 ymm0_6;
assert true && red_6 = mulLymm10_6;
assume red_6 = mulLymm10_6 && true;
smull mulH_7 red_7 ymm3_7 ymm0_7;
assert true && red_7 = mulLymm10_7;
assume red_7 = mulLymm10_7 && true;
smull mulH_8 red_8 ymm3_8 ymm0_8;
assert true && red_8 = mulLymm10_8;
assume red_8 = mulLymm10_8 && true;
smull mulH_9 red_9 ymm3_9 ymm0_9;
assert true && red_9 = mulLymm10_9;
assume red_9 = mulLymm10_9 && true;
smull mulH_a red_a ymm3_a ymm0_a;
assert true && red_a = mulLymm10_a;
assume red_a = mulLymm10_a && true;
smull mulH_b red_b ymm3_b ymm0_b;
assert true && red_b = mulLymm10_b;
assume red_b = mulLymm10_b && true;
smull mulH_c red_c ymm3_c ymm0_c;
assert true && red_c = mulLymm10_c;
assume red_c = mulLymm10_c && true;
smull mulH_d red_d ymm3_d ymm0_d;
assert true && red_d = mulLymm10_d;
assume red_d = mulLymm10_d && true;
smull mulH_e red_e ymm3_e ymm0_e;
assert true && red_e = mulLymm10_e;
assume red_e = mulLymm10_e && true;
smull mulH_f red_f ymm3_f ymm0_f;
assert true && red_f = mulLymm10_f;
assume red_f = mulLymm10_f && true;
mov ymm3_0 mulH_0;
mov ymm3_1 mulH_1;
mov ymm3_2 mulH_2;
mov ymm3_3 mulH_3;
mov ymm3_4 mulH_4;
mov ymm3_5 mulH_5;
mov ymm3_6 mulH_6;
mov ymm3_7 mulH_7;
mov ymm3_8 mulH_8;
mov ymm3_9 mulH_9;
mov ymm3_a mulH_a;
mov ymm3_b mulH_b;
mov ymm3_c mulH_c;
mov ymm3_d mulH_d;
mov ymm3_e mulH_e;
mov ymm3_f mulH_f;
(* vpsubw %ymm3,%ymm10,%ymm10                      #! PC = 0x555555558aa3 *)
sub ymm10_0 ymm10_0 ymm3_0;
sub ymm10_1 ymm10_1 ymm3_1;
sub ymm10_2 ymm10_2 ymm3_2;
sub ymm10_3 ymm10_3 ymm3_3;
sub ymm10_4 ymm10_4 ymm3_4;
sub ymm10_5 ymm10_5 ymm3_5;
sub ymm10_6 ymm10_6 ymm3_6;
sub ymm10_7 ymm10_7 ymm3_7;
sub ymm10_8 ymm10_8 ymm3_8;
sub ymm10_9 ymm10_9 ymm3_9;
sub ymm10_a ymm10_a ymm3_a;
sub ymm10_b ymm10_b ymm3_b;
sub ymm10_c ymm10_c ymm3_c;
sub ymm10_d ymm10_d ymm3_d;
sub ymm10_e ymm10_e ymm3_e;
sub ymm10_f ymm10_f ymm3_f;
(* vpmullw %ymm1,%ymm11,%ymm3                      #! PC = 0x555555558aa7 *)
smull mulHymm11_0 mulL_0 ymm1_0 ymm11_0;
smull mulHymm11_1 mulL_1 ymm1_1 ymm11_1;
smull mulHymm11_2 mulL_2 ymm1_2 ymm11_2;
smull mulHymm11_3 mulL_3 ymm1_3 ymm11_3;
smull mulHymm11_4 mulL_4 ymm1_4 ymm11_4;
smull mulHymm11_5 mulL_5 ymm1_5 ymm11_5;
smull mulHymm11_6 mulL_6 ymm1_6 ymm11_6;
smull mulHymm11_7 mulL_7 ymm1_7 ymm11_7;
smull mulHymm11_8 mulL_8 ymm1_8 ymm11_8;
smull mulHymm11_9 mulL_9 ymm1_9 ymm11_9;
smull mulHymm11_a mulL_a ymm1_a ymm11_a;
smull mulHymm11_b mulL_b ymm1_b ymm11_b;
smull mulHymm11_c mulL_c ymm1_c ymm11_c;
smull mulHymm11_d mulL_d ymm1_d ymm11_d;
smull mulHymm11_e mulL_e ymm1_e ymm11_e;
smull mulHymm11_f mulL_f ymm1_f ymm11_f;
cast ymm3_0@sint16 mulL_0;
cast ymm3_1@sint16 mulL_1;
cast ymm3_2@sint16 mulL_2;
cast ymm3_3@sint16 mulL_3;
cast ymm3_4@sint16 mulL_4;
cast ymm3_5@sint16 mulL_5;
cast ymm3_6@sint16 mulL_6;
cast ymm3_7@sint16 mulL_7;
cast ymm3_8@sint16 mulL_8;
cast ymm3_9@sint16 mulL_9;
cast ymm3_a@sint16 mulL_a;
cast ymm3_b@sint16 mulL_b;
cast ymm3_c@sint16 mulL_c;
cast ymm3_d@sint16 mulL_d;
cast ymm3_e@sint16 mulL_e;
cast ymm3_f@sint16 mulL_f;
(* vpmulhw %ymm2,%ymm11,%ymm11                     #! PC = 0x555555558aab *)
smull mulH_0 mulLymm11_0 ymm11_0 ymm2_0;
smull mulH_1 mulLymm11_1 ymm11_1 ymm2_1;
smull mulH_2 mulLymm11_2 ymm11_2 ymm2_2;
smull mulH_3 mulLymm11_3 ymm11_3 ymm2_3;
smull mulH_4 mulLymm11_4 ymm11_4 ymm2_4;
smull mulH_5 mulLymm11_5 ymm11_5 ymm2_5;
smull mulH_6 mulLymm11_6 ymm11_6 ymm2_6;
smull mulH_7 mulLymm11_7 ymm11_7 ymm2_7;
smull mulH_8 mulLymm11_8 ymm11_8 ymm2_8;
smull mulH_9 mulLymm11_9 ymm11_9 ymm2_9;
smull mulH_a mulLymm11_a ymm11_a ymm2_a;
smull mulH_b mulLymm11_b ymm11_b ymm2_b;
smull mulH_c mulLymm11_c ymm11_c ymm2_c;
smull mulH_d mulLymm11_d ymm11_d ymm2_d;
smull mulH_e mulLymm11_e ymm11_e ymm2_e;
smull mulH_f mulLymm11_f ymm11_f ymm2_f;
mov ymm11_0 mulH_0;
mov ymm11_1 mulH_1;
mov ymm11_2 mulH_2;
mov ymm11_3 mulH_3;
mov ymm11_4 mulH_4;
mov ymm11_5 mulH_5;
mov ymm11_6 mulH_6;
mov ymm11_7 mulH_7;
mov ymm11_8 mulH_8;
mov ymm11_9 mulH_9;
mov ymm11_a mulH_a;
mov ymm11_b mulH_b;
mov ymm11_c mulH_c;
mov ymm11_d mulH_d;
mov ymm11_e mulH_e;
mov ymm11_f mulH_f;
(* vpmulhw %ymm0,%ymm3,%ymm3                       #! PC = 0x555555558aaf *)
smull mulH_0 red_0 ymm3_0 ymm0_0;
assert true && red_0 = mulLymm11_0;
assume red_0 = mulLymm11_0 && true;
smull mulH_1 red_1 ymm3_1 ymm0_1;
assert true && red_1 = mulLymm11_1;
assume red_1 = mulLymm11_1 && true;
smull mulH_2 red_2 ymm3_2 ymm0_2;
assert true && red_2 = mulLymm11_2;
assume red_2 = mulLymm11_2 && true;
smull mulH_3 red_3 ymm3_3 ymm0_3;
assert true && red_3 = mulLymm11_3;
assume red_3 = mulLymm11_3 && true;
smull mulH_4 red_4 ymm3_4 ymm0_4;
assert true && red_4 = mulLymm11_4;
assume red_4 = mulLymm11_4 && true;
smull mulH_5 red_5 ymm3_5 ymm0_5;
assert true && red_5 = mulLymm11_5;
assume red_5 = mulLymm11_5 && true;
smull mulH_6 red_6 ymm3_6 ymm0_6;
assert true && red_6 = mulLymm11_6;
assume red_6 = mulLymm11_6 && true;
smull mulH_7 red_7 ymm3_7 ymm0_7;
assert true && red_7 = mulLymm11_7;
assume red_7 = mulLymm11_7 && true;
smull mulH_8 red_8 ymm3_8 ymm0_8;
assert true && red_8 = mulLymm11_8;
assume red_8 = mulLymm11_8 && true;
smull mulH_9 red_9 ymm3_9 ymm0_9;
assert true && red_9 = mulLymm11_9;
assume red_9 = mulLymm11_9 && true;
smull mulH_a red_a ymm3_a ymm0_a;
assert true && red_a = mulLymm11_a;
assume red_a = mulLymm11_a && true;
smull mulH_b red_b ymm3_b ymm0_b;
assert true && red_b = mulLymm11_b;
assume red_b = mulLymm11_b && true;
smull mulH_c red_c ymm3_c ymm0_c;
assert true && red_c = mulLymm11_c;
assume red_c = mulLymm11_c && true;
smull mulH_d red_d ymm3_d ymm0_d;
assert true && red_d = mulLymm11_d;
assume red_d = mulLymm11_d && true;
smull mulH_e red_e ymm3_e ymm0_e;
assert true && red_e = mulLymm11_e;
assume red_e = mulLymm11_e && true;
smull mulH_f red_f ymm3_f ymm0_f;
assert true && red_f = mulLymm11_f;
assume red_f = mulLymm11_f && true;
mov ymm3_0 mulH_0;
mov ymm3_1 mulH_1;
mov ymm3_2 mulH_2;
mov ymm3_3 mulH_3;
mov ymm3_4 mulH_4;
mov ymm3_5 mulH_5;
mov ymm3_6 mulH_6;
mov ymm3_7 mulH_7;
mov ymm3_8 mulH_8;
mov ymm3_9 mulH_9;
mov ymm3_a mulH_a;
mov ymm3_b mulH_b;
mov ymm3_c mulH_c;
mov ymm3_d mulH_d;
mov ymm3_e mulH_e;
mov ymm3_f mulH_f;
(* vpsubw %ymm3,%ymm11,%ymm11                      #! PC = 0x555555558ab3 *)
sub ymm11_0 ymm11_0 ymm3_0;
sub ymm11_1 ymm11_1 ymm3_1;
sub ymm11_2 ymm11_2 ymm3_2;
sub ymm11_3 ymm11_3 ymm3_3;
sub ymm11_4 ymm11_4 ymm3_4;
sub ymm11_5 ymm11_5 ymm3_5;
sub ymm11_6 ymm11_6 ymm3_6;
sub ymm11_7 ymm11_7 ymm3_7;
sub ymm11_8 ymm11_8 ymm3_8;
sub ymm11_9 ymm11_9 ymm3_9;
sub ymm11_a ymm11_a ymm3_a;
sub ymm11_b ymm11_b ymm3_b;
sub ymm11_c ymm11_c ymm3_c;
sub ymm11_d ymm11_d ymm3_d;
sub ymm11_e ymm11_e ymm3_e;
sub ymm11_f ymm11_f ymm3_f;
(* vpaddw %ymm8,%ymm4,%ymm3                        #! PC = 0x555555558ab7 *)
add ymm3_0 ymm4_0 ymm8_0;
add ymm3_1 ymm4_1 ymm8_1;
add ymm3_2 ymm4_2 ymm8_2;
add ymm3_3 ymm4_3 ymm8_3;
add ymm3_4 ymm4_4 ymm8_4;
add ymm3_5 ymm4_5 ymm8_5;
add ymm3_6 ymm4_6 ymm8_6;
add ymm3_7 ymm4_7 ymm8_7;
add ymm3_8 ymm4_8 ymm8_8;
add ymm3_9 ymm4_9 ymm8_9;
add ymm3_a ymm4_a ymm8_a;
add ymm3_b ymm4_b ymm8_b;
add ymm3_c ymm4_c ymm8_c;
add ymm3_d ymm4_d ymm8_d;
add ymm3_e ymm4_e ymm8_e;
add ymm3_f ymm4_f ymm8_f;
(* vpsubw %ymm8,%ymm4,%ymm8                        #! PC = 0x555555558abc *)
sub ymm8_0 ymm4_0 ymm8_0;
sub ymm8_1 ymm4_1 ymm8_1;
sub ymm8_2 ymm4_2 ymm8_2;
sub ymm8_3 ymm4_3 ymm8_3;
sub ymm8_4 ymm4_4 ymm8_4;
sub ymm8_5 ymm4_5 ymm8_5;
sub ymm8_6 ymm4_6 ymm8_6;
sub ymm8_7 ymm4_7 ymm8_7;
sub ymm8_8 ymm4_8 ymm8_8;
sub ymm8_9 ymm4_9 ymm8_9;
sub ymm8_a ymm4_a ymm8_a;
sub ymm8_b ymm4_b ymm8_b;
sub ymm8_c ymm4_c ymm8_c;
sub ymm8_d ymm4_d ymm8_d;
sub ymm8_e ymm4_e ymm8_e;
sub ymm8_f ymm4_f ymm8_f;
(* vpaddw %ymm9,%ymm5,%ymm4                        #! PC = 0x555555558ac1 *)
add ymm4_0 ymm5_0 ymm9_0;
add ymm4_1 ymm5_1 ymm9_1;
add ymm4_2 ymm5_2 ymm9_2;
add ymm4_3 ymm5_3 ymm9_3;
add ymm4_4 ymm5_4 ymm9_4;
add ymm4_5 ymm5_5 ymm9_5;
add ymm4_6 ymm5_6 ymm9_6;
add ymm4_7 ymm5_7 ymm9_7;
add ymm4_8 ymm5_8 ymm9_8;
add ymm4_9 ymm5_9 ymm9_9;
add ymm4_a ymm5_a ymm9_a;
add ymm4_b ymm5_b ymm9_b;
add ymm4_c ymm5_c ymm9_c;
add ymm4_d ymm5_d ymm9_d;
add ymm4_e ymm5_e ymm9_e;
add ymm4_f ymm5_f ymm9_f;
(* vpsubw %ymm9,%ymm5,%ymm9                        #! PC = 0x555555558ac6 *)
sub ymm9_0 ymm5_0 ymm9_0;
sub ymm9_1 ymm5_1 ymm9_1;
sub ymm9_2 ymm5_2 ymm9_2;
sub ymm9_3 ymm5_3 ymm9_3;
sub ymm9_4 ymm5_4 ymm9_4;
sub ymm9_5 ymm5_5 ymm9_5;
sub ymm9_6 ymm5_6 ymm9_6;
sub ymm9_7 ymm5_7 ymm9_7;
sub ymm9_8 ymm5_8 ymm9_8;
sub ymm9_9 ymm5_9 ymm9_9;
sub ymm9_a ymm5_a ymm9_a;
sub ymm9_b ymm5_b ymm9_b;
sub ymm9_c ymm5_c ymm9_c;
sub ymm9_d ymm5_d ymm9_d;
sub ymm9_e ymm5_e ymm9_e;
sub ymm9_f ymm5_f ymm9_f;
(* vpaddw %ymm10,%ymm6,%ymm5                       #! PC = 0x555555558acb *)
add ymm5_0 ymm6_0 ymm10_0;
add ymm5_1 ymm6_1 ymm10_1;
add ymm5_2 ymm6_2 ymm10_2;
add ymm5_3 ymm6_3 ymm10_3;
add ymm5_4 ymm6_4 ymm10_4;
add ymm5_5 ymm6_5 ymm10_5;
add ymm5_6 ymm6_6 ymm10_6;
add ymm5_7 ymm6_7 ymm10_7;
add ymm5_8 ymm6_8 ymm10_8;
add ymm5_9 ymm6_9 ymm10_9;
add ymm5_a ymm6_a ymm10_a;
add ymm5_b ymm6_b ymm10_b;
add ymm5_c ymm6_c ymm10_c;
add ymm5_d ymm6_d ymm10_d;
add ymm5_e ymm6_e ymm10_e;
add ymm5_f ymm6_f ymm10_f;
(* vpsubw %ymm10,%ymm6,%ymm10                      #! PC = 0x555555558ad0 *)
sub ymm10_0 ymm6_0 ymm10_0;
sub ymm10_1 ymm6_1 ymm10_1;
sub ymm10_2 ymm6_2 ymm10_2;
sub ymm10_3 ymm6_3 ymm10_3;
sub ymm10_4 ymm6_4 ymm10_4;
sub ymm10_5 ymm6_5 ymm10_5;
sub ymm10_6 ymm6_6 ymm10_6;
sub ymm10_7 ymm6_7 ymm10_7;
sub ymm10_8 ymm6_8 ymm10_8;
sub ymm10_9 ymm6_9 ymm10_9;
sub ymm10_a ymm6_a ymm10_a;
sub ymm10_b ymm6_b ymm10_b;
sub ymm10_c ymm6_c ymm10_c;
sub ymm10_d ymm6_d ymm10_d;
sub ymm10_e ymm6_e ymm10_e;
sub ymm10_f ymm6_f ymm10_f;
(* vpaddw %ymm11,%ymm7,%ymm6                       #! PC = 0x555555558ad5 *)
add ymm6_0 ymm7_0 ymm11_0;
add ymm6_1 ymm7_1 ymm11_1;
add ymm6_2 ymm7_2 ymm11_2;
add ymm6_3 ymm7_3 ymm11_3;
add ymm6_4 ymm7_4 ymm11_4;
add ymm6_5 ymm7_5 ymm11_5;
add ymm6_6 ymm7_6 ymm11_6;
add ymm6_7 ymm7_7 ymm11_7;
add ymm6_8 ymm7_8 ymm11_8;
add ymm6_9 ymm7_9 ymm11_9;
add ymm6_a ymm7_a ymm11_a;
add ymm6_b ymm7_b ymm11_b;
add ymm6_c ymm7_c ymm11_c;
add ymm6_d ymm7_d ymm11_d;
add ymm6_e ymm7_e ymm11_e;
add ymm6_f ymm7_f ymm11_f;
(* vpsubw %ymm11,%ymm7,%ymm11                      #! PC = 0x555555558ada *)
sub ymm11_0 ymm7_0 ymm11_0;
sub ymm11_1 ymm7_1 ymm11_1;
sub ymm11_2 ymm7_2 ymm11_2;
sub ymm11_3 ymm7_3 ymm11_3;
sub ymm11_4 ymm7_4 ymm11_4;
sub ymm11_5 ymm7_5 ymm11_5;
sub ymm11_6 ymm7_6 ymm11_6;
sub ymm11_7 ymm7_7 ymm11_7;
sub ymm11_8 ymm7_8 ymm11_8;
sub ymm11_9 ymm7_9 ymm11_9;
sub ymm11_a ymm7_a ymm11_a;
sub ymm11_b ymm7_b ymm11_b;
sub ymm11_c ymm7_c ymm11_c;
sub ymm11_d ymm7_d ymm11_d;
sub ymm11_e ymm7_e ymm11_e;
sub ymm11_f ymm7_f ymm11_f;
(* vpbroadcastw 0x110(%rdx),%ymm1                  #! EA = L0x555555561230; Value = 0x30bc8cf7c126e487; PC = 0x555555558adf *)
mov ymm1_0 L0x555555561230;
mov ymm1_1 L0x555555561230;
mov ymm1_2 L0x555555561230;
mov ymm1_3 L0x555555561230;
mov ymm1_4 L0x555555561230;
mov ymm1_5 L0x555555561230;
mov ymm1_6 L0x555555561230;
mov ymm1_7 L0x555555561230;
mov ymm1_8 L0x555555561230;
mov ymm1_9 L0x555555561230;
mov ymm1_a L0x555555561230;
mov ymm1_b L0x555555561230;
mov ymm1_c L0x555555561230;
mov ymm1_d L0x555555561230;
mov ymm1_e L0x555555561230;
mov ymm1_f L0x555555561230;
(* vpbroadcastw 0x310(%rdx),%ymm2                  #! EA = L0x555555561430; Value = 0x08bc12f7fd260a87; PC = 0x555555558ae8 *)
mov ymm2_0 L0x555555561430;
mov ymm2_1 L0x555555561430;
mov ymm2_2 L0x555555561430;
mov ymm2_3 L0x555555561430;
mov ymm2_4 L0x555555561430;
mov ymm2_5 L0x555555561430;
mov ymm2_6 L0x555555561430;
mov ymm2_7 L0x555555561430;
mov ymm2_8 L0x555555561430;
mov ymm2_9 L0x555555561430;
mov ymm2_a L0x555555561430;
mov ymm2_b L0x555555561430;
mov ymm2_c L0x555555561430;
mov ymm2_d L0x555555561430;
mov ymm2_e L0x555555561430;
mov ymm2_f L0x555555561430;
(* vpmullw %ymm1,%ymm5,%ymm7                       #! PC = 0x555555558af1 *)
smull mulHymm5_0 mulL_0 ymm1_0 ymm5_0;
smull mulHymm5_1 mulL_1 ymm1_1 ymm5_1;
smull mulHymm5_2 mulL_2 ymm1_2 ymm5_2;
smull mulHymm5_3 mulL_3 ymm1_3 ymm5_3;
smull mulHymm5_4 mulL_4 ymm1_4 ymm5_4;
smull mulHymm5_5 mulL_5 ymm1_5 ymm5_5;
smull mulHymm5_6 mulL_6 ymm1_6 ymm5_6;
smull mulHymm5_7 mulL_7 ymm1_7 ymm5_7;
smull mulHymm5_8 mulL_8 ymm1_8 ymm5_8;
smull mulHymm5_9 mulL_9 ymm1_9 ymm5_9;
smull mulHymm5_a mulL_a ymm1_a ymm5_a;
smull mulHymm5_b mulL_b ymm1_b ymm5_b;
smull mulHymm5_c mulL_c ymm1_c ymm5_c;
smull mulHymm5_d mulL_d ymm1_d ymm5_d;
smull mulHymm5_e mulL_e ymm1_e ymm5_e;
smull mulHymm5_f mulL_f ymm1_f ymm5_f;
cast ymm7_0@sint16 mulL_0;
cast ymm7_1@sint16 mulL_1;
cast ymm7_2@sint16 mulL_2;
cast ymm7_3@sint16 mulL_3;
cast ymm7_4@sint16 mulL_4;
cast ymm7_5@sint16 mulL_5;
cast ymm7_6@sint16 mulL_6;
cast ymm7_7@sint16 mulL_7;
cast ymm7_8@sint16 mulL_8;
cast ymm7_9@sint16 mulL_9;
cast ymm7_a@sint16 mulL_a;
cast ymm7_b@sint16 mulL_b;
cast ymm7_c@sint16 mulL_c;
cast ymm7_d@sint16 mulL_d;
cast ymm7_e@sint16 mulL_e;
cast ymm7_f@sint16 mulL_f;
(* vpmulhw %ymm2,%ymm5,%ymm5                       #! PC = 0x555555558af5 *)
smull mulH_0 mulLymm5_0 ymm5_0 ymm2_0;
smull mulH_1 mulLymm5_1 ymm5_1 ymm2_1;
smull mulH_2 mulLymm5_2 ymm5_2 ymm2_2;
smull mulH_3 mulLymm5_3 ymm5_3 ymm2_3;
smull mulH_4 mulLymm5_4 ymm5_4 ymm2_4;
smull mulH_5 mulLymm5_5 ymm5_5 ymm2_5;
smull mulH_6 mulLymm5_6 ymm5_6 ymm2_6;
smull mulH_7 mulLymm5_7 ymm5_7 ymm2_7;
smull mulH_8 mulLymm5_8 ymm5_8 ymm2_8;
smull mulH_9 mulLymm5_9 ymm5_9 ymm2_9;
smull mulH_a mulLymm5_a ymm5_a ymm2_a;
smull mulH_b mulLymm5_b ymm5_b ymm2_b;
smull mulH_c mulLymm5_c ymm5_c ymm2_c;
smull mulH_d mulLymm5_d ymm5_d ymm2_d;
smull mulH_e mulLymm5_e ymm5_e ymm2_e;
smull mulH_f mulLymm5_f ymm5_f ymm2_f;
mov ymm5_0 mulH_0;
mov ymm5_1 mulH_1;
mov ymm5_2 mulH_2;
mov ymm5_3 mulH_3;
mov ymm5_4 mulH_4;
mov ymm5_5 mulH_5;
mov ymm5_6 mulH_6;
mov ymm5_7 mulH_7;
mov ymm5_8 mulH_8;
mov ymm5_9 mulH_9;
mov ymm5_a mulH_a;
mov ymm5_b mulH_b;
mov ymm5_c mulH_c;
mov ymm5_d mulH_d;
mov ymm5_e mulH_e;
mov ymm5_f mulH_f;
(* vpmulhw %ymm0,%ymm7,%ymm7                       #! PC = 0x555555558af9 *)
smull mulH_0 red_0 ymm7_0 ymm0_0;
assert true && red_0 = mulLymm5_0;
assume red_0 = mulLymm5_0 && true;
smull mulH_1 red_1 ymm7_1 ymm0_1;
assert true && red_1 = mulLymm5_1;
assume red_1 = mulLymm5_1 && true;
smull mulH_2 red_2 ymm7_2 ymm0_2;
assert true && red_2 = mulLymm5_2;
assume red_2 = mulLymm5_2 && true;
smull mulH_3 red_3 ymm7_3 ymm0_3;
assert true && red_3 = mulLymm5_3;
assume red_3 = mulLymm5_3 && true;
smull mulH_4 red_4 ymm7_4 ymm0_4;
assert true && red_4 = mulLymm5_4;
assume red_4 = mulLymm5_4 && true;
smull mulH_5 red_5 ymm7_5 ymm0_5;
assert true && red_5 = mulLymm5_5;
assume red_5 = mulLymm5_5 && true;
smull mulH_6 red_6 ymm7_6 ymm0_6;
assert true && red_6 = mulLymm5_6;
assume red_6 = mulLymm5_6 && true;
smull mulH_7 red_7 ymm7_7 ymm0_7;
assert true && red_7 = mulLymm5_7;
assume red_7 = mulLymm5_7 && true;
smull mulH_8 red_8 ymm7_8 ymm0_8;
assert true && red_8 = mulLymm5_8;
assume red_8 = mulLymm5_8 && true;
smull mulH_9 red_9 ymm7_9 ymm0_9;
assert true && red_9 = mulLymm5_9;
assume red_9 = mulLymm5_9 && true;
smull mulH_a red_a ymm7_a ymm0_a;
assert true && red_a = mulLymm5_a;
assume red_a = mulLymm5_a && true;
smull mulH_b red_b ymm7_b ymm0_b;
assert true && red_b = mulLymm5_b;
assume red_b = mulLymm5_b && true;
smull mulH_c red_c ymm7_c ymm0_c;
assert true && red_c = mulLymm5_c;
assume red_c = mulLymm5_c && true;
smull mulH_d red_d ymm7_d ymm0_d;
assert true && red_d = mulLymm5_d;
assume red_d = mulLymm5_d && true;
smull mulH_e red_e ymm7_e ymm0_e;
assert true && red_e = mulLymm5_e;
assume red_e = mulLymm5_e && true;
smull mulH_f red_f ymm7_f ymm0_f;
assert true && red_f = mulLymm5_f;
assume red_f = mulLymm5_f && true;
mov ymm7_0 mulH_0;
mov ymm7_1 mulH_1;
mov ymm7_2 mulH_2;
mov ymm7_3 mulH_3;
mov ymm7_4 mulH_4;
mov ymm7_5 mulH_5;
mov ymm7_6 mulH_6;
mov ymm7_7 mulH_7;
mov ymm7_8 mulH_8;
mov ymm7_9 mulH_9;
mov ymm7_a mulH_a;
mov ymm7_b mulH_b;
mov ymm7_c mulH_c;
mov ymm7_d mulH_d;
mov ymm7_e mulH_e;
mov ymm7_f mulH_f;
(* vpsubw %ymm7,%ymm5,%ymm5                        #! PC = 0x555555558afd *)
sub ymm5_0 ymm5_0 ymm7_0;
sub ymm5_1 ymm5_1 ymm7_1;
sub ymm5_2 ymm5_2 ymm7_2;
sub ymm5_3 ymm5_3 ymm7_3;
sub ymm5_4 ymm5_4 ymm7_4;
sub ymm5_5 ymm5_5 ymm7_5;
sub ymm5_6 ymm5_6 ymm7_6;
sub ymm5_7 ymm5_7 ymm7_7;
sub ymm5_8 ymm5_8 ymm7_8;
sub ymm5_9 ymm5_9 ymm7_9;
sub ymm5_a ymm5_a ymm7_a;
sub ymm5_b ymm5_b ymm7_b;
sub ymm5_c ymm5_c ymm7_c;
sub ymm5_d ymm5_d ymm7_d;
sub ymm5_e ymm5_e ymm7_e;
sub ymm5_f ymm5_f ymm7_f;
(* vpmullw %ymm1,%ymm6,%ymm7                       #! PC = 0x555555558b01 *)
smull mulHymm6_0 mulL_0 ymm1_0 ymm6_0;
smull mulHymm6_1 mulL_1 ymm1_1 ymm6_1;
smull mulHymm6_2 mulL_2 ymm1_2 ymm6_2;
smull mulHymm6_3 mulL_3 ymm1_3 ymm6_3;
smull mulHymm6_4 mulL_4 ymm1_4 ymm6_4;
smull mulHymm6_5 mulL_5 ymm1_5 ymm6_5;
smull mulHymm6_6 mulL_6 ymm1_6 ymm6_6;
smull mulHymm6_7 mulL_7 ymm1_7 ymm6_7;
smull mulHymm6_8 mulL_8 ymm1_8 ymm6_8;
smull mulHymm6_9 mulL_9 ymm1_9 ymm6_9;
smull mulHymm6_a mulL_a ymm1_a ymm6_a;
smull mulHymm6_b mulL_b ymm1_b ymm6_b;
smull mulHymm6_c mulL_c ymm1_c ymm6_c;
smull mulHymm6_d mulL_d ymm1_d ymm6_d;
smull mulHymm6_e mulL_e ymm1_e ymm6_e;
smull mulHymm6_f mulL_f ymm1_f ymm6_f;
cast ymm7_0@sint16 mulL_0;
cast ymm7_1@sint16 mulL_1;
cast ymm7_2@sint16 mulL_2;
cast ymm7_3@sint16 mulL_3;
cast ymm7_4@sint16 mulL_4;
cast ymm7_5@sint16 mulL_5;
cast ymm7_6@sint16 mulL_6;
cast ymm7_7@sint16 mulL_7;
cast ymm7_8@sint16 mulL_8;
cast ymm7_9@sint16 mulL_9;
cast ymm7_a@sint16 mulL_a;
cast ymm7_b@sint16 mulL_b;
cast ymm7_c@sint16 mulL_c;
cast ymm7_d@sint16 mulL_d;
cast ymm7_e@sint16 mulL_e;
cast ymm7_f@sint16 mulL_f;
(* vpmulhw %ymm2,%ymm6,%ymm6                       #! PC = 0x555555558b05 *)
smull mulH_0 mulLymm6_0 ymm6_0 ymm2_0;
smull mulH_1 mulLymm6_1 ymm6_1 ymm2_1;
smull mulH_2 mulLymm6_2 ymm6_2 ymm2_2;
smull mulH_3 mulLymm6_3 ymm6_3 ymm2_3;
smull mulH_4 mulLymm6_4 ymm6_4 ymm2_4;
smull mulH_5 mulLymm6_5 ymm6_5 ymm2_5;
smull mulH_6 mulLymm6_6 ymm6_6 ymm2_6;
smull mulH_7 mulLymm6_7 ymm6_7 ymm2_7;
smull mulH_8 mulLymm6_8 ymm6_8 ymm2_8;
smull mulH_9 mulLymm6_9 ymm6_9 ymm2_9;
smull mulH_a mulLymm6_a ymm6_a ymm2_a;
smull mulH_b mulLymm6_b ymm6_b ymm2_b;
smull mulH_c mulLymm6_c ymm6_c ymm2_c;
smull mulH_d mulLymm6_d ymm6_d ymm2_d;
smull mulH_e mulLymm6_e ymm6_e ymm2_e;
smull mulH_f mulLymm6_f ymm6_f ymm2_f;
mov ymm6_0 mulH_0;
mov ymm6_1 mulH_1;
mov ymm6_2 mulH_2;
mov ymm6_3 mulH_3;
mov ymm6_4 mulH_4;
mov ymm6_5 mulH_5;
mov ymm6_6 mulH_6;
mov ymm6_7 mulH_7;
mov ymm6_8 mulH_8;
mov ymm6_9 mulH_9;
mov ymm6_a mulH_a;
mov ymm6_b mulH_b;
mov ymm6_c mulH_c;
mov ymm6_d mulH_d;
mov ymm6_e mulH_e;
mov ymm6_f mulH_f;
(* vpmulhw %ymm0,%ymm7,%ymm7                       #! PC = 0x555555558b09 *)
smull mulH_0 red_0 ymm7_0 ymm0_0;
assert true && red_0 = mulLymm6_0;
assume red_0 = mulLymm6_0 && true;
smull mulH_1 red_1 ymm7_1 ymm0_1;
assert true && red_1 = mulLymm6_1;
assume red_1 = mulLymm6_1 && true;
smull mulH_2 red_2 ymm7_2 ymm0_2;
assert true && red_2 = mulLymm6_2;
assume red_2 = mulLymm6_2 && true;
smull mulH_3 red_3 ymm7_3 ymm0_3;
assert true && red_3 = mulLymm6_3;
assume red_3 = mulLymm6_3 && true;
smull mulH_4 red_4 ymm7_4 ymm0_4;
assert true && red_4 = mulLymm6_4;
assume red_4 = mulLymm6_4 && true;
smull mulH_5 red_5 ymm7_5 ymm0_5;
assert true && red_5 = mulLymm6_5;
assume red_5 = mulLymm6_5 && true;
smull mulH_6 red_6 ymm7_6 ymm0_6;
assert true && red_6 = mulLymm6_6;
assume red_6 = mulLymm6_6 && true;
smull mulH_7 red_7 ymm7_7 ymm0_7;
assert true && red_7 = mulLymm6_7;
assume red_7 = mulLymm6_7 && true;
smull mulH_8 red_8 ymm7_8 ymm0_8;
assert true && red_8 = mulLymm6_8;
assume red_8 = mulLymm6_8 && true;
smull mulH_9 red_9 ymm7_9 ymm0_9;
assert true && red_9 = mulLymm6_9;
assume red_9 = mulLymm6_9 && true;
smull mulH_a red_a ymm7_a ymm0_a;
assert true && red_a = mulLymm6_a;
assume red_a = mulLymm6_a && true;
smull mulH_b red_b ymm7_b ymm0_b;
assert true && red_b = mulLymm6_b;
assume red_b = mulLymm6_b && true;
smull mulH_c red_c ymm7_c ymm0_c;
assert true && red_c = mulLymm6_c;
assume red_c = mulLymm6_c && true;
smull mulH_d red_d ymm7_d ymm0_d;
assert true && red_d = mulLymm6_d;
assume red_d = mulLymm6_d && true;
smull mulH_e red_e ymm7_e ymm0_e;
assert true && red_e = mulLymm6_e;
assume red_e = mulLymm6_e && true;
smull mulH_f red_f ymm7_f ymm0_f;
assert true && red_f = mulLymm6_f;
assume red_f = mulLymm6_f && true;
mov ymm7_0 mulH_0;
mov ymm7_1 mulH_1;
mov ymm7_2 mulH_2;
mov ymm7_3 mulH_3;
mov ymm7_4 mulH_4;
mov ymm7_5 mulH_5;
mov ymm7_6 mulH_6;
mov ymm7_7 mulH_7;
mov ymm7_8 mulH_8;
mov ymm7_9 mulH_9;
mov ymm7_a mulH_a;
mov ymm7_b mulH_b;
mov ymm7_c mulH_c;
mov ymm7_d mulH_d;
mov ymm7_e mulH_e;
mov ymm7_f mulH_f;
(* vpsubw %ymm7,%ymm6,%ymm6                        #! PC = 0x555555558b0d *)
sub ymm6_0 ymm6_0 ymm7_0;
sub ymm6_1 ymm6_1 ymm7_1;
sub ymm6_2 ymm6_2 ymm7_2;
sub ymm6_3 ymm6_3 ymm7_3;
sub ymm6_4 ymm6_4 ymm7_4;
sub ymm6_5 ymm6_5 ymm7_5;
sub ymm6_6 ymm6_6 ymm7_6;
sub ymm6_7 ymm6_7 ymm7_7;
sub ymm6_8 ymm6_8 ymm7_8;
sub ymm6_9 ymm6_9 ymm7_9;
sub ymm6_a ymm6_a ymm7_a;
sub ymm6_b ymm6_b ymm7_b;
sub ymm6_c ymm6_c ymm7_c;
sub ymm6_d ymm6_d ymm7_d;
sub ymm6_e ymm6_e ymm7_e;
sub ymm6_f ymm6_f ymm7_f;
(* vpbroadcastw 0x112(%rdx),%ymm1                  #! EA = L0x555555561232; Value = 0xb85730bc8cf7c126; PC = 0x555555558b11 *)
mov ymm1_0 L0x555555561232;
mov ymm1_1 L0x555555561232;
mov ymm1_2 L0x555555561232;
mov ymm1_3 L0x555555561232;
mov ymm1_4 L0x555555561232;
mov ymm1_5 L0x555555561232;
mov ymm1_6 L0x555555561232;
mov ymm1_7 L0x555555561232;
mov ymm1_8 L0x555555561232;
mov ymm1_9 L0x555555561232;
mov ymm1_a L0x555555561232;
mov ymm1_b L0x555555561232;
mov ymm1_c L0x555555561232;
mov ymm1_d L0x555555561232;
mov ymm1_e L0x555555561232;
mov ymm1_f L0x555555561232;
(* vpbroadcastw 0x312(%rdx),%ymm2                  #! EA = L0x555555561432; Value = 0xfe5708bc12f7fd26; PC = 0x555555558b1a *)
mov ymm2_0 L0x555555561432;
mov ymm2_1 L0x555555561432;
mov ymm2_2 L0x555555561432;
mov ymm2_3 L0x555555561432;
mov ymm2_4 L0x555555561432;
mov ymm2_5 L0x555555561432;
mov ymm2_6 L0x555555561432;
mov ymm2_7 L0x555555561432;
mov ymm2_8 L0x555555561432;
mov ymm2_9 L0x555555561432;
mov ymm2_a L0x555555561432;
mov ymm2_b L0x555555561432;
mov ymm2_c L0x555555561432;
mov ymm2_d L0x555555561432;
mov ymm2_e L0x555555561432;
mov ymm2_f L0x555555561432;
(* vpmullw %ymm1,%ymm10,%ymm7                      #! PC = 0x555555558b23 *)
smull mulHymm10_0 mulL_0 ymm1_0 ymm10_0;
smull mulHymm10_1 mulL_1 ymm1_1 ymm10_1;
smull mulHymm10_2 mulL_2 ymm1_2 ymm10_2;
smull mulHymm10_3 mulL_3 ymm1_3 ymm10_3;
smull mulHymm10_4 mulL_4 ymm1_4 ymm10_4;
smull mulHymm10_5 mulL_5 ymm1_5 ymm10_5;
smull mulHymm10_6 mulL_6 ymm1_6 ymm10_6;
smull mulHymm10_7 mulL_7 ymm1_7 ymm10_7;
smull mulHymm10_8 mulL_8 ymm1_8 ymm10_8;
smull mulHymm10_9 mulL_9 ymm1_9 ymm10_9;
smull mulHymm10_a mulL_a ymm1_a ymm10_a;
smull mulHymm10_b mulL_b ymm1_b ymm10_b;
smull mulHymm10_c mulL_c ymm1_c ymm10_c;
smull mulHymm10_d mulL_d ymm1_d ymm10_d;
smull mulHymm10_e mulL_e ymm1_e ymm10_e;
smull mulHymm10_f mulL_f ymm1_f ymm10_f;
cast ymm7_0@sint16 mulL_0;
cast ymm7_1@sint16 mulL_1;
cast ymm7_2@sint16 mulL_2;
cast ymm7_3@sint16 mulL_3;
cast ymm7_4@sint16 mulL_4;
cast ymm7_5@sint16 mulL_5;
cast ymm7_6@sint16 mulL_6;
cast ymm7_7@sint16 mulL_7;
cast ymm7_8@sint16 mulL_8;
cast ymm7_9@sint16 mulL_9;
cast ymm7_a@sint16 mulL_a;
cast ymm7_b@sint16 mulL_b;
cast ymm7_c@sint16 mulL_c;
cast ymm7_d@sint16 mulL_d;
cast ymm7_e@sint16 mulL_e;
cast ymm7_f@sint16 mulL_f;
(* vpmulhw %ymm2,%ymm10,%ymm10                     #! PC = 0x555555558b27 *)
smull mulH_0 mulLymm10_0 ymm10_0 ymm2_0;
smull mulH_1 mulLymm10_1 ymm10_1 ymm2_1;
smull mulH_2 mulLymm10_2 ymm10_2 ymm2_2;
smull mulH_3 mulLymm10_3 ymm10_3 ymm2_3;
smull mulH_4 mulLymm10_4 ymm10_4 ymm2_4;
smull mulH_5 mulLymm10_5 ymm10_5 ymm2_5;
smull mulH_6 mulLymm10_6 ymm10_6 ymm2_6;
smull mulH_7 mulLymm10_7 ymm10_7 ymm2_7;
smull mulH_8 mulLymm10_8 ymm10_8 ymm2_8;
smull mulH_9 mulLymm10_9 ymm10_9 ymm2_9;
smull mulH_a mulLymm10_a ymm10_a ymm2_a;
smull mulH_b mulLymm10_b ymm10_b ymm2_b;
smull mulH_c mulLymm10_c ymm10_c ymm2_c;
smull mulH_d mulLymm10_d ymm10_d ymm2_d;
smull mulH_e mulLymm10_e ymm10_e ymm2_e;
smull mulH_f mulLymm10_f ymm10_f ymm2_f;
mov ymm10_0 mulH_0;
mov ymm10_1 mulH_1;
mov ymm10_2 mulH_2;
mov ymm10_3 mulH_3;
mov ymm10_4 mulH_4;
mov ymm10_5 mulH_5;
mov ymm10_6 mulH_6;
mov ymm10_7 mulH_7;
mov ymm10_8 mulH_8;
mov ymm10_9 mulH_9;
mov ymm10_a mulH_a;
mov ymm10_b mulH_b;
mov ymm10_c mulH_c;
mov ymm10_d mulH_d;
mov ymm10_e mulH_e;
mov ymm10_f mulH_f;
(* vpmulhw %ymm0,%ymm7,%ymm7                       #! PC = 0x555555558b2b *)
smull mulH_0 red_0 ymm7_0 ymm0_0;
assert true && red_0 = mulLymm10_0;
assume red_0 = mulLymm10_0 && true;
smull mulH_1 red_1 ymm7_1 ymm0_1;
assert true && red_1 = mulLymm10_1;
assume red_1 = mulLymm10_1 && true;
smull mulH_2 red_2 ymm7_2 ymm0_2;
assert true && red_2 = mulLymm10_2;
assume red_2 = mulLymm10_2 && true;
smull mulH_3 red_3 ymm7_3 ymm0_3;
assert true && red_3 = mulLymm10_3;
assume red_3 = mulLymm10_3 && true;
smull mulH_4 red_4 ymm7_4 ymm0_4;
assert true && red_4 = mulLymm10_4;
assume red_4 = mulLymm10_4 && true;
smull mulH_5 red_5 ymm7_5 ymm0_5;
assert true && red_5 = mulLymm10_5;
assume red_5 = mulLymm10_5 && true;
smull mulH_6 red_6 ymm7_6 ymm0_6;
assert true && red_6 = mulLymm10_6;
assume red_6 = mulLymm10_6 && true;
smull mulH_7 red_7 ymm7_7 ymm0_7;
assert true && red_7 = mulLymm10_7;
assume red_7 = mulLymm10_7 && true;
smull mulH_8 red_8 ymm7_8 ymm0_8;
assert true && red_8 = mulLymm10_8;
assume red_8 = mulLymm10_8 && true;
smull mulH_9 red_9 ymm7_9 ymm0_9;
assert true && red_9 = mulLymm10_9;
assume red_9 = mulLymm10_9 && true;
smull mulH_a red_a ymm7_a ymm0_a;
assert true && red_a = mulLymm10_a;
assume red_a = mulLymm10_a && true;
smull mulH_b red_b ymm7_b ymm0_b;
assert true && red_b = mulLymm10_b;
assume red_b = mulLymm10_b && true;
smull mulH_c red_c ymm7_c ymm0_c;
assert true && red_c = mulLymm10_c;
assume red_c = mulLymm10_c && true;
smull mulH_d red_d ymm7_d ymm0_d;
assert true && red_d = mulLymm10_d;
assume red_d = mulLymm10_d && true;
smull mulH_e red_e ymm7_e ymm0_e;
assert true && red_e = mulLymm10_e;
assume red_e = mulLymm10_e && true;
smull mulH_f red_f ymm7_f ymm0_f;
assert true && red_f = mulLymm10_f;
assume red_f = mulLymm10_f && true;
mov ymm7_0 mulH_0;
mov ymm7_1 mulH_1;
mov ymm7_2 mulH_2;
mov ymm7_3 mulH_3;
mov ymm7_4 mulH_4;
mov ymm7_5 mulH_5;
mov ymm7_6 mulH_6;
mov ymm7_7 mulH_7;
mov ymm7_8 mulH_8;
mov ymm7_9 mulH_9;
mov ymm7_a mulH_a;
mov ymm7_b mulH_b;
mov ymm7_c mulH_c;
mov ymm7_d mulH_d;
mov ymm7_e mulH_e;
mov ymm7_f mulH_f;
(* vpsubw %ymm7,%ymm10,%ymm10                      #! PC = 0x555555558b2f *)
sub ymm10_0 ymm10_0 ymm7_0;
sub ymm10_1 ymm10_1 ymm7_1;
sub ymm10_2 ymm10_2 ymm7_2;
sub ymm10_3 ymm10_3 ymm7_3;
sub ymm10_4 ymm10_4 ymm7_4;
sub ymm10_5 ymm10_5 ymm7_5;
sub ymm10_6 ymm10_6 ymm7_6;
sub ymm10_7 ymm10_7 ymm7_7;
sub ymm10_8 ymm10_8 ymm7_8;
sub ymm10_9 ymm10_9 ymm7_9;
sub ymm10_a ymm10_a ymm7_a;
sub ymm10_b ymm10_b ymm7_b;
sub ymm10_c ymm10_c ymm7_c;
sub ymm10_d ymm10_d ymm7_d;
sub ymm10_e ymm10_e ymm7_e;
sub ymm10_f ymm10_f ymm7_f;
(* vpmullw %ymm1,%ymm11,%ymm7                      #! PC = 0x555555558b33 *)
smull mulHymm11_0 mulL_0 ymm1_0 ymm11_0;
smull mulHymm11_1 mulL_1 ymm1_1 ymm11_1;
smull mulHymm11_2 mulL_2 ymm1_2 ymm11_2;
smull mulHymm11_3 mulL_3 ymm1_3 ymm11_3;
smull mulHymm11_4 mulL_4 ymm1_4 ymm11_4;
smull mulHymm11_5 mulL_5 ymm1_5 ymm11_5;
smull mulHymm11_6 mulL_6 ymm1_6 ymm11_6;
smull mulHymm11_7 mulL_7 ymm1_7 ymm11_7;
smull mulHymm11_8 mulL_8 ymm1_8 ymm11_8;
smull mulHymm11_9 mulL_9 ymm1_9 ymm11_9;
smull mulHymm11_a mulL_a ymm1_a ymm11_a;
smull mulHymm11_b mulL_b ymm1_b ymm11_b;
smull mulHymm11_c mulL_c ymm1_c ymm11_c;
smull mulHymm11_d mulL_d ymm1_d ymm11_d;
smull mulHymm11_e mulL_e ymm1_e ymm11_e;
smull mulHymm11_f mulL_f ymm1_f ymm11_f;
cast ymm7_0@sint16 mulL_0;
cast ymm7_1@sint16 mulL_1;
cast ymm7_2@sint16 mulL_2;
cast ymm7_3@sint16 mulL_3;
cast ymm7_4@sint16 mulL_4;
cast ymm7_5@sint16 mulL_5;
cast ymm7_6@sint16 mulL_6;
cast ymm7_7@sint16 mulL_7;
cast ymm7_8@sint16 mulL_8;
cast ymm7_9@sint16 mulL_9;
cast ymm7_a@sint16 mulL_a;
cast ymm7_b@sint16 mulL_b;
cast ymm7_c@sint16 mulL_c;
cast ymm7_d@sint16 mulL_d;
cast ymm7_e@sint16 mulL_e;
cast ymm7_f@sint16 mulL_f;
(* vpmulhw %ymm2,%ymm11,%ymm11                     #! PC = 0x555555558b37 *)
smull mulH_0 mulLymm11_0 ymm11_0 ymm2_0;
smull mulH_1 mulLymm11_1 ymm11_1 ymm2_1;
smull mulH_2 mulLymm11_2 ymm11_2 ymm2_2;
smull mulH_3 mulLymm11_3 ymm11_3 ymm2_3;
smull mulH_4 mulLymm11_4 ymm11_4 ymm2_4;
smull mulH_5 mulLymm11_5 ymm11_5 ymm2_5;
smull mulH_6 mulLymm11_6 ymm11_6 ymm2_6;
smull mulH_7 mulLymm11_7 ymm11_7 ymm2_7;
smull mulH_8 mulLymm11_8 ymm11_8 ymm2_8;
smull mulH_9 mulLymm11_9 ymm11_9 ymm2_9;
smull mulH_a mulLymm11_a ymm11_a ymm2_a;
smull mulH_b mulLymm11_b ymm11_b ymm2_b;
smull mulH_c mulLymm11_c ymm11_c ymm2_c;
smull mulH_d mulLymm11_d ymm11_d ymm2_d;
smull mulH_e mulLymm11_e ymm11_e ymm2_e;
smull mulH_f mulLymm11_f ymm11_f ymm2_f;
mov ymm11_0 mulH_0;
mov ymm11_1 mulH_1;
mov ymm11_2 mulH_2;
mov ymm11_3 mulH_3;
mov ymm11_4 mulH_4;
mov ymm11_5 mulH_5;
mov ymm11_6 mulH_6;
mov ymm11_7 mulH_7;
mov ymm11_8 mulH_8;
mov ymm11_9 mulH_9;
mov ymm11_a mulH_a;
mov ymm11_b mulH_b;
mov ymm11_c mulH_c;
mov ymm11_d mulH_d;
mov ymm11_e mulH_e;
mov ymm11_f mulH_f;
(* vpmulhw %ymm0,%ymm7,%ymm7                       #! PC = 0x555555558b3b *)
smull mulH_0 red_0 ymm7_0 ymm0_0;
assert true && red_0 = mulLymm11_0;
assume red_0 = mulLymm11_0 && true;
smull mulH_1 red_1 ymm7_1 ymm0_1;
assert true && red_1 = mulLymm11_1;
assume red_1 = mulLymm11_1 && true;
smull mulH_2 red_2 ymm7_2 ymm0_2;
assert true && red_2 = mulLymm11_2;
assume red_2 = mulLymm11_2 && true;
smull mulH_3 red_3 ymm7_3 ymm0_3;
assert true && red_3 = mulLymm11_3;
assume red_3 = mulLymm11_3 && true;
smull mulH_4 red_4 ymm7_4 ymm0_4;
assert true && red_4 = mulLymm11_4;
assume red_4 = mulLymm11_4 && true;
smull mulH_5 red_5 ymm7_5 ymm0_5;
assert true && red_5 = mulLymm11_5;
assume red_5 = mulLymm11_5 && true;
smull mulH_6 red_6 ymm7_6 ymm0_6;
assert true && red_6 = mulLymm11_6;
assume red_6 = mulLymm11_6 && true;
smull mulH_7 red_7 ymm7_7 ymm0_7;
assert true && red_7 = mulLymm11_7;
assume red_7 = mulLymm11_7 && true;
smull mulH_8 red_8 ymm7_8 ymm0_8;
assert true && red_8 = mulLymm11_8;
assume red_8 = mulLymm11_8 && true;
smull mulH_9 red_9 ymm7_9 ymm0_9;
assert true && red_9 = mulLymm11_9;
assume red_9 = mulLymm11_9 && true;
smull mulH_a red_a ymm7_a ymm0_a;
assert true && red_a = mulLymm11_a;
assume red_a = mulLymm11_a && true;
smull mulH_b red_b ymm7_b ymm0_b;
assert true && red_b = mulLymm11_b;
assume red_b = mulLymm11_b && true;
smull mulH_c red_c ymm7_c ymm0_c;
assert true && red_c = mulLymm11_c;
assume red_c = mulLymm11_c && true;
smull mulH_d red_d ymm7_d ymm0_d;
assert true && red_d = mulLymm11_d;
assume red_d = mulLymm11_d && true;
smull mulH_e red_e ymm7_e ymm0_e;
assert true && red_e = mulLymm11_e;
assume red_e = mulLymm11_e && true;
smull mulH_f red_f ymm7_f ymm0_f;
assert true && red_f = mulLymm11_f;
assume red_f = mulLymm11_f && true;
mov ymm7_0 mulH_0;
mov ymm7_1 mulH_1;
mov ymm7_2 mulH_2;
mov ymm7_3 mulH_3;
mov ymm7_4 mulH_4;
mov ymm7_5 mulH_5;
mov ymm7_6 mulH_6;
mov ymm7_7 mulH_7;
mov ymm7_8 mulH_8;
mov ymm7_9 mulH_9;
mov ymm7_a mulH_a;
mov ymm7_b mulH_b;
mov ymm7_c mulH_c;
mov ymm7_d mulH_d;
mov ymm7_e mulH_e;
mov ymm7_f mulH_f;
(* vpsubw %ymm7,%ymm11,%ymm11                      #! PC = 0x555555558b3f *)
sub ymm11_0 ymm11_0 ymm7_0;
sub ymm11_1 ymm11_1 ymm7_1;
sub ymm11_2 ymm11_2 ymm7_2;
sub ymm11_3 ymm11_3 ymm7_3;
sub ymm11_4 ymm11_4 ymm7_4;
sub ymm11_5 ymm11_5 ymm7_5;
sub ymm11_6 ymm11_6 ymm7_6;
sub ymm11_7 ymm11_7 ymm7_7;
sub ymm11_8 ymm11_8 ymm7_8;
sub ymm11_9 ymm11_9 ymm7_9;
sub ymm11_a ymm11_a ymm7_a;
sub ymm11_b ymm11_b ymm7_b;
sub ymm11_c ymm11_c ymm7_c;
sub ymm11_d ymm11_d ymm7_d;
sub ymm11_e ymm11_e ymm7_e;
sub ymm11_f ymm11_f ymm7_f;
(* vpaddw %ymm5,%ymm3,%ymm7                        #! PC = 0x555555558b43 *)
add ymm7_0 ymm3_0 ymm5_0;
add ymm7_1 ymm3_1 ymm5_1;
add ymm7_2 ymm3_2 ymm5_2;
add ymm7_3 ymm3_3 ymm5_3;
add ymm7_4 ymm3_4 ymm5_4;
add ymm7_5 ymm3_5 ymm5_5;
add ymm7_6 ymm3_6 ymm5_6;
add ymm7_7 ymm3_7 ymm5_7;
add ymm7_8 ymm3_8 ymm5_8;
add ymm7_9 ymm3_9 ymm5_9;
add ymm7_a ymm3_a ymm5_a;
add ymm7_b ymm3_b ymm5_b;
add ymm7_c ymm3_c ymm5_c;
add ymm7_d ymm3_d ymm5_d;
add ymm7_e ymm3_e ymm5_e;
add ymm7_f ymm3_f ymm5_f;
(* vpsubw %ymm5,%ymm3,%ymm5                        #! PC = 0x555555558b47 *)
sub ymm5_0 ymm3_0 ymm5_0;
sub ymm5_1 ymm3_1 ymm5_1;
sub ymm5_2 ymm3_2 ymm5_2;
sub ymm5_3 ymm3_3 ymm5_3;
sub ymm5_4 ymm3_4 ymm5_4;
sub ymm5_5 ymm3_5 ymm5_5;
sub ymm5_6 ymm3_6 ymm5_6;
sub ymm5_7 ymm3_7 ymm5_7;
sub ymm5_8 ymm3_8 ymm5_8;
sub ymm5_9 ymm3_9 ymm5_9;
sub ymm5_a ymm3_a ymm5_a;
sub ymm5_b ymm3_b ymm5_b;
sub ymm5_c ymm3_c ymm5_c;
sub ymm5_d ymm3_d ymm5_d;
sub ymm5_e ymm3_e ymm5_e;
sub ymm5_f ymm3_f ymm5_f;
(* vpaddw %ymm6,%ymm4,%ymm3                        #! PC = 0x555555558b4b *)
add ymm3_0 ymm4_0 ymm6_0;
add ymm3_1 ymm4_1 ymm6_1;
add ymm3_2 ymm4_2 ymm6_2;
add ymm3_3 ymm4_3 ymm6_3;
add ymm3_4 ymm4_4 ymm6_4;
add ymm3_5 ymm4_5 ymm6_5;
add ymm3_6 ymm4_6 ymm6_6;
add ymm3_7 ymm4_7 ymm6_7;
add ymm3_8 ymm4_8 ymm6_8;
add ymm3_9 ymm4_9 ymm6_9;
add ymm3_a ymm4_a ymm6_a;
add ymm3_b ymm4_b ymm6_b;
add ymm3_c ymm4_c ymm6_c;
add ymm3_d ymm4_d ymm6_d;
add ymm3_e ymm4_e ymm6_e;
add ymm3_f ymm4_f ymm6_f;
(* vpsubw %ymm6,%ymm4,%ymm6                        #! PC = 0x555555558b4f *)
sub ymm6_0 ymm4_0 ymm6_0;
sub ymm6_1 ymm4_1 ymm6_1;
sub ymm6_2 ymm4_2 ymm6_2;
sub ymm6_3 ymm4_3 ymm6_3;
sub ymm6_4 ymm4_4 ymm6_4;
sub ymm6_5 ymm4_5 ymm6_5;
sub ymm6_6 ymm4_6 ymm6_6;
sub ymm6_7 ymm4_7 ymm6_7;
sub ymm6_8 ymm4_8 ymm6_8;
sub ymm6_9 ymm4_9 ymm6_9;
sub ymm6_a ymm4_a ymm6_a;
sub ymm6_b ymm4_b ymm6_b;
sub ymm6_c ymm4_c ymm6_c;
sub ymm6_d ymm4_d ymm6_d;
sub ymm6_e ymm4_e ymm6_e;
sub ymm6_f ymm4_f ymm6_f;
(* vpaddw %ymm10,%ymm8,%ymm4                       #! PC = 0x555555558b53 *)
add ymm4_0 ymm8_0 ymm10_0;
add ymm4_1 ymm8_1 ymm10_1;
add ymm4_2 ymm8_2 ymm10_2;
add ymm4_3 ymm8_3 ymm10_3;
add ymm4_4 ymm8_4 ymm10_4;
add ymm4_5 ymm8_5 ymm10_5;
add ymm4_6 ymm8_6 ymm10_6;
add ymm4_7 ymm8_7 ymm10_7;
add ymm4_8 ymm8_8 ymm10_8;
add ymm4_9 ymm8_9 ymm10_9;
add ymm4_a ymm8_a ymm10_a;
add ymm4_b ymm8_b ymm10_b;
add ymm4_c ymm8_c ymm10_c;
add ymm4_d ymm8_d ymm10_d;
add ymm4_e ymm8_e ymm10_e;
add ymm4_f ymm8_f ymm10_f;
(* vpsubw %ymm10,%ymm8,%ymm10                      #! PC = 0x555555558b58 *)
sub ymm10_0 ymm8_0 ymm10_0;
sub ymm10_1 ymm8_1 ymm10_1;
sub ymm10_2 ymm8_2 ymm10_2;
sub ymm10_3 ymm8_3 ymm10_3;
sub ymm10_4 ymm8_4 ymm10_4;
sub ymm10_5 ymm8_5 ymm10_5;
sub ymm10_6 ymm8_6 ymm10_6;
sub ymm10_7 ymm8_7 ymm10_7;
sub ymm10_8 ymm8_8 ymm10_8;
sub ymm10_9 ymm8_9 ymm10_9;
sub ymm10_a ymm8_a ymm10_a;
sub ymm10_b ymm8_b ymm10_b;
sub ymm10_c ymm8_c ymm10_c;
sub ymm10_d ymm8_d ymm10_d;
sub ymm10_e ymm8_e ymm10_e;
sub ymm10_f ymm8_f ymm10_f;
(* vpaddw %ymm11,%ymm9,%ymm8                       #! PC = 0x555555558b5d *)
add ymm8_0 ymm9_0 ymm11_0;
add ymm8_1 ymm9_1 ymm11_1;
add ymm8_2 ymm9_2 ymm11_2;
add ymm8_3 ymm9_3 ymm11_3;
add ymm8_4 ymm9_4 ymm11_4;
add ymm8_5 ymm9_5 ymm11_5;
add ymm8_6 ymm9_6 ymm11_6;
add ymm8_7 ymm9_7 ymm11_7;
add ymm8_8 ymm9_8 ymm11_8;
add ymm8_9 ymm9_9 ymm11_9;
add ymm8_a ymm9_a ymm11_a;
add ymm8_b ymm9_b ymm11_b;
add ymm8_c ymm9_c ymm11_c;
add ymm8_d ymm9_d ymm11_d;
add ymm8_e ymm9_e ymm11_e;
add ymm8_f ymm9_f ymm11_f;
(* vpsubw %ymm11,%ymm9,%ymm11                      #! PC = 0x555555558b62 *)
sub ymm11_0 ymm9_0 ymm11_0;
sub ymm11_1 ymm9_1 ymm11_1;
sub ymm11_2 ymm9_2 ymm11_2;
sub ymm11_3 ymm9_3 ymm11_3;
sub ymm11_4 ymm9_4 ymm11_4;
sub ymm11_5 ymm9_5 ymm11_5;
sub ymm11_6 ymm9_6 ymm11_6;
sub ymm11_7 ymm9_7 ymm11_7;
sub ymm11_8 ymm9_8 ymm11_8;
sub ymm11_9 ymm9_9 ymm11_9;
sub ymm11_a ymm9_a ymm11_a;
sub ymm11_b ymm9_b ymm11_b;
sub ymm11_c ymm9_c ymm11_c;
sub ymm11_d ymm9_d ymm11_d;
sub ymm11_e ymm9_e ymm11_e;
sub ymm11_f ymm9_f ymm11_f;
(* vpbroadcastw 0x120(%rdx),%ymm1                  #! EA = L0x555555561240; Value = 0xee3d92395a10450b; PC = 0x555555558b67 *)
mov ymm1_0 L0x555555561240;
mov ymm1_1 L0x555555561240;
mov ymm1_2 L0x555555561240;
mov ymm1_3 L0x555555561240;
mov ymm1_4 L0x555555561240;
mov ymm1_5 L0x555555561240;
mov ymm1_6 L0x555555561240;
mov ymm1_7 L0x555555561240;
mov ymm1_8 L0x555555561240;
mov ymm1_9 L0x555555561240;
mov ymm1_a L0x555555561240;
mov ymm1_b L0x555555561240;
mov ymm1_c L0x555555561240;
mov ymm1_d L0x555555561240;
mov ymm1_e L0x555555561240;
mov ymm1_f L0x555555561240;
(* vpbroadcastw 0x320(%rdx),%ymm2                  #! EA = L0x555555561440; Value = 0xf03dec39fa10130b; PC = 0x555555558b70 *)
mov ymm2_0 L0x555555561440;
mov ymm2_1 L0x555555561440;
mov ymm2_2 L0x555555561440;
mov ymm2_3 L0x555555561440;
mov ymm2_4 L0x555555561440;
mov ymm2_5 L0x555555561440;
mov ymm2_6 L0x555555561440;
mov ymm2_7 L0x555555561440;
mov ymm2_8 L0x555555561440;
mov ymm2_9 L0x555555561440;
mov ymm2_a L0x555555561440;
mov ymm2_b L0x555555561440;
mov ymm2_c L0x555555561440;
mov ymm2_d L0x555555561440;
mov ymm2_e L0x555555561440;
mov ymm2_f L0x555555561440;
(* vpmullw %ymm1,%ymm3,%ymm9                       #! PC = 0x555555558b79 *)
smull mulHymm3_0 mulL_0 ymm1_0 ymm3_0;
smull mulHymm3_1 mulL_1 ymm1_1 ymm3_1;
smull mulHymm3_2 mulL_2 ymm1_2 ymm3_2;
smull mulHymm3_3 mulL_3 ymm1_3 ymm3_3;
smull mulHymm3_4 mulL_4 ymm1_4 ymm3_4;
smull mulHymm3_5 mulL_5 ymm1_5 ymm3_5;
smull mulHymm3_6 mulL_6 ymm1_6 ymm3_6;
smull mulHymm3_7 mulL_7 ymm1_7 ymm3_7;
smull mulHymm3_8 mulL_8 ymm1_8 ymm3_8;
smull mulHymm3_9 mulL_9 ymm1_9 ymm3_9;
smull mulHymm3_a mulL_a ymm1_a ymm3_a;
smull mulHymm3_b mulL_b ymm1_b ymm3_b;
smull mulHymm3_c mulL_c ymm1_c ymm3_c;
smull mulHymm3_d mulL_d ymm1_d ymm3_d;
smull mulHymm3_e mulL_e ymm1_e ymm3_e;
smull mulHymm3_f mulL_f ymm1_f ymm3_f;
cast ymm9_0@sint16 mulL_0;
cast ymm9_1@sint16 mulL_1;
cast ymm9_2@sint16 mulL_2;
cast ymm9_3@sint16 mulL_3;
cast ymm9_4@sint16 mulL_4;
cast ymm9_5@sint16 mulL_5;
cast ymm9_6@sint16 mulL_6;
cast ymm9_7@sint16 mulL_7;
cast ymm9_8@sint16 mulL_8;
cast ymm9_9@sint16 mulL_9;
cast ymm9_a@sint16 mulL_a;
cast ymm9_b@sint16 mulL_b;
cast ymm9_c@sint16 mulL_c;
cast ymm9_d@sint16 mulL_d;
cast ymm9_e@sint16 mulL_e;
cast ymm9_f@sint16 mulL_f;
(* vpmulhw %ymm2,%ymm3,%ymm3                       #! PC = 0x555555558b7d *)
smull mulH_0 mulLymm3_0 ymm3_0 ymm2_0;
smull mulH_1 mulLymm3_1 ymm3_1 ymm2_1;
smull mulH_2 mulLymm3_2 ymm3_2 ymm2_2;
smull mulH_3 mulLymm3_3 ymm3_3 ymm2_3;
smull mulH_4 mulLymm3_4 ymm3_4 ymm2_4;
smull mulH_5 mulLymm3_5 ymm3_5 ymm2_5;
smull mulH_6 mulLymm3_6 ymm3_6 ymm2_6;
smull mulH_7 mulLymm3_7 ymm3_7 ymm2_7;
smull mulH_8 mulLymm3_8 ymm3_8 ymm2_8;
smull mulH_9 mulLymm3_9 ymm3_9 ymm2_9;
smull mulH_a mulLymm3_a ymm3_a ymm2_a;
smull mulH_b mulLymm3_b ymm3_b ymm2_b;
smull mulH_c mulLymm3_c ymm3_c ymm2_c;
smull mulH_d mulLymm3_d ymm3_d ymm2_d;
smull mulH_e mulLymm3_e ymm3_e ymm2_e;
smull mulH_f mulLymm3_f ymm3_f ymm2_f;
mov ymm3_0 mulH_0;
mov ymm3_1 mulH_1;
mov ymm3_2 mulH_2;
mov ymm3_3 mulH_3;
mov ymm3_4 mulH_4;
mov ymm3_5 mulH_5;
mov ymm3_6 mulH_6;
mov ymm3_7 mulH_7;
mov ymm3_8 mulH_8;
mov ymm3_9 mulH_9;
mov ymm3_a mulH_a;
mov ymm3_b mulH_b;
mov ymm3_c mulH_c;
mov ymm3_d mulH_d;
mov ymm3_e mulH_e;
mov ymm3_f mulH_f;
(* vpmulhw %ymm0,%ymm9,%ymm9                       #! PC = 0x555555558b81 *)
smull mulH_0 red_0 ymm9_0 ymm0_0;
assert true && red_0 = mulLymm3_0;
assume red_0 = mulLymm3_0 && true;
smull mulH_1 red_1 ymm9_1 ymm0_1;
assert true && red_1 = mulLymm3_1;
assume red_1 = mulLymm3_1 && true;
smull mulH_2 red_2 ymm9_2 ymm0_2;
assert true && red_2 = mulLymm3_2;
assume red_2 = mulLymm3_2 && true;
smull mulH_3 red_3 ymm9_3 ymm0_3;
assert true && red_3 = mulLymm3_3;
assume red_3 = mulLymm3_3 && true;
smull mulH_4 red_4 ymm9_4 ymm0_4;
assert true && red_4 = mulLymm3_4;
assume red_4 = mulLymm3_4 && true;
smull mulH_5 red_5 ymm9_5 ymm0_5;
assert true && red_5 = mulLymm3_5;
assume red_5 = mulLymm3_5 && true;
smull mulH_6 red_6 ymm9_6 ymm0_6;
assert true && red_6 = mulLymm3_6;
assume red_6 = mulLymm3_6 && true;
smull mulH_7 red_7 ymm9_7 ymm0_7;
assert true && red_7 = mulLymm3_7;
assume red_7 = mulLymm3_7 && true;
smull mulH_8 red_8 ymm9_8 ymm0_8;
assert true && red_8 = mulLymm3_8;
assume red_8 = mulLymm3_8 && true;
smull mulH_9 red_9 ymm9_9 ymm0_9;
assert true && red_9 = mulLymm3_9;
assume red_9 = mulLymm3_9 && true;
smull mulH_a red_a ymm9_a ymm0_a;
assert true && red_a = mulLymm3_a;
assume red_a = mulLymm3_a && true;
smull mulH_b red_b ymm9_b ymm0_b;
assert true && red_b = mulLymm3_b;
assume red_b = mulLymm3_b && true;
smull mulH_c red_c ymm9_c ymm0_c;
assert true && red_c = mulLymm3_c;
assume red_c = mulLymm3_c && true;
smull mulH_d red_d ymm9_d ymm0_d;
assert true && red_d = mulLymm3_d;
assume red_d = mulLymm3_d && true;
smull mulH_e red_e ymm9_e ymm0_e;
assert true && red_e = mulLymm3_e;
assume red_e = mulLymm3_e && true;
smull mulH_f red_f ymm9_f ymm0_f;
assert true && red_f = mulLymm3_f;
assume red_f = mulLymm3_f && true;
mov ymm9_0 mulH_0;
mov ymm9_1 mulH_1;
mov ymm9_2 mulH_2;
mov ymm9_3 mulH_3;
mov ymm9_4 mulH_4;
mov ymm9_5 mulH_5;
mov ymm9_6 mulH_6;
mov ymm9_7 mulH_7;
mov ymm9_8 mulH_8;
mov ymm9_9 mulH_9;
mov ymm9_a mulH_a;
mov ymm9_b mulH_b;
mov ymm9_c mulH_c;
mov ymm9_d mulH_d;
mov ymm9_e mulH_e;
mov ymm9_f mulH_f;
(* vpsubw %ymm9,%ymm3,%ymm3                        #! PC = 0x555555558b85 *)
sub ymm3_0 ymm3_0 ymm9_0;
sub ymm3_1 ymm3_1 ymm9_1;
sub ymm3_2 ymm3_2 ymm9_2;
sub ymm3_3 ymm3_3 ymm9_3;
sub ymm3_4 ymm3_4 ymm9_4;
sub ymm3_5 ymm3_5 ymm9_5;
sub ymm3_6 ymm3_6 ymm9_6;
sub ymm3_7 ymm3_7 ymm9_7;
sub ymm3_8 ymm3_8 ymm9_8;
sub ymm3_9 ymm3_9 ymm9_9;
sub ymm3_a ymm3_a ymm9_a;
sub ymm3_b ymm3_b ymm9_b;
sub ymm3_c ymm3_c ymm9_c;
sub ymm3_d ymm3_d ymm9_d;
sub ymm3_e ymm3_e ymm9_e;
sub ymm3_f ymm3_f ymm9_f;
(* vpbroadcastw 0x122(%rdx),%ymm1                  #! EA = L0x555555561242; Value = 0x63c7ee3d92395a10; PC = 0x555555558b8a *)
mov ymm1_0 L0x555555561242;
mov ymm1_1 L0x555555561242;
mov ymm1_2 L0x555555561242;
mov ymm1_3 L0x555555561242;
mov ymm1_4 L0x555555561242;
mov ymm1_5 L0x555555561242;
mov ymm1_6 L0x555555561242;
mov ymm1_7 L0x555555561242;
mov ymm1_8 L0x555555561242;
mov ymm1_9 L0x555555561242;
mov ymm1_a L0x555555561242;
mov ymm1_b L0x555555561242;
mov ymm1_c L0x555555561242;
mov ymm1_d L0x555555561242;
mov ymm1_e L0x555555561242;
mov ymm1_f L0x555555561242;
(* vpbroadcastw 0x322(%rdx),%ymm2                  #! EA = L0x555555561442; Value = 0x09c7f03dec39fa10; PC = 0x555555558b93 *)
mov ymm2_0 L0x555555561442;
mov ymm2_1 L0x555555561442;
mov ymm2_2 L0x555555561442;
mov ymm2_3 L0x555555561442;
mov ymm2_4 L0x555555561442;
mov ymm2_5 L0x555555561442;
mov ymm2_6 L0x555555561442;
mov ymm2_7 L0x555555561442;
mov ymm2_8 L0x555555561442;
mov ymm2_9 L0x555555561442;
mov ymm2_a L0x555555561442;
mov ymm2_b L0x555555561442;
mov ymm2_c L0x555555561442;
mov ymm2_d L0x555555561442;
mov ymm2_e L0x555555561442;
mov ymm2_f L0x555555561442;
(* vpmullw %ymm1,%ymm6,%ymm9                       #! PC = 0x555555558b9c *)
smull mulHymm6_0 mulL_0 ymm1_0 ymm6_0;
smull mulHymm6_1 mulL_1 ymm1_1 ymm6_1;
smull mulHymm6_2 mulL_2 ymm1_2 ymm6_2;
smull mulHymm6_3 mulL_3 ymm1_3 ymm6_3;
smull mulHymm6_4 mulL_4 ymm1_4 ymm6_4;
smull mulHymm6_5 mulL_5 ymm1_5 ymm6_5;
smull mulHymm6_6 mulL_6 ymm1_6 ymm6_6;
smull mulHymm6_7 mulL_7 ymm1_7 ymm6_7;
smull mulHymm6_8 mulL_8 ymm1_8 ymm6_8;
smull mulHymm6_9 mulL_9 ymm1_9 ymm6_9;
smull mulHymm6_a mulL_a ymm1_a ymm6_a;
smull mulHymm6_b mulL_b ymm1_b ymm6_b;
smull mulHymm6_c mulL_c ymm1_c ymm6_c;
smull mulHymm6_d mulL_d ymm1_d ymm6_d;
smull mulHymm6_e mulL_e ymm1_e ymm6_e;
smull mulHymm6_f mulL_f ymm1_f ymm6_f;
cast ymm9_0@sint16 mulL_0;
cast ymm9_1@sint16 mulL_1;
cast ymm9_2@sint16 mulL_2;
cast ymm9_3@sint16 mulL_3;
cast ymm9_4@sint16 mulL_4;
cast ymm9_5@sint16 mulL_5;
cast ymm9_6@sint16 mulL_6;
cast ymm9_7@sint16 mulL_7;
cast ymm9_8@sint16 mulL_8;
cast ymm9_9@sint16 mulL_9;
cast ymm9_a@sint16 mulL_a;
cast ymm9_b@sint16 mulL_b;
cast ymm9_c@sint16 mulL_c;
cast ymm9_d@sint16 mulL_d;
cast ymm9_e@sint16 mulL_e;
cast ymm9_f@sint16 mulL_f;
(* vpmulhw %ymm2,%ymm6,%ymm6                       #! PC = 0x555555558ba0 *)
smull mulH_0 mulLymm6_0 ymm6_0 ymm2_0;
smull mulH_1 mulLymm6_1 ymm6_1 ymm2_1;
smull mulH_2 mulLymm6_2 ymm6_2 ymm2_2;
smull mulH_3 mulLymm6_3 ymm6_3 ymm2_3;
smull mulH_4 mulLymm6_4 ymm6_4 ymm2_4;
smull mulH_5 mulLymm6_5 ymm6_5 ymm2_5;
smull mulH_6 mulLymm6_6 ymm6_6 ymm2_6;
smull mulH_7 mulLymm6_7 ymm6_7 ymm2_7;
smull mulH_8 mulLymm6_8 ymm6_8 ymm2_8;
smull mulH_9 mulLymm6_9 ymm6_9 ymm2_9;
smull mulH_a mulLymm6_a ymm6_a ymm2_a;
smull mulH_b mulLymm6_b ymm6_b ymm2_b;
smull mulH_c mulLymm6_c ymm6_c ymm2_c;
smull mulH_d mulLymm6_d ymm6_d ymm2_d;
smull mulH_e mulLymm6_e ymm6_e ymm2_e;
smull mulH_f mulLymm6_f ymm6_f ymm2_f;
mov ymm6_0 mulH_0;
mov ymm6_1 mulH_1;
mov ymm6_2 mulH_2;
mov ymm6_3 mulH_3;
mov ymm6_4 mulH_4;
mov ymm6_5 mulH_5;
mov ymm6_6 mulH_6;
mov ymm6_7 mulH_7;
mov ymm6_8 mulH_8;
mov ymm6_9 mulH_9;
mov ymm6_a mulH_a;
mov ymm6_b mulH_b;
mov ymm6_c mulH_c;
mov ymm6_d mulH_d;
mov ymm6_e mulH_e;
mov ymm6_f mulH_f;
(* vpmulhw %ymm0,%ymm9,%ymm9                       #! PC = 0x555555558ba4 *)
smull mulH_0 red_0 ymm9_0 ymm0_0;
assert true && red_0 = mulLymm6_0;
assume red_0 = mulLymm6_0 && true;
smull mulH_1 red_1 ymm9_1 ymm0_1;
assert true && red_1 = mulLymm6_1;
assume red_1 = mulLymm6_1 && true;
smull mulH_2 red_2 ymm9_2 ymm0_2;
assert true && red_2 = mulLymm6_2;
assume red_2 = mulLymm6_2 && true;
smull mulH_3 red_3 ymm9_3 ymm0_3;
assert true && red_3 = mulLymm6_3;
assume red_3 = mulLymm6_3 && true;
smull mulH_4 red_4 ymm9_4 ymm0_4;
assert true && red_4 = mulLymm6_4;
assume red_4 = mulLymm6_4 && true;
smull mulH_5 red_5 ymm9_5 ymm0_5;
assert true && red_5 = mulLymm6_5;
assume red_5 = mulLymm6_5 && true;
smull mulH_6 red_6 ymm9_6 ymm0_6;
assert true && red_6 = mulLymm6_6;
assume red_6 = mulLymm6_6 && true;
smull mulH_7 red_7 ymm9_7 ymm0_7;
assert true && red_7 = mulLymm6_7;
assume red_7 = mulLymm6_7 && true;
smull mulH_8 red_8 ymm9_8 ymm0_8;
assert true && red_8 = mulLymm6_8;
assume red_8 = mulLymm6_8 && true;
smull mulH_9 red_9 ymm9_9 ymm0_9;
assert true && red_9 = mulLymm6_9;
assume red_9 = mulLymm6_9 && true;
smull mulH_a red_a ymm9_a ymm0_a;
assert true && red_a = mulLymm6_a;
assume red_a = mulLymm6_a && true;
smull mulH_b red_b ymm9_b ymm0_b;
assert true && red_b = mulLymm6_b;
assume red_b = mulLymm6_b && true;
smull mulH_c red_c ymm9_c ymm0_c;
assert true && red_c = mulLymm6_c;
assume red_c = mulLymm6_c && true;
smull mulH_d red_d ymm9_d ymm0_d;
assert true && red_d = mulLymm6_d;
assume red_d = mulLymm6_d && true;
smull mulH_e red_e ymm9_e ymm0_e;
assert true && red_e = mulLymm6_e;
assume red_e = mulLymm6_e && true;
smull mulH_f red_f ymm9_f ymm0_f;
assert true && red_f = mulLymm6_f;
assume red_f = mulLymm6_f && true;
mov ymm9_0 mulH_0;
mov ymm9_1 mulH_1;
mov ymm9_2 mulH_2;
mov ymm9_3 mulH_3;
mov ymm9_4 mulH_4;
mov ymm9_5 mulH_5;
mov ymm9_6 mulH_6;
mov ymm9_7 mulH_7;
mov ymm9_8 mulH_8;
mov ymm9_9 mulH_9;
mov ymm9_a mulH_a;
mov ymm9_b mulH_b;
mov ymm9_c mulH_c;
mov ymm9_d mulH_d;
mov ymm9_e mulH_e;
mov ymm9_f mulH_f;
(* vpsubw %ymm9,%ymm6,%ymm6                        #! PC = 0x555555558ba8 *)
sub ymm6_0 ymm6_0 ymm9_0;
sub ymm6_1 ymm6_1 ymm9_1;
sub ymm6_2 ymm6_2 ymm9_2;
sub ymm6_3 ymm6_3 ymm9_3;
sub ymm6_4 ymm6_4 ymm9_4;
sub ymm6_5 ymm6_5 ymm9_5;
sub ymm6_6 ymm6_6 ymm9_6;
sub ymm6_7 ymm6_7 ymm9_7;
sub ymm6_8 ymm6_8 ymm9_8;
sub ymm6_9 ymm6_9 ymm9_9;
sub ymm6_a ymm6_a ymm9_a;
sub ymm6_b ymm6_b ymm9_b;
sub ymm6_c ymm6_c ymm9_c;
sub ymm6_d ymm6_d ymm9_d;
sub ymm6_e ymm6_e ymm9_e;
sub ymm6_f ymm6_f ymm9_f;
(* vpbroadcastw 0x124(%rdx),%ymm1                  #! EA = L0x555555561244; Value = 0x679663c7ee3d9239; PC = 0x555555558bad *)
mov ymm1_0 L0x555555561244;
mov ymm1_1 L0x555555561244;
mov ymm1_2 L0x555555561244;
mov ymm1_3 L0x555555561244;
mov ymm1_4 L0x555555561244;
mov ymm1_5 L0x555555561244;
mov ymm1_6 L0x555555561244;
mov ymm1_7 L0x555555561244;
mov ymm1_8 L0x555555561244;
mov ymm1_9 L0x555555561244;
mov ymm1_a L0x555555561244;
mov ymm1_b L0x555555561244;
mov ymm1_c L0x555555561244;
mov ymm1_d L0x555555561244;
mov ymm1_e L0x555555561244;
mov ymm1_f L0x555555561244;
(* vpbroadcastw 0x324(%rdx),%ymm2                  #! EA = L0x555555561444; Value = 0x039609c7f03dec39; PC = 0x555555558bb6 *)
mov ymm2_0 L0x555555561444;
mov ymm2_1 L0x555555561444;
mov ymm2_2 L0x555555561444;
mov ymm2_3 L0x555555561444;
mov ymm2_4 L0x555555561444;
mov ymm2_5 L0x555555561444;
mov ymm2_6 L0x555555561444;
mov ymm2_7 L0x555555561444;
mov ymm2_8 L0x555555561444;
mov ymm2_9 L0x555555561444;
mov ymm2_a L0x555555561444;
mov ymm2_b L0x555555561444;
mov ymm2_c L0x555555561444;
mov ymm2_d L0x555555561444;
mov ymm2_e L0x555555561444;
mov ymm2_f L0x555555561444;
(* vpmullw %ymm1,%ymm8,%ymm9                       #! PC = 0x555555558bbf *)
smull mulHymm8_0 mulL_0 ymm1_0 ymm8_0;
smull mulHymm8_1 mulL_1 ymm1_1 ymm8_1;
smull mulHymm8_2 mulL_2 ymm1_2 ymm8_2;
smull mulHymm8_3 mulL_3 ymm1_3 ymm8_3;
smull mulHymm8_4 mulL_4 ymm1_4 ymm8_4;
smull mulHymm8_5 mulL_5 ymm1_5 ymm8_5;
smull mulHymm8_6 mulL_6 ymm1_6 ymm8_6;
smull mulHymm8_7 mulL_7 ymm1_7 ymm8_7;
smull mulHymm8_8 mulL_8 ymm1_8 ymm8_8;
smull mulHymm8_9 mulL_9 ymm1_9 ymm8_9;
smull mulHymm8_a mulL_a ymm1_a ymm8_a;
smull mulHymm8_b mulL_b ymm1_b ymm8_b;
smull mulHymm8_c mulL_c ymm1_c ymm8_c;
smull mulHymm8_d mulL_d ymm1_d ymm8_d;
smull mulHymm8_e mulL_e ymm1_e ymm8_e;
smull mulHymm8_f mulL_f ymm1_f ymm8_f;
cast ymm9_0@sint16 mulL_0;
cast ymm9_1@sint16 mulL_1;
cast ymm9_2@sint16 mulL_2;
cast ymm9_3@sint16 mulL_3;
cast ymm9_4@sint16 mulL_4;
cast ymm9_5@sint16 mulL_5;
cast ymm9_6@sint16 mulL_6;
cast ymm9_7@sint16 mulL_7;
cast ymm9_8@sint16 mulL_8;
cast ymm9_9@sint16 mulL_9;
cast ymm9_a@sint16 mulL_a;
cast ymm9_b@sint16 mulL_b;
cast ymm9_c@sint16 mulL_c;
cast ymm9_d@sint16 mulL_d;
cast ymm9_e@sint16 mulL_e;
cast ymm9_f@sint16 mulL_f;
(* vpmulhw %ymm2,%ymm8,%ymm8                       #! PC = 0x555555558bc3 *)
smull mulH_0 mulLymm8_0 ymm8_0 ymm2_0;
smull mulH_1 mulLymm8_1 ymm8_1 ymm2_1;
smull mulH_2 mulLymm8_2 ymm8_2 ymm2_2;
smull mulH_3 mulLymm8_3 ymm8_3 ymm2_3;
smull mulH_4 mulLymm8_4 ymm8_4 ymm2_4;
smull mulH_5 mulLymm8_5 ymm8_5 ymm2_5;
smull mulH_6 mulLymm8_6 ymm8_6 ymm2_6;
smull mulH_7 mulLymm8_7 ymm8_7 ymm2_7;
smull mulH_8 mulLymm8_8 ymm8_8 ymm2_8;
smull mulH_9 mulLymm8_9 ymm8_9 ymm2_9;
smull mulH_a mulLymm8_a ymm8_a ymm2_a;
smull mulH_b mulLymm8_b ymm8_b ymm2_b;
smull mulH_c mulLymm8_c ymm8_c ymm2_c;
smull mulH_d mulLymm8_d ymm8_d ymm2_d;
smull mulH_e mulLymm8_e ymm8_e ymm2_e;
smull mulH_f mulLymm8_f ymm8_f ymm2_f;
mov ymm8_0 mulH_0;
mov ymm8_1 mulH_1;
mov ymm8_2 mulH_2;
mov ymm8_3 mulH_3;
mov ymm8_4 mulH_4;
mov ymm8_5 mulH_5;
mov ymm8_6 mulH_6;
mov ymm8_7 mulH_7;
mov ymm8_8 mulH_8;
mov ymm8_9 mulH_9;
mov ymm8_a mulH_a;
mov ymm8_b mulH_b;
mov ymm8_c mulH_c;
mov ymm8_d mulH_d;
mov ymm8_e mulH_e;
mov ymm8_f mulH_f;
(* vpmulhw %ymm0,%ymm9,%ymm9                       #! PC = 0x555555558bc7 *)
smull mulH_0 red_0 ymm9_0 ymm0_0;
assert true && red_0 = mulLymm8_0;
assume red_0 = mulLymm8_0 && true;
smull mulH_1 red_1 ymm9_1 ymm0_1;
assert true && red_1 = mulLymm8_1;
assume red_1 = mulLymm8_1 && true;
smull mulH_2 red_2 ymm9_2 ymm0_2;
assert true && red_2 = mulLymm8_2;
assume red_2 = mulLymm8_2 && true;
smull mulH_3 red_3 ymm9_3 ymm0_3;
assert true && red_3 = mulLymm8_3;
assume red_3 = mulLymm8_3 && true;
smull mulH_4 red_4 ymm9_4 ymm0_4;
assert true && red_4 = mulLymm8_4;
assume red_4 = mulLymm8_4 && true;
smull mulH_5 red_5 ymm9_5 ymm0_5;
assert true && red_5 = mulLymm8_5;
assume red_5 = mulLymm8_5 && true;
smull mulH_6 red_6 ymm9_6 ymm0_6;
assert true && red_6 = mulLymm8_6;
assume red_6 = mulLymm8_6 && true;
smull mulH_7 red_7 ymm9_7 ymm0_7;
assert true && red_7 = mulLymm8_7;
assume red_7 = mulLymm8_7 && true;
smull mulH_8 red_8 ymm9_8 ymm0_8;
assert true && red_8 = mulLymm8_8;
assume red_8 = mulLymm8_8 && true;
smull mulH_9 red_9 ymm9_9 ymm0_9;
assert true && red_9 = mulLymm8_9;
assume red_9 = mulLymm8_9 && true;
smull mulH_a red_a ymm9_a ymm0_a;
assert true && red_a = mulLymm8_a;
assume red_a = mulLymm8_a && true;
smull mulH_b red_b ymm9_b ymm0_b;
assert true && red_b = mulLymm8_b;
assume red_b = mulLymm8_b && true;
smull mulH_c red_c ymm9_c ymm0_c;
assert true && red_c = mulLymm8_c;
assume red_c = mulLymm8_c && true;
smull mulH_d red_d ymm9_d ymm0_d;
assert true && red_d = mulLymm8_d;
assume red_d = mulLymm8_d && true;
smull mulH_e red_e ymm9_e ymm0_e;
assert true && red_e = mulLymm8_e;
assume red_e = mulLymm8_e && true;
smull mulH_f red_f ymm9_f ymm0_f;
assert true && red_f = mulLymm8_f;
assume red_f = mulLymm8_f && true;
mov ymm9_0 mulH_0;
mov ymm9_1 mulH_1;
mov ymm9_2 mulH_2;
mov ymm9_3 mulH_3;
mov ymm9_4 mulH_4;
mov ymm9_5 mulH_5;
mov ymm9_6 mulH_6;
mov ymm9_7 mulH_7;
mov ymm9_8 mulH_8;
mov ymm9_9 mulH_9;
mov ymm9_a mulH_a;
mov ymm9_b mulH_b;
mov ymm9_c mulH_c;
mov ymm9_d mulH_d;
mov ymm9_e mulH_e;
mov ymm9_f mulH_f;
(* vpsubw %ymm9,%ymm8,%ymm8                        #! PC = 0x555555558bcb *)
sub ymm8_0 ymm8_0 ymm9_0;
sub ymm8_1 ymm8_1 ymm9_1;
sub ymm8_2 ymm8_2 ymm9_2;
sub ymm8_3 ymm8_3 ymm9_3;
sub ymm8_4 ymm8_4 ymm9_4;
sub ymm8_5 ymm8_5 ymm9_5;
sub ymm8_6 ymm8_6 ymm9_6;
sub ymm8_7 ymm8_7 ymm9_7;
sub ymm8_8 ymm8_8 ymm9_8;
sub ymm8_9 ymm8_9 ymm9_9;
sub ymm8_a ymm8_a ymm9_a;
sub ymm8_b ymm8_b ymm9_b;
sub ymm8_c ymm8_c ymm9_c;
sub ymm8_d ymm8_d ymm9_d;
sub ymm8_e ymm8_e ymm9_e;
sub ymm8_f ymm8_f ymm9_f;
(* vpbroadcastw 0x126(%rdx),%ymm1                  #! EA = L0x555555561246; Value = 0x1c3c679663c7ee3d; PC = 0x555555558bd0 *)
mov ymm1_0 L0x555555561246;
mov ymm1_1 L0x555555561246;
mov ymm1_2 L0x555555561246;
mov ymm1_3 L0x555555561246;
mov ymm1_4 L0x555555561246;
mov ymm1_5 L0x555555561246;
mov ymm1_6 L0x555555561246;
mov ymm1_7 L0x555555561246;
mov ymm1_8 L0x555555561246;
mov ymm1_9 L0x555555561246;
mov ymm1_a L0x555555561246;
mov ymm1_b L0x555555561246;
mov ymm1_c L0x555555561246;
mov ymm1_d L0x555555561246;
mov ymm1_e L0x555555561246;
mov ymm1_f L0x555555561246;
(* vpbroadcastw 0x326(%rdx),%ymm2                  #! EA = L0x555555561446; Value = 0xf43c039609c7f03d; PC = 0x555555558bd9 *)
mov ymm2_0 L0x555555561446;
mov ymm2_1 L0x555555561446;
mov ymm2_2 L0x555555561446;
mov ymm2_3 L0x555555561446;
mov ymm2_4 L0x555555561446;
mov ymm2_5 L0x555555561446;
mov ymm2_6 L0x555555561446;
mov ymm2_7 L0x555555561446;
mov ymm2_8 L0x555555561446;
mov ymm2_9 L0x555555561446;
mov ymm2_a L0x555555561446;
mov ymm2_b L0x555555561446;
mov ymm2_c L0x555555561446;
mov ymm2_d L0x555555561446;
mov ymm2_e L0x555555561446;
mov ymm2_f L0x555555561446;
(* vpmullw %ymm1,%ymm11,%ymm9                      #! PC = 0x555555558be2 *)
smull mulHymm11_0 mulL_0 ymm1_0 ymm11_0;
smull mulHymm11_1 mulL_1 ymm1_1 ymm11_1;
smull mulHymm11_2 mulL_2 ymm1_2 ymm11_2;
smull mulHymm11_3 mulL_3 ymm1_3 ymm11_3;
smull mulHymm11_4 mulL_4 ymm1_4 ymm11_4;
smull mulHymm11_5 mulL_5 ymm1_5 ymm11_5;
smull mulHymm11_6 mulL_6 ymm1_6 ymm11_6;
smull mulHymm11_7 mulL_7 ymm1_7 ymm11_7;
smull mulHymm11_8 mulL_8 ymm1_8 ymm11_8;
smull mulHymm11_9 mulL_9 ymm1_9 ymm11_9;
smull mulHymm11_a mulL_a ymm1_a ymm11_a;
smull mulHymm11_b mulL_b ymm1_b ymm11_b;
smull mulHymm11_c mulL_c ymm1_c ymm11_c;
smull mulHymm11_d mulL_d ymm1_d ymm11_d;
smull mulHymm11_e mulL_e ymm1_e ymm11_e;
smull mulHymm11_f mulL_f ymm1_f ymm11_f;
cast ymm9_0@sint16 mulL_0;
cast ymm9_1@sint16 mulL_1;
cast ymm9_2@sint16 mulL_2;
cast ymm9_3@sint16 mulL_3;
cast ymm9_4@sint16 mulL_4;
cast ymm9_5@sint16 mulL_5;
cast ymm9_6@sint16 mulL_6;
cast ymm9_7@sint16 mulL_7;
cast ymm9_8@sint16 mulL_8;
cast ymm9_9@sint16 mulL_9;
cast ymm9_a@sint16 mulL_a;
cast ymm9_b@sint16 mulL_b;
cast ymm9_c@sint16 mulL_c;
cast ymm9_d@sint16 mulL_d;
cast ymm9_e@sint16 mulL_e;
cast ymm9_f@sint16 mulL_f;
(* vpmulhw %ymm2,%ymm11,%ymm11                     #! PC = 0x555555558be6 *)
smull mulH_0 mulLymm11_0 ymm11_0 ymm2_0;
smull mulH_1 mulLymm11_1 ymm11_1 ymm2_1;
smull mulH_2 mulLymm11_2 ymm11_2 ymm2_2;
smull mulH_3 mulLymm11_3 ymm11_3 ymm2_3;
smull mulH_4 mulLymm11_4 ymm11_4 ymm2_4;
smull mulH_5 mulLymm11_5 ymm11_5 ymm2_5;
smull mulH_6 mulLymm11_6 ymm11_6 ymm2_6;
smull mulH_7 mulLymm11_7 ymm11_7 ymm2_7;
smull mulH_8 mulLymm11_8 ymm11_8 ymm2_8;
smull mulH_9 mulLymm11_9 ymm11_9 ymm2_9;
smull mulH_a mulLymm11_a ymm11_a ymm2_a;
smull mulH_b mulLymm11_b ymm11_b ymm2_b;
smull mulH_c mulLymm11_c ymm11_c ymm2_c;
smull mulH_d mulLymm11_d ymm11_d ymm2_d;
smull mulH_e mulLymm11_e ymm11_e ymm2_e;
smull mulH_f mulLymm11_f ymm11_f ymm2_f;
mov ymm11_0 mulH_0;
mov ymm11_1 mulH_1;
mov ymm11_2 mulH_2;
mov ymm11_3 mulH_3;
mov ymm11_4 mulH_4;
mov ymm11_5 mulH_5;
mov ymm11_6 mulH_6;
mov ymm11_7 mulH_7;
mov ymm11_8 mulH_8;
mov ymm11_9 mulH_9;
mov ymm11_a mulH_a;
mov ymm11_b mulH_b;
mov ymm11_c mulH_c;
mov ymm11_d mulH_d;
mov ymm11_e mulH_e;
mov ymm11_f mulH_f;
(* vpmulhw %ymm0,%ymm9,%ymm9                       #! PC = 0x555555558bea *)
smull mulH_0 red_0 ymm9_0 ymm0_0;
assert true && red_0 = mulLymm11_0;
assume red_0 = mulLymm11_0 && true;
smull mulH_1 red_1 ymm9_1 ymm0_1;
assert true && red_1 = mulLymm11_1;
assume red_1 = mulLymm11_1 && true;
smull mulH_2 red_2 ymm9_2 ymm0_2;
assert true && red_2 = mulLymm11_2;
assume red_2 = mulLymm11_2 && true;
smull mulH_3 red_3 ymm9_3 ymm0_3;
assert true && red_3 = mulLymm11_3;
assume red_3 = mulLymm11_3 && true;
smull mulH_4 red_4 ymm9_4 ymm0_4;
assert true && red_4 = mulLymm11_4;
assume red_4 = mulLymm11_4 && true;
smull mulH_5 red_5 ymm9_5 ymm0_5;
assert true && red_5 = mulLymm11_5;
assume red_5 = mulLymm11_5 && true;
smull mulH_6 red_6 ymm9_6 ymm0_6;
assert true && red_6 = mulLymm11_6;
assume red_6 = mulLymm11_6 && true;
smull mulH_7 red_7 ymm9_7 ymm0_7;
assert true && red_7 = mulLymm11_7;
assume red_7 = mulLymm11_7 && true;
smull mulH_8 red_8 ymm9_8 ymm0_8;
assert true && red_8 = mulLymm11_8;
assume red_8 = mulLymm11_8 && true;
smull mulH_9 red_9 ymm9_9 ymm0_9;
assert true && red_9 = mulLymm11_9;
assume red_9 = mulLymm11_9 && true;
smull mulH_a red_a ymm9_a ymm0_a;
assert true && red_a = mulLymm11_a;
assume red_a = mulLymm11_a && true;
smull mulH_b red_b ymm9_b ymm0_b;
assert true && red_b = mulLymm11_b;
assume red_b = mulLymm11_b && true;
smull mulH_c red_c ymm9_c ymm0_c;
assert true && red_c = mulLymm11_c;
assume red_c = mulLymm11_c && true;
smull mulH_d red_d ymm9_d ymm0_d;
assert true && red_d = mulLymm11_d;
assume red_d = mulLymm11_d && true;
smull mulH_e red_e ymm9_e ymm0_e;
assert true && red_e = mulLymm11_e;
assume red_e = mulLymm11_e && true;
smull mulH_f red_f ymm9_f ymm0_f;
assert true && red_f = mulLymm11_f;
assume red_f = mulLymm11_f && true;
mov ymm9_0 mulH_0;
mov ymm9_1 mulH_1;
mov ymm9_2 mulH_2;
mov ymm9_3 mulH_3;
mov ymm9_4 mulH_4;
mov ymm9_5 mulH_5;
mov ymm9_6 mulH_6;
mov ymm9_7 mulH_7;
mov ymm9_8 mulH_8;
mov ymm9_9 mulH_9;
mov ymm9_a mulH_a;
mov ymm9_b mulH_b;
mov ymm9_c mulH_c;
mov ymm9_d mulH_d;
mov ymm9_e mulH_e;
mov ymm9_f mulH_f;
(* vpsubw %ymm9,%ymm11,%ymm11                      #! PC = 0x555555558bee *)
sub ymm11_0 ymm11_0 ymm9_0;
sub ymm11_1 ymm11_1 ymm9_1;
sub ymm11_2 ymm11_2 ymm9_2;
sub ymm11_3 ymm11_3 ymm9_3;
sub ymm11_4 ymm11_4 ymm9_4;
sub ymm11_5 ymm11_5 ymm9_5;
sub ymm11_6 ymm11_6 ymm9_6;
sub ymm11_7 ymm11_7 ymm9_7;
sub ymm11_8 ymm11_8 ymm9_8;
sub ymm11_9 ymm11_9 ymm9_9;
sub ymm11_a ymm11_a ymm9_a;
sub ymm11_b ymm11_b ymm9_b;
sub ymm11_c ymm11_c ymm9_c;
sub ymm11_d ymm11_d ymm9_d;
sub ymm11_e ymm11_e ymm9_e;
sub ymm11_f ymm11_f ymm9_f;
(* vpmullw %ymm14,%ymm7,%ymm9                      #! PC = 0x555555558bf3 *)
smull mulHymm7_0 mulL_0 ymm14_0 ymm7_0;
smull mulHymm7_1 mulL_1 ymm14_1 ymm7_1;
smull mulHymm7_2 mulL_2 ymm14_2 ymm7_2;
smull mulHymm7_3 mulL_3 ymm14_3 ymm7_3;
smull mulHymm7_4 mulL_4 ymm14_4 ymm7_4;
smull mulHymm7_5 mulL_5 ymm14_5 ymm7_5;
smull mulHymm7_6 mulL_6 ymm14_6 ymm7_6;
smull mulHymm7_7 mulL_7 ymm14_7 ymm7_7;
smull mulHymm7_8 mulL_8 ymm14_8 ymm7_8;
smull mulHymm7_9 mulL_9 ymm14_9 ymm7_9;
smull mulHymm7_a mulL_a ymm14_a ymm7_a;
smull mulHymm7_b mulL_b ymm14_b ymm7_b;
smull mulHymm7_c mulL_c ymm14_c ymm7_c;
smull mulHymm7_d mulL_d ymm14_d ymm7_d;
smull mulHymm7_e mulL_e ymm14_e ymm7_e;
smull mulHymm7_f mulL_f ymm14_f ymm7_f;
cast ymm9_0@sint16 mulL_0;
cast ymm9_1@sint16 mulL_1;
cast ymm9_2@sint16 mulL_2;
cast ymm9_3@sint16 mulL_3;
cast ymm9_4@sint16 mulL_4;
cast ymm9_5@sint16 mulL_5;
cast ymm9_6@sint16 mulL_6;
cast ymm9_7@sint16 mulL_7;
cast ymm9_8@sint16 mulL_8;
cast ymm9_9@sint16 mulL_9;
cast ymm9_a@sint16 mulL_a;
cast ymm9_b@sint16 mulL_b;
cast ymm9_c@sint16 mulL_c;
cast ymm9_d@sint16 mulL_d;
cast ymm9_e@sint16 mulL_e;
cast ymm9_f@sint16 mulL_f;
(* vpmulhw %ymm15,%ymm7,%ymm7                      #! PC = 0x555555558bf8 *)
smull mulH_0 mulLymm7_0 ymm7_0 ymm15_0;
smull mulH_1 mulLymm7_1 ymm7_1 ymm15_1;
smull mulH_2 mulLymm7_2 ymm7_2 ymm15_2;
smull mulH_3 mulLymm7_3 ymm7_3 ymm15_3;
smull mulH_4 mulLymm7_4 ymm7_4 ymm15_4;
smull mulH_5 mulLymm7_5 ymm7_5 ymm15_5;
smull mulH_6 mulLymm7_6 ymm7_6 ymm15_6;
smull mulH_7 mulLymm7_7 ymm7_7 ymm15_7;
smull mulH_8 mulLymm7_8 ymm7_8 ymm15_8;
smull mulH_9 mulLymm7_9 ymm7_9 ymm15_9;
smull mulH_a mulLymm7_a ymm7_a ymm15_a;
smull mulH_b mulLymm7_b ymm7_b ymm15_b;
smull mulH_c mulLymm7_c ymm7_c ymm15_c;
smull mulH_d mulLymm7_d ymm7_d ymm15_d;
smull mulH_e mulLymm7_e ymm7_e ymm15_e;
smull mulH_f mulLymm7_f ymm7_f ymm15_f;
mov ymm7_0 mulH_0;
mov ymm7_1 mulH_1;
mov ymm7_2 mulH_2;
mov ymm7_3 mulH_3;
mov ymm7_4 mulH_4;
mov ymm7_5 mulH_5;
mov ymm7_6 mulH_6;
mov ymm7_7 mulH_7;
mov ymm7_8 mulH_8;
mov ymm7_9 mulH_9;
mov ymm7_a mulH_a;
mov ymm7_b mulH_b;
mov ymm7_c mulH_c;
mov ymm7_d mulH_d;
mov ymm7_e mulH_e;
mov ymm7_f mulH_f;
(* vpmulhw %ymm0,%ymm9,%ymm9                       #! PC = 0x555555558bfd *)
smull mulH_0 red_0 ymm9_0 ymm0_0;
assert true && red_0 = mulLymm7_0;
assume red_0 = mulLymm7_0 && true;
smull mulH_1 red_1 ymm9_1 ymm0_1;
assert true && red_1 = mulLymm7_1;
assume red_1 = mulLymm7_1 && true;
smull mulH_2 red_2 ymm9_2 ymm0_2;
assert true && red_2 = mulLymm7_2;
assume red_2 = mulLymm7_2 && true;
smull mulH_3 red_3 ymm9_3 ymm0_3;
assert true && red_3 = mulLymm7_3;
assume red_3 = mulLymm7_3 && true;
smull mulH_4 red_4 ymm9_4 ymm0_4;
assert true && red_4 = mulLymm7_4;
assume red_4 = mulLymm7_4 && true;
smull mulH_5 red_5 ymm9_5 ymm0_5;
assert true && red_5 = mulLymm7_5;
assume red_5 = mulLymm7_5 && true;
smull mulH_6 red_6 ymm9_6 ymm0_6;
assert true && red_6 = mulLymm7_6;
assume red_6 = mulLymm7_6 && true;
smull mulH_7 red_7 ymm9_7 ymm0_7;
assert true && red_7 = mulLymm7_7;
assume red_7 = mulLymm7_7 && true;
smull mulH_8 red_8 ymm9_8 ymm0_8;
assert true && red_8 = mulLymm7_8;
assume red_8 = mulLymm7_8 && true;
smull mulH_9 red_9 ymm9_9 ymm0_9;
assert true && red_9 = mulLymm7_9;
assume red_9 = mulLymm7_9 && true;
smull mulH_a red_a ymm9_a ymm0_a;
assert true && red_a = mulLymm7_a;
assume red_a = mulLymm7_a && true;
smull mulH_b red_b ymm9_b ymm0_b;
assert true && red_b = mulLymm7_b;
assume red_b = mulLymm7_b && true;
smull mulH_c red_c ymm9_c ymm0_c;
assert true && red_c = mulLymm7_c;
assume red_c = mulLymm7_c && true;
smull mulH_d red_d ymm9_d ymm0_d;
assert true && red_d = mulLymm7_d;
assume red_d = mulLymm7_d && true;
smull mulH_e red_e ymm9_e ymm0_e;
assert true && red_e = mulLymm7_e;
assume red_e = mulLymm7_e && true;
smull mulH_f red_f ymm9_f ymm0_f;
assert true && red_f = mulLymm7_f;
assume red_f = mulLymm7_f && true;
mov ymm9_0 mulH_0;
mov ymm9_1 mulH_1;
mov ymm9_2 mulH_2;
mov ymm9_3 mulH_3;
mov ymm9_4 mulH_4;
mov ymm9_5 mulH_5;
mov ymm9_6 mulH_6;
mov ymm9_7 mulH_7;
mov ymm9_8 mulH_8;
mov ymm9_9 mulH_9;
mov ymm9_a mulH_a;
mov ymm9_b mulH_b;
mov ymm9_c mulH_c;
mov ymm9_d mulH_d;
mov ymm9_e mulH_e;
mov ymm9_f mulH_f;
(* vpsubw %ymm9,%ymm7,%ymm7                        #! PC = 0x555555558c01 *)
sub ymm7_0 ymm7_0 ymm9_0;
sub ymm7_1 ymm7_1 ymm9_1;
sub ymm7_2 ymm7_2 ymm9_2;
sub ymm7_3 ymm7_3 ymm9_3;
sub ymm7_4 ymm7_4 ymm9_4;
sub ymm7_5 ymm7_5 ymm9_5;
sub ymm7_6 ymm7_6 ymm9_6;
sub ymm7_7 ymm7_7 ymm9_7;
sub ymm7_8 ymm7_8 ymm9_8;
sub ymm7_9 ymm7_9 ymm9_9;
sub ymm7_a ymm7_a ymm9_a;
sub ymm7_b ymm7_b ymm9_b;
sub ymm7_c ymm7_c ymm9_c;
sub ymm7_d ymm7_d ymm9_d;
sub ymm7_e ymm7_e ymm9_e;
sub ymm7_f ymm7_f ymm9_f;
(* vpmullw %ymm14,%ymm5,%ymm9                      #! PC = 0x555555558c06 *)
smull mulHymm5_0 mulL_0 ymm14_0 ymm5_0;
smull mulHymm5_1 mulL_1 ymm14_1 ymm5_1;
smull mulHymm5_2 mulL_2 ymm14_2 ymm5_2;
smull mulHymm5_3 mulL_3 ymm14_3 ymm5_3;
smull mulHymm5_4 mulL_4 ymm14_4 ymm5_4;
smull mulHymm5_5 mulL_5 ymm14_5 ymm5_5;
smull mulHymm5_6 mulL_6 ymm14_6 ymm5_6;
smull mulHymm5_7 mulL_7 ymm14_7 ymm5_7;
smull mulHymm5_8 mulL_8 ymm14_8 ymm5_8;
smull mulHymm5_9 mulL_9 ymm14_9 ymm5_9;
smull mulHymm5_a mulL_a ymm14_a ymm5_a;
smull mulHymm5_b mulL_b ymm14_b ymm5_b;
smull mulHymm5_c mulL_c ymm14_c ymm5_c;
smull mulHymm5_d mulL_d ymm14_d ymm5_d;
smull mulHymm5_e mulL_e ymm14_e ymm5_e;
smull mulHymm5_f mulL_f ymm14_f ymm5_f;
cast ymm9_0@sint16 mulL_0;
cast ymm9_1@sint16 mulL_1;
cast ymm9_2@sint16 mulL_2;
cast ymm9_3@sint16 mulL_3;
cast ymm9_4@sint16 mulL_4;
cast ymm9_5@sint16 mulL_5;
cast ymm9_6@sint16 mulL_6;
cast ymm9_7@sint16 mulL_7;
cast ymm9_8@sint16 mulL_8;
cast ymm9_9@sint16 mulL_9;
cast ymm9_a@sint16 mulL_a;
cast ymm9_b@sint16 mulL_b;
cast ymm9_c@sint16 mulL_c;
cast ymm9_d@sint16 mulL_d;
cast ymm9_e@sint16 mulL_e;
cast ymm9_f@sint16 mulL_f;
(* vpmulhw %ymm15,%ymm5,%ymm5                      #! PC = 0x555555558c0b *)
smull mulH_0 mulLymm5_0 ymm5_0 ymm15_0;
smull mulH_1 mulLymm5_1 ymm5_1 ymm15_1;
smull mulH_2 mulLymm5_2 ymm5_2 ymm15_2;
smull mulH_3 mulLymm5_3 ymm5_3 ymm15_3;
smull mulH_4 mulLymm5_4 ymm5_4 ymm15_4;
smull mulH_5 mulLymm5_5 ymm5_5 ymm15_5;
smull mulH_6 mulLymm5_6 ymm5_6 ymm15_6;
smull mulH_7 mulLymm5_7 ymm5_7 ymm15_7;
smull mulH_8 mulLymm5_8 ymm5_8 ymm15_8;
smull mulH_9 mulLymm5_9 ymm5_9 ymm15_9;
smull mulH_a mulLymm5_a ymm5_a ymm15_a;
smull mulH_b mulLymm5_b ymm5_b ymm15_b;
smull mulH_c mulLymm5_c ymm5_c ymm15_c;
smull mulH_d mulLymm5_d ymm5_d ymm15_d;
smull mulH_e mulLymm5_e ymm5_e ymm15_e;
smull mulH_f mulLymm5_f ymm5_f ymm15_f;
mov ymm5_0 mulH_0;
mov ymm5_1 mulH_1;
mov ymm5_2 mulH_2;
mov ymm5_3 mulH_3;
mov ymm5_4 mulH_4;
mov ymm5_5 mulH_5;
mov ymm5_6 mulH_6;
mov ymm5_7 mulH_7;
mov ymm5_8 mulH_8;
mov ymm5_9 mulH_9;
mov ymm5_a mulH_a;
mov ymm5_b mulH_b;
mov ymm5_c mulH_c;
mov ymm5_d mulH_d;
mov ymm5_e mulH_e;
mov ymm5_f mulH_f;
(* vpmulhw %ymm0,%ymm9,%ymm9                       #! PC = 0x555555558c10 *)
smull mulH_0 red_0 ymm9_0 ymm0_0;
assert true && red_0 = mulLymm5_0;
assume red_0 = mulLymm5_0 && true;
smull mulH_1 red_1 ymm9_1 ymm0_1;
assert true && red_1 = mulLymm5_1;
assume red_1 = mulLymm5_1 && true;
smull mulH_2 red_2 ymm9_2 ymm0_2;
assert true && red_2 = mulLymm5_2;
assume red_2 = mulLymm5_2 && true;
smull mulH_3 red_3 ymm9_3 ymm0_3;
assert true && red_3 = mulLymm5_3;
assume red_3 = mulLymm5_3 && true;
smull mulH_4 red_4 ymm9_4 ymm0_4;
assert true && red_4 = mulLymm5_4;
assume red_4 = mulLymm5_4 && true;
smull mulH_5 red_5 ymm9_5 ymm0_5;
assert true && red_5 = mulLymm5_5;
assume red_5 = mulLymm5_5 && true;
smull mulH_6 red_6 ymm9_6 ymm0_6;
assert true && red_6 = mulLymm5_6;
assume red_6 = mulLymm5_6 && true;
smull mulH_7 red_7 ymm9_7 ymm0_7;
assert true && red_7 = mulLymm5_7;
assume red_7 = mulLymm5_7 && true;
smull mulH_8 red_8 ymm9_8 ymm0_8;
assert true && red_8 = mulLymm5_8;
assume red_8 = mulLymm5_8 && true;
smull mulH_9 red_9 ymm9_9 ymm0_9;
assert true && red_9 = mulLymm5_9;
assume red_9 = mulLymm5_9 && true;
smull mulH_a red_a ymm9_a ymm0_a;
assert true && red_a = mulLymm5_a;
assume red_a = mulLymm5_a && true;
smull mulH_b red_b ymm9_b ymm0_b;
assert true && red_b = mulLymm5_b;
assume red_b = mulLymm5_b && true;
smull mulH_c red_c ymm9_c ymm0_c;
assert true && red_c = mulLymm5_c;
assume red_c = mulLymm5_c && true;
smull mulH_d red_d ymm9_d ymm0_d;
assert true && red_d = mulLymm5_d;
assume red_d = mulLymm5_d && true;
smull mulH_e red_e ymm9_e ymm0_e;
assert true && red_e = mulLymm5_e;
assume red_e = mulLymm5_e && true;
smull mulH_f red_f ymm9_f ymm0_f;
assert true && red_f = mulLymm5_f;
assume red_f = mulLymm5_f && true;
mov ymm9_0 mulH_0;
mov ymm9_1 mulH_1;
mov ymm9_2 mulH_2;
mov ymm9_3 mulH_3;
mov ymm9_4 mulH_4;
mov ymm9_5 mulH_5;
mov ymm9_6 mulH_6;
mov ymm9_7 mulH_7;
mov ymm9_8 mulH_8;
mov ymm9_9 mulH_9;
mov ymm9_a mulH_a;
mov ymm9_b mulH_b;
mov ymm9_c mulH_c;
mov ymm9_d mulH_d;
mov ymm9_e mulH_e;
mov ymm9_f mulH_f;
(* vpsubw %ymm9,%ymm5,%ymm5                        #! PC = 0x555555558c14 *)
sub ymm5_0 ymm5_0 ymm9_0;
sub ymm5_1 ymm5_1 ymm9_1;
sub ymm5_2 ymm5_2 ymm9_2;
sub ymm5_3 ymm5_3 ymm9_3;
sub ymm5_4 ymm5_4 ymm9_4;
sub ymm5_5 ymm5_5 ymm9_5;
sub ymm5_6 ymm5_6 ymm9_6;
sub ymm5_7 ymm5_7 ymm9_7;
sub ymm5_8 ymm5_8 ymm9_8;
sub ymm5_9 ymm5_9 ymm9_9;
sub ymm5_a ymm5_a ymm9_a;
sub ymm5_b ymm5_b ymm9_b;
sub ymm5_c ymm5_c ymm9_c;
sub ymm5_d ymm5_d ymm9_d;
sub ymm5_e ymm5_e ymm9_e;
sub ymm5_f ymm5_f ymm9_f;
(* vpmullw %ymm14,%ymm4,%ymm9                      #! PC = 0x555555558c19 *)
smull mulHymm4_0 mulL_0 ymm14_0 ymm4_0;
smull mulHymm4_1 mulL_1 ymm14_1 ymm4_1;
smull mulHymm4_2 mulL_2 ymm14_2 ymm4_2;
smull mulHymm4_3 mulL_3 ymm14_3 ymm4_3;
smull mulHymm4_4 mulL_4 ymm14_4 ymm4_4;
smull mulHymm4_5 mulL_5 ymm14_5 ymm4_5;
smull mulHymm4_6 mulL_6 ymm14_6 ymm4_6;
smull mulHymm4_7 mulL_7 ymm14_7 ymm4_7;
smull mulHymm4_8 mulL_8 ymm14_8 ymm4_8;
smull mulHymm4_9 mulL_9 ymm14_9 ymm4_9;
smull mulHymm4_a mulL_a ymm14_a ymm4_a;
smull mulHymm4_b mulL_b ymm14_b ymm4_b;
smull mulHymm4_c mulL_c ymm14_c ymm4_c;
smull mulHymm4_d mulL_d ymm14_d ymm4_d;
smull mulHymm4_e mulL_e ymm14_e ymm4_e;
smull mulHymm4_f mulL_f ymm14_f ymm4_f;
cast ymm9_0@sint16 mulL_0;
cast ymm9_1@sint16 mulL_1;
cast ymm9_2@sint16 mulL_2;
cast ymm9_3@sint16 mulL_3;
cast ymm9_4@sint16 mulL_4;
cast ymm9_5@sint16 mulL_5;
cast ymm9_6@sint16 mulL_6;
cast ymm9_7@sint16 mulL_7;
cast ymm9_8@sint16 mulL_8;
cast ymm9_9@sint16 mulL_9;
cast ymm9_a@sint16 mulL_a;
cast ymm9_b@sint16 mulL_b;
cast ymm9_c@sint16 mulL_c;
cast ymm9_d@sint16 mulL_d;
cast ymm9_e@sint16 mulL_e;
cast ymm9_f@sint16 mulL_f;
(* vpmulhw %ymm15,%ymm4,%ymm4                      #! PC = 0x555555558c1e *)
smull mulH_0 mulLymm4_0 ymm4_0 ymm15_0;
smull mulH_1 mulLymm4_1 ymm4_1 ymm15_1;
smull mulH_2 mulLymm4_2 ymm4_2 ymm15_2;
smull mulH_3 mulLymm4_3 ymm4_3 ymm15_3;
smull mulH_4 mulLymm4_4 ymm4_4 ymm15_4;
smull mulH_5 mulLymm4_5 ymm4_5 ymm15_5;
smull mulH_6 mulLymm4_6 ymm4_6 ymm15_6;
smull mulH_7 mulLymm4_7 ymm4_7 ymm15_7;
smull mulH_8 mulLymm4_8 ymm4_8 ymm15_8;
smull mulH_9 mulLymm4_9 ymm4_9 ymm15_9;
smull mulH_a mulLymm4_a ymm4_a ymm15_a;
smull mulH_b mulLymm4_b ymm4_b ymm15_b;
smull mulH_c mulLymm4_c ymm4_c ymm15_c;
smull mulH_d mulLymm4_d ymm4_d ymm15_d;
smull mulH_e mulLymm4_e ymm4_e ymm15_e;
smull mulH_f mulLymm4_f ymm4_f ymm15_f;
mov ymm4_0 mulH_0;
mov ymm4_1 mulH_1;
mov ymm4_2 mulH_2;
mov ymm4_3 mulH_3;
mov ymm4_4 mulH_4;
mov ymm4_5 mulH_5;
mov ymm4_6 mulH_6;
mov ymm4_7 mulH_7;
mov ymm4_8 mulH_8;
mov ymm4_9 mulH_9;
mov ymm4_a mulH_a;
mov ymm4_b mulH_b;
mov ymm4_c mulH_c;
mov ymm4_d mulH_d;
mov ymm4_e mulH_e;
mov ymm4_f mulH_f;
(* vpmulhw %ymm0,%ymm9,%ymm9                       #! PC = 0x555555558c23 *)
smull mulH_0 red_0 ymm9_0 ymm0_0;
assert true && red_0 = mulLymm4_0;
assume red_0 = mulLymm4_0 && true;
smull mulH_1 red_1 ymm9_1 ymm0_1;
assert true && red_1 = mulLymm4_1;
assume red_1 = mulLymm4_1 && true;
smull mulH_2 red_2 ymm9_2 ymm0_2;
assert true && red_2 = mulLymm4_2;
assume red_2 = mulLymm4_2 && true;
smull mulH_3 red_3 ymm9_3 ymm0_3;
assert true && red_3 = mulLymm4_3;
assume red_3 = mulLymm4_3 && true;
smull mulH_4 red_4 ymm9_4 ymm0_4;
assert true && red_4 = mulLymm4_4;
assume red_4 = mulLymm4_4 && true;
smull mulH_5 red_5 ymm9_5 ymm0_5;
assert true && red_5 = mulLymm4_5;
assume red_5 = mulLymm4_5 && true;
smull mulH_6 red_6 ymm9_6 ymm0_6;
assert true && red_6 = mulLymm4_6;
assume red_6 = mulLymm4_6 && true;
smull mulH_7 red_7 ymm9_7 ymm0_7;
assert true && red_7 = mulLymm4_7;
assume red_7 = mulLymm4_7 && true;
smull mulH_8 red_8 ymm9_8 ymm0_8;
assert true && red_8 = mulLymm4_8;
assume red_8 = mulLymm4_8 && true;
smull mulH_9 red_9 ymm9_9 ymm0_9;
assert true && red_9 = mulLymm4_9;
assume red_9 = mulLymm4_9 && true;
smull mulH_a red_a ymm9_a ymm0_a;
assert true && red_a = mulLymm4_a;
assume red_a = mulLymm4_a && true;
smull mulH_b red_b ymm9_b ymm0_b;
assert true && red_b = mulLymm4_b;
assume red_b = mulLymm4_b && true;
smull mulH_c red_c ymm9_c ymm0_c;
assert true && red_c = mulLymm4_c;
assume red_c = mulLymm4_c && true;
smull mulH_d red_d ymm9_d ymm0_d;
assert true && red_d = mulLymm4_d;
assume red_d = mulLymm4_d && true;
smull mulH_e red_e ymm9_e ymm0_e;
assert true && red_e = mulLymm4_e;
assume red_e = mulLymm4_e && true;
smull mulH_f red_f ymm9_f ymm0_f;
assert true && red_f = mulLymm4_f;
assume red_f = mulLymm4_f && true;
mov ymm9_0 mulH_0;
mov ymm9_1 mulH_1;
mov ymm9_2 mulH_2;
mov ymm9_3 mulH_3;
mov ymm9_4 mulH_4;
mov ymm9_5 mulH_5;
mov ymm9_6 mulH_6;
mov ymm9_7 mulH_7;
mov ymm9_8 mulH_8;
mov ymm9_9 mulH_9;
mov ymm9_a mulH_a;
mov ymm9_b mulH_b;
mov ymm9_c mulH_c;
mov ymm9_d mulH_d;
mov ymm9_e mulH_e;
mov ymm9_f mulH_f;
(* vpsubw %ymm9,%ymm4,%ymm4                        #! PC = 0x555555558c27 *)
sub ymm4_0 ymm4_0 ymm9_0;
sub ymm4_1 ymm4_1 ymm9_1;
sub ymm4_2 ymm4_2 ymm9_2;
sub ymm4_3 ymm4_3 ymm9_3;
sub ymm4_4 ymm4_4 ymm9_4;
sub ymm4_5 ymm4_5 ymm9_5;
sub ymm4_6 ymm4_6 ymm9_6;
sub ymm4_7 ymm4_7 ymm9_7;
sub ymm4_8 ymm4_8 ymm9_8;
sub ymm4_9 ymm4_9 ymm9_9;
sub ymm4_a ymm4_a ymm9_a;
sub ymm4_b ymm4_b ymm9_b;
sub ymm4_c ymm4_c ymm9_c;
sub ymm4_d ymm4_d ymm9_d;
sub ymm4_e ymm4_e ymm9_e;
sub ymm4_f ymm4_f ymm9_f;
(* vpmullw %ymm14,%ymm10,%ymm9                     #! PC = 0x555555558c2c *)
smull mulHymm10_0 mulL_0 ymm14_0 ymm10_0;
smull mulHymm10_1 mulL_1 ymm14_1 ymm10_1;
smull mulHymm10_2 mulL_2 ymm14_2 ymm10_2;
smull mulHymm10_3 mulL_3 ymm14_3 ymm10_3;
smull mulHymm10_4 mulL_4 ymm14_4 ymm10_4;
smull mulHymm10_5 mulL_5 ymm14_5 ymm10_5;
smull mulHymm10_6 mulL_6 ymm14_6 ymm10_6;
smull mulHymm10_7 mulL_7 ymm14_7 ymm10_7;
smull mulHymm10_8 mulL_8 ymm14_8 ymm10_8;
smull mulHymm10_9 mulL_9 ymm14_9 ymm10_9;
smull mulHymm10_a mulL_a ymm14_a ymm10_a;
smull mulHymm10_b mulL_b ymm14_b ymm10_b;
smull mulHymm10_c mulL_c ymm14_c ymm10_c;
smull mulHymm10_d mulL_d ymm14_d ymm10_d;
smull mulHymm10_e mulL_e ymm14_e ymm10_e;
smull mulHymm10_f mulL_f ymm14_f ymm10_f;
cast ymm9_0@sint16 mulL_0;
cast ymm9_1@sint16 mulL_1;
cast ymm9_2@sint16 mulL_2;
cast ymm9_3@sint16 mulL_3;
cast ymm9_4@sint16 mulL_4;
cast ymm9_5@sint16 mulL_5;
cast ymm9_6@sint16 mulL_6;
cast ymm9_7@sint16 mulL_7;
cast ymm9_8@sint16 mulL_8;
cast ymm9_9@sint16 mulL_9;
cast ymm9_a@sint16 mulL_a;
cast ymm9_b@sint16 mulL_b;
cast ymm9_c@sint16 mulL_c;
cast ymm9_d@sint16 mulL_d;
cast ymm9_e@sint16 mulL_e;
cast ymm9_f@sint16 mulL_f;
(* vpmulhw %ymm15,%ymm10,%ymm10                    #! PC = 0x555555558c31 *)
smull mulH_0 mulLymm10_0 ymm10_0 ymm15_0;
smull mulH_1 mulLymm10_1 ymm10_1 ymm15_1;
smull mulH_2 mulLymm10_2 ymm10_2 ymm15_2;
smull mulH_3 mulLymm10_3 ymm10_3 ymm15_3;
smull mulH_4 mulLymm10_4 ymm10_4 ymm15_4;
smull mulH_5 mulLymm10_5 ymm10_5 ymm15_5;
smull mulH_6 mulLymm10_6 ymm10_6 ymm15_6;
smull mulH_7 mulLymm10_7 ymm10_7 ymm15_7;
smull mulH_8 mulLymm10_8 ymm10_8 ymm15_8;
smull mulH_9 mulLymm10_9 ymm10_9 ymm15_9;
smull mulH_a mulLymm10_a ymm10_a ymm15_a;
smull mulH_b mulLymm10_b ymm10_b ymm15_b;
smull mulH_c mulLymm10_c ymm10_c ymm15_c;
smull mulH_d mulLymm10_d ymm10_d ymm15_d;
smull mulH_e mulLymm10_e ymm10_e ymm15_e;
smull mulH_f mulLymm10_f ymm10_f ymm15_f;
mov ymm10_0 mulH_0;
mov ymm10_1 mulH_1;
mov ymm10_2 mulH_2;
mov ymm10_3 mulH_3;
mov ymm10_4 mulH_4;
mov ymm10_5 mulH_5;
mov ymm10_6 mulH_6;
mov ymm10_7 mulH_7;
mov ymm10_8 mulH_8;
mov ymm10_9 mulH_9;
mov ymm10_a mulH_a;
mov ymm10_b mulH_b;
mov ymm10_c mulH_c;
mov ymm10_d mulH_d;
mov ymm10_e mulH_e;
mov ymm10_f mulH_f;
(* vpmulhw %ymm0,%ymm9,%ymm9                       #! PC = 0x555555558c36 *)
smull mulH_0 red_0 ymm9_0 ymm0_0;
assert true && red_0 = mulLymm10_0;
assume red_0 = mulLymm10_0 && true;
smull mulH_1 red_1 ymm9_1 ymm0_1;
assert true && red_1 = mulLymm10_1;
assume red_1 = mulLymm10_1 && true;
smull mulH_2 red_2 ymm9_2 ymm0_2;
assert true && red_2 = mulLymm10_2;
assume red_2 = mulLymm10_2 && true;
smull mulH_3 red_3 ymm9_3 ymm0_3;
assert true && red_3 = mulLymm10_3;
assume red_3 = mulLymm10_3 && true;
smull mulH_4 red_4 ymm9_4 ymm0_4;
assert true && red_4 = mulLymm10_4;
assume red_4 = mulLymm10_4 && true;
smull mulH_5 red_5 ymm9_5 ymm0_5;
assert true && red_5 = mulLymm10_5;
assume red_5 = mulLymm10_5 && true;
smull mulH_6 red_6 ymm9_6 ymm0_6;
assert true && red_6 = mulLymm10_6;
assume red_6 = mulLymm10_6 && true;
smull mulH_7 red_7 ymm9_7 ymm0_7;
assert true && red_7 = mulLymm10_7;
assume red_7 = mulLymm10_7 && true;
smull mulH_8 red_8 ymm9_8 ymm0_8;
assert true && red_8 = mulLymm10_8;
assume red_8 = mulLymm10_8 && true;
smull mulH_9 red_9 ymm9_9 ymm0_9;
assert true && red_9 = mulLymm10_9;
assume red_9 = mulLymm10_9 && true;
smull mulH_a red_a ymm9_a ymm0_a;
assert true && red_a = mulLymm10_a;
assume red_a = mulLymm10_a && true;
smull mulH_b red_b ymm9_b ymm0_b;
assert true && red_b = mulLymm10_b;
assume red_b = mulLymm10_b && true;
smull mulH_c red_c ymm9_c ymm0_c;
assert true && red_c = mulLymm10_c;
assume red_c = mulLymm10_c && true;
smull mulH_d red_d ymm9_d ymm0_d;
assert true && red_d = mulLymm10_d;
assume red_d = mulLymm10_d && true;
smull mulH_e red_e ymm9_e ymm0_e;
assert true && red_e = mulLymm10_e;
assume red_e = mulLymm10_e && true;
smull mulH_f red_f ymm9_f ymm0_f;
assert true && red_f = mulLymm10_f;
assume red_f = mulLymm10_f && true;
mov ymm9_0 mulH_0;
mov ymm9_1 mulH_1;
mov ymm9_2 mulH_2;
mov ymm9_3 mulH_3;
mov ymm9_4 mulH_4;
mov ymm9_5 mulH_5;
mov ymm9_6 mulH_6;
mov ymm9_7 mulH_7;
mov ymm9_8 mulH_8;
mov ymm9_9 mulH_9;
mov ymm9_a mulH_a;
mov ymm9_b mulH_b;
mov ymm9_c mulH_c;
mov ymm9_d mulH_d;
mov ymm9_e mulH_e;
mov ymm9_f mulH_f;
(* vpsubw %ymm9,%ymm10,%ymm10                      #! PC = 0x555555558c3a *)
sub ymm10_0 ymm10_0 ymm9_0;
sub ymm10_1 ymm10_1 ymm9_1;
sub ymm10_2 ymm10_2 ymm9_2;
sub ymm10_3 ymm10_3 ymm9_3;
sub ymm10_4 ymm10_4 ymm9_4;
sub ymm10_5 ymm10_5 ymm9_5;
sub ymm10_6 ymm10_6 ymm9_6;
sub ymm10_7 ymm10_7 ymm9_7;
sub ymm10_8 ymm10_8 ymm9_8;
sub ymm10_9 ymm10_9 ymm9_9;
sub ymm10_a ymm10_a ymm9_a;
sub ymm10_b ymm10_b ymm9_b;
sub ymm10_c ymm10_c ymm9_c;
sub ymm10_d ymm10_d ymm9_d;
sub ymm10_e ymm10_e ymm9_e;
sub ymm10_f ymm10_f ymm9_f;
(* vpaddw %ymm3,%ymm7,%ymm9                        #! PC = 0x555555558c3f *)
add ymm9_0 ymm7_0 ymm3_0;
add ymm9_1 ymm7_1 ymm3_1;
add ymm9_2 ymm7_2 ymm3_2;
add ymm9_3 ymm7_3 ymm3_3;
add ymm9_4 ymm7_4 ymm3_4;
add ymm9_5 ymm7_5 ymm3_5;
add ymm9_6 ymm7_6 ymm3_6;
add ymm9_7 ymm7_7 ymm3_7;
add ymm9_8 ymm7_8 ymm3_8;
add ymm9_9 ymm7_9 ymm3_9;
add ymm9_a ymm7_a ymm3_a;
add ymm9_b ymm7_b ymm3_b;
add ymm9_c ymm7_c ymm3_c;
add ymm9_d ymm7_d ymm3_d;
add ymm9_e ymm7_e ymm3_e;
add ymm9_f ymm7_f ymm3_f;
(* vpsubw %ymm3,%ymm7,%ymm3                        #! PC = 0x555555558c43 *)
sub ymm3_0 ymm7_0 ymm3_0;
sub ymm3_1 ymm7_1 ymm3_1;
sub ymm3_2 ymm7_2 ymm3_2;
sub ymm3_3 ymm7_3 ymm3_3;
sub ymm3_4 ymm7_4 ymm3_4;
sub ymm3_5 ymm7_5 ymm3_5;
sub ymm3_6 ymm7_6 ymm3_6;
sub ymm3_7 ymm7_7 ymm3_7;
sub ymm3_8 ymm7_8 ymm3_8;
sub ymm3_9 ymm7_9 ymm3_9;
sub ymm3_a ymm7_a ymm3_a;
sub ymm3_b ymm7_b ymm3_b;
sub ymm3_c ymm7_c ymm3_c;
sub ymm3_d ymm7_d ymm3_d;
sub ymm3_e ymm7_e ymm3_e;
sub ymm3_f ymm7_f ymm3_f;
(* vpaddw %ymm6,%ymm5,%ymm7                        #! PC = 0x555555558c47 *)
add ymm7_0 ymm5_0 ymm6_0;
add ymm7_1 ymm5_1 ymm6_1;
add ymm7_2 ymm5_2 ymm6_2;
add ymm7_3 ymm5_3 ymm6_3;
add ymm7_4 ymm5_4 ymm6_4;
add ymm7_5 ymm5_5 ymm6_5;
add ymm7_6 ymm5_6 ymm6_6;
add ymm7_7 ymm5_7 ymm6_7;
add ymm7_8 ymm5_8 ymm6_8;
add ymm7_9 ymm5_9 ymm6_9;
add ymm7_a ymm5_a ymm6_a;
add ymm7_b ymm5_b ymm6_b;
add ymm7_c ymm5_c ymm6_c;
add ymm7_d ymm5_d ymm6_d;
add ymm7_e ymm5_e ymm6_e;
add ymm7_f ymm5_f ymm6_f;
(* vpsubw %ymm6,%ymm5,%ymm6                        #! PC = 0x555555558c4b *)
sub ymm6_0 ymm5_0 ymm6_0;
sub ymm6_1 ymm5_1 ymm6_1;
sub ymm6_2 ymm5_2 ymm6_2;
sub ymm6_3 ymm5_3 ymm6_3;
sub ymm6_4 ymm5_4 ymm6_4;
sub ymm6_5 ymm5_5 ymm6_5;
sub ymm6_6 ymm5_6 ymm6_6;
sub ymm6_7 ymm5_7 ymm6_7;
sub ymm6_8 ymm5_8 ymm6_8;
sub ymm6_9 ymm5_9 ymm6_9;
sub ymm6_a ymm5_a ymm6_a;
sub ymm6_b ymm5_b ymm6_b;
sub ymm6_c ymm5_c ymm6_c;
sub ymm6_d ymm5_d ymm6_d;
sub ymm6_e ymm5_e ymm6_e;
sub ymm6_f ymm5_f ymm6_f;
(* vpaddw %ymm8,%ymm4,%ymm5                        #! PC = 0x555555558c4f *)
add ymm5_0 ymm4_0 ymm8_0;
add ymm5_1 ymm4_1 ymm8_1;
add ymm5_2 ymm4_2 ymm8_2;
add ymm5_3 ymm4_3 ymm8_3;
add ymm5_4 ymm4_4 ymm8_4;
add ymm5_5 ymm4_5 ymm8_5;
add ymm5_6 ymm4_6 ymm8_6;
add ymm5_7 ymm4_7 ymm8_7;
add ymm5_8 ymm4_8 ymm8_8;
add ymm5_9 ymm4_9 ymm8_9;
add ymm5_a ymm4_a ymm8_a;
add ymm5_b ymm4_b ymm8_b;
add ymm5_c ymm4_c ymm8_c;
add ymm5_d ymm4_d ymm8_d;
add ymm5_e ymm4_e ymm8_e;
add ymm5_f ymm4_f ymm8_f;
(* vpsubw %ymm8,%ymm4,%ymm8                        #! PC = 0x555555558c54 *)
sub ymm8_0 ymm4_0 ymm8_0;
sub ymm8_1 ymm4_1 ymm8_1;
sub ymm8_2 ymm4_2 ymm8_2;
sub ymm8_3 ymm4_3 ymm8_3;
sub ymm8_4 ymm4_4 ymm8_4;
sub ymm8_5 ymm4_5 ymm8_5;
sub ymm8_6 ymm4_6 ymm8_6;
sub ymm8_7 ymm4_7 ymm8_7;
sub ymm8_8 ymm4_8 ymm8_8;
sub ymm8_9 ymm4_9 ymm8_9;
sub ymm8_a ymm4_a ymm8_a;
sub ymm8_b ymm4_b ymm8_b;
sub ymm8_c ymm4_c ymm8_c;
sub ymm8_d ymm4_d ymm8_d;
sub ymm8_e ymm4_e ymm8_e;
sub ymm8_f ymm4_f ymm8_f;
(* vpaddw %ymm11,%ymm10,%ymm4                      #! PC = 0x555555558c59 *)
add ymm4_0 ymm10_0 ymm11_0;
add ymm4_1 ymm10_1 ymm11_1;
add ymm4_2 ymm10_2 ymm11_2;
add ymm4_3 ymm10_3 ymm11_3;
add ymm4_4 ymm10_4 ymm11_4;
add ymm4_5 ymm10_5 ymm11_5;
add ymm4_6 ymm10_6 ymm11_6;
add ymm4_7 ymm10_7 ymm11_7;
add ymm4_8 ymm10_8 ymm11_8;
add ymm4_9 ymm10_9 ymm11_9;
add ymm4_a ymm10_a ymm11_a;
add ymm4_b ymm10_b ymm11_b;
add ymm4_c ymm10_c ymm11_c;
add ymm4_d ymm10_d ymm11_d;
add ymm4_e ymm10_e ymm11_e;
add ymm4_f ymm10_f ymm11_f;
(* vpsubw %ymm11,%ymm10,%ymm11                     #! PC = 0x555555558c5e *)
sub ymm11_0 ymm10_0 ymm11_0;
sub ymm11_1 ymm10_1 ymm11_1;
sub ymm11_2 ymm10_2 ymm11_2;
sub ymm11_3 ymm10_3 ymm11_3;
sub ymm11_4 ymm10_4 ymm11_4;
sub ymm11_5 ymm10_5 ymm11_5;
sub ymm11_6 ymm10_6 ymm11_6;
sub ymm11_7 ymm10_7 ymm11_7;
sub ymm11_8 ymm10_8 ymm11_8;
sub ymm11_9 ymm10_9 ymm11_9;
sub ymm11_a ymm10_a ymm11_a;
sub ymm11_b ymm10_b ymm11_b;
sub ymm11_c ymm10_c ymm11_c;
sub ymm11_d ymm10_d ymm11_d;
sub ymm11_e ymm10_e ymm11_e;
sub ymm11_f ymm10_f ymm11_f;


(**************** LEVELS 3-5, 4 *****************)


(**************** CUT 153, 14 *****************)

rcut 
  and [
(-12852)@16<=s ymm9_0,ymm9_0<=s 12852@16,(-12852)@16<=s ymm9_1,ymm9_1<=s 12852@16,
(-12852)@16<=s ymm9_2,ymm9_2<=s 12852@16,(-12852)@16<=s ymm9_3,ymm9_3<=s 12852@16,
(-12852)@16<=s ymm9_4,ymm9_4<=s 12852@16,(-12852)@16<=s ymm9_5,ymm9_5<=s 12852@16,
(-12852)@16<=s ymm9_6,ymm9_6<=s 12852@16,(-12852)@16<=s ymm9_7,ymm9_7<=s 12852@16,
(-12852)@16<=s ymm9_8,ymm9_8<=s 12852@16,(-12852)@16<=s ymm9_9,ymm9_9<=s 12852@16,
(-12852)@16<=s ymm9_a,ymm9_a<=s 12852@16,(-12852)@16<=s ymm9_b,ymm9_b<=s 12852@16,
(-12852)@16<=s ymm9_c,ymm9_c<=s 12852@16,(-12852)@16<=s ymm9_d,ymm9_d<=s 12852@16,
(-12852)@16<=s ymm9_e,ymm9_e<=s 12852@16,(-12852)@16<=s ymm9_f,ymm9_f<=s 12852@16,
(-12852)@16<=s ymm3_0,ymm3_0<=s 12852@16,(-12852)@16<=s ymm3_1,ymm3_1<=s 12852@16,
(-12852)@16<=s ymm3_2,ymm3_2<=s 12852@16,(-12852)@16<=s ymm3_3,ymm3_3<=s 12852@16,
(-12852)@16<=s ymm3_4,ymm3_4<=s 12852@16,(-12852)@16<=s ymm3_5,ymm3_5<=s 12852@16,
(-12852)@16<=s ymm3_6,ymm3_6<=s 12852@16,(-12852)@16<=s ymm3_7,ymm3_7<=s 12852@16,
(-12852)@16<=s ymm3_8,ymm3_8<=s 12852@16,(-12852)@16<=s ymm3_9,ymm3_9<=s 12852@16,
(-12852)@16<=s ymm3_a,ymm3_a<=s 12852@16,(-12852)@16<=s ymm3_b,ymm3_b<=s 12852@16,
(-12852)@16<=s ymm3_c,ymm3_c<=s 12852@16,(-12852)@16<=s ymm3_d,ymm3_d<=s 12852@16,
(-12852)@16<=s ymm3_e,ymm3_e<=s 12852@16,(-12852)@16<=s ymm3_f,ymm3_f<=s 12852@16,
(-11572)@16<=s ymm7_0,ymm7_0<=s 11572@16,(-11572)@16<=s ymm7_1,ymm7_1<=s 11572@16,
(-11572)@16<=s ymm7_2,ymm7_2<=s 11572@16,(-11572)@16<=s ymm7_3,ymm7_3<=s 11572@16,
(-11572)@16<=s ymm7_4,ymm7_4<=s 11572@16,(-11572)@16<=s ymm7_5,ymm7_5<=s 11572@16,
(-11572)@16<=s ymm7_6,ymm7_6<=s 11572@16,(-11572)@16<=s ymm7_7,ymm7_7<=s 11572@16,
(-11572)@16<=s ymm7_8,ymm7_8<=s 11572@16,(-11572)@16<=s ymm7_9,ymm7_9<=s 11572@16,
(-11572)@16<=s ymm7_a,ymm7_a<=s 11572@16,(-11572)@16<=s ymm7_b,ymm7_b<=s 11572@16,
(-11572)@16<=s ymm7_c,ymm7_c<=s 11572@16,(-11572)@16<=s ymm7_d,ymm7_d<=s 11572@16,
(-11572)@16<=s ymm7_e,ymm7_e<=s 11572@16,(-11572)@16<=s ymm7_f,ymm7_f<=s 11572@16,
(-11572)@16<=s ymm6_0,ymm6_0<=s 11572@16,(-11572)@16<=s ymm6_1,ymm6_1<=s 11572@16,
(-11572)@16<=s ymm6_2,ymm6_2<=s 11572@16,(-11572)@16<=s ymm6_3,ymm6_3<=s 11572@16,
(-11572)@16<=s ymm6_4,ymm6_4<=s 11572@16,(-11572)@16<=s ymm6_5,ymm6_5<=s 11572@16,
(-11572)@16<=s ymm6_6,ymm6_6<=s 11572@16,(-11572)@16<=s ymm6_7,ymm6_7<=s 11572@16,
(-11572)@16<=s ymm6_8,ymm6_8<=s 11572@16,(-11572)@16<=s ymm6_9,ymm6_9<=s 11572@16,
(-11572)@16<=s ymm6_a,ymm6_a<=s 11572@16,(-11572)@16<=s ymm6_b,ymm6_b<=s 11572@16,
(-11572)@16<=s ymm6_c,ymm6_c<=s 11572@16,(-11572)@16<=s ymm6_d,ymm6_d<=s 11572@16,
(-11572)@16<=s ymm6_e,ymm6_e<=s 11572@16,(-11572)@16<=s ymm6_f,ymm6_f<=s 11572@16,
(-12858)@16<=s ymm5_0,ymm5_0<=s 12858@16,(-12858)@16<=s ymm5_1,ymm5_1<=s 12858@16,
(-12858)@16<=s ymm5_2,ymm5_2<=s 12858@16,(-12858)@16<=s ymm5_3,ymm5_3<=s 12858@16,
(-12858)@16<=s ymm5_4,ymm5_4<=s 12858@16,(-12858)@16<=s ymm5_5,ymm5_5<=s 12858@16,
(-12858)@16<=s ymm5_6,ymm5_6<=s 12858@16,(-12858)@16<=s ymm5_7,ymm5_7<=s 12858@16,
(-12858)@16<=s ymm5_8,ymm5_8<=s 12858@16,(-12858)@16<=s ymm5_9,ymm5_9<=s 12858@16,
(-12858)@16<=s ymm5_a,ymm5_a<=s 12858@16,(-12858)@16<=s ymm5_b,ymm5_b<=s 12858@16,
(-12858)@16<=s ymm5_c,ymm5_c<=s 12858@16,(-12858)@16<=s ymm5_d,ymm5_d<=s 12858@16,
(-12858)@16<=s ymm5_e,ymm5_e<=s 12858@16,(-12858)@16<=s ymm5_f,ymm5_f<=s 12858@16,
(-12858)@16<=s ymm8_0,ymm8_0<=s 12858@16,(-12858)@16<=s ymm8_1,ymm8_1<=s 12858@16,
(-12858)@16<=s ymm8_2,ymm8_2<=s 12858@16,(-12858)@16<=s ymm8_3,ymm8_3<=s 12858@16,
(-12858)@16<=s ymm8_4,ymm8_4<=s 12858@16,(-12858)@16<=s ymm8_5,ymm8_5<=s 12858@16,
(-12858)@16<=s ymm8_6,ymm8_6<=s 12858@16,(-12858)@16<=s ymm8_7,ymm8_7<=s 12858@16,
(-12858)@16<=s ymm8_8,ymm8_8<=s 12858@16,(-12858)@16<=s ymm8_9,ymm8_9<=s 12858@16,
(-12858)@16<=s ymm8_a,ymm8_a<=s 12858@16,(-12858)@16<=s ymm8_b,ymm8_b<=s 12858@16,
(-12858)@16<=s ymm8_c,ymm8_c<=s 12858@16,(-12858)@16<=s ymm8_d,ymm8_d<=s 12858@16,
(-12858)@16<=s ymm8_e,ymm8_e<=s 12858@16,(-12858)@16<=s ymm8_f,ymm8_f<=s 12858@16,
(-12514)@16<=s ymm4_0,ymm4_0<=s 12514@16,(-12514)@16<=s ymm4_1,ymm4_1<=s 12514@16,
(-12514)@16<=s ymm4_2,ymm4_2<=s 12514@16,(-12514)@16<=s ymm4_3,ymm4_3<=s 12514@16,
(-12514)@16<=s ymm4_4,ymm4_4<=s 12514@16,(-12514)@16<=s ymm4_5,ymm4_5<=s 12514@16,
(-12514)@16<=s ymm4_6,ymm4_6<=s 12514@16,(-12514)@16<=s ymm4_7,ymm4_7<=s 12514@16,
(-12514)@16<=s ymm4_8,ymm4_8<=s 12514@16,(-12514)@16<=s ymm4_9,ymm4_9<=s 12514@16,
(-12514)@16<=s ymm4_a,ymm4_a<=s 12514@16,(-12514)@16<=s ymm4_b,ymm4_b<=s 12514@16,
(-12514)@16<=s ymm4_c,ymm4_c<=s 12514@16,(-12514)@16<=s ymm4_d,ymm4_d<=s 12514@16,
(-12514)@16<=s ymm4_e,ymm4_e<=s 12514@16,(-12514)@16<=s ymm4_f,ymm4_f<=s 12514@16,
(-12514)@16<=s ymm11_0,ymm11_0<=s 12514@16,(-12514)@16<=s ymm11_1,ymm11_1<=s 12514@16,
(-12514)@16<=s ymm11_2,ymm11_2<=s 12514@16,(-12514)@16<=s ymm11_3,ymm11_3<=s 12514@16,
(-12514)@16<=s ymm11_4,ymm11_4<=s 12514@16,(-12514)@16<=s ymm11_5,ymm11_5<=s 12514@16,
(-12514)@16<=s ymm11_6,ymm11_6<=s 12514@16,(-12514)@16<=s ymm11_7,ymm11_7<=s 12514@16,
(-12514)@16<=s ymm11_8,ymm11_8<=s 12514@16,(-12514)@16<=s ymm11_9,ymm11_9<=s 12514@16,
(-12514)@16<=s ymm11_a,ymm11_a<=s 12514@16,(-12514)@16<=s ymm11_b,ymm11_b<=s 12514@16,
(-12514)@16<=s ymm11_c,ymm11_c<=s 12514@16,(-12514)@16<=s ymm11_d,ymm11_d<=s 12514@16,
(-12514)@16<=s ymm11_e,ymm11_e<=s 12514@16,(-12514)@16<=s ymm11_f,ymm11_f<=s 12514@16
] prove with [ all ghosts, cuts [ 0 ] ];



(* vmovdqa 0x8475(%rip),%ymm1        # 0x5555555610e0 <nttmul_idxdata+64>#! EA = L0x5555555610e0; Value = 0x0d0c090805040100; PC = 0x555555558c63 *)
mov ymm1_0 L0x5555555610e0;
mov ymm1_1 L0x5555555610e2;
mov ymm1_2 L0x5555555610e4;
mov ymm1_3 L0x5555555610e6;
mov ymm1_4 L0x5555555610e8;
mov ymm1_5 L0x5555555610ea;
mov ymm1_6 L0x5555555610ec;
mov ymm1_7 L0x5555555610ee;
mov ymm1_8 L0x5555555610f0;
mov ymm1_9 L0x5555555610f2;
mov ymm1_a L0x5555555610f4;
mov ymm1_b L0x5555555610f6;
mov ymm1_c L0x5555555610f8;
mov ymm1_d L0x5555555610fa;
mov ymm1_e L0x5555555610fc;
mov ymm1_f L0x5555555610fe;
(* vpshufb %ymm1,%ymm9,%ymm9                       #! PC = 0x555555558c6b *)
assert true && ymm1_0 = 0x0100@16;
mov shuf_0 ymm9_0;
assert true && ymm1_1 = 0x0504@16;
mov shuf_1 ymm9_2;
assert true && ymm1_2 = 0x0908@16;
mov shuf_2 ymm9_4;
assert true && ymm1_3 = 0x0d0c@16;
mov shuf_3 ymm9_6;
assert true && ymm1_4 = 0x0302@16;
mov shuf_4 ymm9_1;
assert true && ymm1_5 = 0x0706@16;
mov shuf_5 ymm9_3;
assert true && ymm1_6 = 0x0b0a@16;
mov shuf_6 ymm9_5;
assert true && ymm1_7 = 0x0f0e@16;
mov shuf_7 ymm9_7;
assert true && ymm1_8 = 0x0100@16;
mov shuf_8 ymm9_8;
assert true && ymm1_9 = 0x0504@16;
mov shuf_9 ymm9_a;
assert true && ymm1_a = 0x0908@16;
mov shuf_a ymm9_c;
assert true && ymm1_b = 0x0d0c@16;
mov shuf_b ymm9_e;
assert true && ymm1_c = 0x0302@16;
mov shuf_c ymm9_9;
assert true && ymm1_d = 0x0706@16;
mov shuf_d ymm9_b;
assert true && ymm1_e = 0x0b0a@16;
mov shuf_e ymm9_d;
assert true && ymm1_f = 0x0f0e@16;
mov shuf_f ymm9_f;
mov ymm9_0 shuf_0;
mov ymm9_1 shuf_1;
mov ymm9_2 shuf_2;
mov ymm9_3 shuf_3;
mov ymm9_4 shuf_4;
mov ymm9_5 shuf_5;
mov ymm9_6 shuf_6;
mov ymm9_7 shuf_7;
mov ymm9_8 shuf_8;
mov ymm9_9 shuf_9;
mov ymm9_a shuf_a;
mov ymm9_b shuf_b;
mov ymm9_c shuf_c;
mov ymm9_d shuf_d;
mov ymm9_e shuf_e;
mov ymm9_f shuf_f;
(* vpermq $0xd8,%ymm9,%ymm9                        #! PC = 0x555555558c70 *)
mov permq_0 ymm9_0;
mov permq_1 ymm9_1;
mov permq_2 ymm9_2;
mov permq_3 ymm9_3;
mov permq_4 ymm9_8;
mov permq_5 ymm9_9;
mov permq_6 ymm9_a;
mov permq_7 ymm9_b;
mov permq_8 ymm9_4;
mov permq_9 ymm9_5;
mov permq_a ymm9_6;
mov permq_b ymm9_7;
mov permq_c ymm9_c;
mov permq_d ymm9_d;
mov permq_e ymm9_e;
mov permq_f ymm9_f;
mov ymm9_0 permq_0;
mov ymm9_1 permq_1;
mov ymm9_2 permq_2;
mov ymm9_3 permq_3;
mov ymm9_4 permq_4;
mov ymm9_5 permq_5;
mov ymm9_6 permq_6;
mov ymm9_7 permq_7;
mov ymm9_8 permq_8;
mov ymm9_9 permq_9;
mov ymm9_a permq_a;
mov ymm9_b permq_b;
mov ymm9_c permq_c;
mov ymm9_d permq_d;
mov ymm9_e permq_e;
mov ymm9_f permq_f;
(* vpshufb %ymm1,%ymm3,%ymm3                       #! PC = 0x555555558c76 *)
assert true && ymm1_0 = 0x0100@16;
mov shuf_0 ymm3_0;
assert true && ymm1_1 = 0x0504@16;
mov shuf_1 ymm3_2;
assert true && ymm1_2 = 0x0908@16;
mov shuf_2 ymm3_4;
assert true && ymm1_3 = 0x0d0c@16;
mov shuf_3 ymm3_6;
assert true && ymm1_4 = 0x0302@16;
mov shuf_4 ymm3_1;
assert true && ymm1_5 = 0x0706@16;
mov shuf_5 ymm3_3;
assert true && ymm1_6 = 0x0b0a@16;
mov shuf_6 ymm3_5;
assert true && ymm1_7 = 0x0f0e@16;
mov shuf_7 ymm3_7;
assert true && ymm1_8 = 0x0100@16;
mov shuf_8 ymm3_8;
assert true && ymm1_9 = 0x0504@16;
mov shuf_9 ymm3_a;
assert true && ymm1_a = 0x0908@16;
mov shuf_a ymm3_c;
assert true && ymm1_b = 0x0d0c@16;
mov shuf_b ymm3_e;
assert true && ymm1_c = 0x0302@16;
mov shuf_c ymm3_9;
assert true && ymm1_d = 0x0706@16;
mov shuf_d ymm3_b;
assert true && ymm1_e = 0x0b0a@16;
mov shuf_e ymm3_d;
assert true && ymm1_f = 0x0f0e@16;
mov shuf_f ymm3_f;
mov ymm3_0 shuf_0;
mov ymm3_1 shuf_1;
mov ymm3_2 shuf_2;
mov ymm3_3 shuf_3;
mov ymm3_4 shuf_4;
mov ymm3_5 shuf_5;
mov ymm3_6 shuf_6;
mov ymm3_7 shuf_7;
mov ymm3_8 shuf_8;
mov ymm3_9 shuf_9;
mov ymm3_a shuf_a;
mov ymm3_b shuf_b;
mov ymm3_c shuf_c;
mov ymm3_d shuf_d;
mov ymm3_e shuf_e;
mov ymm3_f shuf_f;
(* vpermq $0xd8,%ymm3,%ymm3                        #! PC = 0x555555558c7b *)
mov permq_0 ymm3_0;
mov permq_1 ymm3_1;
mov permq_2 ymm3_2;
mov permq_3 ymm3_3;
mov permq_4 ymm3_8;
mov permq_5 ymm3_9;
mov permq_6 ymm3_a;
mov permq_7 ymm3_b;
mov permq_8 ymm3_4;
mov permq_9 ymm3_5;
mov permq_a ymm3_6;
mov permq_b ymm3_7;
mov permq_c ymm3_c;
mov permq_d ymm3_d;
mov permq_e ymm3_e;
mov permq_f ymm3_f;
mov ymm3_0 permq_0;
mov ymm3_1 permq_1;
mov ymm3_2 permq_2;
mov ymm3_3 permq_3;
mov ymm3_4 permq_4;
mov ymm3_5 permq_5;
mov ymm3_6 permq_6;
mov ymm3_7 permq_7;
mov ymm3_8 permq_8;
mov ymm3_9 permq_9;
mov ymm3_a permq_a;
mov ymm3_b permq_b;
mov ymm3_c permq_c;
mov ymm3_d permq_d;
mov ymm3_e permq_e;
mov ymm3_f permq_f;
(* vpshufb %ymm1,%ymm7,%ymm7                       #! PC = 0x555555558c81 *)
assert true && ymm1_0 = 0x0100@16;
mov shuf_0 ymm7_0;
assert true && ymm1_1 = 0x0504@16;
mov shuf_1 ymm7_2;
assert true && ymm1_2 = 0x0908@16;
mov shuf_2 ymm7_4;
assert true && ymm1_3 = 0x0d0c@16;
mov shuf_3 ymm7_6;
assert true && ymm1_4 = 0x0302@16;
mov shuf_4 ymm7_1;
assert true && ymm1_5 = 0x0706@16;
mov shuf_5 ymm7_3;
assert true && ymm1_6 = 0x0b0a@16;
mov shuf_6 ymm7_5;
assert true && ymm1_7 = 0x0f0e@16;
mov shuf_7 ymm7_7;
assert true && ymm1_8 = 0x0100@16;
mov shuf_8 ymm7_8;
assert true && ymm1_9 = 0x0504@16;
mov shuf_9 ymm7_a;
assert true && ymm1_a = 0x0908@16;
mov shuf_a ymm7_c;
assert true && ymm1_b = 0x0d0c@16;
mov shuf_b ymm7_e;
assert true && ymm1_c = 0x0302@16;
mov shuf_c ymm7_9;
assert true && ymm1_d = 0x0706@16;
mov shuf_d ymm7_b;
assert true && ymm1_e = 0x0b0a@16;
mov shuf_e ymm7_d;
assert true && ymm1_f = 0x0f0e@16;
mov shuf_f ymm7_f;
mov ymm7_0 shuf_0;
mov ymm7_1 shuf_1;
mov ymm7_2 shuf_2;
mov ymm7_3 shuf_3;
mov ymm7_4 shuf_4;
mov ymm7_5 shuf_5;
mov ymm7_6 shuf_6;
mov ymm7_7 shuf_7;
mov ymm7_8 shuf_8;
mov ymm7_9 shuf_9;
mov ymm7_a shuf_a;
mov ymm7_b shuf_b;
mov ymm7_c shuf_c;
mov ymm7_d shuf_d;
mov ymm7_e shuf_e;
mov ymm7_f shuf_f;
(* vpermq $0xd8,%ymm7,%ymm7                        #! PC = 0x555555558c86 *)
mov permq_0 ymm7_0;
mov permq_1 ymm7_1;
mov permq_2 ymm7_2;
mov permq_3 ymm7_3;
mov permq_4 ymm7_8;
mov permq_5 ymm7_9;
mov permq_6 ymm7_a;
mov permq_7 ymm7_b;
mov permq_8 ymm7_4;
mov permq_9 ymm7_5;
mov permq_a ymm7_6;
mov permq_b ymm7_7;
mov permq_c ymm7_c;
mov permq_d ymm7_d;
mov permq_e ymm7_e;
mov permq_f ymm7_f;
mov ymm7_0 permq_0;
mov ymm7_1 permq_1;
mov ymm7_2 permq_2;
mov ymm7_3 permq_3;
mov ymm7_4 permq_4;
mov ymm7_5 permq_5;
mov ymm7_6 permq_6;
mov ymm7_7 permq_7;
mov ymm7_8 permq_8;
mov ymm7_9 permq_9;
mov ymm7_a permq_a;
mov ymm7_b permq_b;
mov ymm7_c permq_c;
mov ymm7_d permq_d;
mov ymm7_e permq_e;
mov ymm7_f permq_f;
(* vpshufb %ymm1,%ymm6,%ymm6                       #! PC = 0x555555558c8c *)
assert true && ymm1_0 = 0x0100@16;
mov shuf_0 ymm6_0;
assert true && ymm1_1 = 0x0504@16;
mov shuf_1 ymm6_2;
assert true && ymm1_2 = 0x0908@16;
mov shuf_2 ymm6_4;
assert true && ymm1_3 = 0x0d0c@16;
mov shuf_3 ymm6_6;
assert true && ymm1_4 = 0x0302@16;
mov shuf_4 ymm6_1;
assert true && ymm1_5 = 0x0706@16;
mov shuf_5 ymm6_3;
assert true && ymm1_6 = 0x0b0a@16;
mov shuf_6 ymm6_5;
assert true && ymm1_7 = 0x0f0e@16;
mov shuf_7 ymm6_7;
assert true && ymm1_8 = 0x0100@16;
mov shuf_8 ymm6_8;
assert true && ymm1_9 = 0x0504@16;
mov shuf_9 ymm6_a;
assert true && ymm1_a = 0x0908@16;
mov shuf_a ymm6_c;
assert true && ymm1_b = 0x0d0c@16;
mov shuf_b ymm6_e;
assert true && ymm1_c = 0x0302@16;
mov shuf_c ymm6_9;
assert true && ymm1_d = 0x0706@16;
mov shuf_d ymm6_b;
assert true && ymm1_e = 0x0b0a@16;
mov shuf_e ymm6_d;
assert true && ymm1_f = 0x0f0e@16;
mov shuf_f ymm6_f;
mov ymm6_0 shuf_0;
mov ymm6_1 shuf_1;
mov ymm6_2 shuf_2;
mov ymm6_3 shuf_3;
mov ymm6_4 shuf_4;
mov ymm6_5 shuf_5;
mov ymm6_6 shuf_6;
mov ymm6_7 shuf_7;
mov ymm6_8 shuf_8;
mov ymm6_9 shuf_9;
mov ymm6_a shuf_a;
mov ymm6_b shuf_b;
mov ymm6_c shuf_c;
mov ymm6_d shuf_d;
mov ymm6_e shuf_e;
mov ymm6_f shuf_f;
(* vpermq $0xd8,%ymm6,%ymm6                        #! PC = 0x555555558c91 *)
mov permq_0 ymm6_0;
mov permq_1 ymm6_1;
mov permq_2 ymm6_2;
mov permq_3 ymm6_3;
mov permq_4 ymm6_8;
mov permq_5 ymm6_9;
mov permq_6 ymm6_a;
mov permq_7 ymm6_b;
mov permq_8 ymm6_4;
mov permq_9 ymm6_5;
mov permq_a ymm6_6;
mov permq_b ymm6_7;
mov permq_c ymm6_c;
mov permq_d ymm6_d;
mov permq_e ymm6_e;
mov permq_f ymm6_f;
mov ymm6_0 permq_0;
mov ymm6_1 permq_1;
mov ymm6_2 permq_2;
mov ymm6_3 permq_3;
mov ymm6_4 permq_4;
mov ymm6_5 permq_5;
mov ymm6_6 permq_6;
mov ymm6_7 permq_7;
mov ymm6_8 permq_8;
mov ymm6_9 permq_9;
mov ymm6_a permq_a;
mov ymm6_b permq_b;
mov ymm6_c permq_c;
mov ymm6_d permq_d;
mov ymm6_e permq_e;
mov ymm6_f permq_f;
(* vpshufb %ymm1,%ymm5,%ymm5                       #! PC = 0x555555558c97 *)
assert true && ymm1_0 = 0x0100@16;
mov shuf_0 ymm5_0;
assert true && ymm1_1 = 0x0504@16;
mov shuf_1 ymm5_2;
assert true && ymm1_2 = 0x0908@16;
mov shuf_2 ymm5_4;
assert true && ymm1_3 = 0x0d0c@16;
mov shuf_3 ymm5_6;
assert true && ymm1_4 = 0x0302@16;
mov shuf_4 ymm5_1;
assert true && ymm1_5 = 0x0706@16;
mov shuf_5 ymm5_3;
assert true && ymm1_6 = 0x0b0a@16;
mov shuf_6 ymm5_5;
assert true && ymm1_7 = 0x0f0e@16;
mov shuf_7 ymm5_7;
assert true && ymm1_8 = 0x0100@16;
mov shuf_8 ymm5_8;
assert true && ymm1_9 = 0x0504@16;
mov shuf_9 ymm5_a;
assert true && ymm1_a = 0x0908@16;
mov shuf_a ymm5_c;
assert true && ymm1_b = 0x0d0c@16;
mov shuf_b ymm5_e;
assert true && ymm1_c = 0x0302@16;
mov shuf_c ymm5_9;
assert true && ymm1_d = 0x0706@16;
mov shuf_d ymm5_b;
assert true && ymm1_e = 0x0b0a@16;
mov shuf_e ymm5_d;
assert true && ymm1_f = 0x0f0e@16;
mov shuf_f ymm5_f;
mov ymm5_0 shuf_0;
mov ymm5_1 shuf_1;
mov ymm5_2 shuf_2;
mov ymm5_3 shuf_3;
mov ymm5_4 shuf_4;
mov ymm5_5 shuf_5;
mov ymm5_6 shuf_6;
mov ymm5_7 shuf_7;
mov ymm5_8 shuf_8;
mov ymm5_9 shuf_9;
mov ymm5_a shuf_a;
mov ymm5_b shuf_b;
mov ymm5_c shuf_c;
mov ymm5_d shuf_d;
mov ymm5_e shuf_e;
mov ymm5_f shuf_f;
(* vpermq $0xd8,%ymm5,%ymm5                        #! PC = 0x555555558c9c *)
mov permq_0 ymm5_0;
mov permq_1 ymm5_1;
mov permq_2 ymm5_2;
mov permq_3 ymm5_3;
mov permq_4 ymm5_8;
mov permq_5 ymm5_9;
mov permq_6 ymm5_a;
mov permq_7 ymm5_b;
mov permq_8 ymm5_4;
mov permq_9 ymm5_5;
mov permq_a ymm5_6;
mov permq_b ymm5_7;
mov permq_c ymm5_c;
mov permq_d ymm5_d;
mov permq_e ymm5_e;
mov permq_f ymm5_f;
mov ymm5_0 permq_0;
mov ymm5_1 permq_1;
mov ymm5_2 permq_2;
mov ymm5_3 permq_3;
mov ymm5_4 permq_4;
mov ymm5_5 permq_5;
mov ymm5_6 permq_6;
mov ymm5_7 permq_7;
mov ymm5_8 permq_8;
mov ymm5_9 permq_9;
mov ymm5_a permq_a;
mov ymm5_b permq_b;
mov ymm5_c permq_c;
mov ymm5_d permq_d;
mov ymm5_e permq_e;
mov ymm5_f permq_f;
(* vpshufb %ymm1,%ymm8,%ymm8                       #! PC = 0x555555558ca2 *)
assert true && ymm1_0 = 0x0100@16;
mov shuf_0 ymm8_0;
assert true && ymm1_1 = 0x0504@16;
mov shuf_1 ymm8_2;
assert true && ymm1_2 = 0x0908@16;
mov shuf_2 ymm8_4;
assert true && ymm1_3 = 0x0d0c@16;
mov shuf_3 ymm8_6;
assert true && ymm1_4 = 0x0302@16;
mov shuf_4 ymm8_1;
assert true && ymm1_5 = 0x0706@16;
mov shuf_5 ymm8_3;
assert true && ymm1_6 = 0x0b0a@16;
mov shuf_6 ymm8_5;
assert true && ymm1_7 = 0x0f0e@16;
mov shuf_7 ymm8_7;
assert true && ymm1_8 = 0x0100@16;
mov shuf_8 ymm8_8;
assert true && ymm1_9 = 0x0504@16;
mov shuf_9 ymm8_a;
assert true && ymm1_a = 0x0908@16;
mov shuf_a ymm8_c;
assert true && ymm1_b = 0x0d0c@16;
mov shuf_b ymm8_e;
assert true && ymm1_c = 0x0302@16;
mov shuf_c ymm8_9;
assert true && ymm1_d = 0x0706@16;
mov shuf_d ymm8_b;
assert true && ymm1_e = 0x0b0a@16;
mov shuf_e ymm8_d;
assert true && ymm1_f = 0x0f0e@16;
mov shuf_f ymm8_f;
mov ymm8_0 shuf_0;
mov ymm8_1 shuf_1;
mov ymm8_2 shuf_2;
mov ymm8_3 shuf_3;
mov ymm8_4 shuf_4;
mov ymm8_5 shuf_5;
mov ymm8_6 shuf_6;
mov ymm8_7 shuf_7;
mov ymm8_8 shuf_8;
mov ymm8_9 shuf_9;
mov ymm8_a shuf_a;
mov ymm8_b shuf_b;
mov ymm8_c shuf_c;
mov ymm8_d shuf_d;
mov ymm8_e shuf_e;
mov ymm8_f shuf_f;
(* vpermq $0xd8,%ymm8,%ymm8                        #! PC = 0x555555558ca7 *)
mov permq_0 ymm8_0;
mov permq_1 ymm8_1;
mov permq_2 ymm8_2;
mov permq_3 ymm8_3;
mov permq_4 ymm8_8;
mov permq_5 ymm8_9;
mov permq_6 ymm8_a;
mov permq_7 ymm8_b;
mov permq_8 ymm8_4;
mov permq_9 ymm8_5;
mov permq_a ymm8_6;
mov permq_b ymm8_7;
mov permq_c ymm8_c;
mov permq_d ymm8_d;
mov permq_e ymm8_e;
mov permq_f ymm8_f;
mov ymm8_0 permq_0;
mov ymm8_1 permq_1;
mov ymm8_2 permq_2;
mov ymm8_3 permq_3;
mov ymm8_4 permq_4;
mov ymm8_5 permq_5;
mov ymm8_6 permq_6;
mov ymm8_7 permq_7;
mov ymm8_8 permq_8;
mov ymm8_9 permq_9;
mov ymm8_a permq_a;
mov ymm8_b permq_b;
mov ymm8_c permq_c;
mov ymm8_d permq_d;
mov ymm8_e permq_e;
mov ymm8_f permq_f;
(* vpshufb %ymm1,%ymm4,%ymm4                       #! PC = 0x555555558cad *)
assert true && ymm1_0 = 0x0100@16;
mov shuf_0 ymm4_0;
assert true && ymm1_1 = 0x0504@16;
mov shuf_1 ymm4_2;
assert true && ymm1_2 = 0x0908@16;
mov shuf_2 ymm4_4;
assert true && ymm1_3 = 0x0d0c@16;
mov shuf_3 ymm4_6;
assert true && ymm1_4 = 0x0302@16;
mov shuf_4 ymm4_1;
assert true && ymm1_5 = 0x0706@16;
mov shuf_5 ymm4_3;
assert true && ymm1_6 = 0x0b0a@16;
mov shuf_6 ymm4_5;
assert true && ymm1_7 = 0x0f0e@16;
mov shuf_7 ymm4_7;
assert true && ymm1_8 = 0x0100@16;
mov shuf_8 ymm4_8;
assert true && ymm1_9 = 0x0504@16;
mov shuf_9 ymm4_a;
assert true && ymm1_a = 0x0908@16;
mov shuf_a ymm4_c;
assert true && ymm1_b = 0x0d0c@16;
mov shuf_b ymm4_e;
assert true && ymm1_c = 0x0302@16;
mov shuf_c ymm4_9;
assert true && ymm1_d = 0x0706@16;
mov shuf_d ymm4_b;
assert true && ymm1_e = 0x0b0a@16;
mov shuf_e ymm4_d;
assert true && ymm1_f = 0x0f0e@16;
mov shuf_f ymm4_f;
mov ymm4_0 shuf_0;
mov ymm4_1 shuf_1;
mov ymm4_2 shuf_2;
mov ymm4_3 shuf_3;
mov ymm4_4 shuf_4;
mov ymm4_5 shuf_5;
mov ymm4_6 shuf_6;
mov ymm4_7 shuf_7;
mov ymm4_8 shuf_8;
mov ymm4_9 shuf_9;
mov ymm4_a shuf_a;
mov ymm4_b shuf_b;
mov ymm4_c shuf_c;
mov ymm4_d shuf_d;
mov ymm4_e shuf_e;
mov ymm4_f shuf_f;
(* vpermq $0xd8,%ymm4,%ymm4                        #! PC = 0x555555558cb2 *)
mov permq_0 ymm4_0;
mov permq_1 ymm4_1;
mov permq_2 ymm4_2;
mov permq_3 ymm4_3;
mov permq_4 ymm4_8;
mov permq_5 ymm4_9;
mov permq_6 ymm4_a;
mov permq_7 ymm4_b;
mov permq_8 ymm4_4;
mov permq_9 ymm4_5;
mov permq_a ymm4_6;
mov permq_b ymm4_7;
mov permq_c ymm4_c;
mov permq_d ymm4_d;
mov permq_e ymm4_e;
mov permq_f ymm4_f;
mov ymm4_0 permq_0;
mov ymm4_1 permq_1;
mov ymm4_2 permq_2;
mov ymm4_3 permq_3;
mov ymm4_4 permq_4;
mov ymm4_5 permq_5;
mov ymm4_6 permq_6;
mov ymm4_7 permq_7;
mov ymm4_8 permq_8;
mov ymm4_9 permq_9;
mov ymm4_a permq_a;
mov ymm4_b permq_b;
mov ymm4_c permq_c;
mov ymm4_d permq_d;
mov ymm4_e permq_e;
mov ymm4_f permq_f;
(* vpshufb %ymm1,%ymm11,%ymm11                     #! PC = 0x555555558cb8 *)
assert true && ymm1_0 = 0x0100@16;
mov shuf_0 ymm11_0;
assert true && ymm1_1 = 0x0504@16;
mov shuf_1 ymm11_2;
assert true && ymm1_2 = 0x0908@16;
mov shuf_2 ymm11_4;
assert true && ymm1_3 = 0x0d0c@16;
mov shuf_3 ymm11_6;
assert true && ymm1_4 = 0x0302@16;
mov shuf_4 ymm11_1;
assert true && ymm1_5 = 0x0706@16;
mov shuf_5 ymm11_3;
assert true && ymm1_6 = 0x0b0a@16;
mov shuf_6 ymm11_5;
assert true && ymm1_7 = 0x0f0e@16;
mov shuf_7 ymm11_7;
assert true && ymm1_8 = 0x0100@16;
mov shuf_8 ymm11_8;
assert true && ymm1_9 = 0x0504@16;
mov shuf_9 ymm11_a;
assert true && ymm1_a = 0x0908@16;
mov shuf_a ymm11_c;
assert true && ymm1_b = 0x0d0c@16;
mov shuf_b ymm11_e;
assert true && ymm1_c = 0x0302@16;
mov shuf_c ymm11_9;
assert true && ymm1_d = 0x0706@16;
mov shuf_d ymm11_b;
assert true && ymm1_e = 0x0b0a@16;
mov shuf_e ymm11_d;
assert true && ymm1_f = 0x0f0e@16;
mov shuf_f ymm11_f;
mov ymm11_0 shuf_0;
mov ymm11_1 shuf_1;
mov ymm11_2 shuf_2;
mov ymm11_3 shuf_3;
mov ymm11_4 shuf_4;
mov ymm11_5 shuf_5;
mov ymm11_6 shuf_6;
mov ymm11_7 shuf_7;
mov ymm11_8 shuf_8;
mov ymm11_9 shuf_9;
mov ymm11_a shuf_a;
mov ymm11_b shuf_b;
mov ymm11_c shuf_c;
mov ymm11_d shuf_d;
mov ymm11_e shuf_e;
mov ymm11_f shuf_f;
(* vpermq $0xd8,%ymm11,%ymm11                      #! PC = 0x555555558cbd *)
mov permq_0 ymm11_0;
mov permq_1 ymm11_1;
mov permq_2 ymm11_2;
mov permq_3 ymm11_3;
mov permq_4 ymm11_8;
mov permq_5 ymm11_9;
mov permq_6 ymm11_a;
mov permq_7 ymm11_b;
mov permq_8 ymm11_4;
mov permq_9 ymm11_5;
mov permq_a ymm11_6;
mov permq_b ymm11_7;
mov permq_c ymm11_c;
mov permq_d ymm11_d;
mov permq_e ymm11_e;
mov permq_f ymm11_f;
mov ymm11_0 permq_0;
mov ymm11_1 permq_1;
mov ymm11_2 permq_2;
mov ymm11_3 permq_3;
mov ymm11_4 permq_4;
mov ymm11_5 permq_5;
mov ymm11_6 permq_6;
mov ymm11_7 permq_7;
mov ymm11_8 permq_8;
mov ymm11_9 permq_9;
mov ymm11_a permq_a;
mov ymm11_b permq_b;
mov ymm11_c permq_c;
mov ymm11_d permq_d;
mov ymm11_e permq_e;
mov ymm11_f permq_f;
(* vpunpcklwd %ymm3,%ymm9,%ymm10                   #! PC = 0x555555558cc3 *)
mov lwd_0 ymm9_0;
mov lwd_1 ymm3_0;
mov lwd_2 ymm9_1;
mov lwd_3 ymm3_1;
mov lwd_4 ymm9_2;
mov lwd_5 ymm3_2;
mov lwd_6 ymm9_3;
mov lwd_7 ymm3_3;
mov lwd_8 ymm9_8;
mov lwd_9 ymm3_8;
mov lwd_a ymm9_9;
mov lwd_b ymm3_9;
mov lwd_c ymm9_a;
mov lwd_d ymm3_a;
mov lwd_e ymm9_b;
mov lwd_f ymm3_b;
mov ymm10_0 lwd_0;
mov ymm10_1 lwd_1;
mov ymm10_2 lwd_2;
mov ymm10_3 lwd_3;
mov ymm10_4 lwd_4;
mov ymm10_5 lwd_5;
mov ymm10_6 lwd_6;
mov ymm10_7 lwd_7;
mov ymm10_8 lwd_8;
mov ymm10_9 lwd_9;
mov ymm10_a lwd_a;
mov ymm10_b lwd_b;
mov ymm10_c lwd_c;
mov ymm10_d lwd_d;
mov ymm10_e lwd_e;
mov ymm10_f lwd_f;
(* vpunpckhwd %ymm3,%ymm9,%ymm3                    #! PC = 0x555555558cc7 *)
mov hwd_0 ymm9_4;
mov hwd_1 ymm3_4;
mov hwd_2 ymm9_5;
mov hwd_3 ymm3_5;
mov hwd_4 ymm9_6;
mov hwd_5 ymm3_6;
mov hwd_6 ymm9_7;
mov hwd_7 ymm3_7;
mov hwd_8 ymm9_c;
mov hwd_9 ymm3_c;
mov hwd_a ymm9_d;
mov hwd_b ymm3_d;
mov hwd_c ymm9_e;
mov hwd_d ymm3_e;
mov hwd_e ymm9_f;
mov hwd_f ymm3_f;
mov ymm3_0 hwd_0;
mov ymm3_1 hwd_1;
mov ymm3_2 hwd_2;
mov ymm3_3 hwd_3;
mov ymm3_4 hwd_4;
mov ymm3_5 hwd_5;
mov ymm3_6 hwd_6;
mov ymm3_7 hwd_7;
mov ymm3_8 hwd_8;
mov ymm3_9 hwd_9;
mov ymm3_a hwd_a;
mov ymm3_b hwd_b;
mov ymm3_c hwd_c;
mov ymm3_d hwd_d;
mov ymm3_e hwd_e;
mov ymm3_f hwd_f;
(* vpunpcklwd %ymm6,%ymm7,%ymm9                    #! PC = 0x555555558ccb *)
mov lwd_0 ymm7_0;
mov lwd_1 ymm6_0;
mov lwd_2 ymm7_1;
mov lwd_3 ymm6_1;
mov lwd_4 ymm7_2;
mov lwd_5 ymm6_2;
mov lwd_6 ymm7_3;
mov lwd_7 ymm6_3;
mov lwd_8 ymm7_8;
mov lwd_9 ymm6_8;
mov lwd_a ymm7_9;
mov lwd_b ymm6_9;
mov lwd_c ymm7_a;
mov lwd_d ymm6_a;
mov lwd_e ymm7_b;
mov lwd_f ymm6_b;
mov ymm9_0 lwd_0;
mov ymm9_1 lwd_1;
mov ymm9_2 lwd_2;
mov ymm9_3 lwd_3;
mov ymm9_4 lwd_4;
mov ymm9_5 lwd_5;
mov ymm9_6 lwd_6;
mov ymm9_7 lwd_7;
mov ymm9_8 lwd_8;
mov ymm9_9 lwd_9;
mov ymm9_a lwd_a;
mov ymm9_b lwd_b;
mov ymm9_c lwd_c;
mov ymm9_d lwd_d;
mov ymm9_e lwd_e;
mov ymm9_f lwd_f;
(* vpunpckhwd %ymm6,%ymm7,%ymm6                    #! PC = 0x555555558ccf *)
mov hwd_0 ymm7_4;
mov hwd_1 ymm6_4;
mov hwd_2 ymm7_5;
mov hwd_3 ymm6_5;
mov hwd_4 ymm7_6;
mov hwd_5 ymm6_6;
mov hwd_6 ymm7_7;
mov hwd_7 ymm6_7;
mov hwd_8 ymm7_c;
mov hwd_9 ymm6_c;
mov hwd_a ymm7_d;
mov hwd_b ymm6_d;
mov hwd_c ymm7_e;
mov hwd_d ymm6_e;
mov hwd_e ymm7_f;
mov hwd_f ymm6_f;
mov ymm6_0 hwd_0;
mov ymm6_1 hwd_1;
mov ymm6_2 hwd_2;
mov ymm6_3 hwd_3;
mov ymm6_4 hwd_4;
mov ymm6_5 hwd_5;
mov ymm6_6 hwd_6;
mov ymm6_7 hwd_7;
mov ymm6_8 hwd_8;
mov ymm6_9 hwd_9;
mov ymm6_a hwd_a;
mov ymm6_b hwd_b;
mov ymm6_c hwd_c;
mov ymm6_d hwd_d;
mov ymm6_e hwd_e;
mov ymm6_f hwd_f;
(* vpunpcklwd %ymm8,%ymm5,%ymm7                    #! PC = 0x555555558cd3 *)
mov lwd_0 ymm5_0;
mov lwd_1 ymm8_0;
mov lwd_2 ymm5_1;
mov lwd_3 ymm8_1;
mov lwd_4 ymm5_2;
mov lwd_5 ymm8_2;
mov lwd_6 ymm5_3;
mov lwd_7 ymm8_3;
mov lwd_8 ymm5_8;
mov lwd_9 ymm8_8;
mov lwd_a ymm5_9;
mov lwd_b ymm8_9;
mov lwd_c ymm5_a;
mov lwd_d ymm8_a;
mov lwd_e ymm5_b;
mov lwd_f ymm8_b;
mov ymm7_0 lwd_0;
mov ymm7_1 lwd_1;
mov ymm7_2 lwd_2;
mov ymm7_3 lwd_3;
mov ymm7_4 lwd_4;
mov ymm7_5 lwd_5;
mov ymm7_6 lwd_6;
mov ymm7_7 lwd_7;
mov ymm7_8 lwd_8;
mov ymm7_9 lwd_9;
mov ymm7_a lwd_a;
mov ymm7_b lwd_b;
mov ymm7_c lwd_c;
mov ymm7_d lwd_d;
mov ymm7_e lwd_e;
mov ymm7_f lwd_f;
(* vpunpckhwd %ymm8,%ymm5,%ymm8                    #! PC = 0x555555558cd8 *)
mov hwd_0 ymm5_4;
mov hwd_1 ymm8_4;
mov hwd_2 ymm5_5;
mov hwd_3 ymm8_5;
mov hwd_4 ymm5_6;
mov hwd_5 ymm8_6;
mov hwd_6 ymm5_7;
mov hwd_7 ymm8_7;
mov hwd_8 ymm5_c;
mov hwd_9 ymm8_c;
mov hwd_a ymm5_d;
mov hwd_b ymm8_d;
mov hwd_c ymm5_e;
mov hwd_d ymm8_e;
mov hwd_e ymm5_f;
mov hwd_f ymm8_f;
mov ymm8_0 hwd_0;
mov ymm8_1 hwd_1;
mov ymm8_2 hwd_2;
mov ymm8_3 hwd_3;
mov ymm8_4 hwd_4;
mov ymm8_5 hwd_5;
mov ymm8_6 hwd_6;
mov ymm8_7 hwd_7;
mov ymm8_8 hwd_8;
mov ymm8_9 hwd_9;
mov ymm8_a hwd_a;
mov ymm8_b hwd_b;
mov ymm8_c hwd_c;
mov ymm8_d hwd_d;
mov ymm8_e hwd_e;
mov ymm8_f hwd_f;
(* vpunpcklwd %ymm11,%ymm4,%ymm5                   #! PC = 0x555555558cdd *)
mov lwd_0 ymm4_0;
mov lwd_1 ymm11_0;
mov lwd_2 ymm4_1;
mov lwd_3 ymm11_1;
mov lwd_4 ymm4_2;
mov lwd_5 ymm11_2;
mov lwd_6 ymm4_3;
mov lwd_7 ymm11_3;
mov lwd_8 ymm4_8;
mov lwd_9 ymm11_8;
mov lwd_a ymm4_9;
mov lwd_b ymm11_9;
mov lwd_c ymm4_a;
mov lwd_d ymm11_a;
mov lwd_e ymm4_b;
mov lwd_f ymm11_b;
mov ymm5_0 lwd_0;
mov ymm5_1 lwd_1;
mov ymm5_2 lwd_2;
mov ymm5_3 lwd_3;
mov ymm5_4 lwd_4;
mov ymm5_5 lwd_5;
mov ymm5_6 lwd_6;
mov ymm5_7 lwd_7;
mov ymm5_8 lwd_8;
mov ymm5_9 lwd_9;
mov ymm5_a lwd_a;
mov ymm5_b lwd_b;
mov ymm5_c lwd_c;
mov ymm5_d lwd_d;
mov ymm5_e lwd_e;
mov ymm5_f lwd_f;
(* vpunpckhwd %ymm11,%ymm4,%ymm11                  #! PC = 0x555555558ce2 *)
mov hwd_0 ymm4_4;
mov hwd_1 ymm11_4;
mov hwd_2 ymm4_5;
mov hwd_3 ymm11_5;
mov hwd_4 ymm4_6;
mov hwd_5 ymm11_6;
mov hwd_6 ymm4_7;
mov hwd_7 ymm11_7;
mov hwd_8 ymm4_c;
mov hwd_9 ymm11_c;
mov hwd_a ymm4_d;
mov hwd_b ymm11_d;
mov hwd_c ymm4_e;
mov hwd_d ymm11_e;
mov hwd_e ymm4_f;
mov hwd_f ymm11_f;
mov ymm11_0 hwd_0;
mov ymm11_1 hwd_1;
mov ymm11_2 hwd_2;
mov ymm11_3 hwd_3;
mov ymm11_4 hwd_4;
mov ymm11_5 hwd_5;
mov ymm11_6 hwd_6;
mov ymm11_7 hwd_7;
mov ymm11_8 hwd_8;
mov ymm11_9 hwd_9;
mov ymm11_a hwd_a;
mov ymm11_b hwd_b;
mov ymm11_c hwd_c;
mov ymm11_d hwd_d;
mov ymm11_e hwd_e;
mov ymm11_f hwd_f;
(* vpbroadcastd 0x140(%rdx),%ymm1                  #! EA = L0x555555561260; Value = 0x4ee67a89a62111ed; PC = 0x555555558ce7 *)
mov ymm1_0 L0x555555561260;
mov ymm1_1 L0x555555561262;
mov ymm1_2 L0x555555561260;
mov ymm1_3 L0x555555561262;
mov ymm1_4 L0x555555561260;
mov ymm1_5 L0x555555561262;
mov ymm1_6 L0x555555561260;
mov ymm1_7 L0x555555561262;
mov ymm1_8 L0x555555561260;
mov ymm1_9 L0x555555561262;
mov ymm1_a L0x555555561260;
mov ymm1_b L0x555555561262;
mov ymm1_c L0x555555561260;
mov ymm1_d L0x555555561262;
mov ymm1_e L0x555555561260;
mov ymm1_f L0x555555561262;
(* vpbroadcastd 0x340(%rdx),%ymm2                  #! EA = L0x555555561460; Value = 0x0ae6f4891021f3ed; PC = 0x555555558cf0 *)
mov ymm2_0 L0x555555561460;
mov ymm2_1 L0x555555561462;
mov ymm2_2 L0x555555561460;
mov ymm2_3 L0x555555561462;
mov ymm2_4 L0x555555561460;
mov ymm2_5 L0x555555561462;
mov ymm2_6 L0x555555561460;
mov ymm2_7 L0x555555561462;
mov ymm2_8 L0x555555561460;
mov ymm2_9 L0x555555561462;
mov ymm2_a L0x555555561460;
mov ymm2_b L0x555555561462;
mov ymm2_c L0x555555561460;
mov ymm2_d L0x555555561462;
mov ymm2_e L0x555555561460;
mov ymm2_f L0x555555561462;
(* vpmullw %ymm1,%ymm3,%ymm4                       #! PC = 0x555555558cf9 *)
smull mulHymm3_0 mulL_0 ymm1_0 ymm3_0;
smull mulHymm3_1 mulL_1 ymm1_1 ymm3_1;
smull mulHymm3_2 mulL_2 ymm1_2 ymm3_2;
smull mulHymm3_3 mulL_3 ymm1_3 ymm3_3;
smull mulHymm3_4 mulL_4 ymm1_4 ymm3_4;
smull mulHymm3_5 mulL_5 ymm1_5 ymm3_5;
smull mulHymm3_6 mulL_6 ymm1_6 ymm3_6;
smull mulHymm3_7 mulL_7 ymm1_7 ymm3_7;
smull mulHymm3_8 mulL_8 ymm1_8 ymm3_8;
smull mulHymm3_9 mulL_9 ymm1_9 ymm3_9;
smull mulHymm3_a mulL_a ymm1_a ymm3_a;
smull mulHymm3_b mulL_b ymm1_b ymm3_b;
smull mulHymm3_c mulL_c ymm1_c ymm3_c;
smull mulHymm3_d mulL_d ymm1_d ymm3_d;
smull mulHymm3_e mulL_e ymm1_e ymm3_e;
smull mulHymm3_f mulL_f ymm1_f ymm3_f;
cast ymm4_0@sint16 mulL_0;
cast ymm4_1@sint16 mulL_1;
cast ymm4_2@sint16 mulL_2;
cast ymm4_3@sint16 mulL_3;
cast ymm4_4@sint16 mulL_4;
cast ymm4_5@sint16 mulL_5;
cast ymm4_6@sint16 mulL_6;
cast ymm4_7@sint16 mulL_7;
cast ymm4_8@sint16 mulL_8;
cast ymm4_9@sint16 mulL_9;
cast ymm4_a@sint16 mulL_a;
cast ymm4_b@sint16 mulL_b;
cast ymm4_c@sint16 mulL_c;
cast ymm4_d@sint16 mulL_d;
cast ymm4_e@sint16 mulL_e;
cast ymm4_f@sint16 mulL_f;
(* vpmulhw %ymm2,%ymm3,%ymm3                       #! PC = 0x555555558cfd *)
smull mulH_0 mulLymm3_0 ymm3_0 ymm2_0;
smull mulH_1 mulLymm3_1 ymm3_1 ymm2_1;
smull mulH_2 mulLymm3_2 ymm3_2 ymm2_2;
smull mulH_3 mulLymm3_3 ymm3_3 ymm2_3;
smull mulH_4 mulLymm3_4 ymm3_4 ymm2_4;
smull mulH_5 mulLymm3_5 ymm3_5 ymm2_5;
smull mulH_6 mulLymm3_6 ymm3_6 ymm2_6;
smull mulH_7 mulLymm3_7 ymm3_7 ymm2_7;
smull mulH_8 mulLymm3_8 ymm3_8 ymm2_8;
smull mulH_9 mulLymm3_9 ymm3_9 ymm2_9;
smull mulH_a mulLymm3_a ymm3_a ymm2_a;
smull mulH_b mulLymm3_b ymm3_b ymm2_b;
smull mulH_c mulLymm3_c ymm3_c ymm2_c;
smull mulH_d mulLymm3_d ymm3_d ymm2_d;
smull mulH_e mulLymm3_e ymm3_e ymm2_e;
smull mulH_f mulLymm3_f ymm3_f ymm2_f;
mov ymm3_0 mulH_0;
mov ymm3_1 mulH_1;
mov ymm3_2 mulH_2;
mov ymm3_3 mulH_3;
mov ymm3_4 mulH_4;
mov ymm3_5 mulH_5;
mov ymm3_6 mulH_6;
mov ymm3_7 mulH_7;
mov ymm3_8 mulH_8;
mov ymm3_9 mulH_9;
mov ymm3_a mulH_a;
mov ymm3_b mulH_b;
mov ymm3_c mulH_c;
mov ymm3_d mulH_d;
mov ymm3_e mulH_e;
mov ymm3_f mulH_f;
(* vpmulhw %ymm0,%ymm4,%ymm4                       #! PC = 0x555555558d01 *)
smull mulH_0 red_0 ymm4_0 ymm0_0;
assert true && red_0 = mulLymm3_0;
assume red_0 = mulLymm3_0 && true;
smull mulH_1 red_1 ymm4_1 ymm0_1;
assert true && red_1 = mulLymm3_1;
assume red_1 = mulLymm3_1 && true;
smull mulH_2 red_2 ymm4_2 ymm0_2;
assert true && red_2 = mulLymm3_2;
assume red_2 = mulLymm3_2 && true;
smull mulH_3 red_3 ymm4_3 ymm0_3;
assert true && red_3 = mulLymm3_3;
assume red_3 = mulLymm3_3 && true;
smull mulH_4 red_4 ymm4_4 ymm0_4;
assert true && red_4 = mulLymm3_4;
assume red_4 = mulLymm3_4 && true;
smull mulH_5 red_5 ymm4_5 ymm0_5;
assert true && red_5 = mulLymm3_5;
assume red_5 = mulLymm3_5 && true;
smull mulH_6 red_6 ymm4_6 ymm0_6;
assert true && red_6 = mulLymm3_6;
assume red_6 = mulLymm3_6 && true;
smull mulH_7 red_7 ymm4_7 ymm0_7;
assert true && red_7 = mulLymm3_7;
assume red_7 = mulLymm3_7 && true;
smull mulH_8 red_8 ymm4_8 ymm0_8;
assert true && red_8 = mulLymm3_8;
assume red_8 = mulLymm3_8 && true;
smull mulH_9 red_9 ymm4_9 ymm0_9;
assert true && red_9 = mulLymm3_9;
assume red_9 = mulLymm3_9 && true;
smull mulH_a red_a ymm4_a ymm0_a;
assert true && red_a = mulLymm3_a;
assume red_a = mulLymm3_a && true;
smull mulH_b red_b ymm4_b ymm0_b;
assert true && red_b = mulLymm3_b;
assume red_b = mulLymm3_b && true;
smull mulH_c red_c ymm4_c ymm0_c;
assert true && red_c = mulLymm3_c;
assume red_c = mulLymm3_c && true;
smull mulH_d red_d ymm4_d ymm0_d;
assert true && red_d = mulLymm3_d;
assume red_d = mulLymm3_d && true;
smull mulH_e red_e ymm4_e ymm0_e;
assert true && red_e = mulLymm3_e;
assume red_e = mulLymm3_e && true;
smull mulH_f red_f ymm4_f ymm0_f;
assert true && red_f = mulLymm3_f;
assume red_f = mulLymm3_f && true;
mov ymm4_0 mulH_0;
mov ymm4_1 mulH_1;
mov ymm4_2 mulH_2;
mov ymm4_3 mulH_3;
mov ymm4_4 mulH_4;
mov ymm4_5 mulH_5;
mov ymm4_6 mulH_6;
mov ymm4_7 mulH_7;
mov ymm4_8 mulH_8;
mov ymm4_9 mulH_9;
mov ymm4_a mulH_a;
mov ymm4_b mulH_b;
mov ymm4_c mulH_c;
mov ymm4_d mulH_d;
mov ymm4_e mulH_e;
mov ymm4_f mulH_f;
(* vpsubw %ymm4,%ymm3,%ymm3                        #! PC = 0x555555558d05 *)
sub ymm3_0 ymm3_0 ymm4_0;
sub ymm3_1 ymm3_1 ymm4_1;
sub ymm3_2 ymm3_2 ymm4_2;
sub ymm3_3 ymm3_3 ymm4_3;
sub ymm3_4 ymm3_4 ymm4_4;
sub ymm3_5 ymm3_5 ymm4_5;
sub ymm3_6 ymm3_6 ymm4_6;
sub ymm3_7 ymm3_7 ymm4_7;
sub ymm3_8 ymm3_8 ymm4_8;
sub ymm3_9 ymm3_9 ymm4_9;
sub ymm3_a ymm3_a ymm4_a;
sub ymm3_b ymm3_b ymm4_b;
sub ymm3_c ymm3_c ymm4_c;
sub ymm3_d ymm3_d ymm4_d;
sub ymm3_e ymm3_e ymm4_e;
sub ymm3_f ymm3_f ymm4_f;
(* vpbroadcastd 0x144(%rdx),%ymm1                  #! EA = L0x555555561264; Value = 0x5d04090c4ee67a89; PC = 0x555555558d09 *)
mov ymm1_0 L0x555555561264;
mov ymm1_1 L0x555555561266;
mov ymm1_2 L0x555555561264;
mov ymm1_3 L0x555555561266;
mov ymm1_4 L0x555555561264;
mov ymm1_5 L0x555555561266;
mov ymm1_6 L0x555555561264;
mov ymm1_7 L0x555555561266;
mov ymm1_8 L0x555555561264;
mov ymm1_9 L0x555555561266;
mov ymm1_a L0x555555561264;
mov ymm1_b L0x555555561266;
mov ymm1_c L0x555555561264;
mov ymm1_d L0x555555561266;
mov ymm1_e L0x555555561264;
mov ymm1_f L0x555555561266;
(* vpbroadcastd 0x344(%rdx),%ymm2                  #! EA = L0x555555561464; Value = 0x0504010c0ae6f489; PC = 0x555555558d12 *)
mov ymm2_0 L0x555555561464;
mov ymm2_1 L0x555555561466;
mov ymm2_2 L0x555555561464;
mov ymm2_3 L0x555555561466;
mov ymm2_4 L0x555555561464;
mov ymm2_5 L0x555555561466;
mov ymm2_6 L0x555555561464;
mov ymm2_7 L0x555555561466;
mov ymm2_8 L0x555555561464;
mov ymm2_9 L0x555555561466;
mov ymm2_a L0x555555561464;
mov ymm2_b L0x555555561466;
mov ymm2_c L0x555555561464;
mov ymm2_d L0x555555561466;
mov ymm2_e L0x555555561464;
mov ymm2_f L0x555555561466;
(* vpmullw %ymm1,%ymm6,%ymm4                       #! PC = 0x555555558d1b *)
smull mulHymm6_0 mulL_0 ymm1_0 ymm6_0;
smull mulHymm6_1 mulL_1 ymm1_1 ymm6_1;
smull mulHymm6_2 mulL_2 ymm1_2 ymm6_2;
smull mulHymm6_3 mulL_3 ymm1_3 ymm6_3;
smull mulHymm6_4 mulL_4 ymm1_4 ymm6_4;
smull mulHymm6_5 mulL_5 ymm1_5 ymm6_5;
smull mulHymm6_6 mulL_6 ymm1_6 ymm6_6;
smull mulHymm6_7 mulL_7 ymm1_7 ymm6_7;
smull mulHymm6_8 mulL_8 ymm1_8 ymm6_8;
smull mulHymm6_9 mulL_9 ymm1_9 ymm6_9;
smull mulHymm6_a mulL_a ymm1_a ymm6_a;
smull mulHymm6_b mulL_b ymm1_b ymm6_b;
smull mulHymm6_c mulL_c ymm1_c ymm6_c;
smull mulHymm6_d mulL_d ymm1_d ymm6_d;
smull mulHymm6_e mulL_e ymm1_e ymm6_e;
smull mulHymm6_f mulL_f ymm1_f ymm6_f;
cast ymm4_0@sint16 mulL_0;
cast ymm4_1@sint16 mulL_1;
cast ymm4_2@sint16 mulL_2;
cast ymm4_3@sint16 mulL_3;
cast ymm4_4@sint16 mulL_4;
cast ymm4_5@sint16 mulL_5;
cast ymm4_6@sint16 mulL_6;
cast ymm4_7@sint16 mulL_7;
cast ymm4_8@sint16 mulL_8;
cast ymm4_9@sint16 mulL_9;
cast ymm4_a@sint16 mulL_a;
cast ymm4_b@sint16 mulL_b;
cast ymm4_c@sint16 mulL_c;
cast ymm4_d@sint16 mulL_d;
cast ymm4_e@sint16 mulL_e;
cast ymm4_f@sint16 mulL_f;
(* vpmulhw %ymm2,%ymm6,%ymm6                       #! PC = 0x555555558d1f *)
smull mulH_0 mulLymm6_0 ymm6_0 ymm2_0;
smull mulH_1 mulLymm6_1 ymm6_1 ymm2_1;
smull mulH_2 mulLymm6_2 ymm6_2 ymm2_2;
smull mulH_3 mulLymm6_3 ymm6_3 ymm2_3;
smull mulH_4 mulLymm6_4 ymm6_4 ymm2_4;
smull mulH_5 mulLymm6_5 ymm6_5 ymm2_5;
smull mulH_6 mulLymm6_6 ymm6_6 ymm2_6;
smull mulH_7 mulLymm6_7 ymm6_7 ymm2_7;
smull mulH_8 mulLymm6_8 ymm6_8 ymm2_8;
smull mulH_9 mulLymm6_9 ymm6_9 ymm2_9;
smull mulH_a mulLymm6_a ymm6_a ymm2_a;
smull mulH_b mulLymm6_b ymm6_b ymm2_b;
smull mulH_c mulLymm6_c ymm6_c ymm2_c;
smull mulH_d mulLymm6_d ymm6_d ymm2_d;
smull mulH_e mulLymm6_e ymm6_e ymm2_e;
smull mulH_f mulLymm6_f ymm6_f ymm2_f;
mov ymm6_0 mulH_0;
mov ymm6_1 mulH_1;
mov ymm6_2 mulH_2;
mov ymm6_3 mulH_3;
mov ymm6_4 mulH_4;
mov ymm6_5 mulH_5;
mov ymm6_6 mulH_6;
mov ymm6_7 mulH_7;
mov ymm6_8 mulH_8;
mov ymm6_9 mulH_9;
mov ymm6_a mulH_a;
mov ymm6_b mulH_b;
mov ymm6_c mulH_c;
mov ymm6_d mulH_d;
mov ymm6_e mulH_e;
mov ymm6_f mulH_f;
(* vpmulhw %ymm0,%ymm4,%ymm4                       #! PC = 0x555555558d23 *)
smull mulH_0 red_0 ymm4_0 ymm0_0;
assert true && red_0 = mulLymm6_0;
assume red_0 = mulLymm6_0 && true;
smull mulH_1 red_1 ymm4_1 ymm0_1;
assert true && red_1 = mulLymm6_1;
assume red_1 = mulLymm6_1 && true;
smull mulH_2 red_2 ymm4_2 ymm0_2;
assert true && red_2 = mulLymm6_2;
assume red_2 = mulLymm6_2 && true;
smull mulH_3 red_3 ymm4_3 ymm0_3;
assert true && red_3 = mulLymm6_3;
assume red_3 = mulLymm6_3 && true;
smull mulH_4 red_4 ymm4_4 ymm0_4;
assert true && red_4 = mulLymm6_4;
assume red_4 = mulLymm6_4 && true;
smull mulH_5 red_5 ymm4_5 ymm0_5;
assert true && red_5 = mulLymm6_5;
assume red_5 = mulLymm6_5 && true;
smull mulH_6 red_6 ymm4_6 ymm0_6;
assert true && red_6 = mulLymm6_6;
assume red_6 = mulLymm6_6 && true;
smull mulH_7 red_7 ymm4_7 ymm0_7;
assert true && red_7 = mulLymm6_7;
assume red_7 = mulLymm6_7 && true;
smull mulH_8 red_8 ymm4_8 ymm0_8;
assert true && red_8 = mulLymm6_8;
assume red_8 = mulLymm6_8 && true;
smull mulH_9 red_9 ymm4_9 ymm0_9;
assert true && red_9 = mulLymm6_9;
assume red_9 = mulLymm6_9 && true;
smull mulH_a red_a ymm4_a ymm0_a;
assert true && red_a = mulLymm6_a;
assume red_a = mulLymm6_a && true;
smull mulH_b red_b ymm4_b ymm0_b;
assert true && red_b = mulLymm6_b;
assume red_b = mulLymm6_b && true;
smull mulH_c red_c ymm4_c ymm0_c;
assert true && red_c = mulLymm6_c;
assume red_c = mulLymm6_c && true;
smull mulH_d red_d ymm4_d ymm0_d;
assert true && red_d = mulLymm6_d;
assume red_d = mulLymm6_d && true;
smull mulH_e red_e ymm4_e ymm0_e;
assert true && red_e = mulLymm6_e;
assume red_e = mulLymm6_e && true;
smull mulH_f red_f ymm4_f ymm0_f;
assert true && red_f = mulLymm6_f;
assume red_f = mulLymm6_f && true;
mov ymm4_0 mulH_0;
mov ymm4_1 mulH_1;
mov ymm4_2 mulH_2;
mov ymm4_3 mulH_3;
mov ymm4_4 mulH_4;
mov ymm4_5 mulH_5;
mov ymm4_6 mulH_6;
mov ymm4_7 mulH_7;
mov ymm4_8 mulH_8;
mov ymm4_9 mulH_9;
mov ymm4_a mulH_a;
mov ymm4_b mulH_b;
mov ymm4_c mulH_c;
mov ymm4_d mulH_d;
mov ymm4_e mulH_e;
mov ymm4_f mulH_f;
(* vpsubw %ymm4,%ymm6,%ymm6                        #! PC = 0x555555558d27 *)
sub ymm6_0 ymm6_0 ymm4_0;
sub ymm6_1 ymm6_1 ymm4_1;
sub ymm6_2 ymm6_2 ymm4_2;
sub ymm6_3 ymm6_3 ymm4_3;
sub ymm6_4 ymm6_4 ymm4_4;
sub ymm6_5 ymm6_5 ymm4_5;
sub ymm6_6 ymm6_6 ymm4_6;
sub ymm6_7 ymm6_7 ymm4_7;
sub ymm6_8 ymm6_8 ymm4_8;
sub ymm6_9 ymm6_9 ymm4_9;
sub ymm6_a ymm6_a ymm4_a;
sub ymm6_b ymm6_b ymm4_b;
sub ymm6_c ymm6_c ymm4_c;
sub ymm6_d ymm6_d ymm4_d;
sub ymm6_e ymm6_e ymm4_e;
sub ymm6_f ymm6_f ymm4_f;
(* vpbroadcastd 0x148(%rdx),%ymm1                  #! EA = L0x555555561268; Value = 0xa1de58045d04090c; PC = 0x555555558d2b *)
mov ymm1_0 L0x555555561268;
mov ymm1_1 L0x55555556126a;
mov ymm1_2 L0x555555561268;
mov ymm1_3 L0x55555556126a;
mov ymm1_4 L0x555555561268;
mov ymm1_5 L0x55555556126a;
mov ymm1_6 L0x555555561268;
mov ymm1_7 L0x55555556126a;
mov ymm1_8 L0x555555561268;
mov ymm1_9 L0x55555556126a;
mov ymm1_a L0x555555561268;
mov ymm1_b L0x55555556126a;
mov ymm1_c L0x555555561268;
mov ymm1_d L0x55555556126a;
mov ymm1_e L0x555555561268;
mov ymm1_f L0x55555556126a;
(* vpbroadcastd 0x348(%rdx),%ymm2                  #! EA = L0x555555561468; Value = 0x0dde00040504010c; PC = 0x555555558d34 *)
mov ymm2_0 L0x555555561468;
mov ymm2_1 L0x55555556146a;
mov ymm2_2 L0x555555561468;
mov ymm2_3 L0x55555556146a;
mov ymm2_4 L0x555555561468;
mov ymm2_5 L0x55555556146a;
mov ymm2_6 L0x555555561468;
mov ymm2_7 L0x55555556146a;
mov ymm2_8 L0x555555561468;
mov ymm2_9 L0x55555556146a;
mov ymm2_a L0x555555561468;
mov ymm2_b L0x55555556146a;
mov ymm2_c L0x555555561468;
mov ymm2_d L0x55555556146a;
mov ymm2_e L0x555555561468;
mov ymm2_f L0x55555556146a;
(* vpmullw %ymm1,%ymm8,%ymm4                       #! PC = 0x555555558d3d *)
smull mulHymm8_0 mulL_0 ymm1_0 ymm8_0;
smull mulHymm8_1 mulL_1 ymm1_1 ymm8_1;
smull mulHymm8_2 mulL_2 ymm1_2 ymm8_2;
smull mulHymm8_3 mulL_3 ymm1_3 ymm8_3;
smull mulHymm8_4 mulL_4 ymm1_4 ymm8_4;
smull mulHymm8_5 mulL_5 ymm1_5 ymm8_5;
smull mulHymm8_6 mulL_6 ymm1_6 ymm8_6;
smull mulHymm8_7 mulL_7 ymm1_7 ymm8_7;
smull mulHymm8_8 mulL_8 ymm1_8 ymm8_8;
smull mulHymm8_9 mulL_9 ymm1_9 ymm8_9;
smull mulHymm8_a mulL_a ymm1_a ymm8_a;
smull mulHymm8_b mulL_b ymm1_b ymm8_b;
smull mulHymm8_c mulL_c ymm1_c ymm8_c;
smull mulHymm8_d mulL_d ymm1_d ymm8_d;
smull mulHymm8_e mulL_e ymm1_e ymm8_e;
smull mulHymm8_f mulL_f ymm1_f ymm8_f;
cast ymm4_0@sint16 mulL_0;
cast ymm4_1@sint16 mulL_1;
cast ymm4_2@sint16 mulL_2;
cast ymm4_3@sint16 mulL_3;
cast ymm4_4@sint16 mulL_4;
cast ymm4_5@sint16 mulL_5;
cast ymm4_6@sint16 mulL_6;
cast ymm4_7@sint16 mulL_7;
cast ymm4_8@sint16 mulL_8;
cast ymm4_9@sint16 mulL_9;
cast ymm4_a@sint16 mulL_a;
cast ymm4_b@sint16 mulL_b;
cast ymm4_c@sint16 mulL_c;
cast ymm4_d@sint16 mulL_d;
cast ymm4_e@sint16 mulL_e;
cast ymm4_f@sint16 mulL_f;
(* vpmulhw %ymm2,%ymm8,%ymm8                       #! PC = 0x555555558d41 *)
smull mulH_0 mulLymm8_0 ymm8_0 ymm2_0;
smull mulH_1 mulLymm8_1 ymm8_1 ymm2_1;
smull mulH_2 mulLymm8_2 ymm8_2 ymm2_2;
smull mulH_3 mulLymm8_3 ymm8_3 ymm2_3;
smull mulH_4 mulLymm8_4 ymm8_4 ymm2_4;
smull mulH_5 mulLymm8_5 ymm8_5 ymm2_5;
smull mulH_6 mulLymm8_6 ymm8_6 ymm2_6;
smull mulH_7 mulLymm8_7 ymm8_7 ymm2_7;
smull mulH_8 mulLymm8_8 ymm8_8 ymm2_8;
smull mulH_9 mulLymm8_9 ymm8_9 ymm2_9;
smull mulH_a mulLymm8_a ymm8_a ymm2_a;
smull mulH_b mulLymm8_b ymm8_b ymm2_b;
smull mulH_c mulLymm8_c ymm8_c ymm2_c;
smull mulH_d mulLymm8_d ymm8_d ymm2_d;
smull mulH_e mulLymm8_e ymm8_e ymm2_e;
smull mulH_f mulLymm8_f ymm8_f ymm2_f;
mov ymm8_0 mulH_0;
mov ymm8_1 mulH_1;
mov ymm8_2 mulH_2;
mov ymm8_3 mulH_3;
mov ymm8_4 mulH_4;
mov ymm8_5 mulH_5;
mov ymm8_6 mulH_6;
mov ymm8_7 mulH_7;
mov ymm8_8 mulH_8;
mov ymm8_9 mulH_9;
mov ymm8_a mulH_a;
mov ymm8_b mulH_b;
mov ymm8_c mulH_c;
mov ymm8_d mulH_d;
mov ymm8_e mulH_e;
mov ymm8_f mulH_f;
(* vpmulhw %ymm0,%ymm4,%ymm4                       #! PC = 0x555555558d45 *)
smull mulH_0 red_0 ymm4_0 ymm0_0;
assert true && red_0 = mulLymm8_0;
assume red_0 = mulLymm8_0 && true;
smull mulH_1 red_1 ymm4_1 ymm0_1;
assert true && red_1 = mulLymm8_1;
assume red_1 = mulLymm8_1 && true;
smull mulH_2 red_2 ymm4_2 ymm0_2;
assert true && red_2 = mulLymm8_2;
assume red_2 = mulLymm8_2 && true;
smull mulH_3 red_3 ymm4_3 ymm0_3;
assert true && red_3 = mulLymm8_3;
assume red_3 = mulLymm8_3 && true;
smull mulH_4 red_4 ymm4_4 ymm0_4;
assert true && red_4 = mulLymm8_4;
assume red_4 = mulLymm8_4 && true;
smull mulH_5 red_5 ymm4_5 ymm0_5;
assert true && red_5 = mulLymm8_5;
assume red_5 = mulLymm8_5 && true;
smull mulH_6 red_6 ymm4_6 ymm0_6;
assert true && red_6 = mulLymm8_6;
assume red_6 = mulLymm8_6 && true;
smull mulH_7 red_7 ymm4_7 ymm0_7;
assert true && red_7 = mulLymm8_7;
assume red_7 = mulLymm8_7 && true;
smull mulH_8 red_8 ymm4_8 ymm0_8;
assert true && red_8 = mulLymm8_8;
assume red_8 = mulLymm8_8 && true;
smull mulH_9 red_9 ymm4_9 ymm0_9;
assert true && red_9 = mulLymm8_9;
assume red_9 = mulLymm8_9 && true;
smull mulH_a red_a ymm4_a ymm0_a;
assert true && red_a = mulLymm8_a;
assume red_a = mulLymm8_a && true;
smull mulH_b red_b ymm4_b ymm0_b;
assert true && red_b = mulLymm8_b;
assume red_b = mulLymm8_b && true;
smull mulH_c red_c ymm4_c ymm0_c;
assert true && red_c = mulLymm8_c;
assume red_c = mulLymm8_c && true;
smull mulH_d red_d ymm4_d ymm0_d;
assert true && red_d = mulLymm8_d;
assume red_d = mulLymm8_d && true;
smull mulH_e red_e ymm4_e ymm0_e;
assert true && red_e = mulLymm8_e;
assume red_e = mulLymm8_e && true;
smull mulH_f red_f ymm4_f ymm0_f;
assert true && red_f = mulLymm8_f;
assume red_f = mulLymm8_f && true;
mov ymm4_0 mulH_0;
mov ymm4_1 mulH_1;
mov ymm4_2 mulH_2;
mov ymm4_3 mulH_3;
mov ymm4_4 mulH_4;
mov ymm4_5 mulH_5;
mov ymm4_6 mulH_6;
mov ymm4_7 mulH_7;
mov ymm4_8 mulH_8;
mov ymm4_9 mulH_9;
mov ymm4_a mulH_a;
mov ymm4_b mulH_b;
mov ymm4_c mulH_c;
mov ymm4_d mulH_d;
mov ymm4_e mulH_e;
mov ymm4_f mulH_f;
(* vpsubw %ymm4,%ymm8,%ymm8                        #! PC = 0x555555558d49 *)
sub ymm8_0 ymm8_0 ymm4_0;
sub ymm8_1 ymm8_1 ymm4_1;
sub ymm8_2 ymm8_2 ymm4_2;
sub ymm8_3 ymm8_3 ymm4_3;
sub ymm8_4 ymm8_4 ymm4_4;
sub ymm8_5 ymm8_5 ymm4_5;
sub ymm8_6 ymm8_6 ymm4_6;
sub ymm8_7 ymm8_7 ymm4_7;
sub ymm8_8 ymm8_8 ymm4_8;
sub ymm8_9 ymm8_9 ymm4_9;
sub ymm8_a ymm8_a ymm4_a;
sub ymm8_b ymm8_b ymm4_b;
sub ymm8_c ymm8_c ymm4_c;
sub ymm8_d ymm8_d ymm4_d;
sub ymm8_e ymm8_e ymm4_e;
sub ymm8_f ymm8_f ymm4_f;
(* vpbroadcastd 0x14c(%rdx),%ymm1                  #! EA = L0x55555556126c; Value = 0xdf07cfa6a1de5804; PC = 0x555555558d4d *)
mov ymm1_0 L0x55555556126c;
mov ymm1_1 L0x55555556126e;
mov ymm1_2 L0x55555556126c;
mov ymm1_3 L0x55555556126e;
mov ymm1_4 L0x55555556126c;
mov ymm1_5 L0x55555556126e;
mov ymm1_6 L0x55555556126c;
mov ymm1_7 L0x55555556126e;
mov ymm1_8 L0x55555556126c;
mov ymm1_9 L0x55555556126e;
mov ymm1_a L0x55555556126c;
mov ymm1_b L0x55555556126e;
mov ymm1_c L0x55555556126c;
mov ymm1_d L0x55555556126e;
mov ymm1_e L0x55555556126c;
mov ymm1_f L0x55555556126e;
(* vpbroadcastd 0x34c(%rdx),%ymm2                  #! EA = L0x55555556146c; Value = 0x05070ba60dde0004; PC = 0x555555558d56 *)
mov ymm2_0 L0x55555556146c;
mov ymm2_1 L0x55555556146e;
mov ymm2_2 L0x55555556146c;
mov ymm2_3 L0x55555556146e;
mov ymm2_4 L0x55555556146c;
mov ymm2_5 L0x55555556146e;
mov ymm2_6 L0x55555556146c;
mov ymm2_7 L0x55555556146e;
mov ymm2_8 L0x55555556146c;
mov ymm2_9 L0x55555556146e;
mov ymm2_a L0x55555556146c;
mov ymm2_b L0x55555556146e;
mov ymm2_c L0x55555556146c;
mov ymm2_d L0x55555556146e;
mov ymm2_e L0x55555556146c;
mov ymm2_f L0x55555556146e;
(* vpmullw %ymm1,%ymm11,%ymm4                      #! PC = 0x555555558d5f *)
smull mulHymm11_0 mulL_0 ymm1_0 ymm11_0;
smull mulHymm11_1 mulL_1 ymm1_1 ymm11_1;
smull mulHymm11_2 mulL_2 ymm1_2 ymm11_2;
smull mulHymm11_3 mulL_3 ymm1_3 ymm11_3;
smull mulHymm11_4 mulL_4 ymm1_4 ymm11_4;
smull mulHymm11_5 mulL_5 ymm1_5 ymm11_5;
smull mulHymm11_6 mulL_6 ymm1_6 ymm11_6;
smull mulHymm11_7 mulL_7 ymm1_7 ymm11_7;
smull mulHymm11_8 mulL_8 ymm1_8 ymm11_8;
smull mulHymm11_9 mulL_9 ymm1_9 ymm11_9;
smull mulHymm11_a mulL_a ymm1_a ymm11_a;
smull mulHymm11_b mulL_b ymm1_b ymm11_b;
smull mulHymm11_c mulL_c ymm1_c ymm11_c;
smull mulHymm11_d mulL_d ymm1_d ymm11_d;
smull mulHymm11_e mulL_e ymm1_e ymm11_e;
smull mulHymm11_f mulL_f ymm1_f ymm11_f;
cast ymm4_0@sint16 mulL_0;
cast ymm4_1@sint16 mulL_1;
cast ymm4_2@sint16 mulL_2;
cast ymm4_3@sint16 mulL_3;
cast ymm4_4@sint16 mulL_4;
cast ymm4_5@sint16 mulL_5;
cast ymm4_6@sint16 mulL_6;
cast ymm4_7@sint16 mulL_7;
cast ymm4_8@sint16 mulL_8;
cast ymm4_9@sint16 mulL_9;
cast ymm4_a@sint16 mulL_a;
cast ymm4_b@sint16 mulL_b;
cast ymm4_c@sint16 mulL_c;
cast ymm4_d@sint16 mulL_d;
cast ymm4_e@sint16 mulL_e;
cast ymm4_f@sint16 mulL_f;
(* vpmulhw %ymm2,%ymm11,%ymm11                     #! PC = 0x555555558d63 *)
smull mulH_0 mulLymm11_0 ymm11_0 ymm2_0;
smull mulH_1 mulLymm11_1 ymm11_1 ymm2_1;
smull mulH_2 mulLymm11_2 ymm11_2 ymm2_2;
smull mulH_3 mulLymm11_3 ymm11_3 ymm2_3;
smull mulH_4 mulLymm11_4 ymm11_4 ymm2_4;
smull mulH_5 mulLymm11_5 ymm11_5 ymm2_5;
smull mulH_6 mulLymm11_6 ymm11_6 ymm2_6;
smull mulH_7 mulLymm11_7 ymm11_7 ymm2_7;
smull mulH_8 mulLymm11_8 ymm11_8 ymm2_8;
smull mulH_9 mulLymm11_9 ymm11_9 ymm2_9;
smull mulH_a mulLymm11_a ymm11_a ymm2_a;
smull mulH_b mulLymm11_b ymm11_b ymm2_b;
smull mulH_c mulLymm11_c ymm11_c ymm2_c;
smull mulH_d mulLymm11_d ymm11_d ymm2_d;
smull mulH_e mulLymm11_e ymm11_e ymm2_e;
smull mulH_f mulLymm11_f ymm11_f ymm2_f;
mov ymm11_0 mulH_0;
mov ymm11_1 mulH_1;
mov ymm11_2 mulH_2;
mov ymm11_3 mulH_3;
mov ymm11_4 mulH_4;
mov ymm11_5 mulH_5;
mov ymm11_6 mulH_6;
mov ymm11_7 mulH_7;
mov ymm11_8 mulH_8;
mov ymm11_9 mulH_9;
mov ymm11_a mulH_a;
mov ymm11_b mulH_b;
mov ymm11_c mulH_c;
mov ymm11_d mulH_d;
mov ymm11_e mulH_e;
mov ymm11_f mulH_f;
(* vpmulhw %ymm0,%ymm4,%ymm4                       #! PC = 0x555555558d67 *)
smull mulH_0 red_0 ymm4_0 ymm0_0;
assert true && red_0 = mulLymm11_0;
assume red_0 = mulLymm11_0 && true;
smull mulH_1 red_1 ymm4_1 ymm0_1;
assert true && red_1 = mulLymm11_1;
assume red_1 = mulLymm11_1 && true;
smull mulH_2 red_2 ymm4_2 ymm0_2;
assert true && red_2 = mulLymm11_2;
assume red_2 = mulLymm11_2 && true;
smull mulH_3 red_3 ymm4_3 ymm0_3;
assert true && red_3 = mulLymm11_3;
assume red_3 = mulLymm11_3 && true;
smull mulH_4 red_4 ymm4_4 ymm0_4;
assert true && red_4 = mulLymm11_4;
assume red_4 = mulLymm11_4 && true;
smull mulH_5 red_5 ymm4_5 ymm0_5;
assert true && red_5 = mulLymm11_5;
assume red_5 = mulLymm11_5 && true;
smull mulH_6 red_6 ymm4_6 ymm0_6;
assert true && red_6 = mulLymm11_6;
assume red_6 = mulLymm11_6 && true;
smull mulH_7 red_7 ymm4_7 ymm0_7;
assert true && red_7 = mulLymm11_7;
assume red_7 = mulLymm11_7 && true;
smull mulH_8 red_8 ymm4_8 ymm0_8;
assert true && red_8 = mulLymm11_8;
assume red_8 = mulLymm11_8 && true;
smull mulH_9 red_9 ymm4_9 ymm0_9;
assert true && red_9 = mulLymm11_9;
assume red_9 = mulLymm11_9 && true;
smull mulH_a red_a ymm4_a ymm0_a;
assert true && red_a = mulLymm11_a;
assume red_a = mulLymm11_a && true;
smull mulH_b red_b ymm4_b ymm0_b;
assert true && red_b = mulLymm11_b;
assume red_b = mulLymm11_b && true;
smull mulH_c red_c ymm4_c ymm0_c;
assert true && red_c = mulLymm11_c;
assume red_c = mulLymm11_c && true;
smull mulH_d red_d ymm4_d ymm0_d;
assert true && red_d = mulLymm11_d;
assume red_d = mulLymm11_d && true;
smull mulH_e red_e ymm4_e ymm0_e;
assert true && red_e = mulLymm11_e;
assume red_e = mulLymm11_e && true;
smull mulH_f red_f ymm4_f ymm0_f;
assert true && red_f = mulLymm11_f;
assume red_f = mulLymm11_f && true;
mov ymm4_0 mulH_0;
mov ymm4_1 mulH_1;
mov ymm4_2 mulH_2;
mov ymm4_3 mulH_3;
mov ymm4_4 mulH_4;
mov ymm4_5 mulH_5;
mov ymm4_6 mulH_6;
mov ymm4_7 mulH_7;
mov ymm4_8 mulH_8;
mov ymm4_9 mulH_9;
mov ymm4_a mulH_a;
mov ymm4_b mulH_b;
mov ymm4_c mulH_c;
mov ymm4_d mulH_d;
mov ymm4_e mulH_e;
mov ymm4_f mulH_f;
(* vpsubw %ymm4,%ymm11,%ymm11                      #! PC = 0x555555558d6b *)
sub ymm11_0 ymm11_0 ymm4_0;
sub ymm11_1 ymm11_1 ymm4_1;
sub ymm11_2 ymm11_2 ymm4_2;
sub ymm11_3 ymm11_3 ymm4_3;
sub ymm11_4 ymm11_4 ymm4_4;
sub ymm11_5 ymm11_5 ymm4_5;
sub ymm11_6 ymm11_6 ymm4_6;
sub ymm11_7 ymm11_7 ymm4_7;
sub ymm11_8 ymm11_8 ymm4_8;
sub ymm11_9 ymm11_9 ymm4_9;
sub ymm11_a ymm11_a ymm4_a;
sub ymm11_b ymm11_b ymm4_b;
sub ymm11_c ymm11_c ymm4_c;
sub ymm11_d ymm11_d ymm4_d;
sub ymm11_e ymm11_e ymm4_e;
sub ymm11_f ymm11_f ymm4_f;
(* vpaddw %ymm3,%ymm10,%ymm4                       #! PC = 0x555555558d6f *)
add ymm4_0 ymm10_0 ymm3_0;
add ymm4_1 ymm10_1 ymm3_1;
add ymm4_2 ymm10_2 ymm3_2;
add ymm4_3 ymm10_3 ymm3_3;
add ymm4_4 ymm10_4 ymm3_4;
add ymm4_5 ymm10_5 ymm3_5;
add ymm4_6 ymm10_6 ymm3_6;
add ymm4_7 ymm10_7 ymm3_7;
add ymm4_8 ymm10_8 ymm3_8;
add ymm4_9 ymm10_9 ymm3_9;
add ymm4_a ymm10_a ymm3_a;
add ymm4_b ymm10_b ymm3_b;
add ymm4_c ymm10_c ymm3_c;
add ymm4_d ymm10_d ymm3_d;
add ymm4_e ymm10_e ymm3_e;
add ymm4_f ymm10_f ymm3_f;
(* vpsubw %ymm3,%ymm10,%ymm3                       #! PC = 0x555555558d73 *)
sub ymm3_0 ymm10_0 ymm3_0;
sub ymm3_1 ymm10_1 ymm3_1;
sub ymm3_2 ymm10_2 ymm3_2;
sub ymm3_3 ymm10_3 ymm3_3;
sub ymm3_4 ymm10_4 ymm3_4;
sub ymm3_5 ymm10_5 ymm3_5;
sub ymm3_6 ymm10_6 ymm3_6;
sub ymm3_7 ymm10_7 ymm3_7;
sub ymm3_8 ymm10_8 ymm3_8;
sub ymm3_9 ymm10_9 ymm3_9;
sub ymm3_a ymm10_a ymm3_a;
sub ymm3_b ymm10_b ymm3_b;
sub ymm3_c ymm10_c ymm3_c;
sub ymm3_d ymm10_d ymm3_d;
sub ymm3_e ymm10_e ymm3_e;
sub ymm3_f ymm10_f ymm3_f;
(* vpaddw %ymm6,%ymm9,%ymm10                       #! PC = 0x555555558d77 *)
add ymm10_0 ymm9_0 ymm6_0;
add ymm10_1 ymm9_1 ymm6_1;
add ymm10_2 ymm9_2 ymm6_2;
add ymm10_3 ymm9_3 ymm6_3;
add ymm10_4 ymm9_4 ymm6_4;
add ymm10_5 ymm9_5 ymm6_5;
add ymm10_6 ymm9_6 ymm6_6;
add ymm10_7 ymm9_7 ymm6_7;
add ymm10_8 ymm9_8 ymm6_8;
add ymm10_9 ymm9_9 ymm6_9;
add ymm10_a ymm9_a ymm6_a;
add ymm10_b ymm9_b ymm6_b;
add ymm10_c ymm9_c ymm6_c;
add ymm10_d ymm9_d ymm6_d;
add ymm10_e ymm9_e ymm6_e;
add ymm10_f ymm9_f ymm6_f;
(* vpsubw %ymm6,%ymm9,%ymm6                        #! PC = 0x555555558d7b *)
sub ymm6_0 ymm9_0 ymm6_0;
sub ymm6_1 ymm9_1 ymm6_1;
sub ymm6_2 ymm9_2 ymm6_2;
sub ymm6_3 ymm9_3 ymm6_3;
sub ymm6_4 ymm9_4 ymm6_4;
sub ymm6_5 ymm9_5 ymm6_5;
sub ymm6_6 ymm9_6 ymm6_6;
sub ymm6_7 ymm9_7 ymm6_7;
sub ymm6_8 ymm9_8 ymm6_8;
sub ymm6_9 ymm9_9 ymm6_9;
sub ymm6_a ymm9_a ymm6_a;
sub ymm6_b ymm9_b ymm6_b;
sub ymm6_c ymm9_c ymm6_c;
sub ymm6_d ymm9_d ymm6_d;
sub ymm6_e ymm9_e ymm6_e;
sub ymm6_f ymm9_f ymm6_f;
(* vpaddw %ymm8,%ymm7,%ymm9                        #! PC = 0x555555558d7f *)
add ymm9_0 ymm7_0 ymm8_0;
add ymm9_1 ymm7_1 ymm8_1;
add ymm9_2 ymm7_2 ymm8_2;
add ymm9_3 ymm7_3 ymm8_3;
add ymm9_4 ymm7_4 ymm8_4;
add ymm9_5 ymm7_5 ymm8_5;
add ymm9_6 ymm7_6 ymm8_6;
add ymm9_7 ymm7_7 ymm8_7;
add ymm9_8 ymm7_8 ymm8_8;
add ymm9_9 ymm7_9 ymm8_9;
add ymm9_a ymm7_a ymm8_a;
add ymm9_b ymm7_b ymm8_b;
add ymm9_c ymm7_c ymm8_c;
add ymm9_d ymm7_d ymm8_d;
add ymm9_e ymm7_e ymm8_e;
add ymm9_f ymm7_f ymm8_f;
(* vpsubw %ymm8,%ymm7,%ymm8                        #! PC = 0x555555558d84 *)
sub ymm8_0 ymm7_0 ymm8_0;
sub ymm8_1 ymm7_1 ymm8_1;
sub ymm8_2 ymm7_2 ymm8_2;
sub ymm8_3 ymm7_3 ymm8_3;
sub ymm8_4 ymm7_4 ymm8_4;
sub ymm8_5 ymm7_5 ymm8_5;
sub ymm8_6 ymm7_6 ymm8_6;
sub ymm8_7 ymm7_7 ymm8_7;
sub ymm8_8 ymm7_8 ymm8_8;
sub ymm8_9 ymm7_9 ymm8_9;
sub ymm8_a ymm7_a ymm8_a;
sub ymm8_b ymm7_b ymm8_b;
sub ymm8_c ymm7_c ymm8_c;
sub ymm8_d ymm7_d ymm8_d;
sub ymm8_e ymm7_e ymm8_e;
sub ymm8_f ymm7_f ymm8_f;
(* vpaddw %ymm11,%ymm5,%ymm7                       #! PC = 0x555555558d89 *)
add ymm7_0 ymm5_0 ymm11_0;
add ymm7_1 ymm5_1 ymm11_1;
add ymm7_2 ymm5_2 ymm11_2;
add ymm7_3 ymm5_3 ymm11_3;
add ymm7_4 ymm5_4 ymm11_4;
add ymm7_5 ymm5_5 ymm11_5;
add ymm7_6 ymm5_6 ymm11_6;
add ymm7_7 ymm5_7 ymm11_7;
add ymm7_8 ymm5_8 ymm11_8;
add ymm7_9 ymm5_9 ymm11_9;
add ymm7_a ymm5_a ymm11_a;
add ymm7_b ymm5_b ymm11_b;
add ymm7_c ymm5_c ymm11_c;
add ymm7_d ymm5_d ymm11_d;
add ymm7_e ymm5_e ymm11_e;
add ymm7_f ymm5_f ymm11_f;
(* vpsubw %ymm11,%ymm5,%ymm11                      #! PC = 0x555555558d8e *)
sub ymm11_0 ymm5_0 ymm11_0;
sub ymm11_1 ymm5_1 ymm11_1;
sub ymm11_2 ymm5_2 ymm11_2;
sub ymm11_3 ymm5_3 ymm11_3;
sub ymm11_4 ymm5_4 ymm11_4;
sub ymm11_5 ymm5_5 ymm11_5;
sub ymm11_6 ymm5_6 ymm11_6;
sub ymm11_7 ymm5_7 ymm11_7;
sub ymm11_8 ymm5_8 ymm11_8;
sub ymm11_9 ymm5_9 ymm11_9;
sub ymm11_a ymm5_a ymm11_a;
sub ymm11_b ymm5_b ymm11_b;
sub ymm11_c ymm5_c ymm11_c;
sub ymm11_d ymm5_d ymm11_d;
sub ymm11_e ymm5_e ymm11_e;
sub ymm11_f ymm5_f ymm11_f;
(* vpunpcklwd %ymm3,%ymm4,%ymm5                    #! PC = 0x555555558d93 *)
mov lwd_0 ymm4_0;
mov lwd_1 ymm3_0;
mov lwd_2 ymm4_1;
mov lwd_3 ymm3_1;
mov lwd_4 ymm4_2;
mov lwd_5 ymm3_2;
mov lwd_6 ymm4_3;
mov lwd_7 ymm3_3;
mov lwd_8 ymm4_8;
mov lwd_9 ymm3_8;
mov lwd_a ymm4_9;
mov lwd_b ymm3_9;
mov lwd_c ymm4_a;
mov lwd_d ymm3_a;
mov lwd_e ymm4_b;
mov lwd_f ymm3_b;
mov ymm5_0 lwd_0;
mov ymm5_1 lwd_1;
mov ymm5_2 lwd_2;
mov ymm5_3 lwd_3;
mov ymm5_4 lwd_4;
mov ymm5_5 lwd_5;
mov ymm5_6 lwd_6;
mov ymm5_7 lwd_7;
mov ymm5_8 lwd_8;
mov ymm5_9 lwd_9;
mov ymm5_a lwd_a;
mov ymm5_b lwd_b;
mov ymm5_c lwd_c;
mov ymm5_d lwd_d;
mov ymm5_e lwd_e;
mov ymm5_f lwd_f;
(* vpunpckhwd %ymm3,%ymm4,%ymm3                    #! PC = 0x555555558d97 *)
mov hwd_0 ymm4_4;
mov hwd_1 ymm3_4;
mov hwd_2 ymm4_5;
mov hwd_3 ymm3_5;
mov hwd_4 ymm4_6;
mov hwd_5 ymm3_6;
mov hwd_6 ymm4_7;
mov hwd_7 ymm3_7;
mov hwd_8 ymm4_c;
mov hwd_9 ymm3_c;
mov hwd_a ymm4_d;
mov hwd_b ymm3_d;
mov hwd_c ymm4_e;
mov hwd_d ymm3_e;
mov hwd_e ymm4_f;
mov hwd_f ymm3_f;
mov ymm3_0 hwd_0;
mov ymm3_1 hwd_1;
mov ymm3_2 hwd_2;
mov ymm3_3 hwd_3;
mov ymm3_4 hwd_4;
mov ymm3_5 hwd_5;
mov ymm3_6 hwd_6;
mov ymm3_7 hwd_7;
mov ymm3_8 hwd_8;
mov ymm3_9 hwd_9;
mov ymm3_a hwd_a;
mov ymm3_b hwd_b;
mov ymm3_c hwd_c;
mov ymm3_d hwd_d;
mov ymm3_e hwd_e;
mov ymm3_f hwd_f;
(* vpunpcklwd %ymm6,%ymm10,%ymm4                   #! PC = 0x555555558d9b *)
mov lwd_0 ymm10_0;
mov lwd_1 ymm6_0;
mov lwd_2 ymm10_1;
mov lwd_3 ymm6_1;
mov lwd_4 ymm10_2;
mov lwd_5 ymm6_2;
mov lwd_6 ymm10_3;
mov lwd_7 ymm6_3;
mov lwd_8 ymm10_8;
mov lwd_9 ymm6_8;
mov lwd_a ymm10_9;
mov lwd_b ymm6_9;
mov lwd_c ymm10_a;
mov lwd_d ymm6_a;
mov lwd_e ymm10_b;
mov lwd_f ymm6_b;
mov ymm4_0 lwd_0;
mov ymm4_1 lwd_1;
mov ymm4_2 lwd_2;
mov ymm4_3 lwd_3;
mov ymm4_4 lwd_4;
mov ymm4_5 lwd_5;
mov ymm4_6 lwd_6;
mov ymm4_7 lwd_7;
mov ymm4_8 lwd_8;
mov ymm4_9 lwd_9;
mov ymm4_a lwd_a;
mov ymm4_b lwd_b;
mov ymm4_c lwd_c;
mov ymm4_d lwd_d;
mov ymm4_e lwd_e;
mov ymm4_f lwd_f;
(* vpunpckhwd %ymm6,%ymm10,%ymm6                   #! PC = 0x555555558d9f *)
mov hwd_0 ymm10_4;
mov hwd_1 ymm6_4;
mov hwd_2 ymm10_5;
mov hwd_3 ymm6_5;
mov hwd_4 ymm10_6;
mov hwd_5 ymm6_6;
mov hwd_6 ymm10_7;
mov hwd_7 ymm6_7;
mov hwd_8 ymm10_c;
mov hwd_9 ymm6_c;
mov hwd_a ymm10_d;
mov hwd_b ymm6_d;
mov hwd_c ymm10_e;
mov hwd_d ymm6_e;
mov hwd_e ymm10_f;
mov hwd_f ymm6_f;
mov ymm6_0 hwd_0;
mov ymm6_1 hwd_1;
mov ymm6_2 hwd_2;
mov ymm6_3 hwd_3;
mov ymm6_4 hwd_4;
mov ymm6_5 hwd_5;
mov ymm6_6 hwd_6;
mov ymm6_7 hwd_7;
mov ymm6_8 hwd_8;
mov ymm6_9 hwd_9;
mov ymm6_a hwd_a;
mov ymm6_b hwd_b;
mov ymm6_c hwd_c;
mov ymm6_d hwd_d;
mov ymm6_e hwd_e;
mov ymm6_f hwd_f;
(* vpunpcklwd %ymm8,%ymm9,%ymm10                   #! PC = 0x555555558da3 *)
mov lwd_0 ymm9_0;
mov lwd_1 ymm8_0;
mov lwd_2 ymm9_1;
mov lwd_3 ymm8_1;
mov lwd_4 ymm9_2;
mov lwd_5 ymm8_2;
mov lwd_6 ymm9_3;
mov lwd_7 ymm8_3;
mov lwd_8 ymm9_8;
mov lwd_9 ymm8_8;
mov lwd_a ymm9_9;
mov lwd_b ymm8_9;
mov lwd_c ymm9_a;
mov lwd_d ymm8_a;
mov lwd_e ymm9_b;
mov lwd_f ymm8_b;
mov ymm10_0 lwd_0;
mov ymm10_1 lwd_1;
mov ymm10_2 lwd_2;
mov ymm10_3 lwd_3;
mov ymm10_4 lwd_4;
mov ymm10_5 lwd_5;
mov ymm10_6 lwd_6;
mov ymm10_7 lwd_7;
mov ymm10_8 lwd_8;
mov ymm10_9 lwd_9;
mov ymm10_a lwd_a;
mov ymm10_b lwd_b;
mov ymm10_c lwd_c;
mov ymm10_d lwd_d;
mov ymm10_e lwd_e;
mov ymm10_f lwd_f;
(* vpunpckhwd %ymm8,%ymm9,%ymm8                    #! PC = 0x555555558da8 *)
mov hwd_0 ymm9_4;
mov hwd_1 ymm8_4;
mov hwd_2 ymm9_5;
mov hwd_3 ymm8_5;
mov hwd_4 ymm9_6;
mov hwd_5 ymm8_6;
mov hwd_6 ymm9_7;
mov hwd_7 ymm8_7;
mov hwd_8 ymm9_c;
mov hwd_9 ymm8_c;
mov hwd_a ymm9_d;
mov hwd_b ymm8_d;
mov hwd_c ymm9_e;
mov hwd_d ymm8_e;
mov hwd_e ymm9_f;
mov hwd_f ymm8_f;
mov ymm8_0 hwd_0;
mov ymm8_1 hwd_1;
mov ymm8_2 hwd_2;
mov ymm8_3 hwd_3;
mov ymm8_4 hwd_4;
mov ymm8_5 hwd_5;
mov ymm8_6 hwd_6;
mov ymm8_7 hwd_7;
mov ymm8_8 hwd_8;
mov ymm8_9 hwd_9;
mov ymm8_a hwd_a;
mov ymm8_b hwd_b;
mov ymm8_c hwd_c;
mov ymm8_d hwd_d;
mov ymm8_e hwd_e;
mov ymm8_f hwd_f;
(* vpunpcklwd %ymm11,%ymm7,%ymm9                   #! PC = 0x555555558dad *)
mov lwd_0 ymm7_0;
mov lwd_1 ymm11_0;
mov lwd_2 ymm7_1;
mov lwd_3 ymm11_1;
mov lwd_4 ymm7_2;
mov lwd_5 ymm11_2;
mov lwd_6 ymm7_3;
mov lwd_7 ymm11_3;
mov lwd_8 ymm7_8;
mov lwd_9 ymm11_8;
mov lwd_a ymm7_9;
mov lwd_b ymm11_9;
mov lwd_c ymm7_a;
mov lwd_d ymm11_a;
mov lwd_e ymm7_b;
mov lwd_f ymm11_b;
mov ymm9_0 lwd_0;
mov ymm9_1 lwd_1;
mov ymm9_2 lwd_2;
mov ymm9_3 lwd_3;
mov ymm9_4 lwd_4;
mov ymm9_5 lwd_5;
mov ymm9_6 lwd_6;
mov ymm9_7 lwd_7;
mov ymm9_8 lwd_8;
mov ymm9_9 lwd_9;
mov ymm9_a lwd_a;
mov ymm9_b lwd_b;
mov ymm9_c lwd_c;
mov ymm9_d lwd_d;
mov ymm9_e lwd_e;
mov ymm9_f lwd_f;
(* vpunpckhwd %ymm11,%ymm7,%ymm11                  #! PC = 0x555555558db2 *)
mov hwd_0 ymm7_4;
mov hwd_1 ymm11_4;
mov hwd_2 ymm7_5;
mov hwd_3 ymm11_5;
mov hwd_4 ymm7_6;
mov hwd_5 ymm11_6;
mov hwd_6 ymm7_7;
mov hwd_7 ymm11_7;
mov hwd_8 ymm7_c;
mov hwd_9 ymm11_c;
mov hwd_a ymm7_d;
mov hwd_b ymm11_d;
mov hwd_c ymm7_e;
mov hwd_d ymm11_e;
mov hwd_e ymm7_f;
mov hwd_f ymm11_f;
mov ymm11_0 hwd_0;
mov ymm11_1 hwd_1;
mov ymm11_2 hwd_2;
mov ymm11_3 hwd_3;
mov ymm11_4 hwd_4;
mov ymm11_5 hwd_5;
mov ymm11_6 hwd_6;
mov ymm11_7 hwd_7;
mov ymm11_8 hwd_8;
mov ymm11_9 hwd_9;
mov ymm11_a hwd_a;
mov ymm11_b hwd_b;
mov ymm11_c hwd_c;
mov ymm11_d hwd_d;
mov ymm11_e hwd_e;
mov ymm11_f hwd_f;
(* vpbroadcastq 0x180(%rdx),%ymm1                  #! EA = L0x5555555612a0; Value = 0x9f8203c9bf1afd9f; PC = 0x555555558db7 *)
mov ymm1_0 L0x5555555612a0;
mov ymm1_1 L0x5555555612a2;
mov ymm1_2 L0x5555555612a4;
mov ymm1_3 L0x5555555612a6;
mov ymm1_4 L0x5555555612a0;
mov ymm1_5 L0x5555555612a2;
mov ymm1_6 L0x5555555612a4;
mov ymm1_7 L0x5555555612a6;
mov ymm1_8 L0x5555555612a0;
mov ymm1_9 L0x5555555612a2;
mov ymm1_a L0x5555555612a4;
mov ymm1_b L0x5555555612a6;
mov ymm1_c L0x5555555612a0;
mov ymm1_d L0x5555555612a2;
mov ymm1_e L0x5555555612a4;
mov ymm1_f L0x5555555612a6;
(* vpbroadcastq 0x380(%rdx),%ymm2                  #! EA = L0x5555555614a0; Value = 0xf382fdc9031a139f; PC = 0x555555558dc0 *)
mov ymm2_0 L0x5555555614a0;
mov ymm2_1 L0x5555555614a2;
mov ymm2_2 L0x5555555614a4;
mov ymm2_3 L0x5555555614a6;
mov ymm2_4 L0x5555555614a0;
mov ymm2_5 L0x5555555614a2;
mov ymm2_6 L0x5555555614a4;
mov ymm2_7 L0x5555555614a6;
mov ymm2_8 L0x5555555614a0;
mov ymm2_9 L0x5555555614a2;
mov ymm2_a L0x5555555614a4;
mov ymm2_b L0x5555555614a6;
mov ymm2_c L0x5555555614a0;
mov ymm2_d L0x5555555614a2;
mov ymm2_e L0x5555555614a4;
mov ymm2_f L0x5555555614a6;
(* vpmullw %ymm1,%ymm3,%ymm7                       #! PC = 0x555555558dc9 *)
smull mulHymm3_0 mulL_0 ymm1_0 ymm3_0;
smull mulHymm3_1 mulL_1 ymm1_1 ymm3_1;
smull mulHymm3_2 mulL_2 ymm1_2 ymm3_2;
smull mulHymm3_3 mulL_3 ymm1_3 ymm3_3;
smull mulHymm3_4 mulL_4 ymm1_4 ymm3_4;
smull mulHymm3_5 mulL_5 ymm1_5 ymm3_5;
smull mulHymm3_6 mulL_6 ymm1_6 ymm3_6;
smull mulHymm3_7 mulL_7 ymm1_7 ymm3_7;
smull mulHymm3_8 mulL_8 ymm1_8 ymm3_8;
smull mulHymm3_9 mulL_9 ymm1_9 ymm3_9;
smull mulHymm3_a mulL_a ymm1_a ymm3_a;
smull mulHymm3_b mulL_b ymm1_b ymm3_b;
smull mulHymm3_c mulL_c ymm1_c ymm3_c;
smull mulHymm3_d mulL_d ymm1_d ymm3_d;
smull mulHymm3_e mulL_e ymm1_e ymm3_e;
smull mulHymm3_f mulL_f ymm1_f ymm3_f;
cast ymm7_0@sint16 mulL_0;
cast ymm7_1@sint16 mulL_1;
cast ymm7_2@sint16 mulL_2;
cast ymm7_3@sint16 mulL_3;
cast ymm7_4@sint16 mulL_4;
cast ymm7_5@sint16 mulL_5;
cast ymm7_6@sint16 mulL_6;
cast ymm7_7@sint16 mulL_7;
cast ymm7_8@sint16 mulL_8;
cast ymm7_9@sint16 mulL_9;
cast ymm7_a@sint16 mulL_a;
cast ymm7_b@sint16 mulL_b;
cast ymm7_c@sint16 mulL_c;
cast ymm7_d@sint16 mulL_d;
cast ymm7_e@sint16 mulL_e;
cast ymm7_f@sint16 mulL_f;
(* vpmulhw %ymm2,%ymm3,%ymm3                       #! PC = 0x555555558dcd *)
smull mulH_0 mulLymm3_0 ymm3_0 ymm2_0;
smull mulH_1 mulLymm3_1 ymm3_1 ymm2_1;
smull mulH_2 mulLymm3_2 ymm3_2 ymm2_2;
smull mulH_3 mulLymm3_3 ymm3_3 ymm2_3;
smull mulH_4 mulLymm3_4 ymm3_4 ymm2_4;
smull mulH_5 mulLymm3_5 ymm3_5 ymm2_5;
smull mulH_6 mulLymm3_6 ymm3_6 ymm2_6;
smull mulH_7 mulLymm3_7 ymm3_7 ymm2_7;
smull mulH_8 mulLymm3_8 ymm3_8 ymm2_8;
smull mulH_9 mulLymm3_9 ymm3_9 ymm2_9;
smull mulH_a mulLymm3_a ymm3_a ymm2_a;
smull mulH_b mulLymm3_b ymm3_b ymm2_b;
smull mulH_c mulLymm3_c ymm3_c ymm2_c;
smull mulH_d mulLymm3_d ymm3_d ymm2_d;
smull mulH_e mulLymm3_e ymm3_e ymm2_e;
smull mulH_f mulLymm3_f ymm3_f ymm2_f;
mov ymm3_0 mulH_0;
mov ymm3_1 mulH_1;
mov ymm3_2 mulH_2;
mov ymm3_3 mulH_3;
mov ymm3_4 mulH_4;
mov ymm3_5 mulH_5;
mov ymm3_6 mulH_6;
mov ymm3_7 mulH_7;
mov ymm3_8 mulH_8;
mov ymm3_9 mulH_9;
mov ymm3_a mulH_a;
mov ymm3_b mulH_b;
mov ymm3_c mulH_c;
mov ymm3_d mulH_d;
mov ymm3_e mulH_e;
mov ymm3_f mulH_f;
(* vpmulhw %ymm0,%ymm7,%ymm7                       #! PC = 0x555555558dd1 *)
smull mulH_0 red_0 ymm7_0 ymm0_0;
assert true && red_0 = mulLymm3_0;
assume red_0 = mulLymm3_0 && true;
smull mulH_1 red_1 ymm7_1 ymm0_1;
assert true && red_1 = mulLymm3_1;
assume red_1 = mulLymm3_1 && true;
smull mulH_2 red_2 ymm7_2 ymm0_2;
assert true && red_2 = mulLymm3_2;
assume red_2 = mulLymm3_2 && true;
smull mulH_3 red_3 ymm7_3 ymm0_3;
assert true && red_3 = mulLymm3_3;
assume red_3 = mulLymm3_3 && true;
smull mulH_4 red_4 ymm7_4 ymm0_4;
assert true && red_4 = mulLymm3_4;
assume red_4 = mulLymm3_4 && true;
smull mulH_5 red_5 ymm7_5 ymm0_5;
assert true && red_5 = mulLymm3_5;
assume red_5 = mulLymm3_5 && true;
smull mulH_6 red_6 ymm7_6 ymm0_6;
assert true && red_6 = mulLymm3_6;
assume red_6 = mulLymm3_6 && true;
smull mulH_7 red_7 ymm7_7 ymm0_7;
assert true && red_7 = mulLymm3_7;
assume red_7 = mulLymm3_7 && true;
smull mulH_8 red_8 ymm7_8 ymm0_8;
assert true && red_8 = mulLymm3_8;
assume red_8 = mulLymm3_8 && true;
smull mulH_9 red_9 ymm7_9 ymm0_9;
assert true && red_9 = mulLymm3_9;
assume red_9 = mulLymm3_9 && true;
smull mulH_a red_a ymm7_a ymm0_a;
assert true && red_a = mulLymm3_a;
assume red_a = mulLymm3_a && true;
smull mulH_b red_b ymm7_b ymm0_b;
assert true && red_b = mulLymm3_b;
assume red_b = mulLymm3_b && true;
smull mulH_c red_c ymm7_c ymm0_c;
assert true && red_c = mulLymm3_c;
assume red_c = mulLymm3_c && true;
smull mulH_d red_d ymm7_d ymm0_d;
assert true && red_d = mulLymm3_d;
assume red_d = mulLymm3_d && true;
smull mulH_e red_e ymm7_e ymm0_e;
assert true && red_e = mulLymm3_e;
assume red_e = mulLymm3_e && true;
smull mulH_f red_f ymm7_f ymm0_f;
assert true && red_f = mulLymm3_f;
assume red_f = mulLymm3_f && true;
mov ymm7_0 mulH_0;
mov ymm7_1 mulH_1;
mov ymm7_2 mulH_2;
mov ymm7_3 mulH_3;
mov ymm7_4 mulH_4;
mov ymm7_5 mulH_5;
mov ymm7_6 mulH_6;
mov ymm7_7 mulH_7;
mov ymm7_8 mulH_8;
mov ymm7_9 mulH_9;
mov ymm7_a mulH_a;
mov ymm7_b mulH_b;
mov ymm7_c mulH_c;
mov ymm7_d mulH_d;
mov ymm7_e mulH_e;
mov ymm7_f mulH_f;
(* vpsubw %ymm7,%ymm3,%ymm3                        #! PC = 0x555555558dd5 *)
sub ymm3_0 ymm3_0 ymm7_0;
sub ymm3_1 ymm3_1 ymm7_1;
sub ymm3_2 ymm3_2 ymm7_2;
sub ymm3_3 ymm3_3 ymm7_3;
sub ymm3_4 ymm3_4 ymm7_4;
sub ymm3_5 ymm3_5 ymm7_5;
sub ymm3_6 ymm3_6 ymm7_6;
sub ymm3_7 ymm3_7 ymm7_7;
sub ymm3_8 ymm3_8 ymm7_8;
sub ymm3_9 ymm3_9 ymm7_9;
sub ymm3_a ymm3_a ymm7_a;
sub ymm3_b ymm3_b ymm7_b;
sub ymm3_c ymm3_c ymm7_c;
sub ymm3_d ymm3_d ymm7_d;
sub ymm3_e ymm3_e ymm7_e;
sub ymm3_f ymm3_f ymm7_f;
(* vpbroadcastq 0x188(%rdx),%ymm1                  #! EA = L0x5555555612a8; Value = 0x2d238371d04a667e; PC = 0x555555558dd9 *)
mov ymm1_0 L0x5555555612a8;
mov ymm1_1 L0x5555555612aa;
mov ymm1_2 L0x5555555612ac;
mov ymm1_3 L0x5555555612ae;
mov ymm1_4 L0x5555555612a8;
mov ymm1_5 L0x5555555612aa;
mov ymm1_6 L0x5555555612ac;
mov ymm1_7 L0x5555555612ae;
mov ymm1_8 L0x5555555612a8;
mov ymm1_9 L0x5555555612aa;
mov ymm1_a L0x5555555612ac;
mov ymm1_b L0x5555555612ae;
mov ymm1_c L0x5555555612a8;
mov ymm1_d L0x5555555612aa;
mov ymm1_e L0x5555555612ac;
mov ymm1_f L0x5555555612ae;
(* vpbroadcastq 0x388(%rdx),%ymm2                  #! EA = L0x5555555614a8; Value = 0xeb230d71f44a127e; PC = 0x555555558de2 *)
mov ymm2_0 L0x5555555614a8;
mov ymm2_1 L0x5555555614aa;
mov ymm2_2 L0x5555555614ac;
mov ymm2_3 L0x5555555614ae;
mov ymm2_4 L0x5555555614a8;
mov ymm2_5 L0x5555555614aa;
mov ymm2_6 L0x5555555614ac;
mov ymm2_7 L0x5555555614ae;
mov ymm2_8 L0x5555555614a8;
mov ymm2_9 L0x5555555614aa;
mov ymm2_a L0x5555555614ac;
mov ymm2_b L0x5555555614ae;
mov ymm2_c L0x5555555614a8;
mov ymm2_d L0x5555555614aa;
mov ymm2_e L0x5555555614ac;
mov ymm2_f L0x5555555614ae;
(* vpmullw %ymm1,%ymm6,%ymm7                       #! PC = 0x555555558deb *)
smull mulHymm6_0 mulL_0 ymm1_0 ymm6_0;
smull mulHymm6_1 mulL_1 ymm1_1 ymm6_1;
smull mulHymm6_2 mulL_2 ymm1_2 ymm6_2;
smull mulHymm6_3 mulL_3 ymm1_3 ymm6_3;
smull mulHymm6_4 mulL_4 ymm1_4 ymm6_4;
smull mulHymm6_5 mulL_5 ymm1_5 ymm6_5;
smull mulHymm6_6 mulL_6 ymm1_6 ymm6_6;
smull mulHymm6_7 mulL_7 ymm1_7 ymm6_7;
smull mulHymm6_8 mulL_8 ymm1_8 ymm6_8;
smull mulHymm6_9 mulL_9 ymm1_9 ymm6_9;
smull mulHymm6_a mulL_a ymm1_a ymm6_a;
smull mulHymm6_b mulL_b ymm1_b ymm6_b;
smull mulHymm6_c mulL_c ymm1_c ymm6_c;
smull mulHymm6_d mulL_d ymm1_d ymm6_d;
smull mulHymm6_e mulL_e ymm1_e ymm6_e;
smull mulHymm6_f mulL_f ymm1_f ymm6_f;
cast ymm7_0@sint16 mulL_0;
cast ymm7_1@sint16 mulL_1;
cast ymm7_2@sint16 mulL_2;
cast ymm7_3@sint16 mulL_3;
cast ymm7_4@sint16 mulL_4;
cast ymm7_5@sint16 mulL_5;
cast ymm7_6@sint16 mulL_6;
cast ymm7_7@sint16 mulL_7;
cast ymm7_8@sint16 mulL_8;
cast ymm7_9@sint16 mulL_9;
cast ymm7_a@sint16 mulL_a;
cast ymm7_b@sint16 mulL_b;
cast ymm7_c@sint16 mulL_c;
cast ymm7_d@sint16 mulL_d;
cast ymm7_e@sint16 mulL_e;
cast ymm7_f@sint16 mulL_f;
(* vpmulhw %ymm2,%ymm6,%ymm6                       #! PC = 0x555555558def *)
smull mulH_0 mulLymm6_0 ymm6_0 ymm2_0;
smull mulH_1 mulLymm6_1 ymm6_1 ymm2_1;
smull mulH_2 mulLymm6_2 ymm6_2 ymm2_2;
smull mulH_3 mulLymm6_3 ymm6_3 ymm2_3;
smull mulH_4 mulLymm6_4 ymm6_4 ymm2_4;
smull mulH_5 mulLymm6_5 ymm6_5 ymm2_5;
smull mulH_6 mulLymm6_6 ymm6_6 ymm2_6;
smull mulH_7 mulLymm6_7 ymm6_7 ymm2_7;
smull mulH_8 mulLymm6_8 ymm6_8 ymm2_8;
smull mulH_9 mulLymm6_9 ymm6_9 ymm2_9;
smull mulH_a mulLymm6_a ymm6_a ymm2_a;
smull mulH_b mulLymm6_b ymm6_b ymm2_b;
smull mulH_c mulLymm6_c ymm6_c ymm2_c;
smull mulH_d mulLymm6_d ymm6_d ymm2_d;
smull mulH_e mulLymm6_e ymm6_e ymm2_e;
smull mulH_f mulLymm6_f ymm6_f ymm2_f;
mov ymm6_0 mulH_0;
mov ymm6_1 mulH_1;
mov ymm6_2 mulH_2;
mov ymm6_3 mulH_3;
mov ymm6_4 mulH_4;
mov ymm6_5 mulH_5;
mov ymm6_6 mulH_6;
mov ymm6_7 mulH_7;
mov ymm6_8 mulH_8;
mov ymm6_9 mulH_9;
mov ymm6_a mulH_a;
mov ymm6_b mulH_b;
mov ymm6_c mulH_c;
mov ymm6_d mulH_d;
mov ymm6_e mulH_e;
mov ymm6_f mulH_f;
(* vpmulhw %ymm0,%ymm7,%ymm7                       #! PC = 0x555555558df3 *)
smull mulH_0 red_0 ymm7_0 ymm0_0;
assert true && red_0 = mulLymm6_0;
assume red_0 = mulLymm6_0 && true;
smull mulH_1 red_1 ymm7_1 ymm0_1;
assert true && red_1 = mulLymm6_1;
assume red_1 = mulLymm6_1 && true;
smull mulH_2 red_2 ymm7_2 ymm0_2;
assert true && red_2 = mulLymm6_2;
assume red_2 = mulLymm6_2 && true;
smull mulH_3 red_3 ymm7_3 ymm0_3;
assert true && red_3 = mulLymm6_3;
assume red_3 = mulLymm6_3 && true;
smull mulH_4 red_4 ymm7_4 ymm0_4;
assert true && red_4 = mulLymm6_4;
assume red_4 = mulLymm6_4 && true;
smull mulH_5 red_5 ymm7_5 ymm0_5;
assert true && red_5 = mulLymm6_5;
assume red_5 = mulLymm6_5 && true;
smull mulH_6 red_6 ymm7_6 ymm0_6;
assert true && red_6 = mulLymm6_6;
assume red_6 = mulLymm6_6 && true;
smull mulH_7 red_7 ymm7_7 ymm0_7;
assert true && red_7 = mulLymm6_7;
assume red_7 = mulLymm6_7 && true;
smull mulH_8 red_8 ymm7_8 ymm0_8;
assert true && red_8 = mulLymm6_8;
assume red_8 = mulLymm6_8 && true;
smull mulH_9 red_9 ymm7_9 ymm0_9;
assert true && red_9 = mulLymm6_9;
assume red_9 = mulLymm6_9 && true;
smull mulH_a red_a ymm7_a ymm0_a;
assert true && red_a = mulLymm6_a;
assume red_a = mulLymm6_a && true;
smull mulH_b red_b ymm7_b ymm0_b;
assert true && red_b = mulLymm6_b;
assume red_b = mulLymm6_b && true;
smull mulH_c red_c ymm7_c ymm0_c;
assert true && red_c = mulLymm6_c;
assume red_c = mulLymm6_c && true;
smull mulH_d red_d ymm7_d ymm0_d;
assert true && red_d = mulLymm6_d;
assume red_d = mulLymm6_d && true;
smull mulH_e red_e ymm7_e ymm0_e;
assert true && red_e = mulLymm6_e;
assume red_e = mulLymm6_e && true;
smull mulH_f red_f ymm7_f ymm0_f;
assert true && red_f = mulLymm6_f;
assume red_f = mulLymm6_f && true;
mov ymm7_0 mulH_0;
mov ymm7_1 mulH_1;
mov ymm7_2 mulH_2;
mov ymm7_3 mulH_3;
mov ymm7_4 mulH_4;
mov ymm7_5 mulH_5;
mov ymm7_6 mulH_6;
mov ymm7_7 mulH_7;
mov ymm7_8 mulH_8;
mov ymm7_9 mulH_9;
mov ymm7_a mulH_a;
mov ymm7_b mulH_b;
mov ymm7_c mulH_c;
mov ymm7_d mulH_d;
mov ymm7_e mulH_e;
mov ymm7_f mulH_f;
(* vpsubw %ymm7,%ymm6,%ymm6                        #! PC = 0x555555558df7 *)
sub ymm6_0 ymm6_0 ymm7_0;
sub ymm6_1 ymm6_1 ymm7_1;
sub ymm6_2 ymm6_2 ymm7_2;
sub ymm6_3 ymm6_3 ymm7_3;
sub ymm6_4 ymm6_4 ymm7_4;
sub ymm6_5 ymm6_5 ymm7_5;
sub ymm6_6 ymm6_6 ymm7_6;
sub ymm6_7 ymm6_7 ymm7_7;
sub ymm6_8 ymm6_8 ymm7_8;
sub ymm6_9 ymm6_9 ymm7_9;
sub ymm6_a ymm6_a ymm7_a;
sub ymm6_b ymm6_b ymm7_b;
sub ymm6_c ymm6_c ymm7_c;
sub ymm6_d ymm6_d ymm7_d;
sub ymm6_e ymm6_e ymm7_e;
sub ymm6_f ymm6_f ymm7_f;
(* vpbroadcastq 0x190(%rdx),%ymm1                  #! EA = L0x5555555612b0; Value = 0x095b104f72df44a3; PC = 0x555555558dfb *)
mov ymm1_0 L0x5555555612b0;
mov ymm1_1 L0x5555555612b2;
mov ymm1_2 L0x5555555612b4;
mov ymm1_3 L0x5555555612b6;
mov ymm1_4 L0x5555555612b0;
mov ymm1_5 L0x5555555612b2;
mov ymm1_6 L0x5555555612b4;
mov ymm1_7 L0x5555555612b6;
mov ymm1_8 L0x5555555612b0;
mov ymm1_9 L0x5555555612b2;
mov ymm1_a L0x5555555612b4;
mov ymm1_b L0x5555555612b6;
mov ymm1_c L0x5555555612b0;
mov ymm1_d L0x5555555612b2;
mov ymm1_e L0x5555555612b4;
mov ymm1_f L0x5555555612b6;
(* vpbroadcastq 0x390(%rdx),%ymm2                  #! EA = L0x5555555614b0; Value = 0xf75b064f08df02a3; PC = 0x555555558e04 *)
mov ymm2_0 L0x5555555614b0;
mov ymm2_1 L0x5555555614b2;
mov ymm2_2 L0x5555555614b4;
mov ymm2_3 L0x5555555614b6;
mov ymm2_4 L0x5555555614b0;
mov ymm2_5 L0x5555555614b2;
mov ymm2_6 L0x5555555614b4;
mov ymm2_7 L0x5555555614b6;
mov ymm2_8 L0x5555555614b0;
mov ymm2_9 L0x5555555614b2;
mov ymm2_a L0x5555555614b4;
mov ymm2_b L0x5555555614b6;
mov ymm2_c L0x5555555614b0;
mov ymm2_d L0x5555555614b2;
mov ymm2_e L0x5555555614b4;
mov ymm2_f L0x5555555614b6;
(* vpmullw %ymm1,%ymm8,%ymm7                       #! PC = 0x555555558e0d *)
smull mulHymm8_0 mulL_0 ymm1_0 ymm8_0;
smull mulHymm8_1 mulL_1 ymm1_1 ymm8_1;
smull mulHymm8_2 mulL_2 ymm1_2 ymm8_2;
smull mulHymm8_3 mulL_3 ymm1_3 ymm8_3;
smull mulHymm8_4 mulL_4 ymm1_4 ymm8_4;
smull mulHymm8_5 mulL_5 ymm1_5 ymm8_5;
smull mulHymm8_6 mulL_6 ymm1_6 ymm8_6;
smull mulHymm8_7 mulL_7 ymm1_7 ymm8_7;
smull mulHymm8_8 mulL_8 ymm1_8 ymm8_8;
smull mulHymm8_9 mulL_9 ymm1_9 ymm8_9;
smull mulHymm8_a mulL_a ymm1_a ymm8_a;
smull mulHymm8_b mulL_b ymm1_b ymm8_b;
smull mulHymm8_c mulL_c ymm1_c ymm8_c;
smull mulHymm8_d mulL_d ymm1_d ymm8_d;
smull mulHymm8_e mulL_e ymm1_e ymm8_e;
smull mulHymm8_f mulL_f ymm1_f ymm8_f;
cast ymm7_0@sint16 mulL_0;
cast ymm7_1@sint16 mulL_1;
cast ymm7_2@sint16 mulL_2;
cast ymm7_3@sint16 mulL_3;
cast ymm7_4@sint16 mulL_4;
cast ymm7_5@sint16 mulL_5;
cast ymm7_6@sint16 mulL_6;
cast ymm7_7@sint16 mulL_7;
cast ymm7_8@sint16 mulL_8;
cast ymm7_9@sint16 mulL_9;
cast ymm7_a@sint16 mulL_a;
cast ymm7_b@sint16 mulL_b;
cast ymm7_c@sint16 mulL_c;
cast ymm7_d@sint16 mulL_d;
cast ymm7_e@sint16 mulL_e;
cast ymm7_f@sint16 mulL_f;
(* vpmulhw %ymm2,%ymm8,%ymm8                       #! PC = 0x555555558e11 *)
smull mulH_0 mulLymm8_0 ymm8_0 ymm2_0;
smull mulH_1 mulLymm8_1 ymm8_1 ymm2_1;
smull mulH_2 mulLymm8_2 ymm8_2 ymm2_2;
smull mulH_3 mulLymm8_3 ymm8_3 ymm2_3;
smull mulH_4 mulLymm8_4 ymm8_4 ymm2_4;
smull mulH_5 mulLymm8_5 ymm8_5 ymm2_5;
smull mulH_6 mulLymm8_6 ymm8_6 ymm2_6;
smull mulH_7 mulLymm8_7 ymm8_7 ymm2_7;
smull mulH_8 mulLymm8_8 ymm8_8 ymm2_8;
smull mulH_9 mulLymm8_9 ymm8_9 ymm2_9;
smull mulH_a mulLymm8_a ymm8_a ymm2_a;
smull mulH_b mulLymm8_b ymm8_b ymm2_b;
smull mulH_c mulLymm8_c ymm8_c ymm2_c;
smull mulH_d mulLymm8_d ymm8_d ymm2_d;
smull mulH_e mulLymm8_e ymm8_e ymm2_e;
smull mulH_f mulLymm8_f ymm8_f ymm2_f;
mov ymm8_0 mulH_0;
mov ymm8_1 mulH_1;
mov ymm8_2 mulH_2;
mov ymm8_3 mulH_3;
mov ymm8_4 mulH_4;
mov ymm8_5 mulH_5;
mov ymm8_6 mulH_6;
mov ymm8_7 mulH_7;
mov ymm8_8 mulH_8;
mov ymm8_9 mulH_9;
mov ymm8_a mulH_a;
mov ymm8_b mulH_b;
mov ymm8_c mulH_c;
mov ymm8_d mulH_d;
mov ymm8_e mulH_e;
mov ymm8_f mulH_f;
(* vpmulhw %ymm0,%ymm7,%ymm7                       #! PC = 0x555555558e15 *)
smull mulH_0 red_0 ymm7_0 ymm0_0;
assert true && red_0 = mulLymm8_0;
assume red_0 = mulLymm8_0 && true;
smull mulH_1 red_1 ymm7_1 ymm0_1;
assert true && red_1 = mulLymm8_1;
assume red_1 = mulLymm8_1 && true;
smull mulH_2 red_2 ymm7_2 ymm0_2;
assert true && red_2 = mulLymm8_2;
assume red_2 = mulLymm8_2 && true;
smull mulH_3 red_3 ymm7_3 ymm0_3;
assert true && red_3 = mulLymm8_3;
assume red_3 = mulLymm8_3 && true;
smull mulH_4 red_4 ymm7_4 ymm0_4;
assert true && red_4 = mulLymm8_4;
assume red_4 = mulLymm8_4 && true;
smull mulH_5 red_5 ymm7_5 ymm0_5;
assert true && red_5 = mulLymm8_5;
assume red_5 = mulLymm8_5 && true;
smull mulH_6 red_6 ymm7_6 ymm0_6;
assert true && red_6 = mulLymm8_6;
assume red_6 = mulLymm8_6 && true;
smull mulH_7 red_7 ymm7_7 ymm0_7;
assert true && red_7 = mulLymm8_7;
assume red_7 = mulLymm8_7 && true;
smull mulH_8 red_8 ymm7_8 ymm0_8;
assert true && red_8 = mulLymm8_8;
assume red_8 = mulLymm8_8 && true;
smull mulH_9 red_9 ymm7_9 ymm0_9;
assert true && red_9 = mulLymm8_9;
assume red_9 = mulLymm8_9 && true;
smull mulH_a red_a ymm7_a ymm0_a;
assert true && red_a = mulLymm8_a;
assume red_a = mulLymm8_a && true;
smull mulH_b red_b ymm7_b ymm0_b;
assert true && red_b = mulLymm8_b;
assume red_b = mulLymm8_b && true;
smull mulH_c red_c ymm7_c ymm0_c;
assert true && red_c = mulLymm8_c;
assume red_c = mulLymm8_c && true;
smull mulH_d red_d ymm7_d ymm0_d;
assert true && red_d = mulLymm8_d;
assume red_d = mulLymm8_d && true;
smull mulH_e red_e ymm7_e ymm0_e;
assert true && red_e = mulLymm8_e;
assume red_e = mulLymm8_e && true;
smull mulH_f red_f ymm7_f ymm0_f;
assert true && red_f = mulLymm8_f;
assume red_f = mulLymm8_f && true;
mov ymm7_0 mulH_0;
mov ymm7_1 mulH_1;
mov ymm7_2 mulH_2;
mov ymm7_3 mulH_3;
mov ymm7_4 mulH_4;
mov ymm7_5 mulH_5;
mov ymm7_6 mulH_6;
mov ymm7_7 mulH_7;
mov ymm7_8 mulH_8;
mov ymm7_9 mulH_9;
mov ymm7_a mulH_a;
mov ymm7_b mulH_b;
mov ymm7_c mulH_c;
mov ymm7_d mulH_d;
mov ymm7_e mulH_e;
mov ymm7_f mulH_f;
(* vpsubw %ymm7,%ymm8,%ymm8                        #! PC = 0x555555558e19 *)
sub ymm8_0 ymm8_0 ymm7_0;
sub ymm8_1 ymm8_1 ymm7_1;
sub ymm8_2 ymm8_2 ymm7_2;
sub ymm8_3 ymm8_3 ymm7_3;
sub ymm8_4 ymm8_4 ymm7_4;
sub ymm8_5 ymm8_5 ymm7_5;
sub ymm8_6 ymm8_6 ymm7_6;
sub ymm8_7 ymm8_7 ymm7_7;
sub ymm8_8 ymm8_8 ymm7_8;
sub ymm8_9 ymm8_9 ymm7_9;
sub ymm8_a ymm8_a ymm7_a;
sub ymm8_b ymm8_b ymm7_b;
sub ymm8_c ymm8_c ymm7_c;
sub ymm8_d ymm8_d ymm7_d;
sub ymm8_e ymm8_e ymm7_e;
sub ymm8_f ymm8_f ymm7_f;
(* vpbroadcastq 0x198(%rdx),%ymm1                  #! EA = L0x5555555612b8; Value = 0x7a0381f1eed60200; PC = 0x555555558e1d *)
mov ymm1_0 L0x5555555612b8;
mov ymm1_1 L0x5555555612ba;
mov ymm1_2 L0x5555555612bc;
mov ymm1_3 L0x5555555612be;
mov ymm1_4 L0x5555555612b8;
mov ymm1_5 L0x5555555612ba;
mov ymm1_6 L0x5555555612bc;
mov ymm1_7 L0x5555555612be;
mov ymm1_8 L0x5555555612b8;
mov ymm1_9 L0x5555555612ba;
mov ymm1_a L0x5555555612bc;
mov ymm1_b L0x5555555612be;
mov ymm1_c L0x5555555612b8;
mov ymm1_d L0x5555555612ba;
mov ymm1_e L0x5555555612bc;
mov ymm1_f L0x5555555612be;
(* vpbroadcastq 0x398(%rdx),%ymm2                  #! EA = L0x5555555614b8; Value = 0xf8030bf10ad60200; PC = 0x555555558e26 *)
mov ymm2_0 L0x5555555614b8;
mov ymm2_1 L0x5555555614ba;
mov ymm2_2 L0x5555555614bc;
mov ymm2_3 L0x5555555614be;
mov ymm2_4 L0x5555555614b8;
mov ymm2_5 L0x5555555614ba;
mov ymm2_6 L0x5555555614bc;
mov ymm2_7 L0x5555555614be;
mov ymm2_8 L0x5555555614b8;
mov ymm2_9 L0x5555555614ba;
mov ymm2_a L0x5555555614bc;
mov ymm2_b L0x5555555614be;
mov ymm2_c L0x5555555614b8;
mov ymm2_d L0x5555555614ba;
mov ymm2_e L0x5555555614bc;
mov ymm2_f L0x5555555614be;
(* vpmullw %ymm1,%ymm11,%ymm7                      #! PC = 0x555555558e2f *)
smull mulHymm11_0 mulL_0 ymm1_0 ymm11_0;
smull mulHymm11_1 mulL_1 ymm1_1 ymm11_1;
smull mulHymm11_2 mulL_2 ymm1_2 ymm11_2;
smull mulHymm11_3 mulL_3 ymm1_3 ymm11_3;
smull mulHymm11_4 mulL_4 ymm1_4 ymm11_4;
smull mulHymm11_5 mulL_5 ymm1_5 ymm11_5;
smull mulHymm11_6 mulL_6 ymm1_6 ymm11_6;
smull mulHymm11_7 mulL_7 ymm1_7 ymm11_7;
smull mulHymm11_8 mulL_8 ymm1_8 ymm11_8;
smull mulHymm11_9 mulL_9 ymm1_9 ymm11_9;
smull mulHymm11_a mulL_a ymm1_a ymm11_a;
smull mulHymm11_b mulL_b ymm1_b ymm11_b;
smull mulHymm11_c mulL_c ymm1_c ymm11_c;
smull mulHymm11_d mulL_d ymm1_d ymm11_d;
smull mulHymm11_e mulL_e ymm1_e ymm11_e;
smull mulHymm11_f mulL_f ymm1_f ymm11_f;
cast ymm7_0@sint16 mulL_0;
cast ymm7_1@sint16 mulL_1;
cast ymm7_2@sint16 mulL_2;
cast ymm7_3@sint16 mulL_3;
cast ymm7_4@sint16 mulL_4;
cast ymm7_5@sint16 mulL_5;
cast ymm7_6@sint16 mulL_6;
cast ymm7_7@sint16 mulL_7;
cast ymm7_8@sint16 mulL_8;
cast ymm7_9@sint16 mulL_9;
cast ymm7_a@sint16 mulL_a;
cast ymm7_b@sint16 mulL_b;
cast ymm7_c@sint16 mulL_c;
cast ymm7_d@sint16 mulL_d;
cast ymm7_e@sint16 mulL_e;
cast ymm7_f@sint16 mulL_f;
(* vpmulhw %ymm2,%ymm11,%ymm11                     #! PC = 0x555555558e33 *)
smull mulH_0 mulLymm11_0 ymm11_0 ymm2_0;
smull mulH_1 mulLymm11_1 ymm11_1 ymm2_1;
smull mulH_2 mulLymm11_2 ymm11_2 ymm2_2;
smull mulH_3 mulLymm11_3 ymm11_3 ymm2_3;
smull mulH_4 mulLymm11_4 ymm11_4 ymm2_4;
smull mulH_5 mulLymm11_5 ymm11_5 ymm2_5;
smull mulH_6 mulLymm11_6 ymm11_6 ymm2_6;
smull mulH_7 mulLymm11_7 ymm11_7 ymm2_7;
smull mulH_8 mulLymm11_8 ymm11_8 ymm2_8;
smull mulH_9 mulLymm11_9 ymm11_9 ymm2_9;
smull mulH_a mulLymm11_a ymm11_a ymm2_a;
smull mulH_b mulLymm11_b ymm11_b ymm2_b;
smull mulH_c mulLymm11_c ymm11_c ymm2_c;
smull mulH_d mulLymm11_d ymm11_d ymm2_d;
smull mulH_e mulLymm11_e ymm11_e ymm2_e;
smull mulH_f mulLymm11_f ymm11_f ymm2_f;
mov ymm11_0 mulH_0;
mov ymm11_1 mulH_1;
mov ymm11_2 mulH_2;
mov ymm11_3 mulH_3;
mov ymm11_4 mulH_4;
mov ymm11_5 mulH_5;
mov ymm11_6 mulH_6;
mov ymm11_7 mulH_7;
mov ymm11_8 mulH_8;
mov ymm11_9 mulH_9;
mov ymm11_a mulH_a;
mov ymm11_b mulH_b;
mov ymm11_c mulH_c;
mov ymm11_d mulH_d;
mov ymm11_e mulH_e;
mov ymm11_f mulH_f;
(* vpmulhw %ymm0,%ymm7,%ymm7                       #! PC = 0x555555558e37 *)
smull mulH_0 red_0 ymm7_0 ymm0_0;
assert true && red_0 = mulLymm11_0;
assume red_0 = mulLymm11_0 && true;
smull mulH_1 red_1 ymm7_1 ymm0_1;
assert true && red_1 = mulLymm11_1;
assume red_1 = mulLymm11_1 && true;
smull mulH_2 red_2 ymm7_2 ymm0_2;
assert true && red_2 = mulLymm11_2;
assume red_2 = mulLymm11_2 && true;
smull mulH_3 red_3 ymm7_3 ymm0_3;
assert true && red_3 = mulLymm11_3;
assume red_3 = mulLymm11_3 && true;
smull mulH_4 red_4 ymm7_4 ymm0_4;
assert true && red_4 = mulLymm11_4;
assume red_4 = mulLymm11_4 && true;
smull mulH_5 red_5 ymm7_5 ymm0_5;
assert true && red_5 = mulLymm11_5;
assume red_5 = mulLymm11_5 && true;
smull mulH_6 red_6 ymm7_6 ymm0_6;
assert true && red_6 = mulLymm11_6;
assume red_6 = mulLymm11_6 && true;
smull mulH_7 red_7 ymm7_7 ymm0_7;
assert true && red_7 = mulLymm11_7;
assume red_7 = mulLymm11_7 && true;
smull mulH_8 red_8 ymm7_8 ymm0_8;
assert true && red_8 = mulLymm11_8;
assume red_8 = mulLymm11_8 && true;
smull mulH_9 red_9 ymm7_9 ymm0_9;
assert true && red_9 = mulLymm11_9;
assume red_9 = mulLymm11_9 && true;
smull mulH_a red_a ymm7_a ymm0_a;
assert true && red_a = mulLymm11_a;
assume red_a = mulLymm11_a && true;
smull mulH_b red_b ymm7_b ymm0_b;
assert true && red_b = mulLymm11_b;
assume red_b = mulLymm11_b && true;
smull mulH_c red_c ymm7_c ymm0_c;
assert true && red_c = mulLymm11_c;
assume red_c = mulLymm11_c && true;
smull mulH_d red_d ymm7_d ymm0_d;
assert true && red_d = mulLymm11_d;
assume red_d = mulLymm11_d && true;
smull mulH_e red_e ymm7_e ymm0_e;
assert true && red_e = mulLymm11_e;
assume red_e = mulLymm11_e && true;
smull mulH_f red_f ymm7_f ymm0_f;
assert true && red_f = mulLymm11_f;
assume red_f = mulLymm11_f && true;
mov ymm7_0 mulH_0;
mov ymm7_1 mulH_1;
mov ymm7_2 mulH_2;
mov ymm7_3 mulH_3;
mov ymm7_4 mulH_4;
mov ymm7_5 mulH_5;
mov ymm7_6 mulH_6;
mov ymm7_7 mulH_7;
mov ymm7_8 mulH_8;
mov ymm7_9 mulH_9;
mov ymm7_a mulH_a;
mov ymm7_b mulH_b;
mov ymm7_c mulH_c;
mov ymm7_d mulH_d;
mov ymm7_e mulH_e;
mov ymm7_f mulH_f;
(* vpsubw %ymm7,%ymm11,%ymm11                      #! PC = 0x555555558e3b *)
sub ymm11_0 ymm11_0 ymm7_0;
sub ymm11_1 ymm11_1 ymm7_1;
sub ymm11_2 ymm11_2 ymm7_2;
sub ymm11_3 ymm11_3 ymm7_3;
sub ymm11_4 ymm11_4 ymm7_4;
sub ymm11_5 ymm11_5 ymm7_5;
sub ymm11_6 ymm11_6 ymm7_6;
sub ymm11_7 ymm11_7 ymm7_7;
sub ymm11_8 ymm11_8 ymm7_8;
sub ymm11_9 ymm11_9 ymm7_9;
sub ymm11_a ymm11_a ymm7_a;
sub ymm11_b ymm11_b ymm7_b;
sub ymm11_c ymm11_c ymm7_c;
sub ymm11_d ymm11_d ymm7_d;
sub ymm11_e ymm11_e ymm7_e;
sub ymm11_f ymm11_f ymm7_f;
(* vpaddw %ymm3,%ymm5,%ymm7                        #! PC = 0x555555558e3f *)
add ymm7_0 ymm5_0 ymm3_0;
add ymm7_1 ymm5_1 ymm3_1;
add ymm7_2 ymm5_2 ymm3_2;
add ymm7_3 ymm5_3 ymm3_3;
add ymm7_4 ymm5_4 ymm3_4;
add ymm7_5 ymm5_5 ymm3_5;
add ymm7_6 ymm5_6 ymm3_6;
add ymm7_7 ymm5_7 ymm3_7;
add ymm7_8 ymm5_8 ymm3_8;
add ymm7_9 ymm5_9 ymm3_9;
add ymm7_a ymm5_a ymm3_a;
add ymm7_b ymm5_b ymm3_b;
add ymm7_c ymm5_c ymm3_c;
add ymm7_d ymm5_d ymm3_d;
add ymm7_e ymm5_e ymm3_e;
add ymm7_f ymm5_f ymm3_f;
(* vpsubw %ymm3,%ymm5,%ymm3                        #! PC = 0x555555558e43 *)
sub ymm3_0 ymm5_0 ymm3_0;
sub ymm3_1 ymm5_1 ymm3_1;
sub ymm3_2 ymm5_2 ymm3_2;
sub ymm3_3 ymm5_3 ymm3_3;
sub ymm3_4 ymm5_4 ymm3_4;
sub ymm3_5 ymm5_5 ymm3_5;
sub ymm3_6 ymm5_6 ymm3_6;
sub ymm3_7 ymm5_7 ymm3_7;
sub ymm3_8 ymm5_8 ymm3_8;
sub ymm3_9 ymm5_9 ymm3_9;
sub ymm3_a ymm5_a ymm3_a;
sub ymm3_b ymm5_b ymm3_b;
sub ymm3_c ymm5_c ymm3_c;
sub ymm3_d ymm5_d ymm3_d;
sub ymm3_e ymm5_e ymm3_e;
sub ymm3_f ymm5_f ymm3_f;
(* vpaddw %ymm6,%ymm4,%ymm5                        #! PC = 0x555555558e47 *)
add ymm5_0 ymm4_0 ymm6_0;
add ymm5_1 ymm4_1 ymm6_1;
add ymm5_2 ymm4_2 ymm6_2;
add ymm5_3 ymm4_3 ymm6_3;
add ymm5_4 ymm4_4 ymm6_4;
add ymm5_5 ymm4_5 ymm6_5;
add ymm5_6 ymm4_6 ymm6_6;
add ymm5_7 ymm4_7 ymm6_7;
add ymm5_8 ymm4_8 ymm6_8;
add ymm5_9 ymm4_9 ymm6_9;
add ymm5_a ymm4_a ymm6_a;
add ymm5_b ymm4_b ymm6_b;
add ymm5_c ymm4_c ymm6_c;
add ymm5_d ymm4_d ymm6_d;
add ymm5_e ymm4_e ymm6_e;
add ymm5_f ymm4_f ymm6_f;
(* vpsubw %ymm6,%ymm4,%ymm6                        #! PC = 0x555555558e4b *)
sub ymm6_0 ymm4_0 ymm6_0;
sub ymm6_1 ymm4_1 ymm6_1;
sub ymm6_2 ymm4_2 ymm6_2;
sub ymm6_3 ymm4_3 ymm6_3;
sub ymm6_4 ymm4_4 ymm6_4;
sub ymm6_5 ymm4_5 ymm6_5;
sub ymm6_6 ymm4_6 ymm6_6;
sub ymm6_7 ymm4_7 ymm6_7;
sub ymm6_8 ymm4_8 ymm6_8;
sub ymm6_9 ymm4_9 ymm6_9;
sub ymm6_a ymm4_a ymm6_a;
sub ymm6_b ymm4_b ymm6_b;
sub ymm6_c ymm4_c ymm6_c;
sub ymm6_d ymm4_d ymm6_d;
sub ymm6_e ymm4_e ymm6_e;
sub ymm6_f ymm4_f ymm6_f;
(* vpaddw %ymm8,%ymm10,%ymm4                       #! PC = 0x555555558e4f *)
add ymm4_0 ymm10_0 ymm8_0;
add ymm4_1 ymm10_1 ymm8_1;
add ymm4_2 ymm10_2 ymm8_2;
add ymm4_3 ymm10_3 ymm8_3;
add ymm4_4 ymm10_4 ymm8_4;
add ymm4_5 ymm10_5 ymm8_5;
add ymm4_6 ymm10_6 ymm8_6;
add ymm4_7 ymm10_7 ymm8_7;
add ymm4_8 ymm10_8 ymm8_8;
add ymm4_9 ymm10_9 ymm8_9;
add ymm4_a ymm10_a ymm8_a;
add ymm4_b ymm10_b ymm8_b;
add ymm4_c ymm10_c ymm8_c;
add ymm4_d ymm10_d ymm8_d;
add ymm4_e ymm10_e ymm8_e;
add ymm4_f ymm10_f ymm8_f;
(* vpsubw %ymm8,%ymm10,%ymm8                       #! PC = 0x555555558e54 *)
sub ymm8_0 ymm10_0 ymm8_0;
sub ymm8_1 ymm10_1 ymm8_1;
sub ymm8_2 ymm10_2 ymm8_2;
sub ymm8_3 ymm10_3 ymm8_3;
sub ymm8_4 ymm10_4 ymm8_4;
sub ymm8_5 ymm10_5 ymm8_5;
sub ymm8_6 ymm10_6 ymm8_6;
sub ymm8_7 ymm10_7 ymm8_7;
sub ymm8_8 ymm10_8 ymm8_8;
sub ymm8_9 ymm10_9 ymm8_9;
sub ymm8_a ymm10_a ymm8_a;
sub ymm8_b ymm10_b ymm8_b;
sub ymm8_c ymm10_c ymm8_c;
sub ymm8_d ymm10_d ymm8_d;
sub ymm8_e ymm10_e ymm8_e;
sub ymm8_f ymm10_f ymm8_f;
(* vpaddw %ymm11,%ymm9,%ymm10                      #! PC = 0x555555558e59 *)
add ymm10_0 ymm9_0 ymm11_0;
add ymm10_1 ymm9_1 ymm11_1;
add ymm10_2 ymm9_2 ymm11_2;
add ymm10_3 ymm9_3 ymm11_3;
add ymm10_4 ymm9_4 ymm11_4;
add ymm10_5 ymm9_5 ymm11_5;
add ymm10_6 ymm9_6 ymm11_6;
add ymm10_7 ymm9_7 ymm11_7;
add ymm10_8 ymm9_8 ymm11_8;
add ymm10_9 ymm9_9 ymm11_9;
add ymm10_a ymm9_a ymm11_a;
add ymm10_b ymm9_b ymm11_b;
add ymm10_c ymm9_c ymm11_c;
add ymm10_d ymm9_d ymm11_d;
add ymm10_e ymm9_e ymm11_e;
add ymm10_f ymm9_f ymm11_f;
(* vpsubw %ymm11,%ymm9,%ymm11                      #! PC = 0x555555558e5e *)
sub ymm11_0 ymm9_0 ymm11_0;
sub ymm11_1 ymm9_1 ymm11_1;
sub ymm11_2 ymm9_2 ymm11_2;
sub ymm11_3 ymm9_3 ymm11_3;
sub ymm11_4 ymm9_4 ymm11_4;
sub ymm11_5 ymm9_5 ymm11_5;
sub ymm11_6 ymm9_6 ymm11_6;
sub ymm11_7 ymm9_7 ymm11_7;
sub ymm11_8 ymm9_8 ymm11_8;
sub ymm11_9 ymm9_9 ymm11_9;
sub ymm11_a ymm9_a ymm11_a;
sub ymm11_b ymm9_b ymm11_b;
sub ymm11_c ymm9_c ymm11_c;
sub ymm11_d ymm9_d ymm11_d;
sub ymm11_e ymm9_e ymm11_e;
sub ymm11_f ymm9_f ymm11_f;
(* vpunpcklwd %ymm3,%ymm7,%ymm9                    #! PC = 0x555555558e63 *)
mov lwd_0 ymm7_0;
mov lwd_1 ymm3_0;
mov lwd_2 ymm7_1;
mov lwd_3 ymm3_1;
mov lwd_4 ymm7_2;
mov lwd_5 ymm3_2;
mov lwd_6 ymm7_3;
mov lwd_7 ymm3_3;
mov lwd_8 ymm7_8;
mov lwd_9 ymm3_8;
mov lwd_a ymm7_9;
mov lwd_b ymm3_9;
mov lwd_c ymm7_a;
mov lwd_d ymm3_a;
mov lwd_e ymm7_b;
mov lwd_f ymm3_b;
mov ymm9_0 lwd_0;
mov ymm9_1 lwd_1;
mov ymm9_2 lwd_2;
mov ymm9_3 lwd_3;
mov ymm9_4 lwd_4;
mov ymm9_5 lwd_5;
mov ymm9_6 lwd_6;
mov ymm9_7 lwd_7;
mov ymm9_8 lwd_8;
mov ymm9_9 lwd_9;
mov ymm9_a lwd_a;
mov ymm9_b lwd_b;
mov ymm9_c lwd_c;
mov ymm9_d lwd_d;
mov ymm9_e lwd_e;
mov ymm9_f lwd_f;
(* vpunpckhwd %ymm3,%ymm7,%ymm3                    #! PC = 0x555555558e67 *)
mov hwd_0 ymm7_4;
mov hwd_1 ymm3_4;
mov hwd_2 ymm7_5;
mov hwd_3 ymm3_5;
mov hwd_4 ymm7_6;
mov hwd_5 ymm3_6;
mov hwd_6 ymm7_7;
mov hwd_7 ymm3_7;
mov hwd_8 ymm7_c;
mov hwd_9 ymm3_c;
mov hwd_a ymm7_d;
mov hwd_b ymm3_d;
mov hwd_c ymm7_e;
mov hwd_d ymm3_e;
mov hwd_e ymm7_f;
mov hwd_f ymm3_f;
mov ymm3_0 hwd_0;
mov ymm3_1 hwd_1;
mov ymm3_2 hwd_2;
mov ymm3_3 hwd_3;
mov ymm3_4 hwd_4;
mov ymm3_5 hwd_5;
mov ymm3_6 hwd_6;
mov ymm3_7 hwd_7;
mov ymm3_8 hwd_8;
mov ymm3_9 hwd_9;
mov ymm3_a hwd_a;
mov ymm3_b hwd_b;
mov ymm3_c hwd_c;
mov ymm3_d hwd_d;
mov ymm3_e hwd_e;
mov ymm3_f hwd_f;
(* vpunpcklwd %ymm6,%ymm5,%ymm7                    #! PC = 0x555555558e6b *)
mov lwd_0 ymm5_0;
mov lwd_1 ymm6_0;
mov lwd_2 ymm5_1;
mov lwd_3 ymm6_1;
mov lwd_4 ymm5_2;
mov lwd_5 ymm6_2;
mov lwd_6 ymm5_3;
mov lwd_7 ymm6_3;
mov lwd_8 ymm5_8;
mov lwd_9 ymm6_8;
mov lwd_a ymm5_9;
mov lwd_b ymm6_9;
mov lwd_c ymm5_a;
mov lwd_d ymm6_a;
mov lwd_e ymm5_b;
mov lwd_f ymm6_b;
mov ymm7_0 lwd_0;
mov ymm7_1 lwd_1;
mov ymm7_2 lwd_2;
mov ymm7_3 lwd_3;
mov ymm7_4 lwd_4;
mov ymm7_5 lwd_5;
mov ymm7_6 lwd_6;
mov ymm7_7 lwd_7;
mov ymm7_8 lwd_8;
mov ymm7_9 lwd_9;
mov ymm7_a lwd_a;
mov ymm7_b lwd_b;
mov ymm7_c lwd_c;
mov ymm7_d lwd_d;
mov ymm7_e lwd_e;
mov ymm7_f lwd_f;
(* vpunpckhwd %ymm6,%ymm5,%ymm6                    #! PC = 0x555555558e6f *)
mov hwd_0 ymm5_4;
mov hwd_1 ymm6_4;
mov hwd_2 ymm5_5;
mov hwd_3 ymm6_5;
mov hwd_4 ymm5_6;
mov hwd_5 ymm6_6;
mov hwd_6 ymm5_7;
mov hwd_7 ymm6_7;
mov hwd_8 ymm5_c;
mov hwd_9 ymm6_c;
mov hwd_a ymm5_d;
mov hwd_b ymm6_d;
mov hwd_c ymm5_e;
mov hwd_d ymm6_e;
mov hwd_e ymm5_f;
mov hwd_f ymm6_f;
mov ymm6_0 hwd_0;
mov ymm6_1 hwd_1;
mov ymm6_2 hwd_2;
mov ymm6_3 hwd_3;
mov ymm6_4 hwd_4;
mov ymm6_5 hwd_5;
mov ymm6_6 hwd_6;
mov ymm6_7 hwd_7;
mov ymm6_8 hwd_8;
mov ymm6_9 hwd_9;
mov ymm6_a hwd_a;
mov ymm6_b hwd_b;
mov ymm6_c hwd_c;
mov ymm6_d hwd_d;
mov ymm6_e hwd_e;
mov ymm6_f hwd_f;
(* vpunpcklwd %ymm8,%ymm4,%ymm5                    #! PC = 0x555555558e73 *)
mov lwd_0 ymm4_0;
mov lwd_1 ymm8_0;
mov lwd_2 ymm4_1;
mov lwd_3 ymm8_1;
mov lwd_4 ymm4_2;
mov lwd_5 ymm8_2;
mov lwd_6 ymm4_3;
mov lwd_7 ymm8_3;
mov lwd_8 ymm4_8;
mov lwd_9 ymm8_8;
mov lwd_a ymm4_9;
mov lwd_b ymm8_9;
mov lwd_c ymm4_a;
mov lwd_d ymm8_a;
mov lwd_e ymm4_b;
mov lwd_f ymm8_b;
mov ymm5_0 lwd_0;
mov ymm5_1 lwd_1;
mov ymm5_2 lwd_2;
mov ymm5_3 lwd_3;
mov ymm5_4 lwd_4;
mov ymm5_5 lwd_5;
mov ymm5_6 lwd_6;
mov ymm5_7 lwd_7;
mov ymm5_8 lwd_8;
mov ymm5_9 lwd_9;
mov ymm5_a lwd_a;
mov ymm5_b lwd_b;
mov ymm5_c lwd_c;
mov ymm5_d lwd_d;
mov ymm5_e lwd_e;
mov ymm5_f lwd_f;
(* vpunpckhwd %ymm8,%ymm4,%ymm8                    #! PC = 0x555555558e78 *)
mov hwd_0 ymm4_4;
mov hwd_1 ymm8_4;
mov hwd_2 ymm4_5;
mov hwd_3 ymm8_5;
mov hwd_4 ymm4_6;
mov hwd_5 ymm8_6;
mov hwd_6 ymm4_7;
mov hwd_7 ymm8_7;
mov hwd_8 ymm4_c;
mov hwd_9 ymm8_c;
mov hwd_a ymm4_d;
mov hwd_b ymm8_d;
mov hwd_c ymm4_e;
mov hwd_d ymm8_e;
mov hwd_e ymm4_f;
mov hwd_f ymm8_f;
mov ymm8_0 hwd_0;
mov ymm8_1 hwd_1;
mov ymm8_2 hwd_2;
mov ymm8_3 hwd_3;
mov ymm8_4 hwd_4;
mov ymm8_5 hwd_5;
mov ymm8_6 hwd_6;
mov ymm8_7 hwd_7;
mov ymm8_8 hwd_8;
mov ymm8_9 hwd_9;
mov ymm8_a hwd_a;
mov ymm8_b hwd_b;
mov ymm8_c hwd_c;
mov ymm8_d hwd_d;
mov ymm8_e hwd_e;
mov ymm8_f hwd_f;
(* vpunpcklwd %ymm11,%ymm10,%ymm4                  #! PC = 0x555555558e7d *)
mov lwd_0 ymm10_0;
mov lwd_1 ymm11_0;
mov lwd_2 ymm10_1;
mov lwd_3 ymm11_1;
mov lwd_4 ymm10_2;
mov lwd_5 ymm11_2;
mov lwd_6 ymm10_3;
mov lwd_7 ymm11_3;
mov lwd_8 ymm10_8;
mov lwd_9 ymm11_8;
mov lwd_a ymm10_9;
mov lwd_b ymm11_9;
mov lwd_c ymm10_a;
mov lwd_d ymm11_a;
mov lwd_e ymm10_b;
mov lwd_f ymm11_b;
mov ymm4_0 lwd_0;
mov ymm4_1 lwd_1;
mov ymm4_2 lwd_2;
mov ymm4_3 lwd_3;
mov ymm4_4 lwd_4;
mov ymm4_5 lwd_5;
mov ymm4_6 lwd_6;
mov ymm4_7 lwd_7;
mov ymm4_8 lwd_8;
mov ymm4_9 lwd_9;
mov ymm4_a lwd_a;
mov ymm4_b lwd_b;
mov ymm4_c lwd_c;
mov ymm4_d lwd_d;
mov ymm4_e lwd_e;
mov ymm4_f lwd_f;
(* vpunpckhwd %ymm11,%ymm10,%ymm11                 #! PC = 0x555555558e82 *)
mov hwd_0 ymm10_4;
mov hwd_1 ymm11_4;
mov hwd_2 ymm10_5;
mov hwd_3 ymm11_5;
mov hwd_4 ymm10_6;
mov hwd_5 ymm11_6;
mov hwd_6 ymm10_7;
mov hwd_7 ymm11_7;
mov hwd_8 ymm10_c;
mov hwd_9 ymm11_c;
mov hwd_a ymm10_d;
mov hwd_b ymm11_d;
mov hwd_c ymm10_e;
mov hwd_d ymm11_e;
mov hwd_e ymm10_f;
mov hwd_f ymm11_f;
mov ymm11_0 hwd_0;
mov ymm11_1 hwd_1;
mov ymm11_2 hwd_2;
mov ymm11_3 hwd_3;
mov ymm11_4 hwd_4;
mov ymm11_5 hwd_5;
mov ymm11_6 hwd_6;
mov ymm11_7 hwd_7;
mov ymm11_8 hwd_8;
mov ymm11_9 hwd_9;
mov ymm11_a hwd_a;
mov ymm11_b hwd_b;
mov ymm11_c hwd_c;
mov ymm11_d hwd_d;
mov ymm11_e hwd_e;
mov ymm11_f hwd_f;
(* vbroadcasti128 0x200(%rdx),%ymm1                #! EA = L0x555555561320; Value = 0x0ff3b3942cb6ffc3; PC = 0x555555558e87 *)
mov ymm1_0 L0x555555561320;
mov ymm1_1 L0x555555561322;
mov ymm1_2 L0x555555561324;
mov ymm1_3 L0x555555561326;
mov ymm1_4 L0x555555561328;
mov ymm1_5 L0x55555556132a;
mov ymm1_6 L0x55555556132c;
mov ymm1_7 L0x55555556132e;
mov ymm1_8 L0x555555561320;
mov ymm1_9 L0x555555561322;
mov ymm1_a L0x555555561324;
mov ymm1_b L0x555555561326;
mov ymm1_c L0x555555561328;
mov ymm1_d L0x55555556132a;
mov ymm1_e L0x55555556132c;
mov ymm1_f L0x55555556132e;
(* vbroadcasti128 0x400(%rdx),%ymm2                #! EA = L0x555555561520; Value = 0xedf3fb9408b6fdc3; PC = 0x555555558e90 *)
mov ymm2_0 L0x555555561520;
mov ymm2_1 L0x555555561522;
mov ymm2_2 L0x555555561524;
mov ymm2_3 L0x555555561526;
mov ymm2_4 L0x555555561528;
mov ymm2_5 L0x55555556152a;
mov ymm2_6 L0x55555556152c;
mov ymm2_7 L0x55555556152e;
mov ymm2_8 L0x555555561520;
mov ymm2_9 L0x555555561522;
mov ymm2_a L0x555555561524;
mov ymm2_b L0x555555561526;
mov ymm2_c L0x555555561528;
mov ymm2_d L0x55555556152a;
mov ymm2_e L0x55555556152c;
mov ymm2_f L0x55555556152e;
(* vpmullw %ymm1,%ymm3,%ymm10                      #! PC = 0x555555558e99 *)
smull mulHymm3_0 mulL_0 ymm1_0 ymm3_0;
smull mulHymm3_1 mulL_1 ymm1_1 ymm3_1;
smull mulHymm3_2 mulL_2 ymm1_2 ymm3_2;
smull mulHymm3_3 mulL_3 ymm1_3 ymm3_3;
smull mulHymm3_4 mulL_4 ymm1_4 ymm3_4;
smull mulHymm3_5 mulL_5 ymm1_5 ymm3_5;
smull mulHymm3_6 mulL_6 ymm1_6 ymm3_6;
smull mulHymm3_7 mulL_7 ymm1_7 ymm3_7;
smull mulHymm3_8 mulL_8 ymm1_8 ymm3_8;
smull mulHymm3_9 mulL_9 ymm1_9 ymm3_9;
smull mulHymm3_a mulL_a ymm1_a ymm3_a;
smull mulHymm3_b mulL_b ymm1_b ymm3_b;
smull mulHymm3_c mulL_c ymm1_c ymm3_c;
smull mulHymm3_d mulL_d ymm1_d ymm3_d;
smull mulHymm3_e mulL_e ymm1_e ymm3_e;
smull mulHymm3_f mulL_f ymm1_f ymm3_f;
cast ymm10_0@sint16 mulL_0;
cast ymm10_1@sint16 mulL_1;
cast ymm10_2@sint16 mulL_2;
cast ymm10_3@sint16 mulL_3;
cast ymm10_4@sint16 mulL_4;
cast ymm10_5@sint16 mulL_5;
cast ymm10_6@sint16 mulL_6;
cast ymm10_7@sint16 mulL_7;
cast ymm10_8@sint16 mulL_8;
cast ymm10_9@sint16 mulL_9;
cast ymm10_a@sint16 mulL_a;
cast ymm10_b@sint16 mulL_b;
cast ymm10_c@sint16 mulL_c;
cast ymm10_d@sint16 mulL_d;
cast ymm10_e@sint16 mulL_e;
cast ymm10_f@sint16 mulL_f;
(* vpmulhw %ymm2,%ymm3,%ymm3                       #! PC = 0x555555558e9d *)
smull mulH_0 mulLymm3_0 ymm3_0 ymm2_0;
smull mulH_1 mulLymm3_1 ymm3_1 ymm2_1;
smull mulH_2 mulLymm3_2 ymm3_2 ymm2_2;
smull mulH_3 mulLymm3_3 ymm3_3 ymm2_3;
smull mulH_4 mulLymm3_4 ymm3_4 ymm2_4;
smull mulH_5 mulLymm3_5 ymm3_5 ymm2_5;
smull mulH_6 mulLymm3_6 ymm3_6 ymm2_6;
smull mulH_7 mulLymm3_7 ymm3_7 ymm2_7;
smull mulH_8 mulLymm3_8 ymm3_8 ymm2_8;
smull mulH_9 mulLymm3_9 ymm3_9 ymm2_9;
smull mulH_a mulLymm3_a ymm3_a ymm2_a;
smull mulH_b mulLymm3_b ymm3_b ymm2_b;
smull mulH_c mulLymm3_c ymm3_c ymm2_c;
smull mulH_d mulLymm3_d ymm3_d ymm2_d;
smull mulH_e mulLymm3_e ymm3_e ymm2_e;
smull mulH_f mulLymm3_f ymm3_f ymm2_f;
mov ymm3_0 mulH_0;
mov ymm3_1 mulH_1;
mov ymm3_2 mulH_2;
mov ymm3_3 mulH_3;
mov ymm3_4 mulH_4;
mov ymm3_5 mulH_5;
mov ymm3_6 mulH_6;
mov ymm3_7 mulH_7;
mov ymm3_8 mulH_8;
mov ymm3_9 mulH_9;
mov ymm3_a mulH_a;
mov ymm3_b mulH_b;
mov ymm3_c mulH_c;
mov ymm3_d mulH_d;
mov ymm3_e mulH_e;
mov ymm3_f mulH_f;
(* vpmulhw %ymm0,%ymm10,%ymm10                     #! PC = 0x555555558ea1 *)
smull mulH_0 red_0 ymm10_0 ymm0_0;
assert true && red_0 = mulLymm3_0;
assume red_0 = mulLymm3_0 && true;
smull mulH_1 red_1 ymm10_1 ymm0_1;
assert true && red_1 = mulLymm3_1;
assume red_1 = mulLymm3_1 && true;
smull mulH_2 red_2 ymm10_2 ymm0_2;
assert true && red_2 = mulLymm3_2;
assume red_2 = mulLymm3_2 && true;
smull mulH_3 red_3 ymm10_3 ymm0_3;
assert true && red_3 = mulLymm3_3;
assume red_3 = mulLymm3_3 && true;
smull mulH_4 red_4 ymm10_4 ymm0_4;
assert true && red_4 = mulLymm3_4;
assume red_4 = mulLymm3_4 && true;
smull mulH_5 red_5 ymm10_5 ymm0_5;
assert true && red_5 = mulLymm3_5;
assume red_5 = mulLymm3_5 && true;
smull mulH_6 red_6 ymm10_6 ymm0_6;
assert true && red_6 = mulLymm3_6;
assume red_6 = mulLymm3_6 && true;
smull mulH_7 red_7 ymm10_7 ymm0_7;
assert true && red_7 = mulLymm3_7;
assume red_7 = mulLymm3_7 && true;
smull mulH_8 red_8 ymm10_8 ymm0_8;
assert true && red_8 = mulLymm3_8;
assume red_8 = mulLymm3_8 && true;
smull mulH_9 red_9 ymm10_9 ymm0_9;
assert true && red_9 = mulLymm3_9;
assume red_9 = mulLymm3_9 && true;
smull mulH_a red_a ymm10_a ymm0_a;
assert true && red_a = mulLymm3_a;
assume red_a = mulLymm3_a && true;
smull mulH_b red_b ymm10_b ymm0_b;
assert true && red_b = mulLymm3_b;
assume red_b = mulLymm3_b && true;
smull mulH_c red_c ymm10_c ymm0_c;
assert true && red_c = mulLymm3_c;
assume red_c = mulLymm3_c && true;
smull mulH_d red_d ymm10_d ymm0_d;
assert true && red_d = mulLymm3_d;
assume red_d = mulLymm3_d && true;
smull mulH_e red_e ymm10_e ymm0_e;
assert true && red_e = mulLymm3_e;
assume red_e = mulLymm3_e && true;
smull mulH_f red_f ymm10_f ymm0_f;
assert true && red_f = mulLymm3_f;
assume red_f = mulLymm3_f && true;
mov ymm10_0 mulH_0;
mov ymm10_1 mulH_1;
mov ymm10_2 mulH_2;
mov ymm10_3 mulH_3;
mov ymm10_4 mulH_4;
mov ymm10_5 mulH_5;
mov ymm10_6 mulH_6;
mov ymm10_7 mulH_7;
mov ymm10_8 mulH_8;
mov ymm10_9 mulH_9;
mov ymm10_a mulH_a;
mov ymm10_b mulH_b;
mov ymm10_c mulH_c;
mov ymm10_d mulH_d;
mov ymm10_e mulH_e;
mov ymm10_f mulH_f;
(* vpsubw %ymm10,%ymm3,%ymm3                       #! PC = 0x555555558ea5 *)
sub ymm3_0 ymm3_0 ymm10_0;
sub ymm3_1 ymm3_1 ymm10_1;
sub ymm3_2 ymm3_2 ymm10_2;
sub ymm3_3 ymm3_3 ymm10_3;
sub ymm3_4 ymm3_4 ymm10_4;
sub ymm3_5 ymm3_5 ymm10_5;
sub ymm3_6 ymm3_6 ymm10_6;
sub ymm3_7 ymm3_7 ymm10_7;
sub ymm3_8 ymm3_8 ymm10_8;
sub ymm3_9 ymm3_9 ymm10_9;
sub ymm3_a ymm3_a ymm10_a;
sub ymm3_b ymm3_b ymm10_b;
sub ymm3_c ymm3_c ymm10_c;
sub ymm3_d ymm3_d ymm10_d;
sub ymm3_e ymm3_e ymm10_e;
sub ymm3_f ymm3_f ymm10_f;
(* vbroadcasti128 0x210(%rdx),%ymm1                #! EA = L0x555555561330; Value = 0xe75681a18b7ded43; PC = 0x555555558eaa *)
mov ymm1_0 L0x555555561330;
mov ymm1_1 L0x555555561332;
mov ymm1_2 L0x555555561334;
mov ymm1_3 L0x555555561336;
mov ymm1_4 L0x555555561338;
mov ymm1_5 L0x55555556133a;
mov ymm1_6 L0x55555556133c;
mov ymm1_7 L0x55555556133e;
mov ymm1_8 L0x555555561330;
mov ymm1_9 L0x555555561332;
mov ymm1_a L0x555555561334;
mov ymm1_b L0x555555561336;
mov ymm1_c L0x555555561338;
mov ymm1_d L0x55555556133a;
mov ymm1_e L0x55555556133c;
mov ymm1_f L0x55555556133e;
(* vbroadcasti128 0x410(%rdx),%ymm2                #! EA = L0x555555561530; Value = 0x0356eba10d7deb43; PC = 0x555555558eb3 *)
mov ymm2_0 L0x555555561530;
mov ymm2_1 L0x555555561532;
mov ymm2_2 L0x555555561534;
mov ymm2_3 L0x555555561536;
mov ymm2_4 L0x555555561538;
mov ymm2_5 L0x55555556153a;
mov ymm2_6 L0x55555556153c;
mov ymm2_7 L0x55555556153e;
mov ymm2_8 L0x555555561530;
mov ymm2_9 L0x555555561532;
mov ymm2_a L0x555555561534;
mov ymm2_b L0x555555561536;
mov ymm2_c L0x555555561538;
mov ymm2_d L0x55555556153a;
mov ymm2_e L0x55555556153c;
mov ymm2_f L0x55555556153e;
(* vpmullw %ymm1,%ymm6,%ymm10                      #! PC = 0x555555558ebc *)
smull mulHymm6_0 mulL_0 ymm1_0 ymm6_0;
smull mulHymm6_1 mulL_1 ymm1_1 ymm6_1;
smull mulHymm6_2 mulL_2 ymm1_2 ymm6_2;
smull mulHymm6_3 mulL_3 ymm1_3 ymm6_3;
smull mulHymm6_4 mulL_4 ymm1_4 ymm6_4;
smull mulHymm6_5 mulL_5 ymm1_5 ymm6_5;
smull mulHymm6_6 mulL_6 ymm1_6 ymm6_6;
smull mulHymm6_7 mulL_7 ymm1_7 ymm6_7;
smull mulHymm6_8 mulL_8 ymm1_8 ymm6_8;
smull mulHymm6_9 mulL_9 ymm1_9 ymm6_9;
smull mulHymm6_a mulL_a ymm1_a ymm6_a;
smull mulHymm6_b mulL_b ymm1_b ymm6_b;
smull mulHymm6_c mulL_c ymm1_c ymm6_c;
smull mulHymm6_d mulL_d ymm1_d ymm6_d;
smull mulHymm6_e mulL_e ymm1_e ymm6_e;
smull mulHymm6_f mulL_f ymm1_f ymm6_f;
cast ymm10_0@sint16 mulL_0;
cast ymm10_1@sint16 mulL_1;
cast ymm10_2@sint16 mulL_2;
cast ymm10_3@sint16 mulL_3;
cast ymm10_4@sint16 mulL_4;
cast ymm10_5@sint16 mulL_5;
cast ymm10_6@sint16 mulL_6;
cast ymm10_7@sint16 mulL_7;
cast ymm10_8@sint16 mulL_8;
cast ymm10_9@sint16 mulL_9;
cast ymm10_a@sint16 mulL_a;
cast ymm10_b@sint16 mulL_b;
cast ymm10_c@sint16 mulL_c;
cast ymm10_d@sint16 mulL_d;
cast ymm10_e@sint16 mulL_e;
cast ymm10_f@sint16 mulL_f;
(* vpmulhw %ymm2,%ymm6,%ymm6                       #! PC = 0x555555558ec0 *)
smull mulH_0 mulLymm6_0 ymm6_0 ymm2_0;
smull mulH_1 mulLymm6_1 ymm6_1 ymm2_1;
smull mulH_2 mulLymm6_2 ymm6_2 ymm2_2;
smull mulH_3 mulLymm6_3 ymm6_3 ymm2_3;
smull mulH_4 mulLymm6_4 ymm6_4 ymm2_4;
smull mulH_5 mulLymm6_5 ymm6_5 ymm2_5;
smull mulH_6 mulLymm6_6 ymm6_6 ymm2_6;
smull mulH_7 mulLymm6_7 ymm6_7 ymm2_7;
smull mulH_8 mulLymm6_8 ymm6_8 ymm2_8;
smull mulH_9 mulLymm6_9 ymm6_9 ymm2_9;
smull mulH_a mulLymm6_a ymm6_a ymm2_a;
smull mulH_b mulLymm6_b ymm6_b ymm2_b;
smull mulH_c mulLymm6_c ymm6_c ymm2_c;
smull mulH_d mulLymm6_d ymm6_d ymm2_d;
smull mulH_e mulLymm6_e ymm6_e ymm2_e;
smull mulH_f mulLymm6_f ymm6_f ymm2_f;
mov ymm6_0 mulH_0;
mov ymm6_1 mulH_1;
mov ymm6_2 mulH_2;
mov ymm6_3 mulH_3;
mov ymm6_4 mulH_4;
mov ymm6_5 mulH_5;
mov ymm6_6 mulH_6;
mov ymm6_7 mulH_7;
mov ymm6_8 mulH_8;
mov ymm6_9 mulH_9;
mov ymm6_a mulH_a;
mov ymm6_b mulH_b;
mov ymm6_c mulH_c;
mov ymm6_d mulH_d;
mov ymm6_e mulH_e;
mov ymm6_f mulH_f;
(* vpmulhw %ymm0,%ymm10,%ymm10                     #! PC = 0x555555558ec4 *)
smull mulH_0 red_0 ymm10_0 ymm0_0;
assert true && red_0 = mulLymm6_0;
assume red_0 = mulLymm6_0 && true;
smull mulH_1 red_1 ymm10_1 ymm0_1;
assert true && red_1 = mulLymm6_1;
assume red_1 = mulLymm6_1 && true;
smull mulH_2 red_2 ymm10_2 ymm0_2;
assert true && red_2 = mulLymm6_2;
assume red_2 = mulLymm6_2 && true;
smull mulH_3 red_3 ymm10_3 ymm0_3;
assert true && red_3 = mulLymm6_3;
assume red_3 = mulLymm6_3 && true;
smull mulH_4 red_4 ymm10_4 ymm0_4;
assert true && red_4 = mulLymm6_4;
assume red_4 = mulLymm6_4 && true;
smull mulH_5 red_5 ymm10_5 ymm0_5;
assert true && red_5 = mulLymm6_5;
assume red_5 = mulLymm6_5 && true;
smull mulH_6 red_6 ymm10_6 ymm0_6;
assert true && red_6 = mulLymm6_6;
assume red_6 = mulLymm6_6 && true;
smull mulH_7 red_7 ymm10_7 ymm0_7;
assert true && red_7 = mulLymm6_7;
assume red_7 = mulLymm6_7 && true;
smull mulH_8 red_8 ymm10_8 ymm0_8;
assert true && red_8 = mulLymm6_8;
assume red_8 = mulLymm6_8 && true;
smull mulH_9 red_9 ymm10_9 ymm0_9;
assert true && red_9 = mulLymm6_9;
assume red_9 = mulLymm6_9 && true;
smull mulH_a red_a ymm10_a ymm0_a;
assert true && red_a = mulLymm6_a;
assume red_a = mulLymm6_a && true;
smull mulH_b red_b ymm10_b ymm0_b;
assert true && red_b = mulLymm6_b;
assume red_b = mulLymm6_b && true;
smull mulH_c red_c ymm10_c ymm0_c;
assert true && red_c = mulLymm6_c;
assume red_c = mulLymm6_c && true;
smull mulH_d red_d ymm10_d ymm0_d;
assert true && red_d = mulLymm6_d;
assume red_d = mulLymm6_d && true;
smull mulH_e red_e ymm10_e ymm0_e;
assert true && red_e = mulLymm6_e;
assume red_e = mulLymm6_e && true;
smull mulH_f red_f ymm10_f ymm0_f;
assert true && red_f = mulLymm6_f;
assume red_f = mulLymm6_f && true;
mov ymm10_0 mulH_0;
mov ymm10_1 mulH_1;
mov ymm10_2 mulH_2;
mov ymm10_3 mulH_3;
mov ymm10_4 mulH_4;
mov ymm10_5 mulH_5;
mov ymm10_6 mulH_6;
mov ymm10_7 mulH_7;
mov ymm10_8 mulH_8;
mov ymm10_9 mulH_9;
mov ymm10_a mulH_a;
mov ymm10_b mulH_b;
mov ymm10_c mulH_c;
mov ymm10_d mulH_d;
mov ymm10_e mulH_e;
mov ymm10_f mulH_f;
(* vpsubw %ymm10,%ymm6,%ymm6                       #! PC = 0x555555558ec8 *)
sub ymm6_0 ymm6_0 ymm10_0;
sub ymm6_1 ymm6_1 ymm10_1;
sub ymm6_2 ymm6_2 ymm10_2;
sub ymm6_3 ymm6_3 ymm10_3;
sub ymm6_4 ymm6_4 ymm10_4;
sub ymm6_5 ymm6_5 ymm10_5;
sub ymm6_6 ymm6_6 ymm10_6;
sub ymm6_7 ymm6_7 ymm10_7;
sub ymm6_8 ymm6_8 ymm10_8;
sub ymm6_9 ymm6_9 ymm10_9;
sub ymm6_a ymm6_a ymm10_a;
sub ymm6_b ymm6_b ymm10_b;
sub ymm6_c ymm6_c ymm10_c;
sub ymm6_d ymm6_d ymm10_d;
sub ymm6_e ymm6_e ymm10_e;
sub ymm6_f ymm6_f ymm10_f;
(* vbroadcasti128 0x220(%rdx),%ymm1                #! EA = L0x555555561340; Value = 0x4e66b63f84a1b269; PC = 0x555555558ecd *)
mov ymm1_0 L0x555555561340;
mov ymm1_1 L0x555555561342;
mov ymm1_2 L0x555555561344;
mov ymm1_3 L0x555555561346;
mov ymm1_4 L0x555555561348;
mov ymm1_5 L0x55555556134a;
mov ymm1_6 L0x55555556134c;
mov ymm1_7 L0x55555556134e;
mov ymm1_8 L0x555555561340;
mov ymm1_9 L0x555555561342;
mov ymm1_a L0x555555561344;
mov ymm1_b L0x555555561346;
mov ymm1_c L0x555555561348;
mov ymm1_d L0x55555556134a;
mov ymm1_e L0x55555556134c;
mov ymm1_f L0x55555556134e;
(* vbroadcasti128 0x420(%rdx),%ymm2                #! EA = L0x555555561540; Value = 0x0a660c3feea1ec69; PC = 0x555555558ed6 *)
mov ymm2_0 L0x555555561540;
mov ymm2_1 L0x555555561542;
mov ymm2_2 L0x555555561544;
mov ymm2_3 L0x555555561546;
mov ymm2_4 L0x555555561548;
mov ymm2_5 L0x55555556154a;
mov ymm2_6 L0x55555556154c;
mov ymm2_7 L0x55555556154e;
mov ymm2_8 L0x555555561540;
mov ymm2_9 L0x555555561542;
mov ymm2_a L0x555555561544;
mov ymm2_b L0x555555561546;
mov ymm2_c L0x555555561548;
mov ymm2_d L0x55555556154a;
mov ymm2_e L0x55555556154c;
mov ymm2_f L0x55555556154e;
(* vpmullw %ymm1,%ymm8,%ymm10                      #! PC = 0x555555558edf *)
smull mulHymm8_0 mulL_0 ymm1_0 ymm8_0;
smull mulHymm8_1 mulL_1 ymm1_1 ymm8_1;
smull mulHymm8_2 mulL_2 ymm1_2 ymm8_2;
smull mulHymm8_3 mulL_3 ymm1_3 ymm8_3;
smull mulHymm8_4 mulL_4 ymm1_4 ymm8_4;
smull mulHymm8_5 mulL_5 ymm1_5 ymm8_5;
smull mulHymm8_6 mulL_6 ymm1_6 ymm8_6;
smull mulHymm8_7 mulL_7 ymm1_7 ymm8_7;
smull mulHymm8_8 mulL_8 ymm1_8 ymm8_8;
smull mulHymm8_9 mulL_9 ymm1_9 ymm8_9;
smull mulHymm8_a mulL_a ymm1_a ymm8_a;
smull mulHymm8_b mulL_b ymm1_b ymm8_b;
smull mulHymm8_c mulL_c ymm1_c ymm8_c;
smull mulHymm8_d mulL_d ymm1_d ymm8_d;
smull mulHymm8_e mulL_e ymm1_e ymm8_e;
smull mulHymm8_f mulL_f ymm1_f ymm8_f;
cast ymm10_0@sint16 mulL_0;
cast ymm10_1@sint16 mulL_1;
cast ymm10_2@sint16 mulL_2;
cast ymm10_3@sint16 mulL_3;
cast ymm10_4@sint16 mulL_4;
cast ymm10_5@sint16 mulL_5;
cast ymm10_6@sint16 mulL_6;
cast ymm10_7@sint16 mulL_7;
cast ymm10_8@sint16 mulL_8;
cast ymm10_9@sint16 mulL_9;
cast ymm10_a@sint16 mulL_a;
cast ymm10_b@sint16 mulL_b;
cast ymm10_c@sint16 mulL_c;
cast ymm10_d@sint16 mulL_d;
cast ymm10_e@sint16 mulL_e;
cast ymm10_f@sint16 mulL_f;
(* vpmulhw %ymm2,%ymm8,%ymm8                       #! PC = 0x555555558ee3 *)
smull mulH_0 mulLymm8_0 ymm8_0 ymm2_0;
smull mulH_1 mulLymm8_1 ymm8_1 ymm2_1;
smull mulH_2 mulLymm8_2 ymm8_2 ymm2_2;
smull mulH_3 mulLymm8_3 ymm8_3 ymm2_3;
smull mulH_4 mulLymm8_4 ymm8_4 ymm2_4;
smull mulH_5 mulLymm8_5 ymm8_5 ymm2_5;
smull mulH_6 mulLymm8_6 ymm8_6 ymm2_6;
smull mulH_7 mulLymm8_7 ymm8_7 ymm2_7;
smull mulH_8 mulLymm8_8 ymm8_8 ymm2_8;
smull mulH_9 mulLymm8_9 ymm8_9 ymm2_9;
smull mulH_a mulLymm8_a ymm8_a ymm2_a;
smull mulH_b mulLymm8_b ymm8_b ymm2_b;
smull mulH_c mulLymm8_c ymm8_c ymm2_c;
smull mulH_d mulLymm8_d ymm8_d ymm2_d;
smull mulH_e mulLymm8_e ymm8_e ymm2_e;
smull mulH_f mulLymm8_f ymm8_f ymm2_f;
mov ymm8_0 mulH_0;
mov ymm8_1 mulH_1;
mov ymm8_2 mulH_2;
mov ymm8_3 mulH_3;
mov ymm8_4 mulH_4;
mov ymm8_5 mulH_5;
mov ymm8_6 mulH_6;
mov ymm8_7 mulH_7;
mov ymm8_8 mulH_8;
mov ymm8_9 mulH_9;
mov ymm8_a mulH_a;
mov ymm8_b mulH_b;
mov ymm8_c mulH_c;
mov ymm8_d mulH_d;
mov ymm8_e mulH_e;
mov ymm8_f mulH_f;
(* vpmulhw %ymm0,%ymm10,%ymm10                     #! PC = 0x555555558ee7 *)
smull mulH_0 red_0 ymm10_0 ymm0_0;
assert true && red_0 = mulLymm8_0;
assume red_0 = mulLymm8_0 && true;
smull mulH_1 red_1 ymm10_1 ymm0_1;
assert true && red_1 = mulLymm8_1;
assume red_1 = mulLymm8_1 && true;
smull mulH_2 red_2 ymm10_2 ymm0_2;
assert true && red_2 = mulLymm8_2;
assume red_2 = mulLymm8_2 && true;
smull mulH_3 red_3 ymm10_3 ymm0_3;
assert true && red_3 = mulLymm8_3;
assume red_3 = mulLymm8_3 && true;
smull mulH_4 red_4 ymm10_4 ymm0_4;
assert true && red_4 = mulLymm8_4;
assume red_4 = mulLymm8_4 && true;
smull mulH_5 red_5 ymm10_5 ymm0_5;
assert true && red_5 = mulLymm8_5;
assume red_5 = mulLymm8_5 && true;
smull mulH_6 red_6 ymm10_6 ymm0_6;
assert true && red_6 = mulLymm8_6;
assume red_6 = mulLymm8_6 && true;
smull mulH_7 red_7 ymm10_7 ymm0_7;
assert true && red_7 = mulLymm8_7;
assume red_7 = mulLymm8_7 && true;
smull mulH_8 red_8 ymm10_8 ymm0_8;
assert true && red_8 = mulLymm8_8;
assume red_8 = mulLymm8_8 && true;
smull mulH_9 red_9 ymm10_9 ymm0_9;
assert true && red_9 = mulLymm8_9;
assume red_9 = mulLymm8_9 && true;
smull mulH_a red_a ymm10_a ymm0_a;
assert true && red_a = mulLymm8_a;
assume red_a = mulLymm8_a && true;
smull mulH_b red_b ymm10_b ymm0_b;
assert true && red_b = mulLymm8_b;
assume red_b = mulLymm8_b && true;
smull mulH_c red_c ymm10_c ymm0_c;
assert true && red_c = mulLymm8_c;
assume red_c = mulLymm8_c && true;
smull mulH_d red_d ymm10_d ymm0_d;
assert true && red_d = mulLymm8_d;
assume red_d = mulLymm8_d && true;
smull mulH_e red_e ymm10_e ymm0_e;
assert true && red_e = mulLymm8_e;
assume red_e = mulLymm8_e && true;
smull mulH_f red_f ymm10_f ymm0_f;
assert true && red_f = mulLymm8_f;
assume red_f = mulLymm8_f && true;
mov ymm10_0 mulH_0;
mov ymm10_1 mulH_1;
mov ymm10_2 mulH_2;
mov ymm10_3 mulH_3;
mov ymm10_4 mulH_4;
mov ymm10_5 mulH_5;
mov ymm10_6 mulH_6;
mov ymm10_7 mulH_7;
mov ymm10_8 mulH_8;
mov ymm10_9 mulH_9;
mov ymm10_a mulH_a;
mov ymm10_b mulH_b;
mov ymm10_c mulH_c;
mov ymm10_d mulH_d;
mov ymm10_e mulH_e;
mov ymm10_f mulH_f;
(* vpsubw %ymm10,%ymm8,%ymm8                       #! PC = 0x555555558eeb *)
sub ymm8_0 ymm8_0 ymm10_0;
sub ymm8_1 ymm8_1 ymm10_1;
sub ymm8_2 ymm8_2 ymm10_2;
sub ymm8_3 ymm8_3 ymm10_3;
sub ymm8_4 ymm8_4 ymm10_4;
sub ymm8_5 ymm8_5 ymm10_5;
sub ymm8_6 ymm8_6 ymm10_6;
sub ymm8_7 ymm8_7 ymm10_7;
sub ymm8_8 ymm8_8 ymm10_8;
sub ymm8_9 ymm8_9 ymm10_9;
sub ymm8_a ymm8_a ymm10_a;
sub ymm8_b ymm8_b ymm10_b;
sub ymm8_c ymm8_c ymm10_c;
sub ymm8_d ymm8_d ymm10_d;
sub ymm8_e ymm8_e ymm10_e;
sub ymm8_f ymm8_f ymm10_f;
(* vbroadcasti128 0x230(%rdx),%ymm1                #! EA = L0x555555561350; Value = 0x66ae86aedf9f3f6c; PC = 0x555555558ef0 *)
mov ymm1_0 L0x555555561350;
mov ymm1_1 L0x555555561352;
mov ymm1_2 L0x555555561354;
mov ymm1_3 L0x555555561356;
mov ymm1_4 L0x555555561358;
mov ymm1_5 L0x55555556135a;
mov ymm1_6 L0x55555556135c;
mov ymm1_7 L0x55555556135e;
mov ymm1_8 L0x555555561350;
mov ymm1_9 L0x555555561352;
mov ymm1_a L0x555555561354;
mov ymm1_b L0x555555561356;
mov ymm1_c L0x555555561358;
mov ymm1_d L0x55555556135a;
mov ymm1_e L0x55555556135c;
mov ymm1_f L0x55555556135e;
(* vbroadcasti128 0x430(%rdx),%ymm2                #! EA = L0x555555561550; Value = 0xf2ae12aef59ff76c; PC = 0x555555558ef9 *)
mov ymm2_0 L0x555555561550;
mov ymm2_1 L0x555555561552;
mov ymm2_2 L0x555555561554;
mov ymm2_3 L0x555555561556;
mov ymm2_4 L0x555555561558;
mov ymm2_5 L0x55555556155a;
mov ymm2_6 L0x55555556155c;
mov ymm2_7 L0x55555556155e;
mov ymm2_8 L0x555555561550;
mov ymm2_9 L0x555555561552;
mov ymm2_a L0x555555561554;
mov ymm2_b L0x555555561556;
mov ymm2_c L0x555555561558;
mov ymm2_d L0x55555556155a;
mov ymm2_e L0x55555556155c;
mov ymm2_f L0x55555556155e;
(* vpmullw %ymm1,%ymm11,%ymm10                     #! PC = 0x555555558f02 *)
smull mulHymm11_0 mulL_0 ymm1_0 ymm11_0;
smull mulHymm11_1 mulL_1 ymm1_1 ymm11_1;
smull mulHymm11_2 mulL_2 ymm1_2 ymm11_2;
smull mulHymm11_3 mulL_3 ymm1_3 ymm11_3;
smull mulHymm11_4 mulL_4 ymm1_4 ymm11_4;
smull mulHymm11_5 mulL_5 ymm1_5 ymm11_5;
smull mulHymm11_6 mulL_6 ymm1_6 ymm11_6;
smull mulHymm11_7 mulL_7 ymm1_7 ymm11_7;
smull mulHymm11_8 mulL_8 ymm1_8 ymm11_8;
smull mulHymm11_9 mulL_9 ymm1_9 ymm11_9;
smull mulHymm11_a mulL_a ymm1_a ymm11_a;
smull mulHymm11_b mulL_b ymm1_b ymm11_b;
smull mulHymm11_c mulL_c ymm1_c ymm11_c;
smull mulHymm11_d mulL_d ymm1_d ymm11_d;
smull mulHymm11_e mulL_e ymm1_e ymm11_e;
smull mulHymm11_f mulL_f ymm1_f ymm11_f;
cast ymm10_0@sint16 mulL_0;
cast ymm10_1@sint16 mulL_1;
cast ymm10_2@sint16 mulL_2;
cast ymm10_3@sint16 mulL_3;
cast ymm10_4@sint16 mulL_4;
cast ymm10_5@sint16 mulL_5;
cast ymm10_6@sint16 mulL_6;
cast ymm10_7@sint16 mulL_7;
cast ymm10_8@sint16 mulL_8;
cast ymm10_9@sint16 mulL_9;
cast ymm10_a@sint16 mulL_a;
cast ymm10_b@sint16 mulL_b;
cast ymm10_c@sint16 mulL_c;
cast ymm10_d@sint16 mulL_d;
cast ymm10_e@sint16 mulL_e;
cast ymm10_f@sint16 mulL_f;
(* vpmulhw %ymm2,%ymm11,%ymm11                     #! PC = 0x555555558f06 *)
smull mulH_0 mulLymm11_0 ymm11_0 ymm2_0;
smull mulH_1 mulLymm11_1 ymm11_1 ymm2_1;
smull mulH_2 mulLymm11_2 ymm11_2 ymm2_2;
smull mulH_3 mulLymm11_3 ymm11_3 ymm2_3;
smull mulH_4 mulLymm11_4 ymm11_4 ymm2_4;
smull mulH_5 mulLymm11_5 ymm11_5 ymm2_5;
smull mulH_6 mulLymm11_6 ymm11_6 ymm2_6;
smull mulH_7 mulLymm11_7 ymm11_7 ymm2_7;
smull mulH_8 mulLymm11_8 ymm11_8 ymm2_8;
smull mulH_9 mulLymm11_9 ymm11_9 ymm2_9;
smull mulH_a mulLymm11_a ymm11_a ymm2_a;
smull mulH_b mulLymm11_b ymm11_b ymm2_b;
smull mulH_c mulLymm11_c ymm11_c ymm2_c;
smull mulH_d mulLymm11_d ymm11_d ymm2_d;
smull mulH_e mulLymm11_e ymm11_e ymm2_e;
smull mulH_f mulLymm11_f ymm11_f ymm2_f;
mov ymm11_0 mulH_0;
mov ymm11_1 mulH_1;
mov ymm11_2 mulH_2;
mov ymm11_3 mulH_3;
mov ymm11_4 mulH_4;
mov ymm11_5 mulH_5;
mov ymm11_6 mulH_6;
mov ymm11_7 mulH_7;
mov ymm11_8 mulH_8;
mov ymm11_9 mulH_9;
mov ymm11_a mulH_a;
mov ymm11_b mulH_b;
mov ymm11_c mulH_c;
mov ymm11_d mulH_d;
mov ymm11_e mulH_e;
mov ymm11_f mulH_f;
(* vpmulhw %ymm0,%ymm10,%ymm10                     #! PC = 0x555555558f0a *)
smull mulH_0 red_0 ymm10_0 ymm0_0;
assert true && red_0 = mulLymm11_0;
assume red_0 = mulLymm11_0 && true;
smull mulH_1 red_1 ymm10_1 ymm0_1;
assert true && red_1 = mulLymm11_1;
assume red_1 = mulLymm11_1 && true;
smull mulH_2 red_2 ymm10_2 ymm0_2;
assert true && red_2 = mulLymm11_2;
assume red_2 = mulLymm11_2 && true;
smull mulH_3 red_3 ymm10_3 ymm0_3;
assert true && red_3 = mulLymm11_3;
assume red_3 = mulLymm11_3 && true;
smull mulH_4 red_4 ymm10_4 ymm0_4;
assert true && red_4 = mulLymm11_4;
assume red_4 = mulLymm11_4 && true;
smull mulH_5 red_5 ymm10_5 ymm0_5;
assert true && red_5 = mulLymm11_5;
assume red_5 = mulLymm11_5 && true;
smull mulH_6 red_6 ymm10_6 ymm0_6;
assert true && red_6 = mulLymm11_6;
assume red_6 = mulLymm11_6 && true;
smull mulH_7 red_7 ymm10_7 ymm0_7;
assert true && red_7 = mulLymm11_7;
assume red_7 = mulLymm11_7 && true;
smull mulH_8 red_8 ymm10_8 ymm0_8;
assert true && red_8 = mulLymm11_8;
assume red_8 = mulLymm11_8 && true;
smull mulH_9 red_9 ymm10_9 ymm0_9;
assert true && red_9 = mulLymm11_9;
assume red_9 = mulLymm11_9 && true;
smull mulH_a red_a ymm10_a ymm0_a;
assert true && red_a = mulLymm11_a;
assume red_a = mulLymm11_a && true;
smull mulH_b red_b ymm10_b ymm0_b;
assert true && red_b = mulLymm11_b;
assume red_b = mulLymm11_b && true;
smull mulH_c red_c ymm10_c ymm0_c;
assert true && red_c = mulLymm11_c;
assume red_c = mulLymm11_c && true;
smull mulH_d red_d ymm10_d ymm0_d;
assert true && red_d = mulLymm11_d;
assume red_d = mulLymm11_d && true;
smull mulH_e red_e ymm10_e ymm0_e;
assert true && red_e = mulLymm11_e;
assume red_e = mulLymm11_e && true;
smull mulH_f red_f ymm10_f ymm0_f;
assert true && red_f = mulLymm11_f;
assume red_f = mulLymm11_f && true;
mov ymm10_0 mulH_0;
mov ymm10_1 mulH_1;
mov ymm10_2 mulH_2;
mov ymm10_3 mulH_3;
mov ymm10_4 mulH_4;
mov ymm10_5 mulH_5;
mov ymm10_6 mulH_6;
mov ymm10_7 mulH_7;
mov ymm10_8 mulH_8;
mov ymm10_9 mulH_9;
mov ymm10_a mulH_a;
mov ymm10_b mulH_b;
mov ymm10_c mulH_c;
mov ymm10_d mulH_d;
mov ymm10_e mulH_e;
mov ymm10_f mulH_f;
(* vpsubw %ymm10,%ymm11,%ymm11                     #! PC = 0x555555558f0e *)
sub ymm11_0 ymm11_0 ymm10_0;
sub ymm11_1 ymm11_1 ymm10_1;
sub ymm11_2 ymm11_2 ymm10_2;
sub ymm11_3 ymm11_3 ymm10_3;
sub ymm11_4 ymm11_4 ymm10_4;
sub ymm11_5 ymm11_5 ymm10_5;
sub ymm11_6 ymm11_6 ymm10_6;
sub ymm11_7 ymm11_7 ymm10_7;
sub ymm11_8 ymm11_8 ymm10_8;
sub ymm11_9 ymm11_9 ymm10_9;
sub ymm11_a ymm11_a ymm10_a;
sub ymm11_b ymm11_b ymm10_b;
sub ymm11_c ymm11_c ymm10_c;
sub ymm11_d ymm11_d ymm10_d;
sub ymm11_e ymm11_e ymm10_e;
sub ymm11_f ymm11_f ymm10_f;
(* vpaddw %ymm3,%ymm9,%ymm10                       #! PC = 0x555555558f13 *)
add ymm10_0 ymm9_0 ymm3_0;
add ymm10_1 ymm9_1 ymm3_1;
add ymm10_2 ymm9_2 ymm3_2;
add ymm10_3 ymm9_3 ymm3_3;
add ymm10_4 ymm9_4 ymm3_4;
add ymm10_5 ymm9_5 ymm3_5;
add ymm10_6 ymm9_6 ymm3_6;
add ymm10_7 ymm9_7 ymm3_7;
add ymm10_8 ymm9_8 ymm3_8;
add ymm10_9 ymm9_9 ymm3_9;
add ymm10_a ymm9_a ymm3_a;
add ymm10_b ymm9_b ymm3_b;
add ymm10_c ymm9_c ymm3_c;
add ymm10_d ymm9_d ymm3_d;
add ymm10_e ymm9_e ymm3_e;
add ymm10_f ymm9_f ymm3_f;
(* vpsubw %ymm3,%ymm9,%ymm3                        #! PC = 0x555555558f17 *)
sub ymm3_0 ymm9_0 ymm3_0;
sub ymm3_1 ymm9_1 ymm3_1;
sub ymm3_2 ymm9_2 ymm3_2;
sub ymm3_3 ymm9_3 ymm3_3;
sub ymm3_4 ymm9_4 ymm3_4;
sub ymm3_5 ymm9_5 ymm3_5;
sub ymm3_6 ymm9_6 ymm3_6;
sub ymm3_7 ymm9_7 ymm3_7;
sub ymm3_8 ymm9_8 ymm3_8;
sub ymm3_9 ymm9_9 ymm3_9;
sub ymm3_a ymm9_a ymm3_a;
sub ymm3_b ymm9_b ymm3_b;
sub ymm3_c ymm9_c ymm3_c;
sub ymm3_d ymm9_d ymm3_d;
sub ymm3_e ymm9_e ymm3_e;
sub ymm3_f ymm9_f ymm3_f;
(* vpaddw %ymm6,%ymm7,%ymm9                        #! PC = 0x555555558f1b *)
add ymm9_0 ymm7_0 ymm6_0;
add ymm9_1 ymm7_1 ymm6_1;
add ymm9_2 ymm7_2 ymm6_2;
add ymm9_3 ymm7_3 ymm6_3;
add ymm9_4 ymm7_4 ymm6_4;
add ymm9_5 ymm7_5 ymm6_5;
add ymm9_6 ymm7_6 ymm6_6;
add ymm9_7 ymm7_7 ymm6_7;
add ymm9_8 ymm7_8 ymm6_8;
add ymm9_9 ymm7_9 ymm6_9;
add ymm9_a ymm7_a ymm6_a;
add ymm9_b ymm7_b ymm6_b;
add ymm9_c ymm7_c ymm6_c;
add ymm9_d ymm7_d ymm6_d;
add ymm9_e ymm7_e ymm6_e;
add ymm9_f ymm7_f ymm6_f;
(* vpsubw %ymm6,%ymm7,%ymm6                        #! PC = 0x555555558f1f *)
sub ymm6_0 ymm7_0 ymm6_0;
sub ymm6_1 ymm7_1 ymm6_1;
sub ymm6_2 ymm7_2 ymm6_2;
sub ymm6_3 ymm7_3 ymm6_3;
sub ymm6_4 ymm7_4 ymm6_4;
sub ymm6_5 ymm7_5 ymm6_5;
sub ymm6_6 ymm7_6 ymm6_6;
sub ymm6_7 ymm7_7 ymm6_7;
sub ymm6_8 ymm7_8 ymm6_8;
sub ymm6_9 ymm7_9 ymm6_9;
sub ymm6_a ymm7_a ymm6_a;
sub ymm6_b ymm7_b ymm6_b;
sub ymm6_c ymm7_c ymm6_c;
sub ymm6_d ymm7_d ymm6_d;
sub ymm6_e ymm7_e ymm6_e;
sub ymm6_f ymm7_f ymm6_f;
(* vpaddw %ymm8,%ymm5,%ymm7                        #! PC = 0x555555558f23 *)
add ymm7_0 ymm5_0 ymm8_0;
add ymm7_1 ymm5_1 ymm8_1;
add ymm7_2 ymm5_2 ymm8_2;
add ymm7_3 ymm5_3 ymm8_3;
add ymm7_4 ymm5_4 ymm8_4;
add ymm7_5 ymm5_5 ymm8_5;
add ymm7_6 ymm5_6 ymm8_6;
add ymm7_7 ymm5_7 ymm8_7;
add ymm7_8 ymm5_8 ymm8_8;
add ymm7_9 ymm5_9 ymm8_9;
add ymm7_a ymm5_a ymm8_a;
add ymm7_b ymm5_b ymm8_b;
add ymm7_c ymm5_c ymm8_c;
add ymm7_d ymm5_d ymm8_d;
add ymm7_e ymm5_e ymm8_e;
add ymm7_f ymm5_f ymm8_f;
(* vpsubw %ymm8,%ymm5,%ymm8                        #! PC = 0x555555558f28 *)
sub ymm8_0 ymm5_0 ymm8_0;
sub ymm8_1 ymm5_1 ymm8_1;
sub ymm8_2 ymm5_2 ymm8_2;
sub ymm8_3 ymm5_3 ymm8_3;
sub ymm8_4 ymm5_4 ymm8_4;
sub ymm8_5 ymm5_5 ymm8_5;
sub ymm8_6 ymm5_6 ymm8_6;
sub ymm8_7 ymm5_7 ymm8_7;
sub ymm8_8 ymm5_8 ymm8_8;
sub ymm8_9 ymm5_9 ymm8_9;
sub ymm8_a ymm5_a ymm8_a;
sub ymm8_b ymm5_b ymm8_b;
sub ymm8_c ymm5_c ymm8_c;
sub ymm8_d ymm5_d ymm8_d;
sub ymm8_e ymm5_e ymm8_e;
sub ymm8_f ymm5_f ymm8_f;
(* vpaddw %ymm11,%ymm4,%ymm5                       #! PC = 0x555555558f2d *)
add ymm5_0 ymm4_0 ymm11_0;
add ymm5_1 ymm4_1 ymm11_1;
add ymm5_2 ymm4_2 ymm11_2;
add ymm5_3 ymm4_3 ymm11_3;
add ymm5_4 ymm4_4 ymm11_4;
add ymm5_5 ymm4_5 ymm11_5;
add ymm5_6 ymm4_6 ymm11_6;
add ymm5_7 ymm4_7 ymm11_7;
add ymm5_8 ymm4_8 ymm11_8;
add ymm5_9 ymm4_9 ymm11_9;
add ymm5_a ymm4_a ymm11_a;
add ymm5_b ymm4_b ymm11_b;
add ymm5_c ymm4_c ymm11_c;
add ymm5_d ymm4_d ymm11_d;
add ymm5_e ymm4_e ymm11_e;
add ymm5_f ymm4_f ymm11_f;
(* vpsubw %ymm11,%ymm4,%ymm11                      #! PC = 0x555555558f32 *)
sub ymm11_0 ymm4_0 ymm11_0;
sub ymm11_1 ymm4_1 ymm11_1;
sub ymm11_2 ymm4_2 ymm11_2;
sub ymm11_3 ymm4_3 ymm11_3;
sub ymm11_4 ymm4_4 ymm11_4;
sub ymm11_5 ymm4_5 ymm11_5;
sub ymm11_6 ymm4_6 ymm11_6;
sub ymm11_7 ymm4_7 ymm11_7;
sub ymm11_8 ymm4_8 ymm11_8;
sub ymm11_9 ymm4_9 ymm11_9;
sub ymm11_a ymm4_a ymm11_a;
sub ymm11_b ymm4_b ymm11_b;
sub ymm11_c ymm4_c ymm11_c;
sub ymm11_d ymm4_d ymm11_d;
sub ymm11_e ymm4_e ymm11_e;
sub ymm11_f ymm4_f ymm11_f;
(* vmovdqa %ymm10,0x400(%rdi)                      #! EA = L0x7fffffffd6e0; PC = 0x555555558f37 *)
mov L0x7fffffffd6e0 ymm10_0;
mov L0x7fffffffd6e2 ymm10_1;
mov L0x7fffffffd6e4 ymm10_2;
mov L0x7fffffffd6e6 ymm10_3;
mov L0x7fffffffd6e8 ymm10_4;
mov L0x7fffffffd6ea ymm10_5;
mov L0x7fffffffd6ec ymm10_6;
mov L0x7fffffffd6ee ymm10_7;
mov L0x7fffffffd6f0 ymm10_8;
mov L0x7fffffffd6f2 ymm10_9;
mov L0x7fffffffd6f4 ymm10_a;
mov L0x7fffffffd6f6 ymm10_b;
mov L0x7fffffffd6f8 ymm10_c;
mov L0x7fffffffd6fa ymm10_d;
mov L0x7fffffffd6fc ymm10_e;
mov L0x7fffffffd6fe ymm10_f;
(* vmovdqa %ymm3,0x420(%rdi)                       #! EA = L0x7fffffffd700; PC = 0x555555558f3f *)
mov L0x7fffffffd700 ymm3_0;
mov L0x7fffffffd702 ymm3_1;
mov L0x7fffffffd704 ymm3_2;
mov L0x7fffffffd706 ymm3_3;
mov L0x7fffffffd708 ymm3_4;
mov L0x7fffffffd70a ymm3_5;
mov L0x7fffffffd70c ymm3_6;
mov L0x7fffffffd70e ymm3_7;
mov L0x7fffffffd710 ymm3_8;
mov L0x7fffffffd712 ymm3_9;
mov L0x7fffffffd714 ymm3_a;
mov L0x7fffffffd716 ymm3_b;
mov L0x7fffffffd718 ymm3_c;
mov L0x7fffffffd71a ymm3_d;
mov L0x7fffffffd71c ymm3_e;
mov L0x7fffffffd71e ymm3_f;
(* vmovdqa %ymm9,0x440(%rdi)                       #! EA = L0x7fffffffd720; PC = 0x555555558f47 *)
mov L0x7fffffffd720 ymm9_0;
mov L0x7fffffffd722 ymm9_1;
mov L0x7fffffffd724 ymm9_2;
mov L0x7fffffffd726 ymm9_3;
mov L0x7fffffffd728 ymm9_4;
mov L0x7fffffffd72a ymm9_5;
mov L0x7fffffffd72c ymm9_6;
mov L0x7fffffffd72e ymm9_7;
mov L0x7fffffffd730 ymm9_8;
mov L0x7fffffffd732 ymm9_9;
mov L0x7fffffffd734 ymm9_a;
mov L0x7fffffffd736 ymm9_b;
mov L0x7fffffffd738 ymm9_c;
mov L0x7fffffffd73a ymm9_d;
mov L0x7fffffffd73c ymm9_e;
mov L0x7fffffffd73e ymm9_f;
(* vmovdqa %ymm6,0x460(%rdi)                       #! EA = L0x7fffffffd740; PC = 0x555555558f4f *)
mov L0x7fffffffd740 ymm6_0;
mov L0x7fffffffd742 ymm6_1;
mov L0x7fffffffd744 ymm6_2;
mov L0x7fffffffd746 ymm6_3;
mov L0x7fffffffd748 ymm6_4;
mov L0x7fffffffd74a ymm6_5;
mov L0x7fffffffd74c ymm6_6;
mov L0x7fffffffd74e ymm6_7;
mov L0x7fffffffd750 ymm6_8;
mov L0x7fffffffd752 ymm6_9;
mov L0x7fffffffd754 ymm6_a;
mov L0x7fffffffd756 ymm6_b;
mov L0x7fffffffd758 ymm6_c;
mov L0x7fffffffd75a ymm6_d;
mov L0x7fffffffd75c ymm6_e;
mov L0x7fffffffd75e ymm6_f;
(* vmovdqa %ymm7,0x480(%rdi)                       #! EA = L0x7fffffffd760; PC = 0x555555558f57 *)
mov L0x7fffffffd760 ymm7_0;
mov L0x7fffffffd762 ymm7_1;
mov L0x7fffffffd764 ymm7_2;
mov L0x7fffffffd766 ymm7_3;
mov L0x7fffffffd768 ymm7_4;
mov L0x7fffffffd76a ymm7_5;
mov L0x7fffffffd76c ymm7_6;
mov L0x7fffffffd76e ymm7_7;
mov L0x7fffffffd770 ymm7_8;
mov L0x7fffffffd772 ymm7_9;
mov L0x7fffffffd774 ymm7_a;
mov L0x7fffffffd776 ymm7_b;
mov L0x7fffffffd778 ymm7_c;
mov L0x7fffffffd77a ymm7_d;
mov L0x7fffffffd77c ymm7_e;
mov L0x7fffffffd77e ymm7_f;
(* vmovdqa %ymm8,0x4a0(%rdi)                       #! EA = L0x7fffffffd780; PC = 0x555555558f5f *)
mov L0x7fffffffd780 ymm8_0;
mov L0x7fffffffd782 ymm8_1;
mov L0x7fffffffd784 ymm8_2;
mov L0x7fffffffd786 ymm8_3;
mov L0x7fffffffd788 ymm8_4;
mov L0x7fffffffd78a ymm8_5;
mov L0x7fffffffd78c ymm8_6;
mov L0x7fffffffd78e ymm8_7;
mov L0x7fffffffd790 ymm8_8;
mov L0x7fffffffd792 ymm8_9;
mov L0x7fffffffd794 ymm8_a;
mov L0x7fffffffd796 ymm8_b;
mov L0x7fffffffd798 ymm8_c;
mov L0x7fffffffd79a ymm8_d;
mov L0x7fffffffd79c ymm8_e;
mov L0x7fffffffd79e ymm8_f;
(* vmovdqa %ymm5,0x4c0(%rdi)                       #! EA = L0x7fffffffd7a0; PC = 0x555555558f67 *)
mov L0x7fffffffd7a0 ymm5_0;
mov L0x7fffffffd7a2 ymm5_1;
mov L0x7fffffffd7a4 ymm5_2;
mov L0x7fffffffd7a6 ymm5_3;
mov L0x7fffffffd7a8 ymm5_4;
mov L0x7fffffffd7aa ymm5_5;
mov L0x7fffffffd7ac ymm5_6;
mov L0x7fffffffd7ae ymm5_7;
mov L0x7fffffffd7b0 ymm5_8;
mov L0x7fffffffd7b2 ymm5_9;
mov L0x7fffffffd7b4 ymm5_a;
mov L0x7fffffffd7b6 ymm5_b;
mov L0x7fffffffd7b8 ymm5_c;
mov L0x7fffffffd7ba ymm5_d;
mov L0x7fffffffd7bc ymm5_e;
mov L0x7fffffffd7be ymm5_f;
(* vmovdqa %ymm11,0x4e0(%rdi)                      #! EA = L0x7fffffffd7c0; PC = 0x555555558f6f *)
mov L0x7fffffffd7c0 ymm11_0;
mov L0x7fffffffd7c2 ymm11_1;
mov L0x7fffffffd7c4 ymm11_2;
mov L0x7fffffffd7c6 ymm11_3;
mov L0x7fffffffd7c8 ymm11_4;
mov L0x7fffffffd7ca ymm11_5;
mov L0x7fffffffd7cc ymm11_6;
mov L0x7fffffffd7ce ymm11_7;
mov L0x7fffffffd7d0 ymm11_8;
mov L0x7fffffffd7d2 ymm11_9;
mov L0x7fffffffd7d4 ymm11_a;
mov L0x7fffffffd7d6 ymm11_b;
mov L0x7fffffffd7d8 ymm11_c;
mov L0x7fffffffd7da ymm11_d;
mov L0x7fffffffd7dc ymm11_e;
mov L0x7fffffffd7de ymm11_f;


(**************** LEVELS 3-8, 4 *****************)


(**************** CUT 153, 15 *****************)

cut 
  and [
eqmod (inp_poly**2) (L0x7fffffffd6e0*x** 0+L0x7fffffffd6f0*x** 1)
      [10753, x**2 - 10],
eqmod (inp_poly**2) (L0x7fffffffd700*x** 0+L0x7fffffffd710*x** 1)
      [10753, x**2 - 10743],
eqmod (inp_poly**2) (L0x7fffffffd6e2*x** 0+L0x7fffffffd6f2*x** 1)
      [10753, x**2 - 8875],
eqmod (inp_poly**2) (L0x7fffffffd702*x** 0+L0x7fffffffd712*x** 1)
      [10753, x**2 - 1878],
eqmod (inp_poly**2) (L0x7fffffffd6e4*x** 0+L0x7fffffffd6f4*x** 1)
      [10753, x**2 - 3210],
eqmod (inp_poly**2) (L0x7fffffffd704*x** 0+L0x7fffffffd714*x** 1)
      [10753, x**2 - 7543],
eqmod (inp_poly**2) (L0x7fffffffd6e6*x** 0+L0x7fffffffd6f6*x** 1)
      [10753, x**2 - 10083],
eqmod (inp_poly**2) (L0x7fffffffd706*x** 0+L0x7fffffffd716*x** 1)
      [10753, x**2 - 670],
eqmod (inp_poly**2) (L0x7fffffffd6e8*x** 0+L0x7fffffffd6f8*x** 1)
      [10753, x**2 - 4946],
eqmod (inp_poly**2) (L0x7fffffffd708*x** 0+L0x7fffffffd718*x** 1)
      [10753, x**2 - 5807],
eqmod (inp_poly**2) (L0x7fffffffd6ea*x** 0+L0x7fffffffd6fa*x** 1)
      [10753, x**2 - 2351],
eqmod (inp_poly**2) (L0x7fffffffd70a*x** 0+L0x7fffffffd71a*x** 1)
      [10753, x**2 - 8402],
eqmod (inp_poly**2) (L0x7fffffffd6ec*x** 0+L0x7fffffffd6fc*x** 1)
      [10753, x**2 - 6975],
eqmod (inp_poly**2) (L0x7fffffffd70c*x** 0+L0x7fffffffd71c*x** 1)
      [10753, x**2 - 3778],
eqmod (inp_poly**2) (L0x7fffffffd6ee*x** 0+L0x7fffffffd6fe*x** 1)
      [10753, x**2 - 1961],
eqmod (inp_poly**2) (L0x7fffffffd70e*x** 0+L0x7fffffffd71e*x** 1)
      [10753, x**2 - 8792],
eqmod (inp_poly**2) (L0x7fffffffd720*x** 0+L0x7fffffffd730*x** 1)
      [10753, x**2 - 787],
eqmod (inp_poly**2) (L0x7fffffffd740*x** 0+L0x7fffffffd750*x** 1)
      [10753, x**2 - 9966],
eqmod (inp_poly**2) (L0x7fffffffd722*x** 0+L0x7fffffffd732*x** 1)
      [10753, x**2 - 4894],
eqmod (inp_poly**2) (L0x7fffffffd742*x** 0+L0x7fffffffd752*x** 1)
      [10753, x**2 - 5859],
eqmod (inp_poly**2) (L0x7fffffffd724*x** 0+L0x7fffffffd734*x** 1)
      [10753, x**2 - 5308],
eqmod (inp_poly**2) (L0x7fffffffd744*x** 0+L0x7fffffffd754*x** 1)
      [10753, x**2 - 5445],
eqmod (inp_poly**2) (L0x7fffffffd726*x** 0+L0x7fffffffd736*x** 1)
      [10753, x**2 - 1036],
eqmod (inp_poly**2) (L0x7fffffffd746*x** 0+L0x7fffffffd756*x** 1)
      [10753, x**2 - 9717],
eqmod (inp_poly**2) (L0x7fffffffd728*x** 0+L0x7fffffffd738*x** 1)
      [10753, x**2 - 8594],
eqmod (inp_poly**2) (L0x7fffffffd748*x** 0+L0x7fffffffd758*x** 1)
      [10753, x**2 - 2159],
eqmod (inp_poly**2) (L0x7fffffffd72a*x** 0+L0x7fffffffd73a*x** 1)
      [10753, x**2 - 3298],
eqmod (inp_poly**2) (L0x7fffffffd74a*x** 0+L0x7fffffffd75a*x** 1)
      [10753, x**2 - 7455],
eqmod (inp_poly**2) (L0x7fffffffd72c*x** 0+L0x7fffffffd73c*x** 1)
      [10753, x**2 - 5906],
eqmod (inp_poly**2) (L0x7fffffffd74c*x** 0+L0x7fffffffd75c*x** 1)
      [10753, x**2 - 4847],
eqmod (inp_poly**2) (L0x7fffffffd72e*x** 0+L0x7fffffffd73e*x** 1)
      [10753, x**2 - 4864],
eqmod (inp_poly**2) (L0x7fffffffd74e*x** 0+L0x7fffffffd75e*x** 1)
      [10753, x**2 - 5889],
eqmod (inp_poly**2) (L0x7fffffffd760*x** 0+L0x7fffffffd770*x** 1)
      [10753, x**2 - 3259],
eqmod (inp_poly**2) (L0x7fffffffd780*x** 0+L0x7fffffffd790*x** 1)
      [10753, x**2 - 7494],
eqmod (inp_poly**2) (L0x7fffffffd762*x** 0+L0x7fffffffd772*x** 1)
      [10753, x**2 - 5182],
eqmod (inp_poly**2) (L0x7fffffffd782*x** 0+L0x7fffffffd792*x** 1)
      [10753, x**2 - 5571],
eqmod (inp_poly**2) (L0x7fffffffd764*x** 0+L0x7fffffffd774*x** 1)
      [10753, x**2 - 3098],
eqmod (inp_poly**2) (L0x7fffffffd784*x** 0+L0x7fffffffd794*x** 1)
      [10753, x**2 - 7655],
eqmod (inp_poly**2) (L0x7fffffffd766*x** 0+L0x7fffffffd776*x** 1)
      [10753, x**2 - 7460],
eqmod (inp_poly**2) (L0x7fffffffd786*x** 0+L0x7fffffffd796*x** 1)
      [10753, x**2 - 3293],
eqmod (inp_poly**2) (L0x7fffffffd768*x** 0+L0x7fffffffd778*x** 1)
      [10753, x**2 - 1102],
eqmod (inp_poly**2) (L0x7fffffffd788*x** 0+L0x7fffffffd798*x** 1)
      [10753, x**2 - 9651],
eqmod (inp_poly**2) (L0x7fffffffd76a*x** 0+L0x7fffffffd77a*x** 1)
      [10753, x**2 - 10255],
eqmod (inp_poly**2) (L0x7fffffffd78a*x** 0+L0x7fffffffd79a*x** 1)
      [10753, x**2 - 498],
eqmod (inp_poly**2) (L0x7fffffffd76c*x** 0+L0x7fffffffd77c*x** 1)
      [10753, x**2 - 9646],
eqmod (inp_poly**2) (L0x7fffffffd78c*x** 0+L0x7fffffffd79c*x** 1)
      [10753, x**2 - 1107],
eqmod (inp_poly**2) (L0x7fffffffd76e*x** 0+L0x7fffffffd77e*x** 1)
      [10753, x**2 - 1437],
eqmod (inp_poly**2) (L0x7fffffffd78e*x** 0+L0x7fffffffd79e*x** 1)
      [10753, x**2 - 9316],
eqmod (inp_poly**2) (L0x7fffffffd7a0*x** 0+L0x7fffffffd7b0*x** 1)
      [10753, x**2 - 8089],
eqmod (inp_poly**2) (L0x7fffffffd7c0*x** 0+L0x7fffffffd7d0*x** 1)
      [10753, x**2 - 2664],
eqmod (inp_poly**2) (L0x7fffffffd7a2*x** 0+L0x7fffffffd7b2*x** 1)
      [10753, x**2 - 1360],
eqmod (inp_poly**2) (L0x7fffffffd7c2*x** 0+L0x7fffffffd7d2*x** 1)
      [10753, x**2 - 9393],
eqmod (inp_poly**2) (L0x7fffffffd7a4*x** 0+L0x7fffffffd7b4*x** 1)
      [10753, x**2 - 5096],
eqmod (inp_poly**2) (L0x7fffffffd7c4*x** 0+L0x7fffffffd7d4*x** 1)
      [10753, x**2 - 5657],
eqmod (inp_poly**2) (L0x7fffffffd7a6*x** 0+L0x7fffffffd7b6*x** 1)
      [10753, x**2 - 6440],
eqmod (inp_poly**2) (L0x7fffffffd7c6*x** 0+L0x7fffffffd7d6*x** 1)
      [10753, x**2 - 4313],
eqmod (inp_poly**2) (L0x7fffffffd7a8*x** 0+L0x7fffffffd7b8*x** 1)
      [10753, x**2 - 2854],
eqmod (inp_poly**2) (L0x7fffffffd7c8*x** 0+L0x7fffffffd7d8*x** 1)
      [10753, x**2 - 7899],
eqmod (inp_poly**2) (L0x7fffffffd7aa*x** 0+L0x7fffffffd7ba*x** 1)
      [10753, x**2 - 5970],
eqmod (inp_poly**2) (L0x7fffffffd7ca*x** 0+L0x7fffffffd7da*x** 1)
      [10753, x**2 - 4783],
eqmod (inp_poly**2) (L0x7fffffffd7ac*x** 0+L0x7fffffffd7bc*x** 1)
      [10753, x**2 - 2129],
eqmod (inp_poly**2) (L0x7fffffffd7cc*x** 0+L0x7fffffffd7dc*x** 1)
      [10753, x**2 - 8624],
eqmod (inp_poly**2) (L0x7fffffffd7ae*x** 0+L0x7fffffffd7be*x** 1)
      [10753, x**2 - 2336],
eqmod (inp_poly**2) (L0x7fffffffd7ce*x** 0+L0x7fffffffd7de*x** 1)
      [10753, x**2 - 8417]
  ] prove with [ precondition, cuts [ 11, 29, 47, 65, 83, 101, 119, 137] ] && and [
(-31199)@16<=s L0x7fffffffd6e0,L0x7fffffffd6e0<=s 31199@16,
(-31199)@16<=s L0x7fffffffd6f0,L0x7fffffffd6f0<=s 31199@16,
(-31199)@16<=s L0x7fffffffd700,L0x7fffffffd700<=s 31199@16,
(-31199)@16<=s L0x7fffffffd710,L0x7fffffffd710<=s 31199@16,
(-31836)@16<=s L0x7fffffffd6e2,L0x7fffffffd6e2<=s 31836@16,
(-31836)@16<=s L0x7fffffffd6f2,L0x7fffffffd6f2<=s 31836@16,
(-31836)@16<=s L0x7fffffffd702,L0x7fffffffd702<=s 31836@16,
(-31836)@16<=s L0x7fffffffd712,L0x7fffffffd712<=s 31836@16,
(-30187)@16<=s L0x7fffffffd6e4,L0x7fffffffd6e4<=s 30187@16,
(-30187)@16<=s L0x7fffffffd6f4,L0x7fffffffd6f4<=s 30187@16,
(-30187)@16<=s L0x7fffffffd704,L0x7fffffffd704<=s 30187@16,
(-30187)@16<=s L0x7fffffffd714,L0x7fffffffd714<=s 30187@16,
(-31492)@16<=s L0x7fffffffd6e6,L0x7fffffffd6e6<=s 31492@16,
(-31492)@16<=s L0x7fffffffd6f6,L0x7fffffffd6f6<=s 31492@16,
(-31492)@16<=s L0x7fffffffd706,L0x7fffffffd706<=s 31492@16,
(-31492)@16<=s L0x7fffffffd716,L0x7fffffffd716<=s 31492@16,
(-30808)@16<=s L0x7fffffffd6e8,L0x7fffffffd6e8<=s 30808@16,
(-30808)@16<=s L0x7fffffffd6f8,L0x7fffffffd6f8<=s 30808@16,
(-30808)@16<=s L0x7fffffffd708,L0x7fffffffd708<=s 30808@16,
(-30808)@16<=s L0x7fffffffd718,L0x7fffffffd718<=s 30808@16,
(-31522)@16<=s L0x7fffffffd6ea,L0x7fffffffd6ea<=s 31522@16,
(-31522)@16<=s L0x7fffffffd6fa,L0x7fffffffd6fa<=s 31522@16,
(-31522)@16<=s L0x7fffffffd70a,L0x7fffffffd70a<=s 31522@16,
(-31522)@16<=s L0x7fffffffd71a,L0x7fffffffd71a<=s 31522@16,
(-31855)@16<=s L0x7fffffffd6ec,L0x7fffffffd6ec<=s 31855@16,
(-31855)@16<=s L0x7fffffffd6fc,L0x7fffffffd6fc<=s 31855@16,
(-31855)@16<=s L0x7fffffffd70c,L0x7fffffffd70c<=s 31855@16,
(-31855)@16<=s L0x7fffffffd71c,L0x7fffffffd71c<=s 31855@16,
(-31951)@16<=s L0x7fffffffd6ee,L0x7fffffffd6ee<=s 31951@16,
(-31951)@16<=s L0x7fffffffd6fe,L0x7fffffffd6fe<=s 31951@16,
(-31951)@16<=s L0x7fffffffd70e,L0x7fffffffd70e<=s 31951@16,
(-31951)@16<=s L0x7fffffffd71e,L0x7fffffffd71e<=s 31951@16,
(-31317)@16<=s L0x7fffffffd720,L0x7fffffffd720<=s 31317@16,
(-31317)@16<=s L0x7fffffffd730,L0x7fffffffd730<=s 31317@16,
(-31317)@16<=s L0x7fffffffd740,L0x7fffffffd740<=s 31317@16,
(-31317)@16<=s L0x7fffffffd750,L0x7fffffffd750<=s 31317@16,
(-30689)@16<=s L0x7fffffffd722,L0x7fffffffd722<=s 30689@16,
(-30689)@16<=s L0x7fffffffd732,L0x7fffffffd732<=s 30689@16,
(-30689)@16<=s L0x7fffffffd742,L0x7fffffffd742<=s 30689@16,
(-30689)@16<=s L0x7fffffffd752,L0x7fffffffd752<=s 30689@16,
(-30823)@16<=s L0x7fffffffd724,L0x7fffffffd724<=s 30823@16,
(-30823)@16<=s L0x7fffffffd734,L0x7fffffffd734<=s 30823@16,
(-30823)@16<=s L0x7fffffffd744,L0x7fffffffd744<=s 30823@16,
(-30823)@16<=s L0x7fffffffd754,L0x7fffffffd754<=s 30823@16,
(-29289)@16<=s L0x7fffffffd726,L0x7fffffffd726<=s 29289@16,
(-29289)@16<=s L0x7fffffffd736,L0x7fffffffd736<=s 29289@16,
(-29289)@16<=s L0x7fffffffd746,L0x7fffffffd746<=s 29289@16,
(-29289)@16<=s L0x7fffffffd756,L0x7fffffffd756<=s 29289@16,
(-30567)@16<=s L0x7fffffffd728,L0x7fffffffd728<=s 30567@16,
(-30567)@16<=s L0x7fffffffd738,L0x7fffffffd738<=s 30567@16,
(-30567)@16<=s L0x7fffffffd748,L0x7fffffffd748<=s 30567@16,
(-30567)@16<=s L0x7fffffffd758,L0x7fffffffd758<=s 30567@16,
(-29916)@16<=s L0x7fffffffd72a,L0x7fffffffd72a<=s 29916@16,
(-29916)@16<=s L0x7fffffffd73a,L0x7fffffffd73a<=s 29916@16,
(-29916)@16<=s L0x7fffffffd74a,L0x7fffffffd74a<=s 29916@16,
(-29916)@16<=s L0x7fffffffd75a,L0x7fffffffd75a<=s 29916@16,
(-30049)@16<=s L0x7fffffffd72c,L0x7fffffffd72c<=s 30049@16,
(-30049)@16<=s L0x7fffffffd73c,L0x7fffffffd73c<=s 30049@16,
(-30049)@16<=s L0x7fffffffd74c,L0x7fffffffd74c<=s 30049@16,
(-30049)@16<=s L0x7fffffffd75c,L0x7fffffffd75c<=s 30049@16,
(-31454)@16<=s L0x7fffffffd72e,L0x7fffffffd72e<=s 31454@16,
(-31454)@16<=s L0x7fffffffd73e,L0x7fffffffd73e<=s 31454@16,
(-31454)@16<=s L0x7fffffffd74e,L0x7fffffffd74e<=s 31454@16,
(-31454)@16<=s L0x7fffffffd75e,L0x7fffffffd75e<=s 31454@16,
(-30984)@16<=s L0x7fffffffd760,L0x7fffffffd760<=s 30984@16,
(-30984)@16<=s L0x7fffffffd770,L0x7fffffffd770<=s 30984@16,
(-30984)@16<=s L0x7fffffffd780,L0x7fffffffd780<=s 30984@16,
(-30984)@16<=s L0x7fffffffd790,L0x7fffffffd790<=s 30984@16,
(-30808)@16<=s L0x7fffffffd762,L0x7fffffffd762<=s 30808@16,
(-30808)@16<=s L0x7fffffffd772,L0x7fffffffd772<=s 30808@16,
(-30808)@16<=s L0x7fffffffd782,L0x7fffffffd782<=s 30808@16,
(-30808)@16<=s L0x7fffffffd792,L0x7fffffffd792<=s 30808@16,
(-30793)@16<=s L0x7fffffffd764,L0x7fffffffd764<=s 30793@16,
(-30793)@16<=s L0x7fffffffd774,L0x7fffffffd774<=s 30793@16,
(-30793)@16<=s L0x7fffffffd784,L0x7fffffffd784<=s 30793@16,
(-30793)@16<=s L0x7fffffffd794,L0x7fffffffd794<=s 30793@16,
(-30605)@16<=s L0x7fffffffd766,L0x7fffffffd766<=s 30605@16,
(-30605)@16<=s L0x7fffffffd776,L0x7fffffffd776<=s 30605@16,
(-30605)@16<=s L0x7fffffffd786,L0x7fffffffd786<=s 30605@16,
(-30605)@16<=s L0x7fffffffd796,L0x7fffffffd796<=s 30605@16,
(-30925)@16<=s L0x7fffffffd768,L0x7fffffffd768<=s 30925@16,
(-30925)@16<=s L0x7fffffffd778,L0x7fffffffd778<=s 30925@16,
(-30925)@16<=s L0x7fffffffd788,L0x7fffffffd788<=s 30925@16,
(-30925)@16<=s L0x7fffffffd798,L0x7fffffffd798<=s 30925@16,
(-30233)@16<=s L0x7fffffffd76a,L0x7fffffffd76a<=s 30233@16,
(-30233)@16<=s L0x7fffffffd77a,L0x7fffffffd77a<=s 30233@16,
(-30233)@16<=s L0x7fffffffd78a,L0x7fffffffd78a<=s 30233@16,
(-30233)@16<=s L0x7fffffffd79a,L0x7fffffffd79a<=s 30233@16,
(-30590)@16<=s L0x7fffffffd76c,L0x7fffffffd76c<=s 30590@16,
(-30590)@16<=s L0x7fffffffd77c,L0x7fffffffd77c<=s 30590@16,
(-30590)@16<=s L0x7fffffffd78c,L0x7fffffffd78c<=s 30590@16,
(-30590)@16<=s L0x7fffffffd79c,L0x7fffffffd79c<=s 30590@16,
(-29986)@16<=s L0x7fffffffd76e,L0x7fffffffd76e<=s 29986@16,
(-29986)@16<=s L0x7fffffffd77e,L0x7fffffffd77e<=s 29986@16,
(-29986)@16<=s L0x7fffffffd78e,L0x7fffffffd78e<=s 29986@16,
(-29986)@16<=s L0x7fffffffd79e,L0x7fffffffd79e<=s 29986@16,
(-29552)@16<=s L0x7fffffffd7a0,L0x7fffffffd7a0<=s 29552@16,
(-29552)@16<=s L0x7fffffffd7b0,L0x7fffffffd7b0<=s 29552@16,
(-29552)@16<=s L0x7fffffffd7c0,L0x7fffffffd7c0<=s 29552@16,
(-29552)@16<=s L0x7fffffffd7d0,L0x7fffffffd7d0<=s 29552@16,
(-29721)@16<=s L0x7fffffffd7a2,L0x7fffffffd7a2<=s 29721@16,
(-29721)@16<=s L0x7fffffffd7b2,L0x7fffffffd7b2<=s 29721@16,
(-29721)@16<=s L0x7fffffffd7c2,L0x7fffffffd7c2<=s 29721@16,
(-29721)@16<=s L0x7fffffffd7d2,L0x7fffffffd7d2<=s 29721@16,
(-31089)@16<=s L0x7fffffffd7a4,L0x7fffffffd7a4<=s 31089@16,
(-31089)@16<=s L0x7fffffffd7b4,L0x7fffffffd7b4<=s 31089@16,
(-31089)@16<=s L0x7fffffffd7c4,L0x7fffffffd7c4<=s 31089@16,
(-31089)@16<=s L0x7fffffffd7d4,L0x7fffffffd7d4<=s 31089@16,
(-30585)@16<=s L0x7fffffffd7a6,L0x7fffffffd7a6<=s 30585@16,
(-30585)@16<=s L0x7fffffffd7b6,L0x7fffffffd7b6<=s 30585@16,
(-30585)@16<=s L0x7fffffffd7c6,L0x7fffffffd7c6<=s 30585@16,
(-30585)@16<=s L0x7fffffffd7d6,L0x7fffffffd7d6<=s 30585@16,
(-30924)@16<=s L0x7fffffffd7a8,L0x7fffffffd7a8<=s 30924@16,
(-30924)@16<=s L0x7fffffffd7b8,L0x7fffffffd7b8<=s 30924@16,
(-30924)@16<=s L0x7fffffffd7c8,L0x7fffffffd7c8<=s 30924@16,
(-30924)@16<=s L0x7fffffffd7d8,L0x7fffffffd7d8<=s 30924@16,
(-30908)@16<=s L0x7fffffffd7aa,L0x7fffffffd7aa<=s 30908@16,
(-30908)@16<=s L0x7fffffffd7ba,L0x7fffffffd7ba<=s 30908@16,
(-30908)@16<=s L0x7fffffffd7ca,L0x7fffffffd7ca<=s 30908@16,
(-30908)@16<=s L0x7fffffffd7da,L0x7fffffffd7da<=s 30908@16,
(-31644)@16<=s L0x7fffffffd7ac,L0x7fffffffd7ac<=s 31644@16,
(-31644)@16<=s L0x7fffffffd7bc,L0x7fffffffd7bc<=s 31644@16,
(-31644)@16<=s L0x7fffffffd7cc,L0x7fffffffd7cc<=s 31644@16,
(-31644)@16<=s L0x7fffffffd7dc,L0x7fffffffd7dc<=s 31644@16,
(-30477)@16<=s L0x7fffffffd7ae,L0x7fffffffd7ae<=s 30477@16,
(-30477)@16<=s L0x7fffffffd7be,L0x7fffffffd7be<=s 30477@16,
(-30477)@16<=s L0x7fffffffd7ce,L0x7fffffffd7ce<=s 30477@16,
(-30477)@16<=s L0x7fffffffd7de,L0x7fffffffd7de<=s 30477@16
];


(* === be ready for next level and offset === *)

(**************** CUT 154, 16 *****************)

cut 
true && and [
(-13154)@16<=s L0x7fffffffd7e0,L0x7fffffffd7e0<s 13154@16,
(-13154)@16<=s L0x7fffffffd7e2,L0x7fffffffd7e2<s 13154@16,
(-13154)@16<=s L0x7fffffffd7e4,L0x7fffffffd7e4<s 13154@16,
(-13154)@16<=s L0x7fffffffd7e6,L0x7fffffffd7e6<s 13154@16,
(-13154)@16<=s L0x7fffffffd7e8,L0x7fffffffd7e8<s 13154@16,
(-13154)@16<=s L0x7fffffffd7ea,L0x7fffffffd7ea<s 13154@16,
(-13154)@16<=s L0x7fffffffd7ec,L0x7fffffffd7ec<s 13154@16,
(-13154)@16<=s L0x7fffffffd7ee,L0x7fffffffd7ee<s 13154@16,
(-13154)@16<=s L0x7fffffffd7f0,L0x7fffffffd7f0<s 13154@16,
(-13154)@16<=s L0x7fffffffd7f2,L0x7fffffffd7f2<s 13154@16,
(-13154)@16<=s L0x7fffffffd7f4,L0x7fffffffd7f4<s 13154@16,
(-13154)@16<=s L0x7fffffffd7f6,L0x7fffffffd7f6<s 13154@16,
(-13154)@16<=s L0x7fffffffd7f8,L0x7fffffffd7f8<s 13154@16,
(-13154)@16<=s L0x7fffffffd7fa,L0x7fffffffd7fa<s 13154@16,
(-13154)@16<=s L0x7fffffffd7fc,L0x7fffffffd7fc<s 13154@16,
(-13154)@16<=s L0x7fffffffd7fe,L0x7fffffffd7fe<s 13154@16,
(-13154)@16<=s L0x7fffffffd800,L0x7fffffffd800<s 13154@16,
(-13154)@16<=s L0x7fffffffd802,L0x7fffffffd802<s 13154@16,
(-13154)@16<=s L0x7fffffffd804,L0x7fffffffd804<s 13154@16,
(-13154)@16<=s L0x7fffffffd806,L0x7fffffffd806<s 13154@16,
(-13154)@16<=s L0x7fffffffd808,L0x7fffffffd808<s 13154@16,
(-13154)@16<=s L0x7fffffffd80a,L0x7fffffffd80a<s 13154@16,
(-13154)@16<=s L0x7fffffffd80c,L0x7fffffffd80c<s 13154@16,
(-13154)@16<=s L0x7fffffffd80e,L0x7fffffffd80e<s 13154@16,
(-13154)@16<=s L0x7fffffffd810,L0x7fffffffd810<s 13154@16,
(-13154)@16<=s L0x7fffffffd812,L0x7fffffffd812<s 13154@16,
(-13154)@16<=s L0x7fffffffd814,L0x7fffffffd814<s 13154@16,
(-13154)@16<=s L0x7fffffffd816,L0x7fffffffd816<s 13154@16,
(-13154)@16<=s L0x7fffffffd818,L0x7fffffffd818<s 13154@16,
(-13154)@16<=s L0x7fffffffd81a,L0x7fffffffd81a<s 13154@16,
(-13154)@16<=s L0x7fffffffd81c,L0x7fffffffd81c<s 13154@16,
(-13154)@16<=s L0x7fffffffd81e,L0x7fffffffd81e<s 13154@16,
(-13154)@16<=s L0x7fffffffd820,L0x7fffffffd820<s 13154@16,
(-13154)@16<=s L0x7fffffffd822,L0x7fffffffd822<s 13154@16,
(-13154)@16<=s L0x7fffffffd824,L0x7fffffffd824<s 13154@16,
(-13154)@16<=s L0x7fffffffd826,L0x7fffffffd826<s 13154@16,
(-13154)@16<=s L0x7fffffffd828,L0x7fffffffd828<s 13154@16,
(-13154)@16<=s L0x7fffffffd82a,L0x7fffffffd82a<s 13154@16,
(-13154)@16<=s L0x7fffffffd82c,L0x7fffffffd82c<s 13154@16,
(-13154)@16<=s L0x7fffffffd82e,L0x7fffffffd82e<s 13154@16,
(-13154)@16<=s L0x7fffffffd830,L0x7fffffffd830<s 13154@16,
(-13154)@16<=s L0x7fffffffd832,L0x7fffffffd832<s 13154@16,
(-13154)@16<=s L0x7fffffffd834,L0x7fffffffd834<s 13154@16,
(-13154)@16<=s L0x7fffffffd836,L0x7fffffffd836<s 13154@16,
(-13154)@16<=s L0x7fffffffd838,L0x7fffffffd838<s 13154@16,
(-13154)@16<=s L0x7fffffffd83a,L0x7fffffffd83a<s 13154@16,
(-13154)@16<=s L0x7fffffffd83c,L0x7fffffffd83c<s 13154@16,
(-13154)@16<=s L0x7fffffffd83e,L0x7fffffffd83e<s 13154@16,
(-13154)@16<=s L0x7fffffffd840,L0x7fffffffd840<s 13154@16,
(-13154)@16<=s L0x7fffffffd842,L0x7fffffffd842<s 13154@16,
(-13154)@16<=s L0x7fffffffd844,L0x7fffffffd844<s 13154@16,
(-13154)@16<=s L0x7fffffffd846,L0x7fffffffd846<s 13154@16,
(-13154)@16<=s L0x7fffffffd848,L0x7fffffffd848<s 13154@16,
(-13154)@16<=s L0x7fffffffd84a,L0x7fffffffd84a<s 13154@16,
(-13154)@16<=s L0x7fffffffd84c,L0x7fffffffd84c<s 13154@16,
(-13154)@16<=s L0x7fffffffd84e,L0x7fffffffd84e<s 13154@16,
(-13154)@16<=s L0x7fffffffd850,L0x7fffffffd850<s 13154@16,
(-13154)@16<=s L0x7fffffffd852,L0x7fffffffd852<s 13154@16,
(-13154)@16<=s L0x7fffffffd854,L0x7fffffffd854<s 13154@16,
(-13154)@16<=s L0x7fffffffd856,L0x7fffffffd856<s 13154@16,
(-13154)@16<=s L0x7fffffffd858,L0x7fffffffd858<s 13154@16,
(-13154)@16<=s L0x7fffffffd85a,L0x7fffffffd85a<s 13154@16,
(-13154)@16<=s L0x7fffffffd85c,L0x7fffffffd85c<s 13154@16,
(-13154)@16<=s L0x7fffffffd85e,L0x7fffffffd85e<s 13154@16,
(-13154)@16<=s L0x7fffffffd860,L0x7fffffffd860<s 13154@16,
(-13154)@16<=s L0x7fffffffd862,L0x7fffffffd862<s 13154@16,
(-13154)@16<=s L0x7fffffffd864,L0x7fffffffd864<s 13154@16,
(-13154)@16<=s L0x7fffffffd866,L0x7fffffffd866<s 13154@16,
(-13154)@16<=s L0x7fffffffd868,L0x7fffffffd868<s 13154@16,
(-13154)@16<=s L0x7fffffffd86a,L0x7fffffffd86a<s 13154@16,
(-13154)@16<=s L0x7fffffffd86c,L0x7fffffffd86c<s 13154@16,
(-13154)@16<=s L0x7fffffffd86e,L0x7fffffffd86e<s 13154@16,
(-13154)@16<=s L0x7fffffffd870,L0x7fffffffd870<s 13154@16,
(-13154)@16<=s L0x7fffffffd872,L0x7fffffffd872<s 13154@16,
(-13154)@16<=s L0x7fffffffd874,L0x7fffffffd874<s 13154@16,
(-13154)@16<=s L0x7fffffffd876,L0x7fffffffd876<s 13154@16,
(-13154)@16<=s L0x7fffffffd878,L0x7fffffffd878<s 13154@16,
(-13154)@16<=s L0x7fffffffd87a,L0x7fffffffd87a<s 13154@16,
(-13154)@16<=s L0x7fffffffd87c,L0x7fffffffd87c<s 13154@16,
(-13154)@16<=s L0x7fffffffd87e,L0x7fffffffd87e<s 13154@16,
(-13154)@16<=s L0x7fffffffd880,L0x7fffffffd880<s 13154@16,
(-13154)@16<=s L0x7fffffffd882,L0x7fffffffd882<s 13154@16,
(-13154)@16<=s L0x7fffffffd884,L0x7fffffffd884<s 13154@16,
(-13154)@16<=s L0x7fffffffd886,L0x7fffffffd886<s 13154@16,
(-13154)@16<=s L0x7fffffffd888,L0x7fffffffd888<s 13154@16,
(-13154)@16<=s L0x7fffffffd88a,L0x7fffffffd88a<s 13154@16,
(-13154)@16<=s L0x7fffffffd88c,L0x7fffffffd88c<s 13154@16,
(-13154)@16<=s L0x7fffffffd88e,L0x7fffffffd88e<s 13154@16,
(-13154)@16<=s L0x7fffffffd890,L0x7fffffffd890<s 13154@16,
(-13154)@16<=s L0x7fffffffd892,L0x7fffffffd892<s 13154@16,
(-13154)@16<=s L0x7fffffffd894,L0x7fffffffd894<s 13154@16,
(-13154)@16<=s L0x7fffffffd896,L0x7fffffffd896<s 13154@16,
(-13154)@16<=s L0x7fffffffd898,L0x7fffffffd898<s 13154@16,
(-13154)@16<=s L0x7fffffffd89a,L0x7fffffffd89a<s 13154@16,
(-13154)@16<=s L0x7fffffffd89c,L0x7fffffffd89c<s 13154@16,
(-13154)@16<=s L0x7fffffffd89e,L0x7fffffffd89e<s 13154@16,
(-13154)@16<=s L0x7fffffffd8a0,L0x7fffffffd8a0<s 13154@16,
(-13154)@16<=s L0x7fffffffd8a2,L0x7fffffffd8a2<s 13154@16,
(-13154)@16<=s L0x7fffffffd8a4,L0x7fffffffd8a4<s 13154@16,
(-13154)@16<=s L0x7fffffffd8a6,L0x7fffffffd8a6<s 13154@16,
(-13154)@16<=s L0x7fffffffd8a8,L0x7fffffffd8a8<s 13154@16,
(-13154)@16<=s L0x7fffffffd8aa,L0x7fffffffd8aa<s 13154@16,
(-13154)@16<=s L0x7fffffffd8ac,L0x7fffffffd8ac<s 13154@16,
(-13154)@16<=s L0x7fffffffd8ae,L0x7fffffffd8ae<s 13154@16,
(-13154)@16<=s L0x7fffffffd8b0,L0x7fffffffd8b0<s 13154@16,
(-13154)@16<=s L0x7fffffffd8b2,L0x7fffffffd8b2<s 13154@16,
(-13154)@16<=s L0x7fffffffd8b4,L0x7fffffffd8b4<s 13154@16,
(-13154)@16<=s L0x7fffffffd8b6,L0x7fffffffd8b6<s 13154@16,
(-13154)@16<=s L0x7fffffffd8b8,L0x7fffffffd8b8<s 13154@16,
(-13154)@16<=s L0x7fffffffd8ba,L0x7fffffffd8ba<s 13154@16,
(-13154)@16<=s L0x7fffffffd8bc,L0x7fffffffd8bc<s 13154@16,
(-13154)@16<=s L0x7fffffffd8be,L0x7fffffffd8be<s 13154@16,
(-13154)@16<=s L0x7fffffffd8c0,L0x7fffffffd8c0<s 13154@16,
(-13154)@16<=s L0x7fffffffd8c2,L0x7fffffffd8c2<s 13154@16,
(-13154)@16<=s L0x7fffffffd8c4,L0x7fffffffd8c4<s 13154@16,
(-13154)@16<=s L0x7fffffffd8c6,L0x7fffffffd8c6<s 13154@16,
(-13154)@16<=s L0x7fffffffd8c8,L0x7fffffffd8c8<s 13154@16,
(-13154)@16<=s L0x7fffffffd8ca,L0x7fffffffd8ca<s 13154@16,
(-13154)@16<=s L0x7fffffffd8cc,L0x7fffffffd8cc<s 13154@16,
(-13154)@16<=s L0x7fffffffd8ce,L0x7fffffffd8ce<s 13154@16,
(-13154)@16<=s L0x7fffffffd8d0,L0x7fffffffd8d0<s 13154@16,
(-13154)@16<=s L0x7fffffffd8d2,L0x7fffffffd8d2<s 13154@16,
(-13154)@16<=s L0x7fffffffd8d4,L0x7fffffffd8d4<s 13154@16,
(-13154)@16<=s L0x7fffffffd8d6,L0x7fffffffd8d6<s 13154@16,
(-13154)@16<=s L0x7fffffffd8d8,L0x7fffffffd8d8<s 13154@16,
(-12913)@16<=s L0x7fffffffd8da,L0x7fffffffd8da<s 12913@16,
(-12913)@16<=s L0x7fffffffd8dc,L0x7fffffffd8dc<s 12913@16,
(-12913)@16<=s L0x7fffffffd8de,L0x7fffffffd8de<s 12913@16
] prove with [ cuts [ 0 ] ];



(* vmovdqa 0x500(%rdi),%ymm4                       #! EA = L0x7fffffffd7e0; Value = 0x0000000100000000; PC = 0x555555558f77 *)
mov ymm4_0 L0x7fffffffd7e0;
mov ymm4_1 L0x7fffffffd7e2;
mov ymm4_2 L0x7fffffffd7e4;
mov ymm4_3 L0x7fffffffd7e6;
mov ymm4_4 L0x7fffffffd7e8;
mov ymm4_5 L0x7fffffffd7ea;
mov ymm4_6 L0x7fffffffd7ec;
mov ymm4_7 L0x7fffffffd7ee;
mov ymm4_8 L0x7fffffffd7f0;
mov ymm4_9 L0x7fffffffd7f2;
mov ymm4_a L0x7fffffffd7f4;
mov ymm4_b L0x7fffffffd7f6;
mov ymm4_c L0x7fffffffd7f8;
mov ymm4_d L0x7fffffffd7fa;
mov ymm4_e L0x7fffffffd7fc;
mov ymm4_f L0x7fffffffd7fe;
(* vmovdqa 0x520(%rdi),%ymm5                       #! EA = L0x7fffffffd800; Value = 0x0000000000000000; PC = 0x555555558f7f *)
mov ymm5_0 L0x7fffffffd800;
mov ymm5_1 L0x7fffffffd802;
mov ymm5_2 L0x7fffffffd804;
mov ymm5_3 L0x7fffffffd806;
mov ymm5_4 L0x7fffffffd808;
mov ymm5_5 L0x7fffffffd80a;
mov ymm5_6 L0x7fffffffd80c;
mov ymm5_7 L0x7fffffffd80e;
mov ymm5_8 L0x7fffffffd810;
mov ymm5_9 L0x7fffffffd812;
mov ymm5_a L0x7fffffffd814;
mov ymm5_b L0x7fffffffd816;
mov ymm5_c L0x7fffffffd818;
mov ymm5_d L0x7fffffffd81a;
mov ymm5_e L0x7fffffffd81c;
mov ymm5_f L0x7fffffffd81e;
(* vmovdqa 0x540(%rdi),%ymm6                       #! EA = L0x7fffffffd820; Value = 0x0000000000000000; PC = 0x555555558f87 *)
mov ymm6_0 L0x7fffffffd820;
mov ymm6_1 L0x7fffffffd822;
mov ymm6_2 L0x7fffffffd824;
mov ymm6_3 L0x7fffffffd826;
mov ymm6_4 L0x7fffffffd828;
mov ymm6_5 L0x7fffffffd82a;
mov ymm6_6 L0x7fffffffd82c;
mov ymm6_7 L0x7fffffffd82e;
mov ymm6_8 L0x7fffffffd830;
mov ymm6_9 L0x7fffffffd832;
mov ymm6_a L0x7fffffffd834;
mov ymm6_b L0x7fffffffd836;
mov ymm6_c L0x7fffffffd838;
mov ymm6_d L0x7fffffffd83a;
mov ymm6_e L0x7fffffffd83c;
mov ymm6_f L0x7fffffffd83e;
(* vmovdqa 0x560(%rdi),%ymm7                       #! EA = L0x7fffffffd840; Value = 0x0000000000000000; PC = 0x555555558f8f *)
mov ymm7_0 L0x7fffffffd840;
mov ymm7_1 L0x7fffffffd842;
mov ymm7_2 L0x7fffffffd844;
mov ymm7_3 L0x7fffffffd846;
mov ymm7_4 L0x7fffffffd848;
mov ymm7_5 L0x7fffffffd84a;
mov ymm7_6 L0x7fffffffd84c;
mov ymm7_7 L0x7fffffffd84e;
mov ymm7_8 L0x7fffffffd850;
mov ymm7_9 L0x7fffffffd852;
mov ymm7_a L0x7fffffffd854;
mov ymm7_b L0x7fffffffd856;
mov ymm7_c L0x7fffffffd858;
mov ymm7_d L0x7fffffffd85a;
mov ymm7_e L0x7fffffffd85c;
mov ymm7_f L0x7fffffffd85e;
(* vmovdqa 0x580(%rdi),%ymm8                       #! EA = L0x7fffffffd860; Value = 0x0000000000000000; PC = 0x555555558f97 *)
mov ymm8_0 L0x7fffffffd860;
mov ymm8_1 L0x7fffffffd862;
mov ymm8_2 L0x7fffffffd864;
mov ymm8_3 L0x7fffffffd866;
mov ymm8_4 L0x7fffffffd868;
mov ymm8_5 L0x7fffffffd86a;
mov ymm8_6 L0x7fffffffd86c;
mov ymm8_7 L0x7fffffffd86e;
mov ymm8_8 L0x7fffffffd870;
mov ymm8_9 L0x7fffffffd872;
mov ymm8_a L0x7fffffffd874;
mov ymm8_b L0x7fffffffd876;
mov ymm8_c L0x7fffffffd878;
mov ymm8_d L0x7fffffffd87a;
mov ymm8_e L0x7fffffffd87c;
mov ymm8_f L0x7fffffffd87e;
(* vmovdqa 0x5a0(%rdi),%ymm9                       #! EA = L0x7fffffffd880; Value = 0x0000000000000000; PC = 0x555555558f9f *)
mov ymm9_0 L0x7fffffffd880;
mov ymm9_1 L0x7fffffffd882;
mov ymm9_2 L0x7fffffffd884;
mov ymm9_3 L0x7fffffffd886;
mov ymm9_4 L0x7fffffffd888;
mov ymm9_5 L0x7fffffffd88a;
mov ymm9_6 L0x7fffffffd88c;
mov ymm9_7 L0x7fffffffd88e;
mov ymm9_8 L0x7fffffffd890;
mov ymm9_9 L0x7fffffffd892;
mov ymm9_a L0x7fffffffd894;
mov ymm9_b L0x7fffffffd896;
mov ymm9_c L0x7fffffffd898;
mov ymm9_d L0x7fffffffd89a;
mov ymm9_e L0x7fffffffd89c;
mov ymm9_f L0x7fffffffd89e;
(* vmovdqa 0x5c0(%rdi),%ymm10                      #! EA = L0x7fffffffd8a0; Value = 0x0000000000000000; PC = 0x555555558fa7 *)
mov ymm10_0 L0x7fffffffd8a0;
mov ymm10_1 L0x7fffffffd8a2;
mov ymm10_2 L0x7fffffffd8a4;
mov ymm10_3 L0x7fffffffd8a6;
mov ymm10_4 L0x7fffffffd8a8;
mov ymm10_5 L0x7fffffffd8aa;
mov ymm10_6 L0x7fffffffd8ac;
mov ymm10_7 L0x7fffffffd8ae;
mov ymm10_8 L0x7fffffffd8b0;
mov ymm10_9 L0x7fffffffd8b2;
mov ymm10_a L0x7fffffffd8b4;
mov ymm10_b L0x7fffffffd8b6;
mov ymm10_c L0x7fffffffd8b8;
mov ymm10_d L0x7fffffffd8ba;
mov ymm10_e L0x7fffffffd8bc;
mov ymm10_f L0x7fffffffd8be;
(* vmovdqa 0x5e0(%rdi),%ymm11                      #! EA = L0x7fffffffd8c0; Value = 0x0000000000000000; PC = 0x555555558faf *)
mov ymm11_0 L0x7fffffffd8c0;
mov ymm11_1 L0x7fffffffd8c2;
mov ymm11_2 L0x7fffffffd8c4;
mov ymm11_3 L0x7fffffffd8c6;
mov ymm11_4 L0x7fffffffd8c8;
mov ymm11_5 L0x7fffffffd8ca;
mov ymm11_6 L0x7fffffffd8cc;
mov ymm11_7 L0x7fffffffd8ce;
mov ymm11_8 L0x7fffffffd8d0;
mov ymm11_9 L0x7fffffffd8d2;
mov ymm11_a L0x7fffffffd8d4;
mov ymm11_b L0x7fffffffd8d6;
mov ymm11_c L0x7fffffffd8d8;
mov ymm11_d L0x7fffffffd8da;
mov ymm11_e L0x7fffffffd8dc;
mov ymm11_f L0x7fffffffd8de;
(* vpbroadcastw 0x10a(%rdx),%ymm1                  #! EA = L0x55555556122a; Value = 0xe487ae886f65ad9a; PC = 0x555555558fb7 *)
mov ymm1_0 L0x55555556122a;
mov ymm1_1 L0x55555556122a;
mov ymm1_2 L0x55555556122a;
mov ymm1_3 L0x55555556122a;
mov ymm1_4 L0x55555556122a;
mov ymm1_5 L0x55555556122a;
mov ymm1_6 L0x55555556122a;
mov ymm1_7 L0x55555556122a;
mov ymm1_8 L0x55555556122a;
mov ymm1_9 L0x55555556122a;
mov ymm1_a L0x55555556122a;
mov ymm1_b L0x55555556122a;
mov ymm1_c L0x55555556122a;
mov ymm1_d L0x55555556122a;
mov ymm1_e L0x55555556122a;
mov ymm1_f L0x55555556122a;
(* vpbroadcastw 0x30a(%rdx),%ymm2                  #! EA = L0x55555556142a; Value = 0x0a87fe880165f19a; PC = 0x555555558fc0 *)
mov ymm2_0 L0x55555556142a;
mov ymm2_1 L0x55555556142a;
mov ymm2_2 L0x55555556142a;
mov ymm2_3 L0x55555556142a;
mov ymm2_4 L0x55555556142a;
mov ymm2_5 L0x55555556142a;
mov ymm2_6 L0x55555556142a;
mov ymm2_7 L0x55555556142a;
mov ymm2_8 L0x55555556142a;
mov ymm2_9 L0x55555556142a;
mov ymm2_a L0x55555556142a;
mov ymm2_b L0x55555556142a;
mov ymm2_c L0x55555556142a;
mov ymm2_d L0x55555556142a;
mov ymm2_e L0x55555556142a;
mov ymm2_f L0x55555556142a;
(* vpmullw %ymm1,%ymm8,%ymm3                       #! PC = 0x555555558fc9 *)
smull mulHymm8_0 mulL_0 ymm1_0 ymm8_0;
smull mulHymm8_1 mulL_1 ymm1_1 ymm8_1;
smull mulHymm8_2 mulL_2 ymm1_2 ymm8_2;
smull mulHymm8_3 mulL_3 ymm1_3 ymm8_3;
smull mulHymm8_4 mulL_4 ymm1_4 ymm8_4;
smull mulHymm8_5 mulL_5 ymm1_5 ymm8_5;
smull mulHymm8_6 mulL_6 ymm1_6 ymm8_6;
smull mulHymm8_7 mulL_7 ymm1_7 ymm8_7;
smull mulHymm8_8 mulL_8 ymm1_8 ymm8_8;
smull mulHymm8_9 mulL_9 ymm1_9 ymm8_9;
smull mulHymm8_a mulL_a ymm1_a ymm8_a;
smull mulHymm8_b mulL_b ymm1_b ymm8_b;
smull mulHymm8_c mulL_c ymm1_c ymm8_c;
smull mulHymm8_d mulL_d ymm1_d ymm8_d;
smull mulHymm8_e mulL_e ymm1_e ymm8_e;
smull mulHymm8_f mulL_f ymm1_f ymm8_f;
cast ymm3_0@sint16 mulL_0;
cast ymm3_1@sint16 mulL_1;
cast ymm3_2@sint16 mulL_2;
cast ymm3_3@sint16 mulL_3;
cast ymm3_4@sint16 mulL_4;
cast ymm3_5@sint16 mulL_5;
cast ymm3_6@sint16 mulL_6;
cast ymm3_7@sint16 mulL_7;
cast ymm3_8@sint16 mulL_8;
cast ymm3_9@sint16 mulL_9;
cast ymm3_a@sint16 mulL_a;
cast ymm3_b@sint16 mulL_b;
cast ymm3_c@sint16 mulL_c;
cast ymm3_d@sint16 mulL_d;
cast ymm3_e@sint16 mulL_e;
cast ymm3_f@sint16 mulL_f;
(* vpmulhw %ymm2,%ymm8,%ymm8                       #! PC = 0x555555558fcd *)
smull mulH_0 mulLymm8_0 ymm8_0 ymm2_0;
smull mulH_1 mulLymm8_1 ymm8_1 ymm2_1;
smull mulH_2 mulLymm8_2 ymm8_2 ymm2_2;
smull mulH_3 mulLymm8_3 ymm8_3 ymm2_3;
smull mulH_4 mulLymm8_4 ymm8_4 ymm2_4;
smull mulH_5 mulLymm8_5 ymm8_5 ymm2_5;
smull mulH_6 mulLymm8_6 ymm8_6 ymm2_6;
smull mulH_7 mulLymm8_7 ymm8_7 ymm2_7;
smull mulH_8 mulLymm8_8 ymm8_8 ymm2_8;
smull mulH_9 mulLymm8_9 ymm8_9 ymm2_9;
smull mulH_a mulLymm8_a ymm8_a ymm2_a;
smull mulH_b mulLymm8_b ymm8_b ymm2_b;
smull mulH_c mulLymm8_c ymm8_c ymm2_c;
smull mulH_d mulLymm8_d ymm8_d ymm2_d;
smull mulH_e mulLymm8_e ymm8_e ymm2_e;
smull mulH_f mulLymm8_f ymm8_f ymm2_f;
mov ymm8_0 mulH_0;
mov ymm8_1 mulH_1;
mov ymm8_2 mulH_2;
mov ymm8_3 mulH_3;
mov ymm8_4 mulH_4;
mov ymm8_5 mulH_5;
mov ymm8_6 mulH_6;
mov ymm8_7 mulH_7;
mov ymm8_8 mulH_8;
mov ymm8_9 mulH_9;
mov ymm8_a mulH_a;
mov ymm8_b mulH_b;
mov ymm8_c mulH_c;
mov ymm8_d mulH_d;
mov ymm8_e mulH_e;
mov ymm8_f mulH_f;
(* vpmulhw %ymm0,%ymm3,%ymm3                       #! PC = 0x555555558fd1 *)
smull mulH_0 red_0 ymm3_0 ymm0_0;
assert true && red_0 = mulLymm8_0;
assume red_0 = mulLymm8_0 && true;
smull mulH_1 red_1 ymm3_1 ymm0_1;
assert true && red_1 = mulLymm8_1;
assume red_1 = mulLymm8_1 && true;
smull mulH_2 red_2 ymm3_2 ymm0_2;
assert true && red_2 = mulLymm8_2;
assume red_2 = mulLymm8_2 && true;
smull mulH_3 red_3 ymm3_3 ymm0_3;
assert true && red_3 = mulLymm8_3;
assume red_3 = mulLymm8_3 && true;
smull mulH_4 red_4 ymm3_4 ymm0_4;
assert true && red_4 = mulLymm8_4;
assume red_4 = mulLymm8_4 && true;
smull mulH_5 red_5 ymm3_5 ymm0_5;
assert true && red_5 = mulLymm8_5;
assume red_5 = mulLymm8_5 && true;
smull mulH_6 red_6 ymm3_6 ymm0_6;
assert true && red_6 = mulLymm8_6;
assume red_6 = mulLymm8_6 && true;
smull mulH_7 red_7 ymm3_7 ymm0_7;
assert true && red_7 = mulLymm8_7;
assume red_7 = mulLymm8_7 && true;
smull mulH_8 red_8 ymm3_8 ymm0_8;
assert true && red_8 = mulLymm8_8;
assume red_8 = mulLymm8_8 && true;
smull mulH_9 red_9 ymm3_9 ymm0_9;
assert true && red_9 = mulLymm8_9;
assume red_9 = mulLymm8_9 && true;
smull mulH_a red_a ymm3_a ymm0_a;
assert true && red_a = mulLymm8_a;
assume red_a = mulLymm8_a && true;
smull mulH_b red_b ymm3_b ymm0_b;
assert true && red_b = mulLymm8_b;
assume red_b = mulLymm8_b && true;
smull mulH_c red_c ymm3_c ymm0_c;
assert true && red_c = mulLymm8_c;
assume red_c = mulLymm8_c && true;
smull mulH_d red_d ymm3_d ymm0_d;
assert true && red_d = mulLymm8_d;
assume red_d = mulLymm8_d && true;
smull mulH_e red_e ymm3_e ymm0_e;
assert true && red_e = mulLymm8_e;
assume red_e = mulLymm8_e && true;
smull mulH_f red_f ymm3_f ymm0_f;
assert true && red_f = mulLymm8_f;
assume red_f = mulLymm8_f && true;
mov ymm3_0 mulH_0;
mov ymm3_1 mulH_1;
mov ymm3_2 mulH_2;
mov ymm3_3 mulH_3;
mov ymm3_4 mulH_4;
mov ymm3_5 mulH_5;
mov ymm3_6 mulH_6;
mov ymm3_7 mulH_7;
mov ymm3_8 mulH_8;
mov ymm3_9 mulH_9;
mov ymm3_a mulH_a;
mov ymm3_b mulH_b;
mov ymm3_c mulH_c;
mov ymm3_d mulH_d;
mov ymm3_e mulH_e;
mov ymm3_f mulH_f;
(* vpsubw %ymm3,%ymm8,%ymm8                        #! PC = 0x555555558fd5 *)
sub ymm8_0 ymm8_0 ymm3_0;
sub ymm8_1 ymm8_1 ymm3_1;
sub ymm8_2 ymm8_2 ymm3_2;
sub ymm8_3 ymm8_3 ymm3_3;
sub ymm8_4 ymm8_4 ymm3_4;
sub ymm8_5 ymm8_5 ymm3_5;
sub ymm8_6 ymm8_6 ymm3_6;
sub ymm8_7 ymm8_7 ymm3_7;
sub ymm8_8 ymm8_8 ymm3_8;
sub ymm8_9 ymm8_9 ymm3_9;
sub ymm8_a ymm8_a ymm3_a;
sub ymm8_b ymm8_b ymm3_b;
sub ymm8_c ymm8_c ymm3_c;
sub ymm8_d ymm8_d ymm3_d;
sub ymm8_e ymm8_e ymm3_e;
sub ymm8_f ymm8_f ymm3_f;
(* vpmullw %ymm1,%ymm9,%ymm3                       #! PC = 0x555555558fd9 *)
smull mulHymm9_0 mulL_0 ymm1_0 ymm9_0;
smull mulHymm9_1 mulL_1 ymm1_1 ymm9_1;
smull mulHymm9_2 mulL_2 ymm1_2 ymm9_2;
smull mulHymm9_3 mulL_3 ymm1_3 ymm9_3;
smull mulHymm9_4 mulL_4 ymm1_4 ymm9_4;
smull mulHymm9_5 mulL_5 ymm1_5 ymm9_5;
smull mulHymm9_6 mulL_6 ymm1_6 ymm9_6;
smull mulHymm9_7 mulL_7 ymm1_7 ymm9_7;
smull mulHymm9_8 mulL_8 ymm1_8 ymm9_8;
smull mulHymm9_9 mulL_9 ymm1_9 ymm9_9;
smull mulHymm9_a mulL_a ymm1_a ymm9_a;
smull mulHymm9_b mulL_b ymm1_b ymm9_b;
smull mulHymm9_c mulL_c ymm1_c ymm9_c;
smull mulHymm9_d mulL_d ymm1_d ymm9_d;
smull mulHymm9_e mulL_e ymm1_e ymm9_e;
smull mulHymm9_f mulL_f ymm1_f ymm9_f;
cast ymm3_0@sint16 mulL_0;
cast ymm3_1@sint16 mulL_1;
cast ymm3_2@sint16 mulL_2;
cast ymm3_3@sint16 mulL_3;
cast ymm3_4@sint16 mulL_4;
cast ymm3_5@sint16 mulL_5;
cast ymm3_6@sint16 mulL_6;
cast ymm3_7@sint16 mulL_7;
cast ymm3_8@sint16 mulL_8;
cast ymm3_9@sint16 mulL_9;
cast ymm3_a@sint16 mulL_a;
cast ymm3_b@sint16 mulL_b;
cast ymm3_c@sint16 mulL_c;
cast ymm3_d@sint16 mulL_d;
cast ymm3_e@sint16 mulL_e;
cast ymm3_f@sint16 mulL_f;
(* vpmulhw %ymm2,%ymm9,%ymm9                       #! PC = 0x555555558fdd *)
smull mulH_0 mulLymm9_0 ymm9_0 ymm2_0;
smull mulH_1 mulLymm9_1 ymm9_1 ymm2_1;
smull mulH_2 mulLymm9_2 ymm9_2 ymm2_2;
smull mulH_3 mulLymm9_3 ymm9_3 ymm2_3;
smull mulH_4 mulLymm9_4 ymm9_4 ymm2_4;
smull mulH_5 mulLymm9_5 ymm9_5 ymm2_5;
smull mulH_6 mulLymm9_6 ymm9_6 ymm2_6;
smull mulH_7 mulLymm9_7 ymm9_7 ymm2_7;
smull mulH_8 mulLymm9_8 ymm9_8 ymm2_8;
smull mulH_9 mulLymm9_9 ymm9_9 ymm2_9;
smull mulH_a mulLymm9_a ymm9_a ymm2_a;
smull mulH_b mulLymm9_b ymm9_b ymm2_b;
smull mulH_c mulLymm9_c ymm9_c ymm2_c;
smull mulH_d mulLymm9_d ymm9_d ymm2_d;
smull mulH_e mulLymm9_e ymm9_e ymm2_e;
smull mulH_f mulLymm9_f ymm9_f ymm2_f;
mov ymm9_0 mulH_0;
mov ymm9_1 mulH_1;
mov ymm9_2 mulH_2;
mov ymm9_3 mulH_3;
mov ymm9_4 mulH_4;
mov ymm9_5 mulH_5;
mov ymm9_6 mulH_6;
mov ymm9_7 mulH_7;
mov ymm9_8 mulH_8;
mov ymm9_9 mulH_9;
mov ymm9_a mulH_a;
mov ymm9_b mulH_b;
mov ymm9_c mulH_c;
mov ymm9_d mulH_d;
mov ymm9_e mulH_e;
mov ymm9_f mulH_f;
(* vpmulhw %ymm0,%ymm3,%ymm3                       #! PC = 0x555555558fe1 *)
smull mulH_0 red_0 ymm3_0 ymm0_0;
assert true && red_0 = mulLymm9_0;
assume red_0 = mulLymm9_0 && true;
smull mulH_1 red_1 ymm3_1 ymm0_1;
assert true && red_1 = mulLymm9_1;
assume red_1 = mulLymm9_1 && true;
smull mulH_2 red_2 ymm3_2 ymm0_2;
assert true && red_2 = mulLymm9_2;
assume red_2 = mulLymm9_2 && true;
smull mulH_3 red_3 ymm3_3 ymm0_3;
assert true && red_3 = mulLymm9_3;
assume red_3 = mulLymm9_3 && true;
smull mulH_4 red_4 ymm3_4 ymm0_4;
assert true && red_4 = mulLymm9_4;
assume red_4 = mulLymm9_4 && true;
smull mulH_5 red_5 ymm3_5 ymm0_5;
assert true && red_5 = mulLymm9_5;
assume red_5 = mulLymm9_5 && true;
smull mulH_6 red_6 ymm3_6 ymm0_6;
assert true && red_6 = mulLymm9_6;
assume red_6 = mulLymm9_6 && true;
smull mulH_7 red_7 ymm3_7 ymm0_7;
assert true && red_7 = mulLymm9_7;
assume red_7 = mulLymm9_7 && true;
smull mulH_8 red_8 ymm3_8 ymm0_8;
assert true && red_8 = mulLymm9_8;
assume red_8 = mulLymm9_8 && true;
smull mulH_9 red_9 ymm3_9 ymm0_9;
assert true && red_9 = mulLymm9_9;
assume red_9 = mulLymm9_9 && true;
smull mulH_a red_a ymm3_a ymm0_a;
assert true && red_a = mulLymm9_a;
assume red_a = mulLymm9_a && true;
smull mulH_b red_b ymm3_b ymm0_b;
assert true && red_b = mulLymm9_b;
assume red_b = mulLymm9_b && true;
smull mulH_c red_c ymm3_c ymm0_c;
assert true && red_c = mulLymm9_c;
assume red_c = mulLymm9_c && true;
smull mulH_d red_d ymm3_d ymm0_d;
assert true && red_d = mulLymm9_d;
assume red_d = mulLymm9_d && true;
smull mulH_e red_e ymm3_e ymm0_e;
assert true && red_e = mulLymm9_e;
assume red_e = mulLymm9_e && true;
smull mulH_f red_f ymm3_f ymm0_f;
assert true && red_f = mulLymm9_f;
assume red_f = mulLymm9_f && true;
mov ymm3_0 mulH_0;
mov ymm3_1 mulH_1;
mov ymm3_2 mulH_2;
mov ymm3_3 mulH_3;
mov ymm3_4 mulH_4;
mov ymm3_5 mulH_5;
mov ymm3_6 mulH_6;
mov ymm3_7 mulH_7;
mov ymm3_8 mulH_8;
mov ymm3_9 mulH_9;
mov ymm3_a mulH_a;
mov ymm3_b mulH_b;
mov ymm3_c mulH_c;
mov ymm3_d mulH_d;
mov ymm3_e mulH_e;
mov ymm3_f mulH_f;
(* vpsubw %ymm3,%ymm9,%ymm9                        #! PC = 0x555555558fe5 *)
sub ymm9_0 ymm9_0 ymm3_0;
sub ymm9_1 ymm9_1 ymm3_1;
sub ymm9_2 ymm9_2 ymm3_2;
sub ymm9_3 ymm9_3 ymm3_3;
sub ymm9_4 ymm9_4 ymm3_4;
sub ymm9_5 ymm9_5 ymm3_5;
sub ymm9_6 ymm9_6 ymm3_6;
sub ymm9_7 ymm9_7 ymm3_7;
sub ymm9_8 ymm9_8 ymm3_8;
sub ymm9_9 ymm9_9 ymm3_9;
sub ymm9_a ymm9_a ymm3_a;
sub ymm9_b ymm9_b ymm3_b;
sub ymm9_c ymm9_c ymm3_c;
sub ymm9_d ymm9_d ymm3_d;
sub ymm9_e ymm9_e ymm3_e;
sub ymm9_f ymm9_f ymm3_f;
(* vpmullw %ymm1,%ymm10,%ymm3                      #! PC = 0x555555558fe9 *)
smull mulHymm10_0 mulL_0 ymm1_0 ymm10_0;
smull mulHymm10_1 mulL_1 ymm1_1 ymm10_1;
smull mulHymm10_2 mulL_2 ymm1_2 ymm10_2;
smull mulHymm10_3 mulL_3 ymm1_3 ymm10_3;
smull mulHymm10_4 mulL_4 ymm1_4 ymm10_4;
smull mulHymm10_5 mulL_5 ymm1_5 ymm10_5;
smull mulHymm10_6 mulL_6 ymm1_6 ymm10_6;
smull mulHymm10_7 mulL_7 ymm1_7 ymm10_7;
smull mulHymm10_8 mulL_8 ymm1_8 ymm10_8;
smull mulHymm10_9 mulL_9 ymm1_9 ymm10_9;
smull mulHymm10_a mulL_a ymm1_a ymm10_a;
smull mulHymm10_b mulL_b ymm1_b ymm10_b;
smull mulHymm10_c mulL_c ymm1_c ymm10_c;
smull mulHymm10_d mulL_d ymm1_d ymm10_d;
smull mulHymm10_e mulL_e ymm1_e ymm10_e;
smull mulHymm10_f mulL_f ymm1_f ymm10_f;
cast ymm3_0@sint16 mulL_0;
cast ymm3_1@sint16 mulL_1;
cast ymm3_2@sint16 mulL_2;
cast ymm3_3@sint16 mulL_3;
cast ymm3_4@sint16 mulL_4;
cast ymm3_5@sint16 mulL_5;
cast ymm3_6@sint16 mulL_6;
cast ymm3_7@sint16 mulL_7;
cast ymm3_8@sint16 mulL_8;
cast ymm3_9@sint16 mulL_9;
cast ymm3_a@sint16 mulL_a;
cast ymm3_b@sint16 mulL_b;
cast ymm3_c@sint16 mulL_c;
cast ymm3_d@sint16 mulL_d;
cast ymm3_e@sint16 mulL_e;
cast ymm3_f@sint16 mulL_f;
(* vpmulhw %ymm2,%ymm10,%ymm10                     #! PC = 0x555555558fed *)
smull mulH_0 mulLymm10_0 ymm10_0 ymm2_0;
smull mulH_1 mulLymm10_1 ymm10_1 ymm2_1;
smull mulH_2 mulLymm10_2 ymm10_2 ymm2_2;
smull mulH_3 mulLymm10_3 ymm10_3 ymm2_3;
smull mulH_4 mulLymm10_4 ymm10_4 ymm2_4;
smull mulH_5 mulLymm10_5 ymm10_5 ymm2_5;
smull mulH_6 mulLymm10_6 ymm10_6 ymm2_6;
smull mulH_7 mulLymm10_7 ymm10_7 ymm2_7;
smull mulH_8 mulLymm10_8 ymm10_8 ymm2_8;
smull mulH_9 mulLymm10_9 ymm10_9 ymm2_9;
smull mulH_a mulLymm10_a ymm10_a ymm2_a;
smull mulH_b mulLymm10_b ymm10_b ymm2_b;
smull mulH_c mulLymm10_c ymm10_c ymm2_c;
smull mulH_d mulLymm10_d ymm10_d ymm2_d;
smull mulH_e mulLymm10_e ymm10_e ymm2_e;
smull mulH_f mulLymm10_f ymm10_f ymm2_f;
mov ymm10_0 mulH_0;
mov ymm10_1 mulH_1;
mov ymm10_2 mulH_2;
mov ymm10_3 mulH_3;
mov ymm10_4 mulH_4;
mov ymm10_5 mulH_5;
mov ymm10_6 mulH_6;
mov ymm10_7 mulH_7;
mov ymm10_8 mulH_8;
mov ymm10_9 mulH_9;
mov ymm10_a mulH_a;
mov ymm10_b mulH_b;
mov ymm10_c mulH_c;
mov ymm10_d mulH_d;
mov ymm10_e mulH_e;
mov ymm10_f mulH_f;
(* vpmulhw %ymm0,%ymm3,%ymm3                       #! PC = 0x555555558ff1 *)
smull mulH_0 red_0 ymm3_0 ymm0_0;
assert true && red_0 = mulLymm10_0;
assume red_0 = mulLymm10_0 && true;
smull mulH_1 red_1 ymm3_1 ymm0_1;
assert true && red_1 = mulLymm10_1;
assume red_1 = mulLymm10_1 && true;
smull mulH_2 red_2 ymm3_2 ymm0_2;
assert true && red_2 = mulLymm10_2;
assume red_2 = mulLymm10_2 && true;
smull mulH_3 red_3 ymm3_3 ymm0_3;
assert true && red_3 = mulLymm10_3;
assume red_3 = mulLymm10_3 && true;
smull mulH_4 red_4 ymm3_4 ymm0_4;
assert true && red_4 = mulLymm10_4;
assume red_4 = mulLymm10_4 && true;
smull mulH_5 red_5 ymm3_5 ymm0_5;
assert true && red_5 = mulLymm10_5;
assume red_5 = mulLymm10_5 && true;
smull mulH_6 red_6 ymm3_6 ymm0_6;
assert true && red_6 = mulLymm10_6;
assume red_6 = mulLymm10_6 && true;
smull mulH_7 red_7 ymm3_7 ymm0_7;
assert true && red_7 = mulLymm10_7;
assume red_7 = mulLymm10_7 && true;
smull mulH_8 red_8 ymm3_8 ymm0_8;
assert true && red_8 = mulLymm10_8;
assume red_8 = mulLymm10_8 && true;
smull mulH_9 red_9 ymm3_9 ymm0_9;
assert true && red_9 = mulLymm10_9;
assume red_9 = mulLymm10_9 && true;
smull mulH_a red_a ymm3_a ymm0_a;
assert true && red_a = mulLymm10_a;
assume red_a = mulLymm10_a && true;
smull mulH_b red_b ymm3_b ymm0_b;
assert true && red_b = mulLymm10_b;
assume red_b = mulLymm10_b && true;
smull mulH_c red_c ymm3_c ymm0_c;
assert true && red_c = mulLymm10_c;
assume red_c = mulLymm10_c && true;
smull mulH_d red_d ymm3_d ymm0_d;
assert true && red_d = mulLymm10_d;
assume red_d = mulLymm10_d && true;
smull mulH_e red_e ymm3_e ymm0_e;
assert true && red_e = mulLymm10_e;
assume red_e = mulLymm10_e && true;
smull mulH_f red_f ymm3_f ymm0_f;
assert true && red_f = mulLymm10_f;
assume red_f = mulLymm10_f && true;
mov ymm3_0 mulH_0;
mov ymm3_1 mulH_1;
mov ymm3_2 mulH_2;
mov ymm3_3 mulH_3;
mov ymm3_4 mulH_4;
mov ymm3_5 mulH_5;
mov ymm3_6 mulH_6;
mov ymm3_7 mulH_7;
mov ymm3_8 mulH_8;
mov ymm3_9 mulH_9;
mov ymm3_a mulH_a;
mov ymm3_b mulH_b;
mov ymm3_c mulH_c;
mov ymm3_d mulH_d;
mov ymm3_e mulH_e;
mov ymm3_f mulH_f;
(* vpsubw %ymm3,%ymm10,%ymm10                      #! PC = 0x555555558ff5 *)
sub ymm10_0 ymm10_0 ymm3_0;
sub ymm10_1 ymm10_1 ymm3_1;
sub ymm10_2 ymm10_2 ymm3_2;
sub ymm10_3 ymm10_3 ymm3_3;
sub ymm10_4 ymm10_4 ymm3_4;
sub ymm10_5 ymm10_5 ymm3_5;
sub ymm10_6 ymm10_6 ymm3_6;
sub ymm10_7 ymm10_7 ymm3_7;
sub ymm10_8 ymm10_8 ymm3_8;
sub ymm10_9 ymm10_9 ymm3_9;
sub ymm10_a ymm10_a ymm3_a;
sub ymm10_b ymm10_b ymm3_b;
sub ymm10_c ymm10_c ymm3_c;
sub ymm10_d ymm10_d ymm3_d;
sub ymm10_e ymm10_e ymm3_e;
sub ymm10_f ymm10_f ymm3_f;
(* vpmullw %ymm1,%ymm11,%ymm3                      #! PC = 0x555555558ff9 *)
smull mulHymm11_0 mulL_0 ymm1_0 ymm11_0;
smull mulHymm11_1 mulL_1 ymm1_1 ymm11_1;
smull mulHymm11_2 mulL_2 ymm1_2 ymm11_2;
smull mulHymm11_3 mulL_3 ymm1_3 ymm11_3;
smull mulHymm11_4 mulL_4 ymm1_4 ymm11_4;
smull mulHymm11_5 mulL_5 ymm1_5 ymm11_5;
smull mulHymm11_6 mulL_6 ymm1_6 ymm11_6;
smull mulHymm11_7 mulL_7 ymm1_7 ymm11_7;
smull mulHymm11_8 mulL_8 ymm1_8 ymm11_8;
smull mulHymm11_9 mulL_9 ymm1_9 ymm11_9;
smull mulHymm11_a mulL_a ymm1_a ymm11_a;
smull mulHymm11_b mulL_b ymm1_b ymm11_b;
smull mulHymm11_c mulL_c ymm1_c ymm11_c;
smull mulHymm11_d mulL_d ymm1_d ymm11_d;
smull mulHymm11_e mulL_e ymm1_e ymm11_e;
smull mulHymm11_f mulL_f ymm1_f ymm11_f;
cast ymm3_0@sint16 mulL_0;
cast ymm3_1@sint16 mulL_1;
cast ymm3_2@sint16 mulL_2;
cast ymm3_3@sint16 mulL_3;
cast ymm3_4@sint16 mulL_4;
cast ymm3_5@sint16 mulL_5;
cast ymm3_6@sint16 mulL_6;
cast ymm3_7@sint16 mulL_7;
cast ymm3_8@sint16 mulL_8;
cast ymm3_9@sint16 mulL_9;
cast ymm3_a@sint16 mulL_a;
cast ymm3_b@sint16 mulL_b;
cast ymm3_c@sint16 mulL_c;
cast ymm3_d@sint16 mulL_d;
cast ymm3_e@sint16 mulL_e;
cast ymm3_f@sint16 mulL_f;
(* vpmulhw %ymm2,%ymm11,%ymm11                     #! PC = 0x555555558ffd *)
smull mulH_0 mulLymm11_0 ymm11_0 ymm2_0;
smull mulH_1 mulLymm11_1 ymm11_1 ymm2_1;
smull mulH_2 mulLymm11_2 ymm11_2 ymm2_2;
smull mulH_3 mulLymm11_3 ymm11_3 ymm2_3;
smull mulH_4 mulLymm11_4 ymm11_4 ymm2_4;
smull mulH_5 mulLymm11_5 ymm11_5 ymm2_5;
smull mulH_6 mulLymm11_6 ymm11_6 ymm2_6;
smull mulH_7 mulLymm11_7 ymm11_7 ymm2_7;
smull mulH_8 mulLymm11_8 ymm11_8 ymm2_8;
smull mulH_9 mulLymm11_9 ymm11_9 ymm2_9;
smull mulH_a mulLymm11_a ymm11_a ymm2_a;
smull mulH_b mulLymm11_b ymm11_b ymm2_b;
smull mulH_c mulLymm11_c ymm11_c ymm2_c;
smull mulH_d mulLymm11_d ymm11_d ymm2_d;
smull mulH_e mulLymm11_e ymm11_e ymm2_e;
smull mulH_f mulLymm11_f ymm11_f ymm2_f;
mov ymm11_0 mulH_0;
mov ymm11_1 mulH_1;
mov ymm11_2 mulH_2;
mov ymm11_3 mulH_3;
mov ymm11_4 mulH_4;
mov ymm11_5 mulH_5;
mov ymm11_6 mulH_6;
mov ymm11_7 mulH_7;
mov ymm11_8 mulH_8;
mov ymm11_9 mulH_9;
mov ymm11_a mulH_a;
mov ymm11_b mulH_b;
mov ymm11_c mulH_c;
mov ymm11_d mulH_d;
mov ymm11_e mulH_e;
mov ymm11_f mulH_f;
(* vpmulhw %ymm0,%ymm3,%ymm3                       #! PC = 0x555555559001 *)
smull mulH_0 red_0 ymm3_0 ymm0_0;
assert true && red_0 = mulLymm11_0;
assume red_0 = mulLymm11_0 && true;
smull mulH_1 red_1 ymm3_1 ymm0_1;
assert true && red_1 = mulLymm11_1;
assume red_1 = mulLymm11_1 && true;
smull mulH_2 red_2 ymm3_2 ymm0_2;
assert true && red_2 = mulLymm11_2;
assume red_2 = mulLymm11_2 && true;
smull mulH_3 red_3 ymm3_3 ymm0_3;
assert true && red_3 = mulLymm11_3;
assume red_3 = mulLymm11_3 && true;
smull mulH_4 red_4 ymm3_4 ymm0_4;
assert true && red_4 = mulLymm11_4;
assume red_4 = mulLymm11_4 && true;
smull mulH_5 red_5 ymm3_5 ymm0_5;
assert true && red_5 = mulLymm11_5;
assume red_5 = mulLymm11_5 && true;
smull mulH_6 red_6 ymm3_6 ymm0_6;
assert true && red_6 = mulLymm11_6;
assume red_6 = mulLymm11_6 && true;
smull mulH_7 red_7 ymm3_7 ymm0_7;
assert true && red_7 = mulLymm11_7;
assume red_7 = mulLymm11_7 && true;
smull mulH_8 red_8 ymm3_8 ymm0_8;
assert true && red_8 = mulLymm11_8;
assume red_8 = mulLymm11_8 && true;
smull mulH_9 red_9 ymm3_9 ymm0_9;
assert true && red_9 = mulLymm11_9;
assume red_9 = mulLymm11_9 && true;
smull mulH_a red_a ymm3_a ymm0_a;
assert true && red_a = mulLymm11_a;
assume red_a = mulLymm11_a && true;
smull mulH_b red_b ymm3_b ymm0_b;
assert true && red_b = mulLymm11_b;
assume red_b = mulLymm11_b && true;
smull mulH_c red_c ymm3_c ymm0_c;
assert true && red_c = mulLymm11_c;
assume red_c = mulLymm11_c && true;
smull mulH_d red_d ymm3_d ymm0_d;
assert true && red_d = mulLymm11_d;
assume red_d = mulLymm11_d && true;
smull mulH_e red_e ymm3_e ymm0_e;
assert true && red_e = mulLymm11_e;
assume red_e = mulLymm11_e && true;
smull mulH_f red_f ymm3_f ymm0_f;
assert true && red_f = mulLymm11_f;
assume red_f = mulLymm11_f && true;
mov ymm3_0 mulH_0;
mov ymm3_1 mulH_1;
mov ymm3_2 mulH_2;
mov ymm3_3 mulH_3;
mov ymm3_4 mulH_4;
mov ymm3_5 mulH_5;
mov ymm3_6 mulH_6;
mov ymm3_7 mulH_7;
mov ymm3_8 mulH_8;
mov ymm3_9 mulH_9;
mov ymm3_a mulH_a;
mov ymm3_b mulH_b;
mov ymm3_c mulH_c;
mov ymm3_d mulH_d;
mov ymm3_e mulH_e;
mov ymm3_f mulH_f;
(* vpsubw %ymm3,%ymm11,%ymm11                      #! PC = 0x555555559005 *)
sub ymm11_0 ymm11_0 ymm3_0;
sub ymm11_1 ymm11_1 ymm3_1;
sub ymm11_2 ymm11_2 ymm3_2;
sub ymm11_3 ymm11_3 ymm3_3;
sub ymm11_4 ymm11_4 ymm3_4;
sub ymm11_5 ymm11_5 ymm3_5;
sub ymm11_6 ymm11_6 ymm3_6;
sub ymm11_7 ymm11_7 ymm3_7;
sub ymm11_8 ymm11_8 ymm3_8;
sub ymm11_9 ymm11_9 ymm3_9;
sub ymm11_a ymm11_a ymm3_a;
sub ymm11_b ymm11_b ymm3_b;
sub ymm11_c ymm11_c ymm3_c;
sub ymm11_d ymm11_d ymm3_d;
sub ymm11_e ymm11_e ymm3_e;
sub ymm11_f ymm11_f ymm3_f;
(* vpaddw %ymm8,%ymm4,%ymm3                        #! PC = 0x555555559009 *)
add ymm3_0 ymm4_0 ymm8_0;
add ymm3_1 ymm4_1 ymm8_1;
add ymm3_2 ymm4_2 ymm8_2;
add ymm3_3 ymm4_3 ymm8_3;
add ymm3_4 ymm4_4 ymm8_4;
add ymm3_5 ymm4_5 ymm8_5;
add ymm3_6 ymm4_6 ymm8_6;
add ymm3_7 ymm4_7 ymm8_7;
add ymm3_8 ymm4_8 ymm8_8;
add ymm3_9 ymm4_9 ymm8_9;
add ymm3_a ymm4_a ymm8_a;
add ymm3_b ymm4_b ymm8_b;
add ymm3_c ymm4_c ymm8_c;
add ymm3_d ymm4_d ymm8_d;
add ymm3_e ymm4_e ymm8_e;
add ymm3_f ymm4_f ymm8_f;
(* vpsubw %ymm8,%ymm4,%ymm8                        #! PC = 0x55555555900e *)
sub ymm8_0 ymm4_0 ymm8_0;
sub ymm8_1 ymm4_1 ymm8_1;
sub ymm8_2 ymm4_2 ymm8_2;
sub ymm8_3 ymm4_3 ymm8_3;
sub ymm8_4 ymm4_4 ymm8_4;
sub ymm8_5 ymm4_5 ymm8_5;
sub ymm8_6 ymm4_6 ymm8_6;
sub ymm8_7 ymm4_7 ymm8_7;
sub ymm8_8 ymm4_8 ymm8_8;
sub ymm8_9 ymm4_9 ymm8_9;
sub ymm8_a ymm4_a ymm8_a;
sub ymm8_b ymm4_b ymm8_b;
sub ymm8_c ymm4_c ymm8_c;
sub ymm8_d ymm4_d ymm8_d;
sub ymm8_e ymm4_e ymm8_e;
sub ymm8_f ymm4_f ymm8_f;
(* vpaddw %ymm9,%ymm5,%ymm4                        #! PC = 0x555555559013 *)
add ymm4_0 ymm5_0 ymm9_0;
add ymm4_1 ymm5_1 ymm9_1;
add ymm4_2 ymm5_2 ymm9_2;
add ymm4_3 ymm5_3 ymm9_3;
add ymm4_4 ymm5_4 ymm9_4;
add ymm4_5 ymm5_5 ymm9_5;
add ymm4_6 ymm5_6 ymm9_6;
add ymm4_7 ymm5_7 ymm9_7;
add ymm4_8 ymm5_8 ymm9_8;
add ymm4_9 ymm5_9 ymm9_9;
add ymm4_a ymm5_a ymm9_a;
add ymm4_b ymm5_b ymm9_b;
add ymm4_c ymm5_c ymm9_c;
add ymm4_d ymm5_d ymm9_d;
add ymm4_e ymm5_e ymm9_e;
add ymm4_f ymm5_f ymm9_f;
(* vpsubw %ymm9,%ymm5,%ymm9                        #! PC = 0x555555559018 *)
sub ymm9_0 ymm5_0 ymm9_0;
sub ymm9_1 ymm5_1 ymm9_1;
sub ymm9_2 ymm5_2 ymm9_2;
sub ymm9_3 ymm5_3 ymm9_3;
sub ymm9_4 ymm5_4 ymm9_4;
sub ymm9_5 ymm5_5 ymm9_5;
sub ymm9_6 ymm5_6 ymm9_6;
sub ymm9_7 ymm5_7 ymm9_7;
sub ymm9_8 ymm5_8 ymm9_8;
sub ymm9_9 ymm5_9 ymm9_9;
sub ymm9_a ymm5_a ymm9_a;
sub ymm9_b ymm5_b ymm9_b;
sub ymm9_c ymm5_c ymm9_c;
sub ymm9_d ymm5_d ymm9_d;
sub ymm9_e ymm5_e ymm9_e;
sub ymm9_f ymm5_f ymm9_f;
(* vpaddw %ymm10,%ymm6,%ymm5                       #! PC = 0x55555555901d *)
add ymm5_0 ymm6_0 ymm10_0;
add ymm5_1 ymm6_1 ymm10_1;
add ymm5_2 ymm6_2 ymm10_2;
add ymm5_3 ymm6_3 ymm10_3;
add ymm5_4 ymm6_4 ymm10_4;
add ymm5_5 ymm6_5 ymm10_5;
add ymm5_6 ymm6_6 ymm10_6;
add ymm5_7 ymm6_7 ymm10_7;
add ymm5_8 ymm6_8 ymm10_8;
add ymm5_9 ymm6_9 ymm10_9;
add ymm5_a ymm6_a ymm10_a;
add ymm5_b ymm6_b ymm10_b;
add ymm5_c ymm6_c ymm10_c;
add ymm5_d ymm6_d ymm10_d;
add ymm5_e ymm6_e ymm10_e;
add ymm5_f ymm6_f ymm10_f;
(* vpsubw %ymm10,%ymm6,%ymm10                      #! PC = 0x555555559022 *)
sub ymm10_0 ymm6_0 ymm10_0;
sub ymm10_1 ymm6_1 ymm10_1;
sub ymm10_2 ymm6_2 ymm10_2;
sub ymm10_3 ymm6_3 ymm10_3;
sub ymm10_4 ymm6_4 ymm10_4;
sub ymm10_5 ymm6_5 ymm10_5;
sub ymm10_6 ymm6_6 ymm10_6;
sub ymm10_7 ymm6_7 ymm10_7;
sub ymm10_8 ymm6_8 ymm10_8;
sub ymm10_9 ymm6_9 ymm10_9;
sub ymm10_a ymm6_a ymm10_a;
sub ymm10_b ymm6_b ymm10_b;
sub ymm10_c ymm6_c ymm10_c;
sub ymm10_d ymm6_d ymm10_d;
sub ymm10_e ymm6_e ymm10_e;
sub ymm10_f ymm6_f ymm10_f;
(* vpaddw %ymm11,%ymm7,%ymm6                       #! PC = 0x555555559027 *)
add ymm6_0 ymm7_0 ymm11_0;
add ymm6_1 ymm7_1 ymm11_1;
add ymm6_2 ymm7_2 ymm11_2;
add ymm6_3 ymm7_3 ymm11_3;
add ymm6_4 ymm7_4 ymm11_4;
add ymm6_5 ymm7_5 ymm11_5;
add ymm6_6 ymm7_6 ymm11_6;
add ymm6_7 ymm7_7 ymm11_7;
add ymm6_8 ymm7_8 ymm11_8;
add ymm6_9 ymm7_9 ymm11_9;
add ymm6_a ymm7_a ymm11_a;
add ymm6_b ymm7_b ymm11_b;
add ymm6_c ymm7_c ymm11_c;
add ymm6_d ymm7_d ymm11_d;
add ymm6_e ymm7_e ymm11_e;
add ymm6_f ymm7_f ymm11_f;
(* vpsubw %ymm11,%ymm7,%ymm11                      #! PC = 0x55555555902c *)
sub ymm11_0 ymm7_0 ymm11_0;
sub ymm11_1 ymm7_1 ymm11_1;
sub ymm11_2 ymm7_2 ymm11_2;
sub ymm11_3 ymm7_3 ymm11_3;
sub ymm11_4 ymm7_4 ymm11_4;
sub ymm11_5 ymm7_5 ymm11_5;
sub ymm11_6 ymm7_6 ymm11_6;
sub ymm11_7 ymm7_7 ymm11_7;
sub ymm11_8 ymm7_8 ymm11_8;
sub ymm11_9 ymm7_9 ymm11_9;
sub ymm11_a ymm7_a ymm11_a;
sub ymm11_b ymm7_b ymm11_b;
sub ymm11_c ymm7_c ymm11_c;
sub ymm11_d ymm7_d ymm11_d;
sub ymm11_e ymm7_e ymm11_e;
sub ymm11_f ymm7_f ymm11_f;
(* vpbroadcastw 0x114(%rdx),%ymm1                  #! EA = L0x555555561234; Value = 0x91c0b85730bc8cf7; PC = 0x555555559031 *)
mov ymm1_0 L0x555555561234;
mov ymm1_1 L0x555555561234;
mov ymm1_2 L0x555555561234;
mov ymm1_3 L0x555555561234;
mov ymm1_4 L0x555555561234;
mov ymm1_5 L0x555555561234;
mov ymm1_6 L0x555555561234;
mov ymm1_7 L0x555555561234;
mov ymm1_8 L0x555555561234;
mov ymm1_9 L0x555555561234;
mov ymm1_a L0x555555561234;
mov ymm1_b L0x555555561234;
mov ymm1_c L0x555555561234;
mov ymm1_d L0x555555561234;
mov ymm1_e L0x555555561234;
mov ymm1_f L0x555555561234;
(* vpbroadcastw 0x314(%rdx),%ymm2                  #! EA = L0x555555561434; Value = 0x11c0fe5708bc12f7; PC = 0x55555555903a *)
mov ymm2_0 L0x555555561434;
mov ymm2_1 L0x555555561434;
mov ymm2_2 L0x555555561434;
mov ymm2_3 L0x555555561434;
mov ymm2_4 L0x555555561434;
mov ymm2_5 L0x555555561434;
mov ymm2_6 L0x555555561434;
mov ymm2_7 L0x555555561434;
mov ymm2_8 L0x555555561434;
mov ymm2_9 L0x555555561434;
mov ymm2_a L0x555555561434;
mov ymm2_b L0x555555561434;
mov ymm2_c L0x555555561434;
mov ymm2_d L0x555555561434;
mov ymm2_e L0x555555561434;
mov ymm2_f L0x555555561434;
(* vpmullw %ymm1,%ymm5,%ymm7                       #! PC = 0x555555559043 *)
smull mulHymm5_0 mulL_0 ymm1_0 ymm5_0;
smull mulHymm5_1 mulL_1 ymm1_1 ymm5_1;
smull mulHymm5_2 mulL_2 ymm1_2 ymm5_2;
smull mulHymm5_3 mulL_3 ymm1_3 ymm5_3;
smull mulHymm5_4 mulL_4 ymm1_4 ymm5_4;
smull mulHymm5_5 mulL_5 ymm1_5 ymm5_5;
smull mulHymm5_6 mulL_6 ymm1_6 ymm5_6;
smull mulHymm5_7 mulL_7 ymm1_7 ymm5_7;
smull mulHymm5_8 mulL_8 ymm1_8 ymm5_8;
smull mulHymm5_9 mulL_9 ymm1_9 ymm5_9;
smull mulHymm5_a mulL_a ymm1_a ymm5_a;
smull mulHymm5_b mulL_b ymm1_b ymm5_b;
smull mulHymm5_c mulL_c ymm1_c ymm5_c;
smull mulHymm5_d mulL_d ymm1_d ymm5_d;
smull mulHymm5_e mulL_e ymm1_e ymm5_e;
smull mulHymm5_f mulL_f ymm1_f ymm5_f;
cast ymm7_0@sint16 mulL_0;
cast ymm7_1@sint16 mulL_1;
cast ymm7_2@sint16 mulL_2;
cast ymm7_3@sint16 mulL_3;
cast ymm7_4@sint16 mulL_4;
cast ymm7_5@sint16 mulL_5;
cast ymm7_6@sint16 mulL_6;
cast ymm7_7@sint16 mulL_7;
cast ymm7_8@sint16 mulL_8;
cast ymm7_9@sint16 mulL_9;
cast ymm7_a@sint16 mulL_a;
cast ymm7_b@sint16 mulL_b;
cast ymm7_c@sint16 mulL_c;
cast ymm7_d@sint16 mulL_d;
cast ymm7_e@sint16 mulL_e;
cast ymm7_f@sint16 mulL_f;
(* vpmulhw %ymm2,%ymm5,%ymm5                       #! PC = 0x555555559047 *)
smull mulH_0 mulLymm5_0 ymm5_0 ymm2_0;
smull mulH_1 mulLymm5_1 ymm5_1 ymm2_1;
smull mulH_2 mulLymm5_2 ymm5_2 ymm2_2;
smull mulH_3 mulLymm5_3 ymm5_3 ymm2_3;
smull mulH_4 mulLymm5_4 ymm5_4 ymm2_4;
smull mulH_5 mulLymm5_5 ymm5_5 ymm2_5;
smull mulH_6 mulLymm5_6 ymm5_6 ymm2_6;
smull mulH_7 mulLymm5_7 ymm5_7 ymm2_7;
smull mulH_8 mulLymm5_8 ymm5_8 ymm2_8;
smull mulH_9 mulLymm5_9 ymm5_9 ymm2_9;
smull mulH_a mulLymm5_a ymm5_a ymm2_a;
smull mulH_b mulLymm5_b ymm5_b ymm2_b;
smull mulH_c mulLymm5_c ymm5_c ymm2_c;
smull mulH_d mulLymm5_d ymm5_d ymm2_d;
smull mulH_e mulLymm5_e ymm5_e ymm2_e;
smull mulH_f mulLymm5_f ymm5_f ymm2_f;
mov ymm5_0 mulH_0;
mov ymm5_1 mulH_1;
mov ymm5_2 mulH_2;
mov ymm5_3 mulH_3;
mov ymm5_4 mulH_4;
mov ymm5_5 mulH_5;
mov ymm5_6 mulH_6;
mov ymm5_7 mulH_7;
mov ymm5_8 mulH_8;
mov ymm5_9 mulH_9;
mov ymm5_a mulH_a;
mov ymm5_b mulH_b;
mov ymm5_c mulH_c;
mov ymm5_d mulH_d;
mov ymm5_e mulH_e;
mov ymm5_f mulH_f;
(* vpmulhw %ymm0,%ymm7,%ymm7                       #! PC = 0x55555555904b *)
smull mulH_0 red_0 ymm7_0 ymm0_0;
assert true && red_0 = mulLymm5_0;
assume red_0 = mulLymm5_0 && true;
smull mulH_1 red_1 ymm7_1 ymm0_1;
assert true && red_1 = mulLymm5_1;
assume red_1 = mulLymm5_1 && true;
smull mulH_2 red_2 ymm7_2 ymm0_2;
assert true && red_2 = mulLymm5_2;
assume red_2 = mulLymm5_2 && true;
smull mulH_3 red_3 ymm7_3 ymm0_3;
assert true && red_3 = mulLymm5_3;
assume red_3 = mulLymm5_3 && true;
smull mulH_4 red_4 ymm7_4 ymm0_4;
assert true && red_4 = mulLymm5_4;
assume red_4 = mulLymm5_4 && true;
smull mulH_5 red_5 ymm7_5 ymm0_5;
assert true && red_5 = mulLymm5_5;
assume red_5 = mulLymm5_5 && true;
smull mulH_6 red_6 ymm7_6 ymm0_6;
assert true && red_6 = mulLymm5_6;
assume red_6 = mulLymm5_6 && true;
smull mulH_7 red_7 ymm7_7 ymm0_7;
assert true && red_7 = mulLymm5_7;
assume red_7 = mulLymm5_7 && true;
smull mulH_8 red_8 ymm7_8 ymm0_8;
assert true && red_8 = mulLymm5_8;
assume red_8 = mulLymm5_8 && true;
smull mulH_9 red_9 ymm7_9 ymm0_9;
assert true && red_9 = mulLymm5_9;
assume red_9 = mulLymm5_9 && true;
smull mulH_a red_a ymm7_a ymm0_a;
assert true && red_a = mulLymm5_a;
assume red_a = mulLymm5_a && true;
smull mulH_b red_b ymm7_b ymm0_b;
assert true && red_b = mulLymm5_b;
assume red_b = mulLymm5_b && true;
smull mulH_c red_c ymm7_c ymm0_c;
assert true && red_c = mulLymm5_c;
assume red_c = mulLymm5_c && true;
smull mulH_d red_d ymm7_d ymm0_d;
assert true && red_d = mulLymm5_d;
assume red_d = mulLymm5_d && true;
smull mulH_e red_e ymm7_e ymm0_e;
assert true && red_e = mulLymm5_e;
assume red_e = mulLymm5_e && true;
smull mulH_f red_f ymm7_f ymm0_f;
assert true && red_f = mulLymm5_f;
assume red_f = mulLymm5_f && true;
mov ymm7_0 mulH_0;
mov ymm7_1 mulH_1;
mov ymm7_2 mulH_2;
mov ymm7_3 mulH_3;
mov ymm7_4 mulH_4;
mov ymm7_5 mulH_5;
mov ymm7_6 mulH_6;
mov ymm7_7 mulH_7;
mov ymm7_8 mulH_8;
mov ymm7_9 mulH_9;
mov ymm7_a mulH_a;
mov ymm7_b mulH_b;
mov ymm7_c mulH_c;
mov ymm7_d mulH_d;
mov ymm7_e mulH_e;
mov ymm7_f mulH_f;
(* vpsubw %ymm7,%ymm5,%ymm5                        #! PC = 0x55555555904f *)
sub ymm5_0 ymm5_0 ymm7_0;
sub ymm5_1 ymm5_1 ymm7_1;
sub ymm5_2 ymm5_2 ymm7_2;
sub ymm5_3 ymm5_3 ymm7_3;
sub ymm5_4 ymm5_4 ymm7_4;
sub ymm5_5 ymm5_5 ymm7_5;
sub ymm5_6 ymm5_6 ymm7_6;
sub ymm5_7 ymm5_7 ymm7_7;
sub ymm5_8 ymm5_8 ymm7_8;
sub ymm5_9 ymm5_9 ymm7_9;
sub ymm5_a ymm5_a ymm7_a;
sub ymm5_b ymm5_b ymm7_b;
sub ymm5_c ymm5_c ymm7_c;
sub ymm5_d ymm5_d ymm7_d;
sub ymm5_e ymm5_e ymm7_e;
sub ymm5_f ymm5_f ymm7_f;
(* vpmullw %ymm1,%ymm6,%ymm7                       #! PC = 0x555555559053 *)
smull mulHymm6_0 mulL_0 ymm1_0 ymm6_0;
smull mulHymm6_1 mulL_1 ymm1_1 ymm6_1;
smull mulHymm6_2 mulL_2 ymm1_2 ymm6_2;
smull mulHymm6_3 mulL_3 ymm1_3 ymm6_3;
smull mulHymm6_4 mulL_4 ymm1_4 ymm6_4;
smull mulHymm6_5 mulL_5 ymm1_5 ymm6_5;
smull mulHymm6_6 mulL_6 ymm1_6 ymm6_6;
smull mulHymm6_7 mulL_7 ymm1_7 ymm6_7;
smull mulHymm6_8 mulL_8 ymm1_8 ymm6_8;
smull mulHymm6_9 mulL_9 ymm1_9 ymm6_9;
smull mulHymm6_a mulL_a ymm1_a ymm6_a;
smull mulHymm6_b mulL_b ymm1_b ymm6_b;
smull mulHymm6_c mulL_c ymm1_c ymm6_c;
smull mulHymm6_d mulL_d ymm1_d ymm6_d;
smull mulHymm6_e mulL_e ymm1_e ymm6_e;
smull mulHymm6_f mulL_f ymm1_f ymm6_f;
cast ymm7_0@sint16 mulL_0;
cast ymm7_1@sint16 mulL_1;
cast ymm7_2@sint16 mulL_2;
cast ymm7_3@sint16 mulL_3;
cast ymm7_4@sint16 mulL_4;
cast ymm7_5@sint16 mulL_5;
cast ymm7_6@sint16 mulL_6;
cast ymm7_7@sint16 mulL_7;
cast ymm7_8@sint16 mulL_8;
cast ymm7_9@sint16 mulL_9;
cast ymm7_a@sint16 mulL_a;
cast ymm7_b@sint16 mulL_b;
cast ymm7_c@sint16 mulL_c;
cast ymm7_d@sint16 mulL_d;
cast ymm7_e@sint16 mulL_e;
cast ymm7_f@sint16 mulL_f;
(* vpmulhw %ymm2,%ymm6,%ymm6                       #! PC = 0x555555559057 *)
smull mulH_0 mulLymm6_0 ymm6_0 ymm2_0;
smull mulH_1 mulLymm6_1 ymm6_1 ymm2_1;
smull mulH_2 mulLymm6_2 ymm6_2 ymm2_2;
smull mulH_3 mulLymm6_3 ymm6_3 ymm2_3;
smull mulH_4 mulLymm6_4 ymm6_4 ymm2_4;
smull mulH_5 mulLymm6_5 ymm6_5 ymm2_5;
smull mulH_6 mulLymm6_6 ymm6_6 ymm2_6;
smull mulH_7 mulLymm6_7 ymm6_7 ymm2_7;
smull mulH_8 mulLymm6_8 ymm6_8 ymm2_8;
smull mulH_9 mulLymm6_9 ymm6_9 ymm2_9;
smull mulH_a mulLymm6_a ymm6_a ymm2_a;
smull mulH_b mulLymm6_b ymm6_b ymm2_b;
smull mulH_c mulLymm6_c ymm6_c ymm2_c;
smull mulH_d mulLymm6_d ymm6_d ymm2_d;
smull mulH_e mulLymm6_e ymm6_e ymm2_e;
smull mulH_f mulLymm6_f ymm6_f ymm2_f;
mov ymm6_0 mulH_0;
mov ymm6_1 mulH_1;
mov ymm6_2 mulH_2;
mov ymm6_3 mulH_3;
mov ymm6_4 mulH_4;
mov ymm6_5 mulH_5;
mov ymm6_6 mulH_6;
mov ymm6_7 mulH_7;
mov ymm6_8 mulH_8;
mov ymm6_9 mulH_9;
mov ymm6_a mulH_a;
mov ymm6_b mulH_b;
mov ymm6_c mulH_c;
mov ymm6_d mulH_d;
mov ymm6_e mulH_e;
mov ymm6_f mulH_f;
(* vpmulhw %ymm0,%ymm7,%ymm7                       #! PC = 0x55555555905b *)
smull mulH_0 red_0 ymm7_0 ymm0_0;
assert true && red_0 = mulLymm6_0;
assume red_0 = mulLymm6_0 && true;
smull mulH_1 red_1 ymm7_1 ymm0_1;
assert true && red_1 = mulLymm6_1;
assume red_1 = mulLymm6_1 && true;
smull mulH_2 red_2 ymm7_2 ymm0_2;
assert true && red_2 = mulLymm6_2;
assume red_2 = mulLymm6_2 && true;
smull mulH_3 red_3 ymm7_3 ymm0_3;
assert true && red_3 = mulLymm6_3;
assume red_3 = mulLymm6_3 && true;
smull mulH_4 red_4 ymm7_4 ymm0_4;
assert true && red_4 = mulLymm6_4;
assume red_4 = mulLymm6_4 && true;
smull mulH_5 red_5 ymm7_5 ymm0_5;
assert true && red_5 = mulLymm6_5;
assume red_5 = mulLymm6_5 && true;
smull mulH_6 red_6 ymm7_6 ymm0_6;
assert true && red_6 = mulLymm6_6;
assume red_6 = mulLymm6_6 && true;
smull mulH_7 red_7 ymm7_7 ymm0_7;
assert true && red_7 = mulLymm6_7;
assume red_7 = mulLymm6_7 && true;
smull mulH_8 red_8 ymm7_8 ymm0_8;
assert true && red_8 = mulLymm6_8;
assume red_8 = mulLymm6_8 && true;
smull mulH_9 red_9 ymm7_9 ymm0_9;
assert true && red_9 = mulLymm6_9;
assume red_9 = mulLymm6_9 && true;
smull mulH_a red_a ymm7_a ymm0_a;
assert true && red_a = mulLymm6_a;
assume red_a = mulLymm6_a && true;
smull mulH_b red_b ymm7_b ymm0_b;
assert true && red_b = mulLymm6_b;
assume red_b = mulLymm6_b && true;
smull mulH_c red_c ymm7_c ymm0_c;
assert true && red_c = mulLymm6_c;
assume red_c = mulLymm6_c && true;
smull mulH_d red_d ymm7_d ymm0_d;
assert true && red_d = mulLymm6_d;
assume red_d = mulLymm6_d && true;
smull mulH_e red_e ymm7_e ymm0_e;
assert true && red_e = mulLymm6_e;
assume red_e = mulLymm6_e && true;
smull mulH_f red_f ymm7_f ymm0_f;
assert true && red_f = mulLymm6_f;
assume red_f = mulLymm6_f && true;
mov ymm7_0 mulH_0;
mov ymm7_1 mulH_1;
mov ymm7_2 mulH_2;
mov ymm7_3 mulH_3;
mov ymm7_4 mulH_4;
mov ymm7_5 mulH_5;
mov ymm7_6 mulH_6;
mov ymm7_7 mulH_7;
mov ymm7_8 mulH_8;
mov ymm7_9 mulH_9;
mov ymm7_a mulH_a;
mov ymm7_b mulH_b;
mov ymm7_c mulH_c;
mov ymm7_d mulH_d;
mov ymm7_e mulH_e;
mov ymm7_f mulH_f;
(* vpsubw %ymm7,%ymm6,%ymm6                        #! PC = 0x55555555905f *)
sub ymm6_0 ymm6_0 ymm7_0;
sub ymm6_1 ymm6_1 ymm7_1;
sub ymm6_2 ymm6_2 ymm7_2;
sub ymm6_3 ymm6_3 ymm7_3;
sub ymm6_4 ymm6_4 ymm7_4;
sub ymm6_5 ymm6_5 ymm7_5;
sub ymm6_6 ymm6_6 ymm7_6;
sub ymm6_7 ymm6_7 ymm7_7;
sub ymm6_8 ymm6_8 ymm7_8;
sub ymm6_9 ymm6_9 ymm7_9;
sub ymm6_a ymm6_a ymm7_a;
sub ymm6_b ymm6_b ymm7_b;
sub ymm6_c ymm6_c ymm7_c;
sub ymm6_d ymm6_d ymm7_d;
sub ymm6_e ymm6_e ymm7_e;
sub ymm6_f ymm6_f ymm7_f;
(* vpbroadcastw 0x116(%rdx),%ymm1                  #! EA = L0x555555561236; Value = 0x252491c0b85730bc; PC = 0x555555559063 *)
mov ymm1_0 L0x555555561236;
mov ymm1_1 L0x555555561236;
mov ymm1_2 L0x555555561236;
mov ymm1_3 L0x555555561236;
mov ymm1_4 L0x555555561236;
mov ymm1_5 L0x555555561236;
mov ymm1_6 L0x555555561236;
mov ymm1_7 L0x555555561236;
mov ymm1_8 L0x555555561236;
mov ymm1_9 L0x555555561236;
mov ymm1_a L0x555555561236;
mov ymm1_b L0x555555561236;
mov ymm1_c L0x555555561236;
mov ymm1_d L0x555555561236;
mov ymm1_e L0x555555561236;
mov ymm1_f L0x555555561236;
(* vpbroadcastw 0x316(%rdx),%ymm2                  #! EA = L0x555555561436; Value = 0x0d2411c0fe5708bc; PC = 0x55555555906c *)
mov ymm2_0 L0x555555561436;
mov ymm2_1 L0x555555561436;
mov ymm2_2 L0x555555561436;
mov ymm2_3 L0x555555561436;
mov ymm2_4 L0x555555561436;
mov ymm2_5 L0x555555561436;
mov ymm2_6 L0x555555561436;
mov ymm2_7 L0x555555561436;
mov ymm2_8 L0x555555561436;
mov ymm2_9 L0x555555561436;
mov ymm2_a L0x555555561436;
mov ymm2_b L0x555555561436;
mov ymm2_c L0x555555561436;
mov ymm2_d L0x555555561436;
mov ymm2_e L0x555555561436;
mov ymm2_f L0x555555561436;
(* vpmullw %ymm1,%ymm10,%ymm7                      #! PC = 0x555555559075 *)
smull mulHymm10_0 mulL_0 ymm1_0 ymm10_0;
smull mulHymm10_1 mulL_1 ymm1_1 ymm10_1;
smull mulHymm10_2 mulL_2 ymm1_2 ymm10_2;
smull mulHymm10_3 mulL_3 ymm1_3 ymm10_3;
smull mulHymm10_4 mulL_4 ymm1_4 ymm10_4;
smull mulHymm10_5 mulL_5 ymm1_5 ymm10_5;
smull mulHymm10_6 mulL_6 ymm1_6 ymm10_6;
smull mulHymm10_7 mulL_7 ymm1_7 ymm10_7;
smull mulHymm10_8 mulL_8 ymm1_8 ymm10_8;
smull mulHymm10_9 mulL_9 ymm1_9 ymm10_9;
smull mulHymm10_a mulL_a ymm1_a ymm10_a;
smull mulHymm10_b mulL_b ymm1_b ymm10_b;
smull mulHymm10_c mulL_c ymm1_c ymm10_c;
smull mulHymm10_d mulL_d ymm1_d ymm10_d;
smull mulHymm10_e mulL_e ymm1_e ymm10_e;
smull mulHymm10_f mulL_f ymm1_f ymm10_f;
cast ymm7_0@sint16 mulL_0;
cast ymm7_1@sint16 mulL_1;
cast ymm7_2@sint16 mulL_2;
cast ymm7_3@sint16 mulL_3;
cast ymm7_4@sint16 mulL_4;
cast ymm7_5@sint16 mulL_5;
cast ymm7_6@sint16 mulL_6;
cast ymm7_7@sint16 mulL_7;
cast ymm7_8@sint16 mulL_8;
cast ymm7_9@sint16 mulL_9;
cast ymm7_a@sint16 mulL_a;
cast ymm7_b@sint16 mulL_b;
cast ymm7_c@sint16 mulL_c;
cast ymm7_d@sint16 mulL_d;
cast ymm7_e@sint16 mulL_e;
cast ymm7_f@sint16 mulL_f;
(* vpmulhw %ymm2,%ymm10,%ymm10                     #! PC = 0x555555559079 *)
smull mulH_0 mulLymm10_0 ymm10_0 ymm2_0;
smull mulH_1 mulLymm10_1 ymm10_1 ymm2_1;
smull mulH_2 mulLymm10_2 ymm10_2 ymm2_2;
smull mulH_3 mulLymm10_3 ymm10_3 ymm2_3;
smull mulH_4 mulLymm10_4 ymm10_4 ymm2_4;
smull mulH_5 mulLymm10_5 ymm10_5 ymm2_5;
smull mulH_6 mulLymm10_6 ymm10_6 ymm2_6;
smull mulH_7 mulLymm10_7 ymm10_7 ymm2_7;
smull mulH_8 mulLymm10_8 ymm10_8 ymm2_8;
smull mulH_9 mulLymm10_9 ymm10_9 ymm2_9;
smull mulH_a mulLymm10_a ymm10_a ymm2_a;
smull mulH_b mulLymm10_b ymm10_b ymm2_b;
smull mulH_c mulLymm10_c ymm10_c ymm2_c;
smull mulH_d mulLymm10_d ymm10_d ymm2_d;
smull mulH_e mulLymm10_e ymm10_e ymm2_e;
smull mulH_f mulLymm10_f ymm10_f ymm2_f;
mov ymm10_0 mulH_0;
mov ymm10_1 mulH_1;
mov ymm10_2 mulH_2;
mov ymm10_3 mulH_3;
mov ymm10_4 mulH_4;
mov ymm10_5 mulH_5;
mov ymm10_6 mulH_6;
mov ymm10_7 mulH_7;
mov ymm10_8 mulH_8;
mov ymm10_9 mulH_9;
mov ymm10_a mulH_a;
mov ymm10_b mulH_b;
mov ymm10_c mulH_c;
mov ymm10_d mulH_d;
mov ymm10_e mulH_e;
mov ymm10_f mulH_f;
(* vpmulhw %ymm0,%ymm7,%ymm7                       #! PC = 0x55555555907d *)
smull mulH_0 red_0 ymm7_0 ymm0_0;
assert true && red_0 = mulLymm10_0;
assume red_0 = mulLymm10_0 && true;
smull mulH_1 red_1 ymm7_1 ymm0_1;
assert true && red_1 = mulLymm10_1;
assume red_1 = mulLymm10_1 && true;
smull mulH_2 red_2 ymm7_2 ymm0_2;
assert true && red_2 = mulLymm10_2;
assume red_2 = mulLymm10_2 && true;
smull mulH_3 red_3 ymm7_3 ymm0_3;
assert true && red_3 = mulLymm10_3;
assume red_3 = mulLymm10_3 && true;
smull mulH_4 red_4 ymm7_4 ymm0_4;
assert true && red_4 = mulLymm10_4;
assume red_4 = mulLymm10_4 && true;
smull mulH_5 red_5 ymm7_5 ymm0_5;
assert true && red_5 = mulLymm10_5;
assume red_5 = mulLymm10_5 && true;
smull mulH_6 red_6 ymm7_6 ymm0_6;
assert true && red_6 = mulLymm10_6;
assume red_6 = mulLymm10_6 && true;
smull mulH_7 red_7 ymm7_7 ymm0_7;
assert true && red_7 = mulLymm10_7;
assume red_7 = mulLymm10_7 && true;
smull mulH_8 red_8 ymm7_8 ymm0_8;
assert true && red_8 = mulLymm10_8;
assume red_8 = mulLymm10_8 && true;
smull mulH_9 red_9 ymm7_9 ymm0_9;
assert true && red_9 = mulLymm10_9;
assume red_9 = mulLymm10_9 && true;
smull mulH_a red_a ymm7_a ymm0_a;
assert true && red_a = mulLymm10_a;
assume red_a = mulLymm10_a && true;
smull mulH_b red_b ymm7_b ymm0_b;
assert true && red_b = mulLymm10_b;
assume red_b = mulLymm10_b && true;
smull mulH_c red_c ymm7_c ymm0_c;
assert true && red_c = mulLymm10_c;
assume red_c = mulLymm10_c && true;
smull mulH_d red_d ymm7_d ymm0_d;
assert true && red_d = mulLymm10_d;
assume red_d = mulLymm10_d && true;
smull mulH_e red_e ymm7_e ymm0_e;
assert true && red_e = mulLymm10_e;
assume red_e = mulLymm10_e && true;
smull mulH_f red_f ymm7_f ymm0_f;
assert true && red_f = mulLymm10_f;
assume red_f = mulLymm10_f && true;
mov ymm7_0 mulH_0;
mov ymm7_1 mulH_1;
mov ymm7_2 mulH_2;
mov ymm7_3 mulH_3;
mov ymm7_4 mulH_4;
mov ymm7_5 mulH_5;
mov ymm7_6 mulH_6;
mov ymm7_7 mulH_7;
mov ymm7_8 mulH_8;
mov ymm7_9 mulH_9;
mov ymm7_a mulH_a;
mov ymm7_b mulH_b;
mov ymm7_c mulH_c;
mov ymm7_d mulH_d;
mov ymm7_e mulH_e;
mov ymm7_f mulH_f;
(* vpsubw %ymm7,%ymm10,%ymm10                      #! PC = 0x555555559081 *)
sub ymm10_0 ymm10_0 ymm7_0;
sub ymm10_1 ymm10_1 ymm7_1;
sub ymm10_2 ymm10_2 ymm7_2;
sub ymm10_3 ymm10_3 ymm7_3;
sub ymm10_4 ymm10_4 ymm7_4;
sub ymm10_5 ymm10_5 ymm7_5;
sub ymm10_6 ymm10_6 ymm7_6;
sub ymm10_7 ymm10_7 ymm7_7;
sub ymm10_8 ymm10_8 ymm7_8;
sub ymm10_9 ymm10_9 ymm7_9;
sub ymm10_a ymm10_a ymm7_a;
sub ymm10_b ymm10_b ymm7_b;
sub ymm10_c ymm10_c ymm7_c;
sub ymm10_d ymm10_d ymm7_d;
sub ymm10_e ymm10_e ymm7_e;
sub ymm10_f ymm10_f ymm7_f;
(* vpmullw %ymm1,%ymm11,%ymm7                      #! PC = 0x555555559085 *)
smull mulHymm11_0 mulL_0 ymm1_0 ymm11_0;
smull mulHymm11_1 mulL_1 ymm1_1 ymm11_1;
smull mulHymm11_2 mulL_2 ymm1_2 ymm11_2;
smull mulHymm11_3 mulL_3 ymm1_3 ymm11_3;
smull mulHymm11_4 mulL_4 ymm1_4 ymm11_4;
smull mulHymm11_5 mulL_5 ymm1_5 ymm11_5;
smull mulHymm11_6 mulL_6 ymm1_6 ymm11_6;
smull mulHymm11_7 mulL_7 ymm1_7 ymm11_7;
smull mulHymm11_8 mulL_8 ymm1_8 ymm11_8;
smull mulHymm11_9 mulL_9 ymm1_9 ymm11_9;
smull mulHymm11_a mulL_a ymm1_a ymm11_a;
smull mulHymm11_b mulL_b ymm1_b ymm11_b;
smull mulHymm11_c mulL_c ymm1_c ymm11_c;
smull mulHymm11_d mulL_d ymm1_d ymm11_d;
smull mulHymm11_e mulL_e ymm1_e ymm11_e;
smull mulHymm11_f mulL_f ymm1_f ymm11_f;
cast ymm7_0@sint16 mulL_0;
cast ymm7_1@sint16 mulL_1;
cast ymm7_2@sint16 mulL_2;
cast ymm7_3@sint16 mulL_3;
cast ymm7_4@sint16 mulL_4;
cast ymm7_5@sint16 mulL_5;
cast ymm7_6@sint16 mulL_6;
cast ymm7_7@sint16 mulL_7;
cast ymm7_8@sint16 mulL_8;
cast ymm7_9@sint16 mulL_9;
cast ymm7_a@sint16 mulL_a;
cast ymm7_b@sint16 mulL_b;
cast ymm7_c@sint16 mulL_c;
cast ymm7_d@sint16 mulL_d;
cast ymm7_e@sint16 mulL_e;
cast ymm7_f@sint16 mulL_f;
(* vpmulhw %ymm2,%ymm11,%ymm11                     #! PC = 0x555555559089 *)
smull mulH_0 mulLymm11_0 ymm11_0 ymm2_0;
smull mulH_1 mulLymm11_1 ymm11_1 ymm2_1;
smull mulH_2 mulLymm11_2 ymm11_2 ymm2_2;
smull mulH_3 mulLymm11_3 ymm11_3 ymm2_3;
smull mulH_4 mulLymm11_4 ymm11_4 ymm2_4;
smull mulH_5 mulLymm11_5 ymm11_5 ymm2_5;
smull mulH_6 mulLymm11_6 ymm11_6 ymm2_6;
smull mulH_7 mulLymm11_7 ymm11_7 ymm2_7;
smull mulH_8 mulLymm11_8 ymm11_8 ymm2_8;
smull mulH_9 mulLymm11_9 ymm11_9 ymm2_9;
smull mulH_a mulLymm11_a ymm11_a ymm2_a;
smull mulH_b mulLymm11_b ymm11_b ymm2_b;
smull mulH_c mulLymm11_c ymm11_c ymm2_c;
smull mulH_d mulLymm11_d ymm11_d ymm2_d;
smull mulH_e mulLymm11_e ymm11_e ymm2_e;
smull mulH_f mulLymm11_f ymm11_f ymm2_f;
mov ymm11_0 mulH_0;
mov ymm11_1 mulH_1;
mov ymm11_2 mulH_2;
mov ymm11_3 mulH_3;
mov ymm11_4 mulH_4;
mov ymm11_5 mulH_5;
mov ymm11_6 mulH_6;
mov ymm11_7 mulH_7;
mov ymm11_8 mulH_8;
mov ymm11_9 mulH_9;
mov ymm11_a mulH_a;
mov ymm11_b mulH_b;
mov ymm11_c mulH_c;
mov ymm11_d mulH_d;
mov ymm11_e mulH_e;
mov ymm11_f mulH_f;
(* vpmulhw %ymm0,%ymm7,%ymm7                       #! PC = 0x55555555908d *)
smull mulH_0 red_0 ymm7_0 ymm0_0;
assert true && red_0 = mulLymm11_0;
assume red_0 = mulLymm11_0 && true;
smull mulH_1 red_1 ymm7_1 ymm0_1;
assert true && red_1 = mulLymm11_1;
assume red_1 = mulLymm11_1 && true;
smull mulH_2 red_2 ymm7_2 ymm0_2;
assert true && red_2 = mulLymm11_2;
assume red_2 = mulLymm11_2 && true;
smull mulH_3 red_3 ymm7_3 ymm0_3;
assert true && red_3 = mulLymm11_3;
assume red_3 = mulLymm11_3 && true;
smull mulH_4 red_4 ymm7_4 ymm0_4;
assert true && red_4 = mulLymm11_4;
assume red_4 = mulLymm11_4 && true;
smull mulH_5 red_5 ymm7_5 ymm0_5;
assert true && red_5 = mulLymm11_5;
assume red_5 = mulLymm11_5 && true;
smull mulH_6 red_6 ymm7_6 ymm0_6;
assert true && red_6 = mulLymm11_6;
assume red_6 = mulLymm11_6 && true;
smull mulH_7 red_7 ymm7_7 ymm0_7;
assert true && red_7 = mulLymm11_7;
assume red_7 = mulLymm11_7 && true;
smull mulH_8 red_8 ymm7_8 ymm0_8;
assert true && red_8 = mulLymm11_8;
assume red_8 = mulLymm11_8 && true;
smull mulH_9 red_9 ymm7_9 ymm0_9;
assert true && red_9 = mulLymm11_9;
assume red_9 = mulLymm11_9 && true;
smull mulH_a red_a ymm7_a ymm0_a;
assert true && red_a = mulLymm11_a;
assume red_a = mulLymm11_a && true;
smull mulH_b red_b ymm7_b ymm0_b;
assert true && red_b = mulLymm11_b;
assume red_b = mulLymm11_b && true;
smull mulH_c red_c ymm7_c ymm0_c;
assert true && red_c = mulLymm11_c;
assume red_c = mulLymm11_c && true;
smull mulH_d red_d ymm7_d ymm0_d;
assert true && red_d = mulLymm11_d;
assume red_d = mulLymm11_d && true;
smull mulH_e red_e ymm7_e ymm0_e;
assert true && red_e = mulLymm11_e;
assume red_e = mulLymm11_e && true;
smull mulH_f red_f ymm7_f ymm0_f;
assert true && red_f = mulLymm11_f;
assume red_f = mulLymm11_f && true;
mov ymm7_0 mulH_0;
mov ymm7_1 mulH_1;
mov ymm7_2 mulH_2;
mov ymm7_3 mulH_3;
mov ymm7_4 mulH_4;
mov ymm7_5 mulH_5;
mov ymm7_6 mulH_6;
mov ymm7_7 mulH_7;
mov ymm7_8 mulH_8;
mov ymm7_9 mulH_9;
mov ymm7_a mulH_a;
mov ymm7_b mulH_b;
mov ymm7_c mulH_c;
mov ymm7_d mulH_d;
mov ymm7_e mulH_e;
mov ymm7_f mulH_f;
(* vpsubw %ymm7,%ymm11,%ymm11                      #! PC = 0x555555559091 *)
sub ymm11_0 ymm11_0 ymm7_0;
sub ymm11_1 ymm11_1 ymm7_1;
sub ymm11_2 ymm11_2 ymm7_2;
sub ymm11_3 ymm11_3 ymm7_3;
sub ymm11_4 ymm11_4 ymm7_4;
sub ymm11_5 ymm11_5 ymm7_5;
sub ymm11_6 ymm11_6 ymm7_6;
sub ymm11_7 ymm11_7 ymm7_7;
sub ymm11_8 ymm11_8 ymm7_8;
sub ymm11_9 ymm11_9 ymm7_9;
sub ymm11_a ymm11_a ymm7_a;
sub ymm11_b ymm11_b ymm7_b;
sub ymm11_c ymm11_c ymm7_c;
sub ymm11_d ymm11_d ymm7_d;
sub ymm11_e ymm11_e ymm7_e;
sub ymm11_f ymm11_f ymm7_f;
(* vpaddw %ymm5,%ymm3,%ymm7                        #! PC = 0x555555559095 *)
add ymm7_0 ymm3_0 ymm5_0;
add ymm7_1 ymm3_1 ymm5_1;
add ymm7_2 ymm3_2 ymm5_2;
add ymm7_3 ymm3_3 ymm5_3;
add ymm7_4 ymm3_4 ymm5_4;
add ymm7_5 ymm3_5 ymm5_5;
add ymm7_6 ymm3_6 ymm5_6;
add ymm7_7 ymm3_7 ymm5_7;
add ymm7_8 ymm3_8 ymm5_8;
add ymm7_9 ymm3_9 ymm5_9;
add ymm7_a ymm3_a ymm5_a;
add ymm7_b ymm3_b ymm5_b;
add ymm7_c ymm3_c ymm5_c;
add ymm7_d ymm3_d ymm5_d;
add ymm7_e ymm3_e ymm5_e;
add ymm7_f ymm3_f ymm5_f;
(* vpsubw %ymm5,%ymm3,%ymm5                        #! PC = 0x555555559099 *)
sub ymm5_0 ymm3_0 ymm5_0;
sub ymm5_1 ymm3_1 ymm5_1;
sub ymm5_2 ymm3_2 ymm5_2;
sub ymm5_3 ymm3_3 ymm5_3;
sub ymm5_4 ymm3_4 ymm5_4;
sub ymm5_5 ymm3_5 ymm5_5;
sub ymm5_6 ymm3_6 ymm5_6;
sub ymm5_7 ymm3_7 ymm5_7;
sub ymm5_8 ymm3_8 ymm5_8;
sub ymm5_9 ymm3_9 ymm5_9;
sub ymm5_a ymm3_a ymm5_a;
sub ymm5_b ymm3_b ymm5_b;
sub ymm5_c ymm3_c ymm5_c;
sub ymm5_d ymm3_d ymm5_d;
sub ymm5_e ymm3_e ymm5_e;
sub ymm5_f ymm3_f ymm5_f;
(* vpaddw %ymm6,%ymm4,%ymm3                        #! PC = 0x55555555909d *)
add ymm3_0 ymm4_0 ymm6_0;
add ymm3_1 ymm4_1 ymm6_1;
add ymm3_2 ymm4_2 ymm6_2;
add ymm3_3 ymm4_3 ymm6_3;
add ymm3_4 ymm4_4 ymm6_4;
add ymm3_5 ymm4_5 ymm6_5;
add ymm3_6 ymm4_6 ymm6_6;
add ymm3_7 ymm4_7 ymm6_7;
add ymm3_8 ymm4_8 ymm6_8;
add ymm3_9 ymm4_9 ymm6_9;
add ymm3_a ymm4_a ymm6_a;
add ymm3_b ymm4_b ymm6_b;
add ymm3_c ymm4_c ymm6_c;
add ymm3_d ymm4_d ymm6_d;
add ymm3_e ymm4_e ymm6_e;
add ymm3_f ymm4_f ymm6_f;
(* vpsubw %ymm6,%ymm4,%ymm6                        #! PC = 0x5555555590a1 *)
sub ymm6_0 ymm4_0 ymm6_0;
sub ymm6_1 ymm4_1 ymm6_1;
sub ymm6_2 ymm4_2 ymm6_2;
sub ymm6_3 ymm4_3 ymm6_3;
sub ymm6_4 ymm4_4 ymm6_4;
sub ymm6_5 ymm4_5 ymm6_5;
sub ymm6_6 ymm4_6 ymm6_6;
sub ymm6_7 ymm4_7 ymm6_7;
sub ymm6_8 ymm4_8 ymm6_8;
sub ymm6_9 ymm4_9 ymm6_9;
sub ymm6_a ymm4_a ymm6_a;
sub ymm6_b ymm4_b ymm6_b;
sub ymm6_c ymm4_c ymm6_c;
sub ymm6_d ymm4_d ymm6_d;
sub ymm6_e ymm4_e ymm6_e;
sub ymm6_f ymm4_f ymm6_f;
(* vpaddw %ymm10,%ymm8,%ymm4                       #! PC = 0x5555555590a5 *)
add ymm4_0 ymm8_0 ymm10_0;
add ymm4_1 ymm8_1 ymm10_1;
add ymm4_2 ymm8_2 ymm10_2;
add ymm4_3 ymm8_3 ymm10_3;
add ymm4_4 ymm8_4 ymm10_4;
add ymm4_5 ymm8_5 ymm10_5;
add ymm4_6 ymm8_6 ymm10_6;
add ymm4_7 ymm8_7 ymm10_7;
add ymm4_8 ymm8_8 ymm10_8;
add ymm4_9 ymm8_9 ymm10_9;
add ymm4_a ymm8_a ymm10_a;
add ymm4_b ymm8_b ymm10_b;
add ymm4_c ymm8_c ymm10_c;
add ymm4_d ymm8_d ymm10_d;
add ymm4_e ymm8_e ymm10_e;
add ymm4_f ymm8_f ymm10_f;
(* vpsubw %ymm10,%ymm8,%ymm10                      #! PC = 0x5555555590aa *)
sub ymm10_0 ymm8_0 ymm10_0;
sub ymm10_1 ymm8_1 ymm10_1;
sub ymm10_2 ymm8_2 ymm10_2;
sub ymm10_3 ymm8_3 ymm10_3;
sub ymm10_4 ymm8_4 ymm10_4;
sub ymm10_5 ymm8_5 ymm10_5;
sub ymm10_6 ymm8_6 ymm10_6;
sub ymm10_7 ymm8_7 ymm10_7;
sub ymm10_8 ymm8_8 ymm10_8;
sub ymm10_9 ymm8_9 ymm10_9;
sub ymm10_a ymm8_a ymm10_a;
sub ymm10_b ymm8_b ymm10_b;
sub ymm10_c ymm8_c ymm10_c;
sub ymm10_d ymm8_d ymm10_d;
sub ymm10_e ymm8_e ymm10_e;
sub ymm10_f ymm8_f ymm10_f;
(* vpaddw %ymm11,%ymm9,%ymm8                       #! PC = 0x5555555590af *)
add ymm8_0 ymm9_0 ymm11_0;
add ymm8_1 ymm9_1 ymm11_1;
add ymm8_2 ymm9_2 ymm11_2;
add ymm8_3 ymm9_3 ymm11_3;
add ymm8_4 ymm9_4 ymm11_4;
add ymm8_5 ymm9_5 ymm11_5;
add ymm8_6 ymm9_6 ymm11_6;
add ymm8_7 ymm9_7 ymm11_7;
add ymm8_8 ymm9_8 ymm11_8;
add ymm8_9 ymm9_9 ymm11_9;
add ymm8_a ymm9_a ymm11_a;
add ymm8_b ymm9_b ymm11_b;
add ymm8_c ymm9_c ymm11_c;
add ymm8_d ymm9_d ymm11_d;
add ymm8_e ymm9_e ymm11_e;
add ymm8_f ymm9_f ymm11_f;
(* vpsubw %ymm11,%ymm9,%ymm11                      #! PC = 0x5555555590b4 *)
sub ymm11_0 ymm9_0 ymm11_0;
sub ymm11_1 ymm9_1 ymm11_1;
sub ymm11_2 ymm9_2 ymm11_2;
sub ymm11_3 ymm9_3 ymm11_3;
sub ymm11_4 ymm9_4 ymm11_4;
sub ymm11_5 ymm9_5 ymm11_5;
sub ymm11_6 ymm9_6 ymm11_6;
sub ymm11_7 ymm9_7 ymm11_7;
sub ymm11_8 ymm9_8 ymm11_8;
sub ymm11_9 ymm9_9 ymm11_9;
sub ymm11_a ymm9_a ymm11_a;
sub ymm11_b ymm9_b ymm11_b;
sub ymm11_c ymm9_c ymm11_c;
sub ymm11_d ymm9_d ymm11_d;
sub ymm11_e ymm9_e ymm11_e;
sub ymm11_f ymm9_f ymm11_f;
(* vpbroadcastw 0x128(%rdx),%ymm1                  #! EA = L0x555555561248; Value = 0xe2fb1c3c679663c7; PC = 0x5555555590b9 *)
mov ymm1_0 L0x555555561248;
mov ymm1_1 L0x555555561248;
mov ymm1_2 L0x555555561248;
mov ymm1_3 L0x555555561248;
mov ymm1_4 L0x555555561248;
mov ymm1_5 L0x555555561248;
mov ymm1_6 L0x555555561248;
mov ymm1_7 L0x555555561248;
mov ymm1_8 L0x555555561248;
mov ymm1_9 L0x555555561248;
mov ymm1_a L0x555555561248;
mov ymm1_b L0x555555561248;
mov ymm1_c L0x555555561248;
mov ymm1_d L0x555555561248;
mov ymm1_e L0x555555561248;
mov ymm1_f L0x555555561248;
(* vpbroadcastw 0x328(%rdx),%ymm2                  #! EA = L0x555555561448; Value = 0x10fbf43c039609c7; PC = 0x5555555590c2 *)
mov ymm2_0 L0x555555561448;
mov ymm2_1 L0x555555561448;
mov ymm2_2 L0x555555561448;
mov ymm2_3 L0x555555561448;
mov ymm2_4 L0x555555561448;
mov ymm2_5 L0x555555561448;
mov ymm2_6 L0x555555561448;
mov ymm2_7 L0x555555561448;
mov ymm2_8 L0x555555561448;
mov ymm2_9 L0x555555561448;
mov ymm2_a L0x555555561448;
mov ymm2_b L0x555555561448;
mov ymm2_c L0x555555561448;
mov ymm2_d L0x555555561448;
mov ymm2_e L0x555555561448;
mov ymm2_f L0x555555561448;
(* vpmullw %ymm1,%ymm3,%ymm9                       #! PC = 0x5555555590cb *)
smull mulHymm3_0 mulL_0 ymm1_0 ymm3_0;
smull mulHymm3_1 mulL_1 ymm1_1 ymm3_1;
smull mulHymm3_2 mulL_2 ymm1_2 ymm3_2;
smull mulHymm3_3 mulL_3 ymm1_3 ymm3_3;
smull mulHymm3_4 mulL_4 ymm1_4 ymm3_4;
smull mulHymm3_5 mulL_5 ymm1_5 ymm3_5;
smull mulHymm3_6 mulL_6 ymm1_6 ymm3_6;
smull mulHymm3_7 mulL_7 ymm1_7 ymm3_7;
smull mulHymm3_8 mulL_8 ymm1_8 ymm3_8;
smull mulHymm3_9 mulL_9 ymm1_9 ymm3_9;
smull mulHymm3_a mulL_a ymm1_a ymm3_a;
smull mulHymm3_b mulL_b ymm1_b ymm3_b;
smull mulHymm3_c mulL_c ymm1_c ymm3_c;
smull mulHymm3_d mulL_d ymm1_d ymm3_d;
smull mulHymm3_e mulL_e ymm1_e ymm3_e;
smull mulHymm3_f mulL_f ymm1_f ymm3_f;
cast ymm9_0@sint16 mulL_0;
cast ymm9_1@sint16 mulL_1;
cast ymm9_2@sint16 mulL_2;
cast ymm9_3@sint16 mulL_3;
cast ymm9_4@sint16 mulL_4;
cast ymm9_5@sint16 mulL_5;
cast ymm9_6@sint16 mulL_6;
cast ymm9_7@sint16 mulL_7;
cast ymm9_8@sint16 mulL_8;
cast ymm9_9@sint16 mulL_9;
cast ymm9_a@sint16 mulL_a;
cast ymm9_b@sint16 mulL_b;
cast ymm9_c@sint16 mulL_c;
cast ymm9_d@sint16 mulL_d;
cast ymm9_e@sint16 mulL_e;
cast ymm9_f@sint16 mulL_f;
(* vpmulhw %ymm2,%ymm3,%ymm3                       #! PC = 0x5555555590cf *)
smull mulH_0 mulLymm3_0 ymm3_0 ymm2_0;
smull mulH_1 mulLymm3_1 ymm3_1 ymm2_1;
smull mulH_2 mulLymm3_2 ymm3_2 ymm2_2;
smull mulH_3 mulLymm3_3 ymm3_3 ymm2_3;
smull mulH_4 mulLymm3_4 ymm3_4 ymm2_4;
smull mulH_5 mulLymm3_5 ymm3_5 ymm2_5;
smull mulH_6 mulLymm3_6 ymm3_6 ymm2_6;
smull mulH_7 mulLymm3_7 ymm3_7 ymm2_7;
smull mulH_8 mulLymm3_8 ymm3_8 ymm2_8;
smull mulH_9 mulLymm3_9 ymm3_9 ymm2_9;
smull mulH_a mulLymm3_a ymm3_a ymm2_a;
smull mulH_b mulLymm3_b ymm3_b ymm2_b;
smull mulH_c mulLymm3_c ymm3_c ymm2_c;
smull mulH_d mulLymm3_d ymm3_d ymm2_d;
smull mulH_e mulLymm3_e ymm3_e ymm2_e;
smull mulH_f mulLymm3_f ymm3_f ymm2_f;
mov ymm3_0 mulH_0;
mov ymm3_1 mulH_1;
mov ymm3_2 mulH_2;
mov ymm3_3 mulH_3;
mov ymm3_4 mulH_4;
mov ymm3_5 mulH_5;
mov ymm3_6 mulH_6;
mov ymm3_7 mulH_7;
mov ymm3_8 mulH_8;
mov ymm3_9 mulH_9;
mov ymm3_a mulH_a;
mov ymm3_b mulH_b;
mov ymm3_c mulH_c;
mov ymm3_d mulH_d;
mov ymm3_e mulH_e;
mov ymm3_f mulH_f;
(* vpmulhw %ymm0,%ymm9,%ymm9                       #! PC = 0x5555555590d3 *)
smull mulH_0 red_0 ymm9_0 ymm0_0;
assert true && red_0 = mulLymm3_0;
assume red_0 = mulLymm3_0 && true;
smull mulH_1 red_1 ymm9_1 ymm0_1;
assert true && red_1 = mulLymm3_1;
assume red_1 = mulLymm3_1 && true;
smull mulH_2 red_2 ymm9_2 ymm0_2;
assert true && red_2 = mulLymm3_2;
assume red_2 = mulLymm3_2 && true;
smull mulH_3 red_3 ymm9_3 ymm0_3;
assert true && red_3 = mulLymm3_3;
assume red_3 = mulLymm3_3 && true;
smull mulH_4 red_4 ymm9_4 ymm0_4;
assert true && red_4 = mulLymm3_4;
assume red_4 = mulLymm3_4 && true;
smull mulH_5 red_5 ymm9_5 ymm0_5;
assert true && red_5 = mulLymm3_5;
assume red_5 = mulLymm3_5 && true;
smull mulH_6 red_6 ymm9_6 ymm0_6;
assert true && red_6 = mulLymm3_6;
assume red_6 = mulLymm3_6 && true;
smull mulH_7 red_7 ymm9_7 ymm0_7;
assert true && red_7 = mulLymm3_7;
assume red_7 = mulLymm3_7 && true;
smull mulH_8 red_8 ymm9_8 ymm0_8;
assert true && red_8 = mulLymm3_8;
assume red_8 = mulLymm3_8 && true;
smull mulH_9 red_9 ymm9_9 ymm0_9;
assert true && red_9 = mulLymm3_9;
assume red_9 = mulLymm3_9 && true;
smull mulH_a red_a ymm9_a ymm0_a;
assert true && red_a = mulLymm3_a;
assume red_a = mulLymm3_a && true;
smull mulH_b red_b ymm9_b ymm0_b;
assert true && red_b = mulLymm3_b;
assume red_b = mulLymm3_b && true;
smull mulH_c red_c ymm9_c ymm0_c;
assert true && red_c = mulLymm3_c;
assume red_c = mulLymm3_c && true;
smull mulH_d red_d ymm9_d ymm0_d;
assert true && red_d = mulLymm3_d;
assume red_d = mulLymm3_d && true;
smull mulH_e red_e ymm9_e ymm0_e;
assert true && red_e = mulLymm3_e;
assume red_e = mulLymm3_e && true;
smull mulH_f red_f ymm9_f ymm0_f;
assert true && red_f = mulLymm3_f;
assume red_f = mulLymm3_f && true;
mov ymm9_0 mulH_0;
mov ymm9_1 mulH_1;
mov ymm9_2 mulH_2;
mov ymm9_3 mulH_3;
mov ymm9_4 mulH_4;
mov ymm9_5 mulH_5;
mov ymm9_6 mulH_6;
mov ymm9_7 mulH_7;
mov ymm9_8 mulH_8;
mov ymm9_9 mulH_9;
mov ymm9_a mulH_a;
mov ymm9_b mulH_b;
mov ymm9_c mulH_c;
mov ymm9_d mulH_d;
mov ymm9_e mulH_e;
mov ymm9_f mulH_f;
(* vpsubw %ymm9,%ymm3,%ymm3                        #! PC = 0x5555555590d7 *)
sub ymm3_0 ymm3_0 ymm9_0;
sub ymm3_1 ymm3_1 ymm9_1;
sub ymm3_2 ymm3_2 ymm9_2;
sub ymm3_3 ymm3_3 ymm9_3;
sub ymm3_4 ymm3_4 ymm9_4;
sub ymm3_5 ymm3_5 ymm9_5;
sub ymm3_6 ymm3_6 ymm9_6;
sub ymm3_7 ymm3_7 ymm9_7;
sub ymm3_8 ymm3_8 ymm9_8;
sub ymm3_9 ymm3_9 ymm9_9;
sub ymm3_a ymm3_a ymm9_a;
sub ymm3_b ymm3_b ymm9_b;
sub ymm3_c ymm3_c ymm9_c;
sub ymm3_d ymm3_d ymm9_d;
sub ymm3_e ymm3_e ymm9_e;
sub ymm3_f ymm3_f ymm9_f;
(* vpbroadcastw 0x12a(%rdx),%ymm1                  #! EA = L0x55555556124a; Value = 0x398be2fb1c3c6796; PC = 0x5555555590dc *)
mov ymm1_0 L0x55555556124a;
mov ymm1_1 L0x55555556124a;
mov ymm1_2 L0x55555556124a;
mov ymm1_3 L0x55555556124a;
mov ymm1_4 L0x55555556124a;
mov ymm1_5 L0x55555556124a;
mov ymm1_6 L0x55555556124a;
mov ymm1_7 L0x55555556124a;
mov ymm1_8 L0x55555556124a;
mov ymm1_9 L0x55555556124a;
mov ymm1_a L0x55555556124a;
mov ymm1_b L0x55555556124a;
mov ymm1_c L0x55555556124a;
mov ymm1_d L0x55555556124a;
mov ymm1_e L0x55555556124a;
mov ymm1_f L0x55555556124a;
(* vpbroadcastw 0x32a(%rdx),%ymm2                  #! EA = L0x55555556144a; Value = 0x078b10fbf43c0396; PC = 0x5555555590e5 *)
mov ymm2_0 L0x55555556144a;
mov ymm2_1 L0x55555556144a;
mov ymm2_2 L0x55555556144a;
mov ymm2_3 L0x55555556144a;
mov ymm2_4 L0x55555556144a;
mov ymm2_5 L0x55555556144a;
mov ymm2_6 L0x55555556144a;
mov ymm2_7 L0x55555556144a;
mov ymm2_8 L0x55555556144a;
mov ymm2_9 L0x55555556144a;
mov ymm2_a L0x55555556144a;
mov ymm2_b L0x55555556144a;
mov ymm2_c L0x55555556144a;
mov ymm2_d L0x55555556144a;
mov ymm2_e L0x55555556144a;
mov ymm2_f L0x55555556144a;
(* vpmullw %ymm1,%ymm6,%ymm9                       #! PC = 0x5555555590ee *)
smull mulHymm6_0 mulL_0 ymm1_0 ymm6_0;
smull mulHymm6_1 mulL_1 ymm1_1 ymm6_1;
smull mulHymm6_2 mulL_2 ymm1_2 ymm6_2;
smull mulHymm6_3 mulL_3 ymm1_3 ymm6_3;
smull mulHymm6_4 mulL_4 ymm1_4 ymm6_4;
smull mulHymm6_5 mulL_5 ymm1_5 ymm6_5;
smull mulHymm6_6 mulL_6 ymm1_6 ymm6_6;
smull mulHymm6_7 mulL_7 ymm1_7 ymm6_7;
smull mulHymm6_8 mulL_8 ymm1_8 ymm6_8;
smull mulHymm6_9 mulL_9 ymm1_9 ymm6_9;
smull mulHymm6_a mulL_a ymm1_a ymm6_a;
smull mulHymm6_b mulL_b ymm1_b ymm6_b;
smull mulHymm6_c mulL_c ymm1_c ymm6_c;
smull mulHymm6_d mulL_d ymm1_d ymm6_d;
smull mulHymm6_e mulL_e ymm1_e ymm6_e;
smull mulHymm6_f mulL_f ymm1_f ymm6_f;
cast ymm9_0@sint16 mulL_0;
cast ymm9_1@sint16 mulL_1;
cast ymm9_2@sint16 mulL_2;
cast ymm9_3@sint16 mulL_3;
cast ymm9_4@sint16 mulL_4;
cast ymm9_5@sint16 mulL_5;
cast ymm9_6@sint16 mulL_6;
cast ymm9_7@sint16 mulL_7;
cast ymm9_8@sint16 mulL_8;
cast ymm9_9@sint16 mulL_9;
cast ymm9_a@sint16 mulL_a;
cast ymm9_b@sint16 mulL_b;
cast ymm9_c@sint16 mulL_c;
cast ymm9_d@sint16 mulL_d;
cast ymm9_e@sint16 mulL_e;
cast ymm9_f@sint16 mulL_f;
(* vpmulhw %ymm2,%ymm6,%ymm6                       #! PC = 0x5555555590f2 *)
smull mulH_0 mulLymm6_0 ymm6_0 ymm2_0;
smull mulH_1 mulLymm6_1 ymm6_1 ymm2_1;
smull mulH_2 mulLymm6_2 ymm6_2 ymm2_2;
smull mulH_3 mulLymm6_3 ymm6_3 ymm2_3;
smull mulH_4 mulLymm6_4 ymm6_4 ymm2_4;
smull mulH_5 mulLymm6_5 ymm6_5 ymm2_5;
smull mulH_6 mulLymm6_6 ymm6_6 ymm2_6;
smull mulH_7 mulLymm6_7 ymm6_7 ymm2_7;
smull mulH_8 mulLymm6_8 ymm6_8 ymm2_8;
smull mulH_9 mulLymm6_9 ymm6_9 ymm2_9;
smull mulH_a mulLymm6_a ymm6_a ymm2_a;
smull mulH_b mulLymm6_b ymm6_b ymm2_b;
smull mulH_c mulLymm6_c ymm6_c ymm2_c;
smull mulH_d mulLymm6_d ymm6_d ymm2_d;
smull mulH_e mulLymm6_e ymm6_e ymm2_e;
smull mulH_f mulLymm6_f ymm6_f ymm2_f;
mov ymm6_0 mulH_0;
mov ymm6_1 mulH_1;
mov ymm6_2 mulH_2;
mov ymm6_3 mulH_3;
mov ymm6_4 mulH_4;
mov ymm6_5 mulH_5;
mov ymm6_6 mulH_6;
mov ymm6_7 mulH_7;
mov ymm6_8 mulH_8;
mov ymm6_9 mulH_9;
mov ymm6_a mulH_a;
mov ymm6_b mulH_b;
mov ymm6_c mulH_c;
mov ymm6_d mulH_d;
mov ymm6_e mulH_e;
mov ymm6_f mulH_f;
(* vpmulhw %ymm0,%ymm9,%ymm9                       #! PC = 0x5555555590f6 *)
smull mulH_0 red_0 ymm9_0 ymm0_0;
assert true && red_0 = mulLymm6_0;
assume red_0 = mulLymm6_0 && true;
smull mulH_1 red_1 ymm9_1 ymm0_1;
assert true && red_1 = mulLymm6_1;
assume red_1 = mulLymm6_1 && true;
smull mulH_2 red_2 ymm9_2 ymm0_2;
assert true && red_2 = mulLymm6_2;
assume red_2 = mulLymm6_2 && true;
smull mulH_3 red_3 ymm9_3 ymm0_3;
assert true && red_3 = mulLymm6_3;
assume red_3 = mulLymm6_3 && true;
smull mulH_4 red_4 ymm9_4 ymm0_4;
assert true && red_4 = mulLymm6_4;
assume red_4 = mulLymm6_4 && true;
smull mulH_5 red_5 ymm9_5 ymm0_5;
assert true && red_5 = mulLymm6_5;
assume red_5 = mulLymm6_5 && true;
smull mulH_6 red_6 ymm9_6 ymm0_6;
assert true && red_6 = mulLymm6_6;
assume red_6 = mulLymm6_6 && true;
smull mulH_7 red_7 ymm9_7 ymm0_7;
assert true && red_7 = mulLymm6_7;
assume red_7 = mulLymm6_7 && true;
smull mulH_8 red_8 ymm9_8 ymm0_8;
assert true && red_8 = mulLymm6_8;
assume red_8 = mulLymm6_8 && true;
smull mulH_9 red_9 ymm9_9 ymm0_9;
assert true && red_9 = mulLymm6_9;
assume red_9 = mulLymm6_9 && true;
smull mulH_a red_a ymm9_a ymm0_a;
assert true && red_a = mulLymm6_a;
assume red_a = mulLymm6_a && true;
smull mulH_b red_b ymm9_b ymm0_b;
assert true && red_b = mulLymm6_b;
assume red_b = mulLymm6_b && true;
smull mulH_c red_c ymm9_c ymm0_c;
assert true && red_c = mulLymm6_c;
assume red_c = mulLymm6_c && true;
smull mulH_d red_d ymm9_d ymm0_d;
assert true && red_d = mulLymm6_d;
assume red_d = mulLymm6_d && true;
smull mulH_e red_e ymm9_e ymm0_e;
assert true && red_e = mulLymm6_e;
assume red_e = mulLymm6_e && true;
smull mulH_f red_f ymm9_f ymm0_f;
assert true && red_f = mulLymm6_f;
assume red_f = mulLymm6_f && true;
mov ymm9_0 mulH_0;
mov ymm9_1 mulH_1;
mov ymm9_2 mulH_2;
mov ymm9_3 mulH_3;
mov ymm9_4 mulH_4;
mov ymm9_5 mulH_5;
mov ymm9_6 mulH_6;
mov ymm9_7 mulH_7;
mov ymm9_8 mulH_8;
mov ymm9_9 mulH_9;
mov ymm9_a mulH_a;
mov ymm9_b mulH_b;
mov ymm9_c mulH_c;
mov ymm9_d mulH_d;
mov ymm9_e mulH_e;
mov ymm9_f mulH_f;
(* vpsubw %ymm9,%ymm6,%ymm6                        #! PC = 0x5555555590fa *)
sub ymm6_0 ymm6_0 ymm9_0;
sub ymm6_1 ymm6_1 ymm9_1;
sub ymm6_2 ymm6_2 ymm9_2;
sub ymm6_3 ymm6_3 ymm9_3;
sub ymm6_4 ymm6_4 ymm9_4;
sub ymm6_5 ymm6_5 ymm9_5;
sub ymm6_6 ymm6_6 ymm9_6;
sub ymm6_7 ymm6_7 ymm9_7;
sub ymm6_8 ymm6_8 ymm9_8;
sub ymm6_9 ymm6_9 ymm9_9;
sub ymm6_a ymm6_a ymm9_a;
sub ymm6_b ymm6_b ymm9_b;
sub ymm6_c ymm6_c ymm9_c;
sub ymm6_d ymm6_d ymm9_d;
sub ymm6_e ymm6_e ymm9_e;
sub ymm6_f ymm6_f ymm9_f;
(* vpbroadcastw 0x12c(%rdx),%ymm1                  #! EA = L0x55555556124c; Value = 0xfcc3398be2fb1c3c; PC = 0x5555555590ff *)
mov ymm1_0 L0x55555556124c;
mov ymm1_1 L0x55555556124c;
mov ymm1_2 L0x55555556124c;
mov ymm1_3 L0x55555556124c;
mov ymm1_4 L0x55555556124c;
mov ymm1_5 L0x55555556124c;
mov ymm1_6 L0x55555556124c;
mov ymm1_7 L0x55555556124c;
mov ymm1_8 L0x55555556124c;
mov ymm1_9 L0x55555556124c;
mov ymm1_a L0x55555556124c;
mov ymm1_b L0x55555556124c;
mov ymm1_c L0x55555556124c;
mov ymm1_d L0x55555556124c;
mov ymm1_e L0x55555556124c;
mov ymm1_f L0x55555556124c;
(* vpbroadcastw 0x32c(%rdx),%ymm2                  #! EA = L0x55555556144c; Value = 0xfac3078b10fbf43c; PC = 0x555555559108 *)
mov ymm2_0 L0x55555556144c;
mov ymm2_1 L0x55555556144c;
mov ymm2_2 L0x55555556144c;
mov ymm2_3 L0x55555556144c;
mov ymm2_4 L0x55555556144c;
mov ymm2_5 L0x55555556144c;
mov ymm2_6 L0x55555556144c;
mov ymm2_7 L0x55555556144c;
mov ymm2_8 L0x55555556144c;
mov ymm2_9 L0x55555556144c;
mov ymm2_a L0x55555556144c;
mov ymm2_b L0x55555556144c;
mov ymm2_c L0x55555556144c;
mov ymm2_d L0x55555556144c;
mov ymm2_e L0x55555556144c;
mov ymm2_f L0x55555556144c;
(* vpmullw %ymm1,%ymm8,%ymm9                       #! PC = 0x555555559111 *)
smull mulHymm8_0 mulL_0 ymm1_0 ymm8_0;
smull mulHymm8_1 mulL_1 ymm1_1 ymm8_1;
smull mulHymm8_2 mulL_2 ymm1_2 ymm8_2;
smull mulHymm8_3 mulL_3 ymm1_3 ymm8_3;
smull mulHymm8_4 mulL_4 ymm1_4 ymm8_4;
smull mulHymm8_5 mulL_5 ymm1_5 ymm8_5;
smull mulHymm8_6 mulL_6 ymm1_6 ymm8_6;
smull mulHymm8_7 mulL_7 ymm1_7 ymm8_7;
smull mulHymm8_8 mulL_8 ymm1_8 ymm8_8;
smull mulHymm8_9 mulL_9 ymm1_9 ymm8_9;
smull mulHymm8_a mulL_a ymm1_a ymm8_a;
smull mulHymm8_b mulL_b ymm1_b ymm8_b;
smull mulHymm8_c mulL_c ymm1_c ymm8_c;
smull mulHymm8_d mulL_d ymm1_d ymm8_d;
smull mulHymm8_e mulL_e ymm1_e ymm8_e;
smull mulHymm8_f mulL_f ymm1_f ymm8_f;
cast ymm9_0@sint16 mulL_0;
cast ymm9_1@sint16 mulL_1;
cast ymm9_2@sint16 mulL_2;
cast ymm9_3@sint16 mulL_3;
cast ymm9_4@sint16 mulL_4;
cast ymm9_5@sint16 mulL_5;
cast ymm9_6@sint16 mulL_6;
cast ymm9_7@sint16 mulL_7;
cast ymm9_8@sint16 mulL_8;
cast ymm9_9@sint16 mulL_9;
cast ymm9_a@sint16 mulL_a;
cast ymm9_b@sint16 mulL_b;
cast ymm9_c@sint16 mulL_c;
cast ymm9_d@sint16 mulL_d;
cast ymm9_e@sint16 mulL_e;
cast ymm9_f@sint16 mulL_f;
(* vpmulhw %ymm2,%ymm8,%ymm8                       #! PC = 0x555555559115 *)
smull mulH_0 mulLymm8_0 ymm8_0 ymm2_0;
smull mulH_1 mulLymm8_1 ymm8_1 ymm2_1;
smull mulH_2 mulLymm8_2 ymm8_2 ymm2_2;
smull mulH_3 mulLymm8_3 ymm8_3 ymm2_3;
smull mulH_4 mulLymm8_4 ymm8_4 ymm2_4;
smull mulH_5 mulLymm8_5 ymm8_5 ymm2_5;
smull mulH_6 mulLymm8_6 ymm8_6 ymm2_6;
smull mulH_7 mulLymm8_7 ymm8_7 ymm2_7;
smull mulH_8 mulLymm8_8 ymm8_8 ymm2_8;
smull mulH_9 mulLymm8_9 ymm8_9 ymm2_9;
smull mulH_a mulLymm8_a ymm8_a ymm2_a;
smull mulH_b mulLymm8_b ymm8_b ymm2_b;
smull mulH_c mulLymm8_c ymm8_c ymm2_c;
smull mulH_d mulLymm8_d ymm8_d ymm2_d;
smull mulH_e mulLymm8_e ymm8_e ymm2_e;
smull mulH_f mulLymm8_f ymm8_f ymm2_f;
mov ymm8_0 mulH_0;
mov ymm8_1 mulH_1;
mov ymm8_2 mulH_2;
mov ymm8_3 mulH_3;
mov ymm8_4 mulH_4;
mov ymm8_5 mulH_5;
mov ymm8_6 mulH_6;
mov ymm8_7 mulH_7;
mov ymm8_8 mulH_8;
mov ymm8_9 mulH_9;
mov ymm8_a mulH_a;
mov ymm8_b mulH_b;
mov ymm8_c mulH_c;
mov ymm8_d mulH_d;
mov ymm8_e mulH_e;
mov ymm8_f mulH_f;
(* vpmulhw %ymm0,%ymm9,%ymm9                       #! PC = 0x555555559119 *)
smull mulH_0 red_0 ymm9_0 ymm0_0;
assert true && red_0 = mulLymm8_0;
assume red_0 = mulLymm8_0 && true;
smull mulH_1 red_1 ymm9_1 ymm0_1;
assert true && red_1 = mulLymm8_1;
assume red_1 = mulLymm8_1 && true;
smull mulH_2 red_2 ymm9_2 ymm0_2;
assert true && red_2 = mulLymm8_2;
assume red_2 = mulLymm8_2 && true;
smull mulH_3 red_3 ymm9_3 ymm0_3;
assert true && red_3 = mulLymm8_3;
assume red_3 = mulLymm8_3 && true;
smull mulH_4 red_4 ymm9_4 ymm0_4;
assert true && red_4 = mulLymm8_4;
assume red_4 = mulLymm8_4 && true;
smull mulH_5 red_5 ymm9_5 ymm0_5;
assert true && red_5 = mulLymm8_5;
assume red_5 = mulLymm8_5 && true;
smull mulH_6 red_6 ymm9_6 ymm0_6;
assert true && red_6 = mulLymm8_6;
assume red_6 = mulLymm8_6 && true;
smull mulH_7 red_7 ymm9_7 ymm0_7;
assert true && red_7 = mulLymm8_7;
assume red_7 = mulLymm8_7 && true;
smull mulH_8 red_8 ymm9_8 ymm0_8;
assert true && red_8 = mulLymm8_8;
assume red_8 = mulLymm8_8 && true;
smull mulH_9 red_9 ymm9_9 ymm0_9;
assert true && red_9 = mulLymm8_9;
assume red_9 = mulLymm8_9 && true;
smull mulH_a red_a ymm9_a ymm0_a;
assert true && red_a = mulLymm8_a;
assume red_a = mulLymm8_a && true;
smull mulH_b red_b ymm9_b ymm0_b;
assert true && red_b = mulLymm8_b;
assume red_b = mulLymm8_b && true;
smull mulH_c red_c ymm9_c ymm0_c;
assert true && red_c = mulLymm8_c;
assume red_c = mulLymm8_c && true;
smull mulH_d red_d ymm9_d ymm0_d;
assert true && red_d = mulLymm8_d;
assume red_d = mulLymm8_d && true;
smull mulH_e red_e ymm9_e ymm0_e;
assert true && red_e = mulLymm8_e;
assume red_e = mulLymm8_e && true;
smull mulH_f red_f ymm9_f ymm0_f;
assert true && red_f = mulLymm8_f;
assume red_f = mulLymm8_f && true;
mov ymm9_0 mulH_0;
mov ymm9_1 mulH_1;
mov ymm9_2 mulH_2;
mov ymm9_3 mulH_3;
mov ymm9_4 mulH_4;
mov ymm9_5 mulH_5;
mov ymm9_6 mulH_6;
mov ymm9_7 mulH_7;
mov ymm9_8 mulH_8;
mov ymm9_9 mulH_9;
mov ymm9_a mulH_a;
mov ymm9_b mulH_b;
mov ymm9_c mulH_c;
mov ymm9_d mulH_d;
mov ymm9_e mulH_e;
mov ymm9_f mulH_f;
(* vpsubw %ymm9,%ymm8,%ymm8                        #! PC = 0x55555555911d *)
sub ymm8_0 ymm8_0 ymm9_0;
sub ymm8_1 ymm8_1 ymm9_1;
sub ymm8_2 ymm8_2 ymm9_2;
sub ymm8_3 ymm8_3 ymm9_3;
sub ymm8_4 ymm8_4 ymm9_4;
sub ymm8_5 ymm8_5 ymm9_5;
sub ymm8_6 ymm8_6 ymm9_6;
sub ymm8_7 ymm8_7 ymm9_7;
sub ymm8_8 ymm8_8 ymm9_8;
sub ymm8_9 ymm8_9 ymm9_9;
sub ymm8_a ymm8_a ymm9_a;
sub ymm8_b ymm8_b ymm9_b;
sub ymm8_c ymm8_c ymm9_c;
sub ymm8_d ymm8_d ymm9_d;
sub ymm8_e ymm8_e ymm9_e;
sub ymm8_f ymm8_f ymm9_f;
(* vpbroadcastw 0x12e(%rdx),%ymm1                  #! EA = L0x55555556124e; Value = 0x2711fcc3398be2fb; PC = 0x555555559122 *)
mov ymm1_0 L0x55555556124e;
mov ymm1_1 L0x55555556124e;
mov ymm1_2 L0x55555556124e;
mov ymm1_3 L0x55555556124e;
mov ymm1_4 L0x55555556124e;
mov ymm1_5 L0x55555556124e;
mov ymm1_6 L0x55555556124e;
mov ymm1_7 L0x55555556124e;
mov ymm1_8 L0x55555556124e;
mov ymm1_9 L0x55555556124e;
mov ymm1_a L0x55555556124e;
mov ymm1_b L0x55555556124e;
mov ymm1_c L0x55555556124e;
mov ymm1_d L0x55555556124e;
mov ymm1_e L0x55555556124e;
mov ymm1_f L0x55555556124e;
(* vpbroadcastw 0x32e(%rdx),%ymm2                  #! EA = L0x55555556144e; Value = 0xf111fac3078b10fb; PC = 0x55555555912b *)
mov ymm2_0 L0x55555556144e;
mov ymm2_1 L0x55555556144e;
mov ymm2_2 L0x55555556144e;
mov ymm2_3 L0x55555556144e;
mov ymm2_4 L0x55555556144e;
mov ymm2_5 L0x55555556144e;
mov ymm2_6 L0x55555556144e;
mov ymm2_7 L0x55555556144e;
mov ymm2_8 L0x55555556144e;
mov ymm2_9 L0x55555556144e;
mov ymm2_a L0x55555556144e;
mov ymm2_b L0x55555556144e;
mov ymm2_c L0x55555556144e;
mov ymm2_d L0x55555556144e;
mov ymm2_e L0x55555556144e;
mov ymm2_f L0x55555556144e;
(* vpmullw %ymm1,%ymm11,%ymm9                      #! PC = 0x555555559134 *)
smull mulHymm11_0 mulL_0 ymm1_0 ymm11_0;
smull mulHymm11_1 mulL_1 ymm1_1 ymm11_1;
smull mulHymm11_2 mulL_2 ymm1_2 ymm11_2;
smull mulHymm11_3 mulL_3 ymm1_3 ymm11_3;
smull mulHymm11_4 mulL_4 ymm1_4 ymm11_4;
smull mulHymm11_5 mulL_5 ymm1_5 ymm11_5;
smull mulHymm11_6 mulL_6 ymm1_6 ymm11_6;
smull mulHymm11_7 mulL_7 ymm1_7 ymm11_7;
smull mulHymm11_8 mulL_8 ymm1_8 ymm11_8;
smull mulHymm11_9 mulL_9 ymm1_9 ymm11_9;
smull mulHymm11_a mulL_a ymm1_a ymm11_a;
smull mulHymm11_b mulL_b ymm1_b ymm11_b;
smull mulHymm11_c mulL_c ymm1_c ymm11_c;
smull mulHymm11_d mulL_d ymm1_d ymm11_d;
smull mulHymm11_e mulL_e ymm1_e ymm11_e;
smull mulHymm11_f mulL_f ymm1_f ymm11_f;
cast ymm9_0@sint16 mulL_0;
cast ymm9_1@sint16 mulL_1;
cast ymm9_2@sint16 mulL_2;
cast ymm9_3@sint16 mulL_3;
cast ymm9_4@sint16 mulL_4;
cast ymm9_5@sint16 mulL_5;
cast ymm9_6@sint16 mulL_6;
cast ymm9_7@sint16 mulL_7;
cast ymm9_8@sint16 mulL_8;
cast ymm9_9@sint16 mulL_9;
cast ymm9_a@sint16 mulL_a;
cast ymm9_b@sint16 mulL_b;
cast ymm9_c@sint16 mulL_c;
cast ymm9_d@sint16 mulL_d;
cast ymm9_e@sint16 mulL_e;
cast ymm9_f@sint16 mulL_f;
(* vpmulhw %ymm2,%ymm11,%ymm11                     #! PC = 0x555555559138 *)
smull mulH_0 mulLymm11_0 ymm11_0 ymm2_0;
smull mulH_1 mulLymm11_1 ymm11_1 ymm2_1;
smull mulH_2 mulLymm11_2 ymm11_2 ymm2_2;
smull mulH_3 mulLymm11_3 ymm11_3 ymm2_3;
smull mulH_4 mulLymm11_4 ymm11_4 ymm2_4;
smull mulH_5 mulLymm11_5 ymm11_5 ymm2_5;
smull mulH_6 mulLymm11_6 ymm11_6 ymm2_6;
smull mulH_7 mulLymm11_7 ymm11_7 ymm2_7;
smull mulH_8 mulLymm11_8 ymm11_8 ymm2_8;
smull mulH_9 mulLymm11_9 ymm11_9 ymm2_9;
smull mulH_a mulLymm11_a ymm11_a ymm2_a;
smull mulH_b mulLymm11_b ymm11_b ymm2_b;
smull mulH_c mulLymm11_c ymm11_c ymm2_c;
smull mulH_d mulLymm11_d ymm11_d ymm2_d;
smull mulH_e mulLymm11_e ymm11_e ymm2_e;
smull mulH_f mulLymm11_f ymm11_f ymm2_f;
mov ymm11_0 mulH_0;
mov ymm11_1 mulH_1;
mov ymm11_2 mulH_2;
mov ymm11_3 mulH_3;
mov ymm11_4 mulH_4;
mov ymm11_5 mulH_5;
mov ymm11_6 mulH_6;
mov ymm11_7 mulH_7;
mov ymm11_8 mulH_8;
mov ymm11_9 mulH_9;
mov ymm11_a mulH_a;
mov ymm11_b mulH_b;
mov ymm11_c mulH_c;
mov ymm11_d mulH_d;
mov ymm11_e mulH_e;
mov ymm11_f mulH_f;
(* vpmulhw %ymm0,%ymm9,%ymm9                       #! PC = 0x55555555913c *)
smull mulH_0 red_0 ymm9_0 ymm0_0;
assert true && red_0 = mulLymm11_0;
assume red_0 = mulLymm11_0 && true;
smull mulH_1 red_1 ymm9_1 ymm0_1;
assert true && red_1 = mulLymm11_1;
assume red_1 = mulLymm11_1 && true;
smull mulH_2 red_2 ymm9_2 ymm0_2;
assert true && red_2 = mulLymm11_2;
assume red_2 = mulLymm11_2 && true;
smull mulH_3 red_3 ymm9_3 ymm0_3;
assert true && red_3 = mulLymm11_3;
assume red_3 = mulLymm11_3 && true;
smull mulH_4 red_4 ymm9_4 ymm0_4;
assert true && red_4 = mulLymm11_4;
assume red_4 = mulLymm11_4 && true;
smull mulH_5 red_5 ymm9_5 ymm0_5;
assert true && red_5 = mulLymm11_5;
assume red_5 = mulLymm11_5 && true;
smull mulH_6 red_6 ymm9_6 ymm0_6;
assert true && red_6 = mulLymm11_6;
assume red_6 = mulLymm11_6 && true;
smull mulH_7 red_7 ymm9_7 ymm0_7;
assert true && red_7 = mulLymm11_7;
assume red_7 = mulLymm11_7 && true;
smull mulH_8 red_8 ymm9_8 ymm0_8;
assert true && red_8 = mulLymm11_8;
assume red_8 = mulLymm11_8 && true;
smull mulH_9 red_9 ymm9_9 ymm0_9;
assert true && red_9 = mulLymm11_9;
assume red_9 = mulLymm11_9 && true;
smull mulH_a red_a ymm9_a ymm0_a;
assert true && red_a = mulLymm11_a;
assume red_a = mulLymm11_a && true;
smull mulH_b red_b ymm9_b ymm0_b;
assert true && red_b = mulLymm11_b;
assume red_b = mulLymm11_b && true;
smull mulH_c red_c ymm9_c ymm0_c;
assert true && red_c = mulLymm11_c;
assume red_c = mulLymm11_c && true;
smull mulH_d red_d ymm9_d ymm0_d;
assert true && red_d = mulLymm11_d;
assume red_d = mulLymm11_d && true;
smull mulH_e red_e ymm9_e ymm0_e;
assert true && red_e = mulLymm11_e;
assume red_e = mulLymm11_e && true;
smull mulH_f red_f ymm9_f ymm0_f;
assert true && red_f = mulLymm11_f;
assume red_f = mulLymm11_f && true;
mov ymm9_0 mulH_0;
mov ymm9_1 mulH_1;
mov ymm9_2 mulH_2;
mov ymm9_3 mulH_3;
mov ymm9_4 mulH_4;
mov ymm9_5 mulH_5;
mov ymm9_6 mulH_6;
mov ymm9_7 mulH_7;
mov ymm9_8 mulH_8;
mov ymm9_9 mulH_9;
mov ymm9_a mulH_a;
mov ymm9_b mulH_b;
mov ymm9_c mulH_c;
mov ymm9_d mulH_d;
mov ymm9_e mulH_e;
mov ymm9_f mulH_f;
(* vpsubw %ymm9,%ymm11,%ymm11                      #! PC = 0x555555559140 *)
sub ymm11_0 ymm11_0 ymm9_0;
sub ymm11_1 ymm11_1 ymm9_1;
sub ymm11_2 ymm11_2 ymm9_2;
sub ymm11_3 ymm11_3 ymm9_3;
sub ymm11_4 ymm11_4 ymm9_4;
sub ymm11_5 ymm11_5 ymm9_5;
sub ymm11_6 ymm11_6 ymm9_6;
sub ymm11_7 ymm11_7 ymm9_7;
sub ymm11_8 ymm11_8 ymm9_8;
sub ymm11_9 ymm11_9 ymm9_9;
sub ymm11_a ymm11_a ymm9_a;
sub ymm11_b ymm11_b ymm9_b;
sub ymm11_c ymm11_c ymm9_c;
sub ymm11_d ymm11_d ymm9_d;
sub ymm11_e ymm11_e ymm9_e;
sub ymm11_f ymm11_f ymm9_f;
(* vpmullw %ymm14,%ymm7,%ymm9                      #! PC = 0x555555559145 *)
smull mulHymm7_0 mulL_0 ymm14_0 ymm7_0;
smull mulHymm7_1 mulL_1 ymm14_1 ymm7_1;
smull mulHymm7_2 mulL_2 ymm14_2 ymm7_2;
smull mulHymm7_3 mulL_3 ymm14_3 ymm7_3;
smull mulHymm7_4 mulL_4 ymm14_4 ymm7_4;
smull mulHymm7_5 mulL_5 ymm14_5 ymm7_5;
smull mulHymm7_6 mulL_6 ymm14_6 ymm7_6;
smull mulHymm7_7 mulL_7 ymm14_7 ymm7_7;
smull mulHymm7_8 mulL_8 ymm14_8 ymm7_8;
smull mulHymm7_9 mulL_9 ymm14_9 ymm7_9;
smull mulHymm7_a mulL_a ymm14_a ymm7_a;
smull mulHymm7_b mulL_b ymm14_b ymm7_b;
smull mulHymm7_c mulL_c ymm14_c ymm7_c;
smull mulHymm7_d mulL_d ymm14_d ymm7_d;
smull mulHymm7_e mulL_e ymm14_e ymm7_e;
smull mulHymm7_f mulL_f ymm14_f ymm7_f;
cast ymm9_0@sint16 mulL_0;
cast ymm9_1@sint16 mulL_1;
cast ymm9_2@sint16 mulL_2;
cast ymm9_3@sint16 mulL_3;
cast ymm9_4@sint16 mulL_4;
cast ymm9_5@sint16 mulL_5;
cast ymm9_6@sint16 mulL_6;
cast ymm9_7@sint16 mulL_7;
cast ymm9_8@sint16 mulL_8;
cast ymm9_9@sint16 mulL_9;
cast ymm9_a@sint16 mulL_a;
cast ymm9_b@sint16 mulL_b;
cast ymm9_c@sint16 mulL_c;
cast ymm9_d@sint16 mulL_d;
cast ymm9_e@sint16 mulL_e;
cast ymm9_f@sint16 mulL_f;
(* vpmulhw %ymm15,%ymm7,%ymm7                      #! PC = 0x55555555914a *)
smull mulH_0 mulLymm7_0 ymm7_0 ymm15_0;
smull mulH_1 mulLymm7_1 ymm7_1 ymm15_1;
smull mulH_2 mulLymm7_2 ymm7_2 ymm15_2;
smull mulH_3 mulLymm7_3 ymm7_3 ymm15_3;
smull mulH_4 mulLymm7_4 ymm7_4 ymm15_4;
smull mulH_5 mulLymm7_5 ymm7_5 ymm15_5;
smull mulH_6 mulLymm7_6 ymm7_6 ymm15_6;
smull mulH_7 mulLymm7_7 ymm7_7 ymm15_7;
smull mulH_8 mulLymm7_8 ymm7_8 ymm15_8;
smull mulH_9 mulLymm7_9 ymm7_9 ymm15_9;
smull mulH_a mulLymm7_a ymm7_a ymm15_a;
smull mulH_b mulLymm7_b ymm7_b ymm15_b;
smull mulH_c mulLymm7_c ymm7_c ymm15_c;
smull mulH_d mulLymm7_d ymm7_d ymm15_d;
smull mulH_e mulLymm7_e ymm7_e ymm15_e;
smull mulH_f mulLymm7_f ymm7_f ymm15_f;
mov ymm7_0 mulH_0;
mov ymm7_1 mulH_1;
mov ymm7_2 mulH_2;
mov ymm7_3 mulH_3;
mov ymm7_4 mulH_4;
mov ymm7_5 mulH_5;
mov ymm7_6 mulH_6;
mov ymm7_7 mulH_7;
mov ymm7_8 mulH_8;
mov ymm7_9 mulH_9;
mov ymm7_a mulH_a;
mov ymm7_b mulH_b;
mov ymm7_c mulH_c;
mov ymm7_d mulH_d;
mov ymm7_e mulH_e;
mov ymm7_f mulH_f;
(* vpmulhw %ymm0,%ymm9,%ymm9                       #! PC = 0x55555555914f *)
smull mulH_0 red_0 ymm9_0 ymm0_0;
assert true && red_0 = mulLymm7_0;
assume red_0 = mulLymm7_0 && true;
smull mulH_1 red_1 ymm9_1 ymm0_1;
assert true && red_1 = mulLymm7_1;
assume red_1 = mulLymm7_1 && true;
smull mulH_2 red_2 ymm9_2 ymm0_2;
assert true && red_2 = mulLymm7_2;
assume red_2 = mulLymm7_2 && true;
smull mulH_3 red_3 ymm9_3 ymm0_3;
assert true && red_3 = mulLymm7_3;
assume red_3 = mulLymm7_3 && true;
smull mulH_4 red_4 ymm9_4 ymm0_4;
assert true && red_4 = mulLymm7_4;
assume red_4 = mulLymm7_4 && true;
smull mulH_5 red_5 ymm9_5 ymm0_5;
assert true && red_5 = mulLymm7_5;
assume red_5 = mulLymm7_5 && true;
smull mulH_6 red_6 ymm9_6 ymm0_6;
assert true && red_6 = mulLymm7_6;
assume red_6 = mulLymm7_6 && true;
smull mulH_7 red_7 ymm9_7 ymm0_7;
assert true && red_7 = mulLymm7_7;
assume red_7 = mulLymm7_7 && true;
smull mulH_8 red_8 ymm9_8 ymm0_8;
assert true && red_8 = mulLymm7_8;
assume red_8 = mulLymm7_8 && true;
smull mulH_9 red_9 ymm9_9 ymm0_9;
assert true && red_9 = mulLymm7_9;
assume red_9 = mulLymm7_9 && true;
smull mulH_a red_a ymm9_a ymm0_a;
assert true && red_a = mulLymm7_a;
assume red_a = mulLymm7_a && true;
smull mulH_b red_b ymm9_b ymm0_b;
assert true && red_b = mulLymm7_b;
assume red_b = mulLymm7_b && true;
smull mulH_c red_c ymm9_c ymm0_c;
assert true && red_c = mulLymm7_c;
assume red_c = mulLymm7_c && true;
smull mulH_d red_d ymm9_d ymm0_d;
assert true && red_d = mulLymm7_d;
assume red_d = mulLymm7_d && true;
smull mulH_e red_e ymm9_e ymm0_e;
assert true && red_e = mulLymm7_e;
assume red_e = mulLymm7_e && true;
smull mulH_f red_f ymm9_f ymm0_f;
assert true && red_f = mulLymm7_f;
assume red_f = mulLymm7_f && true;
mov ymm9_0 mulH_0;
mov ymm9_1 mulH_1;
mov ymm9_2 mulH_2;
mov ymm9_3 mulH_3;
mov ymm9_4 mulH_4;
mov ymm9_5 mulH_5;
mov ymm9_6 mulH_6;
mov ymm9_7 mulH_7;
mov ymm9_8 mulH_8;
mov ymm9_9 mulH_9;
mov ymm9_a mulH_a;
mov ymm9_b mulH_b;
mov ymm9_c mulH_c;
mov ymm9_d mulH_d;
mov ymm9_e mulH_e;
mov ymm9_f mulH_f;
(* vpsubw %ymm9,%ymm7,%ymm7                        #! PC = 0x555555559153 *)
sub ymm7_0 ymm7_0 ymm9_0;
sub ymm7_1 ymm7_1 ymm9_1;
sub ymm7_2 ymm7_2 ymm9_2;
sub ymm7_3 ymm7_3 ymm9_3;
sub ymm7_4 ymm7_4 ymm9_4;
sub ymm7_5 ymm7_5 ymm9_5;
sub ymm7_6 ymm7_6 ymm9_6;
sub ymm7_7 ymm7_7 ymm9_7;
sub ymm7_8 ymm7_8 ymm9_8;
sub ymm7_9 ymm7_9 ymm9_9;
sub ymm7_a ymm7_a ymm9_a;
sub ymm7_b ymm7_b ymm9_b;
sub ymm7_c ymm7_c ymm9_c;
sub ymm7_d ymm7_d ymm9_d;
sub ymm7_e ymm7_e ymm9_e;
sub ymm7_f ymm7_f ymm9_f;
(* vpmullw %ymm14,%ymm5,%ymm9                      #! PC = 0x555555559158 *)
smull mulHymm5_0 mulL_0 ymm14_0 ymm5_0;
smull mulHymm5_1 mulL_1 ymm14_1 ymm5_1;
smull mulHymm5_2 mulL_2 ymm14_2 ymm5_2;
smull mulHymm5_3 mulL_3 ymm14_3 ymm5_3;
smull mulHymm5_4 mulL_4 ymm14_4 ymm5_4;
smull mulHymm5_5 mulL_5 ymm14_5 ymm5_5;
smull mulHymm5_6 mulL_6 ymm14_6 ymm5_6;
smull mulHymm5_7 mulL_7 ymm14_7 ymm5_7;
smull mulHymm5_8 mulL_8 ymm14_8 ymm5_8;
smull mulHymm5_9 mulL_9 ymm14_9 ymm5_9;
smull mulHymm5_a mulL_a ymm14_a ymm5_a;
smull mulHymm5_b mulL_b ymm14_b ymm5_b;
smull mulHymm5_c mulL_c ymm14_c ymm5_c;
smull mulHymm5_d mulL_d ymm14_d ymm5_d;
smull mulHymm5_e mulL_e ymm14_e ymm5_e;
smull mulHymm5_f mulL_f ymm14_f ymm5_f;
cast ymm9_0@sint16 mulL_0;
cast ymm9_1@sint16 mulL_1;
cast ymm9_2@sint16 mulL_2;
cast ymm9_3@sint16 mulL_3;
cast ymm9_4@sint16 mulL_4;
cast ymm9_5@sint16 mulL_5;
cast ymm9_6@sint16 mulL_6;
cast ymm9_7@sint16 mulL_7;
cast ymm9_8@sint16 mulL_8;
cast ymm9_9@sint16 mulL_9;
cast ymm9_a@sint16 mulL_a;
cast ymm9_b@sint16 mulL_b;
cast ymm9_c@sint16 mulL_c;
cast ymm9_d@sint16 mulL_d;
cast ymm9_e@sint16 mulL_e;
cast ymm9_f@sint16 mulL_f;
(* vpmulhw %ymm15,%ymm5,%ymm5                      #! PC = 0x55555555915d *)
smull mulH_0 mulLymm5_0 ymm5_0 ymm15_0;
smull mulH_1 mulLymm5_1 ymm5_1 ymm15_1;
smull mulH_2 mulLymm5_2 ymm5_2 ymm15_2;
smull mulH_3 mulLymm5_3 ymm5_3 ymm15_3;
smull mulH_4 mulLymm5_4 ymm5_4 ymm15_4;
smull mulH_5 mulLymm5_5 ymm5_5 ymm15_5;
smull mulH_6 mulLymm5_6 ymm5_6 ymm15_6;
smull mulH_7 mulLymm5_7 ymm5_7 ymm15_7;
smull mulH_8 mulLymm5_8 ymm5_8 ymm15_8;
smull mulH_9 mulLymm5_9 ymm5_9 ymm15_9;
smull mulH_a mulLymm5_a ymm5_a ymm15_a;
smull mulH_b mulLymm5_b ymm5_b ymm15_b;
smull mulH_c mulLymm5_c ymm5_c ymm15_c;
smull mulH_d mulLymm5_d ymm5_d ymm15_d;
smull mulH_e mulLymm5_e ymm5_e ymm15_e;
smull mulH_f mulLymm5_f ymm5_f ymm15_f;
mov ymm5_0 mulH_0;
mov ymm5_1 mulH_1;
mov ymm5_2 mulH_2;
mov ymm5_3 mulH_3;
mov ymm5_4 mulH_4;
mov ymm5_5 mulH_5;
mov ymm5_6 mulH_6;
mov ymm5_7 mulH_7;
mov ymm5_8 mulH_8;
mov ymm5_9 mulH_9;
mov ymm5_a mulH_a;
mov ymm5_b mulH_b;
mov ymm5_c mulH_c;
mov ymm5_d mulH_d;
mov ymm5_e mulH_e;
mov ymm5_f mulH_f;
(* vpmulhw %ymm0,%ymm9,%ymm9                       #! PC = 0x555555559162 *)
smull mulH_0 red_0 ymm9_0 ymm0_0;
assert true && red_0 = mulLymm5_0;
assume red_0 = mulLymm5_0 && true;
smull mulH_1 red_1 ymm9_1 ymm0_1;
assert true && red_1 = mulLymm5_1;
assume red_1 = mulLymm5_1 && true;
smull mulH_2 red_2 ymm9_2 ymm0_2;
assert true && red_2 = mulLymm5_2;
assume red_2 = mulLymm5_2 && true;
smull mulH_3 red_3 ymm9_3 ymm0_3;
assert true && red_3 = mulLymm5_3;
assume red_3 = mulLymm5_3 && true;
smull mulH_4 red_4 ymm9_4 ymm0_4;
assert true && red_4 = mulLymm5_4;
assume red_4 = mulLymm5_4 && true;
smull mulH_5 red_5 ymm9_5 ymm0_5;
assert true && red_5 = mulLymm5_5;
assume red_5 = mulLymm5_5 && true;
smull mulH_6 red_6 ymm9_6 ymm0_6;
assert true && red_6 = mulLymm5_6;
assume red_6 = mulLymm5_6 && true;
smull mulH_7 red_7 ymm9_7 ymm0_7;
assert true && red_7 = mulLymm5_7;
assume red_7 = mulLymm5_7 && true;
smull mulH_8 red_8 ymm9_8 ymm0_8;
assert true && red_8 = mulLymm5_8;
assume red_8 = mulLymm5_8 && true;
smull mulH_9 red_9 ymm9_9 ymm0_9;
assert true && red_9 = mulLymm5_9;
assume red_9 = mulLymm5_9 && true;
smull mulH_a red_a ymm9_a ymm0_a;
assert true && red_a = mulLymm5_a;
assume red_a = mulLymm5_a && true;
smull mulH_b red_b ymm9_b ymm0_b;
assert true && red_b = mulLymm5_b;
assume red_b = mulLymm5_b && true;
smull mulH_c red_c ymm9_c ymm0_c;
assert true && red_c = mulLymm5_c;
assume red_c = mulLymm5_c && true;
smull mulH_d red_d ymm9_d ymm0_d;
assert true && red_d = mulLymm5_d;
assume red_d = mulLymm5_d && true;
smull mulH_e red_e ymm9_e ymm0_e;
assert true && red_e = mulLymm5_e;
assume red_e = mulLymm5_e && true;
smull mulH_f red_f ymm9_f ymm0_f;
assert true && red_f = mulLymm5_f;
assume red_f = mulLymm5_f && true;
mov ymm9_0 mulH_0;
mov ymm9_1 mulH_1;
mov ymm9_2 mulH_2;
mov ymm9_3 mulH_3;
mov ymm9_4 mulH_4;
mov ymm9_5 mulH_5;
mov ymm9_6 mulH_6;
mov ymm9_7 mulH_7;
mov ymm9_8 mulH_8;
mov ymm9_9 mulH_9;
mov ymm9_a mulH_a;
mov ymm9_b mulH_b;
mov ymm9_c mulH_c;
mov ymm9_d mulH_d;
mov ymm9_e mulH_e;
mov ymm9_f mulH_f;
(* vpsubw %ymm9,%ymm5,%ymm5                        #! PC = 0x555555559166 *)
sub ymm5_0 ymm5_0 ymm9_0;
sub ymm5_1 ymm5_1 ymm9_1;
sub ymm5_2 ymm5_2 ymm9_2;
sub ymm5_3 ymm5_3 ymm9_3;
sub ymm5_4 ymm5_4 ymm9_4;
sub ymm5_5 ymm5_5 ymm9_5;
sub ymm5_6 ymm5_6 ymm9_6;
sub ymm5_7 ymm5_7 ymm9_7;
sub ymm5_8 ymm5_8 ymm9_8;
sub ymm5_9 ymm5_9 ymm9_9;
sub ymm5_a ymm5_a ymm9_a;
sub ymm5_b ymm5_b ymm9_b;
sub ymm5_c ymm5_c ymm9_c;
sub ymm5_d ymm5_d ymm9_d;
sub ymm5_e ymm5_e ymm9_e;
sub ymm5_f ymm5_f ymm9_f;
(* vpmullw %ymm14,%ymm4,%ymm9                      #! PC = 0x55555555916b *)
smull mulHymm4_0 mulL_0 ymm14_0 ymm4_0;
smull mulHymm4_1 mulL_1 ymm14_1 ymm4_1;
smull mulHymm4_2 mulL_2 ymm14_2 ymm4_2;
smull mulHymm4_3 mulL_3 ymm14_3 ymm4_3;
smull mulHymm4_4 mulL_4 ymm14_4 ymm4_4;
smull mulHymm4_5 mulL_5 ymm14_5 ymm4_5;
smull mulHymm4_6 mulL_6 ymm14_6 ymm4_6;
smull mulHymm4_7 mulL_7 ymm14_7 ymm4_7;
smull mulHymm4_8 mulL_8 ymm14_8 ymm4_8;
smull mulHymm4_9 mulL_9 ymm14_9 ymm4_9;
smull mulHymm4_a mulL_a ymm14_a ymm4_a;
smull mulHymm4_b mulL_b ymm14_b ymm4_b;
smull mulHymm4_c mulL_c ymm14_c ymm4_c;
smull mulHymm4_d mulL_d ymm14_d ymm4_d;
smull mulHymm4_e mulL_e ymm14_e ymm4_e;
smull mulHymm4_f mulL_f ymm14_f ymm4_f;
cast ymm9_0@sint16 mulL_0;
cast ymm9_1@sint16 mulL_1;
cast ymm9_2@sint16 mulL_2;
cast ymm9_3@sint16 mulL_3;
cast ymm9_4@sint16 mulL_4;
cast ymm9_5@sint16 mulL_5;
cast ymm9_6@sint16 mulL_6;
cast ymm9_7@sint16 mulL_7;
cast ymm9_8@sint16 mulL_8;
cast ymm9_9@sint16 mulL_9;
cast ymm9_a@sint16 mulL_a;
cast ymm9_b@sint16 mulL_b;
cast ymm9_c@sint16 mulL_c;
cast ymm9_d@sint16 mulL_d;
cast ymm9_e@sint16 mulL_e;
cast ymm9_f@sint16 mulL_f;
(* vpmulhw %ymm15,%ymm4,%ymm4                      #! PC = 0x555555559170 *)
smull mulH_0 mulLymm4_0 ymm4_0 ymm15_0;
smull mulH_1 mulLymm4_1 ymm4_1 ymm15_1;
smull mulH_2 mulLymm4_2 ymm4_2 ymm15_2;
smull mulH_3 mulLymm4_3 ymm4_3 ymm15_3;
smull mulH_4 mulLymm4_4 ymm4_4 ymm15_4;
smull mulH_5 mulLymm4_5 ymm4_5 ymm15_5;
smull mulH_6 mulLymm4_6 ymm4_6 ymm15_6;
smull mulH_7 mulLymm4_7 ymm4_7 ymm15_7;
smull mulH_8 mulLymm4_8 ymm4_8 ymm15_8;
smull mulH_9 mulLymm4_9 ymm4_9 ymm15_9;
smull mulH_a mulLymm4_a ymm4_a ymm15_a;
smull mulH_b mulLymm4_b ymm4_b ymm15_b;
smull mulH_c mulLymm4_c ymm4_c ymm15_c;
smull mulH_d mulLymm4_d ymm4_d ymm15_d;
smull mulH_e mulLymm4_e ymm4_e ymm15_e;
smull mulH_f mulLymm4_f ymm4_f ymm15_f;
mov ymm4_0 mulH_0;
mov ymm4_1 mulH_1;
mov ymm4_2 mulH_2;
mov ymm4_3 mulH_3;
mov ymm4_4 mulH_4;
mov ymm4_5 mulH_5;
mov ymm4_6 mulH_6;
mov ymm4_7 mulH_7;
mov ymm4_8 mulH_8;
mov ymm4_9 mulH_9;
mov ymm4_a mulH_a;
mov ymm4_b mulH_b;
mov ymm4_c mulH_c;
mov ymm4_d mulH_d;
mov ymm4_e mulH_e;
mov ymm4_f mulH_f;
(* vpmulhw %ymm0,%ymm9,%ymm9                       #! PC = 0x555555559175 *)
smull mulH_0 red_0 ymm9_0 ymm0_0;
assert true && red_0 = mulLymm4_0;
assume red_0 = mulLymm4_0 && true;
smull mulH_1 red_1 ymm9_1 ymm0_1;
assert true && red_1 = mulLymm4_1;
assume red_1 = mulLymm4_1 && true;
smull mulH_2 red_2 ymm9_2 ymm0_2;
assert true && red_2 = mulLymm4_2;
assume red_2 = mulLymm4_2 && true;
smull mulH_3 red_3 ymm9_3 ymm0_3;
assert true && red_3 = mulLymm4_3;
assume red_3 = mulLymm4_3 && true;
smull mulH_4 red_4 ymm9_4 ymm0_4;
assert true && red_4 = mulLymm4_4;
assume red_4 = mulLymm4_4 && true;
smull mulH_5 red_5 ymm9_5 ymm0_5;
assert true && red_5 = mulLymm4_5;
assume red_5 = mulLymm4_5 && true;
smull mulH_6 red_6 ymm9_6 ymm0_6;
assert true && red_6 = mulLymm4_6;
assume red_6 = mulLymm4_6 && true;
smull mulH_7 red_7 ymm9_7 ymm0_7;
assert true && red_7 = mulLymm4_7;
assume red_7 = mulLymm4_7 && true;
smull mulH_8 red_8 ymm9_8 ymm0_8;
assert true && red_8 = mulLymm4_8;
assume red_8 = mulLymm4_8 && true;
smull mulH_9 red_9 ymm9_9 ymm0_9;
assert true && red_9 = mulLymm4_9;
assume red_9 = mulLymm4_9 && true;
smull mulH_a red_a ymm9_a ymm0_a;
assert true && red_a = mulLymm4_a;
assume red_a = mulLymm4_a && true;
smull mulH_b red_b ymm9_b ymm0_b;
assert true && red_b = mulLymm4_b;
assume red_b = mulLymm4_b && true;
smull mulH_c red_c ymm9_c ymm0_c;
assert true && red_c = mulLymm4_c;
assume red_c = mulLymm4_c && true;
smull mulH_d red_d ymm9_d ymm0_d;
assert true && red_d = mulLymm4_d;
assume red_d = mulLymm4_d && true;
smull mulH_e red_e ymm9_e ymm0_e;
assert true && red_e = mulLymm4_e;
assume red_e = mulLymm4_e && true;
smull mulH_f red_f ymm9_f ymm0_f;
assert true && red_f = mulLymm4_f;
assume red_f = mulLymm4_f && true;
mov ymm9_0 mulH_0;
mov ymm9_1 mulH_1;
mov ymm9_2 mulH_2;
mov ymm9_3 mulH_3;
mov ymm9_4 mulH_4;
mov ymm9_5 mulH_5;
mov ymm9_6 mulH_6;
mov ymm9_7 mulH_7;
mov ymm9_8 mulH_8;
mov ymm9_9 mulH_9;
mov ymm9_a mulH_a;
mov ymm9_b mulH_b;
mov ymm9_c mulH_c;
mov ymm9_d mulH_d;
mov ymm9_e mulH_e;
mov ymm9_f mulH_f;
(* vpsubw %ymm9,%ymm4,%ymm4                        #! PC = 0x555555559179 *)
sub ymm4_0 ymm4_0 ymm9_0;
sub ymm4_1 ymm4_1 ymm9_1;
sub ymm4_2 ymm4_2 ymm9_2;
sub ymm4_3 ymm4_3 ymm9_3;
sub ymm4_4 ymm4_4 ymm9_4;
sub ymm4_5 ymm4_5 ymm9_5;
sub ymm4_6 ymm4_6 ymm9_6;
sub ymm4_7 ymm4_7 ymm9_7;
sub ymm4_8 ymm4_8 ymm9_8;
sub ymm4_9 ymm4_9 ymm9_9;
sub ymm4_a ymm4_a ymm9_a;
sub ymm4_b ymm4_b ymm9_b;
sub ymm4_c ymm4_c ymm9_c;
sub ymm4_d ymm4_d ymm9_d;
sub ymm4_e ymm4_e ymm9_e;
sub ymm4_f ymm4_f ymm9_f;
(* vpmullw %ymm14,%ymm10,%ymm9                     #! PC = 0x55555555917e *)
smull mulHymm10_0 mulL_0 ymm14_0 ymm10_0;
smull mulHymm10_1 mulL_1 ymm14_1 ymm10_1;
smull mulHymm10_2 mulL_2 ymm14_2 ymm10_2;
smull mulHymm10_3 mulL_3 ymm14_3 ymm10_3;
smull mulHymm10_4 mulL_4 ymm14_4 ymm10_4;
smull mulHymm10_5 mulL_5 ymm14_5 ymm10_5;
smull mulHymm10_6 mulL_6 ymm14_6 ymm10_6;
smull mulHymm10_7 mulL_7 ymm14_7 ymm10_7;
smull mulHymm10_8 mulL_8 ymm14_8 ymm10_8;
smull mulHymm10_9 mulL_9 ymm14_9 ymm10_9;
smull mulHymm10_a mulL_a ymm14_a ymm10_a;
smull mulHymm10_b mulL_b ymm14_b ymm10_b;
smull mulHymm10_c mulL_c ymm14_c ymm10_c;
smull mulHymm10_d mulL_d ymm14_d ymm10_d;
smull mulHymm10_e mulL_e ymm14_e ymm10_e;
smull mulHymm10_f mulL_f ymm14_f ymm10_f;
cast ymm9_0@sint16 mulL_0;
cast ymm9_1@sint16 mulL_1;
cast ymm9_2@sint16 mulL_2;
cast ymm9_3@sint16 mulL_3;
cast ymm9_4@sint16 mulL_4;
cast ymm9_5@sint16 mulL_5;
cast ymm9_6@sint16 mulL_6;
cast ymm9_7@sint16 mulL_7;
cast ymm9_8@sint16 mulL_8;
cast ymm9_9@sint16 mulL_9;
cast ymm9_a@sint16 mulL_a;
cast ymm9_b@sint16 mulL_b;
cast ymm9_c@sint16 mulL_c;
cast ymm9_d@sint16 mulL_d;
cast ymm9_e@sint16 mulL_e;
cast ymm9_f@sint16 mulL_f;
(* vpmulhw %ymm15,%ymm10,%ymm10                    #! PC = 0x555555559183 *)
smull mulH_0 mulLymm10_0 ymm10_0 ymm15_0;
smull mulH_1 mulLymm10_1 ymm10_1 ymm15_1;
smull mulH_2 mulLymm10_2 ymm10_2 ymm15_2;
smull mulH_3 mulLymm10_3 ymm10_3 ymm15_3;
smull mulH_4 mulLymm10_4 ymm10_4 ymm15_4;
smull mulH_5 mulLymm10_5 ymm10_5 ymm15_5;
smull mulH_6 mulLymm10_6 ymm10_6 ymm15_6;
smull mulH_7 mulLymm10_7 ymm10_7 ymm15_7;
smull mulH_8 mulLymm10_8 ymm10_8 ymm15_8;
smull mulH_9 mulLymm10_9 ymm10_9 ymm15_9;
smull mulH_a mulLymm10_a ymm10_a ymm15_a;
smull mulH_b mulLymm10_b ymm10_b ymm15_b;
smull mulH_c mulLymm10_c ymm10_c ymm15_c;
smull mulH_d mulLymm10_d ymm10_d ymm15_d;
smull mulH_e mulLymm10_e ymm10_e ymm15_e;
smull mulH_f mulLymm10_f ymm10_f ymm15_f;
mov ymm10_0 mulH_0;
mov ymm10_1 mulH_1;
mov ymm10_2 mulH_2;
mov ymm10_3 mulH_3;
mov ymm10_4 mulH_4;
mov ymm10_5 mulH_5;
mov ymm10_6 mulH_6;
mov ymm10_7 mulH_7;
mov ymm10_8 mulH_8;
mov ymm10_9 mulH_9;
mov ymm10_a mulH_a;
mov ymm10_b mulH_b;
mov ymm10_c mulH_c;
mov ymm10_d mulH_d;
mov ymm10_e mulH_e;
mov ymm10_f mulH_f;
(* vpmulhw %ymm0,%ymm9,%ymm9                       #! PC = 0x555555559188 *)
smull mulH_0 red_0 ymm9_0 ymm0_0;
assert true && red_0 = mulLymm10_0;
assume red_0 = mulLymm10_0 && true;
smull mulH_1 red_1 ymm9_1 ymm0_1;
assert true && red_1 = mulLymm10_1;
assume red_1 = mulLymm10_1 && true;
smull mulH_2 red_2 ymm9_2 ymm0_2;
assert true && red_2 = mulLymm10_2;
assume red_2 = mulLymm10_2 && true;
smull mulH_3 red_3 ymm9_3 ymm0_3;
assert true && red_3 = mulLymm10_3;
assume red_3 = mulLymm10_3 && true;
smull mulH_4 red_4 ymm9_4 ymm0_4;
assert true && red_4 = mulLymm10_4;
assume red_4 = mulLymm10_4 && true;
smull mulH_5 red_5 ymm9_5 ymm0_5;
assert true && red_5 = mulLymm10_5;
assume red_5 = mulLymm10_5 && true;
smull mulH_6 red_6 ymm9_6 ymm0_6;
assert true && red_6 = mulLymm10_6;
assume red_6 = mulLymm10_6 && true;
smull mulH_7 red_7 ymm9_7 ymm0_7;
assert true && red_7 = mulLymm10_7;
assume red_7 = mulLymm10_7 && true;
smull mulH_8 red_8 ymm9_8 ymm0_8;
assert true && red_8 = mulLymm10_8;
assume red_8 = mulLymm10_8 && true;
smull mulH_9 red_9 ymm9_9 ymm0_9;
assert true && red_9 = mulLymm10_9;
assume red_9 = mulLymm10_9 && true;
smull mulH_a red_a ymm9_a ymm0_a;
assert true && red_a = mulLymm10_a;
assume red_a = mulLymm10_a && true;
smull mulH_b red_b ymm9_b ymm0_b;
assert true && red_b = mulLymm10_b;
assume red_b = mulLymm10_b && true;
smull mulH_c red_c ymm9_c ymm0_c;
assert true && red_c = mulLymm10_c;
assume red_c = mulLymm10_c && true;
smull mulH_d red_d ymm9_d ymm0_d;
assert true && red_d = mulLymm10_d;
assume red_d = mulLymm10_d && true;
smull mulH_e red_e ymm9_e ymm0_e;
assert true && red_e = mulLymm10_e;
assume red_e = mulLymm10_e && true;
smull mulH_f red_f ymm9_f ymm0_f;
assert true && red_f = mulLymm10_f;
assume red_f = mulLymm10_f && true;
mov ymm9_0 mulH_0;
mov ymm9_1 mulH_1;
mov ymm9_2 mulH_2;
mov ymm9_3 mulH_3;
mov ymm9_4 mulH_4;
mov ymm9_5 mulH_5;
mov ymm9_6 mulH_6;
mov ymm9_7 mulH_7;
mov ymm9_8 mulH_8;
mov ymm9_9 mulH_9;
mov ymm9_a mulH_a;
mov ymm9_b mulH_b;
mov ymm9_c mulH_c;
mov ymm9_d mulH_d;
mov ymm9_e mulH_e;
mov ymm9_f mulH_f;
(* vpsubw %ymm9,%ymm10,%ymm10                      #! PC = 0x55555555918c *)
sub ymm10_0 ymm10_0 ymm9_0;
sub ymm10_1 ymm10_1 ymm9_1;
sub ymm10_2 ymm10_2 ymm9_2;
sub ymm10_3 ymm10_3 ymm9_3;
sub ymm10_4 ymm10_4 ymm9_4;
sub ymm10_5 ymm10_5 ymm9_5;
sub ymm10_6 ymm10_6 ymm9_6;
sub ymm10_7 ymm10_7 ymm9_7;
sub ymm10_8 ymm10_8 ymm9_8;
sub ymm10_9 ymm10_9 ymm9_9;
sub ymm10_a ymm10_a ymm9_a;
sub ymm10_b ymm10_b ymm9_b;
sub ymm10_c ymm10_c ymm9_c;
sub ymm10_d ymm10_d ymm9_d;
sub ymm10_e ymm10_e ymm9_e;
sub ymm10_f ymm10_f ymm9_f;
(* vpaddw %ymm3,%ymm7,%ymm9                        #! PC = 0x555555559191 *)
add ymm9_0 ymm7_0 ymm3_0;
add ymm9_1 ymm7_1 ymm3_1;
add ymm9_2 ymm7_2 ymm3_2;
add ymm9_3 ymm7_3 ymm3_3;
add ymm9_4 ymm7_4 ymm3_4;
add ymm9_5 ymm7_5 ymm3_5;
add ymm9_6 ymm7_6 ymm3_6;
add ymm9_7 ymm7_7 ymm3_7;
add ymm9_8 ymm7_8 ymm3_8;
add ymm9_9 ymm7_9 ymm3_9;
add ymm9_a ymm7_a ymm3_a;
add ymm9_b ymm7_b ymm3_b;
add ymm9_c ymm7_c ymm3_c;
add ymm9_d ymm7_d ymm3_d;
add ymm9_e ymm7_e ymm3_e;
add ymm9_f ymm7_f ymm3_f;
(* vpsubw %ymm3,%ymm7,%ymm3                        #! PC = 0x555555559195 *)
sub ymm3_0 ymm7_0 ymm3_0;
sub ymm3_1 ymm7_1 ymm3_1;
sub ymm3_2 ymm7_2 ymm3_2;
sub ymm3_3 ymm7_3 ymm3_3;
sub ymm3_4 ymm7_4 ymm3_4;
sub ymm3_5 ymm7_5 ymm3_5;
sub ymm3_6 ymm7_6 ymm3_6;
sub ymm3_7 ymm7_7 ymm3_7;
sub ymm3_8 ymm7_8 ymm3_8;
sub ymm3_9 ymm7_9 ymm3_9;
sub ymm3_a ymm7_a ymm3_a;
sub ymm3_b ymm7_b ymm3_b;
sub ymm3_c ymm7_c ymm3_c;
sub ymm3_d ymm7_d ymm3_d;
sub ymm3_e ymm7_e ymm3_e;
sub ymm3_f ymm7_f ymm3_f;
(* vpaddw %ymm6,%ymm5,%ymm7                        #! PC = 0x555555559199 *)
add ymm7_0 ymm5_0 ymm6_0;
add ymm7_1 ymm5_1 ymm6_1;
add ymm7_2 ymm5_2 ymm6_2;
add ymm7_3 ymm5_3 ymm6_3;
add ymm7_4 ymm5_4 ymm6_4;
add ymm7_5 ymm5_5 ymm6_5;
add ymm7_6 ymm5_6 ymm6_6;
add ymm7_7 ymm5_7 ymm6_7;
add ymm7_8 ymm5_8 ymm6_8;
add ymm7_9 ymm5_9 ymm6_9;
add ymm7_a ymm5_a ymm6_a;
add ymm7_b ymm5_b ymm6_b;
add ymm7_c ymm5_c ymm6_c;
add ymm7_d ymm5_d ymm6_d;
add ymm7_e ymm5_e ymm6_e;
add ymm7_f ymm5_f ymm6_f;
(* vpsubw %ymm6,%ymm5,%ymm6                        #! PC = 0x55555555919d *)
sub ymm6_0 ymm5_0 ymm6_0;
sub ymm6_1 ymm5_1 ymm6_1;
sub ymm6_2 ymm5_2 ymm6_2;
sub ymm6_3 ymm5_3 ymm6_3;
sub ymm6_4 ymm5_4 ymm6_4;
sub ymm6_5 ymm5_5 ymm6_5;
sub ymm6_6 ymm5_6 ymm6_6;
sub ymm6_7 ymm5_7 ymm6_7;
sub ymm6_8 ymm5_8 ymm6_8;
sub ymm6_9 ymm5_9 ymm6_9;
sub ymm6_a ymm5_a ymm6_a;
sub ymm6_b ymm5_b ymm6_b;
sub ymm6_c ymm5_c ymm6_c;
sub ymm6_d ymm5_d ymm6_d;
sub ymm6_e ymm5_e ymm6_e;
sub ymm6_f ymm5_f ymm6_f;
(* vpaddw %ymm8,%ymm4,%ymm5                        #! PC = 0x5555555591a1 *)
add ymm5_0 ymm4_0 ymm8_0;
add ymm5_1 ymm4_1 ymm8_1;
add ymm5_2 ymm4_2 ymm8_2;
add ymm5_3 ymm4_3 ymm8_3;
add ymm5_4 ymm4_4 ymm8_4;
add ymm5_5 ymm4_5 ymm8_5;
add ymm5_6 ymm4_6 ymm8_6;
add ymm5_7 ymm4_7 ymm8_7;
add ymm5_8 ymm4_8 ymm8_8;
add ymm5_9 ymm4_9 ymm8_9;
add ymm5_a ymm4_a ymm8_a;
add ymm5_b ymm4_b ymm8_b;
add ymm5_c ymm4_c ymm8_c;
add ymm5_d ymm4_d ymm8_d;
add ymm5_e ymm4_e ymm8_e;
add ymm5_f ymm4_f ymm8_f;
(* vpsubw %ymm8,%ymm4,%ymm8                        #! PC = 0x5555555591a6 *)
sub ymm8_0 ymm4_0 ymm8_0;
sub ymm8_1 ymm4_1 ymm8_1;
sub ymm8_2 ymm4_2 ymm8_2;
sub ymm8_3 ymm4_3 ymm8_3;
sub ymm8_4 ymm4_4 ymm8_4;
sub ymm8_5 ymm4_5 ymm8_5;
sub ymm8_6 ymm4_6 ymm8_6;
sub ymm8_7 ymm4_7 ymm8_7;
sub ymm8_8 ymm4_8 ymm8_8;
sub ymm8_9 ymm4_9 ymm8_9;
sub ymm8_a ymm4_a ymm8_a;
sub ymm8_b ymm4_b ymm8_b;
sub ymm8_c ymm4_c ymm8_c;
sub ymm8_d ymm4_d ymm8_d;
sub ymm8_e ymm4_e ymm8_e;
sub ymm8_f ymm4_f ymm8_f;
(* vpaddw %ymm11,%ymm10,%ymm4                      #! PC = 0x5555555591ab *)
add ymm4_0 ymm10_0 ymm11_0;
add ymm4_1 ymm10_1 ymm11_1;
add ymm4_2 ymm10_2 ymm11_2;
add ymm4_3 ymm10_3 ymm11_3;
add ymm4_4 ymm10_4 ymm11_4;
add ymm4_5 ymm10_5 ymm11_5;
add ymm4_6 ymm10_6 ymm11_6;
add ymm4_7 ymm10_7 ymm11_7;
add ymm4_8 ymm10_8 ymm11_8;
add ymm4_9 ymm10_9 ymm11_9;
add ymm4_a ymm10_a ymm11_a;
add ymm4_b ymm10_b ymm11_b;
add ymm4_c ymm10_c ymm11_c;
add ymm4_d ymm10_d ymm11_d;
add ymm4_e ymm10_e ymm11_e;
add ymm4_f ymm10_f ymm11_f;
(* vpsubw %ymm11,%ymm10,%ymm11                     #! PC = 0x5555555591b0 *)
sub ymm11_0 ymm10_0 ymm11_0;
sub ymm11_1 ymm10_1 ymm11_1;
sub ymm11_2 ymm10_2 ymm11_2;
sub ymm11_3 ymm10_3 ymm11_3;
sub ymm11_4 ymm10_4 ymm11_4;
sub ymm11_5 ymm10_5 ymm11_5;
sub ymm11_6 ymm10_6 ymm11_6;
sub ymm11_7 ymm10_7 ymm11_7;
sub ymm11_8 ymm10_8 ymm11_8;
sub ymm11_9 ymm10_9 ymm11_9;
sub ymm11_a ymm10_a ymm11_a;
sub ymm11_b ymm10_b ymm11_b;
sub ymm11_c ymm10_c ymm11_c;
sub ymm11_d ymm10_d ymm11_d;
sub ymm11_e ymm10_e ymm11_e;
sub ymm11_f ymm10_f ymm11_f;


(**************** LEVELS 3-5, 5 *****************)


(**************** CUT 155, 17 *****************)

rcut 
  and [
(-11986)@16<=s ymm9_0,ymm9_0<=s 11986@16,(-11986)@16<=s ymm9_1,ymm9_1<=s 11986@16,
(-11986)@16<=s ymm9_2,ymm9_2<=s 11986@16,(-11986)@16<=s ymm9_3,ymm9_3<=s 11986@16,
(-11986)@16<=s ymm9_4,ymm9_4<=s 11986@16,(-11986)@16<=s ymm9_5,ymm9_5<=s 11986@16,
(-11986)@16<=s ymm9_6,ymm9_6<=s 11986@16,(-11986)@16<=s ymm9_7,ymm9_7<=s 11986@16,
(-11986)@16<=s ymm9_8,ymm9_8<=s 11986@16,(-11986)@16<=s ymm9_9,ymm9_9<=s 11986@16,
(-11986)@16<=s ymm9_a,ymm9_a<=s 11986@16,(-11986)@16<=s ymm9_b,ymm9_b<=s 11986@16,
(-11986)@16<=s ymm9_c,ymm9_c<=s 11986@16,(-11986)@16<=s ymm9_d,ymm9_d<=s 11986@16,
(-11986)@16<=s ymm9_e,ymm9_e<=s 11986@16,(-11986)@16<=s ymm9_f,ymm9_f<=s 11986@16,
(-11986)@16<=s ymm3_0,ymm3_0<=s 11986@16,(-11986)@16<=s ymm3_1,ymm3_1<=s 11986@16,
(-11986)@16<=s ymm3_2,ymm3_2<=s 11986@16,(-11986)@16<=s ymm3_3,ymm3_3<=s 11986@16,
(-11986)@16<=s ymm3_4,ymm3_4<=s 11986@16,(-11986)@16<=s ymm3_5,ymm3_5<=s 11986@16,
(-11986)@16<=s ymm3_6,ymm3_6<=s 11986@16,(-11986)@16<=s ymm3_7,ymm3_7<=s 11986@16,
(-11986)@16<=s ymm3_8,ymm3_8<=s 11986@16,(-11986)@16<=s ymm3_9,ymm3_9<=s 11986@16,
(-11986)@16<=s ymm3_a,ymm3_a<=s 11986@16,(-11986)@16<=s ymm3_b,ymm3_b<=s 11986@16,
(-11986)@16<=s ymm3_c,ymm3_c<=s 11986@16,(-11986)@16<=s ymm3_d,ymm3_d<=s 11986@16,
(-11986)@16<=s ymm3_e,ymm3_e<=s 11986@16,(-11986)@16<=s ymm3_f,ymm3_f<=s 11986@16,
(-11354)@16<=s ymm7_0,ymm7_0<=s 11354@16,(-11354)@16<=s ymm7_1,ymm7_1<=s 11354@16,
(-11354)@16<=s ymm7_2,ymm7_2<=s 11354@16,(-11354)@16<=s ymm7_3,ymm7_3<=s 11354@16,
(-11354)@16<=s ymm7_4,ymm7_4<=s 11354@16,(-11354)@16<=s ymm7_5,ymm7_5<=s 11354@16,
(-11354)@16<=s ymm7_6,ymm7_6<=s 11354@16,(-11354)@16<=s ymm7_7,ymm7_7<=s 11354@16,
(-11354)@16<=s ymm7_8,ymm7_8<=s 11354@16,(-11354)@16<=s ymm7_9,ymm7_9<=s 11354@16,
(-11354)@16<=s ymm7_a,ymm7_a<=s 11354@16,(-11354)@16<=s ymm7_b,ymm7_b<=s 11354@16,
(-11354)@16<=s ymm7_c,ymm7_c<=s 11354@16,(-11354)@16<=s ymm7_d,ymm7_d<=s 11354@16,
(-11354)@16<=s ymm7_e,ymm7_e<=s 11354@16,(-11354)@16<=s ymm7_f,ymm7_f<=s 11354@16,
(-11354)@16<=s ymm6_0,ymm6_0<=s 11354@16,(-11354)@16<=s ymm6_1,ymm6_1<=s 11354@16,
(-11354)@16<=s ymm6_2,ymm6_2<=s 11354@16,(-11354)@16<=s ymm6_3,ymm6_3<=s 11354@16,
(-11354)@16<=s ymm6_4,ymm6_4<=s 11354@16,(-11354)@16<=s ymm6_5,ymm6_5<=s 11354@16,
(-11354)@16<=s ymm6_6,ymm6_6<=s 11354@16,(-11354)@16<=s ymm6_7,ymm6_7<=s 11354@16,
(-11354)@16<=s ymm6_8,ymm6_8<=s 11354@16,(-11354)@16<=s ymm6_9,ymm6_9<=s 11354@16,
(-11354)@16<=s ymm6_a,ymm6_a<=s 11354@16,(-11354)@16<=s ymm6_b,ymm6_b<=s 11354@16,
(-11354)@16<=s ymm6_c,ymm6_c<=s 11354@16,(-11354)@16<=s ymm6_d,ymm6_d<=s 11354@16,
(-11354)@16<=s ymm6_e,ymm6_e<=s 11354@16,(-11354)@16<=s ymm6_f,ymm6_f<=s 11354@16,
(-12141)@16<=s ymm5_0,ymm5_0<=s 12141@16,(-12141)@16<=s ymm5_1,ymm5_1<=s 12141@16,
(-12141)@16<=s ymm5_2,ymm5_2<=s 12141@16,(-12141)@16<=s ymm5_3,ymm5_3<=s 12141@16,
(-12141)@16<=s ymm5_4,ymm5_4<=s 12141@16,(-12141)@16<=s ymm5_5,ymm5_5<=s 12141@16,
(-12141)@16<=s ymm5_6,ymm5_6<=s 12141@16,(-12141)@16<=s ymm5_7,ymm5_7<=s 12141@16,
(-12141)@16<=s ymm5_8,ymm5_8<=s 12141@16,(-12141)@16<=s ymm5_9,ymm5_9<=s 12141@16,
(-12141)@16<=s ymm5_a,ymm5_a<=s 12141@16,(-12141)@16<=s ymm5_b,ymm5_b<=s 12141@16,
(-12141)@16<=s ymm5_c,ymm5_c<=s 12141@16,(-12141)@16<=s ymm5_d,ymm5_d<=s 12141@16,
(-12141)@16<=s ymm5_e,ymm5_e<=s 12141@16,(-12141)@16<=s ymm5_f,ymm5_f<=s 12141@16,
(-12141)@16<=s ymm8_0,ymm8_0<=s 12141@16,(-12141)@16<=s ymm8_1,ymm8_1<=s 12141@16,
(-12141)@16<=s ymm8_2,ymm8_2<=s 12141@16,(-12141)@16<=s ymm8_3,ymm8_3<=s 12141@16,
(-12141)@16<=s ymm8_4,ymm8_4<=s 12141@16,(-12141)@16<=s ymm8_5,ymm8_5<=s 12141@16,
(-12141)@16<=s ymm8_6,ymm8_6<=s 12141@16,(-12141)@16<=s ymm8_7,ymm8_7<=s 12141@16,
(-12141)@16<=s ymm8_8,ymm8_8<=s 12141@16,(-12141)@16<=s ymm8_9,ymm8_9<=s 12141@16,
(-12141)@16<=s ymm8_a,ymm8_a<=s 12141@16,(-12141)@16<=s ymm8_b,ymm8_b<=s 12141@16,
(-12141)@16<=s ymm8_c,ymm8_c<=s 12141@16,(-12141)@16<=s ymm8_d,ymm8_d<=s 12141@16,
(-12141)@16<=s ymm8_e,ymm8_e<=s 12141@16,(-12141)@16<=s ymm8_f,ymm8_f<=s 12141@16,
(-12644)@16<=s ymm4_0,ymm4_0<=s 12644@16,(-12644)@16<=s ymm4_1,ymm4_1<=s 12644@16,
(-12644)@16<=s ymm4_2,ymm4_2<=s 12644@16,(-12644)@16<=s ymm4_3,ymm4_3<=s 12644@16,
(-12644)@16<=s ymm4_4,ymm4_4<=s 12644@16,(-12644)@16<=s ymm4_5,ymm4_5<=s 12644@16,
(-12644)@16<=s ymm4_6,ymm4_6<=s 12644@16,(-12644)@16<=s ymm4_7,ymm4_7<=s 12644@16,
(-12644)@16<=s ymm4_8,ymm4_8<=s 12644@16,(-12644)@16<=s ymm4_9,ymm4_9<=s 12644@16,
(-12644)@16<=s ymm4_a,ymm4_a<=s 12644@16,(-12644)@16<=s ymm4_b,ymm4_b<=s 12644@16,
(-12644)@16<=s ymm4_c,ymm4_c<=s 12644@16,(-12644)@16<=s ymm4_d,ymm4_d<=s 12644@16,
(-12644)@16<=s ymm4_e,ymm4_e<=s 12644@16,(-12644)@16<=s ymm4_f,ymm4_f<=s 12644@16,
(-12644)@16<=s ymm11_0,ymm11_0<=s 12644@16,(-12644)@16<=s ymm11_1,ymm11_1<=s 12644@16,
(-12644)@16<=s ymm11_2,ymm11_2<=s 12644@16,(-12644)@16<=s ymm11_3,ymm11_3<=s 12644@16,
(-12644)@16<=s ymm11_4,ymm11_4<=s 12644@16,(-12644)@16<=s ymm11_5,ymm11_5<=s 12644@16,
(-12644)@16<=s ymm11_6,ymm11_6<=s 12644@16,(-12644)@16<=s ymm11_7,ymm11_7<=s 12644@16,
(-12644)@16<=s ymm11_8,ymm11_8<=s 12644@16,(-12644)@16<=s ymm11_9,ymm11_9<=s 12644@16,
(-12644)@16<=s ymm11_a,ymm11_a<=s 12644@16,(-12644)@16<=s ymm11_b,ymm11_b<=s 12644@16,
(-12644)@16<=s ymm11_c,ymm11_c<=s 12644@16,(-12644)@16<=s ymm11_d,ymm11_d<=s 12644@16,
(-12644)@16<=s ymm11_e,ymm11_e<=s 12644@16,(-12644)@16<=s ymm11_f,ymm11_f<=s 12644@16
] prove with [ all ghosts, cuts [ 0 ] ];



(* vmovdqa 0x7f23(%rip),%ymm1        # 0x5555555610e0 <nttmul_idxdata+64>#! EA = L0x5555555610e0; Value = 0x0d0c090805040100; PC = 0x5555555591b5 *)
mov ymm1_0 L0x5555555610e0;
mov ymm1_1 L0x5555555610e2;
mov ymm1_2 L0x5555555610e4;
mov ymm1_3 L0x5555555610e6;
mov ymm1_4 L0x5555555610e8;
mov ymm1_5 L0x5555555610ea;
mov ymm1_6 L0x5555555610ec;
mov ymm1_7 L0x5555555610ee;
mov ymm1_8 L0x5555555610f0;
mov ymm1_9 L0x5555555610f2;
mov ymm1_a L0x5555555610f4;
mov ymm1_b L0x5555555610f6;
mov ymm1_c L0x5555555610f8;
mov ymm1_d L0x5555555610fa;
mov ymm1_e L0x5555555610fc;
mov ymm1_f L0x5555555610fe;
(* vpshufb %ymm1,%ymm9,%ymm9                       #! PC = 0x5555555591bd *)
assert true && ymm1_0 = 0x0100@16;
mov shuf_0 ymm9_0;
assert true && ymm1_1 = 0x0504@16;
mov shuf_1 ymm9_2;
assert true && ymm1_2 = 0x0908@16;
mov shuf_2 ymm9_4;
assert true && ymm1_3 = 0x0d0c@16;
mov shuf_3 ymm9_6;
assert true && ymm1_4 = 0x0302@16;
mov shuf_4 ymm9_1;
assert true && ymm1_5 = 0x0706@16;
mov shuf_5 ymm9_3;
assert true && ymm1_6 = 0x0b0a@16;
mov shuf_6 ymm9_5;
assert true && ymm1_7 = 0x0f0e@16;
mov shuf_7 ymm9_7;
assert true && ymm1_8 = 0x0100@16;
mov shuf_8 ymm9_8;
assert true && ymm1_9 = 0x0504@16;
mov shuf_9 ymm9_a;
assert true && ymm1_a = 0x0908@16;
mov shuf_a ymm9_c;
assert true && ymm1_b = 0x0d0c@16;
mov shuf_b ymm9_e;
assert true && ymm1_c = 0x0302@16;
mov shuf_c ymm9_9;
assert true && ymm1_d = 0x0706@16;
mov shuf_d ymm9_b;
assert true && ymm1_e = 0x0b0a@16;
mov shuf_e ymm9_d;
assert true && ymm1_f = 0x0f0e@16;
mov shuf_f ymm9_f;
mov ymm9_0 shuf_0;
mov ymm9_1 shuf_1;
mov ymm9_2 shuf_2;
mov ymm9_3 shuf_3;
mov ymm9_4 shuf_4;
mov ymm9_5 shuf_5;
mov ymm9_6 shuf_6;
mov ymm9_7 shuf_7;
mov ymm9_8 shuf_8;
mov ymm9_9 shuf_9;
mov ymm9_a shuf_a;
mov ymm9_b shuf_b;
mov ymm9_c shuf_c;
mov ymm9_d shuf_d;
mov ymm9_e shuf_e;
mov ymm9_f shuf_f;
(* vpermq $0xd8,%ymm9,%ymm9                        #! PC = 0x5555555591c2 *)
mov permq_0 ymm9_0;
mov permq_1 ymm9_1;
mov permq_2 ymm9_2;
mov permq_3 ymm9_3;
mov permq_4 ymm9_8;
mov permq_5 ymm9_9;
mov permq_6 ymm9_a;
mov permq_7 ymm9_b;
mov permq_8 ymm9_4;
mov permq_9 ymm9_5;
mov permq_a ymm9_6;
mov permq_b ymm9_7;
mov permq_c ymm9_c;
mov permq_d ymm9_d;
mov permq_e ymm9_e;
mov permq_f ymm9_f;
mov ymm9_0 permq_0;
mov ymm9_1 permq_1;
mov ymm9_2 permq_2;
mov ymm9_3 permq_3;
mov ymm9_4 permq_4;
mov ymm9_5 permq_5;
mov ymm9_6 permq_6;
mov ymm9_7 permq_7;
mov ymm9_8 permq_8;
mov ymm9_9 permq_9;
mov ymm9_a permq_a;
mov ymm9_b permq_b;
mov ymm9_c permq_c;
mov ymm9_d permq_d;
mov ymm9_e permq_e;
mov ymm9_f permq_f;
(* vpshufb %ymm1,%ymm3,%ymm3                       #! PC = 0x5555555591c8 *)
assert true && ymm1_0 = 0x0100@16;
mov shuf_0 ymm3_0;
assert true && ymm1_1 = 0x0504@16;
mov shuf_1 ymm3_2;
assert true && ymm1_2 = 0x0908@16;
mov shuf_2 ymm3_4;
assert true && ymm1_3 = 0x0d0c@16;
mov shuf_3 ymm3_6;
assert true && ymm1_4 = 0x0302@16;
mov shuf_4 ymm3_1;
assert true && ymm1_5 = 0x0706@16;
mov shuf_5 ymm3_3;
assert true && ymm1_6 = 0x0b0a@16;
mov shuf_6 ymm3_5;
assert true && ymm1_7 = 0x0f0e@16;
mov shuf_7 ymm3_7;
assert true && ymm1_8 = 0x0100@16;
mov shuf_8 ymm3_8;
assert true && ymm1_9 = 0x0504@16;
mov shuf_9 ymm3_a;
assert true && ymm1_a = 0x0908@16;
mov shuf_a ymm3_c;
assert true && ymm1_b = 0x0d0c@16;
mov shuf_b ymm3_e;
assert true && ymm1_c = 0x0302@16;
mov shuf_c ymm3_9;
assert true && ymm1_d = 0x0706@16;
mov shuf_d ymm3_b;
assert true && ymm1_e = 0x0b0a@16;
mov shuf_e ymm3_d;
assert true && ymm1_f = 0x0f0e@16;
mov shuf_f ymm3_f;
mov ymm3_0 shuf_0;
mov ymm3_1 shuf_1;
mov ymm3_2 shuf_2;
mov ymm3_3 shuf_3;
mov ymm3_4 shuf_4;
mov ymm3_5 shuf_5;
mov ymm3_6 shuf_6;
mov ymm3_7 shuf_7;
mov ymm3_8 shuf_8;
mov ymm3_9 shuf_9;
mov ymm3_a shuf_a;
mov ymm3_b shuf_b;
mov ymm3_c shuf_c;
mov ymm3_d shuf_d;
mov ymm3_e shuf_e;
mov ymm3_f shuf_f;
(* vpermq $0xd8,%ymm3,%ymm3                        #! PC = 0x5555555591cd *)
mov permq_0 ymm3_0;
mov permq_1 ymm3_1;
mov permq_2 ymm3_2;
mov permq_3 ymm3_3;
mov permq_4 ymm3_8;
mov permq_5 ymm3_9;
mov permq_6 ymm3_a;
mov permq_7 ymm3_b;
mov permq_8 ymm3_4;
mov permq_9 ymm3_5;
mov permq_a ymm3_6;
mov permq_b ymm3_7;
mov permq_c ymm3_c;
mov permq_d ymm3_d;
mov permq_e ymm3_e;
mov permq_f ymm3_f;
mov ymm3_0 permq_0;
mov ymm3_1 permq_1;
mov ymm3_2 permq_2;
mov ymm3_3 permq_3;
mov ymm3_4 permq_4;
mov ymm3_5 permq_5;
mov ymm3_6 permq_6;
mov ymm3_7 permq_7;
mov ymm3_8 permq_8;
mov ymm3_9 permq_9;
mov ymm3_a permq_a;
mov ymm3_b permq_b;
mov ymm3_c permq_c;
mov ymm3_d permq_d;
mov ymm3_e permq_e;
mov ymm3_f permq_f;
(* vpshufb %ymm1,%ymm7,%ymm7                       #! PC = 0x5555555591d3 *)
assert true && ymm1_0 = 0x0100@16;
mov shuf_0 ymm7_0;
assert true && ymm1_1 = 0x0504@16;
mov shuf_1 ymm7_2;
assert true && ymm1_2 = 0x0908@16;
mov shuf_2 ymm7_4;
assert true && ymm1_3 = 0x0d0c@16;
mov shuf_3 ymm7_6;
assert true && ymm1_4 = 0x0302@16;
mov shuf_4 ymm7_1;
assert true && ymm1_5 = 0x0706@16;
mov shuf_5 ymm7_3;
assert true && ymm1_6 = 0x0b0a@16;
mov shuf_6 ymm7_5;
assert true && ymm1_7 = 0x0f0e@16;
mov shuf_7 ymm7_7;
assert true && ymm1_8 = 0x0100@16;
mov shuf_8 ymm7_8;
assert true && ymm1_9 = 0x0504@16;
mov shuf_9 ymm7_a;
assert true && ymm1_a = 0x0908@16;
mov shuf_a ymm7_c;
assert true && ymm1_b = 0x0d0c@16;
mov shuf_b ymm7_e;
assert true && ymm1_c = 0x0302@16;
mov shuf_c ymm7_9;
assert true && ymm1_d = 0x0706@16;
mov shuf_d ymm7_b;
assert true && ymm1_e = 0x0b0a@16;
mov shuf_e ymm7_d;
assert true && ymm1_f = 0x0f0e@16;
mov shuf_f ymm7_f;
mov ymm7_0 shuf_0;
mov ymm7_1 shuf_1;
mov ymm7_2 shuf_2;
mov ymm7_3 shuf_3;
mov ymm7_4 shuf_4;
mov ymm7_5 shuf_5;
mov ymm7_6 shuf_6;
mov ymm7_7 shuf_7;
mov ymm7_8 shuf_8;
mov ymm7_9 shuf_9;
mov ymm7_a shuf_a;
mov ymm7_b shuf_b;
mov ymm7_c shuf_c;
mov ymm7_d shuf_d;
mov ymm7_e shuf_e;
mov ymm7_f shuf_f;
(* vpermq $0xd8,%ymm7,%ymm7                        #! PC = 0x5555555591d8 *)
mov permq_0 ymm7_0;
mov permq_1 ymm7_1;
mov permq_2 ymm7_2;
mov permq_3 ymm7_3;
mov permq_4 ymm7_8;
mov permq_5 ymm7_9;
mov permq_6 ymm7_a;
mov permq_7 ymm7_b;
mov permq_8 ymm7_4;
mov permq_9 ymm7_5;
mov permq_a ymm7_6;
mov permq_b ymm7_7;
mov permq_c ymm7_c;
mov permq_d ymm7_d;
mov permq_e ymm7_e;
mov permq_f ymm7_f;
mov ymm7_0 permq_0;
mov ymm7_1 permq_1;
mov ymm7_2 permq_2;
mov ymm7_3 permq_3;
mov ymm7_4 permq_4;
mov ymm7_5 permq_5;
mov ymm7_6 permq_6;
mov ymm7_7 permq_7;
mov ymm7_8 permq_8;
mov ymm7_9 permq_9;
mov ymm7_a permq_a;
mov ymm7_b permq_b;
mov ymm7_c permq_c;
mov ymm7_d permq_d;
mov ymm7_e permq_e;
mov ymm7_f permq_f;
(* vpshufb %ymm1,%ymm6,%ymm6                       #! PC = 0x5555555591de *)
assert true && ymm1_0 = 0x0100@16;
mov shuf_0 ymm6_0;
assert true && ymm1_1 = 0x0504@16;
mov shuf_1 ymm6_2;
assert true && ymm1_2 = 0x0908@16;
mov shuf_2 ymm6_4;
assert true && ymm1_3 = 0x0d0c@16;
mov shuf_3 ymm6_6;
assert true && ymm1_4 = 0x0302@16;
mov shuf_4 ymm6_1;
assert true && ymm1_5 = 0x0706@16;
mov shuf_5 ymm6_3;
assert true && ymm1_6 = 0x0b0a@16;
mov shuf_6 ymm6_5;
assert true && ymm1_7 = 0x0f0e@16;
mov shuf_7 ymm6_7;
assert true && ymm1_8 = 0x0100@16;
mov shuf_8 ymm6_8;
assert true && ymm1_9 = 0x0504@16;
mov shuf_9 ymm6_a;
assert true && ymm1_a = 0x0908@16;
mov shuf_a ymm6_c;
assert true && ymm1_b = 0x0d0c@16;
mov shuf_b ymm6_e;
assert true && ymm1_c = 0x0302@16;
mov shuf_c ymm6_9;
assert true && ymm1_d = 0x0706@16;
mov shuf_d ymm6_b;
assert true && ymm1_e = 0x0b0a@16;
mov shuf_e ymm6_d;
assert true && ymm1_f = 0x0f0e@16;
mov shuf_f ymm6_f;
mov ymm6_0 shuf_0;
mov ymm6_1 shuf_1;
mov ymm6_2 shuf_2;
mov ymm6_3 shuf_3;
mov ymm6_4 shuf_4;
mov ymm6_5 shuf_5;
mov ymm6_6 shuf_6;
mov ymm6_7 shuf_7;
mov ymm6_8 shuf_8;
mov ymm6_9 shuf_9;
mov ymm6_a shuf_a;
mov ymm6_b shuf_b;
mov ymm6_c shuf_c;
mov ymm6_d shuf_d;
mov ymm6_e shuf_e;
mov ymm6_f shuf_f;
(* vpermq $0xd8,%ymm6,%ymm6                        #! PC = 0x5555555591e3 *)
mov permq_0 ymm6_0;
mov permq_1 ymm6_1;
mov permq_2 ymm6_2;
mov permq_3 ymm6_3;
mov permq_4 ymm6_8;
mov permq_5 ymm6_9;
mov permq_6 ymm6_a;
mov permq_7 ymm6_b;
mov permq_8 ymm6_4;
mov permq_9 ymm6_5;
mov permq_a ymm6_6;
mov permq_b ymm6_7;
mov permq_c ymm6_c;
mov permq_d ymm6_d;
mov permq_e ymm6_e;
mov permq_f ymm6_f;
mov ymm6_0 permq_0;
mov ymm6_1 permq_1;
mov ymm6_2 permq_2;
mov ymm6_3 permq_3;
mov ymm6_4 permq_4;
mov ymm6_5 permq_5;
mov ymm6_6 permq_6;
mov ymm6_7 permq_7;
mov ymm6_8 permq_8;
mov ymm6_9 permq_9;
mov ymm6_a permq_a;
mov ymm6_b permq_b;
mov ymm6_c permq_c;
mov ymm6_d permq_d;
mov ymm6_e permq_e;
mov ymm6_f permq_f;
(* vpshufb %ymm1,%ymm5,%ymm5                       #! PC = 0x5555555591e9 *)
assert true && ymm1_0 = 0x0100@16;
mov shuf_0 ymm5_0;
assert true && ymm1_1 = 0x0504@16;
mov shuf_1 ymm5_2;
assert true && ymm1_2 = 0x0908@16;
mov shuf_2 ymm5_4;
assert true && ymm1_3 = 0x0d0c@16;
mov shuf_3 ymm5_6;
assert true && ymm1_4 = 0x0302@16;
mov shuf_4 ymm5_1;
assert true && ymm1_5 = 0x0706@16;
mov shuf_5 ymm5_3;
assert true && ymm1_6 = 0x0b0a@16;
mov shuf_6 ymm5_5;
assert true && ymm1_7 = 0x0f0e@16;
mov shuf_7 ymm5_7;
assert true && ymm1_8 = 0x0100@16;
mov shuf_8 ymm5_8;
assert true && ymm1_9 = 0x0504@16;
mov shuf_9 ymm5_a;
assert true && ymm1_a = 0x0908@16;
mov shuf_a ymm5_c;
assert true && ymm1_b = 0x0d0c@16;
mov shuf_b ymm5_e;
assert true && ymm1_c = 0x0302@16;
mov shuf_c ymm5_9;
assert true && ymm1_d = 0x0706@16;
mov shuf_d ymm5_b;
assert true && ymm1_e = 0x0b0a@16;
mov shuf_e ymm5_d;
assert true && ymm1_f = 0x0f0e@16;
mov shuf_f ymm5_f;
mov ymm5_0 shuf_0;
mov ymm5_1 shuf_1;
mov ymm5_2 shuf_2;
mov ymm5_3 shuf_3;
mov ymm5_4 shuf_4;
mov ymm5_5 shuf_5;
mov ymm5_6 shuf_6;
mov ymm5_7 shuf_7;
mov ymm5_8 shuf_8;
mov ymm5_9 shuf_9;
mov ymm5_a shuf_a;
mov ymm5_b shuf_b;
mov ymm5_c shuf_c;
mov ymm5_d shuf_d;
mov ymm5_e shuf_e;
mov ymm5_f shuf_f;
(* vpermq $0xd8,%ymm5,%ymm5                        #! PC = 0x5555555591ee *)
mov permq_0 ymm5_0;
mov permq_1 ymm5_1;
mov permq_2 ymm5_2;
mov permq_3 ymm5_3;
mov permq_4 ymm5_8;
mov permq_5 ymm5_9;
mov permq_6 ymm5_a;
mov permq_7 ymm5_b;
mov permq_8 ymm5_4;
mov permq_9 ymm5_5;
mov permq_a ymm5_6;
mov permq_b ymm5_7;
mov permq_c ymm5_c;
mov permq_d ymm5_d;
mov permq_e ymm5_e;
mov permq_f ymm5_f;
mov ymm5_0 permq_0;
mov ymm5_1 permq_1;
mov ymm5_2 permq_2;
mov ymm5_3 permq_3;
mov ymm5_4 permq_4;
mov ymm5_5 permq_5;
mov ymm5_6 permq_6;
mov ymm5_7 permq_7;
mov ymm5_8 permq_8;
mov ymm5_9 permq_9;
mov ymm5_a permq_a;
mov ymm5_b permq_b;
mov ymm5_c permq_c;
mov ymm5_d permq_d;
mov ymm5_e permq_e;
mov ymm5_f permq_f;
(* vpshufb %ymm1,%ymm8,%ymm8                       #! PC = 0x5555555591f4 *)
assert true && ymm1_0 = 0x0100@16;
mov shuf_0 ymm8_0;
assert true && ymm1_1 = 0x0504@16;
mov shuf_1 ymm8_2;
assert true && ymm1_2 = 0x0908@16;
mov shuf_2 ymm8_4;
assert true && ymm1_3 = 0x0d0c@16;
mov shuf_3 ymm8_6;
assert true && ymm1_4 = 0x0302@16;
mov shuf_4 ymm8_1;
assert true && ymm1_5 = 0x0706@16;
mov shuf_5 ymm8_3;
assert true && ymm1_6 = 0x0b0a@16;
mov shuf_6 ymm8_5;
assert true && ymm1_7 = 0x0f0e@16;
mov shuf_7 ymm8_7;
assert true && ymm1_8 = 0x0100@16;
mov shuf_8 ymm8_8;
assert true && ymm1_9 = 0x0504@16;
mov shuf_9 ymm8_a;
assert true && ymm1_a = 0x0908@16;
mov shuf_a ymm8_c;
assert true && ymm1_b = 0x0d0c@16;
mov shuf_b ymm8_e;
assert true && ymm1_c = 0x0302@16;
mov shuf_c ymm8_9;
assert true && ymm1_d = 0x0706@16;
mov shuf_d ymm8_b;
assert true && ymm1_e = 0x0b0a@16;
mov shuf_e ymm8_d;
assert true && ymm1_f = 0x0f0e@16;
mov shuf_f ymm8_f;
mov ymm8_0 shuf_0;
mov ymm8_1 shuf_1;
mov ymm8_2 shuf_2;
mov ymm8_3 shuf_3;
mov ymm8_4 shuf_4;
mov ymm8_5 shuf_5;
mov ymm8_6 shuf_6;
mov ymm8_7 shuf_7;
mov ymm8_8 shuf_8;
mov ymm8_9 shuf_9;
mov ymm8_a shuf_a;
mov ymm8_b shuf_b;
mov ymm8_c shuf_c;
mov ymm8_d shuf_d;
mov ymm8_e shuf_e;
mov ymm8_f shuf_f;
(* vpermq $0xd8,%ymm8,%ymm8                        #! PC = 0x5555555591f9 *)
mov permq_0 ymm8_0;
mov permq_1 ymm8_1;
mov permq_2 ymm8_2;
mov permq_3 ymm8_3;
mov permq_4 ymm8_8;
mov permq_5 ymm8_9;
mov permq_6 ymm8_a;
mov permq_7 ymm8_b;
mov permq_8 ymm8_4;
mov permq_9 ymm8_5;
mov permq_a ymm8_6;
mov permq_b ymm8_7;
mov permq_c ymm8_c;
mov permq_d ymm8_d;
mov permq_e ymm8_e;
mov permq_f ymm8_f;
mov ymm8_0 permq_0;
mov ymm8_1 permq_1;
mov ymm8_2 permq_2;
mov ymm8_3 permq_3;
mov ymm8_4 permq_4;
mov ymm8_5 permq_5;
mov ymm8_6 permq_6;
mov ymm8_7 permq_7;
mov ymm8_8 permq_8;
mov ymm8_9 permq_9;
mov ymm8_a permq_a;
mov ymm8_b permq_b;
mov ymm8_c permq_c;
mov ymm8_d permq_d;
mov ymm8_e permq_e;
mov ymm8_f permq_f;
(* vpshufb %ymm1,%ymm4,%ymm4                       #! PC = 0x5555555591ff *)
assert true && ymm1_0 = 0x0100@16;
mov shuf_0 ymm4_0;
assert true && ymm1_1 = 0x0504@16;
mov shuf_1 ymm4_2;
assert true && ymm1_2 = 0x0908@16;
mov shuf_2 ymm4_4;
assert true && ymm1_3 = 0x0d0c@16;
mov shuf_3 ymm4_6;
assert true && ymm1_4 = 0x0302@16;
mov shuf_4 ymm4_1;
assert true && ymm1_5 = 0x0706@16;
mov shuf_5 ymm4_3;
assert true && ymm1_6 = 0x0b0a@16;
mov shuf_6 ymm4_5;
assert true && ymm1_7 = 0x0f0e@16;
mov shuf_7 ymm4_7;
assert true && ymm1_8 = 0x0100@16;
mov shuf_8 ymm4_8;
assert true && ymm1_9 = 0x0504@16;
mov shuf_9 ymm4_a;
assert true && ymm1_a = 0x0908@16;
mov shuf_a ymm4_c;
assert true && ymm1_b = 0x0d0c@16;
mov shuf_b ymm4_e;
assert true && ymm1_c = 0x0302@16;
mov shuf_c ymm4_9;
assert true && ymm1_d = 0x0706@16;
mov shuf_d ymm4_b;
assert true && ymm1_e = 0x0b0a@16;
mov shuf_e ymm4_d;
assert true && ymm1_f = 0x0f0e@16;
mov shuf_f ymm4_f;
mov ymm4_0 shuf_0;
mov ymm4_1 shuf_1;
mov ymm4_2 shuf_2;
mov ymm4_3 shuf_3;
mov ymm4_4 shuf_4;
mov ymm4_5 shuf_5;
mov ymm4_6 shuf_6;
mov ymm4_7 shuf_7;
mov ymm4_8 shuf_8;
mov ymm4_9 shuf_9;
mov ymm4_a shuf_a;
mov ymm4_b shuf_b;
mov ymm4_c shuf_c;
mov ymm4_d shuf_d;
mov ymm4_e shuf_e;
mov ymm4_f shuf_f;
(* vpermq $0xd8,%ymm4,%ymm4                        #! PC = 0x555555559204 *)
mov permq_0 ymm4_0;
mov permq_1 ymm4_1;
mov permq_2 ymm4_2;
mov permq_3 ymm4_3;
mov permq_4 ymm4_8;
mov permq_5 ymm4_9;
mov permq_6 ymm4_a;
mov permq_7 ymm4_b;
mov permq_8 ymm4_4;
mov permq_9 ymm4_5;
mov permq_a ymm4_6;
mov permq_b ymm4_7;
mov permq_c ymm4_c;
mov permq_d ymm4_d;
mov permq_e ymm4_e;
mov permq_f ymm4_f;
mov ymm4_0 permq_0;
mov ymm4_1 permq_1;
mov ymm4_2 permq_2;
mov ymm4_3 permq_3;
mov ymm4_4 permq_4;
mov ymm4_5 permq_5;
mov ymm4_6 permq_6;
mov ymm4_7 permq_7;
mov ymm4_8 permq_8;
mov ymm4_9 permq_9;
mov ymm4_a permq_a;
mov ymm4_b permq_b;
mov ymm4_c permq_c;
mov ymm4_d permq_d;
mov ymm4_e permq_e;
mov ymm4_f permq_f;
(* vpshufb %ymm1,%ymm11,%ymm11                     #! PC = 0x55555555920a *)
assert true && ymm1_0 = 0x0100@16;
mov shuf_0 ymm11_0;
assert true && ymm1_1 = 0x0504@16;
mov shuf_1 ymm11_2;
assert true && ymm1_2 = 0x0908@16;
mov shuf_2 ymm11_4;
assert true && ymm1_3 = 0x0d0c@16;
mov shuf_3 ymm11_6;
assert true && ymm1_4 = 0x0302@16;
mov shuf_4 ymm11_1;
assert true && ymm1_5 = 0x0706@16;
mov shuf_5 ymm11_3;
assert true && ymm1_6 = 0x0b0a@16;
mov shuf_6 ymm11_5;
assert true && ymm1_7 = 0x0f0e@16;
mov shuf_7 ymm11_7;
assert true && ymm1_8 = 0x0100@16;
mov shuf_8 ymm11_8;
assert true && ymm1_9 = 0x0504@16;
mov shuf_9 ymm11_a;
assert true && ymm1_a = 0x0908@16;
mov shuf_a ymm11_c;
assert true && ymm1_b = 0x0d0c@16;
mov shuf_b ymm11_e;
assert true && ymm1_c = 0x0302@16;
mov shuf_c ymm11_9;
assert true && ymm1_d = 0x0706@16;
mov shuf_d ymm11_b;
assert true && ymm1_e = 0x0b0a@16;
mov shuf_e ymm11_d;
assert true && ymm1_f = 0x0f0e@16;
mov shuf_f ymm11_f;
mov ymm11_0 shuf_0;
mov ymm11_1 shuf_1;
mov ymm11_2 shuf_2;
mov ymm11_3 shuf_3;
mov ymm11_4 shuf_4;
mov ymm11_5 shuf_5;
mov ymm11_6 shuf_6;
mov ymm11_7 shuf_7;
mov ymm11_8 shuf_8;
mov ymm11_9 shuf_9;
mov ymm11_a shuf_a;
mov ymm11_b shuf_b;
mov ymm11_c shuf_c;
mov ymm11_d shuf_d;
mov ymm11_e shuf_e;
mov ymm11_f shuf_f;
(* vpermq $0xd8,%ymm11,%ymm11                      #! PC = 0x55555555920f *)
mov permq_0 ymm11_0;
mov permq_1 ymm11_1;
mov permq_2 ymm11_2;
mov permq_3 ymm11_3;
mov permq_4 ymm11_8;
mov permq_5 ymm11_9;
mov permq_6 ymm11_a;
mov permq_7 ymm11_b;
mov permq_8 ymm11_4;
mov permq_9 ymm11_5;
mov permq_a ymm11_6;
mov permq_b ymm11_7;
mov permq_c ymm11_c;
mov permq_d ymm11_d;
mov permq_e ymm11_e;
mov permq_f ymm11_f;
mov ymm11_0 permq_0;
mov ymm11_1 permq_1;
mov ymm11_2 permq_2;
mov ymm11_3 permq_3;
mov ymm11_4 permq_4;
mov ymm11_5 permq_5;
mov ymm11_6 permq_6;
mov ymm11_7 permq_7;
mov ymm11_8 permq_8;
mov ymm11_9 permq_9;
mov ymm11_a permq_a;
mov ymm11_b permq_b;
mov ymm11_c permq_c;
mov ymm11_d permq_d;
mov ymm11_e permq_e;
mov ymm11_f permq_f;
(* vpunpcklwd %ymm3,%ymm9,%ymm10                   #! PC = 0x555555559215 *)
mov lwd_0 ymm9_0;
mov lwd_1 ymm3_0;
mov lwd_2 ymm9_1;
mov lwd_3 ymm3_1;
mov lwd_4 ymm9_2;
mov lwd_5 ymm3_2;
mov lwd_6 ymm9_3;
mov lwd_7 ymm3_3;
mov lwd_8 ymm9_8;
mov lwd_9 ymm3_8;
mov lwd_a ymm9_9;
mov lwd_b ymm3_9;
mov lwd_c ymm9_a;
mov lwd_d ymm3_a;
mov lwd_e ymm9_b;
mov lwd_f ymm3_b;
mov ymm10_0 lwd_0;
mov ymm10_1 lwd_1;
mov ymm10_2 lwd_2;
mov ymm10_3 lwd_3;
mov ymm10_4 lwd_4;
mov ymm10_5 lwd_5;
mov ymm10_6 lwd_6;
mov ymm10_7 lwd_7;
mov ymm10_8 lwd_8;
mov ymm10_9 lwd_9;
mov ymm10_a lwd_a;
mov ymm10_b lwd_b;
mov ymm10_c lwd_c;
mov ymm10_d lwd_d;
mov ymm10_e lwd_e;
mov ymm10_f lwd_f;
(* vpunpckhwd %ymm3,%ymm9,%ymm3                    #! PC = 0x555555559219 *)
mov hwd_0 ymm9_4;
mov hwd_1 ymm3_4;
mov hwd_2 ymm9_5;
mov hwd_3 ymm3_5;
mov hwd_4 ymm9_6;
mov hwd_5 ymm3_6;
mov hwd_6 ymm9_7;
mov hwd_7 ymm3_7;
mov hwd_8 ymm9_c;
mov hwd_9 ymm3_c;
mov hwd_a ymm9_d;
mov hwd_b ymm3_d;
mov hwd_c ymm9_e;
mov hwd_d ymm3_e;
mov hwd_e ymm9_f;
mov hwd_f ymm3_f;
mov ymm3_0 hwd_0;
mov ymm3_1 hwd_1;
mov ymm3_2 hwd_2;
mov ymm3_3 hwd_3;
mov ymm3_4 hwd_4;
mov ymm3_5 hwd_5;
mov ymm3_6 hwd_6;
mov ymm3_7 hwd_7;
mov ymm3_8 hwd_8;
mov ymm3_9 hwd_9;
mov ymm3_a hwd_a;
mov ymm3_b hwd_b;
mov ymm3_c hwd_c;
mov ymm3_d hwd_d;
mov ymm3_e hwd_e;
mov ymm3_f hwd_f;
(* vpunpcklwd %ymm6,%ymm7,%ymm9                    #! PC = 0x55555555921d *)
mov lwd_0 ymm7_0;
mov lwd_1 ymm6_0;
mov lwd_2 ymm7_1;
mov lwd_3 ymm6_1;
mov lwd_4 ymm7_2;
mov lwd_5 ymm6_2;
mov lwd_6 ymm7_3;
mov lwd_7 ymm6_3;
mov lwd_8 ymm7_8;
mov lwd_9 ymm6_8;
mov lwd_a ymm7_9;
mov lwd_b ymm6_9;
mov lwd_c ymm7_a;
mov lwd_d ymm6_a;
mov lwd_e ymm7_b;
mov lwd_f ymm6_b;
mov ymm9_0 lwd_0;
mov ymm9_1 lwd_1;
mov ymm9_2 lwd_2;
mov ymm9_3 lwd_3;
mov ymm9_4 lwd_4;
mov ymm9_5 lwd_5;
mov ymm9_6 lwd_6;
mov ymm9_7 lwd_7;
mov ymm9_8 lwd_8;
mov ymm9_9 lwd_9;
mov ymm9_a lwd_a;
mov ymm9_b lwd_b;
mov ymm9_c lwd_c;
mov ymm9_d lwd_d;
mov ymm9_e lwd_e;
mov ymm9_f lwd_f;
(* vpunpckhwd %ymm6,%ymm7,%ymm6                    #! PC = 0x555555559221 *)
mov hwd_0 ymm7_4;
mov hwd_1 ymm6_4;
mov hwd_2 ymm7_5;
mov hwd_3 ymm6_5;
mov hwd_4 ymm7_6;
mov hwd_5 ymm6_6;
mov hwd_6 ymm7_7;
mov hwd_7 ymm6_7;
mov hwd_8 ymm7_c;
mov hwd_9 ymm6_c;
mov hwd_a ymm7_d;
mov hwd_b ymm6_d;
mov hwd_c ymm7_e;
mov hwd_d ymm6_e;
mov hwd_e ymm7_f;
mov hwd_f ymm6_f;
mov ymm6_0 hwd_0;
mov ymm6_1 hwd_1;
mov ymm6_2 hwd_2;
mov ymm6_3 hwd_3;
mov ymm6_4 hwd_4;
mov ymm6_5 hwd_5;
mov ymm6_6 hwd_6;
mov ymm6_7 hwd_7;
mov ymm6_8 hwd_8;
mov ymm6_9 hwd_9;
mov ymm6_a hwd_a;
mov ymm6_b hwd_b;
mov ymm6_c hwd_c;
mov ymm6_d hwd_d;
mov ymm6_e hwd_e;
mov ymm6_f hwd_f;
(* vpunpcklwd %ymm8,%ymm5,%ymm7                    #! PC = 0x555555559225 *)
mov lwd_0 ymm5_0;
mov lwd_1 ymm8_0;
mov lwd_2 ymm5_1;
mov lwd_3 ymm8_1;
mov lwd_4 ymm5_2;
mov lwd_5 ymm8_2;
mov lwd_6 ymm5_3;
mov lwd_7 ymm8_3;
mov lwd_8 ymm5_8;
mov lwd_9 ymm8_8;
mov lwd_a ymm5_9;
mov lwd_b ymm8_9;
mov lwd_c ymm5_a;
mov lwd_d ymm8_a;
mov lwd_e ymm5_b;
mov lwd_f ymm8_b;
mov ymm7_0 lwd_0;
mov ymm7_1 lwd_1;
mov ymm7_2 lwd_2;
mov ymm7_3 lwd_3;
mov ymm7_4 lwd_4;
mov ymm7_5 lwd_5;
mov ymm7_6 lwd_6;
mov ymm7_7 lwd_7;
mov ymm7_8 lwd_8;
mov ymm7_9 lwd_9;
mov ymm7_a lwd_a;
mov ymm7_b lwd_b;
mov ymm7_c lwd_c;
mov ymm7_d lwd_d;
mov ymm7_e lwd_e;
mov ymm7_f lwd_f;
(* vpunpckhwd %ymm8,%ymm5,%ymm8                    #! PC = 0x55555555922a *)
mov hwd_0 ymm5_4;
mov hwd_1 ymm8_4;
mov hwd_2 ymm5_5;
mov hwd_3 ymm8_5;
mov hwd_4 ymm5_6;
mov hwd_5 ymm8_6;
mov hwd_6 ymm5_7;
mov hwd_7 ymm8_7;
mov hwd_8 ymm5_c;
mov hwd_9 ymm8_c;
mov hwd_a ymm5_d;
mov hwd_b ymm8_d;
mov hwd_c ymm5_e;
mov hwd_d ymm8_e;
mov hwd_e ymm5_f;
mov hwd_f ymm8_f;
mov ymm8_0 hwd_0;
mov ymm8_1 hwd_1;
mov ymm8_2 hwd_2;
mov ymm8_3 hwd_3;
mov ymm8_4 hwd_4;
mov ymm8_5 hwd_5;
mov ymm8_6 hwd_6;
mov ymm8_7 hwd_7;
mov ymm8_8 hwd_8;
mov ymm8_9 hwd_9;
mov ymm8_a hwd_a;
mov ymm8_b hwd_b;
mov ymm8_c hwd_c;
mov ymm8_d hwd_d;
mov ymm8_e hwd_e;
mov ymm8_f hwd_f;
(* vpunpcklwd %ymm11,%ymm4,%ymm5                   #! PC = 0x55555555922f *)
mov lwd_0 ymm4_0;
mov lwd_1 ymm11_0;
mov lwd_2 ymm4_1;
mov lwd_3 ymm11_1;
mov lwd_4 ymm4_2;
mov lwd_5 ymm11_2;
mov lwd_6 ymm4_3;
mov lwd_7 ymm11_3;
mov lwd_8 ymm4_8;
mov lwd_9 ymm11_8;
mov lwd_a ymm4_9;
mov lwd_b ymm11_9;
mov lwd_c ymm4_a;
mov lwd_d ymm11_a;
mov lwd_e ymm4_b;
mov lwd_f ymm11_b;
mov ymm5_0 lwd_0;
mov ymm5_1 lwd_1;
mov ymm5_2 lwd_2;
mov ymm5_3 lwd_3;
mov ymm5_4 lwd_4;
mov ymm5_5 lwd_5;
mov ymm5_6 lwd_6;
mov ymm5_7 lwd_7;
mov ymm5_8 lwd_8;
mov ymm5_9 lwd_9;
mov ymm5_a lwd_a;
mov ymm5_b lwd_b;
mov ymm5_c lwd_c;
mov ymm5_d lwd_d;
mov ymm5_e lwd_e;
mov ymm5_f lwd_f;
(* vpunpckhwd %ymm11,%ymm4,%ymm11                  #! PC = 0x555555559234 *)
mov hwd_0 ymm4_4;
mov hwd_1 ymm11_4;
mov hwd_2 ymm4_5;
mov hwd_3 ymm11_5;
mov hwd_4 ymm4_6;
mov hwd_5 ymm11_6;
mov hwd_6 ymm4_7;
mov hwd_7 ymm11_7;
mov hwd_8 ymm4_c;
mov hwd_9 ymm11_c;
mov hwd_a ymm4_d;
mov hwd_b ymm11_d;
mov hwd_c ymm4_e;
mov hwd_d ymm11_e;
mov hwd_e ymm4_f;
mov hwd_f ymm11_f;
mov ymm11_0 hwd_0;
mov ymm11_1 hwd_1;
mov ymm11_2 hwd_2;
mov ymm11_3 hwd_3;
mov ymm11_4 hwd_4;
mov ymm11_5 hwd_5;
mov ymm11_6 hwd_6;
mov ymm11_7 hwd_7;
mov ymm11_8 hwd_8;
mov ymm11_9 hwd_9;
mov ymm11_a hwd_a;
mov ymm11_b hwd_b;
mov ymm11_c hwd_c;
mov ymm11_d hwd_d;
mov ymm11_e hwd_e;
mov ymm11_f hwd_f;
(* vpbroadcastd 0x150(%rdx),%ymm1                  #! EA = L0x555555561270; Value = 0xa7a15ecddf07cfa6; PC = 0x555555559239 *)
mov ymm1_0 L0x555555561270;
mov ymm1_1 L0x555555561272;
mov ymm1_2 L0x555555561270;
mov ymm1_3 L0x555555561272;
mov ymm1_4 L0x555555561270;
mov ymm1_5 L0x555555561272;
mov ymm1_6 L0x555555561270;
mov ymm1_7 L0x555555561272;
mov ymm1_8 L0x555555561270;
mov ymm1_9 L0x555555561272;
mov ymm1_a L0x555555561270;
mov ymm1_b L0x555555561272;
mov ymm1_c L0x555555561270;
mov ymm1_d L0x555555561272;
mov ymm1_e L0x555555561270;
mov ymm1_f L0x555555561272;
(* vpbroadcastd 0x350(%rdx),%ymm2                  #! EA = L0x555555561470; Value = 0x11a100cd05070ba6; PC = 0x555555559242 *)
mov ymm2_0 L0x555555561470;
mov ymm2_1 L0x555555561472;
mov ymm2_2 L0x555555561470;
mov ymm2_3 L0x555555561472;
mov ymm2_4 L0x555555561470;
mov ymm2_5 L0x555555561472;
mov ymm2_6 L0x555555561470;
mov ymm2_7 L0x555555561472;
mov ymm2_8 L0x555555561470;
mov ymm2_9 L0x555555561472;
mov ymm2_a L0x555555561470;
mov ymm2_b L0x555555561472;
mov ymm2_c L0x555555561470;
mov ymm2_d L0x555555561472;
mov ymm2_e L0x555555561470;
mov ymm2_f L0x555555561472;
(* vpmullw %ymm1,%ymm3,%ymm4                       #! PC = 0x55555555924b *)
smull mulHymm3_0 mulL_0 ymm1_0 ymm3_0;
smull mulHymm3_1 mulL_1 ymm1_1 ymm3_1;
smull mulHymm3_2 mulL_2 ymm1_2 ymm3_2;
smull mulHymm3_3 mulL_3 ymm1_3 ymm3_3;
smull mulHymm3_4 mulL_4 ymm1_4 ymm3_4;
smull mulHymm3_5 mulL_5 ymm1_5 ymm3_5;
smull mulHymm3_6 mulL_6 ymm1_6 ymm3_6;
smull mulHymm3_7 mulL_7 ymm1_7 ymm3_7;
smull mulHymm3_8 mulL_8 ymm1_8 ymm3_8;
smull mulHymm3_9 mulL_9 ymm1_9 ymm3_9;
smull mulHymm3_a mulL_a ymm1_a ymm3_a;
smull mulHymm3_b mulL_b ymm1_b ymm3_b;
smull mulHymm3_c mulL_c ymm1_c ymm3_c;
smull mulHymm3_d mulL_d ymm1_d ymm3_d;
smull mulHymm3_e mulL_e ymm1_e ymm3_e;
smull mulHymm3_f mulL_f ymm1_f ymm3_f;
cast ymm4_0@sint16 mulL_0;
cast ymm4_1@sint16 mulL_1;
cast ymm4_2@sint16 mulL_2;
cast ymm4_3@sint16 mulL_3;
cast ymm4_4@sint16 mulL_4;
cast ymm4_5@sint16 mulL_5;
cast ymm4_6@sint16 mulL_6;
cast ymm4_7@sint16 mulL_7;
cast ymm4_8@sint16 mulL_8;
cast ymm4_9@sint16 mulL_9;
cast ymm4_a@sint16 mulL_a;
cast ymm4_b@sint16 mulL_b;
cast ymm4_c@sint16 mulL_c;
cast ymm4_d@sint16 mulL_d;
cast ymm4_e@sint16 mulL_e;
cast ymm4_f@sint16 mulL_f;
(* vpmulhw %ymm2,%ymm3,%ymm3                       #! PC = 0x55555555924f *)
smull mulH_0 mulLymm3_0 ymm3_0 ymm2_0;
smull mulH_1 mulLymm3_1 ymm3_1 ymm2_1;
smull mulH_2 mulLymm3_2 ymm3_2 ymm2_2;
smull mulH_3 mulLymm3_3 ymm3_3 ymm2_3;
smull mulH_4 mulLymm3_4 ymm3_4 ymm2_4;
smull mulH_5 mulLymm3_5 ymm3_5 ymm2_5;
smull mulH_6 mulLymm3_6 ymm3_6 ymm2_6;
smull mulH_7 mulLymm3_7 ymm3_7 ymm2_7;
smull mulH_8 mulLymm3_8 ymm3_8 ymm2_8;
smull mulH_9 mulLymm3_9 ymm3_9 ymm2_9;
smull mulH_a mulLymm3_a ymm3_a ymm2_a;
smull mulH_b mulLymm3_b ymm3_b ymm2_b;
smull mulH_c mulLymm3_c ymm3_c ymm2_c;
smull mulH_d mulLymm3_d ymm3_d ymm2_d;
smull mulH_e mulLymm3_e ymm3_e ymm2_e;
smull mulH_f mulLymm3_f ymm3_f ymm2_f;
mov ymm3_0 mulH_0;
mov ymm3_1 mulH_1;
mov ymm3_2 mulH_2;
mov ymm3_3 mulH_3;
mov ymm3_4 mulH_4;
mov ymm3_5 mulH_5;
mov ymm3_6 mulH_6;
mov ymm3_7 mulH_7;
mov ymm3_8 mulH_8;
mov ymm3_9 mulH_9;
mov ymm3_a mulH_a;
mov ymm3_b mulH_b;
mov ymm3_c mulH_c;
mov ymm3_d mulH_d;
mov ymm3_e mulH_e;
mov ymm3_f mulH_f;
(* vpmulhw %ymm0,%ymm4,%ymm4                       #! PC = 0x555555559253 *)
smull mulH_0 red_0 ymm4_0 ymm0_0;
assert true && red_0 = mulLymm3_0;
assume red_0 = mulLymm3_0 && true;
smull mulH_1 red_1 ymm4_1 ymm0_1;
assert true && red_1 = mulLymm3_1;
assume red_1 = mulLymm3_1 && true;
smull mulH_2 red_2 ymm4_2 ymm0_2;
assert true && red_2 = mulLymm3_2;
assume red_2 = mulLymm3_2 && true;
smull mulH_3 red_3 ymm4_3 ymm0_3;
assert true && red_3 = mulLymm3_3;
assume red_3 = mulLymm3_3 && true;
smull mulH_4 red_4 ymm4_4 ymm0_4;
assert true && red_4 = mulLymm3_4;
assume red_4 = mulLymm3_4 && true;
smull mulH_5 red_5 ymm4_5 ymm0_5;
assert true && red_5 = mulLymm3_5;
assume red_5 = mulLymm3_5 && true;
smull mulH_6 red_6 ymm4_6 ymm0_6;
assert true && red_6 = mulLymm3_6;
assume red_6 = mulLymm3_6 && true;
smull mulH_7 red_7 ymm4_7 ymm0_7;
assert true && red_7 = mulLymm3_7;
assume red_7 = mulLymm3_7 && true;
smull mulH_8 red_8 ymm4_8 ymm0_8;
assert true && red_8 = mulLymm3_8;
assume red_8 = mulLymm3_8 && true;
smull mulH_9 red_9 ymm4_9 ymm0_9;
assert true && red_9 = mulLymm3_9;
assume red_9 = mulLymm3_9 && true;
smull mulH_a red_a ymm4_a ymm0_a;
assert true && red_a = mulLymm3_a;
assume red_a = mulLymm3_a && true;
smull mulH_b red_b ymm4_b ymm0_b;
assert true && red_b = mulLymm3_b;
assume red_b = mulLymm3_b && true;
smull mulH_c red_c ymm4_c ymm0_c;
assert true && red_c = mulLymm3_c;
assume red_c = mulLymm3_c && true;
smull mulH_d red_d ymm4_d ymm0_d;
assert true && red_d = mulLymm3_d;
assume red_d = mulLymm3_d && true;
smull mulH_e red_e ymm4_e ymm0_e;
assert true && red_e = mulLymm3_e;
assume red_e = mulLymm3_e && true;
smull mulH_f red_f ymm4_f ymm0_f;
assert true && red_f = mulLymm3_f;
assume red_f = mulLymm3_f && true;
mov ymm4_0 mulH_0;
mov ymm4_1 mulH_1;
mov ymm4_2 mulH_2;
mov ymm4_3 mulH_3;
mov ymm4_4 mulH_4;
mov ymm4_5 mulH_5;
mov ymm4_6 mulH_6;
mov ymm4_7 mulH_7;
mov ymm4_8 mulH_8;
mov ymm4_9 mulH_9;
mov ymm4_a mulH_a;
mov ymm4_b mulH_b;
mov ymm4_c mulH_c;
mov ymm4_d mulH_d;
mov ymm4_e mulH_e;
mov ymm4_f mulH_f;
(* vpsubw %ymm4,%ymm3,%ymm3                        #! PC = 0x555555559257 *)
sub ymm3_0 ymm3_0 ymm4_0;
sub ymm3_1 ymm3_1 ymm4_1;
sub ymm3_2 ymm3_2 ymm4_2;
sub ymm3_3 ymm3_3 ymm4_3;
sub ymm3_4 ymm3_4 ymm4_4;
sub ymm3_5 ymm3_5 ymm4_5;
sub ymm3_6 ymm3_6 ymm4_6;
sub ymm3_7 ymm3_7 ymm4_7;
sub ymm3_8 ymm3_8 ymm4_8;
sub ymm3_9 ymm3_9 ymm4_9;
sub ymm3_a ymm3_a ymm4_a;
sub ymm3_b ymm3_b ymm4_b;
sub ymm3_c ymm3_c ymm4_c;
sub ymm3_d ymm3_d ymm4_d;
sub ymm3_e ymm3_e ymm4_e;
sub ymm3_f ymm3_f ymm4_f;
(* vpbroadcastd 0x154(%rdx),%ymm1                  #! EA = L0x555555561274; Value = 0x4b7ec7fba7a15ecd; PC = 0x55555555925b *)
mov ymm1_0 L0x555555561274;
mov ymm1_1 L0x555555561276;
mov ymm1_2 L0x555555561274;
mov ymm1_3 L0x555555561276;
mov ymm1_4 L0x555555561274;
mov ymm1_5 L0x555555561276;
mov ymm1_6 L0x555555561274;
mov ymm1_7 L0x555555561276;
mov ymm1_8 L0x555555561274;
mov ymm1_9 L0x555555561276;
mov ymm1_a L0x555555561274;
mov ymm1_b L0x555555561276;
mov ymm1_c L0x555555561274;
mov ymm1_d L0x555555561276;
mov ymm1_e L0x555555561274;
mov ymm1_f L0x555555561276;
(* vpbroadcastd 0x354(%rdx),%ymm2                  #! EA = L0x555555561474; Value = 0xf77ef5fb11a100cd; PC = 0x555555559264 *)
mov ymm2_0 L0x555555561474;
mov ymm2_1 L0x555555561476;
mov ymm2_2 L0x555555561474;
mov ymm2_3 L0x555555561476;
mov ymm2_4 L0x555555561474;
mov ymm2_5 L0x555555561476;
mov ymm2_6 L0x555555561474;
mov ymm2_7 L0x555555561476;
mov ymm2_8 L0x555555561474;
mov ymm2_9 L0x555555561476;
mov ymm2_a L0x555555561474;
mov ymm2_b L0x555555561476;
mov ymm2_c L0x555555561474;
mov ymm2_d L0x555555561476;
mov ymm2_e L0x555555561474;
mov ymm2_f L0x555555561476;
(* vpmullw %ymm1,%ymm6,%ymm4                       #! PC = 0x55555555926d *)
smull mulHymm6_0 mulL_0 ymm1_0 ymm6_0;
smull mulHymm6_1 mulL_1 ymm1_1 ymm6_1;
smull mulHymm6_2 mulL_2 ymm1_2 ymm6_2;
smull mulHymm6_3 mulL_3 ymm1_3 ymm6_3;
smull mulHymm6_4 mulL_4 ymm1_4 ymm6_4;
smull mulHymm6_5 mulL_5 ymm1_5 ymm6_5;
smull mulHymm6_6 mulL_6 ymm1_6 ymm6_6;
smull mulHymm6_7 mulL_7 ymm1_7 ymm6_7;
smull mulHymm6_8 mulL_8 ymm1_8 ymm6_8;
smull mulHymm6_9 mulL_9 ymm1_9 ymm6_9;
smull mulHymm6_a mulL_a ymm1_a ymm6_a;
smull mulHymm6_b mulL_b ymm1_b ymm6_b;
smull mulHymm6_c mulL_c ymm1_c ymm6_c;
smull mulHymm6_d mulL_d ymm1_d ymm6_d;
smull mulHymm6_e mulL_e ymm1_e ymm6_e;
smull mulHymm6_f mulL_f ymm1_f ymm6_f;
cast ymm4_0@sint16 mulL_0;
cast ymm4_1@sint16 mulL_1;
cast ymm4_2@sint16 mulL_2;
cast ymm4_3@sint16 mulL_3;
cast ymm4_4@sint16 mulL_4;
cast ymm4_5@sint16 mulL_5;
cast ymm4_6@sint16 mulL_6;
cast ymm4_7@sint16 mulL_7;
cast ymm4_8@sint16 mulL_8;
cast ymm4_9@sint16 mulL_9;
cast ymm4_a@sint16 mulL_a;
cast ymm4_b@sint16 mulL_b;
cast ymm4_c@sint16 mulL_c;
cast ymm4_d@sint16 mulL_d;
cast ymm4_e@sint16 mulL_e;
cast ymm4_f@sint16 mulL_f;
(* vpmulhw %ymm2,%ymm6,%ymm6                       #! PC = 0x555555559271 *)
smull mulH_0 mulLymm6_0 ymm6_0 ymm2_0;
smull mulH_1 mulLymm6_1 ymm6_1 ymm2_1;
smull mulH_2 mulLymm6_2 ymm6_2 ymm2_2;
smull mulH_3 mulLymm6_3 ymm6_3 ymm2_3;
smull mulH_4 mulLymm6_4 ymm6_4 ymm2_4;
smull mulH_5 mulLymm6_5 ymm6_5 ymm2_5;
smull mulH_6 mulLymm6_6 ymm6_6 ymm2_6;
smull mulH_7 mulLymm6_7 ymm6_7 ymm2_7;
smull mulH_8 mulLymm6_8 ymm6_8 ymm2_8;
smull mulH_9 mulLymm6_9 ymm6_9 ymm2_9;
smull mulH_a mulLymm6_a ymm6_a ymm2_a;
smull mulH_b mulLymm6_b ymm6_b ymm2_b;
smull mulH_c mulLymm6_c ymm6_c ymm2_c;
smull mulH_d mulLymm6_d ymm6_d ymm2_d;
smull mulH_e mulLymm6_e ymm6_e ymm2_e;
smull mulH_f mulLymm6_f ymm6_f ymm2_f;
mov ymm6_0 mulH_0;
mov ymm6_1 mulH_1;
mov ymm6_2 mulH_2;
mov ymm6_3 mulH_3;
mov ymm6_4 mulH_4;
mov ymm6_5 mulH_5;
mov ymm6_6 mulH_6;
mov ymm6_7 mulH_7;
mov ymm6_8 mulH_8;
mov ymm6_9 mulH_9;
mov ymm6_a mulH_a;
mov ymm6_b mulH_b;
mov ymm6_c mulH_c;
mov ymm6_d mulH_d;
mov ymm6_e mulH_e;
mov ymm6_f mulH_f;
(* vpmulhw %ymm0,%ymm4,%ymm4                       #! PC = 0x555555559275 *)
smull mulH_0 red_0 ymm4_0 ymm0_0;
assert true && red_0 = mulLymm6_0;
assume red_0 = mulLymm6_0 && true;
smull mulH_1 red_1 ymm4_1 ymm0_1;
assert true && red_1 = mulLymm6_1;
assume red_1 = mulLymm6_1 && true;
smull mulH_2 red_2 ymm4_2 ymm0_2;
assert true && red_2 = mulLymm6_2;
assume red_2 = mulLymm6_2 && true;
smull mulH_3 red_3 ymm4_3 ymm0_3;
assert true && red_3 = mulLymm6_3;
assume red_3 = mulLymm6_3 && true;
smull mulH_4 red_4 ymm4_4 ymm0_4;
assert true && red_4 = mulLymm6_4;
assume red_4 = mulLymm6_4 && true;
smull mulH_5 red_5 ymm4_5 ymm0_5;
assert true && red_5 = mulLymm6_5;
assume red_5 = mulLymm6_5 && true;
smull mulH_6 red_6 ymm4_6 ymm0_6;
assert true && red_6 = mulLymm6_6;
assume red_6 = mulLymm6_6 && true;
smull mulH_7 red_7 ymm4_7 ymm0_7;
assert true && red_7 = mulLymm6_7;
assume red_7 = mulLymm6_7 && true;
smull mulH_8 red_8 ymm4_8 ymm0_8;
assert true && red_8 = mulLymm6_8;
assume red_8 = mulLymm6_8 && true;
smull mulH_9 red_9 ymm4_9 ymm0_9;
assert true && red_9 = mulLymm6_9;
assume red_9 = mulLymm6_9 && true;
smull mulH_a red_a ymm4_a ymm0_a;
assert true && red_a = mulLymm6_a;
assume red_a = mulLymm6_a && true;
smull mulH_b red_b ymm4_b ymm0_b;
assert true && red_b = mulLymm6_b;
assume red_b = mulLymm6_b && true;
smull mulH_c red_c ymm4_c ymm0_c;
assert true && red_c = mulLymm6_c;
assume red_c = mulLymm6_c && true;
smull mulH_d red_d ymm4_d ymm0_d;
assert true && red_d = mulLymm6_d;
assume red_d = mulLymm6_d && true;
smull mulH_e red_e ymm4_e ymm0_e;
assert true && red_e = mulLymm6_e;
assume red_e = mulLymm6_e && true;
smull mulH_f red_f ymm4_f ymm0_f;
assert true && red_f = mulLymm6_f;
assume red_f = mulLymm6_f && true;
mov ymm4_0 mulH_0;
mov ymm4_1 mulH_1;
mov ymm4_2 mulH_2;
mov ymm4_3 mulH_3;
mov ymm4_4 mulH_4;
mov ymm4_5 mulH_5;
mov ymm4_6 mulH_6;
mov ymm4_7 mulH_7;
mov ymm4_8 mulH_8;
mov ymm4_9 mulH_9;
mov ymm4_a mulH_a;
mov ymm4_b mulH_b;
mov ymm4_c mulH_c;
mov ymm4_d mulH_d;
mov ymm4_e mulH_e;
mov ymm4_f mulH_f;
(* vpsubw %ymm4,%ymm6,%ymm6                        #! PC = 0x555555559279 *)
sub ymm6_0 ymm6_0 ymm4_0;
sub ymm6_1 ymm6_1 ymm4_1;
sub ymm6_2 ymm6_2 ymm4_2;
sub ymm6_3 ymm6_3 ymm4_3;
sub ymm6_4 ymm6_4 ymm4_4;
sub ymm6_5 ymm6_5 ymm4_5;
sub ymm6_6 ymm6_6 ymm4_6;
sub ymm6_7 ymm6_7 ymm4_7;
sub ymm6_8 ymm6_8 ymm4_8;
sub ymm6_9 ymm6_9 ymm4_9;
sub ymm6_a ymm6_a ymm4_a;
sub ymm6_b ymm6_b ymm4_b;
sub ymm6_c ymm6_c ymm4_c;
sub ymm6_d ymm6_d ymm4_d;
sub ymm6_e ymm6_e ymm4_e;
sub ymm6_f ymm6_f ymm4_f;
(* vpbroadcastd 0x158(%rdx),%ymm1                  #! EA = L0x555555561278; Value = 0xa93fc2084b7ec7fb; PC = 0x55555555927d *)
mov ymm1_0 L0x555555561278;
mov ymm1_1 L0x55555556127a;
mov ymm1_2 L0x555555561278;
mov ymm1_3 L0x55555556127a;
mov ymm1_4 L0x555555561278;
mov ymm1_5 L0x55555556127a;
mov ymm1_6 L0x555555561278;
mov ymm1_7 L0x55555556127a;
mov ymm1_8 L0x555555561278;
mov ymm1_9 L0x55555556127a;
mov ymm1_a L0x555555561278;
mov ymm1_b L0x55555556127a;
mov ymm1_c L0x555555561278;
mov ymm1_d L0x55555556127a;
mov ymm1_e L0x555555561278;
mov ymm1_f L0x55555556127a;
(* vpbroadcastd 0x358(%rdx),%ymm2                  #! EA = L0x555555561478; Value = 0xff3f1208f77ef5fb; PC = 0x555555559286 *)
mov ymm2_0 L0x555555561478;
mov ymm2_1 L0x55555556147a;
mov ymm2_2 L0x555555561478;
mov ymm2_3 L0x55555556147a;
mov ymm2_4 L0x555555561478;
mov ymm2_5 L0x55555556147a;
mov ymm2_6 L0x555555561478;
mov ymm2_7 L0x55555556147a;
mov ymm2_8 L0x555555561478;
mov ymm2_9 L0x55555556147a;
mov ymm2_a L0x555555561478;
mov ymm2_b L0x55555556147a;
mov ymm2_c L0x555555561478;
mov ymm2_d L0x55555556147a;
mov ymm2_e L0x555555561478;
mov ymm2_f L0x55555556147a;
(* vpmullw %ymm1,%ymm8,%ymm4                       #! PC = 0x55555555928f *)
smull mulHymm8_0 mulL_0 ymm1_0 ymm8_0;
smull mulHymm8_1 mulL_1 ymm1_1 ymm8_1;
smull mulHymm8_2 mulL_2 ymm1_2 ymm8_2;
smull mulHymm8_3 mulL_3 ymm1_3 ymm8_3;
smull mulHymm8_4 mulL_4 ymm1_4 ymm8_4;
smull mulHymm8_5 mulL_5 ymm1_5 ymm8_5;
smull mulHymm8_6 mulL_6 ymm1_6 ymm8_6;
smull mulHymm8_7 mulL_7 ymm1_7 ymm8_7;
smull mulHymm8_8 mulL_8 ymm1_8 ymm8_8;
smull mulHymm8_9 mulL_9 ymm1_9 ymm8_9;
smull mulHymm8_a mulL_a ymm1_a ymm8_a;
smull mulHymm8_b mulL_b ymm1_b ymm8_b;
smull mulHymm8_c mulL_c ymm1_c ymm8_c;
smull mulHymm8_d mulL_d ymm1_d ymm8_d;
smull mulHymm8_e mulL_e ymm1_e ymm8_e;
smull mulHymm8_f mulL_f ymm1_f ymm8_f;
cast ymm4_0@sint16 mulL_0;
cast ymm4_1@sint16 mulL_1;
cast ymm4_2@sint16 mulL_2;
cast ymm4_3@sint16 mulL_3;
cast ymm4_4@sint16 mulL_4;
cast ymm4_5@sint16 mulL_5;
cast ymm4_6@sint16 mulL_6;
cast ymm4_7@sint16 mulL_7;
cast ymm4_8@sint16 mulL_8;
cast ymm4_9@sint16 mulL_9;
cast ymm4_a@sint16 mulL_a;
cast ymm4_b@sint16 mulL_b;
cast ymm4_c@sint16 mulL_c;
cast ymm4_d@sint16 mulL_d;
cast ymm4_e@sint16 mulL_e;
cast ymm4_f@sint16 mulL_f;
(* vpmulhw %ymm2,%ymm8,%ymm8                       #! PC = 0x555555559293 *)
smull mulH_0 mulLymm8_0 ymm8_0 ymm2_0;
smull mulH_1 mulLymm8_1 ymm8_1 ymm2_1;
smull mulH_2 mulLymm8_2 ymm8_2 ymm2_2;
smull mulH_3 mulLymm8_3 ymm8_3 ymm2_3;
smull mulH_4 mulLymm8_4 ymm8_4 ymm2_4;
smull mulH_5 mulLymm8_5 ymm8_5 ymm2_5;
smull mulH_6 mulLymm8_6 ymm8_6 ymm2_6;
smull mulH_7 mulLymm8_7 ymm8_7 ymm2_7;
smull mulH_8 mulLymm8_8 ymm8_8 ymm2_8;
smull mulH_9 mulLymm8_9 ymm8_9 ymm2_9;
smull mulH_a mulLymm8_a ymm8_a ymm2_a;
smull mulH_b mulLymm8_b ymm8_b ymm2_b;
smull mulH_c mulLymm8_c ymm8_c ymm2_c;
smull mulH_d mulLymm8_d ymm8_d ymm2_d;
smull mulH_e mulLymm8_e ymm8_e ymm2_e;
smull mulH_f mulLymm8_f ymm8_f ymm2_f;
mov ymm8_0 mulH_0;
mov ymm8_1 mulH_1;
mov ymm8_2 mulH_2;
mov ymm8_3 mulH_3;
mov ymm8_4 mulH_4;
mov ymm8_5 mulH_5;
mov ymm8_6 mulH_6;
mov ymm8_7 mulH_7;
mov ymm8_8 mulH_8;
mov ymm8_9 mulH_9;
mov ymm8_a mulH_a;
mov ymm8_b mulH_b;
mov ymm8_c mulH_c;
mov ymm8_d mulH_d;
mov ymm8_e mulH_e;
mov ymm8_f mulH_f;
(* vpmulhw %ymm0,%ymm4,%ymm4                       #! PC = 0x555555559297 *)
smull mulH_0 red_0 ymm4_0 ymm0_0;
assert true && red_0 = mulLymm8_0;
assume red_0 = mulLymm8_0 && true;
smull mulH_1 red_1 ymm4_1 ymm0_1;
assert true && red_1 = mulLymm8_1;
assume red_1 = mulLymm8_1 && true;
smull mulH_2 red_2 ymm4_2 ymm0_2;
assert true && red_2 = mulLymm8_2;
assume red_2 = mulLymm8_2 && true;
smull mulH_3 red_3 ymm4_3 ymm0_3;
assert true && red_3 = mulLymm8_3;
assume red_3 = mulLymm8_3 && true;
smull mulH_4 red_4 ymm4_4 ymm0_4;
assert true && red_4 = mulLymm8_4;
assume red_4 = mulLymm8_4 && true;
smull mulH_5 red_5 ymm4_5 ymm0_5;
assert true && red_5 = mulLymm8_5;
assume red_5 = mulLymm8_5 && true;
smull mulH_6 red_6 ymm4_6 ymm0_6;
assert true && red_6 = mulLymm8_6;
assume red_6 = mulLymm8_6 && true;
smull mulH_7 red_7 ymm4_7 ymm0_7;
assert true && red_7 = mulLymm8_7;
assume red_7 = mulLymm8_7 && true;
smull mulH_8 red_8 ymm4_8 ymm0_8;
assert true && red_8 = mulLymm8_8;
assume red_8 = mulLymm8_8 && true;
smull mulH_9 red_9 ymm4_9 ymm0_9;
assert true && red_9 = mulLymm8_9;
assume red_9 = mulLymm8_9 && true;
smull mulH_a red_a ymm4_a ymm0_a;
assert true && red_a = mulLymm8_a;
assume red_a = mulLymm8_a && true;
smull mulH_b red_b ymm4_b ymm0_b;
assert true && red_b = mulLymm8_b;
assume red_b = mulLymm8_b && true;
smull mulH_c red_c ymm4_c ymm0_c;
assert true && red_c = mulLymm8_c;
assume red_c = mulLymm8_c && true;
smull mulH_d red_d ymm4_d ymm0_d;
assert true && red_d = mulLymm8_d;
assume red_d = mulLymm8_d && true;
smull mulH_e red_e ymm4_e ymm0_e;
assert true && red_e = mulLymm8_e;
assume red_e = mulLymm8_e && true;
smull mulH_f red_f ymm4_f ymm0_f;
assert true && red_f = mulLymm8_f;
assume red_f = mulLymm8_f && true;
mov ymm4_0 mulH_0;
mov ymm4_1 mulH_1;
mov ymm4_2 mulH_2;
mov ymm4_3 mulH_3;
mov ymm4_4 mulH_4;
mov ymm4_5 mulH_5;
mov ymm4_6 mulH_6;
mov ymm4_7 mulH_7;
mov ymm4_8 mulH_8;
mov ymm4_9 mulH_9;
mov ymm4_a mulH_a;
mov ymm4_b mulH_b;
mov ymm4_c mulH_c;
mov ymm4_d mulH_d;
mov ymm4_e mulH_e;
mov ymm4_f mulH_f;
(* vpsubw %ymm4,%ymm8,%ymm8                        #! PC = 0x55555555929b *)
sub ymm8_0 ymm8_0 ymm4_0;
sub ymm8_1 ymm8_1 ymm4_1;
sub ymm8_2 ymm8_2 ymm4_2;
sub ymm8_3 ymm8_3 ymm4_3;
sub ymm8_4 ymm8_4 ymm4_4;
sub ymm8_5 ymm8_5 ymm4_5;
sub ymm8_6 ymm8_6 ymm4_6;
sub ymm8_7 ymm8_7 ymm4_7;
sub ymm8_8 ymm8_8 ymm4_8;
sub ymm8_9 ymm8_9 ymm4_9;
sub ymm8_a ymm8_a ymm4_a;
sub ymm8_b ymm8_b ymm4_b;
sub ymm8_c ymm8_c ymm4_c;
sub ymm8_d ymm8_d ymm4_d;
sub ymm8_e ymm8_e ymm4_e;
sub ymm8_f ymm8_f ymm4_f;
(* vpbroadcastd 0x15c(%rdx),%ymm1                  #! EA = L0x55555556127c; Value = 0x1686ebfaa93fc208; PC = 0x55555555929f *)
mov ymm1_0 L0x55555556127c;
mov ymm1_1 L0x55555556127e;
mov ymm1_2 L0x55555556127c;
mov ymm1_3 L0x55555556127e;
mov ymm1_4 L0x55555556127c;
mov ymm1_5 L0x55555556127e;
mov ymm1_6 L0x55555556127c;
mov ymm1_7 L0x55555556127e;
mov ymm1_8 L0x55555556127c;
mov ymm1_9 L0x55555556127e;
mov ymm1_a L0x55555556127c;
mov ymm1_b L0x55555556127e;
mov ymm1_c L0x55555556127c;
mov ymm1_d L0x55555556127e;
mov ymm1_e L0x55555556127c;
mov ymm1_f L0x55555556127e;
(* vpbroadcastd 0x35c(%rdx),%ymm2                  #! EA = L0x55555556147c; Value = 0x1286effaff3f1208; PC = 0x5555555592a8 *)
mov ymm2_0 L0x55555556147c;
mov ymm2_1 L0x55555556147e;
mov ymm2_2 L0x55555556147c;
mov ymm2_3 L0x55555556147e;
mov ymm2_4 L0x55555556147c;
mov ymm2_5 L0x55555556147e;
mov ymm2_6 L0x55555556147c;
mov ymm2_7 L0x55555556147e;
mov ymm2_8 L0x55555556147c;
mov ymm2_9 L0x55555556147e;
mov ymm2_a L0x55555556147c;
mov ymm2_b L0x55555556147e;
mov ymm2_c L0x55555556147c;
mov ymm2_d L0x55555556147e;
mov ymm2_e L0x55555556147c;
mov ymm2_f L0x55555556147e;
(* vpmullw %ymm1,%ymm11,%ymm4                      #! PC = 0x5555555592b1 *)
smull mulHymm11_0 mulL_0 ymm1_0 ymm11_0;
smull mulHymm11_1 mulL_1 ymm1_1 ymm11_1;
smull mulHymm11_2 mulL_2 ymm1_2 ymm11_2;
smull mulHymm11_3 mulL_3 ymm1_3 ymm11_3;
smull mulHymm11_4 mulL_4 ymm1_4 ymm11_4;
smull mulHymm11_5 mulL_5 ymm1_5 ymm11_5;
smull mulHymm11_6 mulL_6 ymm1_6 ymm11_6;
smull mulHymm11_7 mulL_7 ymm1_7 ymm11_7;
smull mulHymm11_8 mulL_8 ymm1_8 ymm11_8;
smull mulHymm11_9 mulL_9 ymm1_9 ymm11_9;
smull mulHymm11_a mulL_a ymm1_a ymm11_a;
smull mulHymm11_b mulL_b ymm1_b ymm11_b;
smull mulHymm11_c mulL_c ymm1_c ymm11_c;
smull mulHymm11_d mulL_d ymm1_d ymm11_d;
smull mulHymm11_e mulL_e ymm1_e ymm11_e;
smull mulHymm11_f mulL_f ymm1_f ymm11_f;
cast ymm4_0@sint16 mulL_0;
cast ymm4_1@sint16 mulL_1;
cast ymm4_2@sint16 mulL_2;
cast ymm4_3@sint16 mulL_3;
cast ymm4_4@sint16 mulL_4;
cast ymm4_5@sint16 mulL_5;
cast ymm4_6@sint16 mulL_6;
cast ymm4_7@sint16 mulL_7;
cast ymm4_8@sint16 mulL_8;
cast ymm4_9@sint16 mulL_9;
cast ymm4_a@sint16 mulL_a;
cast ymm4_b@sint16 mulL_b;
cast ymm4_c@sint16 mulL_c;
cast ymm4_d@sint16 mulL_d;
cast ymm4_e@sint16 mulL_e;
cast ymm4_f@sint16 mulL_f;
(* vpmulhw %ymm2,%ymm11,%ymm11                     #! PC = 0x5555555592b5 *)
smull mulH_0 mulLymm11_0 ymm11_0 ymm2_0;
smull mulH_1 mulLymm11_1 ymm11_1 ymm2_1;
smull mulH_2 mulLymm11_2 ymm11_2 ymm2_2;
smull mulH_3 mulLymm11_3 ymm11_3 ymm2_3;
smull mulH_4 mulLymm11_4 ymm11_4 ymm2_4;
smull mulH_5 mulLymm11_5 ymm11_5 ymm2_5;
smull mulH_6 mulLymm11_6 ymm11_6 ymm2_6;
smull mulH_7 mulLymm11_7 ymm11_7 ymm2_7;
smull mulH_8 mulLymm11_8 ymm11_8 ymm2_8;
smull mulH_9 mulLymm11_9 ymm11_9 ymm2_9;
smull mulH_a mulLymm11_a ymm11_a ymm2_a;
smull mulH_b mulLymm11_b ymm11_b ymm2_b;
smull mulH_c mulLymm11_c ymm11_c ymm2_c;
smull mulH_d mulLymm11_d ymm11_d ymm2_d;
smull mulH_e mulLymm11_e ymm11_e ymm2_e;
smull mulH_f mulLymm11_f ymm11_f ymm2_f;
mov ymm11_0 mulH_0;
mov ymm11_1 mulH_1;
mov ymm11_2 mulH_2;
mov ymm11_3 mulH_3;
mov ymm11_4 mulH_4;
mov ymm11_5 mulH_5;
mov ymm11_6 mulH_6;
mov ymm11_7 mulH_7;
mov ymm11_8 mulH_8;
mov ymm11_9 mulH_9;
mov ymm11_a mulH_a;
mov ymm11_b mulH_b;
mov ymm11_c mulH_c;
mov ymm11_d mulH_d;
mov ymm11_e mulH_e;
mov ymm11_f mulH_f;
(* vpmulhw %ymm0,%ymm4,%ymm4                       #! PC = 0x5555555592b9 *)
smull mulH_0 red_0 ymm4_0 ymm0_0;
assert true && red_0 = mulLymm11_0;
assume red_0 = mulLymm11_0 && true;
smull mulH_1 red_1 ymm4_1 ymm0_1;
assert true && red_1 = mulLymm11_1;
assume red_1 = mulLymm11_1 && true;
smull mulH_2 red_2 ymm4_2 ymm0_2;
assert true && red_2 = mulLymm11_2;
assume red_2 = mulLymm11_2 && true;
smull mulH_3 red_3 ymm4_3 ymm0_3;
assert true && red_3 = mulLymm11_3;
assume red_3 = mulLymm11_3 && true;
smull mulH_4 red_4 ymm4_4 ymm0_4;
assert true && red_4 = mulLymm11_4;
assume red_4 = mulLymm11_4 && true;
smull mulH_5 red_5 ymm4_5 ymm0_5;
assert true && red_5 = mulLymm11_5;
assume red_5 = mulLymm11_5 && true;
smull mulH_6 red_6 ymm4_6 ymm0_6;
assert true && red_6 = mulLymm11_6;
assume red_6 = mulLymm11_6 && true;
smull mulH_7 red_7 ymm4_7 ymm0_7;
assert true && red_7 = mulLymm11_7;
assume red_7 = mulLymm11_7 && true;
smull mulH_8 red_8 ymm4_8 ymm0_8;
assert true && red_8 = mulLymm11_8;
assume red_8 = mulLymm11_8 && true;
smull mulH_9 red_9 ymm4_9 ymm0_9;
assert true && red_9 = mulLymm11_9;
assume red_9 = mulLymm11_9 && true;
smull mulH_a red_a ymm4_a ymm0_a;
assert true && red_a = mulLymm11_a;
assume red_a = mulLymm11_a && true;
smull mulH_b red_b ymm4_b ymm0_b;
assert true && red_b = mulLymm11_b;
assume red_b = mulLymm11_b && true;
smull mulH_c red_c ymm4_c ymm0_c;
assert true && red_c = mulLymm11_c;
assume red_c = mulLymm11_c && true;
smull mulH_d red_d ymm4_d ymm0_d;
assert true && red_d = mulLymm11_d;
assume red_d = mulLymm11_d && true;
smull mulH_e red_e ymm4_e ymm0_e;
assert true && red_e = mulLymm11_e;
assume red_e = mulLymm11_e && true;
smull mulH_f red_f ymm4_f ymm0_f;
assert true && red_f = mulLymm11_f;
assume red_f = mulLymm11_f && true;
mov ymm4_0 mulH_0;
mov ymm4_1 mulH_1;
mov ymm4_2 mulH_2;
mov ymm4_3 mulH_3;
mov ymm4_4 mulH_4;
mov ymm4_5 mulH_5;
mov ymm4_6 mulH_6;
mov ymm4_7 mulH_7;
mov ymm4_8 mulH_8;
mov ymm4_9 mulH_9;
mov ymm4_a mulH_a;
mov ymm4_b mulH_b;
mov ymm4_c mulH_c;
mov ymm4_d mulH_d;
mov ymm4_e mulH_e;
mov ymm4_f mulH_f;
(* vpsubw %ymm4,%ymm11,%ymm11                      #! PC = 0x5555555592bd *)
sub ymm11_0 ymm11_0 ymm4_0;
sub ymm11_1 ymm11_1 ymm4_1;
sub ymm11_2 ymm11_2 ymm4_2;
sub ymm11_3 ymm11_3 ymm4_3;
sub ymm11_4 ymm11_4 ymm4_4;
sub ymm11_5 ymm11_5 ymm4_5;
sub ymm11_6 ymm11_6 ymm4_6;
sub ymm11_7 ymm11_7 ymm4_7;
sub ymm11_8 ymm11_8 ymm4_8;
sub ymm11_9 ymm11_9 ymm4_9;
sub ymm11_a ymm11_a ymm4_a;
sub ymm11_b ymm11_b ymm4_b;
sub ymm11_c ymm11_c ymm4_c;
sub ymm11_d ymm11_d ymm4_d;
sub ymm11_e ymm11_e ymm4_e;
sub ymm11_f ymm11_f ymm4_f;
(* vpaddw %ymm3,%ymm10,%ymm4                       #! PC = 0x5555555592c1 *)
add ymm4_0 ymm10_0 ymm3_0;
add ymm4_1 ymm10_1 ymm3_1;
add ymm4_2 ymm10_2 ymm3_2;
add ymm4_3 ymm10_3 ymm3_3;
add ymm4_4 ymm10_4 ymm3_4;
add ymm4_5 ymm10_5 ymm3_5;
add ymm4_6 ymm10_6 ymm3_6;
add ymm4_7 ymm10_7 ymm3_7;
add ymm4_8 ymm10_8 ymm3_8;
add ymm4_9 ymm10_9 ymm3_9;
add ymm4_a ymm10_a ymm3_a;
add ymm4_b ymm10_b ymm3_b;
add ymm4_c ymm10_c ymm3_c;
add ymm4_d ymm10_d ymm3_d;
add ymm4_e ymm10_e ymm3_e;
add ymm4_f ymm10_f ymm3_f;
(* vpsubw %ymm3,%ymm10,%ymm3                       #! PC = 0x5555555592c5 *)
sub ymm3_0 ymm10_0 ymm3_0;
sub ymm3_1 ymm10_1 ymm3_1;
sub ymm3_2 ymm10_2 ymm3_2;
sub ymm3_3 ymm10_3 ymm3_3;
sub ymm3_4 ymm10_4 ymm3_4;
sub ymm3_5 ymm10_5 ymm3_5;
sub ymm3_6 ymm10_6 ymm3_6;
sub ymm3_7 ymm10_7 ymm3_7;
sub ymm3_8 ymm10_8 ymm3_8;
sub ymm3_9 ymm10_9 ymm3_9;
sub ymm3_a ymm10_a ymm3_a;
sub ymm3_b ymm10_b ymm3_b;
sub ymm3_c ymm10_c ymm3_c;
sub ymm3_d ymm10_d ymm3_d;
sub ymm3_e ymm10_e ymm3_e;
sub ymm3_f ymm10_f ymm3_f;
(* vpaddw %ymm6,%ymm9,%ymm10                       #! PC = 0x5555555592c9 *)
add ymm10_0 ymm9_0 ymm6_0;
add ymm10_1 ymm9_1 ymm6_1;
add ymm10_2 ymm9_2 ymm6_2;
add ymm10_3 ymm9_3 ymm6_3;
add ymm10_4 ymm9_4 ymm6_4;
add ymm10_5 ymm9_5 ymm6_5;
add ymm10_6 ymm9_6 ymm6_6;
add ymm10_7 ymm9_7 ymm6_7;
add ymm10_8 ymm9_8 ymm6_8;
add ymm10_9 ymm9_9 ymm6_9;
add ymm10_a ymm9_a ymm6_a;
add ymm10_b ymm9_b ymm6_b;
add ymm10_c ymm9_c ymm6_c;
add ymm10_d ymm9_d ymm6_d;
add ymm10_e ymm9_e ymm6_e;
add ymm10_f ymm9_f ymm6_f;
(* vpsubw %ymm6,%ymm9,%ymm6                        #! PC = 0x5555555592cd *)
sub ymm6_0 ymm9_0 ymm6_0;
sub ymm6_1 ymm9_1 ymm6_1;
sub ymm6_2 ymm9_2 ymm6_2;
sub ymm6_3 ymm9_3 ymm6_3;
sub ymm6_4 ymm9_4 ymm6_4;
sub ymm6_5 ymm9_5 ymm6_5;
sub ymm6_6 ymm9_6 ymm6_6;
sub ymm6_7 ymm9_7 ymm6_7;
sub ymm6_8 ymm9_8 ymm6_8;
sub ymm6_9 ymm9_9 ymm6_9;
sub ymm6_a ymm9_a ymm6_a;
sub ymm6_b ymm9_b ymm6_b;
sub ymm6_c ymm9_c ymm6_c;
sub ymm6_d ymm9_d ymm6_d;
sub ymm6_e ymm9_e ymm6_e;
sub ymm6_f ymm9_f ymm6_f;
(* vpaddw %ymm8,%ymm7,%ymm9                        #! PC = 0x5555555592d1 *)
add ymm9_0 ymm7_0 ymm8_0;
add ymm9_1 ymm7_1 ymm8_1;
add ymm9_2 ymm7_2 ymm8_2;
add ymm9_3 ymm7_3 ymm8_3;
add ymm9_4 ymm7_4 ymm8_4;
add ymm9_5 ymm7_5 ymm8_5;
add ymm9_6 ymm7_6 ymm8_6;
add ymm9_7 ymm7_7 ymm8_7;
add ymm9_8 ymm7_8 ymm8_8;
add ymm9_9 ymm7_9 ymm8_9;
add ymm9_a ymm7_a ymm8_a;
add ymm9_b ymm7_b ymm8_b;
add ymm9_c ymm7_c ymm8_c;
add ymm9_d ymm7_d ymm8_d;
add ymm9_e ymm7_e ymm8_e;
add ymm9_f ymm7_f ymm8_f;
(* vpsubw %ymm8,%ymm7,%ymm8                        #! PC = 0x5555555592d6 *)
sub ymm8_0 ymm7_0 ymm8_0;
sub ymm8_1 ymm7_1 ymm8_1;
sub ymm8_2 ymm7_2 ymm8_2;
sub ymm8_3 ymm7_3 ymm8_3;
sub ymm8_4 ymm7_4 ymm8_4;
sub ymm8_5 ymm7_5 ymm8_5;
sub ymm8_6 ymm7_6 ymm8_6;
sub ymm8_7 ymm7_7 ymm8_7;
sub ymm8_8 ymm7_8 ymm8_8;
sub ymm8_9 ymm7_9 ymm8_9;
sub ymm8_a ymm7_a ymm8_a;
sub ymm8_b ymm7_b ymm8_b;
sub ymm8_c ymm7_c ymm8_c;
sub ymm8_d ymm7_d ymm8_d;
sub ymm8_e ymm7_e ymm8_e;
sub ymm8_f ymm7_f ymm8_f;
(* vpaddw %ymm11,%ymm5,%ymm7                       #! PC = 0x5555555592db *)
add ymm7_0 ymm5_0 ymm11_0;
add ymm7_1 ymm5_1 ymm11_1;
add ymm7_2 ymm5_2 ymm11_2;
add ymm7_3 ymm5_3 ymm11_3;
add ymm7_4 ymm5_4 ymm11_4;
add ymm7_5 ymm5_5 ymm11_5;
add ymm7_6 ymm5_6 ymm11_6;
add ymm7_7 ymm5_7 ymm11_7;
add ymm7_8 ymm5_8 ymm11_8;
add ymm7_9 ymm5_9 ymm11_9;
add ymm7_a ymm5_a ymm11_a;
add ymm7_b ymm5_b ymm11_b;
add ymm7_c ymm5_c ymm11_c;
add ymm7_d ymm5_d ymm11_d;
add ymm7_e ymm5_e ymm11_e;
add ymm7_f ymm5_f ymm11_f;
(* vpsubw %ymm11,%ymm5,%ymm11                      #! PC = 0x5555555592e0 *)
sub ymm11_0 ymm5_0 ymm11_0;
sub ymm11_1 ymm5_1 ymm11_1;
sub ymm11_2 ymm5_2 ymm11_2;
sub ymm11_3 ymm5_3 ymm11_3;
sub ymm11_4 ymm5_4 ymm11_4;
sub ymm11_5 ymm5_5 ymm11_5;
sub ymm11_6 ymm5_6 ymm11_6;
sub ymm11_7 ymm5_7 ymm11_7;
sub ymm11_8 ymm5_8 ymm11_8;
sub ymm11_9 ymm5_9 ymm11_9;
sub ymm11_a ymm5_a ymm11_a;
sub ymm11_b ymm5_b ymm11_b;
sub ymm11_c ymm5_c ymm11_c;
sub ymm11_d ymm5_d ymm11_d;
sub ymm11_e ymm5_e ymm11_e;
sub ymm11_f ymm5_f ymm11_f;
(* vpunpcklwd %ymm3,%ymm4,%ymm5                    #! PC = 0x5555555592e5 *)
mov lwd_0 ymm4_0;
mov lwd_1 ymm3_0;
mov lwd_2 ymm4_1;
mov lwd_3 ymm3_1;
mov lwd_4 ymm4_2;
mov lwd_5 ymm3_2;
mov lwd_6 ymm4_3;
mov lwd_7 ymm3_3;
mov lwd_8 ymm4_8;
mov lwd_9 ymm3_8;
mov lwd_a ymm4_9;
mov lwd_b ymm3_9;
mov lwd_c ymm4_a;
mov lwd_d ymm3_a;
mov lwd_e ymm4_b;
mov lwd_f ymm3_b;
mov ymm5_0 lwd_0;
mov ymm5_1 lwd_1;
mov ymm5_2 lwd_2;
mov ymm5_3 lwd_3;
mov ymm5_4 lwd_4;
mov ymm5_5 lwd_5;
mov ymm5_6 lwd_6;
mov ymm5_7 lwd_7;
mov ymm5_8 lwd_8;
mov ymm5_9 lwd_9;
mov ymm5_a lwd_a;
mov ymm5_b lwd_b;
mov ymm5_c lwd_c;
mov ymm5_d lwd_d;
mov ymm5_e lwd_e;
mov ymm5_f lwd_f;
(* vpunpckhwd %ymm3,%ymm4,%ymm3                    #! PC = 0x5555555592e9 *)
mov hwd_0 ymm4_4;
mov hwd_1 ymm3_4;
mov hwd_2 ymm4_5;
mov hwd_3 ymm3_5;
mov hwd_4 ymm4_6;
mov hwd_5 ymm3_6;
mov hwd_6 ymm4_7;
mov hwd_7 ymm3_7;
mov hwd_8 ymm4_c;
mov hwd_9 ymm3_c;
mov hwd_a ymm4_d;
mov hwd_b ymm3_d;
mov hwd_c ymm4_e;
mov hwd_d ymm3_e;
mov hwd_e ymm4_f;
mov hwd_f ymm3_f;
mov ymm3_0 hwd_0;
mov ymm3_1 hwd_1;
mov ymm3_2 hwd_2;
mov ymm3_3 hwd_3;
mov ymm3_4 hwd_4;
mov ymm3_5 hwd_5;
mov ymm3_6 hwd_6;
mov ymm3_7 hwd_7;
mov ymm3_8 hwd_8;
mov ymm3_9 hwd_9;
mov ymm3_a hwd_a;
mov ymm3_b hwd_b;
mov ymm3_c hwd_c;
mov ymm3_d hwd_d;
mov ymm3_e hwd_e;
mov ymm3_f hwd_f;
(* vpunpcklwd %ymm6,%ymm10,%ymm4                   #! PC = 0x5555555592ed *)
mov lwd_0 ymm10_0;
mov lwd_1 ymm6_0;
mov lwd_2 ymm10_1;
mov lwd_3 ymm6_1;
mov lwd_4 ymm10_2;
mov lwd_5 ymm6_2;
mov lwd_6 ymm10_3;
mov lwd_7 ymm6_3;
mov lwd_8 ymm10_8;
mov lwd_9 ymm6_8;
mov lwd_a ymm10_9;
mov lwd_b ymm6_9;
mov lwd_c ymm10_a;
mov lwd_d ymm6_a;
mov lwd_e ymm10_b;
mov lwd_f ymm6_b;
mov ymm4_0 lwd_0;
mov ymm4_1 lwd_1;
mov ymm4_2 lwd_2;
mov ymm4_3 lwd_3;
mov ymm4_4 lwd_4;
mov ymm4_5 lwd_5;
mov ymm4_6 lwd_6;
mov ymm4_7 lwd_7;
mov ymm4_8 lwd_8;
mov ymm4_9 lwd_9;
mov ymm4_a lwd_a;
mov ymm4_b lwd_b;
mov ymm4_c lwd_c;
mov ymm4_d lwd_d;
mov ymm4_e lwd_e;
mov ymm4_f lwd_f;
(* vpunpckhwd %ymm6,%ymm10,%ymm6                   #! PC = 0x5555555592f1 *)
mov hwd_0 ymm10_4;
mov hwd_1 ymm6_4;
mov hwd_2 ymm10_5;
mov hwd_3 ymm6_5;
mov hwd_4 ymm10_6;
mov hwd_5 ymm6_6;
mov hwd_6 ymm10_7;
mov hwd_7 ymm6_7;
mov hwd_8 ymm10_c;
mov hwd_9 ymm6_c;
mov hwd_a ymm10_d;
mov hwd_b ymm6_d;
mov hwd_c ymm10_e;
mov hwd_d ymm6_e;
mov hwd_e ymm10_f;
mov hwd_f ymm6_f;
mov ymm6_0 hwd_0;
mov ymm6_1 hwd_1;
mov ymm6_2 hwd_2;
mov ymm6_3 hwd_3;
mov ymm6_4 hwd_4;
mov ymm6_5 hwd_5;
mov ymm6_6 hwd_6;
mov ymm6_7 hwd_7;
mov ymm6_8 hwd_8;
mov ymm6_9 hwd_9;
mov ymm6_a hwd_a;
mov ymm6_b hwd_b;
mov ymm6_c hwd_c;
mov ymm6_d hwd_d;
mov ymm6_e hwd_e;
mov ymm6_f hwd_f;
(* vpunpcklwd %ymm8,%ymm9,%ymm10                   #! PC = 0x5555555592f5 *)
mov lwd_0 ymm9_0;
mov lwd_1 ymm8_0;
mov lwd_2 ymm9_1;
mov lwd_3 ymm8_1;
mov lwd_4 ymm9_2;
mov lwd_5 ymm8_2;
mov lwd_6 ymm9_3;
mov lwd_7 ymm8_3;
mov lwd_8 ymm9_8;
mov lwd_9 ymm8_8;
mov lwd_a ymm9_9;
mov lwd_b ymm8_9;
mov lwd_c ymm9_a;
mov lwd_d ymm8_a;
mov lwd_e ymm9_b;
mov lwd_f ymm8_b;
mov ymm10_0 lwd_0;
mov ymm10_1 lwd_1;
mov ymm10_2 lwd_2;
mov ymm10_3 lwd_3;
mov ymm10_4 lwd_4;
mov ymm10_5 lwd_5;
mov ymm10_6 lwd_6;
mov ymm10_7 lwd_7;
mov ymm10_8 lwd_8;
mov ymm10_9 lwd_9;
mov ymm10_a lwd_a;
mov ymm10_b lwd_b;
mov ymm10_c lwd_c;
mov ymm10_d lwd_d;
mov ymm10_e lwd_e;
mov ymm10_f lwd_f;
(* vpunpckhwd %ymm8,%ymm9,%ymm8                    #! PC = 0x5555555592fa *)
mov hwd_0 ymm9_4;
mov hwd_1 ymm8_4;
mov hwd_2 ymm9_5;
mov hwd_3 ymm8_5;
mov hwd_4 ymm9_6;
mov hwd_5 ymm8_6;
mov hwd_6 ymm9_7;
mov hwd_7 ymm8_7;
mov hwd_8 ymm9_c;
mov hwd_9 ymm8_c;
mov hwd_a ymm9_d;
mov hwd_b ymm8_d;
mov hwd_c ymm9_e;
mov hwd_d ymm8_e;
mov hwd_e ymm9_f;
mov hwd_f ymm8_f;
mov ymm8_0 hwd_0;
mov ymm8_1 hwd_1;
mov ymm8_2 hwd_2;
mov ymm8_3 hwd_3;
mov ymm8_4 hwd_4;
mov ymm8_5 hwd_5;
mov ymm8_6 hwd_6;
mov ymm8_7 hwd_7;
mov ymm8_8 hwd_8;
mov ymm8_9 hwd_9;
mov ymm8_a hwd_a;
mov ymm8_b hwd_b;
mov ymm8_c hwd_c;
mov ymm8_d hwd_d;
mov ymm8_e hwd_e;
mov ymm8_f hwd_f;
(* vpunpcklwd %ymm11,%ymm7,%ymm9                   #! PC = 0x5555555592ff *)
mov lwd_0 ymm7_0;
mov lwd_1 ymm11_0;
mov lwd_2 ymm7_1;
mov lwd_3 ymm11_1;
mov lwd_4 ymm7_2;
mov lwd_5 ymm11_2;
mov lwd_6 ymm7_3;
mov lwd_7 ymm11_3;
mov lwd_8 ymm7_8;
mov lwd_9 ymm11_8;
mov lwd_a ymm7_9;
mov lwd_b ymm11_9;
mov lwd_c ymm7_a;
mov lwd_d ymm11_a;
mov lwd_e ymm7_b;
mov lwd_f ymm11_b;
mov ymm9_0 lwd_0;
mov ymm9_1 lwd_1;
mov ymm9_2 lwd_2;
mov ymm9_3 lwd_3;
mov ymm9_4 lwd_4;
mov ymm9_5 lwd_5;
mov ymm9_6 lwd_6;
mov ymm9_7 lwd_7;
mov ymm9_8 lwd_8;
mov ymm9_9 lwd_9;
mov ymm9_a lwd_a;
mov ymm9_b lwd_b;
mov ymm9_c lwd_c;
mov ymm9_d lwd_d;
mov ymm9_e lwd_e;
mov ymm9_f lwd_f;
(* vpunpckhwd %ymm11,%ymm7,%ymm11                  #! PC = 0x555555559304 *)
mov hwd_0 ymm7_4;
mov hwd_1 ymm11_4;
mov hwd_2 ymm7_5;
mov hwd_3 ymm11_5;
mov hwd_4 ymm7_6;
mov hwd_5 ymm11_6;
mov hwd_6 ymm7_7;
mov hwd_7 ymm11_7;
mov hwd_8 ymm7_c;
mov hwd_9 ymm11_c;
mov hwd_a ymm7_d;
mov hwd_b ymm11_d;
mov hwd_c ymm7_e;
mov hwd_d ymm11_e;
mov hwd_e ymm7_f;
mov hwd_f ymm11_f;
mov ymm11_0 hwd_0;
mov ymm11_1 hwd_1;
mov ymm11_2 hwd_2;
mov ymm11_3 hwd_3;
mov ymm11_4 hwd_4;
mov ymm11_5 hwd_5;
mov ymm11_6 hwd_6;
mov ymm11_7 hwd_7;
mov ymm11_8 hwd_8;
mov ymm11_9 hwd_9;
mov ymm11_a hwd_a;
mov ymm11_b hwd_b;
mov ymm11_c hwd_c;
mov ymm11_d hwd_d;
mov ymm11_e hwd_e;
mov ymm11_f hwd_f;
(* vpbroadcastq 0x1a0(%rdx),%ymm1                  #! EA = L0x5555555612c0; Value = 0x0ffa1e732e4ef81f; PC = 0x555555559309 *)
mov ymm1_0 L0x5555555612c0;
mov ymm1_1 L0x5555555612c2;
mov ymm1_2 L0x5555555612c4;
mov ymm1_3 L0x5555555612c6;
mov ymm1_4 L0x5555555612c0;
mov ymm1_5 L0x5555555612c2;
mov ymm1_6 L0x5555555612c4;
mov ymm1_7 L0x5555555612c6;
mov ymm1_8 L0x5555555612c0;
mov ymm1_9 L0x5555555612c2;
mov ymm1_a L0x5555555612c4;
mov ymm1_b L0x5555555612c6;
mov ymm1_c L0x5555555612c0;
mov ymm1_d L0x5555555612c2;
mov ymm1_e L0x5555555612c4;
mov ymm1_f L0x5555555612c6;
(* vpbroadcastq 0x3a0(%rdx),%ymm2                  #! EA = L0x5555555614c0; Value = 0x13fafc73fa4e0e1f; PC = 0x555555559312 *)
mov ymm2_0 L0x5555555614c0;
mov ymm2_1 L0x5555555614c2;
mov ymm2_2 L0x5555555614c4;
mov ymm2_3 L0x5555555614c6;
mov ymm2_4 L0x5555555614c0;
mov ymm2_5 L0x5555555614c2;
mov ymm2_6 L0x5555555614c4;
mov ymm2_7 L0x5555555614c6;
mov ymm2_8 L0x5555555614c0;
mov ymm2_9 L0x5555555614c2;
mov ymm2_a L0x5555555614c4;
mov ymm2_b L0x5555555614c6;
mov ymm2_c L0x5555555614c0;
mov ymm2_d L0x5555555614c2;
mov ymm2_e L0x5555555614c4;
mov ymm2_f L0x5555555614c6;
(* vpmullw %ymm1,%ymm3,%ymm7                       #! PC = 0x55555555931b *)
smull mulHymm3_0 mulL_0 ymm1_0 ymm3_0;
smull mulHymm3_1 mulL_1 ymm1_1 ymm3_1;
smull mulHymm3_2 mulL_2 ymm1_2 ymm3_2;
smull mulHymm3_3 mulL_3 ymm1_3 ymm3_3;
smull mulHymm3_4 mulL_4 ymm1_4 ymm3_4;
smull mulHymm3_5 mulL_5 ymm1_5 ymm3_5;
smull mulHymm3_6 mulL_6 ymm1_6 ymm3_6;
smull mulHymm3_7 mulL_7 ymm1_7 ymm3_7;
smull mulHymm3_8 mulL_8 ymm1_8 ymm3_8;
smull mulHymm3_9 mulL_9 ymm1_9 ymm3_9;
smull mulHymm3_a mulL_a ymm1_a ymm3_a;
smull mulHymm3_b mulL_b ymm1_b ymm3_b;
smull mulHymm3_c mulL_c ymm1_c ymm3_c;
smull mulHymm3_d mulL_d ymm1_d ymm3_d;
smull mulHymm3_e mulL_e ymm1_e ymm3_e;
smull mulHymm3_f mulL_f ymm1_f ymm3_f;
cast ymm7_0@sint16 mulL_0;
cast ymm7_1@sint16 mulL_1;
cast ymm7_2@sint16 mulL_2;
cast ymm7_3@sint16 mulL_3;
cast ymm7_4@sint16 mulL_4;
cast ymm7_5@sint16 mulL_5;
cast ymm7_6@sint16 mulL_6;
cast ymm7_7@sint16 mulL_7;
cast ymm7_8@sint16 mulL_8;
cast ymm7_9@sint16 mulL_9;
cast ymm7_a@sint16 mulL_a;
cast ymm7_b@sint16 mulL_b;
cast ymm7_c@sint16 mulL_c;
cast ymm7_d@sint16 mulL_d;
cast ymm7_e@sint16 mulL_e;
cast ymm7_f@sint16 mulL_f;
(* vpmulhw %ymm2,%ymm3,%ymm3                       #! PC = 0x55555555931f *)
smull mulH_0 mulLymm3_0 ymm3_0 ymm2_0;
smull mulH_1 mulLymm3_1 ymm3_1 ymm2_1;
smull mulH_2 mulLymm3_2 ymm3_2 ymm2_2;
smull mulH_3 mulLymm3_3 ymm3_3 ymm2_3;
smull mulH_4 mulLymm3_4 ymm3_4 ymm2_4;
smull mulH_5 mulLymm3_5 ymm3_5 ymm2_5;
smull mulH_6 mulLymm3_6 ymm3_6 ymm2_6;
smull mulH_7 mulLymm3_7 ymm3_7 ymm2_7;
smull mulH_8 mulLymm3_8 ymm3_8 ymm2_8;
smull mulH_9 mulLymm3_9 ymm3_9 ymm2_9;
smull mulH_a mulLymm3_a ymm3_a ymm2_a;
smull mulH_b mulLymm3_b ymm3_b ymm2_b;
smull mulH_c mulLymm3_c ymm3_c ymm2_c;
smull mulH_d mulLymm3_d ymm3_d ymm2_d;
smull mulH_e mulLymm3_e ymm3_e ymm2_e;
smull mulH_f mulLymm3_f ymm3_f ymm2_f;
mov ymm3_0 mulH_0;
mov ymm3_1 mulH_1;
mov ymm3_2 mulH_2;
mov ymm3_3 mulH_3;
mov ymm3_4 mulH_4;
mov ymm3_5 mulH_5;
mov ymm3_6 mulH_6;
mov ymm3_7 mulH_7;
mov ymm3_8 mulH_8;
mov ymm3_9 mulH_9;
mov ymm3_a mulH_a;
mov ymm3_b mulH_b;
mov ymm3_c mulH_c;
mov ymm3_d mulH_d;
mov ymm3_e mulH_e;
mov ymm3_f mulH_f;
(* vpmulhw %ymm0,%ymm7,%ymm7                       #! PC = 0x555555559323 *)
smull mulH_0 red_0 ymm7_0 ymm0_0;
assert true && red_0 = mulLymm3_0;
assume red_0 = mulLymm3_0 && true;
smull mulH_1 red_1 ymm7_1 ymm0_1;
assert true && red_1 = mulLymm3_1;
assume red_1 = mulLymm3_1 && true;
smull mulH_2 red_2 ymm7_2 ymm0_2;
assert true && red_2 = mulLymm3_2;
assume red_2 = mulLymm3_2 && true;
smull mulH_3 red_3 ymm7_3 ymm0_3;
assert true && red_3 = mulLymm3_3;
assume red_3 = mulLymm3_3 && true;
smull mulH_4 red_4 ymm7_4 ymm0_4;
assert true && red_4 = mulLymm3_4;
assume red_4 = mulLymm3_4 && true;
smull mulH_5 red_5 ymm7_5 ymm0_5;
assert true && red_5 = mulLymm3_5;
assume red_5 = mulLymm3_5 && true;
smull mulH_6 red_6 ymm7_6 ymm0_6;
assert true && red_6 = mulLymm3_6;
assume red_6 = mulLymm3_6 && true;
smull mulH_7 red_7 ymm7_7 ymm0_7;
assert true && red_7 = mulLymm3_7;
assume red_7 = mulLymm3_7 && true;
smull mulH_8 red_8 ymm7_8 ymm0_8;
assert true && red_8 = mulLymm3_8;
assume red_8 = mulLymm3_8 && true;
smull mulH_9 red_9 ymm7_9 ymm0_9;
assert true && red_9 = mulLymm3_9;
assume red_9 = mulLymm3_9 && true;
smull mulH_a red_a ymm7_a ymm0_a;
assert true && red_a = mulLymm3_a;
assume red_a = mulLymm3_a && true;
smull mulH_b red_b ymm7_b ymm0_b;
assert true && red_b = mulLymm3_b;
assume red_b = mulLymm3_b && true;
smull mulH_c red_c ymm7_c ymm0_c;
assert true && red_c = mulLymm3_c;
assume red_c = mulLymm3_c && true;
smull mulH_d red_d ymm7_d ymm0_d;
assert true && red_d = mulLymm3_d;
assume red_d = mulLymm3_d && true;
smull mulH_e red_e ymm7_e ymm0_e;
assert true && red_e = mulLymm3_e;
assume red_e = mulLymm3_e && true;
smull mulH_f red_f ymm7_f ymm0_f;
assert true && red_f = mulLymm3_f;
assume red_f = mulLymm3_f && true;
mov ymm7_0 mulH_0;
mov ymm7_1 mulH_1;
mov ymm7_2 mulH_2;
mov ymm7_3 mulH_3;
mov ymm7_4 mulH_4;
mov ymm7_5 mulH_5;
mov ymm7_6 mulH_6;
mov ymm7_7 mulH_7;
mov ymm7_8 mulH_8;
mov ymm7_9 mulH_9;
mov ymm7_a mulH_a;
mov ymm7_b mulH_b;
mov ymm7_c mulH_c;
mov ymm7_d mulH_d;
mov ymm7_e mulH_e;
mov ymm7_f mulH_f;
(* vpsubw %ymm7,%ymm3,%ymm3                        #! PC = 0x555555559327 *)
sub ymm3_0 ymm3_0 ymm7_0;
sub ymm3_1 ymm3_1 ymm7_1;
sub ymm3_2 ymm3_2 ymm7_2;
sub ymm3_3 ymm3_3 ymm7_3;
sub ymm3_4 ymm3_4 ymm7_4;
sub ymm3_5 ymm3_5 ymm7_5;
sub ymm3_6 ymm3_6 ymm7_6;
sub ymm3_7 ymm3_7 ymm7_7;
sub ymm3_8 ymm3_8 ymm7_8;
sub ymm3_9 ymm3_9 ymm7_9;
sub ymm3_a ymm3_a ymm7_a;
sub ymm3_b ymm3_b ymm7_b;
sub ymm3_c ymm3_c ymm7_c;
sub ymm3_d ymm3_d ymm7_d;
sub ymm3_e ymm3_e ymm7_e;
sub ymm3_f ymm3_f ymm7_f;
(* vpbroadcastq 0x1a8(%rdx),%ymm1                  #! EA = L0x5555555612c8; Value = 0xa9e4078c768ff9a5; PC = 0x55555555932b *)
mov ymm1_0 L0x5555555612c8;
mov ymm1_1 L0x5555555612ca;
mov ymm1_2 L0x5555555612cc;
mov ymm1_3 L0x5555555612ce;
mov ymm1_4 L0x5555555612c8;
mov ymm1_5 L0x5555555612ca;
mov ymm1_6 L0x5555555612cc;
mov ymm1_7 L0x5555555612ce;
mov ymm1_8 L0x5555555612c8;
mov ymm1_9 L0x5555555612ca;
mov ymm1_a L0x5555555612cc;
mov ymm1_b L0x5555555612ce;
mov ymm1_c L0x5555555612c8;
mov ymm1_d L0x5555555612ca;
mov ymm1_e L0x5555555612cc;
mov ymm1_f L0x5555555612ce;
(* vpbroadcastq 0x3a8(%rdx),%ymm2                  #! EA = L0x5555555614c8; Value = 0x11e4ff8cec8f0ba5; PC = 0x555555559334 *)
mov ymm2_0 L0x5555555614c8;
mov ymm2_1 L0x5555555614ca;
mov ymm2_2 L0x5555555614cc;
mov ymm2_3 L0x5555555614ce;
mov ymm2_4 L0x5555555614c8;
mov ymm2_5 L0x5555555614ca;
mov ymm2_6 L0x5555555614cc;
mov ymm2_7 L0x5555555614ce;
mov ymm2_8 L0x5555555614c8;
mov ymm2_9 L0x5555555614ca;
mov ymm2_a L0x5555555614cc;
mov ymm2_b L0x5555555614ce;
mov ymm2_c L0x5555555614c8;
mov ymm2_d L0x5555555614ca;
mov ymm2_e L0x5555555614cc;
mov ymm2_f L0x5555555614ce;
(* vpmullw %ymm1,%ymm6,%ymm7                       #! PC = 0x55555555933d *)
smull mulHymm6_0 mulL_0 ymm1_0 ymm6_0;
smull mulHymm6_1 mulL_1 ymm1_1 ymm6_1;
smull mulHymm6_2 mulL_2 ymm1_2 ymm6_2;
smull mulHymm6_3 mulL_3 ymm1_3 ymm6_3;
smull mulHymm6_4 mulL_4 ymm1_4 ymm6_4;
smull mulHymm6_5 mulL_5 ymm1_5 ymm6_5;
smull mulHymm6_6 mulL_6 ymm1_6 ymm6_6;
smull mulHymm6_7 mulL_7 ymm1_7 ymm6_7;
smull mulHymm6_8 mulL_8 ymm1_8 ymm6_8;
smull mulHymm6_9 mulL_9 ymm1_9 ymm6_9;
smull mulHymm6_a mulL_a ymm1_a ymm6_a;
smull mulHymm6_b mulL_b ymm1_b ymm6_b;
smull mulHymm6_c mulL_c ymm1_c ymm6_c;
smull mulHymm6_d mulL_d ymm1_d ymm6_d;
smull mulHymm6_e mulL_e ymm1_e ymm6_e;
smull mulHymm6_f mulL_f ymm1_f ymm6_f;
cast ymm7_0@sint16 mulL_0;
cast ymm7_1@sint16 mulL_1;
cast ymm7_2@sint16 mulL_2;
cast ymm7_3@sint16 mulL_3;
cast ymm7_4@sint16 mulL_4;
cast ymm7_5@sint16 mulL_5;
cast ymm7_6@sint16 mulL_6;
cast ymm7_7@sint16 mulL_7;
cast ymm7_8@sint16 mulL_8;
cast ymm7_9@sint16 mulL_9;
cast ymm7_a@sint16 mulL_a;
cast ymm7_b@sint16 mulL_b;
cast ymm7_c@sint16 mulL_c;
cast ymm7_d@sint16 mulL_d;
cast ymm7_e@sint16 mulL_e;
cast ymm7_f@sint16 mulL_f;
(* vpmulhw %ymm2,%ymm6,%ymm6                       #! PC = 0x555555559341 *)
smull mulH_0 mulLymm6_0 ymm6_0 ymm2_0;
smull mulH_1 mulLymm6_1 ymm6_1 ymm2_1;
smull mulH_2 mulLymm6_2 ymm6_2 ymm2_2;
smull mulH_3 mulLymm6_3 ymm6_3 ymm2_3;
smull mulH_4 mulLymm6_4 ymm6_4 ymm2_4;
smull mulH_5 mulLymm6_5 ymm6_5 ymm2_5;
smull mulH_6 mulLymm6_6 ymm6_6 ymm2_6;
smull mulH_7 mulLymm6_7 ymm6_7 ymm2_7;
smull mulH_8 mulLymm6_8 ymm6_8 ymm2_8;
smull mulH_9 mulLymm6_9 ymm6_9 ymm2_9;
smull mulH_a mulLymm6_a ymm6_a ymm2_a;
smull mulH_b mulLymm6_b ymm6_b ymm2_b;
smull mulH_c mulLymm6_c ymm6_c ymm2_c;
smull mulH_d mulLymm6_d ymm6_d ymm2_d;
smull mulH_e mulLymm6_e ymm6_e ymm2_e;
smull mulH_f mulLymm6_f ymm6_f ymm2_f;
mov ymm6_0 mulH_0;
mov ymm6_1 mulH_1;
mov ymm6_2 mulH_2;
mov ymm6_3 mulH_3;
mov ymm6_4 mulH_4;
mov ymm6_5 mulH_5;
mov ymm6_6 mulH_6;
mov ymm6_7 mulH_7;
mov ymm6_8 mulH_8;
mov ymm6_9 mulH_9;
mov ymm6_a mulH_a;
mov ymm6_b mulH_b;
mov ymm6_c mulH_c;
mov ymm6_d mulH_d;
mov ymm6_e mulH_e;
mov ymm6_f mulH_f;
(* vpmulhw %ymm0,%ymm7,%ymm7                       #! PC = 0x555555559345 *)
smull mulH_0 red_0 ymm7_0 ymm0_0;
assert true && red_0 = mulLymm6_0;
assume red_0 = mulLymm6_0 && true;
smull mulH_1 red_1 ymm7_1 ymm0_1;
assert true && red_1 = mulLymm6_1;
assume red_1 = mulLymm6_1 && true;
smull mulH_2 red_2 ymm7_2 ymm0_2;
assert true && red_2 = mulLymm6_2;
assume red_2 = mulLymm6_2 && true;
smull mulH_3 red_3 ymm7_3 ymm0_3;
assert true && red_3 = mulLymm6_3;
assume red_3 = mulLymm6_3 && true;
smull mulH_4 red_4 ymm7_4 ymm0_4;
assert true && red_4 = mulLymm6_4;
assume red_4 = mulLymm6_4 && true;
smull mulH_5 red_5 ymm7_5 ymm0_5;
assert true && red_5 = mulLymm6_5;
assume red_5 = mulLymm6_5 && true;
smull mulH_6 red_6 ymm7_6 ymm0_6;
assert true && red_6 = mulLymm6_6;
assume red_6 = mulLymm6_6 && true;
smull mulH_7 red_7 ymm7_7 ymm0_7;
assert true && red_7 = mulLymm6_7;
assume red_7 = mulLymm6_7 && true;
smull mulH_8 red_8 ymm7_8 ymm0_8;
assert true && red_8 = mulLymm6_8;
assume red_8 = mulLymm6_8 && true;
smull mulH_9 red_9 ymm7_9 ymm0_9;
assert true && red_9 = mulLymm6_9;
assume red_9 = mulLymm6_9 && true;
smull mulH_a red_a ymm7_a ymm0_a;
assert true && red_a = mulLymm6_a;
assume red_a = mulLymm6_a && true;
smull mulH_b red_b ymm7_b ymm0_b;
assert true && red_b = mulLymm6_b;
assume red_b = mulLymm6_b && true;
smull mulH_c red_c ymm7_c ymm0_c;
assert true && red_c = mulLymm6_c;
assume red_c = mulLymm6_c && true;
smull mulH_d red_d ymm7_d ymm0_d;
assert true && red_d = mulLymm6_d;
assume red_d = mulLymm6_d && true;
smull mulH_e red_e ymm7_e ymm0_e;
assert true && red_e = mulLymm6_e;
assume red_e = mulLymm6_e && true;
smull mulH_f red_f ymm7_f ymm0_f;
assert true && red_f = mulLymm6_f;
assume red_f = mulLymm6_f && true;
mov ymm7_0 mulH_0;
mov ymm7_1 mulH_1;
mov ymm7_2 mulH_2;
mov ymm7_3 mulH_3;
mov ymm7_4 mulH_4;
mov ymm7_5 mulH_5;
mov ymm7_6 mulH_6;
mov ymm7_7 mulH_7;
mov ymm7_8 mulH_8;
mov ymm7_9 mulH_9;
mov ymm7_a mulH_a;
mov ymm7_b mulH_b;
mov ymm7_c mulH_c;
mov ymm7_d mulH_d;
mov ymm7_e mulH_e;
mov ymm7_f mulH_f;
(* vpsubw %ymm7,%ymm6,%ymm6                        #! PC = 0x555555559349 *)
sub ymm6_0 ymm6_0 ymm7_0;
sub ymm6_1 ymm6_1 ymm7_1;
sub ymm6_2 ymm6_2 ymm7_2;
sub ymm6_3 ymm6_3 ymm7_3;
sub ymm6_4 ymm6_4 ymm7_4;
sub ymm6_5 ymm6_5 ymm7_5;
sub ymm6_6 ymm6_6 ymm7_6;
sub ymm6_7 ymm6_7 ymm7_7;
sub ymm6_8 ymm6_8 ymm7_8;
sub ymm6_9 ymm6_9 ymm7_9;
sub ymm6_a ymm6_a ymm7_a;
sub ymm6_b ymm6_b ymm7_b;
sub ymm6_c ymm6_c ymm7_c;
sub ymm6_d ymm6_d ymm7_d;
sub ymm6_e ymm6_e ymm7_e;
sub ymm6_f ymm6_f ymm7_f;
(* vpbroadcastq 0x1b0(%rdx),%ymm1                  #! EA = L0x5555555612d0; Value = 0x02cf42c8bc387a3a; PC = 0x55555555934d *)
mov ymm1_0 L0x5555555612d0;
mov ymm1_1 L0x5555555612d2;
mov ymm1_2 L0x5555555612d4;
mov ymm1_3 L0x5555555612d6;
mov ymm1_4 L0x5555555612d0;
mov ymm1_5 L0x5555555612d2;
mov ymm1_6 L0x5555555612d4;
mov ymm1_7 L0x5555555612d6;
mov ymm1_8 L0x5555555612d0;
mov ymm1_9 L0x5555555612d2;
mov ymm1_a L0x5555555612d4;
mov ymm1_b L0x5555555612d6;
mov ymm1_c L0x5555555612d0;
mov ymm1_d L0x5555555612d2;
mov ymm1_e L0x5555555612d4;
mov ymm1_f L0x5555555612d6;
(* vpbroadcastq 0x3b0(%rdx),%ymm2                  #! EA = L0x5555555614d0; Value = 0xf8cf12c8ec38fe3a; PC = 0x555555559356 *)
mov ymm2_0 L0x5555555614d0;
mov ymm2_1 L0x5555555614d2;
mov ymm2_2 L0x5555555614d4;
mov ymm2_3 L0x5555555614d6;
mov ymm2_4 L0x5555555614d0;
mov ymm2_5 L0x5555555614d2;
mov ymm2_6 L0x5555555614d4;
mov ymm2_7 L0x5555555614d6;
mov ymm2_8 L0x5555555614d0;
mov ymm2_9 L0x5555555614d2;
mov ymm2_a L0x5555555614d4;
mov ymm2_b L0x5555555614d6;
mov ymm2_c L0x5555555614d0;
mov ymm2_d L0x5555555614d2;
mov ymm2_e L0x5555555614d4;
mov ymm2_f L0x5555555614d6;
(* vpmullw %ymm1,%ymm8,%ymm7                       #! PC = 0x55555555935f *)
smull mulHymm8_0 mulL_0 ymm1_0 ymm8_0;
smull mulHymm8_1 mulL_1 ymm1_1 ymm8_1;
smull mulHymm8_2 mulL_2 ymm1_2 ymm8_2;
smull mulHymm8_3 mulL_3 ymm1_3 ymm8_3;
smull mulHymm8_4 mulL_4 ymm1_4 ymm8_4;
smull mulHymm8_5 mulL_5 ymm1_5 ymm8_5;
smull mulHymm8_6 mulL_6 ymm1_6 ymm8_6;
smull mulHymm8_7 mulL_7 ymm1_7 ymm8_7;
smull mulHymm8_8 mulL_8 ymm1_8 ymm8_8;
smull mulHymm8_9 mulL_9 ymm1_9 ymm8_9;
smull mulHymm8_a mulL_a ymm1_a ymm8_a;
smull mulHymm8_b mulL_b ymm1_b ymm8_b;
smull mulHymm8_c mulL_c ymm1_c ymm8_c;
smull mulHymm8_d mulL_d ymm1_d ymm8_d;
smull mulHymm8_e mulL_e ymm1_e ymm8_e;
smull mulHymm8_f mulL_f ymm1_f ymm8_f;
cast ymm7_0@sint16 mulL_0;
cast ymm7_1@sint16 mulL_1;
cast ymm7_2@sint16 mulL_2;
cast ymm7_3@sint16 mulL_3;
cast ymm7_4@sint16 mulL_4;
cast ymm7_5@sint16 mulL_5;
cast ymm7_6@sint16 mulL_6;
cast ymm7_7@sint16 mulL_7;
cast ymm7_8@sint16 mulL_8;
cast ymm7_9@sint16 mulL_9;
cast ymm7_a@sint16 mulL_a;
cast ymm7_b@sint16 mulL_b;
cast ymm7_c@sint16 mulL_c;
cast ymm7_d@sint16 mulL_d;
cast ymm7_e@sint16 mulL_e;
cast ymm7_f@sint16 mulL_f;
(* vpmulhw %ymm2,%ymm8,%ymm8                       #! PC = 0x555555559363 *)
smull mulH_0 mulLymm8_0 ymm8_0 ymm2_0;
smull mulH_1 mulLymm8_1 ymm8_1 ymm2_1;
smull mulH_2 mulLymm8_2 ymm8_2 ymm2_2;
smull mulH_3 mulLymm8_3 ymm8_3 ymm2_3;
smull mulH_4 mulLymm8_4 ymm8_4 ymm2_4;
smull mulH_5 mulLymm8_5 ymm8_5 ymm2_5;
smull mulH_6 mulLymm8_6 ymm8_6 ymm2_6;
smull mulH_7 mulLymm8_7 ymm8_7 ymm2_7;
smull mulH_8 mulLymm8_8 ymm8_8 ymm2_8;
smull mulH_9 mulLymm8_9 ymm8_9 ymm2_9;
smull mulH_a mulLymm8_a ymm8_a ymm2_a;
smull mulH_b mulLymm8_b ymm8_b ymm2_b;
smull mulH_c mulLymm8_c ymm8_c ymm2_c;
smull mulH_d mulLymm8_d ymm8_d ymm2_d;
smull mulH_e mulLymm8_e ymm8_e ymm2_e;
smull mulH_f mulLymm8_f ymm8_f ymm2_f;
mov ymm8_0 mulH_0;
mov ymm8_1 mulH_1;
mov ymm8_2 mulH_2;
mov ymm8_3 mulH_3;
mov ymm8_4 mulH_4;
mov ymm8_5 mulH_5;
mov ymm8_6 mulH_6;
mov ymm8_7 mulH_7;
mov ymm8_8 mulH_8;
mov ymm8_9 mulH_9;
mov ymm8_a mulH_a;
mov ymm8_b mulH_b;
mov ymm8_c mulH_c;
mov ymm8_d mulH_d;
mov ymm8_e mulH_e;
mov ymm8_f mulH_f;
(* vpmulhw %ymm0,%ymm7,%ymm7                       #! PC = 0x555555559367 *)
smull mulH_0 red_0 ymm7_0 ymm0_0;
assert true && red_0 = mulLymm8_0;
assume red_0 = mulLymm8_0 && true;
smull mulH_1 red_1 ymm7_1 ymm0_1;
assert true && red_1 = mulLymm8_1;
assume red_1 = mulLymm8_1 && true;
smull mulH_2 red_2 ymm7_2 ymm0_2;
assert true && red_2 = mulLymm8_2;
assume red_2 = mulLymm8_2 && true;
smull mulH_3 red_3 ymm7_3 ymm0_3;
assert true && red_3 = mulLymm8_3;
assume red_3 = mulLymm8_3 && true;
smull mulH_4 red_4 ymm7_4 ymm0_4;
assert true && red_4 = mulLymm8_4;
assume red_4 = mulLymm8_4 && true;
smull mulH_5 red_5 ymm7_5 ymm0_5;
assert true && red_5 = mulLymm8_5;
assume red_5 = mulLymm8_5 && true;
smull mulH_6 red_6 ymm7_6 ymm0_6;
assert true && red_6 = mulLymm8_6;
assume red_6 = mulLymm8_6 && true;
smull mulH_7 red_7 ymm7_7 ymm0_7;
assert true && red_7 = mulLymm8_7;
assume red_7 = mulLymm8_7 && true;
smull mulH_8 red_8 ymm7_8 ymm0_8;
assert true && red_8 = mulLymm8_8;
assume red_8 = mulLymm8_8 && true;
smull mulH_9 red_9 ymm7_9 ymm0_9;
assert true && red_9 = mulLymm8_9;
assume red_9 = mulLymm8_9 && true;
smull mulH_a red_a ymm7_a ymm0_a;
assert true && red_a = mulLymm8_a;
assume red_a = mulLymm8_a && true;
smull mulH_b red_b ymm7_b ymm0_b;
assert true && red_b = mulLymm8_b;
assume red_b = mulLymm8_b && true;
smull mulH_c red_c ymm7_c ymm0_c;
assert true && red_c = mulLymm8_c;
assume red_c = mulLymm8_c && true;
smull mulH_d red_d ymm7_d ymm0_d;
assert true && red_d = mulLymm8_d;
assume red_d = mulLymm8_d && true;
smull mulH_e red_e ymm7_e ymm0_e;
assert true && red_e = mulLymm8_e;
assume red_e = mulLymm8_e && true;
smull mulH_f red_f ymm7_f ymm0_f;
assert true && red_f = mulLymm8_f;
assume red_f = mulLymm8_f && true;
mov ymm7_0 mulH_0;
mov ymm7_1 mulH_1;
mov ymm7_2 mulH_2;
mov ymm7_3 mulH_3;
mov ymm7_4 mulH_4;
mov ymm7_5 mulH_5;
mov ymm7_6 mulH_6;
mov ymm7_7 mulH_7;
mov ymm7_8 mulH_8;
mov ymm7_9 mulH_9;
mov ymm7_a mulH_a;
mov ymm7_b mulH_b;
mov ymm7_c mulH_c;
mov ymm7_d mulH_d;
mov ymm7_e mulH_e;
mov ymm7_f mulH_f;
(* vpsubw %ymm7,%ymm8,%ymm8                        #! PC = 0x55555555936b *)
sub ymm8_0 ymm8_0 ymm7_0;
sub ymm8_1 ymm8_1 ymm7_1;
sub ymm8_2 ymm8_2 ymm7_2;
sub ymm8_3 ymm8_3 ymm7_3;
sub ymm8_4 ymm8_4 ymm7_4;
sub ymm8_5 ymm8_5 ymm7_5;
sub ymm8_6 ymm8_6 ymm7_6;
sub ymm8_7 ymm8_7 ymm7_7;
sub ymm8_8 ymm8_8 ymm7_8;
sub ymm8_9 ymm8_9 ymm7_9;
sub ymm8_a ymm8_a ymm7_a;
sub ymm8_b ymm8_b ymm7_b;
sub ymm8_c ymm8_c ymm7_c;
sub ymm8_d ymm8_d ymm7_d;
sub ymm8_e ymm8_e ymm7_e;
sub ymm8_f ymm8_f ymm7_f;
(* vpbroadcastq 0x1b8(%rdx),%ymm1                  #! EA = L0x5555555612d8; Value = 0xd3dc052472b4588a; PC = 0x55555555936f *)
mov ymm1_0 L0x5555555612d8;
mov ymm1_1 L0x5555555612da;
mov ymm1_2 L0x5555555612dc;
mov ymm1_3 L0x5555555612de;
mov ymm1_4 L0x5555555612d8;
mov ymm1_5 L0x5555555612da;
mov ymm1_6 L0x5555555612dc;
mov ymm1_7 L0x5555555612de;
mov ymm1_8 L0x5555555612d8;
mov ymm1_9 L0x5555555612da;
mov ymm1_a L0x5555555612dc;
mov ymm1_b L0x5555555612de;
mov ymm1_c L0x5555555612d8;
mov ymm1_d L0x5555555612da;
mov ymm1_e L0x5555555612dc;
mov ymm1_f L0x5555555612de;
(* vpbroadcastq 0x3b8(%rdx),%ymm2                  #! EA = L0x5555555614d8; Value = 0xebdced24fab4fc8a; PC = 0x555555559378 *)
mov ymm2_0 L0x5555555614d8;
mov ymm2_1 L0x5555555614da;
mov ymm2_2 L0x5555555614dc;
mov ymm2_3 L0x5555555614de;
mov ymm2_4 L0x5555555614d8;
mov ymm2_5 L0x5555555614da;
mov ymm2_6 L0x5555555614dc;
mov ymm2_7 L0x5555555614de;
mov ymm2_8 L0x5555555614d8;
mov ymm2_9 L0x5555555614da;
mov ymm2_a L0x5555555614dc;
mov ymm2_b L0x5555555614de;
mov ymm2_c L0x5555555614d8;
mov ymm2_d L0x5555555614da;
mov ymm2_e L0x5555555614dc;
mov ymm2_f L0x5555555614de;
(* vpmullw %ymm1,%ymm11,%ymm7                      #! PC = 0x555555559381 *)
smull mulHymm11_0 mulL_0 ymm1_0 ymm11_0;
smull mulHymm11_1 mulL_1 ymm1_1 ymm11_1;
smull mulHymm11_2 mulL_2 ymm1_2 ymm11_2;
smull mulHymm11_3 mulL_3 ymm1_3 ymm11_3;
smull mulHymm11_4 mulL_4 ymm1_4 ymm11_4;
smull mulHymm11_5 mulL_5 ymm1_5 ymm11_5;
smull mulHymm11_6 mulL_6 ymm1_6 ymm11_6;
smull mulHymm11_7 mulL_7 ymm1_7 ymm11_7;
smull mulHymm11_8 mulL_8 ymm1_8 ymm11_8;
smull mulHymm11_9 mulL_9 ymm1_9 ymm11_9;
smull mulHymm11_a mulL_a ymm1_a ymm11_a;
smull mulHymm11_b mulL_b ymm1_b ymm11_b;
smull mulHymm11_c mulL_c ymm1_c ymm11_c;
smull mulHymm11_d mulL_d ymm1_d ymm11_d;
smull mulHymm11_e mulL_e ymm1_e ymm11_e;
smull mulHymm11_f mulL_f ymm1_f ymm11_f;
cast ymm7_0@sint16 mulL_0;
cast ymm7_1@sint16 mulL_1;
cast ymm7_2@sint16 mulL_2;
cast ymm7_3@sint16 mulL_3;
cast ymm7_4@sint16 mulL_4;
cast ymm7_5@sint16 mulL_5;
cast ymm7_6@sint16 mulL_6;
cast ymm7_7@sint16 mulL_7;
cast ymm7_8@sint16 mulL_8;
cast ymm7_9@sint16 mulL_9;
cast ymm7_a@sint16 mulL_a;
cast ymm7_b@sint16 mulL_b;
cast ymm7_c@sint16 mulL_c;
cast ymm7_d@sint16 mulL_d;
cast ymm7_e@sint16 mulL_e;
cast ymm7_f@sint16 mulL_f;
(* vpmulhw %ymm2,%ymm11,%ymm11                     #! PC = 0x555555559385 *)
smull mulH_0 mulLymm11_0 ymm11_0 ymm2_0;
smull mulH_1 mulLymm11_1 ymm11_1 ymm2_1;
smull mulH_2 mulLymm11_2 ymm11_2 ymm2_2;
smull mulH_3 mulLymm11_3 ymm11_3 ymm2_3;
smull mulH_4 mulLymm11_4 ymm11_4 ymm2_4;
smull mulH_5 mulLymm11_5 ymm11_5 ymm2_5;
smull mulH_6 mulLymm11_6 ymm11_6 ymm2_6;
smull mulH_7 mulLymm11_7 ymm11_7 ymm2_7;
smull mulH_8 mulLymm11_8 ymm11_8 ymm2_8;
smull mulH_9 mulLymm11_9 ymm11_9 ymm2_9;
smull mulH_a mulLymm11_a ymm11_a ymm2_a;
smull mulH_b mulLymm11_b ymm11_b ymm2_b;
smull mulH_c mulLymm11_c ymm11_c ymm2_c;
smull mulH_d mulLymm11_d ymm11_d ymm2_d;
smull mulH_e mulLymm11_e ymm11_e ymm2_e;
smull mulH_f mulLymm11_f ymm11_f ymm2_f;
mov ymm11_0 mulH_0;
mov ymm11_1 mulH_1;
mov ymm11_2 mulH_2;
mov ymm11_3 mulH_3;
mov ymm11_4 mulH_4;
mov ymm11_5 mulH_5;
mov ymm11_6 mulH_6;
mov ymm11_7 mulH_7;
mov ymm11_8 mulH_8;
mov ymm11_9 mulH_9;
mov ymm11_a mulH_a;
mov ymm11_b mulH_b;
mov ymm11_c mulH_c;
mov ymm11_d mulH_d;
mov ymm11_e mulH_e;
mov ymm11_f mulH_f;
(* vpmulhw %ymm0,%ymm7,%ymm7                       #! PC = 0x555555559389 *)
smull mulH_0 red_0 ymm7_0 ymm0_0;
assert true && red_0 = mulLymm11_0;
assume red_0 = mulLymm11_0 && true;
smull mulH_1 red_1 ymm7_1 ymm0_1;
assert true && red_1 = mulLymm11_1;
assume red_1 = mulLymm11_1 && true;
smull mulH_2 red_2 ymm7_2 ymm0_2;
assert true && red_2 = mulLymm11_2;
assume red_2 = mulLymm11_2 && true;
smull mulH_3 red_3 ymm7_3 ymm0_3;
assert true && red_3 = mulLymm11_3;
assume red_3 = mulLymm11_3 && true;
smull mulH_4 red_4 ymm7_4 ymm0_4;
assert true && red_4 = mulLymm11_4;
assume red_4 = mulLymm11_4 && true;
smull mulH_5 red_5 ymm7_5 ymm0_5;
assert true && red_5 = mulLymm11_5;
assume red_5 = mulLymm11_5 && true;
smull mulH_6 red_6 ymm7_6 ymm0_6;
assert true && red_6 = mulLymm11_6;
assume red_6 = mulLymm11_6 && true;
smull mulH_7 red_7 ymm7_7 ymm0_7;
assert true && red_7 = mulLymm11_7;
assume red_7 = mulLymm11_7 && true;
smull mulH_8 red_8 ymm7_8 ymm0_8;
assert true && red_8 = mulLymm11_8;
assume red_8 = mulLymm11_8 && true;
smull mulH_9 red_9 ymm7_9 ymm0_9;
assert true && red_9 = mulLymm11_9;
assume red_9 = mulLymm11_9 && true;
smull mulH_a red_a ymm7_a ymm0_a;
assert true && red_a = mulLymm11_a;
assume red_a = mulLymm11_a && true;
smull mulH_b red_b ymm7_b ymm0_b;
assert true && red_b = mulLymm11_b;
assume red_b = mulLymm11_b && true;
smull mulH_c red_c ymm7_c ymm0_c;
assert true && red_c = mulLymm11_c;
assume red_c = mulLymm11_c && true;
smull mulH_d red_d ymm7_d ymm0_d;
assert true && red_d = mulLymm11_d;
assume red_d = mulLymm11_d && true;
smull mulH_e red_e ymm7_e ymm0_e;
assert true && red_e = mulLymm11_e;
assume red_e = mulLymm11_e && true;
smull mulH_f red_f ymm7_f ymm0_f;
assert true && red_f = mulLymm11_f;
assume red_f = mulLymm11_f && true;
mov ymm7_0 mulH_0;
mov ymm7_1 mulH_1;
mov ymm7_2 mulH_2;
mov ymm7_3 mulH_3;
mov ymm7_4 mulH_4;
mov ymm7_5 mulH_5;
mov ymm7_6 mulH_6;
mov ymm7_7 mulH_7;
mov ymm7_8 mulH_8;
mov ymm7_9 mulH_9;
mov ymm7_a mulH_a;
mov ymm7_b mulH_b;
mov ymm7_c mulH_c;
mov ymm7_d mulH_d;
mov ymm7_e mulH_e;
mov ymm7_f mulH_f;
(* vpsubw %ymm7,%ymm11,%ymm11                      #! PC = 0x55555555938d *)
sub ymm11_0 ymm11_0 ymm7_0;
sub ymm11_1 ymm11_1 ymm7_1;
sub ymm11_2 ymm11_2 ymm7_2;
sub ymm11_3 ymm11_3 ymm7_3;
sub ymm11_4 ymm11_4 ymm7_4;
sub ymm11_5 ymm11_5 ymm7_5;
sub ymm11_6 ymm11_6 ymm7_6;
sub ymm11_7 ymm11_7 ymm7_7;
sub ymm11_8 ymm11_8 ymm7_8;
sub ymm11_9 ymm11_9 ymm7_9;
sub ymm11_a ymm11_a ymm7_a;
sub ymm11_b ymm11_b ymm7_b;
sub ymm11_c ymm11_c ymm7_c;
sub ymm11_d ymm11_d ymm7_d;
sub ymm11_e ymm11_e ymm7_e;
sub ymm11_f ymm11_f ymm7_f;
(* vpaddw %ymm3,%ymm5,%ymm7                        #! PC = 0x555555559391 *)
add ymm7_0 ymm5_0 ymm3_0;
add ymm7_1 ymm5_1 ymm3_1;
add ymm7_2 ymm5_2 ymm3_2;
add ymm7_3 ymm5_3 ymm3_3;
add ymm7_4 ymm5_4 ymm3_4;
add ymm7_5 ymm5_5 ymm3_5;
add ymm7_6 ymm5_6 ymm3_6;
add ymm7_7 ymm5_7 ymm3_7;
add ymm7_8 ymm5_8 ymm3_8;
add ymm7_9 ymm5_9 ymm3_9;
add ymm7_a ymm5_a ymm3_a;
add ymm7_b ymm5_b ymm3_b;
add ymm7_c ymm5_c ymm3_c;
add ymm7_d ymm5_d ymm3_d;
add ymm7_e ymm5_e ymm3_e;
add ymm7_f ymm5_f ymm3_f;
(* vpsubw %ymm3,%ymm5,%ymm3                        #! PC = 0x555555559395 *)
sub ymm3_0 ymm5_0 ymm3_0;
sub ymm3_1 ymm5_1 ymm3_1;
sub ymm3_2 ymm5_2 ymm3_2;
sub ymm3_3 ymm5_3 ymm3_3;
sub ymm3_4 ymm5_4 ymm3_4;
sub ymm3_5 ymm5_5 ymm3_5;
sub ymm3_6 ymm5_6 ymm3_6;
sub ymm3_7 ymm5_7 ymm3_7;
sub ymm3_8 ymm5_8 ymm3_8;
sub ymm3_9 ymm5_9 ymm3_9;
sub ymm3_a ymm5_a ymm3_a;
sub ymm3_b ymm5_b ymm3_b;
sub ymm3_c ymm5_c ymm3_c;
sub ymm3_d ymm5_d ymm3_d;
sub ymm3_e ymm5_e ymm3_e;
sub ymm3_f ymm5_f ymm3_f;
(* vpaddw %ymm6,%ymm4,%ymm5                        #! PC = 0x555555559399 *)
add ymm5_0 ymm4_0 ymm6_0;
add ymm5_1 ymm4_1 ymm6_1;
add ymm5_2 ymm4_2 ymm6_2;
add ymm5_3 ymm4_3 ymm6_3;
add ymm5_4 ymm4_4 ymm6_4;
add ymm5_5 ymm4_5 ymm6_5;
add ymm5_6 ymm4_6 ymm6_6;
add ymm5_7 ymm4_7 ymm6_7;
add ymm5_8 ymm4_8 ymm6_8;
add ymm5_9 ymm4_9 ymm6_9;
add ymm5_a ymm4_a ymm6_a;
add ymm5_b ymm4_b ymm6_b;
add ymm5_c ymm4_c ymm6_c;
add ymm5_d ymm4_d ymm6_d;
add ymm5_e ymm4_e ymm6_e;
add ymm5_f ymm4_f ymm6_f;
(* vpsubw %ymm6,%ymm4,%ymm6                        #! PC = 0x55555555939d *)
sub ymm6_0 ymm4_0 ymm6_0;
sub ymm6_1 ymm4_1 ymm6_1;
sub ymm6_2 ymm4_2 ymm6_2;
sub ymm6_3 ymm4_3 ymm6_3;
sub ymm6_4 ymm4_4 ymm6_4;
sub ymm6_5 ymm4_5 ymm6_5;
sub ymm6_6 ymm4_6 ymm6_6;
sub ymm6_7 ymm4_7 ymm6_7;
sub ymm6_8 ymm4_8 ymm6_8;
sub ymm6_9 ymm4_9 ymm6_9;
sub ymm6_a ymm4_a ymm6_a;
sub ymm6_b ymm4_b ymm6_b;
sub ymm6_c ymm4_c ymm6_c;
sub ymm6_d ymm4_d ymm6_d;
sub ymm6_e ymm4_e ymm6_e;
sub ymm6_f ymm4_f ymm6_f;
(* vpaddw %ymm8,%ymm10,%ymm4                       #! PC = 0x5555555593a1 *)
add ymm4_0 ymm10_0 ymm8_0;
add ymm4_1 ymm10_1 ymm8_1;
add ymm4_2 ymm10_2 ymm8_2;
add ymm4_3 ymm10_3 ymm8_3;
add ymm4_4 ymm10_4 ymm8_4;
add ymm4_5 ymm10_5 ymm8_5;
add ymm4_6 ymm10_6 ymm8_6;
add ymm4_7 ymm10_7 ymm8_7;
add ymm4_8 ymm10_8 ymm8_8;
add ymm4_9 ymm10_9 ymm8_9;
add ymm4_a ymm10_a ymm8_a;
add ymm4_b ymm10_b ymm8_b;
add ymm4_c ymm10_c ymm8_c;
add ymm4_d ymm10_d ymm8_d;
add ymm4_e ymm10_e ymm8_e;
add ymm4_f ymm10_f ymm8_f;
(* vpsubw %ymm8,%ymm10,%ymm8                       #! PC = 0x5555555593a6 *)
sub ymm8_0 ymm10_0 ymm8_0;
sub ymm8_1 ymm10_1 ymm8_1;
sub ymm8_2 ymm10_2 ymm8_2;
sub ymm8_3 ymm10_3 ymm8_3;
sub ymm8_4 ymm10_4 ymm8_4;
sub ymm8_5 ymm10_5 ymm8_5;
sub ymm8_6 ymm10_6 ymm8_6;
sub ymm8_7 ymm10_7 ymm8_7;
sub ymm8_8 ymm10_8 ymm8_8;
sub ymm8_9 ymm10_9 ymm8_9;
sub ymm8_a ymm10_a ymm8_a;
sub ymm8_b ymm10_b ymm8_b;
sub ymm8_c ymm10_c ymm8_c;
sub ymm8_d ymm10_d ymm8_d;
sub ymm8_e ymm10_e ymm8_e;
sub ymm8_f ymm10_f ymm8_f;
(* vpaddw %ymm11,%ymm9,%ymm10                      #! PC = 0x5555555593ab *)
add ymm10_0 ymm9_0 ymm11_0;
add ymm10_1 ymm9_1 ymm11_1;
add ymm10_2 ymm9_2 ymm11_2;
add ymm10_3 ymm9_3 ymm11_3;
add ymm10_4 ymm9_4 ymm11_4;
add ymm10_5 ymm9_5 ymm11_5;
add ymm10_6 ymm9_6 ymm11_6;
add ymm10_7 ymm9_7 ymm11_7;
add ymm10_8 ymm9_8 ymm11_8;
add ymm10_9 ymm9_9 ymm11_9;
add ymm10_a ymm9_a ymm11_a;
add ymm10_b ymm9_b ymm11_b;
add ymm10_c ymm9_c ymm11_c;
add ymm10_d ymm9_d ymm11_d;
add ymm10_e ymm9_e ymm11_e;
add ymm10_f ymm9_f ymm11_f;
(* vpsubw %ymm11,%ymm9,%ymm11                      #! PC = 0x5555555593b0 *)
sub ymm11_0 ymm9_0 ymm11_0;
sub ymm11_1 ymm9_1 ymm11_1;
sub ymm11_2 ymm9_2 ymm11_2;
sub ymm11_3 ymm9_3 ymm11_3;
sub ymm11_4 ymm9_4 ymm11_4;
sub ymm11_5 ymm9_5 ymm11_5;
sub ymm11_6 ymm9_6 ymm11_6;
sub ymm11_7 ymm9_7 ymm11_7;
sub ymm11_8 ymm9_8 ymm11_8;
sub ymm11_9 ymm9_9 ymm11_9;
sub ymm11_a ymm9_a ymm11_a;
sub ymm11_b ymm9_b ymm11_b;
sub ymm11_c ymm9_c ymm11_c;
sub ymm11_d ymm9_d ymm11_d;
sub ymm11_e ymm9_e ymm11_e;
sub ymm11_f ymm9_f ymm11_f;
(* vpunpcklwd %ymm3,%ymm7,%ymm9                    #! PC = 0x5555555593b5 *)
mov lwd_0 ymm7_0;
mov lwd_1 ymm3_0;
mov lwd_2 ymm7_1;
mov lwd_3 ymm3_1;
mov lwd_4 ymm7_2;
mov lwd_5 ymm3_2;
mov lwd_6 ymm7_3;
mov lwd_7 ymm3_3;
mov lwd_8 ymm7_8;
mov lwd_9 ymm3_8;
mov lwd_a ymm7_9;
mov lwd_b ymm3_9;
mov lwd_c ymm7_a;
mov lwd_d ymm3_a;
mov lwd_e ymm7_b;
mov lwd_f ymm3_b;
mov ymm9_0 lwd_0;
mov ymm9_1 lwd_1;
mov ymm9_2 lwd_2;
mov ymm9_3 lwd_3;
mov ymm9_4 lwd_4;
mov ymm9_5 lwd_5;
mov ymm9_6 lwd_6;
mov ymm9_7 lwd_7;
mov ymm9_8 lwd_8;
mov ymm9_9 lwd_9;
mov ymm9_a lwd_a;
mov ymm9_b lwd_b;
mov ymm9_c lwd_c;
mov ymm9_d lwd_d;
mov ymm9_e lwd_e;
mov ymm9_f lwd_f;
(* vpunpckhwd %ymm3,%ymm7,%ymm3                    #! PC = 0x5555555593b9 *)
mov hwd_0 ymm7_4;
mov hwd_1 ymm3_4;
mov hwd_2 ymm7_5;
mov hwd_3 ymm3_5;
mov hwd_4 ymm7_6;
mov hwd_5 ymm3_6;
mov hwd_6 ymm7_7;
mov hwd_7 ymm3_7;
mov hwd_8 ymm7_c;
mov hwd_9 ymm3_c;
mov hwd_a ymm7_d;
mov hwd_b ymm3_d;
mov hwd_c ymm7_e;
mov hwd_d ymm3_e;
mov hwd_e ymm7_f;
mov hwd_f ymm3_f;
mov ymm3_0 hwd_0;
mov ymm3_1 hwd_1;
mov ymm3_2 hwd_2;
mov ymm3_3 hwd_3;
mov ymm3_4 hwd_4;
mov ymm3_5 hwd_5;
mov ymm3_6 hwd_6;
mov ymm3_7 hwd_7;
mov ymm3_8 hwd_8;
mov ymm3_9 hwd_9;
mov ymm3_a hwd_a;
mov ymm3_b hwd_b;
mov ymm3_c hwd_c;
mov ymm3_d hwd_d;
mov ymm3_e hwd_e;
mov ymm3_f hwd_f;
(* vpunpcklwd %ymm6,%ymm5,%ymm7                    #! PC = 0x5555555593bd *)
mov lwd_0 ymm5_0;
mov lwd_1 ymm6_0;
mov lwd_2 ymm5_1;
mov lwd_3 ymm6_1;
mov lwd_4 ymm5_2;
mov lwd_5 ymm6_2;
mov lwd_6 ymm5_3;
mov lwd_7 ymm6_3;
mov lwd_8 ymm5_8;
mov lwd_9 ymm6_8;
mov lwd_a ymm5_9;
mov lwd_b ymm6_9;
mov lwd_c ymm5_a;
mov lwd_d ymm6_a;
mov lwd_e ymm5_b;
mov lwd_f ymm6_b;
mov ymm7_0 lwd_0;
mov ymm7_1 lwd_1;
mov ymm7_2 lwd_2;
mov ymm7_3 lwd_3;
mov ymm7_4 lwd_4;
mov ymm7_5 lwd_5;
mov ymm7_6 lwd_6;
mov ymm7_7 lwd_7;
mov ymm7_8 lwd_8;
mov ymm7_9 lwd_9;
mov ymm7_a lwd_a;
mov ymm7_b lwd_b;
mov ymm7_c lwd_c;
mov ymm7_d lwd_d;
mov ymm7_e lwd_e;
mov ymm7_f lwd_f;
(* vpunpckhwd %ymm6,%ymm5,%ymm6                    #! PC = 0x5555555593c1 *)
mov hwd_0 ymm5_4;
mov hwd_1 ymm6_4;
mov hwd_2 ymm5_5;
mov hwd_3 ymm6_5;
mov hwd_4 ymm5_6;
mov hwd_5 ymm6_6;
mov hwd_6 ymm5_7;
mov hwd_7 ymm6_7;
mov hwd_8 ymm5_c;
mov hwd_9 ymm6_c;
mov hwd_a ymm5_d;
mov hwd_b ymm6_d;
mov hwd_c ymm5_e;
mov hwd_d ymm6_e;
mov hwd_e ymm5_f;
mov hwd_f ymm6_f;
mov ymm6_0 hwd_0;
mov ymm6_1 hwd_1;
mov ymm6_2 hwd_2;
mov ymm6_3 hwd_3;
mov ymm6_4 hwd_4;
mov ymm6_5 hwd_5;
mov ymm6_6 hwd_6;
mov ymm6_7 hwd_7;
mov ymm6_8 hwd_8;
mov ymm6_9 hwd_9;
mov ymm6_a hwd_a;
mov ymm6_b hwd_b;
mov ymm6_c hwd_c;
mov ymm6_d hwd_d;
mov ymm6_e hwd_e;
mov ymm6_f hwd_f;
(* vpunpcklwd %ymm8,%ymm4,%ymm5                    #! PC = 0x5555555593c5 *)
mov lwd_0 ymm4_0;
mov lwd_1 ymm8_0;
mov lwd_2 ymm4_1;
mov lwd_3 ymm8_1;
mov lwd_4 ymm4_2;
mov lwd_5 ymm8_2;
mov lwd_6 ymm4_3;
mov lwd_7 ymm8_3;
mov lwd_8 ymm4_8;
mov lwd_9 ymm8_8;
mov lwd_a ymm4_9;
mov lwd_b ymm8_9;
mov lwd_c ymm4_a;
mov lwd_d ymm8_a;
mov lwd_e ymm4_b;
mov lwd_f ymm8_b;
mov ymm5_0 lwd_0;
mov ymm5_1 lwd_1;
mov ymm5_2 lwd_2;
mov ymm5_3 lwd_3;
mov ymm5_4 lwd_4;
mov ymm5_5 lwd_5;
mov ymm5_6 lwd_6;
mov ymm5_7 lwd_7;
mov ymm5_8 lwd_8;
mov ymm5_9 lwd_9;
mov ymm5_a lwd_a;
mov ymm5_b lwd_b;
mov ymm5_c lwd_c;
mov ymm5_d lwd_d;
mov ymm5_e lwd_e;
mov ymm5_f lwd_f;
(* vpunpckhwd %ymm8,%ymm4,%ymm8                    #! PC = 0x5555555593ca *)
mov hwd_0 ymm4_4;
mov hwd_1 ymm8_4;
mov hwd_2 ymm4_5;
mov hwd_3 ymm8_5;
mov hwd_4 ymm4_6;
mov hwd_5 ymm8_6;
mov hwd_6 ymm4_7;
mov hwd_7 ymm8_7;
mov hwd_8 ymm4_c;
mov hwd_9 ymm8_c;
mov hwd_a ymm4_d;
mov hwd_b ymm8_d;
mov hwd_c ymm4_e;
mov hwd_d ymm8_e;
mov hwd_e ymm4_f;
mov hwd_f ymm8_f;
mov ymm8_0 hwd_0;
mov ymm8_1 hwd_1;
mov ymm8_2 hwd_2;
mov ymm8_3 hwd_3;
mov ymm8_4 hwd_4;
mov ymm8_5 hwd_5;
mov ymm8_6 hwd_6;
mov ymm8_7 hwd_7;
mov ymm8_8 hwd_8;
mov ymm8_9 hwd_9;
mov ymm8_a hwd_a;
mov ymm8_b hwd_b;
mov ymm8_c hwd_c;
mov ymm8_d hwd_d;
mov ymm8_e hwd_e;
mov ymm8_f hwd_f;
(* vpunpcklwd %ymm11,%ymm10,%ymm4                  #! PC = 0x5555555593cf *)
mov lwd_0 ymm10_0;
mov lwd_1 ymm11_0;
mov lwd_2 ymm10_1;
mov lwd_3 ymm11_1;
mov lwd_4 ymm10_2;
mov lwd_5 ymm11_2;
mov lwd_6 ymm10_3;
mov lwd_7 ymm11_3;
mov lwd_8 ymm10_8;
mov lwd_9 ymm11_8;
mov lwd_a ymm10_9;
mov lwd_b ymm11_9;
mov lwd_c ymm10_a;
mov lwd_d ymm11_a;
mov lwd_e ymm10_b;
mov lwd_f ymm11_b;
mov ymm4_0 lwd_0;
mov ymm4_1 lwd_1;
mov ymm4_2 lwd_2;
mov ymm4_3 lwd_3;
mov ymm4_4 lwd_4;
mov ymm4_5 lwd_5;
mov ymm4_6 lwd_6;
mov ymm4_7 lwd_7;
mov ymm4_8 lwd_8;
mov ymm4_9 lwd_9;
mov ymm4_a lwd_a;
mov ymm4_b lwd_b;
mov ymm4_c lwd_c;
mov ymm4_d lwd_d;
mov ymm4_e lwd_e;
mov ymm4_f lwd_f;
(* vpunpckhwd %ymm11,%ymm10,%ymm11                 #! PC = 0x5555555593d4 *)
mov hwd_0 ymm10_4;
mov hwd_1 ymm11_4;
mov hwd_2 ymm10_5;
mov hwd_3 ymm11_5;
mov hwd_4 ymm10_6;
mov hwd_5 ymm11_6;
mov hwd_6 ymm10_7;
mov hwd_7 ymm11_7;
mov hwd_8 ymm10_c;
mov hwd_9 ymm11_c;
mov hwd_a ymm10_d;
mov hwd_b ymm11_d;
mov hwd_c ymm10_e;
mov hwd_d ymm11_e;
mov hwd_e ymm10_f;
mov hwd_f ymm11_f;
mov ymm11_0 hwd_0;
mov ymm11_1 hwd_1;
mov ymm11_2 hwd_2;
mov ymm11_3 hwd_3;
mov ymm11_4 hwd_4;
mov ymm11_5 hwd_5;
mov ymm11_6 hwd_6;
mov ymm11_7 hwd_7;
mov ymm11_8 hwd_8;
mov ymm11_9 hwd_9;
mov ymm11_a hwd_a;
mov ymm11_b hwd_b;
mov ymm11_c hwd_c;
mov ymm11_d hwd_d;
mov ymm11_e hwd_e;
mov ymm11_f hwd_f;
(* vbroadcasti128 0x240(%rdx),%ymm1                #! EA = L0x555555561360; Value = 0x14f9c95d7d46b345; PC = 0x5555555593d9 *)
mov ymm1_0 L0x555555561360;
mov ymm1_1 L0x555555561362;
mov ymm1_2 L0x555555561364;
mov ymm1_3 L0x555555561366;
mov ymm1_4 L0x555555561368;
mov ymm1_5 L0x55555556136a;
mov ymm1_6 L0x55555556136c;
mov ymm1_7 L0x55555556136e;
mov ymm1_8 L0x555555561360;
mov ymm1_9 L0x555555561362;
mov ymm1_a L0x555555561364;
mov ymm1_b L0x555555561366;
mov ymm1_c L0x555555561368;
mov ymm1_d L0x55555556136a;
mov ymm1_e L0x55555556136c;
mov ymm1_f L0x55555556136e;
(* vbroadcasti128 0x440(%rdx),%ymm2                #! EA = L0x555555561560; Value = 0xeef90b5df9460545; PC = 0x5555555593e2 *)
mov ymm2_0 L0x555555561560;
mov ymm2_1 L0x555555561562;
mov ymm2_2 L0x555555561564;
mov ymm2_3 L0x555555561566;
mov ymm2_4 L0x555555561568;
mov ymm2_5 L0x55555556156a;
mov ymm2_6 L0x55555556156c;
mov ymm2_7 L0x55555556156e;
mov ymm2_8 L0x555555561560;
mov ymm2_9 L0x555555561562;
mov ymm2_a L0x555555561564;
mov ymm2_b L0x555555561566;
mov ymm2_c L0x555555561568;
mov ymm2_d L0x55555556156a;
mov ymm2_e L0x55555556156c;
mov ymm2_f L0x55555556156e;
(* vpmullw %ymm1,%ymm3,%ymm10                      #! PC = 0x5555555593eb *)
smull mulHymm3_0 mulL_0 ymm1_0 ymm3_0;
smull mulHymm3_1 mulL_1 ymm1_1 ymm3_1;
smull mulHymm3_2 mulL_2 ymm1_2 ymm3_2;
smull mulHymm3_3 mulL_3 ymm1_3 ymm3_3;
smull mulHymm3_4 mulL_4 ymm1_4 ymm3_4;
smull mulHymm3_5 mulL_5 ymm1_5 ymm3_5;
smull mulHymm3_6 mulL_6 ymm1_6 ymm3_6;
smull mulHymm3_7 mulL_7 ymm1_7 ymm3_7;
smull mulHymm3_8 mulL_8 ymm1_8 ymm3_8;
smull mulHymm3_9 mulL_9 ymm1_9 ymm3_9;
smull mulHymm3_a mulL_a ymm1_a ymm3_a;
smull mulHymm3_b mulL_b ymm1_b ymm3_b;
smull mulHymm3_c mulL_c ymm1_c ymm3_c;
smull mulHymm3_d mulL_d ymm1_d ymm3_d;
smull mulHymm3_e mulL_e ymm1_e ymm3_e;
smull mulHymm3_f mulL_f ymm1_f ymm3_f;
cast ymm10_0@sint16 mulL_0;
cast ymm10_1@sint16 mulL_1;
cast ymm10_2@sint16 mulL_2;
cast ymm10_3@sint16 mulL_3;
cast ymm10_4@sint16 mulL_4;
cast ymm10_5@sint16 mulL_5;
cast ymm10_6@sint16 mulL_6;
cast ymm10_7@sint16 mulL_7;
cast ymm10_8@sint16 mulL_8;
cast ymm10_9@sint16 mulL_9;
cast ymm10_a@sint16 mulL_a;
cast ymm10_b@sint16 mulL_b;
cast ymm10_c@sint16 mulL_c;
cast ymm10_d@sint16 mulL_d;
cast ymm10_e@sint16 mulL_e;
cast ymm10_f@sint16 mulL_f;
(* vpmulhw %ymm2,%ymm3,%ymm3                       #! PC = 0x5555555593ef *)
smull mulH_0 mulLymm3_0 ymm3_0 ymm2_0;
smull mulH_1 mulLymm3_1 ymm3_1 ymm2_1;
smull mulH_2 mulLymm3_2 ymm3_2 ymm2_2;
smull mulH_3 mulLymm3_3 ymm3_3 ymm2_3;
smull mulH_4 mulLymm3_4 ymm3_4 ymm2_4;
smull mulH_5 mulLymm3_5 ymm3_5 ymm2_5;
smull mulH_6 mulLymm3_6 ymm3_6 ymm2_6;
smull mulH_7 mulLymm3_7 ymm3_7 ymm2_7;
smull mulH_8 mulLymm3_8 ymm3_8 ymm2_8;
smull mulH_9 mulLymm3_9 ymm3_9 ymm2_9;
smull mulH_a mulLymm3_a ymm3_a ymm2_a;
smull mulH_b mulLymm3_b ymm3_b ymm2_b;
smull mulH_c mulLymm3_c ymm3_c ymm2_c;
smull mulH_d mulLymm3_d ymm3_d ymm2_d;
smull mulH_e mulLymm3_e ymm3_e ymm2_e;
smull mulH_f mulLymm3_f ymm3_f ymm2_f;
mov ymm3_0 mulH_0;
mov ymm3_1 mulH_1;
mov ymm3_2 mulH_2;
mov ymm3_3 mulH_3;
mov ymm3_4 mulH_4;
mov ymm3_5 mulH_5;
mov ymm3_6 mulH_6;
mov ymm3_7 mulH_7;
mov ymm3_8 mulH_8;
mov ymm3_9 mulH_9;
mov ymm3_a mulH_a;
mov ymm3_b mulH_b;
mov ymm3_c mulH_c;
mov ymm3_d mulH_d;
mov ymm3_e mulH_e;
mov ymm3_f mulH_f;
(* vpmulhw %ymm0,%ymm10,%ymm10                     #! PC = 0x5555555593f3 *)
smull mulH_0 red_0 ymm10_0 ymm0_0;
assert true && red_0 = mulLymm3_0;
assume red_0 = mulLymm3_0 && true;
smull mulH_1 red_1 ymm10_1 ymm0_1;
assert true && red_1 = mulLymm3_1;
assume red_1 = mulLymm3_1 && true;
smull mulH_2 red_2 ymm10_2 ymm0_2;
assert true && red_2 = mulLymm3_2;
assume red_2 = mulLymm3_2 && true;
smull mulH_3 red_3 ymm10_3 ymm0_3;
assert true && red_3 = mulLymm3_3;
assume red_3 = mulLymm3_3 && true;
smull mulH_4 red_4 ymm10_4 ymm0_4;
assert true && red_4 = mulLymm3_4;
assume red_4 = mulLymm3_4 && true;
smull mulH_5 red_5 ymm10_5 ymm0_5;
assert true && red_5 = mulLymm3_5;
assume red_5 = mulLymm3_5 && true;
smull mulH_6 red_6 ymm10_6 ymm0_6;
assert true && red_6 = mulLymm3_6;
assume red_6 = mulLymm3_6 && true;
smull mulH_7 red_7 ymm10_7 ymm0_7;
assert true && red_7 = mulLymm3_7;
assume red_7 = mulLymm3_7 && true;
smull mulH_8 red_8 ymm10_8 ymm0_8;
assert true && red_8 = mulLymm3_8;
assume red_8 = mulLymm3_8 && true;
smull mulH_9 red_9 ymm10_9 ymm0_9;
assert true && red_9 = mulLymm3_9;
assume red_9 = mulLymm3_9 && true;
smull mulH_a red_a ymm10_a ymm0_a;
assert true && red_a = mulLymm3_a;
assume red_a = mulLymm3_a && true;
smull mulH_b red_b ymm10_b ymm0_b;
assert true && red_b = mulLymm3_b;
assume red_b = mulLymm3_b && true;
smull mulH_c red_c ymm10_c ymm0_c;
assert true && red_c = mulLymm3_c;
assume red_c = mulLymm3_c && true;
smull mulH_d red_d ymm10_d ymm0_d;
assert true && red_d = mulLymm3_d;
assume red_d = mulLymm3_d && true;
smull mulH_e red_e ymm10_e ymm0_e;
assert true && red_e = mulLymm3_e;
assume red_e = mulLymm3_e && true;
smull mulH_f red_f ymm10_f ymm0_f;
assert true && red_f = mulLymm3_f;
assume red_f = mulLymm3_f && true;
mov ymm10_0 mulH_0;
mov ymm10_1 mulH_1;
mov ymm10_2 mulH_2;
mov ymm10_3 mulH_3;
mov ymm10_4 mulH_4;
mov ymm10_5 mulH_5;
mov ymm10_6 mulH_6;
mov ymm10_7 mulH_7;
mov ymm10_8 mulH_8;
mov ymm10_9 mulH_9;
mov ymm10_a mulH_a;
mov ymm10_b mulH_b;
mov ymm10_c mulH_c;
mov ymm10_d mulH_d;
mov ymm10_e mulH_e;
mov ymm10_f mulH_f;
(* vpsubw %ymm10,%ymm3,%ymm3                       #! PC = 0x5555555593f7 *)
sub ymm3_0 ymm3_0 ymm10_0;
sub ymm3_1 ymm3_1 ymm10_1;
sub ymm3_2 ymm3_2 ymm10_2;
sub ymm3_3 ymm3_3 ymm10_3;
sub ymm3_4 ymm3_4 ymm10_4;
sub ymm3_5 ymm3_5 ymm10_5;
sub ymm3_6 ymm3_6 ymm10_6;
sub ymm3_7 ymm3_7 ymm10_7;
sub ymm3_8 ymm3_8 ymm10_8;
sub ymm3_9 ymm3_9 ymm10_9;
sub ymm3_a ymm3_a ymm10_a;
sub ymm3_b ymm3_b ymm10_b;
sub ymm3_c ymm3_c ymm10_c;
sub ymm3_d ymm3_d ymm10_d;
sub ymm3_e ymm3_e ymm10_e;
sub ymm3_f ymm3_f ymm10_f;
(* vbroadcasti128 0x250(%rdx),%ymm1                #! EA = L0x555555561370; Value = 0x8c46b402b6451c79; PC = 0x5555555593fc *)
mov ymm1_0 L0x555555561370;
mov ymm1_1 L0x555555561372;
mov ymm1_2 L0x555555561374;
mov ymm1_3 L0x555555561376;
mov ymm1_4 L0x555555561378;
mov ymm1_5 L0x55555556137a;
mov ymm1_6 L0x55555556137c;
mov ymm1_7 L0x55555556137e;
mov ymm1_8 L0x555555561370;
mov ymm1_9 L0x555555561372;
mov ymm1_a L0x555555561374;
mov ymm1_b L0x555555561376;
mov ymm1_c L0x555555561378;
mov ymm1_d L0x55555556137a;
mov ymm1_e L0x55555556137c;
mov ymm1_f L0x55555556137e;
(* vbroadcasti128 0x450(%rdx),%ymm2                #! EA = L0x555555561570; Value = 0x084608020845f679; PC = 0x555555559405 *)
mov ymm2_0 L0x555555561570;
mov ymm2_1 L0x555555561572;
mov ymm2_2 L0x555555561574;
mov ymm2_3 L0x555555561576;
mov ymm2_4 L0x555555561578;
mov ymm2_5 L0x55555556157a;
mov ymm2_6 L0x55555556157c;
mov ymm2_7 L0x55555556157e;
mov ymm2_8 L0x555555561570;
mov ymm2_9 L0x555555561572;
mov ymm2_a L0x555555561574;
mov ymm2_b L0x555555561576;
mov ymm2_c L0x555555561578;
mov ymm2_d L0x55555556157a;
mov ymm2_e L0x55555556157c;
mov ymm2_f L0x55555556157e;
(* vpmullw %ymm1,%ymm6,%ymm10                      #! PC = 0x55555555940e *)
smull mulHymm6_0 mulL_0 ymm1_0 ymm6_0;
smull mulHymm6_1 mulL_1 ymm1_1 ymm6_1;
smull mulHymm6_2 mulL_2 ymm1_2 ymm6_2;
smull mulHymm6_3 mulL_3 ymm1_3 ymm6_3;
smull mulHymm6_4 mulL_4 ymm1_4 ymm6_4;
smull mulHymm6_5 mulL_5 ymm1_5 ymm6_5;
smull mulHymm6_6 mulL_6 ymm1_6 ymm6_6;
smull mulHymm6_7 mulL_7 ymm1_7 ymm6_7;
smull mulHymm6_8 mulL_8 ymm1_8 ymm6_8;
smull mulHymm6_9 mulL_9 ymm1_9 ymm6_9;
smull mulHymm6_a mulL_a ymm1_a ymm6_a;
smull mulHymm6_b mulL_b ymm1_b ymm6_b;
smull mulHymm6_c mulL_c ymm1_c ymm6_c;
smull mulHymm6_d mulL_d ymm1_d ymm6_d;
smull mulHymm6_e mulL_e ymm1_e ymm6_e;
smull mulHymm6_f mulL_f ymm1_f ymm6_f;
cast ymm10_0@sint16 mulL_0;
cast ymm10_1@sint16 mulL_1;
cast ymm10_2@sint16 mulL_2;
cast ymm10_3@sint16 mulL_3;
cast ymm10_4@sint16 mulL_4;
cast ymm10_5@sint16 mulL_5;
cast ymm10_6@sint16 mulL_6;
cast ymm10_7@sint16 mulL_7;
cast ymm10_8@sint16 mulL_8;
cast ymm10_9@sint16 mulL_9;
cast ymm10_a@sint16 mulL_a;
cast ymm10_b@sint16 mulL_b;
cast ymm10_c@sint16 mulL_c;
cast ymm10_d@sint16 mulL_d;
cast ymm10_e@sint16 mulL_e;
cast ymm10_f@sint16 mulL_f;
(* vpmulhw %ymm2,%ymm6,%ymm6                       #! PC = 0x555555559412 *)
smull mulH_0 mulLymm6_0 ymm6_0 ymm2_0;
smull mulH_1 mulLymm6_1 ymm6_1 ymm2_1;
smull mulH_2 mulLymm6_2 ymm6_2 ymm2_2;
smull mulH_3 mulLymm6_3 ymm6_3 ymm2_3;
smull mulH_4 mulLymm6_4 ymm6_4 ymm2_4;
smull mulH_5 mulLymm6_5 ymm6_5 ymm2_5;
smull mulH_6 mulLymm6_6 ymm6_6 ymm2_6;
smull mulH_7 mulLymm6_7 ymm6_7 ymm2_7;
smull mulH_8 mulLymm6_8 ymm6_8 ymm2_8;
smull mulH_9 mulLymm6_9 ymm6_9 ymm2_9;
smull mulH_a mulLymm6_a ymm6_a ymm2_a;
smull mulH_b mulLymm6_b ymm6_b ymm2_b;
smull mulH_c mulLymm6_c ymm6_c ymm2_c;
smull mulH_d mulLymm6_d ymm6_d ymm2_d;
smull mulH_e mulLymm6_e ymm6_e ymm2_e;
smull mulH_f mulLymm6_f ymm6_f ymm2_f;
mov ymm6_0 mulH_0;
mov ymm6_1 mulH_1;
mov ymm6_2 mulH_2;
mov ymm6_3 mulH_3;
mov ymm6_4 mulH_4;
mov ymm6_5 mulH_5;
mov ymm6_6 mulH_6;
mov ymm6_7 mulH_7;
mov ymm6_8 mulH_8;
mov ymm6_9 mulH_9;
mov ymm6_a mulH_a;
mov ymm6_b mulH_b;
mov ymm6_c mulH_c;
mov ymm6_d mulH_d;
mov ymm6_e mulH_e;
mov ymm6_f mulH_f;
(* vpmulhw %ymm0,%ymm10,%ymm10                     #! PC = 0x555555559416 *)
smull mulH_0 red_0 ymm10_0 ymm0_0;
assert true && red_0 = mulLymm6_0;
assume red_0 = mulLymm6_0 && true;
smull mulH_1 red_1 ymm10_1 ymm0_1;
assert true && red_1 = mulLymm6_1;
assume red_1 = mulLymm6_1 && true;
smull mulH_2 red_2 ymm10_2 ymm0_2;
assert true && red_2 = mulLymm6_2;
assume red_2 = mulLymm6_2 && true;
smull mulH_3 red_3 ymm10_3 ymm0_3;
assert true && red_3 = mulLymm6_3;
assume red_3 = mulLymm6_3 && true;
smull mulH_4 red_4 ymm10_4 ymm0_4;
assert true && red_4 = mulLymm6_4;
assume red_4 = mulLymm6_4 && true;
smull mulH_5 red_5 ymm10_5 ymm0_5;
assert true && red_5 = mulLymm6_5;
assume red_5 = mulLymm6_5 && true;
smull mulH_6 red_6 ymm10_6 ymm0_6;
assert true && red_6 = mulLymm6_6;
assume red_6 = mulLymm6_6 && true;
smull mulH_7 red_7 ymm10_7 ymm0_7;
assert true && red_7 = mulLymm6_7;
assume red_7 = mulLymm6_7 && true;
smull mulH_8 red_8 ymm10_8 ymm0_8;
assert true && red_8 = mulLymm6_8;
assume red_8 = mulLymm6_8 && true;
smull mulH_9 red_9 ymm10_9 ymm0_9;
assert true && red_9 = mulLymm6_9;
assume red_9 = mulLymm6_9 && true;
smull mulH_a red_a ymm10_a ymm0_a;
assert true && red_a = mulLymm6_a;
assume red_a = mulLymm6_a && true;
smull mulH_b red_b ymm10_b ymm0_b;
assert true && red_b = mulLymm6_b;
assume red_b = mulLymm6_b && true;
smull mulH_c red_c ymm10_c ymm0_c;
assert true && red_c = mulLymm6_c;
assume red_c = mulLymm6_c && true;
smull mulH_d red_d ymm10_d ymm0_d;
assert true && red_d = mulLymm6_d;
assume red_d = mulLymm6_d && true;
smull mulH_e red_e ymm10_e ymm0_e;
assert true && red_e = mulLymm6_e;
assume red_e = mulLymm6_e && true;
smull mulH_f red_f ymm10_f ymm0_f;
assert true && red_f = mulLymm6_f;
assume red_f = mulLymm6_f && true;
mov ymm10_0 mulH_0;
mov ymm10_1 mulH_1;
mov ymm10_2 mulH_2;
mov ymm10_3 mulH_3;
mov ymm10_4 mulH_4;
mov ymm10_5 mulH_5;
mov ymm10_6 mulH_6;
mov ymm10_7 mulH_7;
mov ymm10_8 mulH_8;
mov ymm10_9 mulH_9;
mov ymm10_a mulH_a;
mov ymm10_b mulH_b;
mov ymm10_c mulH_c;
mov ymm10_d mulH_d;
mov ymm10_e mulH_e;
mov ymm10_f mulH_f;
(* vpsubw %ymm10,%ymm6,%ymm6                       #! PC = 0x55555555941a *)
sub ymm6_0 ymm6_0 ymm10_0;
sub ymm6_1 ymm6_1 ymm10_1;
sub ymm6_2 ymm6_2 ymm10_2;
sub ymm6_3 ymm6_3 ymm10_3;
sub ymm6_4 ymm6_4 ymm10_4;
sub ymm6_5 ymm6_5 ymm10_5;
sub ymm6_6 ymm6_6 ymm10_6;
sub ymm6_7 ymm6_7 ymm10_7;
sub ymm6_8 ymm6_8 ymm10_8;
sub ymm6_9 ymm6_9 ymm10_9;
sub ymm6_a ymm6_a ymm10_a;
sub ymm6_b ymm6_b ymm10_b;
sub ymm6_c ymm6_c ymm10_c;
sub ymm6_d ymm6_d ymm10_d;
sub ymm6_e ymm6_e ymm10_e;
sub ymm6_f ymm6_f ymm10_f;
(* vbroadcasti128 0x260(%rdx),%ymm1                #! EA = L0x555555561380; Value = 0x66b4f18de13837c8; PC = 0x55555555941f *)
mov ymm1_0 L0x555555561380;
mov ymm1_1 L0x555555561382;
mov ymm1_2 L0x555555561384;
mov ymm1_3 L0x555555561386;
mov ymm1_4 L0x555555561388;
mov ymm1_5 L0x55555556138a;
mov ymm1_6 L0x55555556138c;
mov ymm1_7 L0x55555556138e;
mov ymm1_8 L0x555555561380;
mov ymm1_9 L0x555555561382;
mov ymm1_a L0x555555561384;
mov ymm1_b L0x555555561386;
mov ymm1_c L0x555555561388;
mov ymm1_d L0x55555556138a;
mov ymm1_e L0x55555556138c;
mov ymm1_f L0x55555556138e;
(* vbroadcasti128 0x460(%rdx),%ymm2                #! EA = L0x555555561580; Value = 0xeeb4138d113807c8; PC = 0x555555559428 *)
mov ymm2_0 L0x555555561580;
mov ymm2_1 L0x555555561582;
mov ymm2_2 L0x555555561584;
mov ymm2_3 L0x555555561586;
mov ymm2_4 L0x555555561588;
mov ymm2_5 L0x55555556158a;
mov ymm2_6 L0x55555556158c;
mov ymm2_7 L0x55555556158e;
mov ymm2_8 L0x555555561580;
mov ymm2_9 L0x555555561582;
mov ymm2_a L0x555555561584;
mov ymm2_b L0x555555561586;
mov ymm2_c L0x555555561588;
mov ymm2_d L0x55555556158a;
mov ymm2_e L0x55555556158c;
mov ymm2_f L0x55555556158e;
(* vpmullw %ymm1,%ymm8,%ymm10                      #! PC = 0x555555559431 *)
smull mulHymm8_0 mulL_0 ymm1_0 ymm8_0;
smull mulHymm8_1 mulL_1 ymm1_1 ymm8_1;
smull mulHymm8_2 mulL_2 ymm1_2 ymm8_2;
smull mulHymm8_3 mulL_3 ymm1_3 ymm8_3;
smull mulHymm8_4 mulL_4 ymm1_4 ymm8_4;
smull mulHymm8_5 mulL_5 ymm1_5 ymm8_5;
smull mulHymm8_6 mulL_6 ymm1_6 ymm8_6;
smull mulHymm8_7 mulL_7 ymm1_7 ymm8_7;
smull mulHymm8_8 mulL_8 ymm1_8 ymm8_8;
smull mulHymm8_9 mulL_9 ymm1_9 ymm8_9;
smull mulHymm8_a mulL_a ymm1_a ymm8_a;
smull mulHymm8_b mulL_b ymm1_b ymm8_b;
smull mulHymm8_c mulL_c ymm1_c ymm8_c;
smull mulHymm8_d mulL_d ymm1_d ymm8_d;
smull mulHymm8_e mulL_e ymm1_e ymm8_e;
smull mulHymm8_f mulL_f ymm1_f ymm8_f;
cast ymm10_0@sint16 mulL_0;
cast ymm10_1@sint16 mulL_1;
cast ymm10_2@sint16 mulL_2;
cast ymm10_3@sint16 mulL_3;
cast ymm10_4@sint16 mulL_4;
cast ymm10_5@sint16 mulL_5;
cast ymm10_6@sint16 mulL_6;
cast ymm10_7@sint16 mulL_7;
cast ymm10_8@sint16 mulL_8;
cast ymm10_9@sint16 mulL_9;
cast ymm10_a@sint16 mulL_a;
cast ymm10_b@sint16 mulL_b;
cast ymm10_c@sint16 mulL_c;
cast ymm10_d@sint16 mulL_d;
cast ymm10_e@sint16 mulL_e;
cast ymm10_f@sint16 mulL_f;
(* vpmulhw %ymm2,%ymm8,%ymm8                       #! PC = 0x555555559435 *)
smull mulH_0 mulLymm8_0 ymm8_0 ymm2_0;
smull mulH_1 mulLymm8_1 ymm8_1 ymm2_1;
smull mulH_2 mulLymm8_2 ymm8_2 ymm2_2;
smull mulH_3 mulLymm8_3 ymm8_3 ymm2_3;
smull mulH_4 mulLymm8_4 ymm8_4 ymm2_4;
smull mulH_5 mulLymm8_5 ymm8_5 ymm2_5;
smull mulH_6 mulLymm8_6 ymm8_6 ymm2_6;
smull mulH_7 mulLymm8_7 ymm8_7 ymm2_7;
smull mulH_8 mulLymm8_8 ymm8_8 ymm2_8;
smull mulH_9 mulLymm8_9 ymm8_9 ymm2_9;
smull mulH_a mulLymm8_a ymm8_a ymm2_a;
smull mulH_b mulLymm8_b ymm8_b ymm2_b;
smull mulH_c mulLymm8_c ymm8_c ymm2_c;
smull mulH_d mulLymm8_d ymm8_d ymm2_d;
smull mulH_e mulLymm8_e ymm8_e ymm2_e;
smull mulH_f mulLymm8_f ymm8_f ymm2_f;
mov ymm8_0 mulH_0;
mov ymm8_1 mulH_1;
mov ymm8_2 mulH_2;
mov ymm8_3 mulH_3;
mov ymm8_4 mulH_4;
mov ymm8_5 mulH_5;
mov ymm8_6 mulH_6;
mov ymm8_7 mulH_7;
mov ymm8_8 mulH_8;
mov ymm8_9 mulH_9;
mov ymm8_a mulH_a;
mov ymm8_b mulH_b;
mov ymm8_c mulH_c;
mov ymm8_d mulH_d;
mov ymm8_e mulH_e;
mov ymm8_f mulH_f;
(* vpmulhw %ymm0,%ymm10,%ymm10                     #! PC = 0x555555559439 *)
smull mulH_0 red_0 ymm10_0 ymm0_0;
assert true && red_0 = mulLymm8_0;
assume red_0 = mulLymm8_0 && true;
smull mulH_1 red_1 ymm10_1 ymm0_1;
assert true && red_1 = mulLymm8_1;
assume red_1 = mulLymm8_1 && true;
smull mulH_2 red_2 ymm10_2 ymm0_2;
assert true && red_2 = mulLymm8_2;
assume red_2 = mulLymm8_2 && true;
smull mulH_3 red_3 ymm10_3 ymm0_3;
assert true && red_3 = mulLymm8_3;
assume red_3 = mulLymm8_3 && true;
smull mulH_4 red_4 ymm10_4 ymm0_4;
assert true && red_4 = mulLymm8_4;
assume red_4 = mulLymm8_4 && true;
smull mulH_5 red_5 ymm10_5 ymm0_5;
assert true && red_5 = mulLymm8_5;
assume red_5 = mulLymm8_5 && true;
smull mulH_6 red_6 ymm10_6 ymm0_6;
assert true && red_6 = mulLymm8_6;
assume red_6 = mulLymm8_6 && true;
smull mulH_7 red_7 ymm10_7 ymm0_7;
assert true && red_7 = mulLymm8_7;
assume red_7 = mulLymm8_7 && true;
smull mulH_8 red_8 ymm10_8 ymm0_8;
assert true && red_8 = mulLymm8_8;
assume red_8 = mulLymm8_8 && true;
smull mulH_9 red_9 ymm10_9 ymm0_9;
assert true && red_9 = mulLymm8_9;
assume red_9 = mulLymm8_9 && true;
smull mulH_a red_a ymm10_a ymm0_a;
assert true && red_a = mulLymm8_a;
assume red_a = mulLymm8_a && true;
smull mulH_b red_b ymm10_b ymm0_b;
assert true && red_b = mulLymm8_b;
assume red_b = mulLymm8_b && true;
smull mulH_c red_c ymm10_c ymm0_c;
assert true && red_c = mulLymm8_c;
assume red_c = mulLymm8_c && true;
smull mulH_d red_d ymm10_d ymm0_d;
assert true && red_d = mulLymm8_d;
assume red_d = mulLymm8_d && true;
smull mulH_e red_e ymm10_e ymm0_e;
assert true && red_e = mulLymm8_e;
assume red_e = mulLymm8_e && true;
smull mulH_f red_f ymm10_f ymm0_f;
assert true && red_f = mulLymm8_f;
assume red_f = mulLymm8_f && true;
mov ymm10_0 mulH_0;
mov ymm10_1 mulH_1;
mov ymm10_2 mulH_2;
mov ymm10_3 mulH_3;
mov ymm10_4 mulH_4;
mov ymm10_5 mulH_5;
mov ymm10_6 mulH_6;
mov ymm10_7 mulH_7;
mov ymm10_8 mulH_8;
mov ymm10_9 mulH_9;
mov ymm10_a mulH_a;
mov ymm10_b mulH_b;
mov ymm10_c mulH_c;
mov ymm10_d mulH_d;
mov ymm10_e mulH_e;
mov ymm10_f mulH_f;
(* vpsubw %ymm10,%ymm8,%ymm8                       #! PC = 0x55555555943d *)
sub ymm8_0 ymm8_0 ymm10_0;
sub ymm8_1 ymm8_1 ymm10_1;
sub ymm8_2 ymm8_2 ymm10_2;
sub ymm8_3 ymm8_3 ymm10_3;
sub ymm8_4 ymm8_4 ymm10_4;
sub ymm8_5 ymm8_5 ymm10_5;
sub ymm8_6 ymm8_6 ymm10_6;
sub ymm8_7 ymm8_7 ymm10_7;
sub ymm8_8 ymm8_8 ymm10_8;
sub ymm8_9 ymm8_9 ymm10_9;
sub ymm8_a ymm8_a ymm10_a;
sub ymm8_b ymm8_b ymm10_b;
sub ymm8_c ymm8_c ymm10_c;
sub ymm8_d ymm8_d ymm10_d;
sub ymm8_e ymm8_e ymm10_e;
sub ymm8_f ymm8_f ymm10_f;
(* vbroadcasti128 0x270(%rdx),%ymm1                #! EA = L0x555555561390; Value = 0xf943db813c9772ba; PC = 0x555555559442 *)
mov ymm1_0 L0x555555561390;
mov ymm1_1 L0x555555561392;
mov ymm1_2 L0x555555561394;
mov ymm1_3 L0x555555561396;
mov ymm1_4 L0x555555561398;
mov ymm1_5 L0x55555556139a;
mov ymm1_6 L0x55555556139c;
mov ymm1_7 L0x55555556139e;
mov ymm1_8 L0x555555561390;
mov ymm1_9 L0x555555561392;
mov ymm1_a L0x555555561394;
mov ymm1_b L0x555555561396;
mov ymm1_c L0x555555561398;
mov ymm1_d L0x55555556139a;
mov ymm1_e L0x55555556139c;
mov ymm1_f L0x55555556139e;
(* vbroadcasti128 0x470(%rdx),%ymm2                #! EA = L0x555555561590; Value = 0xf74305810297f6ba; PC = 0x55555555944b *)
mov ymm2_0 L0x555555561590;
mov ymm2_1 L0x555555561592;
mov ymm2_2 L0x555555561594;
mov ymm2_3 L0x555555561596;
mov ymm2_4 L0x555555561598;
mov ymm2_5 L0x55555556159a;
mov ymm2_6 L0x55555556159c;
mov ymm2_7 L0x55555556159e;
mov ymm2_8 L0x555555561590;
mov ymm2_9 L0x555555561592;
mov ymm2_a L0x555555561594;
mov ymm2_b L0x555555561596;
mov ymm2_c L0x555555561598;
mov ymm2_d L0x55555556159a;
mov ymm2_e L0x55555556159c;
mov ymm2_f L0x55555556159e;
(* vpmullw %ymm1,%ymm11,%ymm10                     #! PC = 0x555555559454 *)
smull mulHymm11_0 mulL_0 ymm1_0 ymm11_0;
smull mulHymm11_1 mulL_1 ymm1_1 ymm11_1;
smull mulHymm11_2 mulL_2 ymm1_2 ymm11_2;
smull mulHymm11_3 mulL_3 ymm1_3 ymm11_3;
smull mulHymm11_4 mulL_4 ymm1_4 ymm11_4;
smull mulHymm11_5 mulL_5 ymm1_5 ymm11_5;
smull mulHymm11_6 mulL_6 ymm1_6 ymm11_6;
smull mulHymm11_7 mulL_7 ymm1_7 ymm11_7;
smull mulHymm11_8 mulL_8 ymm1_8 ymm11_8;
smull mulHymm11_9 mulL_9 ymm1_9 ymm11_9;
smull mulHymm11_a mulL_a ymm1_a ymm11_a;
smull mulHymm11_b mulL_b ymm1_b ymm11_b;
smull mulHymm11_c mulL_c ymm1_c ymm11_c;
smull mulHymm11_d mulL_d ymm1_d ymm11_d;
smull mulHymm11_e mulL_e ymm1_e ymm11_e;
smull mulHymm11_f mulL_f ymm1_f ymm11_f;
cast ymm10_0@sint16 mulL_0;
cast ymm10_1@sint16 mulL_1;
cast ymm10_2@sint16 mulL_2;
cast ymm10_3@sint16 mulL_3;
cast ymm10_4@sint16 mulL_4;
cast ymm10_5@sint16 mulL_5;
cast ymm10_6@sint16 mulL_6;
cast ymm10_7@sint16 mulL_7;
cast ymm10_8@sint16 mulL_8;
cast ymm10_9@sint16 mulL_9;
cast ymm10_a@sint16 mulL_a;
cast ymm10_b@sint16 mulL_b;
cast ymm10_c@sint16 mulL_c;
cast ymm10_d@sint16 mulL_d;
cast ymm10_e@sint16 mulL_e;
cast ymm10_f@sint16 mulL_f;
(* vpmulhw %ymm2,%ymm11,%ymm11                     #! PC = 0x555555559458 *)
smull mulH_0 mulLymm11_0 ymm11_0 ymm2_0;
smull mulH_1 mulLymm11_1 ymm11_1 ymm2_1;
smull mulH_2 mulLymm11_2 ymm11_2 ymm2_2;
smull mulH_3 mulLymm11_3 ymm11_3 ymm2_3;
smull mulH_4 mulLymm11_4 ymm11_4 ymm2_4;
smull mulH_5 mulLymm11_5 ymm11_5 ymm2_5;
smull mulH_6 mulLymm11_6 ymm11_6 ymm2_6;
smull mulH_7 mulLymm11_7 ymm11_7 ymm2_7;
smull mulH_8 mulLymm11_8 ymm11_8 ymm2_8;
smull mulH_9 mulLymm11_9 ymm11_9 ymm2_9;
smull mulH_a mulLymm11_a ymm11_a ymm2_a;
smull mulH_b mulLymm11_b ymm11_b ymm2_b;
smull mulH_c mulLymm11_c ymm11_c ymm2_c;
smull mulH_d mulLymm11_d ymm11_d ymm2_d;
smull mulH_e mulLymm11_e ymm11_e ymm2_e;
smull mulH_f mulLymm11_f ymm11_f ymm2_f;
mov ymm11_0 mulH_0;
mov ymm11_1 mulH_1;
mov ymm11_2 mulH_2;
mov ymm11_3 mulH_3;
mov ymm11_4 mulH_4;
mov ymm11_5 mulH_5;
mov ymm11_6 mulH_6;
mov ymm11_7 mulH_7;
mov ymm11_8 mulH_8;
mov ymm11_9 mulH_9;
mov ymm11_a mulH_a;
mov ymm11_b mulH_b;
mov ymm11_c mulH_c;
mov ymm11_d mulH_d;
mov ymm11_e mulH_e;
mov ymm11_f mulH_f;
(* vpmulhw %ymm0,%ymm10,%ymm10                     #! PC = 0x55555555945c *)
smull mulH_0 red_0 ymm10_0 ymm0_0;
assert true && red_0 = mulLymm11_0;
assume red_0 = mulLymm11_0 && true;
smull mulH_1 red_1 ymm10_1 ymm0_1;
assert true && red_1 = mulLymm11_1;
assume red_1 = mulLymm11_1 && true;
smull mulH_2 red_2 ymm10_2 ymm0_2;
assert true && red_2 = mulLymm11_2;
assume red_2 = mulLymm11_2 && true;
smull mulH_3 red_3 ymm10_3 ymm0_3;
assert true && red_3 = mulLymm11_3;
assume red_3 = mulLymm11_3 && true;
smull mulH_4 red_4 ymm10_4 ymm0_4;
assert true && red_4 = mulLymm11_4;
assume red_4 = mulLymm11_4 && true;
smull mulH_5 red_5 ymm10_5 ymm0_5;
assert true && red_5 = mulLymm11_5;
assume red_5 = mulLymm11_5 && true;
smull mulH_6 red_6 ymm10_6 ymm0_6;
assert true && red_6 = mulLymm11_6;
assume red_6 = mulLymm11_6 && true;
smull mulH_7 red_7 ymm10_7 ymm0_7;
assert true && red_7 = mulLymm11_7;
assume red_7 = mulLymm11_7 && true;
smull mulH_8 red_8 ymm10_8 ymm0_8;
assert true && red_8 = mulLymm11_8;
assume red_8 = mulLymm11_8 && true;
smull mulH_9 red_9 ymm10_9 ymm0_9;
assert true && red_9 = mulLymm11_9;
assume red_9 = mulLymm11_9 && true;
smull mulH_a red_a ymm10_a ymm0_a;
assert true && red_a = mulLymm11_a;
assume red_a = mulLymm11_a && true;
smull mulH_b red_b ymm10_b ymm0_b;
assert true && red_b = mulLymm11_b;
assume red_b = mulLymm11_b && true;
smull mulH_c red_c ymm10_c ymm0_c;
assert true && red_c = mulLymm11_c;
assume red_c = mulLymm11_c && true;
smull mulH_d red_d ymm10_d ymm0_d;
assert true && red_d = mulLymm11_d;
assume red_d = mulLymm11_d && true;
smull mulH_e red_e ymm10_e ymm0_e;
assert true && red_e = mulLymm11_e;
assume red_e = mulLymm11_e && true;
smull mulH_f red_f ymm10_f ymm0_f;
assert true && red_f = mulLymm11_f;
assume red_f = mulLymm11_f && true;
mov ymm10_0 mulH_0;
mov ymm10_1 mulH_1;
mov ymm10_2 mulH_2;
mov ymm10_3 mulH_3;
mov ymm10_4 mulH_4;
mov ymm10_5 mulH_5;
mov ymm10_6 mulH_6;
mov ymm10_7 mulH_7;
mov ymm10_8 mulH_8;
mov ymm10_9 mulH_9;
mov ymm10_a mulH_a;
mov ymm10_b mulH_b;
mov ymm10_c mulH_c;
mov ymm10_d mulH_d;
mov ymm10_e mulH_e;
mov ymm10_f mulH_f;
(* vpsubw %ymm10,%ymm11,%ymm11                     #! PC = 0x555555559460 *)
sub ymm11_0 ymm11_0 ymm10_0;
sub ymm11_1 ymm11_1 ymm10_1;
sub ymm11_2 ymm11_2 ymm10_2;
sub ymm11_3 ymm11_3 ymm10_3;
sub ymm11_4 ymm11_4 ymm10_4;
sub ymm11_5 ymm11_5 ymm10_5;
sub ymm11_6 ymm11_6 ymm10_6;
sub ymm11_7 ymm11_7 ymm10_7;
sub ymm11_8 ymm11_8 ymm10_8;
sub ymm11_9 ymm11_9 ymm10_9;
sub ymm11_a ymm11_a ymm10_a;
sub ymm11_b ymm11_b ymm10_b;
sub ymm11_c ymm11_c ymm10_c;
sub ymm11_d ymm11_d ymm10_d;
sub ymm11_e ymm11_e ymm10_e;
sub ymm11_f ymm11_f ymm10_f;
(* vpaddw %ymm3,%ymm9,%ymm10                       #! PC = 0x555555559465 *)
add ymm10_0 ymm9_0 ymm3_0;
add ymm10_1 ymm9_1 ymm3_1;
add ymm10_2 ymm9_2 ymm3_2;
add ymm10_3 ymm9_3 ymm3_3;
add ymm10_4 ymm9_4 ymm3_4;
add ymm10_5 ymm9_5 ymm3_5;
add ymm10_6 ymm9_6 ymm3_6;
add ymm10_7 ymm9_7 ymm3_7;
add ymm10_8 ymm9_8 ymm3_8;
add ymm10_9 ymm9_9 ymm3_9;
add ymm10_a ymm9_a ymm3_a;
add ymm10_b ymm9_b ymm3_b;
add ymm10_c ymm9_c ymm3_c;
add ymm10_d ymm9_d ymm3_d;
add ymm10_e ymm9_e ymm3_e;
add ymm10_f ymm9_f ymm3_f;
(* vpsubw %ymm3,%ymm9,%ymm3                        #! PC = 0x555555559469 *)
sub ymm3_0 ymm9_0 ymm3_0;
sub ymm3_1 ymm9_1 ymm3_1;
sub ymm3_2 ymm9_2 ymm3_2;
sub ymm3_3 ymm9_3 ymm3_3;
sub ymm3_4 ymm9_4 ymm3_4;
sub ymm3_5 ymm9_5 ymm3_5;
sub ymm3_6 ymm9_6 ymm3_6;
sub ymm3_7 ymm9_7 ymm3_7;
sub ymm3_8 ymm9_8 ymm3_8;
sub ymm3_9 ymm9_9 ymm3_9;
sub ymm3_a ymm9_a ymm3_a;
sub ymm3_b ymm9_b ymm3_b;
sub ymm3_c ymm9_c ymm3_c;
sub ymm3_d ymm9_d ymm3_d;
sub ymm3_e ymm9_e ymm3_e;
sub ymm3_f ymm9_f ymm3_f;
(* vpaddw %ymm6,%ymm7,%ymm9                        #! PC = 0x55555555946d *)
add ymm9_0 ymm7_0 ymm6_0;
add ymm9_1 ymm7_1 ymm6_1;
add ymm9_2 ymm7_2 ymm6_2;
add ymm9_3 ymm7_3 ymm6_3;
add ymm9_4 ymm7_4 ymm6_4;
add ymm9_5 ymm7_5 ymm6_5;
add ymm9_6 ymm7_6 ymm6_6;
add ymm9_7 ymm7_7 ymm6_7;
add ymm9_8 ymm7_8 ymm6_8;
add ymm9_9 ymm7_9 ymm6_9;
add ymm9_a ymm7_a ymm6_a;
add ymm9_b ymm7_b ymm6_b;
add ymm9_c ymm7_c ymm6_c;
add ymm9_d ymm7_d ymm6_d;
add ymm9_e ymm7_e ymm6_e;
add ymm9_f ymm7_f ymm6_f;
(* vpsubw %ymm6,%ymm7,%ymm6                        #! PC = 0x555555559471 *)
sub ymm6_0 ymm7_0 ymm6_0;
sub ymm6_1 ymm7_1 ymm6_1;
sub ymm6_2 ymm7_2 ymm6_2;
sub ymm6_3 ymm7_3 ymm6_3;
sub ymm6_4 ymm7_4 ymm6_4;
sub ymm6_5 ymm7_5 ymm6_5;
sub ymm6_6 ymm7_6 ymm6_6;
sub ymm6_7 ymm7_7 ymm6_7;
sub ymm6_8 ymm7_8 ymm6_8;
sub ymm6_9 ymm7_9 ymm6_9;
sub ymm6_a ymm7_a ymm6_a;
sub ymm6_b ymm7_b ymm6_b;
sub ymm6_c ymm7_c ymm6_c;
sub ymm6_d ymm7_d ymm6_d;
sub ymm6_e ymm7_e ymm6_e;
sub ymm6_f ymm7_f ymm6_f;
(* vpaddw %ymm8,%ymm5,%ymm7                        #! PC = 0x555555559475 *)
add ymm7_0 ymm5_0 ymm8_0;
add ymm7_1 ymm5_1 ymm8_1;
add ymm7_2 ymm5_2 ymm8_2;
add ymm7_3 ymm5_3 ymm8_3;
add ymm7_4 ymm5_4 ymm8_4;
add ymm7_5 ymm5_5 ymm8_5;
add ymm7_6 ymm5_6 ymm8_6;
add ymm7_7 ymm5_7 ymm8_7;
add ymm7_8 ymm5_8 ymm8_8;
add ymm7_9 ymm5_9 ymm8_9;
add ymm7_a ymm5_a ymm8_a;
add ymm7_b ymm5_b ymm8_b;
add ymm7_c ymm5_c ymm8_c;
add ymm7_d ymm5_d ymm8_d;
add ymm7_e ymm5_e ymm8_e;
add ymm7_f ymm5_f ymm8_f;
(* vpsubw %ymm8,%ymm5,%ymm8                        #! PC = 0x55555555947a *)
sub ymm8_0 ymm5_0 ymm8_0;
sub ymm8_1 ymm5_1 ymm8_1;
sub ymm8_2 ymm5_2 ymm8_2;
sub ymm8_3 ymm5_3 ymm8_3;
sub ymm8_4 ymm5_4 ymm8_4;
sub ymm8_5 ymm5_5 ymm8_5;
sub ymm8_6 ymm5_6 ymm8_6;
sub ymm8_7 ymm5_7 ymm8_7;
sub ymm8_8 ymm5_8 ymm8_8;
sub ymm8_9 ymm5_9 ymm8_9;
sub ymm8_a ymm5_a ymm8_a;
sub ymm8_b ymm5_b ymm8_b;
sub ymm8_c ymm5_c ymm8_c;
sub ymm8_d ymm5_d ymm8_d;
sub ymm8_e ymm5_e ymm8_e;
sub ymm8_f ymm5_f ymm8_f;
(* vpaddw %ymm11,%ymm4,%ymm5                       #! PC = 0x55555555947f *)
add ymm5_0 ymm4_0 ymm11_0;
add ymm5_1 ymm4_1 ymm11_1;
add ymm5_2 ymm4_2 ymm11_2;
add ymm5_3 ymm4_3 ymm11_3;
add ymm5_4 ymm4_4 ymm11_4;
add ymm5_5 ymm4_5 ymm11_5;
add ymm5_6 ymm4_6 ymm11_6;
add ymm5_7 ymm4_7 ymm11_7;
add ymm5_8 ymm4_8 ymm11_8;
add ymm5_9 ymm4_9 ymm11_9;
add ymm5_a ymm4_a ymm11_a;
add ymm5_b ymm4_b ymm11_b;
add ymm5_c ymm4_c ymm11_c;
add ymm5_d ymm4_d ymm11_d;
add ymm5_e ymm4_e ymm11_e;
add ymm5_f ymm4_f ymm11_f;
(* vpsubw %ymm11,%ymm4,%ymm11                      #! PC = 0x555555559484 *)
sub ymm11_0 ymm4_0 ymm11_0;
sub ymm11_1 ymm4_1 ymm11_1;
sub ymm11_2 ymm4_2 ymm11_2;
sub ymm11_3 ymm4_3 ymm11_3;
sub ymm11_4 ymm4_4 ymm11_4;
sub ymm11_5 ymm4_5 ymm11_5;
sub ymm11_6 ymm4_6 ymm11_6;
sub ymm11_7 ymm4_7 ymm11_7;
sub ymm11_8 ymm4_8 ymm11_8;
sub ymm11_9 ymm4_9 ymm11_9;
sub ymm11_a ymm4_a ymm11_a;
sub ymm11_b ymm4_b ymm11_b;
sub ymm11_c ymm4_c ymm11_c;
sub ymm11_d ymm4_d ymm11_d;
sub ymm11_e ymm4_e ymm11_e;
sub ymm11_f ymm4_f ymm11_f;
(* vmovdqa %ymm10,0x500(%rdi)                      #! EA = L0x7fffffffd7e0; PC = 0x555555559489 *)
mov L0x7fffffffd7e0 ymm10_0;
mov L0x7fffffffd7e2 ymm10_1;
mov L0x7fffffffd7e4 ymm10_2;
mov L0x7fffffffd7e6 ymm10_3;
mov L0x7fffffffd7e8 ymm10_4;
mov L0x7fffffffd7ea ymm10_5;
mov L0x7fffffffd7ec ymm10_6;
mov L0x7fffffffd7ee ymm10_7;
mov L0x7fffffffd7f0 ymm10_8;
mov L0x7fffffffd7f2 ymm10_9;
mov L0x7fffffffd7f4 ymm10_a;
mov L0x7fffffffd7f6 ymm10_b;
mov L0x7fffffffd7f8 ymm10_c;
mov L0x7fffffffd7fa ymm10_d;
mov L0x7fffffffd7fc ymm10_e;
mov L0x7fffffffd7fe ymm10_f;
(* vmovdqa %ymm3,0x520(%rdi)                       #! EA = L0x7fffffffd800; PC = 0x555555559491 *)
mov L0x7fffffffd800 ymm3_0;
mov L0x7fffffffd802 ymm3_1;
mov L0x7fffffffd804 ymm3_2;
mov L0x7fffffffd806 ymm3_3;
mov L0x7fffffffd808 ymm3_4;
mov L0x7fffffffd80a ymm3_5;
mov L0x7fffffffd80c ymm3_6;
mov L0x7fffffffd80e ymm3_7;
mov L0x7fffffffd810 ymm3_8;
mov L0x7fffffffd812 ymm3_9;
mov L0x7fffffffd814 ymm3_a;
mov L0x7fffffffd816 ymm3_b;
mov L0x7fffffffd818 ymm3_c;
mov L0x7fffffffd81a ymm3_d;
mov L0x7fffffffd81c ymm3_e;
mov L0x7fffffffd81e ymm3_f;
(* vmovdqa %ymm9,0x540(%rdi)                       #! EA = L0x7fffffffd820; PC = 0x555555559499 *)
mov L0x7fffffffd820 ymm9_0;
mov L0x7fffffffd822 ymm9_1;
mov L0x7fffffffd824 ymm9_2;
mov L0x7fffffffd826 ymm9_3;
mov L0x7fffffffd828 ymm9_4;
mov L0x7fffffffd82a ymm9_5;
mov L0x7fffffffd82c ymm9_6;
mov L0x7fffffffd82e ymm9_7;
mov L0x7fffffffd830 ymm9_8;
mov L0x7fffffffd832 ymm9_9;
mov L0x7fffffffd834 ymm9_a;
mov L0x7fffffffd836 ymm9_b;
mov L0x7fffffffd838 ymm9_c;
mov L0x7fffffffd83a ymm9_d;
mov L0x7fffffffd83c ymm9_e;
mov L0x7fffffffd83e ymm9_f;
(* vmovdqa %ymm6,0x560(%rdi)                       #! EA = L0x7fffffffd840; PC = 0x5555555594a1 *)
mov L0x7fffffffd840 ymm6_0;
mov L0x7fffffffd842 ymm6_1;
mov L0x7fffffffd844 ymm6_2;
mov L0x7fffffffd846 ymm6_3;
mov L0x7fffffffd848 ymm6_4;
mov L0x7fffffffd84a ymm6_5;
mov L0x7fffffffd84c ymm6_6;
mov L0x7fffffffd84e ymm6_7;
mov L0x7fffffffd850 ymm6_8;
mov L0x7fffffffd852 ymm6_9;
mov L0x7fffffffd854 ymm6_a;
mov L0x7fffffffd856 ymm6_b;
mov L0x7fffffffd858 ymm6_c;
mov L0x7fffffffd85a ymm6_d;
mov L0x7fffffffd85c ymm6_e;
mov L0x7fffffffd85e ymm6_f;
(* vmovdqa %ymm7,0x580(%rdi)                       #! EA = L0x7fffffffd860; PC = 0x5555555594a9 *)
mov L0x7fffffffd860 ymm7_0;
mov L0x7fffffffd862 ymm7_1;
mov L0x7fffffffd864 ymm7_2;
mov L0x7fffffffd866 ymm7_3;
mov L0x7fffffffd868 ymm7_4;
mov L0x7fffffffd86a ymm7_5;
mov L0x7fffffffd86c ymm7_6;
mov L0x7fffffffd86e ymm7_7;
mov L0x7fffffffd870 ymm7_8;
mov L0x7fffffffd872 ymm7_9;
mov L0x7fffffffd874 ymm7_a;
mov L0x7fffffffd876 ymm7_b;
mov L0x7fffffffd878 ymm7_c;
mov L0x7fffffffd87a ymm7_d;
mov L0x7fffffffd87c ymm7_e;
mov L0x7fffffffd87e ymm7_f;
(* vmovdqa %ymm8,0x5a0(%rdi)                       #! EA = L0x7fffffffd880; PC = 0x5555555594b1 *)
mov L0x7fffffffd880 ymm8_0;
mov L0x7fffffffd882 ymm8_1;
mov L0x7fffffffd884 ymm8_2;
mov L0x7fffffffd886 ymm8_3;
mov L0x7fffffffd888 ymm8_4;
mov L0x7fffffffd88a ymm8_5;
mov L0x7fffffffd88c ymm8_6;
mov L0x7fffffffd88e ymm8_7;
mov L0x7fffffffd890 ymm8_8;
mov L0x7fffffffd892 ymm8_9;
mov L0x7fffffffd894 ymm8_a;
mov L0x7fffffffd896 ymm8_b;
mov L0x7fffffffd898 ymm8_c;
mov L0x7fffffffd89a ymm8_d;
mov L0x7fffffffd89c ymm8_e;
mov L0x7fffffffd89e ymm8_f;
(* vmovdqa %ymm5,0x5c0(%rdi)                       #! EA = L0x7fffffffd8a0; PC = 0x5555555594b9 *)
mov L0x7fffffffd8a0 ymm5_0;
mov L0x7fffffffd8a2 ymm5_1;
mov L0x7fffffffd8a4 ymm5_2;
mov L0x7fffffffd8a6 ymm5_3;
mov L0x7fffffffd8a8 ymm5_4;
mov L0x7fffffffd8aa ymm5_5;
mov L0x7fffffffd8ac ymm5_6;
mov L0x7fffffffd8ae ymm5_7;
mov L0x7fffffffd8b0 ymm5_8;
mov L0x7fffffffd8b2 ymm5_9;
mov L0x7fffffffd8b4 ymm5_a;
mov L0x7fffffffd8b6 ymm5_b;
mov L0x7fffffffd8b8 ymm5_c;
mov L0x7fffffffd8ba ymm5_d;
mov L0x7fffffffd8bc ymm5_e;
mov L0x7fffffffd8be ymm5_f;
(* vmovdqa %ymm11,0x5e0(%rdi)                      #! EA = L0x7fffffffd8c0; PC = 0x5555555594c1 *)
mov L0x7fffffffd8c0 ymm11_0;
mov L0x7fffffffd8c2 ymm11_1;
mov L0x7fffffffd8c4 ymm11_2;
mov L0x7fffffffd8c6 ymm11_3;
mov L0x7fffffffd8c8 ymm11_4;
mov L0x7fffffffd8ca ymm11_5;
mov L0x7fffffffd8cc ymm11_6;
mov L0x7fffffffd8ce ymm11_7;
mov L0x7fffffffd8d0 ymm11_8;
mov L0x7fffffffd8d2 ymm11_9;
mov L0x7fffffffd8d4 ymm11_a;
mov L0x7fffffffd8d6 ymm11_b;
mov L0x7fffffffd8d8 ymm11_c;
mov L0x7fffffffd8da ymm11_d;
mov L0x7fffffffd8dc ymm11_e;
mov L0x7fffffffd8de ymm11_f;


(**************** LEVELS 3-8, 5 *****************)


(**************** CUT 155, 18 *****************)

cut 
  and [
eqmod (inp_poly**2) (L0x7fffffffd7e0*x** 0+L0x7fffffffd7f0*x** 1)
      [10753, x**2 - 3223],
eqmod (inp_poly**2) (L0x7fffffffd800*x** 0+L0x7fffffffd810*x** 1)
      [10753, x**2 - 7530],
eqmod (inp_poly**2) (L0x7fffffffd7e2*x** 0+L0x7fffffffd7f2*x** 1)
      [10753, x**2 - 5491],
eqmod (inp_poly**2) (L0x7fffffffd802*x** 0+L0x7fffffffd812*x** 1)
      [10753, x**2 - 5262],
eqmod (inp_poly**2) (L0x7fffffffd7e4*x** 0+L0x7fffffffd7f4*x** 1)
      [10753, x**2 - 2295],
eqmod (inp_poly**2) (L0x7fffffffd804*x** 0+L0x7fffffffd814*x** 1)
      [10753, x**2 - 8458],
eqmod (inp_poly**2) (L0x7fffffffd7e6*x** 0+L0x7fffffffd7f6*x** 1)
      [10753, x**2 - 9872],
eqmod (inp_poly**2) (L0x7fffffffd806*x** 0+L0x7fffffffd816*x** 1)
      [10753, x**2 - 881],
eqmod (inp_poly**2) (L0x7fffffffd7e8*x** 0+L0x7fffffffd7f8*x** 1)
      [10753, x**2 - 6953],
eqmod (inp_poly**2) (L0x7fffffffd808*x** 0+L0x7fffffffd818*x** 1)
      [10753, x**2 - 3800],
eqmod (inp_poly**2) (L0x7fffffffd7ea*x** 0+L0x7fffffffd7fa*x** 1)
      [10753, x**2 - 3942],
eqmod (inp_poly**2) (L0x7fffffffd80a*x** 0+L0x7fffffffd81a*x** 1)
      [10753, x**2 - 6811],
eqmod (inp_poly**2) (L0x7fffffffd7ec*x** 0+L0x7fffffffd7fc*x** 1)
      [10753, x**2 - 6042],
eqmod (inp_poly**2) (L0x7fffffffd80c*x** 0+L0x7fffffffd81c*x** 1)
      [10753, x**2 - 4711],
eqmod (inp_poly**2) (L0x7fffffffd7ee*x** 0+L0x7fffffffd7fe*x** 1)
      [10753, x**2 - 7281],
eqmod (inp_poly**2) (L0x7fffffffd80e*x** 0+L0x7fffffffd81e*x** 1)
      [10753, x**2 - 3472],
eqmod (inp_poly**2) (L0x7fffffffd820*x** 0+L0x7fffffffd830*x** 1)
      [10753, x**2 - 9557],
eqmod (inp_poly**2) (L0x7fffffffd840*x** 0+L0x7fffffffd850*x** 1)
      [10753, x**2 - 1196],
eqmod (inp_poly**2) (L0x7fffffffd822*x** 0+L0x7fffffffd832*x** 1)
      [10753, x**2 - 3097],
eqmod (inp_poly**2) (L0x7fffffffd842*x** 0+L0x7fffffffd852*x** 1)
      [10753, x**2 - 7656],
eqmod (inp_poly**2) (L0x7fffffffd824*x** 0+L0x7fffffffd834*x** 1)
      [10753, x**2 - 3192],
eqmod (inp_poly**2) (L0x7fffffffd844*x** 0+L0x7fffffffd854*x** 1)
      [10753, x**2 - 7561],
eqmod (inp_poly**2) (L0x7fffffffd826*x** 0+L0x7fffffffd836*x** 1)
      [10753, x**2 - 4861],
eqmod (inp_poly**2) (L0x7fffffffd846*x** 0+L0x7fffffffd856*x** 1)
      [10753, x**2 - 5892],
eqmod (inp_poly**2) (L0x7fffffffd828*x** 0+L0x7fffffffd838*x** 1)
      [10753, x**2 - 2024],
eqmod (inp_poly**2) (L0x7fffffffd848*x** 0+L0x7fffffffd858*x** 1)
      [10753, x**2 - 8729],
eqmod (inp_poly**2) (L0x7fffffffd82a*x** 0+L0x7fffffffd83a*x** 1)
      [10753, x**2 - 549],
eqmod (inp_poly**2) (L0x7fffffffd84a*x** 0+L0x7fffffffd85a*x** 1)
      [10753, x**2 - 10204],
eqmod (inp_poly**2) (L0x7fffffffd82c*x** 0+L0x7fffffffd83c*x** 1)
      [10753, x**2 - 4524],
eqmod (inp_poly**2) (L0x7fffffffd84c*x** 0+L0x7fffffffd85c*x** 1)
      [10753, x**2 - 6229],
eqmod (inp_poly**2) (L0x7fffffffd82e*x** 0+L0x7fffffffd83e*x** 1)
      [10753, x**2 - 4181],
eqmod (inp_poly**2) (L0x7fffffffd84e*x** 0+L0x7fffffffd85e*x** 1)
      [10753, x**2 - 6572],
eqmod (inp_poly**2) (L0x7fffffffd860*x** 0+L0x7fffffffd870*x** 1)
      [10753, x**2 - 8410],
eqmod (inp_poly**2) (L0x7fffffffd880*x** 0+L0x7fffffffd890*x** 1)
      [10753, x**2 - 2343],
eqmod (inp_poly**2) (L0x7fffffffd862*x** 0+L0x7fffffffd872*x** 1)
      [10753, x**2 - 1293],
eqmod (inp_poly**2) (L0x7fffffffd882*x** 0+L0x7fffffffd892*x** 1)
      [10753, x**2 - 9460],
eqmod (inp_poly**2) (L0x7fffffffd864*x** 0+L0x7fffffffd874*x** 1)
      [10753, x**2 - 607],
eqmod (inp_poly**2) (L0x7fffffffd884*x** 0+L0x7fffffffd894*x** 1)
      [10753, x**2 - 10146],
eqmod (inp_poly**2) (L0x7fffffffd866*x** 0+L0x7fffffffd876*x** 1)
      [10753, x**2 - 6439],
eqmod (inp_poly**2) (L0x7fffffffd886*x** 0+L0x7fffffffd896*x** 1)
      [10753, x**2 - 4314],
eqmod (inp_poly**2) (L0x7fffffffd868*x** 0+L0x7fffffffd878*x** 1)
      [10753, x**2 - 8928],
eqmod (inp_poly**2) (L0x7fffffffd888*x** 0+L0x7fffffffd898*x** 1)
      [10753, x**2 - 1825],
eqmod (inp_poly**2) (L0x7fffffffd86a*x** 0+L0x7fffffffd87a*x** 1)
      [10753, x**2 - 9392],
eqmod (inp_poly**2) (L0x7fffffffd88a*x** 0+L0x7fffffffd89a*x** 1)
      [10753, x**2 - 1361],
eqmod (inp_poly**2) (L0x7fffffffd86c*x** 0+L0x7fffffffd87c*x** 1)
      [10753, x**2 - 5590],
eqmod (inp_poly**2) (L0x7fffffffd88c*x** 0+L0x7fffffffd89c*x** 1)
      [10753, x**2 - 5163],
eqmod (inp_poly**2) (L0x7fffffffd86e*x** 0+L0x7fffffffd87e*x** 1)
      [10753, x**2 - 3992],
eqmod (inp_poly**2) (L0x7fffffffd88e*x** 0+L0x7fffffffd89e*x** 1)
      [10753, x**2 - 6761],
eqmod (inp_poly**2) (L0x7fffffffd8a0*x** 0+L0x7fffffffd8b0*x** 1)
      [10753, x**2 - 5934],
eqmod (inp_poly**2) (L0x7fffffffd8c0*x** 0+L0x7fffffffd8d0*x** 1)
      [10753, x**2 - 4819],
eqmod (inp_poly**2) (L0x7fffffffd8a2*x** 0+L0x7fffffffd8b2*x** 1)
      [10753, x**2 - 8208],
eqmod (inp_poly**2) (L0x7fffffffd8c2*x** 0+L0x7fffffffd8d2*x** 1)
      [10753, x**2 - 2545],
eqmod (inp_poly**2) (L0x7fffffffd8a4*x** 0+L0x7fffffffd8b4*x** 1)
      [10753, x**2 - 1533],
eqmod (inp_poly**2) (L0x7fffffffd8c4*x** 0+L0x7fffffffd8d4*x** 1)
      [10753, x**2 - 9220],
eqmod (inp_poly**2) (L0x7fffffffd8a6*x** 0+L0x7fffffffd8b6*x** 1)
      [10753, x**2 - 283],
eqmod (inp_poly**2) (L0x7fffffffd8c6*x** 0+L0x7fffffffd8d6*x** 1)
      [10753, x**2 - 10470],
eqmod (inp_poly**2) (L0x7fffffffd8a8*x** 0+L0x7fffffffd8b8*x** 1)
      [10753, x**2 - 1538],
eqmod (inp_poly**2) (L0x7fffffffd8c8*x** 0+L0x7fffffffd8d8*x** 1)
      [10753, x**2 - 9215],
eqmod (inp_poly**2) (L0x7fffffffd8aa*x** 0+L0x7fffffffd8ba*x** 1)
      [10753, x**2 - 10097],
eqmod (inp_poly**2) (L0x7fffffffd8ca*x** 0+L0x7fffffffd8da*x** 1)
      [10753, x**2 - 656],
eqmod (inp_poly**2) (L0x7fffffffd8ac*x** 0+L0x7fffffffd8bc*x** 1)
      [10753, x**2 - 9813],
eqmod (inp_poly**2) (L0x7fffffffd8cc*x** 0+L0x7fffffffd8dc*x** 1)
      [10753, x**2 - 940],
eqmod (inp_poly**2) (L0x7fffffffd8ae*x** 0+L0x7fffffffd8be*x** 1)
      [10753, x**2 - 4484],
eqmod (inp_poly**2) (L0x7fffffffd8ce*x** 0+L0x7fffffffd8de*x** 1)
      [10753, x**2 - 6269]
  ] prove with [ precondition, cuts [ 13, 31, 49, 67, 85, 103, 121, 139] ] && and [
(-30033)@16<=s L0x7fffffffd7e0,L0x7fffffffd7e0<=s 30033@16,
(-30033)@16<=s L0x7fffffffd7f0,L0x7fffffffd7f0<=s 30033@16,
(-30033)@16<=s L0x7fffffffd800,L0x7fffffffd800<=s 30033@16,
(-30033)@16<=s L0x7fffffffd810,L0x7fffffffd810<=s 30033@16,
(-30169)@16<=s L0x7fffffffd7e2,L0x7fffffffd7e2<=s 30169@16,
(-30169)@16<=s L0x7fffffffd7f2,L0x7fffffffd7f2<=s 30169@16,
(-30169)@16<=s L0x7fffffffd802,L0x7fffffffd802<=s 30169@16,
(-30169)@16<=s L0x7fffffffd812,L0x7fffffffd812<=s 30169@16,
(-30045)@16<=s L0x7fffffffd7e4,L0x7fffffffd7e4<=s 30045@16,
(-30045)@16<=s L0x7fffffffd7f4,L0x7fffffffd7f4<=s 30045@16,
(-30045)@16<=s L0x7fffffffd804,L0x7fffffffd804<=s 30045@16,
(-30045)@16<=s L0x7fffffffd814,L0x7fffffffd814<=s 30045@16,
(-30566)@16<=s L0x7fffffffd7e6,L0x7fffffffd7e6<=s 30566@16,
(-30566)@16<=s L0x7fffffffd7f6,L0x7fffffffd7f6<=s 30566@16,
(-30566)@16<=s L0x7fffffffd806,L0x7fffffffd806<=s 30566@16,
(-30566)@16<=s L0x7fffffffd816,L0x7fffffffd816<=s 30566@16,
(-29481)@16<=s L0x7fffffffd7e8,L0x7fffffffd7e8<=s 29481@16,
(-29481)@16<=s L0x7fffffffd7f8,L0x7fffffffd7f8<=s 29481@16,
(-29481)@16<=s L0x7fffffffd808,L0x7fffffffd808<=s 29481@16,
(-29481)@16<=s L0x7fffffffd818,L0x7fffffffd818<=s 29481@16,
(-29286)@16<=s L0x7fffffffd7ea,L0x7fffffffd7ea<=s 29286@16,
(-29286)@16<=s L0x7fffffffd7fa,L0x7fffffffd7fa<=s 29286@16,
(-29286)@16<=s L0x7fffffffd80a,L0x7fffffffd80a<=s 29286@16,
(-29286)@16<=s L0x7fffffffd81a,L0x7fffffffd81a<=s 29286@16,
(-29670)@16<=s L0x7fffffffd7ec,L0x7fffffffd7ec<=s 29670@16,
(-29670)@16<=s L0x7fffffffd7fc,L0x7fffffffd7fc<=s 29670@16,
(-29670)@16<=s L0x7fffffffd80c,L0x7fffffffd80c<=s 29670@16,
(-29670)@16<=s L0x7fffffffd81c,L0x7fffffffd81c<=s 29670@16,
(-30846)@16<=s L0x7fffffffd7ee,L0x7fffffffd7ee<=s 30846@16,
(-30846)@16<=s L0x7fffffffd7fe,L0x7fffffffd7fe<=s 30846@16,
(-30846)@16<=s L0x7fffffffd80e,L0x7fffffffd80e<=s 30846@16,
(-30846)@16<=s L0x7fffffffd81e,L0x7fffffffd81e<=s 30846@16,
(-29088)@16<=s L0x7fffffffd820,L0x7fffffffd820<=s 29088@16,
(-29088)@16<=s L0x7fffffffd830,L0x7fffffffd830<=s 29088@16,
(-29088)@16<=s L0x7fffffffd840,L0x7fffffffd840<=s 29088@16,
(-29088)@16<=s L0x7fffffffd850,L0x7fffffffd850<=s 29088@16,
(-28987)@16<=s L0x7fffffffd822,L0x7fffffffd822<=s 28987@16,
(-28987)@16<=s L0x7fffffffd832,L0x7fffffffd832<=s 28987@16,
(-28987)@16<=s L0x7fffffffd842,L0x7fffffffd842<=s 28987@16,
(-28987)@16<=s L0x7fffffffd852,L0x7fffffffd852<=s 28987@16,
(-29460)@16<=s L0x7fffffffd824,L0x7fffffffd824<=s 29460@16,
(-29460)@16<=s L0x7fffffffd834,L0x7fffffffd834<=s 29460@16,
(-29460)@16<=s L0x7fffffffd844,L0x7fffffffd844<=s 29460@16,
(-29460)@16<=s L0x7fffffffd854,L0x7fffffffd854<=s 29460@16,
(-29489)@16<=s L0x7fffffffd826,L0x7fffffffd826<=s 29489@16,
(-29489)@16<=s L0x7fffffffd836,L0x7fffffffd836<=s 29489@16,
(-29489)@16<=s L0x7fffffffd846,L0x7fffffffd846<=s 29489@16,
(-29489)@16<=s L0x7fffffffd856,L0x7fffffffd856<=s 29489@16,
(-29687)@16<=s L0x7fffffffd828,L0x7fffffffd828<=s 29687@16,
(-29687)@16<=s L0x7fffffffd838,L0x7fffffffd838<=s 29687@16,
(-29687)@16<=s L0x7fffffffd848,L0x7fffffffd848<=s 29687@16,
(-29687)@16<=s L0x7fffffffd858,L0x7fffffffd858<=s 29687@16,
(-28349)@16<=s L0x7fffffffd82a,L0x7fffffffd82a<=s 28349@16,
(-28349)@16<=s L0x7fffffffd83a,L0x7fffffffd83a<=s 28349@16,
(-28349)@16<=s L0x7fffffffd84a,L0x7fffffffd84a<=s 28349@16,
(-28349)@16<=s L0x7fffffffd85a,L0x7fffffffd85a<=s 28349@16,
(-30506)@16<=s L0x7fffffffd82c,L0x7fffffffd82c<=s 30506@16,
(-30506)@16<=s L0x7fffffffd83c,L0x7fffffffd83c<=s 30506@16,
(-30506)@16<=s L0x7fffffffd84c,L0x7fffffffd84c<=s 30506@16,
(-30506)@16<=s L0x7fffffffd85c,L0x7fffffffd85c<=s 30506@16,
(-30057)@16<=s L0x7fffffffd82e,L0x7fffffffd82e<=s 30057@16,
(-30057)@16<=s L0x7fffffffd83e,L0x7fffffffd83e<=s 30057@16,
(-30057)@16<=s L0x7fffffffd84e,L0x7fffffffd84e<=s 30057@16,
(-30057)@16<=s L0x7fffffffd85e,L0x7fffffffd85e<=s 30057@16,
(-29527)@16<=s L0x7fffffffd860,L0x7fffffffd860<=s 29527@16,
(-29527)@16<=s L0x7fffffffd870,L0x7fffffffd870<=s 29527@16,
(-29527)@16<=s L0x7fffffffd880,L0x7fffffffd880<=s 29527@16,
(-29527)@16<=s L0x7fffffffd890,L0x7fffffffd890<=s 29527@16,
(-30394)@16<=s L0x7fffffffd862,L0x7fffffffd862<=s 30394@16,
(-30394)@16<=s L0x7fffffffd872,L0x7fffffffd872<=s 30394@16,
(-30394)@16<=s L0x7fffffffd882,L0x7fffffffd882<=s 30394@16,
(-30394)@16<=s L0x7fffffffd892,L0x7fffffffd892<=s 30394@16,
(-31923)@16<=s L0x7fffffffd864,L0x7fffffffd864<=s 31923@16,
(-31923)@16<=s L0x7fffffffd874,L0x7fffffffd874<=s 31923@16,
(-31923)@16<=s L0x7fffffffd884,L0x7fffffffd884<=s 31923@16,
(-31923)@16<=s L0x7fffffffd894,L0x7fffffffd894<=s 31923@16,
(-31742)@16<=s L0x7fffffffd866,L0x7fffffffd866<=s 31742@16,
(-31742)@16<=s L0x7fffffffd876,L0x7fffffffd876<=s 31742@16,
(-31742)@16<=s L0x7fffffffd886,L0x7fffffffd886<=s 31742@16,
(-31742)@16<=s L0x7fffffffd896,L0x7fffffffd896<=s 31742@16,
(-30698)@16<=s L0x7fffffffd868,L0x7fffffffd868<=s 30698@16,
(-30698)@16<=s L0x7fffffffd878,L0x7fffffffd878<=s 30698@16,
(-30698)@16<=s L0x7fffffffd888,L0x7fffffffd888<=s 30698@16,
(-30698)@16<=s L0x7fffffffd898,L0x7fffffffd898<=s 30698@16,
(-30423)@16<=s L0x7fffffffd86a,L0x7fffffffd86a<=s 30423@16,
(-30423)@16<=s L0x7fffffffd87a,L0x7fffffffd87a<=s 30423@16,
(-30423)@16<=s L0x7fffffffd88a,L0x7fffffffd88a<=s 30423@16,
(-30423)@16<=s L0x7fffffffd89a,L0x7fffffffd89a<=s 30423@16,
(-29945)@16<=s L0x7fffffffd86c,L0x7fffffffd86c<=s 29945@16,
(-29945)@16<=s L0x7fffffffd87c,L0x7fffffffd87c<=s 29945@16,
(-29945)@16<=s L0x7fffffffd88c,L0x7fffffffd88c<=s 29945@16,
(-29945)@16<=s L0x7fffffffd89c,L0x7fffffffd89c<=s 29945@16,
(-29394)@16<=s L0x7fffffffd86e,L0x7fffffffd86e<=s 29394@16,
(-29394)@16<=s L0x7fffffffd87e,L0x7fffffffd87e<=s 29394@16,
(-29394)@16<=s L0x7fffffffd88e,L0x7fffffffd88e<=s 29394@16,
(-29394)@16<=s L0x7fffffffd89e,L0x7fffffffd89e<=s 29394@16,
(-30735)@16<=s L0x7fffffffd8a0,L0x7fffffffd8a0<=s 30735@16,
(-30735)@16<=s L0x7fffffffd8b0,L0x7fffffffd8b0<=s 30735@16,
(-30735)@16<=s L0x7fffffffd8c0,L0x7fffffffd8c0<=s 30735@16,
(-30735)@16<=s L0x7fffffffd8d0,L0x7fffffffd8d0<=s 30735@16,
(-30101)@16<=s L0x7fffffffd8a2,L0x7fffffffd8a2<=s 30101@16,
(-30101)@16<=s L0x7fffffffd8b2,L0x7fffffffd8b2<=s 30101@16,
(-30101)@16<=s L0x7fffffffd8c2,L0x7fffffffd8c2<=s 30101@16,
(-30101)@16<=s L0x7fffffffd8d2,L0x7fffffffd8d2<=s 30101@16,
(-30525)@16<=s L0x7fffffffd8a4,L0x7fffffffd8a4<=s 30525@16,
(-30525)@16<=s L0x7fffffffd8b4,L0x7fffffffd8b4<=s 30525@16,
(-30525)@16<=s L0x7fffffffd8c4,L0x7fffffffd8c4<=s 30525@16,
(-30525)@16<=s L0x7fffffffd8d4,L0x7fffffffd8d4<=s 30525@16,
(-30808)@16<=s L0x7fffffffd8a6,L0x7fffffffd8a6<=s 30808@16,
(-30808)@16<=s L0x7fffffffd8b6,L0x7fffffffd8b6<=s 30808@16,
(-30808)@16<=s L0x7fffffffd8c6,L0x7fffffffd8c6<=s 30808@16,
(-30808)@16<=s L0x7fffffffd8d6,L0x7fffffffd8d6<=s 30808@16,
(-31676)@16<=s L0x7fffffffd8a8,L0x7fffffffd8a8<=s 31676@16,
(-31676)@16<=s L0x7fffffffd8b8,L0x7fffffffd8b8<=s 31676@16,
(-31676)@16<=s L0x7fffffffd8c8,L0x7fffffffd8c8<=s 31676@16,
(-31676)@16<=s L0x7fffffffd8d8,L0x7fffffffd8d8<=s 31676@16,
(-30502)@16<=s L0x7fffffffd8aa,L0x7fffffffd8aa<=s 30502@16,
(-30502)@16<=s L0x7fffffffd8ba,L0x7fffffffd8ba<=s 30502@16,
(-30502)@16<=s L0x7fffffffd8ca,L0x7fffffffd8ca<=s 30502@16,
(-30502)@16<=s L0x7fffffffd8da,L0x7fffffffd8da<=s 30502@16,
(-30256)@16<=s L0x7fffffffd8ac,L0x7fffffffd8ac<=s 30256@16,
(-30256)@16<=s L0x7fffffffd8bc,L0x7fffffffd8bc<=s 30256@16,
(-30256)@16<=s L0x7fffffffd8cc,L0x7fffffffd8cc<=s 30256@16,
(-30256)@16<=s L0x7fffffffd8dc,L0x7fffffffd8dc<=s 30256@16,
(-32217)@16<=s L0x7fffffffd8ae,L0x7fffffffd8ae<=s 32217@16,
(-32217)@16<=s L0x7fffffffd8be,L0x7fffffffd8be<=s 32217@16,
(-32217)@16<=s L0x7fffffffd8ce,L0x7fffffffd8ce<=s 32217@16,
(-32217)@16<=s L0x7fffffffd8de,L0x7fffffffd8de<=s 32217@16
];


(* === be ready for next level and offset === *)

(**************** CUT 156, 19 *****************)

cut 
true && and [
(-13177)@16<=s L0x7fffffffd8e0,L0x7fffffffd8e0<s 13177@16,
(-13177)@16<=s L0x7fffffffd8e2,L0x7fffffffd8e2<s 13177@16,
(-13177)@16<=s L0x7fffffffd8e4,L0x7fffffffd8e4<s 13177@16,
(-13177)@16<=s L0x7fffffffd8e6,L0x7fffffffd8e6<s 13177@16,
(-13177)@16<=s L0x7fffffffd8e8,L0x7fffffffd8e8<s 13177@16,
(-13177)@16<=s L0x7fffffffd8ea,L0x7fffffffd8ea<s 13177@16,
(-13177)@16<=s L0x7fffffffd8ec,L0x7fffffffd8ec<s 13177@16,
(-13177)@16<=s L0x7fffffffd8ee,L0x7fffffffd8ee<s 13177@16,
(-13177)@16<=s L0x7fffffffd8f0,L0x7fffffffd8f0<s 13177@16,
(-13177)@16<=s L0x7fffffffd8f2,L0x7fffffffd8f2<s 13177@16,
(-13177)@16<=s L0x7fffffffd8f4,L0x7fffffffd8f4<s 13177@16,
(-13177)@16<=s L0x7fffffffd8f6,L0x7fffffffd8f6<s 13177@16,
(-13177)@16<=s L0x7fffffffd8f8,L0x7fffffffd8f8<s 13177@16,
(-13177)@16<=s L0x7fffffffd8fa,L0x7fffffffd8fa<s 13177@16,
(-13177)@16<=s L0x7fffffffd8fc,L0x7fffffffd8fc<s 13177@16,
(-13177)@16<=s L0x7fffffffd8fe,L0x7fffffffd8fe<s 13177@16,
(-13177)@16<=s L0x7fffffffd900,L0x7fffffffd900<s 13177@16,
(-13177)@16<=s L0x7fffffffd902,L0x7fffffffd902<s 13177@16,
(-13177)@16<=s L0x7fffffffd904,L0x7fffffffd904<s 13177@16,
(-13177)@16<=s L0x7fffffffd906,L0x7fffffffd906<s 13177@16,
(-13177)@16<=s L0x7fffffffd908,L0x7fffffffd908<s 13177@16,
(-13177)@16<=s L0x7fffffffd90a,L0x7fffffffd90a<s 13177@16,
(-13177)@16<=s L0x7fffffffd90c,L0x7fffffffd90c<s 13177@16,
(-13177)@16<=s L0x7fffffffd90e,L0x7fffffffd90e<s 13177@16,
(-13177)@16<=s L0x7fffffffd910,L0x7fffffffd910<s 13177@16,
(-13177)@16<=s L0x7fffffffd912,L0x7fffffffd912<s 13177@16,
(-13177)@16<=s L0x7fffffffd914,L0x7fffffffd914<s 13177@16,
(-13177)@16<=s L0x7fffffffd916,L0x7fffffffd916<s 13177@16,
(-13177)@16<=s L0x7fffffffd918,L0x7fffffffd918<s 13177@16,
(-13177)@16<=s L0x7fffffffd91a,L0x7fffffffd91a<s 13177@16,
(-13177)@16<=s L0x7fffffffd91c,L0x7fffffffd91c<s 13177@16,
(-13177)@16<=s L0x7fffffffd91e,L0x7fffffffd91e<s 13177@16,
(-13177)@16<=s L0x7fffffffd920,L0x7fffffffd920<s 13177@16,
(-13177)@16<=s L0x7fffffffd922,L0x7fffffffd922<s 13177@16,
(-13177)@16<=s L0x7fffffffd924,L0x7fffffffd924<s 13177@16,
(-13177)@16<=s L0x7fffffffd926,L0x7fffffffd926<s 13177@16,
(-13177)@16<=s L0x7fffffffd928,L0x7fffffffd928<s 13177@16,
(-13177)@16<=s L0x7fffffffd92a,L0x7fffffffd92a<s 13177@16,
(-13177)@16<=s L0x7fffffffd92c,L0x7fffffffd92c<s 13177@16,
(-13177)@16<=s L0x7fffffffd92e,L0x7fffffffd92e<s 13177@16,
(-13177)@16<=s L0x7fffffffd930,L0x7fffffffd930<s 13177@16,
(-13177)@16<=s L0x7fffffffd932,L0x7fffffffd932<s 13177@16,
(-13177)@16<=s L0x7fffffffd934,L0x7fffffffd934<s 13177@16,
(-13177)@16<=s L0x7fffffffd936,L0x7fffffffd936<s 13177@16,
(-13177)@16<=s L0x7fffffffd938,L0x7fffffffd938<s 13177@16,
(-13177)@16<=s L0x7fffffffd93a,L0x7fffffffd93a<s 13177@16,
(-13177)@16<=s L0x7fffffffd93c,L0x7fffffffd93c<s 13177@16,
(-13177)@16<=s L0x7fffffffd93e,L0x7fffffffd93e<s 13177@16,
(-13177)@16<=s L0x7fffffffd940,L0x7fffffffd940<s 13177@16,
(-13177)@16<=s L0x7fffffffd942,L0x7fffffffd942<s 13177@16,
(-13177)@16<=s L0x7fffffffd944,L0x7fffffffd944<s 13177@16,
(-13177)@16<=s L0x7fffffffd946,L0x7fffffffd946<s 13177@16,
(-13177)@16<=s L0x7fffffffd948,L0x7fffffffd948<s 13177@16,
(-13177)@16<=s L0x7fffffffd94a,L0x7fffffffd94a<s 13177@16,
(-13177)@16<=s L0x7fffffffd94c,L0x7fffffffd94c<s 13177@16,
(-13177)@16<=s L0x7fffffffd94e,L0x7fffffffd94e<s 13177@16,
(-13177)@16<=s L0x7fffffffd950,L0x7fffffffd950<s 13177@16,
(-13177)@16<=s L0x7fffffffd952,L0x7fffffffd952<s 13177@16,
(-13177)@16<=s L0x7fffffffd954,L0x7fffffffd954<s 13177@16,
(-13177)@16<=s L0x7fffffffd956,L0x7fffffffd956<s 13177@16,
(-13177)@16<=s L0x7fffffffd958,L0x7fffffffd958<s 13177@16,
(-13177)@16<=s L0x7fffffffd95a,L0x7fffffffd95a<s 13177@16,
(-13177)@16<=s L0x7fffffffd95c,L0x7fffffffd95c<s 13177@16,
(-13177)@16<=s L0x7fffffffd95e,L0x7fffffffd95e<s 13177@16,
(-13177)@16<=s L0x7fffffffd960,L0x7fffffffd960<s 13177@16,
(-13177)@16<=s L0x7fffffffd962,L0x7fffffffd962<s 13177@16,
(-13177)@16<=s L0x7fffffffd964,L0x7fffffffd964<s 13177@16,
(-13177)@16<=s L0x7fffffffd966,L0x7fffffffd966<s 13177@16,
(-13177)@16<=s L0x7fffffffd968,L0x7fffffffd968<s 13177@16,
(-13177)@16<=s L0x7fffffffd96a,L0x7fffffffd96a<s 13177@16,
(-13177)@16<=s L0x7fffffffd96c,L0x7fffffffd96c<s 13177@16,
(-13177)@16<=s L0x7fffffffd96e,L0x7fffffffd96e<s 13177@16,
(-13177)@16<=s L0x7fffffffd970,L0x7fffffffd970<s 13177@16,
(-13177)@16<=s L0x7fffffffd972,L0x7fffffffd972<s 13177@16,
(-13177)@16<=s L0x7fffffffd974,L0x7fffffffd974<s 13177@16,
(-13177)@16<=s L0x7fffffffd976,L0x7fffffffd976<s 13177@16,
(-13177)@16<=s L0x7fffffffd978,L0x7fffffffd978<s 13177@16,
(-13177)@16<=s L0x7fffffffd97a,L0x7fffffffd97a<s 13177@16,
(-13177)@16<=s L0x7fffffffd97c,L0x7fffffffd97c<s 13177@16,
(-13177)@16<=s L0x7fffffffd97e,L0x7fffffffd97e<s 13177@16,
(-13177)@16<=s L0x7fffffffd980,L0x7fffffffd980<s 13177@16,
(-13177)@16<=s L0x7fffffffd982,L0x7fffffffd982<s 13177@16,
(-13177)@16<=s L0x7fffffffd984,L0x7fffffffd984<s 13177@16,
(-13177)@16<=s L0x7fffffffd986,L0x7fffffffd986<s 13177@16,
(-13177)@16<=s L0x7fffffffd988,L0x7fffffffd988<s 13177@16,
(-13177)@16<=s L0x7fffffffd98a,L0x7fffffffd98a<s 13177@16,
(-13177)@16<=s L0x7fffffffd98c,L0x7fffffffd98c<s 13177@16,
(-13177)@16<=s L0x7fffffffd98e,L0x7fffffffd98e<s 13177@16,
(-13177)@16<=s L0x7fffffffd990,L0x7fffffffd990<s 13177@16,
(-13177)@16<=s L0x7fffffffd992,L0x7fffffffd992<s 13177@16,
(-13177)@16<=s L0x7fffffffd994,L0x7fffffffd994<s 13177@16,
(-13177)@16<=s L0x7fffffffd996,L0x7fffffffd996<s 13177@16,
(-13177)@16<=s L0x7fffffffd998,L0x7fffffffd998<s 13177@16,
(-13177)@16<=s L0x7fffffffd99a,L0x7fffffffd99a<s 13177@16,
(-13177)@16<=s L0x7fffffffd99c,L0x7fffffffd99c<s 13177@16,
(-13177)@16<=s L0x7fffffffd99e,L0x7fffffffd99e<s 13177@16,
(-13177)@16<=s L0x7fffffffd9a0,L0x7fffffffd9a0<s 13177@16,
(-13177)@16<=s L0x7fffffffd9a2,L0x7fffffffd9a2<s 13177@16,
(-13177)@16<=s L0x7fffffffd9a4,L0x7fffffffd9a4<s 13177@16,
(-13177)@16<=s L0x7fffffffd9a6,L0x7fffffffd9a6<s 13177@16,
(-13177)@16<=s L0x7fffffffd9a8,L0x7fffffffd9a8<s 13177@16,
(-13177)@16<=s L0x7fffffffd9aa,L0x7fffffffd9aa<s 13177@16,
(-13177)@16<=s L0x7fffffffd9ac,L0x7fffffffd9ac<s 13177@16,
(-13177)@16<=s L0x7fffffffd9ae,L0x7fffffffd9ae<s 13177@16,
(-13177)@16<=s L0x7fffffffd9b0,L0x7fffffffd9b0<s 13177@16,
(-13177)@16<=s L0x7fffffffd9b2,L0x7fffffffd9b2<s 13177@16,
(-13177)@16<=s L0x7fffffffd9b4,L0x7fffffffd9b4<s 13177@16,
(-13177)@16<=s L0x7fffffffd9b6,L0x7fffffffd9b6<s 13177@16,
(-13177)@16<=s L0x7fffffffd9b8,L0x7fffffffd9b8<s 13177@16,
(-13177)@16<=s L0x7fffffffd9ba,L0x7fffffffd9ba<s 13177@16,
(-13177)@16<=s L0x7fffffffd9bc,L0x7fffffffd9bc<s 13177@16,
(-13177)@16<=s L0x7fffffffd9be,L0x7fffffffd9be<s 13177@16,
(-13177)@16<=s L0x7fffffffd9c0,L0x7fffffffd9c0<s 13177@16,
(-13177)@16<=s L0x7fffffffd9c2,L0x7fffffffd9c2<s 13177@16,
(-13177)@16<=s L0x7fffffffd9c4,L0x7fffffffd9c4<s 13177@16,
(-13177)@16<=s L0x7fffffffd9c6,L0x7fffffffd9c6<s 13177@16,
(-13177)@16<=s L0x7fffffffd9c8,L0x7fffffffd9c8<s 13177@16,
(-13177)@16<=s L0x7fffffffd9ca,L0x7fffffffd9ca<s 13177@16,
(-13177)@16<=s L0x7fffffffd9cc,L0x7fffffffd9cc<s 13177@16,
(-13177)@16<=s L0x7fffffffd9ce,L0x7fffffffd9ce<s 13177@16,
(-13177)@16<=s L0x7fffffffd9d0,L0x7fffffffd9d0<s 13177@16,
(-13177)@16<=s L0x7fffffffd9d2,L0x7fffffffd9d2<s 13177@16,
(-13177)@16<=s L0x7fffffffd9d4,L0x7fffffffd9d4<s 13177@16,
(-13177)@16<=s L0x7fffffffd9d6,L0x7fffffffd9d6<s 13177@16,
(-13177)@16<=s L0x7fffffffd9d8,L0x7fffffffd9d8<s 13177@16,
(-12892)@16<=s L0x7fffffffd9da,L0x7fffffffd9da<s 12892@16,
(-12892)@16<=s L0x7fffffffd9dc,L0x7fffffffd9dc<s 12892@16,
(-12892)@16<=s L0x7fffffffd9de,L0x7fffffffd9de<s 12892@16
] prove with [ cuts [ 0 ] ];



(* vmovdqa 0x600(%rdi),%ymm4                       #! EA = L0x7fffffffd8e0; Value = 0x0000000100000000; PC = 0x5555555594c9 *)
mov ymm4_0 L0x7fffffffd8e0;
mov ymm4_1 L0x7fffffffd8e2;
mov ymm4_2 L0x7fffffffd8e4;
mov ymm4_3 L0x7fffffffd8e6;
mov ymm4_4 L0x7fffffffd8e8;
mov ymm4_5 L0x7fffffffd8ea;
mov ymm4_6 L0x7fffffffd8ec;
mov ymm4_7 L0x7fffffffd8ee;
mov ymm4_8 L0x7fffffffd8f0;
mov ymm4_9 L0x7fffffffd8f2;
mov ymm4_a L0x7fffffffd8f4;
mov ymm4_b L0x7fffffffd8f6;
mov ymm4_c L0x7fffffffd8f8;
mov ymm4_d L0x7fffffffd8fa;
mov ymm4_e L0x7fffffffd8fc;
mov ymm4_f L0x7fffffffd8fe;
(* vmovdqa 0x620(%rdi),%ymm5                       #! EA = L0x7fffffffd900; Value = 0x0000000000000000; PC = 0x5555555594d1 *)
mov ymm5_0 L0x7fffffffd900;
mov ymm5_1 L0x7fffffffd902;
mov ymm5_2 L0x7fffffffd904;
mov ymm5_3 L0x7fffffffd906;
mov ymm5_4 L0x7fffffffd908;
mov ymm5_5 L0x7fffffffd90a;
mov ymm5_6 L0x7fffffffd90c;
mov ymm5_7 L0x7fffffffd90e;
mov ymm5_8 L0x7fffffffd910;
mov ymm5_9 L0x7fffffffd912;
mov ymm5_a L0x7fffffffd914;
mov ymm5_b L0x7fffffffd916;
mov ymm5_c L0x7fffffffd918;
mov ymm5_d L0x7fffffffd91a;
mov ymm5_e L0x7fffffffd91c;
mov ymm5_f L0x7fffffffd91e;
(* vmovdqa 0x640(%rdi),%ymm6                       #! EA = L0x7fffffffd920; Value = 0x0000000000000000; PC = 0x5555555594d9 *)
mov ymm6_0 L0x7fffffffd920;
mov ymm6_1 L0x7fffffffd922;
mov ymm6_2 L0x7fffffffd924;
mov ymm6_3 L0x7fffffffd926;
mov ymm6_4 L0x7fffffffd928;
mov ymm6_5 L0x7fffffffd92a;
mov ymm6_6 L0x7fffffffd92c;
mov ymm6_7 L0x7fffffffd92e;
mov ymm6_8 L0x7fffffffd930;
mov ymm6_9 L0x7fffffffd932;
mov ymm6_a L0x7fffffffd934;
mov ymm6_b L0x7fffffffd936;
mov ymm6_c L0x7fffffffd938;
mov ymm6_d L0x7fffffffd93a;
mov ymm6_e L0x7fffffffd93c;
mov ymm6_f L0x7fffffffd93e;
(* vmovdqa 0x660(%rdi),%ymm7                       #! EA = L0x7fffffffd940; Value = 0x0000000000000000; PC = 0x5555555594e1 *)
mov ymm7_0 L0x7fffffffd940;
mov ymm7_1 L0x7fffffffd942;
mov ymm7_2 L0x7fffffffd944;
mov ymm7_3 L0x7fffffffd946;
mov ymm7_4 L0x7fffffffd948;
mov ymm7_5 L0x7fffffffd94a;
mov ymm7_6 L0x7fffffffd94c;
mov ymm7_7 L0x7fffffffd94e;
mov ymm7_8 L0x7fffffffd950;
mov ymm7_9 L0x7fffffffd952;
mov ymm7_a L0x7fffffffd954;
mov ymm7_b L0x7fffffffd956;
mov ymm7_c L0x7fffffffd958;
mov ymm7_d L0x7fffffffd95a;
mov ymm7_e L0x7fffffffd95c;
mov ymm7_f L0x7fffffffd95e;
(* vmovdqa 0x680(%rdi),%ymm8                       #! EA = L0x7fffffffd960; Value = 0x0000000000000000; PC = 0x5555555594e9 *)
mov ymm8_0 L0x7fffffffd960;
mov ymm8_1 L0x7fffffffd962;
mov ymm8_2 L0x7fffffffd964;
mov ymm8_3 L0x7fffffffd966;
mov ymm8_4 L0x7fffffffd968;
mov ymm8_5 L0x7fffffffd96a;
mov ymm8_6 L0x7fffffffd96c;
mov ymm8_7 L0x7fffffffd96e;
mov ymm8_8 L0x7fffffffd970;
mov ymm8_9 L0x7fffffffd972;
mov ymm8_a L0x7fffffffd974;
mov ymm8_b L0x7fffffffd976;
mov ymm8_c L0x7fffffffd978;
mov ymm8_d L0x7fffffffd97a;
mov ymm8_e L0x7fffffffd97c;
mov ymm8_f L0x7fffffffd97e;
(* vmovdqa 0x6a0(%rdi),%ymm9                       #! EA = L0x7fffffffd980; Value = 0x0000000000000000; PC = 0x5555555594f1 *)
mov ymm9_0 L0x7fffffffd980;
mov ymm9_1 L0x7fffffffd982;
mov ymm9_2 L0x7fffffffd984;
mov ymm9_3 L0x7fffffffd986;
mov ymm9_4 L0x7fffffffd988;
mov ymm9_5 L0x7fffffffd98a;
mov ymm9_6 L0x7fffffffd98c;
mov ymm9_7 L0x7fffffffd98e;
mov ymm9_8 L0x7fffffffd990;
mov ymm9_9 L0x7fffffffd992;
mov ymm9_a L0x7fffffffd994;
mov ymm9_b L0x7fffffffd996;
mov ymm9_c L0x7fffffffd998;
mov ymm9_d L0x7fffffffd99a;
mov ymm9_e L0x7fffffffd99c;
mov ymm9_f L0x7fffffffd99e;
(* vmovdqa 0x6c0(%rdi),%ymm10                      #! EA = L0x7fffffffd9a0; Value = 0x0000000000000000; PC = 0x5555555594f9 *)
mov ymm10_0 L0x7fffffffd9a0;
mov ymm10_1 L0x7fffffffd9a2;
mov ymm10_2 L0x7fffffffd9a4;
mov ymm10_3 L0x7fffffffd9a6;
mov ymm10_4 L0x7fffffffd9a8;
mov ymm10_5 L0x7fffffffd9aa;
mov ymm10_6 L0x7fffffffd9ac;
mov ymm10_7 L0x7fffffffd9ae;
mov ymm10_8 L0x7fffffffd9b0;
mov ymm10_9 L0x7fffffffd9b2;
mov ymm10_a L0x7fffffffd9b4;
mov ymm10_b L0x7fffffffd9b6;
mov ymm10_c L0x7fffffffd9b8;
mov ymm10_d L0x7fffffffd9ba;
mov ymm10_e L0x7fffffffd9bc;
mov ymm10_f L0x7fffffffd9be;
(* vmovdqa 0x6e0(%rdi),%ymm11                      #! EA = L0x7fffffffd9c0; Value = 0x0000000000000000; PC = 0x555555559501 *)
mov ymm11_0 L0x7fffffffd9c0;
mov ymm11_1 L0x7fffffffd9c2;
mov ymm11_2 L0x7fffffffd9c4;
mov ymm11_3 L0x7fffffffd9c6;
mov ymm11_4 L0x7fffffffd9c8;
mov ymm11_5 L0x7fffffffd9ca;
mov ymm11_6 L0x7fffffffd9cc;
mov ymm11_7 L0x7fffffffd9ce;
mov ymm11_8 L0x7fffffffd9d0;
mov ymm11_9 L0x7fffffffd9d2;
mov ymm11_a L0x7fffffffd9d4;
mov ymm11_b L0x7fffffffd9d6;
mov ymm11_c L0x7fffffffd9d8;
mov ymm11_d L0x7fffffffd9da;
mov ymm11_e L0x7fffffffd9dc;
mov ymm11_f L0x7fffffffd9de;
(* vpbroadcastw 0x10c(%rdx),%ymm1                  #! EA = L0x55555556122c; Value = 0xc126e487ae886f65; PC = 0x555555559509 *)
mov ymm1_0 L0x55555556122c;
mov ymm1_1 L0x55555556122c;
mov ymm1_2 L0x55555556122c;
mov ymm1_3 L0x55555556122c;
mov ymm1_4 L0x55555556122c;
mov ymm1_5 L0x55555556122c;
mov ymm1_6 L0x55555556122c;
mov ymm1_7 L0x55555556122c;
mov ymm1_8 L0x55555556122c;
mov ymm1_9 L0x55555556122c;
mov ymm1_a L0x55555556122c;
mov ymm1_b L0x55555556122c;
mov ymm1_c L0x55555556122c;
mov ymm1_d L0x55555556122c;
mov ymm1_e L0x55555556122c;
mov ymm1_f L0x55555556122c;
(* vpbroadcastw 0x30c(%rdx),%ymm2                  #! EA = L0x55555556142c; Value = 0xfd260a87fe880165; PC = 0x555555559512 *)
mov ymm2_0 L0x55555556142c;
mov ymm2_1 L0x55555556142c;
mov ymm2_2 L0x55555556142c;
mov ymm2_3 L0x55555556142c;
mov ymm2_4 L0x55555556142c;
mov ymm2_5 L0x55555556142c;
mov ymm2_6 L0x55555556142c;
mov ymm2_7 L0x55555556142c;
mov ymm2_8 L0x55555556142c;
mov ymm2_9 L0x55555556142c;
mov ymm2_a L0x55555556142c;
mov ymm2_b L0x55555556142c;
mov ymm2_c L0x55555556142c;
mov ymm2_d L0x55555556142c;
mov ymm2_e L0x55555556142c;
mov ymm2_f L0x55555556142c;
(* vpmullw %ymm1,%ymm8,%ymm3                       #! PC = 0x55555555951b *)
smull mulHymm8_0 mulL_0 ymm1_0 ymm8_0;
smull mulHymm8_1 mulL_1 ymm1_1 ymm8_1;
smull mulHymm8_2 mulL_2 ymm1_2 ymm8_2;
smull mulHymm8_3 mulL_3 ymm1_3 ymm8_3;
smull mulHymm8_4 mulL_4 ymm1_4 ymm8_4;
smull mulHymm8_5 mulL_5 ymm1_5 ymm8_5;
smull mulHymm8_6 mulL_6 ymm1_6 ymm8_6;
smull mulHymm8_7 mulL_7 ymm1_7 ymm8_7;
smull mulHymm8_8 mulL_8 ymm1_8 ymm8_8;
smull mulHymm8_9 mulL_9 ymm1_9 ymm8_9;
smull mulHymm8_a mulL_a ymm1_a ymm8_a;
smull mulHymm8_b mulL_b ymm1_b ymm8_b;
smull mulHymm8_c mulL_c ymm1_c ymm8_c;
smull mulHymm8_d mulL_d ymm1_d ymm8_d;
smull mulHymm8_e mulL_e ymm1_e ymm8_e;
smull mulHymm8_f mulL_f ymm1_f ymm8_f;
cast ymm3_0@sint16 mulL_0;
cast ymm3_1@sint16 mulL_1;
cast ymm3_2@sint16 mulL_2;
cast ymm3_3@sint16 mulL_3;
cast ymm3_4@sint16 mulL_4;
cast ymm3_5@sint16 mulL_5;
cast ymm3_6@sint16 mulL_6;
cast ymm3_7@sint16 mulL_7;
cast ymm3_8@sint16 mulL_8;
cast ymm3_9@sint16 mulL_9;
cast ymm3_a@sint16 mulL_a;
cast ymm3_b@sint16 mulL_b;
cast ymm3_c@sint16 mulL_c;
cast ymm3_d@sint16 mulL_d;
cast ymm3_e@sint16 mulL_e;
cast ymm3_f@sint16 mulL_f;
(* vpmulhw %ymm2,%ymm8,%ymm8                       #! PC = 0x55555555951f *)
smull mulH_0 mulLymm8_0 ymm8_0 ymm2_0;
smull mulH_1 mulLymm8_1 ymm8_1 ymm2_1;
smull mulH_2 mulLymm8_2 ymm8_2 ymm2_2;
smull mulH_3 mulLymm8_3 ymm8_3 ymm2_3;
smull mulH_4 mulLymm8_4 ymm8_4 ymm2_4;
smull mulH_5 mulLymm8_5 ymm8_5 ymm2_5;
smull mulH_6 mulLymm8_6 ymm8_6 ymm2_6;
smull mulH_7 mulLymm8_7 ymm8_7 ymm2_7;
smull mulH_8 mulLymm8_8 ymm8_8 ymm2_8;
smull mulH_9 mulLymm8_9 ymm8_9 ymm2_9;
smull mulH_a mulLymm8_a ymm8_a ymm2_a;
smull mulH_b mulLymm8_b ymm8_b ymm2_b;
smull mulH_c mulLymm8_c ymm8_c ymm2_c;
smull mulH_d mulLymm8_d ymm8_d ymm2_d;
smull mulH_e mulLymm8_e ymm8_e ymm2_e;
smull mulH_f mulLymm8_f ymm8_f ymm2_f;
mov ymm8_0 mulH_0;
mov ymm8_1 mulH_1;
mov ymm8_2 mulH_2;
mov ymm8_3 mulH_3;
mov ymm8_4 mulH_4;
mov ymm8_5 mulH_5;
mov ymm8_6 mulH_6;
mov ymm8_7 mulH_7;
mov ymm8_8 mulH_8;
mov ymm8_9 mulH_9;
mov ymm8_a mulH_a;
mov ymm8_b mulH_b;
mov ymm8_c mulH_c;
mov ymm8_d mulH_d;
mov ymm8_e mulH_e;
mov ymm8_f mulH_f;
(* vpmulhw %ymm0,%ymm3,%ymm3                       #! PC = 0x555555559523 *)
smull mulH_0 red_0 ymm3_0 ymm0_0;
assert true && red_0 = mulLymm8_0;
assume red_0 = mulLymm8_0 && true;
smull mulH_1 red_1 ymm3_1 ymm0_1;
assert true && red_1 = mulLymm8_1;
assume red_1 = mulLymm8_1 && true;
smull mulH_2 red_2 ymm3_2 ymm0_2;
assert true && red_2 = mulLymm8_2;
assume red_2 = mulLymm8_2 && true;
smull mulH_3 red_3 ymm3_3 ymm0_3;
assert true && red_3 = mulLymm8_3;
assume red_3 = mulLymm8_3 && true;
smull mulH_4 red_4 ymm3_4 ymm0_4;
assert true && red_4 = mulLymm8_4;
assume red_4 = mulLymm8_4 && true;
smull mulH_5 red_5 ymm3_5 ymm0_5;
assert true && red_5 = mulLymm8_5;
assume red_5 = mulLymm8_5 && true;
smull mulH_6 red_6 ymm3_6 ymm0_6;
assert true && red_6 = mulLymm8_6;
assume red_6 = mulLymm8_6 && true;
smull mulH_7 red_7 ymm3_7 ymm0_7;
assert true && red_7 = mulLymm8_7;
assume red_7 = mulLymm8_7 && true;
smull mulH_8 red_8 ymm3_8 ymm0_8;
assert true && red_8 = mulLymm8_8;
assume red_8 = mulLymm8_8 && true;
smull mulH_9 red_9 ymm3_9 ymm0_9;
assert true && red_9 = mulLymm8_9;
assume red_9 = mulLymm8_9 && true;
smull mulH_a red_a ymm3_a ymm0_a;
assert true && red_a = mulLymm8_a;
assume red_a = mulLymm8_a && true;
smull mulH_b red_b ymm3_b ymm0_b;
assert true && red_b = mulLymm8_b;
assume red_b = mulLymm8_b && true;
smull mulH_c red_c ymm3_c ymm0_c;
assert true && red_c = mulLymm8_c;
assume red_c = mulLymm8_c && true;
smull mulH_d red_d ymm3_d ymm0_d;
assert true && red_d = mulLymm8_d;
assume red_d = mulLymm8_d && true;
smull mulH_e red_e ymm3_e ymm0_e;
assert true && red_e = mulLymm8_e;
assume red_e = mulLymm8_e && true;
smull mulH_f red_f ymm3_f ymm0_f;
assert true && red_f = mulLymm8_f;
assume red_f = mulLymm8_f && true;
mov ymm3_0 mulH_0;
mov ymm3_1 mulH_1;
mov ymm3_2 mulH_2;
mov ymm3_3 mulH_3;
mov ymm3_4 mulH_4;
mov ymm3_5 mulH_5;
mov ymm3_6 mulH_6;
mov ymm3_7 mulH_7;
mov ymm3_8 mulH_8;
mov ymm3_9 mulH_9;
mov ymm3_a mulH_a;
mov ymm3_b mulH_b;
mov ymm3_c mulH_c;
mov ymm3_d mulH_d;
mov ymm3_e mulH_e;
mov ymm3_f mulH_f;
(* vpsubw %ymm3,%ymm8,%ymm8                        #! PC = 0x555555559527 *)
sub ymm8_0 ymm8_0 ymm3_0;
sub ymm8_1 ymm8_1 ymm3_1;
sub ymm8_2 ymm8_2 ymm3_2;
sub ymm8_3 ymm8_3 ymm3_3;
sub ymm8_4 ymm8_4 ymm3_4;
sub ymm8_5 ymm8_5 ymm3_5;
sub ymm8_6 ymm8_6 ymm3_6;
sub ymm8_7 ymm8_7 ymm3_7;
sub ymm8_8 ymm8_8 ymm3_8;
sub ymm8_9 ymm8_9 ymm3_9;
sub ymm8_a ymm8_a ymm3_a;
sub ymm8_b ymm8_b ymm3_b;
sub ymm8_c ymm8_c ymm3_c;
sub ymm8_d ymm8_d ymm3_d;
sub ymm8_e ymm8_e ymm3_e;
sub ymm8_f ymm8_f ymm3_f;
(* vpmullw %ymm1,%ymm9,%ymm3                       #! PC = 0x55555555952b *)
smull mulHymm9_0 mulL_0 ymm1_0 ymm9_0;
smull mulHymm9_1 mulL_1 ymm1_1 ymm9_1;
smull mulHymm9_2 mulL_2 ymm1_2 ymm9_2;
smull mulHymm9_3 mulL_3 ymm1_3 ymm9_3;
smull mulHymm9_4 mulL_4 ymm1_4 ymm9_4;
smull mulHymm9_5 mulL_5 ymm1_5 ymm9_5;
smull mulHymm9_6 mulL_6 ymm1_6 ymm9_6;
smull mulHymm9_7 mulL_7 ymm1_7 ymm9_7;
smull mulHymm9_8 mulL_8 ymm1_8 ymm9_8;
smull mulHymm9_9 mulL_9 ymm1_9 ymm9_9;
smull mulHymm9_a mulL_a ymm1_a ymm9_a;
smull mulHymm9_b mulL_b ymm1_b ymm9_b;
smull mulHymm9_c mulL_c ymm1_c ymm9_c;
smull mulHymm9_d mulL_d ymm1_d ymm9_d;
smull mulHymm9_e mulL_e ymm1_e ymm9_e;
smull mulHymm9_f mulL_f ymm1_f ymm9_f;
cast ymm3_0@sint16 mulL_0;
cast ymm3_1@sint16 mulL_1;
cast ymm3_2@sint16 mulL_2;
cast ymm3_3@sint16 mulL_3;
cast ymm3_4@sint16 mulL_4;
cast ymm3_5@sint16 mulL_5;
cast ymm3_6@sint16 mulL_6;
cast ymm3_7@sint16 mulL_7;
cast ymm3_8@sint16 mulL_8;
cast ymm3_9@sint16 mulL_9;
cast ymm3_a@sint16 mulL_a;
cast ymm3_b@sint16 mulL_b;
cast ymm3_c@sint16 mulL_c;
cast ymm3_d@sint16 mulL_d;
cast ymm3_e@sint16 mulL_e;
cast ymm3_f@sint16 mulL_f;
(* vpmulhw %ymm2,%ymm9,%ymm9                       #! PC = 0x55555555952f *)
smull mulH_0 mulLymm9_0 ymm9_0 ymm2_0;
smull mulH_1 mulLymm9_1 ymm9_1 ymm2_1;
smull mulH_2 mulLymm9_2 ymm9_2 ymm2_2;
smull mulH_3 mulLymm9_3 ymm9_3 ymm2_3;
smull mulH_4 mulLymm9_4 ymm9_4 ymm2_4;
smull mulH_5 mulLymm9_5 ymm9_5 ymm2_5;
smull mulH_6 mulLymm9_6 ymm9_6 ymm2_6;
smull mulH_7 mulLymm9_7 ymm9_7 ymm2_7;
smull mulH_8 mulLymm9_8 ymm9_8 ymm2_8;
smull mulH_9 mulLymm9_9 ymm9_9 ymm2_9;
smull mulH_a mulLymm9_a ymm9_a ymm2_a;
smull mulH_b mulLymm9_b ymm9_b ymm2_b;
smull mulH_c mulLymm9_c ymm9_c ymm2_c;
smull mulH_d mulLymm9_d ymm9_d ymm2_d;
smull mulH_e mulLymm9_e ymm9_e ymm2_e;
smull mulH_f mulLymm9_f ymm9_f ymm2_f;
mov ymm9_0 mulH_0;
mov ymm9_1 mulH_1;
mov ymm9_2 mulH_2;
mov ymm9_3 mulH_3;
mov ymm9_4 mulH_4;
mov ymm9_5 mulH_5;
mov ymm9_6 mulH_6;
mov ymm9_7 mulH_7;
mov ymm9_8 mulH_8;
mov ymm9_9 mulH_9;
mov ymm9_a mulH_a;
mov ymm9_b mulH_b;
mov ymm9_c mulH_c;
mov ymm9_d mulH_d;
mov ymm9_e mulH_e;
mov ymm9_f mulH_f;
(* vpmulhw %ymm0,%ymm3,%ymm3                       #! PC = 0x555555559533 *)
smull mulH_0 red_0 ymm3_0 ymm0_0;
assert true && red_0 = mulLymm9_0;
assume red_0 = mulLymm9_0 && true;
smull mulH_1 red_1 ymm3_1 ymm0_1;
assert true && red_1 = mulLymm9_1;
assume red_1 = mulLymm9_1 && true;
smull mulH_2 red_2 ymm3_2 ymm0_2;
assert true && red_2 = mulLymm9_2;
assume red_2 = mulLymm9_2 && true;
smull mulH_3 red_3 ymm3_3 ymm0_3;
assert true && red_3 = mulLymm9_3;
assume red_3 = mulLymm9_3 && true;
smull mulH_4 red_4 ymm3_4 ymm0_4;
assert true && red_4 = mulLymm9_4;
assume red_4 = mulLymm9_4 && true;
smull mulH_5 red_5 ymm3_5 ymm0_5;
assert true && red_5 = mulLymm9_5;
assume red_5 = mulLymm9_5 && true;
smull mulH_6 red_6 ymm3_6 ymm0_6;
assert true && red_6 = mulLymm9_6;
assume red_6 = mulLymm9_6 && true;
smull mulH_7 red_7 ymm3_7 ymm0_7;
assert true && red_7 = mulLymm9_7;
assume red_7 = mulLymm9_7 && true;
smull mulH_8 red_8 ymm3_8 ymm0_8;
assert true && red_8 = mulLymm9_8;
assume red_8 = mulLymm9_8 && true;
smull mulH_9 red_9 ymm3_9 ymm0_9;
assert true && red_9 = mulLymm9_9;
assume red_9 = mulLymm9_9 && true;
smull mulH_a red_a ymm3_a ymm0_a;
assert true && red_a = mulLymm9_a;
assume red_a = mulLymm9_a && true;
smull mulH_b red_b ymm3_b ymm0_b;
assert true && red_b = mulLymm9_b;
assume red_b = mulLymm9_b && true;
smull mulH_c red_c ymm3_c ymm0_c;
assert true && red_c = mulLymm9_c;
assume red_c = mulLymm9_c && true;
smull mulH_d red_d ymm3_d ymm0_d;
assert true && red_d = mulLymm9_d;
assume red_d = mulLymm9_d && true;
smull mulH_e red_e ymm3_e ymm0_e;
assert true && red_e = mulLymm9_e;
assume red_e = mulLymm9_e && true;
smull mulH_f red_f ymm3_f ymm0_f;
assert true && red_f = mulLymm9_f;
assume red_f = mulLymm9_f && true;
mov ymm3_0 mulH_0;
mov ymm3_1 mulH_1;
mov ymm3_2 mulH_2;
mov ymm3_3 mulH_3;
mov ymm3_4 mulH_4;
mov ymm3_5 mulH_5;
mov ymm3_6 mulH_6;
mov ymm3_7 mulH_7;
mov ymm3_8 mulH_8;
mov ymm3_9 mulH_9;
mov ymm3_a mulH_a;
mov ymm3_b mulH_b;
mov ymm3_c mulH_c;
mov ymm3_d mulH_d;
mov ymm3_e mulH_e;
mov ymm3_f mulH_f;
(* vpsubw %ymm3,%ymm9,%ymm9                        #! PC = 0x555555559537 *)
sub ymm9_0 ymm9_0 ymm3_0;
sub ymm9_1 ymm9_1 ymm3_1;
sub ymm9_2 ymm9_2 ymm3_2;
sub ymm9_3 ymm9_3 ymm3_3;
sub ymm9_4 ymm9_4 ymm3_4;
sub ymm9_5 ymm9_5 ymm3_5;
sub ymm9_6 ymm9_6 ymm3_6;
sub ymm9_7 ymm9_7 ymm3_7;
sub ymm9_8 ymm9_8 ymm3_8;
sub ymm9_9 ymm9_9 ymm3_9;
sub ymm9_a ymm9_a ymm3_a;
sub ymm9_b ymm9_b ymm3_b;
sub ymm9_c ymm9_c ymm3_c;
sub ymm9_d ymm9_d ymm3_d;
sub ymm9_e ymm9_e ymm3_e;
sub ymm9_f ymm9_f ymm3_f;
(* vpmullw %ymm1,%ymm10,%ymm3                      #! PC = 0x55555555953b *)
smull mulHymm10_0 mulL_0 ymm1_0 ymm10_0;
smull mulHymm10_1 mulL_1 ymm1_1 ymm10_1;
smull mulHymm10_2 mulL_2 ymm1_2 ymm10_2;
smull mulHymm10_3 mulL_3 ymm1_3 ymm10_3;
smull mulHymm10_4 mulL_4 ymm1_4 ymm10_4;
smull mulHymm10_5 mulL_5 ymm1_5 ymm10_5;
smull mulHymm10_6 mulL_6 ymm1_6 ymm10_6;
smull mulHymm10_7 mulL_7 ymm1_7 ymm10_7;
smull mulHymm10_8 mulL_8 ymm1_8 ymm10_8;
smull mulHymm10_9 mulL_9 ymm1_9 ymm10_9;
smull mulHymm10_a mulL_a ymm1_a ymm10_a;
smull mulHymm10_b mulL_b ymm1_b ymm10_b;
smull mulHymm10_c mulL_c ymm1_c ymm10_c;
smull mulHymm10_d mulL_d ymm1_d ymm10_d;
smull mulHymm10_e mulL_e ymm1_e ymm10_e;
smull mulHymm10_f mulL_f ymm1_f ymm10_f;
cast ymm3_0@sint16 mulL_0;
cast ymm3_1@sint16 mulL_1;
cast ymm3_2@sint16 mulL_2;
cast ymm3_3@sint16 mulL_3;
cast ymm3_4@sint16 mulL_4;
cast ymm3_5@sint16 mulL_5;
cast ymm3_6@sint16 mulL_6;
cast ymm3_7@sint16 mulL_7;
cast ymm3_8@sint16 mulL_8;
cast ymm3_9@sint16 mulL_9;
cast ymm3_a@sint16 mulL_a;
cast ymm3_b@sint16 mulL_b;
cast ymm3_c@sint16 mulL_c;
cast ymm3_d@sint16 mulL_d;
cast ymm3_e@sint16 mulL_e;
cast ymm3_f@sint16 mulL_f;
(* vpmulhw %ymm2,%ymm10,%ymm10                     #! PC = 0x55555555953f *)
smull mulH_0 mulLymm10_0 ymm10_0 ymm2_0;
smull mulH_1 mulLymm10_1 ymm10_1 ymm2_1;
smull mulH_2 mulLymm10_2 ymm10_2 ymm2_2;
smull mulH_3 mulLymm10_3 ymm10_3 ymm2_3;
smull mulH_4 mulLymm10_4 ymm10_4 ymm2_4;
smull mulH_5 mulLymm10_5 ymm10_5 ymm2_5;
smull mulH_6 mulLymm10_6 ymm10_6 ymm2_6;
smull mulH_7 mulLymm10_7 ymm10_7 ymm2_7;
smull mulH_8 mulLymm10_8 ymm10_8 ymm2_8;
smull mulH_9 mulLymm10_9 ymm10_9 ymm2_9;
smull mulH_a mulLymm10_a ymm10_a ymm2_a;
smull mulH_b mulLymm10_b ymm10_b ymm2_b;
smull mulH_c mulLymm10_c ymm10_c ymm2_c;
smull mulH_d mulLymm10_d ymm10_d ymm2_d;
smull mulH_e mulLymm10_e ymm10_e ymm2_e;
smull mulH_f mulLymm10_f ymm10_f ymm2_f;
mov ymm10_0 mulH_0;
mov ymm10_1 mulH_1;
mov ymm10_2 mulH_2;
mov ymm10_3 mulH_3;
mov ymm10_4 mulH_4;
mov ymm10_5 mulH_5;
mov ymm10_6 mulH_6;
mov ymm10_7 mulH_7;
mov ymm10_8 mulH_8;
mov ymm10_9 mulH_9;
mov ymm10_a mulH_a;
mov ymm10_b mulH_b;
mov ymm10_c mulH_c;
mov ymm10_d mulH_d;
mov ymm10_e mulH_e;
mov ymm10_f mulH_f;
(* vpmulhw %ymm0,%ymm3,%ymm3                       #! PC = 0x555555559543 *)
smull mulH_0 red_0 ymm3_0 ymm0_0;
assert true && red_0 = mulLymm10_0;
assume red_0 = mulLymm10_0 && true;
smull mulH_1 red_1 ymm3_1 ymm0_1;
assert true && red_1 = mulLymm10_1;
assume red_1 = mulLymm10_1 && true;
smull mulH_2 red_2 ymm3_2 ymm0_2;
assert true && red_2 = mulLymm10_2;
assume red_2 = mulLymm10_2 && true;
smull mulH_3 red_3 ymm3_3 ymm0_3;
assert true && red_3 = mulLymm10_3;
assume red_3 = mulLymm10_3 && true;
smull mulH_4 red_4 ymm3_4 ymm0_4;
assert true && red_4 = mulLymm10_4;
assume red_4 = mulLymm10_4 && true;
smull mulH_5 red_5 ymm3_5 ymm0_5;
assert true && red_5 = mulLymm10_5;
assume red_5 = mulLymm10_5 && true;
smull mulH_6 red_6 ymm3_6 ymm0_6;
assert true && red_6 = mulLymm10_6;
assume red_6 = mulLymm10_6 && true;
smull mulH_7 red_7 ymm3_7 ymm0_7;
assert true && red_7 = mulLymm10_7;
assume red_7 = mulLymm10_7 && true;
smull mulH_8 red_8 ymm3_8 ymm0_8;
assert true && red_8 = mulLymm10_8;
assume red_8 = mulLymm10_8 && true;
smull mulH_9 red_9 ymm3_9 ymm0_9;
assert true && red_9 = mulLymm10_9;
assume red_9 = mulLymm10_9 && true;
smull mulH_a red_a ymm3_a ymm0_a;
assert true && red_a = mulLymm10_a;
assume red_a = mulLymm10_a && true;
smull mulH_b red_b ymm3_b ymm0_b;
assert true && red_b = mulLymm10_b;
assume red_b = mulLymm10_b && true;
smull mulH_c red_c ymm3_c ymm0_c;
assert true && red_c = mulLymm10_c;
assume red_c = mulLymm10_c && true;
smull mulH_d red_d ymm3_d ymm0_d;
assert true && red_d = mulLymm10_d;
assume red_d = mulLymm10_d && true;
smull mulH_e red_e ymm3_e ymm0_e;
assert true && red_e = mulLymm10_e;
assume red_e = mulLymm10_e && true;
smull mulH_f red_f ymm3_f ymm0_f;
assert true && red_f = mulLymm10_f;
assume red_f = mulLymm10_f && true;
mov ymm3_0 mulH_0;
mov ymm3_1 mulH_1;
mov ymm3_2 mulH_2;
mov ymm3_3 mulH_3;
mov ymm3_4 mulH_4;
mov ymm3_5 mulH_5;
mov ymm3_6 mulH_6;
mov ymm3_7 mulH_7;
mov ymm3_8 mulH_8;
mov ymm3_9 mulH_9;
mov ymm3_a mulH_a;
mov ymm3_b mulH_b;
mov ymm3_c mulH_c;
mov ymm3_d mulH_d;
mov ymm3_e mulH_e;
mov ymm3_f mulH_f;
(* vpsubw %ymm3,%ymm10,%ymm10                      #! PC = 0x555555559547 *)
sub ymm10_0 ymm10_0 ymm3_0;
sub ymm10_1 ymm10_1 ymm3_1;
sub ymm10_2 ymm10_2 ymm3_2;
sub ymm10_3 ymm10_3 ymm3_3;
sub ymm10_4 ymm10_4 ymm3_4;
sub ymm10_5 ymm10_5 ymm3_5;
sub ymm10_6 ymm10_6 ymm3_6;
sub ymm10_7 ymm10_7 ymm3_7;
sub ymm10_8 ymm10_8 ymm3_8;
sub ymm10_9 ymm10_9 ymm3_9;
sub ymm10_a ymm10_a ymm3_a;
sub ymm10_b ymm10_b ymm3_b;
sub ymm10_c ymm10_c ymm3_c;
sub ymm10_d ymm10_d ymm3_d;
sub ymm10_e ymm10_e ymm3_e;
sub ymm10_f ymm10_f ymm3_f;
(* vpmullw %ymm1,%ymm11,%ymm3                      #! PC = 0x55555555954b *)
smull mulHymm11_0 mulL_0 ymm1_0 ymm11_0;
smull mulHymm11_1 mulL_1 ymm1_1 ymm11_1;
smull mulHymm11_2 mulL_2 ymm1_2 ymm11_2;
smull mulHymm11_3 mulL_3 ymm1_3 ymm11_3;
smull mulHymm11_4 mulL_4 ymm1_4 ymm11_4;
smull mulHymm11_5 mulL_5 ymm1_5 ymm11_5;
smull mulHymm11_6 mulL_6 ymm1_6 ymm11_6;
smull mulHymm11_7 mulL_7 ymm1_7 ymm11_7;
smull mulHymm11_8 mulL_8 ymm1_8 ymm11_8;
smull mulHymm11_9 mulL_9 ymm1_9 ymm11_9;
smull mulHymm11_a mulL_a ymm1_a ymm11_a;
smull mulHymm11_b mulL_b ymm1_b ymm11_b;
smull mulHymm11_c mulL_c ymm1_c ymm11_c;
smull mulHymm11_d mulL_d ymm1_d ymm11_d;
smull mulHymm11_e mulL_e ymm1_e ymm11_e;
smull mulHymm11_f mulL_f ymm1_f ymm11_f;
cast ymm3_0@sint16 mulL_0;
cast ymm3_1@sint16 mulL_1;
cast ymm3_2@sint16 mulL_2;
cast ymm3_3@sint16 mulL_3;
cast ymm3_4@sint16 mulL_4;
cast ymm3_5@sint16 mulL_5;
cast ymm3_6@sint16 mulL_6;
cast ymm3_7@sint16 mulL_7;
cast ymm3_8@sint16 mulL_8;
cast ymm3_9@sint16 mulL_9;
cast ymm3_a@sint16 mulL_a;
cast ymm3_b@sint16 mulL_b;
cast ymm3_c@sint16 mulL_c;
cast ymm3_d@sint16 mulL_d;
cast ymm3_e@sint16 mulL_e;
cast ymm3_f@sint16 mulL_f;
(* vpmulhw %ymm2,%ymm11,%ymm11                     #! PC = 0x55555555954f *)
smull mulH_0 mulLymm11_0 ymm11_0 ymm2_0;
smull mulH_1 mulLymm11_1 ymm11_1 ymm2_1;
smull mulH_2 mulLymm11_2 ymm11_2 ymm2_2;
smull mulH_3 mulLymm11_3 ymm11_3 ymm2_3;
smull mulH_4 mulLymm11_4 ymm11_4 ymm2_4;
smull mulH_5 mulLymm11_5 ymm11_5 ymm2_5;
smull mulH_6 mulLymm11_6 ymm11_6 ymm2_6;
smull mulH_7 mulLymm11_7 ymm11_7 ymm2_7;
smull mulH_8 mulLymm11_8 ymm11_8 ymm2_8;
smull mulH_9 mulLymm11_9 ymm11_9 ymm2_9;
smull mulH_a mulLymm11_a ymm11_a ymm2_a;
smull mulH_b mulLymm11_b ymm11_b ymm2_b;
smull mulH_c mulLymm11_c ymm11_c ymm2_c;
smull mulH_d mulLymm11_d ymm11_d ymm2_d;
smull mulH_e mulLymm11_e ymm11_e ymm2_e;
smull mulH_f mulLymm11_f ymm11_f ymm2_f;
mov ymm11_0 mulH_0;
mov ymm11_1 mulH_1;
mov ymm11_2 mulH_2;
mov ymm11_3 mulH_3;
mov ymm11_4 mulH_4;
mov ymm11_5 mulH_5;
mov ymm11_6 mulH_6;
mov ymm11_7 mulH_7;
mov ymm11_8 mulH_8;
mov ymm11_9 mulH_9;
mov ymm11_a mulH_a;
mov ymm11_b mulH_b;
mov ymm11_c mulH_c;
mov ymm11_d mulH_d;
mov ymm11_e mulH_e;
mov ymm11_f mulH_f;
(* vpmulhw %ymm0,%ymm3,%ymm3                       #! PC = 0x555555559553 *)
smull mulH_0 red_0 ymm3_0 ymm0_0;
assert true && red_0 = mulLymm11_0;
assume red_0 = mulLymm11_0 && true;
smull mulH_1 red_1 ymm3_1 ymm0_1;
assert true && red_1 = mulLymm11_1;
assume red_1 = mulLymm11_1 && true;
smull mulH_2 red_2 ymm3_2 ymm0_2;
assert true && red_2 = mulLymm11_2;
assume red_2 = mulLymm11_2 && true;
smull mulH_3 red_3 ymm3_3 ymm0_3;
assert true && red_3 = mulLymm11_3;
assume red_3 = mulLymm11_3 && true;
smull mulH_4 red_4 ymm3_4 ymm0_4;
assert true && red_4 = mulLymm11_4;
assume red_4 = mulLymm11_4 && true;
smull mulH_5 red_5 ymm3_5 ymm0_5;
assert true && red_5 = mulLymm11_5;
assume red_5 = mulLymm11_5 && true;
smull mulH_6 red_6 ymm3_6 ymm0_6;
assert true && red_6 = mulLymm11_6;
assume red_6 = mulLymm11_6 && true;
smull mulH_7 red_7 ymm3_7 ymm0_7;
assert true && red_7 = mulLymm11_7;
assume red_7 = mulLymm11_7 && true;
smull mulH_8 red_8 ymm3_8 ymm0_8;
assert true && red_8 = mulLymm11_8;
assume red_8 = mulLymm11_8 && true;
smull mulH_9 red_9 ymm3_9 ymm0_9;
assert true && red_9 = mulLymm11_9;
assume red_9 = mulLymm11_9 && true;
smull mulH_a red_a ymm3_a ymm0_a;
assert true && red_a = mulLymm11_a;
assume red_a = mulLymm11_a && true;
smull mulH_b red_b ymm3_b ymm0_b;
assert true && red_b = mulLymm11_b;
assume red_b = mulLymm11_b && true;
smull mulH_c red_c ymm3_c ymm0_c;
assert true && red_c = mulLymm11_c;
assume red_c = mulLymm11_c && true;
smull mulH_d red_d ymm3_d ymm0_d;
assert true && red_d = mulLymm11_d;
assume red_d = mulLymm11_d && true;
smull mulH_e red_e ymm3_e ymm0_e;
assert true && red_e = mulLymm11_e;
assume red_e = mulLymm11_e && true;
smull mulH_f red_f ymm3_f ymm0_f;
assert true && red_f = mulLymm11_f;
assume red_f = mulLymm11_f && true;
mov ymm3_0 mulH_0;
mov ymm3_1 mulH_1;
mov ymm3_2 mulH_2;
mov ymm3_3 mulH_3;
mov ymm3_4 mulH_4;
mov ymm3_5 mulH_5;
mov ymm3_6 mulH_6;
mov ymm3_7 mulH_7;
mov ymm3_8 mulH_8;
mov ymm3_9 mulH_9;
mov ymm3_a mulH_a;
mov ymm3_b mulH_b;
mov ymm3_c mulH_c;
mov ymm3_d mulH_d;
mov ymm3_e mulH_e;
mov ymm3_f mulH_f;
(* vpsubw %ymm3,%ymm11,%ymm11                      #! PC = 0x555555559557 *)
sub ymm11_0 ymm11_0 ymm3_0;
sub ymm11_1 ymm11_1 ymm3_1;
sub ymm11_2 ymm11_2 ymm3_2;
sub ymm11_3 ymm11_3 ymm3_3;
sub ymm11_4 ymm11_4 ymm3_4;
sub ymm11_5 ymm11_5 ymm3_5;
sub ymm11_6 ymm11_6 ymm3_6;
sub ymm11_7 ymm11_7 ymm3_7;
sub ymm11_8 ymm11_8 ymm3_8;
sub ymm11_9 ymm11_9 ymm3_9;
sub ymm11_a ymm11_a ymm3_a;
sub ymm11_b ymm11_b ymm3_b;
sub ymm11_c ymm11_c ymm3_c;
sub ymm11_d ymm11_d ymm3_d;
sub ymm11_e ymm11_e ymm3_e;
sub ymm11_f ymm11_f ymm3_f;
(* vpaddw %ymm8,%ymm4,%ymm3                        #! PC = 0x55555555955b *)
add ymm3_0 ymm4_0 ymm8_0;
add ymm3_1 ymm4_1 ymm8_1;
add ymm3_2 ymm4_2 ymm8_2;
add ymm3_3 ymm4_3 ymm8_3;
add ymm3_4 ymm4_4 ymm8_4;
add ymm3_5 ymm4_5 ymm8_5;
add ymm3_6 ymm4_6 ymm8_6;
add ymm3_7 ymm4_7 ymm8_7;
add ymm3_8 ymm4_8 ymm8_8;
add ymm3_9 ymm4_9 ymm8_9;
add ymm3_a ymm4_a ymm8_a;
add ymm3_b ymm4_b ymm8_b;
add ymm3_c ymm4_c ymm8_c;
add ymm3_d ymm4_d ymm8_d;
add ymm3_e ymm4_e ymm8_e;
add ymm3_f ymm4_f ymm8_f;
(* vpsubw %ymm8,%ymm4,%ymm8                        #! PC = 0x555555559560 *)
sub ymm8_0 ymm4_0 ymm8_0;
sub ymm8_1 ymm4_1 ymm8_1;
sub ymm8_2 ymm4_2 ymm8_2;
sub ymm8_3 ymm4_3 ymm8_3;
sub ymm8_4 ymm4_4 ymm8_4;
sub ymm8_5 ymm4_5 ymm8_5;
sub ymm8_6 ymm4_6 ymm8_6;
sub ymm8_7 ymm4_7 ymm8_7;
sub ymm8_8 ymm4_8 ymm8_8;
sub ymm8_9 ymm4_9 ymm8_9;
sub ymm8_a ymm4_a ymm8_a;
sub ymm8_b ymm4_b ymm8_b;
sub ymm8_c ymm4_c ymm8_c;
sub ymm8_d ymm4_d ymm8_d;
sub ymm8_e ymm4_e ymm8_e;
sub ymm8_f ymm4_f ymm8_f;
(* vpaddw %ymm9,%ymm5,%ymm4                        #! PC = 0x555555559565 *)
add ymm4_0 ymm5_0 ymm9_0;
add ymm4_1 ymm5_1 ymm9_1;
add ymm4_2 ymm5_2 ymm9_2;
add ymm4_3 ymm5_3 ymm9_3;
add ymm4_4 ymm5_4 ymm9_4;
add ymm4_5 ymm5_5 ymm9_5;
add ymm4_6 ymm5_6 ymm9_6;
add ymm4_7 ymm5_7 ymm9_7;
add ymm4_8 ymm5_8 ymm9_8;
add ymm4_9 ymm5_9 ymm9_9;
add ymm4_a ymm5_a ymm9_a;
add ymm4_b ymm5_b ymm9_b;
add ymm4_c ymm5_c ymm9_c;
add ymm4_d ymm5_d ymm9_d;
add ymm4_e ymm5_e ymm9_e;
add ymm4_f ymm5_f ymm9_f;
(* vpsubw %ymm9,%ymm5,%ymm9                        #! PC = 0x55555555956a *)
sub ymm9_0 ymm5_0 ymm9_0;
sub ymm9_1 ymm5_1 ymm9_1;
sub ymm9_2 ymm5_2 ymm9_2;
sub ymm9_3 ymm5_3 ymm9_3;
sub ymm9_4 ymm5_4 ymm9_4;
sub ymm9_5 ymm5_5 ymm9_5;
sub ymm9_6 ymm5_6 ymm9_6;
sub ymm9_7 ymm5_7 ymm9_7;
sub ymm9_8 ymm5_8 ymm9_8;
sub ymm9_9 ymm5_9 ymm9_9;
sub ymm9_a ymm5_a ymm9_a;
sub ymm9_b ymm5_b ymm9_b;
sub ymm9_c ymm5_c ymm9_c;
sub ymm9_d ymm5_d ymm9_d;
sub ymm9_e ymm5_e ymm9_e;
sub ymm9_f ymm5_f ymm9_f;
(* vpaddw %ymm10,%ymm6,%ymm5                       #! PC = 0x55555555956f *)
add ymm5_0 ymm6_0 ymm10_0;
add ymm5_1 ymm6_1 ymm10_1;
add ymm5_2 ymm6_2 ymm10_2;
add ymm5_3 ymm6_3 ymm10_3;
add ymm5_4 ymm6_4 ymm10_4;
add ymm5_5 ymm6_5 ymm10_5;
add ymm5_6 ymm6_6 ymm10_6;
add ymm5_7 ymm6_7 ymm10_7;
add ymm5_8 ymm6_8 ymm10_8;
add ymm5_9 ymm6_9 ymm10_9;
add ymm5_a ymm6_a ymm10_a;
add ymm5_b ymm6_b ymm10_b;
add ymm5_c ymm6_c ymm10_c;
add ymm5_d ymm6_d ymm10_d;
add ymm5_e ymm6_e ymm10_e;
add ymm5_f ymm6_f ymm10_f;
(* vpsubw %ymm10,%ymm6,%ymm10                      #! PC = 0x555555559574 *)
sub ymm10_0 ymm6_0 ymm10_0;
sub ymm10_1 ymm6_1 ymm10_1;
sub ymm10_2 ymm6_2 ymm10_2;
sub ymm10_3 ymm6_3 ymm10_3;
sub ymm10_4 ymm6_4 ymm10_4;
sub ymm10_5 ymm6_5 ymm10_5;
sub ymm10_6 ymm6_6 ymm10_6;
sub ymm10_7 ymm6_7 ymm10_7;
sub ymm10_8 ymm6_8 ymm10_8;
sub ymm10_9 ymm6_9 ymm10_9;
sub ymm10_a ymm6_a ymm10_a;
sub ymm10_b ymm6_b ymm10_b;
sub ymm10_c ymm6_c ymm10_c;
sub ymm10_d ymm6_d ymm10_d;
sub ymm10_e ymm6_e ymm10_e;
sub ymm10_f ymm6_f ymm10_f;
(* vpaddw %ymm11,%ymm7,%ymm6                       #! PC = 0x555555559579 *)
add ymm6_0 ymm7_0 ymm11_0;
add ymm6_1 ymm7_1 ymm11_1;
add ymm6_2 ymm7_2 ymm11_2;
add ymm6_3 ymm7_3 ymm11_3;
add ymm6_4 ymm7_4 ymm11_4;
add ymm6_5 ymm7_5 ymm11_5;
add ymm6_6 ymm7_6 ymm11_6;
add ymm6_7 ymm7_7 ymm11_7;
add ymm6_8 ymm7_8 ymm11_8;
add ymm6_9 ymm7_9 ymm11_9;
add ymm6_a ymm7_a ymm11_a;
add ymm6_b ymm7_b ymm11_b;
add ymm6_c ymm7_c ymm11_c;
add ymm6_d ymm7_d ymm11_d;
add ymm6_e ymm7_e ymm11_e;
add ymm6_f ymm7_f ymm11_f;
(* vpsubw %ymm11,%ymm7,%ymm11                      #! PC = 0x55555555957e *)
sub ymm11_0 ymm7_0 ymm11_0;
sub ymm11_1 ymm7_1 ymm11_1;
sub ymm11_2 ymm7_2 ymm11_2;
sub ymm11_3 ymm7_3 ymm11_3;
sub ymm11_4 ymm7_4 ymm11_4;
sub ymm11_5 ymm7_5 ymm11_5;
sub ymm11_6 ymm7_6 ymm11_6;
sub ymm11_7 ymm7_7 ymm11_7;
sub ymm11_8 ymm7_8 ymm11_8;
sub ymm11_9 ymm7_9 ymm11_9;
sub ymm11_a ymm7_a ymm11_a;
sub ymm11_b ymm7_b ymm11_b;
sub ymm11_c ymm7_c ymm11_c;
sub ymm11_d ymm7_d ymm11_d;
sub ymm11_e ymm7_e ymm11_e;
sub ymm11_f ymm7_f ymm11_f;
(* vpbroadcastw 0x118(%rdx),%ymm1                  #! EA = L0x555555561238; Value = 0xc138252491c0b857; PC = 0x555555559583 *)
mov ymm1_0 L0x555555561238;
mov ymm1_1 L0x555555561238;
mov ymm1_2 L0x555555561238;
mov ymm1_3 L0x555555561238;
mov ymm1_4 L0x555555561238;
mov ymm1_5 L0x555555561238;
mov ymm1_6 L0x555555561238;
mov ymm1_7 L0x555555561238;
mov ymm1_8 L0x555555561238;
mov ymm1_9 L0x555555561238;
mov ymm1_a L0x555555561238;
mov ymm1_b L0x555555561238;
mov ymm1_c L0x555555561238;
mov ymm1_d L0x555555561238;
mov ymm1_e L0x555555561238;
mov ymm1_f L0x555555561238;
(* vpbroadcastw 0x318(%rdx),%ymm2                  #! EA = L0x555555561438; Value = 0xf1380d2411c0fe57; PC = 0x55555555958c *)
mov ymm2_0 L0x555555561438;
mov ymm2_1 L0x555555561438;
mov ymm2_2 L0x555555561438;
mov ymm2_3 L0x555555561438;
mov ymm2_4 L0x555555561438;
mov ymm2_5 L0x555555561438;
mov ymm2_6 L0x555555561438;
mov ymm2_7 L0x555555561438;
mov ymm2_8 L0x555555561438;
mov ymm2_9 L0x555555561438;
mov ymm2_a L0x555555561438;
mov ymm2_b L0x555555561438;
mov ymm2_c L0x555555561438;
mov ymm2_d L0x555555561438;
mov ymm2_e L0x555555561438;
mov ymm2_f L0x555555561438;
(* vpmullw %ymm1,%ymm5,%ymm7                       #! PC = 0x555555559595 *)
smull mulHymm5_0 mulL_0 ymm1_0 ymm5_0;
smull mulHymm5_1 mulL_1 ymm1_1 ymm5_1;
smull mulHymm5_2 mulL_2 ymm1_2 ymm5_2;
smull mulHymm5_3 mulL_3 ymm1_3 ymm5_3;
smull mulHymm5_4 mulL_4 ymm1_4 ymm5_4;
smull mulHymm5_5 mulL_5 ymm1_5 ymm5_5;
smull mulHymm5_6 mulL_6 ymm1_6 ymm5_6;
smull mulHymm5_7 mulL_7 ymm1_7 ymm5_7;
smull mulHymm5_8 mulL_8 ymm1_8 ymm5_8;
smull mulHymm5_9 mulL_9 ymm1_9 ymm5_9;
smull mulHymm5_a mulL_a ymm1_a ymm5_a;
smull mulHymm5_b mulL_b ymm1_b ymm5_b;
smull mulHymm5_c mulL_c ymm1_c ymm5_c;
smull mulHymm5_d mulL_d ymm1_d ymm5_d;
smull mulHymm5_e mulL_e ymm1_e ymm5_e;
smull mulHymm5_f mulL_f ymm1_f ymm5_f;
cast ymm7_0@sint16 mulL_0;
cast ymm7_1@sint16 mulL_1;
cast ymm7_2@sint16 mulL_2;
cast ymm7_3@sint16 mulL_3;
cast ymm7_4@sint16 mulL_4;
cast ymm7_5@sint16 mulL_5;
cast ymm7_6@sint16 mulL_6;
cast ymm7_7@sint16 mulL_7;
cast ymm7_8@sint16 mulL_8;
cast ymm7_9@sint16 mulL_9;
cast ymm7_a@sint16 mulL_a;
cast ymm7_b@sint16 mulL_b;
cast ymm7_c@sint16 mulL_c;
cast ymm7_d@sint16 mulL_d;
cast ymm7_e@sint16 mulL_e;
cast ymm7_f@sint16 mulL_f;
(* vpmulhw %ymm2,%ymm5,%ymm5                       #! PC = 0x555555559599 *)
smull mulH_0 mulLymm5_0 ymm5_0 ymm2_0;
smull mulH_1 mulLymm5_1 ymm5_1 ymm2_1;
smull mulH_2 mulLymm5_2 ymm5_2 ymm2_2;
smull mulH_3 mulLymm5_3 ymm5_3 ymm2_3;
smull mulH_4 mulLymm5_4 ymm5_4 ymm2_4;
smull mulH_5 mulLymm5_5 ymm5_5 ymm2_5;
smull mulH_6 mulLymm5_6 ymm5_6 ymm2_6;
smull mulH_7 mulLymm5_7 ymm5_7 ymm2_7;
smull mulH_8 mulLymm5_8 ymm5_8 ymm2_8;
smull mulH_9 mulLymm5_9 ymm5_9 ymm2_9;
smull mulH_a mulLymm5_a ymm5_a ymm2_a;
smull mulH_b mulLymm5_b ymm5_b ymm2_b;
smull mulH_c mulLymm5_c ymm5_c ymm2_c;
smull mulH_d mulLymm5_d ymm5_d ymm2_d;
smull mulH_e mulLymm5_e ymm5_e ymm2_e;
smull mulH_f mulLymm5_f ymm5_f ymm2_f;
mov ymm5_0 mulH_0;
mov ymm5_1 mulH_1;
mov ymm5_2 mulH_2;
mov ymm5_3 mulH_3;
mov ymm5_4 mulH_4;
mov ymm5_5 mulH_5;
mov ymm5_6 mulH_6;
mov ymm5_7 mulH_7;
mov ymm5_8 mulH_8;
mov ymm5_9 mulH_9;
mov ymm5_a mulH_a;
mov ymm5_b mulH_b;
mov ymm5_c mulH_c;
mov ymm5_d mulH_d;
mov ymm5_e mulH_e;
mov ymm5_f mulH_f;
(* vpmulhw %ymm0,%ymm7,%ymm7                       #! PC = 0x55555555959d *)
smull mulH_0 red_0 ymm7_0 ymm0_0;
assert true && red_0 = mulLymm5_0;
assume red_0 = mulLymm5_0 && true;
smull mulH_1 red_1 ymm7_1 ymm0_1;
assert true && red_1 = mulLymm5_1;
assume red_1 = mulLymm5_1 && true;
smull mulH_2 red_2 ymm7_2 ymm0_2;
assert true && red_2 = mulLymm5_2;
assume red_2 = mulLymm5_2 && true;
smull mulH_3 red_3 ymm7_3 ymm0_3;
assert true && red_3 = mulLymm5_3;
assume red_3 = mulLymm5_3 && true;
smull mulH_4 red_4 ymm7_4 ymm0_4;
assert true && red_4 = mulLymm5_4;
assume red_4 = mulLymm5_4 && true;
smull mulH_5 red_5 ymm7_5 ymm0_5;
assert true && red_5 = mulLymm5_5;
assume red_5 = mulLymm5_5 && true;
smull mulH_6 red_6 ymm7_6 ymm0_6;
assert true && red_6 = mulLymm5_6;
assume red_6 = mulLymm5_6 && true;
smull mulH_7 red_7 ymm7_7 ymm0_7;
assert true && red_7 = mulLymm5_7;
assume red_7 = mulLymm5_7 && true;
smull mulH_8 red_8 ymm7_8 ymm0_8;
assert true && red_8 = mulLymm5_8;
assume red_8 = mulLymm5_8 && true;
smull mulH_9 red_9 ymm7_9 ymm0_9;
assert true && red_9 = mulLymm5_9;
assume red_9 = mulLymm5_9 && true;
smull mulH_a red_a ymm7_a ymm0_a;
assert true && red_a = mulLymm5_a;
assume red_a = mulLymm5_a && true;
smull mulH_b red_b ymm7_b ymm0_b;
assert true && red_b = mulLymm5_b;
assume red_b = mulLymm5_b && true;
smull mulH_c red_c ymm7_c ymm0_c;
assert true && red_c = mulLymm5_c;
assume red_c = mulLymm5_c && true;
smull mulH_d red_d ymm7_d ymm0_d;
assert true && red_d = mulLymm5_d;
assume red_d = mulLymm5_d && true;
smull mulH_e red_e ymm7_e ymm0_e;
assert true && red_e = mulLymm5_e;
assume red_e = mulLymm5_e && true;
smull mulH_f red_f ymm7_f ymm0_f;
assert true && red_f = mulLymm5_f;
assume red_f = mulLymm5_f && true;
mov ymm7_0 mulH_0;
mov ymm7_1 mulH_1;
mov ymm7_2 mulH_2;
mov ymm7_3 mulH_3;
mov ymm7_4 mulH_4;
mov ymm7_5 mulH_5;
mov ymm7_6 mulH_6;
mov ymm7_7 mulH_7;
mov ymm7_8 mulH_8;
mov ymm7_9 mulH_9;
mov ymm7_a mulH_a;
mov ymm7_b mulH_b;
mov ymm7_c mulH_c;
mov ymm7_d mulH_d;
mov ymm7_e mulH_e;
mov ymm7_f mulH_f;
(* vpsubw %ymm7,%ymm5,%ymm5                        #! PC = 0x5555555595a1 *)
sub ymm5_0 ymm5_0 ymm7_0;
sub ymm5_1 ymm5_1 ymm7_1;
sub ymm5_2 ymm5_2 ymm7_2;
sub ymm5_3 ymm5_3 ymm7_3;
sub ymm5_4 ymm5_4 ymm7_4;
sub ymm5_5 ymm5_5 ymm7_5;
sub ymm5_6 ymm5_6 ymm7_6;
sub ymm5_7 ymm5_7 ymm7_7;
sub ymm5_8 ymm5_8 ymm7_8;
sub ymm5_9 ymm5_9 ymm7_9;
sub ymm5_a ymm5_a ymm7_a;
sub ymm5_b ymm5_b ymm7_b;
sub ymm5_c ymm5_c ymm7_c;
sub ymm5_d ymm5_d ymm7_d;
sub ymm5_e ymm5_e ymm7_e;
sub ymm5_f ymm5_f ymm7_f;
(* vpmullw %ymm1,%ymm6,%ymm7                       #! PC = 0x5555555595a5 *)
smull mulHymm6_0 mulL_0 ymm1_0 ymm6_0;
smull mulHymm6_1 mulL_1 ymm1_1 ymm6_1;
smull mulHymm6_2 mulL_2 ymm1_2 ymm6_2;
smull mulHymm6_3 mulL_3 ymm1_3 ymm6_3;
smull mulHymm6_4 mulL_4 ymm1_4 ymm6_4;
smull mulHymm6_5 mulL_5 ymm1_5 ymm6_5;
smull mulHymm6_6 mulL_6 ymm1_6 ymm6_6;
smull mulHymm6_7 mulL_7 ymm1_7 ymm6_7;
smull mulHymm6_8 mulL_8 ymm1_8 ymm6_8;
smull mulHymm6_9 mulL_9 ymm1_9 ymm6_9;
smull mulHymm6_a mulL_a ymm1_a ymm6_a;
smull mulHymm6_b mulL_b ymm1_b ymm6_b;
smull mulHymm6_c mulL_c ymm1_c ymm6_c;
smull mulHymm6_d mulL_d ymm1_d ymm6_d;
smull mulHymm6_e mulL_e ymm1_e ymm6_e;
smull mulHymm6_f mulL_f ymm1_f ymm6_f;
cast ymm7_0@sint16 mulL_0;
cast ymm7_1@sint16 mulL_1;
cast ymm7_2@sint16 mulL_2;
cast ymm7_3@sint16 mulL_3;
cast ymm7_4@sint16 mulL_4;
cast ymm7_5@sint16 mulL_5;
cast ymm7_6@sint16 mulL_6;
cast ymm7_7@sint16 mulL_7;
cast ymm7_8@sint16 mulL_8;
cast ymm7_9@sint16 mulL_9;
cast ymm7_a@sint16 mulL_a;
cast ymm7_b@sint16 mulL_b;
cast ymm7_c@sint16 mulL_c;
cast ymm7_d@sint16 mulL_d;
cast ymm7_e@sint16 mulL_e;
cast ymm7_f@sint16 mulL_f;
(* vpmulhw %ymm2,%ymm6,%ymm6                       #! PC = 0x5555555595a9 *)
smull mulH_0 mulLymm6_0 ymm6_0 ymm2_0;
smull mulH_1 mulLymm6_1 ymm6_1 ymm2_1;
smull mulH_2 mulLymm6_2 ymm6_2 ymm2_2;
smull mulH_3 mulLymm6_3 ymm6_3 ymm2_3;
smull mulH_4 mulLymm6_4 ymm6_4 ymm2_4;
smull mulH_5 mulLymm6_5 ymm6_5 ymm2_5;
smull mulH_6 mulLymm6_6 ymm6_6 ymm2_6;
smull mulH_7 mulLymm6_7 ymm6_7 ymm2_7;
smull mulH_8 mulLymm6_8 ymm6_8 ymm2_8;
smull mulH_9 mulLymm6_9 ymm6_9 ymm2_9;
smull mulH_a mulLymm6_a ymm6_a ymm2_a;
smull mulH_b mulLymm6_b ymm6_b ymm2_b;
smull mulH_c mulLymm6_c ymm6_c ymm2_c;
smull mulH_d mulLymm6_d ymm6_d ymm2_d;
smull mulH_e mulLymm6_e ymm6_e ymm2_e;
smull mulH_f mulLymm6_f ymm6_f ymm2_f;
mov ymm6_0 mulH_0;
mov ymm6_1 mulH_1;
mov ymm6_2 mulH_2;
mov ymm6_3 mulH_3;
mov ymm6_4 mulH_4;
mov ymm6_5 mulH_5;
mov ymm6_6 mulH_6;
mov ymm6_7 mulH_7;
mov ymm6_8 mulH_8;
mov ymm6_9 mulH_9;
mov ymm6_a mulH_a;
mov ymm6_b mulH_b;
mov ymm6_c mulH_c;
mov ymm6_d mulH_d;
mov ymm6_e mulH_e;
mov ymm6_f mulH_f;
(* vpmulhw %ymm0,%ymm7,%ymm7                       #! PC = 0x5555555595ad *)
smull mulH_0 red_0 ymm7_0 ymm0_0;
assert true && red_0 = mulLymm6_0;
assume red_0 = mulLymm6_0 && true;
smull mulH_1 red_1 ymm7_1 ymm0_1;
assert true && red_1 = mulLymm6_1;
assume red_1 = mulLymm6_1 && true;
smull mulH_2 red_2 ymm7_2 ymm0_2;
assert true && red_2 = mulLymm6_2;
assume red_2 = mulLymm6_2 && true;
smull mulH_3 red_3 ymm7_3 ymm0_3;
assert true && red_3 = mulLymm6_3;
assume red_3 = mulLymm6_3 && true;
smull mulH_4 red_4 ymm7_4 ymm0_4;
assert true && red_4 = mulLymm6_4;
assume red_4 = mulLymm6_4 && true;
smull mulH_5 red_5 ymm7_5 ymm0_5;
assert true && red_5 = mulLymm6_5;
assume red_5 = mulLymm6_5 && true;
smull mulH_6 red_6 ymm7_6 ymm0_6;
assert true && red_6 = mulLymm6_6;
assume red_6 = mulLymm6_6 && true;
smull mulH_7 red_7 ymm7_7 ymm0_7;
assert true && red_7 = mulLymm6_7;
assume red_7 = mulLymm6_7 && true;
smull mulH_8 red_8 ymm7_8 ymm0_8;
assert true && red_8 = mulLymm6_8;
assume red_8 = mulLymm6_8 && true;
smull mulH_9 red_9 ymm7_9 ymm0_9;
assert true && red_9 = mulLymm6_9;
assume red_9 = mulLymm6_9 && true;
smull mulH_a red_a ymm7_a ymm0_a;
assert true && red_a = mulLymm6_a;
assume red_a = mulLymm6_a && true;
smull mulH_b red_b ymm7_b ymm0_b;
assert true && red_b = mulLymm6_b;
assume red_b = mulLymm6_b && true;
smull mulH_c red_c ymm7_c ymm0_c;
assert true && red_c = mulLymm6_c;
assume red_c = mulLymm6_c && true;
smull mulH_d red_d ymm7_d ymm0_d;
assert true && red_d = mulLymm6_d;
assume red_d = mulLymm6_d && true;
smull mulH_e red_e ymm7_e ymm0_e;
assert true && red_e = mulLymm6_e;
assume red_e = mulLymm6_e && true;
smull mulH_f red_f ymm7_f ymm0_f;
assert true && red_f = mulLymm6_f;
assume red_f = mulLymm6_f && true;
mov ymm7_0 mulH_0;
mov ymm7_1 mulH_1;
mov ymm7_2 mulH_2;
mov ymm7_3 mulH_3;
mov ymm7_4 mulH_4;
mov ymm7_5 mulH_5;
mov ymm7_6 mulH_6;
mov ymm7_7 mulH_7;
mov ymm7_8 mulH_8;
mov ymm7_9 mulH_9;
mov ymm7_a mulH_a;
mov ymm7_b mulH_b;
mov ymm7_c mulH_c;
mov ymm7_d mulH_d;
mov ymm7_e mulH_e;
mov ymm7_f mulH_f;
(* vpsubw %ymm7,%ymm6,%ymm6                        #! PC = 0x5555555595b1 *)
sub ymm6_0 ymm6_0 ymm7_0;
sub ymm6_1 ymm6_1 ymm7_1;
sub ymm6_2 ymm6_2 ymm7_2;
sub ymm6_3 ymm6_3 ymm7_3;
sub ymm6_4 ymm6_4 ymm7_4;
sub ymm6_5 ymm6_5 ymm7_5;
sub ymm6_6 ymm6_6 ymm7_6;
sub ymm6_7 ymm6_7 ymm7_7;
sub ymm6_8 ymm6_8 ymm7_8;
sub ymm6_9 ymm6_9 ymm7_9;
sub ymm6_a ymm6_a ymm7_a;
sub ymm6_b ymm6_b ymm7_b;
sub ymm6_c ymm6_c ymm7_c;
sub ymm6_d ymm6_d ymm7_d;
sub ymm6_e ymm6_e ymm7_e;
sub ymm6_f ymm6_f ymm7_f;
(* vpbroadcastw 0x11a(%rdx),%ymm1                  #! EA = L0x55555556123a; Value = 0x450bc138252491c0; PC = 0x5555555595b5 *)
mov ymm1_0 L0x55555556123a;
mov ymm1_1 L0x55555556123a;
mov ymm1_2 L0x55555556123a;
mov ymm1_3 L0x55555556123a;
mov ymm1_4 L0x55555556123a;
mov ymm1_5 L0x55555556123a;
mov ymm1_6 L0x55555556123a;
mov ymm1_7 L0x55555556123a;
mov ymm1_8 L0x55555556123a;
mov ymm1_9 L0x55555556123a;
mov ymm1_a L0x55555556123a;
mov ymm1_b L0x55555556123a;
mov ymm1_c L0x55555556123a;
mov ymm1_d L0x55555556123a;
mov ymm1_e L0x55555556123a;
mov ymm1_f L0x55555556123a;
(* vpbroadcastw 0x31a(%rdx),%ymm2                  #! EA = L0x55555556143a; Value = 0x130bf1380d2411c0; PC = 0x5555555595be *)
mov ymm2_0 L0x55555556143a;
mov ymm2_1 L0x55555556143a;
mov ymm2_2 L0x55555556143a;
mov ymm2_3 L0x55555556143a;
mov ymm2_4 L0x55555556143a;
mov ymm2_5 L0x55555556143a;
mov ymm2_6 L0x55555556143a;
mov ymm2_7 L0x55555556143a;
mov ymm2_8 L0x55555556143a;
mov ymm2_9 L0x55555556143a;
mov ymm2_a L0x55555556143a;
mov ymm2_b L0x55555556143a;
mov ymm2_c L0x55555556143a;
mov ymm2_d L0x55555556143a;
mov ymm2_e L0x55555556143a;
mov ymm2_f L0x55555556143a;
(* vpmullw %ymm1,%ymm10,%ymm7                      #! PC = 0x5555555595c7 *)
smull mulHymm10_0 mulL_0 ymm1_0 ymm10_0;
smull mulHymm10_1 mulL_1 ymm1_1 ymm10_1;
smull mulHymm10_2 mulL_2 ymm1_2 ymm10_2;
smull mulHymm10_3 mulL_3 ymm1_3 ymm10_3;
smull mulHymm10_4 mulL_4 ymm1_4 ymm10_4;
smull mulHymm10_5 mulL_5 ymm1_5 ymm10_5;
smull mulHymm10_6 mulL_6 ymm1_6 ymm10_6;
smull mulHymm10_7 mulL_7 ymm1_7 ymm10_7;
smull mulHymm10_8 mulL_8 ymm1_8 ymm10_8;
smull mulHymm10_9 mulL_9 ymm1_9 ymm10_9;
smull mulHymm10_a mulL_a ymm1_a ymm10_a;
smull mulHymm10_b mulL_b ymm1_b ymm10_b;
smull mulHymm10_c mulL_c ymm1_c ymm10_c;
smull mulHymm10_d mulL_d ymm1_d ymm10_d;
smull mulHymm10_e mulL_e ymm1_e ymm10_e;
smull mulHymm10_f mulL_f ymm1_f ymm10_f;
cast ymm7_0@sint16 mulL_0;
cast ymm7_1@sint16 mulL_1;
cast ymm7_2@sint16 mulL_2;
cast ymm7_3@sint16 mulL_3;
cast ymm7_4@sint16 mulL_4;
cast ymm7_5@sint16 mulL_5;
cast ymm7_6@sint16 mulL_6;
cast ymm7_7@sint16 mulL_7;
cast ymm7_8@sint16 mulL_8;
cast ymm7_9@sint16 mulL_9;
cast ymm7_a@sint16 mulL_a;
cast ymm7_b@sint16 mulL_b;
cast ymm7_c@sint16 mulL_c;
cast ymm7_d@sint16 mulL_d;
cast ymm7_e@sint16 mulL_e;
cast ymm7_f@sint16 mulL_f;
(* vpmulhw %ymm2,%ymm10,%ymm10                     #! PC = 0x5555555595cb *)
smull mulH_0 mulLymm10_0 ymm10_0 ymm2_0;
smull mulH_1 mulLymm10_1 ymm10_1 ymm2_1;
smull mulH_2 mulLymm10_2 ymm10_2 ymm2_2;
smull mulH_3 mulLymm10_3 ymm10_3 ymm2_3;
smull mulH_4 mulLymm10_4 ymm10_4 ymm2_4;
smull mulH_5 mulLymm10_5 ymm10_5 ymm2_5;
smull mulH_6 mulLymm10_6 ymm10_6 ymm2_6;
smull mulH_7 mulLymm10_7 ymm10_7 ymm2_7;
smull mulH_8 mulLymm10_8 ymm10_8 ymm2_8;
smull mulH_9 mulLymm10_9 ymm10_9 ymm2_9;
smull mulH_a mulLymm10_a ymm10_a ymm2_a;
smull mulH_b mulLymm10_b ymm10_b ymm2_b;
smull mulH_c mulLymm10_c ymm10_c ymm2_c;
smull mulH_d mulLymm10_d ymm10_d ymm2_d;
smull mulH_e mulLymm10_e ymm10_e ymm2_e;
smull mulH_f mulLymm10_f ymm10_f ymm2_f;
mov ymm10_0 mulH_0;
mov ymm10_1 mulH_1;
mov ymm10_2 mulH_2;
mov ymm10_3 mulH_3;
mov ymm10_4 mulH_4;
mov ymm10_5 mulH_5;
mov ymm10_6 mulH_6;
mov ymm10_7 mulH_7;
mov ymm10_8 mulH_8;
mov ymm10_9 mulH_9;
mov ymm10_a mulH_a;
mov ymm10_b mulH_b;
mov ymm10_c mulH_c;
mov ymm10_d mulH_d;
mov ymm10_e mulH_e;
mov ymm10_f mulH_f;
(* vpmulhw %ymm0,%ymm7,%ymm7                       #! PC = 0x5555555595cf *)
smull mulH_0 red_0 ymm7_0 ymm0_0;
assert true && red_0 = mulLymm10_0;
assume red_0 = mulLymm10_0 && true;
smull mulH_1 red_1 ymm7_1 ymm0_1;
assert true && red_1 = mulLymm10_1;
assume red_1 = mulLymm10_1 && true;
smull mulH_2 red_2 ymm7_2 ymm0_2;
assert true && red_2 = mulLymm10_2;
assume red_2 = mulLymm10_2 && true;
smull mulH_3 red_3 ymm7_3 ymm0_3;
assert true && red_3 = mulLymm10_3;
assume red_3 = mulLymm10_3 && true;
smull mulH_4 red_4 ymm7_4 ymm0_4;
assert true && red_4 = mulLymm10_4;
assume red_4 = mulLymm10_4 && true;
smull mulH_5 red_5 ymm7_5 ymm0_5;
assert true && red_5 = mulLymm10_5;
assume red_5 = mulLymm10_5 && true;
smull mulH_6 red_6 ymm7_6 ymm0_6;
assert true && red_6 = mulLymm10_6;
assume red_6 = mulLymm10_6 && true;
smull mulH_7 red_7 ymm7_7 ymm0_7;
assert true && red_7 = mulLymm10_7;
assume red_7 = mulLymm10_7 && true;
smull mulH_8 red_8 ymm7_8 ymm0_8;
assert true && red_8 = mulLymm10_8;
assume red_8 = mulLymm10_8 && true;
smull mulH_9 red_9 ymm7_9 ymm0_9;
assert true && red_9 = mulLymm10_9;
assume red_9 = mulLymm10_9 && true;
smull mulH_a red_a ymm7_a ymm0_a;
assert true && red_a = mulLymm10_a;
assume red_a = mulLymm10_a && true;
smull mulH_b red_b ymm7_b ymm0_b;
assert true && red_b = mulLymm10_b;
assume red_b = mulLymm10_b && true;
smull mulH_c red_c ymm7_c ymm0_c;
assert true && red_c = mulLymm10_c;
assume red_c = mulLymm10_c && true;
smull mulH_d red_d ymm7_d ymm0_d;
assert true && red_d = mulLymm10_d;
assume red_d = mulLymm10_d && true;
smull mulH_e red_e ymm7_e ymm0_e;
assert true && red_e = mulLymm10_e;
assume red_e = mulLymm10_e && true;
smull mulH_f red_f ymm7_f ymm0_f;
assert true && red_f = mulLymm10_f;
assume red_f = mulLymm10_f && true;
mov ymm7_0 mulH_0;
mov ymm7_1 mulH_1;
mov ymm7_2 mulH_2;
mov ymm7_3 mulH_3;
mov ymm7_4 mulH_4;
mov ymm7_5 mulH_5;
mov ymm7_6 mulH_6;
mov ymm7_7 mulH_7;
mov ymm7_8 mulH_8;
mov ymm7_9 mulH_9;
mov ymm7_a mulH_a;
mov ymm7_b mulH_b;
mov ymm7_c mulH_c;
mov ymm7_d mulH_d;
mov ymm7_e mulH_e;
mov ymm7_f mulH_f;
(* vpsubw %ymm7,%ymm10,%ymm10                      #! PC = 0x5555555595d3 *)
sub ymm10_0 ymm10_0 ymm7_0;
sub ymm10_1 ymm10_1 ymm7_1;
sub ymm10_2 ymm10_2 ymm7_2;
sub ymm10_3 ymm10_3 ymm7_3;
sub ymm10_4 ymm10_4 ymm7_4;
sub ymm10_5 ymm10_5 ymm7_5;
sub ymm10_6 ymm10_6 ymm7_6;
sub ymm10_7 ymm10_7 ymm7_7;
sub ymm10_8 ymm10_8 ymm7_8;
sub ymm10_9 ymm10_9 ymm7_9;
sub ymm10_a ymm10_a ymm7_a;
sub ymm10_b ymm10_b ymm7_b;
sub ymm10_c ymm10_c ymm7_c;
sub ymm10_d ymm10_d ymm7_d;
sub ymm10_e ymm10_e ymm7_e;
sub ymm10_f ymm10_f ymm7_f;
(* vpmullw %ymm1,%ymm11,%ymm7                      #! PC = 0x5555555595d7 *)
smull mulHymm11_0 mulL_0 ymm1_0 ymm11_0;
smull mulHymm11_1 mulL_1 ymm1_1 ymm11_1;
smull mulHymm11_2 mulL_2 ymm1_2 ymm11_2;
smull mulHymm11_3 mulL_3 ymm1_3 ymm11_3;
smull mulHymm11_4 mulL_4 ymm1_4 ymm11_4;
smull mulHymm11_5 mulL_5 ymm1_5 ymm11_5;
smull mulHymm11_6 mulL_6 ymm1_6 ymm11_6;
smull mulHymm11_7 mulL_7 ymm1_7 ymm11_7;
smull mulHymm11_8 mulL_8 ymm1_8 ymm11_8;
smull mulHymm11_9 mulL_9 ymm1_9 ymm11_9;
smull mulHymm11_a mulL_a ymm1_a ymm11_a;
smull mulHymm11_b mulL_b ymm1_b ymm11_b;
smull mulHymm11_c mulL_c ymm1_c ymm11_c;
smull mulHymm11_d mulL_d ymm1_d ymm11_d;
smull mulHymm11_e mulL_e ymm1_e ymm11_e;
smull mulHymm11_f mulL_f ymm1_f ymm11_f;
cast ymm7_0@sint16 mulL_0;
cast ymm7_1@sint16 mulL_1;
cast ymm7_2@sint16 mulL_2;
cast ymm7_3@sint16 mulL_3;
cast ymm7_4@sint16 mulL_4;
cast ymm7_5@sint16 mulL_5;
cast ymm7_6@sint16 mulL_6;
cast ymm7_7@sint16 mulL_7;
cast ymm7_8@sint16 mulL_8;
cast ymm7_9@sint16 mulL_9;
cast ymm7_a@sint16 mulL_a;
cast ymm7_b@sint16 mulL_b;
cast ymm7_c@sint16 mulL_c;
cast ymm7_d@sint16 mulL_d;
cast ymm7_e@sint16 mulL_e;
cast ymm7_f@sint16 mulL_f;
(* vpmulhw %ymm2,%ymm11,%ymm11                     #! PC = 0x5555555595db *)
smull mulH_0 mulLymm11_0 ymm11_0 ymm2_0;
smull mulH_1 mulLymm11_1 ymm11_1 ymm2_1;
smull mulH_2 mulLymm11_2 ymm11_2 ymm2_2;
smull mulH_3 mulLymm11_3 ymm11_3 ymm2_3;
smull mulH_4 mulLymm11_4 ymm11_4 ymm2_4;
smull mulH_5 mulLymm11_5 ymm11_5 ymm2_5;
smull mulH_6 mulLymm11_6 ymm11_6 ymm2_6;
smull mulH_7 mulLymm11_7 ymm11_7 ymm2_7;
smull mulH_8 mulLymm11_8 ymm11_8 ymm2_8;
smull mulH_9 mulLymm11_9 ymm11_9 ymm2_9;
smull mulH_a mulLymm11_a ymm11_a ymm2_a;
smull mulH_b mulLymm11_b ymm11_b ymm2_b;
smull mulH_c mulLymm11_c ymm11_c ymm2_c;
smull mulH_d mulLymm11_d ymm11_d ymm2_d;
smull mulH_e mulLymm11_e ymm11_e ymm2_e;
smull mulH_f mulLymm11_f ymm11_f ymm2_f;
mov ymm11_0 mulH_0;
mov ymm11_1 mulH_1;
mov ymm11_2 mulH_2;
mov ymm11_3 mulH_3;
mov ymm11_4 mulH_4;
mov ymm11_5 mulH_5;
mov ymm11_6 mulH_6;
mov ymm11_7 mulH_7;
mov ymm11_8 mulH_8;
mov ymm11_9 mulH_9;
mov ymm11_a mulH_a;
mov ymm11_b mulH_b;
mov ymm11_c mulH_c;
mov ymm11_d mulH_d;
mov ymm11_e mulH_e;
mov ymm11_f mulH_f;
(* vpmulhw %ymm0,%ymm7,%ymm7                       #! PC = 0x5555555595df *)
smull mulH_0 red_0 ymm7_0 ymm0_0;
assert true && red_0 = mulLymm11_0;
assume red_0 = mulLymm11_0 && true;
smull mulH_1 red_1 ymm7_1 ymm0_1;
assert true && red_1 = mulLymm11_1;
assume red_1 = mulLymm11_1 && true;
smull mulH_2 red_2 ymm7_2 ymm0_2;
assert true && red_2 = mulLymm11_2;
assume red_2 = mulLymm11_2 && true;
smull mulH_3 red_3 ymm7_3 ymm0_3;
assert true && red_3 = mulLymm11_3;
assume red_3 = mulLymm11_3 && true;
smull mulH_4 red_4 ymm7_4 ymm0_4;
assert true && red_4 = mulLymm11_4;
assume red_4 = mulLymm11_4 && true;
smull mulH_5 red_5 ymm7_5 ymm0_5;
assert true && red_5 = mulLymm11_5;
assume red_5 = mulLymm11_5 && true;
smull mulH_6 red_6 ymm7_6 ymm0_6;
assert true && red_6 = mulLymm11_6;
assume red_6 = mulLymm11_6 && true;
smull mulH_7 red_7 ymm7_7 ymm0_7;
assert true && red_7 = mulLymm11_7;
assume red_7 = mulLymm11_7 && true;
smull mulH_8 red_8 ymm7_8 ymm0_8;
assert true && red_8 = mulLymm11_8;
assume red_8 = mulLymm11_8 && true;
smull mulH_9 red_9 ymm7_9 ymm0_9;
assert true && red_9 = mulLymm11_9;
assume red_9 = mulLymm11_9 && true;
smull mulH_a red_a ymm7_a ymm0_a;
assert true && red_a = mulLymm11_a;
assume red_a = mulLymm11_a && true;
smull mulH_b red_b ymm7_b ymm0_b;
assert true && red_b = mulLymm11_b;
assume red_b = mulLymm11_b && true;
smull mulH_c red_c ymm7_c ymm0_c;
assert true && red_c = mulLymm11_c;
assume red_c = mulLymm11_c && true;
smull mulH_d red_d ymm7_d ymm0_d;
assert true && red_d = mulLymm11_d;
assume red_d = mulLymm11_d && true;
smull mulH_e red_e ymm7_e ymm0_e;
assert true && red_e = mulLymm11_e;
assume red_e = mulLymm11_e && true;
smull mulH_f red_f ymm7_f ymm0_f;
assert true && red_f = mulLymm11_f;
assume red_f = mulLymm11_f && true;
mov ymm7_0 mulH_0;
mov ymm7_1 mulH_1;
mov ymm7_2 mulH_2;
mov ymm7_3 mulH_3;
mov ymm7_4 mulH_4;
mov ymm7_5 mulH_5;
mov ymm7_6 mulH_6;
mov ymm7_7 mulH_7;
mov ymm7_8 mulH_8;
mov ymm7_9 mulH_9;
mov ymm7_a mulH_a;
mov ymm7_b mulH_b;
mov ymm7_c mulH_c;
mov ymm7_d mulH_d;
mov ymm7_e mulH_e;
mov ymm7_f mulH_f;
(* vpsubw %ymm7,%ymm11,%ymm11                      #! PC = 0x5555555595e3 *)
sub ymm11_0 ymm11_0 ymm7_0;
sub ymm11_1 ymm11_1 ymm7_1;
sub ymm11_2 ymm11_2 ymm7_2;
sub ymm11_3 ymm11_3 ymm7_3;
sub ymm11_4 ymm11_4 ymm7_4;
sub ymm11_5 ymm11_5 ymm7_5;
sub ymm11_6 ymm11_6 ymm7_6;
sub ymm11_7 ymm11_7 ymm7_7;
sub ymm11_8 ymm11_8 ymm7_8;
sub ymm11_9 ymm11_9 ymm7_9;
sub ymm11_a ymm11_a ymm7_a;
sub ymm11_b ymm11_b ymm7_b;
sub ymm11_c ymm11_c ymm7_c;
sub ymm11_d ymm11_d ymm7_d;
sub ymm11_e ymm11_e ymm7_e;
sub ymm11_f ymm11_f ymm7_f;
(* vpaddw %ymm5,%ymm3,%ymm7                        #! PC = 0x5555555595e7 *)
add ymm7_0 ymm3_0 ymm5_0;
add ymm7_1 ymm3_1 ymm5_1;
add ymm7_2 ymm3_2 ymm5_2;
add ymm7_3 ymm3_3 ymm5_3;
add ymm7_4 ymm3_4 ymm5_4;
add ymm7_5 ymm3_5 ymm5_5;
add ymm7_6 ymm3_6 ymm5_6;
add ymm7_7 ymm3_7 ymm5_7;
add ymm7_8 ymm3_8 ymm5_8;
add ymm7_9 ymm3_9 ymm5_9;
add ymm7_a ymm3_a ymm5_a;
add ymm7_b ymm3_b ymm5_b;
add ymm7_c ymm3_c ymm5_c;
add ymm7_d ymm3_d ymm5_d;
add ymm7_e ymm3_e ymm5_e;
add ymm7_f ymm3_f ymm5_f;
(* vpsubw %ymm5,%ymm3,%ymm5                        #! PC = 0x5555555595eb *)
sub ymm5_0 ymm3_0 ymm5_0;
sub ymm5_1 ymm3_1 ymm5_1;
sub ymm5_2 ymm3_2 ymm5_2;
sub ymm5_3 ymm3_3 ymm5_3;
sub ymm5_4 ymm3_4 ymm5_4;
sub ymm5_5 ymm3_5 ymm5_5;
sub ymm5_6 ymm3_6 ymm5_6;
sub ymm5_7 ymm3_7 ymm5_7;
sub ymm5_8 ymm3_8 ymm5_8;
sub ymm5_9 ymm3_9 ymm5_9;
sub ymm5_a ymm3_a ymm5_a;
sub ymm5_b ymm3_b ymm5_b;
sub ymm5_c ymm3_c ymm5_c;
sub ymm5_d ymm3_d ymm5_d;
sub ymm5_e ymm3_e ymm5_e;
sub ymm5_f ymm3_f ymm5_f;
(* vpaddw %ymm6,%ymm4,%ymm3                        #! PC = 0x5555555595ef *)
add ymm3_0 ymm4_0 ymm6_0;
add ymm3_1 ymm4_1 ymm6_1;
add ymm3_2 ymm4_2 ymm6_2;
add ymm3_3 ymm4_3 ymm6_3;
add ymm3_4 ymm4_4 ymm6_4;
add ymm3_5 ymm4_5 ymm6_5;
add ymm3_6 ymm4_6 ymm6_6;
add ymm3_7 ymm4_7 ymm6_7;
add ymm3_8 ymm4_8 ymm6_8;
add ymm3_9 ymm4_9 ymm6_9;
add ymm3_a ymm4_a ymm6_a;
add ymm3_b ymm4_b ymm6_b;
add ymm3_c ymm4_c ymm6_c;
add ymm3_d ymm4_d ymm6_d;
add ymm3_e ymm4_e ymm6_e;
add ymm3_f ymm4_f ymm6_f;
(* vpsubw %ymm6,%ymm4,%ymm6                        #! PC = 0x5555555595f3 *)
sub ymm6_0 ymm4_0 ymm6_0;
sub ymm6_1 ymm4_1 ymm6_1;
sub ymm6_2 ymm4_2 ymm6_2;
sub ymm6_3 ymm4_3 ymm6_3;
sub ymm6_4 ymm4_4 ymm6_4;
sub ymm6_5 ymm4_5 ymm6_5;
sub ymm6_6 ymm4_6 ymm6_6;
sub ymm6_7 ymm4_7 ymm6_7;
sub ymm6_8 ymm4_8 ymm6_8;
sub ymm6_9 ymm4_9 ymm6_9;
sub ymm6_a ymm4_a ymm6_a;
sub ymm6_b ymm4_b ymm6_b;
sub ymm6_c ymm4_c ymm6_c;
sub ymm6_d ymm4_d ymm6_d;
sub ymm6_e ymm4_e ymm6_e;
sub ymm6_f ymm4_f ymm6_f;
(* vpaddw %ymm10,%ymm8,%ymm4                       #! PC = 0x5555555595f7 *)
add ymm4_0 ymm8_0 ymm10_0;
add ymm4_1 ymm8_1 ymm10_1;
add ymm4_2 ymm8_2 ymm10_2;
add ymm4_3 ymm8_3 ymm10_3;
add ymm4_4 ymm8_4 ymm10_4;
add ymm4_5 ymm8_5 ymm10_5;
add ymm4_6 ymm8_6 ymm10_6;
add ymm4_7 ymm8_7 ymm10_7;
add ymm4_8 ymm8_8 ymm10_8;
add ymm4_9 ymm8_9 ymm10_9;
add ymm4_a ymm8_a ymm10_a;
add ymm4_b ymm8_b ymm10_b;
add ymm4_c ymm8_c ymm10_c;
add ymm4_d ymm8_d ymm10_d;
add ymm4_e ymm8_e ymm10_e;
add ymm4_f ymm8_f ymm10_f;
(* vpsubw %ymm10,%ymm8,%ymm10                      #! PC = 0x5555555595fc *)
sub ymm10_0 ymm8_0 ymm10_0;
sub ymm10_1 ymm8_1 ymm10_1;
sub ymm10_2 ymm8_2 ymm10_2;
sub ymm10_3 ymm8_3 ymm10_3;
sub ymm10_4 ymm8_4 ymm10_4;
sub ymm10_5 ymm8_5 ymm10_5;
sub ymm10_6 ymm8_6 ymm10_6;
sub ymm10_7 ymm8_7 ymm10_7;
sub ymm10_8 ymm8_8 ymm10_8;
sub ymm10_9 ymm8_9 ymm10_9;
sub ymm10_a ymm8_a ymm10_a;
sub ymm10_b ymm8_b ymm10_b;
sub ymm10_c ymm8_c ymm10_c;
sub ymm10_d ymm8_d ymm10_d;
sub ymm10_e ymm8_e ymm10_e;
sub ymm10_f ymm8_f ymm10_f;
(* vpaddw %ymm11,%ymm9,%ymm8                       #! PC = 0x555555559601 *)
add ymm8_0 ymm9_0 ymm11_0;
add ymm8_1 ymm9_1 ymm11_1;
add ymm8_2 ymm9_2 ymm11_2;
add ymm8_3 ymm9_3 ymm11_3;
add ymm8_4 ymm9_4 ymm11_4;
add ymm8_5 ymm9_5 ymm11_5;
add ymm8_6 ymm9_6 ymm11_6;
add ymm8_7 ymm9_7 ymm11_7;
add ymm8_8 ymm9_8 ymm11_8;
add ymm8_9 ymm9_9 ymm11_9;
add ymm8_a ymm9_a ymm11_a;
add ymm8_b ymm9_b ymm11_b;
add ymm8_c ymm9_c ymm11_c;
add ymm8_d ymm9_d ymm11_d;
add ymm8_e ymm9_e ymm11_e;
add ymm8_f ymm9_f ymm11_f;
(* vpsubw %ymm11,%ymm9,%ymm11                      #! PC = 0x555555559606 *)
sub ymm11_0 ymm9_0 ymm11_0;
sub ymm11_1 ymm9_1 ymm11_1;
sub ymm11_2 ymm9_2 ymm11_2;
sub ymm11_3 ymm9_3 ymm11_3;
sub ymm11_4 ymm9_4 ymm11_4;
sub ymm11_5 ymm9_5 ymm11_5;
sub ymm11_6 ymm9_6 ymm11_6;
sub ymm11_7 ymm9_7 ymm11_7;
sub ymm11_8 ymm9_8 ymm11_8;
sub ymm11_9 ymm9_9 ymm11_9;
sub ymm11_a ymm9_a ymm11_a;
sub ymm11_b ymm9_b ymm11_b;
sub ymm11_c ymm9_c ymm11_c;
sub ymm11_d ymm9_d ymm11_d;
sub ymm11_e ymm9_e ymm11_e;
sub ymm11_f ymm9_f ymm11_f;
(* vpbroadcastw 0x130(%rdx),%ymm1                  #! EA = L0x555555561250; Value = 0xf0ab2711fcc3398b; PC = 0x55555555960b *)
mov ymm1_0 L0x555555561250;
mov ymm1_1 L0x555555561250;
mov ymm1_2 L0x555555561250;
mov ymm1_3 L0x555555561250;
mov ymm1_4 L0x555555561250;
mov ymm1_5 L0x555555561250;
mov ymm1_6 L0x555555561250;
mov ymm1_7 L0x555555561250;
mov ymm1_8 L0x555555561250;
mov ymm1_9 L0x555555561250;
mov ymm1_a L0x555555561250;
mov ymm1_b L0x555555561250;
mov ymm1_c L0x555555561250;
mov ymm1_d L0x555555561250;
mov ymm1_e L0x555555561250;
mov ymm1_f L0x555555561250;
(* vpbroadcastw 0x330(%rdx),%ymm2                  #! EA = L0x555555561450; Value = 0xfeabf111fac3078b; PC = 0x555555559614 *)
mov ymm2_0 L0x555555561450;
mov ymm2_1 L0x555555561450;
mov ymm2_2 L0x555555561450;
mov ymm2_3 L0x555555561450;
mov ymm2_4 L0x555555561450;
mov ymm2_5 L0x555555561450;
mov ymm2_6 L0x555555561450;
mov ymm2_7 L0x555555561450;
mov ymm2_8 L0x555555561450;
mov ymm2_9 L0x555555561450;
mov ymm2_a L0x555555561450;
mov ymm2_b L0x555555561450;
mov ymm2_c L0x555555561450;
mov ymm2_d L0x555555561450;
mov ymm2_e L0x555555561450;
mov ymm2_f L0x555555561450;
(* vpmullw %ymm1,%ymm3,%ymm9                       #! PC = 0x55555555961d *)
smull mulHymm3_0 mulL_0 ymm1_0 ymm3_0;
smull mulHymm3_1 mulL_1 ymm1_1 ymm3_1;
smull mulHymm3_2 mulL_2 ymm1_2 ymm3_2;
smull mulHymm3_3 mulL_3 ymm1_3 ymm3_3;
smull mulHymm3_4 mulL_4 ymm1_4 ymm3_4;
smull mulHymm3_5 mulL_5 ymm1_5 ymm3_5;
smull mulHymm3_6 mulL_6 ymm1_6 ymm3_6;
smull mulHymm3_7 mulL_7 ymm1_7 ymm3_7;
smull mulHymm3_8 mulL_8 ymm1_8 ymm3_8;
smull mulHymm3_9 mulL_9 ymm1_9 ymm3_9;
smull mulHymm3_a mulL_a ymm1_a ymm3_a;
smull mulHymm3_b mulL_b ymm1_b ymm3_b;
smull mulHymm3_c mulL_c ymm1_c ymm3_c;
smull mulHymm3_d mulL_d ymm1_d ymm3_d;
smull mulHymm3_e mulL_e ymm1_e ymm3_e;
smull mulHymm3_f mulL_f ymm1_f ymm3_f;
cast ymm9_0@sint16 mulL_0;
cast ymm9_1@sint16 mulL_1;
cast ymm9_2@sint16 mulL_2;
cast ymm9_3@sint16 mulL_3;
cast ymm9_4@sint16 mulL_4;
cast ymm9_5@sint16 mulL_5;
cast ymm9_6@sint16 mulL_6;
cast ymm9_7@sint16 mulL_7;
cast ymm9_8@sint16 mulL_8;
cast ymm9_9@sint16 mulL_9;
cast ymm9_a@sint16 mulL_a;
cast ymm9_b@sint16 mulL_b;
cast ymm9_c@sint16 mulL_c;
cast ymm9_d@sint16 mulL_d;
cast ymm9_e@sint16 mulL_e;
cast ymm9_f@sint16 mulL_f;
(* vpmulhw %ymm2,%ymm3,%ymm3                       #! PC = 0x555555559621 *)
smull mulH_0 mulLymm3_0 ymm3_0 ymm2_0;
smull mulH_1 mulLymm3_1 ymm3_1 ymm2_1;
smull mulH_2 mulLymm3_2 ymm3_2 ymm2_2;
smull mulH_3 mulLymm3_3 ymm3_3 ymm2_3;
smull mulH_4 mulLymm3_4 ymm3_4 ymm2_4;
smull mulH_5 mulLymm3_5 ymm3_5 ymm2_5;
smull mulH_6 mulLymm3_6 ymm3_6 ymm2_6;
smull mulH_7 mulLymm3_7 ymm3_7 ymm2_7;
smull mulH_8 mulLymm3_8 ymm3_8 ymm2_8;
smull mulH_9 mulLymm3_9 ymm3_9 ymm2_9;
smull mulH_a mulLymm3_a ymm3_a ymm2_a;
smull mulH_b mulLymm3_b ymm3_b ymm2_b;
smull mulH_c mulLymm3_c ymm3_c ymm2_c;
smull mulH_d mulLymm3_d ymm3_d ymm2_d;
smull mulH_e mulLymm3_e ymm3_e ymm2_e;
smull mulH_f mulLymm3_f ymm3_f ymm2_f;
mov ymm3_0 mulH_0;
mov ymm3_1 mulH_1;
mov ymm3_2 mulH_2;
mov ymm3_3 mulH_3;
mov ymm3_4 mulH_4;
mov ymm3_5 mulH_5;
mov ymm3_6 mulH_6;
mov ymm3_7 mulH_7;
mov ymm3_8 mulH_8;
mov ymm3_9 mulH_9;
mov ymm3_a mulH_a;
mov ymm3_b mulH_b;
mov ymm3_c mulH_c;
mov ymm3_d mulH_d;
mov ymm3_e mulH_e;
mov ymm3_f mulH_f;
(* vpmulhw %ymm0,%ymm9,%ymm9                       #! PC = 0x555555559625 *)
smull mulH_0 red_0 ymm9_0 ymm0_0;
assert true && red_0 = mulLymm3_0;
assume red_0 = mulLymm3_0 && true;
smull mulH_1 red_1 ymm9_1 ymm0_1;
assert true && red_1 = mulLymm3_1;
assume red_1 = mulLymm3_1 && true;
smull mulH_2 red_2 ymm9_2 ymm0_2;
assert true && red_2 = mulLymm3_2;
assume red_2 = mulLymm3_2 && true;
smull mulH_3 red_3 ymm9_3 ymm0_3;
assert true && red_3 = mulLymm3_3;
assume red_3 = mulLymm3_3 && true;
smull mulH_4 red_4 ymm9_4 ymm0_4;
assert true && red_4 = mulLymm3_4;
assume red_4 = mulLymm3_4 && true;
smull mulH_5 red_5 ymm9_5 ymm0_5;
assert true && red_5 = mulLymm3_5;
assume red_5 = mulLymm3_5 && true;
smull mulH_6 red_6 ymm9_6 ymm0_6;
assert true && red_6 = mulLymm3_6;
assume red_6 = mulLymm3_6 && true;
smull mulH_7 red_7 ymm9_7 ymm0_7;
assert true && red_7 = mulLymm3_7;
assume red_7 = mulLymm3_7 && true;
smull mulH_8 red_8 ymm9_8 ymm0_8;
assert true && red_8 = mulLymm3_8;
assume red_8 = mulLymm3_8 && true;
smull mulH_9 red_9 ymm9_9 ymm0_9;
assert true && red_9 = mulLymm3_9;
assume red_9 = mulLymm3_9 && true;
smull mulH_a red_a ymm9_a ymm0_a;
assert true && red_a = mulLymm3_a;
assume red_a = mulLymm3_a && true;
smull mulH_b red_b ymm9_b ymm0_b;
assert true && red_b = mulLymm3_b;
assume red_b = mulLymm3_b && true;
smull mulH_c red_c ymm9_c ymm0_c;
assert true && red_c = mulLymm3_c;
assume red_c = mulLymm3_c && true;
smull mulH_d red_d ymm9_d ymm0_d;
assert true && red_d = mulLymm3_d;
assume red_d = mulLymm3_d && true;
smull mulH_e red_e ymm9_e ymm0_e;
assert true && red_e = mulLymm3_e;
assume red_e = mulLymm3_e && true;
smull mulH_f red_f ymm9_f ymm0_f;
assert true && red_f = mulLymm3_f;
assume red_f = mulLymm3_f && true;
mov ymm9_0 mulH_0;
mov ymm9_1 mulH_1;
mov ymm9_2 mulH_2;
mov ymm9_3 mulH_3;
mov ymm9_4 mulH_4;
mov ymm9_5 mulH_5;
mov ymm9_6 mulH_6;
mov ymm9_7 mulH_7;
mov ymm9_8 mulH_8;
mov ymm9_9 mulH_9;
mov ymm9_a mulH_a;
mov ymm9_b mulH_b;
mov ymm9_c mulH_c;
mov ymm9_d mulH_d;
mov ymm9_e mulH_e;
mov ymm9_f mulH_f;
(* vpsubw %ymm9,%ymm3,%ymm3                        #! PC = 0x555555559629 *)
sub ymm3_0 ymm3_0 ymm9_0;
sub ymm3_1 ymm3_1 ymm9_1;
sub ymm3_2 ymm3_2 ymm9_2;
sub ymm3_3 ymm3_3 ymm9_3;
sub ymm3_4 ymm3_4 ymm9_4;
sub ymm3_5 ymm3_5 ymm9_5;
sub ymm3_6 ymm3_6 ymm9_6;
sub ymm3_7 ymm3_7 ymm9_7;
sub ymm3_8 ymm3_8 ymm9_8;
sub ymm3_9 ymm3_9 ymm9_9;
sub ymm3_a ymm3_a ymm9_a;
sub ymm3_b ymm3_b ymm9_b;
sub ymm3_c ymm3_c ymm9_c;
sub ymm3_d ymm3_d ymm9_d;
sub ymm3_e ymm3_e ymm9_e;
sub ymm3_f ymm3_f ymm9_f;
(* vpbroadcastw 0x132(%rdx),%ymm1                  #! EA = L0x555555561252; Value = 0xc601f0ab2711fcc3; PC = 0x55555555962e *)
mov ymm1_0 L0x555555561252;
mov ymm1_1 L0x555555561252;
mov ymm1_2 L0x555555561252;
mov ymm1_3 L0x555555561252;
mov ymm1_4 L0x555555561252;
mov ymm1_5 L0x555555561252;
mov ymm1_6 L0x555555561252;
mov ymm1_7 L0x555555561252;
mov ymm1_8 L0x555555561252;
mov ymm1_9 L0x555555561252;
mov ymm1_a L0x555555561252;
mov ymm1_b L0x555555561252;
mov ymm1_c L0x555555561252;
mov ymm1_d L0x555555561252;
mov ymm1_e L0x555555561252;
mov ymm1_f L0x555555561252;
(* vpbroadcastw 0x332(%rdx),%ymm2                  #! EA = L0x555555561452; Value = 0xf001feabf111fac3; PC = 0x555555559637 *)
mov ymm2_0 L0x555555561452;
mov ymm2_1 L0x555555561452;
mov ymm2_2 L0x555555561452;
mov ymm2_3 L0x555555561452;
mov ymm2_4 L0x555555561452;
mov ymm2_5 L0x555555561452;
mov ymm2_6 L0x555555561452;
mov ymm2_7 L0x555555561452;
mov ymm2_8 L0x555555561452;
mov ymm2_9 L0x555555561452;
mov ymm2_a L0x555555561452;
mov ymm2_b L0x555555561452;
mov ymm2_c L0x555555561452;
mov ymm2_d L0x555555561452;
mov ymm2_e L0x555555561452;
mov ymm2_f L0x555555561452;
(* vpmullw %ymm1,%ymm6,%ymm9                       #! PC = 0x555555559640 *)
smull mulHymm6_0 mulL_0 ymm1_0 ymm6_0;
smull mulHymm6_1 mulL_1 ymm1_1 ymm6_1;
smull mulHymm6_2 mulL_2 ymm1_2 ymm6_2;
smull mulHymm6_3 mulL_3 ymm1_3 ymm6_3;
smull mulHymm6_4 mulL_4 ymm1_4 ymm6_4;
smull mulHymm6_5 mulL_5 ymm1_5 ymm6_5;
smull mulHymm6_6 mulL_6 ymm1_6 ymm6_6;
smull mulHymm6_7 mulL_7 ymm1_7 ymm6_7;
smull mulHymm6_8 mulL_8 ymm1_8 ymm6_8;
smull mulHymm6_9 mulL_9 ymm1_9 ymm6_9;
smull mulHymm6_a mulL_a ymm1_a ymm6_a;
smull mulHymm6_b mulL_b ymm1_b ymm6_b;
smull mulHymm6_c mulL_c ymm1_c ymm6_c;
smull mulHymm6_d mulL_d ymm1_d ymm6_d;
smull mulHymm6_e mulL_e ymm1_e ymm6_e;
smull mulHymm6_f mulL_f ymm1_f ymm6_f;
cast ymm9_0@sint16 mulL_0;
cast ymm9_1@sint16 mulL_1;
cast ymm9_2@sint16 mulL_2;
cast ymm9_3@sint16 mulL_3;
cast ymm9_4@sint16 mulL_4;
cast ymm9_5@sint16 mulL_5;
cast ymm9_6@sint16 mulL_6;
cast ymm9_7@sint16 mulL_7;
cast ymm9_8@sint16 mulL_8;
cast ymm9_9@sint16 mulL_9;
cast ymm9_a@sint16 mulL_a;
cast ymm9_b@sint16 mulL_b;
cast ymm9_c@sint16 mulL_c;
cast ymm9_d@sint16 mulL_d;
cast ymm9_e@sint16 mulL_e;
cast ymm9_f@sint16 mulL_f;
(* vpmulhw %ymm2,%ymm6,%ymm6                       #! PC = 0x555555559644 *)
smull mulH_0 mulLymm6_0 ymm6_0 ymm2_0;
smull mulH_1 mulLymm6_1 ymm6_1 ymm2_1;
smull mulH_2 mulLymm6_2 ymm6_2 ymm2_2;
smull mulH_3 mulLymm6_3 ymm6_3 ymm2_3;
smull mulH_4 mulLymm6_4 ymm6_4 ymm2_4;
smull mulH_5 mulLymm6_5 ymm6_5 ymm2_5;
smull mulH_6 mulLymm6_6 ymm6_6 ymm2_6;
smull mulH_7 mulLymm6_7 ymm6_7 ymm2_7;
smull mulH_8 mulLymm6_8 ymm6_8 ymm2_8;
smull mulH_9 mulLymm6_9 ymm6_9 ymm2_9;
smull mulH_a mulLymm6_a ymm6_a ymm2_a;
smull mulH_b mulLymm6_b ymm6_b ymm2_b;
smull mulH_c mulLymm6_c ymm6_c ymm2_c;
smull mulH_d mulLymm6_d ymm6_d ymm2_d;
smull mulH_e mulLymm6_e ymm6_e ymm2_e;
smull mulH_f mulLymm6_f ymm6_f ymm2_f;
mov ymm6_0 mulH_0;
mov ymm6_1 mulH_1;
mov ymm6_2 mulH_2;
mov ymm6_3 mulH_3;
mov ymm6_4 mulH_4;
mov ymm6_5 mulH_5;
mov ymm6_6 mulH_6;
mov ymm6_7 mulH_7;
mov ymm6_8 mulH_8;
mov ymm6_9 mulH_9;
mov ymm6_a mulH_a;
mov ymm6_b mulH_b;
mov ymm6_c mulH_c;
mov ymm6_d mulH_d;
mov ymm6_e mulH_e;
mov ymm6_f mulH_f;
(* vpmulhw %ymm0,%ymm9,%ymm9                       #! PC = 0x555555559648 *)
smull mulH_0 red_0 ymm9_0 ymm0_0;
assert true && red_0 = mulLymm6_0;
assume red_0 = mulLymm6_0 && true;
smull mulH_1 red_1 ymm9_1 ymm0_1;
assert true && red_1 = mulLymm6_1;
assume red_1 = mulLymm6_1 && true;
smull mulH_2 red_2 ymm9_2 ymm0_2;
assert true && red_2 = mulLymm6_2;
assume red_2 = mulLymm6_2 && true;
smull mulH_3 red_3 ymm9_3 ymm0_3;
assert true && red_3 = mulLymm6_3;
assume red_3 = mulLymm6_3 && true;
smull mulH_4 red_4 ymm9_4 ymm0_4;
assert true && red_4 = mulLymm6_4;
assume red_4 = mulLymm6_4 && true;
smull mulH_5 red_5 ymm9_5 ymm0_5;
assert true && red_5 = mulLymm6_5;
assume red_5 = mulLymm6_5 && true;
smull mulH_6 red_6 ymm9_6 ymm0_6;
assert true && red_6 = mulLymm6_6;
assume red_6 = mulLymm6_6 && true;
smull mulH_7 red_7 ymm9_7 ymm0_7;
assert true && red_7 = mulLymm6_7;
assume red_7 = mulLymm6_7 && true;
smull mulH_8 red_8 ymm9_8 ymm0_8;
assert true && red_8 = mulLymm6_8;
assume red_8 = mulLymm6_8 && true;
smull mulH_9 red_9 ymm9_9 ymm0_9;
assert true && red_9 = mulLymm6_9;
assume red_9 = mulLymm6_9 && true;
smull mulH_a red_a ymm9_a ymm0_a;
assert true && red_a = mulLymm6_a;
assume red_a = mulLymm6_a && true;
smull mulH_b red_b ymm9_b ymm0_b;
assert true && red_b = mulLymm6_b;
assume red_b = mulLymm6_b && true;
smull mulH_c red_c ymm9_c ymm0_c;
assert true && red_c = mulLymm6_c;
assume red_c = mulLymm6_c && true;
smull mulH_d red_d ymm9_d ymm0_d;
assert true && red_d = mulLymm6_d;
assume red_d = mulLymm6_d && true;
smull mulH_e red_e ymm9_e ymm0_e;
assert true && red_e = mulLymm6_e;
assume red_e = mulLymm6_e && true;
smull mulH_f red_f ymm9_f ymm0_f;
assert true && red_f = mulLymm6_f;
assume red_f = mulLymm6_f && true;
mov ymm9_0 mulH_0;
mov ymm9_1 mulH_1;
mov ymm9_2 mulH_2;
mov ymm9_3 mulH_3;
mov ymm9_4 mulH_4;
mov ymm9_5 mulH_5;
mov ymm9_6 mulH_6;
mov ymm9_7 mulH_7;
mov ymm9_8 mulH_8;
mov ymm9_9 mulH_9;
mov ymm9_a mulH_a;
mov ymm9_b mulH_b;
mov ymm9_c mulH_c;
mov ymm9_d mulH_d;
mov ymm9_e mulH_e;
mov ymm9_f mulH_f;
(* vpsubw %ymm9,%ymm6,%ymm6                        #! PC = 0x55555555964c *)
sub ymm6_0 ymm6_0 ymm9_0;
sub ymm6_1 ymm6_1 ymm9_1;
sub ymm6_2 ymm6_2 ymm9_2;
sub ymm6_3 ymm6_3 ymm9_3;
sub ymm6_4 ymm6_4 ymm9_4;
sub ymm6_5 ymm6_5 ymm9_5;
sub ymm6_6 ymm6_6 ymm9_6;
sub ymm6_7 ymm6_7 ymm9_7;
sub ymm6_8 ymm6_8 ymm9_8;
sub ymm6_9 ymm6_9 ymm9_9;
sub ymm6_a ymm6_a ymm9_a;
sub ymm6_b ymm6_b ymm9_b;
sub ymm6_c ymm6_c ymm9_c;
sub ymm6_d ymm6_d ymm9_d;
sub ymm6_e ymm6_e ymm9_e;
sub ymm6_f ymm6_f ymm9_f;
(* vpbroadcastw 0x134(%rdx),%ymm1                  #! EA = L0x555555561254; Value = 0xf1c9c601f0ab2711; PC = 0x555555559651 *)
mov ymm1_0 L0x555555561254;
mov ymm1_1 L0x555555561254;
mov ymm1_2 L0x555555561254;
mov ymm1_3 L0x555555561254;
mov ymm1_4 L0x555555561254;
mov ymm1_5 L0x555555561254;
mov ymm1_6 L0x555555561254;
mov ymm1_7 L0x555555561254;
mov ymm1_8 L0x555555561254;
mov ymm1_9 L0x555555561254;
mov ymm1_a L0x555555561254;
mov ymm1_b L0x555555561254;
mov ymm1_c L0x555555561254;
mov ymm1_d L0x555555561254;
mov ymm1_e L0x555555561254;
mov ymm1_f L0x555555561254;
(* vpbroadcastw 0x334(%rdx),%ymm2                  #! EA = L0x555555561454; Value = 0xebc9f001feabf111; PC = 0x55555555965a *)
mov ymm2_0 L0x555555561454;
mov ymm2_1 L0x555555561454;
mov ymm2_2 L0x555555561454;
mov ymm2_3 L0x555555561454;
mov ymm2_4 L0x555555561454;
mov ymm2_5 L0x555555561454;
mov ymm2_6 L0x555555561454;
mov ymm2_7 L0x555555561454;
mov ymm2_8 L0x555555561454;
mov ymm2_9 L0x555555561454;
mov ymm2_a L0x555555561454;
mov ymm2_b L0x555555561454;
mov ymm2_c L0x555555561454;
mov ymm2_d L0x555555561454;
mov ymm2_e L0x555555561454;
mov ymm2_f L0x555555561454;
(* vpmullw %ymm1,%ymm8,%ymm9                       #! PC = 0x555555559663 *)
smull mulHymm8_0 mulL_0 ymm1_0 ymm8_0;
smull mulHymm8_1 mulL_1 ymm1_1 ymm8_1;
smull mulHymm8_2 mulL_2 ymm1_2 ymm8_2;
smull mulHymm8_3 mulL_3 ymm1_3 ymm8_3;
smull mulHymm8_4 mulL_4 ymm1_4 ymm8_4;
smull mulHymm8_5 mulL_5 ymm1_5 ymm8_5;
smull mulHymm8_6 mulL_6 ymm1_6 ymm8_6;
smull mulHymm8_7 mulL_7 ymm1_7 ymm8_7;
smull mulHymm8_8 mulL_8 ymm1_8 ymm8_8;
smull mulHymm8_9 mulL_9 ymm1_9 ymm8_9;
smull mulHymm8_a mulL_a ymm1_a ymm8_a;
smull mulHymm8_b mulL_b ymm1_b ymm8_b;
smull mulHymm8_c mulL_c ymm1_c ymm8_c;
smull mulHymm8_d mulL_d ymm1_d ymm8_d;
smull mulHymm8_e mulL_e ymm1_e ymm8_e;
smull mulHymm8_f mulL_f ymm1_f ymm8_f;
cast ymm9_0@sint16 mulL_0;
cast ymm9_1@sint16 mulL_1;
cast ymm9_2@sint16 mulL_2;
cast ymm9_3@sint16 mulL_3;
cast ymm9_4@sint16 mulL_4;
cast ymm9_5@sint16 mulL_5;
cast ymm9_6@sint16 mulL_6;
cast ymm9_7@sint16 mulL_7;
cast ymm9_8@sint16 mulL_8;
cast ymm9_9@sint16 mulL_9;
cast ymm9_a@sint16 mulL_a;
cast ymm9_b@sint16 mulL_b;
cast ymm9_c@sint16 mulL_c;
cast ymm9_d@sint16 mulL_d;
cast ymm9_e@sint16 mulL_e;
cast ymm9_f@sint16 mulL_f;
(* vpmulhw %ymm2,%ymm8,%ymm8                       #! PC = 0x555555559667 *)
smull mulH_0 mulLymm8_0 ymm8_0 ymm2_0;
smull mulH_1 mulLymm8_1 ymm8_1 ymm2_1;
smull mulH_2 mulLymm8_2 ymm8_2 ymm2_2;
smull mulH_3 mulLymm8_3 ymm8_3 ymm2_3;
smull mulH_4 mulLymm8_4 ymm8_4 ymm2_4;
smull mulH_5 mulLymm8_5 ymm8_5 ymm2_5;
smull mulH_6 mulLymm8_6 ymm8_6 ymm2_6;
smull mulH_7 mulLymm8_7 ymm8_7 ymm2_7;
smull mulH_8 mulLymm8_8 ymm8_8 ymm2_8;
smull mulH_9 mulLymm8_9 ymm8_9 ymm2_9;
smull mulH_a mulLymm8_a ymm8_a ymm2_a;
smull mulH_b mulLymm8_b ymm8_b ymm2_b;
smull mulH_c mulLymm8_c ymm8_c ymm2_c;
smull mulH_d mulLymm8_d ymm8_d ymm2_d;
smull mulH_e mulLymm8_e ymm8_e ymm2_e;
smull mulH_f mulLymm8_f ymm8_f ymm2_f;
mov ymm8_0 mulH_0;
mov ymm8_1 mulH_1;
mov ymm8_2 mulH_2;
mov ymm8_3 mulH_3;
mov ymm8_4 mulH_4;
mov ymm8_5 mulH_5;
mov ymm8_6 mulH_6;
mov ymm8_7 mulH_7;
mov ymm8_8 mulH_8;
mov ymm8_9 mulH_9;
mov ymm8_a mulH_a;
mov ymm8_b mulH_b;
mov ymm8_c mulH_c;
mov ymm8_d mulH_d;
mov ymm8_e mulH_e;
mov ymm8_f mulH_f;
(* vpmulhw %ymm0,%ymm9,%ymm9                       #! PC = 0x55555555966b *)
smull mulH_0 red_0 ymm9_0 ymm0_0;
assert true && red_0 = mulLymm8_0;
assume red_0 = mulLymm8_0 && true;
smull mulH_1 red_1 ymm9_1 ymm0_1;
assert true && red_1 = mulLymm8_1;
assume red_1 = mulLymm8_1 && true;
smull mulH_2 red_2 ymm9_2 ymm0_2;
assert true && red_2 = mulLymm8_2;
assume red_2 = mulLymm8_2 && true;
smull mulH_3 red_3 ymm9_3 ymm0_3;
assert true && red_3 = mulLymm8_3;
assume red_3 = mulLymm8_3 && true;
smull mulH_4 red_4 ymm9_4 ymm0_4;
assert true && red_4 = mulLymm8_4;
assume red_4 = mulLymm8_4 && true;
smull mulH_5 red_5 ymm9_5 ymm0_5;
assert true && red_5 = mulLymm8_5;
assume red_5 = mulLymm8_5 && true;
smull mulH_6 red_6 ymm9_6 ymm0_6;
assert true && red_6 = mulLymm8_6;
assume red_6 = mulLymm8_6 && true;
smull mulH_7 red_7 ymm9_7 ymm0_7;
assert true && red_7 = mulLymm8_7;
assume red_7 = mulLymm8_7 && true;
smull mulH_8 red_8 ymm9_8 ymm0_8;
assert true && red_8 = mulLymm8_8;
assume red_8 = mulLymm8_8 && true;
smull mulH_9 red_9 ymm9_9 ymm0_9;
assert true && red_9 = mulLymm8_9;
assume red_9 = mulLymm8_9 && true;
smull mulH_a red_a ymm9_a ymm0_a;
assert true && red_a = mulLymm8_a;
assume red_a = mulLymm8_a && true;
smull mulH_b red_b ymm9_b ymm0_b;
assert true && red_b = mulLymm8_b;
assume red_b = mulLymm8_b && true;
smull mulH_c red_c ymm9_c ymm0_c;
assert true && red_c = mulLymm8_c;
assume red_c = mulLymm8_c && true;
smull mulH_d red_d ymm9_d ymm0_d;
assert true && red_d = mulLymm8_d;
assume red_d = mulLymm8_d && true;
smull mulH_e red_e ymm9_e ymm0_e;
assert true && red_e = mulLymm8_e;
assume red_e = mulLymm8_e && true;
smull mulH_f red_f ymm9_f ymm0_f;
assert true && red_f = mulLymm8_f;
assume red_f = mulLymm8_f && true;
mov ymm9_0 mulH_0;
mov ymm9_1 mulH_1;
mov ymm9_2 mulH_2;
mov ymm9_3 mulH_3;
mov ymm9_4 mulH_4;
mov ymm9_5 mulH_5;
mov ymm9_6 mulH_6;
mov ymm9_7 mulH_7;
mov ymm9_8 mulH_8;
mov ymm9_9 mulH_9;
mov ymm9_a mulH_a;
mov ymm9_b mulH_b;
mov ymm9_c mulH_c;
mov ymm9_d mulH_d;
mov ymm9_e mulH_e;
mov ymm9_f mulH_f;
(* vpsubw %ymm9,%ymm8,%ymm8                        #! PC = 0x55555555966f *)
sub ymm8_0 ymm8_0 ymm9_0;
sub ymm8_1 ymm8_1 ymm9_1;
sub ymm8_2 ymm8_2 ymm9_2;
sub ymm8_3 ymm8_3 ymm9_3;
sub ymm8_4 ymm8_4 ymm9_4;
sub ymm8_5 ymm8_5 ymm9_5;
sub ymm8_6 ymm8_6 ymm9_6;
sub ymm8_7 ymm8_7 ymm9_7;
sub ymm8_8 ymm8_8 ymm9_8;
sub ymm8_9 ymm8_9 ymm9_9;
sub ymm8_a ymm8_a ymm9_a;
sub ymm8_b ymm8_b ymm9_b;
sub ymm8_c ymm8_c ymm9_c;
sub ymm8_d ymm8_d ymm9_d;
sub ymm8_e ymm8_e ymm9_e;
sub ymm8_f ymm8_f ymm9_f;
(* vpbroadcastw 0x136(%rdx),%ymm1                  #! EA = L0x555555561256; Value = 0x47bbf1c9c601f0ab; PC = 0x555555559674 *)
mov ymm1_0 L0x555555561256;
mov ymm1_1 L0x555555561256;
mov ymm1_2 L0x555555561256;
mov ymm1_3 L0x555555561256;
mov ymm1_4 L0x555555561256;
mov ymm1_5 L0x555555561256;
mov ymm1_6 L0x555555561256;
mov ymm1_7 L0x555555561256;
mov ymm1_8 L0x555555561256;
mov ymm1_9 L0x555555561256;
mov ymm1_a L0x555555561256;
mov ymm1_b L0x555555561256;
mov ymm1_c L0x555555561256;
mov ymm1_d L0x555555561256;
mov ymm1_e L0x555555561256;
mov ymm1_f L0x555555561256;
(* vpbroadcastw 0x336(%rdx),%ymm2                  #! EA = L0x555555561456; Value = 0xf5bbebc9f001feab; PC = 0x55555555967d *)
mov ymm2_0 L0x555555561456;
mov ymm2_1 L0x555555561456;
mov ymm2_2 L0x555555561456;
mov ymm2_3 L0x555555561456;
mov ymm2_4 L0x555555561456;
mov ymm2_5 L0x555555561456;
mov ymm2_6 L0x555555561456;
mov ymm2_7 L0x555555561456;
mov ymm2_8 L0x555555561456;
mov ymm2_9 L0x555555561456;
mov ymm2_a L0x555555561456;
mov ymm2_b L0x555555561456;
mov ymm2_c L0x555555561456;
mov ymm2_d L0x555555561456;
mov ymm2_e L0x555555561456;
mov ymm2_f L0x555555561456;
(* vpmullw %ymm1,%ymm11,%ymm9                      #! PC = 0x555555559686 *)
smull mulHymm11_0 mulL_0 ymm1_0 ymm11_0;
smull mulHymm11_1 mulL_1 ymm1_1 ymm11_1;
smull mulHymm11_2 mulL_2 ymm1_2 ymm11_2;
smull mulHymm11_3 mulL_3 ymm1_3 ymm11_3;
smull mulHymm11_4 mulL_4 ymm1_4 ymm11_4;
smull mulHymm11_5 mulL_5 ymm1_5 ymm11_5;
smull mulHymm11_6 mulL_6 ymm1_6 ymm11_6;
smull mulHymm11_7 mulL_7 ymm1_7 ymm11_7;
smull mulHymm11_8 mulL_8 ymm1_8 ymm11_8;
smull mulHymm11_9 mulL_9 ymm1_9 ymm11_9;
smull mulHymm11_a mulL_a ymm1_a ymm11_a;
smull mulHymm11_b mulL_b ymm1_b ymm11_b;
smull mulHymm11_c mulL_c ymm1_c ymm11_c;
smull mulHymm11_d mulL_d ymm1_d ymm11_d;
smull mulHymm11_e mulL_e ymm1_e ymm11_e;
smull mulHymm11_f mulL_f ymm1_f ymm11_f;
cast ymm9_0@sint16 mulL_0;
cast ymm9_1@sint16 mulL_1;
cast ymm9_2@sint16 mulL_2;
cast ymm9_3@sint16 mulL_3;
cast ymm9_4@sint16 mulL_4;
cast ymm9_5@sint16 mulL_5;
cast ymm9_6@sint16 mulL_6;
cast ymm9_7@sint16 mulL_7;
cast ymm9_8@sint16 mulL_8;
cast ymm9_9@sint16 mulL_9;
cast ymm9_a@sint16 mulL_a;
cast ymm9_b@sint16 mulL_b;
cast ymm9_c@sint16 mulL_c;
cast ymm9_d@sint16 mulL_d;
cast ymm9_e@sint16 mulL_e;
cast ymm9_f@sint16 mulL_f;
(* vpmulhw %ymm2,%ymm11,%ymm11                     #! PC = 0x55555555968a *)
smull mulH_0 mulLymm11_0 ymm11_0 ymm2_0;
smull mulH_1 mulLymm11_1 ymm11_1 ymm2_1;
smull mulH_2 mulLymm11_2 ymm11_2 ymm2_2;
smull mulH_3 mulLymm11_3 ymm11_3 ymm2_3;
smull mulH_4 mulLymm11_4 ymm11_4 ymm2_4;
smull mulH_5 mulLymm11_5 ymm11_5 ymm2_5;
smull mulH_6 mulLymm11_6 ymm11_6 ymm2_6;
smull mulH_7 mulLymm11_7 ymm11_7 ymm2_7;
smull mulH_8 mulLymm11_8 ymm11_8 ymm2_8;
smull mulH_9 mulLymm11_9 ymm11_9 ymm2_9;
smull mulH_a mulLymm11_a ymm11_a ymm2_a;
smull mulH_b mulLymm11_b ymm11_b ymm2_b;
smull mulH_c mulLymm11_c ymm11_c ymm2_c;
smull mulH_d mulLymm11_d ymm11_d ymm2_d;
smull mulH_e mulLymm11_e ymm11_e ymm2_e;
smull mulH_f mulLymm11_f ymm11_f ymm2_f;
mov ymm11_0 mulH_0;
mov ymm11_1 mulH_1;
mov ymm11_2 mulH_2;
mov ymm11_3 mulH_3;
mov ymm11_4 mulH_4;
mov ymm11_5 mulH_5;
mov ymm11_6 mulH_6;
mov ymm11_7 mulH_7;
mov ymm11_8 mulH_8;
mov ymm11_9 mulH_9;
mov ymm11_a mulH_a;
mov ymm11_b mulH_b;
mov ymm11_c mulH_c;
mov ymm11_d mulH_d;
mov ymm11_e mulH_e;
mov ymm11_f mulH_f;
(* vpmulhw %ymm0,%ymm9,%ymm9                       #! PC = 0x55555555968e *)
smull mulH_0 red_0 ymm9_0 ymm0_0;
assert true && red_0 = mulLymm11_0;
assume red_0 = mulLymm11_0 && true;
smull mulH_1 red_1 ymm9_1 ymm0_1;
assert true && red_1 = mulLymm11_1;
assume red_1 = mulLymm11_1 && true;
smull mulH_2 red_2 ymm9_2 ymm0_2;
assert true && red_2 = mulLymm11_2;
assume red_2 = mulLymm11_2 && true;
smull mulH_3 red_3 ymm9_3 ymm0_3;
assert true && red_3 = mulLymm11_3;
assume red_3 = mulLymm11_3 && true;
smull mulH_4 red_4 ymm9_4 ymm0_4;
assert true && red_4 = mulLymm11_4;
assume red_4 = mulLymm11_4 && true;
smull mulH_5 red_5 ymm9_5 ymm0_5;
assert true && red_5 = mulLymm11_5;
assume red_5 = mulLymm11_5 && true;
smull mulH_6 red_6 ymm9_6 ymm0_6;
assert true && red_6 = mulLymm11_6;
assume red_6 = mulLymm11_6 && true;
smull mulH_7 red_7 ymm9_7 ymm0_7;
assert true && red_7 = mulLymm11_7;
assume red_7 = mulLymm11_7 && true;
smull mulH_8 red_8 ymm9_8 ymm0_8;
assert true && red_8 = mulLymm11_8;
assume red_8 = mulLymm11_8 && true;
smull mulH_9 red_9 ymm9_9 ymm0_9;
assert true && red_9 = mulLymm11_9;
assume red_9 = mulLymm11_9 && true;
smull mulH_a red_a ymm9_a ymm0_a;
assert true && red_a = mulLymm11_a;
assume red_a = mulLymm11_a && true;
smull mulH_b red_b ymm9_b ymm0_b;
assert true && red_b = mulLymm11_b;
assume red_b = mulLymm11_b && true;
smull mulH_c red_c ymm9_c ymm0_c;
assert true && red_c = mulLymm11_c;
assume red_c = mulLymm11_c && true;
smull mulH_d red_d ymm9_d ymm0_d;
assert true && red_d = mulLymm11_d;
assume red_d = mulLymm11_d && true;
smull mulH_e red_e ymm9_e ymm0_e;
assert true && red_e = mulLymm11_e;
assume red_e = mulLymm11_e && true;
smull mulH_f red_f ymm9_f ymm0_f;
assert true && red_f = mulLymm11_f;
assume red_f = mulLymm11_f && true;
mov ymm9_0 mulH_0;
mov ymm9_1 mulH_1;
mov ymm9_2 mulH_2;
mov ymm9_3 mulH_3;
mov ymm9_4 mulH_4;
mov ymm9_5 mulH_5;
mov ymm9_6 mulH_6;
mov ymm9_7 mulH_7;
mov ymm9_8 mulH_8;
mov ymm9_9 mulH_9;
mov ymm9_a mulH_a;
mov ymm9_b mulH_b;
mov ymm9_c mulH_c;
mov ymm9_d mulH_d;
mov ymm9_e mulH_e;
mov ymm9_f mulH_f;
(* vpsubw %ymm9,%ymm11,%ymm11                      #! PC = 0x555555559692 *)
sub ymm11_0 ymm11_0 ymm9_0;
sub ymm11_1 ymm11_1 ymm9_1;
sub ymm11_2 ymm11_2 ymm9_2;
sub ymm11_3 ymm11_3 ymm9_3;
sub ymm11_4 ymm11_4 ymm9_4;
sub ymm11_5 ymm11_5 ymm9_5;
sub ymm11_6 ymm11_6 ymm9_6;
sub ymm11_7 ymm11_7 ymm9_7;
sub ymm11_8 ymm11_8 ymm9_8;
sub ymm11_9 ymm11_9 ymm9_9;
sub ymm11_a ymm11_a ymm9_a;
sub ymm11_b ymm11_b ymm9_b;
sub ymm11_c ymm11_c ymm9_c;
sub ymm11_d ymm11_d ymm9_d;
sub ymm11_e ymm11_e ymm9_e;
sub ymm11_f ymm11_f ymm9_f;
(* vpmullw %ymm14,%ymm7,%ymm9                      #! PC = 0x555555559697 *)
smull mulHymm7_0 mulL_0 ymm14_0 ymm7_0;
smull mulHymm7_1 mulL_1 ymm14_1 ymm7_1;
smull mulHymm7_2 mulL_2 ymm14_2 ymm7_2;
smull mulHymm7_3 mulL_3 ymm14_3 ymm7_3;
smull mulHymm7_4 mulL_4 ymm14_4 ymm7_4;
smull mulHymm7_5 mulL_5 ymm14_5 ymm7_5;
smull mulHymm7_6 mulL_6 ymm14_6 ymm7_6;
smull mulHymm7_7 mulL_7 ymm14_7 ymm7_7;
smull mulHymm7_8 mulL_8 ymm14_8 ymm7_8;
smull mulHymm7_9 mulL_9 ymm14_9 ymm7_9;
smull mulHymm7_a mulL_a ymm14_a ymm7_a;
smull mulHymm7_b mulL_b ymm14_b ymm7_b;
smull mulHymm7_c mulL_c ymm14_c ymm7_c;
smull mulHymm7_d mulL_d ymm14_d ymm7_d;
smull mulHymm7_e mulL_e ymm14_e ymm7_e;
smull mulHymm7_f mulL_f ymm14_f ymm7_f;
cast ymm9_0@sint16 mulL_0;
cast ymm9_1@sint16 mulL_1;
cast ymm9_2@sint16 mulL_2;
cast ymm9_3@sint16 mulL_3;
cast ymm9_4@sint16 mulL_4;
cast ymm9_5@sint16 mulL_5;
cast ymm9_6@sint16 mulL_6;
cast ymm9_7@sint16 mulL_7;
cast ymm9_8@sint16 mulL_8;
cast ymm9_9@sint16 mulL_9;
cast ymm9_a@sint16 mulL_a;
cast ymm9_b@sint16 mulL_b;
cast ymm9_c@sint16 mulL_c;
cast ymm9_d@sint16 mulL_d;
cast ymm9_e@sint16 mulL_e;
cast ymm9_f@sint16 mulL_f;
(* vpmulhw %ymm15,%ymm7,%ymm7                      #! PC = 0x55555555969c *)
smull mulH_0 mulLymm7_0 ymm7_0 ymm15_0;
smull mulH_1 mulLymm7_1 ymm7_1 ymm15_1;
smull mulH_2 mulLymm7_2 ymm7_2 ymm15_2;
smull mulH_3 mulLymm7_3 ymm7_3 ymm15_3;
smull mulH_4 mulLymm7_4 ymm7_4 ymm15_4;
smull mulH_5 mulLymm7_5 ymm7_5 ymm15_5;
smull mulH_6 mulLymm7_6 ymm7_6 ymm15_6;
smull mulH_7 mulLymm7_7 ymm7_7 ymm15_7;
smull mulH_8 mulLymm7_8 ymm7_8 ymm15_8;
smull mulH_9 mulLymm7_9 ymm7_9 ymm15_9;
smull mulH_a mulLymm7_a ymm7_a ymm15_a;
smull mulH_b mulLymm7_b ymm7_b ymm15_b;
smull mulH_c mulLymm7_c ymm7_c ymm15_c;
smull mulH_d mulLymm7_d ymm7_d ymm15_d;
smull mulH_e mulLymm7_e ymm7_e ymm15_e;
smull mulH_f mulLymm7_f ymm7_f ymm15_f;
mov ymm7_0 mulH_0;
mov ymm7_1 mulH_1;
mov ymm7_2 mulH_2;
mov ymm7_3 mulH_3;
mov ymm7_4 mulH_4;
mov ymm7_5 mulH_5;
mov ymm7_6 mulH_6;
mov ymm7_7 mulH_7;
mov ymm7_8 mulH_8;
mov ymm7_9 mulH_9;
mov ymm7_a mulH_a;
mov ymm7_b mulH_b;
mov ymm7_c mulH_c;
mov ymm7_d mulH_d;
mov ymm7_e mulH_e;
mov ymm7_f mulH_f;
(* vpmulhw %ymm0,%ymm9,%ymm9                       #! PC = 0x5555555596a1 *)
smull mulH_0 red_0 ymm9_0 ymm0_0;
assert true && red_0 = mulLymm7_0;
assume red_0 = mulLymm7_0 && true;
smull mulH_1 red_1 ymm9_1 ymm0_1;
assert true && red_1 = mulLymm7_1;
assume red_1 = mulLymm7_1 && true;
smull mulH_2 red_2 ymm9_2 ymm0_2;
assert true && red_2 = mulLymm7_2;
assume red_2 = mulLymm7_2 && true;
smull mulH_3 red_3 ymm9_3 ymm0_3;
assert true && red_3 = mulLymm7_3;
assume red_3 = mulLymm7_3 && true;
smull mulH_4 red_4 ymm9_4 ymm0_4;
assert true && red_4 = mulLymm7_4;
assume red_4 = mulLymm7_4 && true;
smull mulH_5 red_5 ymm9_5 ymm0_5;
assert true && red_5 = mulLymm7_5;
assume red_5 = mulLymm7_5 && true;
smull mulH_6 red_6 ymm9_6 ymm0_6;
assert true && red_6 = mulLymm7_6;
assume red_6 = mulLymm7_6 && true;
smull mulH_7 red_7 ymm9_7 ymm0_7;
assert true && red_7 = mulLymm7_7;
assume red_7 = mulLymm7_7 && true;
smull mulH_8 red_8 ymm9_8 ymm0_8;
assert true && red_8 = mulLymm7_8;
assume red_8 = mulLymm7_8 && true;
smull mulH_9 red_9 ymm9_9 ymm0_9;
assert true && red_9 = mulLymm7_9;
assume red_9 = mulLymm7_9 && true;
smull mulH_a red_a ymm9_a ymm0_a;
assert true && red_a = mulLymm7_a;
assume red_a = mulLymm7_a && true;
smull mulH_b red_b ymm9_b ymm0_b;
assert true && red_b = mulLymm7_b;
assume red_b = mulLymm7_b && true;
smull mulH_c red_c ymm9_c ymm0_c;
assert true && red_c = mulLymm7_c;
assume red_c = mulLymm7_c && true;
smull mulH_d red_d ymm9_d ymm0_d;
assert true && red_d = mulLymm7_d;
assume red_d = mulLymm7_d && true;
smull mulH_e red_e ymm9_e ymm0_e;
assert true && red_e = mulLymm7_e;
assume red_e = mulLymm7_e && true;
smull mulH_f red_f ymm9_f ymm0_f;
assert true && red_f = mulLymm7_f;
assume red_f = mulLymm7_f && true;
mov ymm9_0 mulH_0;
mov ymm9_1 mulH_1;
mov ymm9_2 mulH_2;
mov ymm9_3 mulH_3;
mov ymm9_4 mulH_4;
mov ymm9_5 mulH_5;
mov ymm9_6 mulH_6;
mov ymm9_7 mulH_7;
mov ymm9_8 mulH_8;
mov ymm9_9 mulH_9;
mov ymm9_a mulH_a;
mov ymm9_b mulH_b;
mov ymm9_c mulH_c;
mov ymm9_d mulH_d;
mov ymm9_e mulH_e;
mov ymm9_f mulH_f;
(* vpsubw %ymm9,%ymm7,%ymm7                        #! PC = 0x5555555596a5 *)
sub ymm7_0 ymm7_0 ymm9_0;
sub ymm7_1 ymm7_1 ymm9_1;
sub ymm7_2 ymm7_2 ymm9_2;
sub ymm7_3 ymm7_3 ymm9_3;
sub ymm7_4 ymm7_4 ymm9_4;
sub ymm7_5 ymm7_5 ymm9_5;
sub ymm7_6 ymm7_6 ymm9_6;
sub ymm7_7 ymm7_7 ymm9_7;
sub ymm7_8 ymm7_8 ymm9_8;
sub ymm7_9 ymm7_9 ymm9_9;
sub ymm7_a ymm7_a ymm9_a;
sub ymm7_b ymm7_b ymm9_b;
sub ymm7_c ymm7_c ymm9_c;
sub ymm7_d ymm7_d ymm9_d;
sub ymm7_e ymm7_e ymm9_e;
sub ymm7_f ymm7_f ymm9_f;
(* vpmullw %ymm14,%ymm5,%ymm9                      #! PC = 0x5555555596aa *)
smull mulHymm5_0 mulL_0 ymm14_0 ymm5_0;
smull mulHymm5_1 mulL_1 ymm14_1 ymm5_1;
smull mulHymm5_2 mulL_2 ymm14_2 ymm5_2;
smull mulHymm5_3 mulL_3 ymm14_3 ymm5_3;
smull mulHymm5_4 mulL_4 ymm14_4 ymm5_4;
smull mulHymm5_5 mulL_5 ymm14_5 ymm5_5;
smull mulHymm5_6 mulL_6 ymm14_6 ymm5_6;
smull mulHymm5_7 mulL_7 ymm14_7 ymm5_7;
smull mulHymm5_8 mulL_8 ymm14_8 ymm5_8;
smull mulHymm5_9 mulL_9 ymm14_9 ymm5_9;
smull mulHymm5_a mulL_a ymm14_a ymm5_a;
smull mulHymm5_b mulL_b ymm14_b ymm5_b;
smull mulHymm5_c mulL_c ymm14_c ymm5_c;
smull mulHymm5_d mulL_d ymm14_d ymm5_d;
smull mulHymm5_e mulL_e ymm14_e ymm5_e;
smull mulHymm5_f mulL_f ymm14_f ymm5_f;
cast ymm9_0@sint16 mulL_0;
cast ymm9_1@sint16 mulL_1;
cast ymm9_2@sint16 mulL_2;
cast ymm9_3@sint16 mulL_3;
cast ymm9_4@sint16 mulL_4;
cast ymm9_5@sint16 mulL_5;
cast ymm9_6@sint16 mulL_6;
cast ymm9_7@sint16 mulL_7;
cast ymm9_8@sint16 mulL_8;
cast ymm9_9@sint16 mulL_9;
cast ymm9_a@sint16 mulL_a;
cast ymm9_b@sint16 mulL_b;
cast ymm9_c@sint16 mulL_c;
cast ymm9_d@sint16 mulL_d;
cast ymm9_e@sint16 mulL_e;
cast ymm9_f@sint16 mulL_f;
(* vpmulhw %ymm15,%ymm5,%ymm5                      #! PC = 0x5555555596af *)
smull mulH_0 mulLymm5_0 ymm5_0 ymm15_0;
smull mulH_1 mulLymm5_1 ymm5_1 ymm15_1;
smull mulH_2 mulLymm5_2 ymm5_2 ymm15_2;
smull mulH_3 mulLymm5_3 ymm5_3 ymm15_3;
smull mulH_4 mulLymm5_4 ymm5_4 ymm15_4;
smull mulH_5 mulLymm5_5 ymm5_5 ymm15_5;
smull mulH_6 mulLymm5_6 ymm5_6 ymm15_6;
smull mulH_7 mulLymm5_7 ymm5_7 ymm15_7;
smull mulH_8 mulLymm5_8 ymm5_8 ymm15_8;
smull mulH_9 mulLymm5_9 ymm5_9 ymm15_9;
smull mulH_a mulLymm5_a ymm5_a ymm15_a;
smull mulH_b mulLymm5_b ymm5_b ymm15_b;
smull mulH_c mulLymm5_c ymm5_c ymm15_c;
smull mulH_d mulLymm5_d ymm5_d ymm15_d;
smull mulH_e mulLymm5_e ymm5_e ymm15_e;
smull mulH_f mulLymm5_f ymm5_f ymm15_f;
mov ymm5_0 mulH_0;
mov ymm5_1 mulH_1;
mov ymm5_2 mulH_2;
mov ymm5_3 mulH_3;
mov ymm5_4 mulH_4;
mov ymm5_5 mulH_5;
mov ymm5_6 mulH_6;
mov ymm5_7 mulH_7;
mov ymm5_8 mulH_8;
mov ymm5_9 mulH_9;
mov ymm5_a mulH_a;
mov ymm5_b mulH_b;
mov ymm5_c mulH_c;
mov ymm5_d mulH_d;
mov ymm5_e mulH_e;
mov ymm5_f mulH_f;
(* vpmulhw %ymm0,%ymm9,%ymm9                       #! PC = 0x5555555596b4 *)
smull mulH_0 red_0 ymm9_0 ymm0_0;
assert true && red_0 = mulLymm5_0;
assume red_0 = mulLymm5_0 && true;
smull mulH_1 red_1 ymm9_1 ymm0_1;
assert true && red_1 = mulLymm5_1;
assume red_1 = mulLymm5_1 && true;
smull mulH_2 red_2 ymm9_2 ymm0_2;
assert true && red_2 = mulLymm5_2;
assume red_2 = mulLymm5_2 && true;
smull mulH_3 red_3 ymm9_3 ymm0_3;
assert true && red_3 = mulLymm5_3;
assume red_3 = mulLymm5_3 && true;
smull mulH_4 red_4 ymm9_4 ymm0_4;
assert true && red_4 = mulLymm5_4;
assume red_4 = mulLymm5_4 && true;
smull mulH_5 red_5 ymm9_5 ymm0_5;
assert true && red_5 = mulLymm5_5;
assume red_5 = mulLymm5_5 && true;
smull mulH_6 red_6 ymm9_6 ymm0_6;
assert true && red_6 = mulLymm5_6;
assume red_6 = mulLymm5_6 && true;
smull mulH_7 red_7 ymm9_7 ymm0_7;
assert true && red_7 = mulLymm5_7;
assume red_7 = mulLymm5_7 && true;
smull mulH_8 red_8 ymm9_8 ymm0_8;
assert true && red_8 = mulLymm5_8;
assume red_8 = mulLymm5_8 && true;
smull mulH_9 red_9 ymm9_9 ymm0_9;
assert true && red_9 = mulLymm5_9;
assume red_9 = mulLymm5_9 && true;
smull mulH_a red_a ymm9_a ymm0_a;
assert true && red_a = mulLymm5_a;
assume red_a = mulLymm5_a && true;
smull mulH_b red_b ymm9_b ymm0_b;
assert true && red_b = mulLymm5_b;
assume red_b = mulLymm5_b && true;
smull mulH_c red_c ymm9_c ymm0_c;
assert true && red_c = mulLymm5_c;
assume red_c = mulLymm5_c && true;
smull mulH_d red_d ymm9_d ymm0_d;
assert true && red_d = mulLymm5_d;
assume red_d = mulLymm5_d && true;
smull mulH_e red_e ymm9_e ymm0_e;
assert true && red_e = mulLymm5_e;
assume red_e = mulLymm5_e && true;
smull mulH_f red_f ymm9_f ymm0_f;
assert true && red_f = mulLymm5_f;
assume red_f = mulLymm5_f && true;
mov ymm9_0 mulH_0;
mov ymm9_1 mulH_1;
mov ymm9_2 mulH_2;
mov ymm9_3 mulH_3;
mov ymm9_4 mulH_4;
mov ymm9_5 mulH_5;
mov ymm9_6 mulH_6;
mov ymm9_7 mulH_7;
mov ymm9_8 mulH_8;
mov ymm9_9 mulH_9;
mov ymm9_a mulH_a;
mov ymm9_b mulH_b;
mov ymm9_c mulH_c;
mov ymm9_d mulH_d;
mov ymm9_e mulH_e;
mov ymm9_f mulH_f;
(* vpsubw %ymm9,%ymm5,%ymm5                        #! PC = 0x5555555596b8 *)
sub ymm5_0 ymm5_0 ymm9_0;
sub ymm5_1 ymm5_1 ymm9_1;
sub ymm5_2 ymm5_2 ymm9_2;
sub ymm5_3 ymm5_3 ymm9_3;
sub ymm5_4 ymm5_4 ymm9_4;
sub ymm5_5 ymm5_5 ymm9_5;
sub ymm5_6 ymm5_6 ymm9_6;
sub ymm5_7 ymm5_7 ymm9_7;
sub ymm5_8 ymm5_8 ymm9_8;
sub ymm5_9 ymm5_9 ymm9_9;
sub ymm5_a ymm5_a ymm9_a;
sub ymm5_b ymm5_b ymm9_b;
sub ymm5_c ymm5_c ymm9_c;
sub ymm5_d ymm5_d ymm9_d;
sub ymm5_e ymm5_e ymm9_e;
sub ymm5_f ymm5_f ymm9_f;
(* vpmullw %ymm14,%ymm4,%ymm9                      #! PC = 0x5555555596bd *)
smull mulHymm4_0 mulL_0 ymm14_0 ymm4_0;
smull mulHymm4_1 mulL_1 ymm14_1 ymm4_1;
smull mulHymm4_2 mulL_2 ymm14_2 ymm4_2;
smull mulHymm4_3 mulL_3 ymm14_3 ymm4_3;
smull mulHymm4_4 mulL_4 ymm14_4 ymm4_4;
smull mulHymm4_5 mulL_5 ymm14_5 ymm4_5;
smull mulHymm4_6 mulL_6 ymm14_6 ymm4_6;
smull mulHymm4_7 mulL_7 ymm14_7 ymm4_7;
smull mulHymm4_8 mulL_8 ymm14_8 ymm4_8;
smull mulHymm4_9 mulL_9 ymm14_9 ymm4_9;
smull mulHymm4_a mulL_a ymm14_a ymm4_a;
smull mulHymm4_b mulL_b ymm14_b ymm4_b;
smull mulHymm4_c mulL_c ymm14_c ymm4_c;
smull mulHymm4_d mulL_d ymm14_d ymm4_d;
smull mulHymm4_e mulL_e ymm14_e ymm4_e;
smull mulHymm4_f mulL_f ymm14_f ymm4_f;
cast ymm9_0@sint16 mulL_0;
cast ymm9_1@sint16 mulL_1;
cast ymm9_2@sint16 mulL_2;
cast ymm9_3@sint16 mulL_3;
cast ymm9_4@sint16 mulL_4;
cast ymm9_5@sint16 mulL_5;
cast ymm9_6@sint16 mulL_6;
cast ymm9_7@sint16 mulL_7;
cast ymm9_8@sint16 mulL_8;
cast ymm9_9@sint16 mulL_9;
cast ymm9_a@sint16 mulL_a;
cast ymm9_b@sint16 mulL_b;
cast ymm9_c@sint16 mulL_c;
cast ymm9_d@sint16 mulL_d;
cast ymm9_e@sint16 mulL_e;
cast ymm9_f@sint16 mulL_f;
(* vpmulhw %ymm15,%ymm4,%ymm4                      #! PC = 0x5555555596c2 *)
smull mulH_0 mulLymm4_0 ymm4_0 ymm15_0;
smull mulH_1 mulLymm4_1 ymm4_1 ymm15_1;
smull mulH_2 mulLymm4_2 ymm4_2 ymm15_2;
smull mulH_3 mulLymm4_3 ymm4_3 ymm15_3;
smull mulH_4 mulLymm4_4 ymm4_4 ymm15_4;
smull mulH_5 mulLymm4_5 ymm4_5 ymm15_5;
smull mulH_6 mulLymm4_6 ymm4_6 ymm15_6;
smull mulH_7 mulLymm4_7 ymm4_7 ymm15_7;
smull mulH_8 mulLymm4_8 ymm4_8 ymm15_8;
smull mulH_9 mulLymm4_9 ymm4_9 ymm15_9;
smull mulH_a mulLymm4_a ymm4_a ymm15_a;
smull mulH_b mulLymm4_b ymm4_b ymm15_b;
smull mulH_c mulLymm4_c ymm4_c ymm15_c;
smull mulH_d mulLymm4_d ymm4_d ymm15_d;
smull mulH_e mulLymm4_e ymm4_e ymm15_e;
smull mulH_f mulLymm4_f ymm4_f ymm15_f;
mov ymm4_0 mulH_0;
mov ymm4_1 mulH_1;
mov ymm4_2 mulH_2;
mov ymm4_3 mulH_3;
mov ymm4_4 mulH_4;
mov ymm4_5 mulH_5;
mov ymm4_6 mulH_6;
mov ymm4_7 mulH_7;
mov ymm4_8 mulH_8;
mov ymm4_9 mulH_9;
mov ymm4_a mulH_a;
mov ymm4_b mulH_b;
mov ymm4_c mulH_c;
mov ymm4_d mulH_d;
mov ymm4_e mulH_e;
mov ymm4_f mulH_f;
(* vpmulhw %ymm0,%ymm9,%ymm9                       #! PC = 0x5555555596c7 *)
smull mulH_0 red_0 ymm9_0 ymm0_0;
assert true && red_0 = mulLymm4_0;
assume red_0 = mulLymm4_0 && true;
smull mulH_1 red_1 ymm9_1 ymm0_1;
assert true && red_1 = mulLymm4_1;
assume red_1 = mulLymm4_1 && true;
smull mulH_2 red_2 ymm9_2 ymm0_2;
assert true && red_2 = mulLymm4_2;
assume red_2 = mulLymm4_2 && true;
smull mulH_3 red_3 ymm9_3 ymm0_3;
assert true && red_3 = mulLymm4_3;
assume red_3 = mulLymm4_3 && true;
smull mulH_4 red_4 ymm9_4 ymm0_4;
assert true && red_4 = mulLymm4_4;
assume red_4 = mulLymm4_4 && true;
smull mulH_5 red_5 ymm9_5 ymm0_5;
assert true && red_5 = mulLymm4_5;
assume red_5 = mulLymm4_5 && true;
smull mulH_6 red_6 ymm9_6 ymm0_6;
assert true && red_6 = mulLymm4_6;
assume red_6 = mulLymm4_6 && true;
smull mulH_7 red_7 ymm9_7 ymm0_7;
assert true && red_7 = mulLymm4_7;
assume red_7 = mulLymm4_7 && true;
smull mulH_8 red_8 ymm9_8 ymm0_8;
assert true && red_8 = mulLymm4_8;
assume red_8 = mulLymm4_8 && true;
smull mulH_9 red_9 ymm9_9 ymm0_9;
assert true && red_9 = mulLymm4_9;
assume red_9 = mulLymm4_9 && true;
smull mulH_a red_a ymm9_a ymm0_a;
assert true && red_a = mulLymm4_a;
assume red_a = mulLymm4_a && true;
smull mulH_b red_b ymm9_b ymm0_b;
assert true && red_b = mulLymm4_b;
assume red_b = mulLymm4_b && true;
smull mulH_c red_c ymm9_c ymm0_c;
assert true && red_c = mulLymm4_c;
assume red_c = mulLymm4_c && true;
smull mulH_d red_d ymm9_d ymm0_d;
assert true && red_d = mulLymm4_d;
assume red_d = mulLymm4_d && true;
smull mulH_e red_e ymm9_e ymm0_e;
assert true && red_e = mulLymm4_e;
assume red_e = mulLymm4_e && true;
smull mulH_f red_f ymm9_f ymm0_f;
assert true && red_f = mulLymm4_f;
assume red_f = mulLymm4_f && true;
mov ymm9_0 mulH_0;
mov ymm9_1 mulH_1;
mov ymm9_2 mulH_2;
mov ymm9_3 mulH_3;
mov ymm9_4 mulH_4;
mov ymm9_5 mulH_5;
mov ymm9_6 mulH_6;
mov ymm9_7 mulH_7;
mov ymm9_8 mulH_8;
mov ymm9_9 mulH_9;
mov ymm9_a mulH_a;
mov ymm9_b mulH_b;
mov ymm9_c mulH_c;
mov ymm9_d mulH_d;
mov ymm9_e mulH_e;
mov ymm9_f mulH_f;
(* vpsubw %ymm9,%ymm4,%ymm4                        #! PC = 0x5555555596cb *)
sub ymm4_0 ymm4_0 ymm9_0;
sub ymm4_1 ymm4_1 ymm9_1;
sub ymm4_2 ymm4_2 ymm9_2;
sub ymm4_3 ymm4_3 ymm9_3;
sub ymm4_4 ymm4_4 ymm9_4;
sub ymm4_5 ymm4_5 ymm9_5;
sub ymm4_6 ymm4_6 ymm9_6;
sub ymm4_7 ymm4_7 ymm9_7;
sub ymm4_8 ymm4_8 ymm9_8;
sub ymm4_9 ymm4_9 ymm9_9;
sub ymm4_a ymm4_a ymm9_a;
sub ymm4_b ymm4_b ymm9_b;
sub ymm4_c ymm4_c ymm9_c;
sub ymm4_d ymm4_d ymm9_d;
sub ymm4_e ymm4_e ymm9_e;
sub ymm4_f ymm4_f ymm9_f;
(* vpmullw %ymm14,%ymm10,%ymm9                     #! PC = 0x5555555596d0 *)
smull mulHymm10_0 mulL_0 ymm14_0 ymm10_0;
smull mulHymm10_1 mulL_1 ymm14_1 ymm10_1;
smull mulHymm10_2 mulL_2 ymm14_2 ymm10_2;
smull mulHymm10_3 mulL_3 ymm14_3 ymm10_3;
smull mulHymm10_4 mulL_4 ymm14_4 ymm10_4;
smull mulHymm10_5 mulL_5 ymm14_5 ymm10_5;
smull mulHymm10_6 mulL_6 ymm14_6 ymm10_6;
smull mulHymm10_7 mulL_7 ymm14_7 ymm10_7;
smull mulHymm10_8 mulL_8 ymm14_8 ymm10_8;
smull mulHymm10_9 mulL_9 ymm14_9 ymm10_9;
smull mulHymm10_a mulL_a ymm14_a ymm10_a;
smull mulHymm10_b mulL_b ymm14_b ymm10_b;
smull mulHymm10_c mulL_c ymm14_c ymm10_c;
smull mulHymm10_d mulL_d ymm14_d ymm10_d;
smull mulHymm10_e mulL_e ymm14_e ymm10_e;
smull mulHymm10_f mulL_f ymm14_f ymm10_f;
cast ymm9_0@sint16 mulL_0;
cast ymm9_1@sint16 mulL_1;
cast ymm9_2@sint16 mulL_2;
cast ymm9_3@sint16 mulL_3;
cast ymm9_4@sint16 mulL_4;
cast ymm9_5@sint16 mulL_5;
cast ymm9_6@sint16 mulL_6;
cast ymm9_7@sint16 mulL_7;
cast ymm9_8@sint16 mulL_8;
cast ymm9_9@sint16 mulL_9;
cast ymm9_a@sint16 mulL_a;
cast ymm9_b@sint16 mulL_b;
cast ymm9_c@sint16 mulL_c;
cast ymm9_d@sint16 mulL_d;
cast ymm9_e@sint16 mulL_e;
cast ymm9_f@sint16 mulL_f;
(* vpmulhw %ymm15,%ymm10,%ymm10                    #! PC = 0x5555555596d5 *)
smull mulH_0 mulLymm10_0 ymm10_0 ymm15_0;
smull mulH_1 mulLymm10_1 ymm10_1 ymm15_1;
smull mulH_2 mulLymm10_2 ymm10_2 ymm15_2;
smull mulH_3 mulLymm10_3 ymm10_3 ymm15_3;
smull mulH_4 mulLymm10_4 ymm10_4 ymm15_4;
smull mulH_5 mulLymm10_5 ymm10_5 ymm15_5;
smull mulH_6 mulLymm10_6 ymm10_6 ymm15_6;
smull mulH_7 mulLymm10_7 ymm10_7 ymm15_7;
smull mulH_8 mulLymm10_8 ymm10_8 ymm15_8;
smull mulH_9 mulLymm10_9 ymm10_9 ymm15_9;
smull mulH_a mulLymm10_a ymm10_a ymm15_a;
smull mulH_b mulLymm10_b ymm10_b ymm15_b;
smull mulH_c mulLymm10_c ymm10_c ymm15_c;
smull mulH_d mulLymm10_d ymm10_d ymm15_d;
smull mulH_e mulLymm10_e ymm10_e ymm15_e;
smull mulH_f mulLymm10_f ymm10_f ymm15_f;
mov ymm10_0 mulH_0;
mov ymm10_1 mulH_1;
mov ymm10_2 mulH_2;
mov ymm10_3 mulH_3;
mov ymm10_4 mulH_4;
mov ymm10_5 mulH_5;
mov ymm10_6 mulH_6;
mov ymm10_7 mulH_7;
mov ymm10_8 mulH_8;
mov ymm10_9 mulH_9;
mov ymm10_a mulH_a;
mov ymm10_b mulH_b;
mov ymm10_c mulH_c;
mov ymm10_d mulH_d;
mov ymm10_e mulH_e;
mov ymm10_f mulH_f;
(* vpmulhw %ymm0,%ymm9,%ymm9                       #! PC = 0x5555555596da *)
smull mulH_0 red_0 ymm9_0 ymm0_0;
assert true && red_0 = mulLymm10_0;
assume red_0 = mulLymm10_0 && true;
smull mulH_1 red_1 ymm9_1 ymm0_1;
assert true && red_1 = mulLymm10_1;
assume red_1 = mulLymm10_1 && true;
smull mulH_2 red_2 ymm9_2 ymm0_2;
assert true && red_2 = mulLymm10_2;
assume red_2 = mulLymm10_2 && true;
smull mulH_3 red_3 ymm9_3 ymm0_3;
assert true && red_3 = mulLymm10_3;
assume red_3 = mulLymm10_3 && true;
smull mulH_4 red_4 ymm9_4 ymm0_4;
assert true && red_4 = mulLymm10_4;
assume red_4 = mulLymm10_4 && true;
smull mulH_5 red_5 ymm9_5 ymm0_5;
assert true && red_5 = mulLymm10_5;
assume red_5 = mulLymm10_5 && true;
smull mulH_6 red_6 ymm9_6 ymm0_6;
assert true && red_6 = mulLymm10_6;
assume red_6 = mulLymm10_6 && true;
smull mulH_7 red_7 ymm9_7 ymm0_7;
assert true && red_7 = mulLymm10_7;
assume red_7 = mulLymm10_7 && true;
smull mulH_8 red_8 ymm9_8 ymm0_8;
assert true && red_8 = mulLymm10_8;
assume red_8 = mulLymm10_8 && true;
smull mulH_9 red_9 ymm9_9 ymm0_9;
assert true && red_9 = mulLymm10_9;
assume red_9 = mulLymm10_9 && true;
smull mulH_a red_a ymm9_a ymm0_a;
assert true && red_a = mulLymm10_a;
assume red_a = mulLymm10_a && true;
smull mulH_b red_b ymm9_b ymm0_b;
assert true && red_b = mulLymm10_b;
assume red_b = mulLymm10_b && true;
smull mulH_c red_c ymm9_c ymm0_c;
assert true && red_c = mulLymm10_c;
assume red_c = mulLymm10_c && true;
smull mulH_d red_d ymm9_d ymm0_d;
assert true && red_d = mulLymm10_d;
assume red_d = mulLymm10_d && true;
smull mulH_e red_e ymm9_e ymm0_e;
assert true && red_e = mulLymm10_e;
assume red_e = mulLymm10_e && true;
smull mulH_f red_f ymm9_f ymm0_f;
assert true && red_f = mulLymm10_f;
assume red_f = mulLymm10_f && true;
mov ymm9_0 mulH_0;
mov ymm9_1 mulH_1;
mov ymm9_2 mulH_2;
mov ymm9_3 mulH_3;
mov ymm9_4 mulH_4;
mov ymm9_5 mulH_5;
mov ymm9_6 mulH_6;
mov ymm9_7 mulH_7;
mov ymm9_8 mulH_8;
mov ymm9_9 mulH_9;
mov ymm9_a mulH_a;
mov ymm9_b mulH_b;
mov ymm9_c mulH_c;
mov ymm9_d mulH_d;
mov ymm9_e mulH_e;
mov ymm9_f mulH_f;
(* vpsubw %ymm9,%ymm10,%ymm10                      #! PC = 0x5555555596de *)
sub ymm10_0 ymm10_0 ymm9_0;
sub ymm10_1 ymm10_1 ymm9_1;
sub ymm10_2 ymm10_2 ymm9_2;
sub ymm10_3 ymm10_3 ymm9_3;
sub ymm10_4 ymm10_4 ymm9_4;
sub ymm10_5 ymm10_5 ymm9_5;
sub ymm10_6 ymm10_6 ymm9_6;
sub ymm10_7 ymm10_7 ymm9_7;
sub ymm10_8 ymm10_8 ymm9_8;
sub ymm10_9 ymm10_9 ymm9_9;
sub ymm10_a ymm10_a ymm9_a;
sub ymm10_b ymm10_b ymm9_b;
sub ymm10_c ymm10_c ymm9_c;
sub ymm10_d ymm10_d ymm9_d;
sub ymm10_e ymm10_e ymm9_e;
sub ymm10_f ymm10_f ymm9_f;
(* vpaddw %ymm3,%ymm7,%ymm9                        #! PC = 0x5555555596e3 *)
add ymm9_0 ymm7_0 ymm3_0;
add ymm9_1 ymm7_1 ymm3_1;
add ymm9_2 ymm7_2 ymm3_2;
add ymm9_3 ymm7_3 ymm3_3;
add ymm9_4 ymm7_4 ymm3_4;
add ymm9_5 ymm7_5 ymm3_5;
add ymm9_6 ymm7_6 ymm3_6;
add ymm9_7 ymm7_7 ymm3_7;
add ymm9_8 ymm7_8 ymm3_8;
add ymm9_9 ymm7_9 ymm3_9;
add ymm9_a ymm7_a ymm3_a;
add ymm9_b ymm7_b ymm3_b;
add ymm9_c ymm7_c ymm3_c;
add ymm9_d ymm7_d ymm3_d;
add ymm9_e ymm7_e ymm3_e;
add ymm9_f ymm7_f ymm3_f;
(* vpsubw %ymm3,%ymm7,%ymm3                        #! PC = 0x5555555596e7 *)
sub ymm3_0 ymm7_0 ymm3_0;
sub ymm3_1 ymm7_1 ymm3_1;
sub ymm3_2 ymm7_2 ymm3_2;
sub ymm3_3 ymm7_3 ymm3_3;
sub ymm3_4 ymm7_4 ymm3_4;
sub ymm3_5 ymm7_5 ymm3_5;
sub ymm3_6 ymm7_6 ymm3_6;
sub ymm3_7 ymm7_7 ymm3_7;
sub ymm3_8 ymm7_8 ymm3_8;
sub ymm3_9 ymm7_9 ymm3_9;
sub ymm3_a ymm7_a ymm3_a;
sub ymm3_b ymm7_b ymm3_b;
sub ymm3_c ymm7_c ymm3_c;
sub ymm3_d ymm7_d ymm3_d;
sub ymm3_e ymm7_e ymm3_e;
sub ymm3_f ymm7_f ymm3_f;
(* vpaddw %ymm6,%ymm5,%ymm7                        #! PC = 0x5555555596eb *)
add ymm7_0 ymm5_0 ymm6_0;
add ymm7_1 ymm5_1 ymm6_1;
add ymm7_2 ymm5_2 ymm6_2;
add ymm7_3 ymm5_3 ymm6_3;
add ymm7_4 ymm5_4 ymm6_4;
add ymm7_5 ymm5_5 ymm6_5;
add ymm7_6 ymm5_6 ymm6_6;
add ymm7_7 ymm5_7 ymm6_7;
add ymm7_8 ymm5_8 ymm6_8;
add ymm7_9 ymm5_9 ymm6_9;
add ymm7_a ymm5_a ymm6_a;
add ymm7_b ymm5_b ymm6_b;
add ymm7_c ymm5_c ymm6_c;
add ymm7_d ymm5_d ymm6_d;
add ymm7_e ymm5_e ymm6_e;
add ymm7_f ymm5_f ymm6_f;
(* vpsubw %ymm6,%ymm5,%ymm6                        #! PC = 0x5555555596ef *)
sub ymm6_0 ymm5_0 ymm6_0;
sub ymm6_1 ymm5_1 ymm6_1;
sub ymm6_2 ymm5_2 ymm6_2;
sub ymm6_3 ymm5_3 ymm6_3;
sub ymm6_4 ymm5_4 ymm6_4;
sub ymm6_5 ymm5_5 ymm6_5;
sub ymm6_6 ymm5_6 ymm6_6;
sub ymm6_7 ymm5_7 ymm6_7;
sub ymm6_8 ymm5_8 ymm6_8;
sub ymm6_9 ymm5_9 ymm6_9;
sub ymm6_a ymm5_a ymm6_a;
sub ymm6_b ymm5_b ymm6_b;
sub ymm6_c ymm5_c ymm6_c;
sub ymm6_d ymm5_d ymm6_d;
sub ymm6_e ymm5_e ymm6_e;
sub ymm6_f ymm5_f ymm6_f;
(* vpaddw %ymm8,%ymm4,%ymm5                        #! PC = 0x5555555596f3 *)
add ymm5_0 ymm4_0 ymm8_0;
add ymm5_1 ymm4_1 ymm8_1;
add ymm5_2 ymm4_2 ymm8_2;
add ymm5_3 ymm4_3 ymm8_3;
add ymm5_4 ymm4_4 ymm8_4;
add ymm5_5 ymm4_5 ymm8_5;
add ymm5_6 ymm4_6 ymm8_6;
add ymm5_7 ymm4_7 ymm8_7;
add ymm5_8 ymm4_8 ymm8_8;
add ymm5_9 ymm4_9 ymm8_9;
add ymm5_a ymm4_a ymm8_a;
add ymm5_b ymm4_b ymm8_b;
add ymm5_c ymm4_c ymm8_c;
add ymm5_d ymm4_d ymm8_d;
add ymm5_e ymm4_e ymm8_e;
add ymm5_f ymm4_f ymm8_f;
(* vpsubw %ymm8,%ymm4,%ymm8                        #! PC = 0x5555555596f8 *)
sub ymm8_0 ymm4_0 ymm8_0;
sub ymm8_1 ymm4_1 ymm8_1;
sub ymm8_2 ymm4_2 ymm8_2;
sub ymm8_3 ymm4_3 ymm8_3;
sub ymm8_4 ymm4_4 ymm8_4;
sub ymm8_5 ymm4_5 ymm8_5;
sub ymm8_6 ymm4_6 ymm8_6;
sub ymm8_7 ymm4_7 ymm8_7;
sub ymm8_8 ymm4_8 ymm8_8;
sub ymm8_9 ymm4_9 ymm8_9;
sub ymm8_a ymm4_a ymm8_a;
sub ymm8_b ymm4_b ymm8_b;
sub ymm8_c ymm4_c ymm8_c;
sub ymm8_d ymm4_d ymm8_d;
sub ymm8_e ymm4_e ymm8_e;
sub ymm8_f ymm4_f ymm8_f;
(* vpaddw %ymm11,%ymm10,%ymm4                      #! PC = 0x5555555596fd *)
add ymm4_0 ymm10_0 ymm11_0;
add ymm4_1 ymm10_1 ymm11_1;
add ymm4_2 ymm10_2 ymm11_2;
add ymm4_3 ymm10_3 ymm11_3;
add ymm4_4 ymm10_4 ymm11_4;
add ymm4_5 ymm10_5 ymm11_5;
add ymm4_6 ymm10_6 ymm11_6;
add ymm4_7 ymm10_7 ymm11_7;
add ymm4_8 ymm10_8 ymm11_8;
add ymm4_9 ymm10_9 ymm11_9;
add ymm4_a ymm10_a ymm11_a;
add ymm4_b ymm10_b ymm11_b;
add ymm4_c ymm10_c ymm11_c;
add ymm4_d ymm10_d ymm11_d;
add ymm4_e ymm10_e ymm11_e;
add ymm4_f ymm10_f ymm11_f;
(* vpsubw %ymm11,%ymm10,%ymm11                     #! PC = 0x555555559702 *)
sub ymm11_0 ymm10_0 ymm11_0;
sub ymm11_1 ymm10_1 ymm11_1;
sub ymm11_2 ymm10_2 ymm11_2;
sub ymm11_3 ymm10_3 ymm11_3;
sub ymm11_4 ymm10_4 ymm11_4;
sub ymm11_5 ymm10_5 ymm11_5;
sub ymm11_6 ymm10_6 ymm11_6;
sub ymm11_7 ymm10_7 ymm11_7;
sub ymm11_8 ymm10_8 ymm11_8;
sub ymm11_9 ymm10_9 ymm11_9;
sub ymm11_a ymm10_a ymm11_a;
sub ymm11_b ymm10_b ymm11_b;
sub ymm11_c ymm10_c ymm11_c;
sub ymm11_d ymm10_d ymm11_d;
sub ymm11_e ymm10_e ymm11_e;
sub ymm11_f ymm10_f ymm11_f;


(**************** LEVELS 3-5, 6 *****************)


(**************** CUT 157, 20 *****************)

rcut 
  and [
(-11698)@16<=s ymm9_0,ymm9_0<=s 11698@16,(-11698)@16<=s ymm9_1,ymm9_1<=s 11698@16,
(-11698)@16<=s ymm9_2,ymm9_2<=s 11698@16,(-11698)@16<=s ymm9_3,ymm9_3<=s 11698@16,
(-11698)@16<=s ymm9_4,ymm9_4<=s 11698@16,(-11698)@16<=s ymm9_5,ymm9_5<=s 11698@16,
(-11698)@16<=s ymm9_6,ymm9_6<=s 11698@16,(-11698)@16<=s ymm9_7,ymm9_7<=s 11698@16,
(-11698)@16<=s ymm9_8,ymm9_8<=s 11698@16,(-11698)@16<=s ymm9_9,ymm9_9<=s 11698@16,
(-11698)@16<=s ymm9_a,ymm9_a<=s 11698@16,(-11698)@16<=s ymm9_b,ymm9_b<=s 11698@16,
(-11698)@16<=s ymm9_c,ymm9_c<=s 11698@16,(-11698)@16<=s ymm9_d,ymm9_d<=s 11698@16,
(-11698)@16<=s ymm9_e,ymm9_e<=s 11698@16,(-11698)@16<=s ymm9_f,ymm9_f<=s 11698@16,
(-11698)@16<=s ymm3_0,ymm3_0<=s 11698@16,(-11698)@16<=s ymm3_1,ymm3_1<=s 11698@16,
(-11698)@16<=s ymm3_2,ymm3_2<=s 11698@16,(-11698)@16<=s ymm3_3,ymm3_3<=s 11698@16,
(-11698)@16<=s ymm3_4,ymm3_4<=s 11698@16,(-11698)@16<=s ymm3_5,ymm3_5<=s 11698@16,
(-11698)@16<=s ymm3_6,ymm3_6<=s 11698@16,(-11698)@16<=s ymm3_7,ymm3_7<=s 11698@16,
(-11698)@16<=s ymm3_8,ymm3_8<=s 11698@16,(-11698)@16<=s ymm3_9,ymm3_9<=s 11698@16,
(-11698)@16<=s ymm3_a,ymm3_a<=s 11698@16,(-11698)@16<=s ymm3_b,ymm3_b<=s 11698@16,
(-11698)@16<=s ymm3_c,ymm3_c<=s 11698@16,(-11698)@16<=s ymm3_d,ymm3_d<=s 11698@16,
(-11698)@16<=s ymm3_e,ymm3_e<=s 11698@16,(-11698)@16<=s ymm3_f,ymm3_f<=s 11698@16,
(-11495)@16<=s ymm7_0,ymm7_0<=s 11495@16,(-11495)@16<=s ymm7_1,ymm7_1<=s 11495@16,
(-11495)@16<=s ymm7_2,ymm7_2<=s 11495@16,(-11495)@16<=s ymm7_3,ymm7_3<=s 11495@16,
(-11495)@16<=s ymm7_4,ymm7_4<=s 11495@16,(-11495)@16<=s ymm7_5,ymm7_5<=s 11495@16,
(-11495)@16<=s ymm7_6,ymm7_6<=s 11495@16,(-11495)@16<=s ymm7_7,ymm7_7<=s 11495@16,
(-11495)@16<=s ymm7_8,ymm7_8<=s 11495@16,(-11495)@16<=s ymm7_9,ymm7_9<=s 11495@16,
(-11495)@16<=s ymm7_a,ymm7_a<=s 11495@16,(-11495)@16<=s ymm7_b,ymm7_b<=s 11495@16,
(-11495)@16<=s ymm7_c,ymm7_c<=s 11495@16,(-11495)@16<=s ymm7_d,ymm7_d<=s 11495@16,
(-11495)@16<=s ymm7_e,ymm7_e<=s 11495@16,(-11495)@16<=s ymm7_f,ymm7_f<=s 11495@16,
(-11495)@16<=s ymm6_0,ymm6_0<=s 11495@16,(-11495)@16<=s ymm6_1,ymm6_1<=s 11495@16,
(-11495)@16<=s ymm6_2,ymm6_2<=s 11495@16,(-11495)@16<=s ymm6_3,ymm6_3<=s 11495@16,
(-11495)@16<=s ymm6_4,ymm6_4<=s 11495@16,(-11495)@16<=s ymm6_5,ymm6_5<=s 11495@16,
(-11495)@16<=s ymm6_6,ymm6_6<=s 11495@16,(-11495)@16<=s ymm6_7,ymm6_7<=s 11495@16,
(-11495)@16<=s ymm6_8,ymm6_8<=s 11495@16,(-11495)@16<=s ymm6_9,ymm6_9<=s 11495@16,
(-11495)@16<=s ymm6_a,ymm6_a<=s 11495@16,(-11495)@16<=s ymm6_b,ymm6_b<=s 11495@16,
(-11495)@16<=s ymm6_c,ymm6_c<=s 11495@16,(-11495)@16<=s ymm6_d,ymm6_d<=s 11495@16,
(-11495)@16<=s ymm6_e,ymm6_e<=s 11495@16,(-11495)@16<=s ymm6_f,ymm6_f<=s 11495@16,
(-12466)@16<=s ymm5_0,ymm5_0<=s 12466@16,(-12466)@16<=s ymm5_1,ymm5_1<=s 12466@16,
(-12466)@16<=s ymm5_2,ymm5_2<=s 12466@16,(-12466)@16<=s ymm5_3,ymm5_3<=s 12466@16,
(-12466)@16<=s ymm5_4,ymm5_4<=s 12466@16,(-12466)@16<=s ymm5_5,ymm5_5<=s 12466@16,
(-12466)@16<=s ymm5_6,ymm5_6<=s 12466@16,(-12466)@16<=s ymm5_7,ymm5_7<=s 12466@16,
(-12466)@16<=s ymm5_8,ymm5_8<=s 12466@16,(-12466)@16<=s ymm5_9,ymm5_9<=s 12466@16,
(-12466)@16<=s ymm5_a,ymm5_a<=s 12466@16,(-12466)@16<=s ymm5_b,ymm5_b<=s 12466@16,
(-12466)@16<=s ymm5_c,ymm5_c<=s 12466@16,(-12466)@16<=s ymm5_d,ymm5_d<=s 12466@16,
(-12466)@16<=s ymm5_e,ymm5_e<=s 12466@16,(-12466)@16<=s ymm5_f,ymm5_f<=s 12466@16,
(-12466)@16<=s ymm8_0,ymm8_0<=s 12466@16,(-12466)@16<=s ymm8_1,ymm8_1<=s 12466@16,
(-12466)@16<=s ymm8_2,ymm8_2<=s 12466@16,(-12466)@16<=s ymm8_3,ymm8_3<=s 12466@16,
(-12466)@16<=s ymm8_4,ymm8_4<=s 12466@16,(-12466)@16<=s ymm8_5,ymm8_5<=s 12466@16,
(-12466)@16<=s ymm8_6,ymm8_6<=s 12466@16,(-12466)@16<=s ymm8_7,ymm8_7<=s 12466@16,
(-12466)@16<=s ymm8_8,ymm8_8<=s 12466@16,(-12466)@16<=s ymm8_9,ymm8_9<=s 12466@16,
(-12466)@16<=s ymm8_a,ymm8_a<=s 12466@16,(-12466)@16<=s ymm8_b,ymm8_b<=s 12466@16,
(-12466)@16<=s ymm8_c,ymm8_c<=s 12466@16,(-12466)@16<=s ymm8_d,ymm8_d<=s 12466@16,
(-12466)@16<=s ymm8_e,ymm8_e<=s 12466@16,(-12466)@16<=s ymm8_f,ymm8_f<=s 12466@16,
(-11126)@16<=s ymm4_0,ymm4_0<=s 11126@16,(-11126)@16<=s ymm4_1,ymm4_1<=s 11126@16,
(-11126)@16<=s ymm4_2,ymm4_2<=s 11126@16,(-11126)@16<=s ymm4_3,ymm4_3<=s 11126@16,
(-11126)@16<=s ymm4_4,ymm4_4<=s 11126@16,(-11126)@16<=s ymm4_5,ymm4_5<=s 11126@16,
(-11126)@16<=s ymm4_6,ymm4_6<=s 11126@16,(-11126)@16<=s ymm4_7,ymm4_7<=s 11126@16,
(-11126)@16<=s ymm4_8,ymm4_8<=s 11126@16,(-11126)@16<=s ymm4_9,ymm4_9<=s 11126@16,
(-11126)@16<=s ymm4_a,ymm4_a<=s 11126@16,(-11126)@16<=s ymm4_b,ymm4_b<=s 11126@16,
(-11126)@16<=s ymm4_c,ymm4_c<=s 11126@16,(-11126)@16<=s ymm4_d,ymm4_d<=s 11126@16,
(-11126)@16<=s ymm4_e,ymm4_e<=s 11126@16,(-11126)@16<=s ymm4_f,ymm4_f<=s 11126@16,
(-11126)@16<=s ymm11_0,ymm11_0<=s 11126@16,(-11126)@16<=s ymm11_1,ymm11_1<=s 11126@16,
(-11126)@16<=s ymm11_2,ymm11_2<=s 11126@16,(-11126)@16<=s ymm11_3,ymm11_3<=s 11126@16,
(-11126)@16<=s ymm11_4,ymm11_4<=s 11126@16,(-11126)@16<=s ymm11_5,ymm11_5<=s 11126@16,
(-11126)@16<=s ymm11_6,ymm11_6<=s 11126@16,(-11126)@16<=s ymm11_7,ymm11_7<=s 11126@16,
(-11126)@16<=s ymm11_8,ymm11_8<=s 11126@16,(-11126)@16<=s ymm11_9,ymm11_9<=s 11126@16,
(-11126)@16<=s ymm11_a,ymm11_a<=s 11126@16,(-11126)@16<=s ymm11_b,ymm11_b<=s 11126@16,
(-11126)@16<=s ymm11_c,ymm11_c<=s 11126@16,(-11126)@16<=s ymm11_d,ymm11_d<=s 11126@16,
(-11126)@16<=s ymm11_e,ymm11_e<=s 11126@16,(-11126)@16<=s ymm11_f,ymm11_f<=s 11126@16
] prove with [ all ghosts, cuts [ 0 ] ];



(* vmovdqa 0x79d1(%rip),%ymm1        # 0x5555555610e0 <nttmul_idxdata+64>#! EA = L0x5555555610e0; Value = 0x0d0c090805040100; PC = 0x555555559707 *)
mov ymm1_0 L0x5555555610e0;
mov ymm1_1 L0x5555555610e2;
mov ymm1_2 L0x5555555610e4;
mov ymm1_3 L0x5555555610e6;
mov ymm1_4 L0x5555555610e8;
mov ymm1_5 L0x5555555610ea;
mov ymm1_6 L0x5555555610ec;
mov ymm1_7 L0x5555555610ee;
mov ymm1_8 L0x5555555610f0;
mov ymm1_9 L0x5555555610f2;
mov ymm1_a L0x5555555610f4;
mov ymm1_b L0x5555555610f6;
mov ymm1_c L0x5555555610f8;
mov ymm1_d L0x5555555610fa;
mov ymm1_e L0x5555555610fc;
mov ymm1_f L0x5555555610fe;
(* vpshufb %ymm1,%ymm9,%ymm9                       #! PC = 0x55555555970f *)
assert true && ymm1_0 = 0x0100@16;
mov shuf_0 ymm9_0;
assert true && ymm1_1 = 0x0504@16;
mov shuf_1 ymm9_2;
assert true && ymm1_2 = 0x0908@16;
mov shuf_2 ymm9_4;
assert true && ymm1_3 = 0x0d0c@16;
mov shuf_3 ymm9_6;
assert true && ymm1_4 = 0x0302@16;
mov shuf_4 ymm9_1;
assert true && ymm1_5 = 0x0706@16;
mov shuf_5 ymm9_3;
assert true && ymm1_6 = 0x0b0a@16;
mov shuf_6 ymm9_5;
assert true && ymm1_7 = 0x0f0e@16;
mov shuf_7 ymm9_7;
assert true && ymm1_8 = 0x0100@16;
mov shuf_8 ymm9_8;
assert true && ymm1_9 = 0x0504@16;
mov shuf_9 ymm9_a;
assert true && ymm1_a = 0x0908@16;
mov shuf_a ymm9_c;
assert true && ymm1_b = 0x0d0c@16;
mov shuf_b ymm9_e;
assert true && ymm1_c = 0x0302@16;
mov shuf_c ymm9_9;
assert true && ymm1_d = 0x0706@16;
mov shuf_d ymm9_b;
assert true && ymm1_e = 0x0b0a@16;
mov shuf_e ymm9_d;
assert true && ymm1_f = 0x0f0e@16;
mov shuf_f ymm9_f;
mov ymm9_0 shuf_0;
mov ymm9_1 shuf_1;
mov ymm9_2 shuf_2;
mov ymm9_3 shuf_3;
mov ymm9_4 shuf_4;
mov ymm9_5 shuf_5;
mov ymm9_6 shuf_6;
mov ymm9_7 shuf_7;
mov ymm9_8 shuf_8;
mov ymm9_9 shuf_9;
mov ymm9_a shuf_a;
mov ymm9_b shuf_b;
mov ymm9_c shuf_c;
mov ymm9_d shuf_d;
mov ymm9_e shuf_e;
mov ymm9_f shuf_f;
(* vpermq $0xd8,%ymm9,%ymm9                        #! PC = 0x555555559714 *)
mov permq_0 ymm9_0;
mov permq_1 ymm9_1;
mov permq_2 ymm9_2;
mov permq_3 ymm9_3;
mov permq_4 ymm9_8;
mov permq_5 ymm9_9;
mov permq_6 ymm9_a;
mov permq_7 ymm9_b;
mov permq_8 ymm9_4;
mov permq_9 ymm9_5;
mov permq_a ymm9_6;
mov permq_b ymm9_7;
mov permq_c ymm9_c;
mov permq_d ymm9_d;
mov permq_e ymm9_e;
mov permq_f ymm9_f;
mov ymm9_0 permq_0;
mov ymm9_1 permq_1;
mov ymm9_2 permq_2;
mov ymm9_3 permq_3;
mov ymm9_4 permq_4;
mov ymm9_5 permq_5;
mov ymm9_6 permq_6;
mov ymm9_7 permq_7;
mov ymm9_8 permq_8;
mov ymm9_9 permq_9;
mov ymm9_a permq_a;
mov ymm9_b permq_b;
mov ymm9_c permq_c;
mov ymm9_d permq_d;
mov ymm9_e permq_e;
mov ymm9_f permq_f;
(* vpshufb %ymm1,%ymm3,%ymm3                       #! PC = 0x55555555971a *)
assert true && ymm1_0 = 0x0100@16;
mov shuf_0 ymm3_0;
assert true && ymm1_1 = 0x0504@16;
mov shuf_1 ymm3_2;
assert true && ymm1_2 = 0x0908@16;
mov shuf_2 ymm3_4;
assert true && ymm1_3 = 0x0d0c@16;
mov shuf_3 ymm3_6;
assert true && ymm1_4 = 0x0302@16;
mov shuf_4 ymm3_1;
assert true && ymm1_5 = 0x0706@16;
mov shuf_5 ymm3_3;
assert true && ymm1_6 = 0x0b0a@16;
mov shuf_6 ymm3_5;
assert true && ymm1_7 = 0x0f0e@16;
mov shuf_7 ymm3_7;
assert true && ymm1_8 = 0x0100@16;
mov shuf_8 ymm3_8;
assert true && ymm1_9 = 0x0504@16;
mov shuf_9 ymm3_a;
assert true && ymm1_a = 0x0908@16;
mov shuf_a ymm3_c;
assert true && ymm1_b = 0x0d0c@16;
mov shuf_b ymm3_e;
assert true && ymm1_c = 0x0302@16;
mov shuf_c ymm3_9;
assert true && ymm1_d = 0x0706@16;
mov shuf_d ymm3_b;
assert true && ymm1_e = 0x0b0a@16;
mov shuf_e ymm3_d;
assert true && ymm1_f = 0x0f0e@16;
mov shuf_f ymm3_f;
mov ymm3_0 shuf_0;
mov ymm3_1 shuf_1;
mov ymm3_2 shuf_2;
mov ymm3_3 shuf_3;
mov ymm3_4 shuf_4;
mov ymm3_5 shuf_5;
mov ymm3_6 shuf_6;
mov ymm3_7 shuf_7;
mov ymm3_8 shuf_8;
mov ymm3_9 shuf_9;
mov ymm3_a shuf_a;
mov ymm3_b shuf_b;
mov ymm3_c shuf_c;
mov ymm3_d shuf_d;
mov ymm3_e shuf_e;
mov ymm3_f shuf_f;
(* vpermq $0xd8,%ymm3,%ymm3                        #! PC = 0x55555555971f *)
mov permq_0 ymm3_0;
mov permq_1 ymm3_1;
mov permq_2 ymm3_2;
mov permq_3 ymm3_3;
mov permq_4 ymm3_8;
mov permq_5 ymm3_9;
mov permq_6 ymm3_a;
mov permq_7 ymm3_b;
mov permq_8 ymm3_4;
mov permq_9 ymm3_5;
mov permq_a ymm3_6;
mov permq_b ymm3_7;
mov permq_c ymm3_c;
mov permq_d ymm3_d;
mov permq_e ymm3_e;
mov permq_f ymm3_f;
mov ymm3_0 permq_0;
mov ymm3_1 permq_1;
mov ymm3_2 permq_2;
mov ymm3_3 permq_3;
mov ymm3_4 permq_4;
mov ymm3_5 permq_5;
mov ymm3_6 permq_6;
mov ymm3_7 permq_7;
mov ymm3_8 permq_8;
mov ymm3_9 permq_9;
mov ymm3_a permq_a;
mov ymm3_b permq_b;
mov ymm3_c permq_c;
mov ymm3_d permq_d;
mov ymm3_e permq_e;
mov ymm3_f permq_f;
(* vpshufb %ymm1,%ymm7,%ymm7                       #! PC = 0x555555559725 *)
assert true && ymm1_0 = 0x0100@16;
mov shuf_0 ymm7_0;
assert true && ymm1_1 = 0x0504@16;
mov shuf_1 ymm7_2;
assert true && ymm1_2 = 0x0908@16;
mov shuf_2 ymm7_4;
assert true && ymm1_3 = 0x0d0c@16;
mov shuf_3 ymm7_6;
assert true && ymm1_4 = 0x0302@16;
mov shuf_4 ymm7_1;
assert true && ymm1_5 = 0x0706@16;
mov shuf_5 ymm7_3;
assert true && ymm1_6 = 0x0b0a@16;
mov shuf_6 ymm7_5;
assert true && ymm1_7 = 0x0f0e@16;
mov shuf_7 ymm7_7;
assert true && ymm1_8 = 0x0100@16;
mov shuf_8 ymm7_8;
assert true && ymm1_9 = 0x0504@16;
mov shuf_9 ymm7_a;
assert true && ymm1_a = 0x0908@16;
mov shuf_a ymm7_c;
assert true && ymm1_b = 0x0d0c@16;
mov shuf_b ymm7_e;
assert true && ymm1_c = 0x0302@16;
mov shuf_c ymm7_9;
assert true && ymm1_d = 0x0706@16;
mov shuf_d ymm7_b;
assert true && ymm1_e = 0x0b0a@16;
mov shuf_e ymm7_d;
assert true && ymm1_f = 0x0f0e@16;
mov shuf_f ymm7_f;
mov ymm7_0 shuf_0;
mov ymm7_1 shuf_1;
mov ymm7_2 shuf_2;
mov ymm7_3 shuf_3;
mov ymm7_4 shuf_4;
mov ymm7_5 shuf_5;
mov ymm7_6 shuf_6;
mov ymm7_7 shuf_7;
mov ymm7_8 shuf_8;
mov ymm7_9 shuf_9;
mov ymm7_a shuf_a;
mov ymm7_b shuf_b;
mov ymm7_c shuf_c;
mov ymm7_d shuf_d;
mov ymm7_e shuf_e;
mov ymm7_f shuf_f;
(* vpermq $0xd8,%ymm7,%ymm7                        #! PC = 0x55555555972a *)
mov permq_0 ymm7_0;
mov permq_1 ymm7_1;
mov permq_2 ymm7_2;
mov permq_3 ymm7_3;
mov permq_4 ymm7_8;
mov permq_5 ymm7_9;
mov permq_6 ymm7_a;
mov permq_7 ymm7_b;
mov permq_8 ymm7_4;
mov permq_9 ymm7_5;
mov permq_a ymm7_6;
mov permq_b ymm7_7;
mov permq_c ymm7_c;
mov permq_d ymm7_d;
mov permq_e ymm7_e;
mov permq_f ymm7_f;
mov ymm7_0 permq_0;
mov ymm7_1 permq_1;
mov ymm7_2 permq_2;
mov ymm7_3 permq_3;
mov ymm7_4 permq_4;
mov ymm7_5 permq_5;
mov ymm7_6 permq_6;
mov ymm7_7 permq_7;
mov ymm7_8 permq_8;
mov ymm7_9 permq_9;
mov ymm7_a permq_a;
mov ymm7_b permq_b;
mov ymm7_c permq_c;
mov ymm7_d permq_d;
mov ymm7_e permq_e;
mov ymm7_f permq_f;
(* vpshufb %ymm1,%ymm6,%ymm6                       #! PC = 0x555555559730 *)
assert true && ymm1_0 = 0x0100@16;
mov shuf_0 ymm6_0;
assert true && ymm1_1 = 0x0504@16;
mov shuf_1 ymm6_2;
assert true && ymm1_2 = 0x0908@16;
mov shuf_2 ymm6_4;
assert true && ymm1_3 = 0x0d0c@16;
mov shuf_3 ymm6_6;
assert true && ymm1_4 = 0x0302@16;
mov shuf_4 ymm6_1;
assert true && ymm1_5 = 0x0706@16;
mov shuf_5 ymm6_3;
assert true && ymm1_6 = 0x0b0a@16;
mov shuf_6 ymm6_5;
assert true && ymm1_7 = 0x0f0e@16;
mov shuf_7 ymm6_7;
assert true && ymm1_8 = 0x0100@16;
mov shuf_8 ymm6_8;
assert true && ymm1_9 = 0x0504@16;
mov shuf_9 ymm6_a;
assert true && ymm1_a = 0x0908@16;
mov shuf_a ymm6_c;
assert true && ymm1_b = 0x0d0c@16;
mov shuf_b ymm6_e;
assert true && ymm1_c = 0x0302@16;
mov shuf_c ymm6_9;
assert true && ymm1_d = 0x0706@16;
mov shuf_d ymm6_b;
assert true && ymm1_e = 0x0b0a@16;
mov shuf_e ymm6_d;
assert true && ymm1_f = 0x0f0e@16;
mov shuf_f ymm6_f;
mov ymm6_0 shuf_0;
mov ymm6_1 shuf_1;
mov ymm6_2 shuf_2;
mov ymm6_3 shuf_3;
mov ymm6_4 shuf_4;
mov ymm6_5 shuf_5;
mov ymm6_6 shuf_6;
mov ymm6_7 shuf_7;
mov ymm6_8 shuf_8;
mov ymm6_9 shuf_9;
mov ymm6_a shuf_a;
mov ymm6_b shuf_b;
mov ymm6_c shuf_c;
mov ymm6_d shuf_d;
mov ymm6_e shuf_e;
mov ymm6_f shuf_f;
(* vpermq $0xd8,%ymm6,%ymm6                        #! PC = 0x555555559735 *)
mov permq_0 ymm6_0;
mov permq_1 ymm6_1;
mov permq_2 ymm6_2;
mov permq_3 ymm6_3;
mov permq_4 ymm6_8;
mov permq_5 ymm6_9;
mov permq_6 ymm6_a;
mov permq_7 ymm6_b;
mov permq_8 ymm6_4;
mov permq_9 ymm6_5;
mov permq_a ymm6_6;
mov permq_b ymm6_7;
mov permq_c ymm6_c;
mov permq_d ymm6_d;
mov permq_e ymm6_e;
mov permq_f ymm6_f;
mov ymm6_0 permq_0;
mov ymm6_1 permq_1;
mov ymm6_2 permq_2;
mov ymm6_3 permq_3;
mov ymm6_4 permq_4;
mov ymm6_5 permq_5;
mov ymm6_6 permq_6;
mov ymm6_7 permq_7;
mov ymm6_8 permq_8;
mov ymm6_9 permq_9;
mov ymm6_a permq_a;
mov ymm6_b permq_b;
mov ymm6_c permq_c;
mov ymm6_d permq_d;
mov ymm6_e permq_e;
mov ymm6_f permq_f;
(* vpshufb %ymm1,%ymm5,%ymm5                       #! PC = 0x55555555973b *)
assert true && ymm1_0 = 0x0100@16;
mov shuf_0 ymm5_0;
assert true && ymm1_1 = 0x0504@16;
mov shuf_1 ymm5_2;
assert true && ymm1_2 = 0x0908@16;
mov shuf_2 ymm5_4;
assert true && ymm1_3 = 0x0d0c@16;
mov shuf_3 ymm5_6;
assert true && ymm1_4 = 0x0302@16;
mov shuf_4 ymm5_1;
assert true && ymm1_5 = 0x0706@16;
mov shuf_5 ymm5_3;
assert true && ymm1_6 = 0x0b0a@16;
mov shuf_6 ymm5_5;
assert true && ymm1_7 = 0x0f0e@16;
mov shuf_7 ymm5_7;
assert true && ymm1_8 = 0x0100@16;
mov shuf_8 ymm5_8;
assert true && ymm1_9 = 0x0504@16;
mov shuf_9 ymm5_a;
assert true && ymm1_a = 0x0908@16;
mov shuf_a ymm5_c;
assert true && ymm1_b = 0x0d0c@16;
mov shuf_b ymm5_e;
assert true && ymm1_c = 0x0302@16;
mov shuf_c ymm5_9;
assert true && ymm1_d = 0x0706@16;
mov shuf_d ymm5_b;
assert true && ymm1_e = 0x0b0a@16;
mov shuf_e ymm5_d;
assert true && ymm1_f = 0x0f0e@16;
mov shuf_f ymm5_f;
mov ymm5_0 shuf_0;
mov ymm5_1 shuf_1;
mov ymm5_2 shuf_2;
mov ymm5_3 shuf_3;
mov ymm5_4 shuf_4;
mov ymm5_5 shuf_5;
mov ymm5_6 shuf_6;
mov ymm5_7 shuf_7;
mov ymm5_8 shuf_8;
mov ymm5_9 shuf_9;
mov ymm5_a shuf_a;
mov ymm5_b shuf_b;
mov ymm5_c shuf_c;
mov ymm5_d shuf_d;
mov ymm5_e shuf_e;
mov ymm5_f shuf_f;
(* vpermq $0xd8,%ymm5,%ymm5                        #! PC = 0x555555559740 *)
mov permq_0 ymm5_0;
mov permq_1 ymm5_1;
mov permq_2 ymm5_2;
mov permq_3 ymm5_3;
mov permq_4 ymm5_8;
mov permq_5 ymm5_9;
mov permq_6 ymm5_a;
mov permq_7 ymm5_b;
mov permq_8 ymm5_4;
mov permq_9 ymm5_5;
mov permq_a ymm5_6;
mov permq_b ymm5_7;
mov permq_c ymm5_c;
mov permq_d ymm5_d;
mov permq_e ymm5_e;
mov permq_f ymm5_f;
mov ymm5_0 permq_0;
mov ymm5_1 permq_1;
mov ymm5_2 permq_2;
mov ymm5_3 permq_3;
mov ymm5_4 permq_4;
mov ymm5_5 permq_5;
mov ymm5_6 permq_6;
mov ymm5_7 permq_7;
mov ymm5_8 permq_8;
mov ymm5_9 permq_9;
mov ymm5_a permq_a;
mov ymm5_b permq_b;
mov ymm5_c permq_c;
mov ymm5_d permq_d;
mov ymm5_e permq_e;
mov ymm5_f permq_f;
(* vpshufb %ymm1,%ymm8,%ymm8                       #! PC = 0x555555559746 *)
assert true && ymm1_0 = 0x0100@16;
mov shuf_0 ymm8_0;
assert true && ymm1_1 = 0x0504@16;
mov shuf_1 ymm8_2;
assert true && ymm1_2 = 0x0908@16;
mov shuf_2 ymm8_4;
assert true && ymm1_3 = 0x0d0c@16;
mov shuf_3 ymm8_6;
assert true && ymm1_4 = 0x0302@16;
mov shuf_4 ymm8_1;
assert true && ymm1_5 = 0x0706@16;
mov shuf_5 ymm8_3;
assert true && ymm1_6 = 0x0b0a@16;
mov shuf_6 ymm8_5;
assert true && ymm1_7 = 0x0f0e@16;
mov shuf_7 ymm8_7;
assert true && ymm1_8 = 0x0100@16;
mov shuf_8 ymm8_8;
assert true && ymm1_9 = 0x0504@16;
mov shuf_9 ymm8_a;
assert true && ymm1_a = 0x0908@16;
mov shuf_a ymm8_c;
assert true && ymm1_b = 0x0d0c@16;
mov shuf_b ymm8_e;
assert true && ymm1_c = 0x0302@16;
mov shuf_c ymm8_9;
assert true && ymm1_d = 0x0706@16;
mov shuf_d ymm8_b;
assert true && ymm1_e = 0x0b0a@16;
mov shuf_e ymm8_d;
assert true && ymm1_f = 0x0f0e@16;
mov shuf_f ymm8_f;
mov ymm8_0 shuf_0;
mov ymm8_1 shuf_1;
mov ymm8_2 shuf_2;
mov ymm8_3 shuf_3;
mov ymm8_4 shuf_4;
mov ymm8_5 shuf_5;
mov ymm8_6 shuf_6;
mov ymm8_7 shuf_7;
mov ymm8_8 shuf_8;
mov ymm8_9 shuf_9;
mov ymm8_a shuf_a;
mov ymm8_b shuf_b;
mov ymm8_c shuf_c;
mov ymm8_d shuf_d;
mov ymm8_e shuf_e;
mov ymm8_f shuf_f;
(* vpermq $0xd8,%ymm8,%ymm8                        #! PC = 0x55555555974b *)
mov permq_0 ymm8_0;
mov permq_1 ymm8_1;
mov permq_2 ymm8_2;
mov permq_3 ymm8_3;
mov permq_4 ymm8_8;
mov permq_5 ymm8_9;
mov permq_6 ymm8_a;
mov permq_7 ymm8_b;
mov permq_8 ymm8_4;
mov permq_9 ymm8_5;
mov permq_a ymm8_6;
mov permq_b ymm8_7;
mov permq_c ymm8_c;
mov permq_d ymm8_d;
mov permq_e ymm8_e;
mov permq_f ymm8_f;
mov ymm8_0 permq_0;
mov ymm8_1 permq_1;
mov ymm8_2 permq_2;
mov ymm8_3 permq_3;
mov ymm8_4 permq_4;
mov ymm8_5 permq_5;
mov ymm8_6 permq_6;
mov ymm8_7 permq_7;
mov ymm8_8 permq_8;
mov ymm8_9 permq_9;
mov ymm8_a permq_a;
mov ymm8_b permq_b;
mov ymm8_c permq_c;
mov ymm8_d permq_d;
mov ymm8_e permq_e;
mov ymm8_f permq_f;
(* vpshufb %ymm1,%ymm4,%ymm4                       #! PC = 0x555555559751 *)
assert true && ymm1_0 = 0x0100@16;
mov shuf_0 ymm4_0;
assert true && ymm1_1 = 0x0504@16;
mov shuf_1 ymm4_2;
assert true && ymm1_2 = 0x0908@16;
mov shuf_2 ymm4_4;
assert true && ymm1_3 = 0x0d0c@16;
mov shuf_3 ymm4_6;
assert true && ymm1_4 = 0x0302@16;
mov shuf_4 ymm4_1;
assert true && ymm1_5 = 0x0706@16;
mov shuf_5 ymm4_3;
assert true && ymm1_6 = 0x0b0a@16;
mov shuf_6 ymm4_5;
assert true && ymm1_7 = 0x0f0e@16;
mov shuf_7 ymm4_7;
assert true && ymm1_8 = 0x0100@16;
mov shuf_8 ymm4_8;
assert true && ymm1_9 = 0x0504@16;
mov shuf_9 ymm4_a;
assert true && ymm1_a = 0x0908@16;
mov shuf_a ymm4_c;
assert true && ymm1_b = 0x0d0c@16;
mov shuf_b ymm4_e;
assert true && ymm1_c = 0x0302@16;
mov shuf_c ymm4_9;
assert true && ymm1_d = 0x0706@16;
mov shuf_d ymm4_b;
assert true && ymm1_e = 0x0b0a@16;
mov shuf_e ymm4_d;
assert true && ymm1_f = 0x0f0e@16;
mov shuf_f ymm4_f;
mov ymm4_0 shuf_0;
mov ymm4_1 shuf_1;
mov ymm4_2 shuf_2;
mov ymm4_3 shuf_3;
mov ymm4_4 shuf_4;
mov ymm4_5 shuf_5;
mov ymm4_6 shuf_6;
mov ymm4_7 shuf_7;
mov ymm4_8 shuf_8;
mov ymm4_9 shuf_9;
mov ymm4_a shuf_a;
mov ymm4_b shuf_b;
mov ymm4_c shuf_c;
mov ymm4_d shuf_d;
mov ymm4_e shuf_e;
mov ymm4_f shuf_f;
(* vpermq $0xd8,%ymm4,%ymm4                        #! PC = 0x555555559756 *)
mov permq_0 ymm4_0;
mov permq_1 ymm4_1;
mov permq_2 ymm4_2;
mov permq_3 ymm4_3;
mov permq_4 ymm4_8;
mov permq_5 ymm4_9;
mov permq_6 ymm4_a;
mov permq_7 ymm4_b;
mov permq_8 ymm4_4;
mov permq_9 ymm4_5;
mov permq_a ymm4_6;
mov permq_b ymm4_7;
mov permq_c ymm4_c;
mov permq_d ymm4_d;
mov permq_e ymm4_e;
mov permq_f ymm4_f;
mov ymm4_0 permq_0;
mov ymm4_1 permq_1;
mov ymm4_2 permq_2;
mov ymm4_3 permq_3;
mov ymm4_4 permq_4;
mov ymm4_5 permq_5;
mov ymm4_6 permq_6;
mov ymm4_7 permq_7;
mov ymm4_8 permq_8;
mov ymm4_9 permq_9;
mov ymm4_a permq_a;
mov ymm4_b permq_b;
mov ymm4_c permq_c;
mov ymm4_d permq_d;
mov ymm4_e permq_e;
mov ymm4_f permq_f;
(* vpshufb %ymm1,%ymm11,%ymm11                     #! PC = 0x55555555975c *)
assert true && ymm1_0 = 0x0100@16;
mov shuf_0 ymm11_0;
assert true && ymm1_1 = 0x0504@16;
mov shuf_1 ymm11_2;
assert true && ymm1_2 = 0x0908@16;
mov shuf_2 ymm11_4;
assert true && ymm1_3 = 0x0d0c@16;
mov shuf_3 ymm11_6;
assert true && ymm1_4 = 0x0302@16;
mov shuf_4 ymm11_1;
assert true && ymm1_5 = 0x0706@16;
mov shuf_5 ymm11_3;
assert true && ymm1_6 = 0x0b0a@16;
mov shuf_6 ymm11_5;
assert true && ymm1_7 = 0x0f0e@16;
mov shuf_7 ymm11_7;
assert true && ymm1_8 = 0x0100@16;
mov shuf_8 ymm11_8;
assert true && ymm1_9 = 0x0504@16;
mov shuf_9 ymm11_a;
assert true && ymm1_a = 0x0908@16;
mov shuf_a ymm11_c;
assert true && ymm1_b = 0x0d0c@16;
mov shuf_b ymm11_e;
assert true && ymm1_c = 0x0302@16;
mov shuf_c ymm11_9;
assert true && ymm1_d = 0x0706@16;
mov shuf_d ymm11_b;
assert true && ymm1_e = 0x0b0a@16;
mov shuf_e ymm11_d;
assert true && ymm1_f = 0x0f0e@16;
mov shuf_f ymm11_f;
mov ymm11_0 shuf_0;
mov ymm11_1 shuf_1;
mov ymm11_2 shuf_2;
mov ymm11_3 shuf_3;
mov ymm11_4 shuf_4;
mov ymm11_5 shuf_5;
mov ymm11_6 shuf_6;
mov ymm11_7 shuf_7;
mov ymm11_8 shuf_8;
mov ymm11_9 shuf_9;
mov ymm11_a shuf_a;
mov ymm11_b shuf_b;
mov ymm11_c shuf_c;
mov ymm11_d shuf_d;
mov ymm11_e shuf_e;
mov ymm11_f shuf_f;
(* vpermq $0xd8,%ymm11,%ymm11                      #! PC = 0x555555559761 *)
mov permq_0 ymm11_0;
mov permq_1 ymm11_1;
mov permq_2 ymm11_2;
mov permq_3 ymm11_3;
mov permq_4 ymm11_8;
mov permq_5 ymm11_9;
mov permq_6 ymm11_a;
mov permq_7 ymm11_b;
mov permq_8 ymm11_4;
mov permq_9 ymm11_5;
mov permq_a ymm11_6;
mov permq_b ymm11_7;
mov permq_c ymm11_c;
mov permq_d ymm11_d;
mov permq_e ymm11_e;
mov permq_f ymm11_f;
mov ymm11_0 permq_0;
mov ymm11_1 permq_1;
mov ymm11_2 permq_2;
mov ymm11_3 permq_3;
mov ymm11_4 permq_4;
mov ymm11_5 permq_5;
mov ymm11_6 permq_6;
mov ymm11_7 permq_7;
mov ymm11_8 permq_8;
mov ymm11_9 permq_9;
mov ymm11_a permq_a;
mov ymm11_b permq_b;
mov ymm11_c permq_c;
mov ymm11_d permq_d;
mov ymm11_e permq_e;
mov ymm11_f permq_f;
(* vpunpcklwd %ymm3,%ymm9,%ymm10                   #! PC = 0x555555559767 *)
mov lwd_0 ymm9_0;
mov lwd_1 ymm3_0;
mov lwd_2 ymm9_1;
mov lwd_3 ymm3_1;
mov lwd_4 ymm9_2;
mov lwd_5 ymm3_2;
mov lwd_6 ymm9_3;
mov lwd_7 ymm3_3;
mov lwd_8 ymm9_8;
mov lwd_9 ymm3_8;
mov lwd_a ymm9_9;
mov lwd_b ymm3_9;
mov lwd_c ymm9_a;
mov lwd_d ymm3_a;
mov lwd_e ymm9_b;
mov lwd_f ymm3_b;
mov ymm10_0 lwd_0;
mov ymm10_1 lwd_1;
mov ymm10_2 lwd_2;
mov ymm10_3 lwd_3;
mov ymm10_4 lwd_4;
mov ymm10_5 lwd_5;
mov ymm10_6 lwd_6;
mov ymm10_7 lwd_7;
mov ymm10_8 lwd_8;
mov ymm10_9 lwd_9;
mov ymm10_a lwd_a;
mov ymm10_b lwd_b;
mov ymm10_c lwd_c;
mov ymm10_d lwd_d;
mov ymm10_e lwd_e;
mov ymm10_f lwd_f;
(* vpunpckhwd %ymm3,%ymm9,%ymm3                    #! PC = 0x55555555976b *)
mov hwd_0 ymm9_4;
mov hwd_1 ymm3_4;
mov hwd_2 ymm9_5;
mov hwd_3 ymm3_5;
mov hwd_4 ymm9_6;
mov hwd_5 ymm3_6;
mov hwd_6 ymm9_7;
mov hwd_7 ymm3_7;
mov hwd_8 ymm9_c;
mov hwd_9 ymm3_c;
mov hwd_a ymm9_d;
mov hwd_b ymm3_d;
mov hwd_c ymm9_e;
mov hwd_d ymm3_e;
mov hwd_e ymm9_f;
mov hwd_f ymm3_f;
mov ymm3_0 hwd_0;
mov ymm3_1 hwd_1;
mov ymm3_2 hwd_2;
mov ymm3_3 hwd_3;
mov ymm3_4 hwd_4;
mov ymm3_5 hwd_5;
mov ymm3_6 hwd_6;
mov ymm3_7 hwd_7;
mov ymm3_8 hwd_8;
mov ymm3_9 hwd_9;
mov ymm3_a hwd_a;
mov ymm3_b hwd_b;
mov ymm3_c hwd_c;
mov ymm3_d hwd_d;
mov ymm3_e hwd_e;
mov ymm3_f hwd_f;
(* vpunpcklwd %ymm6,%ymm7,%ymm9                    #! PC = 0x55555555976f *)
mov lwd_0 ymm7_0;
mov lwd_1 ymm6_0;
mov lwd_2 ymm7_1;
mov lwd_3 ymm6_1;
mov lwd_4 ymm7_2;
mov lwd_5 ymm6_2;
mov lwd_6 ymm7_3;
mov lwd_7 ymm6_3;
mov lwd_8 ymm7_8;
mov lwd_9 ymm6_8;
mov lwd_a ymm7_9;
mov lwd_b ymm6_9;
mov lwd_c ymm7_a;
mov lwd_d ymm6_a;
mov lwd_e ymm7_b;
mov lwd_f ymm6_b;
mov ymm9_0 lwd_0;
mov ymm9_1 lwd_1;
mov ymm9_2 lwd_2;
mov ymm9_3 lwd_3;
mov ymm9_4 lwd_4;
mov ymm9_5 lwd_5;
mov ymm9_6 lwd_6;
mov ymm9_7 lwd_7;
mov ymm9_8 lwd_8;
mov ymm9_9 lwd_9;
mov ymm9_a lwd_a;
mov ymm9_b lwd_b;
mov ymm9_c lwd_c;
mov ymm9_d lwd_d;
mov ymm9_e lwd_e;
mov ymm9_f lwd_f;
(* vpunpckhwd %ymm6,%ymm7,%ymm6                    #! PC = 0x555555559773 *)
mov hwd_0 ymm7_4;
mov hwd_1 ymm6_4;
mov hwd_2 ymm7_5;
mov hwd_3 ymm6_5;
mov hwd_4 ymm7_6;
mov hwd_5 ymm6_6;
mov hwd_6 ymm7_7;
mov hwd_7 ymm6_7;
mov hwd_8 ymm7_c;
mov hwd_9 ymm6_c;
mov hwd_a ymm7_d;
mov hwd_b ymm6_d;
mov hwd_c ymm7_e;
mov hwd_d ymm6_e;
mov hwd_e ymm7_f;
mov hwd_f ymm6_f;
mov ymm6_0 hwd_0;
mov ymm6_1 hwd_1;
mov ymm6_2 hwd_2;
mov ymm6_3 hwd_3;
mov ymm6_4 hwd_4;
mov ymm6_5 hwd_5;
mov ymm6_6 hwd_6;
mov ymm6_7 hwd_7;
mov ymm6_8 hwd_8;
mov ymm6_9 hwd_9;
mov ymm6_a hwd_a;
mov ymm6_b hwd_b;
mov ymm6_c hwd_c;
mov ymm6_d hwd_d;
mov ymm6_e hwd_e;
mov ymm6_f hwd_f;
(* vpunpcklwd %ymm8,%ymm5,%ymm7                    #! PC = 0x555555559777 *)
mov lwd_0 ymm5_0;
mov lwd_1 ymm8_0;
mov lwd_2 ymm5_1;
mov lwd_3 ymm8_1;
mov lwd_4 ymm5_2;
mov lwd_5 ymm8_2;
mov lwd_6 ymm5_3;
mov lwd_7 ymm8_3;
mov lwd_8 ymm5_8;
mov lwd_9 ymm8_8;
mov lwd_a ymm5_9;
mov lwd_b ymm8_9;
mov lwd_c ymm5_a;
mov lwd_d ymm8_a;
mov lwd_e ymm5_b;
mov lwd_f ymm8_b;
mov ymm7_0 lwd_0;
mov ymm7_1 lwd_1;
mov ymm7_2 lwd_2;
mov ymm7_3 lwd_3;
mov ymm7_4 lwd_4;
mov ymm7_5 lwd_5;
mov ymm7_6 lwd_6;
mov ymm7_7 lwd_7;
mov ymm7_8 lwd_8;
mov ymm7_9 lwd_9;
mov ymm7_a lwd_a;
mov ymm7_b lwd_b;
mov ymm7_c lwd_c;
mov ymm7_d lwd_d;
mov ymm7_e lwd_e;
mov ymm7_f lwd_f;
(* vpunpckhwd %ymm8,%ymm5,%ymm8                    #! PC = 0x55555555977c *)
mov hwd_0 ymm5_4;
mov hwd_1 ymm8_4;
mov hwd_2 ymm5_5;
mov hwd_3 ymm8_5;
mov hwd_4 ymm5_6;
mov hwd_5 ymm8_6;
mov hwd_6 ymm5_7;
mov hwd_7 ymm8_7;
mov hwd_8 ymm5_c;
mov hwd_9 ymm8_c;
mov hwd_a ymm5_d;
mov hwd_b ymm8_d;
mov hwd_c ymm5_e;
mov hwd_d ymm8_e;
mov hwd_e ymm5_f;
mov hwd_f ymm8_f;
mov ymm8_0 hwd_0;
mov ymm8_1 hwd_1;
mov ymm8_2 hwd_2;
mov ymm8_3 hwd_3;
mov ymm8_4 hwd_4;
mov ymm8_5 hwd_5;
mov ymm8_6 hwd_6;
mov ymm8_7 hwd_7;
mov ymm8_8 hwd_8;
mov ymm8_9 hwd_9;
mov ymm8_a hwd_a;
mov ymm8_b hwd_b;
mov ymm8_c hwd_c;
mov ymm8_d hwd_d;
mov ymm8_e hwd_e;
mov ymm8_f hwd_f;
(* vpunpcklwd %ymm11,%ymm4,%ymm5                   #! PC = 0x555555559781 *)
mov lwd_0 ymm4_0;
mov lwd_1 ymm11_0;
mov lwd_2 ymm4_1;
mov lwd_3 ymm11_1;
mov lwd_4 ymm4_2;
mov lwd_5 ymm11_2;
mov lwd_6 ymm4_3;
mov lwd_7 ymm11_3;
mov lwd_8 ymm4_8;
mov lwd_9 ymm11_8;
mov lwd_a ymm4_9;
mov lwd_b ymm11_9;
mov lwd_c ymm4_a;
mov lwd_d ymm11_a;
mov lwd_e ymm4_b;
mov lwd_f ymm11_b;
mov ymm5_0 lwd_0;
mov ymm5_1 lwd_1;
mov ymm5_2 lwd_2;
mov ymm5_3 lwd_3;
mov ymm5_4 lwd_4;
mov ymm5_5 lwd_5;
mov ymm5_6 lwd_6;
mov ymm5_7 lwd_7;
mov ymm5_8 lwd_8;
mov ymm5_9 lwd_9;
mov ymm5_a lwd_a;
mov ymm5_b lwd_b;
mov ymm5_c lwd_c;
mov ymm5_d lwd_d;
mov ymm5_e lwd_e;
mov ymm5_f lwd_f;
(* vpunpckhwd %ymm11,%ymm4,%ymm11                  #! PC = 0x555555559786 *)
mov hwd_0 ymm4_4;
mov hwd_1 ymm11_4;
mov hwd_2 ymm4_5;
mov hwd_3 ymm11_5;
mov hwd_4 ymm4_6;
mov hwd_5 ymm11_6;
mov hwd_6 ymm4_7;
mov hwd_7 ymm11_7;
mov hwd_8 ymm4_c;
mov hwd_9 ymm11_c;
mov hwd_a ymm4_d;
mov hwd_b ymm11_d;
mov hwd_c ymm4_e;
mov hwd_d ymm11_e;
mov hwd_e ymm4_f;
mov hwd_f ymm11_f;
mov ymm11_0 hwd_0;
mov ymm11_1 hwd_1;
mov ymm11_2 hwd_2;
mov ymm11_3 hwd_3;
mov ymm11_4 hwd_4;
mov ymm11_5 hwd_5;
mov ymm11_6 hwd_6;
mov ymm11_7 hwd_7;
mov ymm11_8 hwd_8;
mov ymm11_9 hwd_9;
mov ymm11_a hwd_a;
mov ymm11_b hwd_b;
mov ymm11_c hwd_c;
mov ymm11_d hwd_d;
mov ymm11_e hwd_e;
mov ymm11_f hwd_f;
(* vpbroadcastd 0x160(%rdx),%ymm1                  #! EA = L0x555555561280; Value = 0x3d78e4f41686ebfa; PC = 0x55555555978b *)
mov ymm1_0 L0x555555561280;
mov ymm1_1 L0x555555561282;
mov ymm1_2 L0x555555561280;
mov ymm1_3 L0x555555561282;
mov ymm1_4 L0x555555561280;
mov ymm1_5 L0x555555561282;
mov ymm1_6 L0x555555561280;
mov ymm1_7 L0x555555561282;
mov ymm1_8 L0x555555561280;
mov ymm1_9 L0x555555561282;
mov ymm1_a L0x555555561280;
mov ymm1_b L0x555555561282;
mov ymm1_c L0x555555561280;
mov ymm1_d L0x555555561282;
mov ymm1_e L0x555555561280;
mov ymm1_f L0x555555561282;
(* vpbroadcastd 0x360(%rdx),%ymm2                  #! EA = L0x555555561480; Value = 0xed78ecf41286effa; PC = 0x555555559794 *)
mov ymm2_0 L0x555555561480;
mov ymm2_1 L0x555555561482;
mov ymm2_2 L0x555555561480;
mov ymm2_3 L0x555555561482;
mov ymm2_4 L0x555555561480;
mov ymm2_5 L0x555555561482;
mov ymm2_6 L0x555555561480;
mov ymm2_7 L0x555555561482;
mov ymm2_8 L0x555555561480;
mov ymm2_9 L0x555555561482;
mov ymm2_a L0x555555561480;
mov ymm2_b L0x555555561482;
mov ymm2_c L0x555555561480;
mov ymm2_d L0x555555561482;
mov ymm2_e L0x555555561480;
mov ymm2_f L0x555555561482;
(* vpmullw %ymm1,%ymm3,%ymm4                       #! PC = 0x55555555979d *)
smull mulHymm3_0 mulL_0 ymm1_0 ymm3_0;
smull mulHymm3_1 mulL_1 ymm1_1 ymm3_1;
smull mulHymm3_2 mulL_2 ymm1_2 ymm3_2;
smull mulHymm3_3 mulL_3 ymm1_3 ymm3_3;
smull mulHymm3_4 mulL_4 ymm1_4 ymm3_4;
smull mulHymm3_5 mulL_5 ymm1_5 ymm3_5;
smull mulHymm3_6 mulL_6 ymm1_6 ymm3_6;
smull mulHymm3_7 mulL_7 ymm1_7 ymm3_7;
smull mulHymm3_8 mulL_8 ymm1_8 ymm3_8;
smull mulHymm3_9 mulL_9 ymm1_9 ymm3_9;
smull mulHymm3_a mulL_a ymm1_a ymm3_a;
smull mulHymm3_b mulL_b ymm1_b ymm3_b;
smull mulHymm3_c mulL_c ymm1_c ymm3_c;
smull mulHymm3_d mulL_d ymm1_d ymm3_d;
smull mulHymm3_e mulL_e ymm1_e ymm3_e;
smull mulHymm3_f mulL_f ymm1_f ymm3_f;
cast ymm4_0@sint16 mulL_0;
cast ymm4_1@sint16 mulL_1;
cast ymm4_2@sint16 mulL_2;
cast ymm4_3@sint16 mulL_3;
cast ymm4_4@sint16 mulL_4;
cast ymm4_5@sint16 mulL_5;
cast ymm4_6@sint16 mulL_6;
cast ymm4_7@sint16 mulL_7;
cast ymm4_8@sint16 mulL_8;
cast ymm4_9@sint16 mulL_9;
cast ymm4_a@sint16 mulL_a;
cast ymm4_b@sint16 mulL_b;
cast ymm4_c@sint16 mulL_c;
cast ymm4_d@sint16 mulL_d;
cast ymm4_e@sint16 mulL_e;
cast ymm4_f@sint16 mulL_f;
(* vpmulhw %ymm2,%ymm3,%ymm3                       #! PC = 0x5555555597a1 *)
smull mulH_0 mulLymm3_0 ymm3_0 ymm2_0;
smull mulH_1 mulLymm3_1 ymm3_1 ymm2_1;
smull mulH_2 mulLymm3_2 ymm3_2 ymm2_2;
smull mulH_3 mulLymm3_3 ymm3_3 ymm2_3;
smull mulH_4 mulLymm3_4 ymm3_4 ymm2_4;
smull mulH_5 mulLymm3_5 ymm3_5 ymm2_5;
smull mulH_6 mulLymm3_6 ymm3_6 ymm2_6;
smull mulH_7 mulLymm3_7 ymm3_7 ymm2_7;
smull mulH_8 mulLymm3_8 ymm3_8 ymm2_8;
smull mulH_9 mulLymm3_9 ymm3_9 ymm2_9;
smull mulH_a mulLymm3_a ymm3_a ymm2_a;
smull mulH_b mulLymm3_b ymm3_b ymm2_b;
smull mulH_c mulLymm3_c ymm3_c ymm2_c;
smull mulH_d mulLymm3_d ymm3_d ymm2_d;
smull mulH_e mulLymm3_e ymm3_e ymm2_e;
smull mulH_f mulLymm3_f ymm3_f ymm2_f;
mov ymm3_0 mulH_0;
mov ymm3_1 mulH_1;
mov ymm3_2 mulH_2;
mov ymm3_3 mulH_3;
mov ymm3_4 mulH_4;
mov ymm3_5 mulH_5;
mov ymm3_6 mulH_6;
mov ymm3_7 mulH_7;
mov ymm3_8 mulH_8;
mov ymm3_9 mulH_9;
mov ymm3_a mulH_a;
mov ymm3_b mulH_b;
mov ymm3_c mulH_c;
mov ymm3_d mulH_d;
mov ymm3_e mulH_e;
mov ymm3_f mulH_f;
(* vpmulhw %ymm0,%ymm4,%ymm4                       #! PC = 0x5555555597a5 *)
smull mulH_0 red_0 ymm4_0 ymm0_0;
assert true && red_0 = mulLymm3_0;
assume red_0 = mulLymm3_0 && true;
smull mulH_1 red_1 ymm4_1 ymm0_1;
assert true && red_1 = mulLymm3_1;
assume red_1 = mulLymm3_1 && true;
smull mulH_2 red_2 ymm4_2 ymm0_2;
assert true && red_2 = mulLymm3_2;
assume red_2 = mulLymm3_2 && true;
smull mulH_3 red_3 ymm4_3 ymm0_3;
assert true && red_3 = mulLymm3_3;
assume red_3 = mulLymm3_3 && true;
smull mulH_4 red_4 ymm4_4 ymm0_4;
assert true && red_4 = mulLymm3_4;
assume red_4 = mulLymm3_4 && true;
smull mulH_5 red_5 ymm4_5 ymm0_5;
assert true && red_5 = mulLymm3_5;
assume red_5 = mulLymm3_5 && true;
smull mulH_6 red_6 ymm4_6 ymm0_6;
assert true && red_6 = mulLymm3_6;
assume red_6 = mulLymm3_6 && true;
smull mulH_7 red_7 ymm4_7 ymm0_7;
assert true && red_7 = mulLymm3_7;
assume red_7 = mulLymm3_7 && true;
smull mulH_8 red_8 ymm4_8 ymm0_8;
assert true && red_8 = mulLymm3_8;
assume red_8 = mulLymm3_8 && true;
smull mulH_9 red_9 ymm4_9 ymm0_9;
assert true && red_9 = mulLymm3_9;
assume red_9 = mulLymm3_9 && true;
smull mulH_a red_a ymm4_a ymm0_a;
assert true && red_a = mulLymm3_a;
assume red_a = mulLymm3_a && true;
smull mulH_b red_b ymm4_b ymm0_b;
assert true && red_b = mulLymm3_b;
assume red_b = mulLymm3_b && true;
smull mulH_c red_c ymm4_c ymm0_c;
assert true && red_c = mulLymm3_c;
assume red_c = mulLymm3_c && true;
smull mulH_d red_d ymm4_d ymm0_d;
assert true && red_d = mulLymm3_d;
assume red_d = mulLymm3_d && true;
smull mulH_e red_e ymm4_e ymm0_e;
assert true && red_e = mulLymm3_e;
assume red_e = mulLymm3_e && true;
smull mulH_f red_f ymm4_f ymm0_f;
assert true && red_f = mulLymm3_f;
assume red_f = mulLymm3_f && true;
mov ymm4_0 mulH_0;
mov ymm4_1 mulH_1;
mov ymm4_2 mulH_2;
mov ymm4_3 mulH_3;
mov ymm4_4 mulH_4;
mov ymm4_5 mulH_5;
mov ymm4_6 mulH_6;
mov ymm4_7 mulH_7;
mov ymm4_8 mulH_8;
mov ymm4_9 mulH_9;
mov ymm4_a mulH_a;
mov ymm4_b mulH_b;
mov ymm4_c mulH_c;
mov ymm4_d mulH_d;
mov ymm4_e mulH_e;
mov ymm4_f mulH_f;
(* vpsubw %ymm4,%ymm3,%ymm3                        #! PC = 0x5555555597a9 *)
sub ymm3_0 ymm3_0 ymm4_0;
sub ymm3_1 ymm3_1 ymm4_1;
sub ymm3_2 ymm3_2 ymm4_2;
sub ymm3_3 ymm3_3 ymm4_3;
sub ymm3_4 ymm3_4 ymm4_4;
sub ymm3_5 ymm3_5 ymm4_5;
sub ymm3_6 ymm3_6 ymm4_6;
sub ymm3_7 ymm3_7 ymm4_7;
sub ymm3_8 ymm3_8 ymm4_8;
sub ymm3_9 ymm3_9 ymm4_9;
sub ymm3_a ymm3_a ymm4_a;
sub ymm3_b ymm3_b ymm4_b;
sub ymm3_c ymm3_c ymm4_c;
sub ymm3_d ymm3_d ymm4_d;
sub ymm3_e ymm3_e ymm4_e;
sub ymm3_f ymm3_f ymm4_f;
(* vpbroadcastd 0x164(%rdx),%ymm1                  #! EA = L0x555555561284; Value = 0x500a84583d78e4f4; PC = 0x5555555597ad *)
mov ymm1_0 L0x555555561284;
mov ymm1_1 L0x555555561286;
mov ymm1_2 L0x555555561284;
mov ymm1_3 L0x555555561286;
mov ymm1_4 L0x555555561284;
mov ymm1_5 L0x555555561286;
mov ymm1_6 L0x555555561284;
mov ymm1_7 L0x555555561286;
mov ymm1_8 L0x555555561284;
mov ymm1_9 L0x555555561286;
mov ymm1_a L0x555555561284;
mov ymm1_b L0x555555561286;
mov ymm1_c L0x555555561284;
mov ymm1_d L0x555555561286;
mov ymm1_e L0x555555561284;
mov ymm1_f L0x555555561286;
(* vpbroadcastd 0x364(%rdx),%ymm2                  #! EA = L0x555555561484; Value = 0xf40af458ed78ecf4; PC = 0x5555555597b6 *)
mov ymm2_0 L0x555555561484;
mov ymm2_1 L0x555555561486;
mov ymm2_2 L0x555555561484;
mov ymm2_3 L0x555555561486;
mov ymm2_4 L0x555555561484;
mov ymm2_5 L0x555555561486;
mov ymm2_6 L0x555555561484;
mov ymm2_7 L0x555555561486;
mov ymm2_8 L0x555555561484;
mov ymm2_9 L0x555555561486;
mov ymm2_a L0x555555561484;
mov ymm2_b L0x555555561486;
mov ymm2_c L0x555555561484;
mov ymm2_d L0x555555561486;
mov ymm2_e L0x555555561484;
mov ymm2_f L0x555555561486;
(* vpmullw %ymm1,%ymm6,%ymm4                       #! PC = 0x5555555597bf *)
smull mulHymm6_0 mulL_0 ymm1_0 ymm6_0;
smull mulHymm6_1 mulL_1 ymm1_1 ymm6_1;
smull mulHymm6_2 mulL_2 ymm1_2 ymm6_2;
smull mulHymm6_3 mulL_3 ymm1_3 ymm6_3;
smull mulHymm6_4 mulL_4 ymm1_4 ymm6_4;
smull mulHymm6_5 mulL_5 ymm1_5 ymm6_5;
smull mulHymm6_6 mulL_6 ymm1_6 ymm6_6;
smull mulHymm6_7 mulL_7 ymm1_7 ymm6_7;
smull mulHymm6_8 mulL_8 ymm1_8 ymm6_8;
smull mulHymm6_9 mulL_9 ymm1_9 ymm6_9;
smull mulHymm6_a mulL_a ymm1_a ymm6_a;
smull mulHymm6_b mulL_b ymm1_b ymm6_b;
smull mulHymm6_c mulL_c ymm1_c ymm6_c;
smull mulHymm6_d mulL_d ymm1_d ymm6_d;
smull mulHymm6_e mulL_e ymm1_e ymm6_e;
smull mulHymm6_f mulL_f ymm1_f ymm6_f;
cast ymm4_0@sint16 mulL_0;
cast ymm4_1@sint16 mulL_1;
cast ymm4_2@sint16 mulL_2;
cast ymm4_3@sint16 mulL_3;
cast ymm4_4@sint16 mulL_4;
cast ymm4_5@sint16 mulL_5;
cast ymm4_6@sint16 mulL_6;
cast ymm4_7@sint16 mulL_7;
cast ymm4_8@sint16 mulL_8;
cast ymm4_9@sint16 mulL_9;
cast ymm4_a@sint16 mulL_a;
cast ymm4_b@sint16 mulL_b;
cast ymm4_c@sint16 mulL_c;
cast ymm4_d@sint16 mulL_d;
cast ymm4_e@sint16 mulL_e;
cast ymm4_f@sint16 mulL_f;
(* vpmulhw %ymm2,%ymm6,%ymm6                       #! PC = 0x5555555597c3 *)
smull mulH_0 mulLymm6_0 ymm6_0 ymm2_0;
smull mulH_1 mulLymm6_1 ymm6_1 ymm2_1;
smull mulH_2 mulLymm6_2 ymm6_2 ymm2_2;
smull mulH_3 mulLymm6_3 ymm6_3 ymm2_3;
smull mulH_4 mulLymm6_4 ymm6_4 ymm2_4;
smull mulH_5 mulLymm6_5 ymm6_5 ymm2_5;
smull mulH_6 mulLymm6_6 ymm6_6 ymm2_6;
smull mulH_7 mulLymm6_7 ymm6_7 ymm2_7;
smull mulH_8 mulLymm6_8 ymm6_8 ymm2_8;
smull mulH_9 mulLymm6_9 ymm6_9 ymm2_9;
smull mulH_a mulLymm6_a ymm6_a ymm2_a;
smull mulH_b mulLymm6_b ymm6_b ymm2_b;
smull mulH_c mulLymm6_c ymm6_c ymm2_c;
smull mulH_d mulLymm6_d ymm6_d ymm2_d;
smull mulH_e mulLymm6_e ymm6_e ymm2_e;
smull mulH_f mulLymm6_f ymm6_f ymm2_f;
mov ymm6_0 mulH_0;
mov ymm6_1 mulH_1;
mov ymm6_2 mulH_2;
mov ymm6_3 mulH_3;
mov ymm6_4 mulH_4;
mov ymm6_5 mulH_5;
mov ymm6_6 mulH_6;
mov ymm6_7 mulH_7;
mov ymm6_8 mulH_8;
mov ymm6_9 mulH_9;
mov ymm6_a mulH_a;
mov ymm6_b mulH_b;
mov ymm6_c mulH_c;
mov ymm6_d mulH_d;
mov ymm6_e mulH_e;
mov ymm6_f mulH_f;
(* vpmulhw %ymm0,%ymm4,%ymm4                       #! PC = 0x5555555597c7 *)
smull mulH_0 red_0 ymm4_0 ymm0_0;
assert true && red_0 = mulLymm6_0;
assume red_0 = mulLymm6_0 && true;
smull mulH_1 red_1 ymm4_1 ymm0_1;
assert true && red_1 = mulLymm6_1;
assume red_1 = mulLymm6_1 && true;
smull mulH_2 red_2 ymm4_2 ymm0_2;
assert true && red_2 = mulLymm6_2;
assume red_2 = mulLymm6_2 && true;
smull mulH_3 red_3 ymm4_3 ymm0_3;
assert true && red_3 = mulLymm6_3;
assume red_3 = mulLymm6_3 && true;
smull mulH_4 red_4 ymm4_4 ymm0_4;
assert true && red_4 = mulLymm6_4;
assume red_4 = mulLymm6_4 && true;
smull mulH_5 red_5 ymm4_5 ymm0_5;
assert true && red_5 = mulLymm6_5;
assume red_5 = mulLymm6_5 && true;
smull mulH_6 red_6 ymm4_6 ymm0_6;
assert true && red_6 = mulLymm6_6;
assume red_6 = mulLymm6_6 && true;
smull mulH_7 red_7 ymm4_7 ymm0_7;
assert true && red_7 = mulLymm6_7;
assume red_7 = mulLymm6_7 && true;
smull mulH_8 red_8 ymm4_8 ymm0_8;
assert true && red_8 = mulLymm6_8;
assume red_8 = mulLymm6_8 && true;
smull mulH_9 red_9 ymm4_9 ymm0_9;
assert true && red_9 = mulLymm6_9;
assume red_9 = mulLymm6_9 && true;
smull mulH_a red_a ymm4_a ymm0_a;
assert true && red_a = mulLymm6_a;
assume red_a = mulLymm6_a && true;
smull mulH_b red_b ymm4_b ymm0_b;
assert true && red_b = mulLymm6_b;
assume red_b = mulLymm6_b && true;
smull mulH_c red_c ymm4_c ymm0_c;
assert true && red_c = mulLymm6_c;
assume red_c = mulLymm6_c && true;
smull mulH_d red_d ymm4_d ymm0_d;
assert true && red_d = mulLymm6_d;
assume red_d = mulLymm6_d && true;
smull mulH_e red_e ymm4_e ymm0_e;
assert true && red_e = mulLymm6_e;
assume red_e = mulLymm6_e && true;
smull mulH_f red_f ymm4_f ymm0_f;
assert true && red_f = mulLymm6_f;
assume red_f = mulLymm6_f && true;
mov ymm4_0 mulH_0;
mov ymm4_1 mulH_1;
mov ymm4_2 mulH_2;
mov ymm4_3 mulH_3;
mov ymm4_4 mulH_4;
mov ymm4_5 mulH_5;
mov ymm4_6 mulH_6;
mov ymm4_7 mulH_7;
mov ymm4_8 mulH_8;
mov ymm4_9 mulH_9;
mov ymm4_a mulH_a;
mov ymm4_b mulH_b;
mov ymm4_c mulH_c;
mov ymm4_d mulH_d;
mov ymm4_e mulH_e;
mov ymm4_f mulH_f;
(* vpsubw %ymm4,%ymm6,%ymm6                        #! PC = 0x5555555597cb *)
sub ymm6_0 ymm6_0 ymm4_0;
sub ymm6_1 ymm6_1 ymm4_1;
sub ymm6_2 ymm6_2 ymm4_2;
sub ymm6_3 ymm6_3 ymm4_3;
sub ymm6_4 ymm6_4 ymm4_4;
sub ymm6_5 ymm6_5 ymm4_5;
sub ymm6_6 ymm6_6 ymm4_6;
sub ymm6_7 ymm6_7 ymm4_7;
sub ymm6_8 ymm6_8 ymm4_8;
sub ymm6_9 ymm6_9 ymm4_9;
sub ymm6_a ymm6_a ymm4_a;
sub ymm6_b ymm6_b ymm4_b;
sub ymm6_c ymm6_c ymm4_c;
sub ymm6_d ymm6_d ymm4_d;
sub ymm6_e ymm6_e ymm4_e;
sub ymm6_f ymm6_f ymm4_f;
(* vpbroadcastd 0x168(%rdx),%ymm1                  #! EA = L0x555555561288; Value = 0x5ce5f2b1500a8458; PC = 0x5555555597cf *)
mov ymm1_0 L0x555555561288;
mov ymm1_1 L0x55555556128a;
mov ymm1_2 L0x555555561288;
mov ymm1_3 L0x55555556128a;
mov ymm1_4 L0x555555561288;
mov ymm1_5 L0x55555556128a;
mov ymm1_6 L0x555555561288;
mov ymm1_7 L0x55555556128a;
mov ymm1_8 L0x555555561288;
mov ymm1_9 L0x55555556128a;
mov ymm1_a L0x555555561288;
mov ymm1_b L0x55555556128a;
mov ymm1_c L0x555555561288;
mov ymm1_d L0x55555556128a;
mov ymm1_e L0x555555561288;
mov ymm1_f L0x55555556128a;
(* vpbroadcastd 0x368(%rdx),%ymm2                  #! EA = L0x555555561488; Value = 0xeee5fcb1f40af458; PC = 0x5555555597d8 *)
mov ymm2_0 L0x555555561488;
mov ymm2_1 L0x55555556148a;
mov ymm2_2 L0x555555561488;
mov ymm2_3 L0x55555556148a;
mov ymm2_4 L0x555555561488;
mov ymm2_5 L0x55555556148a;
mov ymm2_6 L0x555555561488;
mov ymm2_7 L0x55555556148a;
mov ymm2_8 L0x555555561488;
mov ymm2_9 L0x55555556148a;
mov ymm2_a L0x555555561488;
mov ymm2_b L0x55555556148a;
mov ymm2_c L0x555555561488;
mov ymm2_d L0x55555556148a;
mov ymm2_e L0x555555561488;
mov ymm2_f L0x55555556148a;
(* vpmullw %ymm1,%ymm8,%ymm4                       #! PC = 0x5555555597e1 *)
smull mulHymm8_0 mulL_0 ymm1_0 ymm8_0;
smull mulHymm8_1 mulL_1 ymm1_1 ymm8_1;
smull mulHymm8_2 mulL_2 ymm1_2 ymm8_2;
smull mulHymm8_3 mulL_3 ymm1_3 ymm8_3;
smull mulHymm8_4 mulL_4 ymm1_4 ymm8_4;
smull mulHymm8_5 mulL_5 ymm1_5 ymm8_5;
smull mulHymm8_6 mulL_6 ymm1_6 ymm8_6;
smull mulHymm8_7 mulL_7 ymm1_7 ymm8_7;
smull mulHymm8_8 mulL_8 ymm1_8 ymm8_8;
smull mulHymm8_9 mulL_9 ymm1_9 ymm8_9;
smull mulHymm8_a mulL_a ymm1_a ymm8_a;
smull mulHymm8_b mulL_b ymm1_b ymm8_b;
smull mulHymm8_c mulL_c ymm1_c ymm8_c;
smull mulHymm8_d mulL_d ymm1_d ymm8_d;
smull mulHymm8_e mulL_e ymm1_e ymm8_e;
smull mulHymm8_f mulL_f ymm1_f ymm8_f;
cast ymm4_0@sint16 mulL_0;
cast ymm4_1@sint16 mulL_1;
cast ymm4_2@sint16 mulL_2;
cast ymm4_3@sint16 mulL_3;
cast ymm4_4@sint16 mulL_4;
cast ymm4_5@sint16 mulL_5;
cast ymm4_6@sint16 mulL_6;
cast ymm4_7@sint16 mulL_7;
cast ymm4_8@sint16 mulL_8;
cast ymm4_9@sint16 mulL_9;
cast ymm4_a@sint16 mulL_a;
cast ymm4_b@sint16 mulL_b;
cast ymm4_c@sint16 mulL_c;
cast ymm4_d@sint16 mulL_d;
cast ymm4_e@sint16 mulL_e;
cast ymm4_f@sint16 mulL_f;
(* vpmulhw %ymm2,%ymm8,%ymm8                       #! PC = 0x5555555597e5 *)
smull mulH_0 mulLymm8_0 ymm8_0 ymm2_0;
smull mulH_1 mulLymm8_1 ymm8_1 ymm2_1;
smull mulH_2 mulLymm8_2 ymm8_2 ymm2_2;
smull mulH_3 mulLymm8_3 ymm8_3 ymm2_3;
smull mulH_4 mulLymm8_4 ymm8_4 ymm2_4;
smull mulH_5 mulLymm8_5 ymm8_5 ymm2_5;
smull mulH_6 mulLymm8_6 ymm8_6 ymm2_6;
smull mulH_7 mulLymm8_7 ymm8_7 ymm2_7;
smull mulH_8 mulLymm8_8 ymm8_8 ymm2_8;
smull mulH_9 mulLymm8_9 ymm8_9 ymm2_9;
smull mulH_a mulLymm8_a ymm8_a ymm2_a;
smull mulH_b mulLymm8_b ymm8_b ymm2_b;
smull mulH_c mulLymm8_c ymm8_c ymm2_c;
smull mulH_d mulLymm8_d ymm8_d ymm2_d;
smull mulH_e mulLymm8_e ymm8_e ymm2_e;
smull mulH_f mulLymm8_f ymm8_f ymm2_f;
mov ymm8_0 mulH_0;
mov ymm8_1 mulH_1;
mov ymm8_2 mulH_2;
mov ymm8_3 mulH_3;
mov ymm8_4 mulH_4;
mov ymm8_5 mulH_5;
mov ymm8_6 mulH_6;
mov ymm8_7 mulH_7;
mov ymm8_8 mulH_8;
mov ymm8_9 mulH_9;
mov ymm8_a mulH_a;
mov ymm8_b mulH_b;
mov ymm8_c mulH_c;
mov ymm8_d mulH_d;
mov ymm8_e mulH_e;
mov ymm8_f mulH_f;
(* vpmulhw %ymm0,%ymm4,%ymm4                       #! PC = 0x5555555597e9 *)
smull mulH_0 red_0 ymm4_0 ymm0_0;
assert true && red_0 = mulLymm8_0;
assume red_0 = mulLymm8_0 && true;
smull mulH_1 red_1 ymm4_1 ymm0_1;
assert true && red_1 = mulLymm8_1;
assume red_1 = mulLymm8_1 && true;
smull mulH_2 red_2 ymm4_2 ymm0_2;
assert true && red_2 = mulLymm8_2;
assume red_2 = mulLymm8_2 && true;
smull mulH_3 red_3 ymm4_3 ymm0_3;
assert true && red_3 = mulLymm8_3;
assume red_3 = mulLymm8_3 && true;
smull mulH_4 red_4 ymm4_4 ymm0_4;
assert true && red_4 = mulLymm8_4;
assume red_4 = mulLymm8_4 && true;
smull mulH_5 red_5 ymm4_5 ymm0_5;
assert true && red_5 = mulLymm8_5;
assume red_5 = mulLymm8_5 && true;
smull mulH_6 red_6 ymm4_6 ymm0_6;
assert true && red_6 = mulLymm8_6;
assume red_6 = mulLymm8_6 && true;
smull mulH_7 red_7 ymm4_7 ymm0_7;
assert true && red_7 = mulLymm8_7;
assume red_7 = mulLymm8_7 && true;
smull mulH_8 red_8 ymm4_8 ymm0_8;
assert true && red_8 = mulLymm8_8;
assume red_8 = mulLymm8_8 && true;
smull mulH_9 red_9 ymm4_9 ymm0_9;
assert true && red_9 = mulLymm8_9;
assume red_9 = mulLymm8_9 && true;
smull mulH_a red_a ymm4_a ymm0_a;
assert true && red_a = mulLymm8_a;
assume red_a = mulLymm8_a && true;
smull mulH_b red_b ymm4_b ymm0_b;
assert true && red_b = mulLymm8_b;
assume red_b = mulLymm8_b && true;
smull mulH_c red_c ymm4_c ymm0_c;
assert true && red_c = mulLymm8_c;
assume red_c = mulLymm8_c && true;
smull mulH_d red_d ymm4_d ymm0_d;
assert true && red_d = mulLymm8_d;
assume red_d = mulLymm8_d && true;
smull mulH_e red_e ymm4_e ymm0_e;
assert true && red_e = mulLymm8_e;
assume red_e = mulLymm8_e && true;
smull mulH_f red_f ymm4_f ymm0_f;
assert true && red_f = mulLymm8_f;
assume red_f = mulLymm8_f && true;
mov ymm4_0 mulH_0;
mov ymm4_1 mulH_1;
mov ymm4_2 mulH_2;
mov ymm4_3 mulH_3;
mov ymm4_4 mulH_4;
mov ymm4_5 mulH_5;
mov ymm4_6 mulH_6;
mov ymm4_7 mulH_7;
mov ymm4_8 mulH_8;
mov ymm4_9 mulH_9;
mov ymm4_a mulH_a;
mov ymm4_b mulH_b;
mov ymm4_c mulH_c;
mov ymm4_d mulH_d;
mov ymm4_e mulH_e;
mov ymm4_f mulH_f;
(* vpsubw %ymm4,%ymm8,%ymm8                        #! PC = 0x5555555597ed *)
sub ymm8_0 ymm8_0 ymm4_0;
sub ymm8_1 ymm8_1 ymm4_1;
sub ymm8_2 ymm8_2 ymm4_2;
sub ymm8_3 ymm8_3 ymm4_3;
sub ymm8_4 ymm8_4 ymm4_4;
sub ymm8_5 ymm8_5 ymm4_5;
sub ymm8_6 ymm8_6 ymm4_6;
sub ymm8_7 ymm8_7 ymm4_7;
sub ymm8_8 ymm8_8 ymm4_8;
sub ymm8_9 ymm8_9 ymm4_9;
sub ymm8_a ymm8_a ymm4_a;
sub ymm8_b ymm8_b ymm4_b;
sub ymm8_c ymm8_c ymm4_c;
sub ymm8_d ymm8_d ymm4_d;
sub ymm8_e ymm8_e ymm4_e;
sub ymm8_f ymm8_f ymm4_f;
(* vpbroadcastd 0x16c(%rdx),%ymm1                  #! EA = L0x55555556128c; Value = 0x860fbeac5ce5f2b1; PC = 0x5555555597f1 *)
mov ymm1_0 L0x55555556128c;
mov ymm1_1 L0x55555556128e;
mov ymm1_2 L0x55555556128c;
mov ymm1_3 L0x55555556128e;
mov ymm1_4 L0x55555556128c;
mov ymm1_5 L0x55555556128e;
mov ymm1_6 L0x55555556128c;
mov ymm1_7 L0x55555556128e;
mov ymm1_8 L0x55555556128c;
mov ymm1_9 L0x55555556128e;
mov ymm1_a L0x55555556128c;
mov ymm1_b L0x55555556128e;
mov ymm1_c L0x55555556128c;
mov ymm1_d L0x55555556128e;
mov ymm1_e L0x55555556128c;
mov ymm1_f L0x55555556128e;
(* vpbroadcastd 0x36c(%rdx),%ymm2                  #! EA = L0x55555556148c; Value = 0xfc0ff6aceee5fcb1; PC = 0x5555555597fa *)
mov ymm2_0 L0x55555556148c;
mov ymm2_1 L0x55555556148e;
mov ymm2_2 L0x55555556148c;
mov ymm2_3 L0x55555556148e;
mov ymm2_4 L0x55555556148c;
mov ymm2_5 L0x55555556148e;
mov ymm2_6 L0x55555556148c;
mov ymm2_7 L0x55555556148e;
mov ymm2_8 L0x55555556148c;
mov ymm2_9 L0x55555556148e;
mov ymm2_a L0x55555556148c;
mov ymm2_b L0x55555556148e;
mov ymm2_c L0x55555556148c;
mov ymm2_d L0x55555556148e;
mov ymm2_e L0x55555556148c;
mov ymm2_f L0x55555556148e;
(* vpmullw %ymm1,%ymm11,%ymm4                      #! PC = 0x555555559803 *)
smull mulHymm11_0 mulL_0 ymm1_0 ymm11_0;
smull mulHymm11_1 mulL_1 ymm1_1 ymm11_1;
smull mulHymm11_2 mulL_2 ymm1_2 ymm11_2;
smull mulHymm11_3 mulL_3 ymm1_3 ymm11_3;
smull mulHymm11_4 mulL_4 ymm1_4 ymm11_4;
smull mulHymm11_5 mulL_5 ymm1_5 ymm11_5;
smull mulHymm11_6 mulL_6 ymm1_6 ymm11_6;
smull mulHymm11_7 mulL_7 ymm1_7 ymm11_7;
smull mulHymm11_8 mulL_8 ymm1_8 ymm11_8;
smull mulHymm11_9 mulL_9 ymm1_9 ymm11_9;
smull mulHymm11_a mulL_a ymm1_a ymm11_a;
smull mulHymm11_b mulL_b ymm1_b ymm11_b;
smull mulHymm11_c mulL_c ymm1_c ymm11_c;
smull mulHymm11_d mulL_d ymm1_d ymm11_d;
smull mulHymm11_e mulL_e ymm1_e ymm11_e;
smull mulHymm11_f mulL_f ymm1_f ymm11_f;
cast ymm4_0@sint16 mulL_0;
cast ymm4_1@sint16 mulL_1;
cast ymm4_2@sint16 mulL_2;
cast ymm4_3@sint16 mulL_3;
cast ymm4_4@sint16 mulL_4;
cast ymm4_5@sint16 mulL_5;
cast ymm4_6@sint16 mulL_6;
cast ymm4_7@sint16 mulL_7;
cast ymm4_8@sint16 mulL_8;
cast ymm4_9@sint16 mulL_9;
cast ymm4_a@sint16 mulL_a;
cast ymm4_b@sint16 mulL_b;
cast ymm4_c@sint16 mulL_c;
cast ymm4_d@sint16 mulL_d;
cast ymm4_e@sint16 mulL_e;
cast ymm4_f@sint16 mulL_f;
(* vpmulhw %ymm2,%ymm11,%ymm11                     #! PC = 0x555555559807 *)
smull mulH_0 mulLymm11_0 ymm11_0 ymm2_0;
smull mulH_1 mulLymm11_1 ymm11_1 ymm2_1;
smull mulH_2 mulLymm11_2 ymm11_2 ymm2_2;
smull mulH_3 mulLymm11_3 ymm11_3 ymm2_3;
smull mulH_4 mulLymm11_4 ymm11_4 ymm2_4;
smull mulH_5 mulLymm11_5 ymm11_5 ymm2_5;
smull mulH_6 mulLymm11_6 ymm11_6 ymm2_6;
smull mulH_7 mulLymm11_7 ymm11_7 ymm2_7;
smull mulH_8 mulLymm11_8 ymm11_8 ymm2_8;
smull mulH_9 mulLymm11_9 ymm11_9 ymm2_9;
smull mulH_a mulLymm11_a ymm11_a ymm2_a;
smull mulH_b mulLymm11_b ymm11_b ymm2_b;
smull mulH_c mulLymm11_c ymm11_c ymm2_c;
smull mulH_d mulLymm11_d ymm11_d ymm2_d;
smull mulH_e mulLymm11_e ymm11_e ymm2_e;
smull mulH_f mulLymm11_f ymm11_f ymm2_f;
mov ymm11_0 mulH_0;
mov ymm11_1 mulH_1;
mov ymm11_2 mulH_2;
mov ymm11_3 mulH_3;
mov ymm11_4 mulH_4;
mov ymm11_5 mulH_5;
mov ymm11_6 mulH_6;
mov ymm11_7 mulH_7;
mov ymm11_8 mulH_8;
mov ymm11_9 mulH_9;
mov ymm11_a mulH_a;
mov ymm11_b mulH_b;
mov ymm11_c mulH_c;
mov ymm11_d mulH_d;
mov ymm11_e mulH_e;
mov ymm11_f mulH_f;
(* vpmulhw %ymm0,%ymm4,%ymm4                       #! PC = 0x55555555980b *)
smull mulH_0 red_0 ymm4_0 ymm0_0;
assert true && red_0 = mulLymm11_0;
assume red_0 = mulLymm11_0 && true;
smull mulH_1 red_1 ymm4_1 ymm0_1;
assert true && red_1 = mulLymm11_1;
assume red_1 = mulLymm11_1 && true;
smull mulH_2 red_2 ymm4_2 ymm0_2;
assert true && red_2 = mulLymm11_2;
assume red_2 = mulLymm11_2 && true;
smull mulH_3 red_3 ymm4_3 ymm0_3;
assert true && red_3 = mulLymm11_3;
assume red_3 = mulLymm11_3 && true;
smull mulH_4 red_4 ymm4_4 ymm0_4;
assert true && red_4 = mulLymm11_4;
assume red_4 = mulLymm11_4 && true;
smull mulH_5 red_5 ymm4_5 ymm0_5;
assert true && red_5 = mulLymm11_5;
assume red_5 = mulLymm11_5 && true;
smull mulH_6 red_6 ymm4_6 ymm0_6;
assert true && red_6 = mulLymm11_6;
assume red_6 = mulLymm11_6 && true;
smull mulH_7 red_7 ymm4_7 ymm0_7;
assert true && red_7 = mulLymm11_7;
assume red_7 = mulLymm11_7 && true;
smull mulH_8 red_8 ymm4_8 ymm0_8;
assert true && red_8 = mulLymm11_8;
assume red_8 = mulLymm11_8 && true;
smull mulH_9 red_9 ymm4_9 ymm0_9;
assert true && red_9 = mulLymm11_9;
assume red_9 = mulLymm11_9 && true;
smull mulH_a red_a ymm4_a ymm0_a;
assert true && red_a = mulLymm11_a;
assume red_a = mulLymm11_a && true;
smull mulH_b red_b ymm4_b ymm0_b;
assert true && red_b = mulLymm11_b;
assume red_b = mulLymm11_b && true;
smull mulH_c red_c ymm4_c ymm0_c;
assert true && red_c = mulLymm11_c;
assume red_c = mulLymm11_c && true;
smull mulH_d red_d ymm4_d ymm0_d;
assert true && red_d = mulLymm11_d;
assume red_d = mulLymm11_d && true;
smull mulH_e red_e ymm4_e ymm0_e;
assert true && red_e = mulLymm11_e;
assume red_e = mulLymm11_e && true;
smull mulH_f red_f ymm4_f ymm0_f;
assert true && red_f = mulLymm11_f;
assume red_f = mulLymm11_f && true;
mov ymm4_0 mulH_0;
mov ymm4_1 mulH_1;
mov ymm4_2 mulH_2;
mov ymm4_3 mulH_3;
mov ymm4_4 mulH_4;
mov ymm4_5 mulH_5;
mov ymm4_6 mulH_6;
mov ymm4_7 mulH_7;
mov ymm4_8 mulH_8;
mov ymm4_9 mulH_9;
mov ymm4_a mulH_a;
mov ymm4_b mulH_b;
mov ymm4_c mulH_c;
mov ymm4_d mulH_d;
mov ymm4_e mulH_e;
mov ymm4_f mulH_f;
(* vpsubw %ymm4,%ymm11,%ymm11                      #! PC = 0x55555555980f *)
sub ymm11_0 ymm11_0 ymm4_0;
sub ymm11_1 ymm11_1 ymm4_1;
sub ymm11_2 ymm11_2 ymm4_2;
sub ymm11_3 ymm11_3 ymm4_3;
sub ymm11_4 ymm11_4 ymm4_4;
sub ymm11_5 ymm11_5 ymm4_5;
sub ymm11_6 ymm11_6 ymm4_6;
sub ymm11_7 ymm11_7 ymm4_7;
sub ymm11_8 ymm11_8 ymm4_8;
sub ymm11_9 ymm11_9 ymm4_9;
sub ymm11_a ymm11_a ymm4_a;
sub ymm11_b ymm11_b ymm4_b;
sub ymm11_c ymm11_c ymm4_c;
sub ymm11_d ymm11_d ymm4_d;
sub ymm11_e ymm11_e ymm4_e;
sub ymm11_f ymm11_f ymm4_f;
(* vpaddw %ymm3,%ymm10,%ymm4                       #! PC = 0x555555559813 *)
add ymm4_0 ymm10_0 ymm3_0;
add ymm4_1 ymm10_1 ymm3_1;
add ymm4_2 ymm10_2 ymm3_2;
add ymm4_3 ymm10_3 ymm3_3;
add ymm4_4 ymm10_4 ymm3_4;
add ymm4_5 ymm10_5 ymm3_5;
add ymm4_6 ymm10_6 ymm3_6;
add ymm4_7 ymm10_7 ymm3_7;
add ymm4_8 ymm10_8 ymm3_8;
add ymm4_9 ymm10_9 ymm3_9;
add ymm4_a ymm10_a ymm3_a;
add ymm4_b ymm10_b ymm3_b;
add ymm4_c ymm10_c ymm3_c;
add ymm4_d ymm10_d ymm3_d;
add ymm4_e ymm10_e ymm3_e;
add ymm4_f ymm10_f ymm3_f;
(* vpsubw %ymm3,%ymm10,%ymm3                       #! PC = 0x555555559817 *)
sub ymm3_0 ymm10_0 ymm3_0;
sub ymm3_1 ymm10_1 ymm3_1;
sub ymm3_2 ymm10_2 ymm3_2;
sub ymm3_3 ymm10_3 ymm3_3;
sub ymm3_4 ymm10_4 ymm3_4;
sub ymm3_5 ymm10_5 ymm3_5;
sub ymm3_6 ymm10_6 ymm3_6;
sub ymm3_7 ymm10_7 ymm3_7;
sub ymm3_8 ymm10_8 ymm3_8;
sub ymm3_9 ymm10_9 ymm3_9;
sub ymm3_a ymm10_a ymm3_a;
sub ymm3_b ymm10_b ymm3_b;
sub ymm3_c ymm10_c ymm3_c;
sub ymm3_d ymm10_d ymm3_d;
sub ymm3_e ymm10_e ymm3_e;
sub ymm3_f ymm10_f ymm3_f;
(* vpaddw %ymm6,%ymm9,%ymm10                       #! PC = 0x55555555981b *)
add ymm10_0 ymm9_0 ymm6_0;
add ymm10_1 ymm9_1 ymm6_1;
add ymm10_2 ymm9_2 ymm6_2;
add ymm10_3 ymm9_3 ymm6_3;
add ymm10_4 ymm9_4 ymm6_4;
add ymm10_5 ymm9_5 ymm6_5;
add ymm10_6 ymm9_6 ymm6_6;
add ymm10_7 ymm9_7 ymm6_7;
add ymm10_8 ymm9_8 ymm6_8;
add ymm10_9 ymm9_9 ymm6_9;
add ymm10_a ymm9_a ymm6_a;
add ymm10_b ymm9_b ymm6_b;
add ymm10_c ymm9_c ymm6_c;
add ymm10_d ymm9_d ymm6_d;
add ymm10_e ymm9_e ymm6_e;
add ymm10_f ymm9_f ymm6_f;
(* vpsubw %ymm6,%ymm9,%ymm6                        #! PC = 0x55555555981f *)
sub ymm6_0 ymm9_0 ymm6_0;
sub ymm6_1 ymm9_1 ymm6_1;
sub ymm6_2 ymm9_2 ymm6_2;
sub ymm6_3 ymm9_3 ymm6_3;
sub ymm6_4 ymm9_4 ymm6_4;
sub ymm6_5 ymm9_5 ymm6_5;
sub ymm6_6 ymm9_6 ymm6_6;
sub ymm6_7 ymm9_7 ymm6_7;
sub ymm6_8 ymm9_8 ymm6_8;
sub ymm6_9 ymm9_9 ymm6_9;
sub ymm6_a ymm9_a ymm6_a;
sub ymm6_b ymm9_b ymm6_b;
sub ymm6_c ymm9_c ymm6_c;
sub ymm6_d ymm9_d ymm6_d;
sub ymm6_e ymm9_e ymm6_e;
sub ymm6_f ymm9_f ymm6_f;
(* vpaddw %ymm8,%ymm7,%ymm9                        #! PC = 0x555555559823 *)
add ymm9_0 ymm7_0 ymm8_0;
add ymm9_1 ymm7_1 ymm8_1;
add ymm9_2 ymm7_2 ymm8_2;
add ymm9_3 ymm7_3 ymm8_3;
add ymm9_4 ymm7_4 ymm8_4;
add ymm9_5 ymm7_5 ymm8_5;
add ymm9_6 ymm7_6 ymm8_6;
add ymm9_7 ymm7_7 ymm8_7;
add ymm9_8 ymm7_8 ymm8_8;
add ymm9_9 ymm7_9 ymm8_9;
add ymm9_a ymm7_a ymm8_a;
add ymm9_b ymm7_b ymm8_b;
add ymm9_c ymm7_c ymm8_c;
add ymm9_d ymm7_d ymm8_d;
add ymm9_e ymm7_e ymm8_e;
add ymm9_f ymm7_f ymm8_f;
(* vpsubw %ymm8,%ymm7,%ymm8                        #! PC = 0x555555559828 *)
sub ymm8_0 ymm7_0 ymm8_0;
sub ymm8_1 ymm7_1 ymm8_1;
sub ymm8_2 ymm7_2 ymm8_2;
sub ymm8_3 ymm7_3 ymm8_3;
sub ymm8_4 ymm7_4 ymm8_4;
sub ymm8_5 ymm7_5 ymm8_5;
sub ymm8_6 ymm7_6 ymm8_6;
sub ymm8_7 ymm7_7 ymm8_7;
sub ymm8_8 ymm7_8 ymm8_8;
sub ymm8_9 ymm7_9 ymm8_9;
sub ymm8_a ymm7_a ymm8_a;
sub ymm8_b ymm7_b ymm8_b;
sub ymm8_c ymm7_c ymm8_c;
sub ymm8_d ymm7_d ymm8_d;
sub ymm8_e ymm7_e ymm8_e;
sub ymm8_f ymm7_f ymm8_f;
(* vpaddw %ymm11,%ymm5,%ymm7                       #! PC = 0x55555555982d *)
add ymm7_0 ymm5_0 ymm11_0;
add ymm7_1 ymm5_1 ymm11_1;
add ymm7_2 ymm5_2 ymm11_2;
add ymm7_3 ymm5_3 ymm11_3;
add ymm7_4 ymm5_4 ymm11_4;
add ymm7_5 ymm5_5 ymm11_5;
add ymm7_6 ymm5_6 ymm11_6;
add ymm7_7 ymm5_7 ymm11_7;
add ymm7_8 ymm5_8 ymm11_8;
add ymm7_9 ymm5_9 ymm11_9;
add ymm7_a ymm5_a ymm11_a;
add ymm7_b ymm5_b ymm11_b;
add ymm7_c ymm5_c ymm11_c;
add ymm7_d ymm5_d ymm11_d;
add ymm7_e ymm5_e ymm11_e;
add ymm7_f ymm5_f ymm11_f;
(* vpsubw %ymm11,%ymm5,%ymm11                      #! PC = 0x555555559832 *)
sub ymm11_0 ymm5_0 ymm11_0;
sub ymm11_1 ymm5_1 ymm11_1;
sub ymm11_2 ymm5_2 ymm11_2;
sub ymm11_3 ymm5_3 ymm11_3;
sub ymm11_4 ymm5_4 ymm11_4;
sub ymm11_5 ymm5_5 ymm11_5;
sub ymm11_6 ymm5_6 ymm11_6;
sub ymm11_7 ymm5_7 ymm11_7;
sub ymm11_8 ymm5_8 ymm11_8;
sub ymm11_9 ymm5_9 ymm11_9;
sub ymm11_a ymm5_a ymm11_a;
sub ymm11_b ymm5_b ymm11_b;
sub ymm11_c ymm5_c ymm11_c;
sub ymm11_d ymm5_d ymm11_d;
sub ymm11_e ymm5_e ymm11_e;
sub ymm11_f ymm5_f ymm11_f;
(* vpunpcklwd %ymm3,%ymm4,%ymm5                    #! PC = 0x555555559837 *)
mov lwd_0 ymm4_0;
mov lwd_1 ymm3_0;
mov lwd_2 ymm4_1;
mov lwd_3 ymm3_1;
mov lwd_4 ymm4_2;
mov lwd_5 ymm3_2;
mov lwd_6 ymm4_3;
mov lwd_7 ymm3_3;
mov lwd_8 ymm4_8;
mov lwd_9 ymm3_8;
mov lwd_a ymm4_9;
mov lwd_b ymm3_9;
mov lwd_c ymm4_a;
mov lwd_d ymm3_a;
mov lwd_e ymm4_b;
mov lwd_f ymm3_b;
mov ymm5_0 lwd_0;
mov ymm5_1 lwd_1;
mov ymm5_2 lwd_2;
mov ymm5_3 lwd_3;
mov ymm5_4 lwd_4;
mov ymm5_5 lwd_5;
mov ymm5_6 lwd_6;
mov ymm5_7 lwd_7;
mov ymm5_8 lwd_8;
mov ymm5_9 lwd_9;
mov ymm5_a lwd_a;
mov ymm5_b lwd_b;
mov ymm5_c lwd_c;
mov ymm5_d lwd_d;
mov ymm5_e lwd_e;
mov ymm5_f lwd_f;
(* vpunpckhwd %ymm3,%ymm4,%ymm3                    #! PC = 0x55555555983b *)
mov hwd_0 ymm4_4;
mov hwd_1 ymm3_4;
mov hwd_2 ymm4_5;
mov hwd_3 ymm3_5;
mov hwd_4 ymm4_6;
mov hwd_5 ymm3_6;
mov hwd_6 ymm4_7;
mov hwd_7 ymm3_7;
mov hwd_8 ymm4_c;
mov hwd_9 ymm3_c;
mov hwd_a ymm4_d;
mov hwd_b ymm3_d;
mov hwd_c ymm4_e;
mov hwd_d ymm3_e;
mov hwd_e ymm4_f;
mov hwd_f ymm3_f;
mov ymm3_0 hwd_0;
mov ymm3_1 hwd_1;
mov ymm3_2 hwd_2;
mov ymm3_3 hwd_3;
mov ymm3_4 hwd_4;
mov ymm3_5 hwd_5;
mov ymm3_6 hwd_6;
mov ymm3_7 hwd_7;
mov ymm3_8 hwd_8;
mov ymm3_9 hwd_9;
mov ymm3_a hwd_a;
mov ymm3_b hwd_b;
mov ymm3_c hwd_c;
mov ymm3_d hwd_d;
mov ymm3_e hwd_e;
mov ymm3_f hwd_f;
(* vpunpcklwd %ymm6,%ymm10,%ymm4                   #! PC = 0x55555555983f *)
mov lwd_0 ymm10_0;
mov lwd_1 ymm6_0;
mov lwd_2 ymm10_1;
mov lwd_3 ymm6_1;
mov lwd_4 ymm10_2;
mov lwd_5 ymm6_2;
mov lwd_6 ymm10_3;
mov lwd_7 ymm6_3;
mov lwd_8 ymm10_8;
mov lwd_9 ymm6_8;
mov lwd_a ymm10_9;
mov lwd_b ymm6_9;
mov lwd_c ymm10_a;
mov lwd_d ymm6_a;
mov lwd_e ymm10_b;
mov lwd_f ymm6_b;
mov ymm4_0 lwd_0;
mov ymm4_1 lwd_1;
mov ymm4_2 lwd_2;
mov ymm4_3 lwd_3;
mov ymm4_4 lwd_4;
mov ymm4_5 lwd_5;
mov ymm4_6 lwd_6;
mov ymm4_7 lwd_7;
mov ymm4_8 lwd_8;
mov ymm4_9 lwd_9;
mov ymm4_a lwd_a;
mov ymm4_b lwd_b;
mov ymm4_c lwd_c;
mov ymm4_d lwd_d;
mov ymm4_e lwd_e;
mov ymm4_f lwd_f;
(* vpunpckhwd %ymm6,%ymm10,%ymm6                   #! PC = 0x555555559843 *)
mov hwd_0 ymm10_4;
mov hwd_1 ymm6_4;
mov hwd_2 ymm10_5;
mov hwd_3 ymm6_5;
mov hwd_4 ymm10_6;
mov hwd_5 ymm6_6;
mov hwd_6 ymm10_7;
mov hwd_7 ymm6_7;
mov hwd_8 ymm10_c;
mov hwd_9 ymm6_c;
mov hwd_a ymm10_d;
mov hwd_b ymm6_d;
mov hwd_c ymm10_e;
mov hwd_d ymm6_e;
mov hwd_e ymm10_f;
mov hwd_f ymm6_f;
mov ymm6_0 hwd_0;
mov ymm6_1 hwd_1;
mov ymm6_2 hwd_2;
mov ymm6_3 hwd_3;
mov ymm6_4 hwd_4;
mov ymm6_5 hwd_5;
mov ymm6_6 hwd_6;
mov ymm6_7 hwd_7;
mov ymm6_8 hwd_8;
mov ymm6_9 hwd_9;
mov ymm6_a hwd_a;
mov ymm6_b hwd_b;
mov ymm6_c hwd_c;
mov ymm6_d hwd_d;
mov ymm6_e hwd_e;
mov ymm6_f hwd_f;
(* vpunpcklwd %ymm8,%ymm9,%ymm10                   #! PC = 0x555555559847 *)
mov lwd_0 ymm9_0;
mov lwd_1 ymm8_0;
mov lwd_2 ymm9_1;
mov lwd_3 ymm8_1;
mov lwd_4 ymm9_2;
mov lwd_5 ymm8_2;
mov lwd_6 ymm9_3;
mov lwd_7 ymm8_3;
mov lwd_8 ymm9_8;
mov lwd_9 ymm8_8;
mov lwd_a ymm9_9;
mov lwd_b ymm8_9;
mov lwd_c ymm9_a;
mov lwd_d ymm8_a;
mov lwd_e ymm9_b;
mov lwd_f ymm8_b;
mov ymm10_0 lwd_0;
mov ymm10_1 lwd_1;
mov ymm10_2 lwd_2;
mov ymm10_3 lwd_3;
mov ymm10_4 lwd_4;
mov ymm10_5 lwd_5;
mov ymm10_6 lwd_6;
mov ymm10_7 lwd_7;
mov ymm10_8 lwd_8;
mov ymm10_9 lwd_9;
mov ymm10_a lwd_a;
mov ymm10_b lwd_b;
mov ymm10_c lwd_c;
mov ymm10_d lwd_d;
mov ymm10_e lwd_e;
mov ymm10_f lwd_f;
(* vpunpckhwd %ymm8,%ymm9,%ymm8                    #! PC = 0x55555555984c *)
mov hwd_0 ymm9_4;
mov hwd_1 ymm8_4;
mov hwd_2 ymm9_5;
mov hwd_3 ymm8_5;
mov hwd_4 ymm9_6;
mov hwd_5 ymm8_6;
mov hwd_6 ymm9_7;
mov hwd_7 ymm8_7;
mov hwd_8 ymm9_c;
mov hwd_9 ymm8_c;
mov hwd_a ymm9_d;
mov hwd_b ymm8_d;
mov hwd_c ymm9_e;
mov hwd_d ymm8_e;
mov hwd_e ymm9_f;
mov hwd_f ymm8_f;
mov ymm8_0 hwd_0;
mov ymm8_1 hwd_1;
mov ymm8_2 hwd_2;
mov ymm8_3 hwd_3;
mov ymm8_4 hwd_4;
mov ymm8_5 hwd_5;
mov ymm8_6 hwd_6;
mov ymm8_7 hwd_7;
mov ymm8_8 hwd_8;
mov ymm8_9 hwd_9;
mov ymm8_a hwd_a;
mov ymm8_b hwd_b;
mov ymm8_c hwd_c;
mov ymm8_d hwd_d;
mov ymm8_e hwd_e;
mov ymm8_f hwd_f;
(* vpunpcklwd %ymm11,%ymm7,%ymm9                   #! PC = 0x555555559851 *)
mov lwd_0 ymm7_0;
mov lwd_1 ymm11_0;
mov lwd_2 ymm7_1;
mov lwd_3 ymm11_1;
mov lwd_4 ymm7_2;
mov lwd_5 ymm11_2;
mov lwd_6 ymm7_3;
mov lwd_7 ymm11_3;
mov lwd_8 ymm7_8;
mov lwd_9 ymm11_8;
mov lwd_a ymm7_9;
mov lwd_b ymm11_9;
mov lwd_c ymm7_a;
mov lwd_d ymm11_a;
mov lwd_e ymm7_b;
mov lwd_f ymm11_b;
mov ymm9_0 lwd_0;
mov ymm9_1 lwd_1;
mov ymm9_2 lwd_2;
mov ymm9_3 lwd_3;
mov ymm9_4 lwd_4;
mov ymm9_5 lwd_5;
mov ymm9_6 lwd_6;
mov ymm9_7 lwd_7;
mov ymm9_8 lwd_8;
mov ymm9_9 lwd_9;
mov ymm9_a lwd_a;
mov ymm9_b lwd_b;
mov ymm9_c lwd_c;
mov ymm9_d lwd_d;
mov ymm9_e lwd_e;
mov ymm9_f lwd_f;
(* vpunpckhwd %ymm11,%ymm7,%ymm11                  #! PC = 0x555555559856 *)
mov hwd_0 ymm7_4;
mov hwd_1 ymm11_4;
mov hwd_2 ymm7_5;
mov hwd_3 ymm11_5;
mov hwd_4 ymm7_6;
mov hwd_5 ymm11_6;
mov hwd_6 ymm7_7;
mov hwd_7 ymm11_7;
mov hwd_8 ymm7_c;
mov hwd_9 ymm11_c;
mov hwd_a ymm7_d;
mov hwd_b ymm11_d;
mov hwd_c ymm7_e;
mov hwd_d ymm11_e;
mov hwd_e ymm7_f;
mov hwd_f ymm11_f;
mov ymm11_0 hwd_0;
mov ymm11_1 hwd_1;
mov ymm11_2 hwd_2;
mov ymm11_3 hwd_3;
mov ymm11_4 hwd_4;
mov ymm11_5 hwd_5;
mov ymm11_6 hwd_6;
mov ymm11_7 hwd_7;
mov ymm11_8 hwd_8;
mov ymm11_9 hwd_9;
mov ymm11_a hwd_a;
mov ymm11_b hwd_b;
mov ymm11_c hwd_c;
mov ymm11_d hwd_d;
mov ymm11_e hwd_e;
mov ymm11_f hwd_f;
(* vpbroadcastq 0x1c0(%rdx),%ymm1                  #! EA = L0x5555555612e0; Value = 0xd1bedd9fe4be00b1; PC = 0x55555555985b *)
mov ymm1_0 L0x5555555612e0;
mov ymm1_1 L0x5555555612e2;
mov ymm1_2 L0x5555555612e4;
mov ymm1_3 L0x5555555612e6;
mov ymm1_4 L0x5555555612e0;
mov ymm1_5 L0x5555555612e2;
mov ymm1_6 L0x5555555612e4;
mov ymm1_7 L0x5555555612e6;
mov ymm1_8 L0x5555555612e0;
mov ymm1_9 L0x5555555612e2;
mov ymm1_a L0x5555555612e4;
mov ymm1_b L0x5555555612e6;
mov ymm1_c L0x5555555612e0;
mov ymm1_d L0x5555555612e2;
mov ymm1_e L0x5555555612e4;
mov ymm1_f L0x5555555612e6;
(* vpbroadcastq 0x3c0(%rdx),%ymm2                  #! EA = L0x5555555614e0; Value = 0xfdbef39f10be0ab1; PC = 0x555555559864 *)
mov ymm2_0 L0x5555555614e0;
mov ymm2_1 L0x5555555614e2;
mov ymm2_2 L0x5555555614e4;
mov ymm2_3 L0x5555555614e6;
mov ymm2_4 L0x5555555614e0;
mov ymm2_5 L0x5555555614e2;
mov ymm2_6 L0x5555555614e4;
mov ymm2_7 L0x5555555614e6;
mov ymm2_8 L0x5555555614e0;
mov ymm2_9 L0x5555555614e2;
mov ymm2_a L0x5555555614e4;
mov ymm2_b L0x5555555614e6;
mov ymm2_c L0x5555555614e0;
mov ymm2_d L0x5555555614e2;
mov ymm2_e L0x5555555614e4;
mov ymm2_f L0x5555555614e6;
(* vpmullw %ymm1,%ymm3,%ymm7                       #! PC = 0x55555555986d *)
smull mulHymm3_0 mulL_0 ymm1_0 ymm3_0;
smull mulHymm3_1 mulL_1 ymm1_1 ymm3_1;
smull mulHymm3_2 mulL_2 ymm1_2 ymm3_2;
smull mulHymm3_3 mulL_3 ymm1_3 ymm3_3;
smull mulHymm3_4 mulL_4 ymm1_4 ymm3_4;
smull mulHymm3_5 mulL_5 ymm1_5 ymm3_5;
smull mulHymm3_6 mulL_6 ymm1_6 ymm3_6;
smull mulHymm3_7 mulL_7 ymm1_7 ymm3_7;
smull mulHymm3_8 mulL_8 ymm1_8 ymm3_8;
smull mulHymm3_9 mulL_9 ymm1_9 ymm3_9;
smull mulHymm3_a mulL_a ymm1_a ymm3_a;
smull mulHymm3_b mulL_b ymm1_b ymm3_b;
smull mulHymm3_c mulL_c ymm1_c ymm3_c;
smull mulHymm3_d mulL_d ymm1_d ymm3_d;
smull mulHymm3_e mulL_e ymm1_e ymm3_e;
smull mulHymm3_f mulL_f ymm1_f ymm3_f;
cast ymm7_0@sint16 mulL_0;
cast ymm7_1@sint16 mulL_1;
cast ymm7_2@sint16 mulL_2;
cast ymm7_3@sint16 mulL_3;
cast ymm7_4@sint16 mulL_4;
cast ymm7_5@sint16 mulL_5;
cast ymm7_6@sint16 mulL_6;
cast ymm7_7@sint16 mulL_7;
cast ymm7_8@sint16 mulL_8;
cast ymm7_9@sint16 mulL_9;
cast ymm7_a@sint16 mulL_a;
cast ymm7_b@sint16 mulL_b;
cast ymm7_c@sint16 mulL_c;
cast ymm7_d@sint16 mulL_d;
cast ymm7_e@sint16 mulL_e;
cast ymm7_f@sint16 mulL_f;
(* vpmulhw %ymm2,%ymm3,%ymm3                       #! PC = 0x555555559871 *)
smull mulH_0 mulLymm3_0 ymm3_0 ymm2_0;
smull mulH_1 mulLymm3_1 ymm3_1 ymm2_1;
smull mulH_2 mulLymm3_2 ymm3_2 ymm2_2;
smull mulH_3 mulLymm3_3 ymm3_3 ymm2_3;
smull mulH_4 mulLymm3_4 ymm3_4 ymm2_4;
smull mulH_5 mulLymm3_5 ymm3_5 ymm2_5;
smull mulH_6 mulLymm3_6 ymm3_6 ymm2_6;
smull mulH_7 mulLymm3_7 ymm3_7 ymm2_7;
smull mulH_8 mulLymm3_8 ymm3_8 ymm2_8;
smull mulH_9 mulLymm3_9 ymm3_9 ymm2_9;
smull mulH_a mulLymm3_a ymm3_a ymm2_a;
smull mulH_b mulLymm3_b ymm3_b ymm2_b;
smull mulH_c mulLymm3_c ymm3_c ymm2_c;
smull mulH_d mulLymm3_d ymm3_d ymm2_d;
smull mulH_e mulLymm3_e ymm3_e ymm2_e;
smull mulH_f mulLymm3_f ymm3_f ymm2_f;
mov ymm3_0 mulH_0;
mov ymm3_1 mulH_1;
mov ymm3_2 mulH_2;
mov ymm3_3 mulH_3;
mov ymm3_4 mulH_4;
mov ymm3_5 mulH_5;
mov ymm3_6 mulH_6;
mov ymm3_7 mulH_7;
mov ymm3_8 mulH_8;
mov ymm3_9 mulH_9;
mov ymm3_a mulH_a;
mov ymm3_b mulH_b;
mov ymm3_c mulH_c;
mov ymm3_d mulH_d;
mov ymm3_e mulH_e;
mov ymm3_f mulH_f;
(* vpmulhw %ymm0,%ymm7,%ymm7                       #! PC = 0x555555559875 *)
smull mulH_0 red_0 ymm7_0 ymm0_0;
assert true && red_0 = mulLymm3_0;
assume red_0 = mulLymm3_0 && true;
smull mulH_1 red_1 ymm7_1 ymm0_1;
assert true && red_1 = mulLymm3_1;
assume red_1 = mulLymm3_1 && true;
smull mulH_2 red_2 ymm7_2 ymm0_2;
assert true && red_2 = mulLymm3_2;
assume red_2 = mulLymm3_2 && true;
smull mulH_3 red_3 ymm7_3 ymm0_3;
assert true && red_3 = mulLymm3_3;
assume red_3 = mulLymm3_3 && true;
smull mulH_4 red_4 ymm7_4 ymm0_4;
assert true && red_4 = mulLymm3_4;
assume red_4 = mulLymm3_4 && true;
smull mulH_5 red_5 ymm7_5 ymm0_5;
assert true && red_5 = mulLymm3_5;
assume red_5 = mulLymm3_5 && true;
smull mulH_6 red_6 ymm7_6 ymm0_6;
assert true && red_6 = mulLymm3_6;
assume red_6 = mulLymm3_6 && true;
smull mulH_7 red_7 ymm7_7 ymm0_7;
assert true && red_7 = mulLymm3_7;
assume red_7 = mulLymm3_7 && true;
smull mulH_8 red_8 ymm7_8 ymm0_8;
assert true && red_8 = mulLymm3_8;
assume red_8 = mulLymm3_8 && true;
smull mulH_9 red_9 ymm7_9 ymm0_9;
assert true && red_9 = mulLymm3_9;
assume red_9 = mulLymm3_9 && true;
smull mulH_a red_a ymm7_a ymm0_a;
assert true && red_a = mulLymm3_a;
assume red_a = mulLymm3_a && true;
smull mulH_b red_b ymm7_b ymm0_b;
assert true && red_b = mulLymm3_b;
assume red_b = mulLymm3_b && true;
smull mulH_c red_c ymm7_c ymm0_c;
assert true && red_c = mulLymm3_c;
assume red_c = mulLymm3_c && true;
smull mulH_d red_d ymm7_d ymm0_d;
assert true && red_d = mulLymm3_d;
assume red_d = mulLymm3_d && true;
smull mulH_e red_e ymm7_e ymm0_e;
assert true && red_e = mulLymm3_e;
assume red_e = mulLymm3_e && true;
smull mulH_f red_f ymm7_f ymm0_f;
assert true && red_f = mulLymm3_f;
assume red_f = mulLymm3_f && true;
mov ymm7_0 mulH_0;
mov ymm7_1 mulH_1;
mov ymm7_2 mulH_2;
mov ymm7_3 mulH_3;
mov ymm7_4 mulH_4;
mov ymm7_5 mulH_5;
mov ymm7_6 mulH_6;
mov ymm7_7 mulH_7;
mov ymm7_8 mulH_8;
mov ymm7_9 mulH_9;
mov ymm7_a mulH_a;
mov ymm7_b mulH_b;
mov ymm7_c mulH_c;
mov ymm7_d mulH_d;
mov ymm7_e mulH_e;
mov ymm7_f mulH_f;
(* vpsubw %ymm7,%ymm3,%ymm3                        #! PC = 0x555555559879 *)
sub ymm3_0 ymm3_0 ymm7_0;
sub ymm3_1 ymm3_1 ymm7_1;
sub ymm3_2 ymm3_2 ymm7_2;
sub ymm3_3 ymm3_3 ymm7_3;
sub ymm3_4 ymm3_4 ymm7_4;
sub ymm3_5 ymm3_5 ymm7_5;
sub ymm3_6 ymm3_6 ymm7_6;
sub ymm3_7 ymm3_7 ymm7_7;
sub ymm3_8 ymm3_8 ymm7_8;
sub ymm3_9 ymm3_9 ymm7_9;
sub ymm3_a ymm3_a ymm7_a;
sub ymm3_b ymm3_b ymm7_b;
sub ymm3_c ymm3_c ymm7_c;
sub ymm3_d ymm3_d ymm7_d;
sub ymm3_e ymm3_e ymm7_e;
sub ymm3_f ymm3_f ymm7_f;
(* vpbroadcastq 0x1c8(%rdx),%ymm1                  #! EA = L0x5555555612e8; Value = 0x3a976190558488ae; PC = 0x55555555987d *)
mov ymm1_0 L0x5555555612e8;
mov ymm1_1 L0x5555555612ea;
mov ymm1_2 L0x5555555612ec;
mov ymm1_3 L0x5555555612ee;
mov ymm1_4 L0x5555555612e8;
mov ymm1_5 L0x5555555612ea;
mov ymm1_6 L0x5555555612ec;
mov ymm1_7 L0x5555555612ee;
mov ymm1_8 L0x5555555612e8;
mov ymm1_9 L0x5555555612ea;
mov ymm1_a L0x5555555612ec;
mov ymm1_b L0x5555555612ee;
mov ymm1_c L0x5555555612e8;
mov ymm1_d L0x5555555612ea;
mov ymm1_e L0x5555555612ec;
mov ymm1_f L0x5555555612ee;
(* vpbroadcastq 0x3c8(%rdx),%ymm2                  #! EA = L0x5555555614e8; Value = 0x00970190fd8414ae; PC = 0x555555559886 *)
mov ymm2_0 L0x5555555614e8;
mov ymm2_1 L0x5555555614ea;
mov ymm2_2 L0x5555555614ec;
mov ymm2_3 L0x5555555614ee;
mov ymm2_4 L0x5555555614e8;
mov ymm2_5 L0x5555555614ea;
mov ymm2_6 L0x5555555614ec;
mov ymm2_7 L0x5555555614ee;
mov ymm2_8 L0x5555555614e8;
mov ymm2_9 L0x5555555614ea;
mov ymm2_a L0x5555555614ec;
mov ymm2_b L0x5555555614ee;
mov ymm2_c L0x5555555614e8;
mov ymm2_d L0x5555555614ea;
mov ymm2_e L0x5555555614ec;
mov ymm2_f L0x5555555614ee;
(* vpmullw %ymm1,%ymm6,%ymm7                       #! PC = 0x55555555988f *)
smull mulHymm6_0 mulL_0 ymm1_0 ymm6_0;
smull mulHymm6_1 mulL_1 ymm1_1 ymm6_1;
smull mulHymm6_2 mulL_2 ymm1_2 ymm6_2;
smull mulHymm6_3 mulL_3 ymm1_3 ymm6_3;
smull mulHymm6_4 mulL_4 ymm1_4 ymm6_4;
smull mulHymm6_5 mulL_5 ymm1_5 ymm6_5;
smull mulHymm6_6 mulL_6 ymm1_6 ymm6_6;
smull mulHymm6_7 mulL_7 ymm1_7 ymm6_7;
smull mulHymm6_8 mulL_8 ymm1_8 ymm6_8;
smull mulHymm6_9 mulL_9 ymm1_9 ymm6_9;
smull mulHymm6_a mulL_a ymm1_a ymm6_a;
smull mulHymm6_b mulL_b ymm1_b ymm6_b;
smull mulHymm6_c mulL_c ymm1_c ymm6_c;
smull mulHymm6_d mulL_d ymm1_d ymm6_d;
smull mulHymm6_e mulL_e ymm1_e ymm6_e;
smull mulHymm6_f mulL_f ymm1_f ymm6_f;
cast ymm7_0@sint16 mulL_0;
cast ymm7_1@sint16 mulL_1;
cast ymm7_2@sint16 mulL_2;
cast ymm7_3@sint16 mulL_3;
cast ymm7_4@sint16 mulL_4;
cast ymm7_5@sint16 mulL_5;
cast ymm7_6@sint16 mulL_6;
cast ymm7_7@sint16 mulL_7;
cast ymm7_8@sint16 mulL_8;
cast ymm7_9@sint16 mulL_9;
cast ymm7_a@sint16 mulL_a;
cast ymm7_b@sint16 mulL_b;
cast ymm7_c@sint16 mulL_c;
cast ymm7_d@sint16 mulL_d;
cast ymm7_e@sint16 mulL_e;
cast ymm7_f@sint16 mulL_f;
(* vpmulhw %ymm2,%ymm6,%ymm6                       #! PC = 0x555555559893 *)
smull mulH_0 mulLymm6_0 ymm6_0 ymm2_0;
smull mulH_1 mulLymm6_1 ymm6_1 ymm2_1;
smull mulH_2 mulLymm6_2 ymm6_2 ymm2_2;
smull mulH_3 mulLymm6_3 ymm6_3 ymm2_3;
smull mulH_4 mulLymm6_4 ymm6_4 ymm2_4;
smull mulH_5 mulLymm6_5 ymm6_5 ymm2_5;
smull mulH_6 mulLymm6_6 ymm6_6 ymm2_6;
smull mulH_7 mulLymm6_7 ymm6_7 ymm2_7;
smull mulH_8 mulLymm6_8 ymm6_8 ymm2_8;
smull mulH_9 mulLymm6_9 ymm6_9 ymm2_9;
smull mulH_a mulLymm6_a ymm6_a ymm2_a;
smull mulH_b mulLymm6_b ymm6_b ymm2_b;
smull mulH_c mulLymm6_c ymm6_c ymm2_c;
smull mulH_d mulLymm6_d ymm6_d ymm2_d;
smull mulH_e mulLymm6_e ymm6_e ymm2_e;
smull mulH_f mulLymm6_f ymm6_f ymm2_f;
mov ymm6_0 mulH_0;
mov ymm6_1 mulH_1;
mov ymm6_2 mulH_2;
mov ymm6_3 mulH_3;
mov ymm6_4 mulH_4;
mov ymm6_5 mulH_5;
mov ymm6_6 mulH_6;
mov ymm6_7 mulH_7;
mov ymm6_8 mulH_8;
mov ymm6_9 mulH_9;
mov ymm6_a mulH_a;
mov ymm6_b mulH_b;
mov ymm6_c mulH_c;
mov ymm6_d mulH_d;
mov ymm6_e mulH_e;
mov ymm6_f mulH_f;
(* vpmulhw %ymm0,%ymm7,%ymm7                       #! PC = 0x555555559897 *)
smull mulH_0 red_0 ymm7_0 ymm0_0;
assert true && red_0 = mulLymm6_0;
assume red_0 = mulLymm6_0 && true;
smull mulH_1 red_1 ymm7_1 ymm0_1;
assert true && red_1 = mulLymm6_1;
assume red_1 = mulLymm6_1 && true;
smull mulH_2 red_2 ymm7_2 ymm0_2;
assert true && red_2 = mulLymm6_2;
assume red_2 = mulLymm6_2 && true;
smull mulH_3 red_3 ymm7_3 ymm0_3;
assert true && red_3 = mulLymm6_3;
assume red_3 = mulLymm6_3 && true;
smull mulH_4 red_4 ymm7_4 ymm0_4;
assert true && red_4 = mulLymm6_4;
assume red_4 = mulLymm6_4 && true;
smull mulH_5 red_5 ymm7_5 ymm0_5;
assert true && red_5 = mulLymm6_5;
assume red_5 = mulLymm6_5 && true;
smull mulH_6 red_6 ymm7_6 ymm0_6;
assert true && red_6 = mulLymm6_6;
assume red_6 = mulLymm6_6 && true;
smull mulH_7 red_7 ymm7_7 ymm0_7;
assert true && red_7 = mulLymm6_7;
assume red_7 = mulLymm6_7 && true;
smull mulH_8 red_8 ymm7_8 ymm0_8;
assert true && red_8 = mulLymm6_8;
assume red_8 = mulLymm6_8 && true;
smull mulH_9 red_9 ymm7_9 ymm0_9;
assert true && red_9 = mulLymm6_9;
assume red_9 = mulLymm6_9 && true;
smull mulH_a red_a ymm7_a ymm0_a;
assert true && red_a = mulLymm6_a;
assume red_a = mulLymm6_a && true;
smull mulH_b red_b ymm7_b ymm0_b;
assert true && red_b = mulLymm6_b;
assume red_b = mulLymm6_b && true;
smull mulH_c red_c ymm7_c ymm0_c;
assert true && red_c = mulLymm6_c;
assume red_c = mulLymm6_c && true;
smull mulH_d red_d ymm7_d ymm0_d;
assert true && red_d = mulLymm6_d;
assume red_d = mulLymm6_d && true;
smull mulH_e red_e ymm7_e ymm0_e;
assert true && red_e = mulLymm6_e;
assume red_e = mulLymm6_e && true;
smull mulH_f red_f ymm7_f ymm0_f;
assert true && red_f = mulLymm6_f;
assume red_f = mulLymm6_f && true;
mov ymm7_0 mulH_0;
mov ymm7_1 mulH_1;
mov ymm7_2 mulH_2;
mov ymm7_3 mulH_3;
mov ymm7_4 mulH_4;
mov ymm7_5 mulH_5;
mov ymm7_6 mulH_6;
mov ymm7_7 mulH_7;
mov ymm7_8 mulH_8;
mov ymm7_9 mulH_9;
mov ymm7_a mulH_a;
mov ymm7_b mulH_b;
mov ymm7_c mulH_c;
mov ymm7_d mulH_d;
mov ymm7_e mulH_e;
mov ymm7_f mulH_f;
(* vpsubw %ymm7,%ymm6,%ymm6                        #! PC = 0x55555555989b *)
sub ymm6_0 ymm6_0 ymm7_0;
sub ymm6_1 ymm6_1 ymm7_1;
sub ymm6_2 ymm6_2 ymm7_2;
sub ymm6_3 ymm6_3 ymm7_3;
sub ymm6_4 ymm6_4 ymm7_4;
sub ymm6_5 ymm6_5 ymm7_5;
sub ymm6_6 ymm6_6 ymm7_6;
sub ymm6_7 ymm6_7 ymm7_7;
sub ymm6_8 ymm6_8 ymm7_8;
sub ymm6_9 ymm6_9 ymm7_9;
sub ymm6_a ymm6_a ymm7_a;
sub ymm6_b ymm6_b ymm7_b;
sub ymm6_c ymm6_c ymm7_c;
sub ymm6_d ymm6_d ymm7_d;
sub ymm6_e ymm6_e ymm7_e;
sub ymm6_f ymm6_f ymm7_f;
(* vpbroadcastq 0x1d0(%rdx),%ymm1                  #! EA = L0x5555555612f0; Value = 0x7aba08121eb01cbc; PC = 0x55555555989f *)
mov ymm1_0 L0x5555555612f0;
mov ymm1_1 L0x5555555612f2;
mov ymm1_2 L0x5555555612f4;
mov ymm1_3 L0x5555555612f6;
mov ymm1_4 L0x5555555612f0;
mov ymm1_5 L0x5555555612f2;
mov ymm1_6 L0x5555555612f4;
mov ymm1_7 L0x5555555612f6;
mov ymm1_8 L0x5555555612f0;
mov ymm1_9 L0x5555555612f2;
mov ymm1_a L0x5555555612f4;
mov ymm1_b L0x5555555612f6;
mov ymm1_c L0x5555555612f0;
mov ymm1_d L0x5555555612f2;
mov ymm1_e L0x5555555612f4;
mov ymm1_f L0x5555555612f6;
(* vpbroadcastq 0x3d0(%rdx),%ymm2                  #! EA = L0x5555555614f0; Value = 0xfebafc12feb0f4bc; PC = 0x5555555598a8 *)
mov ymm2_0 L0x5555555614f0;
mov ymm2_1 L0x5555555614f2;
mov ymm2_2 L0x5555555614f4;
mov ymm2_3 L0x5555555614f6;
mov ymm2_4 L0x5555555614f0;
mov ymm2_5 L0x5555555614f2;
mov ymm2_6 L0x5555555614f4;
mov ymm2_7 L0x5555555614f6;
mov ymm2_8 L0x5555555614f0;
mov ymm2_9 L0x5555555614f2;
mov ymm2_a L0x5555555614f4;
mov ymm2_b L0x5555555614f6;
mov ymm2_c L0x5555555614f0;
mov ymm2_d L0x5555555614f2;
mov ymm2_e L0x5555555614f4;
mov ymm2_f L0x5555555614f6;
(* vpmullw %ymm1,%ymm8,%ymm7                       #! PC = 0x5555555598b1 *)
smull mulHymm8_0 mulL_0 ymm1_0 ymm8_0;
smull mulHymm8_1 mulL_1 ymm1_1 ymm8_1;
smull mulHymm8_2 mulL_2 ymm1_2 ymm8_2;
smull mulHymm8_3 mulL_3 ymm1_3 ymm8_3;
smull mulHymm8_4 mulL_4 ymm1_4 ymm8_4;
smull mulHymm8_5 mulL_5 ymm1_5 ymm8_5;
smull mulHymm8_6 mulL_6 ymm1_6 ymm8_6;
smull mulHymm8_7 mulL_7 ymm1_7 ymm8_7;
smull mulHymm8_8 mulL_8 ymm1_8 ymm8_8;
smull mulHymm8_9 mulL_9 ymm1_9 ymm8_9;
smull mulHymm8_a mulL_a ymm1_a ymm8_a;
smull mulHymm8_b mulL_b ymm1_b ymm8_b;
smull mulHymm8_c mulL_c ymm1_c ymm8_c;
smull mulHymm8_d mulL_d ymm1_d ymm8_d;
smull mulHymm8_e mulL_e ymm1_e ymm8_e;
smull mulHymm8_f mulL_f ymm1_f ymm8_f;
cast ymm7_0@sint16 mulL_0;
cast ymm7_1@sint16 mulL_1;
cast ymm7_2@sint16 mulL_2;
cast ymm7_3@sint16 mulL_3;
cast ymm7_4@sint16 mulL_4;
cast ymm7_5@sint16 mulL_5;
cast ymm7_6@sint16 mulL_6;
cast ymm7_7@sint16 mulL_7;
cast ymm7_8@sint16 mulL_8;
cast ymm7_9@sint16 mulL_9;
cast ymm7_a@sint16 mulL_a;
cast ymm7_b@sint16 mulL_b;
cast ymm7_c@sint16 mulL_c;
cast ymm7_d@sint16 mulL_d;
cast ymm7_e@sint16 mulL_e;
cast ymm7_f@sint16 mulL_f;
(* vpmulhw %ymm2,%ymm8,%ymm8                       #! PC = 0x5555555598b5 *)
smull mulH_0 mulLymm8_0 ymm8_0 ymm2_0;
smull mulH_1 mulLymm8_1 ymm8_1 ymm2_1;
smull mulH_2 mulLymm8_2 ymm8_2 ymm2_2;
smull mulH_3 mulLymm8_3 ymm8_3 ymm2_3;
smull mulH_4 mulLymm8_4 ymm8_4 ymm2_4;
smull mulH_5 mulLymm8_5 ymm8_5 ymm2_5;
smull mulH_6 mulLymm8_6 ymm8_6 ymm2_6;
smull mulH_7 mulLymm8_7 ymm8_7 ymm2_7;
smull mulH_8 mulLymm8_8 ymm8_8 ymm2_8;
smull mulH_9 mulLymm8_9 ymm8_9 ymm2_9;
smull mulH_a mulLymm8_a ymm8_a ymm2_a;
smull mulH_b mulLymm8_b ymm8_b ymm2_b;
smull mulH_c mulLymm8_c ymm8_c ymm2_c;
smull mulH_d mulLymm8_d ymm8_d ymm2_d;
smull mulH_e mulLymm8_e ymm8_e ymm2_e;
smull mulH_f mulLymm8_f ymm8_f ymm2_f;
mov ymm8_0 mulH_0;
mov ymm8_1 mulH_1;
mov ymm8_2 mulH_2;
mov ymm8_3 mulH_3;
mov ymm8_4 mulH_4;
mov ymm8_5 mulH_5;
mov ymm8_6 mulH_6;
mov ymm8_7 mulH_7;
mov ymm8_8 mulH_8;
mov ymm8_9 mulH_9;
mov ymm8_a mulH_a;
mov ymm8_b mulH_b;
mov ymm8_c mulH_c;
mov ymm8_d mulH_d;
mov ymm8_e mulH_e;
mov ymm8_f mulH_f;
(* vpmulhw %ymm0,%ymm7,%ymm7                       #! PC = 0x5555555598b9 *)
smull mulH_0 red_0 ymm7_0 ymm0_0;
assert true && red_0 = mulLymm8_0;
assume red_0 = mulLymm8_0 && true;
smull mulH_1 red_1 ymm7_1 ymm0_1;
assert true && red_1 = mulLymm8_1;
assume red_1 = mulLymm8_1 && true;
smull mulH_2 red_2 ymm7_2 ymm0_2;
assert true && red_2 = mulLymm8_2;
assume red_2 = mulLymm8_2 && true;
smull mulH_3 red_3 ymm7_3 ymm0_3;
assert true && red_3 = mulLymm8_3;
assume red_3 = mulLymm8_3 && true;
smull mulH_4 red_4 ymm7_4 ymm0_4;
assert true && red_4 = mulLymm8_4;
assume red_4 = mulLymm8_4 && true;
smull mulH_5 red_5 ymm7_5 ymm0_5;
assert true && red_5 = mulLymm8_5;
assume red_5 = mulLymm8_5 && true;
smull mulH_6 red_6 ymm7_6 ymm0_6;
assert true && red_6 = mulLymm8_6;
assume red_6 = mulLymm8_6 && true;
smull mulH_7 red_7 ymm7_7 ymm0_7;
assert true && red_7 = mulLymm8_7;
assume red_7 = mulLymm8_7 && true;
smull mulH_8 red_8 ymm7_8 ymm0_8;
assert true && red_8 = mulLymm8_8;
assume red_8 = mulLymm8_8 && true;
smull mulH_9 red_9 ymm7_9 ymm0_9;
assert true && red_9 = mulLymm8_9;
assume red_9 = mulLymm8_9 && true;
smull mulH_a red_a ymm7_a ymm0_a;
assert true && red_a = mulLymm8_a;
assume red_a = mulLymm8_a && true;
smull mulH_b red_b ymm7_b ymm0_b;
assert true && red_b = mulLymm8_b;
assume red_b = mulLymm8_b && true;
smull mulH_c red_c ymm7_c ymm0_c;
assert true && red_c = mulLymm8_c;
assume red_c = mulLymm8_c && true;
smull mulH_d red_d ymm7_d ymm0_d;
assert true && red_d = mulLymm8_d;
assume red_d = mulLymm8_d && true;
smull mulH_e red_e ymm7_e ymm0_e;
assert true && red_e = mulLymm8_e;
assume red_e = mulLymm8_e && true;
smull mulH_f red_f ymm7_f ymm0_f;
assert true && red_f = mulLymm8_f;
assume red_f = mulLymm8_f && true;
mov ymm7_0 mulH_0;
mov ymm7_1 mulH_1;
mov ymm7_2 mulH_2;
mov ymm7_3 mulH_3;
mov ymm7_4 mulH_4;
mov ymm7_5 mulH_5;
mov ymm7_6 mulH_6;
mov ymm7_7 mulH_7;
mov ymm7_8 mulH_8;
mov ymm7_9 mulH_9;
mov ymm7_a mulH_a;
mov ymm7_b mulH_b;
mov ymm7_c mulH_c;
mov ymm7_d mulH_d;
mov ymm7_e mulH_e;
mov ymm7_f mulH_f;
(* vpsubw %ymm7,%ymm8,%ymm8                        #! PC = 0x5555555598bd *)
sub ymm8_0 ymm8_0 ymm7_0;
sub ymm8_1 ymm8_1 ymm7_1;
sub ymm8_2 ymm8_2 ymm7_2;
sub ymm8_3 ymm8_3 ymm7_3;
sub ymm8_4 ymm8_4 ymm7_4;
sub ymm8_5 ymm8_5 ymm7_5;
sub ymm8_6 ymm8_6 ymm7_6;
sub ymm8_7 ymm8_7 ymm7_7;
sub ymm8_8 ymm8_8 ymm7_8;
sub ymm8_9 ymm8_9 ymm7_9;
sub ymm8_a ymm8_a ymm7_a;
sub ymm8_b ymm8_b ymm7_b;
sub ymm8_c ymm8_c ymm7_c;
sub ymm8_d ymm8_d ymm7_d;
sub ymm8_e ymm8_e ymm7_e;
sub ymm8_f ymm8_f ymm7_f;
(* vpbroadcastq 0x1d8(%rdx),%ymm1                  #! EA = L0x5555555612f8; Value = 0x1c9ecaf57d4c1e24; PC = 0x5555555598c1 *)
mov ymm1_0 L0x5555555612f8;
mov ymm1_1 L0x5555555612fa;
mov ymm1_2 L0x5555555612fc;
mov ymm1_3 L0x5555555612fe;
mov ymm1_4 L0x5555555612f8;
mov ymm1_5 L0x5555555612fa;
mov ymm1_6 L0x5555555612fc;
mov ymm1_7 L0x5555555612fe;
mov ymm1_8 L0x5555555612f8;
mov ymm1_9 L0x5555555612fa;
mov ymm1_a L0x5555555612fc;
mov ymm1_b L0x5555555612fe;
mov ymm1_c L0x5555555612f8;
mov ymm1_d L0x5555555612fa;
mov ymm1_e L0x5555555612fc;
mov ymm1_f L0x5555555612fe;
(* vpbroadcastq 0x3d8(%rdx),%ymm2                  #! EA = L0x5555555614f8; Value = 0x089efcf5f54c0624; PC = 0x5555555598ca *)
mov ymm2_0 L0x5555555614f8;
mov ymm2_1 L0x5555555614fa;
mov ymm2_2 L0x5555555614fc;
mov ymm2_3 L0x5555555614fe;
mov ymm2_4 L0x5555555614f8;
mov ymm2_5 L0x5555555614fa;
mov ymm2_6 L0x5555555614fc;
mov ymm2_7 L0x5555555614fe;
mov ymm2_8 L0x5555555614f8;
mov ymm2_9 L0x5555555614fa;
mov ymm2_a L0x5555555614fc;
mov ymm2_b L0x5555555614fe;
mov ymm2_c L0x5555555614f8;
mov ymm2_d L0x5555555614fa;
mov ymm2_e L0x5555555614fc;
mov ymm2_f L0x5555555614fe;
(* vpmullw %ymm1,%ymm11,%ymm7                      #! PC = 0x5555555598d3 *)
smull mulHymm11_0 mulL_0 ymm1_0 ymm11_0;
smull mulHymm11_1 mulL_1 ymm1_1 ymm11_1;
smull mulHymm11_2 mulL_2 ymm1_2 ymm11_2;
smull mulHymm11_3 mulL_3 ymm1_3 ymm11_3;
smull mulHymm11_4 mulL_4 ymm1_4 ymm11_4;
smull mulHymm11_5 mulL_5 ymm1_5 ymm11_5;
smull mulHymm11_6 mulL_6 ymm1_6 ymm11_6;
smull mulHymm11_7 mulL_7 ymm1_7 ymm11_7;
smull mulHymm11_8 mulL_8 ymm1_8 ymm11_8;
smull mulHymm11_9 mulL_9 ymm1_9 ymm11_9;
smull mulHymm11_a mulL_a ymm1_a ymm11_a;
smull mulHymm11_b mulL_b ymm1_b ymm11_b;
smull mulHymm11_c mulL_c ymm1_c ymm11_c;
smull mulHymm11_d mulL_d ymm1_d ymm11_d;
smull mulHymm11_e mulL_e ymm1_e ymm11_e;
smull mulHymm11_f mulL_f ymm1_f ymm11_f;
cast ymm7_0@sint16 mulL_0;
cast ymm7_1@sint16 mulL_1;
cast ymm7_2@sint16 mulL_2;
cast ymm7_3@sint16 mulL_3;
cast ymm7_4@sint16 mulL_4;
cast ymm7_5@sint16 mulL_5;
cast ymm7_6@sint16 mulL_6;
cast ymm7_7@sint16 mulL_7;
cast ymm7_8@sint16 mulL_8;
cast ymm7_9@sint16 mulL_9;
cast ymm7_a@sint16 mulL_a;
cast ymm7_b@sint16 mulL_b;
cast ymm7_c@sint16 mulL_c;
cast ymm7_d@sint16 mulL_d;
cast ymm7_e@sint16 mulL_e;
cast ymm7_f@sint16 mulL_f;
(* vpmulhw %ymm2,%ymm11,%ymm11                     #! PC = 0x5555555598d7 *)
smull mulH_0 mulLymm11_0 ymm11_0 ymm2_0;
smull mulH_1 mulLymm11_1 ymm11_1 ymm2_1;
smull mulH_2 mulLymm11_2 ymm11_2 ymm2_2;
smull mulH_3 mulLymm11_3 ymm11_3 ymm2_3;
smull mulH_4 mulLymm11_4 ymm11_4 ymm2_4;
smull mulH_5 mulLymm11_5 ymm11_5 ymm2_5;
smull mulH_6 mulLymm11_6 ymm11_6 ymm2_6;
smull mulH_7 mulLymm11_7 ymm11_7 ymm2_7;
smull mulH_8 mulLymm11_8 ymm11_8 ymm2_8;
smull mulH_9 mulLymm11_9 ymm11_9 ymm2_9;
smull mulH_a mulLymm11_a ymm11_a ymm2_a;
smull mulH_b mulLymm11_b ymm11_b ymm2_b;
smull mulH_c mulLymm11_c ymm11_c ymm2_c;
smull mulH_d mulLymm11_d ymm11_d ymm2_d;
smull mulH_e mulLymm11_e ymm11_e ymm2_e;
smull mulH_f mulLymm11_f ymm11_f ymm2_f;
mov ymm11_0 mulH_0;
mov ymm11_1 mulH_1;
mov ymm11_2 mulH_2;
mov ymm11_3 mulH_3;
mov ymm11_4 mulH_4;
mov ymm11_5 mulH_5;
mov ymm11_6 mulH_6;
mov ymm11_7 mulH_7;
mov ymm11_8 mulH_8;
mov ymm11_9 mulH_9;
mov ymm11_a mulH_a;
mov ymm11_b mulH_b;
mov ymm11_c mulH_c;
mov ymm11_d mulH_d;
mov ymm11_e mulH_e;
mov ymm11_f mulH_f;
(* vpmulhw %ymm0,%ymm7,%ymm7                       #! PC = 0x5555555598db *)
smull mulH_0 red_0 ymm7_0 ymm0_0;
assert true && red_0 = mulLymm11_0;
assume red_0 = mulLymm11_0 && true;
smull mulH_1 red_1 ymm7_1 ymm0_1;
assert true && red_1 = mulLymm11_1;
assume red_1 = mulLymm11_1 && true;
smull mulH_2 red_2 ymm7_2 ymm0_2;
assert true && red_2 = mulLymm11_2;
assume red_2 = mulLymm11_2 && true;
smull mulH_3 red_3 ymm7_3 ymm0_3;
assert true && red_3 = mulLymm11_3;
assume red_3 = mulLymm11_3 && true;
smull mulH_4 red_4 ymm7_4 ymm0_4;
assert true && red_4 = mulLymm11_4;
assume red_4 = mulLymm11_4 && true;
smull mulH_5 red_5 ymm7_5 ymm0_5;
assert true && red_5 = mulLymm11_5;
assume red_5 = mulLymm11_5 && true;
smull mulH_6 red_6 ymm7_6 ymm0_6;
assert true && red_6 = mulLymm11_6;
assume red_6 = mulLymm11_6 && true;
smull mulH_7 red_7 ymm7_7 ymm0_7;
assert true && red_7 = mulLymm11_7;
assume red_7 = mulLymm11_7 && true;
smull mulH_8 red_8 ymm7_8 ymm0_8;
assert true && red_8 = mulLymm11_8;
assume red_8 = mulLymm11_8 && true;
smull mulH_9 red_9 ymm7_9 ymm0_9;
assert true && red_9 = mulLymm11_9;
assume red_9 = mulLymm11_9 && true;
smull mulH_a red_a ymm7_a ymm0_a;
assert true && red_a = mulLymm11_a;
assume red_a = mulLymm11_a && true;
smull mulH_b red_b ymm7_b ymm0_b;
assert true && red_b = mulLymm11_b;
assume red_b = mulLymm11_b && true;
smull mulH_c red_c ymm7_c ymm0_c;
assert true && red_c = mulLymm11_c;
assume red_c = mulLymm11_c && true;
smull mulH_d red_d ymm7_d ymm0_d;
assert true && red_d = mulLymm11_d;
assume red_d = mulLymm11_d && true;
smull mulH_e red_e ymm7_e ymm0_e;
assert true && red_e = mulLymm11_e;
assume red_e = mulLymm11_e && true;
smull mulH_f red_f ymm7_f ymm0_f;
assert true && red_f = mulLymm11_f;
assume red_f = mulLymm11_f && true;
mov ymm7_0 mulH_0;
mov ymm7_1 mulH_1;
mov ymm7_2 mulH_2;
mov ymm7_3 mulH_3;
mov ymm7_4 mulH_4;
mov ymm7_5 mulH_5;
mov ymm7_6 mulH_6;
mov ymm7_7 mulH_7;
mov ymm7_8 mulH_8;
mov ymm7_9 mulH_9;
mov ymm7_a mulH_a;
mov ymm7_b mulH_b;
mov ymm7_c mulH_c;
mov ymm7_d mulH_d;
mov ymm7_e mulH_e;
mov ymm7_f mulH_f;
(* vpsubw %ymm7,%ymm11,%ymm11                      #! PC = 0x5555555598df *)
sub ymm11_0 ymm11_0 ymm7_0;
sub ymm11_1 ymm11_1 ymm7_1;
sub ymm11_2 ymm11_2 ymm7_2;
sub ymm11_3 ymm11_3 ymm7_3;
sub ymm11_4 ymm11_4 ymm7_4;
sub ymm11_5 ymm11_5 ymm7_5;
sub ymm11_6 ymm11_6 ymm7_6;
sub ymm11_7 ymm11_7 ymm7_7;
sub ymm11_8 ymm11_8 ymm7_8;
sub ymm11_9 ymm11_9 ymm7_9;
sub ymm11_a ymm11_a ymm7_a;
sub ymm11_b ymm11_b ymm7_b;
sub ymm11_c ymm11_c ymm7_c;
sub ymm11_d ymm11_d ymm7_d;
sub ymm11_e ymm11_e ymm7_e;
sub ymm11_f ymm11_f ymm7_f;
(* vpaddw %ymm3,%ymm5,%ymm7                        #! PC = 0x5555555598e3 *)
add ymm7_0 ymm5_0 ymm3_0;
add ymm7_1 ymm5_1 ymm3_1;
add ymm7_2 ymm5_2 ymm3_2;
add ymm7_3 ymm5_3 ymm3_3;
add ymm7_4 ymm5_4 ymm3_4;
add ymm7_5 ymm5_5 ymm3_5;
add ymm7_6 ymm5_6 ymm3_6;
add ymm7_7 ymm5_7 ymm3_7;
add ymm7_8 ymm5_8 ymm3_8;
add ymm7_9 ymm5_9 ymm3_9;
add ymm7_a ymm5_a ymm3_a;
add ymm7_b ymm5_b ymm3_b;
add ymm7_c ymm5_c ymm3_c;
add ymm7_d ymm5_d ymm3_d;
add ymm7_e ymm5_e ymm3_e;
add ymm7_f ymm5_f ymm3_f;
(* vpsubw %ymm3,%ymm5,%ymm3                        #! PC = 0x5555555598e7 *)
sub ymm3_0 ymm5_0 ymm3_0;
sub ymm3_1 ymm5_1 ymm3_1;
sub ymm3_2 ymm5_2 ymm3_2;
sub ymm3_3 ymm5_3 ymm3_3;
sub ymm3_4 ymm5_4 ymm3_4;
sub ymm3_5 ymm5_5 ymm3_5;
sub ymm3_6 ymm5_6 ymm3_6;
sub ymm3_7 ymm5_7 ymm3_7;
sub ymm3_8 ymm5_8 ymm3_8;
sub ymm3_9 ymm5_9 ymm3_9;
sub ymm3_a ymm5_a ymm3_a;
sub ymm3_b ymm5_b ymm3_b;
sub ymm3_c ymm5_c ymm3_c;
sub ymm3_d ymm5_d ymm3_d;
sub ymm3_e ymm5_e ymm3_e;
sub ymm3_f ymm5_f ymm3_f;
(* vpaddw %ymm6,%ymm4,%ymm5                        #! PC = 0x5555555598eb *)
add ymm5_0 ymm4_0 ymm6_0;
add ymm5_1 ymm4_1 ymm6_1;
add ymm5_2 ymm4_2 ymm6_2;
add ymm5_3 ymm4_3 ymm6_3;
add ymm5_4 ymm4_4 ymm6_4;
add ymm5_5 ymm4_5 ymm6_5;
add ymm5_6 ymm4_6 ymm6_6;
add ymm5_7 ymm4_7 ymm6_7;
add ymm5_8 ymm4_8 ymm6_8;
add ymm5_9 ymm4_9 ymm6_9;
add ymm5_a ymm4_a ymm6_a;
add ymm5_b ymm4_b ymm6_b;
add ymm5_c ymm4_c ymm6_c;
add ymm5_d ymm4_d ymm6_d;
add ymm5_e ymm4_e ymm6_e;
add ymm5_f ymm4_f ymm6_f;
(* vpsubw %ymm6,%ymm4,%ymm6                        #! PC = 0x5555555598ef *)
sub ymm6_0 ymm4_0 ymm6_0;
sub ymm6_1 ymm4_1 ymm6_1;
sub ymm6_2 ymm4_2 ymm6_2;
sub ymm6_3 ymm4_3 ymm6_3;
sub ymm6_4 ymm4_4 ymm6_4;
sub ymm6_5 ymm4_5 ymm6_5;
sub ymm6_6 ymm4_6 ymm6_6;
sub ymm6_7 ymm4_7 ymm6_7;
sub ymm6_8 ymm4_8 ymm6_8;
sub ymm6_9 ymm4_9 ymm6_9;
sub ymm6_a ymm4_a ymm6_a;
sub ymm6_b ymm4_b ymm6_b;
sub ymm6_c ymm4_c ymm6_c;
sub ymm6_d ymm4_d ymm6_d;
sub ymm6_e ymm4_e ymm6_e;
sub ymm6_f ymm4_f ymm6_f;
(* vpaddw %ymm8,%ymm10,%ymm4                       #! PC = 0x5555555598f3 *)
add ymm4_0 ymm10_0 ymm8_0;
add ymm4_1 ymm10_1 ymm8_1;
add ymm4_2 ymm10_2 ymm8_2;
add ymm4_3 ymm10_3 ymm8_3;
add ymm4_4 ymm10_4 ymm8_4;
add ymm4_5 ymm10_5 ymm8_5;
add ymm4_6 ymm10_6 ymm8_6;
add ymm4_7 ymm10_7 ymm8_7;
add ymm4_8 ymm10_8 ymm8_8;
add ymm4_9 ymm10_9 ymm8_9;
add ymm4_a ymm10_a ymm8_a;
add ymm4_b ymm10_b ymm8_b;
add ymm4_c ymm10_c ymm8_c;
add ymm4_d ymm10_d ymm8_d;
add ymm4_e ymm10_e ymm8_e;
add ymm4_f ymm10_f ymm8_f;
(* vpsubw %ymm8,%ymm10,%ymm8                       #! PC = 0x5555555598f8 *)
sub ymm8_0 ymm10_0 ymm8_0;
sub ymm8_1 ymm10_1 ymm8_1;
sub ymm8_2 ymm10_2 ymm8_2;
sub ymm8_3 ymm10_3 ymm8_3;
sub ymm8_4 ymm10_4 ymm8_4;
sub ymm8_5 ymm10_5 ymm8_5;
sub ymm8_6 ymm10_6 ymm8_6;
sub ymm8_7 ymm10_7 ymm8_7;
sub ymm8_8 ymm10_8 ymm8_8;
sub ymm8_9 ymm10_9 ymm8_9;
sub ymm8_a ymm10_a ymm8_a;
sub ymm8_b ymm10_b ymm8_b;
sub ymm8_c ymm10_c ymm8_c;
sub ymm8_d ymm10_d ymm8_d;
sub ymm8_e ymm10_e ymm8_e;
sub ymm8_f ymm10_f ymm8_f;
(* vpaddw %ymm11,%ymm9,%ymm10                      #! PC = 0x5555555598fd *)
add ymm10_0 ymm9_0 ymm11_0;
add ymm10_1 ymm9_1 ymm11_1;
add ymm10_2 ymm9_2 ymm11_2;
add ymm10_3 ymm9_3 ymm11_3;
add ymm10_4 ymm9_4 ymm11_4;
add ymm10_5 ymm9_5 ymm11_5;
add ymm10_6 ymm9_6 ymm11_6;
add ymm10_7 ymm9_7 ymm11_7;
add ymm10_8 ymm9_8 ymm11_8;
add ymm10_9 ymm9_9 ymm11_9;
add ymm10_a ymm9_a ymm11_a;
add ymm10_b ymm9_b ymm11_b;
add ymm10_c ymm9_c ymm11_c;
add ymm10_d ymm9_d ymm11_d;
add ymm10_e ymm9_e ymm11_e;
add ymm10_f ymm9_f ymm11_f;
(* vpsubw %ymm11,%ymm9,%ymm11                      #! PC = 0x555555559902 *)
sub ymm11_0 ymm9_0 ymm11_0;
sub ymm11_1 ymm9_1 ymm11_1;
sub ymm11_2 ymm9_2 ymm11_2;
sub ymm11_3 ymm9_3 ymm11_3;
sub ymm11_4 ymm9_4 ymm11_4;
sub ymm11_5 ymm9_5 ymm11_5;
sub ymm11_6 ymm9_6 ymm11_6;
sub ymm11_7 ymm9_7 ymm11_7;
sub ymm11_8 ymm9_8 ymm11_8;
sub ymm11_9 ymm9_9 ymm11_9;
sub ymm11_a ymm9_a ymm11_a;
sub ymm11_b ymm9_b ymm11_b;
sub ymm11_c ymm9_c ymm11_c;
sub ymm11_d ymm9_d ymm11_d;
sub ymm11_e ymm9_e ymm11_e;
sub ymm11_f ymm9_f ymm11_f;
(* vpunpcklwd %ymm3,%ymm7,%ymm9                    #! PC = 0x555555559907 *)
mov lwd_0 ymm7_0;
mov lwd_1 ymm3_0;
mov lwd_2 ymm7_1;
mov lwd_3 ymm3_1;
mov lwd_4 ymm7_2;
mov lwd_5 ymm3_2;
mov lwd_6 ymm7_3;
mov lwd_7 ymm3_3;
mov lwd_8 ymm7_8;
mov lwd_9 ymm3_8;
mov lwd_a ymm7_9;
mov lwd_b ymm3_9;
mov lwd_c ymm7_a;
mov lwd_d ymm3_a;
mov lwd_e ymm7_b;
mov lwd_f ymm3_b;
mov ymm9_0 lwd_0;
mov ymm9_1 lwd_1;
mov ymm9_2 lwd_2;
mov ymm9_3 lwd_3;
mov ymm9_4 lwd_4;
mov ymm9_5 lwd_5;
mov ymm9_6 lwd_6;
mov ymm9_7 lwd_7;
mov ymm9_8 lwd_8;
mov ymm9_9 lwd_9;
mov ymm9_a lwd_a;
mov ymm9_b lwd_b;
mov ymm9_c lwd_c;
mov ymm9_d lwd_d;
mov ymm9_e lwd_e;
mov ymm9_f lwd_f;
(* vpunpckhwd %ymm3,%ymm7,%ymm3                    #! PC = 0x55555555990b *)
mov hwd_0 ymm7_4;
mov hwd_1 ymm3_4;
mov hwd_2 ymm7_5;
mov hwd_3 ymm3_5;
mov hwd_4 ymm7_6;
mov hwd_5 ymm3_6;
mov hwd_6 ymm7_7;
mov hwd_7 ymm3_7;
mov hwd_8 ymm7_c;
mov hwd_9 ymm3_c;
mov hwd_a ymm7_d;
mov hwd_b ymm3_d;
mov hwd_c ymm7_e;
mov hwd_d ymm3_e;
mov hwd_e ymm7_f;
mov hwd_f ymm3_f;
mov ymm3_0 hwd_0;
mov ymm3_1 hwd_1;
mov ymm3_2 hwd_2;
mov ymm3_3 hwd_3;
mov ymm3_4 hwd_4;
mov ymm3_5 hwd_5;
mov ymm3_6 hwd_6;
mov ymm3_7 hwd_7;
mov ymm3_8 hwd_8;
mov ymm3_9 hwd_9;
mov ymm3_a hwd_a;
mov ymm3_b hwd_b;
mov ymm3_c hwd_c;
mov ymm3_d hwd_d;
mov ymm3_e hwd_e;
mov ymm3_f hwd_f;
(* vpunpcklwd %ymm6,%ymm5,%ymm7                    #! PC = 0x55555555990f *)
mov lwd_0 ymm5_0;
mov lwd_1 ymm6_0;
mov lwd_2 ymm5_1;
mov lwd_3 ymm6_1;
mov lwd_4 ymm5_2;
mov lwd_5 ymm6_2;
mov lwd_6 ymm5_3;
mov lwd_7 ymm6_3;
mov lwd_8 ymm5_8;
mov lwd_9 ymm6_8;
mov lwd_a ymm5_9;
mov lwd_b ymm6_9;
mov lwd_c ymm5_a;
mov lwd_d ymm6_a;
mov lwd_e ymm5_b;
mov lwd_f ymm6_b;
mov ymm7_0 lwd_0;
mov ymm7_1 lwd_1;
mov ymm7_2 lwd_2;
mov ymm7_3 lwd_3;
mov ymm7_4 lwd_4;
mov ymm7_5 lwd_5;
mov ymm7_6 lwd_6;
mov ymm7_7 lwd_7;
mov ymm7_8 lwd_8;
mov ymm7_9 lwd_9;
mov ymm7_a lwd_a;
mov ymm7_b lwd_b;
mov ymm7_c lwd_c;
mov ymm7_d lwd_d;
mov ymm7_e lwd_e;
mov ymm7_f lwd_f;
(* vpunpckhwd %ymm6,%ymm5,%ymm6                    #! PC = 0x555555559913 *)
mov hwd_0 ymm5_4;
mov hwd_1 ymm6_4;
mov hwd_2 ymm5_5;
mov hwd_3 ymm6_5;
mov hwd_4 ymm5_6;
mov hwd_5 ymm6_6;
mov hwd_6 ymm5_7;
mov hwd_7 ymm6_7;
mov hwd_8 ymm5_c;
mov hwd_9 ymm6_c;
mov hwd_a ymm5_d;
mov hwd_b ymm6_d;
mov hwd_c ymm5_e;
mov hwd_d ymm6_e;
mov hwd_e ymm5_f;
mov hwd_f ymm6_f;
mov ymm6_0 hwd_0;
mov ymm6_1 hwd_1;
mov ymm6_2 hwd_2;
mov ymm6_3 hwd_3;
mov ymm6_4 hwd_4;
mov ymm6_5 hwd_5;
mov ymm6_6 hwd_6;
mov ymm6_7 hwd_7;
mov ymm6_8 hwd_8;
mov ymm6_9 hwd_9;
mov ymm6_a hwd_a;
mov ymm6_b hwd_b;
mov ymm6_c hwd_c;
mov ymm6_d hwd_d;
mov ymm6_e hwd_e;
mov ymm6_f hwd_f;
(* vpunpcklwd %ymm8,%ymm4,%ymm5                    #! PC = 0x555555559917 *)
mov lwd_0 ymm4_0;
mov lwd_1 ymm8_0;
mov lwd_2 ymm4_1;
mov lwd_3 ymm8_1;
mov lwd_4 ymm4_2;
mov lwd_5 ymm8_2;
mov lwd_6 ymm4_3;
mov lwd_7 ymm8_3;
mov lwd_8 ymm4_8;
mov lwd_9 ymm8_8;
mov lwd_a ymm4_9;
mov lwd_b ymm8_9;
mov lwd_c ymm4_a;
mov lwd_d ymm8_a;
mov lwd_e ymm4_b;
mov lwd_f ymm8_b;
mov ymm5_0 lwd_0;
mov ymm5_1 lwd_1;
mov ymm5_2 lwd_2;
mov ymm5_3 lwd_3;
mov ymm5_4 lwd_4;
mov ymm5_5 lwd_5;
mov ymm5_6 lwd_6;
mov ymm5_7 lwd_7;
mov ymm5_8 lwd_8;
mov ymm5_9 lwd_9;
mov ymm5_a lwd_a;
mov ymm5_b lwd_b;
mov ymm5_c lwd_c;
mov ymm5_d lwd_d;
mov ymm5_e lwd_e;
mov ymm5_f lwd_f;
(* vpunpckhwd %ymm8,%ymm4,%ymm8                    #! PC = 0x55555555991c *)
mov hwd_0 ymm4_4;
mov hwd_1 ymm8_4;
mov hwd_2 ymm4_5;
mov hwd_3 ymm8_5;
mov hwd_4 ymm4_6;
mov hwd_5 ymm8_6;
mov hwd_6 ymm4_7;
mov hwd_7 ymm8_7;
mov hwd_8 ymm4_c;
mov hwd_9 ymm8_c;
mov hwd_a ymm4_d;
mov hwd_b ymm8_d;
mov hwd_c ymm4_e;
mov hwd_d ymm8_e;
mov hwd_e ymm4_f;
mov hwd_f ymm8_f;
mov ymm8_0 hwd_0;
mov ymm8_1 hwd_1;
mov ymm8_2 hwd_2;
mov ymm8_3 hwd_3;
mov ymm8_4 hwd_4;
mov ymm8_5 hwd_5;
mov ymm8_6 hwd_6;
mov ymm8_7 hwd_7;
mov ymm8_8 hwd_8;
mov ymm8_9 hwd_9;
mov ymm8_a hwd_a;
mov ymm8_b hwd_b;
mov ymm8_c hwd_c;
mov ymm8_d hwd_d;
mov ymm8_e hwd_e;
mov ymm8_f hwd_f;
(* vpunpcklwd %ymm11,%ymm10,%ymm4                  #! PC = 0x555555559921 *)
mov lwd_0 ymm10_0;
mov lwd_1 ymm11_0;
mov lwd_2 ymm10_1;
mov lwd_3 ymm11_1;
mov lwd_4 ymm10_2;
mov lwd_5 ymm11_2;
mov lwd_6 ymm10_3;
mov lwd_7 ymm11_3;
mov lwd_8 ymm10_8;
mov lwd_9 ymm11_8;
mov lwd_a ymm10_9;
mov lwd_b ymm11_9;
mov lwd_c ymm10_a;
mov lwd_d ymm11_a;
mov lwd_e ymm10_b;
mov lwd_f ymm11_b;
mov ymm4_0 lwd_0;
mov ymm4_1 lwd_1;
mov ymm4_2 lwd_2;
mov ymm4_3 lwd_3;
mov ymm4_4 lwd_4;
mov ymm4_5 lwd_5;
mov ymm4_6 lwd_6;
mov ymm4_7 lwd_7;
mov ymm4_8 lwd_8;
mov ymm4_9 lwd_9;
mov ymm4_a lwd_a;
mov ymm4_b lwd_b;
mov ymm4_c lwd_c;
mov ymm4_d lwd_d;
mov ymm4_e lwd_e;
mov ymm4_f lwd_f;
(* vpunpckhwd %ymm11,%ymm10,%ymm11                 #! PC = 0x555555559926 *)
mov hwd_0 ymm10_4;
mov hwd_1 ymm11_4;
mov hwd_2 ymm10_5;
mov hwd_3 ymm11_5;
mov hwd_4 ymm10_6;
mov hwd_5 ymm11_6;
mov hwd_6 ymm10_7;
mov hwd_7 ymm11_7;
mov hwd_8 ymm10_c;
mov hwd_9 ymm11_c;
mov hwd_a ymm10_d;
mov hwd_b ymm11_d;
mov hwd_c ymm10_e;
mov hwd_d ymm11_e;
mov hwd_e ymm10_f;
mov hwd_f ymm11_f;
mov ymm11_0 hwd_0;
mov ymm11_1 hwd_1;
mov ymm11_2 hwd_2;
mov ymm11_3 hwd_3;
mov ymm11_4 hwd_4;
mov ymm11_5 hwd_5;
mov ymm11_6 hwd_6;
mov ymm11_7 hwd_7;
mov ymm11_8 hwd_8;
mov ymm11_9 hwd_9;
mov ymm11_a hwd_a;
mov ymm11_b hwd_b;
mov ymm11_c hwd_c;
mov ymm11_d hwd_d;
mov ymm11_e hwd_e;
mov ymm11_f hwd_f;
(* vbroadcasti128 0x280(%rdx),%ymm1                #! EA = L0x5555555613a0; Value = 0x3b1725db7703e831; PC = 0x55555555992b *)
mov ymm1_0 L0x5555555613a0;
mov ymm1_1 L0x5555555613a2;
mov ymm1_2 L0x5555555613a4;
mov ymm1_3 L0x5555555613a6;
mov ymm1_4 L0x5555555613a8;
mov ymm1_5 L0x5555555613aa;
mov ymm1_6 L0x5555555613ac;
mov ymm1_7 L0x5555555613ae;
mov ymm1_8 L0x5555555613a0;
mov ymm1_9 L0x5555555613a2;
mov ymm1_a L0x5555555613a4;
mov ymm1_b L0x5555555613a6;
mov ymm1_c L0x5555555613a8;
mov ymm1_d L0x5555555613aa;
mov ymm1_e L0x5555555613ac;
mov ymm1_f L0x5555555613ae;
(* vbroadcasti128 0x480(%rdx),%ymm2                #! EA = L0x5555555615a0; Value = 0x011713dbf503f231; PC = 0x555555559934 *)
mov ymm2_0 L0x5555555615a0;
mov ymm2_1 L0x5555555615a2;
mov ymm2_2 L0x5555555615a4;
mov ymm2_3 L0x5555555615a6;
mov ymm2_4 L0x5555555615a8;
mov ymm2_5 L0x5555555615aa;
mov ymm2_6 L0x5555555615ac;
mov ymm2_7 L0x5555555615ae;
mov ymm2_8 L0x5555555615a0;
mov ymm2_9 L0x5555555615a2;
mov ymm2_a L0x5555555615a4;
mov ymm2_b L0x5555555615a6;
mov ymm2_c L0x5555555615a8;
mov ymm2_d L0x5555555615aa;
mov ymm2_e L0x5555555615ac;
mov ymm2_f L0x5555555615ae;
(* vpmullw %ymm1,%ymm3,%ymm10                      #! PC = 0x55555555993d *)
smull mulHymm3_0 mulL_0 ymm1_0 ymm3_0;
smull mulHymm3_1 mulL_1 ymm1_1 ymm3_1;
smull mulHymm3_2 mulL_2 ymm1_2 ymm3_2;
smull mulHymm3_3 mulL_3 ymm1_3 ymm3_3;
smull mulHymm3_4 mulL_4 ymm1_4 ymm3_4;
smull mulHymm3_5 mulL_5 ymm1_5 ymm3_5;
smull mulHymm3_6 mulL_6 ymm1_6 ymm3_6;
smull mulHymm3_7 mulL_7 ymm1_7 ymm3_7;
smull mulHymm3_8 mulL_8 ymm1_8 ymm3_8;
smull mulHymm3_9 mulL_9 ymm1_9 ymm3_9;
smull mulHymm3_a mulL_a ymm1_a ymm3_a;
smull mulHymm3_b mulL_b ymm1_b ymm3_b;
smull mulHymm3_c mulL_c ymm1_c ymm3_c;
smull mulHymm3_d mulL_d ymm1_d ymm3_d;
smull mulHymm3_e mulL_e ymm1_e ymm3_e;
smull mulHymm3_f mulL_f ymm1_f ymm3_f;
cast ymm10_0@sint16 mulL_0;
cast ymm10_1@sint16 mulL_1;
cast ymm10_2@sint16 mulL_2;
cast ymm10_3@sint16 mulL_3;
cast ymm10_4@sint16 mulL_4;
cast ymm10_5@sint16 mulL_5;
cast ymm10_6@sint16 mulL_6;
cast ymm10_7@sint16 mulL_7;
cast ymm10_8@sint16 mulL_8;
cast ymm10_9@sint16 mulL_9;
cast ymm10_a@sint16 mulL_a;
cast ymm10_b@sint16 mulL_b;
cast ymm10_c@sint16 mulL_c;
cast ymm10_d@sint16 mulL_d;
cast ymm10_e@sint16 mulL_e;
cast ymm10_f@sint16 mulL_f;
(* vpmulhw %ymm2,%ymm3,%ymm3                       #! PC = 0x555555559941 *)
smull mulH_0 mulLymm3_0 ymm3_0 ymm2_0;
smull mulH_1 mulLymm3_1 ymm3_1 ymm2_1;
smull mulH_2 mulLymm3_2 ymm3_2 ymm2_2;
smull mulH_3 mulLymm3_3 ymm3_3 ymm2_3;
smull mulH_4 mulLymm3_4 ymm3_4 ymm2_4;
smull mulH_5 mulLymm3_5 ymm3_5 ymm2_5;
smull mulH_6 mulLymm3_6 ymm3_6 ymm2_6;
smull mulH_7 mulLymm3_7 ymm3_7 ymm2_7;
smull mulH_8 mulLymm3_8 ymm3_8 ymm2_8;
smull mulH_9 mulLymm3_9 ymm3_9 ymm2_9;
smull mulH_a mulLymm3_a ymm3_a ymm2_a;
smull mulH_b mulLymm3_b ymm3_b ymm2_b;
smull mulH_c mulLymm3_c ymm3_c ymm2_c;
smull mulH_d mulLymm3_d ymm3_d ymm2_d;
smull mulH_e mulLymm3_e ymm3_e ymm2_e;
smull mulH_f mulLymm3_f ymm3_f ymm2_f;
mov ymm3_0 mulH_0;
mov ymm3_1 mulH_1;
mov ymm3_2 mulH_2;
mov ymm3_3 mulH_3;
mov ymm3_4 mulH_4;
mov ymm3_5 mulH_5;
mov ymm3_6 mulH_6;
mov ymm3_7 mulH_7;
mov ymm3_8 mulH_8;
mov ymm3_9 mulH_9;
mov ymm3_a mulH_a;
mov ymm3_b mulH_b;
mov ymm3_c mulH_c;
mov ymm3_d mulH_d;
mov ymm3_e mulH_e;
mov ymm3_f mulH_f;
(* vpmulhw %ymm0,%ymm10,%ymm10                     #! PC = 0x555555559945 *)
smull mulH_0 red_0 ymm10_0 ymm0_0;
assert true && red_0 = mulLymm3_0;
assume red_0 = mulLymm3_0 && true;
smull mulH_1 red_1 ymm10_1 ymm0_1;
assert true && red_1 = mulLymm3_1;
assume red_1 = mulLymm3_1 && true;
smull mulH_2 red_2 ymm10_2 ymm0_2;
assert true && red_2 = mulLymm3_2;
assume red_2 = mulLymm3_2 && true;
smull mulH_3 red_3 ymm10_3 ymm0_3;
assert true && red_3 = mulLymm3_3;
assume red_3 = mulLymm3_3 && true;
smull mulH_4 red_4 ymm10_4 ymm0_4;
assert true && red_4 = mulLymm3_4;
assume red_4 = mulLymm3_4 && true;
smull mulH_5 red_5 ymm10_5 ymm0_5;
assert true && red_5 = mulLymm3_5;
assume red_5 = mulLymm3_5 && true;
smull mulH_6 red_6 ymm10_6 ymm0_6;
assert true && red_6 = mulLymm3_6;
assume red_6 = mulLymm3_6 && true;
smull mulH_7 red_7 ymm10_7 ymm0_7;
assert true && red_7 = mulLymm3_7;
assume red_7 = mulLymm3_7 && true;
smull mulH_8 red_8 ymm10_8 ymm0_8;
assert true && red_8 = mulLymm3_8;
assume red_8 = mulLymm3_8 && true;
smull mulH_9 red_9 ymm10_9 ymm0_9;
assert true && red_9 = mulLymm3_9;
assume red_9 = mulLymm3_9 && true;
smull mulH_a red_a ymm10_a ymm0_a;
assert true && red_a = mulLymm3_a;
assume red_a = mulLymm3_a && true;
smull mulH_b red_b ymm10_b ymm0_b;
assert true && red_b = mulLymm3_b;
assume red_b = mulLymm3_b && true;
smull mulH_c red_c ymm10_c ymm0_c;
assert true && red_c = mulLymm3_c;
assume red_c = mulLymm3_c && true;
smull mulH_d red_d ymm10_d ymm0_d;
assert true && red_d = mulLymm3_d;
assume red_d = mulLymm3_d && true;
smull mulH_e red_e ymm10_e ymm0_e;
assert true && red_e = mulLymm3_e;
assume red_e = mulLymm3_e && true;
smull mulH_f red_f ymm10_f ymm0_f;
assert true && red_f = mulLymm3_f;
assume red_f = mulLymm3_f && true;
mov ymm10_0 mulH_0;
mov ymm10_1 mulH_1;
mov ymm10_2 mulH_2;
mov ymm10_3 mulH_3;
mov ymm10_4 mulH_4;
mov ymm10_5 mulH_5;
mov ymm10_6 mulH_6;
mov ymm10_7 mulH_7;
mov ymm10_8 mulH_8;
mov ymm10_9 mulH_9;
mov ymm10_a mulH_a;
mov ymm10_b mulH_b;
mov ymm10_c mulH_c;
mov ymm10_d mulH_d;
mov ymm10_e mulH_e;
mov ymm10_f mulH_f;
(* vpsubw %ymm10,%ymm3,%ymm3                       #! PC = 0x555555559949 *)
sub ymm3_0 ymm3_0 ymm10_0;
sub ymm3_1 ymm3_1 ymm10_1;
sub ymm3_2 ymm3_2 ymm10_2;
sub ymm3_3 ymm3_3 ymm10_3;
sub ymm3_4 ymm3_4 ymm10_4;
sub ymm3_5 ymm3_5 ymm10_5;
sub ymm3_6 ymm3_6 ymm10_6;
sub ymm3_7 ymm3_7 ymm10_7;
sub ymm3_8 ymm3_8 ymm10_8;
sub ymm3_9 ymm3_9 ymm10_9;
sub ymm3_a ymm3_a ymm10_a;
sub ymm3_b ymm3_b ymm10_b;
sub ymm3_c ymm3_c ymm10_c;
sub ymm3_d ymm3_d ymm10_d;
sub ymm3_e ymm3_e ymm10_e;
sub ymm3_f ymm3_f ymm10_f;
(* vbroadcasti128 0x290(%rdx),%ymm1                #! EA = L0x5555555613b0; Value = 0x5d90a3147cb4ae5d; PC = 0x55555555994e *)
mov ymm1_0 L0x5555555613b0;
mov ymm1_1 L0x5555555613b2;
mov ymm1_2 L0x5555555613b4;
mov ymm1_3 L0x5555555613b6;
mov ymm1_4 L0x5555555613b8;
mov ymm1_5 L0x5555555613ba;
mov ymm1_6 L0x5555555613bc;
mov ymm1_7 L0x5555555613be;
mov ymm1_8 L0x5555555613b0;
mov ymm1_9 L0x5555555613b2;
mov ymm1_a L0x5555555613b4;
mov ymm1_b L0x5555555613b6;
mov ymm1_c L0x5555555613b8;
mov ymm1_d L0x5555555613ba;
mov ymm1_e L0x5555555613bc;
mov ymm1_f L0x5555555613be;
(* vbroadcasti128 0x490(%rdx),%ymm2                #! EA = L0x5555555615b0; Value = 0xfd90eb1404b4f05d; PC = 0x555555559957 *)
mov ymm2_0 L0x5555555615b0;
mov ymm2_1 L0x5555555615b2;
mov ymm2_2 L0x5555555615b4;
mov ymm2_3 L0x5555555615b6;
mov ymm2_4 L0x5555555615b8;
mov ymm2_5 L0x5555555615ba;
mov ymm2_6 L0x5555555615bc;
mov ymm2_7 L0x5555555615be;
mov ymm2_8 L0x5555555615b0;
mov ymm2_9 L0x5555555615b2;
mov ymm2_a L0x5555555615b4;
mov ymm2_b L0x5555555615b6;
mov ymm2_c L0x5555555615b8;
mov ymm2_d L0x5555555615ba;
mov ymm2_e L0x5555555615bc;
mov ymm2_f L0x5555555615be;
(* vpmullw %ymm1,%ymm6,%ymm10                      #! PC = 0x555555559960 *)
smull mulHymm6_0 mulL_0 ymm1_0 ymm6_0;
smull mulHymm6_1 mulL_1 ymm1_1 ymm6_1;
smull mulHymm6_2 mulL_2 ymm1_2 ymm6_2;
smull mulHymm6_3 mulL_3 ymm1_3 ymm6_3;
smull mulHymm6_4 mulL_4 ymm1_4 ymm6_4;
smull mulHymm6_5 mulL_5 ymm1_5 ymm6_5;
smull mulHymm6_6 mulL_6 ymm1_6 ymm6_6;
smull mulHymm6_7 mulL_7 ymm1_7 ymm6_7;
smull mulHymm6_8 mulL_8 ymm1_8 ymm6_8;
smull mulHymm6_9 mulL_9 ymm1_9 ymm6_9;
smull mulHymm6_a mulL_a ymm1_a ymm6_a;
smull mulHymm6_b mulL_b ymm1_b ymm6_b;
smull mulHymm6_c mulL_c ymm1_c ymm6_c;
smull mulHymm6_d mulL_d ymm1_d ymm6_d;
smull mulHymm6_e mulL_e ymm1_e ymm6_e;
smull mulHymm6_f mulL_f ymm1_f ymm6_f;
cast ymm10_0@sint16 mulL_0;
cast ymm10_1@sint16 mulL_1;
cast ymm10_2@sint16 mulL_2;
cast ymm10_3@sint16 mulL_3;
cast ymm10_4@sint16 mulL_4;
cast ymm10_5@sint16 mulL_5;
cast ymm10_6@sint16 mulL_6;
cast ymm10_7@sint16 mulL_7;
cast ymm10_8@sint16 mulL_8;
cast ymm10_9@sint16 mulL_9;
cast ymm10_a@sint16 mulL_a;
cast ymm10_b@sint16 mulL_b;
cast ymm10_c@sint16 mulL_c;
cast ymm10_d@sint16 mulL_d;
cast ymm10_e@sint16 mulL_e;
cast ymm10_f@sint16 mulL_f;
(* vpmulhw %ymm2,%ymm6,%ymm6                       #! PC = 0x555555559964 *)
smull mulH_0 mulLymm6_0 ymm6_0 ymm2_0;
smull mulH_1 mulLymm6_1 ymm6_1 ymm2_1;
smull mulH_2 mulLymm6_2 ymm6_2 ymm2_2;
smull mulH_3 mulLymm6_3 ymm6_3 ymm2_3;
smull mulH_4 mulLymm6_4 ymm6_4 ymm2_4;
smull mulH_5 mulLymm6_5 ymm6_5 ymm2_5;
smull mulH_6 mulLymm6_6 ymm6_6 ymm2_6;
smull mulH_7 mulLymm6_7 ymm6_7 ymm2_7;
smull mulH_8 mulLymm6_8 ymm6_8 ymm2_8;
smull mulH_9 mulLymm6_9 ymm6_9 ymm2_9;
smull mulH_a mulLymm6_a ymm6_a ymm2_a;
smull mulH_b mulLymm6_b ymm6_b ymm2_b;
smull mulH_c mulLymm6_c ymm6_c ymm2_c;
smull mulH_d mulLymm6_d ymm6_d ymm2_d;
smull mulH_e mulLymm6_e ymm6_e ymm2_e;
smull mulH_f mulLymm6_f ymm6_f ymm2_f;
mov ymm6_0 mulH_0;
mov ymm6_1 mulH_1;
mov ymm6_2 mulH_2;
mov ymm6_3 mulH_3;
mov ymm6_4 mulH_4;
mov ymm6_5 mulH_5;
mov ymm6_6 mulH_6;
mov ymm6_7 mulH_7;
mov ymm6_8 mulH_8;
mov ymm6_9 mulH_9;
mov ymm6_a mulH_a;
mov ymm6_b mulH_b;
mov ymm6_c mulH_c;
mov ymm6_d mulH_d;
mov ymm6_e mulH_e;
mov ymm6_f mulH_f;
(* vpmulhw %ymm0,%ymm10,%ymm10                     #! PC = 0x555555559968 *)
smull mulH_0 red_0 ymm10_0 ymm0_0;
assert true && red_0 = mulLymm6_0;
assume red_0 = mulLymm6_0 && true;
smull mulH_1 red_1 ymm10_1 ymm0_1;
assert true && red_1 = mulLymm6_1;
assume red_1 = mulLymm6_1 && true;
smull mulH_2 red_2 ymm10_2 ymm0_2;
assert true && red_2 = mulLymm6_2;
assume red_2 = mulLymm6_2 && true;
smull mulH_3 red_3 ymm10_3 ymm0_3;
assert true && red_3 = mulLymm6_3;
assume red_3 = mulLymm6_3 && true;
smull mulH_4 red_4 ymm10_4 ymm0_4;
assert true && red_4 = mulLymm6_4;
assume red_4 = mulLymm6_4 && true;
smull mulH_5 red_5 ymm10_5 ymm0_5;
assert true && red_5 = mulLymm6_5;
assume red_5 = mulLymm6_5 && true;
smull mulH_6 red_6 ymm10_6 ymm0_6;
assert true && red_6 = mulLymm6_6;
assume red_6 = mulLymm6_6 && true;
smull mulH_7 red_7 ymm10_7 ymm0_7;
assert true && red_7 = mulLymm6_7;
assume red_7 = mulLymm6_7 && true;
smull mulH_8 red_8 ymm10_8 ymm0_8;
assert true && red_8 = mulLymm6_8;
assume red_8 = mulLymm6_8 && true;
smull mulH_9 red_9 ymm10_9 ymm0_9;
assert true && red_9 = mulLymm6_9;
assume red_9 = mulLymm6_9 && true;
smull mulH_a red_a ymm10_a ymm0_a;
assert true && red_a = mulLymm6_a;
assume red_a = mulLymm6_a && true;
smull mulH_b red_b ymm10_b ymm0_b;
assert true && red_b = mulLymm6_b;
assume red_b = mulLymm6_b && true;
smull mulH_c red_c ymm10_c ymm0_c;
assert true && red_c = mulLymm6_c;
assume red_c = mulLymm6_c && true;
smull mulH_d red_d ymm10_d ymm0_d;
assert true && red_d = mulLymm6_d;
assume red_d = mulLymm6_d && true;
smull mulH_e red_e ymm10_e ymm0_e;
assert true && red_e = mulLymm6_e;
assume red_e = mulLymm6_e && true;
smull mulH_f red_f ymm10_f ymm0_f;
assert true && red_f = mulLymm6_f;
assume red_f = mulLymm6_f && true;
mov ymm10_0 mulH_0;
mov ymm10_1 mulH_1;
mov ymm10_2 mulH_2;
mov ymm10_3 mulH_3;
mov ymm10_4 mulH_4;
mov ymm10_5 mulH_5;
mov ymm10_6 mulH_6;
mov ymm10_7 mulH_7;
mov ymm10_8 mulH_8;
mov ymm10_9 mulH_9;
mov ymm10_a mulH_a;
mov ymm10_b mulH_b;
mov ymm10_c mulH_c;
mov ymm10_d mulH_d;
mov ymm10_e mulH_e;
mov ymm10_f mulH_f;
(* vpsubw %ymm10,%ymm6,%ymm6                       #! PC = 0x55555555996c *)
sub ymm6_0 ymm6_0 ymm10_0;
sub ymm6_1 ymm6_1 ymm10_1;
sub ymm6_2 ymm6_2 ymm10_2;
sub ymm6_3 ymm6_3 ymm10_3;
sub ymm6_4 ymm6_4 ymm10_4;
sub ymm6_5 ymm6_5 ymm10_5;
sub ymm6_6 ymm6_6 ymm10_6;
sub ymm6_7 ymm6_7 ymm10_7;
sub ymm6_8 ymm6_8 ymm10_8;
sub ymm6_9 ymm6_9 ymm10_9;
sub ymm6_a ymm6_a ymm10_a;
sub ymm6_b ymm6_b ymm10_b;
sub ymm6_c ymm6_c ymm10_c;
sub ymm6_d ymm6_d ymm10_d;
sub ymm6_e ymm6_e ymm10_e;
sub ymm6_f ymm6_f ymm10_f;
(* vbroadcasti128 0x2a0(%rdx),%ymm1                #! EA = L0x5555555613c0; Value = 0x9fbf307fcf0db133; PC = 0x555555559971 *)
mov ymm1_0 L0x5555555613c0;
mov ymm1_1 L0x5555555613c2;
mov ymm1_2 L0x5555555613c4;
mov ymm1_3 L0x5555555613c6;
mov ymm1_4 L0x5555555613c8;
mov ymm1_5 L0x5555555613ca;
mov ymm1_6 L0x5555555613cc;
mov ymm1_7 L0x5555555613ce;
mov ymm1_8 L0x5555555613c0;
mov ymm1_9 L0x5555555613c2;
mov ymm1_a L0x5555555613c4;
mov ymm1_b L0x5555555613c6;
mov ymm1_c L0x5555555613c8;
mov ymm1_d L0x5555555613ca;
mov ymm1_e L0x5555555613cc;
mov ymm1_f L0x5555555613ce;
(* vbroadcasti128 0x4a0(%rdx),%ymm2                #! EA = L0x5555555615c0; Value = 0xf5bf067ff10d0f33; PC = 0x55555555997a *)
mov ymm2_0 L0x5555555615c0;
mov ymm2_1 L0x5555555615c2;
mov ymm2_2 L0x5555555615c4;
mov ymm2_3 L0x5555555615c6;
mov ymm2_4 L0x5555555615c8;
mov ymm2_5 L0x5555555615ca;
mov ymm2_6 L0x5555555615cc;
mov ymm2_7 L0x5555555615ce;
mov ymm2_8 L0x5555555615c0;
mov ymm2_9 L0x5555555615c2;
mov ymm2_a L0x5555555615c4;
mov ymm2_b L0x5555555615c6;
mov ymm2_c L0x5555555615c8;
mov ymm2_d L0x5555555615ca;
mov ymm2_e L0x5555555615cc;
mov ymm2_f L0x5555555615ce;
(* vpmullw %ymm1,%ymm8,%ymm10                      #! PC = 0x555555559983 *)
smull mulHymm8_0 mulL_0 ymm1_0 ymm8_0;
smull mulHymm8_1 mulL_1 ymm1_1 ymm8_1;
smull mulHymm8_2 mulL_2 ymm1_2 ymm8_2;
smull mulHymm8_3 mulL_3 ymm1_3 ymm8_3;
smull mulHymm8_4 mulL_4 ymm1_4 ymm8_4;
smull mulHymm8_5 mulL_5 ymm1_5 ymm8_5;
smull mulHymm8_6 mulL_6 ymm1_6 ymm8_6;
smull mulHymm8_7 mulL_7 ymm1_7 ymm8_7;
smull mulHymm8_8 mulL_8 ymm1_8 ymm8_8;
smull mulHymm8_9 mulL_9 ymm1_9 ymm8_9;
smull mulHymm8_a mulL_a ymm1_a ymm8_a;
smull mulHymm8_b mulL_b ymm1_b ymm8_b;
smull mulHymm8_c mulL_c ymm1_c ymm8_c;
smull mulHymm8_d mulL_d ymm1_d ymm8_d;
smull mulHymm8_e mulL_e ymm1_e ymm8_e;
smull mulHymm8_f mulL_f ymm1_f ymm8_f;
cast ymm10_0@sint16 mulL_0;
cast ymm10_1@sint16 mulL_1;
cast ymm10_2@sint16 mulL_2;
cast ymm10_3@sint16 mulL_3;
cast ymm10_4@sint16 mulL_4;
cast ymm10_5@sint16 mulL_5;
cast ymm10_6@sint16 mulL_6;
cast ymm10_7@sint16 mulL_7;
cast ymm10_8@sint16 mulL_8;
cast ymm10_9@sint16 mulL_9;
cast ymm10_a@sint16 mulL_a;
cast ymm10_b@sint16 mulL_b;
cast ymm10_c@sint16 mulL_c;
cast ymm10_d@sint16 mulL_d;
cast ymm10_e@sint16 mulL_e;
cast ymm10_f@sint16 mulL_f;
(* vpmulhw %ymm2,%ymm8,%ymm8                       #! PC = 0x555555559987 *)
smull mulH_0 mulLymm8_0 ymm8_0 ymm2_0;
smull mulH_1 mulLymm8_1 ymm8_1 ymm2_1;
smull mulH_2 mulLymm8_2 ymm8_2 ymm2_2;
smull mulH_3 mulLymm8_3 ymm8_3 ymm2_3;
smull mulH_4 mulLymm8_4 ymm8_4 ymm2_4;
smull mulH_5 mulLymm8_5 ymm8_5 ymm2_5;
smull mulH_6 mulLymm8_6 ymm8_6 ymm2_6;
smull mulH_7 mulLymm8_7 ymm8_7 ymm2_7;
smull mulH_8 mulLymm8_8 ymm8_8 ymm2_8;
smull mulH_9 mulLymm8_9 ymm8_9 ymm2_9;
smull mulH_a mulLymm8_a ymm8_a ymm2_a;
smull mulH_b mulLymm8_b ymm8_b ymm2_b;
smull mulH_c mulLymm8_c ymm8_c ymm2_c;
smull mulH_d mulLymm8_d ymm8_d ymm2_d;
smull mulH_e mulLymm8_e ymm8_e ymm2_e;
smull mulH_f mulLymm8_f ymm8_f ymm2_f;
mov ymm8_0 mulH_0;
mov ymm8_1 mulH_1;
mov ymm8_2 mulH_2;
mov ymm8_3 mulH_3;
mov ymm8_4 mulH_4;
mov ymm8_5 mulH_5;
mov ymm8_6 mulH_6;
mov ymm8_7 mulH_7;
mov ymm8_8 mulH_8;
mov ymm8_9 mulH_9;
mov ymm8_a mulH_a;
mov ymm8_b mulH_b;
mov ymm8_c mulH_c;
mov ymm8_d mulH_d;
mov ymm8_e mulH_e;
mov ymm8_f mulH_f;
(* vpmulhw %ymm0,%ymm10,%ymm10                     #! PC = 0x55555555998b *)
smull mulH_0 red_0 ymm10_0 ymm0_0;
assert true && red_0 = mulLymm8_0;
assume red_0 = mulLymm8_0 && true;
smull mulH_1 red_1 ymm10_1 ymm0_1;
assert true && red_1 = mulLymm8_1;
assume red_1 = mulLymm8_1 && true;
smull mulH_2 red_2 ymm10_2 ymm0_2;
assert true && red_2 = mulLymm8_2;
assume red_2 = mulLymm8_2 && true;
smull mulH_3 red_3 ymm10_3 ymm0_3;
assert true && red_3 = mulLymm8_3;
assume red_3 = mulLymm8_3 && true;
smull mulH_4 red_4 ymm10_4 ymm0_4;
assert true && red_4 = mulLymm8_4;
assume red_4 = mulLymm8_4 && true;
smull mulH_5 red_5 ymm10_5 ymm0_5;
assert true && red_5 = mulLymm8_5;
assume red_5 = mulLymm8_5 && true;
smull mulH_6 red_6 ymm10_6 ymm0_6;
assert true && red_6 = mulLymm8_6;
assume red_6 = mulLymm8_6 && true;
smull mulH_7 red_7 ymm10_7 ymm0_7;
assert true && red_7 = mulLymm8_7;
assume red_7 = mulLymm8_7 && true;
smull mulH_8 red_8 ymm10_8 ymm0_8;
assert true && red_8 = mulLymm8_8;
assume red_8 = mulLymm8_8 && true;
smull mulH_9 red_9 ymm10_9 ymm0_9;
assert true && red_9 = mulLymm8_9;
assume red_9 = mulLymm8_9 && true;
smull mulH_a red_a ymm10_a ymm0_a;
assert true && red_a = mulLymm8_a;
assume red_a = mulLymm8_a && true;
smull mulH_b red_b ymm10_b ymm0_b;
assert true && red_b = mulLymm8_b;
assume red_b = mulLymm8_b && true;
smull mulH_c red_c ymm10_c ymm0_c;
assert true && red_c = mulLymm8_c;
assume red_c = mulLymm8_c && true;
smull mulH_d red_d ymm10_d ymm0_d;
assert true && red_d = mulLymm8_d;
assume red_d = mulLymm8_d && true;
smull mulH_e red_e ymm10_e ymm0_e;
assert true && red_e = mulLymm8_e;
assume red_e = mulLymm8_e && true;
smull mulH_f red_f ymm10_f ymm0_f;
assert true && red_f = mulLymm8_f;
assume red_f = mulLymm8_f && true;
mov ymm10_0 mulH_0;
mov ymm10_1 mulH_1;
mov ymm10_2 mulH_2;
mov ymm10_3 mulH_3;
mov ymm10_4 mulH_4;
mov ymm10_5 mulH_5;
mov ymm10_6 mulH_6;
mov ymm10_7 mulH_7;
mov ymm10_8 mulH_8;
mov ymm10_9 mulH_9;
mov ymm10_a mulH_a;
mov ymm10_b mulH_b;
mov ymm10_c mulH_c;
mov ymm10_d mulH_d;
mov ymm10_e mulH_e;
mov ymm10_f mulH_f;
(* vpsubw %ymm10,%ymm8,%ymm8                       #! PC = 0x55555555998f *)
sub ymm8_0 ymm8_0 ymm10_0;
sub ymm8_1 ymm8_1 ymm10_1;
sub ymm8_2 ymm8_2 ymm10_2;
sub ymm8_3 ymm8_3 ymm10_3;
sub ymm8_4 ymm8_4 ymm10_4;
sub ymm8_5 ymm8_5 ymm10_5;
sub ymm8_6 ymm8_6 ymm10_6;
sub ymm8_7 ymm8_7 ymm10_7;
sub ymm8_8 ymm8_8 ymm10_8;
sub ymm8_9 ymm8_9 ymm10_9;
sub ymm8_a ymm8_a ymm10_a;
sub ymm8_b ymm8_b ymm10_b;
sub ymm8_c ymm8_c ymm10_c;
sub ymm8_d ymm8_d ymm10_d;
sub ymm8_e ymm8_e ymm10_e;
sub ymm8_f ymm8_f ymm10_f;
(* vbroadcasti128 0x2b0(%rdx),%ymm1                #! EA = L0x5555555613d0; Value = 0x1c189bcc5a35c644; PC = 0x555555559994 *)
mov ymm1_0 L0x5555555613d0;
mov ymm1_1 L0x5555555613d2;
mov ymm1_2 L0x5555555613d4;
mov ymm1_3 L0x5555555613d6;
mov ymm1_4 L0x5555555613d8;
mov ymm1_5 L0x5555555613da;
mov ymm1_6 L0x5555555613dc;
mov ymm1_7 L0x5555555613de;
mov ymm1_8 L0x5555555613d0;
mov ymm1_9 L0x5555555613d2;
mov ymm1_a L0x5555555613d4;
mov ymm1_b L0x5555555613d6;
mov ymm1_c L0x5555555613d8;
mov ymm1_d L0x5555555613da;
mov ymm1_e L0x5555555613dc;
mov ymm1_f L0x5555555613de;
(* vbroadcasti128 0x4b0(%rdx),%ymm2                #! EA = L0x5555555615d0; Value = 0x0c1813cc0c35ee44; PC = 0x55555555999d *)
mov ymm2_0 L0x5555555615d0;
mov ymm2_1 L0x5555555615d2;
mov ymm2_2 L0x5555555615d4;
mov ymm2_3 L0x5555555615d6;
mov ymm2_4 L0x5555555615d8;
mov ymm2_5 L0x5555555615da;
mov ymm2_6 L0x5555555615dc;
mov ymm2_7 L0x5555555615de;
mov ymm2_8 L0x5555555615d0;
mov ymm2_9 L0x5555555615d2;
mov ymm2_a L0x5555555615d4;
mov ymm2_b L0x5555555615d6;
mov ymm2_c L0x5555555615d8;
mov ymm2_d L0x5555555615da;
mov ymm2_e L0x5555555615dc;
mov ymm2_f L0x5555555615de;
(* vpmullw %ymm1,%ymm11,%ymm10                     #! PC = 0x5555555599a6 *)
smull mulHymm11_0 mulL_0 ymm1_0 ymm11_0;
smull mulHymm11_1 mulL_1 ymm1_1 ymm11_1;
smull mulHymm11_2 mulL_2 ymm1_2 ymm11_2;
smull mulHymm11_3 mulL_3 ymm1_3 ymm11_3;
smull mulHymm11_4 mulL_4 ymm1_4 ymm11_4;
smull mulHymm11_5 mulL_5 ymm1_5 ymm11_5;
smull mulHymm11_6 mulL_6 ymm1_6 ymm11_6;
smull mulHymm11_7 mulL_7 ymm1_7 ymm11_7;
smull mulHymm11_8 mulL_8 ymm1_8 ymm11_8;
smull mulHymm11_9 mulL_9 ymm1_9 ymm11_9;
smull mulHymm11_a mulL_a ymm1_a ymm11_a;
smull mulHymm11_b mulL_b ymm1_b ymm11_b;
smull mulHymm11_c mulL_c ymm1_c ymm11_c;
smull mulHymm11_d mulL_d ymm1_d ymm11_d;
smull mulHymm11_e mulL_e ymm1_e ymm11_e;
smull mulHymm11_f mulL_f ymm1_f ymm11_f;
cast ymm10_0@sint16 mulL_0;
cast ymm10_1@sint16 mulL_1;
cast ymm10_2@sint16 mulL_2;
cast ymm10_3@sint16 mulL_3;
cast ymm10_4@sint16 mulL_4;
cast ymm10_5@sint16 mulL_5;
cast ymm10_6@sint16 mulL_6;
cast ymm10_7@sint16 mulL_7;
cast ymm10_8@sint16 mulL_8;
cast ymm10_9@sint16 mulL_9;
cast ymm10_a@sint16 mulL_a;
cast ymm10_b@sint16 mulL_b;
cast ymm10_c@sint16 mulL_c;
cast ymm10_d@sint16 mulL_d;
cast ymm10_e@sint16 mulL_e;
cast ymm10_f@sint16 mulL_f;
(* vpmulhw %ymm2,%ymm11,%ymm11                     #! PC = 0x5555555599aa *)
smull mulH_0 mulLymm11_0 ymm11_0 ymm2_0;
smull mulH_1 mulLymm11_1 ymm11_1 ymm2_1;
smull mulH_2 mulLymm11_2 ymm11_2 ymm2_2;
smull mulH_3 mulLymm11_3 ymm11_3 ymm2_3;
smull mulH_4 mulLymm11_4 ymm11_4 ymm2_4;
smull mulH_5 mulLymm11_5 ymm11_5 ymm2_5;
smull mulH_6 mulLymm11_6 ymm11_6 ymm2_6;
smull mulH_7 mulLymm11_7 ymm11_7 ymm2_7;
smull mulH_8 mulLymm11_8 ymm11_8 ymm2_8;
smull mulH_9 mulLymm11_9 ymm11_9 ymm2_9;
smull mulH_a mulLymm11_a ymm11_a ymm2_a;
smull mulH_b mulLymm11_b ymm11_b ymm2_b;
smull mulH_c mulLymm11_c ymm11_c ymm2_c;
smull mulH_d mulLymm11_d ymm11_d ymm2_d;
smull mulH_e mulLymm11_e ymm11_e ymm2_e;
smull mulH_f mulLymm11_f ymm11_f ymm2_f;
mov ymm11_0 mulH_0;
mov ymm11_1 mulH_1;
mov ymm11_2 mulH_2;
mov ymm11_3 mulH_3;
mov ymm11_4 mulH_4;
mov ymm11_5 mulH_5;
mov ymm11_6 mulH_6;
mov ymm11_7 mulH_7;
mov ymm11_8 mulH_8;
mov ymm11_9 mulH_9;
mov ymm11_a mulH_a;
mov ymm11_b mulH_b;
mov ymm11_c mulH_c;
mov ymm11_d mulH_d;
mov ymm11_e mulH_e;
mov ymm11_f mulH_f;
(* vpmulhw %ymm0,%ymm10,%ymm10                     #! PC = 0x5555555599ae *)
smull mulH_0 red_0 ymm10_0 ymm0_0;
assert true && red_0 = mulLymm11_0;
assume red_0 = mulLymm11_0 && true;
smull mulH_1 red_1 ymm10_1 ymm0_1;
assert true && red_1 = mulLymm11_1;
assume red_1 = mulLymm11_1 && true;
smull mulH_2 red_2 ymm10_2 ymm0_2;
assert true && red_2 = mulLymm11_2;
assume red_2 = mulLymm11_2 && true;
smull mulH_3 red_3 ymm10_3 ymm0_3;
assert true && red_3 = mulLymm11_3;
assume red_3 = mulLymm11_3 && true;
smull mulH_4 red_4 ymm10_4 ymm0_4;
assert true && red_4 = mulLymm11_4;
assume red_4 = mulLymm11_4 && true;
smull mulH_5 red_5 ymm10_5 ymm0_5;
assert true && red_5 = mulLymm11_5;
assume red_5 = mulLymm11_5 && true;
smull mulH_6 red_6 ymm10_6 ymm0_6;
assert true && red_6 = mulLymm11_6;
assume red_6 = mulLymm11_6 && true;
smull mulH_7 red_7 ymm10_7 ymm0_7;
assert true && red_7 = mulLymm11_7;
assume red_7 = mulLymm11_7 && true;
smull mulH_8 red_8 ymm10_8 ymm0_8;
assert true && red_8 = mulLymm11_8;
assume red_8 = mulLymm11_8 && true;
smull mulH_9 red_9 ymm10_9 ymm0_9;
assert true && red_9 = mulLymm11_9;
assume red_9 = mulLymm11_9 && true;
smull mulH_a red_a ymm10_a ymm0_a;
assert true && red_a = mulLymm11_a;
assume red_a = mulLymm11_a && true;
smull mulH_b red_b ymm10_b ymm0_b;
assert true && red_b = mulLymm11_b;
assume red_b = mulLymm11_b && true;
smull mulH_c red_c ymm10_c ymm0_c;
assert true && red_c = mulLymm11_c;
assume red_c = mulLymm11_c && true;
smull mulH_d red_d ymm10_d ymm0_d;
assert true && red_d = mulLymm11_d;
assume red_d = mulLymm11_d && true;
smull mulH_e red_e ymm10_e ymm0_e;
assert true && red_e = mulLymm11_e;
assume red_e = mulLymm11_e && true;
smull mulH_f red_f ymm10_f ymm0_f;
assert true && red_f = mulLymm11_f;
assume red_f = mulLymm11_f && true;
mov ymm10_0 mulH_0;
mov ymm10_1 mulH_1;
mov ymm10_2 mulH_2;
mov ymm10_3 mulH_3;
mov ymm10_4 mulH_4;
mov ymm10_5 mulH_5;
mov ymm10_6 mulH_6;
mov ymm10_7 mulH_7;
mov ymm10_8 mulH_8;
mov ymm10_9 mulH_9;
mov ymm10_a mulH_a;
mov ymm10_b mulH_b;
mov ymm10_c mulH_c;
mov ymm10_d mulH_d;
mov ymm10_e mulH_e;
mov ymm10_f mulH_f;
(* vpsubw %ymm10,%ymm11,%ymm11                     #! PC = 0x5555555599b2 *)
sub ymm11_0 ymm11_0 ymm10_0;
sub ymm11_1 ymm11_1 ymm10_1;
sub ymm11_2 ymm11_2 ymm10_2;
sub ymm11_3 ymm11_3 ymm10_3;
sub ymm11_4 ymm11_4 ymm10_4;
sub ymm11_5 ymm11_5 ymm10_5;
sub ymm11_6 ymm11_6 ymm10_6;
sub ymm11_7 ymm11_7 ymm10_7;
sub ymm11_8 ymm11_8 ymm10_8;
sub ymm11_9 ymm11_9 ymm10_9;
sub ymm11_a ymm11_a ymm10_a;
sub ymm11_b ymm11_b ymm10_b;
sub ymm11_c ymm11_c ymm10_c;
sub ymm11_d ymm11_d ymm10_d;
sub ymm11_e ymm11_e ymm10_e;
sub ymm11_f ymm11_f ymm10_f;
(* vpaddw %ymm3,%ymm9,%ymm10                       #! PC = 0x5555555599b7 *)
add ymm10_0 ymm9_0 ymm3_0;
add ymm10_1 ymm9_1 ymm3_1;
add ymm10_2 ymm9_2 ymm3_2;
add ymm10_3 ymm9_3 ymm3_3;
add ymm10_4 ymm9_4 ymm3_4;
add ymm10_5 ymm9_5 ymm3_5;
add ymm10_6 ymm9_6 ymm3_6;
add ymm10_7 ymm9_7 ymm3_7;
add ymm10_8 ymm9_8 ymm3_8;
add ymm10_9 ymm9_9 ymm3_9;
add ymm10_a ymm9_a ymm3_a;
add ymm10_b ymm9_b ymm3_b;
add ymm10_c ymm9_c ymm3_c;
add ymm10_d ymm9_d ymm3_d;
add ymm10_e ymm9_e ymm3_e;
add ymm10_f ymm9_f ymm3_f;
(* vpsubw %ymm3,%ymm9,%ymm3                        #! PC = 0x5555555599bb *)
sub ymm3_0 ymm9_0 ymm3_0;
sub ymm3_1 ymm9_1 ymm3_1;
sub ymm3_2 ymm9_2 ymm3_2;
sub ymm3_3 ymm9_3 ymm3_3;
sub ymm3_4 ymm9_4 ymm3_4;
sub ymm3_5 ymm9_5 ymm3_5;
sub ymm3_6 ymm9_6 ymm3_6;
sub ymm3_7 ymm9_7 ymm3_7;
sub ymm3_8 ymm9_8 ymm3_8;
sub ymm3_9 ymm9_9 ymm3_9;
sub ymm3_a ymm9_a ymm3_a;
sub ymm3_b ymm9_b ymm3_b;
sub ymm3_c ymm9_c ymm3_c;
sub ymm3_d ymm9_d ymm3_d;
sub ymm3_e ymm9_e ymm3_e;
sub ymm3_f ymm9_f ymm3_f;
(* vpaddw %ymm6,%ymm7,%ymm9                        #! PC = 0x5555555599bf *)
add ymm9_0 ymm7_0 ymm6_0;
add ymm9_1 ymm7_1 ymm6_1;
add ymm9_2 ymm7_2 ymm6_2;
add ymm9_3 ymm7_3 ymm6_3;
add ymm9_4 ymm7_4 ymm6_4;
add ymm9_5 ymm7_5 ymm6_5;
add ymm9_6 ymm7_6 ymm6_6;
add ymm9_7 ymm7_7 ymm6_7;
add ymm9_8 ymm7_8 ymm6_8;
add ymm9_9 ymm7_9 ymm6_9;
add ymm9_a ymm7_a ymm6_a;
add ymm9_b ymm7_b ymm6_b;
add ymm9_c ymm7_c ymm6_c;
add ymm9_d ymm7_d ymm6_d;
add ymm9_e ymm7_e ymm6_e;
add ymm9_f ymm7_f ymm6_f;
(* vpsubw %ymm6,%ymm7,%ymm6                        #! PC = 0x5555555599c3 *)
sub ymm6_0 ymm7_0 ymm6_0;
sub ymm6_1 ymm7_1 ymm6_1;
sub ymm6_2 ymm7_2 ymm6_2;
sub ymm6_3 ymm7_3 ymm6_3;
sub ymm6_4 ymm7_4 ymm6_4;
sub ymm6_5 ymm7_5 ymm6_5;
sub ymm6_6 ymm7_6 ymm6_6;
sub ymm6_7 ymm7_7 ymm6_7;
sub ymm6_8 ymm7_8 ymm6_8;
sub ymm6_9 ymm7_9 ymm6_9;
sub ymm6_a ymm7_a ymm6_a;
sub ymm6_b ymm7_b ymm6_b;
sub ymm6_c ymm7_c ymm6_c;
sub ymm6_d ymm7_d ymm6_d;
sub ymm6_e ymm7_e ymm6_e;
sub ymm6_f ymm7_f ymm6_f;
(* vpaddw %ymm8,%ymm5,%ymm7                        #! PC = 0x5555555599c7 *)
add ymm7_0 ymm5_0 ymm8_0;
add ymm7_1 ymm5_1 ymm8_1;
add ymm7_2 ymm5_2 ymm8_2;
add ymm7_3 ymm5_3 ymm8_3;
add ymm7_4 ymm5_4 ymm8_4;
add ymm7_5 ymm5_5 ymm8_5;
add ymm7_6 ymm5_6 ymm8_6;
add ymm7_7 ymm5_7 ymm8_7;
add ymm7_8 ymm5_8 ymm8_8;
add ymm7_9 ymm5_9 ymm8_9;
add ymm7_a ymm5_a ymm8_a;
add ymm7_b ymm5_b ymm8_b;
add ymm7_c ymm5_c ymm8_c;
add ymm7_d ymm5_d ymm8_d;
add ymm7_e ymm5_e ymm8_e;
add ymm7_f ymm5_f ymm8_f;
(* vpsubw %ymm8,%ymm5,%ymm8                        #! PC = 0x5555555599cc *)
sub ymm8_0 ymm5_0 ymm8_0;
sub ymm8_1 ymm5_1 ymm8_1;
sub ymm8_2 ymm5_2 ymm8_2;
sub ymm8_3 ymm5_3 ymm8_3;
sub ymm8_4 ymm5_4 ymm8_4;
sub ymm8_5 ymm5_5 ymm8_5;
sub ymm8_6 ymm5_6 ymm8_6;
sub ymm8_7 ymm5_7 ymm8_7;
sub ymm8_8 ymm5_8 ymm8_8;
sub ymm8_9 ymm5_9 ymm8_9;
sub ymm8_a ymm5_a ymm8_a;
sub ymm8_b ymm5_b ymm8_b;
sub ymm8_c ymm5_c ymm8_c;
sub ymm8_d ymm5_d ymm8_d;
sub ymm8_e ymm5_e ymm8_e;
sub ymm8_f ymm5_f ymm8_f;
(* vpaddw %ymm11,%ymm4,%ymm5                       #! PC = 0x5555555599d1 *)
add ymm5_0 ymm4_0 ymm11_0;
add ymm5_1 ymm4_1 ymm11_1;
add ymm5_2 ymm4_2 ymm11_2;
add ymm5_3 ymm4_3 ymm11_3;
add ymm5_4 ymm4_4 ymm11_4;
add ymm5_5 ymm4_5 ymm11_5;
add ymm5_6 ymm4_6 ymm11_6;
add ymm5_7 ymm4_7 ymm11_7;
add ymm5_8 ymm4_8 ymm11_8;
add ymm5_9 ymm4_9 ymm11_9;
add ymm5_a ymm4_a ymm11_a;
add ymm5_b ymm4_b ymm11_b;
add ymm5_c ymm4_c ymm11_c;
add ymm5_d ymm4_d ymm11_d;
add ymm5_e ymm4_e ymm11_e;
add ymm5_f ymm4_f ymm11_f;
(* vpsubw %ymm11,%ymm4,%ymm11                      #! PC = 0x5555555599d6 *)
sub ymm11_0 ymm4_0 ymm11_0;
sub ymm11_1 ymm4_1 ymm11_1;
sub ymm11_2 ymm4_2 ymm11_2;
sub ymm11_3 ymm4_3 ymm11_3;
sub ymm11_4 ymm4_4 ymm11_4;
sub ymm11_5 ymm4_5 ymm11_5;
sub ymm11_6 ymm4_6 ymm11_6;
sub ymm11_7 ymm4_7 ymm11_7;
sub ymm11_8 ymm4_8 ymm11_8;
sub ymm11_9 ymm4_9 ymm11_9;
sub ymm11_a ymm4_a ymm11_a;
sub ymm11_b ymm4_b ymm11_b;
sub ymm11_c ymm4_c ymm11_c;
sub ymm11_d ymm4_d ymm11_d;
sub ymm11_e ymm4_e ymm11_e;
sub ymm11_f ymm4_f ymm11_f;
(* vmovdqa %ymm10,0x600(%rdi)                      #! EA = L0x7fffffffd8e0; PC = 0x5555555599db *)
mov L0x7fffffffd8e0 ymm10_0;
mov L0x7fffffffd8e2 ymm10_1;
mov L0x7fffffffd8e4 ymm10_2;
mov L0x7fffffffd8e6 ymm10_3;
mov L0x7fffffffd8e8 ymm10_4;
mov L0x7fffffffd8ea ymm10_5;
mov L0x7fffffffd8ec ymm10_6;
mov L0x7fffffffd8ee ymm10_7;
mov L0x7fffffffd8f0 ymm10_8;
mov L0x7fffffffd8f2 ymm10_9;
mov L0x7fffffffd8f4 ymm10_a;
mov L0x7fffffffd8f6 ymm10_b;
mov L0x7fffffffd8f8 ymm10_c;
mov L0x7fffffffd8fa ymm10_d;
mov L0x7fffffffd8fc ymm10_e;
mov L0x7fffffffd8fe ymm10_f;
(* vmovdqa %ymm3,0x620(%rdi)                       #! EA = L0x7fffffffd900; PC = 0x5555555599e3 *)
mov L0x7fffffffd900 ymm3_0;
mov L0x7fffffffd902 ymm3_1;
mov L0x7fffffffd904 ymm3_2;
mov L0x7fffffffd906 ymm3_3;
mov L0x7fffffffd908 ymm3_4;
mov L0x7fffffffd90a ymm3_5;
mov L0x7fffffffd90c ymm3_6;
mov L0x7fffffffd90e ymm3_7;
mov L0x7fffffffd910 ymm3_8;
mov L0x7fffffffd912 ymm3_9;
mov L0x7fffffffd914 ymm3_a;
mov L0x7fffffffd916 ymm3_b;
mov L0x7fffffffd918 ymm3_c;
mov L0x7fffffffd91a ymm3_d;
mov L0x7fffffffd91c ymm3_e;
mov L0x7fffffffd91e ymm3_f;
(* vmovdqa %ymm9,0x640(%rdi)                       #! EA = L0x7fffffffd920; PC = 0x5555555599eb *)
mov L0x7fffffffd920 ymm9_0;
mov L0x7fffffffd922 ymm9_1;
mov L0x7fffffffd924 ymm9_2;
mov L0x7fffffffd926 ymm9_3;
mov L0x7fffffffd928 ymm9_4;
mov L0x7fffffffd92a ymm9_5;
mov L0x7fffffffd92c ymm9_6;
mov L0x7fffffffd92e ymm9_7;
mov L0x7fffffffd930 ymm9_8;
mov L0x7fffffffd932 ymm9_9;
mov L0x7fffffffd934 ymm9_a;
mov L0x7fffffffd936 ymm9_b;
mov L0x7fffffffd938 ymm9_c;
mov L0x7fffffffd93a ymm9_d;
mov L0x7fffffffd93c ymm9_e;
mov L0x7fffffffd93e ymm9_f;
(* vmovdqa %ymm6,0x660(%rdi)                       #! EA = L0x7fffffffd940; PC = 0x5555555599f3 *)
mov L0x7fffffffd940 ymm6_0;
mov L0x7fffffffd942 ymm6_1;
mov L0x7fffffffd944 ymm6_2;
mov L0x7fffffffd946 ymm6_3;
mov L0x7fffffffd948 ymm6_4;
mov L0x7fffffffd94a ymm6_5;
mov L0x7fffffffd94c ymm6_6;
mov L0x7fffffffd94e ymm6_7;
mov L0x7fffffffd950 ymm6_8;
mov L0x7fffffffd952 ymm6_9;
mov L0x7fffffffd954 ymm6_a;
mov L0x7fffffffd956 ymm6_b;
mov L0x7fffffffd958 ymm6_c;
mov L0x7fffffffd95a ymm6_d;
mov L0x7fffffffd95c ymm6_e;
mov L0x7fffffffd95e ymm6_f;
(* vmovdqa %ymm7,0x680(%rdi)                       #! EA = L0x7fffffffd960; PC = 0x5555555599fb *)
mov L0x7fffffffd960 ymm7_0;
mov L0x7fffffffd962 ymm7_1;
mov L0x7fffffffd964 ymm7_2;
mov L0x7fffffffd966 ymm7_3;
mov L0x7fffffffd968 ymm7_4;
mov L0x7fffffffd96a ymm7_5;
mov L0x7fffffffd96c ymm7_6;
mov L0x7fffffffd96e ymm7_7;
mov L0x7fffffffd970 ymm7_8;
mov L0x7fffffffd972 ymm7_9;
mov L0x7fffffffd974 ymm7_a;
mov L0x7fffffffd976 ymm7_b;
mov L0x7fffffffd978 ymm7_c;
mov L0x7fffffffd97a ymm7_d;
mov L0x7fffffffd97c ymm7_e;
mov L0x7fffffffd97e ymm7_f;
(* vmovdqa %ymm8,0x6a0(%rdi)                       #! EA = L0x7fffffffd980; PC = 0x555555559a03 *)
mov L0x7fffffffd980 ymm8_0;
mov L0x7fffffffd982 ymm8_1;
mov L0x7fffffffd984 ymm8_2;
mov L0x7fffffffd986 ymm8_3;
mov L0x7fffffffd988 ymm8_4;
mov L0x7fffffffd98a ymm8_5;
mov L0x7fffffffd98c ymm8_6;
mov L0x7fffffffd98e ymm8_7;
mov L0x7fffffffd990 ymm8_8;
mov L0x7fffffffd992 ymm8_9;
mov L0x7fffffffd994 ymm8_a;
mov L0x7fffffffd996 ymm8_b;
mov L0x7fffffffd998 ymm8_c;
mov L0x7fffffffd99a ymm8_d;
mov L0x7fffffffd99c ymm8_e;
mov L0x7fffffffd99e ymm8_f;
(* vmovdqa %ymm5,0x6c0(%rdi)                       #! EA = L0x7fffffffd9a0; PC = 0x555555559a0b *)
mov L0x7fffffffd9a0 ymm5_0;
mov L0x7fffffffd9a2 ymm5_1;
mov L0x7fffffffd9a4 ymm5_2;
mov L0x7fffffffd9a6 ymm5_3;
mov L0x7fffffffd9a8 ymm5_4;
mov L0x7fffffffd9aa ymm5_5;
mov L0x7fffffffd9ac ymm5_6;
mov L0x7fffffffd9ae ymm5_7;
mov L0x7fffffffd9b0 ymm5_8;
mov L0x7fffffffd9b2 ymm5_9;
mov L0x7fffffffd9b4 ymm5_a;
mov L0x7fffffffd9b6 ymm5_b;
mov L0x7fffffffd9b8 ymm5_c;
mov L0x7fffffffd9ba ymm5_d;
mov L0x7fffffffd9bc ymm5_e;
mov L0x7fffffffd9be ymm5_f;
(* vmovdqa %ymm11,0x6e0(%rdi)                      #! EA = L0x7fffffffd9c0; PC = 0x555555559a13 *)
mov L0x7fffffffd9c0 ymm11_0;
mov L0x7fffffffd9c2 ymm11_1;
mov L0x7fffffffd9c4 ymm11_2;
mov L0x7fffffffd9c6 ymm11_3;
mov L0x7fffffffd9c8 ymm11_4;
mov L0x7fffffffd9ca ymm11_5;
mov L0x7fffffffd9cc ymm11_6;
mov L0x7fffffffd9ce ymm11_7;
mov L0x7fffffffd9d0 ymm11_8;
mov L0x7fffffffd9d2 ymm11_9;
mov L0x7fffffffd9d4 ymm11_a;
mov L0x7fffffffd9d6 ymm11_b;
mov L0x7fffffffd9d8 ymm11_c;
mov L0x7fffffffd9da ymm11_d;
mov L0x7fffffffd9dc ymm11_e;
mov L0x7fffffffd9de ymm11_f;


(**************** LEVELS 3-8, 6 *****************)


(**************** CUT 157, 21 *****************)

cut 
  and [
eqmod (inp_poly**2) (L0x7fffffffd8e0*x** 0+L0x7fffffffd8f0*x** 1)
      [10753, x**2 - 1000],
eqmod (inp_poly**2) (L0x7fffffffd900*x** 0+L0x7fffffffd910*x** 1)
      [10753, x**2 - 9753],
eqmod (inp_poly**2) (L0x7fffffffd8e2*x** 0+L0x7fffffffd8f2*x** 1)
      [10753, x**2 - 5754],
eqmod (inp_poly**2) (L0x7fffffffd902*x** 0+L0x7fffffffd912*x** 1)
      [10753, x**2 - 4999],
eqmod (inp_poly**2) (L0x7fffffffd8e4*x** 0+L0x7fffffffd8f4*x** 1)
      [10753, x**2 - 9163],
eqmod (inp_poly**2) (L0x7fffffffd904*x** 0+L0x7fffffffd914*x** 1)
      [10753, x**2 - 1590],
eqmod (inp_poly**2) (L0x7fffffffd8e6*x** 0+L0x7fffffffd8f6*x** 1)
      [10753, x**2 - 8271],
eqmod (inp_poly**2) (L0x7fffffffd906*x** 0+L0x7fffffffd916*x** 1)
      [10753, x**2 - 2482],
eqmod (inp_poly**2) (L0x7fffffffd8e8*x** 0+L0x7fffffffd8f8*x** 1)
      [10753, x**2 - 10715],
eqmod (inp_poly**2) (L0x7fffffffd908*x** 0+L0x7fffffffd918*x** 1)
      [10753, x**2 - 38],
eqmod (inp_poly**2) (L0x7fffffffd8ea*x** 0+L0x7fffffffd8fa*x** 1)
      [10753, x**2 - 9287],
eqmod (inp_poly**2) (L0x7fffffffd90a*x** 0+L0x7fffffffd91a*x** 1)
      [10753, x**2 - 1466],
eqmod (inp_poly**2) (L0x7fffffffd8ec*x** 0+L0x7fffffffd8fc*x** 1)
      [10753, x**2 - 9308],
eqmod (inp_poly**2) (L0x7fffffffd90c*x** 0+L0x7fffffffd91c*x** 1)
      [10753, x**2 - 1445],
eqmod (inp_poly**2) (L0x7fffffffd8ee*x** 0+L0x7fffffffd8fe*x** 1)
      [10753, x**2 - 2546],
eqmod (inp_poly**2) (L0x7fffffffd90e*x** 0+L0x7fffffffd91e*x** 1)
      [10753, x**2 - 8207],
eqmod (inp_poly**2) (L0x7fffffffd920*x** 0+L0x7fffffffd930*x** 1)
      [10753, x**2 - 3429],
eqmod (inp_poly**2) (L0x7fffffffd940*x** 0+L0x7fffffffd950*x** 1)
      [10753, x**2 - 7324],
eqmod (inp_poly**2) (L0x7fffffffd922*x** 0+L0x7fffffffd932*x** 1)
      [10753, x**2 - 5515],
eqmod (inp_poly**2) (L0x7fffffffd942*x** 0+L0x7fffffffd952*x** 1)
      [10753, x**2 - 5238],
eqmod (inp_poly**2) (L0x7fffffffd924*x** 0+L0x7fffffffd934*x** 1)
      [10753, x**2 - 3903],
eqmod (inp_poly**2) (L0x7fffffffd944*x** 0+L0x7fffffffd954*x** 1)
      [10753, x**2 - 6850],
eqmod (inp_poly**2) (L0x7fffffffd926*x** 0+L0x7fffffffd936*x** 1)
      [10753, x**2 - 6823],
eqmod (inp_poly**2) (L0x7fffffffd946*x** 0+L0x7fffffffd956*x** 1)
      [10753, x**2 - 3930],
eqmod (inp_poly**2) (L0x7fffffffd928*x** 0+L0x7fffffffd938*x** 1)
      [10753, x**2 - 9913],
eqmod (inp_poly**2) (L0x7fffffffd948*x** 0+L0x7fffffffd958*x** 1)
      [10753, x**2 - 840],
eqmod (inp_poly**2) (L0x7fffffffd92a*x** 0+L0x7fffffffd93a*x** 1)
      [10753, x**2 - 7210],
eqmod (inp_poly**2) (L0x7fffffffd94a*x** 0+L0x7fffffffd95a*x** 1)
      [10753, x**2 - 3543],
eqmod (inp_poly**2) (L0x7fffffffd92c*x** 0+L0x7fffffffd93c*x** 1)
      [10753, x**2 - 9938],
eqmod (inp_poly**2) (L0x7fffffffd94c*x** 0+L0x7fffffffd95c*x** 1)
      [10753, x**2 - 815],
eqmod (inp_poly**2) (L0x7fffffffd92e*x** 0+L0x7fffffffd93e*x** 1)
      [10753, x**2 - 2515],
eqmod (inp_poly**2) (L0x7fffffffd94e*x** 0+L0x7fffffffd95e*x** 1)
      [10753, x**2 - 8238],
eqmod (inp_poly**2) (L0x7fffffffd960*x** 0+L0x7fffffffd970*x** 1)
      [10753, x**2 - 3310],
eqmod (inp_poly**2) (L0x7fffffffd980*x** 0+L0x7fffffffd990*x** 1)
      [10753, x**2 - 7443],
eqmod (inp_poly**2) (L0x7fffffffd962*x** 0+L0x7fffffffd972*x** 1)
      [10753, x**2 - 2056],
eqmod (inp_poly**2) (L0x7fffffffd982*x** 0+L0x7fffffffd992*x** 1)
      [10753, x**2 - 8697],
eqmod (inp_poly**2) (L0x7fffffffd964*x** 0+L0x7fffffffd974*x** 1)
      [10753, x**2 - 8716],
eqmod (inp_poly**2) (L0x7fffffffd984*x** 0+L0x7fffffffd994*x** 1)
      [10753, x**2 - 2037],
eqmod (inp_poly**2) (L0x7fffffffd966*x** 0+L0x7fffffffd976*x** 1)
      [10753, x**2 - 4043],
eqmod (inp_poly**2) (L0x7fffffffd986*x** 0+L0x7fffffffd996*x** 1)
      [10753, x**2 - 6710],
eqmod (inp_poly**2) (L0x7fffffffd968*x** 0+L0x7fffffffd978*x** 1)
      [10753, x**2 - 2670],
eqmod (inp_poly**2) (L0x7fffffffd988*x** 0+L0x7fffffffd998*x** 1)
      [10753, x**2 - 8083],
eqmod (inp_poly**2) (L0x7fffffffd96a*x** 0+L0x7fffffffd97a*x** 1)
      [10753, x**2 - 3965],
eqmod (inp_poly**2) (L0x7fffffffd98a*x** 0+L0x7fffffffd99a*x** 1)
      [10753, x**2 - 6788],
eqmod (inp_poly**2) (L0x7fffffffd96c*x** 0+L0x7fffffffd97c*x** 1)
      [10753, x**2 - 7583],
eqmod (inp_poly**2) (L0x7fffffffd98c*x** 0+L0x7fffffffd99c*x** 1)
      [10753, x**2 - 3170],
eqmod (inp_poly**2) (L0x7fffffffd96e*x** 0+L0x7fffffffd97e*x** 1)
      [10753, x**2 - 3911],
eqmod (inp_poly**2) (L0x7fffffffd98e*x** 0+L0x7fffffffd99e*x** 1)
      [10753, x**2 - 6842],
eqmod (inp_poly**2) (L0x7fffffffd9a0*x** 0+L0x7fffffffd9b0*x** 1)
      [10753, x**2 - 2425],
eqmod (inp_poly**2) (L0x7fffffffd9c0*x** 0+L0x7fffffffd9d0*x** 1)
      [10753, x**2 - 8328],
eqmod (inp_poly**2) (L0x7fffffffd9a2*x** 0+L0x7fffffffd9b2*x** 1)
      [10753, x**2 - 6964],
eqmod (inp_poly**2) (L0x7fffffffd9c2*x** 0+L0x7fffffffd9d2*x** 1)
      [10753, x**2 - 3789],
eqmod (inp_poly**2) (L0x7fffffffd9a4*x** 0+L0x7fffffffd9b4*x** 1)
      [10753, x**2 - 4209],
eqmod (inp_poly**2) (L0x7fffffffd9c4*x** 0+L0x7fffffffd9d4*x** 1)
      [10753, x**2 - 6544],
eqmod (inp_poly**2) (L0x7fffffffd9a6*x** 0+L0x7fffffffd9b6*x** 1)
      [10753, x**2 - 9573],
eqmod (inp_poly**2) (L0x7fffffffd9c6*x** 0+L0x7fffffffd9d6*x** 1)
      [10753, x**2 - 1180],
eqmod (inp_poly**2) (L0x7fffffffd9a8*x** 0+L0x7fffffffd9b8*x** 1)
      [10753, x**2 - 5822],
eqmod (inp_poly**2) (L0x7fffffffd9c8*x** 0+L0x7fffffffd9d8*x** 1)
      [10753, x**2 - 4931],
eqmod (inp_poly**2) (L0x7fffffffd9aa*x** 0+L0x7fffffffd9ba*x** 1)
      [10753, x**2 - 5585],
eqmod (inp_poly**2) (L0x7fffffffd9ca*x** 0+L0x7fffffffd9da*x** 1)
      [10753, x**2 - 5168],
eqmod (inp_poly**2) (L0x7fffffffd9ac*x** 0+L0x7fffffffd9bc*x** 1)
      [10753, x**2 - 8593],
eqmod (inp_poly**2) (L0x7fffffffd9cc*x** 0+L0x7fffffffd9dc*x** 1)
      [10753, x**2 - 2160],
eqmod (inp_poly**2) (L0x7fffffffd9ae*x** 0+L0x7fffffffd9be*x** 1)
      [10753, x**2 - 7787],
eqmod (inp_poly**2) (L0x7fffffffd9ce*x** 0+L0x7fffffffd9de*x** 1)
      [10753, x**2 - 2966]
  ] prove with [ precondition, cuts [ 15, 33, 51, 69, 87, 105, 123, 141] ] && and [
(-30532)@16<=s L0x7fffffffd8e0,L0x7fffffffd8e0<=s 30532@16,
(-30532)@16<=s L0x7fffffffd8f0,L0x7fffffffd8f0<=s 30532@16,
(-30532)@16<=s L0x7fffffffd900,L0x7fffffffd900<=s 30532@16,
(-30532)@16<=s L0x7fffffffd910,L0x7fffffffd910<=s 30532@16,
(-30253)@16<=s L0x7fffffffd8e2,L0x7fffffffd8e2<=s 30253@16,
(-30253)@16<=s L0x7fffffffd8f2,L0x7fffffffd8f2<=s 30253@16,
(-30253)@16<=s L0x7fffffffd902,L0x7fffffffd902<=s 30253@16,
(-30253)@16<=s L0x7fffffffd912,L0x7fffffffd912<=s 30253@16,
(-31517)@16<=s L0x7fffffffd8e4,L0x7fffffffd8e4<=s 31517@16,
(-31517)@16<=s L0x7fffffffd8f4,L0x7fffffffd8f4<=s 31517@16,
(-31517)@16<=s L0x7fffffffd904,L0x7fffffffd904<=s 31517@16,
(-31517)@16<=s L0x7fffffffd914,L0x7fffffffd914<=s 31517@16,
(-29757)@16<=s L0x7fffffffd8e6,L0x7fffffffd8e6<=s 29757@16,
(-29757)@16<=s L0x7fffffffd8f6,L0x7fffffffd8f6<=s 29757@16,
(-29757)@16<=s L0x7fffffffd906,L0x7fffffffd906<=s 29757@16,
(-29757)@16<=s L0x7fffffffd916,L0x7fffffffd916<=s 29757@16,
(-31043)@16<=s L0x7fffffffd8e8,L0x7fffffffd8e8<=s 31043@16,
(-31043)@16<=s L0x7fffffffd8f8,L0x7fffffffd8f8<=s 31043@16,
(-31043)@16<=s L0x7fffffffd908,L0x7fffffffd908<=s 31043@16,
(-31043)@16<=s L0x7fffffffd918,L0x7fffffffd918<=s 31043@16,
(-30297)@16<=s L0x7fffffffd8ea,L0x7fffffffd8ea<=s 30297@16,
(-30297)@16<=s L0x7fffffffd8fa,L0x7fffffffd8fa<=s 30297@16,
(-30297)@16<=s L0x7fffffffd90a,L0x7fffffffd90a<=s 30297@16,
(-30297)@16<=s L0x7fffffffd91a,L0x7fffffffd91a<=s 30297@16,
(-29534)@16<=s L0x7fffffffd8ec,L0x7fffffffd8ec<=s 29534@16,
(-29534)@16<=s L0x7fffffffd8fc,L0x7fffffffd8fc<=s 29534@16,
(-29534)@16<=s L0x7fffffffd90c,L0x7fffffffd90c<=s 29534@16,
(-29534)@16<=s L0x7fffffffd91c,L0x7fffffffd91c<=s 29534@16,
(-28903)@16<=s L0x7fffffffd8ee,L0x7fffffffd8ee<=s 28903@16,
(-28903)@16<=s L0x7fffffffd8fe,L0x7fffffffd8fe<=s 28903@16,
(-28903)@16<=s L0x7fffffffd90e,L0x7fffffffd90e<=s 28903@16,
(-28903)@16<=s L0x7fffffffd91e,L0x7fffffffd91e<=s 28903@16,
(-31355)@16<=s L0x7fffffffd920,L0x7fffffffd920<=s 31355@16,
(-31355)@16<=s L0x7fffffffd930,L0x7fffffffd930<=s 31355@16,
(-31355)@16<=s L0x7fffffffd940,L0x7fffffffd940<=s 31355@16,
(-31355)@16<=s L0x7fffffffd950,L0x7fffffffd950<=s 31355@16,
(-30306)@16<=s L0x7fffffffd922,L0x7fffffffd922<=s 30306@16,
(-30306)@16<=s L0x7fffffffd932,L0x7fffffffd932<=s 30306@16,
(-30306)@16<=s L0x7fffffffd942,L0x7fffffffd942<=s 30306@16,
(-30306)@16<=s L0x7fffffffd952,L0x7fffffffd952<=s 30306@16,
(-30482)@16<=s L0x7fffffffd924,L0x7fffffffd924<=s 30482@16,
(-30482)@16<=s L0x7fffffffd934,L0x7fffffffd934<=s 30482@16,
(-30482)@16<=s L0x7fffffffd944,L0x7fffffffd944<=s 30482@16,
(-30482)@16<=s L0x7fffffffd954,L0x7fffffffd954<=s 30482@16,
(-28829)@16<=s L0x7fffffffd926,L0x7fffffffd926<=s 28829@16,
(-28829)@16<=s L0x7fffffffd936,L0x7fffffffd936<=s 28829@16,
(-28829)@16<=s L0x7fffffffd946,L0x7fffffffd946<=s 28829@16,
(-28829)@16<=s L0x7fffffffd956,L0x7fffffffd956<=s 28829@16,
(-30322)@16<=s L0x7fffffffd928,L0x7fffffffd928<=s 30322@16,
(-30322)@16<=s L0x7fffffffd938,L0x7fffffffd938<=s 30322@16,
(-30322)@16<=s L0x7fffffffd948,L0x7fffffffd948<=s 30322@16,
(-30322)@16<=s L0x7fffffffd958,L0x7fffffffd958<=s 30322@16,
(-30067)@16<=s L0x7fffffffd92a,L0x7fffffffd92a<=s 30067@16,
(-30067)@16<=s L0x7fffffffd93a,L0x7fffffffd93a<=s 30067@16,
(-30067)@16<=s L0x7fffffffd94a,L0x7fffffffd94a<=s 30067@16,
(-30067)@16<=s L0x7fffffffd95a,L0x7fffffffd95a<=s 30067@16,
(-29035)@16<=s L0x7fffffffd92c,L0x7fffffffd92c<=s 29035@16,
(-29035)@16<=s L0x7fffffffd93c,L0x7fffffffd93c<=s 29035@16,
(-29035)@16<=s L0x7fffffffd94c,L0x7fffffffd94c<=s 29035@16,
(-29035)@16<=s L0x7fffffffd95c,L0x7fffffffd95c<=s 29035@16,
(-28813)@16<=s L0x7fffffffd92e,L0x7fffffffd92e<=s 28813@16,
(-28813)@16<=s L0x7fffffffd93e,L0x7fffffffd93e<=s 28813@16,
(-28813)@16<=s L0x7fffffffd94e,L0x7fffffffd94e<=s 28813@16,
(-28813)@16<=s L0x7fffffffd95e,L0x7fffffffd95e<=s 28813@16,
(-31363)@16<=s L0x7fffffffd960,L0x7fffffffd960<=s 31363@16,
(-31363)@16<=s L0x7fffffffd970,L0x7fffffffd970<=s 31363@16,
(-31363)@16<=s L0x7fffffffd980,L0x7fffffffd980<=s 31363@16,
(-31363)@16<=s L0x7fffffffd990,L0x7fffffffd990<=s 31363@16,
(-31350)@16<=s L0x7fffffffd962,L0x7fffffffd962<=s 31350@16,
(-31350)@16<=s L0x7fffffffd972,L0x7fffffffd972<=s 31350@16,
(-31350)@16<=s L0x7fffffffd982,L0x7fffffffd982<=s 31350@16,
(-31350)@16<=s L0x7fffffffd992,L0x7fffffffd992<=s 31350@16,
(-29822)@16<=s L0x7fffffffd964,L0x7fffffffd964<=s 29822@16,
(-29822)@16<=s L0x7fffffffd974,L0x7fffffffd974<=s 29822@16,
(-29822)@16<=s L0x7fffffffd984,L0x7fffffffd984<=s 29822@16,
(-29822)@16<=s L0x7fffffffd994,L0x7fffffffd994<=s 29822@16,
(-30170)@16<=s L0x7fffffffd966,L0x7fffffffd966<=s 30170@16,
(-30170)@16<=s L0x7fffffffd976,L0x7fffffffd976<=s 30170@16,
(-30170)@16<=s L0x7fffffffd986,L0x7fffffffd986<=s 30170@16,
(-30170)@16<=s L0x7fffffffd996,L0x7fffffffd996<=s 30170@16,
(-30281)@16<=s L0x7fffffffd968,L0x7fffffffd968<=s 30281@16,
(-30281)@16<=s L0x7fffffffd978,L0x7fffffffd978<=s 30281@16,
(-30281)@16<=s L0x7fffffffd988,L0x7fffffffd988<=s 30281@16,
(-30281)@16<=s L0x7fffffffd998,L0x7fffffffd998<=s 30281@16,
(-30869)@16<=s L0x7fffffffd96a,L0x7fffffffd96a<=s 30869@16,
(-30869)@16<=s L0x7fffffffd97a,L0x7fffffffd97a<=s 30869@16,
(-30869)@16<=s L0x7fffffffd98a,L0x7fffffffd98a<=s 30869@16,
(-30869)@16<=s L0x7fffffffd99a,L0x7fffffffd99a<=s 30869@16,
(-29643)@16<=s L0x7fffffffd96c,L0x7fffffffd96c<=s 29643@16,
(-29643)@16<=s L0x7fffffffd97c,L0x7fffffffd97c<=s 29643@16,
(-29643)@16<=s L0x7fffffffd98c,L0x7fffffffd98c<=s 29643@16,
(-29643)@16<=s L0x7fffffffd99c,L0x7fffffffd99c<=s 29643@16,
(-30225)@16<=s L0x7fffffffd96e,L0x7fffffffd96e<=s 30225@16,
(-30225)@16<=s L0x7fffffffd97e,L0x7fffffffd97e<=s 30225@16,
(-30225)@16<=s L0x7fffffffd98e,L0x7fffffffd98e<=s 30225@16,
(-30225)@16<=s L0x7fffffffd99e,L0x7fffffffd99e<=s 30225@16,
(-29291)@16<=s L0x7fffffffd9a0,L0x7fffffffd9a0<=s 29291@16,
(-29291)@16<=s L0x7fffffffd9b0,L0x7fffffffd9b0<=s 29291@16,
(-29291)@16<=s L0x7fffffffd9c0,L0x7fffffffd9c0<=s 29291@16,
(-29291)@16<=s L0x7fffffffd9d0,L0x7fffffffd9d0<=s 29291@16,
(-28805)@16<=s L0x7fffffffd9a2,L0x7fffffffd9a2<=s 28805@16,
(-28805)@16<=s L0x7fffffffd9b2,L0x7fffffffd9b2<=s 28805@16,
(-28805)@16<=s L0x7fffffffd9c2,L0x7fffffffd9c2<=s 28805@16,
(-28805)@16<=s L0x7fffffffd9d2,L0x7fffffffd9d2<=s 28805@16,
(-29801)@16<=s L0x7fffffffd9a4,L0x7fffffffd9a4<=s 29801@16,
(-29801)@16<=s L0x7fffffffd9b4,L0x7fffffffd9b4<=s 29801@16,
(-29801)@16<=s L0x7fffffffd9c4,L0x7fffffffd9c4<=s 29801@16,
(-29801)@16<=s L0x7fffffffd9d4,L0x7fffffffd9d4<=s 29801@16,
(-29097)@16<=s L0x7fffffffd9a6,L0x7fffffffd9a6<=s 29097@16,
(-29097)@16<=s L0x7fffffffd9b6,L0x7fffffffd9b6<=s 29097@16,
(-29097)@16<=s L0x7fffffffd9c6,L0x7fffffffd9c6<=s 29097@16,
(-29097)@16<=s L0x7fffffffd9d6,L0x7fffffffd9d6<=s 29097@16,
(-28801)@16<=s L0x7fffffffd9a8,L0x7fffffffd9a8<=s 28801@16,
(-28801)@16<=s L0x7fffffffd9b8,L0x7fffffffd9b8<=s 28801@16,
(-28801)@16<=s L0x7fffffffd9c8,L0x7fffffffd9c8<=s 28801@16,
(-28801)@16<=s L0x7fffffffd9d8,L0x7fffffffd9d8<=s 28801@16,
(-29116)@16<=s L0x7fffffffd9aa,L0x7fffffffd9aa<=s 29116@16,
(-29116)@16<=s L0x7fffffffd9ba,L0x7fffffffd9ba<=s 29116@16,
(-29116)@16<=s L0x7fffffffd9ca,L0x7fffffffd9ca<=s 29116@16,
(-29116)@16<=s L0x7fffffffd9da,L0x7fffffffd9da<=s 29116@16,
(-30345)@16<=s L0x7fffffffd9ac,L0x7fffffffd9ac<=s 30345@16,
(-30345)@16<=s L0x7fffffffd9bc,L0x7fffffffd9bc<=s 30345@16,
(-30345)@16<=s L0x7fffffffd9cc,L0x7fffffffd9cc<=s 30345@16,
(-30345)@16<=s L0x7fffffffd9dc,L0x7fffffffd9dc<=s 30345@16,
(-29273)@16<=s L0x7fffffffd9ae,L0x7fffffffd9ae<=s 29273@16,
(-29273)@16<=s L0x7fffffffd9be,L0x7fffffffd9be<=s 29273@16,
(-29273)@16<=s L0x7fffffffd9ce,L0x7fffffffd9ce<=s 29273@16,
(-29273)@16<=s L0x7fffffffd9de,L0x7fffffffd9de<=s 29273@16
];


(* === be ready for next level and offset === *)

(**************** CUT 158, 22 *****************)

cut 
true && and [
(-13177)@16<=s L0x7fffffffd9e0,L0x7fffffffd9e0<s 13177@16,
(-13177)@16<=s L0x7fffffffd9e2,L0x7fffffffd9e2<s 13177@16,
(-13177)@16<=s L0x7fffffffd9e4,L0x7fffffffd9e4<s 13177@16,
(-13177)@16<=s L0x7fffffffd9e6,L0x7fffffffd9e6<s 13177@16,
(-13177)@16<=s L0x7fffffffd9e8,L0x7fffffffd9e8<s 13177@16,
(-13177)@16<=s L0x7fffffffd9ea,L0x7fffffffd9ea<s 13177@16,
(-13177)@16<=s L0x7fffffffd9ec,L0x7fffffffd9ec<s 13177@16,
(-13177)@16<=s L0x7fffffffd9ee,L0x7fffffffd9ee<s 13177@16,
(-13177)@16<=s L0x7fffffffd9f0,L0x7fffffffd9f0<s 13177@16,
(-13177)@16<=s L0x7fffffffd9f2,L0x7fffffffd9f2<s 13177@16,
(-13177)@16<=s L0x7fffffffd9f4,L0x7fffffffd9f4<s 13177@16,
(-13177)@16<=s L0x7fffffffd9f6,L0x7fffffffd9f6<s 13177@16,
(-13177)@16<=s L0x7fffffffd9f8,L0x7fffffffd9f8<s 13177@16,
(-13177)@16<=s L0x7fffffffd9fa,L0x7fffffffd9fa<s 13177@16,
(-13177)@16<=s L0x7fffffffd9fc,L0x7fffffffd9fc<s 13177@16,
(-13177)@16<=s L0x7fffffffd9fe,L0x7fffffffd9fe<s 13177@16,
(-13177)@16<=s L0x7fffffffda00,L0x7fffffffda00<s 13177@16,
(-13177)@16<=s L0x7fffffffda02,L0x7fffffffda02<s 13177@16,
(-13177)@16<=s L0x7fffffffda04,L0x7fffffffda04<s 13177@16,
(-13177)@16<=s L0x7fffffffda06,L0x7fffffffda06<s 13177@16,
(-13177)@16<=s L0x7fffffffda08,L0x7fffffffda08<s 13177@16,
(-13177)@16<=s L0x7fffffffda0a,L0x7fffffffda0a<s 13177@16,
(-13177)@16<=s L0x7fffffffda0c,L0x7fffffffda0c<s 13177@16,
(-13177)@16<=s L0x7fffffffda0e,L0x7fffffffda0e<s 13177@16,
(-13177)@16<=s L0x7fffffffda10,L0x7fffffffda10<s 13177@16,
(-13177)@16<=s L0x7fffffffda12,L0x7fffffffda12<s 13177@16,
(-13177)@16<=s L0x7fffffffda14,L0x7fffffffda14<s 13177@16,
(-13177)@16<=s L0x7fffffffda16,L0x7fffffffda16<s 13177@16,
(-13177)@16<=s L0x7fffffffda18,L0x7fffffffda18<s 13177@16,
(-13177)@16<=s L0x7fffffffda1a,L0x7fffffffda1a<s 13177@16,
(-13177)@16<=s L0x7fffffffda1c,L0x7fffffffda1c<s 13177@16,
(-13177)@16<=s L0x7fffffffda1e,L0x7fffffffda1e<s 13177@16,
(-13177)@16<=s L0x7fffffffda20,L0x7fffffffda20<s 13177@16,
(-13177)@16<=s L0x7fffffffda22,L0x7fffffffda22<s 13177@16,
(-13177)@16<=s L0x7fffffffda24,L0x7fffffffda24<s 13177@16,
(-13177)@16<=s L0x7fffffffda26,L0x7fffffffda26<s 13177@16,
(-13177)@16<=s L0x7fffffffda28,L0x7fffffffda28<s 13177@16,
(-13177)@16<=s L0x7fffffffda2a,L0x7fffffffda2a<s 13177@16,
(-13177)@16<=s L0x7fffffffda2c,L0x7fffffffda2c<s 13177@16,
(-13177)@16<=s L0x7fffffffda2e,L0x7fffffffda2e<s 13177@16,
(-13177)@16<=s L0x7fffffffda30,L0x7fffffffda30<s 13177@16,
(-13177)@16<=s L0x7fffffffda32,L0x7fffffffda32<s 13177@16,
(-13177)@16<=s L0x7fffffffda34,L0x7fffffffda34<s 13177@16,
(-13177)@16<=s L0x7fffffffda36,L0x7fffffffda36<s 13177@16,
(-13177)@16<=s L0x7fffffffda38,L0x7fffffffda38<s 13177@16,
(-13177)@16<=s L0x7fffffffda3a,L0x7fffffffda3a<s 13177@16,
(-13177)@16<=s L0x7fffffffda3c,L0x7fffffffda3c<s 13177@16,
(-13177)@16<=s L0x7fffffffda3e,L0x7fffffffda3e<s 13177@16,
(-13177)@16<=s L0x7fffffffda40,L0x7fffffffda40<s 13177@16,
(-13177)@16<=s L0x7fffffffda42,L0x7fffffffda42<s 13177@16,
(-13177)@16<=s L0x7fffffffda44,L0x7fffffffda44<s 13177@16,
(-13177)@16<=s L0x7fffffffda46,L0x7fffffffda46<s 13177@16,
(-13177)@16<=s L0x7fffffffda48,L0x7fffffffda48<s 13177@16,
(-13177)@16<=s L0x7fffffffda4a,L0x7fffffffda4a<s 13177@16,
(-13177)@16<=s L0x7fffffffda4c,L0x7fffffffda4c<s 13177@16,
(-13177)@16<=s L0x7fffffffda4e,L0x7fffffffda4e<s 13177@16,
(-13177)@16<=s L0x7fffffffda50,L0x7fffffffda50<s 13177@16,
(-13177)@16<=s L0x7fffffffda52,L0x7fffffffda52<s 13177@16,
(-13177)@16<=s L0x7fffffffda54,L0x7fffffffda54<s 13177@16,
(-13177)@16<=s L0x7fffffffda56,L0x7fffffffda56<s 13177@16,
(-13177)@16<=s L0x7fffffffda58,L0x7fffffffda58<s 13177@16,
(-13177)@16<=s L0x7fffffffda5a,L0x7fffffffda5a<s 13177@16,
(-13177)@16<=s L0x7fffffffda5c,L0x7fffffffda5c<s 13177@16,
(-13177)@16<=s L0x7fffffffda5e,L0x7fffffffda5e<s 13177@16,
(-13177)@16<=s L0x7fffffffda60,L0x7fffffffda60<s 13177@16,
(-13177)@16<=s L0x7fffffffda62,L0x7fffffffda62<s 13177@16,
(-13177)@16<=s L0x7fffffffda64,L0x7fffffffda64<s 13177@16,
(-13177)@16<=s L0x7fffffffda66,L0x7fffffffda66<s 13177@16,
(-13177)@16<=s L0x7fffffffda68,L0x7fffffffda68<s 13177@16,
(-13177)@16<=s L0x7fffffffda6a,L0x7fffffffda6a<s 13177@16,
(-13177)@16<=s L0x7fffffffda6c,L0x7fffffffda6c<s 13177@16,
(-13177)@16<=s L0x7fffffffda6e,L0x7fffffffda6e<s 13177@16,
(-13177)@16<=s L0x7fffffffda70,L0x7fffffffda70<s 13177@16,
(-13177)@16<=s L0x7fffffffda72,L0x7fffffffda72<s 13177@16,
(-13177)@16<=s L0x7fffffffda74,L0x7fffffffda74<s 13177@16,
(-13177)@16<=s L0x7fffffffda76,L0x7fffffffda76<s 13177@16,
(-13177)@16<=s L0x7fffffffda78,L0x7fffffffda78<s 13177@16,
(-13177)@16<=s L0x7fffffffda7a,L0x7fffffffda7a<s 13177@16,
(-13177)@16<=s L0x7fffffffda7c,L0x7fffffffda7c<s 13177@16,
(-13177)@16<=s L0x7fffffffda7e,L0x7fffffffda7e<s 13177@16,
(-13177)@16<=s L0x7fffffffda80,L0x7fffffffda80<s 13177@16,
(-13177)@16<=s L0x7fffffffda82,L0x7fffffffda82<s 13177@16,
(-13177)@16<=s L0x7fffffffda84,L0x7fffffffda84<s 13177@16,
(-13177)@16<=s L0x7fffffffda86,L0x7fffffffda86<s 13177@16,
(-13177)@16<=s L0x7fffffffda88,L0x7fffffffda88<s 13177@16,
(-13177)@16<=s L0x7fffffffda8a,L0x7fffffffda8a<s 13177@16,
(-13177)@16<=s L0x7fffffffda8c,L0x7fffffffda8c<s 13177@16,
(-13177)@16<=s L0x7fffffffda8e,L0x7fffffffda8e<s 13177@16,
(-13177)@16<=s L0x7fffffffda90,L0x7fffffffda90<s 13177@16,
(-13177)@16<=s L0x7fffffffda92,L0x7fffffffda92<s 13177@16,
(-13177)@16<=s L0x7fffffffda94,L0x7fffffffda94<s 13177@16,
(-13177)@16<=s L0x7fffffffda96,L0x7fffffffda96<s 13177@16,
(-13177)@16<=s L0x7fffffffda98,L0x7fffffffda98<s 13177@16,
(-13177)@16<=s L0x7fffffffda9a,L0x7fffffffda9a<s 13177@16,
(-13177)@16<=s L0x7fffffffda9c,L0x7fffffffda9c<s 13177@16,
(-13177)@16<=s L0x7fffffffda9e,L0x7fffffffda9e<s 13177@16,
(-13177)@16<=s L0x7fffffffdaa0,L0x7fffffffdaa0<s 13177@16,
(-13177)@16<=s L0x7fffffffdaa2,L0x7fffffffdaa2<s 13177@16,
(-13177)@16<=s L0x7fffffffdaa4,L0x7fffffffdaa4<s 13177@16,
(-13177)@16<=s L0x7fffffffdaa6,L0x7fffffffdaa6<s 13177@16,
(-13177)@16<=s L0x7fffffffdaa8,L0x7fffffffdaa8<s 13177@16,
(-13177)@16<=s L0x7fffffffdaaa,L0x7fffffffdaaa<s 13177@16,
(-13177)@16<=s L0x7fffffffdaac,L0x7fffffffdaac<s 13177@16,
(-13177)@16<=s L0x7fffffffdaae,L0x7fffffffdaae<s 13177@16,
(-13177)@16<=s L0x7fffffffdab0,L0x7fffffffdab0<s 13177@16,
(-13177)@16<=s L0x7fffffffdab2,L0x7fffffffdab2<s 13177@16,
(-13177)@16<=s L0x7fffffffdab4,L0x7fffffffdab4<s 13177@16,
(-13177)@16<=s L0x7fffffffdab6,L0x7fffffffdab6<s 13177@16,
(-13177)@16<=s L0x7fffffffdab8,L0x7fffffffdab8<s 13177@16,
(-13177)@16<=s L0x7fffffffdaba,L0x7fffffffdaba<s 13177@16,
(-13177)@16<=s L0x7fffffffdabc,L0x7fffffffdabc<s 13177@16,
(-13177)@16<=s L0x7fffffffdabe,L0x7fffffffdabe<s 13177@16,
(-13177)@16<=s L0x7fffffffdac0,L0x7fffffffdac0<s 13177@16,
(-13177)@16<=s L0x7fffffffdac2,L0x7fffffffdac2<s 13177@16,
(-13177)@16<=s L0x7fffffffdac4,L0x7fffffffdac4<s 13177@16,
(-13177)@16<=s L0x7fffffffdac6,L0x7fffffffdac6<s 13177@16,
(-13177)@16<=s L0x7fffffffdac8,L0x7fffffffdac8<s 13177@16,
(-13177)@16<=s L0x7fffffffdaca,L0x7fffffffdaca<s 13177@16,
(-13177)@16<=s L0x7fffffffdacc,L0x7fffffffdacc<s 13177@16,
(-13177)@16<=s L0x7fffffffdace,L0x7fffffffdace<s 13177@16,
(-13177)@16<=s L0x7fffffffdad0,L0x7fffffffdad0<s 13177@16,
(-13177)@16<=s L0x7fffffffdad2,L0x7fffffffdad2<s 13177@16,
(-13177)@16<=s L0x7fffffffdad4,L0x7fffffffdad4<s 13177@16,
(-13177)@16<=s L0x7fffffffdad6,L0x7fffffffdad6<s 13177@16,
(-13177)@16<=s L0x7fffffffdad8,L0x7fffffffdad8<s 13177@16,
(-12892)@16<=s L0x7fffffffdada,L0x7fffffffdada<s 12892@16,
(-12892)@16<=s L0x7fffffffdadc,L0x7fffffffdadc<s 12892@16,
(-12892)@16<=s L0x7fffffffdade,L0x7fffffffdade<s 12892@16
] prove with [ cuts [ 0 ] ];



(* vmovdqa 0x700(%rdi),%ymm4                       #! EA = L0x7fffffffd9e0; Value = 0x0000000100000000; PC = 0x555555559a1b *)
mov ymm4_0 L0x7fffffffd9e0;
mov ymm4_1 L0x7fffffffd9e2;
mov ymm4_2 L0x7fffffffd9e4;
mov ymm4_3 L0x7fffffffd9e6;
mov ymm4_4 L0x7fffffffd9e8;
mov ymm4_5 L0x7fffffffd9ea;
mov ymm4_6 L0x7fffffffd9ec;
mov ymm4_7 L0x7fffffffd9ee;
mov ymm4_8 L0x7fffffffd9f0;
mov ymm4_9 L0x7fffffffd9f2;
mov ymm4_a L0x7fffffffd9f4;
mov ymm4_b L0x7fffffffd9f6;
mov ymm4_c L0x7fffffffd9f8;
mov ymm4_d L0x7fffffffd9fa;
mov ymm4_e L0x7fffffffd9fc;
mov ymm4_f L0x7fffffffd9fe;
(* vmovdqa 0x720(%rdi),%ymm5                       #! EA = L0x7fffffffda00; Value = 0x0000000000000000; PC = 0x555555559a23 *)
mov ymm5_0 L0x7fffffffda00;
mov ymm5_1 L0x7fffffffda02;
mov ymm5_2 L0x7fffffffda04;
mov ymm5_3 L0x7fffffffda06;
mov ymm5_4 L0x7fffffffda08;
mov ymm5_5 L0x7fffffffda0a;
mov ymm5_6 L0x7fffffffda0c;
mov ymm5_7 L0x7fffffffda0e;
mov ymm5_8 L0x7fffffffda10;
mov ymm5_9 L0x7fffffffda12;
mov ymm5_a L0x7fffffffda14;
mov ymm5_b L0x7fffffffda16;
mov ymm5_c L0x7fffffffda18;
mov ymm5_d L0x7fffffffda1a;
mov ymm5_e L0x7fffffffda1c;
mov ymm5_f L0x7fffffffda1e;
(* vmovdqa 0x740(%rdi),%ymm6                       #! EA = L0x7fffffffda20; Value = 0x0000000000000000; PC = 0x555555559a2b *)
mov ymm6_0 L0x7fffffffda20;
mov ymm6_1 L0x7fffffffda22;
mov ymm6_2 L0x7fffffffda24;
mov ymm6_3 L0x7fffffffda26;
mov ymm6_4 L0x7fffffffda28;
mov ymm6_5 L0x7fffffffda2a;
mov ymm6_6 L0x7fffffffda2c;
mov ymm6_7 L0x7fffffffda2e;
mov ymm6_8 L0x7fffffffda30;
mov ymm6_9 L0x7fffffffda32;
mov ymm6_a L0x7fffffffda34;
mov ymm6_b L0x7fffffffda36;
mov ymm6_c L0x7fffffffda38;
mov ymm6_d L0x7fffffffda3a;
mov ymm6_e L0x7fffffffda3c;
mov ymm6_f L0x7fffffffda3e;
(* vmovdqa 0x760(%rdi),%ymm7                       #! EA = L0x7fffffffda40; Value = 0x0000000000000000; PC = 0x555555559a33 *)
mov ymm7_0 L0x7fffffffda40;
mov ymm7_1 L0x7fffffffda42;
mov ymm7_2 L0x7fffffffda44;
mov ymm7_3 L0x7fffffffda46;
mov ymm7_4 L0x7fffffffda48;
mov ymm7_5 L0x7fffffffda4a;
mov ymm7_6 L0x7fffffffda4c;
mov ymm7_7 L0x7fffffffda4e;
mov ymm7_8 L0x7fffffffda50;
mov ymm7_9 L0x7fffffffda52;
mov ymm7_a L0x7fffffffda54;
mov ymm7_b L0x7fffffffda56;
mov ymm7_c L0x7fffffffda58;
mov ymm7_d L0x7fffffffda5a;
mov ymm7_e L0x7fffffffda5c;
mov ymm7_f L0x7fffffffda5e;
(* vmovdqa 0x780(%rdi),%ymm8                       #! EA = L0x7fffffffda60; Value = 0x0000000000000000; PC = 0x555555559a3b *)
mov ymm8_0 L0x7fffffffda60;
mov ymm8_1 L0x7fffffffda62;
mov ymm8_2 L0x7fffffffda64;
mov ymm8_3 L0x7fffffffda66;
mov ymm8_4 L0x7fffffffda68;
mov ymm8_5 L0x7fffffffda6a;
mov ymm8_6 L0x7fffffffda6c;
mov ymm8_7 L0x7fffffffda6e;
mov ymm8_8 L0x7fffffffda70;
mov ymm8_9 L0x7fffffffda72;
mov ymm8_a L0x7fffffffda74;
mov ymm8_b L0x7fffffffda76;
mov ymm8_c L0x7fffffffda78;
mov ymm8_d L0x7fffffffda7a;
mov ymm8_e L0x7fffffffda7c;
mov ymm8_f L0x7fffffffda7e;
(* vmovdqa 0x7a0(%rdi),%ymm9                       #! EA = L0x7fffffffda80; Value = 0x0000000000000000; PC = 0x555555559a43 *)
mov ymm9_0 L0x7fffffffda80;
mov ymm9_1 L0x7fffffffda82;
mov ymm9_2 L0x7fffffffda84;
mov ymm9_3 L0x7fffffffda86;
mov ymm9_4 L0x7fffffffda88;
mov ymm9_5 L0x7fffffffda8a;
mov ymm9_6 L0x7fffffffda8c;
mov ymm9_7 L0x7fffffffda8e;
mov ymm9_8 L0x7fffffffda90;
mov ymm9_9 L0x7fffffffda92;
mov ymm9_a L0x7fffffffda94;
mov ymm9_b L0x7fffffffda96;
mov ymm9_c L0x7fffffffda98;
mov ymm9_d L0x7fffffffda9a;
mov ymm9_e L0x7fffffffda9c;
mov ymm9_f L0x7fffffffda9e;
(* vmovdqa 0x7c0(%rdi),%ymm10                      #! EA = L0x7fffffffdaa0; Value = 0x0000000000000000; PC = 0x555555559a4b *)
mov ymm10_0 L0x7fffffffdaa0;
mov ymm10_1 L0x7fffffffdaa2;
mov ymm10_2 L0x7fffffffdaa4;
mov ymm10_3 L0x7fffffffdaa6;
mov ymm10_4 L0x7fffffffdaa8;
mov ymm10_5 L0x7fffffffdaaa;
mov ymm10_6 L0x7fffffffdaac;
mov ymm10_7 L0x7fffffffdaae;
mov ymm10_8 L0x7fffffffdab0;
mov ymm10_9 L0x7fffffffdab2;
mov ymm10_a L0x7fffffffdab4;
mov ymm10_b L0x7fffffffdab6;
mov ymm10_c L0x7fffffffdab8;
mov ymm10_d L0x7fffffffdaba;
mov ymm10_e L0x7fffffffdabc;
mov ymm10_f L0x7fffffffdabe;
(* vmovdqa 0x7e0(%rdi),%ymm11                      #! EA = L0x7fffffffdac0; Value = 0x0000000000000000; PC = 0x555555559a53 *)
mov ymm11_0 L0x7fffffffdac0;
mov ymm11_1 L0x7fffffffdac2;
mov ymm11_2 L0x7fffffffdac4;
mov ymm11_3 L0x7fffffffdac6;
mov ymm11_4 L0x7fffffffdac8;
mov ymm11_5 L0x7fffffffdaca;
mov ymm11_6 L0x7fffffffdacc;
mov ymm11_7 L0x7fffffffdace;
mov ymm11_8 L0x7fffffffdad0;
mov ymm11_9 L0x7fffffffdad2;
mov ymm11_a L0x7fffffffdad4;
mov ymm11_b L0x7fffffffdad6;
mov ymm11_c L0x7fffffffdad8;
mov ymm11_d L0x7fffffffdada;
mov ymm11_e L0x7fffffffdadc;
mov ymm11_f L0x7fffffffdade;
(* vpbroadcastw 0x10e(%rdx),%ymm1                  #! EA = L0x55555556122e; Value = 0x8cf7c126e487ae88; PC = 0x555555559a5b *)
mov ymm1_0 L0x55555556122e;
mov ymm1_1 L0x55555556122e;
mov ymm1_2 L0x55555556122e;
mov ymm1_3 L0x55555556122e;
mov ymm1_4 L0x55555556122e;
mov ymm1_5 L0x55555556122e;
mov ymm1_6 L0x55555556122e;
mov ymm1_7 L0x55555556122e;
mov ymm1_8 L0x55555556122e;
mov ymm1_9 L0x55555556122e;
mov ymm1_a L0x55555556122e;
mov ymm1_b L0x55555556122e;
mov ymm1_c L0x55555556122e;
mov ymm1_d L0x55555556122e;
mov ymm1_e L0x55555556122e;
mov ymm1_f L0x55555556122e;
(* vpbroadcastw 0x30e(%rdx),%ymm2                  #! EA = L0x55555556142e; Value = 0x12f7fd260a87fe88; PC = 0x555555559a64 *)
mov ymm2_0 L0x55555556142e;
mov ymm2_1 L0x55555556142e;
mov ymm2_2 L0x55555556142e;
mov ymm2_3 L0x55555556142e;
mov ymm2_4 L0x55555556142e;
mov ymm2_5 L0x55555556142e;
mov ymm2_6 L0x55555556142e;
mov ymm2_7 L0x55555556142e;
mov ymm2_8 L0x55555556142e;
mov ymm2_9 L0x55555556142e;
mov ymm2_a L0x55555556142e;
mov ymm2_b L0x55555556142e;
mov ymm2_c L0x55555556142e;
mov ymm2_d L0x55555556142e;
mov ymm2_e L0x55555556142e;
mov ymm2_f L0x55555556142e;
(* vpmullw %ymm1,%ymm8,%ymm3                       #! PC = 0x555555559a6d *)
smull mulHymm8_0 mulL_0 ymm1_0 ymm8_0;
smull mulHymm8_1 mulL_1 ymm1_1 ymm8_1;
smull mulHymm8_2 mulL_2 ymm1_2 ymm8_2;
smull mulHymm8_3 mulL_3 ymm1_3 ymm8_3;
smull mulHymm8_4 mulL_4 ymm1_4 ymm8_4;
smull mulHymm8_5 mulL_5 ymm1_5 ymm8_5;
smull mulHymm8_6 mulL_6 ymm1_6 ymm8_6;
smull mulHymm8_7 mulL_7 ymm1_7 ymm8_7;
smull mulHymm8_8 mulL_8 ymm1_8 ymm8_8;
smull mulHymm8_9 mulL_9 ymm1_9 ymm8_9;
smull mulHymm8_a mulL_a ymm1_a ymm8_a;
smull mulHymm8_b mulL_b ymm1_b ymm8_b;
smull mulHymm8_c mulL_c ymm1_c ymm8_c;
smull mulHymm8_d mulL_d ymm1_d ymm8_d;
smull mulHymm8_e mulL_e ymm1_e ymm8_e;
smull mulHymm8_f mulL_f ymm1_f ymm8_f;
cast ymm3_0@sint16 mulL_0;
cast ymm3_1@sint16 mulL_1;
cast ymm3_2@sint16 mulL_2;
cast ymm3_3@sint16 mulL_3;
cast ymm3_4@sint16 mulL_4;
cast ymm3_5@sint16 mulL_5;
cast ymm3_6@sint16 mulL_6;
cast ymm3_7@sint16 mulL_7;
cast ymm3_8@sint16 mulL_8;
cast ymm3_9@sint16 mulL_9;
cast ymm3_a@sint16 mulL_a;
cast ymm3_b@sint16 mulL_b;
cast ymm3_c@sint16 mulL_c;
cast ymm3_d@sint16 mulL_d;
cast ymm3_e@sint16 mulL_e;
cast ymm3_f@sint16 mulL_f;
(* vpmulhw %ymm2,%ymm8,%ymm8                       #! PC = 0x555555559a71 *)
smull mulH_0 mulLymm8_0 ymm8_0 ymm2_0;
smull mulH_1 mulLymm8_1 ymm8_1 ymm2_1;
smull mulH_2 mulLymm8_2 ymm8_2 ymm2_2;
smull mulH_3 mulLymm8_3 ymm8_3 ymm2_3;
smull mulH_4 mulLymm8_4 ymm8_4 ymm2_4;
smull mulH_5 mulLymm8_5 ymm8_5 ymm2_5;
smull mulH_6 mulLymm8_6 ymm8_6 ymm2_6;
smull mulH_7 mulLymm8_7 ymm8_7 ymm2_7;
smull mulH_8 mulLymm8_8 ymm8_8 ymm2_8;
smull mulH_9 mulLymm8_9 ymm8_9 ymm2_9;
smull mulH_a mulLymm8_a ymm8_a ymm2_a;
smull mulH_b mulLymm8_b ymm8_b ymm2_b;
smull mulH_c mulLymm8_c ymm8_c ymm2_c;
smull mulH_d mulLymm8_d ymm8_d ymm2_d;
smull mulH_e mulLymm8_e ymm8_e ymm2_e;
smull mulH_f mulLymm8_f ymm8_f ymm2_f;
mov ymm8_0 mulH_0;
mov ymm8_1 mulH_1;
mov ymm8_2 mulH_2;
mov ymm8_3 mulH_3;
mov ymm8_4 mulH_4;
mov ymm8_5 mulH_5;
mov ymm8_6 mulH_6;
mov ymm8_7 mulH_7;
mov ymm8_8 mulH_8;
mov ymm8_9 mulH_9;
mov ymm8_a mulH_a;
mov ymm8_b mulH_b;
mov ymm8_c mulH_c;
mov ymm8_d mulH_d;
mov ymm8_e mulH_e;
mov ymm8_f mulH_f;
(* vpmulhw %ymm0,%ymm3,%ymm3                       #! PC = 0x555555559a75 *)
smull mulH_0 red_0 ymm3_0 ymm0_0;
assert true && red_0 = mulLymm8_0;
assume red_0 = mulLymm8_0 && true;
smull mulH_1 red_1 ymm3_1 ymm0_1;
assert true && red_1 = mulLymm8_1;
assume red_1 = mulLymm8_1 && true;
smull mulH_2 red_2 ymm3_2 ymm0_2;
assert true && red_2 = mulLymm8_2;
assume red_2 = mulLymm8_2 && true;
smull mulH_3 red_3 ymm3_3 ymm0_3;
assert true && red_3 = mulLymm8_3;
assume red_3 = mulLymm8_3 && true;
smull mulH_4 red_4 ymm3_4 ymm0_4;
assert true && red_4 = mulLymm8_4;
assume red_4 = mulLymm8_4 && true;
smull mulH_5 red_5 ymm3_5 ymm0_5;
assert true && red_5 = mulLymm8_5;
assume red_5 = mulLymm8_5 && true;
smull mulH_6 red_6 ymm3_6 ymm0_6;
assert true && red_6 = mulLymm8_6;
assume red_6 = mulLymm8_6 && true;
smull mulH_7 red_7 ymm3_7 ymm0_7;
assert true && red_7 = mulLymm8_7;
assume red_7 = mulLymm8_7 && true;
smull mulH_8 red_8 ymm3_8 ymm0_8;
assert true && red_8 = mulLymm8_8;
assume red_8 = mulLymm8_8 && true;
smull mulH_9 red_9 ymm3_9 ymm0_9;
assert true && red_9 = mulLymm8_9;
assume red_9 = mulLymm8_9 && true;
smull mulH_a red_a ymm3_a ymm0_a;
assert true && red_a = mulLymm8_a;
assume red_a = mulLymm8_a && true;
smull mulH_b red_b ymm3_b ymm0_b;
assert true && red_b = mulLymm8_b;
assume red_b = mulLymm8_b && true;
smull mulH_c red_c ymm3_c ymm0_c;
assert true && red_c = mulLymm8_c;
assume red_c = mulLymm8_c && true;
smull mulH_d red_d ymm3_d ymm0_d;
assert true && red_d = mulLymm8_d;
assume red_d = mulLymm8_d && true;
smull mulH_e red_e ymm3_e ymm0_e;
assert true && red_e = mulLymm8_e;
assume red_e = mulLymm8_e && true;
smull mulH_f red_f ymm3_f ymm0_f;
assert true && red_f = mulLymm8_f;
assume red_f = mulLymm8_f && true;
mov ymm3_0 mulH_0;
mov ymm3_1 mulH_1;
mov ymm3_2 mulH_2;
mov ymm3_3 mulH_3;
mov ymm3_4 mulH_4;
mov ymm3_5 mulH_5;
mov ymm3_6 mulH_6;
mov ymm3_7 mulH_7;
mov ymm3_8 mulH_8;
mov ymm3_9 mulH_9;
mov ymm3_a mulH_a;
mov ymm3_b mulH_b;
mov ymm3_c mulH_c;
mov ymm3_d mulH_d;
mov ymm3_e mulH_e;
mov ymm3_f mulH_f;
(* vpsubw %ymm3,%ymm8,%ymm8                        #! PC = 0x555555559a79 *)
sub ymm8_0 ymm8_0 ymm3_0;
sub ymm8_1 ymm8_1 ymm3_1;
sub ymm8_2 ymm8_2 ymm3_2;
sub ymm8_3 ymm8_3 ymm3_3;
sub ymm8_4 ymm8_4 ymm3_4;
sub ymm8_5 ymm8_5 ymm3_5;
sub ymm8_6 ymm8_6 ymm3_6;
sub ymm8_7 ymm8_7 ymm3_7;
sub ymm8_8 ymm8_8 ymm3_8;
sub ymm8_9 ymm8_9 ymm3_9;
sub ymm8_a ymm8_a ymm3_a;
sub ymm8_b ymm8_b ymm3_b;
sub ymm8_c ymm8_c ymm3_c;
sub ymm8_d ymm8_d ymm3_d;
sub ymm8_e ymm8_e ymm3_e;
sub ymm8_f ymm8_f ymm3_f;
(* vpmullw %ymm1,%ymm9,%ymm3                       #! PC = 0x555555559a7d *)
smull mulHymm9_0 mulL_0 ymm1_0 ymm9_0;
smull mulHymm9_1 mulL_1 ymm1_1 ymm9_1;
smull mulHymm9_2 mulL_2 ymm1_2 ymm9_2;
smull mulHymm9_3 mulL_3 ymm1_3 ymm9_3;
smull mulHymm9_4 mulL_4 ymm1_4 ymm9_4;
smull mulHymm9_5 mulL_5 ymm1_5 ymm9_5;
smull mulHymm9_6 mulL_6 ymm1_6 ymm9_6;
smull mulHymm9_7 mulL_7 ymm1_7 ymm9_7;
smull mulHymm9_8 mulL_8 ymm1_8 ymm9_8;
smull mulHymm9_9 mulL_9 ymm1_9 ymm9_9;
smull mulHymm9_a mulL_a ymm1_a ymm9_a;
smull mulHymm9_b mulL_b ymm1_b ymm9_b;
smull mulHymm9_c mulL_c ymm1_c ymm9_c;
smull mulHymm9_d mulL_d ymm1_d ymm9_d;
smull mulHymm9_e mulL_e ymm1_e ymm9_e;
smull mulHymm9_f mulL_f ymm1_f ymm9_f;
cast ymm3_0@sint16 mulL_0;
cast ymm3_1@sint16 mulL_1;
cast ymm3_2@sint16 mulL_2;
cast ymm3_3@sint16 mulL_3;
cast ymm3_4@sint16 mulL_4;
cast ymm3_5@sint16 mulL_5;
cast ymm3_6@sint16 mulL_6;
cast ymm3_7@sint16 mulL_7;
cast ymm3_8@sint16 mulL_8;
cast ymm3_9@sint16 mulL_9;
cast ymm3_a@sint16 mulL_a;
cast ymm3_b@sint16 mulL_b;
cast ymm3_c@sint16 mulL_c;
cast ymm3_d@sint16 mulL_d;
cast ymm3_e@sint16 mulL_e;
cast ymm3_f@sint16 mulL_f;
(* vpmulhw %ymm2,%ymm9,%ymm9                       #! PC = 0x555555559a81 *)
smull mulH_0 mulLymm9_0 ymm9_0 ymm2_0;
smull mulH_1 mulLymm9_1 ymm9_1 ymm2_1;
smull mulH_2 mulLymm9_2 ymm9_2 ymm2_2;
smull mulH_3 mulLymm9_3 ymm9_3 ymm2_3;
smull mulH_4 mulLymm9_4 ymm9_4 ymm2_4;
smull mulH_5 mulLymm9_5 ymm9_5 ymm2_5;
smull mulH_6 mulLymm9_6 ymm9_6 ymm2_6;
smull mulH_7 mulLymm9_7 ymm9_7 ymm2_7;
smull mulH_8 mulLymm9_8 ymm9_8 ymm2_8;
smull mulH_9 mulLymm9_9 ymm9_9 ymm2_9;
smull mulH_a mulLymm9_a ymm9_a ymm2_a;
smull mulH_b mulLymm9_b ymm9_b ymm2_b;
smull mulH_c mulLymm9_c ymm9_c ymm2_c;
smull mulH_d mulLymm9_d ymm9_d ymm2_d;
smull mulH_e mulLymm9_e ymm9_e ymm2_e;
smull mulH_f mulLymm9_f ymm9_f ymm2_f;
mov ymm9_0 mulH_0;
mov ymm9_1 mulH_1;
mov ymm9_2 mulH_2;
mov ymm9_3 mulH_3;
mov ymm9_4 mulH_4;
mov ymm9_5 mulH_5;
mov ymm9_6 mulH_6;
mov ymm9_7 mulH_7;
mov ymm9_8 mulH_8;
mov ymm9_9 mulH_9;
mov ymm9_a mulH_a;
mov ymm9_b mulH_b;
mov ymm9_c mulH_c;
mov ymm9_d mulH_d;
mov ymm9_e mulH_e;
mov ymm9_f mulH_f;
(* vpmulhw %ymm0,%ymm3,%ymm3                       #! PC = 0x555555559a85 *)
smull mulH_0 red_0 ymm3_0 ymm0_0;
assert true && red_0 = mulLymm9_0;
assume red_0 = mulLymm9_0 && true;
smull mulH_1 red_1 ymm3_1 ymm0_1;
assert true && red_1 = mulLymm9_1;
assume red_1 = mulLymm9_1 && true;
smull mulH_2 red_2 ymm3_2 ymm0_2;
assert true && red_2 = mulLymm9_2;
assume red_2 = mulLymm9_2 && true;
smull mulH_3 red_3 ymm3_3 ymm0_3;
assert true && red_3 = mulLymm9_3;
assume red_3 = mulLymm9_3 && true;
smull mulH_4 red_4 ymm3_4 ymm0_4;
assert true && red_4 = mulLymm9_4;
assume red_4 = mulLymm9_4 && true;
smull mulH_5 red_5 ymm3_5 ymm0_5;
assert true && red_5 = mulLymm9_5;
assume red_5 = mulLymm9_5 && true;
smull mulH_6 red_6 ymm3_6 ymm0_6;
assert true && red_6 = mulLymm9_6;
assume red_6 = mulLymm9_6 && true;
smull mulH_7 red_7 ymm3_7 ymm0_7;
assert true && red_7 = mulLymm9_7;
assume red_7 = mulLymm9_7 && true;
smull mulH_8 red_8 ymm3_8 ymm0_8;
assert true && red_8 = mulLymm9_8;
assume red_8 = mulLymm9_8 && true;
smull mulH_9 red_9 ymm3_9 ymm0_9;
assert true && red_9 = mulLymm9_9;
assume red_9 = mulLymm9_9 && true;
smull mulH_a red_a ymm3_a ymm0_a;
assert true && red_a = mulLymm9_a;
assume red_a = mulLymm9_a && true;
smull mulH_b red_b ymm3_b ymm0_b;
assert true && red_b = mulLymm9_b;
assume red_b = mulLymm9_b && true;
smull mulH_c red_c ymm3_c ymm0_c;
assert true && red_c = mulLymm9_c;
assume red_c = mulLymm9_c && true;
smull mulH_d red_d ymm3_d ymm0_d;
assert true && red_d = mulLymm9_d;
assume red_d = mulLymm9_d && true;
smull mulH_e red_e ymm3_e ymm0_e;
assert true && red_e = mulLymm9_e;
assume red_e = mulLymm9_e && true;
smull mulH_f red_f ymm3_f ymm0_f;
assert true && red_f = mulLymm9_f;
assume red_f = mulLymm9_f && true;
mov ymm3_0 mulH_0;
mov ymm3_1 mulH_1;
mov ymm3_2 mulH_2;
mov ymm3_3 mulH_3;
mov ymm3_4 mulH_4;
mov ymm3_5 mulH_5;
mov ymm3_6 mulH_6;
mov ymm3_7 mulH_7;
mov ymm3_8 mulH_8;
mov ymm3_9 mulH_9;
mov ymm3_a mulH_a;
mov ymm3_b mulH_b;
mov ymm3_c mulH_c;
mov ymm3_d mulH_d;
mov ymm3_e mulH_e;
mov ymm3_f mulH_f;
(* vpsubw %ymm3,%ymm9,%ymm9                        #! PC = 0x555555559a89 *)
sub ymm9_0 ymm9_0 ymm3_0;
sub ymm9_1 ymm9_1 ymm3_1;
sub ymm9_2 ymm9_2 ymm3_2;
sub ymm9_3 ymm9_3 ymm3_3;
sub ymm9_4 ymm9_4 ymm3_4;
sub ymm9_5 ymm9_5 ymm3_5;
sub ymm9_6 ymm9_6 ymm3_6;
sub ymm9_7 ymm9_7 ymm3_7;
sub ymm9_8 ymm9_8 ymm3_8;
sub ymm9_9 ymm9_9 ymm3_9;
sub ymm9_a ymm9_a ymm3_a;
sub ymm9_b ymm9_b ymm3_b;
sub ymm9_c ymm9_c ymm3_c;
sub ymm9_d ymm9_d ymm3_d;
sub ymm9_e ymm9_e ymm3_e;
sub ymm9_f ymm9_f ymm3_f;
(* vpmullw %ymm1,%ymm10,%ymm3                      #! PC = 0x555555559a8d *)
smull mulHymm10_0 mulL_0 ymm1_0 ymm10_0;
smull mulHymm10_1 mulL_1 ymm1_1 ymm10_1;
smull mulHymm10_2 mulL_2 ymm1_2 ymm10_2;
smull mulHymm10_3 mulL_3 ymm1_3 ymm10_3;
smull mulHymm10_4 mulL_4 ymm1_4 ymm10_4;
smull mulHymm10_5 mulL_5 ymm1_5 ymm10_5;
smull mulHymm10_6 mulL_6 ymm1_6 ymm10_6;
smull mulHymm10_7 mulL_7 ymm1_7 ymm10_7;
smull mulHymm10_8 mulL_8 ymm1_8 ymm10_8;
smull mulHymm10_9 mulL_9 ymm1_9 ymm10_9;
smull mulHymm10_a mulL_a ymm1_a ymm10_a;
smull mulHymm10_b mulL_b ymm1_b ymm10_b;
smull mulHymm10_c mulL_c ymm1_c ymm10_c;
smull mulHymm10_d mulL_d ymm1_d ymm10_d;
smull mulHymm10_e mulL_e ymm1_e ymm10_e;
smull mulHymm10_f mulL_f ymm1_f ymm10_f;
cast ymm3_0@sint16 mulL_0;
cast ymm3_1@sint16 mulL_1;
cast ymm3_2@sint16 mulL_2;
cast ymm3_3@sint16 mulL_3;
cast ymm3_4@sint16 mulL_4;
cast ymm3_5@sint16 mulL_5;
cast ymm3_6@sint16 mulL_6;
cast ymm3_7@sint16 mulL_7;
cast ymm3_8@sint16 mulL_8;
cast ymm3_9@sint16 mulL_9;
cast ymm3_a@sint16 mulL_a;
cast ymm3_b@sint16 mulL_b;
cast ymm3_c@sint16 mulL_c;
cast ymm3_d@sint16 mulL_d;
cast ymm3_e@sint16 mulL_e;
cast ymm3_f@sint16 mulL_f;
(* vpmulhw %ymm2,%ymm10,%ymm10                     #! PC = 0x555555559a91 *)
smull mulH_0 mulLymm10_0 ymm10_0 ymm2_0;
smull mulH_1 mulLymm10_1 ymm10_1 ymm2_1;
smull mulH_2 mulLymm10_2 ymm10_2 ymm2_2;
smull mulH_3 mulLymm10_3 ymm10_3 ymm2_3;
smull mulH_4 mulLymm10_4 ymm10_4 ymm2_4;
smull mulH_5 mulLymm10_5 ymm10_5 ymm2_5;
smull mulH_6 mulLymm10_6 ymm10_6 ymm2_6;
smull mulH_7 mulLymm10_7 ymm10_7 ymm2_7;
smull mulH_8 mulLymm10_8 ymm10_8 ymm2_8;
smull mulH_9 mulLymm10_9 ymm10_9 ymm2_9;
smull mulH_a mulLymm10_a ymm10_a ymm2_a;
smull mulH_b mulLymm10_b ymm10_b ymm2_b;
smull mulH_c mulLymm10_c ymm10_c ymm2_c;
smull mulH_d mulLymm10_d ymm10_d ymm2_d;
smull mulH_e mulLymm10_e ymm10_e ymm2_e;
smull mulH_f mulLymm10_f ymm10_f ymm2_f;
mov ymm10_0 mulH_0;
mov ymm10_1 mulH_1;
mov ymm10_2 mulH_2;
mov ymm10_3 mulH_3;
mov ymm10_4 mulH_4;
mov ymm10_5 mulH_5;
mov ymm10_6 mulH_6;
mov ymm10_7 mulH_7;
mov ymm10_8 mulH_8;
mov ymm10_9 mulH_9;
mov ymm10_a mulH_a;
mov ymm10_b mulH_b;
mov ymm10_c mulH_c;
mov ymm10_d mulH_d;
mov ymm10_e mulH_e;
mov ymm10_f mulH_f;
(* vpmulhw %ymm0,%ymm3,%ymm3                       #! PC = 0x555555559a95 *)
smull mulH_0 red_0 ymm3_0 ymm0_0;
assert true && red_0 = mulLymm10_0;
assume red_0 = mulLymm10_0 && true;
smull mulH_1 red_1 ymm3_1 ymm0_1;
assert true && red_1 = mulLymm10_1;
assume red_1 = mulLymm10_1 && true;
smull mulH_2 red_2 ymm3_2 ymm0_2;
assert true && red_2 = mulLymm10_2;
assume red_2 = mulLymm10_2 && true;
smull mulH_3 red_3 ymm3_3 ymm0_3;
assert true && red_3 = mulLymm10_3;
assume red_3 = mulLymm10_3 && true;
smull mulH_4 red_4 ymm3_4 ymm0_4;
assert true && red_4 = mulLymm10_4;
assume red_4 = mulLymm10_4 && true;
smull mulH_5 red_5 ymm3_5 ymm0_5;
assert true && red_5 = mulLymm10_5;
assume red_5 = mulLymm10_5 && true;
smull mulH_6 red_6 ymm3_6 ymm0_6;
assert true && red_6 = mulLymm10_6;
assume red_6 = mulLymm10_6 && true;
smull mulH_7 red_7 ymm3_7 ymm0_7;
assert true && red_7 = mulLymm10_7;
assume red_7 = mulLymm10_7 && true;
smull mulH_8 red_8 ymm3_8 ymm0_8;
assert true && red_8 = mulLymm10_8;
assume red_8 = mulLymm10_8 && true;
smull mulH_9 red_9 ymm3_9 ymm0_9;
assert true && red_9 = mulLymm10_9;
assume red_9 = mulLymm10_9 && true;
smull mulH_a red_a ymm3_a ymm0_a;
assert true && red_a = mulLymm10_a;
assume red_a = mulLymm10_a && true;
smull mulH_b red_b ymm3_b ymm0_b;
assert true && red_b = mulLymm10_b;
assume red_b = mulLymm10_b && true;
smull mulH_c red_c ymm3_c ymm0_c;
assert true && red_c = mulLymm10_c;
assume red_c = mulLymm10_c && true;
smull mulH_d red_d ymm3_d ymm0_d;
assert true && red_d = mulLymm10_d;
assume red_d = mulLymm10_d && true;
smull mulH_e red_e ymm3_e ymm0_e;
assert true && red_e = mulLymm10_e;
assume red_e = mulLymm10_e && true;
smull mulH_f red_f ymm3_f ymm0_f;
assert true && red_f = mulLymm10_f;
assume red_f = mulLymm10_f && true;
mov ymm3_0 mulH_0;
mov ymm3_1 mulH_1;
mov ymm3_2 mulH_2;
mov ymm3_3 mulH_3;
mov ymm3_4 mulH_4;
mov ymm3_5 mulH_5;
mov ymm3_6 mulH_6;
mov ymm3_7 mulH_7;
mov ymm3_8 mulH_8;
mov ymm3_9 mulH_9;
mov ymm3_a mulH_a;
mov ymm3_b mulH_b;
mov ymm3_c mulH_c;
mov ymm3_d mulH_d;
mov ymm3_e mulH_e;
mov ymm3_f mulH_f;
(* vpsubw %ymm3,%ymm10,%ymm10                      #! PC = 0x555555559a99 *)
sub ymm10_0 ymm10_0 ymm3_0;
sub ymm10_1 ymm10_1 ymm3_1;
sub ymm10_2 ymm10_2 ymm3_2;
sub ymm10_3 ymm10_3 ymm3_3;
sub ymm10_4 ymm10_4 ymm3_4;
sub ymm10_5 ymm10_5 ymm3_5;
sub ymm10_6 ymm10_6 ymm3_6;
sub ymm10_7 ymm10_7 ymm3_7;
sub ymm10_8 ymm10_8 ymm3_8;
sub ymm10_9 ymm10_9 ymm3_9;
sub ymm10_a ymm10_a ymm3_a;
sub ymm10_b ymm10_b ymm3_b;
sub ymm10_c ymm10_c ymm3_c;
sub ymm10_d ymm10_d ymm3_d;
sub ymm10_e ymm10_e ymm3_e;
sub ymm10_f ymm10_f ymm3_f;
(* vpmullw %ymm1,%ymm11,%ymm3                      #! PC = 0x555555559a9d *)
smull mulHymm11_0 mulL_0 ymm1_0 ymm11_0;
smull mulHymm11_1 mulL_1 ymm1_1 ymm11_1;
smull mulHymm11_2 mulL_2 ymm1_2 ymm11_2;
smull mulHymm11_3 mulL_3 ymm1_3 ymm11_3;
smull mulHymm11_4 mulL_4 ymm1_4 ymm11_4;
smull mulHymm11_5 mulL_5 ymm1_5 ymm11_5;
smull mulHymm11_6 mulL_6 ymm1_6 ymm11_6;
smull mulHymm11_7 mulL_7 ymm1_7 ymm11_7;
smull mulHymm11_8 mulL_8 ymm1_8 ymm11_8;
smull mulHymm11_9 mulL_9 ymm1_9 ymm11_9;
smull mulHymm11_a mulL_a ymm1_a ymm11_a;
smull mulHymm11_b mulL_b ymm1_b ymm11_b;
smull mulHymm11_c mulL_c ymm1_c ymm11_c;
smull mulHymm11_d mulL_d ymm1_d ymm11_d;
smull mulHymm11_e mulL_e ymm1_e ymm11_e;
smull mulHymm11_f mulL_f ymm1_f ymm11_f;
cast ymm3_0@sint16 mulL_0;
cast ymm3_1@sint16 mulL_1;
cast ymm3_2@sint16 mulL_2;
cast ymm3_3@sint16 mulL_3;
cast ymm3_4@sint16 mulL_4;
cast ymm3_5@sint16 mulL_5;
cast ymm3_6@sint16 mulL_6;
cast ymm3_7@sint16 mulL_7;
cast ymm3_8@sint16 mulL_8;
cast ymm3_9@sint16 mulL_9;
cast ymm3_a@sint16 mulL_a;
cast ymm3_b@sint16 mulL_b;
cast ymm3_c@sint16 mulL_c;
cast ymm3_d@sint16 mulL_d;
cast ymm3_e@sint16 mulL_e;
cast ymm3_f@sint16 mulL_f;
(* vpmulhw %ymm2,%ymm11,%ymm11                     #! PC = 0x555555559aa1 *)
smull mulH_0 mulLymm11_0 ymm11_0 ymm2_0;
smull mulH_1 mulLymm11_1 ymm11_1 ymm2_1;
smull mulH_2 mulLymm11_2 ymm11_2 ymm2_2;
smull mulH_3 mulLymm11_3 ymm11_3 ymm2_3;
smull mulH_4 mulLymm11_4 ymm11_4 ymm2_4;
smull mulH_5 mulLymm11_5 ymm11_5 ymm2_5;
smull mulH_6 mulLymm11_6 ymm11_6 ymm2_6;
smull mulH_7 mulLymm11_7 ymm11_7 ymm2_7;
smull mulH_8 mulLymm11_8 ymm11_8 ymm2_8;
smull mulH_9 mulLymm11_9 ymm11_9 ymm2_9;
smull mulH_a mulLymm11_a ymm11_a ymm2_a;
smull mulH_b mulLymm11_b ymm11_b ymm2_b;
smull mulH_c mulLymm11_c ymm11_c ymm2_c;
smull mulH_d mulLymm11_d ymm11_d ymm2_d;
smull mulH_e mulLymm11_e ymm11_e ymm2_e;
smull mulH_f mulLymm11_f ymm11_f ymm2_f;
mov ymm11_0 mulH_0;
mov ymm11_1 mulH_1;
mov ymm11_2 mulH_2;
mov ymm11_3 mulH_3;
mov ymm11_4 mulH_4;
mov ymm11_5 mulH_5;
mov ymm11_6 mulH_6;
mov ymm11_7 mulH_7;
mov ymm11_8 mulH_8;
mov ymm11_9 mulH_9;
mov ymm11_a mulH_a;
mov ymm11_b mulH_b;
mov ymm11_c mulH_c;
mov ymm11_d mulH_d;
mov ymm11_e mulH_e;
mov ymm11_f mulH_f;
(* vpmulhw %ymm0,%ymm3,%ymm3                       #! PC = 0x555555559aa5 *)
smull mulH_0 red_0 ymm3_0 ymm0_0;
assert true && red_0 = mulLymm11_0;
assume red_0 = mulLymm11_0 && true;
smull mulH_1 red_1 ymm3_1 ymm0_1;
assert true && red_1 = mulLymm11_1;
assume red_1 = mulLymm11_1 && true;
smull mulH_2 red_2 ymm3_2 ymm0_2;
assert true && red_2 = mulLymm11_2;
assume red_2 = mulLymm11_2 && true;
smull mulH_3 red_3 ymm3_3 ymm0_3;
assert true && red_3 = mulLymm11_3;
assume red_3 = mulLymm11_3 && true;
smull mulH_4 red_4 ymm3_4 ymm0_4;
assert true && red_4 = mulLymm11_4;
assume red_4 = mulLymm11_4 && true;
smull mulH_5 red_5 ymm3_5 ymm0_5;
assert true && red_5 = mulLymm11_5;
assume red_5 = mulLymm11_5 && true;
smull mulH_6 red_6 ymm3_6 ymm0_6;
assert true && red_6 = mulLymm11_6;
assume red_6 = mulLymm11_6 && true;
smull mulH_7 red_7 ymm3_7 ymm0_7;
assert true && red_7 = mulLymm11_7;
assume red_7 = mulLymm11_7 && true;
smull mulH_8 red_8 ymm3_8 ymm0_8;
assert true && red_8 = mulLymm11_8;
assume red_8 = mulLymm11_8 && true;
smull mulH_9 red_9 ymm3_9 ymm0_9;
assert true && red_9 = mulLymm11_9;
assume red_9 = mulLymm11_9 && true;
smull mulH_a red_a ymm3_a ymm0_a;
assert true && red_a = mulLymm11_a;
assume red_a = mulLymm11_a && true;
smull mulH_b red_b ymm3_b ymm0_b;
assert true && red_b = mulLymm11_b;
assume red_b = mulLymm11_b && true;
smull mulH_c red_c ymm3_c ymm0_c;
assert true && red_c = mulLymm11_c;
assume red_c = mulLymm11_c && true;
smull mulH_d red_d ymm3_d ymm0_d;
assert true && red_d = mulLymm11_d;
assume red_d = mulLymm11_d && true;
smull mulH_e red_e ymm3_e ymm0_e;
assert true && red_e = mulLymm11_e;
assume red_e = mulLymm11_e && true;
smull mulH_f red_f ymm3_f ymm0_f;
assert true && red_f = mulLymm11_f;
assume red_f = mulLymm11_f && true;
mov ymm3_0 mulH_0;
mov ymm3_1 mulH_1;
mov ymm3_2 mulH_2;
mov ymm3_3 mulH_3;
mov ymm3_4 mulH_4;
mov ymm3_5 mulH_5;
mov ymm3_6 mulH_6;
mov ymm3_7 mulH_7;
mov ymm3_8 mulH_8;
mov ymm3_9 mulH_9;
mov ymm3_a mulH_a;
mov ymm3_b mulH_b;
mov ymm3_c mulH_c;
mov ymm3_d mulH_d;
mov ymm3_e mulH_e;
mov ymm3_f mulH_f;
(* vpsubw %ymm3,%ymm11,%ymm11                      #! PC = 0x555555559aa9 *)
sub ymm11_0 ymm11_0 ymm3_0;
sub ymm11_1 ymm11_1 ymm3_1;
sub ymm11_2 ymm11_2 ymm3_2;
sub ymm11_3 ymm11_3 ymm3_3;
sub ymm11_4 ymm11_4 ymm3_4;
sub ymm11_5 ymm11_5 ymm3_5;
sub ymm11_6 ymm11_6 ymm3_6;
sub ymm11_7 ymm11_7 ymm3_7;
sub ymm11_8 ymm11_8 ymm3_8;
sub ymm11_9 ymm11_9 ymm3_9;
sub ymm11_a ymm11_a ymm3_a;
sub ymm11_b ymm11_b ymm3_b;
sub ymm11_c ymm11_c ymm3_c;
sub ymm11_d ymm11_d ymm3_d;
sub ymm11_e ymm11_e ymm3_e;
sub ymm11_f ymm11_f ymm3_f;
(* vpaddw %ymm8,%ymm4,%ymm3                        #! PC = 0x555555559aad *)
add ymm3_0 ymm4_0 ymm8_0;
add ymm3_1 ymm4_1 ymm8_1;
add ymm3_2 ymm4_2 ymm8_2;
add ymm3_3 ymm4_3 ymm8_3;
add ymm3_4 ymm4_4 ymm8_4;
add ymm3_5 ymm4_5 ymm8_5;
add ymm3_6 ymm4_6 ymm8_6;
add ymm3_7 ymm4_7 ymm8_7;
add ymm3_8 ymm4_8 ymm8_8;
add ymm3_9 ymm4_9 ymm8_9;
add ymm3_a ymm4_a ymm8_a;
add ymm3_b ymm4_b ymm8_b;
add ymm3_c ymm4_c ymm8_c;
add ymm3_d ymm4_d ymm8_d;
add ymm3_e ymm4_e ymm8_e;
add ymm3_f ymm4_f ymm8_f;
(* vpsubw %ymm8,%ymm4,%ymm8                        #! PC = 0x555555559ab2 *)
sub ymm8_0 ymm4_0 ymm8_0;
sub ymm8_1 ymm4_1 ymm8_1;
sub ymm8_2 ymm4_2 ymm8_2;
sub ymm8_3 ymm4_3 ymm8_3;
sub ymm8_4 ymm4_4 ymm8_4;
sub ymm8_5 ymm4_5 ymm8_5;
sub ymm8_6 ymm4_6 ymm8_6;
sub ymm8_7 ymm4_7 ymm8_7;
sub ymm8_8 ymm4_8 ymm8_8;
sub ymm8_9 ymm4_9 ymm8_9;
sub ymm8_a ymm4_a ymm8_a;
sub ymm8_b ymm4_b ymm8_b;
sub ymm8_c ymm4_c ymm8_c;
sub ymm8_d ymm4_d ymm8_d;
sub ymm8_e ymm4_e ymm8_e;
sub ymm8_f ymm4_f ymm8_f;
(* vpaddw %ymm9,%ymm5,%ymm4                        #! PC = 0x555555559ab7 *)
add ymm4_0 ymm5_0 ymm9_0;
add ymm4_1 ymm5_1 ymm9_1;
add ymm4_2 ymm5_2 ymm9_2;
add ymm4_3 ymm5_3 ymm9_3;
add ymm4_4 ymm5_4 ymm9_4;
add ymm4_5 ymm5_5 ymm9_5;
add ymm4_6 ymm5_6 ymm9_6;
add ymm4_7 ymm5_7 ymm9_7;
add ymm4_8 ymm5_8 ymm9_8;
add ymm4_9 ymm5_9 ymm9_9;
add ymm4_a ymm5_a ymm9_a;
add ymm4_b ymm5_b ymm9_b;
add ymm4_c ymm5_c ymm9_c;
add ymm4_d ymm5_d ymm9_d;
add ymm4_e ymm5_e ymm9_e;
add ymm4_f ymm5_f ymm9_f;
(* vpsubw %ymm9,%ymm5,%ymm9                        #! PC = 0x555555559abc *)
sub ymm9_0 ymm5_0 ymm9_0;
sub ymm9_1 ymm5_1 ymm9_1;
sub ymm9_2 ymm5_2 ymm9_2;
sub ymm9_3 ymm5_3 ymm9_3;
sub ymm9_4 ymm5_4 ymm9_4;
sub ymm9_5 ymm5_5 ymm9_5;
sub ymm9_6 ymm5_6 ymm9_6;
sub ymm9_7 ymm5_7 ymm9_7;
sub ymm9_8 ymm5_8 ymm9_8;
sub ymm9_9 ymm5_9 ymm9_9;
sub ymm9_a ymm5_a ymm9_a;
sub ymm9_b ymm5_b ymm9_b;
sub ymm9_c ymm5_c ymm9_c;
sub ymm9_d ymm5_d ymm9_d;
sub ymm9_e ymm5_e ymm9_e;
sub ymm9_f ymm5_f ymm9_f;
(* vpaddw %ymm10,%ymm6,%ymm5                       #! PC = 0x555555559ac1 *)
add ymm5_0 ymm6_0 ymm10_0;
add ymm5_1 ymm6_1 ymm10_1;
add ymm5_2 ymm6_2 ymm10_2;
add ymm5_3 ymm6_3 ymm10_3;
add ymm5_4 ymm6_4 ymm10_4;
add ymm5_5 ymm6_5 ymm10_5;
add ymm5_6 ymm6_6 ymm10_6;
add ymm5_7 ymm6_7 ymm10_7;
add ymm5_8 ymm6_8 ymm10_8;
add ymm5_9 ymm6_9 ymm10_9;
add ymm5_a ymm6_a ymm10_a;
add ymm5_b ymm6_b ymm10_b;
add ymm5_c ymm6_c ymm10_c;
add ymm5_d ymm6_d ymm10_d;
add ymm5_e ymm6_e ymm10_e;
add ymm5_f ymm6_f ymm10_f;
(* vpsubw %ymm10,%ymm6,%ymm10                      #! PC = 0x555555559ac6 *)
sub ymm10_0 ymm6_0 ymm10_0;
sub ymm10_1 ymm6_1 ymm10_1;
sub ymm10_2 ymm6_2 ymm10_2;
sub ymm10_3 ymm6_3 ymm10_3;
sub ymm10_4 ymm6_4 ymm10_4;
sub ymm10_5 ymm6_5 ymm10_5;
sub ymm10_6 ymm6_6 ymm10_6;
sub ymm10_7 ymm6_7 ymm10_7;
sub ymm10_8 ymm6_8 ymm10_8;
sub ymm10_9 ymm6_9 ymm10_9;
sub ymm10_a ymm6_a ymm10_a;
sub ymm10_b ymm6_b ymm10_b;
sub ymm10_c ymm6_c ymm10_c;
sub ymm10_d ymm6_d ymm10_d;
sub ymm10_e ymm6_e ymm10_e;
sub ymm10_f ymm6_f ymm10_f;
(* vpaddw %ymm11,%ymm7,%ymm6                       #! PC = 0x555555559acb *)
add ymm6_0 ymm7_0 ymm11_0;
add ymm6_1 ymm7_1 ymm11_1;
add ymm6_2 ymm7_2 ymm11_2;
add ymm6_3 ymm7_3 ymm11_3;
add ymm6_4 ymm7_4 ymm11_4;
add ymm6_5 ymm7_5 ymm11_5;
add ymm6_6 ymm7_6 ymm11_6;
add ymm6_7 ymm7_7 ymm11_7;
add ymm6_8 ymm7_8 ymm11_8;
add ymm6_9 ymm7_9 ymm11_9;
add ymm6_a ymm7_a ymm11_a;
add ymm6_b ymm7_b ymm11_b;
add ymm6_c ymm7_c ymm11_c;
add ymm6_d ymm7_d ymm11_d;
add ymm6_e ymm7_e ymm11_e;
add ymm6_f ymm7_f ymm11_f;
(* vpsubw %ymm11,%ymm7,%ymm11                      #! PC = 0x555555559ad0 *)
sub ymm11_0 ymm7_0 ymm11_0;
sub ymm11_1 ymm7_1 ymm11_1;
sub ymm11_2 ymm7_2 ymm11_2;
sub ymm11_3 ymm7_3 ymm11_3;
sub ymm11_4 ymm7_4 ymm11_4;
sub ymm11_5 ymm7_5 ymm11_5;
sub ymm11_6 ymm7_6 ymm11_6;
sub ymm11_7 ymm7_7 ymm11_7;
sub ymm11_8 ymm7_8 ymm11_8;
sub ymm11_9 ymm7_9 ymm11_9;
sub ymm11_a ymm7_a ymm11_a;
sub ymm11_b ymm7_b ymm11_b;
sub ymm11_c ymm7_c ymm11_c;
sub ymm11_d ymm7_d ymm11_d;
sub ymm11_e ymm7_e ymm11_e;
sub ymm11_f ymm7_f ymm11_f;
(* vpbroadcastw 0x11c(%rdx),%ymm1                  #! EA = L0x55555556123c; Value = 0x5a10450bc1382524; PC = 0x555555559ad5 *)
mov ymm1_0 L0x55555556123c;
mov ymm1_1 L0x55555556123c;
mov ymm1_2 L0x55555556123c;
mov ymm1_3 L0x55555556123c;
mov ymm1_4 L0x55555556123c;
mov ymm1_5 L0x55555556123c;
mov ymm1_6 L0x55555556123c;
mov ymm1_7 L0x55555556123c;
mov ymm1_8 L0x55555556123c;
mov ymm1_9 L0x55555556123c;
mov ymm1_a L0x55555556123c;
mov ymm1_b L0x55555556123c;
mov ymm1_c L0x55555556123c;
mov ymm1_d L0x55555556123c;
mov ymm1_e L0x55555556123c;
mov ymm1_f L0x55555556123c;
(* vpbroadcastw 0x31c(%rdx),%ymm2                  #! EA = L0x55555556143c; Value = 0xfa10130bf1380d24; PC = 0x555555559ade *)
mov ymm2_0 L0x55555556143c;
mov ymm2_1 L0x55555556143c;
mov ymm2_2 L0x55555556143c;
mov ymm2_3 L0x55555556143c;
mov ymm2_4 L0x55555556143c;
mov ymm2_5 L0x55555556143c;
mov ymm2_6 L0x55555556143c;
mov ymm2_7 L0x55555556143c;
mov ymm2_8 L0x55555556143c;
mov ymm2_9 L0x55555556143c;
mov ymm2_a L0x55555556143c;
mov ymm2_b L0x55555556143c;
mov ymm2_c L0x55555556143c;
mov ymm2_d L0x55555556143c;
mov ymm2_e L0x55555556143c;
mov ymm2_f L0x55555556143c;
(* vpmullw %ymm1,%ymm5,%ymm7                       #! PC = 0x555555559ae7 *)
smull mulHymm5_0 mulL_0 ymm1_0 ymm5_0;
smull mulHymm5_1 mulL_1 ymm1_1 ymm5_1;
smull mulHymm5_2 mulL_2 ymm1_2 ymm5_2;
smull mulHymm5_3 mulL_3 ymm1_3 ymm5_3;
smull mulHymm5_4 mulL_4 ymm1_4 ymm5_4;
smull mulHymm5_5 mulL_5 ymm1_5 ymm5_5;
smull mulHymm5_6 mulL_6 ymm1_6 ymm5_6;
smull mulHymm5_7 mulL_7 ymm1_7 ymm5_7;
smull mulHymm5_8 mulL_8 ymm1_8 ymm5_8;
smull mulHymm5_9 mulL_9 ymm1_9 ymm5_9;
smull mulHymm5_a mulL_a ymm1_a ymm5_a;
smull mulHymm5_b mulL_b ymm1_b ymm5_b;
smull mulHymm5_c mulL_c ymm1_c ymm5_c;
smull mulHymm5_d mulL_d ymm1_d ymm5_d;
smull mulHymm5_e mulL_e ymm1_e ymm5_e;
smull mulHymm5_f mulL_f ymm1_f ymm5_f;
cast ymm7_0@sint16 mulL_0;
cast ymm7_1@sint16 mulL_1;
cast ymm7_2@sint16 mulL_2;
cast ymm7_3@sint16 mulL_3;
cast ymm7_4@sint16 mulL_4;
cast ymm7_5@sint16 mulL_5;
cast ymm7_6@sint16 mulL_6;
cast ymm7_7@sint16 mulL_7;
cast ymm7_8@sint16 mulL_8;
cast ymm7_9@sint16 mulL_9;
cast ymm7_a@sint16 mulL_a;
cast ymm7_b@sint16 mulL_b;
cast ymm7_c@sint16 mulL_c;
cast ymm7_d@sint16 mulL_d;
cast ymm7_e@sint16 mulL_e;
cast ymm7_f@sint16 mulL_f;
(* vpmulhw %ymm2,%ymm5,%ymm5                       #! PC = 0x555555559aeb *)
smull mulH_0 mulLymm5_0 ymm5_0 ymm2_0;
smull mulH_1 mulLymm5_1 ymm5_1 ymm2_1;
smull mulH_2 mulLymm5_2 ymm5_2 ymm2_2;
smull mulH_3 mulLymm5_3 ymm5_3 ymm2_3;
smull mulH_4 mulLymm5_4 ymm5_4 ymm2_4;
smull mulH_5 mulLymm5_5 ymm5_5 ymm2_5;
smull mulH_6 mulLymm5_6 ymm5_6 ymm2_6;
smull mulH_7 mulLymm5_7 ymm5_7 ymm2_7;
smull mulH_8 mulLymm5_8 ymm5_8 ymm2_8;
smull mulH_9 mulLymm5_9 ymm5_9 ymm2_9;
smull mulH_a mulLymm5_a ymm5_a ymm2_a;
smull mulH_b mulLymm5_b ymm5_b ymm2_b;
smull mulH_c mulLymm5_c ymm5_c ymm2_c;
smull mulH_d mulLymm5_d ymm5_d ymm2_d;
smull mulH_e mulLymm5_e ymm5_e ymm2_e;
smull mulH_f mulLymm5_f ymm5_f ymm2_f;
mov ymm5_0 mulH_0;
mov ymm5_1 mulH_1;
mov ymm5_2 mulH_2;
mov ymm5_3 mulH_3;
mov ymm5_4 mulH_4;
mov ymm5_5 mulH_5;
mov ymm5_6 mulH_6;
mov ymm5_7 mulH_7;
mov ymm5_8 mulH_8;
mov ymm5_9 mulH_9;
mov ymm5_a mulH_a;
mov ymm5_b mulH_b;
mov ymm5_c mulH_c;
mov ymm5_d mulH_d;
mov ymm5_e mulH_e;
mov ymm5_f mulH_f;
(* vpmulhw %ymm0,%ymm7,%ymm7                       #! PC = 0x555555559aef *)
smull mulH_0 red_0 ymm7_0 ymm0_0;
assert true && red_0 = mulLymm5_0;
assume red_0 = mulLymm5_0 && true;
smull mulH_1 red_1 ymm7_1 ymm0_1;
assert true && red_1 = mulLymm5_1;
assume red_1 = mulLymm5_1 && true;
smull mulH_2 red_2 ymm7_2 ymm0_2;
assert true && red_2 = mulLymm5_2;
assume red_2 = mulLymm5_2 && true;
smull mulH_3 red_3 ymm7_3 ymm0_3;
assert true && red_3 = mulLymm5_3;
assume red_3 = mulLymm5_3 && true;
smull mulH_4 red_4 ymm7_4 ymm0_4;
assert true && red_4 = mulLymm5_4;
assume red_4 = mulLymm5_4 && true;
smull mulH_5 red_5 ymm7_5 ymm0_5;
assert true && red_5 = mulLymm5_5;
assume red_5 = mulLymm5_5 && true;
smull mulH_6 red_6 ymm7_6 ymm0_6;
assert true && red_6 = mulLymm5_6;
assume red_6 = mulLymm5_6 && true;
smull mulH_7 red_7 ymm7_7 ymm0_7;
assert true && red_7 = mulLymm5_7;
assume red_7 = mulLymm5_7 && true;
smull mulH_8 red_8 ymm7_8 ymm0_8;
assert true && red_8 = mulLymm5_8;
assume red_8 = mulLymm5_8 && true;
smull mulH_9 red_9 ymm7_9 ymm0_9;
assert true && red_9 = mulLymm5_9;
assume red_9 = mulLymm5_9 && true;
smull mulH_a red_a ymm7_a ymm0_a;
assert true && red_a = mulLymm5_a;
assume red_a = mulLymm5_a && true;
smull mulH_b red_b ymm7_b ymm0_b;
assert true && red_b = mulLymm5_b;
assume red_b = mulLymm5_b && true;
smull mulH_c red_c ymm7_c ymm0_c;
assert true && red_c = mulLymm5_c;
assume red_c = mulLymm5_c && true;
smull mulH_d red_d ymm7_d ymm0_d;
assert true && red_d = mulLymm5_d;
assume red_d = mulLymm5_d && true;
smull mulH_e red_e ymm7_e ymm0_e;
assert true && red_e = mulLymm5_e;
assume red_e = mulLymm5_e && true;
smull mulH_f red_f ymm7_f ymm0_f;
assert true && red_f = mulLymm5_f;
assume red_f = mulLymm5_f && true;
mov ymm7_0 mulH_0;
mov ymm7_1 mulH_1;
mov ymm7_2 mulH_2;
mov ymm7_3 mulH_3;
mov ymm7_4 mulH_4;
mov ymm7_5 mulH_5;
mov ymm7_6 mulH_6;
mov ymm7_7 mulH_7;
mov ymm7_8 mulH_8;
mov ymm7_9 mulH_9;
mov ymm7_a mulH_a;
mov ymm7_b mulH_b;
mov ymm7_c mulH_c;
mov ymm7_d mulH_d;
mov ymm7_e mulH_e;
mov ymm7_f mulH_f;
(* vpsubw %ymm7,%ymm5,%ymm5                        #! PC = 0x555555559af3 *)
sub ymm5_0 ymm5_0 ymm7_0;
sub ymm5_1 ymm5_1 ymm7_1;
sub ymm5_2 ymm5_2 ymm7_2;
sub ymm5_3 ymm5_3 ymm7_3;
sub ymm5_4 ymm5_4 ymm7_4;
sub ymm5_5 ymm5_5 ymm7_5;
sub ymm5_6 ymm5_6 ymm7_6;
sub ymm5_7 ymm5_7 ymm7_7;
sub ymm5_8 ymm5_8 ymm7_8;
sub ymm5_9 ymm5_9 ymm7_9;
sub ymm5_a ymm5_a ymm7_a;
sub ymm5_b ymm5_b ymm7_b;
sub ymm5_c ymm5_c ymm7_c;
sub ymm5_d ymm5_d ymm7_d;
sub ymm5_e ymm5_e ymm7_e;
sub ymm5_f ymm5_f ymm7_f;
(* vpmullw %ymm1,%ymm6,%ymm7                       #! PC = 0x555555559af7 *)
smull mulHymm6_0 mulL_0 ymm1_0 ymm6_0;
smull mulHymm6_1 mulL_1 ymm1_1 ymm6_1;
smull mulHymm6_2 mulL_2 ymm1_2 ymm6_2;
smull mulHymm6_3 mulL_3 ymm1_3 ymm6_3;
smull mulHymm6_4 mulL_4 ymm1_4 ymm6_4;
smull mulHymm6_5 mulL_5 ymm1_5 ymm6_5;
smull mulHymm6_6 mulL_6 ymm1_6 ymm6_6;
smull mulHymm6_7 mulL_7 ymm1_7 ymm6_7;
smull mulHymm6_8 mulL_8 ymm1_8 ymm6_8;
smull mulHymm6_9 mulL_9 ymm1_9 ymm6_9;
smull mulHymm6_a mulL_a ymm1_a ymm6_a;
smull mulHymm6_b mulL_b ymm1_b ymm6_b;
smull mulHymm6_c mulL_c ymm1_c ymm6_c;
smull mulHymm6_d mulL_d ymm1_d ymm6_d;
smull mulHymm6_e mulL_e ymm1_e ymm6_e;
smull mulHymm6_f mulL_f ymm1_f ymm6_f;
cast ymm7_0@sint16 mulL_0;
cast ymm7_1@sint16 mulL_1;
cast ymm7_2@sint16 mulL_2;
cast ymm7_3@sint16 mulL_3;
cast ymm7_4@sint16 mulL_4;
cast ymm7_5@sint16 mulL_5;
cast ymm7_6@sint16 mulL_6;
cast ymm7_7@sint16 mulL_7;
cast ymm7_8@sint16 mulL_8;
cast ymm7_9@sint16 mulL_9;
cast ymm7_a@sint16 mulL_a;
cast ymm7_b@sint16 mulL_b;
cast ymm7_c@sint16 mulL_c;
cast ymm7_d@sint16 mulL_d;
cast ymm7_e@sint16 mulL_e;
cast ymm7_f@sint16 mulL_f;
(* vpmulhw %ymm2,%ymm6,%ymm6                       #! PC = 0x555555559afb *)
smull mulH_0 mulLymm6_0 ymm6_0 ymm2_0;
smull mulH_1 mulLymm6_1 ymm6_1 ymm2_1;
smull mulH_2 mulLymm6_2 ymm6_2 ymm2_2;
smull mulH_3 mulLymm6_3 ymm6_3 ymm2_3;
smull mulH_4 mulLymm6_4 ymm6_4 ymm2_4;
smull mulH_5 mulLymm6_5 ymm6_5 ymm2_5;
smull mulH_6 mulLymm6_6 ymm6_6 ymm2_6;
smull mulH_7 mulLymm6_7 ymm6_7 ymm2_7;
smull mulH_8 mulLymm6_8 ymm6_8 ymm2_8;
smull mulH_9 mulLymm6_9 ymm6_9 ymm2_9;
smull mulH_a mulLymm6_a ymm6_a ymm2_a;
smull mulH_b mulLymm6_b ymm6_b ymm2_b;
smull mulH_c mulLymm6_c ymm6_c ymm2_c;
smull mulH_d mulLymm6_d ymm6_d ymm2_d;
smull mulH_e mulLymm6_e ymm6_e ymm2_e;
smull mulH_f mulLymm6_f ymm6_f ymm2_f;
mov ymm6_0 mulH_0;
mov ymm6_1 mulH_1;
mov ymm6_2 mulH_2;
mov ymm6_3 mulH_3;
mov ymm6_4 mulH_4;
mov ymm6_5 mulH_5;
mov ymm6_6 mulH_6;
mov ymm6_7 mulH_7;
mov ymm6_8 mulH_8;
mov ymm6_9 mulH_9;
mov ymm6_a mulH_a;
mov ymm6_b mulH_b;
mov ymm6_c mulH_c;
mov ymm6_d mulH_d;
mov ymm6_e mulH_e;
mov ymm6_f mulH_f;
(* vpmulhw %ymm0,%ymm7,%ymm7                       #! PC = 0x555555559aff *)
smull mulH_0 red_0 ymm7_0 ymm0_0;
assert true && red_0 = mulLymm6_0;
assume red_0 = mulLymm6_0 && true;
smull mulH_1 red_1 ymm7_1 ymm0_1;
assert true && red_1 = mulLymm6_1;
assume red_1 = mulLymm6_1 && true;
smull mulH_2 red_2 ymm7_2 ymm0_2;
assert true && red_2 = mulLymm6_2;
assume red_2 = mulLymm6_2 && true;
smull mulH_3 red_3 ymm7_3 ymm0_3;
assert true && red_3 = mulLymm6_3;
assume red_3 = mulLymm6_3 && true;
smull mulH_4 red_4 ymm7_4 ymm0_4;
assert true && red_4 = mulLymm6_4;
assume red_4 = mulLymm6_4 && true;
smull mulH_5 red_5 ymm7_5 ymm0_5;
assert true && red_5 = mulLymm6_5;
assume red_5 = mulLymm6_5 && true;
smull mulH_6 red_6 ymm7_6 ymm0_6;
assert true && red_6 = mulLymm6_6;
assume red_6 = mulLymm6_6 && true;
smull mulH_7 red_7 ymm7_7 ymm0_7;
assert true && red_7 = mulLymm6_7;
assume red_7 = mulLymm6_7 && true;
smull mulH_8 red_8 ymm7_8 ymm0_8;
assert true && red_8 = mulLymm6_8;
assume red_8 = mulLymm6_8 && true;
smull mulH_9 red_9 ymm7_9 ymm0_9;
assert true && red_9 = mulLymm6_9;
assume red_9 = mulLymm6_9 && true;
smull mulH_a red_a ymm7_a ymm0_a;
assert true && red_a = mulLymm6_a;
assume red_a = mulLymm6_a && true;
smull mulH_b red_b ymm7_b ymm0_b;
assert true && red_b = mulLymm6_b;
assume red_b = mulLymm6_b && true;
smull mulH_c red_c ymm7_c ymm0_c;
assert true && red_c = mulLymm6_c;
assume red_c = mulLymm6_c && true;
smull mulH_d red_d ymm7_d ymm0_d;
assert true && red_d = mulLymm6_d;
assume red_d = mulLymm6_d && true;
smull mulH_e red_e ymm7_e ymm0_e;
assert true && red_e = mulLymm6_e;
assume red_e = mulLymm6_e && true;
smull mulH_f red_f ymm7_f ymm0_f;
assert true && red_f = mulLymm6_f;
assume red_f = mulLymm6_f && true;
mov ymm7_0 mulH_0;
mov ymm7_1 mulH_1;
mov ymm7_2 mulH_2;
mov ymm7_3 mulH_3;
mov ymm7_4 mulH_4;
mov ymm7_5 mulH_5;
mov ymm7_6 mulH_6;
mov ymm7_7 mulH_7;
mov ymm7_8 mulH_8;
mov ymm7_9 mulH_9;
mov ymm7_a mulH_a;
mov ymm7_b mulH_b;
mov ymm7_c mulH_c;
mov ymm7_d mulH_d;
mov ymm7_e mulH_e;
mov ymm7_f mulH_f;
(* vpsubw %ymm7,%ymm6,%ymm6                        #! PC = 0x555555559b03 *)
sub ymm6_0 ymm6_0 ymm7_0;
sub ymm6_1 ymm6_1 ymm7_1;
sub ymm6_2 ymm6_2 ymm7_2;
sub ymm6_3 ymm6_3 ymm7_3;
sub ymm6_4 ymm6_4 ymm7_4;
sub ymm6_5 ymm6_5 ymm7_5;
sub ymm6_6 ymm6_6 ymm7_6;
sub ymm6_7 ymm6_7 ymm7_7;
sub ymm6_8 ymm6_8 ymm7_8;
sub ymm6_9 ymm6_9 ymm7_9;
sub ymm6_a ymm6_a ymm7_a;
sub ymm6_b ymm6_b ymm7_b;
sub ymm6_c ymm6_c ymm7_c;
sub ymm6_d ymm6_d ymm7_d;
sub ymm6_e ymm6_e ymm7_e;
sub ymm6_f ymm6_f ymm7_f;
(* vpbroadcastw 0x11e(%rdx),%ymm1                  #! EA = L0x55555556123e; Value = 0x92395a10450bc138; PC = 0x555555559b07 *)
mov ymm1_0 L0x55555556123e;
mov ymm1_1 L0x55555556123e;
mov ymm1_2 L0x55555556123e;
mov ymm1_3 L0x55555556123e;
mov ymm1_4 L0x55555556123e;
mov ymm1_5 L0x55555556123e;
mov ymm1_6 L0x55555556123e;
mov ymm1_7 L0x55555556123e;
mov ymm1_8 L0x55555556123e;
mov ymm1_9 L0x55555556123e;
mov ymm1_a L0x55555556123e;
mov ymm1_b L0x55555556123e;
mov ymm1_c L0x55555556123e;
mov ymm1_d L0x55555556123e;
mov ymm1_e L0x55555556123e;
mov ymm1_f L0x55555556123e;
(* vpbroadcastw 0x31e(%rdx),%ymm2                  #! EA = L0x55555556143e; Value = 0xec39fa10130bf138; PC = 0x555555559b10 *)
mov ymm2_0 L0x55555556143e;
mov ymm2_1 L0x55555556143e;
mov ymm2_2 L0x55555556143e;
mov ymm2_3 L0x55555556143e;
mov ymm2_4 L0x55555556143e;
mov ymm2_5 L0x55555556143e;
mov ymm2_6 L0x55555556143e;
mov ymm2_7 L0x55555556143e;
mov ymm2_8 L0x55555556143e;
mov ymm2_9 L0x55555556143e;
mov ymm2_a L0x55555556143e;
mov ymm2_b L0x55555556143e;
mov ymm2_c L0x55555556143e;
mov ymm2_d L0x55555556143e;
mov ymm2_e L0x55555556143e;
mov ymm2_f L0x55555556143e;
(* vpmullw %ymm1,%ymm10,%ymm7                      #! PC = 0x555555559b19 *)
smull mulHymm10_0 mulL_0 ymm1_0 ymm10_0;
smull mulHymm10_1 mulL_1 ymm1_1 ymm10_1;
smull mulHymm10_2 mulL_2 ymm1_2 ymm10_2;
smull mulHymm10_3 mulL_3 ymm1_3 ymm10_3;
smull mulHymm10_4 mulL_4 ymm1_4 ymm10_4;
smull mulHymm10_5 mulL_5 ymm1_5 ymm10_5;
smull mulHymm10_6 mulL_6 ymm1_6 ymm10_6;
smull mulHymm10_7 mulL_7 ymm1_7 ymm10_7;
smull mulHymm10_8 mulL_8 ymm1_8 ymm10_8;
smull mulHymm10_9 mulL_9 ymm1_9 ymm10_9;
smull mulHymm10_a mulL_a ymm1_a ymm10_a;
smull mulHymm10_b mulL_b ymm1_b ymm10_b;
smull mulHymm10_c mulL_c ymm1_c ymm10_c;
smull mulHymm10_d mulL_d ymm1_d ymm10_d;
smull mulHymm10_e mulL_e ymm1_e ymm10_e;
smull mulHymm10_f mulL_f ymm1_f ymm10_f;
cast ymm7_0@sint16 mulL_0;
cast ymm7_1@sint16 mulL_1;
cast ymm7_2@sint16 mulL_2;
cast ymm7_3@sint16 mulL_3;
cast ymm7_4@sint16 mulL_4;
cast ymm7_5@sint16 mulL_5;
cast ymm7_6@sint16 mulL_6;
cast ymm7_7@sint16 mulL_7;
cast ymm7_8@sint16 mulL_8;
cast ymm7_9@sint16 mulL_9;
cast ymm7_a@sint16 mulL_a;
cast ymm7_b@sint16 mulL_b;
cast ymm7_c@sint16 mulL_c;
cast ymm7_d@sint16 mulL_d;
cast ymm7_e@sint16 mulL_e;
cast ymm7_f@sint16 mulL_f;
(* vpmulhw %ymm2,%ymm10,%ymm10                     #! PC = 0x555555559b1d *)
smull mulH_0 mulLymm10_0 ymm10_0 ymm2_0;
smull mulH_1 mulLymm10_1 ymm10_1 ymm2_1;
smull mulH_2 mulLymm10_2 ymm10_2 ymm2_2;
smull mulH_3 mulLymm10_3 ymm10_3 ymm2_3;
smull mulH_4 mulLymm10_4 ymm10_4 ymm2_4;
smull mulH_5 mulLymm10_5 ymm10_5 ymm2_5;
smull mulH_6 mulLymm10_6 ymm10_6 ymm2_6;
smull mulH_7 mulLymm10_7 ymm10_7 ymm2_7;
smull mulH_8 mulLymm10_8 ymm10_8 ymm2_8;
smull mulH_9 mulLymm10_9 ymm10_9 ymm2_9;
smull mulH_a mulLymm10_a ymm10_a ymm2_a;
smull mulH_b mulLymm10_b ymm10_b ymm2_b;
smull mulH_c mulLymm10_c ymm10_c ymm2_c;
smull mulH_d mulLymm10_d ymm10_d ymm2_d;
smull mulH_e mulLymm10_e ymm10_e ymm2_e;
smull mulH_f mulLymm10_f ymm10_f ymm2_f;
mov ymm10_0 mulH_0;
mov ymm10_1 mulH_1;
mov ymm10_2 mulH_2;
mov ymm10_3 mulH_3;
mov ymm10_4 mulH_4;
mov ymm10_5 mulH_5;
mov ymm10_6 mulH_6;
mov ymm10_7 mulH_7;
mov ymm10_8 mulH_8;
mov ymm10_9 mulH_9;
mov ymm10_a mulH_a;
mov ymm10_b mulH_b;
mov ymm10_c mulH_c;
mov ymm10_d mulH_d;
mov ymm10_e mulH_e;
mov ymm10_f mulH_f;
(* vpmulhw %ymm0,%ymm7,%ymm7                       #! PC = 0x555555559b21 *)
smull mulH_0 red_0 ymm7_0 ymm0_0;
assert true && red_0 = mulLymm10_0;
assume red_0 = mulLymm10_0 && true;
smull mulH_1 red_1 ymm7_1 ymm0_1;
assert true && red_1 = mulLymm10_1;
assume red_1 = mulLymm10_1 && true;
smull mulH_2 red_2 ymm7_2 ymm0_2;
assert true && red_2 = mulLymm10_2;
assume red_2 = mulLymm10_2 && true;
smull mulH_3 red_3 ymm7_3 ymm0_3;
assert true && red_3 = mulLymm10_3;
assume red_3 = mulLymm10_3 && true;
smull mulH_4 red_4 ymm7_4 ymm0_4;
assert true && red_4 = mulLymm10_4;
assume red_4 = mulLymm10_4 && true;
smull mulH_5 red_5 ymm7_5 ymm0_5;
assert true && red_5 = mulLymm10_5;
assume red_5 = mulLymm10_5 && true;
smull mulH_6 red_6 ymm7_6 ymm0_6;
assert true && red_6 = mulLymm10_6;
assume red_6 = mulLymm10_6 && true;
smull mulH_7 red_7 ymm7_7 ymm0_7;
assert true && red_7 = mulLymm10_7;
assume red_7 = mulLymm10_7 && true;
smull mulH_8 red_8 ymm7_8 ymm0_8;
assert true && red_8 = mulLymm10_8;
assume red_8 = mulLymm10_8 && true;
smull mulH_9 red_9 ymm7_9 ymm0_9;
assert true && red_9 = mulLymm10_9;
assume red_9 = mulLymm10_9 && true;
smull mulH_a red_a ymm7_a ymm0_a;
assert true && red_a = mulLymm10_a;
assume red_a = mulLymm10_a && true;
smull mulH_b red_b ymm7_b ymm0_b;
assert true && red_b = mulLymm10_b;
assume red_b = mulLymm10_b && true;
smull mulH_c red_c ymm7_c ymm0_c;
assert true && red_c = mulLymm10_c;
assume red_c = mulLymm10_c && true;
smull mulH_d red_d ymm7_d ymm0_d;
assert true && red_d = mulLymm10_d;
assume red_d = mulLymm10_d && true;
smull mulH_e red_e ymm7_e ymm0_e;
assert true && red_e = mulLymm10_e;
assume red_e = mulLymm10_e && true;
smull mulH_f red_f ymm7_f ymm0_f;
assert true && red_f = mulLymm10_f;
assume red_f = mulLymm10_f && true;
mov ymm7_0 mulH_0;
mov ymm7_1 mulH_1;
mov ymm7_2 mulH_2;
mov ymm7_3 mulH_3;
mov ymm7_4 mulH_4;
mov ymm7_5 mulH_5;
mov ymm7_6 mulH_6;
mov ymm7_7 mulH_7;
mov ymm7_8 mulH_8;
mov ymm7_9 mulH_9;
mov ymm7_a mulH_a;
mov ymm7_b mulH_b;
mov ymm7_c mulH_c;
mov ymm7_d mulH_d;
mov ymm7_e mulH_e;
mov ymm7_f mulH_f;
(* vpsubw %ymm7,%ymm10,%ymm10                      #! PC = 0x555555559b25 *)
sub ymm10_0 ymm10_0 ymm7_0;
sub ymm10_1 ymm10_1 ymm7_1;
sub ymm10_2 ymm10_2 ymm7_2;
sub ymm10_3 ymm10_3 ymm7_3;
sub ymm10_4 ymm10_4 ymm7_4;
sub ymm10_5 ymm10_5 ymm7_5;
sub ymm10_6 ymm10_6 ymm7_6;
sub ymm10_7 ymm10_7 ymm7_7;
sub ymm10_8 ymm10_8 ymm7_8;
sub ymm10_9 ymm10_9 ymm7_9;
sub ymm10_a ymm10_a ymm7_a;
sub ymm10_b ymm10_b ymm7_b;
sub ymm10_c ymm10_c ymm7_c;
sub ymm10_d ymm10_d ymm7_d;
sub ymm10_e ymm10_e ymm7_e;
sub ymm10_f ymm10_f ymm7_f;
(* vpmullw %ymm1,%ymm11,%ymm7                      #! PC = 0x555555559b29 *)
smull mulHymm11_0 mulL_0 ymm1_0 ymm11_0;
smull mulHymm11_1 mulL_1 ymm1_1 ymm11_1;
smull mulHymm11_2 mulL_2 ymm1_2 ymm11_2;
smull mulHymm11_3 mulL_3 ymm1_3 ymm11_3;
smull mulHymm11_4 mulL_4 ymm1_4 ymm11_4;
smull mulHymm11_5 mulL_5 ymm1_5 ymm11_5;
smull mulHymm11_6 mulL_6 ymm1_6 ymm11_6;
smull mulHymm11_7 mulL_7 ymm1_7 ymm11_7;
smull mulHymm11_8 mulL_8 ymm1_8 ymm11_8;
smull mulHymm11_9 mulL_9 ymm1_9 ymm11_9;
smull mulHymm11_a mulL_a ymm1_a ymm11_a;
smull mulHymm11_b mulL_b ymm1_b ymm11_b;
smull mulHymm11_c mulL_c ymm1_c ymm11_c;
smull mulHymm11_d mulL_d ymm1_d ymm11_d;
smull mulHymm11_e mulL_e ymm1_e ymm11_e;
smull mulHymm11_f mulL_f ymm1_f ymm11_f;
cast ymm7_0@sint16 mulL_0;
cast ymm7_1@sint16 mulL_1;
cast ymm7_2@sint16 mulL_2;
cast ymm7_3@sint16 mulL_3;
cast ymm7_4@sint16 mulL_4;
cast ymm7_5@sint16 mulL_5;
cast ymm7_6@sint16 mulL_6;
cast ymm7_7@sint16 mulL_7;
cast ymm7_8@sint16 mulL_8;
cast ymm7_9@sint16 mulL_9;
cast ymm7_a@sint16 mulL_a;
cast ymm7_b@sint16 mulL_b;
cast ymm7_c@sint16 mulL_c;
cast ymm7_d@sint16 mulL_d;
cast ymm7_e@sint16 mulL_e;
cast ymm7_f@sint16 mulL_f;
(* vpmulhw %ymm2,%ymm11,%ymm11                     #! PC = 0x555555559b2d *)
smull mulH_0 mulLymm11_0 ymm11_0 ymm2_0;
smull mulH_1 mulLymm11_1 ymm11_1 ymm2_1;
smull mulH_2 mulLymm11_2 ymm11_2 ymm2_2;
smull mulH_3 mulLymm11_3 ymm11_3 ymm2_3;
smull mulH_4 mulLymm11_4 ymm11_4 ymm2_4;
smull mulH_5 mulLymm11_5 ymm11_5 ymm2_5;
smull mulH_6 mulLymm11_6 ymm11_6 ymm2_6;
smull mulH_7 mulLymm11_7 ymm11_7 ymm2_7;
smull mulH_8 mulLymm11_8 ymm11_8 ymm2_8;
smull mulH_9 mulLymm11_9 ymm11_9 ymm2_9;
smull mulH_a mulLymm11_a ymm11_a ymm2_a;
smull mulH_b mulLymm11_b ymm11_b ymm2_b;
smull mulH_c mulLymm11_c ymm11_c ymm2_c;
smull mulH_d mulLymm11_d ymm11_d ymm2_d;
smull mulH_e mulLymm11_e ymm11_e ymm2_e;
smull mulH_f mulLymm11_f ymm11_f ymm2_f;
mov ymm11_0 mulH_0;
mov ymm11_1 mulH_1;
mov ymm11_2 mulH_2;
mov ymm11_3 mulH_3;
mov ymm11_4 mulH_4;
mov ymm11_5 mulH_5;
mov ymm11_6 mulH_6;
mov ymm11_7 mulH_7;
mov ymm11_8 mulH_8;
mov ymm11_9 mulH_9;
mov ymm11_a mulH_a;
mov ymm11_b mulH_b;
mov ymm11_c mulH_c;
mov ymm11_d mulH_d;
mov ymm11_e mulH_e;
mov ymm11_f mulH_f;
(* vpmulhw %ymm0,%ymm7,%ymm7                       #! PC = 0x555555559b31 *)
smull mulH_0 red_0 ymm7_0 ymm0_0;
assert true && red_0 = mulLymm11_0;
assume red_0 = mulLymm11_0 && true;
smull mulH_1 red_1 ymm7_1 ymm0_1;
assert true && red_1 = mulLymm11_1;
assume red_1 = mulLymm11_1 && true;
smull mulH_2 red_2 ymm7_2 ymm0_2;
assert true && red_2 = mulLymm11_2;
assume red_2 = mulLymm11_2 && true;
smull mulH_3 red_3 ymm7_3 ymm0_3;
assert true && red_3 = mulLymm11_3;
assume red_3 = mulLymm11_3 && true;
smull mulH_4 red_4 ymm7_4 ymm0_4;
assert true && red_4 = mulLymm11_4;
assume red_4 = mulLymm11_4 && true;
smull mulH_5 red_5 ymm7_5 ymm0_5;
assert true && red_5 = mulLymm11_5;
assume red_5 = mulLymm11_5 && true;
smull mulH_6 red_6 ymm7_6 ymm0_6;
assert true && red_6 = mulLymm11_6;
assume red_6 = mulLymm11_6 && true;
smull mulH_7 red_7 ymm7_7 ymm0_7;
assert true && red_7 = mulLymm11_7;
assume red_7 = mulLymm11_7 && true;
smull mulH_8 red_8 ymm7_8 ymm0_8;
assert true && red_8 = mulLymm11_8;
assume red_8 = mulLymm11_8 && true;
smull mulH_9 red_9 ymm7_9 ymm0_9;
assert true && red_9 = mulLymm11_9;
assume red_9 = mulLymm11_9 && true;
smull mulH_a red_a ymm7_a ymm0_a;
assert true && red_a = mulLymm11_a;
assume red_a = mulLymm11_a && true;
smull mulH_b red_b ymm7_b ymm0_b;
assert true && red_b = mulLymm11_b;
assume red_b = mulLymm11_b && true;
smull mulH_c red_c ymm7_c ymm0_c;
assert true && red_c = mulLymm11_c;
assume red_c = mulLymm11_c && true;
smull mulH_d red_d ymm7_d ymm0_d;
assert true && red_d = mulLymm11_d;
assume red_d = mulLymm11_d && true;
smull mulH_e red_e ymm7_e ymm0_e;
assert true && red_e = mulLymm11_e;
assume red_e = mulLymm11_e && true;
smull mulH_f red_f ymm7_f ymm0_f;
assert true && red_f = mulLymm11_f;
assume red_f = mulLymm11_f && true;
mov ymm7_0 mulH_0;
mov ymm7_1 mulH_1;
mov ymm7_2 mulH_2;
mov ymm7_3 mulH_3;
mov ymm7_4 mulH_4;
mov ymm7_5 mulH_5;
mov ymm7_6 mulH_6;
mov ymm7_7 mulH_7;
mov ymm7_8 mulH_8;
mov ymm7_9 mulH_9;
mov ymm7_a mulH_a;
mov ymm7_b mulH_b;
mov ymm7_c mulH_c;
mov ymm7_d mulH_d;
mov ymm7_e mulH_e;
mov ymm7_f mulH_f;
(* vpsubw %ymm7,%ymm11,%ymm11                      #! PC = 0x555555559b35 *)
sub ymm11_0 ymm11_0 ymm7_0;
sub ymm11_1 ymm11_1 ymm7_1;
sub ymm11_2 ymm11_2 ymm7_2;
sub ymm11_3 ymm11_3 ymm7_3;
sub ymm11_4 ymm11_4 ymm7_4;
sub ymm11_5 ymm11_5 ymm7_5;
sub ymm11_6 ymm11_6 ymm7_6;
sub ymm11_7 ymm11_7 ymm7_7;
sub ymm11_8 ymm11_8 ymm7_8;
sub ymm11_9 ymm11_9 ymm7_9;
sub ymm11_a ymm11_a ymm7_a;
sub ymm11_b ymm11_b ymm7_b;
sub ymm11_c ymm11_c ymm7_c;
sub ymm11_d ymm11_d ymm7_d;
sub ymm11_e ymm11_e ymm7_e;
sub ymm11_f ymm11_f ymm7_f;
(* vpaddw %ymm5,%ymm3,%ymm7                        #! PC = 0x555555559b39 *)
add ymm7_0 ymm3_0 ymm5_0;
add ymm7_1 ymm3_1 ymm5_1;
add ymm7_2 ymm3_2 ymm5_2;
add ymm7_3 ymm3_3 ymm5_3;
add ymm7_4 ymm3_4 ymm5_4;
add ymm7_5 ymm3_5 ymm5_5;
add ymm7_6 ymm3_6 ymm5_6;
add ymm7_7 ymm3_7 ymm5_7;
add ymm7_8 ymm3_8 ymm5_8;
add ymm7_9 ymm3_9 ymm5_9;
add ymm7_a ymm3_a ymm5_a;
add ymm7_b ymm3_b ymm5_b;
add ymm7_c ymm3_c ymm5_c;
add ymm7_d ymm3_d ymm5_d;
add ymm7_e ymm3_e ymm5_e;
add ymm7_f ymm3_f ymm5_f;
(* vpsubw %ymm5,%ymm3,%ymm5                        #! PC = 0x555555559b3d *)
sub ymm5_0 ymm3_0 ymm5_0;
sub ymm5_1 ymm3_1 ymm5_1;
sub ymm5_2 ymm3_2 ymm5_2;
sub ymm5_3 ymm3_3 ymm5_3;
sub ymm5_4 ymm3_4 ymm5_4;
sub ymm5_5 ymm3_5 ymm5_5;
sub ymm5_6 ymm3_6 ymm5_6;
sub ymm5_7 ymm3_7 ymm5_7;
sub ymm5_8 ymm3_8 ymm5_8;
sub ymm5_9 ymm3_9 ymm5_9;
sub ymm5_a ymm3_a ymm5_a;
sub ymm5_b ymm3_b ymm5_b;
sub ymm5_c ymm3_c ymm5_c;
sub ymm5_d ymm3_d ymm5_d;
sub ymm5_e ymm3_e ymm5_e;
sub ymm5_f ymm3_f ymm5_f;
(* vpaddw %ymm6,%ymm4,%ymm3                        #! PC = 0x555555559b41 *)
add ymm3_0 ymm4_0 ymm6_0;
add ymm3_1 ymm4_1 ymm6_1;
add ymm3_2 ymm4_2 ymm6_2;
add ymm3_3 ymm4_3 ymm6_3;
add ymm3_4 ymm4_4 ymm6_4;
add ymm3_5 ymm4_5 ymm6_5;
add ymm3_6 ymm4_6 ymm6_6;
add ymm3_7 ymm4_7 ymm6_7;
add ymm3_8 ymm4_8 ymm6_8;
add ymm3_9 ymm4_9 ymm6_9;
add ymm3_a ymm4_a ymm6_a;
add ymm3_b ymm4_b ymm6_b;
add ymm3_c ymm4_c ymm6_c;
add ymm3_d ymm4_d ymm6_d;
add ymm3_e ymm4_e ymm6_e;
add ymm3_f ymm4_f ymm6_f;
(* vpsubw %ymm6,%ymm4,%ymm6                        #! PC = 0x555555559b45 *)
sub ymm6_0 ymm4_0 ymm6_0;
sub ymm6_1 ymm4_1 ymm6_1;
sub ymm6_2 ymm4_2 ymm6_2;
sub ymm6_3 ymm4_3 ymm6_3;
sub ymm6_4 ymm4_4 ymm6_4;
sub ymm6_5 ymm4_5 ymm6_5;
sub ymm6_6 ymm4_6 ymm6_6;
sub ymm6_7 ymm4_7 ymm6_7;
sub ymm6_8 ymm4_8 ymm6_8;
sub ymm6_9 ymm4_9 ymm6_9;
sub ymm6_a ymm4_a ymm6_a;
sub ymm6_b ymm4_b ymm6_b;
sub ymm6_c ymm4_c ymm6_c;
sub ymm6_d ymm4_d ymm6_d;
sub ymm6_e ymm4_e ymm6_e;
sub ymm6_f ymm4_f ymm6_f;
(* vpaddw %ymm10,%ymm8,%ymm4                       #! PC = 0x555555559b49 *)
add ymm4_0 ymm8_0 ymm10_0;
add ymm4_1 ymm8_1 ymm10_1;
add ymm4_2 ymm8_2 ymm10_2;
add ymm4_3 ymm8_3 ymm10_3;
add ymm4_4 ymm8_4 ymm10_4;
add ymm4_5 ymm8_5 ymm10_5;
add ymm4_6 ymm8_6 ymm10_6;
add ymm4_7 ymm8_7 ymm10_7;
add ymm4_8 ymm8_8 ymm10_8;
add ymm4_9 ymm8_9 ymm10_9;
add ymm4_a ymm8_a ymm10_a;
add ymm4_b ymm8_b ymm10_b;
add ymm4_c ymm8_c ymm10_c;
add ymm4_d ymm8_d ymm10_d;
add ymm4_e ymm8_e ymm10_e;
add ymm4_f ymm8_f ymm10_f;
(* vpsubw %ymm10,%ymm8,%ymm10                      #! PC = 0x555555559b4e *)
sub ymm10_0 ymm8_0 ymm10_0;
sub ymm10_1 ymm8_1 ymm10_1;
sub ymm10_2 ymm8_2 ymm10_2;
sub ymm10_3 ymm8_3 ymm10_3;
sub ymm10_4 ymm8_4 ymm10_4;
sub ymm10_5 ymm8_5 ymm10_5;
sub ymm10_6 ymm8_6 ymm10_6;
sub ymm10_7 ymm8_7 ymm10_7;
sub ymm10_8 ymm8_8 ymm10_8;
sub ymm10_9 ymm8_9 ymm10_9;
sub ymm10_a ymm8_a ymm10_a;
sub ymm10_b ymm8_b ymm10_b;
sub ymm10_c ymm8_c ymm10_c;
sub ymm10_d ymm8_d ymm10_d;
sub ymm10_e ymm8_e ymm10_e;
sub ymm10_f ymm8_f ymm10_f;
(* vpaddw %ymm11,%ymm9,%ymm8                       #! PC = 0x555555559b53 *)
add ymm8_0 ymm9_0 ymm11_0;
add ymm8_1 ymm9_1 ymm11_1;
add ymm8_2 ymm9_2 ymm11_2;
add ymm8_3 ymm9_3 ymm11_3;
add ymm8_4 ymm9_4 ymm11_4;
add ymm8_5 ymm9_5 ymm11_5;
add ymm8_6 ymm9_6 ymm11_6;
add ymm8_7 ymm9_7 ymm11_7;
add ymm8_8 ymm9_8 ymm11_8;
add ymm8_9 ymm9_9 ymm11_9;
add ymm8_a ymm9_a ymm11_a;
add ymm8_b ymm9_b ymm11_b;
add ymm8_c ymm9_c ymm11_c;
add ymm8_d ymm9_d ymm11_d;
add ymm8_e ymm9_e ymm11_e;
add ymm8_f ymm9_f ymm11_f;
(* vpsubw %ymm11,%ymm9,%ymm11                      #! PC = 0x555555559b58 *)
sub ymm11_0 ymm9_0 ymm11_0;
sub ymm11_1 ymm9_1 ymm11_1;
sub ymm11_2 ymm9_2 ymm11_2;
sub ymm11_3 ymm9_3 ymm11_3;
sub ymm11_4 ymm9_4 ymm11_4;
sub ymm11_5 ymm9_5 ymm11_5;
sub ymm11_6 ymm9_6 ymm11_6;
sub ymm11_7 ymm9_7 ymm11_7;
sub ymm11_8 ymm9_8 ymm11_8;
sub ymm11_9 ymm9_9 ymm11_9;
sub ymm11_a ymm9_a ymm11_a;
sub ymm11_b ymm9_b ymm11_b;
sub ymm11_c ymm9_c ymm11_c;
sub ymm11_d ymm9_d ymm11_d;
sub ymm11_e ymm9_e ymm11_e;
sub ymm11_f ymm9_f ymm11_f;
(* vpbroadcastw 0x138(%rdx),%ymm1                  #! EA = L0x555555561258; Value = 0x2da347bbf1c9c601; PC = 0x555555559b5d *)
mov ymm1_0 L0x555555561258;
mov ymm1_1 L0x555555561258;
mov ymm1_2 L0x555555561258;
mov ymm1_3 L0x555555561258;
mov ymm1_4 L0x555555561258;
mov ymm1_5 L0x555555561258;
mov ymm1_6 L0x555555561258;
mov ymm1_7 L0x555555561258;
mov ymm1_8 L0x555555561258;
mov ymm1_9 L0x555555561258;
mov ymm1_a L0x555555561258;
mov ymm1_b L0x555555561258;
mov ymm1_c L0x555555561258;
mov ymm1_d L0x555555561258;
mov ymm1_e L0x555555561258;
mov ymm1_f L0x555555561258;
(* vpbroadcastw 0x338(%rdx),%ymm2                  #! EA = L0x555555561458; Value = 0xeba3f5bbebc9f001; PC = 0x555555559b66 *)
mov ymm2_0 L0x555555561458;
mov ymm2_1 L0x555555561458;
mov ymm2_2 L0x555555561458;
mov ymm2_3 L0x555555561458;
mov ymm2_4 L0x555555561458;
mov ymm2_5 L0x555555561458;
mov ymm2_6 L0x555555561458;
mov ymm2_7 L0x555555561458;
mov ymm2_8 L0x555555561458;
mov ymm2_9 L0x555555561458;
mov ymm2_a L0x555555561458;
mov ymm2_b L0x555555561458;
mov ymm2_c L0x555555561458;
mov ymm2_d L0x555555561458;
mov ymm2_e L0x555555561458;
mov ymm2_f L0x555555561458;
(* vpmullw %ymm1,%ymm3,%ymm9                       #! PC = 0x555555559b6f *)
smull mulHymm3_0 mulL_0 ymm1_0 ymm3_0;
smull mulHymm3_1 mulL_1 ymm1_1 ymm3_1;
smull mulHymm3_2 mulL_2 ymm1_2 ymm3_2;
smull mulHymm3_3 mulL_3 ymm1_3 ymm3_3;
smull mulHymm3_4 mulL_4 ymm1_4 ymm3_4;
smull mulHymm3_5 mulL_5 ymm1_5 ymm3_5;
smull mulHymm3_6 mulL_6 ymm1_6 ymm3_6;
smull mulHymm3_7 mulL_7 ymm1_7 ymm3_7;
smull mulHymm3_8 mulL_8 ymm1_8 ymm3_8;
smull mulHymm3_9 mulL_9 ymm1_9 ymm3_9;
smull mulHymm3_a mulL_a ymm1_a ymm3_a;
smull mulHymm3_b mulL_b ymm1_b ymm3_b;
smull mulHymm3_c mulL_c ymm1_c ymm3_c;
smull mulHymm3_d mulL_d ymm1_d ymm3_d;
smull mulHymm3_e mulL_e ymm1_e ymm3_e;
smull mulHymm3_f mulL_f ymm1_f ymm3_f;
cast ymm9_0@sint16 mulL_0;
cast ymm9_1@sint16 mulL_1;
cast ymm9_2@sint16 mulL_2;
cast ymm9_3@sint16 mulL_3;
cast ymm9_4@sint16 mulL_4;
cast ymm9_5@sint16 mulL_5;
cast ymm9_6@sint16 mulL_6;
cast ymm9_7@sint16 mulL_7;
cast ymm9_8@sint16 mulL_8;
cast ymm9_9@sint16 mulL_9;
cast ymm9_a@sint16 mulL_a;
cast ymm9_b@sint16 mulL_b;
cast ymm9_c@sint16 mulL_c;
cast ymm9_d@sint16 mulL_d;
cast ymm9_e@sint16 mulL_e;
cast ymm9_f@sint16 mulL_f;
(* vpmulhw %ymm2,%ymm3,%ymm3                       #! PC = 0x555555559b73 *)
smull mulH_0 mulLymm3_0 ymm3_0 ymm2_0;
smull mulH_1 mulLymm3_1 ymm3_1 ymm2_1;
smull mulH_2 mulLymm3_2 ymm3_2 ymm2_2;
smull mulH_3 mulLymm3_3 ymm3_3 ymm2_3;
smull mulH_4 mulLymm3_4 ymm3_4 ymm2_4;
smull mulH_5 mulLymm3_5 ymm3_5 ymm2_5;
smull mulH_6 mulLymm3_6 ymm3_6 ymm2_6;
smull mulH_7 mulLymm3_7 ymm3_7 ymm2_7;
smull mulH_8 mulLymm3_8 ymm3_8 ymm2_8;
smull mulH_9 mulLymm3_9 ymm3_9 ymm2_9;
smull mulH_a mulLymm3_a ymm3_a ymm2_a;
smull mulH_b mulLymm3_b ymm3_b ymm2_b;
smull mulH_c mulLymm3_c ymm3_c ymm2_c;
smull mulH_d mulLymm3_d ymm3_d ymm2_d;
smull mulH_e mulLymm3_e ymm3_e ymm2_e;
smull mulH_f mulLymm3_f ymm3_f ymm2_f;
mov ymm3_0 mulH_0;
mov ymm3_1 mulH_1;
mov ymm3_2 mulH_2;
mov ymm3_3 mulH_3;
mov ymm3_4 mulH_4;
mov ymm3_5 mulH_5;
mov ymm3_6 mulH_6;
mov ymm3_7 mulH_7;
mov ymm3_8 mulH_8;
mov ymm3_9 mulH_9;
mov ymm3_a mulH_a;
mov ymm3_b mulH_b;
mov ymm3_c mulH_c;
mov ymm3_d mulH_d;
mov ymm3_e mulH_e;
mov ymm3_f mulH_f;
(* vpmulhw %ymm0,%ymm9,%ymm9                       #! PC = 0x555555559b77 *)
smull mulH_0 red_0 ymm9_0 ymm0_0;
assert true && red_0 = mulLymm3_0;
assume red_0 = mulLymm3_0 && true;
smull mulH_1 red_1 ymm9_1 ymm0_1;
assert true && red_1 = mulLymm3_1;
assume red_1 = mulLymm3_1 && true;
smull mulH_2 red_2 ymm9_2 ymm0_2;
assert true && red_2 = mulLymm3_2;
assume red_2 = mulLymm3_2 && true;
smull mulH_3 red_3 ymm9_3 ymm0_3;
assert true && red_3 = mulLymm3_3;
assume red_3 = mulLymm3_3 && true;
smull mulH_4 red_4 ymm9_4 ymm0_4;
assert true && red_4 = mulLymm3_4;
assume red_4 = mulLymm3_4 && true;
smull mulH_5 red_5 ymm9_5 ymm0_5;
assert true && red_5 = mulLymm3_5;
assume red_5 = mulLymm3_5 && true;
smull mulH_6 red_6 ymm9_6 ymm0_6;
assert true && red_6 = mulLymm3_6;
assume red_6 = mulLymm3_6 && true;
smull mulH_7 red_7 ymm9_7 ymm0_7;
assert true && red_7 = mulLymm3_7;
assume red_7 = mulLymm3_7 && true;
smull mulH_8 red_8 ymm9_8 ymm0_8;
assert true && red_8 = mulLymm3_8;
assume red_8 = mulLymm3_8 && true;
smull mulH_9 red_9 ymm9_9 ymm0_9;
assert true && red_9 = mulLymm3_9;
assume red_9 = mulLymm3_9 && true;
smull mulH_a red_a ymm9_a ymm0_a;
assert true && red_a = mulLymm3_a;
assume red_a = mulLymm3_a && true;
smull mulH_b red_b ymm9_b ymm0_b;
assert true && red_b = mulLymm3_b;
assume red_b = mulLymm3_b && true;
smull mulH_c red_c ymm9_c ymm0_c;
assert true && red_c = mulLymm3_c;
assume red_c = mulLymm3_c && true;
smull mulH_d red_d ymm9_d ymm0_d;
assert true && red_d = mulLymm3_d;
assume red_d = mulLymm3_d && true;
smull mulH_e red_e ymm9_e ymm0_e;
assert true && red_e = mulLymm3_e;
assume red_e = mulLymm3_e && true;
smull mulH_f red_f ymm9_f ymm0_f;
assert true && red_f = mulLymm3_f;
assume red_f = mulLymm3_f && true;
mov ymm9_0 mulH_0;
mov ymm9_1 mulH_1;
mov ymm9_2 mulH_2;
mov ymm9_3 mulH_3;
mov ymm9_4 mulH_4;
mov ymm9_5 mulH_5;
mov ymm9_6 mulH_6;
mov ymm9_7 mulH_7;
mov ymm9_8 mulH_8;
mov ymm9_9 mulH_9;
mov ymm9_a mulH_a;
mov ymm9_b mulH_b;
mov ymm9_c mulH_c;
mov ymm9_d mulH_d;
mov ymm9_e mulH_e;
mov ymm9_f mulH_f;
(* vpsubw %ymm9,%ymm3,%ymm3                        #! PC = 0x555555559b7b *)
sub ymm3_0 ymm3_0 ymm9_0;
sub ymm3_1 ymm3_1 ymm9_1;
sub ymm3_2 ymm3_2 ymm9_2;
sub ymm3_3 ymm3_3 ymm9_3;
sub ymm3_4 ymm3_4 ymm9_4;
sub ymm3_5 ymm3_5 ymm9_5;
sub ymm3_6 ymm3_6 ymm9_6;
sub ymm3_7 ymm3_7 ymm9_7;
sub ymm3_8 ymm3_8 ymm9_8;
sub ymm3_9 ymm3_9 ymm9_9;
sub ymm3_a ymm3_a ymm9_a;
sub ymm3_b ymm3_b ymm9_b;
sub ymm3_c ymm3_c ymm9_c;
sub ymm3_d ymm3_d ymm9_d;
sub ymm3_e ymm3_e ymm9_e;
sub ymm3_f ymm3_f ymm9_f;
(* vpbroadcastw 0x13a(%rdx),%ymm1                  #! EA = L0x55555556125a; Value = 0x11ed2da347bbf1c9; PC = 0x555555559b80 *)
mov ymm1_0 L0x55555556125a;
mov ymm1_1 L0x55555556125a;
mov ymm1_2 L0x55555556125a;
mov ymm1_3 L0x55555556125a;
mov ymm1_4 L0x55555556125a;
mov ymm1_5 L0x55555556125a;
mov ymm1_6 L0x55555556125a;
mov ymm1_7 L0x55555556125a;
mov ymm1_8 L0x55555556125a;
mov ymm1_9 L0x55555556125a;
mov ymm1_a L0x55555556125a;
mov ymm1_b L0x55555556125a;
mov ymm1_c L0x55555556125a;
mov ymm1_d L0x55555556125a;
mov ymm1_e L0x55555556125a;
mov ymm1_f L0x55555556125a;
(* vpbroadcastw 0x33a(%rdx),%ymm2                  #! EA = L0x55555556145a; Value = 0xf3edeba3f5bbebc9; PC = 0x555555559b89 *)
mov ymm2_0 L0x55555556145a;
mov ymm2_1 L0x55555556145a;
mov ymm2_2 L0x55555556145a;
mov ymm2_3 L0x55555556145a;
mov ymm2_4 L0x55555556145a;
mov ymm2_5 L0x55555556145a;
mov ymm2_6 L0x55555556145a;
mov ymm2_7 L0x55555556145a;
mov ymm2_8 L0x55555556145a;
mov ymm2_9 L0x55555556145a;
mov ymm2_a L0x55555556145a;
mov ymm2_b L0x55555556145a;
mov ymm2_c L0x55555556145a;
mov ymm2_d L0x55555556145a;
mov ymm2_e L0x55555556145a;
mov ymm2_f L0x55555556145a;
(* vpmullw %ymm1,%ymm6,%ymm9                       #! PC = 0x555555559b92 *)
smull mulHymm6_0 mulL_0 ymm1_0 ymm6_0;
smull mulHymm6_1 mulL_1 ymm1_1 ymm6_1;
smull mulHymm6_2 mulL_2 ymm1_2 ymm6_2;
smull mulHymm6_3 mulL_3 ymm1_3 ymm6_3;
smull mulHymm6_4 mulL_4 ymm1_4 ymm6_4;
smull mulHymm6_5 mulL_5 ymm1_5 ymm6_5;
smull mulHymm6_6 mulL_6 ymm1_6 ymm6_6;
smull mulHymm6_7 mulL_7 ymm1_7 ymm6_7;
smull mulHymm6_8 mulL_8 ymm1_8 ymm6_8;
smull mulHymm6_9 mulL_9 ymm1_9 ymm6_9;
smull mulHymm6_a mulL_a ymm1_a ymm6_a;
smull mulHymm6_b mulL_b ymm1_b ymm6_b;
smull mulHymm6_c mulL_c ymm1_c ymm6_c;
smull mulHymm6_d mulL_d ymm1_d ymm6_d;
smull mulHymm6_e mulL_e ymm1_e ymm6_e;
smull mulHymm6_f mulL_f ymm1_f ymm6_f;
cast ymm9_0@sint16 mulL_0;
cast ymm9_1@sint16 mulL_1;
cast ymm9_2@sint16 mulL_2;
cast ymm9_3@sint16 mulL_3;
cast ymm9_4@sint16 mulL_4;
cast ymm9_5@sint16 mulL_5;
cast ymm9_6@sint16 mulL_6;
cast ymm9_7@sint16 mulL_7;
cast ymm9_8@sint16 mulL_8;
cast ymm9_9@sint16 mulL_9;
cast ymm9_a@sint16 mulL_a;
cast ymm9_b@sint16 mulL_b;
cast ymm9_c@sint16 mulL_c;
cast ymm9_d@sint16 mulL_d;
cast ymm9_e@sint16 mulL_e;
cast ymm9_f@sint16 mulL_f;
(* vpmulhw %ymm2,%ymm6,%ymm6                       #! PC = 0x555555559b96 *)
smull mulH_0 mulLymm6_0 ymm6_0 ymm2_0;
smull mulH_1 mulLymm6_1 ymm6_1 ymm2_1;
smull mulH_2 mulLymm6_2 ymm6_2 ymm2_2;
smull mulH_3 mulLymm6_3 ymm6_3 ymm2_3;
smull mulH_4 mulLymm6_4 ymm6_4 ymm2_4;
smull mulH_5 mulLymm6_5 ymm6_5 ymm2_5;
smull mulH_6 mulLymm6_6 ymm6_6 ymm2_6;
smull mulH_7 mulLymm6_7 ymm6_7 ymm2_7;
smull mulH_8 mulLymm6_8 ymm6_8 ymm2_8;
smull mulH_9 mulLymm6_9 ymm6_9 ymm2_9;
smull mulH_a mulLymm6_a ymm6_a ymm2_a;
smull mulH_b mulLymm6_b ymm6_b ymm2_b;
smull mulH_c mulLymm6_c ymm6_c ymm2_c;
smull mulH_d mulLymm6_d ymm6_d ymm2_d;
smull mulH_e mulLymm6_e ymm6_e ymm2_e;
smull mulH_f mulLymm6_f ymm6_f ymm2_f;
mov ymm6_0 mulH_0;
mov ymm6_1 mulH_1;
mov ymm6_2 mulH_2;
mov ymm6_3 mulH_3;
mov ymm6_4 mulH_4;
mov ymm6_5 mulH_5;
mov ymm6_6 mulH_6;
mov ymm6_7 mulH_7;
mov ymm6_8 mulH_8;
mov ymm6_9 mulH_9;
mov ymm6_a mulH_a;
mov ymm6_b mulH_b;
mov ymm6_c mulH_c;
mov ymm6_d mulH_d;
mov ymm6_e mulH_e;
mov ymm6_f mulH_f;
(* vpmulhw %ymm0,%ymm9,%ymm9                       #! PC = 0x555555559b9a *)
smull mulH_0 red_0 ymm9_0 ymm0_0;
assert true && red_0 = mulLymm6_0;
assume red_0 = mulLymm6_0 && true;
smull mulH_1 red_1 ymm9_1 ymm0_1;
assert true && red_1 = mulLymm6_1;
assume red_1 = mulLymm6_1 && true;
smull mulH_2 red_2 ymm9_2 ymm0_2;
assert true && red_2 = mulLymm6_2;
assume red_2 = mulLymm6_2 && true;
smull mulH_3 red_3 ymm9_3 ymm0_3;
assert true && red_3 = mulLymm6_3;
assume red_3 = mulLymm6_3 && true;
smull mulH_4 red_4 ymm9_4 ymm0_4;
assert true && red_4 = mulLymm6_4;
assume red_4 = mulLymm6_4 && true;
smull mulH_5 red_5 ymm9_5 ymm0_5;
assert true && red_5 = mulLymm6_5;
assume red_5 = mulLymm6_5 && true;
smull mulH_6 red_6 ymm9_6 ymm0_6;
assert true && red_6 = mulLymm6_6;
assume red_6 = mulLymm6_6 && true;
smull mulH_7 red_7 ymm9_7 ymm0_7;
assert true && red_7 = mulLymm6_7;
assume red_7 = mulLymm6_7 && true;
smull mulH_8 red_8 ymm9_8 ymm0_8;
assert true && red_8 = mulLymm6_8;
assume red_8 = mulLymm6_8 && true;
smull mulH_9 red_9 ymm9_9 ymm0_9;
assert true && red_9 = mulLymm6_9;
assume red_9 = mulLymm6_9 && true;
smull mulH_a red_a ymm9_a ymm0_a;
assert true && red_a = mulLymm6_a;
assume red_a = mulLymm6_a && true;
smull mulH_b red_b ymm9_b ymm0_b;
assert true && red_b = mulLymm6_b;
assume red_b = mulLymm6_b && true;
smull mulH_c red_c ymm9_c ymm0_c;
assert true && red_c = mulLymm6_c;
assume red_c = mulLymm6_c && true;
smull mulH_d red_d ymm9_d ymm0_d;
assert true && red_d = mulLymm6_d;
assume red_d = mulLymm6_d && true;
smull mulH_e red_e ymm9_e ymm0_e;
assert true && red_e = mulLymm6_e;
assume red_e = mulLymm6_e && true;
smull mulH_f red_f ymm9_f ymm0_f;
assert true && red_f = mulLymm6_f;
assume red_f = mulLymm6_f && true;
mov ymm9_0 mulH_0;
mov ymm9_1 mulH_1;
mov ymm9_2 mulH_2;
mov ymm9_3 mulH_3;
mov ymm9_4 mulH_4;
mov ymm9_5 mulH_5;
mov ymm9_6 mulH_6;
mov ymm9_7 mulH_7;
mov ymm9_8 mulH_8;
mov ymm9_9 mulH_9;
mov ymm9_a mulH_a;
mov ymm9_b mulH_b;
mov ymm9_c mulH_c;
mov ymm9_d mulH_d;
mov ymm9_e mulH_e;
mov ymm9_f mulH_f;
(* vpsubw %ymm9,%ymm6,%ymm6                        #! PC = 0x555555559b9e *)
sub ymm6_0 ymm6_0 ymm9_0;
sub ymm6_1 ymm6_1 ymm9_1;
sub ymm6_2 ymm6_2 ymm9_2;
sub ymm6_3 ymm6_3 ymm9_3;
sub ymm6_4 ymm6_4 ymm9_4;
sub ymm6_5 ymm6_5 ymm9_5;
sub ymm6_6 ymm6_6 ymm9_6;
sub ymm6_7 ymm6_7 ymm9_7;
sub ymm6_8 ymm6_8 ymm9_8;
sub ymm6_9 ymm6_9 ymm9_9;
sub ymm6_a ymm6_a ymm9_a;
sub ymm6_b ymm6_b ymm9_b;
sub ymm6_c ymm6_c ymm9_c;
sub ymm6_d ymm6_d ymm9_d;
sub ymm6_e ymm6_e ymm9_e;
sub ymm6_f ymm6_f ymm9_f;
(* vpbroadcastw 0x13c(%rdx),%ymm1                  #! EA = L0x55555556125c; Value = 0xa62111ed2da347bb; PC = 0x555555559ba3 *)
mov ymm1_0 L0x55555556125c;
mov ymm1_1 L0x55555556125c;
mov ymm1_2 L0x55555556125c;
mov ymm1_3 L0x55555556125c;
mov ymm1_4 L0x55555556125c;
mov ymm1_5 L0x55555556125c;
mov ymm1_6 L0x55555556125c;
mov ymm1_7 L0x55555556125c;
mov ymm1_8 L0x55555556125c;
mov ymm1_9 L0x55555556125c;
mov ymm1_a L0x55555556125c;
mov ymm1_b L0x55555556125c;
mov ymm1_c L0x55555556125c;
mov ymm1_d L0x55555556125c;
mov ymm1_e L0x55555556125c;
mov ymm1_f L0x55555556125c;
(* vpbroadcastw 0x33c(%rdx),%ymm2                  #! EA = L0x55555556145c; Value = 0x1021f3edeba3f5bb; PC = 0x555555559bac *)
mov ymm2_0 L0x55555556145c;
mov ymm2_1 L0x55555556145c;
mov ymm2_2 L0x55555556145c;
mov ymm2_3 L0x55555556145c;
mov ymm2_4 L0x55555556145c;
mov ymm2_5 L0x55555556145c;
mov ymm2_6 L0x55555556145c;
mov ymm2_7 L0x55555556145c;
mov ymm2_8 L0x55555556145c;
mov ymm2_9 L0x55555556145c;
mov ymm2_a L0x55555556145c;
mov ymm2_b L0x55555556145c;
mov ymm2_c L0x55555556145c;
mov ymm2_d L0x55555556145c;
mov ymm2_e L0x55555556145c;
mov ymm2_f L0x55555556145c;
(* vpmullw %ymm1,%ymm8,%ymm9                       #! PC = 0x555555559bb5 *)
smull mulHymm8_0 mulL_0 ymm1_0 ymm8_0;
smull mulHymm8_1 mulL_1 ymm1_1 ymm8_1;
smull mulHymm8_2 mulL_2 ymm1_2 ymm8_2;
smull mulHymm8_3 mulL_3 ymm1_3 ymm8_3;
smull mulHymm8_4 mulL_4 ymm1_4 ymm8_4;
smull mulHymm8_5 mulL_5 ymm1_5 ymm8_5;
smull mulHymm8_6 mulL_6 ymm1_6 ymm8_6;
smull mulHymm8_7 mulL_7 ymm1_7 ymm8_7;
smull mulHymm8_8 mulL_8 ymm1_8 ymm8_8;
smull mulHymm8_9 mulL_9 ymm1_9 ymm8_9;
smull mulHymm8_a mulL_a ymm1_a ymm8_a;
smull mulHymm8_b mulL_b ymm1_b ymm8_b;
smull mulHymm8_c mulL_c ymm1_c ymm8_c;
smull mulHymm8_d mulL_d ymm1_d ymm8_d;
smull mulHymm8_e mulL_e ymm1_e ymm8_e;
smull mulHymm8_f mulL_f ymm1_f ymm8_f;
cast ymm9_0@sint16 mulL_0;
cast ymm9_1@sint16 mulL_1;
cast ymm9_2@sint16 mulL_2;
cast ymm9_3@sint16 mulL_3;
cast ymm9_4@sint16 mulL_4;
cast ymm9_5@sint16 mulL_5;
cast ymm9_6@sint16 mulL_6;
cast ymm9_7@sint16 mulL_7;
cast ymm9_8@sint16 mulL_8;
cast ymm9_9@sint16 mulL_9;
cast ymm9_a@sint16 mulL_a;
cast ymm9_b@sint16 mulL_b;
cast ymm9_c@sint16 mulL_c;
cast ymm9_d@sint16 mulL_d;
cast ymm9_e@sint16 mulL_e;
cast ymm9_f@sint16 mulL_f;
(* vpmulhw %ymm2,%ymm8,%ymm8                       #! PC = 0x555555559bb9 *)
smull mulH_0 mulLymm8_0 ymm8_0 ymm2_0;
smull mulH_1 mulLymm8_1 ymm8_1 ymm2_1;
smull mulH_2 mulLymm8_2 ymm8_2 ymm2_2;
smull mulH_3 mulLymm8_3 ymm8_3 ymm2_3;
smull mulH_4 mulLymm8_4 ymm8_4 ymm2_4;
smull mulH_5 mulLymm8_5 ymm8_5 ymm2_5;
smull mulH_6 mulLymm8_6 ymm8_6 ymm2_6;
smull mulH_7 mulLymm8_7 ymm8_7 ymm2_7;
smull mulH_8 mulLymm8_8 ymm8_8 ymm2_8;
smull mulH_9 mulLymm8_9 ymm8_9 ymm2_9;
smull mulH_a mulLymm8_a ymm8_a ymm2_a;
smull mulH_b mulLymm8_b ymm8_b ymm2_b;
smull mulH_c mulLymm8_c ymm8_c ymm2_c;
smull mulH_d mulLymm8_d ymm8_d ymm2_d;
smull mulH_e mulLymm8_e ymm8_e ymm2_e;
smull mulH_f mulLymm8_f ymm8_f ymm2_f;
mov ymm8_0 mulH_0;
mov ymm8_1 mulH_1;
mov ymm8_2 mulH_2;
mov ymm8_3 mulH_3;
mov ymm8_4 mulH_4;
mov ymm8_5 mulH_5;
mov ymm8_6 mulH_6;
mov ymm8_7 mulH_7;
mov ymm8_8 mulH_8;
mov ymm8_9 mulH_9;
mov ymm8_a mulH_a;
mov ymm8_b mulH_b;
mov ymm8_c mulH_c;
mov ymm8_d mulH_d;
mov ymm8_e mulH_e;
mov ymm8_f mulH_f;
(* vpmulhw %ymm0,%ymm9,%ymm9                       #! PC = 0x555555559bbd *)
smull mulH_0 red_0 ymm9_0 ymm0_0;
assert true && red_0 = mulLymm8_0;
assume red_0 = mulLymm8_0 && true;
smull mulH_1 red_1 ymm9_1 ymm0_1;
assert true && red_1 = mulLymm8_1;
assume red_1 = mulLymm8_1 && true;
smull mulH_2 red_2 ymm9_2 ymm0_2;
assert true && red_2 = mulLymm8_2;
assume red_2 = mulLymm8_2 && true;
smull mulH_3 red_3 ymm9_3 ymm0_3;
assert true && red_3 = mulLymm8_3;
assume red_3 = mulLymm8_3 && true;
smull mulH_4 red_4 ymm9_4 ymm0_4;
assert true && red_4 = mulLymm8_4;
assume red_4 = mulLymm8_4 && true;
smull mulH_5 red_5 ymm9_5 ymm0_5;
assert true && red_5 = mulLymm8_5;
assume red_5 = mulLymm8_5 && true;
smull mulH_6 red_6 ymm9_6 ymm0_6;
assert true && red_6 = mulLymm8_6;
assume red_6 = mulLymm8_6 && true;
smull mulH_7 red_7 ymm9_7 ymm0_7;
assert true && red_7 = mulLymm8_7;
assume red_7 = mulLymm8_7 && true;
smull mulH_8 red_8 ymm9_8 ymm0_8;
assert true && red_8 = mulLymm8_8;
assume red_8 = mulLymm8_8 && true;
smull mulH_9 red_9 ymm9_9 ymm0_9;
assert true && red_9 = mulLymm8_9;
assume red_9 = mulLymm8_9 && true;
smull mulH_a red_a ymm9_a ymm0_a;
assert true && red_a = mulLymm8_a;
assume red_a = mulLymm8_a && true;
smull mulH_b red_b ymm9_b ymm0_b;
assert true && red_b = mulLymm8_b;
assume red_b = mulLymm8_b && true;
smull mulH_c red_c ymm9_c ymm0_c;
assert true && red_c = mulLymm8_c;
assume red_c = mulLymm8_c && true;
smull mulH_d red_d ymm9_d ymm0_d;
assert true && red_d = mulLymm8_d;
assume red_d = mulLymm8_d && true;
smull mulH_e red_e ymm9_e ymm0_e;
assert true && red_e = mulLymm8_e;
assume red_e = mulLymm8_e && true;
smull mulH_f red_f ymm9_f ymm0_f;
assert true && red_f = mulLymm8_f;
assume red_f = mulLymm8_f && true;
mov ymm9_0 mulH_0;
mov ymm9_1 mulH_1;
mov ymm9_2 mulH_2;
mov ymm9_3 mulH_3;
mov ymm9_4 mulH_4;
mov ymm9_5 mulH_5;
mov ymm9_6 mulH_6;
mov ymm9_7 mulH_7;
mov ymm9_8 mulH_8;
mov ymm9_9 mulH_9;
mov ymm9_a mulH_a;
mov ymm9_b mulH_b;
mov ymm9_c mulH_c;
mov ymm9_d mulH_d;
mov ymm9_e mulH_e;
mov ymm9_f mulH_f;
(* vpsubw %ymm9,%ymm8,%ymm8                        #! PC = 0x555555559bc1 *)
sub ymm8_0 ymm8_0 ymm9_0;
sub ymm8_1 ymm8_1 ymm9_1;
sub ymm8_2 ymm8_2 ymm9_2;
sub ymm8_3 ymm8_3 ymm9_3;
sub ymm8_4 ymm8_4 ymm9_4;
sub ymm8_5 ymm8_5 ymm9_5;
sub ymm8_6 ymm8_6 ymm9_6;
sub ymm8_7 ymm8_7 ymm9_7;
sub ymm8_8 ymm8_8 ymm9_8;
sub ymm8_9 ymm8_9 ymm9_9;
sub ymm8_a ymm8_a ymm9_a;
sub ymm8_b ymm8_b ymm9_b;
sub ymm8_c ymm8_c ymm9_c;
sub ymm8_d ymm8_d ymm9_d;
sub ymm8_e ymm8_e ymm9_e;
sub ymm8_f ymm8_f ymm9_f;
(* vpbroadcastw 0x13e(%rdx),%ymm1                  #! EA = L0x55555556125e; Value = 0x7a89a62111ed2da3; PC = 0x555555559bc6 *)
mov ymm1_0 L0x55555556125e;
mov ymm1_1 L0x55555556125e;
mov ymm1_2 L0x55555556125e;
mov ymm1_3 L0x55555556125e;
mov ymm1_4 L0x55555556125e;
mov ymm1_5 L0x55555556125e;
mov ymm1_6 L0x55555556125e;
mov ymm1_7 L0x55555556125e;
mov ymm1_8 L0x55555556125e;
mov ymm1_9 L0x55555556125e;
mov ymm1_a L0x55555556125e;
mov ymm1_b L0x55555556125e;
mov ymm1_c L0x55555556125e;
mov ymm1_d L0x55555556125e;
mov ymm1_e L0x55555556125e;
mov ymm1_f L0x55555556125e;
(* vpbroadcastw 0x33e(%rdx),%ymm2                  #! EA = L0x55555556145e; Value = 0xf4891021f3edeba3; PC = 0x555555559bcf *)
mov ymm2_0 L0x55555556145e;
mov ymm2_1 L0x55555556145e;
mov ymm2_2 L0x55555556145e;
mov ymm2_3 L0x55555556145e;
mov ymm2_4 L0x55555556145e;
mov ymm2_5 L0x55555556145e;
mov ymm2_6 L0x55555556145e;
mov ymm2_7 L0x55555556145e;
mov ymm2_8 L0x55555556145e;
mov ymm2_9 L0x55555556145e;
mov ymm2_a L0x55555556145e;
mov ymm2_b L0x55555556145e;
mov ymm2_c L0x55555556145e;
mov ymm2_d L0x55555556145e;
mov ymm2_e L0x55555556145e;
mov ymm2_f L0x55555556145e;
(* vpmullw %ymm1,%ymm11,%ymm9                      #! PC = 0x555555559bd8 *)
smull mulHymm11_0 mulL_0 ymm1_0 ymm11_0;
smull mulHymm11_1 mulL_1 ymm1_1 ymm11_1;
smull mulHymm11_2 mulL_2 ymm1_2 ymm11_2;
smull mulHymm11_3 mulL_3 ymm1_3 ymm11_3;
smull mulHymm11_4 mulL_4 ymm1_4 ymm11_4;
smull mulHymm11_5 mulL_5 ymm1_5 ymm11_5;
smull mulHymm11_6 mulL_6 ymm1_6 ymm11_6;
smull mulHymm11_7 mulL_7 ymm1_7 ymm11_7;
smull mulHymm11_8 mulL_8 ymm1_8 ymm11_8;
smull mulHymm11_9 mulL_9 ymm1_9 ymm11_9;
smull mulHymm11_a mulL_a ymm1_a ymm11_a;
smull mulHymm11_b mulL_b ymm1_b ymm11_b;
smull mulHymm11_c mulL_c ymm1_c ymm11_c;
smull mulHymm11_d mulL_d ymm1_d ymm11_d;
smull mulHymm11_e mulL_e ymm1_e ymm11_e;
smull mulHymm11_f mulL_f ymm1_f ymm11_f;
cast ymm9_0@sint16 mulL_0;
cast ymm9_1@sint16 mulL_1;
cast ymm9_2@sint16 mulL_2;
cast ymm9_3@sint16 mulL_3;
cast ymm9_4@sint16 mulL_4;
cast ymm9_5@sint16 mulL_5;
cast ymm9_6@sint16 mulL_6;
cast ymm9_7@sint16 mulL_7;
cast ymm9_8@sint16 mulL_8;
cast ymm9_9@sint16 mulL_9;
cast ymm9_a@sint16 mulL_a;
cast ymm9_b@sint16 mulL_b;
cast ymm9_c@sint16 mulL_c;
cast ymm9_d@sint16 mulL_d;
cast ymm9_e@sint16 mulL_e;
cast ymm9_f@sint16 mulL_f;
(* vpmulhw %ymm2,%ymm11,%ymm11                     #! PC = 0x555555559bdc *)
smull mulH_0 mulLymm11_0 ymm11_0 ymm2_0;
smull mulH_1 mulLymm11_1 ymm11_1 ymm2_1;
smull mulH_2 mulLymm11_2 ymm11_2 ymm2_2;
smull mulH_3 mulLymm11_3 ymm11_3 ymm2_3;
smull mulH_4 mulLymm11_4 ymm11_4 ymm2_4;
smull mulH_5 mulLymm11_5 ymm11_5 ymm2_5;
smull mulH_6 mulLymm11_6 ymm11_6 ymm2_6;
smull mulH_7 mulLymm11_7 ymm11_7 ymm2_7;
smull mulH_8 mulLymm11_8 ymm11_8 ymm2_8;
smull mulH_9 mulLymm11_9 ymm11_9 ymm2_9;
smull mulH_a mulLymm11_a ymm11_a ymm2_a;
smull mulH_b mulLymm11_b ymm11_b ymm2_b;
smull mulH_c mulLymm11_c ymm11_c ymm2_c;
smull mulH_d mulLymm11_d ymm11_d ymm2_d;
smull mulH_e mulLymm11_e ymm11_e ymm2_e;
smull mulH_f mulLymm11_f ymm11_f ymm2_f;
mov ymm11_0 mulH_0;
mov ymm11_1 mulH_1;
mov ymm11_2 mulH_2;
mov ymm11_3 mulH_3;
mov ymm11_4 mulH_4;
mov ymm11_5 mulH_5;
mov ymm11_6 mulH_6;
mov ymm11_7 mulH_7;
mov ymm11_8 mulH_8;
mov ymm11_9 mulH_9;
mov ymm11_a mulH_a;
mov ymm11_b mulH_b;
mov ymm11_c mulH_c;
mov ymm11_d mulH_d;
mov ymm11_e mulH_e;
mov ymm11_f mulH_f;
(* vpmulhw %ymm0,%ymm9,%ymm9                       #! PC = 0x555555559be0 *)
smull mulH_0 red_0 ymm9_0 ymm0_0;
assert true && red_0 = mulLymm11_0;
assume red_0 = mulLymm11_0 && true;
smull mulH_1 red_1 ymm9_1 ymm0_1;
assert true && red_1 = mulLymm11_1;
assume red_1 = mulLymm11_1 && true;
smull mulH_2 red_2 ymm9_2 ymm0_2;
assert true && red_2 = mulLymm11_2;
assume red_2 = mulLymm11_2 && true;
smull mulH_3 red_3 ymm9_3 ymm0_3;
assert true && red_3 = mulLymm11_3;
assume red_3 = mulLymm11_3 && true;
smull mulH_4 red_4 ymm9_4 ymm0_4;
assert true && red_4 = mulLymm11_4;
assume red_4 = mulLymm11_4 && true;
smull mulH_5 red_5 ymm9_5 ymm0_5;
assert true && red_5 = mulLymm11_5;
assume red_5 = mulLymm11_5 && true;
smull mulH_6 red_6 ymm9_6 ymm0_6;
assert true && red_6 = mulLymm11_6;
assume red_6 = mulLymm11_6 && true;
smull mulH_7 red_7 ymm9_7 ymm0_7;
assert true && red_7 = mulLymm11_7;
assume red_7 = mulLymm11_7 && true;
smull mulH_8 red_8 ymm9_8 ymm0_8;
assert true && red_8 = mulLymm11_8;
assume red_8 = mulLymm11_8 && true;
smull mulH_9 red_9 ymm9_9 ymm0_9;
assert true && red_9 = mulLymm11_9;
assume red_9 = mulLymm11_9 && true;
smull mulH_a red_a ymm9_a ymm0_a;
assert true && red_a = mulLymm11_a;
assume red_a = mulLymm11_a && true;
smull mulH_b red_b ymm9_b ymm0_b;
assert true && red_b = mulLymm11_b;
assume red_b = mulLymm11_b && true;
smull mulH_c red_c ymm9_c ymm0_c;
assert true && red_c = mulLymm11_c;
assume red_c = mulLymm11_c && true;
smull mulH_d red_d ymm9_d ymm0_d;
assert true && red_d = mulLymm11_d;
assume red_d = mulLymm11_d && true;
smull mulH_e red_e ymm9_e ymm0_e;
assert true && red_e = mulLymm11_e;
assume red_e = mulLymm11_e && true;
smull mulH_f red_f ymm9_f ymm0_f;
assert true && red_f = mulLymm11_f;
assume red_f = mulLymm11_f && true;
mov ymm9_0 mulH_0;
mov ymm9_1 mulH_1;
mov ymm9_2 mulH_2;
mov ymm9_3 mulH_3;
mov ymm9_4 mulH_4;
mov ymm9_5 mulH_5;
mov ymm9_6 mulH_6;
mov ymm9_7 mulH_7;
mov ymm9_8 mulH_8;
mov ymm9_9 mulH_9;
mov ymm9_a mulH_a;
mov ymm9_b mulH_b;
mov ymm9_c mulH_c;
mov ymm9_d mulH_d;
mov ymm9_e mulH_e;
mov ymm9_f mulH_f;
(* vpsubw %ymm9,%ymm11,%ymm11                      #! PC = 0x555555559be4 *)
sub ymm11_0 ymm11_0 ymm9_0;
sub ymm11_1 ymm11_1 ymm9_1;
sub ymm11_2 ymm11_2 ymm9_2;
sub ymm11_3 ymm11_3 ymm9_3;
sub ymm11_4 ymm11_4 ymm9_4;
sub ymm11_5 ymm11_5 ymm9_5;
sub ymm11_6 ymm11_6 ymm9_6;
sub ymm11_7 ymm11_7 ymm9_7;
sub ymm11_8 ymm11_8 ymm9_8;
sub ymm11_9 ymm11_9 ymm9_9;
sub ymm11_a ymm11_a ymm9_a;
sub ymm11_b ymm11_b ymm9_b;
sub ymm11_c ymm11_c ymm9_c;
sub ymm11_d ymm11_d ymm9_d;
sub ymm11_e ymm11_e ymm9_e;
sub ymm11_f ymm11_f ymm9_f;
(* vpmullw %ymm14,%ymm7,%ymm9                      #! PC = 0x555555559be9 *)
smull mulHymm7_0 mulL_0 ymm14_0 ymm7_0;
smull mulHymm7_1 mulL_1 ymm14_1 ymm7_1;
smull mulHymm7_2 mulL_2 ymm14_2 ymm7_2;
smull mulHymm7_3 mulL_3 ymm14_3 ymm7_3;
smull mulHymm7_4 mulL_4 ymm14_4 ymm7_4;
smull mulHymm7_5 mulL_5 ymm14_5 ymm7_5;
smull mulHymm7_6 mulL_6 ymm14_6 ymm7_6;
smull mulHymm7_7 mulL_7 ymm14_7 ymm7_7;
smull mulHymm7_8 mulL_8 ymm14_8 ymm7_8;
smull mulHymm7_9 mulL_9 ymm14_9 ymm7_9;
smull mulHymm7_a mulL_a ymm14_a ymm7_a;
smull mulHymm7_b mulL_b ymm14_b ymm7_b;
smull mulHymm7_c mulL_c ymm14_c ymm7_c;
smull mulHymm7_d mulL_d ymm14_d ymm7_d;
smull mulHymm7_e mulL_e ymm14_e ymm7_e;
smull mulHymm7_f mulL_f ymm14_f ymm7_f;
cast ymm9_0@sint16 mulL_0;
cast ymm9_1@sint16 mulL_1;
cast ymm9_2@sint16 mulL_2;
cast ymm9_3@sint16 mulL_3;
cast ymm9_4@sint16 mulL_4;
cast ymm9_5@sint16 mulL_5;
cast ymm9_6@sint16 mulL_6;
cast ymm9_7@sint16 mulL_7;
cast ymm9_8@sint16 mulL_8;
cast ymm9_9@sint16 mulL_9;
cast ymm9_a@sint16 mulL_a;
cast ymm9_b@sint16 mulL_b;
cast ymm9_c@sint16 mulL_c;
cast ymm9_d@sint16 mulL_d;
cast ymm9_e@sint16 mulL_e;
cast ymm9_f@sint16 mulL_f;
(* vpmulhw %ymm15,%ymm7,%ymm7                      #! PC = 0x555555559bee *)
smull mulH_0 mulLymm7_0 ymm7_0 ymm15_0;
smull mulH_1 mulLymm7_1 ymm7_1 ymm15_1;
smull mulH_2 mulLymm7_2 ymm7_2 ymm15_2;
smull mulH_3 mulLymm7_3 ymm7_3 ymm15_3;
smull mulH_4 mulLymm7_4 ymm7_4 ymm15_4;
smull mulH_5 mulLymm7_5 ymm7_5 ymm15_5;
smull mulH_6 mulLymm7_6 ymm7_6 ymm15_6;
smull mulH_7 mulLymm7_7 ymm7_7 ymm15_7;
smull mulH_8 mulLymm7_8 ymm7_8 ymm15_8;
smull mulH_9 mulLymm7_9 ymm7_9 ymm15_9;
smull mulH_a mulLymm7_a ymm7_a ymm15_a;
smull mulH_b mulLymm7_b ymm7_b ymm15_b;
smull mulH_c mulLymm7_c ymm7_c ymm15_c;
smull mulH_d mulLymm7_d ymm7_d ymm15_d;
smull mulH_e mulLymm7_e ymm7_e ymm15_e;
smull mulH_f mulLymm7_f ymm7_f ymm15_f;
mov ymm7_0 mulH_0;
mov ymm7_1 mulH_1;
mov ymm7_2 mulH_2;
mov ymm7_3 mulH_3;
mov ymm7_4 mulH_4;
mov ymm7_5 mulH_5;
mov ymm7_6 mulH_6;
mov ymm7_7 mulH_7;
mov ymm7_8 mulH_8;
mov ymm7_9 mulH_9;
mov ymm7_a mulH_a;
mov ymm7_b mulH_b;
mov ymm7_c mulH_c;
mov ymm7_d mulH_d;
mov ymm7_e mulH_e;
mov ymm7_f mulH_f;
(* vpmulhw %ymm0,%ymm9,%ymm9                       #! PC = 0x555555559bf3 *)
smull mulH_0 red_0 ymm9_0 ymm0_0;
assert true && red_0 = mulLymm7_0;
assume red_0 = mulLymm7_0 && true;
smull mulH_1 red_1 ymm9_1 ymm0_1;
assert true && red_1 = mulLymm7_1;
assume red_1 = mulLymm7_1 && true;
smull mulH_2 red_2 ymm9_2 ymm0_2;
assert true && red_2 = mulLymm7_2;
assume red_2 = mulLymm7_2 && true;
smull mulH_3 red_3 ymm9_3 ymm0_3;
assert true && red_3 = mulLymm7_3;
assume red_3 = mulLymm7_3 && true;
smull mulH_4 red_4 ymm9_4 ymm0_4;
assert true && red_4 = mulLymm7_4;
assume red_4 = mulLymm7_4 && true;
smull mulH_5 red_5 ymm9_5 ymm0_5;
assert true && red_5 = mulLymm7_5;
assume red_5 = mulLymm7_5 && true;
smull mulH_6 red_6 ymm9_6 ymm0_6;
assert true && red_6 = mulLymm7_6;
assume red_6 = mulLymm7_6 && true;
smull mulH_7 red_7 ymm9_7 ymm0_7;
assert true && red_7 = mulLymm7_7;
assume red_7 = mulLymm7_7 && true;
smull mulH_8 red_8 ymm9_8 ymm0_8;
assert true && red_8 = mulLymm7_8;
assume red_8 = mulLymm7_8 && true;
smull mulH_9 red_9 ymm9_9 ymm0_9;
assert true && red_9 = mulLymm7_9;
assume red_9 = mulLymm7_9 && true;
smull mulH_a red_a ymm9_a ymm0_a;
assert true && red_a = mulLymm7_a;
assume red_a = mulLymm7_a && true;
smull mulH_b red_b ymm9_b ymm0_b;
assert true && red_b = mulLymm7_b;
assume red_b = mulLymm7_b && true;
smull mulH_c red_c ymm9_c ymm0_c;
assert true && red_c = mulLymm7_c;
assume red_c = mulLymm7_c && true;
smull mulH_d red_d ymm9_d ymm0_d;
assert true && red_d = mulLymm7_d;
assume red_d = mulLymm7_d && true;
smull mulH_e red_e ymm9_e ymm0_e;
assert true && red_e = mulLymm7_e;
assume red_e = mulLymm7_e && true;
smull mulH_f red_f ymm9_f ymm0_f;
assert true && red_f = mulLymm7_f;
assume red_f = mulLymm7_f && true;
mov ymm9_0 mulH_0;
mov ymm9_1 mulH_1;
mov ymm9_2 mulH_2;
mov ymm9_3 mulH_3;
mov ymm9_4 mulH_4;
mov ymm9_5 mulH_5;
mov ymm9_6 mulH_6;
mov ymm9_7 mulH_7;
mov ymm9_8 mulH_8;
mov ymm9_9 mulH_9;
mov ymm9_a mulH_a;
mov ymm9_b mulH_b;
mov ymm9_c mulH_c;
mov ymm9_d mulH_d;
mov ymm9_e mulH_e;
mov ymm9_f mulH_f;
(* vpsubw %ymm9,%ymm7,%ymm7                        #! PC = 0x555555559bf7 *)
sub ymm7_0 ymm7_0 ymm9_0;
sub ymm7_1 ymm7_1 ymm9_1;
sub ymm7_2 ymm7_2 ymm9_2;
sub ymm7_3 ymm7_3 ymm9_3;
sub ymm7_4 ymm7_4 ymm9_4;
sub ymm7_5 ymm7_5 ymm9_5;
sub ymm7_6 ymm7_6 ymm9_6;
sub ymm7_7 ymm7_7 ymm9_7;
sub ymm7_8 ymm7_8 ymm9_8;
sub ymm7_9 ymm7_9 ymm9_9;
sub ymm7_a ymm7_a ymm9_a;
sub ymm7_b ymm7_b ymm9_b;
sub ymm7_c ymm7_c ymm9_c;
sub ymm7_d ymm7_d ymm9_d;
sub ymm7_e ymm7_e ymm9_e;
sub ymm7_f ymm7_f ymm9_f;
(* vpmullw %ymm14,%ymm5,%ymm9                      #! PC = 0x555555559bfc *)
smull mulHymm5_0 mulL_0 ymm14_0 ymm5_0;
smull mulHymm5_1 mulL_1 ymm14_1 ymm5_1;
smull mulHymm5_2 mulL_2 ymm14_2 ymm5_2;
smull mulHymm5_3 mulL_3 ymm14_3 ymm5_3;
smull mulHymm5_4 mulL_4 ymm14_4 ymm5_4;
smull mulHymm5_5 mulL_5 ymm14_5 ymm5_5;
smull mulHymm5_6 mulL_6 ymm14_6 ymm5_6;
smull mulHymm5_7 mulL_7 ymm14_7 ymm5_7;
smull mulHymm5_8 mulL_8 ymm14_8 ymm5_8;
smull mulHymm5_9 mulL_9 ymm14_9 ymm5_9;
smull mulHymm5_a mulL_a ymm14_a ymm5_a;
smull mulHymm5_b mulL_b ymm14_b ymm5_b;
smull mulHymm5_c mulL_c ymm14_c ymm5_c;
smull mulHymm5_d mulL_d ymm14_d ymm5_d;
smull mulHymm5_e mulL_e ymm14_e ymm5_e;
smull mulHymm5_f mulL_f ymm14_f ymm5_f;
cast ymm9_0@sint16 mulL_0;
cast ymm9_1@sint16 mulL_1;
cast ymm9_2@sint16 mulL_2;
cast ymm9_3@sint16 mulL_3;
cast ymm9_4@sint16 mulL_4;
cast ymm9_5@sint16 mulL_5;
cast ymm9_6@sint16 mulL_6;
cast ymm9_7@sint16 mulL_7;
cast ymm9_8@sint16 mulL_8;
cast ymm9_9@sint16 mulL_9;
cast ymm9_a@sint16 mulL_a;
cast ymm9_b@sint16 mulL_b;
cast ymm9_c@sint16 mulL_c;
cast ymm9_d@sint16 mulL_d;
cast ymm9_e@sint16 mulL_e;
cast ymm9_f@sint16 mulL_f;
(* vpmulhw %ymm15,%ymm5,%ymm5                      #! PC = 0x555555559c01 *)
smull mulH_0 mulLymm5_0 ymm5_0 ymm15_0;
smull mulH_1 mulLymm5_1 ymm5_1 ymm15_1;
smull mulH_2 mulLymm5_2 ymm5_2 ymm15_2;
smull mulH_3 mulLymm5_3 ymm5_3 ymm15_3;
smull mulH_4 mulLymm5_4 ymm5_4 ymm15_4;
smull mulH_5 mulLymm5_5 ymm5_5 ymm15_5;
smull mulH_6 mulLymm5_6 ymm5_6 ymm15_6;
smull mulH_7 mulLymm5_7 ymm5_7 ymm15_7;
smull mulH_8 mulLymm5_8 ymm5_8 ymm15_8;
smull mulH_9 mulLymm5_9 ymm5_9 ymm15_9;
smull mulH_a mulLymm5_a ymm5_a ymm15_a;
smull mulH_b mulLymm5_b ymm5_b ymm15_b;
smull mulH_c mulLymm5_c ymm5_c ymm15_c;
smull mulH_d mulLymm5_d ymm5_d ymm15_d;
smull mulH_e mulLymm5_e ymm5_e ymm15_e;
smull mulH_f mulLymm5_f ymm5_f ymm15_f;
mov ymm5_0 mulH_0;
mov ymm5_1 mulH_1;
mov ymm5_2 mulH_2;
mov ymm5_3 mulH_3;
mov ymm5_4 mulH_4;
mov ymm5_5 mulH_5;
mov ymm5_6 mulH_6;
mov ymm5_7 mulH_7;
mov ymm5_8 mulH_8;
mov ymm5_9 mulH_9;
mov ymm5_a mulH_a;
mov ymm5_b mulH_b;
mov ymm5_c mulH_c;
mov ymm5_d mulH_d;
mov ymm5_e mulH_e;
mov ymm5_f mulH_f;
(* vpmulhw %ymm0,%ymm9,%ymm9                       #! PC = 0x555555559c06 *)
smull mulH_0 red_0 ymm9_0 ymm0_0;
assert true && red_0 = mulLymm5_0;
assume red_0 = mulLymm5_0 && true;
smull mulH_1 red_1 ymm9_1 ymm0_1;
assert true && red_1 = mulLymm5_1;
assume red_1 = mulLymm5_1 && true;
smull mulH_2 red_2 ymm9_2 ymm0_2;
assert true && red_2 = mulLymm5_2;
assume red_2 = mulLymm5_2 && true;
smull mulH_3 red_3 ymm9_3 ymm0_3;
assert true && red_3 = mulLymm5_3;
assume red_3 = mulLymm5_3 && true;
smull mulH_4 red_4 ymm9_4 ymm0_4;
assert true && red_4 = mulLymm5_4;
assume red_4 = mulLymm5_4 && true;
smull mulH_5 red_5 ymm9_5 ymm0_5;
assert true && red_5 = mulLymm5_5;
assume red_5 = mulLymm5_5 && true;
smull mulH_6 red_6 ymm9_6 ymm0_6;
assert true && red_6 = mulLymm5_6;
assume red_6 = mulLymm5_6 && true;
smull mulH_7 red_7 ymm9_7 ymm0_7;
assert true && red_7 = mulLymm5_7;
assume red_7 = mulLymm5_7 && true;
smull mulH_8 red_8 ymm9_8 ymm0_8;
assert true && red_8 = mulLymm5_8;
assume red_8 = mulLymm5_8 && true;
smull mulH_9 red_9 ymm9_9 ymm0_9;
assert true && red_9 = mulLymm5_9;
assume red_9 = mulLymm5_9 && true;
smull mulH_a red_a ymm9_a ymm0_a;
assert true && red_a = mulLymm5_a;
assume red_a = mulLymm5_a && true;
smull mulH_b red_b ymm9_b ymm0_b;
assert true && red_b = mulLymm5_b;
assume red_b = mulLymm5_b && true;
smull mulH_c red_c ymm9_c ymm0_c;
assert true && red_c = mulLymm5_c;
assume red_c = mulLymm5_c && true;
smull mulH_d red_d ymm9_d ymm0_d;
assert true && red_d = mulLymm5_d;
assume red_d = mulLymm5_d && true;
smull mulH_e red_e ymm9_e ymm0_e;
assert true && red_e = mulLymm5_e;
assume red_e = mulLymm5_e && true;
smull mulH_f red_f ymm9_f ymm0_f;
assert true && red_f = mulLymm5_f;
assume red_f = mulLymm5_f && true;
mov ymm9_0 mulH_0;
mov ymm9_1 mulH_1;
mov ymm9_2 mulH_2;
mov ymm9_3 mulH_3;
mov ymm9_4 mulH_4;
mov ymm9_5 mulH_5;
mov ymm9_6 mulH_6;
mov ymm9_7 mulH_7;
mov ymm9_8 mulH_8;
mov ymm9_9 mulH_9;
mov ymm9_a mulH_a;
mov ymm9_b mulH_b;
mov ymm9_c mulH_c;
mov ymm9_d mulH_d;
mov ymm9_e mulH_e;
mov ymm9_f mulH_f;
(* vpsubw %ymm9,%ymm5,%ymm5                        #! PC = 0x555555559c0a *)
sub ymm5_0 ymm5_0 ymm9_0;
sub ymm5_1 ymm5_1 ymm9_1;
sub ymm5_2 ymm5_2 ymm9_2;
sub ymm5_3 ymm5_3 ymm9_3;
sub ymm5_4 ymm5_4 ymm9_4;
sub ymm5_5 ymm5_5 ymm9_5;
sub ymm5_6 ymm5_6 ymm9_6;
sub ymm5_7 ymm5_7 ymm9_7;
sub ymm5_8 ymm5_8 ymm9_8;
sub ymm5_9 ymm5_9 ymm9_9;
sub ymm5_a ymm5_a ymm9_a;
sub ymm5_b ymm5_b ymm9_b;
sub ymm5_c ymm5_c ymm9_c;
sub ymm5_d ymm5_d ymm9_d;
sub ymm5_e ymm5_e ymm9_e;
sub ymm5_f ymm5_f ymm9_f;
(* vpmullw %ymm14,%ymm4,%ymm9                      #! PC = 0x555555559c0f *)
smull mulHymm4_0 mulL_0 ymm14_0 ymm4_0;
smull mulHymm4_1 mulL_1 ymm14_1 ymm4_1;
smull mulHymm4_2 mulL_2 ymm14_2 ymm4_2;
smull mulHymm4_3 mulL_3 ymm14_3 ymm4_3;
smull mulHymm4_4 mulL_4 ymm14_4 ymm4_4;
smull mulHymm4_5 mulL_5 ymm14_5 ymm4_5;
smull mulHymm4_6 mulL_6 ymm14_6 ymm4_6;
smull mulHymm4_7 mulL_7 ymm14_7 ymm4_7;
smull mulHymm4_8 mulL_8 ymm14_8 ymm4_8;
smull mulHymm4_9 mulL_9 ymm14_9 ymm4_9;
smull mulHymm4_a mulL_a ymm14_a ymm4_a;
smull mulHymm4_b mulL_b ymm14_b ymm4_b;
smull mulHymm4_c mulL_c ymm14_c ymm4_c;
smull mulHymm4_d mulL_d ymm14_d ymm4_d;
smull mulHymm4_e mulL_e ymm14_e ymm4_e;
smull mulHymm4_f mulL_f ymm14_f ymm4_f;
cast ymm9_0@sint16 mulL_0;
cast ymm9_1@sint16 mulL_1;
cast ymm9_2@sint16 mulL_2;
cast ymm9_3@sint16 mulL_3;
cast ymm9_4@sint16 mulL_4;
cast ymm9_5@sint16 mulL_5;
cast ymm9_6@sint16 mulL_6;
cast ymm9_7@sint16 mulL_7;
cast ymm9_8@sint16 mulL_8;
cast ymm9_9@sint16 mulL_9;
cast ymm9_a@sint16 mulL_a;
cast ymm9_b@sint16 mulL_b;
cast ymm9_c@sint16 mulL_c;
cast ymm9_d@sint16 mulL_d;
cast ymm9_e@sint16 mulL_e;
cast ymm9_f@sint16 mulL_f;
(* vpmulhw %ymm15,%ymm4,%ymm4                      #! PC = 0x555555559c14 *)
smull mulH_0 mulLymm4_0 ymm4_0 ymm15_0;
smull mulH_1 mulLymm4_1 ymm4_1 ymm15_1;
smull mulH_2 mulLymm4_2 ymm4_2 ymm15_2;
smull mulH_3 mulLymm4_3 ymm4_3 ymm15_3;
smull mulH_4 mulLymm4_4 ymm4_4 ymm15_4;
smull mulH_5 mulLymm4_5 ymm4_5 ymm15_5;
smull mulH_6 mulLymm4_6 ymm4_6 ymm15_6;
smull mulH_7 mulLymm4_7 ymm4_7 ymm15_7;
smull mulH_8 mulLymm4_8 ymm4_8 ymm15_8;
smull mulH_9 mulLymm4_9 ymm4_9 ymm15_9;
smull mulH_a mulLymm4_a ymm4_a ymm15_a;
smull mulH_b mulLymm4_b ymm4_b ymm15_b;
smull mulH_c mulLymm4_c ymm4_c ymm15_c;
smull mulH_d mulLymm4_d ymm4_d ymm15_d;
smull mulH_e mulLymm4_e ymm4_e ymm15_e;
smull mulH_f mulLymm4_f ymm4_f ymm15_f;
mov ymm4_0 mulH_0;
mov ymm4_1 mulH_1;
mov ymm4_2 mulH_2;
mov ymm4_3 mulH_3;
mov ymm4_4 mulH_4;
mov ymm4_5 mulH_5;
mov ymm4_6 mulH_6;
mov ymm4_7 mulH_7;
mov ymm4_8 mulH_8;
mov ymm4_9 mulH_9;
mov ymm4_a mulH_a;
mov ymm4_b mulH_b;
mov ymm4_c mulH_c;
mov ymm4_d mulH_d;
mov ymm4_e mulH_e;
mov ymm4_f mulH_f;
(* vpmulhw %ymm0,%ymm9,%ymm9                       #! PC = 0x555555559c19 *)
smull mulH_0 red_0 ymm9_0 ymm0_0;
assert true && red_0 = mulLymm4_0;
assume red_0 = mulLymm4_0 && true;
smull mulH_1 red_1 ymm9_1 ymm0_1;
assert true && red_1 = mulLymm4_1;
assume red_1 = mulLymm4_1 && true;
smull mulH_2 red_2 ymm9_2 ymm0_2;
assert true && red_2 = mulLymm4_2;
assume red_2 = mulLymm4_2 && true;
smull mulH_3 red_3 ymm9_3 ymm0_3;
assert true && red_3 = mulLymm4_3;
assume red_3 = mulLymm4_3 && true;
smull mulH_4 red_4 ymm9_4 ymm0_4;
assert true && red_4 = mulLymm4_4;
assume red_4 = mulLymm4_4 && true;
smull mulH_5 red_5 ymm9_5 ymm0_5;
assert true && red_5 = mulLymm4_5;
assume red_5 = mulLymm4_5 && true;
smull mulH_6 red_6 ymm9_6 ymm0_6;
assert true && red_6 = mulLymm4_6;
assume red_6 = mulLymm4_6 && true;
smull mulH_7 red_7 ymm9_7 ymm0_7;
assert true && red_7 = mulLymm4_7;
assume red_7 = mulLymm4_7 && true;
smull mulH_8 red_8 ymm9_8 ymm0_8;
assert true && red_8 = mulLymm4_8;
assume red_8 = mulLymm4_8 && true;
smull mulH_9 red_9 ymm9_9 ymm0_9;
assert true && red_9 = mulLymm4_9;
assume red_9 = mulLymm4_9 && true;
smull mulH_a red_a ymm9_a ymm0_a;
assert true && red_a = mulLymm4_a;
assume red_a = mulLymm4_a && true;
smull mulH_b red_b ymm9_b ymm0_b;
assert true && red_b = mulLymm4_b;
assume red_b = mulLymm4_b && true;
smull mulH_c red_c ymm9_c ymm0_c;
assert true && red_c = mulLymm4_c;
assume red_c = mulLymm4_c && true;
smull mulH_d red_d ymm9_d ymm0_d;
assert true && red_d = mulLymm4_d;
assume red_d = mulLymm4_d && true;
smull mulH_e red_e ymm9_e ymm0_e;
assert true && red_e = mulLymm4_e;
assume red_e = mulLymm4_e && true;
smull mulH_f red_f ymm9_f ymm0_f;
assert true && red_f = mulLymm4_f;
assume red_f = mulLymm4_f && true;
mov ymm9_0 mulH_0;
mov ymm9_1 mulH_1;
mov ymm9_2 mulH_2;
mov ymm9_3 mulH_3;
mov ymm9_4 mulH_4;
mov ymm9_5 mulH_5;
mov ymm9_6 mulH_6;
mov ymm9_7 mulH_7;
mov ymm9_8 mulH_8;
mov ymm9_9 mulH_9;
mov ymm9_a mulH_a;
mov ymm9_b mulH_b;
mov ymm9_c mulH_c;
mov ymm9_d mulH_d;
mov ymm9_e mulH_e;
mov ymm9_f mulH_f;
(* vpsubw %ymm9,%ymm4,%ymm4                        #! PC = 0x555555559c1d *)
sub ymm4_0 ymm4_0 ymm9_0;
sub ymm4_1 ymm4_1 ymm9_1;
sub ymm4_2 ymm4_2 ymm9_2;
sub ymm4_3 ymm4_3 ymm9_3;
sub ymm4_4 ymm4_4 ymm9_4;
sub ymm4_5 ymm4_5 ymm9_5;
sub ymm4_6 ymm4_6 ymm9_6;
sub ymm4_7 ymm4_7 ymm9_7;
sub ymm4_8 ymm4_8 ymm9_8;
sub ymm4_9 ymm4_9 ymm9_9;
sub ymm4_a ymm4_a ymm9_a;
sub ymm4_b ymm4_b ymm9_b;
sub ymm4_c ymm4_c ymm9_c;
sub ymm4_d ymm4_d ymm9_d;
sub ymm4_e ymm4_e ymm9_e;
sub ymm4_f ymm4_f ymm9_f;
(* vpmullw %ymm14,%ymm10,%ymm9                     #! PC = 0x555555559c22 *)
smull mulHymm10_0 mulL_0 ymm14_0 ymm10_0;
smull mulHymm10_1 mulL_1 ymm14_1 ymm10_1;
smull mulHymm10_2 mulL_2 ymm14_2 ymm10_2;
smull mulHymm10_3 mulL_3 ymm14_3 ymm10_3;
smull mulHymm10_4 mulL_4 ymm14_4 ymm10_4;
smull mulHymm10_5 mulL_5 ymm14_5 ymm10_5;
smull mulHymm10_6 mulL_6 ymm14_6 ymm10_6;
smull mulHymm10_7 mulL_7 ymm14_7 ymm10_7;
smull mulHymm10_8 mulL_8 ymm14_8 ymm10_8;
smull mulHymm10_9 mulL_9 ymm14_9 ymm10_9;
smull mulHymm10_a mulL_a ymm14_a ymm10_a;
smull mulHymm10_b mulL_b ymm14_b ymm10_b;
smull mulHymm10_c mulL_c ymm14_c ymm10_c;
smull mulHymm10_d mulL_d ymm14_d ymm10_d;
smull mulHymm10_e mulL_e ymm14_e ymm10_e;
smull mulHymm10_f mulL_f ymm14_f ymm10_f;
cast ymm9_0@sint16 mulL_0;
cast ymm9_1@sint16 mulL_1;
cast ymm9_2@sint16 mulL_2;
cast ymm9_3@sint16 mulL_3;
cast ymm9_4@sint16 mulL_4;
cast ymm9_5@sint16 mulL_5;
cast ymm9_6@sint16 mulL_6;
cast ymm9_7@sint16 mulL_7;
cast ymm9_8@sint16 mulL_8;
cast ymm9_9@sint16 mulL_9;
cast ymm9_a@sint16 mulL_a;
cast ymm9_b@sint16 mulL_b;
cast ymm9_c@sint16 mulL_c;
cast ymm9_d@sint16 mulL_d;
cast ymm9_e@sint16 mulL_e;
cast ymm9_f@sint16 mulL_f;
(* vpmulhw %ymm15,%ymm10,%ymm10                    #! PC = 0x555555559c27 *)
smull mulH_0 mulLymm10_0 ymm10_0 ymm15_0;
smull mulH_1 mulLymm10_1 ymm10_1 ymm15_1;
smull mulH_2 mulLymm10_2 ymm10_2 ymm15_2;
smull mulH_3 mulLymm10_3 ymm10_3 ymm15_3;
smull mulH_4 mulLymm10_4 ymm10_4 ymm15_4;
smull mulH_5 mulLymm10_5 ymm10_5 ymm15_5;
smull mulH_6 mulLymm10_6 ymm10_6 ymm15_6;
smull mulH_7 mulLymm10_7 ymm10_7 ymm15_7;
smull mulH_8 mulLymm10_8 ymm10_8 ymm15_8;
smull mulH_9 mulLymm10_9 ymm10_9 ymm15_9;
smull mulH_a mulLymm10_a ymm10_a ymm15_a;
smull mulH_b mulLymm10_b ymm10_b ymm15_b;
smull mulH_c mulLymm10_c ymm10_c ymm15_c;
smull mulH_d mulLymm10_d ymm10_d ymm15_d;
smull mulH_e mulLymm10_e ymm10_e ymm15_e;
smull mulH_f mulLymm10_f ymm10_f ymm15_f;
mov ymm10_0 mulH_0;
mov ymm10_1 mulH_1;
mov ymm10_2 mulH_2;
mov ymm10_3 mulH_3;
mov ymm10_4 mulH_4;
mov ymm10_5 mulH_5;
mov ymm10_6 mulH_6;
mov ymm10_7 mulH_7;
mov ymm10_8 mulH_8;
mov ymm10_9 mulH_9;
mov ymm10_a mulH_a;
mov ymm10_b mulH_b;
mov ymm10_c mulH_c;
mov ymm10_d mulH_d;
mov ymm10_e mulH_e;
mov ymm10_f mulH_f;
(* vpmulhw %ymm0,%ymm9,%ymm9                       #! PC = 0x555555559c2c *)
smull mulH_0 red_0 ymm9_0 ymm0_0;
assert true && red_0 = mulLymm10_0;
assume red_0 = mulLymm10_0 && true;
smull mulH_1 red_1 ymm9_1 ymm0_1;
assert true && red_1 = mulLymm10_1;
assume red_1 = mulLymm10_1 && true;
smull mulH_2 red_2 ymm9_2 ymm0_2;
assert true && red_2 = mulLymm10_2;
assume red_2 = mulLymm10_2 && true;
smull mulH_3 red_3 ymm9_3 ymm0_3;
assert true && red_3 = mulLymm10_3;
assume red_3 = mulLymm10_3 && true;
smull mulH_4 red_4 ymm9_4 ymm0_4;
assert true && red_4 = mulLymm10_4;
assume red_4 = mulLymm10_4 && true;
smull mulH_5 red_5 ymm9_5 ymm0_5;
assert true && red_5 = mulLymm10_5;
assume red_5 = mulLymm10_5 && true;
smull mulH_6 red_6 ymm9_6 ymm0_6;
assert true && red_6 = mulLymm10_6;
assume red_6 = mulLymm10_6 && true;
smull mulH_7 red_7 ymm9_7 ymm0_7;
assert true && red_7 = mulLymm10_7;
assume red_7 = mulLymm10_7 && true;
smull mulH_8 red_8 ymm9_8 ymm0_8;
assert true && red_8 = mulLymm10_8;
assume red_8 = mulLymm10_8 && true;
smull mulH_9 red_9 ymm9_9 ymm0_9;
assert true && red_9 = mulLymm10_9;
assume red_9 = mulLymm10_9 && true;
smull mulH_a red_a ymm9_a ymm0_a;
assert true && red_a = mulLymm10_a;
assume red_a = mulLymm10_a && true;
smull mulH_b red_b ymm9_b ymm0_b;
assert true && red_b = mulLymm10_b;
assume red_b = mulLymm10_b && true;
smull mulH_c red_c ymm9_c ymm0_c;
assert true && red_c = mulLymm10_c;
assume red_c = mulLymm10_c && true;
smull mulH_d red_d ymm9_d ymm0_d;
assert true && red_d = mulLymm10_d;
assume red_d = mulLymm10_d && true;
smull mulH_e red_e ymm9_e ymm0_e;
assert true && red_e = mulLymm10_e;
assume red_e = mulLymm10_e && true;
smull mulH_f red_f ymm9_f ymm0_f;
assert true && red_f = mulLymm10_f;
assume red_f = mulLymm10_f && true;
mov ymm9_0 mulH_0;
mov ymm9_1 mulH_1;
mov ymm9_2 mulH_2;
mov ymm9_3 mulH_3;
mov ymm9_4 mulH_4;
mov ymm9_5 mulH_5;
mov ymm9_6 mulH_6;
mov ymm9_7 mulH_7;
mov ymm9_8 mulH_8;
mov ymm9_9 mulH_9;
mov ymm9_a mulH_a;
mov ymm9_b mulH_b;
mov ymm9_c mulH_c;
mov ymm9_d mulH_d;
mov ymm9_e mulH_e;
mov ymm9_f mulH_f;
(* vpsubw %ymm9,%ymm10,%ymm10                      #! PC = 0x555555559c30 *)
sub ymm10_0 ymm10_0 ymm9_0;
sub ymm10_1 ymm10_1 ymm9_1;
sub ymm10_2 ymm10_2 ymm9_2;
sub ymm10_3 ymm10_3 ymm9_3;
sub ymm10_4 ymm10_4 ymm9_4;
sub ymm10_5 ymm10_5 ymm9_5;
sub ymm10_6 ymm10_6 ymm9_6;
sub ymm10_7 ymm10_7 ymm9_7;
sub ymm10_8 ymm10_8 ymm9_8;
sub ymm10_9 ymm10_9 ymm9_9;
sub ymm10_a ymm10_a ymm9_a;
sub ymm10_b ymm10_b ymm9_b;
sub ymm10_c ymm10_c ymm9_c;
sub ymm10_d ymm10_d ymm9_d;
sub ymm10_e ymm10_e ymm9_e;
sub ymm10_f ymm10_f ymm9_f;
(* vpaddw %ymm3,%ymm7,%ymm9                        #! PC = 0x555555559c35 *)
add ymm9_0 ymm7_0 ymm3_0;
add ymm9_1 ymm7_1 ymm3_1;
add ymm9_2 ymm7_2 ymm3_2;
add ymm9_3 ymm7_3 ymm3_3;
add ymm9_4 ymm7_4 ymm3_4;
add ymm9_5 ymm7_5 ymm3_5;
add ymm9_6 ymm7_6 ymm3_6;
add ymm9_7 ymm7_7 ymm3_7;
add ymm9_8 ymm7_8 ymm3_8;
add ymm9_9 ymm7_9 ymm3_9;
add ymm9_a ymm7_a ymm3_a;
add ymm9_b ymm7_b ymm3_b;
add ymm9_c ymm7_c ymm3_c;
add ymm9_d ymm7_d ymm3_d;
add ymm9_e ymm7_e ymm3_e;
add ymm9_f ymm7_f ymm3_f;
(* vpsubw %ymm3,%ymm7,%ymm3                        #! PC = 0x555555559c39 *)
sub ymm3_0 ymm7_0 ymm3_0;
sub ymm3_1 ymm7_1 ymm3_1;
sub ymm3_2 ymm7_2 ymm3_2;
sub ymm3_3 ymm7_3 ymm3_3;
sub ymm3_4 ymm7_4 ymm3_4;
sub ymm3_5 ymm7_5 ymm3_5;
sub ymm3_6 ymm7_6 ymm3_6;
sub ymm3_7 ymm7_7 ymm3_7;
sub ymm3_8 ymm7_8 ymm3_8;
sub ymm3_9 ymm7_9 ymm3_9;
sub ymm3_a ymm7_a ymm3_a;
sub ymm3_b ymm7_b ymm3_b;
sub ymm3_c ymm7_c ymm3_c;
sub ymm3_d ymm7_d ymm3_d;
sub ymm3_e ymm7_e ymm3_e;
sub ymm3_f ymm7_f ymm3_f;
(* vpaddw %ymm6,%ymm5,%ymm7                        #! PC = 0x555555559c3d *)
add ymm7_0 ymm5_0 ymm6_0;
add ymm7_1 ymm5_1 ymm6_1;
add ymm7_2 ymm5_2 ymm6_2;
add ymm7_3 ymm5_3 ymm6_3;
add ymm7_4 ymm5_4 ymm6_4;
add ymm7_5 ymm5_5 ymm6_5;
add ymm7_6 ymm5_6 ymm6_6;
add ymm7_7 ymm5_7 ymm6_7;
add ymm7_8 ymm5_8 ymm6_8;
add ymm7_9 ymm5_9 ymm6_9;
add ymm7_a ymm5_a ymm6_a;
add ymm7_b ymm5_b ymm6_b;
add ymm7_c ymm5_c ymm6_c;
add ymm7_d ymm5_d ymm6_d;
add ymm7_e ymm5_e ymm6_e;
add ymm7_f ymm5_f ymm6_f;
(* vpsubw %ymm6,%ymm5,%ymm6                        #! PC = 0x555555559c41 *)
sub ymm6_0 ymm5_0 ymm6_0;
sub ymm6_1 ymm5_1 ymm6_1;
sub ymm6_2 ymm5_2 ymm6_2;
sub ymm6_3 ymm5_3 ymm6_3;
sub ymm6_4 ymm5_4 ymm6_4;
sub ymm6_5 ymm5_5 ymm6_5;
sub ymm6_6 ymm5_6 ymm6_6;
sub ymm6_7 ymm5_7 ymm6_7;
sub ymm6_8 ymm5_8 ymm6_8;
sub ymm6_9 ymm5_9 ymm6_9;
sub ymm6_a ymm5_a ymm6_a;
sub ymm6_b ymm5_b ymm6_b;
sub ymm6_c ymm5_c ymm6_c;
sub ymm6_d ymm5_d ymm6_d;
sub ymm6_e ymm5_e ymm6_e;
sub ymm6_f ymm5_f ymm6_f;
(* vpaddw %ymm8,%ymm4,%ymm5                        #! PC = 0x555555559c45 *)
add ymm5_0 ymm4_0 ymm8_0;
add ymm5_1 ymm4_1 ymm8_1;
add ymm5_2 ymm4_2 ymm8_2;
add ymm5_3 ymm4_3 ymm8_3;
add ymm5_4 ymm4_4 ymm8_4;
add ymm5_5 ymm4_5 ymm8_5;
add ymm5_6 ymm4_6 ymm8_6;
add ymm5_7 ymm4_7 ymm8_7;
add ymm5_8 ymm4_8 ymm8_8;
add ymm5_9 ymm4_9 ymm8_9;
add ymm5_a ymm4_a ymm8_a;
add ymm5_b ymm4_b ymm8_b;
add ymm5_c ymm4_c ymm8_c;
add ymm5_d ymm4_d ymm8_d;
add ymm5_e ymm4_e ymm8_e;
add ymm5_f ymm4_f ymm8_f;
(* vpsubw %ymm8,%ymm4,%ymm8                        #! PC = 0x555555559c4a *)
sub ymm8_0 ymm4_0 ymm8_0;
sub ymm8_1 ymm4_1 ymm8_1;
sub ymm8_2 ymm4_2 ymm8_2;
sub ymm8_3 ymm4_3 ymm8_3;
sub ymm8_4 ymm4_4 ymm8_4;
sub ymm8_5 ymm4_5 ymm8_5;
sub ymm8_6 ymm4_6 ymm8_6;
sub ymm8_7 ymm4_7 ymm8_7;
sub ymm8_8 ymm4_8 ymm8_8;
sub ymm8_9 ymm4_9 ymm8_9;
sub ymm8_a ymm4_a ymm8_a;
sub ymm8_b ymm4_b ymm8_b;
sub ymm8_c ymm4_c ymm8_c;
sub ymm8_d ymm4_d ymm8_d;
sub ymm8_e ymm4_e ymm8_e;
sub ymm8_f ymm4_f ymm8_f;
(* vpaddw %ymm11,%ymm10,%ymm4                      #! PC = 0x555555559c4f *)
add ymm4_0 ymm10_0 ymm11_0;
add ymm4_1 ymm10_1 ymm11_1;
add ymm4_2 ymm10_2 ymm11_2;
add ymm4_3 ymm10_3 ymm11_3;
add ymm4_4 ymm10_4 ymm11_4;
add ymm4_5 ymm10_5 ymm11_5;
add ymm4_6 ymm10_6 ymm11_6;
add ymm4_7 ymm10_7 ymm11_7;
add ymm4_8 ymm10_8 ymm11_8;
add ymm4_9 ymm10_9 ymm11_9;
add ymm4_a ymm10_a ymm11_a;
add ymm4_b ymm10_b ymm11_b;
add ymm4_c ymm10_c ymm11_c;
add ymm4_d ymm10_d ymm11_d;
add ymm4_e ymm10_e ymm11_e;
add ymm4_f ymm10_f ymm11_f;
(* vpsubw %ymm11,%ymm10,%ymm11                     #! PC = 0x555555559c54 *)
sub ymm11_0 ymm10_0 ymm11_0;
sub ymm11_1 ymm10_1 ymm11_1;
sub ymm11_2 ymm10_2 ymm11_2;
sub ymm11_3 ymm10_3 ymm11_3;
sub ymm11_4 ymm10_4 ymm11_4;
sub ymm11_5 ymm10_5 ymm11_5;
sub ymm11_6 ymm10_6 ymm11_6;
sub ymm11_7 ymm10_7 ymm11_7;
sub ymm11_8 ymm10_8 ymm11_8;
sub ymm11_9 ymm10_9 ymm11_9;
sub ymm11_a ymm10_a ymm11_a;
sub ymm11_b ymm10_b ymm11_b;
sub ymm11_c ymm10_c ymm11_c;
sub ymm11_d ymm10_d ymm11_d;
sub ymm11_e ymm10_e ymm11_e;
sub ymm11_f ymm10_f ymm11_f;


(**************** LEVELS 3-5, 7 *****************)


(**************** CUT 159, 23 *****************)

rcut 
  and [
(-12525)@16<=s ymm9_0,ymm9_0<=s 12525@16,(-12525)@16<=s ymm9_1,ymm9_1<=s 12525@16,
(-12525)@16<=s ymm9_2,ymm9_2<=s 12525@16,(-12525)@16<=s ymm9_3,ymm9_3<=s 12525@16,
(-12525)@16<=s ymm9_4,ymm9_4<=s 12525@16,(-12525)@16<=s ymm9_5,ymm9_5<=s 12525@16,
(-12525)@16<=s ymm9_6,ymm9_6<=s 12525@16,(-12525)@16<=s ymm9_7,ymm9_7<=s 12525@16,
(-12525)@16<=s ymm9_8,ymm9_8<=s 12525@16,(-12525)@16<=s ymm9_9,ymm9_9<=s 12525@16,
(-12525)@16<=s ymm9_a,ymm9_a<=s 12525@16,(-12525)@16<=s ymm9_b,ymm9_b<=s 12525@16,
(-12525)@16<=s ymm9_c,ymm9_c<=s 12525@16,(-12525)@16<=s ymm9_d,ymm9_d<=s 12525@16,
(-12525)@16<=s ymm9_e,ymm9_e<=s 12525@16,(-12525)@16<=s ymm9_f,ymm9_f<=s 12525@16,
(-12525)@16<=s ymm3_0,ymm3_0<=s 12525@16,(-12525)@16<=s ymm3_1,ymm3_1<=s 12525@16,
(-12525)@16<=s ymm3_2,ymm3_2<=s 12525@16,(-12525)@16<=s ymm3_3,ymm3_3<=s 12525@16,
(-12525)@16<=s ymm3_4,ymm3_4<=s 12525@16,(-12525)@16<=s ymm3_5,ymm3_5<=s 12525@16,
(-12525)@16<=s ymm3_6,ymm3_6<=s 12525@16,(-12525)@16<=s ymm3_7,ymm3_7<=s 12525@16,
(-12525)@16<=s ymm3_8,ymm3_8<=s 12525@16,(-12525)@16<=s ymm3_9,ymm3_9<=s 12525@16,
(-12525)@16<=s ymm3_a,ymm3_a<=s 12525@16,(-12525)@16<=s ymm3_b,ymm3_b<=s 12525@16,
(-12525)@16<=s ymm3_c,ymm3_c<=s 12525@16,(-12525)@16<=s ymm3_d,ymm3_d<=s 12525@16,
(-12525)@16<=s ymm3_e,ymm3_e<=s 12525@16,(-12525)@16<=s ymm3_f,ymm3_f<=s 12525@16,
(-12924)@16<=s ymm7_0,ymm7_0<=s 12924@16,(-12924)@16<=s ymm7_1,ymm7_1<=s 12924@16,
(-12924)@16<=s ymm7_2,ymm7_2<=s 12924@16,(-12924)@16<=s ymm7_3,ymm7_3<=s 12924@16,
(-12924)@16<=s ymm7_4,ymm7_4<=s 12924@16,(-12924)@16<=s ymm7_5,ymm7_5<=s 12924@16,
(-12924)@16<=s ymm7_6,ymm7_6<=s 12924@16,(-12924)@16<=s ymm7_7,ymm7_7<=s 12924@16,
(-12924)@16<=s ymm7_8,ymm7_8<=s 12924@16,(-12924)@16<=s ymm7_9,ymm7_9<=s 12924@16,
(-12924)@16<=s ymm7_a,ymm7_a<=s 12924@16,(-12924)@16<=s ymm7_b,ymm7_b<=s 12924@16,
(-12924)@16<=s ymm7_c,ymm7_c<=s 12924@16,(-12924)@16<=s ymm7_d,ymm7_d<=s 12924@16,
(-12924)@16<=s ymm7_e,ymm7_e<=s 12924@16,(-12924)@16<=s ymm7_f,ymm7_f<=s 12924@16,
(-12924)@16<=s ymm6_0,ymm6_0<=s 12924@16,(-12924)@16<=s ymm6_1,ymm6_1<=s 12924@16,
(-12924)@16<=s ymm6_2,ymm6_2<=s 12924@16,(-12924)@16<=s ymm6_3,ymm6_3<=s 12924@16,
(-12924)@16<=s ymm6_4,ymm6_4<=s 12924@16,(-12924)@16<=s ymm6_5,ymm6_5<=s 12924@16,
(-12924)@16<=s ymm6_6,ymm6_6<=s 12924@16,(-12924)@16<=s ymm6_7,ymm6_7<=s 12924@16,
(-12924)@16<=s ymm6_8,ymm6_8<=s 12924@16,(-12924)@16<=s ymm6_9,ymm6_9<=s 12924@16,
(-12924)@16<=s ymm6_a,ymm6_a<=s 12924@16,(-12924)@16<=s ymm6_b,ymm6_b<=s 12924@16,
(-12924)@16<=s ymm6_c,ymm6_c<=s 12924@16,(-12924)@16<=s ymm6_d,ymm6_d<=s 12924@16,
(-12924)@16<=s ymm6_e,ymm6_e<=s 12924@16,(-12924)@16<=s ymm6_f,ymm6_f<=s 12924@16,
(-11983)@16<=s ymm5_0,ymm5_0<=s 11983@16,(-11983)@16<=s ymm5_1,ymm5_1<=s 11983@16,
(-11983)@16<=s ymm5_2,ymm5_2<=s 11983@16,(-11983)@16<=s ymm5_3,ymm5_3<=s 11983@16,
(-11983)@16<=s ymm5_4,ymm5_4<=s 11983@16,(-11983)@16<=s ymm5_5,ymm5_5<=s 11983@16,
(-11983)@16<=s ymm5_6,ymm5_6<=s 11983@16,(-11983)@16<=s ymm5_7,ymm5_7<=s 11983@16,
(-11983)@16<=s ymm5_8,ymm5_8<=s 11983@16,(-11983)@16<=s ymm5_9,ymm5_9<=s 11983@16,
(-11983)@16<=s ymm5_a,ymm5_a<=s 11983@16,(-11983)@16<=s ymm5_b,ymm5_b<=s 11983@16,
(-11983)@16<=s ymm5_c,ymm5_c<=s 11983@16,(-11983)@16<=s ymm5_d,ymm5_d<=s 11983@16,
(-11983)@16<=s ymm5_e,ymm5_e<=s 11983@16,(-11983)@16<=s ymm5_f,ymm5_f<=s 11983@16,
(-11983)@16<=s ymm8_0,ymm8_0<=s 11983@16,(-11983)@16<=s ymm8_1,ymm8_1<=s 11983@16,
(-11983)@16<=s ymm8_2,ymm8_2<=s 11983@16,(-11983)@16<=s ymm8_3,ymm8_3<=s 11983@16,
(-11983)@16<=s ymm8_4,ymm8_4<=s 11983@16,(-11983)@16<=s ymm8_5,ymm8_5<=s 11983@16,
(-11983)@16<=s ymm8_6,ymm8_6<=s 11983@16,(-11983)@16<=s ymm8_7,ymm8_7<=s 11983@16,
(-11983)@16<=s ymm8_8,ymm8_8<=s 11983@16,(-11983)@16<=s ymm8_9,ymm8_9<=s 11983@16,
(-11983)@16<=s ymm8_a,ymm8_a<=s 11983@16,(-11983)@16<=s ymm8_b,ymm8_b<=s 11983@16,
(-11983)@16<=s ymm8_c,ymm8_c<=s 11983@16,(-11983)@16<=s ymm8_d,ymm8_d<=s 11983@16,
(-11983)@16<=s ymm8_e,ymm8_e<=s 11983@16,(-11983)@16<=s ymm8_f,ymm8_f<=s 11983@16,
(-12953)@16<=s ymm4_0,ymm4_0<=s 12953@16,(-12953)@16<=s ymm4_1,ymm4_1<=s 12953@16,
(-12953)@16<=s ymm4_2,ymm4_2<=s 12953@16,(-12953)@16<=s ymm4_3,ymm4_3<=s 12953@16,
(-12953)@16<=s ymm4_4,ymm4_4<=s 12953@16,(-12953)@16<=s ymm4_5,ymm4_5<=s 12953@16,
(-12953)@16<=s ymm4_6,ymm4_6<=s 12953@16,(-12953)@16<=s ymm4_7,ymm4_7<=s 12953@16,
(-12953)@16<=s ymm4_8,ymm4_8<=s 12953@16,(-12953)@16<=s ymm4_9,ymm4_9<=s 12953@16,
(-12953)@16<=s ymm4_a,ymm4_a<=s 12953@16,(-12953)@16<=s ymm4_b,ymm4_b<=s 12953@16,
(-12953)@16<=s ymm4_c,ymm4_c<=s 12953@16,(-12953)@16<=s ymm4_d,ymm4_d<=s 12953@16,
(-12953)@16<=s ymm4_e,ymm4_e<=s 12953@16,(-12953)@16<=s ymm4_f,ymm4_f<=s 12953@16,
(-12953)@16<=s ymm11_0,ymm11_0<=s 12953@16,(-12953)@16<=s ymm11_1,ymm11_1<=s 12953@16,
(-12953)@16<=s ymm11_2,ymm11_2<=s 12953@16,(-12953)@16<=s ymm11_3,ymm11_3<=s 12953@16,
(-12953)@16<=s ymm11_4,ymm11_4<=s 12953@16,(-12953)@16<=s ymm11_5,ymm11_5<=s 12953@16,
(-12953)@16<=s ymm11_6,ymm11_6<=s 12953@16,(-12953)@16<=s ymm11_7,ymm11_7<=s 12953@16,
(-12953)@16<=s ymm11_8,ymm11_8<=s 12953@16,(-12953)@16<=s ymm11_9,ymm11_9<=s 12953@16,
(-12953)@16<=s ymm11_a,ymm11_a<=s 12953@16,(-12953)@16<=s ymm11_b,ymm11_b<=s 12953@16,
(-12953)@16<=s ymm11_c,ymm11_c<=s 12953@16,(-12953)@16<=s ymm11_d,ymm11_d<=s 12953@16,
(-12953)@16<=s ymm11_e,ymm11_e<=s 12953@16,(-12953)@16<=s ymm11_f,ymm11_f<=s 12953@16
] prove with [ all ghosts, cuts [ 0 ] ];



(* vmovdqa 0x747f(%rip),%ymm1        # 0x5555555610e0 <nttmul_idxdata+64>#! EA = L0x5555555610e0; Value = 0x0d0c090805040100; PC = 0x555555559c59 *)
mov ymm1_0 L0x5555555610e0;
mov ymm1_1 L0x5555555610e2;
mov ymm1_2 L0x5555555610e4;
mov ymm1_3 L0x5555555610e6;
mov ymm1_4 L0x5555555610e8;
mov ymm1_5 L0x5555555610ea;
mov ymm1_6 L0x5555555610ec;
mov ymm1_7 L0x5555555610ee;
mov ymm1_8 L0x5555555610f0;
mov ymm1_9 L0x5555555610f2;
mov ymm1_a L0x5555555610f4;
mov ymm1_b L0x5555555610f6;
mov ymm1_c L0x5555555610f8;
mov ymm1_d L0x5555555610fa;
mov ymm1_e L0x5555555610fc;
mov ymm1_f L0x5555555610fe;
(* vpshufb %ymm1,%ymm9,%ymm9                       #! PC = 0x555555559c61 *)
assert true && ymm1_0 = 0x0100@16;
mov shuf_0 ymm9_0;
assert true && ymm1_1 = 0x0504@16;
mov shuf_1 ymm9_2;
assert true && ymm1_2 = 0x0908@16;
mov shuf_2 ymm9_4;
assert true && ymm1_3 = 0x0d0c@16;
mov shuf_3 ymm9_6;
assert true && ymm1_4 = 0x0302@16;
mov shuf_4 ymm9_1;
assert true && ymm1_5 = 0x0706@16;
mov shuf_5 ymm9_3;
assert true && ymm1_6 = 0x0b0a@16;
mov shuf_6 ymm9_5;
assert true && ymm1_7 = 0x0f0e@16;
mov shuf_7 ymm9_7;
assert true && ymm1_8 = 0x0100@16;
mov shuf_8 ymm9_8;
assert true && ymm1_9 = 0x0504@16;
mov shuf_9 ymm9_a;
assert true && ymm1_a = 0x0908@16;
mov shuf_a ymm9_c;
assert true && ymm1_b = 0x0d0c@16;
mov shuf_b ymm9_e;
assert true && ymm1_c = 0x0302@16;
mov shuf_c ymm9_9;
assert true && ymm1_d = 0x0706@16;
mov shuf_d ymm9_b;
assert true && ymm1_e = 0x0b0a@16;
mov shuf_e ymm9_d;
assert true && ymm1_f = 0x0f0e@16;
mov shuf_f ymm9_f;
mov ymm9_0 shuf_0;
mov ymm9_1 shuf_1;
mov ymm9_2 shuf_2;
mov ymm9_3 shuf_3;
mov ymm9_4 shuf_4;
mov ymm9_5 shuf_5;
mov ymm9_6 shuf_6;
mov ymm9_7 shuf_7;
mov ymm9_8 shuf_8;
mov ymm9_9 shuf_9;
mov ymm9_a shuf_a;
mov ymm9_b shuf_b;
mov ymm9_c shuf_c;
mov ymm9_d shuf_d;
mov ymm9_e shuf_e;
mov ymm9_f shuf_f;
(* vpermq $0xd8,%ymm9,%ymm9                        #! PC = 0x555555559c66 *)
mov permq_0 ymm9_0;
mov permq_1 ymm9_1;
mov permq_2 ymm9_2;
mov permq_3 ymm9_3;
mov permq_4 ymm9_8;
mov permq_5 ymm9_9;
mov permq_6 ymm9_a;
mov permq_7 ymm9_b;
mov permq_8 ymm9_4;
mov permq_9 ymm9_5;
mov permq_a ymm9_6;
mov permq_b ymm9_7;
mov permq_c ymm9_c;
mov permq_d ymm9_d;
mov permq_e ymm9_e;
mov permq_f ymm9_f;
mov ymm9_0 permq_0;
mov ymm9_1 permq_1;
mov ymm9_2 permq_2;
mov ymm9_3 permq_3;
mov ymm9_4 permq_4;
mov ymm9_5 permq_5;
mov ymm9_6 permq_6;
mov ymm9_7 permq_7;
mov ymm9_8 permq_8;
mov ymm9_9 permq_9;
mov ymm9_a permq_a;
mov ymm9_b permq_b;
mov ymm9_c permq_c;
mov ymm9_d permq_d;
mov ymm9_e permq_e;
mov ymm9_f permq_f;
(* vpshufb %ymm1,%ymm3,%ymm3                       #! PC = 0x555555559c6c *)
assert true && ymm1_0 = 0x0100@16;
mov shuf_0 ymm3_0;
assert true && ymm1_1 = 0x0504@16;
mov shuf_1 ymm3_2;
assert true && ymm1_2 = 0x0908@16;
mov shuf_2 ymm3_4;
assert true && ymm1_3 = 0x0d0c@16;
mov shuf_3 ymm3_6;
assert true && ymm1_4 = 0x0302@16;
mov shuf_4 ymm3_1;
assert true && ymm1_5 = 0x0706@16;
mov shuf_5 ymm3_3;
assert true && ymm1_6 = 0x0b0a@16;
mov shuf_6 ymm3_5;
assert true && ymm1_7 = 0x0f0e@16;
mov shuf_7 ymm3_7;
assert true && ymm1_8 = 0x0100@16;
mov shuf_8 ymm3_8;
assert true && ymm1_9 = 0x0504@16;
mov shuf_9 ymm3_a;
assert true && ymm1_a = 0x0908@16;
mov shuf_a ymm3_c;
assert true && ymm1_b = 0x0d0c@16;
mov shuf_b ymm3_e;
assert true && ymm1_c = 0x0302@16;
mov shuf_c ymm3_9;
assert true && ymm1_d = 0x0706@16;
mov shuf_d ymm3_b;
assert true && ymm1_e = 0x0b0a@16;
mov shuf_e ymm3_d;
assert true && ymm1_f = 0x0f0e@16;
mov shuf_f ymm3_f;
mov ymm3_0 shuf_0;
mov ymm3_1 shuf_1;
mov ymm3_2 shuf_2;
mov ymm3_3 shuf_3;
mov ymm3_4 shuf_4;
mov ymm3_5 shuf_5;
mov ymm3_6 shuf_6;
mov ymm3_7 shuf_7;
mov ymm3_8 shuf_8;
mov ymm3_9 shuf_9;
mov ymm3_a shuf_a;
mov ymm3_b shuf_b;
mov ymm3_c shuf_c;
mov ymm3_d shuf_d;
mov ymm3_e shuf_e;
mov ymm3_f shuf_f;
(* vpermq $0xd8,%ymm3,%ymm3                        #! PC = 0x555555559c71 *)
mov permq_0 ymm3_0;
mov permq_1 ymm3_1;
mov permq_2 ymm3_2;
mov permq_3 ymm3_3;
mov permq_4 ymm3_8;
mov permq_5 ymm3_9;
mov permq_6 ymm3_a;
mov permq_7 ymm3_b;
mov permq_8 ymm3_4;
mov permq_9 ymm3_5;
mov permq_a ymm3_6;
mov permq_b ymm3_7;
mov permq_c ymm3_c;
mov permq_d ymm3_d;
mov permq_e ymm3_e;
mov permq_f ymm3_f;
mov ymm3_0 permq_0;
mov ymm3_1 permq_1;
mov ymm3_2 permq_2;
mov ymm3_3 permq_3;
mov ymm3_4 permq_4;
mov ymm3_5 permq_5;
mov ymm3_6 permq_6;
mov ymm3_7 permq_7;
mov ymm3_8 permq_8;
mov ymm3_9 permq_9;
mov ymm3_a permq_a;
mov ymm3_b permq_b;
mov ymm3_c permq_c;
mov ymm3_d permq_d;
mov ymm3_e permq_e;
mov ymm3_f permq_f;
(* vpshufb %ymm1,%ymm7,%ymm7                       #! PC = 0x555555559c77 *)
assert true && ymm1_0 = 0x0100@16;
mov shuf_0 ymm7_0;
assert true && ymm1_1 = 0x0504@16;
mov shuf_1 ymm7_2;
assert true && ymm1_2 = 0x0908@16;
mov shuf_2 ymm7_4;
assert true && ymm1_3 = 0x0d0c@16;
mov shuf_3 ymm7_6;
assert true && ymm1_4 = 0x0302@16;
mov shuf_4 ymm7_1;
assert true && ymm1_5 = 0x0706@16;
mov shuf_5 ymm7_3;
assert true && ymm1_6 = 0x0b0a@16;
mov shuf_6 ymm7_5;
assert true && ymm1_7 = 0x0f0e@16;
mov shuf_7 ymm7_7;
assert true && ymm1_8 = 0x0100@16;
mov shuf_8 ymm7_8;
assert true && ymm1_9 = 0x0504@16;
mov shuf_9 ymm7_a;
assert true && ymm1_a = 0x0908@16;
mov shuf_a ymm7_c;
assert true && ymm1_b = 0x0d0c@16;
mov shuf_b ymm7_e;
assert true && ymm1_c = 0x0302@16;
mov shuf_c ymm7_9;
assert true && ymm1_d = 0x0706@16;
mov shuf_d ymm7_b;
assert true && ymm1_e = 0x0b0a@16;
mov shuf_e ymm7_d;
assert true && ymm1_f = 0x0f0e@16;
mov shuf_f ymm7_f;
mov ymm7_0 shuf_0;
mov ymm7_1 shuf_1;
mov ymm7_2 shuf_2;
mov ymm7_3 shuf_3;
mov ymm7_4 shuf_4;
mov ymm7_5 shuf_5;
mov ymm7_6 shuf_6;
mov ymm7_7 shuf_7;
mov ymm7_8 shuf_8;
mov ymm7_9 shuf_9;
mov ymm7_a shuf_a;
mov ymm7_b shuf_b;
mov ymm7_c shuf_c;
mov ymm7_d shuf_d;
mov ymm7_e shuf_e;
mov ymm7_f shuf_f;
(* vpermq $0xd8,%ymm7,%ymm7                        #! PC = 0x555555559c7c *)
mov permq_0 ymm7_0;
mov permq_1 ymm7_1;
mov permq_2 ymm7_2;
mov permq_3 ymm7_3;
mov permq_4 ymm7_8;
mov permq_5 ymm7_9;
mov permq_6 ymm7_a;
mov permq_7 ymm7_b;
mov permq_8 ymm7_4;
mov permq_9 ymm7_5;
mov permq_a ymm7_6;
mov permq_b ymm7_7;
mov permq_c ymm7_c;
mov permq_d ymm7_d;
mov permq_e ymm7_e;
mov permq_f ymm7_f;
mov ymm7_0 permq_0;
mov ymm7_1 permq_1;
mov ymm7_2 permq_2;
mov ymm7_3 permq_3;
mov ymm7_4 permq_4;
mov ymm7_5 permq_5;
mov ymm7_6 permq_6;
mov ymm7_7 permq_7;
mov ymm7_8 permq_8;
mov ymm7_9 permq_9;
mov ymm7_a permq_a;
mov ymm7_b permq_b;
mov ymm7_c permq_c;
mov ymm7_d permq_d;
mov ymm7_e permq_e;
mov ymm7_f permq_f;
(* vpshufb %ymm1,%ymm6,%ymm6                       #! PC = 0x555555559c82 *)
assert true && ymm1_0 = 0x0100@16;
mov shuf_0 ymm6_0;
assert true && ymm1_1 = 0x0504@16;
mov shuf_1 ymm6_2;
assert true && ymm1_2 = 0x0908@16;
mov shuf_2 ymm6_4;
assert true && ymm1_3 = 0x0d0c@16;
mov shuf_3 ymm6_6;
assert true && ymm1_4 = 0x0302@16;
mov shuf_4 ymm6_1;
assert true && ymm1_5 = 0x0706@16;
mov shuf_5 ymm6_3;
assert true && ymm1_6 = 0x0b0a@16;
mov shuf_6 ymm6_5;
assert true && ymm1_7 = 0x0f0e@16;
mov shuf_7 ymm6_7;
assert true && ymm1_8 = 0x0100@16;
mov shuf_8 ymm6_8;
assert true && ymm1_9 = 0x0504@16;
mov shuf_9 ymm6_a;
assert true && ymm1_a = 0x0908@16;
mov shuf_a ymm6_c;
assert true && ymm1_b = 0x0d0c@16;
mov shuf_b ymm6_e;
assert true && ymm1_c = 0x0302@16;
mov shuf_c ymm6_9;
assert true && ymm1_d = 0x0706@16;
mov shuf_d ymm6_b;
assert true && ymm1_e = 0x0b0a@16;
mov shuf_e ymm6_d;
assert true && ymm1_f = 0x0f0e@16;
mov shuf_f ymm6_f;
mov ymm6_0 shuf_0;
mov ymm6_1 shuf_1;
mov ymm6_2 shuf_2;
mov ymm6_3 shuf_3;
mov ymm6_4 shuf_4;
mov ymm6_5 shuf_5;
mov ymm6_6 shuf_6;
mov ymm6_7 shuf_7;
mov ymm6_8 shuf_8;
mov ymm6_9 shuf_9;
mov ymm6_a shuf_a;
mov ymm6_b shuf_b;
mov ymm6_c shuf_c;
mov ymm6_d shuf_d;
mov ymm6_e shuf_e;
mov ymm6_f shuf_f;
(* vpermq $0xd8,%ymm6,%ymm6                        #! PC = 0x555555559c87 *)
mov permq_0 ymm6_0;
mov permq_1 ymm6_1;
mov permq_2 ymm6_2;
mov permq_3 ymm6_3;
mov permq_4 ymm6_8;
mov permq_5 ymm6_9;
mov permq_6 ymm6_a;
mov permq_7 ymm6_b;
mov permq_8 ymm6_4;
mov permq_9 ymm6_5;
mov permq_a ymm6_6;
mov permq_b ymm6_7;
mov permq_c ymm6_c;
mov permq_d ymm6_d;
mov permq_e ymm6_e;
mov permq_f ymm6_f;
mov ymm6_0 permq_0;
mov ymm6_1 permq_1;
mov ymm6_2 permq_2;
mov ymm6_3 permq_3;
mov ymm6_4 permq_4;
mov ymm6_5 permq_5;
mov ymm6_6 permq_6;
mov ymm6_7 permq_7;
mov ymm6_8 permq_8;
mov ymm6_9 permq_9;
mov ymm6_a permq_a;
mov ymm6_b permq_b;
mov ymm6_c permq_c;
mov ymm6_d permq_d;
mov ymm6_e permq_e;
mov ymm6_f permq_f;
(* vpshufb %ymm1,%ymm5,%ymm5                       #! PC = 0x555555559c8d *)
assert true && ymm1_0 = 0x0100@16;
mov shuf_0 ymm5_0;
assert true && ymm1_1 = 0x0504@16;
mov shuf_1 ymm5_2;
assert true && ymm1_2 = 0x0908@16;
mov shuf_2 ymm5_4;
assert true && ymm1_3 = 0x0d0c@16;
mov shuf_3 ymm5_6;
assert true && ymm1_4 = 0x0302@16;
mov shuf_4 ymm5_1;
assert true && ymm1_5 = 0x0706@16;
mov shuf_5 ymm5_3;
assert true && ymm1_6 = 0x0b0a@16;
mov shuf_6 ymm5_5;
assert true && ymm1_7 = 0x0f0e@16;
mov shuf_7 ymm5_7;
assert true && ymm1_8 = 0x0100@16;
mov shuf_8 ymm5_8;
assert true && ymm1_9 = 0x0504@16;
mov shuf_9 ymm5_a;
assert true && ymm1_a = 0x0908@16;
mov shuf_a ymm5_c;
assert true && ymm1_b = 0x0d0c@16;
mov shuf_b ymm5_e;
assert true && ymm1_c = 0x0302@16;
mov shuf_c ymm5_9;
assert true && ymm1_d = 0x0706@16;
mov shuf_d ymm5_b;
assert true && ymm1_e = 0x0b0a@16;
mov shuf_e ymm5_d;
assert true && ymm1_f = 0x0f0e@16;
mov shuf_f ymm5_f;
mov ymm5_0 shuf_0;
mov ymm5_1 shuf_1;
mov ymm5_2 shuf_2;
mov ymm5_3 shuf_3;
mov ymm5_4 shuf_4;
mov ymm5_5 shuf_5;
mov ymm5_6 shuf_6;
mov ymm5_7 shuf_7;
mov ymm5_8 shuf_8;
mov ymm5_9 shuf_9;
mov ymm5_a shuf_a;
mov ymm5_b shuf_b;
mov ymm5_c shuf_c;
mov ymm5_d shuf_d;
mov ymm5_e shuf_e;
mov ymm5_f shuf_f;
(* vpermq $0xd8,%ymm5,%ymm5                        #! PC = 0x555555559c92 *)
mov permq_0 ymm5_0;
mov permq_1 ymm5_1;
mov permq_2 ymm5_2;
mov permq_3 ymm5_3;
mov permq_4 ymm5_8;
mov permq_5 ymm5_9;
mov permq_6 ymm5_a;
mov permq_7 ymm5_b;
mov permq_8 ymm5_4;
mov permq_9 ymm5_5;
mov permq_a ymm5_6;
mov permq_b ymm5_7;
mov permq_c ymm5_c;
mov permq_d ymm5_d;
mov permq_e ymm5_e;
mov permq_f ymm5_f;
mov ymm5_0 permq_0;
mov ymm5_1 permq_1;
mov ymm5_2 permq_2;
mov ymm5_3 permq_3;
mov ymm5_4 permq_4;
mov ymm5_5 permq_5;
mov ymm5_6 permq_6;
mov ymm5_7 permq_7;
mov ymm5_8 permq_8;
mov ymm5_9 permq_9;
mov ymm5_a permq_a;
mov ymm5_b permq_b;
mov ymm5_c permq_c;
mov ymm5_d permq_d;
mov ymm5_e permq_e;
mov ymm5_f permq_f;
(* vpshufb %ymm1,%ymm8,%ymm8                       #! PC = 0x555555559c98 *)
assert true && ymm1_0 = 0x0100@16;
mov shuf_0 ymm8_0;
assert true && ymm1_1 = 0x0504@16;
mov shuf_1 ymm8_2;
assert true && ymm1_2 = 0x0908@16;
mov shuf_2 ymm8_4;
assert true && ymm1_3 = 0x0d0c@16;
mov shuf_3 ymm8_6;
assert true && ymm1_4 = 0x0302@16;
mov shuf_4 ymm8_1;
assert true && ymm1_5 = 0x0706@16;
mov shuf_5 ymm8_3;
assert true && ymm1_6 = 0x0b0a@16;
mov shuf_6 ymm8_5;
assert true && ymm1_7 = 0x0f0e@16;
mov shuf_7 ymm8_7;
assert true && ymm1_8 = 0x0100@16;
mov shuf_8 ymm8_8;
assert true && ymm1_9 = 0x0504@16;
mov shuf_9 ymm8_a;
assert true && ymm1_a = 0x0908@16;
mov shuf_a ymm8_c;
assert true && ymm1_b = 0x0d0c@16;
mov shuf_b ymm8_e;
assert true && ymm1_c = 0x0302@16;
mov shuf_c ymm8_9;
assert true && ymm1_d = 0x0706@16;
mov shuf_d ymm8_b;
assert true && ymm1_e = 0x0b0a@16;
mov shuf_e ymm8_d;
assert true && ymm1_f = 0x0f0e@16;
mov shuf_f ymm8_f;
mov ymm8_0 shuf_0;
mov ymm8_1 shuf_1;
mov ymm8_2 shuf_2;
mov ymm8_3 shuf_3;
mov ymm8_4 shuf_4;
mov ymm8_5 shuf_5;
mov ymm8_6 shuf_6;
mov ymm8_7 shuf_7;
mov ymm8_8 shuf_8;
mov ymm8_9 shuf_9;
mov ymm8_a shuf_a;
mov ymm8_b shuf_b;
mov ymm8_c shuf_c;
mov ymm8_d shuf_d;
mov ymm8_e shuf_e;
mov ymm8_f shuf_f;
(* vpermq $0xd8,%ymm8,%ymm8                        #! PC = 0x555555559c9d *)
mov permq_0 ymm8_0;
mov permq_1 ymm8_1;
mov permq_2 ymm8_2;
mov permq_3 ymm8_3;
mov permq_4 ymm8_8;
mov permq_5 ymm8_9;
mov permq_6 ymm8_a;
mov permq_7 ymm8_b;
mov permq_8 ymm8_4;
mov permq_9 ymm8_5;
mov permq_a ymm8_6;
mov permq_b ymm8_7;
mov permq_c ymm8_c;
mov permq_d ymm8_d;
mov permq_e ymm8_e;
mov permq_f ymm8_f;
mov ymm8_0 permq_0;
mov ymm8_1 permq_1;
mov ymm8_2 permq_2;
mov ymm8_3 permq_3;
mov ymm8_4 permq_4;
mov ymm8_5 permq_5;
mov ymm8_6 permq_6;
mov ymm8_7 permq_7;
mov ymm8_8 permq_8;
mov ymm8_9 permq_9;
mov ymm8_a permq_a;
mov ymm8_b permq_b;
mov ymm8_c permq_c;
mov ymm8_d permq_d;
mov ymm8_e permq_e;
mov ymm8_f permq_f;
(* vpshufb %ymm1,%ymm4,%ymm4                       #! PC = 0x555555559ca3 *)
assert true && ymm1_0 = 0x0100@16;
mov shuf_0 ymm4_0;
assert true && ymm1_1 = 0x0504@16;
mov shuf_1 ymm4_2;
assert true && ymm1_2 = 0x0908@16;
mov shuf_2 ymm4_4;
assert true && ymm1_3 = 0x0d0c@16;
mov shuf_3 ymm4_6;
assert true && ymm1_4 = 0x0302@16;
mov shuf_4 ymm4_1;
assert true && ymm1_5 = 0x0706@16;
mov shuf_5 ymm4_3;
assert true && ymm1_6 = 0x0b0a@16;
mov shuf_6 ymm4_5;
assert true && ymm1_7 = 0x0f0e@16;
mov shuf_7 ymm4_7;
assert true && ymm1_8 = 0x0100@16;
mov shuf_8 ymm4_8;
assert true && ymm1_9 = 0x0504@16;
mov shuf_9 ymm4_a;
assert true && ymm1_a = 0x0908@16;
mov shuf_a ymm4_c;
assert true && ymm1_b = 0x0d0c@16;
mov shuf_b ymm4_e;
assert true && ymm1_c = 0x0302@16;
mov shuf_c ymm4_9;
assert true && ymm1_d = 0x0706@16;
mov shuf_d ymm4_b;
assert true && ymm1_e = 0x0b0a@16;
mov shuf_e ymm4_d;
assert true && ymm1_f = 0x0f0e@16;
mov shuf_f ymm4_f;
mov ymm4_0 shuf_0;
mov ymm4_1 shuf_1;
mov ymm4_2 shuf_2;
mov ymm4_3 shuf_3;
mov ymm4_4 shuf_4;
mov ymm4_5 shuf_5;
mov ymm4_6 shuf_6;
mov ymm4_7 shuf_7;
mov ymm4_8 shuf_8;
mov ymm4_9 shuf_9;
mov ymm4_a shuf_a;
mov ymm4_b shuf_b;
mov ymm4_c shuf_c;
mov ymm4_d shuf_d;
mov ymm4_e shuf_e;
mov ymm4_f shuf_f;
(* vpermq $0xd8,%ymm4,%ymm4                        #! PC = 0x555555559ca8 *)
mov permq_0 ymm4_0;
mov permq_1 ymm4_1;
mov permq_2 ymm4_2;
mov permq_3 ymm4_3;
mov permq_4 ymm4_8;
mov permq_5 ymm4_9;
mov permq_6 ymm4_a;
mov permq_7 ymm4_b;
mov permq_8 ymm4_4;
mov permq_9 ymm4_5;
mov permq_a ymm4_6;
mov permq_b ymm4_7;
mov permq_c ymm4_c;
mov permq_d ymm4_d;
mov permq_e ymm4_e;
mov permq_f ymm4_f;
mov ymm4_0 permq_0;
mov ymm4_1 permq_1;
mov ymm4_2 permq_2;
mov ymm4_3 permq_3;
mov ymm4_4 permq_4;
mov ymm4_5 permq_5;
mov ymm4_6 permq_6;
mov ymm4_7 permq_7;
mov ymm4_8 permq_8;
mov ymm4_9 permq_9;
mov ymm4_a permq_a;
mov ymm4_b permq_b;
mov ymm4_c permq_c;
mov ymm4_d permq_d;
mov ymm4_e permq_e;
mov ymm4_f permq_f;
(* vpshufb %ymm1,%ymm11,%ymm11                     #! PC = 0x555555559cae *)
assert true && ymm1_0 = 0x0100@16;
mov shuf_0 ymm11_0;
assert true && ymm1_1 = 0x0504@16;
mov shuf_1 ymm11_2;
assert true && ymm1_2 = 0x0908@16;
mov shuf_2 ymm11_4;
assert true && ymm1_3 = 0x0d0c@16;
mov shuf_3 ymm11_6;
assert true && ymm1_4 = 0x0302@16;
mov shuf_4 ymm11_1;
assert true && ymm1_5 = 0x0706@16;
mov shuf_5 ymm11_3;
assert true && ymm1_6 = 0x0b0a@16;
mov shuf_6 ymm11_5;
assert true && ymm1_7 = 0x0f0e@16;
mov shuf_7 ymm11_7;
assert true && ymm1_8 = 0x0100@16;
mov shuf_8 ymm11_8;
assert true && ymm1_9 = 0x0504@16;
mov shuf_9 ymm11_a;
assert true && ymm1_a = 0x0908@16;
mov shuf_a ymm11_c;
assert true && ymm1_b = 0x0d0c@16;
mov shuf_b ymm11_e;
assert true && ymm1_c = 0x0302@16;
mov shuf_c ymm11_9;
assert true && ymm1_d = 0x0706@16;
mov shuf_d ymm11_b;
assert true && ymm1_e = 0x0b0a@16;
mov shuf_e ymm11_d;
assert true && ymm1_f = 0x0f0e@16;
mov shuf_f ymm11_f;
mov ymm11_0 shuf_0;
mov ymm11_1 shuf_1;
mov ymm11_2 shuf_2;
mov ymm11_3 shuf_3;
mov ymm11_4 shuf_4;
mov ymm11_5 shuf_5;
mov ymm11_6 shuf_6;
mov ymm11_7 shuf_7;
mov ymm11_8 shuf_8;
mov ymm11_9 shuf_9;
mov ymm11_a shuf_a;
mov ymm11_b shuf_b;
mov ymm11_c shuf_c;
mov ymm11_d shuf_d;
mov ymm11_e shuf_e;
mov ymm11_f shuf_f;
(* vpermq $0xd8,%ymm11,%ymm11                      #! PC = 0x555555559cb3 *)
mov permq_0 ymm11_0;
mov permq_1 ymm11_1;
mov permq_2 ymm11_2;
mov permq_3 ymm11_3;
mov permq_4 ymm11_8;
mov permq_5 ymm11_9;
mov permq_6 ymm11_a;
mov permq_7 ymm11_b;
mov permq_8 ymm11_4;
mov permq_9 ymm11_5;
mov permq_a ymm11_6;
mov permq_b ymm11_7;
mov permq_c ymm11_c;
mov permq_d ymm11_d;
mov permq_e ymm11_e;
mov permq_f ymm11_f;
mov ymm11_0 permq_0;
mov ymm11_1 permq_1;
mov ymm11_2 permq_2;
mov ymm11_3 permq_3;
mov ymm11_4 permq_4;
mov ymm11_5 permq_5;
mov ymm11_6 permq_6;
mov ymm11_7 permq_7;
mov ymm11_8 permq_8;
mov ymm11_9 permq_9;
mov ymm11_a permq_a;
mov ymm11_b permq_b;
mov ymm11_c permq_c;
mov ymm11_d permq_d;
mov ymm11_e permq_e;
mov ymm11_f permq_f;
(* vpunpcklwd %ymm3,%ymm9,%ymm10                   #! PC = 0x555555559cb9 *)
mov lwd_0 ymm9_0;
mov lwd_1 ymm3_0;
mov lwd_2 ymm9_1;
mov lwd_3 ymm3_1;
mov lwd_4 ymm9_2;
mov lwd_5 ymm3_2;
mov lwd_6 ymm9_3;
mov lwd_7 ymm3_3;
mov lwd_8 ymm9_8;
mov lwd_9 ymm3_8;
mov lwd_a ymm9_9;
mov lwd_b ymm3_9;
mov lwd_c ymm9_a;
mov lwd_d ymm3_a;
mov lwd_e ymm9_b;
mov lwd_f ymm3_b;
mov ymm10_0 lwd_0;
mov ymm10_1 lwd_1;
mov ymm10_2 lwd_2;
mov ymm10_3 lwd_3;
mov ymm10_4 lwd_4;
mov ymm10_5 lwd_5;
mov ymm10_6 lwd_6;
mov ymm10_7 lwd_7;
mov ymm10_8 lwd_8;
mov ymm10_9 lwd_9;
mov ymm10_a lwd_a;
mov ymm10_b lwd_b;
mov ymm10_c lwd_c;
mov ymm10_d lwd_d;
mov ymm10_e lwd_e;
mov ymm10_f lwd_f;
(* vpunpckhwd %ymm3,%ymm9,%ymm3                    #! PC = 0x555555559cbd *)
mov hwd_0 ymm9_4;
mov hwd_1 ymm3_4;
mov hwd_2 ymm9_5;
mov hwd_3 ymm3_5;
mov hwd_4 ymm9_6;
mov hwd_5 ymm3_6;
mov hwd_6 ymm9_7;
mov hwd_7 ymm3_7;
mov hwd_8 ymm9_c;
mov hwd_9 ymm3_c;
mov hwd_a ymm9_d;
mov hwd_b ymm3_d;
mov hwd_c ymm9_e;
mov hwd_d ymm3_e;
mov hwd_e ymm9_f;
mov hwd_f ymm3_f;
mov ymm3_0 hwd_0;
mov ymm3_1 hwd_1;
mov ymm3_2 hwd_2;
mov ymm3_3 hwd_3;
mov ymm3_4 hwd_4;
mov ymm3_5 hwd_5;
mov ymm3_6 hwd_6;
mov ymm3_7 hwd_7;
mov ymm3_8 hwd_8;
mov ymm3_9 hwd_9;
mov ymm3_a hwd_a;
mov ymm3_b hwd_b;
mov ymm3_c hwd_c;
mov ymm3_d hwd_d;
mov ymm3_e hwd_e;
mov ymm3_f hwd_f;
(* vpunpcklwd %ymm6,%ymm7,%ymm9                    #! PC = 0x555555559cc1 *)
mov lwd_0 ymm7_0;
mov lwd_1 ymm6_0;
mov lwd_2 ymm7_1;
mov lwd_3 ymm6_1;
mov lwd_4 ymm7_2;
mov lwd_5 ymm6_2;
mov lwd_6 ymm7_3;
mov lwd_7 ymm6_3;
mov lwd_8 ymm7_8;
mov lwd_9 ymm6_8;
mov lwd_a ymm7_9;
mov lwd_b ymm6_9;
mov lwd_c ymm7_a;
mov lwd_d ymm6_a;
mov lwd_e ymm7_b;
mov lwd_f ymm6_b;
mov ymm9_0 lwd_0;
mov ymm9_1 lwd_1;
mov ymm9_2 lwd_2;
mov ymm9_3 lwd_3;
mov ymm9_4 lwd_4;
mov ymm9_5 lwd_5;
mov ymm9_6 lwd_6;
mov ymm9_7 lwd_7;
mov ymm9_8 lwd_8;
mov ymm9_9 lwd_9;
mov ymm9_a lwd_a;
mov ymm9_b lwd_b;
mov ymm9_c lwd_c;
mov ymm9_d lwd_d;
mov ymm9_e lwd_e;
mov ymm9_f lwd_f;
(* vpunpckhwd %ymm6,%ymm7,%ymm6                    #! PC = 0x555555559cc5 *)
mov hwd_0 ymm7_4;
mov hwd_1 ymm6_4;
mov hwd_2 ymm7_5;
mov hwd_3 ymm6_5;
mov hwd_4 ymm7_6;
mov hwd_5 ymm6_6;
mov hwd_6 ymm7_7;
mov hwd_7 ymm6_7;
mov hwd_8 ymm7_c;
mov hwd_9 ymm6_c;
mov hwd_a ymm7_d;
mov hwd_b ymm6_d;
mov hwd_c ymm7_e;
mov hwd_d ymm6_e;
mov hwd_e ymm7_f;
mov hwd_f ymm6_f;
mov ymm6_0 hwd_0;
mov ymm6_1 hwd_1;
mov ymm6_2 hwd_2;
mov ymm6_3 hwd_3;
mov ymm6_4 hwd_4;
mov ymm6_5 hwd_5;
mov ymm6_6 hwd_6;
mov ymm6_7 hwd_7;
mov ymm6_8 hwd_8;
mov ymm6_9 hwd_9;
mov ymm6_a hwd_a;
mov ymm6_b hwd_b;
mov ymm6_c hwd_c;
mov ymm6_d hwd_d;
mov ymm6_e hwd_e;
mov ymm6_f hwd_f;
(* vpunpcklwd %ymm8,%ymm5,%ymm7                    #! PC = 0x555555559cc9 *)
mov lwd_0 ymm5_0;
mov lwd_1 ymm8_0;
mov lwd_2 ymm5_1;
mov lwd_3 ymm8_1;
mov lwd_4 ymm5_2;
mov lwd_5 ymm8_2;
mov lwd_6 ymm5_3;
mov lwd_7 ymm8_3;
mov lwd_8 ymm5_8;
mov lwd_9 ymm8_8;
mov lwd_a ymm5_9;
mov lwd_b ymm8_9;
mov lwd_c ymm5_a;
mov lwd_d ymm8_a;
mov lwd_e ymm5_b;
mov lwd_f ymm8_b;
mov ymm7_0 lwd_0;
mov ymm7_1 lwd_1;
mov ymm7_2 lwd_2;
mov ymm7_3 lwd_3;
mov ymm7_4 lwd_4;
mov ymm7_5 lwd_5;
mov ymm7_6 lwd_6;
mov ymm7_7 lwd_7;
mov ymm7_8 lwd_8;
mov ymm7_9 lwd_9;
mov ymm7_a lwd_a;
mov ymm7_b lwd_b;
mov ymm7_c lwd_c;
mov ymm7_d lwd_d;
mov ymm7_e lwd_e;
mov ymm7_f lwd_f;
(* vpunpckhwd %ymm8,%ymm5,%ymm8                    #! PC = 0x555555559cce *)
mov hwd_0 ymm5_4;
mov hwd_1 ymm8_4;
mov hwd_2 ymm5_5;
mov hwd_3 ymm8_5;
mov hwd_4 ymm5_6;
mov hwd_5 ymm8_6;
mov hwd_6 ymm5_7;
mov hwd_7 ymm8_7;
mov hwd_8 ymm5_c;
mov hwd_9 ymm8_c;
mov hwd_a ymm5_d;
mov hwd_b ymm8_d;
mov hwd_c ymm5_e;
mov hwd_d ymm8_e;
mov hwd_e ymm5_f;
mov hwd_f ymm8_f;
mov ymm8_0 hwd_0;
mov ymm8_1 hwd_1;
mov ymm8_2 hwd_2;
mov ymm8_3 hwd_3;
mov ymm8_4 hwd_4;
mov ymm8_5 hwd_5;
mov ymm8_6 hwd_6;
mov ymm8_7 hwd_7;
mov ymm8_8 hwd_8;
mov ymm8_9 hwd_9;
mov ymm8_a hwd_a;
mov ymm8_b hwd_b;
mov ymm8_c hwd_c;
mov ymm8_d hwd_d;
mov ymm8_e hwd_e;
mov ymm8_f hwd_f;
(* vpunpcklwd %ymm11,%ymm4,%ymm5                   #! PC = 0x555555559cd3 *)
mov lwd_0 ymm4_0;
mov lwd_1 ymm11_0;
mov lwd_2 ymm4_1;
mov lwd_3 ymm11_1;
mov lwd_4 ymm4_2;
mov lwd_5 ymm11_2;
mov lwd_6 ymm4_3;
mov lwd_7 ymm11_3;
mov lwd_8 ymm4_8;
mov lwd_9 ymm11_8;
mov lwd_a ymm4_9;
mov lwd_b ymm11_9;
mov lwd_c ymm4_a;
mov lwd_d ymm11_a;
mov lwd_e ymm4_b;
mov lwd_f ymm11_b;
mov ymm5_0 lwd_0;
mov ymm5_1 lwd_1;
mov ymm5_2 lwd_2;
mov ymm5_3 lwd_3;
mov ymm5_4 lwd_4;
mov ymm5_5 lwd_5;
mov ymm5_6 lwd_6;
mov ymm5_7 lwd_7;
mov ymm5_8 lwd_8;
mov ymm5_9 lwd_9;
mov ymm5_a lwd_a;
mov ymm5_b lwd_b;
mov ymm5_c lwd_c;
mov ymm5_d lwd_d;
mov ymm5_e lwd_e;
mov ymm5_f lwd_f;
(* vpunpckhwd %ymm11,%ymm4,%ymm11                  #! PC = 0x555555559cd8 *)
mov hwd_0 ymm4_4;
mov hwd_1 ymm11_4;
mov hwd_2 ymm4_5;
mov hwd_3 ymm11_5;
mov hwd_4 ymm4_6;
mov hwd_5 ymm11_6;
mov hwd_6 ymm4_7;
mov hwd_7 ymm11_7;
mov hwd_8 ymm4_c;
mov hwd_9 ymm11_c;
mov hwd_a ymm4_d;
mov hwd_b ymm11_d;
mov hwd_c ymm4_e;
mov hwd_d ymm11_e;
mov hwd_e ymm4_f;
mov hwd_f ymm11_f;
mov ymm11_0 hwd_0;
mov ymm11_1 hwd_1;
mov ymm11_2 hwd_2;
mov ymm11_3 hwd_3;
mov ymm11_4 hwd_4;
mov ymm11_5 hwd_5;
mov ymm11_6 hwd_6;
mov ymm11_7 hwd_7;
mov ymm11_8 hwd_8;
mov ymm11_9 hwd_9;
mov ymm11_a hwd_a;
mov ymm11_b hwd_b;
mov ymm11_c hwd_c;
mov ymm11_d hwd_d;
mov ymm11_e hwd_e;
mov ymm11_f hwd_f;
(* vpbroadcastd 0x170(%rdx),%ymm1                  #! EA = L0x555555561290; Value = 0x18ed15f3860fbeac; PC = 0x555555559cdd *)
mov ymm1_0 L0x555555561290;
mov ymm1_1 L0x555555561292;
mov ymm1_2 L0x555555561290;
mov ymm1_3 L0x555555561292;
mov ymm1_4 L0x555555561290;
mov ymm1_5 L0x555555561292;
mov ymm1_6 L0x555555561290;
mov ymm1_7 L0x555555561292;
mov ymm1_8 L0x555555561290;
mov ymm1_9 L0x555555561292;
mov ymm1_a L0x555555561290;
mov ymm1_b L0x555555561292;
mov ymm1_c L0x555555561290;
mov ymm1_d L0x555555561292;
mov ymm1_e L0x555555561290;
mov ymm1_f L0x555555561292;
(* vpbroadcastd 0x370(%rdx),%ymm2                  #! EA = L0x555555561490; Value = 0xfaedf3f3fc0ff6ac; PC = 0x555555559ce6 *)
mov ymm2_0 L0x555555561490;
mov ymm2_1 L0x555555561492;
mov ymm2_2 L0x555555561490;
mov ymm2_3 L0x555555561492;
mov ymm2_4 L0x555555561490;
mov ymm2_5 L0x555555561492;
mov ymm2_6 L0x555555561490;
mov ymm2_7 L0x555555561492;
mov ymm2_8 L0x555555561490;
mov ymm2_9 L0x555555561492;
mov ymm2_a L0x555555561490;
mov ymm2_b L0x555555561492;
mov ymm2_c L0x555555561490;
mov ymm2_d L0x555555561492;
mov ymm2_e L0x555555561490;
mov ymm2_f L0x555555561492;
(* vpmullw %ymm1,%ymm3,%ymm4                       #! PC = 0x555555559cef *)
smull mulHymm3_0 mulL_0 ymm1_0 ymm3_0;
smull mulHymm3_1 mulL_1 ymm1_1 ymm3_1;
smull mulHymm3_2 mulL_2 ymm1_2 ymm3_2;
smull mulHymm3_3 mulL_3 ymm1_3 ymm3_3;
smull mulHymm3_4 mulL_4 ymm1_4 ymm3_4;
smull mulHymm3_5 mulL_5 ymm1_5 ymm3_5;
smull mulHymm3_6 mulL_6 ymm1_6 ymm3_6;
smull mulHymm3_7 mulL_7 ymm1_7 ymm3_7;
smull mulHymm3_8 mulL_8 ymm1_8 ymm3_8;
smull mulHymm3_9 mulL_9 ymm1_9 ymm3_9;
smull mulHymm3_a mulL_a ymm1_a ymm3_a;
smull mulHymm3_b mulL_b ymm1_b ymm3_b;
smull mulHymm3_c mulL_c ymm1_c ymm3_c;
smull mulHymm3_d mulL_d ymm1_d ymm3_d;
smull mulHymm3_e mulL_e ymm1_e ymm3_e;
smull mulHymm3_f mulL_f ymm1_f ymm3_f;
cast ymm4_0@sint16 mulL_0;
cast ymm4_1@sint16 mulL_1;
cast ymm4_2@sint16 mulL_2;
cast ymm4_3@sint16 mulL_3;
cast ymm4_4@sint16 mulL_4;
cast ymm4_5@sint16 mulL_5;
cast ymm4_6@sint16 mulL_6;
cast ymm4_7@sint16 mulL_7;
cast ymm4_8@sint16 mulL_8;
cast ymm4_9@sint16 mulL_9;
cast ymm4_a@sint16 mulL_a;
cast ymm4_b@sint16 mulL_b;
cast ymm4_c@sint16 mulL_c;
cast ymm4_d@sint16 mulL_d;
cast ymm4_e@sint16 mulL_e;
cast ymm4_f@sint16 mulL_f;
(* vpmulhw %ymm2,%ymm3,%ymm3                       #! PC = 0x555555559cf3 *)
smull mulH_0 mulLymm3_0 ymm3_0 ymm2_0;
smull mulH_1 mulLymm3_1 ymm3_1 ymm2_1;
smull mulH_2 mulLymm3_2 ymm3_2 ymm2_2;
smull mulH_3 mulLymm3_3 ymm3_3 ymm2_3;
smull mulH_4 mulLymm3_4 ymm3_4 ymm2_4;
smull mulH_5 mulLymm3_5 ymm3_5 ymm2_5;
smull mulH_6 mulLymm3_6 ymm3_6 ymm2_6;
smull mulH_7 mulLymm3_7 ymm3_7 ymm2_7;
smull mulH_8 mulLymm3_8 ymm3_8 ymm2_8;
smull mulH_9 mulLymm3_9 ymm3_9 ymm2_9;
smull mulH_a mulLymm3_a ymm3_a ymm2_a;
smull mulH_b mulLymm3_b ymm3_b ymm2_b;
smull mulH_c mulLymm3_c ymm3_c ymm2_c;
smull mulH_d mulLymm3_d ymm3_d ymm2_d;
smull mulH_e mulLymm3_e ymm3_e ymm2_e;
smull mulH_f mulLymm3_f ymm3_f ymm2_f;
mov ymm3_0 mulH_0;
mov ymm3_1 mulH_1;
mov ymm3_2 mulH_2;
mov ymm3_3 mulH_3;
mov ymm3_4 mulH_4;
mov ymm3_5 mulH_5;
mov ymm3_6 mulH_6;
mov ymm3_7 mulH_7;
mov ymm3_8 mulH_8;
mov ymm3_9 mulH_9;
mov ymm3_a mulH_a;
mov ymm3_b mulH_b;
mov ymm3_c mulH_c;
mov ymm3_d mulH_d;
mov ymm3_e mulH_e;
mov ymm3_f mulH_f;
(* vpmulhw %ymm0,%ymm4,%ymm4                       #! PC = 0x555555559cf7 *)
smull mulH_0 red_0 ymm4_0 ymm0_0;
assert true && red_0 = mulLymm3_0;
assume red_0 = mulLymm3_0 && true;
smull mulH_1 red_1 ymm4_1 ymm0_1;
assert true && red_1 = mulLymm3_1;
assume red_1 = mulLymm3_1 && true;
smull mulH_2 red_2 ymm4_2 ymm0_2;
assert true && red_2 = mulLymm3_2;
assume red_2 = mulLymm3_2 && true;
smull mulH_3 red_3 ymm4_3 ymm0_3;
assert true && red_3 = mulLymm3_3;
assume red_3 = mulLymm3_3 && true;
smull mulH_4 red_4 ymm4_4 ymm0_4;
assert true && red_4 = mulLymm3_4;
assume red_4 = mulLymm3_4 && true;
smull mulH_5 red_5 ymm4_5 ymm0_5;
assert true && red_5 = mulLymm3_5;
assume red_5 = mulLymm3_5 && true;
smull mulH_6 red_6 ymm4_6 ymm0_6;
assert true && red_6 = mulLymm3_6;
assume red_6 = mulLymm3_6 && true;
smull mulH_7 red_7 ymm4_7 ymm0_7;
assert true && red_7 = mulLymm3_7;
assume red_7 = mulLymm3_7 && true;
smull mulH_8 red_8 ymm4_8 ymm0_8;
assert true && red_8 = mulLymm3_8;
assume red_8 = mulLymm3_8 && true;
smull mulH_9 red_9 ymm4_9 ymm0_9;
assert true && red_9 = mulLymm3_9;
assume red_9 = mulLymm3_9 && true;
smull mulH_a red_a ymm4_a ymm0_a;
assert true && red_a = mulLymm3_a;
assume red_a = mulLymm3_a && true;
smull mulH_b red_b ymm4_b ymm0_b;
assert true && red_b = mulLymm3_b;
assume red_b = mulLymm3_b && true;
smull mulH_c red_c ymm4_c ymm0_c;
assert true && red_c = mulLymm3_c;
assume red_c = mulLymm3_c && true;
smull mulH_d red_d ymm4_d ymm0_d;
assert true && red_d = mulLymm3_d;
assume red_d = mulLymm3_d && true;
smull mulH_e red_e ymm4_e ymm0_e;
assert true && red_e = mulLymm3_e;
assume red_e = mulLymm3_e && true;
smull mulH_f red_f ymm4_f ymm0_f;
assert true && red_f = mulLymm3_f;
assume red_f = mulLymm3_f && true;
mov ymm4_0 mulH_0;
mov ymm4_1 mulH_1;
mov ymm4_2 mulH_2;
mov ymm4_3 mulH_3;
mov ymm4_4 mulH_4;
mov ymm4_5 mulH_5;
mov ymm4_6 mulH_6;
mov ymm4_7 mulH_7;
mov ymm4_8 mulH_8;
mov ymm4_9 mulH_9;
mov ymm4_a mulH_a;
mov ymm4_b mulH_b;
mov ymm4_c mulH_c;
mov ymm4_d mulH_d;
mov ymm4_e mulH_e;
mov ymm4_f mulH_f;
(* vpsubw %ymm4,%ymm3,%ymm3                        #! PC = 0x555555559cfb *)
sub ymm3_0 ymm3_0 ymm4_0;
sub ymm3_1 ymm3_1 ymm4_1;
sub ymm3_2 ymm3_2 ymm4_2;
sub ymm3_3 ymm3_3 ymm4_3;
sub ymm3_4 ymm3_4 ymm4_4;
sub ymm3_5 ymm3_5 ymm4_5;
sub ymm3_6 ymm3_6 ymm4_6;
sub ymm3_7 ymm3_7 ymm4_7;
sub ymm3_8 ymm3_8 ymm4_8;
sub ymm3_9 ymm3_9 ymm4_9;
sub ymm3_a ymm3_a ymm4_a;
sub ymm3_b ymm3_b ymm4_b;
sub ymm3_c ymm3_c ymm4_c;
sub ymm3_d ymm3_d ymm4_d;
sub ymm3_e ymm3_e ymm4_e;
sub ymm3_f ymm3_f ymm4_f;
(* vpbroadcastd 0x174(%rdx),%ymm1                  #! EA = L0x555555561294; Value = 0xce5d95f018ed15f3; PC = 0x555555559cff *)
mov ymm1_0 L0x555555561294;
mov ymm1_1 L0x555555561296;
mov ymm1_2 L0x555555561294;
mov ymm1_3 L0x555555561296;
mov ymm1_4 L0x555555561294;
mov ymm1_5 L0x555555561296;
mov ymm1_6 L0x555555561294;
mov ymm1_7 L0x555555561296;
mov ymm1_8 L0x555555561294;
mov ymm1_9 L0x555555561296;
mov ymm1_a L0x555555561294;
mov ymm1_b L0x555555561296;
mov ymm1_c L0x555555561294;
mov ymm1_d L0x555555561296;
mov ymm1_e L0x555555561294;
mov ymm1_f L0x555555561296;
(* vpbroadcastd 0x374(%rdx),%ymm2                  #! EA = L0x555555561494; Value = 0x105df5f0faedf3f3; PC = 0x555555559d08 *)
mov ymm2_0 L0x555555561494;
mov ymm2_1 L0x555555561496;
mov ymm2_2 L0x555555561494;
mov ymm2_3 L0x555555561496;
mov ymm2_4 L0x555555561494;
mov ymm2_5 L0x555555561496;
mov ymm2_6 L0x555555561494;
mov ymm2_7 L0x555555561496;
mov ymm2_8 L0x555555561494;
mov ymm2_9 L0x555555561496;
mov ymm2_a L0x555555561494;
mov ymm2_b L0x555555561496;
mov ymm2_c L0x555555561494;
mov ymm2_d L0x555555561496;
mov ymm2_e L0x555555561494;
mov ymm2_f L0x555555561496;
(* vpmullw %ymm1,%ymm6,%ymm4                       #! PC = 0x555555559d11 *)
smull mulHymm6_0 mulL_0 ymm1_0 ymm6_0;
smull mulHymm6_1 mulL_1 ymm1_1 ymm6_1;
smull mulHymm6_2 mulL_2 ymm1_2 ymm6_2;
smull mulHymm6_3 mulL_3 ymm1_3 ymm6_3;
smull mulHymm6_4 mulL_4 ymm1_4 ymm6_4;
smull mulHymm6_5 mulL_5 ymm1_5 ymm6_5;
smull mulHymm6_6 mulL_6 ymm1_6 ymm6_6;
smull mulHymm6_7 mulL_7 ymm1_7 ymm6_7;
smull mulHymm6_8 mulL_8 ymm1_8 ymm6_8;
smull mulHymm6_9 mulL_9 ymm1_9 ymm6_9;
smull mulHymm6_a mulL_a ymm1_a ymm6_a;
smull mulHymm6_b mulL_b ymm1_b ymm6_b;
smull mulHymm6_c mulL_c ymm1_c ymm6_c;
smull mulHymm6_d mulL_d ymm1_d ymm6_d;
smull mulHymm6_e mulL_e ymm1_e ymm6_e;
smull mulHymm6_f mulL_f ymm1_f ymm6_f;
cast ymm4_0@sint16 mulL_0;
cast ymm4_1@sint16 mulL_1;
cast ymm4_2@sint16 mulL_2;
cast ymm4_3@sint16 mulL_3;
cast ymm4_4@sint16 mulL_4;
cast ymm4_5@sint16 mulL_5;
cast ymm4_6@sint16 mulL_6;
cast ymm4_7@sint16 mulL_7;
cast ymm4_8@sint16 mulL_8;
cast ymm4_9@sint16 mulL_9;
cast ymm4_a@sint16 mulL_a;
cast ymm4_b@sint16 mulL_b;
cast ymm4_c@sint16 mulL_c;
cast ymm4_d@sint16 mulL_d;
cast ymm4_e@sint16 mulL_e;
cast ymm4_f@sint16 mulL_f;
(* vpmulhw %ymm2,%ymm6,%ymm6                       #! PC = 0x555555559d15 *)
smull mulH_0 mulLymm6_0 ymm6_0 ymm2_0;
smull mulH_1 mulLymm6_1 ymm6_1 ymm2_1;
smull mulH_2 mulLymm6_2 ymm6_2 ymm2_2;
smull mulH_3 mulLymm6_3 ymm6_3 ymm2_3;
smull mulH_4 mulLymm6_4 ymm6_4 ymm2_4;
smull mulH_5 mulLymm6_5 ymm6_5 ymm2_5;
smull mulH_6 mulLymm6_6 ymm6_6 ymm2_6;
smull mulH_7 mulLymm6_7 ymm6_7 ymm2_7;
smull mulH_8 mulLymm6_8 ymm6_8 ymm2_8;
smull mulH_9 mulLymm6_9 ymm6_9 ymm2_9;
smull mulH_a mulLymm6_a ymm6_a ymm2_a;
smull mulH_b mulLymm6_b ymm6_b ymm2_b;
smull mulH_c mulLymm6_c ymm6_c ymm2_c;
smull mulH_d mulLymm6_d ymm6_d ymm2_d;
smull mulH_e mulLymm6_e ymm6_e ymm2_e;
smull mulH_f mulLymm6_f ymm6_f ymm2_f;
mov ymm6_0 mulH_0;
mov ymm6_1 mulH_1;
mov ymm6_2 mulH_2;
mov ymm6_3 mulH_3;
mov ymm6_4 mulH_4;
mov ymm6_5 mulH_5;
mov ymm6_6 mulH_6;
mov ymm6_7 mulH_7;
mov ymm6_8 mulH_8;
mov ymm6_9 mulH_9;
mov ymm6_a mulH_a;
mov ymm6_b mulH_b;
mov ymm6_c mulH_c;
mov ymm6_d mulH_d;
mov ymm6_e mulH_e;
mov ymm6_f mulH_f;
(* vpmulhw %ymm0,%ymm4,%ymm4                       #! PC = 0x555555559d19 *)
smull mulH_0 red_0 ymm4_0 ymm0_0;
assert true && red_0 = mulLymm6_0;
assume red_0 = mulLymm6_0 && true;
smull mulH_1 red_1 ymm4_1 ymm0_1;
assert true && red_1 = mulLymm6_1;
assume red_1 = mulLymm6_1 && true;
smull mulH_2 red_2 ymm4_2 ymm0_2;
assert true && red_2 = mulLymm6_2;
assume red_2 = mulLymm6_2 && true;
smull mulH_3 red_3 ymm4_3 ymm0_3;
assert true && red_3 = mulLymm6_3;
assume red_3 = mulLymm6_3 && true;
smull mulH_4 red_4 ymm4_4 ymm0_4;
assert true && red_4 = mulLymm6_4;
assume red_4 = mulLymm6_4 && true;
smull mulH_5 red_5 ymm4_5 ymm0_5;
assert true && red_5 = mulLymm6_5;
assume red_5 = mulLymm6_5 && true;
smull mulH_6 red_6 ymm4_6 ymm0_6;
assert true && red_6 = mulLymm6_6;
assume red_6 = mulLymm6_6 && true;
smull mulH_7 red_7 ymm4_7 ymm0_7;
assert true && red_7 = mulLymm6_7;
assume red_7 = mulLymm6_7 && true;
smull mulH_8 red_8 ymm4_8 ymm0_8;
assert true && red_8 = mulLymm6_8;
assume red_8 = mulLymm6_8 && true;
smull mulH_9 red_9 ymm4_9 ymm0_9;
assert true && red_9 = mulLymm6_9;
assume red_9 = mulLymm6_9 && true;
smull mulH_a red_a ymm4_a ymm0_a;
assert true && red_a = mulLymm6_a;
assume red_a = mulLymm6_a && true;
smull mulH_b red_b ymm4_b ymm0_b;
assert true && red_b = mulLymm6_b;
assume red_b = mulLymm6_b && true;
smull mulH_c red_c ymm4_c ymm0_c;
assert true && red_c = mulLymm6_c;
assume red_c = mulLymm6_c && true;
smull mulH_d red_d ymm4_d ymm0_d;
assert true && red_d = mulLymm6_d;
assume red_d = mulLymm6_d && true;
smull mulH_e red_e ymm4_e ymm0_e;
assert true && red_e = mulLymm6_e;
assume red_e = mulLymm6_e && true;
smull mulH_f red_f ymm4_f ymm0_f;
assert true && red_f = mulLymm6_f;
assume red_f = mulLymm6_f && true;
mov ymm4_0 mulH_0;
mov ymm4_1 mulH_1;
mov ymm4_2 mulH_2;
mov ymm4_3 mulH_3;
mov ymm4_4 mulH_4;
mov ymm4_5 mulH_5;
mov ymm4_6 mulH_6;
mov ymm4_7 mulH_7;
mov ymm4_8 mulH_8;
mov ymm4_9 mulH_9;
mov ymm4_a mulH_a;
mov ymm4_b mulH_b;
mov ymm4_c mulH_c;
mov ymm4_d mulH_d;
mov ymm4_e mulH_e;
mov ymm4_f mulH_f;
(* vpsubw %ymm4,%ymm6,%ymm6                        #! PC = 0x555555559d1d *)
sub ymm6_0 ymm6_0 ymm4_0;
sub ymm6_1 ymm6_1 ymm4_1;
sub ymm6_2 ymm6_2 ymm4_2;
sub ymm6_3 ymm6_3 ymm4_3;
sub ymm6_4 ymm6_4 ymm4_4;
sub ymm6_5 ymm6_5 ymm4_5;
sub ymm6_6 ymm6_6 ymm4_6;
sub ymm6_7 ymm6_7 ymm4_7;
sub ymm6_8 ymm6_8 ymm4_8;
sub ymm6_9 ymm6_9 ymm4_9;
sub ymm6_a ymm6_a ymm4_a;
sub ymm6_b ymm6_b ymm4_b;
sub ymm6_c ymm6_c ymm4_c;
sub ymm6_d ymm6_d ymm4_d;
sub ymm6_e ymm6_e ymm4_e;
sub ymm6_f ymm6_f ymm4_f;
(* vpbroadcastd 0x178(%rdx),%ymm1                  #! EA = L0x555555561298; Value = 0xc220023dce5d95f0; PC = 0x555555559d21 *)
mov ymm1_0 L0x555555561298;
mov ymm1_1 L0x55555556129a;
mov ymm1_2 L0x555555561298;
mov ymm1_3 L0x55555556129a;
mov ymm1_4 L0x555555561298;
mov ymm1_5 L0x55555556129a;
mov ymm1_6 L0x555555561298;
mov ymm1_7 L0x55555556129a;
mov ymm1_8 L0x555555561298;
mov ymm1_9 L0x55555556129a;
mov ymm1_a L0x555555561298;
mov ymm1_b L0x55555556129a;
mov ymm1_c L0x555555561298;
mov ymm1_d L0x55555556129a;
mov ymm1_e L0x555555561298;
mov ymm1_f L0x55555556129a;
(* vpbroadcastd 0x378(%rdx),%ymm2                  #! EA = L0x555555561498; Value = 0x0220043d105df5f0; PC = 0x555555559d2a *)
mov ymm2_0 L0x555555561498;
mov ymm2_1 L0x55555556149a;
mov ymm2_2 L0x555555561498;
mov ymm2_3 L0x55555556149a;
mov ymm2_4 L0x555555561498;
mov ymm2_5 L0x55555556149a;
mov ymm2_6 L0x555555561498;
mov ymm2_7 L0x55555556149a;
mov ymm2_8 L0x555555561498;
mov ymm2_9 L0x55555556149a;
mov ymm2_a L0x555555561498;
mov ymm2_b L0x55555556149a;
mov ymm2_c L0x555555561498;
mov ymm2_d L0x55555556149a;
mov ymm2_e L0x555555561498;
mov ymm2_f L0x55555556149a;
(* vpmullw %ymm1,%ymm8,%ymm4                       #! PC = 0x555555559d33 *)
smull mulHymm8_0 mulL_0 ymm1_0 ymm8_0;
smull mulHymm8_1 mulL_1 ymm1_1 ymm8_1;
smull mulHymm8_2 mulL_2 ymm1_2 ymm8_2;
smull mulHymm8_3 mulL_3 ymm1_3 ymm8_3;
smull mulHymm8_4 mulL_4 ymm1_4 ymm8_4;
smull mulHymm8_5 mulL_5 ymm1_5 ymm8_5;
smull mulHymm8_6 mulL_6 ymm1_6 ymm8_6;
smull mulHymm8_7 mulL_7 ymm1_7 ymm8_7;
smull mulHymm8_8 mulL_8 ymm1_8 ymm8_8;
smull mulHymm8_9 mulL_9 ymm1_9 ymm8_9;
smull mulHymm8_a mulL_a ymm1_a ymm8_a;
smull mulHymm8_b mulL_b ymm1_b ymm8_b;
smull mulHymm8_c mulL_c ymm1_c ymm8_c;
smull mulHymm8_d mulL_d ymm1_d ymm8_d;
smull mulHymm8_e mulL_e ymm1_e ymm8_e;
smull mulHymm8_f mulL_f ymm1_f ymm8_f;
cast ymm4_0@sint16 mulL_0;
cast ymm4_1@sint16 mulL_1;
cast ymm4_2@sint16 mulL_2;
cast ymm4_3@sint16 mulL_3;
cast ymm4_4@sint16 mulL_4;
cast ymm4_5@sint16 mulL_5;
cast ymm4_6@sint16 mulL_6;
cast ymm4_7@sint16 mulL_7;
cast ymm4_8@sint16 mulL_8;
cast ymm4_9@sint16 mulL_9;
cast ymm4_a@sint16 mulL_a;
cast ymm4_b@sint16 mulL_b;
cast ymm4_c@sint16 mulL_c;
cast ymm4_d@sint16 mulL_d;
cast ymm4_e@sint16 mulL_e;
cast ymm4_f@sint16 mulL_f;
(* vpmulhw %ymm2,%ymm8,%ymm8                       #! PC = 0x555555559d37 *)
smull mulH_0 mulLymm8_0 ymm8_0 ymm2_0;
smull mulH_1 mulLymm8_1 ymm8_1 ymm2_1;
smull mulH_2 mulLymm8_2 ymm8_2 ymm2_2;
smull mulH_3 mulLymm8_3 ymm8_3 ymm2_3;
smull mulH_4 mulLymm8_4 ymm8_4 ymm2_4;
smull mulH_5 mulLymm8_5 ymm8_5 ymm2_5;
smull mulH_6 mulLymm8_6 ymm8_6 ymm2_6;
smull mulH_7 mulLymm8_7 ymm8_7 ymm2_7;
smull mulH_8 mulLymm8_8 ymm8_8 ymm2_8;
smull mulH_9 mulLymm8_9 ymm8_9 ymm2_9;
smull mulH_a mulLymm8_a ymm8_a ymm2_a;
smull mulH_b mulLymm8_b ymm8_b ymm2_b;
smull mulH_c mulLymm8_c ymm8_c ymm2_c;
smull mulH_d mulLymm8_d ymm8_d ymm2_d;
smull mulH_e mulLymm8_e ymm8_e ymm2_e;
smull mulH_f mulLymm8_f ymm8_f ymm2_f;
mov ymm8_0 mulH_0;
mov ymm8_1 mulH_1;
mov ymm8_2 mulH_2;
mov ymm8_3 mulH_3;
mov ymm8_4 mulH_4;
mov ymm8_5 mulH_5;
mov ymm8_6 mulH_6;
mov ymm8_7 mulH_7;
mov ymm8_8 mulH_8;
mov ymm8_9 mulH_9;
mov ymm8_a mulH_a;
mov ymm8_b mulH_b;
mov ymm8_c mulH_c;
mov ymm8_d mulH_d;
mov ymm8_e mulH_e;
mov ymm8_f mulH_f;
(* vpmulhw %ymm0,%ymm4,%ymm4                       #! PC = 0x555555559d3b *)
smull mulH_0 red_0 ymm4_0 ymm0_0;
assert true && red_0 = mulLymm8_0;
assume red_0 = mulLymm8_0 && true;
smull mulH_1 red_1 ymm4_1 ymm0_1;
assert true && red_1 = mulLymm8_1;
assume red_1 = mulLymm8_1 && true;
smull mulH_2 red_2 ymm4_2 ymm0_2;
assert true && red_2 = mulLymm8_2;
assume red_2 = mulLymm8_2 && true;
smull mulH_3 red_3 ymm4_3 ymm0_3;
assert true && red_3 = mulLymm8_3;
assume red_3 = mulLymm8_3 && true;
smull mulH_4 red_4 ymm4_4 ymm0_4;
assert true && red_4 = mulLymm8_4;
assume red_4 = mulLymm8_4 && true;
smull mulH_5 red_5 ymm4_5 ymm0_5;
assert true && red_5 = mulLymm8_5;
assume red_5 = mulLymm8_5 && true;
smull mulH_6 red_6 ymm4_6 ymm0_6;
assert true && red_6 = mulLymm8_6;
assume red_6 = mulLymm8_6 && true;
smull mulH_7 red_7 ymm4_7 ymm0_7;
assert true && red_7 = mulLymm8_7;
assume red_7 = mulLymm8_7 && true;
smull mulH_8 red_8 ymm4_8 ymm0_8;
assert true && red_8 = mulLymm8_8;
assume red_8 = mulLymm8_8 && true;
smull mulH_9 red_9 ymm4_9 ymm0_9;
assert true && red_9 = mulLymm8_9;
assume red_9 = mulLymm8_9 && true;
smull mulH_a red_a ymm4_a ymm0_a;
assert true && red_a = mulLymm8_a;
assume red_a = mulLymm8_a && true;
smull mulH_b red_b ymm4_b ymm0_b;
assert true && red_b = mulLymm8_b;
assume red_b = mulLymm8_b && true;
smull mulH_c red_c ymm4_c ymm0_c;
assert true && red_c = mulLymm8_c;
assume red_c = mulLymm8_c && true;
smull mulH_d red_d ymm4_d ymm0_d;
assert true && red_d = mulLymm8_d;
assume red_d = mulLymm8_d && true;
smull mulH_e red_e ymm4_e ymm0_e;
assert true && red_e = mulLymm8_e;
assume red_e = mulLymm8_e && true;
smull mulH_f red_f ymm4_f ymm0_f;
assert true && red_f = mulLymm8_f;
assume red_f = mulLymm8_f && true;
mov ymm4_0 mulH_0;
mov ymm4_1 mulH_1;
mov ymm4_2 mulH_2;
mov ymm4_3 mulH_3;
mov ymm4_4 mulH_4;
mov ymm4_5 mulH_5;
mov ymm4_6 mulH_6;
mov ymm4_7 mulH_7;
mov ymm4_8 mulH_8;
mov ymm4_9 mulH_9;
mov ymm4_a mulH_a;
mov ymm4_b mulH_b;
mov ymm4_c mulH_c;
mov ymm4_d mulH_d;
mov ymm4_e mulH_e;
mov ymm4_f mulH_f;
(* vpsubw %ymm4,%ymm8,%ymm8                        #! PC = 0x555555559d3f *)
sub ymm8_0 ymm8_0 ymm4_0;
sub ymm8_1 ymm8_1 ymm4_1;
sub ymm8_2 ymm8_2 ymm4_2;
sub ymm8_3 ymm8_3 ymm4_3;
sub ymm8_4 ymm8_4 ymm4_4;
sub ymm8_5 ymm8_5 ymm4_5;
sub ymm8_6 ymm8_6 ymm4_6;
sub ymm8_7 ymm8_7 ymm4_7;
sub ymm8_8 ymm8_8 ymm4_8;
sub ymm8_9 ymm8_9 ymm4_9;
sub ymm8_a ymm8_a ymm4_a;
sub ymm8_b ymm8_b ymm4_b;
sub ymm8_c ymm8_c ymm4_c;
sub ymm8_d ymm8_d ymm4_d;
sub ymm8_e ymm8_e ymm4_e;
sub ymm8_f ymm8_f ymm4_f;
(* vpbroadcastd 0x17c(%rdx),%ymm1                  #! EA = L0x55555556129c; Value = 0xbf1afd9fc220023d; PC = 0x555555559d43 *)
mov ymm1_0 L0x55555556129c;
mov ymm1_1 L0x55555556129e;
mov ymm1_2 L0x55555556129c;
mov ymm1_3 L0x55555556129e;
mov ymm1_4 L0x55555556129c;
mov ymm1_5 L0x55555556129e;
mov ymm1_6 L0x55555556129c;
mov ymm1_7 L0x55555556129e;
mov ymm1_8 L0x55555556129c;
mov ymm1_9 L0x55555556129e;
mov ymm1_a L0x55555556129c;
mov ymm1_b L0x55555556129e;
mov ymm1_c L0x55555556129c;
mov ymm1_d L0x55555556129e;
mov ymm1_e L0x55555556129c;
mov ymm1_f L0x55555556129e;
(* vpbroadcastd 0x37c(%rdx),%ymm2                  #! EA = L0x55555556149c; Value = 0x031a139f0220043d; PC = 0x555555559d4c *)
mov ymm2_0 L0x55555556149c;
mov ymm2_1 L0x55555556149e;
mov ymm2_2 L0x55555556149c;
mov ymm2_3 L0x55555556149e;
mov ymm2_4 L0x55555556149c;
mov ymm2_5 L0x55555556149e;
mov ymm2_6 L0x55555556149c;
mov ymm2_7 L0x55555556149e;
mov ymm2_8 L0x55555556149c;
mov ymm2_9 L0x55555556149e;
mov ymm2_a L0x55555556149c;
mov ymm2_b L0x55555556149e;
mov ymm2_c L0x55555556149c;
mov ymm2_d L0x55555556149e;
mov ymm2_e L0x55555556149c;
mov ymm2_f L0x55555556149e;
(* vpmullw %ymm1,%ymm11,%ymm4                      #! PC = 0x555555559d55 *)
smull mulHymm11_0 mulL_0 ymm1_0 ymm11_0;
smull mulHymm11_1 mulL_1 ymm1_1 ymm11_1;
smull mulHymm11_2 mulL_2 ymm1_2 ymm11_2;
smull mulHymm11_3 mulL_3 ymm1_3 ymm11_3;
smull mulHymm11_4 mulL_4 ymm1_4 ymm11_4;
smull mulHymm11_5 mulL_5 ymm1_5 ymm11_5;
smull mulHymm11_6 mulL_6 ymm1_6 ymm11_6;
smull mulHymm11_7 mulL_7 ymm1_7 ymm11_7;
smull mulHymm11_8 mulL_8 ymm1_8 ymm11_8;
smull mulHymm11_9 mulL_9 ymm1_9 ymm11_9;
smull mulHymm11_a mulL_a ymm1_a ymm11_a;
smull mulHymm11_b mulL_b ymm1_b ymm11_b;
smull mulHymm11_c mulL_c ymm1_c ymm11_c;
smull mulHymm11_d mulL_d ymm1_d ymm11_d;
smull mulHymm11_e mulL_e ymm1_e ymm11_e;
smull mulHymm11_f mulL_f ymm1_f ymm11_f;
cast ymm4_0@sint16 mulL_0;
cast ymm4_1@sint16 mulL_1;
cast ymm4_2@sint16 mulL_2;
cast ymm4_3@sint16 mulL_3;
cast ymm4_4@sint16 mulL_4;
cast ymm4_5@sint16 mulL_5;
cast ymm4_6@sint16 mulL_6;
cast ymm4_7@sint16 mulL_7;
cast ymm4_8@sint16 mulL_8;
cast ymm4_9@sint16 mulL_9;
cast ymm4_a@sint16 mulL_a;
cast ymm4_b@sint16 mulL_b;
cast ymm4_c@sint16 mulL_c;
cast ymm4_d@sint16 mulL_d;
cast ymm4_e@sint16 mulL_e;
cast ymm4_f@sint16 mulL_f;
(* vpmulhw %ymm2,%ymm11,%ymm11                     #! PC = 0x555555559d59 *)
smull mulH_0 mulLymm11_0 ymm11_0 ymm2_0;
smull mulH_1 mulLymm11_1 ymm11_1 ymm2_1;
smull mulH_2 mulLymm11_2 ymm11_2 ymm2_2;
smull mulH_3 mulLymm11_3 ymm11_3 ymm2_3;
smull mulH_4 mulLymm11_4 ymm11_4 ymm2_4;
smull mulH_5 mulLymm11_5 ymm11_5 ymm2_5;
smull mulH_6 mulLymm11_6 ymm11_6 ymm2_6;
smull mulH_7 mulLymm11_7 ymm11_7 ymm2_7;
smull mulH_8 mulLymm11_8 ymm11_8 ymm2_8;
smull mulH_9 mulLymm11_9 ymm11_9 ymm2_9;
smull mulH_a mulLymm11_a ymm11_a ymm2_a;
smull mulH_b mulLymm11_b ymm11_b ymm2_b;
smull mulH_c mulLymm11_c ymm11_c ymm2_c;
smull mulH_d mulLymm11_d ymm11_d ymm2_d;
smull mulH_e mulLymm11_e ymm11_e ymm2_e;
smull mulH_f mulLymm11_f ymm11_f ymm2_f;
mov ymm11_0 mulH_0;
mov ymm11_1 mulH_1;
mov ymm11_2 mulH_2;
mov ymm11_3 mulH_3;
mov ymm11_4 mulH_4;
mov ymm11_5 mulH_5;
mov ymm11_6 mulH_6;
mov ymm11_7 mulH_7;
mov ymm11_8 mulH_8;
mov ymm11_9 mulH_9;
mov ymm11_a mulH_a;
mov ymm11_b mulH_b;
mov ymm11_c mulH_c;
mov ymm11_d mulH_d;
mov ymm11_e mulH_e;
mov ymm11_f mulH_f;
(* vpmulhw %ymm0,%ymm4,%ymm4                       #! PC = 0x555555559d5d *)
smull mulH_0 red_0 ymm4_0 ymm0_0;
assert true && red_0 = mulLymm11_0;
assume red_0 = mulLymm11_0 && true;
smull mulH_1 red_1 ymm4_1 ymm0_1;
assert true && red_1 = mulLymm11_1;
assume red_1 = mulLymm11_1 && true;
smull mulH_2 red_2 ymm4_2 ymm0_2;
assert true && red_2 = mulLymm11_2;
assume red_2 = mulLymm11_2 && true;
smull mulH_3 red_3 ymm4_3 ymm0_3;
assert true && red_3 = mulLymm11_3;
assume red_3 = mulLymm11_3 && true;
smull mulH_4 red_4 ymm4_4 ymm0_4;
assert true && red_4 = mulLymm11_4;
assume red_4 = mulLymm11_4 && true;
smull mulH_5 red_5 ymm4_5 ymm0_5;
assert true && red_5 = mulLymm11_5;
assume red_5 = mulLymm11_5 && true;
smull mulH_6 red_6 ymm4_6 ymm0_6;
assert true && red_6 = mulLymm11_6;
assume red_6 = mulLymm11_6 && true;
smull mulH_7 red_7 ymm4_7 ymm0_7;
assert true && red_7 = mulLymm11_7;
assume red_7 = mulLymm11_7 && true;
smull mulH_8 red_8 ymm4_8 ymm0_8;
assert true && red_8 = mulLymm11_8;
assume red_8 = mulLymm11_8 && true;
smull mulH_9 red_9 ymm4_9 ymm0_9;
assert true && red_9 = mulLymm11_9;
assume red_9 = mulLymm11_9 && true;
smull mulH_a red_a ymm4_a ymm0_a;
assert true && red_a = mulLymm11_a;
assume red_a = mulLymm11_a && true;
smull mulH_b red_b ymm4_b ymm0_b;
assert true && red_b = mulLymm11_b;
assume red_b = mulLymm11_b && true;
smull mulH_c red_c ymm4_c ymm0_c;
assert true && red_c = mulLymm11_c;
assume red_c = mulLymm11_c && true;
smull mulH_d red_d ymm4_d ymm0_d;
assert true && red_d = mulLymm11_d;
assume red_d = mulLymm11_d && true;
smull mulH_e red_e ymm4_e ymm0_e;
assert true && red_e = mulLymm11_e;
assume red_e = mulLymm11_e && true;
smull mulH_f red_f ymm4_f ymm0_f;
assert true && red_f = mulLymm11_f;
assume red_f = mulLymm11_f && true;
mov ymm4_0 mulH_0;
mov ymm4_1 mulH_1;
mov ymm4_2 mulH_2;
mov ymm4_3 mulH_3;
mov ymm4_4 mulH_4;
mov ymm4_5 mulH_5;
mov ymm4_6 mulH_6;
mov ymm4_7 mulH_7;
mov ymm4_8 mulH_8;
mov ymm4_9 mulH_9;
mov ymm4_a mulH_a;
mov ymm4_b mulH_b;
mov ymm4_c mulH_c;
mov ymm4_d mulH_d;
mov ymm4_e mulH_e;
mov ymm4_f mulH_f;
(* vpsubw %ymm4,%ymm11,%ymm11                      #! PC = 0x555555559d61 *)
sub ymm11_0 ymm11_0 ymm4_0;
sub ymm11_1 ymm11_1 ymm4_1;
sub ymm11_2 ymm11_2 ymm4_2;
sub ymm11_3 ymm11_3 ymm4_3;
sub ymm11_4 ymm11_4 ymm4_4;
sub ymm11_5 ymm11_5 ymm4_5;
sub ymm11_6 ymm11_6 ymm4_6;
sub ymm11_7 ymm11_7 ymm4_7;
sub ymm11_8 ymm11_8 ymm4_8;
sub ymm11_9 ymm11_9 ymm4_9;
sub ymm11_a ymm11_a ymm4_a;
sub ymm11_b ymm11_b ymm4_b;
sub ymm11_c ymm11_c ymm4_c;
sub ymm11_d ymm11_d ymm4_d;
sub ymm11_e ymm11_e ymm4_e;
sub ymm11_f ymm11_f ymm4_f;
(* vpaddw %ymm3,%ymm10,%ymm4                       #! PC = 0x555555559d65 *)
add ymm4_0 ymm10_0 ymm3_0;
add ymm4_1 ymm10_1 ymm3_1;
add ymm4_2 ymm10_2 ymm3_2;
add ymm4_3 ymm10_3 ymm3_3;
add ymm4_4 ymm10_4 ymm3_4;
add ymm4_5 ymm10_5 ymm3_5;
add ymm4_6 ymm10_6 ymm3_6;
add ymm4_7 ymm10_7 ymm3_7;
add ymm4_8 ymm10_8 ymm3_8;
add ymm4_9 ymm10_9 ymm3_9;
add ymm4_a ymm10_a ymm3_a;
add ymm4_b ymm10_b ymm3_b;
add ymm4_c ymm10_c ymm3_c;
add ymm4_d ymm10_d ymm3_d;
add ymm4_e ymm10_e ymm3_e;
add ymm4_f ymm10_f ymm3_f;
(* vpsubw %ymm3,%ymm10,%ymm3                       #! PC = 0x555555559d69 *)
sub ymm3_0 ymm10_0 ymm3_0;
sub ymm3_1 ymm10_1 ymm3_1;
sub ymm3_2 ymm10_2 ymm3_2;
sub ymm3_3 ymm10_3 ymm3_3;
sub ymm3_4 ymm10_4 ymm3_4;
sub ymm3_5 ymm10_5 ymm3_5;
sub ymm3_6 ymm10_6 ymm3_6;
sub ymm3_7 ymm10_7 ymm3_7;
sub ymm3_8 ymm10_8 ymm3_8;
sub ymm3_9 ymm10_9 ymm3_9;
sub ymm3_a ymm10_a ymm3_a;
sub ymm3_b ymm10_b ymm3_b;
sub ymm3_c ymm10_c ymm3_c;
sub ymm3_d ymm10_d ymm3_d;
sub ymm3_e ymm10_e ymm3_e;
sub ymm3_f ymm10_f ymm3_f;
(* vpaddw %ymm6,%ymm9,%ymm10                       #! PC = 0x555555559d6d *)
add ymm10_0 ymm9_0 ymm6_0;
add ymm10_1 ymm9_1 ymm6_1;
add ymm10_2 ymm9_2 ymm6_2;
add ymm10_3 ymm9_3 ymm6_3;
add ymm10_4 ymm9_4 ymm6_4;
add ymm10_5 ymm9_5 ymm6_5;
add ymm10_6 ymm9_6 ymm6_6;
add ymm10_7 ymm9_7 ymm6_7;
add ymm10_8 ymm9_8 ymm6_8;
add ymm10_9 ymm9_9 ymm6_9;
add ymm10_a ymm9_a ymm6_a;
add ymm10_b ymm9_b ymm6_b;
add ymm10_c ymm9_c ymm6_c;
add ymm10_d ymm9_d ymm6_d;
add ymm10_e ymm9_e ymm6_e;
add ymm10_f ymm9_f ymm6_f;
(* vpsubw %ymm6,%ymm9,%ymm6                        #! PC = 0x555555559d71 *)
sub ymm6_0 ymm9_0 ymm6_0;
sub ymm6_1 ymm9_1 ymm6_1;
sub ymm6_2 ymm9_2 ymm6_2;
sub ymm6_3 ymm9_3 ymm6_3;
sub ymm6_4 ymm9_4 ymm6_4;
sub ymm6_5 ymm9_5 ymm6_5;
sub ymm6_6 ymm9_6 ymm6_6;
sub ymm6_7 ymm9_7 ymm6_7;
sub ymm6_8 ymm9_8 ymm6_8;
sub ymm6_9 ymm9_9 ymm6_9;
sub ymm6_a ymm9_a ymm6_a;
sub ymm6_b ymm9_b ymm6_b;
sub ymm6_c ymm9_c ymm6_c;
sub ymm6_d ymm9_d ymm6_d;
sub ymm6_e ymm9_e ymm6_e;
sub ymm6_f ymm9_f ymm6_f;
(* vpaddw %ymm8,%ymm7,%ymm9                        #! PC = 0x555555559d75 *)
add ymm9_0 ymm7_0 ymm8_0;
add ymm9_1 ymm7_1 ymm8_1;
add ymm9_2 ymm7_2 ymm8_2;
add ymm9_3 ymm7_3 ymm8_3;
add ymm9_4 ymm7_4 ymm8_4;
add ymm9_5 ymm7_5 ymm8_5;
add ymm9_6 ymm7_6 ymm8_6;
add ymm9_7 ymm7_7 ymm8_7;
add ymm9_8 ymm7_8 ymm8_8;
add ymm9_9 ymm7_9 ymm8_9;
add ymm9_a ymm7_a ymm8_a;
add ymm9_b ymm7_b ymm8_b;
add ymm9_c ymm7_c ymm8_c;
add ymm9_d ymm7_d ymm8_d;
add ymm9_e ymm7_e ymm8_e;
add ymm9_f ymm7_f ymm8_f;
(* vpsubw %ymm8,%ymm7,%ymm8                        #! PC = 0x555555559d7a *)
sub ymm8_0 ymm7_0 ymm8_0;
sub ymm8_1 ymm7_1 ymm8_1;
sub ymm8_2 ymm7_2 ymm8_2;
sub ymm8_3 ymm7_3 ymm8_3;
sub ymm8_4 ymm7_4 ymm8_4;
sub ymm8_5 ymm7_5 ymm8_5;
sub ymm8_6 ymm7_6 ymm8_6;
sub ymm8_7 ymm7_7 ymm8_7;
sub ymm8_8 ymm7_8 ymm8_8;
sub ymm8_9 ymm7_9 ymm8_9;
sub ymm8_a ymm7_a ymm8_a;
sub ymm8_b ymm7_b ymm8_b;
sub ymm8_c ymm7_c ymm8_c;
sub ymm8_d ymm7_d ymm8_d;
sub ymm8_e ymm7_e ymm8_e;
sub ymm8_f ymm7_f ymm8_f;
(* vpaddw %ymm11,%ymm5,%ymm7                       #! PC = 0x555555559d7f *)
add ymm7_0 ymm5_0 ymm11_0;
add ymm7_1 ymm5_1 ymm11_1;
add ymm7_2 ymm5_2 ymm11_2;
add ymm7_3 ymm5_3 ymm11_3;
add ymm7_4 ymm5_4 ymm11_4;
add ymm7_5 ymm5_5 ymm11_5;
add ymm7_6 ymm5_6 ymm11_6;
add ymm7_7 ymm5_7 ymm11_7;
add ymm7_8 ymm5_8 ymm11_8;
add ymm7_9 ymm5_9 ymm11_9;
add ymm7_a ymm5_a ymm11_a;
add ymm7_b ymm5_b ymm11_b;
add ymm7_c ymm5_c ymm11_c;
add ymm7_d ymm5_d ymm11_d;
add ymm7_e ymm5_e ymm11_e;
add ymm7_f ymm5_f ymm11_f;
(* vpsubw %ymm11,%ymm5,%ymm11                      #! PC = 0x555555559d84 *)
sub ymm11_0 ymm5_0 ymm11_0;
sub ymm11_1 ymm5_1 ymm11_1;
sub ymm11_2 ymm5_2 ymm11_2;
sub ymm11_3 ymm5_3 ymm11_3;
sub ymm11_4 ymm5_4 ymm11_4;
sub ymm11_5 ymm5_5 ymm11_5;
sub ymm11_6 ymm5_6 ymm11_6;
sub ymm11_7 ymm5_7 ymm11_7;
sub ymm11_8 ymm5_8 ymm11_8;
sub ymm11_9 ymm5_9 ymm11_9;
sub ymm11_a ymm5_a ymm11_a;
sub ymm11_b ymm5_b ymm11_b;
sub ymm11_c ymm5_c ymm11_c;
sub ymm11_d ymm5_d ymm11_d;
sub ymm11_e ymm5_e ymm11_e;
sub ymm11_f ymm5_f ymm11_f;
(* vpunpcklwd %ymm3,%ymm4,%ymm5                    #! PC = 0x555555559d89 *)
mov lwd_0 ymm4_0;
mov lwd_1 ymm3_0;
mov lwd_2 ymm4_1;
mov lwd_3 ymm3_1;
mov lwd_4 ymm4_2;
mov lwd_5 ymm3_2;
mov lwd_6 ymm4_3;
mov lwd_7 ymm3_3;
mov lwd_8 ymm4_8;
mov lwd_9 ymm3_8;
mov lwd_a ymm4_9;
mov lwd_b ymm3_9;
mov lwd_c ymm4_a;
mov lwd_d ymm3_a;
mov lwd_e ymm4_b;
mov lwd_f ymm3_b;
mov ymm5_0 lwd_0;
mov ymm5_1 lwd_1;
mov ymm5_2 lwd_2;
mov ymm5_3 lwd_3;
mov ymm5_4 lwd_4;
mov ymm5_5 lwd_5;
mov ymm5_6 lwd_6;
mov ymm5_7 lwd_7;
mov ymm5_8 lwd_8;
mov ymm5_9 lwd_9;
mov ymm5_a lwd_a;
mov ymm5_b lwd_b;
mov ymm5_c lwd_c;
mov ymm5_d lwd_d;
mov ymm5_e lwd_e;
mov ymm5_f lwd_f;
(* vpunpckhwd %ymm3,%ymm4,%ymm3                    #! PC = 0x555555559d8d *)
mov hwd_0 ymm4_4;
mov hwd_1 ymm3_4;
mov hwd_2 ymm4_5;
mov hwd_3 ymm3_5;
mov hwd_4 ymm4_6;
mov hwd_5 ymm3_6;
mov hwd_6 ymm4_7;
mov hwd_7 ymm3_7;
mov hwd_8 ymm4_c;
mov hwd_9 ymm3_c;
mov hwd_a ymm4_d;
mov hwd_b ymm3_d;
mov hwd_c ymm4_e;
mov hwd_d ymm3_e;
mov hwd_e ymm4_f;
mov hwd_f ymm3_f;
mov ymm3_0 hwd_0;
mov ymm3_1 hwd_1;
mov ymm3_2 hwd_2;
mov ymm3_3 hwd_3;
mov ymm3_4 hwd_4;
mov ymm3_5 hwd_5;
mov ymm3_6 hwd_6;
mov ymm3_7 hwd_7;
mov ymm3_8 hwd_8;
mov ymm3_9 hwd_9;
mov ymm3_a hwd_a;
mov ymm3_b hwd_b;
mov ymm3_c hwd_c;
mov ymm3_d hwd_d;
mov ymm3_e hwd_e;
mov ymm3_f hwd_f;
(* vpunpcklwd %ymm6,%ymm10,%ymm4                   #! PC = 0x555555559d91 *)
mov lwd_0 ymm10_0;
mov lwd_1 ymm6_0;
mov lwd_2 ymm10_1;
mov lwd_3 ymm6_1;
mov lwd_4 ymm10_2;
mov lwd_5 ymm6_2;
mov lwd_6 ymm10_3;
mov lwd_7 ymm6_3;
mov lwd_8 ymm10_8;
mov lwd_9 ymm6_8;
mov lwd_a ymm10_9;
mov lwd_b ymm6_9;
mov lwd_c ymm10_a;
mov lwd_d ymm6_a;
mov lwd_e ymm10_b;
mov lwd_f ymm6_b;
mov ymm4_0 lwd_0;
mov ymm4_1 lwd_1;
mov ymm4_2 lwd_2;
mov ymm4_3 lwd_3;
mov ymm4_4 lwd_4;
mov ymm4_5 lwd_5;
mov ymm4_6 lwd_6;
mov ymm4_7 lwd_7;
mov ymm4_8 lwd_8;
mov ymm4_9 lwd_9;
mov ymm4_a lwd_a;
mov ymm4_b lwd_b;
mov ymm4_c lwd_c;
mov ymm4_d lwd_d;
mov ymm4_e lwd_e;
mov ymm4_f lwd_f;
(* vpunpckhwd %ymm6,%ymm10,%ymm6                   #! PC = 0x555555559d95 *)
mov hwd_0 ymm10_4;
mov hwd_1 ymm6_4;
mov hwd_2 ymm10_5;
mov hwd_3 ymm6_5;
mov hwd_4 ymm10_6;
mov hwd_5 ymm6_6;
mov hwd_6 ymm10_7;
mov hwd_7 ymm6_7;
mov hwd_8 ymm10_c;
mov hwd_9 ymm6_c;
mov hwd_a ymm10_d;
mov hwd_b ymm6_d;
mov hwd_c ymm10_e;
mov hwd_d ymm6_e;
mov hwd_e ymm10_f;
mov hwd_f ymm6_f;
mov ymm6_0 hwd_0;
mov ymm6_1 hwd_1;
mov ymm6_2 hwd_2;
mov ymm6_3 hwd_3;
mov ymm6_4 hwd_4;
mov ymm6_5 hwd_5;
mov ymm6_6 hwd_6;
mov ymm6_7 hwd_7;
mov ymm6_8 hwd_8;
mov ymm6_9 hwd_9;
mov ymm6_a hwd_a;
mov ymm6_b hwd_b;
mov ymm6_c hwd_c;
mov ymm6_d hwd_d;
mov ymm6_e hwd_e;
mov ymm6_f hwd_f;
(* vpunpcklwd %ymm8,%ymm9,%ymm10                   #! PC = 0x555555559d99 *)
mov lwd_0 ymm9_0;
mov lwd_1 ymm8_0;
mov lwd_2 ymm9_1;
mov lwd_3 ymm8_1;
mov lwd_4 ymm9_2;
mov lwd_5 ymm8_2;
mov lwd_6 ymm9_3;
mov lwd_7 ymm8_3;
mov lwd_8 ymm9_8;
mov lwd_9 ymm8_8;
mov lwd_a ymm9_9;
mov lwd_b ymm8_9;
mov lwd_c ymm9_a;
mov lwd_d ymm8_a;
mov lwd_e ymm9_b;
mov lwd_f ymm8_b;
mov ymm10_0 lwd_0;
mov ymm10_1 lwd_1;
mov ymm10_2 lwd_2;
mov ymm10_3 lwd_3;
mov ymm10_4 lwd_4;
mov ymm10_5 lwd_5;
mov ymm10_6 lwd_6;
mov ymm10_7 lwd_7;
mov ymm10_8 lwd_8;
mov ymm10_9 lwd_9;
mov ymm10_a lwd_a;
mov ymm10_b lwd_b;
mov ymm10_c lwd_c;
mov ymm10_d lwd_d;
mov ymm10_e lwd_e;
mov ymm10_f lwd_f;
(* vpunpckhwd %ymm8,%ymm9,%ymm8                    #! PC = 0x555555559d9e *)
mov hwd_0 ymm9_4;
mov hwd_1 ymm8_4;
mov hwd_2 ymm9_5;
mov hwd_3 ymm8_5;
mov hwd_4 ymm9_6;
mov hwd_5 ymm8_6;
mov hwd_6 ymm9_7;
mov hwd_7 ymm8_7;
mov hwd_8 ymm9_c;
mov hwd_9 ymm8_c;
mov hwd_a ymm9_d;
mov hwd_b ymm8_d;
mov hwd_c ymm9_e;
mov hwd_d ymm8_e;
mov hwd_e ymm9_f;
mov hwd_f ymm8_f;
mov ymm8_0 hwd_0;
mov ymm8_1 hwd_1;
mov ymm8_2 hwd_2;
mov ymm8_3 hwd_3;
mov ymm8_4 hwd_4;
mov ymm8_5 hwd_5;
mov ymm8_6 hwd_6;
mov ymm8_7 hwd_7;
mov ymm8_8 hwd_8;
mov ymm8_9 hwd_9;
mov ymm8_a hwd_a;
mov ymm8_b hwd_b;
mov ymm8_c hwd_c;
mov ymm8_d hwd_d;
mov ymm8_e hwd_e;
mov ymm8_f hwd_f;
(* vpunpcklwd %ymm11,%ymm7,%ymm9                   #! PC = 0x555555559da3 *)
mov lwd_0 ymm7_0;
mov lwd_1 ymm11_0;
mov lwd_2 ymm7_1;
mov lwd_3 ymm11_1;
mov lwd_4 ymm7_2;
mov lwd_5 ymm11_2;
mov lwd_6 ymm7_3;
mov lwd_7 ymm11_3;
mov lwd_8 ymm7_8;
mov lwd_9 ymm11_8;
mov lwd_a ymm7_9;
mov lwd_b ymm11_9;
mov lwd_c ymm7_a;
mov lwd_d ymm11_a;
mov lwd_e ymm7_b;
mov lwd_f ymm11_b;
mov ymm9_0 lwd_0;
mov ymm9_1 lwd_1;
mov ymm9_2 lwd_2;
mov ymm9_3 lwd_3;
mov ymm9_4 lwd_4;
mov ymm9_5 lwd_5;
mov ymm9_6 lwd_6;
mov ymm9_7 lwd_7;
mov ymm9_8 lwd_8;
mov ymm9_9 lwd_9;
mov ymm9_a lwd_a;
mov ymm9_b lwd_b;
mov ymm9_c lwd_c;
mov ymm9_d lwd_d;
mov ymm9_e lwd_e;
mov ymm9_f lwd_f;
(* vpunpckhwd %ymm11,%ymm7,%ymm11                  #! PC = 0x555555559da8 *)
mov hwd_0 ymm7_4;
mov hwd_1 ymm11_4;
mov hwd_2 ymm7_5;
mov hwd_3 ymm11_5;
mov hwd_4 ymm7_6;
mov hwd_5 ymm11_6;
mov hwd_6 ymm7_7;
mov hwd_7 ymm11_7;
mov hwd_8 ymm7_c;
mov hwd_9 ymm11_c;
mov hwd_a ymm7_d;
mov hwd_b ymm11_d;
mov hwd_c ymm7_e;
mov hwd_d ymm11_e;
mov hwd_e ymm7_f;
mov hwd_f ymm11_f;
mov ymm11_0 hwd_0;
mov ymm11_1 hwd_1;
mov ymm11_2 hwd_2;
mov ymm11_3 hwd_3;
mov ymm11_4 hwd_4;
mov ymm11_5 hwd_5;
mov ymm11_6 hwd_6;
mov ymm11_7 hwd_7;
mov ymm11_8 hwd_8;
mov ymm11_9 hwd_9;
mov ymm11_a hwd_a;
mov ymm11_b hwd_b;
mov ymm11_c hwd_c;
mov ymm11_d hwd_d;
mov ymm11_e hwd_e;
mov ymm11_f hwd_f;
(* vpbroadcastq 0x1e0(%rdx),%ymm1                  #! EA = L0x555555561300; Value = 0x030c6f7dcc2c2dce; PC = 0x555555559dad *)
mov ymm1_0 L0x555555561300;
mov ymm1_1 L0x555555561302;
mov ymm1_2 L0x555555561304;
mov ymm1_3 L0x555555561306;
mov ymm1_4 L0x555555561300;
mov ymm1_5 L0x555555561302;
mov ymm1_6 L0x555555561304;
mov ymm1_7 L0x555555561306;
mov ymm1_8 L0x555555561300;
mov ymm1_9 L0x555555561302;
mov ymm1_a L0x555555561304;
mov ymm1_b L0x555555561306;
mov ymm1_c L0x555555561300;
mov ymm1_d L0x555555561302;
mov ymm1_e L0x555555561304;
mov ymm1_f L0x555555561306;
(* vpbroadcastq 0x3e0(%rdx),%ymm2                  #! EA = L0x555555561500; Value = 0xfb0cf17d042cf9ce; PC = 0x555555559db6 *)
mov ymm2_0 L0x555555561500;
mov ymm2_1 L0x555555561502;
mov ymm2_2 L0x555555561504;
mov ymm2_3 L0x555555561506;
mov ymm2_4 L0x555555561500;
mov ymm2_5 L0x555555561502;
mov ymm2_6 L0x555555561504;
mov ymm2_7 L0x555555561506;
mov ymm2_8 L0x555555561500;
mov ymm2_9 L0x555555561502;
mov ymm2_a L0x555555561504;
mov ymm2_b L0x555555561506;
mov ymm2_c L0x555555561500;
mov ymm2_d L0x555555561502;
mov ymm2_e L0x555555561504;
mov ymm2_f L0x555555561506;
(* vpmullw %ymm1,%ymm3,%ymm7                       #! PC = 0x555555559dbf *)
smull mulHymm3_0 mulL_0 ymm1_0 ymm3_0;
smull mulHymm3_1 mulL_1 ymm1_1 ymm3_1;
smull mulHymm3_2 mulL_2 ymm1_2 ymm3_2;
smull mulHymm3_3 mulL_3 ymm1_3 ymm3_3;
smull mulHymm3_4 mulL_4 ymm1_4 ymm3_4;
smull mulHymm3_5 mulL_5 ymm1_5 ymm3_5;
smull mulHymm3_6 mulL_6 ymm1_6 ymm3_6;
smull mulHymm3_7 mulL_7 ymm1_7 ymm3_7;
smull mulHymm3_8 mulL_8 ymm1_8 ymm3_8;
smull mulHymm3_9 mulL_9 ymm1_9 ymm3_9;
smull mulHymm3_a mulL_a ymm1_a ymm3_a;
smull mulHymm3_b mulL_b ymm1_b ymm3_b;
smull mulHymm3_c mulL_c ymm1_c ymm3_c;
smull mulHymm3_d mulL_d ymm1_d ymm3_d;
smull mulHymm3_e mulL_e ymm1_e ymm3_e;
smull mulHymm3_f mulL_f ymm1_f ymm3_f;
cast ymm7_0@sint16 mulL_0;
cast ymm7_1@sint16 mulL_1;
cast ymm7_2@sint16 mulL_2;
cast ymm7_3@sint16 mulL_3;
cast ymm7_4@sint16 mulL_4;
cast ymm7_5@sint16 mulL_5;
cast ymm7_6@sint16 mulL_6;
cast ymm7_7@sint16 mulL_7;
cast ymm7_8@sint16 mulL_8;
cast ymm7_9@sint16 mulL_9;
cast ymm7_a@sint16 mulL_a;
cast ymm7_b@sint16 mulL_b;
cast ymm7_c@sint16 mulL_c;
cast ymm7_d@sint16 mulL_d;
cast ymm7_e@sint16 mulL_e;
cast ymm7_f@sint16 mulL_f;
(* vpmulhw %ymm2,%ymm3,%ymm3                       #! PC = 0x555555559dc3 *)
smull mulH_0 mulLymm3_0 ymm3_0 ymm2_0;
smull mulH_1 mulLymm3_1 ymm3_1 ymm2_1;
smull mulH_2 mulLymm3_2 ymm3_2 ymm2_2;
smull mulH_3 mulLymm3_3 ymm3_3 ymm2_3;
smull mulH_4 mulLymm3_4 ymm3_4 ymm2_4;
smull mulH_5 mulLymm3_5 ymm3_5 ymm2_5;
smull mulH_6 mulLymm3_6 ymm3_6 ymm2_6;
smull mulH_7 mulLymm3_7 ymm3_7 ymm2_7;
smull mulH_8 mulLymm3_8 ymm3_8 ymm2_8;
smull mulH_9 mulLymm3_9 ymm3_9 ymm2_9;
smull mulH_a mulLymm3_a ymm3_a ymm2_a;
smull mulH_b mulLymm3_b ymm3_b ymm2_b;
smull mulH_c mulLymm3_c ymm3_c ymm2_c;
smull mulH_d mulLymm3_d ymm3_d ymm2_d;
smull mulH_e mulLymm3_e ymm3_e ymm2_e;
smull mulH_f mulLymm3_f ymm3_f ymm2_f;
mov ymm3_0 mulH_0;
mov ymm3_1 mulH_1;
mov ymm3_2 mulH_2;
mov ymm3_3 mulH_3;
mov ymm3_4 mulH_4;
mov ymm3_5 mulH_5;
mov ymm3_6 mulH_6;
mov ymm3_7 mulH_7;
mov ymm3_8 mulH_8;
mov ymm3_9 mulH_9;
mov ymm3_a mulH_a;
mov ymm3_b mulH_b;
mov ymm3_c mulH_c;
mov ymm3_d mulH_d;
mov ymm3_e mulH_e;
mov ymm3_f mulH_f;
(* vpmulhw %ymm0,%ymm7,%ymm7                       #! PC = 0x555555559dc7 *)
smull mulH_0 red_0 ymm7_0 ymm0_0;
assert true && red_0 = mulLymm3_0;
assume red_0 = mulLymm3_0 && true;
smull mulH_1 red_1 ymm7_1 ymm0_1;
assert true && red_1 = mulLymm3_1;
assume red_1 = mulLymm3_1 && true;
smull mulH_2 red_2 ymm7_2 ymm0_2;
assert true && red_2 = mulLymm3_2;
assume red_2 = mulLymm3_2 && true;
smull mulH_3 red_3 ymm7_3 ymm0_3;
assert true && red_3 = mulLymm3_3;
assume red_3 = mulLymm3_3 && true;
smull mulH_4 red_4 ymm7_4 ymm0_4;
assert true && red_4 = mulLymm3_4;
assume red_4 = mulLymm3_4 && true;
smull mulH_5 red_5 ymm7_5 ymm0_5;
assert true && red_5 = mulLymm3_5;
assume red_5 = mulLymm3_5 && true;
smull mulH_6 red_6 ymm7_6 ymm0_6;
assert true && red_6 = mulLymm3_6;
assume red_6 = mulLymm3_6 && true;
smull mulH_7 red_7 ymm7_7 ymm0_7;
assert true && red_7 = mulLymm3_7;
assume red_7 = mulLymm3_7 && true;
smull mulH_8 red_8 ymm7_8 ymm0_8;
assert true && red_8 = mulLymm3_8;
assume red_8 = mulLymm3_8 && true;
smull mulH_9 red_9 ymm7_9 ymm0_9;
assert true && red_9 = mulLymm3_9;
assume red_9 = mulLymm3_9 && true;
smull mulH_a red_a ymm7_a ymm0_a;
assert true && red_a = mulLymm3_a;
assume red_a = mulLymm3_a && true;
smull mulH_b red_b ymm7_b ymm0_b;
assert true && red_b = mulLymm3_b;
assume red_b = mulLymm3_b && true;
smull mulH_c red_c ymm7_c ymm0_c;
assert true && red_c = mulLymm3_c;
assume red_c = mulLymm3_c && true;
smull mulH_d red_d ymm7_d ymm0_d;
assert true && red_d = mulLymm3_d;
assume red_d = mulLymm3_d && true;
smull mulH_e red_e ymm7_e ymm0_e;
assert true && red_e = mulLymm3_e;
assume red_e = mulLymm3_e && true;
smull mulH_f red_f ymm7_f ymm0_f;
assert true && red_f = mulLymm3_f;
assume red_f = mulLymm3_f && true;
mov ymm7_0 mulH_0;
mov ymm7_1 mulH_1;
mov ymm7_2 mulH_2;
mov ymm7_3 mulH_3;
mov ymm7_4 mulH_4;
mov ymm7_5 mulH_5;
mov ymm7_6 mulH_6;
mov ymm7_7 mulH_7;
mov ymm7_8 mulH_8;
mov ymm7_9 mulH_9;
mov ymm7_a mulH_a;
mov ymm7_b mulH_b;
mov ymm7_c mulH_c;
mov ymm7_d mulH_d;
mov ymm7_e mulH_e;
mov ymm7_f mulH_f;
(* vpsubw %ymm7,%ymm3,%ymm3                        #! PC = 0x555555559dcb *)
sub ymm3_0 ymm3_0 ymm7_0;
sub ymm3_1 ymm3_1 ymm7_1;
sub ymm3_2 ymm3_2 ymm7_2;
sub ymm3_3 ymm3_3 ymm7_3;
sub ymm3_4 ymm3_4 ymm7_4;
sub ymm3_5 ymm3_5 ymm7_5;
sub ymm3_6 ymm3_6 ymm7_6;
sub ymm3_7 ymm3_7 ymm7_7;
sub ymm3_8 ymm3_8 ymm7_8;
sub ymm3_9 ymm3_9 ymm7_9;
sub ymm3_a ymm3_a ymm7_a;
sub ymm3_b ymm3_b ymm7_b;
sub ymm3_c ymm3_c ymm7_c;
sub ymm3_d ymm3_d ymm7_d;
sub ymm3_e ymm3_e ymm7_e;
sub ymm3_f ymm3_f ymm7_f;
(* vpbroadcastq 0x1e8(%rdx),%ymm1                  #! EA = L0x555555561308; Value = 0x499dcd2c4404b27c; PC = 0x555555559dcf *)
mov ymm1_0 L0x555555561308;
mov ymm1_1 L0x55555556130a;
mov ymm1_2 L0x55555556130c;
mov ymm1_3 L0x55555556130e;
mov ymm1_4 L0x555555561308;
mov ymm1_5 L0x55555556130a;
mov ymm1_6 L0x55555556130c;
mov ymm1_7 L0x55555556130e;
mov ymm1_8 L0x555555561308;
mov ymm1_9 L0x55555556130a;
mov ymm1_a L0x55555556130c;
mov ymm1_b L0x55555556130e;
mov ymm1_c L0x555555561308;
mov ymm1_d L0x55555556130a;
mov ymm1_e L0x55555556130c;
mov ymm1_f L0x55555556130e;
(* vpbroadcastq 0x3e8(%rdx),%ymm2                  #! EA = L0x555555561508; Value = 0x0b9d052cec040a7c; PC = 0x555555559dd8 *)
mov ymm2_0 L0x555555561508;
mov ymm2_1 L0x55555556150a;
mov ymm2_2 L0x55555556150c;
mov ymm2_3 L0x55555556150e;
mov ymm2_4 L0x555555561508;
mov ymm2_5 L0x55555556150a;
mov ymm2_6 L0x55555556150c;
mov ymm2_7 L0x55555556150e;
mov ymm2_8 L0x555555561508;
mov ymm2_9 L0x55555556150a;
mov ymm2_a L0x55555556150c;
mov ymm2_b L0x55555556150e;
mov ymm2_c L0x555555561508;
mov ymm2_d L0x55555556150a;
mov ymm2_e L0x55555556150c;
mov ymm2_f L0x55555556150e;
(* vpmullw %ymm1,%ymm6,%ymm7                       #! PC = 0x555555559de1 *)
smull mulHymm6_0 mulL_0 ymm1_0 ymm6_0;
smull mulHymm6_1 mulL_1 ymm1_1 ymm6_1;
smull mulHymm6_2 mulL_2 ymm1_2 ymm6_2;
smull mulHymm6_3 mulL_3 ymm1_3 ymm6_3;
smull mulHymm6_4 mulL_4 ymm1_4 ymm6_4;
smull mulHymm6_5 mulL_5 ymm1_5 ymm6_5;
smull mulHymm6_6 mulL_6 ymm1_6 ymm6_6;
smull mulHymm6_7 mulL_7 ymm1_7 ymm6_7;
smull mulHymm6_8 mulL_8 ymm1_8 ymm6_8;
smull mulHymm6_9 mulL_9 ymm1_9 ymm6_9;
smull mulHymm6_a mulL_a ymm1_a ymm6_a;
smull mulHymm6_b mulL_b ymm1_b ymm6_b;
smull mulHymm6_c mulL_c ymm1_c ymm6_c;
smull mulHymm6_d mulL_d ymm1_d ymm6_d;
smull mulHymm6_e mulL_e ymm1_e ymm6_e;
smull mulHymm6_f mulL_f ymm1_f ymm6_f;
cast ymm7_0@sint16 mulL_0;
cast ymm7_1@sint16 mulL_1;
cast ymm7_2@sint16 mulL_2;
cast ymm7_3@sint16 mulL_3;
cast ymm7_4@sint16 mulL_4;
cast ymm7_5@sint16 mulL_5;
cast ymm7_6@sint16 mulL_6;
cast ymm7_7@sint16 mulL_7;
cast ymm7_8@sint16 mulL_8;
cast ymm7_9@sint16 mulL_9;
cast ymm7_a@sint16 mulL_a;
cast ymm7_b@sint16 mulL_b;
cast ymm7_c@sint16 mulL_c;
cast ymm7_d@sint16 mulL_d;
cast ymm7_e@sint16 mulL_e;
cast ymm7_f@sint16 mulL_f;
(* vpmulhw %ymm2,%ymm6,%ymm6                       #! PC = 0x555555559de5 *)
smull mulH_0 mulLymm6_0 ymm6_0 ymm2_0;
smull mulH_1 mulLymm6_1 ymm6_1 ymm2_1;
smull mulH_2 mulLymm6_2 ymm6_2 ymm2_2;
smull mulH_3 mulLymm6_3 ymm6_3 ymm2_3;
smull mulH_4 mulLymm6_4 ymm6_4 ymm2_4;
smull mulH_5 mulLymm6_5 ymm6_5 ymm2_5;
smull mulH_6 mulLymm6_6 ymm6_6 ymm2_6;
smull mulH_7 mulLymm6_7 ymm6_7 ymm2_7;
smull mulH_8 mulLymm6_8 ymm6_8 ymm2_8;
smull mulH_9 mulLymm6_9 ymm6_9 ymm2_9;
smull mulH_a mulLymm6_a ymm6_a ymm2_a;
smull mulH_b mulLymm6_b ymm6_b ymm2_b;
smull mulH_c mulLymm6_c ymm6_c ymm2_c;
smull mulH_d mulLymm6_d ymm6_d ymm2_d;
smull mulH_e mulLymm6_e ymm6_e ymm2_e;
smull mulH_f mulLymm6_f ymm6_f ymm2_f;
mov ymm6_0 mulH_0;
mov ymm6_1 mulH_1;
mov ymm6_2 mulH_2;
mov ymm6_3 mulH_3;
mov ymm6_4 mulH_4;
mov ymm6_5 mulH_5;
mov ymm6_6 mulH_6;
mov ymm6_7 mulH_7;
mov ymm6_8 mulH_8;
mov ymm6_9 mulH_9;
mov ymm6_a mulH_a;
mov ymm6_b mulH_b;
mov ymm6_c mulH_c;
mov ymm6_d mulH_d;
mov ymm6_e mulH_e;
mov ymm6_f mulH_f;
(* vpmulhw %ymm0,%ymm7,%ymm7                       #! PC = 0x555555559de9 *)
smull mulH_0 red_0 ymm7_0 ymm0_0;
assert true && red_0 = mulLymm6_0;
assume red_0 = mulLymm6_0 && true;
smull mulH_1 red_1 ymm7_1 ymm0_1;
assert true && red_1 = mulLymm6_1;
assume red_1 = mulLymm6_1 && true;
smull mulH_2 red_2 ymm7_2 ymm0_2;
assert true && red_2 = mulLymm6_2;
assume red_2 = mulLymm6_2 && true;
smull mulH_3 red_3 ymm7_3 ymm0_3;
assert true && red_3 = mulLymm6_3;
assume red_3 = mulLymm6_3 && true;
smull mulH_4 red_4 ymm7_4 ymm0_4;
assert true && red_4 = mulLymm6_4;
assume red_4 = mulLymm6_4 && true;
smull mulH_5 red_5 ymm7_5 ymm0_5;
assert true && red_5 = mulLymm6_5;
assume red_5 = mulLymm6_5 && true;
smull mulH_6 red_6 ymm7_6 ymm0_6;
assert true && red_6 = mulLymm6_6;
assume red_6 = mulLymm6_6 && true;
smull mulH_7 red_7 ymm7_7 ymm0_7;
assert true && red_7 = mulLymm6_7;
assume red_7 = mulLymm6_7 && true;
smull mulH_8 red_8 ymm7_8 ymm0_8;
assert true && red_8 = mulLymm6_8;
assume red_8 = mulLymm6_8 && true;
smull mulH_9 red_9 ymm7_9 ymm0_9;
assert true && red_9 = mulLymm6_9;
assume red_9 = mulLymm6_9 && true;
smull mulH_a red_a ymm7_a ymm0_a;
assert true && red_a = mulLymm6_a;
assume red_a = mulLymm6_a && true;
smull mulH_b red_b ymm7_b ymm0_b;
assert true && red_b = mulLymm6_b;
assume red_b = mulLymm6_b && true;
smull mulH_c red_c ymm7_c ymm0_c;
assert true && red_c = mulLymm6_c;
assume red_c = mulLymm6_c && true;
smull mulH_d red_d ymm7_d ymm0_d;
assert true && red_d = mulLymm6_d;
assume red_d = mulLymm6_d && true;
smull mulH_e red_e ymm7_e ymm0_e;
assert true && red_e = mulLymm6_e;
assume red_e = mulLymm6_e && true;
smull mulH_f red_f ymm7_f ymm0_f;
assert true && red_f = mulLymm6_f;
assume red_f = mulLymm6_f && true;
mov ymm7_0 mulH_0;
mov ymm7_1 mulH_1;
mov ymm7_2 mulH_2;
mov ymm7_3 mulH_3;
mov ymm7_4 mulH_4;
mov ymm7_5 mulH_5;
mov ymm7_6 mulH_6;
mov ymm7_7 mulH_7;
mov ymm7_8 mulH_8;
mov ymm7_9 mulH_9;
mov ymm7_a mulH_a;
mov ymm7_b mulH_b;
mov ymm7_c mulH_c;
mov ymm7_d mulH_d;
mov ymm7_e mulH_e;
mov ymm7_f mulH_f;
(* vpsubw %ymm7,%ymm6,%ymm6                        #! PC = 0x555555559ded *)
sub ymm6_0 ymm6_0 ymm7_0;
sub ymm6_1 ymm6_1 ymm7_1;
sub ymm6_2 ymm6_2 ymm7_2;
sub ymm6_3 ymm6_3 ymm7_3;
sub ymm6_4 ymm6_4 ymm7_4;
sub ymm6_5 ymm6_5 ymm7_5;
sub ymm6_6 ymm6_6 ymm7_6;
sub ymm6_7 ymm6_7 ymm7_7;
sub ymm6_8 ymm6_8 ymm7_8;
sub ymm6_9 ymm6_9 ymm7_9;
sub ymm6_a ymm6_a ymm7_a;
sub ymm6_b ymm6_b ymm7_b;
sub ymm6_c ymm6_c ymm7_c;
sub ymm6_d ymm6_d ymm7_d;
sub ymm6_e ymm6_e ymm7_e;
sub ymm6_f ymm6_f ymm7_f;
(* vpbroadcastq 0x1f0(%rdx),%ymm1                  #! EA = L0x555555561310; Value = 0xbca093095de57b46; PC = 0x555555559df1 *)
mov ymm1_0 L0x555555561310;
mov ymm1_1 L0x555555561312;
mov ymm1_2 L0x555555561314;
mov ymm1_3 L0x555555561316;
mov ymm1_4 L0x555555561310;
mov ymm1_5 L0x555555561312;
mov ymm1_6 L0x555555561314;
mov ymm1_7 L0x555555561316;
mov ymm1_8 L0x555555561310;
mov ymm1_9 L0x555555561312;
mov ymm1_a L0x555555561314;
mov ymm1_b L0x555555561316;
mov ymm1_c L0x555555561310;
mov ymm1_d L0x555555561312;
mov ymm1_e L0x555555561314;
mov ymm1_f L0x555555561316;
(* vpbroadcastq 0x3f0(%rdx),%ymm2                  #! EA = L0x555555561510; Value = 0xfca00d09efe5f746; PC = 0x555555559dfa *)
mov ymm2_0 L0x555555561510;
mov ymm2_1 L0x555555561512;
mov ymm2_2 L0x555555561514;
mov ymm2_3 L0x555555561516;
mov ymm2_4 L0x555555561510;
mov ymm2_5 L0x555555561512;
mov ymm2_6 L0x555555561514;
mov ymm2_7 L0x555555561516;
mov ymm2_8 L0x555555561510;
mov ymm2_9 L0x555555561512;
mov ymm2_a L0x555555561514;
mov ymm2_b L0x555555561516;
mov ymm2_c L0x555555561510;
mov ymm2_d L0x555555561512;
mov ymm2_e L0x555555561514;
mov ymm2_f L0x555555561516;
(* vpmullw %ymm1,%ymm8,%ymm7                       #! PC = 0x555555559e03 *)
smull mulHymm8_0 mulL_0 ymm1_0 ymm8_0;
smull mulHymm8_1 mulL_1 ymm1_1 ymm8_1;
smull mulHymm8_2 mulL_2 ymm1_2 ymm8_2;
smull mulHymm8_3 mulL_3 ymm1_3 ymm8_3;
smull mulHymm8_4 mulL_4 ymm1_4 ymm8_4;
smull mulHymm8_5 mulL_5 ymm1_5 ymm8_5;
smull mulHymm8_6 mulL_6 ymm1_6 ymm8_6;
smull mulHymm8_7 mulL_7 ymm1_7 ymm8_7;
smull mulHymm8_8 mulL_8 ymm1_8 ymm8_8;
smull mulHymm8_9 mulL_9 ymm1_9 ymm8_9;
smull mulHymm8_a mulL_a ymm1_a ymm8_a;
smull mulHymm8_b mulL_b ymm1_b ymm8_b;
smull mulHymm8_c mulL_c ymm1_c ymm8_c;
smull mulHymm8_d mulL_d ymm1_d ymm8_d;
smull mulHymm8_e mulL_e ymm1_e ymm8_e;
smull mulHymm8_f mulL_f ymm1_f ymm8_f;
cast ymm7_0@sint16 mulL_0;
cast ymm7_1@sint16 mulL_1;
cast ymm7_2@sint16 mulL_2;
cast ymm7_3@sint16 mulL_3;
cast ymm7_4@sint16 mulL_4;
cast ymm7_5@sint16 mulL_5;
cast ymm7_6@sint16 mulL_6;
cast ymm7_7@sint16 mulL_7;
cast ymm7_8@sint16 mulL_8;
cast ymm7_9@sint16 mulL_9;
cast ymm7_a@sint16 mulL_a;
cast ymm7_b@sint16 mulL_b;
cast ymm7_c@sint16 mulL_c;
cast ymm7_d@sint16 mulL_d;
cast ymm7_e@sint16 mulL_e;
cast ymm7_f@sint16 mulL_f;
(* vpmulhw %ymm2,%ymm8,%ymm8                       #! PC = 0x555555559e07 *)
smull mulH_0 mulLymm8_0 ymm8_0 ymm2_0;
smull mulH_1 mulLymm8_1 ymm8_1 ymm2_1;
smull mulH_2 mulLymm8_2 ymm8_2 ymm2_2;
smull mulH_3 mulLymm8_3 ymm8_3 ymm2_3;
smull mulH_4 mulLymm8_4 ymm8_4 ymm2_4;
smull mulH_5 mulLymm8_5 ymm8_5 ymm2_5;
smull mulH_6 mulLymm8_6 ymm8_6 ymm2_6;
smull mulH_7 mulLymm8_7 ymm8_7 ymm2_7;
smull mulH_8 mulLymm8_8 ymm8_8 ymm2_8;
smull mulH_9 mulLymm8_9 ymm8_9 ymm2_9;
smull mulH_a mulLymm8_a ymm8_a ymm2_a;
smull mulH_b mulLymm8_b ymm8_b ymm2_b;
smull mulH_c mulLymm8_c ymm8_c ymm2_c;
smull mulH_d mulLymm8_d ymm8_d ymm2_d;
smull mulH_e mulLymm8_e ymm8_e ymm2_e;
smull mulH_f mulLymm8_f ymm8_f ymm2_f;
mov ymm8_0 mulH_0;
mov ymm8_1 mulH_1;
mov ymm8_2 mulH_2;
mov ymm8_3 mulH_3;
mov ymm8_4 mulH_4;
mov ymm8_5 mulH_5;
mov ymm8_6 mulH_6;
mov ymm8_7 mulH_7;
mov ymm8_8 mulH_8;
mov ymm8_9 mulH_9;
mov ymm8_a mulH_a;
mov ymm8_b mulH_b;
mov ymm8_c mulH_c;
mov ymm8_d mulH_d;
mov ymm8_e mulH_e;
mov ymm8_f mulH_f;
(* vpmulhw %ymm0,%ymm7,%ymm7                       #! PC = 0x555555559e0b *)
smull mulH_0 red_0 ymm7_0 ymm0_0;
assert true && red_0 = mulLymm8_0;
assume red_0 = mulLymm8_0 && true;
smull mulH_1 red_1 ymm7_1 ymm0_1;
assert true && red_1 = mulLymm8_1;
assume red_1 = mulLymm8_1 && true;
smull mulH_2 red_2 ymm7_2 ymm0_2;
assert true && red_2 = mulLymm8_2;
assume red_2 = mulLymm8_2 && true;
smull mulH_3 red_3 ymm7_3 ymm0_3;
assert true && red_3 = mulLymm8_3;
assume red_3 = mulLymm8_3 && true;
smull mulH_4 red_4 ymm7_4 ymm0_4;
assert true && red_4 = mulLymm8_4;
assume red_4 = mulLymm8_4 && true;
smull mulH_5 red_5 ymm7_5 ymm0_5;
assert true && red_5 = mulLymm8_5;
assume red_5 = mulLymm8_5 && true;
smull mulH_6 red_6 ymm7_6 ymm0_6;
assert true && red_6 = mulLymm8_6;
assume red_6 = mulLymm8_6 && true;
smull mulH_7 red_7 ymm7_7 ymm0_7;
assert true && red_7 = mulLymm8_7;
assume red_7 = mulLymm8_7 && true;
smull mulH_8 red_8 ymm7_8 ymm0_8;
assert true && red_8 = mulLymm8_8;
assume red_8 = mulLymm8_8 && true;
smull mulH_9 red_9 ymm7_9 ymm0_9;
assert true && red_9 = mulLymm8_9;
assume red_9 = mulLymm8_9 && true;
smull mulH_a red_a ymm7_a ymm0_a;
assert true && red_a = mulLymm8_a;
assume red_a = mulLymm8_a && true;
smull mulH_b red_b ymm7_b ymm0_b;
assert true && red_b = mulLymm8_b;
assume red_b = mulLymm8_b && true;
smull mulH_c red_c ymm7_c ymm0_c;
assert true && red_c = mulLymm8_c;
assume red_c = mulLymm8_c && true;
smull mulH_d red_d ymm7_d ymm0_d;
assert true && red_d = mulLymm8_d;
assume red_d = mulLymm8_d && true;
smull mulH_e red_e ymm7_e ymm0_e;
assert true && red_e = mulLymm8_e;
assume red_e = mulLymm8_e && true;
smull mulH_f red_f ymm7_f ymm0_f;
assert true && red_f = mulLymm8_f;
assume red_f = mulLymm8_f && true;
mov ymm7_0 mulH_0;
mov ymm7_1 mulH_1;
mov ymm7_2 mulH_2;
mov ymm7_3 mulH_3;
mov ymm7_4 mulH_4;
mov ymm7_5 mulH_5;
mov ymm7_6 mulH_6;
mov ymm7_7 mulH_7;
mov ymm7_8 mulH_8;
mov ymm7_9 mulH_9;
mov ymm7_a mulH_a;
mov ymm7_b mulH_b;
mov ymm7_c mulH_c;
mov ymm7_d mulH_d;
mov ymm7_e mulH_e;
mov ymm7_f mulH_f;
(* vpsubw %ymm7,%ymm8,%ymm8                        #! PC = 0x555555559e0f *)
sub ymm8_0 ymm8_0 ymm7_0;
sub ymm8_1 ymm8_1 ymm7_1;
sub ymm8_2 ymm8_2 ymm7_2;
sub ymm8_3 ymm8_3 ymm7_3;
sub ymm8_4 ymm8_4 ymm7_4;
sub ymm8_5 ymm8_5 ymm7_5;
sub ymm8_6 ymm8_6 ymm7_6;
sub ymm8_7 ymm8_7 ymm7_7;
sub ymm8_8 ymm8_8 ymm7_8;
sub ymm8_9 ymm8_9 ymm7_9;
sub ymm8_a ymm8_a ymm7_a;
sub ymm8_b ymm8_b ymm7_b;
sub ymm8_c ymm8_c ymm7_c;
sub ymm8_d ymm8_d ymm7_d;
sub ymm8_e ymm8_e ymm7_e;
sub ymm8_f ymm8_f ymm7_f;
(* vpbroadcastq 0x1f8(%rdx),%ymm1                  #! EA = L0x555555561318; Value = 0xd47bdfca9c2d91d8; PC = 0x555555559e13 *)
mov ymm1_0 L0x555555561318;
mov ymm1_1 L0x55555556131a;
mov ymm1_2 L0x55555556131c;
mov ymm1_3 L0x55555556131e;
mov ymm1_4 L0x555555561318;
mov ymm1_5 L0x55555556131a;
mov ymm1_6 L0x55555556131c;
mov ymm1_7 L0x55555556131e;
mov ymm1_8 L0x555555561318;
mov ymm1_9 L0x55555556131a;
mov ymm1_a L0x55555556131c;
mov ymm1_b L0x55555556131e;
mov ymm1_c L0x555555561318;
mov ymm1_d L0x55555556131a;
mov ymm1_e L0x55555556131c;
mov ymm1_f L0x55555556131e;
(* vpbroadcastq 0x3f8(%rdx),%ymm2                  #! EA = L0x555555561518; Value = 0x027b03cafe2d01d8; PC = 0x555555559e1c *)
mov ymm2_0 L0x555555561518;
mov ymm2_1 L0x55555556151a;
mov ymm2_2 L0x55555556151c;
mov ymm2_3 L0x55555556151e;
mov ymm2_4 L0x555555561518;
mov ymm2_5 L0x55555556151a;
mov ymm2_6 L0x55555556151c;
mov ymm2_7 L0x55555556151e;
mov ymm2_8 L0x555555561518;
mov ymm2_9 L0x55555556151a;
mov ymm2_a L0x55555556151c;
mov ymm2_b L0x55555556151e;
mov ymm2_c L0x555555561518;
mov ymm2_d L0x55555556151a;
mov ymm2_e L0x55555556151c;
mov ymm2_f L0x55555556151e;
(* vpmullw %ymm1,%ymm11,%ymm7                      #! PC = 0x555555559e25 *)
smull mulHymm11_0 mulL_0 ymm1_0 ymm11_0;
smull mulHymm11_1 mulL_1 ymm1_1 ymm11_1;
smull mulHymm11_2 mulL_2 ymm1_2 ymm11_2;
smull mulHymm11_3 mulL_3 ymm1_3 ymm11_3;
smull mulHymm11_4 mulL_4 ymm1_4 ymm11_4;
smull mulHymm11_5 mulL_5 ymm1_5 ymm11_5;
smull mulHymm11_6 mulL_6 ymm1_6 ymm11_6;
smull mulHymm11_7 mulL_7 ymm1_7 ymm11_7;
smull mulHymm11_8 mulL_8 ymm1_8 ymm11_8;
smull mulHymm11_9 mulL_9 ymm1_9 ymm11_9;
smull mulHymm11_a mulL_a ymm1_a ymm11_a;
smull mulHymm11_b mulL_b ymm1_b ymm11_b;
smull mulHymm11_c mulL_c ymm1_c ymm11_c;
smull mulHymm11_d mulL_d ymm1_d ymm11_d;
smull mulHymm11_e mulL_e ymm1_e ymm11_e;
smull mulHymm11_f mulL_f ymm1_f ymm11_f;
cast ymm7_0@sint16 mulL_0;
cast ymm7_1@sint16 mulL_1;
cast ymm7_2@sint16 mulL_2;
cast ymm7_3@sint16 mulL_3;
cast ymm7_4@sint16 mulL_4;
cast ymm7_5@sint16 mulL_5;
cast ymm7_6@sint16 mulL_6;
cast ymm7_7@sint16 mulL_7;
cast ymm7_8@sint16 mulL_8;
cast ymm7_9@sint16 mulL_9;
cast ymm7_a@sint16 mulL_a;
cast ymm7_b@sint16 mulL_b;
cast ymm7_c@sint16 mulL_c;
cast ymm7_d@sint16 mulL_d;
cast ymm7_e@sint16 mulL_e;
cast ymm7_f@sint16 mulL_f;
(* vpmulhw %ymm2,%ymm11,%ymm11                     #! PC = 0x555555559e29 *)
smull mulH_0 mulLymm11_0 ymm11_0 ymm2_0;
smull mulH_1 mulLymm11_1 ymm11_1 ymm2_1;
smull mulH_2 mulLymm11_2 ymm11_2 ymm2_2;
smull mulH_3 mulLymm11_3 ymm11_3 ymm2_3;
smull mulH_4 mulLymm11_4 ymm11_4 ymm2_4;
smull mulH_5 mulLymm11_5 ymm11_5 ymm2_5;
smull mulH_6 mulLymm11_6 ymm11_6 ymm2_6;
smull mulH_7 mulLymm11_7 ymm11_7 ymm2_7;
smull mulH_8 mulLymm11_8 ymm11_8 ymm2_8;
smull mulH_9 mulLymm11_9 ymm11_9 ymm2_9;
smull mulH_a mulLymm11_a ymm11_a ymm2_a;
smull mulH_b mulLymm11_b ymm11_b ymm2_b;
smull mulH_c mulLymm11_c ymm11_c ymm2_c;
smull mulH_d mulLymm11_d ymm11_d ymm2_d;
smull mulH_e mulLymm11_e ymm11_e ymm2_e;
smull mulH_f mulLymm11_f ymm11_f ymm2_f;
mov ymm11_0 mulH_0;
mov ymm11_1 mulH_1;
mov ymm11_2 mulH_2;
mov ymm11_3 mulH_3;
mov ymm11_4 mulH_4;
mov ymm11_5 mulH_5;
mov ymm11_6 mulH_6;
mov ymm11_7 mulH_7;
mov ymm11_8 mulH_8;
mov ymm11_9 mulH_9;
mov ymm11_a mulH_a;
mov ymm11_b mulH_b;
mov ymm11_c mulH_c;
mov ymm11_d mulH_d;
mov ymm11_e mulH_e;
mov ymm11_f mulH_f;
(* vpmulhw %ymm0,%ymm7,%ymm7                       #! PC = 0x555555559e2d *)
smull mulH_0 red_0 ymm7_0 ymm0_0;
assert true && red_0 = mulLymm11_0;
assume red_0 = mulLymm11_0 && true;
smull mulH_1 red_1 ymm7_1 ymm0_1;
assert true && red_1 = mulLymm11_1;
assume red_1 = mulLymm11_1 && true;
smull mulH_2 red_2 ymm7_2 ymm0_2;
assert true && red_2 = mulLymm11_2;
assume red_2 = mulLymm11_2 && true;
smull mulH_3 red_3 ymm7_3 ymm0_3;
assert true && red_3 = mulLymm11_3;
assume red_3 = mulLymm11_3 && true;
smull mulH_4 red_4 ymm7_4 ymm0_4;
assert true && red_4 = mulLymm11_4;
assume red_4 = mulLymm11_4 && true;
smull mulH_5 red_5 ymm7_5 ymm0_5;
assert true && red_5 = mulLymm11_5;
assume red_5 = mulLymm11_5 && true;
smull mulH_6 red_6 ymm7_6 ymm0_6;
assert true && red_6 = mulLymm11_6;
assume red_6 = mulLymm11_6 && true;
smull mulH_7 red_7 ymm7_7 ymm0_7;
assert true && red_7 = mulLymm11_7;
assume red_7 = mulLymm11_7 && true;
smull mulH_8 red_8 ymm7_8 ymm0_8;
assert true && red_8 = mulLymm11_8;
assume red_8 = mulLymm11_8 && true;
smull mulH_9 red_9 ymm7_9 ymm0_9;
assert true && red_9 = mulLymm11_9;
assume red_9 = mulLymm11_9 && true;
smull mulH_a red_a ymm7_a ymm0_a;
assert true && red_a = mulLymm11_a;
assume red_a = mulLymm11_a && true;
smull mulH_b red_b ymm7_b ymm0_b;
assert true && red_b = mulLymm11_b;
assume red_b = mulLymm11_b && true;
smull mulH_c red_c ymm7_c ymm0_c;
assert true && red_c = mulLymm11_c;
assume red_c = mulLymm11_c && true;
smull mulH_d red_d ymm7_d ymm0_d;
assert true && red_d = mulLymm11_d;
assume red_d = mulLymm11_d && true;
smull mulH_e red_e ymm7_e ymm0_e;
assert true && red_e = mulLymm11_e;
assume red_e = mulLymm11_e && true;
smull mulH_f red_f ymm7_f ymm0_f;
assert true && red_f = mulLymm11_f;
assume red_f = mulLymm11_f && true;
mov ymm7_0 mulH_0;
mov ymm7_1 mulH_1;
mov ymm7_2 mulH_2;
mov ymm7_3 mulH_3;
mov ymm7_4 mulH_4;
mov ymm7_5 mulH_5;
mov ymm7_6 mulH_6;
mov ymm7_7 mulH_7;
mov ymm7_8 mulH_8;
mov ymm7_9 mulH_9;
mov ymm7_a mulH_a;
mov ymm7_b mulH_b;
mov ymm7_c mulH_c;
mov ymm7_d mulH_d;
mov ymm7_e mulH_e;
mov ymm7_f mulH_f;
(* vpsubw %ymm7,%ymm11,%ymm11                      #! PC = 0x555555559e31 *)
sub ymm11_0 ymm11_0 ymm7_0;
sub ymm11_1 ymm11_1 ymm7_1;
sub ymm11_2 ymm11_2 ymm7_2;
sub ymm11_3 ymm11_3 ymm7_3;
sub ymm11_4 ymm11_4 ymm7_4;
sub ymm11_5 ymm11_5 ymm7_5;
sub ymm11_6 ymm11_6 ymm7_6;
sub ymm11_7 ymm11_7 ymm7_7;
sub ymm11_8 ymm11_8 ymm7_8;
sub ymm11_9 ymm11_9 ymm7_9;
sub ymm11_a ymm11_a ymm7_a;
sub ymm11_b ymm11_b ymm7_b;
sub ymm11_c ymm11_c ymm7_c;
sub ymm11_d ymm11_d ymm7_d;
sub ymm11_e ymm11_e ymm7_e;
sub ymm11_f ymm11_f ymm7_f;
(* vpaddw %ymm3,%ymm5,%ymm7                        #! PC = 0x555555559e35 *)
add ymm7_0 ymm5_0 ymm3_0;
add ymm7_1 ymm5_1 ymm3_1;
add ymm7_2 ymm5_2 ymm3_2;
add ymm7_3 ymm5_3 ymm3_3;
add ymm7_4 ymm5_4 ymm3_4;
add ymm7_5 ymm5_5 ymm3_5;
add ymm7_6 ymm5_6 ymm3_6;
add ymm7_7 ymm5_7 ymm3_7;
add ymm7_8 ymm5_8 ymm3_8;
add ymm7_9 ymm5_9 ymm3_9;
add ymm7_a ymm5_a ymm3_a;
add ymm7_b ymm5_b ymm3_b;
add ymm7_c ymm5_c ymm3_c;
add ymm7_d ymm5_d ymm3_d;
add ymm7_e ymm5_e ymm3_e;
add ymm7_f ymm5_f ymm3_f;
(* vpsubw %ymm3,%ymm5,%ymm3                        #! PC = 0x555555559e39 *)
sub ymm3_0 ymm5_0 ymm3_0;
sub ymm3_1 ymm5_1 ymm3_1;
sub ymm3_2 ymm5_2 ymm3_2;
sub ymm3_3 ymm5_3 ymm3_3;
sub ymm3_4 ymm5_4 ymm3_4;
sub ymm3_5 ymm5_5 ymm3_5;
sub ymm3_6 ymm5_6 ymm3_6;
sub ymm3_7 ymm5_7 ymm3_7;
sub ymm3_8 ymm5_8 ymm3_8;
sub ymm3_9 ymm5_9 ymm3_9;
sub ymm3_a ymm5_a ymm3_a;
sub ymm3_b ymm5_b ymm3_b;
sub ymm3_c ymm5_c ymm3_c;
sub ymm3_d ymm5_d ymm3_d;
sub ymm3_e ymm5_e ymm3_e;
sub ymm3_f ymm5_f ymm3_f;
(* vpaddw %ymm6,%ymm4,%ymm5                        #! PC = 0x555555559e3d *)
add ymm5_0 ymm4_0 ymm6_0;
add ymm5_1 ymm4_1 ymm6_1;
add ymm5_2 ymm4_2 ymm6_2;
add ymm5_3 ymm4_3 ymm6_3;
add ymm5_4 ymm4_4 ymm6_4;
add ymm5_5 ymm4_5 ymm6_5;
add ymm5_6 ymm4_6 ymm6_6;
add ymm5_7 ymm4_7 ymm6_7;
add ymm5_8 ymm4_8 ymm6_8;
add ymm5_9 ymm4_9 ymm6_9;
add ymm5_a ymm4_a ymm6_a;
add ymm5_b ymm4_b ymm6_b;
add ymm5_c ymm4_c ymm6_c;
add ymm5_d ymm4_d ymm6_d;
add ymm5_e ymm4_e ymm6_e;
add ymm5_f ymm4_f ymm6_f;
(* vpsubw %ymm6,%ymm4,%ymm6                        #! PC = 0x555555559e41 *)
sub ymm6_0 ymm4_0 ymm6_0;
sub ymm6_1 ymm4_1 ymm6_1;
sub ymm6_2 ymm4_2 ymm6_2;
sub ymm6_3 ymm4_3 ymm6_3;
sub ymm6_4 ymm4_4 ymm6_4;
sub ymm6_5 ymm4_5 ymm6_5;
sub ymm6_6 ymm4_6 ymm6_6;
sub ymm6_7 ymm4_7 ymm6_7;
sub ymm6_8 ymm4_8 ymm6_8;
sub ymm6_9 ymm4_9 ymm6_9;
sub ymm6_a ymm4_a ymm6_a;
sub ymm6_b ymm4_b ymm6_b;
sub ymm6_c ymm4_c ymm6_c;
sub ymm6_d ymm4_d ymm6_d;
sub ymm6_e ymm4_e ymm6_e;
sub ymm6_f ymm4_f ymm6_f;
(* vpaddw %ymm8,%ymm10,%ymm4                       #! PC = 0x555555559e45 *)
add ymm4_0 ymm10_0 ymm8_0;
add ymm4_1 ymm10_1 ymm8_1;
add ymm4_2 ymm10_2 ymm8_2;
add ymm4_3 ymm10_3 ymm8_3;
add ymm4_4 ymm10_4 ymm8_4;
add ymm4_5 ymm10_5 ymm8_5;
add ymm4_6 ymm10_6 ymm8_6;
add ymm4_7 ymm10_7 ymm8_7;
add ymm4_8 ymm10_8 ymm8_8;
add ymm4_9 ymm10_9 ymm8_9;
add ymm4_a ymm10_a ymm8_a;
add ymm4_b ymm10_b ymm8_b;
add ymm4_c ymm10_c ymm8_c;
add ymm4_d ymm10_d ymm8_d;
add ymm4_e ymm10_e ymm8_e;
add ymm4_f ymm10_f ymm8_f;
(* vpsubw %ymm8,%ymm10,%ymm8                       #! PC = 0x555555559e4a *)
sub ymm8_0 ymm10_0 ymm8_0;
sub ymm8_1 ymm10_1 ymm8_1;
sub ymm8_2 ymm10_2 ymm8_2;
sub ymm8_3 ymm10_3 ymm8_3;
sub ymm8_4 ymm10_4 ymm8_4;
sub ymm8_5 ymm10_5 ymm8_5;
sub ymm8_6 ymm10_6 ymm8_6;
sub ymm8_7 ymm10_7 ymm8_7;
sub ymm8_8 ymm10_8 ymm8_8;
sub ymm8_9 ymm10_9 ymm8_9;
sub ymm8_a ymm10_a ymm8_a;
sub ymm8_b ymm10_b ymm8_b;
sub ymm8_c ymm10_c ymm8_c;
sub ymm8_d ymm10_d ymm8_d;
sub ymm8_e ymm10_e ymm8_e;
sub ymm8_f ymm10_f ymm8_f;
(* vpaddw %ymm11,%ymm9,%ymm10                      #! PC = 0x555555559e4f *)
add ymm10_0 ymm9_0 ymm11_0;
add ymm10_1 ymm9_1 ymm11_1;
add ymm10_2 ymm9_2 ymm11_2;
add ymm10_3 ymm9_3 ymm11_3;
add ymm10_4 ymm9_4 ymm11_4;
add ymm10_5 ymm9_5 ymm11_5;
add ymm10_6 ymm9_6 ymm11_6;
add ymm10_7 ymm9_7 ymm11_7;
add ymm10_8 ymm9_8 ymm11_8;
add ymm10_9 ymm9_9 ymm11_9;
add ymm10_a ymm9_a ymm11_a;
add ymm10_b ymm9_b ymm11_b;
add ymm10_c ymm9_c ymm11_c;
add ymm10_d ymm9_d ymm11_d;
add ymm10_e ymm9_e ymm11_e;
add ymm10_f ymm9_f ymm11_f;
(* vpsubw %ymm11,%ymm9,%ymm11                      #! PC = 0x555555559e54 *)
sub ymm11_0 ymm9_0 ymm11_0;
sub ymm11_1 ymm9_1 ymm11_1;
sub ymm11_2 ymm9_2 ymm11_2;
sub ymm11_3 ymm9_3 ymm11_3;
sub ymm11_4 ymm9_4 ymm11_4;
sub ymm11_5 ymm9_5 ymm11_5;
sub ymm11_6 ymm9_6 ymm11_6;
sub ymm11_7 ymm9_7 ymm11_7;
sub ymm11_8 ymm9_8 ymm11_8;
sub ymm11_9 ymm9_9 ymm11_9;
sub ymm11_a ymm9_a ymm11_a;
sub ymm11_b ymm9_b ymm11_b;
sub ymm11_c ymm9_c ymm11_c;
sub ymm11_d ymm9_d ymm11_d;
sub ymm11_e ymm9_e ymm11_e;
sub ymm11_f ymm9_f ymm11_f;
(* vpunpcklwd %ymm3,%ymm7,%ymm9                    #! PC = 0x555555559e59 *)
mov lwd_0 ymm7_0;
mov lwd_1 ymm3_0;
mov lwd_2 ymm7_1;
mov lwd_3 ymm3_1;
mov lwd_4 ymm7_2;
mov lwd_5 ymm3_2;
mov lwd_6 ymm7_3;
mov lwd_7 ymm3_3;
mov lwd_8 ymm7_8;
mov lwd_9 ymm3_8;
mov lwd_a ymm7_9;
mov lwd_b ymm3_9;
mov lwd_c ymm7_a;
mov lwd_d ymm3_a;
mov lwd_e ymm7_b;
mov lwd_f ymm3_b;
mov ymm9_0 lwd_0;
mov ymm9_1 lwd_1;
mov ymm9_2 lwd_2;
mov ymm9_3 lwd_3;
mov ymm9_4 lwd_4;
mov ymm9_5 lwd_5;
mov ymm9_6 lwd_6;
mov ymm9_7 lwd_7;
mov ymm9_8 lwd_8;
mov ymm9_9 lwd_9;
mov ymm9_a lwd_a;
mov ymm9_b lwd_b;
mov ymm9_c lwd_c;
mov ymm9_d lwd_d;
mov ymm9_e lwd_e;
mov ymm9_f lwd_f;
(* vpunpckhwd %ymm3,%ymm7,%ymm3                    #! PC = 0x555555559e5d *)
mov hwd_0 ymm7_4;
mov hwd_1 ymm3_4;
mov hwd_2 ymm7_5;
mov hwd_3 ymm3_5;
mov hwd_4 ymm7_6;
mov hwd_5 ymm3_6;
mov hwd_6 ymm7_7;
mov hwd_7 ymm3_7;
mov hwd_8 ymm7_c;
mov hwd_9 ymm3_c;
mov hwd_a ymm7_d;
mov hwd_b ymm3_d;
mov hwd_c ymm7_e;
mov hwd_d ymm3_e;
mov hwd_e ymm7_f;
mov hwd_f ymm3_f;
mov ymm3_0 hwd_0;
mov ymm3_1 hwd_1;
mov ymm3_2 hwd_2;
mov ymm3_3 hwd_3;
mov ymm3_4 hwd_4;
mov ymm3_5 hwd_5;
mov ymm3_6 hwd_6;
mov ymm3_7 hwd_7;
mov ymm3_8 hwd_8;
mov ymm3_9 hwd_9;
mov ymm3_a hwd_a;
mov ymm3_b hwd_b;
mov ymm3_c hwd_c;
mov ymm3_d hwd_d;
mov ymm3_e hwd_e;
mov ymm3_f hwd_f;
(* vpunpcklwd %ymm6,%ymm5,%ymm7                    #! PC = 0x555555559e61 *)
mov lwd_0 ymm5_0;
mov lwd_1 ymm6_0;
mov lwd_2 ymm5_1;
mov lwd_3 ymm6_1;
mov lwd_4 ymm5_2;
mov lwd_5 ymm6_2;
mov lwd_6 ymm5_3;
mov lwd_7 ymm6_3;
mov lwd_8 ymm5_8;
mov lwd_9 ymm6_8;
mov lwd_a ymm5_9;
mov lwd_b ymm6_9;
mov lwd_c ymm5_a;
mov lwd_d ymm6_a;
mov lwd_e ymm5_b;
mov lwd_f ymm6_b;
mov ymm7_0 lwd_0;
mov ymm7_1 lwd_1;
mov ymm7_2 lwd_2;
mov ymm7_3 lwd_3;
mov ymm7_4 lwd_4;
mov ymm7_5 lwd_5;
mov ymm7_6 lwd_6;
mov ymm7_7 lwd_7;
mov ymm7_8 lwd_8;
mov ymm7_9 lwd_9;
mov ymm7_a lwd_a;
mov ymm7_b lwd_b;
mov ymm7_c lwd_c;
mov ymm7_d lwd_d;
mov ymm7_e lwd_e;
mov ymm7_f lwd_f;
(* vpunpckhwd %ymm6,%ymm5,%ymm6                    #! PC = 0x555555559e65 *)
mov hwd_0 ymm5_4;
mov hwd_1 ymm6_4;
mov hwd_2 ymm5_5;
mov hwd_3 ymm6_5;
mov hwd_4 ymm5_6;
mov hwd_5 ymm6_6;
mov hwd_6 ymm5_7;
mov hwd_7 ymm6_7;
mov hwd_8 ymm5_c;
mov hwd_9 ymm6_c;
mov hwd_a ymm5_d;
mov hwd_b ymm6_d;
mov hwd_c ymm5_e;
mov hwd_d ymm6_e;
mov hwd_e ymm5_f;
mov hwd_f ymm6_f;
mov ymm6_0 hwd_0;
mov ymm6_1 hwd_1;
mov ymm6_2 hwd_2;
mov ymm6_3 hwd_3;
mov ymm6_4 hwd_4;
mov ymm6_5 hwd_5;
mov ymm6_6 hwd_6;
mov ymm6_7 hwd_7;
mov ymm6_8 hwd_8;
mov ymm6_9 hwd_9;
mov ymm6_a hwd_a;
mov ymm6_b hwd_b;
mov ymm6_c hwd_c;
mov ymm6_d hwd_d;
mov ymm6_e hwd_e;
mov ymm6_f hwd_f;
(* vpunpcklwd %ymm8,%ymm4,%ymm5                    #! PC = 0x555555559e69 *)
mov lwd_0 ymm4_0;
mov lwd_1 ymm8_0;
mov lwd_2 ymm4_1;
mov lwd_3 ymm8_1;
mov lwd_4 ymm4_2;
mov lwd_5 ymm8_2;
mov lwd_6 ymm4_3;
mov lwd_7 ymm8_3;
mov lwd_8 ymm4_8;
mov lwd_9 ymm8_8;
mov lwd_a ymm4_9;
mov lwd_b ymm8_9;
mov lwd_c ymm4_a;
mov lwd_d ymm8_a;
mov lwd_e ymm4_b;
mov lwd_f ymm8_b;
mov ymm5_0 lwd_0;
mov ymm5_1 lwd_1;
mov ymm5_2 lwd_2;
mov ymm5_3 lwd_3;
mov ymm5_4 lwd_4;
mov ymm5_5 lwd_5;
mov ymm5_6 lwd_6;
mov ymm5_7 lwd_7;
mov ymm5_8 lwd_8;
mov ymm5_9 lwd_9;
mov ymm5_a lwd_a;
mov ymm5_b lwd_b;
mov ymm5_c lwd_c;
mov ymm5_d lwd_d;
mov ymm5_e lwd_e;
mov ymm5_f lwd_f;
(* vpunpckhwd %ymm8,%ymm4,%ymm8                    #! PC = 0x555555559e6e *)
mov hwd_0 ymm4_4;
mov hwd_1 ymm8_4;
mov hwd_2 ymm4_5;
mov hwd_3 ymm8_5;
mov hwd_4 ymm4_6;
mov hwd_5 ymm8_6;
mov hwd_6 ymm4_7;
mov hwd_7 ymm8_7;
mov hwd_8 ymm4_c;
mov hwd_9 ymm8_c;
mov hwd_a ymm4_d;
mov hwd_b ymm8_d;
mov hwd_c ymm4_e;
mov hwd_d ymm8_e;
mov hwd_e ymm4_f;
mov hwd_f ymm8_f;
mov ymm8_0 hwd_0;
mov ymm8_1 hwd_1;
mov ymm8_2 hwd_2;
mov ymm8_3 hwd_3;
mov ymm8_4 hwd_4;
mov ymm8_5 hwd_5;
mov ymm8_6 hwd_6;
mov ymm8_7 hwd_7;
mov ymm8_8 hwd_8;
mov ymm8_9 hwd_9;
mov ymm8_a hwd_a;
mov ymm8_b hwd_b;
mov ymm8_c hwd_c;
mov ymm8_d hwd_d;
mov ymm8_e hwd_e;
mov ymm8_f hwd_f;
(* vpunpcklwd %ymm11,%ymm10,%ymm4                  #! PC = 0x555555559e73 *)
mov lwd_0 ymm10_0;
mov lwd_1 ymm11_0;
mov lwd_2 ymm10_1;
mov lwd_3 ymm11_1;
mov lwd_4 ymm10_2;
mov lwd_5 ymm11_2;
mov lwd_6 ymm10_3;
mov lwd_7 ymm11_3;
mov lwd_8 ymm10_8;
mov lwd_9 ymm11_8;
mov lwd_a ymm10_9;
mov lwd_b ymm11_9;
mov lwd_c ymm10_a;
mov lwd_d ymm11_a;
mov lwd_e ymm10_b;
mov lwd_f ymm11_b;
mov ymm4_0 lwd_0;
mov ymm4_1 lwd_1;
mov ymm4_2 lwd_2;
mov ymm4_3 lwd_3;
mov ymm4_4 lwd_4;
mov ymm4_5 lwd_5;
mov ymm4_6 lwd_6;
mov ymm4_7 lwd_7;
mov ymm4_8 lwd_8;
mov ymm4_9 lwd_9;
mov ymm4_a lwd_a;
mov ymm4_b lwd_b;
mov ymm4_c lwd_c;
mov ymm4_d lwd_d;
mov ymm4_e lwd_e;
mov ymm4_f lwd_f;
(* vpunpckhwd %ymm11,%ymm10,%ymm11                 #! PC = 0x555555559e78 *)
mov hwd_0 ymm10_4;
mov hwd_1 ymm11_4;
mov hwd_2 ymm10_5;
mov hwd_3 ymm11_5;
mov hwd_4 ymm10_6;
mov hwd_5 ymm11_6;
mov hwd_6 ymm10_7;
mov hwd_7 ymm11_7;
mov hwd_8 ymm10_c;
mov hwd_9 ymm11_c;
mov hwd_a ymm10_d;
mov hwd_b ymm11_d;
mov hwd_c ymm10_e;
mov hwd_d ymm11_e;
mov hwd_e ymm10_f;
mov hwd_f ymm11_f;
mov ymm11_0 hwd_0;
mov ymm11_1 hwd_1;
mov ymm11_2 hwd_2;
mov ymm11_3 hwd_3;
mov ymm11_4 hwd_4;
mov ymm11_5 hwd_5;
mov ymm11_6 hwd_6;
mov ymm11_7 hwd_7;
mov ymm11_8 hwd_8;
mov ymm11_9 hwd_9;
mov ymm11_a hwd_a;
mov ymm11_b hwd_b;
mov ymm11_c hwd_c;
mov ymm11_d hwd_d;
mov ymm11_e hwd_e;
mov ymm11_f hwd_f;
(* vbroadcasti128 0x2c0(%rdx),%ymm1                #! EA = L0x5555555613e0; Value = 0x316da839ef6806e7; PC = 0x555555559e7d *)
mov ymm1_0 L0x5555555613e0;
mov ymm1_1 L0x5555555613e2;
mov ymm1_2 L0x5555555613e4;
mov ymm1_3 L0x5555555613e6;
mov ymm1_4 L0x5555555613e8;
mov ymm1_5 L0x5555555613ea;
mov ymm1_6 L0x5555555613ec;
mov ymm1_7 L0x5555555613ee;
mov ymm1_8 L0x5555555613e0;
mov ymm1_9 L0x5555555613e2;
mov ymm1_a L0x5555555613e4;
mov ymm1_b L0x5555555613e6;
mov ymm1_c L0x5555555613e8;
mov ymm1_d L0x5555555613ea;
mov ymm1_e L0x5555555613ec;
mov ymm1_f L0x5555555613ee;
(* vbroadcasti128 0x4c0(%rdx),%ymm2                #! EA = L0x5555555615e0; Value = 0x136d0239ff68ece7; PC = 0x555555559e86 *)
mov ymm2_0 L0x5555555615e0;
mov ymm2_1 L0x5555555615e2;
mov ymm2_2 L0x5555555615e4;
mov ymm2_3 L0x5555555615e6;
mov ymm2_4 L0x5555555615e8;
mov ymm2_5 L0x5555555615ea;
mov ymm2_6 L0x5555555615ec;
mov ymm2_7 L0x5555555615ee;
mov ymm2_8 L0x5555555615e0;
mov ymm2_9 L0x5555555615e2;
mov ymm2_a L0x5555555615e4;
mov ymm2_b L0x5555555615e6;
mov ymm2_c L0x5555555615e8;
mov ymm2_d L0x5555555615ea;
mov ymm2_e L0x5555555615ec;
mov ymm2_f L0x5555555615ee;
(* vpmullw %ymm1,%ymm3,%ymm10                      #! PC = 0x555555559e8f *)
smull mulHymm3_0 mulL_0 ymm1_0 ymm3_0;
smull mulHymm3_1 mulL_1 ymm1_1 ymm3_1;
smull mulHymm3_2 mulL_2 ymm1_2 ymm3_2;
smull mulHymm3_3 mulL_3 ymm1_3 ymm3_3;
smull mulHymm3_4 mulL_4 ymm1_4 ymm3_4;
smull mulHymm3_5 mulL_5 ymm1_5 ymm3_5;
smull mulHymm3_6 mulL_6 ymm1_6 ymm3_6;
smull mulHymm3_7 mulL_7 ymm1_7 ymm3_7;
smull mulHymm3_8 mulL_8 ymm1_8 ymm3_8;
smull mulHymm3_9 mulL_9 ymm1_9 ymm3_9;
smull mulHymm3_a mulL_a ymm1_a ymm3_a;
smull mulHymm3_b mulL_b ymm1_b ymm3_b;
smull mulHymm3_c mulL_c ymm1_c ymm3_c;
smull mulHymm3_d mulL_d ymm1_d ymm3_d;
smull mulHymm3_e mulL_e ymm1_e ymm3_e;
smull mulHymm3_f mulL_f ymm1_f ymm3_f;
cast ymm10_0@sint16 mulL_0;
cast ymm10_1@sint16 mulL_1;
cast ymm10_2@sint16 mulL_2;
cast ymm10_3@sint16 mulL_3;
cast ymm10_4@sint16 mulL_4;
cast ymm10_5@sint16 mulL_5;
cast ymm10_6@sint16 mulL_6;
cast ymm10_7@sint16 mulL_7;
cast ymm10_8@sint16 mulL_8;
cast ymm10_9@sint16 mulL_9;
cast ymm10_a@sint16 mulL_a;
cast ymm10_b@sint16 mulL_b;
cast ymm10_c@sint16 mulL_c;
cast ymm10_d@sint16 mulL_d;
cast ymm10_e@sint16 mulL_e;
cast ymm10_f@sint16 mulL_f;
(* vpmulhw %ymm2,%ymm3,%ymm3                       #! PC = 0x555555559e93 *)
smull mulH_0 mulLymm3_0 ymm3_0 ymm2_0;
smull mulH_1 mulLymm3_1 ymm3_1 ymm2_1;
smull mulH_2 mulLymm3_2 ymm3_2 ymm2_2;
smull mulH_3 mulLymm3_3 ymm3_3 ymm2_3;
smull mulH_4 mulLymm3_4 ymm3_4 ymm2_4;
smull mulH_5 mulLymm3_5 ymm3_5 ymm2_5;
smull mulH_6 mulLymm3_6 ymm3_6 ymm2_6;
smull mulH_7 mulLymm3_7 ymm3_7 ymm2_7;
smull mulH_8 mulLymm3_8 ymm3_8 ymm2_8;
smull mulH_9 mulLymm3_9 ymm3_9 ymm2_9;
smull mulH_a mulLymm3_a ymm3_a ymm2_a;
smull mulH_b mulLymm3_b ymm3_b ymm2_b;
smull mulH_c mulLymm3_c ymm3_c ymm2_c;
smull mulH_d mulLymm3_d ymm3_d ymm2_d;
smull mulH_e mulLymm3_e ymm3_e ymm2_e;
smull mulH_f mulLymm3_f ymm3_f ymm2_f;
mov ymm3_0 mulH_0;
mov ymm3_1 mulH_1;
mov ymm3_2 mulH_2;
mov ymm3_3 mulH_3;
mov ymm3_4 mulH_4;
mov ymm3_5 mulH_5;
mov ymm3_6 mulH_6;
mov ymm3_7 mulH_7;
mov ymm3_8 mulH_8;
mov ymm3_9 mulH_9;
mov ymm3_a mulH_a;
mov ymm3_b mulH_b;
mov ymm3_c mulH_c;
mov ymm3_d mulH_d;
mov ymm3_e mulH_e;
mov ymm3_f mulH_f;
(* vpmulhw %ymm0,%ymm10,%ymm10                     #! PC = 0x555555559e97 *)
smull mulH_0 red_0 ymm10_0 ymm0_0;
assert true && red_0 = mulLymm3_0;
assume red_0 = mulLymm3_0 && true;
smull mulH_1 red_1 ymm10_1 ymm0_1;
assert true && red_1 = mulLymm3_1;
assume red_1 = mulLymm3_1 && true;
smull mulH_2 red_2 ymm10_2 ymm0_2;
assert true && red_2 = mulLymm3_2;
assume red_2 = mulLymm3_2 && true;
smull mulH_3 red_3 ymm10_3 ymm0_3;
assert true && red_3 = mulLymm3_3;
assume red_3 = mulLymm3_3 && true;
smull mulH_4 red_4 ymm10_4 ymm0_4;
assert true && red_4 = mulLymm3_4;
assume red_4 = mulLymm3_4 && true;
smull mulH_5 red_5 ymm10_5 ymm0_5;
assert true && red_5 = mulLymm3_5;
assume red_5 = mulLymm3_5 && true;
smull mulH_6 red_6 ymm10_6 ymm0_6;
assert true && red_6 = mulLymm3_6;
assume red_6 = mulLymm3_6 && true;
smull mulH_7 red_7 ymm10_7 ymm0_7;
assert true && red_7 = mulLymm3_7;
assume red_7 = mulLymm3_7 && true;
smull mulH_8 red_8 ymm10_8 ymm0_8;
assert true && red_8 = mulLymm3_8;
assume red_8 = mulLymm3_8 && true;
smull mulH_9 red_9 ymm10_9 ymm0_9;
assert true && red_9 = mulLymm3_9;
assume red_9 = mulLymm3_9 && true;
smull mulH_a red_a ymm10_a ymm0_a;
assert true && red_a = mulLymm3_a;
assume red_a = mulLymm3_a && true;
smull mulH_b red_b ymm10_b ymm0_b;
assert true && red_b = mulLymm3_b;
assume red_b = mulLymm3_b && true;
smull mulH_c red_c ymm10_c ymm0_c;
assert true && red_c = mulLymm3_c;
assume red_c = mulLymm3_c && true;
smull mulH_d red_d ymm10_d ymm0_d;
assert true && red_d = mulLymm3_d;
assume red_d = mulLymm3_d && true;
smull mulH_e red_e ymm10_e ymm0_e;
assert true && red_e = mulLymm3_e;
assume red_e = mulLymm3_e && true;
smull mulH_f red_f ymm10_f ymm0_f;
assert true && red_f = mulLymm3_f;
assume red_f = mulLymm3_f && true;
mov ymm10_0 mulH_0;
mov ymm10_1 mulH_1;
mov ymm10_2 mulH_2;
mov ymm10_3 mulH_3;
mov ymm10_4 mulH_4;
mov ymm10_5 mulH_5;
mov ymm10_6 mulH_6;
mov ymm10_7 mulH_7;
mov ymm10_8 mulH_8;
mov ymm10_9 mulH_9;
mov ymm10_a mulH_a;
mov ymm10_b mulH_b;
mov ymm10_c mulH_c;
mov ymm10_d mulH_d;
mov ymm10_e mulH_e;
mov ymm10_f mulH_f;
(* vpsubw %ymm10,%ymm3,%ymm3                       #! PC = 0x555555559e9b *)
sub ymm3_0 ymm3_0 ymm10_0;
sub ymm3_1 ymm3_1 ymm10_1;
sub ymm3_2 ymm3_2 ymm10_2;
sub ymm3_3 ymm3_3 ymm10_3;
sub ymm3_4 ymm3_4 ymm10_4;
sub ymm3_5 ymm3_5 ymm10_5;
sub ymm3_6 ymm3_6 ymm10_6;
sub ymm3_7 ymm3_7 ymm10_7;
sub ymm3_8 ymm3_8 ymm10_8;
sub ymm3_9 ymm3_9 ymm10_9;
sub ymm3_a ymm3_a ymm10_a;
sub ymm3_b ymm3_b ymm10_b;
sub ymm3_c ymm3_c ymm10_c;
sub ymm3_d ymm3_d ymm10_d;
sub ymm3_e ymm3_e ymm10_e;
sub ymm3_f ymm3_f ymm10_f;
(* vbroadcasti128 0x2d0(%rdx),%ymm1                #! EA = L0x5555555613f0; Value = 0xcb4450b532e01f5b; PC = 0x555555559ea0 *)
mov ymm1_0 L0x5555555613f0;
mov ymm1_1 L0x5555555613f2;
mov ymm1_2 L0x5555555613f4;
mov ymm1_3 L0x5555555613f6;
mov ymm1_4 L0x5555555613f8;
mov ymm1_5 L0x5555555613fa;
mov ymm1_6 L0x5555555613fc;
mov ymm1_7 L0x5555555613fe;
mov ymm1_8 L0x5555555613f0;
mov ymm1_9 L0x5555555613f2;
mov ymm1_a L0x5555555613f4;
mov ymm1_b L0x5555555613f6;
mov ymm1_c L0x5555555613f8;
mov ymm1_d L0x5555555613fa;
mov ymm1_e L0x5555555613fc;
mov ymm1_f L0x5555555613fe;
(* vbroadcasti128 0x4d0(%rdx),%ymm2                #! EA = L0x5555555615f0; Value = 0xf34402b5f2e00d5b; PC = 0x555555559ea9 *)
mov ymm2_0 L0x5555555615f0;
mov ymm2_1 L0x5555555615f2;
mov ymm2_2 L0x5555555615f4;
mov ymm2_3 L0x5555555615f6;
mov ymm2_4 L0x5555555615f8;
mov ymm2_5 L0x5555555615fa;
mov ymm2_6 L0x5555555615fc;
mov ymm2_7 L0x5555555615fe;
mov ymm2_8 L0x5555555615f0;
mov ymm2_9 L0x5555555615f2;
mov ymm2_a L0x5555555615f4;
mov ymm2_b L0x5555555615f6;
mov ymm2_c L0x5555555615f8;
mov ymm2_d L0x5555555615fa;
mov ymm2_e L0x5555555615fc;
mov ymm2_f L0x5555555615fe;
(* vpmullw %ymm1,%ymm6,%ymm10                      #! PC = 0x555555559eb2 *)
smull mulHymm6_0 mulL_0 ymm1_0 ymm6_0;
smull mulHymm6_1 mulL_1 ymm1_1 ymm6_1;
smull mulHymm6_2 mulL_2 ymm1_2 ymm6_2;
smull mulHymm6_3 mulL_3 ymm1_3 ymm6_3;
smull mulHymm6_4 mulL_4 ymm1_4 ymm6_4;
smull mulHymm6_5 mulL_5 ymm1_5 ymm6_5;
smull mulHymm6_6 mulL_6 ymm1_6 ymm6_6;
smull mulHymm6_7 mulL_7 ymm1_7 ymm6_7;
smull mulHymm6_8 mulL_8 ymm1_8 ymm6_8;
smull mulHymm6_9 mulL_9 ymm1_9 ymm6_9;
smull mulHymm6_a mulL_a ymm1_a ymm6_a;
smull mulHymm6_b mulL_b ymm1_b ymm6_b;
smull mulHymm6_c mulL_c ymm1_c ymm6_c;
smull mulHymm6_d mulL_d ymm1_d ymm6_d;
smull mulHymm6_e mulL_e ymm1_e ymm6_e;
smull mulHymm6_f mulL_f ymm1_f ymm6_f;
cast ymm10_0@sint16 mulL_0;
cast ymm10_1@sint16 mulL_1;
cast ymm10_2@sint16 mulL_2;
cast ymm10_3@sint16 mulL_3;
cast ymm10_4@sint16 mulL_4;
cast ymm10_5@sint16 mulL_5;
cast ymm10_6@sint16 mulL_6;
cast ymm10_7@sint16 mulL_7;
cast ymm10_8@sint16 mulL_8;
cast ymm10_9@sint16 mulL_9;
cast ymm10_a@sint16 mulL_a;
cast ymm10_b@sint16 mulL_b;
cast ymm10_c@sint16 mulL_c;
cast ymm10_d@sint16 mulL_d;
cast ymm10_e@sint16 mulL_e;
cast ymm10_f@sint16 mulL_f;
(* vpmulhw %ymm2,%ymm6,%ymm6                       #! PC = 0x555555559eb6 *)
smull mulH_0 mulLymm6_0 ymm6_0 ymm2_0;
smull mulH_1 mulLymm6_1 ymm6_1 ymm2_1;
smull mulH_2 mulLymm6_2 ymm6_2 ymm2_2;
smull mulH_3 mulLymm6_3 ymm6_3 ymm2_3;
smull mulH_4 mulLymm6_4 ymm6_4 ymm2_4;
smull mulH_5 mulLymm6_5 ymm6_5 ymm2_5;
smull mulH_6 mulLymm6_6 ymm6_6 ymm2_6;
smull mulH_7 mulLymm6_7 ymm6_7 ymm2_7;
smull mulH_8 mulLymm6_8 ymm6_8 ymm2_8;
smull mulH_9 mulLymm6_9 ymm6_9 ymm2_9;
smull mulH_a mulLymm6_a ymm6_a ymm2_a;
smull mulH_b mulLymm6_b ymm6_b ymm2_b;
smull mulH_c mulLymm6_c ymm6_c ymm2_c;
smull mulH_d mulLymm6_d ymm6_d ymm2_d;
smull mulH_e mulLymm6_e ymm6_e ymm2_e;
smull mulH_f mulLymm6_f ymm6_f ymm2_f;
mov ymm6_0 mulH_0;
mov ymm6_1 mulH_1;
mov ymm6_2 mulH_2;
mov ymm6_3 mulH_3;
mov ymm6_4 mulH_4;
mov ymm6_5 mulH_5;
mov ymm6_6 mulH_6;
mov ymm6_7 mulH_7;
mov ymm6_8 mulH_8;
mov ymm6_9 mulH_9;
mov ymm6_a mulH_a;
mov ymm6_b mulH_b;
mov ymm6_c mulH_c;
mov ymm6_d mulH_d;
mov ymm6_e mulH_e;
mov ymm6_f mulH_f;
(* vpmulhw %ymm0,%ymm10,%ymm10                     #! PC = 0x555555559eba *)
smull mulH_0 red_0 ymm10_0 ymm0_0;
assert true && red_0 = mulLymm6_0;
assume red_0 = mulLymm6_0 && true;
smull mulH_1 red_1 ymm10_1 ymm0_1;
assert true && red_1 = mulLymm6_1;
assume red_1 = mulLymm6_1 && true;
smull mulH_2 red_2 ymm10_2 ymm0_2;
assert true && red_2 = mulLymm6_2;
assume red_2 = mulLymm6_2 && true;
smull mulH_3 red_3 ymm10_3 ymm0_3;
assert true && red_3 = mulLymm6_3;
assume red_3 = mulLymm6_3 && true;
smull mulH_4 red_4 ymm10_4 ymm0_4;
assert true && red_4 = mulLymm6_4;
assume red_4 = mulLymm6_4 && true;
smull mulH_5 red_5 ymm10_5 ymm0_5;
assert true && red_5 = mulLymm6_5;
assume red_5 = mulLymm6_5 && true;
smull mulH_6 red_6 ymm10_6 ymm0_6;
assert true && red_6 = mulLymm6_6;
assume red_6 = mulLymm6_6 && true;
smull mulH_7 red_7 ymm10_7 ymm0_7;
assert true && red_7 = mulLymm6_7;
assume red_7 = mulLymm6_7 && true;
smull mulH_8 red_8 ymm10_8 ymm0_8;
assert true && red_8 = mulLymm6_8;
assume red_8 = mulLymm6_8 && true;
smull mulH_9 red_9 ymm10_9 ymm0_9;
assert true && red_9 = mulLymm6_9;
assume red_9 = mulLymm6_9 && true;
smull mulH_a red_a ymm10_a ymm0_a;
assert true && red_a = mulLymm6_a;
assume red_a = mulLymm6_a && true;
smull mulH_b red_b ymm10_b ymm0_b;
assert true && red_b = mulLymm6_b;
assume red_b = mulLymm6_b && true;
smull mulH_c red_c ymm10_c ymm0_c;
assert true && red_c = mulLymm6_c;
assume red_c = mulLymm6_c && true;
smull mulH_d red_d ymm10_d ymm0_d;
assert true && red_d = mulLymm6_d;
assume red_d = mulLymm6_d && true;
smull mulH_e red_e ymm10_e ymm0_e;
assert true && red_e = mulLymm6_e;
assume red_e = mulLymm6_e && true;
smull mulH_f red_f ymm10_f ymm0_f;
assert true && red_f = mulLymm6_f;
assume red_f = mulLymm6_f && true;
mov ymm10_0 mulH_0;
mov ymm10_1 mulH_1;
mov ymm10_2 mulH_2;
mov ymm10_3 mulH_3;
mov ymm10_4 mulH_4;
mov ymm10_5 mulH_5;
mov ymm10_6 mulH_6;
mov ymm10_7 mulH_7;
mov ymm10_8 mulH_8;
mov ymm10_9 mulH_9;
mov ymm10_a mulH_a;
mov ymm10_b mulH_b;
mov ymm10_c mulH_c;
mov ymm10_d mulH_d;
mov ymm10_e mulH_e;
mov ymm10_f mulH_f;
(* vpsubw %ymm10,%ymm6,%ymm6                       #! PC = 0x555555559ebe *)
sub ymm6_0 ymm6_0 ymm10_0;
sub ymm6_1 ymm6_1 ymm10_1;
sub ymm6_2 ymm6_2 ymm10_2;
sub ymm6_3 ymm6_3 ymm10_3;
sub ymm6_4 ymm6_4 ymm10_4;
sub ymm6_5 ymm6_5 ymm10_5;
sub ymm6_6 ymm6_6 ymm10_6;
sub ymm6_7 ymm6_7 ymm10_7;
sub ymm6_8 ymm6_8 ymm10_8;
sub ymm6_9 ymm6_9 ymm10_9;
sub ymm6_a ymm6_a ymm10_a;
sub ymm6_b ymm6_b ymm10_b;
sub ymm6_c ymm6_c ymm10_c;
sub ymm6_d ymm6_d ymm10_d;
sub ymm6_e ymm6_e ymm10_e;
sub ymm6_f ymm6_f ymm10_f;
(* vbroadcasti128 0x2e0(%rdx),%ymm1                #! EA = L0x555555561400; Value = 0x1e795ae5f9b7ca0d; PC = 0x555555559ec3 *)
mov ymm1_0 L0x555555561400;
mov ymm1_1 L0x555555561402;
mov ymm1_2 L0x555555561404;
mov ymm1_3 L0x555555561406;
mov ymm1_4 L0x555555561408;
mov ymm1_5 L0x55555556140a;
mov ymm1_6 L0x55555556140c;
mov ymm1_7 L0x55555556140e;
mov ymm1_8 L0x555555561400;
mov ymm1_9 L0x555555561402;
mov ymm1_a L0x555555561404;
mov ymm1_b L0x555555561406;
mov ymm1_c L0x555555561408;
mov ymm1_d L0x55555556140a;
mov ymm1_e L0x55555556140c;
mov ymm1_f L0x55555556140e;
(* vbroadcasti128 0x4e0(%rdx),%ymm2                #! EA = L0x555555561600; Value = 0xf879ece5ffb7ec0d; PC = 0x555555559ecc *)
mov ymm2_0 L0x555555561600;
mov ymm2_1 L0x555555561602;
mov ymm2_2 L0x555555561604;
mov ymm2_3 L0x555555561606;
mov ymm2_4 L0x555555561608;
mov ymm2_5 L0x55555556160a;
mov ymm2_6 L0x55555556160c;
mov ymm2_7 L0x55555556160e;
mov ymm2_8 L0x555555561600;
mov ymm2_9 L0x555555561602;
mov ymm2_a L0x555555561604;
mov ymm2_b L0x555555561606;
mov ymm2_c L0x555555561608;
mov ymm2_d L0x55555556160a;
mov ymm2_e L0x55555556160c;
mov ymm2_f L0x55555556160e;
(* vpmullw %ymm1,%ymm8,%ymm10                      #! PC = 0x555555559ed5 *)
smull mulHymm8_0 mulL_0 ymm1_0 ymm8_0;
smull mulHymm8_1 mulL_1 ymm1_1 ymm8_1;
smull mulHymm8_2 mulL_2 ymm1_2 ymm8_2;
smull mulHymm8_3 mulL_3 ymm1_3 ymm8_3;
smull mulHymm8_4 mulL_4 ymm1_4 ymm8_4;
smull mulHymm8_5 mulL_5 ymm1_5 ymm8_5;
smull mulHymm8_6 mulL_6 ymm1_6 ymm8_6;
smull mulHymm8_7 mulL_7 ymm1_7 ymm8_7;
smull mulHymm8_8 mulL_8 ymm1_8 ymm8_8;
smull mulHymm8_9 mulL_9 ymm1_9 ymm8_9;
smull mulHymm8_a mulL_a ymm1_a ymm8_a;
smull mulHymm8_b mulL_b ymm1_b ymm8_b;
smull mulHymm8_c mulL_c ymm1_c ymm8_c;
smull mulHymm8_d mulL_d ymm1_d ymm8_d;
smull mulHymm8_e mulL_e ymm1_e ymm8_e;
smull mulHymm8_f mulL_f ymm1_f ymm8_f;
cast ymm10_0@sint16 mulL_0;
cast ymm10_1@sint16 mulL_1;
cast ymm10_2@sint16 mulL_2;
cast ymm10_3@sint16 mulL_3;
cast ymm10_4@sint16 mulL_4;
cast ymm10_5@sint16 mulL_5;
cast ymm10_6@sint16 mulL_6;
cast ymm10_7@sint16 mulL_7;
cast ymm10_8@sint16 mulL_8;
cast ymm10_9@sint16 mulL_9;
cast ymm10_a@sint16 mulL_a;
cast ymm10_b@sint16 mulL_b;
cast ymm10_c@sint16 mulL_c;
cast ymm10_d@sint16 mulL_d;
cast ymm10_e@sint16 mulL_e;
cast ymm10_f@sint16 mulL_f;
(* vpmulhw %ymm2,%ymm8,%ymm8                       #! PC = 0x555555559ed9 *)
smull mulH_0 mulLymm8_0 ymm8_0 ymm2_0;
smull mulH_1 mulLymm8_1 ymm8_1 ymm2_1;
smull mulH_2 mulLymm8_2 ymm8_2 ymm2_2;
smull mulH_3 mulLymm8_3 ymm8_3 ymm2_3;
smull mulH_4 mulLymm8_4 ymm8_4 ymm2_4;
smull mulH_5 mulLymm8_5 ymm8_5 ymm2_5;
smull mulH_6 mulLymm8_6 ymm8_6 ymm2_6;
smull mulH_7 mulLymm8_7 ymm8_7 ymm2_7;
smull mulH_8 mulLymm8_8 ymm8_8 ymm2_8;
smull mulH_9 mulLymm8_9 ymm8_9 ymm2_9;
smull mulH_a mulLymm8_a ymm8_a ymm2_a;
smull mulH_b mulLymm8_b ymm8_b ymm2_b;
smull mulH_c mulLymm8_c ymm8_c ymm2_c;
smull mulH_d mulLymm8_d ymm8_d ymm2_d;
smull mulH_e mulLymm8_e ymm8_e ymm2_e;
smull mulH_f mulLymm8_f ymm8_f ymm2_f;
mov ymm8_0 mulH_0;
mov ymm8_1 mulH_1;
mov ymm8_2 mulH_2;
mov ymm8_3 mulH_3;
mov ymm8_4 mulH_4;
mov ymm8_5 mulH_5;
mov ymm8_6 mulH_6;
mov ymm8_7 mulH_7;
mov ymm8_8 mulH_8;
mov ymm8_9 mulH_9;
mov ymm8_a mulH_a;
mov ymm8_b mulH_b;
mov ymm8_c mulH_c;
mov ymm8_d mulH_d;
mov ymm8_e mulH_e;
mov ymm8_f mulH_f;
(* vpmulhw %ymm0,%ymm10,%ymm10                     #! PC = 0x555555559edd *)
smull mulH_0 red_0 ymm10_0 ymm0_0;
assert true && red_0 = mulLymm8_0;
assume red_0 = mulLymm8_0 && true;
smull mulH_1 red_1 ymm10_1 ymm0_1;
assert true && red_1 = mulLymm8_1;
assume red_1 = mulLymm8_1 && true;
smull mulH_2 red_2 ymm10_2 ymm0_2;
assert true && red_2 = mulLymm8_2;
assume red_2 = mulLymm8_2 && true;
smull mulH_3 red_3 ymm10_3 ymm0_3;
assert true && red_3 = mulLymm8_3;
assume red_3 = mulLymm8_3 && true;
smull mulH_4 red_4 ymm10_4 ymm0_4;
assert true && red_4 = mulLymm8_4;
assume red_4 = mulLymm8_4 && true;
smull mulH_5 red_5 ymm10_5 ymm0_5;
assert true && red_5 = mulLymm8_5;
assume red_5 = mulLymm8_5 && true;
smull mulH_6 red_6 ymm10_6 ymm0_6;
assert true && red_6 = mulLymm8_6;
assume red_6 = mulLymm8_6 && true;
smull mulH_7 red_7 ymm10_7 ymm0_7;
assert true && red_7 = mulLymm8_7;
assume red_7 = mulLymm8_7 && true;
smull mulH_8 red_8 ymm10_8 ymm0_8;
assert true && red_8 = mulLymm8_8;
assume red_8 = mulLymm8_8 && true;
smull mulH_9 red_9 ymm10_9 ymm0_9;
assert true && red_9 = mulLymm8_9;
assume red_9 = mulLymm8_9 && true;
smull mulH_a red_a ymm10_a ymm0_a;
assert true && red_a = mulLymm8_a;
assume red_a = mulLymm8_a && true;
smull mulH_b red_b ymm10_b ymm0_b;
assert true && red_b = mulLymm8_b;
assume red_b = mulLymm8_b && true;
smull mulH_c red_c ymm10_c ymm0_c;
assert true && red_c = mulLymm8_c;
assume red_c = mulLymm8_c && true;
smull mulH_d red_d ymm10_d ymm0_d;
assert true && red_d = mulLymm8_d;
assume red_d = mulLymm8_d && true;
smull mulH_e red_e ymm10_e ymm0_e;
assert true && red_e = mulLymm8_e;
assume red_e = mulLymm8_e && true;
smull mulH_f red_f ymm10_f ymm0_f;
assert true && red_f = mulLymm8_f;
assume red_f = mulLymm8_f && true;
mov ymm10_0 mulH_0;
mov ymm10_1 mulH_1;
mov ymm10_2 mulH_2;
mov ymm10_3 mulH_3;
mov ymm10_4 mulH_4;
mov ymm10_5 mulH_5;
mov ymm10_6 mulH_6;
mov ymm10_7 mulH_7;
mov ymm10_8 mulH_8;
mov ymm10_9 mulH_9;
mov ymm10_a mulH_a;
mov ymm10_b mulH_b;
mov ymm10_c mulH_c;
mov ymm10_d mulH_d;
mov ymm10_e mulH_e;
mov ymm10_f mulH_f;
(* vpsubw %ymm10,%ymm8,%ymm8                       #! PC = 0x555555559ee1 *)
sub ymm8_0 ymm8_0 ymm10_0;
sub ymm8_1 ymm8_1 ymm10_1;
sub ymm8_2 ymm8_2 ymm10_2;
sub ymm8_3 ymm8_3 ymm10_3;
sub ymm8_4 ymm8_4 ymm10_4;
sub ymm8_5 ymm8_5 ymm10_5;
sub ymm8_6 ymm8_6 ymm10_6;
sub ymm8_7 ymm8_7 ymm10_7;
sub ymm8_8 ymm8_8 ymm10_8;
sub ymm8_9 ymm8_9 ymm10_9;
sub ymm8_a ymm8_a ymm10_a;
sub ymm8_b ymm8_b ymm10_b;
sub ymm8_c ymm8_c ymm10_c;
sub ymm8_d ymm8_d ymm10_d;
sub ymm8_e ymm8_e ymm10_e;
sub ymm8_f ymm8_f ymm10_f;
(* vbroadcasti128 0x2f0(%rdx),%ymm1                #! EA = L0x555555561410; Value = 0x5e41be57aaf6d0be; PC = 0x555555559ee6 *)
mov ymm1_0 L0x555555561410;
mov ymm1_1 L0x555555561412;
mov ymm1_2 L0x555555561414;
mov ymm1_3 L0x555555561416;
mov ymm1_4 L0x555555561418;
mov ymm1_5 L0x55555556141a;
mov ymm1_6 L0x55555556141c;
mov ymm1_7 L0x55555556141e;
mov ymm1_8 L0x555555561410;
mov ymm1_9 L0x555555561412;
mov ymm1_a L0x555555561414;
mov ymm1_b L0x555555561416;
mov ymm1_c L0x555555561418;
mov ymm1_d L0x55555556141a;
mov ymm1_e L0x55555556141c;
mov ymm1_f L0x55555556141e;
(* vbroadcasti128 0x4f0(%rdx),%ymm2                #! EA = L0x555555561610; Value = 0x0841045706f6fcbe; PC = 0x555555559eef *)
mov ymm2_0 L0x555555561610;
mov ymm2_1 L0x555555561612;
mov ymm2_2 L0x555555561614;
mov ymm2_3 L0x555555561616;
mov ymm2_4 L0x555555561618;
mov ymm2_5 L0x55555556161a;
mov ymm2_6 L0x55555556161c;
mov ymm2_7 L0x55555556161e;
mov ymm2_8 L0x555555561610;
mov ymm2_9 L0x555555561612;
mov ymm2_a L0x555555561614;
mov ymm2_b L0x555555561616;
mov ymm2_c L0x555555561618;
mov ymm2_d L0x55555556161a;
mov ymm2_e L0x55555556161c;
mov ymm2_f L0x55555556161e;
(* vpmullw %ymm1,%ymm11,%ymm10                     #! PC = 0x555555559ef8 *)
smull mulHymm11_0 mulL_0 ymm1_0 ymm11_0;
smull mulHymm11_1 mulL_1 ymm1_1 ymm11_1;
smull mulHymm11_2 mulL_2 ymm1_2 ymm11_2;
smull mulHymm11_3 mulL_3 ymm1_3 ymm11_3;
smull mulHymm11_4 mulL_4 ymm1_4 ymm11_4;
smull mulHymm11_5 mulL_5 ymm1_5 ymm11_5;
smull mulHymm11_6 mulL_6 ymm1_6 ymm11_6;
smull mulHymm11_7 mulL_7 ymm1_7 ymm11_7;
smull mulHymm11_8 mulL_8 ymm1_8 ymm11_8;
smull mulHymm11_9 mulL_9 ymm1_9 ymm11_9;
smull mulHymm11_a mulL_a ymm1_a ymm11_a;
smull mulHymm11_b mulL_b ymm1_b ymm11_b;
smull mulHymm11_c mulL_c ymm1_c ymm11_c;
smull mulHymm11_d mulL_d ymm1_d ymm11_d;
smull mulHymm11_e mulL_e ymm1_e ymm11_e;
smull mulHymm11_f mulL_f ymm1_f ymm11_f;
cast ymm10_0@sint16 mulL_0;
cast ymm10_1@sint16 mulL_1;
cast ymm10_2@sint16 mulL_2;
cast ymm10_3@sint16 mulL_3;
cast ymm10_4@sint16 mulL_4;
cast ymm10_5@sint16 mulL_5;
cast ymm10_6@sint16 mulL_6;
cast ymm10_7@sint16 mulL_7;
cast ymm10_8@sint16 mulL_8;
cast ymm10_9@sint16 mulL_9;
cast ymm10_a@sint16 mulL_a;
cast ymm10_b@sint16 mulL_b;
cast ymm10_c@sint16 mulL_c;
cast ymm10_d@sint16 mulL_d;
cast ymm10_e@sint16 mulL_e;
cast ymm10_f@sint16 mulL_f;
(* vpmulhw %ymm2,%ymm11,%ymm11                     #! PC = 0x555555559efc *)
smull mulH_0 mulLymm11_0 ymm11_0 ymm2_0;
smull mulH_1 mulLymm11_1 ymm11_1 ymm2_1;
smull mulH_2 mulLymm11_2 ymm11_2 ymm2_2;
smull mulH_3 mulLymm11_3 ymm11_3 ymm2_3;
smull mulH_4 mulLymm11_4 ymm11_4 ymm2_4;
smull mulH_5 mulLymm11_5 ymm11_5 ymm2_5;
smull mulH_6 mulLymm11_6 ymm11_6 ymm2_6;
smull mulH_7 mulLymm11_7 ymm11_7 ymm2_7;
smull mulH_8 mulLymm11_8 ymm11_8 ymm2_8;
smull mulH_9 mulLymm11_9 ymm11_9 ymm2_9;
smull mulH_a mulLymm11_a ymm11_a ymm2_a;
smull mulH_b mulLymm11_b ymm11_b ymm2_b;
smull mulH_c mulLymm11_c ymm11_c ymm2_c;
smull mulH_d mulLymm11_d ymm11_d ymm2_d;
smull mulH_e mulLymm11_e ymm11_e ymm2_e;
smull mulH_f mulLymm11_f ymm11_f ymm2_f;
mov ymm11_0 mulH_0;
mov ymm11_1 mulH_1;
mov ymm11_2 mulH_2;
mov ymm11_3 mulH_3;
mov ymm11_4 mulH_4;
mov ymm11_5 mulH_5;
mov ymm11_6 mulH_6;
mov ymm11_7 mulH_7;
mov ymm11_8 mulH_8;
mov ymm11_9 mulH_9;
mov ymm11_a mulH_a;
mov ymm11_b mulH_b;
mov ymm11_c mulH_c;
mov ymm11_d mulH_d;
mov ymm11_e mulH_e;
mov ymm11_f mulH_f;
(* vpmulhw %ymm0,%ymm10,%ymm10                     #! PC = 0x555555559f00 *)
smull mulH_0 red_0 ymm10_0 ymm0_0;
assert true && red_0 = mulLymm11_0;
assume red_0 = mulLymm11_0 && true;
smull mulH_1 red_1 ymm10_1 ymm0_1;
assert true && red_1 = mulLymm11_1;
assume red_1 = mulLymm11_1 && true;
smull mulH_2 red_2 ymm10_2 ymm0_2;
assert true && red_2 = mulLymm11_2;
assume red_2 = mulLymm11_2 && true;
smull mulH_3 red_3 ymm10_3 ymm0_3;
assert true && red_3 = mulLymm11_3;
assume red_3 = mulLymm11_3 && true;
smull mulH_4 red_4 ymm10_4 ymm0_4;
assert true && red_4 = mulLymm11_4;
assume red_4 = mulLymm11_4 && true;
smull mulH_5 red_5 ymm10_5 ymm0_5;
assert true && red_5 = mulLymm11_5;
assume red_5 = mulLymm11_5 && true;
smull mulH_6 red_6 ymm10_6 ymm0_6;
assert true && red_6 = mulLymm11_6;
assume red_6 = mulLymm11_6 && true;
smull mulH_7 red_7 ymm10_7 ymm0_7;
assert true && red_7 = mulLymm11_7;
assume red_7 = mulLymm11_7 && true;
smull mulH_8 red_8 ymm10_8 ymm0_8;
assert true && red_8 = mulLymm11_8;
assume red_8 = mulLymm11_8 && true;
smull mulH_9 red_9 ymm10_9 ymm0_9;
assert true && red_9 = mulLymm11_9;
assume red_9 = mulLymm11_9 && true;
smull mulH_a red_a ymm10_a ymm0_a;
assert true && red_a = mulLymm11_a;
assume red_a = mulLymm11_a && true;
smull mulH_b red_b ymm10_b ymm0_b;
assert true && red_b = mulLymm11_b;
assume red_b = mulLymm11_b && true;
smull mulH_c red_c ymm10_c ymm0_c;
assert true && red_c = mulLymm11_c;
assume red_c = mulLymm11_c && true;
smull mulH_d red_d ymm10_d ymm0_d;
assert true && red_d = mulLymm11_d;
assume red_d = mulLymm11_d && true;
smull mulH_e red_e ymm10_e ymm0_e;
assert true && red_e = mulLymm11_e;
assume red_e = mulLymm11_e && true;
smull mulH_f red_f ymm10_f ymm0_f;
assert true && red_f = mulLymm11_f;
assume red_f = mulLymm11_f && true;
mov ymm10_0 mulH_0;
mov ymm10_1 mulH_1;
mov ymm10_2 mulH_2;
mov ymm10_3 mulH_3;
mov ymm10_4 mulH_4;
mov ymm10_5 mulH_5;
mov ymm10_6 mulH_6;
mov ymm10_7 mulH_7;
mov ymm10_8 mulH_8;
mov ymm10_9 mulH_9;
mov ymm10_a mulH_a;
mov ymm10_b mulH_b;
mov ymm10_c mulH_c;
mov ymm10_d mulH_d;
mov ymm10_e mulH_e;
mov ymm10_f mulH_f;
(* vpsubw %ymm10,%ymm11,%ymm11                     #! PC = 0x555555559f04 *)
sub ymm11_0 ymm11_0 ymm10_0;
sub ymm11_1 ymm11_1 ymm10_1;
sub ymm11_2 ymm11_2 ymm10_2;
sub ymm11_3 ymm11_3 ymm10_3;
sub ymm11_4 ymm11_4 ymm10_4;
sub ymm11_5 ymm11_5 ymm10_5;
sub ymm11_6 ymm11_6 ymm10_6;
sub ymm11_7 ymm11_7 ymm10_7;
sub ymm11_8 ymm11_8 ymm10_8;
sub ymm11_9 ymm11_9 ymm10_9;
sub ymm11_a ymm11_a ymm10_a;
sub ymm11_b ymm11_b ymm10_b;
sub ymm11_c ymm11_c ymm10_c;
sub ymm11_d ymm11_d ymm10_d;
sub ymm11_e ymm11_e ymm10_e;
sub ymm11_f ymm11_f ymm10_f;
(* vpaddw %ymm3,%ymm9,%ymm10                       #! PC = 0x555555559f09 *)
add ymm10_0 ymm9_0 ymm3_0;
add ymm10_1 ymm9_1 ymm3_1;
add ymm10_2 ymm9_2 ymm3_2;
add ymm10_3 ymm9_3 ymm3_3;
add ymm10_4 ymm9_4 ymm3_4;
add ymm10_5 ymm9_5 ymm3_5;
add ymm10_6 ymm9_6 ymm3_6;
add ymm10_7 ymm9_7 ymm3_7;
add ymm10_8 ymm9_8 ymm3_8;
add ymm10_9 ymm9_9 ymm3_9;
add ymm10_a ymm9_a ymm3_a;
add ymm10_b ymm9_b ymm3_b;
add ymm10_c ymm9_c ymm3_c;
add ymm10_d ymm9_d ymm3_d;
add ymm10_e ymm9_e ymm3_e;
add ymm10_f ymm9_f ymm3_f;
(* vpsubw %ymm3,%ymm9,%ymm3                        #! PC = 0x555555559f0d *)
sub ymm3_0 ymm9_0 ymm3_0;
sub ymm3_1 ymm9_1 ymm3_1;
sub ymm3_2 ymm9_2 ymm3_2;
sub ymm3_3 ymm9_3 ymm3_3;
sub ymm3_4 ymm9_4 ymm3_4;
sub ymm3_5 ymm9_5 ymm3_5;
sub ymm3_6 ymm9_6 ymm3_6;
sub ymm3_7 ymm9_7 ymm3_7;
sub ymm3_8 ymm9_8 ymm3_8;
sub ymm3_9 ymm9_9 ymm3_9;
sub ymm3_a ymm9_a ymm3_a;
sub ymm3_b ymm9_b ymm3_b;
sub ymm3_c ymm9_c ymm3_c;
sub ymm3_d ymm9_d ymm3_d;
sub ymm3_e ymm9_e ymm3_e;
sub ymm3_f ymm9_f ymm3_f;
(* vpaddw %ymm6,%ymm7,%ymm9                        #! PC = 0x555555559f11 *)
add ymm9_0 ymm7_0 ymm6_0;
add ymm9_1 ymm7_1 ymm6_1;
add ymm9_2 ymm7_2 ymm6_2;
add ymm9_3 ymm7_3 ymm6_3;
add ymm9_4 ymm7_4 ymm6_4;
add ymm9_5 ymm7_5 ymm6_5;
add ymm9_6 ymm7_6 ymm6_6;
add ymm9_7 ymm7_7 ymm6_7;
add ymm9_8 ymm7_8 ymm6_8;
add ymm9_9 ymm7_9 ymm6_9;
add ymm9_a ymm7_a ymm6_a;
add ymm9_b ymm7_b ymm6_b;
add ymm9_c ymm7_c ymm6_c;
add ymm9_d ymm7_d ymm6_d;
add ymm9_e ymm7_e ymm6_e;
add ymm9_f ymm7_f ymm6_f;
(* vpsubw %ymm6,%ymm7,%ymm6                        #! PC = 0x555555559f15 *)
sub ymm6_0 ymm7_0 ymm6_0;
sub ymm6_1 ymm7_1 ymm6_1;
sub ymm6_2 ymm7_2 ymm6_2;
sub ymm6_3 ymm7_3 ymm6_3;
sub ymm6_4 ymm7_4 ymm6_4;
sub ymm6_5 ymm7_5 ymm6_5;
sub ymm6_6 ymm7_6 ymm6_6;
sub ymm6_7 ymm7_7 ymm6_7;
sub ymm6_8 ymm7_8 ymm6_8;
sub ymm6_9 ymm7_9 ymm6_9;
sub ymm6_a ymm7_a ymm6_a;
sub ymm6_b ymm7_b ymm6_b;
sub ymm6_c ymm7_c ymm6_c;
sub ymm6_d ymm7_d ymm6_d;
sub ymm6_e ymm7_e ymm6_e;
sub ymm6_f ymm7_f ymm6_f;
(* vpaddw %ymm8,%ymm5,%ymm7                        #! PC = 0x555555559f19 *)
add ymm7_0 ymm5_0 ymm8_0;
add ymm7_1 ymm5_1 ymm8_1;
add ymm7_2 ymm5_2 ymm8_2;
add ymm7_3 ymm5_3 ymm8_3;
add ymm7_4 ymm5_4 ymm8_4;
add ymm7_5 ymm5_5 ymm8_5;
add ymm7_6 ymm5_6 ymm8_6;
add ymm7_7 ymm5_7 ymm8_7;
add ymm7_8 ymm5_8 ymm8_8;
add ymm7_9 ymm5_9 ymm8_9;
add ymm7_a ymm5_a ymm8_a;
add ymm7_b ymm5_b ymm8_b;
add ymm7_c ymm5_c ymm8_c;
add ymm7_d ymm5_d ymm8_d;
add ymm7_e ymm5_e ymm8_e;
add ymm7_f ymm5_f ymm8_f;
(* vpsubw %ymm8,%ymm5,%ymm8                        #! PC = 0x555555559f1e *)
sub ymm8_0 ymm5_0 ymm8_0;
sub ymm8_1 ymm5_1 ymm8_1;
sub ymm8_2 ymm5_2 ymm8_2;
sub ymm8_3 ymm5_3 ymm8_3;
sub ymm8_4 ymm5_4 ymm8_4;
sub ymm8_5 ymm5_5 ymm8_5;
sub ymm8_6 ymm5_6 ymm8_6;
sub ymm8_7 ymm5_7 ymm8_7;
sub ymm8_8 ymm5_8 ymm8_8;
sub ymm8_9 ymm5_9 ymm8_9;
sub ymm8_a ymm5_a ymm8_a;
sub ymm8_b ymm5_b ymm8_b;
sub ymm8_c ymm5_c ymm8_c;
sub ymm8_d ymm5_d ymm8_d;
sub ymm8_e ymm5_e ymm8_e;
sub ymm8_f ymm5_f ymm8_f;
(* vpaddw %ymm11,%ymm4,%ymm5                       #! PC = 0x555555559f23 *)
add ymm5_0 ymm4_0 ymm11_0;
add ymm5_1 ymm4_1 ymm11_1;
add ymm5_2 ymm4_2 ymm11_2;
add ymm5_3 ymm4_3 ymm11_3;
add ymm5_4 ymm4_4 ymm11_4;
add ymm5_5 ymm4_5 ymm11_5;
add ymm5_6 ymm4_6 ymm11_6;
add ymm5_7 ymm4_7 ymm11_7;
add ymm5_8 ymm4_8 ymm11_8;
add ymm5_9 ymm4_9 ymm11_9;
add ymm5_a ymm4_a ymm11_a;
add ymm5_b ymm4_b ymm11_b;
add ymm5_c ymm4_c ymm11_c;
add ymm5_d ymm4_d ymm11_d;
add ymm5_e ymm4_e ymm11_e;
add ymm5_f ymm4_f ymm11_f;
(* vpsubw %ymm11,%ymm4,%ymm11                      #! PC = 0x555555559f28 *)
sub ymm11_0 ymm4_0 ymm11_0;
sub ymm11_1 ymm4_1 ymm11_1;
sub ymm11_2 ymm4_2 ymm11_2;
sub ymm11_3 ymm4_3 ymm11_3;
sub ymm11_4 ymm4_4 ymm11_4;
sub ymm11_5 ymm4_5 ymm11_5;
sub ymm11_6 ymm4_6 ymm11_6;
sub ymm11_7 ymm4_7 ymm11_7;
sub ymm11_8 ymm4_8 ymm11_8;
sub ymm11_9 ymm4_9 ymm11_9;
sub ymm11_a ymm4_a ymm11_a;
sub ymm11_b ymm4_b ymm11_b;
sub ymm11_c ymm4_c ymm11_c;
sub ymm11_d ymm4_d ymm11_d;
sub ymm11_e ymm4_e ymm11_e;
sub ymm11_f ymm4_f ymm11_f;
(* vmovdqa %ymm10,0x700(%rdi)                      #! EA = L0x7fffffffd9e0; PC = 0x555555559f2d *)
mov L0x7fffffffd9e0 ymm10_0;
mov L0x7fffffffd9e2 ymm10_1;
mov L0x7fffffffd9e4 ymm10_2;
mov L0x7fffffffd9e6 ymm10_3;
mov L0x7fffffffd9e8 ymm10_4;
mov L0x7fffffffd9ea ymm10_5;
mov L0x7fffffffd9ec ymm10_6;
mov L0x7fffffffd9ee ymm10_7;
mov L0x7fffffffd9f0 ymm10_8;
mov L0x7fffffffd9f2 ymm10_9;
mov L0x7fffffffd9f4 ymm10_a;
mov L0x7fffffffd9f6 ymm10_b;
mov L0x7fffffffd9f8 ymm10_c;
mov L0x7fffffffd9fa ymm10_d;
mov L0x7fffffffd9fc ymm10_e;
mov L0x7fffffffd9fe ymm10_f;
(* vmovdqa %ymm3,0x720(%rdi)                       #! EA = L0x7fffffffda00; PC = 0x555555559f35 *)
mov L0x7fffffffda00 ymm3_0;
mov L0x7fffffffda02 ymm3_1;
mov L0x7fffffffda04 ymm3_2;
mov L0x7fffffffda06 ymm3_3;
mov L0x7fffffffda08 ymm3_4;
mov L0x7fffffffda0a ymm3_5;
mov L0x7fffffffda0c ymm3_6;
mov L0x7fffffffda0e ymm3_7;
mov L0x7fffffffda10 ymm3_8;
mov L0x7fffffffda12 ymm3_9;
mov L0x7fffffffda14 ymm3_a;
mov L0x7fffffffda16 ymm3_b;
mov L0x7fffffffda18 ymm3_c;
mov L0x7fffffffda1a ymm3_d;
mov L0x7fffffffda1c ymm3_e;
mov L0x7fffffffda1e ymm3_f;
(* vmovdqa %ymm9,0x740(%rdi)                       #! EA = L0x7fffffffda20; PC = 0x555555559f3d *)
mov L0x7fffffffda20 ymm9_0;
mov L0x7fffffffda22 ymm9_1;
mov L0x7fffffffda24 ymm9_2;
mov L0x7fffffffda26 ymm9_3;
mov L0x7fffffffda28 ymm9_4;
mov L0x7fffffffda2a ymm9_5;
mov L0x7fffffffda2c ymm9_6;
mov L0x7fffffffda2e ymm9_7;
mov L0x7fffffffda30 ymm9_8;
mov L0x7fffffffda32 ymm9_9;
mov L0x7fffffffda34 ymm9_a;
mov L0x7fffffffda36 ymm9_b;
mov L0x7fffffffda38 ymm9_c;
mov L0x7fffffffda3a ymm9_d;
mov L0x7fffffffda3c ymm9_e;
mov L0x7fffffffda3e ymm9_f;
(* vmovdqa %ymm6,0x760(%rdi)                       #! EA = L0x7fffffffda40; PC = 0x555555559f45 *)
mov L0x7fffffffda40 ymm6_0;
mov L0x7fffffffda42 ymm6_1;
mov L0x7fffffffda44 ymm6_2;
mov L0x7fffffffda46 ymm6_3;
mov L0x7fffffffda48 ymm6_4;
mov L0x7fffffffda4a ymm6_5;
mov L0x7fffffffda4c ymm6_6;
mov L0x7fffffffda4e ymm6_7;
mov L0x7fffffffda50 ymm6_8;
mov L0x7fffffffda52 ymm6_9;
mov L0x7fffffffda54 ymm6_a;
mov L0x7fffffffda56 ymm6_b;
mov L0x7fffffffda58 ymm6_c;
mov L0x7fffffffda5a ymm6_d;
mov L0x7fffffffda5c ymm6_e;
mov L0x7fffffffda5e ymm6_f;
(* vmovdqa %ymm7,0x780(%rdi)                       #! EA = L0x7fffffffda60; PC = 0x555555559f4d *)
mov L0x7fffffffda60 ymm7_0;
mov L0x7fffffffda62 ymm7_1;
mov L0x7fffffffda64 ymm7_2;
mov L0x7fffffffda66 ymm7_3;
mov L0x7fffffffda68 ymm7_4;
mov L0x7fffffffda6a ymm7_5;
mov L0x7fffffffda6c ymm7_6;
mov L0x7fffffffda6e ymm7_7;
mov L0x7fffffffda70 ymm7_8;
mov L0x7fffffffda72 ymm7_9;
mov L0x7fffffffda74 ymm7_a;
mov L0x7fffffffda76 ymm7_b;
mov L0x7fffffffda78 ymm7_c;
mov L0x7fffffffda7a ymm7_d;
mov L0x7fffffffda7c ymm7_e;
mov L0x7fffffffda7e ymm7_f;
(* vmovdqa %ymm8,0x7a0(%rdi)                       #! EA = L0x7fffffffda80; PC = 0x555555559f55 *)
mov L0x7fffffffda80 ymm8_0;
mov L0x7fffffffda82 ymm8_1;
mov L0x7fffffffda84 ymm8_2;
mov L0x7fffffffda86 ymm8_3;
mov L0x7fffffffda88 ymm8_4;
mov L0x7fffffffda8a ymm8_5;
mov L0x7fffffffda8c ymm8_6;
mov L0x7fffffffda8e ymm8_7;
mov L0x7fffffffda90 ymm8_8;
mov L0x7fffffffda92 ymm8_9;
mov L0x7fffffffda94 ymm8_a;
mov L0x7fffffffda96 ymm8_b;
mov L0x7fffffffda98 ymm8_c;
mov L0x7fffffffda9a ymm8_d;
mov L0x7fffffffda9c ymm8_e;
mov L0x7fffffffda9e ymm8_f;
(* vmovdqa %ymm5,0x7c0(%rdi)                       #! EA = L0x7fffffffdaa0; PC = 0x555555559f5d *)
mov L0x7fffffffdaa0 ymm5_0;
mov L0x7fffffffdaa2 ymm5_1;
mov L0x7fffffffdaa4 ymm5_2;
mov L0x7fffffffdaa6 ymm5_3;
mov L0x7fffffffdaa8 ymm5_4;
mov L0x7fffffffdaaa ymm5_5;
mov L0x7fffffffdaac ymm5_6;
mov L0x7fffffffdaae ymm5_7;
mov L0x7fffffffdab0 ymm5_8;
mov L0x7fffffffdab2 ymm5_9;
mov L0x7fffffffdab4 ymm5_a;
mov L0x7fffffffdab6 ymm5_b;
mov L0x7fffffffdab8 ymm5_c;
mov L0x7fffffffdaba ymm5_d;
mov L0x7fffffffdabc ymm5_e;
mov L0x7fffffffdabe ymm5_f;
(* vmovdqa %ymm11,0x7e0(%rdi)                      #! EA = L0x7fffffffdac0; PC = 0x555555559f65 *)
mov L0x7fffffffdac0 ymm11_0;
mov L0x7fffffffdac2 ymm11_1;
mov L0x7fffffffdac4 ymm11_2;
mov L0x7fffffffdac6 ymm11_3;
mov L0x7fffffffdac8 ymm11_4;
mov L0x7fffffffdaca ymm11_5;
mov L0x7fffffffdacc ymm11_6;
mov L0x7fffffffdace ymm11_7;
mov L0x7fffffffdad0 ymm11_8;
mov L0x7fffffffdad2 ymm11_9;
mov L0x7fffffffdad4 ymm11_a;
mov L0x7fffffffdad6 ymm11_b;
mov L0x7fffffffdad8 ymm11_c;
mov L0x7fffffffdada ymm11_d;
mov L0x7fffffffdadc ymm11_e;
mov L0x7fffffffdade ymm11_f;



(**************** LEVELS 3-8, 7 *****************)


(**************** CUT 159, 24 *****************)

cut 
  and [
eqmod (inp_poly**2) (L0x7fffffffd9e0*x** 0+L0x7fffffffd9f0*x** 1)
      [10753, x**2 - 10463],
eqmod (inp_poly**2) (L0x7fffffffda00*x** 0+L0x7fffffffda10*x** 1)
      [10753, x**2 - 290],
eqmod (inp_poly**2) (L0x7fffffffd9e2*x** 0+L0x7fffffffd9f2*x** 1)
      [10753, x**2 - 697],
eqmod (inp_poly**2) (L0x7fffffffda02*x** 0+L0x7fffffffda12*x** 1)
      [10753, x**2 - 10056],
eqmod (inp_poly**2) (L0x7fffffffd9e4*x** 0+L0x7fffffffd9f4*x** 1)
      [10753, x**2 - 3687],
eqmod (inp_poly**2) (L0x7fffffffda04*x** 0+L0x7fffffffda14*x** 1)
      [10753, x**2 - 7066],
eqmod (inp_poly**2) (L0x7fffffffd9e6*x** 0+L0x7fffffffd9f6*x** 1)
      [10753, x**2 - 8677],
eqmod (inp_poly**2) (L0x7fffffffda06*x** 0+L0x7fffffffda16*x** 1)
      [10753, x**2 - 2076],
eqmod (inp_poly**2) (L0x7fffffffd9e8*x** 0+L0x7fffffffd9f8*x** 1)
      [10753, x**2 - 7108],
eqmod (inp_poly**2) (L0x7fffffffda08*x** 0+L0x7fffffffda18*x** 1)
      [10753, x**2 - 3645],
eqmod (inp_poly**2) (L0x7fffffffd9ea*x** 0+L0x7fffffffd9fa*x** 1)
      [10753, x**2 - 7092],
eqmod (inp_poly**2) (L0x7fffffffda0a*x** 0+L0x7fffffffda1a*x** 1)
      [10753, x**2 - 3661],
eqmod (inp_poly**2) (L0x7fffffffd9ec*x** 0+L0x7fffffffd9fc*x** 1)
      [10753, x**2 - 2032],
eqmod (inp_poly**2) (L0x7fffffffda0c*x** 0+L0x7fffffffda1c*x** 1)
      [10753, x**2 - 8721],
eqmod (inp_poly**2) (L0x7fffffffd9ee*x** 0+L0x7fffffffd9fe*x** 1)
      [10753, x**2 - 7649],
eqmod (inp_poly**2) (L0x7fffffffda0e*x** 0+L0x7fffffffda1e*x** 1)
      [10753, x**2 - 3104],
eqmod (inp_poly**2) (L0x7fffffffda20*x** 0+L0x7fffffffda30*x** 1)
      [10753, x**2 - 9436],
eqmod (inp_poly**2) (L0x7fffffffda40*x** 0+L0x7fffffffda50*x** 1)
      [10753, x**2 - 1317],
eqmod (inp_poly**2) (L0x7fffffffda22*x** 0+L0x7fffffffda32*x** 1)
      [10753, x**2 - 8616],
eqmod (inp_poly**2) (L0x7fffffffda42*x** 0+L0x7fffffffda52*x** 1)
      [10753, x**2 - 2137],
eqmod (inp_poly**2) (L0x7fffffffda24*x** 0+L0x7fffffffda34*x** 1)
      [10753, x**2 - 7363],
eqmod (inp_poly**2) (L0x7fffffffda44*x** 0+L0x7fffffffda54*x** 1)
      [10753, x**2 - 3390],
eqmod (inp_poly**2) (L0x7fffffffda26*x** 0+L0x7fffffffda36*x** 1)
      [10753, x**2 - 2215],
eqmod (inp_poly**2) (L0x7fffffffda46*x** 0+L0x7fffffffda56*x** 1)
      [10753, x**2 - 8538],
eqmod (inp_poly**2) (L0x7fffffffda28*x** 0+L0x7fffffffda38*x** 1)
      [10753, x**2 - 8846],
eqmod (inp_poly**2) (L0x7fffffffda48*x** 0+L0x7fffffffda58*x** 1)
      [10753, x**2 - 1907],
eqmod (inp_poly**2) (L0x7fffffffda2a*x** 0+L0x7fffffffda3a*x** 1)
      [10753, x**2 - 1135],
eqmod (inp_poly**2) (L0x7fffffffda4a*x** 0+L0x7fffffffda5a*x** 1)
      [10753, x**2 - 9618],
eqmod (inp_poly**2) (L0x7fffffffda2c*x** 0+L0x7fffffffda3c*x** 1)
      [10753, x**2 - 774],
eqmod (inp_poly**2) (L0x7fffffffda4c*x** 0+L0x7fffffffda5c*x** 1)
      [10753, x**2 - 9979],
eqmod (inp_poly**2) (L0x7fffffffda2e*x** 0+L0x7fffffffda3e*x** 1)
      [10753, x**2 - 9486],
eqmod (inp_poly**2) (L0x7fffffffda4e*x** 0+L0x7fffffffda5e*x** 1)
      [10753, x**2 - 1267],
eqmod (inp_poly**2) (L0x7fffffffda60*x** 0+L0x7fffffffda70*x** 1)
      [10753, x**2 - 2266],
eqmod (inp_poly**2) (L0x7fffffffda80*x** 0+L0x7fffffffda90*x** 1)
      [10753, x**2 - 8487],
eqmod (inp_poly**2) (L0x7fffffffda62*x** 0+L0x7fffffffda72*x** 1)
      [10753, x**2 - 264],
eqmod (inp_poly**2) (L0x7fffffffda82*x** 0+L0x7fffffffda92*x** 1)
      [10753, x**2 - 10489],
eqmod (inp_poly**2) (L0x7fffffffda64*x** 0+L0x7fffffffda74*x** 1)
      [10753, x**2 - 6935],
eqmod (inp_poly**2) (L0x7fffffffda84*x** 0+L0x7fffffffda94*x** 1)
      [10753, x**2 - 3818],
eqmod (inp_poly**2) (L0x7fffffffda66*x** 0+L0x7fffffffda76*x** 1)
      [10753, x**2 - 9473],
eqmod (inp_poly**2) (L0x7fffffffda86*x** 0+L0x7fffffffda96*x** 1)
      [10753, x**2 - 1280],
eqmod (inp_poly**2) (L0x7fffffffda68*x** 0+L0x7fffffffda78*x** 1)
      [10753, x**2 - 301],
eqmod (inp_poly**2) (L0x7fffffffda88*x** 0+L0x7fffffffda98*x** 1)
      [10753, x**2 - 10452],
eqmod (inp_poly**2) (L0x7fffffffda6a*x** 0+L0x7fffffffda7a*x** 1)
      [10753, x**2 - 3689],
eqmod (inp_poly**2) (L0x7fffffffda8a*x** 0+L0x7fffffffda9a*x** 1)
      [10753, x**2 - 7064],
eqmod (inp_poly**2) (L0x7fffffffda6c*x** 0+L0x7fffffffda7c*x** 1)
      [10753, x**2 - 10597],
eqmod (inp_poly**2) (L0x7fffffffda8c*x** 0+L0x7fffffffda9c*x** 1)
      [10753, x**2 - 156],
eqmod (inp_poly**2) (L0x7fffffffda6e*x** 0+L0x7fffffffda7e*x** 1)
      [10753, x**2 - 1339],
eqmod (inp_poly**2) (L0x7fffffffda8e*x** 0+L0x7fffffffda9e*x** 1)
      [10753, x**2 - 9414],
eqmod (inp_poly**2) (L0x7fffffffdaa0*x** 0+L0x7fffffffdab0*x** 1)
      [10753, x**2 - 1985],
eqmod (inp_poly**2) (L0x7fffffffdac0*x** 0+L0x7fffffffdad0*x** 1)
      [10753, x**2 - 8768],
eqmod (inp_poly**2) (L0x7fffffffdaa2*x** 0+L0x7fffffffdab2*x** 1)
      [10753, x**2 - 3572],
eqmod (inp_poly**2) (L0x7fffffffdac2*x** 0+L0x7fffffffdad2*x** 1)
      [10753, x**2 - 7181],
eqmod (inp_poly**2) (L0x7fffffffdaa4*x** 0+L0x7fffffffdab4*x** 1)
      [10753, x**2 - 2758],
eqmod (inp_poly**2) (L0x7fffffffdac4*x** 0+L0x7fffffffdad4*x** 1)
      [10753, x**2 - 7995],
eqmod (inp_poly**2) (L0x7fffffffdaa6*x** 0+L0x7fffffffdab6*x** 1)
      [10753, x**2 - 6794],
eqmod (inp_poly**2) (L0x7fffffffdac6*x** 0+L0x7fffffffdad6*x** 1)
      [10753, x**2 - 3959],
eqmod (inp_poly**2) (L0x7fffffffdaa8*x** 0+L0x7fffffffdab8*x** 1)
      [10753, x**2 - 3258],
eqmod (inp_poly**2) (L0x7fffffffdac8*x** 0+L0x7fffffffdad8*x** 1)
      [10753, x**2 - 7495],
eqmod (inp_poly**2) (L0x7fffffffdaaa*x** 0+L0x7fffffffdaba*x** 1)
      [10753, x**2 - 9671],
eqmod (inp_poly**2) (L0x7fffffffdaca*x** 0+L0x7fffffffdada*x** 1)
      [10753, x**2 - 1082],
eqmod (inp_poly**2) (L0x7fffffffdaac*x** 0+L0x7fffffffdabc*x** 1)
      [10753, x**2 - 2777],
eqmod (inp_poly**2) (L0x7fffffffdacc*x** 0+L0x7fffffffdadc*x** 1)
      [10753, x**2 - 7976],
eqmod (inp_poly**2) (L0x7fffffffdaae*x** 0+L0x7fffffffdabe*x** 1)
      [10753, x**2 - 7527],
eqmod (inp_poly**2) (L0x7fffffffdace*x** 0+L0x7fffffffdade*x** 1)
      [10753, x**2 - 3226]
  ] prove with [ precondition, cuts [ 17, 35, 53, 71, 89, 107, 125, 143] ] && and [
(-31298)@16<=s L0x7fffffffd9e0,L0x7fffffffd9e0<=s 31298@16,
(-31298)@16<=s L0x7fffffffd9f0,L0x7fffffffd9f0<=s 31298@16,
(-31298)@16<=s L0x7fffffffda00,L0x7fffffffda00<=s 31298@16,
(-31298)@16<=s L0x7fffffffda10,L0x7fffffffda10<=s 31298@16,
(-29564)@16<=s L0x7fffffffd9e2,L0x7fffffffd9e2<=s 29564@16,
(-29564)@16<=s L0x7fffffffd9f2,L0x7fffffffd9f2<=s 29564@16,
(-29564)@16<=s L0x7fffffffda02,L0x7fffffffda02<=s 29564@16,
(-29564)@16<=s L0x7fffffffda12,L0x7fffffffda12<=s 29564@16,
(-29540)@16<=s L0x7fffffffd9e4,L0x7fffffffd9e4<=s 29540@16,
(-29540)@16<=s L0x7fffffffd9f4,L0x7fffffffd9f4<=s 29540@16,
(-29540)@16<=s L0x7fffffffda04,L0x7fffffffda04<=s 29540@16,
(-29540)@16<=s L0x7fffffffda14,L0x7fffffffda14<=s 29540@16,
(-31125)@16<=s L0x7fffffffd9e6,L0x7fffffffd9e6<=s 31125@16,
(-31125)@16<=s L0x7fffffffd9f6,L0x7fffffffd9f6<=s 31125@16,
(-31125)@16<=s L0x7fffffffda06,L0x7fffffffda06<=s 31125@16,
(-31125)@16<=s L0x7fffffffda16,L0x7fffffffda16<=s 31125@16,
(-30130)@16<=s L0x7fffffffd9e8,L0x7fffffffd9e8<=s 30130@16,
(-30130)@16<=s L0x7fffffffd9f8,L0x7fffffffd9f8<=s 30130@16,
(-30130)@16<=s L0x7fffffffda08,L0x7fffffffda08<=s 30130@16,
(-30130)@16<=s L0x7fffffffda18,L0x7fffffffda18<=s 30130@16,
(-31447)@16<=s L0x7fffffffd9ea,L0x7fffffffd9ea<=s 31447@16,
(-31447)@16<=s L0x7fffffffd9fa,L0x7fffffffd9fa<=s 31447@16,
(-31447)@16<=s L0x7fffffffda0a,L0x7fffffffda0a<=s 31447@16,
(-31447)@16<=s L0x7fffffffda1a,L0x7fffffffda1a<=s 31447@16,
(-30590)@16<=s L0x7fffffffd9ec,L0x7fffffffd9ec<=s 30590@16,
(-30590)@16<=s L0x7fffffffd9fc,L0x7fffffffd9fc<=s 30590@16,
(-30590)@16<=s L0x7fffffffda0c,L0x7fffffffda0c<=s 30590@16,
(-30590)@16<=s L0x7fffffffda1c,L0x7fffffffda1c<=s 30590@16,
(-29686)@16<=s L0x7fffffffd9ee,L0x7fffffffd9ee<=s 29686@16,
(-29686)@16<=s L0x7fffffffd9fe,L0x7fffffffd9fe<=s 29686@16,
(-29686)@16<=s L0x7fffffffda0e,L0x7fffffffda0e<=s 29686@16,
(-29686)@16<=s L0x7fffffffda1e,L0x7fffffffda1e<=s 29686@16,
(-31650)@16<=s L0x7fffffffda20,L0x7fffffffda20<=s 31650@16,
(-31650)@16<=s L0x7fffffffda30,L0x7fffffffda30<=s 31650@16,
(-31650)@16<=s L0x7fffffffda40,L0x7fffffffda40<=s 31650@16,
(-31650)@16<=s L0x7fffffffda50,L0x7fffffffda50<=s 31650@16,
(-31626)@16<=s L0x7fffffffda22,L0x7fffffffda22<=s 31626@16,
(-31626)@16<=s L0x7fffffffda32,L0x7fffffffda32<=s 31626@16,
(-31626)@16<=s L0x7fffffffda42,L0x7fffffffda42<=s 31626@16,
(-31626)@16<=s L0x7fffffffda52,L0x7fffffffda52<=s 31626@16,
(-31302)@16<=s L0x7fffffffda24,L0x7fffffffda24<=s 31302@16,
(-31302)@16<=s L0x7fffffffda34,L0x7fffffffda34<=s 31302@16,
(-31302)@16<=s L0x7fffffffda44,L0x7fffffffda44<=s 31302@16,
(-31302)@16<=s L0x7fffffffda54,L0x7fffffffda54<=s 31302@16,
(-32319)@16<=s L0x7fffffffda26,L0x7fffffffda26<=s 32319@16,
(-32319)@16<=s L0x7fffffffda36,L0x7fffffffda36<=s 32319@16,
(-32319)@16<=s L0x7fffffffda46,L0x7fffffffda46<=s 32319@16,
(-32319)@16<=s L0x7fffffffda56,L0x7fffffffda56<=s 32319@16,
(-31476)@16<=s L0x7fffffffda28,L0x7fffffffda28<=s 31476@16,
(-31476)@16<=s L0x7fffffffda38,L0x7fffffffda38<=s 31476@16,
(-31476)@16<=s L0x7fffffffda48,L0x7fffffffda48<=s 31476@16,
(-31476)@16<=s L0x7fffffffda58,L0x7fffffffda58<=s 31476@16,
(-31427)@16<=s L0x7fffffffda2a,L0x7fffffffda2a<=s 31427@16,
(-31427)@16<=s L0x7fffffffda3a,L0x7fffffffda3a<=s 31427@16,
(-31427)@16<=s L0x7fffffffda4a,L0x7fffffffda4a<=s 31427@16,
(-31427)@16<=s L0x7fffffffda5a,L0x7fffffffda5a<=s 31427@16,
(-31228)@16<=s L0x7fffffffda2c,L0x7fffffffda2c<=s 31228@16,
(-31228)@16<=s L0x7fffffffda3c,L0x7fffffffda3c<=s 31228@16,
(-31228)@16<=s L0x7fffffffda4c,L0x7fffffffda4c<=s 31228@16,
(-31228)@16<=s L0x7fffffffda5c,L0x7fffffffda5c<=s 31228@16,
(-30316)@16<=s L0x7fffffffda2e,L0x7fffffffda2e<=s 30316@16,
(-30316)@16<=s L0x7fffffffda3e,L0x7fffffffda3e<=s 30316@16,
(-30316)@16<=s L0x7fffffffda4e,L0x7fffffffda4e<=s 30316@16,
(-30316)@16<=s L0x7fffffffda5e,L0x7fffffffda5e<=s 30316@16,
(-30984)@16<=s L0x7fffffffda60,L0x7fffffffda60<=s 30984@16,
(-30984)@16<=s L0x7fffffffda70,L0x7fffffffda70<=s 30984@16,
(-30984)@16<=s L0x7fffffffda80,L0x7fffffffda80<=s 30984@16,
(-30984)@16<=s L0x7fffffffda90,L0x7fffffffda90<=s 30984@16,
(-29179)@16<=s L0x7fffffffda62,L0x7fffffffda62<=s 29179@16,
(-29179)@16<=s L0x7fffffffda72,L0x7fffffffda72<=s 29179@16,
(-29179)@16<=s L0x7fffffffda82,L0x7fffffffda82<=s 29179@16,
(-29179)@16<=s L0x7fffffffda92,L0x7fffffffda92<=s 29179@16,
(-31436)@16<=s L0x7fffffffda64,L0x7fffffffda64<=s 31436@16,
(-31436)@16<=s L0x7fffffffda74,L0x7fffffffda74<=s 31436@16,
(-31436)@16<=s L0x7fffffffda84,L0x7fffffffda84<=s 31436@16,
(-31436)@16<=s L0x7fffffffda94,L0x7fffffffda94<=s 31436@16,
(-30357)@16<=s L0x7fffffffda66,L0x7fffffffda66<=s 30357@16,
(-30357)@16<=s L0x7fffffffda76,L0x7fffffffda76<=s 30357@16,
(-30357)@16<=s L0x7fffffffda86,L0x7fffffffda86<=s 30357@16,
(-30357)@16<=s L0x7fffffffda96,L0x7fffffffda96<=s 30357@16,
(-31678)@16<=s L0x7fffffffda68,L0x7fffffffda68<=s 31678@16,
(-31678)@16<=s L0x7fffffffda78,L0x7fffffffda78<=s 31678@16,
(-31678)@16<=s L0x7fffffffda88,L0x7fffffffda88<=s 31678@16,
(-31678)@16<=s L0x7fffffffda98,L0x7fffffffda98<=s 31678@16,
(-30683)@16<=s L0x7fffffffda6a,L0x7fffffffda6a<=s 30683@16,
(-30683)@16<=s L0x7fffffffda7a,L0x7fffffffda7a<=s 30683@16,
(-30683)@16<=s L0x7fffffffda8a,L0x7fffffffda8a<=s 30683@16,
(-30683)@16<=s L0x7fffffffda9a,L0x7fffffffda9a<=s 30683@16,
(-29955)@16<=s L0x7fffffffda6c,L0x7fffffffda6c<=s 29955@16,
(-29955)@16<=s L0x7fffffffda7c,L0x7fffffffda7c<=s 29955@16,
(-29955)@16<=s L0x7fffffffda8c,L0x7fffffffda8c<=s 29955@16,
(-29955)@16<=s L0x7fffffffda9c,L0x7fffffffda9c<=s 29955@16,
(-29974)@16<=s L0x7fffffffda6e,L0x7fffffffda6e<=s 29974@16,
(-29974)@16<=s L0x7fffffffda7e,L0x7fffffffda7e<=s 29974@16,
(-29974)@16<=s L0x7fffffffda8e,L0x7fffffffda8e<=s 29974@16,
(-29974)@16<=s L0x7fffffffda9e,L0x7fffffffda9e<=s 29974@16,
(-29704)@16<=s L0x7fffffffdaa0,L0x7fffffffdaa0<=s 29704@16,
(-29704)@16<=s L0x7fffffffdab0,L0x7fffffffdab0<=s 29704@16,
(-29704)@16<=s L0x7fffffffdac0,L0x7fffffffdac0<=s 29704@16,
(-29704)@16<=s L0x7fffffffdad0,L0x7fffffffdad0<=s 29704@16,
(-30042)@16<=s L0x7fffffffdaa2,L0x7fffffffdaa2<=s 30042@16,
(-30042)@16<=s L0x7fffffffdab2,L0x7fffffffdab2<=s 30042@16,
(-30042)@16<=s L0x7fffffffdac2,L0x7fffffffdac2<=s 30042@16,
(-30042)@16<=s L0x7fffffffdad2,L0x7fffffffdad2<=s 30042@16,
(-29791)@16<=s L0x7fffffffdaa4,L0x7fffffffdaa4<=s 29791@16,
(-29791)@16<=s L0x7fffffffdab4,L0x7fffffffdab4<=s 29791@16,
(-29791)@16<=s L0x7fffffffdac4,L0x7fffffffdac4<=s 29791@16,
(-29791)@16<=s L0x7fffffffdad4,L0x7fffffffdad4<=s 29791@16,
(-30166)@16<=s L0x7fffffffdaa6,L0x7fffffffdaa6<=s 30166@16,
(-30166)@16<=s L0x7fffffffdab6,L0x7fffffffdab6<=s 30166@16,
(-30166)@16<=s L0x7fffffffdac6,L0x7fffffffdac6<=s 30166@16,
(-30166)@16<=s L0x7fffffffdad6,L0x7fffffffdad6<=s 30166@16,
(-31148)@16<=s L0x7fffffffdaa8,L0x7fffffffdaa8<=s 31148@16,
(-31148)@16<=s L0x7fffffffdab8,L0x7fffffffdab8<=s 31148@16,
(-31148)@16<=s L0x7fffffffdac8,L0x7fffffffdac8<=s 31148@16,
(-31148)@16<=s L0x7fffffffdad8,L0x7fffffffdad8<=s 31148@16,
(-31146)@16<=s L0x7fffffffdaaa,L0x7fffffffdaaa<=s 31146@16,
(-31146)@16<=s L0x7fffffffdaba,L0x7fffffffdaba<=s 31146@16,
(-31146)@16<=s L0x7fffffffdaca,L0x7fffffffdaca<=s 31146@16,
(-31146)@16<=s L0x7fffffffdada,L0x7fffffffdada<=s 31146@16,
(-29702)@16<=s L0x7fffffffdaac,L0x7fffffffdaac<=s 29702@16,
(-29702)@16<=s L0x7fffffffdabc,L0x7fffffffdabc<=s 29702@16,
(-29702)@16<=s L0x7fffffffdacc,L0x7fffffffdacc<=s 29702@16,
(-29702)@16<=s L0x7fffffffdadc,L0x7fffffffdadc<=s 29702@16,
(-30657)@16<=s L0x7fffffffdaae,L0x7fffffffdaae<=s 30657@16,
(-30657)@16<=s L0x7fffffffdabe,L0x7fffffffdabe<=s 30657@16,
(-30657)@16<=s L0x7fffffffdace,L0x7fffffffdace<=s 30657@16,
(-30657)@16<=s L0x7fffffffdade,L0x7fffffffdade<=s 30657@16
];


(* === be ready for next level and offset === *)

(**************** CUT 160, 25 *****************)

ecut true;



(* #! <- SP = 0x7fffffffca98 *)
#! 0x7fffffffca98 = 0x7fffffffca98;
(* #retq                                           #! PC = 0x555555559f6d *)
#retq                                           #! 0x555555559f6d = 0x555555559f6d;

{
(**************** postcondition *****************)

and [
eqmod (inp_poly**2) (L0x7fffffffd2e0*x** 0+L0x7fffffffd2f0*x** 1)
      [10753, x**2 - 1],
eqmod (inp_poly**2) (L0x7fffffffd300*x** 0+L0x7fffffffd310*x** 1)
      [10753, x**2 - 10752],
eqmod (inp_poly**2) (L0x7fffffffd2e2*x** 0+L0x7fffffffd2f2*x** 1)
      [10753, x**2 - 6264],
eqmod (inp_poly**2) (L0x7fffffffd302*x** 0+L0x7fffffffd312*x** 1)
      [10753, x**2 - 4489],
eqmod (inp_poly**2) (L0x7fffffffd2e4*x** 0+L0x7fffffffd2f4*x** 1)
      [10753, x**2 - 321],
eqmod (inp_poly**2) (L0x7fffffffd304*x** 0+L0x7fffffffd314*x** 1)
      [10753, x**2 - 10432],
eqmod (inp_poly**2) (L0x7fffffffd2e6*x** 0+L0x7fffffffd2f6*x** 1)
      [10753, x**2 - 10686],
eqmod (inp_poly**2) (L0x7fffffffd306*x** 0+L0x7fffffffd316*x** 1)
      [10753, x**2 - 67],
eqmod (inp_poly**2) (L0x7fffffffd2e8*x** 0+L0x7fffffffd2f8*x** 1)
      [10753, x**2 - 9097],
eqmod (inp_poly**2) (L0x7fffffffd308*x** 0+L0x7fffffffd318*x** 1)
      [10753, x**2 - 1656],
eqmod (inp_poly**2) (L0x7fffffffd2ea*x** 0+L0x7fffffffd2fa*x** 1)
      [10753, x**2 - 3461],
eqmod (inp_poly**2) (L0x7fffffffd30a*x** 0+L0x7fffffffd31a*x** 1)
      [10753, x**2 - 7292],
eqmod (inp_poly**2) (L0x7fffffffd2ec*x** 0+L0x7fffffffd2fc*x** 1)
      [10753, x**2 - 6074],
eqmod (inp_poly**2) (L0x7fffffffd30c*x** 0+L0x7fffffffd31c*x** 1)
      [10753, x**2 - 4679],
eqmod (inp_poly**2) (L0x7fffffffd2ee*x** 0+L0x7fffffffd2fe*x** 1)
      [10753, x**2 - 3422],
eqmod (inp_poly**2) (L0x7fffffffd30e*x** 0+L0x7fffffffd31e*x** 1)
      [10753, x**2 - 7331],
eqmod (inp_poly**2) (L0x7fffffffd320*x** 0+L0x7fffffffd330*x** 1)
      [10753, x**2 - 1154],
eqmod (inp_poly**2) (L0x7fffffffd340*x** 0+L0x7fffffffd350*x** 1)
      [10753, x**2 - 9599],
eqmod (inp_poly**2) (L0x7fffffffd322*x** 0+L0x7fffffffd332*x** 1)
      [10753, x**2 - 2640],
eqmod (inp_poly**2) (L0x7fffffffd342*x** 0+L0x7fffffffd352*x** 1)
      [10753, x**2 - 8113],
eqmod (inp_poly**2) (L0x7fffffffd324*x** 0+L0x7fffffffd334*x** 1)
      [10753, x**2 - 4832],
eqmod (inp_poly**2) (L0x7fffffffd344*x** 0+L0x7fffffffd354*x** 1)
      [10753, x**2 - 5921],
eqmod (inp_poly**2) (L0x7fffffffd326*x** 0+L0x7fffffffd336*x** 1)
      [10753, x**2 - 8706],
eqmod (inp_poly**2) (L0x7fffffffd346*x** 0+L0x7fffffffd356*x** 1)
      [10753, x**2 - 2047],
eqmod (inp_poly**2) (L0x7fffffffd328*x** 0+L0x7fffffffd338*x** 1)
      [10753, x**2 - 3010],
eqmod (inp_poly**2) (L0x7fffffffd348*x** 0+L0x7fffffffd358*x** 1)
      [10753, x**2 - 7743],
eqmod (inp_poly**2) (L0x7fffffffd32a*x** 0+L0x7fffffffd33a*x** 1)
      [10753, x**2 - 4631],
eqmod (inp_poly**2) (L0x7fffffffd34a*x** 0+L0x7fffffffd35a*x** 1)
      [10753, x**2 - 6122],
eqmod (inp_poly**2) (L0x7fffffffd32c*x** 0+L0x7fffffffd33c*x** 1)
      [10753, x**2 - 9193],
eqmod (inp_poly**2) (L0x7fffffffd34c*x** 0+L0x7fffffffd35c*x** 1)
      [10753, x**2 - 1560],
eqmod (inp_poly**2) (L0x7fffffffd32e*x** 0+L0x7fffffffd33e*x** 1)
      [10753, x**2 - 2637],
eqmod (inp_poly**2) (L0x7fffffffd34e*x** 0+L0x7fffffffd35e*x** 1)
      [10753, x**2 - 8116],
eqmod (inp_poly**2) (L0x7fffffffd360*x** 0+L0x7fffffffd370*x** 1)
      [10753, x**2 - 7853],
eqmod (inp_poly**2) (L0x7fffffffd380*x** 0+L0x7fffffffd390*x** 1)
      [10753, x**2 - 2900],
eqmod (inp_poly**2) (L0x7fffffffd362*x** 0+L0x7fffffffd372*x** 1)
      [10753, x**2 - 6970],
eqmod (inp_poly**2) (L0x7fffffffd382*x** 0+L0x7fffffffd392*x** 1)
      [10753, x**2 - 3783],
eqmod (inp_poly**2) (L0x7fffffffd364*x** 0+L0x7fffffffd374*x** 1)
      [10753, x**2 - 4611],
eqmod (inp_poly**2) (L0x7fffffffd384*x** 0+L0x7fffffffd394*x** 1)
      [10753, x**2 - 6142],
eqmod (inp_poly**2) (L0x7fffffffd366*x** 0+L0x7fffffffd376*x** 1)
      [10753, x**2 - 746],
eqmod (inp_poly**2) (L0x7fffffffd386*x** 0+L0x7fffffffd396*x** 1)
      [10753, x**2 - 10007],
eqmod (inp_poly**2) (L0x7fffffffd368*x** 0+L0x7fffffffd378*x** 1)
      [10753, x**2 - 6562],
eqmod (inp_poly**2) (L0x7fffffffd388*x** 0+L0x7fffffffd398*x** 1)
      [10753, x**2 - 4191],
eqmod (inp_poly**2) (L0x7fffffffd36a*x** 0+L0x7fffffffd37a*x** 1)
      [10753, x**2 - 6402],
eqmod (inp_poly**2) (L0x7fffffffd38a*x** 0+L0x7fffffffd39a*x** 1)
      [10753, x**2 - 4351],
eqmod (inp_poly**2) (L0x7fffffffd36c*x** 0+L0x7fffffffd37c*x** 1)
      [10753, x**2 - 9567],
eqmod (inp_poly**2) (L0x7fffffffd38c*x** 0+L0x7fffffffd39c*x** 1)
      [10753, x**2 - 1186],
eqmod (inp_poly**2) (L0x7fffffffd36e*x** 0+L0x7fffffffd37e*x** 1)
      [10753, x**2 - 1219],
eqmod (inp_poly**2) (L0x7fffffffd38e*x** 0+L0x7fffffffd39e*x** 1)
      [10753, x**2 - 9534],
eqmod (inp_poly**2) (L0x7fffffffd3a0*x** 0+L0x7fffffffd3b0*x** 1)
      [10753, x**2 - 8336],
eqmod (inp_poly**2) (L0x7fffffffd3c0*x** 0+L0x7fffffffd3d0*x** 1)
      [10753, x**2 - 2417],
eqmod (inp_poly**2) (L0x7fffffffd3a2*x** 0+L0x7fffffffd3b2*x** 1)
      [10753, x**2 - 136],
eqmod (inp_poly**2) (L0x7fffffffd3c2*x** 0+L0x7fffffffd3d2*x** 1)
      [10753, x**2 - 10617],
eqmod (inp_poly**2) (L0x7fffffffd3a4*x** 0+L0x7fffffffd3b4*x** 1)
      [10753, x**2 - 9112],
eqmod (inp_poly**2) (L0x7fffffffd3c4*x** 0+L0x7fffffffd3d4*x** 1)
      [10753, x**2 - 1641],
eqmod (inp_poly**2) (L0x7fffffffd3a6*x** 0+L0x7fffffffd3b6*x** 1)
      [10753, x**2 - 644],
eqmod (inp_poly**2) (L0x7fffffffd3c6*x** 0+L0x7fffffffd3d6*x** 1)
      [10753, x**2 - 10109],
eqmod (inp_poly**2) (L0x7fffffffd3a8*x** 0+L0x7fffffffd3b8*x** 1)
      [10753, x**2 - 2436],
eqmod (inp_poly**2) (L0x7fffffffd3c8*x** 0+L0x7fffffffd3d8*x** 1)
      [10753, x**2 - 8317],
eqmod (inp_poly**2) (L0x7fffffffd3aa*x** 0+L0x7fffffffd3ba*x** 1)
      [10753, x**2 - 597],
eqmod (inp_poly**2) (L0x7fffffffd3ca*x** 0+L0x7fffffffd3da*x** 1)
      [10753, x**2 - 10156],
eqmod (inp_poly**2) (L0x7fffffffd3ac*x** 0+L0x7fffffffd3bc*x** 1)
      [10753, x**2 - 7740],
eqmod (inp_poly**2) (L0x7fffffffd3cc*x** 0+L0x7fffffffd3dc*x** 1)
      [10753, x**2 - 3013],
eqmod (inp_poly**2) (L0x7fffffffd3ae*x** 0+L0x7fffffffd3be*x** 1)
      [10753, x**2 - 8836],
eqmod (inp_poly**2) (L0x7fffffffd3ce*x** 0+L0x7fffffffd3de*x** 1)
      [10753, x**2 - 1917]
,
eqmod (inp_poly**2) (L0x7fffffffd3e0*x** 0+L0x7fffffffd3f0*x** 1)
      [10753, x**2 - 10000],
eqmod (inp_poly**2) (L0x7fffffffd400*x** 0+L0x7fffffffd410*x** 1)
      [10753, x**2 - 753],
eqmod (inp_poly**2) (L0x7fffffffd3e2*x** 0+L0x7fffffffd3f2*x** 1)
      [10753, x**2 - 3775],
eqmod (inp_poly**2) (L0x7fffffffd402*x** 0+L0x7fffffffd412*x** 1)
      [10753, x**2 - 6978],
eqmod (inp_poly**2) (L0x7fffffffd3e4*x** 0+L0x7fffffffd3f4*x** 1)
      [10753, x**2 - 5606],
eqmod (inp_poly**2) (L0x7fffffffd404*x** 0+L0x7fffffffd414*x** 1)
      [10753, x**2 - 5147],
eqmod (inp_poly**2) (L0x7fffffffd3e6*x** 0+L0x7fffffffd3f6*x** 1)
      [10753, x**2 - 7439],
eqmod (inp_poly**2) (L0x7fffffffd406*x** 0+L0x7fffffffd416*x** 1)
      [10753, x**2 - 3314],
eqmod (inp_poly**2) (L0x7fffffffd3e8*x** 0+L0x7fffffffd3f8*x** 1)
      [10753, x**2 - 10373],
eqmod (inp_poly**2) (L0x7fffffffd408*x** 0+L0x7fffffffd418*x** 1)
      [10753, x**2 - 380],
eqmod (inp_poly**2) (L0x7fffffffd3ea*x** 0+L0x7fffffffd3fa*x** 1)
      [10753, x**2 - 6846],
eqmod (inp_poly**2) (L0x7fffffffd40a*x** 0+L0x7fffffffd41a*x** 1)
      [10753, x**2 - 3907],
eqmod (inp_poly**2) (L0x7fffffffd3ec*x** 0+L0x7fffffffd3fc*x** 1)
      [10753, x**2 - 7056],
eqmod (inp_poly**2) (L0x7fffffffd40c*x** 0+L0x7fffffffd41c*x** 1)
      [10753, x**2 - 3697],
eqmod (inp_poly**2) (L0x7fffffffd3ee*x** 0+L0x7fffffffd3fe*x** 1)
      [10753, x**2 - 3954],
eqmod (inp_poly**2) (L0x7fffffffd40e*x** 0+L0x7fffffffd41e*x** 1)
      [10753, x**2 - 6799],
eqmod (inp_poly**2) (L0x7fffffffd420*x** 0+L0x7fffffffd430*x** 1)
      [10753, x**2 - 2031],
eqmod (inp_poly**2) (L0x7fffffffd440*x** 0+L0x7fffffffd450*x** 1)
      [10753, x**2 - 8722],
eqmod (inp_poly**2) (L0x7fffffffd422*x** 0+L0x7fffffffd432*x** 1)
      [10753, x**2 - 1385],
eqmod (inp_poly**2) (L0x7fffffffd442*x** 0+L0x7fffffffd452*x** 1)
      [10753, x**2 - 9368],
eqmod (inp_poly**2) (L0x7fffffffd424*x** 0+L0x7fffffffd434*x** 1)
      [10753, x**2 - 6771],
eqmod (inp_poly**2) (L0x7fffffffd444*x** 0+L0x7fffffffd454*x** 1)
      [10753, x**2 - 3982],
eqmod (inp_poly**2) (L0x7fffffffd426*x** 0+L0x7fffffffd436*x** 1)
      [10753, x**2 - 3712],
eqmod (inp_poly**2) (L0x7fffffffd446*x** 0+L0x7fffffffd456*x** 1)
      [10753, x**2 - 7041],
eqmod (inp_poly**2) (L0x7fffffffd428*x** 0+L0x7fffffffd438*x** 1)
      [10753, x**2 - 2353],
eqmod (inp_poly**2) (L0x7fffffffd448*x** 0+L0x7fffffffd458*x** 1)
      [10753, x**2 - 8400],
eqmod (inp_poly**2) (L0x7fffffffd42a*x** 0+L0x7fffffffd43a*x** 1)
      [10753, x**2 - 7582],
eqmod (inp_poly**2) (L0x7fffffffd44a*x** 0+L0x7fffffffd45a*x** 1)
      [10753, x**2 - 3171],
eqmod (inp_poly**2) (L0x7fffffffd42c*x** 0+L0x7fffffffd43c*x** 1)
      [10753, x**2 - 2603],
eqmod (inp_poly**2) (L0x7fffffffd44c*x** 0+L0x7fffffffd45c*x** 1)
      [10753, x**2 - 8150],
eqmod (inp_poly**2) (L0x7fffffffd42e*x** 0+L0x7fffffffd43e*x** 1)
      [10753, x**2 - 3644],
eqmod (inp_poly**2) (L0x7fffffffd44e*x** 0+L0x7fffffffd45e*x** 1)
      [10753, x**2 - 7109],
eqmod (inp_poly**2) (L0x7fffffffd460*x** 0+L0x7fffffffd470*x** 1)
      [10753, x**2 - 841],
eqmod (inp_poly**2) (L0x7fffffffd480*x** 0+L0x7fffffffd490*x** 1)
      [10753, x**2 - 9912],
eqmod (inp_poly**2) (L0x7fffffffd462*x** 0+L0x7fffffffd472*x** 1)
      [10753, x**2 - 9807],
eqmod (inp_poly**2) (L0x7fffffffd482*x** 0+L0x7fffffffd492*x** 1)
      [10753, x**2 - 946],
eqmod (inp_poly**2) (L0x7fffffffd464*x** 0+L0x7fffffffd474*x** 1)
      [10753, x**2 - 1136],
eqmod (inp_poly**2) (L0x7fffffffd484*x** 0+L0x7fffffffd494*x** 1)
      [10753, x**2 - 9617],
eqmod (inp_poly**2) (L0x7fffffffd466*x** 0+L0x7fffffffd476*x** 1)
      [10753, x**2 - 8171],
eqmod (inp_poly**2) (L0x7fffffffd486*x** 0+L0x7fffffffd496*x** 1)
      [10753, x**2 - 2582],
eqmod (inp_poly**2) (L0x7fffffffd468*x** 0+L0x7fffffffd478*x** 1)
      [10753, x**2 - 5194],
eqmod (inp_poly**2) (L0x7fffffffd488*x** 0+L0x7fffffffd498*x** 1)
      [10753, x**2 - 5559],
eqmod (inp_poly**2) (L0x7fffffffd46a*x** 0+L0x7fffffffd47a*x** 1)
      [10753, x**2 - 7391],
eqmod (inp_poly**2) (L0x7fffffffd48a*x** 0+L0x7fffffffd49a*x** 1)
      [10753, x**2 - 3362],
eqmod (inp_poly**2) (L0x7fffffffd46c*x** 0+L0x7fffffffd47c*x** 1)
      [10753, x**2 - 559],
eqmod (inp_poly**2) (L0x7fffffffd48c*x** 0+L0x7fffffffd49c*x** 1)
      [10753, x**2 - 10194],
eqmod (inp_poly**2) (L0x7fffffffd46e*x** 0+L0x7fffffffd47e*x** 1)
      [10753, x**2 - 6851],
eqmod (inp_poly**2) (L0x7fffffffd48e*x** 0+L0x7fffffffd49e*x** 1)
      [10753, x**2 - 3902],
eqmod (inp_poly**2) (L0x7fffffffd4a0*x** 0+L0x7fffffffd4b0*x** 1)
      [10753, x**2 - 2744],
eqmod (inp_poly**2) (L0x7fffffffd4c0*x** 0+L0x7fffffffd4d0*x** 1)
      [10753, x**2 - 8009],
eqmod (inp_poly**2) (L0x7fffffffd4a2*x** 0+L0x7fffffffd4b2*x** 1)
      [10753, x**2 - 5122],
eqmod (inp_poly**2) (L0x7fffffffd4c2*x** 0+L0x7fffffffd4d2*x** 1)
      [10753, x**2 - 5631],
eqmod (inp_poly**2) (L0x7fffffffd4a4*x** 0+L0x7fffffffd4b4*x** 1)
      [10753, x**2 - 9831],
eqmod (inp_poly**2) (L0x7fffffffd4c4*x** 0+L0x7fffffffd4d4*x** 1)
      [10753, x**2 - 922],
eqmod (inp_poly**2) (L0x7fffffffd4a6*x** 0+L0x7fffffffd4b6*x** 1)
      [10753, x**2 - 9706],
eqmod (inp_poly**2) (L0x7fffffffd4c6*x** 0+L0x7fffffffd4d6*x** 1)
      [10753, x**2 - 1047],
eqmod (inp_poly**2) (L0x7fffffffd4a8*x** 0+L0x7fffffffd4b8*x** 1)
      [10753, x**2 - 4455],
eqmod (inp_poly**2) (L0x7fffffffd4c8*x** 0+L0x7fffffffd4d8*x** 1)
      [10753, x**2 - 6298],
eqmod (inp_poly**2) (L0x7fffffffd4aa*x** 0+L0x7fffffffd4ba*x** 1)
      [10753, x**2 - 2085],
eqmod (inp_poly**2) (L0x7fffffffd4ca*x** 0+L0x7fffffffd4da*x** 1)
      [10753, x**2 - 8668],
eqmod (inp_poly**2) (L0x7fffffffd4ac*x** 0+L0x7fffffffd4bc*x** 1)
      [10753, x**2 - 10659],
eqmod (inp_poly**2) (L0x7fffffffd4cc*x** 0+L0x7fffffffd4dc*x** 1)
      [10753, x**2 - 94],
eqmod (inp_poly**2) (L0x7fffffffd4ae*x** 0+L0x7fffffffd4be*x** 1)
      [10753, x**2 - 2599],
eqmod (inp_poly**2) (L0x7fffffffd4ce*x** 0+L0x7fffffffd4de*x** 1)
      [10753, x**2 - 8154]
,
eqmod (inp_poly**2) (L0x7fffffffd4e0*x** 0+L0x7fffffffd4f0*x** 1)
      [10753, x**2 - 100],
eqmod (inp_poly**2) (L0x7fffffffd500*x** 0+L0x7fffffffd510*x** 1)
      [10753, x**2 - 10653],
eqmod (inp_poly**2) (L0x7fffffffd4e2*x** 0+L0x7fffffffd4f2*x** 1)
      [10753, x**2 - 2726],
eqmod (inp_poly**2) (L0x7fffffffd502*x** 0+L0x7fffffffd512*x** 1)
      [10753, x**2 - 8027],
eqmod (inp_poly**2) (L0x7fffffffd4e4*x** 0+L0x7fffffffd4f4*x** 1)
      [10753, x**2 - 10594],
eqmod (inp_poly**2) (L0x7fffffffd504*x** 0+L0x7fffffffd514*x** 1)
      [10753, x**2 - 159],
eqmod (inp_poly**2) (L0x7fffffffd4e6*x** 0+L0x7fffffffd4f6*x** 1)
      [10753, x**2 - 4053],
eqmod (inp_poly**2) (L0x7fffffffd506*x** 0+L0x7fffffffd516*x** 1)
      [10753, x**2 - 6700],
eqmod (inp_poly**2) (L0x7fffffffd4e8*x** 0+L0x7fffffffd4f8*x** 1)
      [10753, x**2 - 6448],
eqmod (inp_poly**2) (L0x7fffffffd508*x** 0+L0x7fffffffd518*x** 1)
      [10753, x**2 - 4305],
eqmod (inp_poly**2) (L0x7fffffffd4ea*x** 0+L0x7fffffffd4fa*x** 1)
      [10753, x**2 - 2004],
eqmod (inp_poly**2) (L0x7fffffffd50a*x** 0+L0x7fffffffd51a*x** 1)
      [10753, x**2 - 8749],
eqmod (inp_poly**2) (L0x7fffffffd4ec*x** 0+L0x7fffffffd4fc*x** 1)
      [10753, x**2 - 5232],
eqmod (inp_poly**2) (L0x7fffffffd50c*x** 0+L0x7fffffffd51c*x** 1)
      [10753, x**2 - 5521],
eqmod (inp_poly**2) (L0x7fffffffd4ee*x** 0+L0x7fffffffd4fe*x** 1)
      [10753, x**2 - 8857],
eqmod (inp_poly**2) (L0x7fffffffd50e*x** 0+L0x7fffffffd51e*x** 1)
      [10753, x**2 - 1896],
eqmod (inp_poly**2) (L0x7fffffffd520*x** 0+L0x7fffffffd530*x** 1)
      [10753, x**2 - 7870],
eqmod (inp_poly**2) (L0x7fffffffd540*x** 0+L0x7fffffffd550*x** 1)
      [10753, x**2 - 2883],
eqmod (inp_poly**2) (L0x7fffffffd522*x** 0+L0x7fffffffd532*x** 1)
      [10753, x**2 - 5928],
eqmod (inp_poly**2) (L0x7fffffffd542*x** 0+L0x7fffffffd552*x** 1)
      [10753, x**2 - 4825],
eqmod (inp_poly**2) (L0x7fffffffd524*x** 0+L0x7fffffffd534*x** 1)
      [10753, x**2 - 10068],
eqmod (inp_poly**2) (L0x7fffffffd544*x** 0+L0x7fffffffd554*x** 1)
      [10753, x**2 - 685],
eqmod (inp_poly**2) (L0x7fffffffd526*x** 0+L0x7fffffffd536*x** 1)
      [10753, x**2 - 10360],
eqmod (inp_poly**2) (L0x7fffffffd546*x** 0+L0x7fffffffd556*x** 1)
      [10753, x**2 - 393],
eqmod (inp_poly**2) (L0x7fffffffd528*x** 0+L0x7fffffffd538*x** 1)
      [10753, x**2 - 10669],
eqmod (inp_poly**2) (L0x7fffffffd548*x** 0+L0x7fffffffd558*x** 1)
      [10753, x**2 - 84],
eqmod (inp_poly**2) (L0x7fffffffd52a*x** 0+L0x7fffffffd53a*x** 1)
      [10753, x**2 - 721],
eqmod (inp_poly**2) (L0x7fffffffd54a*x** 0+L0x7fffffffd55a*x** 1)
      [10753, x**2 - 10032],
eqmod (inp_poly**2) (L0x7fffffffd52c*x** 0+L0x7fffffffd53c*x** 1)
      [10753, x**2 - 5295],
eqmod (inp_poly**2) (L0x7fffffffd54c*x** 0+L0x7fffffffd55c*x** 1)
      [10753, x**2 - 5458],
eqmod (inp_poly**2) (L0x7fffffffd52e*x** 0+L0x7fffffffd53e*x** 1)
      [10753, x**2 - 5628],
eqmod (inp_poly**2) (L0x7fffffffd54e*x** 0+L0x7fffffffd55e*x** 1)
      [10753, x**2 - 5125],
eqmod (inp_poly**2) (L0x7fffffffd560*x** 0+L0x7fffffffd570*x** 1)
      [10753, x**2 - 331],
eqmod (inp_poly**2) (L0x7fffffffd580*x** 0+L0x7fffffffd590*x** 1)
      [10753, x**2 - 10422],
eqmod (inp_poly**2) (L0x7fffffffd562*x** 0+L0x7fffffffd572*x** 1)
      [10753, x**2 - 8808],
eqmod (inp_poly**2) (L0x7fffffffd582*x** 0+L0x7fffffffd592*x** 1)
      [10753, x**2 - 1945],
eqmod (inp_poly**2) (L0x7fffffffd564*x** 0+L0x7fffffffd574*x** 1)
      [10753, x**2 - 9474],
eqmod (inp_poly**2) (L0x7fffffffd584*x** 0+L0x7fffffffd594*x** 1)
      [10753, x**2 - 1279],
eqmod (inp_poly**2) (L0x7fffffffd566*x** 0+L0x7fffffffd576*x** 1)
      [10753, x**2 - 10082],
eqmod (inp_poly**2) (L0x7fffffffd586*x** 0+L0x7fffffffd596*x** 1)
      [10753, x**2 - 671],
eqmod (inp_poly**2) (L0x7fffffffd568*x** 0+L0x7fffffffd578*x** 1)
      [10753, x**2 - 267],
eqmod (inp_poly**2) (L0x7fffffffd588*x** 0+L0x7fffffffd598*x** 1)
      [10753, x**2 - 10486],
eqmod (inp_poly**2) (L0x7fffffffd56a*x** 0+L0x7fffffffd57a*x** 1)
      [10753, x**2 - 5773],
eqmod (inp_poly**2) (L0x7fffffffd58a*x** 0+L0x7fffffffd59a*x** 1)
      [10753, x**2 - 4980],
eqmod (inp_poly**2) (L0x7fffffffd56c*x** 0+L0x7fffffffd57c*x** 1)
      [10753, x**2 - 10436],
eqmod (inp_poly**2) (L0x7fffffffd58c*x** 0+L0x7fffffffd59c*x** 1)
      [10753, x**2 - 317],
eqmod (inp_poly**2) (L0x7fffffffd56e*x** 0+L0x7fffffffd57e*x** 1)
      [10753, x**2 - 3617],
eqmod (inp_poly**2) (L0x7fffffffd58e*x** 0+L0x7fffffffd59e*x** 1)
      [10753, x**2 - 7136],
eqmod (inp_poly**2) (L0x7fffffffd5a0*x** 0+L0x7fffffffd5b0*x** 1)
      [10753, x**2 - 5619],
eqmod (inp_poly**2) (L0x7fffffffd5c0*x** 0+L0x7fffffffd5d0*x** 1)
      [10753, x**2 - 5134],
eqmod (inp_poly**2) (L0x7fffffffd5a2*x** 0+L0x7fffffffd5b2*x** 1)
      [10753, x**2 - 2847],
eqmod (inp_poly**2) (L0x7fffffffd5c2*x** 0+L0x7fffffffd5d2*x** 1)
      [10753, x**2 - 7906],
eqmod (inp_poly**2) (L0x7fffffffd5a4*x** 0+L0x7fffffffd5b4*x** 1)
      [10753, x**2 - 7948],
eqmod (inp_poly**2) (L0x7fffffffd5c4*x** 0+L0x7fffffffd5d4*x** 1)
      [10753, x**2 - 2805],
eqmod (inp_poly**2) (L0x7fffffffd5a6*x** 0+L0x7fffffffd5b6*x** 1)
      [10753, x**2 - 10635],
eqmod (inp_poly**2) (L0x7fffffffd5c6*x** 0+L0x7fffffffd5d6*x** 1)
      [10753, x**2 - 118],
eqmod (inp_poly**2) (L0x7fffffffd5a8*x** 0+L0x7fffffffd5b8*x** 1)
      [10753, x**2 - 7034],
eqmod (inp_poly**2) (L0x7fffffffd5c8*x** 0+L0x7fffffffd5d8*x** 1)
      [10753, x**2 - 3719],
eqmod (inp_poly**2) (L0x7fffffffd5aa*x** 0+L0x7fffffffd5ba*x** 1)
      [10753, x**2 - 5935],
eqmod (inp_poly**2) (L0x7fffffffd5ca*x** 0+L0x7fffffffd5da*x** 1)
      [10753, x**2 - 4818],
eqmod (inp_poly**2) (L0x7fffffffd5ac*x** 0+L0x7fffffffd5bc*x** 1)
      [10753, x**2 - 10537],
eqmod (inp_poly**2) (L0x7fffffffd5cc*x** 0+L0x7fffffffd5dc*x** 1)
      [10753, x**2 - 216],
eqmod (inp_poly**2) (L0x7fffffffd5ae*x** 0+L0x7fffffffd5be*x** 1)
      [10753, x**2 - 1854],
eqmod (inp_poly**2) (L0x7fffffffd5ce*x** 0+L0x7fffffffd5de*x** 1)
      [10753, x**2 - 8899]
,
eqmod (inp_poly**2) (L0x7fffffffd5e0*x** 0+L0x7fffffffd5f0*x** 1)
      [10753, x**2 - 10724],
eqmod (inp_poly**2) (L0x7fffffffd600*x** 0+L0x7fffffffd610*x** 1)
      [10753, x**2 - 29],
eqmod (inp_poly**2) (L0x7fffffffd5e2*x** 0+L0x7fffffffd5f2*x** 1)
      [10753, x**2 - 1145],
eqmod (inp_poly**2) (L0x7fffffffd602*x** 0+L0x7fffffffd612*x** 1)
      [10753, x**2 - 9608],
eqmod (inp_poly**2) (L0x7fffffffd5e4*x** 0+L0x7fffffffd5f4*x** 1)
      [10753, x**2 - 1444],
eqmod (inp_poly**2) (L0x7fffffffd604*x** 0+L0x7fffffffd614*x** 1)
      [10753, x**2 - 9309],
eqmod (inp_poly**2) (L0x7fffffffd5e6*x** 0+L0x7fffffffd5f6*x** 1)
      [10753, x**2 - 1943],
eqmod (inp_poly**2) (L0x7fffffffd606*x** 0+L0x7fffffffd616*x** 1)
      [10753, x**2 - 8810],
eqmod (inp_poly**2) (L0x7fffffffd5e8*x** 0+L0x7fffffffd5f8*x** 1)
      [10753, x**2 - 5012],
eqmod (inp_poly**2) (L0x7fffffffd608*x** 0+L0x7fffffffd618*x** 1)
      [10753, x**2 - 5741],
eqmod (inp_poly**2) (L0x7fffffffd5ea*x** 0+L0x7fffffffd5fa*x** 1)
      [10753, x**2 - 7161],
eqmod (inp_poly**2) (L0x7fffffffd60a*x** 0+L0x7fffffffd61a*x** 1)
      [10753, x**2 - 3592],
eqmod (inp_poly**2) (L0x7fffffffd5ec*x** 0+L0x7fffffffd5fc*x** 1)
      [10753, x**2 - 6655],
eqmod (inp_poly**2) (L0x7fffffffd60c*x** 0+L0x7fffffffd61c*x** 1)
      [10753, x**2 - 4098],
eqmod (inp_poly**2) (L0x7fffffffd5ee*x** 0+L0x7fffffffd5fe*x** 1)
      [10753, x**2 - 8292],
eqmod (inp_poly**2) (L0x7fffffffd60e*x** 0+L0x7fffffffd61e*x** 1)
      [10753, x**2 - 2461],
eqmod (inp_poly**2) (L0x7fffffffd620*x** 0+L0x7fffffffd630*x** 1)
      [10753, x**2 - 9546],
eqmod (inp_poly**2) (L0x7fffffffd640*x** 0+L0x7fffffffd650*x** 1)
      [10753, x**2 - 1207],
eqmod (inp_poly**2) (L0x7fffffffd622*x** 0+L0x7fffffffd632*x** 1)
      [10753, x**2 - 9464],
eqmod (inp_poly**2) (L0x7fffffffd642*x** 0+L0x7fffffffd652*x** 1)
      [10753, x**2 - 1289],
eqmod (inp_poly**2) (L0x7fffffffd624*x** 0+L0x7fffffffd634*x** 1)
      [10753, x**2 - 10414],
eqmod (inp_poly**2) (L0x7fffffffd644*x** 0+L0x7fffffffd654*x** 1)
      [10753, x**2 - 339],
eqmod (inp_poly**2) (L0x7fffffffd626*x** 0+L0x7fffffffd636*x** 1)
      [10753, x**2 - 5598],
eqmod (inp_poly**2) (L0x7fffffffd646*x** 0+L0x7fffffffd656*x** 1)
      [10753, x**2 - 5155],
eqmod (inp_poly**2) (L0x7fffffffd628*x** 0+L0x7fffffffd638*x** 1)
      [10753, x**2 - 9487],
eqmod (inp_poly**2) (L0x7fffffffd648*x** 0+L0x7fffffffd658*x** 1)
      [10753, x**2 - 1266],
eqmod (inp_poly**2) (L0x7fffffffd62a*x** 0+L0x7fffffffd63a*x** 1)
      [10753, x**2 - 5490],
eqmod (inp_poly**2) (L0x7fffffffd64a*x** 0+L0x7fffffffd65a*x** 1)
      [10753, x**2 - 5263],
eqmod (inp_poly**2) (L0x7fffffffd62c*x** 0+L0x7fffffffd63c*x** 1)
      [10753, x**2 - 2228],
eqmod (inp_poly**2) (L0x7fffffffd64c*x** 0+L0x7fffffffd65c*x** 1)
      [10753, x**2 - 8525],
eqmod (inp_poly**2) (L0x7fffffffd62e*x** 0+L0x7fffffffd63e*x** 1)
      [10753, x**2 - 9551],
eqmod (inp_poly**2) (L0x7fffffffd64e*x** 0+L0x7fffffffd65e*x** 1)
      [10753, x**2 - 1202],
eqmod (inp_poly**2) (L0x7fffffffd660*x** 0+L0x7fffffffd670*x** 1)
      [10753, x**2 - 8829],
eqmod (inp_poly**2) (L0x7fffffffd680*x** 0+L0x7fffffffd690*x** 1)
      [10753, x**2 - 1924],
eqmod (inp_poly**2) (L0x7fffffffd662*x** 0+L0x7fffffffd672*x** 1)
      [10753, x**2 - 2177],
eqmod (inp_poly**2) (L0x7fffffffd682*x** 0+L0x7fffffffd692*x** 1)
      [10753, x**2 - 8576],
eqmod (inp_poly**2) (L0x7fffffffd664*x** 0+L0x7fffffffd674*x** 1)
      [10753, x**2 - 6070],
eqmod (inp_poly**2) (L0x7fffffffd684*x** 0+L0x7fffffffd694*x** 1)
      [10753, x**2 - 4683],
eqmod (inp_poly**2) (L0x7fffffffd666*x** 0+L0x7fffffffd676*x** 1)
      [10753, x**2 - 10625],
eqmod (inp_poly**2) (L0x7fffffffd686*x** 0+L0x7fffffffd696*x** 1)
      [10753, x**2 - 128],
eqmod (inp_poly**2) (L0x7fffffffd668*x** 0+L0x7fffffffd678*x** 1)
      [10753, x**2 - 3256],
eqmod (inp_poly**2) (L0x7fffffffd688*x** 0+L0x7fffffffd698*x** 1)
      [10753, x**2 - 7497],
eqmod (inp_poly**2) (L0x7fffffffd66a*x** 0+L0x7fffffffd67a*x** 1)
      [10753, x**2 - 7896],
eqmod (inp_poly**2) (L0x7fffffffd68a*x** 0+L0x7fffffffd69a*x** 1)
      [10753, x**2 - 2857],
eqmod (inp_poly**2) (L0x7fffffffd66c*x** 0+L0x7fffffffd67c*x** 1)
      [10753, x**2 - 2135],
eqmod (inp_poly**2) (L0x7fffffffd68c*x** 0+L0x7fffffffd69c*x** 1)
      [10753, x**2 - 8618],
eqmod (inp_poly**2) (L0x7fffffffd66e*x** 0+L0x7fffffffd67e*x** 1)
      [10753, x**2 - 7661],
eqmod (inp_poly**2) (L0x7fffffffd68e*x** 0+L0x7fffffffd69e*x** 1)
      [10753, x**2 - 3092],
eqmod (inp_poly**2) (L0x7fffffffd6a0*x** 0+L0x7fffffffd6b0*x** 1)
      [10753, x**2 - 5575],
eqmod (inp_poly**2) (L0x7fffffffd6c0*x** 0+L0x7fffffffd6d0*x** 1)
      [10753, x**2 - 5178],
eqmod (inp_poly**2) (L0x7fffffffd6a2*x** 0+L0x7fffffffd6b2*x** 1)
      [10753, x**2 - 6809],
eqmod (inp_poly**2) (L0x7fffffffd6c2*x** 0+L0x7fffffffd6d2*x** 1)
      [10753, x**2 - 3944],
eqmod (inp_poly**2) (L0x7fffffffd6a4*x** 0+L0x7fffffffd6b4*x** 1)
      [10753, x**2 - 4577],
eqmod (inp_poly**2) (L0x7fffffffd6c4*x** 0+L0x7fffffffd6d4*x** 1)
      [10753, x**2 - 6176],
eqmod (inp_poly**2) (L0x7fffffffd6a6*x** 0+L0x7fffffffd6b6*x** 1)
      [10753, x**2 - 2830],
eqmod (inp_poly**2) (L0x7fffffffd6c6*x** 0+L0x7fffffffd6d6*x** 1)
      [10753, x**2 - 7923],
eqmod (inp_poly**2) (L0x7fffffffd6a8*x** 0+L0x7fffffffd6b8*x** 1)
      [10753, x**2 - 4627],
eqmod (inp_poly**2) (L0x7fffffffd6c8*x** 0+L0x7fffffffd6d8*x** 1)
      [10753, x**2 - 6126],
eqmod (inp_poly**2) (L0x7fffffffd6aa*x** 0+L0x7fffffffd6ba*x** 1)
      [10753, x**2 - 4193],
eqmod (inp_poly**2) (L0x7fffffffd6ca*x** 0+L0x7fffffffd6da*x** 1)
      [10753, x**2 - 6560],
eqmod (inp_poly**2) (L0x7fffffffd6ac*x** 0+L0x7fffffffd6bc*x** 1)
      [10753, x**2 - 1353],
eqmod (inp_poly**2) (L0x7fffffffd6cc*x** 0+L0x7fffffffd6dc*x** 1)
      [10753, x**2 - 9400],
eqmod (inp_poly**2) (L0x7fffffffd6ae*x** 0+L0x7fffffffd6be*x** 1)
      [10753, x**2 - 1828],
eqmod (inp_poly**2) (L0x7fffffffd6ce*x** 0+L0x7fffffffd6de*x** 1)
      [10753, x**2 - 8925]
,
eqmod (inp_poly**2) (L0x7fffffffd6e0*x** 0+L0x7fffffffd6f0*x** 1)
      [10753, x**2 - 10],
eqmod (inp_poly**2) (L0x7fffffffd700*x** 0+L0x7fffffffd710*x** 1)
      [10753, x**2 - 10743],
eqmod (inp_poly**2) (L0x7fffffffd6e2*x** 0+L0x7fffffffd6f2*x** 1)
      [10753, x**2 - 8875],
eqmod (inp_poly**2) (L0x7fffffffd702*x** 0+L0x7fffffffd712*x** 1)
      [10753, x**2 - 1878],
eqmod (inp_poly**2) (L0x7fffffffd6e4*x** 0+L0x7fffffffd6f4*x** 1)
      [10753, x**2 - 3210],
eqmod (inp_poly**2) (L0x7fffffffd704*x** 0+L0x7fffffffd714*x** 1)
      [10753, x**2 - 7543],
eqmod (inp_poly**2) (L0x7fffffffd6e6*x** 0+L0x7fffffffd6f6*x** 1)
      [10753, x**2 - 10083],
eqmod (inp_poly**2) (L0x7fffffffd706*x** 0+L0x7fffffffd716*x** 1)
      [10753, x**2 - 670],
eqmod (inp_poly**2) (L0x7fffffffd6e8*x** 0+L0x7fffffffd6f8*x** 1)
      [10753, x**2 - 4946],
eqmod (inp_poly**2) (L0x7fffffffd708*x** 0+L0x7fffffffd718*x** 1)
      [10753, x**2 - 5807],
eqmod (inp_poly**2) (L0x7fffffffd6ea*x** 0+L0x7fffffffd6fa*x** 1)
      [10753, x**2 - 2351],
eqmod (inp_poly**2) (L0x7fffffffd70a*x** 0+L0x7fffffffd71a*x** 1)
      [10753, x**2 - 8402],
eqmod (inp_poly**2) (L0x7fffffffd6ec*x** 0+L0x7fffffffd6fc*x** 1)
      [10753, x**2 - 6975],
eqmod (inp_poly**2) (L0x7fffffffd70c*x** 0+L0x7fffffffd71c*x** 1)
      [10753, x**2 - 3778],
eqmod (inp_poly**2) (L0x7fffffffd6ee*x** 0+L0x7fffffffd6fe*x** 1)
      [10753, x**2 - 1961],
eqmod (inp_poly**2) (L0x7fffffffd70e*x** 0+L0x7fffffffd71e*x** 1)
      [10753, x**2 - 8792],
eqmod (inp_poly**2) (L0x7fffffffd720*x** 0+L0x7fffffffd730*x** 1)
      [10753, x**2 - 787],
eqmod (inp_poly**2) (L0x7fffffffd740*x** 0+L0x7fffffffd750*x** 1)
      [10753, x**2 - 9966],
eqmod (inp_poly**2) (L0x7fffffffd722*x** 0+L0x7fffffffd732*x** 1)
      [10753, x**2 - 4894],
eqmod (inp_poly**2) (L0x7fffffffd742*x** 0+L0x7fffffffd752*x** 1)
      [10753, x**2 - 5859],
eqmod (inp_poly**2) (L0x7fffffffd724*x** 0+L0x7fffffffd734*x** 1)
      [10753, x**2 - 5308],
eqmod (inp_poly**2) (L0x7fffffffd744*x** 0+L0x7fffffffd754*x** 1)
      [10753, x**2 - 5445],
eqmod (inp_poly**2) (L0x7fffffffd726*x** 0+L0x7fffffffd736*x** 1)
      [10753, x**2 - 1036],
eqmod (inp_poly**2) (L0x7fffffffd746*x** 0+L0x7fffffffd756*x** 1)
      [10753, x**2 - 9717],
eqmod (inp_poly**2) (L0x7fffffffd728*x** 0+L0x7fffffffd738*x** 1)
      [10753, x**2 - 8594],
eqmod (inp_poly**2) (L0x7fffffffd748*x** 0+L0x7fffffffd758*x** 1)
      [10753, x**2 - 2159],
eqmod (inp_poly**2) (L0x7fffffffd72a*x** 0+L0x7fffffffd73a*x** 1)
      [10753, x**2 - 3298],
eqmod (inp_poly**2) (L0x7fffffffd74a*x** 0+L0x7fffffffd75a*x** 1)
      [10753, x**2 - 7455],
eqmod (inp_poly**2) (L0x7fffffffd72c*x** 0+L0x7fffffffd73c*x** 1)
      [10753, x**2 - 5906],
eqmod (inp_poly**2) (L0x7fffffffd74c*x** 0+L0x7fffffffd75c*x** 1)
      [10753, x**2 - 4847],
eqmod (inp_poly**2) (L0x7fffffffd72e*x** 0+L0x7fffffffd73e*x** 1)
      [10753, x**2 - 4864],
eqmod (inp_poly**2) (L0x7fffffffd74e*x** 0+L0x7fffffffd75e*x** 1)
      [10753, x**2 - 5889],
eqmod (inp_poly**2) (L0x7fffffffd760*x** 0+L0x7fffffffd770*x** 1)
      [10753, x**2 - 3259],
eqmod (inp_poly**2) (L0x7fffffffd780*x** 0+L0x7fffffffd790*x** 1)
      [10753, x**2 - 7494],
eqmod (inp_poly**2) (L0x7fffffffd762*x** 0+L0x7fffffffd772*x** 1)
      [10753, x**2 - 5182],
eqmod (inp_poly**2) (L0x7fffffffd782*x** 0+L0x7fffffffd792*x** 1)
      [10753, x**2 - 5571],
eqmod (inp_poly**2) (L0x7fffffffd764*x** 0+L0x7fffffffd774*x** 1)
      [10753, x**2 - 3098],
eqmod (inp_poly**2) (L0x7fffffffd784*x** 0+L0x7fffffffd794*x** 1)
      [10753, x**2 - 7655],
eqmod (inp_poly**2) (L0x7fffffffd766*x** 0+L0x7fffffffd776*x** 1)
      [10753, x**2 - 7460],
eqmod (inp_poly**2) (L0x7fffffffd786*x** 0+L0x7fffffffd796*x** 1)
      [10753, x**2 - 3293],
eqmod (inp_poly**2) (L0x7fffffffd768*x** 0+L0x7fffffffd778*x** 1)
      [10753, x**2 - 1102],
eqmod (inp_poly**2) (L0x7fffffffd788*x** 0+L0x7fffffffd798*x** 1)
      [10753, x**2 - 9651],
eqmod (inp_poly**2) (L0x7fffffffd76a*x** 0+L0x7fffffffd77a*x** 1)
      [10753, x**2 - 10255],
eqmod (inp_poly**2) (L0x7fffffffd78a*x** 0+L0x7fffffffd79a*x** 1)
      [10753, x**2 - 498],
eqmod (inp_poly**2) (L0x7fffffffd76c*x** 0+L0x7fffffffd77c*x** 1)
      [10753, x**2 - 9646],
eqmod (inp_poly**2) (L0x7fffffffd78c*x** 0+L0x7fffffffd79c*x** 1)
      [10753, x**2 - 1107],
eqmod (inp_poly**2) (L0x7fffffffd76e*x** 0+L0x7fffffffd77e*x** 1)
      [10753, x**2 - 1437],
eqmod (inp_poly**2) (L0x7fffffffd78e*x** 0+L0x7fffffffd79e*x** 1)
      [10753, x**2 - 9316],
eqmod (inp_poly**2) (L0x7fffffffd7a0*x** 0+L0x7fffffffd7b0*x** 1)
      [10753, x**2 - 8089],
eqmod (inp_poly**2) (L0x7fffffffd7c0*x** 0+L0x7fffffffd7d0*x** 1)
      [10753, x**2 - 2664],
eqmod (inp_poly**2) (L0x7fffffffd7a2*x** 0+L0x7fffffffd7b2*x** 1)
      [10753, x**2 - 1360],
eqmod (inp_poly**2) (L0x7fffffffd7c2*x** 0+L0x7fffffffd7d2*x** 1)
      [10753, x**2 - 9393],
eqmod (inp_poly**2) (L0x7fffffffd7a4*x** 0+L0x7fffffffd7b4*x** 1)
      [10753, x**2 - 5096],
eqmod (inp_poly**2) (L0x7fffffffd7c4*x** 0+L0x7fffffffd7d4*x** 1)
      [10753, x**2 - 5657],
eqmod (inp_poly**2) (L0x7fffffffd7a6*x** 0+L0x7fffffffd7b6*x** 1)
      [10753, x**2 - 6440],
eqmod (inp_poly**2) (L0x7fffffffd7c6*x** 0+L0x7fffffffd7d6*x** 1)
      [10753, x**2 - 4313],
eqmod (inp_poly**2) (L0x7fffffffd7a8*x** 0+L0x7fffffffd7b8*x** 1)
      [10753, x**2 - 2854],
eqmod (inp_poly**2) (L0x7fffffffd7c8*x** 0+L0x7fffffffd7d8*x** 1)
      [10753, x**2 - 7899],
eqmod (inp_poly**2) (L0x7fffffffd7aa*x** 0+L0x7fffffffd7ba*x** 1)
      [10753, x**2 - 5970],
eqmod (inp_poly**2) (L0x7fffffffd7ca*x** 0+L0x7fffffffd7da*x** 1)
      [10753, x**2 - 4783],
eqmod (inp_poly**2) (L0x7fffffffd7ac*x** 0+L0x7fffffffd7bc*x** 1)
      [10753, x**2 - 2129],
eqmod (inp_poly**2) (L0x7fffffffd7cc*x** 0+L0x7fffffffd7dc*x** 1)
      [10753, x**2 - 8624],
eqmod (inp_poly**2) (L0x7fffffffd7ae*x** 0+L0x7fffffffd7be*x** 1)
      [10753, x**2 - 2336],
eqmod (inp_poly**2) (L0x7fffffffd7ce*x** 0+L0x7fffffffd7de*x** 1)
      [10753, x**2 - 8417]
,
eqmod (inp_poly**2) (L0x7fffffffd7e0*x** 0+L0x7fffffffd7f0*x** 1)
      [10753, x**2 - 3223],
eqmod (inp_poly**2) (L0x7fffffffd800*x** 0+L0x7fffffffd810*x** 1)
      [10753, x**2 - 7530],
eqmod (inp_poly**2) (L0x7fffffffd7e2*x** 0+L0x7fffffffd7f2*x** 1)
      [10753, x**2 - 5491],
eqmod (inp_poly**2) (L0x7fffffffd802*x** 0+L0x7fffffffd812*x** 1)
      [10753, x**2 - 5262],
eqmod (inp_poly**2) (L0x7fffffffd7e4*x** 0+L0x7fffffffd7f4*x** 1)
      [10753, x**2 - 2295],
eqmod (inp_poly**2) (L0x7fffffffd804*x** 0+L0x7fffffffd814*x** 1)
      [10753, x**2 - 8458],
eqmod (inp_poly**2) (L0x7fffffffd7e6*x** 0+L0x7fffffffd7f6*x** 1)
      [10753, x**2 - 9872],
eqmod (inp_poly**2) (L0x7fffffffd806*x** 0+L0x7fffffffd816*x** 1)
      [10753, x**2 - 881],
eqmod (inp_poly**2) (L0x7fffffffd7e8*x** 0+L0x7fffffffd7f8*x** 1)
      [10753, x**2 - 6953],
eqmod (inp_poly**2) (L0x7fffffffd808*x** 0+L0x7fffffffd818*x** 1)
      [10753, x**2 - 3800],
eqmod (inp_poly**2) (L0x7fffffffd7ea*x** 0+L0x7fffffffd7fa*x** 1)
      [10753, x**2 - 3942],
eqmod (inp_poly**2) (L0x7fffffffd80a*x** 0+L0x7fffffffd81a*x** 1)
      [10753, x**2 - 6811],
eqmod (inp_poly**2) (L0x7fffffffd7ec*x** 0+L0x7fffffffd7fc*x** 1)
      [10753, x**2 - 6042],
eqmod (inp_poly**2) (L0x7fffffffd80c*x** 0+L0x7fffffffd81c*x** 1)
      [10753, x**2 - 4711],
eqmod (inp_poly**2) (L0x7fffffffd7ee*x** 0+L0x7fffffffd7fe*x** 1)
      [10753, x**2 - 7281],
eqmod (inp_poly**2) (L0x7fffffffd80e*x** 0+L0x7fffffffd81e*x** 1)
      [10753, x**2 - 3472],
eqmod (inp_poly**2) (L0x7fffffffd820*x** 0+L0x7fffffffd830*x** 1)
      [10753, x**2 - 9557],
eqmod (inp_poly**2) (L0x7fffffffd840*x** 0+L0x7fffffffd850*x** 1)
      [10753, x**2 - 1196],
eqmod (inp_poly**2) (L0x7fffffffd822*x** 0+L0x7fffffffd832*x** 1)
      [10753, x**2 - 3097],
eqmod (inp_poly**2) (L0x7fffffffd842*x** 0+L0x7fffffffd852*x** 1)
      [10753, x**2 - 7656],
eqmod (inp_poly**2) (L0x7fffffffd824*x** 0+L0x7fffffffd834*x** 1)
      [10753, x**2 - 3192],
eqmod (inp_poly**2) (L0x7fffffffd844*x** 0+L0x7fffffffd854*x** 1)
      [10753, x**2 - 7561],
eqmod (inp_poly**2) (L0x7fffffffd826*x** 0+L0x7fffffffd836*x** 1)
      [10753, x**2 - 4861],
eqmod (inp_poly**2) (L0x7fffffffd846*x** 0+L0x7fffffffd856*x** 1)
      [10753, x**2 - 5892],
eqmod (inp_poly**2) (L0x7fffffffd828*x** 0+L0x7fffffffd838*x** 1)
      [10753, x**2 - 2024],
eqmod (inp_poly**2) (L0x7fffffffd848*x** 0+L0x7fffffffd858*x** 1)
      [10753, x**2 - 8729],
eqmod (inp_poly**2) (L0x7fffffffd82a*x** 0+L0x7fffffffd83a*x** 1)
      [10753, x**2 - 549],
eqmod (inp_poly**2) (L0x7fffffffd84a*x** 0+L0x7fffffffd85a*x** 1)
      [10753, x**2 - 10204],
eqmod (inp_poly**2) (L0x7fffffffd82c*x** 0+L0x7fffffffd83c*x** 1)
      [10753, x**2 - 4524],
eqmod (inp_poly**2) (L0x7fffffffd84c*x** 0+L0x7fffffffd85c*x** 1)
      [10753, x**2 - 6229],
eqmod (inp_poly**2) (L0x7fffffffd82e*x** 0+L0x7fffffffd83e*x** 1)
      [10753, x**2 - 4181],
eqmod (inp_poly**2) (L0x7fffffffd84e*x** 0+L0x7fffffffd85e*x** 1)
      [10753, x**2 - 6572],
eqmod (inp_poly**2) (L0x7fffffffd860*x** 0+L0x7fffffffd870*x** 1)
      [10753, x**2 - 8410],
eqmod (inp_poly**2) (L0x7fffffffd880*x** 0+L0x7fffffffd890*x** 1)
      [10753, x**2 - 2343],
eqmod (inp_poly**2) (L0x7fffffffd862*x** 0+L0x7fffffffd872*x** 1)
      [10753, x**2 - 1293],
eqmod (inp_poly**2) (L0x7fffffffd882*x** 0+L0x7fffffffd892*x** 1)
      [10753, x**2 - 9460],
eqmod (inp_poly**2) (L0x7fffffffd864*x** 0+L0x7fffffffd874*x** 1)
      [10753, x**2 - 607],
eqmod (inp_poly**2) (L0x7fffffffd884*x** 0+L0x7fffffffd894*x** 1)
      [10753, x**2 - 10146],
eqmod (inp_poly**2) (L0x7fffffffd866*x** 0+L0x7fffffffd876*x** 1)
      [10753, x**2 - 6439],
eqmod (inp_poly**2) (L0x7fffffffd886*x** 0+L0x7fffffffd896*x** 1)
      [10753, x**2 - 4314],
eqmod (inp_poly**2) (L0x7fffffffd868*x** 0+L0x7fffffffd878*x** 1)
      [10753, x**2 - 8928],
eqmod (inp_poly**2) (L0x7fffffffd888*x** 0+L0x7fffffffd898*x** 1)
      [10753, x**2 - 1825],
eqmod (inp_poly**2) (L0x7fffffffd86a*x** 0+L0x7fffffffd87a*x** 1)
      [10753, x**2 - 9392],
eqmod (inp_poly**2) (L0x7fffffffd88a*x** 0+L0x7fffffffd89a*x** 1)
      [10753, x**2 - 1361],
eqmod (inp_poly**2) (L0x7fffffffd86c*x** 0+L0x7fffffffd87c*x** 1)
      [10753, x**2 - 5590],
eqmod (inp_poly**2) (L0x7fffffffd88c*x** 0+L0x7fffffffd89c*x** 1)
      [10753, x**2 - 5163],
eqmod (inp_poly**2) (L0x7fffffffd86e*x** 0+L0x7fffffffd87e*x** 1)
      [10753, x**2 - 3992],
eqmod (inp_poly**2) (L0x7fffffffd88e*x** 0+L0x7fffffffd89e*x** 1)
      [10753, x**2 - 6761],
eqmod (inp_poly**2) (L0x7fffffffd8a0*x** 0+L0x7fffffffd8b0*x** 1)
      [10753, x**2 - 5934],
eqmod (inp_poly**2) (L0x7fffffffd8c0*x** 0+L0x7fffffffd8d0*x** 1)
      [10753, x**2 - 4819],
eqmod (inp_poly**2) (L0x7fffffffd8a2*x** 0+L0x7fffffffd8b2*x** 1)
      [10753, x**2 - 8208],
eqmod (inp_poly**2) (L0x7fffffffd8c2*x** 0+L0x7fffffffd8d2*x** 1)
      [10753, x**2 - 2545],
eqmod (inp_poly**2) (L0x7fffffffd8a4*x** 0+L0x7fffffffd8b4*x** 1)
      [10753, x**2 - 1533],
eqmod (inp_poly**2) (L0x7fffffffd8c4*x** 0+L0x7fffffffd8d4*x** 1)
      [10753, x**2 - 9220],
eqmod (inp_poly**2) (L0x7fffffffd8a6*x** 0+L0x7fffffffd8b6*x** 1)
      [10753, x**2 - 283],
eqmod (inp_poly**2) (L0x7fffffffd8c6*x** 0+L0x7fffffffd8d6*x** 1)
      [10753, x**2 - 10470],
eqmod (inp_poly**2) (L0x7fffffffd8a8*x** 0+L0x7fffffffd8b8*x** 1)
      [10753, x**2 - 1538],
eqmod (inp_poly**2) (L0x7fffffffd8c8*x** 0+L0x7fffffffd8d8*x** 1)
      [10753, x**2 - 9215],
eqmod (inp_poly**2) (L0x7fffffffd8aa*x** 0+L0x7fffffffd8ba*x** 1)
      [10753, x**2 - 10097],
eqmod (inp_poly**2) (L0x7fffffffd8ca*x** 0+L0x7fffffffd8da*x** 1)
      [10753, x**2 - 656],
eqmod (inp_poly**2) (L0x7fffffffd8ac*x** 0+L0x7fffffffd8bc*x** 1)
      [10753, x**2 - 9813],
eqmod (inp_poly**2) (L0x7fffffffd8cc*x** 0+L0x7fffffffd8dc*x** 1)
      [10753, x**2 - 940],
eqmod (inp_poly**2) (L0x7fffffffd8ae*x** 0+L0x7fffffffd8be*x** 1)
      [10753, x**2 - 4484],
eqmod (inp_poly**2) (L0x7fffffffd8ce*x** 0+L0x7fffffffd8de*x** 1)
      [10753, x**2 - 6269]
,
eqmod (inp_poly**2) (L0x7fffffffd8e0*x** 0+L0x7fffffffd8f0*x** 1)
      [10753, x**2 - 1000],
eqmod (inp_poly**2) (L0x7fffffffd900*x** 0+L0x7fffffffd910*x** 1)
      [10753, x**2 - 9753],
eqmod (inp_poly**2) (L0x7fffffffd8e2*x** 0+L0x7fffffffd8f2*x** 1)
      [10753, x**2 - 5754],
eqmod (inp_poly**2) (L0x7fffffffd902*x** 0+L0x7fffffffd912*x** 1)
      [10753, x**2 - 4999],
eqmod (inp_poly**2) (L0x7fffffffd8e4*x** 0+L0x7fffffffd8f4*x** 1)
      [10753, x**2 - 9163],
eqmod (inp_poly**2) (L0x7fffffffd904*x** 0+L0x7fffffffd914*x** 1)
      [10753, x**2 - 1590],
eqmod (inp_poly**2) (L0x7fffffffd8e6*x** 0+L0x7fffffffd8f6*x** 1)
      [10753, x**2 - 8271],
eqmod (inp_poly**2) (L0x7fffffffd906*x** 0+L0x7fffffffd916*x** 1)
      [10753, x**2 - 2482],
eqmod (inp_poly**2) (L0x7fffffffd8e8*x** 0+L0x7fffffffd8f8*x** 1)
      [10753, x**2 - 10715],
eqmod (inp_poly**2) (L0x7fffffffd908*x** 0+L0x7fffffffd918*x** 1)
      [10753, x**2 - 38],
eqmod (inp_poly**2) (L0x7fffffffd8ea*x** 0+L0x7fffffffd8fa*x** 1)
      [10753, x**2 - 9287],
eqmod (inp_poly**2) (L0x7fffffffd90a*x** 0+L0x7fffffffd91a*x** 1)
      [10753, x**2 - 1466],
eqmod (inp_poly**2) (L0x7fffffffd8ec*x** 0+L0x7fffffffd8fc*x** 1)
      [10753, x**2 - 9308],
eqmod (inp_poly**2) (L0x7fffffffd90c*x** 0+L0x7fffffffd91c*x** 1)
      [10753, x**2 - 1445],
eqmod (inp_poly**2) (L0x7fffffffd8ee*x** 0+L0x7fffffffd8fe*x** 1)
      [10753, x**2 - 2546],
eqmod (inp_poly**2) (L0x7fffffffd90e*x** 0+L0x7fffffffd91e*x** 1)
      [10753, x**2 - 8207],
eqmod (inp_poly**2) (L0x7fffffffd920*x** 0+L0x7fffffffd930*x** 1)
      [10753, x**2 - 3429],
eqmod (inp_poly**2) (L0x7fffffffd940*x** 0+L0x7fffffffd950*x** 1)
      [10753, x**2 - 7324],
eqmod (inp_poly**2) (L0x7fffffffd922*x** 0+L0x7fffffffd932*x** 1)
      [10753, x**2 - 5515],
eqmod (inp_poly**2) (L0x7fffffffd942*x** 0+L0x7fffffffd952*x** 1)
      [10753, x**2 - 5238],
eqmod (inp_poly**2) (L0x7fffffffd924*x** 0+L0x7fffffffd934*x** 1)
      [10753, x**2 - 3903],
eqmod (inp_poly**2) (L0x7fffffffd944*x** 0+L0x7fffffffd954*x** 1)
      [10753, x**2 - 6850],
eqmod (inp_poly**2) (L0x7fffffffd926*x** 0+L0x7fffffffd936*x** 1)
      [10753, x**2 - 6823],
eqmod (inp_poly**2) (L0x7fffffffd946*x** 0+L0x7fffffffd956*x** 1)
      [10753, x**2 - 3930],
eqmod (inp_poly**2) (L0x7fffffffd928*x** 0+L0x7fffffffd938*x** 1)
      [10753, x**2 - 9913],
eqmod (inp_poly**2) (L0x7fffffffd948*x** 0+L0x7fffffffd958*x** 1)
      [10753, x**2 - 840],
eqmod (inp_poly**2) (L0x7fffffffd92a*x** 0+L0x7fffffffd93a*x** 1)
      [10753, x**2 - 7210],
eqmod (inp_poly**2) (L0x7fffffffd94a*x** 0+L0x7fffffffd95a*x** 1)
      [10753, x**2 - 3543],
eqmod (inp_poly**2) (L0x7fffffffd92c*x** 0+L0x7fffffffd93c*x** 1)
      [10753, x**2 - 9938],
eqmod (inp_poly**2) (L0x7fffffffd94c*x** 0+L0x7fffffffd95c*x** 1)
      [10753, x**2 - 815],
eqmod (inp_poly**2) (L0x7fffffffd92e*x** 0+L0x7fffffffd93e*x** 1)
      [10753, x**2 - 2515],
eqmod (inp_poly**2) (L0x7fffffffd94e*x** 0+L0x7fffffffd95e*x** 1)
      [10753, x**2 - 8238],
eqmod (inp_poly**2) (L0x7fffffffd960*x** 0+L0x7fffffffd970*x** 1)
      [10753, x**2 - 3310],
eqmod (inp_poly**2) (L0x7fffffffd980*x** 0+L0x7fffffffd990*x** 1)
      [10753, x**2 - 7443],
eqmod (inp_poly**2) (L0x7fffffffd962*x** 0+L0x7fffffffd972*x** 1)
      [10753, x**2 - 2056],
eqmod (inp_poly**2) (L0x7fffffffd982*x** 0+L0x7fffffffd992*x** 1)
      [10753, x**2 - 8697],
eqmod (inp_poly**2) (L0x7fffffffd964*x** 0+L0x7fffffffd974*x** 1)
      [10753, x**2 - 8716],
eqmod (inp_poly**2) (L0x7fffffffd984*x** 0+L0x7fffffffd994*x** 1)
      [10753, x**2 - 2037],
eqmod (inp_poly**2) (L0x7fffffffd966*x** 0+L0x7fffffffd976*x** 1)
      [10753, x**2 - 4043],
eqmod (inp_poly**2) (L0x7fffffffd986*x** 0+L0x7fffffffd996*x** 1)
      [10753, x**2 - 6710],
eqmod (inp_poly**2) (L0x7fffffffd968*x** 0+L0x7fffffffd978*x** 1)
      [10753, x**2 - 2670],
eqmod (inp_poly**2) (L0x7fffffffd988*x** 0+L0x7fffffffd998*x** 1)
      [10753, x**2 - 8083],
eqmod (inp_poly**2) (L0x7fffffffd96a*x** 0+L0x7fffffffd97a*x** 1)
      [10753, x**2 - 3965],
eqmod (inp_poly**2) (L0x7fffffffd98a*x** 0+L0x7fffffffd99a*x** 1)
      [10753, x**2 - 6788],
eqmod (inp_poly**2) (L0x7fffffffd96c*x** 0+L0x7fffffffd97c*x** 1)
      [10753, x**2 - 7583],
eqmod (inp_poly**2) (L0x7fffffffd98c*x** 0+L0x7fffffffd99c*x** 1)
      [10753, x**2 - 3170],
eqmod (inp_poly**2) (L0x7fffffffd96e*x** 0+L0x7fffffffd97e*x** 1)
      [10753, x**2 - 3911],
eqmod (inp_poly**2) (L0x7fffffffd98e*x** 0+L0x7fffffffd99e*x** 1)
      [10753, x**2 - 6842],
eqmod (inp_poly**2) (L0x7fffffffd9a0*x** 0+L0x7fffffffd9b0*x** 1)
      [10753, x**2 - 2425],
eqmod (inp_poly**2) (L0x7fffffffd9c0*x** 0+L0x7fffffffd9d0*x** 1)
      [10753, x**2 - 8328],
eqmod (inp_poly**2) (L0x7fffffffd9a2*x** 0+L0x7fffffffd9b2*x** 1)
      [10753, x**2 - 6964],
eqmod (inp_poly**2) (L0x7fffffffd9c2*x** 0+L0x7fffffffd9d2*x** 1)
      [10753, x**2 - 3789],
eqmod (inp_poly**2) (L0x7fffffffd9a4*x** 0+L0x7fffffffd9b4*x** 1)
      [10753, x**2 - 4209],
eqmod (inp_poly**2) (L0x7fffffffd9c4*x** 0+L0x7fffffffd9d4*x** 1)
      [10753, x**2 - 6544],
eqmod (inp_poly**2) (L0x7fffffffd9a6*x** 0+L0x7fffffffd9b6*x** 1)
      [10753, x**2 - 9573],
eqmod (inp_poly**2) (L0x7fffffffd9c6*x** 0+L0x7fffffffd9d6*x** 1)
      [10753, x**2 - 1180],
eqmod (inp_poly**2) (L0x7fffffffd9a8*x** 0+L0x7fffffffd9b8*x** 1)
      [10753, x**2 - 5822],
eqmod (inp_poly**2) (L0x7fffffffd9c8*x** 0+L0x7fffffffd9d8*x** 1)
      [10753, x**2 - 4931],
eqmod (inp_poly**2) (L0x7fffffffd9aa*x** 0+L0x7fffffffd9ba*x** 1)
      [10753, x**2 - 5585],
eqmod (inp_poly**2) (L0x7fffffffd9ca*x** 0+L0x7fffffffd9da*x** 1)
      [10753, x**2 - 5168],
eqmod (inp_poly**2) (L0x7fffffffd9ac*x** 0+L0x7fffffffd9bc*x** 1)
      [10753, x**2 - 8593],
eqmod (inp_poly**2) (L0x7fffffffd9cc*x** 0+L0x7fffffffd9dc*x** 1)
      [10753, x**2 - 2160],
eqmod (inp_poly**2) (L0x7fffffffd9ae*x** 0+L0x7fffffffd9be*x** 1)
      [10753, x**2 - 7787],
eqmod (inp_poly**2) (L0x7fffffffd9ce*x** 0+L0x7fffffffd9de*x** 1)
      [10753, x**2 - 2966]
,
eqmod (inp_poly**2) (L0x7fffffffd9e0*x** 0+L0x7fffffffd9f0*x** 1)
      [10753, x**2 - 10463],
eqmod (inp_poly**2) (L0x7fffffffda00*x** 0+L0x7fffffffda10*x** 1)
      [10753, x**2 - 290],
eqmod (inp_poly**2) (L0x7fffffffd9e2*x** 0+L0x7fffffffd9f2*x** 1)
      [10753, x**2 - 697],
eqmod (inp_poly**2) (L0x7fffffffda02*x** 0+L0x7fffffffda12*x** 1)
      [10753, x**2 - 10056],
eqmod (inp_poly**2) (L0x7fffffffd9e4*x** 0+L0x7fffffffd9f4*x** 1)
      [10753, x**2 - 3687],
eqmod (inp_poly**2) (L0x7fffffffda04*x** 0+L0x7fffffffda14*x** 1)
      [10753, x**2 - 7066],
eqmod (inp_poly**2) (L0x7fffffffd9e6*x** 0+L0x7fffffffd9f6*x** 1)
      [10753, x**2 - 8677],
eqmod (inp_poly**2) (L0x7fffffffda06*x** 0+L0x7fffffffda16*x** 1)
      [10753, x**2 - 2076],
eqmod (inp_poly**2) (L0x7fffffffd9e8*x** 0+L0x7fffffffd9f8*x** 1)
      [10753, x**2 - 7108],
eqmod (inp_poly**2) (L0x7fffffffda08*x** 0+L0x7fffffffda18*x** 1)
      [10753, x**2 - 3645],
eqmod (inp_poly**2) (L0x7fffffffd9ea*x** 0+L0x7fffffffd9fa*x** 1)
      [10753, x**2 - 7092],
eqmod (inp_poly**2) (L0x7fffffffda0a*x** 0+L0x7fffffffda1a*x** 1)
      [10753, x**2 - 3661],
eqmod (inp_poly**2) (L0x7fffffffd9ec*x** 0+L0x7fffffffd9fc*x** 1)
      [10753, x**2 - 2032],
eqmod (inp_poly**2) (L0x7fffffffda0c*x** 0+L0x7fffffffda1c*x** 1)
      [10753, x**2 - 8721],
eqmod (inp_poly**2) (L0x7fffffffd9ee*x** 0+L0x7fffffffd9fe*x** 1)
      [10753, x**2 - 7649],
eqmod (inp_poly**2) (L0x7fffffffda0e*x** 0+L0x7fffffffda1e*x** 1)
      [10753, x**2 - 3104],
eqmod (inp_poly**2) (L0x7fffffffda20*x** 0+L0x7fffffffda30*x** 1)
      [10753, x**2 - 9436],
eqmod (inp_poly**2) (L0x7fffffffda40*x** 0+L0x7fffffffda50*x** 1)
      [10753, x**2 - 1317],
eqmod (inp_poly**2) (L0x7fffffffda22*x** 0+L0x7fffffffda32*x** 1)
      [10753, x**2 - 8616],
eqmod (inp_poly**2) (L0x7fffffffda42*x** 0+L0x7fffffffda52*x** 1)
      [10753, x**2 - 2137],
eqmod (inp_poly**2) (L0x7fffffffda24*x** 0+L0x7fffffffda34*x** 1)
      [10753, x**2 - 7363],
eqmod (inp_poly**2) (L0x7fffffffda44*x** 0+L0x7fffffffda54*x** 1)
      [10753, x**2 - 3390],
eqmod (inp_poly**2) (L0x7fffffffda26*x** 0+L0x7fffffffda36*x** 1)
      [10753, x**2 - 2215],
eqmod (inp_poly**2) (L0x7fffffffda46*x** 0+L0x7fffffffda56*x** 1)
      [10753, x**2 - 8538],
eqmod (inp_poly**2) (L0x7fffffffda28*x** 0+L0x7fffffffda38*x** 1)
      [10753, x**2 - 8846],
eqmod (inp_poly**2) (L0x7fffffffda48*x** 0+L0x7fffffffda58*x** 1)
      [10753, x**2 - 1907],
eqmod (inp_poly**2) (L0x7fffffffda2a*x** 0+L0x7fffffffda3a*x** 1)
      [10753, x**2 - 1135],
eqmod (inp_poly**2) (L0x7fffffffda4a*x** 0+L0x7fffffffda5a*x** 1)
      [10753, x**2 - 9618],
eqmod (inp_poly**2) (L0x7fffffffda2c*x** 0+L0x7fffffffda3c*x** 1)
      [10753, x**2 - 774],
eqmod (inp_poly**2) (L0x7fffffffda4c*x** 0+L0x7fffffffda5c*x** 1)
      [10753, x**2 - 9979],
eqmod (inp_poly**2) (L0x7fffffffda2e*x** 0+L0x7fffffffda3e*x** 1)
      [10753, x**2 - 9486],
eqmod (inp_poly**2) (L0x7fffffffda4e*x** 0+L0x7fffffffda5e*x** 1)
      [10753, x**2 - 1267],
eqmod (inp_poly**2) (L0x7fffffffda60*x** 0+L0x7fffffffda70*x** 1)
      [10753, x**2 - 2266],
eqmod (inp_poly**2) (L0x7fffffffda80*x** 0+L0x7fffffffda90*x** 1)
      [10753, x**2 - 8487],
eqmod (inp_poly**2) (L0x7fffffffda62*x** 0+L0x7fffffffda72*x** 1)
      [10753, x**2 - 264],
eqmod (inp_poly**2) (L0x7fffffffda82*x** 0+L0x7fffffffda92*x** 1)
      [10753, x**2 - 10489],
eqmod (inp_poly**2) (L0x7fffffffda64*x** 0+L0x7fffffffda74*x** 1)
      [10753, x**2 - 6935],
eqmod (inp_poly**2) (L0x7fffffffda84*x** 0+L0x7fffffffda94*x** 1)
      [10753, x**2 - 3818],
eqmod (inp_poly**2) (L0x7fffffffda66*x** 0+L0x7fffffffda76*x** 1)
      [10753, x**2 - 9473],
eqmod (inp_poly**2) (L0x7fffffffda86*x** 0+L0x7fffffffda96*x** 1)
      [10753, x**2 - 1280],
eqmod (inp_poly**2) (L0x7fffffffda68*x** 0+L0x7fffffffda78*x** 1)
      [10753, x**2 - 301],
eqmod (inp_poly**2) (L0x7fffffffda88*x** 0+L0x7fffffffda98*x** 1)
      [10753, x**2 - 10452],
eqmod (inp_poly**2) (L0x7fffffffda6a*x** 0+L0x7fffffffda7a*x** 1)
      [10753, x**2 - 3689],
eqmod (inp_poly**2) (L0x7fffffffda8a*x** 0+L0x7fffffffda9a*x** 1)
      [10753, x**2 - 7064],
eqmod (inp_poly**2) (L0x7fffffffda6c*x** 0+L0x7fffffffda7c*x** 1)
      [10753, x**2 - 10597],
eqmod (inp_poly**2) (L0x7fffffffda8c*x** 0+L0x7fffffffda9c*x** 1)
      [10753, x**2 - 156],
eqmod (inp_poly**2) (L0x7fffffffda6e*x** 0+L0x7fffffffda7e*x** 1)
      [10753, x**2 - 1339],
eqmod (inp_poly**2) (L0x7fffffffda8e*x** 0+L0x7fffffffda9e*x** 1)
      [10753, x**2 - 9414],
eqmod (inp_poly**2) (L0x7fffffffdaa0*x** 0+L0x7fffffffdab0*x** 1)
      [10753, x**2 - 1985],
eqmod (inp_poly**2) (L0x7fffffffdac0*x** 0+L0x7fffffffdad0*x** 1)
      [10753, x**2 - 8768],
eqmod (inp_poly**2) (L0x7fffffffdaa2*x** 0+L0x7fffffffdab2*x** 1)
      [10753, x**2 - 3572],
eqmod (inp_poly**2) (L0x7fffffffdac2*x** 0+L0x7fffffffdad2*x** 1)
      [10753, x**2 - 7181],
eqmod (inp_poly**2) (L0x7fffffffdaa4*x** 0+L0x7fffffffdab4*x** 1)
      [10753, x**2 - 2758],
eqmod (inp_poly**2) (L0x7fffffffdac4*x** 0+L0x7fffffffdad4*x** 1)
      [10753, x**2 - 7995],
eqmod (inp_poly**2) (L0x7fffffffdaa6*x** 0+L0x7fffffffdab6*x** 1)
      [10753, x**2 - 6794],
eqmod (inp_poly**2) (L0x7fffffffdac6*x** 0+L0x7fffffffdad6*x** 1)
      [10753, x**2 - 3959],
eqmod (inp_poly**2) (L0x7fffffffdaa8*x** 0+L0x7fffffffdab8*x** 1)
      [10753, x**2 - 3258],
eqmod (inp_poly**2) (L0x7fffffffdac8*x** 0+L0x7fffffffdad8*x** 1)
      [10753, x**2 - 7495],
eqmod (inp_poly**2) (L0x7fffffffdaaa*x** 0+L0x7fffffffdaba*x** 1)
      [10753, x**2 - 9671],
eqmod (inp_poly**2) (L0x7fffffffdaca*x** 0+L0x7fffffffdada*x** 1)
      [10753, x**2 - 1082],
eqmod (inp_poly**2) (L0x7fffffffdaac*x** 0+L0x7fffffffdabc*x** 1)
      [10753, x**2 - 2777],
eqmod (inp_poly**2) (L0x7fffffffdacc*x** 0+L0x7fffffffdadc*x** 1)
      [10753, x**2 - 7976],
eqmod (inp_poly**2) (L0x7fffffffdaae*x** 0+L0x7fffffffdabe*x** 1)
      [10753, x**2 - 7527],
eqmod (inp_poly**2) (L0x7fffffffdace*x** 0+L0x7fffffffdade*x** 1)
      [10753, x**2 - 3226]
] prove with [ cuts [ 145, 147, 149, 151, 153, 155, 157, 159 ] ]
&& and [
(-28323)@16<=s L0x7fffffffd2e0,L0x7fffffffd2e0<=s 28323@16,
(-28323)@16<=s L0x7fffffffd2f0,L0x7fffffffd2f0<=s 28323@16,
(-28323)@16<=s L0x7fffffffd300,L0x7fffffffd300<=s 28323@16,
(-28323)@16<=s L0x7fffffffd310,L0x7fffffffd310<=s 28323@16,
(-28139)@16<=s L0x7fffffffd2e2,L0x7fffffffd2e2<=s 28139@16,
(-28139)@16<=s L0x7fffffffd2f2,L0x7fffffffd2f2<=s 28139@16,
(-28139)@16<=s L0x7fffffffd302,L0x7fffffffd302<=s 28139@16,
(-28139)@16<=s L0x7fffffffd312,L0x7fffffffd312<=s 28139@16,
(-29243)@16<=s L0x7fffffffd2e4,L0x7fffffffd2e4<=s 29243@16,
(-29243)@16<=s L0x7fffffffd2f4,L0x7fffffffd2f4<=s 29243@16,
(-29243)@16<=s L0x7fffffffd304,L0x7fffffffd304<=s 29243@16,
(-29243)@16<=s L0x7fffffffd314,L0x7fffffffd314<=s 29243@16,
(-29090)@16<=s L0x7fffffffd2e6,L0x7fffffffd2e6<=s 29090@16,
(-29090)@16<=s L0x7fffffffd2f6,L0x7fffffffd2f6<=s 29090@16,
(-29090)@16<=s L0x7fffffffd306,L0x7fffffffd306<=s 29090@16,
(-29090)@16<=s L0x7fffffffd316,L0x7fffffffd316<=s 29090@16,
(-29576)@16<=s L0x7fffffffd2e8,L0x7fffffffd2e8<=s 29576@16,
(-29576)@16<=s L0x7fffffffd2f8,L0x7fffffffd2f8<=s 29576@16,
(-29576)@16<=s L0x7fffffffd308,L0x7fffffffd308<=s 29576@16,
(-29576)@16<=s L0x7fffffffd318,L0x7fffffffd318<=s 29576@16,
(-30023)@16<=s L0x7fffffffd2ea,L0x7fffffffd2ea<=s 30023@16,
(-30023)@16<=s L0x7fffffffd2fa,L0x7fffffffd2fa<=s 30023@16,
(-30023)@16<=s L0x7fffffffd30a,L0x7fffffffd30a<=s 30023@16,
(-30023)@16<=s L0x7fffffffd31a,L0x7fffffffd31a<=s 30023@16,
(-28819)@16<=s L0x7fffffffd2ec,L0x7fffffffd2ec<=s 28819@16,
(-28819)@16<=s L0x7fffffffd2fc,L0x7fffffffd2fc<=s 28819@16,
(-28819)@16<=s L0x7fffffffd30c,L0x7fffffffd30c<=s 28819@16,
(-28819)@16<=s L0x7fffffffd31c,L0x7fffffffd31c<=s 28819@16,
(-28825)@16<=s L0x7fffffffd2ee,L0x7fffffffd2ee<=s 28825@16,
(-28825)@16<=s L0x7fffffffd2fe,L0x7fffffffd2fe<=s 28825@16,
(-28825)@16<=s L0x7fffffffd30e,L0x7fffffffd30e<=s 28825@16,
(-28825)@16<=s L0x7fffffffd31e,L0x7fffffffd31e<=s 28825@16,
(-29557)@16<=s L0x7fffffffd320,L0x7fffffffd320<=s 29557@16,
(-29557)@16<=s L0x7fffffffd330,L0x7fffffffd330<=s 29557@16,
(-29557)@16<=s L0x7fffffffd340,L0x7fffffffd340<=s 29557@16,
(-29557)@16<=s L0x7fffffffd350,L0x7fffffffd350<=s 29557@16,
(-28853)@16<=s L0x7fffffffd322,L0x7fffffffd322<=s 28853@16,
(-28853)@16<=s L0x7fffffffd332,L0x7fffffffd332<=s 28853@16,
(-28853)@16<=s L0x7fffffffd342,L0x7fffffffd342<=s 28853@16,
(-28853)@16<=s L0x7fffffffd352,L0x7fffffffd352<=s 28853@16,
(-30636)@16<=s L0x7fffffffd324,L0x7fffffffd324<=s 30636@16,
(-30636)@16<=s L0x7fffffffd334,L0x7fffffffd334<=s 30636@16,
(-30636)@16<=s L0x7fffffffd344,L0x7fffffffd344<=s 30636@16,
(-30636)@16<=s L0x7fffffffd354,L0x7fffffffd354<=s 30636@16,
(-29728)@16<=s L0x7fffffffd326,L0x7fffffffd326<=s 29728@16,
(-29728)@16<=s L0x7fffffffd336,L0x7fffffffd336<=s 29728@16,
(-29728)@16<=s L0x7fffffffd346,L0x7fffffffd346<=s 29728@16,
(-29728)@16<=s L0x7fffffffd356,L0x7fffffffd356<=s 29728@16,
(-28214)@16<=s L0x7fffffffd328,L0x7fffffffd328<=s 28214@16,
(-28214)@16<=s L0x7fffffffd338,L0x7fffffffd338<=s 28214@16,
(-28214)@16<=s L0x7fffffffd348,L0x7fffffffd348<=s 28214@16,
(-28214)@16<=s L0x7fffffffd358,L0x7fffffffd358<=s 28214@16,
(-29618)@16<=s L0x7fffffffd32a,L0x7fffffffd32a<=s 29618@16,
(-29618)@16<=s L0x7fffffffd33a,L0x7fffffffd33a<=s 29618@16,
(-29618)@16<=s L0x7fffffffd34a,L0x7fffffffd34a<=s 29618@16,
(-29618)@16<=s L0x7fffffffd35a,L0x7fffffffd35a<=s 29618@16,
(-29205)@16<=s L0x7fffffffd32c,L0x7fffffffd32c<=s 29205@16,
(-29205)@16<=s L0x7fffffffd33c,L0x7fffffffd33c<=s 29205@16,
(-29205)@16<=s L0x7fffffffd34c,L0x7fffffffd34c<=s 29205@16,
(-29205)@16<=s L0x7fffffffd35c,L0x7fffffffd35c<=s 29205@16,
(-29399)@16<=s L0x7fffffffd32e,L0x7fffffffd32e<=s 29399@16,
(-29399)@16<=s L0x7fffffffd33e,L0x7fffffffd33e<=s 29399@16,
(-29399)@16<=s L0x7fffffffd34e,L0x7fffffffd34e<=s 29399@16,
(-29399)@16<=s L0x7fffffffd35e,L0x7fffffffd35e<=s 29399@16,
(-24765)@16<=s L0x7fffffffd360,L0x7fffffffd360<=s 24765@16,
(-24765)@16<=s L0x7fffffffd370,L0x7fffffffd370<=s 24765@16,
(-24765)@16<=s L0x7fffffffd380,L0x7fffffffd380<=s 24765@16,
(-24765)@16<=s L0x7fffffffd390,L0x7fffffffd390<=s 24765@16,
(-23847)@16<=s L0x7fffffffd362,L0x7fffffffd362<=s 23847@16,
(-23847)@16<=s L0x7fffffffd372,L0x7fffffffd372<=s 23847@16,
(-23847)@16<=s L0x7fffffffd382,L0x7fffffffd382<=s 23847@16,
(-23847)@16<=s L0x7fffffffd392,L0x7fffffffd392<=s 23847@16,
(-24454)@16<=s L0x7fffffffd364,L0x7fffffffd364<=s 24454@16,
(-24454)@16<=s L0x7fffffffd374,L0x7fffffffd374<=s 24454@16,
(-24454)@16<=s L0x7fffffffd384,L0x7fffffffd384<=s 24454@16,
(-24454)@16<=s L0x7fffffffd394,L0x7fffffffd394<=s 24454@16,
(-24176)@16<=s L0x7fffffffd366,L0x7fffffffd366<=s 24176@16,
(-24176)@16<=s L0x7fffffffd376,L0x7fffffffd376<=s 24176@16,
(-24176)@16<=s L0x7fffffffd386,L0x7fffffffd386<=s 24176@16,
(-24176)@16<=s L0x7fffffffd396,L0x7fffffffd396<=s 24176@16,
(-25150)@16<=s L0x7fffffffd368,L0x7fffffffd368<=s 25150@16,
(-25150)@16<=s L0x7fffffffd378,L0x7fffffffd378<=s 25150@16,
(-25150)@16<=s L0x7fffffffd388,L0x7fffffffd388<=s 25150@16,
(-25150)@16<=s L0x7fffffffd398,L0x7fffffffd398<=s 25150@16,
(-24695)@16<=s L0x7fffffffd36a,L0x7fffffffd36a<=s 24695@16,
(-24695)@16<=s L0x7fffffffd37a,L0x7fffffffd37a<=s 24695@16,
(-24695)@16<=s L0x7fffffffd38a,L0x7fffffffd38a<=s 24695@16,
(-24695)@16<=s L0x7fffffffd39a,L0x7fffffffd39a<=s 24695@16,
(-24780)@16<=s L0x7fffffffd36c,L0x7fffffffd36c<=s 24780@16,
(-24780)@16<=s L0x7fffffffd37c,L0x7fffffffd37c<=s 24780@16,
(-24780)@16<=s L0x7fffffffd38c,L0x7fffffffd38c<=s 24780@16,
(-24780)@16<=s L0x7fffffffd39c,L0x7fffffffd39c<=s 24780@16,
(-25148)@16<=s L0x7fffffffd36e,L0x7fffffffd36e<=s 25148@16,
(-25148)@16<=s L0x7fffffffd37e,L0x7fffffffd37e<=s 25148@16,
(-25148)@16<=s L0x7fffffffd38e,L0x7fffffffd38e<=s 25148@16,
(-25148)@16<=s L0x7fffffffd39e,L0x7fffffffd39e<=s 25148@16,
(-22605)@16<=s L0x7fffffffd3a0,L0x7fffffffd3a0<=s 22605@16,
(-22605)@16<=s L0x7fffffffd3b0,L0x7fffffffd3b0<=s 22605@16,
(-22605)@16<=s L0x7fffffffd3c0,L0x7fffffffd3c0<=s 22605@16,
(-22605)@16<=s L0x7fffffffd3d0,L0x7fffffffd3d0<=s 22605@16,
(-22477)@16<=s L0x7fffffffd3a2,L0x7fffffffd3a2<=s 22477@16,
(-22477)@16<=s L0x7fffffffd3b2,L0x7fffffffd3b2<=s 22477@16,
(-22477)@16<=s L0x7fffffffd3c2,L0x7fffffffd3c2<=s 22477@16,
(-22477)@16<=s L0x7fffffffd3d2,L0x7fffffffd3d2<=s 22477@16,
(-23828)@16<=s L0x7fffffffd3a4,L0x7fffffffd3a4<=s 23828@16,
(-23828)@16<=s L0x7fffffffd3b4,L0x7fffffffd3b4<=s 23828@16,
(-23828)@16<=s L0x7fffffffd3c4,L0x7fffffffd3c4<=s 23828@16,
(-23828)@16<=s L0x7fffffffd3d4,L0x7fffffffd3d4<=s 23828@16,
(-22907)@16<=s L0x7fffffffd3a6,L0x7fffffffd3a6<=s 22907@16,
(-22907)@16<=s L0x7fffffffd3b6,L0x7fffffffd3b6<=s 22907@16,
(-22907)@16<=s L0x7fffffffd3c6,L0x7fffffffd3c6<=s 22907@16,
(-22907)@16<=s L0x7fffffffd3d6,L0x7fffffffd3d6<=s 22907@16,
(-23672)@16<=s L0x7fffffffd3a8,L0x7fffffffd3a8<=s 23672@16,
(-23672)@16<=s L0x7fffffffd3b8,L0x7fffffffd3b8<=s 23672@16,
(-23672)@16<=s L0x7fffffffd3c8,L0x7fffffffd3c8<=s 23672@16,
(-23672)@16<=s L0x7fffffffd3d8,L0x7fffffffd3d8<=s 23672@16,
(-23955)@16<=s L0x7fffffffd3aa,L0x7fffffffd3aa<=s 23955@16,
(-23955)@16<=s L0x7fffffffd3ba,L0x7fffffffd3ba<=s 23955@16,
(-23955)@16<=s L0x7fffffffd3ca,L0x7fffffffd3ca<=s 23955@16,
(-23955)@16<=s L0x7fffffffd3da,L0x7fffffffd3da<=s 23955@16,
(-23383)@16<=s L0x7fffffffd3ac,L0x7fffffffd3ac<=s 23383@16,
(-23383)@16<=s L0x7fffffffd3bc,L0x7fffffffd3bc<=s 23383@16,
(-23383)@16<=s L0x7fffffffd3cc,L0x7fffffffd3cc<=s 23383@16,
(-23383)@16<=s L0x7fffffffd3dc,L0x7fffffffd3dc<=s 23383@16,
(-24060)@16<=s L0x7fffffffd3ae,L0x7fffffffd3ae<=s 24060@16,
(-24060)@16<=s L0x7fffffffd3be,L0x7fffffffd3be<=s 24060@16,
(-24060)@16<=s L0x7fffffffd3ce,L0x7fffffffd3ce<=s 24060@16,
(-24060)@16<=s L0x7fffffffd3de,L0x7fffffffd3de<=s 24060@16
,
(-24528)@16<=s L0x7fffffffd3e0,L0x7fffffffd3e0<=s 24528@16,
(-24528)@16<=s L0x7fffffffd3f0,L0x7fffffffd3f0<=s 24528@16,
(-24528)@16<=s L0x7fffffffd400,L0x7fffffffd400<=s 24528@16,
(-24528)@16<=s L0x7fffffffd410,L0x7fffffffd410<=s 24528@16,
(-24801)@16<=s L0x7fffffffd3e2,L0x7fffffffd3e2<=s 24801@16,
(-24801)@16<=s L0x7fffffffd3f2,L0x7fffffffd3f2<=s 24801@16,
(-24801)@16<=s L0x7fffffffd402,L0x7fffffffd402<=s 24801@16,
(-24801)@16<=s L0x7fffffffd412,L0x7fffffffd412<=s 24801@16,
(-23858)@16<=s L0x7fffffffd3e4,L0x7fffffffd3e4<=s 23858@16,
(-23858)@16<=s L0x7fffffffd3f4,L0x7fffffffd3f4<=s 23858@16,
(-23858)@16<=s L0x7fffffffd404,L0x7fffffffd404<=s 23858@16,
(-23858)@16<=s L0x7fffffffd414,L0x7fffffffd414<=s 23858@16,
(-23824)@16<=s L0x7fffffffd3e6,L0x7fffffffd3e6<=s 23824@16,
(-23824)@16<=s L0x7fffffffd3f6,L0x7fffffffd3f6<=s 23824@16,
(-23824)@16<=s L0x7fffffffd406,L0x7fffffffd406<=s 23824@16,
(-23824)@16<=s L0x7fffffffd416,L0x7fffffffd416<=s 23824@16,
(-22916)@16<=s L0x7fffffffd3e8,L0x7fffffffd3e8<=s 22916@16,
(-22916)@16<=s L0x7fffffffd3f8,L0x7fffffffd3f8<=s 22916@16,
(-22916)@16<=s L0x7fffffffd408,L0x7fffffffd408<=s 22916@16,
(-22916)@16<=s L0x7fffffffd418,L0x7fffffffd418<=s 22916@16,
(-23187)@16<=s L0x7fffffffd3ea,L0x7fffffffd3ea<=s 23187@16,
(-23187)@16<=s L0x7fffffffd3fa,L0x7fffffffd3fa<=s 23187@16,
(-23187)@16<=s L0x7fffffffd40a,L0x7fffffffd40a<=s 23187@16,
(-23187)@16<=s L0x7fffffffd41a,L0x7fffffffd41a<=s 23187@16,
(-22710)@16<=s L0x7fffffffd3ec,L0x7fffffffd3ec<=s 22710@16,
(-22710)@16<=s L0x7fffffffd3fc,L0x7fffffffd3fc<=s 22710@16,
(-22710)@16<=s L0x7fffffffd40c,L0x7fffffffd40c<=s 22710@16,
(-22710)@16<=s L0x7fffffffd41c,L0x7fffffffd41c<=s 22710@16,
(-23632)@16<=s L0x7fffffffd3ee,L0x7fffffffd3ee<=s 23632@16,
(-23632)@16<=s L0x7fffffffd3fe,L0x7fffffffd3fe<=s 23632@16,
(-23632)@16<=s L0x7fffffffd40e,L0x7fffffffd40e<=s 23632@16,
(-23632)@16<=s L0x7fffffffd41e,L0x7fffffffd41e<=s 23632@16,
(-24981)@16<=s L0x7fffffffd420,L0x7fffffffd420<=s 24981@16,
(-24981)@16<=s L0x7fffffffd430,L0x7fffffffd430<=s 24981@16,
(-24981)@16<=s L0x7fffffffd440,L0x7fffffffd440<=s 24981@16,
(-24981)@16<=s L0x7fffffffd450,L0x7fffffffd450<=s 24981@16,
(-24482)@16<=s L0x7fffffffd422,L0x7fffffffd422<=s 24482@16,
(-24482)@16<=s L0x7fffffffd432,L0x7fffffffd432<=s 24482@16,
(-24482)@16<=s L0x7fffffffd442,L0x7fffffffd442<=s 24482@16,
(-24482)@16<=s L0x7fffffffd452,L0x7fffffffd452<=s 24482@16,
(-23885)@16<=s L0x7fffffffd424,L0x7fffffffd424<=s 23885@16,
(-23885)@16<=s L0x7fffffffd434,L0x7fffffffd434<=s 23885@16,
(-23885)@16<=s L0x7fffffffd444,L0x7fffffffd444<=s 23885@16,
(-23885)@16<=s L0x7fffffffd454,L0x7fffffffd454<=s 23885@16,
(-25070)@16<=s L0x7fffffffd426,L0x7fffffffd426<=s 25070@16,
(-25070)@16<=s L0x7fffffffd436,L0x7fffffffd436<=s 25070@16,
(-25070)@16<=s L0x7fffffffd446,L0x7fffffffd446<=s 25070@16,
(-25070)@16<=s L0x7fffffffd456,L0x7fffffffd456<=s 25070@16,
(-23787)@16<=s L0x7fffffffd428,L0x7fffffffd428<=s 23787@16,
(-23787)@16<=s L0x7fffffffd438,L0x7fffffffd438<=s 23787@16,
(-23787)@16<=s L0x7fffffffd448,L0x7fffffffd448<=s 23787@16,
(-23787)@16<=s L0x7fffffffd458,L0x7fffffffd458<=s 23787@16,
(-23686)@16<=s L0x7fffffffd42a,L0x7fffffffd42a<=s 23686@16,
(-23686)@16<=s L0x7fffffffd43a,L0x7fffffffd43a<=s 23686@16,
(-23686)@16<=s L0x7fffffffd44a,L0x7fffffffd44a<=s 23686@16,
(-23686)@16<=s L0x7fffffffd45a,L0x7fffffffd45a<=s 23686@16,
(-24621)@16<=s L0x7fffffffd42c,L0x7fffffffd42c<=s 24621@16,
(-24621)@16<=s L0x7fffffffd43c,L0x7fffffffd43c<=s 24621@16,
(-24621)@16<=s L0x7fffffffd44c,L0x7fffffffd44c<=s 24621@16,
(-24621)@16<=s L0x7fffffffd45c,L0x7fffffffd45c<=s 24621@16,
(-23415)@16<=s L0x7fffffffd42e,L0x7fffffffd42e<=s 23415@16,
(-23415)@16<=s L0x7fffffffd43e,L0x7fffffffd43e<=s 23415@16,
(-23415)@16<=s L0x7fffffffd44e,L0x7fffffffd44e<=s 23415@16,
(-23415)@16<=s L0x7fffffffd45e,L0x7fffffffd45e<=s 23415@16,
(-23255)@16<=s L0x7fffffffd460,L0x7fffffffd460<=s 23255@16,
(-23255)@16<=s L0x7fffffffd470,L0x7fffffffd470<=s 23255@16,
(-23255)@16<=s L0x7fffffffd480,L0x7fffffffd480<=s 23255@16,
(-23255)@16<=s L0x7fffffffd490,L0x7fffffffd490<=s 23255@16,
(-23413)@16<=s L0x7fffffffd462,L0x7fffffffd462<=s 23413@16,
(-23413)@16<=s L0x7fffffffd472,L0x7fffffffd472<=s 23413@16,
(-23413)@16<=s L0x7fffffffd482,L0x7fffffffd482<=s 23413@16,
(-23413)@16<=s L0x7fffffffd492,L0x7fffffffd492<=s 23413@16,
(-23347)@16<=s L0x7fffffffd464,L0x7fffffffd464<=s 23347@16,
(-23347)@16<=s L0x7fffffffd474,L0x7fffffffd474<=s 23347@16,
(-23347)@16<=s L0x7fffffffd484,L0x7fffffffd484<=s 23347@16,
(-23347)@16<=s L0x7fffffffd494,L0x7fffffffd494<=s 23347@16,
(-23334)@16<=s L0x7fffffffd466,L0x7fffffffd466<=s 23334@16,
(-23334)@16<=s L0x7fffffffd476,L0x7fffffffd476<=s 23334@16,
(-23334)@16<=s L0x7fffffffd486,L0x7fffffffd486<=s 23334@16,
(-23334)@16<=s L0x7fffffffd496,L0x7fffffffd496<=s 23334@16,
(-25056)@16<=s L0x7fffffffd468,L0x7fffffffd468<=s 25056@16,
(-25056)@16<=s L0x7fffffffd478,L0x7fffffffd478<=s 25056@16,
(-25056)@16<=s L0x7fffffffd488,L0x7fffffffd488<=s 25056@16,
(-25056)@16<=s L0x7fffffffd498,L0x7fffffffd498<=s 25056@16,
(-25090)@16<=s L0x7fffffffd46a,L0x7fffffffd46a<=s 25090@16,
(-25090)@16<=s L0x7fffffffd47a,L0x7fffffffd47a<=s 25090@16,
(-25090)@16<=s L0x7fffffffd48a,L0x7fffffffd48a<=s 25090@16,
(-25090)@16<=s L0x7fffffffd49a,L0x7fffffffd49a<=s 25090@16,
(-23789)@16<=s L0x7fffffffd46c,L0x7fffffffd46c<=s 23789@16,
(-23789)@16<=s L0x7fffffffd47c,L0x7fffffffd47c<=s 23789@16,
(-23789)@16<=s L0x7fffffffd48c,L0x7fffffffd48c<=s 23789@16,
(-23789)@16<=s L0x7fffffffd49c,L0x7fffffffd49c<=s 23789@16,
(-24760)@16<=s L0x7fffffffd46e,L0x7fffffffd46e<=s 24760@16,
(-24760)@16<=s L0x7fffffffd47e,L0x7fffffffd47e<=s 24760@16,
(-24760)@16<=s L0x7fffffffd48e,L0x7fffffffd48e<=s 24760@16,
(-24760)@16<=s L0x7fffffffd49e,L0x7fffffffd49e<=s 24760@16,
(-24451)@16<=s L0x7fffffffd4a0,L0x7fffffffd4a0<=s 24451@16,
(-24451)@16<=s L0x7fffffffd4b0,L0x7fffffffd4b0<=s 24451@16,
(-24451)@16<=s L0x7fffffffd4c0,L0x7fffffffd4c0<=s 24451@16,
(-24451)@16<=s L0x7fffffffd4d0,L0x7fffffffd4d0<=s 24451@16,
(-24047)@16<=s L0x7fffffffd4a2,L0x7fffffffd4a2<=s 24047@16,
(-24047)@16<=s L0x7fffffffd4b2,L0x7fffffffd4b2<=s 24047@16,
(-24047)@16<=s L0x7fffffffd4c2,L0x7fffffffd4c2<=s 24047@16,
(-24047)@16<=s L0x7fffffffd4d2,L0x7fffffffd4d2<=s 24047@16,
(-24776)@16<=s L0x7fffffffd4a4,L0x7fffffffd4a4<=s 24776@16,
(-24776)@16<=s L0x7fffffffd4b4,L0x7fffffffd4b4<=s 24776@16,
(-24776)@16<=s L0x7fffffffd4c4,L0x7fffffffd4c4<=s 24776@16,
(-24776)@16<=s L0x7fffffffd4d4,L0x7fffffffd4d4<=s 24776@16,
(-24292)@16<=s L0x7fffffffd4a6,L0x7fffffffd4a6<=s 24292@16,
(-24292)@16<=s L0x7fffffffd4b6,L0x7fffffffd4b6<=s 24292@16,
(-24292)@16<=s L0x7fffffffd4c6,L0x7fffffffd4c6<=s 24292@16,
(-24292)@16<=s L0x7fffffffd4d6,L0x7fffffffd4d6<=s 24292@16,
(-24368)@16<=s L0x7fffffffd4a8,L0x7fffffffd4a8<=s 24368@16,
(-24368)@16<=s L0x7fffffffd4b8,L0x7fffffffd4b8<=s 24368@16,
(-24368)@16<=s L0x7fffffffd4c8,L0x7fffffffd4c8<=s 24368@16,
(-24368)@16<=s L0x7fffffffd4d8,L0x7fffffffd4d8<=s 24368@16,
(-24801)@16<=s L0x7fffffffd4aa,L0x7fffffffd4aa<=s 24801@16,
(-24801)@16<=s L0x7fffffffd4ba,L0x7fffffffd4ba<=s 24801@16,
(-24801)@16<=s L0x7fffffffd4ca,L0x7fffffffd4ca<=s 24801@16,
(-24801)@16<=s L0x7fffffffd4da,L0x7fffffffd4da<=s 24801@16,
(-24470)@16<=s L0x7fffffffd4ac,L0x7fffffffd4ac<=s 24470@16,
(-24470)@16<=s L0x7fffffffd4bc,L0x7fffffffd4bc<=s 24470@16,
(-24470)@16<=s L0x7fffffffd4cc,L0x7fffffffd4cc<=s 24470@16,
(-24470)@16<=s L0x7fffffffd4dc,L0x7fffffffd4dc<=s 24470@16,
(-24317)@16<=s L0x7fffffffd4ae,L0x7fffffffd4ae<=s 24317@16,
(-24317)@16<=s L0x7fffffffd4be,L0x7fffffffd4be<=s 24317@16,
(-24317)@16<=s L0x7fffffffd4ce,L0x7fffffffd4ce<=s 24317@16,
(-24317)@16<=s L0x7fffffffd4de,L0x7fffffffd4de<=s 24317@16
,
(-26003)@16<=s L0x7fffffffd4e0,L0x7fffffffd4e0<=s 26003@16,
(-26003)@16<=s L0x7fffffffd4f0,L0x7fffffffd4f0<=s 26003@16,
(-26003)@16<=s L0x7fffffffd500,L0x7fffffffd500<=s 26003@16,
(-26003)@16<=s L0x7fffffffd510,L0x7fffffffd510<=s 26003@16,
(-24781)@16<=s L0x7fffffffd4e2,L0x7fffffffd4e2<=s 24781@16,
(-24781)@16<=s L0x7fffffffd4f2,L0x7fffffffd4f2<=s 24781@16,
(-24781)@16<=s L0x7fffffffd502,L0x7fffffffd502<=s 24781@16,
(-24781)@16<=s L0x7fffffffd512,L0x7fffffffd512<=s 24781@16,
(-24947)@16<=s L0x7fffffffd4e4,L0x7fffffffd4e4<=s 24947@16,
(-24947)@16<=s L0x7fffffffd4f4,L0x7fffffffd4f4<=s 24947@16,
(-24947)@16<=s L0x7fffffffd504,L0x7fffffffd504<=s 24947@16,
(-24947)@16<=s L0x7fffffffd514,L0x7fffffffd514<=s 24947@16,
(-25667)@16<=s L0x7fffffffd4e6,L0x7fffffffd4e6<=s 25667@16,
(-25667)@16<=s L0x7fffffffd4f6,L0x7fffffffd4f6<=s 25667@16,
(-25667)@16<=s L0x7fffffffd506,L0x7fffffffd506<=s 25667@16,
(-25667)@16<=s L0x7fffffffd516,L0x7fffffffd516<=s 25667@16,
(-24326)@16<=s L0x7fffffffd4e8,L0x7fffffffd4e8<=s 24326@16,
(-24326)@16<=s L0x7fffffffd4f8,L0x7fffffffd4f8<=s 24326@16,
(-24326)@16<=s L0x7fffffffd508,L0x7fffffffd508<=s 24326@16,
(-24326)@16<=s L0x7fffffffd518,L0x7fffffffd518<=s 24326@16,
(-23850)@16<=s L0x7fffffffd4ea,L0x7fffffffd4ea<=s 23850@16,
(-23850)@16<=s L0x7fffffffd4fa,L0x7fffffffd4fa<=s 23850@16,
(-23850)@16<=s L0x7fffffffd50a,L0x7fffffffd50a<=s 23850@16,
(-23850)@16<=s L0x7fffffffd51a,L0x7fffffffd51a<=s 23850@16,
(-23928)@16<=s L0x7fffffffd4ec,L0x7fffffffd4ec<=s 23928@16,
(-23928)@16<=s L0x7fffffffd4fc,L0x7fffffffd4fc<=s 23928@16,
(-23928)@16<=s L0x7fffffffd50c,L0x7fffffffd50c<=s 23928@16,
(-23928)@16<=s L0x7fffffffd51c,L0x7fffffffd51c<=s 23928@16,
(-24467)@16<=s L0x7fffffffd4ee,L0x7fffffffd4ee<=s 24467@16,
(-24467)@16<=s L0x7fffffffd4fe,L0x7fffffffd4fe<=s 24467@16,
(-24467)@16<=s L0x7fffffffd50e,L0x7fffffffd50e<=s 24467@16,
(-24467)@16<=s L0x7fffffffd51e,L0x7fffffffd51e<=s 24467@16,
(-24015)@16<=s L0x7fffffffd520,L0x7fffffffd520<=s 24015@16,
(-24015)@16<=s L0x7fffffffd530,L0x7fffffffd530<=s 24015@16,
(-24015)@16<=s L0x7fffffffd540,L0x7fffffffd540<=s 24015@16,
(-24015)@16<=s L0x7fffffffd550,L0x7fffffffd550<=s 24015@16,
(-24471)@16<=s L0x7fffffffd522,L0x7fffffffd522<=s 24471@16,
(-24471)@16<=s L0x7fffffffd532,L0x7fffffffd532<=s 24471@16,
(-24471)@16<=s L0x7fffffffd542,L0x7fffffffd542<=s 24471@16,
(-24471)@16<=s L0x7fffffffd552,L0x7fffffffd552<=s 24471@16,
(-24483)@16<=s L0x7fffffffd524,L0x7fffffffd524<=s 24483@16,
(-24483)@16<=s L0x7fffffffd534,L0x7fffffffd534<=s 24483@16,
(-24483)@16<=s L0x7fffffffd544,L0x7fffffffd544<=s 24483@16,
(-24483)@16<=s L0x7fffffffd554,L0x7fffffffd554<=s 24483@16,
(-24624)@16<=s L0x7fffffffd526,L0x7fffffffd526<=s 24624@16,
(-24624)@16<=s L0x7fffffffd536,L0x7fffffffd536<=s 24624@16,
(-24624)@16<=s L0x7fffffffd546,L0x7fffffffd546<=s 24624@16,
(-24624)@16<=s L0x7fffffffd556,L0x7fffffffd556<=s 24624@16,
(-23528)@16<=s L0x7fffffffd528,L0x7fffffffd528<=s 23528@16,
(-23528)@16<=s L0x7fffffffd538,L0x7fffffffd538<=s 23528@16,
(-23528)@16<=s L0x7fffffffd548,L0x7fffffffd548<=s 23528@16,
(-23528)@16<=s L0x7fffffffd558,L0x7fffffffd558<=s 23528@16,
(-24118)@16<=s L0x7fffffffd52a,L0x7fffffffd52a<=s 24118@16,
(-24118)@16<=s L0x7fffffffd53a,L0x7fffffffd53a<=s 24118@16,
(-24118)@16<=s L0x7fffffffd54a,L0x7fffffffd54a<=s 24118@16,
(-24118)@16<=s L0x7fffffffd55a,L0x7fffffffd55a<=s 24118@16,
(-24910)@16<=s L0x7fffffffd52c,L0x7fffffffd52c<=s 24910@16,
(-24910)@16<=s L0x7fffffffd53c,L0x7fffffffd53c<=s 24910@16,
(-24910)@16<=s L0x7fffffffd54c,L0x7fffffffd54c<=s 24910@16,
(-24910)@16<=s L0x7fffffffd55c,L0x7fffffffd55c<=s 24910@16,
(-24617)@16<=s L0x7fffffffd52e,L0x7fffffffd52e<=s 24617@16,
(-24617)@16<=s L0x7fffffffd53e,L0x7fffffffd53e<=s 24617@16,
(-24617)@16<=s L0x7fffffffd54e,L0x7fffffffd54e<=s 24617@16,
(-24617)@16<=s L0x7fffffffd55e,L0x7fffffffd55e<=s 24617@16,
(-24481)@16<=s L0x7fffffffd560,L0x7fffffffd560<=s 24481@16,
(-24481)@16<=s L0x7fffffffd570,L0x7fffffffd570<=s 24481@16,
(-24481)@16<=s L0x7fffffffd580,L0x7fffffffd580<=s 24481@16,
(-24481)@16<=s L0x7fffffffd590,L0x7fffffffd590<=s 24481@16,
(-23929)@16<=s L0x7fffffffd562,L0x7fffffffd562<=s 23929@16,
(-23929)@16<=s L0x7fffffffd572,L0x7fffffffd572<=s 23929@16,
(-23929)@16<=s L0x7fffffffd582,L0x7fffffffd582<=s 23929@16,
(-23929)@16<=s L0x7fffffffd592,L0x7fffffffd592<=s 23929@16,
(-23450)@16<=s L0x7fffffffd564,L0x7fffffffd564<=s 23450@16,
(-23450)@16<=s L0x7fffffffd574,L0x7fffffffd574<=s 23450@16,
(-23450)@16<=s L0x7fffffffd584,L0x7fffffffd584<=s 23450@16,
(-23450)@16<=s L0x7fffffffd594,L0x7fffffffd594<=s 23450@16,
(-24605)@16<=s L0x7fffffffd566,L0x7fffffffd566<=s 24605@16,
(-24605)@16<=s L0x7fffffffd576,L0x7fffffffd576<=s 24605@16,
(-24605)@16<=s L0x7fffffffd586,L0x7fffffffd586<=s 24605@16,
(-24605)@16<=s L0x7fffffffd596,L0x7fffffffd596<=s 24605@16,
(-23107)@16<=s L0x7fffffffd568,L0x7fffffffd568<=s 23107@16,
(-23107)@16<=s L0x7fffffffd578,L0x7fffffffd578<=s 23107@16,
(-23107)@16<=s L0x7fffffffd588,L0x7fffffffd588<=s 23107@16,
(-23107)@16<=s L0x7fffffffd598,L0x7fffffffd598<=s 23107@16,
(-23612)@16<=s L0x7fffffffd56a,L0x7fffffffd56a<=s 23612@16,
(-23612)@16<=s L0x7fffffffd57a,L0x7fffffffd57a<=s 23612@16,
(-23612)@16<=s L0x7fffffffd58a,L0x7fffffffd58a<=s 23612@16,
(-23612)@16<=s L0x7fffffffd59a,L0x7fffffffd59a<=s 23612@16,
(-23127)@16<=s L0x7fffffffd56c,L0x7fffffffd56c<=s 23127@16,
(-23127)@16<=s L0x7fffffffd57c,L0x7fffffffd57c<=s 23127@16,
(-23127)@16<=s L0x7fffffffd58c,L0x7fffffffd58c<=s 23127@16,
(-23127)@16<=s L0x7fffffffd59c,L0x7fffffffd59c<=s 23127@16,
(-24252)@16<=s L0x7fffffffd56e,L0x7fffffffd56e<=s 24252@16,
(-24252)@16<=s L0x7fffffffd57e,L0x7fffffffd57e<=s 24252@16,
(-24252)@16<=s L0x7fffffffd58e,L0x7fffffffd58e<=s 24252@16,
(-24252)@16<=s L0x7fffffffd59e,L0x7fffffffd59e<=s 24252@16,
(-23740)@16<=s L0x7fffffffd5a0,L0x7fffffffd5a0<=s 23740@16,
(-23740)@16<=s L0x7fffffffd5b0,L0x7fffffffd5b0<=s 23740@16,
(-23740)@16<=s L0x7fffffffd5c0,L0x7fffffffd5c0<=s 23740@16,
(-23740)@16<=s L0x7fffffffd5d0,L0x7fffffffd5d0<=s 23740@16,
(-25010)@16<=s L0x7fffffffd5a2,L0x7fffffffd5a2<=s 25010@16,
(-25010)@16<=s L0x7fffffffd5b2,L0x7fffffffd5b2<=s 25010@16,
(-25010)@16<=s L0x7fffffffd5c2,L0x7fffffffd5c2<=s 25010@16,
(-25010)@16<=s L0x7fffffffd5d2,L0x7fffffffd5d2<=s 25010@16,
(-24750)@16<=s L0x7fffffffd5a4,L0x7fffffffd5a4<=s 24750@16,
(-24750)@16<=s L0x7fffffffd5b4,L0x7fffffffd5b4<=s 24750@16,
(-24750)@16<=s L0x7fffffffd5c4,L0x7fffffffd5c4<=s 24750@16,
(-24750)@16<=s L0x7fffffffd5d4,L0x7fffffffd5d4<=s 24750@16,
(-24054)@16<=s L0x7fffffffd5a6,L0x7fffffffd5a6<=s 24054@16,
(-24054)@16<=s L0x7fffffffd5b6,L0x7fffffffd5b6<=s 24054@16,
(-24054)@16<=s L0x7fffffffd5c6,L0x7fffffffd5c6<=s 24054@16,
(-24054)@16<=s L0x7fffffffd5d6,L0x7fffffffd5d6<=s 24054@16,
(-24864)@16<=s L0x7fffffffd5a8,L0x7fffffffd5a8<=s 24864@16,
(-24864)@16<=s L0x7fffffffd5b8,L0x7fffffffd5b8<=s 24864@16,
(-24864)@16<=s L0x7fffffffd5c8,L0x7fffffffd5c8<=s 24864@16,
(-24864)@16<=s L0x7fffffffd5d8,L0x7fffffffd5d8<=s 24864@16,
(-24999)@16<=s L0x7fffffffd5aa,L0x7fffffffd5aa<=s 24999@16,
(-24999)@16<=s L0x7fffffffd5ba,L0x7fffffffd5ba<=s 24999@16,
(-24999)@16<=s L0x7fffffffd5ca,L0x7fffffffd5ca<=s 24999@16,
(-24999)@16<=s L0x7fffffffd5da,L0x7fffffffd5da<=s 24999@16,
(-25106)@16<=s L0x7fffffffd5ac,L0x7fffffffd5ac<=s 25106@16,
(-25106)@16<=s L0x7fffffffd5bc,L0x7fffffffd5bc<=s 25106@16,
(-25106)@16<=s L0x7fffffffd5cc,L0x7fffffffd5cc<=s 25106@16,
(-25106)@16<=s L0x7fffffffd5dc,L0x7fffffffd5dc<=s 25106@16,
(-25188)@16<=s L0x7fffffffd5ae,L0x7fffffffd5ae<=s 25188@16,
(-25188)@16<=s L0x7fffffffd5be,L0x7fffffffd5be<=s 25188@16,
(-25188)@16<=s L0x7fffffffd5ce,L0x7fffffffd5ce<=s 25188@16,
(-25188)@16<=s L0x7fffffffd5de,L0x7fffffffd5de<=s 25188@16
,
(-23941)@16<=s L0x7fffffffd5e0,L0x7fffffffd5e0<=s 23941@16,
(-23941)@16<=s L0x7fffffffd5f0,L0x7fffffffd5f0<=s 23941@16,
(-23941)@16<=s L0x7fffffffd600,L0x7fffffffd600<=s 23941@16,
(-23941)@16<=s L0x7fffffffd610,L0x7fffffffd610<=s 23941@16,
(-24353)@16<=s L0x7fffffffd5e2,L0x7fffffffd5e2<=s 24353@16,
(-24353)@16<=s L0x7fffffffd5f2,L0x7fffffffd5f2<=s 24353@16,
(-24353)@16<=s L0x7fffffffd602,L0x7fffffffd602<=s 24353@16,
(-24353)@16<=s L0x7fffffffd612,L0x7fffffffd612<=s 24353@16,
(-24171)@16<=s L0x7fffffffd5e4,L0x7fffffffd5e4<=s 24171@16,
(-24171)@16<=s L0x7fffffffd5f4,L0x7fffffffd5f4<=s 24171@16,
(-24171)@16<=s L0x7fffffffd604,L0x7fffffffd604<=s 24171@16,
(-24171)@16<=s L0x7fffffffd614,L0x7fffffffd614<=s 24171@16,
(-23480)@16<=s L0x7fffffffd5e6,L0x7fffffffd5e6<=s 23480@16,
(-23480)@16<=s L0x7fffffffd5f6,L0x7fffffffd5f6<=s 23480@16,
(-23480)@16<=s L0x7fffffffd606,L0x7fffffffd606<=s 23480@16,
(-23480)@16<=s L0x7fffffffd616,L0x7fffffffd616<=s 23480@16,
(-24525)@16<=s L0x7fffffffd5e8,L0x7fffffffd5e8<=s 24525@16,
(-24525)@16<=s L0x7fffffffd5f8,L0x7fffffffd5f8<=s 24525@16,
(-24525)@16<=s L0x7fffffffd608,L0x7fffffffd608<=s 24525@16,
(-24525)@16<=s L0x7fffffffd618,L0x7fffffffd618<=s 24525@16,
(-23264)@16<=s L0x7fffffffd5ea,L0x7fffffffd5ea<=s 23264@16,
(-23264)@16<=s L0x7fffffffd5fa,L0x7fffffffd5fa<=s 23264@16,
(-23264)@16<=s L0x7fffffffd60a,L0x7fffffffd60a<=s 23264@16,
(-23264)@16<=s L0x7fffffffd61a,L0x7fffffffd61a<=s 23264@16,
(-23164)@16<=s L0x7fffffffd5ec,L0x7fffffffd5ec<=s 23164@16,
(-23164)@16<=s L0x7fffffffd5fc,L0x7fffffffd5fc<=s 23164@16,
(-23164)@16<=s L0x7fffffffd60c,L0x7fffffffd60c<=s 23164@16,
(-23164)@16<=s L0x7fffffffd61c,L0x7fffffffd61c<=s 23164@16,
(-23097)@16<=s L0x7fffffffd5ee,L0x7fffffffd5ee<=s 23097@16,
(-23097)@16<=s L0x7fffffffd5fe,L0x7fffffffd5fe<=s 23097@16,
(-23097)@16<=s L0x7fffffffd60e,L0x7fffffffd60e<=s 23097@16,
(-23097)@16<=s L0x7fffffffd61e,L0x7fffffffd61e<=s 23097@16,
(-24870)@16<=s L0x7fffffffd620,L0x7fffffffd620<=s 24870@16,
(-24870)@16<=s L0x7fffffffd630,L0x7fffffffd630<=s 24870@16,
(-24870)@16<=s L0x7fffffffd640,L0x7fffffffd640<=s 24870@16,
(-24870)@16<=s L0x7fffffffd650,L0x7fffffffd650<=s 24870@16,
(-24173)@16<=s L0x7fffffffd622,L0x7fffffffd622<=s 24173@16,
(-24173)@16<=s L0x7fffffffd632,L0x7fffffffd632<=s 24173@16,
(-24173)@16<=s L0x7fffffffd642,L0x7fffffffd642<=s 24173@16,
(-24173)@16<=s L0x7fffffffd652,L0x7fffffffd652<=s 24173@16,
(-24372)@16<=s L0x7fffffffd624,L0x7fffffffd624<=s 24372@16,
(-24372)@16<=s L0x7fffffffd634,L0x7fffffffd634<=s 24372@16,
(-24372)@16<=s L0x7fffffffd644,L0x7fffffffd644<=s 24372@16,
(-24372)@16<=s L0x7fffffffd654,L0x7fffffffd654<=s 24372@16,
(-24191)@16<=s L0x7fffffffd626,L0x7fffffffd626<=s 24191@16,
(-24191)@16<=s L0x7fffffffd636,L0x7fffffffd636<=s 24191@16,
(-24191)@16<=s L0x7fffffffd646,L0x7fffffffd646<=s 24191@16,
(-24191)@16<=s L0x7fffffffd656,L0x7fffffffd656<=s 24191@16,
(-22582)@16<=s L0x7fffffffd628,L0x7fffffffd628<=s 22582@16,
(-22582)@16<=s L0x7fffffffd638,L0x7fffffffd638<=s 22582@16,
(-22582)@16<=s L0x7fffffffd648,L0x7fffffffd648<=s 22582@16,
(-22582)@16<=s L0x7fffffffd658,L0x7fffffffd658<=s 22582@16,
(-22877)@16<=s L0x7fffffffd62a,L0x7fffffffd62a<=s 22877@16,
(-22877)@16<=s L0x7fffffffd63a,L0x7fffffffd63a<=s 22877@16,
(-22877)@16<=s L0x7fffffffd64a,L0x7fffffffd64a<=s 22877@16,
(-22877)@16<=s L0x7fffffffd65a,L0x7fffffffd65a<=s 22877@16,
(-23000)@16<=s L0x7fffffffd62c,L0x7fffffffd62c<=s 23000@16,
(-23000)@16<=s L0x7fffffffd63c,L0x7fffffffd63c<=s 23000@16,
(-23000)@16<=s L0x7fffffffd64c,L0x7fffffffd64c<=s 23000@16,
(-23000)@16<=s L0x7fffffffd65c,L0x7fffffffd65c<=s 23000@16,
(-23353)@16<=s L0x7fffffffd62e,L0x7fffffffd62e<=s 23353@16,
(-23353)@16<=s L0x7fffffffd63e,L0x7fffffffd63e<=s 23353@16,
(-23353)@16<=s L0x7fffffffd64e,L0x7fffffffd64e<=s 23353@16,
(-23353)@16<=s L0x7fffffffd65e,L0x7fffffffd65e<=s 23353@16,
(-24388)@16<=s L0x7fffffffd660,L0x7fffffffd660<=s 24388@16,
(-24388)@16<=s L0x7fffffffd670,L0x7fffffffd670<=s 24388@16,
(-24388)@16<=s L0x7fffffffd680,L0x7fffffffd680<=s 24388@16,
(-24388)@16<=s L0x7fffffffd690,L0x7fffffffd690<=s 24388@16,
(-24222)@16<=s L0x7fffffffd662,L0x7fffffffd662<=s 24222@16,
(-24222)@16<=s L0x7fffffffd672,L0x7fffffffd672<=s 24222@16,
(-24222)@16<=s L0x7fffffffd682,L0x7fffffffd682<=s 24222@16,
(-24222)@16<=s L0x7fffffffd692,L0x7fffffffd692<=s 24222@16,
(-24699)@16<=s L0x7fffffffd664,L0x7fffffffd664<=s 24699@16,
(-24699)@16<=s L0x7fffffffd674,L0x7fffffffd674<=s 24699@16,
(-24699)@16<=s L0x7fffffffd684,L0x7fffffffd684<=s 24699@16,
(-24699)@16<=s L0x7fffffffd694,L0x7fffffffd694<=s 24699@16,
(-24014)@16<=s L0x7fffffffd666,L0x7fffffffd666<=s 24014@16,
(-24014)@16<=s L0x7fffffffd676,L0x7fffffffd676<=s 24014@16,
(-24014)@16<=s L0x7fffffffd686,L0x7fffffffd686<=s 24014@16,
(-24014)@16<=s L0x7fffffffd696,L0x7fffffffd696<=s 24014@16,
(-25349)@16<=s L0x7fffffffd668,L0x7fffffffd668<=s 25349@16,
(-25349)@16<=s L0x7fffffffd678,L0x7fffffffd678<=s 25349@16,
(-25349)@16<=s L0x7fffffffd688,L0x7fffffffd688<=s 25349@16,
(-25349)@16<=s L0x7fffffffd698,L0x7fffffffd698<=s 25349@16,
(-26047)@16<=s L0x7fffffffd66a,L0x7fffffffd66a<=s 26047@16,
(-26047)@16<=s L0x7fffffffd67a,L0x7fffffffd67a<=s 26047@16,
(-26047)@16<=s L0x7fffffffd68a,L0x7fffffffd68a<=s 26047@16,
(-26047)@16<=s L0x7fffffffd69a,L0x7fffffffd69a<=s 26047@16,
(-24581)@16<=s L0x7fffffffd66c,L0x7fffffffd66c<=s 24581@16,
(-24581)@16<=s L0x7fffffffd67c,L0x7fffffffd67c<=s 24581@16,
(-24581)@16<=s L0x7fffffffd68c,L0x7fffffffd68c<=s 24581@16,
(-24581)@16<=s L0x7fffffffd69c,L0x7fffffffd69c<=s 24581@16,
(-25028)@16<=s L0x7fffffffd66e,L0x7fffffffd66e<=s 25028@16,
(-25028)@16<=s L0x7fffffffd67e,L0x7fffffffd67e<=s 25028@16,
(-25028)@16<=s L0x7fffffffd68e,L0x7fffffffd68e<=s 25028@16,
(-25028)@16<=s L0x7fffffffd69e,L0x7fffffffd69e<=s 25028@16,
(-24046)@16<=s L0x7fffffffd6a0,L0x7fffffffd6a0<=s 24046@16,
(-24046)@16<=s L0x7fffffffd6b0,L0x7fffffffd6b0<=s 24046@16,
(-24046)@16<=s L0x7fffffffd6c0,L0x7fffffffd6c0<=s 24046@16,
(-24046)@16<=s L0x7fffffffd6d0,L0x7fffffffd6d0<=s 24046@16,
(-24570)@16<=s L0x7fffffffd6a2,L0x7fffffffd6a2<=s 24570@16,
(-24570)@16<=s L0x7fffffffd6b2,L0x7fffffffd6b2<=s 24570@16,
(-24570)@16<=s L0x7fffffffd6c2,L0x7fffffffd6c2<=s 24570@16,
(-24570)@16<=s L0x7fffffffd6d2,L0x7fffffffd6d2<=s 24570@16,
(-24704)@16<=s L0x7fffffffd6a4,L0x7fffffffd6a4<=s 24704@16,
(-24704)@16<=s L0x7fffffffd6b4,L0x7fffffffd6b4<=s 24704@16,
(-24704)@16<=s L0x7fffffffd6c4,L0x7fffffffd6c4<=s 24704@16,
(-24704)@16<=s L0x7fffffffd6d4,L0x7fffffffd6d4<=s 24704@16,
(-24009)@16<=s L0x7fffffffd6a6,L0x7fffffffd6a6<=s 24009@16,
(-24009)@16<=s L0x7fffffffd6b6,L0x7fffffffd6b6<=s 24009@16,
(-24009)@16<=s L0x7fffffffd6c6,L0x7fffffffd6c6<=s 24009@16,
(-24009)@16<=s L0x7fffffffd6d6,L0x7fffffffd6d6<=s 24009@16,
(-24394)@16<=s L0x7fffffffd6a8,L0x7fffffffd6a8<=s 24394@16,
(-24394)@16<=s L0x7fffffffd6b8,L0x7fffffffd6b8<=s 24394@16,
(-24394)@16<=s L0x7fffffffd6c8,L0x7fffffffd6c8<=s 24394@16,
(-24394)@16<=s L0x7fffffffd6d8,L0x7fffffffd6d8<=s 24394@16,
(-24390)@16<=s L0x7fffffffd6aa,L0x7fffffffd6aa<=s 24390@16,
(-24390)@16<=s L0x7fffffffd6ba,L0x7fffffffd6ba<=s 24390@16,
(-24390)@16<=s L0x7fffffffd6ca,L0x7fffffffd6ca<=s 24390@16,
(-24390)@16<=s L0x7fffffffd6da,L0x7fffffffd6da<=s 24390@16,
(-24443)@16<=s L0x7fffffffd6ac,L0x7fffffffd6ac<=s 24443@16,
(-24443)@16<=s L0x7fffffffd6bc,L0x7fffffffd6bc<=s 24443@16,
(-24443)@16<=s L0x7fffffffd6cc,L0x7fffffffd6cc<=s 24443@16,
(-24443)@16<=s L0x7fffffffd6dc,L0x7fffffffd6dc<=s 24443@16,
(-24336)@16<=s L0x7fffffffd6ae,L0x7fffffffd6ae<=s 24336@16,
(-24336)@16<=s L0x7fffffffd6be,L0x7fffffffd6be<=s 24336@16,
(-24336)@16<=s L0x7fffffffd6ce,L0x7fffffffd6ce<=s 24336@16,
(-24336)@16<=s L0x7fffffffd6de,L0x7fffffffd6de<=s 24336@16
,
(-31199)@16<=s L0x7fffffffd6e0,L0x7fffffffd6e0<=s 31199@16,
(-31199)@16<=s L0x7fffffffd6f0,L0x7fffffffd6f0<=s 31199@16,
(-31199)@16<=s L0x7fffffffd700,L0x7fffffffd700<=s 31199@16,
(-31199)@16<=s L0x7fffffffd710,L0x7fffffffd710<=s 31199@16,
(-31836)@16<=s L0x7fffffffd6e2,L0x7fffffffd6e2<=s 31836@16,
(-31836)@16<=s L0x7fffffffd6f2,L0x7fffffffd6f2<=s 31836@16,
(-31836)@16<=s L0x7fffffffd702,L0x7fffffffd702<=s 31836@16,
(-31836)@16<=s L0x7fffffffd712,L0x7fffffffd712<=s 31836@16,
(-30187)@16<=s L0x7fffffffd6e4,L0x7fffffffd6e4<=s 30187@16,
(-30187)@16<=s L0x7fffffffd6f4,L0x7fffffffd6f4<=s 30187@16,
(-30187)@16<=s L0x7fffffffd704,L0x7fffffffd704<=s 30187@16,
(-30187)@16<=s L0x7fffffffd714,L0x7fffffffd714<=s 30187@16,
(-31492)@16<=s L0x7fffffffd6e6,L0x7fffffffd6e6<=s 31492@16,
(-31492)@16<=s L0x7fffffffd6f6,L0x7fffffffd6f6<=s 31492@16,
(-31492)@16<=s L0x7fffffffd706,L0x7fffffffd706<=s 31492@16,
(-31492)@16<=s L0x7fffffffd716,L0x7fffffffd716<=s 31492@16,
(-30808)@16<=s L0x7fffffffd6e8,L0x7fffffffd6e8<=s 30808@16,
(-30808)@16<=s L0x7fffffffd6f8,L0x7fffffffd6f8<=s 30808@16,
(-30808)@16<=s L0x7fffffffd708,L0x7fffffffd708<=s 30808@16,
(-30808)@16<=s L0x7fffffffd718,L0x7fffffffd718<=s 30808@16,
(-31522)@16<=s L0x7fffffffd6ea,L0x7fffffffd6ea<=s 31522@16,
(-31522)@16<=s L0x7fffffffd6fa,L0x7fffffffd6fa<=s 31522@16,
(-31522)@16<=s L0x7fffffffd70a,L0x7fffffffd70a<=s 31522@16,
(-31522)@16<=s L0x7fffffffd71a,L0x7fffffffd71a<=s 31522@16,
(-31855)@16<=s L0x7fffffffd6ec,L0x7fffffffd6ec<=s 31855@16,
(-31855)@16<=s L0x7fffffffd6fc,L0x7fffffffd6fc<=s 31855@16,
(-31855)@16<=s L0x7fffffffd70c,L0x7fffffffd70c<=s 31855@16,
(-31855)@16<=s L0x7fffffffd71c,L0x7fffffffd71c<=s 31855@16,
(-31951)@16<=s L0x7fffffffd6ee,L0x7fffffffd6ee<=s 31951@16,
(-31951)@16<=s L0x7fffffffd6fe,L0x7fffffffd6fe<=s 31951@16,
(-31951)@16<=s L0x7fffffffd70e,L0x7fffffffd70e<=s 31951@16,
(-31951)@16<=s L0x7fffffffd71e,L0x7fffffffd71e<=s 31951@16,
(-31317)@16<=s L0x7fffffffd720,L0x7fffffffd720<=s 31317@16,
(-31317)@16<=s L0x7fffffffd730,L0x7fffffffd730<=s 31317@16,
(-31317)@16<=s L0x7fffffffd740,L0x7fffffffd740<=s 31317@16,
(-31317)@16<=s L0x7fffffffd750,L0x7fffffffd750<=s 31317@16,
(-30689)@16<=s L0x7fffffffd722,L0x7fffffffd722<=s 30689@16,
(-30689)@16<=s L0x7fffffffd732,L0x7fffffffd732<=s 30689@16,
(-30689)@16<=s L0x7fffffffd742,L0x7fffffffd742<=s 30689@16,
(-30689)@16<=s L0x7fffffffd752,L0x7fffffffd752<=s 30689@16,
(-30823)@16<=s L0x7fffffffd724,L0x7fffffffd724<=s 30823@16,
(-30823)@16<=s L0x7fffffffd734,L0x7fffffffd734<=s 30823@16,
(-30823)@16<=s L0x7fffffffd744,L0x7fffffffd744<=s 30823@16,
(-30823)@16<=s L0x7fffffffd754,L0x7fffffffd754<=s 30823@16,
(-29289)@16<=s L0x7fffffffd726,L0x7fffffffd726<=s 29289@16,
(-29289)@16<=s L0x7fffffffd736,L0x7fffffffd736<=s 29289@16,
(-29289)@16<=s L0x7fffffffd746,L0x7fffffffd746<=s 29289@16,
(-29289)@16<=s L0x7fffffffd756,L0x7fffffffd756<=s 29289@16,
(-30567)@16<=s L0x7fffffffd728,L0x7fffffffd728<=s 30567@16,
(-30567)@16<=s L0x7fffffffd738,L0x7fffffffd738<=s 30567@16,
(-30567)@16<=s L0x7fffffffd748,L0x7fffffffd748<=s 30567@16,
(-30567)@16<=s L0x7fffffffd758,L0x7fffffffd758<=s 30567@16,
(-29916)@16<=s L0x7fffffffd72a,L0x7fffffffd72a<=s 29916@16,
(-29916)@16<=s L0x7fffffffd73a,L0x7fffffffd73a<=s 29916@16,
(-29916)@16<=s L0x7fffffffd74a,L0x7fffffffd74a<=s 29916@16,
(-29916)@16<=s L0x7fffffffd75a,L0x7fffffffd75a<=s 29916@16,
(-30049)@16<=s L0x7fffffffd72c,L0x7fffffffd72c<=s 30049@16,
(-30049)@16<=s L0x7fffffffd73c,L0x7fffffffd73c<=s 30049@16,
(-30049)@16<=s L0x7fffffffd74c,L0x7fffffffd74c<=s 30049@16,
(-30049)@16<=s L0x7fffffffd75c,L0x7fffffffd75c<=s 30049@16,
(-31454)@16<=s L0x7fffffffd72e,L0x7fffffffd72e<=s 31454@16,
(-31454)@16<=s L0x7fffffffd73e,L0x7fffffffd73e<=s 31454@16,
(-31454)@16<=s L0x7fffffffd74e,L0x7fffffffd74e<=s 31454@16,
(-31454)@16<=s L0x7fffffffd75e,L0x7fffffffd75e<=s 31454@16,
(-30984)@16<=s L0x7fffffffd760,L0x7fffffffd760<=s 30984@16,
(-30984)@16<=s L0x7fffffffd770,L0x7fffffffd770<=s 30984@16,
(-30984)@16<=s L0x7fffffffd780,L0x7fffffffd780<=s 30984@16,
(-30984)@16<=s L0x7fffffffd790,L0x7fffffffd790<=s 30984@16,
(-30808)@16<=s L0x7fffffffd762,L0x7fffffffd762<=s 30808@16,
(-30808)@16<=s L0x7fffffffd772,L0x7fffffffd772<=s 30808@16,
(-30808)@16<=s L0x7fffffffd782,L0x7fffffffd782<=s 30808@16,
(-30808)@16<=s L0x7fffffffd792,L0x7fffffffd792<=s 30808@16,
(-30793)@16<=s L0x7fffffffd764,L0x7fffffffd764<=s 30793@16,
(-30793)@16<=s L0x7fffffffd774,L0x7fffffffd774<=s 30793@16,
(-30793)@16<=s L0x7fffffffd784,L0x7fffffffd784<=s 30793@16,
(-30793)@16<=s L0x7fffffffd794,L0x7fffffffd794<=s 30793@16,
(-30605)@16<=s L0x7fffffffd766,L0x7fffffffd766<=s 30605@16,
(-30605)@16<=s L0x7fffffffd776,L0x7fffffffd776<=s 30605@16,
(-30605)@16<=s L0x7fffffffd786,L0x7fffffffd786<=s 30605@16,
(-30605)@16<=s L0x7fffffffd796,L0x7fffffffd796<=s 30605@16,
(-30925)@16<=s L0x7fffffffd768,L0x7fffffffd768<=s 30925@16,
(-30925)@16<=s L0x7fffffffd778,L0x7fffffffd778<=s 30925@16,
(-30925)@16<=s L0x7fffffffd788,L0x7fffffffd788<=s 30925@16,
(-30925)@16<=s L0x7fffffffd798,L0x7fffffffd798<=s 30925@16,
(-30233)@16<=s L0x7fffffffd76a,L0x7fffffffd76a<=s 30233@16,
(-30233)@16<=s L0x7fffffffd77a,L0x7fffffffd77a<=s 30233@16,
(-30233)@16<=s L0x7fffffffd78a,L0x7fffffffd78a<=s 30233@16,
(-30233)@16<=s L0x7fffffffd79a,L0x7fffffffd79a<=s 30233@16,
(-30590)@16<=s L0x7fffffffd76c,L0x7fffffffd76c<=s 30590@16,
(-30590)@16<=s L0x7fffffffd77c,L0x7fffffffd77c<=s 30590@16,
(-30590)@16<=s L0x7fffffffd78c,L0x7fffffffd78c<=s 30590@16,
(-30590)@16<=s L0x7fffffffd79c,L0x7fffffffd79c<=s 30590@16,
(-29986)@16<=s L0x7fffffffd76e,L0x7fffffffd76e<=s 29986@16,
(-29986)@16<=s L0x7fffffffd77e,L0x7fffffffd77e<=s 29986@16,
(-29986)@16<=s L0x7fffffffd78e,L0x7fffffffd78e<=s 29986@16,
(-29986)@16<=s L0x7fffffffd79e,L0x7fffffffd79e<=s 29986@16,
(-29552)@16<=s L0x7fffffffd7a0,L0x7fffffffd7a0<=s 29552@16,
(-29552)@16<=s L0x7fffffffd7b0,L0x7fffffffd7b0<=s 29552@16,
(-29552)@16<=s L0x7fffffffd7c0,L0x7fffffffd7c0<=s 29552@16,
(-29552)@16<=s L0x7fffffffd7d0,L0x7fffffffd7d0<=s 29552@16,
(-29721)@16<=s L0x7fffffffd7a2,L0x7fffffffd7a2<=s 29721@16,
(-29721)@16<=s L0x7fffffffd7b2,L0x7fffffffd7b2<=s 29721@16,
(-29721)@16<=s L0x7fffffffd7c2,L0x7fffffffd7c2<=s 29721@16,
(-29721)@16<=s L0x7fffffffd7d2,L0x7fffffffd7d2<=s 29721@16,
(-31089)@16<=s L0x7fffffffd7a4,L0x7fffffffd7a4<=s 31089@16,
(-31089)@16<=s L0x7fffffffd7b4,L0x7fffffffd7b4<=s 31089@16,
(-31089)@16<=s L0x7fffffffd7c4,L0x7fffffffd7c4<=s 31089@16,
(-31089)@16<=s L0x7fffffffd7d4,L0x7fffffffd7d4<=s 31089@16,
(-30585)@16<=s L0x7fffffffd7a6,L0x7fffffffd7a6<=s 30585@16,
(-30585)@16<=s L0x7fffffffd7b6,L0x7fffffffd7b6<=s 30585@16,
(-30585)@16<=s L0x7fffffffd7c6,L0x7fffffffd7c6<=s 30585@16,
(-30585)@16<=s L0x7fffffffd7d6,L0x7fffffffd7d6<=s 30585@16,
(-30924)@16<=s L0x7fffffffd7a8,L0x7fffffffd7a8<=s 30924@16,
(-30924)@16<=s L0x7fffffffd7b8,L0x7fffffffd7b8<=s 30924@16,
(-30924)@16<=s L0x7fffffffd7c8,L0x7fffffffd7c8<=s 30924@16,
(-30924)@16<=s L0x7fffffffd7d8,L0x7fffffffd7d8<=s 30924@16,
(-30908)@16<=s L0x7fffffffd7aa,L0x7fffffffd7aa<=s 30908@16,
(-30908)@16<=s L0x7fffffffd7ba,L0x7fffffffd7ba<=s 30908@16,
(-30908)@16<=s L0x7fffffffd7ca,L0x7fffffffd7ca<=s 30908@16,
(-30908)@16<=s L0x7fffffffd7da,L0x7fffffffd7da<=s 30908@16,
(-31644)@16<=s L0x7fffffffd7ac,L0x7fffffffd7ac<=s 31644@16,
(-31644)@16<=s L0x7fffffffd7bc,L0x7fffffffd7bc<=s 31644@16,
(-31644)@16<=s L0x7fffffffd7cc,L0x7fffffffd7cc<=s 31644@16,
(-31644)@16<=s L0x7fffffffd7dc,L0x7fffffffd7dc<=s 31644@16,
(-30477)@16<=s L0x7fffffffd7ae,L0x7fffffffd7ae<=s 30477@16,
(-30477)@16<=s L0x7fffffffd7be,L0x7fffffffd7be<=s 30477@16,
(-30477)@16<=s L0x7fffffffd7ce,L0x7fffffffd7ce<=s 30477@16,
(-30477)@16<=s L0x7fffffffd7de,L0x7fffffffd7de<=s 30477@16
,
(-30033)@16<=s L0x7fffffffd7e0,L0x7fffffffd7e0<=s 30033@16,
(-30033)@16<=s L0x7fffffffd7f0,L0x7fffffffd7f0<=s 30033@16,
(-30033)@16<=s L0x7fffffffd800,L0x7fffffffd800<=s 30033@16,
(-30033)@16<=s L0x7fffffffd810,L0x7fffffffd810<=s 30033@16,
(-30169)@16<=s L0x7fffffffd7e2,L0x7fffffffd7e2<=s 30169@16,
(-30169)@16<=s L0x7fffffffd7f2,L0x7fffffffd7f2<=s 30169@16,
(-30169)@16<=s L0x7fffffffd802,L0x7fffffffd802<=s 30169@16,
(-30169)@16<=s L0x7fffffffd812,L0x7fffffffd812<=s 30169@16,
(-30045)@16<=s L0x7fffffffd7e4,L0x7fffffffd7e4<=s 30045@16,
(-30045)@16<=s L0x7fffffffd7f4,L0x7fffffffd7f4<=s 30045@16,
(-30045)@16<=s L0x7fffffffd804,L0x7fffffffd804<=s 30045@16,
(-30045)@16<=s L0x7fffffffd814,L0x7fffffffd814<=s 30045@16,
(-30566)@16<=s L0x7fffffffd7e6,L0x7fffffffd7e6<=s 30566@16,
(-30566)@16<=s L0x7fffffffd7f6,L0x7fffffffd7f6<=s 30566@16,
(-30566)@16<=s L0x7fffffffd806,L0x7fffffffd806<=s 30566@16,
(-30566)@16<=s L0x7fffffffd816,L0x7fffffffd816<=s 30566@16,
(-29481)@16<=s L0x7fffffffd7e8,L0x7fffffffd7e8<=s 29481@16,
(-29481)@16<=s L0x7fffffffd7f8,L0x7fffffffd7f8<=s 29481@16,
(-29481)@16<=s L0x7fffffffd808,L0x7fffffffd808<=s 29481@16,
(-29481)@16<=s L0x7fffffffd818,L0x7fffffffd818<=s 29481@16,
(-29286)@16<=s L0x7fffffffd7ea,L0x7fffffffd7ea<=s 29286@16,
(-29286)@16<=s L0x7fffffffd7fa,L0x7fffffffd7fa<=s 29286@16,
(-29286)@16<=s L0x7fffffffd80a,L0x7fffffffd80a<=s 29286@16,
(-29286)@16<=s L0x7fffffffd81a,L0x7fffffffd81a<=s 29286@16,
(-29670)@16<=s L0x7fffffffd7ec,L0x7fffffffd7ec<=s 29670@16,
(-29670)@16<=s L0x7fffffffd7fc,L0x7fffffffd7fc<=s 29670@16,
(-29670)@16<=s L0x7fffffffd80c,L0x7fffffffd80c<=s 29670@16,
(-29670)@16<=s L0x7fffffffd81c,L0x7fffffffd81c<=s 29670@16,
(-30846)@16<=s L0x7fffffffd7ee,L0x7fffffffd7ee<=s 30846@16,
(-30846)@16<=s L0x7fffffffd7fe,L0x7fffffffd7fe<=s 30846@16,
(-30846)@16<=s L0x7fffffffd80e,L0x7fffffffd80e<=s 30846@16,
(-30846)@16<=s L0x7fffffffd81e,L0x7fffffffd81e<=s 30846@16,
(-29088)@16<=s L0x7fffffffd820,L0x7fffffffd820<=s 29088@16,
(-29088)@16<=s L0x7fffffffd830,L0x7fffffffd830<=s 29088@16,
(-29088)@16<=s L0x7fffffffd840,L0x7fffffffd840<=s 29088@16,
(-29088)@16<=s L0x7fffffffd850,L0x7fffffffd850<=s 29088@16,
(-28987)@16<=s L0x7fffffffd822,L0x7fffffffd822<=s 28987@16,
(-28987)@16<=s L0x7fffffffd832,L0x7fffffffd832<=s 28987@16,
(-28987)@16<=s L0x7fffffffd842,L0x7fffffffd842<=s 28987@16,
(-28987)@16<=s L0x7fffffffd852,L0x7fffffffd852<=s 28987@16,
(-29460)@16<=s L0x7fffffffd824,L0x7fffffffd824<=s 29460@16,
(-29460)@16<=s L0x7fffffffd834,L0x7fffffffd834<=s 29460@16,
(-29460)@16<=s L0x7fffffffd844,L0x7fffffffd844<=s 29460@16,
(-29460)@16<=s L0x7fffffffd854,L0x7fffffffd854<=s 29460@16,
(-29489)@16<=s L0x7fffffffd826,L0x7fffffffd826<=s 29489@16,
(-29489)@16<=s L0x7fffffffd836,L0x7fffffffd836<=s 29489@16,
(-29489)@16<=s L0x7fffffffd846,L0x7fffffffd846<=s 29489@16,
(-29489)@16<=s L0x7fffffffd856,L0x7fffffffd856<=s 29489@16,
(-29687)@16<=s L0x7fffffffd828,L0x7fffffffd828<=s 29687@16,
(-29687)@16<=s L0x7fffffffd838,L0x7fffffffd838<=s 29687@16,
(-29687)@16<=s L0x7fffffffd848,L0x7fffffffd848<=s 29687@16,
(-29687)@16<=s L0x7fffffffd858,L0x7fffffffd858<=s 29687@16,
(-28349)@16<=s L0x7fffffffd82a,L0x7fffffffd82a<=s 28349@16,
(-28349)@16<=s L0x7fffffffd83a,L0x7fffffffd83a<=s 28349@16,
(-28349)@16<=s L0x7fffffffd84a,L0x7fffffffd84a<=s 28349@16,
(-28349)@16<=s L0x7fffffffd85a,L0x7fffffffd85a<=s 28349@16,
(-30506)@16<=s L0x7fffffffd82c,L0x7fffffffd82c<=s 30506@16,
(-30506)@16<=s L0x7fffffffd83c,L0x7fffffffd83c<=s 30506@16,
(-30506)@16<=s L0x7fffffffd84c,L0x7fffffffd84c<=s 30506@16,
(-30506)@16<=s L0x7fffffffd85c,L0x7fffffffd85c<=s 30506@16,
(-30057)@16<=s L0x7fffffffd82e,L0x7fffffffd82e<=s 30057@16,
(-30057)@16<=s L0x7fffffffd83e,L0x7fffffffd83e<=s 30057@16,
(-30057)@16<=s L0x7fffffffd84e,L0x7fffffffd84e<=s 30057@16,
(-30057)@16<=s L0x7fffffffd85e,L0x7fffffffd85e<=s 30057@16,
(-29527)@16<=s L0x7fffffffd860,L0x7fffffffd860<=s 29527@16,
(-29527)@16<=s L0x7fffffffd870,L0x7fffffffd870<=s 29527@16,
(-29527)@16<=s L0x7fffffffd880,L0x7fffffffd880<=s 29527@16,
(-29527)@16<=s L0x7fffffffd890,L0x7fffffffd890<=s 29527@16,
(-30394)@16<=s L0x7fffffffd862,L0x7fffffffd862<=s 30394@16,
(-30394)@16<=s L0x7fffffffd872,L0x7fffffffd872<=s 30394@16,
(-30394)@16<=s L0x7fffffffd882,L0x7fffffffd882<=s 30394@16,
(-30394)@16<=s L0x7fffffffd892,L0x7fffffffd892<=s 30394@16,
(-31923)@16<=s L0x7fffffffd864,L0x7fffffffd864<=s 31923@16,
(-31923)@16<=s L0x7fffffffd874,L0x7fffffffd874<=s 31923@16,
(-31923)@16<=s L0x7fffffffd884,L0x7fffffffd884<=s 31923@16,
(-31923)@16<=s L0x7fffffffd894,L0x7fffffffd894<=s 31923@16,
(-31742)@16<=s L0x7fffffffd866,L0x7fffffffd866<=s 31742@16,
(-31742)@16<=s L0x7fffffffd876,L0x7fffffffd876<=s 31742@16,
(-31742)@16<=s L0x7fffffffd886,L0x7fffffffd886<=s 31742@16,
(-31742)@16<=s L0x7fffffffd896,L0x7fffffffd896<=s 31742@16,
(-30698)@16<=s L0x7fffffffd868,L0x7fffffffd868<=s 30698@16,
(-30698)@16<=s L0x7fffffffd878,L0x7fffffffd878<=s 30698@16,
(-30698)@16<=s L0x7fffffffd888,L0x7fffffffd888<=s 30698@16,
(-30698)@16<=s L0x7fffffffd898,L0x7fffffffd898<=s 30698@16,
(-30423)@16<=s L0x7fffffffd86a,L0x7fffffffd86a<=s 30423@16,
(-30423)@16<=s L0x7fffffffd87a,L0x7fffffffd87a<=s 30423@16,
(-30423)@16<=s L0x7fffffffd88a,L0x7fffffffd88a<=s 30423@16,
(-30423)@16<=s L0x7fffffffd89a,L0x7fffffffd89a<=s 30423@16,
(-29945)@16<=s L0x7fffffffd86c,L0x7fffffffd86c<=s 29945@16,
(-29945)@16<=s L0x7fffffffd87c,L0x7fffffffd87c<=s 29945@16,
(-29945)@16<=s L0x7fffffffd88c,L0x7fffffffd88c<=s 29945@16,
(-29945)@16<=s L0x7fffffffd89c,L0x7fffffffd89c<=s 29945@16,
(-29394)@16<=s L0x7fffffffd86e,L0x7fffffffd86e<=s 29394@16,
(-29394)@16<=s L0x7fffffffd87e,L0x7fffffffd87e<=s 29394@16,
(-29394)@16<=s L0x7fffffffd88e,L0x7fffffffd88e<=s 29394@16,
(-29394)@16<=s L0x7fffffffd89e,L0x7fffffffd89e<=s 29394@16,
(-30735)@16<=s L0x7fffffffd8a0,L0x7fffffffd8a0<=s 30735@16,
(-30735)@16<=s L0x7fffffffd8b0,L0x7fffffffd8b0<=s 30735@16,
(-30735)@16<=s L0x7fffffffd8c0,L0x7fffffffd8c0<=s 30735@16,
(-30735)@16<=s L0x7fffffffd8d0,L0x7fffffffd8d0<=s 30735@16,
(-30101)@16<=s L0x7fffffffd8a2,L0x7fffffffd8a2<=s 30101@16,
(-30101)@16<=s L0x7fffffffd8b2,L0x7fffffffd8b2<=s 30101@16,
(-30101)@16<=s L0x7fffffffd8c2,L0x7fffffffd8c2<=s 30101@16,
(-30101)@16<=s L0x7fffffffd8d2,L0x7fffffffd8d2<=s 30101@16,
(-30525)@16<=s L0x7fffffffd8a4,L0x7fffffffd8a4<=s 30525@16,
(-30525)@16<=s L0x7fffffffd8b4,L0x7fffffffd8b4<=s 30525@16,
(-30525)@16<=s L0x7fffffffd8c4,L0x7fffffffd8c4<=s 30525@16,
(-30525)@16<=s L0x7fffffffd8d4,L0x7fffffffd8d4<=s 30525@16,
(-30808)@16<=s L0x7fffffffd8a6,L0x7fffffffd8a6<=s 30808@16,
(-30808)@16<=s L0x7fffffffd8b6,L0x7fffffffd8b6<=s 30808@16,
(-30808)@16<=s L0x7fffffffd8c6,L0x7fffffffd8c6<=s 30808@16,
(-30808)@16<=s L0x7fffffffd8d6,L0x7fffffffd8d6<=s 30808@16,
(-31676)@16<=s L0x7fffffffd8a8,L0x7fffffffd8a8<=s 31676@16,
(-31676)@16<=s L0x7fffffffd8b8,L0x7fffffffd8b8<=s 31676@16,
(-31676)@16<=s L0x7fffffffd8c8,L0x7fffffffd8c8<=s 31676@16,
(-31676)@16<=s L0x7fffffffd8d8,L0x7fffffffd8d8<=s 31676@16,
(-30502)@16<=s L0x7fffffffd8aa,L0x7fffffffd8aa<=s 30502@16,
(-30502)@16<=s L0x7fffffffd8ba,L0x7fffffffd8ba<=s 30502@16,
(-30502)@16<=s L0x7fffffffd8ca,L0x7fffffffd8ca<=s 30502@16,
(-30502)@16<=s L0x7fffffffd8da,L0x7fffffffd8da<=s 30502@16,
(-30256)@16<=s L0x7fffffffd8ac,L0x7fffffffd8ac<=s 30256@16,
(-30256)@16<=s L0x7fffffffd8bc,L0x7fffffffd8bc<=s 30256@16,
(-30256)@16<=s L0x7fffffffd8cc,L0x7fffffffd8cc<=s 30256@16,
(-30256)@16<=s L0x7fffffffd8dc,L0x7fffffffd8dc<=s 30256@16,
(-32217)@16<=s L0x7fffffffd8ae,L0x7fffffffd8ae<=s 32217@16,
(-32217)@16<=s L0x7fffffffd8be,L0x7fffffffd8be<=s 32217@16,
(-32217)@16<=s L0x7fffffffd8ce,L0x7fffffffd8ce<=s 32217@16,
(-32217)@16<=s L0x7fffffffd8de,L0x7fffffffd8de<=s 32217@16
,
(-30532)@16<=s L0x7fffffffd8e0,L0x7fffffffd8e0<=s 30532@16,
(-30532)@16<=s L0x7fffffffd8f0,L0x7fffffffd8f0<=s 30532@16,
(-30532)@16<=s L0x7fffffffd900,L0x7fffffffd900<=s 30532@16,
(-30532)@16<=s L0x7fffffffd910,L0x7fffffffd910<=s 30532@16,
(-30253)@16<=s L0x7fffffffd8e2,L0x7fffffffd8e2<=s 30253@16,
(-30253)@16<=s L0x7fffffffd8f2,L0x7fffffffd8f2<=s 30253@16,
(-30253)@16<=s L0x7fffffffd902,L0x7fffffffd902<=s 30253@16,
(-30253)@16<=s L0x7fffffffd912,L0x7fffffffd912<=s 30253@16,
(-31517)@16<=s L0x7fffffffd8e4,L0x7fffffffd8e4<=s 31517@16,
(-31517)@16<=s L0x7fffffffd8f4,L0x7fffffffd8f4<=s 31517@16,
(-31517)@16<=s L0x7fffffffd904,L0x7fffffffd904<=s 31517@16,
(-31517)@16<=s L0x7fffffffd914,L0x7fffffffd914<=s 31517@16,
(-29757)@16<=s L0x7fffffffd8e6,L0x7fffffffd8e6<=s 29757@16,
(-29757)@16<=s L0x7fffffffd8f6,L0x7fffffffd8f6<=s 29757@16,
(-29757)@16<=s L0x7fffffffd906,L0x7fffffffd906<=s 29757@16,
(-29757)@16<=s L0x7fffffffd916,L0x7fffffffd916<=s 29757@16,
(-31043)@16<=s L0x7fffffffd8e8,L0x7fffffffd8e8<=s 31043@16,
(-31043)@16<=s L0x7fffffffd8f8,L0x7fffffffd8f8<=s 31043@16,
(-31043)@16<=s L0x7fffffffd908,L0x7fffffffd908<=s 31043@16,
(-31043)@16<=s L0x7fffffffd918,L0x7fffffffd918<=s 31043@16,
(-30297)@16<=s L0x7fffffffd8ea,L0x7fffffffd8ea<=s 30297@16,
(-30297)@16<=s L0x7fffffffd8fa,L0x7fffffffd8fa<=s 30297@16,
(-30297)@16<=s L0x7fffffffd90a,L0x7fffffffd90a<=s 30297@16,
(-30297)@16<=s L0x7fffffffd91a,L0x7fffffffd91a<=s 30297@16,
(-29534)@16<=s L0x7fffffffd8ec,L0x7fffffffd8ec<=s 29534@16,
(-29534)@16<=s L0x7fffffffd8fc,L0x7fffffffd8fc<=s 29534@16,
(-29534)@16<=s L0x7fffffffd90c,L0x7fffffffd90c<=s 29534@16,
(-29534)@16<=s L0x7fffffffd91c,L0x7fffffffd91c<=s 29534@16,
(-28903)@16<=s L0x7fffffffd8ee,L0x7fffffffd8ee<=s 28903@16,
(-28903)@16<=s L0x7fffffffd8fe,L0x7fffffffd8fe<=s 28903@16,
(-28903)@16<=s L0x7fffffffd90e,L0x7fffffffd90e<=s 28903@16,
(-28903)@16<=s L0x7fffffffd91e,L0x7fffffffd91e<=s 28903@16,
(-31355)@16<=s L0x7fffffffd920,L0x7fffffffd920<=s 31355@16,
(-31355)@16<=s L0x7fffffffd930,L0x7fffffffd930<=s 31355@16,
(-31355)@16<=s L0x7fffffffd940,L0x7fffffffd940<=s 31355@16,
(-31355)@16<=s L0x7fffffffd950,L0x7fffffffd950<=s 31355@16,
(-30306)@16<=s L0x7fffffffd922,L0x7fffffffd922<=s 30306@16,
(-30306)@16<=s L0x7fffffffd932,L0x7fffffffd932<=s 30306@16,
(-30306)@16<=s L0x7fffffffd942,L0x7fffffffd942<=s 30306@16,
(-30306)@16<=s L0x7fffffffd952,L0x7fffffffd952<=s 30306@16,
(-30482)@16<=s L0x7fffffffd924,L0x7fffffffd924<=s 30482@16,
(-30482)@16<=s L0x7fffffffd934,L0x7fffffffd934<=s 30482@16,
(-30482)@16<=s L0x7fffffffd944,L0x7fffffffd944<=s 30482@16,
(-30482)@16<=s L0x7fffffffd954,L0x7fffffffd954<=s 30482@16,
(-28829)@16<=s L0x7fffffffd926,L0x7fffffffd926<=s 28829@16,
(-28829)@16<=s L0x7fffffffd936,L0x7fffffffd936<=s 28829@16,
(-28829)@16<=s L0x7fffffffd946,L0x7fffffffd946<=s 28829@16,
(-28829)@16<=s L0x7fffffffd956,L0x7fffffffd956<=s 28829@16,
(-30322)@16<=s L0x7fffffffd928,L0x7fffffffd928<=s 30322@16,
(-30322)@16<=s L0x7fffffffd938,L0x7fffffffd938<=s 30322@16,
(-30322)@16<=s L0x7fffffffd948,L0x7fffffffd948<=s 30322@16,
(-30322)@16<=s L0x7fffffffd958,L0x7fffffffd958<=s 30322@16,
(-30067)@16<=s L0x7fffffffd92a,L0x7fffffffd92a<=s 30067@16,
(-30067)@16<=s L0x7fffffffd93a,L0x7fffffffd93a<=s 30067@16,
(-30067)@16<=s L0x7fffffffd94a,L0x7fffffffd94a<=s 30067@16,
(-30067)@16<=s L0x7fffffffd95a,L0x7fffffffd95a<=s 30067@16,
(-29035)@16<=s L0x7fffffffd92c,L0x7fffffffd92c<=s 29035@16,
(-29035)@16<=s L0x7fffffffd93c,L0x7fffffffd93c<=s 29035@16,
(-29035)@16<=s L0x7fffffffd94c,L0x7fffffffd94c<=s 29035@16,
(-29035)@16<=s L0x7fffffffd95c,L0x7fffffffd95c<=s 29035@16,
(-28813)@16<=s L0x7fffffffd92e,L0x7fffffffd92e<=s 28813@16,
(-28813)@16<=s L0x7fffffffd93e,L0x7fffffffd93e<=s 28813@16,
(-28813)@16<=s L0x7fffffffd94e,L0x7fffffffd94e<=s 28813@16,
(-28813)@16<=s L0x7fffffffd95e,L0x7fffffffd95e<=s 28813@16,
(-31363)@16<=s L0x7fffffffd960,L0x7fffffffd960<=s 31363@16,
(-31363)@16<=s L0x7fffffffd970,L0x7fffffffd970<=s 31363@16,
(-31363)@16<=s L0x7fffffffd980,L0x7fffffffd980<=s 31363@16,
(-31363)@16<=s L0x7fffffffd990,L0x7fffffffd990<=s 31363@16,
(-31350)@16<=s L0x7fffffffd962,L0x7fffffffd962<=s 31350@16,
(-31350)@16<=s L0x7fffffffd972,L0x7fffffffd972<=s 31350@16,
(-31350)@16<=s L0x7fffffffd982,L0x7fffffffd982<=s 31350@16,
(-31350)@16<=s L0x7fffffffd992,L0x7fffffffd992<=s 31350@16,
(-29822)@16<=s L0x7fffffffd964,L0x7fffffffd964<=s 29822@16,
(-29822)@16<=s L0x7fffffffd974,L0x7fffffffd974<=s 29822@16,
(-29822)@16<=s L0x7fffffffd984,L0x7fffffffd984<=s 29822@16,
(-29822)@16<=s L0x7fffffffd994,L0x7fffffffd994<=s 29822@16,
(-30170)@16<=s L0x7fffffffd966,L0x7fffffffd966<=s 30170@16,
(-30170)@16<=s L0x7fffffffd976,L0x7fffffffd976<=s 30170@16,
(-30170)@16<=s L0x7fffffffd986,L0x7fffffffd986<=s 30170@16,
(-30170)@16<=s L0x7fffffffd996,L0x7fffffffd996<=s 30170@16,
(-30281)@16<=s L0x7fffffffd968,L0x7fffffffd968<=s 30281@16,
(-30281)@16<=s L0x7fffffffd978,L0x7fffffffd978<=s 30281@16,
(-30281)@16<=s L0x7fffffffd988,L0x7fffffffd988<=s 30281@16,
(-30281)@16<=s L0x7fffffffd998,L0x7fffffffd998<=s 30281@16,
(-30869)@16<=s L0x7fffffffd96a,L0x7fffffffd96a<=s 30869@16,
(-30869)@16<=s L0x7fffffffd97a,L0x7fffffffd97a<=s 30869@16,
(-30869)@16<=s L0x7fffffffd98a,L0x7fffffffd98a<=s 30869@16,
(-30869)@16<=s L0x7fffffffd99a,L0x7fffffffd99a<=s 30869@16,
(-29643)@16<=s L0x7fffffffd96c,L0x7fffffffd96c<=s 29643@16,
(-29643)@16<=s L0x7fffffffd97c,L0x7fffffffd97c<=s 29643@16,
(-29643)@16<=s L0x7fffffffd98c,L0x7fffffffd98c<=s 29643@16,
(-29643)@16<=s L0x7fffffffd99c,L0x7fffffffd99c<=s 29643@16,
(-30225)@16<=s L0x7fffffffd96e,L0x7fffffffd96e<=s 30225@16,
(-30225)@16<=s L0x7fffffffd97e,L0x7fffffffd97e<=s 30225@16,
(-30225)@16<=s L0x7fffffffd98e,L0x7fffffffd98e<=s 30225@16,
(-30225)@16<=s L0x7fffffffd99e,L0x7fffffffd99e<=s 30225@16,
(-29291)@16<=s L0x7fffffffd9a0,L0x7fffffffd9a0<=s 29291@16,
(-29291)@16<=s L0x7fffffffd9b0,L0x7fffffffd9b0<=s 29291@16,
(-29291)@16<=s L0x7fffffffd9c0,L0x7fffffffd9c0<=s 29291@16,
(-29291)@16<=s L0x7fffffffd9d0,L0x7fffffffd9d0<=s 29291@16,
(-28805)@16<=s L0x7fffffffd9a2,L0x7fffffffd9a2<=s 28805@16,
(-28805)@16<=s L0x7fffffffd9b2,L0x7fffffffd9b2<=s 28805@16,
(-28805)@16<=s L0x7fffffffd9c2,L0x7fffffffd9c2<=s 28805@16,
(-28805)@16<=s L0x7fffffffd9d2,L0x7fffffffd9d2<=s 28805@16,
(-29801)@16<=s L0x7fffffffd9a4,L0x7fffffffd9a4<=s 29801@16,
(-29801)@16<=s L0x7fffffffd9b4,L0x7fffffffd9b4<=s 29801@16,
(-29801)@16<=s L0x7fffffffd9c4,L0x7fffffffd9c4<=s 29801@16,
(-29801)@16<=s L0x7fffffffd9d4,L0x7fffffffd9d4<=s 29801@16,
(-29097)@16<=s L0x7fffffffd9a6,L0x7fffffffd9a6<=s 29097@16,
(-29097)@16<=s L0x7fffffffd9b6,L0x7fffffffd9b6<=s 29097@16,
(-29097)@16<=s L0x7fffffffd9c6,L0x7fffffffd9c6<=s 29097@16,
(-29097)@16<=s L0x7fffffffd9d6,L0x7fffffffd9d6<=s 29097@16,
(-28801)@16<=s L0x7fffffffd9a8,L0x7fffffffd9a8<=s 28801@16,
(-28801)@16<=s L0x7fffffffd9b8,L0x7fffffffd9b8<=s 28801@16,
(-28801)@16<=s L0x7fffffffd9c8,L0x7fffffffd9c8<=s 28801@16,
(-28801)@16<=s L0x7fffffffd9d8,L0x7fffffffd9d8<=s 28801@16,
(-29116)@16<=s L0x7fffffffd9aa,L0x7fffffffd9aa<=s 29116@16,
(-29116)@16<=s L0x7fffffffd9ba,L0x7fffffffd9ba<=s 29116@16,
(-29116)@16<=s L0x7fffffffd9ca,L0x7fffffffd9ca<=s 29116@16,
(-29116)@16<=s L0x7fffffffd9da,L0x7fffffffd9da<=s 29116@16,
(-30345)@16<=s L0x7fffffffd9ac,L0x7fffffffd9ac<=s 30345@16,
(-30345)@16<=s L0x7fffffffd9bc,L0x7fffffffd9bc<=s 30345@16,
(-30345)@16<=s L0x7fffffffd9cc,L0x7fffffffd9cc<=s 30345@16,
(-30345)@16<=s L0x7fffffffd9dc,L0x7fffffffd9dc<=s 30345@16,
(-29273)@16<=s L0x7fffffffd9ae,L0x7fffffffd9ae<=s 29273@16,
(-29273)@16<=s L0x7fffffffd9be,L0x7fffffffd9be<=s 29273@16,
(-29273)@16<=s L0x7fffffffd9ce,L0x7fffffffd9ce<=s 29273@16,
(-29273)@16<=s L0x7fffffffd9de,L0x7fffffffd9de<=s 29273@16
,
(-31298)@16<=s L0x7fffffffd9e0,L0x7fffffffd9e0<=s 31298@16,
(-31298)@16<=s L0x7fffffffd9f0,L0x7fffffffd9f0<=s 31298@16,
(-31298)@16<=s L0x7fffffffda00,L0x7fffffffda00<=s 31298@16,
(-31298)@16<=s L0x7fffffffda10,L0x7fffffffda10<=s 31298@16,
(-29564)@16<=s L0x7fffffffd9e2,L0x7fffffffd9e2<=s 29564@16,
(-29564)@16<=s L0x7fffffffd9f2,L0x7fffffffd9f2<=s 29564@16,
(-29564)@16<=s L0x7fffffffda02,L0x7fffffffda02<=s 29564@16,
(-29564)@16<=s L0x7fffffffda12,L0x7fffffffda12<=s 29564@16,
(-29540)@16<=s L0x7fffffffd9e4,L0x7fffffffd9e4<=s 29540@16,
(-29540)@16<=s L0x7fffffffd9f4,L0x7fffffffd9f4<=s 29540@16,
(-29540)@16<=s L0x7fffffffda04,L0x7fffffffda04<=s 29540@16,
(-29540)@16<=s L0x7fffffffda14,L0x7fffffffda14<=s 29540@16,
(-31125)@16<=s L0x7fffffffd9e6,L0x7fffffffd9e6<=s 31125@16,
(-31125)@16<=s L0x7fffffffd9f6,L0x7fffffffd9f6<=s 31125@16,
(-31125)@16<=s L0x7fffffffda06,L0x7fffffffda06<=s 31125@16,
(-31125)@16<=s L0x7fffffffda16,L0x7fffffffda16<=s 31125@16,
(-30130)@16<=s L0x7fffffffd9e8,L0x7fffffffd9e8<=s 30130@16,
(-30130)@16<=s L0x7fffffffd9f8,L0x7fffffffd9f8<=s 30130@16,
(-30130)@16<=s L0x7fffffffda08,L0x7fffffffda08<=s 30130@16,
(-30130)@16<=s L0x7fffffffda18,L0x7fffffffda18<=s 30130@16,
(-31447)@16<=s L0x7fffffffd9ea,L0x7fffffffd9ea<=s 31447@16,
(-31447)@16<=s L0x7fffffffd9fa,L0x7fffffffd9fa<=s 31447@16,
(-31447)@16<=s L0x7fffffffda0a,L0x7fffffffda0a<=s 31447@16,
(-31447)@16<=s L0x7fffffffda1a,L0x7fffffffda1a<=s 31447@16,
(-30590)@16<=s L0x7fffffffd9ec,L0x7fffffffd9ec<=s 30590@16,
(-30590)@16<=s L0x7fffffffd9fc,L0x7fffffffd9fc<=s 30590@16,
(-30590)@16<=s L0x7fffffffda0c,L0x7fffffffda0c<=s 30590@16,
(-30590)@16<=s L0x7fffffffda1c,L0x7fffffffda1c<=s 30590@16,
(-29686)@16<=s L0x7fffffffd9ee,L0x7fffffffd9ee<=s 29686@16,
(-29686)@16<=s L0x7fffffffd9fe,L0x7fffffffd9fe<=s 29686@16,
(-29686)@16<=s L0x7fffffffda0e,L0x7fffffffda0e<=s 29686@16,
(-29686)@16<=s L0x7fffffffda1e,L0x7fffffffda1e<=s 29686@16,
(-31650)@16<=s L0x7fffffffda20,L0x7fffffffda20<=s 31650@16,
(-31650)@16<=s L0x7fffffffda30,L0x7fffffffda30<=s 31650@16,
(-31650)@16<=s L0x7fffffffda40,L0x7fffffffda40<=s 31650@16,
(-31650)@16<=s L0x7fffffffda50,L0x7fffffffda50<=s 31650@16,
(-31626)@16<=s L0x7fffffffda22,L0x7fffffffda22<=s 31626@16,
(-31626)@16<=s L0x7fffffffda32,L0x7fffffffda32<=s 31626@16,
(-31626)@16<=s L0x7fffffffda42,L0x7fffffffda42<=s 31626@16,
(-31626)@16<=s L0x7fffffffda52,L0x7fffffffda52<=s 31626@16,
(-31302)@16<=s L0x7fffffffda24,L0x7fffffffda24<=s 31302@16,
(-31302)@16<=s L0x7fffffffda34,L0x7fffffffda34<=s 31302@16,
(-31302)@16<=s L0x7fffffffda44,L0x7fffffffda44<=s 31302@16,
(-31302)@16<=s L0x7fffffffda54,L0x7fffffffda54<=s 31302@16,
(-32319)@16<=s L0x7fffffffda26,L0x7fffffffda26<=s 32319@16,
(-32319)@16<=s L0x7fffffffda36,L0x7fffffffda36<=s 32319@16,
(-32319)@16<=s L0x7fffffffda46,L0x7fffffffda46<=s 32319@16,
(-32319)@16<=s L0x7fffffffda56,L0x7fffffffda56<=s 32319@16,
(-31476)@16<=s L0x7fffffffda28,L0x7fffffffda28<=s 31476@16,
(-31476)@16<=s L0x7fffffffda38,L0x7fffffffda38<=s 31476@16,
(-31476)@16<=s L0x7fffffffda48,L0x7fffffffda48<=s 31476@16,
(-31476)@16<=s L0x7fffffffda58,L0x7fffffffda58<=s 31476@16,
(-31427)@16<=s L0x7fffffffda2a,L0x7fffffffda2a<=s 31427@16,
(-31427)@16<=s L0x7fffffffda3a,L0x7fffffffda3a<=s 31427@16,
(-31427)@16<=s L0x7fffffffda4a,L0x7fffffffda4a<=s 31427@16,
(-31427)@16<=s L0x7fffffffda5a,L0x7fffffffda5a<=s 31427@16,
(-31228)@16<=s L0x7fffffffda2c,L0x7fffffffda2c<=s 31228@16,
(-31228)@16<=s L0x7fffffffda3c,L0x7fffffffda3c<=s 31228@16,
(-31228)@16<=s L0x7fffffffda4c,L0x7fffffffda4c<=s 31228@16,
(-31228)@16<=s L0x7fffffffda5c,L0x7fffffffda5c<=s 31228@16,
(-30316)@16<=s L0x7fffffffda2e,L0x7fffffffda2e<=s 30316@16,
(-30316)@16<=s L0x7fffffffda3e,L0x7fffffffda3e<=s 30316@16,
(-30316)@16<=s L0x7fffffffda4e,L0x7fffffffda4e<=s 30316@16,
(-30316)@16<=s L0x7fffffffda5e,L0x7fffffffda5e<=s 30316@16,
(-30984)@16<=s L0x7fffffffda60,L0x7fffffffda60<=s 30984@16,
(-30984)@16<=s L0x7fffffffda70,L0x7fffffffda70<=s 30984@16,
(-30984)@16<=s L0x7fffffffda80,L0x7fffffffda80<=s 30984@16,
(-30984)@16<=s L0x7fffffffda90,L0x7fffffffda90<=s 30984@16,
(-29179)@16<=s L0x7fffffffda62,L0x7fffffffda62<=s 29179@16,
(-29179)@16<=s L0x7fffffffda72,L0x7fffffffda72<=s 29179@16,
(-29179)@16<=s L0x7fffffffda82,L0x7fffffffda82<=s 29179@16,
(-29179)@16<=s L0x7fffffffda92,L0x7fffffffda92<=s 29179@16,
(-31436)@16<=s L0x7fffffffda64,L0x7fffffffda64<=s 31436@16,
(-31436)@16<=s L0x7fffffffda74,L0x7fffffffda74<=s 31436@16,
(-31436)@16<=s L0x7fffffffda84,L0x7fffffffda84<=s 31436@16,
(-31436)@16<=s L0x7fffffffda94,L0x7fffffffda94<=s 31436@16,
(-30357)@16<=s L0x7fffffffda66,L0x7fffffffda66<=s 30357@16,
(-30357)@16<=s L0x7fffffffda76,L0x7fffffffda76<=s 30357@16,
(-30357)@16<=s L0x7fffffffda86,L0x7fffffffda86<=s 30357@16,
(-30357)@16<=s L0x7fffffffda96,L0x7fffffffda96<=s 30357@16,
(-31678)@16<=s L0x7fffffffda68,L0x7fffffffda68<=s 31678@16,
(-31678)@16<=s L0x7fffffffda78,L0x7fffffffda78<=s 31678@16,
(-31678)@16<=s L0x7fffffffda88,L0x7fffffffda88<=s 31678@16,
(-31678)@16<=s L0x7fffffffda98,L0x7fffffffda98<=s 31678@16,
(-30683)@16<=s L0x7fffffffda6a,L0x7fffffffda6a<=s 30683@16,
(-30683)@16<=s L0x7fffffffda7a,L0x7fffffffda7a<=s 30683@16,
(-30683)@16<=s L0x7fffffffda8a,L0x7fffffffda8a<=s 30683@16,
(-30683)@16<=s L0x7fffffffda9a,L0x7fffffffda9a<=s 30683@16,
(-29955)@16<=s L0x7fffffffda6c,L0x7fffffffda6c<=s 29955@16,
(-29955)@16<=s L0x7fffffffda7c,L0x7fffffffda7c<=s 29955@16,
(-29955)@16<=s L0x7fffffffda8c,L0x7fffffffda8c<=s 29955@16,
(-29955)@16<=s L0x7fffffffda9c,L0x7fffffffda9c<=s 29955@16,
(-29974)@16<=s L0x7fffffffda6e,L0x7fffffffda6e<=s 29974@16,
(-29974)@16<=s L0x7fffffffda7e,L0x7fffffffda7e<=s 29974@16,
(-29974)@16<=s L0x7fffffffda8e,L0x7fffffffda8e<=s 29974@16,
(-29974)@16<=s L0x7fffffffda9e,L0x7fffffffda9e<=s 29974@16,
(-29704)@16<=s L0x7fffffffdaa0,L0x7fffffffdaa0<=s 29704@16,
(-29704)@16<=s L0x7fffffffdab0,L0x7fffffffdab0<=s 29704@16,
(-29704)@16<=s L0x7fffffffdac0,L0x7fffffffdac0<=s 29704@16,
(-29704)@16<=s L0x7fffffffdad0,L0x7fffffffdad0<=s 29704@16,
(-30042)@16<=s L0x7fffffffdaa2,L0x7fffffffdaa2<=s 30042@16,
(-30042)@16<=s L0x7fffffffdab2,L0x7fffffffdab2<=s 30042@16,
(-30042)@16<=s L0x7fffffffdac2,L0x7fffffffdac2<=s 30042@16,
(-30042)@16<=s L0x7fffffffdad2,L0x7fffffffdad2<=s 30042@16,
(-29791)@16<=s L0x7fffffffdaa4,L0x7fffffffdaa4<=s 29791@16,
(-29791)@16<=s L0x7fffffffdab4,L0x7fffffffdab4<=s 29791@16,
(-29791)@16<=s L0x7fffffffdac4,L0x7fffffffdac4<=s 29791@16,
(-29791)@16<=s L0x7fffffffdad4,L0x7fffffffdad4<=s 29791@16,
(-30166)@16<=s L0x7fffffffdaa6,L0x7fffffffdaa6<=s 30166@16,
(-30166)@16<=s L0x7fffffffdab6,L0x7fffffffdab6<=s 30166@16,
(-30166)@16<=s L0x7fffffffdac6,L0x7fffffffdac6<=s 30166@16,
(-30166)@16<=s L0x7fffffffdad6,L0x7fffffffdad6<=s 30166@16,
(-31148)@16<=s L0x7fffffffdaa8,L0x7fffffffdaa8<=s 31148@16,
(-31148)@16<=s L0x7fffffffdab8,L0x7fffffffdab8<=s 31148@16,
(-31148)@16<=s L0x7fffffffdac8,L0x7fffffffdac8<=s 31148@16,
(-31148)@16<=s L0x7fffffffdad8,L0x7fffffffdad8<=s 31148@16,
(-31146)@16<=s L0x7fffffffdaaa,L0x7fffffffdaaa<=s 31146@16,
(-31146)@16<=s L0x7fffffffdaba,L0x7fffffffdaba<=s 31146@16,
(-31146)@16<=s L0x7fffffffdaca,L0x7fffffffdaca<=s 31146@16,
(-31146)@16<=s L0x7fffffffdada,L0x7fffffffdada<=s 31146@16,
(-29702)@16<=s L0x7fffffffdaac,L0x7fffffffdaac<=s 29702@16,
(-29702)@16<=s L0x7fffffffdabc,L0x7fffffffdabc<=s 29702@16,
(-29702)@16<=s L0x7fffffffdacc,L0x7fffffffdacc<=s 29702@16,
(-29702)@16<=s L0x7fffffffdadc,L0x7fffffffdadc<=s 29702@16,
(-30657)@16<=s L0x7fffffffdaae,L0x7fffffffdaae<=s 30657@16,
(-30657)@16<=s L0x7fffffffdabe,L0x7fffffffdabe<=s 30657@16,
(-30657)@16<=s L0x7fffffffdace,L0x7fffffffdace<=s 30657@16,
(-30657)@16<=s L0x7fffffffdade,L0x7fffffffdade<=s 30657@16
] prove with [ cuts [ 3, 6, 9, 12, 15, 18, 21, 24 ] ]
}