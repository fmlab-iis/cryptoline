_gf256v_madd_u64:
# %rdi = 0x7fffffffd940
# %rsi = 0x7ffff78bbbe0
# %rdx = 0xe9
# %rcx = 0x2c
# %r8  = 0x0
# %r9  = 0x5
	#! -> SP = 0x7fffffffd898
	push   %rbp                                     #! EA = L0x7fffffffd890; PC = 0x5555555565d0
	mov    %ecx,%r10d                               #! PC = 0x5555555565d1
	mov    %rsp,%rbp                                #! PC = 0x5555555565d4
	push   %r15                                     #! EA = L0x7fffffffd888; PC = 0x5555555565d7
	mov    %rsi,%r15                                #! PC = 0x5555555565d9
	push   %r14                                     #! EA = L0x7fffffffd880; PC = 0x5555555565dc
	mov    %edx,%r14d                               #! PC = 0x5555555565de
	push   %r13                                     #! EA = L0x7fffffffd878; PC = 0x5555555565e1
	push   %r12                                     #! EA = L0x7fffffffd870; PC = 0x5555555565e3
	mov    %rdi,%r12                                #! PC = 0x5555555565e5
	push   %rbx                                     #! EA = L0x7fffffffd868; PC = 0x5555555565e8
	sub    $0x28,%rsp                               #! PC = 0x5555555565e9
	mov    %fs:0x28,%rax                            #! PC = 0x5555555565ed
	mov    %rax,-0x38(%rbp)                         #! EA = L0x7fffffffd858; PC = 0x5555555565f6
	mov    %rsi,%rax                                #! PC = 0x5555555565fa
	or     %rdi,%rax                                #! PC = 0x5555555565fd
	test   $0x7,%al                                 #! PC = 0x555555556600
	#je     0x55555555671e <_gf256v_madd_u64+334>   #! PC = 0x555555556602
	mov    %rsi,%r11                                #! PC = 0x55555555671e
	cmp    $0x7,%ecx                                #! PC = 0x555555556721
	#jbe    0x555555556670 <_gf256v_madd_u64+160>   #! PC = 0x555555556724
	mov    -0x38(%rbp),%rax                         #! EA = L0x7fffffffd858; Value = 0x7c997405dc5da200; PC = 0x55555555672a
	sub    %fs:0x28,%rax                            #! PC = 0x55555555672e
	#jne    0x555555556757 <_gf256v_madd_u64+391>   #! PC = 0x555555556737
	add    $0x28,%rsp                               #! PC = 0x555555556739
	movzbl %dl,%edx                                 #! PC = 0x55555555673d
	pop    %rbx                                     #! EA = L0x7fffffffd868; Value = 0x00007ffff78bb031; PC = 0x555555556740
	pop    %r12                                     #! EA = L0x7fffffffd870; Value = 0x000000000000002c; PC = 0x555555556741
	pop    %r13                                     #! EA = L0x7fffffffd878; Value = 0x00007fffffffd940; PC = 0x555555556743
	pop    %r14                                     #! EA = L0x7fffffffd880; Value = 0x00007ffff78bbbe0; PC = 0x555555556745
	pop    %r15                                     #! EA = L0x7fffffffd888; Value = 0x00007ffff78bb074; PC = 0x555555556747
	pop    %rbp                                     #! EA = L0x7fffffffd890; Value = 0x00007fffffffd8e0; PC = 0x555555556749
	#jmp    0x5555555564a0 <_gf256v_madd_u64_aligned>#! PC = 0x55555555674a
	push   %rbp                                     #! EA = L0x7fffffffd890; PC = 0x5555555564a0
	mov    %rsi,%r10                                #! PC = 0x5555555564a1
	mov    %ecx,%r11d                               #! PC = 0x5555555564a4
	mov    %rsp,%rbp                                #! PC = 0x5555555564a7
	push   %r15                                     #! EA = L0x7fffffffd888; PC = 0x5555555564aa
	push   %r14                                     #! EA = L0x7fffffffd880; PC = 0x5555555564ac
	push   %r13                                     #! EA = L0x7fffffffd878; PC = 0x5555555564ae
	push   %r12                                     #! EA = L0x7fffffffd870; PC = 0x5555555564b0
	mov    %rdi,%r12                                #! PC = 0x5555555564b2
	push   %rbx                                     #! EA = L0x7fffffffd868; PC = 0x5555555564b5
	sub    $0x28,%rsp                               #! PC = 0x5555555564b6
	mov    %edx,-0x44(%rbp)                         #! EA = L0x7fffffffd84c; PC = 0x5555555564ba
	mov    %fs:0x28,%rax                            #! PC = 0x5555555564bd
	mov    %rax,-0x38(%rbp)                         #! EA = L0x7fffffffd858; PC = 0x5555555564c6
	xor    %eax,%eax                                #! PC = 0x5555555564ca
	cmp    $0x7,%ecx                                #! PC = 0x5555555564cc
	#jbe    0x5555555565c0 <_gf256v_madd_u64_aligned+288>#! PC = 0x5555555564cf
	lea    -0x8(%rcx),%r13d                         #! PC = 0x5555555564d5
	movzbl %dl,%r14d                                #! PC = 0x5555555564d9
	mov    %rdi,%r15                                #! PC = 0x5555555564dd
	shr    $0x3,%r13d                               #! PC = 0x5555555564e0
	add    $0x1,%r13d                               #! PC = 0x5555555564e4
	shl    $0x3,%r13                                #! PC = 0x5555555564e8
	lea    (%rsi,%r13,1),%rbx                       #! PC = 0x5555555564ec
	mov    (%r10),%rdi                              #! EA = L0x7ffff78bbbe0; Value = 0x062f1744fe86539b; PC = 0x5555555564f0
	mov    %r14d,%esi                               #! PC = 0x5555555564f3
	add    $0x8,%r10                                #! PC = 0x5555555564f6
	#call   0x555555555b30 <gf256v_mul_u64>         #! PC = 0x5555555564fa
	#! -> SP = 0x7fffffffd838
	movzbl %sil,%eax                                #! PC = 0x555555555b30
	and    $0x1,%esi                                #! PC = 0x555555555b34
	mov    %rdi,%rdx                                #! PC = 0x555555555b37
	movabs $0x101010101010101,%r8                   #! PC = 0x555555555b3a
	imul   %rdi,%rsi                                #! PC = 0x555555555b44
	add    %rdx,%rdx                                #! PC = 0x555555555b48
	movabs $0xfefefefefefefefe,%r9                  #! PC = 0x555555555b4b
	and    %r9,%rdx                                 #! PC = 0x555555555b55
	mov    %rsi,%rcx                                #! PC = 0x555555555b58
	mov    %rdi,%rsi                                #! PC = 0x555555555b5b
	shr    $0x7,%rsi                                #! PC = 0x555555555b5e
	and    %r8,%rsi                                 #! PC = 0x555555555b62
	lea    (%rsi,%rsi,2),%rsi                       #! PC = 0x555555555b65
	lea    (%rsi,%rsi,8),%rdi                       #! PC = 0x555555555b69
	mov    %rax,%rsi                                #! PC = 0x555555555b6d
	shr    %rsi                                     #! PC = 0x555555555b70
	xor    %rdx,%rdi                                #! PC = 0x555555555b73
	and    $0x1,%esi                                #! PC = 0x555555555b76
	lea    (%rdi,%rdi,1),%rdx                       #! PC = 0x555555555b79
	imul   %rdi,%rsi                                #! PC = 0x555555555b7d
	shr    $0x7,%rdi                                #! PC = 0x555555555b81
	and    %r9,%rdx                                 #! PC = 0x555555555b85
	and    %r8,%rdi                                 #! PC = 0x555555555b88
	xor    %rcx,%rsi                                #! PC = 0x555555555b8b
	lea    (%rdi,%rdi,2),%rcx                       #! PC = 0x555555555b8e
	mov    %rax,%rdi                                #! PC = 0x555555555b92
	lea    (%rcx,%rcx,8),%rcx                       #! PC = 0x555555555b95
	shr    $0x2,%rdi                                #! PC = 0x555555555b99
	xor    %rcx,%rdx                                #! PC = 0x555555555b9d
	and    $0x1,%edi                                #! PC = 0x555555555ba0
	imul   %rdx,%rdi                                #! PC = 0x555555555ba3
	lea    (%rdx,%rdx,1),%rcx                       #! PC = 0x555555555ba7
	shr    $0x7,%rdx                                #! PC = 0x555555555bab
	and    %r8,%rdx                                 #! PC = 0x555555555baf
	and    %r9,%rcx                                 #! PC = 0x555555555bb2
	lea    (%rdx,%rdx,2),%rdx                       #! PC = 0x555555555bb5
	xor    %rsi,%rdi                                #! PC = 0x555555555bb9
	mov    %rax,%rsi                                #! PC = 0x555555555bbc
	lea    (%rdx,%rdx,8),%rdx                       #! PC = 0x555555555bbf
	shr    $0x3,%rsi                                #! PC = 0x555555555bc3
	xor    %rdx,%rcx                                #! PC = 0x555555555bc7
	and    $0x1,%esi                                #! PC = 0x555555555bca
	lea    (%rcx,%rcx,1),%rdx                       #! PC = 0x555555555bcd
	imul   %rcx,%rsi                                #! PC = 0x555555555bd1
	shr    $0x7,%rcx                                #! PC = 0x555555555bd5
	and    %r9,%rdx                                 #! PC = 0x555555555bd9
	and    %r8,%rcx                                 #! PC = 0x555555555bdc
	lea    (%rcx,%rcx,2),%rcx                       #! PC = 0x555555555bdf
	xor    %rdi,%rsi                                #! PC = 0x555555555be3
	mov    %rax,%rdi                                #! PC = 0x555555555be6
	lea    (%rcx,%rcx,8),%rcx                       #! PC = 0x555555555be9
	shr    $0x4,%rdi                                #! PC = 0x555555555bed
	xor    %rcx,%rdx                                #! PC = 0x555555555bf1
	and    $0x1,%edi                                #! PC = 0x555555555bf4
	lea    (%rdx,%rdx,1),%rcx                       #! PC = 0x555555555bf7
	imul   %rdx,%rdi                                #! PC = 0x555555555bfb
	shr    $0x7,%rdx                                #! PC = 0x555555555bff
	and    %r9,%rcx                                 #! PC = 0x555555555c03
	and    %r8,%rdx                                 #! PC = 0x555555555c06
	lea    (%rdx,%rdx,2),%rdx                       #! PC = 0x555555555c09
	xor    %rsi,%rdi                                #! PC = 0x555555555c0d
	mov    %rax,%rsi                                #! PC = 0x555555555c10
	lea    (%rdx,%rdx,8),%rdx                       #! PC = 0x555555555c13
	shr    $0x5,%rsi                                #! PC = 0x555555555c17
	xor    %rdx,%rcx                                #! PC = 0x555555555c1b
	and    $0x1,%esi                                #! PC = 0x555555555c1e
	lea    (%rcx,%rcx,1),%rdx                       #! PC = 0x555555555c21
	imul   %rcx,%rsi                                #! PC = 0x555555555c25
	shr    $0x7,%rcx                                #! PC = 0x555555555c29
	and    %r9,%rdx                                 #! PC = 0x555555555c2d
	and    %r8,%rcx                                 #! PC = 0x555555555c30
	lea    (%rcx,%rcx,2),%rcx                       #! PC = 0x555555555c33
	lea    (%rcx,%rcx,8),%rcx                       #! PC = 0x555555555c37
	xor    %rdi,%rsi                                #! PC = 0x555555555c3b
	xor    %rcx,%rdx                                #! PC = 0x555555555c3e
	mov    %rax,%rcx                                #! PC = 0x555555555c41
	shr    $0x7,%rax                                #! PC = 0x555555555c44
	shr    $0x6,%rcx                                #! PC = 0x555555555c48
	and    $0x1,%ecx                                #! PC = 0x555555555c4c
	imul   %rdx,%rcx                                #! PC = 0x555555555c4f
	xor    %rsi,%rcx                                #! PC = 0x555555555c53
	lea    (%rdx,%rdx,1),%rsi                       #! PC = 0x555555555c56
	shr    $0x7,%rdx                                #! PC = 0x555555555c5a
	and    %r8,%rdx                                 #! PC = 0x555555555c5e
	and    %r9,%rsi                                 #! PC = 0x555555555c61
	lea    (%rdx,%rdx,2),%rdx                       #! PC = 0x555555555c64
	lea    (%rdx,%rdx,8),%rdx                       #! PC = 0x555555555c68
	xor    %rsi,%rdx                                #! PC = 0x555555555c6c
	imul   %rdx,%rax                                #! PC = 0x555555555c6f
	xor    %rcx,%rax                                #! PC = 0x555555555c73
	#! <- SP = 0x7fffffffd838
	#ret                                            #! PC = 0x555555555c76
	xor    %rax,(%r15)                              #! EA = L0x7fffffffd940; PC = 0x5555555564ff
	add    $0x8,%r15                                #! PC = 0x555555556502
	cmp    %rbx,%r10                                #! PC = 0x555555556506
	#jne    0x5555555564f0 <_gf256v_madd_u64_aligned+80>#! PC = 0x555555556509
	mov    (%r10),%rdi                              #! EA = L0x7ffff78bbbe8; Value = 0x6fd8d3e7d71e86aa; PC = 0x5555555564f0
	mov    %r14d,%esi                               #! PC = 0x5555555564f3
	add    $0x8,%r10                                #! PC = 0x5555555564f6
	#call   0x555555555b30 <gf256v_mul_u64>         #! PC = 0x5555555564fa
	#! -> SP = 0x7fffffffd838
	movzbl %sil,%eax                                #! PC = 0x555555555b30
	and    $0x1,%esi                                #! PC = 0x555555555b34
	mov    %rdi,%rdx                                #! PC = 0x555555555b37
	movabs $0x101010101010101,%r8                   #! PC = 0x555555555b3a
	imul   %rdi,%rsi                                #! PC = 0x555555555b44
	add    %rdx,%rdx                                #! PC = 0x555555555b48
	movabs $0xfefefefefefefefe,%r9                  #! PC = 0x555555555b4b
	and    %r9,%rdx                                 #! PC = 0x555555555b55
	mov    %rsi,%rcx                                #! PC = 0x555555555b58
	mov    %rdi,%rsi                                #! PC = 0x555555555b5b
	shr    $0x7,%rsi                                #! PC = 0x555555555b5e
	and    %r8,%rsi                                 #! PC = 0x555555555b62
	lea    (%rsi,%rsi,2),%rsi                       #! PC = 0x555555555b65
	lea    (%rsi,%rsi,8),%rdi                       #! PC = 0x555555555b69
	mov    %rax,%rsi                                #! PC = 0x555555555b6d
	shr    %rsi                                     #! PC = 0x555555555b70
	xor    %rdx,%rdi                                #! PC = 0x555555555b73
	and    $0x1,%esi                                #! PC = 0x555555555b76
	lea    (%rdi,%rdi,1),%rdx                       #! PC = 0x555555555b79
	imul   %rdi,%rsi                                #! PC = 0x555555555b7d
	shr    $0x7,%rdi                                #! PC = 0x555555555b81
	and    %r9,%rdx                                 #! PC = 0x555555555b85
	and    %r8,%rdi                                 #! PC = 0x555555555b88
	xor    %rcx,%rsi                                #! PC = 0x555555555b8b
	lea    (%rdi,%rdi,2),%rcx                       #! PC = 0x555555555b8e
	mov    %rax,%rdi                                #! PC = 0x555555555b92
	lea    (%rcx,%rcx,8),%rcx                       #! PC = 0x555555555b95
	shr    $0x2,%rdi                                #! PC = 0x555555555b99
	xor    %rcx,%rdx                                #! PC = 0x555555555b9d
	and    $0x1,%edi                                #! PC = 0x555555555ba0
	imul   %rdx,%rdi                                #! PC = 0x555555555ba3
	lea    (%rdx,%rdx,1),%rcx                       #! PC = 0x555555555ba7
	shr    $0x7,%rdx                                #! PC = 0x555555555bab
	and    %r8,%rdx                                 #! PC = 0x555555555baf
	and    %r9,%rcx                                 #! PC = 0x555555555bb2
	lea    (%rdx,%rdx,2),%rdx                       #! PC = 0x555555555bb5
	xor    %rsi,%rdi                                #! PC = 0x555555555bb9
	mov    %rax,%rsi                                #! PC = 0x555555555bbc
	lea    (%rdx,%rdx,8),%rdx                       #! PC = 0x555555555bbf
	shr    $0x3,%rsi                                #! PC = 0x555555555bc3
	xor    %rdx,%rcx                                #! PC = 0x555555555bc7
	and    $0x1,%esi                                #! PC = 0x555555555bca
	lea    (%rcx,%rcx,1),%rdx                       #! PC = 0x555555555bcd
	imul   %rcx,%rsi                                #! PC = 0x555555555bd1
	shr    $0x7,%rcx                                #! PC = 0x555555555bd5
	and    %r9,%rdx                                 #! PC = 0x555555555bd9
	and    %r8,%rcx                                 #! PC = 0x555555555bdc
	lea    (%rcx,%rcx,2),%rcx                       #! PC = 0x555555555bdf
	xor    %rdi,%rsi                                #! PC = 0x555555555be3
	mov    %rax,%rdi                                #! PC = 0x555555555be6
	lea    (%rcx,%rcx,8),%rcx                       #! PC = 0x555555555be9
	shr    $0x4,%rdi                                #! PC = 0x555555555bed
	xor    %rcx,%rdx                                #! PC = 0x555555555bf1
	and    $0x1,%edi                                #! PC = 0x555555555bf4
	lea    (%rdx,%rdx,1),%rcx                       #! PC = 0x555555555bf7
	imul   %rdx,%rdi                                #! PC = 0x555555555bfb
	shr    $0x7,%rdx                                #! PC = 0x555555555bff
	and    %r9,%rcx                                 #! PC = 0x555555555c03
	and    %r8,%rdx                                 #! PC = 0x555555555c06
	lea    (%rdx,%rdx,2),%rdx                       #! PC = 0x555555555c09
	xor    %rsi,%rdi                                #! PC = 0x555555555c0d
	mov    %rax,%rsi                                #! PC = 0x555555555c10
	lea    (%rdx,%rdx,8),%rdx                       #! PC = 0x555555555c13
	shr    $0x5,%rsi                                #! PC = 0x555555555c17
	xor    %rdx,%rcx                                #! PC = 0x555555555c1b
	and    $0x1,%esi                                #! PC = 0x555555555c1e
	lea    (%rcx,%rcx,1),%rdx                       #! PC = 0x555555555c21
	imul   %rcx,%rsi                                #! PC = 0x555555555c25
	shr    $0x7,%rcx                                #! PC = 0x555555555c29
	and    %r9,%rdx                                 #! PC = 0x555555555c2d
	and    %r8,%rcx                                 #! PC = 0x555555555c30
	lea    (%rcx,%rcx,2),%rcx                       #! PC = 0x555555555c33
	lea    (%rcx,%rcx,8),%rcx                       #! PC = 0x555555555c37
	xor    %rdi,%rsi                                #! PC = 0x555555555c3b
	xor    %rcx,%rdx                                #! PC = 0x555555555c3e
	mov    %rax,%rcx                                #! PC = 0x555555555c41
	shr    $0x7,%rax                                #! PC = 0x555555555c44
	shr    $0x6,%rcx                                #! PC = 0x555555555c48
	and    $0x1,%ecx                                #! PC = 0x555555555c4c
	imul   %rdx,%rcx                                #! PC = 0x555555555c4f
	xor    %rsi,%rcx                                #! PC = 0x555555555c53
	lea    (%rdx,%rdx,1),%rsi                       #! PC = 0x555555555c56
	shr    $0x7,%rdx                                #! PC = 0x555555555c5a
	and    %r8,%rdx                                 #! PC = 0x555555555c5e
	and    %r9,%rsi                                 #! PC = 0x555555555c61
	lea    (%rdx,%rdx,2),%rdx                       #! PC = 0x555555555c64
	lea    (%rdx,%rdx,8),%rdx                       #! PC = 0x555555555c68
	xor    %rsi,%rdx                                #! PC = 0x555555555c6c
	imul   %rdx,%rax                                #! PC = 0x555555555c6f
	xor    %rcx,%rax                                #! PC = 0x555555555c73
	#! <- SP = 0x7fffffffd838
	#ret                                            #! PC = 0x555555555c76
	xor    %rax,(%r15)                              #! EA = L0x7fffffffd948; PC = 0x5555555564ff
	add    $0x8,%r15                                #! PC = 0x555555556502
	cmp    %rbx,%r10                                #! PC = 0x555555556506
	#jne    0x5555555564f0 <_gf256v_madd_u64_aligned+80>#! PC = 0x555555556509
	mov    (%r10),%rdi                              #! EA = L0x7ffff78bbbf0; Value = 0x70b6d46c82b0d172; PC = 0x5555555564f0
	mov    %r14d,%esi                               #! PC = 0x5555555564f3
	add    $0x8,%r10                                #! PC = 0x5555555564f6
	#call   0x555555555b30 <gf256v_mul_u64>         #! PC = 0x5555555564fa
	#! -> SP = 0x7fffffffd838
	movzbl %sil,%eax                                #! PC = 0x555555555b30
	and    $0x1,%esi                                #! PC = 0x555555555b34
	mov    %rdi,%rdx                                #! PC = 0x555555555b37
	movabs $0x101010101010101,%r8                   #! PC = 0x555555555b3a
	imul   %rdi,%rsi                                #! PC = 0x555555555b44
	add    %rdx,%rdx                                #! PC = 0x555555555b48
	movabs $0xfefefefefefefefe,%r9                  #! PC = 0x555555555b4b
	and    %r9,%rdx                                 #! PC = 0x555555555b55
	mov    %rsi,%rcx                                #! PC = 0x555555555b58
	mov    %rdi,%rsi                                #! PC = 0x555555555b5b
	shr    $0x7,%rsi                                #! PC = 0x555555555b5e
	and    %r8,%rsi                                 #! PC = 0x555555555b62
	lea    (%rsi,%rsi,2),%rsi                       #! PC = 0x555555555b65
	lea    (%rsi,%rsi,8),%rdi                       #! PC = 0x555555555b69
	mov    %rax,%rsi                                #! PC = 0x555555555b6d
	shr    %rsi                                     #! PC = 0x555555555b70
	xor    %rdx,%rdi                                #! PC = 0x555555555b73
	and    $0x1,%esi                                #! PC = 0x555555555b76
	lea    (%rdi,%rdi,1),%rdx                       #! PC = 0x555555555b79
	imul   %rdi,%rsi                                #! PC = 0x555555555b7d
	shr    $0x7,%rdi                                #! PC = 0x555555555b81
	and    %r9,%rdx                                 #! PC = 0x555555555b85
	and    %r8,%rdi                                 #! PC = 0x555555555b88
	xor    %rcx,%rsi                                #! PC = 0x555555555b8b
	lea    (%rdi,%rdi,2),%rcx                       #! PC = 0x555555555b8e
	mov    %rax,%rdi                                #! PC = 0x555555555b92
	lea    (%rcx,%rcx,8),%rcx                       #! PC = 0x555555555b95
	shr    $0x2,%rdi                                #! PC = 0x555555555b99
	xor    %rcx,%rdx                                #! PC = 0x555555555b9d
	and    $0x1,%edi                                #! PC = 0x555555555ba0
	imul   %rdx,%rdi                                #! PC = 0x555555555ba3
	lea    (%rdx,%rdx,1),%rcx                       #! PC = 0x555555555ba7
	shr    $0x7,%rdx                                #! PC = 0x555555555bab
	and    %r8,%rdx                                 #! PC = 0x555555555baf
	and    %r9,%rcx                                 #! PC = 0x555555555bb2
	lea    (%rdx,%rdx,2),%rdx                       #! PC = 0x555555555bb5
	xor    %rsi,%rdi                                #! PC = 0x555555555bb9
	mov    %rax,%rsi                                #! PC = 0x555555555bbc
	lea    (%rdx,%rdx,8),%rdx                       #! PC = 0x555555555bbf
	shr    $0x3,%rsi                                #! PC = 0x555555555bc3
	xor    %rdx,%rcx                                #! PC = 0x555555555bc7
	and    $0x1,%esi                                #! PC = 0x555555555bca
	lea    (%rcx,%rcx,1),%rdx                       #! PC = 0x555555555bcd
	imul   %rcx,%rsi                                #! PC = 0x555555555bd1
	shr    $0x7,%rcx                                #! PC = 0x555555555bd5
	and    %r9,%rdx                                 #! PC = 0x555555555bd9
	and    %r8,%rcx                                 #! PC = 0x555555555bdc
	lea    (%rcx,%rcx,2),%rcx                       #! PC = 0x555555555bdf
	xor    %rdi,%rsi                                #! PC = 0x555555555be3
	mov    %rax,%rdi                                #! PC = 0x555555555be6
	lea    (%rcx,%rcx,8),%rcx                       #! PC = 0x555555555be9
	shr    $0x4,%rdi                                #! PC = 0x555555555bed
	xor    %rcx,%rdx                                #! PC = 0x555555555bf1
	and    $0x1,%edi                                #! PC = 0x555555555bf4
	lea    (%rdx,%rdx,1),%rcx                       #! PC = 0x555555555bf7
	imul   %rdx,%rdi                                #! PC = 0x555555555bfb
	shr    $0x7,%rdx                                #! PC = 0x555555555bff
	and    %r9,%rcx                                 #! PC = 0x555555555c03
	and    %r8,%rdx                                 #! PC = 0x555555555c06
	lea    (%rdx,%rdx,2),%rdx                       #! PC = 0x555555555c09
	xor    %rsi,%rdi                                #! PC = 0x555555555c0d
	mov    %rax,%rsi                                #! PC = 0x555555555c10
	lea    (%rdx,%rdx,8),%rdx                       #! PC = 0x555555555c13
	shr    $0x5,%rsi                                #! PC = 0x555555555c17
	xor    %rdx,%rcx                                #! PC = 0x555555555c1b
	and    $0x1,%esi                                #! PC = 0x555555555c1e
	lea    (%rcx,%rcx,1),%rdx                       #! PC = 0x555555555c21
	imul   %rcx,%rsi                                #! PC = 0x555555555c25
	shr    $0x7,%rcx                                #! PC = 0x555555555c29
	and    %r9,%rdx                                 #! PC = 0x555555555c2d
	and    %r8,%rcx                                 #! PC = 0x555555555c30
	lea    (%rcx,%rcx,2),%rcx                       #! PC = 0x555555555c33
	lea    (%rcx,%rcx,8),%rcx                       #! PC = 0x555555555c37
	xor    %rdi,%rsi                                #! PC = 0x555555555c3b
	xor    %rcx,%rdx                                #! PC = 0x555555555c3e
	mov    %rax,%rcx                                #! PC = 0x555555555c41
	shr    $0x7,%rax                                #! PC = 0x555555555c44
	shr    $0x6,%rcx                                #! PC = 0x555555555c48
	and    $0x1,%ecx                                #! PC = 0x555555555c4c
	imul   %rdx,%rcx                                #! PC = 0x555555555c4f
	xor    %rsi,%rcx                                #! PC = 0x555555555c53
	lea    (%rdx,%rdx,1),%rsi                       #! PC = 0x555555555c56
	shr    $0x7,%rdx                                #! PC = 0x555555555c5a
	and    %r8,%rdx                                 #! PC = 0x555555555c5e
	and    %r9,%rsi                                 #! PC = 0x555555555c61
	lea    (%rdx,%rdx,2),%rdx                       #! PC = 0x555555555c64
	lea    (%rdx,%rdx,8),%rdx                       #! PC = 0x555555555c68
	xor    %rsi,%rdx                                #! PC = 0x555555555c6c
	imul   %rdx,%rax                                #! PC = 0x555555555c6f
	xor    %rcx,%rax                                #! PC = 0x555555555c73
	#! <- SP = 0x7fffffffd838
	#ret                                            #! PC = 0x555555555c76
	xor    %rax,(%r15)                              #! EA = L0x7fffffffd950; PC = 0x5555555564ff
	add    $0x8,%r15                                #! PC = 0x555555556502
	cmp    %rbx,%r10                                #! PC = 0x555555556506
	#jne    0x5555555564f0 <_gf256v_madd_u64_aligned+80>#! PC = 0x555555556509
	mov    (%r10),%rdi                              #! EA = L0x7ffff78bbbf8; Value = 0xbbe5c5611ae60ce5; PC = 0x5555555564f0
	mov    %r14d,%esi                               #! PC = 0x5555555564f3
	add    $0x8,%r10                                #! PC = 0x5555555564f6
	#call   0x555555555b30 <gf256v_mul_u64>         #! PC = 0x5555555564fa
	#! -> SP = 0x7fffffffd838
	movzbl %sil,%eax                                #! PC = 0x555555555b30
	and    $0x1,%esi                                #! PC = 0x555555555b34
	mov    %rdi,%rdx                                #! PC = 0x555555555b37
	movabs $0x101010101010101,%r8                   #! PC = 0x555555555b3a
	imul   %rdi,%rsi                                #! PC = 0x555555555b44
	add    %rdx,%rdx                                #! PC = 0x555555555b48
	movabs $0xfefefefefefefefe,%r9                  #! PC = 0x555555555b4b
	and    %r9,%rdx                                 #! PC = 0x555555555b55
	mov    %rsi,%rcx                                #! PC = 0x555555555b58
	mov    %rdi,%rsi                                #! PC = 0x555555555b5b
	shr    $0x7,%rsi                                #! PC = 0x555555555b5e
	and    %r8,%rsi                                 #! PC = 0x555555555b62
	lea    (%rsi,%rsi,2),%rsi                       #! PC = 0x555555555b65
	lea    (%rsi,%rsi,8),%rdi                       #! PC = 0x555555555b69
	mov    %rax,%rsi                                #! PC = 0x555555555b6d
	shr    %rsi                                     #! PC = 0x555555555b70
	xor    %rdx,%rdi                                #! PC = 0x555555555b73
	and    $0x1,%esi                                #! PC = 0x555555555b76
	lea    (%rdi,%rdi,1),%rdx                       #! PC = 0x555555555b79
	imul   %rdi,%rsi                                #! PC = 0x555555555b7d
	shr    $0x7,%rdi                                #! PC = 0x555555555b81
	and    %r9,%rdx                                 #! PC = 0x555555555b85
	and    %r8,%rdi                                 #! PC = 0x555555555b88
	xor    %rcx,%rsi                                #! PC = 0x555555555b8b
	lea    (%rdi,%rdi,2),%rcx                       #! PC = 0x555555555b8e
	mov    %rax,%rdi                                #! PC = 0x555555555b92
	lea    (%rcx,%rcx,8),%rcx                       #! PC = 0x555555555b95
	shr    $0x2,%rdi                                #! PC = 0x555555555b99
	xor    %rcx,%rdx                                #! PC = 0x555555555b9d
	and    $0x1,%edi                                #! PC = 0x555555555ba0
	imul   %rdx,%rdi                                #! PC = 0x555555555ba3
	lea    (%rdx,%rdx,1),%rcx                       #! PC = 0x555555555ba7
	shr    $0x7,%rdx                                #! PC = 0x555555555bab
	and    %r8,%rdx                                 #! PC = 0x555555555baf
	and    %r9,%rcx                                 #! PC = 0x555555555bb2
	lea    (%rdx,%rdx,2),%rdx                       #! PC = 0x555555555bb5
	xor    %rsi,%rdi                                #! PC = 0x555555555bb9
	mov    %rax,%rsi                                #! PC = 0x555555555bbc
	lea    (%rdx,%rdx,8),%rdx                       #! PC = 0x555555555bbf
	shr    $0x3,%rsi                                #! PC = 0x555555555bc3
	xor    %rdx,%rcx                                #! PC = 0x555555555bc7
	and    $0x1,%esi                                #! PC = 0x555555555bca
	lea    (%rcx,%rcx,1),%rdx                       #! PC = 0x555555555bcd
	imul   %rcx,%rsi                                #! PC = 0x555555555bd1
	shr    $0x7,%rcx                                #! PC = 0x555555555bd5
	and    %r9,%rdx                                 #! PC = 0x555555555bd9
	and    %r8,%rcx                                 #! PC = 0x555555555bdc
	lea    (%rcx,%rcx,2),%rcx                       #! PC = 0x555555555bdf
	xor    %rdi,%rsi                                #! PC = 0x555555555be3
	mov    %rax,%rdi                                #! PC = 0x555555555be6
	lea    (%rcx,%rcx,8),%rcx                       #! PC = 0x555555555be9
	shr    $0x4,%rdi                                #! PC = 0x555555555bed
	xor    %rcx,%rdx                                #! PC = 0x555555555bf1
	and    $0x1,%edi                                #! PC = 0x555555555bf4
	lea    (%rdx,%rdx,1),%rcx                       #! PC = 0x555555555bf7
	imul   %rdx,%rdi                                #! PC = 0x555555555bfb
	shr    $0x7,%rdx                                #! PC = 0x555555555bff
	and    %r9,%rcx                                 #! PC = 0x555555555c03
	and    %r8,%rdx                                 #! PC = 0x555555555c06
	lea    (%rdx,%rdx,2),%rdx                       #! PC = 0x555555555c09
	xor    %rsi,%rdi                                #! PC = 0x555555555c0d
	mov    %rax,%rsi                                #! PC = 0x555555555c10
	lea    (%rdx,%rdx,8),%rdx                       #! PC = 0x555555555c13
	shr    $0x5,%rsi                                #! PC = 0x555555555c17
	xor    %rdx,%rcx                                #! PC = 0x555555555c1b
	and    $0x1,%esi                                #! PC = 0x555555555c1e
	lea    (%rcx,%rcx,1),%rdx                       #! PC = 0x555555555c21
	imul   %rcx,%rsi                                #! PC = 0x555555555c25
	shr    $0x7,%rcx                                #! PC = 0x555555555c29
	and    %r9,%rdx                                 #! PC = 0x555555555c2d
	and    %r8,%rcx                                 #! PC = 0x555555555c30
	lea    (%rcx,%rcx,2),%rcx                       #! PC = 0x555555555c33
	lea    (%rcx,%rcx,8),%rcx                       #! PC = 0x555555555c37
	xor    %rdi,%rsi                                #! PC = 0x555555555c3b
	xor    %rcx,%rdx                                #! PC = 0x555555555c3e
	mov    %rax,%rcx                                #! PC = 0x555555555c41
	shr    $0x7,%rax                                #! PC = 0x555555555c44
	shr    $0x6,%rcx                                #! PC = 0x555555555c48
	and    $0x1,%ecx                                #! PC = 0x555555555c4c
	imul   %rdx,%rcx                                #! PC = 0x555555555c4f
	xor    %rsi,%rcx                                #! PC = 0x555555555c53
	lea    (%rdx,%rdx,1),%rsi                       #! PC = 0x555555555c56
	shr    $0x7,%rdx                                #! PC = 0x555555555c5a
	and    %r8,%rdx                                 #! PC = 0x555555555c5e
	and    %r9,%rsi                                 #! PC = 0x555555555c61
	lea    (%rdx,%rdx,2),%rdx                       #! PC = 0x555555555c64
	lea    (%rdx,%rdx,8),%rdx                       #! PC = 0x555555555c68
	xor    %rsi,%rdx                                #! PC = 0x555555555c6c
	imul   %rdx,%rax                                #! PC = 0x555555555c6f
	xor    %rcx,%rax                                #! PC = 0x555555555c73
	#! <- SP = 0x7fffffffd838
	#ret                                            #! PC = 0x555555555c76
	xor    %rax,(%r15)                              #! EA = L0x7fffffffd958; PC = 0x5555555564ff
	add    $0x8,%r15                                #! PC = 0x555555556502
	cmp    %rbx,%r10                                #! PC = 0x555555556506
	#jne    0x5555555564f0 <_gf256v_madd_u64_aligned+80>#! PC = 0x555555556509
	mov    (%r10),%rdi                              #! EA = L0x7ffff78bbc00; Value = 0xd6368892d1f5ad41; PC = 0x5555555564f0
	mov    %r14d,%esi                               #! PC = 0x5555555564f3
	add    $0x8,%r10                                #! PC = 0x5555555564f6
	#call   0x555555555b30 <gf256v_mul_u64>         #! PC = 0x5555555564fa
	#! -> SP = 0x7fffffffd838
	movzbl %sil,%eax                                #! PC = 0x555555555b30
	and    $0x1,%esi                                #! PC = 0x555555555b34
	mov    %rdi,%rdx                                #! PC = 0x555555555b37
	movabs $0x101010101010101,%r8                   #! PC = 0x555555555b3a
	imul   %rdi,%rsi                                #! PC = 0x555555555b44
	add    %rdx,%rdx                                #! PC = 0x555555555b48
	movabs $0xfefefefefefefefe,%r9                  #! PC = 0x555555555b4b
	and    %r9,%rdx                                 #! PC = 0x555555555b55
	mov    %rsi,%rcx                                #! PC = 0x555555555b58
	mov    %rdi,%rsi                                #! PC = 0x555555555b5b
	shr    $0x7,%rsi                                #! PC = 0x555555555b5e
	and    %r8,%rsi                                 #! PC = 0x555555555b62
	lea    (%rsi,%rsi,2),%rsi                       #! PC = 0x555555555b65
	lea    (%rsi,%rsi,8),%rdi                       #! PC = 0x555555555b69
	mov    %rax,%rsi                                #! PC = 0x555555555b6d
	shr    %rsi                                     #! PC = 0x555555555b70
	xor    %rdx,%rdi                                #! PC = 0x555555555b73
	and    $0x1,%esi                                #! PC = 0x555555555b76
	lea    (%rdi,%rdi,1),%rdx                       #! PC = 0x555555555b79
	imul   %rdi,%rsi                                #! PC = 0x555555555b7d
	shr    $0x7,%rdi                                #! PC = 0x555555555b81
	and    %r9,%rdx                                 #! PC = 0x555555555b85
	and    %r8,%rdi                                 #! PC = 0x555555555b88
	xor    %rcx,%rsi                                #! PC = 0x555555555b8b
	lea    (%rdi,%rdi,2),%rcx                       #! PC = 0x555555555b8e
	mov    %rax,%rdi                                #! PC = 0x555555555b92
	lea    (%rcx,%rcx,8),%rcx                       #! PC = 0x555555555b95
	shr    $0x2,%rdi                                #! PC = 0x555555555b99
	xor    %rcx,%rdx                                #! PC = 0x555555555b9d
	and    $0x1,%edi                                #! PC = 0x555555555ba0
	imul   %rdx,%rdi                                #! PC = 0x555555555ba3
	lea    (%rdx,%rdx,1),%rcx                       #! PC = 0x555555555ba7
	shr    $0x7,%rdx                                #! PC = 0x555555555bab
	and    %r8,%rdx                                 #! PC = 0x555555555baf
	and    %r9,%rcx                                 #! PC = 0x555555555bb2
	lea    (%rdx,%rdx,2),%rdx                       #! PC = 0x555555555bb5
	xor    %rsi,%rdi                                #! PC = 0x555555555bb9
	mov    %rax,%rsi                                #! PC = 0x555555555bbc
	lea    (%rdx,%rdx,8),%rdx                       #! PC = 0x555555555bbf
	shr    $0x3,%rsi                                #! PC = 0x555555555bc3
	xor    %rdx,%rcx                                #! PC = 0x555555555bc7
	and    $0x1,%esi                                #! PC = 0x555555555bca
	lea    (%rcx,%rcx,1),%rdx                       #! PC = 0x555555555bcd
	imul   %rcx,%rsi                                #! PC = 0x555555555bd1
	shr    $0x7,%rcx                                #! PC = 0x555555555bd5
	and    %r9,%rdx                                 #! PC = 0x555555555bd9
	and    %r8,%rcx                                 #! PC = 0x555555555bdc
	lea    (%rcx,%rcx,2),%rcx                       #! PC = 0x555555555bdf
	xor    %rdi,%rsi                                #! PC = 0x555555555be3
	mov    %rax,%rdi                                #! PC = 0x555555555be6
	lea    (%rcx,%rcx,8),%rcx                       #! PC = 0x555555555be9
	shr    $0x4,%rdi                                #! PC = 0x555555555bed
	xor    %rcx,%rdx                                #! PC = 0x555555555bf1
	and    $0x1,%edi                                #! PC = 0x555555555bf4
	lea    (%rdx,%rdx,1),%rcx                       #! PC = 0x555555555bf7
	imul   %rdx,%rdi                                #! PC = 0x555555555bfb
	shr    $0x7,%rdx                                #! PC = 0x555555555bff
	and    %r9,%rcx                                 #! PC = 0x555555555c03
	and    %r8,%rdx                                 #! PC = 0x555555555c06
	lea    (%rdx,%rdx,2),%rdx                       #! PC = 0x555555555c09
	xor    %rsi,%rdi                                #! PC = 0x555555555c0d
	mov    %rax,%rsi                                #! PC = 0x555555555c10
	lea    (%rdx,%rdx,8),%rdx                       #! PC = 0x555555555c13
	shr    $0x5,%rsi                                #! PC = 0x555555555c17
	xor    %rdx,%rcx                                #! PC = 0x555555555c1b
	and    $0x1,%esi                                #! PC = 0x555555555c1e
	lea    (%rcx,%rcx,1),%rdx                       #! PC = 0x555555555c21
	imul   %rcx,%rsi                                #! PC = 0x555555555c25
	shr    $0x7,%rcx                                #! PC = 0x555555555c29
	and    %r9,%rdx                                 #! PC = 0x555555555c2d
	and    %r8,%rcx                                 #! PC = 0x555555555c30
	lea    (%rcx,%rcx,2),%rcx                       #! PC = 0x555555555c33
	lea    (%rcx,%rcx,8),%rcx                       #! PC = 0x555555555c37
	xor    %rdi,%rsi                                #! PC = 0x555555555c3b
	xor    %rcx,%rdx                                #! PC = 0x555555555c3e
	mov    %rax,%rcx                                #! PC = 0x555555555c41
	shr    $0x7,%rax                                #! PC = 0x555555555c44
	shr    $0x6,%rcx                                #! PC = 0x555555555c48
	and    $0x1,%ecx                                #! PC = 0x555555555c4c
	imul   %rdx,%rcx                                #! PC = 0x555555555c4f
	xor    %rsi,%rcx                                #! PC = 0x555555555c53
	lea    (%rdx,%rdx,1),%rsi                       #! PC = 0x555555555c56
	shr    $0x7,%rdx                                #! PC = 0x555555555c5a
	and    %r8,%rdx                                 #! PC = 0x555555555c5e
	and    %r9,%rsi                                 #! PC = 0x555555555c61
	lea    (%rdx,%rdx,2),%rdx                       #! PC = 0x555555555c64
	lea    (%rdx,%rdx,8),%rdx                       #! PC = 0x555555555c68
	xor    %rsi,%rdx                                #! PC = 0x555555555c6c
	imul   %rdx,%rax                                #! PC = 0x555555555c6f
	xor    %rcx,%rax                                #! PC = 0x555555555c73
	#! <- SP = 0x7fffffffd838
	#ret                                            #! PC = 0x555555555c76
	xor    %rax,(%r15)                              #! EA = L0x7fffffffd960; PC = 0x5555555564ff
	add    $0x8,%r15                                #! PC = 0x555555556502
	cmp    %rbx,%r10                                #! PC = 0x555555556506
	#jne    0x5555555564f0 <_gf256v_madd_u64_aligned+80>#! PC = 0x555555556509
	add    %r13,%r12                                #! PC = 0x55555555650b
	and    $0x7,%r11d                               #! PC = 0x55555555650e
	lea    -0x40(%rbp),%rsi                         #! PC = 0x555555556512
	xor    %eax,%eax                                #! PC = 0x555555556516
	test   %r11d,%r11d                              #! PC = 0x555555556518
	#je     0x5555555565a1 <_gf256v_madd_u64_aligned+257>#! PC = 0x55555555651b
	mov    %eax,%edx                                #! PC = 0x555555556521
	add    $0x1,%eax                                #! PC = 0x555555556523
	movzbl (%rbx,%rdx,1),%ecx                       #! EA = L0x7ffff78bbc08; Value = 0x2b386d4c28dad157; PC = 0x555555556526
	mov    %cl,(%rsi,%rdx,1)                        #! EA = L0x7fffffffd850; PC = 0x55555555652a
	cmp    %r11d,%eax                               #! PC = 0x55555555652d
	#jb     0x555555556521 <_gf256v_madd_u64_aligned+129>#! PC = 0x555555556530
	mov    %eax,%edx                                #! PC = 0x555555556521
	add    $0x1,%eax                                #! PC = 0x555555556523
	movzbl (%rbx,%rdx,1),%ecx                       #! EA = L0x7ffff78bbc09; Value = 0x012b386d4c28dad1; PC = 0x555555556526
	mov    %cl,(%rsi,%rdx,1)                        #! EA = L0x7fffffffd851; PC = 0x55555555652a
	cmp    %r11d,%eax                               #! PC = 0x55555555652d
	#jb     0x555555556521 <_gf256v_madd_u64_aligned+129>#! PC = 0x555555556530
	mov    %eax,%edx                                #! PC = 0x555555556521
	add    $0x1,%eax                                #! PC = 0x555555556523
	movzbl (%rbx,%rdx,1),%ecx                       #! EA = L0x7ffff78bbc0a; Value = 0xc3012b386d4c28da; PC = 0x555555556526
	mov    %cl,(%rsi,%rdx,1)                        #! EA = L0x7fffffffd852; PC = 0x55555555652a
	cmp    %r11d,%eax                               #! PC = 0x55555555652d
	#jb     0x555555556521 <_gf256v_madd_u64_aligned+129>#! PC = 0x555555556530
	mov    %eax,%edx                                #! PC = 0x555555556521
	add    $0x1,%eax                                #! PC = 0x555555556523
	movzbl (%rbx,%rdx,1),%ecx                       #! EA = L0x7ffff78bbc0b; Value = 0xebc3012b386d4c28; PC = 0x555555556526
	mov    %cl,(%rsi,%rdx,1)                        #! EA = L0x7fffffffd853; PC = 0x55555555652a
	cmp    %r11d,%eax                               #! PC = 0x55555555652d
	#jb     0x555555556521 <_gf256v_madd_u64_aligned+129>#! PC = 0x555555556530
	mov    -0x40(%rbp),%rdi                         #! EA = L0x7fffffffd850; Value = 0x089ae26b28dad157; PC = 0x555555556532
	movzbl -0x44(%rbp),%esi                         #! EA = L0x7fffffffd84c; Value = 0x28dad157000000e9; PC = 0x555555556536
	#call   0x555555555b30 <gf256v_mul_u64>         #! PC = 0x55555555653a
	#! -> SP = 0x7fffffffd838
	movzbl %sil,%eax                                #! PC = 0x555555555b30
	and    $0x1,%esi                                #! PC = 0x555555555b34
	mov    %rdi,%rdx                                #! PC = 0x555555555b37
	movabs $0x101010101010101,%r8                   #! PC = 0x555555555b3a
	imul   %rdi,%rsi                                #! PC = 0x555555555b44
	add    %rdx,%rdx                                #! PC = 0x555555555b48
	movabs $0xfefefefefefefefe,%r9                  #! PC = 0x555555555b4b
	and    %r9,%rdx                                 #! PC = 0x555555555b55
	mov    %rsi,%rcx                                #! PC = 0x555555555b58
	mov    %rdi,%rsi                                #! PC = 0x555555555b5b
	shr    $0x7,%rsi                                #! PC = 0x555555555b5e
	and    %r8,%rsi                                 #! PC = 0x555555555b62
	lea    (%rsi,%rsi,2),%rsi                       #! PC = 0x555555555b65
	lea    (%rsi,%rsi,8),%rdi                       #! PC = 0x555555555b69
	mov    %rax,%rsi                                #! PC = 0x555555555b6d
	shr    %rsi                                     #! PC = 0x555555555b70
	xor    %rdx,%rdi                                #! PC = 0x555555555b73
	and    $0x1,%esi                                #! PC = 0x555555555b76
	lea    (%rdi,%rdi,1),%rdx                       #! PC = 0x555555555b79
	imul   %rdi,%rsi                                #! PC = 0x555555555b7d
	shr    $0x7,%rdi                                #! PC = 0x555555555b81
	and    %r9,%rdx                                 #! PC = 0x555555555b85
	and    %r8,%rdi                                 #! PC = 0x555555555b88
	xor    %rcx,%rsi                                #! PC = 0x555555555b8b
	lea    (%rdi,%rdi,2),%rcx                       #! PC = 0x555555555b8e
	mov    %rax,%rdi                                #! PC = 0x555555555b92
	lea    (%rcx,%rcx,8),%rcx                       #! PC = 0x555555555b95
	shr    $0x2,%rdi                                #! PC = 0x555555555b99
	xor    %rcx,%rdx                                #! PC = 0x555555555b9d
	and    $0x1,%edi                                #! PC = 0x555555555ba0
	imul   %rdx,%rdi                                #! PC = 0x555555555ba3
	lea    (%rdx,%rdx,1),%rcx                       #! PC = 0x555555555ba7
	shr    $0x7,%rdx                                #! PC = 0x555555555bab
	and    %r8,%rdx                                 #! PC = 0x555555555baf
	and    %r9,%rcx                                 #! PC = 0x555555555bb2
	lea    (%rdx,%rdx,2),%rdx                       #! PC = 0x555555555bb5
	xor    %rsi,%rdi                                #! PC = 0x555555555bb9
	mov    %rax,%rsi                                #! PC = 0x555555555bbc
	lea    (%rdx,%rdx,8),%rdx                       #! PC = 0x555555555bbf
	shr    $0x3,%rsi                                #! PC = 0x555555555bc3
	xor    %rdx,%rcx                                #! PC = 0x555555555bc7
	and    $0x1,%esi                                #! PC = 0x555555555bca
	lea    (%rcx,%rcx,1),%rdx                       #! PC = 0x555555555bcd
	imul   %rcx,%rsi                                #! PC = 0x555555555bd1
	shr    $0x7,%rcx                                #! PC = 0x555555555bd5
	and    %r9,%rdx                                 #! PC = 0x555555555bd9
	and    %r8,%rcx                                 #! PC = 0x555555555bdc
	lea    (%rcx,%rcx,2),%rcx                       #! PC = 0x555555555bdf
	xor    %rdi,%rsi                                #! PC = 0x555555555be3
	mov    %rax,%rdi                                #! PC = 0x555555555be6
	lea    (%rcx,%rcx,8),%rcx                       #! PC = 0x555555555be9
	shr    $0x4,%rdi                                #! PC = 0x555555555bed
	xor    %rcx,%rdx                                #! PC = 0x555555555bf1
	and    $0x1,%edi                                #! PC = 0x555555555bf4
	lea    (%rdx,%rdx,1),%rcx                       #! PC = 0x555555555bf7
	imul   %rdx,%rdi                                #! PC = 0x555555555bfb
	shr    $0x7,%rdx                                #! PC = 0x555555555bff
	and    %r9,%rcx                                 #! PC = 0x555555555c03
	and    %r8,%rdx                                 #! PC = 0x555555555c06
	lea    (%rdx,%rdx,2),%rdx                       #! PC = 0x555555555c09
	xor    %rsi,%rdi                                #! PC = 0x555555555c0d
	mov    %rax,%rsi                                #! PC = 0x555555555c10
	lea    (%rdx,%rdx,8),%rdx                       #! PC = 0x555555555c13
	shr    $0x5,%rsi                                #! PC = 0x555555555c17
	xor    %rdx,%rcx                                #! PC = 0x555555555c1b
	and    $0x1,%esi                                #! PC = 0x555555555c1e
	lea    (%rcx,%rcx,1),%rdx                       #! PC = 0x555555555c21
	imul   %rcx,%rsi                                #! PC = 0x555555555c25
	shr    $0x7,%rcx                                #! PC = 0x555555555c29
	and    %r9,%rdx                                 #! PC = 0x555555555c2d
	and    %r8,%rcx                                 #! PC = 0x555555555c30
	lea    (%rcx,%rcx,2),%rcx                       #! PC = 0x555555555c33
	lea    (%rcx,%rcx,8),%rcx                       #! PC = 0x555555555c37
	xor    %rdi,%rsi                                #! PC = 0x555555555c3b
	xor    %rcx,%rdx                                #! PC = 0x555555555c3e
	mov    %rax,%rcx                                #! PC = 0x555555555c41
	shr    $0x7,%rax                                #! PC = 0x555555555c44
	shr    $0x6,%rcx                                #! PC = 0x555555555c48
	and    $0x1,%ecx                                #! PC = 0x555555555c4c
	imul   %rdx,%rcx                                #! PC = 0x555555555c4f
	xor    %rsi,%rcx                                #! PC = 0x555555555c53
	lea    (%rdx,%rdx,1),%rsi                       #! PC = 0x555555555c56
	shr    $0x7,%rdx                                #! PC = 0x555555555c5a
	and    %r8,%rdx                                 #! PC = 0x555555555c5e
	and    %r9,%rsi                                 #! PC = 0x555555555c61
	lea    (%rdx,%rdx,2),%rdx                       #! PC = 0x555555555c64
	lea    (%rdx,%rdx,8),%rdx                       #! PC = 0x555555555c68
	xor    %rsi,%rdx                                #! PC = 0x555555555c6c
	imul   %rdx,%rax                                #! PC = 0x555555555c6f
	xor    %rcx,%rax                                #! PC = 0x555555555c73
	#! <- SP = 0x7fffffffd838
	#ret                                            #! PC = 0x555555555c76
	xor    %al,(%r12)                               #! EA = L0x7fffffffd968; PC = 0x55555555653f
	mov    %rax,-0x40(%rbp)                         #! EA = L0x7fffffffd850; PC = 0x555555556543
	cmp    $0x1,%r11d                               #! PC = 0x555555556547
	#je     0x5555555565a1 <_gf256v_madd_u64_aligned+257>#! PC = 0x55555555654b
	movzbl -0x3f(%rbp),%eax                         #! EA = L0x7fffffffd851; Value = 0x00094235452d0a23; PC = 0x55555555654d
	xor    %al,0x1(%r12)                            #! EA = L0x7fffffffd969; PC = 0x555555556551
	cmp    $0x2,%r11d                               #! PC = 0x555555556556
	#je     0x5555555565a1 <_gf256v_madd_u64_aligned+257>#! PC = 0x55555555655a
	movzbl -0x3e(%rbp),%eax                         #! EA = L0x7fffffffd852; Value = 0xa200094235452d0a; PC = 0x55555555655c
	xor    %al,0x2(%r12)                            #! EA = L0x7fffffffd96a; PC = 0x555555556560
	cmp    $0x3,%r11d                               #! PC = 0x555555556565
	#je     0x5555555565a1 <_gf256v_madd_u64_aligned+257>#! PC = 0x555555556569
	movzbl -0x3d(%rbp),%eax                         #! EA = L0x7fffffffd853; Value = 0x5da200094235452d; PC = 0x55555555656b
	xor    %al,0x3(%r12)                            #! EA = L0x7fffffffd96b; PC = 0x55555555656f
	cmp    $0x4,%r11d                               #! PC = 0x555555556574
	#je     0x5555555565a1 <_gf256v_madd_u64_aligned+257>#! PC = 0x555555556578
	mov    -0x38(%rbp),%rax                         #! EA = L0x7fffffffd858; Value = 0x7c997405dc5da200; PC = 0x5555555565a1
	sub    %fs:0x28,%rax                            #! PC = 0x5555555565a5
	#jne    0x5555555565c8 <_gf256v_madd_u64_aligned+296>#! PC = 0x5555555565ae
	add    $0x28,%rsp                               #! PC = 0x5555555565b0
	pop    %rbx                                     #! EA = L0x7fffffffd868; Value = 0x00007ffff78bb031; PC = 0x5555555565b4
	pop    %r12                                     #! EA = L0x7fffffffd870; Value = 0x000000000000002c; PC = 0x5555555565b5
	pop    %r13                                     #! EA = L0x7fffffffd878; Value = 0x00007fffffffd940; PC = 0x5555555565b7
	pop    %r14                                     #! EA = L0x7fffffffd880; Value = 0x00007ffff78bbbe0; PC = 0x5555555565b9
	pop    %r15                                     #! EA = L0x7fffffffd888; Value = 0x00007ffff78bb074; PC = 0x5555555565bb
	pop    %rbp                                     #! EA = L0x7fffffffd890; Value = 0x00007fffffffd8e0; PC = 0x5555555565bd
	#! <- SP = 0x7fffffffd898
	#ret                                            #! PC = 0x5555555565be
