_gf256v_mul_scalar_u64:
# %rdi = 0x7ffffffface0
# %rsi = 0x54
# %rdx = 0x30
# %rcx = 0x100
# %r8  = 0x0
# %r9  = 0x14f
	#! -> SP = 0x7fffffffac68
	push   %rbp                                     #! EA = L0x7fffffffac60; PC = 0x5555555563a0
	mov    %rdi,%r10                                #! PC = 0x5555555563a1
	mov    %edx,%r11d                               #! PC = 0x5555555563a4
	mov    %rsp,%rbp                                #! PC = 0x5555555563a7
	push   %r13                                     #! EA = L0x7fffffffac58; PC = 0x5555555563aa
	mov    %esi,%r13d                               #! PC = 0x5555555563ac
	push   %r12                                     #! EA = L0x7fffffffac50; PC = 0x5555555563af
	push   %rbx                                     #! EA = L0x7fffffffac48; PC = 0x5555555563b1
	sub    $0x18,%rsp                               #! PC = 0x5555555563b2
	mov    %fs:0x28,%rax                            #! PC = 0x5555555563b6
	mov    %rax,-0x28(%rbp)                         #! EA = L0x7fffffffac38; PC = 0x5555555563bf
	xor    %eax,%eax                                #! PC = 0x5555555563c3
	and    $0x7,%edi                                #! PC = 0x5555555563c5
	#jne    0x555555556439 <_gf256v_mul_scalar_u64+153>#! PC = 0x5555555563c8
	cmp    $0x7,%edx                                #! PC = 0x5555555563ca
	#ja     0x555555556475 <_gf256v_mul_scalar_u64+213>#! PC = 0x5555555563cd
	mov    -0x28(%rbp),%rax                         #! EA = L0x7fffffffac38; Value = 0xbee116706e9a4300; PC = 0x555555556475
	sub    %fs:0x28,%rax                            #! PC = 0x555555556479
	#jne    0x55555555649a <_gf256v_mul_scalar_u64+250>#! PC = 0x555555556482
	add    $0x18,%rsp                               #! PC = 0x555555556484
	movzbl %sil,%esi                                #! PC = 0x555555556488
	mov    %r10,%rdi                                #! PC = 0x55555555648c
	pop    %rbx                                     #! EA = L0x7fffffffac48; Value = 0x00007ffffffface0; PC = 0x55555555648f
	pop    %r12                                     #! EA = L0x7fffffffac50; Value = 0x0000000000000000; PC = 0x555555556490
	pop    %r13                                     #! EA = L0x7fffffffac58; Value = 0x0000000000000180; PC = 0x555555556492
	pop    %rbp                                     #! EA = L0x7fffffffac60; Value = 0x00007fffffffacd0; PC = 0x555555556494
	#jmp    0x5555555562c0 <_gf256v_mul_scalar_u64_aligned>#! PC = 0x555555556495
	push   %rbp                                     #! EA = L0x7fffffffac60; PC = 0x5555555562c0
	mov    %rdi,%r10                                #! PC = 0x5555555562c1
	mov    %rsp,%rbp                                #! PC = 0x5555555562c4
	push   %r13                                     #! EA = L0x7fffffffac58; PC = 0x5555555562c7
	mov    %esi,%r13d                               #! PC = 0x5555555562c9
	push   %r12                                     #! EA = L0x7fffffffac50; PC = 0x5555555562cc
	push   %rbx                                     #! EA = L0x7fffffffac48; PC = 0x5555555562ce
	mov    %edx,%ebx                                #! PC = 0x5555555562cf
	sub    $0x18,%rsp                               #! PC = 0x5555555562d1
	mov    %fs:0x28,%rax                            #! PC = 0x5555555562d5
	mov    %rax,-0x28(%rbp)                         #! EA = L0x7fffffffac38; PC = 0x5555555562de
	xor    %eax,%eax                                #! PC = 0x5555555562e2
	cmp    $0x7,%edx                                #! PC = 0x5555555562e4
	#jbe    0x555555556388 <_gf256v_mul_scalar_u64_aligned+200>#! PC = 0x5555555562e7
	lea    -0x8(%rdx),%eax                          #! PC = 0x5555555562ed
	movzbl %sil,%r12d                               #! PC = 0x5555555562f0
	shr    $0x3,%eax                                #! PC = 0x5555555562f4
	add    $0x1,%eax                                #! PC = 0x5555555562f7
	lea    (%rdi,%rax,8),%r11                       #! PC = 0x5555555562fa
	xchg   %ax,%ax                                  #! PC = 0x5555555562fe
	mov    (%r10),%rdi                              #! EA = L0x7ffffffface0; Value = 0x1299c8a20c884b4c; PC = 0x555555556300
	mov    %r12d,%esi                               #! PC = 0x555555556303
	add    $0x8,%r10                                #! PC = 0x555555556306
	#call   0x555555555b30 <gf256v_mul_u64>         #! PC = 0x55555555630a
	#! -> SP = 0x7fffffffac28
	movzbl %sil,%eax                                #! PC = 0x555555555b30
	and    $0x1,%esi                                #! PC = 0x555555555b34
	mov    %rdi,%rdx                                #! PC = 0x555555555b37
	movabs $0x101010101010101,%r8                   #! PC = 0x555555555b3a
	imul   %rdi,%rsi                                #! PC = 0x555555555b44
	add    %rdx,%rdx                                #! PC = 0x555555555b48
	movabs $0xfefefefefefefefe,%r9                  #! PC = 0x555555555b4b
	and    %r9,%rdx                                 #! PC = 0x555555555b55
	mov    %rsi,%rcx                                #! PC = 0x555555555b58
	mov    %rdi,%rsi                                #! PC = 0x555555555b5b
	shr    $0x7,%rsi                                #! PC = 0x555555555b5e
	and    %r8,%rsi                                 #! PC = 0x555555555b62
	lea    (%rsi,%rsi,2),%rsi                       #! PC = 0x555555555b65
	lea    (%rsi,%rsi,8),%rdi                       #! PC = 0x555555555b69
	mov    %rax,%rsi                                #! PC = 0x555555555b6d
	shr    %rsi                                     #! PC = 0x555555555b70
	xor    %rdx,%rdi                                #! PC = 0x555555555b73
	and    $0x1,%esi                                #! PC = 0x555555555b76
	lea    (%rdi,%rdi,1),%rdx                       #! PC = 0x555555555b79
	imul   %rdi,%rsi                                #! PC = 0x555555555b7d
	shr    $0x7,%rdi                                #! PC = 0x555555555b81
	and    %r9,%rdx                                 #! PC = 0x555555555b85
	and    %r8,%rdi                                 #! PC = 0x555555555b88
	xor    %rcx,%rsi                                #! PC = 0x555555555b8b
	lea    (%rdi,%rdi,2),%rcx                       #! PC = 0x555555555b8e
	mov    %rax,%rdi                                #! PC = 0x555555555b92
	lea    (%rcx,%rcx,8),%rcx                       #! PC = 0x555555555b95
	shr    $0x2,%rdi                                #! PC = 0x555555555b99
	xor    %rcx,%rdx                                #! PC = 0x555555555b9d
	and    $0x1,%edi                                #! PC = 0x555555555ba0
	imul   %rdx,%rdi                                #! PC = 0x555555555ba3
	lea    (%rdx,%rdx,1),%rcx                       #! PC = 0x555555555ba7
	shr    $0x7,%rdx                                #! PC = 0x555555555bab
	and    %r8,%rdx                                 #! PC = 0x555555555baf
	and    %r9,%rcx                                 #! PC = 0x555555555bb2
	lea    (%rdx,%rdx,2),%rdx                       #! PC = 0x555555555bb5
	xor    %rsi,%rdi                                #! PC = 0x555555555bb9
	mov    %rax,%rsi                                #! PC = 0x555555555bbc
	lea    (%rdx,%rdx,8),%rdx                       #! PC = 0x555555555bbf
	shr    $0x3,%rsi                                #! PC = 0x555555555bc3
	xor    %rdx,%rcx                                #! PC = 0x555555555bc7
	and    $0x1,%esi                                #! PC = 0x555555555bca
	lea    (%rcx,%rcx,1),%rdx                       #! PC = 0x555555555bcd
	imul   %rcx,%rsi                                #! PC = 0x555555555bd1
	shr    $0x7,%rcx                                #! PC = 0x555555555bd5
	and    %r9,%rdx                                 #! PC = 0x555555555bd9
	and    %r8,%rcx                                 #! PC = 0x555555555bdc
	lea    (%rcx,%rcx,2),%rcx                       #! PC = 0x555555555bdf
	xor    %rdi,%rsi                                #! PC = 0x555555555be3
	mov    %rax,%rdi                                #! PC = 0x555555555be6
	lea    (%rcx,%rcx,8),%rcx                       #! PC = 0x555555555be9
	shr    $0x4,%rdi                                #! PC = 0x555555555bed
	xor    %rcx,%rdx                                #! PC = 0x555555555bf1
	and    $0x1,%edi                                #! PC = 0x555555555bf4
	lea    (%rdx,%rdx,1),%rcx                       #! PC = 0x555555555bf7
	imul   %rdx,%rdi                                #! PC = 0x555555555bfb
	shr    $0x7,%rdx                                #! PC = 0x555555555bff
	and    %r9,%rcx                                 #! PC = 0x555555555c03
	and    %r8,%rdx                                 #! PC = 0x555555555c06
	lea    (%rdx,%rdx,2),%rdx                       #! PC = 0x555555555c09
	xor    %rsi,%rdi                                #! PC = 0x555555555c0d
	mov    %rax,%rsi                                #! PC = 0x555555555c10
	lea    (%rdx,%rdx,8),%rdx                       #! PC = 0x555555555c13
	shr    $0x5,%rsi                                #! PC = 0x555555555c17
	xor    %rdx,%rcx                                #! PC = 0x555555555c1b
	and    $0x1,%esi                                #! PC = 0x555555555c1e
	lea    (%rcx,%rcx,1),%rdx                       #! PC = 0x555555555c21
	imul   %rcx,%rsi                                #! PC = 0x555555555c25
	shr    $0x7,%rcx                                #! PC = 0x555555555c29
	and    %r9,%rdx                                 #! PC = 0x555555555c2d
	and    %r8,%rcx                                 #! PC = 0x555555555c30
	lea    (%rcx,%rcx,2),%rcx                       #! PC = 0x555555555c33
	lea    (%rcx,%rcx,8),%rcx                       #! PC = 0x555555555c37
	xor    %rdi,%rsi                                #! PC = 0x555555555c3b
	xor    %rcx,%rdx                                #! PC = 0x555555555c3e
	mov    %rax,%rcx                                #! PC = 0x555555555c41
	shr    $0x7,%rax                                #! PC = 0x555555555c44
	shr    $0x6,%rcx                                #! PC = 0x555555555c48
	and    $0x1,%ecx                                #! PC = 0x555555555c4c
	imul   %rdx,%rcx                                #! PC = 0x555555555c4f
	xor    %rsi,%rcx                                #! PC = 0x555555555c53
	lea    (%rdx,%rdx,1),%rsi                       #! PC = 0x555555555c56
	shr    $0x7,%rdx                                #! PC = 0x555555555c5a
	and    %r8,%rdx                                 #! PC = 0x555555555c5e
	and    %r9,%rsi                                 #! PC = 0x555555555c61
	lea    (%rdx,%rdx,2),%rdx                       #! PC = 0x555555555c64
	lea    (%rdx,%rdx,8),%rdx                       #! PC = 0x555555555c68
	xor    %rsi,%rdx                                #! PC = 0x555555555c6c
	imul   %rdx,%rax                                #! PC = 0x555555555c6f
	xor    %rcx,%rax                                #! PC = 0x555555555c73
	#! <- SP = 0x7fffffffac28
	#ret                                            #! PC = 0x555555555c76
	mov    %rax,-0x8(%r10)                          #! EA = L0x7ffffffface0; PC = 0x55555555630f
	cmp    %r10,%r11                                #! PC = 0x555555556313
	#jne    0x555555556300 <_gf256v_mul_scalar_u64_aligned+64>#! PC = 0x555555556316
	mov    (%r10),%rdi                              #! EA = L0x7ffffffface8; Value = 0x79aa0bfdb979874f; PC = 0x555555556300
	mov    %r12d,%esi                               #! PC = 0x555555556303
	add    $0x8,%r10                                #! PC = 0x555555556306
	#call   0x555555555b30 <gf256v_mul_u64>         #! PC = 0x55555555630a
	#! -> SP = 0x7fffffffac28
	movzbl %sil,%eax                                #! PC = 0x555555555b30
	and    $0x1,%esi                                #! PC = 0x555555555b34
	mov    %rdi,%rdx                                #! PC = 0x555555555b37
	movabs $0x101010101010101,%r8                   #! PC = 0x555555555b3a
	imul   %rdi,%rsi                                #! PC = 0x555555555b44
	add    %rdx,%rdx                                #! PC = 0x555555555b48
	movabs $0xfefefefefefefefe,%r9                  #! PC = 0x555555555b4b
	and    %r9,%rdx                                 #! PC = 0x555555555b55
	mov    %rsi,%rcx                                #! PC = 0x555555555b58
	mov    %rdi,%rsi                                #! PC = 0x555555555b5b
	shr    $0x7,%rsi                                #! PC = 0x555555555b5e
	and    %r8,%rsi                                 #! PC = 0x555555555b62
	lea    (%rsi,%rsi,2),%rsi                       #! PC = 0x555555555b65
	lea    (%rsi,%rsi,8),%rdi                       #! PC = 0x555555555b69
	mov    %rax,%rsi                                #! PC = 0x555555555b6d
	shr    %rsi                                     #! PC = 0x555555555b70
	xor    %rdx,%rdi                                #! PC = 0x555555555b73
	and    $0x1,%esi                                #! PC = 0x555555555b76
	lea    (%rdi,%rdi,1),%rdx                       #! PC = 0x555555555b79
	imul   %rdi,%rsi                                #! PC = 0x555555555b7d
	shr    $0x7,%rdi                                #! PC = 0x555555555b81
	and    %r9,%rdx                                 #! PC = 0x555555555b85
	and    %r8,%rdi                                 #! PC = 0x555555555b88
	xor    %rcx,%rsi                                #! PC = 0x555555555b8b
	lea    (%rdi,%rdi,2),%rcx                       #! PC = 0x555555555b8e
	mov    %rax,%rdi                                #! PC = 0x555555555b92
	lea    (%rcx,%rcx,8),%rcx                       #! PC = 0x555555555b95
	shr    $0x2,%rdi                                #! PC = 0x555555555b99
	xor    %rcx,%rdx                                #! PC = 0x555555555b9d
	and    $0x1,%edi                                #! PC = 0x555555555ba0
	imul   %rdx,%rdi                                #! PC = 0x555555555ba3
	lea    (%rdx,%rdx,1),%rcx                       #! PC = 0x555555555ba7
	shr    $0x7,%rdx                                #! PC = 0x555555555bab
	and    %r8,%rdx                                 #! PC = 0x555555555baf
	and    %r9,%rcx                                 #! PC = 0x555555555bb2
	lea    (%rdx,%rdx,2),%rdx                       #! PC = 0x555555555bb5
	xor    %rsi,%rdi                                #! PC = 0x555555555bb9
	mov    %rax,%rsi                                #! PC = 0x555555555bbc
	lea    (%rdx,%rdx,8),%rdx                       #! PC = 0x555555555bbf
	shr    $0x3,%rsi                                #! PC = 0x555555555bc3
	xor    %rdx,%rcx                                #! PC = 0x555555555bc7
	and    $0x1,%esi                                #! PC = 0x555555555bca
	lea    (%rcx,%rcx,1),%rdx                       #! PC = 0x555555555bcd
	imul   %rcx,%rsi                                #! PC = 0x555555555bd1
	shr    $0x7,%rcx                                #! PC = 0x555555555bd5
	and    %r9,%rdx                                 #! PC = 0x555555555bd9
	and    %r8,%rcx                                 #! PC = 0x555555555bdc
	lea    (%rcx,%rcx,2),%rcx                       #! PC = 0x555555555bdf
	xor    %rdi,%rsi                                #! PC = 0x555555555be3
	mov    %rax,%rdi                                #! PC = 0x555555555be6
	lea    (%rcx,%rcx,8),%rcx                       #! PC = 0x555555555be9
	shr    $0x4,%rdi                                #! PC = 0x555555555bed
	xor    %rcx,%rdx                                #! PC = 0x555555555bf1
	and    $0x1,%edi                                #! PC = 0x555555555bf4
	lea    (%rdx,%rdx,1),%rcx                       #! PC = 0x555555555bf7
	imul   %rdx,%rdi                                #! PC = 0x555555555bfb
	shr    $0x7,%rdx                                #! PC = 0x555555555bff
	and    %r9,%rcx                                 #! PC = 0x555555555c03
	and    %r8,%rdx                                 #! PC = 0x555555555c06
	lea    (%rdx,%rdx,2),%rdx                       #! PC = 0x555555555c09
	xor    %rsi,%rdi                                #! PC = 0x555555555c0d
	mov    %rax,%rsi                                #! PC = 0x555555555c10
	lea    (%rdx,%rdx,8),%rdx                       #! PC = 0x555555555c13
	shr    $0x5,%rsi                                #! PC = 0x555555555c17
	xor    %rdx,%rcx                                #! PC = 0x555555555c1b
	and    $0x1,%esi                                #! PC = 0x555555555c1e
	lea    (%rcx,%rcx,1),%rdx                       #! PC = 0x555555555c21
	imul   %rcx,%rsi                                #! PC = 0x555555555c25
	shr    $0x7,%rcx                                #! PC = 0x555555555c29
	and    %r9,%rdx                                 #! PC = 0x555555555c2d
	and    %r8,%rcx                                 #! PC = 0x555555555c30
	lea    (%rcx,%rcx,2),%rcx                       #! PC = 0x555555555c33
	lea    (%rcx,%rcx,8),%rcx                       #! PC = 0x555555555c37
	xor    %rdi,%rsi                                #! PC = 0x555555555c3b
	xor    %rcx,%rdx                                #! PC = 0x555555555c3e
	mov    %rax,%rcx                                #! PC = 0x555555555c41
	shr    $0x7,%rax                                #! PC = 0x555555555c44
	shr    $0x6,%rcx                                #! PC = 0x555555555c48
	and    $0x1,%ecx                                #! PC = 0x555555555c4c
	imul   %rdx,%rcx                                #! PC = 0x555555555c4f
	xor    %rsi,%rcx                                #! PC = 0x555555555c53
	lea    (%rdx,%rdx,1),%rsi                       #! PC = 0x555555555c56
	shr    $0x7,%rdx                                #! PC = 0x555555555c5a
	and    %r8,%rdx                                 #! PC = 0x555555555c5e
	and    %r9,%rsi                                 #! PC = 0x555555555c61
	lea    (%rdx,%rdx,2),%rdx                       #! PC = 0x555555555c64
	lea    (%rdx,%rdx,8),%rdx                       #! PC = 0x555555555c68
	xor    %rsi,%rdx                                #! PC = 0x555555555c6c
	imul   %rdx,%rax                                #! PC = 0x555555555c6f
	xor    %rcx,%rax                                #! PC = 0x555555555c73
	#! <- SP = 0x7fffffffac28
	#ret                                            #! PC = 0x555555555c76
	mov    %rax,-0x8(%r10)                          #! EA = L0x7ffffffface8; PC = 0x55555555630f
	cmp    %r10,%r11                                #! PC = 0x555555556313
	#jne    0x555555556300 <_gf256v_mul_scalar_u64_aligned+64>#! PC = 0x555555556316
	mov    (%r10),%rdi                              #! EA = L0x7fffffffacf0; Value = 0x708ae99bd728cd0c; PC = 0x555555556300
	mov    %r12d,%esi                               #! PC = 0x555555556303
	add    $0x8,%r10                                #! PC = 0x555555556306
	#call   0x555555555b30 <gf256v_mul_u64>         #! PC = 0x55555555630a
	#! -> SP = 0x7fffffffac28
	movzbl %sil,%eax                                #! PC = 0x555555555b30
	and    $0x1,%esi                                #! PC = 0x555555555b34
	mov    %rdi,%rdx                                #! PC = 0x555555555b37
	movabs $0x101010101010101,%r8                   #! PC = 0x555555555b3a
	imul   %rdi,%rsi                                #! PC = 0x555555555b44
	add    %rdx,%rdx                                #! PC = 0x555555555b48
	movabs $0xfefefefefefefefe,%r9                  #! PC = 0x555555555b4b
	and    %r9,%rdx                                 #! PC = 0x555555555b55
	mov    %rsi,%rcx                                #! PC = 0x555555555b58
	mov    %rdi,%rsi                                #! PC = 0x555555555b5b
	shr    $0x7,%rsi                                #! PC = 0x555555555b5e
	and    %r8,%rsi                                 #! PC = 0x555555555b62
	lea    (%rsi,%rsi,2),%rsi                       #! PC = 0x555555555b65
	lea    (%rsi,%rsi,8),%rdi                       #! PC = 0x555555555b69
	mov    %rax,%rsi                                #! PC = 0x555555555b6d
	shr    %rsi                                     #! PC = 0x555555555b70
	xor    %rdx,%rdi                                #! PC = 0x555555555b73
	and    $0x1,%esi                                #! PC = 0x555555555b76
	lea    (%rdi,%rdi,1),%rdx                       #! PC = 0x555555555b79
	imul   %rdi,%rsi                                #! PC = 0x555555555b7d
	shr    $0x7,%rdi                                #! PC = 0x555555555b81
	and    %r9,%rdx                                 #! PC = 0x555555555b85
	and    %r8,%rdi                                 #! PC = 0x555555555b88
	xor    %rcx,%rsi                                #! PC = 0x555555555b8b
	lea    (%rdi,%rdi,2),%rcx                       #! PC = 0x555555555b8e
	mov    %rax,%rdi                                #! PC = 0x555555555b92
	lea    (%rcx,%rcx,8),%rcx                       #! PC = 0x555555555b95
	shr    $0x2,%rdi                                #! PC = 0x555555555b99
	xor    %rcx,%rdx                                #! PC = 0x555555555b9d
	and    $0x1,%edi                                #! PC = 0x555555555ba0
	imul   %rdx,%rdi                                #! PC = 0x555555555ba3
	lea    (%rdx,%rdx,1),%rcx                       #! PC = 0x555555555ba7
	shr    $0x7,%rdx                                #! PC = 0x555555555bab
	and    %r8,%rdx                                 #! PC = 0x555555555baf
	and    %r9,%rcx                                 #! PC = 0x555555555bb2
	lea    (%rdx,%rdx,2),%rdx                       #! PC = 0x555555555bb5
	xor    %rsi,%rdi                                #! PC = 0x555555555bb9
	mov    %rax,%rsi                                #! PC = 0x555555555bbc
	lea    (%rdx,%rdx,8),%rdx                       #! PC = 0x555555555bbf
	shr    $0x3,%rsi                                #! PC = 0x555555555bc3
	xor    %rdx,%rcx                                #! PC = 0x555555555bc7
	and    $0x1,%esi                                #! PC = 0x555555555bca
	lea    (%rcx,%rcx,1),%rdx                       #! PC = 0x555555555bcd
	imul   %rcx,%rsi                                #! PC = 0x555555555bd1
	shr    $0x7,%rcx                                #! PC = 0x555555555bd5
	and    %r9,%rdx                                 #! PC = 0x555555555bd9
	and    %r8,%rcx                                 #! PC = 0x555555555bdc
	lea    (%rcx,%rcx,2),%rcx                       #! PC = 0x555555555bdf
	xor    %rdi,%rsi                                #! PC = 0x555555555be3
	mov    %rax,%rdi                                #! PC = 0x555555555be6
	lea    (%rcx,%rcx,8),%rcx                       #! PC = 0x555555555be9
	shr    $0x4,%rdi                                #! PC = 0x555555555bed
	xor    %rcx,%rdx                                #! PC = 0x555555555bf1
	and    $0x1,%edi                                #! PC = 0x555555555bf4
	lea    (%rdx,%rdx,1),%rcx                       #! PC = 0x555555555bf7
	imul   %rdx,%rdi                                #! PC = 0x555555555bfb
	shr    $0x7,%rdx                                #! PC = 0x555555555bff
	and    %r9,%rcx                                 #! PC = 0x555555555c03
	and    %r8,%rdx                                 #! PC = 0x555555555c06
	lea    (%rdx,%rdx,2),%rdx                       #! PC = 0x555555555c09
	xor    %rsi,%rdi                                #! PC = 0x555555555c0d
	mov    %rax,%rsi                                #! PC = 0x555555555c10
	lea    (%rdx,%rdx,8),%rdx                       #! PC = 0x555555555c13
	shr    $0x5,%rsi                                #! PC = 0x555555555c17
	xor    %rdx,%rcx                                #! PC = 0x555555555c1b
	and    $0x1,%esi                                #! PC = 0x555555555c1e
	lea    (%rcx,%rcx,1),%rdx                       #! PC = 0x555555555c21
	imul   %rcx,%rsi                                #! PC = 0x555555555c25
	shr    $0x7,%rcx                                #! PC = 0x555555555c29
	and    %r9,%rdx                                 #! PC = 0x555555555c2d
	and    %r8,%rcx                                 #! PC = 0x555555555c30
	lea    (%rcx,%rcx,2),%rcx                       #! PC = 0x555555555c33
	lea    (%rcx,%rcx,8),%rcx                       #! PC = 0x555555555c37
	xor    %rdi,%rsi                                #! PC = 0x555555555c3b
	xor    %rcx,%rdx                                #! PC = 0x555555555c3e
	mov    %rax,%rcx                                #! PC = 0x555555555c41
	shr    $0x7,%rax                                #! PC = 0x555555555c44
	shr    $0x6,%rcx                                #! PC = 0x555555555c48
	and    $0x1,%ecx                                #! PC = 0x555555555c4c
	imul   %rdx,%rcx                                #! PC = 0x555555555c4f
	xor    %rsi,%rcx                                #! PC = 0x555555555c53
	lea    (%rdx,%rdx,1),%rsi                       #! PC = 0x555555555c56
	shr    $0x7,%rdx                                #! PC = 0x555555555c5a
	and    %r8,%rdx                                 #! PC = 0x555555555c5e
	and    %r9,%rsi                                 #! PC = 0x555555555c61
	lea    (%rdx,%rdx,2),%rdx                       #! PC = 0x555555555c64
	lea    (%rdx,%rdx,8),%rdx                       #! PC = 0x555555555c68
	xor    %rsi,%rdx                                #! PC = 0x555555555c6c
	imul   %rdx,%rax                                #! PC = 0x555555555c6f
	xor    %rcx,%rax                                #! PC = 0x555555555c73
	#! <- SP = 0x7fffffffac28
	#ret                                            #! PC = 0x555555555c76
	mov    %rax,-0x8(%r10)                          #! EA = L0x7fffffffacf0; PC = 0x55555555630f
	cmp    %r10,%r11                                #! PC = 0x555555556313
	#jne    0x555555556300 <_gf256v_mul_scalar_u64_aligned+64>#! PC = 0x555555556316
	mov    (%r10),%rdi                              #! EA = L0x7fffffffacf8; Value = 0xc04eadd80bd06071; PC = 0x555555556300
	mov    %r12d,%esi                               #! PC = 0x555555556303
	add    $0x8,%r10                                #! PC = 0x555555556306
	#call   0x555555555b30 <gf256v_mul_u64>         #! PC = 0x55555555630a
	#! -> SP = 0x7fffffffac28
	movzbl %sil,%eax                                #! PC = 0x555555555b30
	and    $0x1,%esi                                #! PC = 0x555555555b34
	mov    %rdi,%rdx                                #! PC = 0x555555555b37
	movabs $0x101010101010101,%r8                   #! PC = 0x555555555b3a
	imul   %rdi,%rsi                                #! PC = 0x555555555b44
	add    %rdx,%rdx                                #! PC = 0x555555555b48
	movabs $0xfefefefefefefefe,%r9                  #! PC = 0x555555555b4b
	and    %r9,%rdx                                 #! PC = 0x555555555b55
	mov    %rsi,%rcx                                #! PC = 0x555555555b58
	mov    %rdi,%rsi                                #! PC = 0x555555555b5b
	shr    $0x7,%rsi                                #! PC = 0x555555555b5e
	and    %r8,%rsi                                 #! PC = 0x555555555b62
	lea    (%rsi,%rsi,2),%rsi                       #! PC = 0x555555555b65
	lea    (%rsi,%rsi,8),%rdi                       #! PC = 0x555555555b69
	mov    %rax,%rsi                                #! PC = 0x555555555b6d
	shr    %rsi                                     #! PC = 0x555555555b70
	xor    %rdx,%rdi                                #! PC = 0x555555555b73
	and    $0x1,%esi                                #! PC = 0x555555555b76
	lea    (%rdi,%rdi,1),%rdx                       #! PC = 0x555555555b79
	imul   %rdi,%rsi                                #! PC = 0x555555555b7d
	shr    $0x7,%rdi                                #! PC = 0x555555555b81
	and    %r9,%rdx                                 #! PC = 0x555555555b85
	and    %r8,%rdi                                 #! PC = 0x555555555b88
	xor    %rcx,%rsi                                #! PC = 0x555555555b8b
	lea    (%rdi,%rdi,2),%rcx                       #! PC = 0x555555555b8e
	mov    %rax,%rdi                                #! PC = 0x555555555b92
	lea    (%rcx,%rcx,8),%rcx                       #! PC = 0x555555555b95
	shr    $0x2,%rdi                                #! PC = 0x555555555b99
	xor    %rcx,%rdx                                #! PC = 0x555555555b9d
	and    $0x1,%edi                                #! PC = 0x555555555ba0
	imul   %rdx,%rdi                                #! PC = 0x555555555ba3
	lea    (%rdx,%rdx,1),%rcx                       #! PC = 0x555555555ba7
	shr    $0x7,%rdx                                #! PC = 0x555555555bab
	and    %r8,%rdx                                 #! PC = 0x555555555baf
	and    %r9,%rcx                                 #! PC = 0x555555555bb2
	lea    (%rdx,%rdx,2),%rdx                       #! PC = 0x555555555bb5
	xor    %rsi,%rdi                                #! PC = 0x555555555bb9
	mov    %rax,%rsi                                #! PC = 0x555555555bbc
	lea    (%rdx,%rdx,8),%rdx                       #! PC = 0x555555555bbf
	shr    $0x3,%rsi                                #! PC = 0x555555555bc3
	xor    %rdx,%rcx                                #! PC = 0x555555555bc7
	and    $0x1,%esi                                #! PC = 0x555555555bca
	lea    (%rcx,%rcx,1),%rdx                       #! PC = 0x555555555bcd
	imul   %rcx,%rsi                                #! PC = 0x555555555bd1
	shr    $0x7,%rcx                                #! PC = 0x555555555bd5
	and    %r9,%rdx                                 #! PC = 0x555555555bd9
	and    %r8,%rcx                                 #! PC = 0x555555555bdc
	lea    (%rcx,%rcx,2),%rcx                       #! PC = 0x555555555bdf
	xor    %rdi,%rsi                                #! PC = 0x555555555be3
	mov    %rax,%rdi                                #! PC = 0x555555555be6
	lea    (%rcx,%rcx,8),%rcx                       #! PC = 0x555555555be9
	shr    $0x4,%rdi                                #! PC = 0x555555555bed
	xor    %rcx,%rdx                                #! PC = 0x555555555bf1
	and    $0x1,%edi                                #! PC = 0x555555555bf4
	lea    (%rdx,%rdx,1),%rcx                       #! PC = 0x555555555bf7
	imul   %rdx,%rdi                                #! PC = 0x555555555bfb
	shr    $0x7,%rdx                                #! PC = 0x555555555bff
	and    %r9,%rcx                                 #! PC = 0x555555555c03
	and    %r8,%rdx                                 #! PC = 0x555555555c06
	lea    (%rdx,%rdx,2),%rdx                       #! PC = 0x555555555c09
	xor    %rsi,%rdi                                #! PC = 0x555555555c0d
	mov    %rax,%rsi                                #! PC = 0x555555555c10
	lea    (%rdx,%rdx,8),%rdx                       #! PC = 0x555555555c13
	shr    $0x5,%rsi                                #! PC = 0x555555555c17
	xor    %rdx,%rcx                                #! PC = 0x555555555c1b
	and    $0x1,%esi                                #! PC = 0x555555555c1e
	lea    (%rcx,%rcx,1),%rdx                       #! PC = 0x555555555c21
	imul   %rcx,%rsi                                #! PC = 0x555555555c25
	shr    $0x7,%rcx                                #! PC = 0x555555555c29
	and    %r9,%rdx                                 #! PC = 0x555555555c2d
	and    %r8,%rcx                                 #! PC = 0x555555555c30
	lea    (%rcx,%rcx,2),%rcx                       #! PC = 0x555555555c33
	lea    (%rcx,%rcx,8),%rcx                       #! PC = 0x555555555c37
	xor    %rdi,%rsi                                #! PC = 0x555555555c3b
	xor    %rcx,%rdx                                #! PC = 0x555555555c3e
	mov    %rax,%rcx                                #! PC = 0x555555555c41
	shr    $0x7,%rax                                #! PC = 0x555555555c44
	shr    $0x6,%rcx                                #! PC = 0x555555555c48
	and    $0x1,%ecx                                #! PC = 0x555555555c4c
	imul   %rdx,%rcx                                #! PC = 0x555555555c4f
	xor    %rsi,%rcx                                #! PC = 0x555555555c53
	lea    (%rdx,%rdx,1),%rsi                       #! PC = 0x555555555c56
	shr    $0x7,%rdx                                #! PC = 0x555555555c5a
	and    %r8,%rdx                                 #! PC = 0x555555555c5e
	and    %r9,%rsi                                 #! PC = 0x555555555c61
	lea    (%rdx,%rdx,2),%rdx                       #! PC = 0x555555555c64
	lea    (%rdx,%rdx,8),%rdx                       #! PC = 0x555555555c68
	xor    %rsi,%rdx                                #! PC = 0x555555555c6c
	imul   %rdx,%rax                                #! PC = 0x555555555c6f
	xor    %rcx,%rax                                #! PC = 0x555555555c73
	#! <- SP = 0x7fffffffac28
	#ret                                            #! PC = 0x555555555c76
	mov    %rax,-0x8(%r10)                          #! EA = L0x7fffffffacf8; PC = 0x55555555630f
	cmp    %r10,%r11                                #! PC = 0x555555556313
	#jne    0x555555556300 <_gf256v_mul_scalar_u64_aligned+64>#! PC = 0x555555556316
	mov    (%r10),%rdi                              #! EA = L0x7fffffffad00; Value = 0x4cdc11db53ef885c; PC = 0x555555556300
	mov    %r12d,%esi                               #! PC = 0x555555556303
	add    $0x8,%r10                                #! PC = 0x555555556306
	#call   0x555555555b30 <gf256v_mul_u64>         #! PC = 0x55555555630a
	#! -> SP = 0x7fffffffac28
	movzbl %sil,%eax                                #! PC = 0x555555555b30
	and    $0x1,%esi                                #! PC = 0x555555555b34
	mov    %rdi,%rdx                                #! PC = 0x555555555b37
	movabs $0x101010101010101,%r8                   #! PC = 0x555555555b3a
	imul   %rdi,%rsi                                #! PC = 0x555555555b44
	add    %rdx,%rdx                                #! PC = 0x555555555b48
	movabs $0xfefefefefefefefe,%r9                  #! PC = 0x555555555b4b
	and    %r9,%rdx                                 #! PC = 0x555555555b55
	mov    %rsi,%rcx                                #! PC = 0x555555555b58
	mov    %rdi,%rsi                                #! PC = 0x555555555b5b
	shr    $0x7,%rsi                                #! PC = 0x555555555b5e
	and    %r8,%rsi                                 #! PC = 0x555555555b62
	lea    (%rsi,%rsi,2),%rsi                       #! PC = 0x555555555b65
	lea    (%rsi,%rsi,8),%rdi                       #! PC = 0x555555555b69
	mov    %rax,%rsi                                #! PC = 0x555555555b6d
	shr    %rsi                                     #! PC = 0x555555555b70
	xor    %rdx,%rdi                                #! PC = 0x555555555b73
	and    $0x1,%esi                                #! PC = 0x555555555b76
	lea    (%rdi,%rdi,1),%rdx                       #! PC = 0x555555555b79
	imul   %rdi,%rsi                                #! PC = 0x555555555b7d
	shr    $0x7,%rdi                                #! PC = 0x555555555b81
	and    %r9,%rdx                                 #! PC = 0x555555555b85
	and    %r8,%rdi                                 #! PC = 0x555555555b88
	xor    %rcx,%rsi                                #! PC = 0x555555555b8b
	lea    (%rdi,%rdi,2),%rcx                       #! PC = 0x555555555b8e
	mov    %rax,%rdi                                #! PC = 0x555555555b92
	lea    (%rcx,%rcx,8),%rcx                       #! PC = 0x555555555b95
	shr    $0x2,%rdi                                #! PC = 0x555555555b99
	xor    %rcx,%rdx                                #! PC = 0x555555555b9d
	and    $0x1,%edi                                #! PC = 0x555555555ba0
	imul   %rdx,%rdi                                #! PC = 0x555555555ba3
	lea    (%rdx,%rdx,1),%rcx                       #! PC = 0x555555555ba7
	shr    $0x7,%rdx                                #! PC = 0x555555555bab
	and    %r8,%rdx                                 #! PC = 0x555555555baf
	and    %r9,%rcx                                 #! PC = 0x555555555bb2
	lea    (%rdx,%rdx,2),%rdx                       #! PC = 0x555555555bb5
	xor    %rsi,%rdi                                #! PC = 0x555555555bb9
	mov    %rax,%rsi                                #! PC = 0x555555555bbc
	lea    (%rdx,%rdx,8),%rdx                       #! PC = 0x555555555bbf
	shr    $0x3,%rsi                                #! PC = 0x555555555bc3
	xor    %rdx,%rcx                                #! PC = 0x555555555bc7
	and    $0x1,%esi                                #! PC = 0x555555555bca
	lea    (%rcx,%rcx,1),%rdx                       #! PC = 0x555555555bcd
	imul   %rcx,%rsi                                #! PC = 0x555555555bd1
	shr    $0x7,%rcx                                #! PC = 0x555555555bd5
	and    %r9,%rdx                                 #! PC = 0x555555555bd9
	and    %r8,%rcx                                 #! PC = 0x555555555bdc
	lea    (%rcx,%rcx,2),%rcx                       #! PC = 0x555555555bdf
	xor    %rdi,%rsi                                #! PC = 0x555555555be3
	mov    %rax,%rdi                                #! PC = 0x555555555be6
	lea    (%rcx,%rcx,8),%rcx                       #! PC = 0x555555555be9
	shr    $0x4,%rdi                                #! PC = 0x555555555bed
	xor    %rcx,%rdx                                #! PC = 0x555555555bf1
	and    $0x1,%edi                                #! PC = 0x555555555bf4
	lea    (%rdx,%rdx,1),%rcx                       #! PC = 0x555555555bf7
	imul   %rdx,%rdi                                #! PC = 0x555555555bfb
	shr    $0x7,%rdx                                #! PC = 0x555555555bff
	and    %r9,%rcx                                 #! PC = 0x555555555c03
	and    %r8,%rdx                                 #! PC = 0x555555555c06
	lea    (%rdx,%rdx,2),%rdx                       #! PC = 0x555555555c09
	xor    %rsi,%rdi                                #! PC = 0x555555555c0d
	mov    %rax,%rsi                                #! PC = 0x555555555c10
	lea    (%rdx,%rdx,8),%rdx                       #! PC = 0x555555555c13
	shr    $0x5,%rsi                                #! PC = 0x555555555c17
	xor    %rdx,%rcx                                #! PC = 0x555555555c1b
	and    $0x1,%esi                                #! PC = 0x555555555c1e
	lea    (%rcx,%rcx,1),%rdx                       #! PC = 0x555555555c21
	imul   %rcx,%rsi                                #! PC = 0x555555555c25
	shr    $0x7,%rcx                                #! PC = 0x555555555c29
	and    %r9,%rdx                                 #! PC = 0x555555555c2d
	and    %r8,%rcx                                 #! PC = 0x555555555c30
	lea    (%rcx,%rcx,2),%rcx                       #! PC = 0x555555555c33
	lea    (%rcx,%rcx,8),%rcx                       #! PC = 0x555555555c37
	xor    %rdi,%rsi                                #! PC = 0x555555555c3b
	xor    %rcx,%rdx                                #! PC = 0x555555555c3e
	mov    %rax,%rcx                                #! PC = 0x555555555c41
	shr    $0x7,%rax                                #! PC = 0x555555555c44
	shr    $0x6,%rcx                                #! PC = 0x555555555c48
	and    $0x1,%ecx                                #! PC = 0x555555555c4c
	imul   %rdx,%rcx                                #! PC = 0x555555555c4f
	xor    %rsi,%rcx                                #! PC = 0x555555555c53
	lea    (%rdx,%rdx,1),%rsi                       #! PC = 0x555555555c56
	shr    $0x7,%rdx                                #! PC = 0x555555555c5a
	and    %r8,%rdx                                 #! PC = 0x555555555c5e
	and    %r9,%rsi                                 #! PC = 0x555555555c61
	lea    (%rdx,%rdx,2),%rdx                       #! PC = 0x555555555c64
	lea    (%rdx,%rdx,8),%rdx                       #! PC = 0x555555555c68
	xor    %rsi,%rdx                                #! PC = 0x555555555c6c
	imul   %rdx,%rax                                #! PC = 0x555555555c6f
	xor    %rcx,%rax                                #! PC = 0x555555555c73
	#! <- SP = 0x7fffffffac28
	#ret                                            #! PC = 0x555555555c76
	mov    %rax,-0x8(%r10)                          #! EA = L0x7fffffffad00; PC = 0x55555555630f
	cmp    %r10,%r11                                #! PC = 0x555555556313
	#jne    0x555555556300 <_gf256v_mul_scalar_u64_aligned+64>#! PC = 0x555555556316
	mov    (%r10),%rdi                              #! EA = L0x7fffffffad08; Value = 0xe514aded3cb76741; PC = 0x555555556300
	mov    %r12d,%esi                               #! PC = 0x555555556303
	add    $0x8,%r10                                #! PC = 0x555555556306
	#call   0x555555555b30 <gf256v_mul_u64>         #! PC = 0x55555555630a
	#! -> SP = 0x7fffffffac28
	movzbl %sil,%eax                                #! PC = 0x555555555b30
	and    $0x1,%esi                                #! PC = 0x555555555b34
	mov    %rdi,%rdx                                #! PC = 0x555555555b37
	movabs $0x101010101010101,%r8                   #! PC = 0x555555555b3a
	imul   %rdi,%rsi                                #! PC = 0x555555555b44
	add    %rdx,%rdx                                #! PC = 0x555555555b48
	movabs $0xfefefefefefefefe,%r9                  #! PC = 0x555555555b4b
	and    %r9,%rdx                                 #! PC = 0x555555555b55
	mov    %rsi,%rcx                                #! PC = 0x555555555b58
	mov    %rdi,%rsi                                #! PC = 0x555555555b5b
	shr    $0x7,%rsi                                #! PC = 0x555555555b5e
	and    %r8,%rsi                                 #! PC = 0x555555555b62
	lea    (%rsi,%rsi,2),%rsi                       #! PC = 0x555555555b65
	lea    (%rsi,%rsi,8),%rdi                       #! PC = 0x555555555b69
	mov    %rax,%rsi                                #! PC = 0x555555555b6d
	shr    %rsi                                     #! PC = 0x555555555b70
	xor    %rdx,%rdi                                #! PC = 0x555555555b73
	and    $0x1,%esi                                #! PC = 0x555555555b76
	lea    (%rdi,%rdi,1),%rdx                       #! PC = 0x555555555b79
	imul   %rdi,%rsi                                #! PC = 0x555555555b7d
	shr    $0x7,%rdi                                #! PC = 0x555555555b81
	and    %r9,%rdx                                 #! PC = 0x555555555b85
	and    %r8,%rdi                                 #! PC = 0x555555555b88
	xor    %rcx,%rsi                                #! PC = 0x555555555b8b
	lea    (%rdi,%rdi,2),%rcx                       #! PC = 0x555555555b8e
	mov    %rax,%rdi                                #! PC = 0x555555555b92
	lea    (%rcx,%rcx,8),%rcx                       #! PC = 0x555555555b95
	shr    $0x2,%rdi                                #! PC = 0x555555555b99
	xor    %rcx,%rdx                                #! PC = 0x555555555b9d
	and    $0x1,%edi                                #! PC = 0x555555555ba0
	imul   %rdx,%rdi                                #! PC = 0x555555555ba3
	lea    (%rdx,%rdx,1),%rcx                       #! PC = 0x555555555ba7
	shr    $0x7,%rdx                                #! PC = 0x555555555bab
	and    %r8,%rdx                                 #! PC = 0x555555555baf
	and    %r9,%rcx                                 #! PC = 0x555555555bb2
	lea    (%rdx,%rdx,2),%rdx                       #! PC = 0x555555555bb5
	xor    %rsi,%rdi                                #! PC = 0x555555555bb9
	mov    %rax,%rsi                                #! PC = 0x555555555bbc
	lea    (%rdx,%rdx,8),%rdx                       #! PC = 0x555555555bbf
	shr    $0x3,%rsi                                #! PC = 0x555555555bc3
	xor    %rdx,%rcx                                #! PC = 0x555555555bc7
	and    $0x1,%esi                                #! PC = 0x555555555bca
	lea    (%rcx,%rcx,1),%rdx                       #! PC = 0x555555555bcd
	imul   %rcx,%rsi                                #! PC = 0x555555555bd1
	shr    $0x7,%rcx                                #! PC = 0x555555555bd5
	and    %r9,%rdx                                 #! PC = 0x555555555bd9
	and    %r8,%rcx                                 #! PC = 0x555555555bdc
	lea    (%rcx,%rcx,2),%rcx                       #! PC = 0x555555555bdf
	xor    %rdi,%rsi                                #! PC = 0x555555555be3
	mov    %rax,%rdi                                #! PC = 0x555555555be6
	lea    (%rcx,%rcx,8),%rcx                       #! PC = 0x555555555be9
	shr    $0x4,%rdi                                #! PC = 0x555555555bed
	xor    %rcx,%rdx                                #! PC = 0x555555555bf1
	and    $0x1,%edi                                #! PC = 0x555555555bf4
	lea    (%rdx,%rdx,1),%rcx                       #! PC = 0x555555555bf7
	imul   %rdx,%rdi                                #! PC = 0x555555555bfb
	shr    $0x7,%rdx                                #! PC = 0x555555555bff
	and    %r9,%rcx                                 #! PC = 0x555555555c03
	and    %r8,%rdx                                 #! PC = 0x555555555c06
	lea    (%rdx,%rdx,2),%rdx                       #! PC = 0x555555555c09
	xor    %rsi,%rdi                                #! PC = 0x555555555c0d
	mov    %rax,%rsi                                #! PC = 0x555555555c10
	lea    (%rdx,%rdx,8),%rdx                       #! PC = 0x555555555c13
	shr    $0x5,%rsi                                #! PC = 0x555555555c17
	xor    %rdx,%rcx                                #! PC = 0x555555555c1b
	and    $0x1,%esi                                #! PC = 0x555555555c1e
	lea    (%rcx,%rcx,1),%rdx                       #! PC = 0x555555555c21
	imul   %rcx,%rsi                                #! PC = 0x555555555c25
	shr    $0x7,%rcx                                #! PC = 0x555555555c29
	and    %r9,%rdx                                 #! PC = 0x555555555c2d
	and    %r8,%rcx                                 #! PC = 0x555555555c30
	lea    (%rcx,%rcx,2),%rcx                       #! PC = 0x555555555c33
	lea    (%rcx,%rcx,8),%rcx                       #! PC = 0x555555555c37
	xor    %rdi,%rsi                                #! PC = 0x555555555c3b
	xor    %rcx,%rdx                                #! PC = 0x555555555c3e
	mov    %rax,%rcx                                #! PC = 0x555555555c41
	shr    $0x7,%rax                                #! PC = 0x555555555c44
	shr    $0x6,%rcx                                #! PC = 0x555555555c48
	and    $0x1,%ecx                                #! PC = 0x555555555c4c
	imul   %rdx,%rcx                                #! PC = 0x555555555c4f
	xor    %rsi,%rcx                                #! PC = 0x555555555c53
	lea    (%rdx,%rdx,1),%rsi                       #! PC = 0x555555555c56
	shr    $0x7,%rdx                                #! PC = 0x555555555c5a
	and    %r8,%rdx                                 #! PC = 0x555555555c5e
	and    %r9,%rsi                                 #! PC = 0x555555555c61
	lea    (%rdx,%rdx,2),%rdx                       #! PC = 0x555555555c64
	lea    (%rdx,%rdx,8),%rdx                       #! PC = 0x555555555c68
	xor    %rsi,%rdx                                #! PC = 0x555555555c6c
	imul   %rdx,%rax                                #! PC = 0x555555555c6f
	xor    %rcx,%rax                                #! PC = 0x555555555c73
	#! <- SP = 0x7fffffffac28
	#ret                                            #! PC = 0x555555555c76
	mov    %rax,-0x8(%r10)                          #! EA = L0x7fffffffad08; PC = 0x55555555630f
	cmp    %r10,%r11                                #! PC = 0x555555556313
	#jne    0x555555556300 <_gf256v_mul_scalar_u64_aligned+64>#! PC = 0x555555556316
	and    $0x7,%ebx                                #! PC = 0x555555556318
	mov    %ebx,%r12d                               #! PC = 0x55555555631b
	lea    -0x30(%rbp),%r10                         #! PC = 0x55555555631e
	xor    %eax,%eax                                #! PC = 0x555555556322
	test   %ebx,%ebx                                #! PC = 0x555555556324
	#je     0x555555556367 <_gf256v_mul_scalar_u64_aligned+167>#! PC = 0x555555556326
	mov    -0x28(%rbp),%rax                         #! EA = L0x7fffffffac38; Value = 0xbee116706e9a4300; PC = 0x555555556367
	sub    %fs:0x28,%rax                            #! PC = 0x55555555636b
	#jne    0x55555555638d <_gf256v_mul_scalar_u64_aligned+205>#! PC = 0x555555556374
	add    $0x18,%rsp                               #! PC = 0x555555556376
	pop    %rbx                                     #! EA = L0x7fffffffac48; Value = 0x00007ffffffface0; PC = 0x55555555637a
	pop    %r12                                     #! EA = L0x7fffffffac50; Value = 0x0000000000000000; PC = 0x55555555637b
	pop    %r13                                     #! EA = L0x7fffffffac58; Value = 0x0000000000000180; PC = 0x55555555637d
	pop    %rbp                                     #! EA = L0x7fffffffac60; Value = 0x00007fffffffacd0; PC = 0x55555555637f
	#! <- SP = 0x7fffffffac68
	#ret                                            #! PC = 0x555555556380
